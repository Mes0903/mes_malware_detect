
a3fc5947f17bc2c211144370c3f6309ffd8bed993244cf30eb5997c58a86927e.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	sub    esp,0x18
   1060e:	push   0x0
   10610:	push   0x18
   10612:	lea    eax,[ebp-0x18]
   10615:	push   eax
   10616:	push   0x0
   10618:	push   DWORD PTR [ebp+0x8]
   1061b:	call   0x1177a
   10620:	call   eax
   10622:	test   eax,eax
   10624:	jl     0x1062b
   10626:	mov    eax,DWORD PTR [ebp-0x8]
   10629:	jmp    0x1062d
   1062b:	xor    eax,eax
   1062d:	leave  
   1062e:	ret    0x4
   10631:	int3   
   10632:	int3   
   10633:	int3   
   10634:	int3   
   10635:	int3   
   10636:	mov    edi,edi
   10638:	push   ebp
   10639:	mov    ebp,esp
   1063b:	mov    eax,DWORD PTR [ebp+0xc]
   1063e:	xor    eax,DWORD PTR [ebp+0x10]
   10641:	and    eax,0x7ffffffe
   10646:	xor    eax,DWORD PTR [ebp+0xc]
   10649:	shr    eax,1
   1064b:	xor    eax,DWORD PTR [ebp+0x8]
   1064e:	mov    DWORD PTR [ebp+0xc],eax
   10651:	xor    DWORD PTR [ebp+0xc],0x5
   10655:	xor    DWORD PTR [ebp+0xc],0x1
   10659:	xor    DWORD PTR [ebp+0xc],0x4
   1065d:	mov    eax,DWORD PTR [ebp+0x10]
   10660:	and    al,0x1
   10662:	movzx  ecx,al
   10665:	mov    eax,DWORD PTR [ebp+0xc]
   10668:	neg    ecx
   1066a:	sbb    ecx,ecx
   1066c:	and    ecx,0x9908b0df
   10672:	xor    eax,ecx
   10674:	pop    ebp
   10675:	ret    0xc
   10678:	int3   
   10679:	int3   
   1067a:	int3   
   1067b:	int3   
   1067c:	int3   
   1067d:	int3   
   1067e:	mov    edi,edi
   10680:	push   ebp
   10681:	mov    ebp,esp
   10683:	sub    esp,0x14
   10686:	mov    DWORD PTR [ebp-0x14],ecx
   10689:	mov    eax,DWORD PTR [ebp-0x14]
   1068c:	mov    DWORD PTR [ebp-0x8],eax
   1068f:	mov    eax,DWORD PTR [ebp-0x14]
   10692:	mov    DWORD PTR [ebp-0x10],eax
   10695:	mov    DWORD PTR [ebp-0x4],0x1
   1069c:	mov    DWORD PTR [ebp-0xc],0x509
   106a3:	mov    eax,DWORD PTR [ebp-0x8]
   106a6:	mov    ecx,DWORD PTR [ebp+0x8]
   106a9:	mov    DWORD PTR [eax],ecx
   106ab:	mov    eax,DWORD PTR [ebp-0x8]
   106ae:	add    eax,0x4
   106b1:	mov    DWORD PTR [ebp-0x8],eax
   106b4:	jmp    0x106bd
   106b6:	mov    eax,DWORD PTR [ebp-0x4]
   106b9:	inc    eax
   106ba:	mov    DWORD PTR [ebp-0x4],eax
   106bd:	cmp    DWORD PTR [ebp-0x4],0x270
   106c4:	jge    0x106f9
   106c6:	mov    eax,DWORD PTR [ebp-0x10]
   106c9:	mov    eax,DWORD PTR [eax]
   106cb:	shr    eax,0x1e
   106ce:	mov    ecx,DWORD PTR [ebp-0x10]
   106d1:	xor    eax,DWORD PTR [ecx]
   106d3:	imul   eax,eax,0x15747d
   106d9:	imul   eax,DWORD PTR [ebp-0xc]
   106dd:	add    eax,DWORD PTR [ebp-0x4]
   106e0:	mov    ecx,DWORD PTR [ebp-0x8]
   106e3:	mov    DWORD PTR [ecx],eax
   106e5:	mov    eax,DWORD PTR [ebp-0x8]
   106e8:	add    eax,0x4
   106eb:	mov    DWORD PTR [ebp-0x8],eax
   106ee:	mov    eax,DWORD PTR [ebp-0x10]
   106f1:	add    eax,0x4
   106f4:	mov    DWORD PTR [ebp-0x10],eax
   106f7:	jmp    0x106b6
   106f9:	leave  
   106fa:	ret    0x4
   106fd:	int3   
   106fe:	int3   
   106ff:	int3   
   10700:	int3   
   10701:	int3   
   10702:	mov    edi,edi
   10704:	push   ebp
   10705:	mov    ebp,esp
   10707:	push   ecx
   10708:	push   ebx
   10709:	push   esi
   1070a:	push   edi
   1070b:	mov    edi,ecx
   1070d:	mov    esi,edi
   1070f:	mov    ebx,0xe3
   10714:	push   DWORD PTR [esi+0x4]
   10717:	mov    ecx,edi
   10719:	push   DWORD PTR [esi]
   1071b:	dec    ebx
   1071c:	push   DWORD PTR [esi+0x634]
   10722:	call   0x10636
   10727:	mov    DWORD PTR [esi],eax
   10729:	add    esi,0x4
   1072c:	test   ebx,ebx
   1072e:	jne    0x10714
   10730:	mov    DWORD PTR [ebp-0x4],0x18c
   10737:	lea    ebx,[esi+0x4]
   1073a:	push   DWORD PTR [ebx]
   1073c:	mov    ecx,edi
   1073e:	push   DWORD PTR [esi]
   10740:	push   DWORD PTR [esi-0x38c]
   10746:	call   0x10636
   1074b:	dec    DWORD PTR [ebp-0x4]
   1074e:	mov    DWORD PTR [esi],eax
   10750:	mov    esi,ebx
   10752:	jne    0x10737
   10754:	push   DWORD PTR [edi]
   10756:	mov    ecx,edi
   10758:	push   DWORD PTR [esi]
   1075a:	push   DWORD PTR [esi-0x38c]
   10760:	call   0x10636
   10765:	mov    DWORD PTR [esi],eax
   10767:	mov    DWORD PTR [edi+0x9c4],0x270
   10771:	mov    DWORD PTR [edi+0x9c0],edi
   10777:	pop    edi
   10778:	pop    esi
   10779:	pop    ebx
   1077a:	leave  
   1077b:	ret    
   1077c:	int3   
   1077d:	int3   
   1077e:	int3   
   1077f:	int3   
   10780:	int3   
   10781:	int3   
   10782:	mov    edi,edi
   10784:	push   ebp
   10785:	mov    ebp,esp
   10787:	push   esi
   10788:	push   DWORD PTR [ebp+0x8]
   1078b:	mov    esi,ecx
   1078d:	call   0x1067e
   10792:	mov    ecx,esi
   10794:	call   0x10702
   10799:	pop    esi
   1079a:	pop    ebp
   1079b:	ret    0x4
   1079e:	int3   
   1079f:	int3   
   107a0:	int3   
   107a1:	int3   
   107a2:	int3   
   107a3:	int3   
   107a4:	mov    edi,edi
   107a6:	push   esi
   107a7:	push   edi
   107a8:	mov    edi,ecx
   107aa:	lea    esi,[edi+0x9c4]
   107b0:	cmp    DWORD PTR [esi],0x0
   107b3:	jne    0x107ba
   107b5:	call   0x10702
   107ba:	dec    DWORD PTR [esi]
   107bc:	lea    eax,[edi+0x9c0]
   107c2:	mov    edx,DWORD PTR [eax]
   107c4:	mov    ecx,DWORD PTR [edx]
   107c6:	add    edx,0x4
   107c9:	mov    DWORD PTR [eax],edx
   107cb:	mov    eax,ecx
   107cd:	shr    eax,0xb
   107d0:	xor    ecx,eax
   107d2:	mov    eax,ecx
   107d4:	and    eax,0xff3a58ad
   107d9:	shl    eax,0x7
   107dc:	xor    ecx,eax
   107de:	mov    eax,ecx
   107e0:	and    eax,0xffffdf8c
   107e5:	shl    eax,0xf
   107e8:	xor    ecx,eax
   107ea:	mov    eax,ecx
   107ec:	shr    eax,0x12
   107ef:	pop    edi
   107f0:	xor    eax,ecx
   107f2:	pop    esi
   107f3:	ret    
   107f4:	int3   
   107f5:	int3   
   107f6:	int3   
   107f7:	int3   
   107f8:	int3   
   107f9:	int3   
   107fa:	mov    edi,edi
   107fc:	push   ebp
   107fd:	mov    ebp,esp
   107ff:	push   esi
   10800:	mov    esi,DWORD PTR [ebp+0x8]
   10803:	shr    esi,1
   10805:	or     esi,DWORD PTR [ebp+0x8]
   10808:	push   edi
   10809:	mov    eax,esi
   1080b:	shr    eax,0x2
   1080e:	or     esi,eax
   10810:	mov    eax,esi
   10812:	shr    eax,0x4
   10815:	or     esi,eax
   10817:	mov    eax,esi
   10819:	shr    eax,0x8
   1081c:	or     esi,eax
   1081e:	mov    eax,esi
   10820:	shr    eax,0x10
   10823:	mov    edi,ecx
   10825:	or     esi,eax
   10827:	mov    ecx,edi
   10829:	call   0x107a4
   1082e:	and    eax,esi
   10830:	cmp    eax,DWORD PTR [ebp+0x8]
   10833:	ja     0x10827
   10835:	pop    edi
   10836:	pop    esi
   10837:	pop    ebp
   10838:	ret    0x4
   1083b:	int3   
   1083c:	int3   
   1083d:	int3   
   1083e:	int3   
   1083f:	int3   
   10840:	mov    edi,edi
   10842:	push   ebp
   10843:	mov    ebp,esp
   10845:	sub    esp,0xa04
   1084b:	push   ebx
   1084c:	push   esi
   1084d:	mov    esi,DWORD PTR [ebp+0x14]
   10850:	push   edi
   10851:	test   esi,esi
   10853:	jne    0x1092e
   10859:	xor    ecx,ecx
   1085b:	lea    eax,[ebp-0x3c]
   1085e:	mov    edx,0xff
   10863:	shl    edx,cl
   10865:	and    edx,DWORD PTR [ebp+0x8]
   10868:	shr    edx,cl
   1086a:	inc    ecx
   1086b:	inc    ecx
   1086c:	mov    DWORD PTR [eax],edx
   1086e:	add    eax,0x4
   10871:	cmp    ecx,0x14
   10874:	jne    0x1085e
   10876:	mov    ebx,DWORD PTR [ebp+0xc]
   10879:	xor    eax,eax
   1087b:	mov    WORD PTR [ebx],ax
   1087e:	mov    eax,DWORD PTR [ebp-0x3c]
   10881:	push   0x5
   10883:	cdq    
   10884:	pop    ecx
   10885:	idiv   ecx
   10887:	mov    DWORD PTR [ebp-0x14],0x1dec4
   1088e:	mov    DWORD PTR [ebp-0x10],0x1deba
   10895:	mov    DWORD PTR [ebp-0xc],0x1deb2
   1089c:	mov    DWORD PTR [ebp-0x8],0x1dea8
   108a3:	mov    DWORD PTR [ebp-0x4],0x1de9e
   108aa:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   108ae:	mov    ecx,edx
   108b0:	mov    ax,WORD PTR [edx]
   108b3:	inc    edx
   108b4:	inc    edx
   108b5:	test   ax,ax
   108b8:	jne    0x108b0
   108ba:	sub    edx,ecx
   108bc:	mov    edi,ebx
   108be:	dec    edi
   108bf:	mov    esi,ecx
   108c1:	dec    edi
   108c2:	mov    ax,WORD PTR [edi+0x2]
   108c6:	inc    edi
   108c7:	inc    edi
   108c8:	test   ax,ax
   108cb:	jne    0x108c2
   108cd:	mov    ecx,edx
   108cf:	shr    ecx,0x2
   108d2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   108d4:	mov    ecx,edx
   108d6:	and    ecx,0x3
   108d9:	mov    eax,ebx
   108db:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   108dd:	lea    ecx,[eax+0x2]
   108e0:	mov    dx,WORD PTR [eax]
   108e3:	inc    eax
   108e4:	inc    eax
   108e5:	test   dx,dx
   108e8:	jne    0x108e0
   108ea:	sub    eax,ecx
   108ec:	sar    eax,1
   108ee:	mov    ecx,eax
   108f0:	mov    eax,DWORD PTR [ebp-0x38]
   108f3:	push   0x3
   108f5:	cdq    
   108f6:	pop    esi
   108f7:	idiv   esi
   108f9:	cmp    edx,0xfffffffe
   108fc:	jle    0x109e3
   10902:	add    edx,0x2
   10905:	lea    esi,[ebp-0x34]
   10908:	mov    DWORD PTR [ebp+0x8],edx
   1090b:	mov    eax,DWORD PTR [esi]
   1090d:	cdq    
   1090e:	push   0x1a
   10910:	pop    edi
   10911:	idiv   edi
   10913:	add    esi,0x4
   10916:	xor    eax,eax
   10918:	add    edx,0x61
   1091b:	mov    WORD PTR [ebx+ecx*2],dx
   1091f:	inc    ecx
   10920:	dec    DWORD PTR [ebp+0x8]
   10923:	mov    WORD PTR [ebx+ecx*2],ax
   10927:	jne    0x1090b
   10929:	jmp    0x109e3
   1092e:	cmp    esi,0x1
   10931:	je     0x1093e
   10933:	mov    eax,esi
   10935:	imul   eax,eax,0xa
   10938:	add    eax,DWORD PTR [ebp+0x10]
   1093b:	add    DWORD PTR [ebp+0x8],eax
   1093e:	push   DWORD PTR [ebp+0x8]
   10941:	lea    ecx,[ebp-0xa04]
   10947:	call   0x10782
   1094c:	lea    eax,[esi-0x1]
   1094f:	cmp    eax,0x6
   10952:	ja     0x10963
   10954:	imul   esi,esi,0x3
   10957:	add    esi,DWORD PTR [ebp+0x10]
   1095a:	mov    esi,DWORD PTR [esi*4+0x7eabc]
   10961:	jmp    0x10968
   10963:	mov    esi,0x1de9c
   10968:	mov    ebx,DWORD PTR [ebp+0xc]
   1096b:	xor    eax,eax
   1096d:	mov    WORD PTR [ebx],ax
   10970:	mov    eax,esi
   10972:	mov    edx,esi
   10974:	mov    cx,WORD PTR [eax]
   10977:	inc    eax
   10978:	inc    eax
   10979:	test   cx,cx
   1097c:	jne    0x10974
   1097e:	sub    eax,edx
   10980:	mov    edi,ebx
   10982:	dec    edi
   10983:	dec    edi
   10984:	mov    cx,WORD PTR [edi+0x2]
   10988:	inc    edi
   10989:	inc    edi
   1098a:	test   cx,cx
   1098d:	jne    0x10984
   1098f:	mov    ecx,eax
   10991:	shr    ecx,0x2
   10994:	mov    esi,edx
   10996:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10998:	mov    ecx,eax
   1099a:	and    ecx,0x3
   1099d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1099f:	nop
   109a0:	mov    eax,ebx
   109a2:	lea    ecx,[eax+0x2]
   109a5:	mov    dx,WORD PTR [eax]
   109a8:	inc    eax
   109a9:	inc    eax
   109aa:	test   dx,dx
   109ad:	jne    0x109a5
   109af:	sub    eax,ecx
   109b1:	sar    eax,1
   109b3:	push   0x5
   109b5:	mov    esi,eax
   109b7:	pop    edi
   109b8:	push   0x23
   109ba:	lea    ecx,[ebp-0xa04]
   109c0:	call   0x107fa
   109c5:	cmp    eax,0xa
   109c8:	jae    0x109cf
   109ca:	add    eax,0x30
   109cd:	jmp    0x109d2
   109cf:	add    eax,0x57
   109d2:	movzx  eax,ax
   109d5:	mov    WORD PTR [ebx+esi*2],ax
   109d9:	inc    esi
   109da:	xor    eax,eax
   109dc:	dec    edi
   109dd:	mov    WORD PTR [ebx+esi*2],ax
   109e1:	jne    0x109b8
   109e3:	pop    edi
   109e4:	pop    esi
   109e5:	pop    ebx
   109e6:	leave  
   109e7:	ret    0x10
   109ea:	int3   
   109eb:	int3   
   109ec:	int3   
   109ed:	int3   
   109ee:	int3   
   109ef:	int3   
   109f0:	mov    edi,edi
   109f2:	push   ebp
   109f3:	mov    ebp,esp
   109f5:	mov    eax,DWORD PTR [ebp+0x8]
   109f8:	lea    edx,[eax+0x2]
   109fb:	mov    cx,WORD PTR [eax]
   109fe:	inc    eax
   109ff:	inc    eax
   10a00:	test   cx,cx
   10a03:	jne    0x109fb
   10a05:	sub    eax,edx
   10a07:	sar    eax,1
   10a09:	pop    ebp
   10a0a:	ret    0x4
   10a0d:	int3   
   10a0e:	int3   
   10a0f:	int3   
   10a10:	int3   
   10a11:	int3   
   10a12:	mov    eax,ecx
   10a14:	ret    
   10a15:	int3   
   10a16:	int3   
   10a17:	int3   
   10a18:	int3   
   10a19:	int3   
   10a1a:	ret    
   10a1b:	int3   
   10a1c:	int3   
   10a1d:	int3   
   10a1e:	int3   
   10a1f:	int3   
   10a20:	mov    edi,edi
   10a22:	push   ebp
   10a23:	mov    ebp,esp
   10a25:	push   esi
   10a26:	mov    esi,DWORD PTR [ebp+0x8]
   10a29:	push   edi
   10a2a:	mov    edi,DWORD PTR [ebp+0xc]
   10a2d:	jmp    0x10a7d
   10a2f:	push   0x0
   10a31:	push   0x100
   10a36:	push   edi
   10a37:	push   esi
   10a38:	call   0x1dab6
   10a3d:	lea    eax,[eax*8+0x7eed0]
   10a44:	add    DWORD PTR [eax],esi
   10a46:	adc    DWORD PTR [eax+0x4],edi
   10a49:	test   edi,edi
   10a4b:	jl     0x10a86
   10a4d:	jg     0x10a53
   10a4f:	test   esi,esi
   10a51:	jbe    0x10a86
   10a53:	mov    eax,esi
   10a55:	xor    ecx,ecx
   10a57:	and    eax,0x1
   10a5a:	or     eax,ecx
   10a5c:	push   ecx
   10a5d:	jne    0x10a6a
   10a5f:	push   0x2
   10a61:	push   edi
   10a62:	push   esi
   10a63:	call   0x1daaa
   10a68:	jmp    0x10a79
   10a6a:	push   0x3
   10a6c:	push   edi
   10a6d:	push   esi
   10a6e:	call   0x1da9e
   10a73:	add    eax,0x1
   10a76:	adc    edx,0x0
   10a79:	mov    edi,edx
   10a7b:	mov    esi,eax
   10a7d:	cmp    esi,0x4
   10a80:	jne    0x10a2f
   10a82:	test   edi,edi
   10a84:	jne    0x10a2f
   10a86:	mov    edx,edi
   10a88:	pop    edi
   10a89:	mov    eax,esi
   10a8b:	pop    esi
   10a8c:	pop    ebp
   10a8d:	ret    0x8
   10a90:	int3   
   10a91:	int3   
   10a92:	int3   
   10a93:	int3   
   10a94:	int3   
   10a95:	int3   
   10a96:	mov    edi,edi
   10a98:	push   ebp
   10a99:	mov    ebp,esp
   10a9b:	push   esi
   10a9c:	push   0x20
   10a9e:	push   0x61737973
   10aa3:	push   DWORD PTR [ebp+0x8]
   10aa6:	push   0x1
   10aa8:	call   DWORD PTR ds:0x1f018
   10aae:	mov    esi,eax
   10ab0:	test   esi,esi
   10ab2:	jne    0x10abf
   10ab4:	push   0xc000009a
   10ab9:	call   DWORD PTR ds:0x1f014
   10abf:	mov    eax,esi
   10ac1:	pop    esi
   10ac2:	pop    ebp
   10ac3:	ret    
   10ac4:	int3   
   10ac5:	int3   
   10ac6:	int3   
   10ac7:	int3   
   10ac8:	int3   
   10ac9:	int3   
   10aca:	mov    edi,edi
   10acc:	push   esi
   10acd:	mov    esi,ecx
   10acf:	dec    DWORD PTR [esi+0x4]
   10ad2:	jne    0x10ae3
   10ad4:	push   DWORD PTR [esi]
   10ad6:	call   0x1da40
   10adb:	push   esi
   10adc:	call   0x1da40
   10ae1:	pop    ecx
   10ae2:	pop    ecx
   10ae3:	pop    esi
   10ae4:	ret    
   10ae5:	int3   
   10ae6:	int3   
   10ae7:	int3   
   10ae8:	int3   
   10ae9:	int3   
   10aea:	mov    edi,edi
   10aec:	push   ebp
   10aed:	mov    ebp,esp
   10aef:	push   esi
   10af0:	xor    esi,esi
   10af2:	xor    edx,edx
   10af4:	cmp    DWORD PTR [ebp+0xc],esi
   10af7:	je     0x10b14
   10af9:	mov    eax,DWORD PTR [ebp+0x8]
   10afc:	mov    ecx,DWORD PTR [ebp+0x10]
   10aff:	mov    cl,BYTE PTR [edx+ecx*1]
   10b02:	add    eax,esi
   10b04:	xor    BYTE PTR [eax],cl
   10b06:	lea    eax,[edx+0x1]
   10b09:	xor    edx,edx
   10b0b:	div    DWORD PTR [ebp+0x14]
   10b0e:	inc    esi
   10b0f:	cmp    esi,DWORD PTR [ebp+0xc]
   10b12:	jne    0x10af9
   10b14:	pop    esi
   10b15:	pop    ebp
   10b16:	ret    0x10
   10b19:	int3   
   10b1a:	int3   
   10b1b:	int3   
   10b1c:	int3   
   10b1d:	int3   
   10b1e:	mov    edi,edi
   10b20:	push   ebp
   10b21:	mov    ebp,esp
   10b23:	mov    ecx,DWORD PTR [ebp+0x8]
   10b26:	mov    eax,ecx
   10b28:	lea    edx,[eax+0x2]
   10b2b:	push   esi
   10b2c:	mov    si,WORD PTR [eax]
   10b2f:	inc    eax
   10b30:	inc    eax
   10b31:	test   si,si
   10b34:	jne    0x10b2c
   10b36:	sub    eax,edx
   10b38:	sar    eax,1
   10b3a:	cmp    eax,0xc
   10b3d:	jae    0x10b46
   10b3f:	xor    al,al
   10b41:	jmp    0x10c14
   10b46:	lea    eax,[ecx+eax*2-0x18]
   10b4a:	movzx  ecx,WORD PTR [eax]
   10b4d:	cmp    cx,0x69
   10b51:	je     0x10b59
   10b53:	cmp    cx,0x49
   10b57:	jne    0x10b3f
   10b59:	movzx  ecx,WORD PTR [eax+0x2]
   10b5d:	push   0x45
   10b5f:	pop    esi
   10b60:	push   0x65
   10b62:	pop    edx
   10b63:	cmp    cx,dx
   10b66:	je     0x10b6d
   10b68:	cmp    cx,si
   10b6b:	jne    0x10b3f
   10b6d:	movzx  ecx,WORD PTR [eax+0x4]
   10b71:	cmp    cx,0x78
   10b75:	je     0x10b7d
   10b77:	cmp    cx,0x58
   10b7b:	jne    0x10b3f
   10b7d:	movzx  ecx,WORD PTR [eax+0x6]
   10b81:	cmp    cx,0x70
   10b85:	je     0x10b8d
   10b87:	cmp    cx,0x50
   10b8b:	jne    0x10b3f
   10b8d:	movzx  ecx,WORD PTR [eax+0x8]
   10b91:	cmp    cx,0x6c
   10b95:	je     0x10b9d
   10b97:	cmp    cx,0x4c
   10b9b:	jne    0x10b3f
   10b9d:	movzx  ecx,WORD PTR [eax+0xa]
   10ba1:	cmp    cx,0x6f
   10ba5:	je     0x10bad
   10ba7:	cmp    cx,0x4f
   10bab:	jne    0x10b3f
   10bad:	movzx  ecx,WORD PTR [eax+0xc]
   10bb1:	cmp    cx,0x52
   10bb5:	je     0x10bbd
   10bb7:	cmp    cx,0x72
   10bbb:	jne    0x10b3f
   10bbd:	movzx  ecx,WORD PTR [eax+0xe]
   10bc1:	cmp    cx,dx
   10bc4:	je     0x10bcf
   10bc6:	cmp    cx,si
   10bc9:	jne    0x10b3f
   10bcf:	cmp    WORD PTR [eax+0x10],0x2e
   10bd4:	jne    0x10b3f
   10bda:	movzx  ecx,WORD PTR [eax+0x12]
   10bde:	cmp    cx,dx
   10be1:	je     0x10bec
   10be3:	cmp    cx,si
   10be6:	jne    0x10b3f
   10bec:	movzx  ecx,WORD PTR [eax+0x14]
   10bf0:	cmp    cx,0x78
   10bf4:	je     0x10c00
   10bf6:	cmp    cx,0x58
   10bfa:	jne    0x10b3f
   10c00:	movzx  eax,WORD PTR [eax+0x16]
   10c04:	cmp    ax,dx
   10c07:	je     0x10c12
   10c09:	cmp    ax,si
   10c0c:	jne    0x10b3f
   10c12:	mov    al,0x1
   10c14:	pop    esi
   10c15:	pop    ebp
   10c16:	ret    0x4
   10c19:	int3   
   10c1a:	int3   
   10c1b:	int3   
   10c1c:	int3   
   10c1d:	int3   
   10c1e:	mov    edi,edi
   10c20:	push   ebp
   10c21:	mov    ebp,esp
   10c23:	mov    ecx,DWORD PTR [ebp+0x8]
   10c26:	mov    eax,ecx
   10c28:	lea    edx,[eax+0x2]
   10c2b:	push   esi
   10c2c:	mov    si,WORD PTR [eax]
   10c2f:	inc    eax
   10c30:	inc    eax
   10c31:	test   si,si
   10c34:	jne    0x10c2c
   10c36:	sub    eax,edx
   10c38:	sar    eax,1
   10c3a:	pop    esi
   10c3b:	cmp    eax,0xb
   10c3e:	jae    0x10c47
   10c40:	xor    al,al
   10c42:	jmp    0x10d03
   10c47:	lea    eax,[ecx+eax*2-0x16]
   10c4b:	movzx  ecx,WORD PTR [eax]
   10c4e:	cmp    cx,0x66
   10c52:	je     0x10c5a
   10c54:	cmp    cx,0x46
   10c58:	jne    0x10c40
   10c5a:	movzx  ecx,WORD PTR [eax+0x2]
   10c5e:	cmp    cx,0x69
   10c62:	je     0x10c6a
   10c64:	cmp    cx,0x49
   10c68:	jne    0x10c40
   10c6a:	movzx  ecx,WORD PTR [eax+0x4]
   10c6e:	cmp    cx,0x72
   10c72:	je     0x10c7a
   10c74:	cmp    cx,0x52
   10c78:	jne    0x10c40
   10c7a:	movzx  ecx,WORD PTR [eax+0x6]
   10c7e:	cmp    cx,0x65
   10c82:	je     0x10c8a
   10c84:	cmp    cx,0x45
   10c88:	jne    0x10c40
   10c8a:	movzx  ecx,WORD PTR [eax+0x8]
   10c8e:	cmp    cx,0x66
   10c92:	je     0x10c9a
   10c94:	cmp    cx,0x46
   10c98:	jne    0x10c40
   10c9a:	movzx  ecx,WORD PTR [eax+0xa]
   10c9e:	cmp    cx,0x6f
   10ca2:	je     0x10caa
   10ca4:	cmp    cx,0x4f
   10ca8:	jne    0x10c40
   10caa:	movzx  ecx,WORD PTR [eax+0xc]
   10cae:	cmp    cx,0x58
   10cb2:	je     0x10cba
   10cb4:	cmp    cx,0x78
   10cb8:	jne    0x10c40
   10cba:	cmp    WORD PTR [eax+0xe],0x2e
   10cbf:	jne    0x10c40
   10cc5:	movzx  ecx,WORD PTR [eax+0x10]
   10cc9:	cmp    cx,0x65
   10ccd:	je     0x10cd9
   10ccf:	cmp    cx,0x45
   10cd3:	jne    0x10c40
   10cd9:	movzx  ecx,WORD PTR [eax+0x12]
   10cdd:	cmp    cx,0x78
   10ce1:	je     0x10ced
   10ce3:	cmp    cx,0x58
   10ce7:	jne    0x10c40
   10ced:	movzx  eax,WORD PTR [eax+0x14]
   10cf1:	cmp    ax,0x65
   10cf5:	je     0x10d01
   10cf7:	cmp    ax,0x45
   10cfb:	jne    0x10c40
   10d01:	mov    al,0x1
   10d03:	pop    ebp
   10d04:	ret    0x4
   10d07:	int3   
   10d08:	int3   
   10d09:	int3   
   10d0a:	int3   
   10d0b:	int3   
   10d0c:	mov    edi,edi
   10d0e:	push   ebp
   10d0f:	mov    ebp,esp
   10d11:	mov    ecx,DWORD PTR [ebp+0x8]
   10d14:	mov    eax,ecx
   10d16:	lea    edx,[eax+0x2]
   10d19:	push   esi
   10d1a:	mov    si,WORD PTR [eax]
   10d1d:	inc    eax
   10d1e:	inc    eax
   10d1f:	test   si,si
   10d22:	jne    0x10d1a
   10d24:	sub    eax,edx
   10d26:	sar    eax,1
   10d28:	pop    esi
   10d29:	cmp    eax,0xa
   10d2c:	jae    0x10d35
   10d2e:	xor    al,al
   10d30:	jmp    0x10ddd
   10d35:	lea    eax,[ecx+eax*2-0x14]
   10d39:	movzx  ecx,WORD PTR [eax]
   10d3c:	cmp    cx,0x63
   10d40:	je     0x10d48
   10d42:	cmp    cx,0x43
   10d46:	jne    0x10d2e
   10d48:	movzx  ecx,WORD PTR [eax+0x2]
   10d4c:	cmp    cx,0x68
   10d50:	je     0x10d58
   10d52:	cmp    cx,0x48
   10d56:	jne    0x10d2e
   10d58:	movzx  ecx,WORD PTR [eax+0x4]
   10d5c:	cmp    cx,0x72
   10d60:	je     0x10d68
   10d62:	cmp    cx,0x52
   10d66:	jne    0x10d2e
   10d68:	movzx  ecx,WORD PTR [eax+0x6]
   10d6c:	cmp    cx,0x6f
   10d70:	je     0x10d78
   10d72:	cmp    cx,0x4f
   10d76:	jne    0x10d2e
   10d78:	movzx  ecx,WORD PTR [eax+0x8]
   10d7c:	cmp    cx,0x6d
   10d80:	je     0x10d88
   10d82:	cmp    cx,0x4d
   10d86:	jne    0x10d2e
   10d88:	movzx  ecx,WORD PTR [eax+0xa]
   10d8c:	cmp    cx,0x65
   10d90:	je     0x10d98
   10d92:	cmp    cx,0x45
   10d96:	jne    0x10d2e
   10d98:	cmp    WORD PTR [eax+0xc],0x2e
   10d9d:	jne    0x10d2e
   10d9f:	movzx  ecx,WORD PTR [eax+0xe]
   10da3:	cmp    cx,0x65
   10da7:	je     0x10db3
   10da9:	cmp    cx,0x45
   10dad:	jne    0x10d2e
   10db3:	movzx  ecx,WORD PTR [eax+0x10]
   10db7:	cmp    cx,0x78
   10dbb:	je     0x10dc7
   10dbd:	cmp    cx,0x58
   10dc1:	jne    0x10d2e
   10dc7:	movzx  eax,WORD PTR [eax+0x12]
   10dcb:	cmp    ax,0x65
   10dcf:	je     0x10ddb
   10dd1:	cmp    ax,0x45
   10dd5:	jne    0x10d2e
   10ddb:	mov    al,0x1
   10ddd:	pop    ebp
   10dde:	ret    0x4
   10de1:	int3   
   10de2:	int3   
   10de3:	int3   
   10de4:	int3   
   10de5:	int3   
   10de6:	mov    edi,edi
   10de8:	push   ebp
   10de9:	mov    ebp,esp
   10deb:	push   DWORD PTR [ebp+0x8]
   10dee:	call   0x10b1e
   10df3:	test   al,al
   10df5:	je     0x10dfc
   10df7:	xor    eax,eax
   10df9:	inc    eax
   10dfa:	jmp    0x10e1f
   10dfc:	push   DWORD PTR [ebp+0x8]
   10dff:	call   0x10c1e
   10e04:	test   al,al
   10e06:	je     0x10e0d
   10e08:	push   0x2
   10e0a:	pop    eax
   10e0b:	jmp    0x10e1f
   10e0d:	push   DWORD PTR [ebp+0x8]
   10e10:	call   0x10d0c
   10e15:	movzx  eax,al
   10e18:	neg    eax
   10e1a:	sbb    eax,eax
   10e1c:	and    eax,0x3
   10e1f:	pop    ebp
   10e20:	ret    0x4
   10e23:	int3   
   10e24:	int3   
   10e25:	int3   
   10e26:	int3   
   10e27:	int3   
   10e28:	mov    edi,edi
   10e2a:	push   ebp
   10e2b:	mov    ebp,esp
   10e2d:	sub    esp,0x10
   10e30:	push   esi
   10e31:	push   edi
   10e32:	xor    eax,eax
   10e34:	mov    WORD PTR [ebp-0x8],ax
   10e38:	lea    edi,[ebp-0x6]
   10e3b:	stos   DWORD PTR es:[edi],eax
   10e3c:	stos   WORD PTR es:[edi],ax
   10e3e:	mov    eax,DWORD PTR [ebp+0xc]
   10e41:	mov    DWORD PTR [ebp-0x4],eax
   10e44:	lea    ecx,[eax+0x2]
   10e47:	mov    dx,WORD PTR [eax]
   10e4a:	inc    eax
   10e4b:	inc    eax
   10e4c:	test   dx,dx
   10e4f:	jne    0x10e47
   10e51:	mov    esi,DWORD PTR [ebp+0x8]
   10e54:	movzx  edx,WORD PTR [esi]
   10e57:	sub    eax,ecx
   10e59:	sar    eax,1
   10e5b:	lea    ecx,[eax+eax*1]
   10e5e:	mov    WORD PTR [ebp-0x8],cx
   10e62:	mov    WORD PTR [ebp-0x6],cx
   10e66:	cmp    dx,cx
   10e69:	jb     0x10ea8
   10e6b:	xor    eax,eax
   10e6d:	lea    edi,[ebp-0xe]
   10e70:	stos   DWORD PTR es:[edi],eax
   10e71:	stos   WORD PTR es:[edi],ax
   10e73:	mov    WORD PTR [ebp-0x10],cx
   10e77:	mov    WORD PTR [ebp-0xe],cx
   10e7b:	movzx  eax,dx
   10e7e:	movzx  ecx,cx
   10e81:	sub    eax,ecx
   10e83:	mov    ecx,DWORD PTR [esi+0x4]
   10e86:	cdq    
   10e87:	sub    eax,edx
   10e89:	sar    eax,1
   10e8b:	lea    eax,[ecx+eax*2]
   10e8e:	mov    DWORD PTR [ebp-0xc],eax
   10e91:	push   0x1
   10e93:	lea    eax,[ebp-0x8]
   10e96:	push   eax
   10e97:	lea    eax,[ebp-0x10]
   10e9a:	push   eax
   10e9b:	call   DWORD PTR ds:0x1f020
   10ea1:	neg    eax
   10ea3:	sbb    eax,eax
   10ea5:	inc    eax
   10ea6:	jmp    0x10eaa
   10ea8:	xor    al,al
   10eaa:	pop    edi
   10eab:	pop    esi
   10eac:	leave  
   10ead:	ret    0x8
   10eb0:	int3   
   10eb1:	int3   
   10eb2:	int3   
   10eb3:	int3   
   10eb4:	int3   
   10eb5:	int3   
   10eb6:	mov    edi,edi
   10eb8:	push   ebp
   10eb9:	mov    ebp,esp
   10ebb:	push   ebx
   10ebc:	xor    eax,eax
   10ebe:	push   eax
   10ebf:	push   eax
   10ec0:	push   eax
   10ec1:	push   eax
   10ec2:	mov    ebx,0x7eb4c
   10ec7:	push   ebx
   10ec8:	call   DWORD PTR ds:0x1f028
   10ece:	test   eax,eax
   10ed0:	jge    0x10ed6
   10ed2:	xor    al,al
   10ed4:	jmp    0x10ef9
   10ed6:	push   esi
   10ed7:	mov    esi,DWORD PTR [ebp+0x8]
   10eda:	push   edi
   10edb:	imul   esi,esi,0x14
   10ede:	mov    edi,DWORD PTR [ebp+0xc]
   10ee1:	push   0x5
   10ee3:	pop    ecx
   10ee4:	push   0x0
   10ee6:	add    esi,0x7ed9c
   10eec:	push   ebx
   10eed:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10eef:	call   DWORD PTR ds:0x1f024
   10ef5:	pop    edi
   10ef6:	mov    al,0x1
   10ef8:	pop    esi
   10ef9:	pop    ebx
   10efa:	pop    ebp
   10efb:	ret    0x8
   10efe:	int3   
   10eff:	int3   
   10f00:	int3   
   10f01:	int3   
   10f02:	int3   
   10f03:	int3   
   10f04:	mov    edi,edi
   10f06:	push   ebp
   10f07:	mov    ebp,esp
   10f09:	push   ebx
   10f0a:	xor    eax,eax
   10f0c:	push   eax
   10f0d:	push   eax
   10f0e:	push   eax
   10f0f:	push   eax
   10f10:	mov    ebx,0x7eb4c
   10f15:	push   ebx
   10f16:	call   DWORD PTR ds:0x1f028
   10f1c:	test   eax,eax
   10f1e:	jl     0x10f41
   10f20:	push   esi
   10f21:	mov    esi,DWORD PTR [ebp+0xc]
   10f24:	push   edi
   10f25:	mov    edi,DWORD PTR [ebp+0x8]
   10f28:	imul   edi,edi,0x14
   10f2b:	push   0x5
   10f2d:	pop    ecx
   10f2e:	push   0x0
   10f30:	add    edi,0x7ed9c
   10f36:	push   ebx
   10f37:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f39:	call   DWORD PTR ds:0x1f024
   10f3f:	pop    edi
   10f40:	pop    esi
   10f41:	pop    ebx
   10f42:	pop    ebp
   10f43:	ret    0x8
   10f46:	int3   
   10f47:	int3   
   10f48:	int3   
   10f49:	int3   
   10f4a:	int3   
   10f4b:	int3   
   10f4c:	mov    edi,edi
   10f4e:	push   ebp
   10f4f:	mov    ebp,esp
   10f51:	sub    esp,0x14
   10f54:	and    DWORD PTR [ebp-0x14],0x0
   10f58:	push   edi
   10f59:	xor    eax,eax
   10f5b:	lea    edi,[ebp-0x10]
   10f5e:	stos   DWORD PTR es:[edi],eax
   10f5f:	stos   DWORD PTR es:[edi],eax
   10f60:	stos   DWORD PTR es:[edi],eax
   10f61:	stos   DWORD PTR es:[edi],eax
   10f62:	lea    eax,[ebp-0x14]
   10f65:	push   eax
   10f66:	push   DWORD PTR [ebp+0x8]
   10f69:	call   0x10f04
   10f6e:	pop    edi
   10f6f:	leave  
   10f70:	ret    0x4
   10f73:	int3   
   10f74:	int3   
   10f75:	int3   
   10f76:	int3   
   10f77:	int3   
   10f78:	mov    edi,edi
   10f7a:	push   ebp
   10f7b:	mov    ebp,esp
   10f7d:	push   ebx
   10f7e:	xor    eax,eax
   10f80:	push   eax
   10f81:	push   eax
   10f82:	push   eax
   10f83:	push   eax
   10f84:	mov    ebx,0x7ecd8
   10f89:	push   ebx
   10f8a:	call   DWORD PTR ds:0x1f028
   10f90:	test   eax,eax
   10f92:	jl     0x10fae
   10f94:	push   esi
   10f95:	mov    esi,DWORD PTR [ebp+0x8]
   10f98:	push   edi
   10f99:	push   0x40
   10f9b:	pop    ecx
   10f9c:	push   0x0
   10f9e:	mov    edi,0x7edc8
   10fa3:	push   ebx
   10fa4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10fa6:	call   DWORD PTR ds:0x1f024
   10fac:	pop    edi
   10fad:	pop    esi
   10fae:	pop    ebx
   10faf:	pop    ebp
   10fb0:	ret    0x4
   10fb3:	int3   
   10fb4:	int3   
   10fb5:	int3   
   10fb6:	int3   
   10fb7:	int3   
   10fb8:	mov    edi,edi
   10fba:	push   ebp
   10fbb:	mov    ebp,esp
   10fbd:	push   ebx
   10fbe:	xor    eax,eax
   10fc0:	push   eax
   10fc1:	push   eax
   10fc2:	push   eax
   10fc3:	push   eax
   10fc4:	mov    ebx,0x7ecd8
   10fc9:	push   ebx
   10fca:	call   DWORD PTR ds:0x1f028
   10fd0:	test   eax,eax
   10fd2:	jge    0x10fd8
   10fd4:	xor    al,al
   10fd6:	jmp    0x10ffe
   10fd8:	push   esi
   10fd9:	push   edi
   10fda:	mov    edi,DWORD PTR [ebp+0x8]
   10fdd:	push   0x40
   10fdf:	pop    ecx
   10fe0:	push   0x0
   10fe2:	mov    esi,0x7edc8
   10fe7:	push   ebx
   10fe8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10fea:	call   DWORD PTR ds:0x1f024
   10ff0:	xor    eax,eax
   10ff2:	cmp    WORD PTR ds:0x7edc8,ax
   10ff9:	pop    edi
   10ffa:	setne  al
   10ffd:	pop    esi
   10ffe:	pop    ebx
   10fff:	pop    ebp
   11000:	ret    0x4
   11003:	int3   
   11004:	int3   
   11005:	int3   
   11006:	int3   
   11007:	int3   
   11008:	mov    edi,edi
   1100a:	push   ebp
   1100b:	mov    ebp,esp
   1100d:	push   ebx
   1100e:	mov    ebx,DWORD PTR [ebp+0x8]
   11011:	cmp    ebx,0x40
   11014:	ja     0x11041
   11016:	push   esi
   11017:	push   edi
   11018:	xor    edi,edi
   1101a:	push   edi
   1101b:	push   edi
   1101c:	push   edi
   1101d:	push   edi
   1101e:	mov    esi,0x7ed14
   11023:	push   esi
   11024:	call   DWORD PTR ds:0x1f028
   1102a:	test   eax,eax
   1102c:	jl     0x1103f
   1102e:	push   edi
   1102f:	lea    eax,[ebx*4+0x7ebd8]
   11036:	inc    DWORD PTR [eax]
   11038:	push   esi
   11039:	call   DWORD PTR ds:0x1f024
   1103f:	pop    edi
   11040:	pop    esi
   11041:	pop    ebx
   11042:	pop    ebp
   11043:	ret    0x4
   11046:	int3   
   11047:	int3   
   11048:	int3   
   11049:	int3   
   1104a:	int3   
   1104b:	int3   
   1104c:	mov    edi,edi
   1104e:	push   ebp
   1104f:	mov    ebp,esp
   11051:	push   ebx
   11052:	push   esi
   11053:	push   edi
   11054:	mov    edi,DWORD PTR [ebp+0x8]
   11057:	cmp    edi,0x40
   1105a:	ja     0x11085
   1105c:	xor    ebx,ebx
   1105e:	push   ebx
   1105f:	push   ebx
   11060:	push   ebx
   11061:	push   ebx
   11062:	mov    esi,0x7ed14
   11067:	push   esi
   11068:	call   DWORD PTR ds:0x1f028
   1106e:	test   eax,eax
   11070:	jl     0x11085
   11072:	mov    edi,DWORD PTR [edi*4+0x7ebd8]
   11079:	push   ebx
   1107a:	push   esi
   1107b:	call   DWORD PTR ds:0x1f024
   11081:	mov    eax,edi
   11083:	jmp    0x11087
   11085:	xor    eax,eax
   11087:	pop    edi
   11088:	pop    esi
   11089:	pop    ebx
   1108a:	pop    ebp
   1108b:	ret    0x4
   1108e:	int3   
   1108f:	int3   
   11090:	int3   
   11091:	int3   
   11092:	int3   
   11093:	int3   
   11094:	mov    edi,edi
   11096:	push   ebp
   11097:	mov    ebp,esp
   11099:	push   esi
   1109a:	mov    esi,DWORD PTR [ebp+0x8]
   1109d:	push   edi
   1109e:	push   DWORD PTR [esi]
   110a0:	call   0x10a96
   110a5:	push   DWORD PTR [esi]
   110a7:	mov    edi,eax
   110a9:	push   esi
   110aa:	push   edi
   110ab:	call   0x1dac2
   110b0:	add    esp,0x10
   110b3:	mov    eax,edi
   110b5:	pop    edi
   110b6:	pop    esi
   110b7:	pop    ebp
   110b8:	ret    0x4
   110bb:	int3   
   110bc:	int3   
   110bd:	int3   
   110be:	int3   
   110bf:	int3   
   110c0:	mov    edi,edi
   110c2:	push   ebp
   110c3:	mov    ebp,esp
   110c5:	push   ecx
   110c6:	mov    DWORD PTR [ebp-0x4],0x1dace
   110cd:	leave  
   110ce:	ret    
   110cf:	int3   
   110d0:	int3   
   110d1:	int3   
   110d2:	int3   
   110d3:	int3   
   110d4:	mov    edi,edi
   110d6:	push   ebp
   110d7:	mov    ebp,esp
   110d9:	push   esi
   110da:	mov    esi,DWORD PTR [ebp+0xc]
   110dd:	push   edi
   110de:	mov    edi,ecx
   110e0:	cmp    esi,0xffffffff
   110e3:	jne    0x110f4
   110e5:	mov    esi,DWORD PTR [ebp+0x8]
   110e8:	lea    ecx,[esi+0x1]
   110eb:	mov    al,BYTE PTR [esi]
   110ed:	inc    esi
   110ee:	test   al,al
   110f0:	jne    0x110eb
   110f2:	sub    esi,ecx
   110f4:	lea    eax,[esi+0x1]
   110f7:	push   eax
   110f8:	call   0x10a96
   110fd:	pop    ecx
   110fe:	mov    DWORD PTR [edi],eax
   11100:	test   eax,eax
   11102:	jne    0x1110f
   11104:	push   0xc000009a
   11109:	call   DWORD PTR ds:0x1f014
   1110f:	mov    eax,DWORD PTR [edi]
   11111:	push   esi
   11112:	push   DWORD PTR [ebp+0x8]
   11115:	mov    BYTE PTR [esi+eax*1],0x0
   11119:	push   DWORD PTR [edi]
   1111b:	call   0x1dac2
   11120:	add    esp,0xc
   11123:	mov    DWORD PTR [edi+0x4],esi
   11126:	pop    edi
   11127:	pop    esi
   11128:	pop    ebp
   11129:	ret    0x8
   1112c:	int3   
   1112d:	int3   
   1112e:	int3   
   1112f:	int3   
   11130:	int3   
   11131:	int3   
   11132:	mov    edi,edi
   11134:	push   ebp
   11135:	mov    ebp,esp
   11137:	mov    eax,DWORD PTR [ebp+0x8]
   1113a:	mov    edx,DWORD PTR [ebp+0xc]
   1113d:	push   esi
   1113e:	xor    esi,esi
   11140:	jmp    0x11165
   11142:	mov    ecx,eax
   11144:	and    ecx,0x1
   11147:	or     ecx,esi
   11149:	push   esi
   1114a:	jne    0x11157
   1114c:	push   0x2
   1114e:	push   edx
   1114f:	push   eax
   11150:	call   0x1daaa
   11155:	jmp    0x11165
   11157:	push   0x3
   11159:	push   edx
   1115a:	push   eax
   1115b:	call   0x1da9e
   11160:	add    eax,0x1
   11163:	adc    edx,esi
   11165:	cmp    eax,0x4
   11168:	jne    0x11142
   1116a:	cmp    edx,esi
   1116c:	jne    0x11142
   1116e:	pop    esi
   1116f:	pop    ebp
   11170:	ret    0x8
   11173:	int3   
   11174:	int3   
   11175:	int3   
   11176:	int3   
   11177:	int3   
   11178:	mov    edi,edi
   1117a:	push   ebp
   1117b:	mov    ebp,esp
   1117d:	push   esi
   1117e:	push   edi
   1117f:	mov    edi,DWORD PTR [ebp+0xc]
   11182:	mov    esi,ecx
   11184:	cmp    edi,0xffffffff
   11187:	jne    0x11193
   11189:	push   DWORD PTR [ebp+0x8]
   1118c:	call   0x109f0
   11191:	mov    edi,eax
   11193:	xor    ecx,ecx
   11195:	push   0x2
   11197:	pop    edx
   11198:	lea    eax,[edi+0x1]
   1119b:	mul    edx
   1119d:	seto   cl
   111a0:	neg    ecx
   111a2:	or     ecx,eax
   111a4:	push   ecx
   111a5:	call   0x10a96
   111aa:	pop    ecx
   111ab:	mov    DWORD PTR [esi],eax
   111ad:	test   eax,eax
   111af:	jne    0x111bc
   111b1:	push   0xc000009a
   111b6:	call   DWORD PTR ds:0x1f014
   111bc:	mov    ecx,DWORD PTR [esi]
   111be:	lea    eax,[edi+edi*1]
   111c1:	push   eax
   111c2:	push   DWORD PTR [ebp+0x8]
   111c5:	xor    edx,edx
   111c7:	mov    WORD PTR [eax+ecx*1],dx
   111cb:	push   DWORD PTR [esi]
   111cd:	call   0x1dac2
   111d2:	add    esp,0xc
   111d5:	mov    DWORD PTR [esi+0x4],edi
   111d8:	pop    edi
   111d9:	pop    esi
   111da:	pop    ebp
   111db:	ret    0x8
   111de:	int3   
   111df:	int3   
   111e0:	int3   
   111e1:	int3   
   111e2:	int3   
   111e3:	int3   
   111e4:	mov    edi,edi
   111e6:	push   ebp
   111e7:	mov    ebp,esp
   111e9:	mov    eax,DWORD PTR [ebp+0x8]
   111ec:	mov    edx,DWORD PTR ds:0x7f6d0
   111f2:	jmp    0x111f6
   111f4:	mov    eax,ecx
   111f6:	mov    ecx,DWORD PTR [eax+0x8]
   111f9:	cmp    ecx,edx
   111fb:	jne    0x111f4
   111fd:	pop    ebp
   111fe:	ret    0x4
   11201:	int3   
   11202:	int3   
   11203:	int3   
   11204:	int3   
   11205:	int3   
   11206:	mov    edi,edi
   11208:	push   ebp
   11209:	mov    ebp,esp
   1120b:	mov    eax,DWORD PTR [ebp+0x8]
   1120e:	mov    edx,DWORD PTR ds:0x7f6d0
   11214:	jmp    0x11218
   11216:	mov    eax,ecx
   11218:	mov    ecx,DWORD PTR [eax]
   1121a:	cmp    ecx,edx
   1121c:	jne    0x11216
   1121e:	pop    ebp
   1121f:	ret    0x4
   11222:	int3   
   11223:	int3   
   11224:	int3   
   11225:	int3   
   11226:	int3   
   11227:	int3   
   11228:	mov    edi,edi
   1122a:	push   ebp
   1122b:	mov    ebp,esp
   1122d:	mov    eax,DWORD PTR [ebp+0x8]
   11230:	mov    edx,DWORD PTR ds:0x7f6d4
   11236:	jmp    0x1123a
   11238:	mov    eax,ecx
   1123a:	mov    ecx,DWORD PTR [eax+0x8]
   1123d:	cmp    ecx,edx
   1123f:	jne    0x11238
   11241:	pop    ebp
   11242:	ret    0x4
   11245:	int3   
   11246:	int3   
   11247:	int3   
   11248:	int3   
   11249:	int3   
   1124a:	mov    edi,edi
   1124c:	push   ebp
   1124d:	mov    ebp,esp
   1124f:	mov    eax,DWORD PTR [ebp+0x8]
   11252:	mov    edx,DWORD PTR ds:0x7f6d4
   11258:	jmp    0x1125c
   1125a:	mov    eax,ecx
   1125c:	mov    ecx,DWORD PTR [eax]
   1125e:	cmp    ecx,edx
   11260:	jne    0x1125a
   11262:	pop    ebp
   11263:	ret    0x4
   11266:	int3   
   11267:	int3   
   11268:	int3   
   11269:	int3   
   1126a:	int3   
   1126b:	int3   
   1126c:	mov    edi,edi
   1126e:	push   ebp
   1126f:	mov    ebp,esp
   11271:	mov    eax,DWORD PTR [ebp+0x8]
   11274:	mov    edx,DWORD PTR ds:0x7f6d8
   1127a:	jmp    0x1127e
   1127c:	mov    eax,ecx
   1127e:	mov    ecx,DWORD PTR [eax+0x8]
   11281:	cmp    ecx,edx
   11283:	jne    0x1127c
   11285:	pop    ebp
   11286:	ret    0x4
   11289:	int3   
   1128a:	int3   
   1128b:	int3   
   1128c:	int3   
   1128d:	int3   
   1128e:	mov    edi,edi
   11290:	push   ebp
   11291:	mov    ebp,esp
   11293:	mov    eax,DWORD PTR [ebp+0x8]
   11296:	mov    edx,DWORD PTR ds:0x7f6d8
   1129c:	jmp    0x112a0
   1129e:	mov    eax,ecx
   112a0:	mov    ecx,DWORD PTR [eax]
   112a2:	cmp    ecx,edx
   112a4:	jne    0x1129e
   112a6:	pop    ebp
   112a7:	ret    0x4
   112aa:	int3   
   112ab:	int3   
   112ac:	int3   
   112ad:	int3   
   112ae:	int3   
   112af:	int3   
   112b0:	mov    edi,edi
   112b2:	push   esi
   112b3:	mov    esi,ecx
   112b5:	mov    ecx,DWORD PTR [esi]
   112b7:	cmp    DWORD PTR [ecx+0x14],0x0
   112bb:	jne    0x112ca
   112bd:	mov    eax,DWORD PTR [ecx+0x4]
   112c0:	cmp    DWORD PTR [eax+0x4],ecx
   112c3:	jne    0x112ca
   112c5:	mov    eax,DWORD PTR [ecx+0x8]
   112c8:	jmp    0x112e7
   112ca:	mov    eax,DWORD PTR [ecx]
   112cc:	cmp    eax,DWORD PTR ds:0x7f6d0
   112d2:	je     0x112e0
   112d4:	push   eax
   112d5:	call   0x111e4
   112da:	jmp    0x112e7
   112dc:	mov    DWORD PTR [esi],eax
   112de:	mov    ecx,eax
   112e0:	mov    eax,DWORD PTR [ecx+0x4]
   112e3:	cmp    ecx,DWORD PTR [eax]
   112e5:	je     0x112dc
   112e7:	mov    DWORD PTR [esi],eax
   112e9:	pop    esi
   112ea:	ret    
   112eb:	int3   
   112ec:	int3   
   112ed:	int3   
   112ee:	int3   
   112ef:	int3   
   112f0:	mov    edi,edi
   112f2:	push   esi
   112f3:	mov    esi,ecx
   112f5:	mov    ecx,DWORD PTR [esi]
   112f7:	mov    eax,DWORD PTR [ecx+0x8]
   112fa:	cmp    eax,DWORD PTR ds:0x7f6d0
   11300:	je     0x1130e
   11302:	push   eax
   11303:	call   0x11206
   11308:	jmp    0x1131d
   1130a:	mov    DWORD PTR [esi],eax
   1130c:	mov    ecx,eax
   1130e:	mov    eax,DWORD PTR [ecx+0x4]
   11311:	cmp    ecx,DWORD PTR [eax+0x8]
   11314:	je     0x1130a
   11316:	mov    ecx,DWORD PTR [esi]
   11318:	cmp    DWORD PTR [ecx+0x8],eax
   1131b:	je     0x1131f
   1131d:	mov    DWORD PTR [esi],eax
   1131f:	pop    esi
   11320:	ret    
   11321:	int3   
   11322:	int3   
   11323:	int3   
   11324:	int3   
   11325:	int3   
   11326:	mov    edi,edi
   11328:	push   ebp
   11329:	mov    ebp,esp
   1132b:	mov    edx,DWORD PTR [ebp+0x8]
   1132e:	mov    eax,DWORD PTR [edx+0x8]
   11331:	push   esi
   11332:	mov    esi,DWORD PTR [eax]
   11334:	mov    DWORD PTR [edx+0x8],esi
   11337:	mov    esi,DWORD PTR [eax]
   11339:	cmp    esi,DWORD PTR ds:0x7f6dc
   1133f:	je     0x11344
   11341:	mov    DWORD PTR [esi+0x4],edx
   11344:	mov    esi,DWORD PTR [edx+0x4]
   11347:	mov    DWORD PTR [eax+0x4],esi
   1134a:	mov    ecx,DWORD PTR [ecx+0x4]
   1134d:	pop    esi
   1134e:	cmp    edx,DWORD PTR [ecx+0x4]
   11351:	jne    0x11358
   11353:	mov    DWORD PTR [ecx+0x4],eax
   11356:	jmp    0x11366
   11358:	mov    ecx,DWORD PTR [edx+0x4]
   1135b:	cmp    edx,DWORD PTR [ecx]
   1135d:	jne    0x11363
   1135f:	mov    DWORD PTR [ecx],eax
   11361:	jmp    0x11366
   11363:	mov    DWORD PTR [ecx+0x8],eax
   11366:	mov    DWORD PTR [eax],edx
   11368:	mov    DWORD PTR [edx+0x4],eax
   1136b:	pop    ebp
   1136c:	ret    0x4
   1136f:	int3   
   11370:	int3   
   11371:	int3   
   11372:	int3   
   11373:	int3   
   11374:	mov    edi,edi
   11376:	push   ebp
   11377:	mov    ebp,esp
   11379:	mov    eax,DWORD PTR [ebp+0x8]
   1137c:	mov    edx,DWORD PTR ds:0x7f6dc
   11382:	jmp    0x11386
   11384:	mov    eax,ecx
   11386:	mov    ecx,DWORD PTR [eax+0x8]
   11389:	cmp    ecx,edx
   1138b:	jne    0x11384
   1138d:	pop    ebp
   1138e:	ret    0x4
   11391:	int3   
   11392:	int3   
   11393:	int3   
   11394:	int3   
   11395:	int3   
   11396:	mov    edi,edi
   11398:	push   ebp
   11399:	mov    ebp,esp
   1139b:	mov    edx,DWORD PTR [ebp+0x8]
   1139e:	mov    eax,DWORD PTR [edx]
   113a0:	push   esi
   113a1:	mov    esi,DWORD PTR [eax+0x8]
   113a4:	mov    DWORD PTR [edx],esi
   113a6:	mov    esi,DWORD PTR [eax+0x8]
   113a9:	cmp    esi,DWORD PTR ds:0x7f6dc
   113af:	je     0x113b4
   113b1:	mov    DWORD PTR [esi+0x4],edx
   113b4:	mov    esi,DWORD PTR [edx+0x4]
   113b7:	mov    DWORD PTR [eax+0x4],esi
   113ba:	mov    ecx,DWORD PTR [ecx+0x4]
   113bd:	pop    esi
   113be:	cmp    edx,DWORD PTR [ecx+0x4]
   113c1:	jne    0x113c8
   113c3:	mov    DWORD PTR [ecx+0x4],eax
   113c6:	jmp    0x113d7
   113c8:	mov    ecx,DWORD PTR [edx+0x4]
   113cb:	cmp    edx,DWORD PTR [ecx+0x8]
   113ce:	jne    0x113d5
   113d0:	mov    DWORD PTR [ecx+0x8],eax
   113d3:	jmp    0x113d7
   113d5:	mov    DWORD PTR [ecx],eax
   113d7:	mov    DWORD PTR [eax+0x8],edx
   113da:	mov    DWORD PTR [edx+0x4],eax
   113dd:	pop    ebp
   113de:	ret    0x4
   113e1:	int3   
   113e2:	int3   
   113e3:	int3   
   113e4:	int3   
   113e5:	int3   
   113e6:	mov    edi,edi
   113e8:	push   esi
   113e9:	mov    esi,ecx
   113eb:	mov    ecx,DWORD PTR [esi]
   113ed:	cmp    DWORD PTR [ecx+0x68],0x0
   113f1:	jne    0x11400
   113f3:	mov    eax,DWORD PTR [ecx+0x4]
   113f6:	cmp    DWORD PTR [eax+0x4],ecx
   113f9:	jne    0x11400
   113fb:	mov    eax,DWORD PTR [ecx+0x8]
   113fe:	jmp    0x1141d
   11400:	mov    eax,DWORD PTR [ecx]
   11402:	cmp    eax,DWORD PTR ds:0x7f6dc
   11408:	je     0x11416
   1140a:	push   eax
   1140b:	call   0x11374
   11410:	jmp    0x1141d
   11412:	mov    DWORD PTR [esi],eax
   11414:	mov    ecx,eax
   11416:	mov    eax,DWORD PTR [ecx+0x4]
   11419:	cmp    ecx,DWORD PTR [eax]
   1141b:	je     0x11412
   1141d:	mov    DWORD PTR [esi],eax
   1141f:	pop    esi
   11420:	ret    
   11421:	int3   
   11422:	int3   
   11423:	int3   
   11424:	int3   
   11425:	int3   
   11426:	mov    edi,edi
   11428:	push   ebp
   11429:	mov    ebp,esp
   1142b:	mov    eax,DWORD PTR [ebp+0x8]
   1142e:	mov    edx,DWORD PTR ds:0x7f6e0
   11434:	jmp    0x11438
   11436:	mov    eax,ecx
   11438:	mov    ecx,DWORD PTR [eax+0x8]
   1143b:	cmp    ecx,edx
   1143d:	jne    0x11436
   1143f:	pop    ebp
   11440:	ret    0x4
   11443:	int3   
   11444:	int3   
   11445:	int3   
   11446:	int3   
   11447:	int3   
   11448:	mov    edi,edi
   1144a:	push   ebp
   1144b:	mov    ebp,esp
   1144d:	mov    eax,DWORD PTR [ebp+0x8]
   11450:	mov    edx,DWORD PTR ds:0x7f6e0
   11456:	jmp    0x1145a
   11458:	mov    eax,ecx
   1145a:	mov    ecx,DWORD PTR [eax]
   1145c:	cmp    ecx,edx
   1145e:	jne    0x11458
   11460:	pop    ebp
   11461:	ret    0x4
   11464:	int3   
   11465:	int3   
   11466:	int3   
   11467:	int3   
   11468:	int3   
   11469:	int3   
   1146a:	mov    edi,edi
   1146c:	push   esi
   1146d:	mov    esi,ecx
   1146f:	mov    ecx,DWORD PTR [esi]
   11471:	cmp    DWORD PTR [ecx+0x1c],0x0
   11475:	jne    0x11484
   11477:	mov    eax,DWORD PTR [ecx+0x4]
   1147a:	cmp    DWORD PTR [eax+0x4],ecx
   1147d:	jne    0x11484
   1147f:	mov    eax,DWORD PTR [ecx+0x8]
   11482:	jmp    0x114a1
   11484:	mov    eax,DWORD PTR [ecx]
   11486:	cmp    eax,DWORD PTR ds:0x7f6e0
   1148c:	je     0x1149a
   1148e:	push   eax
   1148f:	call   0x11426
   11494:	jmp    0x114a1
   11496:	mov    DWORD PTR [esi],eax
   11498:	mov    ecx,eax
   1149a:	mov    eax,DWORD PTR [ecx+0x4]
   1149d:	cmp    ecx,DWORD PTR [eax]
   1149f:	je     0x11496
   114a1:	mov    DWORD PTR [esi],eax
   114a3:	pop    esi
   114a4:	ret    
   114a5:	int3   
   114a6:	int3   
   114a7:	int3   
   114a8:	int3   
   114a9:	int3   
   114aa:	mov    edi,edi
   114ac:	push   ebp
   114ad:	mov    ebp,esp
   114af:	mov    eax,DWORD PTR [ebp+0x8]
   114b2:	mov    edx,DWORD PTR ds:0x7f6e4
   114b8:	jmp    0x114bc
   114ba:	mov    eax,ecx
   114bc:	mov    ecx,DWORD PTR [eax+0x8]
   114bf:	cmp    ecx,edx
   114c1:	jne    0x114ba
   114c3:	pop    ebp
   114c4:	ret    0x4
   114c7:	int3   
   114c8:	int3   
   114c9:	int3   
   114ca:	int3   
   114cb:	int3   
   114cc:	mov    edi,edi
   114ce:	push   ebp
   114cf:	mov    ebp,esp
   114d1:	mov    eax,DWORD PTR [ebp+0x8]
   114d4:	mov    edx,DWORD PTR ds:0x7f6e4
   114da:	jmp    0x114de
   114dc:	mov    eax,ecx
   114de:	mov    ecx,DWORD PTR [eax]
   114e0:	cmp    ecx,edx
   114e2:	jne    0x114dc
   114e4:	pop    ebp
   114e5:	ret    0x4
   114e8:	int3   
   114e9:	int3   
   114ea:	int3   
   114eb:	int3   
   114ec:	int3   
   114ed:	int3   
   114ee:	mov    edi,edi
   114f0:	push   esi
   114f1:	mov    esi,ecx
   114f3:	mov    ecx,DWORD PTR [esi]
   114f5:	cmp    DWORD PTR [ecx+0x14],0x0
   114f9:	jne    0x11508
   114fb:	mov    eax,DWORD PTR [ecx+0x4]
   114fe:	cmp    DWORD PTR [eax+0x4],ecx
   11501:	jne    0x11508
   11503:	mov    eax,DWORD PTR [ecx+0x8]
   11506:	jmp    0x11525
   11508:	mov    eax,DWORD PTR [ecx]
   1150a:	cmp    eax,DWORD PTR ds:0x7f6e4
   11510:	je     0x1151e
   11512:	push   eax
   11513:	call   0x114aa
   11518:	jmp    0x11525
   1151a:	mov    DWORD PTR [esi],eax
   1151c:	mov    ecx,eax
   1151e:	mov    eax,DWORD PTR [ecx+0x4]
   11521:	cmp    ecx,DWORD PTR [eax]
   11523:	je     0x1151a
   11525:	mov    DWORD PTR [esi],eax
   11527:	pop    esi
   11528:	ret    
   11529:	int3   
   1152a:	int3   
   1152b:	int3   
   1152c:	int3   
   1152d:	int3   
   1152e:	mov    edi,edi
   11530:	push   esi
   11531:	mov    esi,ecx
   11533:	mov    ecx,DWORD PTR [esi]
   11535:	cmp    DWORD PTR [ecx+0x70],0x0
   11539:	jne    0x11548
   1153b:	mov    eax,DWORD PTR [ecx+0x4]
   1153e:	cmp    DWORD PTR [eax+0x4],ecx
   11541:	jne    0x11548
   11543:	mov    eax,DWORD PTR [ecx+0x8]
   11546:	jmp    0x11565
   11548:	mov    eax,DWORD PTR [ecx]
   1154a:	cmp    eax,DWORD PTR ds:0x7f6d8
   11550:	je     0x1155e
   11552:	push   eax
   11553:	call   0x1126c
   11558:	jmp    0x11565
   1155a:	mov    DWORD PTR [esi],eax
   1155c:	mov    ecx,eax
   1155e:	mov    eax,DWORD PTR [ecx+0x4]
   11561:	cmp    ecx,DWORD PTR [eax]
   11563:	je     0x1155a
   11565:	mov    DWORD PTR [esi],eax
   11567:	pop    esi
   11568:	ret    
   11569:	int3   
   1156a:	int3   
   1156b:	int3   
   1156c:	int3   
   1156d:	int3   
   1156e:	mov    edi,edi
   11570:	push   esi
   11571:	mov    esi,ecx
   11573:	mov    ecx,DWORD PTR [esi]
   11575:	mov    eax,DWORD PTR [ecx+0x8]
   11578:	cmp    eax,DWORD PTR ds:0x7f6e0
   1157e:	je     0x1158c
   11580:	push   eax
   11581:	call   0x11448
   11586:	jmp    0x1159b
   11588:	mov    DWORD PTR [esi],eax
   1158a:	mov    ecx,eax
   1158c:	mov    eax,DWORD PTR [ecx+0x4]
   1158f:	cmp    ecx,DWORD PTR [eax+0x8]
   11592:	je     0x11588
   11594:	mov    ecx,DWORD PTR [esi]
   11596:	cmp    DWORD PTR [ecx+0x8],eax
   11599:	je     0x1159d
   1159b:	mov    DWORD PTR [esi],eax
   1159d:	pop    esi
   1159e:	ret    
   1159f:	int3   
   115a0:	int3   
   115a1:	int3   
   115a2:	int3   
   115a3:	int3   
   115a4:	mov    edi,edi
   115a6:	push   esi
   115a7:	mov    esi,ecx
   115a9:	mov    ecx,DWORD PTR [esi]
   115ab:	mov    eax,DWORD PTR [ecx+0x8]
   115ae:	cmp    eax,DWORD PTR ds:0x7f6e4
   115b4:	je     0x115c2
   115b6:	push   eax
   115b7:	call   0x114cc
   115bc:	jmp    0x115d1
   115be:	mov    DWORD PTR [esi],eax
   115c0:	mov    ecx,eax
   115c2:	mov    eax,DWORD PTR [ecx+0x4]
   115c5:	cmp    ecx,DWORD PTR [eax+0x8]
   115c8:	je     0x115be
   115ca:	mov    ecx,DWORD PTR [esi]
   115cc:	cmp    DWORD PTR [ecx+0x8],eax
   115cf:	je     0x115d3
   115d1:	mov    DWORD PTR [esi],eax
   115d3:	pop    esi
   115d4:	ret    
   115d5:	int3   
   115d6:	int3   
   115d7:	int3   
   115d8:	int3   
   115d9:	int3   
   115da:	mov    edi,edi
   115dc:	push   ebp
   115dd:	mov    ebp,esp
   115df:	mov    eax,DWORD PTR [ebp+0x8]
   115e2:	mov    edx,DWORD PTR ds:0x7f6ec
   115e8:	jmp    0x115ec
   115ea:	mov    eax,ecx
   115ec:	mov    ecx,DWORD PTR [eax+0x8]
   115ef:	cmp    ecx,edx
   115f1:	jne    0x115ea
   115f3:	pop    ebp
   115f4:	ret    0x4
   115f7:	int3   
   115f8:	int3   
   115f9:	int3   
   115fa:	int3   
   115fb:	int3   
   115fc:	mov    edi,edi
   115fe:	push   ebp
   115ff:	mov    ebp,esp
   11601:	push   ecx
   11602:	push   ecx
   11603:	mov    eax,DWORD PTR [ebp+0x8]
   11606:	mov    DWORD PTR [ebp-0x4],eax
   11609:	lea    ecx,[eax+0x2]
   1160c:	mov    dx,WORD PTR [eax]
   1160f:	inc    eax
   11610:	inc    eax
   11611:	test   dx,dx
   11614:	jne    0x1160c
   11616:	sub    eax,ecx
   11618:	sar    eax,1
   1161a:	mov    WORD PTR [ebp-0x8],ax
   1161e:	mov    eax,DWORD PTR [ebp-0x8]
   11621:	add    eax,eax
   11623:	mov    WORD PTR [ebp-0x6],ax
   11627:	mov    WORD PTR [ebp-0x8],ax
   1162b:	lea    eax,[ebp-0x8]
   1162e:	push   eax
   1162f:	call   DWORD PTR ds:0x1f068
   11635:	leave  
   11636:	ret    0x4
   11639:	int3   
   1163a:	int3   
   1163b:	int3   
   1163c:	int3   
   1163d:	int3   
   1163e:	mov    edi,edi
   11640:	push   ebp
   11641:	mov    ebp,esp
   11643:	cmp    DWORD PTR [ebp+0x8],0x0
   11647:	jge    0x1164d
   11649:	and    DWORD PTR [ebp+0x8],0x0
   1164d:	push   DWORD PTR [ebp+0x8]
   11650:	call   0x10a96
   11655:	pop    ecx
   11656:	pop    ebp
   11657:	ret    0x8
   1165a:	int3   
   1165b:	int3   
   1165c:	int3   
   1165d:	int3   
   1165e:	int3   
   1165f:	int3   
   11660:	mov    edi,edi
   11662:	push   ebp
   11663:	mov    ebp,esp
   11665:	mov    eax,DWORD PTR [ebp+0x8]
   11668:	test   eax,eax
   1166a:	je     0x11679
   1166c:	mov    ecx,DWORD PTR [ebp+0xc]
   1166f:	mov    edx,DWORD PTR [ecx]
   11671:	mov    DWORD PTR [eax],edx
   11673:	mov    ecx,DWORD PTR [ecx+0x4]
   11676:	mov    DWORD PTR [eax+0x4],ecx
   11679:	pop    ebp
   1167a:	ret    0x8
   1167d:	int3   
   1167e:	int3   
   1167f:	int3   
   11680:	int3   
   11681:	int3   
   11682:	mov    edi,edi
   11684:	push   ebp
   11685:	mov    ebp,esp
   11687:	push   esi
   11688:	mov    esi,ecx
   1168a:	call   0x12aa0
   1168f:	test   BYTE PTR [ebp+0x8],0x1
   11693:	je     0x1169c
   11695:	push   esi
   11696:	call   0x1da40
   1169b:	pop    ecx
   1169c:	mov    eax,esi
   1169e:	pop    esi
   1169f:	pop    ebp
   116a0:	ret    0x4
   116a3:	int3   
   116a4:	int3   
   116a5:	int3   
   116a6:	int3   
   116a7:	int3   
   116a8:	test   BYTE PTR ds:0x7f6f4,0x1
   116af:	jne    0x116c7
   116b1:	or     DWORD PTR ds:0x7f6f4,0x1
   116b8:	push   0x1df72
   116bd:	call   0x115fc
   116c2:	mov    ds:0x7f6f0,eax
   116c7:	mov    eax,ds:0x7f6f0
   116cc:	ret    
   116cd:	int3   
   116ce:	int3   
   116cf:	int3   
   116d0:	int3   
   116d1:	int3   
   116d2:	test   BYTE PTR ds:0x7f6fc,0x1
   116d9:	jne    0x116f1
   116db:	or     DWORD PTR ds:0x7f6fc,0x1
   116e2:	push   0x1df8e
   116e7:	call   0x115fc
   116ec:	mov    ds:0x7f6f8,eax
   116f1:	mov    eax,ds:0x7f6f8
   116f6:	ret    
   116f7:	int3   
   116f8:	int3   
   116f9:	int3   
   116fa:	int3   
   116fb:	int3   
   116fc:	test   BYTE PTR ds:0x7f704,0x1
   11703:	jne    0x1171b
   11705:	or     DWORD PTR ds:0x7f704,0x1
   1170c:	push   0x1dfc6
   11711:	call   0x115fc
   11716:	mov    ds:0x7f700,eax
   1171b:	mov    eax,ds:0x7f700
   11720:	ret    
   11721:	int3   
   11722:	int3   
   11723:	int3   
   11724:	int3   
   11725:	int3   
   11726:	test   BYTE PTR ds:0x7f70c,0x1
   1172d:	jne    0x11745
   1172f:	or     DWORD PTR ds:0x7f70c,0x1
   11736:	push   0x1dfe8
   1173b:	call   0x115fc
   11740:	mov    ds:0x7f708,eax
   11745:	mov    eax,ds:0x7f708
   1174a:	ret    
   1174b:	int3   
   1174c:	int3   
   1174d:	int3   
   1174e:	int3   
   1174f:	int3   
   11750:	test   BYTE PTR ds:0x7f714,0x1
   11757:	jne    0x1176f
   11759:	or     DWORD PTR ds:0x7f714,0x1
   11760:	push   0x1e028
   11765:	call   0x115fc
   1176a:	mov    ds:0x7f710,eax
   1176f:	mov    eax,ds:0x7f710
   11774:	ret    
   11775:	int3   
   11776:	int3   
   11777:	int3   
   11778:	int3   
   11779:	int3   
   1177a:	test   BYTE PTR ds:0x7f71c,0x1
   11781:	jne    0x11799
   11783:	or     DWORD PTR ds:0x7f71c,0x1
   1178a:	push   0x1e03e
   1178f:	call   0x115fc
   11794:	mov    ds:0x7f718,eax
   11799:	mov    eax,ds:0x7f718
   1179e:	ret    
   1179f:	int3   
   117a0:	int3   
   117a1:	int3   
   117a2:	int3   
   117a3:	int3   
   117a4:	test   BYTE PTR ds:0x7f724,0x1
   117ab:	jne    0x117c3
   117ad:	or     DWORD PTR ds:0x7f724,0x1
   117b4:	push   0x1e072
   117b9:	call   0x115fc
   117be:	mov    ds:0x7f720,eax
   117c3:	mov    eax,ds:0x7f720
   117c8:	ret    
   117c9:	int3   
   117ca:	int3   
   117cb:	int3   
   117cc:	int3   
   117cd:	int3   
   117ce:	test   BYTE PTR ds:0x7f72c,0x1
   117d5:	jne    0x117ed
   117d7:	or     DWORD PTR ds:0x7f72c,0x1
   117de:	push   0x1e0a4
   117e3:	call   0x115fc
   117e8:	mov    ds:0x7f728,eax
   117ed:	mov    eax,ds:0x7f728
   117f2:	ret    
   117f3:	int3   
   117f4:	int3   
   117f5:	int3   
   117f6:	int3   
   117f7:	int3   
   117f8:	test   BYTE PTR ds:0x7f734,0x1
   117ff:	jne    0x11817
   11801:	or     DWORD PTR ds:0x7f734,0x1
   11808:	push   0x1e0b8
   1180d:	call   0x115fc
   11812:	mov    ds:0x7f730,eax
   11817:	mov    eax,ds:0x7f730
   1181c:	ret    
   1181d:	int3   
   1181e:	int3   
   1181f:	int3   
   11820:	int3   
   11821:	int3   
   11822:	test   BYTE PTR ds:0x7f73c,0x1
   11829:	jne    0x11841
   1182b:	or     DWORD PTR ds:0x7f73c,0x1
   11832:	push   0x1e0d0
   11837:	call   0x115fc
   1183c:	mov    ds:0x7f738,eax
   11841:	mov    eax,ds:0x7f738
   11846:	ret    
   11847:	int3   
   11848:	int3   
   11849:	int3   
   1184a:	int3   
   1184b:	int3   
   1184c:	test   BYTE PTR ds:0x7f744,0x1
   11853:	jne    0x1186b
   11855:	or     DWORD PTR ds:0x7f744,0x1
   1185c:	push   0x1e0ec
   11861:	call   0x115fc
   11866:	mov    ds:0x7f740,eax
   1186b:	mov    eax,ds:0x7f740
   11870:	ret    
   11871:	int3   
   11872:	int3   
   11873:	int3   
   11874:	int3   
   11875:	int3   
   11876:	test   BYTE PTR ds:0x7f74c,0x1
   1187d:	jne    0x11895
   1187f:	or     DWORD PTR ds:0x7f74c,0x1
   11886:	push   0x1e126
   1188b:	call   0x115fc
   11890:	mov    ds:0x7f748,eax
   11895:	mov    eax,ds:0x7f748
   1189a:	ret    
   1189b:	int3   
   1189c:	int3   
   1189d:	int3   
   1189e:	int3   
   1189f:	int3   
   118a0:	test   BYTE PTR ds:0x7f754,0x1
   118a7:	jne    0x118bf
   118a9:	or     DWORD PTR ds:0x7f754,0x1
   118b0:	push   0x1e140
   118b5:	call   0x115fc
   118ba:	mov    ds:0x7f750,eax
   118bf:	mov    eax,ds:0x7f750
   118c4:	ret    
   118c5:	int3   
   118c6:	int3   
   118c7:	int3   
   118c8:	int3   
   118c9:	int3   
   118ca:	test   BYTE PTR ds:0x7f75c,0x1
   118d1:	jne    0x118e9
   118d3:	or     DWORD PTR ds:0x7f75c,0x1
   118da:	push   0x1e162
   118df:	call   0x115fc
   118e4:	mov    ds:0x7f758,eax
   118e9:	mov    eax,ds:0x7f758
   118ee:	ret    
   118ef:	int3   
   118f0:	int3   
   118f1:	int3   
   118f2:	int3   
   118f3:	int3   
   118f4:	test   BYTE PTR ds:0x7f764,0x1
   118fb:	jne    0x11913
   118fd:	or     DWORD PTR ds:0x7f764,0x1
   11904:	push   0x1e19c
   11909:	call   0x115fc
   1190e:	mov    ds:0x7f760,eax
   11913:	mov    eax,ds:0x7f760
   11918:	ret    
   11919:	int3   
   1191a:	int3   
   1191b:	int3   
   1191c:	int3   
   1191d:	int3   
   1191e:	test   BYTE PTR ds:0x7f76c,0x1
   11925:	jne    0x1193d
   11927:	or     DWORD PTR ds:0x7f76c,0x1
   1192e:	push   0x1e1c2
   11933:	call   0x115fc
   11938:	mov    ds:0x7f768,eax
   1193d:	mov    eax,ds:0x7f768
   11942:	ret    
   11943:	int3   
   11944:	int3   
   11945:	int3   
   11946:	int3   
   11947:	int3   
   11948:	test   BYTE PTR ds:0x7f774,0x1
   1194f:	jne    0x11967
   11951:	or     DWORD PTR ds:0x7f774,0x1
   11958:	push   0x1e1f2
   1195d:	call   0x115fc
   11962:	mov    ds:0x7f770,eax
   11967:	mov    eax,ds:0x7f770
   1196c:	ret    
   1196d:	int3   
   1196e:	int3   
   1196f:	int3   
   11970:	int3   
   11971:	int3   
   11972:	test   BYTE PTR ds:0x7f77c,0x1
   11979:	jne    0x11991
   1197b:	or     DWORD PTR ds:0x7f77c,0x1
   11982:	push   0x1e224
   11987:	call   0x115fc
   1198c:	mov    ds:0x7f778,eax
   11991:	mov    eax,ds:0x7f778
   11996:	ret    
   11997:	int3   
   11998:	int3   
   11999:	int3   
   1199a:	int3   
   1199b:	int3   
   1199c:	test   BYTE PTR ds:0x7f784,0x1
   119a3:	jne    0x119bb
   119a5:	or     DWORD PTR ds:0x7f784,0x1
   119ac:	push   0x1e242
   119b1:	call   0x115fc
   119b6:	mov    ds:0x7f780,eax
   119bb:	mov    eax,ds:0x7f780
   119c0:	ret    
   119c1:	int3   
   119c2:	int3   
   119c3:	int3   
   119c4:	int3   
   119c5:	int3   
   119c6:	test   BYTE PTR ds:0x7f78c,0x1
   119cd:	jne    0x119e5
   119cf:	or     DWORD PTR ds:0x7f78c,0x1
   119d6:	push   0x1e25c
   119db:	call   0x115fc
   119e0:	mov    ds:0x7f788,eax
   119e5:	mov    eax,ds:0x7f788
   119ea:	ret    
   119eb:	int3   
   119ec:	int3   
   119ed:	int3   
   119ee:	int3   
   119ef:	int3   
   119f0:	test   BYTE PTR ds:0x7f794,0x1
   119f7:	jne    0x11a0f
   119f9:	or     DWORD PTR ds:0x7f794,0x1
   11a00:	push   0x1e274
   11a05:	call   0x115fc
   11a0a:	mov    ds:0x7f790,eax
   11a0f:	mov    eax,ds:0x7f790
   11a14:	ret    
   11a15:	int3   
   11a16:	int3   
   11a17:	int3   
   11a18:	int3   
   11a19:	int3   
   11a1a:	test   BYTE PTR ds:0x7f79c,0x1
   11a21:	jne    0x11a39
   11a23:	or     DWORD PTR ds:0x7f79c,0x1
   11a2a:	push   0x1e292
   11a2f:	call   0x115fc
   11a34:	mov    ds:0x7f798,eax
   11a39:	mov    eax,ds:0x7f798
   11a3e:	ret    
   11a3f:	int3   
   11a40:	int3   
   11a41:	int3   
   11a42:	int3   
   11a43:	int3   
   11a44:	test   BYTE PTR ds:0x7f7a4,0x1
   11a4b:	jne    0x11a63
   11a4d:	or     DWORD PTR ds:0x7f7a4,0x1
   11a54:	push   0x1e2b2
   11a59:	call   0x115fc
   11a5e:	mov    ds:0x7f7a0,eax
   11a63:	mov    eax,ds:0x7f7a0
   11a68:	ret    
   11a69:	int3   
   11a6a:	int3   
   11a6b:	int3   
   11a6c:	int3   
   11a6d:	int3   
   11a6e:	test   BYTE PTR ds:0x7f7ac,0x1
   11a75:	jne    0x11a8d
   11a77:	or     DWORD PTR ds:0x7f7ac,0x1
   11a7e:	push   0x1e2d2
   11a83:	call   0x115fc
   11a88:	mov    ds:0x7f7a8,eax
   11a8d:	mov    eax,ds:0x7f7a8
   11a92:	ret    
   11a93:	int3   
   11a94:	int3   
   11a95:	int3   
   11a96:	int3   
   11a97:	int3   
   11a98:	test   BYTE PTR ds:0x7f7b4,0x1
   11a9f:	jne    0x11ab7
   11aa1:	or     DWORD PTR ds:0x7f7b4,0x1
   11aa8:	push   0x1e2f2
   11aad:	call   0x115fc
   11ab2:	mov    ds:0x7f7b0,eax
   11ab7:	mov    eax,ds:0x7f7b0
   11abc:	ret    
   11abd:	int3   
   11abe:	int3   
   11abf:	int3   
   11ac0:	int3   
   11ac1:	int3   
   11ac2:	test   BYTE PTR ds:0x7f7bc,0x1
   11ac9:	jne    0x11ae1
   11acb:	or     DWORD PTR ds:0x7f7bc,0x1
   11ad2:	push   0x1e308
   11ad7:	call   0x115fc
   11adc:	mov    ds:0x7f7b8,eax
   11ae1:	mov    eax,ds:0x7f7b8
   11ae6:	ret    
   11ae7:	int3   
   11ae8:	int3   
   11ae9:	int3   
   11aea:	int3   
   11aeb:	int3   
   11aec:	test   BYTE PTR ds:0x7f7c4,0x1
   11af3:	jne    0x11b0b
   11af5:	or     DWORD PTR ds:0x7f7c4,0x1
   11afc:	push   0x1e332
   11b01:	call   0x115fc
   11b06:	mov    ds:0x7f7c0,eax
   11b0b:	mov    eax,ds:0x7f7c0
   11b10:	ret    
   11b11:	int3   
   11b12:	int3   
   11b13:	int3   
   11b14:	int3   
   11b15:	int3   
   11b16:	test   BYTE PTR ds:0x7f7cc,0x1
   11b1d:	jne    0x11b35
   11b1f:	or     DWORD PTR ds:0x7f7cc,0x1
   11b26:	push   0x1e34a
   11b2b:	call   0x115fc
   11b30:	mov    ds:0x7f7c8,eax
   11b35:	mov    eax,ds:0x7f7c8
   11b3a:	ret    
   11b3b:	int3   
   11b3c:	int3   
   11b3d:	int3   
   11b3e:	int3   
   11b3f:	int3   
   11b40:	test   BYTE PTR ds:0x7f7d4,0x1
   11b47:	jne    0x11b5f
   11b49:	or     DWORD PTR ds:0x7f7d4,0x1
   11b50:	push   0x1e378
   11b55:	call   0x115fc
   11b5a:	mov    ds:0x7f7d0,eax
   11b5f:	mov    eax,ds:0x7f7d0
   11b64:	ret    
   11b65:	int3   
   11b66:	int3   
   11b67:	int3   
   11b68:	int3   
   11b69:	int3   
   11b6a:	test   BYTE PTR ds:0x7f7dc,0x1
   11b71:	jne    0x11b89
   11b73:	or     DWORD PTR ds:0x7f7dc,0x1
   11b7a:	push   0x1e3a2
   11b7f:	call   0x115fc
   11b84:	mov    ds:0x7f7d8,eax
   11b89:	mov    eax,ds:0x7f7d8
   11b8e:	ret    
   11b8f:	int3   
   11b90:	int3   
   11b91:	int3   
   11b92:	int3   
   11b93:	int3   
   11b94:	test   BYTE PTR ds:0x7f7e4,0x1
   11b9b:	jne    0x11bb3
   11b9d:	or     DWORD PTR ds:0x7f7e4,0x1
   11ba4:	push   0x1e3c0
   11ba9:	call   0x115fc
   11bae:	mov    ds:0x7f7e0,eax
   11bb3:	mov    eax,ds:0x7f7e0
   11bb8:	ret    
   11bb9:	int3   
   11bba:	int3   
   11bbb:	int3   
   11bbc:	int3   
   11bbd:	int3   
   11bbe:	test   BYTE PTR ds:0x7f7ec,0x1
   11bc5:	jne    0x11bdd
   11bc7:	or     DWORD PTR ds:0x7f7ec,0x1
   11bce:	push   0x1e3ee
   11bd3:	call   0x115fc
   11bd8:	mov    ds:0x7f7e8,eax
   11bdd:	mov    eax,ds:0x7f7e8
   11be2:	ret    
   11be3:	int3   
   11be4:	int3   
   11be5:	int3   
   11be6:	int3   
   11be7:	int3   
   11be8:	test   BYTE PTR ds:0x7f7f4,0x1
   11bef:	jne    0x11c07
   11bf1:	or     DWORD PTR ds:0x7f7f4,0x1
   11bf8:	push   0x1e414
   11bfd:	call   0x115fc
   11c02:	mov    ds:0x7f7f0,eax
   11c07:	mov    eax,ds:0x7f7f0
   11c0c:	ret    
   11c0d:	int3   
   11c0e:	int3   
   11c0f:	int3   
   11c10:	int3   
   11c11:	int3   
   11c12:	test   BYTE PTR ds:0x7f7fc,0x1
   11c19:	jne    0x11c31
   11c1b:	or     DWORD PTR ds:0x7f7fc,0x1
   11c22:	push   0x1e43e
   11c27:	call   0x115fc
   11c2c:	mov    ds:0x7f7f8,eax
   11c31:	mov    eax,ds:0x7f7f8
   11c36:	ret    
   11c37:	int3   
   11c38:	int3   
   11c39:	int3   
   11c3a:	int3   
   11c3b:	int3   
   11c3c:	test   BYTE PTR ds:0x7f804,0x1
   11c43:	jne    0x11c5b
   11c45:	or     DWORD PTR ds:0x7f804,0x1
   11c4c:	push   0x1e462
   11c51:	call   0x115fc
   11c56:	mov    ds:0x7f800,eax
   11c5b:	mov    eax,ds:0x7f800
   11c60:	ret    
   11c61:	int3   
   11c62:	int3   
   11c63:	int3   
   11c64:	int3   
   11c65:	int3   
   11c66:	test   BYTE PTR ds:0x7f80c,0x1
   11c6d:	jne    0x11c85
   11c6f:	or     DWORD PTR ds:0x7f80c,0x1
   11c76:	push   0x1e48c
   11c7b:	call   0x115fc
   11c80:	mov    ds:0x7f808,eax
   11c85:	mov    eax,ds:0x7f808
   11c8a:	ret    
   11c8b:	int3   
   11c8c:	int3   
   11c8d:	int3   
   11c8e:	int3   
   11c8f:	int3   
   11c90:	test   BYTE PTR ds:0x7f814,0x1
   11c97:	jne    0x11caf
   11c99:	or     DWORD PTR ds:0x7f814,0x1
   11ca0:	push   0x1e4b6
   11ca5:	call   0x115fc
   11caa:	mov    ds:0x7f810,eax
   11caf:	mov    eax,ds:0x7f810
   11cb4:	ret    
   11cb5:	int3   
   11cb6:	int3   
   11cb7:	int3   
   11cb8:	int3   
   11cb9:	int3   
   11cba:	test   BYTE PTR ds:0x7f81c,0x1
   11cc1:	jne    0x11cd9
   11cc3:	or     DWORD PTR ds:0x7f81c,0x1
   11cca:	push   0x1e4ec
   11ccf:	call   0x115fc
   11cd4:	mov    ds:0x7f818,eax
   11cd9:	mov    eax,ds:0x7f818
   11cde:	ret    
   11cdf:	int3   
   11ce0:	int3   
   11ce1:	int3   
   11ce2:	int3   
   11ce3:	int3   
   11ce4:	call   0x116a8
   11ce9:	test   eax,eax
   11ceb:	jne    0x11cf0
   11ced:	xor    eax,eax
   11cef:	ret    
   11cf0:	call   0x116d2
   11cf5:	test   eax,eax
   11cf7:	je     0x11ced
   11cf9:	call   0x116fc
   11cfe:	test   eax,eax
   11d00:	je     0x11ced
   11d02:	call   0x11726
   11d07:	test   eax,eax
   11d09:	je     0x11ced
   11d0b:	call   0x11750
   11d10:	test   eax,eax
   11d12:	je     0x11ced
   11d14:	call   0x1177a
   11d19:	test   eax,eax
   11d1b:	je     0x11ced
   11d1d:	call   0x117a4
   11d22:	test   eax,eax
   11d24:	je     0x11ced
   11d26:	call   0x117ce
   11d2b:	test   eax,eax
   11d2d:	je     0x11ced
   11d2f:	call   0x117f8
   11d34:	test   eax,eax
   11d36:	je     0x11ced
   11d38:	call   0x11822
   11d3d:	test   eax,eax
   11d3f:	je     0x11ced
   11d41:	call   0x1184c
   11d46:	test   eax,eax
   11d48:	je     0x11ced
   11d4a:	call   0x11876
   11d4f:	test   eax,eax
   11d51:	je     0x11ced
   11d53:	call   0x118a0
   11d58:	test   eax,eax
   11d5a:	je     0x11ced
   11d5c:	call   0x118ca
   11d61:	test   eax,eax
   11d63:	je     0x11ced
   11d65:	call   0x118f4
   11d6a:	test   eax,eax
   11d6c:	je     0x11ced
   11d72:	call   0x1191e
   11d77:	test   eax,eax
   11d79:	je     0x11ced
   11d7f:	call   0x11948
   11d84:	test   eax,eax
   11d86:	je     0x11ced
   11d8c:	call   0x11972
   11d91:	test   eax,eax
   11d93:	je     0x11ced
   11d99:	call   0x1199c
   11d9e:	test   eax,eax
   11da0:	je     0x11ced
   11da6:	call   0x119c6
   11dab:	test   eax,eax
   11dad:	je     0x11ced
   11db3:	call   0x119f0
   11db8:	test   eax,eax
   11dba:	je     0x11ced
   11dc0:	call   0x11a1a
   11dc5:	test   eax,eax
   11dc7:	je     0x11ced
   11dcd:	call   0x11a44
   11dd2:	test   eax,eax
   11dd4:	je     0x11ced
   11dda:	call   0x11a6e
   11ddf:	test   eax,eax
   11de1:	je     0x11ced
   11de7:	call   0x11a98
   11dec:	test   eax,eax
   11dee:	je     0x11ced
   11df4:	call   0x11ac2
   11df9:	test   eax,eax
   11dfb:	je     0x11ced
   11e01:	call   0x11aec
   11e06:	test   eax,eax
   11e08:	je     0x11ced
   11e0e:	call   0x11b16
   11e13:	test   eax,eax
   11e15:	je     0x11ced
   11e1b:	call   0x11b40
   11e20:	test   eax,eax
   11e22:	je     0x11ced
   11e28:	call   0x11b6a
   11e2d:	test   eax,eax
   11e2f:	je     0x11ced
   11e35:	call   0x11b94
   11e3a:	test   eax,eax
   11e3c:	je     0x11ced
   11e42:	call   0x11bbe
   11e47:	test   eax,eax
   11e49:	je     0x11ced
   11e4f:	call   0x11be8
   11e54:	test   eax,eax
   11e56:	je     0x11ced
   11e5c:	call   0x11c12
   11e61:	test   eax,eax
   11e63:	je     0x11ced
   11e69:	call   0x11c3c
   11e6e:	test   eax,eax
   11e70:	je     0x11ced
   11e76:	call   0x11c66
   11e7b:	test   eax,eax
   11e7d:	je     0x11ced
   11e83:	call   0x11c90
   11e88:	test   eax,eax
   11e8a:	je     0x11ced
   11e90:	call   0x11cba
   11e95:	neg    eax
   11e97:	sbb    eax,eax
   11e99:	neg    eax
   11e9b:	ret    
   11e9c:	int3   
   11e9d:	int3   
   11e9e:	int3   
   11e9f:	int3   
   11ea0:	int3   
   11ea1:	int3   
   11ea2:	mov    edi,edi
   11ea4:	push   esi
   11ea5:	mov    esi,ecx
   11ea7:	push   DWORD PTR [esi+0x48]
   11eaa:	call   0x1da40
   11eaf:	push   DWORD PTR [esi+0x24]
   11eb2:	call   0x1da40
   11eb7:	push   DWORD PTR [esi+0x1c]
   11eba:	call   0x1da40
   11ebf:	push   DWORD PTR [esi+0x14]
   11ec2:	call   0x1da40
   11ec7:	push   DWORD PTR [esi+0x8]
   11eca:	call   0x1da40
   11ecf:	push   DWORD PTR [esi]
   11ed1:	call   0x1da40
   11ed6:	add    esp,0x18
   11ed9:	pop    esi
   11eda:	ret    
   11edb:	int3   
   11edc:	int3   
   11edd:	int3   
   11ede:	int3   
   11edf:	int3   
   11ee0:	mov    edi,edi
   11ee2:	push   ebp
   11ee3:	mov    ebp,esp
   11ee5:	mov    eax,ecx
   11ee7:	mov    ecx,DWORD PTR [ebp+0x8]
   11eea:	mov    edx,DWORD PTR [ecx]
   11eec:	test   edx,edx
   11eee:	je     0x11ef7
   11ef0:	mov    DWORD PTR [eax],edx
   11ef2:	inc    DWORD PTR [edx+0x4]
   11ef5:	jmp    0x11efa
   11ef7:	and    DWORD PTR [eax],0x0
   11efa:	pop    ebp
   11efb:	ret    0x4
   11efe:	int3   
   11eff:	int3   
   11f00:	int3   
   11f01:	int3   
   11f02:	int3   
   11f03:	int3   
   11f04:	mov    edi,edi
   11f06:	push   ebp
   11f07:	mov    ebp,esp
   11f09:	push   esi
   11f0a:	mov    esi,ecx
   11f0c:	mov    ecx,DWORD PTR [esi]
   11f0e:	test   ecx,ecx
   11f10:	je     0x11f17
   11f12:	call   0x10aca
   11f17:	mov    eax,DWORD PTR [ebp+0x8]
   11f1a:	mov    eax,DWORD PTR [eax]
   11f1c:	mov    DWORD PTR [esi],eax
   11f1e:	inc    DWORD PTR [eax+0x4]
   11f21:	mov    eax,esi
   11f23:	pop    esi
   11f24:	pop    ebp
   11f25:	ret    0x4
   11f28:	int3   
   11f29:	int3   
   11f2a:	int3   
   11f2b:	int3   
   11f2c:	int3   
   11f2d:	int3   
   11f2e:	mov    edi,edi
   11f30:	push   ebp
   11f31:	mov    ebp,esp
   11f33:	push   ebx
   11f34:	push   esi
   11f35:	push   edi
   11f36:	mov    edi,DWORD PTR [ebp+0xc]
   11f39:	mov    esi,ecx
   11f3b:	and    DWORD PTR [esi+0x4],0x0
   11f3f:	lea    eax,[edi+0x1]
   11f42:	push   eax
   11f43:	mov    DWORD PTR [esi+0x8],edi
   11f46:	call   0x10a96
   11f4b:	push   edi
   11f4c:	push   DWORD PTR [ebp+0x8]
   11f4f:	mov    ebx,eax
   11f51:	push   ebx
   11f52:	call   0x1dac2
   11f57:	add    esp,0x10
   11f5a:	inc    DWORD PTR [esi+0x4]
   11f5d:	pop    edi
   11f5e:	mov    DWORD PTR [esi],ebx
   11f60:	mov    eax,esi
   11f62:	pop    esi
   11f63:	pop    ebx
   11f64:	pop    ebp
   11f65:	ret    0x8
   11f68:	int3   
   11f69:	int3   
   11f6a:	int3   
   11f6b:	int3   
   11f6c:	int3   
   11f6d:	int3   
   11f6e:	mov    edi,edi
   11f70:	push   ebp
   11f71:	mov    ebp,esp
   11f73:	push   ecx
   11f74:	push   edi
   11f75:	lea    eax,[ebp-0x4]
   11f78:	push   eax
   11f79:	xor    edi,edi
   11f7b:	push   edi
   11f7c:	push   edi
   11f7d:	push   0x1b
   11f7f:	push   DWORD PTR [ebp+0x8]
   11f82:	call   0x1177a
   11f87:	call   eax
   11f89:	cmp    eax,0xc0000004
   11f8e:	jne    0x11ff6
   11f90:	mov    ecx,DWORD PTR [ebp-0x4]
   11f93:	push   ebx
   11f94:	mov    ebx,DWORD PTR [ebp+0xc]
   11f97:	movzx  edx,WORD PTR [ebx+0x2]
   11f9b:	lea    eax,[ecx-0x8]
   11f9e:	cmp    edx,eax
   11fa0:	jae    0x11fac
   11fa2:	mov    WORD PTR [ebx],ax
   11fa5:	mov    eax,0x80000005
   11faa:	jmp    0x11ff5
   11fac:	push   esi
   11fad:	push   0x20736649
   11fb2:	push   ecx
   11fb3:	push   edi
   11fb4:	call   DWORD PTR ds:0x1f02c
   11fba:	mov    esi,eax
   11fbc:	cmp    esi,edi
   11fbe:	jne    0x11fc7
   11fc0:	mov    eax,0xc000009a
   11fc5:	jmp    0x11ff4
   11fc7:	lea    eax,[ebp-0x4]
   11fca:	push   eax
   11fcb:	push   DWORD PTR [ebp-0x4]
   11fce:	push   esi
   11fcf:	push   0x1b
   11fd1:	push   DWORD PTR [ebp+0x8]
   11fd4:	call   0x1177a
   11fd9:	call   eax
   11fdb:	mov    edi,eax
   11fdd:	test   edi,edi
   11fdf:	jl     0x11fe9
   11fe1:	push   esi
   11fe2:	push   ebx
   11fe3:	call   DWORD PTR ds:0x1f038
   11fe9:	push   0x0
   11feb:	push   esi
   11fec:	call   DWORD PTR ds:0x1f01c
   11ff2:	mov    eax,edi
   11ff4:	pop    esi
   11ff5:	pop    ebx
   11ff6:	pop    edi
   11ff7:	leave  
   11ff8:	ret    0x8
   11ffb:	int3   
   11ffc:	int3   
   11ffd:	int3   
   11ffe:	int3   
   11fff:	int3   
   12000:	mov    edi,edi
   12002:	push   ebp
   12003:	mov    ebp,esp
   12005:	mov    ecx,DWORD PTR ds:0x7edc4
   1200b:	sub    esp,0x38
   1200e:	push   esi
   1200f:	xor    esi,esi
   12011:	cmp    ecx,esi
   12013:	jne    0x1201d
   12015:	or     eax,0xffffffff
   12018:	jmp    0x120f8
   1201d:	push   edi
   1201e:	xor    eax,eax
   12020:	mov    DWORD PTR [ebp-0x20],esi
   12023:	lea    edi,[ebp-0x1c]
   12026:	stos   DWORD PTR es:[edi],eax
   12027:	lea    eax,[ebp-0x18]
   1202a:	push   eax
   1202b:	lea    eax,[ebp-0x38]
   1202e:	push   eax
   1202f:	push   0x400
   12034:	lea    eax,[ebp-0x10]
   12037:	push   eax
   12038:	mov    DWORD PTR [ebp-0x4],esi
   1203b:	mov    DWORD PTR [ebp-0x38],0x18
   12042:	mov    DWORD PTR [ebp-0x34],esi
   12045:	mov    DWORD PTR [ebp-0x2c],esi
   12048:	mov    DWORD PTR [ebp-0x30],esi
   1204b:	mov    DWORD PTR [ebp-0x28],esi
   1204e:	mov    DWORD PTR [ebp-0x24],esi
   12051:	mov    DWORD PTR [ebp-0x18],ecx
   12054:	mov    DWORD PTR [ebp-0x14],esi
   12057:	call   0x116a8
   1205c:	call   eax
   1205e:	mov    edi,eax
   12060:	cmp    edi,esi
   12062:	jl     0x120f5
   12068:	push   ebx
   12069:	lea    eax,[ebp-0xc]
   1206c:	push   eax
   1206d:	push   0x8
   1206f:	push   DWORD PTR [ebp-0x10]
   12072:	call   0x118f4
   12077:	call   eax
   12079:	mov    ebx,DWORD PTR ds:0x1f064
   1207f:	mov    edi,eax
   12081:	cmp    edi,esi
   12083:	jl     0x120ef
   12085:	lea    eax,[ebp-0x4]
   12088:	push   eax
   12089:	push   0x1
   1208b:	push   esi
   1208c:	push   esi
   1208d:	push   0x1
   1208f:	push   DWORD PTR [ebp-0xc]
   12092:	call   0x116fc
   12097:	call   eax
   12099:	mov    edi,eax
   1209b:	cmp    edi,esi
   1209d:	jl     0x120ea
   1209f:	mov    eax,DWORD PTR [ebp+0x8]
   120a2:	mov    DWORD PTR [ebp-0x18],eax
   120a5:	lea    eax,[ebp-0x18]
   120a8:	push   eax
   120a9:	lea    eax,[ebp-0x38]
   120ac:	push   eax
   120ad:	push   0x200
   120b2:	lea    eax,[ebp-0x8]
   120b5:	push   eax
   120b6:	call   0x116a8
   120bb:	call   eax
   120bd:	mov    edi,eax
   120bf:	cmp    edi,esi
   120c1:	jl     0x120e5
   120c3:	mov    eax,DWORD PTR [ebp-0x4]
   120c6:	push   0x8
   120c8:	mov    DWORD PTR [ebp-0x20],eax
   120cb:	lea    eax,[ebp-0x20]
   120ce:	push   eax
   120cf:	push   0x9
   120d1:	push   DWORD PTR [ebp-0x8]
   120d4:	mov    DWORD PTR [ebp-0x1c],esi
   120d7:	call   0x1191e
   120dc:	call   eax
   120de:	push   DWORD PTR [ebp-0x8]
   120e1:	mov    edi,eax
   120e3:	call   ebx
   120e5:	push   DWORD PTR [ebp-0x4]
   120e8:	call   ebx
   120ea:	push   DWORD PTR [ebp-0xc]
   120ed:	call   ebx
   120ef:	push   DWORD PTR [ebp-0x10]
   120f2:	call   ebx
   120f4:	pop    ebx
   120f5:	mov    eax,edi
   120f7:	pop    edi
   120f8:	pop    esi
   120f9:	leave  
   120fa:	ret    0x4
   120fd:	int3   
   120fe:	int3   
   120ff:	int3   
   12100:	int3   
   12101:	int3   
   12102:	mov    edi,edi
   12104:	push   ebp
   12105:	mov    ebp,esp
   12107:	sub    esp,0x43c
   1210d:	mov    eax,ds:0x7eb3c
   12112:	xor    eax,ebp
   12114:	mov    DWORD PTR [ebp-0x4],eax
   12117:	mov    eax,DWORD PTR [ebp+0xc]
   1211a:	push   ebx
   1211b:	push   esi
   1211c:	mov    esi,DWORD PTR [ebp+0x8]
   1211f:	push   edi
   12120:	xor    ebx,ebx
   12122:	push   0x3ff
   12127:	mov    DWORD PTR [ebp-0x418],eax
   1212d:	lea    eax,[ebp-0x403]
   12133:	push   ebx
   12134:	push   eax
   12135:	mov    DWORD PTR [ebp-0x424],esi
   1213b:	mov    BYTE PTR [ebp-0x404],bl
   12141:	call   0x1dae6
   12146:	add    esp,0xc
   12149:	lea    eax,[ebp-0x410]
   1214f:	push   eax
   12150:	push   0x400
   12155:	lea    eax,[ebp-0x404]
   1215b:	push   eax
   1215c:	push   ebx
   1215d:	push   ebx
   1215e:	push   esi
   1215f:	jmp    0x1230e
   12164:	cmp    eax,ebx
   12166:	jl     0x12330
   1216c:	mov    eax,DWORD PTR [ebp-0x418]
   12172:	lea    edx,[eax+0x2]
   12175:	mov    cx,WORD PTR [eax]
   12178:	inc    eax
   12179:	inc    eax
   1217a:	cmp    cx,bx
   1217d:	jne    0x12175
   1217f:	mov    ecx,DWORD PTR [ebp-0x3f8]
   12185:	sub    eax,edx
   12187:	shr    ecx,1
   12189:	sar    eax,1
   1218b:	lea    esi,[ecx+eax*1+0x2]
   1218f:	xor    ecx,ecx
   12191:	push   0x2
   12193:	pop    edx
   12194:	mov    eax,esi
   12196:	mul    edx
   12198:	seto   cl
   1219b:	neg    ecx
   1219d:	or     ecx,eax
   1219f:	push   ecx
   121a0:	call   0x10a96
   121a5:	mov    edi,eax
   121a7:	lea    eax,[esi+esi*1]
   121aa:	push   eax
   121ab:	push   ebx
   121ac:	push   edi
   121ad:	mov    DWORD PTR [ebp-0x40c],edi
   121b3:	call   0x1dae6
   121b8:	mov    eax,DWORD PTR [ebp-0x418]
   121be:	add    esp,0x10
   121c1:	mov    ecx,eax
   121c3:	mov    dx,WORD PTR [eax]
   121c6:	inc    eax
   121c7:	inc    eax
   121c8:	cmp    dx,bx
   121cb:	jne    0x121c3
   121cd:	sub    eax,ecx
   121cf:	dec    edi
   121d0:	mov    esi,ecx
   121d2:	dec    edi
   121d3:	mov    cx,WORD PTR [edi+0x2]
   121d7:	inc    edi
   121d8:	inc    edi
   121d9:	cmp    cx,bx
   121dc:	jne    0x121d3
   121de:	mov    ecx,eax
   121e0:	shr    ecx,0x2
   121e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   121e5:	mov    ecx,eax
   121e7:	and    ecx,0x3
   121ea:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   121ec:	mov    edi,DWORD PTR [ebp-0x40c]
   121f2:	dec    edi
   121f3:	dec    edi
   121f4:	mov    ax,WORD PTR [edi+0x2]
   121f8:	inc    edi
   121f9:	inc    edi
   121fa:	cmp    ax,bx
   121fd:	jne    0x121f4
   121ff:	mov    esi,0x1de98
   12204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12205:	mov    eax,DWORD PTR [ebp-0x3f8]
   1220b:	shr    eax,1
   1220d:	push   eax
   1220e:	lea    eax,[ebp-0x3f4]
   12214:	push   eax
   12215:	push   DWORD PTR [ebp-0x40c]
   1221b:	call   0x1dada
   12220:	mov    esi,DWORD PTR [ebp-0x40c]
   12226:	mov    eax,esi
   12228:	add    esp,0xc
   1222b:	mov    DWORD PTR [ebp-0x41c],esi
   12231:	lea    edx,[eax+0x2]
   12234:	mov    cx,WORD PTR [eax]
   12237:	inc    eax
   12238:	inc    eax
   12239:	cmp    cx,bx
   1223c:	jne    0x12234
   1223e:	sub    eax,edx
   12240:	sar    eax,1
   12242:	add    eax,eax
   12244:	mov    WORD PTR [ebp-0x41e],ax
   1224b:	mov    WORD PTR [ebp-0x420],ax
   12252:	lea    eax,[ebp-0x420]
   12258:	mov    DWORD PTR [ebp-0x434],eax
   1225e:	lea    eax,[ebp-0x43c]
   12264:	push   eax
   12265:	push   0xf003f
   1226a:	lea    eax,[ebp-0x414]
   12270:	push   eax
   12271:	mov    DWORD PTR [ebp-0x43c],0x18
   1227b:	mov    DWORD PTR [ebp-0x438],ebx
   12281:	mov    DWORD PTR [ebp-0x430],0x40
   1228b:	mov    DWORD PTR [ebp-0x42c],ebx
   12291:	mov    DWORD PTR [ebp-0x428],ebx
   12297:	call   0x117ce
   1229c:	call   eax
   1229e:	push   esi
   1229f:	test   eax,eax
   122a1:	jl     0x1232a
   122a7:	push   DWORD PTR [ebp-0x414]
   122ad:	call   0x12102
   122b2:	push   esi
   122b3:	mov    BYTE PTR [ebp-0x405],al
   122b9:	call   0x1da40
   122be:	pop    ecx
   122bf:	push   DWORD PTR [ebp-0x414]
   122c5:	call   0x117f8
   122ca:	call   eax
   122cc:	test   eax,eax
   122ce:	jl     0x12330
   122d0:	cmp    BYTE PTR [ebp-0x405],bl
   122d6:	je     0x12330
   122d8:	push   0x3ff
   122dd:	lea    eax,[ebp-0x403]
   122e3:	push   ebx
   122e4:	push   eax
   122e5:	mov    BYTE PTR [ebp-0x404],bl
   122eb:	call   0x1dae6
   122f0:	add    esp,0xc
   122f3:	lea    eax,[ebp-0x410]
   122f9:	push   eax
   122fa:	push   0x400
   122ff:	lea    eax,[ebp-0x404]
   12305:	push   eax
   12306:	push   ebx
   12307:	push   ebx
   12308:	push   DWORD PTR [ebp-0x424]
   1230e:	mov    DWORD PTR [ebp-0x410],ebx
   12314:	call   0x11972
   12319:	call   eax
   1231b:	cmp    eax,0x8000001a
   12320:	jne    0x12164
   12326:	mov    al,0x1
   12328:	jmp    0x12332
   1232a:	call   0x1da40
   1232f:	pop    ecx
   12330:	xor    al,al
   12332:	mov    ecx,DWORD PTR [ebp-0x4]
   12335:	pop    edi
   12336:	pop    esi
   12337:	xor    ecx,ebp
   12339:	pop    ebx
   1233a:	call   0x1da5d
   1233f:	leave  
   12340:	ret    0x8
   12343:	int3   
   12344:	int3   
   12345:	int3   
   12346:	int3   
   12347:	int3   
   12348:	mov    eax,ds:0x7ed44
   1234d:	test   eax,eax
   1234f:	je     0x12360
   12351:	push   eax
   12352:	call   0x119f0
   12357:	call   eax
   12359:	and    DWORD PTR ds:0x7ed44,0x0
   12360:	ret    
   12361:	int3   
   12362:	int3   
   12363:	int3   
   12364:	int3   
   12365:	int3   
   12366:	push   0x28
   12368:	push   0x7de78
   1236d:	call   0x1db0c
   12372:	xor    eax,eax
   12374:	mov    DWORD PTR [ebp-0x28],eax
   12377:	mov    DWORD PTR [ebp-0x2c],eax
   1237a:	mov    ebx,DWORD PTR [ebp+0x8]
   1237d:	cmp    ebx,eax
   1237f:	jne    0x12388
   12381:	xor    eax,eax
   12383:	jmp    0x12465
   12388:	mov    DWORD PTR [ebp-0x4],eax
   1238b:	lea    ecx,[ebp-0x2c]
   1238e:	push   ecx
   1238f:	push   eax
   12390:	push   0x1
   12392:	push   ebx
   12393:	call   0x118ca
   12398:	call   eax
   1239a:	mov    edx,eax
   1239c:	sub    edx,ebx
   1239e:	mov    DWORD PTR [ebp-0x38],edx
   123a1:	mov    esi,DWORD PTR [eax+0x1c]
   123a4:	add    esi,ebx
   123a6:	mov    edi,DWORD PTR [eax+0x24]
   123a9:	add    edi,ebx
   123ab:	mov    ecx,DWORD PTR [eax+0x20]
   123ae:	add    ecx,ebx
   123b0:	and    DWORD PTR [ebp-0x20],0x0
   123b4:	mov    ebx,DWORD PTR [ebp-0x20]
   123b7:	cmp    ebx,DWORD PTR [eax+0x18]
   123ba:	jae    0x1244d
   123c0:	movsx  ebx,WORD PTR [edi+ebx*2]
   123c4:	cmp    ebx,DWORD PTR [eax+0x14]
   123c7:	jae    0x12441
   123c9:	lea    ebx,[esi+ebx*4]
   123cc:	mov    DWORD PTR [ebp-0x34],ebx
   123cf:	cmp    DWORD PTR [ebx],edx
   123d1:	jb     0x123df
   123d3:	mov    ebx,DWORD PTR [ebp-0x2c]
   123d6:	add    edx,ebx
   123d8:	mov    ebx,DWORD PTR [ebp-0x34]
   123db:	cmp    DWORD PTR [ebx],edx
   123dd:	jb     0x12436
   123df:	mov    edx,DWORD PTR [ebp+0xc]
   123e2:	mov    DWORD PTR [ebp-0x30],edx
   123e5:	mov    edx,DWORD PTR [ebp-0x20]
   123e8:	mov    edx,DWORD PTR [ecx+edx*4]
   123eb:	add    edx,DWORD PTR [ebp+0x8]
   123ee:	mov    DWORD PTR [ebp-0x24],edx
   123f1:	mov    dl,BYTE PTR [edx]
   123f3:	mov    ebx,DWORD PTR [ebp-0x30]
   123f6:	cmp    dl,BYTE PTR [ebx]
   123f8:	jne    0x12423
   123fa:	test   dl,dl
   123fc:	je     0x1241f
   123fe:	mov    edx,DWORD PTR [ebp-0x24]
   12401:	mov    dl,BYTE PTR [edx+0x1]
   12404:	mov    BYTE PTR [ebp-0x19],dl
   12407:	cmp    dl,BYTE PTR [ebx+0x1]
   1240a:	jne    0x12423
   1240c:	mov    edx,DWORD PTR [ebp-0x24]
   1240f:	inc    edx
   12410:	inc    edx
   12411:	mov    DWORD PTR [ebp-0x24],edx
   12414:	inc    ebx
   12415:	inc    ebx
   12416:	mov    DWORD PTR [ebp-0x30],ebx
   12419:	cmp    BYTE PTR [ebp-0x19],0x0
   1241d:	jne    0x123f1
   1241f:	xor    edx,edx
   12421:	jmp    0x12428
   12423:	sbb    edx,edx
   12425:	sbb    edx,0xffffffff
   12428:	test   edx,edx
   1242a:	jne    0x12436
   1242c:	mov    eax,DWORD PTR [ebp-0x34]
   1242f:	mov    eax,DWORD PTR [eax]
   12431:	add    eax,DWORD PTR [ebp+0x8]
   12434:	jmp    0x1245b
   12436:	inc    DWORD PTR [ebp-0x20]
   12439:	mov    edx,DWORD PTR [ebp-0x38]
   1243c:	jmp    0x123b4
   12441:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   12448:	jmp    0x12381
   1244d:	mov    eax,DWORD PTR [ebp-0x28]
   12450:	jmp    0x1245e
   12452:	xor    eax,eax
   12454:	inc    eax
   12455:	ret    
   12456:	mov    esp,DWORD PTR [ebp-0x18]
   12459:	xor    eax,eax
   1245b:	mov    DWORD PTR [ebp-0x28],eax
   1245e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   12465:	call   0x1db51
   1246a:	ret    0x8
   1246d:	int3   
   1246e:	int3   
   1246f:	int3   
   12470:	int3   
   12471:	int3   
   12472:	mov    edi,edi
   12474:	push   ebp
   12475:	mov    ebp,esp
   12477:	sub    esp,0x48
   1247a:	mov    eax,DWORD PTR [ebp+0xc]
   1247d:	mov    eax,DWORD PTR [eax]
   1247f:	push   edi
   12480:	mov    DWORD PTR [ebp-0x30],eax
   12483:	lea    eax,[ebp-0x30]
   12486:	push   eax
   12487:	lea    eax,[ebp-0x48]
   1248a:	push   eax
   1248b:	xor    edi,edi
   1248d:	push   0x1f0fff
   12492:	lea    eax,[ebp-0x10]
   12495:	push   eax
   12496:	mov    DWORD PTR [ebp-0x48],0x18
   1249d:	mov    DWORD PTR [ebp-0x44],edi
   124a0:	mov    DWORD PTR [ebp-0x3c],0x200
   124a7:	mov    DWORD PTR [ebp-0x40],edi
   124aa:	mov    DWORD PTR [ebp-0x38],edi
   124ad:	mov    DWORD PTR [ebp-0x34],edi
   124b0:	mov    DWORD PTR [ebp-0x2c],edi
   124b3:	mov    DWORD PTR [ebp-0x10],edi
   124b6:	call   0x116a8
   124bb:	call   eax
   124bd:	test   eax,eax
   124bf:	jl     0x12813
   124c5:	push   ebx
   124c6:	push   esi
   124c7:	mov    esi,DWORD PTR ds:0x1f044
   124cd:	push   0x40
   124cf:	mov    ebx,0x1000
   124d4:	push   ebx
   124d5:	lea    eax,[ebp-0x14]
   124d8:	push   eax
   124d9:	push   edi
   124da:	lea    eax,[ebp-0xc]
   124dd:	push   eax
   124de:	push   DWORD PTR [ebp-0x10]
   124e1:	mov    DWORD PTR [ebp-0xc],edi
   124e4:	mov    DWORD PTR [ebp-0x14],0x400
   124eb:	call   esi
   124ed:	test   eax,eax
   124ef:	jl     0x124fa
   124f1:	mov    eax,DWORD PTR [ebp-0xc]
   124f4:	mov    ecx,DWORD PTR [ebp+0xc]
   124f7:	mov    DWORD PTR [ecx+0x8],eax
   124fa:	push   0x4
   124fc:	push   ebx
   124fd:	lea    eax,[ebp-0x14]
   12500:	push   eax
   12501:	push   edi
   12502:	lea    eax,[ebp-0x18]
   12505:	push   eax
   12506:	push   DWORD PTR [ebp-0x10]
   12509:	mov    DWORD PTR [ebp-0x18],edi
   1250c:	mov    DWORD PTR [ebp-0x14],0x400
   12513:	call   esi
   12515:	test   eax,eax
   12517:	jl     0x12522
   12519:	mov    eax,DWORD PTR [ebp-0x18]
   1251c:	mov    ecx,DWORD PTR [ebp+0xc]
   1251f:	mov    DWORD PTR [ecx+0xc],eax
   12522:	lea    eax,[ebp-0x24]
   12525:	push   eax
   12526:	push   DWORD PTR [ebp-0x30]
   12529:	call   0x11c90
   1252e:	call   eax
   12530:	test   eax,eax
   12532:	jl     0x12811
   12538:	push   DWORD PTR [ebp-0x24]
   1253b:	call   0x11a44
   12540:	call   eax
   12542:	mov    eax,DWORD PTR [ebp-0xc]
   12545:	mov    DWORD PTR [ebp-0x20],edi
   12548:	cmp    eax,edi
   1254a:	je     0x127f7
   12550:	mov    esi,DWORD PTR [ebp-0x18]
   12553:	cmp    esi,edi
   12555:	je     0x12764
   1255b:	push   0x214
   12560:	push   edi
   12561:	push   esi
   12562:	mov    DWORD PTR [ebp-0x4],eax
   12565:	call   0x1dae6
   1256a:	mov    eax,DWORD PTR [ebp-0x4]
   1256d:	add    esp,0xc
   12570:	push   0x60
   12572:	lea    ebx,[esi+0xc]
   12575:	push   eax
   12576:	mov    DWORD PTR [ebx],edi
   12578:	mov    DWORD PTR [esi],edi
   1257a:	mov    DWORD PTR [ebp-0x20],eax
   1257d:	call   0x197ee
   12582:	push   0x68
   12584:	push   eax
   12585:	call   0x197ee
   1258a:	push   ebx
   1258b:	push   eax
   1258c:	call   0x19806
   12591:	push   0x6a
   12593:	pop    ebx
   12594:	push   ebx
   12595:	push   eax
   12596:	call   0x197ee
   1259b:	push   edi
   1259c:	push   eax
   1259d:	call   0x197ee
   125a2:	push   ebx
   125a3:	push   eax
   125a4:	call   0x197ee
   125a9:	push   edi
   125aa:	push   eax
   125ab:	call   0x197ee
   125b0:	push   0x68
   125b2:	push   eax
   125b3:	call   0x197ee
   125b8:	push   edi
   125b9:	push   eax
   125ba:	mov    DWORD PTR [ebp-0x28],eax
   125bd:	call   0x19806
   125c2:	push   ebx
   125c3:	push   eax
   125c4:	call   0x197ee
   125c9:	push   edi
   125ca:	push   eax
   125cb:	call   0x197ee
   125d0:	push   ebx
   125d1:	push   eax
   125d2:	call   0x197ee
   125d7:	push   edi
   125d8:	push   eax
   125d9:	call   0x197ee
   125de:	push   0xb8
   125e3:	push   eax
   125e4:	call   0x197ee
   125e9:	push   DWORD PTR ds:0x7ed90
   125ef:	push   eax
   125f0:	call   0x19806
   125f5:	mov    ebx,0xc00b
   125fa:	push   ebx
   125fb:	push   eax
   125fc:	call   0x19820
   12601:	push   0x74
   12603:	push   eax
   12604:	call   0x197ee
   12609:	push   0x9
   1260b:	push   eax
   1260c:	call   0x197ee
   12611:	mov    edi,0xd0ff
   12616:	push   edi
   12617:	push   eax
   12618:	call   0x19820
   1261d:	push   0xb9
   12622:	push   eax
   12623:	call   0x197ee
   12628:	lea    ecx,[esi+0x10]
   1262b:	push   ecx
   1262c:	push   eax
   1262d:	call   0x19806
   12632:	push   0x189
   12637:	push   eax
   12638:	call   0x19820
   1263d:	push   0x61
   1263f:	push   eax
   12640:	call   0x197ee
   12645:	and    DWORD PTR [ebp-0x8],0x0
   12649:	mov    DWORD PTR [ebp-0x4],eax
   1264c:	mov    eax,DWORD PTR [ebp+0x8]
   1264f:	mov    DWORD PTR [ebp-0x1c],eax
   12652:	push   0x0
   12654:	push   DWORD PTR [ebp-0x1c]
   12657:	push   DWORD PTR [ebp-0x4]
   1265a:	call   0x19fa8
   1265f:	mov    ecx,eax
   12661:	sub    ecx,DWORD PTR [ebp-0x1c]
   12664:	mov    DWORD PTR [ebp-0x1c],eax
   12667:	add    DWORD PTR [ebp-0x8],ecx
   1266a:	add    DWORD PTR [ebp-0x4],ecx
   1266d:	cmp    DWORD PTR [ebp-0x8],0x5
   12671:	jb     0x12652
   12673:	mov    ecx,DWORD PTR [ebp+0x8]
   12676:	push   DWORD PTR [ebp-0x4]
   12679:	mov    eax,DWORD PTR [ebp-0x8]
   1267c:	add    eax,ecx
   1267e:	push   eax
   1267f:	call   0x19864
   12684:	push   eax
   12685:	push   DWORD PTR [ebp-0x28]
   12688:	mov    DWORD PTR [ebp-0x4],eax
   1268b:	call   0x19806
   12690:	mov    eax,DWORD PTR [ebp-0x4]
   12693:	push   0xeb
   12698:	push   eax
   12699:	mov    DWORD PTR [esi],eax
   1269b:	call   0x197ee
   126a0:	push   0x0
   126a2:	push   eax
   126a3:	mov    DWORD PTR [esi+0x4],eax
   126a6:	call   0x197ee
   126ab:	push   0x68
   126ad:	push   eax
   126ae:	call   0x197ee
   126b3:	push   0x3e8
   126b8:	push   eax
   126b9:	call   0x19806
   126be:	push   0xb8
   126c3:	push   eax
   126c4:	call   0x197ee
   126c9:	push   DWORD PTR ds:0x7ed94
   126cf:	push   eax
   126d0:	call   0x19806
   126d5:	push   ebx
   126d6:	push   eax
   126d7:	call   0x19820
   126dc:	push   0x74
   126de:	push   eax
   126df:	call   0x197ee
   126e4:	push   0x2
   126e6:	push   eax
   126e7:	call   0x197ee
   126ec:	push   edi
   126ed:	push   eax
   126ee:	call   0x19820
   126f3:	push   eax
   126f4:	push   DWORD PTR [esi]
   126f6:	call   0x19864
   126fb:	mov    cl,al
   126fd:	sub    cl,BYTE PTR [esi+0x4]
   12700:	push   0x68
   12702:	dec    cl
   12704:	push   eax
   12705:	mov    BYTE PTR [esi+0x8],cl
   12708:	call   0x197ee
   1270d:	add    esi,0x14
   12710:	push   esi
   12711:	push   eax
   12712:	call   0x19806
   12717:	push   0xb8
   1271c:	push   eax
   1271d:	call   0x197ee
   12722:	push   DWORD PTR ds:0x7ed88
   12728:	push   eax
   12729:	call   0x19806
   1272e:	push   ebx
   1272f:	push   eax
   12730:	call   0x19820
   12735:	push   0x74
   12737:	push   eax
   12738:	call   0x197ee
   1273d:	push   0x2
   1273f:	push   eax
   12740:	call   0x197ee
   12745:	push   edi
   12746:	push   eax
   12747:	call   0x19820
   1274c:	push   0xc2
   12751:	push   eax
   12752:	call   0x197ee
   12757:	push   0x4
   12759:	push   eax
   1275a:	call   0x19820
   1275f:	mov    eax,DWORD PTR [ebp-0xc]
   12762:	xor    edi,edi
   12764:	cmp    eax,edi
   12766:	je     0x127f7
   1276c:	add    eax,0x400
   12771:	lea    esi,[eax-0xc]
   12774:	lea    ecx,[eax-0x8]
   12777:	push   esi
   12778:	lea    ebx,[eax-0x4]
   1277b:	lea    edx,[eax-0x10]
   1277e:	push   0x40
   12780:	add    eax,0xffffffe8
   12783:	push   ecx
   12784:	mov    DWORD PTR [ebp-0x1c],eax
   12787:	mov    eax,DWORD PTR [ebp+0x8]
   1278a:	mov    DWORD PTR [ebx],eax
   1278c:	push   ebx
   1278d:	mov    DWORD PTR [ecx],0x5
   12793:	push   0xffffffff
   12795:	mov    DWORD PTR [ebp-0x8],ecx
   12798:	mov    DWORD PTR [ebp-0x28],edx
   1279b:	mov    DWORD PTR [esi],edi
   1279d:	call   DWORD PTR ds:0x7ed04
   127a3:	test   eax,eax
   127a5:	jl     0x127f7
   127a7:	mov    eax,DWORD PTR [ebp-0x20]
   127aa:	sub    eax,DWORD PTR [ebp+0x8]
   127ad:	sub    eax,0x5
   127b0:	push   eax
   127b1:	mov    eax,DWORD PTR [ebp-0x1c]
   127b4:	inc    eax
   127b5:	push   eax
   127b6:	call   0x19806
   127bb:	push   0xe9
   127c0:	push   DWORD PTR [ebp-0x1c]
   127c3:	call   0x197ee
   127c8:	mov    eax,DWORD PTR [ebp-0x28]
   127cb:	push   eax
   127cc:	push   0x5
   127ce:	push   DWORD PTR [ebp-0x1c]
   127d1:	mov    DWORD PTR [eax],edi
   127d3:	push   DWORD PTR [ebp+0x8]
   127d6:	push   0xffffffff
   127d8:	call   DWORD PTR ds:0x7ecf8
   127de:	mov    eax,DWORD PTR [ebp+0xc]
   127e1:	mov    BYTE PTR [eax+0x10],0x1
   127e5:	lea    eax,[ebp-0x20]
   127e8:	push   eax
   127e9:	push   DWORD PTR [esi]
   127eb:	push   DWORD PTR [ebp-0x8]
   127ee:	push   ebx
   127ef:	push   0xffffffff
   127f1:	call   DWORD PTR ds:0x7ed04
   127f7:	call   0x11a1a
   127fc:	call   eax
   127fe:	call   0x11c66
   12803:	mov    ecx,DWORD PTR [ebp-0x24]
   12806:	call   eax
   12808:	push   DWORD PTR [ebp-0x10]
   1280b:	call   DWORD PTR ds:0x1f064
   12811:	pop    esi
   12812:	pop    ebx
   12813:	pop    edi
   12814:	leave  
   12815:	ret    0x8
   12818:	int3   
   12819:	int3   
   1281a:	int3   
   1281b:	int3   
   1281c:	int3   
   1281d:	int3   
   1281e:	mov    edi,edi
   12820:	push   ebp
   12821:	mov    ebp,esp
   12823:	sub    esp,0x18
   12826:	and    DWORD PTR [ebp-0x18],0x0
   1282a:	push   edi
   1282b:	xor    eax,eax
   1282d:	lea    edi,[ebp-0x14]
   12830:	stos   DWORD PTR es:[edi],eax
   12831:	stos   DWORD PTR es:[edi],eax
   12832:	stos   DWORD PTR es:[edi],eax
   12833:	stos   DWORD PTR es:[edi],eax
   12834:	lea    eax,[ebp-0x18]
   12837:	push   eax
   12838:	push   0x1
   1283a:	call   0x10eb6
   1283f:	pop    edi
   12840:	test   al,al
   12842:	je     0x1289a
   12844:	cmp    DWORD PTR [ebp-0x18],0x0
   12848:	je     0x1289a
   1284a:	lea    eax,[ebp-0x4]
   1284d:	push   eax
   1284e:	push   DWORD PTR [ebp-0x18]
   12851:	call   0x11c90
   12856:	call   eax
   12858:	test   eax,eax
   1285a:	jl     0x1289a
   1285c:	push   esi
   1285d:	push   DWORD PTR [ebp-0x4]
   12860:	call   0x11a44
   12865:	call   eax
   12867:	mov    esi,DWORD PTR [ebp-0xc]
   1286a:	mov    eax,DWORD PTR [ebp+0x8]
   1286d:	lea    edx,[esi+0x14]
   12870:	sub    edx,eax
   12872:	movzx  ecx,WORD PTR [eax]
   12875:	mov    WORD PTR [edx+eax*1],cx
   12879:	inc    eax
   1287a:	inc    eax
   1287b:	test   cx,cx
   1287e:	jne    0x12872
   12880:	mov    eax,DWORD PTR [esi+0x4]
   12883:	mov    cl,BYTE PTR [esi+0x8]
   12886:	mov    BYTE PTR [eax],cl
   12888:	call   0x11a1a
   1288d:	call   eax
   1288f:	call   0x11c66
   12894:	mov    ecx,DWORD PTR [ebp-0x4]
   12897:	call   eax
   12899:	pop    esi
   1289a:	leave  
   1289b:	ret    0x4
   1289e:	int3   
   1289f:	int3   
   128a0:	int3   
   128a1:	int3   
   128a2:	int3   
   128a3:	int3   
   128a4:	mov    edi,edi
   128a6:	push   ebp
   128a7:	mov    ebp,esp
   128a9:	push   ecx
   128aa:	and    DWORD PTR [ebp-0x4],0x0
   128ae:	push   ebx
   128af:	push   esi
   128b0:	push   edi
   128b1:	mov    esi,0x1000
   128b6:	push   0x20736649
   128bb:	push   esi
   128bc:	push   0x0
   128be:	call   DWORD PTR ds:0x1f02c
   128c4:	mov    edi,eax
   128c6:	test   edi,edi
   128c8:	je     0x128fc
   128ca:	lea    eax,[ebp-0x4]
   128cd:	push   eax
   128ce:	push   esi
   128cf:	push   edi
   128d0:	push   DWORD PTR [ebp+0x8]
   128d3:	call   0x117a4
   128d8:	call   eax
   128da:	mov    ebx,eax
   128dc:	cmp    ebx,0xc0000004
   128e2:	jne    0x128ef
   128e4:	push   0x0
   128e6:	push   edi
   128e7:	call   DWORD PTR ds:0x1f01c
   128ed:	add    esi,esi
   128ef:	test   ebx,ebx
   128f1:	jne    0x128b6
   128f3:	mov    eax,edi
   128f5:	pop    edi
   128f6:	pop    esi
   128f7:	pop    ebx
   128f8:	leave  
   128f9:	ret    0x4
   128fc:	xor    eax,eax
   128fe:	jmp    0x128f5
   12900:	int3   
   12901:	int3   
   12902:	int3   
   12903:	int3   
   12904:	int3   
   12905:	int3   
   12906:	push   0x0
   12908:	push   0x7ed14
   1290d:	call   0x11c12
   12912:	call   eax
   12914:	push   0x100
   12919:	push   0x0
   1291b:	push   0x7ebd8
   12920:	call   0x1dae6
   12925:	add    esp,0xc
   12928:	ret    
   12929:	int3   
   1292a:	int3   
   1292b:	int3   
   1292c:	int3   
   1292d:	int3   
   1292e:	mov    edi,edi
   12930:	push   ebp
   12931:	mov    ebp,esp
   12933:	push   esi
   12934:	push   DWORD PTR [ebp+0xc]
   12937:	mov    esi,ecx
   12939:	push   DWORD PTR [ebp+0x8]
   1293c:	call   0x110d4
   12941:	mov    eax,esi
   12943:	pop    esi
   12944:	pop    ebp
   12945:	ret    0x8
   12948:	int3   
   12949:	int3   
   1294a:	int3   
   1294b:	int3   
   1294c:	int3   
   1294d:	int3   
   1294e:	mov    edi,edi
   12950:	push   ebp
   12951:	mov    ebp,esp
   12953:	mov    eax,DWORD PTR [ebp+0x8]
   12956:	push   esi
   12957:	push   DWORD PTR [eax+0x4]
   1295a:	mov    esi,ecx
   1295c:	push   DWORD PTR [eax]
   1295e:	call   0x110d4
   12963:	mov    eax,esi
   12965:	pop    esi
   12966:	pop    ebp
   12967:	ret    0x4
   1296a:	int3   
   1296b:	int3   
   1296c:	int3   
   1296d:	int3   
   1296e:	int3   
   1296f:	int3   
   12970:	mov    edi,edi
   12972:	push   ebp
   12973:	mov    ebp,esp
   12975:	push   ebx
   12976:	push   esi
   12977:	push   edi
   12978:	mov    edi,DWORD PTR [ebp+0x8]
   1297b:	mov    eax,DWORD PTR [edi+0x4]
   1297e:	mov    esi,ecx
   12980:	mov    ebx,DWORD PTR [esi]
   12982:	mov    DWORD PTR [esi+0x4],eax
   12985:	inc    eax
   12986:	push   eax
   12987:	call   0x10a96
   1298c:	push   DWORD PTR [esi+0x4]
   1298f:	mov    DWORD PTR [esi],eax
   12991:	push   DWORD PTR [edi]
   12993:	push   eax
   12994:	call   0x1dac2
   12999:	mov    eax,DWORD PTR [esi+0x4]
   1299c:	mov    ecx,DWORD PTR [esi]
   1299e:	push   ebx
   1299f:	mov    BYTE PTR [eax+ecx*1],0x0
   129a3:	call   0x1da40
   129a8:	add    esp,0x14
   129ab:	pop    edi
   129ac:	mov    eax,esi
   129ae:	pop    esi
   129af:	pop    ebx
   129b0:	pop    ebp
   129b1:	ret    0x4
   129b4:	int3   
   129b5:	int3   
   129b6:	int3   
   129b7:	int3   
   129b8:	int3   
   129b9:	int3   
   129ba:	mov    edi,edi
   129bc:	push   esi
   129bd:	push   edi
   129be:	push   0x20736649
   129c3:	push   0x20
   129c5:	push   0x0
   129c7:	mov    esi,ecx
   129c9:	call   DWORD PTR ds:0x1f02c
   129cf:	push   0x0
   129d1:	mov    edi,eax
   129d3:	push   0x1
   129d5:	mov    ecx,esi
   129d7:	mov    DWORD PTR [esi],edi
   129d9:	call   0x11132
   129de:	mov    DWORD PTR [esi+0x8],eax
   129e1:	mov    DWORD PTR [esi+0xc],edx
   129e4:	test   edi,edi
   129e6:	jne    0x129f3
   129e8:	push   0xc000009a
   129ed:	call   DWORD PTR ds:0x1f014
   129f3:	pop    edi
   129f4:	mov    eax,esi
   129f6:	pop    esi
   129f7:	ret    
   129f8:	int3   
   129f9:	int3   
   129fa:	int3   
   129fb:	int3   
   129fc:	int3   
   129fd:	int3   
   129fe:	mov    edi,edi
   12a00:	push   ebp
   12a01:	mov    ebp,esp
   12a03:	push   esi
   12a04:	push   edi
   12a05:	mov    edi,DWORD PTR [ebp+0x8]
   12a08:	push   edi
   12a09:	mov    esi,ecx
   12a0b:	call   0x12970
   12a10:	lea    eax,[edi+0x8]
   12a13:	push   eax
   12a14:	lea    ecx,[esi+0x8]
   12a17:	call   0x12970
   12a1c:	mov    eax,DWORD PTR [edi+0x10]
   12a1f:	mov    DWORD PTR [esi+0x10],eax
   12a22:	lea    eax,[edi+0x14]
   12a25:	push   eax
   12a26:	lea    ecx,[esi+0x14]
   12a29:	call   0x12970
   12a2e:	lea    eax,[edi+0x1c]
   12a31:	push   eax
   12a32:	lea    ecx,[esi+0x1c]
   12a35:	call   0x12970
   12a3a:	lea    eax,[edi+0x24]
   12a3d:	push   eax
   12a3e:	lea    ecx,[esi+0x24]
   12a41:	call   0x12970
   12a46:	mov    eax,DWORD PTR [edi+0x2c]
   12a49:	mov    DWORD PTR [esi+0x2c],eax
   12a4c:	mov    eax,DWORD PTR [edi+0x30]
   12a4f:	mov    DWORD PTR [esi+0x30],eax
   12a52:	mov    eax,DWORD PTR [edi+0x38]
   12a55:	mov    DWORD PTR [esi+0x38],eax
   12a58:	mov    eax,DWORD PTR [edi+0x3c]
   12a5b:	mov    DWORD PTR [esi+0x3c],eax
   12a5e:	mov    eax,DWORD PTR [edi+0x40]
   12a61:	mov    DWORD PTR [esi+0x40],eax
   12a64:	mov    eax,DWORD PTR [edi+0x44]
   12a67:	add    edi,0x48
   12a6a:	push   edi
   12a6b:	lea    ecx,[esi+0x48]
   12a6e:	mov    DWORD PTR [esi+0x44],eax
   12a71:	call   0x12970
   12a76:	pop    edi
   12a77:	mov    eax,esi
   12a79:	pop    esi
   12a7a:	pop    ebp
   12a7b:	ret    0x4
   12a7e:	int3   
   12a7f:	int3   
   12a80:	int3   
   12a81:	int3   
   12a82:	int3   
   12a83:	int3   
   12a84:	mov    edi,edi
   12a86:	push   esi
   12a87:	mov    esi,ecx
   12a89:	lea    ecx,[esi+0x8]
   12a8c:	call   0x11ea2
   12a91:	push   DWORD PTR [esi]
   12a93:	call   0x1da40
   12a98:	pop    ecx
   12a99:	pop    esi
   12a9a:	ret    
   12a9b:	int3   
   12a9c:	int3   
   12a9d:	int3   
   12a9e:	int3   
   12a9f:	int3   
   12aa0:	mov    edi,edi
   12aa2:	push   esi
   12aa3:	mov    esi,ecx
   12aa5:	push   DWORD PTR [esi+0x8]
   12aa8:	call   0x1da40
   12aad:	push   DWORD PTR [esi]
   12aaf:	call   0x1da40
   12ab4:	pop    ecx
   12ab5:	pop    ecx
   12ab6:	pop    esi
   12ab7:	ret    
   12ab8:	int3   
   12ab9:	int3   
   12aba:	int3   
   12abb:	int3   
   12abc:	int3   
   12abd:	int3   
   12abe:	mov    edi,edi
   12ac0:	push   ebp
   12ac1:	mov    ebp,esp
   12ac3:	push   esi
   12ac4:	push   DWORD PTR [ebp+0xc]
   12ac7:	mov    esi,ecx
   12ac9:	push   DWORD PTR [ebp+0x8]
   12acc:	call   0x11178
   12ad1:	mov    eax,esi
   12ad3:	pop    esi
   12ad4:	pop    ebp
   12ad5:	ret    0x8
   12ad8:	int3   
   12ad9:	int3   
   12ada:	int3   
   12adb:	int3   
   12adc:	int3   
   12add:	int3   
   12ade:	mov    edi,edi
   12ae0:	push   ebp
   12ae1:	mov    ebp,esp
   12ae3:	mov    eax,DWORD PTR [ebp+0x8]
   12ae6:	push   esi
   12ae7:	push   DWORD PTR [eax+0x4]
   12aea:	mov    esi,ecx
   12aec:	push   DWORD PTR [eax]
   12aee:	call   0x11178
   12af3:	mov    eax,esi
   12af5:	pop    esi
   12af6:	pop    ebp
   12af7:	ret    0x4
   12afa:	int3   
   12afb:	int3   
   12afc:	int3   
   12afd:	int3   
   12afe:	int3   
   12aff:	int3   
   12b00:	mov    edi,edi
   12b02:	push   ebp
   12b03:	mov    ebp,esp
   12b05:	push   ebx
   12b06:	push   esi
   12b07:	push   edi
   12b08:	mov    edi,DWORD PTR [ebp+0x8]
   12b0b:	mov    eax,DWORD PTR [edi+0x4]
   12b0e:	mov    esi,ecx
   12b10:	mov    ebx,DWORD PTR [esi]
   12b12:	mov    DWORD PTR [esi+0x4],eax
   12b15:	xor    ecx,ecx
   12b17:	push   0x2
   12b19:	inc    eax
   12b1a:	pop    edx
   12b1b:	mul    edx
   12b1d:	seto   cl
   12b20:	neg    ecx
   12b22:	or     ecx,eax
   12b24:	push   ecx
   12b25:	call   0x10a96
   12b2a:	mov    ecx,DWORD PTR [esi+0x4]
   12b2d:	add    ecx,ecx
   12b2f:	push   ecx
   12b30:	mov    DWORD PTR [esi],eax
   12b32:	push   DWORD PTR [edi]
   12b34:	push   eax
   12b35:	call   0x1dac2
   12b3a:	mov    eax,DWORD PTR [esi+0x4]
   12b3d:	mov    ecx,DWORD PTR [esi]
   12b3f:	xor    edx,edx
   12b41:	push   ebx
   12b42:	mov    WORD PTR [ecx+eax*2],dx
   12b46:	call   0x1da40
   12b4b:	add    esp,0x14
   12b4e:	pop    edi
   12b4f:	mov    eax,esi
   12b51:	pop    esi
   12b52:	pop    ebx
   12b53:	pop    ebp
   12b54:	ret    0x4
   12b57:	int3   
   12b58:	int3   
   12b59:	int3   
   12b5a:	int3   
   12b5b:	int3   
   12b5c:	mov    edi,edi
   12b5e:	push   ebp
   12b5f:	mov    ebp,esp
   12b61:	push   esi
   12b62:	mov    esi,DWORD PTR [ebp+0x8]
   12b65:	lea    eax,[ebp+0xc]
   12b68:	push   eax
   12b69:	mov    ecx,esi
   12b6b:	call   0x12ade
   12b70:	xor    ecx,ecx
   12b72:	inc    ecx
   12b73:	cmp    DWORD PTR [esi+0x4],ecx
   12b76:	jbe    0x12b8a
   12b78:	mov    eax,DWORD PTR [esi]
   12b7a:	lea    eax,[eax+ecx*2]
   12b7d:	mov    dx,WORD PTR [eax-0x2]
   12b81:	xor    WORD PTR [eax],dx
   12b84:	inc    ecx
   12b85:	cmp    ecx,DWORD PTR [esi+0x4]
   12b88:	jb     0x12b78
   12b8a:	push   DWORD PTR [ebp+0xc]
   12b8d:	call   0x1da40
   12b92:	pop    ecx
   12b93:	mov    eax,esi
   12b95:	pop    esi
   12b96:	pop    ebp
   12b97:	ret    0xc
   12b9a:	int3   
   12b9b:	int3   
   12b9c:	int3   
   12b9d:	int3   
   12b9e:	int3   
   12b9f:	int3   
   12ba0:	mov    edi,edi
   12ba2:	push   ebp
   12ba3:	mov    ebp,esp
   12ba5:	push   esi
   12ba6:	mov    esi,DWORD PTR [ebp+0x8]
   12ba9:	lea    eax,[ebp+0xc]
   12bac:	push   eax
   12bad:	mov    ecx,esi
   12baf:	call   0x1294e
   12bb4:	xor    ecx,ecx
   12bb6:	inc    ecx
   12bb7:	cmp    DWORD PTR [esi+0x4],ecx
   12bba:	jbe    0x12bcb
   12bbc:	mov    eax,DWORD PTR [esi]
   12bbe:	add    eax,ecx
   12bc0:	mov    dl,BYTE PTR [eax-0x1]
   12bc3:	xor    BYTE PTR [eax],dl
   12bc5:	inc    ecx
   12bc6:	cmp    ecx,DWORD PTR [esi+0x4]
   12bc9:	jb     0x12bbc
   12bcb:	push   DWORD PTR [ebp+0xc]
   12bce:	call   0x1da40
   12bd3:	pop    ecx
   12bd4:	mov    eax,esi
   12bd6:	pop    esi
   12bd7:	pop    ebp
   12bd8:	ret    0xc
   12bdb:	int3   
   12bdc:	int3   
   12bdd:	int3   
   12bde:	int3   
   12bdf:	int3   
   12be0:	mov    edi,edi
   12be2:	push   ebp
   12be3:	mov    ebp,esp
   12be5:	push   esi
   12be6:	push   DWORD PTR [ebp+0x8]
   12be9:	mov    esi,ecx
   12beb:	call   0x1294e
   12bf0:	push   DWORD PTR [ebp+0xc]
   12bf3:	lea    ecx,[esi+0x8]
   12bf6:	call   0x1294e
   12bfb:	mov    eax,esi
   12bfd:	pop    esi
   12bfe:	pop    ebp
   12bff:	ret    0x8
   12c02:	int3   
   12c03:	int3   
   12c04:	int3   
   12c05:	int3   
   12c06:	int3   
   12c07:	int3   
   12c08:	mov    edi,edi
   12c0a:	push   ebp
   12c0b:	mov    ebp,esp
   12c0d:	mov    eax,DWORD PTR [ebp+0x8]
   12c10:	mov    eax,DWORD PTR [eax]
   12c12:	push   esi
   12c13:	push   DWORD PTR [ebp+0xc]
   12c16:	mov    esi,ecx
   12c18:	lea    ecx,[esi+0x4]
   12c1b:	mov    DWORD PTR [esi],eax
   12c1d:	call   0x11ee0
   12c22:	mov    eax,esi
   12c24:	pop    esi
   12c25:	pop    ebp
   12c26:	ret    0x8
   12c29:	int3   
   12c2a:	int3   
   12c2b:	int3   
   12c2c:	int3   
   12c2d:	int3   
   12c2e:	mov    edi,edi
   12c30:	push   ebp
   12c31:	mov    ebp,esp
   12c33:	push   esi
   12c34:	push   edi
   12c35:	mov    edi,DWORD PTR [ebp+0x8]
   12c38:	push   edi
   12c39:	mov    esi,ecx
   12c3b:	call   0x1294e
   12c40:	lea    eax,[edi+0x8]
   12c43:	push   eax
   12c44:	lea    ecx,[esi+0x8]
   12c47:	call   0x1294e
   12c4c:	mov    eax,DWORD PTR [edi+0x10]
   12c4f:	mov    DWORD PTR [esi+0x10],eax
   12c52:	lea    eax,[edi+0x14]
   12c55:	push   eax
   12c56:	lea    ecx,[esi+0x14]
   12c59:	call   0x1294e
   12c5e:	lea    eax,[edi+0x1c]
   12c61:	push   eax
   12c62:	lea    ecx,[esi+0x1c]
   12c65:	call   0x1294e
   12c6a:	lea    eax,[edi+0x24]
   12c6d:	push   eax
   12c6e:	lea    ecx,[esi+0x24]
   12c71:	call   0x1294e
   12c76:	mov    eax,DWORD PTR [edi+0x2c]
   12c79:	mov    DWORD PTR [esi+0x2c],eax
   12c7c:	mov    eax,DWORD PTR [edi+0x30]
   12c7f:	mov    DWORD PTR [esi+0x30],eax
   12c82:	mov    eax,DWORD PTR [edi+0x38]
   12c85:	mov    DWORD PTR [esi+0x38],eax
   12c88:	mov    eax,DWORD PTR [edi+0x3c]
   12c8b:	mov    DWORD PTR [esi+0x3c],eax
   12c8e:	mov    eax,DWORD PTR [edi+0x40]
   12c91:	mov    DWORD PTR [esi+0x40],eax
   12c94:	mov    eax,DWORD PTR [edi+0x44]
   12c97:	add    edi,0x48
   12c9a:	push   edi
   12c9b:	lea    ecx,[esi+0x48]
   12c9e:	mov    DWORD PTR [esi+0x44],eax
   12ca1:	call   0x1294e
   12ca6:	pop    edi
   12ca7:	mov    eax,esi
   12ca9:	pop    esi
   12caa:	pop    ebp
   12cab:	ret    0x4
   12cae:	int3   
   12caf:	int3   
   12cb0:	int3   
   12cb1:	int3   
   12cb2:	int3   
   12cb3:	int3   
   12cb4:	mov    edi,edi
   12cb6:	push   ebp
   12cb7:	mov    ebp,esp
   12cb9:	mov    eax,DWORD PTR [ebp+0x8]
   12cbc:	mov    edx,DWORD PTR ds:0x7f6dc
   12cc2:	jmp    0x12cc6
   12cc4:	mov    eax,ecx
   12cc6:	mov    ecx,DWORD PTR [eax]
   12cc8:	cmp    ecx,edx
   12cca:	jne    0x12cc4
   12ccc:	pop    ebp
   12ccd:	ret    0x4
   12cd0:	int3   
   12cd1:	int3   
   12cd2:	int3   
   12cd3:	int3   
   12cd4:	int3   
   12cd5:	int3   
   12cd6:	mov    edi,edi
   12cd8:	push   ebp
   12cd9:	mov    ebp,esp
   12cdb:	push   esi
   12cdc:	push   DWORD PTR [ebp+0x8]
   12cdf:	mov    esi,ecx
   12ce1:	call   0x12ade
   12ce6:	push   DWORD PTR [ebp+0xc]
   12ce9:	lea    ecx,[esi+0x8]
   12cec:	call   0x12ade
   12cf1:	mov    eax,esi
   12cf3:	pop    esi
   12cf4:	pop    ebp
   12cf5:	ret    0x8
   12cf8:	int3   
   12cf9:	int3   
   12cfa:	int3   
   12cfb:	int3   
   12cfc:	int3   
   12cfd:	int3   
   12cfe:	mov    edi,edi
   12d00:	push   ebp
   12d01:	mov    ebp,esp
   12d03:	mov    eax,DWORD PTR [ecx+0x4]
   12d06:	mov    ecx,DWORD PTR [eax+0x4]
   12d09:	mov    edx,DWORD PTR ds:0x7f6d0
   12d0f:	cmp    ecx,edx
   12d11:	je     0x12d2c
   12d13:	push   esi
   12d14:	mov    esi,DWORD PTR [ebp+0x8]
   12d17:	mov    esi,DWORD PTR [esi]
   12d19:	cmp    DWORD PTR [ecx+0xc],esi
   12d1c:	jae    0x12d23
   12d1e:	mov    ecx,DWORD PTR [ecx+0x8]
   12d21:	jmp    0x12d27
   12d23:	mov    eax,ecx
   12d25:	mov    ecx,DWORD PTR [ecx]
   12d27:	cmp    ecx,edx
   12d29:	jne    0x12d19
   12d2b:	pop    esi
   12d2c:	pop    ebp
   12d2d:	ret    0x4
   12d30:	int3   
   12d31:	int3   
   12d32:	int3   
   12d33:	int3   
   12d34:	int3   
   12d35:	int3   
   12d36:	mov    edi,edi
   12d38:	push   ebp
   12d39:	mov    ebp,esp
   12d3b:	mov    edx,DWORD PTR [ebp+0x8]
   12d3e:	mov    eax,DWORD PTR [edx+0x8]
   12d41:	push   esi
   12d42:	mov    esi,DWORD PTR [eax]
   12d44:	mov    DWORD PTR [edx+0x8],esi
   12d47:	mov    esi,DWORD PTR [eax]
   12d49:	cmp    esi,DWORD PTR ds:0x7f6d0
   12d4f:	je     0x12d54
   12d51:	mov    DWORD PTR [esi+0x4],edx
   12d54:	mov    esi,DWORD PTR [edx+0x4]
   12d57:	mov    DWORD PTR [eax+0x4],esi
   12d5a:	mov    ecx,DWORD PTR [ecx+0x4]
   12d5d:	pop    esi
   12d5e:	cmp    edx,DWORD PTR [ecx+0x4]
   12d61:	jne    0x12d68
   12d63:	mov    DWORD PTR [ecx+0x4],eax
   12d66:	jmp    0x12d76
   12d68:	mov    ecx,DWORD PTR [edx+0x4]
   12d6b:	cmp    edx,DWORD PTR [ecx]
   12d6d:	jne    0x12d73
   12d6f:	mov    DWORD PTR [ecx],eax
   12d71:	jmp    0x12d76
   12d73:	mov    DWORD PTR [ecx+0x8],eax
   12d76:	mov    DWORD PTR [eax],edx
   12d78:	mov    DWORD PTR [edx+0x4],eax
   12d7b:	pop    ebp
   12d7c:	ret    0x4
   12d7f:	int3   
   12d80:	int3   
   12d81:	int3   
   12d82:	int3   
   12d83:	int3   
   12d84:	mov    edi,edi
   12d86:	push   ebp
   12d87:	mov    ebp,esp
   12d89:	mov    edx,DWORD PTR [ebp+0x8]
   12d8c:	mov    eax,DWORD PTR [edx]
   12d8e:	push   esi
   12d8f:	mov    esi,DWORD PTR [eax+0x8]
   12d92:	mov    DWORD PTR [edx],esi
   12d94:	mov    esi,DWORD PTR [eax+0x8]
   12d97:	cmp    esi,DWORD PTR ds:0x7f6d0
   12d9d:	je     0x12da2
   12d9f:	mov    DWORD PTR [esi+0x4],edx
   12da2:	mov    esi,DWORD PTR [edx+0x4]
   12da5:	mov    DWORD PTR [eax+0x4],esi
   12da8:	mov    ecx,DWORD PTR [ecx+0x4]
   12dab:	pop    esi
   12dac:	cmp    edx,DWORD PTR [ecx+0x4]
   12daf:	jne    0x12db6
   12db1:	mov    DWORD PTR [ecx+0x4],eax
   12db4:	jmp    0x12dc5
   12db6:	mov    ecx,DWORD PTR [edx+0x4]
   12db9:	cmp    edx,DWORD PTR [ecx+0x8]
   12dbc:	jne    0x12dc3
   12dbe:	mov    DWORD PTR [ecx+0x8],eax
   12dc1:	jmp    0x12dc5
   12dc3:	mov    DWORD PTR [ecx],eax
   12dc5:	mov    DWORD PTR [eax+0x8],edx
   12dc8:	mov    DWORD PTR [edx+0x4],eax
   12dcb:	pop    ebp
   12dcc:	ret    0x4
   12dcf:	int3   
   12dd0:	int3   
   12dd1:	int3   
   12dd2:	int3   
   12dd3:	int3   
   12dd4:	mov    edi,edi
   12dd6:	push   ebp
   12dd7:	mov    ebp,esp
   12dd9:	mov    eax,DWORD PTR [ecx+0x4]
   12ddc:	push   esi
   12ddd:	mov    esi,DWORD PTR [eax+0x4]
   12de0:	push   edi
   12de1:	mov    edi,eax
   12de3:	jmp    0x12dfe
   12de5:	push   DWORD PTR [ebp+0x8]
   12de8:	lea    eax,[esi+0x10]
   12deb:	push   eax
   12dec:	call   0x197ae
   12df1:	test   al,al
   12df3:	je     0x12dfa
   12df5:	mov    esi,DWORD PTR [esi+0x8]
   12df8:	jmp    0x12dfe
   12dfa:	mov    edi,esi
   12dfc:	mov    esi,DWORD PTR [esi]
   12dfe:	cmp    esi,DWORD PTR ds:0x7f6dc
   12e04:	jne    0x12de5
   12e06:	mov    eax,edi
   12e08:	pop    edi
   12e09:	pop    esi
   12e0a:	pop    ebp
   12e0b:	ret    0x4
   12e0e:	int3   
   12e0f:	int3   
   12e10:	int3   
   12e11:	int3   
   12e12:	int3   
   12e13:	int3   
   12e14:	mov    edi,edi
   12e16:	push   ebp
   12e17:	mov    ebp,esp
   12e19:	mov    eax,DWORD PTR [ecx+0x4]
   12e1c:	push   esi
   12e1d:	mov    esi,DWORD PTR [eax+0x4]
   12e20:	push   edi
   12e21:	mov    edi,eax
   12e23:	jmp    0x12e3e
   12e25:	push   DWORD PTR [ebp+0x8]
   12e28:	lea    eax,[esi+0xc]
   12e2b:	push   eax
   12e2c:	call   0x197ae
   12e31:	test   al,al
   12e33:	je     0x12e3a
   12e35:	mov    esi,DWORD PTR [esi+0x8]
   12e38:	jmp    0x12e3e
   12e3a:	mov    edi,esi
   12e3c:	mov    esi,DWORD PTR [esi]
   12e3e:	cmp    esi,DWORD PTR ds:0x7f6e0
   12e44:	jne    0x12e25
   12e46:	mov    eax,edi
   12e48:	pop    edi
   12e49:	pop    esi
   12e4a:	pop    ebp
   12e4b:	ret    0x4
   12e4e:	int3   
   12e4f:	int3   
   12e50:	int3   
   12e51:	int3   
   12e52:	int3   
   12e53:	int3   
   12e54:	mov    edi,edi
   12e56:	push   ebp
   12e57:	mov    ebp,esp
   12e59:	mov    eax,DWORD PTR [ecx+0x4]
   12e5c:	mov    ecx,DWORD PTR [eax+0x4]
   12e5f:	mov    edx,DWORD PTR ds:0x7f6e4
   12e65:	cmp    ecx,edx
   12e67:	je     0x12e82
   12e69:	push   esi
   12e6a:	mov    esi,DWORD PTR [ebp+0x8]
   12e6d:	mov    esi,DWORD PTR [esi]
   12e6f:	cmp    DWORD PTR [ecx+0xc],esi
   12e72:	jge    0x12e79
   12e74:	mov    ecx,DWORD PTR [ecx+0x8]
   12e77:	jmp    0x12e7d
   12e79:	mov    eax,ecx
   12e7b:	mov    ecx,DWORD PTR [ecx]
   12e7d:	cmp    ecx,edx
   12e7f:	jne    0x12e6f
   12e81:	pop    esi
   12e82:	pop    ebp
   12e83:	ret    0x4
   12e86:	int3   
   12e87:	int3   
   12e88:	int3   
   12e89:	int3   
   12e8a:	int3   
   12e8b:	int3   
   12e8c:	mov    edi,edi
   12e8e:	push   esi
   12e8f:	mov    esi,ecx
   12e91:	mov    ecx,DWORD PTR [esi]
   12e93:	mov    eax,DWORD PTR [ecx+0x8]
   12e96:	cmp    eax,DWORD PTR ds:0x7f6d8
   12e9c:	je     0x12eaa
   12e9e:	push   eax
   12e9f:	call   0x1128e
   12ea4:	jmp    0x12eb9
   12ea6:	mov    DWORD PTR [esi],eax
   12ea8:	mov    ecx,eax
   12eaa:	mov    eax,DWORD PTR [ecx+0x4]
   12ead:	cmp    ecx,DWORD PTR [eax+0x8]
   12eb0:	je     0x12ea6
   12eb2:	mov    ecx,DWORD PTR [esi]
   12eb4:	cmp    DWORD PTR [ecx+0x8],eax
   12eb7:	je     0x12ebb
   12eb9:	mov    DWORD PTR [esi],eax
   12ebb:	pop    esi
   12ebc:	ret    
   12ebd:	int3   
   12ebe:	int3   
   12ebf:	int3   
   12ec0:	int3   
   12ec1:	int3   
   12ec2:	mov    edi,edi
   12ec4:	push   esi
   12ec5:	mov    esi,ecx
   12ec7:	mov    ecx,DWORD PTR [esi]
   12ec9:	cmp    DWORD PTR [ecx+0x10],0x0
   12ecd:	jne    0x12edc
   12ecf:	mov    eax,DWORD PTR [ecx+0x4]
   12ed2:	cmp    DWORD PTR [eax+0x4],ecx
   12ed5:	jne    0x12edc
   12ed7:	mov    eax,DWORD PTR [ecx+0x8]
   12eda:	jmp    0x12ef9
   12edc:	mov    eax,DWORD PTR [ecx]
   12ede:	cmp    eax,DWORD PTR ds:0x7f6d4
   12ee4:	je     0x12ef2
   12ee6:	push   eax
   12ee7:	call   0x11228
   12eec:	jmp    0x12ef9
   12eee:	mov    DWORD PTR [esi],eax
   12ef0:	mov    ecx,eax
   12ef2:	mov    eax,DWORD PTR [ecx+0x4]
   12ef5:	cmp    ecx,DWORD PTR [eax]
   12ef7:	je     0x12eee
   12ef9:	mov    DWORD PTR [esi],eax
   12efb:	pop    esi
   12efc:	ret    
   12efd:	int3   
   12efe:	int3   
   12eff:	int3   
   12f00:	int3   
   12f01:	int3   
   12f02:	mov    edi,edi
   12f04:	push   esi
   12f05:	mov    esi,ecx
   12f07:	mov    ecx,DWORD PTR [esi]
   12f09:	mov    eax,DWORD PTR [ecx+0x8]
   12f0c:	cmp    eax,DWORD PTR ds:0x7f6d4
   12f12:	je     0x12f20
   12f14:	push   eax
   12f15:	call   0x1124a
   12f1a:	jmp    0x12f2f
   12f1c:	mov    DWORD PTR [esi],eax
   12f1e:	mov    ecx,eax
   12f20:	mov    eax,DWORD PTR [ecx+0x4]
   12f23:	cmp    ecx,DWORD PTR [eax+0x8]
   12f26:	je     0x12f1c
   12f28:	mov    ecx,DWORD PTR [esi]
   12f2a:	cmp    DWORD PTR [ecx+0x8],eax
   12f2d:	je     0x12f31
   12f2f:	mov    DWORD PTR [esi],eax
   12f31:	pop    esi
   12f32:	ret    
   12f33:	int3   
   12f34:	int3   
   12f35:	int3   
   12f36:	int3   
   12f37:	int3   
   12f38:	mov    edi,edi
   12f3a:	push   ebp
   12f3b:	mov    ebp,esp
   12f3d:	mov    edx,DWORD PTR [ebp+0x8]
   12f40:	mov    eax,DWORD PTR [edx+0x8]
   12f43:	push   esi
   12f44:	mov    esi,DWORD PTR [eax]
   12f46:	mov    DWORD PTR [edx+0x8],esi
   12f49:	mov    esi,DWORD PTR [eax]
   12f4b:	cmp    esi,DWORD PTR ds:0x7f6d4
   12f51:	je     0x12f56
   12f53:	mov    DWORD PTR [esi+0x4],edx
   12f56:	mov    esi,DWORD PTR [edx+0x4]
   12f59:	mov    DWORD PTR [eax+0x4],esi
   12f5c:	mov    ecx,DWORD PTR [ecx+0x4]
   12f5f:	pop    esi
   12f60:	cmp    edx,DWORD PTR [ecx+0x4]
   12f63:	jne    0x12f6a
   12f65:	mov    DWORD PTR [ecx+0x4],eax
   12f68:	jmp    0x12f78
   12f6a:	mov    ecx,DWORD PTR [edx+0x4]
   12f6d:	cmp    edx,DWORD PTR [ecx]
   12f6f:	jne    0x12f75
   12f71:	mov    DWORD PTR [ecx],eax
   12f73:	jmp    0x12f78
   12f75:	mov    DWORD PTR [ecx+0x8],eax
   12f78:	mov    DWORD PTR [eax],edx
   12f7a:	mov    DWORD PTR [edx+0x4],eax
   12f7d:	pop    ebp
   12f7e:	ret    0x4
   12f81:	int3   
   12f82:	int3   
   12f83:	int3   
   12f84:	int3   
   12f85:	int3   
   12f86:	mov    edi,edi
   12f88:	push   ebp
   12f89:	mov    ebp,esp
   12f8b:	mov    edx,DWORD PTR [ebp+0x8]
   12f8e:	mov    eax,DWORD PTR [edx]
   12f90:	push   esi
   12f91:	mov    esi,DWORD PTR [eax+0x8]
   12f94:	mov    DWORD PTR [edx],esi
   12f96:	mov    esi,DWORD PTR [eax+0x8]
   12f99:	cmp    esi,DWORD PTR ds:0x7f6d4
   12f9f:	je     0x12fa4
   12fa1:	mov    DWORD PTR [esi+0x4],edx
   12fa4:	mov    esi,DWORD PTR [edx+0x4]
   12fa7:	mov    DWORD PTR [eax+0x4],esi
   12faa:	mov    ecx,DWORD PTR [ecx+0x4]
   12fad:	pop    esi
   12fae:	cmp    edx,DWORD PTR [ecx+0x4]
   12fb1:	jne    0x12fb8
   12fb3:	mov    DWORD PTR [ecx+0x4],eax
   12fb6:	jmp    0x12fc7
   12fb8:	mov    ecx,DWORD PTR [edx+0x4]
   12fbb:	cmp    edx,DWORD PTR [ecx+0x8]
   12fbe:	jne    0x12fc5
   12fc0:	mov    DWORD PTR [ecx+0x8],eax
   12fc3:	jmp    0x12fc7
   12fc5:	mov    DWORD PTR [ecx],eax
   12fc7:	mov    DWORD PTR [eax+0x8],edx
   12fca:	mov    DWORD PTR [edx+0x4],eax
   12fcd:	pop    ebp
   12fce:	ret    0x4
   12fd1:	int3   
   12fd2:	int3   
   12fd3:	int3   
   12fd4:	int3   
   12fd5:	int3   
   12fd6:	mov    edi,edi
   12fd8:	push   ebp
   12fd9:	mov    ebp,esp
   12fdb:	mov    eax,DWORD PTR [ecx+0x4]
   12fde:	push   esi
   12fdf:	mov    esi,DWORD PTR [eax+0x4]
   12fe2:	push   edi
   12fe3:	mov    edi,eax
   12fe5:	jmp    0x13000
   12fe7:	push   DWORD PTR [ebp+0x8]
   12fea:	lea    eax,[esi+0x10]
   12fed:	push   eax
   12fee:	call   0x197ae
   12ff3:	test   al,al
   12ff5:	je     0x12ffc
   12ff7:	mov    esi,DWORD PTR [esi+0x8]
   12ffa:	jmp    0x13000
   12ffc:	mov    edi,esi
   12ffe:	mov    esi,DWORD PTR [esi]
   13000:	cmp    esi,DWORD PTR ds:0x7f6d8
   13006:	jne    0x12fe7
   13008:	mov    eax,edi
   1300a:	pop    edi
   1300b:	pop    esi
   1300c:	pop    ebp
   1300d:	ret    0x4
   13010:	int3   
   13011:	int3   
   13012:	int3   
   13013:	int3   
   13014:	int3   
   13015:	int3   
   13016:	mov    edi,edi
   13018:	push   ebp
   13019:	mov    ebp,esp
   1301b:	mov    edx,DWORD PTR [ebp+0x8]
   1301e:	mov    eax,DWORD PTR [edx+0x8]
   13021:	push   esi
   13022:	mov    esi,DWORD PTR [eax]
   13024:	mov    DWORD PTR [edx+0x8],esi
   13027:	mov    esi,DWORD PTR [eax]
   13029:	cmp    esi,DWORD PTR ds:0x7f6d8
   1302f:	je     0x13034
   13031:	mov    DWORD PTR [esi+0x4],edx
   13034:	mov    esi,DWORD PTR [edx+0x4]
   13037:	mov    DWORD PTR [eax+0x4],esi
   1303a:	mov    ecx,DWORD PTR [ecx+0x4]
   1303d:	pop    esi
   1303e:	cmp    edx,DWORD PTR [ecx+0x4]
   13041:	jne    0x13048
   13043:	mov    DWORD PTR [ecx+0x4],eax
   13046:	jmp    0x13056
   13048:	mov    ecx,DWORD PTR [edx+0x4]
   1304b:	cmp    edx,DWORD PTR [ecx]
   1304d:	jne    0x13053
   1304f:	mov    DWORD PTR [ecx],eax
   13051:	jmp    0x13056
   13053:	mov    DWORD PTR [ecx+0x8],eax
   13056:	mov    DWORD PTR [eax],edx
   13058:	mov    DWORD PTR [edx+0x4],eax
   1305b:	pop    ebp
   1305c:	ret    0x4
   1305f:	int3   
   13060:	int3   
   13061:	int3   
   13062:	int3   
   13063:	int3   
   13064:	mov    edi,edi
   13066:	push   ebp
   13067:	mov    ebp,esp
   13069:	mov    edx,DWORD PTR [ebp+0x8]
   1306c:	mov    eax,DWORD PTR [edx]
   1306e:	push   esi
   1306f:	mov    esi,DWORD PTR [eax+0x8]
   13072:	mov    DWORD PTR [edx],esi
   13074:	mov    esi,DWORD PTR [eax+0x8]
   13077:	cmp    esi,DWORD PTR ds:0x7f6d8
   1307d:	je     0x13082
   1307f:	mov    DWORD PTR [esi+0x4],edx
   13082:	mov    esi,DWORD PTR [edx+0x4]
   13085:	mov    DWORD PTR [eax+0x4],esi
   13088:	mov    ecx,DWORD PTR [ecx+0x4]
   1308b:	pop    esi
   1308c:	cmp    edx,DWORD PTR [ecx+0x4]
   1308f:	jne    0x13096
   13091:	mov    DWORD PTR [ecx+0x4],eax
   13094:	jmp    0x130a5
   13096:	mov    ecx,DWORD PTR [edx+0x4]
   13099:	cmp    edx,DWORD PTR [ecx+0x8]
   1309c:	jne    0x130a3
   1309e:	mov    DWORD PTR [ecx+0x8],eax
   130a1:	jmp    0x130a5
   130a3:	mov    DWORD PTR [ecx],eax
   130a5:	mov    DWORD PTR [eax+0x8],edx
   130a8:	mov    DWORD PTR [edx+0x4],eax
   130ab:	pop    ebp
   130ac:	ret    0x4
   130af:	int3   
   130b0:	int3   
   130b1:	int3   
   130b2:	int3   
   130b3:	int3   
   130b4:	mov    edi,edi
   130b6:	push   ebp
   130b7:	mov    ebp,esp
   130b9:	mov    eax,DWORD PTR [ecx+0x4]
   130bc:	mov    ecx,DWORD PTR [eax+0x4]
   130bf:	mov    edx,DWORD PTR ds:0x7f6d0
   130c5:	cmp    ecx,edx
   130c7:	je     0x130e2
   130c9:	push   esi
   130ca:	mov    esi,DWORD PTR [ebp+0x8]
   130cd:	mov    esi,DWORD PTR [esi]
   130cf:	cmp    esi,DWORD PTR [ecx+0xc]
   130d2:	jae    0x130da
   130d4:	mov    eax,ecx
   130d6:	mov    ecx,DWORD PTR [ecx]
   130d8:	jmp    0x130dd
   130da:	mov    ecx,DWORD PTR [ecx+0x8]
   130dd:	cmp    ecx,edx
   130df:	jne    0x130cf
   130e1:	pop    esi
   130e2:	pop    ebp
   130e3:	ret    0x4
   130e6:	int3   
   130e7:	int3   
   130e8:	int3   
   130e9:	int3   
   130ea:	int3   
   130eb:	int3   
   130ec:	mov    edi,edi
   130ee:	push   ebp
   130ef:	mov    ebp,esp
   130f1:	mov    eax,DWORD PTR [ecx+0x4]
   130f4:	push   esi
   130f5:	mov    esi,DWORD PTR [eax+0x4]
   130f8:	push   edi
   130f9:	mov    edi,eax
   130fb:	jmp    0x13116
   130fd:	lea    eax,[esi+0x10]
   13100:	push   eax
   13101:	push   DWORD PTR [ebp+0x8]
   13104:	call   0x197ae
   13109:	test   al,al
   1310b:	je     0x13113
   1310d:	mov    edi,esi
   1310f:	mov    esi,DWORD PTR [esi]
   13111:	jmp    0x13116
   13113:	mov    esi,DWORD PTR [esi+0x8]
   13116:	cmp    esi,DWORD PTR ds:0x7f6dc
   1311c:	jne    0x130fd
   1311e:	mov    eax,edi
   13120:	pop    edi
   13121:	pop    esi
   13122:	pop    ebp
   13123:	ret    0x4
   13126:	int3   
   13127:	int3   
   13128:	int3   
   13129:	int3   
   1312a:	int3   
   1312b:	int3   
   1312c:	mov    edi,edi
   1312e:	push   ebp
   1312f:	mov    ebp,esp
   13131:	mov    edx,DWORD PTR [ebp+0x8]
   13134:	mov    eax,DWORD PTR [edx+0x8]
   13137:	push   esi
   13138:	mov    esi,DWORD PTR [eax]
   1313a:	mov    DWORD PTR [edx+0x8],esi
   1313d:	mov    esi,DWORD PTR [eax]
   1313f:	cmp    esi,DWORD PTR ds:0x7f6e0
   13145:	je     0x1314a
   13147:	mov    DWORD PTR [esi+0x4],edx
   1314a:	mov    esi,DWORD PTR [edx+0x4]
   1314d:	mov    DWORD PTR [eax+0x4],esi
   13150:	mov    ecx,DWORD PTR [ecx+0x4]
   13153:	pop    esi
   13154:	cmp    edx,DWORD PTR [ecx+0x4]
   13157:	jne    0x1315e
   13159:	mov    DWORD PTR [ecx+0x4],eax
   1315c:	jmp    0x1316c
   1315e:	mov    ecx,DWORD PTR [edx+0x4]
   13161:	cmp    edx,DWORD PTR [ecx]
   13163:	jne    0x13169
   13165:	mov    DWORD PTR [ecx],eax
   13167:	jmp    0x1316c
   13169:	mov    DWORD PTR [ecx+0x8],eax
   1316c:	mov    DWORD PTR [eax],edx
   1316e:	mov    DWORD PTR [edx+0x4],eax
   13171:	pop    ebp
   13172:	ret    0x4
   13175:	int3   
   13176:	int3   
   13177:	int3   
   13178:	int3   
   13179:	int3   
   1317a:	mov    edi,edi
   1317c:	push   ebp
   1317d:	mov    ebp,esp
   1317f:	mov    edx,DWORD PTR [ebp+0x8]
   13182:	mov    eax,DWORD PTR [edx]
   13184:	push   esi
   13185:	mov    esi,DWORD PTR [eax+0x8]
   13188:	mov    DWORD PTR [edx],esi
   1318a:	mov    esi,DWORD PTR [eax+0x8]
   1318d:	cmp    esi,DWORD PTR ds:0x7f6e0
   13193:	je     0x13198
   13195:	mov    DWORD PTR [esi+0x4],edx
   13198:	mov    esi,DWORD PTR [edx+0x4]
   1319b:	mov    DWORD PTR [eax+0x4],esi
   1319e:	mov    ecx,DWORD PTR [ecx+0x4]
   131a1:	pop    esi
   131a2:	cmp    edx,DWORD PTR [ecx+0x4]
   131a5:	jne    0x131ac
   131a7:	mov    DWORD PTR [ecx+0x4],eax
   131aa:	jmp    0x131bb
   131ac:	mov    ecx,DWORD PTR [edx+0x4]
   131af:	cmp    edx,DWORD PTR [ecx+0x8]
   131b2:	jne    0x131b9
   131b4:	mov    DWORD PTR [ecx+0x8],eax
   131b7:	jmp    0x131bb
   131b9:	mov    DWORD PTR [ecx],eax
   131bb:	mov    DWORD PTR [eax+0x8],edx
   131be:	mov    DWORD PTR [edx+0x4],eax
   131c1:	pop    ebp
   131c2:	ret    0x4
   131c5:	int3   
   131c6:	int3   
   131c7:	int3   
   131c8:	int3   
   131c9:	int3   
   131ca:	mov    edi,edi
   131cc:	push   ebp
   131cd:	mov    ebp,esp
   131cf:	mov    eax,DWORD PTR [ecx+0x4]
   131d2:	push   esi
   131d3:	mov    esi,DWORD PTR [eax+0x4]
   131d6:	push   edi
   131d7:	mov    edi,eax
   131d9:	jmp    0x131f4
   131db:	lea    eax,[esi+0xc]
   131de:	push   eax
   131df:	push   DWORD PTR [ebp+0x8]
   131e2:	call   0x197ae
   131e7:	test   al,al
   131e9:	je     0x131f1
   131eb:	mov    edi,esi
   131ed:	mov    esi,DWORD PTR [esi]
   131ef:	jmp    0x131f4
   131f1:	mov    esi,DWORD PTR [esi+0x8]
   131f4:	cmp    esi,DWORD PTR ds:0x7f6e0
   131fa:	jne    0x131db
   131fc:	mov    eax,edi
   131fe:	pop    edi
   131ff:	pop    esi
   13200:	pop    ebp
   13201:	ret    0x4
   13204:	int3   
   13205:	int3   
   13206:	int3   
   13207:	int3   
   13208:	int3   
   13209:	int3   
   1320a:	mov    edi,edi
   1320c:	push   ebp
   1320d:	mov    ebp,esp
   1320f:	mov    edx,DWORD PTR [ebp+0x8]
   13212:	mov    eax,DWORD PTR [edx+0x8]
   13215:	push   esi
   13216:	mov    esi,DWORD PTR [eax]
   13218:	mov    DWORD PTR [edx+0x8],esi
   1321b:	mov    esi,DWORD PTR [eax]
   1321d:	cmp    esi,DWORD PTR ds:0x7f6e4
   13223:	je     0x13228
   13225:	mov    DWORD PTR [esi+0x4],edx
   13228:	mov    esi,DWORD PTR [edx+0x4]
   1322b:	mov    DWORD PTR [eax+0x4],esi
   1322e:	mov    ecx,DWORD PTR [ecx+0x4]
   13231:	pop    esi
   13232:	cmp    edx,DWORD PTR [ecx+0x4]
   13235:	jne    0x1323c
   13237:	mov    DWORD PTR [ecx+0x4],eax
   1323a:	jmp    0x1324a
   1323c:	mov    ecx,DWORD PTR [edx+0x4]
   1323f:	cmp    edx,DWORD PTR [ecx]
   13241:	jne    0x13247
   13243:	mov    DWORD PTR [ecx],eax
   13245:	jmp    0x1324a
   13247:	mov    DWORD PTR [ecx+0x8],eax
   1324a:	mov    DWORD PTR [eax],edx
   1324c:	mov    DWORD PTR [edx+0x4],eax
   1324f:	pop    ebp
   13250:	ret    0x4
   13253:	int3   
   13254:	int3   
   13255:	int3   
   13256:	int3   
   13257:	int3   
   13258:	mov    edi,edi
   1325a:	push   ebp
   1325b:	mov    ebp,esp
   1325d:	mov    edx,DWORD PTR [ebp+0x8]
   13260:	mov    eax,DWORD PTR [edx]
   13262:	push   esi
   13263:	mov    esi,DWORD PTR [eax+0x8]
   13266:	mov    DWORD PTR [edx],esi
   13268:	mov    esi,DWORD PTR [eax+0x8]
   1326b:	cmp    esi,DWORD PTR ds:0x7f6e4
   13271:	je     0x13276
   13273:	mov    DWORD PTR [esi+0x4],edx
   13276:	mov    esi,DWORD PTR [edx+0x4]
   13279:	mov    DWORD PTR [eax+0x4],esi
   1327c:	mov    ecx,DWORD PTR [ecx+0x4]
   1327f:	pop    esi
   13280:	cmp    edx,DWORD PTR [ecx+0x4]
   13283:	jne    0x1328a
   13285:	mov    DWORD PTR [ecx+0x4],eax
   13288:	jmp    0x13299
   1328a:	mov    ecx,DWORD PTR [edx+0x4]
   1328d:	cmp    edx,DWORD PTR [ecx+0x8]
   13290:	jne    0x13297
   13292:	mov    DWORD PTR [ecx+0x8],eax
   13295:	jmp    0x13299
   13297:	mov    DWORD PTR [ecx],eax
   13299:	mov    DWORD PTR [eax+0x8],edx
   1329c:	mov    DWORD PTR [edx+0x4],eax
   1329f:	pop    ebp
   132a0:	ret    0x4
   132a3:	int3   
   132a4:	int3   
   132a5:	int3   
   132a6:	int3   
   132a7:	int3   
   132a8:	mov    edi,edi
   132aa:	push   ebp
   132ab:	mov    ebp,esp
   132ad:	mov    eax,DWORD PTR [ecx+0x4]
   132b0:	mov    ecx,DWORD PTR [eax+0x4]
   132b3:	mov    edx,DWORD PTR ds:0x7f6e4
   132b9:	cmp    ecx,edx
   132bb:	je     0x132d6
   132bd:	push   esi
   132be:	mov    esi,DWORD PTR [ebp+0x8]
   132c1:	mov    esi,DWORD PTR [esi]
   132c3:	cmp    esi,DWORD PTR [ecx+0xc]
   132c6:	jge    0x132ce
   132c8:	mov    eax,ecx
   132ca:	mov    ecx,DWORD PTR [ecx]
   132cc:	jmp    0x132d1
   132ce:	mov    ecx,DWORD PTR [ecx+0x8]
   132d1:	cmp    ecx,edx
   132d3:	jne    0x132c3
   132d5:	pop    esi
   132d6:	pop    ebp
   132d7:	ret    0x4
   132da:	int3   
   132db:	int3   
   132dc:	int3   
   132dd:	int3   
   132de:	int3   
   132df:	int3   
   132e0:	mov    edi,edi
   132e2:	push   ebp
   132e3:	mov    ebp,esp
   132e5:	mov    eax,DWORD PTR [ecx+0x4]
   132e8:	push   esi
   132e9:	mov    esi,DWORD PTR [eax+0x4]
   132ec:	push   edi
   132ed:	mov    edi,eax
   132ef:	jmp    0x1330a
   132f1:	push   DWORD PTR [ebp+0x8]
   132f4:	lea    eax,[esi+0xc]
   132f7:	push   eax
   132f8:	call   0x197de
   132fd:	test   al,al
   132ff:	je     0x13306
   13301:	mov    esi,DWORD PTR [esi+0x8]
   13304:	jmp    0x1330a
   13306:	mov    edi,esi
   13308:	mov    esi,DWORD PTR [esi]
   1330a:	cmp    esi,DWORD PTR ds:0x7f6ec
   13310:	jne    0x132f1
   13312:	mov    eax,edi
   13314:	pop    edi
   13315:	pop    esi
   13316:	pop    ebp
   13317:	ret    0x4
   1331a:	int3   
   1331b:	int3   
   1331c:	int3   
   1331d:	int3   
   1331e:	int3   
   1331f:	int3   
   13320:	mov    edi,edi
   13322:	push   ebp
   13323:	mov    ebp,esp
   13325:	mov    edx,DWORD PTR [ebp+0x8]
   13328:	mov    eax,DWORD PTR [edx+0x8]
   1332b:	push   esi
   1332c:	mov    esi,DWORD PTR [eax]
   1332e:	mov    DWORD PTR [edx+0x8],esi
   13331:	mov    esi,DWORD PTR [eax]
   13333:	cmp    esi,DWORD PTR ds:0x7f6ec
   13339:	je     0x1333e
   1333b:	mov    DWORD PTR [esi+0x4],edx
   1333e:	mov    esi,DWORD PTR [edx+0x4]
   13341:	mov    DWORD PTR [eax+0x4],esi
   13344:	mov    ecx,DWORD PTR [ecx+0x4]
   13347:	pop    esi
   13348:	cmp    edx,DWORD PTR [ecx+0x4]
   1334b:	jne    0x13352
   1334d:	mov    DWORD PTR [ecx+0x4],eax
   13350:	jmp    0x13360
   13352:	mov    ecx,DWORD PTR [edx+0x4]
   13355:	cmp    edx,DWORD PTR [ecx]
   13357:	jne    0x1335d
   13359:	mov    DWORD PTR [ecx],eax
   1335b:	jmp    0x13360
   1335d:	mov    DWORD PTR [ecx+0x8],eax
   13360:	mov    DWORD PTR [eax],edx
   13362:	mov    DWORD PTR [edx+0x4],eax
   13365:	pop    ebp
   13366:	ret    0x4
   13369:	int3   
   1336a:	int3   
   1336b:	int3   
   1336c:	int3   
   1336d:	int3   
   1336e:	mov    edi,edi
   13370:	push   ebp
   13371:	mov    ebp,esp
   13373:	mov    edx,DWORD PTR [ebp+0x8]
   13376:	mov    eax,DWORD PTR [edx]
   13378:	push   esi
   13379:	mov    esi,DWORD PTR [eax+0x8]
   1337c:	mov    DWORD PTR [edx],esi
   1337e:	mov    esi,DWORD PTR [eax+0x8]
   13381:	cmp    esi,DWORD PTR ds:0x7f6ec
   13387:	je     0x1338c
   13389:	mov    DWORD PTR [esi+0x4],edx
   1338c:	mov    esi,DWORD PTR [edx+0x4]
   1338f:	mov    DWORD PTR [eax+0x4],esi
   13392:	mov    ecx,DWORD PTR [ecx+0x4]
   13395:	pop    esi
   13396:	cmp    edx,DWORD PTR [ecx+0x4]
   13399:	jne    0x133a0
   1339b:	mov    DWORD PTR [ecx+0x4],eax
   1339e:	jmp    0x133af
   133a0:	mov    ecx,DWORD PTR [edx+0x4]
   133a3:	cmp    edx,DWORD PTR [ecx+0x8]
   133a6:	jne    0x133ad
   133a8:	mov    DWORD PTR [ecx+0x8],eax
   133ab:	jmp    0x133af
   133ad:	mov    DWORD PTR [ecx],eax
   133af:	mov    DWORD PTR [eax+0x8],edx
   133b2:	mov    DWORD PTR [edx+0x4],eax
   133b5:	pop    ebp
   133b6:	ret    0x4
   133b9:	int3   
   133ba:	int3   
   133bb:	int3   
   133bc:	int3   
   133bd:	int3   
   133be:	mov    edi,edi
   133c0:	push   esi
   133c1:	mov    esi,ecx
   133c3:	mov    ecx,DWORD PTR [esi]
   133c5:	cmp    DWORD PTR [ecx+0x1c],0x0
   133c9:	jne    0x133d8
   133cb:	mov    eax,DWORD PTR [ecx+0x4]
   133ce:	cmp    DWORD PTR [eax+0x4],ecx
   133d1:	jne    0x133d8
   133d3:	mov    eax,DWORD PTR [ecx+0x8]
   133d6:	jmp    0x133f5
   133d8:	mov    eax,DWORD PTR [ecx]
   133da:	cmp    eax,DWORD PTR ds:0x7f6ec
   133e0:	je     0x133ee
   133e2:	push   eax
   133e3:	call   0x115da
   133e8:	jmp    0x133f5
   133ea:	mov    DWORD PTR [esi],eax
   133ec:	mov    ecx,eax
   133ee:	mov    eax,DWORD PTR [ecx+0x4]
   133f1:	cmp    ecx,DWORD PTR [eax]
   133f3:	je     0x133ea
   133f5:	mov    DWORD PTR [esi],eax
   133f7:	pop    esi
   133f8:	ret    
   133f9:	int3   
   133fa:	int3   
   133fb:	int3   
   133fc:	int3   
   133fd:	int3   
   133fe:	mov    edi,edi
   13400:	push   ebp
   13401:	mov    ebp,esp
   13403:	mov    eax,DWORD PTR [ecx+0x4]
   13406:	mov    ecx,DWORD PTR [eax+0x4]
   13409:	mov    edx,DWORD PTR ds:0x7f6d4
   1340f:	cmp    ecx,edx
   13411:	je     0x1342c
   13413:	push   esi
   13414:	mov    esi,DWORD PTR [ebp+0x8]
   13417:	mov    esi,DWORD PTR [esi]
   13419:	cmp    DWORD PTR [ecx+0xc],esi
   1341c:	jae    0x13423
   1341e:	mov    ecx,DWORD PTR [ecx+0x8]
   13421:	jmp    0x13427
   13423:	mov    eax,ecx
   13425:	mov    ecx,DWORD PTR [ecx]
   13427:	cmp    ecx,edx
   13429:	jne    0x13419
   1342b:	pop    esi
   1342c:	pop    ebp
   1342d:	ret    0x4
   13430:	int3   
   13431:	int3   
   13432:	int3   
   13433:	int3   
   13434:	int3   
   13435:	int3   
   13436:	mov    edi,edi
   13438:	push   ebp
   13439:	mov    ebp,esp
   1343b:	mov    eax,DWORD PTR [ecx+0x4]
   1343e:	mov    ecx,DWORD PTR [eax+0x4]
   13441:	mov    edx,DWORD PTR ds:0x7f6d4
   13447:	cmp    ecx,edx
   13449:	je     0x13464
   1344b:	push   esi
   1344c:	mov    esi,DWORD PTR [ebp+0x8]
   1344f:	mov    esi,DWORD PTR [esi]
   13451:	cmp    esi,DWORD PTR [ecx+0xc]
   13454:	jae    0x1345c
   13456:	mov    eax,ecx
   13458:	mov    ecx,DWORD PTR [ecx]
   1345a:	jmp    0x1345f
   1345c:	mov    ecx,DWORD PTR [ecx+0x8]
   1345f:	cmp    ecx,edx
   13461:	jne    0x13451
   13463:	pop    esi
   13464:	pop    ebp
   13465:	ret    0x4
   13468:	int3   
   13469:	int3   
   1346a:	int3   
   1346b:	int3   
   1346c:	int3   
   1346d:	int3   
   1346e:	mov    edi,edi
   13470:	push   ebp
   13471:	mov    ebp,esp
   13473:	push   esi
   13474:	push   edi
   13475:	mov    edi,DWORD PTR [ebp+0x8]
   13478:	push   edi
   13479:	mov    esi,ecx
   1347b:	call   0x1294e
   13480:	add    edi,0x8
   13483:	push   edi
   13484:	lea    ecx,[esi+0x8]
   13487:	call   0x1294e
   1348c:	pop    edi
   1348d:	mov    eax,esi
   1348f:	pop    esi
   13490:	pop    ebp
   13491:	ret    0x4
   13494:	int3   
   13495:	int3   
   13496:	int3   
   13497:	int3   
   13498:	int3   
   13499:	int3   
   1349a:	mov    edi,edi
   1349c:	push   ebp
   1349d:	mov    ebp,esp
   1349f:	mov    ecx,DWORD PTR [ebp+0x8]
   134a2:	push   0x0
   134a4:	call   0x11682
   134a9:	pop    ebp
   134aa:	ret    0x4
   134ad:	int3   
   134ae:	int3   
   134af:	int3   
   134b0:	int3   
   134b1:	int3   
   134b2:	mov    edi,edi
   134b4:	push   ebp
   134b5:	mov    ebp,esp
   134b7:	push   esi
   134b8:	push   edi
   134b9:	mov    edi,DWORD PTR [ebp+0x8]
   134bc:	push   edi
   134bd:	mov    esi,ecx
   134bf:	call   0x12c2e
   134c4:	mov    eax,DWORD PTR [edi+0x50]
   134c7:	mov    DWORD PTR [esi+0x50],eax
   134ca:	pop    edi
   134cb:	mov    eax,esi
   134cd:	pop    esi
   134ce:	pop    ebp
   134cf:	ret    0x4
   134d2:	int3   
   134d3:	int3   
   134d4:	int3   
   134d5:	int3   
   134d6:	int3   
   134d7:	int3   
   134d8:	mov    edi,edi
   134da:	push   ebp
   134db:	mov    ebp,esp
   134dd:	push   esi
   134de:	push   edi
   134df:	mov    edi,DWORD PTR [ebp+0x8]
   134e2:	push   edi
   134e3:	mov    esi,ecx
   134e5:	call   0x1294e
   134ea:	add    edi,0x8
   134ed:	push   edi
   134ee:	lea    ecx,[esi+0x8]
   134f1:	call   0x134b2
   134f6:	pop    edi
   134f7:	mov    eax,esi
   134f9:	pop    esi
   134fa:	pop    ebp
   134fb:	ret    0x4
   134fe:	int3   
   134ff:	int3   
   13500:	int3   
   13501:	int3   
   13502:	int3   
   13503:	int3   
   13504:	mov    edi,edi
   13506:	push   ebp
   13507:	mov    ebp,esp
   13509:	push   esi
   1350a:	mov    esi,ecx
   1350c:	call   0x12a84
   13511:	test   BYTE PTR [ebp+0x8],0x1
   13515:	je     0x1351e
   13517:	push   esi
   13518:	call   0x1da40
   1351d:	pop    ecx
   1351e:	mov    eax,esi
   13520:	pop    esi
   13521:	pop    ebp
   13522:	ret    0x4
   13525:	int3   
   13526:	int3   
   13527:	int3   
   13528:	int3   
   13529:	int3   
   1352a:	mov    edi,edi
   1352c:	push   ebp
   1352d:	mov    ebp,esp
   1352f:	push   esi
   13530:	push   edi
   13531:	mov    edi,DWORD PTR [ebp+0x8]
   13534:	push   edi
   13535:	mov    esi,ecx
   13537:	call   0x1294e
   1353c:	add    edi,0x8
   1353f:	push   edi
   13540:	lea    ecx,[esi+0x8]
   13543:	call   0x12c2e
   13548:	pop    edi
   13549:	mov    eax,esi
   1354b:	pop    esi
   1354c:	pop    ebp
   1354d:	ret    0x4
   13550:	int3   
   13551:	int3   
   13552:	int3   
   13553:	int3   
   13554:	int3   
   13555:	int3   
   13556:	mov    edi,edi
   13558:	push   ebp
   13559:	mov    ebp,esp
   1355b:	mov    eax,DWORD PTR [ebp+0x8]
   1355e:	push   esi
   1355f:	mov    esi,ecx
   13561:	mov    ecx,DWORD PTR [eax]
   13563:	add    eax,0x4
   13566:	mov    DWORD PTR [esi],ecx
   13568:	push   eax
   13569:	lea    ecx,[esi+0x4]
   1356c:	call   0x11ee0
   13571:	mov    eax,esi
   13573:	pop    esi
   13574:	pop    ebp
   13575:	ret    0x4
   13578:	int3   
   13579:	int3   
   1357a:	int3   
   1357b:	int3   
   1357c:	int3   
   1357d:	int3   
   1357e:	mov    edi,edi
   13580:	push   ebp
   13581:	mov    ebp,esp
   13583:	push   esi
   13584:	mov    esi,ecx
   13586:	mov    ecx,DWORD PTR [esi+0x4]
   13589:	test   ecx,ecx
   1358b:	je     0x13592
   1358d:	call   0x10aca
   13592:	test   BYTE PTR [ebp+0x8],0x1
   13596:	je     0x1359f
   13598:	push   esi
   13599:	call   0x1da40
   1359e:	pop    ecx
   1359f:	mov    eax,esi
   135a1:	pop    esi
   135a2:	pop    ebp
   135a3:	ret    0x4
   135a6:	int3   
   135a7:	int3   
   135a8:	int3   
   135a9:	int3   
   135aa:	int3   
   135ab:	int3   
   135ac:	mov    edi,edi
   135ae:	push   ebp
   135af:	mov    ebp,esp
   135b1:	push   esi
   135b2:	push   edi
   135b3:	mov    edi,DWORD PTR [ebp+0x8]
   135b6:	push   edi
   135b7:	mov    esi,ecx
   135b9:	call   0x12ade
   135be:	add    edi,0x8
   135c1:	push   edi
   135c2:	lea    ecx,[esi+0x8]
   135c5:	call   0x12ade
   135ca:	pop    edi
   135cb:	mov    eax,esi
   135cd:	pop    esi
   135ce:	pop    ebp
   135cf:	ret    0x4
   135d2:	int3   
   135d3:	int3   
   135d4:	int3   
   135d5:	int3   
   135d6:	int3   
   135d7:	int3   
   135d8:	mov    edi,edi
   135da:	push   ebp
   135db:	mov    ebp,esp
   135dd:	push   esi
   135de:	push   DWORD PTR [ebp+0x8]
   135e1:	mov    esi,ecx
   135e3:	call   0x1294e
   135e8:	push   DWORD PTR [ebp+0xc]
   135eb:	lea    ecx,[esi+0x8]
   135ee:	call   0x134b2
   135f3:	mov    eax,esi
   135f5:	pop    esi
   135f6:	pop    ebp
   135f7:	ret    0x8
   135fa:	int3   
   135fb:	int3   
   135fc:	int3   
   135fd:	int3   
   135fe:	int3   
   135ff:	int3   
   13600:	mov    edi,edi
   13602:	push   ebp
   13603:	mov    ebp,esp
   13605:	push   edi
   13606:	mov    edi,DWORD PTR [ebp+0xc]
   13609:	cmp    DWORD PTR [ebp+0x8],edi
   1360c:	je     0x13622
   1360e:	push   esi
   1360f:	mov    esi,DWORD PTR [ebp+0x10]
   13612:	inc    DWORD PTR [esi]
   13614:	lea    ecx,[ebp+0x8]
   13617:	call   0x112f0
   1361c:	cmp    DWORD PTR [ebp+0x8],edi
   1361f:	jne    0x13612
   13621:	pop    esi
   13622:	pop    edi
   13623:	pop    ebp
   13624:	ret    
   13625:	int3   
   13626:	int3   
   13627:	int3   
   13628:	int3   
   13629:	int3   
   1362a:	mov    edi,edi
   1362c:	push   ebp
   1362d:	mov    ebp,esp
   1362f:	push   edi
   13630:	mov    edi,DWORD PTR [ebp+0xc]
   13633:	cmp    DWORD PTR [ebp+0x8],edi
   13636:	je     0x1364c
   13638:	push   esi
   13639:	mov    esi,DWORD PTR [ebp+0x10]
   1363c:	inc    DWORD PTR [esi]
   1363e:	lea    ecx,[ebp+0x8]
   13641:	call   0x1156e
   13646:	cmp    DWORD PTR [ebp+0x8],edi
   13649:	jne    0x1363c
   1364b:	pop    esi
   1364c:	pop    edi
   1364d:	pop    ebp
   1364e:	ret    
   1364f:	int3   
   13650:	int3   
   13651:	int3   
   13652:	int3   
   13653:	int3   
   13654:	mov    edi,edi
   13656:	push   ebp
   13657:	mov    ebp,esp
   13659:	push   edi
   1365a:	mov    edi,DWORD PTR [ebp+0xc]
   1365d:	cmp    DWORD PTR [ebp+0x8],edi
   13660:	je     0x13676
   13662:	push   esi
   13663:	mov    esi,DWORD PTR [ebp+0x10]
   13666:	inc    DWORD PTR [esi]
   13668:	lea    ecx,[ebp+0x8]
   1366b:	call   0x115a4
   13670:	cmp    DWORD PTR [ebp+0x8],edi
   13673:	jne    0x13666
   13675:	pop    esi
   13676:	pop    edi
   13677:	pop    ebp
   13678:	ret    
   13679:	int3   
   1367a:	int3   
   1367b:	int3   
   1367c:	int3   
   1367d:	int3   
   1367e:	mov    edi,edi
   13680:	push   ebp
   13681:	mov    ebp,esp
   13683:	push   edi
   13684:	mov    edi,DWORD PTR [ebp+0xc]
   13687:	cmp    DWORD PTR [ebp+0x8],edi
   1368a:	je     0x136a0
   1368c:	push   esi
   1368d:	mov    esi,DWORD PTR [ebp+0x10]
   13690:	inc    DWORD PTR [esi]
   13692:	lea    ecx,[ebp+0x8]
   13695:	call   0x12f02
   1369a:	cmp    DWORD PTR [ebp+0x8],edi
   1369d:	jne    0x13690
   1369f:	pop    esi
   136a0:	pop    edi
   136a1:	pop    ebp
   136a2:	ret    
   136a3:	int3   
   136a4:	int3   
   136a5:	int3   
   136a6:	int3   
   136a7:	int3   
   136a8:	mov    edi,edi
   136aa:	push   ebx
   136ab:	push   esi
   136ac:	push   edi
   136ad:	or     ebx,0xffffffff
   136b0:	push   ebx
   136b1:	mov    edi,0x1df3e
   136b6:	push   edi
   136b7:	mov    esi,ecx
   136b9:	call   0x110d4
   136be:	push   ebx
   136bf:	push   edi
   136c0:	lea    ecx,[esi+0x8]
   136c3:	call   0x110d4
   136c8:	push   ebx
   136c9:	push   edi
   136ca:	lea    ecx,[esi+0x14]
   136cd:	call   0x110d4
   136d2:	push   ebx
   136d3:	push   edi
   136d4:	lea    ecx,[esi+0x1c]
   136d7:	call   0x110d4
   136dc:	push   ebx
   136dd:	push   edi
   136de:	lea    ecx,[esi+0x24]
   136e1:	call   0x110d4
   136e6:	push   ebx
   136e7:	push   edi
   136e8:	lea    ecx,[esi+0x48]
   136eb:	call   0x110d4
   136f0:	xor    eax,eax
   136f2:	mov    DWORD PTR [esi+0x10],eax
   136f5:	mov    DWORD PTR [esi+0x30],eax
   136f8:	mov    DWORD PTR [esi+0x2c],eax
   136fb:	mov    DWORD PTR [esi+0x40],eax
   136fe:	mov    DWORD PTR [esi+0x44],eax
   13701:	pop    edi
   13702:	mov    eax,esi
   13704:	pop    esi
   13705:	pop    ebx
   13706:	ret    
   13707:	int3   
   13708:	int3   
   13709:	int3   
   1370a:	int3   
   1370b:	int3   
   1370c:	mov    edi,edi
   1370e:	push   ebp
   1370f:	mov    ebp,esp
   13711:	push   esi
   13712:	push   DWORD PTR [ebp+0x8]
   13715:	mov    esi,ecx
   13717:	call   0x1294e
   1371c:	push   DWORD PTR [ebp+0xc]
   1371f:	lea    ecx,[esi+0x8]
   13722:	call   0x1294e
   13727:	mov    eax,DWORD PTR [ebp+0x10]
   1372a:	push   0xffffffff
   1372c:	push   0x1df3e
   13731:	lea    ecx,[esi+0x14]
   13734:	mov    DWORD PTR [esi+0x10],eax
   13737:	call   0x110d4
   1373c:	push   DWORD PTR [ebp+0x14]
   1373f:	lea    ecx,[esi+0x1c]
   13742:	call   0x1294e
   13747:	push   DWORD PTR [ebp+0x18]
   1374a:	lea    ecx,[esi+0x24]
   1374d:	call   0x1294e
   13752:	mov    eax,DWORD PTR [ebp+0x20]
   13755:	push   DWORD PTR [ebp+0x1c]
   13758:	mov    DWORD PTR [esi+0x2c],eax
   1375b:	mov    eax,DWORD PTR [ebp+0x24]
   1375e:	lea    ecx,[esi+0x48]
   13761:	mov    DWORD PTR [esi+0x30],eax
   13764:	call   0x1294e
   13769:	and    DWORD PTR [esi+0x40],0x0
   1376d:	and    DWORD PTR [esi+0x44],0x0
   13771:	mov    eax,DWORD PTR [ebp+0x28]
   13774:	mov    ecx,DWORD PTR [eax]
   13776:	mov    DWORD PTR [esi+0x38],ecx
   13779:	mov    eax,DWORD PTR [eax+0x4]
   1377c:	mov    DWORD PTR [esi+0x3c],eax
   1377f:	mov    eax,esi
   13781:	pop    esi
   13782:	pop    ebp
   13783:	ret    0x24
   13786:	int3   
   13787:	int3   
   13788:	int3   
   13789:	int3   
   1378a:	int3   
   1378b:	int3   
   1378c:	mov    edi,edi
   1378e:	push   ebp
   1378f:	mov    ebp,esp
   13791:	push   esi
   13792:	push   0xc
   13794:	mov    esi,ecx
   13796:	call   0x10a96
   1379b:	pop    ecx
   1379c:	test   eax,eax
   1379e:	je     0x137af
   137a0:	push   DWORD PTR [ebp+0xc]
   137a3:	mov    ecx,eax
   137a5:	push   DWORD PTR [ebp+0x8]
   137a8:	call   0x11f2e
   137ad:	jmp    0x137b1
   137af:	xor    eax,eax
   137b1:	mov    DWORD PTR [esi],eax
   137b3:	mov    eax,esi
   137b5:	pop    esi
   137b6:	pop    ebp
   137b7:	ret    0x8
   137ba:	int3   
   137bb:	int3   
   137bc:	int3   
   137bd:	int3   
   137be:	int3   
   137bf:	int3   
   137c0:	mov    edi,edi
   137c2:	push   ebp
   137c3:	mov    ebp,esp
   137c5:	sub    esp,0x18
   137c8:	lea    eax,[ebp-0x18]
   137cb:	push   eax
   137cc:	push   DWORD PTR [ebp+0x8]
   137cf:	call   0x10eb6
   137d4:	test   al,al
   137d6:	je     0x13845
   137d8:	lea    eax,[ebp-0x4]
   137db:	push   eax
   137dc:	push   DWORD PTR [ebp+0xc]
   137df:	call   0x11c90
   137e4:	call   eax
   137e6:	test   eax,eax
   137e8:	jl     0x13845
   137ea:	push   esi
   137eb:	push   0x5
   137ed:	call   0x128a4
   137f2:	mov    esi,eax
   137f4:	test   esi,esi
   137f6:	je     0x13844
   137f8:	mov    edx,DWORD PTR [ebp+0x10]
   137fb:	cmp    DWORD PTR [esi+0x44],edx
   137fe:	je     0x1380d
   13800:	mov    ecx,DWORD PTR [eax]
   13802:	test   ecx,ecx
   13804:	je     0x13831
   13806:	add    eax,ecx
   13808:	cmp    DWORD PTR [eax+0x44],edx
   1380b:	jne    0x13800
   1380d:	cmp    DWORD PTR [eax+0x4],0x0
   13811:	je     0x13831
   13813:	mov    ecx,DWORD PTR [eax+0xd8]
   13819:	mov    eax,DWORD PTR [eax+0xdc]
   1381f:	mov    DWORD PTR [ebp-0x14],eax
   13822:	lea    eax,[ebp-0x18]
   13825:	push   eax
   13826:	push   DWORD PTR [ebp+0x8]
   13829:	mov    DWORD PTR [ebp-0x18],ecx
   1382c:	call   0x10f04
   13831:	call   0x11c66
   13836:	mov    ecx,DWORD PTR [ebp-0x4]
   13839:	call   eax
   1383b:	push   0x0
   1383d:	push   esi
   1383e:	call   DWORD PTR ds:0x1f01c
   13844:	pop    esi
   13845:	leave  
   13846:	ret    0x10
   13849:	int3   
   1384a:	int3   
   1384b:	int3   
   1384c:	int3   
   1384d:	int3   
   1384e:	mov    edi,edi
   13850:	push   esi
   13851:	mov    esi,ecx
   13853:	mov    ecx,DWORD PTR [esi]
   13855:	mov    eax,DWORD PTR [ecx+0x8]
   13858:	cmp    eax,DWORD PTR ds:0x7f6dc
   1385e:	je     0x1386c
   13860:	push   eax
   13861:	call   0x12cb4
   13866:	jmp    0x1387b
   13868:	mov    DWORD PTR [esi],eax
   1386a:	mov    ecx,eax
   1386c:	mov    eax,DWORD PTR [ecx+0x4]
   1386f:	cmp    ecx,DWORD PTR [eax+0x8]
   13872:	je     0x13868
   13874:	mov    ecx,DWORD PTR [esi]
   13876:	cmp    DWORD PTR [ecx+0x8],eax
   13879:	je     0x1387d
   1387b:	mov    DWORD PTR [esi],eax
   1387d:	pop    esi
   1387e:	ret    
   1387f:	int3   
   13880:	int3   
   13881:	int3   
   13882:	int3   
   13883:	int3   
   13884:	mov    edi,edi
   13886:	push   ebp
   13887:	mov    ebp,esp
   13889:	push   esi
   1388a:	push   DWORD PTR [ebp+0x8]
   1388d:	mov    esi,ecx
   1388f:	call   0x1294e
   13894:	push   DWORD PTR [ebp+0xc]
   13897:	lea    ecx,[esi+0x8]
   1389a:	call   0x12c2e
   1389f:	mov    eax,esi
   138a1:	pop    esi
   138a2:	pop    ebp
   138a3:	ret    0x8
   138a6:	int3   
   138a7:	int3   
   138a8:	int3   
   138a9:	int3   
   138aa:	int3   
   138ab:	int3   
   138ac:	mov    edi,edi
   138ae:	push   ebp
   138af:	mov    ebp,esp
   138b1:	push   ebx
   138b2:	push   esi
   138b3:	push   edi
   138b4:	mov    edi,DWORD PTR [ebp+0x8]
   138b7:	mov    ebx,ecx
   138b9:	mov    esi,edi
   138bb:	cmp    edi,DWORD PTR ds:0x7f6d0
   138c1:	je     0x138e0
   138c3:	push   DWORD PTR [esi+0x8]
   138c6:	mov    ecx,ebx
   138c8:	call   0x138ac
   138cd:	mov    esi,DWORD PTR [esi]
   138cf:	push   edi
   138d0:	call   0x1da40
   138d5:	pop    ecx
   138d6:	mov    edi,esi
   138d8:	cmp    esi,DWORD PTR ds:0x7f6d0
   138de:	jne    0x138c3
   138e0:	pop    edi
   138e1:	pop    esi
   138e2:	pop    ebx
   138e3:	pop    ebp
   138e4:	ret    0x4
   138e7:	int3   
   138e8:	int3   
   138e9:	int3   
   138ea:	int3   
   138eb:	int3   
   138ec:	mov    edi,edi
   138ee:	push   ebp
   138ef:	mov    ebp,esp
   138f1:	push   ebx
   138f2:	push   esi
   138f3:	push   edi
   138f4:	mov    edi,DWORD PTR [ebp+0x8]
   138f7:	mov    ebx,ecx
   138f9:	mov    esi,edi
   138fb:	cmp    edi,DWORD PTR ds:0x7f6d4
   13901:	je     0x13920
   13903:	push   DWORD PTR [esi+0x8]
   13906:	mov    ecx,ebx
   13908:	call   0x138ec
   1390d:	mov    esi,DWORD PTR [esi]
   1390f:	push   edi
   13910:	call   0x1da40
   13915:	pop    ecx
   13916:	mov    edi,esi
   13918:	cmp    esi,DWORD PTR ds:0x7f6d4
   1391e:	jne    0x13903
   13920:	pop    edi
   13921:	pop    esi
   13922:	pop    ebx
   13923:	pop    ebp
   13924:	ret    0x4
   13927:	int3   
   13928:	int3   
   13929:	int3   
   1392a:	int3   
   1392b:	int3   
   1392c:	mov    edi,edi
   1392e:	push   ebp
   1392f:	mov    ebp,esp
   13931:	push   0x0
   13933:	push   0x18
   13935:	call   0x1163e
   1393a:	mov    ecx,DWORD PTR [ebp+0x8]
   1393d:	mov    DWORD PTR [eax+0x4],ecx
   13940:	mov    ecx,DWORD PTR [ebp+0xc]
   13943:	mov    DWORD PTR [eax+0x14],ecx
   13946:	pop    ebp
   13947:	ret    0x8
   1394a:	int3   
   1394b:	int3   
   1394c:	int3   
   1394d:	int3   
   1394e:	int3   
   1394f:	int3   
   13950:	mov    edi,edi
   13952:	push   ebp
   13953:	mov    ebp,esp
   13955:	push   0x0
   13957:	push   0x70
   13959:	call   0x1163e
   1395e:	mov    ecx,DWORD PTR [ebp+0x8]
   13961:	mov    DWORD PTR [eax+0x4],ecx
   13964:	mov    ecx,DWORD PTR [ebp+0xc]
   13967:	mov    DWORD PTR [eax+0x68],ecx
   1396a:	pop    ebp
   1396b:	ret    0x8
   1396e:	int3   
   1396f:	int3   
   13970:	int3   
   13971:	int3   
   13972:	int3   
   13973:	int3   
   13974:	mov    edi,edi
   13976:	push   ebp
   13977:	mov    ebp,esp
   13979:	push   0x0
   1397b:	push   0x14
   1397d:	call   0x1163e
   13982:	mov    ecx,DWORD PTR [ebp+0x8]
   13985:	mov    DWORD PTR [eax+0x4],ecx
   13988:	mov    ecx,DWORD PTR [ebp+0xc]
   1398b:	mov    DWORD PTR [eax+0x10],ecx
   1398e:	pop    ebp
   1398f:	ret    0x8
   13992:	int3   
   13993:	int3   
   13994:	int3   
   13995:	int3   
   13996:	int3   
   13997:	int3   
   13998:	mov    edi,edi
   1399a:	push   ebp
   1399b:	mov    ebp,esp
   1399d:	push   0x0
   1399f:	push   0x78
   139a1:	call   0x1163e
   139a6:	mov    ecx,DWORD PTR [ebp+0x8]
   139a9:	mov    DWORD PTR [eax+0x4],ecx
   139ac:	mov    ecx,DWORD PTR [ebp+0xc]
   139af:	mov    DWORD PTR [eax+0x70],ecx
   139b2:	pop    ebp
   139b3:	ret    0x8
   139b6:	int3   
   139b7:	int3   
   139b8:	int3   
   139b9:	int3   
   139ba:	int3   
   139bb:	int3   
   139bc:	mov    edi,edi
   139be:	push   ebp
   139bf:	mov    ebp,esp
   139c1:	push   0x0
   139c3:	push   0x20
   139c5:	call   0x1163e
   139ca:	mov    ecx,DWORD PTR [ebp+0x8]
   139cd:	mov    DWORD PTR [eax+0x4],ecx
   139d0:	mov    ecx,DWORD PTR [ebp+0xc]
   139d3:	mov    DWORD PTR [eax+0x1c],ecx
   139d6:	pop    ebp
   139d7:	ret    0x8
   139da:	int3   
   139db:	int3   
   139dc:	int3   
   139dd:	int3   
   139de:	int3   
   139df:	int3   
   139e0:	mov    edi,edi
   139e2:	push   ebp
   139e3:	mov    ebp,esp
   139e5:	push   ecx
   139e6:	push   DWORD PTR [ebp-0x4]
   139e9:	push   DWORD PTR [ebp+0x10]
   139ec:	push   DWORD PTR [ebp+0xc]
   139ef:	push   DWORD PTR [ebp+0x8]
   139f2:	call   0x13600
   139f7:	add    esp,0x10
   139fa:	leave  
   139fb:	ret    
   139fc:	int3   
   139fd:	int3   
   139fe:	int3   
   139ff:	int3   
   13a00:	int3   
   13a01:	int3   
   13a02:	mov    edi,edi
   13a04:	push   ebp
   13a05:	mov    ebp,esp
   13a07:	push   ecx
   13a08:	push   DWORD PTR [ebp-0x4]
   13a0b:	push   DWORD PTR [ebp+0x10]
   13a0e:	push   DWORD PTR [ebp+0xc]
   13a11:	push   DWORD PTR [ebp+0x8]
   13a14:	call   0x1362a
   13a19:	add    esp,0x10
   13a1c:	leave  
   13a1d:	ret    
   13a1e:	int3   
   13a1f:	int3   
   13a20:	int3   
   13a21:	int3   
   13a22:	int3   
   13a23:	int3   
   13a24:	mov    edi,edi
   13a26:	push   ebp
   13a27:	mov    ebp,esp
   13a29:	push   ecx
   13a2a:	push   DWORD PTR [ebp-0x4]
   13a2d:	push   DWORD PTR [ebp+0x10]
   13a30:	push   DWORD PTR [ebp+0xc]
   13a33:	push   DWORD PTR [ebp+0x8]
   13a36:	call   0x13654
   13a3b:	add    esp,0x10
   13a3e:	leave  
   13a3f:	ret    
   13a40:	int3   
   13a41:	int3   
   13a42:	int3   
   13a43:	int3   
   13a44:	int3   
   13a45:	int3   
   13a46:	mov    edi,edi
   13a48:	push   ebp
   13a49:	mov    ebp,esp
   13a4b:	push   ecx
   13a4c:	push   DWORD PTR [ebp-0x4]
   13a4f:	push   DWORD PTR [ebp+0x10]
   13a52:	push   DWORD PTR [ebp+0xc]
   13a55:	push   DWORD PTR [ebp+0x8]
   13a58:	call   0x1367e
   13a5d:	add    esp,0x10
   13a60:	leave  
   13a61:	ret    
   13a62:	int3   
   13a63:	int3   
   13a64:	int3   
   13a65:	int3   
   13a66:	int3   
   13a67:	int3   
   13a68:	mov    edi,edi
   13a6a:	push   ebp
   13a6b:	mov    ebp,esp
   13a6d:	mov    ecx,DWORD PTR [ebp+0x8]
   13a70:	test   ecx,ecx
   13a72:	je     0x13a7c
   13a74:	push   DWORD PTR [ebp+0xc]
   13a77:	call   0x134d8
   13a7c:	pop    ebp
   13a7d:	ret    0x8
   13a80:	int3   
   13a81:	int3   
   13a82:	int3   
   13a83:	int3   
   13a84:	int3   
   13a85:	int3   
   13a86:	mov    edi,edi
   13a88:	push   ebp
   13a89:	mov    ebp,esp
   13a8b:	mov    ecx,DWORD PTR [ebp+0x8]
   13a8e:	push   0x0
   13a90:	call   0x13504
   13a95:	pop    ebp
   13a96:	ret    0x4
   13a99:	int3   
   13a9a:	int3   
   13a9b:	int3   
   13a9c:	int3   
   13a9d:	int3   
   13a9e:	mov    edi,edi
   13aa0:	push   ebp
   13aa1:	mov    ebp,esp
   13aa3:	mov    ecx,DWORD PTR [ebp+0x8]
   13aa6:	test   ecx,ecx
   13aa8:	je     0x13ab2
   13aaa:	push   DWORD PTR [ebp+0xc]
   13aad:	call   0x1352a
   13ab2:	pop    ebp
   13ab3:	ret    0x8
   13ab6:	int3   
   13ab7:	int3   
   13ab8:	int3   
   13ab9:	int3   
   13aba:	int3   
   13abb:	int3   
   13abc:	mov    edi,edi
   13abe:	push   ebp
   13abf:	mov    ebp,esp
   13ac1:	mov    ecx,DWORD PTR [ebp+0x8]
   13ac4:	test   ecx,ecx
   13ac6:	je     0x13ad0
   13ac8:	push   DWORD PTR [ebp+0xc]
   13acb:	call   0x1346e
   13ad0:	pop    ebp
   13ad1:	ret    0x8
   13ad4:	int3   
   13ad5:	int3   
   13ad6:	int3   
   13ad7:	int3   
   13ad8:	int3   
   13ad9:	int3   
   13ada:	mov    edi,edi
   13adc:	push   ebp
   13add:	mov    ebp,esp
   13adf:	mov    ecx,DWORD PTR [ebp+0x8]
   13ae2:	test   ecx,ecx
   13ae4:	je     0x13aee
   13ae6:	push   DWORD PTR [ebp+0xc]
   13ae9:	call   0x13556
   13aee:	pop    ebp
   13aef:	ret    0x8
   13af2:	int3   
   13af3:	int3   
   13af4:	int3   
   13af5:	int3   
   13af6:	int3   
   13af7:	int3   
   13af8:	mov    edi,edi
   13afa:	push   ebp
   13afb:	mov    ebp,esp
   13afd:	mov    ecx,DWORD PTR [ebp+0x8]
   13b00:	push   0x0
   13b02:	call   0x1357e
   13b07:	pop    ebp
   13b08:	ret    0x4
   13b0b:	int3   
   13b0c:	int3   
   13b0d:	int3   
   13b0e:	int3   
   13b0f:	int3   
   13b10:	mov    edi,edi
   13b12:	push   ebp
   13b13:	mov    ebp,esp
   13b15:	mov    ecx,DWORD PTR [ebp+0x8]
   13b18:	test   ecx,ecx
   13b1a:	je     0x13b24
   13b1c:	push   DWORD PTR [ebp+0xc]
   13b1f:	call   0x135ac
   13b24:	pop    ebp
   13b25:	ret    0x8
   13b28:	int3   
   13b29:	int3   
   13b2a:	int3   
   13b2b:	int3   
   13b2c:	int3   
   13b2d:	int3   
   13b2e:	mov    edi,edi
   13b30:	push   ebp
   13b31:	mov    ebp,esp
   13b33:	push   ecx
   13b34:	mov    eax,ds:0x7f6d4
   13b39:	push   ebx
   13b3a:	mov    ebx,DWORD PTR [ebp+0xc]
   13b3d:	push   esi
   13b3e:	mov    esi,DWORD PTR [ebp+0x8]
   13b41:	mov    DWORD PTR [ebp-0x4],ecx
   13b44:	mov    DWORD PTR [ebp+0x8],esi
   13b47:	cmp    esi,eax
   13b49:	je     0x13b8e
   13b4b:	push   edi
   13b4c:	push   DWORD PTR [esi+0x10]
   13b4f:	mov    ecx,DWORD PTR [ebp-0x4]
   13b52:	push   ebx
   13b53:	call   0x13974
   13b58:	mov    edi,eax
   13b5a:	cmp    DWORD PTR [ebp+0x8],esi
   13b5d:	jne    0x13b62
   13b5f:	mov    DWORD PTR [ebp+0x8],edi
   13b62:	mov    ecx,DWORD PTR [ebp-0x4]
   13b65:	push   edi
   13b66:	push   DWORD PTR [esi+0x8]
   13b69:	call   0x13b2e
   13b6e:	mov    DWORD PTR [edi+0x8],eax
   13b71:	lea    eax,[esi+0xc]
   13b74:	push   eax
   13b75:	lea    eax,[edi+0xc]
   13b78:	push   eax
   13b79:	call   0x1a3b2
   13b7e:	mov    DWORD PTR [ebx],edi
   13b80:	mov    esi,DWORD PTR [esi]
   13b82:	mov    eax,ds:0x7f6d4
   13b87:	mov    ebx,edi
   13b89:	cmp    esi,eax
   13b8b:	jne    0x13b4c
   13b8d:	pop    edi
   13b8e:	mov    DWORD PTR [ebx],eax
   13b90:	mov    eax,DWORD PTR [ebp+0x8]
   13b93:	pop    esi
   13b94:	pop    ebx
   13b95:	leave  
   13b96:	ret    0x8
   13b99:	int3   
   13b9a:	int3   
   13b9b:	int3   
   13b9c:	int3   
   13b9d:	int3   
   13b9e:	mov    edi,edi
   13ba0:	push   ebp
   13ba1:	mov    ebp,esp
   13ba3:	push   ecx
   13ba4:	push   esi
   13ba5:	push   edi
   13ba6:	mov    edi,DWORD PTR [ebp+0xc]
   13ba9:	push   edi
   13baa:	mov    esi,ecx
   13bac:	call   0x12cfe
   13bb1:	mov    esi,DWORD PTR [esi+0x4]
   13bb4:	mov    DWORD PTR [ebp+0xc],eax
   13bb7:	cmp    eax,esi
   13bb9:	je     0x13bc7
   13bbb:	mov    ecx,DWORD PTR [edi]
   13bbd:	cmp    ecx,DWORD PTR [eax+0xc]
   13bc0:	jb     0x13bc7
   13bc2:	lea    eax,[ebp+0xc]
   13bc5:	jmp    0x13bcd
   13bc7:	mov    DWORD PTR [ebp-0x4],esi
   13bca:	lea    eax,[ebp-0x4]
   13bcd:	mov    ecx,DWORD PTR [eax]
   13bcf:	mov    eax,DWORD PTR [ebp+0x8]
   13bd2:	pop    edi
   13bd3:	mov    DWORD PTR [eax],ecx
   13bd5:	pop    esi
   13bd6:	leave  
   13bd7:	ret    0x8
   13bda:	int3   
   13bdb:	int3   
   13bdc:	int3   
   13bdd:	int3   
   13bde:	int3   
   13bdf:	int3   
   13be0:	mov    edi,edi
   13be2:	push   ebp
   13be3:	mov    ebp,esp
   13be5:	push   ecx
   13be6:	push   esi
   13be7:	push   DWORD PTR [ebp+0xc]
   13bea:	mov    esi,ecx
   13bec:	call   0x12dd4
   13bf1:	mov    DWORD PTR [ebp-0x4],eax
   13bf4:	cmp    eax,DWORD PTR [esi+0x4]
   13bf7:	je     0x13c0e
   13bf9:	add    eax,0x10
   13bfc:	push   eax
   13bfd:	push   DWORD PTR [ebp+0xc]
   13c00:	call   0x197ae
   13c05:	test   al,al
   13c07:	jne    0x13c0e
   13c09:	lea    eax,[ebp-0x4]
   13c0c:	jmp    0x13c17
   13c0e:	mov    eax,DWORD PTR [esi+0x4]
   13c11:	mov    DWORD PTR [ebp+0xc],eax
   13c14:	lea    eax,[ebp+0xc]
   13c17:	mov    ecx,DWORD PTR [eax]
   13c19:	mov    eax,DWORD PTR [ebp+0x8]
   13c1c:	mov    DWORD PTR [eax],ecx
   13c1e:	pop    esi
   13c1f:	leave  
   13c20:	ret    0x8
   13c23:	int3   
   13c24:	int3   
   13c25:	int3   
   13c26:	int3   
   13c27:	int3   
   13c28:	mov    edi,edi
   13c2a:	push   ebp
   13c2b:	mov    ebp,esp
   13c2d:	push   ecx
   13c2e:	push   esi
   13c2f:	push   DWORD PTR [ebp+0xc]
   13c32:	mov    esi,ecx
   13c34:	call   0x12e14
   13c39:	mov    DWORD PTR [ebp-0x4],eax
   13c3c:	cmp    eax,DWORD PTR [esi+0x4]
   13c3f:	je     0x13c56
   13c41:	add    eax,0xc
   13c44:	push   eax
   13c45:	push   DWORD PTR [ebp+0xc]
   13c48:	call   0x197ae
   13c4d:	test   al,al
   13c4f:	jne    0x13c56
   13c51:	lea    eax,[ebp-0x4]
   13c54:	jmp    0x13c5f
   13c56:	mov    eax,DWORD PTR [esi+0x4]
   13c59:	mov    DWORD PTR [ebp+0xc],eax
   13c5c:	lea    eax,[ebp+0xc]
   13c5f:	mov    ecx,DWORD PTR [eax]
   13c61:	mov    eax,DWORD PTR [ebp+0x8]
   13c64:	mov    DWORD PTR [eax],ecx
   13c66:	pop    esi
   13c67:	leave  
   13c68:	ret    0x8
   13c6b:	int3   
   13c6c:	int3   
   13c6d:	int3   
   13c6e:	int3   
   13c6f:	int3   
   13c70:	mov    edi,edi
   13c72:	push   ebp
   13c73:	mov    ebp,esp
   13c75:	push   ecx
   13c76:	push   esi
   13c77:	push   edi
   13c78:	mov    edi,DWORD PTR [ebp+0xc]
   13c7b:	push   edi
   13c7c:	mov    esi,ecx
   13c7e:	call   0x12e54
   13c83:	mov    esi,DWORD PTR [esi+0x4]
   13c86:	mov    DWORD PTR [ebp+0xc],eax
   13c89:	cmp    eax,esi
   13c8b:	je     0x13c99
   13c8d:	mov    ecx,DWORD PTR [edi]
   13c8f:	cmp    ecx,DWORD PTR [eax+0xc]
   13c92:	jl     0x13c99
   13c94:	lea    eax,[ebp+0xc]
   13c97:	jmp    0x13c9f
   13c99:	mov    DWORD PTR [ebp-0x4],esi
   13c9c:	lea    eax,[ebp-0x4]
   13c9f:	mov    ecx,DWORD PTR [eax]
   13ca1:	mov    eax,DWORD PTR [ebp+0x8]
   13ca4:	pop    edi
   13ca5:	mov    DWORD PTR [eax],ecx
   13ca7:	pop    esi
   13ca8:	leave  
   13ca9:	ret    0x8
   13cac:	int3   
   13cad:	int3   
   13cae:	int3   
   13caf:	int3   
   13cb0:	int3   
   13cb1:	int3   
   13cb2:	mov    edi,edi
   13cb4:	push   ebp
   13cb5:	mov    ebp,esp
   13cb7:	push   ecx
   13cb8:	mov    eax,DWORD PTR [ecx]
   13cba:	lea    ecx,[ebp-0x4]
   13cbd:	mov    DWORD PTR [ebp-0x4],eax
   13cc0:	call   0x12ec2
   13cc5:	mov    eax,DWORD PTR [ebp-0x4]
   13cc8:	add    eax,0xc
   13ccb:	leave  
   13ccc:	ret    
   13ccd:	int3   
   13cce:	int3   
   13ccf:	int3   
   13cd0:	int3   
   13cd1:	int3   
   13cd2:	mov    edi,edi
   13cd4:	push   ebp
   13cd5:	mov    ebp,esp
   13cd7:	push   ecx
   13cd8:	push   esi
   13cd9:	push   DWORD PTR [ebp+0xc]
   13cdc:	mov    esi,ecx
   13cde:	call   0x12fd6
   13ce3:	mov    DWORD PTR [ebp-0x4],eax
   13ce6:	cmp    eax,DWORD PTR [esi+0x4]
   13ce9:	je     0x13d00
   13ceb:	add    eax,0x10
   13cee:	push   eax
   13cef:	push   DWORD PTR [ebp+0xc]
   13cf2:	call   0x197ae
   13cf7:	test   al,al
   13cf9:	jne    0x13d00
   13cfb:	lea    eax,[ebp-0x4]
   13cfe:	jmp    0x13d09
   13d00:	mov    eax,DWORD PTR [esi+0x4]
   13d03:	mov    DWORD PTR [ebp+0xc],eax
   13d06:	lea    eax,[ebp+0xc]
   13d09:	mov    ecx,DWORD PTR [eax]
   13d0b:	mov    eax,DWORD PTR [ebp+0x8]
   13d0e:	mov    DWORD PTR [eax],ecx
   13d10:	pop    esi
   13d11:	leave  
   13d12:	ret    0x8
   13d15:	int3   
   13d16:	int3   
   13d17:	int3   
   13d18:	int3   
   13d19:	int3   
   13d1a:	mov    edi,edi
   13d1c:	push   ebp
   13d1d:	mov    ebp,esp
   13d1f:	push   ecx
   13d20:	push   ecx
   13d21:	push   ebx
   13d22:	push   esi
   13d23:	mov    DWORD PTR [ebp-0x4],ecx
   13d26:	push   edi
   13d27:	mov    edi,DWORD PTR [ebp+0xc]
   13d2a:	lea    ecx,[ebp+0xc]
   13d2d:	call   0x112f0
   13d32:	mov    esi,DWORD PTR [edi]
   13d34:	mov    eax,ds:0x7f6d0
   13d39:	mov    ebx,edi
   13d3b:	mov    DWORD PTR [ebp-0x8],esi
   13d3e:	cmp    esi,eax
   13d40:	jne    0x13d5e
   13d42:	mov    esi,DWORD PTR [edi+0x8]
   13d45:	mov    eax,DWORD PTR [ebx+0x4]
   13d48:	mov    ecx,DWORD PTR [ebp-0x4]
   13d4b:	mov    DWORD PTR [esi+0x4],eax
   13d4e:	mov    eax,DWORD PTR [ecx+0x4]
   13d51:	cmp    DWORD PTR [eax+0x4],edi
   13d54:	jne    0x13dd3
   13d56:	mov    DWORD PTR [eax+0x4],esi
   13d59:	jmp    0x13de1
   13d5e:	mov    ecx,DWORD PTR [edi+0x8]
   13d61:	cmp    ecx,eax
   13d63:	je     0x13d45
   13d65:	push   ecx
   13d66:	call   0x11206
   13d6b:	mov    ebx,eax
   13d6d:	mov    esi,DWORD PTR [ebx+0x8]
   13d70:	cmp    ebx,edi
   13d72:	je     0x13d45
   13d74:	mov    eax,DWORD PTR [ebp-0x8]
   13d77:	mov    DWORD PTR [eax+0x4],ebx
   13d7a:	mov    eax,DWORD PTR [edi]
   13d7c:	mov    DWORD PTR [ebx],eax
   13d7e:	cmp    ebx,DWORD PTR [edi+0x8]
   13d81:	jne    0x13d88
   13d83:	mov    DWORD PTR [esi+0x4],ebx
   13d86:	jmp    0x13d9f
   13d88:	mov    eax,DWORD PTR [ebx+0x4]
   13d8b:	mov    DWORD PTR [esi+0x4],eax
   13d8e:	mov    eax,DWORD PTR [ebx+0x4]
   13d91:	mov    DWORD PTR [eax],esi
   13d93:	mov    eax,DWORD PTR [edi+0x8]
   13d96:	mov    DWORD PTR [ebx+0x8],eax
   13d99:	mov    eax,DWORD PTR [edi+0x8]
   13d9c:	mov    DWORD PTR [eax+0x4],ebx
   13d9f:	mov    eax,DWORD PTR [ebp-0x4]
   13da2:	mov    eax,DWORD PTR [eax+0x4]
   13da5:	cmp    DWORD PTR [eax+0x4],edi
   13da8:	jne    0x13daf
   13daa:	mov    DWORD PTR [eax+0x4],ebx
   13dad:	jmp    0x13dbd
   13daf:	mov    eax,DWORD PTR [edi+0x4]
   13db2:	cmp    DWORD PTR [eax],edi
   13db4:	jne    0x13dba
   13db6:	mov    DWORD PTR [eax],ebx
   13db8:	jmp    0x13dbd
   13dba:	mov    DWORD PTR [eax+0x8],ebx
   13dbd:	mov    eax,DWORD PTR [edi+0x4]
   13dc0:	mov    DWORD PTR [ebx+0x4],eax
   13dc3:	mov    eax,DWORD PTR [ebx+0x14]
   13dc6:	mov    ecx,DWORD PTR [edi+0x14]
   13dc9:	mov    DWORD PTR [ebx+0x14],ecx
   13dcc:	mov    DWORD PTR [edi+0x14],eax
   13dcf:	mov    ebx,edi
   13dd1:	jmp    0x13e34
   13dd3:	mov    eax,DWORD PTR [edi+0x4]
   13dd6:	cmp    DWORD PTR [eax],edi
   13dd8:	jne    0x13dde
   13dda:	mov    DWORD PTR [eax],esi
   13ddc:	jmp    0x13de1
   13dde:	mov    DWORD PTR [eax+0x8],esi
   13de1:	mov    eax,DWORD PTR [ecx+0x4]
   13de4:	mov    DWORD PTR [ebp-0x8],eax
   13de7:	cmp    DWORD PTR [eax],edi
   13de9:	jne    0x13e0b
   13deb:	mov    edx,DWORD PTR [edi+0x8]
   13dee:	cmp    edx,DWORD PTR ds:0x7f6d0
   13df4:	jne    0x13dfd
   13df6:	mov    edx,DWORD PTR [edi+0x4]
   13df9:	mov    DWORD PTR [eax],edx
   13dfb:	jmp    0x13e0b
   13dfd:	push   esi
   13dfe:	call   0x11206
   13e03:	mov    ecx,DWORD PTR [ebp-0x8]
   13e06:	mov    DWORD PTR [ecx],eax
   13e08:	mov    ecx,DWORD PTR [ebp-0x4]
   13e0b:	mov    eax,DWORD PTR [ecx+0x4]
   13e0e:	mov    DWORD PTR [ebp-0x8],eax
   13e11:	cmp    DWORD PTR [eax+0x8],edi
   13e14:	jne    0x13e34
   13e16:	mov    ecx,DWORD PTR [edi]
   13e18:	cmp    ecx,DWORD PTR ds:0x7f6d0
   13e1e:	jne    0x13e28
   13e20:	mov    ecx,DWORD PTR [edi+0x4]
   13e23:	mov    DWORD PTR [eax+0x8],ecx
   13e26:	jmp    0x13e34
   13e28:	push   esi
   13e29:	call   0x111e4
   13e2e:	mov    ecx,DWORD PTR [ebp-0x8]
   13e31:	mov    DWORD PTR [ecx+0x8],eax
   13e34:	xor    edi,edi
   13e36:	inc    edi
   13e37:	cmp    DWORD PTR [ebx+0x14],edi
   13e3a:	jne    0x13f51
   13e40:	jmp    0x13eff
   13e45:	cmp    DWORD PTR [esi+0x14],edi
   13e48:	jne    0x13f4e
   13e4e:	mov    eax,DWORD PTR [esi+0x4]
   13e51:	cmp    esi,DWORD PTR [eax]
   13e53:	jne    0x13eca
   13e55:	mov    eax,DWORD PTR [eax+0x8]
   13e58:	cmp    DWORD PTR [eax+0x14],0x0
   13e5c:	jne    0x13e76
   13e5e:	mov    DWORD PTR [eax+0x14],edi
   13e61:	mov    eax,DWORD PTR [esi+0x4]
   13e64:	and    DWORD PTR [eax+0x14],0x0
   13e68:	push   DWORD PTR [esi+0x4]
   13e6b:	call   0x12d36
   13e70:	mov    eax,DWORD PTR [esi+0x4]
   13e73:	mov    eax,DWORD PTR [eax+0x8]
   13e76:	mov    ecx,DWORD PTR [eax]
   13e78:	cmp    DWORD PTR [ecx+0x14],edi
   13e7b:	jne    0x13e85
   13e7d:	mov    ecx,DWORD PTR [eax+0x8]
   13e80:	cmp    DWORD PTR [ecx+0x14],edi
   13e83:	je     0x13ef8
   13e85:	mov    ecx,DWORD PTR [eax+0x8]
   13e88:	cmp    DWORD PTR [ecx+0x14],edi
   13e8b:	jne    0x13ea5
   13e8d:	mov    ecx,DWORD PTR [eax]
   13e8f:	mov    DWORD PTR [ecx+0x14],edi
   13e92:	mov    ecx,DWORD PTR [ebp-0x4]
   13e95:	and    DWORD PTR [eax+0x14],0x0
   13e99:	push   eax
   13e9a:	call   0x12d84
   13e9f:	mov    eax,DWORD PTR [esi+0x4]
   13ea2:	mov    eax,DWORD PTR [eax+0x8]
   13ea5:	mov    ecx,DWORD PTR [esi+0x4]
   13ea8:	mov    ecx,DWORD PTR [ecx+0x14]
   13eab:	mov    DWORD PTR [eax+0x14],ecx
   13eae:	mov    ecx,DWORD PTR [esi+0x4]
   13eb1:	mov    DWORD PTR [ecx+0x14],edi
   13eb4:	mov    eax,DWORD PTR [eax+0x8]
   13eb7:	mov    ecx,DWORD PTR [ebp-0x4]
   13eba:	mov    DWORD PTR [eax+0x14],edi
   13ebd:	push   DWORD PTR [esi+0x4]
   13ec0:	call   0x12d36
   13ec5:	jmp    0x13f4e
   13eca:	mov    eax,DWORD PTR [eax]
   13ecc:	cmp    DWORD PTR [eax+0x14],0x0
   13ed0:	jne    0x13ee9
   13ed2:	mov    DWORD PTR [eax+0x14],edi
   13ed5:	mov    eax,DWORD PTR [esi+0x4]
   13ed8:	and    DWORD PTR [eax+0x14],0x0
   13edc:	push   DWORD PTR [esi+0x4]
   13edf:	call   0x12d84
   13ee4:	mov    eax,DWORD PTR [esi+0x4]
   13ee7:	mov    eax,DWORD PTR [eax]
   13ee9:	mov    ecx,DWORD PTR [eax+0x8]
   13eec:	cmp    DWORD PTR [ecx+0x14],edi
   13eef:	jne    0x13f10
   13ef1:	mov    ecx,DWORD PTR [eax]
   13ef3:	cmp    DWORD PTR [ecx+0x14],edi
   13ef6:	jne    0x13f10
   13ef8:	and    DWORD PTR [eax+0x14],0x0
   13efc:	mov    esi,DWORD PTR [esi+0x4]
   13eff:	mov    ecx,DWORD PTR [ebp-0x4]
   13f02:	mov    eax,DWORD PTR [ecx+0x4]
   13f05:	cmp    esi,DWORD PTR [eax+0x4]
   13f08:	jne    0x13e45
   13f0e:	jmp    0x13f4e
   13f10:	mov    ecx,DWORD PTR [eax]
   13f12:	cmp    DWORD PTR [ecx+0x14],edi
   13f15:	jne    0x13f2f
   13f17:	mov    ecx,DWORD PTR [eax+0x8]
   13f1a:	mov    DWORD PTR [ecx+0x14],edi
   13f1d:	mov    ecx,DWORD PTR [ebp-0x4]
   13f20:	and    DWORD PTR [eax+0x14],0x0
   13f24:	push   eax
   13f25:	call   0x12d36
   13f2a:	mov    eax,DWORD PTR [esi+0x4]
   13f2d:	mov    eax,DWORD PTR [eax]
   13f2f:	mov    ecx,DWORD PTR [esi+0x4]
   13f32:	mov    ecx,DWORD PTR [ecx+0x14]
   13f35:	mov    DWORD PTR [eax+0x14],ecx
   13f38:	mov    ecx,DWORD PTR [esi+0x4]
   13f3b:	mov    DWORD PTR [ecx+0x14],edi
   13f3e:	mov    eax,DWORD PTR [eax]
   13f40:	mov    ecx,DWORD PTR [ebp-0x4]
   13f43:	mov    DWORD PTR [eax+0x14],edi
   13f46:	push   DWORD PTR [esi+0x4]
   13f49:	call   0x12d84
   13f4e:	mov    DWORD PTR [esi+0x14],edi
   13f51:	push   ebx
   13f52:	call   0x1da40
   13f57:	mov    eax,DWORD PTR [ebp-0x4]
   13f5a:	dec    DWORD PTR [eax+0xc]
   13f5d:	mov    eax,DWORD PTR [ebp+0x8]
   13f60:	pop    ecx
   13f61:	mov    ecx,DWORD PTR [ebp+0xc]
   13f64:	pop    edi
   13f65:	pop    esi
   13f66:	mov    DWORD PTR [eax],ecx
   13f68:	pop    ebx
   13f69:	leave  
   13f6a:	ret    0x8
   13f6d:	int3   
   13f6e:	int3   
   13f6f:	int3   
   13f70:	int3   
   13f71:	int3   
   13f72:	mov    edi,edi
   13f74:	push   ebp
   13f75:	mov    ebp,esp
   13f77:	push   esi
   13f78:	push   edi
   13f79:	push   DWORD PTR [ebp+0xc]
   13f7c:	mov    edi,ecx
   13f7e:	call   0x130b4
   13f83:	push   DWORD PTR [ebp+0xc]
   13f86:	mov    ecx,edi
   13f88:	mov    esi,eax
   13f8a:	call   0x12cfe
   13f8f:	mov    ecx,DWORD PTR [ebp+0x8]
   13f92:	pop    edi
   13f93:	mov    DWORD PTR [ecx],eax
   13f95:	mov    DWORD PTR [ecx+0x4],esi
   13f98:	mov    eax,ecx
   13f9a:	pop    esi
   13f9b:	pop    ebp
   13f9c:	ret    0x8
   13f9f:	int3   
   13fa0:	int3   
   13fa1:	int3   
   13fa2:	int3   
   13fa3:	int3   
   13fa4:	mov    edi,edi
   13fa6:	push   esi
   13fa7:	push   edi
   13fa8:	push   0x1
   13faa:	xor    edi,edi
   13fac:	push   edi
   13fad:	mov    esi,ecx
   13faf:	call   0x1392c
   13fb4:	cmp    DWORD PTR ds:0x7f6d0,edi
   13fba:	jne    0x13fd1
   13fbc:	mov    ecx,eax
   13fbe:	mov    DWORD PTR ds:0x7f6d0,ecx
   13fc4:	mov    DWORD PTR [ecx],edi
   13fc6:	mov    ecx,DWORD PTR ds:0x7f6d0
   13fcc:	xor    eax,eax
   13fce:	mov    DWORD PTR [ecx+0x8],edi
   13fd1:	inc    DWORD PTR ds:0x7f820
   13fd7:	cmp    eax,edi
   13fd9:	je     0x13fe2
   13fdb:	push   eax
   13fdc:	call   0x1da40
   13fe1:	pop    ecx
   13fe2:	push   edi
   13fe3:	push   DWORD PTR ds:0x7f6d0
   13fe9:	mov    ecx,esi
   13feb:	call   0x1392c
   13ff0:	mov    DWORD PTR [esi+0xc],edi
   13ff3:	mov    DWORD PTR [esi+0x4],eax
   13ff6:	mov    DWORD PTR [eax],eax
   13ff8:	mov    esi,DWORD PTR [esi+0x4]
   13ffb:	pop    edi
   13ffc:	mov    DWORD PTR [esi+0x8],esi
   13fff:	pop    esi
   14000:	ret    
   14001:	int3   
   14002:	int3   
   14003:	int3   
   14004:	int3   
   14005:	int3   
   14006:	mov    edi,edi
   14008:	push   ebp
   14009:	mov    ebp,esp
   1400b:	push   esi
   1400c:	push   edi
   1400d:	push   DWORD PTR [ebp+0xc]
   14010:	mov    edi,ecx
   14012:	call   0x130ec
   14017:	push   DWORD PTR [ebp+0xc]
   1401a:	mov    ecx,edi
   1401c:	mov    esi,eax
   1401e:	call   0x12dd4
   14023:	mov    ecx,DWORD PTR [ebp+0x8]
   14026:	pop    edi
   14027:	mov    DWORD PTR [ecx],eax
   14029:	mov    DWORD PTR [ecx+0x4],esi
   1402c:	mov    eax,ecx
   1402e:	pop    esi
   1402f:	pop    ebp
   14030:	ret    0x8
   14033:	int3   
   14034:	int3   
   14035:	int3   
   14036:	int3   
   14037:	int3   
   14038:	mov    edi,edi
   1403a:	push   esi
   1403b:	push   edi
   1403c:	push   0x1
   1403e:	xor    edi,edi
   14040:	push   edi
   14041:	mov    esi,ecx
   14043:	call   0x13950
   14048:	cmp    DWORD PTR ds:0x7f6dc,edi
   1404e:	jne    0x14065
   14050:	mov    ecx,eax
   14052:	mov    DWORD PTR ds:0x7f6dc,ecx
   14058:	mov    DWORD PTR [ecx],edi
   1405a:	mov    ecx,DWORD PTR ds:0x7f6dc
   14060:	xor    eax,eax
   14062:	mov    DWORD PTR [ecx+0x8],edi
   14065:	inc    DWORD PTR ds:0x7f824
   1406b:	cmp    eax,edi
   1406d:	je     0x14076
   1406f:	push   eax
   14070:	call   0x1da40
   14075:	pop    ecx
   14076:	push   edi
   14077:	push   DWORD PTR ds:0x7f6dc
   1407d:	mov    ecx,esi
   1407f:	call   0x13950
   14084:	mov    DWORD PTR [esi+0xc],edi
   14087:	mov    DWORD PTR [esi+0x4],eax
   1408a:	mov    DWORD PTR [eax],eax
   1408c:	mov    esi,DWORD PTR [esi+0x4]
   1408f:	pop    edi
   14090:	mov    DWORD PTR [esi+0x8],esi
   14093:	pop    esi
   14094:	ret    
   14095:	int3   
   14096:	int3   
   14097:	int3   
   14098:	int3   
   14099:	int3   
   1409a:	mov    edi,edi
   1409c:	push   ebp
   1409d:	mov    ebp,esp
   1409f:	push   esi
   140a0:	push   edi
   140a1:	push   DWORD PTR [ebp+0xc]
   140a4:	mov    edi,ecx
   140a6:	call   0x131ca
   140ab:	push   DWORD PTR [ebp+0xc]
   140ae:	mov    ecx,edi
   140b0:	mov    esi,eax
   140b2:	call   0x12e14
   140b7:	mov    ecx,DWORD PTR [ebp+0x8]
   140ba:	pop    edi
   140bb:	mov    DWORD PTR [ecx],eax
   140bd:	mov    DWORD PTR [ecx+0x4],esi
   140c0:	mov    eax,ecx
   140c2:	pop    esi
   140c3:	pop    ebp
   140c4:	ret    0x8
   140c7:	int3   
   140c8:	int3   
   140c9:	int3   
   140ca:	int3   
   140cb:	int3   
   140cc:	mov    edi,edi
   140ce:	push   esi
   140cf:	push   edi
   140d0:	push   0x1
   140d2:	xor    edi,edi
   140d4:	push   edi
   140d5:	mov    esi,ecx
   140d7:	call   0x139bc
   140dc:	cmp    DWORD PTR ds:0x7f6e0,edi
   140e2:	jne    0x140f9
   140e4:	mov    ecx,eax
   140e6:	mov    DWORD PTR ds:0x7f6e0,ecx
   140ec:	mov    DWORD PTR [ecx],edi
   140ee:	mov    ecx,DWORD PTR ds:0x7f6e0
   140f4:	xor    eax,eax
   140f6:	mov    DWORD PTR [ecx+0x8],edi
   140f9:	inc    DWORD PTR ds:0x7f828
   140ff:	cmp    eax,edi
   14101:	je     0x1410a
   14103:	push   eax
   14104:	call   0x1da40
   14109:	pop    ecx
   1410a:	push   edi
   1410b:	push   DWORD PTR ds:0x7f6e0
   14111:	mov    ecx,esi
   14113:	call   0x139bc
   14118:	mov    DWORD PTR [esi+0xc],edi
   1411b:	mov    DWORD PTR [esi+0x4],eax
   1411e:	mov    DWORD PTR [eax],eax
   14120:	mov    esi,DWORD PTR [esi+0x4]
   14123:	pop    edi
   14124:	mov    DWORD PTR [esi+0x8],esi
   14127:	pop    esi
   14128:	ret    
   14129:	int3   
   1412a:	int3   
   1412b:	int3   
   1412c:	int3   
   1412d:	int3   
   1412e:	mov    edi,edi
   14130:	push   ebp
   14131:	mov    ebp,esp
   14133:	push   esi
   14134:	push   edi
   14135:	push   DWORD PTR [ebp+0xc]
   14138:	mov    edi,ecx
   1413a:	call   0x132a8
   1413f:	push   DWORD PTR [ebp+0xc]
   14142:	mov    ecx,edi
   14144:	mov    esi,eax
   14146:	call   0x12e54
   1414b:	mov    ecx,DWORD PTR [ebp+0x8]
   1414e:	pop    edi
   1414f:	mov    DWORD PTR [ecx],eax
   14151:	mov    DWORD PTR [ecx+0x4],esi
   14154:	mov    eax,ecx
   14156:	pop    esi
   14157:	pop    ebp
   14158:	ret    0x8
   1415b:	int3   
   1415c:	int3   
   1415d:	int3   
   1415e:	int3   
   1415f:	int3   
   14160:	mov    edi,edi
   14162:	push   esi
   14163:	push   edi
   14164:	push   0x1
   14166:	xor    edi,edi
   14168:	push   edi
   14169:	mov    esi,ecx
   1416b:	call   0x1392c
   14170:	cmp    DWORD PTR ds:0x7f6e4,edi
   14176:	jne    0x1418d
   14178:	mov    ecx,eax
   1417a:	mov    DWORD PTR ds:0x7f6e4,ecx
   14180:	mov    DWORD PTR [ecx],edi
   14182:	mov    ecx,DWORD PTR ds:0x7f6e4
   14188:	xor    eax,eax
   1418a:	mov    DWORD PTR [ecx+0x8],edi
   1418d:	inc    DWORD PTR ds:0x7f82c
   14193:	cmp    eax,edi
   14195:	je     0x1419e
   14197:	push   eax
   14198:	call   0x1da40
   1419d:	pop    ecx
   1419e:	push   edi
   1419f:	push   DWORD PTR ds:0x7f6e4
   141a5:	mov    ecx,esi
   141a7:	call   0x1392c
   141ac:	mov    DWORD PTR [esi+0xc],edi
   141af:	mov    DWORD PTR [esi+0x4],eax
   141b2:	mov    DWORD PTR [eax],eax
   141b4:	mov    esi,DWORD PTR [esi+0x4]
   141b7:	pop    edi
   141b8:	mov    DWORD PTR [esi+0x8],esi
   141bb:	pop    esi
   141bc:	ret    
   141bd:	int3   
   141be:	int3   
   141bf:	int3   
   141c0:	int3   
   141c1:	int3   
   141c2:	mov    edi,edi
   141c4:	push   ebp
   141c5:	mov    ebp,esp
   141c7:	push   ecx
   141c8:	push   esi
   141c9:	push   DWORD PTR [ebp+0xc]
   141cc:	mov    esi,ecx
   141ce:	call   0x132e0
   141d3:	mov    DWORD PTR [ebp-0x4],eax
   141d6:	cmp    eax,DWORD PTR [esi+0x4]
   141d9:	je     0x141f0
   141db:	add    eax,0xc
   141de:	push   eax
   141df:	push   DWORD PTR [ebp+0xc]
   141e2:	call   0x197de
   141e7:	test   al,al
   141e9:	jne    0x141f0
   141eb:	lea    eax,[ebp-0x4]
   141ee:	jmp    0x141f9
   141f0:	mov    eax,DWORD PTR [esi+0x4]
   141f3:	mov    DWORD PTR [ebp+0xc],eax
   141f6:	lea    eax,[ebp+0xc]
   141f9:	mov    ecx,DWORD PTR [eax]
   141fb:	mov    eax,DWORD PTR [ebp+0x8]
   141fe:	mov    DWORD PTR [eax],ecx
   14200:	pop    esi
   14201:	leave  
   14202:	ret    0x8
   14205:	int3   
   14206:	int3   
   14207:	int3   
   14208:	int3   
   14209:	int3   
   1420a:	mov    edi,edi
   1420c:	push   ebp
   1420d:	mov    ebp,esp
   1420f:	push   ecx
   14210:	push   ecx
   14211:	push   ebx
   14212:	push   esi
   14213:	mov    DWORD PTR [ebp-0x4],ecx
   14216:	push   edi
   14217:	mov    edi,DWORD PTR [ebp+0xc]
   1421a:	lea    ecx,[ebp+0xc]
   1421d:	call   0x12f02
   14222:	mov    esi,DWORD PTR [edi]
   14224:	mov    eax,ds:0x7f6d4
   14229:	mov    ebx,edi
   1422b:	mov    DWORD PTR [ebp-0x8],esi
   1422e:	cmp    esi,eax
   14230:	jne    0x1424e
   14232:	mov    esi,DWORD PTR [edi+0x8]
   14235:	mov    eax,DWORD PTR [ebx+0x4]
   14238:	mov    ecx,DWORD PTR [ebp-0x4]
   1423b:	mov    DWORD PTR [esi+0x4],eax
   1423e:	mov    eax,DWORD PTR [ecx+0x4]
   14241:	cmp    DWORD PTR [eax+0x4],edi
   14244:	jne    0x142c3
   14246:	mov    DWORD PTR [eax+0x4],esi
   14249:	jmp    0x142d1
   1424e:	mov    ecx,DWORD PTR [edi+0x8]
   14251:	cmp    ecx,eax
   14253:	je     0x14235
   14255:	push   ecx
   14256:	call   0x1124a
   1425b:	mov    ebx,eax
   1425d:	mov    esi,DWORD PTR [ebx+0x8]
   14260:	cmp    ebx,edi
   14262:	je     0x14235
   14264:	mov    eax,DWORD PTR [ebp-0x8]
   14267:	mov    DWORD PTR [eax+0x4],ebx
   1426a:	mov    eax,DWORD PTR [edi]
   1426c:	mov    DWORD PTR [ebx],eax
   1426e:	cmp    ebx,DWORD PTR [edi+0x8]
   14271:	jne    0x14278
   14273:	mov    DWORD PTR [esi+0x4],ebx
   14276:	jmp    0x1428f
   14278:	mov    eax,DWORD PTR [ebx+0x4]
   1427b:	mov    DWORD PTR [esi+0x4],eax
   1427e:	mov    eax,DWORD PTR [ebx+0x4]
   14281:	mov    DWORD PTR [eax],esi
   14283:	mov    eax,DWORD PTR [edi+0x8]
   14286:	mov    DWORD PTR [ebx+0x8],eax
   14289:	mov    eax,DWORD PTR [edi+0x8]
   1428c:	mov    DWORD PTR [eax+0x4],ebx
   1428f:	mov    eax,DWORD PTR [ebp-0x4]
   14292:	mov    eax,DWORD PTR [eax+0x4]
   14295:	cmp    DWORD PTR [eax+0x4],edi
   14298:	jne    0x1429f
   1429a:	mov    DWORD PTR [eax+0x4],ebx
   1429d:	jmp    0x142ad
   1429f:	mov    eax,DWORD PTR [edi+0x4]
   142a2:	cmp    DWORD PTR [eax],edi
   142a4:	jne    0x142aa
   142a6:	mov    DWORD PTR [eax],ebx
   142a8:	jmp    0x142ad
   142aa:	mov    DWORD PTR [eax+0x8],ebx
   142ad:	mov    eax,DWORD PTR [edi+0x4]
   142b0:	mov    DWORD PTR [ebx+0x4],eax
   142b3:	mov    eax,DWORD PTR [ebx+0x10]
   142b6:	mov    ecx,DWORD PTR [edi+0x10]
   142b9:	mov    DWORD PTR [ebx+0x10],ecx
   142bc:	mov    DWORD PTR [edi+0x10],eax
   142bf:	mov    ebx,edi
   142c1:	jmp    0x14324
   142c3:	mov    eax,DWORD PTR [edi+0x4]
   142c6:	cmp    DWORD PTR [eax],edi
   142c8:	jne    0x142ce
   142ca:	mov    DWORD PTR [eax],esi
   142cc:	jmp    0x142d1
   142ce:	mov    DWORD PTR [eax+0x8],esi
   142d1:	mov    eax,DWORD PTR [ecx+0x4]
   142d4:	mov    DWORD PTR [ebp-0x8],eax
   142d7:	cmp    DWORD PTR [eax],edi
   142d9:	jne    0x142fb
   142db:	mov    edx,DWORD PTR [edi+0x8]
   142de:	cmp    edx,DWORD PTR ds:0x7f6d4
   142e4:	jne    0x142ed
   142e6:	mov    edx,DWORD PTR [edi+0x4]
   142e9:	mov    DWORD PTR [eax],edx
   142eb:	jmp    0x142fb
   142ed:	push   esi
   142ee:	call   0x1124a
   142f3:	mov    ecx,DWORD PTR [ebp-0x8]
   142f6:	mov    DWORD PTR [ecx],eax
   142f8:	mov    ecx,DWORD PTR [ebp-0x4]
   142fb:	mov    eax,DWORD PTR [ecx+0x4]
   142fe:	mov    DWORD PTR [ebp-0x8],eax
   14301:	cmp    DWORD PTR [eax+0x8],edi
   14304:	jne    0x14324
   14306:	mov    ecx,DWORD PTR [edi]
   14308:	cmp    ecx,DWORD PTR ds:0x7f6d4
   1430e:	jne    0x14318
   14310:	mov    ecx,DWORD PTR [edi+0x4]
   14313:	mov    DWORD PTR [eax+0x8],ecx
   14316:	jmp    0x14324
   14318:	push   esi
   14319:	call   0x11228
   1431e:	mov    ecx,DWORD PTR [ebp-0x8]
   14321:	mov    DWORD PTR [ecx+0x8],eax
   14324:	xor    edi,edi
   14326:	inc    edi
   14327:	cmp    DWORD PTR [ebx+0x10],edi
   1432a:	jne    0x14441
   14330:	jmp    0x143ef
   14335:	cmp    DWORD PTR [esi+0x10],edi
   14338:	jne    0x1443e
   1433e:	mov    eax,DWORD PTR [esi+0x4]
   14341:	cmp    esi,DWORD PTR [eax]
   14343:	jne    0x143ba
   14345:	mov    eax,DWORD PTR [eax+0x8]
   14348:	cmp    DWORD PTR [eax+0x10],0x0
   1434c:	jne    0x14366
   1434e:	mov    DWORD PTR [eax+0x10],edi
   14351:	mov    eax,DWORD PTR [esi+0x4]
   14354:	and    DWORD PTR [eax+0x10],0x0
   14358:	push   DWORD PTR [esi+0x4]
   1435b:	call   0x12f38
   14360:	mov    eax,DWORD PTR [esi+0x4]
   14363:	mov    eax,DWORD PTR [eax+0x8]
   14366:	mov    ecx,DWORD PTR [eax]
   14368:	cmp    DWORD PTR [ecx+0x10],edi
   1436b:	jne    0x14375
   1436d:	mov    ecx,DWORD PTR [eax+0x8]
   14370:	cmp    DWORD PTR [ecx+0x10],edi
   14373:	je     0x143e8
   14375:	mov    ecx,DWORD PTR [eax+0x8]
   14378:	cmp    DWORD PTR [ecx+0x10],edi
   1437b:	jne    0x14395
   1437d:	mov    ecx,DWORD PTR [eax]
   1437f:	mov    DWORD PTR [ecx+0x10],edi
   14382:	mov    ecx,DWORD PTR [ebp-0x4]
   14385:	and    DWORD PTR [eax+0x10],0x0
   14389:	push   eax
   1438a:	call   0x12f86
   1438f:	mov    eax,DWORD PTR [esi+0x4]
   14392:	mov    eax,DWORD PTR [eax+0x8]
   14395:	mov    ecx,DWORD PTR [esi+0x4]
   14398:	mov    ecx,DWORD PTR [ecx+0x10]
   1439b:	mov    DWORD PTR [eax+0x10],ecx
   1439e:	mov    ecx,DWORD PTR [esi+0x4]
   143a1:	mov    DWORD PTR [ecx+0x10],edi
   143a4:	mov    eax,DWORD PTR [eax+0x8]
   143a7:	mov    ecx,DWORD PTR [ebp-0x4]
   143aa:	mov    DWORD PTR [eax+0x10],edi
   143ad:	push   DWORD PTR [esi+0x4]
   143b0:	call   0x12f38
   143b5:	jmp    0x1443e
   143ba:	mov    eax,DWORD PTR [eax]
   143bc:	cmp    DWORD PTR [eax+0x10],0x0
   143c0:	jne    0x143d9
   143c2:	mov    DWORD PTR [eax+0x10],edi
   143c5:	mov    eax,DWORD PTR [esi+0x4]
   143c8:	and    DWORD PTR [eax+0x10],0x0
   143cc:	push   DWORD PTR [esi+0x4]
   143cf:	call   0x12f86
   143d4:	mov    eax,DWORD PTR [esi+0x4]
   143d7:	mov    eax,DWORD PTR [eax]
   143d9:	mov    ecx,DWORD PTR [eax+0x8]
   143dc:	cmp    DWORD PTR [ecx+0x10],edi
   143df:	jne    0x14400
   143e1:	mov    ecx,DWORD PTR [eax]
   143e3:	cmp    DWORD PTR [ecx+0x10],edi
   143e6:	jne    0x14400
   143e8:	and    DWORD PTR [eax+0x10],0x0
   143ec:	mov    esi,DWORD PTR [esi+0x4]
   143ef:	mov    ecx,DWORD PTR [ebp-0x4]
   143f2:	mov    eax,DWORD PTR [ecx+0x4]
   143f5:	cmp    esi,DWORD PTR [eax+0x4]
   143f8:	jne    0x14335
   143fe:	jmp    0x1443e
   14400:	mov    ecx,DWORD PTR [eax]
   14402:	cmp    DWORD PTR [ecx+0x10],edi
   14405:	jne    0x1441f
   14407:	mov    ecx,DWORD PTR [eax+0x8]
   1440a:	mov    DWORD PTR [ecx+0x10],edi
   1440d:	mov    ecx,DWORD PTR [ebp-0x4]
   14410:	and    DWORD PTR [eax+0x10],0x0
   14414:	push   eax
   14415:	call   0x12f38
   1441a:	mov    eax,DWORD PTR [esi+0x4]
   1441d:	mov    eax,DWORD PTR [eax]
   1441f:	mov    ecx,DWORD PTR [esi+0x4]
   14422:	mov    ecx,DWORD PTR [ecx+0x10]
   14425:	mov    DWORD PTR [eax+0x10],ecx
   14428:	mov    ecx,DWORD PTR [esi+0x4]
   1442b:	mov    DWORD PTR [ecx+0x10],edi
   1442e:	mov    eax,DWORD PTR [eax]
   14430:	mov    ecx,DWORD PTR [ebp-0x4]
   14433:	mov    DWORD PTR [eax+0x10],edi
   14436:	push   DWORD PTR [esi+0x4]
   14439:	call   0x12f86
   1443e:	mov    DWORD PTR [esi+0x10],edi
   14441:	push   ebx
   14442:	call   0x1da40
   14447:	mov    eax,DWORD PTR [ebp-0x4]
   1444a:	dec    DWORD PTR [eax+0xc]
   1444d:	mov    eax,DWORD PTR [ebp+0x8]
   14450:	pop    ecx
   14451:	mov    ecx,DWORD PTR [ebp+0xc]
   14454:	pop    edi
   14455:	pop    esi
   14456:	mov    DWORD PTR [eax],ecx
   14458:	pop    ebx
   14459:	leave  
   1445a:	ret    0x8
   1445d:	int3   
   1445e:	int3   
   1445f:	int3   
   14460:	int3   
   14461:	int3   
   14462:	mov    edi,edi
   14464:	push   ebp
   14465:	mov    ebp,esp
   14467:	push   esi
   14468:	push   edi
   14469:	push   DWORD PTR [ebp+0xc]
   1446c:	mov    edi,ecx
   1446e:	call   0x13436
   14473:	push   DWORD PTR [ebp+0xc]
   14476:	mov    ecx,edi
   14478:	mov    esi,eax
   1447a:	call   0x133fe
   1447f:	mov    ecx,DWORD PTR [ebp+0x8]
   14482:	pop    edi
   14483:	mov    DWORD PTR [ecx],eax
   14485:	mov    DWORD PTR [ecx+0x4],esi
   14488:	mov    eax,ecx
   1448a:	pop    esi
   1448b:	pop    ebp
   1448c:	ret    0x8
   1448f:	int3   
   14490:	int3   
   14491:	int3   
   14492:	int3   
   14493:	int3   
   14494:	mov    edi,edi
   14496:	push   esi
   14497:	push   edi
   14498:	push   0x1
   1449a:	xor    edi,edi
   1449c:	push   edi
   1449d:	mov    esi,ecx
   1449f:	call   0x13974
   144a4:	cmp    DWORD PTR ds:0x7f6d4,edi
   144aa:	jne    0x144c1
   144ac:	mov    ecx,eax
   144ae:	mov    DWORD PTR ds:0x7f6d4,ecx
   144b4:	mov    DWORD PTR [ecx],edi
   144b6:	mov    ecx,DWORD PTR ds:0x7f6d4
   144bc:	xor    eax,eax
   144be:	mov    DWORD PTR [ecx+0x8],edi
   144c1:	inc    DWORD PTR ds:0x7f830
   144c7:	cmp    eax,edi
   144c9:	je     0x144d2
   144cb:	push   eax
   144cc:	call   0x1da40
   144d1:	pop    ecx
   144d2:	push   edi
   144d3:	push   DWORD PTR ds:0x7f6d4
   144d9:	mov    ecx,esi
   144db:	call   0x13974
   144e0:	mov    DWORD PTR [esi+0xc],edi
   144e3:	mov    DWORD PTR [esi+0x4],eax
   144e6:	mov    DWORD PTR [eax],eax
   144e8:	mov    esi,DWORD PTR [esi+0x4]
   144eb:	pop    edi
   144ec:	mov    DWORD PTR [esi+0x8],esi
   144ef:	pop    esi
   144f0:	ret    
   144f1:	int3   
   144f2:	int3   
   144f3:	int3   
   144f4:	int3   
   144f5:	int3   
   144f6:	mov    edi,edi
   144f8:	push   ebp
   144f9:	mov    ebp,esp
   144fb:	push   ebx
   144fc:	push   esi
   144fd:	mov    esi,DWORD PTR [ebp+0x10]
   14500:	push   edi
   14501:	push   0x0
   14503:	push   esi
   14504:	mov    edi,ecx
   14506:	call   0x13974
   1450b:	push   DWORD PTR [ebp+0x14]
   1450e:	mov    ebx,eax
   14510:	mov    eax,ds:0x7f6d4
   14515:	mov    DWORD PTR [ebx],eax
   14517:	mov    eax,ds:0x7f6d4
   1451c:	mov    DWORD PTR [ebx+0x8],eax
   1451f:	lea    eax,[ebx+0xc]
   14522:	push   eax
   14523:	call   0x1a3b2
   14528:	inc    DWORD PTR [edi+0xc]
   1452b:	cmp    esi,DWORD PTR [edi+0x4]
   1452e:	je     0x14552
   14530:	mov    eax,DWORD PTR [ebp+0xc]
   14533:	cmp    eax,DWORD PTR ds:0x7f6d4
   14539:	jne    0x14552
   1453b:	mov    eax,DWORD PTR [ebp+0x14]
   1453e:	mov    eax,DWORD PTR [eax]
   14540:	cmp    eax,DWORD PTR [esi+0xc]
   14543:	jb     0x14552
   14545:	mov    DWORD PTR [esi+0x8],ebx
   14548:	mov    eax,DWORD PTR [edi+0x4]
   1454b:	cmp    esi,DWORD PTR [eax+0x8]
   1454e:	jne    0x1456c
   14550:	jmp    0x14561
   14552:	mov    DWORD PTR [esi],ebx
   14554:	mov    eax,DWORD PTR [edi+0x4]
   14557:	cmp    esi,eax
   14559:	jne    0x14566
   1455b:	mov    DWORD PTR [eax+0x4],ebx
   1455e:	mov    eax,DWORD PTR [edi+0x4]
   14561:	mov    DWORD PTR [eax+0x8],ebx
   14564:	jmp    0x1456c
   14566:	cmp    esi,DWORD PTR [eax]
   14568:	jne    0x1456c
   1456a:	mov    DWORD PTR [eax],ebx
   1456c:	mov    eax,DWORD PTR [edi+0x4]
   1456f:	mov    esi,ebx
   14571:	cmp    ebx,DWORD PTR [eax+0x4]
   14574:	je     0x14628
   1457a:	mov    eax,DWORD PTR [esi+0x4]
   1457d:	xor    edx,edx
   1457f:	cmp    DWORD PTR [eax+0x10],edx
   14582:	jne    0x14628
   14588:	mov    ecx,DWORD PTR [eax+0x4]
   1458b:	cmp    eax,DWORD PTR [ecx]
   1458d:	jne    0x145c9
   1458f:	mov    ecx,DWORD PTR [ecx+0x8]
   14592:	cmp    DWORD PTR [ecx+0x10],edx
   14595:	je     0x145d0
   14597:	cmp    esi,DWORD PTR [eax+0x8]
   1459a:	jne    0x145a6
   1459c:	mov    esi,eax
   1459e:	push   esi
   1459f:	mov    ecx,edi
   145a1:	call   0x12f38
   145a6:	mov    eax,DWORD PTR [esi+0x4]
   145a9:	mov    DWORD PTR [eax+0x10],0x1
   145b0:	mov    eax,DWORD PTR [esi+0x4]
   145b3:	mov    eax,DWORD PTR [eax+0x4]
   145b6:	and    DWORD PTR [eax+0x10],0x0
   145ba:	mov    eax,DWORD PTR [esi+0x4]
   145bd:	push   DWORD PTR [eax+0x4]
   145c0:	mov    ecx,edi
   145c2:	call   0x12f86
   145c7:	jmp    0x1461c
   145c9:	mov    ecx,DWORD PTR [ecx]
   145cb:	cmp    DWORD PTR [ecx+0x10],edx
   145ce:	jne    0x145ed
   145d0:	mov    edx,eax
   145d2:	xor    eax,eax
   145d4:	inc    eax
   145d5:	mov    DWORD PTR [edx+0x10],eax
   145d8:	mov    DWORD PTR [ecx+0x10],eax
   145db:	mov    eax,DWORD PTR [esi+0x4]
   145de:	mov    eax,DWORD PTR [eax+0x4]
   145e1:	and    DWORD PTR [eax+0x10],0x0
   145e5:	mov    eax,DWORD PTR [esi+0x4]
   145e8:	mov    esi,DWORD PTR [eax+0x4]
   145eb:	jmp    0x1461c
   145ed:	cmp    esi,DWORD PTR [eax]
   145ef:	jne    0x145fb
   145f1:	mov    esi,eax
   145f3:	push   esi
   145f4:	mov    ecx,edi
   145f6:	call   0x12f86
   145fb:	mov    eax,DWORD PTR [esi+0x4]
   145fe:	mov    DWORD PTR [eax+0x10],0x1
   14605:	mov    eax,DWORD PTR [esi+0x4]
   14608:	mov    eax,DWORD PTR [eax+0x4]
   1460b:	and    DWORD PTR [eax+0x10],0x0
   1460f:	mov    eax,DWORD PTR [esi+0x4]
   14612:	push   DWORD PTR [eax+0x4]
   14615:	mov    ecx,edi
   14617:	call   0x12f38
   1461c:	mov    eax,DWORD PTR [edi+0x4]
   1461f:	cmp    esi,DWORD PTR [eax+0x4]
   14622:	jne    0x1457a
   14628:	mov    eax,DWORD PTR [edi+0x4]
   1462b:	mov    eax,DWORD PTR [eax+0x4]
   1462e:	pop    edi
   1462f:	mov    DWORD PTR [eax+0x10],0x1
   14636:	mov    eax,DWORD PTR [ebp+0x8]
   14639:	pop    esi
   1463a:	mov    DWORD PTR [eax],ebx
   1463c:	pop    ebx
   1463d:	pop    ebp
   1463e:	ret    0x10
   14641:	int3   
   14642:	int3   
   14643:	int3   
   14644:	int3   
   14645:	int3   
   14646:	mov    edi,edi
   14648:	push   esi
   14649:	push   edi
   1464a:	push   0x1
   1464c:	xor    edi,edi
   1464e:	push   edi
   1464f:	mov    esi,ecx
   14651:	call   0x13998
   14656:	cmp    DWORD PTR ds:0x7f6d8,edi
   1465c:	jne    0x14673
   1465e:	mov    ecx,eax
   14660:	mov    DWORD PTR ds:0x7f6d8,ecx
   14666:	mov    DWORD PTR [ecx],edi
   14668:	mov    ecx,DWORD PTR ds:0x7f6d8
   1466e:	xor    eax,eax
   14670:	mov    DWORD PTR [ecx+0x8],edi
   14673:	inc    DWORD PTR ds:0x7f834
   14679:	cmp    eax,edi
   1467b:	je     0x14684
   1467d:	push   eax
   1467e:	call   0x1da40
   14683:	pop    ecx
   14684:	push   edi
   14685:	push   DWORD PTR ds:0x7f6d8
   1468b:	mov    ecx,esi
   1468d:	call   0x13998
   14692:	mov    DWORD PTR [esi+0xc],edi
   14695:	mov    DWORD PTR [esi+0x4],eax
   14698:	mov    DWORD PTR [eax],eax
   1469a:	mov    esi,DWORD PTR [esi+0x4]
   1469d:	pop    edi
   1469e:	mov    DWORD PTR [esi+0x8],esi
   146a1:	pop    esi
   146a2:	ret    
   146a3:	int3   
   146a4:	int3   
   146a5:	int3   
   146a6:	int3   
   146a7:	int3   
   146a8:	mov    edi,edi
   146aa:	push   ebp
   146ab:	mov    ebp,esp
   146ad:	push   ebx
   146ae:	push   esi
   146af:	mov    esi,DWORD PTR [ebp+0x10]
   146b2:	push   edi
   146b3:	push   0x0
   146b5:	push   esi
   146b6:	mov    edi,ecx
   146b8:	call   0x1392c
   146bd:	push   DWORD PTR [ebp+0x14]
   146c0:	mov    ebx,eax
   146c2:	mov    eax,ds:0x7f6d0
   146c7:	mov    DWORD PTR [ebx],eax
   146c9:	mov    eax,ds:0x7f6d0
   146ce:	mov    DWORD PTR [ebx+0x8],eax
   146d1:	lea    eax,[ebx+0xc]
   146d4:	push   eax
   146d5:	call   0x11660
   146da:	inc    DWORD PTR [edi+0xc]
   146dd:	cmp    esi,DWORD PTR [edi+0x4]
   146e0:	je     0x14704
   146e2:	mov    eax,DWORD PTR [ebp+0xc]
   146e5:	cmp    eax,DWORD PTR ds:0x7f6d0
   146eb:	jne    0x14704
   146ed:	mov    eax,DWORD PTR [ebp+0x14]
   146f0:	mov    eax,DWORD PTR [eax]
   146f2:	cmp    eax,DWORD PTR [esi+0xc]
   146f5:	jb     0x14704
   146f7:	mov    DWORD PTR [esi+0x8],ebx
   146fa:	mov    eax,DWORD PTR [edi+0x4]
   146fd:	cmp    esi,DWORD PTR [eax+0x8]
   14700:	jne    0x1471e
   14702:	jmp    0x14713
   14704:	mov    DWORD PTR [esi],ebx
   14706:	mov    eax,DWORD PTR [edi+0x4]
   14709:	cmp    esi,eax
   1470b:	jne    0x14718
   1470d:	mov    DWORD PTR [eax+0x4],ebx
   14710:	mov    eax,DWORD PTR [edi+0x4]
   14713:	mov    DWORD PTR [eax+0x8],ebx
   14716:	jmp    0x1471e
   14718:	cmp    esi,DWORD PTR [eax]
   1471a:	jne    0x1471e
   1471c:	mov    DWORD PTR [eax],ebx
   1471e:	mov    eax,DWORD PTR [edi+0x4]
   14721:	mov    esi,ebx
   14723:	cmp    ebx,DWORD PTR [eax+0x4]
   14726:	je     0x147da
   1472c:	mov    eax,DWORD PTR [esi+0x4]
   1472f:	xor    edx,edx
   14731:	cmp    DWORD PTR [eax+0x14],edx
   14734:	jne    0x147da
   1473a:	mov    ecx,DWORD PTR [eax+0x4]
   1473d:	cmp    eax,DWORD PTR [ecx]
   1473f:	jne    0x1477b
   14741:	mov    ecx,DWORD PTR [ecx+0x8]
   14744:	cmp    DWORD PTR [ecx+0x14],edx
   14747:	je     0x14782
   14749:	cmp    esi,DWORD PTR [eax+0x8]
   1474c:	jne    0x14758
   1474e:	mov    esi,eax
   14750:	push   esi
   14751:	mov    ecx,edi
   14753:	call   0x12d36
   14758:	mov    eax,DWORD PTR [esi+0x4]
   1475b:	mov    DWORD PTR [eax+0x14],0x1
   14762:	mov    eax,DWORD PTR [esi+0x4]
   14765:	mov    eax,DWORD PTR [eax+0x4]
   14768:	and    DWORD PTR [eax+0x14],0x0
   1476c:	mov    eax,DWORD PTR [esi+0x4]
   1476f:	push   DWORD PTR [eax+0x4]
   14772:	mov    ecx,edi
   14774:	call   0x12d84
   14779:	jmp    0x147ce
   1477b:	mov    ecx,DWORD PTR [ecx]
   1477d:	cmp    DWORD PTR [ecx+0x14],edx
   14780:	jne    0x1479f
   14782:	mov    edx,eax
   14784:	xor    eax,eax
   14786:	inc    eax
   14787:	mov    DWORD PTR [edx+0x14],eax
   1478a:	mov    DWORD PTR [ecx+0x14],eax
   1478d:	mov    eax,DWORD PTR [esi+0x4]
   14790:	mov    eax,DWORD PTR [eax+0x4]
   14793:	and    DWORD PTR [eax+0x14],0x0
   14797:	mov    eax,DWORD PTR [esi+0x4]
   1479a:	mov    esi,DWORD PTR [eax+0x4]
   1479d:	jmp    0x147ce
   1479f:	cmp    esi,DWORD PTR [eax]
   147a1:	jne    0x147ad
   147a3:	mov    esi,eax
   147a5:	push   esi
   147a6:	mov    ecx,edi
   147a8:	call   0x12d84
   147ad:	mov    eax,DWORD PTR [esi+0x4]
   147b0:	mov    DWORD PTR [eax+0x14],0x1
   147b7:	mov    eax,DWORD PTR [esi+0x4]
   147ba:	mov    eax,DWORD PTR [eax+0x4]
   147bd:	and    DWORD PTR [eax+0x14],0x0
   147c1:	mov    eax,DWORD PTR [esi+0x4]
   147c4:	push   DWORD PTR [eax+0x4]
   147c7:	mov    ecx,edi
   147c9:	call   0x12d36
   147ce:	mov    eax,DWORD PTR [edi+0x4]
   147d1:	cmp    esi,DWORD PTR [eax+0x4]
   147d4:	jne    0x1472c
   147da:	mov    eax,DWORD PTR [edi+0x4]
   147dd:	mov    eax,DWORD PTR [eax+0x4]
   147e0:	pop    edi
   147e1:	mov    DWORD PTR [eax+0x14],0x1
   147e8:	mov    eax,DWORD PTR [ebp+0x8]
   147eb:	pop    esi
   147ec:	mov    DWORD PTR [eax],ebx
   147ee:	pop    ebx
   147ef:	pop    ebp
   147f0:	ret    0x10
   147f3:	int3   
   147f4:	int3   
   147f5:	int3   
   147f6:	int3   
   147f7:	int3   
   147f8:	mov    edi,edi
   147fa:	push   ebp
   147fb:	mov    ebp,esp
   147fd:	push   ecx
   147fe:	push   ecx
   147ff:	push   ebx
   14800:	push   esi
   14801:	mov    DWORD PTR [ebp-0x4],ecx
   14804:	push   edi
   14805:	mov    edi,DWORD PTR [ebp+0xc]
   14808:	lea    ecx,[ebp+0xc]
   1480b:	call   0x1156e
   14810:	mov    esi,DWORD PTR [edi]
   14812:	mov    eax,ds:0x7f6e0
   14817:	mov    ebx,edi
   14819:	mov    DWORD PTR [ebp-0x8],esi
   1481c:	cmp    esi,eax
   1481e:	jne    0x1483c
   14820:	mov    esi,DWORD PTR [edi+0x8]
   14823:	mov    eax,DWORD PTR [ebx+0x4]
   14826:	mov    ecx,DWORD PTR [ebp-0x4]
   14829:	mov    DWORD PTR [esi+0x4],eax
   1482c:	mov    eax,DWORD PTR [ecx+0x4]
   1482f:	cmp    DWORD PTR [eax+0x4],edi
   14832:	jne    0x148b1
   14834:	mov    DWORD PTR [eax+0x4],esi
   14837:	jmp    0x148bf
   1483c:	mov    ecx,DWORD PTR [edi+0x8]
   1483f:	cmp    ecx,eax
   14841:	je     0x14823
   14843:	push   ecx
   14844:	call   0x11448
   14849:	mov    ebx,eax
   1484b:	mov    esi,DWORD PTR [ebx+0x8]
   1484e:	cmp    ebx,edi
   14850:	je     0x14823
   14852:	mov    eax,DWORD PTR [ebp-0x8]
   14855:	mov    DWORD PTR [eax+0x4],ebx
   14858:	mov    eax,DWORD PTR [edi]
   1485a:	mov    DWORD PTR [ebx],eax
   1485c:	cmp    ebx,DWORD PTR [edi+0x8]
   1485f:	jne    0x14866
   14861:	mov    DWORD PTR [esi+0x4],ebx
   14864:	jmp    0x1487d
   14866:	mov    eax,DWORD PTR [ebx+0x4]
   14869:	mov    DWORD PTR [esi+0x4],eax
   1486c:	mov    eax,DWORD PTR [ebx+0x4]
   1486f:	mov    DWORD PTR [eax],esi
   14871:	mov    eax,DWORD PTR [edi+0x8]
   14874:	mov    DWORD PTR [ebx+0x8],eax
   14877:	mov    eax,DWORD PTR [edi+0x8]
   1487a:	mov    DWORD PTR [eax+0x4],ebx
   1487d:	mov    eax,DWORD PTR [ebp-0x4]
   14880:	mov    eax,DWORD PTR [eax+0x4]
   14883:	cmp    DWORD PTR [eax+0x4],edi
   14886:	jne    0x1488d
   14888:	mov    DWORD PTR [eax+0x4],ebx
   1488b:	jmp    0x1489b
   1488d:	mov    eax,DWORD PTR [edi+0x4]
   14890:	cmp    DWORD PTR [eax],edi
   14892:	jne    0x14898
   14894:	mov    DWORD PTR [eax],ebx
   14896:	jmp    0x1489b
   14898:	mov    DWORD PTR [eax+0x8],ebx
   1489b:	mov    eax,DWORD PTR [edi+0x4]
   1489e:	mov    DWORD PTR [ebx+0x4],eax
   148a1:	mov    eax,DWORD PTR [ebx+0x1c]
   148a4:	mov    ecx,DWORD PTR [edi+0x1c]
   148a7:	mov    DWORD PTR [ebx+0x1c],ecx
   148aa:	mov    DWORD PTR [edi+0x1c],eax
   148ad:	mov    ebx,edi
   148af:	jmp    0x14912
   148b1:	mov    eax,DWORD PTR [edi+0x4]
   148b4:	cmp    DWORD PTR [eax],edi
   148b6:	jne    0x148bc
   148b8:	mov    DWORD PTR [eax],esi
   148ba:	jmp    0x148bf
   148bc:	mov    DWORD PTR [eax+0x8],esi
   148bf:	mov    eax,DWORD PTR [ecx+0x4]
   148c2:	mov    DWORD PTR [ebp-0x8],eax
   148c5:	cmp    DWORD PTR [eax],edi
   148c7:	jne    0x148e9
   148c9:	mov    edx,DWORD PTR [edi+0x8]
   148cc:	cmp    edx,DWORD PTR ds:0x7f6e0
   148d2:	jne    0x148db
   148d4:	mov    edx,DWORD PTR [edi+0x4]
   148d7:	mov    DWORD PTR [eax],edx
   148d9:	jmp    0x148e9
   148db:	push   esi
   148dc:	call   0x11448
   148e1:	mov    ecx,DWORD PTR [ebp-0x8]
   148e4:	mov    DWORD PTR [ecx],eax
   148e6:	mov    ecx,DWORD PTR [ebp-0x4]
   148e9:	mov    eax,DWORD PTR [ecx+0x4]
   148ec:	mov    DWORD PTR [ebp-0x8],eax
   148ef:	cmp    DWORD PTR [eax+0x8],edi
   148f2:	jne    0x14912
   148f4:	mov    ecx,DWORD PTR [edi]
   148f6:	cmp    ecx,DWORD PTR ds:0x7f6e0
   148fc:	jne    0x14906
   148fe:	mov    ecx,DWORD PTR [edi+0x4]
   14901:	mov    DWORD PTR [eax+0x8],ecx
   14904:	jmp    0x14912
   14906:	push   esi
   14907:	call   0x11426
   1490c:	mov    ecx,DWORD PTR [ebp-0x8]
   1490f:	mov    DWORD PTR [ecx+0x8],eax
   14912:	xor    edi,edi
   14914:	inc    edi
   14915:	cmp    DWORD PTR [ebx+0x1c],edi
   14918:	jne    0x14a2f
   1491e:	jmp    0x149dd
   14923:	cmp    DWORD PTR [esi+0x1c],edi
   14926:	jne    0x14a2c
   1492c:	mov    eax,DWORD PTR [esi+0x4]
   1492f:	cmp    esi,DWORD PTR [eax]
   14931:	jne    0x149a8
   14933:	mov    eax,DWORD PTR [eax+0x8]
   14936:	cmp    DWORD PTR [eax+0x1c],0x0
   1493a:	jne    0x14954
   1493c:	mov    DWORD PTR [eax+0x1c],edi
   1493f:	mov    eax,DWORD PTR [esi+0x4]
   14942:	and    DWORD PTR [eax+0x1c],0x0
   14946:	push   DWORD PTR [esi+0x4]
   14949:	call   0x1312c
   1494e:	mov    eax,DWORD PTR [esi+0x4]
   14951:	mov    eax,DWORD PTR [eax+0x8]
   14954:	mov    ecx,DWORD PTR [eax]
   14956:	cmp    DWORD PTR [ecx+0x1c],edi
   14959:	jne    0x14963
   1495b:	mov    ecx,DWORD PTR [eax+0x8]
   1495e:	cmp    DWORD PTR [ecx+0x1c],edi
   14961:	je     0x149d6
   14963:	mov    ecx,DWORD PTR [eax+0x8]
   14966:	cmp    DWORD PTR [ecx+0x1c],edi
   14969:	jne    0x14983
   1496b:	mov    ecx,DWORD PTR [eax]
   1496d:	mov    DWORD PTR [ecx+0x1c],edi
   14970:	mov    ecx,DWORD PTR [ebp-0x4]
   14973:	and    DWORD PTR [eax+0x1c],0x0
   14977:	push   eax
   14978:	call   0x1317a
   1497d:	mov    eax,DWORD PTR [esi+0x4]
   14980:	mov    eax,DWORD PTR [eax+0x8]
   14983:	mov    ecx,DWORD PTR [esi+0x4]
   14986:	mov    ecx,DWORD PTR [ecx+0x1c]
   14989:	mov    DWORD PTR [eax+0x1c],ecx
   1498c:	mov    ecx,DWORD PTR [esi+0x4]
   1498f:	mov    DWORD PTR [ecx+0x1c],edi
   14992:	mov    eax,DWORD PTR [eax+0x8]
   14995:	mov    ecx,DWORD PTR [ebp-0x4]
   14998:	mov    DWORD PTR [eax+0x1c],edi
   1499b:	push   DWORD PTR [esi+0x4]
   1499e:	call   0x1312c
   149a3:	jmp    0x14a2c
   149a8:	mov    eax,DWORD PTR [eax]
   149aa:	cmp    DWORD PTR [eax+0x1c],0x0
   149ae:	jne    0x149c7
   149b0:	mov    DWORD PTR [eax+0x1c],edi
   149b3:	mov    eax,DWORD PTR [esi+0x4]
   149b6:	and    DWORD PTR [eax+0x1c],0x0
   149ba:	push   DWORD PTR [esi+0x4]
   149bd:	call   0x1317a
   149c2:	mov    eax,DWORD PTR [esi+0x4]
   149c5:	mov    eax,DWORD PTR [eax]
   149c7:	mov    ecx,DWORD PTR [eax+0x8]
   149ca:	cmp    DWORD PTR [ecx+0x1c],edi
   149cd:	jne    0x149ee
   149cf:	mov    ecx,DWORD PTR [eax]
   149d1:	cmp    DWORD PTR [ecx+0x1c],edi
   149d4:	jne    0x149ee
   149d6:	and    DWORD PTR [eax+0x1c],0x0
   149da:	mov    esi,DWORD PTR [esi+0x4]
   149dd:	mov    ecx,DWORD PTR [ebp-0x4]
   149e0:	mov    eax,DWORD PTR [ecx+0x4]
   149e3:	cmp    esi,DWORD PTR [eax+0x4]
   149e6:	jne    0x14923
   149ec:	jmp    0x14a2c
   149ee:	mov    ecx,DWORD PTR [eax]
   149f0:	cmp    DWORD PTR [ecx+0x1c],edi
   149f3:	jne    0x14a0d
   149f5:	mov    ecx,DWORD PTR [eax+0x8]
   149f8:	mov    DWORD PTR [ecx+0x1c],edi
   149fb:	mov    ecx,DWORD PTR [ebp-0x4]
   149fe:	and    DWORD PTR [eax+0x1c],0x0
   14a02:	push   eax
   14a03:	call   0x1312c
   14a08:	mov    eax,DWORD PTR [esi+0x4]
   14a0b:	mov    eax,DWORD PTR [eax]
   14a0d:	mov    ecx,DWORD PTR [esi+0x4]
   14a10:	mov    ecx,DWORD PTR [ecx+0x1c]
   14a13:	mov    DWORD PTR [eax+0x1c],ecx
   14a16:	mov    ecx,DWORD PTR [esi+0x4]
   14a19:	mov    DWORD PTR [ecx+0x1c],edi
   14a1c:	mov    eax,DWORD PTR [eax]
   14a1e:	mov    ecx,DWORD PTR [ebp-0x4]
   14a21:	mov    DWORD PTR [eax+0x1c],edi
   14a24:	push   DWORD PTR [esi+0x4]
   14a27:	call   0x1317a
   14a2c:	mov    DWORD PTR [esi+0x1c],edi
   14a2f:	lea    eax,[ebx+0xc]
   14a32:	push   eax
   14a33:	call   0x1349a
   14a38:	push   ebx
   14a39:	call   0x1da40
   14a3e:	mov    eax,DWORD PTR [ebp-0x4]
   14a41:	dec    DWORD PTR [eax+0xc]
   14a44:	mov    eax,DWORD PTR [ebp+0x8]
   14a47:	pop    ecx
   14a48:	mov    ecx,DWORD PTR [ebp+0xc]
   14a4b:	pop    edi
   14a4c:	pop    esi
   14a4d:	mov    DWORD PTR [eax],ecx
   14a4f:	pop    ebx
   14a50:	leave  
   14a51:	ret    0x8
   14a54:	int3   
   14a55:	int3   
   14a56:	int3   
   14a57:	int3   
   14a58:	int3   
   14a59:	int3   
   14a5a:	mov    edi,edi
   14a5c:	push   ebp
   14a5d:	mov    ebp,esp
   14a5f:	push   ebx
   14a60:	push   esi
   14a61:	push   edi
   14a62:	mov    edi,DWORD PTR [ebp+0x8]
   14a65:	mov    ebx,ecx
   14a67:	mov    esi,edi
   14a69:	cmp    edi,DWORD PTR ds:0x7f6e0
   14a6f:	je     0x14a97
   14a71:	push   DWORD PTR [esi+0x8]
   14a74:	mov    ecx,ebx
   14a76:	call   0x14a5a
   14a7b:	mov    esi,DWORD PTR [esi]
   14a7d:	lea    eax,[edi+0xc]
   14a80:	push   eax
   14a81:	call   0x1349a
   14a86:	push   edi
   14a87:	call   0x1da40
   14a8c:	pop    ecx
   14a8d:	mov    edi,esi
   14a8f:	cmp    esi,DWORD PTR ds:0x7f6e0
   14a95:	jne    0x14a71
   14a97:	pop    edi
   14a98:	pop    esi
   14a99:	pop    ebx
   14a9a:	pop    ebp
   14a9b:	ret    0x4
   14a9e:	int3   
   14a9f:	int3   
   14aa0:	int3   
   14aa1:	int3   
   14aa2:	int3   
   14aa3:	int3   
   14aa4:	mov    edi,edi
   14aa6:	push   esi
   14aa7:	push   edi
   14aa8:	push   0x1
   14aaa:	xor    edi,edi
   14aac:	push   edi
   14aad:	mov    esi,ecx
   14aaf:	call   0x13998
   14ab4:	cmp    DWORD PTR ds:0x7f6e8,edi
   14aba:	jne    0x14ad1
   14abc:	mov    ecx,eax
   14abe:	mov    DWORD PTR ds:0x7f6e8,ecx
   14ac4:	mov    DWORD PTR [ecx],edi
   14ac6:	mov    ecx,DWORD PTR ds:0x7f6e8
   14acc:	xor    eax,eax
   14ace:	mov    DWORD PTR [ecx+0x8],edi
   14ad1:	inc    DWORD PTR ds:0x7f838
   14ad7:	cmp    eax,edi
   14ad9:	je     0x14ae2
   14adb:	push   eax
   14adc:	call   0x1da40
   14ae1:	pop    ecx
   14ae2:	push   edi
   14ae3:	push   DWORD PTR ds:0x7f6e8
   14ae9:	mov    ecx,esi
   14aeb:	call   0x13998
   14af0:	mov    DWORD PTR [esi+0xc],edi
   14af3:	mov    DWORD PTR [esi+0x4],eax
   14af6:	mov    DWORD PTR [eax],eax
   14af8:	mov    esi,DWORD PTR [esi+0x4]
   14afb:	pop    edi
   14afc:	mov    DWORD PTR [esi+0x8],esi
   14aff:	pop    esi
   14b00:	ret    
   14b01:	int3   
   14b02:	int3   
   14b03:	int3   
   14b04:	int3   
   14b05:	int3   
   14b06:	mov    edi,edi
   14b08:	push   ebp
   14b09:	mov    ebp,esp
   14b0b:	push   ebx
   14b0c:	mov    ebx,DWORD PTR [ebp+0x8]
   14b0f:	mov    eax,DWORD PTR [ebx+0x4]
   14b12:	push   esi
   14b13:	push   edi
   14b14:	mov    esi,ecx
   14b16:	mov    edi,DWORD PTR [esi+0x4]
   14b19:	add    eax,0x4
   14b1c:	push   edi
   14b1d:	push   DWORD PTR [eax]
   14b1f:	call   0x13b2e
   14b24:	mov    DWORD PTR [edi+0x4],eax
   14b27:	mov    eax,DWORD PTR [ebx+0xc]
   14b2a:	mov    edi,DWORD PTR [esi+0x4]
   14b2d:	mov    DWORD PTR [esi+0xc],eax
   14b30:	mov    eax,DWORD PTR [edi+0x4]
   14b33:	cmp    eax,DWORD PTR ds:0x7f6d4
   14b39:	je     0x14b53
   14b3b:	push   eax
   14b3c:	call   0x1124a
   14b41:	mov    DWORD PTR [edi],eax
   14b43:	mov    esi,DWORD PTR [esi+0x4]
   14b46:	push   DWORD PTR [esi+0x4]
   14b49:	call   0x11228
   14b4e:	mov    DWORD PTR [esi+0x8],eax
   14b51:	jmp    0x14b5b
   14b53:	mov    DWORD PTR [edi],edi
   14b55:	mov    esi,DWORD PTR [esi+0x4]
   14b58:	mov    DWORD PTR [esi+0x8],esi
   14b5b:	pop    edi
   14b5c:	pop    esi
   14b5d:	pop    ebx
   14b5e:	pop    ebp
   14b5f:	ret    0x4
   14b62:	int3   
   14b63:	int3   
   14b64:	int3   
   14b65:	int3   
   14b66:	int3   
   14b67:	int3   
   14b68:	mov    edi,edi
   14b6a:	push   ebp
   14b6b:	mov    ebp,esp
   14b6d:	push   edi
   14b6e:	mov    edi,DWORD PTR [ebp+0xc]
   14b71:	cmp    DWORD PTR [ebp+0x8],edi
   14b74:	je     0x14b8a
   14b76:	push   esi
   14b77:	mov    esi,DWORD PTR [ebp+0x10]
   14b7a:	inc    DWORD PTR [esi]
   14b7c:	lea    ecx,[ebp+0x8]
   14b7f:	call   0x1384e
   14b84:	cmp    DWORD PTR [ebp+0x8],edi
   14b87:	jne    0x14b7a
   14b89:	pop    esi
   14b8a:	pop    edi
   14b8b:	pop    ebp
   14b8c:	ret    
   14b8d:	int3   
   14b8e:	int3   
   14b8f:	int3   
   14b90:	int3   
   14b91:	int3   
   14b92:	mov    edi,edi
   14b94:	push   ebp
   14b95:	mov    ebp,esp
   14b97:	push   DWORD PTR [ebp+0xc]
   14b9a:	push   DWORD PTR [ebp+0x8]
   14b9d:	call   0x13c28
   14ba2:	mov    eax,DWORD PTR [ebp+0x8]
   14ba5:	pop    ebp
   14ba6:	ret    0x8
   14ba9:	int3   
   14baa:	int3   
   14bab:	int3   
   14bac:	int3   
   14bad:	int3   
   14bae:	mov    edi,edi
   14bb0:	push   ebp
   14bb1:	mov    ebp,esp
   14bb3:	push   ecx
   14bb4:	push   esi
   14bb5:	mov    esi,ecx
   14bb7:	cmp    DWORD PTR [esi+0xc],0x0
   14bbb:	mov    ecx,DWORD PTR [ebp+0xc]
   14bbe:	je     0x14bf8
   14bc0:	mov    eax,DWORD PTR [esi+0x4]
   14bc3:	cmp    ecx,DWORD PTR [eax]
   14bc5:	jne    0x14bf8
   14bc7:	cmp    DWORD PTR [ebp+0x10],eax
   14bca:	jne    0x14bf8
   14bcc:	push   DWORD PTR [eax+0x4]
   14bcf:	mov    ecx,esi
   14bd1:	call   0x138ac
   14bd6:	mov    ecx,DWORD PTR ds:0x7f6d0
   14bdc:	mov    eax,DWORD PTR [esi+0x4]
   14bdf:	mov    DWORD PTR [eax+0x4],ecx
   14be2:	mov    eax,DWORD PTR [esi+0x4]
   14be5:	and    DWORD PTR [esi+0xc],0x0
   14be9:	mov    DWORD PTR [eax],eax
   14beb:	mov    eax,DWORD PTR [esi+0x4]
   14bee:	mov    DWORD PTR [eax+0x8],eax
   14bf1:	mov    eax,DWORD PTR [esi+0x4]
   14bf4:	mov    ecx,DWORD PTR [eax]
   14bf6:	jmp    0x14c1d
   14bf8:	cmp    ecx,DWORD PTR [ebp+0x10]
   14bfb:	je     0x14c1d
   14bfd:	push   edi
   14bfe:	mov    edi,ecx
   14c00:	lea    ecx,[ebp+0xc]
   14c03:	call   0x112f0
   14c08:	push   edi
   14c09:	lea    eax,[ebp-0x4]
   14c0c:	push   eax
   14c0d:	mov    ecx,esi
   14c0f:	call   0x13d1a
   14c14:	mov    ecx,DWORD PTR [ebp+0xc]
   14c17:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c1a:	jne    0x14bfe
   14c1c:	pop    edi
   14c1d:	mov    eax,DWORD PTR [ebp+0x8]
   14c20:	mov    DWORD PTR [eax],ecx
   14c22:	pop    esi
   14c23:	leave  
   14c24:	ret    0xc
   14c27:	int3   
   14c28:	int3   
   14c29:	int3   
   14c2a:	int3   
   14c2b:	int3   
   14c2c:	mov    edi,edi
   14c2e:	push   ebp
   14c2f:	mov    ebp,esp
   14c31:	push   ecx
   14c32:	push   ecx
   14c33:	push   esi
   14c34:	push   DWORD PTR [ebp+0x8]
   14c37:	lea    eax,[ebp-0x8]
   14c3a:	push   eax
   14c3b:	mov    esi,ecx
   14c3d:	call   0x13f72
   14c42:	and    DWORD PTR [ebp+0x8],0x0
   14c46:	lea    eax,[ebp+0x8]
   14c49:	push   eax
   14c4a:	push   DWORD PTR [ebp-0x4]
   14c4d:	push   DWORD PTR [ebp-0x8]
   14c50:	call   0x139e0
   14c55:	add    esp,0xc
   14c58:	push   DWORD PTR [ebp-0x4]
   14c5b:	lea    eax,[ebp-0x4]
   14c5e:	push   DWORD PTR [ebp-0x8]
   14c61:	mov    ecx,esi
   14c63:	push   eax
   14c64:	call   0x14bae
   14c69:	mov    eax,DWORD PTR [ebp+0x8]
   14c6c:	pop    esi
   14c6d:	leave  
   14c6e:	ret    0x4
   14c71:	int3   
   14c72:	int3   
   14c73:	int3   
   14c74:	int3   
   14c75:	int3   
   14c76:	mov    edi,edi
   14c78:	push   ebp
   14c79:	mov    ebp,esp
   14c7b:	push   ecx
   14c7c:	push   ebx
   14c7d:	push   esi
   14c7e:	push   edi
   14c7f:	mov    edi,ecx
   14c81:	mov    eax,DWORD PTR [edi+0x4]
   14c84:	mov    esi,DWORD PTR [eax+0x4]
   14c87:	mov    ebx,eax
   14c89:	mov    eax,ds:0x7f6d4
   14c8e:	mov    dl,0x1
   14c90:	cmp    esi,eax
   14c92:	je     0x14cb0
   14c94:	mov    ecx,DWORD PTR [ebp+0xc]
   14c97:	mov    ecx,DWORD PTR [ecx]
   14c99:	cmp    ecx,DWORD PTR [esi+0xc]
   14c9c:	mov    ebx,esi
   14c9e:	setb   dl
   14ca1:	test   dl,dl
   14ca3:	je     0x14ca9
   14ca5:	mov    esi,DWORD PTR [esi]
   14ca7:	jmp    0x14cac
   14ca9:	mov    esi,DWORD PTR [esi+0x8]
   14cac:	cmp    esi,eax
   14cae:	jne    0x14c99
   14cb0:	cmp    BYTE PTR [edi+0x8],0x0
   14cb4:	je     0x14cd1
   14cb6:	push   DWORD PTR [ebp+0xc]
   14cb9:	push   ebx
   14cba:	push   esi
   14cbb:	lea    eax,[ebp+0xc]
   14cbe:	push   eax
   14cbf:	mov    ecx,edi
   14cc1:	call   0x144f6
   14cc6:	mov    ecx,DWORD PTR [eax]
   14cc8:	mov    eax,DWORD PTR [ebp+0x8]
   14ccb:	mov    BYTE PTR [eax+0x4],0x1
   14ccf:	jmp    0x14d00
   14cd1:	mov    ecx,ebx
   14cd3:	mov    DWORD PTR [ebp-0x4],ecx
   14cd6:	test   dl,dl
   14cd8:	je     0x14cec
   14cda:	mov    eax,DWORD PTR [edi+0x4]
   14cdd:	cmp    ebx,DWORD PTR [eax]
   14cdf:	je     0x14cb6
   14ce1:	lea    ecx,[ebp-0x4]
   14ce4:	call   0x12ec2
   14ce9:	mov    ecx,DWORD PTR [ebp-0x4]
   14cec:	mov    edx,DWORD PTR [ecx+0xc]
   14cef:	mov    eax,DWORD PTR [ebp+0xc]
   14cf2:	cmp    edx,DWORD PTR [eax]
   14cf4:	jae    0x14cf9
   14cf6:	push   eax
   14cf7:	jmp    0x14cb9
   14cf9:	mov    eax,DWORD PTR [ebp+0x8]
   14cfc:	mov    BYTE PTR [eax+0x4],0x0
   14d00:	pop    edi
   14d01:	pop    esi
   14d02:	mov    DWORD PTR [eax],ecx
   14d04:	pop    ebx
   14d05:	leave  
   14d06:	ret    0x8
   14d09:	int3   
   14d0a:	int3   
   14d0b:	int3   
   14d0c:	int3   
   14d0d:	int3   
   14d0e:	mov    edi,edi
   14d10:	push   ebp
   14d11:	mov    ebp,esp
   14d13:	push   ecx
   14d14:	push   esi
   14d15:	mov    esi,ecx
   14d17:	cmp    DWORD PTR [esi+0xc],0x0
   14d1b:	mov    ecx,DWORD PTR [ebp+0xc]
   14d1e:	je     0x14d58
   14d20:	mov    eax,DWORD PTR [esi+0x4]
   14d23:	cmp    ecx,DWORD PTR [eax]
   14d25:	jne    0x14d58
   14d27:	cmp    DWORD PTR [ebp+0x10],eax
   14d2a:	jne    0x14d58
   14d2c:	push   DWORD PTR [eax+0x4]
   14d2f:	mov    ecx,esi
   14d31:	call   0x138ec
   14d36:	mov    ecx,DWORD PTR ds:0x7f6d4
   14d3c:	mov    eax,DWORD PTR [esi+0x4]
   14d3f:	mov    DWORD PTR [eax+0x4],ecx
   14d42:	mov    eax,DWORD PTR [esi+0x4]
   14d45:	and    DWORD PTR [esi+0xc],0x0
   14d49:	mov    DWORD PTR [eax],eax
   14d4b:	mov    eax,DWORD PTR [esi+0x4]
   14d4e:	mov    DWORD PTR [eax+0x8],eax
   14d51:	mov    eax,DWORD PTR [esi+0x4]
   14d54:	mov    ecx,DWORD PTR [eax]
   14d56:	jmp    0x14d7d
   14d58:	cmp    ecx,DWORD PTR [ebp+0x10]
   14d5b:	je     0x14d7d
   14d5d:	push   edi
   14d5e:	mov    edi,ecx
   14d60:	lea    ecx,[ebp+0xc]
   14d63:	call   0x12f02
   14d68:	push   edi
   14d69:	lea    eax,[ebp-0x4]
   14d6c:	push   eax
   14d6d:	mov    ecx,esi
   14d6f:	call   0x1420a
   14d74:	mov    ecx,DWORD PTR [ebp+0xc]
   14d77:	cmp    ecx,DWORD PTR [ebp+0x10]
   14d7a:	jne    0x14d5e
   14d7c:	pop    edi
   14d7d:	mov    eax,DWORD PTR [ebp+0x8]
   14d80:	mov    DWORD PTR [eax],ecx
   14d82:	pop    esi
   14d83:	leave  
   14d84:	ret    0xc
   14d87:	int3   
   14d88:	int3   
   14d89:	int3   
   14d8a:	int3   
   14d8b:	int3   
   14d8c:	mov    edi,edi
   14d8e:	push   ebp
   14d8f:	mov    ebp,esp
   14d91:	push   ecx
   14d92:	push   ecx
   14d93:	push   esi
   14d94:	push   DWORD PTR [ebp+0x8]
   14d97:	lea    eax,[ebp-0x8]
   14d9a:	push   eax
   14d9b:	mov    esi,ecx
   14d9d:	call   0x14462
   14da2:	and    DWORD PTR [ebp+0x8],0x0
   14da6:	lea    eax,[ebp+0x8]
   14da9:	push   eax
   14daa:	push   DWORD PTR [ebp-0x4]
   14dad:	push   DWORD PTR [ebp-0x8]
   14db0:	call   0x13a46
   14db5:	add    esp,0xc
   14db8:	push   DWORD PTR [ebp-0x4]
   14dbb:	lea    eax,[ebp-0x4]
   14dbe:	push   DWORD PTR [ebp-0x8]
   14dc1:	mov    ecx,esi
   14dc3:	push   eax
   14dc4:	call   0x14d0e
   14dc9:	mov    eax,DWORD PTR [ebp+0x8]
   14dcc:	pop    esi
   14dcd:	leave  
   14dce:	ret    0x4
   14dd1:	int3   
   14dd2:	int3   
   14dd3:	int3   
   14dd4:	int3   
   14dd5:	int3   
   14dd6:	mov    edi,edi
   14dd8:	push   ebp
   14dd9:	mov    ebp,esp
   14ddb:	push   ecx
   14ddc:	push   ebx
   14ddd:	push   esi
   14dde:	push   edi
   14ddf:	mov    edi,ecx
   14de1:	mov    eax,DWORD PTR [edi+0x4]
   14de4:	mov    esi,DWORD PTR [eax+0x4]
   14de7:	mov    ebx,eax
   14de9:	mov    eax,ds:0x7f6d0
   14dee:	mov    dl,0x1
   14df0:	cmp    esi,eax
   14df2:	je     0x14e10
   14df4:	mov    ecx,DWORD PTR [ebp+0xc]
   14df7:	mov    ecx,DWORD PTR [ecx]
   14df9:	cmp    ecx,DWORD PTR [esi+0xc]
   14dfc:	mov    ebx,esi
   14dfe:	setb   dl
   14e01:	test   dl,dl
   14e03:	je     0x14e09
   14e05:	mov    esi,DWORD PTR [esi]
   14e07:	jmp    0x14e0c
   14e09:	mov    esi,DWORD PTR [esi+0x8]
   14e0c:	cmp    esi,eax
   14e0e:	jne    0x14df9
   14e10:	cmp    BYTE PTR [edi+0x8],0x0
   14e14:	je     0x14e31
   14e16:	push   DWORD PTR [ebp+0xc]
   14e19:	push   ebx
   14e1a:	push   esi
   14e1b:	lea    eax,[ebp+0xc]
   14e1e:	push   eax
   14e1f:	mov    ecx,edi
   14e21:	call   0x146a8
   14e26:	mov    ecx,DWORD PTR [eax]
   14e28:	mov    eax,DWORD PTR [ebp+0x8]
   14e2b:	mov    BYTE PTR [eax+0x4],0x1
   14e2f:	jmp    0x14e60
   14e31:	mov    ecx,ebx
   14e33:	mov    DWORD PTR [ebp-0x4],ecx
   14e36:	test   dl,dl
   14e38:	je     0x14e4c
   14e3a:	mov    eax,DWORD PTR [edi+0x4]
   14e3d:	cmp    ebx,DWORD PTR [eax]
   14e3f:	je     0x14e16
   14e41:	lea    ecx,[ebp-0x4]
   14e44:	call   0x112b0
   14e49:	mov    ecx,DWORD PTR [ebp-0x4]
   14e4c:	mov    edx,DWORD PTR [ecx+0xc]
   14e4f:	mov    eax,DWORD PTR [ebp+0xc]
   14e52:	cmp    edx,DWORD PTR [eax]
   14e54:	jae    0x14e59
   14e56:	push   eax
   14e57:	jmp    0x14e19
   14e59:	mov    eax,DWORD PTR [ebp+0x8]
   14e5c:	mov    BYTE PTR [eax+0x4],0x0
   14e60:	pop    edi
   14e61:	pop    esi
   14e62:	mov    DWORD PTR [eax],ecx
   14e64:	pop    ebx
   14e65:	leave  
   14e66:	ret    0x8
   14e69:	int3   
   14e6a:	int3   
   14e6b:	int3   
   14e6c:	int3   
   14e6d:	int3   
   14e6e:	mov    edi,edi
   14e70:	push   ebp
   14e71:	mov    ebp,esp
   14e73:	push   ecx
   14e74:	push   esi
   14e75:	mov    esi,ecx
   14e77:	cmp    DWORD PTR [esi+0xc],0x0
   14e7b:	mov    ecx,DWORD PTR [ebp+0xc]
   14e7e:	je     0x14eb8
   14e80:	mov    eax,DWORD PTR [esi+0x4]
   14e83:	cmp    ecx,DWORD PTR [eax]
   14e85:	jne    0x14eb8
   14e87:	cmp    DWORD PTR [ebp+0x10],eax
   14e8a:	jne    0x14eb8
   14e8c:	push   DWORD PTR [eax+0x4]
   14e8f:	mov    ecx,esi
   14e91:	call   0x14a5a
   14e96:	mov    ecx,DWORD PTR ds:0x7f6e0
   14e9c:	mov    eax,DWORD PTR [esi+0x4]
   14e9f:	mov    DWORD PTR [eax+0x4],ecx
   14ea2:	mov    eax,DWORD PTR [esi+0x4]
   14ea5:	and    DWORD PTR [esi+0xc],0x0
   14ea9:	mov    DWORD PTR [eax],eax
   14eab:	mov    eax,DWORD PTR [esi+0x4]
   14eae:	mov    DWORD PTR [eax+0x8],eax
   14eb1:	mov    eax,DWORD PTR [esi+0x4]
   14eb4:	mov    ecx,DWORD PTR [eax]
   14eb6:	jmp    0x14edd
   14eb8:	cmp    ecx,DWORD PTR [ebp+0x10]
   14ebb:	je     0x14edd
   14ebd:	push   edi
   14ebe:	mov    edi,ecx
   14ec0:	lea    ecx,[ebp+0xc]
   14ec3:	call   0x1156e
   14ec8:	push   edi
   14ec9:	lea    eax,[ebp-0x4]
   14ecc:	push   eax
   14ecd:	mov    ecx,esi
   14ecf:	call   0x147f8
   14ed4:	mov    ecx,DWORD PTR [ebp+0xc]
   14ed7:	cmp    ecx,DWORD PTR [ebp+0x10]
   14eda:	jne    0x14ebe
   14edc:	pop    edi
   14edd:	mov    eax,DWORD PTR [ebp+0x8]
   14ee0:	mov    DWORD PTR [eax],ecx
   14ee2:	pop    esi
   14ee3:	leave  
   14ee4:	ret    0xc
   14ee7:	int3   
   14ee8:	int3   
   14ee9:	int3   
   14eea:	int3   
   14eeb:	int3   
   14eec:	mov    edi,edi
   14eee:	push   ebp
   14eef:	mov    ebp,esp
   14ef1:	push   ecx
   14ef2:	push   ecx
   14ef3:	push   ebx
   14ef4:	push   esi
   14ef5:	mov    DWORD PTR [ebp-0x4],ecx
   14ef8:	push   edi
   14ef9:	mov    edi,DWORD PTR [ebp+0xc]
   14efc:	lea    ecx,[ebp+0xc]
   14eff:	call   0x12e8c
   14f04:	mov    esi,DWORD PTR [edi]
   14f06:	mov    eax,ds:0x7f6d8
   14f0b:	mov    ebx,edi
   14f0d:	mov    DWORD PTR [ebp-0x8],esi
   14f10:	cmp    esi,eax
   14f12:	jne    0x14f30
   14f14:	mov    esi,DWORD PTR [edi+0x8]
   14f17:	mov    eax,DWORD PTR [ebx+0x4]
   14f1a:	mov    ecx,DWORD PTR [ebp-0x4]
   14f1d:	mov    DWORD PTR [esi+0x4],eax
   14f20:	mov    eax,DWORD PTR [ecx+0x4]
   14f23:	cmp    DWORD PTR [eax+0x4],edi
   14f26:	jne    0x14fa5
   14f28:	mov    DWORD PTR [eax+0x4],esi
   14f2b:	jmp    0x14fb3
   14f30:	mov    ecx,DWORD PTR [edi+0x8]
   14f33:	cmp    ecx,eax
   14f35:	je     0x14f17
   14f37:	push   ecx
   14f38:	call   0x1128e
   14f3d:	mov    ebx,eax
   14f3f:	mov    esi,DWORD PTR [ebx+0x8]
   14f42:	cmp    ebx,edi
   14f44:	je     0x14f17
   14f46:	mov    eax,DWORD PTR [ebp-0x8]
   14f49:	mov    DWORD PTR [eax+0x4],ebx
   14f4c:	mov    eax,DWORD PTR [edi]
   14f4e:	mov    DWORD PTR [ebx],eax
   14f50:	cmp    ebx,DWORD PTR [edi+0x8]
   14f53:	jne    0x14f5a
   14f55:	mov    DWORD PTR [esi+0x4],ebx
   14f58:	jmp    0x14f71
   14f5a:	mov    eax,DWORD PTR [ebx+0x4]
   14f5d:	mov    DWORD PTR [esi+0x4],eax
   14f60:	mov    eax,DWORD PTR [ebx+0x4]
   14f63:	mov    DWORD PTR [eax],esi
   14f65:	mov    eax,DWORD PTR [edi+0x8]
   14f68:	mov    DWORD PTR [ebx+0x8],eax
   14f6b:	mov    eax,DWORD PTR [edi+0x8]
   14f6e:	mov    DWORD PTR [eax+0x4],ebx
   14f71:	mov    eax,DWORD PTR [ebp-0x4]
   14f74:	mov    eax,DWORD PTR [eax+0x4]
   14f77:	cmp    DWORD PTR [eax+0x4],edi
   14f7a:	jne    0x14f81
   14f7c:	mov    DWORD PTR [eax+0x4],ebx
   14f7f:	jmp    0x14f8f
   14f81:	mov    eax,DWORD PTR [edi+0x4]
   14f84:	cmp    DWORD PTR [eax],edi
   14f86:	jne    0x14f8c
   14f88:	mov    DWORD PTR [eax],ebx
   14f8a:	jmp    0x14f8f
   14f8c:	mov    DWORD PTR [eax+0x8],ebx
   14f8f:	mov    eax,DWORD PTR [edi+0x4]
   14f92:	mov    DWORD PTR [ebx+0x4],eax
   14f95:	mov    eax,DWORD PTR [ebx+0x70]
   14f98:	mov    ecx,DWORD PTR [edi+0x70]
   14f9b:	mov    DWORD PTR [ebx+0x70],ecx
   14f9e:	mov    DWORD PTR [edi+0x70],eax
   14fa1:	mov    ebx,edi
   14fa3:	jmp    0x15006
   14fa5:	mov    eax,DWORD PTR [edi+0x4]
   14fa8:	cmp    DWORD PTR [eax],edi
   14faa:	jne    0x14fb0
   14fac:	mov    DWORD PTR [eax],esi
   14fae:	jmp    0x14fb3
   14fb0:	mov    DWORD PTR [eax+0x8],esi
   14fb3:	mov    eax,DWORD PTR [ecx+0x4]
   14fb6:	mov    DWORD PTR [ebp-0x8],eax
   14fb9:	cmp    DWORD PTR [eax],edi
   14fbb:	jne    0x14fdd
   14fbd:	mov    edx,DWORD PTR [edi+0x8]
   14fc0:	cmp    edx,DWORD PTR ds:0x7f6d8
   14fc6:	jne    0x14fcf
   14fc8:	mov    edx,DWORD PTR [edi+0x4]
   14fcb:	mov    DWORD PTR [eax],edx
   14fcd:	jmp    0x14fdd
   14fcf:	push   esi
   14fd0:	call   0x1128e
   14fd5:	mov    ecx,DWORD PTR [ebp-0x8]
   14fd8:	mov    DWORD PTR [ecx],eax
   14fda:	mov    ecx,DWORD PTR [ebp-0x4]
   14fdd:	mov    eax,DWORD PTR [ecx+0x4]
   14fe0:	mov    DWORD PTR [ebp-0x8],eax
   14fe3:	cmp    DWORD PTR [eax+0x8],edi
   14fe6:	jne    0x15006
   14fe8:	mov    ecx,DWORD PTR [edi]
   14fea:	cmp    ecx,DWORD PTR ds:0x7f6d8
   14ff0:	jne    0x14ffa
   14ff2:	mov    ecx,DWORD PTR [edi+0x4]
   14ff5:	mov    DWORD PTR [eax+0x8],ecx
   14ff8:	jmp    0x15006
   14ffa:	push   esi
   14ffb:	call   0x1126c
   15000:	mov    ecx,DWORD PTR [ebp-0x8]
   15003:	mov    DWORD PTR [ecx+0x8],eax
   15006:	xor    edi,edi
   15008:	inc    edi
   15009:	cmp    DWORD PTR [ebx+0x70],edi
   1500c:	jne    0x15123
   15012:	jmp    0x150d1
   15017:	cmp    DWORD PTR [esi+0x70],edi
   1501a:	jne    0x15120
   15020:	mov    eax,DWORD PTR [esi+0x4]
   15023:	cmp    esi,DWORD PTR [eax]
   15025:	jne    0x1509c
   15027:	mov    eax,DWORD PTR [eax+0x8]
   1502a:	cmp    DWORD PTR [eax+0x70],0x0
   1502e:	jne    0x15048
   15030:	mov    DWORD PTR [eax+0x70],edi
   15033:	mov    eax,DWORD PTR [esi+0x4]
   15036:	and    DWORD PTR [eax+0x70],0x0
   1503a:	push   DWORD PTR [esi+0x4]
   1503d:	call   0x13016
   15042:	mov    eax,DWORD PTR [esi+0x4]
   15045:	mov    eax,DWORD PTR [eax+0x8]
   15048:	mov    ecx,DWORD PTR [eax]
   1504a:	cmp    DWORD PTR [ecx+0x70],edi
   1504d:	jne    0x15057
   1504f:	mov    ecx,DWORD PTR [eax+0x8]
   15052:	cmp    DWORD PTR [ecx+0x70],edi
   15055:	je     0x150ca
   15057:	mov    ecx,DWORD PTR [eax+0x8]
   1505a:	cmp    DWORD PTR [ecx+0x70],edi
   1505d:	jne    0x15077
   1505f:	mov    ecx,DWORD PTR [eax]
   15061:	mov    DWORD PTR [ecx+0x70],edi
   15064:	mov    ecx,DWORD PTR [ebp-0x4]
   15067:	and    DWORD PTR [eax+0x70],0x0
   1506b:	push   eax
   1506c:	call   0x13064
   15071:	mov    eax,DWORD PTR [esi+0x4]
   15074:	mov    eax,DWORD PTR [eax+0x8]
   15077:	mov    ecx,DWORD PTR [esi+0x4]
   1507a:	mov    ecx,DWORD PTR [ecx+0x70]
   1507d:	mov    DWORD PTR [eax+0x70],ecx
   15080:	mov    ecx,DWORD PTR [esi+0x4]
   15083:	mov    DWORD PTR [ecx+0x70],edi
   15086:	mov    eax,DWORD PTR [eax+0x8]
   15089:	mov    ecx,DWORD PTR [ebp-0x4]
   1508c:	mov    DWORD PTR [eax+0x70],edi
   1508f:	push   DWORD PTR [esi+0x4]
   15092:	call   0x13016
   15097:	jmp    0x15120
   1509c:	mov    eax,DWORD PTR [eax]
   1509e:	cmp    DWORD PTR [eax+0x70],0x0
   150a2:	jne    0x150bb
   150a4:	mov    DWORD PTR [eax+0x70],edi
   150a7:	mov    eax,DWORD PTR [esi+0x4]
   150aa:	and    DWORD PTR [eax+0x70],0x0
   150ae:	push   DWORD PTR [esi+0x4]
   150b1:	call   0x13064
   150b6:	mov    eax,DWORD PTR [esi+0x4]
   150b9:	mov    eax,DWORD PTR [eax]
   150bb:	mov    ecx,DWORD PTR [eax+0x8]
   150be:	cmp    DWORD PTR [ecx+0x70],edi
   150c1:	jne    0x150e2
   150c3:	mov    ecx,DWORD PTR [eax]
   150c5:	cmp    DWORD PTR [ecx+0x70],edi
   150c8:	jne    0x150e2
   150ca:	and    DWORD PTR [eax+0x70],0x0
   150ce:	mov    esi,DWORD PTR [esi+0x4]
   150d1:	mov    ecx,DWORD PTR [ebp-0x4]
   150d4:	mov    eax,DWORD PTR [ecx+0x4]
   150d7:	cmp    esi,DWORD PTR [eax+0x4]
   150da:	jne    0x15017
   150e0:	jmp    0x15120
   150e2:	mov    ecx,DWORD PTR [eax]
   150e4:	cmp    DWORD PTR [ecx+0x70],edi
   150e7:	jne    0x15101
   150e9:	mov    ecx,DWORD PTR [eax+0x8]
   150ec:	mov    DWORD PTR [ecx+0x70],edi
   150ef:	mov    ecx,DWORD PTR [ebp-0x4]
   150f2:	and    DWORD PTR [eax+0x70],0x0
   150f6:	push   eax
   150f7:	call   0x13016
   150fc:	mov    eax,DWORD PTR [esi+0x4]
   150ff:	mov    eax,DWORD PTR [eax]
   15101:	mov    ecx,DWORD PTR [esi+0x4]
   15104:	mov    ecx,DWORD PTR [ecx+0x70]
   15107:	mov    DWORD PTR [eax+0x70],ecx
   1510a:	mov    ecx,DWORD PTR [esi+0x4]
   1510d:	mov    DWORD PTR [ecx+0x70],edi
   15110:	mov    eax,DWORD PTR [eax]
   15112:	mov    ecx,DWORD PTR [ebp-0x4]
   15115:	mov    DWORD PTR [eax+0x70],edi
   15118:	push   DWORD PTR [esi+0x4]
   1511b:	call   0x13064
   15120:	mov    DWORD PTR [esi+0x70],edi
   15123:	lea    eax,[ebx+0x10]
   15126:	push   eax
   15127:	call   0x13a86
   1512c:	push   ebx
   1512d:	call   0x1da40
   15132:	mov    eax,DWORD PTR [ebp-0x4]
   15135:	dec    DWORD PTR [eax+0xc]
   15138:	mov    eax,DWORD PTR [ebp+0x8]
   1513b:	pop    ecx
   1513c:	mov    ecx,DWORD PTR [ebp+0xc]
   1513f:	pop    edi
   15140:	pop    esi
   15141:	mov    DWORD PTR [eax],ecx
   15143:	pop    ebx
   15144:	leave  
   15145:	ret    0x8
   15148:	int3   
   15149:	int3   
   1514a:	int3   
   1514b:	int3   
   1514c:	int3   
   1514d:	int3   
   1514e:	mov    edi,edi
   15150:	push   ebp
   15151:	mov    ebp,esp
   15153:	push   ebx
   15154:	push   esi
   15155:	push   edi
   15156:	mov    edi,DWORD PTR [ebp+0x8]
   15159:	mov    ebx,ecx
   1515b:	mov    esi,edi
   1515d:	cmp    edi,DWORD PTR ds:0x7f6d8
   15163:	je     0x1518b
   15165:	push   DWORD PTR [esi+0x8]
   15168:	mov    ecx,ebx
   1516a:	call   0x1514e
   1516f:	mov    esi,DWORD PTR [esi]
   15171:	lea    eax,[edi+0x10]
   15174:	push   eax
   15175:	call   0x13a86
   1517a:	push   edi
   1517b:	call   0x1da40
   15180:	pop    ecx
   15181:	mov    edi,esi
   15183:	cmp    esi,DWORD PTR ds:0x7f6d8
   15189:	jne    0x15165
   1518b:	pop    edi
   1518c:	pop    esi
   1518d:	pop    ebx
   1518e:	pop    ebp
   1518f:	ret    0x4
   15192:	int3   
   15193:	int3   
   15194:	int3   
   15195:	int3   
   15196:	int3   
   15197:	int3   
   15198:	mov    edi,edi
   1519a:	push   ebp
   1519b:	mov    ebp,esp
   1519d:	push   ebx
   1519e:	push   esi
   1519f:	mov    esi,DWORD PTR [ebp+0x10]
   151a2:	push   edi
   151a3:	push   0x0
   151a5:	push   esi
   151a6:	mov    edi,ecx
   151a8:	call   0x13998
   151ad:	push   DWORD PTR [ebp+0x14]
   151b0:	mov    ebx,eax
   151b2:	mov    eax,ds:0x7f6d8
   151b7:	mov    DWORD PTR [ebx],eax
   151b9:	mov    eax,ds:0x7f6d8
   151be:	mov    DWORD PTR [ebx+0x8],eax
   151c1:	lea    eax,[ebx+0x10]
   151c4:	push   eax
   151c5:	call   0x13a68
   151ca:	inc    DWORD PTR [edi+0xc]
   151cd:	cmp    esi,DWORD PTR [edi+0x4]
   151d0:	je     0x151fa
   151d2:	mov    eax,DWORD PTR [ebp+0xc]
   151d5:	cmp    eax,DWORD PTR ds:0x7f6d8
   151db:	jne    0x151fa
   151dd:	lea    eax,[esi+0x10]
   151e0:	push   eax
   151e1:	push   DWORD PTR [ebp+0x14]
   151e4:	call   0x197ae
   151e9:	test   al,al
   151eb:	jne    0x151fa
   151ed:	mov    DWORD PTR [esi+0x8],ebx
   151f0:	mov    eax,DWORD PTR [edi+0x4]
   151f3:	cmp    esi,DWORD PTR [eax+0x8]
   151f6:	jne    0x15214
   151f8:	jmp    0x15209
   151fa:	mov    DWORD PTR [esi],ebx
   151fc:	mov    eax,DWORD PTR [edi+0x4]
   151ff:	cmp    esi,eax
   15201:	jne    0x1520e
   15203:	mov    DWORD PTR [eax+0x4],ebx
   15206:	mov    eax,DWORD PTR [edi+0x4]
   15209:	mov    DWORD PTR [eax+0x8],ebx
   1520c:	jmp    0x15214
   1520e:	cmp    esi,DWORD PTR [eax]
   15210:	jne    0x15214
   15212:	mov    DWORD PTR [eax],ebx
   15214:	mov    eax,DWORD PTR [edi+0x4]
   15217:	mov    esi,ebx
   15219:	cmp    ebx,DWORD PTR [eax+0x4]
   1521c:	je     0x152d0
   15222:	mov    eax,DWORD PTR [esi+0x4]
   15225:	xor    edx,edx
   15227:	cmp    DWORD PTR [eax+0x70],edx
   1522a:	jne    0x152d0
   15230:	mov    ecx,DWORD PTR [eax+0x4]
   15233:	cmp    eax,DWORD PTR [ecx]
   15235:	jne    0x15271
   15237:	mov    ecx,DWORD PTR [ecx+0x8]
   1523a:	cmp    DWORD PTR [ecx+0x70],edx
   1523d:	je     0x15278
   1523f:	cmp    esi,DWORD PTR [eax+0x8]
   15242:	jne    0x1524e
   15244:	mov    esi,eax
   15246:	push   esi
   15247:	mov    ecx,edi
   15249:	call   0x13016
   1524e:	mov    eax,DWORD PTR [esi+0x4]
   15251:	mov    DWORD PTR [eax+0x70],0x1
   15258:	mov    eax,DWORD PTR [esi+0x4]
   1525b:	mov    eax,DWORD PTR [eax+0x4]
   1525e:	and    DWORD PTR [eax+0x70],0x0
   15262:	mov    eax,DWORD PTR [esi+0x4]
   15265:	push   DWORD PTR [eax+0x4]
   15268:	mov    ecx,edi
   1526a:	call   0x13064
   1526f:	jmp    0x152c4
   15271:	mov    ecx,DWORD PTR [ecx]
   15273:	cmp    DWORD PTR [ecx+0x70],edx
   15276:	jne    0x15295
   15278:	mov    edx,eax
   1527a:	xor    eax,eax
   1527c:	inc    eax
   1527d:	mov    DWORD PTR [edx+0x70],eax
   15280:	mov    DWORD PTR [ecx+0x70],eax
   15283:	mov    eax,DWORD PTR [esi+0x4]
   15286:	mov    eax,DWORD PTR [eax+0x4]
   15289:	and    DWORD PTR [eax+0x70],0x0
   1528d:	mov    eax,DWORD PTR [esi+0x4]
   15290:	mov    esi,DWORD PTR [eax+0x4]
   15293:	jmp    0x152c4
   15295:	cmp    esi,DWORD PTR [eax]
   15297:	jne    0x152a3
   15299:	mov    esi,eax
   1529b:	push   esi
   1529c:	mov    ecx,edi
   1529e:	call   0x13064
   152a3:	mov    eax,DWORD PTR [esi+0x4]
   152a6:	mov    DWORD PTR [eax+0x70],0x1
   152ad:	mov    eax,DWORD PTR [esi+0x4]
   152b0:	mov    eax,DWORD PTR [eax+0x4]
   152b3:	and    DWORD PTR [eax+0x70],0x0
   152b7:	mov    eax,DWORD PTR [esi+0x4]
   152ba:	push   DWORD PTR [eax+0x4]
   152bd:	mov    ecx,edi
   152bf:	call   0x13016
   152c4:	mov    eax,DWORD PTR [edi+0x4]
   152c7:	cmp    esi,DWORD PTR [eax+0x4]
   152ca:	jne    0x15222
   152d0:	mov    eax,DWORD PTR [edi+0x4]
   152d3:	mov    eax,DWORD PTR [eax+0x4]
   152d6:	pop    edi
   152d7:	mov    DWORD PTR [eax+0x70],0x1
   152de:	mov    eax,DWORD PTR [ebp+0x8]
   152e1:	pop    esi
   152e2:	mov    DWORD PTR [eax],ebx
   152e4:	pop    ebx
   152e5:	pop    ebp
   152e6:	ret    0x10
   152e9:	int3   
   152ea:	int3   
   152eb:	int3   
   152ec:	int3   
   152ed:	int3   
   152ee:	mov    edi,edi
   152f0:	push   ebp
   152f1:	mov    ebp,esp
   152f3:	push   ecx
   152f4:	push   ecx
   152f5:	push   ebx
   152f6:	push   esi
   152f7:	mov    DWORD PTR [ebp-0x4],ecx
   152fa:	push   edi
   152fb:	mov    edi,DWORD PTR [ebp+0xc]
   152fe:	lea    ecx,[ebp+0xc]
   15301:	call   0x1384e
   15306:	mov    esi,DWORD PTR [edi]
   15308:	mov    eax,ds:0x7f6dc
   1530d:	mov    ebx,edi
   1530f:	mov    DWORD PTR [ebp-0x8],esi
   15312:	cmp    esi,eax
   15314:	jne    0x15332
   15316:	mov    esi,DWORD PTR [edi+0x8]
   15319:	mov    eax,DWORD PTR [ebx+0x4]
   1531c:	mov    ecx,DWORD PTR [ebp-0x4]
   1531f:	mov    DWORD PTR [esi+0x4],eax
   15322:	mov    eax,DWORD PTR [ecx+0x4]
   15325:	cmp    DWORD PTR [eax+0x4],edi
   15328:	jne    0x153a7
   1532a:	mov    DWORD PTR [eax+0x4],esi
   1532d:	jmp    0x153b5
   15332:	mov    ecx,DWORD PTR [edi+0x8]
   15335:	cmp    ecx,eax
   15337:	je     0x15319
   15339:	push   ecx
   1533a:	call   0x12cb4
   1533f:	mov    ebx,eax
   15341:	mov    esi,DWORD PTR [ebx+0x8]
   15344:	cmp    ebx,edi
   15346:	je     0x15319
   15348:	mov    eax,DWORD PTR [ebp-0x8]
   1534b:	mov    DWORD PTR [eax+0x4],ebx
   1534e:	mov    eax,DWORD PTR [edi]
   15350:	mov    DWORD PTR [ebx],eax
   15352:	cmp    ebx,DWORD PTR [edi+0x8]
   15355:	jne    0x1535c
   15357:	mov    DWORD PTR [esi+0x4],ebx
   1535a:	jmp    0x15373
   1535c:	mov    eax,DWORD PTR [ebx+0x4]
   1535f:	mov    DWORD PTR [esi+0x4],eax
   15362:	mov    eax,DWORD PTR [ebx+0x4]
   15365:	mov    DWORD PTR [eax],esi
   15367:	mov    eax,DWORD PTR [edi+0x8]
   1536a:	mov    DWORD PTR [ebx+0x8],eax
   1536d:	mov    eax,DWORD PTR [edi+0x8]
   15370:	mov    DWORD PTR [eax+0x4],ebx
   15373:	mov    eax,DWORD PTR [ebp-0x4]
   15376:	mov    eax,DWORD PTR [eax+0x4]
   15379:	cmp    DWORD PTR [eax+0x4],edi
   1537c:	jne    0x15383
   1537e:	mov    DWORD PTR [eax+0x4],ebx
   15381:	jmp    0x15391
   15383:	mov    eax,DWORD PTR [edi+0x4]
   15386:	cmp    DWORD PTR [eax],edi
   15388:	jne    0x1538e
   1538a:	mov    DWORD PTR [eax],ebx
   1538c:	jmp    0x15391
   1538e:	mov    DWORD PTR [eax+0x8],ebx
   15391:	mov    eax,DWORD PTR [edi+0x4]
   15394:	mov    DWORD PTR [ebx+0x4],eax
   15397:	mov    eax,DWORD PTR [ebx+0x68]
   1539a:	mov    ecx,DWORD PTR [edi+0x68]
   1539d:	mov    DWORD PTR [ebx+0x68],ecx
   153a0:	mov    DWORD PTR [edi+0x68],eax
   153a3:	mov    ebx,edi
   153a5:	jmp    0x15408
   153a7:	mov    eax,DWORD PTR [edi+0x4]
   153aa:	cmp    DWORD PTR [eax],edi
   153ac:	jne    0x153b2
   153ae:	mov    DWORD PTR [eax],esi
   153b0:	jmp    0x153b5
   153b2:	mov    DWORD PTR [eax+0x8],esi
   153b5:	mov    eax,DWORD PTR [ecx+0x4]
   153b8:	mov    DWORD PTR [ebp-0x8],eax
   153bb:	cmp    DWORD PTR [eax],edi
   153bd:	jne    0x153df
   153bf:	mov    edx,DWORD PTR [edi+0x8]
   153c2:	cmp    edx,DWORD PTR ds:0x7f6dc
   153c8:	jne    0x153d1
   153ca:	mov    edx,DWORD PTR [edi+0x4]
   153cd:	mov    DWORD PTR [eax],edx
   153cf:	jmp    0x153df
   153d1:	push   esi
   153d2:	call   0x12cb4
   153d7:	mov    ecx,DWORD PTR [ebp-0x8]
   153da:	mov    DWORD PTR [ecx],eax
   153dc:	mov    ecx,DWORD PTR [ebp-0x4]
   153df:	mov    eax,DWORD PTR [ecx+0x4]
   153e2:	mov    DWORD PTR [ebp-0x8],eax
   153e5:	cmp    DWORD PTR [eax+0x8],edi
   153e8:	jne    0x15408
   153ea:	mov    ecx,DWORD PTR [edi]
   153ec:	cmp    ecx,DWORD PTR ds:0x7f6dc
   153f2:	jne    0x153fc
   153f4:	mov    ecx,DWORD PTR [edi+0x4]
   153f7:	mov    DWORD PTR [eax+0x8],ecx
   153fa:	jmp    0x15408
   153fc:	push   esi
   153fd:	call   0x11374
   15402:	mov    ecx,DWORD PTR [ebp-0x8]
   15405:	mov    DWORD PTR [ecx+0x8],eax
   15408:	xor    edi,edi
   1540a:	inc    edi
   1540b:	cmp    DWORD PTR [ebx+0x68],edi
   1540e:	jne    0x15525
   15414:	jmp    0x154d3
   15419:	cmp    DWORD PTR [esi+0x68],edi
   1541c:	jne    0x15522
   15422:	mov    eax,DWORD PTR [esi+0x4]
   15425:	cmp    esi,DWORD PTR [eax]
   15427:	jne    0x1549e
   15429:	mov    eax,DWORD PTR [eax+0x8]
   1542c:	cmp    DWORD PTR [eax+0x68],0x0
   15430:	jne    0x1544a
   15432:	mov    DWORD PTR [eax+0x68],edi
   15435:	mov    eax,DWORD PTR [esi+0x4]
   15438:	and    DWORD PTR [eax+0x68],0x0
   1543c:	push   DWORD PTR [esi+0x4]
   1543f:	call   0x11326
   15444:	mov    eax,DWORD PTR [esi+0x4]
   15447:	mov    eax,DWORD PTR [eax+0x8]
   1544a:	mov    ecx,DWORD PTR [eax]
   1544c:	cmp    DWORD PTR [ecx+0x68],edi
   1544f:	jne    0x15459
   15451:	mov    ecx,DWORD PTR [eax+0x8]
   15454:	cmp    DWORD PTR [ecx+0x68],edi
   15457:	je     0x154cc
   15459:	mov    ecx,DWORD PTR [eax+0x8]
   1545c:	cmp    DWORD PTR [ecx+0x68],edi
   1545f:	jne    0x15479
   15461:	mov    ecx,DWORD PTR [eax]
   15463:	mov    DWORD PTR [ecx+0x68],edi
   15466:	mov    ecx,DWORD PTR [ebp-0x4]
   15469:	and    DWORD PTR [eax+0x68],0x0
   1546d:	push   eax
   1546e:	call   0x11396
   15473:	mov    eax,DWORD PTR [esi+0x4]
   15476:	mov    eax,DWORD PTR [eax+0x8]
   15479:	mov    ecx,DWORD PTR [esi+0x4]
   1547c:	mov    ecx,DWORD PTR [ecx+0x68]
   1547f:	mov    DWORD PTR [eax+0x68],ecx
   15482:	mov    ecx,DWORD PTR [esi+0x4]
   15485:	mov    DWORD PTR [ecx+0x68],edi
   15488:	mov    eax,DWORD PTR [eax+0x8]
   1548b:	mov    ecx,DWORD PTR [ebp-0x4]
   1548e:	mov    DWORD PTR [eax+0x68],edi
   15491:	push   DWORD PTR [esi+0x4]
   15494:	call   0x11326
   15499:	jmp    0x15522
   1549e:	mov    eax,DWORD PTR [eax]
   154a0:	cmp    DWORD PTR [eax+0x68],0x0
   154a4:	jne    0x154bd
   154a6:	mov    DWORD PTR [eax+0x68],edi
   154a9:	mov    eax,DWORD PTR [esi+0x4]
   154ac:	and    DWORD PTR [eax+0x68],0x0
   154b0:	push   DWORD PTR [esi+0x4]
   154b3:	call   0x11396
   154b8:	mov    eax,DWORD PTR [esi+0x4]
   154bb:	mov    eax,DWORD PTR [eax]
   154bd:	mov    ecx,DWORD PTR [eax+0x8]
   154c0:	cmp    DWORD PTR [ecx+0x68],edi
   154c3:	jne    0x154e4
   154c5:	mov    ecx,DWORD PTR [eax]
   154c7:	cmp    DWORD PTR [ecx+0x68],edi
   154ca:	jne    0x154e4
   154cc:	and    DWORD PTR [eax+0x68],0x0
   154d0:	mov    esi,DWORD PTR [esi+0x4]
   154d3:	mov    ecx,DWORD PTR [ebp-0x4]
   154d6:	mov    eax,DWORD PTR [ecx+0x4]
   154d9:	cmp    esi,DWORD PTR [eax+0x4]
   154dc:	jne    0x15419
   154e2:	jmp    0x15522
   154e4:	mov    ecx,DWORD PTR [eax]
   154e6:	cmp    DWORD PTR [ecx+0x68],edi
   154e9:	jne    0x15503
   154eb:	mov    ecx,DWORD PTR [eax+0x8]
   154ee:	mov    DWORD PTR [ecx+0x68],edi
   154f1:	mov    ecx,DWORD PTR [ebp-0x4]
   154f4:	and    DWORD PTR [eax+0x68],0x0
   154f8:	push   eax
   154f9:	call   0x11326
   154fe:	mov    eax,DWORD PTR [esi+0x4]
   15501:	mov    eax,DWORD PTR [eax]
   15503:	mov    ecx,DWORD PTR [esi+0x4]
   15506:	mov    ecx,DWORD PTR [ecx+0x68]
   15509:	mov    DWORD PTR [eax+0x68],ecx
   1550c:	mov    ecx,DWORD PTR [esi+0x4]
   1550f:	mov    DWORD PTR [ecx+0x68],edi
   15512:	mov    eax,DWORD PTR [eax]
   15514:	mov    ecx,DWORD PTR [ebp-0x4]
   15517:	mov    DWORD PTR [eax+0x68],edi
   1551a:	push   DWORD PTR [esi+0x4]
   1551d:	call   0x11396
   15522:	mov    DWORD PTR [esi+0x68],edi
   15525:	lea    eax,[ebx+0x10]
   15528:	push   eax
   15529:	call   0x13a86
   1552e:	push   ebx
   1552f:	call   0x1da40
   15534:	mov    eax,DWORD PTR [ebp-0x4]
   15537:	dec    DWORD PTR [eax+0xc]
   1553a:	mov    eax,DWORD PTR [ebp+0x8]
   1553d:	pop    ecx
   1553e:	mov    ecx,DWORD PTR [ebp+0xc]
   15541:	pop    edi
   15542:	pop    esi
   15543:	mov    DWORD PTR [eax],ecx
   15545:	pop    ebx
   15546:	leave  
   15547:	ret    0x8
   1554a:	int3   
   1554b:	int3   
   1554c:	int3   
   1554d:	int3   
   1554e:	int3   
   1554f:	int3   
   15550:	mov    edi,edi
   15552:	push   ebp
   15553:	mov    ebp,esp
   15555:	push   ebx
   15556:	push   esi
   15557:	push   edi
   15558:	mov    edi,DWORD PTR [ebp+0x8]
   1555b:	mov    ebx,ecx
   1555d:	mov    esi,edi
   1555f:	cmp    edi,DWORD PTR ds:0x7f6dc
   15565:	je     0x1558d
   15567:	push   DWORD PTR [esi+0x8]
   1556a:	mov    ecx,ebx
   1556c:	call   0x15550
   15571:	mov    esi,DWORD PTR [esi]
   15573:	lea    eax,[edi+0x10]
   15576:	push   eax
   15577:	call   0x13a86
   1557c:	push   edi
   1557d:	call   0x1da40
   15582:	pop    ecx
   15583:	mov    edi,esi
   15585:	cmp    esi,DWORD PTR ds:0x7f6dc
   1558b:	jne    0x15567
   1558d:	pop    edi
   1558e:	pop    esi
   1558f:	pop    ebx
   15590:	pop    ebp
   15591:	ret    0x4
   15594:	int3   
   15595:	int3   
   15596:	int3   
   15597:	int3   
   15598:	int3   
   15599:	int3   
   1559a:	mov    edi,edi
   1559c:	push   ebp
   1559d:	mov    ebp,esp
   1559f:	push   ebx
   155a0:	push   esi
   155a1:	mov    esi,DWORD PTR [ebp+0x10]
   155a4:	push   edi
   155a5:	push   0x0
   155a7:	push   esi
   155a8:	mov    edi,ecx
   155aa:	call   0x13950
   155af:	push   DWORD PTR [ebp+0x14]
   155b2:	mov    ebx,eax
   155b4:	mov    eax,ds:0x7f6dc
   155b9:	mov    DWORD PTR [ebx],eax
   155bb:	mov    eax,ds:0x7f6dc
   155c0:	mov    DWORD PTR [ebx+0x8],eax
   155c3:	lea    eax,[ebx+0x10]
   155c6:	push   eax
   155c7:	call   0x13a9e
   155cc:	inc    DWORD PTR [edi+0xc]
   155cf:	cmp    esi,DWORD PTR [edi+0x4]
   155d2:	je     0x155fc
   155d4:	mov    eax,DWORD PTR [ebp+0xc]
   155d7:	cmp    eax,DWORD PTR ds:0x7f6dc
   155dd:	jne    0x155fc
   155df:	lea    eax,[esi+0x10]
   155e2:	push   eax
   155e3:	push   DWORD PTR [ebp+0x14]
   155e6:	call   0x197ae
   155eb:	test   al,al
   155ed:	jne    0x155fc
   155ef:	mov    DWORD PTR [esi+0x8],ebx
   155f2:	mov    eax,DWORD PTR [edi+0x4]
   155f5:	cmp    esi,DWORD PTR [eax+0x8]
   155f8:	jne    0x15616
   155fa:	jmp    0x1560b
   155fc:	mov    DWORD PTR [esi],ebx
   155fe:	mov    eax,DWORD PTR [edi+0x4]
   15601:	cmp    esi,eax
   15603:	jne    0x15610
   15605:	mov    DWORD PTR [eax+0x4],ebx
   15608:	mov    eax,DWORD PTR [edi+0x4]
   1560b:	mov    DWORD PTR [eax+0x8],ebx
   1560e:	jmp    0x15616
   15610:	cmp    esi,DWORD PTR [eax]
   15612:	jne    0x15616
   15614:	mov    DWORD PTR [eax],ebx
   15616:	mov    eax,DWORD PTR [edi+0x4]
   15619:	mov    esi,ebx
   1561b:	cmp    ebx,DWORD PTR [eax+0x4]
   1561e:	je     0x156d2
   15624:	mov    eax,DWORD PTR [esi+0x4]
   15627:	xor    edx,edx
   15629:	cmp    DWORD PTR [eax+0x68],edx
   1562c:	jne    0x156d2
   15632:	mov    ecx,DWORD PTR [eax+0x4]
   15635:	cmp    eax,DWORD PTR [ecx]
   15637:	jne    0x15673
   15639:	mov    ecx,DWORD PTR [ecx+0x8]
   1563c:	cmp    DWORD PTR [ecx+0x68],edx
   1563f:	je     0x1567a
   15641:	cmp    esi,DWORD PTR [eax+0x8]
   15644:	jne    0x15650
   15646:	mov    esi,eax
   15648:	push   esi
   15649:	mov    ecx,edi
   1564b:	call   0x11326
   15650:	mov    eax,DWORD PTR [esi+0x4]
   15653:	mov    DWORD PTR [eax+0x68],0x1
   1565a:	mov    eax,DWORD PTR [esi+0x4]
   1565d:	mov    eax,DWORD PTR [eax+0x4]
   15660:	and    DWORD PTR [eax+0x68],0x0
   15664:	mov    eax,DWORD PTR [esi+0x4]
   15667:	push   DWORD PTR [eax+0x4]
   1566a:	mov    ecx,edi
   1566c:	call   0x11396
   15671:	jmp    0x156c6
   15673:	mov    ecx,DWORD PTR [ecx]
   15675:	cmp    DWORD PTR [ecx+0x68],edx
   15678:	jne    0x15697
   1567a:	mov    edx,eax
   1567c:	xor    eax,eax
   1567e:	inc    eax
   1567f:	mov    DWORD PTR [edx+0x68],eax
   15682:	mov    DWORD PTR [ecx+0x68],eax
   15685:	mov    eax,DWORD PTR [esi+0x4]
   15688:	mov    eax,DWORD PTR [eax+0x4]
   1568b:	and    DWORD PTR [eax+0x68],0x0
   1568f:	mov    eax,DWORD PTR [esi+0x4]
   15692:	mov    esi,DWORD PTR [eax+0x4]
   15695:	jmp    0x156c6
   15697:	cmp    esi,DWORD PTR [eax]
   15699:	jne    0x156a5
   1569b:	mov    esi,eax
   1569d:	push   esi
   1569e:	mov    ecx,edi
   156a0:	call   0x11396
   156a5:	mov    eax,DWORD PTR [esi+0x4]
   156a8:	mov    DWORD PTR [eax+0x68],0x1
   156af:	mov    eax,DWORD PTR [esi+0x4]
   156b2:	mov    eax,DWORD PTR [eax+0x4]
   156b5:	and    DWORD PTR [eax+0x68],0x0
   156b9:	mov    eax,DWORD PTR [esi+0x4]
   156bc:	push   DWORD PTR [eax+0x4]
   156bf:	mov    ecx,edi
   156c1:	call   0x11326
   156c6:	mov    eax,DWORD PTR [edi+0x4]
   156c9:	cmp    esi,DWORD PTR [eax+0x4]
   156cc:	jne    0x15624
   156d2:	mov    eax,DWORD PTR [edi+0x4]
   156d5:	mov    eax,DWORD PTR [eax+0x4]
   156d8:	pop    edi
   156d9:	mov    DWORD PTR [eax+0x68],0x1
   156e0:	mov    eax,DWORD PTR [ebp+0x8]
   156e3:	pop    esi
   156e4:	mov    DWORD PTR [eax],ebx
   156e6:	pop    ebx
   156e7:	pop    ebp
   156e8:	ret    0x10
   156eb:	int3   
   156ec:	int3   
   156ed:	int3   
   156ee:	int3   
   156ef:	int3   
   156f0:	mov    edi,edi
   156f2:	push   ebp
   156f3:	mov    ebp,esp
   156f5:	push   ebx
   156f6:	push   esi
   156f7:	mov    esi,DWORD PTR [ebp+0x10]
   156fa:	push   edi
   156fb:	push   0x0
   156fd:	push   esi
   156fe:	mov    edi,ecx
   15700:	call   0x139bc
   15705:	push   DWORD PTR [ebp+0x14]
   15708:	mov    ebx,eax
   1570a:	mov    eax,ds:0x7f6e0
   1570f:	mov    DWORD PTR [ebx],eax
   15711:	mov    eax,ds:0x7f6e0
   15716:	mov    DWORD PTR [ebx+0x8],eax
   15719:	lea    eax,[ebx+0xc]
   1571c:	push   eax
   1571d:	call   0x13abc
   15722:	inc    DWORD PTR [edi+0xc]
   15725:	cmp    esi,DWORD PTR [edi+0x4]
   15728:	je     0x15752
   1572a:	mov    eax,DWORD PTR [ebp+0xc]
   1572d:	cmp    eax,DWORD PTR ds:0x7f6e0
   15733:	jne    0x15752
   15735:	lea    eax,[esi+0xc]
   15738:	push   eax
   15739:	push   DWORD PTR [ebp+0x14]
   1573c:	call   0x197ae
   15741:	test   al,al
   15743:	jne    0x15752
   15745:	mov    DWORD PTR [esi+0x8],ebx
   15748:	mov    eax,DWORD PTR [edi+0x4]
   1574b:	cmp    esi,DWORD PTR [eax+0x8]
   1574e:	jne    0x1576c
   15750:	jmp    0x15761
   15752:	mov    DWORD PTR [esi],ebx
   15754:	mov    eax,DWORD PTR [edi+0x4]
   15757:	cmp    esi,eax
   15759:	jne    0x15766
   1575b:	mov    DWORD PTR [eax+0x4],ebx
   1575e:	mov    eax,DWORD PTR [edi+0x4]
   15761:	mov    DWORD PTR [eax+0x8],ebx
   15764:	jmp    0x1576c
   15766:	cmp    esi,DWORD PTR [eax]
   15768:	jne    0x1576c
   1576a:	mov    DWORD PTR [eax],ebx
   1576c:	mov    eax,DWORD PTR [edi+0x4]
   1576f:	mov    esi,ebx
   15771:	cmp    ebx,DWORD PTR [eax+0x4]
   15774:	je     0x15828
   1577a:	mov    eax,DWORD PTR [esi+0x4]
   1577d:	xor    edx,edx
   1577f:	cmp    DWORD PTR [eax+0x1c],edx
   15782:	jne    0x15828
   15788:	mov    ecx,DWORD PTR [eax+0x4]
   1578b:	cmp    eax,DWORD PTR [ecx]
   1578d:	jne    0x157c9
   1578f:	mov    ecx,DWORD PTR [ecx+0x8]
   15792:	cmp    DWORD PTR [ecx+0x1c],edx
   15795:	je     0x157d0
   15797:	cmp    esi,DWORD PTR [eax+0x8]
   1579a:	jne    0x157a6
   1579c:	mov    esi,eax
   1579e:	push   esi
   1579f:	mov    ecx,edi
   157a1:	call   0x1312c
   157a6:	mov    eax,DWORD PTR [esi+0x4]
   157a9:	mov    DWORD PTR [eax+0x1c],0x1
   157b0:	mov    eax,DWORD PTR [esi+0x4]
   157b3:	mov    eax,DWORD PTR [eax+0x4]
   157b6:	and    DWORD PTR [eax+0x1c],0x0
   157ba:	mov    eax,DWORD PTR [esi+0x4]
   157bd:	push   DWORD PTR [eax+0x4]
   157c0:	mov    ecx,edi
   157c2:	call   0x1317a
   157c7:	jmp    0x1581c
   157c9:	mov    ecx,DWORD PTR [ecx]
   157cb:	cmp    DWORD PTR [ecx+0x1c],edx
   157ce:	jne    0x157ed
   157d0:	mov    edx,eax
   157d2:	xor    eax,eax
   157d4:	inc    eax
   157d5:	mov    DWORD PTR [edx+0x1c],eax
   157d8:	mov    DWORD PTR [ecx+0x1c],eax
   157db:	mov    eax,DWORD PTR [esi+0x4]
   157de:	mov    eax,DWORD PTR [eax+0x4]
   157e1:	and    DWORD PTR [eax+0x1c],0x0
   157e5:	mov    eax,DWORD PTR [esi+0x4]
   157e8:	mov    esi,DWORD PTR [eax+0x4]
   157eb:	jmp    0x1581c
   157ed:	cmp    esi,DWORD PTR [eax]
   157ef:	jne    0x157fb
   157f1:	mov    esi,eax
   157f3:	push   esi
   157f4:	mov    ecx,edi
   157f6:	call   0x1317a
   157fb:	mov    eax,DWORD PTR [esi+0x4]
   157fe:	mov    DWORD PTR [eax+0x1c],0x1
   15805:	mov    eax,DWORD PTR [esi+0x4]
   15808:	mov    eax,DWORD PTR [eax+0x4]
   1580b:	and    DWORD PTR [eax+0x1c],0x0
   1580f:	mov    eax,DWORD PTR [esi+0x4]
   15812:	push   DWORD PTR [eax+0x4]
   15815:	mov    ecx,edi
   15817:	call   0x1312c
   1581c:	mov    eax,DWORD PTR [edi+0x4]
   1581f:	cmp    esi,DWORD PTR [eax+0x4]
   15822:	jne    0x1577a
   15828:	mov    eax,DWORD PTR [edi+0x4]
   1582b:	mov    eax,DWORD PTR [eax+0x4]
   1582e:	pop    edi
   1582f:	mov    DWORD PTR [eax+0x1c],0x1
   15836:	mov    eax,DWORD PTR [ebp+0x8]
   15839:	pop    esi
   1583a:	mov    DWORD PTR [eax],ebx
   1583c:	pop    ebx
   1583d:	pop    ebp
   1583e:	ret    0x10
   15841:	int3   
   15842:	int3   
   15843:	int3   
   15844:	int3   
   15845:	int3   
   15846:	mov    edi,edi
   15848:	push   ebp
   15849:	mov    ebp,esp
   1584b:	push   ecx
   1584c:	push   ecx
   1584d:	push   ebx
   1584e:	push   esi
   1584f:	mov    DWORD PTR [ebp-0x4],ecx
   15852:	push   edi
   15853:	mov    edi,DWORD PTR [ebp+0xc]
   15856:	lea    ecx,[ebp+0xc]
   15859:	call   0x115a4
   1585e:	mov    esi,DWORD PTR [edi]
   15860:	mov    eax,ds:0x7f6e4
   15865:	mov    ebx,edi
   15867:	mov    DWORD PTR [ebp-0x8],esi
   1586a:	cmp    esi,eax
   1586c:	jne    0x1588a
   1586e:	mov    esi,DWORD PTR [edi+0x8]
   15871:	mov    eax,DWORD PTR [ebx+0x4]
   15874:	mov    ecx,DWORD PTR [ebp-0x4]
   15877:	mov    DWORD PTR [esi+0x4],eax
   1587a:	mov    eax,DWORD PTR [ecx+0x4]
   1587d:	cmp    DWORD PTR [eax+0x4],edi
   15880:	jne    0x158ff
   15882:	mov    DWORD PTR [eax+0x4],esi
   15885:	jmp    0x1590d
   1588a:	mov    ecx,DWORD PTR [edi+0x8]
   1588d:	cmp    ecx,eax
   1588f:	je     0x15871
   15891:	push   ecx
   15892:	call   0x114cc
   15897:	mov    ebx,eax
   15899:	mov    esi,DWORD PTR [ebx+0x8]
   1589c:	cmp    ebx,edi
   1589e:	je     0x15871
   158a0:	mov    eax,DWORD PTR [ebp-0x8]
   158a3:	mov    DWORD PTR [eax+0x4],ebx
   158a6:	mov    eax,DWORD PTR [edi]
   158a8:	mov    DWORD PTR [ebx],eax
   158aa:	cmp    ebx,DWORD PTR [edi+0x8]
   158ad:	jne    0x158b4
   158af:	mov    DWORD PTR [esi+0x4],ebx
   158b2:	jmp    0x158cb
   158b4:	mov    eax,DWORD PTR [ebx+0x4]
   158b7:	mov    DWORD PTR [esi+0x4],eax
   158ba:	mov    eax,DWORD PTR [ebx+0x4]
   158bd:	mov    DWORD PTR [eax],esi
   158bf:	mov    eax,DWORD PTR [edi+0x8]
   158c2:	mov    DWORD PTR [ebx+0x8],eax
   158c5:	mov    eax,DWORD PTR [edi+0x8]
   158c8:	mov    DWORD PTR [eax+0x4],ebx
   158cb:	mov    eax,DWORD PTR [ebp-0x4]
   158ce:	mov    eax,DWORD PTR [eax+0x4]
   158d1:	cmp    DWORD PTR [eax+0x4],edi
   158d4:	jne    0x158db
   158d6:	mov    DWORD PTR [eax+0x4],ebx
   158d9:	jmp    0x158e9
   158db:	mov    eax,DWORD PTR [edi+0x4]
   158de:	cmp    DWORD PTR [eax],edi
   158e0:	jne    0x158e6
   158e2:	mov    DWORD PTR [eax],ebx
   158e4:	jmp    0x158e9
   158e6:	mov    DWORD PTR [eax+0x8],ebx
   158e9:	mov    eax,DWORD PTR [edi+0x4]
   158ec:	mov    DWORD PTR [ebx+0x4],eax
   158ef:	mov    eax,DWORD PTR [ebx+0x14]
   158f2:	mov    ecx,DWORD PTR [edi+0x14]
   158f5:	mov    DWORD PTR [ebx+0x14],ecx
   158f8:	mov    DWORD PTR [edi+0x14],eax
   158fb:	mov    ebx,edi
   158fd:	jmp    0x15960
   158ff:	mov    eax,DWORD PTR [edi+0x4]
   15902:	cmp    DWORD PTR [eax],edi
   15904:	jne    0x1590a
   15906:	mov    DWORD PTR [eax],esi
   15908:	jmp    0x1590d
   1590a:	mov    DWORD PTR [eax+0x8],esi
   1590d:	mov    eax,DWORD PTR [ecx+0x4]
   15910:	mov    DWORD PTR [ebp-0x8],eax
   15913:	cmp    DWORD PTR [eax],edi
   15915:	jne    0x15937
   15917:	mov    edx,DWORD PTR [edi+0x8]
   1591a:	cmp    edx,DWORD PTR ds:0x7f6e4
   15920:	jne    0x15929
   15922:	mov    edx,DWORD PTR [edi+0x4]
   15925:	mov    DWORD PTR [eax],edx
   15927:	jmp    0x15937
   15929:	push   esi
   1592a:	call   0x114cc
   1592f:	mov    ecx,DWORD PTR [ebp-0x8]
   15932:	mov    DWORD PTR [ecx],eax
   15934:	mov    ecx,DWORD PTR [ebp-0x4]
   15937:	mov    eax,DWORD PTR [ecx+0x4]
   1593a:	mov    DWORD PTR [ebp-0x8],eax
   1593d:	cmp    DWORD PTR [eax+0x8],edi
   15940:	jne    0x15960
   15942:	mov    ecx,DWORD PTR [edi]
   15944:	cmp    ecx,DWORD PTR ds:0x7f6e4
   1594a:	jne    0x15954
   1594c:	mov    ecx,DWORD PTR [edi+0x4]
   1594f:	mov    DWORD PTR [eax+0x8],ecx
   15952:	jmp    0x15960
   15954:	push   esi
   15955:	call   0x114aa
   1595a:	mov    ecx,DWORD PTR [ebp-0x8]
   1595d:	mov    DWORD PTR [ecx+0x8],eax
   15960:	xor    edi,edi
   15962:	inc    edi
   15963:	cmp    DWORD PTR [ebx+0x14],edi
   15966:	jne    0x15a7d
   1596c:	jmp    0x15a2b
   15971:	cmp    DWORD PTR [esi+0x14],edi
   15974:	jne    0x15a7a
   1597a:	mov    eax,DWORD PTR [esi+0x4]
   1597d:	cmp    esi,DWORD PTR [eax]
   1597f:	jne    0x159f6
   15981:	mov    eax,DWORD PTR [eax+0x8]
   15984:	cmp    DWORD PTR [eax+0x14],0x0
   15988:	jne    0x159a2
   1598a:	mov    DWORD PTR [eax+0x14],edi
   1598d:	mov    eax,DWORD PTR [esi+0x4]
   15990:	and    DWORD PTR [eax+0x14],0x0
   15994:	push   DWORD PTR [esi+0x4]
   15997:	call   0x1320a
   1599c:	mov    eax,DWORD PTR [esi+0x4]
   1599f:	mov    eax,DWORD PTR [eax+0x8]
   159a2:	mov    ecx,DWORD PTR [eax]
   159a4:	cmp    DWORD PTR [ecx+0x14],edi
   159a7:	jne    0x159b1
   159a9:	mov    ecx,DWORD PTR [eax+0x8]
   159ac:	cmp    DWORD PTR [ecx+0x14],edi
   159af:	je     0x15a24
   159b1:	mov    ecx,DWORD PTR [eax+0x8]
   159b4:	cmp    DWORD PTR [ecx+0x14],edi
   159b7:	jne    0x159d1
   159b9:	mov    ecx,DWORD PTR [eax]
   159bb:	mov    DWORD PTR [ecx+0x14],edi
   159be:	mov    ecx,DWORD PTR [ebp-0x4]
   159c1:	and    DWORD PTR [eax+0x14],0x0
   159c5:	push   eax
   159c6:	call   0x13258
   159cb:	mov    eax,DWORD PTR [esi+0x4]
   159ce:	mov    eax,DWORD PTR [eax+0x8]
   159d1:	mov    ecx,DWORD PTR [esi+0x4]
   159d4:	mov    ecx,DWORD PTR [ecx+0x14]
   159d7:	mov    DWORD PTR [eax+0x14],ecx
   159da:	mov    ecx,DWORD PTR [esi+0x4]
   159dd:	mov    DWORD PTR [ecx+0x14],edi
   159e0:	mov    eax,DWORD PTR [eax+0x8]
   159e3:	mov    ecx,DWORD PTR [ebp-0x4]
   159e6:	mov    DWORD PTR [eax+0x14],edi
   159e9:	push   DWORD PTR [esi+0x4]
   159ec:	call   0x1320a
   159f1:	jmp    0x15a7a
   159f6:	mov    eax,DWORD PTR [eax]
   159f8:	cmp    DWORD PTR [eax+0x14],0x0
   159fc:	jne    0x15a15
   159fe:	mov    DWORD PTR [eax+0x14],edi
   15a01:	mov    eax,DWORD PTR [esi+0x4]
   15a04:	and    DWORD PTR [eax+0x14],0x0
   15a08:	push   DWORD PTR [esi+0x4]
   15a0b:	call   0x13258
   15a10:	mov    eax,DWORD PTR [esi+0x4]
   15a13:	mov    eax,DWORD PTR [eax]
   15a15:	mov    ecx,DWORD PTR [eax+0x8]
   15a18:	cmp    DWORD PTR [ecx+0x14],edi
   15a1b:	jne    0x15a3c
   15a1d:	mov    ecx,DWORD PTR [eax]
   15a1f:	cmp    DWORD PTR [ecx+0x14],edi
   15a22:	jne    0x15a3c
   15a24:	and    DWORD PTR [eax+0x14],0x0
   15a28:	mov    esi,DWORD PTR [esi+0x4]
   15a2b:	mov    ecx,DWORD PTR [ebp-0x4]
   15a2e:	mov    eax,DWORD PTR [ecx+0x4]
   15a31:	cmp    esi,DWORD PTR [eax+0x4]
   15a34:	jne    0x15971
   15a3a:	jmp    0x15a7a
   15a3c:	mov    ecx,DWORD PTR [eax]
   15a3e:	cmp    DWORD PTR [ecx+0x14],edi
   15a41:	jne    0x15a5b
   15a43:	mov    ecx,DWORD PTR [eax+0x8]
   15a46:	mov    DWORD PTR [ecx+0x14],edi
   15a49:	mov    ecx,DWORD PTR [ebp-0x4]
   15a4c:	and    DWORD PTR [eax+0x14],0x0
   15a50:	push   eax
   15a51:	call   0x1320a
   15a56:	mov    eax,DWORD PTR [esi+0x4]
   15a59:	mov    eax,DWORD PTR [eax]
   15a5b:	mov    ecx,DWORD PTR [esi+0x4]
   15a5e:	mov    ecx,DWORD PTR [ecx+0x14]
   15a61:	mov    DWORD PTR [eax+0x14],ecx
   15a64:	mov    ecx,DWORD PTR [esi+0x4]
   15a67:	mov    DWORD PTR [ecx+0x14],edi
   15a6a:	mov    eax,DWORD PTR [eax]
   15a6c:	mov    ecx,DWORD PTR [ebp-0x4]
   15a6f:	mov    DWORD PTR [eax+0x14],edi
   15a72:	push   DWORD PTR [esi+0x4]
   15a75:	call   0x13258
   15a7a:	mov    DWORD PTR [esi+0x14],edi
   15a7d:	lea    eax,[ebx+0xc]
   15a80:	push   eax
   15a81:	call   0x13af8
   15a86:	push   ebx
   15a87:	call   0x1da40
   15a8c:	mov    eax,DWORD PTR [ebp-0x4]
   15a8f:	dec    DWORD PTR [eax+0xc]
   15a92:	mov    eax,DWORD PTR [ebp+0x8]
   15a95:	pop    ecx
   15a96:	mov    ecx,DWORD PTR [ebp+0xc]
   15a99:	pop    edi
   15a9a:	pop    esi
   15a9b:	mov    DWORD PTR [eax],ecx
   15a9d:	pop    ebx
   15a9e:	leave  
   15a9f:	ret    0x8
   15aa2:	int3   
   15aa3:	int3   
   15aa4:	int3   
   15aa5:	int3   
   15aa6:	int3   
   15aa7:	int3   
   15aa8:	mov    edi,edi
   15aaa:	push   ebp
   15aab:	mov    ebp,esp
   15aad:	push   ebx
   15aae:	push   esi
   15aaf:	push   edi
   15ab0:	mov    edi,DWORD PTR [ebp+0x8]
   15ab3:	mov    ebx,ecx
   15ab5:	mov    esi,edi
   15ab7:	cmp    edi,DWORD PTR ds:0x7f6e4
   15abd:	je     0x15ae5
   15abf:	push   DWORD PTR [esi+0x8]
   15ac2:	mov    ecx,ebx
   15ac4:	call   0x15aa8
   15ac9:	mov    esi,DWORD PTR [esi]
   15acb:	lea    eax,[edi+0xc]
   15ace:	push   eax
   15acf:	call   0x13af8
   15ad4:	push   edi
   15ad5:	call   0x1da40
   15ada:	pop    ecx
   15adb:	mov    edi,esi
   15add:	cmp    esi,DWORD PTR ds:0x7f6e4
   15ae3:	jne    0x15abf
   15ae5:	pop    edi
   15ae6:	pop    esi
   15ae7:	pop    ebx
   15ae8:	pop    ebp
   15ae9:	ret    0x4
   15aec:	int3   
   15aed:	int3   
   15aee:	int3   
   15aef:	int3   
   15af0:	int3   
   15af1:	int3   
   15af2:	mov    edi,edi
   15af4:	push   ebp
   15af5:	mov    ebp,esp
   15af7:	push   ebx
   15af8:	push   esi
   15af9:	mov    esi,DWORD PTR [ebp+0x10]
   15afc:	push   edi
   15afd:	push   0x0
   15aff:	push   esi
   15b00:	mov    edi,ecx
   15b02:	call   0x1392c
   15b07:	push   DWORD PTR [ebp+0x14]
   15b0a:	mov    ebx,eax
   15b0c:	mov    eax,ds:0x7f6e4
   15b11:	mov    DWORD PTR [ebx],eax
   15b13:	mov    eax,ds:0x7f6e4
   15b18:	mov    DWORD PTR [ebx+0x8],eax
   15b1b:	lea    eax,[ebx+0xc]
   15b1e:	push   eax
   15b1f:	call   0x13ada
   15b24:	inc    DWORD PTR [edi+0xc]
   15b27:	cmp    esi,DWORD PTR [edi+0x4]
   15b2a:	je     0x15b4e
   15b2c:	mov    eax,DWORD PTR [ebp+0xc]
   15b2f:	cmp    eax,DWORD PTR ds:0x7f6e4
   15b35:	jne    0x15b4e
   15b37:	mov    eax,DWORD PTR [ebp+0x14]
   15b3a:	mov    eax,DWORD PTR [eax]
   15b3c:	cmp    eax,DWORD PTR [esi+0xc]
   15b3f:	jl     0x15b4e
   15b41:	mov    DWORD PTR [esi+0x8],ebx
   15b44:	mov    eax,DWORD PTR [edi+0x4]
   15b47:	cmp    esi,DWORD PTR [eax+0x8]
   15b4a:	jne    0x15b68
   15b4c:	jmp    0x15b5d
   15b4e:	mov    DWORD PTR [esi],ebx
   15b50:	mov    eax,DWORD PTR [edi+0x4]
   15b53:	cmp    esi,eax
   15b55:	jne    0x15b62
   15b57:	mov    DWORD PTR [eax+0x4],ebx
   15b5a:	mov    eax,DWORD PTR [edi+0x4]
   15b5d:	mov    DWORD PTR [eax+0x8],ebx
   15b60:	jmp    0x15b68
   15b62:	cmp    esi,DWORD PTR [eax]
   15b64:	jne    0x15b68
   15b66:	mov    DWORD PTR [eax],ebx
   15b68:	mov    eax,DWORD PTR [edi+0x4]
   15b6b:	mov    esi,ebx
   15b6d:	cmp    ebx,DWORD PTR [eax+0x4]
   15b70:	je     0x15c24
   15b76:	mov    eax,DWORD PTR [esi+0x4]
   15b79:	xor    edx,edx
   15b7b:	cmp    DWORD PTR [eax+0x14],edx
   15b7e:	jne    0x15c24
   15b84:	mov    ecx,DWORD PTR [eax+0x4]
   15b87:	cmp    eax,DWORD PTR [ecx]
   15b89:	jne    0x15bc5
   15b8b:	mov    ecx,DWORD PTR [ecx+0x8]
   15b8e:	cmp    DWORD PTR [ecx+0x14],edx
   15b91:	je     0x15bcc
   15b93:	cmp    esi,DWORD PTR [eax+0x8]
   15b96:	jne    0x15ba2
   15b98:	mov    esi,eax
   15b9a:	push   esi
   15b9b:	mov    ecx,edi
   15b9d:	call   0x1320a
   15ba2:	mov    eax,DWORD PTR [esi+0x4]
   15ba5:	mov    DWORD PTR [eax+0x14],0x1
   15bac:	mov    eax,DWORD PTR [esi+0x4]
   15baf:	mov    eax,DWORD PTR [eax+0x4]
   15bb2:	and    DWORD PTR [eax+0x14],0x0
   15bb6:	mov    eax,DWORD PTR [esi+0x4]
   15bb9:	push   DWORD PTR [eax+0x4]
   15bbc:	mov    ecx,edi
   15bbe:	call   0x13258
   15bc3:	jmp    0x15c18
   15bc5:	mov    ecx,DWORD PTR [ecx]
   15bc7:	cmp    DWORD PTR [ecx+0x14],edx
   15bca:	jne    0x15be9
   15bcc:	mov    edx,eax
   15bce:	xor    eax,eax
   15bd0:	inc    eax
   15bd1:	mov    DWORD PTR [edx+0x14],eax
   15bd4:	mov    DWORD PTR [ecx+0x14],eax
   15bd7:	mov    eax,DWORD PTR [esi+0x4]
   15bda:	mov    eax,DWORD PTR [eax+0x4]
   15bdd:	and    DWORD PTR [eax+0x14],0x0
   15be1:	mov    eax,DWORD PTR [esi+0x4]
   15be4:	mov    esi,DWORD PTR [eax+0x4]
   15be7:	jmp    0x15c18
   15be9:	cmp    esi,DWORD PTR [eax]
   15beb:	jne    0x15bf7
   15bed:	mov    esi,eax
   15bef:	push   esi
   15bf0:	mov    ecx,edi
   15bf2:	call   0x13258
   15bf7:	mov    eax,DWORD PTR [esi+0x4]
   15bfa:	mov    DWORD PTR [eax+0x14],0x1
   15c01:	mov    eax,DWORD PTR [esi+0x4]
   15c04:	mov    eax,DWORD PTR [eax+0x4]
   15c07:	and    DWORD PTR [eax+0x14],0x0
   15c0b:	mov    eax,DWORD PTR [esi+0x4]
   15c0e:	push   DWORD PTR [eax+0x4]
   15c11:	mov    ecx,edi
   15c13:	call   0x1320a
   15c18:	mov    eax,DWORD PTR [edi+0x4]
   15c1b:	cmp    esi,DWORD PTR [eax+0x4]
   15c1e:	jne    0x15b76
   15c24:	mov    eax,DWORD PTR [edi+0x4]
   15c27:	mov    eax,DWORD PTR [eax+0x4]
   15c2a:	pop    edi
   15c2b:	mov    DWORD PTR [eax+0x14],0x1
   15c32:	mov    eax,DWORD PTR [ebp+0x8]
   15c35:	pop    esi
   15c36:	mov    DWORD PTR [eax],ebx
   15c38:	pop    ebx
   15c39:	pop    ebp
   15c3a:	ret    0x10
   15c3d:	int3   
   15c3e:	int3   
   15c3f:	int3   
   15c40:	int3   
   15c41:	int3   
   15c42:	mov    edi,edi
   15c44:	push   ebp
   15c45:	mov    ebp,esp
   15c47:	push   ebx
   15c48:	push   esi
   15c49:	mov    esi,DWORD PTR [ebp+0x10]
   15c4c:	push   edi
   15c4d:	push   0x0
   15c4f:	push   esi
   15c50:	mov    edi,ecx
   15c52:	call   0x139bc
   15c57:	push   DWORD PTR [ebp+0x14]
   15c5a:	mov    ebx,eax
   15c5c:	mov    eax,ds:0x7f6ec
   15c61:	mov    DWORD PTR [ebx],eax
   15c63:	mov    eax,ds:0x7f6ec
   15c68:	mov    DWORD PTR [ebx+0x8],eax
   15c6b:	lea    eax,[ebx+0xc]
   15c6e:	push   eax
   15c6f:	call   0x13b10
   15c74:	inc    DWORD PTR [edi+0xc]
   15c77:	cmp    esi,DWORD PTR [edi+0x4]
   15c7a:	je     0x15ca4
   15c7c:	mov    eax,DWORD PTR [ebp+0xc]
   15c7f:	cmp    eax,DWORD PTR ds:0x7f6ec
   15c85:	jne    0x15ca4
   15c87:	lea    eax,[esi+0xc]
   15c8a:	push   eax
   15c8b:	push   DWORD PTR [ebp+0x14]
   15c8e:	call   0x197de
   15c93:	test   al,al
   15c95:	jne    0x15ca4
   15c97:	mov    DWORD PTR [esi+0x8],ebx
   15c9a:	mov    eax,DWORD PTR [edi+0x4]
   15c9d:	cmp    esi,DWORD PTR [eax+0x8]
   15ca0:	jne    0x15cbe
   15ca2:	jmp    0x15cb3
   15ca4:	mov    DWORD PTR [esi],ebx
   15ca6:	mov    eax,DWORD PTR [edi+0x4]
   15ca9:	cmp    esi,eax
   15cab:	jne    0x15cb8
   15cad:	mov    DWORD PTR [eax+0x4],ebx
   15cb0:	mov    eax,DWORD PTR [edi+0x4]
   15cb3:	mov    DWORD PTR [eax+0x8],ebx
   15cb6:	jmp    0x15cbe
   15cb8:	cmp    esi,DWORD PTR [eax]
   15cba:	jne    0x15cbe
   15cbc:	mov    DWORD PTR [eax],ebx
   15cbe:	mov    eax,DWORD PTR [edi+0x4]
   15cc1:	mov    esi,ebx
   15cc3:	cmp    ebx,DWORD PTR [eax+0x4]
   15cc6:	je     0x15d7a
   15ccc:	mov    eax,DWORD PTR [esi+0x4]
   15ccf:	xor    edx,edx
   15cd1:	cmp    DWORD PTR [eax+0x1c],edx
   15cd4:	jne    0x15d7a
   15cda:	mov    ecx,DWORD PTR [eax+0x4]
   15cdd:	cmp    eax,DWORD PTR [ecx]
   15cdf:	jne    0x15d1b
   15ce1:	mov    ecx,DWORD PTR [ecx+0x8]
   15ce4:	cmp    DWORD PTR [ecx+0x1c],edx
   15ce7:	je     0x15d22
   15ce9:	cmp    esi,DWORD PTR [eax+0x8]
   15cec:	jne    0x15cf8
   15cee:	mov    esi,eax
   15cf0:	push   esi
   15cf1:	mov    ecx,edi
   15cf3:	call   0x13320
   15cf8:	mov    eax,DWORD PTR [esi+0x4]
   15cfb:	mov    DWORD PTR [eax+0x1c],0x1
   15d02:	mov    eax,DWORD PTR [esi+0x4]
   15d05:	mov    eax,DWORD PTR [eax+0x4]
   15d08:	and    DWORD PTR [eax+0x1c],0x0
   15d0c:	mov    eax,DWORD PTR [esi+0x4]
   15d0f:	push   DWORD PTR [eax+0x4]
   15d12:	mov    ecx,edi
   15d14:	call   0x1336e
   15d19:	jmp    0x15d6e
   15d1b:	mov    ecx,DWORD PTR [ecx]
   15d1d:	cmp    DWORD PTR [ecx+0x1c],edx
   15d20:	jne    0x15d3f
   15d22:	mov    edx,eax
   15d24:	xor    eax,eax
   15d26:	inc    eax
   15d27:	mov    DWORD PTR [edx+0x1c],eax
   15d2a:	mov    DWORD PTR [ecx+0x1c],eax
   15d2d:	mov    eax,DWORD PTR [esi+0x4]
   15d30:	mov    eax,DWORD PTR [eax+0x4]
   15d33:	and    DWORD PTR [eax+0x1c],0x0
   15d37:	mov    eax,DWORD PTR [esi+0x4]
   15d3a:	mov    esi,DWORD PTR [eax+0x4]
   15d3d:	jmp    0x15d6e
   15d3f:	cmp    esi,DWORD PTR [eax]
   15d41:	jne    0x15d4d
   15d43:	mov    esi,eax
   15d45:	push   esi
   15d46:	mov    ecx,edi
   15d48:	call   0x1336e
   15d4d:	mov    eax,DWORD PTR [esi+0x4]
   15d50:	mov    DWORD PTR [eax+0x1c],0x1
   15d57:	mov    eax,DWORD PTR [esi+0x4]
   15d5a:	mov    eax,DWORD PTR [eax+0x4]
   15d5d:	and    DWORD PTR [eax+0x1c],0x0
   15d61:	mov    eax,DWORD PTR [esi+0x4]
   15d64:	push   DWORD PTR [eax+0x4]
   15d67:	mov    ecx,edi
   15d69:	call   0x13320
   15d6e:	mov    eax,DWORD PTR [edi+0x4]
   15d71:	cmp    esi,DWORD PTR [eax+0x4]
   15d74:	jne    0x15ccc
   15d7a:	mov    eax,DWORD PTR [edi+0x4]
   15d7d:	mov    eax,DWORD PTR [eax+0x4]
   15d80:	pop    edi
   15d81:	mov    DWORD PTR [eax+0x1c],0x1
   15d88:	mov    eax,DWORD PTR [ebp+0x8]
   15d8b:	pop    esi
   15d8c:	mov    DWORD PTR [eax],ebx
   15d8e:	pop    ebx
   15d8f:	pop    ebp
   15d90:	ret    0x10
   15d93:	int3   
   15d94:	int3   
   15d95:	int3   
   15d96:	int3   
   15d97:	int3   
   15d98:	mov    edi,edi
   15d9a:	push   ebp
   15d9b:	mov    ebp,esp
   15d9d:	push   ecx
   15d9e:	push   DWORD PTR [ebp-0x4]
   15da1:	push   DWORD PTR [ebp+0x10]
   15da4:	push   DWORD PTR [ebp+0xc]
   15da7:	push   DWORD PTR [ebp+0x8]
   15daa:	call   0x14b68
   15daf:	add    esp,0x10
   15db2:	leave  
   15db3:	ret    
   15db4:	int3   
   15db5:	int3   
   15db6:	int3   
   15db7:	int3   
   15db8:	int3   
   15db9:	int3   
   15dba:	mov    edi,edi
   15dbc:	push   ebp
   15dbd:	mov    ebp,esp
   15dbf:	push   esi
   15dc0:	push   edi
   15dc1:	mov    edi,DWORD PTR [ebp+0x8]
   15dc4:	mov    al,BYTE PTR [edi+0x8]
   15dc7:	mov    esi,ecx
   15dc9:	mov    BYTE PTR [esi+0x8],al
   15dcc:	call   0x14494
   15dd1:	push   edi
   15dd2:	mov    ecx,esi
   15dd4:	call   0x14b06
   15dd9:	pop    edi
   15dda:	mov    eax,esi
   15ddc:	pop    esi
   15ddd:	pop    ebp
   15dde:	ret    0x4
   15de1:	int3   
   15de2:	int3   
   15de3:	int3   
   15de4:	int3   
   15de5:	int3   
   15de6:	mov    edi,edi
   15de8:	push   ebp
   15de9:	mov    ebp,esp
   15deb:	push   ecx
   15dec:	push   esi
   15ded:	mov    esi,ecx
   15def:	cmp    esi,DWORD PTR [ebp+0x8]
   15df2:	je     0x15e10
   15df4:	mov    eax,DWORD PTR [esi+0x4]
   15df7:	mov    ecx,DWORD PTR [eax]
   15df9:	push   eax
   15dfa:	push   ecx
   15dfb:	lea    eax,[ebp-0x4]
   15dfe:	push   eax
   15dff:	mov    ecx,esi
   15e01:	call   0x14d0e
   15e06:	push   DWORD PTR [ebp+0x8]
   15e09:	mov    ecx,esi
   15e0b:	call   0x14b06
   15e10:	mov    eax,esi
   15e12:	pop    esi
   15e13:	leave  
   15e14:	ret    0x4
   15e17:	int3   
   15e18:	int3   
   15e19:	int3   
   15e1a:	int3   
   15e1b:	int3   
   15e1c:	mov    edi,edi
   15e1e:	push   ebp
   15e1f:	mov    ebp,esp
   15e21:	push   ecx
   15e22:	push   ebx
   15e23:	push   esi
   15e24:	push   edi
   15e25:	xor    edi,edi
   15e27:	push   edi
   15e28:	push   edi
   15e29:	push   edi
   15e2a:	mov    esi,ecx
   15e2c:	mov    eax,DWORD PTR [esi+0x10]
   15e2f:	push   edi
   15e30:	push   eax
   15e31:	xor    ebx,ebx
   15e33:	call   DWORD PTR ds:0x1f028
   15e39:	test   eax,eax
   15e3b:	jge    0x15e41
   15e3d:	xor    eax,eax
   15e3f:	jmp    0x15e67
   15e41:	lea    eax,[ebp+0x8]
   15e44:	push   eax
   15e45:	lea    eax,[ebp-0x4]
   15e48:	push   eax
   15e49:	mov    ecx,esi
   15e4b:	call   0x13b9e
   15e50:	mov    eax,DWORD PTR [ebp-0x4]
   15e53:	cmp    eax,DWORD PTR [esi+0x4]
   15e56:	je     0x15e5b
   15e58:	mov    ebx,DWORD PTR [eax+0x10]
   15e5b:	push   edi
   15e5c:	push   DWORD PTR [esi+0x10]
   15e5f:	call   DWORD PTR ds:0x1f024
   15e65:	mov    eax,ebx
   15e67:	pop    edi
   15e68:	pop    esi
   15e69:	pop    ebx
   15e6a:	leave  
   15e6b:	ret    0x4
   15e6e:	int3   
   15e6f:	int3   
   15e70:	int3   
   15e71:	int3   
   15e72:	int3   
   15e73:	int3   
   15e74:	push   0x10
   15e76:	push   0x7de98
   15e7b:	call   0x1db0c
   15e80:	xor    ebx,ebx
   15e82:	push   ebx
   15e83:	push   ebx
   15e84:	push   ebx
   15e85:	push   ebx
   15e86:	push   0x7eb78
   15e8b:	call   DWORD PTR ds:0x1f028
   15e91:	cmp    eax,ebx
   15e93:	jl     0x15f50
   15e99:	mov    DWORD PTR [ebp-0x4],ebx
   15e9c:	push   0xffffffff
   15e9e:	push   0x1df3e
   15ea3:	lea    ecx,[ebp-0x20]
   15ea6:	call   0x110d4
   15eab:	mov    esi,DWORD PTR [ebp+0x8]
   15eae:	push   esi
   15eaf:	lea    eax,[ebp+0x8]
   15eb2:	push   eax
   15eb3:	mov    ecx,DWORD PTR ds:0x7eb48
   15eb9:	call   0x14b92
   15ebe:	mov    eax,ds:0x7eb48
   15ec3:	mov    eax,DWORD PTR [eax+0x4]
   15ec6:	mov    ecx,DWORD PTR [ebp+0x8]
   15ec9:	cmp    ecx,eax
   15ecb:	je     0x15ed9
   15ecd:	add    ecx,0x14
   15ed0:	push   ecx
   15ed1:	lea    ecx,[ebp-0x20]
   15ed4:	call   0x12970
   15ed9:	mov    edx,DWORD PTR [esi+0x4]
   15edc:	mov    eax,DWORD PTR [ebp-0x1c]
   15edf:	lea    ecx,[eax+edx*1+0x2]
   15ee3:	mov    eax,DWORD PTR [ebp+0xc]
   15ee6:	cmp    ecx,DWORD PTR [eax]
   15ee8:	jbe    0x15ef5
   15eea:	mov    DWORD PTR [eax],ecx
   15eec:	mov    DWORD PTR [eax+0x8],0x2
   15ef3:	jmp    0x15f18
   15ef5:	mov    DWORD PTR [eax+0x8],ebx
   15ef8:	mov    esi,DWORD PTR [esi]
   15efa:	lea    edi,[eax+0xc]
   15efd:	mov    cl,BYTE PTR [esi]
   15eff:	mov    BYTE PTR [edi],cl
   15f01:	inc    esi
   15f02:	inc    edi
   15f03:	cmp    cl,bl
   15f05:	jne    0x15efd
   15f07:	mov    esi,DWORD PTR [ebp-0x20]
   15f0a:	lea    eax,[edx+eax*1+0xd]
   15f0e:	mov    cl,BYTE PTR [esi]
   15f10:	mov    BYTE PTR [eax],cl
   15f12:	inc    esi
   15f13:	inc    eax
   15f14:	cmp    cl,bl
   15f16:	jne    0x15f0e
   15f18:	push   DWORD PTR [ebp-0x20]
   15f1b:	call   0x1da40
   15f20:	pop    ecx
   15f21:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f28:	jmp    0x15f44
   15f2a:	xor    eax,eax
   15f2c:	inc    eax
   15f2d:	ret    
   15f2e:	mov    esp,DWORD PTR [ebp-0x18]
   15f31:	mov    eax,DWORD PTR [ebp+0xc]
   15f34:	mov    DWORD PTR [eax+0x8],0x4
   15f3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f42:	xor    ebx,ebx
   15f44:	push   ebx
   15f45:	push   0x7eb78
   15f4a:	call   DWORD PTR ds:0x1f024
   15f50:	call   0x1db51
   15f55:	ret    0x8
   15f58:	int3   
   15f59:	int3   
   15f5a:	int3   
   15f5b:	int3   
   15f5c:	int3   
   15f5d:	int3   
   15f5e:	push   0xc
   15f60:	push   0x7deb8
   15f65:	call   0x1db0c
   15f6a:	xor    edi,edi
   15f6c:	push   edi
   15f6d:	push   edi
   15f6e:	push   edi
   15f6f:	push   edi
   15f70:	push   0x7eb78
   15f75:	call   DWORD PTR ds:0x1f028
   15f7b:	cmp    eax,edi
   15f7d:	jl     0x1602c
   15f83:	mov    DWORD PTR [ebp-0x4],edi
   15f86:	lea    eax,[ebp+0x8]
   15f89:	push   eax
   15f8a:	lea    eax,[ebp-0x1c]
   15f8d:	push   eax
   15f8e:	mov    esi,DWORD PTR ds:0x7ebd4
   15f94:	mov    ecx,esi
   15f96:	call   0x13c70
   15f9b:	mov    esi,DWORD PTR [esi+0x4]
   15f9e:	mov    ecx,DWORD PTR [ebp-0x1c]
   15fa1:	cmp    ecx,esi
   15fa3:	jne    0x15fb1
   15fa5:	mov    eax,DWORD PTR [ebp+0xc]
   15fa8:	mov    DWORD PTR [eax+0x8],0x1
   15faf:	jmp    0x15ffd
   15fb1:	mov    eax,DWORD PTR [ecx+0x10]
   15fb4:	cmp    eax,edi
   15fb6:	jne    0x15fbc
   15fb8:	xor    edx,edx
   15fba:	jmp    0x15fbf
   15fbc:	mov    edx,DWORD PTR [eax+0x8]
   15fbf:	mov    eax,DWORD PTR [ebp+0xc]
   15fc2:	cmp    edx,DWORD PTR [eax]
   15fc4:	jbe    0x15fd1
   15fc6:	mov    DWORD PTR [eax],edx
   15fc8:	mov    DWORD PTR [eax+0x8],0x2
   15fcf:	jmp    0x15ffd
   15fd1:	mov    DWORD PTR [eax+0x8],edi
   15fd4:	mov    edx,DWORD PTR [ecx+0x10]
   15fd7:	cmp    edx,edi
   15fd9:	jne    0x15fdf
   15fdb:	xor    edx,edx
   15fdd:	jmp    0x15fe2
   15fdf:	mov    edx,DWORD PTR [edx+0x8]
   15fe2:	mov    ecx,DWORD PTR [ecx+0x10]
   15fe5:	cmp    ecx,edi
   15fe7:	jne    0x15fed
   15fe9:	xor    ecx,ecx
   15feb:	jmp    0x15fef
   15fed:	mov    ecx,DWORD PTR [ecx]
   15fef:	push   edx
   15ff0:	push   ecx
   15ff1:	add    eax,0xc
   15ff4:	push   eax
   15ff5:	call   0x1dac2
   15ffa:	add    esp,0xc
   15ffd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16004:	jmp    0x16020
   16006:	xor    eax,eax
   16008:	inc    eax
   16009:	ret    
   1600a:	mov    esp,DWORD PTR [ebp-0x18]
   1600d:	mov    eax,DWORD PTR [ebp+0xc]
   16010:	mov    DWORD PTR [eax+0x8],0x4
   16017:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1601e:	xor    edi,edi
   16020:	push   edi
   16021:	push   0x7eb78
   16026:	call   DWORD PTR ds:0x1f024
   1602c:	call   0x1db51
   16031:	ret    0x8
   16034:	int3   
   16035:	int3   
   16036:	int3   
   16037:	int3   
   16038:	int3   
   16039:	int3   
   1603a:	mov    edi,edi
   1603c:	push   ebp
   1603d:	mov    ebp,esp
   1603f:	push   ebx
   16040:	push   esi
   16041:	push   DWORD PTR [ebp+0x8]
   16044:	mov    esi,ecx
   16046:	lea    eax,[ebp+0x8]
   16049:	push   eax
   1604a:	lea    ecx,[esi+0x4]
   1604d:	xor    bl,bl
   1604f:	call   0x13cd2
   16054:	mov    eax,DWORD PTR [ebp+0x8]
   16057:	cmp    eax,DWORD PTR [esi+0x8]
   1605a:	je     0x1606a
   1605c:	mov    ecx,DWORD PTR [ebp+0xc]
   1605f:	add    eax,0x18
   16062:	push   eax
   16063:	call   0x129fe
   16068:	inc    bl
   1606a:	pop    esi
   1606b:	mov    al,bl
   1606d:	pop    ebx
   1606e:	pop    ebp
   1606f:	ret    0x8
   16072:	int3   
   16073:	int3   
   16074:	int3   
   16075:	int3   
   16076:	int3   
   16077:	int3   
   16078:	mov    edi,edi
   1607a:	push   ebp
   1607b:	mov    ebp,esp
   1607d:	push   ecx
   1607e:	push   ecx
   1607f:	push   DWORD PTR [ebp+0xc]
   16082:	lea    eax,[ebp-0x8]
   16085:	push   eax
   16086:	call   0x14c76
   1608b:	mov    eax,DWORD PTR [ebp+0x8]
   1608e:	mov    ecx,DWORD PTR [ebp-0x8]
   16091:	mov    DWORD PTR [eax],ecx
   16093:	mov    cl,BYTE PTR [ebp-0x4]
   16096:	mov    BYTE PTR [eax+0x4],cl
   16099:	leave  
   1609a:	ret    0x8
   1609d:	int3   
   1609e:	int3   
   1609f:	int3   
   160a0:	int3   
   160a1:	int3   
   160a2:	mov    edi,edi
   160a4:	push   ebp
   160a5:	mov    ebp,esp
   160a7:	push   ecx
   160a8:	push   esi
   160a9:	mov    esi,ecx
   160ab:	mov    eax,DWORD PTR [esi+0x4]
   160ae:	mov    ecx,DWORD PTR [eax]
   160b0:	push   eax
   160b1:	push   ecx
   160b2:	lea    eax,[ebp-0x4]
   160b5:	push   eax
   160b6:	mov    ecx,esi
   160b8:	call   0x14d0e
   160bd:	push   DWORD PTR [esi+0x4]
   160c0:	call   0x1da40
   160c5:	xor    eax,eax
   160c7:	mov    DWORD PTR [esi+0x4],eax
   160ca:	mov    DWORD PTR [esi+0xc],eax
   160cd:	dec    DWORD PTR ds:0x7f830
   160d3:	pop    ecx
   160d4:	pop    esi
   160d5:	jne    0x160ed
   160d7:	mov    ecx,DWORD PTR ds:0x7f6d4
   160dd:	mov    ds:0x7f6d4,eax
   160e2:	cmp    ecx,eax
   160e4:	je     0x160ed
   160e6:	push   ecx
   160e7:	call   0x1da40
   160ec:	pop    ecx
   160ed:	leave  
   160ee:	ret    
   160ef:	int3   
   160f0:	int3   
   160f1:	int3   
   160f2:	int3   
   160f3:	int3   
   160f4:	mov    edi,edi
   160f6:	push   ebp
   160f7:	mov    ebp,esp
   160f9:	push   ecx
   160fa:	push   ecx
   160fb:	push   DWORD PTR [ebp+0xc]
   160fe:	lea    eax,[ebp-0x8]
   16101:	push   eax
   16102:	call   0x14dd6
   16107:	mov    eax,DWORD PTR [ebp+0x8]
   1610a:	mov    ecx,DWORD PTR [ebp-0x8]
   1610d:	mov    DWORD PTR [eax],ecx
   1610f:	mov    cl,BYTE PTR [ebp-0x4]
   16112:	mov    BYTE PTR [eax+0x4],cl
   16115:	leave  
   16116:	ret    0x8
   16119:	int3   
   1611a:	int3   
   1611b:	int3   
   1611c:	int3   
   1611d:	int3   
   1611e:	mov    edi,edi
   16120:	push   ebp
   16121:	mov    ebp,esp
   16123:	push   ecx
   16124:	push   ecx
   16125:	push   DWORD PTR [ebp+0x8]
   16128:	lea    eax,[ebp-0x8]
   1612b:	push   eax
   1612c:	call   0x14006
   16131:	and    DWORD PTR [ebp+0x8],0x0
   16135:	lea    eax,[ebp+0x8]
   16138:	push   eax
   16139:	push   DWORD PTR [ebp-0x4]
   1613c:	push   DWORD PTR [ebp-0x8]
   1613f:	call   0x15d98
   16144:	mov    eax,DWORD PTR [ebp+0x8]
   16147:	add    esp,0xc
   1614a:	leave  
   1614b:	ret    0x4
   1614e:	int3   
   1614f:	int3   
   16150:	int3   
   16151:	int3   
   16152:	int3   
   16153:	int3   
   16154:	mov    edi,edi
   16156:	push   ebp
   16157:	mov    ebp,esp
   16159:	push   ecx
   1615a:	push   ecx
   1615b:	push   esi
   1615c:	push   DWORD PTR [ebp+0x8]
   1615f:	lea    eax,[ebp-0x8]
   16162:	push   eax
   16163:	mov    esi,ecx
   16165:	call   0x1409a
   1616a:	and    DWORD PTR [ebp+0x8],0x0
   1616e:	lea    eax,[ebp+0x8]
   16171:	push   eax
   16172:	push   DWORD PTR [ebp-0x4]
   16175:	push   DWORD PTR [ebp-0x8]
   16178:	call   0x13a02
   1617d:	add    esp,0xc
   16180:	push   DWORD PTR [ebp-0x4]
   16183:	lea    eax,[ebp-0x4]
   16186:	push   DWORD PTR [ebp-0x8]
   16189:	mov    ecx,esi
   1618b:	push   eax
   1618c:	call   0x14e6e
   16191:	mov    eax,DWORD PTR [ebp+0x8]
   16194:	pop    esi
   16195:	leave  
   16196:	ret    0x4
   16199:	int3   
   1619a:	int3   
   1619b:	int3   
   1619c:	int3   
   1619d:	int3   
   1619e:	mov    edi,edi
   161a0:	push   ebp
   161a1:	mov    ebp,esp
   161a3:	push   ecx
   161a4:	push   ebx
   161a5:	push   esi
   161a6:	push   edi
   161a7:	mov    edi,ecx
   161a9:	mov    eax,DWORD PTR [edi+0x4]
   161ac:	mov    esi,DWORD PTR [eax+0x4]
   161af:	mov    ebx,eax
   161b1:	mov    al,0x1
   161b3:	jmp    0x161ce
   161b5:	lea    eax,[esi+0x10]
   161b8:	push   eax
   161b9:	push   DWORD PTR [ebp+0xc]
   161bc:	mov    ebx,esi
   161be:	call   0x197ae
   161c3:	test   al,al
   161c5:	je     0x161cb
   161c7:	mov    esi,DWORD PTR [esi]
   161c9:	jmp    0x161ce
   161cb:	mov    esi,DWORD PTR [esi+0x8]
   161ce:	cmp    esi,DWORD PTR ds:0x7f6d8
   161d4:	jne    0x161b5
   161d6:	cmp    BYTE PTR [edi+0x8],0x0
   161da:	je     0x161f7
   161dc:	push   DWORD PTR [ebp+0xc]
   161df:	lea    eax,[ebp+0xc]
   161e2:	push   ebx
   161e3:	push   esi
   161e4:	push   eax
   161e5:	mov    ecx,edi
   161e7:	call   0x15198
   161ec:	mov    ecx,DWORD PTR [eax]
   161ee:	mov    eax,DWORD PTR [ebp+0x8]
   161f1:	mov    BYTE PTR [eax+0x4],0x1
   161f5:	jmp    0x1622a
   161f7:	mov    DWORD PTR [ebp-0x4],ebx
   161fa:	test   al,al
   161fc:	je     0x1620d
   161fe:	mov    eax,DWORD PTR [edi+0x4]
   16201:	cmp    ebx,DWORD PTR [eax]
   16203:	je     0x161dc
   16205:	lea    ecx,[ebp-0x4]
   16208:	call   0x1152e
   1620d:	push   DWORD PTR [ebp+0xc]
   16210:	mov    eax,DWORD PTR [ebp-0x4]
   16213:	add    eax,0x10
   16216:	push   eax
   16217:	call   0x197ae
   1621c:	test   al,al
   1621e:	jne    0x161dc
   16220:	mov    eax,DWORD PTR [ebp+0x8]
   16223:	mov    ecx,DWORD PTR [ebp-0x4]
   16226:	mov    BYTE PTR [eax+0x4],0x0
   1622a:	pop    edi
   1622b:	pop    esi
   1622c:	mov    DWORD PTR [eax],ecx
   1622e:	pop    ebx
   1622f:	leave  
   16230:	ret    0x8
   16233:	int3   
   16234:	int3   
   16235:	int3   
   16236:	int3   
   16237:	int3   
   16238:	mov    edi,edi
   1623a:	push   ebp
   1623b:	mov    ebp,esp
   1623d:	push   ecx
   1623e:	push   esi
   1623f:	mov    esi,ecx
   16241:	cmp    DWORD PTR [esi+0xc],0x0
   16245:	mov    ecx,DWORD PTR [ebp+0xc]
   16248:	je     0x16282
   1624a:	mov    eax,DWORD PTR [esi+0x4]
   1624d:	cmp    ecx,DWORD PTR [eax]
   1624f:	jne    0x16282
   16251:	cmp    DWORD PTR [ebp+0x10],eax
   16254:	jne    0x16282
   16256:	push   DWORD PTR [eax+0x4]
   16259:	mov    ecx,esi
   1625b:	call   0x1514e
   16260:	mov    ecx,DWORD PTR ds:0x7f6d8
   16266:	mov    eax,DWORD PTR [esi+0x4]
   16269:	mov    DWORD PTR [eax+0x4],ecx
   1626c:	mov    eax,DWORD PTR [esi+0x4]
   1626f:	and    DWORD PTR [esi+0xc],0x0
   16273:	mov    DWORD PTR [eax],eax
   16275:	mov    eax,DWORD PTR [esi+0x4]
   16278:	mov    DWORD PTR [eax+0x8],eax
   1627b:	mov    eax,DWORD PTR [esi+0x4]
   1627e:	mov    ecx,DWORD PTR [eax]
   16280:	jmp    0x162a7
   16282:	cmp    ecx,DWORD PTR [ebp+0x10]
   16285:	je     0x162a7
   16287:	push   edi
   16288:	mov    edi,ecx
   1628a:	lea    ecx,[ebp+0xc]
   1628d:	call   0x12e8c
   16292:	push   edi
   16293:	lea    eax,[ebp-0x4]
   16296:	push   eax
   16297:	mov    ecx,esi
   16299:	call   0x14eec
   1629e:	mov    ecx,DWORD PTR [ebp+0xc]
   162a1:	cmp    ecx,DWORD PTR [ebp+0x10]
   162a4:	jne    0x16288
   162a6:	pop    edi
   162a7:	mov    eax,DWORD PTR [ebp+0x8]
   162aa:	mov    DWORD PTR [eax],ecx
   162ac:	pop    esi
   162ad:	leave  
   162ae:	ret    0xc
   162b1:	int3   
   162b2:	int3   
   162b3:	int3   
   162b4:	int3   
   162b5:	int3   
   162b6:	mov    edi,edi
   162b8:	push   ebp
   162b9:	mov    ebp,esp
   162bb:	push   ecx
   162bc:	push   ebx
   162bd:	push   esi
   162be:	push   edi
   162bf:	mov    edi,ecx
   162c1:	mov    eax,DWORD PTR [edi+0x4]
   162c4:	mov    esi,DWORD PTR [eax+0x4]
   162c7:	mov    ebx,eax
   162c9:	mov    al,0x1
   162cb:	jmp    0x162e6
   162cd:	lea    eax,[esi+0x10]
   162d0:	push   eax
   162d1:	push   DWORD PTR [ebp+0xc]
   162d4:	mov    ebx,esi
   162d6:	call   0x197ae
   162db:	test   al,al
   162dd:	je     0x162e3
   162df:	mov    esi,DWORD PTR [esi]
   162e1:	jmp    0x162e6
   162e3:	mov    esi,DWORD PTR [esi+0x8]
   162e6:	cmp    esi,DWORD PTR ds:0x7f6dc
   162ec:	jne    0x162cd
   162ee:	cmp    BYTE PTR [edi+0x8],0x0
   162f2:	je     0x1630f
   162f4:	push   DWORD PTR [ebp+0xc]
   162f7:	lea    eax,[ebp+0xc]
   162fa:	push   ebx
   162fb:	push   esi
   162fc:	push   eax
   162fd:	mov    ecx,edi
   162ff:	call   0x1559a
   16304:	mov    ecx,DWORD PTR [eax]
   16306:	mov    eax,DWORD PTR [ebp+0x8]
   16309:	mov    BYTE PTR [eax+0x4],0x1
   1630d:	jmp    0x16342
   1630f:	mov    DWORD PTR [ebp-0x4],ebx
   16312:	test   al,al
   16314:	je     0x16325
   16316:	mov    eax,DWORD PTR [edi+0x4]
   16319:	cmp    ebx,DWORD PTR [eax]
   1631b:	je     0x162f4
   1631d:	lea    ecx,[ebp-0x4]
   16320:	call   0x113e6
   16325:	push   DWORD PTR [ebp+0xc]
   16328:	mov    eax,DWORD PTR [ebp-0x4]
   1632b:	add    eax,0x10
   1632e:	push   eax
   1632f:	call   0x197ae
   16334:	test   al,al
   16336:	jne    0x162f4
   16338:	mov    eax,DWORD PTR [ebp+0x8]
   1633b:	mov    ecx,DWORD PTR [ebp-0x4]
   1633e:	mov    BYTE PTR [eax+0x4],0x0
   16342:	pop    edi
   16343:	pop    esi
   16344:	mov    DWORD PTR [eax],ecx
   16346:	pop    ebx
   16347:	leave  
   16348:	ret    0x8
   1634b:	int3   
   1634c:	int3   
   1634d:	int3   
   1634e:	int3   
   1634f:	int3   
   16350:	mov    edi,edi
   16352:	push   ebp
   16353:	mov    ebp,esp
   16355:	push   ecx
   16356:	push   esi
   16357:	mov    esi,ecx
   16359:	cmp    DWORD PTR [esi+0xc],0x0
   1635d:	mov    ecx,DWORD PTR [ebp+0xc]
   16360:	je     0x1639a
   16362:	mov    eax,DWORD PTR [esi+0x4]
   16365:	cmp    ecx,DWORD PTR [eax]
   16367:	jne    0x1639a
   16369:	cmp    DWORD PTR [ebp+0x10],eax
   1636c:	jne    0x1639a
   1636e:	push   DWORD PTR [eax+0x4]
   16371:	mov    ecx,esi
   16373:	call   0x15550
   16378:	mov    ecx,DWORD PTR ds:0x7f6dc
   1637e:	mov    eax,DWORD PTR [esi+0x4]
   16381:	mov    DWORD PTR [eax+0x4],ecx
   16384:	mov    eax,DWORD PTR [esi+0x4]
   16387:	and    DWORD PTR [esi+0xc],0x0
   1638b:	mov    DWORD PTR [eax],eax
   1638d:	mov    eax,DWORD PTR [esi+0x4]
   16390:	mov    DWORD PTR [eax+0x8],eax
   16393:	mov    eax,DWORD PTR [esi+0x4]
   16396:	mov    ecx,DWORD PTR [eax]
   16398:	jmp    0x163bf
   1639a:	cmp    ecx,DWORD PTR [ebp+0x10]
   1639d:	je     0x163bf
   1639f:	push   edi
   163a0:	mov    edi,ecx
   163a2:	lea    ecx,[ebp+0xc]
   163a5:	call   0x1384e
   163aa:	push   edi
   163ab:	lea    eax,[ebp-0x4]
   163ae:	push   eax
   163af:	mov    ecx,esi
   163b1:	call   0x152ee
   163b6:	mov    ecx,DWORD PTR [ebp+0xc]
   163b9:	cmp    ecx,DWORD PTR [ebp+0x10]
   163bc:	jne    0x163a0
   163be:	pop    edi
   163bf:	mov    eax,DWORD PTR [ebp+0x8]
   163c2:	mov    DWORD PTR [eax],ecx
   163c4:	pop    esi
   163c5:	leave  
   163c6:	ret    0xc
   163c9:	int3   
   163ca:	int3   
   163cb:	int3   
   163cc:	int3   
   163cd:	int3   
   163ce:	mov    edi,edi
   163d0:	push   ebp
   163d1:	mov    ebp,esp
   163d3:	push   ecx
   163d4:	push   ebx
   163d5:	push   esi
   163d6:	push   edi
   163d7:	mov    edi,ecx
   163d9:	mov    eax,DWORD PTR [edi+0x4]
   163dc:	mov    esi,DWORD PTR [eax+0x4]
   163df:	mov    ebx,eax
   163e1:	mov    al,0x1
   163e3:	jmp    0x163fe
   163e5:	lea    eax,[esi+0xc]
   163e8:	push   eax
   163e9:	push   DWORD PTR [ebp+0xc]
   163ec:	mov    ebx,esi
   163ee:	call   0x197ae
   163f3:	test   al,al
   163f5:	je     0x163fb
   163f7:	mov    esi,DWORD PTR [esi]
   163f9:	jmp    0x163fe
   163fb:	mov    esi,DWORD PTR [esi+0x8]
   163fe:	cmp    esi,DWORD PTR ds:0x7f6e0
   16404:	jne    0x163e5
   16406:	cmp    BYTE PTR [edi+0x8],0x0
   1640a:	je     0x16427
   1640c:	push   DWORD PTR [ebp+0xc]
   1640f:	lea    eax,[ebp+0xc]
   16412:	push   ebx
   16413:	push   esi
   16414:	push   eax
   16415:	mov    ecx,edi
   16417:	call   0x156f0
   1641c:	mov    ecx,DWORD PTR [eax]
   1641e:	mov    eax,DWORD PTR [ebp+0x8]
   16421:	mov    BYTE PTR [eax+0x4],0x1
   16425:	jmp    0x1645a
   16427:	mov    DWORD PTR [ebp-0x4],ebx
   1642a:	test   al,al
   1642c:	je     0x1643d
   1642e:	mov    eax,DWORD PTR [edi+0x4]
   16431:	cmp    ebx,DWORD PTR [eax]
   16433:	je     0x1640c
   16435:	lea    ecx,[ebp-0x4]
   16438:	call   0x1146a
   1643d:	push   DWORD PTR [ebp+0xc]
   16440:	mov    eax,DWORD PTR [ebp-0x4]
   16443:	add    eax,0xc
   16446:	push   eax
   16447:	call   0x197ae
   1644c:	test   al,al
   1644e:	jne    0x1640c
   16450:	mov    eax,DWORD PTR [ebp+0x8]
   16453:	mov    ecx,DWORD PTR [ebp-0x4]
   16456:	mov    BYTE PTR [eax+0x4],0x0
   1645a:	pop    edi
   1645b:	pop    esi
   1645c:	mov    DWORD PTR [eax],ecx
   1645e:	pop    ebx
   1645f:	leave  
   16460:	ret    0x8
   16463:	int3   
   16464:	int3   
   16465:	int3   
   16466:	int3   
   16467:	int3   
   16468:	mov    edi,edi
   1646a:	push   ebp
   1646b:	mov    ebp,esp
   1646d:	push   ecx
   1646e:	push   ebx
   1646f:	push   esi
   16470:	push   edi
   16471:	mov    edi,ecx
   16473:	mov    eax,DWORD PTR [edi+0x4]
   16476:	mov    esi,DWORD PTR [eax+0x4]
   16479:	mov    ebx,eax
   1647b:	mov    eax,ds:0x7f6e4
   16480:	mov    dl,0x1
   16482:	cmp    esi,eax
   16484:	je     0x164a2
   16486:	mov    ecx,DWORD PTR [ebp+0xc]
   16489:	mov    ecx,DWORD PTR [ecx]
   1648b:	cmp    ecx,DWORD PTR [esi+0xc]
   1648e:	mov    ebx,esi
   16490:	setl   dl
   16493:	test   dl,dl
   16495:	je     0x1649b
   16497:	mov    esi,DWORD PTR [esi]
   16499:	jmp    0x1649e
   1649b:	mov    esi,DWORD PTR [esi+0x8]
   1649e:	cmp    esi,eax
   164a0:	jne    0x1648b
   164a2:	cmp    BYTE PTR [edi+0x8],0x0
   164a6:	je     0x164c3
   164a8:	push   DWORD PTR [ebp+0xc]
   164ab:	push   ebx
   164ac:	push   esi
   164ad:	lea    eax,[ebp+0xc]
   164b0:	push   eax
   164b1:	mov    ecx,edi
   164b3:	call   0x15af2
   164b8:	mov    ecx,DWORD PTR [eax]
   164ba:	mov    eax,DWORD PTR [ebp+0x8]
   164bd:	mov    BYTE PTR [eax+0x4],0x1
   164c1:	jmp    0x164f2
   164c3:	mov    ecx,ebx
   164c5:	mov    DWORD PTR [ebp-0x4],ecx
   164c8:	test   dl,dl
   164ca:	je     0x164de
   164cc:	mov    eax,DWORD PTR [edi+0x4]
   164cf:	cmp    ebx,DWORD PTR [eax]
   164d1:	je     0x164a8
   164d3:	lea    ecx,[ebp-0x4]
   164d6:	call   0x114ee
   164db:	mov    ecx,DWORD PTR [ebp-0x4]
   164de:	mov    edx,DWORD PTR [ecx+0xc]
   164e1:	mov    eax,DWORD PTR [ebp+0xc]
   164e4:	cmp    edx,DWORD PTR [eax]
   164e6:	jge    0x164eb
   164e8:	push   eax
   164e9:	jmp    0x164ab
   164eb:	mov    eax,DWORD PTR [ebp+0x8]
   164ee:	mov    BYTE PTR [eax+0x4],0x0
   164f2:	pop    edi
   164f3:	pop    esi
   164f4:	mov    DWORD PTR [eax],ecx
   164f6:	pop    ebx
   164f7:	leave  
   164f8:	ret    0x8
   164fb:	int3   
   164fc:	int3   
   164fd:	int3   
   164fe:	int3   
   164ff:	int3   
   16500:	mov    edi,edi
   16502:	push   ebp
   16503:	mov    ebp,esp
   16505:	push   ecx
   16506:	push   esi
   16507:	mov    esi,ecx
   16509:	cmp    DWORD PTR [esi+0xc],0x0
   1650d:	mov    ecx,DWORD PTR [ebp+0xc]
   16510:	je     0x1654a
   16512:	mov    eax,DWORD PTR [esi+0x4]
   16515:	cmp    ecx,DWORD PTR [eax]
   16517:	jne    0x1654a
   16519:	cmp    DWORD PTR [ebp+0x10],eax
   1651c:	jne    0x1654a
   1651e:	push   DWORD PTR [eax+0x4]
   16521:	mov    ecx,esi
   16523:	call   0x15aa8
   16528:	mov    ecx,DWORD PTR ds:0x7f6e4
   1652e:	mov    eax,DWORD PTR [esi+0x4]
   16531:	mov    DWORD PTR [eax+0x4],ecx
   16534:	mov    eax,DWORD PTR [esi+0x4]
   16537:	and    DWORD PTR [esi+0xc],0x0
   1653b:	mov    DWORD PTR [eax],eax
   1653d:	mov    eax,DWORD PTR [esi+0x4]
   16540:	mov    DWORD PTR [eax+0x8],eax
   16543:	mov    eax,DWORD PTR [esi+0x4]
   16546:	mov    ecx,DWORD PTR [eax]
   16548:	jmp    0x1656f
   1654a:	cmp    ecx,DWORD PTR [ebp+0x10]
   1654d:	je     0x1656f
   1654f:	push   edi
   16550:	mov    edi,ecx
   16552:	lea    ecx,[ebp+0xc]
   16555:	call   0x115a4
   1655a:	push   edi
   1655b:	lea    eax,[ebp-0x4]
   1655e:	push   eax
   1655f:	mov    ecx,esi
   16561:	call   0x15846
   16566:	mov    ecx,DWORD PTR [ebp+0xc]
   16569:	cmp    ecx,DWORD PTR [ebp+0x10]
   1656c:	jne    0x16550
   1656e:	pop    edi
   1656f:	mov    eax,DWORD PTR [ebp+0x8]
   16572:	mov    DWORD PTR [eax],ecx
   16574:	pop    esi
   16575:	leave  
   16576:	ret    0xc
   16579:	int3   
   1657a:	int3   
   1657b:	int3   
   1657c:	int3   
   1657d:	int3   
   1657e:	mov    edi,edi
   16580:	push   ebp
   16581:	mov    ebp,esp
   16583:	push   ecx
   16584:	push   ebx
   16585:	push   esi
   16586:	push   edi
   16587:	mov    edi,ecx
   16589:	mov    eax,DWORD PTR [edi+0x4]
   1658c:	mov    esi,DWORD PTR [eax+0x4]
   1658f:	mov    ebx,eax
   16591:	mov    al,0x1
   16593:	jmp    0x165ae
   16595:	lea    eax,[esi+0xc]
   16598:	push   eax
   16599:	push   DWORD PTR [ebp+0xc]
   1659c:	mov    ebx,esi
   1659e:	call   0x197de
   165a3:	test   al,al
   165a5:	je     0x165ab
   165a7:	mov    esi,DWORD PTR [esi]
   165a9:	jmp    0x165ae
   165ab:	mov    esi,DWORD PTR [esi+0x8]
   165ae:	cmp    esi,DWORD PTR ds:0x7f6ec
   165b4:	jne    0x16595
   165b6:	cmp    BYTE PTR [edi+0x8],0x0
   165ba:	je     0x165d7
   165bc:	push   DWORD PTR [ebp+0xc]
   165bf:	lea    eax,[ebp+0xc]
   165c2:	push   ebx
   165c3:	push   esi
   165c4:	push   eax
   165c5:	mov    ecx,edi
   165c7:	call   0x15c42
   165cc:	mov    ecx,DWORD PTR [eax]
   165ce:	mov    eax,DWORD PTR [ebp+0x8]
   165d1:	mov    BYTE PTR [eax+0x4],0x1
   165d5:	jmp    0x1660a
   165d7:	mov    DWORD PTR [ebp-0x4],ebx
   165da:	test   al,al
   165dc:	je     0x165ed
   165de:	mov    eax,DWORD PTR [edi+0x4]
   165e1:	cmp    ebx,DWORD PTR [eax]
   165e3:	je     0x165bc
   165e5:	lea    ecx,[ebp-0x4]
   165e8:	call   0x133be
   165ed:	push   DWORD PTR [ebp+0xc]
   165f0:	mov    eax,DWORD PTR [ebp-0x4]
   165f3:	add    eax,0xc
   165f6:	push   eax
   165f7:	call   0x197de
   165fc:	test   al,al
   165fe:	jne    0x165bc
   16600:	mov    eax,DWORD PTR [ebp+0x8]
   16603:	mov    ecx,DWORD PTR [ebp-0x4]
   16606:	mov    BYTE PTR [eax+0x4],0x0
   1660a:	pop    edi
   1660b:	pop    esi
   1660c:	mov    DWORD PTR [eax],ecx
   1660e:	pop    ebx
   1660f:	leave  
   16610:	ret    0x8
   16613:	int3   
   16614:	int3   
   16615:	int3   
   16616:	int3   
   16617:	int3   
   16618:	mov    edi,edi
   1661a:	push   ebp
   1661b:	mov    ebp,esp
   1661d:	sub    esp,0x10
   16620:	push   DWORD PTR [ebp+0x8]
   16623:	lea    ecx,[ebp-0x10]
   16626:	call   0x15dba
   1662b:	push   DWORD PTR [ebp+0xc]
   1662e:	mov    ecx,DWORD PTR [ebp+0x8]
   16631:	call   0x15de6
   16636:	mov    ecx,DWORD PTR [ebp+0xc]
   16639:	lea    eax,[ebp-0x10]
   1663c:	push   eax
   1663d:	call   0x15de6
   16642:	lea    ecx,[ebp-0x10]
   16645:	call   0x160a2
   1664a:	leave  
   1664b:	ret    0x8
   1664e:	int3   
   1664f:	int3   
   16650:	int3   
   16651:	int3   
   16652:	int3   
   16653:	int3   
   16654:	mov    edi,edi
   16656:	push   ebp
   16657:	mov    ebp,esp
   16659:	push   esi
   1665a:	push   edi
   1665b:	xor    edi,edi
   1665d:	push   edi
   1665e:	push   edi
   1665f:	push   edi
   16660:	mov    esi,ecx
   16662:	mov    eax,DWORD PTR [esi+0x10]
   16665:	push   edi
   16666:	push   eax
   16667:	call   DWORD PTR ds:0x1f028
   1666d:	test   eax,eax
   1666f:	jl     0x16686
   16671:	lea    eax,[ebp+0x8]
   16674:	push   eax
   16675:	mov    ecx,esi
   16677:	call   0x14c2c
   1667c:	push   edi
   1667d:	push   DWORD PTR [esi+0x10]
   16680:	call   DWORD PTR ds:0x1f024
   16686:	pop    edi
   16687:	pop    esi
   16688:	pop    ebp
   16689:	ret    0x4
   1668c:	int3   
   1668d:	int3   
   1668e:	int3   
   1668f:	int3   
   16690:	int3   
   16691:	int3   
   16692:	mov    edi,edi
   16694:	push   ebp
   16695:	mov    ebp,esp
   16697:	sub    esp,0x50
   1669a:	test   BYTE PTR [ebp+0x8],0x20
   1669e:	je     0x1674d
   166a4:	push   ebx
   166a5:	lea    ecx,[ebp-0x50]
   166a8:	call   0x136a8
   166ad:	mov    ecx,DWORD PTR ds:0x7ed08
   166b3:	lea    eax,[ebp-0x50]
   166b6:	push   eax
   166b7:	push   DWORD PTR [ebp+0xc]
   166ba:	call   0x1603a
   166bf:	test   al,al
   166c1:	je     0x16749
   166c7:	mov    ecx,DWORD PTR [ebp+0x10]
   166ca:	lea    eax,[ebp-0x48]
   166cd:	push   eax
   166ce:	call   0x12970
   166d3:	mov    eax,DWORD PTR [ebp+0x14]
   166d6:	mov    ecx,DWORD PTR [ebp-0x40]
   166d9:	mov    DWORD PTR [eax],ecx
   166db:	mov    ecx,DWORD PTR [ebp+0x18]
   166de:	lea    eax,[ebp-0x3c]
   166e1:	push   eax
   166e2:	call   0x12970
   166e7:	mov    ecx,DWORD PTR [ebp+0x1c]
   166ea:	lea    eax,[ebp-0x34]
   166ed:	push   eax
   166ee:	call   0x12970
   166f3:	mov    ecx,DWORD PTR [ebp+0x20]
   166f6:	lea    eax,[ebp-0x2c]
   166f9:	push   eax
   166fa:	call   0x12970
   166ff:	mov    eax,DWORD PTR [ebp+0x28]
   16702:	mov    ecx,DWORD PTR [ebp-0x24]
   16705:	mov    DWORD PTR [eax],ecx
   16707:	mov    ecx,DWORD PTR [ebp+0x24]
   1670a:	lea    eax,[ebp-0x8]
   1670d:	push   eax
   1670e:	call   0x12970
   16713:	mov    eax,DWORD PTR [ebp+0x30]
   16716:	mov    ecx,DWORD PTR [ebp-0x18]
   16719:	mov    DWORD PTR [eax],ecx
   1671b:	mov    ecx,DWORD PTR [ebp-0x14]
   1671e:	mov    DWORD PTR [eax+0x4],ecx
   16721:	mov    eax,DWORD PTR [ebp+0x34]
   16724:	mov    ecx,DWORD PTR [ebp-0x10]
   16727:	mov    DWORD PTR [eax],ecx
   16729:	mov    ecx,DWORD PTR [ebp-0xc]
   1672c:	mov    DWORD PTR [eax+0x4],ecx
   1672f:	mov    eax,DWORD PTR [ebp+0x2c]
   16732:	mov    ecx,DWORD PTR [ebp-0x20]
   16735:	mov    DWORD PTR [eax],ecx
   16737:	mov    bl,0x1
   16739:	lea    ecx,[ebp-0x50]
   1673c:	call   0x11ea2
   16741:	mov    al,bl
   16743:	pop    ebx
   16744:	jmp    0x167e4
   16749:	xor    bl,bl
   1674b:	jmp    0x16739
   1674d:	mov    ecx,DWORD PTR ds:0x7ed00
   16753:	push   esi
   16754:	push   DWORD PTR [ebp+0xc]
   16757:	lea    eax,[ebp+0xc]
   1675a:	push   eax
   1675b:	call   0x13be0
   16760:	mov    esi,DWORD PTR [ebp+0xc]
   16763:	mov    eax,ds:0x7ed00
   16768:	cmp    esi,DWORD PTR [eax+0x4]
   1676b:	jne    0x16771
   1676d:	xor    al,al
   1676f:	jmp    0x167e3
   16771:	mov    ecx,DWORD PTR [ebp+0x10]
   16774:	lea    eax,[esi+0x20]
   16777:	push   eax
   16778:	call   0x12970
   1677d:	mov    eax,DWORD PTR [esi+0x28]
   16780:	mov    ecx,DWORD PTR [ebp+0x14]
   16783:	mov    DWORD PTR [ecx],eax
   16785:	mov    ecx,DWORD PTR [ebp+0x18]
   16788:	lea    eax,[esi+0x2c]
   1678b:	push   eax
   1678c:	call   0x12970
   16791:	mov    ecx,DWORD PTR [ebp+0x1c]
   16794:	lea    eax,[esi+0x34]
   16797:	push   eax
   16798:	call   0x12970
   1679d:	mov    ecx,DWORD PTR [ebp+0x20]
   167a0:	lea    eax,[esi+0x3c]
   167a3:	push   eax
   167a4:	call   0x12970
   167a9:	mov    ecx,DWORD PTR [ebp+0x24]
   167ac:	lea    eax,[esi+0x60]
   167af:	push   eax
   167b0:	call   0x12970
   167b5:	mov    eax,DWORD PTR [esi+0x44]
   167b8:	mov    ecx,DWORD PTR [ebp+0x28]
   167bb:	mov    DWORD PTR [ecx],eax
   167bd:	mov    ecx,DWORD PTR [esi+0x50]
   167c0:	mov    eax,DWORD PTR [ebp+0x30]
   167c3:	mov    DWORD PTR [eax],ecx
   167c5:	mov    ecx,DWORD PTR [esi+0x54]
   167c8:	mov    DWORD PTR [eax+0x4],ecx
   167cb:	mov    ecx,DWORD PTR [esi+0x58]
   167ce:	mov    eax,DWORD PTR [ebp+0x34]
   167d1:	mov    DWORD PTR [eax],ecx
   167d3:	mov    ecx,DWORD PTR [esi+0x5c]
   167d6:	mov    DWORD PTR [eax+0x4],ecx
   167d9:	mov    eax,DWORD PTR [esi+0x48]
   167dc:	mov    ecx,DWORD PTR [ebp+0x2c]
   167df:	mov    DWORD PTR [ecx],eax
   167e1:	mov    al,0x1
   167e3:	pop    esi
   167e4:	leave  
   167e5:	ret    0x30
   167e8:	int3   
   167e9:	int3   
   167ea:	int3   
   167eb:	int3   
   167ec:	int3   
   167ed:	int3   
   167ee:	push   0x54
   167f0:	push   0x7ded8
   167f5:	call   0x1db0c
   167fa:	xor    esi,esi
   167fc:	push   esi
   167fd:	push   esi
   167fe:	push   esi
   167ff:	push   esi
   16800:	push   0x7eb78
   16805:	call   DWORD PTR ds:0x1f028
   1680b:	cmp    eax,esi
   1680d:	jl     0x169ce
   16813:	mov    DWORD PTR [ebp-0x4],esi
   16816:	or     edi,0xffffffff
   16819:	push   edi
   1681a:	mov    esi,0x1df3e
   1681f:	push   esi
   16820:	lea    ecx,[ebp-0x54]
   16823:	call   0x110d4
   16828:	push   edi
   16829:	push   esi
   1682a:	lea    ecx,[ebp-0x4c]
   1682d:	call   0x110d4
   16832:	push   edi
   16833:	push   esi
   16834:	lea    ecx,[ebp-0x44]
   16837:	call   0x110d4
   1683c:	push   edi
   1683d:	push   esi
   1683e:	lea    ecx,[ebp-0x3c]
   16841:	call   0x110d4
   16846:	push   edi
   16847:	push   esi
   16848:	lea    ecx,[ebp-0x34]
   1684b:	call   0x110d4
   16850:	lea    eax,[ebp-0x64]
   16853:	push   eax
   16854:	lea    eax,[ebp-0x5c]
   16857:	push   eax
   16858:	lea    eax,[ebp-0x20]
   1685b:	push   eax
   1685c:	lea    eax,[ebp-0x1c]
   1685f:	push   eax
   16860:	lea    eax,[ebp-0x34]
   16863:	push   eax
   16864:	lea    eax,[ebp-0x3c]
   16867:	push   eax
   16868:	lea    eax,[ebp-0x44]
   1686b:	push   eax
   1686c:	lea    eax,[ebp-0x54]
   1686f:	push   eax
   16870:	lea    eax,[ebp-0x24]
   16873:	push   eax
   16874:	lea    eax,[ebp-0x4c]
   16877:	push   eax
   16878:	mov    edi,DWORD PTR [ebp+0x8]
   1687b:	push   edi
   1687c:	mov    esi,DWORD PTR [ebp+0xc]
   1687f:	push   DWORD PTR [esi+0x4]
   16882:	call   0x16692
   16887:	test   al,al
   16889:	jne    0x16897
   1688b:	mov    DWORD PTR [esi+0x8],0x1
   16892:	jmp    0x1697c
   16897:	mov    edx,DWORD PTR [edi+0x4]
   1689a:	mov    eax,DWORD PTR [ebp-0x48]
   1689d:	lea    ecx,[eax+edx*1+0x2]
   168a1:	mov    eax,DWORD PTR [ebp-0x50]
   168a4:	lea    edi,[eax+ecx*1+0x5]
   168a8:	mov    eax,DWORD PTR [ebp-0x40]
   168ab:	lea    eax,[eax+edi*1+0x1]
   168af:	mov    DWORD PTR [ebp-0x28],eax
   168b2:	mov    ebx,DWORD PTR [ebp-0x38]
   168b5:	lea    eax,[ebx+eax*1+0x1]
   168b9:	mov    DWORD PTR [ebp-0x2c],eax
   168bc:	mov    ebx,DWORD PTR [ebp-0x30]
   168bf:	lea    eax,[ebx+eax*1+0x1]
   168c3:	cmp    eax,DWORD PTR [esi]
   168c5:	jbe    0x168d5
   168c7:	mov    DWORD PTR [esi],eax
   168c9:	mov    DWORD PTR [esi+0x8],0x2
   168d0:	jmp    0x1697c
   168d5:	and    DWORD PTR [esi+0x8],0x0
   168d9:	mov    eax,DWORD PTR [ebp-0x1c]
   168dc:	mov    DWORD PTR [esi+0xc],eax
   168df:	mov    eax,DWORD PTR [ebp-0x5c]
   168e2:	mov    DWORD PTR [esi+0x18],eax
   168e5:	mov    eax,DWORD PTR [ebp-0x58]
   168e8:	mov    DWORD PTR [esi+0x1c],eax
   168eb:	mov    eax,DWORD PTR [ebp-0x64]
   168ee:	mov    DWORD PTR [esi+0x20],eax
   168f1:	mov    eax,DWORD PTR [ebp-0x60]
   168f4:	mov    DWORD PTR [esi+0x24],eax
   168f7:	mov    eax,DWORD PTR [ebp-0x20]
   168fa:	mov    DWORD PTR [esi+0x10],eax
   168fd:	mov    eax,DWORD PTR [ebp+0x8]
   16900:	mov    eax,DWORD PTR [eax]
   16902:	mov    DWORD PTR [ebp-0x1c],eax
   16905:	lea    eax,[esi+0x28]
   16908:	mov    ebx,DWORD PTR [ebp-0x1c]
   1690b:	mov    bl,BYTE PTR [ebx]
   1690d:	mov    BYTE PTR [ebp+0xb],bl
   16910:	mov    BYTE PTR [eax],bl
   16912:	inc    DWORD PTR [ebp-0x1c]
   16915:	inc    eax
   16916:	test   bl,bl
   16918:	jne    0x16908
   1691a:	mov    ebx,DWORD PTR [ebp-0x4c]
   1691d:	lea    edx,[edx+esi*1+0x29]
   16921:	mov    al,BYTE PTR [ebx]
   16923:	mov    BYTE PTR [edx],al
   16925:	inc    ebx
   16926:	inc    edx
   16927:	test   al,al
   16929:	jne    0x16921
   1692b:	mov    eax,DWORD PTR [ebp-0x24]
   1692e:	mov    DWORD PTR [ecx+esi*1+0x28],eax
   16932:	mov    edx,DWORD PTR [ebp-0x54]
   16935:	lea    ecx,[ecx+esi*1+0x2c]
   16939:	mov    al,BYTE PTR [edx]
   1693b:	mov    BYTE PTR [ecx],al
   1693d:	inc    edx
   1693e:	inc    ecx
   1693f:	test   al,al
   16941:	jne    0x16939
   16943:	mov    ecx,DWORD PTR [ebp-0x44]
   16946:	lea    edi,[edi+esi*1+0x28]
   1694a:	mov    al,BYTE PTR [ecx]
   1694c:	mov    BYTE PTR [edi],al
   1694e:	inc    ecx
   1694f:	inc    edi
   16950:	test   al,al
   16952:	jne    0x1694a
   16954:	mov    edx,DWORD PTR [ebp-0x3c]
   16957:	mov    eax,DWORD PTR [ebp-0x28]
   1695a:	lea    eax,[eax+esi*1+0x28]
   1695e:	mov    cl,BYTE PTR [edx]
   16960:	mov    BYTE PTR [eax],cl
   16962:	inc    edx
   16963:	inc    eax
   16964:	test   cl,cl
   16966:	jne    0x1695e
   16968:	mov    ecx,DWORD PTR [ebp-0x34]
   1696b:	mov    eax,DWORD PTR [ebp-0x2c]
   1696e:	lea    esi,[eax+esi*1+0x28]
   16972:	mov    al,BYTE PTR [ecx]
   16974:	mov    BYTE PTR [esi],al
   16976:	inc    ecx
   16977:	inc    esi
   16978:	test   al,al
   1697a:	jne    0x16972
   1697c:	push   DWORD PTR [ebp-0x34]
   1697f:	call   0x1da40
   16984:	push   DWORD PTR [ebp-0x3c]
   16987:	call   0x1da40
   1698c:	push   DWORD PTR [ebp-0x44]
   1698f:	call   0x1da40
   16994:	push   DWORD PTR [ebp-0x4c]
   16997:	call   0x1da40
   1699c:	push   DWORD PTR [ebp-0x54]
   1699f:	call   0x1da40
   169a4:	add    esp,0x14
   169a7:	jmp    0x169ba
   169a9:	xor    eax,eax
   169ab:	inc    eax
   169ac:	ret    
   169ad:	mov    esp,DWORD PTR [ebp-0x18]
   169b0:	mov    eax,DWORD PTR [ebp+0xc]
   169b3:	mov    DWORD PTR [eax+0x8],0x4
   169ba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   169c1:	push   0x0
   169c3:	push   0x7eb78
   169c8:	call   DWORD PTR ds:0x1f024
   169ce:	call   0x1db51
   169d3:	ret    0x8
   169d6:	int3   
   169d7:	int3   
   169d8:	int3   
   169d9:	int3   
   169da:	int3   
   169db:	int3   
   169dc:	mov    edi,edi
   169de:	push   ebp
   169df:	mov    ebp,esp
   169e1:	sub    esp,0x10
   169e4:	mov    eax,DWORD PTR [ebp+0x8]
   169e7:	mov    eax,DWORD PTR [eax]
   169e9:	and    DWORD PTR [ebp-0x4],0x0
   169ed:	mov    DWORD PTR [ebp-0x8],eax
   169f0:	lea    eax,[ebp-0x8]
   169f3:	push   eax
   169f4:	lea    eax,[ebp-0x10]
   169f7:	push   eax
   169f8:	call   0x160f4
   169fd:	mov    eax,DWORD PTR [eax]
   169ff:	add    eax,0x10
   16a02:	leave  
   16a03:	ret    0x4
   16a06:	int3   
   16a07:	int3   
   16a08:	int3   
   16a09:	int3   
   16a0a:	int3   
   16a0b:	int3   
   16a0c:	mov    edi,edi
   16a0e:	push   esi
   16a0f:	mov    esi,ecx
   16a11:	mov    BYTE PTR [esi+0x8],0x0
   16a15:	call   0x140cc
   16a1a:	mov    eax,esi
   16a1c:	pop    esi
   16a1d:	ret    0x8
   16a20:	int3   
   16a21:	int3   
   16a22:	int3   
   16a23:	int3   
   16a24:	int3   
   16a25:	int3   
   16a26:	mov    edi,edi
   16a28:	push   ebp
   16a29:	mov    ebp,esp
   16a2b:	push   ecx
   16a2c:	push   ecx
   16a2d:	push   DWORD PTR [ebp+0xc]
   16a30:	lea    eax,[ebp-0x8]
   16a33:	push   eax
   16a34:	call   0x1619e
   16a39:	mov    eax,DWORD PTR [ebp+0x8]
   16a3c:	mov    ecx,DWORD PTR [ebp-0x8]
   16a3f:	mov    DWORD PTR [eax],ecx
   16a41:	mov    cl,BYTE PTR [ebp-0x4]
   16a44:	mov    BYTE PTR [eax+0x4],cl
   16a47:	leave  
   16a48:	ret    0x8
   16a4b:	int3   
   16a4c:	int3   
   16a4d:	int3   
   16a4e:	int3   
   16a4f:	int3   
   16a50:	mov    edi,edi
   16a52:	push   ebp
   16a53:	mov    ebp,esp
   16a55:	push   ecx
   16a56:	push   esi
   16a57:	mov    esi,ecx
   16a59:	mov    eax,DWORD PTR [esi+0x4]
   16a5c:	mov    ecx,DWORD PTR [eax]
   16a5e:	push   eax
   16a5f:	push   ecx
   16a60:	lea    eax,[ebp-0x4]
   16a63:	push   eax
   16a64:	mov    ecx,esi
   16a66:	call   0x16238
   16a6b:	push   DWORD PTR [esi+0x4]
   16a6e:	call   0x1da40
   16a73:	xor    eax,eax
   16a75:	mov    DWORD PTR [esi+0x4],eax
   16a78:	mov    DWORD PTR [esi+0xc],eax
   16a7b:	dec    DWORD PTR ds:0x7f834
   16a81:	pop    ecx
   16a82:	pop    esi
   16a83:	jne    0x16a9b
   16a85:	mov    ecx,DWORD PTR ds:0x7f6d8
   16a8b:	mov    ds:0x7f6d8,eax
   16a90:	cmp    ecx,eax
   16a92:	je     0x16a9b
   16a94:	push   ecx
   16a95:	call   0x1da40
   16a9a:	pop    ecx
   16a9b:	leave  
   16a9c:	ret    
   16a9d:	int3   
   16a9e:	int3   
   16a9f:	int3   
   16aa0:	int3   
   16aa1:	int3   
   16aa2:	mov    edi,edi
   16aa4:	push   ebp
   16aa5:	mov    ebp,esp
   16aa7:	push   ecx
   16aa8:	push   ecx
   16aa9:	push   DWORD PTR [ebp+0xc]
   16aac:	lea    eax,[ebp-0x8]
   16aaf:	push   eax
   16ab0:	call   0x162b6
   16ab5:	mov    eax,DWORD PTR [ebp+0x8]
   16ab8:	mov    ecx,DWORD PTR [ebp-0x8]
   16abb:	mov    DWORD PTR [eax],ecx
   16abd:	mov    cl,BYTE PTR [ebp-0x4]
   16ac0:	mov    BYTE PTR [eax+0x4],cl
   16ac3:	leave  
   16ac4:	ret    0x8
   16ac7:	int3   
   16ac8:	int3   
   16ac9:	int3   
   16aca:	int3   
   16acb:	int3   
   16acc:	mov    edi,edi
   16ace:	push   ebp
   16acf:	mov    ebp,esp
   16ad1:	push   ecx
   16ad2:	mov    eax,DWORD PTR [ecx+0x4]
   16ad5:	mov    edx,DWORD PTR [eax]
   16ad7:	push   eax
   16ad8:	push   edx
   16ad9:	lea    eax,[ebp-0x4]
   16adc:	push   eax
   16add:	call   0x16350
   16ae2:	leave  
   16ae3:	ret    
   16ae4:	int3   
   16ae5:	int3   
   16ae6:	int3   
   16ae7:	int3   
   16ae8:	int3   
   16ae9:	int3   
   16aea:	mov    edi,edi
   16aec:	push   ebp
   16aed:	mov    ebp,esp
   16aef:	push   ecx
   16af0:	push   ecx
   16af1:	push   DWORD PTR [ebp+0xc]
   16af4:	lea    eax,[ebp-0x8]
   16af7:	push   eax
   16af8:	call   0x163ce
   16afd:	mov    eax,DWORD PTR [ebp+0x8]
   16b00:	mov    ecx,DWORD PTR [ebp-0x8]
   16b03:	mov    DWORD PTR [eax],ecx
   16b05:	mov    cl,BYTE PTR [ebp-0x4]
   16b08:	mov    BYTE PTR [eax+0x4],cl
   16b0b:	leave  
   16b0c:	ret    0x8
   16b0f:	int3   
   16b10:	int3   
   16b11:	int3   
   16b12:	int3   
   16b13:	int3   
   16b14:	mov    edi,edi
   16b16:	push   ebp
   16b17:	mov    ebp,esp
   16b19:	push   ecx
   16b1a:	push   ecx
   16b1b:	push   DWORD PTR [ebp+0xc]
   16b1e:	lea    eax,[ebp-0x8]
   16b21:	push   eax
   16b22:	call   0x16468
   16b27:	mov    eax,DWORD PTR [ebp+0x8]
   16b2a:	mov    ecx,DWORD PTR [ebp-0x8]
   16b2d:	mov    DWORD PTR [eax],ecx
   16b2f:	mov    cl,BYTE PTR [ebp-0x4]
   16b32:	mov    BYTE PTR [eax+0x4],cl
   16b35:	leave  
   16b36:	ret    0x8
   16b39:	int3   
   16b3a:	int3   
   16b3b:	int3   
   16b3c:	int3   
   16b3d:	int3   
   16b3e:	mov    edi,edi
   16b40:	push   ebp
   16b41:	mov    ebp,esp
   16b43:	push   ecx
   16b44:	push   ecx
   16b45:	push   esi
   16b46:	push   DWORD PTR [ebp+0x8]
   16b49:	lea    eax,[ebp-0x8]
   16b4c:	push   eax
   16b4d:	mov    esi,ecx
   16b4f:	call   0x1412e
   16b54:	and    DWORD PTR [ebp+0x8],0x0
   16b58:	lea    eax,[ebp+0x8]
   16b5b:	push   eax
   16b5c:	push   DWORD PTR [ebp-0x4]
   16b5f:	push   DWORD PTR [ebp-0x8]
   16b62:	call   0x13a24
   16b67:	add    esp,0xc
   16b6a:	push   DWORD PTR [ebp-0x4]
   16b6d:	lea    eax,[ebp-0x4]
   16b70:	push   DWORD PTR [ebp-0x8]
   16b73:	mov    ecx,esi
   16b75:	push   eax
   16b76:	call   0x16500
   16b7b:	mov    eax,DWORD PTR [ebp+0x8]
   16b7e:	pop    esi
   16b7f:	leave  
   16b80:	ret    0x4
   16b83:	int3   
   16b84:	int3   
   16b85:	int3   
   16b86:	int3   
   16b87:	int3   
   16b88:	mov    edi,edi
   16b8a:	push   ebp
   16b8b:	mov    ebp,esp
   16b8d:	push   ecx
   16b8e:	mov    eax,DWORD PTR [ecx+0x4]
   16b91:	mov    edx,DWORD PTR [eax]
   16b93:	push   eax
   16b94:	push   edx
   16b95:	lea    eax,[ebp-0x4]
   16b98:	push   eax
   16b99:	call   0x16500
   16b9e:	leave  
   16b9f:	ret    
   16ba0:	int3   
   16ba1:	int3   
   16ba2:	int3   
   16ba3:	int3   
   16ba4:	int3   
   16ba5:	int3   
   16ba6:	mov    edi,edi
   16ba8:	push   ebp
   16ba9:	mov    ebp,esp
   16bab:	push   ecx
   16bac:	push   ecx
   16bad:	push   DWORD PTR [ebp+0xc]
   16bb0:	lea    eax,[ebp-0x8]
   16bb3:	push   eax
   16bb4:	call   0x1657e
   16bb9:	mov    eax,DWORD PTR [ebp+0x8]
   16bbc:	mov    ecx,DWORD PTR [ebp-0x8]
   16bbf:	mov    DWORD PTR [eax],ecx
   16bc1:	mov    cl,BYTE PTR [ebp-0x4]
   16bc4:	mov    BYTE PTR [eax+0x4],cl
   16bc7:	leave  
   16bc8:	ret    0x8
   16bcb:	int3   
   16bcc:	int3   
   16bcd:	int3   
   16bce:	int3   
   16bcf:	int3   
   16bd0:	mov    edi,edi
   16bd2:	push   esi
   16bd3:	mov    esi,ecx
   16bd5:	push   edi
   16bd6:	mov    BYTE PTR [esi+0x8],0x0
   16bda:	call   0x13fa4
   16bdf:	lea    edi,[esi+0x10]
   16be2:	mov    ecx,edi
   16be4:	call   0x129ba
   16be9:	mov    edi,DWORD PTR [edi]
   16beb:	push   0x0
   16bed:	push   edi
   16bee:	call   0x11c12
   16bf3:	call   eax
   16bf5:	pop    edi
   16bf6:	mov    eax,esi
   16bf8:	pop    esi
   16bf9:	ret    
   16bfa:	int3   
   16bfb:	int3   
   16bfc:	int3   
   16bfd:	int3   
   16bfe:	int3   
   16bff:	int3   
   16c00:	mov    edi,edi
   16c02:	push   ebp
   16c03:	mov    ebp,esp
   16c05:	push   esi
   16c06:	push   edi
   16c07:	xor    edi,edi
   16c09:	push   edi
   16c0a:	push   edi
   16c0b:	push   edi
   16c0c:	mov    esi,ecx
   16c0e:	mov    eax,DWORD PTR [esi+0x10]
   16c11:	push   edi
   16c12:	push   eax
   16c13:	call   DWORD PTR ds:0x1f028
   16c19:	test   eax,eax
   16c1b:	jl     0x16c37
   16c1d:	lea    eax,[ebp+0x8]
   16c20:	push   eax
   16c21:	mov    ecx,esi
   16c23:	call   0x169dc
   16c28:	mov    ecx,DWORD PTR [ebp+0xc]
   16c2b:	push   edi
   16c2c:	mov    DWORD PTR [eax],ecx
   16c2e:	push   DWORD PTR [esi+0x10]
   16c31:	call   DWORD PTR ds:0x1f024
   16c37:	pop    edi
   16c38:	pop    esi
   16c39:	pop    ebp
   16c3a:	ret    0x8
   16c3d:	int3   
   16c3e:	int3   
   16c3f:	int3   
   16c40:	int3   
   16c41:	int3   
   16c42:	mov    edi,edi
   16c44:	push   ebp
   16c45:	mov    ebp,esp
   16c47:	sub    esp,0x38
   16c4a:	push   esi
   16c4b:	call   0x1a25a
   16c50:	test   al,al
   16c52:	jne    0x16c5c
   16c54:	mov    eax,DWORD PTR [ebp+0x8]
   16c57:	jmp    0x16d2d
   16c5c:	push   DWORD PTR [ebp+0xc]
   16c5f:	lea    ecx,[ebp-0x8]
   16c62:	push   DWORD PTR [ebp+0x8]
   16c65:	call   0x12abe
   16c6a:	mov    ecx,DWORD PTR ds:0x7f860
   16c70:	lea    eax,[ebp-0x8]
   16c73:	push   eax
   16c74:	lea    eax,[ebp+0xc]
   16c77:	push   eax
   16c78:	call   0x141c2
   16c7d:	mov    esi,DWORD PTR [ebp+0xc]
   16c80:	mov    eax,ds:0x7f860
   16c85:	cmp    esi,DWORD PTR [eax+0x4]
   16c88:	jne    0x16ce8
   16c8a:	push   ecx
   16c8b:	push   ecx
   16c8c:	lea    eax,[ebp-0x8]
   16c8f:	mov    ecx,esp
   16c91:	push   eax
   16c92:	call   0x12ade
   16c97:	lea    eax,[ebp-0x10]
   16c9a:	push   eax
   16c9b:	call   0x12b5c
   16ca0:	lea    eax,[ebp-0x10]
   16ca3:	push   eax
   16ca4:	lea    eax,[ebp-0x8]
   16ca7:	push   eax
   16ca8:	lea    ecx,[ebp-0x38]
   16cab:	call   0x12cd6
   16cb0:	lea    eax,[ebp-0x38]
   16cb3:	push   eax
   16cb4:	lea    ecx,[ebp-0x28]
   16cb7:	call   0x135ac
   16cbc:	mov    ecx,DWORD PTR ds:0x7f860
   16cc2:	lea    eax,[ebp-0x28]
   16cc5:	push   eax
   16cc6:	lea    eax,[ebp-0x18]
   16cc9:	push   eax
   16cca:	call   0x16ba6
   16ccf:	lea    ecx,[ebp-0x28]
   16cd2:	call   0x12aa0
   16cd7:	lea    ecx,[ebp-0x38]
   16cda:	call   0x12aa0
   16cdf:	push   DWORD PTR [ebp-0x10]
   16ce2:	call   0x1da40
   16ce7:	pop    ecx
   16ce8:	mov    eax,DWORD PTR [ebp+0x10]
   16ceb:	movzx  eax,BYTE PTR [eax]
   16cee:	cmp    eax,0x100
   16cf3:	jge    0x16d0b
   16cf5:	mov    ecx,DWORD PTR ds:0x7f860
   16cfb:	lea    eax,[ebp-0x8]
   16cfe:	push   eax
   16cff:	lea    eax,[ebp+0xc]
   16d02:	push   eax
   16d03:	call   0x141c2
   16d08:	mov    esi,DWORD PTR [ebp+0xc]
   16d0b:	mov    eax,ds:0x7f860
   16d10:	cmp    esi,DWORD PTR [eax+0x4]
   16d13:	je     0x16d1a
   16d15:	mov    esi,DWORD PTR [esi+0x14]
   16d18:	jmp    0x16d1d
   16d1a:	mov    esi,DWORD PTR [ebp+0x8]
   16d1d:	call   0x1a1c2
   16d22:	push   DWORD PTR [ebp-0x8]
   16d25:	call   0x1da40
   16d2a:	pop    ecx
   16d2b:	mov    eax,esi
   16d2d:	pop    esi
   16d2e:	leave  
   16d2f:	ret    0xc
   16d32:	int3   
   16d33:	int3   
   16d34:	int3   
   16d35:	int3   
   16d36:	int3   
   16d37:	int3   
   16d38:	mov    edi,edi
   16d3a:	push   ebp
   16d3b:	mov    ebp,esp
   16d3d:	sub    esp,0x38
   16d40:	push   esi
   16d41:	call   0x1a25a
   16d46:	test   al,al
   16d48:	jne    0x16d52
   16d4a:	mov    eax,DWORD PTR [ebp+0x8]
   16d4d:	jmp    0x16e23
   16d52:	push   DWORD PTR [ebp+0xc]
   16d55:	lea    ecx,[ebp-0x8]
   16d58:	push   DWORD PTR [ebp+0x8]
   16d5b:	call   0x1292e
   16d60:	mov    ecx,DWORD PTR ds:0x7f864
   16d66:	lea    eax,[ebp-0x8]
   16d69:	push   eax
   16d6a:	lea    eax,[ebp+0xc]
   16d6d:	push   eax
   16d6e:	call   0x13c28
   16d73:	mov    esi,DWORD PTR [ebp+0xc]
   16d76:	mov    eax,ds:0x7f864
   16d7b:	cmp    esi,DWORD PTR [eax+0x4]
   16d7e:	jne    0x16dde
   16d80:	push   ecx
   16d81:	push   ecx
   16d82:	lea    eax,[ebp-0x8]
   16d85:	mov    ecx,esp
   16d87:	push   eax
   16d88:	call   0x1294e
   16d8d:	lea    eax,[ebp-0x10]
   16d90:	push   eax
   16d91:	call   0x12ba0
   16d96:	lea    eax,[ebp-0x10]
   16d99:	push   eax
   16d9a:	lea    eax,[ebp-0x8]
   16d9d:	push   eax
   16d9e:	lea    ecx,[ebp-0x38]
   16da1:	call   0x12be0
   16da6:	lea    eax,[ebp-0x38]
   16da9:	push   eax
   16daa:	lea    ecx,[ebp-0x28]
   16dad:	call   0x1346e
   16db2:	mov    ecx,DWORD PTR ds:0x7f864
   16db8:	lea    eax,[ebp-0x28]
   16dbb:	push   eax
   16dbc:	lea    eax,[ebp-0x18]
   16dbf:	push   eax
   16dc0:	call   0x16aea
   16dc5:	lea    ecx,[ebp-0x28]
   16dc8:	call   0x12aa0
   16dcd:	lea    ecx,[ebp-0x38]
   16dd0:	call   0x12aa0
   16dd5:	push   DWORD PTR [ebp-0x10]
   16dd8:	call   0x1da40
   16ddd:	pop    ecx
   16dde:	mov    eax,DWORD PTR [ebp+0x10]
   16de1:	movzx  eax,BYTE PTR [eax]
   16de4:	cmp    eax,0x100
   16de9:	jge    0x16e01
   16deb:	mov    ecx,DWORD PTR ds:0x7f864
   16df1:	lea    eax,[ebp-0x8]
   16df4:	push   eax
   16df5:	lea    eax,[ebp+0xc]
   16df8:	push   eax
   16df9:	call   0x13c28
   16dfe:	mov    esi,DWORD PTR [ebp+0xc]
   16e01:	mov    eax,ds:0x7f864
   16e06:	cmp    esi,DWORD PTR [eax+0x4]
   16e09:	je     0x16e10
   16e0b:	mov    esi,DWORD PTR [esi+0x14]
   16e0e:	jmp    0x16e13
   16e10:	mov    esi,DWORD PTR [ebp+0x8]
   16e13:	call   0x1a1c2
   16e18:	push   DWORD PTR [ebp-0x8]
   16e1b:	call   0x1da40
   16e20:	pop    ecx
   16e21:	mov    eax,esi
   16e23:	pop    esi
   16e24:	leave  
   16e25:	ret    0xc
   16e28:	int3   
   16e29:	int3   
   16e2a:	int3   
   16e2b:	int3   
   16e2c:	int3   
   16e2d:	int3   
   16e2e:	mov    edi,edi
   16e30:	push   esi
   16e31:	mov    esi,ecx
   16e33:	mov    BYTE PTR [esi+0x8],0x0
   16e37:	call   0x14038
   16e3c:	mov    eax,esi
   16e3e:	pop    esi
   16e3f:	ret    0x8
   16e42:	int3   
   16e43:	int3   
   16e44:	int3   
   16e45:	int3   
   16e46:	int3   
   16e47:	int3   
   16e48:	mov    edi,edi
   16e4a:	push   ebp
   16e4b:	mov    ebp,esp
   16e4d:	sub    esp,0xb0
   16e53:	push   esi
   16e54:	mov    esi,ecx
   16e56:	lea    ecx,[ebp-0x58]
   16e59:	call   0x136a8
   16e5e:	push   eax
   16e5f:	push   DWORD PTR [ebp+0x8]
   16e62:	lea    ecx,[ebp-0xb0]
   16e68:	call   0x13884
   16e6d:	push   eax
   16e6e:	lea    eax,[ebp-0x8]
   16e71:	push   eax
   16e72:	mov    ecx,esi
   16e74:	call   0x16aa2
   16e79:	mov    esi,DWORD PTR [eax]
   16e7b:	lea    ecx,[ebp-0xb0]
   16e81:	call   0x12a84
   16e86:	lea    ecx,[ebp-0x58]
   16e89:	call   0x11ea2
   16e8e:	lea    eax,[esi+0x18]
   16e91:	pop    esi
   16e92:	leave  
   16e93:	ret    0x4
   16e96:	int3   
   16e97:	int3   
   16e98:	int3   
   16e99:	int3   
   16e9a:	int3   
   16e9b:	int3   
   16e9c:	mov    edi,edi
   16e9e:	push   ebp
   16e9f:	mov    ebp,esp
   16ea1:	sub    esp,0x20
   16ea4:	push   esi
   16ea5:	push   0xffffffff
   16ea7:	mov    esi,ecx
   16ea9:	push   0x1df3e
   16eae:	lea    ecx,[ebp-0x8]
   16eb1:	call   0x110d4
   16eb6:	lea    eax,[ebp-0x8]
   16eb9:	push   eax
   16eba:	push   DWORD PTR [ebp+0x8]
   16ebd:	lea    ecx,[ebp-0x20]
   16ec0:	call   0x12be0
   16ec5:	push   eax
   16ec6:	lea    eax,[ebp-0x10]
   16ec9:	push   eax
   16eca:	mov    ecx,esi
   16ecc:	call   0x16aea
   16ed1:	mov    esi,DWORD PTR [eax]
   16ed3:	lea    ecx,[ebp-0x20]
   16ed6:	call   0x12aa0
   16edb:	push   DWORD PTR [ebp-0x8]
   16ede:	call   0x1da40
   16ee3:	pop    ecx
   16ee4:	lea    eax,[esi+0x14]
   16ee7:	pop    esi
   16ee8:	leave  
   16ee9:	ret    0x4
   16eec:	int3   
   16eed:	int3   
   16eee:	int3   
   16eef:	int3   
   16ef0:	int3   
   16ef1:	int3   
   16ef2:	mov    edi,edi
   16ef4:	push   esi
   16ef5:	mov    esi,ecx
   16ef7:	mov    BYTE PTR [esi+0x8],0x0
   16efb:	call   0x14160
   16f00:	mov    eax,esi
   16f02:	pop    esi
   16f03:	ret    0x8
   16f06:	int3   
   16f07:	int3   
   16f08:	int3   
   16f09:	int3   
   16f0a:	int3   
   16f0b:	int3   
   16f0c:	mov    edi,edi
   16f0e:	push   ebp
   16f0f:	mov    ebp,esp
   16f11:	sub    esp,0x14
   16f14:	and    DWORD PTR [ebp-0x4],0x0
   16f18:	push   esi
   16f19:	lea    eax,[ebp-0x4]
   16f1c:	push   eax
   16f1d:	push   DWORD PTR [ebp+0x8]
   16f20:	mov    esi,ecx
   16f22:	lea    ecx,[ebp-0xc]
   16f25:	call   0x12c08
   16f2a:	push   eax
   16f2b:	lea    eax,[ebp-0x14]
   16f2e:	push   eax
   16f2f:	mov    ecx,esi
   16f31:	call   0x16b14
   16f36:	mov    ecx,DWORD PTR [ebp-0x8]
   16f39:	mov    esi,DWORD PTR [eax]
   16f3b:	test   ecx,ecx
   16f3d:	je     0x16f44
   16f3f:	call   0x10aca
   16f44:	lea    eax,[esi+0x10]
   16f47:	pop    esi
   16f48:	leave  
   16f49:	ret    0x4
   16f4c:	int3   
   16f4d:	int3   
   16f4e:	int3   
   16f4f:	int3   
   16f50:	int3   
   16f51:	int3   
   16f52:	mov    edi,edi
   16f54:	push   ebp
   16f55:	mov    ebp,esp
   16f57:	sub    esp,0x20
   16f5a:	push   esi
   16f5b:	mov    esi,ecx
   16f5d:	mov    eax,DWORD PTR [esi+0x24]
   16f60:	mov    ecx,DWORD PTR [esi+0x28]
   16f63:	add    ecx,eax
   16f65:	cmp    DWORD PTR [esi+0x10],ecx
   16f68:	jbe    0x16ffb
   16f6e:	mov    ecx,DWORD PTR [esi+0x18]
   16f71:	mov    ecx,DWORD PTR [ecx]
   16f73:	push   edi
   16f74:	mov    DWORD PTR [ebp-0x4],ecx
   16f77:	test   eax,eax
   16f79:	je     0x16f88
   16f7b:	mov    edi,eax
   16f7d:	lea    ecx,[ebp-0x4]
   16f80:	call   0x12f02
   16f85:	dec    edi
   16f86:	jne    0x16f7d
   16f88:	mov    eax,DWORD PTR [ebp-0x4]
   16f8b:	mov    edi,DWORD PTR [eax+0xc]
   16f8e:	lea    ecx,[ebp-0x20]
   16f91:	mov    BYTE PTR [ebp-0x18],0x0
   16f95:	call   0x14494
   16f9a:	mov    eax,DWORD PTR [esi+0x8]
   16f9d:	mov    ecx,DWORD PTR [eax]
   16f9f:	mov    DWORD PTR [ebp-0x4],ecx
   16fa2:	cmp    ecx,eax
   16fa4:	je     0x16fe5
   16fa6:	lea    edx,[ecx+0x68]
   16fa9:	mov    eax,DWORD PTR [edx]
   16fab:	cmp    eax,edi
   16fad:	jae    0x16fc4
   16faf:	push   ecx
   16fb0:	lea    eax,[ebp-0x8]
   16fb3:	push   eax
   16fb4:	lea    ecx,[esi+0x4]
   16fb7:	call   0x14eec
   16fbc:	mov    ecx,DWORD PTR [ebp-0x8]
   16fbf:	mov    DWORD PTR [ebp-0x4],ecx
   16fc2:	jmp    0x16fe0
   16fc4:	sub    eax,edi
   16fc6:	mov    DWORD PTR [edx],eax
   16fc8:	push   edx
   16fc9:	lea    eax,[ebp-0x10]
   16fcc:	push   eax
   16fcd:	lea    ecx,[ebp-0x20]
   16fd0:	call   0x16078
   16fd5:	lea    ecx,[ebp-0x4]
   16fd8:	call   0x12e8c
   16fdd:	mov    ecx,DWORD PTR [ebp-0x4]
   16fe0:	cmp    ecx,DWORD PTR [esi+0x8]
   16fe3:	jne    0x16fa6
   16fe5:	lea    eax,[ebp-0x20]
   16fe8:	push   eax
   16fe9:	add    esi,0x14
   16fec:	push   esi
   16fed:	call   0x16618
   16ff2:	lea    ecx,[ebp-0x20]
   16ff5:	call   0x160a2
   16ffa:	pop    edi
   16ffb:	pop    esi
   16ffc:	leave  
   16ffd:	ret    
   16ffe:	int3   
   16fff:	int3   
   17000:	int3   
   17001:	int3   
   17002:	int3   
   17003:	int3   
   17004:	mov    edi,edi
   17006:	push   ebp
   17007:	mov    ebp,esp
   17009:	sub    esp,0x20
   1700c:	push   esi
   1700d:	push   0xffffffff
   1700f:	mov    esi,ecx
   17011:	push   0x1de9c
   17016:	lea    ecx,[ebp-0x8]
   17019:	call   0x11178
   1701e:	lea    eax,[ebp-0x8]
   17021:	push   eax
   17022:	push   DWORD PTR [ebp+0x8]
   17025:	lea    ecx,[ebp-0x20]
   17028:	call   0x12cd6
   1702d:	push   eax
   1702e:	lea    eax,[ebp-0x10]
   17031:	push   eax
   17032:	mov    ecx,esi
   17034:	call   0x16ba6
   17039:	mov    esi,DWORD PTR [eax]
   1703b:	lea    ecx,[ebp-0x20]
   1703e:	call   0x12aa0
   17043:	push   DWORD PTR [ebp-0x8]
   17046:	call   0x1da40
   1704b:	pop    ecx
   1704c:	lea    eax,[esi+0x14]
   1704f:	pop    esi
   17050:	leave  
   17051:	ret    0x4
   17054:	int3   
   17055:	int3   
   17056:	int3   
   17057:	int3   
   17058:	int3   
   17059:	int3   
   1705a:	mov    edi,edi
   1705c:	push   ebp
   1705d:	mov    ebp,esp
   1705f:	sub    esp,0x838
   17065:	mov    eax,ds:0x7eb3c
   1706a:	xor    eax,ebp
   1706c:	mov    DWORD PTR [ebp-0x4],eax
   1706f:	mov    eax,DWORD PTR [ebp+0x8]
   17072:	push   ebx
   17073:	push   esi
   17074:	push   edi
   17075:	mov    DWORD PTR [ebp-0x808],eax
   1707b:	xor    eax,eax
   1707d:	push   0x7fe
   17082:	mov    WORD PTR [ebp-0x804],ax
   17089:	xor    ebx,ebx
   1708b:	lea    eax,[ebp-0x802]
   17091:	push   ebx
   17092:	push   eax
   17093:	call   0x1dae6
   17098:	mov    eax,0x7e2c8
   1709d:	add    esp,0xc
   170a0:	mov    edx,eax
   170a2:	mov    cx,WORD PTR [eax]
   170a5:	inc    eax
   170a6:	inc    eax
   170a7:	cmp    cx,bx
   170aa:	jne    0x170a2
   170ac:	sub    eax,edx
   170ae:	lea    edi,[ebp-0x804]
   170b4:	dec    edi
   170b5:	dec    edi
   170b6:	mov    cx,WORD PTR [edi+0x2]
   170ba:	inc    edi
   170bb:	inc    edi
   170bc:	cmp    cx,bx
   170bf:	jne    0x170b6
   170c1:	mov    ecx,eax
   170c3:	shr    ecx,0x2
   170c6:	mov    esi,edx
   170c8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   170ca:	mov    ecx,eax
   170cc:	mov    eax,DWORD PTR [ebp-0x808]
   170d2:	and    ecx,0x3
   170d5:	add    eax,0x400
   170da:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   170dc:	mov    edx,eax
   170de:	mov    cx,WORD PTR [eax]
   170e1:	inc    eax
   170e2:	inc    eax
   170e3:	cmp    cx,bx
   170e6:	jne    0x170de
   170e8:	sub    eax,edx
   170ea:	lea    edi,[ebp-0x804]
   170f0:	dec    edi
   170f1:	dec    edi
   170f2:	mov    cx,WORD PTR [edi+0x2]
   170f6:	inc    edi
   170f7:	inc    edi
   170f8:	cmp    cx,bx
   170fb:	jne    0x170f2
   170fd:	mov    ecx,eax
   170ff:	shr    ecx,0x2
   17102:	mov    esi,edx
   17104:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17106:	mov    ecx,eax
   17108:	and    ecx,0x3
   1710b:	lea    eax,[ebp-0x804]
   17111:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17113:	mov    DWORD PTR [ebp-0x818],eax
   17119:	lea    ecx,[eax+0x2]
   1711c:	mov    dx,WORD PTR [eax]
   1711f:	inc    eax
   17120:	inc    eax
   17121:	cmp    dx,bx
   17124:	jne    0x1711c
   17126:	sub    eax,ecx
   17128:	sar    eax,1
   1712a:	add    eax,eax
   1712c:	mov    WORD PTR [ebp-0x81a],ax
   17133:	mov    WORD PTR [ebp-0x81c],ax
   1713a:	lea    eax,[ebp-0x81c]
   17140:	mov    DWORD PTR [ebp-0x82c],eax
   17146:	lea    eax,[ebp-0x838]
   1714c:	push   eax
   1714d:	xor    edi,edi
   1714f:	inc    edi
   17150:	push   edi
   17151:	push   ebx
   17152:	push   ebx
   17153:	lea    eax,[ebp-0x834]
   17159:	push   eax
   1715a:	push   0xf003f
   1715f:	lea    eax,[ebp-0x80c]
   17165:	push   eax
   17166:	mov    DWORD PTR [ebp-0x834],0x18
   17170:	mov    DWORD PTR [ebp-0x830],ebx
   17176:	mov    DWORD PTR [ebp-0x828],0x40
   17180:	mov    DWORD PTR [ebp-0x824],ebx
   17186:	mov    DWORD PTR [ebp-0x820],ebx
   1718c:	call   0x119c6
   17191:	call   eax
   17193:	test   eax,eax
   17195:	jl     0x17324
   1719b:	push   0x1e59c
   171a0:	push   0x9
   171a2:	push   0x1e588
   171a7:	call   0x16c42
   171ac:	mov    DWORD PTR [ebp-0x810],eax
   171b2:	lea    edx,[eax+0x2]
   171b5:	mov    cx,WORD PTR [eax]
   171b8:	inc    eax
   171b9:	inc    eax
   171ba:	cmp    cx,bx
   171bd:	jne    0x171b5
   171bf:	sub    eax,edx
   171c1:	sar    eax,1
   171c3:	add    eax,eax
   171c5:	mov    WORD PTR [ebp-0x812],ax
   171cc:	mov    WORD PTR [ebp-0x814],ax
   171d3:	mov    eax,DWORD PTR [ebp-0x808]
   171d9:	lea    ecx,[eax+0x2]
   171dc:	mov    dx,WORD PTR [eax]
   171df:	inc    eax
   171e0:	inc    eax
   171e1:	cmp    dx,bx
   171e4:	jne    0x171dc
   171e6:	sub    eax,ecx
   171e8:	sar    eax,1
   171ea:	inc    eax
   171eb:	movzx  eax,ax
   171ee:	add    eax,eax
   171f0:	push   eax
   171f1:	push   DWORD PTR [ebp-0x808]
   171f7:	lea    eax,[ebp-0x814]
   171fd:	push   edi
   171fe:	push   ebx
   171ff:	push   eax
   17200:	push   DWORD PTR [ebp-0x80c]
   17206:	call   0x11822
   1720b:	call   eax
   1720d:	test   eax,eax
   1720f:	jl     0x17324
   17215:	push   0x1e560
   1721a:	push   0x5
   1721c:	push   0x1e554
   17221:	mov    DWORD PTR [ebp-0x808],0x3
   1722b:	call   0x16c42
   17230:	mov    DWORD PTR [ebp-0x810],eax
   17236:	lea    edx,[eax+0x2]
   17239:	mov    cx,WORD PTR [eax]
   1723c:	inc    eax
   1723d:	inc    eax
   1723e:	cmp    cx,bx
   17241:	jne    0x17239
   17243:	sub    eax,edx
   17245:	push   0x4
   17247:	sar    eax,1
   17249:	pop    esi
   1724a:	add    eax,eax
   1724c:	push   esi
   1724d:	mov    WORD PTR [ebp-0x812],ax
   17254:	mov    WORD PTR [ebp-0x814],ax
   1725b:	lea    eax,[ebp-0x808]
   17261:	push   eax
   17262:	push   esi
   17263:	push   ebx
   17264:	lea    eax,[ebp-0x814]
   1726a:	push   eax
   1726b:	push   DWORD PTR [ebp-0x80c]
   17271:	call   0x11822
   17276:	call   eax
   17278:	test   eax,eax
   1727a:	jl     0x17324
   17280:	push   0x1e51c
   17285:	push   esi
   17286:	push   0x1e512
   1728b:	mov    DWORD PTR [ebp-0x808],edi
   17291:	call   0x16c42
   17296:	mov    DWORD PTR [ebp-0x810],eax
   1729c:	lea    ecx,[eax+0x2]
   1729f:	mov    dx,WORD PTR [eax]
   172a2:	inc    eax
   172a3:	inc    eax
   172a4:	cmp    dx,bx
   172a7:	jne    0x1729f
   172a9:	sub    eax,ecx
   172ab:	sar    eax,1
   172ad:	add    eax,eax
   172af:	push   esi
   172b0:	mov    WORD PTR [ebp-0x812],ax
   172b7:	mov    WORD PTR [ebp-0x814],ax
   172be:	lea    eax,[ebp-0x808]
   172c4:	push   eax
   172c5:	push   esi
   172c6:	push   ebx
   172c7:	lea    eax,[ebp-0x814]
   172cd:	push   eax
   172ce:	push   DWORD PTR [ebp-0x80c]
   172d4:	call   0x11822
   172d9:	call   eax
   172db:	test   eax,eax
   172dd:	jl     0x17324
   172df:	lea    eax,[ebp-0x81c]
   172e5:	push   eax
   172e6:	call   0x1199c
   172eb:	call   eax
   172ed:	test   eax,eax
   172ef:	jl     0x17324
   172f1:	lea    eax,[ebp-0x804]
   172f7:	push   eax
   172f8:	push   DWORD PTR [ebp-0x80c]
   172fe:	call   0x12102
   17303:	test   al,al
   17305:	je     0x17318
   17307:	push   DWORD PTR [ebp-0x80c]
   1730d:	call   0x117f8
   17312:	call   eax
   17314:	test   eax,eax
   17316:	jl     0x17324
   17318:	push   DWORD PTR [ebp-0x80c]
   1731e:	call   DWORD PTR ds:0x1f064
   17324:	mov    ecx,DWORD PTR [ebp-0x4]
   17327:	pop    edi
   17328:	pop    esi
   17329:	xor    ecx,ebp
   1732b:	pop    ebx
   1732c:	call   0x1da5d
   17331:	leave  
   17332:	ret    0x4
   17335:	int3   
   17336:	int3   
   17337:	int3   
   17338:	int3   
   17339:	int3   
   1733a:	mov    edi,edi
   1733c:	push   ebp
   1733d:	mov    ebp,esp
   1733f:	sub    esp,0x44
   17342:	mov    eax,DWORD PTR [ebp+0xc]
   17345:	mov    eax,DWORD PTR [eax]
   17347:	push   esi
   17348:	mov    DWORD PTR [ebp-0x2c],eax
   1734b:	lea    eax,[ebp-0x2c]
   1734e:	push   eax
   1734f:	lea    eax,[ebp-0x44]
   17352:	push   eax
   17353:	xor    esi,esi
   17355:	push   0x1f0fff
   1735a:	lea    eax,[ebp-0x10]
   1735d:	push   eax
   1735e:	mov    DWORD PTR [ebp-0x44],0x18
   17365:	mov    DWORD PTR [ebp-0x40],esi
   17368:	mov    DWORD PTR [ebp-0x38],0x200
   1736f:	mov    DWORD PTR [ebp-0x3c],esi
   17372:	mov    DWORD PTR [ebp-0x34],esi
   17375:	mov    DWORD PTR [ebp-0x30],esi
   17378:	mov    DWORD PTR [ebp-0x28],esi
   1737b:	mov    DWORD PTR [ebp-0x10],esi
   1737e:	call   0x116a8
   17383:	call   eax
   17385:	test   eax,eax
   17387:	jl     0x175f8
   1738d:	push   ebx
   1738e:	push   edi
   1738f:	push   0x40
   17391:	mov    edi,0x1000
   17396:	push   edi
   17397:	lea    eax,[ebp-0x14]
   1739a:	push   eax
   1739b:	push   esi
   1739c:	lea    eax,[ebp-0x8]
   1739f:	push   eax
   173a0:	push   DWORD PTR [ebp-0x10]
   173a3:	mov    DWORD PTR [ebp-0x8],esi
   173a6:	mov    esi,DWORD PTR ds:0x1f044
   173ac:	mov    ebx,0x400
   173b1:	mov    DWORD PTR [ebp-0x14],ebx
   173b4:	call   esi
   173b6:	test   eax,eax
   173b8:	jl     0x173c3
   173ba:	mov    eax,DWORD PTR [ebp-0x8]
   173bd:	mov    ecx,DWORD PTR [ebp+0xc]
   173c0:	mov    DWORD PTR [ecx+0x8],eax
   173c3:	and    DWORD PTR [ebp-0x18],0x0
   173c7:	push   0x4
   173c9:	push   edi
   173ca:	lea    eax,[ebp-0x14]
   173cd:	push   eax
   173ce:	push   0x0
   173d0:	lea    eax,[ebp-0x18]
   173d3:	push   eax
   173d4:	push   DWORD PTR [ebp-0x10]
   173d7:	mov    DWORD PTR [ebp-0x14],ebx
   173da:	call   esi
   173dc:	test   eax,eax
   173de:	jl     0x173e9
   173e0:	mov    eax,DWORD PTR [ebp-0x18]
   173e3:	mov    ecx,DWORD PTR [ebp+0xc]
   173e6:	mov    DWORD PTR [ecx+0xc],eax
   173e9:	lea    eax,[ebp-0x1c]
   173ec:	push   eax
   173ed:	push   DWORD PTR [ebp-0x2c]
   173f0:	call   0x11c90
   173f5:	call   eax
   173f7:	test   eax,eax
   173f9:	jl     0x175f6
   173ff:	push   DWORD PTR [ebp-0x1c]
   17402:	call   0x11a44
   17407:	call   eax
   17409:	mov    ebx,DWORD PTR [ebp-0x8]
   1740c:	and    DWORD PTR [ebp-0x4],0x0
   17410:	test   ebx,ebx
   17412:	je     0x175dc
   17418:	mov    edi,DWORD PTR [ebp-0x18]
   1741b:	push   0x40
   1741d:	push   0x7e208
   17422:	push   edi
   17423:	mov    DWORD PTR [ebp-0xc],edi
   17426:	call   0x1983c
   1742b:	push   0x1e5d8
   17430:	push   0x4
   17432:	push   0x1e5ce
   17437:	call   0x16c42
   1743c:	mov    esi,eax
   1743e:	mov    cx,WORD PTR [eax]
   17441:	inc    eax
   17442:	inc    eax
   17443:	test   cx,cx
   17446:	jne    0x1743e
   17448:	sub    eax,esi
   1744a:	dec    edi
   1744b:	dec    edi
   1744c:	mov    cx,WORD PTR [edi+0x2]
   17450:	inc    edi
   17451:	inc    edi
   17452:	test   cx,cx
   17455:	jne    0x1744c
   17457:	mov    ecx,eax
   17459:	shr    ecx,0x2
   1745c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1745e:	mov    ecx,eax
   17460:	push   0x60
   17462:	and    ecx,0x3
   17465:	push   ebx
   17466:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17468:	mov    DWORD PTR [ebp-0x20],ebx
   1746b:	call   0x197ee
   17470:	push   0x68
   17472:	push   eax
   17473:	call   0x197ee
   17478:	push   DWORD PTR [ebp-0xc]
   1747b:	push   eax
   1747c:	call   0x19806
   17481:	push   0xb8
   17486:	push   eax
   17487:	call   0x197ee
   1748c:	push   DWORD PTR ds:0x7ed88
   17492:	push   eax
   17493:	call   0x19806
   17498:	push   0xc00b
   1749d:	push   eax
   1749e:	call   0x19820
   174a3:	push   0x74
   174a5:	push   eax
   174a6:	call   0x197ee
   174ab:	push   0x2
   174ad:	push   eax
   174ae:	call   0x197ee
   174b3:	push   0xd0ff
   174b8:	push   eax
   174b9:	call   0x19820
   174be:	push   0x61
   174c0:	push   eax
   174c1:	call   0x197ee
   174c6:	mov    ebx,DWORD PTR [ebp+0x8]
   174c9:	mov    edi,eax
   174cb:	mov    esi,ebx
   174cd:	push   0x0
   174cf:	push   esi
   174d0:	push   edi
   174d1:	call   0x19fa8
   174d6:	mov    ecx,eax
   174d8:	sub    ecx,esi
   174da:	add    DWORD PTR [ebp-0x4],ecx
   174dd:	add    edi,ecx
   174df:	cmp    DWORD PTR [ebp-0x4],0x5
   174e3:	mov    esi,eax
   174e5:	jb     0x174cd
   174e7:	mov    eax,DWORD PTR [ebp-0x4]
   174ea:	push   edi
   174eb:	add    eax,ebx
   174ed:	push   eax
   174ee:	call   0x19864
   174f3:	mov    eax,DWORD PTR [ebp-0x8]
   174f6:	test   eax,eax
   174f8:	je     0x175dc
   174fe:	add    eax,0x400
   17503:	lea    ecx,[eax-0x10]
   17506:	mov    DWORD PTR [ebp-0x24],ecx
   17509:	mov    ecx,DWORD PTR [ebp-0x4]
   1750c:	lea    esi,[eax-0xc]
   1750f:	push   esi
   17510:	lea    edi,[eax-0x4]
   17513:	lea    ebx,[eax-0x8]
   17516:	shr    ecx,0x2
   17519:	lea    ecx,[ecx*4+0x14]
   17520:	push   0x40
   17522:	sub    eax,ecx
   17524:	push   ebx
   17525:	mov    DWORD PTR [ebp-0xc],eax
   17528:	mov    eax,DWORD PTR [ebp+0x8]
   1752b:	mov    DWORD PTR [edi],eax
   1752d:	push   edi
   1752e:	mov    DWORD PTR [ebx],0x5
   17534:	and    DWORD PTR [esi],0x0
   17537:	push   0xffffffff
   17539:	call   DWORD PTR ds:0x7ed04
   1753f:	test   eax,eax
   17541:	jl     0x175a6
   17543:	push   DWORD PTR [ebp-0x4]
   17546:	push   0x90
   1754b:	push   DWORD PTR [ebp-0xc]
   1754e:	call   0x1dae6
   17553:	mov    eax,DWORD PTR [ebp-0x20]
   17556:	sub    eax,DWORD PTR [ebp+0x8]
   17559:	add    esp,0xc
   1755c:	sub    eax,0x5
   1755f:	push   eax
   17560:	mov    eax,DWORD PTR [ebp-0xc]
   17563:	inc    eax
   17564:	push   eax
   17565:	call   0x19806
   1756a:	push   0xe9
   1756f:	push   DWORD PTR [ebp-0xc]
   17572:	call   0x197ee
   17577:	mov    eax,DWORD PTR [ebp-0x24]
   1757a:	and    DWORD PTR [eax],0x0
   1757d:	push   eax
   1757e:	push   DWORD PTR [ebp-0x4]
   17581:	push   DWORD PTR [ebp-0xc]
   17584:	push   DWORD PTR [ebp+0x8]
   17587:	push   0xffffffff
   17589:	call   DWORD PTR ds:0x7ecf8
   1758f:	mov    eax,DWORD PTR [ebp+0xc]
   17592:	mov    BYTE PTR [eax+0x10],0x1
   17596:	lea    eax,[ebp-0x20]
   17599:	push   eax
   1759a:	push   DWORD PTR [esi]
   1759c:	push   ebx
   1759d:	push   edi
   1759e:	push   0xffffffff
   175a0:	call   DWORD PTR ds:0x7ed04
   175a6:	mov    esi,DWORD PTR [ebp-0x8]
   175a9:	test   esi,esi
   175ab:	je     0x175dc
   175ad:	lea    eax,[esi+0x400]
   175b3:	lea    ecx,[eax-0x4]
   175b6:	lea    edx,[eax-0x8]
   175b9:	add    eax,0xfffffff4
   175bc:	push   eax
   175bd:	push   0x20
   175bf:	push   edx
   175c0:	mov    DWORD PTR [ecx],esi
   175c2:	push   ecx
   175c3:	mov    DWORD PTR [edx],0x400
   175c9:	and    DWORD PTR [eax],0x0
   175cc:	push   0xffffffff
   175ce:	call   DWORD PTR ds:0x7ed04
   175d4:	test   eax,eax
   175d6:	jge    0x175dc
   175d8:	and    DWORD PTR [ebp-0x8],0x0
   175dc:	call   0x11a1a
   175e1:	call   eax
   175e3:	call   0x11c66
   175e8:	mov    ecx,DWORD PTR [ebp-0x1c]
   175eb:	call   eax
   175ed:	push   DWORD PTR [ebp-0x10]
   175f0:	call   DWORD PTR ds:0x1f064
   175f6:	pop    edi
   175f7:	pop    ebx
   175f8:	pop    esi
   175f9:	leave  
   175fa:	ret    0x8
   175fd:	int3   
   175fe:	int3   
   175ff:	int3   
   17600:	int3   
   17601:	int3   
   17602:	mov    edi,edi
   17604:	push   ebp
   17605:	mov    ebp,esp
   17607:	cmp    DWORD PTR ds:0x7ed88,0x0
   1760e:	push   esi
   1760f:	mov    esi,DWORD PTR [ebp+0x10]
   17612:	jne    0x176dd
   17618:	push   0x1e7ac
   1761d:	push   0xc
   1761f:	push   0x1e792
   17624:	call   0x16c42
   17629:	push   eax
   1762a:	push   DWORD PTR [ebp+0x8]
   1762d:	call   0x10e28
   17632:	test   al,al
   17634:	je     0x176dd
   1763a:	mov    eax,DWORD PTR [esi+0x4]
   1763d:	push   0x1e758
   17642:	push   0xc
   17644:	push   0x1e74a
   17649:	mov    ds:0x7ed80,eax
   1764e:	call   0x16d38
   17653:	push   eax
   17654:	push   DWORD PTR [esi+0x4]
   17657:	call   0x12366
   1765c:	push   0x1e718
   17661:	push   0xc
   17663:	push   0x1e70a
   17668:	mov    ds:0x7ed88,eax
   1766d:	call   0x16d38
   17672:	push   eax
   17673:	push   DWORD PTR [esi+0x4]
   17676:	call   0x12366
   1767b:	push   0x1e6d4
   17680:	push   0xc
   17682:	push   0x1e6c6
   17687:	mov    ds:0x7ed8c,eax
   1768c:	call   0x16d38
   17691:	push   eax
   17692:	push   DWORD PTR [esi+0x4]
   17695:	call   0x12366
   1769a:	push   0x1e6a4
   1769f:	push   0x5
   176a1:	push   0x1e69e
   176a6:	mov    ds:0x7ed90,eax
   176ab:	call   0x16d38
   176b0:	push   eax
   176b1:	push   DWORD PTR [esi+0x4]
   176b4:	call   0x12366
   176b9:	push   0x1e664
   176be:	push   0x4
   176c0:	push   0x1e65e
   176c5:	mov    ds:0x7ed94,eax
   176ca:	call   0x16d38
   176cf:	push   eax
   176d0:	push   DWORD PTR [esi+0x4]
   176d3:	call   0x12366
   176d8:	mov    ds:0x7ed98,eax
   176dd:	cmp    DWORD PTR ds:0x7ed84,0x0
   176e4:	jne    0x1770c
   176e6:	push   0x1e61e
   176eb:	push   0x9
   176ed:	push   0x1e60a
   176f2:	call   0x16c42
   176f7:	push   eax
   176f8:	push   DWORD PTR [ebp+0x8]
   176fb:	call   0x10e28
   17700:	test   al,al
   17702:	je     0x1770c
   17704:	mov    eax,DWORD PTR [esi+0x4]
   17707:	mov    ds:0x7ed84,eax
   1770c:	pop    esi
   1770d:	pop    ebp
   1770e:	ret    0xc
   17711:	int3   
   17712:	int3   
   17713:	int3   
   17714:	int3   
   17715:	int3   
   17716:	mov    edi,edi
   17718:	push   ebp
   17719:	mov    ebp,esp
   1771b:	sub    esp,0x4c
   1771e:	push   ebx
   1771f:	push   esi
   17720:	push   edi
   17721:	push   DWORD PTR [ebp+0xc]
   17724:	push   DWORD PTR [ebp+0x8]
   17727:	call   DWORD PTR ds:0x7ed10
   1772d:	mov    DWORD PTR [ebp-0x8],eax
   17730:	xor    eax,eax
   17732:	xor    ebx,ebx
   17734:	mov    DWORD PTR [ebp-0x30],ebx
   17737:	lea    edi,[ebp-0x2c]
   1773a:	stos   DWORD PTR es:[edi],eax
   1773b:	stos   DWORD PTR es:[edi],eax
   1773c:	stos   DWORD PTR es:[edi],eax
   1773d:	stos   DWORD PTR es:[edi],eax
   1773e:	xor    eax,eax
   17740:	mov    DWORD PTR [ebp-0x1c],ebx
   17743:	lea    edi,[ebp-0x18]
   17746:	stos   DWORD PTR es:[edi],eax
   17747:	stos   DWORD PTR es:[edi],eax
   17748:	stos   DWORD PTR es:[edi],eax
   17749:	stos   DWORD PTR es:[edi],eax
   1774a:	lea    eax,[ebp-0x30]
   1774d:	push   eax
   1774e:	push   ebx
   1774f:	call   0x10eb6
   17754:	mov    BYTE PTR [ebp+0xf],al
   17757:	lea    eax,[ebp-0x1c]
   1775a:	push   eax
   1775b:	push   0x1
   1775d:	call   0x10eb6
   17762:	mov    BYTE PTR [ebp-0x1],al
   17765:	cmp    BYTE PTR [ebp+0xf],bl
   17768:	je     0x177c9
   1776a:	mov    esi,DWORD PTR [ebp-0x30]
   1776d:	cmp    esi,ebx
   1776f:	je     0x177c9
   17771:	push   0x6
   17773:	pop    ecx
   17774:	push   ebx
   17775:	xor    eax,eax
   17777:	mov    DWORD PTR [ebp-0x4c],ebx
   1777a:	lea    edi,[ebp-0x48]
   1777d:	push   0x1c
   1777f:	rep stos DWORD PTR es:[edi],eax
   17781:	lea    eax,[ebp-0x4c]
   17784:	push   eax
   17785:	push   ebx
   17786:	push   DWORD PTR [ebp+0x8]
   17789:	call   0x11948
   1778e:	call   eax
   17790:	cmp    DWORD PTR [ebp-0x44],esi
   17793:	jne    0x177c9
   17795:	push   ebx
   17796:	push   0x4
   17798:	lea    eax,[ebp+0xc]
   1779b:	push   eax
   1779c:	push   0x9
   1779e:	push   DWORD PTR [ebp+0x8]
   177a1:	mov    DWORD PTR [ebp+0xc],ebx
   177a4:	call   0x11948
   177a9:	call   eax
   177ab:	test   eax,eax
   177ad:	jge    0x177b2
   177af:	mov    DWORD PTR [ebp+0xc],ebx
   177b2:	cmp    DWORD PTR [ebp+0xc],ebx
   177b5:	je     0x177c9
   177b7:	lea    eax,[ebp-0x30]
   177ba:	push   eax
   177bb:	push   DWORD PTR [ebp+0xc]
   177be:	call   0x1733a
   177c3:	push   ebx
   177c4:	call   0x10f4c
   177c9:	cmp    BYTE PTR [ebp-0x1],bl
   177cc:	je     0x17837
   177ce:	mov    esi,DWORD PTR [ebp-0x1c]
   177d1:	cmp    esi,ebx
   177d3:	je     0x17837
   177d5:	cmp    BYTE PTR [ebp-0xc],bl
   177d8:	jne    0x17837
   177da:	push   0x6
   177dc:	pop    ecx
   177dd:	push   ebx
   177de:	xor    eax,eax
   177e0:	mov    DWORD PTR [ebp-0x4c],ebx
   177e3:	lea    edi,[ebp-0x48]
   177e6:	push   0x1c
   177e8:	rep stos DWORD PTR es:[edi],eax
   177ea:	lea    eax,[ebp-0x4c]
   177ed:	push   eax
   177ee:	push   ebx
   177ef:	push   DWORD PTR [ebp+0x8]
   177f2:	call   0x11948
   177f7:	call   eax
   177f9:	cmp    DWORD PTR [ebp-0x44],esi
   177fc:	jne    0x17837
   177fe:	push   ebx
   177ff:	push   0x4
   17801:	lea    eax,[ebp+0xc]
   17804:	push   eax
   17805:	push   0x9
   17807:	push   DWORD PTR [ebp+0x8]
   1780a:	mov    DWORD PTR [ebp+0xc],ebx
   1780d:	call   0x11948
   17812:	call   eax
   17814:	test   eax,eax
   17816:	jge    0x1781b
   17818:	mov    DWORD PTR [ebp+0xc],ebx
   1781b:	cmp    DWORD PTR [ebp+0xc],ebx
   1781e:	je     0x17837
   17820:	lea    eax,[ebp-0x1c]
   17823:	push   eax
   17824:	push   DWORD PTR [ebp+0xc]
   17827:	call   0x12472
   1782c:	lea    eax,[ebp-0x1c]
   1782f:	push   eax
   17830:	push   0x1
   17832:	call   0x10f04
   17837:	mov    eax,DWORD PTR [ebp-0x8]
   1783a:	pop    edi
   1783b:	pop    esi
   1783c:	pop    ebx
   1783d:	leave  
   1783e:	ret    0x8
   17841:	int3   
   17842:	int3   
   17843:	int3   
   17844:	int3   
   17845:	int3   
   17846:	push   0x24
   17848:	push   0x7def8
   1784d:	call   0x1db0c
   17852:	xor    ebx,ebx
   17854:	push   ebx
   17855:	push   ebx
   17856:	push   ebx
   17857:	push   ebx
   17858:	push   0x7eb78
   1785d:	call   DWORD PTR ds:0x1f028
   17863:	cmp    eax,ebx
   17865:	jge    0x17876
   17867:	mov    eax,DWORD PTR [ebp+0x8]
   1786a:	mov    DWORD PTR [eax+0x8],0x4
   17871:	jmp    0x1792e
   17876:	mov    DWORD PTR [ebp-0x4],ebx
   17879:	push   0xffffffff
   1787b:	mov    esi,DWORD PTR [ebp+0x8]
   1787e:	lea    eax,[esi+0xc]
   17881:	push   eax
   17882:	lea    ecx,[ebp-0x24]
   17885:	call   0x1292e
   1788a:	push   0xffffffff
   1788c:	mov    eax,DWORD PTR [ebp-0x20]
   1788f:	lea    eax,[eax+esi*1+0xd]
   17893:	push   eax
   17894:	lea    ecx,[ebp-0x2c]
   17897:	call   0x1292e
   1789c:	push   0xffffffff
   1789e:	push   0x1df3e
   178a3:	lea    ecx,[ebp-0x34]
   178a6:	call   0x110d4
   178ab:	lea    eax,[ebp-0x34]
   178ae:	push   eax
   178af:	lea    eax,[ebp-0x2c]
   178b2:	push   eax
   178b3:	call   0x197be
   178b8:	mov    BYTE PTR [ebp-0x19],al
   178bb:	push   DWORD PTR [ebp-0x34]
   178be:	call   0x1da40
   178c3:	pop    ecx
   178c4:	lea    eax,[ebp-0x24]
   178c7:	mov    ecx,DWORD PTR ds:0x7eb48
   178cd:	push   eax
   178ce:	cmp    BYTE PTR [ebp-0x19],bl
   178d1:	je     0x178da
   178d3:	call   0x16154
   178d8:	jmp    0x178ea
   178da:	call   0x16e9c
   178df:	lea    ecx,[ebp-0x2c]
   178e2:	push   ecx
   178e3:	mov    ecx,eax
   178e5:	call   0x12970
   178ea:	mov    DWORD PTR [esi+0x8],ebx
   178ed:	push   DWORD PTR [ebp-0x2c]
   178f0:	call   0x1da40
   178f5:	push   DWORD PTR [ebp-0x24]
   178f8:	call   0x1da40
   178fd:	pop    ecx
   178fe:	pop    ecx
   178ff:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17906:	jmp    0x17922
   17908:	xor    eax,eax
   1790a:	inc    eax
   1790b:	ret    
   1790c:	mov    esp,DWORD PTR [ebp-0x18]
   1790f:	mov    eax,DWORD PTR [ebp+0x8]
   17912:	mov    DWORD PTR [eax+0x8],0x4
   17919:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17920:	xor    ebx,ebx
   17922:	push   ebx
   17923:	push   0x7eb78
   17928:	call   DWORD PTR ds:0x1f024
   1792e:	call   0x1db51
   17933:	ret    0x4
   17936:	int3   
   17937:	int3   
   17938:	int3   
   17939:	int3   
   1793a:	int3   
   1793b:	int3   
   1793c:	push   0xc
   1793e:	push   0x7df18
   17943:	call   0x1db0c
   17948:	xor    edi,edi
   1794a:	push   edi
   1794b:	push   edi
   1794c:	push   edi
   1794d:	push   edi
   1794e:	push   0x7eb78
   17953:	call   DWORD PTR ds:0x1f028
   17959:	cmp    eax,edi
   1795b:	jge    0x17969
   1795d:	mov    eax,DWORD PTR [ebp+0x8]
   17960:	mov    DWORD PTR [eax+0x8],0x4
   17967:	jmp    0x179df
   17969:	mov    DWORD PTR [ebp-0x4],edi
   1796c:	mov    esi,DWORD PTR [ebp+0x8]
   1796f:	lea    eax,[esi+0x4]
   17972:	mov    ecx,DWORD PTR ds:0x7ebd4
   17978:	push   eax
   17979:	cmp    DWORD PTR [esi],edi
   1797b:	jbe    0x179a8
   1797d:	call   0x16f0c
   17982:	mov    ebx,eax
   17984:	push   DWORD PTR [esi]
   17986:	lea    eax,[esi+0xc]
   17989:	push   eax
   1798a:	lea    ecx,[ebp-0x1c]
   1798d:	call   0x1378c
   17992:	push   eax
   17993:	mov    ecx,ebx
   17995:	call   0x11f04
   1799a:	mov    ecx,DWORD PTR [ebp-0x1c]
   1799d:	cmp    ecx,edi
   1799f:	je     0x179ad
   179a1:	call   0x10aca
   179a6:	jmp    0x179ad
   179a8:	call   0x16b3e
   179ad:	mov    DWORD PTR [esi+0x8],edi
   179b0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   179b7:	jmp    0x179d3
   179b9:	xor    eax,eax
   179bb:	inc    eax
   179bc:	ret    
   179bd:	mov    esp,DWORD PTR [ebp-0x18]
   179c0:	mov    eax,DWORD PTR [ebp+0x8]
   179c3:	mov    DWORD PTR [eax+0x8],0x4
   179ca:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   179d1:	xor    edi,edi
   179d3:	push   edi
   179d4:	push   0x7eb78
   179d9:	call   DWORD PTR ds:0x1f024
   179df:	call   0x1db51
   179e4:	ret    0x4
   179e7:	int3   
   179e8:	int3   
   179e9:	int3   
   179ea:	int3   
   179eb:	int3   
   179ec:	mov    edi,edi
   179ee:	push   ebp
   179ef:	mov    ebp,esp
   179f1:	sub    esp,0x10
   179f4:	and    DWORD PTR [ebp-0xc],0x0
   179f8:	xor    ecx,ecx
   179fa:	mov    DWORD PTR [ebp-0x10],0x1
   17a01:	xor    eax,eax
   17a03:	mov    dl,BYTE PTR [eax+0x7a274]
   17a09:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   17a0d:	inc    ecx
   17a0e:	inc    eax
   17a0f:	and    eax,0xf
   17a12:	cmp    ecx,0x8
   17a15:	jne    0x17a03
   17a17:	push   ecx
   17a18:	lea    eax,[ebp-0x10]
   17a1b:	push   eax
   17a1c:	lea    ecx,[ebp-0x8]
   17a1f:	mov    DWORD PTR [ebp-0x4],0x2
   17a26:	call   0x1378c
   17a2b:	mov    ecx,DWORD PTR ds:0x7ebd4
   17a31:	push   eax
   17a32:	lea    eax,[ebp-0x4]
   17a35:	push   eax
   17a36:	call   0x16f0c
   17a3b:	mov    ecx,eax
   17a3d:	call   0x11f04
   17a42:	mov    ecx,DWORD PTR [ebp-0x8]
   17a45:	test   ecx,ecx
   17a47:	je     0x17a4e
   17a49:	call   0x10aca
   17a4e:	leave  
   17a4f:	ret    
   17a50:	int3   
   17a51:	int3   
   17a52:	int3   
   17a53:	int3   
   17a54:	int3   
   17a55:	int3   
   17a56:	push   0x848
   17a5b:	push   0x7df38
   17a60:	call   0x1de10
   17a65:	xor    ebx,ebx
   17a67:	mov    BYTE PTR [ebp-0x81d],bl
   17a6d:	xor    eax,eax
   17a6f:	mov    WORD PTR [ebp-0x81c],ax
   17a76:	push   0x7fe
   17a7b:	push   ebx
   17a7c:	lea    eax,[ebp-0x81a]
   17a82:	push   eax
   17a83:	call   0x1dae6
   17a88:	add    esp,0xc
   17a8b:	push   0x1e834
   17a90:	push   0x15
   17a92:	push   0x1e808
   17a97:	call   0x16c42
   17a9c:	mov    edx,eax
   17a9e:	mov    cx,WORD PTR [eax]
   17aa1:	inc    eax
   17aa2:	inc    eax
   17aa3:	cmp    cx,bx
   17aa6:	jne    0x17a9e
   17aa8:	sub    eax,edx
   17aaa:	lea    edi,[ebp-0x81c]
   17ab0:	dec    edi
   17ab1:	dec    edi
   17ab2:	mov    cx,WORD PTR [edi+0x2]
   17ab6:	inc    edi
   17ab7:	inc    edi
   17ab8:	cmp    cx,bx
   17abb:	jne    0x17ab2
   17abd:	mov    ecx,eax
   17abf:	mov    esi,edx
   17ac1:	shr    ecx,0x2
   17ac4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17ac6:	mov    ecx,eax
   17ac8:	and    ecx,0x3
   17acb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17acd:	mov    eax,0x7e208
   17ad2:	mov    edx,eax
   17ad4:	mov    cx,WORD PTR [eax]
   17ad7:	inc    eax
   17ad8:	inc    eax
   17ad9:	cmp    cx,bx
   17adc:	jne    0x17ad4
   17ade:	sub    eax,edx
   17ae0:	lea    edi,[ebp-0x81c]
   17ae6:	dec    edi
   17ae7:	dec    edi
   17ae8:	mov    cx,WORD PTR [edi+0x2]
   17aec:	inc    edi
   17aed:	inc    edi
   17aee:	cmp    cx,bx
   17af1:	jne    0x17ae8
   17af3:	mov    ecx,eax
   17af5:	mov    esi,edx
   17af7:	shr    ecx,0x2
   17afa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17afc:	mov    ecx,eax
   17afe:	and    ecx,0x3
   17b01:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b03:	push   0x1e7e2
   17b08:	push   0x4
   17b0a:	push   0x1e5ce
   17b0f:	call   0x16c42
   17b14:	mov    edx,eax
   17b16:	mov    cx,WORD PTR [eax]
   17b19:	inc    eax
   17b1a:	inc    eax
   17b1b:	cmp    cx,bx
   17b1e:	jne    0x17b16
   17b20:	sub    eax,edx
   17b22:	lea    edi,[ebp-0x81c]
   17b28:	dec    edi
   17b29:	dec    edi
   17b2a:	mov    cx,WORD PTR [edi+0x2]
   17b2e:	inc    edi
   17b2f:	inc    edi
   17b30:	cmp    cx,bx
   17b33:	jne    0x17b2a
   17b35:	mov    ecx,eax
   17b37:	mov    esi,edx
   17b39:	shr    ecx,0x2
   17b3c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b3e:	mov    ecx,eax
   17b40:	and    ecx,0x3
   17b43:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b45:	lea    eax,[ebp-0x81c]
   17b4b:	push   eax
   17b4c:	lea    eax,[ebp-0x858]
   17b52:	push   eax
   17b53:	call   0x11c3c
   17b58:	call   eax
   17b5a:	mov    DWORD PTR [ebp-0x824],ebx
   17b60:	xor    eax,eax
   17b62:	lea    edi,[ebp-0x84c]
   17b68:	stos   DWORD PTR es:[edi],eax
   17b69:	stos   DWORD PTR es:[edi],eax
   17b6a:	stos   DWORD PTR es:[edi],eax
   17b6b:	stos   DWORD PTR es:[edi],eax
   17b6c:	stos   DWORD PTR es:[edi],eax
   17b6d:	mov    DWORD PTR [ebp-0x830],ebx
   17b73:	xor    eax,eax
   17b75:	lea    edi,[ebp-0x82c]
   17b7b:	stos   DWORD PTR es:[edi],eax
   17b7c:	mov    DWORD PTR [ebp-0x850],0x18
   17b86:	mov    DWORD PTR [ebp-0x84c],ebx
   17b8c:	mov    DWORD PTR [ebp-0x844],0x240
   17b96:	lea    eax,[ebp-0x858]
   17b9c:	mov    DWORD PTR [ebp-0x848],eax
   17ba2:	mov    DWORD PTR [ebp-0x840],ebx
   17ba8:	mov    DWORD PTR [ebp-0x83c],ebx
   17bae:	push   ebx
   17baf:	push   ebx
   17bb0:	push   0x60
   17bb2:	push   0x1
   17bb4:	push   ebx
   17bb5:	push   0x80
   17bba:	push   ebx
   17bbb:	lea    eax,[ebp-0x830]
   17bc1:	push   eax
   17bc2:	lea    eax,[ebp-0x850]
   17bc8:	push   eax
   17bc9:	push   0x100001
   17bce:	lea    eax,[ebp-0x824]
   17bd4:	push   eax
   17bd5:	call   0x11876
   17bda:	call   eax
   17bdc:	cmp    eax,ebx
   17bde:	jge    0x17be7
   17be0:	xor    al,al
   17be2:	jmp    0x17c7c
   17be7:	mov    DWORD PTR [ebp-0x4],ebx
   17bea:	mov    esi,DWORD PTR [ebp+0xc]
   17bed:	mov    eax,0x10000
   17bf2:	cmp    esi,eax
   17bf4:	jbe    0x17bf8
   17bf6:	mov    esi,eax
   17bf8:	push   esi
   17bf9:	call   0x10a96
   17bfe:	pop    ecx
   17bff:	mov    DWORD PTR [ebp-0x828],eax
   17c05:	mov    DWORD PTR [ebp-0x838],ebx
   17c0b:	xor    eax,eax
   17c0d:	lea    edi,[ebp-0x834]
   17c13:	stos   DWORD PTR es:[edi],eax
   17c14:	push   ebx
   17c15:	lea    eax,[ebp-0x838]
   17c1b:	push   eax
   17c1c:	push   esi
   17c1d:	push   DWORD PTR [ebp-0x828]
   17c23:	lea    eax,[ebp-0x830]
   17c29:	push   eax
   17c2a:	push   ebx
   17c2b:	push   ebx
   17c2c:	push   ebx
   17c2d:	push   DWORD PTR [ebp-0x824]
   17c33:	call   0x11a98
   17c38:	call   eax
   17c3a:	cmp    eax,ebx
   17c3c:	jl     0x17c63
   17c3e:	mov    ecx,DWORD PTR [ebp-0x82c]
   17c44:	mov    edi,DWORD PTR [ebp+0x8]
   17c47:	mov    esi,DWORD PTR [ebp-0x828]
   17c4d:	xor    eax,eax
   17c4f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17c51:	sete   al
   17c54:	mov    BYTE PTR [ebp-0x81d],al
   17c5a:	jmp    0x17c63
   17c5c:	xor    eax,eax
   17c5e:	inc    eax
   17c5f:	ret    
   17c60:	mov    esp,DWORD PTR [ebp-0x18]
   17c63:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17c6a:	push   DWORD PTR [ebp-0x824]
   17c70:	call   DWORD PTR ds:0x1f064
   17c76:	mov    al,BYTE PTR [ebp-0x81d]
   17c7c:	call   0x1de58
   17c81:	ret    0x8
   17c84:	int3   
   17c85:	int3   
   17c86:	int3   
   17c87:	int3   
   17c88:	int3   
   17c89:	int3   
   17c8a:	push   0x874
   17c8f:	push   0x7df58
   17c94:	call   0x1de10
   17c99:	mov    eax,DWORD PTR [ebp+0x8]
   17c9c:	mov    DWORD PTR [ebp-0x830],eax
   17ca2:	xor    ebx,ebx
   17ca4:	mov    BYTE PTR [ebp-0x81d],bl
   17caa:	xor    eax,eax
   17cac:	mov    WORD PTR [ebp-0x81c],ax
   17cb3:	push   0x7fe
   17cb8:	push   ebx
   17cb9:	lea    eax,[ebp-0x81a]
   17cbf:	push   eax
   17cc0:	call   0x1dae6
   17cc5:	add    esp,0xc
   17cc8:	push   0x1e88c
   17ccd:	push   0x15
   17ccf:	push   0x1e808
   17cd4:	call   0x16c42
   17cd9:	mov    edx,eax
   17cdb:	mov    cx,WORD PTR [eax]
   17cde:	inc    eax
   17cdf:	inc    eax
   17ce0:	cmp    cx,bx
   17ce3:	jne    0x17cdb
   17ce5:	sub    eax,edx
   17ce7:	lea    edi,[ebp-0x81c]
   17ced:	dec    edi
   17cee:	dec    edi
   17cef:	mov    cx,WORD PTR [edi+0x2]
   17cf3:	inc    edi
   17cf4:	inc    edi
   17cf5:	cmp    cx,bx
   17cf8:	jne    0x17cef
   17cfa:	mov    ecx,eax
   17cfc:	mov    esi,edx
   17cfe:	shr    ecx,0x2
   17d01:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d03:	mov    ecx,eax
   17d05:	and    ecx,0x3
   17d08:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d0a:	mov    eax,0x7e208
   17d0f:	mov    edx,eax
   17d11:	mov    cx,WORD PTR [eax]
   17d14:	inc    eax
   17d15:	inc    eax
   17d16:	cmp    cx,bx
   17d19:	jne    0x17d11
   17d1b:	sub    eax,edx
   17d1d:	lea    edi,[ebp-0x81c]
   17d23:	dec    edi
   17d24:	dec    edi
   17d25:	mov    cx,WORD PTR [edi+0x2]
   17d29:	inc    edi
   17d2a:	inc    edi
   17d2b:	cmp    cx,bx
   17d2e:	jne    0x17d25
   17d30:	mov    ecx,eax
   17d32:	mov    esi,edx
   17d34:	shr    ecx,0x2
   17d37:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d39:	mov    ecx,eax
   17d3b:	and    ecx,0x3
   17d3e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d40:	push   0x1e866
   17d45:	push   0x4
   17d47:	push   0x1e5ce
   17d4c:	call   0x16c42
   17d51:	mov    edx,eax
   17d53:	mov    cx,WORD PTR [eax]
   17d56:	inc    eax
   17d57:	inc    eax
   17d58:	cmp    cx,bx
   17d5b:	jne    0x17d53
   17d5d:	sub    eax,edx
   17d5f:	lea    edi,[ebp-0x81c]
   17d65:	dec    edi
   17d66:	dec    edi
   17d67:	mov    cx,WORD PTR [edi+0x2]
   17d6b:	inc    edi
   17d6c:	inc    edi
   17d6d:	cmp    cx,bx
   17d70:	jne    0x17d67
   17d72:	mov    ecx,eax
   17d74:	mov    esi,edx
   17d76:	shr    ecx,0x2
   17d79:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d7b:	mov    ecx,eax
   17d7d:	and    ecx,0x3
   17d80:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d82:	lea    eax,[ebp-0x81c]
   17d88:	push   eax
   17d89:	lea    eax,[ebp-0x884]
   17d8f:	push   eax
   17d90:	call   0x11c3c
   17d95:	call   eax
   17d97:	mov    DWORD PTR [ebp-0x824],ebx
   17d9d:	xor    eax,eax
   17d9f:	lea    edi,[ebp-0x850]
   17da5:	stos   DWORD PTR es:[edi],eax
   17da6:	stos   DWORD PTR es:[edi],eax
   17da7:	stos   DWORD PTR es:[edi],eax
   17da8:	stos   DWORD PTR es:[edi],eax
   17da9:	stos   DWORD PTR es:[edi],eax
   17daa:	mov    DWORD PTR [ebp-0x82c],ebx
   17db0:	xor    eax,eax
   17db2:	lea    edi,[ebp-0x828]
   17db8:	stos   DWORD PTR es:[edi],eax
   17db9:	mov    DWORD PTR [ebp-0x854],0x18
   17dc3:	mov    DWORD PTR [ebp-0x850],ebx
   17dc9:	mov    DWORD PTR [ebp-0x848],0x240
   17dd3:	lea    eax,[ebp-0x884]
   17dd9:	mov    DWORD PTR [ebp-0x84c],eax
   17ddf:	mov    DWORD PTR [ebp-0x844],ebx
   17de5:	mov    DWORD PTR [ebp-0x840],ebx
   17deb:	push   ebx
   17dec:	push   ebx
   17ded:	push   0x60
   17def:	push   ebx
   17df0:	push   ebx
   17df1:	push   0x80
   17df6:	push   ebx
   17df7:	lea    eax,[ebp-0x82c]
   17dfd:	push   eax
   17dfe:	lea    eax,[ebp-0x854]
   17e04:	push   eax
   17e05:	push   0x100002
   17e0a:	lea    eax,[ebp-0x824]
   17e10:	push   eax
   17e11:	call   0x11876
   17e16:	call   eax
   17e18:	cmp    eax,ebx
   17e1a:	jge    0x17e23
   17e1c:	xor    al,al
   17e1e:	jmp    0x17f28
   17e23:	mov    DWORD PTR [ebp-0x4],ebx
   17e26:	xor    eax,eax
   17e28:	lea    edi,[ebp-0x82c]
   17e2e:	stos   DWORD PTR es:[edi],eax
   17e2f:	stos   DWORD PTR es:[edi],eax
   17e30:	xor    edi,edi
   17e32:	mov    esi,0x10000
   17e37:	mov    DWORD PTR [ebp-0x834],edi
   17e3d:	mov    eax,DWORD PTR [ebp+0xc]
   17e40:	cmp    edi,eax
   17e42:	jae    0x17e8d
   17e44:	mov    DWORD PTR [ebp-0x83c],ebx
   17e4a:	mov    DWORD PTR [ebp-0x83c],edi
   17e50:	mov    DWORD PTR [ebp-0x838],ebx
   17e56:	sub    eax,edi
   17e58:	cmp    eax,esi
   17e5a:	jb     0x17e5e
   17e5c:	mov    eax,esi
   17e5e:	push   ebx
   17e5f:	push   ebx
   17e60:	push   eax
   17e61:	mov    eax,DWORD PTR [ebp-0x830]
   17e67:	add    eax,edi
   17e69:	push   eax
   17e6a:	lea    eax,[ebp-0x82c]
   17e70:	push   eax
   17e71:	push   ebx
   17e72:	push   ebx
   17e73:	push   ebx
   17e74:	push   DWORD PTR [ebp-0x824]
   17e7a:	call   0x11aec
   17e7f:	call   eax
   17e81:	cmp    eax,ebx
   17e83:	jl     0x17f0f
   17e89:	add    edi,esi
   17e8b:	jmp    0x17e37
   17e8d:	mov    BYTE PTR [ebp-0x81d],0x1
   17e94:	mov    DWORD PTR [ebp-0x87c],ebx
   17e9a:	push   0x9
   17e9c:	pop    ecx
   17e9d:	xor    eax,eax
   17e9f:	lea    edi,[ebp-0x878]
   17ea5:	rep stos DWORD PTR es:[edi],eax
   17ea7:	mov    eax,DWORD PTR [ebp+0x10]
   17eaa:	mov    DWORD PTR [ebp-0x86c],eax
   17eb0:	mov    ecx,DWORD PTR [ebp+0x14]
   17eb3:	mov    DWORD PTR [ebp-0x868],ecx
   17eb9:	mov    DWORD PTR [ebp-0x874],eax
   17ebf:	mov    DWORD PTR [ebp-0x870],ecx
   17ec5:	mov    DWORD PTR [ebp-0x864],eax
   17ecb:	mov    DWORD PTR [ebp-0x860],ecx
   17ed1:	mov    DWORD PTR [ebp-0x87c],eax
   17ed7:	mov    DWORD PTR [ebp-0x878],ecx
   17edd:	mov    DWORD PTR [ebp-0x85c],0x80
   17ee7:	push   0x4
   17ee9:	push   0x28
   17eeb:	lea    eax,[ebp-0x87c]
   17ef1:	push   eax
   17ef2:	lea    eax,[ebp-0x82c]
   17ef8:	push   eax
   17ef9:	push   DWORD PTR [ebp-0x824]
   17eff:	call   0x11ac2
   17f04:	call   eax
   17f06:	jmp    0x17f0f
   17f08:	xor    eax,eax
   17f0a:	inc    eax
   17f0b:	ret    
   17f0c:	mov    esp,DWORD PTR [ebp-0x18]
   17f0f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17f16:	push   DWORD PTR [ebp-0x824]
   17f1c:	call   DWORD PTR ds:0x1f064
   17f22:	mov    al,BYTE PTR [ebp-0x81d]
   17f28:	call   0x1de58
   17f2d:	ret    0x10
   17f30:	int3   
   17f31:	int3   
   17f32:	int3   
   17f33:	int3   
   17f34:	int3   
   17f35:	int3   
   17f36:	push   0x874
   17f3b:	push   0x7df78
   17f40:	call   0x1de10
   17f45:	xor    ebx,ebx
   17f47:	mov    BYTE PTR [ebp-0x81d],bl
   17f4d:	mov    BYTE PTR [ebp-0x81e],bl
   17f53:	mov    DWORD PTR [ebp-0x828],ebx
   17f59:	mov    DWORD PTR [ebp-0x824],ebx
   17f5f:	xor    eax,eax
   17f61:	mov    WORD PTR [ebp-0x81c],ax
   17f68:	push   0x7fe
   17f6d:	push   ebx
   17f6e:	lea    eax,[ebp-0x81a]
   17f74:	push   eax
   17f75:	call   0x1dae6
   17f7a:	add    esp,0xc
   17f7d:	push   0x1e906
   17f82:	push   0x15
   17f84:	push   0x1e808
   17f89:	call   0x16c42
   17f8e:	mov    edx,eax
   17f90:	mov    cx,WORD PTR [eax]
   17f93:	inc    eax
   17f94:	inc    eax
   17f95:	cmp    cx,bx
   17f98:	jne    0x17f90
   17f9a:	sub    eax,edx
   17f9c:	lea    edi,[ebp-0x81c]
   17fa2:	dec    edi
   17fa3:	dec    edi
   17fa4:	mov    cx,WORD PTR [edi+0x2]
   17fa8:	inc    edi
   17fa9:	inc    edi
   17faa:	cmp    cx,bx
   17fad:	jne    0x17fa4
   17faf:	mov    ecx,eax
   17fb1:	mov    esi,edx
   17fb3:	shr    ecx,0x2
   17fb6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17fb8:	mov    ecx,eax
   17fba:	and    ecx,0x3
   17fbd:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17fbf:	mov    eax,0x7e248
   17fc4:	mov    edx,eax
   17fc6:	mov    cx,WORD PTR [eax]
   17fc9:	inc    eax
   17fca:	inc    eax
   17fcb:	cmp    cx,bx
   17fce:	jne    0x17fc6
   17fd0:	sub    eax,edx
   17fd2:	lea    edi,[ebp-0x81c]
   17fd8:	dec    edi
   17fd9:	dec    edi
   17fda:	mov    cx,WORD PTR [edi+0x2]
   17fde:	inc    edi
   17fdf:	inc    edi
   17fe0:	cmp    cx,bx
   17fe3:	jne    0x17fda
   17fe5:	mov    ecx,eax
   17fe7:	mov    esi,edx
   17fe9:	shr    ecx,0x2
   17fec:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17fee:	mov    ecx,eax
   17ff0:	and    ecx,0x3
   17ff3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17ff5:	push   0x1e8d0
   17ffa:	push   0x4
   17ffc:	push   0x1e8c6
   18001:	call   0x16c42
   18006:	mov    edx,eax
   18008:	mov    cx,WORD PTR [eax]
   1800b:	inc    eax
   1800c:	inc    eax
   1800d:	cmp    cx,bx
   18010:	jne    0x18008
   18012:	sub    eax,edx
   18014:	lea    edi,[ebp-0x81c]
   1801a:	dec    edi
   1801b:	dec    edi
   1801c:	mov    cx,WORD PTR [edi+0x2]
   18020:	inc    edi
   18021:	inc    edi
   18022:	cmp    cx,bx
   18025:	jne    0x1801c
   18027:	mov    ecx,eax
   18029:	mov    esi,edx
   1802b:	shr    ecx,0x2
   1802e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18030:	mov    ecx,eax
   18032:	and    ecx,0x3
   18035:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18037:	lea    eax,[ebp-0x81c]
   1803d:	push   eax
   1803e:	lea    eax,[ebp-0x85c]
   18044:	push   eax
   18045:	call   0x11c3c
   1804a:	call   eax
   1804c:	xor    eax,eax
   1804e:	lea    edi,[ebp-0x850]
   18054:	stos   DWORD PTR es:[edi],eax
   18055:	stos   DWORD PTR es:[edi],eax
   18056:	stos   DWORD PTR es:[edi],eax
   18057:	stos   DWORD PTR es:[edi],eax
   18058:	stos   DWORD PTR es:[edi],eax
   18059:	mov    DWORD PTR [ebp-0x834],ebx
   1805f:	xor    eax,eax
   18061:	lea    edi,[ebp-0x830]
   18067:	stos   DWORD PTR es:[edi],eax
   18068:	mov    DWORD PTR [ebp-0x82c],ebx
   1806e:	mov    DWORD PTR [ebp-0x854],0x18
   18078:	mov    DWORD PTR [ebp-0x850],ebx
   1807e:	mov    DWORD PTR [ebp-0x848],0x240
   18088:	lea    eax,[ebp-0x85c]
   1808e:	mov    DWORD PTR [ebp-0x84c],eax
   18094:	mov    DWORD PTR [ebp-0x844],ebx
   1809a:	mov    DWORD PTR [ebp-0x840],ebx
   180a0:	push   ebx
   180a1:	push   ebx
   180a2:	push   ebx
   180a3:	push   0x1
   180a5:	push   0x7
   180a7:	push   ebx
   180a8:	push   ebx
   180a9:	lea    eax,[ebp-0x834]
   180af:	push   eax
   180b0:	lea    eax,[ebp-0x854]
   180b6:	push   eax
   180b7:	push   0x89
   180bc:	lea    eax,[ebp-0x82c]
   180c2:	push   eax
   180c3:	call   0x11876
   180c8:	call   eax
   180ca:	cmp    eax,ebx
   180cc:	jge    0x180d5
   180ce:	xor    al,al
   180d0:	jmp    0x181f4
   180d5:	mov    DWORD PTR [ebp-0x884],ebx
   180db:	push   0x9
   180dd:	pop    ecx
   180de:	xor    eax,eax
   180e0:	lea    edi,[ebp-0x880]
   180e6:	rep stos DWORD PTR es:[edi],eax
   180e8:	mov    DWORD PTR [ebp-0x4],ebx
   180eb:	push   0x4
   180ed:	push   0x28
   180ef:	lea    eax,[ebp-0x884]
   180f5:	push   eax
   180f6:	lea    eax,[ebp-0x834]
   180fc:	push   eax
   180fd:	push   DWORD PTR [ebp-0x82c]
   18103:	call   0x11b16
   18108:	call   eax
   1810a:	cmp    eax,ebx
   1810c:	jl     0x1818a
   1810e:	mov    esi,0x5b1a3
   18113:	push   esi
   18114:	call   0x10a96
   18119:	mov    edi,eax
   1811b:	push   esi
   1811c:	push   0x1f0a8
   18121:	push   edi
   18122:	call   0x1dac2
   18127:	add    esp,0x10
   1812a:	push   0x25
   1812c:	push   0x7a24c
   18131:	push   esi
   18132:	push   edi
   18133:	call   0x10aea
   18138:	lea    eax,[ebp-0x828]
   1813e:	push   eax
   1813f:	push   esi
   18140:	push   edi
   18141:	lea    eax,[ebp-0x83c]
   18147:	push   eax
   18148:	call   0x1a038
   1814d:	mov    BYTE PTR [ebp-0x83c],bl
   18153:	mov    eax,DWORD PTR [ebp-0x838]
   18159:	mov    DWORD PTR [ebp-0x824],eax
   1815f:	cmp    eax,ebx
   18161:	je     0x1817c
   18163:	push   DWORD PTR [ebp-0x828]
   18169:	push   eax
   1816a:	call   0x17a56
   1816f:	test   al,al
   18171:	je     0x1817c
   18173:	mov    BYTE PTR [ebp-0x81d],0x1
   1817a:	jmp    0x1818a
   1817c:	mov    BYTE PTR [ebp-0x81d],0x1
   18183:	mov    BYTE PTR [ebp-0x81e],0x1
   1818a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18191:	jmp    0x181a3
   18193:	xor    eax,eax
   18195:	inc    eax
   18196:	ret    
   18197:	mov    esp,DWORD PTR [ebp-0x18]
   1819a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181a1:	xor    ebx,ebx
   181a3:	push   DWORD PTR [ebp-0x82c]
   181a9:	call   DWORD PTR ds:0x1f064
   181af:	cmp    BYTE PTR [ebp-0x81e],bl
   181b5:	je     0x181da
   181b7:	push   DWORD PTR [ebp-0x880]
   181bd:	push   DWORD PTR [ebp-0x884]
   181c3:	push   DWORD PTR [ebp-0x828]
   181c9:	push   DWORD PTR [ebp-0x824]
   181cf:	call   0x17c8a
   181d4:	mov    BYTE PTR [ebp-0x81d],al
   181da:	cmp    DWORD PTR [ebp-0x824],ebx
   181e0:	je     0x181ee
   181e2:	push   DWORD PTR [ebp-0x824]
   181e8:	call   0x1da40
   181ed:	pop    ecx
   181ee:	mov    al,BYTE PTR [ebp-0x81d]
   181f4:	call   0x1de58
   181f9:	ret    
   181fa:	int3   
   181fb:	int3   
   181fc:	int3   
   181fd:	int3   
   181fe:	int3   
   181ff:	int3   
   18200:	mov    edi,edi
   18202:	push   ebp
   18203:	mov    ebp,esp
   18205:	sub    esp,0xbc
   1820b:	mov    eax,ds:0x7eb3c
   18210:	xor    eax,ebp
   18212:	mov    DWORD PTR [ebp-0x4],eax
   18215:	push   ebx
   18216:	push   edi
   18217:	push   0x1e942
   1821c:	push   0xb
   1821e:	push   0x1e92a
   18223:	call   0x16c42
   18228:	push   eax
   18229:	lea    eax,[ebp-0xbc]
   1822f:	push   eax
   18230:	call   0x11c3c
   18235:	call   eax
   18237:	xor    eax,eax
   18239:	lea    edi,[ebp-0xb0]
   1823f:	stos   DWORD PTR es:[edi],eax
   18240:	stos   DWORD PTR es:[edi],eax
   18241:	stos   DWORD PTR es:[edi],eax
   18242:	stos   DWORD PTR es:[edi],eax
   18243:	xor    ebx,ebx
   18245:	push   ebx
   18246:	stos   DWORD PTR es:[edi],eax
   18247:	push   ebx
   18248:	push   ebx
   18249:	push   0x1
   1824b:	xor    eax,eax
   1824d:	push   0x7
   1824f:	push   ebx
   18250:	mov    DWORD PTR [ebp-0x94],ebx
   18256:	lea    edi,[ebp-0x90]
   1825c:	stos   DWORD PTR es:[edi],eax
   1825d:	lea    eax,[ebp-0xbc]
   18263:	mov    DWORD PTR [ebp-0xac],eax
   18269:	push   ebx
   1826a:	lea    eax,[ebp-0x94]
   18270:	push   eax
   18271:	lea    eax,[ebp-0xb4]
   18277:	push   eax
   18278:	push   0x89
   1827d:	lea    eax,[ebp-0x8c]
   18283:	push   eax
   18284:	mov    DWORD PTR [ebp-0x8c],ebx
   1828a:	mov    DWORD PTR [ebp-0xb4],0x18
   18294:	mov    DWORD PTR [ebp-0xb0],ebx
   1829a:	mov    DWORD PTR [ebp-0xa8],0x240
   182a4:	mov    DWORD PTR [ebp-0xa4],ebx
   182aa:	mov    DWORD PTR [ebp-0xa0],ebx
   182b0:	call   0x11876
   182b5:	call   eax
   182b7:	test   eax,eax
   182b9:	jge    0x182c2
   182bb:	xor    al,al
   182bd:	jmp    0x18399
   182c2:	push   esi
   182c3:	mov    esi,0x20c
   182c8:	push   esi
   182c9:	call   0x10a96
   182ce:	pop    ecx
   182cf:	push   ebx
   182d0:	push   ebx
   182d1:	push   esi
   182d2:	mov    edi,eax
   182d4:	push   edi
   182d5:	lea    eax,[ebp-0x94]
   182db:	push   eax
   182dc:	push   ebx
   182dd:	push   ebx
   182de:	push   ebx
   182df:	lea    eax,[ebp-0x8c]
   182e5:	cmp    edi,ebx
   182e7:	push   eax
   182e8:	setne  BYTE PTR [ebp-0x9c]
   182ef:	call   0x11a98
   182f4:	call   eax
   182f6:	push   0x1
   182f8:	push   esi
   182f9:	push   edi
   182fa:	lea    eax,[ebp-0x94]
   18300:	push   eax
   18301:	push   DWORD PTR [ebp-0x8c]
   18307:	call   0x1184c
   1830c:	call   eax
   1830e:	push   DWORD PTR [ebp-0x8c]
   18314:	mov    esi,eax
   18316:	call   DWORD PTR ds:0x1f064
   1831c:	cmp    esi,ebx
   1831e:	pop    esi
   1831f:	jge    0x18332
   18321:	cmp    BYTE PTR [ebp-0x9c],bl
   18327:	je     0x182bb
   18329:	push   edi
   1832a:	call   0x1da40
   1832f:	pop    ecx
   18330:	jmp    0x182bb
   18332:	push   0x7
   18334:	push   0x1
   18336:	lea    eax,[ebp-0x84]
   1833c:	push   eax
   1833d:	push   DWORD PTR [edi+0x8]
   18340:	call   0x10840
   18345:	mov    ecx,0x7e208
   1834a:	lea    eax,[ebp-0x84]
   18350:	mov    dx,WORD PTR [eax]
   18353:	cmp    dx,WORD PTR [ecx]
   18356:	jne    0x18376
   18358:	cmp    dx,bx
   1835b:	je     0x18372
   1835d:	mov    dx,WORD PTR [eax+0x2]
   18361:	cmp    dx,WORD PTR [ecx+0x2]
   18365:	jne    0x18376
   18367:	add    eax,0x4
   1836a:	add    ecx,0x4
   1836d:	cmp    dx,bx
   18370:	jne    0x18350
   18372:	xor    eax,eax
   18374:	jmp    0x1837b
   18376:	sbb    eax,eax
   18378:	sbb    eax,0xffffffff
   1837b:	cmp    eax,ebx
   1837d:	sete   BYTE PTR [ebp-0x85]
   18384:	cmp    BYTE PTR [ebp-0x9c],bl
   1838a:	je     0x18393
   1838c:	push   edi
   1838d:	call   0x1da40
   18392:	pop    ecx
   18393:	mov    al,BYTE PTR [ebp-0x85]
   18399:	mov    ecx,DWORD PTR [ebp-0x4]
   1839c:	pop    edi
   1839d:	xor    ecx,ebp
   1839f:	pop    ebx
   183a0:	call   0x1da5d
   183a5:	leave  
   183a6:	ret    
   183a7:	int3   
   183a8:	int3   
   183a9:	int3   
   183aa:	int3   
   183ab:	int3   
   183ac:	push   0x0
   183ae:	push   0x19
   183b0:	call   0x10a20
   183b5:	test   edx,edx
   183b7:	jl     0x183f4
   183b9:	jg     0x183c0
   183bb:	cmp    eax,0x3
   183be:	jbe    0x183f4
   183c0:	mov    DWORD PTR ds:0x7eb24,0x2
   183ca:	call   0x1a1d6
   183cf:	push   0x1e9e6
   183d4:	push   0x34
   183d6:	push   0x1e97c
   183db:	call   0x16c42
   183e0:	mov    edx,0x7e2c8
   183e5:	movzx  ecx,WORD PTR [eax]
   183e8:	inc    eax
   183e9:	mov    WORD PTR [edx],cx
   183ec:	inc    eax
   183ed:	inc    edx
   183ee:	inc    edx
   183ef:	test   cx,cx
   183f2:	jne    0x183e5
   183f4:	ret    
   183f5:	int3   
   183f6:	int3   
   183f7:	int3   
   183f8:	int3   
   183f9:	int3   
   183fa:	mov    edi,edi
   183fc:	push   ebp
   183fd:	mov    ebp,esp
   183ff:	push   esi
   18400:	mov    esi,ecx
   18402:	lea    ecx,[esi+0x4]
   18405:	mov    DWORD PTR [esi],0x7a284
   1840b:	mov    BYTE PTR [ecx+0x8],0x0
   1840f:	call   0x14646
   18414:	lea    ecx,[esi+0x14]
   18417:	mov    BYTE PTR [ecx+0x8],0x0
   1841b:	call   0x14494
   18420:	mov    eax,DWORD PTR [ebp+0x8]
   18423:	mov    DWORD PTR [esi+0x24],eax
   18426:	mov    eax,DWORD PTR [ebp+0xc]
   18429:	mov    DWORD PTR [esi+0x28],eax
   1842c:	mov    eax,esi
   1842e:	pop    esi
   1842f:	pop    ebp
   18430:	ret    0x8
   18433:	int3   
   18434:	int3   
   18435:	int3   
   18436:	int3   
   18437:	int3   
   18438:	mov    edi,edi
   1843a:	push   esi
   1843b:	mov    esi,ecx
   1843d:	lea    ecx,[esi+0x14]
   18440:	mov    DWORD PTR [esi],0x7a284
   18446:	call   0x160a2
   1844b:	lea    ecx,[esi+0x4]
   1844e:	pop    esi
   1844f:	jmp    0x16a50
   18454:	int3   
   18455:	int3   
   18456:	int3   
   18457:	int3   
   18458:	int3   
   18459:	int3   
   1845a:	mov    edi,edi
   1845c:	push   ebp
   1845d:	mov    ebp,esp
   1845f:	sub    esp,0x124
   18465:	push   ebx
   18466:	push   esi
   18467:	push   edi
   18468:	mov    esi,ecx
   1846a:	call   0x16f52
   1846f:	push   DWORD PTR [ebp+0x8]
   18472:	lea    eax,[ebp-0x4]
   18475:	lea    edi,[esi+0x4]
   18478:	push   eax
   18479:	mov    ecx,edi
   1847b:	call   0x13cd2
   18480:	mov    ebx,DWORD PTR [ebp-0x4]
   18483:	cmp    ebx,DWORD PTR [esi+0x8]
   18486:	je     0x184d1
   18488:	mov    eax,DWORD PTR [esi+0x18]
   1848b:	lea    ecx,[ebp+0x8]
   1848e:	mov    DWORD PTR [ebp+0x8],eax
   18491:	call   0x13cb2
   18496:	mov    edi,DWORD PTR [eax]
   18498:	lea    eax,[ebx+0x68]
   1849b:	add    esi,0x14
   1849e:	inc    edi
   1849f:	push   eax
   184a0:	mov    ecx,esi
   184a2:	mov    DWORD PTR [ebp+0x8],edi
   184a5:	mov    DWORD PTR [ebp-0x4],eax
   184a8:	call   0x14d8c
   184ad:	lea    eax,[ebp+0x8]
   184b0:	push   eax
   184b1:	lea    eax,[ebp-0xc]
   184b4:	push   eax
   184b5:	mov    ecx,esi
   184b7:	call   0x16078
   184bc:	push   DWORD PTR [ebp+0xc]
   184bf:	lea    ecx,[ebx+0x18]
   184c2:	call   0x129fe
   184c7:	mov    eax,DWORD PTR [ebp-0x4]
   184ca:	mov    DWORD PTR [eax],edi
   184cc:	jmp    0x18566
   184d1:	lea    ecx,[ebp-0x64]
   184d4:	call   0x136a8
   184d9:	xor    eax,eax
   184db:	cmp    DWORD PTR [esi+0x20],eax
   184de:	je     0x184f1
   184e0:	mov    eax,DWORD PTR [esi+0x18]
   184e3:	lea    ecx,[ebp-0x4]
   184e6:	mov    DWORD PTR [ebp-0x4],eax
   184e9:	call   0x13cb2
   184ee:	mov    eax,DWORD PTR [eax]
   184f0:	inc    eax
   184f1:	push   DWORD PTR [ebp+0xc]
   184f4:	lea    ecx,[ebp-0x64]
   184f7:	mov    DWORD PTR [ebp-0x4],eax
   184fa:	mov    DWORD PTR [ebp-0x14],eax
   184fd:	call   0x129fe
   18502:	lea    eax,[ebp-0x64]
   18505:	push   eax
   18506:	push   DWORD PTR [ebp+0x8]
   18509:	lea    ecx,[ebp-0x124]
   1850f:	call   0x135d8
   18514:	lea    eax,[ebp-0x124]
   1851a:	push   eax
   1851b:	lea    ecx,[ebp-0xc4]
   18521:	call   0x134d8
   18526:	lea    eax,[ebp-0xc4]
   1852c:	push   eax
   1852d:	lea    eax,[ebp-0xc]
   18530:	push   eax
   18531:	mov    ecx,edi
   18533:	call   0x16a26
   18538:	lea    ecx,[ebp-0xc4]
   1853e:	call   0x12a84
   18543:	lea    ecx,[ebp-0x124]
   18549:	call   0x12a84
   1854e:	lea    eax,[ebp-0x4]
   18551:	push   eax
   18552:	lea    eax,[ebp-0xc]
   18555:	push   eax
   18556:	lea    ecx,[esi+0x14]
   18559:	call   0x16078
   1855e:	lea    ecx,[ebp-0x64]
   18561:	call   0x11ea2
   18566:	pop    edi
   18567:	pop    esi
   18568:	pop    ebx
   18569:	leave  
   1856a:	ret    0x8
   1856d:	int3   
   1856e:	int3   
   1856f:	int3   
   18570:	int3   
   18571:	int3   
   18572:	mov    edi,edi
   18574:	push   ebp
   18575:	mov    ebp,esp
   18577:	sub    esp,0x10
   1857a:	call   0x1a25a
   1857f:	test   al,al
   18581:	jne    0x1858b
   18583:	mov    eax,DWORD PTR [ebp+0x8]
   18586:	jmp    0x1861f
   1858b:	push   esi
   1858c:	mov    esi,DWORD PTR [ebp+0x8]
   1858f:	push   0xffffffff
   18591:	push   esi
   18592:	lea    ecx,[ebp-0x8]
   18595:	call   0x11178
   1859a:	mov    ecx,DWORD PTR ds:0x7f860
   185a0:	lea    eax,[ebp-0x8]
   185a3:	push   eax
   185a4:	lea    eax,[ebp+0x8]
   185a7:	push   eax
   185a8:	call   0x141c2
   185ad:	mov    eax,DWORD PTR [ebp+0x8]
   185b0:	mov    ecx,DWORD PTR ds:0x7f860
   185b6:	cmp    eax,DWORD PTR [ecx+0x4]
   185b9:	jne    0x185ea
   185bb:	lea    eax,[ebp-0x8]
   185be:	push   eax
   185bf:	lea    ecx,[ebp-0x10]
   185c2:	call   0x12ade
   185c7:	mov    ecx,DWORD PTR ds:0x7f860
   185cd:	lea    eax,[ebp-0x10]
   185d0:	push   eax
   185d1:	lea    eax,[ebp-0x8]
   185d4:	push   eax
   185d5:	call   0x17004
   185da:	mov    ecx,eax
   185dc:	call   0x12b00
   185e1:	push   DWORD PTR [ebp-0x10]
   185e4:	call   0x1da40
   185e9:	pop    ecx
   185ea:	mov    ecx,DWORD PTR ds:0x7f860
   185f0:	lea    eax,[ebp-0x8]
   185f3:	push   eax
   185f4:	lea    eax,[ebp+0x8]
   185f7:	push   eax
   185f8:	call   0x141c2
   185fd:	mov    eax,DWORD PTR [ebp+0x8]
   18600:	mov    ecx,DWORD PTR ds:0x7f860
   18606:	cmp    eax,DWORD PTR [ecx+0x4]
   18609:	je     0x1860e
   1860b:	mov    esi,DWORD PTR [eax+0x14]
   1860e:	call   0x1a1c2
   18613:	push   DWORD PTR [ebp-0x8]
   18616:	call   0x1da40
   1861b:	pop    ecx
   1861c:	mov    eax,esi
   1861e:	pop    esi
   1861f:	leave  
   18620:	ret    0x4
   18623:	int3   
   18624:	int3   
   18625:	int3   
   18626:	int3   
   18627:	int3   
   18628:	mov    edi,edi
   1862a:	push   ebp
   1862b:	mov    ebp,esp
   1862d:	push   esi
   1862e:	mov    esi,ecx
   18630:	call   0x18438
   18635:	test   BYTE PTR [ebp+0x8],0x1
   18639:	je     0x18642
   1863b:	push   esi
   1863c:	call   0x1da40
   18641:	pop    ecx
   18642:	mov    eax,esi
   18644:	pop    esi
   18645:	pop    ebp
   18646:	ret    0x4
   18649:	int3   
   1864a:	int3   
   1864b:	int3   
   1864c:	int3   
   1864d:	int3   
   1864e:	mov    edi,edi
   18650:	push   ebp
   18651:	mov    ebp,esp
   18653:	push   esi
   18654:	push   DWORD PTR [ebp+0xc]
   18657:	mov    esi,ecx
   18659:	push   DWORD PTR [ebp+0x8]
   1865c:	call   0x183fa
   18661:	mov    eax,esi
   18663:	pop    esi
   18664:	pop    ebp
   18665:	ret    0x8
   18668:	int3   
   18669:	int3   
   1866a:	int3   
   1866b:	int3   
   1866c:	int3   
   1866d:	int3   
   1866e:	push   0x33c
   18673:	push   0x7df98
   18678:	call   0x1de10
   1867d:	mov    esi,DWORD PTR [ebp+0xc]
   18680:	mov    DWORD PTR [ebp-0x32c],esi
   18686:	call   DWORD PTR ds:0x1f000
   1868c:	xor    ebx,ebx
   1868e:	cmp    BYTE PTR [ebp+0x10],bl
   18691:	jne    0x186cf
   18693:	push   esi
   18694:	mov    ecx,DWORD PTR ds:0x7eb70
   1869a:	call   0x15e1c
   1869f:	mov    edi,eax
   186a1:	push   esi
   186a2:	mov    ecx,DWORD PTR ds:0x7eb70
   186a8:	call   0x16654
   186ad:	mov    eax,edi
   186af:	dec    eax
   186b0:	je     0x186c4
   186b2:	dec    eax
   186b3:	je     0x186c0
   186b5:	dec    eax
   186b6:	jne    0x188a9
   186bc:	push   0xa
   186be:	jmp    0x186c5
   186c0:	push   0x2
   186c2:	jmp    0x186c5
   186c4:	push   ebx
   186c5:	call   0x11008
   186ca:	jmp    0x188a9
   186cf:	mov    DWORD PTR [ebp-0x320],ebx
   186d5:	xor    eax,eax
   186d7:	lea    edi,[ebp-0x326]
   186dd:	stos   DWORD PTR es:[edi],eax
   186de:	stos   WORD PTR es:[edi],ax
   186e0:	xor    eax,eax
   186e2:	mov    WORD PTR [ebp-0x21c],ax
   186e9:	push   0x1fc
   186ee:	push   ebx
   186ef:	lea    eax,[ebp-0x21a]
   186f5:	push   eax
   186f6:	call   0x1dae6
   186fb:	add    esp,0xc
   186fe:	lea    eax,[ebp-0x21c]
   18704:	mov    DWORD PTR [ebp-0x324],eax
   1870a:	xor    eax,eax
   1870c:	mov    WORD PTR [ebp-0x328],ax
   18713:	mov    eax,0x1fe
   18718:	mov    WORD PTR [ebp-0x326],ax
   1871f:	mov    DWORD PTR [ebp-0x34c],0x18
   18729:	mov    DWORD PTR [ebp-0x348],ebx
   1872f:	mov    DWORD PTR [ebp-0x340],0x200
   18739:	mov    DWORD PTR [ebp-0x344],ebx
   1873f:	mov    DWORD PTR [ebp-0x33c],ebx
   18745:	mov    DWORD PTR [ebp-0x338],ebx
   1874b:	mov    DWORD PTR [ebp-0x334],esi
   18751:	mov    DWORD PTR [ebp-0x330],ebx
   18757:	lea    eax,[ebp-0x334]
   1875d:	push   eax
   1875e:	lea    eax,[ebp-0x34c]
   18764:	push   eax
   18765:	push   0x1f0fff
   1876a:	lea    eax,[ebp-0x320]
   18770:	push   eax
   18771:	call   0x116a8
   18776:	call   eax
   18778:	test   eax,eax
   1877a:	jl     0x188a9
   18780:	lea    eax,[ebp-0x328]
   18786:	push   eax
   18787:	push   DWORD PTR [ebp-0x320]
   1878d:	call   0x11f6e
   18792:	cmp    eax,ebx
   18794:	jl     0x1889d
   1879a:	movzx  eax,WORD PTR [ebp-0x328]
   187a1:	shr    eax,1
   187a3:	xor    ecx,ecx
   187a5:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   187ad:	push   DWORD PTR [ebp-0x320]
   187b3:	call   0x10606
   187b8:	lea    eax,[ebp-0x21c]
   187be:	push   eax
   187bf:	call   0x10de6
   187c4:	cmp    eax,ebx
   187c6:	je     0x187eb
   187c8:	push   eax
   187c9:	push   esi
   187ca:	mov    ecx,DWORD PTR ds:0x7eb70
   187d0:	call   0x16c00
   187d5:	push   DWORD PTR [ebp-0x320]
   187db:	push   DWORD PTR [ebp-0x320]
   187e1:	call   0x10606
   187e6:	push   eax
   187e7:	push   esi
   187e8:	push   ebx
   187e9:	jmp    0x18869
   187eb:	push   0x1ea2e
   187f0:	push   0x9
   187f2:	push   0x1ea1a
   187f7:	call   0x16c42
   187fc:	push   eax
   187fd:	lea    eax,[ebp-0x328]
   18803:	push   eax
   18804:	call   0x10e28
   18809:	test   al,al
   1880b:	je     0x18870
   1880d:	cmp    DWORD PTR ds:0x7f83c,ebx
   18813:	jne    0x18846
   18815:	mov    DWORD PTR ds:0x7f83c,0x1
   1881f:	mov    DWORD PTR [ebp-0x4],ebx
   18822:	call   0x17f36
   18827:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1882e:	jmp    0x18846
   18830:	xor    eax,eax
   18832:	inc    eax
   18833:	ret    
   18834:	mov    esp,DWORD PTR [ebp-0x18]
   18837:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1883e:	xor    ebx,ebx
   18840:	mov    esi,DWORD PTR [ebp-0x32c]
   18846:	cmp    DWORD PTR ds:0x7edc4,ebx
   1884c:	jne    0x18854
   1884e:	mov    DWORD PTR ds:0x7edc4,esi
   18854:	push   DWORD PTR [ebp-0x320]
   1885a:	push   DWORD PTR [ebp-0x320]
   18860:	call   0x10606
   18865:	push   eax
   18866:	push   esi
   18867:	push   0x1
   18869:	call   0x137c0
   1886e:	jmp    0x1889d
   18870:	lea    eax,[ebp-0x31c]
   18876:	push   eax
   18877:	call   0x10fb8
   1887c:	test   al,al
   1887e:	je     0x1889d
   18880:	lea    eax,[ebp-0x31c]
   18886:	push   eax
   18887:	lea    eax,[ebp-0x328]
   1888d:	push   eax
   1888e:	call   0x10e28
   18893:	test   al,al
   18895:	je     0x1889d
   18897:	push   esi
   18898:	call   0x12000
   1889d:	push   DWORD PTR [ebp-0x320]
   188a3:	call   DWORD PTR ds:0x1f064
   188a9:	call   0x1de58
   188ae:	ret    0xc
   188b1:	int3   
   188b2:	int3   
   188b3:	int3   
   188b4:	int3   
   188b5:	int3   
   188b6:	mov    edi,edi
   188b8:	push   ebp
   188b9:	mov    ebp,esp
   188bb:	push   ecx
   188bc:	cli    
   188bd:	mov    eax,cr0
   188c0:	mov    DWORD PTR [ebp-0x4],eax
   188c3:	nop
   188c4:	and    eax,0xfffeffff
   188c9:	mov    cr0,eax
   188cc:	push   0x17716
   188d1:	push   DWORD PTR ds:0x7ed0c
   188d7:	call   0x19886
   188dc:	push   0x17602
   188e1:	mov    ds:0x7ed10,eax
   188e6:	call   0x116d2
   188eb:	call   eax
   188ed:	push   0x0
   188ef:	push   0x1866e
   188f4:	call   0x11726
   188f9:	call   eax
   188fb:	mov    eax,DWORD PTR [ebp-0x4]
   188fe:	mov    cr0,eax
   18901:	sti    
   18902:	leave  
   18903:	ret    
   18904:	int3   
   18905:	int3   
   18906:	int3   
   18907:	int3   
   18908:	int3   
   18909:	int3   
   1890a:	mov    edi,edi
   1890c:	push   ebp
   1890d:	mov    ebp,esp
   1890f:	sub    esp,0x50
   18912:	push   ebx
   18913:	mov    ebx,DWORD PTR [ebp+0x8]
   18916:	push   esi
   18917:	test   bl,0x20
   1891a:	je     0x1895d
   1891c:	push   DWORD PTR [ebp+0x30]
   1891f:	mov    esi,DWORD PTR ds:0x7ed08
   18925:	push   DWORD PTR [ebp+0x2c]
   18928:	lea    ecx,[ebp-0x50]
   1892b:	push   DWORD PTR [ebp+0x28]
   1892e:	push   DWORD PTR [ebp+0x24]
   18931:	push   DWORD PTR [ebp+0x20]
   18934:	push   DWORD PTR [ebp+0x1c]
   18937:	push   DWORD PTR [ebp+0x14]
   1893a:	push   DWORD PTR [ebp+0x10]
   1893d:	push   DWORD PTR [ebp+0xc]
   18940:	call   0x1370c
   18945:	push   eax
   18946:	push   DWORD PTR [ebp+0xc]
   18949:	mov    ecx,esi
   1894b:	call   0x1845a
   18950:	lea    ecx,[ebp-0x50]
   18953:	call   0x11ea2
   18958:	jmp    0x18aa2
   1895d:	push   DWORD PTR [ebp+0xc]
   18960:	mov    ecx,DWORD PTR ds:0x7ed00
   18966:	call   0x1611e
   1896b:	test   eax,eax
   1896d:	jne    0x1897b
   1896f:	test   bl,0x1
   18972:	jne    0x1897b
   18974:	xor    al,al
   18976:	jmp    0x18aa4
   1897b:	push   DWORD PTR [ebp+0xc]
   1897e:	mov    ecx,DWORD PTR ds:0x7ed00
   18984:	call   0x16e48
   18989:	mov    esi,eax
   1898b:	test   bl,0x1
   1898e:	je     0x189d8
   18990:	mov    eax,DWORD PTR [ebp+0x28]
   18993:	push   DWORD PTR [ebp+0xc]
   18996:	mov    ecx,esi
   18998:	mov    DWORD PTR [esi+0x2c],eax
   1899b:	call   0x12970
   189a0:	push   DWORD PTR [ebp+0x10]
   189a3:	lea    ecx,[esi+0x8]
   189a6:	call   0x12970
   189ab:	mov    eax,DWORD PTR [ebp+0x14]
   189ae:	push   DWORD PTR [ebp+0x18]
   189b1:	lea    ecx,[esi+0x14]
   189b4:	mov    DWORD PTR [esi+0x10],eax
   189b7:	call   0x12970
   189bc:	push   DWORD PTR [ebp+0x1c]
   189bf:	lea    ecx,[esi+0x1c]
   189c2:	call   0x12970
   189c7:	push   DWORD PTR [ebp+0x20]
   189ca:	lea    ecx,[esi+0x24]
   189cd:	call   0x12970
   189d2:	mov    eax,DWORD PTR [ebp+0x2c]
   189d5:	mov    DWORD PTR [esi+0x30],eax
   189d8:	mov    DWORD PTR [ebp+0x28],ebx
   189db:	and    DWORD PTR [ebp+0x28],0x2
   189df:	je     0x189ef
   189e1:	mov    eax,DWORD PTR [ebp+0x30]
   189e4:	mov    ecx,DWORD PTR [eax]
   189e6:	mov    DWORD PTR [esi+0x38],ecx
   189e9:	mov    eax,DWORD PTR [eax+0x4]
   189ec:	mov    DWORD PTR [esi+0x3c],eax
   189ef:	mov    DWORD PTR [ebp+0x10],ebx
   189f2:	and    DWORD PTR [ebp+0x10],0x4
   189f6:	je     0x18a06
   189f8:	mov    eax,DWORD PTR [ebp+0x34]
   189fb:	mov    ecx,DWORD PTR [eax]
   189fd:	mov    DWORD PTR [esi+0x40],ecx
   18a00:	mov    eax,DWORD PTR [eax+0x4]
   18a03:	mov    DWORD PTR [esi+0x44],eax
   18a06:	test   bl,0x10
   18a09:	je     0x18aa2
   18a0f:	cmp    DWORD PTR [esi+0x18],0x0
   18a13:	jbe    0x18aa2
   18a19:	mov    eax,ds:0x7ed00
   18a1e:	mov    eax,DWORD PTR [eax+0x4]
   18a21:	push   edi
   18a22:	mov    edi,DWORD PTR [eax]
   18a24:	mov    DWORD PTR [ebp+0x14],edi
   18a27:	cmp    edi,eax
   18a29:	je     0x18aa1
   18a2b:	push   DWORD PTR [ebp+0xc]
   18a2e:	lea    ebx,[edi+0x10]
   18a31:	push   ebx
   18a32:	call   0x197ce
   18a37:	test   al,al
   18a39:	je     0x18a8c
   18a3b:	lea    eax,[esi+0x14]
   18a3e:	push   eax
   18a3f:	add    edi,0x2c
   18a42:	push   edi
   18a43:	call   0x197be
   18a48:	test   al,al
   18a4a:	je     0x18a8c
   18a4c:	cmp    DWORD PTR [ebp+0x28],0x0
   18a50:	je     0x18a6c
   18a52:	mov    ecx,DWORD PTR ds:0x7ed00
   18a58:	push   ebx
   18a59:	call   0x16e48
   18a5e:	mov    ecx,DWORD PTR [ebp+0x30]
   18a61:	mov    edx,DWORD PTR [ecx]
   18a63:	mov    DWORD PTR [eax+0x38],edx
   18a66:	mov    ecx,DWORD PTR [ecx+0x4]
   18a69:	mov    DWORD PTR [eax+0x3c],ecx
   18a6c:	cmp    DWORD PTR [ebp+0x10],0x0
   18a70:	je     0x18a8c
   18a72:	mov    ecx,DWORD PTR ds:0x7ed00
   18a78:	push   ebx
   18a79:	call   0x16e48
   18a7e:	mov    ecx,DWORD PTR [ebp+0x34]
   18a81:	mov    edx,DWORD PTR [ecx]
   18a83:	mov    DWORD PTR [eax+0x40],edx
   18a86:	mov    ecx,DWORD PTR [ecx+0x4]
   18a89:	mov    DWORD PTR [eax+0x44],ecx
   18a8c:	lea    ecx,[ebp+0x14]
   18a8f:	call   0x1384e
   18a94:	mov    edi,DWORD PTR [ebp+0x14]
   18a97:	mov    eax,ds:0x7ed00
   18a9c:	cmp    edi,DWORD PTR [eax+0x4]
   18a9f:	jne    0x18a2b
   18aa1:	pop    edi
   18aa2:	mov    al,0x1
   18aa4:	pop    esi
   18aa5:	pop    ebx
   18aa6:	leave  
   18aa7:	ret    0x30
   18aaa:	int3   
   18aab:	int3   
   18aac:	int3   
   18aad:	int3   
   18aae:	int3   
   18aaf:	int3   
   18ab0:	push   0x4c
   18ab2:	push   0x7dfb8
   18ab7:	call   0x1db0c
   18abc:	xor    esi,esi
   18abe:	push   esi
   18abf:	push   esi
   18ac0:	push   esi
   18ac1:	push   esi
   18ac2:	push   0x7eb78
   18ac7:	call   DWORD PTR ds:0x1f028
   18acd:	cmp    eax,esi
   18acf:	jge    0x18ae0
   18ad1:	mov    eax,DWORD PTR [ebp+0x8]
   18ad4:	mov    DWORD PTR [eax+0x8],0x4
   18adb:	jmp    0x18c15
   18ae0:	mov    DWORD PTR [ebp-0x4],esi
   18ae3:	or     ebx,0xffffffff
   18ae6:	push   ebx
   18ae7:	mov    esi,DWORD PTR [ebp+0x8]
   18aea:	lea    eax,[esi+0x28]
   18aed:	push   eax
   18aee:	lea    ecx,[ebp-0x44]
   18af1:	call   0x1292e
   18af6:	mov    edi,DWORD PTR [ebp-0x40]
   18af9:	inc    edi
   18afa:	push   ebx
   18afb:	lea    eax,[edi+esi*1+0x28]
   18aff:	push   eax
   18b00:	lea    ecx,[ebp-0x3c]
   18b03:	call   0x1292e
   18b08:	mov    eax,DWORD PTR [ebp-0x38]
   18b0b:	lea    edi,[edi+eax*1+0x1]
   18b0f:	mov    eax,DWORD PTR [edi+esi*1+0x28]
   18b13:	mov    DWORD PTR [ebp-0x1c],eax
   18b16:	add    edi,0x4
   18b19:	push   ebx
   18b1a:	lea    eax,[edi+esi*1+0x28]
   18b1e:	push   eax
   18b1f:	lea    ecx,[ebp-0x34]
   18b22:	call   0x1292e
   18b27:	mov    eax,DWORD PTR [ebp-0x30]
   18b2a:	lea    edi,[edi+eax*1+0x1]
   18b2e:	push   ebx
   18b2f:	lea    eax,[edi+esi*1+0x28]
   18b33:	push   eax
   18b34:	lea    ecx,[ebp-0x2c]
   18b37:	call   0x1292e
   18b3c:	mov    eax,DWORD PTR [ebp-0x28]
   18b3f:	lea    edi,[edi+eax*1+0x1]
   18b43:	push   ebx
   18b44:	lea    eax,[edi+esi*1+0x28]
   18b48:	push   eax
   18b49:	lea    ecx,[ebp-0x24]
   18b4c:	call   0x1292e
   18b51:	mov    eax,DWORD PTR [ebp-0x20]
   18b54:	lea    eax,[edi+eax*1+0x1]
   18b58:	push   ebx
   18b59:	lea    eax,[eax+esi*1+0x28]
   18b5d:	push   eax
   18b5e:	lea    ecx,[ebp-0x5c]
   18b61:	call   0x1292e
   18b66:	mov    eax,DWORD PTR [esi+0xc]
   18b69:	mov    ecx,DWORD PTR [esi+0x18]
   18b6c:	mov    DWORD PTR [ebp-0x54],ecx
   18b6f:	mov    ecx,DWORD PTR [esi+0x1c]
   18b72:	mov    DWORD PTR [ebp-0x50],ecx
   18b75:	mov    ecx,DWORD PTR [esi+0x20]
   18b78:	mov    DWORD PTR [ebp-0x4c],ecx
   18b7b:	mov    ecx,DWORD PTR [esi+0x24]
   18b7e:	mov    DWORD PTR [ebp-0x48],ecx
   18b81:	mov    ecx,DWORD PTR [esi+0x10]
   18b84:	lea    edx,[ebp-0x4c]
   18b87:	push   edx
   18b88:	lea    edx,[ebp-0x54]
   18b8b:	push   edx
   18b8c:	push   ecx
   18b8d:	push   eax
   18b8e:	lea    eax,[ebp-0x5c]
   18b91:	push   eax
   18b92:	lea    eax,[ebp-0x24]
   18b95:	push   eax
   18b96:	lea    eax,[ebp-0x2c]
   18b99:	push   eax
   18b9a:	lea    eax,[ebp-0x34]
   18b9d:	push   eax
   18b9e:	push   DWORD PTR [ebp-0x1c]
   18ba1:	lea    eax,[ebp-0x3c]
   18ba4:	push   eax
   18ba5:	lea    eax,[ebp-0x44]
   18ba8:	push   eax
   18ba9:	push   DWORD PTR [esi+0x4]
   18bac:	call   0x1890a
   18bb1:	xor    ecx,ecx
   18bb3:	test   al,al
   18bb5:	sete   cl
   18bb8:	mov    DWORD PTR [esi+0x8],ecx
   18bbb:	push   DWORD PTR [ebp-0x5c]
   18bbe:	call   0x1da40
   18bc3:	push   DWORD PTR [ebp-0x24]
   18bc6:	call   0x1da40
   18bcb:	push   DWORD PTR [ebp-0x2c]
   18bce:	call   0x1da40
   18bd3:	push   DWORD PTR [ebp-0x34]
   18bd6:	call   0x1da40
   18bdb:	push   DWORD PTR [ebp-0x3c]
   18bde:	call   0x1da40
   18be3:	push   DWORD PTR [ebp-0x44]
   18be6:	call   0x1da40
   18beb:	add    esp,0x18
   18bee:	jmp    0x18c01
   18bf0:	xor    eax,eax
   18bf2:	inc    eax
   18bf3:	ret    
   18bf4:	mov    esp,DWORD PTR [ebp-0x18]
   18bf7:	mov    eax,DWORD PTR [ebp+0x8]
   18bfa:	mov    DWORD PTR [eax+0x8],0x4
   18c01:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18c08:	push   0x0
   18c0a:	push   0x7eb78
   18c0f:	call   DWORD PTR ds:0x1f024
   18c15:	call   0x1db51
   18c1a:	ret    0x4
   18c1d:	int3   
   18c1e:	int3   
   18c1f:	int3   
   18c20:	int3   
   18c21:	int3   
   18c22:	push   0x2c
   18c24:	push   0x7dfd8
   18c29:	call   0x1db0c
   18c2e:	xor    edi,edi
   18c30:	mov    DWORD PTR [ebp-0x24],edi
   18c33:	mov    ebx,DWORD PTR [ebp+0xc]
   18c36:	mov    DWORD PTR [ebx+0x18],edi
   18c39:	mov    DWORD PTR [ebx+0x1c],edi
   18c3c:	mov    eax,DWORD PTR [ebx+0x60]
   18c3f:	cmp    BYTE PTR [eax],0xe
   18c42:	jne    0x190e2
   18c48:	mov    eax,DWORD PTR [eax+0xc]
   18c4b:	mov    DWORD PTR [ebx+0x1c],0x84c
   18c52:	mov    ecx,0x22c068
   18c57:	cmp    eax,ecx
   18c59:	ja     0x18f93
   18c5f:	je     0x18f84
   18c65:	add    ecx,0xffffffd0
   18c68:	cmp    eax,ecx
   18c6a:	ja     0x18d87
   18c70:	je     0x18d6e
   18c76:	sub    eax,0x22c020
   18c7b:	je     0x18d38
   18c81:	push   0x4
   18c83:	pop    esi
   18c84:	sub    eax,esi
   18c86:	je     0x18d02
   18c88:	sub    eax,esi
   18c8a:	je     0x18ce7
   18c8c:	sub    eax,esi
   18c8e:	je     0x18cda
   18c90:	sub    eax,esi
   18c92:	je     0x18ca9
   18c94:	sub    eax,esi
   18c96:	jne    0x19082
   18c9c:	push   DWORD PTR [ebx+0xc]
   18c9f:	call   0x1793c
   18ca4:	jmp    0x190df
   18ca9:	mov    esi,DWORD PTR [ebx+0xc]
   18cac:	mov    eax,DWORD PTR [esi]
   18cae:	add    eax,0x28
   18cb1:	mov    DWORD PTR [ebx+0x1c],eax
   18cb4:	push   0xffffffff
   18cb6:	lea    eax,[esi+0x28]
   18cb9:	push   eax
   18cba:	lea    ecx,[ebp-0x34]
   18cbd:	call   0x110d4
   18cc2:	push   esi
   18cc3:	lea    eax,[ebp-0x34]
   18cc6:	push   eax
   18cc7:	call   0x167ee
   18ccc:	push   DWORD PTR [ebp-0x34]
   18ccf:	call   0x1da40
   18cd4:	pop    ecx
   18cd5:	jmp    0x190e2
   18cda:	push   DWORD PTR [ebx+0xc]
   18cdd:	call   0x18ab0
   18ce2:	jmp    0x190df
   18ce7:	mov    ecx,DWORD PTR ds:0x7ed00
   18ced:	call   0x16acc
   18cf2:	mov    ecx,DWORD PTR ds:0x7ebd4
   18cf8:	call   0x16b88
   18cfd:	jmp    0x190e2
   18d02:	mov    eax,DWORD PTR [ebx+0xc]
   18d05:	mov    DWORD PTR [ebx+0x1c],0x10
   18d0c:	mov    ecx,DWORD PTR [eax]
   18d0e:	cmp    ecx,edi
   18d10:	jl     0x190e2
   18d16:	cmp    ecx,0x6
   18d19:	jge    0x190e2
   18d1f:	mov    edx,DWORD PTR [eax+0x8]
   18d22:	mov    DWORD PTR [ecx*8+0x7ed50],edx
   18d29:	mov    eax,DWORD PTR [eax+0xc]
   18d2c:	mov    DWORD PTR [ecx*8+0x7ed54],eax
   18d33:	jmp    0x190e2
   18d38:	mov    eax,DWORD PTR [ebx+0xc]
   18d3b:	mov    DWORD PTR [ebx+0x1c],0x10
   18d42:	mov    ecx,DWORD PTR [eax]
   18d44:	cmp    ecx,edi
   18d46:	jl     0x190e2
   18d4c:	cmp    ecx,0x6
   18d4f:	jge    0x190e2
   18d55:	mov    edx,DWORD PTR [ecx*8+0x7ed50]
   18d5c:	mov    DWORD PTR [eax+0x8],edx
   18d5f:	mov    ecx,DWORD PTR [ecx*8+0x7ed54]
   18d66:	mov    DWORD PTR [eax+0xc],ecx
   18d69:	jmp    0x190e2
   18d6e:	mov    eax,DWORD PTR [ebx+0xc]
   18d71:	mov    ecx,DWORD PTR [eax]
   18d73:	add    ecx,0xc
   18d76:	mov    DWORD PTR [ebx+0x1c],ecx
   18d79:	push   eax
   18d7a:	push   DWORD PTR [eax+0x4]
   18d7d:	call   0x15f5e
   18d82:	jmp    0x190e2
   18d87:	sub    eax,0x22c03c
   18d8c:	je     0x18f00
   18d92:	sub    eax,0x10
   18d95:	je     0x18ef6
   18d9b:	push   0x4
   18d9d:	pop    esi
   18d9e:	sub    eax,esi
   18da0:	je     0x18df6
   18da2:	sub    eax,0xc
   18da5:	je     0x18dde
   18da7:	sub    eax,esi
   18da9:	je     0x18dc0
   18dab:	sub    eax,esi
   18dad:	jne    0x19082
   18db3:	push   DWORD PTR [ebx+0xc]
   18db6:	call   0x1281e
   18dbb:	jmp    0x190df
   18dc0:	mov    DWORD PTR [ebx+0x1c],0x8
   18dc7:	mov    ebx,DWORD PTR [ebx+0xc]
   18dca:	mov    eax,ds:0x7ed34
   18dcf:	mov    DWORD PTR [ebx],eax
   18dd1:	mov    eax,ds:0x7ed38
   18dd6:	mov    DWORD PTR [ebx+0x4],eax
   18dd9:	jmp    0x190e2
   18dde:	mov    eax,DWORD PTR [ebx+0xc]
   18de1:	mov    ecx,DWORD PTR [eax]
   18de3:	mov    DWORD PTR ds:0x7ed34,ecx
   18de9:	mov    eax,DWORD PTR [eax+0x4]
   18dec:	mov    ds:0x7ed38,eax
   18df1:	jmp    0x190df
   18df6:	mov    DWORD PTR [ebx+0x1c],edi
   18df9:	mov    esi,DWORD PTR [ebx+0xc]
   18dfc:	mov    DWORD PTR [ebp-0x20],esi
   18dff:	push   0xffffffff
   18e01:	push   0x1df3e
   18e06:	lea    ecx,[ebp-0x2c]
   18e09:	call   0x110d4
   18e0e:	xor    edi,edi
   18e10:	inc    edi
   18e11:	mov    DWORD PTR [esi+0x8],edi
   18e14:	xor    eax,eax
   18e16:	push   eax
   18e17:	push   eax
   18e18:	push   eax
   18e19:	push   eax
   18e1a:	push   0x7eb78
   18e1f:	call   DWORD PTR ds:0x1f028
   18e25:	test   eax,eax
   18e27:	jge    0x18e31
   18e29:	push   DWORD PTR [ebp-0x2c]
   18e2c:	jmp    0x18ccf
   18e31:	and    DWORD PTR [ebp-0x4],0x0
   18e35:	mov    DWORD PTR [ebp-0x4],edi
   18e38:	mov    eax,DWORD PTR [esi]
   18e3a:	add    eax,0x28
   18e3d:	mov    DWORD PTR [ebx+0x1c],eax
   18e40:	mov    eax,ds:0x7ed00
   18e45:	mov    ebx,DWORD PTR [eax+0x4]
   18e48:	mov    eax,DWORD PTR [ebx]
   18e4a:	mov    DWORD PTR [ebp+0xc],eax
   18e4d:	and    DWORD PTR [ebp-0x1c],0x0
   18e51:	mov    edi,DWORD PTR [esi+0x28]
   18e54:	cmp    DWORD PTR [ebp-0x1c],edi
   18e57:	jge    0x18e6b
   18e59:	cmp    DWORD PTR [ebp+0xc],ebx
   18e5c:	je     0x18e6b
   18e5e:	lea    ecx,[ebp+0xc]
   18e61:	call   0x1384e
   18e66:	inc    DWORD PTR [ebp-0x1c]
   18e69:	jmp    0x18e54
   18e6b:	mov    eax,DWORD PTR [ebp+0xc]
   18e6e:	cmp    eax,ebx
   18e70:	je     0x18e84
   18e72:	and    DWORD PTR [esi+0x8],0x0
   18e76:	add    eax,0x10
   18e79:	push   eax
   18e7a:	lea    ecx,[ebp-0x2c]
   18e7d:	call   0x12970
   18e82:	jmp    0x18e8b
   18e84:	mov    DWORD PTR [esi+0x8],0x1
   18e8b:	and    DWORD PTR [esi+0x4],0x0
   18e8f:	and    DWORD PTR [ebp-0x4],0x0
   18e93:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18e9a:	call   0x18ee8
   18e9f:	cmp    DWORD PTR [esi+0x8],0x0
   18ea3:	jne    0x18e29
   18ea5:	push   esi
   18ea6:	lea    eax,[ebp-0x2c]
   18ea9:	push   eax
   18eaa:	call   0x167ee
   18eaf:	jmp    0x18e29
   18eb4:	xor    eax,eax
   18eb6:	inc    eax
   18eb7:	ret    
   18eb8:	mov    esp,DWORD PTR [ebp-0x18]
   18ebb:	mov    eax,DWORD PTR [ebp-0x20]
   18ebe:	mov    DWORD PTR [eax+0x8],0x4
   18ec5:	push   DWORD PTR [ebp-0x2c]
   18ec8:	call   0x1da40
   18ecd:	push   0xfffffffe
   18ecf:	lea    eax,[ebp-0x10]
   18ed2:	push   eax
   18ed3:	push   0x7eb3c
   18ed8:	call   0x1dccc
   18edd:	add    esp,0x10
   18ee0:	jmp    0x190e2
   18ee5:	mov    esi,DWORD PTR [ebp-0x20]
   18ee8:	push   0x0
   18eea:	push   0x7eb78
   18eef:	call   DWORD PTR ds:0x1f024
   18ef5:	ret    
   18ef6:	call   0x12348
   18efb:	jmp    0x190e2
   18f00:	mov    eax,DWORD PTR [ebx+0xc]
   18f03:	mov    ecx,DWORD PTR ds:0x7e204
   18f09:	mov    esi,eax
   18f0b:	sub    esi,ecx
   18f0d:	push   0x2
   18f0f:	pop    edi
   18f10:	movzx  edx,WORD PTR [ecx]
   18f13:	mov    WORD PTR [esi+ecx*1],dx
   18f17:	add    ecx,edi
   18f19:	test   dx,dx
   18f1c:	jne    0x18f10
   18f1e:	mov    ecx,0x7e248
   18f23:	lea    esi,[eax+0x50]
   18f26:	sub    esi,ecx
   18f28:	movzx  edx,WORD PTR [ecx]
   18f2b:	mov    WORD PTR [esi+ecx*1],dx
   18f2f:	add    ecx,edi
   18f31:	test   dx,dx
   18f34:	jne    0x18f28
   18f36:	mov    ecx,0x7e208
   18f3b:	lea    esi,[eax+0x90]
   18f41:	sub    esi,ecx
   18f43:	movzx  edx,WORD PTR [ecx]
   18f46:	mov    WORD PTR [esi+ecx*1],dx
   18f4a:	add    ecx,edi
   18f4c:	test   dx,dx
   18f4f:	jne    0x18f43
   18f51:	mov    ecx,0x7e288
   18f56:	lea    esi,[eax+0xd0]
   18f5c:	sub    esi,ecx
   18f5e:	movzx  edx,WORD PTR [ecx]
   18f61:	mov    WORD PTR [esi+ecx*1],dx
   18f65:	add    ecx,edi
   18f67:	test   dx,dx
   18f6a:	jne    0x18f5e
   18f6c:	lea    edi,[eax+0x40]
   18f6f:	mov    esi,0x7a274
   18f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f78:	mov    DWORD PTR [ebx+0x1c],0x110
   18f7f:	jmp    0x190e2
   18f84:	mov    eax,DWORD PTR [ebx+0xc]
   18f87:	push   DWORD PTR [eax]
   18f89:	call   0x11008
   18f8e:	jmp    0x190df
   18f93:	mov    ecx,0x22c088
   18f98:	cmp    eax,ecx
   18f9a:	ja     0x19064
   18fa0:	je     0x19039
   18fa6:	sub    eax,0x22c06c
   18fab:	je     0x19021
   18fad:	push   0x4
   18faf:	pop    esi
   18fb0:	sub    eax,esi
   18fb2:	je     0x19014
   18fb4:	push   0x8
   18fb6:	pop    ecx
   18fb7:	sub    eax,ecx
   18fb9:	je     0x19007
   18fbb:	sub    eax,esi
   18fbd:	je     0x18fef
   18fbf:	sub    eax,esi
   18fc1:	je     0x18fd8
   18fc3:	sub    eax,esi
   18fc5:	jne    0x19082
   18fcb:	push   DWORD PTR [ebx+0xc]
   18fce:	call   0x17846
   18fd3:	jmp    0x190df
   18fd8:	mov    DWORD PTR [ebx+0x1c],ecx
   18fdb:	mov    ebx,DWORD PTR [ebx+0xc]
   18fde:	mov    eax,ds:0x7ed3c
   18fe3:	mov    DWORD PTR [ebx],eax
   18fe5:	mov    eax,ds:0x7ed40
   18fea:	jmp    0x18dd6
   18fef:	mov    eax,DWORD PTR [ebx+0xc]
   18ff2:	mov    ecx,DWORD PTR [eax]
   18ff4:	mov    DWORD PTR ds:0x7ed3c,ecx
   18ffa:	mov    eax,DWORD PTR [eax+0x4]
   18ffd:	mov    ds:0x7ed40,eax
   19002:	jmp    0x190df
   19007:	push   DWORD PTR [ebx+0xc]
   1900a:	call   0x1705a
   1900f:	jmp    0x190df
   19014:	push   DWORD PTR [ebx+0xc]
   19017:	call   0x10f78
   1901c:	jmp    0x190df
   19021:	mov    esi,DWORD PTR [ebx+0xc]
   19024:	push   DWORD PTR [esi]
   19026:	call   0x1104c
   1902b:	mov    DWORD PTR [esi],eax
   1902d:	mov    DWORD PTR [ebx+0x1c],0x4
   19034:	jmp    0x190e2
   19039:	mov    esi,DWORD PTR [ebx+0xc]
   1903c:	mov    eax,DWORD PTR [esi]
   1903e:	add    eax,0xc
   19041:	mov    DWORD PTR [ebx+0x1c],eax
   19044:	push   0xffffffff
   19046:	lea    eax,[esi+0xc]
   19049:	push   eax
   1904a:	lea    ecx,[ebp-0x3c]
   1904d:	call   0x110d4
   19052:	push   esi
   19053:	lea    eax,[ebp-0x3c]
   19056:	push   eax
   19057:	call   0x15e74
   1905c:	push   DWORD PTR [ebp-0x3c]
   1905f:	jmp    0x18ccf
   19064:	sub    eax,0x22c08c
   19069:	je     0x190d1
   1906b:	push   0x4
   1906d:	pop    esi
   1906e:	sub    eax,esi
   19070:	je     0x190bd
   19072:	sub    eax,esi
   19074:	je     0x190b6
   19076:	sub    eax,esi
   19078:	je     0x190a2
   1907a:	sub    eax,esi
   1907c:	je     0x19098
   1907e:	sub    eax,esi
   19080:	je     0x1908b
   19082:	mov    DWORD PTR [ebp-0x24],0xc0000010
   19089:	jmp    0x190df
   1908b:	push   DWORD PTR [ebx+0xc]
   1908e:	call   0x1aa96
   19093:	mov    DWORD PTR [ebx+0x1c],esi
   19096:	jmp    0x190e2
   19098:	push   DWORD PTR [ebx+0xc]
   1909b:	call   0x1b51c
   190a0:	jmp    0x190df
   190a2:	mov    eax,DWORD PTR [ebx+0xc]
   190a5:	mov    ecx,DWORD PTR [eax+0x4]
   190a8:	add    ecx,0x8
   190ab:	mov    DWORD PTR [ebx+0x1c],ecx
   190ae:	push   eax
   190af:	call   0x1b7ea
   190b4:	jmp    0x190e2
   190b6:	call   0x1b42c
   190bb:	jmp    0x190df
   190bd:	mov    eax,DWORD PTR [ebx+0xc]
   190c0:	mov    ecx,DWORD PTR [eax+0x4]
   190c3:	add    ecx,0x8
   190c6:	mov    DWORD PTR [ebx+0x1c],ecx
   190c9:	push   eax
   190ca:	call   0x1a876
   190cf:	jmp    0x190e2
   190d1:	push   DWORD PTR [ebx+0xc]
   190d4:	call   0x11094
   190d9:	push   eax
   190da:	call   0x1b64e
   190df:	mov    DWORD PTR [ebx+0x1c],edi
   190e2:	mov    eax,DWORD PTR [ebp-0x24]
   190e5:	call   0x1db51
   190ea:	ret    0x8
   190ed:	int3   
   190ee:	int3   
   190ef:	int3   
   190f0:	int3   
   190f1:	int3   
   190f2:	push   0xc
   190f4:	push   0x7e000
   190f9:	call   0x1db0c
   190fe:	and    DWORD PTR [ebp-0x4],0x0
   19102:	push   DWORD PTR [ebp+0xc]
   19105:	push   DWORD PTR [ebp+0x8]
   19108:	call   0x18c22
   1910d:	mov    esi,eax
   1910f:	jmp    0x19124
   19111:	xor    eax,eax
   19113:	inc    eax
   19114:	ret    
   19115:	mov    esp,DWORD PTR [ebp-0x18]
   19118:	push   0xd
   1911a:	call   0x11008
   1911f:	mov    esi,0xc0000001
   19124:	mov    DWORD PTR [ebp-0x1c],esi
   19127:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1912e:	cmp    esi,0x103
   19134:	je     0x19144
   19136:	mov    ecx,DWORD PTR [ebp+0xc]
   19139:	mov    DWORD PTR [ecx+0x18],esi
   1913c:	xor    dl,dl
   1913e:	call   DWORD PTR ds:0x1f048
   19144:	mov    eax,esi
   19146:	call   0x1db51
   1914b:	ret    0x8
   1914e:	int3   
   1914f:	int3   
   19150:	int3   
   19151:	int3   
   19152:	int3   
   19153:	int3   
   19154:	mov    edi,edi
   19156:	push   ebp
   19157:	mov    ebp,esp
   19159:	push   esi
   1915a:	mov    esi,ecx
   1915c:	mov    BYTE PTR [esi+0x8],0x0
   19160:	call   0x14aa4
   19165:	lea    ecx,[esi+0x10]
   19168:	mov    BYTE PTR [ecx+0x8],0x0
   1916c:	call   0x14494
   19171:	mov    eax,DWORD PTR [ebp+0x8]
   19174:	mov    DWORD PTR [esi+0x20],eax
   19177:	mov    eax,DWORD PTR [ebp+0xc]
   1917a:	mov    DWORD PTR [esi+0x24],eax
   1917d:	mov    eax,esi
   1917f:	pop    esi
   19180:	pop    ebp
   19181:	ret    0x8
   19184:	int3   
   19185:	int3   
   19186:	int3   
   19187:	int3   
   19188:	int3   
   19189:	int3   
   1918a:	push   0x850
   1918f:	push   0x7e020
   19194:	call   0x1de10
   19199:	mov    esi,DWORD PTR [ebp+0x8]
   1919c:	mov    DWORD PTR [ebp-0x828],esi
   191a2:	mov    edi,DWORD PTR [ebp+0xc]
   191a5:	call   0x110c0
   191aa:	call   0x183ac
   191af:	call   0x11ce4
   191b4:	test   eax,eax
   191b6:	je     0x19694
   191bc:	xor    ebx,ebx
   191be:	mov    DWORD PTR [ebp-0x838],ebx
   191c4:	call   0x18200
   191c9:	cmp    al,bl
   191cb:	jne    0x192bc
   191d1:	mov    DWORD PTR [ebp-0x4],ebx
   191d4:	push   ebx
   191d5:	push   0x19
   191d7:	call   0x10a20
   191dc:	cmp    edx,ebx
   191de:	jl     0x191f4
   191e0:	jg     0x191e7
   191e2:	cmp    eax,0x5
   191e5:	jbe    0x191f4
   191e7:	push   ebx
   191e8:	push   0x7ecd8
   191ed:	call   0x11c12
   191f2:	call   eax
   191f4:	push   edi
   191f5:	push   0x1ec3c
   191fa:	lea    eax,[ebp-0x41c]
   19200:	push   eax
   19201:	call   0x1dafe
   19206:	add    esp,0xc
   19209:	lea    eax,[ebp-0x858]
   1920f:	push   eax
   19210:	call   DWORD PTR ds:0x1f050
   19216:	push   0x1ec04
   1921b:	push   0x4
   1921d:	push   0x1ebfa
   19222:	call   0x16c42
   19227:	mov    DWORD PTR [ebp-0x82c],eax
   1922d:	lea    ecx,[eax+0x2]
   19230:	mov    dx,WORD PTR [eax]
   19233:	inc    eax
   19234:	inc    eax
   19235:	cmp    dx,bx
   19238:	jne    0x19230
   1923a:	sub    eax,ecx
   1923c:	sar    eax,1
   1923e:	add    eax,eax
   19240:	mov    WORD PTR [ebp-0x82e],ax
   19247:	mov    WORD PTR [ebp-0x830],ax
   1924e:	mov    DWORD PTR [ebp-0x850],0x18
   19258:	mov    DWORD PTR [ebp-0x84c],ebx
   1925e:	mov    DWORD PTR [ebp-0x844],0x40
   19268:	lea    eax,[ebp-0x830]
   1926e:	mov    DWORD PTR [ebp-0x848],eax
   19274:	mov    DWORD PTR [ebp-0x840],ebx
   1927a:	mov    DWORD PTR [ebp-0x83c],ebx
   19280:	mov    eax,DWORD PTR [ebp-0x82c]
   19286:	lea    ecx,[eax+0x2]
   19289:	mov    dx,WORD PTR [eax]
   1928c:	inc    eax
   1928d:	inc    eax
   1928e:	cmp    dx,bx
   19291:	jne    0x19289
   19293:	sub    eax,ecx
   19295:	sar    eax,1
   19297:	mov    DWORD PTR [ebp-0x838],eax
   1929d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192a4:	jmp    0x192bc
   192a6:	xor    eax,eax
   192a8:	inc    eax
   192a9:	ret    
   192aa:	mov    esp,DWORD PTR [ebp-0x18]
   192ad:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192b4:	xor    ebx,ebx
   192b6:	mov    esi,DWORD PTR [ebp-0x828]
   192bc:	cmp    DWORD PTR [ebp-0x838],ebx
   192c2:	jne    0x19694
   192c8:	xor    eax,eax
   192ca:	lea    edi,[ebp-0x840]
   192d0:	stos   DWORD PTR es:[edi],eax
   192d1:	stos   DWORD PTR es:[edi],eax
   192d2:	mov    DWORD PTR [ebp-0x844],0xc
   192dc:	mov    DWORD PTR [ebp-0x840],0x2
   192e6:	mov    BYTE PTR [ebp-0x83c],bl
   192ec:	mov    BYTE PTR [ebp-0x83b],bl
   192f2:	push   0x7eb98
   192f7:	push   ebx
   192f8:	lea    eax,[ebp-0x844]
   192fe:	push   eax
   192ff:	call   0x11cba
   19304:	call   eax
   19306:	push   eax
   19307:	call   0x11b94
   1930c:	call   eax
   1930e:	push   0x10
   19310:	call   0x10a96
   19315:	pop    ecx
   19316:	cmp    eax,ebx
   19318:	je     0x19336
   1931a:	lea    ecx,[ebp-0x81d]
   19320:	push   ecx
   19321:	lea    ecx,[ebp-0x81d]
   19327:	push   ecx
   19328:	mov    ecx,eax
   1932a:	call   0x16e2e
   1932f:	mov    ds:0x7ed00,eax
   19334:	jmp    0x1933c
   19336:	mov    DWORD PTR ds:0x7ed00,ebx
   1933c:	push   0x2c
   1933e:	call   0x10a96
   19343:	pop    ecx
   19344:	cmp    eax,ebx
   19346:	je     0x1935d
   19348:	push   0x5dc
   1934d:	push   0x14
   1934f:	mov    ecx,eax
   19351:	call   0x1864e
   19356:	mov    ds:0x7ed08,eax
   1935b:	jmp    0x19363
   1935d:	mov    DWORD PTR ds:0x7ed08,ebx
   19363:	push   0x10
   19365:	call   0x10a96
   1936a:	pop    ecx
   1936b:	cmp    eax,ebx
   1936d:	je     0x1938b
   1936f:	lea    ecx,[ebp-0x81d]
   19375:	push   ecx
   19376:	lea    ecx,[ebp-0x81d]
   1937c:	push   ecx
   1937d:	mov    ecx,eax
   1937f:	call   0x16a0c
   19384:	mov    ds:0x7eb48,eax
   19389:	jmp    0x19391
   1938b:	mov    DWORD PTR ds:0x7eb48,ebx
   19391:	push   0x10
   19393:	call   0x10a96
   19398:	pop    ecx
   19399:	cmp    eax,ebx
   1939b:	je     0x193b9
   1939d:	lea    ecx,[ebp-0x81d]
   193a3:	push   ecx
   193a4:	lea    ecx,[ebp-0x81d]
   193aa:	push   ecx
   193ab:	mov    ecx,eax
   193ad:	call   0x16ef2
   193b2:	mov    ds:0x7ebd4,eax
   193b7:	jmp    0x193bf
   193b9:	mov    DWORD PTR ds:0x7ebd4,ebx
   193bf:	push   0x28
   193c1:	call   0x10a96
   193c6:	pop    ecx
   193c7:	cmp    eax,ebx
   193c9:	je     0x193e0
   193cb:	push   0x3e8
   193d0:	push   0x14
   193d2:	mov    ecx,eax
   193d4:	call   0x19154
   193d9:	mov    ds:0x7eb74,eax
   193de:	jmp    0x193e6
   193e0:	mov    DWORD PTR ds:0x7eb74,ebx
   193e6:	push   0x20
   193e8:	call   0x10a96
   193ed:	pop    ecx
   193ee:	cmp    eax,ebx
   193f0:	je     0x19400
   193f2:	mov    ecx,eax
   193f4:	call   0x16bd0
   193f9:	mov    ds:0x7eb70,eax
   193fe:	jmp    0x19406
   19400:	mov    DWORD PTR ds:0x7eb70,ebx
   19406:	call   0x12906
   1940b:	call   0x1b5b6
   19410:	call   0x179ec
   19415:	mov    edi,0x1ebea
   1941a:	push   edi
   1941b:	call   0x18572
   19420:	push   eax
   19421:	push   0x1ebb2
   19426:	push   0xa
   19428:	push   0x1eb9c
   1942d:	call   0x16c42
   19432:	push   eax
   19433:	lea    eax,[ebp-0x81c]
   19439:	push   eax
   1943a:	call   0x1daf2
   1943f:	add    esp,0xc
   19442:	lea    eax,[ebp-0x81c]
   19448:	push   eax
   19449:	lea    eax,[ebp-0x860]
   1944f:	push   eax
   19450:	call   0x11c3c
   19455:	call   eax
   19457:	push   edi
   19458:	call   0x18572
   1945d:	push   eax
   1945e:	push   0x1eb6a
   19463:	push   0xe
   19465:	push   0x1eb4c
   1946a:	call   0x16c42
   1946f:	push   eax
   19470:	lea    eax,[ebp-0x41c]
   19476:	push   eax
   19477:	call   0x1daf2
   1947c:	add    esp,0xc
   1947f:	lea    eax,[ebp-0x41c]
   19485:	push   eax
   19486:	lea    eax,[ebp-0x858]
   1948c:	push   eax
   1948d:	call   0x11c3c
   19492:	call   eax
   19494:	push   0x7ed44
   19499:	push   ebx
   1949a:	push   0x100
   1949f:	push   0x22
   194a1:	lea    eax,[ebp-0x860]
   194a7:	push   eax
   194a8:	push   ebx
   194a9:	push   esi
   194aa:	call   0x11b6a
   194af:	call   eax
   194b1:	cmp    eax,ebx
   194b3:	jl     0x19696
   194b9:	mov    eax,0x190f2
   194be:	mov    DWORD PTR [esi+0x94],eax
   194c4:	mov    DWORD PTR [esi+0x90],eax
   194ca:	mov    DWORD PTR [esi+0xa4],eax
   194d0:	mov    DWORD PTR [esi+0x70],eax
   194d3:	mov    DWORD PTR [esi+0x48],eax
   194d6:	mov    DWORD PTR [esi+0x44],eax
   194d9:	mov    DWORD PTR [esi+0x40],eax
   194dc:	mov    DWORD PTR [esi+0x38],eax
   194df:	mov    eax,ds:0x7ed44
   194e4:	or     DWORD PTR [eax+0x1c],0x4
   194e8:	lea    eax,[ebp-0x860]
   194ee:	push   eax
   194ef:	lea    eax,[ebp-0x858]
   194f5:	push   eax
   194f6:	call   0x11b40
   194fb:	call   eax
   194fd:	mov    DWORD PTR [ebp-0x828],eax
   19503:	cmp    eax,ebx
   19505:	jge    0x1951c
   19507:	push   DWORD PTR [esi+0x4]
   1950a:	call   0x119f0
   1950f:	call   eax
   19511:	mov    eax,DWORD PTR [ebp-0x828]
   19517:	jmp    0x19696
   1951c:	push   ebx
   1951d:	push   0x7ecd8
   19522:	call   0x11c12
   19527:	call   eax
   19529:	push   ebx
   1952a:	push   0x7eb78
   1952f:	call   0x11c12
   19534:	call   eax
   19536:	push   ebx
   19537:	push   0x7eb4c
   1953c:	call   0x11c12
   19541:	call   eax
   19543:	push   0x8000000
   19548:	push   0x1eb28
   1954d:	push   0x9
   1954f:	push   0x1e7d8
   19554:	call   0x16d38
   19559:	push   eax
   1955a:	lea    eax,[ebp-0x824]
   19560:	push   eax
   19561:	call   0x19ad0
   19566:	push   DWORD PTR [ebp-0x824]
   1956c:	call   0x118a0
   19571:	call   eax
   19573:	mov    DWORD PTR [ebp-0x834],eax
   19579:	push   ebx
   1957a:	push   0x1eaf2
   1957f:	push   0x16
   19581:	push   0x1eada
   19586:	call   0x16d38
   1958b:	push   eax
   1958c:	push   DWORD PTR [ebp-0x824]
   19592:	call   0x199b6
   19597:	push   eax
   19598:	push   DWORD PTR [ebp-0x834]
   1959e:	call   0x1995c
   195a3:	mov    edi,eax
   195a5:	add    edi,DWORD PTR [ebp-0x824]
   195ab:	mov    esi,0x1df40
   195b0:	push   esi
   195b1:	call   0x115fc
   195b6:	mov    DWORD PTR [ebp-0x82c],eax
   195bc:	push   edi
   195bd:	call   0x19904
   195c2:	mov    ecx,DWORD PTR [ebp-0x82c]
   195c8:	mov    ecx,DWORD PTR [ecx]
   195ca:	mov    eax,DWORD PTR [ecx+eax*4]
   195cd:	mov    ds:0x7ed04,eax
   195d2:	push   ebx
   195d3:	push   0x1eaae
   195d8:	push   0x14
   195da:	push   0x1ea98
   195df:	call   0x16d38
   195e4:	push   eax
   195e5:	push   DWORD PTR [ebp-0x824]
   195eb:	call   0x199b6
   195f0:	push   eax
   195f1:	push   DWORD PTR [ebp-0x834]
   195f7:	call   0x1995c
   195fc:	mov    edi,eax
   195fe:	add    edi,DWORD PTR [ebp-0x824]
   19604:	push   esi
   19605:	call   0x115fc
   1960a:	mov    DWORD PTR [ebp-0x82c],eax
   19610:	push   edi
   19611:	call   0x19904
   19616:	mov    ecx,DWORD PTR [ebp-0x82c]
   1961c:	mov    ecx,DWORD PTR [ecx]
   1961e:	mov    eax,DWORD PTR [ecx+eax*4]
   19621:	mov    ds:0x7ecf8,eax
   19626:	push   ebx
   19627:	push   0x1ea72
   1962c:	push   0xe
   1962e:	push   0x1ea62
   19633:	call   0x16d38
   19638:	push   eax
   19639:	push   DWORD PTR [ebp-0x824]
   1963f:	call   0x199b6
   19644:	push   eax
   19645:	push   DWORD PTR [ebp-0x834]
   1964b:	call   0x1995c
   19650:	mov    edi,eax
   19652:	add    edi,DWORD PTR [ebp-0x824]
   19658:	push   esi
   19659:	call   0x115fc
   1965e:	mov    esi,eax
   19660:	push   edi
   19661:	call   0x19904
   19666:	mov    ecx,DWORD PTR [esi]
   19668:	mov    eax,DWORD PTR [ecx+eax*4]
   1966b:	mov    ds:0x7ed0c,eax
   19670:	push   DWORD PTR [ebp-0x824]
   19676:	call   0x19c26
   1967b:	push   ebx
   1967c:	push   0x19
   1967e:	call   0x10a20
   19683:	call   0x188b6
   19688:	mov    BYTE PTR ds:0x7ed48,0x1
   1968f:	jmp    0x19511
   19694:	xor    eax,eax
   19696:	call   0x1de58
   1969b:	ret    0x8
   1969e:	int3   
   1969f:	int3   
   196a0:	int3   
   196a1:	int3   
   196a2:	int3   
   196a3:	int3   
   196a4:	mov    edi,edi
   196a6:	push   ebp
   196a7:	mov    ebp,esp
   196a9:	push   ecx
   196aa:	mov    ecx,DWORD PTR [ebp+0x8]
   196ad:	mov    eax,DWORD PTR [ecx+0x4]
   196b0:	mov    edx,DWORD PTR [ebp+0xc]
   196b3:	push   ebx
   196b4:	mov    ebx,DWORD PTR [edx+0x4]
   196b7:	push   esi
   196b8:	push   edi
   196b9:	mov    DWORD PTR [ebp-0x4],eax
   196bc:	mov    DWORD PTR [ebp+0x8],eax
   196bf:	cmp    eax,ebx
   196c1:	jbe    0x196c6
   196c3:	mov    DWORD PTR [ebp+0x8],ebx
   196c6:	xor    eax,eax
   196c8:	cmp    DWORD PTR [ebp+0x8],eax
   196cb:	jbe    0x196e3
   196cd:	mov    esi,DWORD PTR [ecx]
   196cf:	mov    edi,DWORD PTR [edx]
   196d1:	mov    cl,BYTE PTR [esi+eax*1]
   196d4:	mov    dl,BYTE PTR [edi+eax*1]
   196d7:	cmp    cl,dl
   196d9:	jl     0x196f0
   196db:	jg     0x196f4
   196dd:	inc    eax
   196de:	cmp    eax,DWORD PTR [ebp+0x8]
   196e1:	jb     0x196d1
   196e3:	cmp    DWORD PTR [ebp-0x4],ebx
   196e6:	setb   al
   196e9:	pop    edi
   196ea:	pop    esi
   196eb:	pop    ebx
   196ec:	leave  
   196ed:	ret    0x8
   196f0:	mov    al,0x1
   196f2:	jmp    0x196e9
   196f4:	xor    al,al
   196f6:	jmp    0x196e9
   196f8:	int3   
   196f9:	int3   
   196fa:	int3   
   196fb:	int3   
   196fc:	int3   
   196fd:	int3   
   196fe:	mov    edi,edi
   19700:	push   ebp
   19701:	mov    ebp,esp
   19703:	mov    eax,DWORD PTR [ebp+0x8]
   19706:	mov    ecx,DWORD PTR [eax+0x4]
   19709:	mov    edx,DWORD PTR [ebp+0xc]
   1970c:	cmp    ecx,DWORD PTR [edx+0x4]
   1970f:	je     0x19715
   19711:	xor    al,al
   19713:	jmp    0x19724
   19715:	push   esi
   19716:	mov    esi,DWORD PTR [eax]
   19718:	push   edi
   19719:	mov    edi,DWORD PTR [edx]
   1971b:	xor    eax,eax
   1971d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1971f:	pop    edi
   19720:	sete   al
   19723:	pop    esi
   19724:	pop    ebp
   19725:	ret    0x8
   19728:	int3   
   19729:	int3   
   1972a:	int3   
   1972b:	int3   
   1972c:	int3   
   1972d:	int3   
   1972e:	mov    edi,edi
   19730:	push   ebp
   19731:	mov    ebp,esp
   19733:	push   DWORD PTR [ebp+0xc]
   19736:	push   DWORD PTR [ebp+0x8]
   19739:	call   0x196fe
   1973e:	xor    ecx,ecx
   19740:	test   al,al
   19742:	sete   cl
   19745:	mov    al,cl
   19747:	pop    ebp
   19748:	ret    0x8
   1974b:	int3   
   1974c:	int3   
   1974d:	int3   
   1974e:	int3   
   1974f:	int3   
   19750:	mov    edi,edi
   19752:	push   ebp
   19753:	mov    ebp,esp
   19755:	push   ecx
   19756:	mov    ecx,DWORD PTR [ebp+0x8]
   19759:	mov    eax,DWORD PTR [ebp+0xc]
   1975c:	push   ebx
   1975d:	mov    ebx,DWORD PTR [eax+0x4]
   19760:	push   esi
   19761:	push   edi
   19762:	mov    edi,DWORD PTR [ecx+0x4]
   19765:	mov    DWORD PTR [ebp-0x4],edi
   19768:	cmp    edi,ebx
   1976a:	jbe    0x1976e
   1976c:	mov    edi,ebx
   1976e:	and    DWORD PTR [ebp+0x8],0x0
   19772:	test   edi,edi
   19774:	jbe    0x19794
   19776:	mov    eax,DWORD PTR [eax]
   19778:	mov    ecx,DWORD PTR [ecx]
   1977a:	sub    ecx,eax
   1977c:	movzx  edx,WORD PTR [ecx+eax*1]
   19780:	movzx  esi,WORD PTR [eax]
   19783:	cmp    dx,si
   19786:	jb     0x197a1
   19788:	ja     0x197a5
   1978a:	inc    DWORD PTR [ebp+0x8]
   1978d:	inc    eax
   1978e:	inc    eax
   1978f:	cmp    DWORD PTR [ebp+0x8],edi
   19792:	jb     0x1977c
   19794:	cmp    DWORD PTR [ebp-0x4],ebx
   19797:	setb   al
   1979a:	pop    edi
   1979b:	pop    esi
   1979c:	pop    ebx
   1979d:	leave  
   1979e:	ret    0x8
   197a1:	mov    al,0x1
   197a3:	jmp    0x1979a
   197a5:	xor    al,al
   197a7:	jmp    0x1979a
   197a9:	int3   
   197aa:	int3   
   197ab:	int3   
   197ac:	int3   
   197ad:	int3   
   197ae:	mov    edi,edi
   197b0:	push   ebp
   197b1:	mov    ebp,esp
   197b3:	pop    ebp
   197b4:	jmp    0x196a4
   197b9:	int3   
   197ba:	int3   
   197bb:	int3   
   197bc:	int3   
   197bd:	int3   
   197be:	mov    edi,edi
   197c0:	push   ebp
   197c1:	mov    ebp,esp
   197c3:	pop    ebp
   197c4:	jmp    0x196fe
   197c9:	int3   
   197ca:	int3   
   197cb:	int3   
   197cc:	int3   
   197cd:	int3   
   197ce:	mov    edi,edi
   197d0:	push   ebp
   197d1:	mov    ebp,esp
   197d3:	pop    ebp
   197d4:	jmp    0x1972e
   197d9:	int3   
   197da:	int3   
   197db:	int3   
   197dc:	int3   
   197dd:	int3   
   197de:	mov    edi,edi
   197e0:	push   ebp
   197e1:	mov    ebp,esp
   197e3:	pop    ebp
   197e4:	jmp    0x19750
   197e9:	int3   
   197ea:	int3   
   197eb:	int3   
   197ec:	int3   
   197ed:	int3   
   197ee:	mov    edi,edi
   197f0:	push   ebp
   197f1:	mov    ebp,esp
   197f3:	mov    eax,DWORD PTR [ebp+0x8]
   197f6:	mov    cl,BYTE PTR [ebp+0xc]
   197f9:	mov    BYTE PTR [eax],cl
   197fb:	inc    eax
   197fc:	pop    ebp
   197fd:	ret    0x8
   19800:	int3   
   19801:	int3   
   19802:	int3   
   19803:	int3   
   19804:	int3   
   19805:	int3   
   19806:	mov    edi,edi
   19808:	push   ebp
   19809:	mov    ebp,esp
   1980b:	mov    eax,DWORD PTR [ebp+0x8]
   1980e:	mov    ecx,DWORD PTR [ebp+0xc]
   19811:	mov    DWORD PTR [eax],ecx
   19813:	add    eax,0x4
   19816:	pop    ebp
   19817:	ret    0x8
   1981a:	int3   
   1981b:	int3   
   1981c:	int3   
   1981d:	int3   
   1981e:	int3   
   1981f:	int3   
   19820:	mov    edi,edi
   19822:	push   ebp
   19823:	mov    ebp,esp
   19825:	mov    eax,DWORD PTR [ebp+0x8]
   19828:	mov    cx,WORD PTR [ebp+0xc]
   1982c:	mov    WORD PTR [eax],cx
   1982f:	add    eax,0x2
   19832:	pop    ebp
   19833:	ret    0x8
   19836:	int3   
   19837:	int3   
   19838:	int3   
   19839:	int3   
   1983a:	int3   
   1983b:	int3   
   1983c:	mov    edi,edi
   1983e:	push   ebp
   1983f:	mov    ebp,esp
   19841:	push   esi
   19842:	mov    esi,DWORD PTR [ebp+0x10]
   19845:	push   edi
   19846:	mov    edi,DWORD PTR [ebp+0x8]
   19849:	push   esi
   1984a:	push   DWORD PTR [ebp+0xc]
   1984d:	push   edi
   1984e:	call   0x1dac2
   19853:	add    esp,0xc
   19856:	lea    eax,[edi+esi*1]
   19859:	pop    edi
   1985a:	pop    esi
   1985b:	pop    ebp
   1985c:	ret    0xc
   1985f:	int3   
   19860:	int3   
   19861:	int3   
   19862:	int3   
   19863:	int3   
   19864:	mov    edi,edi
   19866:	push   ebp
   19867:	mov    ebp,esp
   19869:	mov    eax,DWORD PTR [ebp+0xc]
   1986c:	mov    ecx,DWORD PTR [ebp+0x8]
   1986f:	sub    ecx,eax
   19871:	sub    ecx,0x5
   19874:	mov    BYTE PTR [eax],0xe9
   19877:	mov    DWORD PTR [eax+0x1],ecx
   1987a:	add    eax,0x5
   1987d:	pop    ebp
   1987e:	ret    0x8
   19881:	int3   
   19882:	int3   
   19883:	int3   
   19884:	int3   
   19885:	int3   
   19886:	mov    edi,edi
   19888:	push   ebp
   19889:	mov    ebp,esp
   1988b:	push   ecx
   1988c:	push   ebx
   1988d:	mov    ebx,DWORD PTR [ebp+0x8]
   19890:	and    DWORD PTR [ebp+0x8],0x0
   19894:	push   edi
   19895:	mov    edi,ebx
   19897:	test   ebx,ebx
   19899:	jne    0x1989f
   1989b:	xor    eax,eax
   1989d:	jmp    0x198f9
   1989f:	push   esi
   198a0:	push   0x20736649
   198a5:	push   0x80
   198aa:	push   0x0
   198ac:	call   DWORD PTR ds:0x1f02c
   198b2:	mov    esi,eax
   198b4:	mov    DWORD PTR [ebp-0x4],esi
   198b7:	push   0x0
   198b9:	push   edi
   198ba:	push   esi
   198bb:	call   0x19fa8
   198c0:	mov    ecx,eax
   198c2:	sub    ecx,edi
   198c4:	add    DWORD PTR [ebp+0x8],ecx
   198c7:	add    esi,ecx
   198c9:	cmp    DWORD PTR [ebp+0x8],0x5
   198cd:	mov    edi,eax
   198cf:	jb     0x198b7
   198d1:	push   DWORD PTR [ebp+0x8]
   198d4:	push   0x90
   198d9:	push   ebx
   198da:	call   0x1dae6
   198df:	add    esp,0xc
   198e2:	push   esi
   198e3:	lea    eax,[ebx+0x5]
   198e6:	push   eax
   198e7:	call   0x19864
   198ec:	push   ebx
   198ed:	push   DWORD PTR [ebp+0xc]
   198f0:	call   0x19864
   198f5:	mov    eax,DWORD PTR [ebp-0x4]
   198f8:	pop    esi
   198f9:	pop    edi
   198fa:	pop    ebx
   198fb:	leave  
   198fc:	ret    0x8
   198ff:	int3   
   19900:	int3   
   19901:	int3   
   19902:	int3   
   19903:	int3   
   19904:	mov    edi,edi
   19906:	push   ebp
   19907:	mov    ebp,esp
   19909:	mov    eax,DWORD PTR [ebp+0x8]
   1990c:	mov    eax,DWORD PTR [eax+0x1]
   1990f:	pop    ebp
   19910:	ret    0x4
   19913:	int3   
   19914:	int3   
   19915:	int3   
   19916:	int3   
   19917:	int3   
   19918:	mov    edi,edi
   1991a:	push   ebp
   1991b:	mov    ebp,esp
   1991d:	mov    ecx,DWORD PTR [ebp+0x8]
   19920:	movzx  eax,WORD PTR [ecx+0x14]
   19924:	lea    eax,[eax+ecx*1+0x18]
   19928:	movzx  ecx,WORD PTR [ecx+0x6]
   1992c:	push   esi
   1992d:	xor    esi,esi
   1992f:	push   edi
   19930:	test   ecx,ecx
   19932:	jbe    0x1994e
   19934:	mov    edx,DWORD PTR [eax+0xc]
   19937:	cmp    DWORD PTR [ebp+0xc],edx
   1993a:	jb     0x19946
   1993c:	mov    edi,DWORD PTR [eax+0x8]
   1993f:	add    edi,edx
   19941:	cmp    DWORD PTR [ebp+0xc],edi
   19944:	jb     0x19950
   19946:	add    eax,0x28
   19949:	inc    esi
   1994a:	cmp    esi,ecx
   1994c:	jb     0x19934
   1994e:	xor    eax,eax
   19950:	pop    edi
   19951:	pop    esi
   19952:	pop    ebp
   19953:	ret    0x8
   19956:	int3   
   19957:	int3   
   19958:	int3   
   19959:	int3   
   1995a:	int3   
   1995b:	int3   
   1995c:	mov    edi,edi
   1995e:	push   ebp
   1995f:	mov    ebp,esp
   19961:	push   esi
   19962:	push   DWORD PTR [ebp+0xc]
   19965:	mov    esi,DWORD PTR [ebp+0x8]
   19968:	push   esi
   19969:	call   0x19918
   1996e:	mov    ecx,eax
   19970:	test   ecx,ecx
   19972:	je     0x19985
   19974:	mov    eax,DWORD PTR [esi+0x3c]
   19977:	dec    eax
   19978:	not    eax
   1997a:	and    eax,DWORD PTR [ecx+0x14]
   1997d:	sub    eax,DWORD PTR [ecx+0xc]
   19980:	add    eax,DWORD PTR [ebp+0xc]
   19983:	jmp    0x19988
   19985:	mov    eax,DWORD PTR [ebp+0xc]
   19988:	pop    esi
   19989:	pop    ebp
   1998a:	ret    0x8
   1998d:	int3   
   1998e:	int3   
   1998f:	int3   
   19990:	int3   
   19991:	int3   
   19992:	mov    edi,edi
   19994:	push   ebp
   19995:	mov    ebp,esp
   19997:	cmp    DWORD PTR [ebp+0x10],0x0
   1999b:	je     0x199a2
   1999d:	mov    eax,DWORD PTR [ebp+0xc]
   199a0:	jmp    0x199ad
   199a2:	push   DWORD PTR [ebp+0xc]
   199a5:	push   DWORD PTR [ebp+0x8]
   199a8:	call   0x1995c
   199ad:	pop    ebp
   199ae:	ret    0xc
   199b1:	int3   
   199b2:	int3   
   199b3:	int3   
   199b4:	int3   
   199b5:	int3   
   199b6:	mov    edi,edi
   199b8:	push   ebp
   199b9:	mov    ebp,esp
   199bb:	sub    esp,0x1c
   199be:	push   ebx
   199bf:	push   esi
   199c0:	mov    esi,DWORD PTR [ebp+0x8]
   199c3:	push   edi
   199c4:	push   esi
   199c5:	call   0x118a0
   199ca:	call   eax
   199cc:	mov    ebx,eax
   199ce:	lea    eax,[ebp-0x14]
   199d1:	push   eax
   199d2:	push   0x0
   199d4:	push   0x0
   199d6:	push   esi
   199d7:	mov    DWORD PTR [ebp-0x4],ebx
   199da:	call   0x118ca
   199df:	call   eax
   199e1:	mov    edi,eax
   199e3:	mov    eax,DWORD PTR [ebx+0x50]
   199e6:	mov    ecx,edi
   199e8:	sub    ecx,esi
   199ea:	cmp    eax,ecx
   199ec:	jb     0x19a3d
   199ee:	mov    ecx,DWORD PTR [ebp-0x14]
   199f1:	sub    ecx,esi
   199f3:	add    ecx,edi
   199f5:	cmp    eax,ecx
   199f7:	jb     0x19a3d
   199f9:	push   DWORD PTR [ebp+0x10]
   199fc:	push   DWORD PTR [edi+0x20]
   199ff:	push   ebx
   19a00:	call   0x19992
   19a05:	push   DWORD PTR [ebp+0x10]
   19a08:	mov    ebx,eax
   19a0a:	push   DWORD PTR [edi+0x1c]
   19a0d:	add    ebx,esi
   19a0f:	push   DWORD PTR [ebp-0x4]
   19a12:	call   0x19992
   19a17:	push   DWORD PTR [ebp+0x10]
   19a1a:	add    eax,esi
   19a1c:	push   DWORD PTR [edi+0x24]
   19a1f:	mov    DWORD PTR [ebp-0x1c],eax
   19a22:	push   DWORD PTR [ebp-0x4]
   19a25:	call   0x19992
   19a2a:	and    DWORD PTR [ebp-0xc],0x0
   19a2e:	add    eax,esi
   19a30:	mov    esi,DWORD PTR [edi+0x18]
   19a33:	mov    DWORD PTR [ebp-0x18],eax
   19a36:	mov    DWORD PTR [ebp-0x8],esi
   19a39:	test   esi,esi
   19a3b:	jg     0x19a49
   19a3d:	xor    eax,eax
   19a3f:	pop    edi
   19a40:	pop    esi
   19a41:	pop    ebx
   19a42:	leave  
   19a43:	ret    0xc
   19a46:	mov    esi,DWORD PTR [ebp-0x8]
   19a49:	mov    eax,DWORD PTR [ebp-0xc]
   19a4c:	push   DWORD PTR [ebp+0x10]
   19a4f:	add    esi,eax
   19a51:	mov    eax,DWORD PTR [ebp+0xc]
   19a54:	sar    esi,1
   19a56:	push   DWORD PTR [ebx+esi*4]
   19a59:	mov    DWORD PTR [ebp-0x10],eax
   19a5c:	push   DWORD PTR [ebp-0x4]
   19a5f:	call   0x19992
   19a64:	add    eax,DWORD PTR [ebp+0x8]
   19a67:	mov    cl,BYTE PTR [eax]
   19a69:	mov    edx,DWORD PTR [ebp-0x10]
   19a6c:	cmp    cl,BYTE PTR [edx]
   19a6e:	jne    0x19a8b
   19a70:	test   cl,cl
   19a72:	je     0x19a87
   19a74:	mov    cl,BYTE PTR [eax+0x1]
   19a77:	cmp    cl,BYTE PTR [edx+0x1]
   19a7a:	jne    0x19a8b
   19a7c:	inc    eax
   19a7d:	inc    eax
   19a7e:	inc    edx
   19a7f:	inc    edx
   19a80:	mov    DWORD PTR [ebp-0x10],edx
   19a83:	test   cl,cl
   19a85:	jne    0x19a67
   19a87:	xor    eax,eax
   19a89:	jmp    0x19a90
   19a8b:	sbb    eax,eax
   19a8d:	sbb    eax,0xffffffff
   19a90:	test   eax,eax
   19a92:	je     0x19aa9
   19a94:	jge    0x19a9c
   19a96:	inc    esi
   19a97:	mov    DWORD PTR [ebp-0xc],esi
   19a9a:	jmp    0x19a9f
   19a9c:	mov    DWORD PTR [ebp-0x8],esi
   19a9f:	mov    eax,DWORD PTR [ebp-0x8]
   19aa2:	cmp    DWORD PTR [ebp-0xc],eax
   19aa5:	jl     0x19a46
   19aa7:	jmp    0x19a3d
   19aa9:	mov    eax,DWORD PTR [ebp-0x18]
   19aac:	movzx  eax,WORD PTR [eax+esi*2]
   19ab0:	mov    ecx,DWORD PTR [ebp-0x1c]
   19ab3:	mov    ecx,DWORD PTR [ecx+eax*4]
   19ab6:	mov    eax,ecx
   19ab8:	sub    eax,edi
   19aba:	add    eax,DWORD PTR [ebp+0x8]
   19abd:	cmp    eax,DWORD PTR [ebp-0x14]
   19ac0:	sbb    eax,eax
   19ac2:	not    eax
   19ac4:	and    eax,ecx
   19ac6:	jmp    0x19a3f
   19acb:	int3   
   19acc:	int3   
   19acd:	int3   
   19ace:	int3   
   19acf:	int3   
   19ad0:	mov    edi,edi
   19ad2:	push   ebp
   19ad3:	mov    ebp,esp
   19ad5:	sub    esp,0x818
   19adb:	mov    eax,ds:0x7eb3c
   19ae0:	xor    eax,ebp
   19ae2:	mov    DWORD PTR [ebp-0x4],eax
   19ae5:	mov    eax,DWORD PTR [ebp+0x8]
   19ae8:	mov    ecx,DWORD PTR [ebp+0xc]
   19aeb:	push   esi
   19aec:	push   edi
   19aed:	mov    DWORD PTR [ebp-0x7e4],eax
   19af3:	xor    esi,esi
   19af5:	xor    eax,eax
   19af7:	push   ecx
   19af8:	mov    DWORD PTR [ebp-0x7f0],esi
   19afe:	lea    edi,[ebp-0x7ec]
   19b04:	stos   DWORD PTR es:[edi],eax
   19b05:	lea    eax,[ebp-0x7d4]
   19b0b:	push   0x1ec40
   19b10:	push   eax
   19b11:	mov    DWORD PTR [ebp-0x7dc],esi
   19b17:	mov    DWORD PTR [ebp-0x7e8],esi
   19b1d:	call   DWORD PTR ds:0x1f04c
   19b23:	add    esp,0xc
   19b26:	lea    eax,[ebp-0x7d4]
   19b2c:	push   eax
   19b2d:	lea    eax,[ebp-0x810]
   19b33:	push   eax
   19b34:	call   0x11c3c
   19b39:	call   eax
   19b3b:	push   0x10
   19b3d:	lea    eax,[ebp-0x810]
   19b43:	mov    DWORD PTR [ebp-0x800],eax
   19b49:	push   0x1
   19b4b:	lea    eax,[ebp-0x818]
   19b51:	push   eax
   19b52:	lea    eax,[ebp-0x808]
   19b58:	push   eax
   19b59:	push   0x80100000
   19b5e:	lea    eax,[ebp-0x7e0]
   19b64:	push   eax
   19b65:	mov    DWORD PTR [ebp-0x808],0x18
   19b6f:	mov    DWORD PTR [ebp-0x804],esi
   19b75:	mov    DWORD PTR [ebp-0x7fc],esi
   19b7b:	mov    DWORD PTR [ebp-0x7f8],esi
   19b81:	mov    DWORD PTR [ebp-0x7f4],esi
   19b87:	call   0x11750
   19b8c:	call   eax
   19b8e:	cmp    eax,esi
   19b90:	jl     0x19c11
   19b92:	push   ebx
   19b93:	push   DWORD PTR [ebp-0x7e0]
   19b99:	lea    eax,[ebp-0x7f0]
   19b9f:	push   DWORD PTR [ebp+0x10]
   19ba2:	push   0x2
   19ba4:	push   eax
   19ba5:	push   esi
   19ba6:	push   0x4
   19ba8:	lea    eax,[ebp-0x7d8]
   19bae:	push   eax
   19baf:	call   DWORD PTR ds:0x1f058
   19bb5:	push   DWORD PTR [ebp-0x7e0]
   19bbb:	mov    edi,DWORD PTR ds:0x1f064
   19bc1:	mov    ebx,eax
   19bc3:	call   edi
   19bc5:	cmp    ebx,esi
   19bc7:	jl     0x19bfc
   19bc9:	push   0x2
   19bcb:	push   esi
   19bcc:	push   0x2
   19bce:	lea    eax,[ebp-0x7e8]
   19bd4:	push   eax
   19bd5:	push   esi
   19bd6:	push   esi
   19bd7:	push   esi
   19bd8:	lea    eax,[ebp-0x7dc]
   19bde:	push   eax
   19bdf:	push   0xffffffff
   19be1:	push   DWORD PTR [ebp-0x7d8]
   19be7:	call   0x11bbe
   19bec:	call   eax
   19bee:	push   DWORD PTR [ebp-0x7d8]
   19bf4:	mov    ebx,eax
   19bf6:	call   edi
   19bf8:	cmp    ebx,esi
   19bfa:	jge    0x19c00
   19bfc:	mov    eax,ebx
   19bfe:	jmp    0x19c10
   19c00:	mov    eax,DWORD PTR [ebp-0x7dc]
   19c06:	mov    ecx,DWORD PTR [ebp-0x7e4]
   19c0c:	mov    DWORD PTR [ecx],eax
   19c0e:	xor    eax,eax
   19c10:	pop    ebx
   19c11:	mov    ecx,DWORD PTR [ebp-0x4]
   19c14:	pop    edi
   19c15:	xor    ecx,ebp
   19c17:	pop    esi
   19c18:	call   0x1da5d
   19c1d:	leave  
   19c1e:	ret    0xc
   19c21:	int3   
   19c22:	int3   
   19c23:	int3   
   19c24:	int3   
   19c25:	int3   
   19c26:	mov    edi,edi
   19c28:	push   ebp
   19c29:	mov    ebp,esp
   19c2b:	push   DWORD PTR [ebp+0x8]
   19c2e:	push   0xffffffff
   19c30:	call   0x11be8
   19c35:	call   eax
   19c37:	pop    ebp
   19c38:	ret    0x4
   19c3b:	int3   
   19c3c:	int3   
   19c3d:	int3   
   19c3e:	int3   
   19c3f:	int3   
   19c40:	mov    edi,edi
   19c42:	push   ebp
   19c43:	mov    ebp,esp
   19c45:	push   esi
   19c46:	mov    esi,DWORD PTR [ebp+0x8]
   19c49:	test   esi,esi
   19c4b:	jne    0x19c50
   19c4d:	lea    esi,[ecx+0x18]
   19c50:	mov    edx,DWORD PTR [ebp+0xc]
   19c53:	test   edx,edx
   19c55:	jne    0x19c5b
   19c57:	xor    eax,eax
   19c59:	jmp    0x19c6b
   19c5b:	movzx  eax,BYTE PTR [edx]
   19c5e:	push   edx
   19c5f:	lea    eax,[eax*8+0x7a388]
   19c66:	push   esi
   19c67:	push   eax
   19c68:	call   DWORD PTR [eax+0x4]
   19c6b:	pop    esi
   19c6c:	pop    ebp
   19c6d:	ret    0x8
   19c70:	int3   
   19c71:	int3   
   19c72:	int3   
   19c73:	int3   
   19c74:	int3   
   19c75:	int3   
   19c76:	mov    edi,edi
   19c78:	push   ebp
   19c79:	mov    ebp,esp
   19c7b:	mov    eax,DWORD PTR [ebp+0x14]
   19c7e:	push   ebx
   19c7f:	mov    ebx,DWORD PTR [ebp+0x8]
   19c82:	push   esi
   19c83:	mov    esi,DWORD PTR [ebp+0x10]
   19c86:	sub    esi,eax
   19c88:	push   edi
   19c89:	lea    edi,[ebx+eax*1]
   19c8c:	mov    eax,esi
   19c8e:	xor    edx,edx
   19c90:	dec    eax
   19c91:	je     0x19cb2
   19c93:	dec    eax
   19c94:	je     0x19ca4
   19c96:	dec    eax
   19c97:	dec    eax
   19c98:	jne    0x19cbe
   19c9a:	mov    eax,DWORD PTR [ecx+0xc]
   19c9d:	mov    edx,DWORD PTR [edi]
   19c9f:	and    DWORD PTR [eax],0x0
   19ca2:	jmp    0x19cbe
   19ca4:	mov    eax,DWORD PTR [ecx+0xc]
   19ca7:	movsx  edx,WORD PTR [edi]
   19caa:	mov    DWORD PTR [eax],0x2
   19cb0:	jmp    0x19cbe
   19cb2:	mov    eax,DWORD PTR [ecx+0xc]
   19cb5:	movsx  edx,BYTE PTR [edi]
   19cb8:	mov    DWORD PTR [eax],0x3
   19cbe:	mov    ecx,DWORD PTR [ebp+0xc]
   19cc1:	lea    eax,[edx+ecx*1]
   19cc4:	add    eax,DWORD PTR [ebp+0x10]
   19cc7:	sub    edx,ebx
   19cc9:	add    edx,ecx
   19ccb:	dec    esi
   19ccc:	je     0x19cde
   19cce:	dec    esi
   19ccf:	je     0x19cd9
   19cd1:	dec    esi
   19cd2:	dec    esi
   19cd3:	jne    0x19ce0
   19cd5:	mov    DWORD PTR [edi],edx
   19cd7:	jmp    0x19ce0
   19cd9:	mov    WORD PTR [edi],dx
   19cdc:	jmp    0x19ce0
   19cde:	mov    BYTE PTR [edi],dl
   19ce0:	pop    edi
   19ce1:	pop    esi
   19ce2:	pop    ebx
   19ce3:	pop    ebp
   19ce4:	ret    0x10
   19ce7:	int3   
   19ce8:	int3   
   19ce9:	int3   
   19cea:	int3   
   19ceb:	int3   
   19cec:	mov    edi,edi
   19cee:	push   ebp
   19cef:	mov    ebp,esp
   19cf1:	mov    eax,DWORD PTR [ebp+0x10]
   19cf4:	inc    eax
   19cf5:	pop    ebp
   19cf6:	ret    0xc
   19cf9:	int3   
   19cfa:	int3   
   19cfb:	int3   
   19cfc:	int3   
   19cfd:	int3   
   19cfe:	mov    edi,edi
   19d00:	push   ebp
   19d01:	mov    ebp,esp
   19d03:	mov    eax,ecx
   19d05:	mov    ecx,DWORD PTR [ebp+0x8]
   19d08:	and    DWORD PTR [eax],0x0
   19d0b:	and    DWORD PTR [eax+0x4],0x0
   19d0f:	test   ecx,ecx
   19d11:	jne    0x19d16
   19d13:	lea    ecx,[eax+0x14]
   19d16:	mov    edx,DWORD PTR [ebp+0xc]
   19d19:	mov    DWORD PTR [eax+0x8],ecx
   19d1c:	test   edx,edx
   19d1e:	jne    0x19d23
   19d20:	lea    edx,[eax+0x10]
   19d23:	mov    DWORD PTR [eax+0xc],edx
   19d26:	and    DWORD PTR [ecx],0x0
   19d29:	mov    ecx,DWORD PTR [eax+0xc]
   19d2c:	and    DWORD PTR [ecx],0x0
   19d2f:	pop    ebp
   19d30:	ret    0x8
   19d33:	int3   
   19d34:	int3   
   19d35:	int3   
   19d36:	int3   
   19d37:	int3   
   19d38:	mov    edi,edi
   19d3a:	push   ebp
   19d3b:	mov    ebp,esp
   19d3d:	push   ecx
   19d3e:	mov    eax,DWORD PTR [ebp+0x8]
   19d41:	mov    eax,DWORD PTR [eax]
   19d43:	push   ebx
   19d44:	push   esi
   19d45:	push   edi
   19d46:	mov    DWORD PTR [ebp-0x4],ecx
   19d49:	mov    esi,eax
   19d4b:	test   eax,0x200000
   19d50:	je     0x19d5d
   19d52:	cmp    DWORD PTR [ecx+0x4],0x0
   19d56:	je     0x19d62
   19d58:	shr    esi,0xb
   19d5b:	jmp    0x19d65
   19d5d:	cmp    DWORD PTR [ecx],0x0
   19d60:	jmp    0x19d56
   19d62:	shr    esi,0x8
   19d65:	mov    ebx,DWORD PTR [ebp+0x10]
   19d68:	and    esi,0x7
   19d6b:	shr    eax,0xe
   19d6e:	and    eax,0x7
   19d71:	mov    edi,esi
   19d73:	jbe    0x19daf
   19d75:	add    eax,ebx
   19d77:	mov    cl,BYTE PTR [eax]
   19d79:	movzx  edx,cl
   19d7c:	mov    dl,BYTE PTR [edx+0x7a288]
   19d82:	test   dl,0x10
   19d85:	je     0x19da7
   19d87:	mov    al,BYTE PTR [eax+0x1]
   19d8a:	and    al,0x7
   19d8c:	cmp    al,0x5
   19d8e:	jne    0x19da7
   19d90:	and    cl,0xc0
   19d93:	je     0x19da4
   19d95:	cmp    cl,0x40
   19d98:	jne    0x19d9f
   19d9a:	lea    edi,[esi+0x1]
   19d9d:	jmp    0x19da7
   19d9f:	cmp    cl,0x80
   19da2:	jne    0x19da7
   19da4:	lea    edi,[esi+0x4]
   19da7:	movzx  eax,dl
   19daa:	and    eax,0xf
   19dad:	add    edi,eax
   19daf:	push   edi
   19db0:	push   ebx
   19db1:	push   DWORD PTR [ebp+0xc]
   19db4:	call   0x1dac2
   19db9:	mov    ecx,DWORD PTR [ebp+0x8]
   19dbc:	mov    eax,DWORD PTR [ecx]
   19dbe:	shl    eax,0xc
   19dc1:	sar    eax,0x1d
   19dc4:	add    esp,0xc
   19dc7:	test   eax,eax
   19dc9:	je     0x19de5
   19dcb:	push   eax
   19dcc:	push   esi
   19dcd:	mov    esi,DWORD PTR [ebp-0x4]
   19dd0:	push   ebx
   19dd1:	push   DWORD PTR [ebp+0xc]
   19dd4:	mov    ecx,esi
   19dd6:	call   0x19c76
   19ddb:	mov    ecx,DWORD PTR [esi+0x8]
   19dde:	mov    DWORD PTR [ecx],eax
   19de0:	mov    ecx,DWORD PTR [ebp+0x8]
   19de3:	jmp    0x19de8
   19de5:	mov    esi,DWORD PTR [ebp-0x4]
   19de8:	test   DWORD PTR [ecx],0x400000
   19dee:	je     0x19df5
   19df0:	mov    eax,DWORD PTR [esi+0xc]
   19df3:	neg    DWORD PTR [eax]
   19df5:	test   DWORD PTR [ecx],0x100000
   19dfb:	je     0x19e03
   19dfd:	mov    eax,DWORD PTR [esi+0x8]
   19e00:	or     DWORD PTR [eax],0xffffffff
   19e03:	lea    eax,[edi+ebx*1]
   19e06:	pop    edi
   19e07:	pop    esi
   19e08:	pop    ebx
   19e09:	leave  
   19e0a:	ret    0xc
   19e0d:	int3   
   19e0e:	int3   
   19e0f:	int3   
   19e10:	int3   
   19e11:	int3   
   19e12:	mov    edi,edi
   19e14:	push   ebp
   19e15:	mov    ebp,esp
   19e17:	push   ebx
   19e18:	push   esi
   19e19:	mov    esi,DWORD PTR [ebp+0x10]
   19e1c:	push   edi
   19e1d:	mov    edi,DWORD PTR [ebp+0xc]
   19e20:	push   esi
   19e21:	push   edi
   19e22:	push   DWORD PTR [ebp+0x8]
   19e25:	mov    ebx,ecx
   19e27:	call   0x19d38
   19e2c:	lea    eax,[esi+0x1]
   19e2f:	movzx  edx,BYTE PTR [eax]
   19e32:	push   eax
   19e33:	inc    edi
   19e34:	lea    edx,[edx*8+0x7a388]
   19e3b:	push   edi
   19e3c:	push   edx
   19e3d:	mov    ecx,ebx
   19e3f:	call   DWORD PTR [edx+0x4]
   19e42:	pop    edi
   19e43:	pop    esi
   19e44:	pop    ebx
   19e45:	pop    ebp
   19e46:	ret    0xc
   19e49:	int3   
   19e4a:	int3   
   19e4b:	int3   
   19e4c:	int3   
   19e4d:	int3   
   19e4e:	mov    edi,edi
   19e50:	push   ebp
   19e51:	mov    ebp,esp
   19e53:	push   ebx
   19e54:	push   esi
   19e55:	mov    esi,DWORD PTR [ebp+0x10]
   19e58:	push   edi
   19e59:	mov    edi,DWORD PTR [ebp+0xc]
   19e5c:	push   esi
   19e5d:	push   edi
   19e5e:	push   DWORD PTR [ebp+0x8]
   19e61:	mov    ebx,ecx
   19e63:	call   0x19d38
   19e68:	lea    eax,[esi+0x1]
   19e6b:	movzx  edx,BYTE PTR [eax]
   19e6e:	push   eax
   19e6f:	inc    edi
   19e70:	lea    edx,[edx*8+0x7ab90]
   19e77:	push   edi
   19e78:	push   edx
   19e79:	mov    ecx,ebx
   19e7b:	call   DWORD PTR [edx+0x4]
   19e7e:	pop    edi
   19e7f:	pop    esi
   19e80:	pop    ebx
   19e81:	pop    ebp
   19e82:	ret    0xc
   19e85:	int3   
   19e86:	int3   
   19e87:	int3   
   19e88:	int3   
   19e89:	int3   
   19e8a:	mov    edi,edi
   19e8c:	push   ebp
   19e8d:	mov    ebp,esp
   19e8f:	mov    DWORD PTR [ecx],0x1
   19e95:	pop    ebp
   19e96:	jmp    0x19e12
   19e9b:	int3   
   19e9c:	int3   
   19e9d:	int3   
   19e9e:	int3   
   19e9f:	int3   
   19ea0:	mov    edi,edi
   19ea2:	push   ebp
   19ea3:	mov    ebp,esp
   19ea5:	mov    DWORD PTR [ecx+0x4],0x1
   19eac:	pop    ebp
   19ead:	jmp    0x19e12
   19eb2:	int3   
   19eb3:	int3   
   19eb4:	int3   
   19eb5:	int3   
   19eb6:	int3   
   19eb7:	int3   
   19eb8:	mov    edi,edi
   19eba:	push   ebp
   19ebb:	mov    ebp,esp
   19ebd:	mov    eax,DWORD PTR [ebp+0x10]
   19ec0:	sub    esp,0x10
   19ec3:	test   BYTE PTR [eax+0x1],0x38
   19ec7:	push   eax
   19ec8:	push   DWORD PTR [ebp+0xc]
   19ecb:	jne    0x19ee0
   19ecd:	mov    DWORD PTR [ebp-0x8],0x5bf6
   19ed4:	mov    DWORD PTR [ebp-0x4],0x19d38
   19edb:	lea    eax,[ebp-0x8]
   19ede:	jmp    0x19ef1
   19ee0:	mov    DWORD PTR [ebp-0x10],0x52f6
   19ee7:	mov    DWORD PTR [ebp-0xc],0x19d38
   19eee:	lea    eax,[ebp-0x10]
   19ef1:	push   eax
   19ef2:	call   0x19d38
   19ef7:	leave  
   19ef8:	ret    0xc
   19efb:	int3   
   19efc:	int3   
   19efd:	int3   
   19efe:	int3   
   19eff:	int3   
   19f00:	mov    edi,edi
   19f02:	push   ebp
   19f03:	mov    ebp,esp
   19f05:	mov    eax,DWORD PTR [ebp+0x10]
   19f08:	sub    esp,0x10
   19f0b:	test   BYTE PTR [eax+0x1],0x38
   19f0f:	push   eax
   19f10:	push   DWORD PTR [ebp+0xc]
   19f13:	jne    0x19f28
   19f15:	mov    DWORD PTR [ebp-0x8],0x66f7
   19f1c:	mov    DWORD PTR [ebp-0x4],0x19d38
   19f23:	lea    eax,[ebp-0x8]
   19f26:	jmp    0x19f39
   19f28:	mov    DWORD PTR [ebp-0x10],0x52f7
   19f2f:	mov    DWORD PTR [ebp-0xc],0x19d38
   19f36:	lea    eax,[ebp-0x10]
   19f39:	push   eax
   19f3a:	call   0x19d38
   19f3f:	leave  
   19f40:	ret    0xc
   19f43:	int3   
   19f44:	int3   
   19f45:	int3   
   19f46:	int3   
   19f47:	int3   
   19f48:	mov    edi,edi
   19f4a:	push   ebp
   19f4b:	mov    ebp,esp
   19f4d:	push   ecx
   19f4e:	push   ecx
   19f4f:	mov    edx,DWORD PTR [ebp+0x10]
   19f52:	mov    al,BYTE PTR [edx+0x1]
   19f55:	cmp    al,0x15
   19f57:	je     0x19f77
   19f59:	cmp    al,0x25
   19f5b:	je     0x19f77
   19f5d:	and    al,0x38
   19f5f:	cmp    al,0x10
   19f61:	je     0x19f6f
   19f63:	cmp    al,0x18
   19f65:	je     0x19f6f
   19f67:	cmp    al,0x20
   19f69:	je     0x19f6f
   19f6b:	cmp    al,0x28
   19f6d:	jne    0x19f83
   19f6f:	mov    eax,DWORD PTR [ecx+0x8]
   19f72:	or     DWORD PTR [eax],0xffffffff
   19f75:	jmp    0x19f83
   19f77:	mov    eax,DWORD PTR [edx+0x2]
   19f7a:	mov    eax,DWORD PTR [eax]
   19f7c:	push   esi
   19f7d:	mov    esi,DWORD PTR [ecx+0x8]
   19f80:	mov    DWORD PTR [esi],eax
   19f82:	pop    esi
   19f83:	push   edx
   19f84:	push   DWORD PTR [ebp+0xc]
   19f87:	lea    eax,[ebp-0x8]
   19f8a:	push   eax
   19f8b:	mov    DWORD PTR [ebp-0x8],0x52ff
   19f92:	mov    DWORD PTR [ebp-0x4],0x19d38
   19f99:	call   0x19d38
   19f9e:	leave  
   19f9f:	ret    0xc
   19fa2:	int3   
   19fa3:	int3   
   19fa4:	int3   
   19fa5:	int3   
   19fa6:	int3   
   19fa7:	int3   
   19fa8:	mov    edi,edi
   19faa:	push   ebp
   19fab:	mov    ebp,esp
   19fad:	sub    esp,0x5c
   19fb0:	mov    eax,ds:0x7eb3c
   19fb5:	xor    eax,ebp
   19fb7:	mov    DWORD PTR [ebp-0x4],eax
   19fba:	mov    eax,DWORD PTR [ebp+0x10]
   19fbd:	push   esi
   19fbe:	mov    esi,DWORD PTR [ebp+0x8]
   19fc1:	push   edi
   19fc2:	mov    edi,DWORD PTR [ebp+0xc]
   19fc5:	push   0x0
   19fc7:	push   eax
   19fc8:	lea    ecx,[ebp-0x5c]
   19fcb:	call   0x19cfe
   19fd0:	nop
   19fd1:	push   edi
   19fd2:	push   esi
   19fd3:	lea    ecx,[ebp-0x5c]
   19fd6:	call   0x19c40
   19fdb:	mov    ecx,DWORD PTR [ebp-0x4]
   19fde:	pop    edi
   19fdf:	xor    ecx,ebp
   19fe1:	pop    esi
   19fe2:	call   0x1da5d
   19fe7:	leave  
   19fe8:	ret    0xc
   19feb:	int3   
   19fec:	int3   
   19fed:	int3   
   19fee:	int3   
   19fef:	int3   
   19ff0:	mov    edi,edi
   19ff2:	push   ebp
   19ff3:	mov    ebp,esp
   19ff5:	push   esi
   19ff6:	mov    esi,DWORD PTR [ebp+0x8]
   19ff9:	push   edi
   19ffa:	mov    edi,ecx
   19ffc:	cmp    edi,esi
   19ffe:	je     0x1a02b
   1a000:	mov    eax,DWORD PTR [edi+0x4]
   1a003:	cmp    eax,DWORD PTR [esi+0x4]
   1a006:	je     0x1a01a
   1a008:	cmp    BYTE PTR [edi],0x0
   1a00b:	je     0x1a014
   1a00d:	push   eax
   1a00e:	call   0x1da40
   1a013:	pop    ecx
   1a014:	mov    al,BYTE PTR [esi]
   1a016:	mov    BYTE PTR [edi],al
   1a018:	jmp    0x1a022
   1a01a:	cmp    BYTE PTR [esi],0x0
   1a01d:	je     0x1a022
   1a01f:	mov    BYTE PTR [edi],0x1
   1a022:	mov    eax,DWORD PTR [esi+0x4]
   1a025:	mov    BYTE PTR [esi],0x0
   1a028:	mov    DWORD PTR [edi+0x4],eax
   1a02b:	mov    eax,edi
   1a02d:	pop    edi
   1a02e:	pop    esi
   1a02f:	pop    ebp
   1a030:	ret    0x4
   1a033:	int3   
   1a034:	int3   
   1a035:	int3   
   1a036:	int3   
   1a037:	int3   
   1a038:	mov    edi,edi
   1a03a:	push   ebp
   1a03b:	mov    ebp,esp
   1a03d:	sub    esp,0x50
   1a040:	push   ebx
   1a041:	push   esi
   1a042:	push   edi
   1a043:	mov    edi,0x4000
   1a048:	push   edi
   1a049:	call   0x10a96
   1a04e:	pop    ecx
   1a04f:	xor    ebx,ebx
   1a051:	push   0x38
   1a053:	push   0x1ec70
   1a058:	cmp    eax,ebx
   1a05a:	mov    DWORD PTR [ebp-0x4],eax
   1a05d:	mov    DWORD PTR [ebp-0xc],eax
   1a060:	push   0x2f
   1a062:	lea    eax,[ebp-0x50]
   1a065:	setne  BYTE PTR [ebp-0x10]
   1a069:	push   eax
   1a06a:	xor    esi,esi
   1a06c:	mov    DWORD PTR [ebp-0x30],ebx
   1a06f:	mov    DWORD PTR [ebp-0x2c],ebx
   1a072:	mov    DWORD PTR [ebp-0x28],ebx
   1a075:	mov    DWORD PTR [ebp-0x4c],ebx
   1a078:	mov    DWORD PTR [ebp-0x50],ebx
   1a07b:	call   0x1b92c
   1a080:	test   eax,eax
   1a082:	je     0x1a0a1
   1a084:	mov    esi,DWORD PTR [ebp+0x8]
   1a087:	mov    BYTE PTR [esi],bl
   1a089:	mov    DWORD PTR [esi+0x4],ebx
   1a08c:	cmp    BYTE PTR [ebp-0x10],bl
   1a08f:	je     0x1a09a
   1a091:	push   DWORD PTR [ebp-0x4]
   1a094:	call   0x1da40
   1a099:	pop    ecx
   1a09a:	mov    eax,esi
   1a09c:	jmp    0x1a1b6
   1a0a1:	mov    eax,DWORD PTR [ebp+0x10]
   1a0a4:	mov    DWORD PTR [ebp-0x4c],eax
   1a0a7:	mov    eax,DWORD PTR [ebp+0xc]
   1a0aa:	mov    DWORD PTR [ebp-0x50],eax
   1a0ad:	mov    eax,DWORD PTR [ebp-0xc]
   1a0b0:	add    eax,esi
   1a0b2:	mov    DWORD PTR [ebp-0x44],eax
   1a0b5:	push   0x4
   1a0b7:	lea    eax,[ebp-0x50]
   1a0ba:	push   eax
   1a0bb:	mov    DWORD PTR [ebp-0x40],edi
   1a0be:	call   0x1bac0
   1a0c3:	cmp    eax,0xfffffffc
   1a0c6:	mov    DWORD PTR [ebp+0x10],eax
   1a0c9:	jl     0x1a0dd
   1a0cb:	cmp    eax,0xfffffffd
   1a0ce:	jle    0x1a166
   1a0d4:	cmp    eax,0x2
   1a0d7:	je     0x1a166
   1a0dd:	mov    eax,edi
   1a0df:	sub    eax,DWORD PTR [ebp-0x40]
   1a0e2:	add    esi,eax
   1a0e4:	cmp    DWORD PTR [ebp-0x40],ebx
   1a0e7:	jne    0x1a150
   1a0e9:	mov    al,BYTE PTR [ebp-0x10]
   1a0ec:	mov    BYTE PTR [ebp-0x18],al
   1a0ef:	mov    eax,DWORD PTR [ebp-0xc]
   1a0f2:	mov    DWORD PTR [ebp-0x14],eax
   1a0f5:	lea    eax,[esi+0x4000]
   1a0fb:	push   eax
   1a0fc:	mov    BYTE PTR [ebp-0x10],bl
   1a0ff:	call   0x10a96
   1a104:	pop    ecx
   1a105:	cmp    eax,ebx
   1a107:	setne  cl
   1a10a:	mov    DWORD PTR [ebp-0x4],eax
   1a10d:	lea    eax,[ebp-0x8]
   1a110:	mov    BYTE PTR [ebp-0x8],cl
   1a113:	push   eax
   1a114:	lea    ecx,[ebp-0x10]
   1a117:	call   0x19ff0
   1a11c:	cmp    BYTE PTR [ebp-0x8],bl
   1a11f:	je     0x1a12a
   1a121:	push   DWORD PTR [ebp-0x4]
   1a124:	call   0x1da40
   1a129:	pop    ecx
   1a12a:	push   esi
   1a12b:	push   DWORD PTR [ebp-0x14]
   1a12e:	push   DWORD PTR [ebp-0xc]
   1a131:	call   0x1dac2
   1a136:	add    esp,0xc
   1a139:	cmp    BYTE PTR [ebp-0x18],bl
   1a13c:	je     0x1a147
   1a13e:	push   DWORD PTR [ebp-0x14]
   1a141:	call   0x1da40
   1a146:	pop    ecx
   1a147:	cmp    DWORD PTR [ebp-0x40],ebx
   1a14a:	je     0x1a0ad
   1a150:	lea    eax,[ebp-0x50]
   1a153:	push   eax
   1a154:	call   0x1cce6
   1a159:	cmp    DWORD PTR [ebp+0x10],0x1
   1a15d:	jne    0x1a188
   1a15f:	mov    eax,DWORD PTR [ebp+0x14]
   1a162:	mov    DWORD PTR [eax],esi
   1a164:	jmp    0x1a1a8
   1a166:	lea    eax,[ebp-0x50]
   1a169:	push   eax
   1a16a:	call   0x1cce6
   1a16f:	mov    esi,DWORD PTR [ebp+0x8]
   1a172:	mov    BYTE PTR [esi],bl
   1a174:	mov    DWORD PTR [esi+0x4],ebx
   1a177:	cmp    BYTE PTR [ebp-0x10],bl
   1a17a:	je     0x1a09a
   1a180:	push   DWORD PTR [ebp-0xc]
   1a183:	jmp    0x1a094
   1a188:	lea    eax,[ebp-0x18]
   1a18b:	push   eax
   1a18c:	lea    ecx,[ebp-0x10]
   1a18f:	mov    BYTE PTR [ebp-0x18],bl
   1a192:	mov    DWORD PTR [ebp-0x14],ebx
   1a195:	call   0x19ff0
   1a19a:	cmp    BYTE PTR [ebp-0x18],bl
   1a19d:	je     0x1a1a8
   1a19f:	push   DWORD PTR [ebp-0x14]
   1a1a2:	call   0x1da40
   1a1a7:	pop    ecx
   1a1a8:	mov    eax,DWORD PTR [ebp+0x8]
   1a1ab:	mov    cl,BYTE PTR [ebp-0x10]
   1a1ae:	mov    BYTE PTR [eax],cl
   1a1b0:	mov    ecx,DWORD PTR [ebp-0xc]
   1a1b3:	mov    DWORD PTR [eax+0x4],ecx
   1a1b6:	pop    edi
   1a1b7:	pop    esi
   1a1b8:	pop    ebx
   1a1b9:	leave  
   1a1ba:	ret    0x10
   1a1bd:	int3   
   1a1be:	int3   
   1a1bf:	int3   
   1a1c0:	int3   
   1a1c1:	int3   
   1a1c2:	push   0x0
   1a1c4:	push   0x7f840
   1a1c9:	call   DWORD PTR ds:0x1f024
   1a1cf:	ret    
   1a1d0:	int3   
   1a1d1:	int3   
   1a1d2:	int3   
   1a1d3:	int3   
   1a1d4:	int3   
   1a1d5:	int3   
   1a1d6:	push   0x0
   1a1d8:	push   0x7f840
   1a1dd:	call   0x11c12
   1a1e2:	call   eax
   1a1e4:	and    DWORD PTR ds:0x7f860,0x0
   1a1eb:	and    DWORD PTR ds:0x7f864,0x0
   1a1f2:	ret    
   1a1f3:	int3   
   1a1f4:	int3   
   1a1f5:	int3   
   1a1f6:	int3   
   1a1f7:	int3   
   1a1f8:	mov    edi,edi
   1a1fa:	push   esi
   1a1fb:	push   edi
   1a1fc:	push   0x1
   1a1fe:	xor    edi,edi
   1a200:	push   edi
   1a201:	mov    esi,ecx
   1a203:	call   0x139bc
   1a208:	cmp    DWORD PTR ds:0x7f6ec,edi
   1a20e:	jne    0x1a225
   1a210:	mov    ecx,eax
   1a212:	mov    DWORD PTR ds:0x7f6ec,ecx
   1a218:	mov    DWORD PTR [ecx],edi
   1a21a:	mov    ecx,DWORD PTR ds:0x7f6ec
   1a220:	xor    eax,eax
   1a222:	mov    DWORD PTR [ecx+0x8],edi
   1a225:	inc    DWORD PTR ds:0x7f868
   1a22b:	cmp    eax,edi
   1a22d:	je     0x1a236
   1a22f:	push   eax
   1a230:	call   0x1da40
   1a235:	pop    ecx
   1a236:	push   edi
   1a237:	push   DWORD PTR ds:0x7f6ec
   1a23d:	mov    ecx,esi
   1a23f:	call   0x139bc
   1a244:	mov    DWORD PTR [esi+0xc],edi
   1a247:	mov    DWORD PTR [esi+0x4],eax
   1a24a:	mov    DWORD PTR [eax],eax
   1a24c:	mov    esi,DWORD PTR [esi+0x4]
   1a24f:	pop    edi
   1a250:	mov    DWORD PTR [esi+0x8],esi
   1a253:	pop    esi
   1a254:	ret    
   1a255:	int3   
   1a256:	int3   
   1a257:	int3   
   1a258:	int3   
   1a259:	int3   
   1a25a:	mov    edi,edi
   1a25c:	push   ebx
   1a25d:	xor    ebx,ebx
   1a25f:	push   ebx
   1a260:	push   ebx
   1a261:	push   ebx
   1a262:	push   ebx
   1a263:	push   0x7f840
   1a268:	call   DWORD PTR ds:0x1f028
   1a26e:	test   eax,eax
   1a270:	jge    0x1a276
   1a272:	xor    al,al
   1a274:	pop    ebx
   1a275:	ret    
   1a276:	push   esi
   1a277:	cmp    DWORD PTR ds:0x7f860,ebx
   1a27d:	jne    0x1a2a5
   1a27f:	push   0x10
   1a281:	call   0x10a96
   1a286:	mov    esi,eax
   1a288:	pop    ecx
   1a289:	cmp    esi,ebx
   1a28b:	je     0x1a29f
   1a28d:	mov    ecx,esi
   1a28f:	mov    BYTE PTR [esi+0x8],bl
   1a292:	call   0x1a1f8
   1a297:	mov    DWORD PTR ds:0x7f860,esi
   1a29d:	jmp    0x1a2a5
   1a29f:	mov    DWORD PTR ds:0x7f860,ebx
   1a2a5:	cmp    DWORD PTR ds:0x7f864,ebx
   1a2ab:	jne    0x1a2d3
   1a2ad:	push   0x10
   1a2af:	call   0x10a96
   1a2b4:	mov    esi,eax
   1a2b6:	pop    ecx
   1a2b7:	cmp    esi,ebx
   1a2b9:	je     0x1a2cd
   1a2bb:	mov    ecx,esi
   1a2bd:	mov    BYTE PTR [esi+0x8],bl
   1a2c0:	call   0x140cc
   1a2c5:	mov    DWORD PTR ds:0x7f864,esi
   1a2cb:	jmp    0x1a2d3
   1a2cd:	mov    DWORD PTR ds:0x7f864,ebx
   1a2d3:	pop    esi
   1a2d4:	mov    al,0x1
   1a2d6:	pop    ebx
   1a2d7:	ret    
   1a2d8:	int3   
   1a2d9:	int3   
   1a2da:	int3   
   1a2db:	int3   
   1a2dc:	int3   
   1a2dd:	int3   
   1a2de:	mov    eax,ecx
   1a2e0:	add    DWORD PTR [eax+0x8],0x4
   1a2e4:	mov    ecx,DWORD PTR [eax+0x8]
   1a2e7:	cmp    ecx,DWORD PTR [eax+0x4]
   1a2ea:	jne    0x1a305
   1a2ec:	add    DWORD PTR [eax+0xc],0x4
   1a2f0:	mov    ecx,DWORD PTR [eax+0xc]
   1a2f3:	mov    ecx,DWORD PTR [ecx]
   1a2f5:	mov    DWORD PTR [eax],ecx
   1a2f7:	add    ecx,0x1000
   1a2fd:	mov    DWORD PTR [eax+0x4],ecx
   1a300:	mov    ecx,DWORD PTR [eax]
   1a302:	mov    DWORD PTR [eax+0x8],ecx
   1a305:	ret    
   1a306:	int3   
   1a307:	int3   
   1a308:	int3   
   1a309:	int3   
   1a30a:	int3   
   1a30b:	int3   
   1a30c:	mov    edi,edi
   1a30e:	push   ebp
   1a30f:	mov    ebp,esp
   1a311:	mov    eax,ecx
   1a313:	mov    ecx,DWORD PTR [ebp+0xc]
   1a316:	mov    edx,DWORD PTR [ecx]
   1a318:	mov    DWORD PTR [eax],edx
   1a31a:	mov    edx,DWORD PTR [ecx]
   1a31c:	add    edx,0x1000
   1a322:	mov    DWORD PTR [eax+0x4],edx
   1a325:	mov    edx,DWORD PTR [ebp+0x8]
   1a328:	mov    DWORD PTR [eax+0x8],edx
   1a32b:	mov    DWORD PTR [eax+0xc],ecx
   1a32e:	pop    ebp
   1a32f:	ret    0x8
   1a332:	int3   
   1a333:	int3   
   1a334:	int3   
   1a335:	int3   
   1a336:	int3   
   1a337:	int3   
   1a338:	mov    edi,edi
   1a33a:	push   ebp
   1a33b:	mov    ebp,esp
   1a33d:	mov    eax,DWORD PTR [ebp+0x8]
   1a340:	mov    edx,DWORD PTR ds:0x7f89c
   1a346:	jmp    0x1a34a
   1a348:	mov    eax,ecx
   1a34a:	mov    ecx,DWORD PTR [eax+0x8]
   1a34d:	cmp    ecx,edx
   1a34f:	jne    0x1a348
   1a351:	pop    ebp
   1a352:	ret    0x4
   1a355:	int3   
   1a356:	int3   
   1a357:	int3   
   1a358:	int3   
   1a359:	int3   
   1a35a:	mov    edi,edi
   1a35c:	push   ebp
   1a35d:	mov    ebp,esp
   1a35f:	mov    eax,DWORD PTR [ebp+0x8]
   1a362:	mov    edx,DWORD PTR ds:0x7f89c
   1a368:	jmp    0x1a36c
   1a36a:	mov    eax,ecx
   1a36c:	mov    ecx,DWORD PTR [eax]
   1a36e:	cmp    ecx,edx
   1a370:	jne    0x1a36a
   1a372:	pop    ebp
   1a373:	ret    0x4
   1a376:	int3   
   1a377:	int3   
   1a378:	int3   
   1a379:	int3   
   1a37a:	int3   
   1a37b:	int3   
   1a37c:	mov    edi,edi
   1a37e:	push   esi
   1a37f:	mov    esi,ecx
   1a381:	mov    ecx,DWORD PTR [esi]
   1a383:	mov    eax,DWORD PTR [ecx+0x8]
   1a386:	cmp    eax,DWORD PTR ds:0x7f89c
   1a38c:	je     0x1a39a
   1a38e:	push   eax
   1a38f:	call   0x1a35a
   1a394:	jmp    0x1a3a9
   1a396:	mov    DWORD PTR [esi],eax
   1a398:	mov    ecx,eax
   1a39a:	mov    eax,DWORD PTR [ecx+0x4]
   1a39d:	cmp    ecx,DWORD PTR [eax+0x8]
   1a3a0:	je     0x1a396
   1a3a2:	mov    ecx,DWORD PTR [esi]
   1a3a4:	cmp    DWORD PTR [ecx+0x8],eax
   1a3a7:	je     0x1a3ab
   1a3a9:	mov    DWORD PTR [esi],eax
   1a3ab:	pop    esi
   1a3ac:	ret    
   1a3ad:	int3   
   1a3ae:	int3   
   1a3af:	int3   
   1a3b0:	int3   
   1a3b1:	int3   
   1a3b2:	mov    edi,edi
   1a3b4:	push   ebp
   1a3b5:	mov    ebp,esp
   1a3b7:	mov    eax,DWORD PTR [ebp+0x8]
   1a3ba:	test   eax,eax
   1a3bc:	je     0x1a3c5
   1a3be:	mov    ecx,DWORD PTR [ebp+0xc]
   1a3c1:	mov    ecx,DWORD PTR [ecx]
   1a3c3:	mov    DWORD PTR [eax],ecx
   1a3c5:	pop    ebp
   1a3c6:	ret    0x8
   1a3c9:	int3   
   1a3ca:	int3   
   1a3cb:	int3   
   1a3cc:	int3   
   1a3cd:	int3   
   1a3ce:	mov    edi,edi
   1a3d0:	push   ebp
   1a3d1:	mov    ebp,esp
   1a3d3:	mov    eax,DWORD PTR [ebp+0x8]
   1a3d6:	jmp    0x1a3e6
   1a3d8:	mov    ecx,DWORD PTR [eax]
   1a3da:	mov    edx,DWORD PTR [ebp+0x10]
   1a3dd:	add    DWORD PTR [ebp+0x10],0x4
   1a3e1:	mov    DWORD PTR [edx],ecx
   1a3e3:	add    eax,0x4
   1a3e6:	cmp    eax,DWORD PTR [ebp+0xc]
   1a3e9:	jne    0x1a3d8
   1a3eb:	mov    eax,DWORD PTR [ebp+0x10]
   1a3ee:	pop    ebp
   1a3ef:	ret    0xc
   1a3f2:	int3   
   1a3f3:	int3   
   1a3f4:	int3   
   1a3f5:	int3   
   1a3f6:	int3   
   1a3f7:	int3   
   1a3f8:	mov    edi,edi
   1a3fa:	push   ebp
   1a3fb:	mov    ebp,esp
   1a3fd:	mov    eax,DWORD PTR [ebp+0x8]
   1a400:	test   eax,eax
   1a402:	jge    0x1a406
   1a404:	xor    eax,eax
   1a406:	shl    eax,0x2
   1a409:	push   eax
   1a40a:	call   0x10a96
   1a40f:	pop    ecx
   1a410:	pop    ebp
   1a411:	ret    0x8
   1a414:	int3   
   1a415:	int3   
   1a416:	int3   
   1a417:	int3   
   1a418:	int3   
   1a419:	int3   
   1a41a:	mov    edi,edi
   1a41c:	push   ebp
   1a41d:	mov    ebp,esp
   1a41f:	push   esi
   1a420:	mov    esi,ecx
   1a422:	push   DWORD PTR [esi]
   1a424:	call   0x1da40
   1a429:	test   BYTE PTR [ebp+0x8],0x1
   1a42d:	pop    ecx
   1a42e:	je     0x1a437
   1a430:	push   esi
   1a431:	call   0x1da40
   1a436:	pop    ecx
   1a437:	mov    eax,esi
   1a439:	pop    esi
   1a43a:	pop    ebp
   1a43b:	ret    0x4
   1a43e:	int3   
   1a43f:	int3   
   1a440:	int3   
   1a441:	int3   
   1a442:	int3   
   1a443:	int3   
   1a444:	mov    edi,edi
   1a446:	push   ebp
   1a447:	mov    ebp,esp
   1a449:	mov    eax,ds:0x7f894
   1a44e:	sub    esp,0x20
   1a451:	push   ebx
   1a452:	push   esi
   1a453:	push   edi
   1a454:	lea    esi,[eax+0x4]
   1a457:	lea    edi,[ebp-0x10]
   1a45a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a45b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a45e:	lea    ebx,[eax+0x14]
   1a461:	jmp    0x1a47f
   1a463:	mov    eax,DWORD PTR [eax]
   1a465:	mov    ecx,DWORD PTR [eax+0x8]
   1a468:	cmp    ecx,DWORD PTR [ebp+0x8]
   1a46b:	jne    0x1a477
   1a46d:	cmp    BYTE PTR [eax+0x24],0x0
   1a471:	jne    0x1a490
   1a473:	mov    BYTE PTR [eax+0x24],0x1
   1a477:	lea    ecx,[ebp-0x10]
   1a47a:	call   0x1a2de
   1a47f:	mov    eax,DWORD PTR [ebp-0x8]
   1a482:	lea    edi,[ebp-0x20]
   1a485:	mov    esi,ebx
   1a487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a48a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a48b:	cmp    eax,DWORD PTR [ebp-0x18]
   1a48e:	jne    0x1a463
   1a490:	pop    edi
   1a491:	pop    esi
   1a492:	pop    ebx
   1a493:	leave  
   1a494:	ret    0x4
   1a497:	int3   
   1a498:	int3   
   1a499:	int3   
   1a49a:	int3   
   1a49b:	int3   
   1a49c:	mov    eax,ecx
   1a49e:	xor    ecx,ecx
   1a4a0:	mov    DWORD PTR [eax+0x4],ecx
   1a4a3:	mov    DWORD PTR [eax+0x8],ecx
   1a4a6:	mov    DWORD PTR [eax+0xc],ecx
   1a4a9:	mov    DWORD PTR [eax+0x10],ecx
   1a4ac:	mov    DWORD PTR [eax+0x14],ecx
   1a4af:	mov    DWORD PTR [eax+0x18],ecx
   1a4b2:	mov    DWORD PTR [eax+0x1c],ecx
   1a4b5:	mov    DWORD PTR [eax+0x20],ecx
   1a4b8:	mov    DWORD PTR [eax+0x24],ecx
   1a4bb:	mov    DWORD PTR [eax+0x28],ecx
   1a4be:	mov    DWORD PTR [eax+0x2c],ecx
   1a4c1:	ret    0x4
   1a4c4:	int3   
   1a4c5:	int3   
   1a4c6:	int3   
   1a4c7:	int3   
   1a4c8:	int3   
   1a4c9:	int3   
   1a4ca:	mov    edi,edi
   1a4cc:	push   ebp
   1a4cd:	mov    ebp,esp
   1a4cf:	sub    esp,0x10
   1a4d2:	push   esi
   1a4d3:	push   edi
   1a4d4:	lea    esi,[ecx+0x4]
   1a4d7:	lea    edi,[ebp-0x10]
   1a4da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4de:	mov    eax,DWORD PTR [ebp-0x8]
   1a4e1:	pop    edi
   1a4e2:	pop    esi
   1a4e3:	leave  
   1a4e4:	ret    
   1a4e5:	int3   
   1a4e6:	int3   
   1a4e7:	int3   
   1a4e8:	int3   
   1a4e9:	int3   
   1a4ea:	mov    edi,edi
   1a4ec:	push   ebp
   1a4ed:	mov    ebp,esp
   1a4ef:	mov    edx,DWORD PTR [ebp+0x8]
   1a4f2:	mov    eax,DWORD PTR [edx+0x8]
   1a4f5:	push   esi
   1a4f6:	mov    esi,DWORD PTR [eax]
   1a4f8:	mov    DWORD PTR [edx+0x8],esi
   1a4fb:	mov    esi,DWORD PTR [eax]
   1a4fd:	cmp    esi,DWORD PTR ds:0x7f89c
   1a503:	je     0x1a508
   1a505:	mov    DWORD PTR [esi+0x4],edx
   1a508:	mov    esi,DWORD PTR [edx+0x4]
   1a50b:	mov    DWORD PTR [eax+0x4],esi
   1a50e:	mov    ecx,DWORD PTR [ecx+0x4]
   1a511:	pop    esi
   1a512:	cmp    edx,DWORD PTR [ecx+0x4]
   1a515:	jne    0x1a51c
   1a517:	mov    DWORD PTR [ecx+0x4],eax
   1a51a:	jmp    0x1a52a
   1a51c:	mov    ecx,DWORD PTR [edx+0x4]
   1a51f:	cmp    edx,DWORD PTR [ecx]
   1a521:	jne    0x1a527
   1a523:	mov    DWORD PTR [ecx],eax
   1a525:	jmp    0x1a52a
   1a527:	mov    DWORD PTR [ecx+0x8],eax
   1a52a:	mov    DWORD PTR [eax],edx
   1a52c:	mov    DWORD PTR [edx+0x4],eax
   1a52f:	pop    ebp
   1a530:	ret    0x4
   1a533:	int3   
   1a534:	int3   
   1a535:	int3   
   1a536:	int3   
   1a537:	int3   
   1a538:	mov    edi,edi
   1a53a:	push   ebp
   1a53b:	mov    ebp,esp
   1a53d:	mov    edx,DWORD PTR [ebp+0x8]
   1a540:	mov    eax,DWORD PTR [edx]
   1a542:	push   esi
   1a543:	mov    esi,DWORD PTR [eax+0x8]
   1a546:	mov    DWORD PTR [edx],esi
   1a548:	mov    esi,DWORD PTR [eax+0x8]
   1a54b:	cmp    esi,DWORD PTR ds:0x7f89c
   1a551:	je     0x1a556
   1a553:	mov    DWORD PTR [esi+0x4],edx
   1a556:	mov    esi,DWORD PTR [edx+0x4]
   1a559:	mov    DWORD PTR [eax+0x4],esi
   1a55c:	mov    ecx,DWORD PTR [ecx+0x4]
   1a55f:	pop    esi
   1a560:	cmp    edx,DWORD PTR [ecx+0x4]
   1a563:	jne    0x1a56a
   1a565:	mov    DWORD PTR [ecx+0x4],eax
   1a568:	jmp    0x1a579
   1a56a:	mov    ecx,DWORD PTR [edx+0x4]
   1a56d:	cmp    edx,DWORD PTR [ecx+0x8]
   1a570:	jne    0x1a577
   1a572:	mov    DWORD PTR [ecx+0x8],eax
   1a575:	jmp    0x1a579
   1a577:	mov    DWORD PTR [ecx],eax
   1a579:	mov    DWORD PTR [eax+0x8],edx
   1a57c:	mov    DWORD PTR [edx+0x4],eax
   1a57f:	pop    ebp
   1a580:	ret    0x4
   1a583:	int3   
   1a584:	int3   
   1a585:	int3   
   1a586:	int3   
   1a587:	int3   
   1a588:	mov    edi,edi
   1a58a:	push   esi
   1a58b:	mov    esi,ecx
   1a58d:	mov    ecx,DWORD PTR [esi]
   1a58f:	cmp    DWORD PTR [ecx+0x14],0x0
   1a593:	jne    0x1a5a2
   1a595:	mov    eax,DWORD PTR [ecx+0x4]
   1a598:	cmp    DWORD PTR [eax+0x4],ecx
   1a59b:	jne    0x1a5a2
   1a59d:	mov    eax,DWORD PTR [ecx+0x8]
   1a5a0:	jmp    0x1a5bf
   1a5a2:	mov    eax,DWORD PTR [ecx]
   1a5a4:	cmp    eax,DWORD PTR ds:0x7f89c
   1a5aa:	je     0x1a5b8
   1a5ac:	push   eax
   1a5ad:	call   0x1a338
   1a5b2:	jmp    0x1a5bf
   1a5b4:	mov    DWORD PTR [esi],eax
   1a5b6:	mov    ecx,eax
   1a5b8:	mov    eax,DWORD PTR [ecx+0x4]
   1a5bb:	cmp    ecx,DWORD PTR [eax]
   1a5bd:	je     0x1a5b4
   1a5bf:	mov    DWORD PTR [esi],eax
   1a5c1:	pop    esi
   1a5c2:	ret    
   1a5c3:	int3   
   1a5c4:	int3   
   1a5c5:	int3   
   1a5c6:	int3   
   1a5c7:	int3   
   1a5c8:	mov    edi,edi
   1a5ca:	push   ebp
   1a5cb:	mov    ebp,esp
   1a5cd:	mov    eax,DWORD PTR [ecx+0x4]
   1a5d0:	push   esi
   1a5d1:	mov    esi,DWORD PTR [eax+0x4]
   1a5d4:	push   edi
   1a5d5:	mov    edi,eax
   1a5d7:	jmp    0x1a5f2
   1a5d9:	push   DWORD PTR [ebp+0x8]
   1a5dc:	lea    eax,[esi+0xc]
   1a5df:	push   eax
   1a5e0:	call   0x197ae
   1a5e5:	test   al,al
   1a5e7:	je     0x1a5ee
   1a5e9:	mov    esi,DWORD PTR [esi+0x8]
   1a5ec:	jmp    0x1a5f2
   1a5ee:	mov    edi,esi
   1a5f0:	mov    esi,DWORD PTR [esi]
   1a5f2:	cmp    esi,DWORD PTR ds:0x7f89c
   1a5f8:	jne    0x1a5d9
   1a5fa:	mov    eax,edi
   1a5fc:	pop    edi
   1a5fd:	pop    esi
   1a5fe:	pop    ebp
   1a5ff:	ret    0x4
   1a602:	int3   
   1a603:	int3   
   1a604:	int3   
   1a605:	int3   
   1a606:	int3   
   1a607:	int3   
   1a608:	mov    edi,edi
   1a60a:	push   ebp
   1a60b:	mov    ebp,esp
   1a60d:	mov    eax,DWORD PTR [ecx+0x4]
   1a610:	push   esi
   1a611:	mov    esi,DWORD PTR [eax+0x4]
   1a614:	push   edi
   1a615:	mov    edi,eax
   1a617:	jmp    0x1a632
   1a619:	lea    eax,[esi+0xc]
   1a61c:	push   eax
   1a61d:	push   DWORD PTR [ebp+0x8]
   1a620:	call   0x197ae
   1a625:	test   al,al
   1a627:	je     0x1a62f
   1a629:	mov    edi,esi
   1a62b:	mov    esi,DWORD PTR [esi]
   1a62d:	jmp    0x1a632
   1a62f:	mov    esi,DWORD PTR [esi+0x8]
   1a632:	cmp    esi,DWORD PTR ds:0x7f89c
   1a638:	jne    0x1a619
   1a63a:	mov    eax,edi
   1a63c:	pop    edi
   1a63d:	pop    esi
   1a63e:	pop    ebp
   1a63f:	ret    0x4
   1a642:	int3   
   1a643:	int3   
   1a644:	int3   
   1a645:	int3   
   1a646:	int3   
   1a647:	int3   
   1a648:	mov    edi,edi
   1a64a:	push   ebp
   1a64b:	mov    ebp,esp
   1a64d:	mov    ecx,DWORD PTR [ebp+0x8]
   1a650:	test   ecx,ecx
   1a652:	je     0x1a65c
   1a654:	push   DWORD PTR [ebp+0xc]
   1a657:	call   0x1294e
   1a65c:	pop    ebp
   1a65d:	ret    0x8
   1a660:	int3   
   1a661:	int3   
   1a662:	int3   
   1a663:	int3   
   1a664:	int3   
   1a665:	int3   
   1a666:	mov    edi,edi
   1a668:	push   ebp
   1a669:	mov    ebp,esp
   1a66b:	mov    ecx,DWORD PTR [ebp+0x8]
   1a66e:	push   0x0
   1a670:	call   0x1a41a
   1a675:	pop    ebp
   1a676:	ret    0x4
   1a679:	int3   
   1a67a:	int3   
   1a67b:	int3   
   1a67c:	int3   
   1a67d:	int3   
   1a67e:	mov    edi,edi
   1a680:	push   ebp
   1a681:	mov    ebp,esp
   1a683:	push   edi
   1a684:	mov    edi,DWORD PTR [ebp+0xc]
   1a687:	cmp    DWORD PTR [ebp+0x8],edi
   1a68a:	je     0x1a6a0
   1a68c:	push   esi
   1a68d:	mov    esi,DWORD PTR [ebp+0x10]
   1a690:	inc    DWORD PTR [esi]
   1a692:	lea    ecx,[ebp+0x8]
   1a695:	call   0x1a37c
   1a69a:	cmp    DWORD PTR [ebp+0x8],edi
   1a69d:	jne    0x1a690
   1a69f:	pop    esi
   1a6a0:	pop    edi
   1a6a1:	pop    ebp
   1a6a2:	ret    
   1a6a3:	int3   
   1a6a4:	int3   
   1a6a5:	int3   
   1a6a6:	int3   
   1a6a7:	int3   
   1a6a8:	mov    edi,edi
   1a6aa:	push   ebp
   1a6ab:	mov    ebp,esp
   1a6ad:	mov    eax,DWORD PTR [ebp+0xc]
   1a6b0:	mov    ecx,DWORD PTR [eax+0x34]
   1a6b3:	lea    eax,[ecx+eax*1+0x40]
   1a6b7:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6ba:	push   0xffffffff
   1a6bc:	push   eax
   1a6bd:	call   0x1292e
   1a6c2:	mov    eax,DWORD PTR [ebp+0x8]
   1a6c5:	pop    ebp
   1a6c6:	ret    0x8
   1a6c9:	int3   
   1a6ca:	int3   
   1a6cb:	int3   
   1a6cc:	int3   
   1a6cd:	int3   
   1a6ce:	mov    edi,edi
   1a6d0:	push   ebp
   1a6d1:	mov    ebp,esp
   1a6d3:	mov    eax,DWORD PTR [ebp+0xc]
   1a6d6:	mov    ecx,DWORD PTR [eax+0x38]
   1a6d9:	lea    eax,[ecx+eax*1+0x40]
   1a6dd:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6e0:	push   0xffffffff
   1a6e2:	push   eax
   1a6e3:	call   0x1292e
   1a6e8:	mov    eax,DWORD PTR [ebp+0x8]
   1a6eb:	pop    ebp
   1a6ec:	ret    0x8
   1a6ef:	int3   
   1a6f0:	int3   
   1a6f1:	int3   
   1a6f2:	int3   
   1a6f3:	int3   
   1a6f4:	mov    edi,edi
   1a6f6:	push   ebp
   1a6f7:	mov    ebp,esp
   1a6f9:	mov    eax,DWORD PTR [ebp+0xc]
   1a6fc:	mov    ecx,DWORD PTR [eax+0x3c]
   1a6ff:	lea    eax,[ecx+eax*1+0x40]
   1a703:	mov    ecx,DWORD PTR [ebp+0x8]
   1a706:	push   0xffffffff
   1a708:	push   eax
   1a709:	call   0x1292e
   1a70e:	mov    eax,DWORD PTR [ebp+0x8]
   1a711:	pop    ebp
   1a712:	ret    0x8
   1a715:	int3   
   1a716:	int3   
   1a717:	int3   
   1a718:	int3   
   1a719:	int3   
   1a71a:	mov    edi,edi
   1a71c:	push   ebp
   1a71d:	mov    ebp,esp
   1a71f:	sub    esp,0x1c
   1a722:	mov    eax,ds:0x7f894
   1a727:	and    DWORD PTR [ebp-0x4],0x0
   1a72b:	push   ebx
   1a72c:	mov    ebx,DWORD PTR [ebp+0x8]
   1a72f:	push   esi
   1a730:	push   edi
   1a731:	lea    esi,[eax+0x4]
   1a734:	mov    edi,ebx
   1a736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a73a:	lea    esi,[eax+0x14]
   1a73d:	jmp    0x1a79a
   1a73f:	push   DWORD PTR [ebp+0xc]
   1a742:	mov    eax,DWORD PTR [ebx+0x8]
   1a745:	push   DWORD PTR [eax]
   1a747:	or     DWORD PTR [ebp-0x4],0x1
   1a74b:	lea    eax,[ebp-0xc]
   1a74e:	push   eax
   1a74f:	call   0x1a6f4
   1a754:	push   eax
   1a755:	call   0x197be
   1a75a:	test   al,al
   1a75c:	je     0x1a76d
   1a75e:	mov    eax,DWORD PTR [ebx+0x8]
   1a761:	mov    eax,DWORD PTR [eax]
   1a763:	cmp    BYTE PTR [eax+0x1c],0x0
   1a767:	mov    BYTE PTR [ebp+0xb],0x1
   1a76b:	jne    0x1a771
   1a76d:	mov    BYTE PTR [ebp+0xb],0x0
   1a771:	test   BYTE PTR [ebp-0x4],0x1
   1a775:	je     0x1a784
   1a777:	push   DWORD PTR [ebp-0xc]
   1a77a:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1a77e:	call   0x1da40
   1a783:	pop    ecx
   1a784:	cmp    BYTE PTR [ebp+0xb],0x0
   1a788:	jne    0x1a7a9
   1a78a:	mov    ecx,ebx
   1a78c:	call   0x1a2de
   1a791:	mov    esi,DWORD PTR ds:0x7f894
   1a797:	add    esi,0x14
   1a79a:	mov    eax,DWORD PTR [ebx+0x8]
   1a79d:	lea    edi,[ebp-0x1c]
   1a7a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a4:	cmp    eax,DWORD PTR [ebp-0x14]
   1a7a7:	jne    0x1a73f
   1a7a9:	pop    edi
   1a7aa:	pop    esi
   1a7ab:	mov    eax,ebx
   1a7ad:	pop    ebx
   1a7ae:	leave  
   1a7af:	ret    0x8
   1a7b2:	int3   
   1a7b3:	int3   
   1a7b4:	int3   
   1a7b5:	int3   
   1a7b6:	int3   
   1a7b7:	int3   
   1a7b8:	mov    edi,edi
   1a7ba:	push   ebp
   1a7bb:	mov    ebp,esp
   1a7bd:	sub    esp,0x28
   1a7c0:	mov    eax,DWORD PTR [ebp+0x8]
   1a7c3:	push   ebx
   1a7c4:	push   esi
   1a7c5:	push   edi
   1a7c6:	lea    esi,[eax+0x4]
   1a7c9:	mov    DWORD PTR [ebp-0x8],esi
   1a7cc:	lea    edi,[ebp-0x18]
   1a7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7d1:	and    DWORD PTR [ebp-0x4],0x0
   1a7d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7d7:	lea    ecx,[eax+0x14]
   1a7da:	mov    eax,DWORD PTR [ebp-0x10]
   1a7dd:	mov    esi,ecx
   1a7df:	lea    edi,[ebp-0x28]
   1a7e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7e5:	push   0x4
   1a7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7e8:	pop    ebx
   1a7e9:	mov    DWORD PTR [ebp+0x8],ecx
   1a7ec:	cmp    eax,DWORD PTR [ebp-0x20]
   1a7ef:	je     0x1a811
   1a7f1:	mov    esi,ecx
   1a7f3:	lea    edi,[ebp-0x28]
   1a7f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7fa:	mov    eax,DWORD PTR [eax]
   1a7fc:	add    ebx,DWORD PTR [eax]
   1a7fe:	inc    DWORD PTR [ebp-0x4]
   1a801:	lea    ecx,[ebp-0x18]
   1a804:	call   0x1a2de
   1a809:	mov    eax,DWORD PTR [ebp-0x10]
   1a80c:	cmp    eax,DWORD PTR [ebp-0x20]
   1a80f:	jne    0x1a7fa
   1a811:	mov    eax,DWORD PTR [ebp+0xc]
   1a814:	cmp    ebx,DWORD PTR [eax+0x4]
   1a817:	mov    DWORD PTR [eax+0x4],ebx
   1a81a:	jbe    0x1a824
   1a81c:	mov    DWORD PTR [eax],0x1
   1a822:	jmp    0x1a86a
   1a824:	and    DWORD PTR [eax],0x0
   1a827:	mov    esi,DWORD PTR [ebp-0x8]
   1a82a:	lea    ebx,[eax+0x8]
   1a82d:	mov    eax,DWORD PTR [ebp-0x4]
   1a830:	mov    DWORD PTR [ebx],eax
   1a832:	lea    edi,[ebp-0x28]
   1a835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a838:	add    ebx,0x4
   1a83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a83c:	jmp    0x1a858
   1a83e:	mov    eax,DWORD PTR [esi]
   1a840:	push   DWORD PTR [eax]
   1a842:	push   eax
   1a843:	push   ebx
   1a844:	call   0x1dac2
   1a849:	mov    eax,DWORD PTR [esi]
   1a84b:	add    ebx,DWORD PTR [eax]
   1a84d:	add    esp,0xc
   1a850:	lea    ecx,[ebp-0x28]
   1a853:	call   0x1a2de
   1a858:	mov    esi,DWORD PTR [ebp+0x8]
   1a85b:	lea    edi,[ebp-0x18]
   1a85e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a85f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a862:	mov    esi,DWORD PTR [ebp-0x20]
   1a865:	cmp    esi,DWORD PTR [ebp-0x10]
   1a868:	jne    0x1a83e
   1a86a:	pop    edi
   1a86b:	pop    esi
   1a86c:	pop    ebx
   1a86d:	leave  
   1a86e:	ret    0x8
   1a871:	int3   
   1a872:	int3   
   1a873:	int3   
   1a874:	int3   
   1a875:	int3   
   1a876:	push   0x8
   1a878:	push   0x7e040
   1a87d:	call   0x1db0c
   1a882:	xor    esi,esi
   1a884:	push   esi
   1a885:	push   esi
   1a886:	push   esi
   1a887:	push   esi
   1a888:	push   0x7f86c
   1a88d:	call   DWORD PTR ds:0x1f028
   1a893:	cmp    eax,esi
   1a895:	jl     0x1a8d6
   1a897:	mov    DWORD PTR [ebp-0x4],esi
   1a89a:	push   DWORD PTR [ebp+0x8]
   1a89d:	push   DWORD PTR ds:0x7f894
   1a8a3:	call   0x1a7b8
   1a8a8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a8af:	jmp    0x1a8ca
   1a8b1:	xor    eax,eax
   1a8b3:	inc    eax
   1a8b4:	ret    
   1a8b5:	mov    esp,DWORD PTR [ebp-0x18]
   1a8b8:	mov    eax,DWORD PTR [ebp+0x8]
   1a8bb:	mov    DWORD PTR [eax],0x2
   1a8c1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a8c8:	xor    esi,esi
   1a8ca:	push   esi
   1a8cb:	push   0x7f86c
   1a8d0:	call   DWORD PTR ds:0x1f024
   1a8d6:	call   0x1db51
   1a8db:	ret    0x4
   1a8de:	int3   
   1a8df:	int3   
   1a8e0:	int3   
   1a8e1:	int3   
   1a8e2:	int3   
   1a8e3:	int3   
   1a8e4:	mov    edi,edi
   1a8e6:	push   ebp
   1a8e7:	mov    ebp,esp
   1a8e9:	sub    esp,0x10
   1a8ec:	push   ebx
   1a8ed:	mov    ebx,ecx
   1a8ef:	mov    eax,DWORD PTR [ebx+0x10]
   1a8f2:	push   esi
   1a8f3:	lea    ecx,[eax+0x4]
   1a8f6:	push   edi
   1a8f7:	mov    DWORD PTR [ebx+0x10],ecx
   1a8fa:	push   DWORD PTR [eax]
   1a8fc:	call   0x1da40
   1a901:	xor    eax,eax
   1a903:	pop    ecx
   1a904:	cmp    DWORD PTR [ebx+0x2c],eax
   1a907:	jne    0x1a934
   1a909:	mov    DWORD PTR [ebp-0x10],eax
   1a90c:	mov    DWORD PTR [ebp-0xc],eax
   1a90f:	mov    DWORD PTR [ebp-0x8],eax
   1a912:	mov    DWORD PTR [ebp-0x4],eax
   1a915:	lea    edi,[ebx+0x4]
   1a918:	lea    esi,[ebp-0x10]
   1a91b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a91d:	push   DWORD PTR [ebx+0x24]
   1a920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a922:	lea    edi,[ebx+0x14]
   1a925:	lea    esi,[ebp-0x10]
   1a928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a92b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a92c:	call   0x1da40
   1a931:	pop    ecx
   1a932:	jmp    0x1a94b
   1a934:	mov    eax,DWORD PTR [ebx+0x10]
   1a937:	push   eax
   1a938:	push   DWORD PTR [eax]
   1a93a:	lea    ecx,[ebp-0x10]
   1a93d:	call   0x1a30c
   1a942:	lea    edi,[ebx+0x4]
   1a945:	mov    esi,eax
   1a947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a94a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a94b:	pop    edi
   1a94c:	pop    esi
   1a94d:	pop    ebx
   1a94e:	leave  
   1a94f:	ret    
   1a950:	int3   
   1a951:	int3   
   1a952:	int3   
   1a953:	int3   
   1a954:	int3   
   1a955:	int3   
   1a956:	mov    edi,edi
   1a958:	push   ebp
   1a959:	mov    ebp,esp
   1a95b:	mov    eax,DWORD PTR [ebp+0xc]
   1a95e:	push   esi
   1a95f:	mov    esi,ecx
   1a961:	mov    ecx,DWORD PTR [eax]
   1a963:	mov    DWORD PTR [ebp+0xc],ecx
   1a966:	mov    ecx,DWORD PTR [eax+0x4]
   1a969:	mov    edx,DWORD PTR [eax]
   1a96b:	mov    DWORD PTR [ecx],edx
   1a96d:	mov    ecx,DWORD PTR [eax]
   1a96f:	mov    edx,DWORD PTR [eax+0x4]
   1a972:	push   eax
   1a973:	mov    DWORD PTR [ecx+0x4],edx
   1a976:	call   0x1da40
   1a97b:	mov    eax,DWORD PTR [ebp+0x8]
   1a97e:	dec    DWORD PTR [esi+0x8]
   1a981:	pop    ecx
   1a982:	mov    ecx,DWORD PTR [ebp+0xc]
   1a985:	mov    DWORD PTR [eax],ecx
   1a987:	pop    esi
   1a988:	pop    ebp
   1a989:	ret    0x8
   1a98c:	int3   
   1a98d:	int3   
   1a98e:	int3   
   1a98f:	int3   
   1a990:	int3   
   1a991:	int3   
   1a992:	mov    edi,edi
   1a994:	push   ebp
   1a995:	mov    ebp,esp
   1a997:	push   ecx
   1a998:	push   esi
   1a999:	mov    esi,ecx
   1a99b:	jmp    0x1a9b0
   1a99d:	mov    eax,ecx
   1a99f:	mov    ecx,DWORD PTR [ecx]
   1a9a1:	push   eax
   1a9a2:	lea    eax,[ebp-0x4]
   1a9a5:	mov    DWORD PTR [ebp+0xc],ecx
   1a9a8:	push   eax
   1a9a9:	mov    ecx,esi
   1a9ab:	call   0x1a956
   1a9b0:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9b3:	cmp    ecx,DWORD PTR [ebp+0x10]
   1a9b6:	jne    0x1a99d
   1a9b8:	mov    eax,DWORD PTR [ebp+0x8]
   1a9bb:	mov    DWORD PTR [eax],ecx
   1a9bd:	pop    esi
   1a9be:	leave  
   1a9bf:	ret    0xc
   1a9c2:	int3   
   1a9c3:	int3   
   1a9c4:	int3   
   1a9c5:	int3   
   1a9c6:	int3   
   1a9c7:	int3   
   1a9c8:	mov    edi,edi
   1a9ca:	push   ebp
   1a9cb:	mov    ebp,esp
   1a9cd:	push   0x0
   1a9cf:	push   0xc
   1a9d1:	call   0x1163e
   1a9d6:	mov    ecx,DWORD PTR [ebp+0x8]
   1a9d9:	test   ecx,ecx
   1a9db:	jne    0x1a9df
   1a9dd:	mov    ecx,eax
   1a9df:	mov    DWORD PTR [eax],ecx
   1a9e1:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9e4:	test   ecx,ecx
   1a9e6:	jne    0x1a9ea
   1a9e8:	mov    ecx,eax
   1a9ea:	mov    DWORD PTR [eax+0x4],ecx
   1a9ed:	pop    ebp
   1a9ee:	ret    0x8
   1a9f1:	int3   
   1a9f2:	int3   
   1a9f3:	int3   
   1a9f4:	int3   
   1a9f5:	int3   
   1a9f6:	mov    edi,edi
   1a9f8:	push   esi
   1a9f9:	mov    esi,ecx
   1a9fb:	mov    eax,DWORD PTR [esi+0x28]
   1a9fe:	shl    eax,0x2
   1aa01:	push   0x0
   1aa03:	push   eax
   1aa04:	call   0x1163e
   1aa09:	mov    DWORD PTR [esi+0x24],eax
   1aa0c:	pop    esi
   1aa0d:	ret    
   1aa0e:	int3   
   1aa0f:	int3   
   1aa10:	int3   
   1aa11:	int3   
   1aa12:	int3   
   1aa13:	int3   
   1aa14:	mov    edi,edi
   1aa16:	push   ebp
   1aa17:	mov    ebp,esp
   1aa19:	push   ebx
   1aa1a:	push   esi
   1aa1b:	push   edi
   1aa1c:	mov    edi,DWORD PTR [ebp+0x8]
   1aa1f:	mov    eax,0xfffffff
   1aa24:	mov    esi,ecx
   1aa26:	cmp    edi,eax
   1aa28:	jbe    0x1aa2c
   1aa2a:	mov    edi,eax
   1aa2c:	mov    eax,edi
   1aa2e:	push   0x0
   1aa30:	shl    eax,0x2
   1aa33:	push   eax
   1aa34:	call   0x1163e
   1aa39:	mov    ebx,eax
   1aa3b:	mov    eax,edi
   1aa3d:	shr    eax,0x2
   1aa40:	lea    eax,[ebx+eax*4]
   1aa43:	push   eax
   1aa44:	mov    DWORD PTR [ebp+0x8],eax
   1aa47:	mov    eax,DWORD PTR [esi+0x20]
   1aa4a:	add    eax,0x4
   1aa4d:	push   eax
   1aa4e:	push   DWORD PTR [esi+0x10]
   1aa51:	call   0x1a3ce
   1aa56:	push   DWORD PTR [esi+0x24]
   1aa59:	call   0x1da40
   1aa5e:	mov    eax,DWORD PTR [ebp+0x8]
   1aa61:	pop    ecx
   1aa62:	mov    DWORD PTR [esi+0x28],edi
   1aa65:	pop    edi
   1aa66:	mov    DWORD PTR [esi+0x24],ebx
   1aa69:	pop    esi
   1aa6a:	pop    ebx
   1aa6b:	pop    ebp
   1aa6c:	ret    0x4
   1aa6f:	int3   
   1aa70:	int3   
   1aa71:	int3   
   1aa72:	int3   
   1aa73:	int3   
   1aa74:	mov    edi,edi
   1aa76:	push   ebp
   1aa77:	mov    ebp,esp
   1aa79:	push   ecx
   1aa7a:	push   DWORD PTR [ebp-0x4]
   1aa7d:	push   DWORD PTR [ebp+0x10]
   1aa80:	push   DWORD PTR [ebp+0xc]
   1aa83:	push   DWORD PTR [ebp+0x8]
   1aa86:	call   0x1a67e
   1aa8b:	add    esp,0x10
   1aa8e:	leave  
   1aa8f:	ret    
   1aa90:	int3   
   1aa91:	int3   
   1aa92:	int3   
   1aa93:	int3   
   1aa94:	int3   
   1aa95:	int3   
   1aa96:	mov    edi,edi
   1aa98:	push   ebp
   1aa99:	mov    ebp,esp
   1aa9b:	sub    esp,0x28
   1aa9e:	push   ebx
   1aa9f:	mov    ebx,DWORD PTR [ebp+0x8]
   1aaa2:	push   esi
   1aaa3:	push   edi
   1aaa4:	push   0xffffffff
   1aaa6:	push   ebx
   1aaa7:	lea    ecx,[ebp-0x8]
   1aaaa:	call   0x110d4
   1aaaf:	and    DWORD PTR [ebx],0x0
   1aab2:	lea    eax,[ebp-0x8]
   1aab5:	push   eax
   1aab6:	lea    eax,[ebp-0x18]
   1aab9:	push   eax
   1aaba:	call   0x1a71a
   1aabf:	mov    esi,DWORD PTR ds:0x7f894
   1aac5:	mov    eax,DWORD PTR [ebp-0x10]
   1aac8:	push   DWORD PTR [ebp-0x8]
   1aacb:	add    esi,0x14
   1aace:	lea    edi,[ebp-0x28]
   1aad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aad5:	cmp    eax,DWORD PTR [ebp-0x20]
   1aad8:	je     0x1aae2
   1aada:	mov    eax,DWORD PTR [eax]
   1aadc:	mov    eax,DWORD PTR [eax+0x20]
   1aadf:	inc    eax
   1aae0:	mov    DWORD PTR [ebx],eax
   1aae2:	call   0x1da40
   1aae7:	pop    ecx
   1aae8:	pop    edi
   1aae9:	pop    esi
   1aaea:	pop    ebx
   1aaeb:	leave  
   1aaec:	ret    0x4
   1aaef:	int3   
   1aaf0:	int3   
   1aaf1:	int3   
   1aaf2:	int3   
   1aaf3:	int3   
   1aaf4:	add    DWORD PTR [ecx+0xc],0x4
   1aaf8:	dec    DWORD PTR [ecx+0x2c]
   1aafb:	mov    eax,DWORD PTR [ecx+0xc]
   1aafe:	je     0x1ab05
   1ab00:	cmp    eax,DWORD PTR [ecx+0x8]
   1ab03:	jne    0x1ab0a
   1ab05:	jmp    0x1a8e4
   1ab0a:	ret    
   1ab0b:	int3   
   1ab0c:	int3   
   1ab0d:	int3   
   1ab0e:	int3   
   1ab0f:	int3   
   1ab10:	mov    edi,edi
   1ab12:	push   esi
   1ab13:	push   0x0
   1ab15:	push   0xc
   1ab17:	mov    esi,ecx
   1ab19:	call   0x1163e
   1ab1e:	mov    DWORD PTR [eax],eax
   1ab20:	mov    DWORD PTR [eax+0x4],eax
   1ab23:	and    DWORD PTR [esi+0x8],0x0
   1ab27:	mov    DWORD PTR [esi+0x4],eax
   1ab2a:	mov    eax,esi
   1ab2c:	pop    esi
   1ab2d:	ret    0x4
   1ab30:	int3   
   1ab31:	int3   
   1ab32:	int3   
   1ab33:	int3   
   1ab34:	int3   
   1ab35:	int3   
   1ab36:	mov    edi,edi
   1ab38:	push   ebp
   1ab39:	mov    ebp,esp
   1ab3b:	push   ecx
   1ab3c:	push   esi
   1ab3d:	mov    esi,ecx
   1ab3f:	mov    eax,DWORD PTR [esi+0x4]
   1ab42:	mov    ecx,DWORD PTR [eax]
   1ab44:	push   eax
   1ab45:	push   ecx
   1ab46:	lea    eax,[ebp-0x4]
   1ab49:	push   eax
   1ab4a:	mov    ecx,esi
   1ab4c:	call   0x1a992
   1ab51:	push   DWORD PTR [esi+0x4]
   1ab54:	call   0x1da40
   1ab59:	and    DWORD PTR [esi+0x4],0x0
   1ab5d:	and    DWORD PTR [esi+0x8],0x0
   1ab61:	pop    ecx
   1ab62:	pop    esi
   1ab63:	leave  
   1ab64:	ret    
   1ab65:	int3   
   1ab66:	int3   
   1ab67:	int3   
   1ab68:	int3   
   1ab69:	int3   
   1ab6a:	mov    edi,edi
   1ab6c:	push   ebp
   1ab6d:	mov    ebp,esp
   1ab6f:	push   ecx
   1ab70:	mov    eax,DWORD PTR [ecx+0x4]
   1ab73:	push   DWORD PTR [eax]
   1ab75:	lea    eax,[ebp-0x4]
   1ab78:	push   eax
   1ab79:	call   0x1a956
   1ab7e:	leave  
   1ab7f:	ret    
   1ab80:	int3   
   1ab81:	int3   
   1ab82:	int3   
   1ab83:	int3   
   1ab84:	int3   
   1ab85:	int3   
   1ab86:	mov    edi,edi
   1ab88:	push   ebp
   1ab89:	mov    ebp,esp
   1ab8b:	sub    esp,0x18
   1ab8e:	push   ebx
   1ab8f:	push   esi
   1ab90:	push   edi
   1ab91:	push   0x0
   1ab93:	push   0x400
   1ab98:	mov    ebx,ecx
   1ab9a:	call   0x1a3f8
   1ab9f:	cmp    DWORD PTR [ebx+0x2c],0x0
   1aba3:	mov    esi,eax
   1aba5:	mov    DWORD PTR [ebp-0x8],esi
   1aba8:	jne    0x1abdf
   1abaa:	mov    ecx,ebx
   1abac:	mov    DWORD PTR [ebx+0x28],0x2
   1abb3:	call   0x1a9f6
   1abb8:	mov    eax,DWORD PTR [ebx+0x24]
   1abbb:	mov    DWORD PTR [eax+0x4],esi
   1abbe:	mov    eax,DWORD PTR [ebx+0x24]
   1abc1:	add    eax,0x4
   1abc4:	push   eax
   1abc5:	add    esi,0x800
   1abcb:	push   esi
   1abcc:	lea    ecx,[ebp-0x18]
   1abcf:	call   0x1a30c
   1abd4:	lea    edi,[ebx+0x4]
   1abd7:	mov    esi,eax
   1abd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abdd:	jmp    0x1ac3d
   1abdf:	mov    ecx,DWORD PTR [ebx+0x28]
   1abe2:	mov    edx,DWORD PTR [ebx+0x24]
   1abe5:	mov    eax,DWORD PTR [ebx+0x20]
   1abe8:	lea    ecx,[edx+ecx*4-0x4]
   1abec:	cmp    eax,ecx
   1abee:	jae    0x1abfe
   1abf0:	add    eax,0x4
   1abf3:	mov    DWORD PTR [ebx+0x20],eax
   1abf6:	mov    DWORD PTR [eax],esi
   1abf8:	push   DWORD PTR [ebx+0x20]
   1abfb:	push   esi
   1abfc:	jmp    0x1ac35
   1abfe:	sub    eax,DWORD PTR [ebx+0x10]
   1ac01:	mov    ecx,ebx
   1ac03:	sar    eax,0x2
   1ac06:	inc    eax
   1ac07:	mov    edi,eax
   1ac09:	lea    eax,[edi+edi*1]
   1ac0c:	push   eax
   1ac0d:	call   0x1aa14
   1ac12:	lea    ecx,[eax+edi*4]
   1ac15:	mov    DWORD PTR [ecx],esi
   1ac17:	push   eax
   1ac18:	push   DWORD PTR [ebx+0xc]
   1ac1b:	mov    DWORD PTR [ebp-0x4],ecx
   1ac1e:	lea    ecx,[ebp-0x18]
   1ac21:	call   0x1a30c
   1ac26:	push   DWORD PTR [ebp-0x4]
   1ac29:	lea    edi,[ebx+0x4]
   1ac2c:	push   DWORD PTR [ebp-0x8]
   1ac2f:	mov    esi,eax
   1ac31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac35:	lea    ecx,[ebp-0x18]
   1ac38:	call   0x1a30c
   1ac3d:	lea    edi,[ebx+0x14]
   1ac40:	mov    esi,eax
   1ac42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac46:	pop    edi
   1ac47:	pop    esi
   1ac48:	pop    ebx
   1ac49:	leave  
   1ac4a:	ret    
   1ac4b:	int3   
   1ac4c:	int3   
   1ac4d:	int3   
   1ac4e:	int3   
   1ac4f:	int3   
   1ac50:	mov    edi,edi
   1ac52:	push   ebp
   1ac53:	mov    ebp,esp
   1ac55:	mov    eax,DWORD PTR [ebp+0xc]
   1ac58:	push   ebx
   1ac59:	push   esi
   1ac5a:	push   edi
   1ac5b:	lea    edi,[eax+0x4]
   1ac5e:	push   DWORD PTR [edi]
   1ac60:	mov    ebx,ecx
   1ac62:	push   eax
   1ac63:	call   0x1a9c8
   1ac68:	push   DWORD PTR [ebp+0x10]
   1ac6b:	mov    esi,eax
   1ac6d:	mov    DWORD PTR [edi],esi
   1ac6f:	mov    eax,DWORD PTR [esi+0x4]
   1ac72:	mov    DWORD PTR [eax],esi
   1ac74:	lea    eax,[esi+0x8]
   1ac77:	push   eax
   1ac78:	call   0x1a3b2
   1ac7d:	mov    eax,DWORD PTR [ebp+0x8]
   1ac80:	inc    DWORD PTR [ebx+0x8]
   1ac83:	pop    edi
   1ac84:	mov    DWORD PTR [eax],esi
   1ac86:	pop    esi
   1ac87:	pop    ebx
   1ac88:	pop    ebp
   1ac89:	ret    0xc
   1ac8c:	int3   
   1ac8d:	int3   
   1ac8e:	int3   
   1ac8f:	int3   
   1ac90:	int3   
   1ac91:	int3   
   1ac92:	mov    edi,edi
   1ac94:	push   ebp
   1ac95:	mov    ebp,esp
   1ac97:	push   ecx
   1ac98:	mov    eax,DWORD PTR [ebp+0xc]
   1ac9b:	push   esi
   1ac9c:	mov    esi,ecx
   1ac9e:	jmp    0x1acba
   1aca0:	add    eax,0x8
   1aca3:	push   eax
   1aca4:	push   DWORD PTR [ebp+0x8]
   1aca7:	lea    eax,[ebp-0x4]
   1acaa:	push   eax
   1acab:	mov    ecx,esi
   1acad:	call   0x1ac50
   1acb2:	mov    eax,DWORD PTR [ebp+0xc]
   1acb5:	mov    eax,DWORD PTR [eax]
   1acb7:	mov    DWORD PTR [ebp+0xc],eax
   1acba:	cmp    eax,DWORD PTR [ebp+0x10]
   1acbd:	jne    0x1aca0
   1acbf:	pop    esi
   1acc0:	leave  
   1acc1:	ret    0xc
   1acc4:	int3   
   1acc5:	int3   
   1acc6:	int3   
   1acc7:	int3   
   1acc8:	int3   
   1acc9:	int3   
   1acca:	mov    edi,edi
   1accc:	push   ebp
   1accd:	mov    ebp,esp
   1accf:	push   esi
   1acd0:	push   edi
   1acd1:	push   DWORD PTR [ebp+0xc]
   1acd4:	mov    edi,ecx
   1acd6:	call   0x1a608
   1acdb:	push   DWORD PTR [ebp+0xc]
   1acde:	mov    ecx,edi
   1ace0:	mov    esi,eax
   1ace2:	call   0x1a5c8
   1ace7:	mov    ecx,DWORD PTR [ebp+0x8]
   1acea:	pop    edi
   1aceb:	mov    DWORD PTR [ecx],eax
   1aced:	mov    DWORD PTR [ecx+0x4],esi
   1acf0:	mov    eax,ecx
   1acf2:	pop    esi
   1acf3:	pop    ebp
   1acf4:	ret    0x8
   1acf7:	int3   
   1acf8:	int3   
   1acf9:	int3   
   1acfa:	int3   
   1acfb:	int3   
   1acfc:	mov    edi,edi
   1acfe:	push   ebp
   1acff:	mov    ebp,esp
   1ad01:	push   ecx
   1ad02:	push   ebx
   1ad03:	push   esi
   1ad04:	push   edi
   1ad05:	push   0x1
   1ad07:	xor    edi,edi
   1ad09:	push   edi
   1ad0a:	mov    esi,ecx
   1ad0c:	call   0x1392c
   1ad11:	lea    ecx,[ebp-0x1]
   1ad14:	mov    ebx,eax
   1ad16:	call   DWORD PTR ds:0x7de64
   1ad1c:	cmp    DWORD PTR ds:0x7f89c,edi
   1ad22:	jne    0x1ad37
   1ad24:	mov    eax,ebx
   1ad26:	mov    ds:0x7f89c,eax
   1ad2b:	mov    DWORD PTR [eax],edi
   1ad2d:	mov    eax,ds:0x7f89c
   1ad32:	xor    ebx,ebx
   1ad34:	mov    DWORD PTR [eax+0x8],edi
   1ad37:	inc    DWORD PTR ds:0x7f8a0
   1ad3d:	lea    ecx,[ebp-0x1]
   1ad40:	call   DWORD PTR ds:0x7de60
   1ad46:	cmp    ebx,edi
   1ad48:	je     0x1ad51
   1ad4a:	push   ebx
   1ad4b:	call   0x1da40
   1ad50:	pop    ecx
   1ad51:	push   edi
   1ad52:	push   DWORD PTR ds:0x7f89c
   1ad58:	mov    ecx,esi
   1ad5a:	call   0x1392c
   1ad5f:	mov    DWORD PTR [esi+0xc],edi
   1ad62:	mov    DWORD PTR [esi+0x4],eax
   1ad65:	mov    DWORD PTR [eax],eax
   1ad67:	mov    esi,DWORD PTR [esi+0x4]
   1ad6a:	pop    edi
   1ad6b:	mov    DWORD PTR [esi+0x8],esi
   1ad6e:	pop    esi
   1ad6f:	pop    ebx
   1ad70:	leave  
   1ad71:	ret    
   1ad72:	int3   
   1ad73:	int3   
   1ad74:	int3   
   1ad75:	int3   
   1ad76:	int3   
   1ad77:	int3   
   1ad78:	mov    edi,edi
   1ad7a:	push   ebp
   1ad7b:	mov    ebp,esp
   1ad7d:	push   ebx
   1ad7e:	push   esi
   1ad7f:	mov    esi,DWORD PTR [ebp+0x10]
   1ad82:	push   edi
   1ad83:	push   0x0
   1ad85:	push   esi
   1ad86:	mov    edi,ecx
   1ad88:	call   0x1392c
   1ad8d:	push   DWORD PTR [ebp+0x14]
   1ad90:	mov    ebx,eax
   1ad92:	mov    eax,ds:0x7f89c
   1ad97:	mov    DWORD PTR [ebx],eax
   1ad99:	mov    eax,ds:0x7f89c
   1ad9e:	mov    DWORD PTR [ebx+0x8],eax
   1ada1:	lea    eax,[ebx+0xc]
   1ada4:	push   eax
   1ada5:	call   0x1a648
   1adaa:	inc    DWORD PTR [edi+0xc]
   1adad:	cmp    esi,DWORD PTR [edi+0x4]
   1adb0:	je     0x1adda
   1adb2:	mov    eax,DWORD PTR [ebp+0xc]
   1adb5:	cmp    eax,DWORD PTR ds:0x7f89c
   1adbb:	jne    0x1adda
   1adbd:	lea    eax,[esi+0xc]
   1adc0:	push   eax
   1adc1:	push   DWORD PTR [ebp+0x14]
   1adc4:	call   0x197ae
   1adc9:	test   al,al
   1adcb:	jne    0x1adda
   1adcd:	mov    DWORD PTR [esi+0x8],ebx
   1add0:	mov    eax,DWORD PTR [edi+0x4]
   1add3:	cmp    esi,DWORD PTR [eax+0x8]
   1add6:	jne    0x1adf4
   1add8:	jmp    0x1ade9
   1adda:	mov    DWORD PTR [esi],ebx
   1addc:	mov    eax,DWORD PTR [edi+0x4]
   1addf:	cmp    esi,eax
   1ade1:	jne    0x1adee
   1ade3:	mov    DWORD PTR [eax+0x4],ebx
   1ade6:	mov    eax,DWORD PTR [edi+0x4]
   1ade9:	mov    DWORD PTR [eax+0x8],ebx
   1adec:	jmp    0x1adf4
   1adee:	cmp    esi,DWORD PTR [eax]
   1adf0:	jne    0x1adf4
   1adf2:	mov    DWORD PTR [eax],ebx
   1adf4:	mov    eax,DWORD PTR [edi+0x4]
   1adf7:	mov    esi,ebx
   1adf9:	cmp    ebx,DWORD PTR [eax+0x4]
   1adfc:	je     0x1aeb0
   1ae02:	mov    eax,DWORD PTR [esi+0x4]
   1ae05:	xor    edx,edx
   1ae07:	cmp    DWORD PTR [eax+0x14],edx
   1ae0a:	jne    0x1aeb0
   1ae10:	mov    ecx,DWORD PTR [eax+0x4]
   1ae13:	cmp    eax,DWORD PTR [ecx]
   1ae15:	jne    0x1ae51
   1ae17:	mov    ecx,DWORD PTR [ecx+0x8]
   1ae1a:	cmp    DWORD PTR [ecx+0x14],edx
   1ae1d:	je     0x1ae58
   1ae1f:	cmp    esi,DWORD PTR [eax+0x8]
   1ae22:	jne    0x1ae2e
   1ae24:	mov    esi,eax
   1ae26:	push   esi
   1ae27:	mov    ecx,edi
   1ae29:	call   0x1a4ea
   1ae2e:	mov    eax,DWORD PTR [esi+0x4]
   1ae31:	mov    DWORD PTR [eax+0x14],0x1
   1ae38:	mov    eax,DWORD PTR [esi+0x4]
   1ae3b:	mov    eax,DWORD PTR [eax+0x4]
   1ae3e:	and    DWORD PTR [eax+0x14],0x0
   1ae42:	mov    eax,DWORD PTR [esi+0x4]
   1ae45:	push   DWORD PTR [eax+0x4]
   1ae48:	mov    ecx,edi
   1ae4a:	call   0x1a538
   1ae4f:	jmp    0x1aea4
   1ae51:	mov    ecx,DWORD PTR [ecx]
   1ae53:	cmp    DWORD PTR [ecx+0x14],edx
   1ae56:	jne    0x1ae75
   1ae58:	mov    edx,eax
   1ae5a:	xor    eax,eax
   1ae5c:	inc    eax
   1ae5d:	mov    DWORD PTR [edx+0x14],eax
   1ae60:	mov    DWORD PTR [ecx+0x14],eax
   1ae63:	mov    eax,DWORD PTR [esi+0x4]
   1ae66:	mov    eax,DWORD PTR [eax+0x4]
   1ae69:	and    DWORD PTR [eax+0x14],0x0
   1ae6d:	mov    eax,DWORD PTR [esi+0x4]
   1ae70:	mov    esi,DWORD PTR [eax+0x4]
   1ae73:	jmp    0x1aea4
   1ae75:	cmp    esi,DWORD PTR [eax]
   1ae77:	jne    0x1ae83
   1ae79:	mov    esi,eax
   1ae7b:	push   esi
   1ae7c:	mov    ecx,edi
   1ae7e:	call   0x1a538
   1ae83:	mov    eax,DWORD PTR [esi+0x4]
   1ae86:	mov    DWORD PTR [eax+0x14],0x1
   1ae8d:	mov    eax,DWORD PTR [esi+0x4]
   1ae90:	mov    eax,DWORD PTR [eax+0x4]
   1ae93:	and    DWORD PTR [eax+0x14],0x0
   1ae97:	mov    eax,DWORD PTR [esi+0x4]
   1ae9a:	push   DWORD PTR [eax+0x4]
   1ae9d:	mov    ecx,edi
   1ae9f:	call   0x1a4ea
   1aea4:	mov    eax,DWORD PTR [edi+0x4]
   1aea7:	cmp    esi,DWORD PTR [eax+0x4]
   1aeaa:	jne    0x1ae02
   1aeb0:	mov    eax,DWORD PTR [edi+0x4]
   1aeb3:	mov    eax,DWORD PTR [eax+0x4]
   1aeb6:	pop    edi
   1aeb7:	mov    DWORD PTR [eax+0x14],0x1
   1aebe:	mov    eax,DWORD PTR [ebp+0x8]
   1aec1:	pop    esi
   1aec2:	mov    DWORD PTR [eax],ebx
   1aec4:	pop    ebx
   1aec5:	pop    ebp
   1aec6:	ret    0x10
   1aec9:	int3   
   1aeca:	int3   
   1aecb:	int3   
   1aecc:	int3   
   1aecd:	int3   
   1aece:	mov    edi,edi
   1aed0:	push   ebp
   1aed1:	mov    ebp,esp
   1aed3:	sub    esp,0x10
   1aed6:	push   ebx
   1aed7:	push   esi
   1aed8:	mov    DWORD PTR [ebp-0xc],ecx
   1aedb:	push   edi
   1aedc:	mov    edi,DWORD PTR [ebp+0xc]
   1aedf:	lea    ecx,[ebp+0xc]
   1aee2:	call   0x1a37c
   1aee7:	mov    esi,DWORD PTR [edi]
   1aee9:	mov    eax,ds:0x7f89c
   1aeee:	lea    ebx,[edi+0x8]
   1aef1:	mov    DWORD PTR [ebp-0x8],edi
   1aef4:	mov    DWORD PTR [ebp-0x10],ebx
   1aef7:	cmp    esi,eax
   1aef9:	jne    0x1aeff
   1aefb:	mov    esi,DWORD PTR [ebx]
   1aefd:	jmp    0x1af16
   1aeff:	mov    ecx,DWORD PTR [ebx]
   1af01:	cmp    ecx,eax
   1af03:	je     0x1af16
   1af05:	push   ecx
   1af06:	call   0x1a35a
   1af0b:	mov    DWORD PTR [ebp-0x8],eax
   1af0e:	add    eax,0x8
   1af11:	mov    esi,DWORD PTR [eax]
   1af13:	mov    DWORD PTR [ebp-0x10],eax
   1af16:	lea    ecx,[ebp-0x1]
   1af19:	call   DWORD PTR ds:0x7de64
   1af1f:	mov    eax,DWORD PTR [ebp-0x8]
   1af22:	cmp    eax,edi
   1af24:	je     0x1af86
   1af26:	mov    ecx,DWORD PTR [edi]
   1af28:	mov    DWORD PTR [ecx+0x4],eax
   1af2b:	mov    ecx,DWORD PTR [edi]
   1af2d:	mov    DWORD PTR [eax],ecx
   1af2f:	cmp    eax,DWORD PTR [ebx]
   1af31:	jne    0x1af38
   1af33:	mov    DWORD PTR [esi+0x4],eax
   1af36:	jmp    0x1af4f
   1af38:	mov    ecx,DWORD PTR [eax+0x4]
   1af3b:	mov    edx,DWORD PTR [ebp-0x10]
   1af3e:	mov    DWORD PTR [esi+0x4],ecx
   1af41:	mov    ecx,DWORD PTR [eax+0x4]
   1af44:	mov    DWORD PTR [ecx],esi
   1af46:	mov    ecx,DWORD PTR [ebx]
   1af48:	mov    DWORD PTR [edx],ecx
   1af4a:	mov    ecx,DWORD PTR [ebx]
   1af4c:	mov    DWORD PTR [ecx+0x4],eax
   1af4f:	mov    ebx,DWORD PTR [ebp-0xc]
   1af52:	mov    ecx,DWORD PTR [ebx+0x4]
   1af55:	cmp    DWORD PTR [ecx+0x4],edi
   1af58:	jne    0x1af5f
   1af5a:	mov    DWORD PTR [ecx+0x4],eax
   1af5d:	jmp    0x1af6d
   1af5f:	mov    ecx,DWORD PTR [edi+0x4]
   1af62:	cmp    DWORD PTR [ecx],edi
   1af64:	jne    0x1af6a
   1af66:	mov    DWORD PTR [ecx],eax
   1af68:	jmp    0x1af6d
   1af6a:	mov    DWORD PTR [ecx+0x8],eax
   1af6d:	mov    ecx,DWORD PTR [edi+0x4]
   1af70:	mov    DWORD PTR [eax+0x4],ecx
   1af73:	mov    ecx,DWORD PTR [eax+0x14]
   1af76:	mov    edx,DWORD PTR [edi+0x14]
   1af79:	mov    DWORD PTR [eax+0x14],edx
   1af7c:	mov    DWORD PTR [edi+0x14],ecx
   1af7f:	mov    DWORD PTR [ebp-0x8],edi
   1af82:	mov    eax,edi
   1af84:	jmp    0x1afff
   1af86:	mov    ecx,DWORD PTR [eax+0x4]
   1af89:	mov    edx,DWORD PTR [ebp-0xc]
   1af8c:	mov    DWORD PTR [esi+0x4],ecx
   1af8f:	mov    ecx,DWORD PTR [edx+0x4]
   1af92:	cmp    DWORD PTR [ecx+0x4],edi
   1af95:	jne    0x1af9c
   1af97:	mov    DWORD PTR [ecx+0x4],esi
   1af9a:	jmp    0x1afaa
   1af9c:	mov    ecx,DWORD PTR [edi+0x4]
   1af9f:	cmp    DWORD PTR [ecx],edi
   1afa1:	jne    0x1afa7
   1afa3:	mov    DWORD PTR [ecx],esi
   1afa5:	jmp    0x1afaa
   1afa7:	mov    DWORD PTR [ecx+0x8],esi
   1afaa:	mov    ecx,DWORD PTR [edx+0x4]
   1afad:	mov    DWORD PTR [ebp-0x10],ecx
   1afb0:	cmp    DWORD PTR [ecx],edi
   1afb2:	jne    0x1afd6
   1afb4:	mov    ebx,DWORD PTR [ebx]
   1afb6:	cmp    ebx,DWORD PTR ds:0x7f89c
   1afbc:	jne    0x1afc5
   1afbe:	mov    ebx,DWORD PTR [edi+0x4]
   1afc1:	mov    DWORD PTR [ecx],ebx
   1afc3:	jmp    0x1afd6
   1afc5:	push   esi
   1afc6:	call   0x1a35a
   1afcb:	mov    ecx,DWORD PTR [ebp-0x10]
   1afce:	mov    edx,DWORD PTR [ebp-0xc]
   1afd1:	mov    DWORD PTR [ecx],eax
   1afd3:	mov    eax,DWORD PTR [ebp-0x8]
   1afd6:	mov    ebx,DWORD PTR [edx+0x4]
   1afd9:	cmp    DWORD PTR [ebx+0x8],edi
   1afdc:	jne    0x1affc
   1afde:	mov    ecx,DWORD PTR [edi]
   1afe0:	cmp    ecx,DWORD PTR ds:0x7f89c
   1afe6:	jne    0x1aff0
   1afe8:	mov    ecx,DWORD PTR [edi+0x4]
   1afeb:	mov    DWORD PTR [ebx+0x8],ecx
   1afee:	jmp    0x1affc
   1aff0:	push   esi
   1aff1:	call   0x1a338
   1aff6:	mov    DWORD PTR [ebx+0x8],eax
   1aff9:	mov    eax,DWORD PTR [ebp-0x8]
   1affc:	mov    ebx,DWORD PTR [ebp-0xc]
   1afff:	xor    edi,edi
   1b001:	inc    edi
   1b002:	cmp    DWORD PTR [eax+0x14],edi
   1b005:	jne    0x1b119
   1b00b:	jmp    0x1b0cc
   1b010:	cmp    DWORD PTR [esi+0x14],edi
   1b013:	jne    0x1b116
   1b019:	mov    eax,DWORD PTR [esi+0x4]
   1b01c:	cmp    esi,DWORD PTR [eax]
   1b01e:	jne    0x1b095
   1b020:	mov    eax,DWORD PTR [eax+0x8]
   1b023:	cmp    DWORD PTR [eax+0x14],0x0
   1b027:	jne    0x1b043
   1b029:	mov    DWORD PTR [eax+0x14],edi
   1b02c:	mov    eax,DWORD PTR [esi+0x4]
   1b02f:	and    DWORD PTR [eax+0x14],0x0
   1b033:	push   DWORD PTR [esi+0x4]
   1b036:	mov    ecx,ebx
   1b038:	call   0x1a4ea
   1b03d:	mov    eax,DWORD PTR [esi+0x4]
   1b040:	mov    eax,DWORD PTR [eax+0x8]
   1b043:	mov    ecx,DWORD PTR [eax]
   1b045:	cmp    DWORD PTR [ecx+0x14],edi
   1b048:	jne    0x1b052
   1b04a:	mov    ecx,DWORD PTR [eax+0x8]
   1b04d:	cmp    DWORD PTR [ecx+0x14],edi
   1b050:	je     0x1b0c5
   1b052:	mov    ecx,DWORD PTR [eax+0x8]
   1b055:	cmp    DWORD PTR [ecx+0x14],edi
   1b058:	jne    0x1b071
   1b05a:	mov    ecx,DWORD PTR [eax]
   1b05c:	mov    DWORD PTR [ecx+0x14],edi
   1b05f:	and    DWORD PTR [eax+0x14],0x0
   1b063:	push   eax
   1b064:	mov    ecx,ebx
   1b066:	call   0x1a538
   1b06b:	mov    eax,DWORD PTR [esi+0x4]
   1b06e:	mov    eax,DWORD PTR [eax+0x8]
   1b071:	mov    ecx,DWORD PTR [esi+0x4]
   1b074:	mov    ecx,DWORD PTR [ecx+0x14]
   1b077:	mov    DWORD PTR [eax+0x14],ecx
   1b07a:	mov    ecx,DWORD PTR [esi+0x4]
   1b07d:	mov    DWORD PTR [ecx+0x14],edi
   1b080:	mov    eax,DWORD PTR [eax+0x8]
   1b083:	mov    DWORD PTR [eax+0x14],edi
   1b086:	push   DWORD PTR [esi+0x4]
   1b089:	mov    ecx,ebx
   1b08b:	call   0x1a4ea
   1b090:	jmp    0x1b116
   1b095:	mov    eax,DWORD PTR [eax]
   1b097:	cmp    DWORD PTR [eax+0x14],0x0
   1b09b:	jne    0x1b0b6
   1b09d:	mov    DWORD PTR [eax+0x14],edi
   1b0a0:	mov    eax,DWORD PTR [esi+0x4]
   1b0a3:	and    DWORD PTR [eax+0x14],0x0
   1b0a7:	push   DWORD PTR [esi+0x4]
   1b0aa:	mov    ecx,ebx
   1b0ac:	call   0x1a538
   1b0b1:	mov    eax,DWORD PTR [esi+0x4]
   1b0b4:	mov    eax,DWORD PTR [eax]
   1b0b6:	mov    ecx,DWORD PTR [eax+0x8]
   1b0b9:	cmp    DWORD PTR [ecx+0x14],edi
   1b0bc:	jne    0x1b0da
   1b0be:	mov    ecx,DWORD PTR [eax]
   1b0c0:	cmp    DWORD PTR [ecx+0x14],edi
   1b0c3:	jne    0x1b0da
   1b0c5:	and    DWORD PTR [eax+0x14],0x0
   1b0c9:	mov    esi,DWORD PTR [esi+0x4]
   1b0cc:	mov    eax,DWORD PTR [ebx+0x4]
   1b0cf:	cmp    esi,DWORD PTR [eax+0x4]
   1b0d2:	jne    0x1b010
   1b0d8:	jmp    0x1b116
   1b0da:	mov    ecx,DWORD PTR [eax]
   1b0dc:	cmp    DWORD PTR [ecx+0x14],edi
   1b0df:	jne    0x1b0f8
   1b0e1:	mov    ecx,DWORD PTR [eax+0x8]
   1b0e4:	mov    DWORD PTR [ecx+0x14],edi
   1b0e7:	and    DWORD PTR [eax+0x14],0x0
   1b0eb:	push   eax
   1b0ec:	mov    ecx,ebx
   1b0ee:	call   0x1a4ea
   1b0f3:	mov    eax,DWORD PTR [esi+0x4]
   1b0f6:	mov    eax,DWORD PTR [eax]
   1b0f8:	mov    ecx,DWORD PTR [esi+0x4]
   1b0fb:	mov    ecx,DWORD PTR [ecx+0x14]
   1b0fe:	mov    DWORD PTR [eax+0x14],ecx
   1b101:	mov    ecx,DWORD PTR [esi+0x4]
   1b104:	mov    DWORD PTR [ecx+0x14],edi
   1b107:	mov    eax,DWORD PTR [eax]
   1b109:	mov    DWORD PTR [eax+0x14],edi
   1b10c:	push   DWORD PTR [esi+0x4]
   1b10f:	mov    ecx,ebx
   1b111:	call   0x1a538
   1b116:	mov    DWORD PTR [esi+0x14],edi
   1b119:	lea    ecx,[ebp-0x1]
   1b11c:	call   DWORD PTR ds:0x7de60
   1b122:	mov    esi,DWORD PTR [ebp-0x8]
   1b125:	lea    eax,[esi+0xc]
   1b128:	push   eax
   1b129:	call   0x1a666
   1b12e:	push   esi
   1b12f:	call   0x1da40
   1b134:	mov    eax,DWORD PTR [ebp+0x8]
   1b137:	dec    DWORD PTR [ebx+0xc]
   1b13a:	pop    ecx
   1b13b:	mov    ecx,DWORD PTR [ebp+0xc]
   1b13e:	pop    edi
   1b13f:	pop    esi
   1b140:	mov    DWORD PTR [eax],ecx
   1b142:	pop    ebx
   1b143:	leave  
   1b144:	ret    0x8
   1b147:	int3   
   1b148:	int3   
   1b149:	int3   
   1b14a:	int3   
   1b14b:	int3   
   1b14c:	mov    edi,edi
   1b14e:	push   ebp
   1b14f:	mov    ebp,esp
   1b151:	push   ebx
   1b152:	push   esi
   1b153:	push   edi
   1b154:	mov    edi,DWORD PTR [ebp+0x8]
   1b157:	mov    ebx,ecx
   1b159:	mov    esi,edi
   1b15b:	cmp    edi,DWORD PTR ds:0x7f89c
   1b161:	je     0x1b189
   1b163:	push   DWORD PTR [esi+0x8]
   1b166:	mov    ecx,ebx
   1b168:	call   0x1b14c
   1b16d:	mov    esi,DWORD PTR [esi]
   1b16f:	lea    eax,[edi+0xc]
   1b172:	push   eax
   1b173:	call   0x1a666
   1b178:	push   edi
   1b179:	call   0x1da40
   1b17e:	pop    ecx
   1b17f:	mov    edi,esi
   1b181:	cmp    esi,DWORD PTR ds:0x7f89c
   1b187:	jne    0x1b163
   1b189:	pop    edi
   1b18a:	pop    esi
   1b18b:	pop    ebx
   1b18c:	pop    ebp
   1b18d:	ret    0x4
   1b190:	int3   
   1b191:	int3   
   1b192:	int3   
   1b193:	int3   
   1b194:	int3   
   1b195:	int3   
   1b196:	mov    edi,edi
   1b198:	push   esi
   1b199:	mov    esi,ecx
   1b19b:	jmp    0x1b1a4
   1b19d:	mov    ecx,esi
   1b19f:	call   0x1aaf4
   1b1a4:	cmp    DWORD PTR [esi+0x2c],0x0
   1b1a8:	jne    0x1b19d
   1b1aa:	pop    esi
   1b1ab:	ret    
   1b1ac:	int3   
   1b1ad:	int3   
   1b1ae:	int3   
   1b1af:	int3   
   1b1b0:	int3   
   1b1b1:	int3   
   1b1b2:	mov    edi,edi
   1b1b4:	push   ebp
   1b1b5:	mov    ebp,esp
   1b1b7:	push   esi
   1b1b8:	mov    esi,ecx
   1b1ba:	cmp    DWORD PTR [esi+0x2c],0x0
   1b1be:	je     0x1b1e6
   1b1c0:	mov    ecx,DWORD PTR [esi+0x1c]
   1b1c3:	mov    edx,DWORD PTR [esi+0x18]
   1b1c6:	cmp    ecx,edx
   1b1c8:	je     0x1b1e6
   1b1ca:	push   DWORD PTR [ebp+0x8]
   1b1cd:	lea    eax,[ecx+0x4]
   1b1d0:	mov    DWORD PTR [esi+0x1c],eax
   1b1d3:	push   ecx
   1b1d4:	cmp    eax,edx
   1b1d6:	jne    0x1b1fa
   1b1d8:	call   0x1a3b2
   1b1dd:	mov    ecx,esi
   1b1df:	call   0x1ab86
   1b1e4:	jmp    0x1b1ff
   1b1e6:	mov    ecx,esi
   1b1e8:	call   0x1ab86
   1b1ed:	mov    eax,DWORD PTR [esi+0x1c]
   1b1f0:	push   DWORD PTR [ebp+0x8]
   1b1f3:	lea    ecx,[eax+0x4]
   1b1f6:	mov    DWORD PTR [esi+0x1c],ecx
   1b1f9:	push   eax
   1b1fa:	call   0x1a3b2
   1b1ff:	inc    DWORD PTR [esi+0x2c]
   1b202:	pop    esi
   1b203:	pop    ebp
   1b204:	ret    0x4
   1b207:	int3   
   1b208:	int3   
   1b209:	int3   
   1b20a:	int3   
   1b20b:	int3   
   1b20c:	mov    edi,edi
   1b20e:	push   ebp
   1b20f:	mov    ebp,esp
   1b211:	push   esi
   1b212:	push   0x0
   1b214:	push   0xc
   1b216:	mov    esi,ecx
   1b218:	call   0x1163e
   1b21d:	mov    ecx,DWORD PTR [ebp+0x8]
   1b220:	mov    DWORD PTR [eax],eax
   1b222:	mov    DWORD PTR [eax+0x4],eax
   1b225:	and    DWORD PTR [esi+0x8],0x0
   1b229:	mov    DWORD PTR [esi+0x4],eax
   1b22c:	mov    ecx,DWORD PTR [ecx+0x4]
   1b22f:	mov    edx,DWORD PTR [ecx]
   1b231:	mov    eax,DWORD PTR [eax]
   1b233:	push   ecx
   1b234:	push   edx
   1b235:	push   eax
   1b236:	mov    ecx,esi
   1b238:	call   0x1ac92
   1b23d:	mov    eax,esi
   1b23f:	pop    esi
   1b240:	pop    ebp
   1b241:	ret    0x4
   1b244:	int3   
   1b245:	int3   
   1b246:	int3   
   1b247:	int3   
   1b248:	int3   
   1b249:	int3   
   1b24a:	mov    edi,edi
   1b24c:	push   ebp
   1b24d:	mov    ebp,esp
   1b24f:	push   ecx
   1b250:	mov    edx,DWORD PTR [ebp+0x8]
   1b253:	mov    DWORD PTR [ebp-0x4],ecx
   1b256:	cmp    ecx,edx
   1b258:	je     0x1b297
   1b25a:	push   ebx
   1b25b:	mov    ebx,DWORD PTR [edx+0x4]
   1b25e:	push   esi
   1b25f:	mov    esi,DWORD PTR [ecx+0x4]
   1b262:	mov    eax,DWORD PTR [esi]
   1b264:	push   edi
   1b265:	mov    edi,DWORD PTR [ebx]
   1b267:	jmp    0x1b277
   1b269:	cmp    edi,ebx
   1b26b:	je     0x1b27b
   1b26d:	mov    edx,DWORD PTR [edi+0x8]
   1b270:	mov    DWORD PTR [eax+0x8],edx
   1b273:	mov    eax,DWORD PTR [eax]
   1b275:	mov    edi,DWORD PTR [edi]
   1b277:	cmp    eax,esi
   1b279:	jne    0x1b269
   1b27b:	push   esi
   1b27c:	push   eax
   1b27d:	lea    eax,[ebp+0x8]
   1b280:	push   eax
   1b281:	call   0x1a992
   1b286:	mov    ecx,DWORD PTR [ebp-0x4]
   1b289:	push   ebx
   1b28a:	push   edi
   1b28b:	push   esi
   1b28c:	call   0x1ac92
   1b291:	mov    ecx,DWORD PTR [ebp-0x4]
   1b294:	pop    edi
   1b295:	pop    esi
   1b296:	pop    ebx
   1b297:	mov    eax,ecx
   1b299:	leave  
   1b29a:	ret    0x4
   1b29d:	int3   
   1b29e:	int3   
   1b29f:	int3   
   1b2a0:	int3   
   1b2a1:	int3   
   1b2a2:	mov    edi,edi
   1b2a4:	push   ebp
   1b2a5:	mov    ebp,esp
   1b2a7:	push   DWORD PTR [ebp+0x8]
   1b2aa:	mov    eax,DWORD PTR [ecx+0x4]
   1b2ad:	push   eax
   1b2ae:	lea    eax,[ebp+0x8]
   1b2b1:	push   eax
   1b2b2:	call   0x1ac50
   1b2b7:	pop    ebp
   1b2b8:	ret    0x4
   1b2bb:	int3   
   1b2bc:	int3   
   1b2bd:	int3   
   1b2be:	int3   
   1b2bf:	int3   
   1b2c0:	mov    edi,edi
   1b2c2:	push   ebp
   1b2c3:	mov    ebp,esp
   1b2c5:	push   ecx
   1b2c6:	push   ebx
   1b2c7:	push   esi
   1b2c8:	push   edi
   1b2c9:	mov    edi,ecx
   1b2cb:	mov    eax,DWORD PTR [edi+0x4]
   1b2ce:	mov    esi,DWORD PTR [eax+0x4]
   1b2d1:	mov    ebx,eax
   1b2d3:	mov    al,0x1
   1b2d5:	jmp    0x1b2f0
   1b2d7:	lea    eax,[esi+0xc]
   1b2da:	push   eax
   1b2db:	push   DWORD PTR [ebp+0xc]
   1b2de:	mov    ebx,esi
   1b2e0:	call   0x197ae
   1b2e5:	test   al,al
   1b2e7:	je     0x1b2ed
   1b2e9:	mov    esi,DWORD PTR [esi]
   1b2eb:	jmp    0x1b2f0
   1b2ed:	mov    esi,DWORD PTR [esi+0x8]
   1b2f0:	cmp    esi,DWORD PTR ds:0x7f89c
   1b2f6:	jne    0x1b2d7
   1b2f8:	cmp    BYTE PTR [edi+0x8],0x0
   1b2fc:	je     0x1b319
   1b2fe:	push   DWORD PTR [ebp+0xc]
   1b301:	lea    eax,[ebp+0xc]
   1b304:	push   ebx
   1b305:	push   esi
   1b306:	push   eax
   1b307:	mov    ecx,edi
   1b309:	call   0x1ad78
   1b30e:	mov    ecx,DWORD PTR [eax]
   1b310:	mov    eax,DWORD PTR [ebp+0x8]
   1b313:	mov    BYTE PTR [eax+0x4],0x1
   1b317:	jmp    0x1b34c
   1b319:	mov    DWORD PTR [ebp-0x4],ebx
   1b31c:	test   al,al
   1b31e:	je     0x1b32f
   1b320:	mov    eax,DWORD PTR [edi+0x4]
   1b323:	cmp    ebx,DWORD PTR [eax]
   1b325:	je     0x1b2fe
   1b327:	lea    ecx,[ebp-0x4]
   1b32a:	call   0x1a588
   1b32f:	push   DWORD PTR [ebp+0xc]
   1b332:	mov    eax,DWORD PTR [ebp-0x4]
   1b335:	add    eax,0xc
   1b338:	push   eax
   1b339:	call   0x197ae
   1b33e:	test   al,al
   1b340:	jne    0x1b2fe
   1b342:	mov    eax,DWORD PTR [ebp+0x8]
   1b345:	mov    ecx,DWORD PTR [ebp-0x4]
   1b348:	mov    BYTE PTR [eax+0x4],0x0
   1b34c:	pop    edi
   1b34d:	pop    esi
   1b34e:	mov    DWORD PTR [eax],ecx
   1b350:	pop    ebx
   1b351:	leave  
   1b352:	ret    0x8
   1b355:	int3   
   1b356:	int3   
   1b357:	int3   
   1b358:	int3   
   1b359:	int3   
   1b35a:	mov    edi,edi
   1b35c:	push   ebp
   1b35d:	mov    ebp,esp
   1b35f:	push   ecx
   1b360:	push   ecx
   1b361:	push   DWORD PTR [ebp+0x8]
   1b364:	lea    eax,[ebp-0x8]
   1b367:	push   eax
   1b368:	call   0x1acca
   1b36d:	and    DWORD PTR [ebp+0x8],0x0
   1b371:	lea    eax,[ebp+0x8]
   1b374:	push   eax
   1b375:	push   DWORD PTR [ebp-0x4]
   1b378:	push   DWORD PTR [ebp-0x8]
   1b37b:	call   0x1aa74
   1b380:	mov    eax,DWORD PTR [ebp+0x8]
   1b383:	add    esp,0xc
   1b386:	leave  
   1b387:	ret    0x4
   1b38a:	int3   
   1b38b:	int3   
   1b38c:	int3   
   1b38d:	int3   
   1b38e:	int3   
   1b38f:	int3   
   1b390:	mov    edi,edi
   1b392:	push   ebp
   1b393:	mov    ebp,esp
   1b395:	push   ecx
   1b396:	push   esi
   1b397:	mov    esi,ecx
   1b399:	cmp    DWORD PTR [esi+0xc],0x0
   1b39d:	mov    ecx,DWORD PTR [ebp+0xc]
   1b3a0:	je     0x1b3da
   1b3a2:	mov    eax,DWORD PTR [esi+0x4]
   1b3a5:	cmp    ecx,DWORD PTR [eax]
   1b3a7:	jne    0x1b3da
   1b3a9:	cmp    DWORD PTR [ebp+0x10],eax
   1b3ac:	jne    0x1b3da
   1b3ae:	push   DWORD PTR [eax+0x4]
   1b3b1:	mov    ecx,esi
   1b3b3:	call   0x1b14c
   1b3b8:	mov    ecx,DWORD PTR ds:0x7f89c
   1b3be:	mov    eax,DWORD PTR [esi+0x4]
   1b3c1:	mov    DWORD PTR [eax+0x4],ecx
   1b3c4:	mov    eax,DWORD PTR [esi+0x4]
   1b3c7:	and    DWORD PTR [esi+0xc],0x0
   1b3cb:	mov    DWORD PTR [eax],eax
   1b3cd:	mov    eax,DWORD PTR [esi+0x4]
   1b3d0:	mov    DWORD PTR [eax+0x8],eax
   1b3d3:	mov    eax,DWORD PTR [esi+0x4]
   1b3d6:	mov    ecx,DWORD PTR [eax]
   1b3d8:	jmp    0x1b3ff
   1b3da:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3dd:	je     0x1b3ff
   1b3df:	push   edi
   1b3e0:	mov    edi,ecx
   1b3e2:	lea    ecx,[ebp+0xc]
   1b3e5:	call   0x1a37c
   1b3ea:	push   edi
   1b3eb:	lea    eax,[ebp-0x4]
   1b3ee:	push   eax
   1b3ef:	mov    ecx,esi
   1b3f1:	call   0x1aece
   1b3f6:	mov    ecx,DWORD PTR [ebp+0xc]
   1b3f9:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3fc:	jne    0x1b3e0
   1b3fe:	pop    edi
   1b3ff:	mov    eax,DWORD PTR [ebp+0x8]
   1b402:	mov    DWORD PTR [eax],ecx
   1b404:	pop    esi
   1b405:	leave  
   1b406:	ret    0xc
   1b409:	int3   
   1b40a:	int3   
   1b40b:	int3   
   1b40c:	int3   
   1b40d:	int3   
   1b40e:	mov    edi,edi
   1b410:	push   ebp
   1b411:	mov    ebp,esp
   1b413:	push   esi
   1b414:	push   DWORD PTR [ebp+0x8]
   1b417:	mov    esi,ecx
   1b419:	mov    ecx,DWORD PTR [esi]
   1b41b:	call   0x1b1b2
   1b420:	mov    eax,esi
   1b422:	pop    esi
   1b423:	pop    ebp
   1b424:	ret    0x4
   1b427:	int3   
   1b428:	int3   
   1b429:	int3   
   1b42a:	int3   
   1b42b:	int3   
   1b42c:	mov    edi,edi
   1b42e:	push   ebp
   1b42f:	mov    ebp,esp
   1b431:	push   ecx
   1b432:	push   esi
   1b433:	push   edi
   1b434:	xor    edi,edi
   1b436:	push   edi
   1b437:	push   edi
   1b438:	push   edi
   1b439:	push   edi
   1b43a:	mov    esi,0x7f86c
   1b43f:	push   esi
   1b440:	call   DWORD PTR ds:0x1f028
   1b446:	test   eax,eax
   1b448:	jl     0x1b46c
   1b44a:	mov    eax,ds:0x7f898
   1b44f:	mov    ecx,DWORD PTR ds:0x7f890
   1b455:	add    eax,0x9
   1b458:	mov    DWORD PTR [ebp-0x4],eax
   1b45b:	lea    eax,[ebp-0x4]
   1b45e:	push   eax
   1b45f:	call   0x1b2a2
   1b464:	push   edi
   1b465:	push   esi
   1b466:	call   DWORD PTR ds:0x1f024
   1b46c:	pop    edi
   1b46d:	pop    esi
   1b46e:	leave  
   1b46f:	ret    
   1b470:	int3   
   1b471:	int3   
   1b472:	int3   
   1b473:	int3   
   1b474:	int3   
   1b475:	int3   
   1b476:	mov    edi,edi
   1b478:	push   ebp
   1b479:	mov    ebp,esp
   1b47b:	push   ecx
   1b47c:	push   ecx
   1b47d:	push   DWORD PTR [ebp+0xc]
   1b480:	lea    eax,[ebp-0x8]
   1b483:	push   eax
   1b484:	call   0x1b2c0
   1b489:	mov    eax,DWORD PTR [ebp+0x8]
   1b48c:	mov    ecx,DWORD PTR [ebp-0x8]
   1b48f:	mov    DWORD PTR [eax],ecx
   1b491:	mov    cl,BYTE PTR [ebp-0x4]
   1b494:	mov    BYTE PTR [eax+0x4],cl
   1b497:	leave  
   1b498:	ret    0x8
   1b49b:	int3   
   1b49c:	int3   
   1b49d:	int3   
   1b49e:	int3   
   1b49f:	int3   
   1b4a0:	mov    edi,edi
   1b4a2:	push   ebp
   1b4a3:	mov    ebp,esp
   1b4a5:	push   ecx
   1b4a6:	push   ecx
   1b4a7:	push   esi
   1b4a8:	push   DWORD PTR [ebp+0x8]
   1b4ab:	lea    eax,[ebp-0x8]
   1b4ae:	push   eax
   1b4af:	mov    esi,ecx
   1b4b1:	call   0x1acca
   1b4b6:	and    DWORD PTR [ebp+0x8],0x0
   1b4ba:	lea    eax,[ebp+0x8]
   1b4bd:	push   eax
   1b4be:	push   DWORD PTR [ebp-0x4]
   1b4c1:	push   DWORD PTR [ebp-0x8]
   1b4c4:	call   0x1aa74
   1b4c9:	add    esp,0xc
   1b4cc:	push   DWORD PTR [ebp-0x4]
   1b4cf:	lea    eax,[ebp-0x4]
   1b4d2:	push   DWORD PTR [ebp-0x8]
   1b4d5:	mov    ecx,esi
   1b4d7:	push   eax
   1b4d8:	call   0x1b390
   1b4dd:	mov    eax,DWORD PTR [ebp+0x8]
   1b4e0:	pop    esi
   1b4e1:	leave  
   1b4e2:	ret    0x4
   1b4e5:	int3   
   1b4e6:	int3   
   1b4e7:	int3   
   1b4e8:	int3   
   1b4e9:	int3   
   1b4ea:	mov    edi,edi
   1b4ec:	push   ebp
   1b4ed:	mov    ebp,esp
   1b4ef:	jmp    0x1b502
   1b4f1:	push   eax
   1b4f2:	lea    ecx,[ebp+0x2c]
   1b4f5:	call   0x1b40e
   1b4fa:	lea    ecx,[ebp+0xc]
   1b4fd:	call   0x1a2de
   1b502:	mov    eax,DWORD PTR [ebp+0x14]
   1b505:	cmp    eax,DWORD PTR [ebp+0x24]
   1b508:	jne    0x1b4f1
   1b50a:	mov    eax,DWORD PTR [ebp+0x8]
   1b50d:	mov    ecx,DWORD PTR [ebp+0x2c]
   1b510:	mov    DWORD PTR [eax],ecx
   1b512:	pop    ebp
   1b513:	ret    0x28
   1b516:	int3   
   1b517:	int3   
   1b518:	int3   
   1b519:	int3   
   1b51a:	int3   
   1b51b:	int3   
   1b51c:	mov    edi,edi
   1b51e:	push   ebp
   1b51f:	mov    ebp,esp
   1b521:	sub    esp,0x10
   1b524:	push   0xffffffff
   1b526:	push   DWORD PTR [ebp+0x8]
   1b529:	lea    ecx,[ebp-0x8]
   1b52c:	call   0x110d4
   1b531:	mov    ecx,DWORD PTR ds:0x7f88c
   1b537:	lea    eax,[ebp-0x8]
   1b53a:	push   eax
   1b53b:	lea    eax,[ebp-0x10]
   1b53e:	push   eax
   1b53f:	call   0x1b476
   1b544:	push   DWORD PTR [ebp-0x8]
   1b547:	call   0x1da40
   1b54c:	pop    ecx
   1b54d:	leave  
   1b54e:	ret    0x4
   1b551:	int3   
   1b552:	int3   
   1b553:	int3   
   1b554:	int3   
   1b555:	int3   
   1b556:	mov    edi,edi
   1b558:	push   ebp
   1b559:	mov    ebp,esp
   1b55b:	xor    eax,eax
   1b55d:	push   ebx
   1b55e:	push   esi
   1b55f:	push   edi
   1b560:	mov    ebx,ecx
   1b562:	mov    DWORD PTR [ebx+0x4],eax
   1b565:	mov    DWORD PTR [ebx+0x8],eax
   1b568:	mov    DWORD PTR [ebx+0xc],eax
   1b56b:	mov    DWORD PTR [ebx+0x10],eax
   1b56e:	mov    DWORD PTR [ebx+0x14],eax
   1b571:	mov    DWORD PTR [ebx+0x18],eax
   1b574:	mov    DWORD PTR [ebx+0x1c],eax
   1b577:	mov    DWORD PTR [ebx+0x20],eax
   1b57a:	mov    DWORD PTR [ebx+0x24],eax
   1b57d:	mov    DWORD PTR [ebx+0x28],eax
   1b580:	mov    DWORD PTR [ebx+0x2c],eax
   1b583:	mov    eax,DWORD PTR [ebp+0x8]
   1b586:	push   ebx
   1b587:	sub    esp,0x10
   1b58a:	mov    edi,esp
   1b58c:	lea    esi,[eax+0x14]
   1b58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b593:	sub    esp,0x10
   1b596:	lea    esi,[eax+0x4]
   1b599:	mov    edi,esp
   1b59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b59c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b59d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b59e:	lea    eax,[ebp+0x8]
   1b5a1:	push   eax
   1b5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5a3:	call   0x1b4ea
   1b5a8:	pop    edi
   1b5a9:	pop    esi
   1b5aa:	mov    eax,ebx
   1b5ac:	pop    ebx
   1b5ad:	pop    ebp
   1b5ae:	ret    0x4
   1b5b1:	int3   
   1b5b2:	int3   
   1b5b3:	int3   
   1b5b4:	int3   
   1b5b5:	int3   
   1b5b6:	mov    edi,edi
   1b5b8:	push   ebp
   1b5b9:	mov    ebp,esp
   1b5bb:	push   ecx
   1b5bc:	push   ebx
   1b5bd:	push   0x30
   1b5bf:	call   0x10a96
   1b5c4:	xor    ebx,ebx
   1b5c6:	pop    ecx
   1b5c7:	cmp    eax,ebx
   1b5c9:	je     0x1b5dd
   1b5cb:	lea    ecx,[ebp-0x1]
   1b5ce:	push   ecx
   1b5cf:	mov    ecx,eax
   1b5d1:	call   0x1a49c
   1b5d6:	mov    ds:0x7f894,eax
   1b5db:	jmp    0x1b5e3
   1b5dd:	mov    DWORD PTR ds:0x7f894,ebx
   1b5e3:	push   esi
   1b5e4:	push   0x10
   1b5e6:	call   0x10a96
   1b5eb:	mov    esi,eax
   1b5ed:	pop    ecx
   1b5ee:	cmp    esi,ebx
   1b5f0:	je     0x1b604
   1b5f2:	mov    ecx,esi
   1b5f4:	mov    BYTE PTR [esi+0x8],bl
   1b5f7:	call   0x1acfc
   1b5fc:	mov    DWORD PTR ds:0x7f88c,esi
   1b602:	jmp    0x1b60a
   1b604:	mov    DWORD PTR ds:0x7f88c,ebx
   1b60a:	push   0xc
   1b60c:	call   0x10a96
   1b611:	pop    ecx
   1b612:	pop    esi
   1b613:	cmp    eax,ebx
   1b615:	je     0x1b629
   1b617:	lea    ecx,[ebp-0x1]
   1b61a:	push   ecx
   1b61b:	mov    ecx,eax
   1b61d:	call   0x1ab10
   1b622:	mov    ds:0x7f890,eax
   1b627:	jmp    0x1b62f
   1b629:	mov    DWORD PTR ds:0x7f890,ebx
   1b62f:	push   ebx
   1b630:	push   0x7f86c
   1b635:	call   0x11c12
   1b63a:	call   eax
   1b63c:	mov    DWORD PTR ds:0x7f898,0x1
   1b646:	pop    ebx
   1b647:	leave  
   1b648:	ret    
   1b649:	int3   
   1b64a:	int3   
   1b64b:	int3   
   1b64c:	int3   
   1b64d:	int3   
   1b64e:	push   0x3c
   1b650:	push   0x7e060
   1b655:	call   0x1db0c
   1b65a:	xor    esi,esi
   1b65c:	push   esi
   1b65d:	push   esi
   1b65e:	push   esi
   1b65f:	push   esi
   1b660:	push   0x7f86c
   1b665:	call   DWORD PTR ds:0x1f028
   1b66b:	cmp    eax,esi
   1b66d:	jl     0x1b7dd
   1b673:	mov    DWORD PTR [ebp-0x4],esi
   1b676:	mov    edi,DWORD PTR [ebp+0x8]
   1b679:	push   edi
   1b67a:	lea    eax,[ebp-0x24]
   1b67d:	push   eax
   1b67e:	call   0x1a6a8
   1b683:	cmp    DWORD PTR [eax+0x4],esi
   1b686:	setne  BYTE PTR [ebp-0x19]
   1b68a:	push   DWORD PTR [ebp-0x24]
   1b68d:	call   0x1da40
   1b692:	pop    ecx
   1b693:	push   edi
   1b694:	lea    eax,[ebp-0x2c]
   1b697:	push   eax
   1b698:	call   0x1a6ce
   1b69d:	xor    al,al
   1b69f:	cmp    DWORD PTR [edi+0x14],esi
   1b6a2:	jne    0x1b6b8
   1b6a4:	lea    eax,[ebp-0x2c]
   1b6a7:	push   eax
   1b6a8:	mov    ecx,DWORD PTR ds:0x7f88c
   1b6ae:	call   0x1b35a
   1b6b3:	test   eax,eax
   1b6b5:	setne  al
   1b6b8:	test   al,al
   1b6ba:	je     0x1b6cb
   1b6bc:	lea    eax,[ebp-0x2c]
   1b6bf:	push   eax
   1b6c0:	mov    ecx,DWORD PTR ds:0x7f88c
   1b6c6:	call   0x1b4a0
   1b6cb:	mov    ebx,DWORD PTR ds:0x7f894
   1b6d1:	cmp    DWORD PTR [ebx+0x2c],esi
   1b6d4:	jbe    0x1b734
   1b6d6:	mov    eax,ds:0x7ed3c
   1b6db:	mov    DWORD PTR [ebp-0x20],eax
   1b6de:	cmp    eax,esi
   1b6e0:	ja     0x1b6e9
   1b6e2:	mov    DWORD PTR [ebp-0x20],0x1
   1b6e9:	mov    eax,DWORD PTR [ebp-0x20]
   1b6ec:	cmp    DWORD PTR [ebx+0x2c],eax
   1b6ef:	jb     0x1b734
   1b6f1:	lea    esi,[ebx+0x4]
   1b6f4:	lea    edi,[ebp-0x3c]
   1b6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6fb:	mov    eax,DWORD PTR [ebp-0x34]
   1b6fe:	mov    eax,DWORD PTR [eax]
   1b700:	mov    eax,DWORD PTR [eax+0xc]
   1b703:	xor    ecx,ecx
   1b705:	add    eax,0x9c40
   1b70a:	push   ecx
   1b70b:	pop    esi
   1b70c:	adc    ecx,esi
   1b70e:	mov    edx,DWORD PTR [ebp+0x8]
   1b711:	mov    edx,DWORD PTR [edx+0xc]
   1b714:	cmp    ecx,esi
   1b716:	ja     0x1b734
   1b718:	jb     0x1b71e
   1b71a:	cmp    eax,edx
   1b71c:	jae    0x1b734
   1b71e:	mov    ecx,ebx
   1b720:	call   0x1a4ca
   1b725:	mov    ecx,ebx
   1b727:	call   0x1aaf4
   1b72c:	mov    ebx,DWORD PTR ds:0x7f894
   1b732:	jmp    0x1b6e9
   1b734:	push   DWORD PTR [ebp+0x8]
   1b737:	lea    eax,[ebp-0x24]
   1b73a:	push   eax
   1b73b:	call   0x1a6ce
   1b740:	push   eax
   1b741:	lea    eax,[ebp-0x3c]
   1b744:	push   eax
   1b745:	call   0x1a71a
   1b74a:	push   DWORD PTR [ebp-0x24]
   1b74d:	call   0x1da40
   1b752:	pop    ecx
   1b753:	mov    ebx,DWORD PTR ds:0x7f894
   1b759:	lea    esi,[ebx+0x14]
   1b75c:	lea    edi,[ebp-0x4c]
   1b75f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b763:	mov    esi,DWORD PTR [ebp-0x34]
   1b766:	cmp    esi,DWORD PTR [ebp-0x44]
   1b769:	je     0x1b79d
   1b76b:	mov    eax,DWORD PTR [esi]
   1b76d:	mov    BYTE PTR [eax+0x1c],0x0
   1b771:	mov    eax,DWORD PTR [esi]
   1b773:	cmp    BYTE PTR [eax+0x24],0x0
   1b777:	jne    0x1b787
   1b779:	mov    BYTE PTR [eax+0x24],0x1
   1b77d:	mov    eax,DWORD PTR [esi]
   1b77f:	push   DWORD PTR [eax+0x8]
   1b782:	call   0x1a444
   1b787:	mov    eax,DWORD PTR [esi]
   1b789:	mov    ecx,DWORD PTR [eax+0x8]
   1b78c:	mov    eax,DWORD PTR [ebp+0x8]
   1b78f:	mov    DWORD PTR [eax+0x8],ecx
   1b792:	mov    ecx,DWORD PTR [esi]
   1b794:	mov    ecx,DWORD PTR [ecx+0x20]
   1b797:	inc    ecx
   1b798:	mov    DWORD PTR [eax+0x20],ecx
   1b79b:	jmp    0x1b7a0
   1b79d:	mov    eax,DWORD PTR [ebp+0x8]
   1b7a0:	mov    cl,BYTE PTR [ebp-0x19]
   1b7a3:	mov    BYTE PTR [eax+0x1c],cl
   1b7a6:	lea    eax,[ebp+0x8]
   1b7a9:	push   eax
   1b7aa:	mov    ecx,ebx
   1b7ac:	call   0x1b1b2
   1b7b1:	inc    DWORD PTR ds:0x7f898
   1b7b7:	push   DWORD PTR [ebp-0x2c]
   1b7ba:	call   0x1da40
   1b7bf:	pop    ecx
   1b7c0:	jmp    0x1b7c9
   1b7c2:	xor    eax,eax
   1b7c4:	inc    eax
   1b7c5:	ret    
   1b7c6:	mov    esp,DWORD PTR [ebp-0x18]
   1b7c9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b7d0:	push   0x0
   1b7d2:	push   0x7f86c
   1b7d7:	call   DWORD PTR ds:0x1f024
   1b7dd:	call   0x1db51
   1b7e2:	ret    0x4
   1b7e5:	int3   
   1b7e6:	int3   
   1b7e7:	int3   
   1b7e8:	int3   
   1b7e9:	int3   
   1b7ea:	push   0x48
   1b7ec:	push   0x7e080
   1b7f1:	call   0x1db0c
   1b7f6:	xor    ebx,ebx
   1b7f8:	push   ebx
   1b7f9:	push   ebx
   1b7fa:	push   ebx
   1b7fb:	push   ebx
   1b7fc:	push   0x7f86c
   1b801:	call   DWORD PTR ds:0x1f028
   1b807:	cmp    eax,ebx
   1b809:	jl     0x1b8b7
   1b80f:	mov    DWORD PTR [ebp-0x4],ebx
   1b812:	push   DWORD PTR ds:0x7f890
   1b818:	lea    ecx,[ebp-0x28]
   1b81b:	call   0x1b20c
   1b820:	mov    BYTE PTR [ebp-0x19],bl
   1b823:	cmp    DWORD PTR [ebp-0x20],ebx
   1b826:	je     0x1b846
   1b828:	mov    eax,DWORD PTR [ebp-0x24]
   1b82b:	mov    eax,DWORD PTR [eax]
   1b82d:	mov    eax,DWORD PTR [eax+0x8]
   1b830:	cmp    eax,DWORD PTR ds:0x7f898
   1b836:	ja     0x1b846
   1b838:	mov    BYTE PTR [ebp-0x19],0x1
   1b83c:	lea    ecx,[ebp-0x28]
   1b83f:	call   0x1ab6a
   1b844:	jmp    0x1b823
   1b846:	cmp    BYTE PTR [ebp-0x19],bl
   1b849:	je     0x1b881
   1b84b:	push   DWORD PTR ds:0x7f894
   1b851:	lea    ecx,[ebp-0x58]
   1b854:	call   0x1b556
   1b859:	mov    esi,DWORD PTR [ebp+0x8]
   1b85c:	push   esi
   1b85d:	lea    eax,[ebp-0x58]
   1b860:	push   eax
   1b861:	call   0x1a7b8
   1b866:	cmp    DWORD PTR [esi],ebx
   1b868:	jne    0x1b879
   1b86a:	lea    eax,[ebp-0x28]
   1b86d:	push   eax
   1b86e:	mov    ecx,DWORD PTR ds:0x7f890
   1b874:	call   0x1b24a
   1b879:	lea    ecx,[ebp-0x58]
   1b87c:	call   0x1b196
   1b881:	lea    ecx,[ebp-0x28]
   1b884:	call   0x1ab36
   1b889:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b890:	jmp    0x1b8ab
   1b892:	xor    eax,eax
   1b894:	inc    eax
   1b895:	ret    
   1b896:	mov    esp,DWORD PTR [ebp-0x18]
   1b899:	mov    eax,DWORD PTR [ebp+0x8]
   1b89c:	mov    DWORD PTR [eax],0x2
   1b8a2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b8a9:	xor    ebx,ebx
   1b8ab:	push   ebx
   1b8ac:	push   0x7f86c
   1b8b1:	call   DWORD PTR ds:0x1f024
   1b8b7:	call   0x1db51
   1b8bc:	ret    0x4
   1b8bf:	int3   
   1b8c0:	int3   
   1b8c1:	int3   
   1b8c2:	int3   
   1b8c3:	int3   
   1b8c4:	mov    edi,edi
   1b8c6:	push   ebp
   1b8c7:	mov    ebp,esp
   1b8c9:	mov    ecx,DWORD PTR [ebp+0x8]
   1b8cc:	xor    edx,edx
   1b8ce:	cmp    ecx,edx
   1b8d0:	je     0x1b920
   1b8d2:	mov    eax,DWORD PTR [ecx+0x1c]
   1b8d5:	cmp    eax,edx
   1b8d7:	je     0x1b920
   1b8d9:	mov    DWORD PTR [eax+0x1c],edx
   1b8dc:	mov    DWORD PTR [ecx+0x14],edx
   1b8df:	mov    DWORD PTR [ecx+0x8],edx
   1b8e2:	mov    DWORD PTR [ecx+0x18],edx
   1b8e5:	mov    DWORD PTR [ecx+0x30],0x1
   1b8ec:	lea    ecx,[eax+0x530]
   1b8f2:	mov    DWORD PTR [eax],edx
   1b8f4:	mov    DWORD PTR [eax+0x4],edx
   1b8f7:	mov    DWORD PTR [eax+0xc],edx
   1b8fa:	mov    DWORD PTR [eax+0x14],0x8000
   1b901:	mov    DWORD PTR [eax+0x20],edx
   1b904:	mov    DWORD PTR [eax+0x28],edx
   1b907:	mov    DWORD PTR [eax+0x2c],edx
   1b90a:	mov    DWORD PTR [eax+0x30],edx
   1b90d:	mov    DWORD PTR [eax+0x38],edx
   1b910:	mov    DWORD PTR [eax+0x3c],edx
   1b913:	mov    DWORD PTR [eax+0x6c],ecx
   1b916:	mov    DWORD PTR [eax+0x50],ecx
   1b919:	mov    DWORD PTR [eax+0x4c],ecx
   1b91c:	xor    eax,eax
   1b91e:	jmp    0x1b923
   1b920:	push   0xfffffffe
   1b922:	pop    eax
   1b923:	pop    ebp
   1b924:	ret    0x4
   1b927:	int3   
   1b928:	int3   
   1b929:	int3   
   1b92a:	int3   
   1b92b:	int3   
   1b92c:	mov    edi,edi
   1b92e:	push   ebp
   1b92f:	mov    ebp,esp
   1b931:	mov    eax,DWORD PTR [ebp+0x10]
   1b934:	push   esi
   1b935:	push   edi
   1b936:	xor    edi,edi
   1b938:	cmp    eax,edi
   1b93a:	je     0x1b9d5
   1b940:	cmp    BYTE PTR [eax],0x31
   1b943:	jne    0x1b9d5
   1b949:	cmp    DWORD PTR [ebp+0x14],0x38
   1b94d:	jne    0x1b9d5
   1b953:	mov    esi,DWORD PTR [ebp+0x8]
   1b956:	cmp    esi,edi
   1b958:	jne    0x1b95e
   1b95a:	push   0xfffffffe
   1b95c:	jmp    0x1b9d7
   1b95e:	mov    DWORD PTR [esi+0x18],edi
   1b961:	cmp    DWORD PTR [esi+0x20],edi
   1b964:	jne    0x1b970
   1b966:	mov    DWORD PTR [esi+0x20],0x1cd2c
   1b96d:	mov    DWORD PTR [esi+0x28],edi
   1b970:	cmp    DWORD PTR [esi+0x24],edi
   1b973:	jne    0x1b97c
   1b975:	mov    DWORD PTR [esi+0x24],0x1cd48
   1b97c:	push   0x2530
   1b981:	push   0x1
   1b983:	push   DWORD PTR [esi+0x28]
   1b986:	call   DWORD PTR [esi+0x20]
   1b989:	cmp    eax,edi
   1b98b:	jne    0x1b991
   1b98d:	push   0xfffffffc
   1b98f:	jmp    0x1b9d7
   1b991:	mov    ecx,DWORD PTR [ebp+0xc]
   1b994:	cmp    ecx,edi
   1b996:	mov    DWORD PTR [esi+0x1c],eax
   1b999:	jge    0x1b9a2
   1b99b:	mov    DWORD PTR [eax+0x8],edi
   1b99e:	neg    ecx
   1b9a0:	jmp    0x1b9b3
   1b9a2:	mov    edx,ecx
   1b9a4:	sar    edx,0x4
   1b9a7:	inc    edx
   1b9a8:	cmp    ecx,0x30
   1b9ab:	mov    DWORD PTR [eax+0x8],edx
   1b9ae:	jge    0x1b9b3
   1b9b0:	and    ecx,0xf
   1b9b3:	lea    edx,[ecx-0x8]
   1b9b6:	cmp    edx,0x7
   1b9b9:	ja     0x1b9c9
   1b9bb:	push   esi
   1b9bc:	mov    DWORD PTR [eax+0x24],ecx
   1b9bf:	mov    DWORD PTR [eax+0x34],edi
   1b9c2:	call   0x1b8c4
   1b9c7:	jmp    0x1b9d8
   1b9c9:	push   eax
   1b9ca:	push   DWORD PTR [esi+0x28]
   1b9cd:	call   DWORD PTR [esi+0x24]
   1b9d0:	mov    DWORD PTR [esi+0x1c],edi
   1b9d3:	jmp    0x1b95a
   1b9d5:	push   0xfffffffa
   1b9d7:	pop    eax
   1b9d8:	pop    edi
   1b9d9:	pop    esi
   1b9da:	pop    ebp
   1b9db:	ret    0x10
   1b9de:	int3   
   1b9df:	int3   
   1b9e0:	int3   
   1b9e1:	int3   
   1b9e2:	int3   
   1b9e3:	int3   
   1b9e4:	mov    edi,edi
   1b9e6:	push   ebp
   1b9e7:	mov    ebp,esp
   1b9e9:	push   ecx
   1b9ea:	push   ebx
   1b9eb:	push   esi
   1b9ec:	mov    esi,DWORD PTR [edi+0x1c]
   1b9ef:	cmp    DWORD PTR [esi+0x34],0x0
   1b9f3:	mov    ebx,eax
   1b9f5:	jne    0x1ba15
   1b9f7:	mov    ecx,DWORD PTR [esi+0x24]
   1b9fa:	xor    eax,eax
   1b9fc:	inc    eax
   1b9fd:	shl    eax,cl
   1b9ff:	push   0x1
   1ba01:	push   eax
   1ba02:	push   DWORD PTR [edi+0x28]
   1ba05:	call   DWORD PTR [edi+0x20]
   1ba08:	mov    DWORD PTR [esi+0x34],eax
   1ba0b:	test   eax,eax
   1ba0d:	jne    0x1ba15
   1ba0f:	inc    eax
   1ba10:	jmp    0x1bab7
   1ba15:	xor    eax,eax
   1ba17:	cmp    DWORD PTR [esi+0x28],eax
   1ba1a:	jne    0x1ba2d
   1ba1c:	mov    ecx,DWORD PTR [esi+0x24]
   1ba1f:	xor    edx,edx
   1ba21:	inc    edx
   1ba22:	shl    edx,cl
   1ba24:	mov    DWORD PTR [esi+0x30],eax
   1ba27:	mov    DWORD PTR [esi+0x2c],eax
   1ba2a:	mov    DWORD PTR [esi+0x28],edx
   1ba2d:	sub    ebx,DWORD PTR [edi+0x10]
   1ba30:	mov    eax,DWORD PTR [esi+0x28]
   1ba33:	cmp    ebx,eax
   1ba35:	jb     0x1ba4f
   1ba37:	mov    ecx,DWORD PTR [edi+0xc]
   1ba3a:	push   eax
   1ba3b:	sub    ecx,eax
   1ba3d:	push   ecx
   1ba3e:	push   DWORD PTR [esi+0x34]
   1ba41:	call   0x1dac2
   1ba46:	add    esp,0xc
   1ba49:	and    DWORD PTR [esi+0x30],0x0
   1ba4d:	jmp    0x1ba90
   1ba4f:	sub    eax,DWORD PTR [esi+0x30]
   1ba52:	mov    DWORD PTR [ebp-0x4],eax
   1ba55:	cmp    eax,ebx
   1ba57:	jbe    0x1ba5c
   1ba59:	mov    DWORD PTR [ebp-0x4],ebx
   1ba5c:	mov    eax,DWORD PTR [edi+0xc]
   1ba5f:	push   DWORD PTR [ebp-0x4]
   1ba62:	sub    eax,ebx
   1ba64:	push   eax
   1ba65:	mov    eax,DWORD PTR [esi+0x34]
   1ba68:	add    eax,DWORD PTR [esi+0x30]
   1ba6b:	push   eax
   1ba6c:	call   0x1dac2
   1ba71:	mov    eax,DWORD PTR [ebp-0x4]
   1ba74:	add    esp,0xc
   1ba77:	sub    ebx,eax
   1ba79:	je     0x1ba98
   1ba7b:	mov    eax,DWORD PTR [edi+0xc]
   1ba7e:	push   ebx
   1ba7f:	sub    eax,ebx
   1ba81:	push   eax
   1ba82:	push   DWORD PTR [esi+0x34]
   1ba85:	call   0x1dac2
   1ba8a:	add    esp,0xc
   1ba8d:	mov    DWORD PTR [esi+0x30],ebx
   1ba90:	mov    eax,DWORD PTR [esi+0x28]
   1ba93:	mov    DWORD PTR [esi+0x2c],eax
   1ba96:	jmp    0x1bab5
   1ba98:	add    DWORD PTR [esi+0x30],eax
   1ba9b:	mov    ecx,DWORD PTR [esi+0x30]
   1ba9e:	mov    edx,DWORD PTR [esi+0x28]
   1baa1:	cmp    ecx,edx
   1baa3:	jne    0x1baa9
   1baa5:	and    DWORD PTR [esi+0x30],0x0
   1baa9:	mov    ecx,DWORD PTR [esi+0x2c]
   1baac:	cmp    ecx,edx
   1baae:	jae    0x1bab5
   1bab0:	add    ecx,eax
   1bab2:	mov    DWORD PTR [esi+0x2c],ecx
   1bab5:	xor    eax,eax
   1bab7:	pop    esi
   1bab8:	pop    ebx
   1bab9:	leave  
   1baba:	ret    
   1babb:	int3   
   1babc:	int3   
   1babd:	int3   
   1babe:	int3   
   1babf:	int3   
   1bac0:	mov    edi,edi
   1bac2:	push   ebp
   1bac3:	mov    ebp,esp
   1bac5:	mov    edx,DWORD PTR [ebp+0x8]
   1bac8:	sub    esp,0x2c
   1bacb:	push   ebx
   1bacc:	xor    eax,eax
   1bace:	push   esi
   1bacf:	push   edi
   1bad0:	cmp    edx,eax
   1bad2:	je     0x1bb22
   1bad4:	mov    esi,DWORD PTR [edx+0x1c]
   1bad7:	cmp    esi,eax
   1bad9:	je     0x1bb22
   1badb:	cmp    DWORD PTR [edx+0xc],eax
   1bade:	je     0x1bb22
   1bae0:	cmp    DWORD PTR [edx],eax
   1bae2:	jne    0x1bae9
   1bae4:	cmp    DWORD PTR [edx+0x4],eax
   1bae7:	jne    0x1bb22
   1bae9:	cmp    DWORD PTR [esi],0xb
   1baec:	jne    0x1baf4
   1baee:	mov    DWORD PTR [esi],0xc
   1baf4:	mov    eax,DWORD PTR [edx+0xc]
   1baf7:	mov    ecx,DWORD PTR [edx+0x10]
   1bafa:	and    DWORD PTR [ebp-0x24],0x0
   1bafe:	mov    ebx,DWORD PTR [esi+0x38]
   1bb01:	mov    edi,DWORD PTR [esi+0x3c]
   1bb04:	mov    DWORD PTR [ebp-0x18],eax
   1bb07:	mov    eax,DWORD PTR [edx]
   1bb09:	mov    DWORD PTR [ebp-0x4],eax
   1bb0c:	mov    eax,DWORD PTR [edx+0x4]
   1bb0f:	mov    DWORD PTR [ebp-0x8],eax
   1bb12:	mov    DWORD PTR [ebp-0x2c],eax
   1bb15:	mov    eax,DWORD PTR [esi]
   1bb17:	mov    DWORD PTR [ebp-0x14],ecx
   1bb1a:	mov    DWORD PTR [ebp-0x1c],ecx
   1bb1d:	cmp    eax,0x1c
   1bb20:	jbe    0x1bb2f
   1bb22:	push   0xfffffffe
   1bb24:	pop    eax
   1bb25:	pop    edi
   1bb26:	pop    esi
   1bb27:	pop    ebx
   1bb28:	leave  
   1bb29:	ret    0x8
   1bb2c:	mov    edx,DWORD PTR [ebp+0x8]
   1bb2f:	jmp    DWORD PTR [eax*4+0x1cc6c]
   1bb36:	mov    eax,DWORD PTR [esi+0x8]
   1bb39:	test   eax,eax
   1bb3b:	jne    0x1bb67
   1bb3d:	mov    DWORD PTR [esi],0xc
   1bb43:	jmp    0x1cb3d
   1bb48:	cmp    DWORD PTR [ebp-0x8],0x0
   1bb4c:	je     0x1cb8b
   1bb52:	mov    ecx,DWORD PTR [ebp-0x4]
   1bb55:	movzx  edx,BYTE PTR [ecx]
   1bb58:	dec    DWORD PTR [ebp-0x8]
   1bb5b:	mov    ecx,edi
   1bb5d:	shl    edx,cl
   1bb5f:	add    ebx,edx
   1bb61:	inc    DWORD PTR [ebp-0x4]
   1bb64:	add    edi,0x8
   1bb67:	cmp    edi,0x10
   1bb6a:	jb     0x1bb48
   1bb6c:	test   al,0x2
   1bb6e:	je     0x1bbab
   1bb70:	cmp    ebx,0x8b1f
   1bb76:	jne    0x1bbab
   1bb78:	xor    edi,edi
   1bb7a:	push   edi
   1bb7b:	push   edi
   1bb7c:	push   edi
   1bb7d:	call   0x1d9ee
   1bb82:	mov    DWORD PTR [esi+0x18],eax
   1bb85:	push   0x2
   1bb87:	lea    eax,[ebp-0x10]
   1bb8a:	push   eax
   1bb8b:	mov    BYTE PTR [ebp-0x10],0x1f
   1bb8f:	mov    BYTE PTR [ebp-0xf],0x8b
   1bb93:	push   DWORD PTR [esi+0x18]
   1bb96:	call   0x1d9ee
   1bb9b:	mov    DWORD PTR [esi+0x18],eax
   1bb9e:	xor    ebx,ebx
   1bba0:	mov    DWORD PTR [esi],0x1
   1bba6:	jmp    0x1cb3d
   1bbab:	mov    eax,DWORD PTR [esi+0x20]
   1bbae:	and    DWORD PTR [esi+0x10],0x0
   1bbb2:	test   eax,eax
   1bbb4:	je     0x1bbba
   1bbb6:	or     DWORD PTR [eax+0x30],0xffffffff
   1bbba:	test   BYTE PTR [esi+0x8],0x1
   1bbbe:	je     0x1bc44
   1bbc4:	movzx  eax,bl
   1bbc7:	shl    eax,0x8
   1bbca:	mov    ecx,ebx
   1bbcc:	shr    ecx,0x8
   1bbcf:	add    eax,ecx
   1bbd1:	push   0x1f
   1bbd3:	xor    edx,edx
   1bbd5:	pop    ecx
   1bbd6:	div    ecx
   1bbd8:	test   edx,edx
   1bbda:	jne    0x1bc44
   1bbdc:	mov    eax,ebx
   1bbde:	and    al,0xf
   1bbe0:	cmp    al,0x8
   1bbe2:	je     0x1bbf3
   1bbe4:	mov    eax,DWORD PTR [ebp+0x8]
   1bbe7:	mov    DWORD PTR [eax+0x18],0x1edec
   1bbee:	jmp    0x1cb37
   1bbf3:	shr    ebx,0x4
   1bbf6:	mov    ecx,ebx
   1bbf8:	and    ecx,0xf
   1bbfb:	add    ecx,0x8
   1bbfe:	sub    edi,0x4
   1bc01:	cmp    ecx,DWORD PTR [esi+0x24]
   1bc04:	jbe    0x1bc15
   1bc06:	mov    eax,DWORD PTR [ebp+0x8]
   1bc09:	mov    DWORD PTR [eax+0x18],0x1edd8
   1bc10:	jmp    0x1cb37
   1bc15:	xor    eax,eax
   1bc17:	xor    edi,edi
   1bc19:	inc    eax
   1bc1a:	push   edi
   1bc1b:	shl    eax,cl
   1bc1d:	push   edi
   1bc1e:	push   edi
   1bc1f:	mov    DWORD PTR [esi+0x14],eax
   1bc22:	call   0x1d54c
   1bc27:	mov    ecx,DWORD PTR [ebp+0x8]
   1bc2a:	shr    ebx,0x8
   1bc2d:	not    ebx
   1bc2f:	and    ebx,0x2
   1bc32:	or     ebx,0x9
   1bc35:	mov    DWORD PTR [esi+0x18],eax
   1bc38:	mov    DWORD PTR [ecx+0x30],eax
   1bc3b:	mov    DWORD PTR [esi],ebx
   1bc3d:	xor    ebx,ebx
   1bc3f:	jmp    0x1cb3d
   1bc44:	mov    eax,DWORD PTR [ebp+0x8]
   1bc47:	mov    DWORD PTR [eax+0x18],0x1edc0
   1bc4e:	mov    DWORD PTR [esi],0x1b
   1bc54:	nop
   1bc55:	jmp    0x1cb3d
   1bc5a:	cmp    edi,0x10
   1bc5d:	jae    0x1bc86
   1bc5f:	cmp    DWORD PTR [ebp-0x8],0x0
   1bc63:	je     0x1cb8b
   1bc69:	mov    eax,DWORD PTR [ebp-0x4]
   1bc6c:	movzx  eax,BYTE PTR [eax]
   1bc6f:	dec    DWORD PTR [ebp-0x8]
   1bc72:	mov    ecx,edi
   1bc74:	shl    eax,cl
   1bc76:	add    edi,0x8
   1bc79:	add    ebx,eax
   1bc7b:	inc    DWORD PTR [ebp-0x4]
   1bc7e:	cmp    edi,0x10
   1bc81:	jb     0x1bc5f
   1bc83:	mov    edx,DWORD PTR [ebp+0x8]
   1bc86:	mov    DWORD PTR [esi+0x10],ebx
   1bc89:	cmp    bl,0x8
   1bc8c:	je     0x1bc9a
   1bc8e:	mov    DWORD PTR [edx+0x18],0x1edec
   1bc95:	jmp    0x1cb37
   1bc9a:	test   ebx,0xe000
   1bca0:	je     0x1bcae
   1bca2:	mov    DWORD PTR [edx+0x18],0x1eda6
   1bca9:	jmp    0x1cb37
   1bcae:	mov    eax,DWORD PTR [esi+0x20]
   1bcb1:	test   eax,eax
   1bcb3:	je     0x1bcbf
   1bcb5:	mov    ecx,ebx
   1bcb7:	shr    ecx,0x8
   1bcba:	and    ecx,0x1
   1bcbd:	mov    DWORD PTR [eax],ecx
   1bcbf:	test   DWORD PTR [esi+0x10],0x200
   1bcc6:	je     0x1bce5
   1bcc8:	mov    BYTE PTR [ebp-0x10],bl
   1bccb:	push   0x2
   1bccd:	lea    eax,[ebp-0x10]
   1bcd0:	shr    ebx,0x8
   1bcd3:	push   eax
   1bcd4:	mov    BYTE PTR [ebp-0xf],bl
   1bcd7:	push   DWORD PTR [esi+0x18]
   1bcda:	call   0x1d9ee
   1bcdf:	mov    edx,DWORD PTR [ebp+0x8]
   1bce2:	mov    DWORD PTR [esi+0x18],eax
   1bce5:	nop
   1bce6:	xor    ebx,ebx
   1bce8:	xor    edi,edi
   1bcea:	mov    DWORD PTR [esi],0x2
   1bcf0:	cmp    edi,0x20
   1bcf3:	jae    0x1bd1c
   1bcf5:	cmp    DWORD PTR [ebp-0x8],0x0
   1bcf9:	je     0x1cb8b
   1bcff:	mov    eax,DWORD PTR [ebp-0x4]
   1bd02:	movzx  eax,BYTE PTR [eax]
   1bd05:	dec    DWORD PTR [ebp-0x8]
   1bd08:	mov    ecx,edi
   1bd0a:	shl    eax,cl
   1bd0c:	add    edi,0x8
   1bd0f:	add    ebx,eax
   1bd11:	inc    DWORD PTR [ebp-0x4]
   1bd14:	cmp    edi,0x20
   1bd17:	jb     0x1bcf5
   1bd19:	mov    edx,DWORD PTR [ebp+0x8]
   1bd1c:	mov    eax,DWORD PTR [esi+0x20]
   1bd1f:	test   eax,eax
   1bd21:	je     0x1bd26
   1bd23:	mov    DWORD PTR [eax+0x4],ebx
   1bd26:	test   DWORD PTR [esi+0x10],0x200
   1bd2d:	je     0x1bd5c
   1bd2f:	mov    eax,ebx
   1bd31:	shr    eax,0x8
   1bd34:	mov    BYTE PTR [ebp-0xf],al
   1bd37:	mov    eax,ebx
   1bd39:	shr    eax,0x10
   1bd3c:	mov    BYTE PTR [ebp-0xe],al
   1bd3f:	mov    BYTE PTR [ebp-0x10],bl
   1bd42:	push   0x4
   1bd44:	lea    eax,[ebp-0x10]
   1bd47:	shr    ebx,0x18
   1bd4a:	push   eax
   1bd4b:	mov    BYTE PTR [ebp-0xd],bl
   1bd4e:	push   DWORD PTR [esi+0x18]
   1bd51:	call   0x1d9ee
   1bd56:	mov    edx,DWORD PTR [ebp+0x8]
   1bd59:	mov    DWORD PTR [esi+0x18],eax
   1bd5c:	xor    ebx,ebx
   1bd5e:	xor    edi,edi
   1bd60:	mov    DWORD PTR [esi],0x3
   1bd66:	cmp    edi,0x10
   1bd69:	jae    0x1bd92
   1bd6b:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd6f:	je     0x1cb8b
   1bd75:	mov    eax,DWORD PTR [ebp-0x4]
   1bd78:	movzx  eax,BYTE PTR [eax]
   1bd7b:	dec    DWORD PTR [ebp-0x8]
   1bd7e:	mov    ecx,edi
   1bd80:	shl    eax,cl
   1bd82:	add    edi,0x8
   1bd85:	add    ebx,eax
   1bd87:	inc    DWORD PTR [ebp-0x4]
   1bd8a:	cmp    edi,0x10
   1bd8d:	jb     0x1bd6b
   1bd8f:	mov    edx,DWORD PTR [ebp+0x8]
   1bd92:	mov    eax,DWORD PTR [esi+0x20]
   1bd95:	test   eax,eax
   1bd97:	je     0x1bdaf
   1bd99:	mov    ecx,ebx
   1bd9b:	and    ecx,0xff
   1bda1:	mov    DWORD PTR [eax+0x8],ecx
   1bda4:	mov    ecx,DWORD PTR [esi+0x20]
   1bda7:	mov    eax,ebx
   1bda9:	shr    eax,0x8
   1bdac:	mov    DWORD PTR [ecx+0xc],eax
   1bdaf:	test   DWORD PTR [esi+0x10],0x200
   1bdb6:	je     0x1bdd5
   1bdb8:	mov    BYTE PTR [ebp-0x10],bl
   1bdbb:	push   0x2
   1bdbd:	lea    eax,[ebp-0x10]
   1bdc0:	shr    ebx,0x8
   1bdc3:	push   eax
   1bdc4:	mov    BYTE PTR [ebp-0xf],bl
   1bdc7:	push   DWORD PTR [esi+0x18]
   1bdca:	call   0x1d9ee
   1bdcf:	mov    edx,DWORD PTR [ebp+0x8]
   1bdd2:	mov    DWORD PTR [esi+0x18],eax
   1bdd5:	xor    ebx,ebx
   1bdd7:	xor    edi,edi
   1bdd9:	mov    DWORD PTR [esi],0x4
   1bddf:	test   DWORD PTR [esi+0x10],0x400
   1bde6:	je     0x1be4d
   1bde8:	cmp    edi,0x10
   1bdeb:	jae    0x1be14
   1bded:	cmp    DWORD PTR [ebp-0x8],0x0
   1bdf1:	je     0x1cb8b
   1bdf7:	mov    eax,DWORD PTR [ebp-0x4]
   1bdfa:	movzx  eax,BYTE PTR [eax]
   1bdfd:	dec    DWORD PTR [ebp-0x8]
   1be00:	mov    ecx,edi
   1be02:	shl    eax,cl
   1be04:	add    edi,0x8
   1be07:	add    ebx,eax
   1be09:	inc    DWORD PTR [ebp-0x4]
   1be0c:	cmp    edi,0x10
   1be0f:	jb     0x1bded
   1be11:	mov    edx,DWORD PTR [ebp+0x8]
   1be14:	mov    eax,DWORD PTR [esi+0x20]
   1be17:	mov    DWORD PTR [esi+0x40],ebx
   1be1a:	test   eax,eax
   1be1c:	je     0x1be21
   1be1e:	mov    DWORD PTR [eax+0x14],ebx
   1be21:	test   DWORD PTR [esi+0x10],0x200
   1be28:	je     0x1be47
   1be2a:	mov    BYTE PTR [ebp-0x10],bl
   1be2d:	push   0x2
   1be2f:	lea    eax,[ebp-0x10]
   1be32:	shr    ebx,0x8
   1be35:	push   eax
   1be36:	mov    BYTE PTR [ebp-0xf],bl
   1be39:	push   DWORD PTR [esi+0x18]
   1be3c:	call   0x1d9ee
   1be41:	mov    edx,DWORD PTR [ebp+0x8]
   1be44:	mov    DWORD PTR [esi+0x18],eax
   1be47:	xor    ebx,ebx
   1be49:	xor    edi,edi
   1be4b:	jmp    0x1be58
   1be4d:	mov    eax,DWORD PTR [esi+0x20]
   1be50:	test   eax,eax
   1be52:	je     0x1be58
   1be54:	and    DWORD PTR [eax+0x10],0x0
   1be58:	mov    DWORD PTR [esi],0x5
   1be5e:	test   DWORD PTR [esi+0x10],0x400
   1be65:	je     0x1beef
   1be6b:	mov    edx,DWORD PTR [esi+0x40]
   1be6e:	mov    eax,DWORD PTR [ebp-0x8]
   1be71:	mov    DWORD PTR [ebp-0xc],edx
   1be74:	cmp    edx,eax
   1be76:	jbe    0x1be7b
   1be78:	mov    DWORD PTR [ebp-0xc],eax
   1be7b:	cmp    DWORD PTR [ebp-0xc],0x0
   1be7f:	je     0x1bee2
   1be81:	mov    ecx,DWORD PTR [esi+0x20]
   1be84:	test   ecx,ecx
   1be86:	je     0x1bebc
   1be88:	mov    eax,DWORD PTR [ecx+0x10]
   1be8b:	mov    DWORD PTR [ebp-0x28],eax
   1be8e:	test   eax,eax
   1be90:	je     0x1bebc
   1be92:	mov    eax,DWORD PTR [ecx+0x14]
   1be95:	mov    ecx,DWORD PTR [ecx+0x18]
   1be98:	sub    eax,edx
   1be9a:	mov    edx,DWORD PTR [ebp-0xc]
   1be9d:	add    edx,eax
   1be9f:	cmp    edx,ecx
   1bea1:	jbe    0x1bea7
   1bea3:	sub    ecx,eax
   1bea5:	jmp    0x1beaa
   1bea7:	mov    ecx,DWORD PTR [ebp-0xc]
   1beaa:	push   ecx
   1beab:	mov    ecx,DWORD PTR [ebp-0x28]
   1beae:	push   DWORD PTR [ebp-0x4]
   1beb1:	add    ecx,eax
   1beb3:	push   ecx
   1beb4:	call   0x1dac2
   1beb9:	add    esp,0xc
   1bebc:	test   DWORD PTR [esi+0x10],0x200
   1bec3:	je     0x1bed6
   1bec5:	push   DWORD PTR [ebp-0xc]
   1bec8:	push   DWORD PTR [ebp-0x4]
   1becb:	push   DWORD PTR [esi+0x18]
   1bece:	call   0x1d9ee
   1bed3:	mov    DWORD PTR [esi+0x18],eax
   1bed6:	mov    eax,DWORD PTR [ebp-0xc]
   1bed9:	sub    DWORD PTR [ebp-0x8],eax
   1bedc:	add    DWORD PTR [ebp-0x4],eax
   1bedf:	sub    DWORD PTR [esi+0x40],eax
   1bee2:	cmp    DWORD PTR [esi+0x40],0x0
   1bee6:	jne    0x1cb8b
   1beec:	mov    edx,DWORD PTR [ebp+0x8]
   1beef:	and    DWORD PTR [esi+0x40],0x0
   1bef3:	mov    DWORD PTR [esi],0x6
   1bef9:	test   DWORD PTR [esi+0x10],0x800
   1bf00:	je     0x1bf7d
   1bf02:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf06:	je     0x1cb8b
   1bf0c:	xor    ecx,ecx
   1bf0e:	mov    eax,DWORD PTR [ebp-0x4]
   1bf11:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bf15:	inc    ecx
   1bf16:	mov    DWORD PTR [ebp-0xc],ecx
   1bf19:	mov    ecx,DWORD PTR [esi+0x20]
   1bf1c:	mov    DWORD PTR [ebp-0x20],eax
   1bf1f:	test   ecx,ecx
   1bf21:	je     0x1bf3e
   1bf23:	mov    edx,DWORD PTR [ecx+0x1c]
   1bf26:	mov    DWORD PTR [ebp-0x28],edx
   1bf29:	test   edx,edx
   1bf2b:	je     0x1bf3e
   1bf2d:	mov    edx,DWORD PTR [esi+0x40]
   1bf30:	cmp    edx,DWORD PTR [ecx+0x20]
   1bf33:	jae    0x1bf3e
   1bf35:	mov    ecx,DWORD PTR [ebp-0x28]
   1bf38:	mov    BYTE PTR [ecx+edx*1],al
   1bf3b:	inc    DWORD PTR [esi+0x40]
   1bf3e:	test   eax,eax
   1bf40:	je     0x1bf4a
   1bf42:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf45:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bf48:	jb     0x1bf0e
   1bf4a:	test   DWORD PTR [esi+0x10],0x200
   1bf51:	je     0x1bf67
   1bf53:	push   DWORD PTR [ebp-0xc]
   1bf56:	push   DWORD PTR [ebp-0x4]
   1bf59:	push   DWORD PTR [esi+0x18]
   1bf5c:	call   0x1d9ee
   1bf61:	mov    DWORD PTR [esi+0x18],eax
   1bf64:	mov    eax,DWORD PTR [ebp-0x20]
   1bf67:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf6a:	sub    DWORD PTR [ebp-0x8],ecx
   1bf6d:	add    DWORD PTR [ebp-0x4],ecx
   1bf70:	test   eax,eax
   1bf72:	jne    0x1cb8b
   1bf78:	mov    edx,DWORD PTR [ebp+0x8]
   1bf7b:	jmp    0x1bf88
   1bf7d:	mov    eax,DWORD PTR [esi+0x20]
   1bf80:	test   eax,eax
   1bf82:	je     0x1bf88
   1bf84:	and    DWORD PTR [eax+0x1c],0x0
   1bf88:	and    DWORD PTR [esi+0x40],0x0
   1bf8c:	mov    DWORD PTR [esi],0x7
   1bf92:	test   DWORD PTR [esi+0x10],0x1000
   1bf99:	je     0x1c016
   1bf9b:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf9f:	je     0x1cb8b
   1bfa5:	xor    ecx,ecx
   1bfa7:	mov    eax,DWORD PTR [ebp-0x4]
   1bfaa:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bfae:	inc    ecx
   1bfaf:	mov    DWORD PTR [ebp-0xc],ecx
   1bfb2:	mov    ecx,DWORD PTR [esi+0x20]
   1bfb5:	mov    DWORD PTR [ebp-0x20],eax
   1bfb8:	test   ecx,ecx
   1bfba:	je     0x1bfd7
   1bfbc:	mov    edx,DWORD PTR [ecx+0x24]
   1bfbf:	mov    DWORD PTR [ebp-0x28],edx
   1bfc2:	test   edx,edx
   1bfc4:	je     0x1bfd7
   1bfc6:	mov    edx,DWORD PTR [esi+0x40]
   1bfc9:	cmp    edx,DWORD PTR [ecx+0x28]
   1bfcc:	jae    0x1bfd7
   1bfce:	mov    ecx,DWORD PTR [ebp-0x28]
   1bfd1:	mov    BYTE PTR [ecx+edx*1],al
   1bfd4:	inc    DWORD PTR [esi+0x40]
   1bfd7:	test   eax,eax
   1bfd9:	je     0x1bfe3
   1bfdb:	mov    ecx,DWORD PTR [ebp-0xc]
   1bfde:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bfe1:	jb     0x1bfa7
   1bfe3:	test   DWORD PTR [esi+0x10],0x200
   1bfea:	je     0x1c000
   1bfec:	push   DWORD PTR [ebp-0xc]
   1bfef:	push   DWORD PTR [ebp-0x4]
   1bff2:	push   DWORD PTR [esi+0x18]
   1bff5:	call   0x1d9ee
   1bffa:	mov    DWORD PTR [esi+0x18],eax
   1bffd:	mov    eax,DWORD PTR [ebp-0x20]
   1c000:	mov    ecx,DWORD PTR [ebp-0xc]
   1c003:	sub    DWORD PTR [ebp-0x8],ecx
   1c006:	add    DWORD PTR [ebp-0x4],ecx
   1c009:	test   eax,eax
   1c00b:	jne    0x1cb8b
   1c011:	mov    edx,DWORD PTR [ebp+0x8]
   1c014:	jmp    0x1c021
   1c016:	mov    eax,DWORD PTR [esi+0x20]
   1c019:	test   eax,eax
   1c01b:	je     0x1c021
   1c01d:	and    DWORD PTR [eax+0x24],0x0
   1c021:	mov    DWORD PTR [esi],0x8
   1c027:	test   DWORD PTR [esi+0x10],0x200
   1c02e:	je     0x1c074
   1c030:	cmp    edi,0x10
   1c033:	jae    0x1c05c
   1c035:	cmp    DWORD PTR [ebp-0x8],0x0
   1c039:	je     0x1cb8b
   1c03f:	mov    eax,DWORD PTR [ebp-0x4]
   1c042:	movzx  eax,BYTE PTR [eax]
   1c045:	dec    DWORD PTR [ebp-0x8]
   1c048:	mov    ecx,edi
   1c04a:	shl    eax,cl
   1c04c:	add    edi,0x8
   1c04f:	add    ebx,eax
   1c051:	inc    DWORD PTR [ebp-0x4]
   1c054:	cmp    edi,0x10
   1c057:	jb     0x1c035
   1c059:	mov    edx,DWORD PTR [ebp+0x8]
   1c05c:	movzx  eax,WORD PTR [esi+0x18]
   1c060:	cmp    ebx,eax
   1c062:	je     0x1c070
   1c064:	mov    DWORD PTR [edx+0x18],0x1ed92
   1c06b:	jmp    0x1cb37
   1c070:	xor    ebx,ebx
   1c072:	xor    edi,edi
   1c074:	mov    eax,DWORD PTR [esi+0x20]
   1c077:	test   eax,eax
   1c079:	je     0x1c08f
   1c07b:	mov    edx,DWORD PTR [esi+0x10]
   1c07e:	xor    ecx,ecx
   1c080:	inc    ecx
   1c081:	sar    edx,0x9
   1c084:	and    edx,ecx
   1c086:	mov    DWORD PTR [eax+0x2c],edx
   1c089:	mov    eax,DWORD PTR [esi+0x20]
   1c08c:	mov    DWORD PTR [eax+0x30],ecx
   1c08f:	xor    eax,eax
   1c091:	push   eax
   1c092:	push   eax
   1c093:	push   eax
   1c094:	call   0x1d9ee
   1c099:	mov    ecx,DWORD PTR [ebp+0x8]
   1c09c:	mov    DWORD PTR [esi+0x18],eax
   1c09f:	mov    DWORD PTR [ecx+0x30],eax
   1c0a2:	jmp    0x1c7a0
   1c0a7:	cmp    edi,0x20
   1c0aa:	jae    0x1c0d3
   1c0ac:	cmp    DWORD PTR [ebp-0x8],0x0
   1c0b0:	je     0x1cb8b
   1c0b6:	mov    eax,DWORD PTR [ebp-0x4]
   1c0b9:	movzx  eax,BYTE PTR [eax]
   1c0bc:	dec    DWORD PTR [ebp-0x8]
   1c0bf:	mov    ecx,edi
   1c0c1:	shl    eax,cl
   1c0c3:	add    edi,0x8
   1c0c6:	add    ebx,eax
   1c0c8:	inc    DWORD PTR [ebp-0x4]
   1c0cb:	cmp    edi,0x20
   1c0ce:	jb     0x1c0ac
   1c0d0:	mov    edx,DWORD PTR [ebp+0x8]
   1c0d3:	mov    ecx,ebx
   1c0d5:	mov    eax,0xff00
   1c0da:	and    ecx,eax
   1c0dc:	mov    edi,ebx
   1c0de:	shl    edi,0x10
   1c0e1:	add    ecx,edi
   1c0e3:	mov    edi,ebx
   1c0e5:	shr    edi,0x8
   1c0e8:	and    edi,eax
   1c0ea:	shl    ecx,0x8
   1c0ed:	shr    ebx,0x18
   1c0f0:	add    ecx,edi
   1c0f2:	lea    eax,[ecx+ebx*1]
   1c0f5:	mov    DWORD PTR [esi+0x18],eax
   1c0f8:	mov    DWORD PTR [edx+0x30],eax
   1c0fb:	xor    ebx,ebx
   1c0fd:	xor    edi,edi
   1c0ff:	mov    DWORD PTR [esi],0xa
   1c105:	cmp    DWORD PTR [esi+0xc],0x0
   1c109:	je     0x1cb4d
   1c10f:	xor    eax,eax
   1c111:	push   eax
   1c112:	push   eax
   1c113:	push   eax
   1c114:	call   0x1d54c
   1c119:	mov    ecx,DWORD PTR [ebp+0x8]
   1c11c:	mov    DWORD PTR [esi+0x18],eax
   1c11f:	mov    DWORD PTR [ecx+0x30],eax
   1c122:	mov    DWORD PTR [esi],0xb
   1c128:	cmp    DWORD PTR [ebp+0xc],0x5
   1c12c:	je     0x1cb8b
   1c132:	mov    edx,DWORD PTR [ebp+0x8]
   1c135:	cmp    DWORD PTR [esi+0x4],0x0
   1c139:	je     0x1c14f
   1c13b:	mov    ecx,edi
   1c13d:	and    ecx,0x7
   1c140:	shr    ebx,cl
   1c142:	sub    edi,ecx
   1c144:	mov    DWORD PTR [esi],0x18
   1c14a:	jmp    0x1cb3d
   1c14f:	cmp    edi,0x3
   1c152:	jae    0x1c17b
   1c154:	cmp    DWORD PTR [ebp-0x8],0x0
   1c158:	je     0x1cb8b
   1c15e:	mov    eax,DWORD PTR [ebp-0x4]
   1c161:	movzx  eax,BYTE PTR [eax]
   1c164:	dec    DWORD PTR [ebp-0x8]
   1c167:	mov    ecx,edi
   1c169:	shl    eax,cl
   1c16b:	add    edi,0x8
   1c16e:	add    ebx,eax
   1c170:	inc    DWORD PTR [ebp-0x4]
   1c173:	cmp    edi,0x3
   1c176:	jb     0x1c154
   1c178:	mov    edx,DWORD PTR [ebp+0x8]
   1c17b:	mov    eax,ebx
   1c17d:	and    eax,0x1
   1c180:	shr    ebx,1
   1c182:	mov    DWORD PTR [esi+0x4],eax
   1c185:	mov    eax,ebx
   1c187:	and    eax,0x3
   1c18a:	dec    edi
   1c18b:	sub    eax,0x0
   1c18e:	je     0x1c1d4
   1c190:	dec    eax
   1c191:	je     0x1c1b0
   1c193:	dec    eax
   1c194:	je     0x1c1a8
   1c196:	dec    eax
   1c197:	jne    0x1c1da
   1c199:	mov    DWORD PTR [edx+0x18],0x1ed7e
   1c1a0:	mov    DWORD PTR [esi],0x1b
   1c1a6:	jmp    0x1c1da
   1c1a8:	mov    DWORD PTR [esi],0xf
   1c1ae:	jmp    0x1c1da
   1c1b0:	mov    DWORD PTR [esi+0x4c],0x7b398
   1c1b7:	mov    DWORD PTR [esi+0x54],0x9
   1c1be:	mov    DWORD PTR [esi+0x50],0x7bb98
   1c1c5:	mov    DWORD PTR [esi+0x58],0x5
   1c1cc:	mov    DWORD PTR [esi],0x12
   1c1d2:	jmp    0x1c1da
   1c1d4:	mov    DWORD PTR [esi],0xd
   1c1da:	shr    ebx,0x2
   1c1dd:	dec    edi
   1c1de:	dec    edi
   1c1df:	jmp    0x1cb3d
   1c1e4:	mov    ecx,edi
   1c1e6:	and    ecx,0x7
   1c1e9:	sub    edi,ecx
   1c1eb:	shr    ebx,cl
   1c1ed:	cmp    edi,0x20
   1c1f0:	jae    0x1c219
   1c1f2:	cmp    DWORD PTR [ebp-0x8],0x0
   1c1f6:	je     0x1cb8b
   1c1fc:	mov    eax,DWORD PTR [ebp-0x4]
   1c1ff:	movzx  eax,BYTE PTR [eax]
   1c202:	dec    DWORD PTR [ebp-0x8]
   1c205:	mov    ecx,edi
   1c207:	shl    eax,cl
   1c209:	add    edi,0x8
   1c20c:	add    ebx,eax
   1c20e:	inc    DWORD PTR [ebp-0x4]
   1c211:	cmp    edi,0x20
   1c214:	jb     0x1c1f2
   1c216:	mov    edx,DWORD PTR [ebp+0x8]
   1c219:	mov    ecx,ebx
   1c21b:	mov    eax,ebx
   1c21d:	not    ecx
   1c21f:	and    eax,0xffff
   1c224:	shr    ecx,0x10
   1c227:	cmp    eax,ecx
   1c229:	je     0x1c237
   1c22b:	mov    DWORD PTR [edx+0x18],0x1de7a
   1c232:	jmp    0x1cb37
   1c237:	xor    ebx,ebx
   1c239:	mov    DWORD PTR [esi+0x40],eax
   1c23c:	xor    edi,edi
   1c23e:	mov    DWORD PTR [esi],0xe
   1c244:	mov    eax,DWORD PTR [esi+0x40]
   1c247:	mov    DWORD PTR [ebp-0xc],eax
   1c24a:	test   eax,eax
   1c24c:	je     0x1c7a0
   1c252:	mov    eax,DWORD PTR [ebp-0x8]
   1c255:	cmp    DWORD PTR [ebp-0xc],eax
   1c258:	jbe    0x1c25d
   1c25a:	mov    DWORD PTR [ebp-0xc],eax
   1c25d:	mov    eax,DWORD PTR [ebp-0x14]
   1c260:	cmp    DWORD PTR [ebp-0xc],eax
   1c263:	jbe    0x1c268
   1c265:	mov    DWORD PTR [ebp-0xc],eax
   1c268:	cmp    DWORD PTR [ebp-0xc],0x0
   1c26c:	je     0x1cb8b
   1c272:	push   DWORD PTR [ebp-0xc]
   1c275:	push   DWORD PTR [ebp-0x4]
   1c278:	push   DWORD PTR [ebp-0x18]
   1c27b:	call   0x1dac2
   1c280:	mov    eax,DWORD PTR [ebp-0xc]
   1c283:	sub    DWORD PTR [ebp-0x8],eax
   1c286:	add    DWORD PTR [ebp-0x4],eax
   1c289:	sub    DWORD PTR [ebp-0x14],eax
   1c28c:	add    DWORD PTR [ebp-0x18],eax
   1c28f:	add    esp,0xc
   1c292:	sub    DWORD PTR [esi+0x40],eax
   1c295:	jmp    0x1cb3d
   1c29a:	cmp    edi,0xe
   1c29d:	jae    0x1c2c6
   1c29f:	cmp    DWORD PTR [ebp-0x8],0x0
   1c2a3:	je     0x1cb8b
   1c2a9:	mov    eax,DWORD PTR [ebp-0x4]
   1c2ac:	movzx  eax,BYTE PTR [eax]
   1c2af:	dec    DWORD PTR [ebp-0x8]
   1c2b2:	mov    ecx,edi
   1c2b4:	shl    eax,cl
   1c2b6:	add    edi,0x8
   1c2b9:	add    ebx,eax
   1c2bb:	inc    DWORD PTR [ebp-0x4]
   1c2be:	cmp    edi,0xe
   1c2c1:	jb     0x1c29f
   1c2c3:	mov    edx,DWORD PTR [ebp+0x8]
   1c2c6:	mov    eax,ebx
   1c2c8:	and    eax,0x1f
   1c2cb:	add    eax,0x101
   1c2d0:	mov    DWORD PTR [esi+0x60],eax
   1c2d3:	shr    ebx,0x5
   1c2d6:	mov    eax,ebx
   1c2d8:	and    eax,0x1f
   1c2db:	inc    eax
   1c2dc:	shr    ebx,0x5
   1c2df:	mov    DWORD PTR [esi+0x64],eax
   1c2e2:	mov    eax,ebx
   1c2e4:	and    eax,0xf
   1c2e7:	add    eax,0x4
   1c2ea:	shr    ebx,0x4
   1c2ed:	sub    edi,0xe
   1c2f0:	cmp    DWORD PTR [esi+0x60],0x11e
   1c2f7:	mov    DWORD PTR [esi+0x5c],eax
   1c2fa:	ja     0x1c30e
   1c2fc:	cmp    DWORD PTR [esi+0x64],0x1e
   1c300:	ja     0x1c30e
   1c302:	and    DWORD PTR [esi+0x68],0x0
   1c306:	mov    DWORD PTR [esi],0x10
   1c30c:	jmp    0x1c35c
   1c30e:	mov    DWORD PTR [edx+0x18],0x1ed5a
   1c315:	jmp    0x1cb37
   1c31a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c31e:	je     0x1cb8b
   1c324:	mov    eax,DWORD PTR [ebp-0x4]
   1c327:	movzx  eax,BYTE PTR [eax]
   1c32a:	dec    DWORD PTR [ebp-0x8]
   1c32d:	mov    ecx,edi
   1c32f:	shl    eax,cl
   1c331:	add    ebx,eax
   1c333:	inc    DWORD PTR [ebp-0x4]
   1c336:	add    edi,0x8
   1c339:	cmp    edi,0x3
   1c33c:	jb     0x1c31a
   1c33e:	mov    ecx,DWORD PTR [esi+0x68]
   1c341:	movzx  ecx,WORD PTR [ecx*2+0x7bc18]
   1c349:	mov    eax,ebx
   1c34b:	and    eax,0x7
   1c34e:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1c353:	inc    DWORD PTR [esi+0x68]
   1c356:	shr    ebx,0x3
   1c359:	sub    edi,0x3
   1c35c:	mov    eax,DWORD PTR [esi+0x68]
   1c35f:	cmp    eax,DWORD PTR [esi+0x5c]
   1c362:	jb     0x1c339
   1c364:	jmp    0x1c37b
   1c366:	mov    eax,DWORD PTR [esi+0x68]
   1c369:	movzx  eax,WORD PTR [eax*2+0x7bc18]
   1c371:	xor    ecx,ecx
   1c373:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c378:	inc    DWORD PTR [esi+0x68]
   1c37b:	cmp    DWORD PTR [esi+0x68],0x13
   1c37f:	jb     0x1c366
   1c381:	lea    eax,[esi+0x530]
   1c387:	lea    ecx,[esi+0x6c]
   1c38a:	mov    DWORD PTR [ecx],eax
   1c38c:	mov    DWORD PTR [esi+0x4c],eax
   1c38f:	lea    edx,[esi+0x2f0]
   1c395:	push   edx
   1c396:	lea    eax,[esi+0x54]
   1c399:	push   eax
   1c39a:	push   ecx
   1c39b:	mov    DWORD PTR [eax],0x7
   1c3a1:	push   0x13
   1c3a3:	lea    eax,[esi+0x70]
   1c3a6:	push   eax
   1c3a7:	push   0x0
   1c3a9:	call   0x1d146
   1c3ae:	mov    DWORD PTR [ebp-0x24],eax
   1c3b1:	test   eax,eax
   1c3b3:	je     0x1c3c4
   1c3b5:	mov    eax,DWORD PTR [ebp+0x8]
   1c3b8:	mov    DWORD PTR [eax+0x18],0x1ed40
   1c3bf:	jmp    0x1cb37
   1c3c4:	and    DWORD PTR [esi+0x68],0x0
   1c3c8:	mov    DWORD PTR [esi],0x11
   1c3ce:	jmp    0x1c5ca
   1c3d3:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3d7:	je     0x1cb8b
   1c3dd:	mov    eax,DWORD PTR [ebp-0x4]
   1c3e0:	movzx  eax,BYTE PTR [eax]
   1c3e3:	dec    DWORD PTR [ebp-0x8]
   1c3e6:	mov    ecx,edi
   1c3e8:	shl    eax,cl
   1c3ea:	add    ebx,eax
   1c3ec:	inc    DWORD PTR [ebp-0x4]
   1c3ef:	add    edi,0x8
   1c3f2:	mov    ecx,DWORD PTR [esi+0x54]
   1c3f5:	xor    eax,eax
   1c3f7:	inc    eax
   1c3f8:	shl    eax,cl
   1c3fa:	mov    ecx,DWORD PTR [esi+0x4c]
   1c3fd:	dec    eax
   1c3fe:	and    eax,ebx
   1c400:	mov    eax,DWORD PTR [ecx+eax*4]
   1c403:	mov    ecx,eax
   1c405:	shr    ecx,0x8
   1c408:	movzx  ecx,cl
   1c40b:	mov    DWORD PTR [ebp-0x20],eax
   1c40e:	cmp    ecx,edi
   1c410:	ja     0x1c3d3
   1c412:	mov    ecx,eax
   1c414:	shr    ecx,0x10
   1c417:	cmp    cx,0x10
   1c41b:	jae    0x1c468
   1c41d:	mov    ecx,eax
   1c41f:	shr    ecx,0x8
   1c422:	movzx  ecx,cl
   1c425:	jmp    0x1c449
   1c427:	cmp    DWORD PTR [ebp-0x8],0x0
   1c42b:	je     0x1cb8b
   1c431:	mov    ecx,DWORD PTR [ebp-0x4]
   1c434:	movzx  edx,BYTE PTR [ecx]
   1c437:	dec    DWORD PTR [ebp-0x8]
   1c43a:	mov    ecx,edi
   1c43c:	shl    edx,cl
   1c43e:	movzx  ecx,ah
   1c441:	add    ebx,edx
   1c443:	inc    DWORD PTR [ebp-0x4]
   1c446:	add    edi,0x8
   1c449:	cmp    edi,ecx
   1c44b:	jb     0x1c427
   1c44d:	movzx  ecx,ah
   1c450:	mov    eax,DWORD PTR [esi+0x68]
   1c453:	shr    ebx,cl
   1c455:	sub    edi,ecx
   1c457:	mov    cx,WORD PTR [ebp-0x1e]
   1c45b:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c460:	inc    DWORD PTR [esi+0x68]
   1c463:	jmp    0x1c5ca
   1c468:	cmp    WORD PTR [ebp-0x1e],0x10
   1c46d:	jne    0x1c4c5
   1c46f:	movzx  eax,ah
   1c472:	jmp    0x1c493
   1c474:	cmp    DWORD PTR [ebp-0x8],0x0
   1c478:	je     0x1cb8b
   1c47e:	mov    ecx,DWORD PTR [ebp-0x4]
   1c481:	movzx  edx,BYTE PTR [ecx]
   1c484:	dec    DWORD PTR [ebp-0x8]
   1c487:	mov    ecx,edi
   1c489:	shl    edx,cl
   1c48b:	add    ebx,edx
   1c48d:	inc    DWORD PTR [ebp-0x4]
   1c490:	add    edi,0x8
   1c493:	lea    ecx,[eax+0x2]
   1c496:	cmp    edi,ecx
   1c498:	jb     0x1c474
   1c49a:	mov    ecx,eax
   1c49c:	sub    edi,eax
   1c49e:	mov    eax,DWORD PTR [esi+0x68]
   1c4a1:	shr    ebx,cl
   1c4a3:	test   eax,eax
   1c4a5:	je     0x1c5db
   1c4ab:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1c4b0:	mov    DWORD PTR [ebp-0x20],eax
   1c4b3:	mov    eax,ebx
   1c4b5:	and    eax,0x3
   1c4b8:	add    eax,0x3
   1c4bb:	shr    ebx,0x2
   1c4be:	dec    edi
   1c4bf:	dec    edi
   1c4c0:	jmp    0x1c54a
   1c4c5:	cmp    WORD PTR [ebp-0x1e],0x11
   1c4ca:	movzx  edx,ah
   1c4cd:	jne    0x1c529
   1c4cf:	jmp    0x1c4f0
   1c4d1:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4d5:	je     0x1cb8b
   1c4db:	mov    eax,DWORD PTR [ebp-0x4]
   1c4de:	movzx  eax,BYTE PTR [eax]
   1c4e1:	dec    DWORD PTR [ebp-0x8]
   1c4e4:	mov    ecx,edi
   1c4e6:	shl    eax,cl
   1c4e8:	add    ebx,eax
   1c4ea:	inc    DWORD PTR [ebp-0x4]
   1c4ed:	add    edi,0x8
   1c4f0:	lea    eax,[edx+0x3]
   1c4f3:	cmp    edi,eax
   1c4f5:	jb     0x1c4d1
   1c4f7:	mov    ecx,edx
   1c4f9:	shr    ebx,cl
   1c4fb:	push   0xfffffffd
   1c4fd:	mov    eax,ebx
   1c4ff:	and    eax,0x7
   1c502:	add    eax,0x3
   1c505:	shr    ebx,0x3
   1c508:	jmp    0x1c541
   1c50a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c50e:	je     0x1cb8b
   1c514:	mov    eax,DWORD PTR [ebp-0x4]
   1c517:	movzx  eax,BYTE PTR [eax]
   1c51a:	dec    DWORD PTR [ebp-0x8]
   1c51d:	mov    ecx,edi
   1c51f:	shl    eax,cl
   1c521:	add    ebx,eax
   1c523:	inc    DWORD PTR [ebp-0x4]
   1c526:	add    edi,0x8
   1c529:	lea    eax,[edx+0x7]
   1c52c:	cmp    edi,eax
   1c52e:	jb     0x1c50a
   1c530:	mov    ecx,edx
   1c532:	shr    ebx,cl
   1c534:	push   0xfffffff9
   1c536:	mov    eax,ebx
   1c538:	and    eax,0x7f
   1c53b:	add    eax,0xb
   1c53e:	shr    ebx,0x7
   1c541:	and    DWORD PTR [ebp-0x20],0x0
   1c545:	pop    ecx
   1c546:	sub    ecx,edx
   1c548:	add    edi,ecx
   1c54a:	mov    ecx,DWORD PTR [esi+0x64]
   1c54d:	mov    edx,DWORD PTR [esi+0x68]
   1c550:	add    ecx,DWORD PTR [esi+0x60]
   1c553:	add    edx,eax
   1c555:	cmp    edx,ecx
   1c557:	jbe    0x1c5c6
   1c559:	mov    eax,DWORD PTR [ebp+0x8]
   1c55c:	mov    DWORD PTR [eax+0x18],0x1ed26
   1c563:	mov    DWORD PTR [esi],0x1b
   1c569:	cmp    DWORD PTR [esi],0x1b
   1c56c:	je     0x1cb3d
   1c572:	lea    eax,[esi+0x530]
   1c578:	lea    ecx,[esi+0x6c]
   1c57b:	mov    DWORD PTR [ecx],eax
   1c57d:	mov    DWORD PTR [esi+0x4c],eax
   1c580:	lea    edx,[esi+0x2f0]
   1c586:	push   edx
   1c587:	lea    eax,[esi+0x54]
   1c58a:	push   eax
   1c58b:	push   ecx
   1c58c:	push   DWORD PTR [esi+0x60]
   1c58f:	mov    DWORD PTR [eax],0x9
   1c595:	lea    eax,[esi+0x70]
   1c598:	push   eax
   1c599:	push   0x1
   1c59b:	call   0x1d146
   1c5a0:	mov    DWORD PTR [ebp-0x24],eax
   1c5a3:	test   eax,eax
   1c5a5:	je     0x1c5ea
   1c5a7:	mov    eax,DWORD PTR [ebp+0x8]
   1c5aa:	mov    DWORD PTR [eax+0x18],0x1ed0a
   1c5b1:	jmp    0x1cb37
   1c5b6:	mov    ecx,DWORD PTR [esi+0x68]
   1c5b9:	mov    dx,WORD PTR [ebp-0x20]
   1c5bd:	dec    eax
   1c5be:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1c5c3:	inc    DWORD PTR [esi+0x68]
   1c5c6:	test   eax,eax
   1c5c8:	jne    0x1c5b6
   1c5ca:	mov    eax,DWORD PTR [esi+0x64]
   1c5cd:	add    eax,DWORD PTR [esi+0x60]
   1c5d0:	cmp    DWORD PTR [esi+0x68],eax
   1c5d3:	jb     0x1c3f2
   1c5d9:	jmp    0x1c569
   1c5db:	mov    eax,DWORD PTR [ebp+0x8]
   1c5de:	mov    DWORD PTR [eax+0x18],0x1ed26
   1c5e5:	jmp    0x1cb37
   1c5ea:	lea    ecx,[esi+0x6c]
   1c5ed:	mov    eax,DWORD PTR [ecx]
   1c5ef:	mov    DWORD PTR [esi+0x50],eax
   1c5f2:	lea    edx,[esi+0x2f0]
   1c5f8:	push   edx
   1c5f9:	lea    eax,[esi+0x58]
   1c5fc:	push   eax
   1c5fd:	push   ecx
   1c5fe:	push   DWORD PTR [esi+0x64]
   1c601:	mov    DWORD PTR [eax],0x6
   1c607:	mov    eax,DWORD PTR [esi+0x60]
   1c60a:	lea    eax,[esi+eax*2+0x70]
   1c60e:	push   eax
   1c60f:	push   0x2
   1c611:	call   0x1d146
   1c616:	mov    DWORD PTR [ebp-0x24],eax
   1c619:	test   eax,eax
   1c61b:	je     0x1c62c
   1c61d:	mov    eax,DWORD PTR [ebp+0x8]
   1c620:	mov    DWORD PTR [eax+0x18],0x1ecf4
   1c627:	jmp    0x1cb37
   1c62c:	mov    DWORD PTR [esi],0x12
   1c632:	cmp    DWORD PTR [ebp-0x8],0x6
   1c636:	jb     0x1c68f
   1c638:	cmp    DWORD PTR [ebp-0x14],0x102
   1c63f:	jb     0x1c68f
   1c641:	mov    eax,DWORD PTR [ebp+0x8]
   1c644:	mov    ecx,DWORD PTR [ebp-0x18]
   1c647:	push   DWORD PTR [ebp-0x1c]
   1c64a:	mov    DWORD PTR [eax+0xc],ecx
   1c64d:	mov    ecx,DWORD PTR [ebp-0x14]
   1c650:	mov    DWORD PTR [eax+0x10],ecx
   1c653:	mov    ecx,DWORD PTR [ebp-0x4]
   1c656:	mov    DWORD PTR [eax],ecx
   1c658:	mov    ecx,DWORD PTR [ebp-0x8]
   1c65b:	mov    DWORD PTR [eax+0x4],ecx
   1c65e:	push   eax
   1c65f:	mov    DWORD PTR [esi+0x38],ebx
   1c662:	mov    DWORD PTR [esi+0x3c],edi
   1c665:	call   0x1cd60
   1c66a:	mov    eax,DWORD PTR [ebp+0x8]
   1c66d:	mov    ecx,DWORD PTR [eax+0xc]
   1c670:	mov    ebx,DWORD PTR [esi+0x38]
   1c673:	mov    edi,DWORD PTR [esi+0x3c]
   1c676:	mov    DWORD PTR [ebp-0x18],ecx
   1c679:	mov    ecx,DWORD PTR [eax+0x10]
   1c67c:	mov    DWORD PTR [ebp-0x14],ecx
   1c67f:	mov    ecx,DWORD PTR [eax]
   1c681:	mov    eax,DWORD PTR [eax+0x4]
   1c684:	mov    DWORD PTR [ebp-0x4],ecx
   1c687:	mov    DWORD PTR [ebp-0x8],eax
   1c68a:	jmp    0x1cb3d
   1c68f:	mov    ecx,DWORD PTR [esi+0x54]
   1c692:	mov    eax,DWORD PTR [esi+0x4c]
   1c695:	xor    edx,edx
   1c697:	inc    edx
   1c698:	shl    edx,cl
   1c69a:	dec    edx
   1c69b:	and    edx,ebx
   1c69d:	mov    eax,DWORD PTR [eax+edx*4]
   1c6a0:	jmp    0x1c6d2
   1c6a2:	cmp    DWORD PTR [ebp-0x8],0x0
   1c6a6:	je     0x1cb8b
   1c6ac:	mov    eax,DWORD PTR [ebp-0x4]
   1c6af:	movzx  eax,BYTE PTR [eax]
   1c6b2:	dec    DWORD PTR [ebp-0x8]
   1c6b5:	mov    ecx,edi
   1c6b7:	shl    eax,cl
   1c6b9:	mov    ecx,DWORD PTR [esi+0x54]
   1c6bc:	add    edi,0x8
   1c6bf:	add    ebx,eax
   1c6c1:	inc    DWORD PTR [ebp-0x4]
   1c6c4:	xor    eax,eax
   1c6c6:	inc    eax
   1c6c7:	shl    eax,cl
   1c6c9:	mov    ecx,DWORD PTR [esi+0x4c]
   1c6cc:	dec    eax
   1c6cd:	and    eax,ebx
   1c6cf:	mov    eax,DWORD PTR [ecx+eax*4]
   1c6d2:	mov    ecx,eax
   1c6d4:	shr    ecx,0x8
   1c6d7:	movzx  ecx,cl
   1c6da:	cmp    ecx,edi
   1c6dc:	ja     0x1c6a2
   1c6de:	test   al,al
   1c6e0:	je     0x1c779
   1c6e6:	test   al,0xf0
   1c6e8:	jne    0x1c779
   1c6ee:	mov    DWORD PTR [ebp-0xc],eax
   1c6f1:	shr    DWORD PTR [ebp-0xc],0x8
   1c6f5:	movzx  edx,BYTE PTR [ebp-0xc]
   1c6f9:	mov    DWORD PTR [ebp-0x28],edx
   1c6fc:	movzx  ecx,al
   1c6ff:	add    ecx,edx
   1c701:	xor    edx,edx
   1c703:	inc    edx
   1c704:	shl    edx,cl
   1c706:	mov    ecx,DWORD PTR [ebp-0x28]
   1c709:	mov    DWORD PTR [ebp-0x20],eax
   1c70c:	shr    eax,0x10
   1c70f:	dec    edx
   1c710:	and    edx,ebx
   1c712:	shr    edx,cl
   1c714:	add    edx,eax
   1c716:	mov    eax,DWORD PTR [esi+0x4c]
   1c719:	mov    eax,DWORD PTR [eax+edx*4]
   1c71c:	movzx  edx,BYTE PTR [ebp-0xc]
   1c720:	jmp    0x1c763
   1c722:	cmp    DWORD PTR [ebp-0x8],0x0
   1c726:	je     0x1cb8b
   1c72c:	mov    eax,DWORD PTR [ebp-0x4]
   1c72f:	movzx  eax,BYTE PTR [eax]
   1c732:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c736:	dec    DWORD PTR [ebp-0x8]
   1c739:	mov    ecx,edi
   1c73b:	shl    eax,cl
   1c73d:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c741:	add    ebx,eax
   1c743:	inc    DWORD PTR [ebp-0x4]
   1c746:	xor    eax,eax
   1c748:	add    ecx,edx
   1c74a:	inc    eax
   1c74b:	shl    eax,cl
   1c74d:	add    edi,0x8
   1c750:	mov    ecx,edx
   1c752:	dec    eax
   1c753:	and    eax,ebx
   1c755:	shr    eax,cl
   1c757:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c75b:	add    eax,ecx
   1c75d:	mov    ecx,DWORD PTR [esi+0x4c]
   1c760:	mov    eax,DWORD PTR [ecx+eax*4]
   1c763:	mov    ecx,eax
   1c765:	shr    ecx,0x8
   1c768:	movzx  ecx,cl
   1c76b:	add    ecx,edx
   1c76d:	cmp    ecx,edi
   1c76f:	ja     0x1c722
   1c771:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c775:	shr    ebx,cl
   1c777:	sub    edi,ecx
   1c779:	mov    ecx,eax
   1c77b:	shr    ecx,0x8
   1c77e:	movzx  ecx,cl
   1c781:	shr    ebx,cl
   1c783:	sub    edi,ecx
   1c785:	mov    ecx,eax
   1c787:	shr    ecx,0x10
   1c78a:	mov    DWORD PTR [esi+0x40],ecx
   1c78d:	test   al,al
   1c78f:	jne    0x1c79c
   1c791:	mov    DWORD PTR [esi],0x17
   1c797:	jmp    0x1cb3d
   1c79c:	test   al,0x20
   1c79e:	je     0x1c7ab
   1c7a0:	mov    DWORD PTR [esi],0xb
   1c7a6:	jmp    0x1cb3d
   1c7ab:	test   al,0x40
   1c7ad:	je     0x1c7be
   1c7af:	mov    eax,DWORD PTR [ebp+0x8]
   1c7b2:	mov    DWORD PTR [eax+0x18],0x1ecd8
   1c7b9:	jmp    0x1cb37
   1c7be:	movzx  eax,al
   1c7c1:	and    eax,0xf
   1c7c4:	mov    DWORD PTR [esi+0x48],eax
   1c7c7:	mov    DWORD PTR [esi],0x13
   1c7cd:	mov    eax,DWORD PTR [esi+0x48]
   1c7d0:	test   eax,eax
   1c7d2:	je     0x1c80d
   1c7d4:	cmp    edi,eax
   1c7d6:	jae    0x1c7fc
   1c7d8:	cmp    DWORD PTR [ebp-0x8],0x0
   1c7dc:	je     0x1cb8b
   1c7e2:	mov    ecx,DWORD PTR [ebp-0x4]
   1c7e5:	movzx  edx,BYTE PTR [ecx]
   1c7e8:	dec    DWORD PTR [ebp-0x8]
   1c7eb:	mov    ecx,edi
   1c7ed:	shl    edx,cl
   1c7ef:	add    edi,0x8
   1c7f2:	add    ebx,edx
   1c7f4:	inc    DWORD PTR [ebp-0x4]
   1c7f7:	cmp    edi,DWORD PTR [esi+0x48]
   1c7fa:	jb     0x1c7d8
   1c7fc:	xor    edx,edx
   1c7fe:	inc    edx
   1c7ff:	mov    ecx,eax
   1c801:	shl    edx,cl
   1c803:	dec    edx
   1c804:	and    edx,ebx
   1c806:	add    DWORD PTR [esi+0x40],edx
   1c809:	shr    ebx,cl
   1c80b:	sub    edi,eax
   1c80d:	mov    DWORD PTR [esi],0x14
   1c813:	mov    ecx,DWORD PTR [esi+0x58]
   1c816:	mov    eax,DWORD PTR [esi+0x50]
   1c819:	xor    edx,edx
   1c81b:	inc    edx
   1c81c:	shl    edx,cl
   1c81e:	dec    edx
   1c81f:	and    edx,ebx
   1c821:	mov    eax,DWORD PTR [eax+edx*4]
   1c824:	jmp    0x1c856
   1c826:	cmp    DWORD PTR [ebp-0x8],0x0
   1c82a:	je     0x1cb8b
   1c830:	mov    eax,DWORD PTR [ebp-0x4]
   1c833:	movzx  eax,BYTE PTR [eax]
   1c836:	dec    DWORD PTR [ebp-0x8]
   1c839:	mov    ecx,edi
   1c83b:	shl    eax,cl
   1c83d:	mov    ecx,DWORD PTR [esi+0x58]
   1c840:	add    edi,0x8
   1c843:	add    ebx,eax
   1c845:	inc    DWORD PTR [ebp-0x4]
   1c848:	xor    eax,eax
   1c84a:	inc    eax
   1c84b:	shl    eax,cl
   1c84d:	mov    ecx,DWORD PTR [esi+0x50]
   1c850:	dec    eax
   1c851:	and    eax,ebx
   1c853:	mov    eax,DWORD PTR [ecx+eax*4]
   1c856:	mov    ecx,eax
   1c858:	shr    ecx,0x8
   1c85b:	movzx  ecx,cl
   1c85e:	cmp    ecx,edi
   1c860:	ja     0x1c826
   1c862:	test   al,0xf0
   1c864:	jne    0x1c8f5
   1c86a:	mov    DWORD PTR [ebp-0xc],eax
   1c86d:	shr    DWORD PTR [ebp-0xc],0x8
   1c871:	movzx  edx,BYTE PTR [ebp-0xc]
   1c875:	mov    DWORD PTR [ebp-0x28],edx
   1c878:	movzx  ecx,al
   1c87b:	add    ecx,edx
   1c87d:	xor    edx,edx
   1c87f:	inc    edx
   1c880:	shl    edx,cl
   1c882:	mov    ecx,DWORD PTR [ebp-0x28]
   1c885:	mov    DWORD PTR [ebp-0x20],eax
   1c888:	shr    eax,0x10
   1c88b:	dec    edx
   1c88c:	and    edx,ebx
   1c88e:	shr    edx,cl
   1c890:	add    edx,eax
   1c892:	mov    eax,DWORD PTR [esi+0x50]
   1c895:	mov    eax,DWORD PTR [eax+edx*4]
   1c898:	movzx  edx,BYTE PTR [ebp-0xc]
   1c89c:	jmp    0x1c8df
   1c89e:	cmp    DWORD PTR [ebp-0x8],0x0
   1c8a2:	je     0x1cb8b
   1c8a8:	mov    eax,DWORD PTR [ebp-0x4]
   1c8ab:	movzx  eax,BYTE PTR [eax]
   1c8ae:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c8b2:	dec    DWORD PTR [ebp-0x8]
   1c8b5:	mov    ecx,edi
   1c8b7:	shl    eax,cl
   1c8b9:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c8bd:	add    ebx,eax
   1c8bf:	inc    DWORD PTR [ebp-0x4]
   1c8c2:	xor    eax,eax
   1c8c4:	add    ecx,edx
   1c8c6:	inc    eax
   1c8c7:	shl    eax,cl
   1c8c9:	add    edi,0x8
   1c8cc:	mov    ecx,edx
   1c8ce:	dec    eax
   1c8cf:	and    eax,ebx
   1c8d1:	shr    eax,cl
   1c8d3:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c8d7:	add    eax,ecx
   1c8d9:	mov    ecx,DWORD PTR [esi+0x50]
   1c8dc:	mov    eax,DWORD PTR [ecx+eax*4]
   1c8df:	mov    ecx,eax
   1c8e1:	shr    ecx,0x8
   1c8e4:	movzx  ecx,cl
   1c8e7:	add    ecx,edx
   1c8e9:	cmp    ecx,edi
   1c8eb:	ja     0x1c89e
   1c8ed:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c8f1:	shr    ebx,cl
   1c8f3:	sub    edi,ecx
   1c8f5:	mov    ecx,eax
   1c8f7:	shr    ecx,0x8
   1c8fa:	movzx  ecx,cl
   1c8fd:	shr    ebx,cl
   1c8ff:	sub    edi,ecx
   1c901:	test   al,0x40
   1c903:	je     0x1c914
   1c905:	mov    eax,DWORD PTR [ebp+0x8]
   1c908:	mov    DWORD PTR [eax+0x18],0x1ecc2
   1c90f:	jmp    0x1cb37
   1c914:	mov    edx,DWORD PTR [ebp+0x8]
   1c917:	mov    ecx,eax
   1c919:	movzx  eax,al
   1c91c:	shr    ecx,0x10
   1c91f:	and    eax,0xf
   1c922:	mov    DWORD PTR [esi+0x44],ecx
   1c925:	mov    DWORD PTR [esi+0x48],eax
   1c928:	mov    DWORD PTR [esi],0x15
   1c92e:	mov    eax,DWORD PTR [esi+0x48]
   1c931:	test   eax,eax
   1c933:	je     0x1c972
   1c935:	cmp    edi,eax
   1c937:	jae    0x1c960
   1c939:	cmp    DWORD PTR [ebp-0x8],0x0
   1c93d:	je     0x1cb8b
   1c943:	mov    eax,DWORD PTR [ebp-0x4]
   1c946:	movzx  eax,BYTE PTR [eax]
   1c949:	dec    DWORD PTR [ebp-0x8]
   1c94c:	mov    ecx,edi
   1c94e:	shl    eax,cl
   1c950:	add    edi,0x8
   1c953:	add    ebx,eax
   1c955:	inc    DWORD PTR [ebp-0x4]
   1c958:	cmp    edi,DWORD PTR [esi+0x48]
   1c95b:	jb     0x1c939
   1c95d:	mov    edx,DWORD PTR [ebp+0x8]
   1c960:	mov    ecx,DWORD PTR [esi+0x48]
   1c963:	xor    eax,eax
   1c965:	inc    eax
   1c966:	shl    eax,cl
   1c968:	dec    eax
   1c969:	and    eax,ebx
   1c96b:	add    DWORD PTR [esi+0x44],eax
   1c96e:	shr    ebx,cl
   1c970:	sub    edi,ecx
   1c972:	mov    eax,DWORD PTR [esi+0x2c]
   1c975:	sub    eax,DWORD PTR [ebp-0x14]
   1c978:	add    eax,DWORD PTR [ebp-0x1c]
   1c97b:	cmp    DWORD PTR [esi+0x44],eax
   1c97e:	jbe    0x1c98c
   1c980:	mov    DWORD PTR [edx+0x18],0x1eca4
   1c987:	jmp    0x1cb37
   1c98c:	mov    DWORD PTR [esi],0x16
   1c992:	cmp    DWORD PTR [ebp-0x14],0x0
   1c996:	je     0x1cb8b
   1c99c:	mov    eax,DWORD PTR [ebp-0x1c]
   1c99f:	sub    eax,DWORD PTR [ebp-0x14]
   1c9a2:	mov    ecx,DWORD PTR [esi+0x44]
   1c9a5:	cmp    ecx,eax
   1c9a7:	jbe    0x1c9d6
   1c9a9:	sub    ecx,eax
   1c9ab:	mov    eax,DWORD PTR [esi+0x34]
   1c9ae:	mov    DWORD PTR [ebp-0xc],ecx
   1c9b1:	mov    ecx,DWORD PTR [esi+0x30]
   1c9b4:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9b7:	jbe    0x1c9c4
   1c9b9:	add    eax,DWORD PTR [esi+0x28]
   1c9bc:	sub    DWORD PTR [ebp-0xc],ecx
   1c9bf:	sub    eax,DWORD PTR [ebp-0xc]
   1c9c2:	jmp    0x1c9c9
   1c9c4:	sub    eax,DWORD PTR [ebp-0xc]
   1c9c7:	add    eax,ecx
   1c9c9:	mov    ecx,DWORD PTR [esi+0x40]
   1c9cc:	mov    DWORD PTR [ebp-0x28],ecx
   1c9cf:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9d2:	jbe    0x1c9e4
   1c9d4:	jmp    0x1c9e1
   1c9d6:	mov    eax,DWORD PTR [ebp-0x18]
   1c9d9:	sub    eax,ecx
   1c9db:	mov    ecx,DWORD PTR [esi+0x40]
   1c9de:	mov    DWORD PTR [ebp-0x28],ecx
   1c9e1:	mov    DWORD PTR [ebp-0xc],ecx
   1c9e4:	mov    ecx,DWORD PTR [ebp-0x14]
   1c9e7:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9ea:	jbe    0x1c9ef
   1c9ec:	mov    DWORD PTR [ebp-0xc],ecx
   1c9ef:	sub    ecx,DWORD PTR [ebp-0xc]
   1c9f2:	mov    DWORD PTR [ebp-0x14],ecx
   1c9f5:	mov    ecx,DWORD PTR [ebp-0x28]
   1c9f8:	sub    ecx,DWORD PTR [ebp-0xc]
   1c9fb:	mov    DWORD PTR [esi+0x40],ecx
   1c9fe:	mov    edx,DWORD PTR [ebp-0x18]
   1ca01:	mov    cl,BYTE PTR [eax]
   1ca03:	inc    DWORD PTR [ebp-0x18]
   1ca06:	inc    eax
   1ca07:	dec    DWORD PTR [ebp-0xc]
   1ca0a:	mov    BYTE PTR [edx],cl
   1ca0c:	jne    0x1c9fe
   1ca0e:	cmp    DWORD PTR [esi+0x40],0x0
   1ca12:	jne    0x1cb3d
   1ca18:	jmp    0x1ca32
   1ca1a:	cmp    DWORD PTR [ebp-0x14],0x0
   1ca1e:	je     0x1cb8b
   1ca24:	mov    ecx,DWORD PTR [ebp-0x18]
   1ca27:	mov    al,BYTE PTR [esi+0x40]
   1ca2a:	inc    DWORD PTR [ebp-0x18]
   1ca2d:	dec    DWORD PTR [ebp-0x14]
   1ca30:	mov    BYTE PTR [ecx],al
   1ca32:	mov    DWORD PTR [esi],0x12
   1ca38:	jmp    0x1cb3d
   1ca3d:	cmp    DWORD PTR [esi+0x8],0x0
   1ca41:	je     0x1caf1
   1ca47:	cmp    edi,0x20
   1ca4a:	jae    0x1ca73
   1ca4c:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca50:	je     0x1cb8b
   1ca56:	mov    eax,DWORD PTR [ebp-0x4]
   1ca59:	movzx  eax,BYTE PTR [eax]
   1ca5c:	dec    DWORD PTR [ebp-0x8]
   1ca5f:	mov    ecx,edi
   1ca61:	shl    eax,cl
   1ca63:	add    edi,0x8
   1ca66:	add    ebx,eax
   1ca68:	inc    DWORD PTR [ebp-0x4]
   1ca6b:	cmp    edi,0x20
   1ca6e:	jb     0x1ca4c
   1ca70:	mov    edx,DWORD PTR [ebp+0x8]
   1ca73:	mov    eax,DWORD PTR [ebp-0x1c]
   1ca76:	sub    eax,DWORD PTR [ebp-0x14]
   1ca79:	add    DWORD PTR [edx+0x14],eax
   1ca7c:	add    DWORD PTR [esi+0x1c],eax
   1ca7f:	mov    DWORD PTR [ebp-0x1c],eax
   1ca82:	test   eax,eax
   1ca84:	je     0x1caae
   1ca86:	push   eax
   1ca87:	mov    eax,DWORD PTR [ebp-0x18]
   1ca8a:	sub    eax,DWORD PTR [ebp-0x1c]
   1ca8d:	cmp    DWORD PTR [esi+0x10],0x0
   1ca91:	push   eax
   1ca92:	push   DWORD PTR [esi+0x18]
   1ca95:	je     0x1ca9e
   1ca97:	call   0x1d9ee
   1ca9c:	jmp    0x1caa3
   1ca9e:	call   0x1d54c
   1caa3:	mov    ecx,DWORD PTR [ebp+0x8]
   1caa6:	mov    DWORD PTR [esi+0x18],eax
   1caa9:	mov    DWORD PTR [ecx+0x30],eax
   1caac:	mov    edx,ecx
   1caae:	cmp    DWORD PTR [esi+0x10],0x0
   1cab2:	mov    eax,DWORD PTR [ebp-0x14]
   1cab5:	mov    DWORD PTR [ebp-0x1c],eax
   1cab8:	mov    eax,ebx
   1caba:	jne    0x1cadf
   1cabc:	and    eax,0xff00
   1cac1:	mov    ecx,ebx
   1cac3:	shl    ecx,0x10
   1cac6:	add    eax,ecx
   1cac8:	mov    ecx,ebx
   1caca:	shr    ecx,0x8
   1cacd:	and    ecx,0xff00
   1cad3:	shl    eax,0x8
   1cad6:	add    eax,ecx
   1cad8:	mov    ecx,ebx
   1cada:	shr    ecx,0x18
   1cadd:	add    eax,ecx
   1cadf:	cmp    eax,DWORD PTR [esi+0x18]
   1cae2:	je     0x1caed
   1cae4:	mov    DWORD PTR [edx+0x18],0x1ec8e
   1caeb:	jmp    0x1cb37
   1caed:	xor    ebx,ebx
   1caef:	xor    edi,edi
   1caf1:	mov    DWORD PTR [esi],0x19
   1caf7:	cmp    DWORD PTR [esi+0x8],0x0
   1cafb:	je     0x1cb75
   1cafd:	cmp    DWORD PTR [esi+0x10],0x0
   1cb01:	je     0x1cb75
   1cb03:	cmp    edi,0x20
   1cb06:	jae    0x1cb2b
   1cb08:	cmp    DWORD PTR [ebp-0x8],0x0
   1cb0c:	je     0x1cb8b
   1cb0e:	mov    eax,DWORD PTR [ebp-0x4]
   1cb11:	movzx  eax,BYTE PTR [eax]
   1cb14:	dec    DWORD PTR [ebp-0x8]
   1cb17:	mov    ecx,edi
   1cb19:	shl    eax,cl
   1cb1b:	add    edi,0x8
   1cb1e:	add    ebx,eax
   1cb20:	inc    DWORD PTR [ebp-0x4]
   1cb23:	cmp    edi,0x20
   1cb26:	jb     0x1cb08
   1cb28:	mov    edx,DWORD PTR [ebp+0x8]
   1cb2b:	cmp    ebx,DWORD PTR [esi+0x1c]
   1cb2e:	je     0x1cb71
   1cb30:	mov    DWORD PTR [edx+0x18],0x1ec76
   1cb37:	mov    DWORD PTR [esi],0x1b
   1cb3d:	mov    eax,DWORD PTR [esi]
   1cb3f:	cmp    eax,0x1c
   1cb42:	jbe    0x1bb2c
   1cb48:	jmp    0x1bb22
   1cb4d:	mov    eax,DWORD PTR [ebp-0x18]
   1cb50:	mov    DWORD PTR [edx+0xc],eax
   1cb53:	mov    eax,DWORD PTR [ebp-0x14]
   1cb56:	mov    DWORD PTR [edx+0x10],eax
   1cb59:	mov    eax,DWORD PTR [ebp-0x4]
   1cb5c:	mov    DWORD PTR [edx],eax
   1cb5e:	mov    eax,DWORD PTR [ebp-0x8]
   1cb61:	mov    DWORD PTR [edx+0x4],eax
   1cb64:	mov    DWORD PTR [esi+0x38],ebx
   1cb67:	mov    DWORD PTR [esi+0x3c],edi
   1cb6a:	push   0x2
   1cb6c:	jmp    0x1bb24
   1cb71:	xor    ebx,ebx
   1cb73:	xor    edi,edi
   1cb75:	mov    DWORD PTR [esi],0x1a
   1cb7b:	mov    DWORD PTR [ebp-0x24],0x1
   1cb82:	jmp    0x1cb8b
   1cb84:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1cb8b:	mov    eax,DWORD PTR [ebp+0x8]
   1cb8e:	mov    ecx,DWORD PTR [ebp-0x18]
   1cb91:	mov    DWORD PTR [eax+0xc],ecx
   1cb94:	mov    ecx,DWORD PTR [ebp-0x14]
   1cb97:	mov    DWORD PTR [eax+0x10],ecx
   1cb9a:	mov    ecx,DWORD PTR [ebp-0x4]
   1cb9d:	mov    DWORD PTR [eax],ecx
   1cb9f:	mov    ecx,DWORD PTR [ebp-0x8]
   1cba2:	mov    DWORD PTR [eax+0x4],ecx
   1cba5:	cmp    DWORD PTR [esi+0x28],0x0
   1cba9:	mov    DWORD PTR [esi+0x38],ebx
   1cbac:	mov    DWORD PTR [esi+0x3c],edi
   1cbaf:	jne    0x1cbc1
   1cbb1:	cmp    DWORD PTR [esi],0x18
   1cbb4:	jge    0x1cbdd
   1cbb6:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbb9:	mov    ecx,DWORD PTR [ebp+0x8]
   1cbbc:	cmp    eax,DWORD PTR [ecx+0x10]
   1cbbf:	je     0x1cbdd
   1cbc1:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbc4:	mov    edi,DWORD PTR [ebp+0x8]
   1cbc7:	call   0x1b9e4
   1cbcc:	test   eax,eax
   1cbce:	je     0x1cbdd
   1cbd0:	mov    DWORD PTR [esi],0x1c
   1cbd6:	push   0xfffffffc
   1cbd8:	jmp    0x1bb24
   1cbdd:	mov    edi,DWORD PTR [ebp+0x8]
   1cbe0:	mov    eax,DWORD PTR [ebp-0x2c]
   1cbe3:	sub    eax,DWORD PTR [edi+0x4]
   1cbe6:	mov    ebx,DWORD PTR [ebp-0x1c]
   1cbe9:	sub    ebx,DWORD PTR [edi+0x10]
   1cbec:	add    DWORD PTR [edi+0x8],eax
   1cbef:	add    DWORD PTR [edi+0x14],ebx
   1cbf2:	add    DWORD PTR [esi+0x1c],ebx
   1cbf5:	cmp    DWORD PTR [esi+0x8],0x0
   1cbf9:	mov    DWORD PTR [ebp-0x2c],eax
   1cbfc:	je     0x1cc27
   1cbfe:	test   ebx,ebx
   1cc00:	je     0x1cc27
   1cc02:	mov    eax,DWORD PTR [edi+0xc]
   1cc05:	push   ebx
   1cc06:	sub    eax,ebx
   1cc08:	cmp    DWORD PTR [esi+0x10],0x0
   1cc0c:	push   eax
   1cc0d:	push   DWORD PTR [esi+0x18]
   1cc10:	je     0x1cc19
   1cc12:	call   0x1d9ee
   1cc17:	jmp    0x1cc1e
   1cc19:	call   0x1d54c
   1cc1e:	mov    DWORD PTR [esi+0x18],eax
   1cc21:	mov    DWORD PTR [edi+0x30],eax
   1cc24:	mov    eax,DWORD PTR [ebp-0x2c]
   1cc27:	cmp    DWORD PTR [esi],0xb
   1cc2a:	jne    0x1cc33
   1cc2c:	mov    ecx,0x80
   1cc31:	jmp    0x1cc35
   1cc33:	xor    ecx,ecx
   1cc35:	mov    edx,DWORD PTR [esi+0x4]
   1cc38:	neg    edx
   1cc3a:	sbb    edx,edx
   1cc3c:	and    edx,0x40
   1cc3f:	add    edx,ecx
   1cc41:	add    edx,DWORD PTR [esi+0x3c]
   1cc44:	mov    DWORD PTR [edi+0x2c],edx
   1cc47:	test   eax,eax
   1cc49:	jne    0x1cc4f
   1cc4b:	test   ebx,ebx
   1cc4d:	je     0x1cc55
   1cc4f:	cmp    DWORD PTR [ebp+0xc],0x4
   1cc53:	jne    0x1cc62
   1cc55:	cmp    DWORD PTR [ebp-0x24],0x0
   1cc59:	jne    0x1cc62
   1cc5b:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1cc62:	mov    eax,DWORD PTR [ebp-0x24]
   1cc65:	jmp    0x1bb25
   1cc6a:	mov    edi,edi
   1cc6c:	ss mov ebx,0xbc5a0001
   1cc72:	add    DWORD PTR [eax],eax
   1cc74:	lock mov esp,0xbd660001
   1cc7a:	add    DWORD PTR [eax],eax
   1cc7c:	fistp  QWORD PTR [ebp-0x41a1ffff]
   1cc82:	add    DWORD PTR [eax],eax
   1cc84:	stc    
   1cc85:	mov    esi,0xbf920001
   1cc8a:	add    DWORD PTR [eax],eax
   1cc8c:	daa    
   1cc8d:	rol    BYTE PTR [ecx],0x0
   1cc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1cc91:	rol    BYTE PTR [ecx],0x0
   1cc94:	add    eax,0x280001c1
   1cc99:	rol    DWORD PTR [ecx],0x0
   1cc9c:	xor    eax,0xe40001c1
   1cca1:	rol    DWORD PTR [ecx],0x0
   1cca4:	inc    esp
   1cca5:	ret    0x1
   1cca8:	call   0x1c3:0x5c0001c2
   1ccaf:	add    dl,cl
   1ccb1:	lds    eax,FWORD PTR [ecx]
   1ccb3:	add    BYTE PTR [edx],dh
   1ccb5:	mov    BYTE PTR [ecx],0x0
   1ccb8:	int    0xc7
   1ccba:	add    DWORD PTR [eax],eax
   1ccbc:	adc    ecx,eax
   1ccbe:	add    DWORD PTR [eax],eax
   1ccc0:	cs leave 
   1ccc2:	add    DWORD PTR [eax],eax
   1ccc4:	xchg   edx,eax
   1ccc5:	leave  
   1ccc6:	add    DWORD PTR [eax],eax
   1ccc8:	sbb    cl,dl
   1ccca:	add    DWORD PTR [eax],eax
   1cccc:	cmp    eax,0xf70001ca
   1ccd1:	retf   0x1
   1ccd4:	jnp    0x1cca1
   1ccd6:	add    DWORD PTR [eax],eax
   1ccd8:	test   bl,cl
   1ccda:	add    DWORD PTR [eax],eax
   1ccdc:	(bad)  
   1ccdd:	retf   
   1ccde:	add    DWORD PTR [eax],eax
   1cce0:	int3   
   1cce1:	int3   
   1cce2:	int3   
   1cce3:	int3   
   1cce4:	int3   
   1cce5:	int3   
   1cce6:	mov    edi,edi
   1cce8:	push   ebp
   1cce9:	mov    ebp,esp
   1cceb:	push   esi
   1ccec:	mov    esi,DWORD PTR [ebp+0x8]
   1ccef:	test   esi,esi
   1ccf1:	je     0x1cd1f
   1ccf3:	mov    eax,DWORD PTR [esi+0x1c]
   1ccf6:	test   eax,eax
   1ccf8:	je     0x1cd1f
   1ccfa:	mov    ecx,DWORD PTR [esi+0x24]
   1ccfd:	test   ecx,ecx
   1ccff:	je     0x1cd1f
   1cd01:	mov    eax,DWORD PTR [eax+0x34]
   1cd04:	test   eax,eax
   1cd06:	je     0x1cd0e
   1cd08:	push   eax
   1cd09:	push   DWORD PTR [esi+0x28]
   1cd0c:	call   ecx
   1cd0e:	push   DWORD PTR [esi+0x1c]
   1cd11:	push   DWORD PTR [esi+0x28]
   1cd14:	call   DWORD PTR [esi+0x24]
   1cd17:	and    DWORD PTR [esi+0x1c],0x0
   1cd1b:	xor    eax,eax
   1cd1d:	jmp    0x1cd22
   1cd1f:	push   0xfffffffe
   1cd21:	pop    eax
   1cd22:	pop    esi
   1cd23:	pop    ebp
   1cd24:	ret    0x4
   1cd27:	int3   
   1cd28:	int3   
   1cd29:	int3   
   1cd2a:	int3   
   1cd2b:	int3   
   1cd2c:	mov    edi,edi
   1cd2e:	push   ebp
   1cd2f:	mov    ebp,esp
   1cd31:	mov    eax,DWORD PTR [ebp+0xc]
   1cd34:	imul   eax,DWORD PTR [ebp+0x10]
   1cd38:	push   eax
   1cd39:	call   0x1da12
   1cd3e:	pop    ecx
   1cd3f:	pop    ebp
   1cd40:	ret    0xc
   1cd43:	int3   
   1cd44:	int3   
   1cd45:	int3   
   1cd46:	int3   
   1cd47:	int3   
   1cd48:	mov    edi,edi
   1cd4a:	push   ebp
   1cd4b:	mov    ebp,esp
   1cd4d:	push   DWORD PTR [ebp+0xc]
   1cd50:	call   0x1da40
   1cd55:	pop    ecx
   1cd56:	pop    ebp
   1cd57:	ret    0x8
   1cd5a:	int3   
   1cd5b:	int3   
   1cd5c:	int3   
   1cd5d:	int3   
   1cd5e:	int3   
   1cd5f:	int3   
   1cd60:	mov    edi,edi
   1cd62:	push   ebp
   1cd63:	mov    ebp,esp
   1cd65:	sub    esp,0x40
   1cd68:	mov    eax,DWORD PTR [ebp+0x8]
   1cd6b:	mov    ecx,DWORD PTR [eax+0x4]
   1cd6e:	mov    edx,DWORD PTR [eax+0x10]
   1cd71:	push   ebx
   1cd72:	mov    ebx,DWORD PTR [eax]
   1cd74:	dec    ebx
   1cd75:	lea    ecx,[ecx+ebx*1-0x5]
   1cd79:	mov    DWORD PTR [ebp-0x2c],ecx
   1cd7c:	mov    ecx,edx
   1cd7e:	sub    ecx,DWORD PTR [ebp+0xc]
   1cd81:	push   esi
   1cd82:	mov    esi,DWORD PTR [eax+0x1c]
   1cd85:	push   edi
   1cd86:	mov    edi,DWORD PTR [eax+0xc]
   1cd89:	dec    edi
   1cd8a:	add    ecx,edi
   1cd8c:	mov    DWORD PTR [ebp-0x3c],ecx
   1cd8f:	lea    ecx,[edx+edi*1-0x101]
   1cd96:	mov    DWORD PTR [ebp-0x30],ecx
   1cd99:	mov    ecx,DWORD PTR [esi+0x28]
   1cd9c:	mov    DWORD PTR [ebp-0x24],ecx
   1cd9f:	mov    ecx,DWORD PTR [esi+0x2c]
   1cda2:	mov    DWORD PTR [ebp-0x40],ecx
   1cda5:	mov    ecx,DWORD PTR [esi+0x30]
   1cda8:	mov    DWORD PTR [ebp-0x18],ecx
   1cdab:	mov    ecx,DWORD PTR [esi+0x34]
   1cdae:	mov    DWORD PTR [ebp-0x28],ecx
   1cdb1:	mov    ecx,DWORD PTR [esi+0x38]
   1cdb4:	mov    DWORD PTR [ebp-0x4],ecx
   1cdb7:	mov    ecx,DWORD PTR [esi+0x3c]
   1cdba:	mov    DWORD PTR [ebp+0xc],ecx
   1cdbd:	mov    ecx,DWORD PTR [esi+0x4c]
   1cdc0:	xor    edx,edx
   1cdc2:	mov    DWORD PTR [ebp-0x1c],ecx
   1cdc5:	mov    ecx,DWORD PTR [esi+0x50]
   1cdc8:	inc    edx
   1cdc9:	mov    DWORD PTR [ebp-0x20],ecx
   1cdcc:	mov    ecx,DWORD PTR [esi+0x54]
   1cdcf:	shl    edx,cl
   1cdd1:	mov    ecx,DWORD PTR [esi+0x58]
   1cdd4:	dec    edx
   1cdd5:	mov    DWORD PTR [ebp-0x34],edx
   1cdd8:	xor    edx,edx
   1cdda:	inc    edx
   1cddb:	shl    edx,cl
   1cddd:	dec    edx
   1cdde:	mov    DWORD PTR [ebp-0x38],edx
   1cde1:	mov    ecx,DWORD PTR [ebp+0xc]
   1cde4:	cmp    ecx,0xf
   1cde7:	jae    0x1ce06
   1cde9:	add    DWORD PTR [ebp+0xc],0x8
   1cded:	inc    ebx
   1cdee:	movzx  edx,BYTE PTR [ebx]
   1cdf1:	shl    edx,cl
   1cdf3:	mov    ecx,DWORD PTR [ebp+0xc]
   1cdf6:	add    DWORD PTR [ebp-0x4],edx
   1cdf9:	inc    ebx
   1cdfa:	movzx  edx,BYTE PTR [ebx]
   1cdfd:	shl    edx,cl
   1cdff:	add    DWORD PTR [ebp-0x4],edx
   1ce02:	add    DWORD PTR [ebp+0xc],0x8
   1ce06:	mov    ecx,DWORD PTR [ebp-0x34]
   1ce09:	and    ecx,DWORD PTR [ebp-0x4]
   1ce0c:	mov    edx,DWORD PTR [ebp-0x1c]
   1ce0f:	mov    ecx,DWORD PTR [edx+ecx*4]
   1ce12:	mov    DWORD PTR [ebp-0x10],ecx
   1ce15:	mov    edx,DWORD PTR [ebp-0x10]
   1ce18:	shr    ecx,0x8
   1ce1b:	movzx  ecx,cl
   1ce1e:	shr    DWORD PTR [ebp-0x4],cl
   1ce21:	sub    DWORD PTR [ebp+0xc],ecx
   1ce24:	mov    DWORD PTR [ebp-0x8],ecx
   1ce27:	movzx  ecx,dl
   1ce2a:	mov    DWORD PTR [ebp-0x8],ecx
   1ce2d:	test   ecx,ecx
   1ce2f:	je     0x1ce78
   1ce31:	mov    ecx,DWORD PTR [ebp-0x8]
   1ce34:	test   cl,0x10
   1ce37:	jne    0x1ce83
   1ce39:	test   cl,0x40
   1ce3c:	jne    0x1d0d2
   1ce42:	xor    edx,edx
   1ce44:	inc    edx
   1ce45:	shl    edx,cl
   1ce47:	mov    ecx,DWORD PTR [ebp-0x10]
   1ce4a:	shr    ecx,0x10
   1ce4d:	dec    edx
   1ce4e:	and    edx,DWORD PTR [ebp-0x4]
   1ce51:	add    edx,ecx
   1ce53:	mov    ecx,DWORD PTR [ebp-0x1c]
   1ce56:	mov    ecx,DWORD PTR [ecx+edx*4]
   1ce59:	mov    DWORD PTR [ebp-0x10],ecx
   1ce5c:	mov    edx,DWORD PTR [ebp-0x10]
   1ce5f:	shr    ecx,0x8
   1ce62:	movzx  ecx,cl
   1ce65:	shr    DWORD PTR [ebp-0x4],cl
   1ce68:	sub    DWORD PTR [ebp+0xc],ecx
   1ce6b:	mov    DWORD PTR [ebp-0x8],ecx
   1ce6e:	movzx  ecx,dl
   1ce71:	mov    DWORD PTR [ebp-0x8],ecx
   1ce74:	test   ecx,ecx
   1ce76:	jne    0x1ce31
   1ce78:	inc    edi
   1ce79:	shr    edx,0x10
   1ce7c:	mov    BYTE PTR [edi],dl
   1ce7e:	jmp    0x1d0b0
   1ce83:	shr    edx,0x10
   1ce86:	and    ecx,0xf
   1ce89:	mov    DWORD PTR [ebp-0xc],edx
   1ce8c:	mov    DWORD PTR [ebp-0x8],ecx
   1ce8f:	je     0x1cebb
   1ce91:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce94:	cmp    ecx,DWORD PTR [ebp-0x8]
   1ce97:	jae    0x1cea6
   1ce99:	inc    ebx
   1ce9a:	movzx  edx,BYTE PTR [ebx]
   1ce9d:	shl    edx,cl
   1ce9f:	add    DWORD PTR [ebp-0x4],edx
   1cea2:	add    DWORD PTR [ebp+0xc],0x8
   1cea6:	mov    ecx,DWORD PTR [ebp-0x8]
   1cea9:	xor    edx,edx
   1ceab:	inc    edx
   1ceac:	shl    edx,cl
   1ceae:	dec    edx
   1ceaf:	and    edx,DWORD PTR [ebp-0x4]
   1ceb2:	shr    DWORD PTR [ebp-0x4],cl
   1ceb5:	add    DWORD PTR [ebp-0xc],edx
   1ceb8:	sub    DWORD PTR [ebp+0xc],ecx
   1cebb:	mov    ecx,DWORD PTR [ebp+0xc]
   1cebe:	cmp    ecx,0xf
   1cec1:	jae    0x1cee0
   1cec3:	add    DWORD PTR [ebp+0xc],0x8
   1cec7:	inc    ebx
   1cec8:	movzx  edx,BYTE PTR [ebx]
   1cecb:	shl    edx,cl
   1cecd:	mov    ecx,DWORD PTR [ebp+0xc]
   1ced0:	add    DWORD PTR [ebp-0x4],edx
   1ced3:	inc    ebx
   1ced4:	movzx  edx,BYTE PTR [ebx]
   1ced7:	shl    edx,cl
   1ced9:	add    DWORD PTR [ebp-0x4],edx
   1cedc:	add    DWORD PTR [ebp+0xc],0x8
   1cee0:	mov    ecx,DWORD PTR [ebp-0x38]
   1cee3:	and    ecx,DWORD PTR [ebp-0x4]
   1cee6:	mov    edx,DWORD PTR [ebp-0x20]
   1cee9:	mov    ecx,DWORD PTR [edx+ecx*4]
   1ceec:	jmp    0x1cf0c
   1ceee:	test   cl,0x40
   1cef1:	jne    0x1d0c9
   1cef7:	xor    edx,edx
   1cef9:	inc    edx
   1cefa:	shl    edx,cl
   1cefc:	movzx  ecx,WORD PTR [ebp-0xe]
   1cf00:	dec    edx
   1cf01:	and    edx,DWORD PTR [ebp-0x4]
   1cf04:	add    edx,ecx
   1cf06:	mov    ecx,DWORD PTR [ebp-0x20]
   1cf09:	mov    ecx,DWORD PTR [ecx+edx*4]
   1cf0c:	mov    DWORD PTR [ebp-0x10],ecx
   1cf0f:	mov    edx,DWORD PTR [ebp-0x10]
   1cf12:	shr    ecx,0x8
   1cf15:	movzx  ecx,cl
   1cf18:	shr    DWORD PTR [ebp-0x4],cl
   1cf1b:	sub    DWORD PTR [ebp+0xc],ecx
   1cf1e:	mov    DWORD PTR [ebp-0x8],ecx
   1cf21:	movzx  ecx,dl
   1cf24:	test   cl,0x10
   1cf27:	je     0x1ceee
   1cf29:	and    ecx,0xf
   1cf2c:	shr    edx,0x10
   1cf2f:	mov    DWORD PTR [ebp-0x14],edx
   1cf32:	mov    DWORD PTR [ebp-0x8],ecx
   1cf35:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf38:	jae    0x1cf65
   1cf3a:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf3d:	add    DWORD PTR [ebp+0xc],0x8
   1cf41:	inc    ebx
   1cf42:	movzx  edx,BYTE PTR [ebx]
   1cf45:	shl    edx,cl
   1cf47:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf4a:	add    DWORD PTR [ebp-0x4],edx
   1cf4d:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf50:	jae    0x1cf65
   1cf52:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf55:	inc    ebx
   1cf56:	movzx  edx,BYTE PTR [ebx]
   1cf59:	shl    edx,cl
   1cf5b:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf5e:	add    DWORD PTR [ebp-0x4],edx
   1cf61:	add    DWORD PTR [ebp+0xc],0x8
   1cf65:	xor    edx,edx
   1cf67:	inc    edx
   1cf68:	shl    edx,cl
   1cf6a:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf6d:	sub    DWORD PTR [ebp+0xc],ecx
   1cf70:	dec    edx
   1cf71:	and    edx,DWORD PTR [ebp-0x4]
   1cf74:	shr    DWORD PTR [ebp-0x4],cl
   1cf77:	add    DWORD PTR [ebp-0x14],edx
   1cf7a:	mov    edx,DWORD PTR [ebp-0x14]
   1cf7d:	mov    ecx,edi
   1cf7f:	sub    ecx,DWORD PTR [ebp-0x3c]
   1cf82:	cmp    edx,ecx
   1cf84:	jbe    0x1d078
   1cf8a:	sub    edx,ecx
   1cf8c:	mov    DWORD PTR [ebp-0x8],edx
   1cf8f:	cmp    edx,DWORD PTR [ebp-0x40]
   1cf92:	ja     0x1d0c0
   1cf98:	mov    ecx,DWORD PTR [ebp-0x28]
   1cf9b:	dec    ecx
   1cf9c:	mov    DWORD PTR [ebp-0x10],ecx
   1cf9f:	mov    ecx,DWORD PTR [ebp-0x18]
   1cfa2:	test   ecx,ecx
   1cfa4:	jne    0x1cfcc
   1cfa6:	mov    ecx,DWORD PTR [ebp-0x24]
   1cfa9:	sub    ecx,edx
   1cfab:	add    DWORD PTR [ebp-0x10],ecx
   1cfae:	mov    ecx,edx
   1cfb0:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfb3:	jae    0x1d041
   1cfb9:	sub    DWORD PTR [ebp-0xc],ecx
   1cfbc:	mov    ecx,DWORD PTR [ebp-0x10]
   1cfbf:	inc    ecx
   1cfc0:	mov    dl,BYTE PTR [ecx]
   1cfc2:	inc    edi
   1cfc3:	dec    DWORD PTR [ebp-0x8]
   1cfc6:	mov    BYTE PTR [edi],dl
   1cfc8:	jne    0x1cfbf
   1cfca:	jmp    0x1d017
   1cfcc:	cmp    ecx,edx
   1cfce:	jae    0x1d021
   1cfd0:	sub    ecx,edx
   1cfd2:	add    ecx,DWORD PTR [ebp-0x24]
   1cfd5:	add    DWORD PTR [ebp-0x10],ecx
   1cfd8:	mov    ecx,DWORD PTR [ebp-0x8]
   1cfdb:	sub    ecx,DWORD PTR [ebp-0x18]
   1cfde:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfe1:	jae    0x1d041
   1cfe3:	sub    DWORD PTR [ebp-0xc],ecx
   1cfe6:	inc    DWORD PTR [ebp-0x10]
   1cfe9:	mov    edx,DWORD PTR [ebp-0x10]
   1cfec:	mov    dl,BYTE PTR [edx]
   1cfee:	inc    edi
   1cfef:	dec    ecx
   1cff0:	mov    BYTE PTR [edi],dl
   1cff2:	jne    0x1cfe6
   1cff4:	mov    ecx,DWORD PTR [ebp-0x28]
   1cff7:	dec    ecx
   1cff8:	mov    DWORD PTR [ebp-0x10],ecx
   1cffb:	mov    ecx,DWORD PTR [ebp-0x18]
   1cffe:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d001:	jae    0x1d041
   1d003:	sub    DWORD PTR [ebp-0xc],ecx
   1d006:	mov    DWORD PTR [ebp-0x8],ecx
   1d009:	mov    ecx,DWORD PTR [ebp-0x10]
   1d00c:	inc    ecx
   1d00d:	mov    dl,BYTE PTR [ecx]
   1d00f:	inc    edi
   1d010:	dec    DWORD PTR [ebp-0x8]
   1d013:	mov    BYTE PTR [edi],dl
   1d015:	jne    0x1d00c
   1d017:	mov    ecx,edi
   1d019:	sub    ecx,DWORD PTR [ebp-0x14]
   1d01c:	mov    DWORD PTR [ebp-0x10],ecx
   1d01f:	jmp    0x1d044
   1d021:	sub    ecx,edx
   1d023:	add    DWORD PTR [ebp-0x10],ecx
   1d026:	mov    ecx,DWORD PTR [ebp-0x8]
   1d029:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d02c:	jae    0x1d041
   1d02e:	sub    DWORD PTR [ebp-0xc],ecx
   1d031:	mov    ecx,DWORD PTR [ebp-0x10]
   1d034:	inc    ecx
   1d035:	mov    dl,BYTE PTR [ecx]
   1d037:	inc    edi
   1d038:	dec    DWORD PTR [ebp-0x8]
   1d03b:	mov    BYTE PTR [edi],dl
   1d03d:	jne    0x1d034
   1d03f:	jmp    0x1d017
   1d041:	mov    ecx,DWORD PTR [ebp-0x10]
   1d044:	mov    edx,DWORD PTR [ebp-0xc]
   1d047:	cmp    edx,0x2
   1d04a:	jbe    0x1d098
   1d04c:	lea    eax,[edx-0x3]
   1d04f:	push   0x3
   1d051:	xor    edx,edx
   1d053:	pop    ecx
   1d054:	div    ecx
   1d056:	mov    ecx,DWORD PTR [ebp-0x10]
   1d059:	inc    eax
   1d05a:	sub    DWORD PTR [ebp-0xc],0x3
   1d05e:	inc    ecx
   1d05f:	mov    dl,BYTE PTR [ecx]
   1d061:	inc    edi
   1d062:	mov    BYTE PTR [edi],dl
   1d064:	inc    ecx
   1d065:	mov    dl,BYTE PTR [ecx]
   1d067:	inc    edi
   1d068:	inc    ecx
   1d069:	mov    BYTE PTR [edi],dl
   1d06b:	mov    dl,BYTE PTR [ecx]
   1d06d:	inc    edi
   1d06e:	dec    eax
   1d06f:	mov    BYTE PTR [edi],dl
   1d071:	jne    0x1d05a
   1d073:	mov    eax,DWORD PTR [ebp+0x8]
   1d076:	jmp    0x1d098
   1d078:	mov    ecx,edi
   1d07a:	sub    ecx,edx
   1d07c:	sub    DWORD PTR [ebp-0xc],0x3
   1d080:	inc    ecx
   1d081:	mov    dl,BYTE PTR [ecx]
   1d083:	inc    edi
   1d084:	mov    BYTE PTR [edi],dl
   1d086:	inc    ecx
   1d087:	mov    dl,BYTE PTR [ecx]
   1d089:	inc    edi
   1d08a:	inc    ecx
   1d08b:	mov    BYTE PTR [edi],dl
   1d08d:	mov    dl,BYTE PTR [ecx]
   1d08f:	inc    edi
   1d090:	cmp    DWORD PTR [ebp-0xc],0x2
   1d094:	mov    BYTE PTR [edi],dl
   1d096:	ja     0x1d07c
   1d098:	cmp    DWORD PTR [ebp-0xc],0x0
   1d09c:	je     0x1d0b0
   1d09e:	inc    ecx
   1d09f:	mov    dl,BYTE PTR [ecx]
   1d0a1:	inc    edi
   1d0a2:	cmp    DWORD PTR [ebp-0xc],0x1
   1d0a6:	mov    BYTE PTR [edi],dl
   1d0a8:	jbe    0x1d0b0
   1d0aa:	mov    cl,BYTE PTR [ecx+0x1]
   1d0ad:	inc    edi
   1d0ae:	mov    BYTE PTR [edi],cl
   1d0b0:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d0b3:	jae    0x1d0ec
   1d0b5:	cmp    edi,DWORD PTR [ebp-0x30]
   1d0b8:	jb     0x1cde1
   1d0be:	jmp    0x1d0ec
   1d0c0:	mov    DWORD PTR [eax+0x18],0x1eca4
   1d0c7:	jmp    0x1d0e6
   1d0c9:	mov    DWORD PTR [eax+0x18],0x1ecc2
   1d0d0:	jmp    0x1d0e6
   1d0d2:	test   cl,0x20
   1d0d5:	je     0x1d0df
   1d0d7:	mov    DWORD PTR [esi],0xb
   1d0dd:	jmp    0x1d0ec
   1d0df:	mov    DWORD PTR [eax+0x18],0x1ecd8
   1d0e6:	mov    DWORD PTR [esi],0x1b
   1d0ec:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0ef:	shr    ecx,0x3
   1d0f2:	sub    ebx,ecx
   1d0f4:	shl    ecx,0x3
   1d0f7:	sub    DWORD PTR [ebp+0xc],ecx
   1d0fa:	xor    ecx,ecx
   1d0fc:	inc    ecx
   1d0fd:	mov    edx,ecx
   1d0ff:	mov    ecx,DWORD PTR [ebp+0xc]
   1d102:	shl    edx,cl
   1d104:	dec    edx
   1d105:	mov    ecx,edx
   1d107:	mov    edx,DWORD PTR [ebp-0x4]
   1d10a:	and    edx,ecx
   1d10c:	lea    ecx,[ebx+0x1]
   1d10f:	mov    DWORD PTR [eax],ecx
   1d111:	lea    ecx,[edi+0x1]
   1d114:	mov    DWORD PTR [eax+0xc],ecx
   1d117:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d11a:	sub    ecx,ebx
   1d11c:	add    ecx,0x5
   1d11f:	mov    DWORD PTR [eax+0x4],ecx
   1d122:	mov    ecx,DWORD PTR [ebp-0x30]
   1d125:	sub    ecx,edi
   1d127:	add    ecx,0x101
   1d12d:	mov    DWORD PTR [eax+0x10],ecx
   1d130:	mov    eax,DWORD PTR [ebp+0xc]
   1d133:	pop    edi
   1d134:	mov    DWORD PTR [esi+0x38],edx
   1d137:	mov    DWORD PTR [esi+0x3c],eax
   1d13a:	pop    esi
   1d13b:	pop    ebx
   1d13c:	leave  
   1d13d:	ret    0x8
   1d140:	int3   
   1d141:	int3   
   1d142:	int3   
   1d143:	int3   
   1d144:	int3   
   1d145:	int3   
   1d146:	mov    edi,edi
   1d148:	push   ebp
   1d149:	mov    ebp,esp
   1d14b:	sub    esp,0x90
   1d151:	mov    eax,ds:0x7eb3c
   1d156:	xor    eax,ebp
   1d158:	mov    DWORD PTR [ebp-0x4],eax
   1d15b:	mov    eax,DWORD PTR [ebp+0xc]
   1d15e:	mov    edx,DWORD PTR [ebp+0x18]
   1d161:	mov    DWORD PTR [ebp-0x7c],eax
   1d164:	mov    eax,DWORD PTR [ebp+0x1c]
   1d167:	push   ebx
   1d168:	mov    DWORD PTR [ebp-0x4c],eax
   1d16b:	xor    eax,eax
   1d16d:	push   esi
   1d16e:	mov    esi,DWORD PTR [ebp+0x14]
   1d171:	movzx  ebx,ax
   1d174:	push   edi
   1d175:	mov    eax,ebx
   1d177:	shl    ebx,0x10
   1d17a:	push   0x8
   1d17c:	or     eax,ebx
   1d17e:	pop    ecx
   1d17f:	lea    edi,[ebp-0x24]
   1d182:	rep stos DWORD PTR es:[edi],eax
   1d184:	xor    edi,edi
   1d186:	xor    ecx,ecx
   1d188:	mov    DWORD PTR [ebp-0x90],edx
   1d18e:	cmp    DWORD PTR [ebp+0x10],edi
   1d191:	jbe    0x1d1a7
   1d193:	mov    eax,DWORD PTR [ebp-0x7c]
   1d196:	movzx  eax,WORD PTR [eax+ecx*2]
   1d19a:	lea    eax,[ebp+eax*2-0x24]
   1d19e:	inc    WORD PTR [eax]
   1d1a1:	inc    ecx
   1d1a2:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d1a5:	jb     0x1d193
   1d1a7:	mov    ecx,DWORD PTR [edx]
   1d1a9:	push   0xf
   1d1ab:	pop    eax
   1d1ac:	mov    DWORD PTR [ebp-0x54],ecx
   1d1af:	mov    DWORD PTR [ebp-0x60],eax
   1d1b2:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d1b7:	jne    0x1d1c2
   1d1b9:	dec    eax
   1d1ba:	mov    DWORD PTR [ebp-0x60],eax
   1d1bd:	cmp    eax,0x1
   1d1c0:	jae    0x1d1b2
   1d1c2:	cmp    ecx,eax
   1d1c4:	jbe    0x1d1c9
   1d1c6:	mov    DWORD PTR [ebp-0x54],eax
   1d1c9:	cmp    eax,edi
   1d1cb:	jne    0x1d1f7
   1d1cd:	mov    ecx,DWORD PTR [esi]
   1d1cf:	xor    eax,eax
   1d1d1:	mov    BYTE PTR [ebp-0x48],0x40
   1d1d5:	mov    BYTE PTR [ebp-0x47],0x1
   1d1d9:	mov    WORD PTR [ebp-0x46],ax
   1d1dd:	mov    eax,DWORD PTR [ebp-0x48]
   1d1e0:	mov    DWORD PTR [ecx],eax
   1d1e2:	add    DWORD PTR [esi],0x4
   1d1e5:	mov    ecx,DWORD PTR [esi]
   1d1e7:	mov    DWORD PTR [ecx],eax
   1d1e9:	add    DWORD PTR [esi],0x4
   1d1ec:	mov    DWORD PTR [edx],0x1
   1d1f2:	jmp    0x1d533
   1d1f7:	xor    ecx,ecx
   1d1f9:	inc    ecx
   1d1fa:	mov    edx,ecx
   1d1fc:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d201:	jne    0x1d209
   1d203:	inc    edx
   1d204:	cmp    edx,0xf
   1d207:	jbe    0x1d1fc
   1d209:	cmp    DWORD PTR [ebp-0x54],edx
   1d20c:	jae    0x1d211
   1d20e:	mov    DWORD PTR [ebp-0x54],edx
   1d211:	mov    edi,ecx
   1d213:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d218:	add    edi,edi
   1d21a:	sub    edi,ebx
   1d21c:	js     0x1d2a8
   1d222:	inc    ecx
   1d223:	cmp    ecx,0xf
   1d226:	jbe    0x1d213
   1d228:	xor    ebx,ebx
   1d22a:	cmp    edi,ebx
   1d22c:	jle    0x1d238
   1d22e:	cmp    DWORD PTR [ebp+0x8],ebx
   1d231:	je     0x1d2a8
   1d233:	cmp    eax,0x1
   1d236:	jne    0x1d2a8
   1d238:	xor    eax,eax
   1d23a:	push   0x2
   1d23c:	mov    WORD PTR [ebp-0x42],ax
   1d240:	pop    ecx
   1d241:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d246:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d24b:	inc    ecx
   1d24c:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d251:	inc    ecx
   1d252:	cmp    ecx,0x1e
   1d255:	jb     0x1d241
   1d257:	mov    eax,DWORD PTR [ebp-0x4c]
   1d25a:	xor    edi,edi
   1d25c:	cmp    DWORD PTR [ebp+0x10],ebx
   1d25f:	jbe    0x1d28a
   1d261:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d264:	lea    ecx,[ecx+edi*2]
   1d267:	cmp    WORD PTR [ecx],bx
   1d26a:	je     0x1d284
   1d26c:	movzx  ebx,WORD PTR [ecx]
   1d26f:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d274:	mov    WORD PTR [eax+ebx*2],di
   1d278:	movzx  ecx,WORD PTR [ecx]
   1d27b:	lea    ecx,[ebp+ecx*2-0x44]
   1d27f:	inc    WORD PTR [ecx]
   1d282:	xor    ebx,ebx
   1d284:	inc    edi
   1d285:	cmp    edi,DWORD PTR [ebp+0x10]
   1d288:	jb     0x1d261
   1d28a:	mov    ecx,DWORD PTR [ebp+0x8]
   1d28d:	sub    ecx,ebx
   1d28f:	je     0x1d2d2
   1d291:	dec    ecx
   1d292:	je     0x1d2b0
   1d294:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d298:	mov    DWORD PTR [ebp-0x6c],0x7bd98
   1d29f:	mov    DWORD PTR [ebp-0x78],0x7bdd8
   1d2a6:	jmp    0x1d2df
   1d2a8:	or     eax,0xffffffff
   1d2ab:	jmp    0x1d535
   1d2b0:	mov    ecx,0x202
   1d2b5:	mov    edi,0x7bd18
   1d2ba:	sub    edi,ecx
   1d2bc:	mov    DWORD PTR [ebp-0x6c],edi
   1d2bf:	mov    edi,0x7bd58
   1d2c4:	sub    edi,ecx
   1d2c6:	mov    DWORD PTR [ebp-0x78],edi
   1d2c9:	mov    DWORD PTR [ebp-0x68],0x100
   1d2d0:	jmp    0x1d2df
   1d2d2:	mov    DWORD PTR [ebp-0x78],eax
   1d2d5:	mov    DWORD PTR [ebp-0x6c],eax
   1d2d8:	mov    DWORD PTR [ebp-0x68],0x13
   1d2df:	mov    ecx,DWORD PTR [ebp-0x54]
   1d2e2:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d2e6:	mov    edi,DWORD PTR [esi]
   1d2e8:	mov    eax,edx
   1d2ea:	xor    edx,edx
   1d2ec:	inc    edx
   1d2ed:	shl    edx,cl
   1d2ef:	cmp    DWORD PTR [ebp+0x8],0x1
   1d2f3:	mov    DWORD PTR [ebp-0x5c],ebx
   1d2f6:	mov    DWORD PTR [ebp-0x84],eax
   1d2fc:	lea    ecx,[edx-0x1]
   1d2ff:	mov    DWORD PTR [ebp-0x50],ebx
   1d302:	mov    DWORD PTR [ebp-0x80],edx
   1d305:	mov    DWORD PTR [ebp-0x64],edx
   1d308:	mov    DWORD PTR [ebp-0x88],ecx
   1d30e:	jne    0x1d320
   1d310:	cmp    edx,0x5b0
   1d316:	jb     0x1d320
   1d318:	xor    eax,eax
   1d31a:	inc    eax
   1d31b:	jmp    0x1d535
   1d320:	mov    ecx,DWORD PTR [ebp-0x4c]
   1d323:	mov    DWORD PTR [ebp-0x58],ecx
   1d326:	mov    cl,al
   1d328:	sub    cl,BYTE PTR [ebp-0x50]
   1d32b:	mov    BYTE PTR [ebp-0x47],cl
   1d32e:	mov    ecx,DWORD PTR [ebp-0x58]
   1d331:	movzx  edx,WORD PTR [ecx]
   1d334:	movzx  ecx,dx
   1d337:	cmp    ecx,DWORD PTR [ebp-0x68]
   1d33a:	jge    0x1d346
   1d33c:	mov    BYTE PTR [ebp-0x48],0x0
   1d340:	mov    WORD PTR [ebp-0x46],dx
   1d344:	jmp    0x1d36c
   1d346:	jle    0x1d362
   1d348:	mov    ecx,DWORD PTR [ebp-0x58]
   1d34b:	movzx  ecx,WORD PTR [ecx]
   1d34e:	mov    edx,DWORD PTR [ebp-0x78]
   1d351:	add    ecx,ecx
   1d353:	mov    dl,BYTE PTR [ecx+edx*1]
   1d356:	mov    BYTE PTR [ebp-0x48],dl
   1d359:	mov    edx,DWORD PTR [ebp-0x6c]
   1d35c:	mov    cx,WORD PTR [ecx+edx*1]
   1d360:	jmp    0x1d368
   1d362:	mov    BYTE PTR [ebp-0x48],0x60
   1d366:	xor    ecx,ecx
   1d368:	mov    WORD PTR [ebp-0x46],cx
   1d36c:	xor    edx,edx
   1d36e:	mov    ecx,eax
   1d370:	sub    ecx,DWORD PTR [ebp-0x50]
   1d373:	inc    edx
   1d374:	shl    edx,cl
   1d376:	mov    ecx,DWORD PTR [ebp-0x80]
   1d379:	mov    DWORD PTR [ebp-0x4c],ecx
   1d37c:	mov    DWORD PTR [ebp-0x70],ecx
   1d37f:	mov    ecx,DWORD PTR [ebp-0x50]
   1d382:	shr    ebx,cl
   1d384:	add    ebx,DWORD PTR [ebp-0x4c]
   1d387:	lea    ecx,[edi+ebx*4]
   1d38a:	sub    DWORD PTR [ebp-0x4c],edx
   1d38d:	mov    ebx,edx
   1d38f:	shl    ebx,0x2
   1d392:	sub    ecx,ebx
   1d394:	cmp    DWORD PTR [ebp-0x4c],0x0
   1d398:	mov    ebx,DWORD PTR [ebp-0x48]
   1d39b:	mov    DWORD PTR [ecx],ebx
   1d39d:	jne    0x1d38a
   1d39f:	xor    edx,edx
   1d3a1:	lea    ecx,[eax-0x1]
   1d3a4:	inc    edx
   1d3a5:	shl    edx,cl
   1d3a7:	mov    ecx,DWORD PTR [ebp-0x5c]
   1d3aa:	jmp    0x1d3ae
   1d3ac:	shr    edx,1
   1d3ae:	test   ecx,edx
   1d3b0:	jne    0x1d3ac
   1d3b2:	test   edx,edx
   1d3b4:	je     0x1d3bf
   1d3b6:	lea    ebx,[edx-0x1]
   1d3b9:	and    ebx,ecx
   1d3bb:	add    ebx,edx
   1d3bd:	jmp    0x1d3c1
   1d3bf:	xor    ebx,ebx
   1d3c1:	add    DWORD PTR [ebp-0x58],0x2
   1d3c5:	lea    ecx,[ebp+eax*2-0x24]
   1d3c9:	mov    edx,0xffff
   1d3ce:	add    WORD PTR [ecx],dx
   1d3d1:	movzx  ecx,WORD PTR [ecx]
   1d3d4:	mov    DWORD PTR [ebp-0x5c],ebx
   1d3d7:	test   cx,cx
   1d3da:	jne    0x1d3f8
   1d3dc:	cmp    eax,DWORD PTR [ebp-0x60]
   1d3df:	je     0x1d4bb
   1d3e5:	mov    eax,DWORD PTR [ebp-0x58]
   1d3e8:	movzx  eax,WORD PTR [eax]
   1d3eb:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d3ee:	movzx  eax,WORD PTR [ecx+eax*2]
   1d3f2:	mov    DWORD PTR [ebp-0x84],eax
   1d3f8:	mov    edx,DWORD PTR [ebp-0x54]
   1d3fb:	cmp    eax,edx
   1d3fd:	jbe    0x1d326
   1d403:	mov    ecx,DWORD PTR [ebp-0x88]
   1d409:	and    ecx,ebx
   1d40b:	mov    DWORD PTR [ebp-0x8c],ecx
   1d411:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d414:	je     0x1d326
   1d41a:	cmp    DWORD PTR [ebp-0x50],0x0
   1d41e:	jne    0x1d423
   1d420:	mov    DWORD PTR [ebp-0x50],edx
   1d423:	mov    ecx,DWORD PTR [ebp-0x70]
   1d426:	lea    edi,[edi+ecx*4]
   1d429:	mov    ecx,eax
   1d42b:	mov    eax,DWORD PTR [ebp-0x50]
   1d42e:	xor    edx,edx
   1d430:	sub    ecx,eax
   1d432:	inc    edx
   1d433:	add    eax,ecx
   1d435:	shl    edx,cl
   1d437:	cmp    eax,DWORD PTR [ebp-0x60]
   1d43a:	jae    0x1d464
   1d43c:	mov    DWORD PTR [ebp-0x4c],eax
   1d43f:	lea    eax,[ebp+eax*2-0x24]
   1d443:	jmp    0x1d448
   1d445:	mov    eax,DWORD PTR [ebp-0x70]
   1d448:	movzx  ebx,WORD PTR [eax]
   1d44b:	sub    edx,ebx
   1d44d:	test   edx,edx
   1d44f:	jle    0x1d464
   1d451:	inc    ecx
   1d452:	inc    DWORD PTR [ebp-0x4c]
   1d455:	inc    eax
   1d456:	inc    eax
   1d457:	mov    DWORD PTR [ebp-0x70],eax
   1d45a:	mov    eax,DWORD PTR [ebp-0x4c]
   1d45d:	add    edx,edx
   1d45f:	cmp    eax,DWORD PTR [ebp-0x60]
   1d462:	jb     0x1d445
   1d464:	xor    eax,eax
   1d466:	inc    eax
   1d467:	mov    edx,eax
   1d469:	shl    edx,cl
   1d46b:	add    DWORD PTR [ebp-0x64],edx
   1d46e:	mov    DWORD PTR [ebp-0x80],edx
   1d471:	cmp    DWORD PTR [ebp+0x8],eax
   1d474:	jne    0x1d483
   1d476:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1d47d:	jae    0x1d535
   1d483:	mov    eax,DWORD PTR [ebp-0x8c]
   1d489:	mov    ebx,DWORD PTR [ebp-0x5c]
   1d48c:	mov    edx,eax
   1d48e:	mov    DWORD PTR [ebp-0x74],eax
   1d491:	mov    eax,DWORD PTR [esi]
   1d493:	shl    edx,0x2
   1d496:	mov    BYTE PTR [edx+eax*1],cl
   1d499:	mov    eax,DWORD PTR [esi]
   1d49b:	mov    cl,BYTE PTR [ebp-0x54]
   1d49e:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1d4a2:	mov    eax,DWORD PTR [esi]
   1d4a4:	mov    ecx,edi
   1d4a6:	sub    ecx,eax
   1d4a8:	sar    ecx,0x2
   1d4ab:	mov    WORD PTR [edx+eax*1+0x2],cx
   1d4b0:	mov    eax,DWORD PTR [ebp-0x84]
   1d4b6:	jmp    0x1d326
   1d4bb:	mov    cl,al
   1d4bd:	sub    cl,BYTE PTR [ebp-0x50]
   1d4c0:	mov    BYTE PTR [ebp-0x48],0x40
   1d4c4:	mov    BYTE PTR [ebp-0x47],cl
   1d4c7:	xor    ecx,ecx
   1d4c9:	mov    WORD PTR [ebp-0x46],cx
   1d4cd:	jmp    0x1d51c
   1d4cf:	cmp    DWORD PTR [ebp-0x50],0x0
   1d4d3:	je     0x1d4ee
   1d4d5:	mov    ecx,DWORD PTR [ebp-0x88]
   1d4db:	and    ecx,ebx
   1d4dd:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d4e0:	je     0x1d4ee
   1d4e2:	mov    eax,DWORD PTR [ebp-0x54]
   1d4e5:	and    DWORD PTR [ebp-0x50],0x0
   1d4e9:	mov    edi,DWORD PTR [esi]
   1d4eb:	mov    BYTE PTR [ebp-0x47],al
   1d4ee:	mov    ecx,DWORD PTR [ebp-0x50]
   1d4f1:	mov    edx,ebx
   1d4f3:	shr    edx,cl
   1d4f5:	mov    ecx,DWORD PTR [ebp-0x48]
   1d4f8:	mov    DWORD PTR [edi+edx*4],ecx
   1d4fb:	xor    edx,edx
   1d4fd:	lea    ecx,[eax-0x1]
   1d500:	inc    edx
   1d501:	shl    edx,cl
   1d503:	jmp    0x1d507
   1d505:	shr    edx,1
   1d507:	test   ebx,edx
   1d509:	jne    0x1d505
   1d50b:	test   edx,edx
   1d50d:	je     0x1d51a
   1d50f:	lea    ecx,[edx-0x1]
   1d512:	and    ecx,ebx
   1d514:	add    ecx,edx
   1d516:	mov    ebx,ecx
   1d518:	jmp    0x1d51c
   1d51a:	xor    ebx,ebx
   1d51c:	test   ebx,ebx
   1d51e:	jne    0x1d4cf
   1d520:	mov    eax,DWORD PTR [ebp-0x64]
   1d523:	mov    ecx,DWORD PTR [ebp-0x54]
   1d526:	shl    eax,0x2
   1d529:	add    DWORD PTR [esi],eax
   1d52b:	mov    eax,DWORD PTR [ebp-0x90]
   1d531:	mov    DWORD PTR [eax],ecx
   1d533:	xor    eax,eax
   1d535:	mov    ecx,DWORD PTR [ebp-0x4]
   1d538:	pop    edi
   1d539:	pop    esi
   1d53a:	xor    ecx,ebp
   1d53c:	pop    ebx
   1d53d:	call   0x1da5d
   1d542:	leave  
   1d543:	ret    0x18
   1d546:	int3   
   1d547:	int3   
   1d548:	int3   
   1d549:	int3   
   1d54a:	int3   
   1d54b:	int3   
   1d54c:	mov    edi,edi
   1d54e:	push   ebp
   1d54f:	mov    ebp,esp
   1d551:	push   ebx
   1d552:	push   esi
   1d553:	push   edi
   1d554:	nop
   1d555:	mov    esi,DWORD PTR [ebp+0x8]
   1d558:	mov    ebx,DWORD PTR [ebp+0x10]
   1d55b:	xor    eax,eax
   1d55d:	mov    edi,esi
   1d55f:	inc    eax
   1d560:	shr    edi,0x10
   1d563:	and    esi,0xffff
   1d569:	cmp    ebx,eax
   1d56b:	jne    0x1d591
   1d56d:	mov    eax,DWORD PTR [ebp+0xc]
   1d570:	movzx  eax,BYTE PTR [eax]
   1d573:	add    esi,eax
   1d575:	mov    eax,0xfff1
   1d57a:	cmp    esi,eax
   1d57c:	jb     0x1d580
   1d57e:	sub    esi,eax
   1d580:	add    edi,esi
   1d582:	cmp    edi,eax
   1d584:	jb     0x1d763
   1d58a:	sub    edi,eax
   1d58c:	jmp    0x1d763
   1d591:	mov    ecx,DWORD PTR [ebp+0xc]
   1d594:	test   ecx,ecx
   1d596:	je     0x1d76a
   1d59c:	cmp    ebx,0x10
   1d59f:	jb     0x1d726
   1d5a5:	cmp    ebx,0x15b0
   1d5ab:	jb     0x1d679
   1d5b1:	mov    eax,ebx
   1d5b3:	mov    ebx,0x15b0
   1d5b8:	xor    edx,edx
   1d5ba:	div    ebx
   1d5bc:	mov    ebx,DWORD PTR [ebp+0x10]
   1d5bf:	mov    DWORD PTR [ebp+0xc],eax
   1d5c2:	sub    ebx,0x15b0
   1d5c8:	mov    eax,0x15b
   1d5cd:	movzx  edx,BYTE PTR [ecx]
   1d5d0:	add    esi,edx
   1d5d2:	movzx  edx,BYTE PTR [ecx+0x1]
   1d5d6:	add    edi,esi
   1d5d8:	add    esi,edx
   1d5da:	movzx  edx,BYTE PTR [ecx+0x2]
   1d5de:	add    edi,esi
   1d5e0:	add    esi,edx
   1d5e2:	movzx  edx,BYTE PTR [ecx+0x3]
   1d5e6:	add    edi,esi
   1d5e8:	add    esi,edx
   1d5ea:	movzx  edx,BYTE PTR [ecx+0x4]
   1d5ee:	add    edi,esi
   1d5f0:	add    esi,edx
   1d5f2:	movzx  edx,BYTE PTR [ecx+0x5]
   1d5f6:	add    edi,esi
   1d5f8:	add    esi,edx
   1d5fa:	movzx  edx,BYTE PTR [ecx+0x6]
   1d5fe:	add    edi,esi
   1d600:	add    esi,edx
   1d602:	movzx  edx,BYTE PTR [ecx+0x7]
   1d606:	add    edi,esi
   1d608:	add    esi,edx
   1d60a:	movzx  edx,BYTE PTR [ecx+0x8]
   1d60e:	add    edi,esi
   1d610:	add    esi,edx
   1d612:	movzx  edx,BYTE PTR [ecx+0x9]
   1d616:	add    edi,esi
   1d618:	add    esi,edx
   1d61a:	movzx  edx,BYTE PTR [ecx+0xa]
   1d61e:	add    edi,esi
   1d620:	add    esi,edx
   1d622:	movzx  edx,BYTE PTR [ecx+0xb]
   1d626:	add    edi,esi
   1d628:	add    esi,edx
   1d62a:	movzx  edx,BYTE PTR [ecx+0xc]
   1d62e:	add    edi,esi
   1d630:	add    esi,edx
   1d632:	movzx  edx,BYTE PTR [ecx+0xd]
   1d636:	add    edi,esi
   1d638:	add    esi,edx
   1d63a:	movzx  edx,BYTE PTR [ecx+0xe]
   1d63e:	add    edi,esi
   1d640:	add    esi,edx
   1d642:	movzx  edx,BYTE PTR [ecx+0xf]
   1d646:	add    edi,esi
   1d648:	add    esi,edx
   1d64a:	add    edi,esi
   1d64c:	add    ecx,0x10
   1d64f:	dec    eax
   1d650:	jne    0x1d5cd
   1d656:	mov    eax,esi
   1d658:	xor    edx,edx
   1d65a:	mov    esi,0xfff1
   1d65f:	div    esi
   1d661:	mov    eax,edi
   1d663:	mov    edi,0xfff1
   1d668:	mov    esi,edx
   1d66a:	xor    edx,edx
   1d66c:	div    edi
   1d66e:	dec    DWORD PTR [ebp+0xc]
   1d671:	mov    edi,edx
   1d673:	jne    0x1d5c2
   1d679:	test   ebx,ebx
   1d67b:	je     0x1d763
   1d681:	cmp    ebx,0x10
   1d684:	jb     0x1d748
   1d68a:	mov    eax,ebx
   1d68c:	shr    eax,0x4
   1d68f:	movzx  edx,BYTE PTR [ecx]
   1d692:	add    esi,edx
   1d694:	movzx  edx,BYTE PTR [ecx+0x1]
   1d698:	add    edi,esi
   1d69a:	add    esi,edx
   1d69c:	movzx  edx,BYTE PTR [ecx+0x2]
   1d6a0:	add    edi,esi
   1d6a2:	add    esi,edx
   1d6a4:	movzx  edx,BYTE PTR [ecx+0x3]
   1d6a8:	add    edi,esi
   1d6aa:	add    esi,edx
   1d6ac:	movzx  edx,BYTE PTR [ecx+0x4]
   1d6b0:	add    edi,esi
   1d6b2:	add    esi,edx
   1d6b4:	movzx  edx,BYTE PTR [ecx+0x5]
   1d6b8:	add    edi,esi
   1d6ba:	add    esi,edx
   1d6bc:	movzx  edx,BYTE PTR [ecx+0x6]
   1d6c0:	add    edi,esi
   1d6c2:	add    esi,edx
   1d6c4:	movzx  edx,BYTE PTR [ecx+0x7]
   1d6c8:	add    edi,esi
   1d6ca:	add    esi,edx
   1d6cc:	movzx  edx,BYTE PTR [ecx+0x8]
   1d6d0:	add    edi,esi
   1d6d2:	add    esi,edx
   1d6d4:	movzx  edx,BYTE PTR [ecx+0x9]
   1d6d8:	add    edi,esi
   1d6da:	add    esi,edx
   1d6dc:	movzx  edx,BYTE PTR [ecx+0xa]
   1d6e0:	add    edi,esi
   1d6e2:	add    esi,edx
   1d6e4:	movzx  edx,BYTE PTR [ecx+0xb]
   1d6e8:	add    edi,esi
   1d6ea:	add    esi,edx
   1d6ec:	movzx  edx,BYTE PTR [ecx+0xc]
   1d6f0:	add    edi,esi
   1d6f2:	add    esi,edx
   1d6f4:	movzx  edx,BYTE PTR [ecx+0xd]
   1d6f8:	add    edi,esi
   1d6fa:	add    esi,edx
   1d6fc:	movzx  edx,BYTE PTR [ecx+0xe]
   1d700:	add    edi,esi
   1d702:	add    esi,edx
   1d704:	movzx  edx,BYTE PTR [ecx+0xf]
   1d708:	add    edi,esi
   1d70a:	add    esi,edx
   1d70c:	sub    ebx,0x10
   1d70f:	add    edi,esi
   1d711:	add    ecx,0x10
   1d714:	dec    eax
   1d715:	jne    0x1d68f
   1d71b:	jmp    0x1d748
   1d71d:	movzx  eax,BYTE PTR [ecx]
   1d720:	dec    ebx
   1d721:	add    esi,eax
   1d723:	inc    ecx
   1d724:	add    edi,esi
   1d726:	test   ebx,ebx
   1d728:	jne    0x1d71d
   1d72a:	mov    ecx,0xfff1
   1d72f:	cmp    esi,ecx
   1d731:	jb     0x1d735
   1d733:	sub    esi,ecx
   1d735:	mov    eax,edi
   1d737:	xor    edx,edx
   1d739:	div    ecx
   1d73b:	mov    eax,edx
   1d73d:	jmp    0x1d765
   1d73f:	movzx  eax,BYTE PTR [ecx]
   1d742:	dec    ebx
   1d743:	add    esi,eax
   1d745:	inc    ecx
   1d746:	add    edi,esi
   1d748:	test   ebx,ebx
   1d74a:	jne    0x1d73f
   1d74c:	mov    eax,esi
   1d74e:	mov    ecx,0xfff1
   1d753:	xor    edx,edx
   1d755:	mov    esi,ecx
   1d757:	div    esi
   1d759:	mov    eax,edi
   1d75b:	mov    esi,edx
   1d75d:	xor    edx,edx
   1d75f:	div    ecx
   1d761:	mov    edi,edx
   1d763:	mov    eax,edi
   1d765:	shl    eax,0x10
   1d768:	or     eax,esi
   1d76a:	pop    edi
   1d76b:	pop    esi
   1d76c:	pop    ebx
   1d76d:	pop    ebp
   1d76e:	ret    0xc
   1d771:	int3   
   1d772:	int3   
   1d773:	int3   
   1d774:	int3   
   1d775:	int3   
   1d776:	mov    edi,edi
   1d778:	push   ebp
   1d779:	mov    ebp,esp
   1d77b:	push   ecx
   1d77c:	cmp    DWORD PTR [ebp+0x8],0x0
   1d780:	push   esi
   1d781:	not    eax
   1d783:	mov    ecx,0xff
   1d788:	je     0x1d7a6
   1d78a:	test   dl,0x3
   1d78d:	je     0x1d7a6
   1d78f:	movzx  esi,BYTE PTR [edx]
   1d792:	xor    esi,eax
   1d794:	and    esi,ecx
   1d796:	shr    eax,0x8
   1d799:	xor    eax,DWORD PTR [esi*4+0x7be18]
   1d7a0:	inc    edx
   1d7a1:	dec    DWORD PTR [ebp+0x8]
   1d7a4:	jne    0x1d78a
   1d7a6:	cmp    DWORD PTR [ebp+0x8],0x20
   1d7aa:	push   ebx
   1d7ab:	push   edi
   1d7ac:	push   0x4
   1d7ae:	mov    esi,edx
   1d7b0:	pop    edi
   1d7b1:	jb     0x1d975
   1d7b7:	mov    edx,DWORD PTR [ebp+0x8]
   1d7ba:	shr    edx,0x5
   1d7bd:	mov    DWORD PTR [ebp-0x4],edx
   1d7c0:	xor    eax,DWORD PTR [esi]
   1d7c2:	add    esi,edi
   1d7c4:	mov    edx,eax
   1d7c6:	shr    edx,0x10
   1d7c9:	mov    ebx,eax
   1d7cb:	shr    ebx,0x8
   1d7ce:	and    edx,ecx
   1d7d0:	mov    edx,DWORD PTR [edx*4+0x7c218]
   1d7d7:	and    ebx,ecx
   1d7d9:	xor    edx,DWORD PTR [ebx*4+0x7c618]
   1d7e0:	mov    ebx,eax
   1d7e2:	shr    ebx,0x18
   1d7e5:	xor    edx,DWORD PTR [ebx*4+0x7be18]
   1d7ec:	and    eax,ecx
   1d7ee:	xor    edx,DWORD PTR [eax*4+0x7ca18]
   1d7f5:	xor    edx,DWORD PTR [esi]
   1d7f7:	add    esi,edi
   1d7f9:	mov    eax,edx
   1d7fb:	shr    eax,0x10
   1d7fe:	mov    ebx,edx
   1d800:	shr    ebx,0x8
   1d803:	and    eax,ecx
   1d805:	mov    eax,DWORD PTR [eax*4+0x7c218]
   1d80c:	and    ebx,ecx
   1d80e:	xor    eax,DWORD PTR [ebx*4+0x7c618]
   1d815:	mov    ebx,edx
   1d817:	shr    ebx,0x18
   1d81a:	xor    eax,DWORD PTR [ebx*4+0x7be18]
   1d821:	and    edx,ecx
   1d823:	xor    eax,DWORD PTR [edx*4+0x7ca18]
   1d82a:	xor    eax,DWORD PTR [esi]
   1d82c:	add    esi,edi
   1d82e:	mov    edx,eax
   1d830:	shr    edx,0x10
   1d833:	mov    ebx,eax
   1d835:	and    edx,ecx
   1d837:	mov    edx,DWORD PTR [edx*4+0x7c218]
   1d83e:	shr    ebx,0x8
   1d841:	and    ebx,ecx
   1d843:	xor    edx,DWORD PTR [ebx*4+0x7c618]
   1d84a:	mov    ebx,eax
   1d84c:	shr    ebx,0x18
   1d84f:	xor    edx,DWORD PTR [ebx*4+0x7be18]
   1d856:	and    eax,ecx
   1d858:	xor    edx,DWORD PTR [eax*4+0x7ca18]
   1d85f:	xor    edx,DWORD PTR [esi]
   1d861:	add    esi,edi
   1d863:	mov    eax,edx
   1d865:	shr    eax,0x10
   1d868:	mov    ebx,edx
   1d86a:	shr    ebx,0x8
   1d86d:	and    eax,ecx
   1d86f:	mov    eax,DWORD PTR [eax*4+0x7c218]
   1d876:	and    ebx,ecx
   1d878:	xor    eax,DWORD PTR [ebx*4+0x7c618]
   1d87f:	mov    ebx,edx
   1d881:	shr    ebx,0x18
   1d884:	xor    eax,DWORD PTR [ebx*4+0x7be18]
   1d88b:	and    edx,ecx
   1d88d:	xor    eax,DWORD PTR [edx*4+0x7ca18]
   1d894:	xor    eax,DWORD PTR [esi]
   1d896:	add    esi,edi
   1d898:	mov    edx,eax
   1d89a:	shr    edx,0x10
   1d89d:	mov    ebx,eax
   1d89f:	and    edx,ecx
   1d8a1:	mov    edx,DWORD PTR [edx*4+0x7c218]
   1d8a8:	shr    ebx,0x8
   1d8ab:	and    ebx,ecx
   1d8ad:	xor    edx,DWORD PTR [ebx*4+0x7c618]
   1d8b4:	mov    ebx,eax
   1d8b6:	shr    ebx,0x18
   1d8b9:	xor    edx,DWORD PTR [ebx*4+0x7be18]
   1d8c0:	and    eax,ecx
   1d8c2:	xor    edx,DWORD PTR [eax*4+0x7ca18]
   1d8c9:	xor    edx,DWORD PTR [esi]
   1d8cb:	add    esi,edi
   1d8cd:	mov    eax,edx
   1d8cf:	shr    eax,0x10
   1d8d2:	and    eax,ecx
   1d8d4:	mov    ebx,edx
   1d8d6:	mov    eax,DWORD PTR [eax*4+0x7c218]
   1d8dd:	shr    ebx,0x8
   1d8e0:	and    ebx,ecx
   1d8e2:	xor    eax,DWORD PTR [ebx*4+0x7c618]
   1d8e9:	mov    ebx,edx
   1d8eb:	shr    ebx,0x18
   1d8ee:	xor    eax,DWORD PTR [ebx*4+0x7be18]
   1d8f5:	and    edx,ecx
   1d8f7:	xor    eax,DWORD PTR [edx*4+0x7ca18]
   1d8fe:	sub    DWORD PTR [ebp+0x8],0x20
   1d902:	xor    eax,DWORD PTR [esi]
   1d904:	add    esi,edi
   1d906:	mov    edx,eax
   1d908:	mov    ebx,eax
   1d90a:	shr    edx,0x10
   1d90d:	shr    ebx,0x8
   1d910:	and    edx,ecx
   1d912:	mov    edx,DWORD PTR [edx*4+0x7c218]
   1d919:	and    ebx,ecx
   1d91b:	xor    edx,DWORD PTR [ebx*4+0x7c618]
   1d922:	mov    ebx,eax
   1d924:	shr    ebx,0x18
   1d927:	xor    edx,DWORD PTR [ebx*4+0x7be18]
   1d92e:	and    eax,ecx
   1d930:	xor    edx,DWORD PTR [eax*4+0x7ca18]
   1d937:	xor    edx,DWORD PTR [esi]
   1d939:	add    esi,edi
   1d93b:	mov    eax,edx
   1d93d:	shr    eax,0x10
   1d940:	and    eax,ecx
   1d942:	mov    eax,DWORD PTR [eax*4+0x7c218]
   1d949:	mov    ebx,edx
   1d94b:	shr    ebx,0x8
   1d94e:	and    ebx,ecx
   1d950:	xor    eax,DWORD PTR [ebx*4+0x7c618]
   1d957:	mov    ebx,edx
   1d959:	shr    ebx,0x18
   1d95c:	xor    eax,DWORD PTR [ebx*4+0x7be18]
   1d963:	and    edx,ecx
   1d965:	xor    eax,DWORD PTR [edx*4+0x7ca18]
   1d96c:	dec    DWORD PTR [ebp-0x4]
   1d96f:	jne    0x1d7c0
   1d975:	cmp    DWORD PTR [ebp+0x8],edi
   1d978:	jb     0x1d9c2
   1d97a:	mov    edx,DWORD PTR [ebp+0x8]
   1d97d:	shr    edx,0x2
   1d980:	mov    DWORD PTR [ebp-0x4],edx
   1d983:	xor    eax,DWORD PTR [esi]
   1d985:	sub    DWORD PTR [ebp+0x8],edi
   1d988:	mov    edx,eax
   1d98a:	shr    edx,0x10
   1d98d:	and    edx,ecx
   1d98f:	mov    edx,DWORD PTR [edx*4+0x7c218]
   1d996:	mov    ebx,eax
   1d998:	shr    ebx,0x8
   1d99b:	and    ebx,ecx
   1d99d:	xor    edx,DWORD PTR [ebx*4+0x7c618]
   1d9a4:	mov    ebx,eax
   1d9a6:	shr    ebx,0x18
   1d9a9:	xor    edx,DWORD PTR [ebx*4+0x7be18]
   1d9b0:	and    eax,ecx
   1d9b2:	xor    edx,DWORD PTR [eax*4+0x7ca18]
   1d9b9:	add    esi,edi
   1d9bb:	dec    DWORD PTR [ebp-0x4]
   1d9be:	mov    eax,edx
   1d9c0:	jne    0x1d983
   1d9c2:	cmp    DWORD PTR [ebp+0x8],0x0
   1d9c6:	pop    edi
   1d9c7:	pop    ebx
   1d9c8:	je     0x1d9e1
   1d9ca:	movzx  edx,BYTE PTR [esi]
   1d9cd:	xor    edx,eax
   1d9cf:	and    edx,ecx
   1d9d1:	shr    eax,0x8
   1d9d4:	xor    eax,DWORD PTR [edx*4+0x7be18]
   1d9db:	inc    esi
   1d9dc:	dec    DWORD PTR [ebp+0x8]
   1d9df:	jne    0x1d9ca
   1d9e1:	not    eax
   1d9e3:	pop    esi
   1d9e4:	leave  
   1d9e5:	ret    0x4
   1d9e8:	int3   
   1d9e9:	int3   
   1d9ea:	int3   
   1d9eb:	int3   
   1d9ec:	int3   
   1d9ed:	int3   
   1d9ee:	mov    edi,edi
   1d9f0:	push   ebp
   1d9f1:	mov    ebp,esp
   1d9f3:	mov    edx,DWORD PTR [ebp+0xc]
   1d9f6:	test   edx,edx
   1d9f8:	jne    0x1d9fe
   1d9fa:	xor    eax,eax
   1d9fc:	jmp    0x1da09
   1d9fe:	push   DWORD PTR [ebp+0x10]
   1da01:	mov    eax,DWORD PTR [ebp+0x8]
   1da04:	call   0x1d776
   1da09:	pop    ebp
   1da0a:	ret    0xc
   1da0d:	int3   
   1da0e:	int3   
   1da0f:	int3   
   1da10:	int3   
   1da11:	int3   
   1da12:	mov    edi,edi
   1da14:	push   ebp
   1da15:	mov    ebp,esp
   1da17:	push   0x20
   1da19:	push   0x61737973
   1da1e:	push   DWORD PTR [ebp+0x8]
   1da21:	push   0x1
   1da23:	call   DWORD PTR ds:0x1f018
   1da29:	test   eax,eax
   1da2b:	jne    0x1da38
   1da2d:	push   0xc000009a
   1da32:	call   DWORD PTR ds:0x1f014
   1da38:	pop    ebp
   1da39:	ret    
   1da3a:	int3   
   1da3b:	int3   
   1da3c:	int3   
   1da3d:	int3   
   1da3e:	int3   
   1da3f:	int3   
   1da40:	mov    edi,edi
   1da42:	push   ebp
   1da43:	mov    ebp,esp
   1da45:	cmp    DWORD PTR [ebp+0x8],0x0
   1da49:	je     0x1da56
   1da4b:	push   0x0
   1da4d:	push   DWORD PTR [ebp+0x8]
   1da50:	call   DWORD PTR ds:0x1f01c
   1da56:	pop    ebp
   1da57:	ret    
   1da58:	int3   
   1da59:	int3   
   1da5a:	int3   
   1da5b:	int3   
   1da5c:	int3   
   1da5d:	cmp    ecx,DWORD PTR ds:0x7eb3c
   1da63:	jne    0x1da68
   1da65:	ret    0x0
   1da68:	jmp    0x1da72
   1da6d:	int3   
   1da6e:	int3   
   1da6f:	int3   
   1da70:	int3   
   1da71:	int3   
   1da72:	mov    edi,edi
   1da74:	push   ebp
   1da75:	mov    ebp,esp
   1da77:	push   ecx
   1da78:	mov    DWORD PTR [ebp-0x4],ecx
   1da7b:	push   0x0
   1da7d:	push   DWORD PTR ds:0x7eb40
   1da83:	push   DWORD PTR ds:0x7eb3c
   1da89:	push   DWORD PTR [ebp-0x4]
   1da8c:	push   0xf7
   1da91:	call   DWORD PTR ds:0x1f060
   1da97:	int3   
   1da98:	int3   
   1da99:	int3   
   1da9a:	int3   
   1da9b:	int3   
   1da9c:	int3   
   1da9d:	int3   
   1da9e:	jmp    DWORD PTR ds:0x1f008
   1daa4:	int3   
   1daa5:	int3   
   1daa6:	int3   
   1daa7:	int3   
   1daa8:	int3   
   1daa9:	int3   
   1daaa:	jmp    DWORD PTR ds:0x1f00c
   1dab0:	int3   
   1dab1:	int3   
   1dab2:	int3   
   1dab3:	int3   
   1dab4:	int3   
   1dab5:	int3   
   1dab6:	jmp    DWORD PTR ds:0x1f010
   1dabc:	int3   
   1dabd:	int3   
   1dabe:	int3   
   1dabf:	int3   
   1dac0:	int3   
   1dac1:	int3   
   1dac2:	jmp    DWORD PTR ds:0x1f030
   1dac8:	int3   
   1dac9:	int3   
   1daca:	int3   
   1dacb:	int3   
   1dacc:	int3   
   1dacd:	int3   
   1dace:	jmp    DWORD PTR ds:0x1f034
   1dad4:	int3   
   1dad5:	int3   
   1dad6:	int3   
   1dad7:	int3   
   1dad8:	int3   
   1dad9:	int3   
   1dada:	jmp    DWORD PTR ds:0x1f03c
   1dae0:	int3   
   1dae1:	int3   
   1dae2:	int3   
   1dae3:	int3   
   1dae4:	int3   
   1dae5:	int3   
   1dae6:	jmp    DWORD PTR ds:0x1f040
   1daec:	int3   
   1daed:	int3   
   1daee:	int3   
   1daef:	int3   
   1daf0:	int3   
   1daf1:	int3   
   1daf2:	jmp    DWORD PTR ds:0x1f04c
   1daf8:	int3   
   1daf9:	int3   
   1dafa:	int3   
   1dafb:	int3   
   1dafc:	int3   
   1dafd:	int3   
   1dafe:	jmp    DWORD PTR ds:0x1f054
   1db04:	int3   
   1db05:	int3   
   1db06:	int3   
   1db07:	int3   
   1db08:	int3   
   1db09:	int3   
   1db0a:	int3   
   1db0b:	int3   
   1db0c:	push   0x1db70
   1db11:	push   DWORD PTR fs:0x0
   1db18:	mov    eax,DWORD PTR [esp+0x10]
   1db1c:	mov    DWORD PTR [esp+0x10],ebp
   1db20:	lea    ebp,[esp+0x10]
   1db24:	sub    esp,eax
   1db26:	push   ebx
   1db27:	push   esi
   1db28:	push   edi
   1db29:	mov    eax,ds:0x7eb3c
   1db2e:	xor    DWORD PTR [ebp-0x4],eax
   1db31:	xor    eax,ebp
   1db33:	push   eax
   1db34:	mov    DWORD PTR [ebp-0x18],esp
   1db37:	push   DWORD PTR [ebp-0x8]
   1db3a:	mov    eax,DWORD PTR [ebp-0x4]
   1db3d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1db44:	mov    DWORD PTR [ebp-0x8],eax
   1db47:	lea    eax,[ebp-0x10]
   1db4a:	mov    fs:0x0,eax
   1db50:	ret    
   1db51:	mov    ecx,DWORD PTR [ebp-0x10]
   1db54:	mov    DWORD PTR fs:0x0,ecx
   1db5b:	pop    ecx
   1db5c:	pop    edi
   1db5d:	pop    edi
   1db5e:	pop    esi
   1db5f:	pop    ebx
   1db60:	mov    esp,ebp
   1db62:	pop    ebp
   1db63:	push   ecx
   1db64:	ret    
   1db65:	int3   
   1db66:	int3   
   1db67:	int3   
   1db68:	int3   
   1db69:	int3   
   1db6a:	int3   
   1db6b:	int3   
   1db6c:	int3   
   1db6d:	int3   
   1db6e:	int3   
   1db6f:	int3   
   1db70:	mov    edi,edi
   1db72:	push   ebp
   1db73:	mov    ebp,esp
   1db75:	sub    esp,0x14
   1db78:	push   ebx
   1db79:	mov    ebx,DWORD PTR [ebp+0xc]
   1db7c:	push   esi
   1db7d:	mov    esi,DWORD PTR [ebx+0x8]
   1db80:	xor    esi,DWORD PTR ds:0x7eb3c
   1db86:	push   edi
   1db87:	mov    eax,DWORD PTR [esi]
   1db89:	mov    BYTE PTR [ebp-0x1],0x0
   1db8d:	mov    DWORD PTR [ebp-0x8],0x1
   1db94:	lea    edi,[ebx+0x10]
   1db97:	cmp    eax,0xfffffffe
   1db9a:	je     0x1dba9
   1db9c:	mov    ecx,DWORD PTR [esi+0x4]
   1db9f:	add    ecx,edi
   1dba1:	xor    ecx,DWORD PTR [eax+edi*1]
   1dba4:	call   0x1da5d
   1dba9:	mov    ecx,DWORD PTR [esi+0xc]
   1dbac:	mov    eax,DWORD PTR [esi+0x8]
   1dbaf:	add    ecx,edi
   1dbb1:	xor    ecx,DWORD PTR [eax+edi*1]
   1dbb4:	call   0x1da5d
   1dbb9:	mov    eax,DWORD PTR [ebp+0x8]
   1dbbc:	test   BYTE PTR [eax+0x4],0x66
   1dbc0:	jne    0x1dca8
   1dbc6:	mov    ecx,DWORD PTR [ebp+0x10]
   1dbc9:	lea    edx,[ebp-0x14]
   1dbcc:	mov    DWORD PTR [ebx-0x4],edx
   1dbcf:	mov    ebx,DWORD PTR [ebx+0xc]
   1dbd2:	mov    DWORD PTR [ebp-0x14],eax
   1dbd5:	mov    DWORD PTR [ebp-0x10],ecx
   1dbd8:	cmp    ebx,0xfffffffe
   1dbdb:	je     0x1dc3c
   1dbdd:	lea    ecx,[ecx+0x0]
   1dbe0:	lea    eax,[ebx+ebx*2]
   1dbe3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1dbe7:	lea    eax,[esi+eax*4+0x10]
   1dbeb:	mov    DWORD PTR [ebp-0xc],eax
   1dbee:	mov    eax,DWORD PTR [eax]
   1dbf0:	mov    DWORD PTR [ebp+0x8],eax
   1dbf3:	test   ecx,ecx
   1dbf5:	je     0x1dc0b
   1dbf7:	mov    edx,edi
   1dbf9:	call   0x1ddb1
   1dbfe:	mov    BYTE PTR [ebp-0x1],0x1
   1dc02:	test   eax,eax
   1dc04:	jl     0x1dc46
   1dc06:	jg     0x1dc4f
   1dc08:	mov    eax,DWORD PTR [ebp+0x8]
   1dc0b:	mov    ebx,eax
   1dc0d:	cmp    eax,0xfffffffe
   1dc10:	jne    0x1dbe0
   1dc12:	cmp    BYTE PTR [ebp-0x1],0x0
   1dc16:	je     0x1dc3c
   1dc18:	mov    eax,DWORD PTR [esi]
   1dc1a:	cmp    eax,0xfffffffe
   1dc1d:	je     0x1dc2c
   1dc1f:	mov    ecx,DWORD PTR [esi+0x4]
   1dc22:	add    ecx,edi
   1dc24:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc27:	call   0x1da5d
   1dc2c:	mov    ecx,DWORD PTR [esi+0xc]
   1dc2f:	mov    edx,DWORD PTR [esi+0x8]
   1dc32:	add    ecx,edi
   1dc34:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc37:	call   0x1da5d
   1dc3c:	mov    eax,DWORD PTR [ebp-0x8]
   1dc3f:	pop    edi
   1dc40:	pop    esi
   1dc41:	pop    ebx
   1dc42:	mov    esp,ebp
   1dc44:	pop    ebp
   1dc45:	ret    
   1dc46:	mov    DWORD PTR [ebp-0x8],0x0
   1dc4d:	jmp    0x1dc18
   1dc4f:	mov    ecx,DWORD PTR [ebp+0xc]
   1dc52:	call   0x1ddda
   1dc57:	mov    eax,DWORD PTR [ebp+0xc]
   1dc5a:	cmp    DWORD PTR [eax+0xc],ebx
   1dc5d:	je     0x1dc71
   1dc5f:	push   0x7eb3c
   1dc64:	push   edi
   1dc65:	mov    edx,ebx
   1dc67:	mov    ecx,eax
   1dc69:	call   0x1ddf4
   1dc6e:	mov    eax,DWORD PTR [ebp+0xc]
   1dc71:	mov    ecx,DWORD PTR [ebp+0x8]
   1dc74:	mov    DWORD PTR [eax+0xc],ecx
   1dc77:	mov    eax,DWORD PTR [esi]
   1dc79:	cmp    eax,0xfffffffe
   1dc7c:	je     0x1dc8b
   1dc7e:	mov    ecx,DWORD PTR [esi+0x4]
   1dc81:	add    ecx,edi
   1dc83:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc86:	call   0x1da5d
   1dc8b:	mov    ecx,DWORD PTR [esi+0xc]
   1dc8e:	mov    edx,DWORD PTR [esi+0x8]
   1dc91:	add    ecx,edi
   1dc93:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc96:	call   0x1da5d
   1dc9b:	mov    eax,DWORD PTR [ebp-0xc]
   1dc9e:	mov    ecx,DWORD PTR [eax+0x8]
   1dca1:	mov    edx,edi
   1dca3:	call   0x1ddc8
   1dca8:	mov    edx,0xfffffffe
   1dcad:	cmp    DWORD PTR [ebx+0xc],edx
   1dcb0:	je     0x1dc3c
   1dcb2:	push   0x7eb3c
   1dcb7:	push   edi
   1dcb8:	mov    ecx,ebx
   1dcba:	call   0x1ddf4
   1dcbf:	jmp    0x1dc18
   1dcc4:	int3   
   1dcc5:	int3   
   1dcc6:	int3   
   1dcc7:	int3   
   1dcc8:	int3   
   1dcc9:	int3   
   1dcca:	int3   
   1dccb:	int3   
   1dccc:	push   ebx
   1dccd:	push   esi
   1dcce:	push   edi
   1dccf:	mov    edx,DWORD PTR [esp+0x10]
   1dcd3:	mov    eax,DWORD PTR [esp+0x14]
   1dcd7:	mov    ecx,DWORD PTR [esp+0x18]
   1dcdb:	push   ebp
   1dcdc:	push   edx
   1dcdd:	push   eax
   1dcde:	push   ecx
   1dcdf:	push   ecx
   1dce0:	push   0x1dd4f
   1dce5:	push   DWORD PTR fs:0x0
   1dcec:	mov    eax,ds:0x7eb3c
   1dcf1:	xor    eax,esp
   1dcf3:	mov    DWORD PTR [esp+0x8],eax
   1dcf7:	mov    DWORD PTR fs:0x0,esp
   1dcfe:	mov    eax,DWORD PTR [esp+0x30]
   1dd02:	mov    ebx,DWORD PTR [eax+0x8]
   1dd05:	mov    ecx,DWORD PTR [esp+0x2c]
   1dd09:	xor    ebx,DWORD PTR [ecx]
   1dd0b:	mov    esi,DWORD PTR [eax+0xc]
   1dd0e:	cmp    esi,0xfffffffe
   1dd11:	je     0x1dd41
   1dd13:	mov    edx,DWORD PTR [esp+0x34]
   1dd17:	cmp    edx,0xfffffffe
   1dd1a:	je     0x1dd20
   1dd1c:	cmp    esi,edx
   1dd1e:	jbe    0x1dd41
   1dd20:	lea    esi,[esi+esi*2]
   1dd23:	lea    ebx,[ebx+esi*4+0x10]
   1dd27:	mov    ecx,DWORD PTR [ebx]
   1dd29:	mov    DWORD PTR [eax+0xc],ecx
   1dd2c:	cmp    DWORD PTR [ebx+0x4],0x0
   1dd30:	jne    0x1dcfe
   1dd32:	mov    ecx,0x1
   1dd37:	mov    eax,DWORD PTR [ebx+0x8]
   1dd3a:	call   0x1de6c
   1dd3f:	jmp    0x1dcfe
   1dd41:	pop    DWORD PTR fs:0x0
   1dd48:	add    esp,0x18
   1dd4b:	pop    edi
   1dd4c:	pop    esi
   1dd4d:	pop    ebx
   1dd4e:	ret    
   1dd4f:	mov    ecx,DWORD PTR [esp+0x4]
   1dd53:	test   DWORD PTR [ecx+0x4],0x6
   1dd5a:	mov    eax,0x1
   1dd5f:	je     0x1dd94
   1dd61:	mov    eax,DWORD PTR [esp+0x8]
   1dd65:	mov    ecx,DWORD PTR [eax+0x8]
   1dd68:	xor    ecx,eax
   1dd6a:	call   0x1da5d
   1dd6f:	push   ebp
   1dd70:	mov    ebp,DWORD PTR [eax+0x18]
   1dd73:	push   DWORD PTR [eax+0xc]
   1dd76:	push   DWORD PTR [eax+0x10]
   1dd79:	push   DWORD PTR [eax+0x14]
   1dd7c:	call   0x1dccc
   1dd81:	add    esp,0xc
   1dd84:	pop    ebp
   1dd85:	mov    eax,DWORD PTR [esp+0x8]
   1dd89:	mov    edx,DWORD PTR [esp+0x10]
   1dd8d:	mov    DWORD PTR [edx],eax
   1dd8f:	mov    eax,0x3
   1dd94:	ret    
   1dd95:	push   ebp
   1dd96:	mov    ecx,DWORD PTR [esp+0x8]
   1dd9a:	mov    ebp,DWORD PTR [ecx]
   1dd9c:	push   DWORD PTR [ecx+0x1c]
   1dd9f:	push   DWORD PTR [ecx+0x18]
   1dda2:	push   DWORD PTR [ecx+0x28]
   1dda5:	call   0x1dccc
   1ddaa:	add    esp,0xc
   1ddad:	pop    ebp
   1ddae:	ret    0x4
   1ddb1:	push   ebp
   1ddb2:	push   esi
   1ddb3:	push   edi
   1ddb4:	push   ebx
   1ddb5:	mov    ebp,edx
   1ddb7:	xor    eax,eax
   1ddb9:	xor    ebx,ebx
   1ddbb:	xor    edx,edx
   1ddbd:	xor    esi,esi
   1ddbf:	xor    edi,edi
   1ddc1:	call   ecx
   1ddc3:	pop    ebx
   1ddc4:	pop    edi
   1ddc5:	pop    esi
   1ddc6:	pop    ebp
   1ddc7:	ret    
   1ddc8:	mov    ebp,edx
   1ddca:	mov    esi,ecx
   1ddcc:	mov    eax,ecx
   1ddce:	xor    eax,eax
   1ddd0:	xor    ebx,ebx
   1ddd2:	xor    ecx,ecx
   1ddd4:	xor    edx,edx
   1ddd6:	xor    edi,edi
   1ddd8:	jmp    esi
   1ddda:	push   ebp
   1dddb:	mov    ebp,esp
   1dddd:	push   ebx
   1ddde:	push   esi
   1dddf:	push   edi
   1dde0:	push   0x0
   1dde2:	push   0x0
   1dde4:	push   0x1ddef
   1dde9:	push   ecx
   1ddea:	call   0x1de74
   1ddef:	pop    edi
   1ddf0:	pop    esi
   1ddf1:	pop    ebx
   1ddf2:	pop    ebp
   1ddf3:	ret    
   1ddf4:	push   ebp
   1ddf5:	mov    ebp,DWORD PTR [esp+0x8]
   1ddf9:	push   edx
   1ddfa:	push   ecx
   1ddfb:	push   DWORD PTR [esp+0x14]
   1ddff:	call   0x1dccc
   1de04:	add    esp,0xc
   1de07:	pop    ebp
   1de08:	ret    0x8
   1de0b:	int3   
   1de0c:	int3   
   1de0d:	int3   
   1de0e:	int3   
   1de0f:	int3   
   1de10:	push   0x1db70
   1de15:	push   DWORD PTR fs:0x0
   1de1c:	mov    eax,DWORD PTR [esp+0x10]
   1de20:	mov    DWORD PTR [esp+0x10],ebp
   1de24:	lea    ebp,[esp+0x10]
   1de28:	sub    esp,eax
   1de2a:	push   ebx
   1de2b:	push   esi
   1de2c:	push   edi
   1de2d:	mov    eax,ds:0x7eb3c
   1de32:	xor    DWORD PTR [ebp-0x4],eax
   1de35:	xor    eax,ebp
   1de37:	mov    DWORD PTR [ebp-0x1c],eax
   1de3a:	push   eax
   1de3b:	mov    DWORD PTR [ebp-0x18],esp
   1de3e:	push   DWORD PTR [ebp-0x8]
   1de41:	mov    eax,DWORD PTR [ebp-0x4]
   1de44:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1de4b:	mov    DWORD PTR [ebp-0x8],eax
   1de4e:	lea    eax,[ebp-0x10]
   1de51:	mov    fs:0x0,eax
   1de57:	ret    
   1de58:	mov    ecx,DWORD PTR [ebp-0x1c]
   1de5b:	xor    ecx,ebp
   1de5d:	call   0x1da5d
   1de62:	jmp    0x1db51
   1de67:	int3   
   1de68:	int3   
   1de69:	int3   
   1de6a:	int3   
   1de6b:	int3   
   1de6c:	call   eax
   1de6e:	ret    
   1de6f:	int3   
   1de70:	int3   
   1de71:	int3   
   1de72:	int3   
   1de73:	int3   
   1de74:	jmp    DWORD PTR ds:0x1f06c
   1de7a:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1de81:	and    BYTE PTR [ebx+0x74],dh
   1de84:	outs   dx,DWORD PTR ds:[esi]
   1de85:	jb     0x1deec
   1de87:	and    BYTE PTR fs:[edx+0x6c],ah
   1de8b:	outs   dx,DWORD PTR ds:[esi]
   1de8c:	arpl   WORD PTR [ebx+0x20],bp
   1de8f:	ins    BYTE PTR es:[edi],dx
   1de90:	outs   dx,BYTE PTR gs:[esi]
   1de92:	addr16 je 0x1defd
   1de95:	jae    0x1de97
   1de97:	int3   
   1de98:	pop    esp
   1de99:	add    BYTE PTR [eax],al
   1de9b:	add    BYTE PTR [eax],al
   1de9d:	add    BYTE PTR [ebx+0x0],ch
   1dea0:	bound  eax,QWORD PTR [eax]
   1dea2:	add    BYTE PTR fs:[ecx+0x0],dh
   1dea6:	add    BYTE PTR [eax],al
   1dea8:	add    BYTE PTR fs:[ebx],dh
   1deab:	add    BYTE PTR [eax+eax*1+0x73],ah
   1deaf:	add    BYTE PTR [eax],al
   1deb1:	add    BYTE PTR [esi+0x0],ch
   1deb4:	je     0x1deb6
   1deb6:	outs   dx,BYTE PTR ds:[esi]
   1deb7:	add    BYTE PTR [eax],al
   1deb9:	add    BYTE PTR [ebx+0x0],dh
   1debc:	jns    0x1debe
   1debe:	jae    0x1dec0
   1dec0:	popa   
   1dec1:	add    BYTE PTR [eax],al
   1dec3:	add    BYTE PTR [edi+0x0],dh
   1dec6:	imul   eax,DWORD PTR [eax],0x65006e
   1decc:	add    BYTE PTR [eax],al
   1dece:	jo     0x1ded0
   1ded0:	arpl   WORD PTR [eax],ax
   1ded2:	imul   eax,DWORD PTR [eax],0x6d0000
   1ded8:	jae    0x1deda
   1deda:	jb     0x1dedc
   1dedc:	add    BYTE PTR [eax],al
   1dede:	je     0x1dee0
   1dee0:	ins    DWORD PTR es:[edi],dx
   1dee1:	add    BYTE PTR [eax+0x0],dh
   1dee4:	add    BYTE PTR [eax],al
   1dee6:	jne    0x1dee8
   1dee8:	jae    0x1deea
   1deea:	bound  eax,QWORD PTR [eax]
   1deec:	add    BYTE PTR [eax],al
   1deee:	outs   dx,DWORD PTR ds:[esi]
   1deef:	add    BYTE PTR [eax+eax*1+0x65],ch
   1def3:	add    BYTE PTR [eax],al
   1def5:	add    BYTE PTR [ecx+0x0],ah
   1def8:	imul   eax,DWORD PTR [eax],0x70
   1defe:	push   0x0
   1df00:	popa   
   1df01:	add    BYTE PTR [ecx+0x0],bh
   1df04:	add    BYTE PTR [eax],al
   1df06:	jbe    0x1df08
   1df08:	add    BYTE PTR gs:[edx+0x0],dh
   1df0c:	add    BYTE PTR [eax],al
   1df0e:	jae    0x1df10
   1df10:	popa   
   1df11:	add    BYTE PTR [ecx+0x0],ch
   1df14:	add    BYTE PTR [eax],al
   1df16:	ins    BYTE PTR es:[edi],dx
   1df17:	add    BYTE PTR [ecx+0x0],ah
   1df1a:	arpl   WORD PTR [eax],ax
   1df1c:	add    BYTE PTR [eax],al
   1df1e:	push   0x0
   1df20:	jo     0x1df22
   1df22:	add    BYTE PTR [bx+si],al
   1df25:	add    BYTE PTR [eax+0x0],ch
   1df28:	imul   eax,DWORD PTR [eax],0x64
   1df2e:	jo     0x1df30
   1df30:	outs   dx,BYTE PTR ds:[esi]
   1df31:	add    BYTE PTR [edi+0x0],ah
   1df34:	add    BYTE PTR [eax],al
   1df36:	outs   dx,BYTE PTR ds:[esi]
   1df37:	add    BYTE PTR [eax+eax*1+0x71],dh
   1df3b:	add    BYTE PTR [eax],al
   1df3d:	add    BYTE PTR [eax],al
   1df3f:	int3   
   1df40:	dec    ebx
   1df41:	add    BYTE PTR [ebp+0x0],ah
   1df44:	push   ebx
   1df45:	add    BYTE PTR [ebp+0x0],ah
   1df48:	jb     0x1df4a
   1df4a:	jbe    0x1df4c
   1df4c:	imul   eax,DWORD PTR [eax],0x650063
   1df52:	inc    esp
   1df53:	add    BYTE PTR [ebp+0x0],ah
   1df56:	jae    0x1df58
   1df58:	arpl   WORD PTR [eax],ax
   1df5a:	jb     0x1df5c
   1df5c:	imul   eax,DWORD PTR [eax],0x740070
   1df62:	outs   dx,DWORD PTR ds:[esi]
   1df63:	add    BYTE PTR [edx+0x0],dh
   1df66:	push   esp
   1df67:	add    BYTE PTR [ecx+0x0],ah
   1df6a:	bound  eax,QWORD PTR [eax]
   1df6c:	ins    BYTE PTR es:[edi],dx
   1df6d:	add    BYTE PTR [ebp+0x0],ah
   1df70:	add    BYTE PTR [eax],al
   1df72:	pop    edx
   1df73:	add    BYTE PTR [edi+0x0],dh
   1df76:	dec    edi
   1df77:	add    BYTE PTR [eax+0x0],dh
   1df7a:	add    BYTE PTR gs:[esi+0x0],ch
   1df7e:	push   eax
   1df7f:	add    BYTE PTR [edx+0x0],dh
   1df82:	outs   dx,DWORD PTR ds:[esi]
   1df83:	add    BYTE PTR [ebx+0x0],ah
   1df86:	add    BYTE PTR gs:[ebx+0x0],dh
   1df8a:	jae    0x1df8c
   1df8c:	add    BYTE PTR [eax],al
   1df8e:	push   eax
   1df8f:	add    BYTE PTR [ebx+0x0],dh
   1df92:	push   ebx
   1df93:	add    BYTE PTR [ebp+0x0],ah
   1df96:	je     0x1df98
   1df98:	dec    esp
   1df99:	add    BYTE PTR [edi+0x0],ch
   1df9c:	popa   
   1df9d:	add    BYTE PTR [eax+eax*1+0x49],ah
   1dfa1:	add    BYTE PTR [ebp+0x0],ch
   1dfa4:	popa   
   1dfa5:	add    BYTE PTR [edi+0x0],ah
   1dfa8:	add    BYTE PTR gs:[esi+0x0],cl
   1dfac:	outs   dx,DWORD PTR ds:[esi]
   1dfad:	add    BYTE PTR [eax+eax*1+0x69],dh
   1dfb1:	add    BYTE PTR [esi+0x0],ah
   1dfb4:	jns    0x1dfb6
   1dfb6:	push   edx
   1dfb7:	add    BYTE PTR [edi+0x0],ch
   1dfba:	jne    0x1dfbc
   1dfbc:	je     0x1dfbe
   1dfbe:	imul   eax,DWORD PTR [eax],0x65006e
   1dfc4:	add    BYTE PTR [eax],al
   1dfc6:	pop    edx
   1dfc7:	add    BYTE PTR [edi+0x0],dh
   1dfca:	inc    esp
   1dfcb:	add    BYTE PTR [ebp+0x0],dh
   1dfce:	jo     0x1dfd0
   1dfd0:	ins    BYTE PTR es:[edi],dx
   1dfd1:	add    BYTE PTR [ecx+0x0],ch
   1dfd4:	arpl   WORD PTR [eax],ax
   1dfd6:	popa   
   1dfd7:	add    BYTE PTR [eax+eax*1+0x65],dh
   1dfdb:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1dfdf:	add    BYTE PTR [ebx+0x0],ch
   1dfe2:	add    BYTE PTR gs:[esi+0x0],ch
   1dfe6:	add    BYTE PTR [eax],al
   1dfe8:	push   eax
   1dfe9:	add    BYTE PTR [ebx+0x0],dh
   1dfec:	push   ebx
   1dfed:	add    BYTE PTR [ebp+0x0],ah
   1dff0:	je     0x1dff2
   1dff2:	inc    ebx
   1dff3:	add    BYTE PTR [edx+0x0],dh
   1dff6:	add    BYTE PTR gs:[ecx+0x0],ah
   1dffa:	je     0x1dffc
   1dffc:	add    BYTE PTR gs:[eax+0x0],dl
   1e000:	jb     0x1e002
   1e002:	outs   dx,DWORD PTR ds:[esi]
   1e003:	add    BYTE PTR [ebx+0x0],ah
   1e006:	add    BYTE PTR gs:[ebx+0x0],dh
   1e00a:	jae    0x1e00c
   1e00c:	dec    esi
   1e00d:	add    BYTE PTR [edi+0x0],ch
   1e010:	je     0x1e012
   1e012:	imul   eax,DWORD PTR [eax],0x790066
   1e018:	push   edx
   1e019:	add    BYTE PTR [edi+0x0],ch
   1e01c:	jne    0x1e01e
   1e01e:	je     0x1e020
   1e020:	imul   eax,DWORD PTR [eax],0x65006e
   1e026:	add    BYTE PTR [eax],al
   1e028:	pop    edx
   1e029:	add    BYTE PTR [edi+0x0],dh
   1e02c:	dec    edi
   1e02d:	add    BYTE PTR [eax+0x0],dh
   1e030:	add    BYTE PTR gs:[esi+0x0],ch
   1e034:	inc    esi
   1e035:	add    BYTE PTR [ecx+0x0],ch
   1e038:	ins    BYTE PTR es:[edi],dx
   1e039:	add    BYTE PTR [ebp+0x0],ah
   1e03c:	add    BYTE PTR [eax],al
   1e03e:	pop    edx
   1e03f:	add    BYTE PTR [edi+0x0],dh
   1e042:	push   ecx
   1e043:	add    BYTE PTR [ebp+0x0],dh
   1e046:	add    BYTE PTR gs:[edx+0x0],dh
   1e04a:	jns    0x1e04c
   1e04c:	dec    ecx
   1e04d:	add    BYTE PTR [esi+0x0],ch
   1e050:	data16 add BYTE PTR [edi+0x0],ch
   1e054:	jb     0x1e056
   1e056:	ins    DWORD PTR es:[edi],dx
   1e057:	add    BYTE PTR [ecx+0x0],ah
   1e05a:	je     0x1e05c
   1e05c:	imul   eax,DWORD PTR [eax],0x6e006f
   1e062:	push   eax
   1e063:	add    BYTE PTR [edx+0x0],dh
   1e066:	outs   dx,DWORD PTR ds:[esi]
   1e067:	add    BYTE PTR [ebx+0x0],ah
   1e06a:	add    BYTE PTR gs:[ebx+0x0],dh
   1e06e:	jae    0x1e070
   1e070:	add    BYTE PTR [eax],al
   1e072:	pop    edx
   1e073:	add    BYTE PTR [edi+0x0],dh
   1e076:	push   ecx
   1e077:	add    BYTE PTR [ebp+0x0],dh
   1e07a:	add    BYTE PTR gs:[edx+0x0],dh
   1e07e:	jns    0x1e080
   1e080:	push   ebx
   1e081:	add    BYTE PTR [ecx+0x0],bh
   1e084:	jae    0x1e086
   1e086:	je     0x1e088
   1e088:	add    BYTE PTR gs:[ebp+0x0],ch
   1e08c:	dec    ecx
   1e08d:	add    BYTE PTR [esi+0x0],ch
   1e090:	data16 add BYTE PTR [edi+0x0],ch
   1e094:	jb     0x1e096
   1e096:	ins    DWORD PTR es:[edi],dx
   1e097:	add    BYTE PTR [ecx+0x0],ah
   1e09a:	je     0x1e09c
   1e09c:	imul   eax,DWORD PTR [eax],0x6e006f
   1e0a2:	add    BYTE PTR [eax],al
   1e0a4:	pop    edx
   1e0a5:	add    BYTE PTR [edi+0x0],dh
   1e0a8:	dec    edi
   1e0a9:	add    BYTE PTR [eax+0x0],dh
   1e0ac:	add    BYTE PTR gs:[esi+0x0],ch
   1e0b0:	dec    ebx
   1e0b1:	add    BYTE PTR [ebp+0x0],ah
   1e0b4:	jns    0x1e0b6
   1e0b6:	add    BYTE PTR [eax],al
   1e0b8:	pop    edx
   1e0b9:	add    BYTE PTR [edi+0x0],dh
   1e0bc:	inc    esp
   1e0bd:	add    BYTE PTR [ebp+0x0],ah
   1e0c0:	ins    BYTE PTR es:[edi],dx
   1e0c1:	add    BYTE PTR [ebp+0x0],ah
   1e0c4:	je     0x1e0c6
   1e0c6:	add    BYTE PTR gs:[ebx+0x0],cl
   1e0ca:	add    BYTE PTR gs:[ecx+0x0],bh
   1e0ce:	add    BYTE PTR [eax],al
   1e0d0:	pop    edx
   1e0d1:	add    BYTE PTR [edi+0x0],dh
   1e0d4:	push   ebx
   1e0d5:	add    BYTE PTR [ebp+0x0],ah
   1e0d8:	je     0x1e0da
   1e0da:	push   esi
   1e0db:	add    BYTE PTR [ecx+0x0],ah
   1e0de:	ins    BYTE PTR es:[edi],dx
   1e0df:	add    BYTE PTR [ebp+0x0],dh
   1e0e2:	add    BYTE PTR gs:[ebx+0x0],cl
   1e0e6:	add    BYTE PTR gs:[ecx+0x0],bh
   1e0ea:	add    BYTE PTR [eax],al
   1e0ec:	pop    edx
   1e0ed:	add    BYTE PTR [edi+0x0],dh
   1e0f0:	push   ecx
   1e0f1:	add    BYTE PTR [ebp+0x0],dh
   1e0f4:	add    BYTE PTR gs:[edx+0x0],dh
   1e0f8:	jns    0x1e0fa
   1e0fa:	push   esi
   1e0fb:	add    BYTE PTR [edi+0x0],ch
   1e0fe:	ins    BYTE PTR es:[edi],dx
   1e0ff:	add    BYTE PTR [ebp+0x0],dh
   1e102:	ins    DWORD PTR es:[edi],dx
   1e103:	add    BYTE PTR [ebp+0x0],ah
   1e106:	dec    ecx
   1e107:	add    BYTE PTR [esi+0x0],ch
   1e10a:	data16 add BYTE PTR [edi+0x0],ch
   1e10e:	jb     0x1e110
   1e110:	ins    DWORD PTR es:[edi],dx
   1e111:	add    BYTE PTR [ecx+0x0],ah
   1e114:	je     0x1e116
   1e116:	imul   eax,DWORD PTR [eax],0x6e006f
   1e11c:	inc    esi
   1e11d:	add    BYTE PTR [ecx+0x0],ch
   1e120:	ins    BYTE PTR es:[edi],dx
   1e121:	add    BYTE PTR [ebp+0x0],ah
   1e124:	add    BYTE PTR [eax],al
   1e126:	pop    edx
   1e127:	add    BYTE PTR [edi+0x0],dh
   1e12a:	inc    ebx
   1e12b:	add    BYTE PTR [edx+0x0],dh
   1e12e:	add    BYTE PTR gs:[ecx+0x0],ah
   1e132:	je     0x1e134
   1e134:	add    BYTE PTR gs:[esi+0x0],al
   1e138:	imul   eax,DWORD PTR [eax],0x65006c
   1e13e:	add    BYTE PTR [eax],al
   1e140:	push   edx
   1e141:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e145:	add    BYTE PTR [ecx+0x0],cl
   1e148:	ins    DWORD PTR es:[edi],dx
   1e149:	add    BYTE PTR [ecx+0x0],ah
   1e14c:	add    BYTE PTR [di+0x0],ah
   1e150:	dec    esi
   1e151:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e155:	add    BYTE PTR [ebp+0x0],ah
   1e158:	popa   
   1e159:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e15d:	add    BYTE PTR [edx+0x0],dh
   1e160:	add    BYTE PTR [eax],al
   1e162:	push   edx
   1e163:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e167:	add    BYTE PTR [ecx+0x0],cl
   1e16a:	ins    DWORD PTR es:[edi],dx
   1e16b:	add    BYTE PTR [ecx+0x0],ah
   1e16e:	add    BYTE PTR [di+0x0],ah
   1e172:	inc    esp
   1e173:	add    BYTE PTR [ecx+0x0],ch
   1e176:	jb     0x1e178
   1e178:	add    BYTE PTR gs:[ebx+0x0],ah
   1e17c:	je     0x1e17e
   1e17e:	outs   dx,DWORD PTR ds:[esi]
   1e17f:	add    BYTE PTR [edx+0x0],dh
   1e182:	jns    0x1e184
   1e184:	inc    ebp
   1e185:	add    BYTE PTR [esi+0x0],ch
   1e188:	je     0x1e18a
   1e18a:	jb     0x1e18c
   1e18c:	jns    0x1e18e
   1e18e:	push   esp
   1e18f:	add    BYTE PTR [edi+0x0],ch
   1e192:	inc    esp
   1e193:	add    BYTE PTR [ecx+0x0],ah
   1e196:	je     0x1e198
   1e198:	popa   
   1e199:	add    BYTE PTR [eax],al
   1e19b:	add    BYTE PTR [edx+0x0],bl
   1e19e:	ja     0x1e1a0
   1e1a0:	dec    edi
   1e1a1:	add    BYTE PTR [eax+0x0],dh
   1e1a4:	add    BYTE PTR gs:[esi+0x0],ch
   1e1a8:	push   eax
   1e1a9:	add    BYTE PTR [edx+0x0],dh
   1e1ac:	outs   dx,DWORD PTR ds:[esi]
   1e1ad:	add    BYTE PTR [ebx+0x0],ah
   1e1b0:	add    BYTE PTR gs:[ebx+0x0],dh
   1e1b4:	jae    0x1e1b6
   1e1b6:	push   esp
   1e1b7:	add    BYTE PTR [edi+0x0],ch
   1e1ba:	imul   eax,DWORD PTR [eax],0x65
   1e1bd:	add    BYTE PTR [esi+0x0],ch
   1e1c0:	add    BYTE PTR [eax],al
   1e1c2:	pop    edx
   1e1c3:	add    BYTE PTR [edi+0x0],dh
   1e1c6:	push   ebx
   1e1c7:	add    BYTE PTR [ebp+0x0],ah
   1e1ca:	je     0x1e1cc
   1e1cc:	dec    ecx
   1e1cd:	add    BYTE PTR [esi+0x0],ch
   1e1d0:	data16 add BYTE PTR [edi+0x0],ch
   1e1d4:	jb     0x1e1d6
   1e1d6:	ins    DWORD PTR es:[edi],dx
   1e1d7:	add    BYTE PTR [ecx+0x0],ah
   1e1da:	je     0x1e1dc
   1e1dc:	imul   eax,DWORD PTR [eax],0x6e006f
   1e1e2:	push   eax
   1e1e3:	add    BYTE PTR [edx+0x0],dh
   1e1e6:	outs   dx,DWORD PTR ds:[esi]
   1e1e7:	add    BYTE PTR [ebx+0x0],ah
   1e1ea:	add    BYTE PTR gs:[ebx+0x0],dh
   1e1ee:	jae    0x1e1f0
   1e1f0:	add    BYTE PTR [eax],al
   1e1f2:	pop    edx
   1e1f3:	add    BYTE PTR [edi+0x0],dh
   1e1f6:	push   ecx
   1e1f7:	add    BYTE PTR [ebp+0x0],dh
   1e1fa:	add    BYTE PTR gs:[edx+0x0],dh
   1e1fe:	jns    0x1e200
   1e200:	dec    ecx
   1e201:	add    BYTE PTR [esi+0x0],ch
   1e204:	data16 add BYTE PTR [edi+0x0],ch
   1e208:	jb     0x1e20a
   1e20a:	ins    DWORD PTR es:[edi],dx
   1e20b:	add    BYTE PTR [ecx+0x0],ah
   1e20e:	je     0x1e210
   1e210:	imul   eax,DWORD PTR [eax],0x6e006f
   1e216:	push   esp
   1e217:	add    BYTE PTR [eax+0x0],ch
   1e21a:	jb     0x1e21c
   1e21c:	add    BYTE PTR gs:[ecx+0x0],ah
   1e220:	add    BYTE PTR fs:[eax],al
   1e223:	add    BYTE PTR [edx+0x0],bl
   1e226:	ja     0x1e228
   1e228:	inc    ebp
   1e229:	add    BYTE PTR [esi+0x0],ch
   1e22c:	jne    0x1e22e
   1e22e:	ins    DWORD PTR es:[edi],dx
   1e22f:	add    BYTE PTR [ebp+0x0],ah
   1e232:	jb     0x1e234
   1e234:	popa   
   1e235:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e239:	add    BYTE PTR [ebx+0x0],cl
   1e23c:	add    BYTE PTR gs:[ecx+0x0],bh
   1e240:	add    BYTE PTR [eax],al
   1e242:	pop    edx
   1e243:	add    BYTE PTR [edi+0x0],dh
   1e246:	dec    esp
   1e247:	add    BYTE PTR [edi+0x0],ch
   1e24a:	popa   
   1e24b:	add    BYTE PTR [eax+eax*1+0x44],ah
   1e24f:	add    BYTE PTR [edx+0x0],dh
   1e252:	imul   eax,DWORD PTR [eax],0x650076
   1e258:	jb     0x1e25a
   1e25a:	add    BYTE PTR [eax],al
   1e25c:	pop    edx
   1e25d:	add    BYTE PTR [edi+0x0],dh
   1e260:	inc    ebx
   1e261:	add    BYTE PTR [edx+0x0],dh
   1e264:	add    BYTE PTR gs:[ecx+0x0],ah
   1e268:	je     0x1e26a
   1e26a:	add    BYTE PTR gs:[ebx+0x0],cl
   1e26e:	add    BYTE PTR gs:[ecx+0x0],bh
   1e272:	add    BYTE PTR [eax],al
   1e274:	dec    ecx
   1e275:	add    BYTE PTR [edi+0x0],ch
   1e278:	inc    esp
   1e279:	add    BYTE PTR [ebp+0x0],ah
   1e27c:	ins    BYTE PTR es:[edi],dx
   1e27d:	add    BYTE PTR [ebp+0x0],ah
   1e280:	je     0x1e282
   1e282:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e287:	add    BYTE PTR [esi+0x0],dh
   1e28a:	imul   eax,DWORD PTR [eax],0x650063
   1e290:	add    BYTE PTR [eax],al
   1e292:	dec    ebx
   1e293:	add    BYTE PTR [ebp+0x0],ah
   1e296:	inc    esp
   1e297:	add    BYTE PTR [ebp+0x0],ah
   1e29a:	je     0x1e29c
   1e29c:	popa   
   1e29d:	add    BYTE PTR [ebx+0x0],ah
   1e2a0:	push   0x72005000
   1e2a5:	add    BYTE PTR [edi+0x0],ch
   1e2a8:	arpl   WORD PTR [eax],ax
   1e2aa:	add    BYTE PTR gs:[ebx+0x0],dh
   1e2ae:	jae    0x1e2b0
   1e2b0:	add    BYTE PTR [eax],al
   1e2b2:	dec    ebx
   1e2b3:	add    BYTE PTR [ebp+0x0],ah
   1e2b6:	inc    ecx
   1e2b7:	add    BYTE PTR [eax+eax*1+0x74],dh
   1e2bb:	add    BYTE PTR [ecx+0x0],ah
   1e2be:	arpl   WORD PTR [eax],ax
   1e2c0:	push   0x72005000
   1e2c5:	add    BYTE PTR [edi+0x0],ch
   1e2c8:	arpl   WORD PTR [eax],ax
   1e2ca:	add    BYTE PTR gs:[ebx+0x0],dh
   1e2ce:	jae    0x1e2d0
   1e2d0:	add    BYTE PTR [eax],al
   1e2d2:	pop    edx
   1e2d3:	add    BYTE PTR [edi+0x0],dh
   1e2d6:	push   ecx
   1e2d7:	add    BYTE PTR [ebp+0x0],dh
   1e2da:	add    BYTE PTR gs:[edx+0x0],dh
   1e2de:	jns    0x1e2e0
   1e2e0:	push   esi
   1e2e1:	add    BYTE PTR [ecx+0x0],ah
   1e2e4:	ins    BYTE PTR es:[edi],dx
   1e2e5:	add    BYTE PTR [ebp+0x0],dh
   1e2e8:	add    BYTE PTR gs:[ebx+0x0],cl
   1e2ec:	add    BYTE PTR gs:[ecx+0x0],bh
   1e2f0:	add    BYTE PTR [eax],al
   1e2f2:	pop    edx
   1e2f3:	add    BYTE PTR [edi+0x0],dh
   1e2f6:	push   edx
   1e2f7:	add    BYTE PTR [ebp+0x0],ah
   1e2fa:	popa   
   1e2fb:	add    BYTE PTR [eax+eax*1+0x46],ah
   1e2ff:	add    BYTE PTR [ecx+0x0],ch
   1e302:	ins    BYTE PTR es:[edi],dx
   1e303:	add    BYTE PTR [ebp+0x0],ah
   1e306:	add    BYTE PTR [eax],al
   1e308:	pop    edx
   1e309:	add    BYTE PTR [edi+0x0],dh
   1e30c:	push   ebx
   1e30d:	add    BYTE PTR [ebp+0x0],ah
   1e310:	je     0x1e312
   1e312:	dec    ecx
   1e313:	add    BYTE PTR [esi+0x0],ch
   1e316:	data16 add BYTE PTR [edi+0x0],ch
   1e31a:	jb     0x1e31c
   1e31c:	ins    DWORD PTR es:[edi],dx
   1e31d:	add    BYTE PTR [ecx+0x0],ah
   1e320:	je     0x1e322
   1e322:	imul   eax,DWORD PTR [eax],0x6e006f
   1e328:	inc    esi
   1e329:	add    BYTE PTR [ecx+0x0],ch
   1e32c:	ins    BYTE PTR es:[edi],dx
   1e32d:	add    BYTE PTR [ebp+0x0],ah
   1e330:	add    BYTE PTR [eax],al
   1e332:	pop    edx
   1e333:	add    BYTE PTR [edi+0x0],dh
   1e336:	push   edi
   1e337:	add    BYTE PTR [edx+0x0],dh
   1e33a:	imul   eax,DWORD PTR [eax],0x650074
   1e340:	inc    esi
   1e341:	add    BYTE PTR [ecx+0x0],ch
   1e344:	ins    BYTE PTR es:[edi],dx
   1e345:	add    BYTE PTR [ebp+0x0],ah
   1e348:	add    BYTE PTR [eax],al
   1e34a:	pop    edx
   1e34b:	add    BYTE PTR [edi+0x0],dh
   1e34e:	push   ecx
   1e34f:	add    BYTE PTR [ebp+0x0],dh
   1e352:	add    BYTE PTR gs:[edx+0x0],dh
   1e356:	jns    0x1e358
   1e358:	dec    ecx
   1e359:	add    BYTE PTR [esi+0x0],ch
   1e35c:	data16 add BYTE PTR [edi+0x0],ch
   1e360:	jb     0x1e362
   1e362:	ins    DWORD PTR es:[edi],dx
   1e363:	add    BYTE PTR [ecx+0x0],ah
   1e366:	je     0x1e368
   1e368:	imul   eax,DWORD PTR [eax],0x6e006f
   1e36e:	inc    esi
   1e36f:	add    BYTE PTR [ecx+0x0],ch
   1e372:	ins    BYTE PTR es:[edi],dx
   1e373:	add    BYTE PTR [ebp+0x0],ah
   1e376:	add    BYTE PTR [eax],al
   1e378:	dec    ecx
   1e379:	add    BYTE PTR [edi+0x0],ch
   1e37c:	inc    ebx
   1e37d:	add    BYTE PTR [edx+0x0],dh
   1e380:	add    BYTE PTR gs:[ecx+0x0],ah
   1e384:	je     0x1e386
   1e386:	add    BYTE PTR gs:[ebx+0x0],dl
   1e38a:	jns    0x1e38c
   1e38c:	ins    DWORD PTR es:[edi],dx
   1e38d:	add    BYTE PTR [edx+0x0],ah
   1e390:	outs   dx,DWORD PTR ds:[esi]
   1e391:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e395:	add    BYTE PTR [ebx+0x0],ah
   1e398:	dec    esp
   1e399:	add    BYTE PTR [ecx+0x0],ch
   1e39c:	outs   dx,BYTE PTR ds:[esi]
   1e39d:	add    BYTE PTR [ebx+0x0],ch
   1e3a0:	add    BYTE PTR [eax],al
   1e3a2:	dec    ecx
   1e3a3:	add    BYTE PTR [edi+0x0],ch
   1e3a6:	inc    ebx
   1e3a7:	add    BYTE PTR [edx+0x0],dh
   1e3aa:	add    BYTE PTR gs:[ecx+0x0],ah
   1e3ae:	je     0x1e3b0
   1e3b0:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e3b5:	add    BYTE PTR [esi+0x0],dh
   1e3b8:	imul   eax,DWORD PTR [eax],0x650063
   1e3be:	add    BYTE PTR [eax],al
   1e3c0:	push   ebx
   1e3c1:	add    BYTE PTR [ebp+0x0],ah
   1e3c4:	inc    ebx
   1e3c5:	add    BYTE PTR [edx+0x0],dh
   1e3c8:	add    BYTE PTR gs:[ecx+0x0],ah
   1e3cc:	je     0x1e3ce
   1e3ce:	add    BYTE PTR gs:[ebx+0x0],al
   1e3d2:	ins    BYTE PTR es:[edi],dx
   1e3d3:	add    BYTE PTR [ecx+0x0],ch
   1e3d6:	add    BYTE PTR gs:[esi+0x0],ch
   1e3da:	je     0x1e3dc
   1e3dc:	push   ebx
   1e3dd:	add    BYTE PTR [ebp+0x0],ah
   1e3e0:	arpl   WORD PTR [eax],ax
   1e3e2:	jne    0x1e3e4
   1e3e4:	jb     0x1e3e6
   1e3e6:	imul   eax,DWORD PTR [eax],0x790074
   1e3ec:	add    BYTE PTR [eax],al
   1e3ee:	pop    edx
   1e3ef:	add    BYTE PTR [edi+0x0],dh
   1e3f2:	dec    ebp
   1e3f3:	add    BYTE PTR [ecx+0x0],ah
   1e3f6:	jo     0x1e3f8
   1e3f8:	push   esi
   1e3f9:	add    BYTE PTR [ecx+0x0],ch
   1e3fc:	add    BYTE PTR gs:[edi+0x0],dh
   1e400:	dec    edi
   1e401:	add    BYTE PTR [esi+0x0],ah
   1e404:	push   ebx
   1e405:	add    BYTE PTR [ebp+0x0],ah
   1e408:	arpl   WORD PTR [eax],ax
   1e40a:	je     0x1e40c
   1e40c:	imul   eax,DWORD PTR [eax],0x6e006f
   1e412:	add    BYTE PTR [eax],al
   1e414:	pop    edx
   1e415:	add    BYTE PTR [edi+0x0],dh
   1e418:	push   ebp
   1e419:	add    BYTE PTR [esi+0x0],ch
   1e41c:	ins    DWORD PTR es:[edi],dx
   1e41d:	add    BYTE PTR [ecx+0x0],ah
   1e420:	jo     0x1e422
   1e422:	push   esi
   1e423:	add    BYTE PTR [ecx+0x0],ch
   1e426:	add    BYTE PTR gs:[edi+0x0],dh
   1e42a:	dec    edi
   1e42b:	add    BYTE PTR [esi+0x0],ah
   1e42e:	push   ebx
   1e42f:	add    BYTE PTR [ebp+0x0],ah
   1e432:	arpl   WORD PTR [eax],ax
   1e434:	je     0x1e436
   1e436:	imul   eax,DWORD PTR [eax],0x6e006f
   1e43c:	add    BYTE PTR [eax],al
   1e43e:	dec    ebx
   1e43f:	add    BYTE PTR [ebp+0x0],ah
   1e442:	dec    ecx
   1e443:	add    BYTE PTR [esi+0x0],ch
   1e446:	imul   eax,DWORD PTR [eax],0x690074
   1e44c:	popa   
   1e44d:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e451:	add    BYTE PTR [edx+0x0],bh
   1e454:	add    BYTE PTR gs:[ebp+0x0],cl
   1e458:	jne    0x1e45a
   1e45a:	je     0x1e45c
   1e45c:	add    BYTE PTR gs:[eax+0x0],bh
   1e460:	add    BYTE PTR [eax],al
   1e462:	push   edx
   1e463:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e467:	add    BYTE PTR [ecx+0x0],cl
   1e46a:	outs   dx,BYTE PTR ds:[esi]
   1e46b:	add    BYTE PTR [ecx+0x0],ch
   1e46e:	je     0x1e470
   1e470:	push   ebp
   1e471:	add    BYTE PTR [esi+0x0],ch
   1e474:	imul   eax,DWORD PTR [eax],0x6f0063
   1e47a:	add    BYTE PTR fs:[ebp+0x0],ah
   1e47e:	push   ebx
   1e47f:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e483:	add    BYTE PTR [ecx+0x0],ch
   1e486:	outs   dx,BYTE PTR ds:[esi]
   1e487:	add    BYTE PTR [edi+0x0],ah
   1e48a:	add    BYTE PTR [eax],al
   1e48c:	dec    edi
   1e48d:	add    BYTE PTR [edx+0x0],ah
   1e490:	data16 add BYTE PTR [eax+eax*1+0x65],al
   1e495:	add    BYTE PTR [edx+0x0],dh
   1e498:	add    BYTE PTR gs:[esi+0x0],ah
   1e49c:	add    BYTE PTR gs:[edx+0x0],dh
   1e4a0:	add    BYTE PTR gs:[esi+0x0],ch
   1e4a4:	arpl   WORD PTR [eax],ax
   1e4a6:	add    BYTE PTR gs:[edi+0x0],cl
   1e4aa:	bound  eax,QWORD PTR [eax]
   1e4ac:	push   0x0
   1e4ae:	add    BYTE PTR gs:[ebx+0x0],ah
   1e4b2:	je     0x1e4b4
   1e4b4:	add    BYTE PTR [eax],al
   1e4b6:	push   eax
   1e4b7:	add    BYTE PTR [ebx+0x0],dh
   1e4ba:	dec    esp
   1e4bb:	add    BYTE PTR [edi+0x0],ch
   1e4be:	outs   dx,DWORD PTR ds:[esi]
   1e4bf:	add    BYTE PTR [ebx+0x0],ch
   1e4c2:	jne    0x1e4c4
   1e4c4:	jo     0x1e4c6
   1e4c6:	push   eax
   1e4c7:	add    BYTE PTR [edx+0x0],dh
   1e4ca:	outs   dx,DWORD PTR ds:[esi]
   1e4cb:	add    BYTE PTR [ebx+0x0],ah
   1e4ce:	add    BYTE PTR gs:[ebx+0x0],dh
   1e4d2:	jae    0x1e4d4
   1e4d4:	inc    edx
   1e4d5:	add    BYTE PTR [ecx+0x0],bh
   1e4d8:	push   eax
   1e4d9:	add    BYTE PTR [edx+0x0],dh
   1e4dc:	outs   dx,DWORD PTR ds:[esi]
   1e4dd:	add    BYTE PTR [ebx+0x0],ah
   1e4e0:	add    BYTE PTR gs:[ebx+0x0],dh
   1e4e4:	jae    0x1e4e6
   1e4e6:	dec    ecx
   1e4e7:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e4eb:	add    BYTE PTR [ebx+0x0],cl
   1e4ee:	add    BYTE PTR gs:[edi+0x0],al
   1e4f2:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1e4f7:	add    BYTE PTR [ebp+0x0],dh
   1e4fa:	jb     0x1e4fc
   1e4fc:	jb     0x1e4fe
   1e4fe:	add    BYTE PTR gs:[esi+0x0],ch
   1e502:	je     0x1e504
   1e504:	push   esp
   1e505:	add    BYTE PTR [eax+0x0],ch
   1e508:	jb     0x1e50a
   1e50a:	add    BYTE PTR gs:[ecx+0x0],ah
   1e50e:	add    BYTE PTR fs:[eax],al
   1e511:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1e515:	add    BYTE PTR [ecx],cl
   1e517:	add    BYTE PTR ds:0xe4000000,dl
   1e51d:	sub    eax,0xf138b3a0
   1e522:	aaa    
   1e523:	outs   dx,DWORD PTR ds:[esi]
   1e524:	pop    es
   1e525:	push   cs
   1e526:	mov    eax,0x6456c5cb
   1e52b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e52c:	inc    edx
   1e52d:	add    edx,DWORD PTR [eax+0x6d]
   1e530:	sar    DWORD PTR [edx+ebp*4+0x47],1
   1e534:	dec    esp
   1e535:	arpl   dx,sp
   1e537:	sbb    BYTE PTR [edx+edi*2+0x687b6209],ch
   1e53e:	or     al,0x16
   1e540:	mov    ds:0xe1f04e4a,al
   1e545:	jo     0x1e4e7
   1e547:	mov    al,0x8e
   1e549:	in     al,0x9a
   1e54b:	pushf  
   1e54c:	jae    0x1e5ca
   1e54e:	pop    eax
   1e54f:	mov    al,ds:0xcc00d9f7
   1e554:	push   ebx
   1e555:	add    BYTE PTR [edi],ah
   1e557:	add    BYTE PTR ds:0x6001300,dl
   1e55d:	add    BYTE PTR [eax],al
   1e55f:	add    BYTE PTR [ecx-0x61e3e30d],cl
   1e565:	sub    BYTE PTR [edi+eiz*8],cl
   1e568:	adc    ebx,DWORD PTR [edx]
   1e56a:	mov    cl,0xba
   1e56c:	xchg   BYTE PTR [ebx],ah
   1e56e:	mov    al,ds:0x1316fc14
   1e573:	shl    BYTE PTR [edi+0x4845f9a7],1
   1e579:	ret    
   1e57a:	jno    0x1e555
   1e57c:	xor    cl,bl
   1e57e:	mov    eax,DWORD PTR [ebx-0x4c]
   1e581:	add    DWORD PTR [ebp+0x105b7f],0xffffffcc
   1e588:	dec    ecx
   1e589:	add    BYTE PTR [eax+eax*1],ah
   1e58c:	or     al,0x0
   1e58e:	push   es
   1e58f:	add    BYTE PTR [edx],al
   1e591:	add    BYTE PTR ds:0x15003100,dh
   1e597:	add    BYTE PTR [eax+eax*1],bl
   1e59a:	add    BYTE PTR [eax],al
   1e59c:	(bad)  
   1e59d:	push   eax
   1e59e:	xor    esi,DWORD PTR [esi+0x75ecf6cd]
   1e5a4:	jne    0x1e5bd
   1e5a6:	push   0xffffff80
   1e5a8:	iret   
   1e5a9:	jge    0x1e5f4
   1e5ab:	ret    0x106
   1e5ae:	jmp    0xfd5ca2fa
   1e5b3:	xlat   BYTE PTR ds:[ebx]
   1e5b4:	fidiv  WORD PTR [ebp+edi*8-0x19fdd7b]
   1e5bb:	mov    ds:0xfcc05c1f,eax
   1e5c0:	cmp    BYTE PTR [eax],0x8d
   1e5c3:	jbe    0x1e5a4
   1e5c5:	in     al,dx
   1e5c6:	push   0x5a
   1e5c8:	aas    
   1e5c9:	(bad)  
   1e5ca:	sar    BYTE PTR [ecx+0x2e0052],1
   1e5d0:	dec    edx
   1e5d1:	add    BYTE PTR [eax],cl
   1e5d3:	add    BYTE PTR [eax],al
   1e5d5:	add    BYTE PTR [eax],al
   1e5d7:	add    BYTE PTR [edx+0x62],cl
   1e5da:	add    al,0xf7
   1e5dc:	cli    
   1e5dd:	(bad)  
   1e5de:	mov    eax,0x946d44e2
   1e5e3:	mov    al,0xf7
   1e5e5:	fisttp WORD PTR [ecx]
   1e5e7:	jns    0x1e5b4
   1e5e9:	shl    DWORD PTR [eax+0x4b786303],0x13
   1e5f0:	add    eax,0xe2c2a90f
   1e5f5:	mov    cl,0xad
   1e5f7:	xor    eax,0xc6dbba55
   1e5fc:	add    edi,DWORD PTR [esp+ebx*1+0x23d018b0]
   1e603:	inc    esp
   1e604:	inc    edi
   1e605:	rcr    BYTE PTR [ebp+0x6ecc0037],cl
   1e60b:	add    BYTE PTR [edx],bl
   1e60d:	add    BYTE PTR [eax],dl
   1e60f:	add    BYTE PTR [eax],cl
   1e611:	add    BYTE PTR [eax],al
   1e613:	add    BYTE PTR [edx+0x0],al
   1e616:	dec    edx
   1e617:	add    BYTE PTR [eax],cl
   1e619:	add    BYTE PTR [eax],al
   1e61b:	add    BYTE PTR [eax],al
   1e61d:	add    BYTE PTR [ecx],bh
   1e61f:	pop    eax
   1e620:	call   0xa7af559
   1e625:	test   eax,0x96d6dae9
   1e62a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e62c:	call   0x51dc2374
   1e631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e632:	into   
   1e633:	xchg   edi,eax
   1e634:	(bad)  
   1e635:	shr    esi,cl
   1e637:	sub    BYTE PTR [eax-0x46],al
   1e63a:	sbb    eax,0x69e8b000
   1e63f:	xor    ch,0x74
   1e642:	rcr    BYTE PTR [eax+0x7df97862],cl
   1e648:	pushf  
   1e649:	jns    0x1e5ff
   1e64b:	mov    ebx,0x6feceafb
   1e650:	mov    ecx,0xef376e6c
   1e655:	clc    
   1e656:	dec    ecx
   1e657:	pop    ebx
   1e658:	inc    ebp
   1e659:	arpl   WORD PTR [edx+0x4200f9e0],bx
   1e65f:	daa    
   1e660:	add    BYTE PTR ds:0x2d17cc00,dl
   1e666:	enter  0xf73c,0xfb
   1e66a:	xchg   esi,eax
   1e66b:	inc    eax
   1e66c:	dec    ecx
   1e66d:	pop    ds
   1e66e:	mov    ebx,esp
   1e670:	scas   eax,DWORD PTR es:[edi]
   1e671:	pop    ebx
   1e672:	cld    
   1e673:	shr    BYTE PTR [ecx-0x1b94e548],0x5f
   1e67a:	repnz fst DWORD PTR [edx]
   1e67d:	adc    al,0xfd
   1e67f:	aas    
   1e680:	mov    ch,0x18
   1e682:	pop    esi
   1e683:	cmp    al,0x87
   1e685:	and    DWORD PTR [ecx],edi
   1e687:	mov    BYTE PTR [edx-0x19a05219],bl
   1e68d:	jb     0x1e708
   1e68f:	adc    ecx,eax
   1e691:	jl     0x1e6bc
   1e693:	sub    DWORD PTR [ecx-0x48093c00],esi
   1e699:	mov    ebx,0xcc004682
   1e69e:	push   ebx
   1e69f:	aas    
   1e6a0:	or     DWORD PTR [eax],eax
   1e6a2:	adc    eax,0x33389a00
   1e6a7:	sub    edx,DWORD PTR [edx+edi*8]
   1e6aa:	and    eax,DWORD PTR [edi]
   1e6ac:	jge    0x1e6df
   1e6ae:	rol    esp,0x6a
   1e6b1:	push   ebp
   1e6b2:	pop    ds
   1e6b3:	mov    dl,0x13
   1e6b5:	dec    ebp
   1e6b6:	es mov ch,0xd4
   1e6b9:	inc    esi
   1e6ba:	inc    edi
   1e6bb:	dec    ecx
   1e6bc:	or     ecx,DWORD PTR [ebx]
   1e6be:	imul   ebp,DWORD PTR [ebp-0x1b],0xd358c39b
   1e6c5:	add    BYTE PTR [ebx+0x31],al
   1e6c8:	pop    ss
   1e6c9:	add    al,0x15
   1e6cb:	adc    DWORD PTR [ecx],esi
   1e6cd:	cmp    al,0x1a
   1e6cf:	pop    ss
   1e6d0:	add    al,0x5
   1e6d2:	add    ah,cl
   1e6d4:	les    ebp,FWORD PTR [esi-0x1525bfa3]
   1e6da:	cmp    al,0x37
   1e6dc:	shl    DWORD PTR [esi+edx*8+0x2f],cl
   1e6e0:	imul   ecx,DWORD PTR [eax],0x1e9875b7
   1e6e6:	mov    dl,0x88
   1e6e8:	sahf   
   1e6e9:	and    edx,eax
   1e6eb:	jo     0x1e764
   1e6ed:	xchg   ebx,eax
   1e6ee:	sub    esp,DWORD PTR ds:0x64fdb623
   1e6f4:	inc    ebx
   1e6f5:	mov    bh,0x70
   1e6f7:	adc    eax,0x902cbf43
   1e6fc:	sar    DWORD PTR [ebx+edx*2],1
   1e6ff:	jo     0x1e69f
   1e701:	loop   0x1e702
   1e703:	nop
   1e704:	mov    ebp,0x1ec641
   1e709:	int3   
   1e70a:	dec    esp
   1e70b:	and    ecx,DWORD PTR [esi]
   1e70d:	add    eax,0x100b2528
   1e712:	adc    edx,DWORD PTR [ebx]
   1e714:	or     edi,DWORD PTR [eax]
   1e716:	add    ah,cl
   1e718:	data16 js 0x1e733
   1e71b:	mov    ah,0xc6
   1e71d:	push   ebx
   1e71e:	xor    BYTE PTR [edi],dl
   1e720:	(bad)  [ecx+edi*2]
   1e723:	sub    ebx,esi
   1e725:	(bad)  [ecx]
   1e727:	aad    0xd9
   1e729:	sub    eax,0x9ecffa5f
   1e72e:	mov    ds:0x1fdfd321,eax
   1e733:	inc    ecx
   1e734:	mov    esi,0xead3ebb4
   1e739:	les    ecx,FWORD PTR [esi]
   1e73b:	xchg   esp,eax
   1e73c:	push   ecx
   1e73d:	in     eax,0x9a
   1e73f:	hlt    
   1e740:	inc    esp
   1e742:	cmp    eax,0xcb4d9ea0
   1e747:	clc    
   1e748:	add    ah,cl
   1e74a:	dec    esp
   1e74b:	and    ecx,DWORD PTR [esi]
   1e74d:	add    eax,0x100b2528
   1e752:	adc    edx,DWORD PTR [ebx]
   1e754:	or     ebp,DWORD PTR [esi]
   1e756:	add    ah,cl
   1e758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e759:	cs neg ebp
   1e75c:	mov    dl,0x2c
   1e75e:	popa   
   1e75f:	jne    0x1e783
   1e761:	mov    ds:0x22fd2e8e,al
   1e766:	sti    
   1e767:	sar    BYTE PTR [eax+0x52d3582c],cl
   1e76d:	icebp  
   1e76e:	cmp    DWORD PTR [ebp+0x1e],edi
   1e771:	push   0xffffffc1
   1e773:	fist   DWORD PTR [ebx+eiz*2-0x593e51bc]
   1e77a:	in     eax,0x88
   1e77c:	inc    ebx
   1e77d:	fst    QWORD PTR [esi+0x61]
   1e780:	and    bl,BYTE PTR [esi+0x3b]
   1e783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e784:	xchg   ebx,eax
   1e785:	sahf   
   1e786:	xor    eax,0xd7b768e2
   1e78b:	sub    bh,BYTE PTR [esp+ebx*4-0x2a]
   1e78f:	fadd   DWORD PTR [eax]
   1e791:	int3   
   1e792:	imul   eax,DWORD PTR [eax],0xe
   1e795:	add    BYTE PTR [edi],dl
   1e797:	add    BYTE PTR [eax+eax*1],bl
   1e79a:	or     eax,DWORD PTR [eax]
   1e79c:	or     DWORD PTR [eax],eax
   1e79e:	pop    edi
   1e79f:	add    BYTE PTR [ecx],al
   1e7a1:	add    BYTE PTR [eax+eax*1],bl
   1e7a4:	dec    edx
   1e7a5:	add    BYTE PTR [eax],cl
   1e7a7:	add    BYTE PTR [eax],al
   1e7a9:	add    BYTE PTR [eax],al
   1e7ab:	add    BYTE PTR [edx+edx*2+0xf00b7c],bl
   1e7b2:	bound  esi,QWORD PTR [ebx+0x61aa5314]
   1e7b8:	out    dx,eax
   1e7b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e7ba:	ins    BYTE PTR es:[edi],dx
   1e7bb:	mov    edi,0x658626b3
   1e7c0:	fwait
   1e7c1:	in     eax,0x9a
   1e7c3:	arpl   WORD PTR [ecx+0x1d],dx
   1e7c6:	int    0x81
   1e7c8:	jg     0x1e7ab
   1e7ca:	(bad)  
   1e7cb:	xlat   BYTE PTR ds:[ebx]
   1e7cc:	dec    ecx
   1e7cd:	imul   BYTE PTR [esi+0x48446fcf]
   1e7d3:	xchg   ebp,eax
   1e7d4:	fisub  WORD PTR [esi+0x1a6e00cf]
   1e7da:	adc    BYTE PTR [eax],cl
   1e7dc:	add    BYTE PTR [edx+0x4a],al
   1e7df:	or     BYTE PTR [eax],al
   1e7e1:	add    al,dh
   1e7e3:	(bad)  
   1e7e4:	popa   
   1e7e5:	in     eax,dx
   1e7e6:	add    BYTE PTR ds:0x15c13911,bh
   1e7ec:	cmc    
   1e7ed:	in     al,0xc0
   1e7ef:	push   ebp
   1e7f0:	int    0x25
   1e7f2:	jb     0x1e7e6
   1e7f4:	std    
   1e7f5:	mul    DWORD PTR [ecx+edx*2-0x79]
   1e7f9:	dec    edi
   1e7fa:	int3   
   1e7fb:	xchg   BYTE PTR [ebp+0x122b4edd],dl
   1e801:	ror    BYTE PTR [edi],cl
   1e803:	(bad)  [ecx+0x5c0092ad]
   1e809:	add    BYTE PTR [edi],cl
   1e80b:	add    BYTE PTR [edx],ch
   1e80d:	add    BYTE PTR [edx],cl
   1e80f:	add    BYTE PTR [edi],al
   1e811:	add    BYTE PTR [ecx],dl
   1e813:	add    BYTE PTR [eax],cl
   1e815:	add    BYTE PTR [edi],bh
   1e817:	add    BYTE PTR ds:0x1b000000,bh
   1e81d:	add    BYTE PTR [eax],ch
   1e81f:	add    BYTE PTR [edi],ch
   1e821:	add    BYTE PTR [edx],cl
   1e823:	add    BYTE PTR [edx],cl
   1e825:	add    BYTE PTR [edi],al
   1e827:	add    BYTE PTR [ecx],dl
   1e829:	add    BYTE PTR [eax],cl
   1e82b:	add    BYTE PTR [esi+0x0],bl
   1e82e:	add    DWORD PTR [eax],eax
   1e830:	outs   dx,BYTE PTR ds:[esi]
   1e831:	add    BYTE PTR [eax],al
   1e833:	add    dl,ah
   1e835:	push   ds
   1e836:	push   es
   1e837:	ja     0x1e817
   1e839:	out    0xbf,al
   1e83b:	iret   
   1e83c:	fwait
   1e83d:	test   al,0x29
   1e83f:	xor    eax,0x3abb48c1
   1e844:	arpl   WORD PTR [edx+0x71],sp
   1e847:	add    esi,ebx
   1e849:	mov    dh,BYTE PTR [ecx-0x14950473]
   1e84f:	cli    
   1e850:	fisub  DWORD PTR ds:0x960eb767
   1e856:	xchg   esp,eax
   1e857:	dec    eax
   1e858:	push   ecx
   1e859:	pop    esp
   1e85a:	push   ecx
   1e85b:	in     al,0xc0
   1e85d:	pushf  
   1e85e:	mov    BYTE PTR ds:0x917c05ea,bh
   1e864:	cmp    DWORD PTR [eax],eax
   1e866:	dec    ebx
   1e867:	lods   eax,DWORD PTR ds:[si]
   1e869:	add    BYTE PTR [edx+ecx*8+0x1f],0xdf
   1e86e:	sub    DWORD PTR [eax+0x46],0xca788ea
   1e875:	aaa    
   1e876:	push   ebx
   1e877:	mov    eax,ds:0xc50e22ae
   1e87c:	xor    BYTE PTR [edx-0x30],bh
   1e87f:	adc    dl,BYTE PTR [edi-0x45265751]
   1e885:	scas   eax,DWORD PTR es:[edi]
   1e886:	dec    ecx
   1e887:	lds    esi,FWORD PTR [esi+ebx*8+0x5fe2cc00]
   1e88e:	mov    esi,0x2efa1b92
   1e893:	pop    es
   1e894:	or     ebp,0x4b1502f3
   1e89a:	jns    0x1e84a
   1e89c:	mov    ecx,0x570e5c3c
   1e8a1:	or     BYTE PTR [ecx],0x72
   1e8a4:	xor    BYTE PTR [edi+0x69],bh
   1e8a7:	ror    DWORD PTR [ebx],1
   1e8a9:	pop    edi
   1e8aa:	xor    BYTE PTR [eax+0x4d],dl
   1e8ad:	mov    ecx,ebx
   1e8af:	add    al,0xce
   1e8b1:	(bad)  
   1e8b2:	cld    
   1e8b3:	repnz imul esi,DWORD PTR [ebx-0xa],0x30649341
   1e8bb:	test   eax,0xe5ea96d0
   1e8c0:	ss lock aam 0xd1
   1e8c4:	add    ah,cl
   1e8c6:	add    BYTE PTR cs:[ebp+0x0],bl
   1e8ca:	or     al,BYTE PTR [eax]
   1e8cc:	or     al,BYTE PTR [eax]
   1e8ce:	add    BYTE PTR [eax],al
   1e8d0:	mov    ebx,0x3fab3a15
   1e8d5:	mov    ?,WORD PTR [ebx]
   1e8d7:	sub    BYTE PTR [edx],0xbb
   1e8da:	aad    0xb8
   1e8dc:	push   ebx
   1e8dd:	ins    DWORD PTR es:[edi],dx
   1e8de:	xchg   DWORD PTR [esp+edi*8-0x51],eax
   1e8e2:	cmp    BYTE PTR [ebx+eiz*1],bh
   1e8e5:	and    eax,0x40635253
   1e8ea:	test   esi,0x2a6b0e50
   1e8f0:	(bad)  
   1e8f1:	jmp    0x1e899
   1e8f3:	or     edi,ebp
   1e8f5:	idiv   DWORD PTR [edi]
   1e8f7:	stos   BYTE PTR es:[edi],al
   1e8f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e8f9:	cmp    ecx,ecx
   1e8fb:	stos   DWORD PTR es:[edi],eax
   1e8fc:	mov    bl,BYTE PTR [edi-0x48f07cad]
   1e902:	pop    ebx
   1e903:	mov    eax,0x89cd0046
   1e908:	sbb    al,0x5c
   1e90a:	out    0x14,eax
   1e90c:	mov    dh,0x51
   1e90e:	dec    eax
   1e90f:	scas   eax,DWORD PTR es:[edi]
   1e910:	stos   DWORD PTR es:[edi],eax
   1e911:	cmp    DWORD PTR [edx+0x17ffc814],edx
   1e917:	ss cs jnp 0x1e8e4
   1e91b:	adc    eax,0xfe49af35
   1e920:	mov    dh,0x88
   1e922:	gs repnz int3 
   1e925:	enter  0xac42,0x2a
   1e929:	add    BYTE PTR [eax+eax*1+0xf],bl
   1e92d:	add    BYTE PTR [edx],ch
   1e92f:	add    BYTE PTR [edx],cl
   1e931:	add    BYTE PTR [edi],al
   1e933:	add    BYTE PTR [ecx],dl
   1e935:	add    BYTE PTR [eax],cl
   1e937:	add    BYTE PTR [edi],bh
   1e939:	add    BYTE PTR ds:0x1b000000,bh
   1e93f:	add    BYTE PTR [eax],al
   1e941:	add    BYTE PTR [edx+eiz*1-0x44],cl
   1e945:	push   ds
   1e946:	retf   
   1e947:	ins    DWORD PTR es:[edi],dx
   1e948:	sahf   
   1e949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e94a:	les    esp,FWORD PTR [ebx]
   1e94c:	stc    
   1e94d:	push   0xe382e6a0
   1e952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e953:	inc    esp
   1e954:	(bad)  
   1e955:	jbe    0x1e903
   1e957:	mov    ecx,0x466a3647
   1e95c:	adc    bl,BYTE PTR ds:0x111ca370
   1e962:	arpl   sp,si
   1e964:	repz adc ecx,DWORD PTR [ecx+0x63]
   1e968:	imul   esp,DWORD PTR [ecx],0xf8517464
   1e96e:	jne    0x1e9b2
   1e970:	push   edx
   1e971:	or     bl,bh
   1e973:	ffreep st(1)
   1e975:	push   eax
   1e976:	call   0x4bb6de
   1e97b:	int3   
   1e97c:	pop    esp
   1e97d:	add    BYTE PTR [esi],cl
   1e97f:	add    BYTE PTR [edi],dh
   1e981:	add    BYTE PTR [edx],al
   1e983:	add    BYTE PTR [esi],cl
   1e985:	add    BYTE PTR [edx],bl
   1e987:	add    BYTE PTR [edi],al
   1e989:	add    BYTE PTR [esi],al
   1e98b:	add    BYTE PTR [ebx],cl
   1e98d:	add    BYTE PTR ds:0x2c001100,ah
   1e993:	add    BYTE PTR [edx],al
   1e995:	add    BYTE PTR [ebx],cl
   1e997:	add    BYTE PTR [ecx],al
   1e999:	add    BYTE PTR [edi],al
   1e99b:	add    BYTE PTR [ebx],cl
   1e99d:	add    BYTE PTR [ecx],bh
   1e99f:	add    BYTE PTR [edi],cl
   1e9a1:	add    BYTE PTR [edx],cl
   1e9a3:	add    BYTE PTR [edx],cl
   1e9a5:	add    BYTE PTR [edi],al
   1e9a7:	add    BYTE PTR [ecx],dl
   1e9a9:	add    BYTE PTR [eax],cl
   1e9ab:	add    BYTE PTR [ecx],dl
   1e9ad:	add    BYTE PTR [edi],bl
   1e9af:	add    BYTE PTR [esi],dh
   1e9b1:	add    BYTE PTR [edi],al
   1e9b3:	add    BYTE PTR [eax],al
   1e9b5:	add    BYTE PTR [edi],dl
   1e9b7:	add    BYTE PTR [ebx],cl
   1e9b9:	add    BYTE PTR [edx],bl
   1e9bb:	add    BYTE PTR [edi],dh
   1e9bd:	add    BYTE PTR [eax+eax*1],ch
   1e9c0:	add    DWORD PTR [eax],eax
   1e9c2:	sbb    al,BYTE PTR [eax]
   1e9c4:	push   es
   1e9c5:	add    BYTE PTR ds:0x3f000300,bl
   1e9cb:	add    BYTE PTR [esi],dh
   1e9cd:	add    BYTE PTR [ecx],dl
   1e9cf:	add    BYTE PTR [eax],ch
   1e9d1:	add    BYTE PTR [edi],cl
   1e9d3:	add    BYTE PTR [esi],dh
   1e9d5:	add    BYTE PTR [edi],dl
   1e9d7:	add    BYTE PTR [eax+eax*1],al
   1e9da:	pop    ds
   1e9db:	add    BYTE PTR [edx],cl
   1e9dd:	add    BYTE PTR [esi],al
   1e9df:	add    BYTE PTR [esi],dl
   1e9e1:	add    BYTE PTR [edi],ch
   1e9e3:	add    BYTE PTR [eax],al
   1e9e5:	add    bl,dl
   1e9e7:	outs   dx,BYTE PTR ds:[esi]
   1e9e8:	neg    DWORD PTR [ebx+eax*8]
   1e9eb:	pushf  
   1e9ec:	jp     0x1e991
   1e9ee:	fld    TBYTE PTR [ecx+0x36]
   1e9f1:	push   0xffffffeb
   1e9f3:	dec    edi
   1e9f4:	push   esi
   1e9f5:	aaa    
   1e9f6:	mov    fs,WORD PTR [esi-0x76]
   1e9f9:	push   es
   1e9fa:	push   0x75af8f10
   1e9ff:	out    dx,eax
   1ea00:	daa    
   1ea01:	adc    eax,0x806bbf30
   1ea06:	jmp    0x9adc:0x9014d257
   1ea0d:	sbb    al,0xf9
   1ea0f:	call   0x9f6001ca
   1ea14:	mov    ecx,0x175c42
   1ea19:	int3   
   1ea1a:	ins    BYTE PTR es:[edi],dx
   1ea1b:	add    BYTE PTR [edi],bl
   1ea1d:	add    BYTE PTR [edx],dl
   1ea1f:	add    BYTE PTR [edx],dl
   1ea21:	add    BYTE PTR [eax],al
   1ea23:	add    BYTE PTR [ebp+0x0],bl
   1ea26:	dec    ebx
   1ea27:	add    BYTE PTR ds:0x1d00,bl
   1ea2d:	add    BYTE PTR [eax+edi*8],ah
   1ea30:	sahf   
   1ea31:	xchg   BYTE PTR [edx+edi*1+0x5c4b18a6],dl
   1ea38:	jne    0x1ea5a
   1ea3a:	sbb    ah,0xc5
   1ea3d:	out    0x26,al
   1ea3f:	pop    ebx
   1ea40:	and    DWORD PTR [ebx],ebx
   1ea42:	adc    ch,BYTE PTR [ebp+0x81db7a2]
   1ea48:	pusha  
   1ea49:	gs std 
   1ea4b:	adc    bh,BYTE PTR [esi-0x5b]
   1ea4e:	fwait
   1ea4f:	hlt    
   1ea50:	and    dh,BYTE PTR [ebx-0x542fc3ca]
   1ea56:	push   ss
   1ea57:	cld    
   1ea58:	out    dx,eax
   1ea59:	or     dh,BYTE PTR [ebx]
   1ea5b:	aam    0x34
   1ea5d:	aad    0xda
   1ea5f:	add    DWORD PTR [eax],0xffffffcc
   1ea62:	pop    edx
   1ea63:	sub    eax,0x6163725
   1ea68:	sbb    BYTE PTR [eax],cl
   1ea6a:	xor    DWORD PTR [edx+ebx*1],edi
   1ea6d:	pop    ss
   1ea6e:	add    al,0x5
   1ea70:	add    ah,cl
   1ea72:	pop    ecx
   1ea73:	sub    esi,DWORD PTR [edi+0x280ec1cd]
   1ea79:	shr    BYTE PTR [edx+edi*1-0x38],1
   1ea7d:	xchg   ebp,eax
   1ea7e:	fiadd  WORD PTR [eax+ebp*4+0x24e6a263]
   1ea85:	outs   dx,BYTE PTR ds:[esi]
   1ea86:	jge    0x1ea73
   1ea88:	push   eax
   1ea89:	dec    edx
   1ea8a:	sub    edi,DWORD PTR [edi]
   1ea8c:	cmp    DWORD PTR [esi],0x5d
   1ea8f:	ins    BYTE PTR es:[edi],dx
   1ea90:	stos   DWORD PTR es:[edi],eax
   1ea91:	fidiv  WORD PTR [eax+ecx*8+0xf5f89a]
   1ea98:	dec    esi
   1ea99:	cmp    ah,BYTE PTR [ebx]
   1ea9b:	and    eax,0x33111d1b
   1eaa0:	aas    
   1eaa1:	sbb    eax,DWORD PTR [esi]
   1eaa3:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eaaa:	sbb    eax,0xb9cc000b
   1eaaf:	dec    eax
   1eab0:	fnstenv [eax]
   1eab2:	adc    eax,0x2806a449
   1eab7:	jae    0x1ea73
   1eab9:	data16 xor al,0xba
   1eabc:	iret   
   1eabd:	push   esi
   1eabe:	push   ss
   1eabf:	xchg   ebx,eax
   1eac0:	icebp  
   1eac1:	add    DWORD PTR [edi],edx
   1eac3:	push   esp
   1eac4:	adc    ecx,ebp
   1eac6:	adc    eax,0x91070cb2
   1eacb:	test   BYTE PTR [bx],0xcd
   1eacf:	dec    edx
   1ead0:	mov    ch,0xab
   1ead2:	inc    esp
   1ead3:	call   0xa:0x246baa14
   1eada:	pop    edx
   1eadb:	sub    eax,0x1b1d2227
   1eae0:	adc    DWORD PTR [esi],eax
   1eae2:	pop    ss
   1eae3:	and    bh,BYTE PTR [edi]
   1eae5:	sbb    eax,DWORD PTR [esi]
   1eae7:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eaee:	sbb    eax,0x1acc000b
   1eaf3:	sub    al,0xe
   1eaf5:	and    ebx,ebp
   1eaf7:	ss add al,0xe8
   1eafa:	inc    esi
   1eafb:	inc    edi
   1eafc:	inc    ecx
   1eafd:	das    
   1eafe:	mov    bh,0x82
   1eb00:	enter  0x69e9,0xf3
   1eb04:	retf   
   1eb05:	mov    ecx,0x6de2fe6e
   1eb0a:	pop    ds
   1eb0b:	inc    eax
   1eb0c:	mov    ch,0xa5
   1eb0e:	loope  0x1eacf
   1eb10:	outs   dx,BYTE PTR ds:[esi]
   1eb11:	jmp    FWORD PTR [ecx+0x2cf82113]
   1eb17:	imul   esi,DWORD PTR [ecx+esi*2-0x38d4eb82],0x17
   1eb1f:	mov    edi,0xa274a9a
   1eb24:	fidivr DWORD PTR [esi+0x38]
   1eb27:	add    BYTE PTR [edi+0x1b],dh
   1eb2a:	cmp    cl,0x3c
   1eb2d:	mov    ah,0x5f
   1eb2f:	or     BYTE PTR [eax-0x42593ef7],0xfd
   1eb36:	into   
   1eb37:	jbe    0x1eb2e
   1eb39:	xchg   ebx,eax
   1eb3a:	sbb    edi,eax
   1eb3c:	inc    edi
   1eb3d:	cmp    DWORD PTR [ebx],0x2793b82a
   1eb43:	out    0x1b,eax
   1eb45:	fmul   DWORD PTR [eax]
   1eb47:	push   ebp
   1eb48:	inc    esi
   1eb49:	or     al,BYTE PTR [eax]
   1eb4b:	int3   
   1eb4c:	pop    esp
   1eb4d:	add    BYTE PTR [eax],bl
   1eb4f:	add    BYTE PTR [ebx],ch
   1eb51:	add    BYTE PTR [eax+eax*1],bl
   1eb54:	aaa    
   1eb55:	add    BYTE PTR [ecx],ah
   1eb57:	add    BYTE PTR [ebx],dl
   1eb59:	add    BYTE PTR [edi],bl
   1eb5b:	add    BYTE PTR [edx],cl
   1eb5d:	add    BYTE PTR [esi],al
   1eb5f:	add    BYTE PTR [esi],dl
   1eb61:	add    BYTE PTR [edi],ch
   1eb63:	add    BYTE PTR [ecx+0x0],bh
   1eb66:	push   esi
   1eb67:	add    BYTE PTR [eax],al
   1eb69:	add    dh,ah
   1eb6b:	mov    eax,ds:0xd054ded6
   1eb70:	rcl    DWORD PTR [edi],cl
   1eb72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1eb73:	les    esi,FWORD PTR [edi+0x43807e0]
   1eb79:	lock inc esp
   1eb7b:	and    cl,BYTE PTR ds:0x5afaf135
   1eb81:	rcl    DWORD PTR [edx],0x1c
   1eb84:	jb     0x1eb4b
   1eb86:	in     al,dx
   1eb87:	inc    edx
   1eb88:	test   DWORD PTR [eax-0x20bf35f0],edx
   1eb8e:	xor    bh,BYTE PTR [esi]
   1eb90:	je     0x1ebea
   1eb92:	fdiv   QWORD PTR [ebp-0x5dd9d195]
   1eb98:	jns    0x1ebd8
   1eb9a:	add    ah,cl
   1eb9c:	pop    esp
   1eb9d:	add    BYTE PTR [eax],bl
   1eb9f:	add    BYTE PTR [ecx],ah
   1eba1:	add    BYTE PTR [ebx],dl
   1eba3:	add    BYTE PTR [edi],bl
   1eba5:	add    BYTE PTR [edx],cl
   1eba7:	add    BYTE PTR [esi],al
   1eba9:	add    BYTE PTR [ecx],bh
   1ebab:	add    BYTE PTR [ecx+0x0],bh
   1ebae:	push   esi
   1ebaf:	add    BYTE PTR [eax],al
   1ebb1:	add    BYTE PTR [ecx-0x7eeed917],dh
   1ebb7:	adc    al,0x6
   1ebb9:	daa    
   1ebba:	test   eax,0x4bc43553
   1ebbf:	ret    0x4f7b
   1ebc2:	jne    0x1ebfe
   1ebc4:	jge    0x1eb88
   1ebc6:	out    dx,eax
   1ebc7:	int    0x24
   1ebc9:	outs   dx,BYTE PTR ds:[esi]
   1ebca:	lds    esi,FWORD PTR [ebx]
   1ebcc:	clc    
   1ebcd:	jo     0x1ebfe
   1ebcf:	push   esi
   1ebd0:	pop    edi
   1ebd1:	mov    ch,0x3d
   1ebd3:	ins    BYTE PTR es:[edi],dx
   1ebd4:	sar    BYTE PTR [ebp+0x40],0x88
   1ebd8:	test   al,0x92
   1ebda:	or     ebx,DWORD PTR [ebx-0x32]
   1ebdd:	sbb    BYTE PTR [ebp-0xbf56bb],0xc2
   1ebe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1ebe5:	test   DWORD PTR [ebp+0x530039d7],edx
   1ebeb:	add    BYTE PTR [ecx+0x0],bh
   1ebee:	jae    0x1ebf0
   1ebf0:	inc    ebp
   1ebf1:	add    BYTE PTR [esi+0x0],dh
   1ebf4:	je     0x1ebf6
   1ebf6:	inc    ebx
   1ebf7:	add    BYTE PTR [eax],al
   1ebf9:	add    BYTE PTR [eax+eax*1+0x0],bl
   1ebfd:	add    BYTE PTR [edx+0x0],dh
   1ec00:	jb     0x1ec02
   1ec02:	add    BYTE PTR [eax],al
   1ec04:	cmp    DWORD PTR [esp+ecx*8],ebp
   1ec07:	call   0x40f9c993
   1ec0c:	sub    BYTE PTR [eax],0xd0
   1ec0f:	jge    0x1ec75
   1ec11:	push   ss
   1ec12:	mov    dh,0x85
   1ec14:	nop
   1ec15:	push   cs
   1ec16:	jp     0x1ebda
   1ec18:	call   0x35a54454
   1ec1d:	(bad)  
   1ec1f:	daa    
   1ec20:	fs ins BYTE PTR es:[edi],dx
   1ec22:	mov    ds:0xe669c1e8,al
   1ec27:	inc    ebp
   1ec28:	mov    ah,0x12
   1ec2a:	add    al,0xd2
   1ec2c:	pop    eax
   1ec2d:	icebp  
   1ec2e:	mov    al,ds:0x668badc8
   1ec33:	add    al,0x22
   1ec35:	xchg   ebp,eax
   1ec36:	xchg   BYTE PTR [edi-0x33ff8f82],dl
   1ec3c:	and    eax,0x5ccc0053
   1ec41:	add    BYTE PTR [ebx+0x0],dh
   1ec44:	jns    0x1ec46
   1ec46:	jae    0x1ec48
   1ec48:	je     0x1ec4a
   1ec4a:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec4e:	jb     0x1ec50
   1ec50:	outs   dx,DWORD PTR ds:[esi]
   1ec51:	add    BYTE PTR [edi+0x0],ch
   1ec54:	je     0x1ec56
   1ec56:	pop    esp
   1ec57:	add    BYTE PTR [ebx+0x0],dh
   1ec5a:	jns    0x1ec5c
   1ec5c:	jae    0x1ec5e
   1ec5e:	je     0x1ec60
   1ec60:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec64:	xor    eax,DWORD PTR [eax]
   1ec66:	xor    al,BYTE PTR [eax]
   1ec68:	pop    esp
   1ec69:	add    BYTE PTR ds:0x5300,ah
   1ec6f:	add    BYTE PTR [ecx],dh
   1ec71:	xor    ch,BYTE PTR cs:[esi]
   1ec74:	xor    eax,DWORD PTR [eax]
   1ec76:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec7d:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1ec81:	outs   dx,BYTE PTR gs:[esi]
   1ec83:	addr16 je 0x1ecee
   1ec86:	and    BYTE PTR [ebx+0x68],ah
   1ec89:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ec8d:	int3   
   1ec8e:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec95:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1ec99:	popa   
   1ec9a:	je     0x1ecfd
   1ec9c:	and    BYTE PTR [ebx+0x68],ah
   1ec9f:	arpl   WORD PTR gs:[ebx+0x0],bp
   1eca3:	int3   
   1eca4:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ecab:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ecaf:	je     0x1ed12
   1ecb1:	outs   dx,BYTE PTR ds:[esi]
   1ecb2:	arpl   WORD PTR [ebp+0x20],sp
   1ecb5:	je     0x1ed26
   1ecb7:	outs   dx,DWORD PTR ds:[esi]
   1ecb8:	and    BYTE PTR [esi+0x61],ah
   1ecbb:	jb     0x1ecdd
   1ecbd:	bound  esp,QWORD PTR [ecx+0x63]
   1ecc0:	imul   eax,DWORD PTR [eax],0x69
   1ecc3:	outs   dx,BYTE PTR ds:[esi]
   1ecc4:	jbe    0x1ed27
   1ecc6:	ins    BYTE PTR es:[edi],dx
   1ecc7:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1eccf:	outs   dx,BYTE PTR ds:[esi]
   1ecd0:	arpl   WORD PTR [ebp+0x20],sp
   1ecd3:	arpl   WORD PTR [edi+0x64],bp
   1ecd6:	add    BYTE PTR gs:[ecx+0x6e],ch
   1ecda:	jbe    0x1ed3d
   1ecdc:	ins    BYTE PTR es:[edi],dx
   1ecdd:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1ece5:	popa   
   1ece6:	ins    BYTE PTR es:[edi],dx
   1ece7:	das    
   1ece8:	ins    BYTE PTR es:[edi],dx
   1ece9:	outs   dx,BYTE PTR gs:[esi]
   1eceb:	addr16 je 0x1ed56
   1ecee:	and    BYTE PTR [ebx+0x6f],ah
   1ecf1:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1ecf6:	jbe    0x1ed59
   1ecf8:	ins    BYTE PTR es:[edi],dx
   1ecf9:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ed01:	outs   dx,BYTE PTR ds:[esi]
   1ed02:	arpl   WORD PTR [ebp+0x73],sp
   1ed05:	and    BYTE PTR [ebx+0x65],dh
   1ed08:	je     0x1ed0a
   1ed0a:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed11:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1ed15:	gs jb  0x1ed79
   1ed18:	ins    BYTE PTR es:[edi],dx
   1ed19:	das    
   1ed1a:	ins    BYTE PTR es:[edi],dx
   1ed1b:	outs   dx,BYTE PTR gs:[esi]
   1ed1d:	addr16 je 0x1ed88
   1ed20:	jae    0x1ed42
   1ed22:	jae    0x1ed89
   1ed24:	je     0x1ed26
   1ed26:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed2d:	and    BYTE PTR [edx+0x69],ah
   1ed30:	je     0x1ed52
   1ed32:	ins    BYTE PTR es:[edi],dx
   1ed33:	outs   dx,BYTE PTR gs:[esi]
   1ed35:	addr16 je 0x1eda0
   1ed38:	and    BYTE PTR [edx+0x65],dh
   1ed3b:	jo     0x1eda2
   1ed3d:	popa   
   1ed3e:	je     0x1ed40
   1ed40:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed47:	and    BYTE PTR [ebx+0x6f],ah
   1ed4a:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1ed50:	addr16 je 0x1edbb
   1ed53:	jae    0x1ed75
   1ed55:	jae    0x1edbc
   1ed57:	je     0x1ed59
   1ed59:	int3   
   1ed5a:	je     0x1edcb
   1ed5c:	outs   dx,DWORD PTR ds:[esi]
   1ed5d:	and    BYTE PTR [ebp+0x61],ch
   1ed60:	outs   dx,BYTE PTR ds:[esi]
   1ed61:	jns    0x1ed83
   1ed63:	ins    BYTE PTR es:[edi],dx
   1ed64:	outs   dx,BYTE PTR gs:[esi]
   1ed66:	addr16 je 0x1edd1
   1ed69:	and    BYTE PTR [edi+0x72],ch
   1ed6c:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ed70:	je     0x1edd3
   1ed72:	outs   dx,BYTE PTR ds:[esi]
   1ed73:	arpl   WORD PTR [ebp+0x20],sp
   1ed76:	jae    0x1edf1
   1ed78:	ins    DWORD PTR es:[edi],dx
   1ed79:	bound  ebp,QWORD PTR [edi+0x6c]
   1ed7c:	jae    0x1ed7e
   1ed7e:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed85:	and    BYTE PTR [edx+0x6c],ah
   1ed88:	outs   dx,DWORD PTR ds:[esi]
   1ed89:	arpl   WORD PTR [ebx+0x20],bp
   1ed8c:	je     0x1ee07
   1ed8e:	jo     0x1edf5
   1ed90:	add    ah,cl
   1ed92:	push   0x65646165
   1ed97:	jb     0x1edb9
   1ed99:	arpl   WORD PTR [edx+0x63],si
   1ed9c:	and    BYTE PTR [ebp+0x69],ch
   1ed9f:	jae    0x1ee0e
   1eda1:	popa   
   1eda2:	je     0x1ee07
   1eda4:	push   0x6b6e7500
   1eda9:	outs   dx,BYTE PTR ds:[esi]
   1edaa:	outs   dx,DWORD PTR ds:[esi]
   1edab:	ja     0x1ee1b
   1edad:	and    BYTE PTR [eax+0x65],ch
   1edb0:	popa   
   1edb1:	fs gs jb 0x1edd5
   1edb5:	data16 ins BYTE PTR es:[edi],dx
   1edb7:	popa   
   1edb8:	addr16 jae 0x1eddb
   1edbb:	jae    0x1ee22
   1edbd:	je     0x1edbf
   1edbf:	int3   
   1edc0:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1edc7:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1edcb:	gs popa 
   1edcd:	fs gs jb 0x1edf1
   1edd1:	arpl   WORD PTR [eax+0x65],bp
   1edd4:	arpl   WORD PTR [ebx+0x0],bp
   1edd7:	int3   
   1edd8:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1eddf:	and    BYTE PTR [edi+0x69],dh
   1ede2:	outs   dx,BYTE PTR ds:[esi]
   1ede3:	outs   dx,DWORD PTR fs:[esi]
   1ede5:	ja     0x1ee07
   1ede7:	jae    0x1ee52
   1ede9:	jp     0x1ee50
   1edeb:	add    BYTE PTR [ebp+0x6e],dh
   1edee:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1edf2:	outs   dx,BYTE PTR ds:[esi]
   1edf3:	and    BYTE PTR [ebx+0x6f],ah
   1edf6:	ins    DWORD PTR es:[edi],dx
   1edf7:	jo     0x1ee6b
   1edf9:	gs jae 0x1ee6f
   1edfc:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1ee03:	.byte 0x68
   1ee04:	outs   dx,DWORD PTR ds:[esi]
   1ee05:	fs
	...

Disassembly of section INIT:

0007fa00 <INIT>:
   7fa00:	add    BYTE PTR [eax],al
   7fa02:	add    BYTE PTR [eax],al
   7fa04:	add    BYTE PTR [ecx+0x7eb3c],ah
   7fa0a:	mov    ecx,0xbb40e64e
   7fa0f:	test   eax,eax
   7fa11:	je     0x7fa17
   7fa13:	cmp    eax,ecx
   7fa15:	jne    0x7fa31
   7fa17:	mov    eax,ds:0x1f05c
   7fa1c:	mov    eax,DWORD PTR [eax]
   7fa1e:	xor    eax,0x7eb3c
   7fa23:	mov    ds:0x7eb3c,eax
   7fa28:	jne    0x7fa31
   7fa2a:	mov    eax,ecx
   7fa2c:	mov    ds:0x7eb3c,eax
   7fa31:	not    eax
   7fa33:	mov    ds:0x7eb40,eax
   7fa38:	ret    
   7fa39:	arpl   WORD PTR [ebx],si
   7fa3b:	(bad)  
   7fa3c:	inc    edi
   7fa3d:	mov    cl,0x8b
   7fa3f:	call   DWORD PTR [ebp-0x75]
   7fa42:	in     al,dx
   7fa43:	call   0x7fa05
   7fa48:	pop    ebp
   7fa49:	jmp    0x1918a
   7fa4e:	int3   
   7fa4f:	int3   
   7fa50:	xchg   esp,eax
   7fa51:	cli    
   7fa52:	push   es
	...
   7fa5b:	add    BYTE PTR [esi+0x80006fc],bh
   7fa61:	lock add BYTE PTR [eax],al
   7fa64:	mov    edx,?
   7fa66:	push   es
	...
   7fa6f:	add    al,ah
   7fa71:	cld    
   7fa72:	push   es
   7fa73:	add    BYTE PTR [eax],al
   7fa75:	lock add BYTE PTR [eax],al
	...
   7fa8c:	int3   
   7fa8d:	cld    
   7fa8e:	push   es
   7fa8f:	add    BYTE PTR [eax],al
   7fa91:	add    BYTE PTR [eax],al
   7fa93:	add    BYTE PTR [edx],cl
   7fa95:	sti    
   7fa96:	push   es
   7fa97:	add    BYTE PTR [ebx+edi*8],dl
   7fa9a:	push   es
   7fa9b:	add    BYTE PTR [esi],bl
   7fa9d:	sti    
   7fa9e:	push   es
   7fa9f:	add    BYTE PTR [eax],ch
   7faa1:	sti    
   7faa2:	push   es
   7faa3:	add    BYTE PTR [eax],bh
   7faa5:	sti    
   7faa6:	push   es
   7faa7:	add    BYTE PTR [eax-0x5],bl
   7faaa:	push   es
   7faab:	add    BYTE PTR [ebx+edi*8+0x6],ch
   7faaf:	add    BYTE PTR [esi-0x67fff905],al
   7fab5:	sti    
   7fab6:	push   es
   7fab7:	add    BYTE PTR [eax-0x37fff905],dh
   7fabd:	sti    
   7fabe:	push   es
   7fabf:	add    dl,dl
   7fac1:	sti    
   7fac2:	push   es
   7fac3:	add    BYTE PTR [eax],cl
   7fac5:	cld    
   7fac6:	push   es
   7fac7:	add    BYTE PTR [eax],ah
   7fac9:	cld    
   7faca:	push   es
   7facb:	add    BYTE PTR [edx],ch
   7facd:	cld    
   7face:	push   es
   7facf:	add    BYTE PTR [esp+edi*8],dh
   7fad2:	push   es
   7fad3:	add    BYTE PTR [esi-0x4],cl
   7fad6:	push   es
   7fad7:	add    BYTE PTR [esp+edi*8+0x6],ah
   7fadb:	add    BYTE PTR [eax-0x4],dh
   7fade:	push   es
   7fadf:	add    BYTE PTR [esp+edi*8-0x371fffa],al
   7fae6:	push   es
   7fae7:	add    BYTE PTR [eax-0x51fff904],ah
   7faed:	cld    
   7faee:	push   es
   7faef:	add    BYTE PTR [eax],al
   7faf1:	sti    
   7faf2:	push   es
   7faf3:	add    ah,ch
   7faf5:	sti    
   7faf6:	push   es
   7faf7:	add    al,ch
   7faf9:	cld    
   7fafa:	push   es
   7fafb:	add    BYTE PTR [eax],al
   7fafd:	add    BYTE PTR [eax],al
   7faff:	add    BYTE PTR [ebx],cl
   7fb01:	add    eax,0x6c43775a
   7fb06:	outs   dx,DWORD PTR ds:[esi]
   7fb07:	jae    0x7fb6e
   7fb09:	add    BYTE PTR [ebx+0x5],bh
   7fb0c:	pop    edi
   7fb0d:	popa   
   7fb0e:	ins    BYTE PTR es:[edi],dx
   7fb0f:	ins    BYTE PTR es:[edi],dx
   7fb10:	ins    DWORD PTR es:[edi],dx
   7fb11:	jne    0x7fb7f
   7fb13:	add    BYTE PTR [ecx+0x5],bh
   7fb16:	pop    edi
   7fb17:	popa   
   7fb18:	ins    BYTE PTR es:[edi],dx
   7fb19:	ins    BYTE PTR es:[edi],dx
   7fb1a:	imul   esi,DWORD PTR fs:[esi+0x0],0x615f057d
   7fb22:	ins    BYTE PTR es:[edi],dx
   7fb23:	ins    BYTE PTR es:[edi],dx
   7fb24:	jb     0x7fb8b
   7fb26:	ins    DWORD PTR es:[edi],dx
   7fb27:	add    BYTE PTR [ebp+0x0],dh
   7fb2a:	inc    ebp
   7fb2b:	js     0x7fb7f
   7fb2d:	popa   
   7fb2e:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   7fb35:	jne    0x7fbaa
   7fb37:	add    BYTE PTR [edx+0x0],al
   7fb3a:	inc    ebp
   7fb3b:	js     0x7fb7e
   7fb3d:	ins    BYTE PTR es:[edi],dx
   7fb3e:	ins    BYTE PTR es:[edi],dx
   7fb3f:	outs   dx,DWORD PTR ds:[esi]
   7fb40:	arpl   WORD PTR [ecx+0x74],sp
   7fb43:	gs push eax
   7fb45:	outs   dx,DWORD PTR ds:[esi]
   7fb46:	outs   dx,DWORD PTR ds:[esi]
   7fb47:	ins    BYTE PTR es:[edi],dx
   7fb48:	push   edi
   7fb49:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   7fb51:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   7fb58:	dec    esi
   7fb59:	add    BYTE PTR [ebp+0x78],al
   7fb5c:	inc    esi
   7fb5d:	jb     0x7fbc4
   7fb5f:	gs push eax
   7fb61:	outs   dx,DWORD PTR ds:[esi]
   7fb62:	outs   dx,DWORD PTR ds:[esi]
   7fb63:	ins    BYTE PTR es:[edi],dx
   7fb64:	push   edi
   7fb65:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xbd006761
   7fb6d:	add    edx,DWORD PTR [edx+0x74]
   7fb70:	ins    BYTE PTR es:[edi],dx
   7fb71:	inc    ebx
   7fb72:	outs   dx,DWORD PTR ds:[esi]
   7fb73:	ins    DWORD PTR es:[edi],dx
   7fb74:	jo     0x7fbd7
   7fb76:	jb     0x7fbdd
   7fb78:	push   ebp
   7fb79:	outs   dx,BYTE PTR ds:[esi]
   7fb7a:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7fb81:	jb     0x7fbec
   7fb83:	outs   dx,BYTE PTR ds:[esi]
   7fb84:	add    BYTE PTR [bp+si+0x2],al
   7fb88:	dec    ebx
   7fb89:	gs push edx
   7fb8b:	gs ins BYTE PTR es:[edi],dx
   7fb8d:	gs popa 
   7fb8f:	jae    0x7fbf6
   7fb91:	dec    ebp
   7fb92:	jne    0x7fc08
   7fb94:	gs js  0x7fb97
   7fb97:	add    BYTE PTR [ebp+0x2],ch
   7fb9a:	dec    ebx
   7fb9b:	gs push edi
   7fb9d:	popa   
   7fb9e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   7fba6:	ins    BYTE PTR es:[di],dx
   7fba8:	gs dec edi
   7fbaa:	bound  ebp,QWORD PTR [edx+0x65]
   7fbad:	arpl   WORD PTR [eax+eax*1+0x41],si
   7fbb1:	add    BYTE PTR [ebp+0x78],al
   7fbb4:	inc    ecx
   7fbb5:	ins    BYTE PTR es:[edi],dx
   7fbb6:	ins    BYTE PTR es:[edi],dx
   7fbb7:	outs   dx,DWORD PTR ds:[esi]
   7fbb8:	arpl   WORD PTR [ecx+0x74],sp
   7fbbb:	gs push eax
   7fbbd:	outs   dx,DWORD PTR ds:[esi]
   7fbbe:	outs   dx,DWORD PTR ds:[esi]
   7fbbf:	ins    BYTE PTR es:[edi],dx
   7fbc0:	push   edi
   7fbc1:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xa7006761
   7fbc9:	add    eax,0x636d656d
   7fbce:	jo     0x7fc49
   7fbd0:	add    BYTE PTR [eax],al
   7fbd2:	inc    edx
   7fbd3:	add    al,0x52
   7fbd5:	je     0x7fc43
   7fbd7:	dec    ecx
   7fbd8:	jae    0x7fc30
   7fbda:	popa   
   7fbdb:	ins    BYTE PTR es:[edi],dx
   7fbdc:	imul   esp,DWORD PTR [edi+ecx*2+0x65],0x6168436d
   7fbe4:	jb     0x7fc47
   7fbe6:	arpl   WORD PTR [ebp+eiz*2+0x72],si
   7fbea:	add    BYTE PTR [eax],al
   7fbec:	mov    eax,ds:0x476d4d02
   7fbf1:	gs je  0x7fc47
   7fbf4:	jns    0x7fc69
   7fbf6:	je     0x7fc5d
   7fbf8:	ins    DWORD PTR es:[edi],dx
   7fbf9:	push   edx
   7fbfa:	outs   dx,DWORD PTR ds:[esi]
   7fbfb:	jne    0x7fc71
   7fbfd:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   7fc04:	gs jae 0x7fc7a
   7fc07:	add    bh,al
   7fc09:	add    edx,DWORD PTR [edx+0x74]
   7fc0c:	ins    BYTE PTR es:[edi],dx
   7fc0d:	inc    ebx
   7fc0e:	outs   dx,DWORD PTR ds:[esi]
   7fc0f:	jo     0x7fc8a
   7fc11:	push   ebp
   7fc12:	outs   dx,BYTE PTR ds:[esi]
   7fc13:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7fc1a:	jb     0x7fc85
   7fc1c:	outs   dx,BYTE PTR ds:[esi]
   7fc1d:	add    BYTE PTR [bx+si],al
   7fc20:	mov    DWORD PTR ds:0x6e736377,0x746163
   7fc2a:	test   eax,0x6d656d05
   7fc2f:	jae    0x7fc96
   7fc31:	je     0x7fc33
   7fc33:	add    BYTE PTR [esi],al
   7fc35:	add    eax,0x6c41775a
   7fc3a:	ins    BYTE PTR es:[edi],dx
   7fc3b:	outs   dx,DWORD PTR ds:[esi]
   7fc3c:	arpl   WORD PTR [ecx+0x74],sp
   7fc3f:	gs push esi
   7fc41:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   7fc48:	gs ins DWORD PTR es:[edi],dx
   7fc4a:	outs   dx,DWORD PTR ds:[esi]
   7fc4b:	jb     0x7fcc6
   7fc4d:	add    bl,ah
   7fc4f:	add    DWORD PTR [ecx+0x6f],ecx
   7fc52:	inc    bx
   7fc54:	outs   dx,DWORD PTR ds:[esi]
   7fc55:	ins    DWORD PTR es:[edi],dx
   7fc56:	jo     0x7fcc4
   7fc58:	gs je  0x7fcc0
   7fc5b:	push   edx
   7fc5c:	gs jno 0x7fcd4
   7fc5f:	gs jae 0x7fcd6
   7fc62:	add    BYTE PTR [eax],al
   7fc64:	mov    ecx,0x70777305
   7fc69:	jb     0x7fcd4
   7fc6b:	outs   dx,BYTE PTR ds:[esi]
   7fc6c:	je     0x7fcd4
   7fc6e:	add    BYTE PTR [eax],al
   7fc70:	xor    eax,DWORD PTR [edx]
   7fc72:	dec    ebx
   7fc73:	gs push ecx
   7fc75:	jne    0x7fcdc
   7fc77:	jb     0x7fcf2
   7fc79:	push   ebx
   7fc7a:	jns    0x7fcef
   7fc7c:	je     0x7fce3
   7fc7e:	ins    DWORD PTR es:[edi],dx
   7fc7f:	push   esp
   7fc80:	imul   ebp,DWORD PTR [ebp+0x65],0x7305ac00
   7fc87:	jo     0x7fcfb
   7fc89:	imul   ebp,DWORD PTR [esi+0x74],0x5130066
   7fc90:	pop    edx
   7fc91:	ja     0x7fcd6
   7fc93:	jb     0x7fcfa
   7fc95:	popa   
   7fc96:	je     0x7fcfd
   7fc98:	push   ebx
   7fc99:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
   7fc9e:	outs   dx,BYTE PTR ds:[esi]
   7fc9f:	add    BYTE PTR [esi+0x2],ah
   7fca2:	dec    ebx
   7fca3:	gs push esp
   7fca5:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   7fcac:	je     0x7fcae
   7fcae:	test   BYTE PTR [ecx],0x4b
   7fcb1:	gs inc edx
   7fcb3:	jne    0x7fd1c
   7fcb5:	inc    ebx
   7fcb6:	push   0x456b6365
   7fcbb:	js     0x7fcbd
   7fcbd:	add    BYTE PTR [esi+0x74],ch
   7fcc0:	outs   dx,DWORD PTR ds:[esi]
   7fcc1:	jae    0x7fd2e
   7fcc3:	jb     0x7fd33
   7fcc5:	ins    BYTE PTR es:[edi],dx
   7fcc6:	cs gs js 0x7fd2f
   7fcca:	add    BYTE PTR [eax],al
   7fccc:	inc    eax
   7fccd:	add    BYTE PTR [ebx+0x65],cl
   7fcd0:	inc    edi
   7fcd1:	gs je  0x7fd17
   7fcd4:	jne    0x7fd48
   7fcd6:	jb     0x7fd3d
   7fcd8:	outs   dx,BYTE PTR ds:[esi]
   7fcd9:	je     0x7fd24
   7fcdb:	jb     0x7fd4e
   7fcdd:	ins    BYTE PTR es:[edi],dx
   7fcde:	add    BYTE PTR [eax],al
   7fce0:	dec    eax
   7fce1:	inc    ecx
   7fce2:	dec    esp
   7fce3:	cs fs ins BYTE PTR es:[edi],dx
   7fce6:	ins    BYTE PTR es:[edi],dx
   7fce7:	add    BYTE PTR [eax+0x6c745204],ah
   7fced:	push   ebp
   7fcee:	outs   dx,BYTE PTR ds:[esi]
   7fcef:	ja     0x7fd5a
   7fcf1:	outs   dx,BYTE PTR ds:[esi]
   7fcf2:	fs
	...
