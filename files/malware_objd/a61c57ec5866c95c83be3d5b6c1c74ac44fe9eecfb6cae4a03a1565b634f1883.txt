
a61c57ec5866c95c83be3d5b6c1c74ac44fe9eecfb6cae4a03a1565b634f1883.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	call   0x401310
  401008:	mov    eax,ds:0x42a878
  40100d:	push   eax
  40100e:	call   0x4016b0
  401013:	add    esp,0x4
  401016:	mov    ds:0x42a87c,eax
  40101b:	pop    ebp
  40101c:	ret    
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	mov    eax,DWORD PTR [ebp+0x8]
  401026:	mov    eax,DWORD PTR [eax-0x4]
  401029:	pop    ebp
  40102a:	ret    
  40102b:	int3   
  40102c:	int3   
  40102d:	int3   
  40102e:	int3   
  40102f:	int3   
  401030:	push   ebp
  401031:	mov    ebp,esp
  401033:	sub    esp,0x2c8
  401039:	push   ebx
  40103a:	push   esi
  40103b:	push   edi
  40103c:	mov    DWORD PTR [ebp-0x28c],0x401740
  401046:	mov    DWORD PTR ds:0x42a880,ebp
  40104c:	pusha  
  40104d:	mov    DWORD PTR [ebp-0x290],0x0
  401057:	mov    DWORD PTR [ebp-0x2a0],0x80000002
  401061:	call   0x401570
  401066:	test   eax,eax
  401068:	je     0x4010a2
  40106a:	call   0x401470
  40106f:	mov    eax,ds:0x42a884
  401074:	push   eax
  401075:	call   0x401020
  40107a:	add    esp,0x4
  40107d:	mov    ds:0x42a878,eax
  401082:	mov    ecx,DWORD PTR ds:0x42a878
  401088:	push   ecx
  401089:	call   0x4016b0
  40108e:	add    esp,0x4
  401091:	mov    ds:0x42a888,eax
  401096:	mov    edx,DWORD PTR ds:0x42a878
  40109c:	mov    DWORD PTR [ebp-0x298],edx
  4010a2:	mov    DWORD PTR [ebp-0x284],0x64
  4010ac:	mov    DWORD PTR [ebp-0x224],0xa
  4010b6:	mov    DWORD PTR [ebp-0x290],0x0
  4010c0:	mov    DWORD PTR [ebp-0x258],0x0
  4010ca:	mov    DWORD PTR [ebp-0x280],0x1
  4010d4:	mov    DWORD PTR [ebp-0x21c],0x0
  4010de:	mov    eax,DWORD PTR [ebp-0x290]
  4010e4:	cmp    eax,DWORD PTR ds:0x42a878
  4010ea:	jae    0x401176
  4010f0:	mov    ecx,DWORD PTR [ebp-0x298]
  4010f6:	push   ecx
  4010f7:	mov    edx,DWORD PTR [ebp-0x284]
  4010fd:	push   edx
  4010fe:	call   0x401800
  401103:	add    esp,0x8
  401106:	mov    DWORD PTR [ebp-0x29c],eax
  40110c:	mov    eax,DWORD PTR [ebp-0x29c]
  401112:	push   eax
  401113:	mov    ecx,DWORD PTR ds:0x42a884
  401119:	add    ecx,DWORD PTR [ebp-0x258]
  40111f:	push   ecx
  401120:	mov    edx,DWORD PTR ds:0x42a888
  401126:	add    edx,DWORD PTR [ebp-0x290]
  40112c:	push   edx
  40112d:	call   0x401a10
  401132:	add    esp,0xc
  401135:	mov    eax,DWORD PTR [ebp-0x224]
  40113b:	add    eax,DWORD PTR [ebp-0x284]
  401141:	add    eax,DWORD PTR [ebp-0x258]
  401147:	mov    DWORD PTR [ebp-0x258],eax
  40114d:	mov    ecx,DWORD PTR [ebp-0x290]
  401153:	add    ecx,DWORD PTR [ebp-0x284]
  401159:	mov    DWORD PTR [ebp-0x290],ecx
  40115f:	mov    edx,DWORD PTR [ebp-0x298]
  401165:	sub    edx,DWORD PTR [ebp-0x29c]
  40116b:	mov    DWORD PTR [ebp-0x298],edx
  401171:	jmp    0x4010de
  401176:	mov    eax,ds:0x42a878
  40117b:	push   eax
  40117c:	mov    ecx,DWORD PTR ds:0x42a888
  401182:	push   ecx
  401183:	call   0x401900
  401188:	add    esp,0x8
  40118b:	mov    DWORD PTR [ebp-0x258],0x0
  401195:	mov    DWORD PTR [ebp-0x2bc],0x0
  40119f:	mov    edx,DWORD PTR ds:0x42a878
  4011a5:	push   edx
  4011a6:	push   0x0
  4011a8:	mov    eax,ds:0x42a87c
  4011ad:	push   eax
  4011ae:	call   0x401000
  4011b3:	add    esp,0xc
  4011b6:	mov    ecx,DWORD PTR ds:0x42a878
  4011bc:	mov    DWORD PTR [ebp-0x2c4],ecx
  4011c2:	mov    edx,DWORD PTR [ebp-0x2bc]
  4011c8:	cmp    edx,DWORD PTR ds:0x42a878
  4011ce:	jae    0x401259
  4011d4:	mov    eax,DWORD PTR [ebp-0x2c4]
  4011da:	push   eax
  4011db:	mov    ecx,DWORD PTR [ebp-0x284]
  4011e1:	push   ecx
  4011e2:	call   0x401800
  4011e7:	add    esp,0x8
  4011ea:	mov    DWORD PTR [ebp-0x2c8],eax
  4011f0:	mov    edx,DWORD PTR [ebp-0x2c8]
  4011f6:	push   edx
  4011f7:	mov    eax,ds:0x42a884
  4011fc:	add    eax,DWORD PTR [ebp-0x258]
  401202:	push   eax
  401203:	mov    ecx,DWORD PTR ds:0x42a87c
  401209:	add    ecx,DWORD PTR [ebp-0x2bc]
  40120f:	push   ecx
  401210:	call   0x401a10
  401215:	add    esp,0xc
  401218:	mov    edx,DWORD PTR [ebp-0x224]
  40121e:	add    edx,DWORD PTR [ebp-0x284]
  401224:	add    edx,DWORD PTR [ebp-0x258]
  40122a:	mov    DWORD PTR [ebp-0x258],edx
  401230:	mov    eax,DWORD PTR [ebp-0x2bc]
  401236:	add    eax,DWORD PTR [ebp-0x284]
  40123c:	mov    DWORD PTR [ebp-0x2bc],eax
  401242:	mov    ecx,DWORD PTR [ebp-0x2c4]
  401248:	sub    ecx,DWORD PTR [ebp-0x2c8]
  40124e:	mov    DWORD PTR [ebp-0x2c4],ecx
  401254:	jmp    0x4011c2
  401259:	mov    edx,DWORD PTR ds:0x42a878
  40125f:	push   edx
  401260:	mov    eax,ds:0x42a87c
  401265:	push   eax
  401266:	call   0x401900
  40126b:	add    esp,0x8
  40126e:	mov    DWORD PTR [ebp-0x28c],0x401740
  401278:	mov    ecx,DWORD PTR ds:0x42a888
  40127e:	mov    edx,DWORD PTR ds:0x42a87c
  401284:	mov    DWORD PTR [ecx],edx
  401286:	push   0x19000
  40128b:	call   0x4016b0
  401290:	add    esp,0x4
  401293:	mov    ds:0x42a88c,eax
  401298:	mov    eax,ds:0x42a88c
  40129d:	add    eax,0x200
  4012a2:	mov    ds:0x42a890,eax
  4012a7:	push   0x17700
  4012ac:	mov    ecx,DWORD PTR ds:0x42a888
  4012b2:	push   ecx
  4012b3:	mov    edx,DWORD PTR ds:0x42a890
  4012b9:	push   edx
  4012ba:	call   0x401a10
  4012bf:	add    esp,0xc
  4012c2:	mov    eax,ds:0x42a88c
  4012c7:	add    eax,0x17590
  4012cc:	mov    ds:0x42a894,eax
  4012d1:	mov    ecx,ecx
  4012d3:	mov    ecx,ecx
  4012d5:	mov    ecx,ecx
  4012d7:	popa   
  4012d8:	mov    ecx,ecx
  4012da:	mov    ecx,ecx
  4012dc:	mov    ecx,ecx
  4012de:	mov    ecx,ecx
  4012e0:	push   0x37
  4012e2:	mov    eax,DWORD PTR [ebp-0x28c]
  4012e8:	mov    ecx,ecx
  4012ea:	mov    ecx,ecx
  4012ec:	mov    ecx,esp
  4012ee:	sub    ecx,0x26
  4012f1:	mov    edx,0x1e
  4012f6:	mov    DWORD PTR [ecx+edx*1+0x8],0x0
  4012fe:	add    DWORD PTR [ecx+edx*1+0x8],eax
  401302:	ret    
  401303:	xor    eax,eax
  401305:	pop    edi
  401306:	pop    esi
  401307:	pop    ebx
  401308:	mov    esp,ebp
  40130a:	pop    ebp
  40130b:	ret    
  40130c:	int3   
  40130d:	int3   
  40130e:	int3   
  40130f:	int3   
  401310:	push   ebp
  401311:	mov    ebp,esp
  401313:	call   0x401440
  401318:	mov    eax,ds:0x42a884
  40131d:	push   eax
  40131e:	call   0x401020
  401323:	add    esp,0x4
  401326:	mov    ds:0x42a878,eax
  40132b:	pop    ebp
  40132c:	ret    
  40132d:	int3   
  40132e:	int3   
  40132f:	int3   
  401330:	push   ebp
  401331:	mov    ebp,esp
  401333:	push   ecx
  401334:	mov    DWORD PTR [ebp-0x4],0x4e6
  40133b:	call   0x401030
  401340:	mov    esp,ebp
  401342:	pop    ebp
  401343:	ret    
  401344:	int3   
  401345:	int3   
  401346:	int3   
  401347:	int3   
  401348:	int3   
  401349:	int3   
  40134a:	int3   
  40134b:	int3   
  40134c:	int3   
  40134d:	int3   
  40134e:	int3   
  40134f:	int3   
  401350:	push   ebp
  401351:	mov    ebp,esp
  401353:	push   ecx
  401354:	mov    DWORD PTR [ebp-0x4],0x3c2
  40135b:	mov    DWORD PTR [ebp-0x4],0x3c2
  401362:	mov    DWORD PTR [ebp-0x4],0x3c2
  401369:	mov    DWORD PTR [ebp-0x4],0x3c2
  401370:	mov    DWORD PTR [ebp-0x4],0x3c2
  401377:	mov    DWORD PTR [ebp-0x4],0x3c2
  40137e:	mov    DWORD PTR [ebp-0x4],0x3c2
  401385:	mov    DWORD PTR [ebp-0x4],0x3c2
  40138c:	mov    DWORD PTR [ebp-0x4],0x3c2
  401393:	mov    DWORD PTR [ebp-0x4],0x3c2
  40139a:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013a1:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013a8:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013af:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013b6:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013bd:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013c4:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013cb:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013d2:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013d9:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013e0:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013e7:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013ee:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013f5:	mov    DWORD PTR [ebp-0x4],0x3c2
  4013fc:	mov    DWORD PTR [ebp-0x4],0x3c2
  401403:	mov    DWORD PTR [ebp-0x4],0x3c2
  40140a:	mov    eax,ds:0x42a898
  40140f:	sub    eax,0x8
  401412:	shr    eax,1
  401414:	mov    ds:0x42a898,eax
  401419:	mov    esp,ebp
  40141b:	pop    ebp
  40141c:	ret    
  40141d:	int3   
  40141e:	int3   
  40141f:	int3   
  401420:	push   ebp
  401421:	mov    ebp,esp
  401423:	pop    ebp
  401424:	ret    0x10
  401427:	int3   
  401428:	int3   
  401429:	int3   
  40142a:	int3   
  40142b:	int3   
  40142c:	int3   
  40142d:	int3   
  40142e:	int3   
  40142f:	int3   
  401430:	push   ebp
  401431:	mov    ebp,esp
  401433:	pop    ebp
  401434:	ret    0x10
  401437:	int3   
  401438:	int3   
  401439:	int3   
  40143a:	int3   
  40143b:	int3   
  40143c:	int3   
  40143d:	int3   
  40143e:	int3   
  40143f:	int3   
  401440:	push   ebp
  401441:	mov    ebp,esp
  401443:	sub    esp,0x8
  401446:	mov    DWORD PTR [ebp-0x4],0x4
  40144d:	mov    eax,DWORD PTR [ebp-0x4]
  401450:	add    eax,0x405bbc
  401455:	mov    ds:0x42a884,eax
  40145a:	mov    ecx,DWORD PTR ds:0x42a0ec
  401460:	mov    DWORD PTR [ebp-0x8],ecx
  401463:	mov    esp,ebp
  401465:	pop    ebp
  401466:	ret    
  401467:	int3   
  401468:	int3   
  401469:	int3   
  40146a:	int3   
  40146b:	int3   
  40146c:	int3   
  40146d:	int3   
  40146e:	int3   
  40146f:	int3   
  401470:	push   ebp
  401471:	mov    ebp,esp
  401473:	sub    esp,0x28
  401476:	mov    DWORD PTR [ebp-0x28],0x405df2
  40147d:	mov    DWORD PTR [ebp-0x24],0x1027
  401484:	mov    DWORD PTR [ebp-0x18],0x4
  40148b:	mov    eax,DWORD PTR [ebp-0x18]
  40148e:	mov    ecx,DWORD PTR [ebp-0x28]
  401491:	lea    edx,[ecx+eax*1+0x29]
  401495:	mov    DWORD PTR [ebp-0x20],edx
  401498:	mov    eax,DWORD PTR [ebp-0x20]
  40149b:	mov    DWORD PTR [ebp-0x1c],eax
  40149e:	mov    DWORD PTR [ebp-0x14],0x0
  4014a5:	lea    ecx,[ebp-0x14]
  4014a8:	push   ecx
  4014a9:	push   0x0
  4014ab:	call   DWORD PTR ds:0x429f48
  4014b1:	cmp    DWORD PTR [ebp-0x14],0x0
  4014b5:	jne    0x4014bb
  4014b7:	xor    eax,eax
  4014b9:	jmp    0x4014c7
  4014bb:	mov    edx,DWORD PTR [ebp-0x1c]
  4014be:	sub    edx,0x29
  4014c1:	mov    DWORD PTR ds:0x42a884,edx
  4014c7:	mov    esp,ebp
  4014c9:	pop    ebp
  4014ca:	ret    
  4014cb:	int3   
  4014cc:	int3   
  4014cd:	int3   
  4014ce:	int3   
  4014cf:	int3   
  4014d0:	push   ebp
  4014d1:	mov    ebp,esp
  4014d3:	mov    eax,DWORD PTR [ebp+0x8]
  4014d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4014d9:	add    ecx,DWORD PTR [eax+0x4]
  4014dc:	mov    eax,ecx
  4014de:	pop    ebp
  4014df:	ret    
  4014e0:	push   ebp
  4014e1:	mov    ebp,esp
  4014e3:	sub    esp,0x8
  4014e6:	mov    DWORD PTR [ebp-0x4],0x0
  4014ed:	jmp    0x4014f8
  4014ef:	mov    eax,DWORD PTR [ebp-0x4]
  4014f2:	add    eax,0x1
  4014f5:	mov    DWORD PTR [ebp-0x4],eax
  4014f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4014fb:	cmp    ecx,DWORD PTR ds:0x42a898
  401501:	jae    0x401566
  401503:	mov    edx,DWORD PTR [ebp-0x4]
  401506:	push   edx
  401507:	mov    eax,ds:0x42a89c
  40150c:	push   eax
  40150d:	call   0x4017a0
  401512:	add    esp,0x8
  401515:	sar    eax,0xc
  401518:	cmp    eax,0x3
  40151b:	jne    0x401564
  40151d:	mov    ecx,DWORD PTR [ebp-0x4]
  401520:	push   ecx
  401521:	mov    edx,DWORD PTR ds:0x42a89c
  401527:	push   edx
  401528:	call   0x4017a0
  40152d:	add    esp,0x8
  401530:	and    eax,0xfff
  401535:	add    eax,0x907
  40153a:	mov    DWORD PTR [ebp-0x8],eax
  40153d:	mov    eax,DWORD PTR [ebp+0x8]
  401540:	mov    ecx,DWORD PTR [ebp+0xc]
  401543:	add    ecx,DWORD PTR [eax]
  401545:	mov    edx,DWORD PTR [ebp-0x8]
  401548:	mov    eax,DWORD PTR [ecx+edx*1-0x907]
  40154f:	add    eax,DWORD PTR [ebp+0x10]
  401552:	mov    ecx,DWORD PTR [ebp+0x8]
  401555:	mov    edx,DWORD PTR [ebp+0xc]
  401558:	add    edx,DWORD PTR [ecx]
  40155a:	mov    ecx,DWORD PTR [ebp-0x8]
  40155d:	mov    DWORD PTR [edx+ecx*1-0x907],eax
  401564:	jmp    0x4014ef
  401566:	mov    esp,ebp
  401568:	pop    ebp
  401569:	ret    
  40156a:	int3   
  40156b:	int3   
  40156c:	int3   
  40156d:	int3   
  40156e:	int3   
  40156f:	int3   
  401570:	push   ebp
  401571:	mov    ebp,esp
  401573:	sub    esp,0x238
  401579:	mov    DWORD PTR [ebp-0x228],0x420018
  401583:	mov    DWORD PTR [ebp-0x22c],0x420094
  40158d:	mov    DWORD PTR [ebp-0x238],0x4200a4
  401597:	mov    DWORD PTR [ebp-0x4],0xe1
  40159e:	push   0x104
  4015a3:	lea    eax,[ebp-0x220]
  4015a9:	push   eax
  4015aa:	call   DWORD PTR ds:0x429f4c
  4015b0:	movzx  ecx,WORD PTR [ebp-0x21e]
  4015b7:	cmp    ecx,0x3a
  4015ba:	je     0x4015c3
  4015bc:	xor    eax,eax
  4015be:	jmp    0x4016a5
  4015c3:	mov    DWORD PTR [ebp-0x18],0x0
  4015ca:	lea    edx,[ebp-0x18]
  4015cd:	push   edx
  4015ce:	push   0x0
  4015d0:	call   DWORD PTR ds:0x429f48
  4015d6:	cmp    DWORD PTR [ebp-0x18],0x0
  4015da:	jne    0x4015e3
  4015dc:	xor    eax,eax
  4015de:	jmp    0x4016a5
  4015e3:	mov    eax,0x61
  4015e8:	mov    ecx,DWORD PTR [ebp-0x238]
  4015ee:	mov    WORD PTR [ecx],ax
  4015f1:	mov    edx,DWORD PTR [ebp-0x22c]
  4015f7:	push   edx
  4015f8:	mov    eax,DWORD PTR [ebp-0x238]
  4015fe:	push   eax
  4015ff:	call   DWORD PTR ds:0x429f50
  401605:	push   eax
  401606:	call   DWORD PTR ds:0x429f54
  40160c:	mov    DWORD PTR [ebp-0x224],eax
  401612:	push   0x4200b8
  401617:	push   0x4200c4
  40161c:	call   DWORD PTR ds:0x429f50
  401622:	push   eax
  401623:	call   DWORD PTR ds:0x429f54
  401629:	mov    ds:0x42a8a0,eax
  40162e:	mov    ecx,0x61
  401633:	mov    edx,DWORD PTR [ebp-0x228]
  401639:	mov    WORD PTR [edx+0x16],cx
  40163d:	lea    eax,[ebp-0x234]
  401643:	push   eax
  401644:	push   0x20019
  401649:	push   0x0
  40164b:	mov    ecx,DWORD PTR [ebp-0x228]
  401651:	push   ecx
  401652:	push   0x80000002
  401657:	call   DWORD PTR [ebp-0x224]
  40165d:	test   eax,eax
  40165f:	jne    0x40166a
  401661:	mov    eax,0x1
  401666:	jmp    0x4016a5
  401668:	jmp    0x401673
  40166a:	call   0x401570
  40166f:	xor    eax,eax
  401671:	jmp    0x4016a5
  401673:	mov    edx,DWORD PTR [ebp-0x230]
  401679:	movzx  eax,BYTE PTR [edx]
  40167c:	cmp    eax,0x55
  40167f:	je     0x4016a5
  401681:	mov    ecx,DWORD PTR [ebp-0x230]
  401687:	movzx  edx,BYTE PTR [ecx]
  40168a:	cmp    edx,0x8b
  401690:	je     0x4016a5
  401692:	mov    eax,DWORD PTR [ebp-0x230]
  401698:	movzx  ecx,BYTE PTR [eax]
  40169b:	cmp    ecx,0x6a
  40169e:	je     0x4016a5
  4016a0:	call   0x401330
  4016a5:	mov    esp,ebp
  4016a7:	pop    ebp
  4016a8:	ret    
  4016a9:	int3   
  4016aa:	int3   
  4016ab:	int3   
  4016ac:	int3   
  4016ad:	int3   
  4016ae:	int3   
  4016af:	int3   
  4016b0:	push   ebp
  4016b1:	mov    ebp,esp
  4016b3:	sub    esp,0x220
  4016b9:	mov    DWORD PTR [ebp-0x8],0x307c
  4016c0:	mov    DWORD PTR [ebp-0x220],0x3000
  4016ca:	mov    DWORD PTR [ebp-0x4],0x40
  4016d1:	mov    DWORD PTR [ebp-0x214],0x0
  4016db:	mov    DWORD PTR [ebp-0x218],0x0
  4016e5:	mov    DWORD PTR [ebp-0x8],0x307c
  4016ec:	mov    DWORD PTR [ebp-0x8],0x307c
  4016f3:	mov    DWORD PTR [ebp-0x8],0x307c
  4016fa:	mov    DWORD PTR [ebp-0x8],0x307c
  401701:	mov    eax,ds:0x429f4c
  401706:	mov    ds:0x42a8a4,eax
  40170b:	push   0x104
  401710:	lea    ecx,[ebp-0x210]
  401716:	push   ecx
  401717:	call   DWORD PTR ds:0x42a8a4
  40171d:	mov    edx,DWORD PTR [ebp-0x4]
  401720:	push   edx
  401721:	mov    eax,DWORD PTR [ebp-0x220]
  401727:	push   eax
  401728:	mov    ecx,DWORD PTR [ebp+0x8]
  40172b:	push   ecx
  40172c:	mov    edx,DWORD PTR [ebp-0x214]
  401732:	push   edx
  401733:	push   0xffffffff
  401735:	call   DWORD PTR ds:0x429f58
  40173b:	mov    esp,ebp
  40173d:	pop    ebp
  40173e:	ret    
  40173f:	int3   
  401740:	push   ebp
  401741:	mov    ebp,esp
  401743:	push   ecx
  401744:	mov    DWORD PTR [ebp-0x4],0x5ce1
  40174b:	mov    DWORD PTR [ebp-0x4],0x5ce1
  401752:	mov    DWORD PTR [ebp-0x4],0x5ce1
  401759:	mov    DWORD PTR [ebp-0x4],0x5ce1
  401760:	mov    DWORD PTR [ebp-0x4],0x5ce1
  401767:	mov    DWORD PTR [ebp-0x4],0x5ce1
  40176e:	mov    DWORD PTR [ebp-0x4],0x5ce1
  401775:	mov    edx,edx
  401777:	mov    edx,edx
  401779:	mov    esp,DWORD PTR ds:0x42a880
  40177f:	mov    edx,edx
  401781:	mov    edx,edx
  401783:	add    esp,0x4
  401786:	mov    edx,edx
  401788:	mov    edx,edx
  40178a:	mov    ecx,DWORD PTR ds:0x42a894
  401790:	jmp    ecx
  401792:	mov    esp,ebp
  401794:	pop    ebp
  401795:	ret    
  401796:	int3   
  401797:	int3   
  401798:	int3   
  401799:	int3   
  40179a:	int3   
  40179b:	int3   
  40179c:	int3   
  40179d:	int3   
  40179e:	int3   
  40179f:	int3   
  4017a0:	push   ebp
  4017a1:	mov    ebp,esp
  4017a3:	sub    esp,0x18
  4017a6:	mov    eax,DWORD PTR [ebp+0x8]
  4017a9:	mov    DWORD PTR [ebp-0x8],eax
  4017ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4017af:	mov    DWORD PTR [ebp-0x4],ecx
  4017b2:	mov    DWORD PTR [ebp-0x10],0x19c
  4017b9:	mov    edx,DWORD PTR [ebp-0x8]
  4017bc:	mov    DWORD PTR ds:0x42a8a8,edx
  4017c2:	mov    eax,DWORD PTR [ebp-0x4]
  4017c5:	mov    ds:0x42a8ac,eax
  4017ca:	mov    ecx,DWORD PTR ds:0x42a8a8
  4017d0:	mov    DWORD PTR [ebp-0x14],ecx
  4017d3:	mov    edx,DWORD PTR ds:0x42a8ac
  4017d9:	mov    DWORD PTR [ebp-0xc],edx
  4017dc:	mov    eax,DWORD PTR [ebp-0xc]
  4017df:	mov    ecx,DWORD PTR [ebp-0x14]
  4017e2:	lea    edx,[ecx+eax*2]
  4017e5:	mov    DWORD PTR [ebp-0x18],edx
  4017e8:	mov    eax,DWORD PTR [ebp-0x18]
  4017eb:	mov    DWORD PTR [ebp-0x14],eax
  4017ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4017f1:	movzx  edx,WORD PTR [ecx]
  4017f4:	mov    DWORD PTR [ebp-0xc],edx
  4017f7:	mov    eax,DWORD PTR [ebp-0xc]
  4017fa:	mov    esp,ebp
  4017fc:	pop    ebp
  4017fd:	ret    
  4017fe:	int3   
  4017ff:	int3   
  401800:	push   ebp
  401801:	mov    ebp,esp
  401803:	sub    esp,0xc
  401806:	mov    eax,DWORD PTR [ebp+0x8]
  401809:	mov    DWORD PTR [ebp-0x8],eax
  40180c:	mov    ecx,DWORD PTR [ebp+0xc]
  40180f:	mov    DWORD PTR [ebp-0xc],ecx
  401812:	mov    DWORD PTR [ebp-0x4],0x11afc
  401819:	mov    edx,DWORD PTR [ebp-0x8]
  40181c:	cmp    edx,DWORD PTR [ebp-0xc]
  40181f:	jae    0x40182f
  401821:	mov    DWORD PTR [ebp-0x4],0x11afc
  401828:	mov    eax,DWORD PTR [ebp-0x8]
  40182b:	jmp    0x401839
  40182d:	jmp    0x401839
  40182f:	mov    DWORD PTR [ebp-0x4],0x11afc
  401836:	mov    eax,DWORD PTR [ebp-0xc]
  401839:	mov    esp,ebp
  40183b:	pop    ebp
  40183c:	ret    
  40183d:	int3   
  40183e:	int3   
  40183f:	int3   
  401840:	push   ebp
  401841:	mov    ebp,esp
  401843:	mov    eax,DWORD PTR [ebp+0x10]
  401846:	push   eax
  401847:	mov    ecx,DWORD PTR [ebp+0xc]
  40184a:	push   ecx
  40184b:	mov    edx,DWORD PTR [ebp+0x8]
  40184e:	push   edx
  40184f:	call   0x4018c0
  401854:	add    esp,0xc
  401857:	pop    ebp
  401858:	ret    
  401859:	int3   
  40185a:	int3   
  40185b:	int3   
  40185c:	int3   
  40185d:	int3   
  40185e:	int3   
  40185f:	int3   
  401860:	push   ebp
  401861:	mov    ebp,esp
  401863:	mov    eax,DWORD PTR [ebp+0x8]
  401866:	xor    eax,DWORD PTR [ebp+0xc]
  401869:	pop    ebp
  40186a:	ret    
  40186b:	int3   
  40186c:	int3   
  40186d:	int3   
  40186e:	int3   
  40186f:	int3   
  401870:	push   ebp
  401871:	mov    ebp,esp
  401873:	sub    esp,0x8
  401876:	mov    eax,DWORD PTR [ebp+0x8]
  401879:	cmp    DWORD PTR [eax+0x4],0x0
  40187d:	je     0x4018bb
  40187f:	mov    ecx,DWORD PTR [ebp+0x8]
  401882:	add    ecx,0x8
  401885:	mov    DWORD PTR ds:0x42a89c,ecx
  40188b:	mov    edx,DWORD PTR [ebp+0x8]
  40188e:	mov    eax,DWORD PTR [edx+0x4]
  401891:	mov    ds:0x42a898,eax
  401896:	call   0x401350
  40189b:	mov    ecx,DWORD PTR [ebp+0x8]
  40189e:	mov    DWORD PTR ds:0x42a8b0,ecx
  4018a4:	mov    edx,DWORD PTR [ebp+0x10]
  4018a7:	push   edx
  4018a8:	mov    eax,DWORD PTR [ebp+0xc]
  4018ab:	push   eax
  4018ac:	push   0x1
  4018ae:	call   0x401840
  4018b3:	add    esp,0xc
  4018b6:	mov    DWORD PTR [ebp+0x8],eax
  4018b9:	jmp    0x401876
  4018bb:	mov    esp,ebp
  4018bd:	pop    ebp
  4018be:	ret    
  4018bf:	int3   
  4018c0:	push   ebp
  4018c1:	mov    ebp,esp
  4018c3:	cmp    DWORD PTR [ebp+0x8],0x1
  4018c7:	jne    0x4018d1
  4018c9:	mov    eax,ds:0x42a8b0
  4018ce:	mov    DWORD PTR [ebp+0x8],eax
  4018d1:	mov    ecx,DWORD PTR [ebp+0x10]
  4018d4:	push   ecx
  4018d5:	mov    edx,DWORD PTR [ebp+0xc]
  4018d8:	push   edx
  4018d9:	mov    eax,DWORD PTR [ebp+0x8]
  4018dc:	push   eax
  4018dd:	call   0x4014e0
  4018e2:	add    esp,0xc
  4018e5:	mov    ecx,DWORD PTR [ebp+0x8]
  4018e8:	push   ecx
  4018e9:	call   0x4014d0
  4018ee:	add    esp,0x4
  4018f1:	mov    DWORD PTR [ebp+0x8],eax
  4018f4:	mov    eax,DWORD PTR [ebp+0x8]
  4018f7:	pop    ebp
  4018f8:	ret    
  4018f9:	int3   
  4018fa:	int3   
  4018fb:	int3   
  4018fc:	int3   
  4018fd:	int3   
  4018fe:	int3   
  4018ff:	int3   
  401900:	push   ebp
  401901:	mov    ebp,esp
  401903:	sub    esp,0x228
  401909:	mov    DWORD PTR [ebp-0x218],0x0
  401913:	mov    DWORD PTR [ebp-0x214],0x4200d8
  40191d:	mov    DWORD PTR [ebp-0x4],0x12f1
  401924:	mov    DWORD PTR [ebp-0x4],0x12f1
  40192b:	mov    DWORD PTR [ebp-0x220],0x0
  401935:	jmp    0x401946
  401937:	mov    eax,DWORD PTR [ebp-0x220]
  40193d:	add    eax,0x4
  401940:	mov    DWORD PTR [ebp-0x220],eax
  401946:	mov    ecx,DWORD PTR [ebp-0x220]
  40194c:	cmp    ecx,DWORD PTR [ebp+0xc]
  40194f:	jae    0x401a03
  401955:	mov    DWORD PTR [ebp-0x4],0x12f1
  40195c:	mov    DWORD PTR [ebp-0x4],0x12f1
  401963:	mov    edx,DWORD PTR [ebp-0x220]
  401969:	add    edx,0xc7fcf
  40196f:	mov    DWORD PTR ds:0x42a8b4,edx
  401975:	mov    DWORD PTR [ebp-0x4],0x12f1
  40197c:	mov    eax,DWORD PTR [ebp+0x8]
  40197f:	add    eax,DWORD PTR [ebp-0x220]
  401985:	mov    DWORD PTR [ebp-0x228],eax
  40198b:	mov    DWORD PTR [ebp-0x4],0x12f1
  401992:	mov    DWORD PTR [ebp-0x4],0x12f1
  401999:	mov    ecx,DWORD PTR [ebp-0x228]
  40199f:	mov    edx,DWORD PTR [ecx]
  4019a1:	add    edx,DWORD PTR [ebp-0x220]
  4019a7:	mov    eax,DWORD PTR [ebp-0x228]
  4019ad:	mov    DWORD PTR [eax],edx
  4019af:	mov    DWORD PTR [ebp-0x4],0x12f1
  4019b6:	mov    ecx,DWORD PTR [ebp-0x228]
  4019bc:	mov    DWORD PTR [ebp-0x224],ecx
  4019c2:	mov    edx,DWORD PTR ds:0x42a8b4
  4019c8:	mov    DWORD PTR [ebp-0x4],edx
  4019cb:	mov    DWORD PTR [ebp-0x4],0x12f1
  4019d2:	mov    eax,DWORD PTR [ebp-0x224]
  4019d8:	mov    ecx,DWORD PTR [eax]
  4019da:	mov    DWORD PTR [ebp-0x4],ecx
  4019dd:	mov    edx,DWORD PTR ds:0x42a8b4
  4019e3:	push   edx
  4019e4:	mov    eax,DWORD PTR [ebp-0x4]
  4019e7:	push   eax
  4019e8:	call   0x401860
  4019ed:	add    esp,0x8
  4019f0:	mov    DWORD PTR [ebp-0x4],eax
  4019f3:	mov    ecx,DWORD PTR [ebp-0x224]
  4019f9:	mov    edx,DWORD PTR [ebp-0x4]
  4019fc:	mov    DWORD PTR [ecx],edx
  4019fe:	jmp    0x401937
  401a03:	mov    esp,ebp
  401a05:	pop    ebp
  401a06:	ret    
  401a07:	int3   
  401a08:	int3   
  401a09:	int3   
  401a0a:	int3   
  401a0b:	int3   
  401a0c:	int3   
  401a0d:	int3   
  401a0e:	int3   
  401a0f:	int3   
  401a10:	push   ebp
  401a11:	mov    ebp,esp
  401a13:	sub    esp,0x214
  401a19:	push   0x104
  401a1e:	lea    eax,[ebp-0x208]
  401a24:	push   eax
  401a25:	call   DWORD PTR ds:0x42a8a4
  401a2b:	mov    DWORD PTR [ebp-0x210],0x0
  401a35:	jmp    0x401a46
  401a37:	mov    ecx,DWORD PTR [ebp-0x210]
  401a3d:	add    ecx,0x1
  401a40:	mov    DWORD PTR [ebp-0x210],ecx
  401a46:	mov    edx,DWORD PTR [ebp-0x210]
  401a4c:	cmp    edx,DWORD PTR [ebp+0x10]
  401a4f:	jge    0x401b7b
  401a55:	cmp    DWORD PTR [ebp-0x210],0x0
  401a5c:	jne    0x401b15
  401a62:	mov    DWORD PTR [ebp-0x214],0x4200e0
  401a6c:	mov    eax,0x5c
  401a71:	mov    ecx,DWORD PTR [ebp-0x214]
  401a77:	mov    WORD PTR [ecx],ax
  401a7a:	mov    edx,0x73
  401a7f:	mov    eax,DWORD PTR [ebp-0x214]
  401a85:	mov    WORD PTR [eax+0x2],dx
  401a89:	mov    ecx,0x79
  401a8e:	mov    edx,DWORD PTR [ebp-0x214]
  401a94:	mov    WORD PTR [edx+0x4],cx
  401a98:	mov    eax,0x65
  401a9d:	mov    ecx,DWORD PTR [ebp-0x214]
  401aa3:	mov    WORD PTR [ecx+0xa],ax
  401aa7:	mov    edx,0x6d
  401aac:	mov    eax,DWORD PTR [ebp-0x214]
  401ab2:	mov    WORD PTR [eax+0xc],dx
  401ab6:	mov    ecx,0x33
  401abb:	mov    edx,DWORD PTR [ebp-0x214]
  401ac1:	mov    WORD PTR [edx+0xe],cx
  401ac5:	mov    eax,0x32
  401aca:	mov    ecx,DWORD PTR [ebp-0x214]
  401ad0:	mov    WORD PTR [ecx+0x10],ax
  401ad4:	mov    edx,0x5c
  401ad9:	mov    eax,DWORD PTR [ebp-0x214]
  401adf:	mov    WORD PTR [eax+0x12],dx
  401ae3:	mov    ecx,0x73
  401ae8:	mov    edx,DWORD PTR [ebp-0x214]
  401aee:	mov    WORD PTR [edx+0x16],cx
  401af2:	mov    eax,0x65
  401af7:	mov    ecx,DWORD PTR [ebp-0x214]
  401afd:	mov    WORD PTR [ecx+0x24],ax
  401b01:	mov    edx,DWORD PTR [ebp-0x214]
  401b07:	push   edx
  401b08:	lea    eax,[ebp-0x208]
  401b0e:	push   eax
  401b0f:	call   DWORD PTR ds:0x42a8a0
  401b15:	mov    ecx,DWORD PTR [ebp+0x8]
  401b18:	add    ecx,DWORD PTR [ebp-0x210]
  401b1e:	mov    edx,DWORD PTR [ebp+0xc]
  401b21:	add    edx,DWORD PTR [ebp-0x210]
  401b27:	mov    al,BYTE PTR [edx]
  401b29:	mov    BYTE PTR [ecx],al
  401b2b:	cmp    DWORD PTR [ebp-0x210],0x0
  401b32:	jne    0x401b76
  401b34:	mov    ecx,DWORD PTR ds:0x429f5c
  401b3a:	mov    DWORD PTR ds:0x42a8b8,ecx
  401b40:	push   0x0
  401b42:	push   0x80
  401b47:	push   0x3
  401b49:	push   0x0
  401b4b:	push   0x3
  401b4d:	push   0x1
  401b4f:	lea    edx,[ebp-0x208]
  401b55:	push   edx
  401b56:	call   DWORD PTR ds:0x42a8b8
  401b5c:	mov    DWORD PTR [ebp-0x20c],eax
  401b62:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  401b69:	je     0x401b74
  401b6b:	cmp    DWORD PTR [ebp-0x20c],0x0
  401b72:	jne    0x401b76
  401b74:	jmp    0x401ba8
  401b76:	jmp    0x401a37
  401b7b:	mov    eax,DWORD PTR [ebp+0x8]
  401b7e:	cmp    eax,DWORD PTR ds:0x42a890
  401b84:	jne    0x401ba8
  401b86:	mov    ecx,DWORD PTR ds:0x42a88c
  401b8c:	sub    ecx,0x400000
  401b92:	push   ecx
  401b93:	mov    edx,DWORD PTR ds:0x42a88c
  401b99:	push   edx
  401b9a:	mov    eax,ds:0x42a87c
  401b9f:	push   eax
  401ba0:	call   0x401870
  401ba5:	add    esp,0xc
  401ba8:	mov    esp,ebp
  401baa:	pop    ebp
  401bab:	ret    
	...
  405a2c:	fs lahf 
  405a2e:	inc    edx
  405a2f:	add    BYTE PTR [eax-0x61],ch
  405a32:	inc    edx
  405a33:	add    BYTE PTR [edi+ebx*4+0x42],ch
  405a37:	add    BYTE PTR [eax-0x61],dh
  405a3a:	inc    edx
  405a3b:	add    BYTE PTR [edi+ebx*4+0x42],dh
  405a3f:	add    BYTE PTR [eax-0x61],bh
  405a42:	inc    edx
  405a43:	add    BYTE PTR [edi+ebx*4+0x42],bh
  405a47:	add    BYTE PTR [eax-0x7bffbd61],al
  405a4d:	lahf   
  405a4e:	inc    edx
  405a4f:	add    BYTE PTR [eax-0x73ffbd61],cl
  405a55:	lahf   
  405a56:	inc    edx
  405a57:	add    BYTE PTR [eax-0x6bffbd61],dl
  405a5d:	lahf   
  405a5e:	inc    edx
  405a5f:	add    BYTE PTR [eax-0x63ffbd61],bl
  405a65:	lahf   
  405a66:	inc    edx
  405a67:	add    BYTE PTR [eax-0x5bffbd61],ah
  405a6d:	lahf   
  405a6e:	inc    edx
  405a6f:	add    BYTE PTR [eax-0x53ffbd61],ch
  405a75:	lahf   
  405a76:	inc    edx
  405a77:	add    BYTE PTR [eax-0x4bffbd61],dh
  405a7d:	lahf   
  405a7e:	inc    edx
  405a7f:	add    BYTE PTR [eax-0x43ffbd61],bh
  405a85:	lahf   
  405a86:	inc    edx
  405a87:	add    al,al
  405a89:	lahf   
  405a8a:	inc    edx
  405a8b:	add    ah,al
  405a8d:	lahf   
  405a8e:	inc    edx
  405a8f:	add    al,cl
  405a91:	lahf   
  405a92:	inc    edx
  405a93:	add    ah,cl
  405a95:	lahf   
  405a96:	inc    edx
  405a97:	add    al,dl
  405a99:	lahf   
  405a9a:	inc    edx
  405a9b:	add    ah,dl
  405a9d:	lahf   
  405a9e:	inc    edx
  405a9f:	add    al,bl
  405aa1:	lahf   
  405aa2:	inc    edx
  405aa3:	add    ah,bl
  405aa5:	lahf   
  405aa6:	inc    edx
  405aa7:	add    al,ah
  405aa9:	lahf   
  405aaa:	inc    edx
  405aab:	add    ah,ah
  405aad:	lahf   
  405aae:	inc    edx
  405aaf:	add    al,ch
  405ab1:	lahf   
  405ab2:	inc    edx
  405ab3:	add    ah,ch
  405ab5:	lahf   
  405ab6:	inc    edx
  405ab7:	add    al,dh
  405ab9:	lahf   
  405aba:	inc    edx
  405abb:	add    ah,dh
  405abd:	lahf   
  405abe:	inc    edx
  405abf:	add    al,bh
  405ac1:	lahf   
  405ac2:	inc    edx
  405ac3:	add    ah,bh
  405ac5:	lahf   
  405ac6:	inc    edx
  405ac7:	add    BYTE PTR [eax],al
  405ac9:	mov    al,ds:0xa0040042
  405ace:	inc    edx
  405acf:	add    BYTE PTR [eax],cl
  405ad1:	mov    al,ds:0xa00c0042
  405ad6:	inc    edx
  405ad7:	add    BYTE PTR [eax],dl
  405ad9:	mov    al,ds:0xa0140042
  405ade:	inc    edx
  405adf:	add    BYTE PTR [eax],bl
  405ae1:	mov    al,ds:0xa01c0042
  405ae6:	inc    edx
  405ae7:	add    BYTE PTR [eax],ah
  405ae9:	mov    al,ds:0xa0240042
  405aee:	inc    edx
  405aef:	add    BYTE PTR [eax],ch
  405af1:	mov    al,ds:0xa02c0042
  405af6:	inc    edx
  405af7:	add    BYTE PTR [eax],dh
  405af9:	mov    al,ds:0xa0340042
  405afe:	inc    edx
  405aff:	add    BYTE PTR [eax],bh
  405b01:	mov    al,ds:0xa03c0042
  405b06:	inc    edx
  405b07:	add    BYTE PTR [eax-0x60],al
  405b0a:	inc    edx
  405b0b:	add    BYTE PTR [eax+eiz*4+0x42],al
  405b0f:	add    BYTE PTR [eax-0x60],cl
  405b12:	inc    edx
  405b13:	add    BYTE PTR [eax+eiz*4+0x42],cl
  405b17:	add    BYTE PTR [eax-0x60],dl
  405b1a:	inc    edx
  405b1b:	add    BYTE PTR [eax+eiz*4+0x42],dl
  405b1f:	add    BYTE PTR [eax-0x60],bl
  405b22:	inc    edx
  405b23:	add    BYTE PTR [eax+eiz*4+0x42],bl
  405b27:	add    BYTE PTR [eax-0x60],ah
  405b2a:	inc    edx
  405b2b:	add    BYTE PTR [eax+eiz*4+0x42],ah
  405b2f:	add    BYTE PTR [eax-0x60],ch
  405b32:	inc    edx
  405b33:	add    BYTE PTR [eax+eiz*4+0x42],ch
  405b37:	add    BYTE PTR [eax-0x60],dh
  405b3a:	inc    edx
  405b3b:	add    BYTE PTR [eax+eiz*4+0x42],dh
  405b3f:	add    BYTE PTR [eax-0x60],bh
  405b42:	inc    edx
  405b43:	add    BYTE PTR [eax+eiz*4+0x42],dl
  405b47:	add    BYTE PTR [eax+eiz*4+0x42],bh
  405b4b:	add    ah,bl
  405b4d:	lahf   
  405b4e:	inc    edx
  405b4f:	add    BYTE PTR [eax-0x7bffbd60],al
  405b55:	mov    al,ds:0xa0880042
  405b5a:	inc    edx
  405b5b:	add    BYTE PTR [eax+eiz*4-0x5f6fffbe],cl
  405b62:	inc    edx
  405b63:	add    BYTE PTR [eax+eiz*4-0x5f67ffbe],dl
  405b6a:	inc    edx
  405b6b:	add    BYTE PTR [eax+eiz*4-0x5f5fffbe],bl
  405b72:	inc    edx
  405b73:	add    BYTE PTR [eax+eiz*4-0x5f57ffbe],ah
  405b7a:	inc    edx
  405b7b:	add    BYTE PTR [eax+eiz*4-0x5f4fffbe],ch
  405b82:	inc    edx
  405b83:	add    BYTE PTR [eax+eiz*4-0x5f97ffbe],dh
  405b8a:	inc    edx
  405b8b:	add    BYTE PTR [eax-0x43ffbd60],bh
  405b91:	mov    al,ds:0xa0c00042
  405b96:	inc    edx
  405b97:	add    ah,al
  405b99:	mov    al,ds:0xa0c80042
  405b9e:	inc    edx
  405b9f:	add    ah,cl
  405ba1:	mov    al,ds:0xa0d00042
  405ba6:	inc    edx
  405ba7:	add    ah,dl
  405ba9:	mov    al,ds:0xa0d80042
  405bae:	inc    edx
  405baf:	add    ah,bl
  405bb1:	mov    al,ds:0xa0e00042
  405bb6:	inc    edx
  405bb7:	add    ah,ah
  405bb9:	mov    al,ds:0x2000042
  405bbe:	add    BYTE PTR [eax],al
  405bc0:	iret   
  405bc1:	jg     0x405bcf
  405bc3:	add    bh,al
  405bc5:	jg     0x405bd3
  405bc7:	add    BYTE PTR [ebx+0x4d],dl
  405bca:	pushf  
  405bcb:	xor    al,BYTE PTR [ebx+0x4d]
  405bce:	xchg   esp,eax
  405bcf:	xor    dh,BYTE PTR [ebx]
  405bd1:	dec    ebp
  405bd2:	lods   al,BYTE PTR ds:[esi]
  405bd3:	xor    dh,BYTE PTR [ebx]
  405bd5:	dec    ebp
  405bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bd7:	xor    cl,bh
  405bd9:	pop    ds
  405bda:	or     eax,0xc7fab00
  405bdf:	add    BYTE PTR [edx+eax*2+0x423f3d87],ch
  405be6:	xchg   esi,eax
  405be7:	cmp    eax,0x3da44240
  405bec:	sub    DWORD PTR [edx-0x21],eax
  405bef:	cmp    eax,0x3de441f1
  405bf4:	sar    DWORD PTR [ebp-0x41ebc1df],cl
  405bfa:	pop    ebp
  405bfb:	ds push ss
  405bfd:	mov    esi,0xbfab3ed1
  405c02:	or     al,0x0
  405c04:	iret   
  405c05:	out    dx,eax
  405c06:	or     eax,0xc808700
  405c0b:	add    BYTE PTR [eax+0x7a30c1b0],dl
  405c11:	mov    al,0x8
  405c13:	xor    edx,ebx
  405c15:	mov    al,0x2b
  405c17:	xor    DWORD PTR [ecx-0x4f],eax
  405c1a:	iret   
  405c1b:	xor    DWORD PTR [ecx+esi*4-0x4e9fce1b],edx
  405c22:	repz xor DWORD PTR [eax],eax
	...
  405c2d:	add    bl,bl
  405c2f:	mov    cl,0x1e
  405c31:	xor    ch,BYTE PTR [ecx-0x69cdc24f]
  405c37:	mov    cl,0x33
  405c39:	xor    cl,BYTE PTR [edx]
  405c3b:	mov    dl,0x54
  405c3d:	xor    cl,BYTE PTR [esi]
  405c3f:	mov    dl,0xcb
  405c41:	xor    cl,BYTE PTR [ecx-0x4d]
  405c44:	xchg   DWORD PTR [ebx],esi
  405c46:	pop    edx
  405c47:	mov    bl,0xaa
  405c49:	xor    edi,DWORD PTR [edi-0x4d]
  405c4c:	shl    DWORD PTR [ebx],0x33
  405c4f:	mov    bl,0xe6
  405c51:	xor    ecx,ebp
  405c53:	mov    bl,0x2d
  405c55:	xor    al,0x89
  405c57:	mov    bl,0x5b
  405c59:	xor    al,0x73
  405c5b:	mov    bl,0x6f
  405c5d:	xor    al,0x86
  405c5f:	mov    bl,0x8e
  405c61:	xor    al,0x57
  405c63:	mov    ah,0x9d
  405c65:	xor    al,0x60
  405c67:	mov    ah,0x92
  405c69:	xor    al,0x22
  405c6b:	mov    ah,0xb1
  405c6d:	xor    al,0xd
  405c6f:	mov    ah,0xd8
  405c71:	xor    al,0x2
  405c73:	mov    ah,0xeb
  405c75:	xor    al,0xe1
  405c77:	mov    bl,0xe
  405c79:	xor    eax,0x3544b4bf
  405c7e:	sbb    DWORD PTR [ebp-0x4ad5caa8],esi
  405c84:	xor    ax,0xb44d
  405c88:	mov    dl,0x35
  405c8a:	xchg   DWORD PTR [ecx+ebx*8-0x184b51cb],esi
  405c91:	xor    eax,0x0
  405c96:	add    BYTE PTR [eax],al
  405c98:	add    BYTE PTR [eax],al
  405c9a:	add    BYTE PTR [eax],al
  405c9c:	fwait
  405c9d:	mov    ah,0xf2
  405c9f:	xor    eax,0x3602b5c6
  405ca4:	mov    ebx,0xb83611b5
  405ca9:	mov    ch,0x38
  405cab:	lds    esi,FWORD PTR ss:[ebp-0x49edc9cd]
  405cb2:	inc    ebp
  405cb3:	add    DWORD PTR ss:[esi-0x4a12c9a8],esi
  405cba:	fs ss repnz mov ch,0x7e
  405cbf:	ss dec eax
  405cc1:	mov    ch,0x96
  405cc3:	mov    DWORD PTR ss:[ebp-0x4ae2c940],esi
  405cca:	shl    BYTE PTR [esi],1
  405ccc:	leave  
  405ccd:	mov    dh,0x27
  405ccf:	aaa    
  405cd0:	div    DWORD PTR [esi-0x4966c8c0]
  405cd6:	outs   dx,DWORD PTR ds:[esi]
  405cd7:	aaa    
  405cd8:	mov    dh,0xb6
  405cda:	jge    0x405d13
  405cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cdd:	mov    dh,0x88
  405cdf:	aaa    
  405ce0:	dec    ebx
  405ce1:	mov    dh,0x91
  405ce3:	aaa    
  405ce4:	ins    DWORD PTR es:[edi],dx
  405ce5:	mov    dh,0xbd
  405ce7:	aaa    
  405ce8:	adc    dh,BYTE PTR [esi-0x49e6c83e]
  405cee:	jmp    0xcc02c2a
  405cf3:	add    bh,cl
  405cf5:	jg     0x405d03
  405cf7:	add    bh,cl
  405cf9:	jg     0x405d07
  405cfb:	add    bh,cl
  405cfd:	jg     0x405d0b
	...
  405d07:	add    BYTE PTR [eax],al
  405d09:	add    bh,cl
  405d0b:	jg     0x405d19
  405d0d:	add    bh,cl
  405d0f:	jg     0x405d1d
  405d11:	add    bh,cl
  405d13:	jg     0x405d21
  405d15:	add    bh,cl
  405d17:	jg     0x405d25
  405d19:	add    bh,cl
  405d1b:	jg     0x405d29
  405d1d:	add    bh,cl
  405d1f:	jg     0x405d2d
  405d21:	add    bh,cl
  405d23:	jg     0x405d31
  405d25:	add    bh,cl
  405d27:	jg     0x405d35
  405d29:	add    bh,cl
  405d2b:	jg     0x405d39
  405d2d:	add    bh,cl
  405d2f:	jg     0x405d3d
  405d31:	add    bh,cl
  405d33:	jg     0x405d41
  405d35:	add    bh,cl
  405d37:	jg     0x405d45
  405d39:	add    bh,cl
  405d3b:	jg     0x405d49
  405d3d:	add    bh,cl
  405d3f:	jg     0x405d4d
  405d41:	add    bh,cl
  405d43:	jg     0x405d51
  405d45:	add    bh,cl
  405d47:	jg     0x405d55
  405d49:	add    bh,cl
  405d4b:	jg     0x405d59
  405d4d:	add    bh,cl
  405d4f:	jg     0x405d5d
  405d51:	add    bh,cl
  405d53:	jg     0x405d61
  405d55:	add    bh,cl
  405d57:	jg     0x405d65
  405d59:	add    bh,cl
  405d5b:	jg     0x405d69
  405d5d:	add    bh,cl
  405d5f:	jg     0x405d6d
  405d61:	add    bh,cl
  405d63:	jg     0x405d71
  405d65:	add    bh,cl
  405d67:	jg     0x405d75
  405d69:	add    bh,cl
  405d6b:	jg     0x405d79
	...
  405d75:	add    BYTE PTR [eax],al
  405d77:	add    bh,cl
  405d79:	jg     0x405d87
  405d7b:	add    bh,cl
  405d7d:	jg     0x405d8b
  405d7f:	add    bh,cl
  405d81:	jg     0x405d8f
  405d83:	add    bh,cl
  405d85:	jg     0x405d93
  405d87:	add    bh,cl
  405d89:	jg     0x405d97
  405d8b:	add    bh,cl
  405d8d:	jg     0x405d9b
  405d8f:	add    bh,cl
  405d91:	jg     0x405d9f
  405d93:	add    bh,cl
  405d95:	jg     0x405da3
  405d97:	add    bh,cl
  405d99:	jg     0x405da7
  405d9b:	add    bh,cl
  405d9d:	jg     0x405dab
  405d9f:	add    bh,cl
  405da1:	jg     0x405daf
  405da3:	add    bh,cl
  405da5:	jg     0x405db3
  405da7:	add    bh,cl
  405da9:	jg     0x405db7
  405dab:	add    bh,cl
  405dad:	jg     0x405dbb
  405daf:	add    bh,cl
  405db1:	jg     0x405dbf
  405db3:	add    bh,cl
  405db5:	jg     0x405dc3
  405db7:	add    bh,cl
  405db9:	jg     0x405dc7
  405dbb:	add    bh,cl
  405dbd:	jg     0x405dcb
  405dbf:	add    bh,cl
  405dc1:	jg     0x405dcf
  405dc3:	add    bh,cl
  405dc5:	jg     0x405dd3
  405dc7:	add    bh,cl
  405dc9:	jg     0x405dd7
  405dcb:	add    bh,cl
  405dcd:	jg     0x405ddb
  405dcf:	add    bh,cl
  405dd1:	jg     0x405ddf
  405dd3:	add    bh,cl
  405dd5:	jg     0x405de3
  405dd7:	add    bh,cl
  405dd9:	jg     0x405de7
	...
  405de3:	add    BYTE PTR [eax],al
  405de5:	add    bh,cl
  405de7:	jg     0x405df5
  405de9:	add    bh,cl
  405deb:	jg     0x405df9
  405ded:	add    bh,cl
  405def:	jg     0x405dfd
  405df1:	add    BYTE PTR [eax],al
  405df3:	ja     0x405df6
  405df5:	add    bh,cl
  405df7:	push   es
  405df8:	dec    ebp
  405df9:	add    BYTE PTR [eax-0x62af87e6],dl
  405dff:	adc    BYTE PTR [edi+0x41],ch
  405e02:	mov    bl,0x1b
  405e04:	jle    0x405e6b
  405e06:	pushf  
  405e07:	or     al,0xc
  405e09:	add    BYTE PTR [ebx-0x6c9b92f0],bl
  405e0f:	push   ss
  405e10:	outs   dx,BYTE PTR ds:[esi]
  405e11:	jb     0x405e81
  405e13:	or     eax,0x3e774575
  405e18:	or     al,0x0
  405e1a:	fwait
  405e1b:	adc    BYTE PTR [ebp+0x64],ch
  405e1e:	xchg   ebx,eax
  405e1f:	push   ss
  405e20:	outs   dx,BYTE PTR ds:[esi]
  405e21:	jb     0x405e91
  405e23:	or     eax,0x28574575
  405e28:	or     al,0x0
  405e2a:	adc    ch,ah
  405e2c:	js     0x405e7b
  405e2e:	xor    ah,ah
  405e30:	jns    0x405e9e
  405e32:	xor    cl,al
  405e34:	ins    DWORD PTR es:[edi],dx
  405e35:	outs   dx,BYTE PTR ds:[esi]
  405e36:	sub    ebp,esp
  405e38:	imul   eax,DWORD PTR [ecx-0x31],0xc000c7f
  405e3f:	repnz imul esp,DWORD PTR [ecx+0x23],0x23694ae5
  405e47:	in     eax,0x4d
  405e49:	add    bl,bh
  405e4b:	bnd js 0x405ec0
  405e4e:	in     al,dx
  405e4f:	loopne 0x405ec9
  405e51:	inc    ecx
  405e52:	iret   
  405e53:	jg     0x405e61
  405e55:	add    BYTE PTR [eax],cl
  405e57:	in     eax,0x78
  405e59:	push   edi
	...
  405e62:	add    BYTE PTR [eax],al
  405e64:	imul   ch
  405e66:	push   0x48f2d86f
  405e6b:	imul   ebx,ebp,0xe0746fe4
  405e71:	icebp  
  405e72:	jne    0x405eb5
  405e74:	iret   
  405e75:	jg     0x405e83
  405e77:	add    BYTE PTR [eax-0x57b2871c],cl
  405e7d:	jecxz  0x405ef8
  405e7f:	ins    BYTE PTR es:[edi],dx
  405e80:	stos   BYTE PTR es:[edi],al
  405e81:	(bad)  
  405e82:	ins    DWORD PTR es:[edi],dx
  405e83:	outs   dx,BYTE PTR ds:[esi]
  405e84:	mov    bl,0xeb
  405e86:	imul   edx,DWORD PTR [edi-0x31],0xd3000c7f
  405e8d:	or     DWORD PTR [eax+eax*1-0x45],0xb3004c81
  405e95:	or     DWORD PTR [eax+eax*1-0x45],0x87004c81
  405e9d:	or     DWORD PTR [eax+eax*1-0x65],0x6f004c81
  405ea5:	or     DWORD PTR [eax+eax*1+0x67],0x90004c81
  405ead:	in     al,0x78
  405eaf:	push   eax
  405eb0:	pop    ebp
  405eb1:	out    dx,al
  405eb2:	outs   dx,DWORD PTR ds:[esi]
  405eb3:	inc    ecx
  405eb4:	xor    esp,esp
  405eb6:	jle    0x405f1d
  405eb8:	cmp    al,0xf3
  405eba:	or     al,0x0
  405ebc:	or     ebp,edi
  405ebe:	ins    DWORD PTR es:[edi],dx
  405ebf:	fs add ebp,ecx
  405ec2:	outs   dx,BYTE PTR ds:[esi]
  405ec3:	jb     0x405ef3
  405ec5:	bnd jne 0x405f0d
	...
  405ed0:	add    BYTE PTR [eax],al
  405ed2:	daa    
  405ed3:	ror    DWORD PTR [eax+eax*1],0x24
  405ed7:	in     eax,0x7e
  405ed9:	outs   dx,BYTE PTR ds:[esi]
  405eda:	sub    ch,ah
  405edc:	aas    
  405edd:	xor    bh,BYTE PTR [ecx-0x30939f1d]
  405ee3:	jg     0x405ef1
  405ee5:	add    dl,ch
  405ee7:	bnd jp 0x405f4d
  405eea:	std    
  405eeb:	repz and ah,BYTE PTR [ebx+edi*8-0x15]
  405ef0:	or     al,0x0
  405ef2:	repnz in al,0x61
  405ef5:	jae    0x405ee9
  405ef7:	repz or al,0x0
  405efa:	loop   0x405eee
  405efc:	jp     0x405f61
  405efe:	mov    ebp,0xb36422f3
  405f03:	jmp    0x405f11
  405f05:	add    BYTE PTR [edx-0x409c9e1c],ch
  405f0b:	clc    
  405f0c:	or     al,0x0
  405f0e:	sub    eax,0xe09a747e
  405f14:	pusha  
  405f15:	inc    ecx
  405f16:	stos   DWORD PTR es:[edi],eax
  405f17:	jmp    0x405f7c
  405f19:	arpl   di,cx
  405f1b:	jg     0x405f29
  405f1d:	add    BYTE PTR [ecx+0x7a747ee8],ah
  405f23:	loopne 0x405f85
  405f25:	inc    ecx
  405f26:	imul   ebp,ebx,0x63
  405f29:	arpl   di,cx
  405f2b:	jg     0x405f39
  405f2d:	add    BYTE PTR [edx+0x5f6161ed],al
  405f33:	aad    0x65
  405f35:	add    BYTE PTR gs:[eax],al
	...
  405f40:	pusha  
  405f41:	into   
  405f42:	push   0x46
  405f44:	data16 jmp 0x405fb0
  405f47:	add    BYTE PTR [ecx],ah
  405f49:	out    0x7e,eax
  405f4b:	je     0x405f87
  405f4d:	fbld   TBYTE PTR [eax+0x50]
  405f50:	cmp    eax,0x2c6578ed
  405f55:	hlt    
  405f56:	or     al,0x0
  405f58:	pop    ss
  405f59:	jecxz  0x405fc8
  405f5b:	jo     0x405f6b
  405f5d:	in     al,dx
  405f5e:	pusha  
  405f5f:	outs   dx,DWORD PTR ds:[esi]
  405f60:	sub    al,0x80
  405f62:	or     al,0x0
  405f64:	and    al,0xe3
  405f66:	jle    0x405fd6
  405f68:	bnd jmp 0x405faa
  405f6b:	xor    dh,BYTE PTR [ecx-0x30939f1d]
  405f71:	jg     0x405f7f
  405f73:	add    BYTE PTR [eax],cl
  405f75:	jecxz  0x405fef
  405f77:	push   eax
  405f78:	fucomp st(4)
  405f7a:	outs   dx,DWORD PTR ds:[esi]
  405f7b:	gs fdivr st(0),st
  405f7e:	inc    esp
  405f7f:	gs out dx,al
  405f81:	out    dx,eax
  405f82:	or     al,0x0
  405f84:	iret   
  405f85:	jg     0x405ff1
  405f87:	add    edi,ecx
  405f89:	and    edx,DWORD PTR [ebp-0x70]
  405f8c:	iret   
  405f8d:	imul   ecx,DWORD PTR [edi],0xf6acf00
  405f93:	add    bh,cl
  405f95:	jge    0x405f8e
  405f97:	add    bh,cl
  405f99:	scas   al,BYTE PTR es:[edi]
  405f9a:	str    edi
  405f9d:	str    di
  405fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fa2:	or     BYTE PTR [eax],al
	...
  405fac:	add    BYTE PTR [eax],al
  405fae:	iret   
  405faf:	str    di
  405fb3:	str    di
  405fb7:	str    di
  405fbb:	str    di
  405fbf:	str    di
  405fc3:	str    di
  405fc7:	str    di
  405fcb:	str    di
  405fcf:	out    0x8,al
  405fd1:	add    bh,cl
  405fd3:	fs push ss
  405fd5:	mov    edx,0x9a366d1
  405fda:	mov    al,BYTE PTR [edi-0x49]
  405fdd:	add    DWORD PTR [ebx],eax
  405fdf:	sub    al,0x29
  405fe1:	push   esp
  405fe2:	aaa    
  405fe3:	cmp    BYTE PTR [ebx+0x20],0x1f
  405fe7:	jns    0x40604f
  405fe9:	addr16 sbb eax,0x2c206448
  405fef:	dec    eax
  405ff0:	outs   dx,BYTE PTR gs:[esi]
  405ff2:	clc    
  405ff3:	pop    edx
  405ff4:	das    
  405ff5:	(bad)  
  405ff6:	jmp    0x6186:0xe9757a86
  405ffd:	outs   dx,BYTE PTR ds:[esi]
  405ffe:	scas   eax,DWORD PTR es:[edi]
  405fff:	and    al,BYTE PTR [esi+0x53]
  406002:	scas   eax,DWORD PTR es:[edi]
  406003:	inc    ebx
  406004:	fs jmp 0xc50d:0x47c
  40600b:	jg     0x405fce
  40600d:	add    ecx,edi
  40600f:	jg     0x405ff6
  406011:	add    eax,DWORD PTR [eax]
	...
  40601b:	add    bh,cl
  40601d:	jg     0x405fd4
  40601f:	inc    eax
  406020:	iret   
  406021:	jg     0x405fb4
  406023:	add    al,0xcc
  406025:	jg     0x406096
  406027:	call   0x7fcf:0x3e5cf87
  40602e:	in     eax,0x3
  406030:	iret   
  406031:	jg     0x406038
  406033:	add    al,0xc8
  406035:	jle    0x406035
  406037:	add    al,0xcd
  406039:	mov    cl,0xe5
  40603b:	sbb    ecx,esi
  40603d:	jg     0x406024
  40603f:	push   ebp
  406040:	iret   
  406041:	jg     0x406028
  406043:	add    ecx,edi
  406045:	jg     0x406063
  406047:	pop    es
  406048:	into   
  406049:	jg     0x406030
  40604b:	adc    ecx,edi
  40604d:	jg     0x406034
  40604f:	xor    ecx,esi
  406051:	jg     0x406038
  406053:	add    ecx,DWORD PTR [edi-0x30ec1a81]
  406059:	jg     0x406040
  40605b:	add    eax,0x3e17fcf
  406060:	iret   
  406061:	jg     0x406048
  406063:	add    ecx,edi
  406065:	jg     0x406048
  406067:	add    ecx,edi
  406069:	jg     0x406050
  40606b:	add    ecx,edi
  40606d:	jg     0x406054
  40606f:	xchg   ebx,eax
  406070:	into   
  406071:	jg     0x406058
  406073:	add    eax,0x89be7fcf
  406078:	into   
  406079:	jg     0x406062
  40607b:	add    ecx,edi
  40607d:	jg     0x406064
  40607f:	add    eax,DWORD PTR [eax]
	...
  406089:	add    bh,bl
  40608b:	jg     0x406072
  40608d:	adc    ecx,edi
  40608f:	jg     0x406076
  406091:	add    ebx,edi
  406093:	jg     0x40607a
  406095:	adc    ecx,edi
  406097:	jg     0x4060a5
  406099:	jmp    0xd94ce06a
  40609e:	int3   
  40609f:	jg     0x4060ad
  4060a1:	jmp    0xe94ce072
  4060a6:	int3   
  4060a7:	jg     0x4060b5
  4060a9:	sbb    esi,eax
  4060ab:	or     BYTE PTR [ecx+eiz*1],0xcc
  4060af:	jg     0x4060bd
  4060b1:	jmp    0xe94ce082
  4060b6:	int3   
  4060b7:	jg     0x4060c5
  4060b9:	jmp    0xe94ce08a
  4060be:	int3   
  4060bf:	jg     0x4060cd
  4060c1:	jmp    0xe94ce092
  4060c6:	int3   
  4060c7:	jg     0x4060d5
  4060c9:	jmp    0xe94ce09a
  4060ce:	int3   
  4060cf:	jg     0x4060dd
  4060d1:	jmp    0xe94ce0a2
  4060d6:	int3   
  4060d7:	jg     0x4060e5
  4060d9:	jmp    0xe94ce0aa
  4060de:	int3   
  4060df:	jg     0x4060ed
  4060e1:	jmp    0xe94ce0b2
  4060e6:	int3   
  4060e7:	jg     0x4060f5
  4060e9:	jmp    0xe94ce0ba
	...
  4060f6:	add    BYTE PTR [eax],al
  4060f8:	int3   
  4060f9:	jg     0x406107
  4060fb:	jmp    0xe94ce0cc
  406100:	int3   
  406101:	jg     0x40610f
  406103:	jmp    0xe94ce0d4
  406108:	int3   
  406109:	jg     0x406117
  40610b:	mov    cl,0x4d
  40610d:	or     BYTE PTR [ecx+edi*2],0xcc
  406111:	jg     0x40611f
  406113:	jmp    0xe94ce0e4
  406118:	int3   
  406119:	jg     0x406127
  40611b:	add    BYTE PTR [esi+0x7e],ah
  40611e:	or     al,0x0
  406120:	jbe    0x4061a0
  406122:	or     al,0x0
  406124:	jbe    0x4061a4
  406126:	or     al,0x0
  406128:	data16 jle 0x406137
  40612b:	add    BYTE PTR [eax-0x16],bh
  40612e:	imul   edi,DWORD PTR [eax+0x62],0x6d000c7e
  406135:	(bad)  
  406136:	or     eax,0xc8e2600
  40613b:	add    BYTE PTR [esi],ah
  40613d:	xchg   esi,eax
  40613e:	or     eax,0xc843600
  406143:	add    BYTE PTR [esi],dh
  406145:	jle    0x406153
  406147:	add    BYTE PTR [esi],ah
  406149:	jle    0x406157
  40614b:	add    BYTE PTR [esi],ah
  40614d:	jle    0x40615b
  40614f:	add    dh,dl
  406151:	or     DWORD PTR [eax+eiz*2],0xffffffc8
  406155:	icebp  
  406156:	push   0xcdea261
	...
  406163:	add    BYTE PTR [eax],al
  406165:	add    dh,ah
  406167:	jl     0x406175
  406169:	add    dh,dh
  40616b:	lods   eax,DWORD PTR ds:[esi]
  40616c:	or     eax,0xc83f600
  406171:	add    dh,ah
  406173:	fwait
  406174:	or     eax,0xc7de600
  406179:	add    BYTE PTR [esi-0x49fff383],dh
  40617f:	jge    0x40618d
  406181:	add    dh,ah
  406183:	or     DWORD PTR [eax+eax*2],0xffffff98
  406187:	fldcw  WORD PTR [ebp+0x74]
  40618a:	xlat   BYTE PTR ds:[ebx]
  40618b:	or     DWORD PTR [eax+eax*1],0xe
  40618f:	(bad)  
  406190:	or     al,0x0
  406192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406193:	mov    ebp,0xcba6000d
  406198:	or     al,0x0
  40619a:	jbe    0x40612d
  40619c:	or     eax,0xf66cf00
  4061a1:	add    bh,cl
  4061a3:	str    di
  4061a7:	str    di
  4061ab:	str    WORD PTR es:[edi-0x30fff099]
  4061b3:	str    di
  4061b7:	str    di
  4061bb:	str    di
  4061bf:	cmp    eax,DWORD PTR [eax+0x672e9fec]
  4061c5:	pandn  mm4,QWORD PTR [esi]
  4061c8:	psubb  mm0,QWORD PTR [eax]
	...
  4061d3:	add    BYTE PTR [ebp+0x20ffc867],bl
  4061d9:	cld    
  4061da:	pop    es
  4061db:	push   0xffffffce
  4061dd:	cld    
  4061de:	push   cs
  4061df:	call   0x48bc78
  4061e4:	push   ss
  4061e5:	and    eax,0xdd9a000c
  4061ea:	in     al,0x50
  4061ec:	xchg   edi,eax
  4061ed:	mov    esi,0x668f102a
  4061f2:	div    DWORD PTR [edx-0x32]
  4061f5:	and    eax,0x5e6283fb
  4061fa:	pcmpeqb mm0,mm4
  4061fd:	fstp   QWORD PTR [ebp+0x8]
  406200:	inc    esp
  406201:	jne    0x4061fd
  406203:	jne    0x4061dc
  406205:	sbb    DWORD PTR [esi+0x8],ebx
  406208:	xchg   esi,eax
  406209:	and    al,0xc
  40620b:	add    BYTE PTR [edx],ah
  40620d:	fsubrp st(4),st
  40620f:	or     DWORD PTR [ebx+0x375857fe],0xffffff94
  406216:	sbb    BYTE PTR [eax-0x31],al
  406219:	out    dx,al
  40621a:	jle    0x40621d
  40621c:	mov    ecx,gs
  40621e:	sti    
  40621f:	jne    0x4061e4
  406221:	jg     0x40629d
  406223:	inc    ecx
  406224:	xchg   DWORD PTR [eax-0x58],eax
  406227:	test   edi,0x4403e57f
  40622d:	shr    ch,cl
  40622f:	mov    bl,ch
  406231:	in     eax,0xe5
  406233:	mul    dl
  406235:	(bad)  
  406236:	xor    dh,BYTE PTR [ecx+0x0]
	...
  406241:	add    BYTE PTR [ebx+0x78],ah
  406244:	mov    al,0xfb
  406246:	pop    eax
  406247:	repnz in eax,dx
  406249:	idiv   ch
  40624b:	xchg   ebx,eax
  40624c:	cmp    al,0xc2
  40624e:	fstp   TBYTE PTR [edi-0x48]
  406251:	mov    dh,BYTE PTR [ebx]
  406253:	cld    
  406254:	and    ah,bh
  406256:	lahf   
  406257:	xlat   BYTE PTR ds:[ebx]
  406258:	lea    eax,[ebp-0x41a4021]
  40625e:	popf   
  40625f:	jle    0x406287
  406261:	test   DWORD PTR [eax],0xcf03fdc2
  406267:	jg     0x40624e
  406269:	mov    esi,0x3e57b8a
  40626e:	iret   
  40626f:	jg     0x4062ef
  406271:	push   eax
  406272:	xlat   BYTE PTR ds:[ebx]
  406273:	add    al,0xf7
  406275:	mov    BYTE PTR [edx-0x3295ca89],dl
  40627b:	js     0x4062ad
  40627d:	clc    
  40627e:	call   0x5b373074
  406283:	xchg   DWORD PTR [edx+0x2804c351],edi
  406289:	cld    
  40628a:	push   es
  40628b:	cmp    eax,0xb2203e1
  406290:	add    DWORD PTR [edx+0x5c35788b],0x43f54427
  40629a:	iret   
  40629b:	ja     0x406294
  40629d:	add    al,0x8c
  40629f:	ja     0x40624b
  4062a1:	inc    eax
  4062a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062a3:	or     BYTE PTR [ecx+ebp*8],0x0
	...
  4062af:	add    ah,cl
  4062b1:	jg     0x40627e
  4062b3:	and    al,0x97
  4062b5:	or     BYTE PTR [ecx+ebp*8],0xcc
  4062b9:	or     bl,BYTE PTR [ecx-0xf]
  4062bc:	push   ebp
  4062bd:	xchg   edx,eax
  4062be:	sub    DWORD PTR [esp+esi*2+0x79e866d0],0xdf46f0ed
  4062c9:	ja     0x4062be
  4062cb:	mov    ah,0xd4
  4062cd:	jbe    0x40632d
  4062cf:	frstor [ecx-0x13]
  4062d2:	add    al,0x41
  4062d4:	dec    ebp
  4062d5:	ja     0x4062ca
  4062d7:	es pushf 
  4062d9:	or     bl,BYTE PTR [ecx-0xf]
  4062dc:	push   ebp
  4062dd:	xchg   edx,eax
  4062de:	jmpw   0xe288
  4062e2:	repz xchg esp,eax
  4062e4:	cmp    BYTE PTR [edi+0x79],dh
  4062e7:	add    DWORD PTR [ecx],esp
  4062e9:	in     eax,dx
  4062ea:	add    al,0xfe
  4062ec:	jg     0x406279
  4062ee:	push   esp
  4062ef:	bound  edi,QWORD PTR [edi+0x77]
  4062f2:	sete   al
  4062f5:	mov    edx,0xaa095fdc
  4062fa:	int3   
  4062fb:	mov    al,0xd
  4062fd:	mov    BYTE PTR [ecx+edx*4],cl
  406300:	int3   
  406301:	jg     0x40630f
  406303:	jmp    0xe944a50d
  406308:	cdq    
  406309:	or     ah,al
  40630b:	push   0xf
  40630d:	je     0x40636b
  40630f:	adc    DWORD PTR [ebx-0x46],ebp
  406312:	sbb    eax,0x29
  406317:	add    BYTE PTR [eax],al
  406319:	add    BYTE PTR [eax],al
  40631b:	add    BYTE PTR [eax],al
  40631d:	add    bl,cl
  40631f:	ja     0x40639f
  406321:	call   0x1533d9b5
  406326:	(bad)  [esi+0x79]
  406329:	loope  0x4062cf
  40632b:	jmp    0x406320
  40632d:	mov    ?,WORD PTR [edx-0x54ff3376]
  406333:	jbe    0x4062f9
  406335:	ret    0x82b2
  406338:	xchg   DWORD PTR [ebp-0x52],edx
  40633b:	pop    es
  40633c:	push   ds
  40633d:	(bad)  
  40633e:	jmp    0x4063b7
  406340:	pop    esp
  406341:	jmp    FWORD PTR [ebx+0x7275f392]
  406347:	imul   edi,DWORD PTR [ecx+0x8],0x21
  40634b:	rol    BYTE PTR [eax],cl
  40634d:	test   DWORD PTR [esi+0x3b8b1ff3],esp
  406353:	outs   dx,BYTE PTR ds:[esi]
  406354:	aaa    
  406355:	inc    ebp
  406356:	xchg   ch,ah
  406358:	or     edi,DWORD PTR [eax+0xc8267]
  40635e:	or     eax,0xddc02676
  406363:	and    DWORD PTR [edi],0x41ffc0
  406369:	add    BYTE PTR [ebx+0x7],bh
  40636c:	loopne 0x4062f1
  40636e:	jmp    0x9fea:0x6e505a77
  406375:	adc    DWORD PTR [esi-0x7e],esi
  406378:	hlt    
  406379:	jb     0x4063a2
  40637b:	aas    
  40637c:	repz and DWORD PTR [ebx+0x740c7e],0x0
	...
  40638c:	clc    
  40638d:	(bad)  
  40638e:	jo     0x406398
  406390:	mul    ah
  406392:	or     ebp,DWORD PTR [ebx]
  406394:	es int3 
  406396:	(bad)
  406399:	or     BYTE PTR [edi+0x7982067d],0xa
  4063a0:	dec    esi
  4063a1:	or     DWORD PTR [eax+eax*1],0xc2c5cbe6
  4063a8:	repnz add DWORD PTR [edi+0x4934c275],0xc81b6fc
  4063b3:	add    bh,cl
  4063b5:	loope  0x4063f9
  4063b7:	or     BYTE PTR [ecx+edi*2-0x76],al
  4063bb:	inc    ebp
  4063bc:	stos   DWORD PTR es:[edi],eax
  4063bd:	xchg   edi,eax
  4063be:	stc    
  4063bf:	jne    0x406380
  4063c1:	mov    ecx,?
  4063c3:	jne    0x40638c
  4063c5:	in     eax,dx
  4063c6:	pop    ebp
  4063c7:	adc    BYTE PTR [edx+0x27],cl
  4063ca:	jbe    0x4063d3
  4063cc:	mov    ah,0xa6
  4063ce:	pop    ecx
  4063cf:	leave  
  4063d0:	lea    esp,[ebx+0xf]
  4063d3:	cmp    edx,0xffffffca
  4063d6:	pcmpeqw mm1,mm0
  4063d9:	or     eax,0xba9965e
  4063df:	add    BYTE PTR [esp+ebx*1-0x5],dl
  4063e3:	add    ebx,DWORD PTR [edi-0x80]
  4063e6:	xor    edx,DWORD PTR [eax]
  4063e8:	ficomp DWORD PTR [edx+0x66cf01b7]
  4063ee:	divps  xmm0,XMMWORD PTR [eax]
	...
  4063f9:	add    BYTE PTR [esi],dl
  4063fb:	test   eax,0xe1a2000b
  406400:	jmp    0x406383
  406402:	or     ecx,DWORD PTR [edi+0x1728ffe8]
  406408:	push   edi
  406409:	push   0x4f58bb
  40640e:	pop    ss
  40640f:	stc    
  406410:	push   cs
  406411:	ret    
  406412:	adc    BYTE PTR [ecx],al
  406414:	punpckhdq mm1,mm7
  406417:	ror    BYTE PTR [ebx],1
  406419:	push   0xffffffcf
  40641b:	ror    BYTE PTR [ebx],1
  40641d:	push   0x800f66cf
  406422:	lock retf 
  406424:	lock out 0x9c,eax
  406427:	aaa    
  406428:	or     BYTE PTR [eax],al
  40642a:	push   esi
  40642b:	pushf  
  40642c:	cld    
  40642d:	inc    eax
  40642e:	bound  esp,QWORD PTR [edx-0x50]
  406431:	ret    0x66c7
  406434:	push   ecx
  406435:	add    BYTE PTR [edx+0x7f],bl
  406438:	and    ah,ch
  40643a:	pop    ds
  40643b:	call   0x800f7825
  406440:	push   0x8264b789
  406445:	repz push DWORD PTR [eax+esi*8-0x11]
  40644a:	mov    bh,0x8a
  40644c:	je     0x406452
  40644e:	iret   
  40644f:	mov    BYTE PTR [ebp-0x78b3e87],ah
  406455:	out    dx,eax
  406456:	ja     0x4063dc
  406458:	push   esp
  406459:	add    al,0xcf
  40645b:	test   al,0x25
  40645d:	mov    ebp,0x0
  406462:	add    BYTE PTR [eax],al
  406464:	add    BYTE PTR [eax],al
  406466:	add    BYTE PTR [eax],al
  406468:	lea    eax,[edi+0x77faf2e5]
  40646e:	push   eax
  40646f:	mov    DWORD PTR [edi+0x64],esp
  406472:	dec    edx
  406473:	repz push DWORD PTR [eax+edi*4-0x1]
  406478:	jo     0x4063fc
  40647a:	cmp    dh,bl
  40647c:	push   eax
  40647d:	add    BYTE PTR [eax+0x69eacfeb],ah
  406483:	repz mov edx,0x3fdd1d73
  406489:	jg     0x406470
  40648b:	stos   DWORD PTR es:[edi],eax
  40648c:	into   
  40648d:	jg     0x406474
  40648f:	add    edx,DWORD PTR [esi]
  406491:	inc    ecx
  406492:	std    
  406493:	add    edi,DWORD PTR [edx+0x8]
  406496:	add    DWORD PTR [edi+esi*2-0x19],edx
  40649a:	pop    esp
  40649b:	push   ss
  40649c:	(bad)  
  40649d:	jg     0x40649c
  40649f:	jne    0x40646f
  4064a1:	inc    eax
  4064a2:	jmp    0x82f2:0xe5e9cd5d
  4064a9:	xchg   ebp,ecx
  4064ab:	xchg   ecx,eax
  4064ac:	bnd jae 0x406471
  4064af:	mov    esp,0x58e57b0d
  4064b4:	push   esp
  4064b5:	arpl   WORD PTR ds:0xc37674c,dx
  4064bb:	fisttp DWORD PTR [edi+edi*2+0x3ed23bf4]
  4064c2:	repz adc ecx,ebx
  4064c5:	in     eax,0xc
  4064c7:	sahf   
  4064c8:	aaa    
  4064c9:	mov    ah,ah
  4064cb:	push   ss
	...
  4064d4:	add    BYTE PTR [eax],al
  4064d6:	mov    esi,0x92a0f373
  4064db:	jl     0x4064e9
  4064dd:	sbb    al,0x20
  4064df:	fs (bad) 
  4064e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064e3:	rcl    BYTE PTR [ecx+eax*1-0x7f],1
  4064e7:	mov    cs,WORD PTR [ecx+ebp*8+0x74]
  4064eb:	out    dx,al
  4064ec:	or     eax,0x79737d2a
  4064f1:	in     eax,dx
  4064f2:	dec    ebp
  4064f3:	mov    ebp,0x74072ef4
  4064f8:	or     al,0xe9
  4064fa:	int3   
  4064fb:	jg     0x406563
  4064fd:	jmp    0x3e41525f
  406502:	xlat   BYTE PTR ds:[ebx]
  406503:	xchg   esp,esp
  406505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406506:	pop    edi
  406507:	jae    0x4064fc
  406509:	bound  esp,QWORD PTR [edi+0x3dfb8787]
  40650f:	in     eax,dx
  406510:	lock push ds
  406512:	mov    bh,0x77
  406514:	repz pushf 
  406516:	xor    al,0x72
  406518:	pop    esi
  406519:	icebp  
  40651a:	imul   edi,DWORD PTR [esi],0x4
  40651d:	jmp    0x9a206ba9
  406522:	test   bh,ah
  406524:	adc    al,0xda
  406526:	mov    WORD PTR [edi-0xc],?
  406529:	jnp    0x4064fe
  40652b:	ds repz push ebx
  40652e:	retf   
  40652f:	jb     0x4065aa
  406531:	icebp  
  406532:	adc    al,0x1a
  406534:	repz (bad) 
  406536:	dec    BYTE PTR [eax-0x32]
  406539:	in     eax,0x0
	...
  406543:	add    ah,cl
  406545:	int3   
  406546:	xchg   DWORD PTR [eax],eax
  406548:	cli    
  406549:	hlt    
  40654a:	pop    ecx
  40654b:	adc    al,0x65
  40654d:	mov    eax,ds:0x35e2750c
  406552:	into   
  406553:	adc    BYTE PTR [esi+0x6910796f],dh
  406559:	jmp    0xe6eb:0x73e3ff00
  406560:	pop    ebx
  406561:	jo     0x406556
  406563:	mov    esp,ebx
  406565:	xchg   edi,eax
  406566:	sub    eax,0x1c395f02
  40656b:	add    bl,al
  40656d:	hlt    
  40656e:	loopne 0x4064f3
  406570:	bound  ebp,QWORD PTR [edi-0xd]
  406573:	jne    0x40651f
  406575:	aam    0x8
  406577:	lea    esi,[ebx]
  406579:	bound  ebx,QWORD PTR [edi+edi*8-0x5d]
  40657d:	jbe    0x40656a
  40657f:	ret    
  406580:	sbb    DWORD PTR [ecx-0xd],esi
  406583:	mov    esi,DWORD PTR [ebx]
  406585:	jb     0x406515
  406587:	cmp    BYTE PTR [esi-0x16],dh
  40658a:	or     ecx,DWORD PTR [ebx-0x37fc9dcd]
  406590:	or     eax,0xefc0277a
  406595:	cmp    DWORD PTR [eax+eax*1],eax
  406598:	xor    ebx,0xffffffe0
  40659b:	xor    edx,0x6f
  40659e:	repz jne 0x4065cb
  4065a1:	aam    0xe
  4065a3:	lea    esi,[ebx+0x70]
  4065a6:	pop    esp
  4065a7:	inc    DWORD PTR [eax]
	...
  4065b1:	add    BYTE PTR [ebx+0x1997eb76],ah
  4065b7:	outs   dx,DWORD PTR ds:[esi]
  4065b8:	repz mov esp,DWORD PTR [ebx+0x72]
  4065bc:	mov    ?,WORD PTR [eax]
  4065be:	imul   cl
  4065c0:	add    al,0xf
  4065c2:	popa   
  4065c3:	mov    ecx,0x533286f2
  4065c8:	push   cs
  4065c9:	sub    ecx,edi
  4065cb:	sub    BYTE PTR [esi+0x5a68d7c2],dh
  4065d1:	mov    esi,ebx
  4065d3:	in     al,0xcb
  4065d5:	cld    
  4065d6:	fsubr  DWORD PTR [edx-0x243195f4]
  4065dc:	dec    edx
  4065dd:	call   FWORD PTR [edi]
  4065df:	and    bh,BYTE PTR [edx+0x8]
  4065e2:	mov    bh,0x8d
  4065e4:	std    
  4065e5:	(bad)  
  4065e6:	mov    eax,0x4c0c4aee
  4065eb:	dec    edi
  4065ec:	pcmpeqb mm2,mm1
  4065ef:	push   ecx
  4065f0:	mov    ch,0x45
  4065f2:	mov    al,ds:0x8f2b090e
  4065f7:	xor    cl,cl
  4065f9:	or     bh,cl
  4065fb:	xchg   ebx,eax
  4065fc:	jno    0x4065ea
  4065fe:	push   esp
  4065ff:	mov    WORD PTR [eax],ds
  406601:	add    ebp,0x66
  406604:	jp     0x40660a
  406606:	xchg   BYTE PTR [ebp+0x5471fff3],ah
  40660c:	repz (bad) 
  40660e:	loop   0x40666e
  406610:	xlat   BYTE PTR ds:[ebx]
  406611:	shl    BYTE PTR [ebx-0x46],1
  406614:	cld    
  406615:	or     eax,DWORD PTR [eax]
	...
  40661f:	add    BYTE PTR [edi-0x5750fd4],cl
  406625:	push   esi
  406626:	les    eax,FWORD PTR [edx]
  406628:	iret   
  406629:	data16 (bad) 
  40662c:	xor    al,0x6c
  40662e:	push   ecx
  40662f:	add    DWORD PTR [eax],edi
  406631:	or     al,0xf3
  406633:	(bad)  
  406634:	mov    edx,0x2b3dd75e
  406639:	cmp    ah,0xc9
  40663c:	or     eax,0x44550f6b
  406641:	or     DWORD PTR [eax+0x701113c4],0x75
  406648:	(bad)  
  40664a:	push   cs
  40664b:	lea    ecx,[edx-0x7ab1681]
  406651:	jmp    0xdbed:0xeaf055f5
  406658:	xchg   ebp,eax
  406659:	pusha  
  40665a:	in     eax,0x3
  40665c:	aam    0x3f
  40665e:	xor    DWORD PTR [esi],eax
  406660:	dec    esp
  406661:	repz mov cl,0x4
  406664:	pop    edx
  406665:	js     0x406675
  406667:	les    ebp,FWORD PTR [ecx]
  406669:	inc    edi
  40666a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40666b:	add    bh,cl
  40666d:	add    al,0x20
  40666f:	lock int3 
  406671:	outs   dx,DWORD PTR ds:[esi]
  406672:	fmul   QWORD PTR [eax-0x21]
  406675:	jmp    0x3e5:0x7fceacb6
  40667c:	add    DWORD PTR [edi-0x59],eax
  40667f:	add    bh,cl
  406681:	retf   0xe07e
	...
  40668c:	add    BYTE PTR [eax],al
  40668e:	dec    esi
  40668f:	cmp    edi,ebp
  406691:	out    dx,al
  406692:	mov    BYTE PTR [eax+0x16],dh
  406695:	sbb    esp,DWORD PTR [ebp+eiz*8-0x1a30a61b]
  40669c:	out    0x59,eax
  40669e:	iret   
  40669f:	in     eax,0xe6
  4066a1:	pop    ebx
  4066a2:	iret   
  4066a3:	jg     0x40668a
  4066a5:	ret    
  4066a6:	pusha  
  4066a7:	jmp    0x3e5:0x615fdbf9
  4066ae:	inc    esi
  4066af:	mov    edx,0xccc34439
  4066b4:	and    bh,BYTE PTR [ecx-0x29]
  4066b7:	addr16 fsubr st,st(5)
  4066ba:	cmp    BYTE PTR [eax+0x2a],dh
  4066bd:	dec    ecx
  4066be:	aaa    
  4066bf:	jg     0x4066a6
  4066c1:	add    ecx,edi
  4066c3:	add    al,0xb8
  4066c5:	sti    
  4066c6:	push   ebp
  4066c7:	lea    edi,[eax+0x49]
  4066ca:	pop    ss
  4066cb:	iret   
  4066cc:	popf   
  4066cd:	or     edi,0x7f
  4066d0:	or     al,0xe9
  4066d2:	dec    edi
  4066d3:	cli    
  4066d4:	jae    0x4066c4
  4066d6:	icebp  
  4066d7:	outs   dx,DWORD PTR ds:[esi]
  4066d8:	pop    esp
  4066d9:	out    0x77,al
  4066db:	xchg   ebx,esi
  4066dd:	cmp    ecx,edi
  4066df:	cld    
  4066e0:	jo     0x4066b3
  4066e2:	int3   
  4066e3:	jmp    0x3cf3:0x97042a0f
  4066ea:	jmp    0x4066ed
  4066ec:	mov    DWORD PTR [ecx-0x20],eax
  4066ef:	outs   dx,DWORD PTR ds:[esi]
  4066f0:	repz sbb DWORD PTR [eax],eax
	...
  4066fb:	add    BYTE PTR [eax+0x1bc1f0f5],bh
  406701:	outs   dx,DWORD PTR ds:[esi]
  406702:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406704:	mov    ch,0x2f
  406706:	js     0x4066f3
  406708:	xchg   ebp,eax
  406709:	sub    eax,0x589f1cf3
  40670e:	scas   eax,DWORD PTR es:[edi]
  40670f:	jg     0x4066dd
  406711:	jg     0x40669a
  406713:	stos   BYTE PTR es:[edi],al
  406714:	add    eax,0xccf1ce39
  406719:	aam    0x87
  40671b:	test   DWORD PTR [ebp+0x44],ecx
  40671e:	hlt    
  40671f:	outs   dx,BYTE PTR ds:[esi]
  406720:	pop    es
  406721:	jl     0x406707
  406723:	mov    DWORD PTR [ebp+0x6f],esp
  406726:	repz jo 0x406730
  406729:	push   0x8078accb
  40672e:	or     al,0xe9
  406730:	int3   
  406731:	outs   dx,BYTE PTR ds:[esi]
  406732:	jns    0x406729
  406734:	je     0x406761
  406736:	icebp  
  406737:	ds popa 
  406739:	sti    
  40673a:	pop    eax
  40673b:	in     eax,0xc5
  40673d:	xchg   ecx,eax
  40673e:	jmpw   0xe6e8
  406742:	repz pushf 
  406744:	sub    BYTE PTR [edi+0x79],ch
  406747:	and    DWORD PTR [ecx],esp
  406749:	cmc    
  40674a:	add    al,0x16
  40674c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40674d:	jnp    0x406742
  40674f:	mov    ebx,0xce38d0
  406754:	push   ds
  406755:	sbb    DWORD PTR [ecx-0x75],0xffffffc2
  406759:	add    eax,ecx
  40675b:	clc    
  40675c:	mov    ecx,0xf4b7
	...
  406769:	add    dh,dh
  40676b:	or     BYTE PTR [edi+eax*8],0xab
  40676f:	outs   dx,DWORD PTR ds:[esi]
  406770:	or     al,0x0
  406772:	out    0x82,al
  406774:	xchg   DWORD PTR [ebp-0x12],edx
  406777:	out    0x1e,eax
  406779:	lea    ebp,[ebx-0x1895a3a5]
  40677f:	pop    ebx
  406780:	jns    0x40677e
  406782:	adc    edi,esi
  406784:	hlt    
  406785:	dec    DWORD PTR [ebx]
  406787:	ins    BYTE PTR es:[edi],dx
  406788:	repnz push edx
  40678a:	call   0x841:0x7ff849e7
  406791:	add    bl,bh
  406793:	call   0xedf7d278
  406798:	dec    ecx
  406799:	or     al,0xe6
  40679b:	pop    esp
  40679c:	jns    0x4067a6
  40679e:	ds mov al,0xf0
  4067a1:	call   DWORD PTR [ecx]
  4067a3:	sub    ecx,esi
  4067a5:	or     BYTE PTR [esi-0x2b],dh
  4067a8:	xchg   esp,ebp
  4067aa:	int3   
  4067ab:	ja     0x40672e
  4067ad:	inc    ebp
  4067ae:	adc    dl,0xf3
  4067b1:	jne    0x406831
  4067b3:	dec    edx
  4067b4:	adc    bh,ah
  4067b6:	add    DWORD PTR [ebp-0x3b],ebx
  4067b9:	ret    0x826e
  4067bc:	pop    ecx
  4067bd:	mov    eax,DWORD PTR [edx]
  4067bf:	add    DWORD PTR [ecx+0xc],esi
  4067c2:	data16 neg BYTE PTR [eax]
  4067c5:	add    DWORD PTR [ebx+0x20740c92],0x5b
  4067cc:	jns    0x4067de
	...
  4067d6:	add    BYTE PTR [eax],al
  4067d8:	icebp  
  4067d9:	test   BYTE PTR [eax],0xff
  4067dc:	pop    ebx
  4067dd:	push   0xffffffeb
  4067df:	std    
  4067e0:	iret   
  4067e1:	xchg   ecx,eax
  4067e2:	loope  0x4067e3
  4067e4:	push   ss
  4067e5:	call   0xffec:0xf182000c
  4067ec:	call   0xbc80:0xd775e048
  4067f3:	inc    DWORD PTR [eax]
  4067f5:	pop    ebp
  4067f6:	mov    WORD PTR [ebp-0x21],?
  4067f9:	pop    eax
  4067fa:	jnp    0x406810
  4067fc:	dec    esp
  4067fd:	retf   
  4067fe:	or     al,0x0
  406800:	arpl   WORD PTR [esi-0x20],sp
  406803:	jne    0x4067c4
  406805:	cmp    eax,0xaad80c7a
  40680a:	lock out 0x18,eax
  40680d:	sub    eax,0x1996ffe0
  406812:	repz call FWORD PTR [ebx]
  406815:	loop   0x4067ea
  406817:	cmp    DWORD PTR [edx],0x73
  40681a:	pcmpeqb mm0,mm5
  40681d:	or     eax,0xc9b70c7a
  406822:	rol    BYTE PTR [eax],cl
  406824:	iret   
  406825:	add    DWORD PTR ds:0xe1878f2b,ecx
  40682b:	jne    0x4067f0
  40682d:	in     eax,dx
  40682e:	jp     0x406838
  406830:	ja     0x4067dc
  406832:	loopne 0x406833
  406834:	and    BYTE PTR [eax],0xcd
  406837:	or     bh,cl
  406839:	sub    esi,DWORD PTR [esp+ebp*8+0x0]
	...
  406845:	add    BYTE PTR [eax+0x54],dh
  406848:	mul    edi
  40684a:	mov    al,0xd5
  40684c:	loopne 0x40684d
  40684e:	inc    DWORD PTR [eax-0x9]
  406851:	addr16 add al,0x2f
  406854:	dec    esi
  406855:	add    BYTE PTR [eax+0x34],dl
  406858:	mul    edi
  40685a:	mov    esp,0xb5ffe0b5
  40685f:	push   esi
  406860:	loopne 0x4068d7
  406862:	(bad)  
  406863:	jg     0x406882
  406865:	push   edi
  406866:	xor    BYTE PTR [ebp+0x12],ch
  406869:	pop    ecx
  40686a:	int    0xfa
  40686c:	lahf   
  40686d:	call   DWORD PTR [eax+0x30fb986c]
  406873:	leave  
  406874:	or     ch,ah
  406876:	adc    dl,bl
  406878:	out    0x7e,eax
  40687a:	xchg   edx,eax
  40687b:	(bad)  
  40687c:	xchg   ebp,eax
  40687d:	in     al,dx
  40687e:	jp     0x4068f7
  406880:	or     eax,0xea6cf83e
  406885:	dec    esp
  406886:	push   es
  406887:	inc    edx
  406888:	loope  0x40688d
  40688a:	cmp    al,0xc8
  40688d:	xchg   DWORD PTR [ebx],ecx
  40688f:	ins    BYTE PTR es:[edi],dx
  406890:	ret    0xc771
  406893:	push   edi
  406894:	adc    eax,0x1e6cd0ee
  406899:	inc    ecx
  40689a:	fcomi  st,st(6)
  40689c:	pop    ds
  40689d:	call   0xfc122aee
  4068a2:	sub    BYTE PTR es:[edx+0x186cc371],0xfc
	...
  4068b2:	add    BYTE PTR [eax],al
  4068b4:	mov    al,0x7f
  4068b6:	lahf   
  4068b7:	jmp    0x406859
  4068b9:	ins    BYTE PTR es:[edi],dx
  4068ba:	sbb    al,ch
  4068bc:	cwde   
  4068bd:	repnz std 
  4068bf:	fcmovne st,st(4)
  4068c1:	ins    BYTE PTR es:[edi],dx
  4068c2:	jb     0x4068af
  4068c4:	mov    dl,dh
  4068c6:	in     eax,dx
  4068c7:	fstp   TBYTE PTR [ebx+0x44eb626b]
  4068cd:	ret    0xbd69
  4068d0:	lea    esi,[edi-0x1b]
  4068d3:	push   eax
  4068d4:	push   esp
  4068d5:	pop    ebx
  4068d6:	data16 rcr BYTE PTR [ebx+0x44],0xa8
  4068db:	out    dx,eax
  4068dc:	iret   
  4068dd:	jg     0x4068c4
  4068df:	add    eax,DWORD PTR [edx-0x3e]
  4068e2:	xor    DWORD PTR [eax+ecx*2-0xe],edx
  4068e6:	or     al,0xe1
  4068e8:	and    al,0xa5
  4068ea:	loop   0x4068d5
  4068ec:	int3   
  4068ed:	add    cl,ah
  4068ef:	mov    eax,ds:0xf1796cd7
  4068f4:	add    al,0x69
  4068f6:	cmc    
  4068f7:	push   ss
  4068f8:	xor    al,0xf6
  4068fa:	dec    eax
  4068fb:	adc    DWORD PTR [edx+esi*8],esp
  4068fe:	lock adc esp,esi
  406901:	pop    edx
  406902:	or     al,0xe9
  406904:	or     DWORD PTR [eax+edi*2],ebp
  406907:	fcomip st,st(5)
  406909:	icebp  
  40690a:	hlt    
  40690b:	cdq    
  40690c:	call   0xc7f:0xce58e47f
  406913:	jo     0x4068a4
  406915:	jae    0x40690a
  406917:	pop    esp
	...
  406920:	add    BYTE PTR [eax],al
  406922:	not    DWORD PTR [esi-0x29]
  406925:	mov    ebp,0x3cf37fcc
  40692a:	shl    DWORD PTR [ebx-0x29],cl
  40692d:	ret    0x6bb5
  406930:	xchg   DWORD PTR [edi+edi*4],ebp
  406933:	jnp    0x4068f9
  406935:	mov    dh,0x9c
  406937:	shl    bl,1
  406939:	sbb    al,0xb3
  40693b:	arpl   WORD PTR [esi-0x3a944a61],bx
  406941:	stos   DWORD PTR es:[edi],eax
  406942:	mov    al,ds:0x8062586b
  406947:	inc    edi
  406949:	jns    0x4068d8
  40694b:	(bad)  
  40694e:	int3   
  40694f:	jg     0x40695d
  406951:	fs (bad) 
  406954:	pop    esp
  406955:	outs   dx,BYTE PTR ds:[esi]
  406956:	push   DWORD PTR [edi-0x1c]
  406959:	sub    DWORD PTR [edi-0x739bf380],edx
  40695f:	call   0x781fbfa5
  406964:	in     al,0x75
  406966:	imul   ebp,DWORD PTR [ebx-0xd],0x0
  40696a:	fistp  QWORD PTR [edi+0x578b83f4]
  406970:	or     BYTE PTR [edx-0x36],dh
  406973:	add    ah,BYTE PTR [ecx-0x8]
  406976:	xor    dl,BYTE PTR [esi+0x79]
  406979:	cld    
  40697a:	(bad)  
  40697c:	loopne 0x40697e
  40697e:	ss push 0xffffffb3
  406981:	je     0x406987
  406983:	push   esi
  406984:	jns    0x40697e
	...
  40698e:	add    BYTE PTR [eax],al
  406990:	push   esi
  406991:	int    0xc
  406993:	call   0x4ce9bf
  406998:	stc    
  406999:	es sti 
  40699b:	shr    BYTE PTR [edi-0x41],1
  40699e:	clc    
  40699f:	inc    DWORD PTR [ebx+0x1a67e462]
  4069a5:	test   BYTE PTR [ebx+ebp*8],cl
  4069a8:	loopne 0x406a01
  4069aa:	jns    0x4069b4
  4069ac:	push   cs
  4069ad:	retf   
  4069ae:	idiv   edi
  4069b0:	or     DWORD PTR [ebp-0x7fdb3634],ecx
  4069b6:	or     al,0xeb
  4069b8:	mov    al,0x8b
  4069ba:	int3   
  4069bb:	leave  
  4069bc:	je     0x406a3d
  4069be:	or     al,0x6a
  4069c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069c1:	int3   
  4069c2:	lock call ebx
  4069c5:	imul   ebp,ebx,0x4
  4069c8:	outs   dx,DWORD PTR ds:[esi]
  4069c9:	pop    eax
  4069ca:	repz (bad) 
  4069cc:	repz jae 0x4069dc
  4069cf:	add    BYTE PTR [esi+0x1645817e],ah
  4069d5:	aam    0xf3
  4069d7:	jne    0x406a57
  4069d9:	inc    esi
  4069da:	idiv   bl
  4069dc:	stc    
  4069dd:	pop    eax
  4069de:	(bad)  
  4069df:	jge    0x4069d7
  4069e1:	cmp    DWORD PTR [eax+0x12],0x79
  4069e5:	es aaa 
  4069e7:	inc    ebp
  4069e8:	add    bl,bl
  4069ea:	or     edi,DWORD PTR [eax+0xf57cf]
  4069f0:	iret   
  4069f1:	mov    ebp,0x2b0e
	...
  4069fe:	(bad)  
  4069ff:	int    0xa
  406a01:	sub    ecx,DWORD PTR [edi]
  406a03:	scas   eax,DWORD PTR es:[edi]
  406a04:	retf   0xcf04
  406a07:	or     esi,DWORD PTR [eax-0x14]
  406a0a:	dec    esp
  406a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a0c:	loopne 0x40699b
  406a0e:	mov    ah,BYTE PTR [eax+ebx*2-0x288f5d01]
  406a15:	sbb    dh,BYTE PTR [edx]
  406a17:	pop    eax
  406a18:	jne    0xff507a2d
  406a1e:	call   0xe469:0x7eed770
  406a25:	mov    DWORD PTR [edx-0x48a1b90],ecx
  406a2b:	jg     0x406a16
  406a2d:	jmp    0x4069fe
  406a2f:	pop    eax
  406a30:	lock mov edi,0x75e47463
  406a36:	rcl    DWORD PTR [ecx+0x62],cl
  406a39:	clc    
  406a3a:	jg     0x406a7c
  406a3c:	and    cl,BYTE PTR [ebx]
  406a3e:	iret   
  406a3f:	pop    eax
  406a40:	in     al,0x75
  406a42:	retf   
  406a43:	dec    edi
  406a44:	fsubp  st(3),st
  406a46:	iret   
  406a47:	push   esi
  406a48:	in     al,0x75
  406a4a:	(bad)  
  406a4b:	ds fdivp st(2),st
  406a4e:	mov    al,0x22
  406a50:	mov    dh,0xc2
  406a52:	xlat   BYTE PTR ds:[ebx]
  406a53:	push   esi
  406a54:	inc    edx
  406a55:	mov    esi,DWORD PTR [ebx-0x3174c2a]
  406a5b:	cmp    eax,0x30a8dc0
  406a60:	pop    edi
  406a61:	inc    DWORD PTR [eax]
	...
  406a6b:	add    BYTE PTR [edx],al
  406a6d:	outs   dx,DWORD PTR ds:[esi]
  406a6e:	xlat   BYTE PTR ds:[ebx]
  406a6f:	retf   0x5773
  406a72:	jne    0xb7b7b507
  406a78:	iret   
  406a79:	jg     0x406a60
  406a7b:	add    ebp,DWORD PTR [eax-0xd]
  406a7e:	std    
  406a7f:	fild   DWORD PTR [ebp+0x68]
  406a82:	pop    edx
  406a83:	call   0xe89a2dce
  406a88:	fisubr DWORD PTR [ebx+0x5d]
  406a8b:	js     0x406ac1
  406a8d:	and    ch,0xfc
  406a90:	cmp    BYTE PTR [ecx+0x61],0x87
  406a94:	iret   
  406a95:	jg     0x406a7c
  406a97:	jp     0x406a23
  406a99:	outs   dx,DWORD PTR ds:[esi]
  406a9a:	sub    ch,BYTE PTR [esi+0x23]
  406a9d:	pop    eax
  406a9e:	ja     0x406aa4
  406aa0:	into   
  406aa1:	jg     0x406b09
  406aa3:	mov    edi,0x3e582d3
  406aa8:	jg     0x406b29
  406aaa:	xchg   ebp,eax
  406aab:	(bad)  [esi]
  406aad:	and    ch,0x3
  406ab0:	push   esi
  406ab1:	ret    
  406ab2:	or     eax,ebp
  406ab4:	xor    BYTE PTR [ebx+0xd],0x68
  406ab8:	int3   
  406ab9:	jle    0x406aa0
  406abb:	adc    BYTE PTR [ebx],0x84
  406abe:	call   0xe5d039c6
  406ac3:	push   ebx
  406ac4:	out    0xf,eax
  406ac6:	in     eax,0x3
  406ac8:	iret   
  406ac9:	neg    BYTE PTR [edi]
  406acb:	fdiv   QWORD PTR ds:0x71b280
	...
  406ad9:	add    BYTE PTR [ebx-0x470fcf98],dh
  406adf:	repnz int 0xe7
  406ae2:	cmp    dh,BYTE PTR [eax-0x63]
  406ae5:	pop    ebp
  406ae6:	int3   
  406ae7:	jle    0x406ace
  406ae9:	or     BYTE PTR [ebx-0x68be936d],0x68
  406af0:	sbb    al,ch
  406af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406af3:	mov    al,0x9e
  406af5:	add    al,0xcf
  406af7:	push   0x3168fbf8
  406afc:	or     al,0x73
  406afe:	jo     0x406b68
  406b00:	data16 loope 0x406b17
  406b03:	fwait
  406b04:	inc    esp
  406b05:	test   al,0xcc
  406b07:	push   0x8384f179
  406b0c:	icebp  
  406b0d:	push   esi
  406b0e:	jo     0x406b84
  406b10:	aam    0x4e
  406b12:	fidiv  WORD PTR [ebx-0xd]
  406b15:	mov    esp,0x3dee6044
  406b1a:	sub    BYTE PTR [eax+0x2f],ch
  406b1d:	adc    DWORD PTR [eax],esi
  406b1f:	repnz hlt 
  406b21:	cs mov esi,0x249cf357
  406b27:	pusha  
  406b28:	add    al,0x1c
  406b2a:	sub    BYTE PTR [eax+0x2f],ch
  406b2d:	xor    DWORD PTR [eax],esi
  406b2f:	repnz loopne 0x406b33
  406b32:	sar    BYTE PTR [edi+0xc],0xe9
  406b36:	icebp  
  406b37:	icebp  
  406b38:	in     al,0x11
  406b3a:	clc    
  406b3b:	addr16 repz jmp 0x406b42
  406b42:	add    BYTE PTR [eax],al
  406b44:	add    BYTE PTR [eax],al
  406b46:	add    BYTE PTR [eax],al
  406b48:	icebp  
  406b49:	icebp  
  406b4a:	add    al,0x1
  406b4c:	cli    
  406b4d:	gs repz out 0x65,al
  406b51:	cmp    al,0x57
  406b53:	mov    al,0xe
  406b55:	or     DWORD PTR [esp+edi*1],0x54
  406b59:	pop    ebx
  406b5a:	(bad)  
  406b5b:	dec    esp
  406b5c:	shl    DWORD PTR [edi+0x7f],cl
  406b5f:	icebp  
  406b60:	mov    cl,0xed
  406b62:	add    al,0xd1
  406b64:	xchg   ecx,eax
  406b65:	pop    edx
  406b66:	or     al,0xe9
  406b68:	aad    0x3f
  406b6a:	lds    ebp,FWORD PTR [ebx+0x725867b0]
  406b70:	cmp    bl,0x48
  406b73:	icebp  
  406b74:	iret   
  406b75:	dec    DWORD PTR [ebx]
  406b77:	jmp    0x29a73b48
  406b7c:	jae    0x406bba
  406b7e:	out    0x0,al
  406b80:	jbe    0x406b05
  406b82:	(bad)
  406b85:	sbb    DWORD PTR [ecx-0x75],0x52
  406b89:	mov    dh,0xf0
  406b8b:	mov    esp,DWORD PTR [ebx+0x6b]
  406b8e:	xchg   BYTE PTR [ebp+0x62],cl
  406b91:	bound  eax,QWORD PTR [edx]
  406b93:	push   ecx
  406b94:	mov    bh,0x43
  406b96:	push   cs
  406b97:	sub    esp,DWORD PTR [esi-0x1aa6588f]
  406b9d:	pop    ebx
  406b9e:	psllq  mm3,QWORD PTR [esi+edi*4-0x3b]
  406ba3:	ret    0x833e
  406ba6:	pop    ecx
  406ba7:	mov    edx,DWORD PTR [edx+0x8b5bb4]
	...
  406bb5:	add    BYTE PTR [ebx+0x6f],ah
  406bb8:	test   DWORD PTR [ebx+0x4d866b4b],0xf30e6226
  406bc2:	mov    bh,BYTE PTR [ebp+0x6ee4c952]
  406bc8:	repz push esp
  406bca:	jge    0x406c1a
  406bcc:	pop    edx
  406bcd:	push   edi
  406bce:	jge    0x406bbf
  406bd0:	add    al,0xfc
  406bd2:	ins    DWORD PTR es:[edi],dx
  406bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bd4:	sbb    al,0x2b
  406bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd7:	jmp    0x8255784d
  406bdc:	jmp    DWORD PTR [esi+0x17929dd]
  406be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406be3:	mov    esp,0x6824c952
  406be8:	repz push esp
  406bea:	cmp    eax,0x82c48f48
  406bef:	mov    ch,0x5b
  406bf1:	push   ebx
  406bf2:	push   cs
  406bf3:	or     BYTE PTR ds:0x795ba600,0x8
  406bfa:	ds adc dh,bl
  406bfd:	inc    DWORD PTR [ecx-0x18]
  406c00:	jno    0x406c0a
  406c02:	iret   
  406c03:	xchg   ebp,eax
  406c04:	xor    DWORD PTR [ebx],ebp
  406c06:	jge    0x406bd7
  406c08:	or     BYTE PTR [ecx],al
  406c0a:	iret   
  406c0b:	pop    eax
  406c0c:	ja     0x406c22
  406c0e:	(bad)
  406c11:	loop   0x406c89
  406c13:	loope  0x406c80
  406c15:	or     BYTE PTR [eax],cl
  406c17:	sahf   
  406c18:	jne    0x406c8f
	...
  406c22:	add    BYTE PTR [eax],al
  406c24:	fist   DWORD PTR [esi-0x6e3001cd]
  406c2a:	mov    bh,0x2b
  406c2c:	je     0x406c10
  406c2e:	or     al,0x3b
  406c30:	inc    edi
  406c31:	sbb    ebp,eax
  406c33:	add    BYTE PTR [edx-0x1fb8942],dl
  406c39:	pop    eax
  406c3a:	xor    bh,dh
  406c3c:	enter  0x43e6,0xfe
  406c40:	inc    ebp
  406c41:	pop    esp
  406c42:	and    eax,0x7561d388
  406c47:	inc    ebp
  406c48:	and    al,dh
  406c4a:	or     al,0x3a
  406c4c:	mov    ss,WORD PTR [ecx+0x3a]
  406c4f:	adc    BYTE PTR [ebp+0x9c9145a],bl
  406c55:	cdq    
  406c56:	arpl   bp,dx
  406c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c59:	add    eax,0x5c0dc949
  406c5e:	andnps xmm0,XMMWORD PTR [esp+eiz*2-0x74]
  406c63:	(bad)  
  406c64:	out    0xa8,eax
  406c66:	inc    edx
  406c67:	push   edi
  406c68:	loopne 0x406c34
  406c6a:	lock pop edx
  406c6c:	inc    ebp
  406c6d:	pop    ecx
  406c6e:	ja     0x406cb5
  406c70:	shl    cl,cl
  406c72:	dec    esp
  406c73:	add    DWORD PTR [edi-0x6c],edx
  406c76:	in     al,0x8b
  406c78:	les    ebx,FWORD PTR [esi+0x5b428b31]
  406c7e:	mov    al,0x45
  406c80:	mov    bh,0x57
  406c82:	str    edi
  406c85:	jg     0x406d05
  406c87:	add    BYTE PTR ss:[eax],al
	...
  406c92:	mov    edi,0x12e62560
  406c97:	arpl   dx,bp
  406c99:	lods   eax,DWORD PTR ds:[esi]
  406c9a:	or     ah,BYTE PTR [ebx-0x2e]
  406c9d:	lods   eax,DWORD PTR ds:[esi]
  406c9e:	jecxz  0x406c47
  406ca0:	jge    0x406cf0
  406ca2:	add    BYTE PTR [eax+0x2dc8e818],0x20
  406ca9:	call   0x7bfdf8f3
  406cae:	add    ah,BYTE PTR [esi-0x6]
  406cb1:	lods   eax,DWORD PTR ds:[esi]
  406cb2:	or     ah,BYTE PTR [ebx+0x7d]
  406cb5:	seta   BYTE PTR [ebx+edx*4+0x3e]
  406cba:	push   ebx
  406cbb:	cli    
  406cbc:	mov    bh,0xe4
  406cbe:	push   edi
  406cbf:	mov    WORD PTR ds:0xe7649a7a,cs
  406cc5:	dec    esi
  406cc6:	cmp    edx,edi
  406cc8:	shr    BYTE PTR [ecx],1
  406cca:	inc    esp
  406ccb:	mov    ebx,0xafc3333d
  406cd0:	sub    bh,BYTE PTR [esi]
  406cd2:	daa    
  406cd3:	bound  esp,QWORD PTR ds:0x6d629279
  406cd9:	add    BYTE PTR [ebp-0x45],al
  406cdc:	add    DWORD PTR [ebx-0x74],edi
  406cdf:	jle    0x406c8b
  406ce1:	inc    ebp
  406ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ce3:	ss daa 
  406ce5:	idiv   eax
  406ce7:	retf   
  406ce8:	outs   dx,BYTE PTR ds:[esi]
  406ce9:	xlat   BYTE PTR ds:[ebx]
  406cea:	dec    esi
  406ceb:	cmp    al,0xf1
  406ced:	in     al,0xe8
  406cef:	fs ss das 
  406cf2:	add    al,0xf3
  406cf4:	daa    
  406cf5:	loopne 0x406cf7
	...
  406cff:	add    BYTE PTR [edi+0x64],bh
  406d02:	push   eax
  406d03:	or     al,0xe7
  406d05:	jmp    0x13a4:0xfacf04cf
  406d0c:	push   edi
  406d0d:	or     eax,0x64cf03e5
  406d12:	or     al,0x3c
  406d14:	ret    
  406d15:	push   edi
  406d16:	dec    ecx
  406d17:	mov    bh,0xac
  406d19:	test   DWORD PTR fs:[edi+eax*4],ebp
  406d1d:	fs jns 0x406cbd
  406d20:	stos   DWORD PTR es:[edi],eax
  406d21:	test   eax,0x78cce9e5
  406d26:	int3   
  406d27:	adc    eax,0x7948f6ec
  406d2c:	ins    BYTE PTR es:[edi],dx
  406d2d:	jmp    0x76f3:0x65e591f8
  406d34:	inc    edx
  406d35:	mov    edx,0x6c066ef4
  406d3a:	repz fadd QWORD PTR [esp+eiz*2-0xc94a687]
  406d42:	icebp  
  406d43:	push   esi
  406d44:	ins    BYTE PTR es:[edi],dx
  406d45:	fs jns 0x406d95
  406d48:	cmp    eax,DWORD PTR [edi+0x64cce9e5]
  406d4e:	jns    0x406d3d
  406d50:	and    al,0x7b
  406d52:	in     eax,0xe9
  406d54:	int3   
  406d55:	iret   
  406d56:	repz mov ah,0xd8
  406d59:	repnz mov BYTE PTR [edi],dl
  406d5c:	sub    eax,0x24b9f364
  406d61:	sbb    dh,dl
  406d63:	push   ss
	...
  406d6c:	add    BYTE PTR [eax],al
  406d6e:	sub    al,0x64
  406d70:	jns    0x406d87
  406d72:	in     al,dx
  406d73:	jmp    0x5596e26c
  406d78:	repnz (bad) 
  406d7a:	in     eax,dx
  406d7b:	into   
  406d7c:	in     al,0xf7
  406d7e:	out    dx,al
  406d7f:	arpl   bx,si
  406d81:	out    dx,al
  406d82:	xchg   DWORD PTR [edi-0x1c],esi
  406d85:	push   esp
  406d86:	add    esp,DWORD PTR [ebx+esi*8+0x53]
  406d8a:	retf   
  406d8b:	xlat   BYTE PTR ds:[ebx]
  406d8c:	xor    al,0x21
  406d8e:	mov    bh,BYTE PTR [edi-0xd]
  406d91:	push   esp
  406d92:	fist   DWORD PTR [edi-0x49]
  406d95:	add    BYTE PTR [esi+ebx*2+0x5e6e0bf3],cl
  406d9c:	jns    0x406d92
  406d9e:	jns    0x406d68
  406da0:	hlt    
  406da1:	jmp    ebx
  406da3:	jae    0x406d89
  406da5:	stos   DWORD PTR es:[edi],eax
  406da6:	ins    BYTE PTR es:[edi],dx
  406da7:	pop    esi
  406da8:	repz and ecx,DWORD PTR [esi+0x4ef8795e]
  406daf:	and    dh,cl
  406db1:	call   FWORD PTR [ecx+0x5e]
  406db4:	jns    0x406dbe
  406db6:	pop    esi
  406db7:	and    bl,bh
  406db9:	(bad)  
  406dba:	stc    
  406dbb:	icebp  
  406dbc:	into   
  406dbd:	pop    ebx
  406dbe:	das    
  406dbf:	cmp    eax,0xf2c30004
  406dc4:	fild   WORD PTR [ebx-0x74a4b54e]
  406dca:	xor    ebp,DWORD PTR [ebx+0x6]
  406dcd:	shl    BYTE PTR [edx+0x79],0xcb
	...
  406dd9:	add    BYTE PTR [eax],al
  406ddb:	add    BYTE PTR [esi],dh
  406ddd:	jg     0x406deb
  406ddf:	add    ch,bl
  406de1:	pop    esi
  406de2:	(bad)  
  406de3:	jge    0x406e13
  406de5:	jl     0x406e60
  406de7:	pop    es
  406de8:	mov    esp,0x36000e7e
  406ded:	push   edx
  406dee:	add    eax,DWORD PTR [ebx+0x750d676b]
  406df4:	xor    DWORD PTR ds:0x7f26010c,eax
  406dfa:	out    0x2,eax
  406dfc:	or     eax,0xefca8d2d
  406e01:	jle    0x406e11
  406e03:	add    BYTE PTR [ebx-0x49],ch
  406e06:	lock push eax
  406e08:	push   esp
  406e09:	aad    0xc
  406e0b:	jmp    DWORD PTR [ebx+0x72]
  406e0e:	repz jne 0x406def
  406e11:	push   esi
  406e12:	scas   al,BYTE PTR es:[edi]
  406e13:	jmp    0xc047ecfe
  406e18:	iret   
  406e19:	ret    
  406e1a:	jge    0x406da9
  406e1c:	adc    dl,BYTE PTR [ecx+0x38]
  406e1f:	push   0xffffffcf
  406e21:	jmp    0x406e6e
  406e23:	hlt    
  406e24:	pop    ds
  406e25:	iret   
  406e26:	or     bh,bh
  406e28:	cmp    cl,BYTE PTR [ecx-0x14]
  406e2b:	jne    0x406dd8
  406e2d:	inc    eax
  406e2e:	sub    ecx,0xffffffcf
  406e31:	pop    eax
  406e32:	add    al,al
  406e34:	and    dl,BYTE PTR [ebp+0x58977d89]
  406e3a:	pop    ebx
  406e3b:	inc    esi
  406e3c:	dec    esp
  406e3d:	jae    0x406e13
  406e3f:	add    DWORD PTR [eax],eax
	...
  406e49:	add    dl,bh
  406e4b:	push   edx
  406e4c:	mov    BYTE PTR [ebp+0x77],bh
  406e4f:	push   edi
  406e50:	pop    ebx
  406e51:	cmp    al,BYTE PTR [ebx+edx*4-0x30]
  406e55:	inc    eax
  406e56:	inc    DWORD PTR [eax]
  406e58:	dec    esi
  406e59:	std    
  406e5a:	pusha  
  406e5b:	fld    DWORD PTR [ecx-0x28e4b508]
  406e61:	push   eax
  406e62:	clc    
  406e63:	ds punpckhdq mm1,mm7
  406e67:	mov    cl,0x5b
  406e69:	adc    BYTE PTR [eax+0x23],al
  406e6c:	shr    eax,cl
  406e6e:	mov    al,ds:0xc40008cf
  406e73:	cwde   
  406e74:	push   esp
  406e75:	or     al,BYTE PTR [eax+0x20fd25c0]
  406e7b:	cdq    
  406e7c:	and    edi,edi
  406e7e:	and    al,0x54
  406e80:	add    BYTE PTR [ebp-0x45],0x5d
  406e84:	iret   
  406e85:	je     0x406e59
  406e87:	jno    0x406ee4
  406e89:	clc    
  406e8a:	push   eax
  406e8b:	pop    eax
  406e8c:	in     al,dx
  406e8d:	jne    0x406e8a
  406e8f:	(bad)  
  406e90:	adc    ecx,ebp
  406e92:	iret   
  406e93:	pop    eax
  406e94:	add    bh,0xd4
  406e97:	cwde   
  406e98:	pop    ebx
  406e99:	sbb    al,0x4c
  406e9b:	jg     0x406f05
  406e9d:	cld    
  406e9e:	into   
  406e9f:	out    dx,al
  406ea0:	sti    
  406ea1:	mov    WORD PTR [edx-0x37cbda79],cs
  406ea7:	jmp    0x406ea2
  406ea9:	loopne 0x406ee5
  406eab:	nop
  406eac:	retf   0x56
	...
  406eb7:	add    bl,cl
  406eb9:	pusha  
  406eba:	cmp    BYTE PTR [edi+eiz*4],cl
  406ebd:	lahf   
  406ebe:	mov    edx,0xacc1a8e0
  406ec3:	lds    edi,FWORD PTR [ebx-0x5472cf81]
  406ec9:	dec    DWORD PTR [edi]
  406ecb:	or     al,0xce
  406ecd:	jg     0x406eb4
  406ecf:	add    DWORD PTR [edx],0x77
  406ed2:	adc    BYTE PTR [esi],0x90
  406ed5:	mov    eax,0xbb480424
  406eda:	std    
  406edb:	ins    DWORD PTR es:[edi],dx
  406edc:	iret   
  406edd:	pusha  
  406ede:	lock imul DWORD PTR [ecx-0x15]
  406ee2:	aad    0xe0
  406ee4:	fidiv  DWORD PTR [ebx+0x6a]
  406ee7:	push   esi
  406ee8:	(bad)  
  406ee9:	push   edi
  406eea:	pop    ecx
  406eeb:	loope  0x406f3d
  406eed:	popa   
  406eee:	sub    al,0xc5
  406ef0:	fistp  QWORD PTR [edi+0xe]
  406ef3:	les    edx,FWORD PTR [eax+edx*2+0x14]
  406ef7:	in     eax,0x76
  406ef9:	ja     0x406ee0
  406efb:	add    ecx,edi
  406efd:	dec    esi
  406efe:	dec    edi
  406eff:	push   esp
  406f00:	(bad)  
  406f02:	adc    bh,BYTE PTR ss:0x1d822917
  406f09:	(bad)  
  406f0a:	hlt    
  406f0b:	repnz mov edi,0xe38a0b5d
  406f11:	cli    
  406f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f13:	mov    cl,BYTE PTR [esi-0x7d3cf481]
  406f19:	inc    ebp
  406f1a:	es add BYTE PTR ss:[eax],al
	...
  406f26:	inc    esp
  406f27:	push   esp
  406f28:	or     al,0x9e
  406f2a:	pop    ebx
  406f2b:	mov    ebx,0xf51df604
  406f30:	jo     0x406f27
  406f32:	inc    ebp
  406f33:	mov    bl,0x1c
  406f35:	repnz add ebp,esp
  406f38:	adc    al,0x62
  406f3a:	cmp    DWORD PTR [esi],0xffffffe6
  406f3d:	loope  0x406f1d
  406f3f:	js     0x406f6a
  406f41:	(bad)  
  406f42:	sar    DWORD PTR [edi+0xc],cl
  406f45:	jb     0x406f0e
  406f47:	cli    
  406f48:	dec    ebx
  406f49:	pusha  
  406f4a:	adc    al,BYTE PTR [eax+0x5e08ab3f]
  406f50:	in     al,0x9e
  406f52:	arpl   ax,ax
  406f54:	lds    ebp,FWORD PTR [ebx+0x62597fbf]
  406f5a:	jg     0x406f28
  406f5c:	(bad)  
  406f5d:	or     al,0xd3
  406f5f:	jg     0x406fda
  406f61:	out    dx,al
  406f62:	xchg   ecx,eax
  406f63:	mov    edx,0xbf034c04
  406f68:	or     al,0x6a
  406f6a:	out    dx,al
  406f6b:	jae    0x406f79
  406f6d:	hlt    
  406f6e:	leave  
  406f6f:	cmp    BYTE PTR [ecx-0xb],cl
  406f72:	pop    ds
  406f73:	mov    bh,0x4d
  406f75:	jmp    0x414559eb
  406f7a:	inc    edx
  406f7b:	pop    ecx
  406f7c:	or     al,0xe9
  406f7e:	push   ebp
  406f7f:	inc    edi
  406f80:	repz mov esp,0x460b57c8
  406f86:	retf   
  406f87:	jg     0x406f98
  406f89:	adc    DWORD PTR [eax],eax
	...
  406f93:	add    BYTE PTR [esp+ecx*8+0x6000eee4],cl
  406f9a:	repz jb 0x406ff8
  406f9d:	pusha  
  406f9e:	jns    0x406f91
  406fa0:	fst    QWORD PTR [edi+0x1d]
  406fa3:	push   cs
  406fa4:	sar    DWORD PTR [edi-0xd],cl
  406fa7:	xchg   esp,eax
  406fa8:	ror    ah,1
  406faa:	in     al,0x0
  406fac:	add    BYTE PTR [ecx+0xc],bl
  406faf:	add    BYTE PTR [ebp+0x3c],bh
  406fb2:	push   edi
  406fb3:	leave  
  406fb4:	mov    ah,0x73
  406fb6:	or     al,0x55
  406fb8:	ins    DWORD PTR es:[edi],dx
  406fb9:	outs   dx,DWORD PTR ds:[esi]
  406fba:	pop    edi
  406fbb:	xor    DWORD PTR [ebx+0x73],0xc
  406fbf:	jne    0x406faa
  406fc1:	cmp    BYTE PTR [ecx+0x8],cl
  406fc4:	push   ebx
  406fc5:	retf   
  406fc6:	dec    ebp
  406fc7:	add    BYTE PTR ds:0xfb0000e0,dh
  406fcd:	xchg   bl,cl
  406fcf:	inc    ebp
  406fd0:	mov    ds:0xb6414410,al
  406fd5:	ds jns 0x406fe0
  406fd8:	mov    fs,WORD PTR [eax]
  406fda:	jmp    0xbbff:0xd40aa600
  406fe1:	outs   dx,DWORD PTR ds:[esi]
  406fe2:	in     al,0xb3
  406fe4:	pop    eax
  406fe5:	or     DWORD PTR [ebx+eax*1],0x3e
  406fe9:	ret    0xe85f
  406fec:	pop    ebp
  406fed:	cmp    dh,bl
  406fef:	(bad)  
  406ff0:	std    
  406ff1:	sbb    dh,bl
  406ff3:	jne    0x407063
  406ff5:	xchg   edx,eax
  406ff6:	in     al,0xbd
	...
  407000:	add    BYTE PTR [eax],al
  407002:	dec    eax
  407003:	or     DWORD PTR [edi+edi*8],0x7b
  407007:	(bad)  
  407008:	pop    edi
  407009:	call   0x4cd53a
  40700e:	mov    bh,0xdf
  407010:	add    al,0xad
  407012:	outs   dx,BYTE PTR ds:[esi]
  407013:	les    ecx,FWORD PTR [esp+esi*2]
  407016:	ds ds jns 0x407022
  40701a:	sahf   
  40701b:	sub    eax,0x9e1fff7
  407020:	iret   
  407021:	pop    ebx
  407022:	out    dx,eax
  407023:	inc    eax
  407024:	add    al,0x0
  407026:	pop    ebx
  407027:	or     ah,al
  407029:	sub    edx,0x3e
  40702c:	pop    ebx
  40702d:	push   0x86bcf
  407032:	iret   
  407033:	and    BYTE PTR [ecx-0x7f7a0705],0x45
  40703a:	repz jmp 0x27d5536c
  407040:	ltr    WORD PTR [edx+0x6a]
  407044:	out    0x16,al
  407046:	fdivr  DWORD PTR [ebx-0x4d309514]
  40704c:	or     bh,bh
  40704e:	inc    edx
  40704f:	popa   
  407050:	gs add al,al
  407053:	push   ebx
  407054:	in     al,dx
  407055:	dec    ebx
  407056:	push   cs
  407057:	imul   ecx,DWORD PTR [edx-0x2e6ec940],0x6540ab75
  407061:	sti    
  407062:	mov    al,ds:0x45c92d
	...
  40706f:	add    BYTE PTR [ebx-0x30fff098],bl
  407075:	mov    ebp,0x690e4be9
  40707a:	in     al,0x2d
  40707c:	push   esp
  40707d:	push   ebp
  40707e:	test   BYTE PTR [ebp-0x39],al
  407081:	dec    ebx
  407082:	sar    BYTE PTR [edi+0x70],1
  407085:	fst    QWORD PTR [edi]
  407087:	inc    edx
  407088:	rcr    DWORD PTR [ebx-0xc],cl
  40708b:	imul   ecx,edi,0xff084ebb
  407091:	xor    BYTE PTR [ecx*2+0x32d0690e],bl
  407098:	aaa    
  407099:	sbb    al,0xd1
  40709b:	inc    DWORD PTR [eax+0x61]
  40709e:	iret   
  40709f:	je     0x407073
  4070a1:	iret   
  4070a2:	dec    ebx
  4070a3:	cld    
  4070a4:	and    al,0x50
  4070a6:	mov    edi,es
  4070a8:	shr    ecx,cl
  4070aa:	adc    DWORD PTR [eax],eax
  4070ac:	call   0xca7f:0x1b45857e
  4070b3:	retf   0x830d
  4070b6:	in     eax,0x36
  4070b8:	push   esp
  4070b9:	imul   esi,DWORD PTR [esi-0x11787578],0xffffffc3
  4070c0:	add    DWORD PTR [ebp+eiz*2-0x2b30e4],0xffffff9b
  4070c8:	iret   
  4070c9:	jg     0x4070b0
  4070cb:	add    eax,DWORD PTR [eax+ecx*2-0x1630f7d9]
  4070d2:	in     eax,0x69
	...
  4070dc:	add    BYTE PTR [eax],al
  4070de:	iret   
  4070df:	jmp    0xea0fdaca
  4070e4:	in     eax,0x6b
  4070e6:	dec    edi
  4070e7:	and    ch,0x3
  4070ea:	mov    eax,0x7febfdd3
  4070ef:	arpl   bp,sp
  4070f1:	add    edx,DWORD PTR [eax+edi*1+0xe]
  4070f5:	les    ecx,FWORD PTR [esp+edx*8]
  4070f8:	out    dx,al
  4070f9:	xor    BYTE PTR [edi-0x30fc7fd3],ah
  4070ff:	pop    ss
  407100:	in     al,0x3
  407102:	iret   
  407103:	jg     0x407143
  407105:	retf   
  407106:	lea    eax,[ebp+eiz*8+0x7e6c4436]
  40710d:	inc    esi
  40710e:	(bad)  
  40710f:	mov    BYTE PTR [ebp-0x43002da9],ah
  407115:	add    ebx,edx
  407117:	xchg   BYTE PTR ds:0xe57fcf03,bh
  40711d:	retf   0x848d
  407120:	in     eax,0xdc
  407122:	ret    0x4d87
  407125:	cwde   
  407126:	sub    al,BYTE PTR [eax+0x5d3780e5]
  40712c:	mov    cl,0xe
  40712e:	data16 jo 0x407116
  407131:	add    ecx,edi
  407133:	mov    WORD PTR [esp+ebx*2],cs
  407136:	or     al,0x8d
  407138:	mov    edx,0xb4832729
  40713d:	jmp    0x304cf10e
	...
  40714a:	add    BYTE PTR [eax],al
  40714c:	push   cs
  40714d:	test   BYTE PTR [esp+edi*4],cl
  407150:	push   edi
  407151:	ins    BYTE PTR es:[edi],dx
  407152:	(bad)  
  407153:	and    eax,0x930cea18
  407158:	int3   
  407159:	pop    esp
  40715a:	jns    0x40714d
  40715c:	hlt    
  40715d:	repz call 0xccc93e4c
  407163:	jne    0x40710b
  407165:	scas   eax,DWORD PTR es:[edi]
  407166:	pop    esp
  407167:	rcl    DWORD PTR [ecx+0x59],1
  40716a:	repz ficomp WORD PTR [edx-0x3e]
  40716e:	lock xor ebx,edi
  407171:	pop    esp
  407172:	jns    0x407141
  407174:	xchg   esp,eax
  407175:	rol    BYTE PTR [ecx+edx*8],cl
  407178:	adc    ah,BYTE PTR [ebx+0xc]
  40717b:	jmp    0xe5b9b159
  407180:	test   edx,edx
  407182:	lock shr DWORD PTR [edx+ebx*2],0xf3
  407187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407188:	loopne 0x4071c9
  40718a:	out    0xea,eax
  40718c:	pop    ecx
  40718d:	ret    0xa0f0
  407190:	mov    DWORD PTR [ebx+0x6b48340c],eax
  407196:	pop    edi
  407197:	jb     0x40714f
  407199:	mov    esp,DWORD PTR [esi-0x27]
  40719c:	mov    eax,ds:0x84737767
  4071a1:	pop    esp
  4071a2:	jmpw   0xf190
  4071a6:	jmp    0xea66:0x7fe2
  4071ac:	mov    ah,0x7f
  4071ae:	or     al,0xe9
	...
  4071b8:	add    BYTE PTR [eax],al
  4071ba:	dec    esp
  4071bb:	pop    esp
  4071bc:	jns    0x40719f
  4071be:	and    al,0x53
  4071c0:	call   0x85c097c5
  4071c5:	add    esi,DWORD PTR [esi-0x34]
  4071c8:	push   eax
  4071c9:	push   0x36
  4071cb:	nop
  4071cc:	in     al,0x35
  4071ce:	xchg   ebx,eax
  4071cf:	or     DWORD PTR [ecx+ecx*4],0x65
  4071d3:	test   BYTE PTR [esi+0x0],ah
  4071d6:	pop    esp
  4071d7:	and    BYTE PTR [esi+0x0],0x4c
  4071db:	and    BYTE PTR [esi+0x0],0xc9
  4071df:	je     0x4071c5
  4071e1:	daa    
  4071e2:	ret    
  4071e3:	or     DWORD PTR [ebx+ecx*1],0xffffffb6
  4071e7:	scas   eax,DWORD PTR es:[edi]
  4071e8:	and    ecx,DWORD PTR [ecx+0x655c35]
  4071ee:	dec    esp
  4071ef:	and    BYTE PTR [esi+0x0],0x7c
  4071f3:	jg     0x407251
  4071f5:	call   0x4cd2c8
  4071fa:	das    
  4071fb:	ret    0xb04
  4071fe:	data16 mov al,0x28
  407201:	push   ebp
  407203:	jg     0x4071e9
  407205:	mov    ebx,0xff0c7f92
  40720a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40720b:	addr16 mov eax,0xcb7fa6e4
  407211:	add    ebp,DWORD PTR [ecx+0x36]
  407214:	repz call FWORD PTR [ebp-0x78]
  407218:	repz xor ecx,DWORD PTR [esi+0x20]
  40721c:	call   0x407221
  407221:	add    BYTE PTR [eax],al
  407223:	add    BYTE PTR [eax],al
  407225:	add    BYTE PTR [eax],al
  407227:	add    BYTE PTR [esi+0x3e],ah
  40722a:	ud0    ecx,DWORD PTR [ecx+0x36]
  40722e:	repz sub esi,DWORD PTR [esi]
  407231:	jl     0x407282
  407233:	or     BYTE PTR [ecx-0x30],ch
  407236:	int3   
  407237:	pop    ebx
  407238:	das    
  407239:	inc    ebp
  40723a:	add    al,0x0
  40723c:	adc    ecx,DWORD PTR [edx]
  40723e:	loopne 0x407293
  407240:	mov    ebp,0xcf830497
  407245:	ins    DWORD PTR es:[edi],dx
  407246:	xlat   BYTE PTR ds:[ebx]
  407247:	je     0x407229
  407249:	leave  
  40724a:	pop    edx
  40724b:	or     BYTE PTR [edi],ah
  40724d:	ja     0x407222
  40724f:	add    bh,cl
  407251:	cdq    
  407252:	pop    edx
  407253:	add    al,0x37
  407255:	sbb    edx,ebx
  407257:	add    bh,cl
  407259:	test   eax,0x8ca0e81a
  40725e:	verr   WORD PTR [edi+ecx*4+0x1bcf04c9]
  407266:	sub    ah,0x4e
  407269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40726a:	out    dx,eax
  40726b:	out    dx,eax
  40726c:	lock cmp DWORD PTR ds:0x3a1c4c57,0xf688e48
  407277:	je     0x40723b
  407279:	imul   eax,DWORD PTR [ebx],0x8a78753
  40727f:	call   0x15d1d2
  407284:	mov    BYTE PTR [ebx+0x38],ch
  407287:	dec    eax
  407288:	push   cs
  407289:	imul   ecx,DWORD PTR [edi],0x0
  40728f:	add    BYTE PTR [eax],al
  407291:	add    BYTE PTR [eax],al
  407293:	add    BYTE PTR [eax],al
  407295:	add    bh,cl
  407297:	push   0x91003d88
  40729c:	dec    edi
  40729d:	add    bh,cl
  40729f:	pushf  
  4072a0:	jecxz  0x4072a0
  4072a2:	loop   0x407315
  4072a4:	inc    eax
  4072a5:	inc    ecx
  4072a6:	iret   
  4072a7:	lock push 0xccf988f9
  4072ad:	add    eax,0x4fa118
  4072b2:	iret   
  4072b3:	push   0xeb42000f
  4072b8:	fsubr  st,st(7)
  4072ba:	push   0x32e838d9
  4072bf:	fcom   st(5)
  4072c1:	dec    DWORD PTR [edx-0x1d]
  4072c4:	in     al,0xef
  4072c6:	push   eax
  4072c7:	jg     0x407333
  4072c9:	xor    al,0x37
  4072cb:	and    BYTE PTR [ebp-0x27],dl
  4072ce:	inc    eax
  4072cf:	or     al,0xa0
  4072d1:	xlat   BYTE PTR ds:[ebx]
  4072d2:	lahf   
  4072d3:	out    0xbe,eax
  4072d5:	dec    ebx
  4072d6:	mov    ?,WORD PTR [edi-0x23]
  4072d9:	add    eax,0xec657fcf
  4072de:	scas   eax,DWORD PTR es:[edi]
  4072df:	fs in  eax,0x3
  4072e2:	les    edi,FWORD PTR [edi]
  4072e4:	sar    BYTE PTR [esi+0x74],cl
  4072e7:	and    ch,0x3
  4072ea:	adc    BYTE PTR [ecx+ebx*1],al
  4072ed:	jmp    0x425ccf2
  4072f2:	iret   
  4072f3:	jg     0x40731f
  4072f5:	jg     0x4072ee
  4072f7:	imul   ecx,DWORD PTR [edx],0xd9
  4072fd:	add    BYTE PTR [eax],al
  4072ff:	add    BYTE PTR [eax],al
  407301:	add    BYTE PTR [eax],al
  407303:	add    al,ch
  407305:	mov    ebp,esp
  407307:	add    esi,DWORD PTR [ebp+0x7f]
  40730a:	pop    DWORD PTR [ebx]
  40730c:	gs jg  0x40729e
  40730f:	add    eax,DWORD PTR [edx+0x4]
  407312:	in     eax,dx
  407313:	call   0x8775cce0
  407318:	dec    edx
  407319:	pop    esp
  40731a:	retf   0xb8d8
  40731d:	mov    al,0xc2
  40731f:	mov    ?,WORD PTR [ebx-0x57273597]
  407325:	shl    DWORD PTR [ecx-0x1a9d1615],cl
  40732b:	add    eax,esp
  40732d:	aas    
  40732e:	sar    BYTE PTR [esi-0x44],cl
  407331:	jle    0x407318
  407333:	add    esi,edi
  407335:	and    al,0x3d
  407337:	inc    ebx
  407338:	iret   
  407339:	out    0x3e,eax
  40733b:	dec    esp
  40733c:	push   cs
  40733d:	or     BYTE PTR [ebp-0x75a68caf],0xc
  407344:	(bad)
  407348:	iret   
  407349:	jg     0x407357
  40734b:	jmp    0x64c1a39b
  407350:	js     0x4073bb
  407352:	repz data16 cld 
  407355:	lods   eax,DWORD PTR ds:[esi]
  407356:	in     al,0x9a
  407358:	sbb    BYTE PTR [ecx-0xd],bl
  40735b:	loop   0x407369
  40735d:	mov    DWORD PTR [eax+0xc7fcc33],ecx
  407363:	jo     0x40730e
  407365:	pop    edi
  407366:	jecxz  0x4073a6
	...
  407370:	add    BYTE PTR [eax],al
  407372:	pop    es
  407373:	or     ecx,DWORD PTR [ecx-0xca6d8bf]
  407379:	cdq    
  40737a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40737b:	or     BYTE PTR [eax+ebp*4-0x34],al
  40737f:	pop    eax
  407380:	mov    ecx,0xf358f709
  407385:	adc    edx,0xe4690c7f
  40738b:	sub    edi,esi
  40738d:	push   es
  40738e:	pop    es
  40738f:	test   esp,ecx
  407391:	out    dx,al
  407392:	pusha  
  407393:	and    cl,BYTE PTR [ecx+ebp*8]
  407396:	int3   
  407397:	cld    
  407398:	repz call 0xe9d07565
  40739e:	int3   
  40739f:	jg     0x4073fd
  4073a1:	ficomp WORD PTR [esi+0x67]
  4073a4:	jecxz  0x40737c
  4073a6:	mov    al,ds:0x9b94f3af
  4073ab:	push   0x97bbc6f3
  4073b0:	stc    
  4073b1:	mov    esi,0xc1890a78
  4073b6:	mov    al,0x58
  4073b8:	repz sbb DWORD PTR [ebx],esp
  4073bb:	stc    
  4073bc:	inc    ebx
  4073bd:	sub    bl,dl
  4073bf:	pop    eax
  4073c0:	mov    ecx,0xf3586889
  4073c5:	add    ebp,ecx
  4073c7:	jg     0x4073d5
  4073c9:	imul   esp,DWORD PTR [ebx-0x17],0x305100f7
  4073d0:	pop    es
  4073d1:	rcr    BYTE PTR [edx-0x68],0x8f
  4073d5:	mov    ebp,0x0
  4073da:	add    BYTE PTR [eax],al
  4073dc:	add    BYTE PTR [eax],al
  4073de:	add    BYTE PTR [eax],al
  4073e0:	dec    esi
  4073e1:	pusha  
  4073e2:	repz jmp DWORD PTR [edi-0x36]
  4073e6:	aaa    
  4073e7:	push   eax
  4073e8:	xchg   BYTE PTR [edi],al
  4073ea:	mov    esp,edi
  4073ec:	xchg   ecx,eax
  4073ed:	xor    bl,dh
  4073ef:	push   eax
  4073f0:	mov    ss,WORD PTR [edx-0x12]
  4073f3:	add    BYTE PTR [esi],ah
  4073f5:	mov    WORD PTR [ecx-0xc9f6d7b],es
  4073fb:	inc    DWORD PTR [esi+0x31]
  4073fe:	mov    ecx,0xf33091ec
  407403:	call   0x33a3d8
  407408:	push   cs
  407409:	xor    DWORD PTR [ecx-0xccf2e18],edi
  40740f:	push   eax
  407410:	loope  0x407400
  407412:	fucomip st,st(7)
  407414:	shl    DWORD PTR [eax],0xe4
  407417:	fucomi st,st(2)
  407419:	xor    bl,dh
  40741b:	call   0x33a826
  407420:	int    0xa3
  407422:	add    DWORD PTR [ebp-0xc9f1e],0xe2d46406
  40742c:	mov    dh,0x83
  40742e:	dec    esp
  40742f:	push   eax
  407430:	xor    eax,DWORD PTR [eax]
  407432:	lock out dx,eax
  407434:	sub    DWORD PTR [esi],0x5f2bff5c
  40743a:	jecxz  0x40743b
  40743c:	popa   
  40743d:	imul   edi,DWORD PTR [eax-0x1bd19e0c],0xffffffe9
	...
  40744c:	add    BYTE PTR [eax],al
  40744e:	pop    ecx
  40744f:	repz jmp FWORD PTR cs:[ebx]
  407453:	arpl   bx,sp
  407455:	jmp    DWORD PTR [ecx+0x6b]
  407458:	shl    bh,cl
  40745a:	iret   
  40745b:	in     eax,dx
  40745c:	fcos   
  40745e:	dec    edx
  40745f:	in     eax,dx
  407460:	jmp    0x8230dd64
  407465:	(bad)  
  407466:	pusha  
  407467:	(bad)  
  407468:	fidiv  DWORD PTR [ebp+0x5b]
  40746b:	add    edx,eax
  40746d:	jecxz  0x40743e
  40746f:	push   0xf4480065
  407474:	fsubp  st(7),st
  407476:	inc    eax
  407477:	mov    dh,0xe7
  407479:	outs   dx,DWORD PTR ds:[esi]
  40747a:	inc    ebx
  40747b:	scas   al,BYTE PTR es:[edi]
  40747c:	fisubr DWORD PTR [edx-0x31]
  40747f:	lds    ebx,FWORD PTR [esp+ebp*8-0x172541c8]
  407486:	lods   eax,DWORD PTR ds:[esi]
  407487:	mov    edx,ds
  407489:	dec    DWORD PTR [edx-0x1c]
  40748c:	shr    edi,cl
  40748e:	adc    BYTE PTR [esi+0x7942ff3f],ah
  407494:	jmp    0xcfe3:0x767100ff
  40749b:	push   0x2177c08c
  4074a0:	fidiv  DWORD PTR [ebp-0x259221]
  4074a6:	test   DWORD PTR [edx+ebp*8],0x8cdfd8ff
  4074ad:	call   0x19da92
	...
  4074ba:	add    BYTE PTR [eax],al
  4074bc:	xor    BYTE PTR [eax],0xe9
  4074bf:	inc    eax
  4074c1:	xor    BYTE PTR [edx-0x9],ah
  4074c4:	mov    eax,0x753ad2d
  4074c9:	test   al,0x8
  4074cb:	jmp    DWORD PTR [edx+0x44]
  4074ce:	jmp    0x457115d2
  4074d3:	loop   0x4074a4
  4074d5:	push   0x321bc004
  4074da:	test   BYTE PTR [ebp-0x2a658089],cl
  4074e0:	or     BYTE PTR [edx],0x95
  4074e3:	mov    DWORD PTR [edx-0x30bcd24e],edi
  4074e9:	push   edx
  4074ea:	dec    ecx
  4074eb:	aad    0x22
  4074ed:	pop    ebx
  4074ee:	call   0xcfe1:0xb76760d5
  4074f5:	jg     0x40755f
  4074f7:	jg     0x407564
  4074f9:	data16 (bad) 
  4074fb:	aad    0x9f
  4074fd:	push   esi
  4074fe:	nop
  4074ff:	call   0xec92cb34
  407504:	cmc    
  407505:	(bad)  
  407506:	in     eax,0x3
  407508:	dec    edx
  407509:	aas    
  40750a:	fisttp QWORD PTR [eax+0x28]
  40750d:	or     al,0x59
  40750f:	in     eax,0x20
  407511:	push   esi
  407512:	pop    ebp
  407513:	or     DWORD PTR [eax],ebp
  407515:	push   esi
  407516:	cmp    cl,BYTE PTR [ebx-0x2acd98b6]
  40751c:	or     BYTE PTR [esi+0x50],dl
  40751f:	in     al,dx
	...
  407528:	add    BYTE PTR [eax],al
  40752a:	lock push ebp
  40752c:	adc    ch,ah
  40752e:	ret    0x1a4e
  407531:	aad    0x2c
  407533:	scas   al,BYTE PTR es:[edi]
  407534:	lods   eax,DWORD PTR ds:[esi]
  407535:	inc    edx
  407536:	iret   
  407537:	push   esi
  407538:	xor    al,ah
  40753a:	lock push ebp
  40753c:	bnd jmp 0x407524
  40753f:	pop    edi
  407540:	in     eax,0x3
  407542:	les    edi,FWORD PTR [edi]
  407544:	jns    0x40753e
  407546:	push   ebp
  407547:	add    ebx,ebp
  407549:	in     al,0xc0
  40754b:	push   ebp
  40754c:	jle    0x407521
  40754e:	inc    esp
  40754f:	xchg   ebx,eax
  407550:	xor    cl,BYTE PTR [esi+ecx*1-0x80]
  407554:	(bad)  
  407555:	lahf   
  407556:	test   al,0xb
  407558:	shl    esp,0xa0
  40755b:	push   ebp
  40755c:	fnsave [edx-0x16f37f52]
  407562:	jnp    0x40756f
  407564:	cld    
  407565:	mov    esi,0xae455a3
  40756a:	imul   edx,DWORD PTR [ebp-0xd],0xe364499e
  407571:	xchg   esi,eax
  407572:	fwait
  407573:	push   0x55837f54
  407578:	push   ebx
  407579:	daa    
  40757a:	xchg   esp,eax
  40757b:	inc    ecx
  40757c:	pop    ecx
  40757d:	jb     0x4075ef
  40757f:	jmp    0x6ef3:0x4e6e8104
  407586:	push   edi
  407587:	xor    bl,dh
  407589:	sbb    al,0x5c
  40758b:	enter  0xe94d,0x0
	...
  407597:	add    BYTE PTR [ebx-0x7e],dl
  40759a:	repz fadd st(4),st
  40759d:	add    al,0x4e
  40759f:	in     eax,0x55
  4075a1:	imul   edi,DWORD PTR [ebp-0x3a80724f],0x2b
  4075a8:	sbb    BYTE PTR [ebp+0x58],dl
  4075ab:	bound  ebp,QWORD PTR [eax]
  4075ad:	add    eax,ecx
  4075af:	xor    DWORD PTR [ebx-0x33deb6c4],edi
  4075b5:	jg     0x4075c3
  4075b7:	jmp    0xe945490b
  4075bc:	xor    BYTE PTR [ecx-0xd],0x94
  4075c0:	rcl    BYTE PTR [ecx+edi*2-0xf],1
  4075c4:	jbe    0x407645
  4075c6:	in     al,0xfc
  4075c8:	not    BYTE PTR [ebx+esi*8+0x60]
  4075cc:	xchg   ecx,eax
  4075cd:	push   ebx
  4075ce:	out    0xe6,eax
  4075d0:	mov    edi,DWORD PTR [edx+0x7fcce9f0]
  4075d6:	or     al,0x72
  4075d8:	fimul  WORD PTR [esi]
  4075da:	inc    esp
  4075db:	sub    bl,cl
  4075dd:	push   0x5416621f
  4075e2:	aaa    
  4075e3:	add    cl,dh
  4075e5:	xchg   DWORD PTR [ecx+0x9],edi
  4075e8:	jno    0x4075b0
  4075ea:	hlt    
  4075eb:	add    DWORD PTR [esi+0x70eb0c80],esp
  4075f1:	aad    0x33
  4075f3:	or     ebp,DWORD PTR [ecx]
  4075f5:	mov    dh,0xe5
  4075f7:	sbb    ebx,0x43
  4075fa:	or     al,0x75
	...
  407604:	add    BYTE PTR [eax],al
  407606:	outs   dx,BYTE PTR ds:[esi]
  407607:	xor    DWORD PTR [ecx-0x4],edi
  40760a:	dec    esi
  40760b:	std    
  40760c:	repnz dec DWORD PTR [ecx-0x2c]
  407610:	dec    ecx
  407611:	clc    
  407612:	mov    ecx,0x6608ce12
  407617:	cdq    
  407618:	xchg   DWORD PTR ds:0x4d9407,edi
  40761e:	popf   
  40761f:	push   ebx
  407620:	pop    edx
  407621:	mov    ebx,ecx
  407623:	xor    esi,DWORD PTR [edx]
  407625:	neg    BYTE PTR [ecx+0x3ff0730]
  40762b:	sub    al,0xcb
  40762d:	add    eax,0x4d93a7
  407632:	or     BYTE PTR es:[eax+eax*1],0x39
  407637:	cmp    eax,0x98ca8b59
  40763c:	pop    edx
  40763d:	push   0xfffffff6
  40763f:	xor    BYTE PTR [ecx+0x8],bh
  407642:	fdivrp st(1),st
  407644:	hlt    
  407645:	(bad)  
  407646:	(bad)  
  407648:	hlt    
  407649:	inc    DWORD PTR [ebx+0x58]
  40764c:	jmp    0x407639
  40764e:	(bad)  
  40764f:	jnp    0x40765d
  407651:	or     esi,0x7a
  407654:	jp     0x407665
  407656:	xor    DWORD PTR [eax],eax
  407658:	xor    esp,DWORD PTR [edx]
  40765a:	inc    ebx
  40765b:	push   edi
  40765c:	test   DWORD PTR [ebp-0x377882df],0x68531b95
  407666:	iret   
  407667:	repz ss inc ecx
	...
  407672:	add    BYTE PTR [eax],al
  407674:	iret   
  407675:	mov    eax,edx
  407677:	push   0xffffffad
  407679:	imul   ecx,DWORD PTR [edi],0x48d8f0b
  40767f:	(bad)  
  407680:	pcmpgtw mm1,QWORD PTR [edi]
  407683:	push   0x2b
  407685:	mov    edi,0xbb775708
  40768a:	jmp    0xca74:0xcf4dcf00
  407691:	and    cl,BYTE PTR [edi]
  407693:	add    BYTE PTR [esi+eiz*2-0x3b],dh
  407697:	pop    es
  407698:	iret   
  407699:	jno    0x40766b
  40769b:	test   al,0x6f
  40769d:	imul   ecx,DWORD PTR [edi],0x56665783
  4076a3:	add    edx,DWORD PTR [ecx]
  4076a5:	pop    edx
  4076a6:	jnp    0xc97eb1b4
  4076ac:	or     eax,0x44550f5d
  4076b1:	mov    ebp,0xde2bc48a
  4076b6:	inc    esp
  4076b7:	or     al,0xca
  4076b9:	push   0xf918ffff
  4076be:	(bad)  
  4076bf:	lds    ebx,FWORD PTR [edx]
  4076c1:	mov    bl,dh
  4076c3:	mov    DWORD PTR [edx-0x2c8a215c],edx
  4076c9:	cdq    
  4076ca:	push   esp
  4076cb:	cld    
  4076cc:	clc    
  4076cd:	jmp    0x4076c5
  4076cf:	out    0xe4,eax
  4076d1:	jae    0x4076b1
  4076d3:	(bad)  
  4076d4:	call   0x13f75c4
	...
  4076e1:	add    BYTE PTR [edx+0x4c],bl
  4076e4:	fidiv  WORD PTR [ebp-0x25]
  4076e7:	jo     0x407692
  4076e9:	or     edi,ecx
  4076eb:	push   0x80cb75de
  4076f0:	xchg   ch,dh
  4076f2:	sar    BYTE PTR [edi-0x16],0xbb
  4076f6:	lea    eax,[ebx+0x634436e5]
  4076fc:	xor    esi,DWORD PTR ds:0xfc585300
  407702:	test   al,0xf8
  407704:	les    eax,FWORD PTR [edi+ecx*8]
  407707:	out    dx,eax
  407708:	std    
  407709:	ret    
  40770a:	sbb    bh,BYTE PTR [ebx+0x1a]
  40770d:	sub    eax,0xfca74929
  407712:	add    BYTE PTR ds:0x648fc28,0xcd
  407719:	je     0x40775f
  40771b:	int3   
  40771c:	jmp    0x5c94063d
  407721:	shl    DWORD PTR [eax+0x52],1
  407724:	mov    dh,BYTE PTR [ebp+ebx*2+0x21]
  407728:	push   ebp
  407729:	test   BYTE PTR [eax-0x5e150e81],dl
  40772f:	scas   al,BYTE PTR es:[edi]
  407730:	lea    edx,[ebx+0x2f]
  407733:	jg     0x40771a
  407735:	cld    
  407736:	js     0x407704
  407738:	jmp    0xd7c6:0x2cb19430
  40773f:	jg     0x4077ad
  407741:	or     cl,BYTE PTR [ecx+edi*1-0x1f]
  407745:	fadd   QWORD PTR [eax]
	...
  40774f:	add    BYTE PTR [ecx],al
  407751:	pop    ss
  407752:	in     al,0x3
  407754:	iret   
  407755:	jg     0x4076f1
  407757:	sub    al,0xa9
  407759:	dec    eax
  40775a:	daa    
  40775b:	cld    
  40775c:	add    dl,bl
  40775e:	test   BYTE PTR [esi+ecx*4],bh
  407761:	jg     0x407700
  407763:	adc    DWORD PTR [esi+0x40dbe5c0],eax
  407769:	push   edx
  40776a:	add    dl,cl
  40776c:	ja     0x407796
  40776e:	mov    esi,0x62e7cf42
  407773:	mov    ?,WORD PTR ds:[edi+0xc]
  407777:	add    DWORD PTR [ebx+0x51],ecx
  40777a:	repz out dx,al
  40777c:	and    al,0xdb
  40777e:	inc    edi
  40777f:	sub    bl,dl
  407781:	out    0x54,eax
  407783:	xor    BYTE PTR [eax+eax*4],cl
  407786:	in     al,0x50
  407788:	jle    0x4077db
  40778a:	repz inc ecx
  40778c:	stos   BYTE PTR es:[edi],al
  40778d:	lds    ecx,FWORD PTR [ebp-0x17]
  407790:	hlt    
  407791:	cmp    al,BYTE PTR [edi+0x28]
  407794:	retf   
  407795:	addr16 data16 mov dh,0x9f
  407799:	push   ecx
  40779a:	fs adc dl,al
  40779d:	mov    esi,0xc882110c
  4077a2:	dec    ebp
  4077a3:	jmp    0x97342d3c
  4077a8:	jg     0x407792
  4077aa:	pop    ebp
  4077ab:	and    cl,BYTE PTR [eax+eax*4]
  4077ae:	fs call 0x0:0x910cbe94
	...
  4077be:	nop
  4077bf:	push   eax
  4077c0:	repz jbe 0x407767
  4077c3:	adc    al,BYTE PTR [edi+0x28]
  4077c6:	retf   
  4077c7:	out    0x1d,eax
  4077c9:	mov    dl,0x8d
  4077cb:	jg     0x4077b1
  4077cd:	sbb    al,0x1e
  4077cf:	push   ecx
  4077d0:	repz ror DWORD PTR ds:0x84e94dc5,0xa0
  4077d8:	inc    edi
  4077d9:	test   al,0xcc
  4077db:	and    bh,BYTE PTR ds:0x50ff
  4077e0:	iret   
  4077e1:	pushf  
  4077e2:	mov    esp,DWORD PTR [ebx-0x79]
  4077e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077e6:	add    al,0x86
  4077e8:	int3   
  4077e9:	popf   
  4077ea:	sar    edi,1
  4077ec:	xor    ebp,ecx
  4077ee:	cdq    
  4077ef:	xchg   BYTE PTR [ecx+ebp*8+0x200c7fcc],dh
  4077f6:	or     bh,BYTE PTR [esp+ecx*1+0x0]
  4077fa:	std    
  4077fb:	or     ah,bh
  4077fd:	pop    ss
  4077fe:	data16 test BYTE PTR [eax+0x74],dl
  407802:	mov    ebx,0x3b2f33fc
  407807:	mov    BYTE PTR [esi+0xc7ca601],dh
  40780d:	jmp    0x4077ba
  40780f:	push   es
  407810:	or     al,0x0
  407812:	mov    dh,0x7c
  407814:	dec    esp
  407815:	cmp    BYTE PTR [esi+0x1de4797b],0x3e
  40781c:	(bad)
  40781f:	jl     0x40787a
  407821:	mov    eax,DWORD PTR [eax]
	...
  40782b:	add    BYTE PTR [edx-0x12aca578],dl
  407831:	mov    BYTE PTR [eax],0x5
  407834:	data16 js 0x407843
  407837:	add    BYTE PTR [edi],dh
  407839:	pop    ebx
  40783a:	pop    esp
  40783b:	call   0x33b005
  407840:	in     eax,dx
  407841:	inc    ebx
  407842:	xchg   eax,ebx
  407844:	fnsave [esi+0x7fa38b04]
  40784a:	out    0x2,eax
  40784c:	call   0x8c87:0x3ac90792
  407853:	ds cmp al,0xb7
  407856:	stc    
  407857:	or     edi,edi
  407859:	mov    bh,0xe
  40785b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40785c:	outs   dx,DWORD PTR ds:[esi]
  40785d:	jne    0x40782b
  40785f:	stos   BYTE PTR es:[edi],al
  407860:	stos   DWORD PTR es:[edi],eax
  407861:	adc    bh,BYTE PTR [ecx-0x1a]
  407864:	popf   
  407865:	cmp    al,0x57
  407867:	pop    esi
  407868:	xor    DWORD PTR [ebx],edx
  40786a:	into   
  40786b:	or     dh,dh
  40786d:	mov    WORD PTR [edx-0x47],ds
  407870:	jmp    0xde6c:0x76000c7b
  407877:	nop
  407878:	adc    eax,0xcfac9c25
  40787d:	(bad)  
  40787e:	repz mov ch,0xf
  407881:	(bad)  
  407882:	sbb    al,0x2b
  407884:	aas    
  407885:	ror    DWORD PTR [ecx],cl
  407887:	nop
  407888:	dec    esp
  407889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40788a:	add    dl,BYTE PTR [eax-0x6fedeaf4]
	...
  407898:	add    BYTE PTR [eax],al
  40789a:	cmp    ah,BYTE PTR [edi+0x7f]
  40789d:	or     DWORD PTR [ebp-0xcbc875a],0x68
  4078a4:	js     0x407922
  4078a6:	aad    0x74
  4078a8:	add    DWORD PTR [eax+0x40b6420],edx
  4078ae:	int3   
  4078af:	call   0xa94eb501
  4078b4:	inc    ebx
  4078b5:	or     ecx,ebx
  4078b7:	jb     0x407931
  4078b9:	jg     0x407884
  4078bb:	dec    esp
  4078bc:	dec    eax
  4078bd:	nop
  4078be:	int3   
  4078bf:	or     BYTE PTR [esi+0x3c],cl
  4078c2:	out    dx,al
  4078c3:	enter  0xa43,0xab
  4078c7:	jb     0x407941
  4078c9:	jg     0x407895
  4078cb:	or     al,0x4a
  4078cd:	add    edi,DWORD PTR [edi-0x66]
  4078d0:	leave  
  4078d1:	ret    0xfac9
  4078d4:	xchg   edi,eax
  4078d5:	rcl    DWORD PTR ds:0xd0c2765f,0x20
  4078dc:	enter  0xc7e8,0x11
  4078e0:	jg     0x40786d
  4078e2:	add    al,0xc9
  4078e4:	and    DWORD PTR [ebx+0xc],ebx
  4078e7:	or     al,0x76
  4078e9:	in     al,dx
  4078ea:	jl     0x407901
  4078ec:	cmp    esp,edi
  4078ee:	inc    esp
  4078ef:	or     al,0xf7
  4078f1:	pop    DWORD PTR [esp+ecx*1-0x1]
  4078f5:	(bad)  
  4078f6:	push   esp
  4078f7:	and    al,0xf3
  4078f9:	(bad)  
  4078fa:	mov    esp,0x22ee71
	...
  407907:	add    BYTE PTR [edi-0x80],bl
  40790a:	mov    ah,0x73
  40790c:	out    0xd1,eax
  40790e:	adc    cl,dh
  407910:	call   0x61fcd904
  407915:	ja     0x407966
  407917:	(bad)  
  407918:	out    0x77,eax
  40791a:	push   ebp
  40791b:	inc    edx
  40791c:	in     eax,dx
  40791d:	inc    edi
  40791e:	push   ebp
  40791f:	sub    al,0x5f
  407921:	add    ah,BYTE PTR [ebx]
  407923:	pop    es
  407924:	pop    edi
  407925:	add    cl,BYTE PTR [edi+eax*1]
  407928:	pop    edi
  407929:	into   
  40792a:	retf   
  40792b:	je     0x407971
  40792d:	inc    edx
  40792e:	jne    0x40795e
  407930:	or     BYTE PTR [ebx+0x7fd3c2ac],ch
  407936:	cmp    BYTE PTR [ecx-0x55],bh
  407939:	add    BYTE PTR [ecx-0x4db16e20],ah
  40793f:	xor    DWORD PTR [edx+ebp*1-0x507cb898],esi
  407946:	dec    ebp
  407947:	mov    al,BYTE PTR [edi]
  407949:	shl    ebp,0xcc
  40794c:	mov    edx,0xcf433d3e
  407951:	push   edi
  407952:	jg     0x407901
  407954:	iret   
  407955:	jg     0x407945
  407957:	ret    
  407958:	loop   0x4078fb
  40795a:	mov    dl,BYTE PTR [edi-0x41]
  40795d:	dec    esi
  40795e:	clc    
  40795f:	push   DWORD PTR [esi+0x40040f82]
  407965:	aam    0xed
  407967:	int3   
  407968:	ret    0x5d4b
  40796b:	test   DWORD PTR [eax],eax
	...
  407975:	add    BYTE PTR [eax],dl
  407977:	jg     0x40795e
  407979:	clc    
  40797a:	push   0x2040e4d4
  40797f:	aam    0x41
  407981:	fsubr  QWORD PTR [ebp-0x3bfc1ad2]
  407987:	sub    ah,dl
  407989:	xchg   BYTE PTR [edx],dl
  40798b:	jg     0x407999
  40798d:	jmp    0x3ac9765e
  407992:	or     DWORD PTR [esi-0xd],ecx
  407995:	mov    ecx,0xe90d8394
  40799a:	int3   
  40799b:	push   edi
  40799c:	inc    ecx
  40799d:	aaa    
  40799e:	retf   
  40799f:	jg     0x4079a8
  4079a1:	sub    edx,ebx
  4079a3:	add    DWORD PTR [eax+0x317fcce9],esp
  4079a9:	in     eax,0xcd
  4079ab:	jg     0x4079b9
  4079ad:	out    0x4b,al
  4079af:	pop    ds
  4079b0:	or     al,0xe9
  4079b2:	int3   
  4079b3:	(bad)  [esp+esi*2]
  4079b6:	dec    ecx
  4079b7:	push   ecx
  4079b8:	repnz ficomp WORD PTR [ebx+0x711be4b0]
  4079bf:	or     BYTE PTR [esp+ebx*2],0x51
  4079c3:	push   ecx
  4079c4:	repnz mov BYTE PTR [ebx-0x66d61b50],0x4d
  4079cc:	repz loop 0x40795b
  4079cf:	rcl    DWORD PTR [eax],cl
  4079d1:	inc    ecx
  4079d2:	push   esi
  4079d3:	mov    eax,0x2f1e94d
  4079d8:	call   FWORD PTR [edi+0x0]
  4079de:	add    BYTE PTR [eax],al
  4079e0:	add    BYTE PTR [eax],al
  4079e2:	add    BYTE PTR [eax],al
  4079e4:	fwait
  4079e5:	dec    ebp
  4079e6:	pop    esp
  4079e7:	adc    DWORD PTR [esi],0x8b8ef356
  4079ed:	rol    DWORD PTR [ecx+ebx*1],cl
  4079f0:	jae    0x407a35
  4079f2:	cli    
  4079f3:	jle    0x407a10
  4079f5:	pop    ecx
  4079f6:	add    esi,DWORD PTR [esi-0x67]
  4079f9:	ja     0x40797c
  4079fb:	fs pop ds
  4079fd:	dec    esi
  4079fe:	repz data16 cld 
  407a01:	push   edi
  407a02:	ins    BYTE PTR es:[edi],dx
  407a03:	push   edi
  407a04:	sbb    ecx,DWORD PTR [ebp-0x7b]
  407a07:	ins    BYTE PTR es:[edi],dx
  407a08:	add    BYTE PTR [esi-0xd],cl
  407a0b:	dec    esi
  407a0c:	jbe    0x407a8d
  407a0e:	data16 add BYTE PTR [esi],ah
  407a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a12:	push   cs
  407a13:	push   0xfffffff6
  407a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a16:	punpckhbw mm6,mm6
  407a19:	or     BYTE PTR [eax+eax*8],0xa9
  407a1d:	cmc    
  407a1e:	(bad)  
  407a20:	test   eax,0xab5fe43b
  407a25:	or     BYTE PTR [ecx+ecx*4],0x33
  407a29:	cmp    DWORD PTR [esp+esi*2-0x22],ecx
  407a2d:	cmp    edi,DWORD PTR [ecx+0x10]
  407a30:	leave  
  407a31:	mov    ch,0x0
  407a33:	inc    DWORD PTR [ebx+0x39]
  407a36:	in     al,0xf7
  407a38:	retf   
  407a39:	cmp    esi,ebx
  407a3b:	mov    ebx,esi
  407a3d:	cmp    edi,DWORD PTR [ecx-0x8]
  407a40:	sahf   
  407a41:	xchg   cl,dl
  407a43:	add    BYTE PTR [esi+0x75d64d],dh
	...
  407a51:	add    BYTE PTR [ebp-0x771346c7],ch
  407a57:	cmp    bl,dh
  407a59:	call   0x4c9174
  407a5e:	dec    ecx
  407a5f:	out    dx,al
  407a60:	(bad)  
  407a62:	cmp    DWORD PTR [eax],edi
  407a64:	in     al,0x69
  407a66:	xor    al,0x38
  407a68:	repz mov esp,DWORD PTR ds:0x7ac2c59c
  407a6f:	sbb    BYTE PTR [ecx-0x75],0x4a
  407a73:	add    cl,al
  407a75:	in     al,dx
  407a76:	dec    eax
  407a77:	cmp    bl,dh
  407a79:	push   ebx
  407a7a:	dec    ecx
  407a7b:	scas   al,BYTE PTR es:[edi]
  407a7c:	add    bh,bh
  407a7e:	inc    ebx
  407a7f:	dec    eax
  407a80:	imul   edi,DWORD PTR [edx-0xf33d12],0xffffff83
  407a87:	or     DWORD PTR [ecx+eax*2+0x26],eax
  407a8b:	sub    BYTE PTR [esi-0xb],dl
  407a8e:	mov    DWORD PTR [eax],edi
  407a90:	pop    es
  407a91:	ror    bh,0x65
  407a94:	mov    edx,ds
  407a96:	iret   
  407a97:	push   esi
  407a98:	(bad)  
  407a9a:	hlt    
  407a9b:	ror    BYTE PTR [ebp-0x3872f611],cl
  407aa1:	push   eax
  407aa2:	ja     0x407afe
  407aa4:	or     BYTE PTR [eax],al
  407aa6:	iret   
  407aa7:	mov    esi,0x56cfdd3f
  407aac:	repnz mov edi,0x85e2d8
  407ab2:	iret   
  407ab3:	push   esi
  407ab4:	add    al,0x4
	...
  407abe:	add    BYTE PTR [eax],al
  407ac0:	into   
  407ac1:	push   esi
  407ac2:	(bad)  
  407ac3:	cmovs  ecx,DWORD PTR [eax-0x2430fff8]
  407aca:	dec    ebp
  407acb:	cld    
  407acc:	pop    ds
  407acd:	adc    DWORD PTR [ebx-0x17],0x85745ab8
  407ad4:	mov    al,ds:0xffffc663
  407ad9:	xor    BYTE PTR [esi],dh
  407adb:	std    
  407adc:	mov    al,ds:0x22bff232
  407ae1:	pop    ebp
  407ae2:	push   edi
  407ae3:	stos   DWORD PTR es:[edi],eax
  407ae4:	pop    es
  407ae5:	cwde   
  407ae6:	or     BYTE PTR [ebp-0x3ac5ae],cl
  407aec:	sub    BYTE PTR [ecx-0x30],0x89
  407af0:	sbb    BYTE PTR [edx],0xc6
  407af3:	(bad)  
  407af4:	cli    
  407af5:	push   eax
  407af6:	aas    
  407af7:	call   0x66f7f
  407afc:	je     0x407b60
  407afe:	(bad)  
  407aff:	jne    0x407ac8
  407b01:	stos   DWORD PTR es:[edi],eax
  407b02:	mov    edi,gs
  407b04:	push   ecx
  407b05:	add    al,dh
  407b07:	push   eax
  407b08:	aaa    
  407b09:	jp     0x407ae8
  407b0b:	inc    DWORD PTR [eax+0x69]
  407b0e:	(bad)  
  407b0f:	jne    0x407b4c
  407b11:	imul   edx,eax,0x6a802425
  407b17:	retf   0x3fd4
  407b1a:	fnstenv [esi]
  407b1c:	and    ch,dl
  407b1e:	pop    ecx
  407b1f:	fild   DWORD PTR [ecx+0x59]
  407b22:	inc    edx
  407b23:	retf   0x0
	...
  407b2e:	inc    esi
  407b2f:	lds    ecx,FWORD PTR [ebp-0x7a]
  407b32:	mov    al,BYTE PTR [edi-0x1b]
  407b35:	dec    edi
  407b36:	(bad)  
  407b37:	cld    
  407b38:	lahf   
  407b39:	iret   
  407b3a:	lahf   
  407b3b:	dec    edx
  407b3c:	mov    eax,0x4820e7c7
  407b41:	add    ecx,edi
  407b43:	add    al,0x25
  407b45:	dec    ebx
  407b46:	popf   
  407b47:	dec    edx
  407b48:	nop
  407b49:	iret   
  407b4a:	out    0xd4,eax
  407b4c:	and    DWORD PTR [ebx],eax
  407b4e:	iret   
  407b4f:	jbe    0x407b76
  407b51:	dec    edi
  407b52:	icebp  
  407b53:	scas   eax,DWORD PTR es:[edi]
  407b54:	repnz dec edi
  407b56:	(bad)  
  407b57:	push   edi
  407b58:	inc    esi
  407b59:	aam    0xb8
  407b5b:	dec    edx
  407b5c:	outs   dx,BYTE PTR ds:[esi]
  407b5d:	stos   DWORD PTR es:[edi],eax
  407b5e:	pop    ss
  407b5f:	dec    ebx
  407b60:	push   eax
  407b61:	int3   
  407b62:	cld    
  407b63:	scas   eax,DWORD PTR es:[edi]
  407b64:	fnsave [edi-0x3625b562]
  407b6a:	and    dl,BYTE PTR [ebp+ecx*8+0x2b]
  407b6e:	jae    0x407bef
  407b70:	in     eax,0x7c
  407b72:	adc    bh,BYTE PTR [edx+esi*4+0x4f]
  407b76:	xchg   edx,edi
  407b78:	in     al,0xdb
  407b7a:	in     eax,0x50
  407b7c:	mov    ds:0xa9d470c9,al
  407b81:	fsubr  QWORD PTR [esi+0x57]
  407b84:	xchg   edx,eax
  407b85:	leave  
  407b86:	push   esp
  407b87:	ds ds mov ebx,0x2ee5778d
  407b8e:	inc    esp
  407b8f:	pop    ebx
  407b90:	adc    bh,BYTE PTR [ebp+0x0]
	...
  407b9b:	add    dl,cl
  407b9d:	ja     0x407b3d
  407b9f:	repz cdq 
  407ba1:	push   esi
  407ba2:	or     al,0xef
  407ba4:	mov    edx,0xce610dc2
  407ba9:	ret    0x268c
  407bac:	rcl    esp,cl
  407bae:	stc    
  407baf:	mov    esi,0x168cc2e7
  407bb4:	repz shl esi,cl
  407bb7:	imul   eax,esi,0x534c787c
  407bbd:	mov    al,BYTE PTR [esi]
  407bbf:	mov    ch,0xec
  407bc1:	(bad)  
  407bc2:	xor    ah,al
  407bc4:	mov    BYTE PTR [esi],ah
  407bc6:	xchg   DWORD PTR [esp+esi*8+0x4f17948],ebp
  407bcd:	inc    edi
  407bce:	xlat   BYTE PTR ds:[ebx]
  407bcf:	jmp    0xea347aa0
  407bd4:	jle    0x407b78
  407bd6:	mov    WORD PTR [ebp+0x7d2c4ac4],cs
  407bdc:	mov    ecx,0x97c170c9
  407be1:	jnp    0x407c5b
  407be3:	out    0x4c,eax
  407be5:	int3   
  407be6:	xor    al,0xee
  407be8:	mov    dl,0xcd
  407bea:	or     ebp,DWORD PTR [ecx+0x10]
  407bed:	mov    bl,dh
  407bef:	lock adc DWORD PTR [ecx+0x48cb2dca],eax
  407bf6:	or     al,0xc2
  407bf8:	retf   0xe54
  407bfb:	rol    BYTE PTR [eax-0x57],cl
  407bfe:	lds    ebp,FWORD PTR [ebx+0x0]
  407c04:	add    BYTE PTR [eax],al
  407c06:	add    BYTE PTR [eax],al
  407c08:	add    BYTE PTR [eax],al
  407c0a:	or     BYTE PTR [ecx+0x58],0x62
  407c0e:	mov    al,ds:0xbbc5c7fd
  407c13:	cld    
  407c14:	xor    BYTE PTR [eax-0x55],cl
  407c17:	mov    esi,0x6e10e90c
  407c1c:	(bad)  
  407c1d:	aam    0x39
  407c1f:	mov    ch,0x4d
  407c21:	jmp    0x464ff2
  407c26:	mov    ch,0x81
  407c28:	or     DWORD PTR [ebx-0x9],0x29750c83
  407c2f:	ins    BYTE PTR es:[edi],dx
  407c30:	int3   
  407c31:	pop    ebx
  407c32:	outs   dx,DWORD PTR ds:[esi]
  407c33:	inc    ebx
  407c34:	add    al,0x0
  407c36:	mov    ebp,0x7a45cb1a
  407c3b:	jl     0x407c49
  407c3d:	add    BYTE PTR [esi],ah
  407c3f:	ror    BYTE PTR [ecx-0x8],cl
  407c42:	push   esi
  407c43:	cmp    BYTE PTR [ecx+0x8],bh
  407c46:	sbb    al,0x7d
  407c48:	repz adc eax,0x4d8c57
  407c4e:	in     eax,dx
  407c4f:	cmp    al,0x78
  407c51:	pop    ebx
  407c52:	mov    fs,WORD PTR ds:0xcbf600d7
  407c58:	fmul   QWORD PTR [ebp+0x6a5c392b]
  407c5e:	push   es
  407c5f:	xchg   ebx,eax
  407c60:	repz adc eax,0x4d8b73
  407c66:	mov    ebp,0xe929783c
  407c6b:	mov    eax,ebp
  407c6d:	add    DWORD PTR [eax],eax
	...
  407c77:	add    BYTE PTR [esi+0x3bff0c7c],ah
  407c7d:	xor    eax,0x407e4583
  407c82:	jns    0x407c80
  407c84:	xor    DWORD PTR [edi+0x480383e0],edi
  407c8a:	repz jae 0x407c3c
  407c8d:	or     DWORD PTR [ecx-0x10],ecx
  407c90:	je     0x407d0e
  407c92:	or     al,0x0
  407c94:	popf   
  407c95:	dec    eax
  407c96:	retf   0x3645
  407c99:	or     DWORD PTR [eax+eax*1],0x66
  407c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c9e:	or     al,0x6a
  407ca0:	jbe    0x407c48
  407ca2:	sbb    al,0x8d
  407ca4:	stos   DWORD PTR es:[edi],eax
  407ca5:	pop    edi
  407ca6:	pop    esp
  407ca7:	push   0xffffffcf
  407ca9:	push   esi
  407caa:	retf   0x5b75
  407cad:	stc    
  407cae:	cld    
  407caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cb0:	xchg   esp,eax
  407cb1:	xchg   edi,eax
  407cb2:	or     BYTE PTR [ebx],cl
  407cb4:	rsqrtps xmm1,XMMWORD PTR [eax]
  407cb7:	inc    ebx
  407cb8:	dec    esp
  407cb9:	push   ebx
  407cba:	ret    
  407cbb:	add    BYTE PTR [ebx+0x2375ca5e],bh
  407cc1:	scas   al,BYTE PTR es:[edi]
  407cc2:	cmc    
  407cc3:	fcmove st,st(7)
  407cc5:	push   esi
  407cc6:	jbe    0x407c8b
  407cc8:	je     0x407c69
  407cca:	into   
  407ccb:	or     bh,cl
  407ccd:	adc    esi,DWORD PTR [esi-0x14]
  407cd0:	or     BYTE PTR [ebx],cl
  407cd2:	mul    edi
  407cd4:	enter  0x89d,0x0
  407cd8:	(bad)  
  407cd9:	out    0xd6,al
  407cdb:	inc    ecx
	...
  407ce4:	add    BYTE PTR [eax],al
  407ce6:	call   FWORD PTR [eax-0x1517af35]
  407cec:	test   BYTE PTR [edi-0x9],0x51
  407cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cf1:	add    bh,cl
  407cf3:	push   cs
  407cf4:	mov    al,0xc2
  407cf6:	retf   
  407cf7:	push   esi
  407cf8:	cmp    al,0x8b
  407cfa:	mov    ebx,0x1cfcccda
  407cff:	fiadd  DWORD PTR [ebp+0x8]
  407d02:	iret   
  407d03:	ret    
  407d04:	repnz sub cl,BYTE PTR [edi-0x283d500e]
  407d0b:	pop    eax
  407d0c:	push   ss
  407d0d:	(bad)  ds:0x25005559
  407d13:	pop    ecx
  407d14:	push   ebp
  407d15:	add    BYTE PTR [eax+0x2fef4ac],dl
  407d1b:	push   ecx
  407d1c:	push   ebp
  407d1d:	add    ch,dh
  407d1f:	pop    eax
  407d20:	xlat   BYTE PTR ds:[ebx]
  407d21:	ss xchg esp,eax
  407d23:	pop    ecx
  407d24:	ud2    
  407d26:	(bad)  
  407d27:	lea    ebx,[ecx+ecx*4]
  407d2a:	adc    al,BYTE PTR [eax+0x43dac6a9]
  407d30:	popf   
  407d31:	int    0x68
  407d33:	inc    edi
  407d34:	call   0x277a:0xc8cc10fa
  407d3b:	(bad)  
  407d3d:	pop    ecx
  407d3e:	iret   
  407d3f:	inc    esi
  407d40:	clc    
  407d41:	(bad)  
  407d42:	pushf  
  407d43:	inc    esi
  407d44:	lock div DWORD PTR [ecx]
  407d47:	int    0xed
  407d49:	pop    ecx
	...
  407d52:	add    BYTE PTR [eax],al
  407d54:	iret   
  407d55:	fxam   
  407d57:	fcmovnbe st,st(5)
  407d59:	sub    ah,ch
  407d5b:	add    eax,esp
  407d5d:	aas    
  407d5e:	sar    bl,1
  407d60:	jge    0x407db9
  407d62:	popf   
  407d63:	(bad)  
  407d64:	or     BYTE PTR [edi+0x1e],al
  407d67:	stos   DWORD PTR es:[edi],eax
  407d68:	push   esp
  407d69:	inc    ebx
  407d6a:	scas   al,BYTE PTR es:[edi]
  407d6b:	mov    esp,0x30e5780d
  407d70:	inc    esp
  407d71:	push   esp
  407d72:	iret   
  407d73:	(bad)  
  407d74:	call   0x491c7b45
  407d79:	inc    edi
  407d7a:	adc    al,dh
  407d7c:	push   es
  407d7d:	inc    edx
  407d7e:	loope  0x407d83
  407d80:	jp     0x407d7c
  407d82:	lock or DWORD PTR [edx+0x74],0x2c94fe5
  407d8a:	jo     0x407d87
  407d8c:	mov    eax,0x8f1ae3cb
  407d91:	cmp    BYTE PTR [edi],ah
  407d93:	sti    
  407d94:	test   al,0xd8
  407d96:	in     eax,0xc4
  407d98:	sbb    dh,BYTE PTR [edx+edx*8+0x4f]
  407d9c:	(bad)  
  407d9d:	push   edi
  407d9e:	mov    ds:0xee7fcfa9,eax
  407da3:	ret    
  407da4:	add    esi,DWORD PTR [eax-0x6c]
  407da7:	push   edi
  407da8:	rol    DWORD PTR [esi+0x38],cl
  407dab:	clc    
  407dac:	jns    0x407d7a
  407dae:	or     al,0xe1
  407db0:	xchg   esp,eax
  407db1:	mov    dh,0xf3
  407db3:	scas   al,BYTE PTR es:[edi]
  407db4:	xchg   edx,eax
  407db5:	pop    edx
  407db6:	adc    al,0x72
	...
  407dc0:	add    BYTE PTR [eax],al
  407dc2:	mov    al,ds:0x7b394c73
  407dc7:	int3   
  407dc8:	jecxz  0x407d60
  407dca:	mov    ch,BYTE PTR [edi-0x49b8eb0d]
  407dd0:	repz cld 
  407dd2:	inc    esp
  407dd3:	pop    esi
  407dd4:	xchg   ebx,eax
  407dd5:	mov    ss,WORD PTR [edx]
  407dd7:	inc    esi
  407dd8:	push   esp
  407dd9:	mov    al,ds:0x140c770d
  407dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ddf:	push   ebx
  407de0:	pop    edx
  407de1:	mov    esi,0xf17102df
  407de6:	int3   
  407de7:	int3   
  407de8:	add    eax,0x53aa0b02
  407ded:	scas   eax,DWORD PTR es:[edi]
  407dee:	inc    ebp
  407def:	inc    ecx
  407df0:	add    al,0xe9
  407df2:	xchg   DWORD PTR [eax+eax*1+0x77ff36a],edi
  407df9:	sub    DWORD PTR [edi-0x49d6d888],ebx
  407dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e00:	push   edx
  407e01:	xor    BYTE PTR ds:0xb0720c77,cl
  407e07:	jae    0x407d90
  407e09:	pushf  
  407e0a:	aam    0xf8
  407e0c:	icebp  
  407e0d:	add    dl,BYTE PTR [esi]
  407e0f:	fiadd  WORD PTR [edi+0x3c444cef]
  407e15:	jnp    0x407dcd
  407e17:	(bad)
  407e1a:	add    edi,DWORD PTR [ebx-0x74]
  407e1d:	std    
  407e1e:	mov    esp,0x88692158
  407e23:	mov    edi,0xec7e
	...
  407e30:	dec    esp
  407e31:	inc    esp
  407e32:	dec    edx
  407e33:	pop    esi
  407e34:	xchg   ebx,eax
  407e35:	(bad)
  407e38:	push   ebx
  407e39:	cmp    al,0x6
  407e3b:	add    BYTE PTR [ebp+0x7fc7358],bl
  407e41:	mov    dl,0x1
  407e43:	cmp    BYTE PTR [edx],0xa3
  407e46:	jnp    0x407e50
  407e48:	imul   BYTE PTR [ebp*2-0x19b8cd80]
  407e4f:	or     DWORD PTR [ebp+0x41],edi
  407e52:	push   edi
  407e53:	pop    edi
  407e54:	cwde   
  407e55:	or     dh,cl
  407e57:	or     BYTE PTR [esi],dh
  407e59:	jge    0x407e97
  407e5b:	jb     0x407e9b
  407e5d:	jge    0x407e94
  407e5f:	ja     0x407e93
  407e61:	ins    DWORD PTR es:[edi],dx
  407e62:	cmp    al,0xeb
  407e64:	add    edi,DWORD PTR [ebp+0x4d]
  407e67:	jb     0x407e95
  407e69:	jge    0x407eb5
  407e6b:	ja     0x407e9d
  407e6d:	ins    DWORD PTR es:[edi],dx
  407e6e:	dec    ebp
  407e6f:	add    al,0x1c
  407e71:	sub    BYTE PTR [ebx],bl
  407e73:	cmp    al,0x7
  407e75:	scas   eax,DWORD PTR es:[edi]
  407e76:	push   es
  407e77:	cmp    al,0x10
  407e79:	mov    ah,0xa
  407e7b:	sub    al,0x17
  407e7d:	inc    ebp
  407e7e:	add    eax,0xcc67ffeb
  407e83:	pop    ebx
  407e84:	pop    ecx
  407e85:	fwait
  407e86:	(bad)
  407e89:	or     ah,0xe0
  407e8c:	repnz inc esi
  407e8e:	iret   
  407e8f:	stos   BYTE PTR es:[edi],al
  407e90:	sbb    eax,0xc68f88
	...
  407e9d:	add    ah,ah
  407e9f:	inc    edi
  407ea0:	(bad)  
  407ea1:	jne    0x407eda
  407ea3:	stc    
  407ea4:	or     al,0x0
  407ea6:	mov    dh,0x80
  407ea8:	push   edi
  407ea9:	pop    edi
  407eaa:	pop    eax
  407eab:	or     esi,ecx
  407ead:	or     BYTE PTR [esi+0x3e505f93],ah
  407eb3:	test   al,0x13
  407eb5:	sub    dh,dh
  407eb7:	jnp    0x407ead
  407eb9:	jb     0x407e62
  407ebb:	cmp    eax,0x57cfbbf3
  407ec0:	str    edi
  407ec3:	cmc    
  407ec4:	popf   
  407ec5:	dec    ebp
  407ec6:	push   cs
  407ec7:	push   edi
  407ec8:	and    DWORD PTR [ecx],eax
  407eca:	and    BYTE PTR [edi],ch
  407ecc:	dec    esi
  407ecd:	std    
  407ece:	jo     0x407edd
  407ed0:	jmp    0x407ea9
  407ed2:	imul   ecx,DWORD PTR [ecx-0x31],0xffffffb9
  407ed6:	pusha  
  407ed7:	sbb    eax,0xb45dffcf
  407edc:	lock push es
  407ede:	(bad)  
  407ee0:	add    bl,0xa4
  407ee3:	xchg   ebp,eax
  407ee4:	retf   
  407ee5:	push   ebp
  407ee6:	push   esp
  407ee7:	jmp    0x5858:0x693fc48a
  407eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eef:	outs   dx,DWORD PTR ds:[esi]
  407ef0:	loop   0x407f31
  407ef2:	iret   
  407ef3:	into   
  407ef4:	cmp    al,BYTE PTR [ecx]
  407ef6:	or     al,0xdd
  407ef8:	mov    edi,DWORD PTR ds:0x48114a
  407efe:	iret   
  407eff:	and    bl,BYTE PTR [ecx]
  407f01:	add    DWORD PTR [eax],0x0
	...
  407f0c:	retf   0x43cb
  407f0f:	inc    ecx
  407f10:	iret   
  407f11:	push   esi
  407f12:	cmp    ecx,DWORD PTR [ecx]
  407f14:	dec    esp
  407f15:	inc    ebx
  407f16:	nop
  407f17:	dec    ebx
  407f18:	mov    ss,WORD PTR [esi+0xf]
  407f1b:	jne    0x407eef
  407f1d:	or     eax,0xe399165b
  407f23:	(bad)  
  407f25:	test   edi,0x55dbcf00
  407f2b:	cld    
  407f2c:	sbb    eax,0xc05006ff
  407f31:	and    al,0x9c
  407f33:	dec    ebx
  407f34:	push   cs
  407f35:	pop    ecx
  407f36:	add    al,al
  407f38:	rcl    ah,0x98
  407f3b:	add    bh,cl
  407f3d:	pop    eax
  407f3e:	mov    BYTE PTR [ebp-0x59],0x80
  407f42:	in     eax,0x3
  407f44:	iret   
  407f45:	jg     0x407fa7
  407f47:	dec    eax
  407f48:	xchg   edi,eax
  407f49:	mov    al,0x4f
  407f4b:	add    al,0xf5
  407f4d:	jg     0x407f9e
  407f4f:	add    eax,0xc2c9cd80
  407f54:	loop   0x407f42
  407f56:	cmp    eax,0xa576cf45
  407f5b:	cmp    ch,dh
  407f5d:	push   edi
  407f5e:	sti    
  407f5f:	fmul   st(7),st
  407f61:	jg     0x407fc9
  407f63:	mov    ebx,0x8705ccd5
  407f68:	rol    BYTE PTR [edi-0x1b],cl
  407f6b:	aaa    
  407f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f6d:	inc    edx
  407f6e:	sbb    BYTE PTR [eax+eax*1+0x0],bh
  407f75:	add    BYTE PTR [eax],al
  407f77:	add    BYTE PTR [eax],al
  407f79:	add    BYTE PTR [edi],dh
  407f7b:	push   esp
  407f7c:	cwde   
  407f7d:	ret    0xf938
  407f80:	daa    
  407f81:	mov    eax,0x537dbd42
  407f86:	sub    ch,cl
  407f88:	jge    0x407f4c
  407f8a:	call   0x51cd:0x1804df4b
  407f91:	ret    0xecba
  407f94:	lods   eax,DWORD PTR ds:[esi]
  407f95:	inc    esp
  407f96:	iret   
  407f97:	jbe    0x407fbe
  407f99:	aaa    
  407f9a:	mov    cl,0xf6
  407f9c:	lahf   
  407f9d:	mov    bh,0x44
  407f9f:	jo     0x408001
  407fa1:	dec    eax
  407fa2:	jmp    FWORD PTR [edi-0x173d3d69]
  407fa8:	lods   eax,DWORD PTR ds:[esi]
  407fa9:	inc    esp
  407faa:	iret   
  407fab:	jbe    0x407fd2
  407fad:	aaa    
  407fae:	mov    ch,0xd7
  407fb0:	fs push eax
  407fb2:	mov    ?,WORD PTR [edi+0x1a]
  407fb5:	cmp    BYTE PTR [edi-0x30250ea9],bh
  407fbb:	jg     0x407fbb
  407fbd:	ret    
  407fbe:	inc    edx
  407fbf:	and    DWORD PTR [esi+0xc503ac2],0xc27e101
  407fc9:	jmp    0xd2394c5b
  407fce:	push   edx
  407fcf:	push   esp
  407fd0:	repz fimul WORD PTR [esi+0x10c1f0cc]
  407fd7:	sub    BYTE PTR [ecx+ebp*8],cl
  407fda:	push   ebx
  407fdb:	ds push edi
  407fdd:	mov    al,0x0
	...
  407fe7:	add    BYTE PTR [edx+0x4ccd87ac],dl
  407fed:	cmp    ecx,esp
  407fef:	mov    bh,0x8e
  407ff1:	inc    edx
  407ff2:	pop    edi
  407ff3:	sbb    DWORD PTR [ebx],eax
  407ff5:	fmul   DWORD PTR [edx+edx*8+0xc]
  407ff9:	xor    ah,0x1b
  407ffc:	int3   
  407ffd:	ds repz push 0x48
  408001:	scas   eax,DWORD PTR es:[edi]
  408002:	inc    edi
  408003:	sub    bl,cl
  408005:	jg     0x40807f
  408007:	loop   0x40805c
  408009:	test   BYTE PTR [ecx+0x32],bl
  40800c:	mov    WORD PTR [edi+0xc],?
  40800f:	std    
  408010:	ret    0x30fe
  408013:	pop    esp
  408014:	xchg   edx,eax
  408015:	ror    BYTE PTR [ecx+ebp*8],0xe0
  408019:	js     0x407faa
  40801b:	sbb    al,0x3c
  40801d:	mov    dh,0x4d
  40801f:	jmp    0x24a4cf0
  408024:	or     esp,DWORD PTR [esi+0x24ea2ac5]
  40802a:	repz aam 0x9d
  40802d:	mov    dh,0x4d
  40802f:	jmp    0x27393c89
  408034:	dec    eax
  408035:	xor    esi,edx
  408037:	es push cs
  408039:	xchg   edi,eax
  40803a:	or     eax,0xcd5cce9
  40803f:	adc    edx,0x57
  408042:	jg     0x408075
  408044:	retf   
  408045:	jg     0x407fd6
  408047:	add    dh,cl
  408049:	add    eax,DWORD PTR ds:[eax+eax*1+0x0]
  408051:	add    BYTE PTR [eax],al
  408053:	add    BYTE PTR [eax],al
  408055:	add    BYTE PTR [eax+0x2f000c7e],dl
  40805b:	stc    
  40805c:	ret    
  40805d:	(bad)  
  40805e:	mov    cl,0x40
  408060:	add    DWORD PTR [ebp-0xcc09e],0xc8b93ed6
  40806a:	mov    al,ds:0xbee8f340
  40806f:	and    ecx,DWORD PTR [eax+eax*1]
  408072:	jge    0x4080b1
  408074:	add    eax,DWORD PTR [ebp+esi*1+0xe000c7d]
  40807b:	mov    BYTE PTR [ecx+0x41],al
  40807e:	jbe    0x408072
  408080:	mov    al,dh
  408082:	xor    BYTE PTR [eax-0xd],al
  408085:	push   eax
  408086:	lods   al,BYTE PTR ds:[esi]
  408088:	aad    0x0
  40808a:	ss je  0x408059
  40808d:	rsm    
  40808f:	cmp    ecx,DWORD PTR [eax+eax*1]
  408092:	cmp    BYTE PTR es:[ecx-0xcc04f3c],cl
  408099:	add    BYTE PTR [esi],dh
  40809b:	jge    0x4080a9
  40809d:	lea    ebp,[ebx-0x4e000dc8]
  4080a3:	lods   al,BYTE PTR ds:[esi]
  4080a4:	repz mov ch,0xda
  4080a7:	notrack repz jmp DWORD PTR [ecx+0x374b5969]
  4080af:	jge    0x408038
  4080b1:	xchg   ebp,eax
  4080b2:	stos   BYTE PTR es:[edi],al
  4080b3:	ds repz (bad) 
  4080b6:	std    
  4080b7:	cmp    al,0x3
  4080b9:	test   BYTE PTR [eax],al
	...
  4080c3:	add    BYTE PTR [esi+0x7c],bh
  4080c6:	or     al,0x0
  4080c8:	(bad)  [ecx-0x1094f008]
  4080ce:	or     eax,DWORD PTR [eax]
  4080d0:	out    0x3f,al
  4080d2:	mov    ecx,0xcc68cfd4
  4080d7:	push   DWORD PTR ds:0xcf002757
  4080dd:	push   esi
  4080de:	or     eax,ebp
  4080e0:	mov    eax,0xd4000f69
  4080e5:	xchg   esi,eax
  4080e6:	cmp    edi,DWORD PTR [ecx+0x56]
  4080e9:	sbb    esi,DWORD PTR [edi+0x585b128d]
  4080ef:	push   0xd57a4
  4080f4:	mov    BYTE PTR [ebx-0x5c250050],ah
  4080fa:	inc    edi
  4080fb:	inc    ecx
  4080fc:	iret   
  4080fd:	dec    ebp
  4080fe:	iret   
  4080ff:	je     0x408118
  408101:	add    dh,BYTE PTR ds:0x982368fc
  408107:	dec    ebx
  408108:	push   cs
  408109:	push   edi
  40810a:	push   es
  40810b:	shl    bl,0x5f
  40810e:	dec    esi
  40810f:	(bad)  
  408110:	dec    edx
  408111:	push   ss
  408112:	mov    dl,0xff
  408114:	dec    eax
  408115:	push   esi
  408116:	str    edi
  408119:	mov    ds:0xf939c085,eax
  40811e:	mov    dl,0x50
  408120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408121:	add    DWORD PTR [edi],ecx
  408123:	bswap  edi
  408125:	(bad)  
  408126:	xchg   esi,eax
  408127:	fadd   DWORD PTR [eax]
	...
  408131:	add    bh,cl
  408133:	push   esi
  408134:	push   es
  408135:	shl    BYTE PTR [edx+0xfbd8e43],0xa0
  40813c:	mov    bl,0xff
  40813e:	iret   
  40813f:	and    al,BYTE PTR [ebx]
  408141:	(bad)  
  408142:	cmp    dl,BYTE PTR [esi-0x3707004e]
  408148:	add    eax,0xf1787cf
  40814d:	jmp    0x4080eb
  40814f:	mov    ebp,0x925aff16
  408154:	mov    al,ds:0xe57f01f0
  408159:	add    edx,eax
  40815b:	leave  
  40815c:	sub    eax,0xe556b7ac
  408161:	add    esi,DWORD PTR [eax+ecx*4+0x28b73902]
  408168:	sub    edx,esi
  40816a:	iret   
  40816b:	jg     0x4081cd
  40816d:	mov    DWORD PTR [ebx-0x4105c2],ebx
  408173:	ds cmp ah,cl
  408176:	cdq    
  408177:	aas    
  408178:	jmp    0x7603:0xe55721ab
  40817f:	test   edx,ebx
  408181:	mov    esi,0xcb983f80
  408186:	jns    0x4081c7
  408188:	retf   0x33ab
  40818b:	push   esi
  40818c:	in     eax,0x3
  40818e:	push   esp
  40818f:	inc    ebx
  408190:	push   ds
  408191:	int    0x8c
  408193:	aad    0x6e
  408195:	scas   eax,DWORD PTR es:[edi]
	...
  40819e:	add    BYTE PTR [eax],al
  4081a0:	dec    esp
  4081a1:	inc    esp
  4081a2:	cdq    
  4081a3:	push   ebx
  4081a4:	cld    
  4081a5:	shl    BYTE PTR [edi],1
  4081a7:	push   edi
  4081a8:	mov    eax,ds:0x5210200a
  4081ad:	or     BYTE PTR [ebp+0x3],ah
  4081b0:	iret   
  4081b1:	jg     0x40822b
  4081b3:	pop    ss
  4081b4:	or     al,BYTE PTR [eax+0xacf03e5]
  4081ba:	popf   
  4081bb:	mov    dl,BYTE PTR [edi]
  4081bd:	inc    ecx
  4081be:	lea    eax,ds:0x8a59c546
  4081c4:	xchg   edx,eax
  4081c5:	xchg   esi,esp
  4081c7:	mov    esp,0x82658711
  4081cc:	in     al,dx
  4081cd:	jle    0x4081dd
  4081cf:	mov    ebx,0x320d3b4c
  4081d4:	rol    DWORD PTR [edx+0x7f8f7b4e],0xc
  4081db:	jmp    0xeb0fecac
  4081e0:	adc    al,0x3f
  4081e2:	dec    ecx
  4081e3:	adc    eax,0x6c34d743
  4081e8:	pop    es
  4081e9:	xor    bl,cl
  4081eb:	out    dx,eax
  4081ec:	retf   
  4081ed:	bound  ecx,QWORD PTR [ecx-0x7a]
  4081f0:	xchg   ecx,eax
  4081f1:	lds    ecx,FWORD PTR [eax]
  4081f3:	jo     0x40821a
  4081f5:	dec    ebp
  4081f6:	jecxz  0x40821e
  4081f8:	adc    cl,BYTE PTR [eax+0x182615f2]
  4081fe:	retf   
  4081ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408200:	enter  0x58b5,0x1b
	...
  40820c:	add    BYTE PTR [eax],al
  40820e:	mov    ebx,0x4acd793e
  408213:	mov    ah,0x4
  408215:	or     BYTE PTR fs:[eax],dh
  408218:	pop    esp
  408219:	shl    eax,0x7f
  40821c:	or     al,0xe9
  40821e:	xor    al,bh
  408220:	pop    es
  408221:	jmp    0x34c801f2
  408226:	mov    ebx,0xfa0fa932
  40822b:	fst    DWORD PTR [ebp+0x42]
  40822e:	repz dec eax
  408230:	into   
  408231:	in     eax,dx
  408232:	int3   
  408233:	aam    0x87
  408235:	test   DWORD PTR [esi+0x43],ecx
  408238:	lock aaa 
  40823a:	mov    ds:0x9d185fcf,al
  40823f:	or     bh,BYTE PTR [ecx-0x13]
  408242:	push   edi
  408243:	mov    esp,0x8f886204
  408248:	test   DWORD PTR [edi+ecx*1],esp
  40824b:	or     cl,BYTE PTR [ebx]
  40824d:	jb     0x4082c1
  40824f:	add    DWORD PTR [edi+0x5b0ad4ae],0xffffffe5
  408256:	push   edi
  408257:	cmp    BYTE PTR [edi],bh
  408259:	push   ebx
  40825a:	out    dx,al
  40825b:	cmp    BYTE PTR [edi],bh
  40825d:	add    BYTE PTR [esi+ecx*1-0x59f1f878],cl
  408264:	data16 xlat BYTE PTR ds:[ebx]
  408266:	cmc    
  408267:	or     ebp,0xffffffc0
  40826a:	icebp  
  40826b:	jle    0x40823c
  40826d:	mov    ebp,DWORD PTR [ebp+0x23f430]
	...
  40827b:	add    dh,ch
  40827d:	cs hlt 
  40827f:	lea    eax,[edx-0x6d]
  408282:	pop    edx
  408283:	mov    bh,0xf1
  408285:	jmp    0x408295
  408287:	push   esi
  408288:	mov    ds:0xb50cce42,al
  40828d:	push   ecx
  40828e:	xchg   eax,edi
  408290:	gs clc 
  408292:	cs cli 
  408294:	push   ebp
  408295:	clc    
  408296:	or     BYTE PTR [ecx+ebx*4-0x2ddf83a8],0x7e
  40829e:	inc    edx
  40829f:	or     BYTE PTR [edi],dh
  4082a1:	inc    edx
  4082a2:	sbb    eax,0xf6082c03
  4082a7:	xor    ecx,DWORD PTR [esi-0x71cc0be0]
  4082ad:	push   cs
  4082ae:	nop
  4082af:	pop    ds
  4082b0:	mov    BYTE PTR [ebx-0x4f],cl
  4082b3:	shl    DWORD PTR [ebp-0x25],0x0
  4082b7:	shl    DWORD PTR ds:0xbdd90f93,0xf9
  4082be:	ds cli 
  4082c0:	adc    eax,0x9bfa3ef8
  4082c5:	add    al,0xb
  4082c7:	scas   eax,DWORD PTR es:[edi]
  4082c8:	cmp    DWORD PTR [ebp-0x7],edi
  4082cb:	add    esi,eax
  4082cd:	xchg   ebx,eax
  4082ce:	int    0xc0
  4082d0:	xor    DWORD PTR [eax+0x2f9d8bcf],eax
  4082d6:	hlt    
  4082d7:	and    ebp,DWORD PTR [esi-0x7d720bd1]
  4082dd:	xchg   ebx,eax
  4082de:	mov    BYTE PTR es:[eax],0x0
	...
  4082ea:	iret   
  4082eb:	lods   eax,DWORD PTR ds:[esi]
  4082ec:	dec    eax
  4082ed:	add    esp,DWORD PTR [ecx-0x3c3d31ce]
  4082f3:	sub    edi,ebx
  4082f5:	mov    esp,edi
  4082f7:	cmp    DWORD PTR [ebx+eiz*1-0x724bc61b],esi
  4082fe:	dec    ebx
  4082ff:	pop    esi
  408300:	sbb    al,0x46
  408302:	lahf   
  408303:	into   
  408304:	or     al,0x4e
  408306:	out    0x67,eax
  408308:	into   
  408309:	adc    esp,ecx
  40830b:	pusha  
  40830c:	test   dl,bh
  40830e:	cld    
  40830f:	mov    gs,esp
  408311:	clc    
  408312:	cld    
  408313:	jle    0x408297
  408315:	pushf  
  408316:	enter  0x9a27,0x46
  40831a:	mov    ds:0x8e1c5129,al
  40831f:	imul   ebx,DWORD PTR [ecx],0xb1b17603
  408325:	xor    eax,DWORD PTR [ebp-0x7acc4c77]
  40832b:	mov    ds:0xae97078c,eax
  408330:	mov    BYTE PTR [ecx-0x34],ch
  408333:	ins    BYTE PTR es:[edi],dx
  408334:	call   0xa6612f9
  408339:	ret    
  40833a:	push   esp
  40833b:	icebp  
  40833c:	cli    
  40833d:	clc    
  40833e:	lods   al,BYTE PTR ds:[esi]
  40833f:	out    dx,al
  408340:	cli    
  408341:	clc    
  408342:	inc    edx
  408343:	mov    edx,0x6240af1f
  408348:	add    DWORD PTR [ebx],0xffffff99
  40834b:	dec    edx
  40834c:	enter  0xc2,0x0
	...
  408358:	retf   
  408359:	sub    edi,ebx
  40835b:	mov    esi,DWORD PTR [edi]
  40835d:	stc    
  40835e:	mov    cl,0x23
  408360:	and    eax,0x538db1f9
  408365:	and    eax,0xad185b78
  40836a:	or     ecx,DWORD PTR [esi-0x19]
  40836d:	jg     0x408393
  40836f:	(bad)
  408372:	aas    
  408373:	pop    DWORD PTR ds:0xf7e75d70
  408379:	outs   dx,DWORD PTR ds:[esi]
  40837a:	pop    ebp
  40837b:	mov    DWORD PTR [ebx-0x64],edx
  40837e:	mov    edx,ebx
  408380:	mov    eax,DWORD PTR [esi]
  408382:	out    0x59,al
  408384:	mov    bl,0x3e
  408386:	es adc cl,ah
  408389:	push   esi
  40838a:	outs   dx,BYTE PTR ds:[esi]
  40838b:	mov    ebp,0xbec6399c
  408390:	cld    
  408391:	xor    eax,0x5dc88060
  408396:	hlt    
  408397:	xchg   ebx,eax
  408398:	and    al,0x7f
  40839a:	stos   DWORD PTR es:[edi],eax
  40839b:	repz pop DWORD PTR [eax-0x1e]
  40839f:	push   es
  4083a0:	mov    WORD PTR [edi],es
  4083a2:	push   cs
  4083a3:	mul    DWORD PTR [edi-0x680902a1]
  4083a9:	or     eax,0xb13c1359
  4083ae:	lea    edi,[eax-0x3ae62e34]
  4083b4:	lea    ecx,[esi+eiz*8+0x163844d3]
  4083bb:	mov    edi,0x0
  4083c0:	add    BYTE PTR [eax],al
  4083c2:	add    BYTE PTR [eax],al
  4083c4:	add    BYTE PTR [eax],al
  4083c6:	lods   al,BYTE PTR ds:[esi]
  4083c7:	xor    eax,0xc5abef6
  4083cc:	loop   0x408357
  4083ce:	or     al,0xb9
  4083d0:	add    DWORD PTR [esi],0x9
  4083d3:	js     0x408379
  4083d5:	les    edi,FWORD PTR [esi+0x458ebf7e]
  4083db:	outs   dx,DWORD PTR ds:[esi]
  4083dc:	lods   eax,DWORD PTR ds:[esi]
  4083dd:	out    0x47,al
  4083df:	outs   dx,DWORD PTR ds:[esi]
  4083e0:	popf   
  4083e1:	mov    BYTE PTR [ebx-0x65],bl
  4083e4:	les    ecx,FWORD PTR [ebx]
  4083e6:	jnp    0x4083b1
  4083e8:	out    0x59,al
  4083ea:	jmp    0x40842c
  4083ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083ed:	adc    esp,ecx
  4083ef:	pop    eax
  4083f0:	or     al,0x62
  4083f2:	pop    ebx
  4083f3:	outs   dx,DWORD PTR ds:[esi]
  4083f4:	test   edx,0x74f56f52
  4083fa:	mov    BYTE PTR [edx+0x31e5046e],al
  408400:	imul   edi,eax
  408403:	aas    
  408404:	int3   
  408405:	in     al,0xc9
  408407:	xchg   DWORD PTR ds:[edx-0x1f],eax
  40840b:	xor    ch,BYTE PTR [edi]
  40840d:	inc    eax
  40840e:	fnstenv ds:0xbfbd5d81
  408414:	mov    edi,0x5a7f0ca9
  408419:	add    DWORD PTR [edx-0x6315fac3],edx
  40841f:	push   es
  408420:	hlt    
  408421:	fidivr DWORD PTR [edx+0x5e]
  408424:	neg    edx
  408426:	je     0x408434
  408428:	xor    dh,0x0
	...
  408433:	add    BYTE PTR [ebx],al
  408435:	(bad)  
  408436:	push   edx
  408437:	(bad)  
  408438:	leave  
  408439:	leave  
  40843a:	and    BYTE PTR [eax],ch
  40843c:	xchg   ebx,eax
  40843d:	mov    DWORD PTR [edi],ecx
  40843f:	and    eax,DWORD PTR [ecx+0x35]
  408442:	aas    
  408443:	loopne 0x4084b7
  408445:	xor    bh,BYTE PTR [edi]
  408447:	jecxz  0x408491
  408449:	sbb    edx,DWORD PTR [ebx]
  40844b:	or     DWORD PTR [esi-0x29151b0f],0x40
  408452:	iret   
  408453:	fst    st(3)
  408455:	pop    eax
  408456:	xchg   eax,eax
  408458:	pop    edx
  408459:	xor    eax,0x3762b32f
  40845e:	and    DWORD PTR [ebp-0x32],0x1ed61cdc
  408465:	jle    0x4084b1
  408467:	cmc    
  408468:	or     eax,0x13ea093f
  40846d:	push   es
  40846e:	neg    edx
  408470:	je     0x4084d0
  408472:	cmc    
  408473:	add    BYTE PTR [ebp-0x5],ah
  408476:	adc    BYTE PTR [ecx+edi*8+0x244418d2],0x83
  40847e:	pop    edx
  40847f:	sub    BYTE PTR [edi+0x41],ah
  408482:	add    eax,0xf40cc603
  408487:	xor    ebp,DWORD PTR [esp-0xa]
  40848b:	xor    ebx,DWORD PTR [esi+0x670f8002]
  408491:	(bad)  [eax+ebx*8-0x3ecf380b]
	...
  4084a0:	add    BYTE PTR [eax],al
  4084a2:	mov    bh,0x85
  4084a4:	bswap  edx
  4084a6:	ins    DWORD PTR es:[edi],dx
  4084a7:	stc    
  4084a8:	ds stc 
  4084aa:	(bad)  
  4084ad:	cli    
  4084ae:	inc    ebx
  4084af:	sbb    BYTE PTR [ebx],dl
  4084b1:	enter  0x52ed,0xeb
  4084b5:	add    eax,DWORD PTR [eax-0x453c3273]
  4084bb:	test   ch,dl
  4084bd:	mov    ecx,edi
  4084bf:	xor    dh,dh
  4084c1:	and    ecx,esp
  4084c3:	xor    dh,ah
  4084c5:	lea    ebp,[edx]
  4084c7:	jg     0x4084b3
  4084c9:	int    0xc7
  4084cb:	sbb    al,0xe
  4084cd:	inc    esi
  4084ce:	fidivr DWORD PTR [esp+ecx*8]
  4084d1:	add    eax,0xfb874475
  4084d6:	aad    0xfb
  4084d8:	cs stc 
  4084da:	aad    0xfa
  4084dc:	adc    BYTE PTR [ecx+ecx*4+0x35370b4f],0x84
  4084e4:	pop    edx
  4084e5:	cmp    BYTE PTR [edi],ah
  4084e7:	inc    ebx
  4084e8:	add    eax,0xf40c3603
  4084ed:	xor    ebp,DWORD PTR [esp-0xa]
  4084f1:	xor    ebp,DWORD PTR [esi+0x2]
  4084f4:	or     BYTE PTR [edi],0xcf
  4084f7:	test   eax,0x263bd50a
  4084fc:	inc    ebp
  4084fd:	or     al,0xe
  4084ff:	call   0xae558808
  408504:	mov    cl,0x33
	...
  40850e:	add    BYTE PTR [eax],al
  408510:	push   ss
  408511:	inc    esi
  408512:	mov    bh,0x33
  408514:	adc    eax,0xfa1f9bdc
  408519:	cmp    dl,BYTE PTR [ecx+0x45]
  40851c:	int3   
  40851d:	clc    
  40851e:	out    dx,al
  40851f:	ror    BYTE PTR [ebx+edi*1],0x8
  408523:	fld    DWORD PTR [eax+edx*8-0x8]
  408527:	cli    
  408528:	lods   al,BYTE PTR ds:[esi]
  408529:	mov    esp,0xa352f8f8
  40852e:	or     al,0x5
  408530:	out    0xc5,al
  408532:	add    cx,WORD PTR [ecx-0x2d3f31ce]
  408539:	and    eax,0x55c48bc8
  40853e:	mov    bh,0x23
  408540:	mov    dh,0x55
  408542:	mov    al,0x8d
  408544:	pop    ebx
  408545:	xor    DWORD PTR [edi+0x882b8a3],esi
  40854b:	push   esi
  40854c:	xlat   BYTE PTR ds:[ebx]
  40854d:	addr16 leave 
  40854f:	or     esp,ecx
  408551:	xchg   esi,eax
  408552:	cmp    al,0xdc
  408555:	sub    al,0xef
  408557:	cli    
  408558:	mov    esp,0xd08c851e
  40855d:	aas    
  40855e:	push   cs
  40855f:	outs   dx,DWORD PTR ds:[esi]
  408560:	lock and eax,0xe78e1c49
  408566:	or     DWORD PTR [ebx],eax
  408568:	xchg   ebp,eax
  408569:	lods   eax,DWORD PTR ds:[esi]
  40856a:	mov    dh,0x33
  40856c:	test   WORD PTR [eax-0x6b5caacd],si
  408573:	pop    ds
	...
  40857c:	add    BYTE PTR [eax],al
  40857e:	inc    ebp
  40857f:	call   0xf44b:0x7fcc8ce6
  408586:	(bad)  
  408588:	stc    
  408589:	add    dl,BYTE PTR [esi]
  40858b:	add    al,0x9c
  40858d:	rep ss ins BYTE PTR es:[edi],dx
  408590:	sahf   
  408591:	mov    DWORD PTR [ebx-0x80],edx
  408594:	daa    
  408595:	std    
  408596:	es cmp dh,ah
  408599:	cmp    eax,0xa53ec3
  40859e:	int3   
  40859f:	cmp    al,0x6e
  4085a1:	mov    ebx,0xbc1636bc
  4085a6:	push   edx
  4085a7:	adc    edi,edx
  4085a9:	test   BYTE PTR [ecx],al
  4085ab:	scas   al,BYTE PTR es:[edi]
  4085ac:	bound  eax,QWORD PTR [ebx]
  4085ae:	cdq    
  4085af:	pop    edi
  4085b0:	and    al,0xc2
  4085b2:	aam    0x7c
  4085b4:	adc    eax,0x4e6be78b
  4085b9:	repz (bad) 
  4085bb:	or     DWORD PTR [ecx+0x7],ebp
  4085be:	lods   eax,DWORD PTR ds:[esi]
  4085bf:	sahf   
  4085c0:	inc    eax
  4085c1:	sub    esp,ecx
  4085c3:	vpinsrw xmm1,xmm4,WORD PTR [esi+0x44c9e690],0x3a
  4085cc:	(bad)  
  4085cd:	mov    ebx,0x985038fc
  4085d2:	enter  0xcd83,0xa0
  4085d6:	mov    ds:0x8ffb9383,al
  4085db:	inc    ebx
  4085dc:	rol    BYTE PTR [edx],cl
  4085de:	jbe    0x4085eb
  4085e0:	cld    
  4085e1:	repnz add BYTE PTR [eax],al
	...
  4085ec:	xchg   BYTE PTR [ebx-0x12],dh
  4085ef:	mov    BYTE PTR [ebx+0x7f],cl
  4085f2:	sub    DWORD PTR [edx+0x3de5dc39],ebp
  4085f8:	retf   
  4085f9:	inc    eax
  4085fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085fb:	dec    ebp
  4085fd:	inc    edx
  4085fe:	jle    0x4085ba
  408600:	pushf  
  408601:	cmp    dh,dh
  408603:	mov    ebx,0xde0c0c4a
  408608:	jecxz  0x408650
  40860a:	shl    BYTE PTR [edx],cl
  40860c:	int3   
  40860d:	int    0x1c
  40860f:	test   al,0xe
  408611:	mov    ecx,DWORD PTR [edi]
  408613:	mov    ecx,0x923f3845
  408618:	cmp    eax,0xd15d8139
  40861d:	lahf   
  40861e:	inc    edi
  40861f:	inc    edx
  408620:	jb     0x4085a5
  408622:	inc    edx
  408623:	fst    QWORD PTR [ebx]
  408625:	inc    ecx
  408626:	sbb    al,0xea
  408628:	push   es
  408629:	or     esi,esi
  40862b:	mov    edx,0x74f57344
  408630:	pop    eax
  408631:	xchg   edi,eax
  408632:	jl     0x4085d1
  408634:	xor    ebp,0x3fe4b70e
  40863a:	iret   
  40863b:	test   ch,0x58
  40863e:	xchg   DWORD PTR [eax-0x23],eax
  408641:	cmp    BYTE PTR [edi],bh
  408643:	inc    edx
  408644:	inc    edi
  408645:	cld    
  408646:	or     ch,BYTE PTR [edi]
  408648:	call   0xcd6c:0xaea241a
  40864f:	sub    DWORD PTR [eax],eax
	...
  408659:	add    al,al
  40865b:	or     edi,0xf5727572
  408661:	fidiv  DWORD PTR [esp+eax*1-0x68]
  408665:	mul    BYTE PTR [esi+0x5e]
  408668:	lods   eax,DWORD PTR ds:[esi]
  408669:	adc    ecx,ebp
  40866b:	(bad)  
  40866c:	int    0x2b
  40866e:	lds    eax,FWORD PTR [edx+0x725462dc]
  408674:	idiv   DWORD PTR [edx-0x97ffbba]
  40867a:	add    DWORD PTR [eax-0x1d],esi
  40867d:	mov    ch,0xce
  40867f:	lds    eax,FWORD PTR [eax]
  408681:	test   al,0x8c
  408683:	(bad)  
  408684:	bt     DWORD PTR [esi+0x39],edx
  408688:	aas    
  408689:	add    BYTE PTR [esi-0x5720bd0],cl
  40868f:	mov    WORD PTR [ecx],cs
  408691:	sbb    eax,0x5e0f7fee
  408696:	push   ds
  408697:	inc    ecx
  408698:	iret   
  408699:	pop    ss
  40869a:	xor    eax,0x15f98759
  40869f:	clc    
  4086a0:	ds sti 
  4086a2:	stos   DWORD PTR es:[edi],eax
  4086a3:	dec    DWORD PTR [edx]
  4086a5:	cmp    DWORD PTR [esi+0x4f],esp
  4086a8:	aad    0x3
  4086aa:	lock pop ds
  4086ac:	int3   
  4086ad:	shl    BYTE PTR [edx],0x7f
  4086b0:	iret   
  4086b1:	mov    ebx,DWORD PTR [ebp+0x7e33f430]
  4086b7:	(bad)  
  4086b8:	xchg   edi,eax
  4086b9:	pop    ss
  4086ba:	xchg   ebx,eax
  4086bb:	sbb    dl,bh
  4086bd:	out    0x0,al
	...
  4086c7:	add    ch,ah
  4086c9:	ret    
  4086ca:	cmp    al,0xc1
  4086cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086cd:	mov    BYTE PTR [edi],cl
  4086cf:	shr    BYTE PTR [ebp-0xd],1
  4086d2:	ds sti 
  4086d4:	in     eax,0xf7
  4086d6:	or     BYTE PTR [ecx+ebp*8-0x65d9007],0x7e
  4086de:	inc    edx
  4086df:	cmp    al,0xf7
  4086e1:	inc    eax
  4086e2:	sbb    al,0x3
  4086e4:	cld    
  4086e5:	push   es
  4086e6:	div    BYTE PTR [ebx]
  4086e8:	out    dx,al
  4086e9:	cs hlt 
  4086eb:	lea    edi,[edx]
  4086ed:	mov    ebp,DWORD PTR [ecx+0x56]
  4086f0:	jmp    0xcf42:0x9e5e0f3f
  4086f7:	pop    ss
  4086f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086f9:	pop    edx
  4086fa:	mov    bl,0xff
  4086fc:	cdq    
  4086fd:	in     al,dx
  4086fe:	repnz xor edi,DWORD PTR [eax+ecx*4-0x9]
  408703:	xor    ebp,DWORD PTR [edi-0x2]
  408706:	xchg   DWORD PTR [edi],eax
  408708:	mov    dl,0x21
  40870a:	and    al,0xf4
  40870c:	iret   
  40870d:	sub    ecx,esi
  40870f:	ror    BYTE PTR [edi+0x20c30c1d],0x3e
  408716:	mov    eax,0xb63a58ff
  40871b:	or     edx,DWORD PTR [edi+0x3a]
  40871e:	mov    ah,0x8d
  408720:	arpl   WORD PTR [esi-0x80],cx
  408723:	push   ebp
  408725:	imul   ecx,DWORD PTR ds:0xcce7db56,0xa
  40872f:	add    BYTE PTR [eax],al
  408731:	add    BYTE PTR [eax],al
  408733:	add    BYTE PTR [eax],al
  408735:	add    ah,cl
  408737:	div    BYTE PTR [edi-0x1]
  40873a:	sub    BYTE PTR [esi],al
  40873c:	mov    eax,0xb5322433
  408741:	xor    edx,DWORD PTR [edi]
  408743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408744:	mov    ecx,DWORD PTR [edi]
  408746:	push   0xccab834a
  40874b:	xchg   esp,eax
  40874c:	lock ror BYTE PTR [esi],0x2e
  408750:	or     al,0xca
  408752:	cmp    dh,dl
  408754:	mov    eax,0xb099f0ff
  408759:	or     esp,esi
  40875b:	cdq    
  40875c:	mov    dh,0x8d
  40875e:	inc    ebx
  40875f:	push   ds
  408760:	neg    BYTE PTR [edi+0x5e0c733c]
  408766:	mov    ebx,0xcc15cc67
  40876b:	(bad)  
  40876c:	js     0x40876d
  40876e:	rcr    BYTE PTR [ebp-0x48],0x33
  408772:	mov    ch,0x31
  408774:	mov    ah,0x33
  408776:	mov    dh,0x9b
  408778:	jae    0x408781
  40877a:	mov    edi,gs
  40877c:	push   ebx
  40877d:	gs int3 
  40877f:	in     al,0xfe
  408781:	ror    BYTE PTR [edi+0x50c30c1c],0x2d
  408788:	mov    edi,0xb5f988ff
  40878d:	or     eax,DWORD PTR [edi+0x4aaf167f]
  408793:	or     edi,edx
  408795:	xchg   ebp,eax
  408796:	add    DWORD PTR [ebx+0x76a],0x0
  40879d:	add    BYTE PTR [eax],al
  40879f:	add    BYTE PTR [eax],al
  4087a1:	add    BYTE PTR [eax],al
  4087a3:	add    BYTE PTR [ecx],al
  4087a5:	test   BYTE PTR [esi+eax*8+0x739580d5],ah
  4087ac:	pop    eax
  4087ad:	xor    al,0xb2
  4087af:	mov    bl,0x9c
  4087b1:	cmp    dh,ch
  4087b3:	lods   eax,DWORD PTR ds:[esi]
  4087b4:	cld    
  4087b5:	aaa    
  4087b6:	push   eax
  4087b7:	adc    al,0xb2
  4087ba:	xchg   ecx,eax
  4087bb:	mov    ds:0xdc238038,eax
  4087c0:	(bad)  
  4087c2:	jmp    0x20b3:0x81f41506
  4087c9:	xor    al,0xb6
  4087cb:	stos   DWORD PTR es:[edi],eax
  4087cc:	les    esi,FWORD PTR [esi]
  4087ce:	mov    dh,0xad
  4087d0:	inc    edx
  4087d1:	adc    ebx,edx
  4087d3:	aam    0xaa
  4087d5:	sti    
  4087d6:	addr16 pop es
  4087d8:	mov    eax,ds:0xe2c7247b
  4087dd:	or     BYTE PTR [ebx+esi*2-0x10],0x33
  4087e2:	pop    edx
  4087e3:	mov    bl,0x9c
  4087e5:	cmp    esi,ebp
  4087e7:	scas   al,BYTE PTR es:[edi]
  4087e8:	pushf  
  4087e9:	ss js  0x408774
  4087ec:	rol    ah,1
  4087ee:	mov    bl,0x5b
  4087f0:	pusha  
  4087f1:	and    BYTE PTR [ebx-0x14bf701d],0x6
  4087f8:	mov    ebx,?
  4087fa:	sub    DWORD PTR [ebx-0x5329cc48],esi
  408800:	les    esi,FWORD PTR [edi]
  408802:	(bad)  
  408803:	scas   al,BYTE PTR es:[edi]
  408804:	pop    edx
  408805:	or     al,0xfa
  408807:	mov    ds:0x0,eax
  40880c:	add    BYTE PTR [eax],al
  40880e:	add    BYTE PTR [eax],al
  408810:	add    BYTE PTR [eax],al
  408812:	test   eax,0x1070b64
  408817:	je     0x40883d
  408819:	mov    ch,0x7e
  40881c:	or     al,0x19
  40881e:	cld    
  40881f:	xor    dh,bl
  408821:	out    dx,al
  408822:	cmp    eax,0x2af2f76f
  408827:	outs   dx,DWORD PTR ds:[esi]
  408828:	hlt    
  408829:	ins    BYTE PTR es:[edi],dx
  40882a:	lock sbb BYTE PTR [eax],0x2a
  40882e:	rcr    dh,cl
  408830:	push   cs
  408831:	pop    ds
  408832:	rol    DWORD PTR [eax-0x33],cl
  408835:	not    cl
  408837:	inc    ebp
  408838:	mov    bl,0xbe
  40883a:	sbb    eax,0x74faf333
  40883f:	xchg   ebp,esi
  408841:	cli    
  408842:	jb     0x408849
  408844:	nop
  408845:	push   es
  408846:	mov    dl,0x90
  408848:	add    al,0x2f
  40884a:	enter  0x38d1,0xa8
  40884e:	adc    DWORD PTR [ebp+0x329db00f],ecx
  408854:	xrelease xchg BYTE PTR [ebp+0x6f],bl
  408858:	div    dl
  40885a:	popa   
  40885b:	outs   dx,DWORD PTR ds:[esi]
  40885c:	cmc    
  40885d:	fs push eax
  40885f:	jnp    0x4087ef
  408861:	out    dx,eax
  408862:	cdq    
  408863:	sub    cl,BYTE PTR [edi]
  408865:	scas   eax,DWORD PTR es:[edi]
  408866:	fadd   QWORD PTR [eax-0x34]
  408869:	out    0xc9,eax
  40886b:	ds mov bl,0x56
  40886e:	sbb    eax,0x321af333
  408873:	xchg   esp,esi
  408875:	cli    
	...
  40887e:	add    BYTE PTR [eax],al
  408880:	sub    DWORD PTR ds:0x30d7d698,eax
  408886:	ss je  0x40885a
  408889:	leave  
  40888a:	and    BYTE PTR [eax],ch
  40888c:	mov    al,BYTE PTR [ebp+0x333d390f]
  408892:	repz push ds
  408894:	jge    0x408904
  408896:	mul    edx
  408898:	jp     0x408908
  40889a:	hlt    
  40889b:	pop    esp
  40889c:	and    BYTE PTR [ebx+0x55b400b7],al
  4088a2:	add    esp,DWORD PTR es:[eax+0x36]
  4088a6:	int3   
  4088a7:	shl    DWORD PTR [ecx+0x79],0xc6
  4088ab:	mov    edi,0xfff2f071
  4088b0:	aad    0xe3
  4088b2:	push   es
  4088b3:	stc    
  4088b4:	aad    0xe1
  4088b6:	sbb    BYTE PTR [ecx+eiz*2-0x727920f3],0x7c
  4088be:	push   edx
  4088bf:	and    al,0x27
  4088c1:	cmp    al,0x19
  4088c3:	add    ebp,DWORD PTR [edi]
  4088c5:	mov    ah,0x71
  4088c7:	or     BYTE PTR [edi],dh
  4088c9:	xchg   DWORD PTR ds:0x437d2a5f,ecx
  4088cf:	or     BYTE PTR [edi],ah
  4088d1:	xlat   BYTE PTR ds:[ebx]
  4088d2:	add    bh,bh
  4088d4:	jecxz  0x4088c5
  4088d6:	xor    BYTE PTR [esi-0xa],0x80
  4088da:	test   DWORD PTR [edi],ecx
  4088dc:	cmp    al,0xf0
  4088de:	repnz pop edx
  4088e0:	out    dx,eax
  4088e1:	les    edx,FWORD PTR [edi+ebx*2+0x0]
	...
  4088ed:	add    BYTE PTR [eax-0x9f3320a],dh
  4088f3:	enter  0xec87,0x75
  4088f7:	inc    edi
  4088f8:	hlt    
  4088f9:	push   edi
  4088fa:	cmp    bl,cl
  4088fc:	retf   
  4088fd:	inc    ebp
  4088fe:	xchg   edx,eax
  4088ff:	jnp    0x40890d
  408901:	add    dh,dh
  408903:	out    dx,al
  408904:	js     0x408912
  408906:	cmp    DWORD PTR [edx-0x4214380c],0x7ce64181
  408910:	das    
  408911:	inc    ebp
  408912:	cdq    
  408913:	dec    eax
  408914:	or     DWORD PTR [ebx+eiz*1-0x43],eax
  408918:	or     al,0x89
  40891a:	sbb    eax,0xabc7e2f1
  40891f:	jne    0x4088a2
  408921:	inc    ecx
  408922:	iret   
  408923:	es mov ebp,0xc5af65dc
  408929:	add    eax,0x4fac0b
  40892e:	sbb    DWORD PTR [ebx],ecx
  408930:	stc    
  408931:	seto   BYTE PTR [edi+ebx*2]
  408935:	lea    ecx,[esi]
  408937:	daa    
  408938:	mov    edi,0x8fe69de1
  40893d:	sbb    al,0x44
  40893f:	pop    esp
  408940:	lock add dl,BYTE PTR [edx]
  408943:	dec    ebx
  408944:	adc    DWORD PTR [eax-0x9],eax
  408947:	push   0x73
  408949:	inc    ecx
  40894a:	iret   
  40894b:	xchg   esi,eax
  40894c:	nop
  40894d:	inc    eax
  40894e:	push   0xfffffff2
  408950:	mov    ebx,0x83
  408955:	add    BYTE PTR [eax],al
  408957:	add    BYTE PTR [eax],al
  408959:	add    BYTE PTR [eax],al
  40895b:	add    BYTE PTR [edx+0x13e84eea],dl
  408961:	daa    
  408962:	str    WORD PTR [esp+ecx*4-0x60]
  408967:	inc    eax
  408968:	mov    esp,0x275d6ff0
  40896d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40896e:	enter  0x5440,0x5c
  408972:	lock add dl,BYTE PTR [edx+0x7b6857fa]
  408979:	mov    ds:0xfe9f004e,eax
  40897e:	add    eax,0xea200e5
  408983:	pop    ebp
  408984:	sti    
  408985:	pusha  
  408986:	mov    BYTE PTR [edx+eax*2-0x18],dl
  40898a:	push   cs
  40898b:	or     BYTE PTR [esi+edi*4-0xc],0x75
  408990:	les    esp,FWORD PTR [ebp+0x2c630890]
  408996:	(bad)  
  408997:	mov    ds:0x4ea43b,eax
  40899c:	iret   
  40899d:	in     eax,0x26
  40899f:	div    BYTE PTR [edi-0x30fff063]
  4089a5:	jg     0x408a15
  4089a7:	mov    ebx,0x9c1230b0
  4089ac:	int    0xab
  4089ae:	out    dx,eax
  4089af:	sub    DWORD PTR [ebx+eax*1+0x50],0x42
  4089b4:	iret   
  4089b5:	jg     0x40895d
  4089b7:	sub    ebx,DWORD PTR [ecx+0x47ffa804]
  4089bd:	xchg   ebp,esp
  4089bf:	add    eax,DWORD PTR [eax]
	...
  4089c9:	add    bh,cl
  4089cb:	ins    BYTE PTR es:[edi],dx
  4089cc:	pop    ss
  4089cd:	mov    eax,0xffbd806e
  4089d2:	xchg   ah,bl
  4089d4:	je     0x408957
  4089d6:	push   cs
  4089d7:	sub    BYTE PTR [ecx+ebx*1+0x53],0x2
  4089dc:	and    al,0x4
  4089de:	xlat   BYTE PTR ds:[bx]
  4089e0:	in     eax,0x3
  4089e2:	iret   
  4089e3:	fisub  WORD PTR [ecx+eax*4]
  4089e6:	mov    ?,WORD PTR [edi+0x6e]
  4089e9:	sbb    DWORD PTR [ebx+0x44042402],ecx
  4089ef:	cmp    BYTE PTR ds:0xe27f8e81,0xbb
  4089f6:	fadd   DWORD PTR [ebp-0x16]
  4089f9:	mov    esp,0x4550bf6c
  4089fe:	iret   
  4089ff:	push   es
  408a00:	rol    BYTE PTR [edi+0x42],1
  408a03:	mov    esi,0xc7da7ce5
  408a08:	push   0x10decf45
  408a0d:	or     DWORD PTR [esi-0x60e68181],0xd803a402
  408a17:	inc    edi
  408a18:	jmp    0xcf45:0x50c32cb9
  408a1f:	push   es
  408a20:	rcl    BYTE PTR [ebx+0x42],1
  408a23:	mov    esi,0x2ee319e5
  408a28:	or     al,0xbc
  408a2a:	fcom   QWORD PTR [edi+0x5c4c]
	...
  408a38:	adc    al,BYTE PTR [eax+0x2f689be4]
  408a3e:	repz ret 0xcf1a
  408a42:	lds    ebp,FWORD PTR [ebx]
  408a44:	iret   
  408a45:	jg     0x408aa0
  408a47:	bound  ebp,QWORD PTR [edi+0x3]
  408a4a:	enter  0x2201,0x28
  408a4e:	repz (bad) 
  408a50:	cmp    ebx,edi
  408a52:	pop    es
  408a53:	and    al,0x67
  408a55:	std    
  408a56:	dec    esp
  408a57:	jmp    0x82021e51
  408a5c:	dec    edi
  408a5d:	ror    DWORD PTR [esi+ebp*8],0x24
  408a61:	jg     0x408a29
  408a63:	pusha  
  408a64:	enter  0x983c,0x5c
  408a68:	adc    eax,DWORD PTR [eax+0x88fdd85]
  408a6e:	sub    DWORD PTR [eax],0x9479c0d3
  408a74:	mov    bl,0x3f
  408a76:	repz scas al,BYTE PTR es:[edi]
  408a78:	imul   edi,ebx,0xfdb47407
  408a7e:	dec    esp
  408a7f:	jmp    0x1dc21e29
  408a84:	mov    eax,ds:0xd0da0cc0
  408a89:	cld    
  408a8a:	dec    edi
  408a8b:	ja     0x408a18
  408a8d:	jg     0x408ace
  408a8f:	aad    0x4f
  408a91:	aam    0x82
  408a93:	sub    bl,cl
  408a95:	jb     0x408a65
  408a97:	cwde   
  408a98:	or     al,0xf9
  408a9a:	pop    es
  408a9b:	je     0x408a9d
	...
  408aa5:	add    BYTE PTR [eax-0x2],bl
  408aa8:	dec    esp
  408aa9:	jmp    0x631b3f41
  408aae:	mov    edi,0xcca881bf
  408ab3:	cli    
  408ab4:	cmp    BYTE PTR [eax],al
  408ab6:	and    al,BYTE PTR [eax]
  408ab8:	dec    ebp
  408ab9:	add    BYTE PTR ds:0x778d4b30,bh
  408abf:	xor    bl,0x35
  408ac2:	pop    edx
  408ac3:	dec    DWORD PTR [eax+eax*1+0x39]
  408ac7:	mov    eax,0xd283fff0
  408acc:	add    DWORD PTR [ecx-0x4a],0xfff849ad
  408ad3:	push   cs
  408ad4:	repz dec ecx
  408ad7:	test   eax,0xf5b18bda
  408adc:	frstor [ebx]
  408ade:	mov    al,0x21
  408ae0:	pop    eax
  408ae1:	cld    
  408ae2:	ins    DWORD PTR es:[edi],dx
  408ae3:	inc    eax
  408ae4:	(bad)  
  408ae6:	sti    
  408ae7:	xchg   edi,eax
  408ae8:	add    DWORD PTR [ecx+0x76],0x73f8497f
  408aef:	stc    
  408af0:	je     0x408a74
  408af2:	pushf  
  408af3:	fdivr  QWORD PTR [eax-0x4]
  408af6:	fld    st(6)
  408af8:	hlt    
  408af9:	mov    DWORD PTR [ebx],ecx
  408afb:	lock int3 
  408afd:	(bad)  
  408afe:	sbb    BYTE PTR [edi+0x42758bf2],ah
  408b04:	iret   
  408b05:	add    eax,0x754d3a25
	...
  408b12:	add    BYTE PTR [eax],al
  408b14:	jp     0x408ab0
  408b16:	loopne 0x408b17
  408b18:	cmp    esp,ebx
  408b1a:	xchg   dh,al
  408b1c:	lods   eax,DWORD PTR ds:[esi]
  408b1d:	push   esp
  408b1e:	aas    
  408b1f:	inc    ebp
  408b20:	dec    edx
  408b21:	xor    ch,cl
  408b23:	add    esi,edx
  408b25:	lods   al,BYTE PTR ds:[esi]
  408b26:	clc    
  408b27:	lea    esi,[edi+0x7e450f83]
  408b2d:	xchg   BYTE PTR [ebp-0xc727015],ch
  408b33:	jne    0x408abf
  408b35:	lods   al,BYTE PTR ds:[esi]
  408b36:	dec    ecx
  408b37:	clc    
  408b38:	iret   
  408b39:	lahf   
  408b3a:	and    edi,esp
  408b3c:	push   cs
  408b3d:	data16 add cl,BYTE PTR [ebx-0x3e424f2f]
  408b44:	mov    WORD PTR [esp+ecx*1],fs
  408b47:	fmul   DWORD PTR [esi]
  408b49:	in     al,dx
  408b4a:	fidivr WORD PTR [ecx-0x5ea155]
  408b50:	inc    esp
  408b51:	pop    esi
  408b52:	jne    0x408ba9
  408b54:	stos   DWORD PTR es:[edi],eax
  408b55:	xor    cl,BYTE PTR [edx-0x4]
  408b58:	in     al,dx
  408b59:	ins    DWORD PTR es:[edi],dx
  408b5a:	in     eax,dx
  408b5b:	vaddps ymm1,ymm7,YMMWORD PTR ds:0x70db4204
  408b63:	inc    ecx
  408b64:	iret   
  408b65:	sbb    DWORD PTR [edx-0x8],ecx
  408b68:	retf   0x7c92
  408b6b:	sbb    ecx,DWORD PTR [eax+0x1e]
  408b6e:	cmp    bh,ah
  408b70:	inc    eax
  408b71:	pop    esp
  408b72:	mov    al,ds:0xce4aea89
  408b77:	mov    BYTE PTR [eax],0x0
	...
  408b82:	shl    DWORD PTR [ecx-0x27a3745f],0xcb
  408b89:	add    eax,0x754ddecc
  408b8e:	adc    al,0x0
  408b90:	xchg   ebx,eax
  408b91:	inc    DWORD PTR [eax-0xa]
  408b94:	jae    0x408b5c
  408b96:	inc    esp
  408b97:	push   ss
  408b98:	cld    
  408b99:	inc    esp
  408b9a:	xor    ecx,DWORD PTR [edx-0x33]
  408b9d:	add    edx,ebx
  408b9f:	fwait
  408ba0:	fwait
  408ba1:	mov    cs,WORD PTR [esi+0x17450c16]
  408ba7:	and    al,0xd9
  408ba9:	shr    DWORD PTR [ebp+0xb759ff0],0x9e
  408bb0:	dec    edx
  408bb1:	clc    
  408bb2:	push   esi
  408bb3:	xor    al,0xa3
  408bb5:	rcl    DWORD PTR [ecx],0x3d
  408bb8:	je     0x408bb8
  408bba:	inc    esp
  408bbb:	adc    BYTE PTR [esi-0x3e],0xc
  408bbf:	and    esi,0xffffffcb
  408bc2:	mov    ?,WORD PTR [edx-0x4045fdcb]
  408bc8:	push   eax
  408bc9:	inc    edx
  408bca:	iret   
  408bcb:	jle    0x408bbd
  408bcd:	inc    edi
  408bce:	pop    edx
  408bcf:	mov    esi,0xb80202e5
  408bd4:	push   0xa7f8cf42
  408bd9:	scas   eax,DWORD PTR es:[edi]
  408bda:	into   
  408bdb:	cmp    BYTE PTR [ecx+0x7e800e7e],0x46
  408be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be3:	jle    0x408bc5
  408be5:	push   ebx
	...
  408bee:	add    BYTE PTR [eax],al
  408bf0:	dec    edx
  408bf1:	mov    esi,0xd28cbae5
  408bf6:	jle    0x408b97
  408bf8:	mov    BYTE PTR [edx+0x3ca99bfd],dh
  408bfe:	in     eax,0x3
  408c00:	dec    esp
  408c01:	daa    
  408c02:	loop   0x408c39
  408c04:	test   eax,0x70fc502c
  408c09:	mov    WORD PTR [edx-0x5a8730fc],fs
  408c0f:	xor    eax,edx
  408c11:	out    0xc1,eax
  408c13:	stos   DWORD PTR es:[edi],eax
  408c14:	push   eax
  408c15:	sub    al,0xde
  408c17:	pop    ss
  408c18:	push   esp
  408c19:	mov    edi,0x3fd493e1
  408c1e:	xor    BYTE PTR [ebx],al
  408c20:	ja     0x408c4e
  408c22:	mov    ds:0xe11830ab,al
  408c27:	jle    0x408bf8
  408c29:	clc    
  408c2a:	in     al,0xbc
  408c2c:	or     eax,0x4450e583
  408c31:	sbb    esp,DWORD PTR [esi-0x40]
  408c34:	pop    ds
  408c35:	shl    BYTE PTR [esi+0x1f8575ce],1
  408c3b:	add    eax,0x810c8175
  408c40:	push   esp
  408c41:	cmp    eax,0x2749e90c
  408c46:	repz (bad) 
  408c49:	sbb    BYTE PTR [esi+0x72],ch
  408c4c:	adc    ebx,DWORD PTR [ecx+0x2f8e641c]
  408c52:	pop    esp
  408c53:	inc    ecx
	...
  408c5c:	add    BYTE PTR [eax],al
  408c5e:	scas   al,BYTE PTR es:[edi]
  408c5f:	and    ebx,esi
  408c61:	inc    esi
  408c62:	in     eax,dx
  408c63:	inc    edx
  408c64:	dec    ecx
  408c65:	cmp    ecx,ecx
  408c67:	jg     0x408bf0
  408c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c6a:	fadd   QWORD PTR [ecx]
  408c6c:	rol    edi,0x33
  408c6f:	mov    ebp,0x7bf66afe
  408c74:	or     al,0x95
  408c76:	iret   
  408c77:	test   BYTE PTR [eax-0x1b],0x39
  408c7b:	mov    ecx,DWORD PTR [edi+0x782b988c]
  408c81:	repz push ecx
  408c83:	lods   eax,DWORD PTR ds:[esi]
  408c84:	add    al,0xe9
  408c86:	mov    edi,0x59cce783
  408c8b:	jnp    0x408c80
  408c8d:	je     0x408d03
  408c8f:	and    esp,DWORD PTR [eax-0x1a]
  408c92:	xor    eax,0x35e18f2b
  408c97:	mov    ch,0xe
  408c99:	ret    0xf8c8
  408c9c:	dec    eax
  408c9d:	aad    0xb2
  408c9f:	pop    DWORD PTR [ecx+0x5fd0832c]
  408ca5:	rcl    DWORD PTR [ebx+0x3a],1
  408ca8:	or     al,0xe9
  408caa:	push   ecx
  408cab:	sub    bl,dh
  408cad:	xor    al,0x33
  408caf:	into   
  408cb0:	in     al,0x7d
  408cb2:	data16 or BYTE PTR [edx+ebx*8],0x11
  408cb7:	test   esi,0x3e5a32
  408cbd:	jmp    0x1208341
	...
  408cca:	add    BYTE PTR [eax],al
  408ccc:	in     eax,0xce
  408cce:	(bad)  
  408ccf:	jge    0x408cf7
  408cd1:	jg     0x408d4c
  408cd3:	or     edi,DWORD PTR [esi-0x19fff37d]
  408cd9:	mov    ch,0x57
  408cdb:	leave  
  408cdc:	mov    ah,0x32
  408cde:	repz mov al,BYTE PTR [ebx]
  408ce1:	xor    esi,DWORD PTR [esi+0xc7ee600]
  408ce7:	push   0xffffffe6
  408ce9:	aad    0x78
  408ceb:	adc    BYTE PTR [ecx-0x2b],ch
  408cee:	js     0x408cf8
  408cf0:	push   ds
  408cf1:	pusha  
  408cf2:	ret    0xa600
  408cf5:	dec    ebx
  408cf7:	jle    0x408c93
  408cf9:	xor    esp,0x8f8e7b29
  408cff:	jge    0x408ca7
  408d01:	jle    0x408d7c
  408d03:	pop    es
  408d04:	std    
  408d05:	or     DWORD PTR [eax+eax*1],0xffffffa6
  408d09:	or     DWORD PTR [esi],ecx
  408d0b:	jmp    0x408cb9
  408d0d:	test   eax,0xeb2d5fcf
  408d12:	int    0xc
  408d14:	iretw  
  408d16:	xchg   esp,ebp
  408d18:	out    0xea,eax
  408d1a:	idiv   esi
  408d1c:	jno    0x408cf6
  408d1e:	bnd jne 0x408d93
  408d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d22:	mov    esp,esi
  408d24:	sbb    al,0xf2
  408d27:	(bad)  
  408d28:	jmp    0x408d05
  408d2a:	icebp  
  408d2b:	call   DWORD PTR [ecx]
  408d2d:	or     DWORD PTR [eax+eax*1],0x0
	...
  408d39:	add    BYTE PTR [esi],dh
  408d3b:	aas    
  408d3c:	mov    esp,edi
  408d3e:	sbb    al,0xf2
  408d41:	add    DWORD PTR [esi],esp
  408d43:	jle    0x408d51
  408d45:	lea    edi,[ebx+0x41fff383]
  408d4b:	fdivr  DWORD PTR [eax+0x8]
  408d4e:	iret   
  408d4f:	mov    eax,ds:0x144a8d08
  408d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d55:	dec    DWORD PTR [eax]
  408d57:	mov    BYTE PTR [edx],dl
  408d59:	add    BYTE PTR [ebp+0x18],dh
  408d5c:	jp     0x408ce3
  408d5e:	sti    
  408d5f:	mov    cl,0xa5
  408d61:	call   FWORD PTR [edi-0x3117f782]
  408d67:	jb     0x408d71
  408d69:	add    BYTE PTR [eax+eiz*4-0x5b],cl
  408d6d:	je     0x408d42
  408d6f:	sbb    eax,0x85cb75cf
  408d74:	enter  0xd2eb,0xfe
  408d78:	push   cs
  408d79:	add    bh,cl
  408d7b:	push   ss
  408d7c:	mov    dh,0xc2
  408d7e:	(bad)  
  408d7f:	push   ss
  408d80:	inc    edx
  408d81:	mov    esp,DWORD PTR [ebx-0x303336a]
  408d87:	dec    ebp
  408d88:	shr    BYTE PTR [edx+0x5],0x8a
  408d8c:	and    ecx,DWORD PTR [eax]
  408d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d91:	call   DWORD PTR [eax+0x2374cf1e]
  408d97:	or     eax,0x2efaff41
  408d9c:	xchg   edi,eax
  408d9d:	jg     0x408d9f
	...
  408da7:	add    BYTE PTR [eax+0x32],bh
  408daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dab:	or     ecx,DWORD PTR [edi+0x13eb09b4]
  408db1:	int    0x8
  408db3:	push   0xffffffce
  408db5:	fwait
  408db6:	xor    bh,bh
  408db8:	call   DWORD PTR [ecx+0x22]
  408dbb:	or     BYTE PTR [edi+0xd],ah
  408dbe:	mov    edx,0xcf9bcf00
  408dc3:	jle    0x408dc4
  408dc5:	lods   eax,DWORD PTR ds:[esi]
  408dc6:	xor    dl,BYTE PTR [edi+esi*8]
  408dc9:	pop    ebx
  408dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dcb:	jne    0x408d9a
  408dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dce:	push   cs
  408dcf:	mov    eax,DWORD PTR [edx-0x42830681]
  408dd5:	xchg   ebp,eax
  408dd6:	in     eax,0x1d
  408dd8:	into   
  408dd9:	cli    
  408dda:	pop    ds
  408ddb:	test   eax,0xf818287f
  408de0:	or     esi,ecx
  408de2:	aad    0xa8
  408de4:	jp     0x408e61
  408de6:	popf   
  408de7:	pop    esp
  408de8:	pop    ss
  408de9:	sub    DWORD PTR [edx-0x14],edi
  408dec:	mov    ecx,DWORD PTR [edi-0x7c0bfa09]
  408df2:	pusha  
  408df3:	int3   
  408df4:	pop    ebx
  408df5:	fstp   TBYTE PTR [ebp-0x3c]
  408df8:	je     0x408e30
  408dfa:	daa    
  408dfb:	bswap  edi
  408dfd:	shr    BYTE PTR [esi-0x69],cl
  408e00:	dec    esi
  408e01:	inc    ebx
  408e02:	in     eax,0xab
  408e04:	shr    BYTE PTR [eax],0x96
  408e07:	fcom   QWORD PTR [ebp+0xa89f95]
	...
  408e15:	add    BYTE PTR [edx],bh
  408e17:	js     0x408e66
  408e19:	or     ebp,DWORD PTR [eax+0x60fc2a28]
  408e1f:	mov    bl,0x8a
  408e21:	sbb    eax,0xfb9028f5
  408e26:	test   al,0x75
  408e28:	add    ch,BYTE PTR [eax+0x2e257488]
  408e2e:	int    0x14
  408e30:	call   0x70fb:0xe58ffa82
  408e37:	sub    BYTE PTR [ebx+0x0],bh
  408e3a:	daa    
  408e3b:	jg     0x408e3a
  408e3d:	add    ecx,edi
  408e3f:	adc    al,0xe6
  408e41:	jp     0x408e55
  408e43:	nop
  408e44:	dec    edi
  408e45:	add    al,0xff
  408e47:	cli    
  408e48:	addr16 add al,0x47
  408e4b:	sub    dl,cl
  408e4d:	push   esp
  408e4e:	inc    eax
  408e4f:	mov    dl,0xfd
  408e51:	fwait
  408e52:	(bad)  
  408e53:	cmp    cl,BYTE PTR [ecx+ebp*8]
  408e56:	int3   
  408e57:	add    cl,ah
  408e59:	xor    ch,cl
  408e5b:	adc    al,0x20
  408e5d:	sbb    al,0xcc
  408e5f:	mov    esp,0xf47cc6e7
  408e64:	pop    eax
  408e65:	in     eax,0x95
  408e67:	lea    esp,[esi-0x17]
  408e6a:	pushf  
  408e6b:	cli    
  408e6c:	mov    cl,ch
  408e6e:	xor    al,0x28
  408e70:	repz sbb DWORD PTR [eax],esi
  408e73:	mov    dl,0x0
  408e75:	jbe    0x408e14
  408e77:	(bad)  
  408e78:	push   esp
  408e79:	rol    BYTE PTR [eax],0x0
	...
  408e84:	(bad)  
  408e85:	(bad)  
  408e86:	(bad)  
  408e87:	in     al,0xbc
  408e89:	jg     0x408f04
  408e8b:	jmp    0xb304:0x6c08148d
  408e92:	xchg   ebp,eax
  408e93:	bound  ecx,QWORD PTR [ebx+ecx*8+0x27c72bc5]
  408e9a:	pop    eax
  408e9b:	jb     0x408ef4
  408e9d:	add    ecx,eax
  408e9f:	xor    DWORD PTR [eax],eax
  408ea1:	jae    0x408e96
  408ea3:	ret    
  408ea4:	int3   
  408ea5:	into   
  408ea6:	repz pushf 
  408ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ea9:	pop    ds
  408eaa:	enter  0x7036,0x27
  408eae:	retf   
  408eaf:	lods   al,BYTE PTR ds:[esi]
  408eb0:	push   0xcce90c80
  408eb5:	cli    
  408eb6:	pop    eax
  408eb7:	icebp  
  408eb8:	add    eax,0x24a48192
  408ebd:	shl    BYTE PTR [esi-0x13],1
  408ec0:	idiv   DWORD PTR [eax+esi*8+0x4ad3199]
  408ec7:	out    0xfe,al
  408ec9:	jae    0x408f16
  408ecb:	push   0xe30123a7
  408ed0:	push   edi
  408ed1:	jns    0x408f4b
  408ed3:	jecxz  0x408f22
  408ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ed6:	hlt    
  408ed7:	add    BYTE PTR [esi],dh
  408ed9:	jo     0x408ea0
  408edb:	xor    esp,DWORD PTR [esi+0xa]
  408ede:	or     DWORD PTR [ebx+0x3cc0261],ecx
  408ee4:	ftst   
  408ee6:	int    0x4
	...
  408ef0:	add    BYTE PTR [eax],al
  408ef2:	rol    BYTE PTR ss:[edi-0x8195a14],1
  408ef9:	push   ebx
  408efa:	rol    DWORD PTR [ebx-0x7d09c56c],1
  408f00:	in     al,0xec
  408f02:	sub    esi,ebx
  408f04:	repnz mov DWORD PTR [ebx+0x724580d7],esi
  408f0b:	shl    ah,cl
  408f0d:	sub    DWORD PTR [ecx-0x22],eax
  408f10:	repnz xor ecx,DWORD PTR [ebp-0x2395ed78]
  408f17:	mov    cl,BYTE PTR [edx+edi*8]
  408f1a:	out    0x82,al
  408f1c:	repz jne 0x408f41
  408f1f:	fidivr WORD PTR [eax+0x8]
  408f22:	push   ds
  408f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f24:	repnz (bad) 
  408f26:	stc    
  408f27:	dec    ebx
  408f29:	mov    cr6,ebx
  408f2c:	or     al,0x0
  408f2e:	mov    dh,0xdd
  408f30:	js     0x408f26
  408f32:	mov    esi,0xb9ffdb5d
  408f37:	pop    ss
  408f38:	repz stc 
  408f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f3b:	cmp    BYTE PTR [edx+0x5],0xcf
  408f3f:	jle    0x408f4e
  408f41:	add    BYTE PTR [esi-0x23],dh
  408f44:	js     0x408f3a
  408f46:	fidivr WORD PTR [eax-0x5986000d]
  408f4c:	int3   
  408f4d:	je     0x408f01
  408f4f:	fnstsw WORD PTR [eax-0xc]
  408f52:	jle    0x408efb
  408f54:	aad    0xff
	...
  408f5e:	add    BYTE PTR [eax],al
  408f60:	jns    0x408f0a
  408f62:	pop    ecx
  408f63:	hlt    
  408f64:	iret   
  408f65:	mov    eax,ds:0xc0cf6a1e
  408f6a:	cld    
  408f6b:	and    bh,cl
  408f6d:	sbb    BYTE PTR [eax+0x22e53b75],ch
  408f73:	hlt    
  408f74:	xor    BYTE PTR [edx-0xf6d390c],cl
  408f7a:	pop    es
  408f7b:	add    bh,cl
  408f7d:	sbb    BYTE PTR [edi],dl
  408f7f:	xor    al,0x88
  408f81:	push   edi
  408f82:	or     bh,bh
  408f84:	call   0xf18:0x14ce900c
  408f8b:	push   ebx
  408f8c:	aam    0xd8
  408f8e:	cmp    esi,DWORD PTR [esi]
  408f90:	inc    esp
  408f91:	add    BYTE PTR [eax],dl
  408f93:	xor    al,0x80
  408f95:	push   edi
  408f96:	or     al,ch
  408f98:	enter  0x7e2,0x0
  408f9c:	int3   
  408f9d:	mov    al,ds:0x65444741
  408fa2:	addr16 xchg esp,eax
  408fa4:	mov    esi,0xdab00f18
  408fa9:	enter  0xb85a,0x5b
  408fad:	dec    eax
  408fae:	verr   sp
  408fb1:	push   edi
  408fb2:	mov    dl,0x47
  408fb4:	mov    al,0x17
  408fb6:	inc    eax
  408fb7:	push   ebx
  408fb8:	mov    bh,0xff
  408fba:	mov    ah,0x0
  408fbc:	iret   
  408fbd:	scas   eax,DWORD PTR es:[edi]
  408fbe:	xor    edi,eax
  408fc0:	clc    
  408fc1:	pop    esp
  408fc2:	xor    edi,edi
	...
  408fcc:	add    BYTE PTR [eax],al
  408fce:	ret    0x43ed
  408fd1:	push   0x4e0613
  408fd6:	and    BYTE PTR [ebx+ebp*4+0x87252e8],0x0
  408fde:	sbb    al,0x22
  408fe0:	iret   
  408fe1:	je     0x408ff6
  408fe3:	mov    ds:0x800b68a0,al
  408fe8:	cmp    al,BYTE PTR [ebx-0x31]
  408feb:	pop    ss
  408fec:	mov    ebx,0xe67fcfba
  408ff1:	stos   DWORD PTR es:[edi],eax
  408ff2:	mov    al,ds:0x86c46ebc
  408ff7:	or     al,0xd4
  408ff9:	add    ecx,edi
  408ffb:	out    dx,eax
  408ffc:	fbstp  TBYTE PTR [ecx+0x1250e861]
  409002:	iret   
  409003:	jg     0x409013
  409005:	ret    
  409006:	or     DWORD PTR [ebp-0x2f7ffc56],edi
  40900c:	popf   
  40900d:	pusha  
  40900e:	and    DWORD PTR ds:0x8fa2789a,esp
  409014:	out    dx,al
  409015:	sar    DWORD PTR [ebx+0x7b],1
  409018:	jl     0x40901b
  40901a:	in     al,0x7d
  40901c:	adc    eax,0x7a46019c
  409021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409022:	mov    BYTE PTR ds:0xc4d2a52a,bh
  409028:	into   
  409029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40902a:	bound  ebp,QWORD PTR [ebx]
  40902c:	pop    ebp
  40902d:	fcomi  st,st(7)
  40902f:	and    al,0x5a
  409031:	add    BYTE PTR [eax],0x0
	...
  40903c:	dec    edx
  40903d:	sub    ch,ah
  40903f:	sub    al,0xc8
  409041:	cmp    al,0xa0
  409043:	stos   DWORD PTR es:[edi],eax
  409044:	iret   
  409045:	jg     0x408fcc
  409047:	add    esi,DWORD PTR [eax+0x22a43daa]
  40904d:	sub    al,0x22
  40904f:	xlat   BYTE PTR cs:[ebx]
  409051:	pop    ss
  409052:	add    ah,BYTE PTR [esi+0x2e122498]
  409058:	fwait
  409059:	pop    ss
  40905a:	popf   
  40905b:	int    0x88
  40905d:	and    al,0xee
  40905f:	ret    
  409060:	cli    
  409061:	sbb    DWORD PTR [esi],0x793fc408
  409067:	or     al,0x44
  409069:	retf   0xfd0c
  40906c:	loopne 0x408fff
  40906e:	repz je 0x4090c9
  409071:	and    eax,0xd12cdd79
  409076:	cmp    BYTE PTR [ebx+ecx*4-0x59],ah
  40907a:	or     DWORD PTR [edx-0x16f3802e],edx
  409080:	push   ecx
  409081:	retf   0x72f8
  409084:	inc    ecx
  409085:	and    eax,0xd16cb579
  40908a:	add    al,0xb6
  40908c:	(bad)  
  40908d:	and    esp,esp
  40908f:	inc    ecx
  409090:	or     eax,0x1072f324
  409095:	les    edx,FWORD PTR [edi-0x50]
  409098:	or     DWORD PTR [ebx+0xc],esi
  40909b:	cmp    al,0x58
  40909d:	adc    ecx,DWORD PTR [edi+0xa5]
  4090a3:	add    BYTE PTR [eax],al
  4090a5:	add    BYTE PTR [eax],al
  4090a7:	add    BYTE PTR [eax],al
  4090a9:	add    BYTE PTR [ebx+0x39d25fcc],bl
  4090af:	xchg   edi,eax
  4090b0:	or     al,0xc9
  4090b2:	int3   
  4090b3:	jg     0x409099
  4090b5:	or     cl,BYTE PTR ds:0x9660f324
  4090bb:	and    esp,DWORD PTR [ecx+ebp*8-0x14]
  4090bf:	and    esi,ebx
  4090c1:	push   ecx
  4090c2:	xchg   ebp,eax
  4090c3:	inc    ebp
  4090c4:	repz push esi
  4090c6:	pop    edx
  4090c7:	mov    ebp,0x5fccc1b8
  4090cc:	or     al,0xe9
  4090ce:	fs mov ecx,0xf96c3ed2
  4090d4:	dec    eax
  4090d5:	jne    0x409115
  4090d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090d8:	int3   
  4090d9:	jo     0x40908a
  4090db:	and    esi,ebx
  4090dd:	jmp    0x543f7463
  4090e2:	test   BYTE PTR [ebp+0x7fccd5cc],bh
  4090e8:	or     al,0x26
  4090ea:	push   ss
  4090eb:	dec    esp
  4090ec:	repz add BYTE PTR [ecx+0x7f],dh
  4090f0:	or     al,0xc7
  4090f2:	sub    ecx,DWORD PTR [edi]
  4090f4:	repz pop ds
  4090f6:	jbe    0x409177
  4090f8:	repz jne 0x40916d
  4090fb:	push   cs
  4090fc:	dec    ecx
  4090fd:	shl    BYTE PTR [ecx-0x78],1
  409100:	mov    eax,0x80efab8f
  409105:	inc    ebp
  409106:	jbe    0x409177
  409108:	add    BYTE PTR fs:[esi],dh
  40910b:	jg     0x409099
  40910d:	push   0x0
	...
  409117:	add    BYTE PTR [esi],ah
  409119:	fidivr WORD PTR [eax+0x8]
  40911c:	push   ds
  40911d:	data16 mov BYTE PTR [eax],0x36
  409121:	jb     0x4090ef
  409123:	je     0x40914d
  409125:	cli    
  409126:	jo     0x4090f8
  409128:	mov    BYTE PTR es:[ecx],cl
  40912b:	jmp    0x4d1090
  409130:	cmp    DWORD PTR [eax+0x7ef1ffbc],edi
  409136:	or     al,0x8d
  409138:	stos   DWORD PTR es:[edi],eax
  409139:	retf   
  40913a:	pop    esp
  40913b:	(bad)  
  40913c:	sti    
  40913d:	ret    0x64
  409140:	idiv   BYTE PTR [esi-0x74]
  409143:	lea    ebp,[ebx-0x4b17a3c5]
  409149:	xor    DWORD PTR [eax+eax*1],ecx
  40914c:	fnstsw WORD PTR [esi]
  40914e:	jns    0x409155
  409150:	sete   BYTE PTR [eax+eax*1]
  409154:	mov    dh,0xf1
  409156:	dec    eax
  409157:	mov    ah,0xe8
  409159:	jle    0x409167
  40915b:	lea    esi,[ebx+0x3e]
  40915e:	mov    ch,0x3c
  409160:	mov    dh,0x7e
  409162:	or     al,0x33
  409164:	test   BYTE PTR [ecx],0xa6
  409167:	(bad)  
  409168:	imul   edi,DWORD PTR [esi],0x30
  40916b:	add    BYTE PTR [esi-0x308a0c82],ah
  409171:	les    ebx,FWORD PTR [esi+0x44597345]
  409177:	aam    0x78
  409179:	sbb    DWORD PTR [edi],ecx
	...
  409183:	add    BYTE PTR [eax],al
  409185:	add    BYTE PTR [eax-0x37006125],cl
  40918b:	sbb    BYTE PTR [edi],cl
  40918d:	lea    ecx,[edx]
  40918f:	pop    ecx
  409190:	aas    
  409191:	push   0xffffffcf
  409193:	into   
  409194:	or     bh,bh
  409196:	fiadd  DWORD PTR [eax+eiz*4]
  409199:	out    0x16,al
  40919b:	sbb    BYTE PTR [edi],cl
  40919d:	or     ecx,DWORD PTR [edi]
  40919f:	int3   
  4091a0:	push   es
  4091a1:	cmp    DWORD PTR [edx-0x328af7f8],0x4d
  4091a8:	sub    bh,bh
  4091aa:	mov    ds:0x5b75acec,al
  4091af:	rcr    BYTE PTR [esi+0x4f],0x8e
  4091b3:	sbb    BYTE PTR [ebp+esi*2-0x36e8efad],ch
  4091ba:	iret   
  4091bb:	sbb    BYTE PTR [eax+0x5441dfc4],cl
  4091c1:	inc    ebp
  4091c2:	pop    ss
  4091c3:	mov    BYTE PTR [edx],ah
  4091c5:	add    al,dh
  4091c7:	sub    dl,BYTE PTR [ebx-0x52520618]
  4091cd:	call   esp
  4091cf:	fcomp  DWORD PTR [edx]
  4091d1:	add    ah,ah
  4091d3:	add    BYTE PTR [edi+0x1bc11745],0xbc
  4091da:	mov    bh,0x25
  4091dc:	mov    DWORD PTR [eax],0x75abe6cf
  4091e2:	jnp    0x40919e
  4091e4:	sbb    edi,DWORD PTR [eax-0x6ff359]
	...
  4091f2:	add    BYTE PTR [eax],al
  4091f4:	test   al,0x1e
  4091f6:	iret   
  4091f7:	jne    0x4091c6
  4091f9:	mov    ebp,0x8022fef8
  4091fe:	cmc    
  4091ff:	mov    al,ds:0x1712741a
  409204:	inc    edi
  409205:	sbb    al,dl
  409207:	sahf   
  409208:	and    BYTE PTR [ecx],0x6e
  40920b:	mov    esp,0xac4dab78
  409210:	lea    esi,[edi]
  409212:	in     eax,0x3
  409214:	push   0xd5ac31ab
  409219:	inc    edx
  40921a:	loop   0x4091bc
  40921c:	pop    eax
  40921d:	stos   DWORD PTR es:[edi],eax
  40921e:	test   eax,0xd242cdab
  409223:	mov    al,ds:0xabd9ab48
  409228:	inc    ebp
  409229:	inc    esp
  40922a:	ret    0x44a0
  40922d:	cmp    eax,0x3e06412e
  409232:	loope  0x409237
  409234:	xor    ah,0xc8
  409237:	test   BYTE PTR [ebx],cl
  409239:	and    al,0x6e
  40923b:	inc    esi
  40923c:	retf   
  40923d:	je     0x4091e4
  40923f:	pop    ss
  409240:	leave  
  409241:	cmp    ch,ah
  409243:	add    ecx,edi
  409245:	jg     0x40922c
  409247:	enter  0x238a,0xe5
  40924b:	add    ecx,edi
  40924d:	jg     0x4092c7
  40924f:	inc    esi
  409250:	repz iret 
  409252:	jb     0x40926a
  409254:	(bad)  [eax]
  409256:	lock or eax,DWORD PTR [eax]
	...
  409261:	add    bh,dh
  409263:	xchg   esi,eax
  409264:	arpl   WORD PTR [eax-0x60180328],sp
  40926a:	iret   
  40926b:	stos   DWORD PTR es:[edi],eax
  40926c:	cli    
  40926d:	sub    eax,0xfd020cf
  409272:	shr    BYTE PTR [edx+0x2221ab41],0x4a
  409279:	mov    al,ds:0x9fb8211f
  40927e:	mov    bh,0xd2
  409280:	or     edx,DWORD PTR ds:0x2054206f
  409286:	xchg   edx,eax
  409287:	ja     0x409295
  409289:	mov    esp,0x258f1343
  40928e:	push   0x60accb99
  409293:	jle    0x4092a1
  409295:	xchg   DWORD PTR [edi-0x33180d46],eax
  40929b:	xchg   ebp,eax
  40929c:	or     BYTE PTR [ecx+edx*1+0x24],ch
  4092a0:	pop    esp
  4092a1:	or     DWORD PTR [edi+edi*2+0xc],0xf320a4e9
  4092a9:	jmp    0xf1b9b37a
  4092ae:	je     0x409269
  4092b0:	(bad)
  4092b3:	ss into 
  4092b5:	in     eax,0xcc
  4092b7:	retf   0xd587
  4092ba:	dec    esp
  4092bb:	cmp    esp,DWORD PTR [eax+0x4938dc16]
  4092c1:	test   ebx,ecx
  4092c3:	jg     0x4092d1
  4092c5:	jmp    0x4092ca
  4092ca:	add    BYTE PTR [eax],al
  4092cc:	add    BYTE PTR [eax],al
  4092ce:	add    BYTE PTR [eax],al
  4092d0:	std    
  4092d1:	inc    esp
  4092d2:	fs jmp 0x9233b2f4
  4092d8:	loope  0x40931d
  4092da:	repz xchg esi,eax
  4092dc:	push   edx
  4092dd:	mov    edx,0x8fd301cc
  4092e2:	or     al,0xe9
  4092e4:	and    al,0x96
  4092e6:	sar    BYTE PTR [esi+0x48],1
  4092e9:	test   BYTE PTR [eax+0x31],0xb3
  4092ed:	jg     0x40930b
  4092ef:	jmp    0x4590aac0
  4092f4:	xor    BYTE PTR [eax],ah
  4092f6:	test   DWORD PTR [eax+ebp*1+0x222d710d],esp
  4092fd:	pop    esp
  4092fe:	or     al,0xe9
  409300:	int3   
  409301:	push   edx
  409302:	int3   
  409303:	add    ch,dh
  409305:	test   eax,0x1ff245cb
  40930a:	repz push DWORD PTR [esi-0x63f8702]
  409311:	enter  0xffd8,0x33
  409315:	mov    ebx,0x46e64583
  40931a:	dec    ecx
  40931b:	fcomp  st(1)
  40931d:	mov    cs,WORD PTR [eax+eax*1]
  409320:	mov    cl,0xc8
  409322:	clc    
  409323:	(bad)  
  409324:	jns    0x4092a9
  409326:	or     al,0x8d
  409328:	xor    eax,DWORD PTR [edi+0x5c]
  40932b:	push   0x800c8376
  409330:	dec    esp
  409331:	xor    ebx,0x75
	...
  40933c:	add    BYTE PTR [eax],al
  40933e:	pop    esi
  40933f:	jmp    0x4093a6
  409341:	enter  0x8336,0x7
  409345:	shl    BYTE PTR [edx-0x7d82707b],0x83
  40934c:	jns    0x409353
  40934e:	pop    ds
  40934f:	loopne 0x40935c
  409351:	add    BYTE PTR [esi],dh
  409353:	inc    esi
  409354:	dec    ecx
  409355:	mov    al,0x59
  409357:	mov    cs,WORD PTR [eax+eax*1]
  40935a:	jnp    0x409323
  40935c:	mov    esp,0xb0786950
  409361:	push   0x800c82f6
  409366:	imul   eax,edi,0xffffffc8
  409369:	push   eax
  40936a:	dec    esi
  40936b:	enter  0xc4,0xe6
  40936f:	mov    esp,ecx
  409371:	jne    0x409366
  409373:	jmp    0x409348
  409375:	add    dh,dh
  409377:	add    BYTE PTR [edi+0xc449e45],0x0
  40937e:	pop    ebx
  40937f:	pop    edi
  409380:	enter  0xeab9,0x83
  409384:	or     al,0x0
  409386:	iret   
  409387:	jns    0x409351
  409389:	repz gs gs inc esp
  40938d:	(bad)  
  40938e:	repz sub BYTE PTR [edi],cl
  409391:	add    BYTE PTR [eax+0xa8f56d3],ch
  409397:	pop    ecx
  409398:	retf   0x7745
  40939b:	ins    DWORD PTR es:[edi],dx
  40939c:	add    al,BYTE PTR [eax]
  40939e:	iret   
  40939f:	ins    DWORD PTR es:[edi],dx
  4093a0:	inc    esp
  4093a1:	hlt    
	...
  4093aa:	add    BYTE PTR [eax],al
  4093ac:	mov    BYTE PTR ds:0xeb52000f,ch
  4093b2:	retf   0xe550
  4093b5:	sub    BYTE PTR ds:0x539b7000,ah
  4093bb:	call   0x4ff926
  4093c0:	aam    0x68
  4093c2:	sbb    eax,DWORD PTR [esi]
  4093c4:	dec    esp
  4093c5:	stos   DWORD PTR es:[edi],eax
  4093c6:	mov    ebx,0xa62bda00
  4093cb:	mov    edi,cs
  4093cd:	sub    BYTE PTR [edi],cl
  4093cf:	(bad)  
  4093d0:	mov    edx,0xf759018
  4093d5:	dec    ebp
  4093d6:	sbb    edi,DWORD PTR [eax+0x414268a7]
  4093dc:	iret   
  4093dd:	fstp   QWORD PTR [edx]
  4093df:	mov    esp,0xc9ae37
  4093e4:	iret   
  4093e5:	test   eax,0xbdc014c4
  4093ea:	dec    ebx
  4093eb:	fcomp  QWORD PTR [edi+0x7aff0872]
  4093f1:	call   0xd388f95
  4093f6:	xchg   ecx,eax
  4093f7:	or     ecx,DWORD PTR [edi]
  4093f9:	sbb    ecx,DWORD PTR ds:0x4b8f89eb
  4093ff:	mov    ah,0xe0
  409401:	sbb    bl,BYTE PTR [ebx-0x18]
  409404:	cs scas al,BYTE PTR es:[edi]
  409406:	xchg   ecx,eax
  409407:	call   eax
  409409:	jle    0x4093db
  40940b:	pop    edi
  40940c:	mov    bh,0x75
  40940e:	sub    eax,DWORD PTR [eax+eax*1]
	...
  409419:	add    bh,cl
  40941b:	scas   eax,DWORD PTR es:[edi]
  40941c:	pop    edx
  40941d:	pop    ss
  40941e:	jnp    0x40943d
  409420:	fcom   DWORD PTR [edi-0x59]
  409423:	mov    edx,0x89a89d4c
  409428:	and    eax,0xf428cd17
  40942d:	sbb    BYTE PTR [edx],0x70
  409430:	in     eax,0x17
  409432:	mov    ebx,0x89f3901c
  409437:	xchg   ebx,eax
  409438:	loope  0x4093d6
  40943a:	cli    
  40943b:	ror    DWORD PTR [esp+eax*2],cl
  40943e:	jbe    0x40945d
  409440:	add    cl,BYTE PTR [ecx]
  409442:	(bad)  
  409443:	xchg   ebx,eax
  409444:	out    0xa8,eax
  409446:	ror    BYTE PTR [eax],0x2d
  409449:	or     DWORD PTR [esp+edx*4-0x13ed712c],eax
  409450:	xchg   esp,eax
  409451:	pushf  
  409452:	fidiv  DWORD PTR [ebx-0x16]
  409455:	push   ss
  409456:	sub    DWORD PTR [eax],0xc
  409459:	cdq    
  40945a:	inc    eax
  40945b:	sbb    eax,0x9338bb6e
  409460:	cdq    
  409461:	stos   DWORD PTR es:[edi],eax
  409462:	imul   eax,DWORD PTR [ebp-0x1b],0xa5932803
  409469:	stos   DWORD PTR es:[edi],eax
  40946a:	xor    DWORD PTR [edx],edi
  40946c:	mov    edx,0x6193189c
  409471:	stos   DWORD PTR es:[edi],eax
  409472:	sub    DWORD PTR [edx],edi
  409474:	stos   BYTE PTR es:[edi],al
  409475:	pushf  
  409476:	or     BYTE PTR [ebx+0x3a21ab6d],dl
  40947c:	call   0x0:0x9c
  409483:	add    BYTE PTR [eax],al
  409485:	add    BYTE PTR [eax],al
  409487:	add    BYTE PTR [ebx+ebx*4+0x31],cl
  40948b:	add    edi,DWORD PTR [ebx-0x79]
  40948e:	mov    dl,BYTE PTR [esi]
  409490:	cmp    ebp,DWORD PTR [eax]
  409492:	xchg   ebp,eax
  409493:	mov    ecx,0x620c1ce0
  409498:	ud1    edx,DWORD PTR [ebx-0x60]
  40949c:	push   cs
  40949d:	jo     0x4094ab
  40949f:	mov    esp,0x258f2b57
  4094a4:	fs mov al,0x27
  4094a7:	xor    cl,BYTE PTR [edi-0x66]
  4094aa:	add    cl,ch
  4094ac:	fmul   st,st(5)
  4094ae:	pop    esp
  4094b0:	pushf  
  4094b1:	sbb    al,0x7f
  4094b3:	mov    cl,0x51
  4094b5:	ret    0x99f0
  4094b8:	cmp    edx,DWORD PTR [edx+0x462f4100]
  4094be:	or     al,0xe9
  4094c0:	push   ecx
  4094c1:	aas    
  4094c2:	je     0x40949d
  4094c4:	arpl   WORD PTR [edx+0x31e30100],dx
  4094ca:	repz push cs
  4094cc:	inc    ebp
  4094cd:	ret    0x6f4
  4094d0:	rcr    DWORD PTR [ebx],0xe4
  4094d3:	lea    ecx,[ecx-0x731df381]
  4094d9:	xchg   ebx,eax
  4094da:	adc    eax,0xf36fbaee
  4094df:	pop    esp
  4094e0:	imul   ebp,DWORD PTR [edi+0x27d354f3],0xf
  4094e7:	xlat   BYTE PTR ds:[ebx]
  4094e8:	push   esp
  4094e9:	sbb    al,0x87
  4094eb:	mov    cl,0x0
	...
  4094f5:	add    BYTE PTR [edx+edx*4-0x10],dl
  4094f9:	rcr    esi,1
  4094fb:	inc    edx
  4094fc:	or     al,0xe9
  4094fe:	inc    ebp
  4094ff:	xchg   edx,eax
  409500:	add    cl,al
  409502:	fidiv  WORD PTR [ebx]
  409504:	repz scas al,BYTE PTR es:[edi]
  409506:	inc    eax
  409507:	inc    eax
  409508:	push   edi
  409509:	mov    al,0x11
  40950b:	mov    ecx,DWORD PTR [esp+esi*1]
  40950e:	push   eax
  40950f:	sub    ecx,DWORD PTR [ebp-0xce21c53]
  409515:	mov    es,WORD PTR [esi+0x2]
  409518:	jle    0x40951a
  40951a:	push   eax
  40951b:	clc    
  40951c:	repnz push eax
  40951e:	mov    esi,0xe6000d82
  409523:	out    0x13,eax
  409525:	(bad)  
  409526:	out    0x7f,al
  409528:	(bad)
  40952b:	or     ah,al
  40952d:	and    DWORD PTR [ebx-0x3e8bf379],0x2
  409534:	jno    0x409546
  409536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409537:	mov    edx,DWORD PTR ds:0xf22b6bff
  40953d:	jne    0x4094dd
  40953f:	out    0xd2,eax
  409541:	(bad)  
  409542:	loope  0x40953a
  409544:	bnd jne 0x4095bd
  409547:	idiv   BYTE PTR [eax+0xc]
  40954a:	mov    cl,0x70
  40954c:	add    al,0xe8
  40954e:	imul   ecx,esi,0x41affff2
  409554:	sbb    al,0x0
  409556:	cmp    ecx,DWORD PTR [edx]
  409558:	loopne 0x4094dd
	...
  409562:	add    BYTE PTR [eax],al
  409564:	push   ebx
  409565:	xchg   DWORD PTR [esp+esi*2],ecx
  409568:	add    BYTE PTR [edx],0x71
  40956b:	or     al,0x66
  40956d:	mov    ebx,DWORD PTR [edx]
  40956f:	(bad)  
  409570:	fisttp DWORD PTR [esi]
  409572:	bnd jne 0x4095b3
  409575:	out    0xbe,eax
  409577:	(bad)  
  409578:	and    esi,esi
  40957a:	bnd jne 0x4095af
  40957d:	idiv   BYTE PTR [eax+0x8]
  409580:	push   cs
  409581:	(bad)  
  409582:	(bad)  
  409584:	adc    DWORD PTR [esi+ecx*8+0xc],ecx
  409588:	ss push eax
  40958a:	xchg   esp,ebp
  40958c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40958d:	(bad)  
  40958f:	(bad)  
  409590:	fild   DWORD PTR [edi-0x9eeba1c]
  409596:	repnz mov DWORD PTR [ebx-0x30827079],ebp
  40959d:	and    al,0xf
  40959f:	je     0x40953a
  4095a1:	or     DWORD PTR [esp+ecx*1],ebx
  4095a4:	not    DWORD PTR [edi-0x4b]
  4095a7:	jmp    eax
  4095a9:	or     eax,0xa38d74cf
  4095ae:	dec    esp
  4095af:	lock jg 0x40955b
  4095b2:	sbb    al,0xc
  4095b4:	mov    bh,0x30
  4095b6:	mov    dh,0xff
  4095b8:	ror    BYTE PTR ds:0xa7fd74cf,0x14
  4095bf:	cld    
  4095c0:	iret   
  4095c1:	sub    bh,bh
  4095c3:	call   FWORD PTR ds:0x759789
	...
  4095d1:	add    BYTE PTR [ebx-0x5807e3a7],ah
  4095d7:	dec    ebp
  4095d8:	test   eax,0xcf1d90ff
  4095dd:	jne    0x4095bd
  4095df:	popa   
  4095e0:	sbb    al,0x10
  4095e2:	xor    bl,0x9a
  4095e5:	inc    DWORD PTR [edx]
  4095e7:	jno    0x40957f
  4095e9:	jne    0x4095b2
  4095eb:	add    BYTE PTR [esi-0x1],0x68
  4095ef:	add    DWORD PTR [ebp+eax*2-0x395907a1],0xff951178
  4095fa:	fidivr DWORD PTR [edi+eiz*4]
  4095fd:	xchg   BYTE PTR [esi],ah
  4095ff:	and    DWORD PTR [ebp+0xf2c0dc9],edx
  409605:	push   ebp
  409606:	inc    esp
  409607:	inc    esp
  409608:	mov    esp,eax
  40960a:	aas    
  40960b:	dec    ecx
  40960c:	add    ecx,DWORD PTR [edi+esi*1]
  40960f:	cld    
  409610:	mov    ch,0xff
  409612:	and    BYTE PTR [edi+0x534c0c33],cl
  409618:	add    al,0x0
  40961a:	fwait
  40961b:	popa   
  40961c:	xchg   ebp,eax
  40961d:	jne    0x4095fa
  40961f:	jg     0x4095be
  409621:	inc    esp
  409622:	and    DWORD PTR [edx],ebx
  409624:	xchg   edx,eax
  409625:	or     eax,0x86d6930f
  40962a:	mov    cl,BYTE PTR [edi]
  40962c:	xor    eax,0x9d8b6299
  409631:	xchg   ecx,eax
  409632:	add    DWORD PTR [edx],ebx
  409634:	jb     0x409643
	...
  40963e:	add    BYTE PTR [eax],al
  409640:	setae  dh
  409643:	adc    BYTE PTR [edx+0x1b],0xe5
  409647:	add    ebx,edi
  409649:	jg     0x409621
  40964b:	repnz rcl DWORD PTR [ebx+0x1c4298f5],0x5a
  409653:	movzx  ebx,WORD PTR [ecx]
  409656:	fmul   DWORD PTR [ebx]
  409658:	mov    bh,0x2b
  40965a:	dec    ebx
  40965b:	cdq    
  40965c:	mov    al,ds:0xff93a80b
  409661:	daa    
  409662:	sar    DWORD PTR [eax+0xf221990],0xdb
  409669:	daa    
  40966a:	sar    DWORD PTR [edx-0x39c3e680],0xcb
  409671:	jg     0x409623
  409673:	mov    WORD PTR [ebx-0x3],fs
  409676:	sub    BYTE PTR [esp+edi*8-0x2566d19c],dl
  40967d:	xchg   DWORD PTR ds:0xfa197929,ebx
  409683:	mov    cl,BYTE PTR [edx]
  409685:	mov    BYTE PTR [esi+0x17],ah
  409688:	xlat   BYTE PTR ds:[ebx]
  409689:	jg     0x4096dc
  40968b:	inc    edx
  40968c:	inc    eax
  40968d:	xchg   ebx,eax
  40968e:	std    
  40968f:	stos   DWORD PTR es:[edi],eax
  409690:	adc    al,0x3b
  409692:	ficomp DWORD PTR [eax-0x29a6c03c]
  409698:	pop    ebx
  409699:	ret    
  40969a:	mov    ch,0x33
  40969c:	and    BYTE PTR [ebx+0x3a3dabfd],dl
  4096a2:	or     al,0xb6
	...
  4096ac:	add    BYTE PTR [eax],al
  4096ae:	aaa    
  4096af:	test   esp,ecx
  4096b1:	xor    eax,0xa570fff1
  4096b6:	int3   
  4096b7:	jg     0x4096d5
  4096b9:	jmp    0x1d3406a1
  4096be:	push   edi
  4096bf:	sbb    DWORD PTR [ecx-0x6f],edi
  4096c2:	xor    al,0x63
  4096c4:	out    dx,al
  4096c5:	xchg   BYTE PTR [edi-0x7b],al
  4096c8:	int3   
  4096c9:	cmc    
  4096ca:	int    0xbc
  4096cc:	sub    DWORD PTR [ebx+edi*1],0x87e9e4b0
  4096d3:	sbb    bl,dh
  4096d5:	rol    WORD PTR [edi+0x187429e4],1
  4096dc:	repz bound ecx,QWORD PTR [ebx-0x57d43a4c]
  4096e3:	sbb    BYTE PTR [eax+0x72],bl
  4096e6:	push   0x3675c7fe
  4096eb:	sbb    bl,dh
  4096ed:	cs adc eax,ebx
  4096f0:	icebp  
  4096f1:	cs addr16 jg 0x409701
  4096f5:	jmp    0xed899bc6
  4096fa:	retf   
  4096fb:	aas    
  4096fc:	js     0x4096ea
  4096fe:	dec    esp
  4096ff:	push   edi
  409700:	or     al,0x94
  409702:	imul   esp,DWORD PTR [edi],0x7fcce874
  409708:	repz je 0x4096db
  40970b:	daa    
  40970c:	ror    DWORD PTR [edx],1
  40970e:	aaa    
  40970f:	sbb    BYTE PTR [edi],al
  409711:	sub    DWORD PTR [eax],eax
	...
  40971b:	add    cl,bl
  40971d:	mov    BYTE PTR [esi+edx*8-0x78],ah
  409721:	mov    esi,0x8bdede0c
  409726:	in     al,0xf2
  409728:	js     0x409742
  40972a:	repz ret 0xa7d6
  40972e:	clc    
  40972f:	add    cl,bl
  409731:	ret    0xff0c
  409734:	jecxz  0x4096bd
  409736:	in     al,0xc
  409738:	cmp    dh,al
  40973a:	repnz mov DWORD PTR [ebx-0x45],esi
  40973e:	repnz jmp FWORD PTR [ecx]
  409741:	imul   esi,DWORD PTR [edx],0x1
  409744:	out    0x7b,al
  409746:	add    DWORD PTR [ebp-0xd0edc],0xd887eba6
  409750:	dec    ecx
  409751:	lock add BYTE PTR [ebp-0xd0edc],0xb6
  409759:	lock mov eax,0xf2ef38b8
  40975f:	call   0x4cdac4
  409764:	aas    
  409765:	add    DWORD PTR [eax+0x4bef19fe],esi
  40976b:	rdmsr  
  40976d:	sbb    cl,BYTE PTR [eax+eax*1]
  409770:	mov    dh,0x8
  409772:	cdq    
  409773:	ret    0xeed8
  409776:	repnz mul DWORD PTR [ebx+edx*1+0x7e76fff3]
  40977e:	mov    BYTE PTR [ebx+0x0],al
  409784:	add    BYTE PTR [eax],al
  409786:	add    BYTE PTR [eax],al
  409788:	add    BYTE PTR [eax],al
  40978a:	jbe    0x40970f
  40978c:	or     al,0x8d
  40978e:	and    al,0x1f
  409790:	inc    ebx
  409791:	push   0x4dbecc
  409796:	into   
  409797:	dec    dh
  409799:	add    BYTE PTR [esi-0x76],dh
  40979c:	int3   
  40979d:	jne    0x409812
  40979f:	in     al,0xbf
  4097a1:	add    BYTE PTR [esi-0x7d],ah
  4097a4:	adc    DWORD PTR [ebp-0xd120c],0x5020c0bb
  4097ae:	sahf   
  4097af:	out    0x42,eax
  4097b1:	inc    ecx
  4097b2:	iret   
  4097b3:	sub    BYTE PTR [edi+0xf290c72],ah
  4097b9:	or     ecx,DWORD PTR [edi]
  4097bb:	push   esp
  4097bc:	or     eax,0xf2968e9
  4097c1:	add    BYTE PTR [eax],dl
  4097c3:	push   esp
  4097c4:	add    al,0xe8
  4097c6:	(bad)  
  4097c7:	dec    ecx
  4097c8:	call   0x670f:0x1be8d4ff
  4097cf:	mov    cl,0x47
  4097d1:	inc    ecx
  4097d2:	iret   
  4097d3:	in     eax,dx
  4097d4:	sbb    ecx,DWORD PTR [edi+esi*8]
  4097d7:	ins    DWORD PTR es:[edi],dx
  4097d8:	mov    bh,0xff
  4097da:	loopne 0x4097cd
  4097dc:	add    al,0x6a
  4097de:	iret   
  4097df:	xchg   ebp,eax
  4097e0:	sbb    al,0xc
  4097e2:	out    0x81,eax
  4097e4:	mov    bh,0xff
  4097e6:	enter  0x7cb3,0xc2
  4097ea:	rcr    DWORD PTR [ebp+0x8d9a],0x0
  4097f1:	add    BYTE PTR [eax],al
  4097f3:	add    BYTE PTR [eax],al
  4097f5:	add    BYTE PTR [eax],al
  4097f7:	add    BYTE PTR ds:0xa7503e85,bl
  4097fd:	std    
  4097fe:	mov    ch,0xff
  409800:	test   al,0xd8
  409802:	cdq    
  409803:	jne    0x4097cc
  409805:	mov    ebp,0xcb98141c
  40980a:	dec    BYTE PTR [edi-0x70]
  40980d:	rol    DWORD PTR [esi],cl
  40980f:	call   0xffdafe93
  409814:	ja     0x4097da
  409816:	mov    ds:0x2f7178ff,al
  40981b:	lea    ecx,ds:0x2385803d
  409821:	xchg   BYTE PTR [edx-0x104b301],bl
  409827:	jmp    ebx
  409829:	sub    ah,BYTE PTR [esi-0x6cafee]
  40982f:	inc    BYTE PTR [edx+0x40ff994c]
  409835:	jg     0x409814
  409837:	lea    ecx,[edi+edi*2]
  40983a:	in     eax,0x8
  40983c:	jnp    0xc7b4c45a
  409842:	and    al,0x4
  409844:	and    BYTE PTR [ecx+edi*8-0x4dc54155],cl
  40984b:	xchg   ebp,eax
  40984c:	adc    ah,cl
  40984e:	jo     0x4097e6
  409850:	or     BYTE PTR [esi],dl
  409852:	adc    eax,0xaa3aa6ac
  409857:	xchg   ebp,eax
  409858:	lahf   
  409859:	add    dl,BYTE PTR [eax]
  40985b:	cld    
	...
  409864:	add    BYTE PTR [eax],al
  409866:	lock xchg ecx,eax
  409868:	jmp    0x35abfb01
  40986d:	xchg   ebp,eax
  40986e:	pop    edx
  40986f:	xchg   DWORD PTR [edx-0x1ed548d1],ecx
  409875:	xchg   esp,eax
  409876:	pop    edx
  409877:	imul   edx,DWORD PTR ds:0x8d884295,0x30
  40987e:	ret    0x6a15
  409881:	lods   al,BYTE PTR ds:[esi]
  409882:	or     eax,0x4295522d
  409887:	sti    
  409888:	es xchg esi,eax
  40988a:	test   al,0x15
  40988c:	mov    ch,0x94
  40988e:	pop    edx
  40988f:	aam    0x4a
  409891:	xchg   ebp,eax
  409892:	cwde   
  409893:	sub    BYTE PTR [ebx+0x607fcfc2],al
  409899:	(bad)  
  40989a:	fdivr  st,st(2)
  40989c:	xor    edx,DWORD PTR [esi+0x4f2a1580]
  4098a2:	cmp    edx,DWORD PTR [esi]
  4098a4:	adc    dl,BYTE PTR [ebp+0x426df67]
  4098aa:	iret   
  4098ab:	adc    al,0x58
  4098ad:	pop    esp
  4098ae:	popa   
  4098af:	adc    eax,0x2cbdac0a
  4098b4:	repnz xchg esp,eax
  4098b6:	xchg   BYTE PTR [edx+0xc],al
  4098b9:	(bad)  
  4098bb:	stos   BYTE PTR es:[edi],al
  4098bc:	xchg   ebp,edi
  4098be:	idiv   BYTE PTR [edi-0xd]
  4098c1:	pop    esp
  4098c2:	aas    
  4098c3:	push   ss
  4098c4:	jns    0x4098bf
  4098c6:	pop    ebx
  4098c7:	mov    eax,DWORD PTR [eax]
  4098c9:	(bad)  
	...
  4098d2:	add    BYTE PTR [eax],al
  4098d4:	fld    DWORD PTR [edi+0x15390ee4]
  4098da:	repz mov al,0xe
  4098dd:	jo     0x4098eb
  4098df:	adc    al,0x46
  4098e1:	and    al,0xf3
  4098e3:	cmp    al,0xd7
  4098e5:	daa    
  4098e6:	dec    ebp
  4098e7:	xchg   edx,eax
  4098e8:	pop    ebx
  4098e9:	adc    eax,0x75c8a907
  4098ee:	repz adc al,0xfb
  4098f1:	(bad)  
  4098f2:	in     al,0xa6
  4098f4:	es adc eax,0x8b3a39f3
  4098fa:	adc    al,0x86
  4098fc:	leave  
  4098fd:	imul   ebx,DWORD PTR [esi+edi*2-0x3f],0xffffff87
  409902:	in     al,0x37
  409904:	arpl   WORD PTR [ebx+esi*8],dx
  409907:	add    DWORD PTR [ebx-0x7a990cd3],0xe1e91841
  409911:	or     al,ah
  409913:	push   esi
  409914:	fldcw  WORD PTR [ebx-0xd]
  409917:	aam    0x9c
  409919:	adc    eax,0x79e6f579
  40991e:	repz mov ah,0xc4
  409921:	daa    
  409922:	mov    ch,0x36
  409924:	arpl   WORD PTR [ebx+esi*8],dx
  409927:	mov    ah,0x70
  409929:	adc    eax,0x8a63f979
  40992e:	add    BYTE PTR [ebx-0x1e86ea91],dl
  409934:	xor    al,0xdd
  409936:	repnz push cs
	...
  409940:	add    BYTE PTR [eax],al
  409942:	cmp    edx,DWORD PTR [ecx+edi*2]
  409945:	add    BYTE PTR [edx-0x15],bh
  409948:	js     0x40995a
  40994a:	push   ecx
  40994b:	add    BYTE PTR [eax],0x6a
  40994e:	and    ch,bl
  409950:	js     0x40995a
  409952:	into   
  409953:	(bad)  
  409954:	repz push DWORD PTR [ecx]
  409957:	ror    ch,cl
  409959:	adc    BYTE PTR [esi],ah
  40995b:	push   edi
  40995c:	xchg   esp,ebp
  40995e:	mov    ch,0x47
  409960:	cld    
  409961:	push   ebx
  409962:	fcomp  DWORD PTR [eax+0x27]
  409965:	fistp  DWORD PTR [ebp+0x16ff00c6]
  40996b:	add    DWORD PTR [ecx-0x8],ecx
  40996e:	inc    ecx
  40996f:	jbe    0x409975
  409971:	(bad)  
  409972:	stos   DWORD PTR es:[edi],eax
  409973:	out    dx,eax
  409974:	retf   0x5a45
  409977:	jnp    0x409985
  409979:	add    dh,ah
  40997b:	cld    
  40997c:	xor    BYTE PTR [ecx+0xcbaad],ch
  409982:	mov    edx,0xde7d8f4f
  409987:	jg     0x409a01
  409989:	push   esi
  40998a:	arpl   si,ax
  40998c:	cld    
  40998d:	push   eax
  40998e:	int3   
  40998f:	jl     0x4099f7
  409991:	add    ah,cl
  409993:	jnp    0x409924
  409995:	jge    0x40994d
  409997:	jg     0x409a11
  409999:	add    eax,0xeb1c7911
  40999e:	mov    ah,0x75
  4099a0:	or     al,0x6a
  4099a2:	mov    dh,0x0
  4099a4:	dec    ecx
  4099a5:	clc    
	...
  4099ae:	add    BYTE PTR [eax],al
  4099b0:	ss out dx,al
  4099b2:	sbb    BYTE PTR [ecx+0xb0cbc5d],ch
  4099b8:	mov    dh,0x77
  4099ba:	and    eax,DWORD PTR [ebx+0x740beb33]
  4099c0:	lahf   
  4099c1:	xchg   edx,eax
  4099c2:	dec    ecx
  4099c3:	or     al,0xfd
  4099c5:	sar    ah,0x3b
  4099c8:	iret   
  4099c9:	and    BYTE PTR [esi],dl
  4099cb:	pop    ss
  4099cc:	or     al,0x85
  4099ce:	jae    0x409a45
  4099d0:	arpl   WORD PTR [esi-0x1bbbf7e3],cx
  4099d6:	sahf   
  4099d7:	jecxz  0x4099a6
  4099d9:	adc    eax,0x348a8b6b
  4099de:	sahf   
  4099df:	jne    0x409a20
  4099e1:	mov    cl,BYTE PTR [edi]
  4099e3:	(bad)  
  4099e4:	mov    edx,0xfe6972c
  4099e9:	sub    DWORD PTR [edi],ecx
  4099eb:	mov    ecx,DWORD PTR [edx+eiz*2]
  4099ee:	ds pop ebx
  4099f0:	push   es
  4099f1:	out    0xf2,eax
  4099f3:	(bad)  
  4099f4:	jnp    0x409983
  4099f6:	xchg   ebx,eax
  4099f7:	adc    DWORD PTR [ebx],0xffffffcd
  4099fa:	cmp    DWORD PTR [esi-0x68],edx
  4099fd:	rol    BYTE PTR [eax+edx*2-0x72],0x28
  409a02:	xchg   edi,eax
  409a03:	ins    BYTE PTR es:[edi],dx
  409a04:	push   cs
  409a05:	sub    DWORD PTR [edi],ecx
  409a07:	mov    eax,DWORD PTR [edi]
  409a09:	loop   0x409a4e
  409a0b:	cld    
  409a0c:	iret   
  409a0d:	sub    BYTE PTR [edi],cl
  409a0f:	add    ah,al
  409a11:	call   0x40d830
	...
  409a1e:	fdivr  DWORD PTR ds:0xcf41
  409a23:	jne    0x4099b5
  409a25:	hlt    
  409a26:	(bad)
  409a2a:	(bad)  
  409a2b:	xor    al,0xee
  409a2d:	mov    bh,BYTE PTR [edi+0xe503830]
  409a33:	sub    DWORD PTR [edx],edi
  409a35:	call   0x5002e6
  409a3a:	les    ebp,FWORD PTR [eax+0x1b]
  409a3d:	push   ds
  409a3e:	inc    esp
  409a3f:	ror    BYTE PTR [ebp+eax*2-0x13690775],0x8f
  409a47:	sub    BYTE PTR [edi],cl
  409a49:	push   eax
  409a4a:	js     0x409acb
  409a4c:	xor    al,BYTE PTR [esi+0x17e513f2]
  409a52:	aad    0xd7
  409a54:	jecxz  0x409a59
  409a56:	iret   
  409a57:	jg     0x4099fb
  409a59:	xor    esp,esi
  409a5b:	dec    eax
  409a5c:	es dec ebx
  409a5e:	iret   
  409a5f:	jg     0x409a46
  409a61:	add    ebp,DWORD PTR [eax+0xcbc9eb1]
  409a67:	lods   al,BYTE PTR ds:[esi]
  409a68:	outs   dx,BYTE PTR ds:[esi]
  409a69:	lahf   
  409a6a:	dec    esp
  409a6b:	cmp    edx,ebp
  409a6d:	test   edx,esi
  409a6f:	pushf  
  409a70:	ds inc ebx
  409a72:	iret   
  409a73:	jg     0x409ac6
  409a75:	test   BYTE PTR [ebp+0x54],0x4c
  409a79:	cmp    eax,0x17e57f8e
  409a7e:	(bad)  
  409a7f:	(bad)  
  409a80:	out    dx,eax
  409a81:	push   ds
	...
  409a8a:	add    BYTE PTR [eax],al
  409a8c:	xchg   esp,eax
  409a8d:	shl    ch,0x3
  409a90:	jp     0x409b0c
  409a92:	jge    0x409a97
  409a94:	iret   
  409a95:	jg     0x409a7c
  409a97:	mov    edx,0x8e28040c
  409a9c:	adc    DWORD PTR [edi-0x1b],edi
  409a9f:	leave  
  409aa0:	pop    DWORD PTR [eax+0x7d8fc9e5]
  409aa6:	in     eax,0xc9
  409aa8:	(bad)  
  409aa9:	jle    0x409a90
  409aab:	leave  
  409aac:	(bad)  
  409aae:	in     eax,0xc9
  409ab0:	(bad)  
  409ab2:	call   0xb54cad35
  409ab7:	sbb    eax,0x1de5a5cf
  409abc:	iret   
  409abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409abe:	in     eax,0x1d
  409ac0:	iret   
  409ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ac2:	in     eax,0x1b
  409ac4:	out    dx,eax
  409ac5:	jge    0x409aac
  409ac7:	add    esp,DWORD PTR ds:0x5a05df60
  409acd:	mov    ebx,0x10bb330c
  409ad2:	sbb    esp,eax
  409ad4:	mov    ebx,0x8cf20cbe
  409ad9:	mov    ecx,DWORD PTR [esi]
  409adb:	xor    BYTE PTR [edx-0x34e6b6c7],dl
  409ae1:	jg     0x409aef
  409ae3:	jmp    0x9a3d55c1
  409ae8:	aas    
  409ae9:	mov    edi,eax
  409aeb:	xchg   ebx,eax
  409aec:	int3   
  409aed:	adc    BYTE PTR [ecx],bl
  409aef:	add    BYTE PTR [eax],0x0
	...
  409afa:	add    edi,DWORD PTR [edi-0x74f31df4]
  409b00:	or     ebp,DWORD PTR [esi-0x16f3f077]
  409b06:	int3   
  409b07:	jg     0x409afc
  409b09:	pop    esp
  409b0a:	inc    edi
  409b0b:	adc    DWORD PTR [ecx],ebx
  409b0d:	cmp    al,0xda
  409b0f:	mov    esi,0xf89720c
  409b14:	lds    ebp,FWORD PTR [edx+0x6ae004c1]
  409b1a:	or     BYTE PTR [eax],cl
  409b1c:	and    DWORD PTR [ebx+edi*2],0x8fa164af
  409b23:	mov    esi,0x1dd9910c
  409b28:	repz xchg esi,eax
  409b2a:	pushf  
  409b2b:	test   ah,cl
  409b2d:	adc    eax,0x7170fcc5
  409b32:	fmul   DWORD PTR [ecx+0x10116c67]
  409b38:	pop    esp
  409b39:	add    DWORD PTR [ecx+0x51e90c3f],0xcfc7743f
  409b43:	leave  
  409b44:	dec    eax
  409b45:	pop    esi
  409b46:	fadd   QWORD PTR [eax-0x50c15346]
  409b4c:	add    edx,DWORD PTR [edi+0x5c1311]
  409b52:	cdq    
  409b53:	mov    dh,0x49
  409b55:	cld    
  409b56:	data16 jg 0x409b13
  409b59:	inc    ebp
  409b5a:	mov    ebp,0xb6034c
	...
  409b67:	add    BYTE PTR [ebx],dh
  409b69:	add    bl,BYTE PTR [edi+ecx*1+0x10]
  409b6d:	mov    edx,0xb67950f5
  409b72:	dec    ecx
  409b73:	clc    
  409b74:	es jg  0x409b32
  409b77:	inc    ebp
  409b78:	ror    BYTE PTR [ebx+eax*1-0x49],0x23
  409b7d:	call   0xed049add
  409b82:	arpl   bp,di
  409b84:	imul   edi,DWORD PTR [ebp-0x6f8c72f4],0x3b48e85c
  409b8e:	or     al,0x0
  409b90:	mov    ch,0x47
  409b92:	cmp    BYTE PTR [ebp-0x17a4000d],cl
  409b98:	mov    eax,0xb6000cc0
  409b9d:	dec    BYTE PTR [eax-0x74]
  409ba0:	out    0x73,al
  409ba2:	hlt    
  409ba3:	dec    edi
  409ba4:	mov    bh,0x7b
  409ba6:	in     al,0xed
  409ba8:	push   es
  409ba9:	add    bl,dh
  409bab:	call   0x337372
  409bb0:	pop    ds
  409bb1:	cmp    al,0x59
  409bb3:	mov    ecx,DWORD PTR [edx-0x6]
  409bb6:	(bad)  
  409bb7:	sub    al,0x49
  409bb9:	add    bl,dh
  409bbb:	push   ebx
  409bbc:	mov    cl,0x75
  409bbe:	or     al,0x6a
  409bc0:	mov    dh,0xfe
  409bc2:	js     0x409bcc
  409bc4:	dec    esi
  409bc5:	add    ebx,ebp
  409bc7:	jmp    FWORD PTR [ecx]
  409bc9:	lea    ecx,[ecx-0x4]
	...
  409bd4:	add    BYTE PTR [eax],al
  409bd6:	sahf   
  409bd7:	test   BYTE PTR [edi+ebp*8],cl
  409bda:	dec    eax
  409bdb:	(bad)  
  409bdc:	js     0x409be6
  409bde:	iret   
  409bdf:	shr    BYTE PTR [eax+edx*8-0x63ef4168],0xcf
  409be7:	sbb    BYTE PTR [edi],cl
  409be9:	lea    edx,[edx+0x39]
  409bec:	cmp    bh,0x80
  409bef:	jmp    0x5ee3f48a
  409bf4:	add    edi,0x4a
  409bf7:	stc    
  409bf8:	cmp    edi,0x88d68
  409bfe:	iret   
  409bff:	mov    ds:0x7e586085,eax
  409c04:	adc    DWORD PTR [eax+0x67],0xffffffbd
  409c08:	inc    ebx
  409c09:	add    bh,cl
  409c0b:	xor    DWORD PTR [eax+0x5da41d2b],esi
  409c11:	je     0x409c4b
  409c13:	push   ds
  409c14:	sub    bl,0xdc
  409c17:	cwde   
  409c18:	ret    0xa3ff
  409c1b:	and    eax,DWORD PTR [ebp+0x1]
  409c1e:	iret   
  409c1f:	sbb    BYTE PTR [edi],cl
  409c21:	or     edi,ebp
  409c23:	mov    ah,0xf
  409c25:	(bad)  
  409c26:	enter  0x4a18,0x41
  409c2a:	dec    esi
  409c2b:	inc    eax
  409c2c:	pop    DWORD PTR [eax]
  409c2e:	iret   
  409c2f:	sbb    BYTE PTR ds:0x1ad8c4e5,bl
  409c35:	push   ss
  409c36:	addr16 add al,0xf
	...
  409c41:	add    BYTE PTR [eax],al
  409c43:	add    bh,cl
  409c45:	fwait
  409c46:	test   BYTE PTR [eax-0x20],ah
  409c49:	cmc    
  409c4a:	adc    DWORD PTR [eax-0x28],0x13e7f073
  409c51:	jmp    0x1cf59bd7
  409c56:	adc    eax,0x82193500
  409c5b:	jne    0x409c24
  409c5d:	add    BYTE PTR [ecx-0x30],dl
  409c60:	mov    al,0x7f
  409c62:	push   0xffffff9b
  409c64:	call   0xd00e:0xff8e520c
  409c6b:	sti    
  409c6c:	mov    al,0x99
  409c6e:	xor    eax,0xe597908e
  409c73:	pop    es
  409c74:	iret   
  409c75:	jg     0x409cd4
  409c77:	lds    ebx,FWORD PTR [esi+ecx*1-0x54ad83c6]
  409c7e:	and    cl,BYTE PTR [esi+0x22a9770]
  409c84:	iret   
  409c85:	jg     0x409c99
  409c87:	pop    eax
  409c88:	add    ecx,DWORD PTR [edi]
  409c8a:	sbb    cl,BYTE PTR [esi+0x3f581e7]
  409c90:	iret   
  409c91:	xchg   edi,eax
  409c92:	in     eax,0x7
  409c94:	iret   
  409c95:	jg     0x409cb4
  409c97:	call   0x34261c1d
  409c9c:	cmp    ah,dl
  409c9e:	or     BYTE PTR [esi+0x17ea0e30],0xd7
  409ca5:	pop    ss
  409ca6:	dec    edx
  409ca7:	mov    ah,0x0
	...
  409cb1:	add    BYTE PTR [eax],ah
  409cb3:	push   cs
  409cb4:	dec    ebp
  409cb5:	(bad)  
  409cb6:	int3   
  409cb7:	jg     0x409c9e
  409cb9:	mov    WORD PTR [edx-0x55],ds
  409cbc:	retf   0x88d
  409cbf:	xchg   edi,eax
  409cc0:	in     al,0xf3
  409cc2:	add    BYTE PTR [esi],cl
  409cc4:	dec    ebp
  409cc5:	add    al,0xd3
  409cc7:	jg     0x409cae
  409cc9:	fwait
  409cca:	repz int3 
  409ccc:	in     al,0x3
  409cce:	jg     0x409cde
  409cd0:	pop    eax
  409cd1:	xor    al,ah
  409cd3:	or     eax,0x77628d9a
  409cd8:	(bad)  
  409cd9:	into   
  409cda:	add    BYTE PTR [esi],cl
  409cdc:	mov    bl,BYTE PTR [edx+edx*4+0x1f8d720b]
  409ce3:	or     eax,0x25b4fc0c
  409ce8:	neg    BYTE PTR [esi-0x471bf2be]
  409cee:	pop    edx
  409cef:	or     eax,0xa8486cf3
  409cf4:	repz push esi
  409cf6:	dec    edx
  409cf7:	mov    al,0x64
  409cf9:	push   ecx
  409cfa:	sar    BYTE PTR [esi+0x203c510c],cl
  409d00:	repz ds add al,0x3
  409d04:	pop    eax
  409d05:	ss dec edx
  409d07:	or     eax,0xcb76c8f
  409d0c:	repz rcl DWORD PTR es:[ebx-0x57ef95b7],cl
  409d14:	repz push ss
	...
  409d1e:	add    BYTE PTR [eax],al
  409d20:	dec    edx
  409d21:	je     0x409da1
  409d23:	int    0x4f
  409d25:	add    edx,DWORD PTR [esi+eax*1+0x5a]
  409d29:	or     eax,0xa799fe08
  409d2e:	repz test BYTE PTR [ebx+0xd],0x79
  409d33:	loope  0x409d89
  409d35:	aad    0xc2
  409d37:	out    0x5b,al
  409d39:	add    DWORD PTR [ecx-0xcf2adbf],esp
  409d3f:	in     eax,dx
  409d40:	mov    dh,0xc
  409d42:	repz push esp
  409d44:	adc    esp,DWORD PTR ds:0xd5bb6aa
  409d4a:	repz je 0x409d01
  409d4d:	or     al,0xf3
  409d4f:	mov    dh,0x4b
  409d51:	rcl    DWORD PTR [edi-0x52],cl
  409d54:	inc    ebx
  409d55:	or     eax,0x24eb1cf3
  409d5a:	stos   DWORD PTR es:[edi],eax
  409d5b:	scas   al,BYTE PTR es:[edi]
  409d5c:	push   ebx
  409d5d:	or     eax,0x7fb6e5e7
  409d62:	jmpw   0x30a9
  409d66:	add    al,0x0
  409d68:	pop    esi
  409d69:	mov    dh,0xc3
  409d6b:	inc    DWORD PTR [ecx-0x4]
  409d6e:	mov    eax,0xf2fc4154
  409d73:	call   0x336be6
  409d78:	xor    DWORD PTR [esi-0x3fe00b0],esi
  409d7e:	jecxz  0x409d3d
  409d80:	aam    0xfb
  409d82:	repnz sub eax,DWORD PTR [eax]
	...
  409d8d:	add    ch,bl
  409d8f:	push   0x80375048
  409d94:	in     al,0x3b
  409d96:	add    BYTE PTR [ecx+0x2ceb890c],al
  409d9c:	bnd jmp DWORD PTR [ecx-0x4ed34f01]
  409da3:	sti    
  409da4:	repnz add BYTE PTR [edx],bh
  409da7:	sbb    ch,BYTE PTR [ebx+0x30]
  409daa:	push   ss
  409dab:	ror    DWORD PTR [edi+edi*8],0xfb
  409daf:	sub    al,0xf2
  409db1:	call   ecx
  409db3:	call   0x80775b67
  409db8:	pop    es
  409db9:	sar    BYTE PTR [edx+0x76958006],0xfb
  409dc0:	bnd jmp esp
  409dc3:	clc    
  409dc4:	fild   DWORD PTR [ebx+0x1d]
  409dc7:	fnstsw WORD PTR [eax+0xc]
  409dca:	mov    bl,0xfe
  409dcc:	cmp    edi,edi
  409dce:	add    eax,edi
  409dd0:	pop    ebx
  409dd1:	call   0x4d53fc
  409dd6:	pushf  
  409dd7:	pop    ds
  409dd8:	add    BYTE PTR [ebp-0xd070a],0xd6
  409ddf:	clc    
  409de0:	js     0x409dea
  409de2:	ds dec ebp
  409de4:	ret    
  409de5:	inc    DWORD PTR [ecx-0x8]
  409de8:	js     0x409de6
  409dea:	iret   
  409deb:	cmc    
  409dec:	sbb    al,0x8
  409dee:	out    0xd3,eax
  409df0:	mov    dh,0xff
	...
  409dfa:	add    BYTE PTR [eax],al
  409dfc:	enter  0x2362,0xc9
  409e00:	lea    esp,ds:0x544550f
  409e06:	mov    esp,eax
  409e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e09:	xchg   edx,eax
  409e0a:	xchg   edi,edi
  409e0c:	pop    edx
  409e0d:	fmul   QWORD PTR [edx-0x4cb5fb0]
  409e13:	(bad)  
  409e14:	loop   0x409e77
  409e16:	xor    BYTE PTR [ecx-0x31],al
  409e19:	rcl    BYTE PTR [ecx],0xbe
  409e1c:	iret   
  409e1d:	sbb    dl,dh
  409e1f:	mov    edi,0xafa3d0
  409e24:	iret   
  409e25:	sbb    dh,cl
  409e27:	inc    ebp
  409e28:	ja     0x409e43
  409e2a:	str    edi
  409e2d:	pop    ecx
  409e2e:	dec    ebp
  409e2f:	hlt    
  409e30:	pusha  
  409e31:	and    cl,BYTE PTR [edi]
  409e33:	add    ch,ah
  409e35:	sbb    BYTE PTR [ecx],dl
  409e37:	add    BYTE PTR [edx-0x5c],al
  409e3a:	xchg   esp,eax
  409e3b:	test   DWORD PTR [eax-0x7e],0x9bcf6a38
  409e42:	dec    ebp
  409e43:	hlt    
  409e44:	lahf   
  409e45:	mov    ds:0x1a38f48d,eax
  409e4a:	xchg   BYTE PTR [eax+0x28],dl
  409e4d:	lods   al,BYTE PTR ds:[esi]
  409e4e:	cmp    bh,0x9a
  409e51:	sub    al,0x97
  409e53:	push   esp
  409e54:	pop    ecx
  409e55:	sbb    DWORD PTR [edi],ecx
  409e57:	or     ecx,DWORD PTR [edi]
  409e59:	mov    ch,0xd
  409e5b:	jmp    0x4fb792
	...
  409e68:	add    BYTE PTR [eax],al
  409e6a:	dec    esp
  409e6b:	mov    WORD PTR [ebx+0x7d1f8f7],ds
  409e71:	je     0x409e34
  409e73:	xchg   ebp,eax
  409e74:	inc    esp
  409e75:	in     al,dx
  409e76:	loopne 0x409ef7
  409e78:	stos   BYTE PTR es:[edi],al
  409e79:	mov    cl,al
  409e7b:	xchg   ebx,eax
  409e7c:	call   0x8e48310b
  409e81:	push   ecx
  409e82:	addr16 test eax,0xfccf4534
  409e88:	pop    edi
  409e89:	(bad)  
  409e8a:	mov    eax,0xa733720a
  409e8f:	sar    BYTE PTR [ebx],0x3
  409e92:	iret   
  409e93:	jbe    0x409e3a
  409e95:	nop    ebp
  409e98:	pop    edi
  409e99:	fwait
  409e9a:	cwde   
  409e9b:	or     dl,BYTE PTR [edx+0x33]
  409e9e:	dec    edx
  409e9f:	add    al,0x51
  409ea1:	xchg   edx,eax
  409ea2:	nop
  409ea3:	or     dh,BYTE PTR [ebp+0x4a7c028a]
  409ea9:	rcl    BYTE PTR [ecx+0x6703a4b7],1
  409eaf:	inc    esp
  409eb0:	adc    DWORD PTR [edx+0xf257670],ecx
  409eb6:	(bad)  
  409eb7:	clc    
  409eb8:	pop    edi
  409eb9:	xchg   ebx,eax
  409eba:	pop    eax
  409ebb:	or     dl,BYTE PTR [edx]
  409ebd:	sbb    ecx,esi
  409ebf:	jg     0x409ecb
  409ec1:	dec    ecx
  409ec2:	push   eax
  409ec3:	xchg   esp,eax
  409ec4:	in     eax,dx
  409ec5:	fwait
  409ec6:	nop
  409ec7:	cmp    DWORD PTR [edx],ecx
  409ec9:	mov    cl,BYTE PTR [esp+ecx*8+0x0]
  409ecd:	xchg   edx,eax
	...
  409ed6:	add    BYTE PTR [eax],al
  409ed8:	cmp    BYTE PTR [edx],cl
  409eda:	in     al,0x10
  409edc:	ret    
  409edd:	xchg   ebp,eax
  409ede:	in     eax,0x8a
  409ee0:	mov    ds:0x12d0dd77,al
  409ee5:	or     dl,dl
  409ee7:	popf   
  409ee8:	lds    edx,FWORD PTR [ebp+0x779a88e4]
  409eee:	int    0xdc
  409ef0:	sbb    cl,BYTE PTR [edx]
  409ef2:	retf   0x3a89
  409ef5:	pop    ss
  409ef6:	mov    edx,0xc09f889
  409efb:	jl     0x409f58
  409efd:	adc    dh,bl
  409eff:	scas   al,BYTE PTR es:[edi]
  409f00:	push   esi
  409f01:	xchg   esp,eax
  409f02:	add    al,0x91
  409f04:	mov    eax,ds:0x469ef339
  409f09:	aam    0xfb
  409f0b:	sahf   
  409f0c:	inc    esi
  409f0d:	or     ah,ah
  409f0f:	xor    DWORD PTR [ecx+ecx*1-0xd],edi
  409f13:	xchg   BYTE PTR [eax],al
  409f15:	or     ch,ah
  409f17:	rol    DWORD PTR [edi+0x9],1
  409f1a:	repz jbe 0x409edd
  409f1d:	or     esp,esp
  409f1f:	cmc    
  409f20:	adc    DWORD PTR [eax+0x7889300c],eax
  409f26:	or     al,0xb4
  409f28:	sbb    ebx,DWORD PTR [ecx*4-0xcee90d3]
  409f2f:	dec    esi
  409f30:	add    bl,al
  409f32:	lock cdq 
  409f34:	push   edi
  409f35:	xchg   ebx,eax
  409f36:	add    BYTE PTR [esi],bh
  409f38:	mov    BYTE PTR [edx],bh
  409f3a:	inc    esp
  409f3b:	test   al,0x0
	...
  409f45:	add    ah,cl
  409f47:	pop    ss
  409f48:	push   edi
  409f49:	ins    BYTE PTR es:[edi],dx
  409f4a:	sar    DWORD PTR [edi+0x7],cl
  409f4d:	sub    DWORD PTR [esi+0x4],esp
  409f50:	pop    edi
  409f51:	call   0xad0c1f22
  409f56:	inc    esp
  409f57:	or     BYTE PTR [ecx+ebp*8],0xcc
  409f5b:	inc    eax
  409f5c:	dec    ecx
  409f5d:	std    
  409f5e:	push   edi
  409f5f:	or     DWORD PTR [ecx+ebp*8],0xe9667fda
  409f66:	sar    BYTE PTR [edi+0x66],cl
  409f69:	jmp    0x3a39620f
  409f6e:	cwde   
  409f6f:	add    bh,al
  409f71:	(bad)  
  409f72:	inc    edi
  409f73:	or     DWORD PTR [esi+edx*8-0x3f],ebx
  409f77:	pop    es
  409f78:	repz push esp
  409f7a:	push   edi
  409f7b:	sbb    BYTE PTR [ecx],ah
  409f7d:	add    BYTE PTR [ebx+0x7d],cl
  409f80:	or     al,0xb
  409f82:	es jns 0x409f8e
  409f85:	jmp    0x4d1d9a
  409f8a:	mov    gs,WORD PTR [edx-0x809bebc]
  409f90:	js     0x409f9e
  409f92:	ds ja  0x409f6d
  409f95:	(bad)  
  409f96:	cmp    DWORD PTR [ebp-0x79],ecx
  409f99:	shr    BYTE PTR [ebx],1
  409f9b:	mov    bh,al
  409f9d:	test   DWORD PTR [ecx-0x9],0x665e525b
  409fa4:	fdivr  st,st(7)
  409fa6:	cmp    DWORD PTR [esi+0xf089],eax
	...
  409fb4:	and    eax,edi
  409fb6:	bnd call 0x336cae
  409fbc:	jl     0x40a03a
  409fbe:	fs inc edi
  409fc0:	push   edi
  409fc1:	mov    ebp,0xec63ff0c
  409fc6:	cli    
  409fc7:	dec    DWORD PTR [ecx]
  409fc9:	clc    
  409fca:	cmp    bh,cl
  409fcc:	ds mov ebp,0xd3a2e80c
  409fd2:	repnz (bad) 
  409fd4:	out    dx,eax
  409fd5:	mov    eax,ebp
  409fd7:	imul   DWORD PTR [ecx+0x3e0065f7]
  409fdd:	dec    esp
  409fde:	pop    ebp
  409fdf:	inc    ecx
  409fe0:	idiv   WORD PTR [eax-0xd081e10]
  409fe7:	inc    DWORD PTR [ebx+0x264143c7]
  409fed:	in     al,0xa9
  409fef:	sar    DWORD PTR [ecx],cl
  409ff1:	add    BYTE PTR [ebp-0xd07d57b],al
  409ff7:	(bad)  
  409ff8:	jl     0x409f7d
  409ffa:	fs pop ecx
  409ffc:	xlat   BYTE PTR ds:[ebx]
  409ffd:	ret    0xff0c
  40a000:	iret   
  40a001:	jmp    0x409f9a
  40a003:	test   DWORD PTR [eax],0x10358b39
  40a009:	dec    esi
  40a00a:	dec    ecx
  40a00b:	add    bh,ah
  40a00d:	lea    edi,[edi-0x72610f01]
  40a013:	call   0x83cb78f8
	...
  40a020:	add    BYTE PTR [eax],al
  40a022:	and    bh,dl
  40a024:	cmp    bh,0xd8
  40a027:	adc    eax,0xb34c4903
  40a02c:	xchg   esp,eax
  40a02d:	test   eax,0xf7407f6
  40a033:	call   0x8b:0x86c0e845
  40a03a:	cmp    eax,esi
  40a03c:	push   ss
  40a03d:	add    bh,cl
  40a03f:	test   DWORD PTR [edx-0x1],ecx
  40a042:	sbb    dl,BYTE PTR [ecx]
  40a044:	xchg   edi,eax
  40a045:	repz mov esp,DWORD PTR [esi-0x42a50075]
  40a04c:	cmp    edi,0xffffff88
  40a04f:	mov    dh,0x1d
  40a051:	or     BYTE PTR [edi-0x2a],dh
  40a054:	mov    bl,0xff
  40a056:	js     0x40a09e
  40a058:	pop    ebp
  40a059:	call   0xffcbeed6
  40a05e:	loop   0x40a080
  40a060:	xchg   edi,eax
  40a061:	cmp    DWORD PTR [edx+0x22ff8b5e],edx
  40a067:	jge    0x409fec
  40a069:	call   DWORD PTR [eax+0x6e]
  40a06c:	sbb    eax,0xb4423708
  40a071:	inc    DWORD PTR [eax+0x7e]
  40a074:	pop    ebp
  40a075:	in     al,0x40
  40a077:	push   es
  40a078:	mov    ch,al
  40a07a:	ret    0x8b68
  40a07d:	jmp    FWORD PTR [eax]
  40a07f:	dec    esp
  40a080:	xchg   esp,eax
  40a081:	mul    DWORD PTR [eax]
  40a083:	sub    dl,0x9b
	...
  40a08e:	add    BYTE PTR [eax],al
  40a090:	int    0x2f
  40a092:	rol    BYTE PTR [esi-0x713332f0],cl
  40a098:	or     BYTE PTR [edi],al
  40a09a:	int    0x8e
  40a09c:	adc    BYTE PTR [edi],al
  40a09e:	retf   0x4286
  40a0a1:	adc    BYTE PTR [edx+0x3006f086],bh
  40a0a7:	cld    
  40a0a8:	lock fsub QWORD PTR [edx+0x5006e086]
  40a0af:	xchg   ebx,eax
  40a0b0:	loopne 0x40a0b8
  40a0b2:	xchg   edx,eax
  40a0b3:	fwait
  40a0b4:	icebp  
  40a0b5:	ss call 0x839c:0x9dbcc886
  40a0bd:	add    eax,0x8cb8868a
  40a0c2:	jno    0x40a05f
  40a0c4:	mov    ch,0xca
  40a0c6:	in     al,0x3
  40a0c8:	xchg   esi,eax
  40a0c9:	inc    ecx
  40a0ca:	in     eax,dx
  40a0cb:	add    edi,edx
  40a0cd:	cli    
  40a0ce:	pop    eax
  40a0cf:	adc    BYTE PTR [ebx+0x2503df03],0x81
  40a0d6:	pop    edx
  40a0d7:	adc    bh,dl
  40a0d9:	pop    ss
  40a0da:	push   ebp
  40a0db:	mov    bh,0x80
  40a0dd:	push   es
  40a0de:	jl     0x40a120
  40a0e0:	jnp    0x40a079
  40a0e2:	lds    esi,FWORD PTR [ebx]
  40a0e4:	push   cs
  40a0e5:	cmp    BYTE PTR [edx],0x10
  40a0e8:	xlat   BYTE PTR ds:[ebx]
  40a0e9:	pop    ss
  40a0ea:	leave  
  40a0eb:	test   DWORD PTR [eax+0x6],esp
  40a0ee:	popf   
  40a0ef:	push   es
  40a0f0:	inc    eax
  40a0f2:	in     eax,0x86
	...
  40a0fc:	add    BYTE PTR [eax],al
  40a0fe:	fidiv  DWORD PTR [edi+0xd]
  40a101:	cs dec ecx
  40a103:	push   es
  40a104:	add    bl,BYTE PTR [ebx]
  40a106:	pusha  
  40a107:	scas   eax,DWORD PTR es:[edi]
  40a108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a109:	add    edi,DWORD PTR [eax]
  40a10b:	mov    ebp,?
  40a10d:	fwait
  40a10e:	test   DWORD PTR ds:0x9752f60c,eax
  40a114:	retf   0x8b99
  40a117:	jg     0x40a10c
  40a119:	pop    esp
  40a11a:	sbb    ebx,DWORD PTR [esi]
  40a11c:	and    ebx,esp
  40a11e:	dec    edx
  40a11f:	push   es
  40a120:	fs mov ebx,0xd0ce0cc0
  40a127:	ja     0x40a10d
  40a129:	or     edx,DWORD PTR [eax+0x6]
  40a12c:	repz push ecx
  40a12e:	loop   0x40a0de
  40a130:	dec    ebp
  40a131:	jmp    0xc1452d89
  40a136:	lock add dh,bl
  40a139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a13a:	push   edx
  40a13b:	mov    eax,?
  40a13d:	sahf   
  40a13e:	shl    BYTE PTR [edi-0x1c],0xb3
  40a142:	xchg   DWORD PTR ds:0x7c8da0f3,eax
  40a148:	or     al,0x1c
  40a14a:	ss adc al,0x64
  40a14d:	jmp    0x76f2b61e
  40a152:	fdiv   DWORD PTR [ebx-0xd]
  40a155:	hlt    
  40a156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a157:	sbb    eax,0x5525c5e
  40a15c:	lds    ebp,FWORD PTR [ebx]
  40a15e:	xchg   ebx,eax
  40a15f:	add    eax,0x6258
	...
  40a16c:	add    DWORD PTR [bx+di-0x23],esi
  40a170:	int3   
  40a171:	je     0x40a0fb
  40a173:	or     ecx,esp
  40a175:	jg     0x40a183
  40a177:	shl    BYTE PTR ds:[ebx-0x1c],0xb5
  40a17c:	ss add eax,0x8b8ce2f3
  40a182:	sbb    al,0x91
  40a184:	div    DWORD PTR [edi-0x74b416b3]
  40a18a:	add    BYTE PTR [ecx],al
  40a18c:	inc    ecx
  40a18d:	xor    dh,bl
  40a18f:	push   cs
  40a190:	les    edi,FWORD PTR [edx-0x7ea40000]
  40a196:	adc    DWORD PTR fs:[edi-0x3e],0xc
  40a19b:	push   0x4d50b0
  40a1a0:	xor    DWORD PTR [esi],esi
  40a1a2:	ret    0xe748
  40a1a5:	jnp    0x40a18b
  40a1a7:	sbb    DWORD PTR [esp+edi*8-0xe],edx
  40a1ab:	or     esi,DWORD PTR [esi]
  40a1ad:	jne    0x40a1c1
  40a1af:	push   eax
  40a1b0:	(bad)  
  40a1b1:	cli    
  40a1b2:	js     0x40a1c0
  40a1b4:	push   ds
  40a1b5:	(bad)  
  40a1b6:	fdivp  st(7),st
  40a1b8:	xor    DWORD PTR [ecx+0x5c],edx
  40a1bb:	jmp    FWORD PTR [ebx+0x3191eb03]
  40a1c1:	cld    
  40a1c2:	bnd call 0x336d12
  40a1c8:	ds fadd st(1),st
  40a1cb:	jmp    DWORD PTR [ecx+0x66]
  40a1ce:	or     al,0x68
	...
  40a1d8:	add    BYTE PTR [eax],al
  40a1da:	xor    eax,0xde004d52
  40a1df:	lea    ebx,[ebp+0x41]
  40a1e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1e3:	push   0xb6000e
  40a1e8:	in     al,0xe1
  40a1ea:	inc    edi
  40a1eb:	sti    
  40a1ec:	repnz or esp,esi
  40a1ef:	je     0x40a203
  40a1f1:	push   eax
  40a1f2:	push   esi
  40a1f3:	sti    
  40a1f4:	js     0x40a202
  40a1f6:	push   cs
  40a1f7:	push   edi
  40a1f8:	fdivp  st(7),st
  40a1fa:	adc    DWORD PTR [ecx+0x5c],edx
  40a1fd:	(bad)  
  40a1fe:	cmp    ecx,DWORD PTR [eax]
  40a200:	jmp    0x40a25b
  40a202:	mov    cl,0xfb
  40a204:	bnd call 0x336c5c
  40a20a:	push   cs
  40a20b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a20c:	ret    0xb1ff
  40a20f:	data16 or al,0x68
  40a212:	in     eax,0x51
  40a214:	dec    ebp
  40a215:	add    bh,cl
  40a217:	(bad)  
  40a218:	pop    ebp
  40a219:	push   ecx
  40a21a:	mov    ss,WORD PTR [esi]
  40a21c:	mov    BYTE PTR ds:0x4dce08,dh
  40a222:	daa    
  40a223:	scas   al,BYTE PTR es:[edi]
  40a224:	mov    esi,0xcf2128ff
  40a229:	je     0x40a1ec
  40a22b:	out    0x3e,al
  40a22d:	jmp    DWORD PTR [edx-0x2de98f6]
  40a233:	and    al,0x8f
  40a235:	push   eax
  40a236:	lahf   
  40a237:	sub    eax,0x75f707f5
  40a23c:	(bad)  
  40a23d:	inc    DWORD PTR [eax]
	...
  40a247:	add    al,bh
  40a249:	sub    eax,0xc4f0cdfb
  40a24e:	pop    edi
  40a24f:	outs   dx,BYTE PTR ds:[esi]
  40a250:	sbb    ebp,ecx
  40a252:	mov    gs,WORD PTR [edx-0x31]
  40a255:	mov    esi,0x168e518b
  40a25a:	out    0xb0,eax
  40a25c:	jle    0x40a2b5
  40a25e:	or     BYTE PTR [eax-0x33],ch
  40a261:	sbb    BYTE PTR [edi],cl
  40a263:	xor    BYTE PTR [edi-0x4700a697],0xe
  40a26a:	dec    edi
  40a26b:	je     0x40a23e
  40a26d:	push   0x1d22fed8
  40a272:	addr16 jmp 0x50d034f6
  40a278:	call   FWORD PTR [ecx-0x4e58f80b]
  40a27e:	mov    ?,edi
  40a280:	mov    cl,al
  40a282:	xor    ecx,esi
  40a284:	xor    BYTE PTR [edx-0x4576c9a0],0x8f
  40a28b:	push   0xffc7e7ec
  40a290:	imul   eax,esp,0x6897e802
  40a296:	(bad)  
  40a297:	(bad)  
  40a298:	(bad)  
  40a299:	jg     0x40a250
  40a29b:	sbb    dl,0x77
  40a29e:	sbb    eax,0x1a03494b
  40a2a3:	ins    BYTE PTR es:[edi],dx
  40a2a4:	in     eax,0x31
  40a2a6:	add    al,BYTE PTR [ebx+0x6bf98d38]
	...
  40a2b4:	add    BYTE PTR [eax],al
  40a2b6:	fnsave [ecx]
  40a2b8:	repnz adc BYTE PTR [esi],0x3e
  40a2bc:	in     eax,dx
  40a2bd:	add    edi,DWORD PTR [edx-0xa]
  40a2c0:	lock xchg BYTE PTR [ebx],dl
  40a2c3:	or     al,0x5f
  40a2c5:	add    al,0xa5
  40a2c7:	jge    0x40a29b
  40a2c9:	clc    
  40a2ca:	rcl    BYTE PTR [edi],1
  40a2cc:	adc    DWORD PTR [edi+0x0],ecx
  40a2cf:	add    ebp,DWORD PTR [eax+ecx*8-0xc]
  40a2d3:	xchg   edi,eax
  40a2d4:	loopne 0x40a2da
  40a2d6:	iret   
  40a2d7:	jg     0x40a2b6
  40a2d9:	or     DWORD PTR [ecx],ebx
  40a2db:	add    edi,DWORD PTR [edx+0x4d078a8c]
  40a2e1:	or     dh,cl
  40a2e3:	jg     0x40a2ca
  40a2e5:	sbb    BYTE PTR [edx+0x7],0x9d
  40a2e9:	test   BYTE PTR [esi-0x70f11a81],al
  40a2ef:	mov    edi,ecx
  40a2f1:	inc    eax
  40a2f2:	rol    DWORD PTR [eax+0x753803e5],cl
  40a2f8:	jb     0x40a2f2
  40a2fa:	mov    al,ds:0xb70bf002
  40a2ff:	mul    DWORD PTR [edx-0x7e]
  40a302:	cwde   
  40a303:	push   ss
  40a304:	std    
  40a305:	sbb    BYTE PTR [edx],0x8
  40a308:	pop    ebp
  40a309:	ret    0x29a
  40a30c:	pop    edx
  40a30d:	in     eax,dx
  40a30e:	test   al,0x17
  40a310:	cmc    
  40a311:	push   ebp
  40a312:	js     0x40a316
  40a314:	xchg   ebp,eax
  40a315:	cmp    dl,0x77
  40a318:	pop    ebp
  40a319:	icebp  
	...
  40a322:	add    BYTE PTR [eax],al
  40a324:	push   0x2
  40a326:	or     al,0x36
  40a328:	jb     0x40a392
  40a32a:	in     al,0xe9
  40a32c:	add    al,BYTE PTR [ebx]
  40a32e:	repz repnz or al,0x8c
  40a332:	sbb    BYTE PTR [ecx-0x16b250c3],dl
  40a338:	sbb    al,0x1a
  40a33a:	cmp    BYTE PTR [eax],0x4d
  40a33d:	add    bl,BYTE PTR [esi+eax*1+0x37]
  40a341:	jp     0x40a327
  40a343:	scas   al,BYTE PTR es:[edi]
  40a344:	dec    esi
  40a345:	add    dh,bl
  40a347:	sub    ecx,0x17
  40a34a:	in     eax,dx
  40a34b:	sbb    BYTE PTR [ebp+0x2],cl
  40a34e:	pop    es
  40a34f:	test   eax,0x4e646e17
  40a354:	sbb    al,0xbf
  40a356:	or     al,0x39
  40a358:	jae    0x40a2ee
  40a35a:	(bad)  
  40a35c:	dec    esi
  40a35d:	scas   eax,DWORD PTR es:[edi]
  40a35e:	repz cmp al,0xc3
  40a361:	pop    ss
  40a362:	cmp    al,0xbf
  40a364:	dec    esi
  40a365:	add    ah,BYTE PTR [esi-0x2b]
  40a368:	je     0x40a3a7
  40a36a:	(bad)  [esi+0x1dcc764e]
  40a370:	mov    bh,0x97
  40a372:	arpl   WORD PTR [eax],di
  40a374:	mov    WORD PTR [ecx],es
  40a376:	inc    ebx
  40a377:	sbb    DWORD PTR [ebp-0x5c710cd0],0x24f17902
  40a381:	outs   dx,DWORD PTR ds:[esi]
  40a382:	bnd jle 0x40a3d3
  40a385:	xchg   esi,eax
  40a386:	or     al,0x1
	...
  40a390:	add    BYTE PTR [eax],al
  40a392:	mov    ds:0xa4e94db0,eax
  40a397:	repz pop esp
  40a399:	test   al,0xcc
  40a39b:	add    BYTE PTR [ecx],bh
  40a39d:	cs fwait
  40a39f:	ror    BYTE PTR [ecx+eax*2],0x9a
  40a3a3:	xor    ebx,esi
  40a3a5:	dec    esi
  40a3a6:	mov    ds:0x7e007902,eax
  40a3ab:	xchg   ebp,eax
  40a3ac:	std    
  40a3ad:	std    
  40a3ae:	test   eax,0x8e0065fe
  40a3b3:	cld    
  40a3b4:	pop    esp
  40a3b5:	inc    ecx
  40a3b6:	adc    ax,0x5181
  40a3ba:	daa    
  40a3bb:	jge    0x40a3b0
  40a3bd:	xor    eax,0x4c33f9
  40a3c2:	into   
  40a3c3:	dec    edx
  40a3c4:	fdiv   st(7),st
  40a3c6:	leave  
  40a3c7:	jb     0x40a395
  40a3c9:	je     0x40a3db
  40a3cb:	test   BYTE PTR [eax-0xc],0x29
  40a3cf:	or     bh,bh
  40a3d1:	jmp    DWORD PTR [ebx+0x2bb1e474]
  40a3d7:	add    bl,dh
  40a3d9:	push   DWORD PTR [ebx-0x79]
  40a3dc:	in     al,0x1
  40a3de:	cmp    eax,DWORD PTR [eax]
  40a3e0:	repz push 0xfffffff6
  40a3e3:	adc    al,0x7b
  40a3e5:	push   ecx
  40a3e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3e7:	jnp    0x40a44d
  40a3e9:	mov    cl,0xd7
  40a3eb:	cmp    al,0xf3
  40a3ed:	(bad)  
  40a3ee:	jecxz  0x40a39f
  40a3f0:	inc    esp
  40a3f1:	inc    ecx
  40a3f2:	not    BYTE PTR [esi+ecx*1+0xd0]
  40a3f9:	add    BYTE PTR [eax],al
  40a3fb:	add    BYTE PTR [eax],al
  40a3fd:	add    BYTE PTR [eax],al
  40a3ff:	add    BYTE PTR [ecx],ch
  40a401:	add    BYTE PTR [edi+edi*8-0x4d],bl
  40a405:	jae    0x40a3eb
  40a407:	mov    al,ds:0x6af2ff6b
  40a40c:	mov    dh,0x14
  40a40e:	mov    ss,WORD PTR [ecx-0x19]
  40a411:	jnp    0x40a477
  40a413:	mov    cl,0xd7
  40a415:	cmp    al,0xf3
  40a417:	(bad)  
  40a418:	arpl   WORD PTR [edi-0x6b49bebc],bp
  40a41e:	out    dx,al
  40a41f:	iret   
  40a420:	sub    DWORD PTR [eax],eax
  40a422:	pop    es
  40a423:	shl    BYTE PTR [edx+0x66],0x85
  40a427:	inc    ebp
  40a428:	and    al,BYTE PTR [eax]
  40a42a:	jns    0x40a420
  40a42c:	iret   
  40a42d:	test   eax,0x366707fa
  40a432:	jb     0x40a433
  40a434:	jo     0x40a3ef
  40a436:	cli    
  40a437:	repz ja 0x40a3c0
  40a43a:	inc    ebx
  40a43b:	jmp    DWORD PTR [eax+0x3c]
  40a43e:	punpckhbw mm2,mm7
  40a441:	out    0xcd,eax
  40a443:	(bad)  
  40a444:	call   0xcf8182d1
  40a449:	out    dx,al
  40a44a:	or     BYTE PTR [eax],al
  40a44c:	iret   
  40a44d:	xchg   esi,eax
  40a44e:	addr16 mov dl,0x8
  40a451:	jno    0x40a3df
  40a453:	push   eax
  40a454:	xor    BYTE PTR [ebx+0x37fe807],al
  40a45a:	jae    0x40a45b
  40a45c:	mov    ch,0x16
  40a45e:	out    0x82,eax
  40a460:	jle    0x40a439
  40a462:	push   cs
  40a463:	push   0x0
  40a468:	add    BYTE PTR [eax],al
  40a46a:	add    BYTE PTR [eax],al
  40a46c:	add    BYTE PTR [eax],al
  40a46e:	inc    ecx
  40a46f:	inc    edi
  40a470:	leave  
  40a471:	push   DWORD PTR [eax+0x14]
  40a474:	str    WORD PTR [edi+0x3e]
  40a478:	lahf   
  40a479:	iret   
  40a47a:	clc    
  40a47b:	xor    BYTE PTR [edi],al
  40a47d:	sar    BYTE PTR [ebx+0x20],0x80
  40a481:	inc    ebp
  40a482:	jecxz  0x40a444
  40a484:	hlt    
  40a485:	repz loopne 0x40a4ca
  40a488:	add    al,ch
  40a48a:	mov    esi,0xd0ff72d3
  40a48f:	bound  esi,QWORD PTR [eax+ebp*8+0x2e]
  40a493:	sub    eax,0xe935ff73
  40a498:	out    0x77,al
  40a49a:	push   ds
  40a49b:	test   al,0x8
  40a49d:	push   0xffc9987e
  40a4a2:	xor    bl,ch
  40a4a4:	push   cs
  40a4a5:	add    BYTE PTR [edi+0x1],cl
  40a4a8:	out    dx,eax
  40a4a9:	into   
  40a4aa:	cwde   
  40a4ab:	outs   dx,BYTE PTR ds:[esi]
  40a4ac:	fdivr  st,st(6)
  40a4ae:	sbb    al,BYTE PTR [eax-0x3319403]
  40a4b4:	push   ecx
  40a4b5:	jg     0x40a4ac
  40a4b7:	jg     0x40a486
  40a4b9:	sbb    BYTE PTR [esi],0x41
  40a4bc:	in     eax,0xeb
  40a4be:	aas    
  40a4bf:	push   ecx
  40a4c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4c1:	add    esi,edi
  40a4c3:	and    ebp,0xa0e84f03
  40a4c9:	dec    esi
  40a4ca:	pop    eax
  40a4cb:	(bad)  
  40a4cc:	in     eax,dx
  40a4cd:	inc    ebx
  40a4ce:	fist   DWORD PTR [ebp+0xc97c]
	...
  40a4dc:	cmp    al,0xff
  40a4de:	xchg   edi,eax
  40a4df:	ja     0x40a521
  40a4e1:	jne    0x40a4d0
  40a4e3:	imul   ecx,DWORD PTR ds:0x307f01fc,0x75
  40a4ea:	icebp  
  40a4eb:	imul   edi,DWORD PTR [ebp+0x207ef1cb],0x75
  40a4f2:	stc    
  40a4f3:	jle    0x40a497
  40a4f5:	xchg   DWORD PTR ds:0xe9ff0689,ecx
  40a4fb:	dec    esp
  40a4fc:	or     eax,0x55d8e584
  40a501:	in     al,dx
  40a502:	dec    esp
  40a503:	add    al,0xcf
  40a505:	out    dx,al
  40a506:	cmp    BYTE PTR [esi+0x7a],0x8b
  40a50a:	retf   0xd0f8
  40a50d:	out    0xaf,eax
  40a50f:	je     0x40a4f1
  40a511:	(bad)  
  40a512:	stos   DWORD PTR es:[edi],eax
  40a513:	inc    ecx
  40a514:	(bad)  
  40a515:	jg     0x40a52f
  40a517:	mov    esp,ebx
  40a519:	add    BYTE PTR [ecx-0x6e013649],ah
  40a51f:	inc    esi
  40a520:	dec    edx
  40a521:	aaa    
  40a522:	fwait
  40a523:	jle    0x40a4dd
  40a525:	jg     0x40a50c
  40a527:	add    ecx,edi
  40a529:	or     ah,BYTE PTR [eax]
  40a52b:	adc    ah,dl
  40a52d:	mov    edi,0xb74f08f8
  40a532:	or     al,0xe9
  40a534:	xchg   edi,eax
  40a535:	and    ebp,0x10
  40a538:	retf   0xc7f
  40a53b:	xchg   WORD PTR [edx+0xf9e4],cx
	...
  40a54a:	sbb    edi,edi
  40a54c:	repnz loop 0x40a55b
  40a54f:	jne    0x40a554
  40a551:	shl    ecx,0x4e
  40a554:	dec    ebp
  40a555:	jmp    0x51411a43
  40a55a:	xchg   edx,eax
  40a55b:	int    0xf2
  40a55d:	ss in  eax,0x8c
  40a560:	fs xor eax,0x260c3f81
  40a566:	inc    edi
  40a567:	mov    ah,ah
  40a569:	ficom  WORD PTR [ecx+0x4760f2fe]
  40a56f:	aaa    
  40a570:	repnz push cs
  40a572:	mov    cl,0x67
  40a574:	xor    ch,al
  40a576:	int3   
  40a577:	jg     0x40a4fa
  40a579:	fs mov ?,ebp
  40a57c:	repnz idiv ch
  40a57f:	in     eax,0xba
  40a581:	and    dl,BYTE PTR [ecx-0x72937f02]
  40a587:	std    
  40a588:	repnz ficomp WORD PTR [ebx]
  40a58b:	std    
  40a58c:	mov    eax,0xf2fe7991
  40a591:	shl    DWORD PTR [ebp+esi*1+0xc],0xe9
  40a596:	push   ebp
  40a597:	add    al,0xb0
  40a599:	mov    edi,0xe64bfe62
  40a59e:	push   eax
  40a59f:	cli    
  40a5a0:	or     ebp,ecx
  40a5a2:	int3   
  40a5a3:	or     al,0x99
  40a5a5:	stos   DWORD PTR es:[edi],eax
  40a5a6:	dec    ecx
  40a5a7:	std    
  40a5a8:	repnz xchg esi,eax
  40a5aa:	int    0x8f
  40a5ac:	or     al,0xe9
	...
  40a5b6:	add    BYTE PTR [eax],al
  40a5b8:	int3   
  40a5b9:	jae    0x40a624
  40a5bb:	pop    esp
  40a5bc:	lea    ebp,[ecx+0x69be005c]
  40a5c2:	inc    ebx
  40a5c3:	inc    ecx
  40a5c4:	mov    dh,0x69
  40a5c6:	retf   0xa6b6
  40a5c9:	add    DWORD PTR [edi],0xe5869bc0
  40a5cf:	mov    cl,0x76
  40a5d1:	or     DWORD PTR [ecx*4-0xdbe05],0x2c4e0d21
  40a5dc:	ss jmp 0x8177f5c8
  40a5e2:	in     al,0xa9
  40a5e4:	fadd   DWORD PTR [ebx-0xb59f4f4]
  40a5ea:	pop    es
  40a5eb:	jmp    0x4d29ea
  40a5f0:	pop    esi
  40a5f1:	sub    BYTE PTR [ecx+eax*2+0x36],al
  40a5f5:	jl     0x40a670
  40a5f7:	or     al,0xce
  40a5f9:	cmp    edx,eax
  40a5fb:	inc    ecx
  40a5fd:	or     al,0x99
  40a5ff:	ret    0x7ad0
  40a602:	repz lea eax,[ebp+ebp*4+0x5e]
  40a607:	push   eax
  40a608:	into   
  40a609:	jge    0x40a5cd
  40a60b:	jmp    DWORD PTR [ecx]
  40a60d:	shl    ecx,1
  40a60f:	jne    0x40a617
  40a611:	shl    ecx,1
  40a613:	jne    0x40a613
  40a615:	push   0x7c21ff1e
  40a61a:	in     al,0xf9
	...
  40a624:	add    BYTE PTR [eax],al
  40a626:	sub    al,0x7c
  40a628:	repz jmp 0x40a5c0
  40a62b:	or     al,0x4e
  40a62d:	sub    al,0x5f
  40a62f:	add    eax,0x7c21feb8
  40a634:	fs std 
  40a636:	mov    bh,0xc0
  40a638:	repnz (bad) 
  40a63a:	sub    esi,DWORD PTR ds:0x6861fff2
  40a640:	pop    esi
  40a641:	mov    bh,0xcf
  40a643:	out    0xe,al
  40a645:	or     ecx,DWORD PTR [edi+0x7467ca92]
  40a64b:	scas   al,BYTE PTR es:[edi]
  40a64c:	iret   
  40a64d:	jmp    DWORD PTR [ecx+0x2be802f3]
  40a653:	and    eax,0xb390ff70
  40a658:	mov    ebx,0xdf6588fe
  40a65d:	out    0x3b,eax
  40a65f:	lods   al,BYTE PTR ds:[esi]
  40a660:	jo     0x40a661
  40a662:	pop    ds
  40a663:	aaa    
  40a664:	mov    WORD PTR [ebp-0x21],?
  40a667:	out    0xfa,al
  40a669:	or     al,0xf7
  40a66b:	mov    ds:0x16cf40de,al
  40a670:	and    ah,BYTE PTR [bx+si]
  40a673:	out    0xe,al
  40a675:	jmp    0x40a641
  40a677:	outs   dx,BYTE PTR ds:[esi]
  40a678:	push   cs
  40a679:	add    bh,cl
  40a67b:	out    0xd4,al
  40a67d:	or     cl,BYTE PTR [edi]
  40a67f:	adc    al,BYTE PTR [esi]
  40a681:	push   edx
  40a682:	cmp    BYTE PTR [ebx],bl
  40a684:	pop    es
  40a685:	call   0xffb132e3
	...
  40a692:	add    BYTE PTR [eax],al
  40a694:	aaa    
  40a695:	pop    edx
  40a696:	inc    ebp
  40a697:	jmp    DWORD PTR [eax]
  40a699:	imul   ecx,DWORD PTR [edx+0x76f519c2],0x50
  40a6a0:	adc    BYTE PTR [ebx-0x1af7014d],dh
  40a6a6:	pop    edi
  40a6a7:	add    BYTE PTR [ecx],bh
  40a6a9:	out    0xe,al
  40a6ab:	test   DWORD PTR [edi],ecx
  40a6ad:	in     eax,0x8b
  40a6af:	adc    al,dh
  40a6b1:	int3   
  40a6b2:	jbe    0x40a6b3
  40a6b4:	and    al,BYTE PTR [edx]
  40a6b6:	jbe    0x40a6b7
  40a6b8:	loopne 0x40a687
  40a6ba:	jp     0x40a671
  40a6bc:	iret   
  40a6bd:	out    0x75,al
  40a6bf:	mov    ch,0x17
  40a6c1:	sub    al,0x77
  40a6c3:	push   DWORD PTR [edi-0x3fb1fe80]
  40a6c9:	sti    
  40a6ca:	mov    ebx,0x307fcb46
  40a6cf:	(bad)  
  40a6d0:	mov    ds:0x9078a8ff,eax
  40a6d5:	inc    ebp
  40a6d6:	mov    DWORD PTR [edi+ecx*8],eax
  40a6d9:	jg     0x40a6c0
  40a6db:	jp     0x40a6ff
  40a6dd:	mov    WORD PTR [ebp+0x61fb81a7],cs
  40a6e3:	jg     0xacdb65d
  40a6e9:	cld    
  40a6ea:	push   ecx
  40a6eb:	icebp  
  40a6ec:	enter  0xcffa,0x77
  40a6f0:	fmul   DWORD PTR [bx]
  40a6f3:	jnp    0x40a75d
  40a6f5:	push   eax
  40a6f6:	dec    edx
  40a6f7:	icebp  
	...
  40a700:	add    BYTE PTR [eax],al
  40a702:	fs call 0xfb98f4fc
  40a708:	imul   eax,ecx,0x7ae46654
  40a70e:	ret    0x29fb
  40a711:	icebp  
  40a712:	enter  0xd8e7,0x79
  40a716:	cmp    bl,bh
  40a718:	sbb    ecx,esi
  40a71a:	xor    al,0xe8
  40a71c:	cld    
  40a71d:	dec    ebp
  40a71e:	sub    bl,bh
  40a720:	cmp    eax,DWORD PTR [esi-0x2d]
  40a723:	jg     0x40a6bd
  40a725:	mov    gs,WORD PTR [ebx]
  40a727:	add    DWORD PTR [ecx],esp
  40a729:	je     0x40a73c
  40a72b:	sti    
  40a72c:	loope  0x40a71b
  40a72e:	or     BYTE PTR [ecx-0x1a],ch
  40a731:	jp     0x40a7ad
  40a733:	xchg   ebp,ebx
  40a735:	xor    dl,BYTE PTR [eax]
  40a737:	sti    
  40a738:	(bad)  [edx+ecx*4-0x31ffb305]
  40a73f:	jg     0x40a726
  40a741:	mov    BYTE PTR [edx-0xd],cl
  40a744:	mov    dl,0x7a
  40a746:	fmul   DWORD PTR [edi+0xc]
  40a749:	rol    DWORD PTR [edi+0x35],0xc
  40a74d:	jmp    0x6d43672b
  40a752:	imul   edi,DWORD PTR [edi+0xc],0xd83f7e9
  40a759:	jmp    0x71cc322a
  40a75e:	int3   
  40a75f:	jg     0x40a76d
  40a761:	adc    DWORD PTR [edi],ebx
  40a763:	push   ecx
  40a764:	dec    ebp
  40a765:	jmp    0x40a76a
  40a76a:	add    BYTE PTR [eax],al
  40a76c:	add    BYTE PTR [eax],al
  40a76e:	add    BYTE PTR [eax],al
  40a770:	inc    edi
  40a771:	add    al,0xfb
  40a773:	ja     0x40a78a
  40a775:	sti    
  40a776:	pop    ebx
  40a777:	sub    DWORD PTR [esi-0x35],0x45366f2
  40a77e:	cld    
  40a77f:	pop    edi
  40a780:	cmc    
  40a781:	cli    
  40a782:	repnz pushf 
  40a784:	cld    
  40a785:	stc    
  40a786:	repnz dec esi
  40a788:	je     0x40a808
  40a78a:	or     eax,0x890ccce9
  40a78f:	ss (bad) 
  40a791:	cli    
  40a792:	repnz cdq 
  40a794:	sub    eax,DWORD PTR fs:[eax+ebp*4-0x34]
  40a799:	addr16 add eax,0x6afa0bbb
  40a79f:	jmp    0x40a7c3
  40a7a1:	aas    
  40a7a2:	or     al,0x1
  40a7a4:	or     DWORD PTR [ebx],esi
  40a7a6:	or     al,0xe9
  40a7a8:	fnstcw WORD PTR [edi-0x5cd2789]
  40a7ae:	jg     0x40a814
  40a7b0:	popf   
  40a7b1:	stc    
  40a7b2:	repnz idiv ch
  40a7b5:	clc    
  40a7b6:	js     0x40a799
  40a7b8:	je     0x40a7cf
  40a7ba:	icebp  
  40a7bb:	out    0x86,al
  40a7bd:	cli    
  40a7be:	mov    eax,0xf2fa75d9
  40a7c3:	inc    ecx
  40a7c4:	iret   
  40a7c5:	or     BYTE PTR [ecx+ebp*8],0x51
  40a7c9:	add    al,0xfb
  40a7cb:	add    BYTE PTR [eax],cl
  40a7cd:	js     0x40a7c2
  40a7cf:	push   eax
  40a7d0:	jle    0x40a7f4
  40a7d2:	inc    esp
  40a7d3:	inc    ecx
	...
  40a7dc:	add    BYTE PTR [eax],al
  40a7de:	out    0xe5,al
  40a7e0:	call   DWORD PTR [ecx-0x9]
  40a7e3:	and    DWORD PTR [edx+eax*1+0x4],0xffffffbd
  40a7e8:	repnz out 0xbe,eax
  40a7eb:	sub    cl,BYTE PTR [eax+eax*1]
  40a7ee:	lods   eax,DWORD PTR ds:[esi]
  40a7ef:	cmp    eax,0x83cc1178
  40a7f4:	add    DWORD PTR [ebp-0xc89df],0x87976b6
  40a7fe:	dec    esi
  40a7ff:	xlat   BYTE PTR ds:[ebx]
  40a800:	out    dx,eax
  40a801:	(bad)  
  40a802:	stc    
  40a803:	jbe    0x40a7be
  40a805:	lock call 0x27299b81
  40a80b:	inc    esi
  40a80c:	repz dec DWORD PTR [esp+ebp*4+0x76cb91e4]
  40a814:	repz or esi,DWORD PTR [esi+0x56816ef]
  40a81b:	int    0x4b
  40a81d:	add    BYTE PTR [esi],dh
  40a81f:	gs adc ebp,ecx
  40a822:	stc    
  40a823:	jbe    0x40a881
  40a825:	push   0x36
  40a827:	int    0xf1
  40a829:	jne    0x40a869
  40a82b:	gs ds std 
  40a82e:	fnstenv [esi-0x1c]
  40a831:	sbb    edi,ebp
  40a833:	jbe    0x40a828
  40a835:	push   0x4bccc4
  40a83a:	cmp    al,0x9b
  40a83c:	repz jne 0x40a86d
  40a83f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40a841:	inc    BYTE PTR [eax]
	...
  40a84b:	add    cl,bh
  40a84d:	ja     0x40a8b3
  40a84f:	rol    bh,cl
  40a851:	mov    esp,0x76c569f2
  40a856:	jns    0x40a860
  40a858:	iret   
  40a859:	mov    esi,0xc9e8fe8f
  40a85e:	out    0xd1,al
  40a860:	jle    0x40a809
  40a862:	or     BYTE PTR [edx-0x45],ch
  40a865:	cmp    edx,esp
  40a867:	pop    es
  40a868:	out    0x62,eax
  40a86a:	jne    0x40a86b
  40a86c:	enter  0xe229,0xfb
  40a870:	rcr    BYTE PTR [ebx+0x2118e800],0x74
  40a877:	inc    DWORD PTR [esi+0x3fff324]
  40a87d:	pop    esi
  40a87e:	imul   ebp,DWORD PTR [eax-0x31],0xffffffe6
  40a882:	arpl   WORD PTR [esi-0xf50c68],di
  40a888:	sbb    bl,bh
  40a88a:	data16 xlat BYTE PTR ds:[ebx]
  40a88c:	jns    0x40a8f7
  40a88e:	je     0x40a859
  40a890:	(bad)  
  40a891:	out    dx,al
  40a892:	push   cs
  40a893:	push   ebp
  40a894:	inc    esp
  40a895:	dec    edx
  40a896:	mov    ah,al
  40a898:	ja     0x40a843
  40a89a:	mov    dl,0xfb
  40a89c:	iret   
  40a89d:	out    0xe,al
  40a89f:	add    BYTE PTR [edx+0x2b],dl
  40a8a2:	jnp    0x40a8f4
  40a8a4:	out    0xda,eax
  40a8a6:	fadd   DWORD PTR [eax-0x31]
  40a8a9:	mov    cl,0xe2
  40a8ab:	or     ecx,DWORD PTR [eax-0xd]
  40a8ae:	inc    ebx
  40a8af:	dec    eax
	...
  40a8b8:	add    BYTE PTR [eax],al
  40a8ba:	mov    fs,esi
  40a8bc:	mov    dx,0x9904
  40a8c0:	je     0x40a8cd
  40a8c2:	bndldx bnd2,ds:0xe78e9289
  40a8c9:	add    bh,cl
  40a8cb:	xchg   ecx,eax
  40a8cc:	mov    ch,0xff
  40a8ce:	mov    ds:0x17757afa,al
  40a8d3:	icebp  
  40a8d4:	loopne 0x40a8dd
  40a8d6:	mul    DWORD PTR ds:0x7f00ff65
  40a8dc:	jmp    0xf04c:0x64e700f1
  40a8e3:	imul   DWORD PTR [ebx+0x387fd742]
  40a8e9:	mov    esi,ebx
  40a8eb:	std    
  40a8ec:	mov    al,ds:0xb1f7d9b0
  40a8f1:	aas    
  40a8f2:	dec    edx
  40a8f3:	aaa    
  40a8f4:	mov    ebx,0xe580c877
  40a8f9:	add    ecx,edi
  40a8fb:	or     ah,BYTE PTR [eax]
  40a8fd:	or     ah,al
  40a8ff:	mov    edi,0xb84f0118
  40a904:	in     eax,0xf0
  40a906:	shr    eax,cl
  40a908:	call   0x8ac07811
  40a90d:	icebp  
  40a90e:	enter  0xf7f6,0x7
  40a912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a913:	in     al,0xad
  40a915:	ja     0x40a89f
  40a917:	push   eax
  40a918:	adc    eax,0x5d87fa77
  40a91d:	fiadd  WORD PTR [eax]
	...
  40a927:	add    BYTE PTR [ecx-0x9],bh
  40a92a:	push   ecx
  40a92b:	ins    BYTE PTR es:[edi],dx
  40a92c:	mov    cl,0xc7
  40a92e:	pop    ecx
  40a92f:	ja     0x40a928
  40a931:	out    0x91,al
  40a933:	les    esp,FWORD PTR [eax-0xa]
  40a936:	scas   eax,DWORD PTR es:[edi]
  40a937:	pop    es
  40a938:	sar    BYTE PTR [di],1
  40a93b:	ja     0x40a98d
  40a93d:	or     DWORD PTR [eax-0x44],esp
  40a940:	dec    ecx
  40a941:	mul    DWORD PTR [ecx]
  40a943:	in     al,dx
  40a944:	add    al,BYTE PTR [ecx-0x2b5fc1b]
  40a94a:	es jbe 0x40a97d
  40a94d:	div    DWORD PTR [ebx+ebp*2+0x7701c797]
  40a954:	push   edx
  40a955:	std    
  40a956:	es jbe 0x40a971
  40a959:	not    DWORD PTR [esi+esi*2-0x8f3c7a6]
  40a960:	xor    esi,0x803d73e3
  40a966:	or     al,0x70
  40a968:	dec    edi
  40a969:	xor    al,0xf2
  40a96b:	fidivr WORD PTR [ecx+0x3f]
  40a96e:	add    ebp,DWORD PTR [ebp+0x49]
  40a971:	or     BYTE PTR [ecx+ebp*8],0x57
  40a975:	or     eax,0xf661c7ce
  40a97a:	cli    
  40a97b:	jmp    0x40a939
  40a97d:	jg     0x40a98b
  40a97f:	jmp    0x54c21c3c
  40a984:	push   cs
  40a985:	div    dl
  40a987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a988:	inc    edi
  40a989:	inc    ecx
  40a98a:	and    BYTE PTR [ecx],bh
	...
  40a994:	add    BYTE PTR [eax],al
  40a996:	mov    ds:0xd32842e8,eax
  40a99b:	out    0x5c,eax
  40a99d:	pop    edx
  40a99e:	int3   
  40a99f:	jg     0x40a9a8
  40a9a1:	test   eax,0x23e7809f
  40a9a6:	inc    esi
  40a9a7:	or     al,0xce
  40a9a9:	ja     0x40a9ac
  40a9ab:	test   DWORD PTR [eax+0x644fb72b],0xc3f9155
  40a9b5:	push   ecx
  40a9b6:	mov    eax,ds:0xd5e90c32
  40a9bb:	mov    edi,0x3ff5eb78
  40a9c0:	sbb    DWORD PTR [esi+ecx*1-0xa],0x41473ef2
  40a9c8:	and    BYTE PTR [eax+0x4f],ah
  40a9cb:	sub    esi,edx
  40a9cd:	cs mov ecx,0x13b1a767
  40a9d3:	div    cl
  40a9d5:	xchg   esp,eax
  40a9d6:	enter  0x2fe7,0x22
  40a9da:	mov    eax,ds:0x7054f2f6
  40a9df:	cmc    
  40a9e0:	repnz add cl,dl
  40a9e3:	shr    dl,cl
  40a9e5:	test   ch,bl
  40a9e7:	ins    DWORD PTR es:[edi],dx
  40a9e8:	repz dec DWORD PTR [ebx+0x7de85c92]
  40a9ef:	dec    ecx
  40a9f0:	repz push DWORD PTR [esi-0x18a0e35]
  40a9f7:	imul   ebp,DWORD PTR [ebp+0xfe],0x0
  40aa01:	add    BYTE PTR [eax],al
  40aa03:	add    BYTE PTR [ecx],al
  40aa05:	ins    BYTE PTR es:[edi],dx
  40aa06:	in     al,0x79
  40aa08:	sub    DWORD PTR [ebx+esi*8-0x73],ebp
  40aa0c:	imul   eax,DWORD PTR [ecx-0xe],0xffffffff
  40aa10:	adc    ebx,ecx
  40aa12:	icebp  
  40aa13:	mov    ch,0x42
  40aa15:	outs   dx,BYTE PTR ds:[esi]
  40aa16:	repz dec DWORD PTR [esi-0x59ff41ab]
  40aa1d:	jbe    0x40a9eb
  40aa1f:	(bad)  
  40aa21:	loopne 0x40aa14
  40aa23:	inc    DWORD PTR [ecx+0x6b]
  40aa26:	mov    ecx,0xf36b50bc
  40aa2b:	call   0x4cdc9e
  40aa30:	adc    DWORD PTR ds:0x6b01feb4,esp
  40aa36:	in     al,0x49
  40aa38:	sub    DWORD PTR [ebx-0xd],ebp
  40aa3b:	leave  
  40aa3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa3d:	xchg   DWORD PTR [edx*2-0x3b709803],ecx
  40aa44:	add    ch,BYTE PTR [ebx+0x79]
  40aa47:	or     al,0xe
  40aa49:	sti    
  40aa4a:	(bad)  
  40aa4b:	call   DWORD PTR [ecx]
  40aa4d:	or     DWORD PTR [ecx-0x4],ecx
  40aa50:	pop    ebp
  40aa51:	inc    ecx
  40aa52:	add    eax,DWORD PTR [edx+esi*4+0xe000c7b]
  40aa59:	iret   
  40aa5a:	pop    ebp
  40aa5b:	inc    ecx
  40aa5c:	es ins BYTE PTR es:[edi],dx
  40aa5e:	jns    0x40aa5c
  40aa60:	fisubr WORD PTR ds:0x8dcfffc6
  40aa66:	fsub   DWORD PTR [edi+0x0]
	...
  40aa71:	add    BYTE PTR [edx+edi*1-0x32],ch
  40aa75:	dec    DWORD PTR [eax+0x2707e37d]
  40aa7b:	dec    ebx
  40aa7c:	jp     0x40aa7d
  40aa7e:	or     BYTE PTR [edi+0x5],bh
  40aa81:	mov    DWORD PTR [eax],0x9c66e6e6
  40aa87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa88:	or     bh,bh
  40aa8a:	jp     0x40aa5e
  40aa8c:	popfw  
  40aa8e:	adc    eax,0x775077ce
  40aa93:	or     esp,ebx
  40aa95:	inc    eax
  40aa96:	iret   
  40aa97:	xchg   esi,eax
  40aa98:	jns    0x40ab0f
  40aa9a:	(bad)  
  40aa9b:	into   
  40aa9c:	sti    
  40aa9d:	std    
  40aa9e:	enter  0x672d,0xea
  40aaa2:	mov    DWORD PTR ds:0xb94f6878,esp
  40aaa8:	iret   
  40aaa9:	push   DWORD PTR [ecx+0x2be8748b]
  40aaaf:	and    DWORD PTR [eax-0x1],edi
  40aab2:	(bad)  
  40aab3:	jle    0x40aa62
  40aab5:	push   ebx
  40aab6:	push   cs
  40aab7:	out    0xde,eax
  40aab9:	(bad)  
  40aaba:	sbb    ch,bh
  40aabc:	push   dx
  40aabe:	mov    DWORD PTR [ebp+0x78],ebp
  40aac1:	call   0xffb8c75c
  40aac6:	out    0x0,eax
  40aac8:	fadd   QWORD PTR [eax-0x31]
  40aacb:	push   ebp
  40aacc:	loop   0x40aac9
  40aace:	ja     0x40ab01
  40aad0:	inc    ebp
  40aad1:	jmp    DWORD PTR [eax+0x36]
  40aad4:	out    0xa2,eax
	...
  40aade:	add    BYTE PTR [eax],al
  40aae0:	cld    
  40aae1:	daa    
  40aae2:	(bad)  
  40aae4:	push   eax
  40aae5:	sub    eax,DWORD PTR [edi]
  40aae7:	call   0xffb957ea
  40aaec:	aaa    
  40aaed:	(bad)  
  40aaee:	xor    bh,bh
  40aaf0:	cmp    BYTE PTR [edi+0x2a],bh
  40aaf3:	out    dx,al
  40aaf4:	xor    al,0xe7
  40aaf6:	inc    esp
  40aaf7:	cmp    eax,0x412bf428
  40aafc:	xlat   BYTE PTR ds:[ebx]
  40aafd:	jg     0x40aab7
  40aaff:	mov    BYTE PTR [ebx],ch
  40ab01:	add    BYTE PTR [ecx],ah
  40ab03:	ja     0x40ab7d
  40ab05:	imul   esp,ebp,0x6ff4cce9
  40ab0b:	or     esi,edi
  40ab0d:	mov    ebp,0x5f87425
  40ab12:	and    BYTE PTR [eax+0x44],dh
  40ab15:	mov    dl,0x36
  40ab17:	mov    esp,0x33657f8f
  40ab1c:	iret   
  40ab1d:	imul   ebx,DWORD PTR [esi],0xffffffdc
  40ab20:	mov    esp,0x78042451
  40ab25:	out    0xc8,eax
  40ab27:	mov    dh,0xcf
  40ab29:	jg     0x40ab19
  40ab2b:	inc    ebx
  40ab2c:	cmp    edx,DWORD PTR [edx-0x3008a3e6]
  40ab32:	test   eax,0x18bfc473
  40ab37:	sbb    bh,bh
  40ab39:	addr16 inc esi
  40ab3b:	xlat   BYTE PTR ds:[ebx]
  40ab3c:	jo     0x88631e77
  40ab42:	popf   
  40ab43:	pop    ebx
	...
  40ab4c:	add    BYTE PTR [eax],al
  40ab4e:	xchg   edx,eax
  40ab4f:	repz jno 0x40abae
  40ab52:	sbb    DWORD PTR [edx-0x507c8c87],edi
  40ab58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab59:	lods   eax,DWORD PTR ds:[esi]
  40ab5a:	js     0x40ab4f
  40ab5c:	imul   esi,DWORD PTR [ebx+0x7d],0xe20b2d22
  40ab63:	mov    esp,0x6d600dce
  40ab68:	in     eax,dx
  40ab69:	pop    ebx
  40ab6a:	pop    esi
  40ab6b:	repnz dec ecx
  40ab6d:	jae    0x40ab54
  40ab6f:	sahf   
  40ab70:	xor    bh,cl
  40ab72:	shl    bh,1
  40ab74:	or     ecx,DWORD PTR [esi-0x43]
  40ab77:	repnz bnd ret 
  40ab7a:	enter  0x78f2,0xf1
  40ab7e:	xchg   esp,eax
  40ab7f:	aam    0xf1
  40ab81:	push   ds
  40ab82:	pushf  
  40ab83:	sub    dl,BYTE PTR gs:[esi]
  40ab86:	es jnp 0x40ab6d
  40ab89:	cmp    bl,BYTE PTR [ebp-0x196e0d0e]
  40ab8f:	dec    ebp
  40ab90:	dec    ebp
  40ab91:	jmp    0x1451813
  40ab96:	push   ss
  40ab97:	hlt    
  40ab98:	repnz out dx,al
  40ab9a:	adc    al,0x4f
  40ab9c:	pop    esi
  40ab9d:	sub    bl,cl
  40ab9f:	bnd js 0x40ab93
  40aba2:	test   BYTE PTR [edi+0x675dd6f1],dh
  40aba8:	xchg   BYTE PTR [ebx],bh
  40abaa:	adc    dh,bl
  40abac:	icebp  
  40abad:	cmp    al,0xd3
  40abaf:	fisub  DWORD PTR [esi]
  40abb1:	mov    esp,0x0
  40abb6:	add    BYTE PTR [eax],al
  40abb8:	add    BYTE PTR [eax],al
  40abba:	add    BYTE PTR [eax],al
  40abbc:	cmp    eax,0x9a7163f3
  40abc1:	aas    
  40abc2:	or     al,0xae
  40abc4:	mov    bh,0x7a
  40abc6:	in     al,0x7
  40abc8:	repz repnz adc DWORD PTR ds:0x1de94d4e,ebp
  40abd1:	ins    DWORD PTR es:[edi],dx
  40abd2:	add    al,0x81
  40abd4:	ret    
  40abd5:	hlt    
  40abd6:	xacquire xchg BYTE PTR [esi+edx*4+0x5f],dh
  40abdb:	sub    bl,dl
  40abdd:	bnd js 0x40abc1
  40abe0:	and    al,0x7c
  40abe2:	icebp  
  40abe3:	outs   dx,BYTE PTR ds:[esi]
  40abe4:	std    
  40abe5:	bnd js 0x40ac4d
  40abe8:	std    
  40abe9:	ins    BYTE PTR es:[edi],dx
  40abea:	add    al,0x51
  40abec:	lahf   
  40abed:	mov    esi,0xc77d56f2
  40abf2:	int    0xe5
  40abf4:	int3   
  40abf5:	dec    esp
  40abf6:	xchg   DWORD PTR [eax],eax
  40abf8:	cli    
  40abf9:	stc    
  40abfa:	jo     0x40ac08
  40abfc:	ss jmp 0x75f3:0x8e83ff18
  40ac04:	sbb    ch,BYTE PTR [ebp+0x79]
  40ac07:	or     dh,bl
  40ac09:	cs out 0xff,eax
  40ac0c:	leave  
  40ac0d:	ins    DWORD PTR es:[edi],dx
  40ac0e:	jns    0x40ac1c
  40ac10:	into   
  40ac11:	add    ecx,ecx
  40ac13:	dec    ecx
  40ac15:	mov    bl,0xce
  40ac17:	or     al,0x26
  40ac19:	xlat   BYTE PTR ds:[ebx]
  40ac1a:	test   esp,ebp
  40ac1c:	jne    0x40ac58
  40ac1e:	lock push 0x0
	...
  40ac29:	add    dh,dh
  40ac2b:	ins    BYTE PTR es:[edi],dx
  40ac2c:	jns    0x40ac42
  40ac2e:	jmp    0x943faf1c
  40ac33:	jg     0x40ac19
  40ac35:	cdq    
  40ac36:	push   ds
  40ac37:	jo     0x40ac2c
  40ac39:	or     esi,DWORD PTR [esi]
  40ac3b:	not    DWORD PTR [esi-0x77]
  40ac3e:	mov    bl,0x6f
  40ac40:	fs adc al,0xb2
  40ac43:	mov    esi,0x7003fef2
  40ac48:	in     al,0xc
  40ac4a:	outs   dx,DWORD PTR ds:[esi]
  40ac4b:	outs   dx,DWORD PTR ds:[esi]
  40ac4c:	repz push 0xbee37da6
  40ac52:	imul   BYTE PTR [esi+0x79]
  40ac55:	or     BYTE PTR [esi],bh
  40ac57:	sbb    ebx,esi
  40ac59:	(bad)  
  40ac5a:	cmp    esp,edx
  40ac5c:	adc    DWORD PTR [edi+eiz*8+0x7b],edx
  40ac60:	repz jne 0x40acad
  40ac63:	push   esp
  40ac64:	std    
  40ac65:	enter  0x6f09,0x64
  40ac69:	add    DWORD PTR [esi+0x60],esi
  40ac6c:	mov    dl,0x50
  40ac6e:	jmp    0xfd28b75b
  40ac73:	outs   dx,BYTE PTR ds:[esi]
  40ac74:	repz (bad) 
  40ac76:	jle    0x40ac0b
  40ac78:	pop    eax
  40ac79:	inc    ecx
  40ac7a:	iret   
  40ac7b:	out    0x7b,al
  40ac7d:	jne    0x40acda
  40ac7f:	aas    
  40ac80:	push   esi
  40ac81:	enter  0x3a50,0xd0
  40ac85:	add    edi,ecx
  40ac87:	inc    ecx
  40ac88:	mov    esi,0xf7344050
  40ac8d:	out    0x0,eax
	...
  40ac97:	add    BYTE PTR [eax+0x30ff7da1],ch
  40ac9d:	adc    al,0x63
  40ac9f:	call   0xffbe4892
  40aca4:	push   ss
  40aca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aca6:	sbb    BYTE PTR [eax],al
  40aca8:	sbb    BYTE PTR [ebp+0x6c],0x68
  40acac:	fcom   DWORD PTR [edx]
  40acae:	into   
  40acaf:	dec    DWORD PTR [ecx]
  40acb1:	ins    BYTE PTR es:[edi],dx
  40acb2:	repz out 0x33,eax
  40acb5:	lahf   
  40acb6:	jge    0x40acb7
  40acb8:	clc    
  40acb9:	imul   ebx,DWORD PTR [edi],0x50
  40acbc:	out    0xd1,eax
  40acbe:	ss (bad) 
  40acc0:	call   0x7f54a696
  40acc5:	leave  
  40acc6:	stc    
  40acc7:	pop    es
  40acc8:	out    0x80,eax
  40acca:	jge    0x40accb
  40accc:	ror    BYTE PTR [esi-0x37],1
  40accf:	push   ebx
  40acd0:	push   cs
  40acd1:	out    0x7b,eax
  40acd3:	jne    0x40aca8
  40acd5:	mov    esi,0x21b8c870
  40acda:	jl     0x40ad51
  40acdc:	fbstp  TBYTE PTR [esi+0x1197d550]
  40ace2:	jl     0x40ace3
  40ace4:	sbb    dh,bl
  40ace6:	fdivp  st(6),st
  40ace8:	and    bl,bh
  40acea:	push   esi
  40aceb:	sbb    al,0x90
  40aced:	stc    
  40acee:	jnp    0x40acb9
  40acf0:	(bad)  
  40acf1:	(bad)  
  40acf2:	push   cs
  40acf3:	push   ebp
  40acf4:	push   esp
  40acf5:	cli    
  40acf6:	xchg   esp,eax
  40acf8:	jnp    0x40ad5b
  40acfa:	cli    
  40acfb:	or     eax,DWORD PTR [eax]
	...
  40ad05:	add    BYTE PTR [edi+0x7f],ah
  40ad08:	or     DWORD PTR [ebx],edi
  40ad0a:	push   0xdb43fdf0
  40ad0f:	inc    ebp
  40ad10:	ins    BYTE PTR es:[edi],dx
  40ad11:	(bad)  
  40ad12:	push   esp
  40ad13:	addr16 in eax,0x3
  40ad16:	pusha  
  40ad17:	xor    ebp,ebx
  40ad19:	pop    ss
  40ad1a:	mov    ds:0xba70e53e,eax
  40ad1f:	repz cmp esi,esi
  40ad22:	shl    bh,1
  40ad24:	ins    DWORD PTR es:[edi],dx
  40ad25:	jo     0x40ad57
  40ad27:	lock pushf 
  40ad29:	add    cl,bh
  40ad2b:	loopne 0x40ad7f
  40ad2d:	fcmovnb st,st(1)
  40ad2f:	dec    ebx
  40ad30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad31:	add    ebx,DWORD PTR [eax]
  40ad33:	push   0x1
  40ad35:	jo     0x40acd1
  40ad37:	xchg   DWORD PTR ds:0xf1f009f9,ebx
  40ad3d:	fcmove st,st(6)
  40ad3f:	jg     0x40ad4b
  40ad41:	mov    cl,0x67
  40ad43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad44:	cdq    
  40ad45:	ret    0xf0f0
  40ad48:	dec    edi
  40ad49:	jo     0x40ad33
  40ad4b:	imul   edi,ebp,0xd9f06e5b
  40ad51:	outs   dx,DWORD PTR ds:[esi]
  40ad52:	fsubr  DWORD PTR [ecx-0x3f]
  40ad55:	pop    esp
  40ad56:	pop    ecx
  40ad57:	mov    ebx,0xc2966fc9
  40ad5c:	cld    
  40ad5d:	add    ebx,DWORD PTR [edx]
  40ad5f:	sti    
  40ad60:	enter  0x9383,0xec
  40ad64:	dec    esi
  40ad65:	add    al,0x25
  40ad67:	test   DWORD PTR [edx+0xf9],ebp
  40ad6d:	add    BYTE PTR [eax],al
  40ad6f:	add    BYTE PTR [eax],al
  40ad71:	add    BYTE PTR [eax],al
  40ad73:	add    al,dl
  40ad75:	xlat   BYTE PTR ds:[ebx]
  40ad76:	mov    WORD PTR [ebp-0x60],es
  40ad79:	out    dx,eax
  40ad7a:	imul   ecx,ecx,0xffffff94
  40ad7d:	pop    eax
  40ad7e:	mov    bl,dl
  40ad80:	jo     0x415d48a3
  40ad86:	in     eax,0x6e
  40ad88:	mov    edx,0x92210bbe
  40ad8d:	out    dx,eax
  40ad8e:	icebp  
  40ad8f:	hlt    
  40ad90:	je     0x40ad79
  40ad92:	mov    eax,ds:0x63eef867
  40ad97:	push   esi
  40ad98:	jl     0x40adda
  40ad9a:	or     al,0xc1
  40ad9c:	sub    DWORD PTR [ebx+0x4d],edx
  40ad9f:	jmp    0xb2046285
  40ada4:	adc    ebp,edi
  40ada6:	icebp  
  40ada7:	mov    ah,0x44
  40ada9:	out    0x99,eax
  40adab:	aaa    
  40adac:	test   al,0xee
  40adae:	arpl   WORD PTR ds:0x910c401c,bp
  40adb4:	inc    ebp
  40adb5:	push   ebx
  40adb6:	dec    ebp
  40adb7:	jmp    0xa204626d
  40adbc:	adc    ebp,edi
  40adbe:	icebp  
  40adbf:	xchg   esp,eax
  40adc0:	adc    al,0xe7
  40adc2:	jno    0x40adcb
  40adc4:	js     0x40adb4
  40adc6:	arpl   ax,si
  40adc8:	sbb    BYTE PTR [eax+0xc],al
  40adcb:	adc    DWORD PTR [ebp+0x53],0xb461e94d
  40add2:	ret    
  40add3:	xor    DWORD PTR [edx],edx
  40add5:	out    dx,eax
  40add6:	icebp  
  40add7:	push   esp
	...
  40ade0:	add    BYTE PTR [eax],al
  40ade2:	jecxz  0x40adca
  40ade4:	imul   edx,edi,0xc463ee69
  40adea:	std    
  40adeb:	aas    
  40adec:	or     al,0x51
  40adee:	and    dl,BYTE PTR [ebx+0x4d]
  40adf1:	jmp    0x22046327
  40adf6:	xchg   edx,eax
  40adf7:	out    dx,al
  40adf8:	icebp  
  40adf9:	xor    al,0xb3
  40adfb:	out    0x41,al
  40adfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adfe:	cmp    edi,ebp
  40ae00:	arpl   WORD PTR [esi+0x10c3f7d],dx
  40ae06:	add    dl,BYTE PTR [ebx+0x4d]
  40ae09:	jmp    0x104632f
  40ae0e:	mov    esi,0x7bfef2c4
  40ae13:	jmp    0x68f3:0x5e0036ea
  40ae1a:	loop   0x40aded
  40ae1c:	dec    ebx
  40ae1d:	add    BYTE PTR [esi+0x53],bh
  40ae20:	pop    edi
  40ae21:	inc    ecx
  40ae22:	jbe    0x40ae81
  40ae24:	cmp    edi,ecx
  40ae26:	cs ret 
  40ae28:	repnz (bad) 
  40ae2a:	jnp    0x40ae16
  40ae2c:	jmp    0x3f68:0xf35d901e
  40ae33:	(bad)  
  40ae34:	dec    ebx
  40ae35:	add    BYTE PTR [esi],cl
  40ae37:	push   ebx
  40ae38:	pop    edi
  40ae39:	inc    ecx
  40ae3a:	es pop ebp
  40ae3c:	cmp    edi,ecx
  40ae3e:	pop    esi
  40ae3f:	ret    
  40ae40:	repnz (bad) 
  40ae42:	cmp    ebp,edx
  40ae44:	jmp    0x0:0x6
  40ae4b:	add    BYTE PTR [eax],al
  40ae4d:	add    BYTE PTR [eax],al
  40ae4f:	add    al,al
  40ae51:	pop    ebp
  40ae52:	repz push 0x4bd1cb
  40ae58:	pop    esi
  40ae59:	or     DWORD PTR [edi+0x41],ebx
  40ae5c:	test   cl,0xc
  40ae5f:	add    dh,ah
  40ae61:	add    ebx,esi
  40ae63:	jne    0x40ae53
  40ae65:	dec    ecx
  40ae66:	jecxz  0x40ae65
  40ae68:	icebp  
  40ae69:	pop    ebx
  40ae6a:	mul    DWORD PTR fs:[ebp+0x4167f2c2]
  40ae71:	ror    BYTE PTR [ebx+0x0],1
  40ae74:	mov    es,WORD PTR [ecx+0x5b36000c]
  40ae7a:	jns    0x40ae84
  40ae7c:	sahf   
  40ae7d:	cmp    al,0xf1
  40ae7f:	inc    DWORD PTR [ecx-0x18ac0934]
  40ae85:	and    DWORD PTR [ebx+ebp*4-0x1b],0xffffffc0
  40ae8a:	repnz addr16 mov ah,0x81
  40ae8e:	or     al,0x80
  40ae90:	iret   
  40ae91:	adc    eax,0x18a707fb
  40ae96:	arpl   di,di
  40ae98:	mov    BYTE PTR [edi-0x28f1ac09],cl
  40ae9e:	(bad)  
  40ae9f:	stos   BYTE PTR es:[edi],al
  40aea0:	sbb    al,0x98
  40aea2:	or     BYTE PTR [eax-0x33],ch
  40aea5:	(bad)  
  40aea6:	push   cs
  40aea7:	sub    BYTE PTR [eax-0x34],0xf6
  40aeab:	out    0x35,eax
  40aead:	dec    esp
  40aeae:	popa   
  40aeaf:	jmp    edi
  40aeb1:	cmp    ebx,ebp
  40aeb3:	inc    eax
	...
  40aebc:	add    BYTE PTR [eax],al
  40aebe:	iret   
  40aebf:	mov    esi,0xd68e535d
  40aec4:	(bad)  
  40aec5:	add    edi,ecx
  40aec7:	(bad)  
  40aec8:	mov    ?,edi
  40aeca:	ret    0x56de
  40aecd:	xchg   ebx,eax
  40aece:	xor    bl,BYTE PTR [esi+0x2a206861]
  40aed4:	into   
  40aed5:	jmp    FWORD PTR [eax-0x30bf2259]
  40aedb:	dec    BYTE PTR [eax+eax*1]
  40aede:	iret   
  40aedf:	push   esi
  40aee0:	popa   
  40aee1:	jne    0x40aeba
  40aee3:	mov    ?,esp
  40aee5:	cld    
  40aee6:	add    dh,ch
  40aee8:	(bad)  
  40aee9:	sti    
  40aeea:	pushf  
  40aeeb:	pop    ss
  40aeec:	punpckhbw mm3,QWORD PTR [esi]
  40aeef:	or     cl,dh
  40aef1:	push   DWORD PTR [eax-0x28]
  40aef4:	push   cs
  40aef5:	add    BYTE PTR [edi-0x32],cl
  40aef8:	stc    
  40aef9:	pop    es
  40aefa:	out    0x3b,eax
  40aefc:	arpl   di,di
  40aefe:	sar    BYTE PTR [esi],1
  40af00:	not    DWORD PTR [ebx+0xe]
  40af03:	xlat   BYTE PTR ds:[ebx]
  40af04:	(bad)  
  40af05:	rcr    BYTE PTR [eax+ebx*4],1
  40af08:	or     BYTE PTR [eax-0x33],ch
  40af0b:	(bad)  
  40af0c:	push   cs
  40af0d:	xor    BYTE PTR [eax+0x19e7f0b3],0x80
  40af14:	test   al,0x6c
  40af16:	mov    al,ds:0x226d0f59
  40af1b:	js     0x40aeaa
  40af1d:	cli    
  40af1e:	xchg   edx,eax
  40af1f:	in     al,dx
  40af20:	sbb    ecx,0x0
  40af26:	add    BYTE PTR [eax],al
  40af28:	add    BYTE PTR [eax],al
  40af2a:	add    BYTE PTR [eax],al
  40af2c:	lods   eax,DWORD PTR ds:[esi]
  40af2d:	in     al,dx
  40af2e:	out    dx,eax
  40af2f:	sti    
  40af30:	push   0x786c6fec
  40af35:	pop    ecx
  40af36:	fldcw  WORD PTR [edx+edi*8+0x77]
  40af3a:	lea    esi,[esi+0x6a]
  40af3d:	in     al,dx
  40af3e:	imul   ebp,DWORD PTR [edx+ebx*8-0x15],0xd7d0f651
  40af46:	push   ds
  40af47:	inc    esp
  40af48:	push   eax
  40af49:	in     al,dx
  40af4a:	sub    eax,DWORD PTR [ecx-0x2d]
  40af4d:	jg     0x40aedf
  40af4f:	js     0x40af84
  40af51:	add    BYTE PTR [eax-0x398fc701],dh
  40af57:	fist   DWORD PTR [esi+0x2803a453]
  40af5d:	jb     0x40af58
  40af5f:	pop    ebx
  40af60:	mov    es,ebp
  40af62:	adc    DWORD PTR [edi+edi*2+0x57],ebp
  40af66:	in     eax,0x3
  40af68:	and    BYTE PTR ds:0x77826cb5,ch
  40af6e:	sbb    eax,0xf1ebf7a3
  40af73:	pop    edx
  40af74:	dec    ecx
  40af75:	sar    ecx,0x6b
  40af78:	addr16 pop eax
  40af7a:	cdq    
  40af7b:	ret    0xece8
  40af7e:	dec    edi
  40af7f:	clc    
  40af80:	call   0xd8ac5b23
  40af85:	dec    esi
  40af86:	dec    ebp
  40af87:	add    eax,0xd482dccf
  40af8c:	leave  
  40af8d:	jne    0x40af8c
  40af8f:	pop    ebx
	...
  40af98:	add    BYTE PTR [eax],al
  40af9a:	inc    eax
  40af9b:	fdiv   DWORD PTR [ecx+0xc5da76b]
  40afa1:	stos   DWORD PTR es:[edi],eax
  40afa2:	and    al,0xeb
  40afa4:	arpl   WORD PTR [edi],bp
  40afa6:	jg     0x40afe8
  40afa8:	or     al,0xa6
  40afaa:	sahf   
  40afab:	ja     0x40af91
  40afad:	sahf   
  40afae:	push   cs
  40afaf:	jmp    0x40afa3
  40afb1:	cmp    DWORD PTR [ebx-0x7f],esi
  40afb4:	or     al,0x7e
  40afb6:	xor    eax,0x84fcf350
  40afbb:	jecxz  0x40b00e
  40afbd:	xchg   ecx,eax
  40afbe:	in     al,0xea
  40afc0:	jecxz  0x40afe7
  40afc2:	or     ebx,ebp
  40afc4:	repnz mov al,ds:0xbc0c7811
  40afca:	loope  0x40afa7
  40afcc:	repnz aam 0x60
  40afcf:	jecxz  0x40af69
  40afd1:	das    
  40afd2:	in     al,0xea
  40afd4:	push   es
  40afd5:	sub    DWORD PTR [edi],edi
  40afd7:	mov    DWORD PTR [esi+esi*4+0x10],esp
  40afdb:	inc    eax
  40afdc:	or     al,0x99
  40afde:	xchg   esp,eax
  40afdf:	mov    al,ds:0x4fa436ca
  40afe4:	pop    esp
  40afe5:	cs push ds
  40afe7:	and    esp,0xffffff95
  40afea:	mov    ch,0xea
  40afec:	repnz adc esp,eax
  40afef:	mov    ebp,0xbdd216f2
  40aff4:	add    ebp,ecx
  40aff6:	pop    ds
  40aff7:	neg    bh
  40aff9:	push   0xffffff8f
  40affb:	fbld   TBYTE PTR [ebp-0x17]
	...
  40b006:	add    BYTE PTR [eax],al
  40b008:	gs je  0x40b027
  40b00b:	idiv   bh
  40b00d:	jbe    0x40b002
  40b00f:	mov    ah,0xa5
  40b011:	aaa    
  40b012:	dec    ebp
  40b013:	jmp    0xdf0a359c
  40b018:	gs clc 
  40b01a:	dec    eax
  40b01b:	(bad)  
  40b01d:	jmp    0x78:0xeadf54f1
  40b024:	mov    edx,0xfecf3955
  40b029:	(bad)  
  40b02a:	repnz out 0xa2,eax
  40b02d:	aas    
  40b02e:	repz jmp FWORD PTR [edi]
  40b031:	shl    dh,0x6a
  40b034:	mov    dh,0x55
  40b036:	jns    0x40b050
  40b038:	cmp    edi,ebp
  40b03a:	push   es
  40b03b:	push   DWORD PTR [ebx-0x5b]
  40b03e:	inc    esp
  40b03f:	inc    ecx
  40b040:	jbe    0x40b088
  40b042:	loop   0x40b008
  40b044:	dec    ecx
  40b045:	push   ebp
  40b046:	test   DWORD PTR [ebp+0x4e],eax
  40b049:	addr16 dec ecx
  40b04b:	call   0x1cba0726
  40b050:	stc    
  40b051:	out    dx,eax
  40b052:	push   es
  40b053:	inc    ebx
  40b055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b056:	inc    esp
  40b057:	inc    ecx
  40b058:	inc    si
  40b05a:	fcmovb st,st(4)
  40b05c:	stc    
  40b05d:	push   ebp
  40b05e:	test   DWORD PTR [ebp-0x5a],eax
  40b061:	int3   
  40b062:	repnz inc BYTE PTR [ebx+0x2a75f39e]
  40b069:	push   ebp
  40b06a:	cmp    edi,ecx
	...
  40b074:	add    BYTE PTR [eax],al
  40b076:	outs   dx,BYTE PTR ds:[esi]
  40b077:	ret    
  40b078:	repnz out 0xf6,eax
  40b07b:	stos   BYTE PTR es:[edi],al
  40b07c:	repz call FWORD PTR [edi+0x738de6bf]
  40b083:	pop    esi
  40b084:	pop    esp
  40b085:	push   DWORD PTR [ebx]
  40b087:	mov    dh,bl
  40b089:	jne    0x40b0b5
  40b08b:	push   ebp
  40b08c:	cmp    edi,ecx
  40b08e:	ds ret 
  40b090:	repnz out 0x9e,eax
  40b093:	stos   BYTE PTR es:[edi],al
  40b094:	repz jmp FWORD PTR [edi-0x41]
  40b098:	out    dx,al
  40b099:	cmp    DWORD PTR [ebx+0x62],0xc
  40b09d:	(bad)  
  40b09f:	(bad)  
  40b0a1:	add    dh,ah
  40b0a3:	add    dh,BYTE PTR [ecx-0x8]
  40b0a6:	iret   
  40b0a7:	fdiv   st,st(3)
  40b0a9:	adc    DWORD PTR [ebp-0x29],0xe
  40b0ad:	add    BYTE PTR [esp+eax*2+0x7c],cl
  40b0b1:	add    al,cl
  40b0b3:	bound  ecx,QWORD PTR [eax+0x63d6cf00]
  40b0b9:	jne    0x40b0b2
  40b0bb:	sbb    ebx,esp
  40b0bd:	pop    es
  40b0be:	mov    bh,0xec
  40b0c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0c1:	call   FWORD PTR [eax-0x6f041cf6]
  40b0c7:	mov    eax,?
  40b0c9:	out    0xfb,eax
  40b0cb:	cmp    BYTE PTR [ebp-0x1],ah
  40b0ce:	sub    ah,0x66
  40b0d1:	inc    DWORD PTR [edx]
  40b0d3:	out    dx,eax
  40b0d4:	push   esi
  40b0d5:	popa   
  40b0d6:	xor    DWORD PTR [edx+0x65],esi
  40b0d9:	inc    DWORD PTR [eax]
	...
  40b0e3:	add    dl,ah
  40b0e5:	jb     0x40b14c
  40b0e7:	jne    0x40b0c0
  40b0e9:	dec    esi
  40b0ea:	fidivr WORD PTR [ebp+0x7d8f4a58]
  40b0f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0f1:	in     eax,0xe
  40b0f3:	out    dx,eax
  40b0f4:	mov    esp,edx
  40b0f6:	stc    
  40b0f7:	(bad)  
  40b0f8:	mov    edx,0xc77565a6
  40b0fd:	dec    esi
  40b0fe:	retf   0x30bd
  40b101:	mov    dl,0x51
  40b103:	push   cs
  40b104:	sub    BYTE PTR [edi+edx*2],dh
  40b107:	call   FWORD PTR [edx-0x388a9a7a]
  40b10d:	mov    cs,WORD PTR [esi]
  40b10f:	mov    esi,0x75659210
  40b114:	sti    
  40b115:	jns    0x40b0fa
  40b117:	pop    es
  40b118:	idiv   DWORD PTR [ecx+0x55f8ffa4]
  40b11e:	jmp    0x40b103
  40b120:	iret   
  40b121:	push   0x2
  40b123:	sub    DWORD PTR [edx+0x76],0xc
  40b127:	jne    0x40b0f9
  40b129:	jg     0x40b1a9
  40b12b:	mov    esi,0x6914e8ec
  40b130:	pop    edx
  40b131:	ja     0x40b100
  40b133:	xchg   edi,eax
  40b134:	mov    ch,al
  40b136:	rcr    DWORD PTR [ebp+edx*8+0x55],0xe5
  40b13b:	push   0xa3dd7842
  40b140:	jb     0x40b12a
  40b142:	mov    ecx,0xccf42268
  40b147:	pusha  
	...
  40b150:	add    BYTE PTR [eax],al
  40b152:	(bad)
  40b156:	and    ch,ah
  40b158:	pushf  
  40b159:	dec    eax
  40b15a:	(bad)
  40b15e:	add    ch,al
  40b160:	mov    WORD PTR [eax-0x71],ss
  40b163:	call   0xf04319f1
  40b168:	pushf  
  40b169:	cmp    BYTE PTR [edi-0x1d978618],cl
  40b16f:	fisttp DWORD PTR [eax+eax*2+0x6869e88f]
  40b176:	loop   0x40b15b
  40b178:	pop    esp
  40b179:	test   al,0x8f
  40b17b:	call   0xa34debd9
  40b180:	in     eax,0xce
  40b182:	push   ebp
  40b183:	(bad)  [ebx+0x3f]
  40b186:	aas    
  40b187:	lock xor DWORD PTR [eax-0x59],ebp
  40b18b:	mov    ebp,fs
  40b18d:	pop    eax
  40b18e:	imul   edx,DWORD PTR [edi+0x48],0x9d7f8fcf
  40b195:	dec    ebp
  40b196:	cmp    DWORD PTR [esi],0xffffffe5
  40b199:	(bad)  
  40b19b:	push   edx
  40b19c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b19d:	add    esi,DWORD PTR [edi-0x4c]
  40b1a0:	mov    eax,0x236000c2
  40b1a5:	iret   
  40b1a6:	(bad)  
  40b1a7:	jg     0x40b146
  40b1a9:	push   ebx
  40b1aa:	fwait
  40b1ab:	ds or  al,0xe9
  40b1ae:	ja     0x40b222
  40b1b0:	add    dh,ch
  40b1b2:	bnd jg 0x40b199
  40b1b5:	push   eax
	...
  40b1be:	add    BYTE PTR [eax],al
  40b1c0:	jno    0x40b1aa
  40b1c2:	repnz push ecx
  40b1c4:	mov    esp,0xab97e37f
  40b1c9:	popf   
  40b1ca:	pop    ecx
  40b1cb:	sub    bl,cl
  40b1cd:	push   edi
  40b1ce:	sub    eax,0x6ae7921c
  40b1d3:	aam    0x9f
  40b1d5:	inc    eax
  40b1d6:	or     al,0x41
  40b1d8:	ss dec esp
  40b1da:	dec    ebp
  40b1db:	jmp    0x2898a264
  40b1e0:	rcl    DWORD PTR [edi+0x5],cl
  40b1e3:	xor    al,0x8a
  40b1e5:	out    0xf1,eax
  40b1e7:	sbb    al,0x87
  40b1e9:	out    0x78,al
  40b1eb:	loope  0x40b211
  40b1ed:	stos   DWORD PTR es:[edi],eax
  40b1ee:	repnz xchg al,dh
  40b1f1:	push   edi
  40b1f2:	sbb    cl,ch
  40b1f4:	sbb    DWORD PTR [esi],esp
  40b1f6:	outs   dx,DWORD PTR fs:[esi]
  40b1f8:	jle    0x40b23a
  40b1fa:	or     al,0x1
  40b1fc:	pop    esi
  40b1fd:	dec    esp
  40b1fe:	dec    ebp
  40b1ff:	jmp    0xa89a1578
  40b204:	int3   
  40b205:	push   edi
  40b206:	dec    esi
  40b207:	mov    esp,0x186ae713
  40b20c:	push   ds
  40b20d:	inc    eax
  40b20e:	or     al,0xd1
  40b210:	sbb    eax,0xa9e94d4c
  40b215:	ins    BYTE PTR es:[edi],dx
  40b216:	add    BYTE PTR [esi],dh
  40b218:	push   ds
  40b219:	jg     0x40b1ff
  40b21b:	fsubr  QWORD PTR [edx+0xe74f2e6]
  40b221:	jmp    0x40b27e
  40b223:	push   ds
	...
  40b22c:	add    BYTE PTR [eax],al
  40b22e:	push   ds
  40b22f:	jnp    0x40b224
  40b231:	fadd   st(1),st
  40b233:	aaa    
  40b234:	dec    ebp
  40b235:	jmp    0xe0e9de
  40b23a:	out    0x82,al
  40b23c:	pop    es
  40b23d:	sar    BYTE PTR [ebx-0x28],0xc9
  40b241:	inc    ebp
  40b242:	fiadd  WORD PTR [edx-0x5a09fff4]
  40b248:	dec    ecx
  40b249:	hlt    
  40b24a:	icebp  
  40b24b:	in     eax,0xf2
  40b24d:	(bad)  
  40b24e:	jl     0x40b2cb
  40b250:	data16 add BYTE PTR [esp+edi*2],cl
  40b254:	data16 add BYTE PTR [ebx],ah
  40b257:	sar    dh,0x50
  40b25a:	inc    ebx
  40b25b:	add    al,bh
  40b25d:	div    DWORD PTR [ecx+0x5d]
  40b260:	pop    esp
  40b261:	(bad)  
  40b262:	jmp    0x40b2b7
  40b264:	repz jne 0x40b2d9
  40b267:	dec    edx
  40b268:	adc    ch,BYTE PTR [esi+eiz*4-0x453ff87e]
  40b26f:	and    edi,0x440ace40
  40b275:	inc    ecx
  40b276:	jbe    0x40b2d5
  40b278:	jns    0x40b286
  40b27a:	pop    esi
  40b27b:	lock int 0xff
  40b27e:	icebp  
  40b27f:	imul   ebx,esp,0xfb56fb8d
  40b285:	push   ecx
  40b287:	rcr    BYTE PTR [eax+ebp*8+0x39],cl
  40b28b:	inc    ecx
  40b28c:	repz (bad) 
  40b28e:	(bad)  
  40b290:	sti    
  40b291:	test   DWORD PTR [eax],0x0
  40b297:	add    BYTE PTR [eax],al
  40b299:	add    BYTE PTR [eax],al
  40b29b:	add    BYTE PTR [ecx-0x594a0ca3],ah
  40b2a1:	push   ebp
  40b2a2:	repz call DWORD PTR [ecx-0x417f511]
  40b2a9:	pop    esp
  40b2aa:	repz jmp ecx
  40b2ad:	das    
  40b2ae:	cld    
  40b2af:	div    ecx
  40b2b1:	pop    ebp
  40b2b2:	in     al,0xa5
  40b2b4:	mov    cl,0x5d
  40b2b6:	repz jmp FWORD PTR [ebx+0x5a]
  40b2ba:	out    0x95,eax
  40b2bc:	iret   
  40b2bd:	(bad)  
  40b2be:	cld    
  40b2bf:	sti    
  40b2c0:	neg    DWORD PTR [ebx-0x5030ff6a]
  40b2c6:	dec    ebp
  40b2c7:	or     bh,cl
  40b2c9:	or     esi,DWORD PTR [esi-0x14]
  40b2cc:	dec    esp
  40b2cd:	xchg   esp,eax
  40b2ce:	imul   ebp,DWORD PTR [edx-0x31],0x2
  40b2d2:	icebp  
  40b2d3:	(bad)  
  40b2d4:	(bad)  
  40b2d5:	lock push esi
  40b2d7:	mov    edx,0x8968c513
  40b2dc:	adc    cl,bl
  40b2de:	iret   
  40b2df:	mov    WORD PTR [ebx],ds
  40b2e1:	cwde   
  40b2e2:	or     bh,bh
  40b2e4:	inc    edx
  40b2e5:	out    dx,eax
  40b2e6:	push   esi
  40b2e7:	mov    bh,0xb1
  40b2e9:	imul   ebp,DWORD PTR es:[edx-0x31],0xe54a63e
  40b2f1:	xlat   BYTE PTR ds:[ebx]
  40b2f2:	(bad)  
  40b2f3:	mov    WORD PTR [ebx],es
  40b2f5:	cwde   
  40b2f6:	or     bh,bh
  40b2f8:	ficom  DWORD PTR ds:0xfecf40b0
  40b2fe:	cld    
  40b2ff:	rol    DWORD PTR [eax],0x0
	...
  40b30a:	xor    dh,0xf4
  40b30d:	mov    edi,0x4fdeee03
  40b312:	jo     0x40b300
  40b314:	mul    bh
  40b316:	inc    edx
  40b317:	imul   ebp,DWORD PTR [ecx-0x1],0x77
  40b31b:	lahf   
  40b31c:	test   eax,0xed158ff
  40b321:	push   0xffce2f22
  40b326:	mov    al,0xf6
  40b328:	fild   DWORD PTR [eax-0x31]
  40b32b:	xor    eax,0x1787cf23
  40b330:	psubsb mm0,QWORD PTR [esi-0x2b009668]
  40b337:	xchg   esi,eax
  40b338:	cld    
  40b339:	push   cs
  40b33a:	jg     0x40b342
  40b33c:	push   0x1d7fc775
  40b341:	fst    DWORD PTR [eiz*8+0x24e95c11]
  40b348:	sbb    ah,BYTE PTR [ebp+0x75]
  40b34b:	jg     0x40b2da
  40b34d:	test   eax,0xdbe53ea3
  40b352:	inc    ebx
  40b353:	dec    esp
  40b354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b355:	add    esi,DWORD PTR [edi-0x7f]
  40b358:	in     eax,0x3
  40b35a:	dec    edi
  40b35b:	fadd   st,st(4)
  40b35d:	inc    ecx
  40b35e:	fsub   st,st(4)
  40b360:	std    
  40b361:	inc    ebx
  40b362:	pop    ebx
  40b363:	je     0x40b39a
  40b365:	aam    0xc9
  40b367:	push   0xffffffed
  40b369:	pop    ebx
  40b36a:	or     eax,0x64c1e4
	...
  40b377:	add    BYTE PTR [edi-0x4f9b7516],ah
  40b37d:	pop    ecx
  40b37e:	in     eax,0xdb
  40b380:	jnp    0x40b3b9
  40b382:	and    al,0x4
  40b384:	aaa    
  40b385:	and    BYTE PTR [ecx],bl
  40b387:	ret    
  40b388:	cwde   
  40b389:	pop    esp
  40b38a:	out    0x3,eax
  40b38c:	iret   
  40b38d:	call   FWORD PTR [esp+ebp*2-0x7661b72]
  40b394:	inc    eax
  40b395:	imul   edx,edx,0xffffffd3
  40b398:	or     ch,ah
  40b39a:	out    dx,eax
  40b39b:	sti    
  40b39c:	push   0x68647186
  40b3a1:	xlat   BYTE PTR ds:[ebx]
  40b3a2:	test   al,0xa5
  40b3a4:	pusha  
  40b3a5:	in     al,0xe
  40b3a7:	or     bl,BYTE PTR [eax+0x6a]
  40b3aa:	std    
  40b3ab:	pop    ebx
  40b3ac:	aad    0xe3
  40b3ae:	push   ecx
  40b3af:	fs mov ch,0xa0
  40b3b2:	pop    edx
  40b3b3:	out    dx,al
  40b3b4:	enter  0xd4d7,0x67
  40b3b8:	cmp    ah,ah
  40b3ba:	fiadd  WORD PTR [edi]
  40b3bc:	xor    BYTE PTR [edx-0x3],ch
  40b3bf:	pop    ebx
  40b3c0:	mov    cl,0xe3
  40b3c2:	or     esi,DWORD PTR [esi]
  40b3c4:	stos   DWORD PTR es:[edi],eax
  40b3c5:	in     al,0x78
  40b3c7:	sub    eax,0x11046ab3
  40b3cc:	in     eax,dx
  40b3cd:	and    esi,ebx
  40b3cf:	push   ds
  40b3d0:	(bad)
  40b3d3:	jmp    0x6b20ace9
  40b3d8:	mov    eax,0x9e59e3
	...
  40b3e5:	add    BYTE PTR [esi],dl
  40b3e7:	in     al,0x64
  40b3e9:	out    0x73,al
  40b3eb:	push   0x4
  40b3ed:	add    DWORD PTR [edi+0x56eef328],ecx
  40b3f3:	cmp    dh,al
  40b3f5:	jb     0x40b3ad
  40b3f7:	push   eax
  40b3f8:	inc    esp
  40b3f9:	sub    bl,dl
  40b3fb:	div    BYTE PTR [eax]
  40b3fd:	ds xchg ebx,eax
  40b3ff:	inc    eax
  40b400:	or     al,0x69
  40b402:	in     al,dx
  40b403:	jg     0x40b47d
  40b405:	cmp    ah,BYTE PTR [ebx-0x2cd7a6f6]
  40b40b:	dec    edx
  40b40c:	in     al,0xc9
  40b40e:	jno    0x40b390
  40b410:	or     al,0xe2
  40b412:	or     al,0x6c
  40b414:	adc    edi,DWORD PTR [edi]
  40b416:	and    ebp,DWORD PTR [esp+eax*8+0x644fec9e]
  40b41d:	jmp    0x1f286ee
  40b422:	pusha  
  40b423:	dec    ebp
  40b424:	dec    ebp
  40b425:	jmp    0xf1b99666
  40b42a:	hlt    
  40b42b:	aas    
  40b42c:	jmp    0x40b4a4
  40b42e:	in     al,dx
  40b42f:	xlat   BYTE PTR ds:[ebx]
  40b430:	inc    esp
  40b431:	das    
  40b432:	in     al,dx
  40b433:	loop   0x40b498
  40b435:	mov    WORD PTR [esi],ss
  40b437:	inc    eax
  40b438:	or     al,0xb6
  40b43a:	mov    ah,0x2d
  40b43c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b43d:	jmp    0xd60d2b0e
  40b442:	int    0x49
  40b444:	in     al,0x0
  40b446:	and    BYTE PTR [edi],dh
  40b448:	repz inc DWORD PTR [eax]
	...
  40b453:	add    BYTE PTR [esi-0x29],al
  40b456:	repnz dec DWORD PTR [ecx+0x43b3641d]
  40b45d:	mov    esp,0xc8e94ff2
  40b462:	or     ch,al
  40b464:	add    al,0x56
  40b466:	repz dec esi
  40b469:	loop   0x40b41b
  40b46b:	dec    ecx
  40b46d:	push   edx
  40b46e:	or     eax,0xc9d6646
  40b473:	jne    0x40b441
  40b475:	mov    ch,0xf6
  40b477:	xor    esi,DWORD PTR [esi-0x16000cfc]
  40b47d:	pop    ebp
  40b47e:	(bad)  
  40b47f:	scas   al,BYTE PTR es:[edi]
  40b480:	scas   al,BYTE PTR es:[edi]
  40b481:	jbe    0x40b4fc
  40b483:	lea    ebp,[ecx+0x23fff6c7]
  40b489:	je     0x40b46f
  40b48b:	ja     0x40b4ea
  40b48d:	pop    ebp
  40b48e:	repz pop edi
  40b490:	call   0xb64582c9
  40b495:	daa    
  40b496:	xchg   ah,ch
  40b498:	push   cs
  40b499:	jl     0x40b4a7
  40b49b:	out    dx,eax
  40b49c:	sub    bh,dl
  40b49e:	xlat   BYTE PTR ds:[ebx]
  40b49f:	push   ebp
  40b4a0:	out    0x7b,eax
  40b4a2:	repz jne 0x40b51f
  40b4a5:	pop    ebp
  40b4a6:	jns    0x40b4b0
  40b4a8:	dec    esi
  40b4a9:	dec    edi
  40b4aa:	jmp    0x5900:0xbd649ff
  40b4b1:	and    BYTE PTR [edx+ebx*8-0x3d],ah
  40b4b5:	mov    esp,0xfef2
	...
  40b4c2:	arpl   WORD PTR [edx-0xd],si
  40b4c5:	jne    0x40b535
  40b4c7:	push   esi
  40b4c8:	mov    ah,0xe6
  40b4ca:	jmp    0x3f037a2c
  40b4cf:	jle    0x40b52a
  40b4d1:	mov    ecx,edi
  40b4d3:	cmp    al,0x6e
  40b4d5:	jne    0x40b4a2
  40b4d7:	inc    eax
  40b4d8:	push   ds
  40b4d9:	ret    0x3930
  40b4dc:	add    al,al
  40b4de:	mov    ds:0x7abee6de,eax
  40b4e3:	pop    ss
  40b4e4:	(bad)  
  40b4e6:	daa    
  40b4e7:	dec    ebp
  40b4e8:	dec    eax
  40b4e9:	call   DWORD PTR [eax]
  40b4eb:	sub    BYTE PTR [edi+0x66f082fe],bh
  40b4f1:	stos   DWORD PTR es:[edi],eax
  40b4f2:	add    BYTE PTR [ecx+0x3356e86e],cl
  40b4f8:	outs   dx,BYTE PTR ds:[esi]
  40b4f9:	inc    DWORD PTR [esi]
  40b4fb:	xchg   esi,eax
  40b4fc:	pop    es
  40b4fd:	add    BYTE PTR [edx+0xb83636d],al
  40b503:	in     al,dx
  40b504:	(bad)  
  40b506:	data16 loopne 0x40b576
  40b509:	jne    0x40b4d2
  40b50b:	rcl    BYTE PTR [eax-0x793d3746],1
  40b511:	inc    ebp
  40b512:	ret    
  40b513:	cmp    eax,0xa97d6808
  40b518:	iret   
  40b519:	jmp    FWORD PTR [eax]
  40b51b:	sbb    bh,BYTE PTR [ebx+0x1b21cf40]
  40b521:	iret   
  40b522:	pop    ss
  40b523:	cwde   
  40b524:	or     al,ch
	...
  40b52e:	add    BYTE PTR [eax],al
  40b530:	dec    esi
  40b531:	pop    ss
  40b532:	ins    DWORD PTR es:[edi],dx
  40b533:	inc    esp
  40b535:	push   ss
  40b536:	aam    0x13
  40b538:	pop    ds
  40b539:	(bad)  
  40b53a:	(bad)  
  40b53c:	jo     0x40b587
  40b53e:	mov    eax,0x66df02fe
  40b543:	arpl   WORD PTR [edx+edi*8+0x6c],bp
  40b547:	call   0xffae594a
  40b54c:	cmc    
  40b54d:	(bad)  
  40b54e:	out    0xb1,al
  40b550:	add    DWORD PTR [eax+0x7fcb6808],ebx
  40b556:	mov    bl,0xc2
  40b558:	dec    eax
  40b559:	loop   0x40b572
  40b55b:	push   ecx
  40b55c:	xchg   edi,eax
  40b55d:	ds in  eax,0x6b
  40b560:	popf   
  40b561:	mov    edi,0xbfc46141
  40b566:	mov    al,0xf7
  40b568:	cwde   
  40b569:	push   edi
  40b56a:	in     al,0x3
  40b56c:	xor    BYTE PTR [edx],ah
  40b56e:	xchg   ebp,eax
  40b56f:	pusha  
  40b570:	mov    ds:0x2c184d77,al
  40b575:	loope  0x40b5a0
  40b577:	ins    BYTE PTR es:[edi],dx
  40b578:	lods   eax,DWORD PTR ds:[esi]
  40b579:	and    dl,BYTE PTR [edx]
  40b57b:	popa   
  40b57c:	jne    0x40b5fd
  40b57e:	lea    eax,[ebp-0x5f]
  40b581:	ds in  eax,0xeb
  40b584:	mov    dl,0x49
  40b586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b587:	add    ebp,eax
  40b589:	stos   BYTE PTR es:[edi],al
  40b58a:	and    cl,ah
  40b58c:	(bad)  
  40b58d:	jg     0x40b59c
  40b58f:	and    eax,0xce1e10f
	...
  40b59c:	add    BYTE PTR [eax],al
  40b59e:	(bad)  
  40b5a0:	cli    
  40b5a1:	mov    bl,0x18
  40b5a3:	loope  0x40b5fc
  40b5a5:	or     al,0xb7
  40b5a7:	jne    0x40b583
  40b5a9:	pusha  
  40b5aa:	mov    eax,0xb09fdcd7
  40b5af:	loopne 0x40b60f
  40b5b1:	add    al,0x37
  40b5b3:	mov    esi,0x58a0c31a
  40b5b8:	inc    ebx
  40b5b9:	mov    edx,0x16a2800f
  40b5be:	xor    BYTE PTR [edi],0x24
  40b5c1:	add    al,0x77
  40b5c3:	out    0x51,al
  40b5c5:	pusha  
  40b5c6:	xor    BYTE PTR [ebp+eiz*4-0x29],0xc9
  40b5cb:	dec    edi
  40b5cc:	xor    eax,0x9d77fa61
  40b5d1:	arpl   WORD PTR [ecx-0x20],bp
  40b5d4:	jno    0x40b641
  40b5d6:	xchg   ecx,eax
  40b5d7:	and    ecx,DWORD PTR [esi+esi*2]
  40b5da:	out    dx,eax
  40b5db:	push   ebp
  40b5dc:	or     al,0x1
  40b5de:	add    cl,BYTE PTR [edx+0x4d]
  40b5e1:	jmp    0xa89ad31a
  40b5e6:	int3   
  40b5e7:	loopne 0x40b621
  40b5e9:	es add al,0x3f
  40b5ec:	or     al,0x41
  40b5ee:	lahf   
  40b5ef:	and    bl,dh
  40b5f1:	inc    esi
  40b5f2:	fstp   TBYTE PTR [edi+0x305cee77]
  40b5f8:	repz mov esp,0x2fb9d7c4
  40b5fe:	scas   eax,DWORD PTR es:[edi]
  40b5ff:	loopne 0x40b5e4
  40b601:	dec    ebp
	...
  40b60a:	add    BYTE PTR [eax],al
  40b60c:	push   0x93f2e0
  40b611:	loope  0x40b68b
  40b613:	loope  0x40b679
  40b615:	(bad)  
  40b616:	icebp  
  40b617:	push   cs
  40b618:	outs   dx,DWORD PTR ds:[esi]
  40b619:	push   ebp
  40b61a:	push   ss
  40b61b:	push   es
  40b61c:	add    DWORD PTR [eax-0x1c],edi
  40b61f:	das    
  40b620:	outs   dx,BYTE PTR ds:[esi]
  40b621:	loopne 0x40b615
  40b623:	xor    DWORD PTR [ebx+0x64e178e0],0xffffffbb
  40b62a:	icebp  
  40b62b:	out    0x28,al
  40b62d:	fistp  QWORD PTR [eax-0x23]
  40b630:	and    BYTE PTR [ebp+0x4],dl
  40b633:	rcr    DWORD PTR [edx],0x19
  40b636:	repz into 
  40b638:	add    al,dl
  40b63a:	pop    es
  40b63b:	jmp    0xbf20c0a7
  40b640:	xchg   BYTE PTR [ebx-0x20ec521c],cl
  40b646:	repnz loop 0x40b655
  40b649:	push   esp
  40b64a:	inc    edx
  40b64b:	adc    DWORD PTR [edi],ecx
  40b64d:	ss dec ebp
  40b64f:	jmp    0xa99c9d90
  40b654:	sbb    bh,bl
  40b656:	pop    ebx
  40b657:	cmp    DWORD PTR [ebx],edi
  40b659:	addr16 or al,0x0
  40b65c:	jbe    0x40b6cc
  40b65e:	mov    dl,0x68
  40b660:	cmp    DWORD PTR [esi],edx
  40b662:	dec    esp
  40b663:	add    BYTE PTR [esi+0x4e08793e],dh
  40b669:	jge    0x40b654
  40b66b:	push   DWORD PTR [ecx+0x16b1b]
	...
  40b679:	add    BYTE PTR [esi],dh
  40b67b:	outs   dx,BYTE PTR ds:[esi]
  40b67c:	mov    dl,0x68
  40b67e:	mov    BYTE PTR ds:0x3e76004c,dl
  40b684:	jns    0x40b68e
  40b686:	jle    0x40b630
  40b688:	jmp    0x6b5c988c
  40b68d:	add    ah,BYTE PTR [esi]
  40b68f:	outs   dx,BYTE PTR ds:[esi]
  40b690:	mov    dl,0x68
  40b692:	ficom  DWORD PTR ds:0x3e46004c
  40b698:	jns    0x40b6a2
  40b69a:	(bad)  
  40b69c:	out    0xff,eax
  40b69e:	loope  0x40b70b
  40b6a0:	push   ss
  40b6a1:	mov    esp,0xc2c53ec1
  40b6a6:	fiadd  WORD PTR [edx+0x2d28b59]
  40b6ac:	enter  0x4cfc,0x83
  40b6b0:	or     cx,sp
  40b6b3:	mov    bh,0xa
  40b6b5:	call   0x33b3ac
  40b6ba:	aas    
  40b6bb:	enter  0x6af6,0xbc
  40b6bf:	cmp    eax,0x28e0879
  40b6c4:	repz call DWORD PTR [ecx-0x2400d218]
  40b6cb:	mov    esp,esp
  40b6cd:	jbe    0x40b730
  40b6cf:	cmp    eax,0x3d826af3
  40b6d4:	jns    0x40b6de
  40b6d6:	pop    esi
  40b6d7:	out    dx,al
  40b6d8:	icebp  
  40b6d9:	jmp    DWORD PTR [ecx+0x3d]
  40b6dc:	jns    0x40b6da
	...
  40b6e6:	add    BYTE PTR [eax],al
  40b6e8:	iret   
  40b6e9:	cmc    
  40b6ea:	rol    DWORD PTR [edi],cl
  40b6ec:	addr16 xchg esi,eax
  40b6ee:	xchg   ecx,eax
  40b6ef:	jmp    FWORD PTR [eax+0xf]
  40b6f2:	dec    ebp
  40b6f3:	add    al,0xcf
  40b6f5:	jae    0x40b67e
  40b6f7:	in     al,dx
  40b6f8:	in     eax,0xe8
  40b6fa:	out    0x30,al
  40b6fc:	clc    
  40b6fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6fe:	or     BYTE PTR [eax-0x18],ch
  40b701:	sbb    eax,0x7341ffc8
  40b706:	inc    ebx
  40b707:	dec    eax
  40b708:	mov    gs,eax
  40b70a:	data16 shl BYTE PTR [ecx+0x4d],cl
  40b70e:	push   edx
  40b70f:	or     ecx,DWORD PTR [edi]
  40b711:	sbb    al,0xf4
  40b713:	dec    edi
  40b714:	and    BYTE PTR [ebx],dl
  40b716:	(bad)  
  40b717:	(bad)  
  40b718:	mov    ds:0x9afebee4,al
  40b71d:	loopne 0x40b785
  40b71f:	cwde   
  40b720:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b722:	push   edx
  40b723:	call   0xff931856
  40b728:	gs call 0x27d8e814
  40b72e:	punpckhbw mm1,mm0
  40b731:	std    
  40b732:	(bad)  
  40b733:	jmp    FWORD PTR [eax-0x16]
  40b736:	push   cs
  40b737:	add    BYTE PTR [edi-0x80],cl
  40b73a:	scas   al,BYTE PTR es:[edi]
  40b73b:	mov    esi,0xc004ecd0
  40b740:	inc    ebx
  40b741:	fdivr  QWORD PTR [esi+0x4fd73afe]
  40b747:	jne    0x40b714
  40b749:	xchg   esi,eax
  40b74a:	push   ecx
  40b74b:	jne    0x40b74d
	...
  40b755:	add    bh,al
  40b757:	mov    esi,0xc6a8e3e6
  40b75c:	pop    edi
  40b75d:	jb     0x40b7c3
  40b75f:	push   ds
  40b760:	push   ecx
  40b761:	jmp    DWORD PTR [edx]
  40b763:	mov    bh,0x4f
  40b765:	jne    0x40b72a
  40b767:	ds sti 
  40b769:	push   esi
  40b76a:	push   cs
  40b76b:	and    ch,0x5c
  40b76e:	cli    
  40b76f:	xchg   DWORD PTR [ebp-0x66228c80],ebx
  40b775:	dec    ebx
  40b776:	lea    ecx,[ebp+eiz*8+0x65ec55b6]
  40b77d:	dec    eax
  40b77e:	arpl   WORD PTR [edx-0x1b],bp
  40b781:	jmp    0xc30944c
  40b786:	addr16 (bad) 
  40b788:	cmp    al,0x5d
  40b78a:	dec    eax
  40b78b:	pop    es
  40b78c:	mov    al,ds:0xe57fb75f
  40b791:	ins    BYTE PTR es:[edi],dx
  40b792:	jns    0x40b7fc
  40b794:	in     eax,0xb4
  40b796:	(bad)  
  40b797:	jg     0x40b7db
  40b799:	xlat   BYTE PTR ds:[ebx]
  40b79a:	shl    bh,1
  40b79c:	les    ebx,FWORD PTR [eax+eiz*1-0x23]
  40b7a0:	fadd   QWORD PTR [edx]
  40b7a2:	iret   
  40b7a3:	in     al,dx
  40b7a4:	jp     0x40b792
  40b7a6:	lds    esi,FWORD PTR [esp+eiz*4]
  40b7a9:	add    ecx,DWORD PTR [eax]
  40b7ab:	push   ebx
  40b7ac:	std    
  40b7ad:	imul   edx,DWORD PTR [ecx-0x7a2ee24],0x52
  40b7b4:	sbb    DWORD PTR [ebp+0x7a],ebx
  40b7b7:	xchg   DWORD PTR ds:0x77,ecx
  40b7bd:	add    BYTE PTR [eax],al
  40b7bf:	add    BYTE PTR [eax],al
  40b7c1:	add    BYTE PTR [eax],al
  40b7c3:	add    BYTE PTR [edi],ah
  40b7c5:	fisttp QWORD PTR [ecx]
  40b7c7:	dec    ebx
  40b7c8:	or     eax,0x45b6e584
  40b7cd:	in     al,dx
  40b7ce:	arpl   WORD PTR [eax-0x9],cx
  40b7d1:	aam    0xe1
  40b7d3:	pop    esp
  40b7d4:	pop    edx
  40b7d5:	inc    edx
  40b7d6:	jmp    0xe193798e
  40b7db:	pop    esp
  40b7dc:	add    cl,ch
  40b7de:	sub    al,0xc3
  40b7e0:	mov    al,0xe4
  40b7e2:	push   cs
  40b7e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7e4:	iret   
  40b7e5:	jg     0x40b7e5
  40b7e7:	inc    ebx
  40b7e8:	rol    BYTE PTR [edx],1
  40b7ea:	lods   eax,DWORD PTR ds:[esi]
  40b7eb:	add    cl,bh
  40b7ed:	jg     0x40b7fb
  40b7ef:	scas   al,BYTE PTR es:[edi]
  40b7f0:	mov    esp,edx
  40b7f2:	or     ebp,ecx
  40b7f4:	int3   
  40b7f5:	jg     0x40b7c2
  40b7f7:	sub    al,0x27
  40b7f9:	fisttp QWORD PTR [edx]
  40b7fb:	jmp    0x34d21cc
  40b800:	retf   
  40b801:	imul   ecx,DWORD PTR [ebx+eax*1],0x7d490ad3
  40b808:	sbb    al,0xb
  40b80a:	mov    DWORD PTR [ebp+0x3],esi
  40b80d:	(bad)  
  40b80f:	sbb    edx,esi
  40b811:	push   edx
  40b812:	hlt    
  40b813:	outs   dx,BYTE PTR ds:[esi]
  40b814:	and    eax,ebx
  40b816:	jecxz  0x40b87d
  40b818:	push   0x7f
  40b81a:	or     al,0xf2
  40b81c:	mov    WORD PTR [ebx+0x9],ss
  40b81f:	inc    eax
  40b820:	mov    bh,0x7e
  40b822:	or     al,0xe9
  40b824:	xor    al,0x29
  40b826:	inc    esp
  40b827:	test   al,0x0
	...
  40b831:	add    ah,cl
  40b833:	fdivr  QWORD PTR [eax-0x13]
  40b836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b837:	dec    edx
  40b838:	mov    dl,0x36
  40b83a:	jae    0x40b86b
  40b83c:	xchg   DWORD PTR [ecx],ebx
  40b83e:	pop    ecx
  40b83f:	add    bh,al
  40b841:	push   ds
  40b842:	mov    ds:0x64bb5bdc,eax
  40b847:	call   0x1989:0x69316b2
  40b84e:	sbb    esp,0xfffffff2
  40b851:	adc    DWORD PTR [edi+0x19],ebx
  40b854:	repz (bad) 
  40b856:	out    0xdb,eax
  40b858:	push   0x65
  40b85a:	sbb    edi,DWORD PTR [edi]
  40b85c:	or     al,0xee
  40b85e:	(bad)  
  40b85f:	sar    dl,1
  40b861:	out    0x24,al
  40b863:	fstp   TBYTE PTR [eax]
  40b865:	scas   al,BYTE PTR es:[edi]
  40b866:	mov    eax,DWORD PTR [eax+0xc]
  40b869:	sar    DWORD PTR [eax],0x1d
  40b86c:	repz into 
  40b86e:	pop    edx
  40b86f:	add    eax,0x376100e8
  40b874:	repz push 0xffffffa6
  40b877:	out    0x90,eax
  40b879:	push   edi
  40b87a:	out    0x83,eax
  40b87c:	repz mov ch,0x46
  40b87f:	das    
  40b880:	repz jmp FWORD PTR [ecx]
  40b883:	jno    0x40b848
  40b885:	dec    eax
  40b886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b887:	and    esp,0x75
  40b88a:	sbb    esi,DWORD PTR [edi]
  40b88c:	repz mov ebx,esi
  40b88f:	addr16 sti 
  40b891:	dec    DWORD PTR [ecx-0x16]
  40b894:	repnz add BYTE PTR [bx+si],al
	...
  40b8a0:	add    ecx,DWORD PTR [edi]
  40b8a2:	dec    esp
  40b8a3:	add    cl,bl
  40b8a5:	lock sti 
  40b8a7:	idiv   DWORD PTR [ecx-0x6ca0cca]
  40b8ad:	retf   
  40b8ae:	dec    ebx
  40b8af:	add    BYTE PTR [esi-0x66004ff2],bl
  40b8b5:	or     al,0x89
  40b8b7:	call   0x6b33ef3d
  40b8bc:	ss out 0xa9,eax
  40b8bf:	push   edi
  40b8c0:	addr16 jg 0x40b8b6
  40b8c3:	mov    ch,0xd6
  40b8c5:	cs repz (bad) 
  40b8c8:	mov    ecx,0x3748c370
  40b8cd:	jg     0x40b8b3
  40b8cf:	cmp    DWORD PTR [ebx+0x6389f336],ebx
  40b8d5:	arpl   bx,di
  40b8d7:	(bad)  
  40b8d8:	(bad)  [eax]
  40b8da:	mov    eax,ebx
  40b8dc:	loope  0x40b913
  40b8de:	repz push eax
  40b8e0:	ds hlt 
  40b8e2:	pop    edx
  40b8e3:	inc    ecx
  40b8e4:	out    0x35,al
  40b8e6:	mov    ecx,0xf335c1f0
  40b8eb:	jmp    ebx
  40b8ed:	inc    esi
  40b8ee:	inc    esp
  40b8ef:	inc    ecx
  40b8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8f1:	data16 sbb bh,BYTE PTR [ebp+0xb55b1cf]
  40b8f8:	(bad)  
  40b8f9:	xor    al,0xf1
  40b8fb:	and    BYTE PTR [edx+0x20],0x5e
  40b8ff:	call   FWORD PTR [eax+0xfdbe4]
	...
  40b90d:	add    BYTE PTR [eax-0x547a7a28],dl
  40b913:	adc    DWORD PTR [esi-0x1],edx
  40b916:	pop    ds
  40b917:	icebp  
  40b918:	imul   edi,DWORD PTR [ecx+0x1461f978],0x5c328c4
  40b922:	inc    DWORD PTR [eax]
  40b924:	ds mov ecx,0x854e0160
  40b92a:	jnp    0x40b97d
  40b92c:	push   esi
  40b92d:	(bad)  
  40b92e:	mov    edx,0x4c000ee8
  40b933:	stos   DWORD PTR es:[edi],eax
  40b934:	push   ebx
  40b935:	test   DWORD PTR [eax+0x61],0x65b2740f
  40b93c:	xchg   esp,eax
  40b93d:	in     al,dx
  40b93e:	cmp    BYTE PTR [ecx],dh
  40b940:	push   esi
  40b941:	add    BYTE PTR [ebx+0x37bd8a2c],ah
  40b947:	cdq    
  40b948:	push   esi
  40b949:	dec    edi
  40b94b:	adc    al,0xba
  40b94d:	addr16 iret 
  40b94f:	call   0x134977b9
  40b954:	pop    es
  40b955:	call   0xff96f3f3
  40b95a:	clc    
  40b95b:	xor    ch,BYTE PTR [ebx-0x9]
  40b95e:	lock jo 0x40b9b7
  40b961:	jne    0x40b93a
  40b963:	and    BYTE PTR [ecx+0x5680e0b6],0xb5
  40b96a:	out    0xd0,eax
  40b96c:	push   esp
  40b96d:	call   eax
  40b96f:	pop    edx
  40b970:	pop    es
  40b971:	call   0x40b976
  40b976:	add    BYTE PTR [eax],al
  40b978:	add    BYTE PTR [eax],al
  40b97a:	add    BYTE PTR [eax],al
  40b97c:	imul   edx,DWORD PTR [ecx-0x7f3f00aa],0xffffff90
  40b983:	pusha  
  40b984:	rcr    cl,0xd1
  40b987:	pop    ecx
  40b988:	cmp    cl,BYTE PTR [eax-0x269e7533]
  40b98e:	rcr    DWORD PTR [ecx+0x5a],0xe0
  40b992:	mov    cl,0x59
  40b994:	cwde   
  40b995:	fnstenv [edi]
  40b997:	or     al,0xa7
  40b999:	add    BYTE PTR [ebx+0x59],dh
  40b99c:	mov    cl,bl
  40b99e:	ja     0x40b9d8
  40b9a0:	js     0x40b97b
  40b9a2:	test   eax,0x9d880259
  40b9a7:	hlt    
  40b9a8:	cmp    bl,cl
  40b9aa:	cdq    
  40b9ab:	pop    ecx
  40b9ac:	and    ah,ah
  40b9ae:	cdq    
  40b9af:	pop    ecx
  40b9b0:	pusha  
  40b9b1:	call   0xd99954c6
  40b9b6:	jno    0x40b947
  40b9b8:	arpl   cx,dx
  40b9ba:	jns    0x40ba15
  40b9bc:	aaa    
  40b9bd:	inc    edi
  40b9be:	cmp    al,0x59
  40b9c0:	inc    eax
  40b9c1:	(bad)  [edi+0x51d9406c]
  40b9c7:	ins    BYTE PTR es:[edi],dx
  40b9c8:	icebp  
  40b9c9:	push   ss
  40b9ca:	pop    edx
  40b9cb:	pop    ecx
  40b9cc:	sub    BYTE PTR [ebx],dl
  40b9ce:	inc    ebp
  40b9cf:	push   ecx
  40b9d0:	and    cl,bl
  40b9d2:	pop    esp
  40b9d3:	adc    eax,0x5931d956
  40b9d8:	pop    edx
  40b9d9:	shl    BYTE PTR [ecx],1
  40b9db:	pop    ecx
  40b9dc:	or     al,ch
  40b9de:	or     al,0x9b
	...
  40b9e8:	add    BYTE PTR [eax],al
  40b9ea:	add    cl,bl
  40b9ec:	sub    DWORD PTR [edi+0x59d9e700],edi
  40b9f2:	lock fcomp DWORD PTR [ecx]
  40b9f5:	iret   
  40b9f6:	in     al,0xe7
  40b9f8:	test   al,0x9e
  40b9fa:	iret   
  40b9fb:	jg     0x40ba39
  40b9fd:	inc    esi
  40b9fe:	(bad)  
  40b9ff:	jg     0x40b999
  40ba01:	mov    ebx,fs
  40ba03:	cld    
  40ba04:	or     ebp,DWORD PTR ds:0x830c662b
  40ba0a:	rcr    eax,cl
  40ba0c:	js     0x40b9ff
  40ba0e:	and    al,0x96
  40ba10:	mov    edx,0x490717de
  40ba15:	aad    0x51
  40ba17:	inc    edx
  40ba18:	hlt    
  40ba19:	cmp    DWORD PTR [ebx-0x2cd7a4d1],esi
  40ba1f:	xor    DWORD PTR ds:0xd88c,edx
  40ba24:	icebp  
  40ba25:	cld    
  40ba26:	pop    ss
  40ba27:	dec    eax
  40ba28:	dec    ebp
  40ba29:	jmp    0xa6f79422
  40ba2e:	pop    ss
  40ba2f:	test   esp,ecx
  40ba31:	adc    eax,0xe864487e
  40ba36:	int3   
  40ba37:	call   0xd0d248ed
  40ba3c:	pop    ebx
  40ba3d:	xchg   BYTE PTR [ecx-0x698e1b80],cl
  40ba43:	fdiv   st,st(2)
  40ba45:	sbb    DWORD PTR [ebx+0x496ef317],0xb9f442
	...
  40ba57:	add    BYTE PTR [eax+edi*1],ah
  40ba5a:	pop    ebx
  40ba5b:	test   al,0xcc
  40ba5d:	xor    DWORD PTR [bp-0x27f3],edi
  40ba62:	icebp  
  40ba63:	adc    al,0x96
  40ba65:	inc    edi
  40ba66:	dec    ebp
  40ba67:	jmp    0x3ef78010
  40ba6c:	ja     0x40b9f2
  40ba6e:	int3   
  40ba6f:	mov    ebp,0xeb6447ff
  40ba74:	int3   
  40ba75:	call   0xd049e12b
  40ba7a:	pop    ebx
  40ba7b:	push   ds
  40ba7c:	add    DWORD PTR [eax-0x2759421c],eax
  40ba82:	repnz add DWORD PTR [edi+0x17],ebx
  40ba86:	repz add cl,dl
  40ba89:	in     al,0x62
  40ba8b:	push   edi
  40ba8c:	daa    
  40ba8d:	jl     0x40ba82
  40ba8f:	jne    0x40ba3f
  40ba91:	imul   edi,DWORD PTR [ebx-0x3],0xffffffb1
  40ba95:	das    
  40ba96:	repz jne 0x40ba4b
  40ba99:	das    
  40ba9a:	jns    0x40baa4
  40ba9c:	sahf   
  40ba9d:	cmp    DWORD PTR [ecx-0x31ba7e01],edi
  40baa3:	add    al,0xb6
  40baa5:	adc    BYTE PTR [esi-0x2fbfd814],al
  40baab:	not    DWORD PTR [ecx+0x2f]
  40baae:	add    DWORD PTR [ebp+0x42],0xa275f20c
  40bab5:	cs cmp edi,ecx
  40bab8:	mov    esi,0xe7f2bc
	...
  40bac5:	add    ah,dh
  40bac7:	pop    ds
  40bac8:	or     al,0x0
  40baca:	ins    DWORD PTR es:[edi],dx
  40bacb:	inc    ebx
  40bacc:	add    eax,DWORD PTR [ebp+0xc7d37]
  40bad2:	sub    ecx,eax
  40bad4:	cli    
  40bad5:	add    BYTE PTR [esi-0x7d],ah
  40bad8:	or     al,0xc7
  40bada:	sti    
  40badb:	das    
  40badc:	repz pop es
  40bade:	and    DWORD PTR ss:[esi+0x0],0x1c
  40bae3:	and    DWORD PTR [esi+0x0],0x1c
  40bae7:	add    DWORD PTR [ecx-0x7ff475bb],0xffffff85
  40baee:	jp     0x40bb36
  40baf0:	repz push DWORD PTR [esi]
  40baf3:	cs jns 0x40baee
  40baf6:	shl    DWORD PTR [eax-0x8e5170a],1
  40bafc:	or     eax,DWORD PTR [eax]
  40bafe:	in     eax,dx
  40baff:	inc    edx
  40bb00:	js     0x40bb07
  40bb02:	(bad)  
  40bb04:	or     al,0x0
  40bb06:	out    0xea,al
  40bb08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb09:	dec    eax
  40bb0a:	iret   
  40bb0b:	daa    
  40bb0c:	ud0    ebx,DWORD PTR [edx-0x4c]
  40bb10:	data16 mov ch,0x14
  40bb13:	jle    0x40bb70
  40bb15:	push   eax
  40bb16:	inc    esp
  40bb17:	jns    0x40ba9e
  40bb19:	test   ebx,eax
  40bb1b:	aad    0x59
  40bb1d:	call   FWORD PTR [edi]
  40bb1f:	sti    
  40bb20:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40bb22:	je     0x40bb01
  40bb24:	pop    ecx
  40bb25:	mov    DWORD PTR [edx-0x48],ecx
  40bb28:	inc    ecx
  40bb29:	inc    DWORD PTR [eax]
	...
  40bb33:	add    BYTE PTR [eax-0x5f48aa40],ch
  40bb39:	(bad)
  40bb3c:	xor    BYTE PTR [edx+eiz*4],cl
  40bb3f:	inc    eax
  40bb40:	iret   
  40bb41:	adc    eax,0xd80f09c
  40bb46:	pop    edx
  40bb47:	(bad)  
  40bb48:	mov    edx,0xcf40c6f5
  40bb4d:	lock push ebp
  40bb4f:	mov    edx,0x857ff570
  40bb54:	jae    0x40bb4b
  40bb56:	pop    ecx
  40bb57:	push   ebp
  40bb59:	call   0xa8417144
  40bb5e:	or     bh,bh
  40bb60:	sbb    bl,BYTE PTR [eax+0x42]
  40bb63:	dec    DWORD PTR [eax+0x4d]
  40bb66:	sbb    al,0xcf
  40bb68:	xchg   edi,eax
  40bb69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb6a:	or     al,ch
  40bb6c:	sbb    ah,BYTE PTR [edx]
  40bb6e:	pop    edx
  40bb6f:	inc    DWORD PTR [esi+0x5b]
  40bb72:	imul   esi,edi,0x28
  40bb75:	sub    eax,0x5a8ffe5
  40bb7a:	mov    ds:0x9c3dcf40,al
  40bb7f:	lock sbb BYTE PTR [ebp-0x623d00a6],dl
  40bb86:	mov    DWORD PTR [eax-0x31],0xf8ba9a40
  40bb8d:	jle    0x40bbb9
  40bb8f:	mov    WORD PTR [edx-0x21],cs
  40bb92:	sbb    DWORD PTR [esi-0x18],edx
  40bb95:	push   0xebe5
	...
  40bba2:	or     al,0x2e
  40bba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bba5:	add    ebx,eax
  40bba7:	or     esi,ebp
  40bba9:	dec    ebp
  40bbaa:	rcl    ch,1
  40bbac:	icebp  
  40bbad:	sets   BYTE PTR [eax-0x5c]
  40bbb1:	add    esi,DWORD PTR [edi-0x47a9c0e1]
  40bbb7:	pop    es
  40bbb8:	pusha  
  40bbb9:	ins    BYTE PTR es:[edi],dx
  40bbba:	mov    eax,0xa8ead1d5
  40bbbf:	pop    ebp
  40bbc0:	mov    bl,0xad
  40bbc2:	jo     0xcde04b8a
  40bbc8:	leave  
  40bbc9:	push   ebp
  40bbca:	nop
  40bbcb:	mov    esp,DWORD PTR [edx-0x327ff034]
  40bbd1:	add    DWORD PTR [ebp-0x2b],0xb4528ba1
  40bbd8:	xchg   ecx,eax
  40bbd9:	push   ebp
  40bbda:	jo     0x40bbdd
  40bbdc:	push   eax
  40bbdd:	pusha  
  40bbde:	pusha  
  40bbdf:	aad    0x99
  40bbe1:	add    al,0xdb
  40bbe3:	pop    edx
  40bbe4:	xchg   di,ax
  40bbe6:	imul   ecx,ebp,0xffffff89
  40bbe9:	push   ebp
  40bbea:	iret   
  40bbeb:	dec    ebx
  40bbec:	adc    DWORD PTR [ecx+0x5571e88a],eax
  40bbf2:	inc    eax
  40bbf3:	cmp    cl,0xb0
  40bbf6:	mov    al,0x7f
  40bbf8:	in     eax,0x64
  40bbfa:	jno    0x40bbd1
  40bbfc:	xlat   BYTE PTR ds:[ebx]
  40bbfd:	or     esi,DWORD PTR [edi]
  40bbff:	out    0x95,al
  40bc01:	push   ebp
  40bc02:	and    ch,dl
  40bc04:	xchg   edi,eax
  40bc05:	push   0x0
  40bc0a:	add    BYTE PTR [eax],al
  40bc0c:	add    BYTE PTR [eax],al
  40bc0e:	add    BYTE PTR [eax],al
  40bc10:	and    ch,dl
  40bc12:	dec    ecx
  40bc13:	push   ebp
  40bc14:	call   0xbd5:0x3cc25d87
  40bc1b:	ss call 0xf2d4:0xa236e40a
  40bc23:	pushf  
  40bc24:	(bad)  
  40bc25:	out    0x37,eax
  40bc27:	push   ebp
  40bc28:	adc    ah,0xf2
  40bc2b:	pop    esp
  40bc2c:	outs   dx,DWORD PTR ds:[esi]
  40bc2d:	int3   
  40bc2e:	repnz push cs
  40bc30:	or     BYTE PTR [edx+0x4],0x11
  40bc34:	mov    cl,0xb
  40bc36:	repz (bad) 
  40bc38:	and    ecx,DWORD PTR [ebx]
  40bc3a:	in     al,dx
  40bc3b:	(bad)  
  40bc3c:	sbb    edx,ebp
  40bc3e:	bnd je 0x40bc05
  40bc41:	out    0x13,eax
  40bc43:	popf   
  40bc44:	sbb    edx,ebp
  40bc46:	repnz xchg esp,eax
  40bc48:	loopne 0x40bc16
  40bc4a:	repnz (bad) 
  40bc4c:	sti    
  40bc4d:	dec    edx
  40bc4e:	add    al,0xc1
  40bc50:	(bad)  
  40bc51:	or     esi,ebx
  40bc53:	(bad)  
  40bc54:	sti    
  40bc55:	or     ch,al
  40bc57:	mov    dh,0x23
  40bc59:	aad    0xe3
  40bc5b:	lds    edx,FWORD PTR [edx-0x2c]
  40bc5e:	repnz scas al,BYTE PTR es:[edi]
  40bc60:	dec    ecx
  40bc61:	jecxz  0x40bc5d
  40bc63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc64:	sbb    ebp,eax
  40bc66:	in     al,dx
  40bc67:	push   edi
  40bc68:	add    edx,ebp
  40bc6a:	repnz pop esp
  40bc6c:	hlt    
  40bc6d:	int3   
  40bc6e:	repnz mov fs,esp
  40bc71:	lods   eax,DWORD PTR ds:[esi]
  40bc72:	mov    ecx,0x86
  40bc77:	add    BYTE PTR [eax],al
  40bc79:	add    BYTE PTR [eax],al
  40bc7b:	add    BYTE PTR [eax],al
  40bc7d:	add    bl,bh
  40bc7f:	aam    0xb8
  40bc81:	mov    DWORD PTR [ebx-0x687e0d2c],ebx
  40bc87:	or     eax,0xaa36ef3
  40bc8c:	rcr    BYTE PTR [esi-0x65],1
  40bc8f:	aam    0xe3
  40bc91:	sub    DWORD PTR [edx-0x2c],ebx
  40bc94:	repnz push esi
  40bc96:	push   ecx
  40bc97:	iret   
  40bc98:	cli    
  40bc99:	dec    esi
  40bc9a:	adc    esp,0x78
  40bc9d:	add    BYTE PTR [esi],bl
  40bc9f:	push   0x2bc9fe3b
  40bca4:	repz mov ch,0xc6
  40bca7:	inc    ebx
  40bca8:	repz dec DWORD PTR [esi-0x5600460d]
  40bcaf:	sub    ecx,DWORD PTR [ecx-0x8]
  40bcb2:	mov    edi,0xb9fff0ba
  40bcb7:	sub    edi,DWORD PTR [ecx-0x4]
  40bcba:	into   
  40bcbb:	aas    
  40bcbc:	scas   al,BYTE PTR es:[edi]
  40bcbd:	add    dh,ah
  40bcbf:	dec    eax
  40bcc0:	into   
  40bcc1:	or     BYTE PTR [esi+0x35ec8622],dh
  40bcc7:	xchg   ebx,eax
  40bcc8:	lock push 0xffffffa6
  40bccb:	jmp    0xd454bbd6
  40bcd0:	jmp    0xf389:0xf32f45b9
  40bcd7:	das    
  40bcd8:	fs loop 0x40bcbc
  40bcdb:	mov    esp,0xd3d3fef2
  40bce0:	jmp    0x0:0xf6
  40bce7:	add    BYTE PTR [eax],al
  40bce9:	add    BYTE PTR [eax],al
  40bceb:	add    BYTE PTR [ebx+0x2f],cl
  40bcee:	repz inc ebx
  40bcf1:	das    
  40bcf2:	repz jne 0x40bd63
  40bcf5:	aaa    
  40bcf6:	call   0xc56fe6ae
  40bcfb:	ret    0x7f72
  40bcfe:	pop    ecx
  40bcff:	mov    ecx,DWORD PTR [edx-0x3]
  40bd02:	(bad)  
  40bd03:	rol    BYTE PTR [ecx+0x2f],1
  40bd06:	repz lea esp,[ebx+0x43ff5c2f]
  40bd0d:	shl    ecx,cl
  40bd0f:	xor    eax,0x4c1469
  40bd14:	dec    esi
  40bd15:	lds    ebp,FWORD PTR [eax+eax*1+0xfb2d226]
  40bd1c:	mov    bl,0x81
  40bd1e:	push   cs
  40bd1f:	add    bh,cl
  40bd21:	call   0xe958026b
  40bd26:	push   cs
  40bd27:	add    bh,cl
  40bd29:	mov    eax,ds:0xda08f3c5
  40bd2e:	push   cs
  40bd2f:	add    BYTE PTR [ebp-0x18],dh
  40bd32:	sar    bh,1
  40bd34:	callw  0xbd08
  40bd38:	inc    ebx
  40bd39:	and    al,0x5b
  40bd3b:	push   eax
  40bd3c:	pop    edx
  40bd3d:	pop    esp
  40bd3e:	push   esp
  40bd3f:	mul    eax
  40bd41:	imul   edi,DWORD PTR [eax+0x5f7062fe],0xb370d375
  40bd4b:	mov    eax,ds:0xbff1e8cf
	...
  40bd58:	add    BYTE PTR [eax],al
  40bd5a:	cmp    esp,esp
  40bd5c:	dec    edi
  40bd5d:	std    
  40bd5e:	into   
  40bd5f:	call   0x90a52572
  40bd64:	leave  
  40bd65:	jmp    FWORD PTR [ecx+0x43e80c2b]
  40bd6b:	out    dx,eax
  40bd6c:	pop    ebp
  40bd6d:	inc    DWORD PTR [eax+ebx*1-0x74]
  40bd71:	test   DWORD PTR [ebx+0x1fff5e11],ebx
  40bd77:	ja     0x40bdc9
  40bd79:	loope  0x40bdc1
  40bd7b:	or     DWORD PTR [esi-0x77],ebx
  40bd7e:	push   edx
  40bd7f:	sbb    BYTE PTR [esi-0x1],dl
  40bd82:	jo     0x40bdf2
  40bd84:	or     BYTE PTR [eax-0x57],ch
  40bd87:	inc    eax
  40bd88:	leave  
  40bd89:	jmp    DWORD PTR [ecx+0x33]
  40bd8c:	pop    edi
  40bd8d:	neg    DWORD PTR [eax+0x1]
  40bd90:	pop    esi
  40bd91:	xor    eax,0xffc99080
  40bd96:	xor    al,dh
  40bd98:	xchg   bh,bh
  40bd9a:	inc    eax
  40bd9b:	pop    edi
  40bd9c:	test   ah,ah
  40bd9e:	inc    eax
  40bd9f:	popa   
  40bda0:	pop    esi
  40bda1:	push   0xffffffcf
  40bda3:	jg     0x40bd82
  40bda5:	and    al,BYTE PTR [edi+0x5a52e540]
  40bdab:	iret   
  40bdac:	push   ecx
  40bdad:	push   edx
  40bdae:	sbb    dl,dl
  40bdb0:	pop    ss
  40bdb1:	inc    ebx
  40bdb2:	xchg   DWORD PTR [eax-0x1b],eax
  40bdb5:	pop    ebx
  40bdb6:	adc    eax,0x56523217
  40bdbb:	cld    
  40bdbc:	dec    eax
  40bdbd:	pop    edx
	...
  40bdc6:	add    BYTE PTR [eax],al
  40bdc8:	clc    
  40bdc9:	ror    esi,1
  40bdcb:	add    esp,DWORD PTR [edi-0x75]
  40bdce:	int    0xc4
  40bdd0:	call   0xd89415a5
  40bdd5:	rcr    DWORD PTR [ecx],1
  40bdd7:	push   edx
  40bdd8:	mov    ds:0xd0c4acc2,al
  40bddd:	fstp   DWORD PTR [eax-0x75]
  40bde0:	enter  0x7bd1,0x88
  40bde4:	mov    bh,0xc9
  40bde6:	stc    
  40bde7:	push   ecx
  40bde8:	and    eax,0x18c48d80
  40bded:	aas    
  40bdee:	in     eax,0x50
  40bdf0:	(bad)  
  40bdf1:	rcr    cl,1
  40bdf3:	push   ecx
  40bdf4:	mov    al,ds:0x7410fd1
  40bdf9:	aas    
  40bdfa:	in     eax,0x5b
  40bdfc:	inc    ecx
  40bdfd:	sbb    dl,cl
  40bdff:	push   ecx
  40be00:	push   esi
  40be01:	sti    
  40be02:	les    ebx,FWORD PTR [ecx-0x80]
  40be05:	shl    DWORD PTR [edi-0x79],1
  40be08:	mov    ds:0x1f51a1c9,eax
  40be0d:	push   0x800fabec
  40be12:	xchg   edx,eax
  40be13:	xchg   edi,eax
  40be14:	pop    edi
  40be15:	leave  
  40be16:	cdq    
  40be17:	push   ecx
  40be18:	pop    eax
  40be19:	mov    edx,DWORD PTR [edx-0x627ff044]
  40be1f:	fld    QWORD PTR [eax-0x7f028e2f]
  40be25:	dec    esp
  40be26:	or     al,0xd0
  40be28:	push   ebx
  40be29:	adc    ebx,eax
  40be2b:	jbe    0x40be2d
	...
  40be35:	add    BYTE PTR [esi+0x1cdc07d0],bl
  40be3b:	sar    BYTE PTR [ebx],cl
  40be3d:	outs   dx,BYTE PTR ds:[esi]
  40be3e:	dec    eax
  40be3f:	mov    ah,0xfa
  40be41:	push   esi
  40be42:	jle    0x40be73
  40be44:	in     al,0x11
  40be46:	cmp    cl,dl
  40be48:	repnz push edx
  40be4a:	pop    es
  40be4b:	xchg   ah,cl
  40be4d:	mov    ch,0xd6
  40be4f:	das    
  40be50:	in     al,0x5
  40be52:	pusha  
  40be53:	shl    edx,1
  40be55:	es dec eax
  40be57:	mov    ah,0xfa
  40be59:	es jle 0x40bec6
  40be5c:	or     al,0xe9
  40be5e:	int3   
  40be5f:	add    cl,BYTE PTR [ecx-0xd2f89c7]
  40be65:	mov    ecx,0xa8543af4
  40be6a:	int3   
  40be6b:	sar    BYTE PTR [eax-0xd2ed807],1
  40be71:	mul    cl
  40be73:	rol    BYTE PTR [ebx-0x58],0xcc
  40be77:	out    0x10,eax
  40be79:	mov    eax,ds:0x6484d0ff
  40be7e:	hlt    
  40be7f:	enter  0xd6f2,0x53
  40be83:	adc    ch,al
  40be85:	(bad)  
  40be86:	call   eax
  40be88:	or     esi,esi
  40be8a:	push   eax
  40be8b:	hlt    
  40be8c:	or     ebp,ecx
  40be8e:	int3   
  40be8f:	cld    
  40be90:	mov    al,0xc5
  40be92:	pop    ss
  40be93:	shl    edx,1
  40be95:	jmp    0xe9c2ba69
	...
  40bea2:	add    BYTE PTR [eax],al
  40bea4:	int3   
  40bea5:	jg     0x40be36
  40bea7:	pop    esp
  40bea8:	add    al,0xc9
  40beaa:	repnz xchg esi,eax
  40beac:	int3   
  40bead:	or     BYTE PTR [eax+0xc7fcc68],0x0
  40beb4:	fmulp  st(3),st
  40beb6:	repnz out dx,al
  40beb8:	add    BYTE PTR [eax],dh
  40beba:	jns    0x40bec4
  40bebc:	dec    esi
  40bebd:	sar    BYTE PTR [ebx-0x46d05e01],0xec
  40bec4:	mov    DWORD PTR [edi],ebp
  40bec6:	repz (bad) 
  40bec8:	sti    
  40bec9:	shr    edx,cl
  40becb:	shl    BYTE PTR [edi],1
  40becd:	das    
  40bece:	repz (bad) 
  40bed0:	cmp    esi,DWORD PTR [ebx+edi*8]
  40bed3:	call   DWORD PTR [ecx-0x61f786d1]
  40bed9:	cmp    bh,BYTE PTR [ebp-0x46d03e01]
  40bedf:	in     al,0xb9
  40bee1:	das    
  40bee2:	repz dec DWORD PTR [ebx-0x2c]
  40bee6:	jmp    0x7bff:0xf32f87b4
  40beed:	mov    al,ds:0x2fc1fffb
  40bef2:	jns    0x40befc
  40bef4:	faddp  st(6),st
  40bef6:	mov    ebx,0xb93fc1ff
  40befb:	loopne 0x40beb6
  40befd:	aas    
  40befe:	repz (bad) 
  40bf00:	cmp    ecx,ebx
  40bf02:	jmp    0x83:0xf33f4798
	...
  40bf11:	add    BYTE PTR [ebx-0x64],al
  40bf14:	sti    
  40bf15:	inc    DWORD PTR [ecx+0x251b7884]
  40bf1b:	icebp  
  40bf1c:	fcomi  st,st(7)
  40bf1e:	xchg   ecx,eax
  40bf1f:	aas    
  40bf20:	or     BYTE PTR [ebp-0x5c],dh
  40bf23:	dec    edx
  40bf24:	mov    eax,ebx
  40bf26:	cmp    DWORD PTR [edi],edi
  40bf28:	repz push DWORD PTR [esi+0x3e]
  40bf2c:	jns    0x40bf36
  40bf2e:	ds enter 0xffbb,0x41
  40bf33:	sub    eax,DWORD PTR [esi]
  40bf35:	push   0xffffffcf
  40bf37:	fadd   DWORD PTR [ecx+0x75]
  40bf3a:	mov    DWORD PTR [eax],0x648b0f0
  40bf40:	inc    ebx
  40bf41:	mov    ch,0x2b
  40bf43:	push   esi
  40bf44:	inc    ebx
  40bf45:	jmp    DWORD PTR [edi]
  40bf47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf48:	xchg   esp,eax
  40bf49:	push   DWORD PTR [eax]
  40bf4b:	pop    esi
  40bf4c:	xchg   ebp,eax
  40bf4d:	in     al,dx
  40bf4e:	and    BYTE PTR [esi+0x43],ah
  40bf51:	call   0xff83b3e4
  40bf56:	sbb    ah,ch
  40bf58:	dec    edi
  40bf59:	not    DWORD PTR [eax]
  40bf5b:	ds push eax
  40bf5d:	ss inc ebx
  40bf5f:	inc    esi
  40bf60:	inc    ebx
  40bf61:	(bad)  
  40bf62:	cmp    bh,BYTE PTR [ecx]
  40bf64:	pop    ebx
  40bf65:	(bad)  
  40bf66:	clc    
  40bf67:	inc    eax
  40bf68:	pop    ss
  40bf69:	mov    ah,0xf0
  40bf6b:	popf   
  40bf6c:	inc    ebx
  40bf6d:	mov    ch,0x7
  40bf6f:	outs   dx,BYTE PTR ds:[esi]
  40bf70:	inc    ebx
  40bf71:	push   edi
  40bf73:	mov    eax,0xff9a
	...
  40bf80:	fdiv   DWORD PTR [ebp-0x6b]
  40bf83:	lock fdivr DWORD PTR [ebp+0x43]
  40bf87:	call   0xff844c6e
  40bf8c:	shl    BYTE PTR [ebx],0x47
  40bf8f:	jmp    0xff829336
  40bf94:	mov    al,0x53
  40bf96:	inc    ebx
  40bf97:	call   0x4fb87a
  40bf9c:	xchg   esi,eax
  40bf9d:	sbb    dh,bh
  40bf9f:	inc    DWORD PTR [ebx]
  40bfa1:	bound  edx,QWORD PTR [ebx-0x7d]
  40bfa4:	mov    edi,DWORD PTR [esp+edx*8+0x41d3f6ff]
  40bfab:	jne    0x40bf84
  40bfad:	mov    al,0x29
  40bfaf:	mov    cl,0x78
  40bfb1:	adc    eax,0x40734570
  40bfb6:	clc    
  40bfb7:	push   edi
  40bfb8:	push   cs
  40bfb9:	and    ch,0x4e
  40bfbc:	fidiv  DWORD PTR [edi-0x63]
  40bfbf:	rcr    BYTE PTR [ebx-0x32],1
  40bfc2:	cdq    
  40bfc3:	dec    esi
  40bfc4:	fcmove st,st(3)
  40bfc6:	sbb    eax,0x9516d7d0
  40bfcc:	inc    eax
  40bfcd:	into   
  40bfce:	mov    ebx,0x107fd341
  40bfd3:	jnp    0x40bff8
  40bfd5:	add    BYTE PTR [ecx+0x69ce203f],ch
  40bfdb:	or     BYTE PTR [edx-0x5db14b35],0x7b
  40bfe2:	pop    edx
  40bfe3:	sbb    BYTE PTR [eax],al
	...
  40bfed:	add    BYTE PTR [eax],al
  40bfef:	aaa    
  40bff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bff1:	add    esi,edi
  40bff3:	in     eax,0x69
  40bff5:	add    ecx,edi
  40bff7:	jp     0x40c01e
  40bff9:	(bad)  
  40bffa:	push   ebx
  40bffb:	cs out 0x3,eax
  40bffe:	iret   
  40bfff:	(bad)  
  40c000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c001:	dec    ebx
  40c002:	iret   
  40c003:	jg     0x40bfea
  40c005:	add    ecx,DWORD PTR [eax]
  40c007:	inc    esp
  40c008:	sbb    DWORD PTR [esi-0x30],ecx
  40c00b:	jg     0x40bff2
  40c00d:	fnop   
  40c00f:	push   edi
  40c010:	in     eax,0xd9
  40c012:	enter  0xe557,0x80
  40c016:	or     dl,ah
  40c018:	xchg   esp,eax
  40c019:	adc    BYTE PTR [edx-0x2c],0xf1
  40c01d:	dec    ebp
  40c01e:	mov    al,0x30
  40c020:	loop   0x40bff9
  40c022:	mov    al,ds:0xb7504fcd
  40c027:	pop    es
  40c028:	jb     0x40c02e
  40c02a:	iret   
  40c02b:	js     0x40bfd2
  40c02d:	fmul   st,st(3)
  40c02f:	(bad)  
  40c030:	push   es
  40c031:	add    cl,bh
  40c033:	jg     0x40c092
  40c035:	cdq    
  40c036:	pop    ss
  40c037:	aas    
  40c038:	in     eax,0x4c
  40c03a:	add    bh,BYTE PTR [esp+ecx*1-0x3f]
  40c03e:	jne    0x40c056
  40c040:	repz scas al,BYTE PTR es:[edi]
  40c042:	out    0xaf,al
  40c044:	sub    BYTE PTR [edi+eax*1-0x2b],0xf2
  40c049:	sahf   
  40c04a:	and    ebp,DWORD PTR [edi]
  40c04c:	in     al,0x26
  40c04e:	cmp    cl,ch
  40c050:	repnz pusha 
	...
  40c05a:	add    BYTE PTR [eax],al
  40c05c:	push   eax
  40c05d:	sar    dl,1
  40c05f:	xchg   BYTE PTR [edx-0x5d527706],dl
  40c065:	int3   
  40c066:	repnz sbb DWORD PTR [ebx],edx
  40c069:	lds    edx,FWORD PTR [ebx+0x28]
  40c06c:	ror    esp,cl
  40c06e:	mov    eax,0xf2cc7a59
  40c073:	pop    esi
  40c074:	sar    BYTE PTR [ebx+eax*2+0x5cd7cca8],0x97
  40c07c:	call   0xf2d4:0x776c84cc
  40c083:	ds adc eax,0x23176acd
  40c089:	inc    eax
  40c08a:	or     al,0x2e
  40c08c:	inc    eax
  40c08d:	sar    dl,1
  40c08f:	es xchg edx,eax
  40c091:	int3   
  40c092:	cmp    BYTE PTR [esi],ch
  40c094:	sbb    eax,DWORD PTR [eax+0xc]
  40c097:	add    DWORD PTR [esi+0x440ef315],edi
  40c09d:	add    esp,eax
  40c09f:	(bad)  
  40c0a0:	adc    ecx,ebp
  40c0a2:	gs jmp 0xa894a23c
  40c0a8:	int3   
  40c0a9:	int3   
  40c0aa:	mov    eax,0xf2cd03f9
  40c0af:	out    0xb9,al
  40c0b1:	mov    esp,0xd7d32843
  40c0b6:	sbb    BYTE PTR [edi+0x6484cd03],bl
  40c0bc:	and    al,0xd5
  40c0be:	repnz add BYTE PTR [eax],al
	...
  40c0c9:	add    BYTE PTR [ecx-0x77980d5a],cl
  40c0cf:	sbb    BYTE PTR [eax+eax*1+0x39],cl
  40c0d3:	cmc    
  40c0d4:	sti    
  40c0d5:	idiv   DWORD PTR [ecx]
  40c0d7:	cmp    esi,ebx
  40c0d9:	xor    eax,0x4c0819
  40c0de:	xor    edi,DWORD PTR ds:[ecx-0x76b6c601]
  40c0e5:	loopne 0x40c148
  40c0e7:	cmp    esi,ebx
  40c0e9:	lea    esi,[ebx-0x46000468]
  40c0ef:	adc    BYTE PTR [ebx-0x17],ch
  40c0f2:	faddp  st(0),st
  40c0f4:	repnz (bad) 
  40c0f6:	jecxz  0x40c128
  40c0f8:	sti    
  40c0f9:	jmp    FWORD PTR [ecx+0x5ecf393b]
  40c0ff:	shl    edx,0xe7
  40c102:	shl    ch,cl
  40c104:	repnz (bad) 
  40c106:	in     eax,dx
  40c107:	aas    
  40c108:	js     0x40c11d
  40c10a:	jne    0x40c109
  40c10c:	shl    edi,cl
  40c10e:	mov    ecx,0xec75083b
  40c113:	cmp    bh,BYTE PTR [edi+ecx*4]
  40c116:	jae    0x40c0b4
  40c118:	sti    
  40c119:	jmp    FWORD PTR [ecx+0x73c70627]
  40c11f:	pushf  
  40c120:	sti    
  40c121:	(bad)  
  40c122:	mov    ecx,0xb6fff2d5
  40c127:	por    mm2,QWORD PTR [ebp-0x720cc3fc]
	...
  40c136:	add    BYTE PTR [eax],al
  40c138:	xor    ecx,DWORD PTR [edi+0xeb9fffb]
  40c13e:	imul   edx,ecx,0x3e
  40c141:	mov    esi,0x3443fef2
  40c146:	sti    
  40c147:	(bad)  
  40c148:	jns    0x40c181
  40c14a:	cmp    edi,ecx
  40c14c:	iret   
  40c14d:	mov    al,ds:0x4970ffc9
  40c152:	popf   
  40c153:	inc    DWORD PTR [eax-0x238bb132]
  40c159:	push   ebp
  40c15a:	test   eax,edx
  40c15c:	js     0x40c170
  40c15e:	inc    edi
  40c15f:	add    al,0xe2
  40c161:	fiadd  WORD PTR [ebp+0x30]
  40c164:	push   eax
  40c165:	pop    esp
  40c166:	cmp    al,0xf7
  40c168:	pop    eax
  40c169:	jmp    0xf73c:0x5c880a52
  40c170:	dec    eax
  40c171:	cli    
  40c172:	pop    es
  40c173:	add    bh,cl
  40c175:	fdivr  DWORD PTR [esi+0x47869ee7]
  40c17b:	dec    DWORD PTR [esp+edx*4+0x6c]
  40c17f:	imul   DWORD PTR [eax]
  40c181:	pop    edx
  40c182:	or     BYTE PTR [eax+eiz*8+0x55],dh
  40c186:	test   esp,edx
  40c188:	and    BYTE PTR [edx],ch
  40c18a:	inc    edi
  40c18b:	add    bl,BYTE PTR [edx+0x5bffd26a]
  40c191:	fs xor al,0xf7
  40c194:	add    BYTE PTR [edx-0x48],al
  40c197:	inc    BYTE PTR [edx+0x45]
  40c19a:	pop    edi
  40c19b:	inc    DWORD PTR [eax]
	...
  40c1a5:	add    al,dh
  40c1a7:	inc    eax
  40c1a8:	nop
  40c1a9:	fucomi st,st(0)
  40c1ab:	cdq    
  40c1ac:	repz mov edi,0xbd89cf5b
  40c1b2:	or     esi,DWORD PTR [edx+0x47]
  40c1b5:	dec    edi
  40c1b7:	jmp    0x40c1b4
  40c1b9:	inc    BYTE PTR [edx-0x3f00a07c]
  40c1bf:	jo     0x40c1bc
  40c1c1:	mov    cl,0xb8
  40c1c3:	leave  
  40c1c4:	dec    ebp
  40c1c5:	test   DWORD PTR [ebx-0x3000ba37],ebp
  40c1cb:	fmul   DWORD PTR [esi]
  40c1cd:	add    BYTE PTR [edi+edi*2-0x58],cl
  40c1d1:	pop    edi
  40c1d2:	mov    al,ds:0x1b03d1ca
  40c1d7:	push   edi
  40c1d8:	data16 mov BYTE PTR [ebx-0x2e],bh
  40c1dc:	ror    DWORD PTR [edx-0x31],0x53
  40c1e0:	inc    edi
  40c1e1:	xchg   DWORD PTR [edx],edi
  40c1e3:	xlat   BYTE PTR ds:[ebx]
  40c1e4:	mov    ecx,0x317f704a
  40c1e9:	lods   eax,DWORD PTR ds:[esi]
  40c1ea:	lock jge 0x40c1d2
  40c1ed:	pop    edx
  40c1ee:	and    edx,ecx
  40c1f0:	paddb  mm6,QWORD PTR [eax-0x13]
  40c1f4:	inc    edx
  40c1f5:	dec    edx
  40c1f6:	push   eax
  40c1f7:	retf   0x574f
  40c1fa:	inc    eax
  40c1fb:	retf   0x4a81
  40c1fe:	mov    edx,0x69619d77
  40c203:	retf   0x4a71
  40c206:	jp     0x40c1df
  40c208:	jno    0x40c254
	...
  40c212:	add    BYTE PTR [eax],al
  40c214:	sub    dl,cl
  40c216:	idiv   ebx
  40c218:	sub    BYTE PTR [edi-0x35e7b566],ah
  40c21e:	xchg   edi,eax
  40c21f:	aaa    
  40c220:	sbb    dl,cl
  40c222:	pop    ecx
  40c223:	dec    edx
  40c224:	inc    edx
  40c225:	jecxz  0x40c280
  40c227:	dec    edx
  40c228:	add    dl,cl
  40c22a:	scas   eax,DWORD PTR es:[edi]
  40c22b:	sti    
  40c22c:	lock out 0x82,al
  40c22f:	dec    edx
  40c230:	lock leave 
  40c232:	outs   dx,DWORD PTR ds:[esi]
  40c233:	daa    
  40c234:	loopne 0x40c1ff
  40c236:	and    DWORD PTR [edx+0x5a],ecx
  40c239:	ja     0x40c258
  40c23b:	scas   eax,DWORD PTR es:[edi]
  40c23c:	sub    cl,dl
  40c23e:	adc    DWORD PTR [edx+0x1a],ecx
  40c241:	fist   WORD PTR [ecx]
  40c243:	dec    edx
  40c244:	enter  0x97c9,0xfb
  40c248:	test   al,0x18
  40c24a:	pop    ebx
  40c24b:	dec    edx
  40c24c:	mov    eax,0xb85f37c9
  40c251:	leave  
  40c252:	or     esi,esi
  40c254:	add    eax,0x16eebcf6
  40c259:	leave  
  40c25a:	mov    eax,0xf2c8fed5
  40c25f:	rol    DWORD PTR [esi+0x16d6f310],1
  40c265:	adc    esp,esp
  40c267:	(bad)  
  40c268:	push   ss
  40c269:	leave  
  40c26a:	jecxz  0x40c2a9
  40c26c:	pop    esp
  40c26d:	leave  
  40c26e:	repnz mov esi,0xb6fae040
  40c274:	push   ss
  40c275:	fsub   DWORD PTR [eax+edi*2+0x0]
	...
  40c281:	add    BYTE PTR [esi],dl
  40c283:	leave  
  40c284:	repnz pop esp
  40c286:	add    edx,ecx
  40c288:	repnz sahf 
  40c28a:	repz sub DWORD PTR [ebp+0x48c89696],edi
  40c291:	xchg   ecx,eax
  40c292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c293:	psllw  mm0,QWORD PTR [esi+0x7d78c886]
  40c29a:	xchg   ebx,eax
  40c29b:	inc    ebp
  40c29c:	xchg   ecx,eax
  40c29d:	jmp    0xe20e796e
  40c2a2:	int3   
  40c2a3:	xor    al,BYTE PTR [edi-0x83badab]
  40c2a9:	ror    esp,cl
  40c2ab:	push   ebp
  40c2ac:	add    dl,BYTE PTR [esi+0x18]
  40c2af:	and    esp,0xf2c966d9
  40c2b5:	jo     0x40c2ef
  40c2b7:	lds    esp,FWORD PTR [ebx-0x17]
  40c2ba:	int3   
  40c2bb:	fdiv   DWORD PTR [ecx+0x4d312ac1]
  40c2c1:	jmp    0xa894f4ca
  40c2c6:	int3   
  40c2c7:	enter  0xf178,0x74
  40c2cb:	and    al,0xd6
  40c2cd:	push   ss
  40c2ce:	push   ss
  40c2cf:	sti    
  40c2d0:	dec    eax
  40c2d1:	adc    DWORD PTR [ebx+0x60],edi
  40c2d4:	lods   eax,DWORD PTR ds:[esi]
  40c2d5:	add    BYTE PTR [esi-0x43],ch
  40c2d8:	repnz addr16 dec ebx
  40c2db:	adc    al,0x4c
  40c2dd:	add    BYTE PTR [ecx+0x7748c379],ah
  40c2e3:	jl     0x40c2c9
  40c2e5:	sbb    eax,0x0
  40c2ea:	add    BYTE PTR [eax],al
  40c2ec:	add    BYTE PTR [eax],al
  40c2ee:	add    BYTE PTR [eax],al
  40c2f0:	cmp    dh,BYTE PTR [edi]
  40c2f2:	repz or esp,DWORD PTR [esi-0x48]
  40c2f6:	sub    BYTE PTR [ecx+0x1642fbb],cl
  40c2fc:	jbe    0x40c325
  40c2fe:	mov    dl,0xff
  40c300:	mov    ebx,0x43a2eacb
  40c305:	aaa    
  40c306:	repz jmp FWORD PTR [ebx+0x1a75f33b]
  40c30d:	aaa    
  40c30e:	jns    0x40c318
  40c310:	mov    ah,BYTE PTR ds:[ecx+0x793731ff]
  40c317:	hlt    
  40c318:	dec    esi
  40c319:	fwait
  40c31a:	mov    esp,0xa3a451ff
  40c31f:	pop    eax
  40c320:	out    0x83,eax
  40c322:	repz jne 0x40c363
  40c325:	and    al,0xf2
  40c327:	cld    
  40c328:	mov    eax,ds:0xb275f337
  40c32d:	aaa    
  40c32e:	jns    0x40c338
  40c330:	jle    0x40c2ef
  40c332:	mov    al,ds:0xce8571ff
  40c337:	add    al,0xf6
  40c339:	sbb    BYTE PTR [esi-0xf778a14],al
  40c33f:	push   0xffffffe6
  40c341:	test   eax,0xc43bff01
  40c346:	jmp    0x2b89:0xf33753e5
  40c34d:	inc    eax
  40c34e:	fs add dh,ah
  40c351:	es mov dl,0x68
	...
  40c35c:	add    BYTE PTR [eax],al
  40c35e:	lods   al,BYTE PTR ds:[esi]
  40c35f:	adc    al,0x4c
  40c361:	add    bh,cl
  40c363:	add    BYTE PTR ds:0x43d90e59,cl
  40c369:	jne    0x40c332
  40c36b:	jo     0x40c3ac
  40c36d:	fnstenv [eax-0x548ab53a]
  40c373:	into   
  40c374:	rol    BYTE PTR [edi],0xb7
  40c377:	fist   WORD PTR [edi+edi*8+0x44e1098]
  40c37e:	iret   
  40c37f:	mov    esi,DWORD PTR [edi-0x14]
  40c382:	dec    esp
  40c383:	adc    eax,0x42cf6a44
  40c388:	clc    
  40c389:	inc    BYTE PTR [edx]
  40c38b:	rcl    DWORD PTR [esi-0x56],1
  40c38e:	and    al,BYTE PTR [esi]
  40c390:	dec    ebx
  40c391:	mov    DWORD PTR [edx],edx
  40c393:	or     eax,0x660ffd0
  40c398:	mov    ch,BYTE PTR [eax-0x41]
  40c39b:	aas    
  40c39c:	leave  
  40c39d:	(bad)  
  40c39e:	call   0xcf81636e
  40c3a3:	in     eax,dx
  40c3a4:	fadd   QWORD PTR [edi]
  40c3a6:	aaa    
  40c3a7:	dec    esp
  40c3a8:	and    edi,edi
  40c3aa:	cmp    BYTE PTR [ebx+0x8],dh
  40c3ad:	push   0xffc99f9d
  40c3b2:	mov    al,0x10
  40c3b4:	mov    al,ds:0x1d55cf40
  40c3b9:	iret   
  40c3ba:	xchg   DWORD PTR [edi],edx
  40c3bc:	psubsb mm6,QWORD PTR [esi-0x17]
  40c3c0:	dec    edx
  40c3c1:	inc    DWORD PTR [eax]
	...
  40c3cb:	add    ah,dl
  40c3cd:	cwde   
  40c3ce:	fsub   QWORD PTR [ebx]
  40c3d0:	ja     0x40c398
  40c3d2:	lahf   
  40c3d3:	inc    eax
  40c3d4:	iret   
  40c3d5:	call   0x867be930
  40c3da:	dec    ebx
  40c3db:	push   eax
  40c3dc:	ja     0x40c3b6
  40c3de:	push   cs
  40c3df:	out    dx,eax
  40c3e0:	and    ecx,eax
  40c3e2:	(bad)  
  40c3e3:	pop    eax
  40c3e4:	mov    ?,WORD PTR [edi-0x1b]
  40c3e7:	mov    bl,0xd1
  40c3e9:	dec    esp
  40c3ea:	std    
  40c3eb:	pop    ebx
  40c3ec:	fild   QWORD PTR [eax+0x68b74719]
  40c3f2:	push   ebp
  40c3f3:	inc    edi
  40c3f4:	mov    eax,0xb0476fc6
  40c3f9:	dec    esp
  40c3fa:	std    
  40c3fb:	pop    ebx
  40c3fc:	pop    ebx
  40c3fd:	adc    al,0xfa
  40c3ff:	inc    esi
  40c400:	xchg   esi,eax
  40c401:	shr    eax,0x3
  40c404:	add    bh,bl
  40c406:	fadd   DWORD PTR [edx-0x50c53c75]
  40c40c:	idiv   BYTE PTR [edi+0x4f]
  40c40f:	cmc    
  40c410:	or     DWORD PTR [ebp+ebp*8+0x5b],0x46ca14a9
  40c418:	inc    esi
  40c419:	cmp    al,0xb1
  40c41b:	jp     0x40c3bf
  40c41d:	xor    ch,BYTE PTR ds:0xdff960c5
  40c423:	scas   al,BYTE PTR es:[edi]
  40c424:	adc    BYTE PTR [ecx-0x1b],al
  40c427:	adc    DWORD PTR [eax-0x4f44e681],0x25
  40c42e:	cmp    al,0xc5
	...
  40c438:	add    BYTE PTR [eax],al
  40c43a:	inc    eax
  40c43b:	sub    eax,0x7f54ba8d
  40c440:	in     eax,0xfa
  40c442:	jo     0x40c48f
  40c444:	enter  0x30ad,0xe6
  40c448:	cmp    eax,DWORD PTR [esi+0x20]
  40c44b:	push   edi
  40c44c:	or     ch,BYTE PTR [ebp+0x5bb57f8f]
  40c452:	pop    edx
  40c453:	adc    dl,BYTE PTR [edx+0x46]
  40c456:	lahf   
  40c457:	push   edi
  40c458:	in     eax,0x3
  40c45a:	lock add al,0xb5
  40c45d:	inc    esi
  40c45e:	xor    BYTE PTR [edi+0x5d],0x43
  40c462:	sbb    al,dh
  40c464:	xor    DWORD PTR [ebx+0x39],ebx
  40c467:	push   ss
  40c468:	or     al,0x36
  40c46a:	mov    edx,ebx
  40c46c:	or     al,0xa7
  40c46e:	dec    esp
  40c46f:	test   DWORD PTR [esp+ebx*4],ecx
  40c472:	xchg   BYTE PTR ds:0x70cdaf0,bh
  40c478:	repz push ss
  40c47a:	or     ebp,eax
  40c47c:	std    
  40c47d:	aas    
  40c47e:	les    edi,FWORD PTR [ecx+edi*2+0x3c]
  40c482:	or     DWORD PTR [ebx-0x10],ecx
  40c485:	(bad)  
  40c486:	cwde   
  40c487:	jge    0x40c46d
  40c489:	jecxz  0x40c4d2
  40c48b:	(bad)
  40c48e:	jb     0x40c448
  40c490:	int    0xed
  40c492:	int3   
  40c493:	sub    al,BYTE PTR [edi-0x1043b133]
  40c499:	inc    ebx
  40c49a:	retf   
  40c49b:	pop    ecx
  40c49c:	push   ds
  40c49d:	into   
	...
  40c4a6:	add    BYTE PTR [eax],al
  40c4a8:	mov    BYTE PTR [ebp-0x1c],bh
  40c4ab:	xchg   ebp,eax
  40c4ac:	push   edi
  40c4ad:	(bad)
  40c4b0:	sub    cl,cl
  40c4b2:	arpl   cx,bp
  40c4b4:	int3   
  40c4b5:	aam    0xb1
  40c4b7:	inc    ecx
  40c4b8:	xchg   BYTE PTR [eax],ch
  40c4ba:	dec    ebp
  40c4bb:	jmp    0x28961434
  40c4c0:	rol    esp,cl
  40c4c2:	js     0x40c4a5
  40c4c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4c5:	in     al,dx
  40c4c6:	ror    DWORD PTR [esi-0x7a873b6e],cl
  40c4cc:	mov    cl,BYTE PTR [edx+0x4]
  40c4cf:	xchg   ecx,eax
  40c4d0:	loopne 0x40c4e5
  40c4d2:	repz jbe 0x40c4b9
  40c4d5:	rol    DWORD PTR [edi],0xe9
  40c4d8:	imul   edi,edx,0xa38f68df
  40c4de:	cli    
  40c4df:	pop    esi
  40c4e0:	xchg   edx,eax
  40c4e1:	repnz dec eax
  40c4e3:	push   ebp
  40c4e4:	cmp    eax,esi
  40c4e6:	js     0x40c4c5
  40c4e8:	xchg   ebx,eax
  40c4e9:	mov    al,bl
  40c4eb:	add    BYTE PTR [esi],bh
  40c4ed:	ret    0xe7f2
  40c4f0:	adc    al,0x58
  40c4f2:	or     al,0x0
  40c4f4:	in     eax,dx
  40c4f5:	inc    eax
  40c4f6:	add    eax,DWORD PTR [ebp+0xc8147]
  40c4fc:	mov    eax,ds:0xb600fb04
  40c501:	or     BYTE PTR [edi+eax*8],0x73
  40c505:	xor    al,0xf3
  40c507:	pop    es
  40c508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c509:	and    BYTE PTR [esi+0x0],0x0
	...
  40c515:	add    BYTE PTR [eax+eax*4+0x66],bl
  40c519:	add    BYTE PTR [eax+eax*4],bh
  40c51c:	add    DWORD PTR [ebp-0x5e],0xa2858010
  40c523:	xor    esi,ebx
  40c525:	call   esi
  40c527:	cmp    bh,BYTE PTR [ecx-0x8]
  40c52a:	test   eax,0xe2e8f6b5
  40c52f:	push   esi
  40c530:	or     al,0x0
  40c532:	ins    DWORD PTR es:[edi],dx
  40c533:	inc    eax
  40c534:	js     0x40c53b
  40c536:	lahf   
  40c537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c538:	or     eax,DWORD PTR [eax]
  40c53a:	jbe    0x40c4e4
  40c53c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c53d:	dec    eax
  40c53e:	mov    bh,0x7b
  40c540:	repz jne 0x40c5bd
  40c543:	sub    BYTE PTR [ecx+0x5c3b29b2],cl
  40c549:	mov    eax,DWORD PTR [esi+0x61f4894d]
  40c54f:	cmp    esi,ebx
  40c551:	push   eax
  40c552:	hlt    
  40c553:	and    edi,DWORD PTR [ecx-0x4e]
  40c556:	dec    ecx
  40c557:	cmp    eax,DWORD PTR [ebp-0xccc597b]
  40c55d:	dec    DWORD PTR [esi-0x79]
  40c560:	mov    ds:0xf2a6a9ff,al
  40c565:	addr16 dec esi
  40c567:	sbb    DWORD PTR [eax+eax*1-0x57],ecx
  40c56b:	cmc    
  40c56c:	sti    
  40c56d:	test   edi,0xc2ff482d
  40c573:	gs mov bh,0x40
  40c576:	iret   
  40c577:	cs xor al,0xb1
	...
  40c582:	add    BYTE PTR [eax],al
  40c584:	call   0xebc63c0d
  40c589:	test   BYTE PTR [eax-0x1],cl
  40c58c:	gs (bad) 
  40c58e:	(bad)  
  40c58f:	xchg   DWORD PTR [esi+0x17],esi
  40c592:	ud0    eax,DWORD PTR [edx-0x3f00bf97]
  40c599:	push   0x2
  40c59b:	iret   
  40c59c:	pop    es
  40c59d:	sbb    BYTE PTR [edi],cl
  40c59f:	call   0xff894e06
  40c5a4:	push   esi
  40c5a5:	pop    esp
  40c5a6:	pop    ebx
  40c5a7:	mul    DWORD PTR [eax+0x30ffd3ca]
  40c5ad:	and    ah,BYTE PTR [esi+0x74d9cf40]
  40c5b3:	lock and BYTE PTR [edx+0x19baff4e],0xc0
  40c5bb:	inc    eax
  40c5bc:	iret   
  40c5bd:	rcr    BYTE PTR [esi-0x7f458f4f],0x85
  40c5c4:	ja     0x40c5d0
  40c5c6:	dec    edi
  40c5c7:	call   DWORD PTR [edx+0x54]
  40c5ca:	ins    BYTE PTR es:[edi],dx
  40c5cb:	neg    DWORD PTR [eax+0x12]
  40c5ce:	fsub   DWORD PTR [edi+0x2e]
  40c5d1:	inc    eax
  40c5d2:	leave  
  40c5d3:	dec    DWORD PTR [ecx+0x2c]
  40c5d6:	cmp    bh,dh
  40c5d8:	inc    eax
  40c5d9:	jmp    0xffc9:0xa108354e
  40c5e0:	sub    BYTE PTR [ebp+0x79],ch
  40c5e3:	jmp    FWORD PTR [eax]
  40c5e5:	into   
  40c5e6:	dec    esi
  40c5e7:	je     0x40c5e9
	...
  40c5f1:	add    dh,al
  40c5f3:	push   ebp
  40c5f4:	(bad)  
  40c5f5:	fsub   QWORD PTR [eax]
  40c5f7:	push   edx
  40c5f8:	dec    edi
  40c5f9:	add    al,0x9a
  40c5fb:	jg     0x40c5f2
  40c5fd:	inc    edx
  40c5fe:	mov    edi,0xf82467f2
  40c603:	ret    0xd459
  40c606:	lock mov BYTE PTR [ebx+0x43],dh
  40c60a:	lock (bad) 
  40c60c:	ror    BYTE PTR [esi],1
  40c60e:	cmovl  ebp,ebx
  40c611:	shr    eax,cl
  40c613:	xchg   esp,eax
  40c614:	mov    eax,DWORD PTR [ebx-0x28]
  40c617:	mov    edx,0xc2d82467
  40c61c:	sub    DWORD PTR [ecx],ebx
  40c61e:	iret   
  40c61f:	jg     0x40c606
  40c621:	xchg   BYTE PTR [edx-0x47bcee25],al
  40c627:	jg     0x40c5c2
  40c629:	fimul  DWORD PTR [ebp+0x4]
  40c62c:	sbb    DWORD PTR [ebx],edi
  40c62e:	test   al,0xc2
  40c630:	in     al,0xb7
  40c632:	adc    bh,bh
  40c634:	aaa    
  40c635:	sub    al,0xa0
  40c637:	ret    0x3e1
  40c63a:	sbb    edi,DWORD PTR ds:0xd2cf045d
  40c640:	xchg   edx,eax
  40c641:	inc    edx
  40c642:	cli    
  40c643:	ja     0x40c612
  40c645:	outs   dx,DWORD PTR ds:[esi]
  40c646:	and    eax,0x3a42c1c2
  40c64b:	shl    DWORD PTR [ecx+0x37c26842],cl
  40c651:	or     al,0x77
  40c653:	jg     0x40c5e3
  40c655:	inc    edx
	...
  40c65e:	add    BYTE PTR [eax],al
  40c660:	pop    eax
  40c661:	ret    0x2b77
  40c664:	pop    eax
  40c665:	ret    0x42a9
  40c668:	ret    0x9d77
  40c66b:	xor    eax,0x4299c275
  40c670:	sbb    bl,0x99
  40c673:	inc    edx
  40c674:	xor    dl,al
  40c676:	out    dx,eax
  40c677:	or     esi,DWORD PTR [edi]
  40c679:	fistp  DWORD PTR [esi+0x42]
  40c67c:	and    dl,al
  40c67e:	or     edi,DWORD PTR [esp+ebp*8]
  40c681:	retf   0x6ef2
  40c684:	lea    ecx,[esp+eax*1+0x51]
  40c688:	inc    eax
  40c689:	sbb    bl,dh
  40c68b:	pop    esi
  40c68c:	lea    ecx,[eax+ebp*8]
  40c68f:	pop    esi
  40c690:	(bad)  
  40c691:	ret    0x91e3
  40c694:	jg     0x40c658
  40c696:	repnz inc esi
  40c698:	addr16 sar edx,cl
  40c69b:	ds (bad) 
  40c69d:	xlat   BYTE PTR ds:[ebx]
  40c69e:	mov    al,ds:0xf2c28d84
  40c6a3:	je     0x40c649
  40c6a5:	retf   0x26f2
  40c6a8:	hlt    
  40c6a9:	sbb    eax,0xc10d1ea1
  40c6ae:	mov    eax,0xf2c0f519
  40c6b3:	add    DWORD PTR [ebp+0x13],edx
  40c6b6:	repz push es
  40c6b8:	or     eax,0x5e10f43b
  40c6bd:	ret    
  40c6be:	repnz test BYTE PTR [esi],0x4b
  40c6c2:	lock add DWORD PTR [eax],eax
	...
  40c6cd:	add    BYTE PTR [ecx],bl
  40c6cf:	out    0xb,eax
  40c6d1:	jmp    0xe94484eb
  40c6d6:	cdq    
  40c6d7:	neg    bh
  40c6d9:	push   0x7
  40c6db:	les    esp,FWORD PTR [ebp-0x17]
  40c6de:	and    ch,BYTE PTR [esi-0xd]
  40c6e1:	cmp    al,0xdb
  40c6e3:	xlat   BYTE PTR ds:[ebx]
  40c6e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6e5:	xchg   ebx,eax
  40c6e6:	push   cs
  40c6e7:	rol    DWORD PTR [esp+ebp*1+0x10a5580f],0x8c
  40c6ef:	shl    ecx,0x1c
  40c6f2:	fcmovnbe st,st(7)
  40c6f4:	sbb    DWORD PTR [edi+0x1cf2c08e],ebx
  40c6fa:	pop    eax
  40c6fc:	js     0x40c6df
  40c6fe:	in     al,0xab
  40c700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c701:	add    BYTE PTR [ecx+0x3f],dl
  40c704:	vcvtsi2ss xmm7,xmm7,DWORD PTR [ebp+0x59]
  40c709:	mov    edx,DWORD PTR [edx-0x5]
  40c70c:	(bad)  
  40c70d:	cld    
  40c70e:	int3   
  40c70f:	jnp    0x40c777
  40c711:	adc    al,0x71
  40c713:	or     BYTE PTR [ebx],cl
  40c715:	call   0x341a08
  40c71a:	outs   dx,DWORD PTR ds:[esi]
  40c71b:	mov    eax,0x7ce668f6
  40c720:	jecxz  0x40c6e0
  40c722:	(bad)  
  40c723:	sub    edx,DWORD PTR [ebp+0x41]
  40c726:	not    BYTE PTR [esp+eax*8]
  40c729:	pop    ecx
  40c72a:	daa    
  40c72b:	jge    0x40c720
  40c72d:	jne    0x40c71d
  40c72f:	xchg   esp,eax
  40c730:	outs   dx,DWORD PTR ds:[esi]
  40c731:	(bad)  
	...
  40c73a:	add    BYTE PTR [eax],al
  40c73c:	icebp  
  40c73d:	ds repz jne 0x40c723
  40c741:	ds jns 0x40c74c
  40c744:	into   
  40c745:	in     al,0xa5
  40c747:	inc    ecx
  40c749:	xor    al,0xce
  40c74b:	add    al,0xb6
  40c74d:	test   eax,0x3837ec85
  40c752:	aam    0xf7
  40c754:	mov    eax,ds:0xa245813f
  40c759:	lods   al,BYTE PTR ds:[esi]
  40c75a:	icebp  
  40c75b:	jne    0x40c6df
  40c75d:	aas    
  40c75e:	cmp    edi,ecx
  40c760:	mov    esi,0xd0e7f2bc
  40c765:	in     al,0xb
  40c767:	add    BYTE PTR [ebp+0x3c],ch
  40c76a:	add    eax,DWORD PTR [ebp+0xc7d23]
  40c770:	sub    DWORD PTR [ecx+0x7c6600fa],edi
  40c776:	or     al,0xc7
  40c778:	stos   DWORD PTR es:[edi],eax
  40c779:	xchg   ebx,esi
  40c77b:	pop    es
  40c77c:	ss jl  0x40c7e5
  40c77f:	add    ah,bl
  40c781:	jnp    0x40c7e9
  40c783:	add    bh,cl
  40c785:	jl     0x40c78f
  40c787:	lea    ecx,[edx+0x528cdeea]
  40c78d:	inc    edx
  40c78e:	xor    al,0xff
  40c790:	and    BYTE PTR [esi+0x4d],ah
  40c793:	jne    0x40c7ac
  40c795:	dec    ecx
  40c796:	mov    edx,0x95d627fb
  40c79b:	add    bh,cl
  40c79d:	int    0x4e
  40c79f:	je     0x40c7a1
	...
  40c7a9:	add    dl,cl
  40c7ab:	das    
  40c7ac:	lahf   
  40c7ad:	add    edi,ecx
  40c7af:	(bad)  
  40c7b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7b1:	stos   BYTE PTR es:[edi],al
  40c7b2:	xchg   DWORD PTR [edi],edx
  40c7b4:	ud0    esp,DWORD PTR [edx-0x36]
  40c7b8:	es push ecx
  40c7ba:	pop    ds
  40c7bb:	or     DWORD PTR [eax+edx*2+0x44],0xdb858266
  40c7c3:	mov    BYTE PTR [edi+edi*8+0x1f],cl
  40c7c7:	sti    
  40c7c8:	es inc ecx
  40c7ca:	jg     0x40c76a
  40c7cc:	dec    esp
  40c7cd:	mov    DWORD PTR [edx-0x67],edx
  40c7d0:	xor    al,0xff
  40c7d2:	mov    al,0x81
  40c7d4:	xchg   esp,eax
  40c7d5:	lods   al,BYTE PTR ds:[esi]
  40c7d6:	test   al,0x86
  40c7d8:	add    BYTE PTR [ebp-0xcd4979],0xff
  40c7df:	add    BYTE PTR [esi],bh
  40c7e1:	pop    ecx
  40c7e2:	push   cs
  40c7e3:	test   eax,0xde7fb54b
  40c7e8:	xor    bh,bh
  40c7ea:	adc    BYTE PTR [ebx+eax*2+0x26a90e48],0x92
  40c7f2:	and    dh,cl
  40c7f4:	xor    cl,BYTE PTR [ecx-0xc532ae]
  40c7fa:	pusha  
  40c7fb:	push   ebx
  40c7fc:	or     BYTE PTR [eax+0x78],ch
  40c7ff:	nop
  40c800:	leave  
  40c801:	call   DWORD PTR [ecx+0x34]
  40c804:	cmp    bh,dh
  40c806:	dec    eax
  40c807:	sub    BYTE PTR [edx+0x3ccefa3f],0xc5
	...
  40c816:	add    BYTE PTR [eax],al
  40c818:	cmp    BYTE PTR [edi-0x40cf90f0],ah
  40c81e:	imul   ecx,DWORD PTR [ecx+0x3f89b73b],0xffffffb5
  40c825:	jg     0x40c844
  40c827:	sub    al,0x76
  40c829:	inc    eax
  40c82a:	in     eax,0x3e
  40c82c:	pop    edx
  40c82d:	mov    al,0x79
  40c82f:	aas    
  40c830:	or     BYTE PTR [edi+0x40974f0f],bh
  40c836:	in     eax,0x2b
  40c838:	mov    eax,ds:0x463f59ee
  40c83d:	add    eax,0xbee8374d
  40c842:	ja     0x40c7cd
  40c844:	add    esi,DWORD PTR [edi+0x277f3f31]
  40c84a:	aas    
  40c84b:	fisttp QWORD PTR [edi-0x4086dd81]
  40c851:	mov    dh,0x29
  40c853:	aas    
  40c854:	shl    BYTE PTR [edx+eiz*1-0x34],0xf
  40c859:	or     BYTE PTR ds:0x1be61f3,0xb
  40c860:	(bad)  
  40c861:	xor    ebp,esp
  40c863:	and    BYTE PTR [edx-0x25],0xf9
  40c867:	ds cwde 
  40c869:	xor    DWORD PTR [eax+0x13],0xffffff90
  40c86d:	outs   dx,DWORD PTR ds:[esi]
  40c86e:	push   edx
  40c86f:	mov    DWORD PTR [edi-0x4a],ebp
  40c872:	jmp    0xe4e8e7b5
  40c877:	outs   dx,DWORD PTR ds:[esi]
  40c878:	js     0x40c838
  40c87a:	int    0x17
	...
  40c884:	add    BYTE PTR [eax],al
  40c886:	les    edi,FWORD PTR [edi-0x5800f9a8]
  40c88c:	mov    al,0x6a
  40c88e:	pusha  
  40c88f:	mov    esi,0xb66f88a9
  40c894:	or     esi,DWORD PTR [esi-0x16f36b6f]
  40c89a:	int3   
  40c89b:	add    dh,BYTE PTR [ecx-0xd410673]
  40c8a1:	jmp    0x54d00526
  40c8a6:	loopne 0x40c85e
  40c8a8:	repnz mov cs,esp
  40c8ab:	xor    edi,DWORD PTR [ecx+0x6a]
  40c8ae:	dec    edi
  40c8af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8b0:	cli    
  40c8b1:	jle    0x40c88c
  40c8b3:	jg     0x40c92d
  40c8b5:	add    eax,0x647fbe65
  40c8ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8bb:	mov    dh,0xf2
  40c8bd:	data16 sbb al,0xbd
  40c8c0:	mov    eax,0xf2bec145
  40c8c5:	inc    ecx
  40c8c6:	hlt    
  40c8c7:	shl    dl,cl
  40c8c9:	dec    esi
  40c8ca:	aad    0xbf
  40c8cc:	ja     0x40c86b
  40c8ce:	dec    ebp
  40c8cf:	cld    
  40c8d0:	shl    DWORD PTR [esi],cl
  40c8d2:	cdq    
  40c8d3:	mov    esi,0x2605bd0b
  40c8d8:	or     al,0xe9
  40c8da:	stc    
  40c8db:	std    
  40c8dc:	repnz pushf 
  40c8de:	aam    0xa7
  40c8e0:	pop    ebp
  40c8e1:	push   ecx
  40c8e2:	stc    
  40c8e3:	mov    esp,0xb4e05cf2
  40c8e8:	repnz push cs
	...
  40c8f2:	add    BYTE PTR [eax],al
  40c8f4:	jmp    0x2a51cd2b
  40c8f9:	call   0xf31bc7f0
  40c8fe:	jecxz  0x40c8fe
  40c900:	sar    BYTE PTR [edx+esi*8-0x6c582b8c],cl
  40c907:	xchg   ecx,eax
  40c908:	ret    0xf2bc
  40c90b:	xchg   esp,eax
  40c90c:	sbb    esi,DWORD PTR [ebp-0xd4d290e]
  40c912:	out    0xd6,eax
  40c914:	stos   BYTE PTR es:[edi],al
  40c915:	mov    esp,0x8ba300f2
  40c91a:	in     al,0x58
  40c91c:	ds jnp 0x40c912
  40c91f:	call   ebx
  40c921:	arpl   bx,di
  40c923:	(bad)  
  40c924:	jns    0x40c9a1
  40c926:	jns    0x40c930
  40c928:	pop    esi
  40c929:	cwde   
  40c92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c92b:	call   FWORD PTR [ecx+0x7b]
  40c92e:	mov    ecx,0xf37b51e4
  40c933:	call   0x33f016
  40c938:	dec    ecx
  40c939:	xor    eax,0x7a99f7e0
  40c93e:	in     al,0x4d
  40c940:	lea    edi,[edx-0xd]
  40c943:	inc    ebx
  40c945:	imul   edi,ebx,0xffffffff
  40c948:	imul   ebp,DWORD PTR [ebx+0x4e],0xf37a99ab
  40c94f:	mov    ch,0x96
  40c951:	jb     0x40c946
  40c953:	dec    DWORD PTR [esi+0xffa5b2]
	...
  40c961:	add    BYTE PTR [ecx+0x7ff8497a],cl
  40c967:	shl    eax,0xff
  40c96a:	cdq    
  40c96b:	jp     0x40c9e6
  40c96d:	cld    
  40c96e:	push   cs
  40c96f:	iret   
  40c970:	cdq    
  40c971:	add    BYTE PTR [esi-0x59f731b7],dh
  40c977:	aad    0x85
  40c979:	in     al,dx
  40c97a:	and    eax,0x43fff848
  40c97f:	mov    esp,fs
  40c981:	jmp    0x40c986
  40c983:	test   BYTE PTR [ecx+ecx*4],cl
  40c986:	jae    0x40ca00
  40c988:	repz jne 0x40c929
  40c98b:	push   0x7b79ab2d
  40c990:	test   DWORD PTR [ebp+0x6a],eax
  40c993:	jnp    0x40ca0e
  40c995:	cld    
  40c996:	cdq    
  40c997:	cmc    
  40c998:	cli    
  40c999:	dec    edi
  40c99b:	pop    ebx
  40c99c:	sbb    al,0xe8
  40c99e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c99f:	adc    eax,0xe6d4ff30
  40c9a4:	mov    edx,0x3463463d
  40c9a9:	push   0xffffffcf
  40c9ab:	and    ecx,edx
  40c9ad:	repz lahf 
  40c9af:	in     eax,dx
  40c9b0:	mov    ecx,0x548737fb
  40c9b5:	(bad)  
  40c9b6:	cmp    BYTE PTR [ecx+0x7ee6744e],dh
  40c9bc:	or     BYTE PTR [eax],dl
  40c9be:	cmp    BYTE PTR [eax+esi*1+0x75],cl
  40c9c2:	xlat   BYTE PTR ds:[ebx]
  40c9c3:	push   cs
  40c9c4:	mov    esp,DWORD PTR [edi+0x0]
  40c9ca:	add    BYTE PTR [eax],al
  40c9cc:	add    BYTE PTR [eax],al
  40c9ce:	add    BYTE PTR [eax],al
  40c9d0:	sbb    BYTE PTR ds:0x35177530,bh
  40c9d6:	mov    edx,0x6b3080b
  40c9db:	call   0xff70d713
  40c9e0:	clc    
  40c9e1:	sar    BYTE PTR [edx],cl
  40c9e3:	(bad)  
  40c9e4:	jp     0x40ca38
  40c9e6:	xor    BYTE PTR [ebp-0x29],dh
  40c9e9:	ds xchg ecx,eax
  40c9eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9ec:	loopne 0x40ca32
  40c9ee:	xor    BYTE PTR [ebp-0x25],dh
  40c9f1:	dec    ebp
  40c9f2:	pusha  
  40c9f3:	stos   BYTE PTR es:[edi],al
  40c9f4:	shl    BYTE PTR [esi+eax*2-0x3e],1
  40c9f8:	xlat   BYTE PTR ds:[ebx]
  40c9f9:	test   al,0xd9
  40c9fb:	mov    dh,BYTE PTR [ebx+0x21e84b26]
  40ca01:	call   0xff60:0x10a70bba
  40ca08:	test   al,0x9e
  40ca0a:	dec    esi
  40ca0b:	jne    0x40c9d7
  40ca0d:	loop   0x40ca54
  40ca0f:	ret    0xa8c7
  40ca12:	add    DWORD PTR [ebp-0x61],0xdb753019
  40ca19:	and    ah,0xaf
  40ca1c:	add    BYTE PTR [eax-0x7470f016],0x69
  40ca23:	sahf   
  40ca24:	iret   
  40ca25:	jg     0x40ca0c
  40ca27:	cmp    ah,dl
  40ca29:	mov    ebx,0xbb358acc
  40ca2e:	leave  
  40ca2f:	lea    edx,[edx]
  40ca31:	lods   al,BYTE PTR ds:[esi]
  40ca32:	mov    cl,0xb1
	...
  40ca3c:	add    BYTE PTR [eax],al
  40ca3e:	push   esp
  40ca3f:	mov    ebx,0x3548282f
  40ca44:	mov    ebp,0xa9e67b2c
  40ca49:	cmp    eax,DWORD PTR [ebp+esi*1-0x7f]
  40ca4d:	das    
  40ca4e:	xchg   BYTE PTR [edi],ah
  40ca50:	(bad)  
  40ca51:	fisttp QWORD PTR [edi+0x32c3b7f]
  40ca57:	adc    ah,ch
  40ca59:	add    eax,esp
  40ca5b:	mov    edi,0x7d2405f7
  40ca60:	outs   dx,BYTE PTR ds:[esi]
  40ca61:	xor    al,0x77
  40ca63:	outs   dx,BYTE PTR ds:[esi]
  40ca64:	pop    ds
  40ca65:	lds    eax,FWORD PTR [eax]
  40ca67:	mov    ds:0x7fcf910e,eax
  40ca6c:	out    0x33,al
  40ca6e:	inc    esi
  40ca6f:	xor    eax,0x558eac4d
  40ca74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca75:	add    edi,DWORD PTR [ecx-0x59]
  40ca78:	mov    ss,WORD PTR [edx+0x43fe7fcf]
  40ca7e:	pop    edx
  40ca7f:	jge    0x40cacf
  40ca81:	pop    ds
  40ca82:	push   ebp
  40ca83:	(bad)  
  40ca84:	sub    eax,DWORD PTR [edi+ecx*8]
  40ca87:	dec    edi
  40ca88:	mov    bh,0x3a
  40ca8a:	inc    edx
  40ca8b:	test   al,0x11
  40ca8d:	mov    cl,0xc8
  40ca8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca90:	sbb    edi,DWORD PTR [edx]
  40ca92:	test   al,0xba
  40ca94:	mov    esi,0x658f48db
  40ca99:	cli    
  40ca9a:	cwde   
  40ca9b:	xor    esi,DWORD PTR [edi]
  40ca9d:	lods   al,BYTE PTR ds:[esi]
  40ca9e:	iret   
  40ca9f:	(bad)  
  40caa0:	or     al,0x6
	...
  40caaa:	add    BYTE PTR [eax],al
  40caac:	add    eax,0xb4e178bb
  40cab1:	repnz test eax,0x78bab5e6
  40cab7:	fnsave [ebp+0x1fd6e034]
  40cabd:	and    ah,0xae
  40cac0:	out    dx,al
  40cac1:	mov    edx,0xa61fc6f2
  40cac6:	jecxz  0x40ca81
  40cac8:	jecxz  0x40ca84
  40caca:	repnz fs rsm 
  40cace:	pop    ebx
  40cacf:	shl    ebp,0xef
  40cad2:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cad4:	jmp    0x8af11d58
  40cad9:	xchg   DWORD PTR [esp+edi*1],ecx
  40cadc:	pop    eax
  40cadd:	stos   DWORD PTR es:[edi],eax
  40cade:	mov    fs,WORD PTR [ebp+0x130c25d8]
  40cae4:	mov    esi,0xe4f178ba
  40cae9:	sub    DWORD PTR [ebx+0x4908c576],0x54b9346d
  40caf3:	test   al,0xcc
  40caf5:	mov    edx,0xe2a4f178
  40cafa:	out    dx,eax
  40cafb:	push   esi
  40cafc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cafd:	and    eax,0x5803c10c
  40cb02:	dec    ebp
  40cb03:	jmp    0xa8970e2c
  40cb08:	int3   
  40cb09:	mov    edx,0x40942638
  40cb0e:	or     al,0x41
	...
  40cb18:	add    BYTE PTR [eax],al
  40cb1a:	inc    ebp
  40cb1b:	in     al,dx
  40cb1c:	repnz es leave 
  40cb1f:	mov    edi,0x61630377
  40cb24:	push   esi
  40cb25:	test   al,0xcc
  40cb27:	dec    edi
  40cb28:	in     al,0x62
  40cb2a:	aaa    
  40cb2b:	mov    ecx,0xcd3600f2
  40cb30:	icebp  
  40cb31:	jne    0x40cad1
  40cb33:	gs out dx,eax
  40cb35:	inc    BYTE PTR [ecx+0xf89e477]
  40cb3b:	jbe    0x40cb30
  40cb3d:	push   0xffffffcc
  40cb3f:	imul   edx,esi,0xffffffad
  40cb42:	xchg   ecx,eax
  40cb43:	ja     0x40cb4c
  40cb45:	ror    BYTE PTR [edx],0xd9
  40cb48:	push   0x1c
  40cb4a:	pushf  
  40cb4b:	mov    esp,0xde7e4ff2
  40cb50:	lahf   
  40cb51:	call   DWORD PTR [ecx]
  40cb53:	in     al,dx
  40cb54:	sub    bl,BYTE PTR [edx-0x9]
  40cb57:	sbb    DWORD PTR [eax+ebp*8-0x23],0x20
  40cb5c:	repz push esi
  40cb5f:	shl    ecx,cl
  40cb61:	jne    0x40cba1
  40cb63:	gs mov edi,0xe47741fe
  40cb69:	pop    ecx
  40cb6a:	(bad)  
  40cb6b:	jbe    0x40cb60
  40cb6d:	push   0x32
  40cb6f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40cb71:	lods   eax,DWORD PTR ds:[esi]
  40cb72:	xchg   ecx,eax
  40cb73:	jbe    0x40cb7c
  40cb75:	ror    BYTE PTR [edx],0xda
  40cb78:	push   0x1c
  40cb7a:	fdivr  QWORD PTR [edx+esi*8+0x4f]
  40cb81:	add    BYTE PTR [eax],al
  40cb83:	add    BYTE PTR [eax],al
  40cb85:	add    BYTE PTR [eax],al
  40cb87:	add    BYTE PTR [esi-0x6e006053],bl
  40cb8d:	jmp    0x40cbb9
  40cb8f:	pop    edx
  40cb90:	aaa    
  40cb91:	jge    0x40cbef
  40cb93:	call   0x33ec65
  40cb98:	ss int 0xf1
  40cb9b:	jne    0x40cb7b
  40cb9d:	fs (bad) 
  40cb9f:	inc    BYTE PTR [ecx]
  40cba1:	ja     0x40cb87
  40cba3:	sub    DWORD PTR [edi+0x76],ecx
  40cba6:	repz push 0xffffff85
  40cba9:	fs jbe 0x40cb59
  40cbac:	shl    DWORD PTR [esi+0x7],1
  40cbaf:	ror    bh,0x1a
  40cbb2:	shl    BYTE PTR [edi-0x3d],cl
  40cbb5:	in     al,dx
  40cbb6:	int    0xff
  40cbb8:	or     BYTE PTR [edi-0x466f52f2],cl
  40cbbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbbf:	daa    
  40cbc0:	and    eax,0x77500ee8
  40cbc5:	lods   eax,DWORD PTR ds:[esi]
  40cbc6:	push   0xffffffff
  40cbc8:	js     0x40cc40
  40cbca:	fdivr  st,st(6)
  40cbcc:	cli    
  40cbcd:	scas   al,BYTE PTR es:[edi]
  40cbce:	es push ebx
  40cbd0:	imul   edx,ecx,0xfe66e833
  40cbd6:	xor    edi,edi
  40cbd8:	pop    eax
  40cbd9:	jnp    0x40cc0f
  40cbdb:	(bad)  
  40cbdc:	fisubr DWORD PTR [esi-0xe8e93da]
  40cbe2:	xor    ecx,ecx
  40cbe4:	or     eax,0x44550ea2
  40cbe9:	adc    cl,BYTE PTR [esi+0xc4]
  40cbef:	add    BYTE PTR [eax],al
  40cbf1:	add    BYTE PTR [eax],al
  40cbf3:	add    BYTE PTR [eax],al
  40cbf5:	add    BYTE PTR [ebx],dl
  40cbf7:	adc    DWORD PTR [edi+edi*8],esi
  40cbfa:	pop    edx
  40cbfb:	imul   esi,DWORD PTR [eax+edx*2],0x20
  40cbff:	xchg   ebx,eax
  40cc00:	sbb    bh,bh
  40cc02:	mov    ds:0x3a0426b2,al
  40cc07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc08:	push   cs
  40cc09:	or     ecx,DWORD PTR [edi]
  40cc0b:	mov    eax,ds:0xa6cebe71
  40cc10:	push   cs
  40cc11:	(bad)  
  40cc12:	xchg   edx,eax
  40cc13:	push   ds
  40cc14:	str    edi
  40cc17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc18:	dec    ebx
  40cc19:	inc    ebp
  40cc1a:	jecxz  0x40cc6c
  40cc1c:	or     al,0x0
  40cc1e:	iret   
  40cc1f:	mov    esp,0xcccf6a0e
  40cc24:	push   cs
  40cc25:	push   0xffffffcf
  40cc27:	sub    esi,DWORD PTR [edx+0x721c1ff3]
  40cc2d:	hlt    
  40cc2e:	mov    eax,0xb8503466
  40cc33:	adc    BYTE PTR [eax+0x112db03b],0x2b
  40cc3a:	or     DWORD PTR [eiz*8-0x67402bfd],0xe401a7fe
  40cc45:	add    ecx,edi
  40cc47:	daa    
  40cc48:	pop    esi
  40cc49:	retf   
  40cc4a:	jo     0xa8117a4a
  40cc50:	leave  
  40cc51:	addr16 js 0x40cc0b
  40cc54:	xor    al,0x8b
  40cc56:	lahf   
  40cc57:	add    eax,0x3068
	...
  40cc64:	pusha  
  40cc65:	mov    bh,0xd9
  40cc67:	aam    0xfe
  40cc69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc6a:	stc    
  40cc6b:	addr16 pop eax
  40cc6d:	mov    bh,0x7b
  40cc6f:	sbb    DWORD PTR [edi-0x51],0x253737b1
  40cc76:	lea    esi,[edi]
  40cc78:	inc    eax
  40cc79:	sub    ah,ch
  40cc7b:	stos   DWORD PTR es:[edi],eax
  40cc7c:	mov    bh,0x59
  40cc7e:	and    al,0x4
  40cc80:	xor    ch,ch
  40cc82:	xchg   esp,eax
  40cc83:	das    
  40cc84:	sub    BYTE PTR [edi-0x582b4e67],dh
  40cc8a:	adc    al,0x6b
  40cc8c:	sbb    BYTE PTR [edi-0x50d47e85],dh
  40cc92:	jno    0x40cccb
  40cc94:	jne    0x40cd15
  40cc96:	or     eax,0xe540a582
  40cc9b:	ss inc edx
  40cc9d:	mov    al,0x51
  40cc9f:	aaa    
  40cca0:	lock mov dh,0xd7
  40cca3:	pop    es
  40cca4:	test   DWORD PTR [esi+ecx*4+0x37],0x246808e0
  40ccac:	loopne 0x40cc64
  40ccae:	dec    ecx
  40ccaf:	stos   BYTE PTR es:[edi],al
  40ccb0:	rcr    BYTE PTR [esi],1
  40ccb2:	(bad)  
  40ccb4:	jo     0xb07f02c6
  40ccba:	cli    
  40ccbb:	add    BYTE PTR cs:[edi+0x79e4f578],dh
  40ccc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccc3:	push   ds
  40ccc4:	loopne 0x40ccce
  40ccc6:	mov    DWORD PTR ds:0x0,eax
  40cccc:	add    BYTE PTR [eax],al
  40ccce:	add    BYTE PTR [eax],al
  40ccd0:	add    BYTE PTR [eax],al
  40ccd2:	lock mov dh,0xf2
  40ccd5:	or     esp,0x27
  40ccd8:	jl     0x40cc7d
  40ccda:	mov    esi,DWORD PTR [esi-0x513ccb0f]
  40cce0:	repnz idiv BYTE PTR [ecx-0x1ffeffd4]
  40cce7:	jmp    0xd6e3:0xfc43e6f2
  40ccee:	mov    eax,ds:0x34e965b6
  40ccf3:	or     dl,BYTE PTR [esi+0x28]
  40ccf6:	shl    DWORD PTR [esi-0x495e4648],cl
  40ccfc:	repnz mov esi,0xede48a7f
  40cd02:	mov    ch,0xb6
  40cd04:	repnz pusha 
  40cd06:	dec    edi
  40cd07:	sar    edx,cl
  40cd09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd0a:	stc    
  40cd0b:	add    dh,BYTE PTR [ecx-0xd49067b]
  40cd11:	jmp    0x4cd05475
  40cd16:	in     al,dx
  40cd17:	scas   al,BYTE PTR es:[edi]
  40cd18:	repnz xchg ah,cl
  40cd1b:	sub    ebp,DWORD PTR [ecx+0x6a]
  40cd1e:	xchg   DWORD PTR [ebx+0x7fb976fa],esp
  40cd24:	js     0x40cd33
  40cd26:	dec    esp
  40cd27:	hlt    
  40cd28:	jecxz  0x40cd88
  40cd2a:	mov    ecx,0xfdd50bb6
  40cd2f:	sbb    eax,0xf5a9e90c
  40cd34:	repnz aam 0x0
	...
  40cd3f:	add    ah,al
  40cd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd42:	imul   eax,DWORD PTR [eax],0xfff36d42
  40cd48:	inc    ebx
  40cd49:	pop    ebp
  40cd4a:	sti    
  40cd4b:	(bad)  
  40cd4c:	stc    
  40cd4d:	ins    DWORD PTR es:[edi],dx
  40cd4e:	jns    0x40cd58
  40cd50:	push   cs
  40cd51:	aaa    
  40cd52:	test   al,0xff
  40cd54:	jmp    0xc22986c6
  40cd59:	ins    DWORD PTR es:[edi],dx
  40cd5a:	repz inc DWORD PTR [ebx-0x77]
  40cd5e:	in     al,0xac
  40cd60:	adc    ch,BYTE PTR [esi-0xd]
  40cd63:	call   ebx
  40cd65:	xchg   esp,eax
  40cd66:	sti    
  40cd67:	dec    DWORD PTR [ecx-0x31f78695]
  40cd6d:	or     ch,BYTE PTR [eax-0x46949601]
  40cd73:	loopne 0x40cd06
  40cd75:	imul   esi,ebx,0xffffffff
  40cd78:	add    eax,DWORD PTR [esp+eiz*8-0xc94ad70]
  40cd7f:	inc    DWORD PTR [ebx+0x58]
  40cd82:	sti    
  40cd83:	dec    DWORD PTR [ecx+0x1e08796b]
  40cd89:	add    ch,BYTE PTR [eax-0x46948601]
  40cd8f:	in     al,0x81
  40cd91:	imul   esi,ebx,0xffffffe8
  40cd94:	ret    0xf352
  40cd97:	dec    DWORD PTR [ecx+0x25]
  40cd9a:	in     al,dx
  40cd9b:	idiv   DWORD PTR [ecx]
  40cd9d:	imul   esp,esp,0x59
  40cda0:	xchg   ecx,eax
  40cda1:	push   0xfffffff3
  40cda3:	inc    DWORD PTR [eax]
	...
  40cdad:	add    bl,dl
  40cdaf:	addr16 sti 
  40cdb1:	dec    DWORD PTR [ecx+0x79a74263]
  40cdb7:	push   0xfffffff3
  40cdb9:	mov    ch,0x4e
  40cdbb:	arpl   bx,si
  40cdbd:	call   FWORD PTR [esi-0x76005642]
  40cdc3:	push   0xffffffb9
  40cdc5:	fmul   st(7),st
  40cdc7:	push   ebp
  40cdc8:	cmp    edi,edi
  40cdca:	out    0x8e,eax
  40cdcc:	push   ecx
  40cdcd:	call   eax
  40cdcf:	cmp    eax,0x75c0f063
  40cdd4:	cmp    edi,edi
  40cdd6:	cmp    bl,BYTE PTR [ebx+0x3ec77537]
  40cddc:	sti    
  40cddd:	std    
  40cdde:	mov    al,0x5d
  40cde0:	cmp    DWORD PTR [ebp-0xc67261],esi
  40cde6:	mov    bh,0xaa
  40cde8:	dec    edi
  40cde9:	call   FWORD PTR [eax-0x59084c7b]
  40cdef:	pop    ss
  40cdf0:	cmp    edi,edi
  40cdf2:	mov    BYTE PTR [ebp-0x1188045f],dh
  40cdf8:	fwait
  40cdf9:	add    bh,cl
  40cdfb:	pop    edi
  40cdfc:	dec    esi
  40cdfd:	or     al,0xcf
  40cdff:	jae    0x40cd86
  40ce01:	in     al,dx
  40ce02:	dec    esp
  40ce03:	fidivr DWORD PTR [edx]
  40ce05:	push   0xffffffcf
  40ce07:	inc    eax
  40ce08:	add    bh,bh
  40ce0a:	loop   0x40cdaa
  40ce0c:	es sub edi,DWORD PTR cs:[ebp+0x8937]
	...
  40ce1c:	xchg   edx,eax
  40ce1d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce1f:	xchg   ebp,eax
  40ce20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce21:	or     BYTE PTR [bx+si-0x33],ch
  40ce25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce26:	push   cs
  40ce27:	xor    BYTE PTR [eax],0x93
  40ce2a:	add    al,ch
  40ce2c:	and    BYTE PTR [ebx],dl
  40ce2e:	cmp    bh,bh
  40ce30:	mov    bh,0x34
  40ce32:	aad    0x40
  40ce34:	iret   
  40ce35:	add    eax,0x6787cee2
  40ce3a:	or     bh,bh
  40ce3c:	sub    BYTE PTR [esi+0x2d02e426],0x38
  40ce43:	inc    DWORD PTR [edx-0x388ac7de]
  40ce49:	jg     0x40cea8
  40ce4b:	ret    0xb42c
  40ce4e:	push   ecx
  40ce4f:	dec    edx
  40ce50:	or     eax,0x45cee57b
  40ce55:	mov    ds:0xabf33f63,eax
  40ce5a:	dec    ecx
  40ce5b:	xor    al,0x5a
  40ce5d:	cmp    eax,0x2dc1d331
  40ce62:	aad    0x34
  40ce64:	inc    edx
  40ce65:	test   BYTE PTR [ebp+0x5a],cl
  40ce68:	pop    ebp
  40ce69:	and    ch,0x8
  40ce6c:	pop    DWORD PTR [ebx+0x7fce7568]
  40ce72:	in     eax,0x3c
  40ce74:	adc    bh,BYTE PTR [eax+0x7fcf03e4]
  40ce7a:	and    bh,BYTE PTR [esi+0x3e9b37c]
	...
  40ce88:	add    BYTE PTR [eax],al
  40ce8a:	iret   
  40ce8b:	and    eax,0x2978a9e5
  40ce90:	in     eax,0xa9
  40ce92:	jo     0x40ce98
  40ce94:	and    BYTE PTR [eax],bh
  40ce96:	inc    DWORD PTR [eax+ebp*2]
  40ce99:	cmp    BYTE PTR [eax-0x4d],bl
  40ce9c:	(bad)  
  40ce9e:	pop    ecx
  40ce9f:	sub    eax,0xb3da33dd
  40cea4:	fcomp  QWORD PTR [edi+0x5d]
  40cea7:	and    ch,0xfe
  40ceaa:	sub    BYTE PTR [eax+eiz*8],0x1c
  40ceae:	dec    esi
  40ceaf:	and    ebp,0x3ce6a703
  40ceb5:	lds    ebp,FWORD PTR [eax]
  40ceb7:	mov    dl,0x17
  40ceb9:	adc    al,0x37
  40cebb:	mov    ah,0x4b
  40cebd:	xor    ebx,DWORD PTR [eax]
  40cebf:	push   eax
  40cec0:	outs   dx,BYTE PTR ds:[esi]
  40cec1:	push   esp
  40cec2:	inc    edx
  40cec3:	std    
  40cec4:	jo     0x40cf01
  40cec6:	or     BYTE PTR [ebx-0x5c1729ec],dh
  40cecc:	or     eax,DWORD PTR [eax-0x44]
  40cecf:	mov    dl,0x84
  40ced1:	fs mov ebx,0xcb66f2aa
  40ced7:	cmp    eax,0x259c5eaa
  40cedc:	or     al,0xc1
  40cede:	mov    edx,DWORD PTR [ebp+0x4d]
  40cee1:	jmp    0x3f3cbb83
  40cee6:	cld    
  40cee7:	mov    dl,0xf2
  40cee9:	mov    ah,0xc0
  40ceeb:	call   0x0:0x8048
  40cef2:	add    BYTE PTR [eax],al
  40cef4:	add    BYTE PTR [eax],al
  40cef6:	add    BYTE PTR [eax],al
  40cef8:	cld    
  40cef9:	mov    dl,0x84
  40cefb:	fs out 0xaa,eax
  40cefe:	repnz es dec ecx
  40cf01:	mov    dl,0x6a
  40cf03:	add    al,0x91
  40cf05:	aas    
  40cf06:	or     al,0x16
  40cf08:	push   ss
  40cf09:	mov    al,0xfa
  40cf0b:	push   cs
  40cf0c:	fdiv   QWORD PTR [edx+0x65e4f578]
  40cf12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf13:	(bad)  
  40cf14:	mov    ebp,0xb4098908
  40cf19:	mov    dl,0xf2
  40cf1b:	or     esp,0x27
  40cf1e:	iret   
  40cf1f:	inc    ebx
  40cf20:	xchg   edx,eax
  40cf21:	mov    dl,0xf1
  40cf23:	xchg   esp,eax
  40cf24:	pushf  
  40cf25:	stos   BYTE PTR es:[edi],al
  40cf26:	repnz (bad) 
  40cf28:	popf   
  40cf29:	sub    al,0x0
  40cf2b:	ror    ebp,0xe8
  40cf2e:	repnz (bad) 
  40cf30:	retf   
  40cf31:	cld    
  40cf32:	fbstp  TBYTE PTR [esi-0x169a4d03]
  40cf38:	push   esp
  40cf39:	ret    
  40cf3a:	push   ebp
  40cf3b:	sub    bl,cl
  40cf3d:	mov    dl,0xb8
  40cf3f:	cdq    
  40cf40:	in     eax,0xb2
  40cf42:	repnz sahf 
  40cf44:	addr16 xchg ah,ah
  40cf47:	popf   
  40cf48:	je     0x40cefc
  40cf4a:	repnz pusha 
  40cf4c:	inc    edi
  40cf4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf4e:	cli    
  40cf4f:	add    BYTE PTR [ecx+0x6d],dl
  40cf52:	data16 add dh,bl
  40cf55:	imul   edx,DWORD PTR [esi+0x41],0xf0b96ce6
	...
  40cf64:	add    BYTE PTR [eax],al
  40cf66:	jns    0x40cfd5
  40cf68:	repz dec DWORD PTR [ebx]
  40cf6b:	mov    dl,0xea
  40cf6d:	fnstcw WORD PTR [esi]
  40cf6f:	ins    DWORD PTR es:[edi],dx
  40cf70:	xrelease mov DWORD PTR [ebx+0x42],ebp
  40cf74:	sti    
  40cf75:	inc    DWORD PTR [ecx+0x9e4b0f9]
  40cf7b:	outs   dx,BYTE PTR ds:[esi]
  40cf7c:	repz add BYTE PTR [ebx-0x4c],bh
  40cf80:	lea    edi,[ebp-0xc89fa]
  40cf86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf87:	jmp    0x917452f3
  40cf8c:	sti    
  40cf8d:	inc    ecx
  40cf8f:	jl     0x40d009
  40cf91:	pop    esp
  40cf92:	and    eax,0xc1f7e430
  40cf97:	ins    DWORD PTR es:[edi],dx
  40cf98:	or     al,0x74
  40cf9a:	gs adc eax,0x2ed1fff3
  40cfa0:	repz jne 0x40d011
  40cfa3:	xchg   ebp,eax
  40cfa4:	aaa    
  40cfa5:	mov    ds:0xb5f36f61,al
  40cfaa:	xor    BYTE PTR [edi-0xd],0xff
  40cfae:	sub    ecx,0x19f1e80a
  40cfb4:	repz inc DWORD PTR [ecx+0x11f7e429]
  40cfbb:	outs   dx,DWORD PTR ds:[esi]
  40cfbc:	repz jne 0x40cffd
  40cfbf:	xchg   ebp,eax
  40cfc0:	lea    esp,[edx-0x4a0c907f]
  40cfc6:	or     dh,BYTE PTR [edi-0xd]
  40cfc9:	inc    DWORD PTR [eax]
	...
  40cfd3:	add    BYTE PTR [ecx-0x17],dh
  40cfd6:	or     ch,al
  40cfd8:	lds    ebx,FWORD PTR [ecx]
  40cfda:	repz dec edi
  40cfdd:	or     DWORD PTR [ebx-0x20],edi
  40cfe0:	sbb    BYTE PTR [edx],al
  40cfe2:	cmp    eax,0x16ae82ff
  40cfe7:	gs sub eax,0x42ff3d32
  40cfed:	or     esi,DWORD PTR ds:0xbb21f0ff
  40cff3:	pop    es
  40cff4:	div    ecx
  40cff6:	push   0x7b51e0ff
  40cffb:	in     al,0xe0
  40cffd:	dec    ecx
  40cffe:	cmp    eax,0x3cfb96e8
  40d003:	dec    eax
  40d005:	xor    ebp,DWORD PTR [eax]
  40d007:	test   eax,0x722e1071
  40d00d:	imul   edi,DWORD PTR ds:0x35727aff,0xe98ea8ff
  40d017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d018:	mov    al,ds:0xa7b53d91
  40d01d:	xchg   ecx,eax
  40d01e:	cmp    eax,0x69aea7ff
  40d023:	dec    DWORD PTR [eax+0x78dc7b79]
  40d029:	mov    cl,0x3b
  40d02b:	call   0xff7e13fa
  40d030:	jo     0x40d09d
  40d032:	cmp    bh,dh
  40d034:	push   0x753b99
	...
  40d041:	add    bl,dl
  40d043:	sar    DWORD PTR [ecx+0x3e8b6707],1
  40d049:	call   DWORD PTR [eax-0x3f]
  40d04c:	jns    0x40d03e
  40d04e:	inc    eax
  40d04f:	mov    ecx,0xfa3ee83b
  40d054:	cmp    edi,edi
  40d056:	cmp    BYTE PTR [ebx+0x20],ah
  40d059:	jmp    0xff7cb0fc
  40d05e:	sub    BYTE PTR [edi+0x10],bh
  40d061:	xor    BYTE PTR [edi],dh
  40d063:	xor    BYTE PTR [ebx+eax*1-0x31],0xc6
  40d068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d069:	call   DWORD PTR [eax]
  40d06b:	dec    ebx
  40d06c:	outs   dx,BYTE PTR ds:[esi]
  40d06d:	pop    ds
  40d06e:	dec    esp
  40d06f:	mov    ebx,0x26009d88
  40d074:	fidiv  DWORD PTR [eax]
  40d076:	add    BYTE PTR [edi-0x4fd2fb73],0x61
  40d07d:	jp     0x40d011
  40d07f:	mov    bl,0xdc
  40d081:	xor    BYTE PTR [ebp-0x5dcf1ac2],al
  40d087:	shr    BYTE PTR [edx+eax*8-0x4284f30],0xb0
  40d08f:	mov    dh,0x47
  40d091:	xor    al,al
  40d093:	sbb    BYTE PTR [edx],dh
  40d095:	int    0xf
  40d097:	or     ch,0x5
  40d09a:	iret   
  40d09b:	jg     0x40d102
  40d09d:	xor    BYTE PTR [edx],ah
  40d09f:	js     0x40d0be
  40d0a1:	daa    
  40d0a2:	mov    ds:0x3011af,al
	...
  40d0af:	add    BYTE PTR [edx],ah
  40d0b1:	lods   al,BYTE PTR ds:[esi]
  40d0b2:	sbb    DWORD PTR [esi+0x65fa97c8],esi
  40d0b8:	mov    BYTE PTR [edi+0x7fcb453b],ch
  40d0be:	cwde   
  40d0bf:	jl     0x40d12c
  40d0c1:	add    DWORD PTR [ecx],esp
  40d0c3:	pop    ds
  40d0c4:	js     0x40d075
  40d0c6:	loope  0x40d145
  40d0c8:	adc    ch,BYTE PTR [esp+esi*1-0x2d7025d1]
  40d0cf:	mov    ecx,0x948a97c4
  40d0d4:	iret   
  40d0d5:	jg     0x40d0c5
  40d0d7:	inc    ebx
  40d0d8:	fadd   DWORD PTR [edx+edi*2]
  40d0db:	add    al,0xcf
  40d0dd:	jg     0x40d089
  40d0df:	leave  
  40d0e0:	inc    eax
  40d0e1:	or     BYTE PTR [ecx+ebp*8],0xcc
  40d0e5:	jg     0x40d0b2
  40d0e7:	and    al,0xe7
  40d0e9:	scas   al,BYTE PTR es:[edi]
  40d0ea:	or     ch,cl
  40d0ec:	int3   
  40d0ed:	sbb    DWORD PTR [ebx+edx*1],ecx
  40d0f0:	rcr    DWORD PTR [ecx],cl
  40d0f2:	or     al,0x3
  40d0f4:	retf   
  40d0f5:	cld    
  40d0f6:	dec    eax
  40d0f7:	xchg   ebp,eax
  40d0f8:	and    edi,esp
  40d0fa:	mov    BYTE PTR [ebp-0x48],bh
  40d0fd:	scas   al,BYTE PTR es:[edi]
  40d0fe:	repnz sbb DWORD PTR [eax+0x3676f434],ebp
  40d105:	stos   DWORD PTR es:[edi],eax
  40d106:	jecxz  0x40d157
  40d108:	inc    ebx
  40d109:	or     BYTE PTR [edx+esi*8],0x8c
  40d10d:	xor    ecx,DWORD PTR [esi]
  40d10f:	push   edx
  40d110:	idiv   bl
  40d112:	mov    BYTE PTR [ebp+0x0],al
	...
  40d11d:	add    BYTE PTR [eax+0x4fb9f2ae],bl
  40d123:	add    al,0xf8
  40d125:	ds lock scas al,BYTE PTR es:[edi]
  40d128:	pop    ebx
  40d129:	ds jbe 0x40d1aa
  40d12c:	repz mov esp,0x864ca6b0
  40d132:	clc    
  40d133:	scas   al,BYTE PTR es:[edi]
  40d134:	test   BYTE PTR [ebx+ebx*8-0x4a],ch
  40d138:	repnz push ds
  40d13a:	xchg   esp,eax
  40d13b:	out    dx,al
  40d13c:	ja     0x40d109
  40d13e:	dec    ebp
  40d13f:	in     al,dx
  40d140:	fist   WORD PTR [esi]
  40d142:	mov    eax,0xd37d0bae
  40d147:	pop    ss
  40d148:	or     al,0xe9
  40d14a:	fldln2 
  40d14c:	repnz cmp al,0xaf
  40d14f:	mov    dh,0xf2
  40d151:	out    dx,al
  40d152:	mov    ecx,0xb1defbf4
  40d157:	scas   al,BYTE PTR es:[edi]
  40d158:	repnz push esp
  40d15a:	pop    ebx
  40d15b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d15c:	mov    eax,0xf2aea1a0
  40d161:	xchg   esp,eax
  40d162:	cld    
  40d163:	mov    dh,0xf2
  40d165:	add    BYTE PTR [ecx],cl
  40d167:	mov    bh,dh
  40d169:	mov    ds:0x45f35d79,eax
  40d16e:	jle    0x40d0f9
  40d170:	mov    edi,?
  40d172:	jecxz  0x40d1e3
  40d174:	in     al,0x11
  40d176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d177:	or     BYTE PTR [ecx+ecx*8],0x64
  40d17b:	scas   al,BYTE PTR es:[edi]
  40d17c:	repnz push esp
  40d17e:	lods   eax,DWORD PTR ds:[esi]
  40d17f:	mov    cs,WORD PTR [edi+0xc4]
  40d185:	add    BYTE PTR [eax],al
  40d187:	add    BYTE PTR [eax],al
  40d189:	add    BYTE PTR [eax],al
  40d18b:	add    BYTE PTR [edx+0x8],bl
  40d18e:	repz imul ebp,esi,0x5e08795c
  40d195:	test   DWORD PTR [ebp+0x492b79ff],ebp
  40d19b:	cld    
  40d19c:	into   
  40d19d:	xchg   edi,eax
  40d19e:	push   ebp
  40d19f:	inc    ecx
  40d1a0:	neg    BYTE PTR [ecx+edi*1-0x31]
  40d1a4:	push   ds
  40d1a5:	ret    
  40d1a6:	repnz (bad) 
  40d1a8:	repz test eax,0x5e1925ea
  40d1ae:	repz push 0x4bb8d2
  40d1b4:	sahf   
  40d1b5:	jg     0x40d1c3
  40d1b7:	add    BYTE PTR [esi],ah
  40d1b9:	pop    esi
  40d1ba:	jns    0x40d1c4
  40d1bc:	push   cs
  40d1bd:	xchg   edx,eax
  40d1be:	repz (bad) 
  40d1c0:	jmp    0x679c01cd
  40d1c5:	xor    ebx,0x4be8e935
  40d1cb:	add    cl,bl
  40d1cd:	out    0xa,eax
  40d1cf:	call   0x34304a
  40d1d4:	pop    esi
  40d1d5:	mov    al,0x55
  40d1d7:	inc    ecx
  40d1d8:	or     WORD PTR ds:0xf3017600,cx
  40d1df:	jne    0x40d23f
  40d1e1:	mov    edx,esp
  40d1e3:	(bad)  
  40d1e4:	jns    0x40d241
  40d1e6:	repz jne 0x40d1b8
  40d1e9:	shl    BYTE PTR [eax],cl
  40d1eb:	jne    0x40d1c4
  40d1ed:	mov    esi,0xa03a
	...
  40d1fa:	inc    eax
  40d1fb:	(bad)  
  40d1fc:	ss ret 0x96d3
  40d200:	(bad)  [edx+0xbbaf623]
  40d206:	aaa    
  40d207:	xlat   BYTE PTR ds:[ebx]
  40d208:	push   0x4eb220ff
  40d20d:	je     0x40d198
  40d20f:	mov    ?,WORD PTR [edx-0x216971a6]
  40d215:	out    0x9b,eax
  40d217:	inc    ebp
  40d218:	and    edi,edi
  40d21a:	lahf   
  40d21b:	xchg   al,bl
  40d21d:	addr16 iret 
  40d21f:	xchg   esi,eax
  40d220:	movsx  esp,BYTE PTR [edi+0x76]
  40d224:	lds    eax,FWORD PTR [eax-0x31]
  40d227:	xchg   BYTE PTR [ecx],ah
  40d229:	jne    0x40d202
  40d22b:	dec    esi
  40d22c:	sti    
  40d22d:	retf   
  40d22e:	fmul   DWORD PTR [ebp-0x40]
  40d231:	addr16 into 
  40d233:	xchg   esi,eax
  40d234:	movsx  esi,BYTE PTR [edi]
  40d237:	(bad)
  40d23b:	push   es
  40d23c:	and    BYTE PTR [ebp-0x39],dh
  40d23f:	dec    esi
  40d240:	out    dx,eax
  40d241:	retf   
  40d242:	mov    al,0x75
  40d244:	shl    BYTE PTR [edi-0x33],0x96
  40d248:	movsx  esi,BYTE PTR [edi]
  40d24b:	adc    esp,eax
  40d24d:	inc    eax
  40d24e:	iret   
  40d24f:	out    0x1f,al
  40d251:	jne    0x40d21a
  40d253:	jle    0x40d248
  40d255:	retf   
  40d256:	mov    BYTE PTR [ebp+0x10],bh
  40d259:	push   ss
  40d25a:	sub    al,0x85
  40d25c:	and    ecx,ecx
	...
  40d266:	add    BYTE PTR [eax],al
  40d268:	lea    ebp,[esi-0x7dbbaaf2]
  40d26e:	(bad)  
  40d26f:	les    ebp,FWORD PTR [ebx+0x0]
  40d272:	punpckhdq mm0,mm6
  40d275:	jg     0x40d261
  40d277:	mov    dh,0xd0
  40d279:	xchg   edi,eax
  40d27a:	sub    al,0x64
  40d27c:	push   eax
  40d27d:	lods   al,BYTE PTR ds:[esi]
  40d27e:	imul   eax,esi,0x44
  40d281:	sbb    edi,edi
  40d283:	sub    al,0xba
  40d285:	ja     0x40d264
  40d287:	cmp    DWORD PTR [eax],0xffffffac
  40d28a:	mov    cl,0x99
  40d28c:	in     eax,dx
  40d28d:	lods   al,BYTE PTR ds:[esi]
  40d28e:	das    
  40d28f:	cld    
  40d290:	xor    BYTE PTR ds:0x19202ca2,dh
  40d296:	or     DWORD PTR ds:0x9f9d77a2,ebp
  40d29c:	adc    DWORD PTR [ecx+ebx*4-0x7e547dd4],ebp
  40d2a3:	mov    dh,0xc8
  40d2a5:	xchg   edi,eax
  40d2a6:	push   ss
  40d2a7:	fs clc 
  40d2a9:	stos   DWORD PTR es:[edi],eax
  40d2aa:	mov    ebx,0x107fcb41
  40d2af:	jns    0x40d2ac
  40d2b1:	jmp    FWORD PTR [eax-0x6ce1fd1]
  40d2b7:	sbb    esi,DWORD PTR [ebp-0x3bd3ae1c]
  40d2bd:	mov    edi,0x806c87e9
  40d2c2:	in     eax,0x3
  40d2c4:	push   esi
  40d2c5:	inc    ebp
  40d2c6:	dec    ecx
  40d2c7:	cmp    BYTE PTR [edx],0x90
  40d2ca:	in     eax,0xb7
	...
  40d2d4:	add    BYTE PTR [eax],al
  40d2d6:	ret    0xafaa
  40d2d9:	adc    ebp,DWORD PTR [eax+0x461b2135]
  40d2df:	loop   0x40d30a
  40d2e1:	sub    al,0x46
  40d2e3:	inc    ebp
  40d2e4:	adc    DWORD PTR [ebx+0x3a4473f],ebx
  40d2ea:	mov    BYTE PTR ds:0xe1ba1b01,dh
  40d2f0:	or     DWORD PTR [edi+ebx*1],ebp
  40d2f3:	sbb    ch,ah
  40d2f5:	add    esp,DWORD PTR [eax-0x16]
  40d2f8:	or     ebx,DWORD PTR [ecx+0x10434bb]
  40d2fe:	cmp    BYTE PTR [eax-0x244190e],bh
  40d304:	lods   eax,DWORD PTR ds:[esi]
  40d305:	fisub  WORD PTR [edi+edx*1-0x54edcd4d]
  40d30c:	icebp  
  40d30d:	push   esp
  40d30e:	not    DWORD PTR [edi-0x551b70e9]
  40d314:	pop    ebx
  40d315:	push   ecx
  40d316:	retf   0xe37f
  40d319:	ja     0x40d31e
  40d31b:	stos   BYTE PTR es:[edi],al
  40d31c:	js     0x40d2ff
  40d31e:	les    ebp,FWORD PTR [esi]
  40d320:	les    esp,FWORD PTR [esi+0x4b6c97e4]
  40d326:	in     al,0xaa
  40d328:	arpl   WORD PTR [eax+ebx*1+0x40],cx
  40d32c:	or     al,0x8e
  40d32e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d330:	jecxz  0x40d3ac
  40d332:	outs   dx,BYTE PTR ds:[esi]
  40d333:	stos   BYTE PTR es:[edi],al
  40d334:	repnz sbb DWORD PTR [ebx-0x55],edx
  40d338:	xacquire xchg BYTE PTR [eax],al
	...
  40d343:	add    BYTE PTR [ebp+0x4f],dh
  40d346:	repz hlt 
  40d348:	in     al,0xa2
  40d34a:	pop    ebp
  40d34b:	xor    DWORD PTR [edx+ebp*4-0x5595561d],esp
  40d352:	repnz rcr DWORD PTR [esi],0x47
  40d356:	dec    ebp
  40d357:	jmp    0x52310851
  40d35c:	and    ebp,esp
  40d35e:	repnz ds fwait
  40d361:	and    cl,BYTE PTR ds:0x5be9c5e9
  40d367:	cs pop esi
  40d369:	and    ah,0xd8
  40d36c:	aam    0xaa
  40d36e:	repnz adc esp,eax
  40d371:	(bad)  
  40d373:	push   ss
  40d374:	mov    ah,0x34
  40d376:	lock add esp,ebx
  40d379:	(bad)  
  40d37b:	add    cl,dl
  40d37d:	ins    BYTE PTR es:[edi],dx
  40d37e:	into   
  40d37f:	or     al,0x66
  40d381:	iret   
  40d382:	test   esp,ebp
  40d384:	cmc    
  40d385:	aas    
  40d386:	lock push 0x76
  40d389:	or     al,0x15
  40d38b:	(bad)  
  40d38c:	sti    
  40d38d:	stos   DWORD PTR es:[edi],eax
  40d38e:	jmp    0xfb89:0xf355d139
  40d395:	push   edi
  40d396:	data16 add BYTE PTR [ecx+edi*2-0x79c18a0d],cl
  40d39e:	push   DWORD PTR cs:[ecx+0x55]
  40d3a2:	data16 add BYTE PTR [edx+eiz*4+0x75f1],cl
	...
  40d3b2:	xchg   BYTE PTR cs:[edx],bl
  40d3b5:	push   DWORD PTR [ecx+0x55]
  40d3b8:	data16 add BYTE PTR [edi+esi*2-0x7a118a0d],bh
  40d3c0:	push   es
  40d3c1:	call   DWORD PTR [ecx+0x55]
  40d3c4:	rep lods eax,DWORD PTR fs:[esi]
  40d3c7:	(bad)  
  40d3c8:	repnz imul ebp,esp,0x4e087954
  40d3cf:	pop    ecx
  40d3d0:	repnz push DWORD PTR [ecx+0x6]
  40d3d4:	(bad)  
  40d3d5:	pop    ebx
  40d3d6:	daa    
  40d3d7:	jle    0x40d43f
  40d3d9:	and    esi,DWORD PTR [ecx-0x11]
  40d3dc:	or     ch,al
  40d3de:	adc    dl,BYTE PTR [edi-0xd]
  40d3e1:	dec    DWORD PTR [esi-0x59bea88e]
  40d3e7:	or     edx,DWORD PTR [edi]
  40d3e9:	(bad)  
  40d3ea:	jnp    0x40d391
  40d3ec:	jmp    0x5bff:0xf355e0dd
  40d3f3:	popa   
  40d3f4:	repz jne 0x40d395
  40d3f7:	test   DWORD PTR [edi+ebx*4],ebp
  40d3fa:	mov    cl,0x55
  40d3fc:	(bad)
  40d3ff:	call   0xc48e:0xab54550e
  40d406:	stos   BYTE PTR es:[di],al
  40d408:	and    al,0xff
  40d40a:	inc    edx
  40d40b:	in     al,0x2a
  40d40d:	push   eax
  40d40e:	push   0xdaff1f2c
  40d413:	retf   0xb816
	...
  40d41e:	add    BYTE PTR [eax],al
  40d420:	dec    edx
  40d421:	xchg   edi,eax
  40d422:	push   cs
  40d423:	or     ecx,DWORD PTR [edi-0x31b88e66]
  40d429:	xchg   esi,eax
  40d42a:	push   cs
  40d42b:	(bad)  
  40d42c:	mov    cl,dh
  40d42e:	pop    es
  40d42f:	add    bh,cl
  40d431:	xchg   esi,eax
  40d432:	dec    ebx
  40d433:	inc    ebp
  40d434:	cmp    ebp,edx
  40d436:	or     al,0x0
  40d438:	iret   
  40d439:	cmp    al,0x8
  40d43b:	push   0xffffffcf
  40d43d:	cmp    al,0x8
  40d43f:	push   0xffffffcf
  40d441:	xor    esi,DWORD PTR [ebx+0x731b7ff3]
  40d447:	hlt    
  40d448:	add    BYTE PTR [edx],dl
  40d44a:	and    eax,0x20940050
  40d44f:	inc    DWORD PTR [edx+0x428a1002]
  40d455:	xchg   edi,eax
  40d456:	push   cs
  40d457:	or     ecx,DWORD PTR [edi]
  40d459:	stos   DWORD PTR es:[edi],eax
  40d45a:	icebp  
  40d45b:	call   0x4f6c35
  40d460:	addr16 or eax,0x49cf40b0
  40d466:	mov    ds:0x6c6db70f,eax
  40d46b:	inc    eax
  40d46d:	out    0x6f,al
  40d46f:	ror    BYTE PTR [edx+0x1b],1
  40d472:	cmp    al,0xf7
  40d474:	mov    al,0x69
  40d476:	fcom   DWORD PTR [ecx-0x49]
  40d479:	pop    ebp
  40d47a:	ins    BYTE PTR es:[edi],dx
  40d47b:	jmp    DWORD PTR [eax-0x5f0f8ce1]
  40d481:	jg     0x40d4ad
  40d483:	sub    DWORD PTR [eax],eax
	...
  40d48d:	add    BYTE PTR [edi-0x77d6bba2],ah
  40d493:	adc    eax,0x4c1e9be5
  40d498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d499:	add    edi,DWORD PTR [eax-0xe]
  40d49c:	hlt    
  40d49d:	xor    BYTE PTR [eax-0x58],dh
  40d4a0:	icebp  
  40d4a1:	scas   al,BYTE PTR es:[edi]
  40d4a2:	aam    0x97
  40d4a4:	rcr    BYTE PTR [edi+0x60],0xa8
  40d4a8:	imul   edi,DWORD PTR [edi+0x6b],0xffffffb0
  40d4ac:	jmp    0x5dc0b9d9
  40d4b1:	retf   0x3ea4
  40d4b4:	in     eax,0x28
  40d4b6:	jp     0x40d467
  40d4b8:	fldcw  WORD PTR [eax]
  40d4ba:	cmp    BYTE PTR [eax+0x7628f82f],ch
  40d4c0:	mov    DWORD PTR [eax],ebp
  40d4c2:	sub    dh,dh
  40d4c4:	pop    edi
  40d4c5:	sbb    ebx,DWORD PTR [eax]
  40d4c7:	test   al,0xa1
  40d4c9:	test   BYTE PTR [edx-0x65],bl
  40d4cc:	xchg   ecx,eax
  40d4cd:	sub    BYTE PTR [eax],dl
  40d4cf:	jg     0x40d4ea
  40d4d1:	hlt    
  40d4d2:	jo     0x40d553
  40d4d4:	in     eax,0x18
  40d4d6:	inc    ecx
  40d4d7:	pop    ss
  40d4d8:	inc    edi
  40d4da:	(bad)  
  40d4db:	jg     0x40d467
  40d4dd:	outs   dx,BYTE PTR ds:[esi]
  40d4de:	jecxz  0x40d48f
  40d4e0:	jno    0x40d50a
  40d4e2:	call   0x235cc218
  40d4e7:	mov    dh,0x61
  40d4e9:	sub    BYTE PTR [edi+0x7e],ah
  40d4ec:	in     eax,0x18
  40d4ee:	adc    DWORD PTR [edi],edx
  40d4f0:	or     eax,ecx
	...
  40d4fa:	add    BYTE PTR [eax],al
  40d4fc:	jo     0xaff4435c
  40d502:	inc    ecx
  40d503:	sub    BYTE PTR [eax+0x6b1bfd2d],bh
  40d509:	mov    ecx,0xe54c2831
  40d50e:	or     eax,DWORD PTR [ecx-0x21]
  40d511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d512:	bnd jmp 0xe9a52c80
  40d518:	int3   
  40d519:	xchg   esi,eax
  40d51a:	mov    cl,0x91
  40d51c:	fiadd  DWORD PTR [ebx+0x4d]
  40d51f:	jmp    0x1724c1db
  40d524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d526:	bnd jl 0x40d59d
  40d529:	lahf   
  40d52a:	mov    ?,WORD PTR [eax]
  40d52c:	mov    bh,0xa6
  40d52e:	arpl   ax,bp
  40d530:	int3   
  40d531:	xchg   esi,eax
  40d532:	mov    cl,0x81
  40d534:	js     0x40d581
  40d536:	dec    ebp
  40d537:	jmp    0xd724c1e5
  40d53c:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d53e:	repnz pop esp
  40d540:	inc    ebx
  40d541:	lahf   
  40d542:	data16 mov al,ds:0x7cf2a6f0
  40d548:	xlat   BYTE PTR ds:[ebx]
  40d549:	scas   al,BYTE PTR es:[edi]
  40d54a:	repnz mov esi,0xb6ac15cb
  40d550:	call   0xe9028dfb
  40d555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d556:	repnz xchg ecx,eax
  40d558:	ins    BYTE PTR es:[edi],dx
  40d559:	pop    es
  40d55a:	repz sahf 
  40d55c:	mov    al,0xec
  40d55e:	sti    
  40d55f:	sahf   
	...
  40d568:	add    BYTE PTR [eax],al
  40d56a:	test   al,0xa6
  40d56c:	repnz adc al,0xf7
  40d56f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d570:	js     0x40d563
  40d572:	aam    0xeb
  40d574:	icebp  
  40d575:	jle    0x40d527
  40d577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d578:	mov    eax,0xf2a6b079
  40d57d:	sbb    DWORD PTR [eax],0xa866f307
  40d583:	cmp    al,0xf4
  40d585:	push   eax
  40d586:	or     esp,DWORD PTR [esi+0x2ce856f2]
  40d58c:	lock inc ecx
  40d58e:	ins    BYTE PTR es:[edi],dx
  40d58f:	cli    
  40d590:	or     eax,DWORD PTR [eax]
  40d592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d593:	arpl   si,cx
  40d595:	or     al,0xb6
  40d597:	iret   
  40d598:	test   esp,ebp
  40d59a:	f2xm1  
  40d59c:	push   es
  40d59d:	call   0x33f5c8
  40d5a2:	popf   
  40d5a3:	inc    edx
  40d5a4:	js     0x40d5df
  40d5a6:	pop    esi
  40d5a7:	int3   
  40d5a8:	push   esi
  40d5a9:	inc    ecx
  40d5aa:	jbe    0x40d57e
  40d5ac:	jmp    0x5650:0xf35f120c
  40d5b3:	or     dh,bl
  40d5b5:	(bad)  
  40d5b6:	fstp   DWORD PTR ds:0xbb3a1a64
  40d5bc:	repnz dec edi
  40d5be:	imul   ebp,edi,0x6a70e80a
  40d5c4:	repz dec DWORD PTR [esi+0x9000c03]
  40d5cb:	sbb    al,0x64
  40d5cd:	and    al,0x0
	...
  40d5d7:	add    dl,ch
  40d5d9:	mov    esp,0xef094ff2
  40d5de:	or     ch,al
  40d5e0:	adc    al,0x6a
  40d5e2:	repz dec DWORD PTR [esi]
  40d5e5:	mov    DWORD PTR [ebx-0x319c9601],edx
  40d5eb:	or     BYTE PTR [esi],ah
  40d5ed:	iret   
  40d5ee:	test   esp,ebp
  40d5f0:	jne    0x40d658
  40d5f2:	lock push esi
  40d5f4:	ror    DWORD PTR [ecx],0xf3
  40d5f7:	imul   edi,ebp,0x5e08795c
  40d5fd:	test   eax,0x2369ff8f
  40d602:	dec    ecx
  40d603:	cld    
  40d604:	ins    DWORD PTR es:[edi],dx
  40d605:	scas   eax,DWORD PTR es:[edi]
  40d606:	pop    ebp
  40d607:	dec    eax
  40d608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d609:	jnp    0x40d592
  40d60b:	cmp    eax,0x4bea11
  40d610:	ss sahf 
  40d612:	repnz push cs
  40d614:	iret   
  40d615:	adc    ah,BYTE PTR [esi+0x0]
  40d618:	iret   
  40d619:	xchg   esi,eax
  40d61a:	xchg   esi,eax
  40d61b:	push   cs
  40d61c:	adc    ebx,eax
  40d61e:	push   cs
  40d61f:	push   esi
  40d620:	mov    bh,0xad
  40d622:	jp     0x40d624
  40d624:	iret   
  40d625:	mov    eax,ds:0xd709744e
  40d62a:	mov    ?,WORD PTR [eax]
  40d62c:	iret   
  40d62d:	lods   eax,DWORD PTR ds:[esi]
  40d62e:	jb     0x40d5b7
  40d630:	iret   
  40d631:	xchg   esi,eax
  40d632:	push   cs
  40d633:	push   eax
  40d634:	neg    DWORD PTR [ebp+0x7ecf40ca]
  40d63a:	xchg   esp,eax
  40d63b:	mov    DWORD PTR [eax],eax
	...
  40d645:	add    bh,cl
  40d647:	xchg   esi,eax
  40d648:	les    eax,FWORD PTR [edx]
  40d64a:	lea    eax,[edi]
  40d64c:	pop    ss
  40d64d:	pusha  
  40d64e:	ss scas al,BYTE PTR es:[edi]
  40d650:	sub    BYTE PTR [eax-0x1],dl
  40d653:	dec    BYTE PTR [esi]
  40d655:	add    BYTE PTR [eax-0x23],ah
  40d658:	(bad)  
  40d659:	sbb    DWORD PTR [ebx+0x40500857],ebp
  40d65f:	inc    esp
  40d660:	lock out 0xa4,eax
  40d663:	fisubr WORD PTR [eax]
  40d665:	call   DWORD PTR [edi+0x38000f4e]
  40d66b:	and    eax,0x57832390
  40d670:	or     BYTE PTR [eax+0x18],dl
  40d673:	ins    BYTE PTR es:[edi],dx
  40d674:	lock out 0x78,eax
  40d677:	out    dx,al
  40d678:	sub    bh,bh
  40d67a:	div    DWORD PTR [esi-0x77]
  40d67d:	inc    DWORD PTR [eax]
  40d67f:	add    cl,ch
  40d681:	rcl    BYTE PTR [bp+si-0x31],1
  40d685:	call   FWORD PTR [ecx-0x3074cef2]
  40d68b:	xchg   esi,eax
  40d68c:	repz mov edi,0xe7c0e25b
  40d692:	mov    ah,0x3f
  40d694:	sub    edi,edi
  40d696:	jg     0x40d717
  40d698:	mov    ch,0x9b
  40d69a:	enter  0x41a4,0x66
  40d69e:	aaa    
  40d69f:	mov    bh,BYTE PTR [ecx+0x4234b8c2]
  40d6a5:	scas   eax,DWORD PTR es:[edi]
  40d6a6:	enter  0x297,0x3c
	...
  40d6b2:	add    BYTE PTR [eax],al
  40d6b4:	test   al,0xa4
  40d6b6:	lods   al,BYTE PTR ds:[esi]
  40d6b7:	fwait
  40d6b8:	iret   
  40d6b9:	jg     0x40d705
  40d6bb:	data16 daa 
  40d6bd:	pop    esp
  40d6be:	add    edx,0xaf2a3490
  40d6c4:	rcl    BYTE PTR [edi-0x5b7fc40a],1
  40d6ca:	or     al,0x9
  40d6cc:	pop    eax
  40d6cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6ce:	add    DWORD PTR [ecx],ebx
  40d6d0:	into   
  40d6d1:	cmp    eax,0x2b68e665
  40d6d6:	movsx  esp,BYTE PTR [eax+esi*2+0x25]
  40d6db:	imul   ebx,DWORD PTR [eax-0x5c],0xffffffe1
  40d6df:	and    al,0x5d
  40d6e1:	aad    0x2c
  40d6e3:	std    
  40d6e4:	fsqrt  
  40d6e6:	daa    
  40d6e7:	and    eax,0xa4ea440
  40d6ec:	cmp    BYTE PTR [edx],ch
  40d6ee:	in     eax,dx
  40d6ef:	sbb    ecx,DWORD PTR [eiz*4+0x60b524c9]
  40d6f6:	mov    dl,0xae
  40d6f8:	enter  0x7b97,0x25
  40d6fc:	sbb    BYTE PTR [esi+ecx*2-0x2d5eff8],ah
  40d703:	sbb    edi,DWORD PTR [eax]
  40d705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d706:	xchg   ecx,eax
  40d707:	and    al,0x77
  40d709:	aas    
  40d70a:	cmp    ebx,eax
  40d70c:	clc    
  40d70d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d70e:	xlat   BYTE PTR ds:[ebx]
  40d70f:	xor    al,0x87
  40d711:	ds in  eax,0x24
  40d714:	bound  esi,QWORD PTR [edi-0x63]
  40d717:	repnz add BYTE PTR [eax],al
	...
  40d722:	jecxz  0x40d6c7
  40d724:	or     esi,DWORD PTR [esi+0x34]
  40d727:	fs push eax
  40d729:	sub    bl,cl
  40d72b:	pop    ss
  40d72c:	push   cs
  40d72d:	jmp    0xd533d6fe
  40d732:	les    ebx,FWORD PTR [ebx-0x5d0cabee]
  40d738:	repnz aam 0xe8
  40d73b:	mov    ds:0x6fc4f178,al
  40d740:	nop
  40d741:	ds jmp 0x40d786
  40d744:	push   edx
  40d745:	and    BYTE PTR [esi],cl
  40d747:	jl     0x40d755
  40d749:	xchg   esp,eax
  40d74a:	pop    ss
  40d74b:	xchg   esp,eax
  40d74c:	mov    WORD PTR ds:0x1ef2ab1c,gs
  40d752:	stc    
  40d753:	cmp    al,0xf0
  40d755:	mov    ecx,0xe1c2cb3
  40d75a:	and    DWORD PTR [edi-0x1c],esi
  40d75d:	das    
  40d75e:	out    0x7f,al
  40d760:	or     al,0xf2
  40d762:	or     al,0x73
  40d764:	mov    DWORD PTR [ebx+0x260c7fce],ebp
  40d76a:	adc    DWORD PTR [ebx+0x7fcce90b],ebp
  40d770:	retf   
  40d771:	and    al,0xe7
  40d773:	mov    ds:0x15cce90a,al
  40d778:	or     al,0x43
  40d77a:	retf   
  40d77b:	adc    eax,0xf4d3530c
  40d780:	dec    eax
  40d781:	mov    ch,0x5b
  40d783:	hlt    
  40d784:	mov    BYTE PTR [ebp+0x0],bh
  40d78a:	add    BYTE PTR [eax],al
  40d78c:	add    BYTE PTR [eax],al
  40d78e:	add    BYTE PTR [eax],al
  40d790:	mov    ah,0xa2
  40d792:	repnz sbb esp,ebp
  40d795:	sub    al,0xf4
  40d797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d798:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40d79a:	jecxz  0x40d71d
  40d79c:	push   ecx
  40d79d:	or     BYTE PTR [edx+eiz*8],0x8c
  40d7a1:	sub    ecx,DWORD PTR [ecx]
  40d7a3:	add    dh,0x7d
  40d7a6:	or     al,0x0
  40d7a8:	not    dh
  40d7aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7ab:	dec    eax
  40d7ac:	mov    bh,0x7b
  40d7ae:	repz jne 0x40d7a7
  40d7b1:	push   esi
  40d7b2:	in     eax,0xa1
  40d7b4:	popa   
  40d7b5:	pop    esi
  40d7b6:	pop    esp
  40d7b7:	mov    eax,DWORD PTR [esi]
  40d7b9:	adc    DWORD PTR [ecx-0xca0e60c],ecx
  40d7bf:	push   eax
  40d7c0:	je     0x40d818
  40d7c2:	aad    0xa1
  40d7c4:	add    DWORD PTR [edi-0x7b],ebx
  40d7c7:	test   esi,esp
  40d7c9:	xchg   bl,dh
  40d7cb:	(bad)  
  40d7cc:	(bad)  
  40d7cd:	scas   al,BYTE PTR es:[edi]
  40d7ce:	nop
  40d7cf:	jmp    ecx
  40d7d1:	shl    edx,1
  40d7d3:	addr16 mov dl,ah
  40d7d6:	dec    ebx
  40d7d7:	add    BYTE PTR [ecx-0x1e0803b8],dh
  40d7dd:	pop    esi
  40d7de:	repz jne 0x40d853
  40d7e1:	push   esi
  40d7e2:	mov    eax,ds:0x85855ec1
  40d7e8:	fiadd  DWORD PTR [esi+0x7e3cfff3]
  40d7ee:	outs   dx,DWORD PTR fs:[esi]
  40d7f0:	inc    edx
  40d7f1:	mov    ebx,0xfef2
	...
  40d7fe:	fwait
  40d7ff:	mov    edi,ebx
  40d801:	push   DWORD PTR [ecx]
  40d803:	pop    ebp
  40d804:	jns    0x40d812
  40d806:	push   ds
  40d807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d808:	stos   DWORD PTR es:[edi],eax
  40d809:	jmp    DWORD PTR [ecx]
  40d80b:	repz mov ah,ch
  40d80e:	sbb    DWORD PTR [ebp-0xd],ebx
  40d811:	push   0x36
  40d813:	(bad)  
  40d814:	jp     0x40d872
  40d816:	idiv   DWORD PTR [ebx-0xd]
  40d819:	mov    ch,0x56
  40d81b:	test   ebx,esi
  40d81d:	jmp    DWORD PTR [ecx+0x7]
  40d820:	pop    es
  40d821:	call   0x33f658
  40d826:	jg     0x40d81f
  40d828:	jecxz  0x40d821
  40d82a:	iret   
  40d82b:	or     DWORD PTR [esi],ebp
  40d82d:	push   0xffffffcf
  40d82f:	or     BYTE PTR [ecx+0x2d988e5c],0xb5
  40d836:	fild   QWORD PTR [eax]
  40d838:	cs (bad) 
  40d83a:	fsub   DWORD PTR [edx+0x37eee802]
  40d840:	call   DWORD PTR cs:[esi+0x14]
  40d844:	xor    esi,edi
  40d846:	rol    BYTE PTR [edx-0x64],0x85
  40d84a:	scas   eax,DWORD PTR es:[edi]
  40d84b:	inc    edx
  40d84c:	call   FWORD PTR cs:[edi]
  40d84f:	mov    edi,0x970e5c77
  40d854:	sub    eax,0x2e6a9fb5
  40d859:	call   FWORD PTR [eax+0xe485da4]
  40d85f:	xchg   edi,eax
  40d860:	es mov esi,0x0
  40d866:	add    BYTE PTR [eax],al
  40d868:	add    BYTE PTR [eax],al
  40d86a:	add    BYTE PTR [eax],al
  40d86c:	das    
  40d86d:	pop    edx
  40d86e:	or     ecx,DWORD PTR cs:[edi+0x3a82f00b]
  40d875:	ja     0x40d88d
  40d877:	push   DWORD PTR [eax-0x65]
  40d87a:	xchg   ebx,eax
  40d87b:	punpckhbw mm4,mm7
  40d87e:	popf   
  40d87f:	test   DWORD PTR [edi-0xd356],eax
  40d885:	jle    0x40d809
  40d887:	popf   
  40d888:	push   eax
  40d889:	xchg   edx,eax
  40d88a:	and    BYTE PTR [esp+edx*8],dl
  40d88d:	(bad)  
  40d88e:	xchg   ebx,eax
  40d88f:	add    eax,0x9cacce9f
  40d894:	cmp    dl,cl
  40d896:	inc    esp
  40d897:	test   DWORD PTR [edi],edx
  40d899:	retf   0xff2c
  40d89c:	ret    0xe96
  40d89f:	add    BYTE PTR [edx+0x1c],dl
  40d8a2:	cmp    bh,dh
  40d8a4:	sbb    dl,ch
  40d8a6:	mov    bh,0x67
  40d8a8:	xor    esi,DWORD PTR [ebx-0x31]
  40d8ab:	dec    DWORD PTR [ecx]
  40d8ad:	adc    BYTE PTR [eax+0x14],0xf8
  40d8b1:	mov    al,ds:0x73822191
  40d8b6:	lea    edx,[ebp-0x747e5eb0]
  40d8bc:	push   edx
  40d8bd:	int3   
  40d8be:	jno    0x40d8e1
  40d8c0:	loopne 0x40d8be
  40d8c2:	das    
  40d8c3:	sub    al,ah
  40d8c5:	mov    al,ds:0xfbc00479
  40d8ca:	pop    ebp
  40d8cb:	add    al,0xcf
  40d8cd:	jg     0x40d935
  40d8cf:	pop    edi
	...
  40d8d8:	add    BYTE PTR [eax],al
  40d8da:	mov    bl,0xa8
  40d8dc:	push   ecx
  40d8dd:	and    edi,ecx
  40d8df:	jo     0x40d942
  40d8e1:	xchg   edx,eax
  40d8e2:	iret   
  40d8e3:	jg     0x40d8ca
  40d8e5:	test   BYTE PTR [edx-0x69],ch
  40d8e8:	xor    DWORD PTR [ecx],esp
  40d8ea:	mov    al,ds:0x4e87e27f
  40d8ef:	jg     0x40d8d6
  40d8f1:	add    esp,DWORD PTR [edi]
  40d8f3:	nop
  40d8f4:	in     eax,0x30
  40d8f6:	dec    ecx
  40d8f7:	mov    al,ds:0xcd770b8f
  40d8fc:	mov    esp,DWORD PTR [ecx]
  40d8fe:	js     0x40d8a0
  40d900:	dec    edi
  40d901:	xor    BYTE PTR [eax-0x60],bh
  40d904:	add    DWORD PTR [ecx],esp
  40d906:	loop   0x40d97f
  40d908:	sbb    eax,0xf1a046ea
  40d90d:	and    BYTE PTR [edx],ah
  40d90f:	xchg   edi,eax
  40d910:	icebp  
  40d911:	and    BYTE PTR [eax-0x60],dl
  40d914:	ja     0x40d921
  40d916:	aaa    
  40d917:	xchg   DWORD PTR [edi-0x685fbfe0],ecx
  40d91d:	daa    
  40d91e:	inc    eax
  40d91f:	mov    al,ds:0x77ba20d9
  40d924:	int    0xd
  40d926:	inc    ebp
  40d927:	mov    al,ds:0xc75a20c9
  40d92c:	mov    ecx,0xba01820
  40d931:	cmp    al,0xc3
  40d933:	xchg   edi,eax
  40d934:	xchg   ebp,eax
  40d935:	push   eax
  40d936:	scas   eax,DWORD PTR es:[edi]
  40d937:	mov    al,ds:0xa8c05cf2
  40d93c:	repnz sahf 
	...
  40d946:	add    BYTE PTR [eax],al
  40d948:	scas   eax,DWORD PTR es:[edi]
  40d949:	sub    al,BYTE PTR [ecx+eax*4]
  40d94c:	mov    esi,0x538ef306
  40d951:	loop   0x40d92a
  40d953:	jle    0x40d904
  40d955:	mov    al,ds:0xfcdbf50b
  40d95a:	mov    al,0x99
  40d95c:	mov    bh,0xa0
  40d95e:	repnz in eax,0x61
  40d961:	jno    0x40d8ea
  40d963:	ins    BYTE PTR es:[edi],dx
  40d964:	clc    
  40d965:	xchg   esi,eax
  40d966:	repnz pop esi
  40d968:	out    dx,eax
  40d969:	dec    edi
  40d96a:	repz fadd st(4),st
  40d96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d96e:	gs jo  0x40d960
  40d971:	sahf   
  40d972:	out    0xf3,al
  40d974:	jb     0x40d915
  40d976:	icebp  
  40d977:	mov    ah,0xc4
  40d979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d97a:	push   ecx
  40d97b:	push   eax
  40d97c:	out    dx,eax
  40d97d:	sahf   
  40d97e:	bnd je 0x40d931
  40d981:	xchg   esi,eax
  40d982:	repnz es mov ah,0xe1
  40d986:	(bad)  
  40d987:	push   ds
  40d988:	scas   eax,DWORD PTR es:[edi]
  40d989:	sahf   
  40d98a:	mov    eax,0xf29ed705
  40d98f:	add    edi,esp
  40d991:	sti    
  40d992:	repnz push es
  40d994:	scas   eax,DWORD PTR es:[edi]
  40d995:	aam    0xe3
  40d997:	idiv   BYTE PTR [eax-0x2f9a1c62]
  40d99d:	sahf   
  40d99e:	repnz out dx,al
  40d9a0:	mov    ds:0xe0e6fabb,al
  40d9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9a6:	mov    WORD PTR [ebp-0x28],?
  40d9a9:	sahf   
  40d9aa:	repnz pushf 
	...
  40d9b4:	add    BYTE PTR [eax],al
  40d9b6:	not    DWORD PTR [esi+0x15fbcef2]
  40d9bc:	nop
  40d9bd:	add    BYTE PTR [ecx],cl
  40d9bf:	jg     0x40d9b4
  40d9c1:	mov    ch,0x56
  40d9c3:	ja     0x40d9b8
  40d9c5:	call   FWORD PTR [ecx-0x7]
  40d9c8:	push   es
  40d9c9:	inc    ebx
  40d9cb:	mov    esp,esp
  40d9cd:	mov    ecx,0xfff37f2b
  40d9d2:	mov    ds:0x59fffb73,eax
  40d9d7:	ins    BYTE PTR es:[edi],dx
  40d9d8:	push   esi
  40d9d9:	pushf  
  40d9da:	pop    ecx
  40d9db:	jg     0x40d9d0
  40d9dd:	inc    ebp
  40d9de:	dec    esi
  40d9df:	ins    DWORD PTR es:[edi],dx
  40d9e0:	sar    ebp,0x59
  40d9e3:	jle    0x40d9d8
  40d9e5:	jne    0x40da41
  40d9e7:	imul   edi,DWORD PTR [edx-0x78],0xffffffb6
  40d9eb:	add    ch,0xc2
  40d9ee:	mov    edx,0xa8b5982
  40d9f3:	add    ecx,eax
  40d9f5:	cld    
  40d9f6:	mov    WORD PTR [edx-0x6e6e39a],es
  40d9fc:	or     ch,al
  40d9fe:	jp     0x40da1b
  40da00:	repz call FWORD PTR [edi]
  40da03:	leave  
  40da04:	imul   BYTE PTR [eax+0x41]
  40da07:	mov    edi,0xb8b9004b
  40da0c:	ror    DWORD PTR [eax+0x37],0x82
  40da10:	repz jne 0x40da91
  40da13:	push   0x7e
  40da15:	std    
  40da16:	fnstcw WORD PTR [esi+0x64]
  40da19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  40da22:	add    BYTE PTR [eax],al
  40da24:	cmp    al,bl
  40da26:	bnd addr16 je 0x40d9ac
  40da2a:	or     al,0x80
  40da2c:	pop    ecx
  40da2d:	test   DWORD PTR [edx],0xf35f46e8
  40da33:	(bad)  
  40da34:	cmp    edi,esi
  40da36:	idiv   bh
  40da38:	mov    ds:0x4f7fe48b,eax
  40da3d:	jge    0x40da32
  40da3f:	leave  
  40da40:	iret   
  40da41:	jmp    0x8123:0x2182000a
  40da48:	or     ebx,esp
  40da4a:	adc    bh,bh
  40da4c:	sbb    BYTE PTR [edx],dh
  40da4e:	or     BYTE PTR [edx-0x4e],ch
  40da51:	aad    0x93
  40da53:	pop    es
  40da54:	test   DWORD PTR [edi+0xf00ff71],0xa467fbc4
  40da5e:	pop    es
  40da5f:	add    bh,cl
  40da61:	and    eax,DWORD PTR [edi+esi*8+0x50120ce9]
  40da68:	neg    DWORD PTR [ebp-0x6e30ff77]
  40da6e:	dec    esi
  40da6f:	je     0x40da14
  40da71:	ror    DWORD PTR [edx],cl
  40da73:	add    edi,ecx
  40da75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da76:	cdq    
  40da77:	and    al,0x37
  40da79:	out    0xb2,al
  40da7b:	inc    eax
  40da7c:	iret   
  40da7d:	sub    eax,DWORD PTR [edi+esi*8+0x501236b1]
  40da84:	mov    bh,0xd6
  40da86:	jno    0x40da87
	...
  40da90:	add    BYTE PTR [eax],al
  40da92:	mov    al,ds:0x98ffa6f7
  40da97:	dec    esi
  40da98:	push   ecx
  40da99:	push   eax
  40da9a:	nop
  40da9b:	fadd   QWORD PTR [esi]
  40da9d:	call   0xff5342e3
  40daa2:	ja     0x40daef
  40daa4:	jbe    0x40daa5
  40daa6:	js     0x40db26
  40daa8:	xchg   esp,eax
  40daa9:	sti    
  40daaa:	jo     0x40daa8
  40daac:	push   es
  40daad:	call   0xff52ea72
  40dab2:	xchg   esi,eax
  40dab3:	imul   ecx,DWORD PTR [ebx],0x23120200
  40dab9:	or     DWORD PTR [ebx-0x49005c6d],0xffffffcc
  40dac0:	adc    DWORD PTR [ebp-0x29],esi
  40dac3:	jg     0x40daa2
  40dac5:	pop    ecx
  40dac6:	push   edi
  40dac7:	popf   
  40dac8:	ror    DWORD PTR [ebx+0x44c9b8a],1
  40dace:	iret   
  40dacf:	lods   al,BYTE PTR ds:[esi]
  40dad0:	sub    BYTE PTR [ebx+edx*1-0x58fbdbc4],0xb6
  40dad8:	adc    bl,al
  40dada:	adc    BYTE PTR [esi-0x1a08f3d1],bl
  40dae0:	test   al,0x1d
  40dae2:	add    BYTE PTR [ebp+0x12f8200f],bl
  40dae8:	std    
  40dae9:	sub    edx,DWORD PTR [ebx]
  40daeb:	clc    
  40daec:	cdq    
  40daed:	sbb    eax,0x3e8c216
  40daf2:	jp     0x40dafc
  40daf4:	cdq    
  40daf5:	add    DWORD PTR [eax],0x0
	...
  40db00:	adc    esi,DWORD PTR [ecx+edi*2+0x200ad01d]
  40db07:	and    BYTE PTR [edi],bl
  40db09:	popf   
  40db0a:	div    ebx
  40db0c:	rcl    DWORD PTR [edx],0xf9
  40db0f:	sub    eax,DWORD PTR [ebx+0x5]
  40db12:	in     eax,0x3
  40db14:	les    edi,FWORD PTR [edi+0x7ea386e9]
  40db1a:	in     eax,0x3
  40db1c:	mov    BYTE PTR [edx+0x4d],al
  40db1f:	add    al,0xcf
  40db21:	jg     0x40db08
  40db23:	inc    esp
  40db24:	or     dl,BYTE PTR [ecx+edi*1-0x308030fb]
  40db2b:	add    esi,ebp
  40db2d:	jg     0x40dace
  40db2f:	add    esp,ebp
  40db31:	jg     0x40db93
  40db33:	(bad)  
  40db34:	jl     0x40db65
  40db36:	push   0x1946387
  40db3b:	sbb    eax,0x1b6f9cff
  40db40:	pop    eax
  40db41:	adc    dh,cl
  40db43:	sub    ecx,DWORD PTR [ecx]
  40db45:	add    eax,0x88cce90c
  40db4a:	int3   
  40db4b:	jne    0x40db16
  40db4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db4e:	mov    edx,0x647fcce8
  40db53:	xchg   edx,eax
  40db54:	add    al,0x3f
  40db56:	or     al,0xd6
  40db58:	inc    ecx
  40db59:	mov    esp,fs
  40db5b:	jbe    0x40daff
  40db5d:	pushf  
  40db5e:	repnz sbb DWORD PTR [esi-0x51],eax
  40db62:	and    BYTE PTR [eax+eax*1+0x0],0x0
  40db67:	add    BYTE PTR [eax],al
  40db69:	add    BYTE PTR [eax],al
  40db6b:	add    BYTE PTR [eax],al
  40db6d:	add    BYTE PTR [eax+0x3cb6f294],bh
  40db73:	cs in  al,0x66
  40db76:	sbb    BYTE PTR [edx+esi*8-0x570ae90],0x9e
  40db7e:	shl    DWORD PTR [edi-0x63348c30],cl
  40db84:	and    BYTE PTR [esp+ebp*4-0x6c],0xf2
  40db89:	xchg   BYTE PTR [esp],bl
  40db8c:	out    dx,eax
  40db8d:	sbb    eax,0x3cf19c0c
  40db92:	fcom   QWORD PTR [edx+0x14e36ef2]
  40db98:	add    BYTE PTR [ecx-0x9],dl
  40db9b:	cld    
  40db9c:	repnz pop esi
  40db9e:	inc    ebp
  40db9f:	add    eax,0x9acb5ee8
  40dba4:	gs jmp 0xa890831e
  40dbaa:	int3   
  40dbab:	call   0x36f2:0x9abb39b8
  40dbb2:	popa   
  40dbb3:	xchg   esp,esp
  40dbb5:	sub    DWORD PTR [ecx],eax
  40dbb7:	fwait
  40dbb8:	bnd jo 0x40dc0c
  40dbbb:	lods   al,BYTE PTR ds:[esi]
  40dbbc:	cli    
  40dbbd:	push   ds
  40dbbe:	shl    DWORD PTR ds:0x3bbc810c,cl
  40dbc4:	dec    ebp
  40dbc5:	jmp    0x13cb08d
  40dbca:	pop    ecx
  40dbcb:	ja     0x40dbc0
  40dbcd:	(bad)  
  40dbce:	fisttp DWORD PTR [edx+0xa5e4]
	...
  40dbdc:	mov    ds:0xab89f37b,eax
  40dbe1:	data16 sti 
  40dbe3:	push   DWORD PTR [ecx]
  40dbe5:	jmp    0x4b:0xd82f67f2
  40dbec:	add    DWORD PTR [ecx],esi
  40dbee:	cld    
  40dbef:	not    DWORD PTR [ecx]
  40dbf1:	ja     0x40dbe6
  40dbf3:	jne    0x40dc17
  40dbf5:	xchg   BYTE PTR [di+0x7751],bl
  40dbfa:	test   DWORD PTR [ebp-0xc909e],eax
  40dc00:	mov    WORD PTR [ebx-0x3b6cf89c],es
  40dc06:	repnz (bad) 
  40dc08:	fwait
  40dc09:	jae    0x40dc06
  40dc0b:	inc    DWORD PTR [ecx+0x77]
  40dc0e:	jns    0x40dc1c
  40dc10:	dec    esi
  40dc11:	out    0x8f,eax
  40dc13:	call   DWORD PTR [ecx+0xd]
  40dc16:	mov    eax,ebx
  40dc18:	pop    ecx
  40dc19:	jbe    0x40dc0e
  40dc1b:	push   0xffffffb6
  40dc1d:	out    0x4d,al
  40dc1f:	pop    ebp
  40dc20:	test   DWORD PTR [ebx+0x6f16b5f3],0xf111fff3
  40dc2a:	push   es
  40dc2b:	call   0x33f39a
  40dc30:	das    
  40dc31:	add    eax,ebx
  40dc33:	not    DWORD PTR [ecx]
  40dc35:	ja     0x40dbc6
  40dc37:	mov    ebp,0xfff36f0a
  40dc3c:	jbe    0x40dc48
  40dc3e:	je     0x40dbc3
	...
  40dc48:	add    BYTE PTR [eax],al
  40dc4a:	repz addr16 sti 
  40dc4d:	push   DWORD PTR [ecx-0x1a8f877d]
  40dc53:	cmp    ah,ah
  40dc55:	test   edi,0xdb001771
  40dc5b:	add    DWORD PTR [edi+0x5671cf0f],esp
  40dc61:	(bad)  
  40dc62:	ficom  DWORD PTR [eax-0x6e9e40da]
  40dc68:	adc    eax,0x1d9c7aff
  40dc6d:	(bad)  
  40dc6e:	cmp    BYTE PTR [ecx-0x6ad8f865],ah
  40dc74:	jge    0x40dc75
  40dc76:	sub    BYTE PTR [ecx-0x36e717a5],dh
  40dc7c:	adc    eax,0x2690a2ff
  40dc81:	add    eax,0xff15d938
  40dc86:	inc    edx
  40dc87:	enter  0xff1d,0x0
  40dc8b:	jmp    0xe141c0eb
  40dc90:	adc    eax,0x26907aff
  40dc95:	lds    eax,FWORD PTR [ecx-0xf]
  40dc98:	adc    eax,0x1dd01aff
  40dc9d:	(bad)  
  40dc9e:	fadd   DWORD PTR [eax]
  40dca0:	pushf  
  40dca1:	pop    es
  40dca2:	out    0x4,eax
  40dca4:	jge    0x40dca5
  40dca6:	enter  0x5c12,0xdc
  40dcaa:	mov    eax,0xff162a
	...
  40dcb7:	add    BYTE PTR [edx-0x71],al
  40dcba:	es aad 0x59
  40dcbd:	cmp    dl,BYTE PTR [esi]
  40dcbf:	jmp    DWORD PTR [edx+0x5b]
  40dcc2:	push   ds
  40dcc3:	jmp    DWORD PTR [eax-0x58f863b6]
  40dcc9:	push   0x7d
  40dccb:	call   DWORD PTR [eax-0x7f1ba3a6]
  40dcd1:	push   edx
  40dcd2:	push   ss
  40dcd3:	call   0xff570d0e
  40dcd8:	js     0x40dc5a
  40dcda:	push   eax
  40dcdb:	daa    
  40dcdc:	js     0x40dc77
  40dcde:	adc    DWORD PTR [ebx],ebp
  40dce0:	dec    ecx
  40dce1:	neg    DWORD PTR [ecx]
  40dce3:	sbb    ah,BYTE PTR [eax-0x2d]
  40dce6:	or     al,0x12
  40dce8:	pop    eax
  40dce9:	cdq    
  40dcea:	sbb    al,0x76
  40dcec:	ss cdq 
  40dcee:	icebp  
  40dcef:	sbb    DWORD PTR [edx+0x4019f1bc],eax
  40dcf5:	test   al,0x6c
  40dcf7:	jl     0x40dd31
  40dcf9:	cdq    
  40dcfa:	jmp    0xd1d1f44e
  40dcff:	sbb    DWORD PTR [edi],esi
  40dd01:	sbb    edi,DWORD PTR [ecx+ebx*1+0x20]
  40dd05:	cdq    
  40dd06:	xchg   edi,eax
  40dd07:	xor    BYTE PTR [eax],ah
  40dd09:	cdq    
  40dd0a:	leave  
  40dd0b:	sub    al,0x9d
  40dd0d:	div    BYTE PTR [ecx-0x4b2cf7e7]
  40dd13:	adc    DWORD PTR [eax],eax
  40dd15:	cdq    
  40dd16:	mov    eax,ds:0xf98c48f
  40dd1b:	or     al,0x0
	...
  40dd25:	add    bh,ah
  40dd27:	adc    BYTE PTR [ebx+0x4f98e819],0x14
  40dd2e:	fcomp  DWORD PTR [eax-0x97ed37f]
  40dd34:	mov    DWORD PTR [ecx],ebx
  40dd36:	rol    BYTE PTR [edx-0x73],1
  40dd39:	sub    esp,esp
  40dd3b:	cdq    
  40dd3c:	jns    0x40dd57
  40dd3e:	rcl    BYTE PTR [edx],0x61
  40dd41:	sub    al,0x3d
  40dd43:	add    esp,ebp
  40dd45:	add    eax,DWORD PTR [esi+0x203e0bd]
  40dd4b:	add    eax,0x9b8b8549
  40dd50:	into   
  40dd51:	add    esp,DWORD PTR ds:0xc88f4a79
  40dd57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd58:	fdiv   QWORD PTR [ecx-0x78]
  40dd5b:	cwde   
  40dd5c:	or     esp,DWORD PTR [eax+0x40]
  40dd5f:	xchg   esp,eax
  40dd60:	arpl   bp,bx
  40dd62:	inc    ecx
  40dd63:	aas    
  40dd64:	or     al,0x26
  40dd66:	or     cl,0x43
  40dd69:	test   al,0xcc
  40dd6b:	cwde   
  40dd6c:	js     0x40dd4f
  40dd6e:	mov    ah,0xbf
  40dd70:	lock push cs
  40dd72:	mov    dh,0x27
  40dd74:	add    BYTE PTR [ebp+ecx*4-0x33149568],ah
  40dd7b:	jg     0x40dd09
  40dd7d:	not    BYTE PTR [ecx-0x80]
  40dd80:	in     al,0x3f
  40dd82:	loopne 0x40dd1c
  40dd84:	repnz out 0x41,al
  40dd87:	xchg   esp,eax
  40dd88:	repnz push esp
	...
  40dd92:	add    BYTE PTR [eax],al
  40dd94:	(bad)  [edi-0x6738808a]
  40dd9a:	les    ebp,FWORD PTR [ebx+0x72579818]
  40dda0:	call   0x3efea5a1
  40dda5:	xor    DWORD PTR [esi-0x17],esp
  40dda8:	xor    bh,BYTE PTR [eax-0xd]
  40ddab:	xor    al,0xcb
  40ddad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddae:	adc    BYTE PTR [edi-0x29],bh
  40ddb1:	cwde   
  40ddb2:	test   BYTE PTR [edi+eax*8],ah
  40ddb5:	add    al,0x39
  40ddb7:	cmp    dl,BYTE PTR [ebx]
  40ddb9:	aas    
  40ddba:	or     al,0x62
  40ddbc:	add    DWORD PTR [ecx],esi
  40ddbe:	inc    esp
  40ddbf:	sub    bl,cl
  40ddc1:	push   DWORD PTR [edx]
  40ddc3:	jmp    0x13a4fe20
  40ddc8:	js     0x40de0a
  40ddca:	or     al,0x17
  40ddcc:	jmp    0x40de27
  40ddce:	mov    ecx,ebp
  40ddd0:	int3   
  40ddd1:	das    
  40ddd2:	fs scas eax,DWORD PTR es:[edi]
  40ddd4:	popa   
  40ddd5:	inc    eax
  40ddd6:	or     al,0xbe
  40ddd8:	hlt    
  40ddd9:	gs mov ecx,ebp
  40dddc:	int3   
  40dddd:	cmp    DWORD PTR [edi],eax
  40dddf:	add    dh,ah
  40dde1:	add    eax,0x6e40b0f
  40dde6:	and    eax,0xacee0e56
  40ddeb:	jmp    FWORD PTR [ecx+0x275d68ea]
  40ddf1:	sbb    DWORD PTR [eax+ebp*8-0x1b],0xe
  40ddf6:	repz inc DWORD PTR [eax]
	...
  40de01:	add    BYTE PTR [esi],ah
  40de03:	jmp    0x40ddf7
  40de05:	call   FWORD PTR [ecx+0x38]
  40de08:	fs popa 
  40de0a:	sub    eax,edx
  40de0c:	repnz dec edi
  40de0e:	dec    ecx
  40de0f:	add    eax,0x41b8e80b
  40de14:	repz dec esi
  40de17:	call   DWORD PTR [ebx+0xd6b29ff]
  40de1d:	inc    esi
  40de1e:	mov    dh,0xad
  40de20:	bnd je 0x40de1f
  40de23:	aad    0xf6
  40de25:	xor    esp,DWORD PTR [esi+0x35]
  40de28:	repz dec DWORD PTR [ecx]
  40de2b:	outs   dx,DWORD PTR ds:[esi]
  40de2c:	(bad)  
  40de2d:	scas   al,BYTE PTR es:[edi]
  40de2e:	into   
  40de2f:	xchg   esi,eax
  40de30:	ja     0x40ddd1
  40de32:	cmp    ecx,esi
  40de34:	idiv   bh
  40de36:	ret    
  40de37:	and    esp,0xffffffe3
  40de3a:	jae    0x40deaa
  40de3c:	repz pop edi
  40de3e:	test   al,0x44
  40de40:	into   
  40de41:	add    al,0xf6
  40de43:	iret   
  40de44:	test   esp,ebp
  40de46:	gs aas 
  40de48:	lock call ebx
  40de4b:	jle    0x40de40
  40de4d:	jne    0x40de0d
  40de4f:	push   0xfffffff6
  40de51:	xchg   edx,eax
  40de52:	cmp    DWORD PTR [edi-0x7b],ebp
  40de55:	inc    ebp
  40de56:	sub    ch,BYTE PTR [edi+0x79]
  40de59:	cld    
  40de5a:	sub    ecx,esi
  40de5c:	or     ch,al
  40de5e:	mov    WORD PTR [edx],ss
  40de60:	repz dec edi
  40de63:	and    ebp,eax
  40de65:	or     eax,DWORD PTR [eax]
	...
  40de6f:	add    ah,al
  40de71:	push   0x7f4c419c
  40de76:	or     BYTE PTR [edx+ecx*8+0x55],dh
  40de7a:	popf   
  40de7b:	sti    
  40de7c:	ja     0x40de67
  40de7e:	jbe    0x40de7f
  40de80:	js     0x40de7a
  40de82:	sbb    DWORD PTR [ebp-0x3d],esi
  40de85:	pop    ebp
  40de86:	popf   
  40de87:	sti    
  40de88:	push   DWORD PTR [ebp-0x63]
  40de8b:	pop    es
  40de8c:	ja     0x40ded8
  40de8e:	jle    0x40de8f
  40de90:	pop    eax
  40de91:	rol    BYTE PTR [ebp-0x2ed63cb3],cl
  40de97:	inc    ebx
  40de99:	xchg   edx,eax
  40de9a:	mov    esp,0x1b30d2e7
  40de9f:	jmp    esp
  40dea1:	push   0x1b4c1427
  40dea6:	clc    
  40dea7:	call   FWORD PTR [eax+edx*4-0x5240ba7b]
  40deae:	fwait
  40deaf:	sti    
  40deb0:	dec    eax
  40deb1:	test   al,0x85
  40deb3:	ret    0xaa24
  40deb6:	in     eax,0xbf
  40deb8:	push   ss
  40deb9:	jmp    0xff2b:0x219a000a
  40dec0:	xor    BYTE PTR [ecx+ebx*1-0x760f388b],0x92
  40dec8:	call   0xd3b5f8c1
  40decd:	pop    eax
  40dece:	sbb    esi,DWORD PTR [ebp-0x39]
  40ded1:	add    dl,dh
  40ded3:	xchg   edx,eax
	...
  40dedc:	add    BYTE PTR [eax],al
  40dede:	sar    ah,1
  40dee0:	aas    
  40dee1:	ret    0xa6d7
  40dee4:	mov    ebx,0x332ab38a
  40dee9:	shl    BYTE PTR [ecx],0x6e
  40deec:	mov    edi,0xfd803282
  40def1:	add    esp,DWORD PTR [ebx]
  40def3:	jb     0x40df5b
  40def5:	cwde   
  40def6:	aam    0x7f
  40def8:	rol    DWORD PTR [edi],1
  40defa:	dec    esp
  40defb:	adc    esi,ebp
  40defd:	add    ebx,DWORD PTR [ebx]
  40deff:	jle    0x40df67
  40df01:	cwde   
  40df02:	fdivr  QWORD PTR [edi-0x48]
  40df05:	or     al,0xb4
  40df07:	mov    edi,0xc71ab69d
  40df0c:	es repz jo 0x40df1a
  40df10:	mov    al,ds:0xe9a04c07
  40df15:	and    dl,0x83
  40df18:	in     eax,0x8f
  40df1a:	int3   
  40df1b:	mov    BYTE PTR ds:0x2568c78f,ah
  40df21:	mov    edx,0x413c35a9
  40df26:	fistp  QWORD PTR [edi+0x6e]
  40df29:	rcr    ah,0x0
  40df2c:	add    eax,0xf1134dfe
  40df31:	add    esp,DWORD PTR [ebx-0x64bc0185]
  40df37:	xchg   BYTE PTR [esi],cl
  40df39:	inc    esp
  40df3a:	je     0x40df70
  40df3c:	and    ecx,DWORD PTR [ebx+0xd]
  40df3f:	jo     0x40df26
  40df41:	call   0x40df46
  40df46:	add    BYTE PTR [eax],al
  40df48:	add    BYTE PTR [eax],al
  40df4a:	add    BYTE PTR [eax],al
  40df4c:	and    eax,0x50083795
  40df51:	cmp    esp,DWORD PTR [ebp-0x12406d7f]
  40df57:	adc    al,0x7a
  40df59:	mov    edi,0x95419a9c
  40df5e:	xchg   ecx,eax
  40df5f:	sbb    BYTE PTR [esi+0x3b],dl
  40df62:	mov    eax,ds:0x42bb5a89
  40df67:	xchg   esp,eax
  40df68:	jae    0x40dfa8
  40df6a:	in     eax,0x5a
  40df6c:	aam    0x7f
  40df6e:	in     eax,0x3
  40df70:	mov    esp,0x48620bdb
  40df75:	jl     0x40defe
  40df77:	sbb    al,0xc7
  40df79:	nop
  40df7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df7b:	je     0x40dfe5
  40df7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df7e:	pop    ebx
  40df7f:	pop    esi
  40df80:	push   eax
  40df81:	aam    0xf2
  40df83:	(bad)  
  40df85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df86:	jp     0x40df10
  40df88:	mov    edx,0xc8bcf294
  40df8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df8e:	cmp    al,0x56
  40df90:	ficom  DWORD PTR [edx+esi*8+0x4904d0bc]
  40df97:	sub    DWORD PTR [esi+0x3a],ecx
  40df9a:	int3   
  40df9b:	add    al,dl
  40df9d:	or     cl,ah
  40df9f:	adc    DWORD PTR [ecx+0x4416f2ed],edx
  40dfa5:	cmp    cl,al
  40dfa7:	or     eax,0x74c83a44
  40dfac:	pop    eax
  40dfad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfae:	xchg   BYTE PTR [eax+eax*1+0x0],bh
	...
  40dfba:	add    bh,dl
  40dfbc:	sbb    ebp,ecx
  40dfbe:	int3   
  40dfbf:	jg     0x40dfc0
  40dfc1:	inc    ebp
  40dfc2:	cdq    
  40dfc3:	sqrtps xmm5,XMMWORD PTR [eax]
  40dfc6:	rcl    esi,cl
  40dfc8:	push   es
  40dfc9:	jmp    0x8e405f9a
  40dfce:	inc    edi
  40dfcf:	or     al,BYTE PTR [edx+eiz*2]
  40dfd2:	or     DWORD PTR [eax+0x3a518dff],ecx
  40dfd8:	in     al,dx
  40dfd9:	sbb    edx,ebx
  40dfdb:	or     cl,ah
  40dfdd:	mov    dh,0x49
  40dfdf:	shl    bl,0x7
  40dfe2:	ins    BYTE PTR es:[edi],dx
  40dfe3:	xchg   esp,eax
  40dfe4:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfe6:	pop    ecx
  40dfe7:	shl    bl,0x89
  40dfea:	jb     0x40df80
  40dfec:	repnz xchg ebp,eax
  40dfee:	push   ecx
  40dfef:	or     bh,ah
  40dff1:	pop    esp
  40dff2:	cmp    DWORD PTR [esp+esi*4+0xc7fa600],edi
  40dff9:	add    BYTE PTR [ebp+0x33],al
  40dffc:	xor    DWORD PTR [ebp+0x46],0xa6000436
  40e003:	jg     0x40e004
  40e005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e006:	jl     0x40e086
  40e008:	add    DWORD PTR [ebp-0x22],0x4468eace
  40e00f:	jg     0x40e01d
  40e011:	mov    edi,DWORD PTR [ebx-0x71]
  40e014:	test   DWORD PTR [ebp-0x56],edi
  40e017:	ds jecxz 0x40e01d
  40e01a:	jge    0x40e088
  40e01c:	js     0x40e085
	...
  40e026:	add    BYTE PTR [eax],al
  40e028:	or     eax,0xe45817c
  40e02d:	iret   
  40e02e:	pop    eax
  40e02f:	push   esi
  40e030:	mov    esi,0x7600a875
  40e035:	add    dl,cl
  40e037:	or     BYTE PTR [ecx],dh
  40e039:	mov    bl,dh
  40e03b:	jne    0x40e090
  40e03d:	jg     0x40dff9
  40e03f:	inc    esi
  40e040:	sar    edi,1
  40e042:	repz or BYTE PTR [ecx+0xdf02780],bh
  40e049:	add    al,BYTE PTR [ebx]
  40e04b:	shl    DWORD PTR [eax],1
  40e04d:	call   0xf5774a44
  40e052:	repnz imul esi,DWORD PTR [esi],0x1675f1d9
  40e059:	cmc    
  40e05a:	repnz imul esp,DWORD PTR [esi],0xf681b277
  40e061:	jle    0x40e06a
  40e063:	sar    BYTE PTR [edx+0xe5042b4],0xfa
  40e06a:	cdq    
  40e06b:	jmp    DWORD PTR [ecx]
  40e06d:	adc    edx,esp
  40e06f:	pop    ecx
  40e070:	mov    esp,0xa700667b
  40e075:	retf   0xff58
  40e078:	iret   
  40e079:	jae    0x40e073
  40e07b:	imul   ecx,edi,0x6ae8087e
  40e081:	daa    
  40e082:	or     BYTE PTR [eax],al
  40e084:	aam    0xe8
  40e086:	xchg   esp,eax
  40e087:	pop    es
  40e088:	sbb    al,0x1
  40e08a:	mov    bl,0x95
	...
  40e094:	add    BYTE PTR [eax],al
  40e096:	mov    al,0x21
  40e098:	rcr    edx,cl
  40e09a:	push   esp
  40e09b:	mov    gs:0x4a50015e,eax
  40e0a1:	adc    bh,cl
  40e0a3:	shl    DWORD PTR [ecx-0x14],cl
  40e0a6:	dec    esp
  40e0a7:	pop    esp
  40e0a8:	sbb    BYTE PTR [edi+0x1c],dl
  40e0ab:	outs   dx,BYTE PTR ds:[esi]
  40e0ac:	and    edi,edi
  40e0ae:	cli    
  40e0af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0b0:	sbb    eax,0x3740c775
  40e0b5:	nop
  40e0b6:	jo     0x40e119
  40e0b8:	mov    eax,0x1690e2fe
  40e0bd:	mov    WORD PTR ds:0x578b1f71,?
  40e0c3:	ror    BYTE PTR [ecx],1
  40e0c5:	clc    
  40e0c6:	les    ebp,FWORD PTR [eax-0x6c]
  40e0c9:	inc    esi
  40e0ca:	pop    edx
  40e0cb:	jecxz  0x40e0e7
  40e0cd:	push   eax
  40e0ce:	inc    eax
  40e0cf:	or     esi,ebx
  40e0d1:	inc    dl
  40e0d3:	mov    al,ds:0xa132ab16
  40e0d8:	sbb    eax,0x8b9c9289
  40e0dd:	inc    ebp
  40e0de:	pop    ds
  40e0df:	pop    eax
  40e0e0:	pop    ds
  40e0e1:	jne    0x40e0ae
  40e0e3:	test   eax,0xf270793
  40e0e8:	sbb    al,0xff
  40e0ea:	or     BYTE PTR [edi],cl
  40e0ec:	(bad)  
  40e0ed:	test   DWORD PTR [eax],0x82ff184b
  40e0f3:	rcr    BYTE PTR ds:0x93e0fb75,1
  40e0f9:	sti    
	...
  40e102:	add    BYTE PTR [eax],al
  40e104:	idiv   DWORD PTR [esi-0xc]
  40e107:	adc    eax,esp
  40e109:	xchg   ecx,eax
  40e10a:	jge    0x40e137
  40e10c:	fmul   DWORD PTR [ebx]
  40e10e:	cdq    
  40e10f:	sbb    esi,ebp
  40e111:	jmp    0x40e094
  40e113:	adc    cl,al
  40e115:	or     ecx,DWORD PTR [ebp+0x71eb9d1b]
  40e11b:	adc    ah,BYTE PTR ds:0x3a131280
  40e121:	mov    BYTE PTR [ebp+0x69915b9d],cl
  40e127:	jle    0x40e0b5
  40e129:	xor    eax,0x888d3cb2
  40e12e:	in     eax,0xb8
  40e130:	inc    ebp
  40e131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e132:	gs nop
  40e134:	aam    0x79
  40e136:	mov    bh,0xe4
  40e138:	or     DWORD PTR [ebx],0x880212d5
  40e13e:	dec    ebp
  40e13f:	mov    edx,0x12219140
  40e144:	loop   0x40e1b5
  40e146:	sub    bl,BYTE PTR [eax+0x1041a7c8]
  40e14c:	pop    eax
  40e14d:	xchg   ecx,eax
  40e14e:	sbb    DWORD PTR [eax-0x4686f40],ebx
  40e154:	xor    ah,bl
  40e156:	pop    es
  40e157:	adc    al,BYTE PTR [eax-0x6f]
  40e15a:	ja     0x40e14f
  40e15c:	cmp    DWORD PTR [ebx],ecx
  40e15e:	in     eax,dx
  40e15f:	sbb    eax,DWORD PTR [ebp+0x5411e190]
  40e165:	sub    esi,ecx
  40e167:	jp     0x40e169
	...
  40e171:	add    ch,cl
  40e173:	nop
  40e174:	push   edi
  40e175:	hlt    
  40e176:	sbb    DWORD PTR [ebx],ecx
  40e178:	in     eax,dx
  40e179:	sbb    eax,DWORD PTR [esi-0x6d]
  40e17c:	rcl    DWORD PTR [ecx],0x4c
  40e17f:	adc    edi,ecx
  40e181:	add    al,0x79
  40e183:	imul   esi,DWORD PTR [edx+0xb90c897],0x7398f33c
  40e18d:	lods   al,BYTE PTR ds:[esi]
  40e18e:	mov    esi,0xdb1cf290
  40e193:	xchg   ecx,eax
  40e194:	js     0x40e187
  40e196:	mov    ah,0x22
  40e198:	icebp  
  40e199:	xchg   esi,eax
  40e19a:	mov    esi,0x6af97890
  40e19f:	push   0x98c4fcf3
  40e1a4:	mov    WORD PTR [ecx-0x22],ds
  40e1a7:	nop
  40e1a8:	repnz cld 
  40e1aa:	mov    esp,0xc4e17891
  40e1af:	lea    eax,[edx-0x3239419a]
  40e1b5:	stc    
  40e1b6:	int3   
  40e1b7:	sub    al,BYTE PTR [edi+0xabe45]
  40e1bd:	ret    
  40e1be:	int    0x90
  40e1c0:	js     0x40e1b3
  40e1c2:	in     al,0x1d
  40e1c4:	pushf  
  40e1c5:	ficom  WORD PTR ds:[eax+0xadfe578]
  40e1cc:	add    al,0x41
  40e1ce:	mov    dh,0x91
  40e1d0:	repnz es loop 0x40e1fe
  40e1d4:	sbb    al,0x70
	...
  40e1de:	add    BYTE PTR [eax],al
  40e1e0:	rcl    DWORD PTR [eax+0xabfe578],1
  40e1e6:	add    al,0x1
  40e1e8:	push   es
  40e1e9:	xchg   edx,eax
  40e1ea:	repnz push es
  40e1ec:	ret    0x182a
  40e1ef:	jo     0x40e1c2
  40e1f1:	nop
  40e1f2:	js     0x40e1d9
  40e1f4:	fisttp WORD PTR [edx]
  40e1f6:	add    al,0x1
  40e1f8:	xchg   esi,eax
  40e1f9:	xchg   ecx,eax
  40e1fa:	repnz out 0xa3,al
  40e1fd:	sub    dl,BYTE PTR [eax+esi*2]
  40e200:	rol    dh,cl
  40e202:	int    0xfd
  40e204:	int3   
  40e205:	sub    al,BYTE PTR [edi-0x2044ac43]
  40e20b:	add    al,ah
  40e20d:	(bad)  
  40e20e:	icebp  
  40e20f:	jne    0x40e233
  40e211:	repnz or edi,edi
  40e214:	mov    bl,0x93
  40e216:	jmp    0xc3ff:0xf36f8619
  40e21d:	xchg   edi,eax
  40e21e:	icebp  
  40e21f:	jne    0x40e1ff
  40e221:	jae    0x40e1a9
  40e223:	(bad)  
  40e224:	cmp    DWORD PTR [edi-0x79],ebp
  40e227:	lock dec edi
  40e229:	mov    esp,0xcb6000b
  40e22e:	dec    ecx
  40e22f:	adc    al,0x25
  40e231:	mov    ebx,0x6aa374f2
  40e236:	cmp    al,BYTE PTR [ecx]
  40e238:	mov    dh,0x83
  40e23a:	retf   
  40e23b:	inc    ebp
  40e23c:	sub    al,BYTE PTR [ebx+0xea6000c]
  40e242:	dec    ecx
  40e243:	cld    
	...
  40e24c:	add    BYTE PTR [eax],al
  40e24e:	push   esi
  40e24f:	jo     0x40e2ca
  40e251:	adc    al,0x19
  40e253:	test   BYTE PTR [edx],0xff
  40e256:	inc    ebx
  40e257:	mov    ebp,edx
  40e259:	repnz mov eax,0xbe8bf36f
  40e25f:	add    esi,DWORD PTR [ecx-0x4]
  40e262:	jbe    0x40e25b
  40e264:	sub    eax,0x4bde2d68
  40e269:	add    BYTE PTR [ecx+0x56e8f6f5],bh
  40e26f:	add    cl,BYTE PTR [eax+eax*1]
  40e272:	sub    eax,0x5e0d7943
  40e277:	add    al,0x51
  40e279:	inc    ecx
  40e27a:	es jo  0x40e2f6
  40e27d:	cld    
  40e27e:	into   
  40e27f:	outs   dx,DWORD PTR ds:[esi]
  40e280:	mov    WORD PTR [eax],es
  40e282:	or     cl,BYTE PTR ss:[ecx-0x14]
  40e286:	std    
  40e287:	xchg   bl,cl
  40e289:	inc    ebp
  40e28a:	or     al,BYTE PTR [esp+ecx*1-0x72673100]
  40e291:	jge    0x40e28e
  40e293:	cwde   
  40e294:	call   0x39ef:0xe977717
  40e29b:	into   
  40e29c:	xchg   esp,eax
  40e29d:	or     esp,edi
  40e29f:	mov    bl,0x77
  40e2a1:	(bad)  
  40e2a2:	call   0xe13c7784
  40e2a7:	imul   ecx,DWORD PTR [eax+ebp*8],0x63
  40e2ab:	pop    es
  40e2ac:	add    edi,edi
  40e2ae:	out    0x21,al
  40e2b0:	or     BYTE PTR [eax],al
	...
  40e2ba:	add    BYTE PTR [eax],al
  40e2bc:	iret   
  40e2bd:	and    ebp,eax
  40e2bf:	adc    ecx,DWORD PTR [eax+eax*8+0xe]
  40e2c3:	jne    0x40e297
  40e2c5:	out    dx,eax
  40e2c6:	mov    DWORD PTR [eax],eax
  40e2c8:	iret   
  40e2c9:	cwde   
  40e2ca:	dec    ecx
  40e2cb:	inc    ebp
  40e2cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2cd:	cwde   
  40e2ce:	push   cs
  40e2cf:	add    bh,cl
  40e2d1:	pop    ebp
  40e2d2:	(bad)
  40e2d5:	cwde   
  40e2d6:	push   cs
  40e2d7:	add    BYTE PTR [eax-0x30ffe125],cl
  40e2dd:	cwde   
  40e2de:	push   cs
  40e2df:	lea    ecx,[edx]
  40e2e1:	dec    ecx
  40e2e2:	mov    eax,0xb855128c
  40e2e7:	mov    WORD PTR [edx],cs
  40e2e9:	push   ecx
  40e2ea:	mov    eax,0x1b4e2fe
  40e2ef:	jne    0x40e2c8
  40e2f1:	jo     0x40e31c
  40e2f3:	(bad)  
  40e2f4:	pop    eax
  40e2f5:	ins    DWORD PTR es:[edi],dx
  40e2f6:	(bad)  
  40e2f7:	jge    0x40e35c
  40e2f9:	cwde   
  40e2fa:	call   0xbb00:0x6fb4c32
  40e301:	mov    bl,0x8d
  40e303:	jge    0x40e348
  40e305:	cwde   
  40e306:	xchg   ebx,eax
  40e307:	add    eax,0x1f134c
  40e30c:	mov    ds:0x277501b7,eax
  40e311:	jg     0x40e2fd
  40e313:	cwde   
  40e314:	les    edx,FWORD PTR [edi-0x71ef8b0b]
  40e31a:	fstp   DWORD PTR [eax+0x578dfc]
	...
  40e328:	add    BYTE PTR [eax],al
  40e32a:	div    DWORD PTR [esi+0x54]
  40e32d:	push   cs
  40e32e:	clc    
  40e32f:	lea    esi,[edi]
  40e331:	adc    al,0xf0
  40e333:	adc    ebp,ecx
  40e335:	sbb    ebp,edx
  40e337:	out    dx,al
  40e338:	mov    eax,ds:0xad13e00e
  40e33d:	sbb    ebp,ebp
  40e33f:	icebp  
  40e340:	xchg   ecx,eax
  40e341:	push   cs
  40e342:	rcl    BYTE PTR [ebx],1
  40e344:	xchg   ecx,eax
  40e345:	sbb    esp,DWORD PTR [ebp-0x3ff17e0f]
  40e34b:	adc    esi,DWORD PTR [ebp+0x1b]
  40e34e:	popf   
  40e34f:	icebp  
  40e350:	jno    0x40e360
  40e352:	add    BYTE PTR [ecx+0x7a],bh
  40e355:	(bad)  
  40e356:	push   ebx
  40e357:	sbb    esp,DWORD PTR [edx+0xe]
  40e35a:	mov    al,ds:0xcf1fe801
  40e35f:	adc    esi,ebx
  40e361:	cdq    
  40e362:	nop
  40e363:	mov    cs,edi
  40e365:	push   DWORD PTR [eax+0x1a]
  40e368:	jne    0x40e378
  40e36a:	sbb    BYTE PTR [edx],0xe5
  40e36d:	push   cs
  40e36e:	add    bh,BYTE PTR [ebp+ebx*2-0x5d]
  40e372:	inc    eax
  40e373:	lea    edi,[ecx]
  40e375:	cdq    
  40e376:	push   0x68ffb78e
  40e37b:	ss jne 0x40e38c
  40e37e:	pop    eax
  40e37f:	lea    edx,[edi+0x75eb670f]
  40e385:	push   cs
  40e386:	dec    eax
  40e387:	ds out dx,al
  40e389:	adc    eax,0xd4802d0
	...
  40e396:	add    BYTE PTR [eax],al
  40e398:	cmp    BYTE PTR [ebp-0x3df8526f],cl
  40e39e:	or     ebx,ecx
  40e3a0:	int3   
  40e3a1:	xor    al,BYTE PTR [edi-0x183bb103]
  40e3a7:	aas    
  40e3a8:	retf   0x412
  40e3ab:	shl    DWORD PTR [esi-0x6],1
  40e3ae:	repnz (bad) 
  40e3b0:	test   BYTE PTR [edx-0x8],al
  40e3b3:	push   0x50
  40e3b5:	xchg   ecx,eax
  40e3b6:	sbb    edi,DWORD PTR [edx]
  40e3b8:	cmc    
  40e3b9:	aam    0xc
  40e3bb:	jmp    0xa093638c
  40e3c0:	lea    esi,[edi+0xc]
  40e3c3:	scas   al,BYTE PTR es:[edi]
  40e3c4:	cmp    BYTE PTR [ebp-0x73a7eb1c],al
  40e3ca:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3cc:	or     BYTE PTR [ebp+0x7fcce90c],dl
  40e3d2:	and    DWORD PTR [ebx+edx*8],0xb4fcf32f
  40e3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3da:	lock ins BYTE PTR es:[edi],dx
  40e3dc:	ret    0x848c
  40e3df:	sub    al,0xbf
  40e3e1:	add    BYTE PTR [ecx+0x71],dh
  40e3e4:	retf   
  40e3e5:	adc    eax,DWORD PTR [eax]
  40e3e7:	push   0x48
  40e3e9:	mov    BYTE PTR ds:0x7100cadb,cl
  40e3ef:	push   ebp
  40e3f0:	rcl    DWORD PTR ds:0x7fcc9106,1
  40e3f6:	or     al,0xe9
  40e3f8:	sub    dh,BYTE PTR [edi+0xf1cd]
	...
  40e406:	int3   
  40e407:	cli    
  40e408:	dec    eax
  40e409:	xor    DWORD PTR [ebx],esp
  40e40b:	lea    edi,[eax-0x1f]
  40e40e:	les    esi,FWORD PTR [ecx+0xca2680]
  40e414:	jno    0x40e437
  40e416:	retf   
  40e417:	adc    ecx,DWORD PTR [eax]
  40e419:	loop   0x40e3a7
  40e41b:	adc    eax,DWORD PTR [esi]
  40e41d:	push   ecx
  40e41e:	int3   
  40e41f:	jg     0x40e42d
  40e421:	add    BYTE PTR [esi],ah
  40e423:	fcmovb st,st(3)
  40e425:	ret    0x803e
  40e428:	(bad)  
  40e429:	jge    0x40e44d
  40e42b:	test   DWORD PTR [esi+0x1f],edi
  40e42e:	add    esp,0xfffffffa
  40e431:	push   eax
  40e432:	jl     0x40e3cf
  40e434:	icebp  
  40e435:	jne    0x40e455
  40e437:	push   0x7b218e22
  40e43c:	add    DWORD PTR [ebp+0x1e],0xfe75f1d0
  40e443:	addr16 xchg edx,eax
  40e445:	lea    esi,[ecx]
  40e447:	jnp    0x40e3ce
  40e449:	inc    ebp
  40e44a:	sbb    ah,BYTE PTR [edi+0x11]
  40e44d:	lea    ebp,[ebx-0x4400a385]
  40e453:	mov    ebp,edx
  40e455:	lea    esp,[ebx+0x7b]
  40e458:	repz mov ebx,edi
  40e45b:	push   edi
  40e45c:	add    DWORD PTR [ebp+0x5e],0x510464cf
  40e463:	repnz or ch,al
  40e466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e467:	or     eax,0xfff3
	...
  40e474:	xor    eax,edx
  40e476:	cli    
  40e477:	push   eax
  40e478:	xor    edx,esi
  40e47a:	or     ch,al
  40e47c:	aad    0x78
  40e47e:	repz jmp DWORD PTR ds:0xab01eefa
  40e485:	popf   
  40e486:	jg     0x40e4cd
  40e488:	push   ds
  40e489:	iret   
  40e48a:	icebp  
  40e48b:	jne    0x40e49f
  40e48d:	jl     0x40e508
  40e48f:	or     al,0xb1
  40e491:	icebp  
  40e492:	or     ch,al
  40e494:	push   eax
  40e495:	jp     0x40e48a
  40e497:	inc    DWORD PTR [ebx]
  40e499:	ret    0x50fa
  40e49c:	mov    cl,0xf1
  40e49e:	or     ch,al
  40e4a0:	add    DWORD PTR [ecx-0xd],edi
  40e4a3:	dec    edi
  40e4a5:	adc    eax,0xf3cff782
  40e4aa:	hlt    
  40e4ab:	mov    bh,0xcf
  40e4ad:	cwde   
  40e4ae:	push   cs
  40e4af:	add    BYTE PTR [ecx-0x30f7b2b1],dl
  40e4b5:	and    ecx,edx
  40e4b7:	idiv   DWORD PTR [edi-0x67]
  40e4ba:	cwde   
  40e4bb:	sti    
  40e4bc:	sbb    BYTE PTR [esp+esi*8],ch
  40e4bf:	(bad)  
  40e4c0:	call   0x6b2:0xa801690
  40e4c7:	add    DWORD PTR [edx-0x3a8af850],0x0
  40e4ce:	or     BYTE PTR [eax],al
  40e4d0:	iret   
  40e4d1:	cwde   
  40e4d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4d3:	enter  0xa10d,0xe
  40e4d7:	lea    eax,[eax]
	...
  40e4e1:	add    BYTE PTR [edx+0x62feb7d0],cl
  40e4e7:	nop
  40e4e8:	push   ss
  40e4e9:	push   cs
  40e4ea:	inc    edx
  40e4eb:	jmp    0x2:0xffbf8b06
  40e4f2:	iret   
  40e4f3:	cwde   
  40e4f4:	add    eax,0x44f0c775
  40e4f9:	mov    ?,WORD PTR [eax-0x5cbb3cf7]
  40e4ff:	mov    ecx,DWORD PTR [ebx]
  40e501:	jmp    0x4f7d9e
  40e506:	dec    esp
  40e507:	mov    ds:0x851d060a,eax
  40e50c:	jne    0x40e553
  40e50e:	xchg   eax,ecx
  40e510:	add    eax,0x2b40d775
  40e515:	mov    WORD PTR [eax+0x41],?
  40e518:	jne    0x40e55f
  40e51a:	ja     0x40e504
  40e51c:	add    eax,0xc240d775
  40e521:	stc    
  40e522:	pusha  
  40e523:	pop    ecx
  40e524:	jne    0x40e56b
  40e526:	push   edi
  40e527:	jg     0x40e4de
  40e529:	or     bl,dl
  40e52b:	ja     0x40e54a
  40e52d:	fiadd  DWORD PTR [esi-0x76]
  40e530:	sbb    DWORD PTR [ecx-0x76],edi
  40e533:	xchg   DWORD PTR [edx+ecx*1+0x371d77c2],esi
  40e53a:	xor    al,0x8a
  40e53c:	icebp  
  40e53d:	jl     0x40e4d1
  40e53f:	(bad)  
  40e540:	rcr    DWORD PTR [bx+si],0x2f
  40e544:	loop   0x40e4d6
	...
  40e54e:	add    BYTE PTR [eax],al
  40e550:	rcl    BYTE PTR [edi-0x75eff160],1
  40e556:	jnp    0x40e518
  40e558:	hlt    
  40e559:	sti    
  40e55a:	pop    ds
  40e55b:	or     al,0x9f
  40e55d:	mov    dl,BYTE PTR [edi-0x4]
  40e560:	lock ror ebp,cl
  40e563:	or     dh,al
  40e565:	mul    DWORD PTR [edi]
  40e567:	sbb    al,0x4c
  40e569:	or     al,0xb5
  40e56b:	add    ebx,DWORD PTR [ebx+0xe]
  40e56e:	data16 mov ah,ah
  40e571:	jle    0x40e584
  40e573:	cdq    
  40e574:	dec    ebp
  40e575:	or     al,0x9d
  40e577:	add    eax,DWORD PTR [ebx+0x21]
  40e57a:	data16 mov BYTE PTR [eax+0x30a51980],bh
  40e581:	cld    
  40e582:	daa    
  40e583:	lds    esi,FWORD PTR [eax-0x48ec0876]
  40e589:	aas    
  40e58a:	sti    
  40e58b:	add    ecx,edi
  40e58d:	je     0x40e534
  40e58f:	nop
  40e590:	mov    edx,0xfa8ee17
  40e595:	adc    BYTE PTR [edx-0x70],0x78
  40e599:	cwde   
  40e59a:	adc    al,0x8a
  40e59c:	or     BYTE PTR [ecx+0x7b0243ed],0xdd
  40e5a3:	xchg   BYTE PTR [edx],dl
  40e5a5:	aas    
  40e5a6:	in     eax,0xa
  40e5a8:	loop   0x40e539
  40e5aa:	or     eax,DWORD PTR [ecx+0x75]
  40e5ad:	or     ecx,DWORD PTR [ecx+ebp*8]
  40e5b0:	pop    ecx
  40e5b1:	leave  
  40e5b2:	ja     0x40e58b
	...
  40e5bc:	add    BYTE PTR [eax],al
  40e5be:	xor    al,0x89
  40e5c0:	repnz push cs
  40e5c2:	xchg   esi,eax
  40e5c3:	mov    BYTE PTR [eax-0x1b],bh
  40e5c6:	in     al,0x34
  40e5c8:	or     BYTE PTR [esi],0xc5
  40e5cb:	mov    BYTE PTR [eax-0x7],bh
  40e5ce:	(bad)  
  40e5cf:	adc    al,BYTE PTR [eax]
  40e5d1:	adc    DWORD PTR [edx-0x29090d07],esi
  40e5d7:	adc    ah,al
  40e5d9:	out    dx,al
  40e5da:	dec    eax
  40e5db:	jne    0x40e5c1
  40e5dd:	jle    0x40e574
  40e5df:	mov    dl,dh
  40e5e1:	ficomp WORD PTR [eax-0x5f]
  40e5e4:	repnz pop esp
  40e5e6:	pop    es
  40e5e7:	mov    eax,ds:0x88c65f7f
  40e5ec:	repnz cmp al,0xdb
  40e5ef:	xchg   edi,eax
  40e5f0:	jl     0x40e64a
  40e5f2:	(bad)  
  40e5f3:	mov    dl,dh
  40e5f5:	cmp    al,0xc7
  40e5f7:	xchg   edi,eax
  40e5f8:	fs pop eax
  40e5fa:	(bad)  
  40e5fb:	mov    dl,dh
  40e5fd:	sbb    al,0xb3
  40e5ff:	xchg   edi,eax
  40e600:	ins    BYTE PTR es:[edi],dx
  40e601:	js     0x40e5d9
  40e603:	mov    BYTE PTR [ecx+0x6a],al
  40e606:	dec    eax
  40e607:	nop
  40e608:	or     edx,DWORD PTR ds:0xf6fa75bb
  40e60e:	xor    DWORD PTR [ecx-0xb29810f],edx
  40e614:	dec    eax
  40e615:	jno    0x40e68c
  40e617:	mov    bh,0xcd
  40e619:	loope  0x40e5e7
  40e61b:	xor    al,BYTE PTR [edi-0x103cb5ab]
  40e621:	pop    esi
	...
  40e62a:	add    BYTE PTR [eax],al
  40e62c:	pop    eax
  40e62d:	je     0x40e613
  40e62f:	cmc    
  40e630:	adc    al,0x89
  40e632:	repnz loop 0x40e641
  40e635:	adc    esp,DWORD PTR [ebx]
  40e637:	add    bl,bh
  40e639:	enter  0x50f6,0xfe
  40e63d:	push   es
  40e63e:	test   bh,bh
  40e640:	cdq    
  40e641:	jbe    0x40e6bc
  40e643:	cld    
  40e644:	test   eax,0xe5e806f8
  40e649:	or     ebx,esi
  40e64b:	(bad)  
  40e64c:	cmp    eax,0xd90f783c
  40e651:	clc    
  40e652:	or     bh,bh
  40e654:	arpl   WORD PTR [eax+0x76cb87e4],ax
  40e65a:	repz or esi,esi
  40e65d:	clc    
  40e65e:	repnz (bad) 
  40e660:	mov    ds:0xae88e480,eax
  40e665:	jbe    0x40e65a
  40e667:	leave  
  40e668:	fs test dl,dh
  40e66b:	push   esp
  40e66c:	jge    0x40e6de
  40e66e:	(bad)  
  40e66f:	les    esp,FWORD PTR [edx+0x76]
  40e672:	repz push DWORD PTR [ecx]
  40e675:	or     DWORD PTR [esi+edi*8+0xc7709],esi
  40e67c:	idiv   BYTE PTR [ebx-0x79]
  40e67f:	inc    ebp
  40e680:	jmp    0x33fb:0xf374b28a
  40e687:	add    BYTE PTR [ebx-0x48ae1c78],dh
  40e68d:	or     DWORD PTR [edi+edi*8],0x0
	...
  40e699:	add    bl,ah
  40e69b:	xchg   edx,ebp
  40e69d:	sub    DWORD PTR [edx],ebp
  40e69f:	js     0x40e694
  40e6a1:	or     esp,DWORD PTR [esi-0xa]
  40e6a4:	add    DWORD PTR [eax+0x59],ebp
  40e6a7:	enter  0x4b,0x19
  40e6ab:	test   BYTE PTR [esi],0xe8
  40e6ae:	ror    DWORD PTR [edi],1
  40e6b0:	repz (bad) 
  40e6b2:	std    
  40e6b3:	lea    ebp,[edx-0xc]
  40e6b6:	cmp    edx,eax
  40e6b8:	repnz dec bh
  40e6bb:	mov    ds:0xd17e7fa,eax
  40e6c0:	add    al,0xff
  40e6c2:	inc    esi
  40e6c3:	adc    al,0x47
  40e6c5:	(bad)  
  40e6c6:	push   0xce3d9746
  40e6cb:	cwde   
  40e6cc:	push   cs
  40e6cd:	lea    edx,[edx+0x5b]
  40e6d0:	add    eax,0x16c950ff
  40e6d5:	rcr    BYTE PTR [edi+0x66],1
  40e6d8:	add    al,0x8d
  40e6da:	dec    edx
  40e6db:	pop    ebx
  40e6dc:	add    eax,0x3c938ff
  40e6e1:	mov    ch,0x77
  40e6e3:	jg     0x40e6e9
  40e6e5:	push   DWORD PTR [edi]
  40e6e7:	fwait
  40e6e8:	mov    bh,bh
  40e6ea:	and    BYTE PTR [eax],ah
  40e6ec:	jb     0x40e6aa
  40e6ee:	sbb    DWORD PTR [esi+0x14c0400a],edx
  40e6f4:	pop    ds
  40e6f5:	add    bh,cl
  40e6f7:	cwde   
  40e6f8:	jae    0x40e68f
  40e6fa:	or     eax,0xff0aaf
	...
  40e707:	add    BYTE PTR [eax],al
  40e709:	fwait
  40e70a:	(bad)  
  40e70b:	push   eax
  40e70d:	cwde   
  40e70e:	cmp    BYTE PTR [edx+ebx*2+0x5b],0xd4
  40e713:	dec    edi
  40e714:	ja     0x40e6d8
  40e716:	mov    edx,0x2ac0cf40
  40e71b:	jnp    0x40e6ec
  40e71d:	cwde   
  40e71e:	cmc    
  40e71f:	mov    edi,0xa90f9c42
  40e724:	iret   
  40e725:	cwde   
  40e726:	push   cs
  40e727:	lea    esp,[edx-0x26]
  40e72a:	or     edi,edi
  40e72c:	mov    al,0xb
  40e72e:	into   
  40e72f:	sub    edi,edi
  40e731:	jo     0x40e747
  40e733:	dec    edi
  40e734:	push   cs
  40e735:	cdq    
  40e736:	push   ss
  40e737:	ret    0x9914
  40e73a:	push   cs
  40e73b:	or     ecx,DWORD PTR [edi+0x7600d07f]
  40e741:	repz in al,0x3
  40e744:	iret   
  40e745:	xchg   bh,cl
  40e747:	div    DWORD PTR [eax-0x8]
  40e74a:	jge    0x40e753
  40e74c:	jo     0x40e7c8
  40e74e:	and    eax,0x9e17d991
  40e753:	mov    esp,0x913a800f
  40e758:	les    edx,FWORD PTR [edi-0x79af8cd7]
  40e75e:	sbb    eax,0x127fb6fa
  40e763:	xchg   ecx,eax
  40e764:	aam    0x97
  40e766:	pop    ebp
  40e767:	jae    0x40e7a1
  40e769:	xchg   BYTE PTR [edi+0x71],cl
	...
  40e774:	add    BYTE PTR [eax],al
  40e776:	or     eax,0x5a070985
  40e77b:	xor    ecx,eax
  40e77d:	mov    cl,0x90
  40e77f:	xchg   edi,eax
  40e780:	stc    
  40e781:	jb     0x40e79b
  40e783:	xchg   BYTE PTR [esi+eax*1+0x7356f9a],dl
  40e78a:	xor    BYTE PTR [edi-0x23],0x9
  40e78e:	add    DWORD PTR [esi-0xa0ae427],eax
  40e794:	rol    DWORD PTR [esi],0xe4
  40e797:	inc    ecx
  40e798:	js     0x40e75b
  40e79a:	mov    ah,0xf8
  40e79c:	addr16 dec edi
  40e79e:	loope  0x40e725
  40e7a0:	mov    ecx,0xa26f6206
  40e7a5:	push   eax
  40e7a6:	sbb    eax,DWORD PTR [ebp+0x2bb706a9]
  40e7ac:	adc    DWORD PTR [edi+ecx*8],eax
  40e7af:	js     0x40e756
  40e7b1:	(bad)  
  40e7b2:	lock pop ss
  40e7b4:	dec    esi
  40e7b5:	mov    ebx,0x908a800f
  40e7ba:	aam    0x97
  40e7bc:	add    DWORD PTR [ebx-0x60],esi
  40e7bf:	test   DWORD PTR [ebx],ecx
  40e7c1:	jbe    0x40e7c2
  40e7c3:	retf   
  40e7c4:	icebp  
  40e7c5:	outs   dx,BYTE PTR ds:[esi]
  40e7c6:	leave  
  40e7c7:	das    
  40e7c8:	in     al,0x9e
  40e7ca:	std    
  40e7cb:	test   dl,dh
  40e7cd:	mov    ecx,0xe178863c
  40e7d2:	aam    0xf
  40e7d4:	repnz dec esi
  40e7d6:	leave  
  40e7d7:	xchg   edi,eax
  40e7d8:	mov    eax,0x76
  40e7dd:	add    BYTE PTR [eax],al
  40e7df:	add    BYTE PTR [eax],al
  40e7e1:	add    BYTE PTR [eax],al
  40e7e3:	add    cl,dl
  40e7e5:	test   BYTE PTR [eax-0xd79f19c],al
  40e7eb:	ss sbb al,0x86
  40e7ee:	mov    eax,0xf284ca6d
  40e7f3:	adc    DWORD PTR [ebx],esi
  40e7f5:	or     cl,BYTE PTR [ecx+ebp*8]
  40e7f8:	dec    edi
  40e7f9:	rol    BYTE PTR [edx],0x6c
  40e7fc:	and    al,0x86
  40e7fe:	repnz push cs
  40e800:	leave  
  40e801:	retf   0x7af
  40e804:	rol    DWORD PTR [ebx+eiz*8-0xd7aaa2b],1
  40e80b:	test   BYTE PTR [eax-0x35110e39],0x97
  40e812:	mov    BYTE PTR [esi-0x2e],dh
  40e815:	test   ah,al
  40e817:	stos   DWORD PTR es:[edi],eax
  40e818:	pop    es
  40e819:	test   DWORD PTR [edi+0x62],edx
  40e81c:	xlat   BYTE PTR ds:[ebx]
  40e81d:	inc    bh
  40e81f:	cdq    
  40e820:	leave  
  40e821:	test   dl,dh
  40e823:	scas   al,BYTE PTR es:[edi]
  40e824:	push   0xcabef1c7
  40e829:	jg     0x40e837
  40e82b:	jmp    0xdd89e0fc
  40e830:	xlat   BYTE PTR ds:[ebx]
  40e831:	les    esi,FWORD PTR [edi-0x14]
  40e834:	dec    esp
  40e835:	inc    edi
  40e836:	or     al,0x14
  40e838:	rcl    BYTE PTR [edi+0x7fcce804],0x64
  40e83f:	jle    0x40e8bb
  40e841:	aas    
  40e842:	or     al,0x0
  40e844:	push   ecx
  40e845:	hlt    
  40e846:	push   es
  40e847:	call   0x40e84c
  40e84c:	add    BYTE PTR [eax],al
  40e84e:	add    BYTE PTR [eax],al
  40e850:	add    BYTE PTR [eax],al
  40e852:	push   ecx
  40e853:	adc    ebx,esi
  40e855:	jmp    FWORD PTR [edi]
  40e857:	add    eax,0x7b21feb4
  40e85c:	fs ds ja 0x40e7e0
  40e860:	or     al,0x8d
  40e862:	jmp    0x40e8a5
  40e864:	bnd jmp DWORD PTR [ecx]
  40e867:	int3   
  40e868:	jmp    0xfb8d:0xf37b1167
  40e86f:	inc    ecx
  40e870:	bnd jmp DWORD PTR [ecx-0x214a0e35]
  40e877:	jge    0x40e86c
  40e879:	dec    DWORD PTR [esi]
  40e87b:	sbb    DWORD PTR [esi+0x0],esi
  40e87e:	or     DWORD PTR ss:[ecx-0xc851f44],ecx
  40e885:	inc    eax
  40e886:	xor    DWORD PTR [edx+ecx*8],eax
  40e889:	add    BYTE PTR [esi],ah
  40e88b:	add    BYTE PTR [ecx-0xc820b6b],0xff
  40e892:	sbb    DWORD PTR [esi+0x1c],edi
  40e895:	add    BYTE PTR [esi],ah
  40e897:	add    BYTE PTR [ebx],0x84
  40e89a:	jno    0x40e917
  40e89c:	or     al,0x0
  40e89e:	adc    DWORD PTR ds:0x7b21fece,0xffffff81
  40e8a5:	inc    edx
  40e8a6:	ror    bl,cl
  40e8a8:	push   0xffffffea
  40e8aa:	rol    eax,1
  40e8ac:	repnz out 0x82,eax
  40e8af:	stc    
  40e8b0:	repnz (bad) 
  40e8b2:	fnstsw WORD PTR [edi]
  40e8b4:	jns    0x40e8b8
	...
  40e8be:	add    BYTE PTR [eax],al
  40e8c0:	or     eax,0x24957ff5
  40e8c5:	jp     0x40e8ba
  40e8c7:	inc    DWORD PTR [ebx-0x3f]
  40e8ca:	es push eax
  40e8cc:	fisub  WORD PTR [edi+0x43]
  40e8cf:	inc    ecx
  40e8d0:	iret   
  40e8d1:	cwde   
  40e8d2:	push   ss
  40e8d3:	push   edx
  40e8d4:	xor    eax,0x8f0b0e99
  40e8d9:	test   BYTE PTR [ebx+ebp*8],cl
  40e8dc:	add    al,0x14
  40e8de:	(bad)  
  40e8e0:	cdq    
  40e8e1:	or     cl,BYTE PTR [eax]
  40e8e3:	lea    ecx,ds:0x438575c5
  40e8e9:	sbb    ecx,DWORD PTR [eax]
  40e8eb:	push   edi
  40e8ed:	in     eax,dx
  40e8ee:	mov    dh,0x40
  40e8f0:	iret   
  40e8f1:	sub    DWORD PTR [edx+0x7cca670b],eax
  40e8f7:	jmp    FWORD PTR [eax+0x3a]
  40e8fa:	inc    edx
  40e8fb:	mov    ah,0x61
  40e8fd:	inc    edx
  40e8fe:	or     BYTE PTR [eax+0x67],dl
  40e901:	sub    bh,BYTE PTR [ebp-0x1]
  40e904:	push   eax
  40e905:	and    BYTE PTR [edx-0x50],dh
  40e908:	dec    ecx
  40e909:	pop    edx
  40e90a:	or     BYTE PTR [eax-0x49],dl
  40e90d:	add    eax,0x69cf40aa
  40e912:	inc    edx
  40e913:	mov    al,0x31
  40e915:	jb     0x40e91f
  40e917:	call   0x4fe6f2
  40e91c:	aam    0x58
  40e91e:	adc    DWORD PTR [edx],0xffffffa7
  40e921:	das    
  40e922:	stos   BYTE PTR es:[edi],al
  40e923:	inc    eax
	...
  40e92c:	add    BYTE PTR [eax],al
  40e92e:	iret   
  40e92f:	xchg   ecx,eax
  40e930:	inc    eax
  40e931:	mov    al,0x9
  40e933:	call   0x78e6:0x907aff0e
  40e93a:	cli    
  40e93b:	test   eax,0x2276e80e
  40e940:	ud0    ebx,DWORD PTR [edx+0x14]
  40e944:	retf   0xe0fd
  40e947:	rcl    DWORD PTR [edi-0x1],0x22
  40e94b:	or     eax,0xc0d0ff0e
  40e950:	in     al,0x78
  40e952:	iret   
  40e953:	jg     0x40e93a
  40e955:	mov    BYTE PTR [eax-0x47b6978e],al
  40e95b:	sbb    BYTE PTR [ecx-0x7d3c85fd],0x3
  40e962:	test   al,0x97
  40e964:	lods   al,BYTE PTR ds:[esi]
  40e965:	jge    0x40e936
  40e967:	jg     0x40e9db
  40e969:	mov    ecx,0x3798160
  40e96e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e96f:	cmp    BYTE PTR [ebx+0x3],dl
  40e972:	mov    BYTE PTR [eax+0x2ccf0c26],bh
  40e978:	jle    0x40e96a
  40e97a:	jns    0x40e988
  40e97c:	jmp    0x422e486c
  40e981:	add    edx,esp
  40e983:	mov    edi,0x2fff12b0
  40e988:	xor    bh,BYTE PTR [ecx-0x39]
  40e98b:	xchg   edi,eax
  40e98c:	lea    eax,[edx]
  40e98e:	push   eax
  40e98f:	or     BYTE PTR [ebx+ebp*1+0x0],0x0
	...
  40e99c:	pop    ecx
  40e99d:	sub    BYTE PTR [ecx],0xcd
  40e9a0:	push   cs
  40e9a1:	ja     0x40e988
  40e9a3:	pop    eax
  40e9a4:	inc    esp
  40e9a5:	xchg   ebx,eax
  40e9a6:	gs enter 0x1534,0xe5
  40e9ab:	ins    DWORD PTR es:[edi],dx
  40e9ac:	out    dx,al
  40e9ad:	sub    BYTE PTR [edi+0xb],0x37
  40e9b1:	cmp    BYTE PTR [esi+0x3],bh
  40e9b4:	sbb    al,bh
  40e9b6:	lahf   
  40e9b7:	jmp    DWORD PTR [esi-0x28871d9b]
  40e9bd:	xchg   edi,eax
  40e9be:	test   eax,0x5e820002
  40e9c3:	daa    
  40e9c4:	clc    
  40e9c5:	or     ebp,ebp
  40e9c7:	jmp    0x40ea04
  40e9c9:	add    cl,0x2
  40e9cc:	jne    0x40ea31
  40e9ce:	retf   0xd778
  40e9d1:	xchg   edi,eax
  40e9d2:	popf   
  40e9d3:	add    bl,al
  40e9d5:	or     DWORD PTR [ebx],0xb717cb43
  40e9db:	or     al,0x12
  40e9dd:	and    BYTE PTR [edx+ecx*2+0x2f],0x3f
  40e9e2:	or     al,0x9e
  40e9e4:	div    DWORD PTR [eax-0x6834d7bd]
  40e9ea:	cld    
  40e9eb:	jns    0x40e9ba
  40e9ed:	add    BYTE PTR [esi],0xa9
  40e9f0:	sbb    BYTE PTR [esp+ebx*2+0x11],ch
  40e9f4:	cmp    ah,BYTE PTR [ecx*2+0x7880fce9]
  40e9fb:	loope  0x40ea71
  40e9fd:	shr    bh,0x66
	...
  40ea08:	add    BYTE PTR [eax],al
  40ea0a:	int    0x97
  40ea0c:	int3   
  40ea0d:	ins    BYTE PTR es:[edi],dx
  40ea0e:	int    0x80
  40ea10:	gs jmp 0xa8919efa
  40ea16:	int3   
  40ea17:	pop    ss
  40ea18:	scas   eax,DWORD PTR es:[edi]
  40ea19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea1a:	or     eax,DWORD PTR [eax+0x397df4f3]
  40ea20:	dec    ebp
  40ea21:	jmp    0x2edca98a
  40ea26:	int    0x74
  40ea28:	int3   
  40ea29:	popf   
  40ea2a:	fsubr  DWORD PTR [edi]
  40ea2c:	sub    BYTE PTR fs:[edi-0x3246f3c2],0xa
  40ea34:	add    al,0x1
  40ea36:	inc    edx
  40ea37:	test   edx,esi
  40ea39:	push   es
  40ea3a:	xor    al,0xef
  40ea3c:	cmp    dh,0xce
  40ea3f:	adc    eax,0x17cc830c
  40ea44:	ror    DWORD PTR [ebx+edx*4-0x33169b81],1
  40ea4b:	jg     0x40e9d9
  40ea4d:	rcl    DWORD PTR [esi-0xf],1
  40ea50:	repnz (bad) 
  40ea52:	ret    0x77bf
  40ea55:	add    eax,0xe42f83
  40ea5a:	mov    al,0xe6
  40ea5c:	icebp  
  40ea5d:	(bad)  
  40ea5e:	fnstsw WORD PTR [esi+edi*2-0x6aec49ec]
  40ea65:	pop    ebp
  40ea66:	idiv   DWORD PTR [ebx+0x5c]
  40ea69:	jmp    ebx
  40ea6b:	jae    0x40ea51
  40ea6d:	pop    esp
	...
  40ea76:	add    BYTE PTR [eax],al
  40ea78:	pop    edx
  40ea79:	jle    0x40ea6e
  40ea7b:	call   0x32db7a
  40ea80:	dec    esi
  40ea81:	es cmp edi,0xfc797e49
  40ea88:	sbb    DWORD PTR [ecx],ecx
  40ea8a:	add    al,0xe8
  40ea8c:	ins    BYTE PTR es:[edi],dx
  40ea8d:	icebp  
  40ea8e:	icebp  
  40ea8f:	jmp    FWORD PTR [edi]
  40ea91:	mov    ecx,0xf343000e
  40ea96:	out    0x81,al
  40ea98:	mov    dl,0x8f
  40ea9a:	stc    
  40ea9b:	call   FWORD PTR [ecx]
  40ea9d:	icebp  
  40ea9e:	inc    edi
  40ea9f:	cld    
  40eaa0:	es jg  0x40eb1c
  40eaa3:	adc    BYTE PTR [ecx],cl
  40eaa5:	or     DWORD PTR [eax],eax
  40eaa7:	call   0x4cf030
  40eaac:	ins    DWORD PTR es:[edi],dx
  40eaad:	mov    esp,0x7bed8501
  40eab2:	or     al,0x0
  40eab4:	icebp  
  40eab5:	cmp    ah,dh
  40eab7:	add    BYTE PTR [esi],ah
  40eab9:	jl     0x40eac7
  40eabb:	(bad)  
  40eabc:	arpl   WORD PTR [eax+0x7c3607f1],cx
  40eac2:	data16 add BYTE PTR [esp+edi*2],bh
  40eac6:	data16 add BYTE PTR [esp+edi*2],bh
  40eaca:	add    DWORD PTR [ebp+0x12],0x285812c
  40ead1:	xchg   ecx,esi
  40ead3:	inc    esi
  40ead5:	jle    0x40eb50
  40ead7:	clc    
  40ead8:	sbb    DWORD PTR [ecx],ecx
  40eada:	lock call 0x40eae0
  40eae0:	add    BYTE PTR [eax],al
  40eae2:	add    BYTE PTR [eax],al
  40eae4:	add    BYTE PTR [eax],al
  40eae6:	iret   
  40eae7:	bound  esi,QWORD PTR [edi+0x0]
  40eaea:	iret   
  40eaeb:	popf   
  40eaec:	into   
  40eaed:	jae    0x40eab9
  40eaef:	scas   eax,DWORD PTR es:[edi]
  40eaf0:	pushf  
  40eaf1:	(bad)  
  40eaf2:	fcom   DWORD PTR [ebp+0x5787ab66]
  40eaf8:	or     bh,bh
  40eafa:	inc    edx
  40eafb:	pop    ecx
  40eafc:	out    0x84,al
  40eafe:	pop    edi
  40eaff:	es or  eax,0x83394450
  40eb05:	test   BYTE PTR [ebx-0xf2e2],bh
  40eb0b:	mov    edx,0x63f74e0
  40eb10:	or     eax,0xf4f95289
  40eb15:	(bad)  
  40eb16:	nop
  40eb17:	add    ecx,eax
  40eb19:	mov    ecx,DWORD PTR [eax-0x8ffa012]
  40eb1f:	mov    DWORD PTR [esi+0x41],ebp
  40eb22:	iret   
  40eb23:	fnstsw WORD PTR [edx+0xcd678ef]
  40eb29:	jmp    edx
  40eb2b:	pop    esp
  40eb2c:	out    0xcd,al
  40eb2e:	push   eax
  40eb2f:	(bad)  
  40eb30:	or     al,0x89
  40eb32:	push   edx
  40eb33:	int    0xf4
  40eb35:	(bad)  
  40eb36:	push   eax
  40eb37:	jmp    0xc:0xae40ebb2
  40eb3e:	mov    ebx,0xcf016679
  40eb43:	(bad)  
  40eb44:	retf   
  40eb45:	(bad)  
  40eb46:	jp     0x40eacd
  40eb48:	hlt    
  40eb49:	inc    BYTE PTR [eax]
	...
  40eb53:	add    BYTE PTR [eax],ch
  40eb55:	mov    ?,WORD PTR [edx+0x8]
  40eb58:	aaa    
  40eb59:	add    DWORD PTR [eax-0x4781e702],edi
  40eb5f:	jmp    0x40eb79
  40eb61:	jbe    0x40eb55
  40eb63:	out    0x56,eax
  40eb65:	fisttp QWORD PTR [edi+edi*8]
  40eb68:	add    BYTE PTR [eax+0x7f01f490],al
  40eb6e:	sar    edi,cl
  40eb70:	jnp    0x40eafd
  40eb72:	fidivr DWORD PTR [ecx-0x29]
  40eb75:	addr16 adc al,0xff
  40eb78:	loope  0x40ebf8
  40eb7a:	retf   
  40eb7b:	mov    ecx,0xffb376e8
  40eb80:	call   0xca405371
  40eb85:	jle    0x40ebb0
  40eb87:	cld    
  40eb88:	mov    bh,0xc3
  40eb8a:	stos   BYTE PTR es:[edi],al
  40eb8b:	(bad)  
  40eb8c:	mov    ecx,0xa700197e
  40eb91:	or     BYTE PTR [esp+eax*1],bl
  40eb94:	iret   
  40eb95:	dec    eax
  40eb96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb97:	adc    bh,cl
  40eb99:	aam    0x7e
  40eb9b:	lock dec edi
  40eb9d:	inc    ebx
  40eb9e:	pushf  
  40eb9f:	not    DWORD PTR [ecx-0x74b69682]
  40eba5:	iret   
  40eba6:	bound  edi,QWORD PTR [ecx-0x21]
  40eba9:	jle    0x40eb7c
  40ebab:	packuswb mm6,mm2
  40ebae:	jmp    0x40ebb3
  40ebb0:	iret   
  40ebb1:	mov    ah,BYTE PTR [ebx]
  40ebb3:	rsqrtps xmm3,XMMWORD PTR [ebp+0x3e4]
	...
  40ebc2:	iret   
  40ebc3:	inc    esi
  40ebc4:	mov    eax,ds:0xe47e58fb
  40ebc9:	add    ecx,DWORD PTR [eax-0x2e00d03c]
  40ebcf:	jg     0x40ebb4
  40ebd1:	imul   ecx,edi,0xcf69e3e9
  40ebd7:	jmp    0x73cc7cbf
  40ebdc:	mov    ah,0x90
  40ebde:	push   ebx
  40ebdf:	jae    0x40ebfc
  40ebe1:	jmp    DWORD PTR [ecx]
  40ebe3:	iret   
  40ebe4:	or     bh,BYTE PTR [ecx+0x17]
  40ebe7:	jle    0x40ec62
  40ebe9:	jmp    FWORD PTR [eax]
  40ebeb:	les    ecx,FWORD PTR [ecx+esi*2]
  40ebee:	int3   
  40ebef:	jg     0x40ebf6
  40ebf1:	sub    DWORD PTR [edi-0x33371c7c],eax
  40ebf7:	jg     0x40ec05
  40ebf9:	push   ecx
  40ebfa:	and    al,0xc6
  40ebfc:	dec    ebx
  40ebfd:	jmp    0xc15ddeeb
  40ec02:	cmp    cl,BYTE PTR ds:0xa7cc6f2
  40ec08:	(bad)  [edi+eax*2+0x72]
  40ec0c:	cli    
  40ec0d:	mov    dh,0xc9
  40ec0f:	int    0x5e
  40ec11:	ror    DWORD PTR [edx+0xe],0xf2
  40ec15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec16:	dec    ebx
  40ec17:	add    al,0xfd
  40ec19:	xchg   esi,eax
  40ec1a:	mov    cl,0x7e
  40ec1c:	in     eax,0xb5
  40ec1e:	push   ebp
  40ec1f:	jle    0x40ec13
  40ec21:	add    ecx,ebx
  40ec23:	jmp    0x417234
	...
  40ec30:	push   edi
  40ec31:	ins    DWORD PTR es:[edi],dx
  40ec32:	cli    
  40ec33:	jle    0x40ebc6
  40ec35:	jle    0x40ecaf
  40ec37:	in     eax,0x74
  40ec39:	pop    edi
  40ec3a:	sub    DWORD PTR [esi-0x7f],0x8
  40ec3e:	mov    BYTE PTR [ebp-0x7f],dl
  40ec41:	jle    0x40ec35
  40ec43:	pop    esi
  40ec44:	aaa    
  40ec45:	imul   edi,edx,0x86656956
  40ec4b:	je     0x40ecae
  40ec4d:	jle    0x40ec55
  40ec4f:	sub    eax,esp
  40ec51:	loopne 0x40ecaf
  40ec53:	jo     0x40ec9c
  40ec55:	gs cli 
  40ec57:	ss dec ecx
  40ec59:	jle    0x40ec13
  40ec5b:	inc    ecx
  40ec5c:	cmp    DWORD PTR [esi-0xe],edi
  40ec5f:	adc    DWORD PTR [ecx*1+0x3fc51ef2],eax
  40ec66:	jns    0x40ec09
  40ec68:	mov    ah,0x81
  40ec6a:	or     al,0xfe
  40ec6c:	arpl   bp,sp
  40ec6e:	test   eax,0xcc47000
  40ec73:	(bad)  
  40ec74:	fld    TBYTE PTR [eax-0x5]
  40ec77:	inc    DWORD PTR [ecx]
  40ec79:	jnp    0x40ecf4
  40ec7b:	or     dh,cl
  40ec7d:	sti    
  40ec7e:	mov    eax,0xeebf1ff
  40ec83:	add    BYTE PTR [ecx],al
  40ec85:	ds push 0xffffffb7
  40ec88:	mov    al,ds:0x3bff0cc0
  40ec8d:	ins    BYTE PTR es:[edi],dx
  40ec8e:	sti    
  40ec8f:	call   DWORD PTR [ecx]
  40ec91:	jnp    0x40ed0c
  40ec93:	or     BYTE PTR [eax],al
	...
  40ec9d:	add    dh,bh
  40ec9f:	loopne 0x40ec59
  40eca1:	inc    DWORD PTR [ecx-0x7efff315]
  40eca7:	cmp    eax,0xc113fb6a
  40ecac:	or     al,0xff
  40ecae:	sbb    ebp,DWORD PTR [ebx+edi*8-0x1]
  40ecb2:	inc    ecx
  40ecb3:	jp     0x40ed2e
  40ecb5:	or     BYTE PTR [esi-0x38],cl
  40ecb8:	mov    eax,0x5c6b51ff
  40ecbd:	mov    edx,DWORD PTR [ecx]
  40ecbf:	jnp    0x40ecb4
  40ecc1:	mov    ch,0x52
  40ecc3:	jb     0x40ecb8
  40ecc5:	dec    DWORD PTR [esi-0x3e]
  40ecc8:	test   edi,edi
  40ecca:	icebp  
  40eccb:	jp     0x40ec86
  40eccd:	lock sbb DWORD PTR [ebx-0xd],edi
  40ecd1:	dec    DWORD PTR [ebx+0x6e75f18c]
  40ecd7:	push   0x7b11fed1
  40ecdc:	repz mov ch,0x96
  40ecdf:	jb     0x40ecd4
  40ece1:	dec    DWORD PTR [esi-0xe007a5a]
  40ece7:	jp     0x40ed32
  40ece9:	clc    
  40ecea:	fbstp  TBYTE PTR [eax-0x10]
  40eced:	call   ecx
  40ecef:	jp     0x40ed6a
  40ecf1:	cld    
  40ecf2:	iret   
  40ecf3:	jle    0x40ed3c
  40ecf5:	ja     0x40ecc6
  40ecf7:	mov    cx,0x66cb
  40ecfc:	pop    ebx
  40ecfd:	mov    esp,DWORD PTR [ebx]
  40ecff:	jmp    0x41e8c8
	...
  40ed0c:	jne    0x40ed74
  40ed0e:	and    al,BYTE PTR fs:[eax]
  40ed11:	repz add eax,0xf0eebae8
  40ed17:	inc    BYTE PTR [esi-0x5d]
  40ed1a:	or     al,0x68
  40ed1c:	iret   
  40ed1d:	data16 loope 0x40ecdd
  40ed20:	ja     0x40ed73
  40ed22:	push   ebx
  40ed23:	inc    ecx
  40ed24:	iret   
  40ed25:	into   
  40ed26:	add    ebx,DWORD PTR [esi-0x72]
  40ed29:	data16 icebp 
  40ed2b:	je     0x40ed04
  40ed2d:	inc    eax
  40ed2e:	es mov ah,0xc0
  40ed31:	sub    ah,BYTE PTR [esi+0x13]
  40ed34:	sbb    DWORD PTR [eax+0x29faff08],ebp
  40ed3a:	inc    esi
  40ed3b:	inc    ecx
  40ed3c:	iret   
  40ed3d:	adc    DWORD PTR [ebx+0x8],edi
  40ed40:	mov    bh,0xf9
  40ed42:	repnz (bad) 
  40ed44:	cwde   
  40ed45:	xchg   ecx,eax
  40ed46:	sbb    ebx,DWORD PTR [esi+0xe]
  40ed49:	imul   esp,DWORD PTR [esi+0x2],0xfe8e68cf
  40ed50:	cli    
  40ed51:	pusha  
  40ed52:	out    0x7d,al
  40ed54:	jp     0x40ed38
  40ed56:	lock addr16 test al,0x3a
  40ed5a:	dec    edi
  40ed5b:	add    bh,dh
  40ed5d:	pushw  cs
  40ed5f:	add    BYTE PTR [edi-0x36],cl
  40ed62:	jp     0x40ed6c
  40ed64:	addr16 push ds
  40ed66:	lock (bad) 
  40ed68:	push   eax
  40ed69:	push   ecx
  40ed6a:	imul   ebx,DWORD PTR [esi-0x72],0x26668
	...
  40ed79:	add    bh,cl
  40ed7b:	push   0x7fc2fe8e
  40ed80:	sti    
  40ed81:	jmp    0x40ed0a
  40ed83:	jns    0x40ed98
  40ed85:	cld    
  40ed86:	sub    ebp,esi
  40ed88:	pop    ss
  40ed89:	cld    
  40ed8a:	fwait
  40ed8b:	xchg   DWORD PTR [ebx],ecx
  40ed8d:	push   ss
  40ed8e:	inc    edi
  40ed8f:	jnp    0x40ed9c
  40ed91:	retf   0x840e
  40ed94:	jecxz  0x40edec
  40ed96:	push   esp
  40ed97:	ins    BYTE PTR es:[edi],dx
  40ed98:	sti    
  40ed99:	jne    0x40ed6e
  40ed9b:	addr16 add al,0x8d
  40ed9e:	stc    
  40ed9f:	jp     0x40eda0
  40eda1:	ret    
  40eda2:	jl     0x40ed5c
  40eda4:	pop    ebx
  40eda5:	in     al,0x8a
  40eda7:	shl    bl,0x53
  40edaa:	imul   ebx
  40edac:	push   ecx
  40edad:	sti    
  40edae:	fxch   st(7)
  40edb0:	adc    ebp,DWORD PTR [edi+ecx*8+0x7f]
  40edb4:	ret    0x30ba
  40edb7:	aas    
  40edb8:	sbb    al,BYTE PTR [ebp-0x31]
  40edbb:	iret   
  40edbc:	mov    ds:0x3267c771,al
  40edc1:	mov    bh,0xb1
  40edc3:	jp     0x40ee11
  40edc5:	ins    BYTE PTR es:[edi],dx
  40edc6:	into   
  40edc7:	jg     0x40ed53
  40edc9:	mov    edx,0x45224e28
  40edce:	iret   
  40edcf:	iret   
  40edd0:	mov    dh,BYTE PTR [ecx-0x39]
  40edd3:	addr16 es mov bh,0x89
  40edd7:	jp     0x40ed65
  40edd9:	dec    edi
  40edda:	push   ebp
  40eddb:	jp     0x40ee40
  40eddd:	int    0x0
	...
  40ede7:	add    BYTE PTR [esi+0x4450e387],cl
  40eded:	imul   esp,DWORD PTR [edi-0x40],0x64
  40edf1:	in     eax,0xe3
  40edf3:	ins    DWORD PTR es:[edi],dx
  40edf4:	lods   al,BYTE PTR ds:[esi]
  40edf5:	jp     0x40edd0
  40edf7:	or     esp,DWORD PTR [edi-0x14]
  40edfa:	(bad)  
  40edfb:	sti    
  40edfc:	push   ecx
  40edfd:	or     BYTE PTR [ecx+0xc95b6f7],ch
  40ee03:	ss mov esi,0x3454e487
  40ee09:	jns    0x40edfd
  40ee0b:	xchg   ebx,eax
  40ee0c:	jmp    0x3532668b
  40ee11:	add    eax,0xe82416f2
  40ee16:	adc    BYTE PTR [esi],cl
  40ee18:	sahf   
  40ee19:	xchg   esp,esp
  40ee1b:	push   0xfef27914
  40ee20:	jg     0x40ee9d
  40ee22:	bnd jl 0x40edf9
  40ee25:	mov    ah,BYTE PTR [bp-0xc]
  40ee29:	js     0x40edef
  40ee2b:	stos   DWORD PTR es:[edi],eax
  40ee2c:	lock jns 0x40ee88
  40ee2f:	jb     0x40ee21
  40ee31:	int3   
  40ee32:	leave  
  40ee33:	in     al,dx
  40ee34:	inc    edx
  40ee35:	fimul  DWORD PTR [ebx-0x17]
  40ee38:	int3   
  40ee39:	jg     0x40ee47
  40ee3b:	jmp    0x353344e1
  40ee40:	(bad)  [edi-0x32]
  40ee43:	cmp    eax,0x14857fcb
  40ee48:	retf   
  40ee49:	cld    
  40ee4a:	hlt    
  40ee4b:	jmp    0x40ee4d
	...
  40ee55:	add    BYTE PTR [esi],bh
  40ee57:	(bad)  
  40ee58:	or     eax,0xf6751b9
  40ee5d:	cmovp  esi,DWORD PTR [edi-0x7ce1d2b0]
  40ee64:	push   0xffffffae
  40ee66:	retf   0xcdb
  40ee69:	jle    0x40ee6a
  40ee6b:	mov    esp,esp
  40ee6d:	repz (bad) 
  40ee6f:	jg     0x40ee7d
  40ee71:	add    esp,esi
  40ee73:	fmul   DWORD PTR [ebx-0x17]
  40ee76:	in     al,0x68
  40ee78:	push   ebx
  40ee79:	test   al,0xcc
  40ee7b:	addr16 aaa 
  40ee7d:	jge    0x40eee4
  40ee7f:	jp     0x40ee87
  40ee81:	sub    eax,ebp
  40ee83:	loop   0x40ee76
  40ee85:	add    BYTE PTR [ebx],dl
  40ee87:	test   ecx,esi
  40ee89:	adc    eax,0x4bd689
  40ee8e:	mov    ch,0x38
  40ee90:	push   cs
  40ee91:	or     esp,esi
  40ee93:	out    dx,eax
  40ee94:	push   edi
  40ee95:	push   DWORD PTR [ebx]
  40ee97:	push   es
  40ee98:	push   ebx
  40ee99:	inc    ecx
  40ee9a:	and    dl,BYTE PTR ss:[eax+eiz*2+0x3d8d7d77]
  40eea2:	pushf  
  40eea3:	fmul   QWORD PTR [ebx+0x0]
  40eea6:	es lock add al,0xff
  40eeaa:	and    eax,DWORD PTR [edx]
  40eeac:	push   ebx
  40eead:	inc    ecx
  40eeae:	imul   BYTE PTR [ecx+0x35]
  40eeb1:	push   0xffffffe6
  40eeb3:	jmp    0x4152:0x19d3ff0b
	...
  40eec2:	add    BYTE PTR [eax],al
  40eec4:	div    BYTE PTR [edi+0x19]
  40eec7:	xchg   ebx,eax
  40eec8:	cdq    
  40eec9:	mov    esp,0x8832830c
  40eece:	add    eax,0xf19c92c0
  40eed3:	xor    eax,0x4be42c
  40eed8:	jns    0x40ee62
  40eeda:	xchg   ebp,eax
  40eedb:	pop    edi
  40eedc:	out    0x83,eax
  40eede:	(bad)  
  40eedf:	les    esp,FWORD PTR [edx-0x167ce689]
  40eee5:	mov    esp,0x1ab3c70c
  40eeea:	push   edx
  40eeeb:	inc    ecx
  40eeec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeed:	jl     0x40eefb
  40eeef:	add    BYTE PTR [esi-0x2bcf295],ah
  40eef5:	inc    edx
  40eef6:	push   edi
  40eef7:	leave  
  40eef8:	xor    al,0x8b
  40eefa:	or     al,0x83
  40eefc:	sub    ebx,DWORD PTR [edx]
  40eefe:	push   edx
  40eeff:	inc    ecx
  40ef00:	data16 jl 0x40ef7b
  40ef03:	pop    ds
  40ef04:	or     DWORD PTR [ecx+0x27cf6096],ebp
  40ef0a:	push   cs
  40ef0b:	inc    edx
  40ef0d:	in     eax,dx
  40ef0e:	push   ebx
  40ef0f:	inc    ecx
  40ef10:	iret   
  40ef11:	in     eax,0xcc
  40ef13:	add    ecx,DWORD PTR [eax+0x53]
  40ef16:	mov    DWORD PTR [esi-0x72],ebx
  40ef19:	data16 int 0x4
  40ef1c:	push   ebp
  40ef1d:	inc    esi
  40ef1e:	dec    edi
  40ef1f:	add    bh,cl
  40ef21:	pushw  cs
  40ef23:	add    BYTE PTR [ebx+esi*1],cl
  40ef26:	sub    ebx,0x0
  40ef2c:	add    BYTE PTR [eax],al
  40ef2e:	add    BYTE PTR [eax],al
  40ef30:	add    BYTE PTR [eax],al
  40ef32:	dec    esp
  40ef33:	stos   BYTE PTR es:[edi],al
  40ef34:	clc    
  40ef35:	push   edx
  40ef36:	inc    esp
  40ef37:	and    eax,DWORD PTR [esi]
  40ef39:	or     ecx,DWORD PTR [edi]
  40ef3b:	cli    
  40ef3c:	add    BYTE PTR [ebx+0x740e6a8a],al
  40ef42:	retf   0x30e6
  40ef45:	add    BYTE PTR [edx-0x6b3fde9f],al
  40ef4b:	das    
  40ef4c:	enter  0xcf07,0xe6
  40ef50:	xor    eax,0x89765b7e
  40ef55:	cmp    al,0x35
  40ef57:	(bad)  
  40ef58:	dec    ebp
  40ef59:	add    bh,cl
  40ef5b:	mov    ebx,0xa28f2b0b
  40ef60:	(bad)
  40ef63:	push   0xac39378e
  40ef68:	mov    ebx,DWORD PTR ss:[edx]
  40ef6b:	ins    DWORD PTR es:[edi],dx
  40ef6c:	inc    eax
  40ef6d:	sub    DWORD PTR [ebp+0x1ad2016a],0x67
  40ef74:	mov    DWORD PTR [ebx+ecx*8+0x67],edi
  40ef78:	arpl   WORD PTR [esp+eiz*8],ax
  40ef7b:	sub    cl,ah
  40ef7d:	and    ecx,DWORD PTR [eax+0xa8b04a4]
  40ef83:	pop    ebp
  40ef84:	repz dec esp
  40ef87:	push   0x806fc10e
  40ef8c:	in     eax,0x53
  40ef8e:	ja     0x40efe8
  40ef90:	jl     0x40ef8a
  40ef92:	popa   
  40ef93:	shr    BYTE PTR [esi+0x4e],1
	...
  40ef9e:	add    BYTE PTR [eax],al
  40efa0:	mov    ecx,0x83dbf8b3
  40efa6:	xchg   ebp,eax
  40efa7:	jmp    0x40efe7
  40efa9:	or     al,0x33
  40efab:	clc    
  40efac:	cwde   
  40efad:	fisubr DWORD PTR [eax*8-0x22f18030]
  40efb4:	xor    ebp,ebp
  40efb6:	idiv   eax
  40efb8:	mov    ds:0xb5039d87,eax
  40efbd:	jg     0x40efd9
  40efbf:	push   cs
  40efc0:	push   eax
  40efc1:	xlat   BYTE PTR ds:[ebx]
  40efc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efc3:	add    ecx,DWORD PTR [esp+edi*1-0x2c]
  40efc7:	or     al,0xf
  40efc9:	in     al,dx
  40efca:	mov    BYTE PTR [edx+0x78e738b],cl
  40efd0:	dec    edx
  40efd1:	mov    ebp,0x32e752f3
  40efd6:	jl     0x40efcf
  40efd8:	jmp    0x8bc9d3c6
  40efdd:	outs   dx,DWORD PTR ds:[esi]
  40efde:	xor    al,0xf7
  40efe0:	arpl   WORD PTR [ebx-0x3d],si
  40efe3:	adc    DWORD PTR [eax],edi
  40efe5:	xlat   BYTE PTR ds:[ebx]
  40efe6:	and    al,0x4
  40efe8:	dec    esp
  40efe9:	cmp    esp,eax
  40efeb:	or     cl,BYTE PTR [edi+0x1388f6ec]
  40eff1:	jo     0x40f05a
  40eff3:	jl     0x40efc0
  40eff5:	jg     0x40f006
  40eff7:	sbb    edx,DWORD PTR [edi+edi*4-0x5]
  40effb:	inc    ebx
  40effc:	jmp    DWORD PTR [edi+0x17]
  40efff:	mov    WORD PTR [ecx+0xdc6f76],ds
	...
  40f00d:	add    BYTE PTR [ebx-0x44],al
  40f010:	jae    0x40f009
  40f012:	clc    
  40f013:	xchg   DWORD PTR [esi],edx
  40f015:	div    eax
  40f017:	jnp    0x40f025
  40f019:	sbb    DWORD PTR [edx-0x2],0x7fe56ef1
  40f020:	jg     0x40efce
  40f022:	pop    esp
  40f023:	(bad)  
  40f024:	icebp  
  40f025:	hlt    
  40f026:	push   ebp
  40f027:	aad    0x4b
  40f029:	jmp    0xc346327b
  40f02e:	retf   
  40f02f:	jbe    0x40f0a9
  40f031:	inc    ebp
  40f032:	inc    eax
  40f033:	mov    eax,DWORD PTR [ebp-0x72807462]
  40f039:	sub    eax,0x92ce0acb
  40f03e:	add    eax,DWORD PTR [eax+0x5]
  40f041:	jmp    0x1f21fac5
  40f046:	sahf   
  40f047:	xor    ecx,0xffffff9c
  40f04a:	les    esi,FWORD PTR [esi+0x18]
  40f04d:	jnp    0x40effa
  40f04f:	ror    BYTE PTR [edx+ebp*2],0xf
  40f053:	jle    0x40f0b1
  40f055:	(bad)  
  40f056:	jg     0x40efdb
  40f058:	icebp  
  40f059:	jl     0x40f01f
  40f05b:	jbe    0x40f075
  40f05d:	pop    edi
  40f05e:	imul   eax,eax,0xc
  40f061:	push   0x28
  40f063:	jle    0x40efea
  40f065:	xor    al,0xbb
  40f067:	or     BYTE PTR [edi],cl
  40f069:	xor    DWORD PTR [edx],ecx
  40f06b:	inc    eax
  40f06c:	add    ecx,ebp
  40f06e:	jg     0x40f07a
  40f070:	loope  0x40f0dc
	...
  40f07a:	add    BYTE PTR [eax],al
  40f07c:	mov    BYTE PTR [ebp-0xe],bl
  40f07f:	xor    al,0xd7
  40f081:	addr16 (bad) 
  40f083:	shl    DWORD PTR gs:[esi+0x6],0xa9
  40f088:	aas    
  40f089:	jl     0x40f04e
  40f08b:	stos   DWORD PTR es:[edi],eax
  40f08c:	mov    esp,0xd714f17f
  40f091:	addr16 mov al,0x47
  40f094:	mov    eax,ds:0x20a90676
  40f099:	jl     0x40f05e
  40f09b:	add    BYTE PTR [ecx+edx*4],dh
  40f09e:	or     al,0xff
  40f0a0:	jnp    0x40f027
  40f0a2:	icebp  
  40f0a3:	jne    0x40f03b
  40f0a5:	imul   ecx,ecx,0x76de1fd
  40f0ab:	ror    BYTE PTR [ebx+0x66c2c575],0x81
  40f0b2:	fs jle 0x40f03b
  40f0b5:	mov    esp,0xe173680c
  40f0ba:	dec    ebx
  40f0bb:	add    BYTE PTR [esi+0x1ff9eb0],bl
  40f0c1:	mov    cl,ah
  40f0c3:	jne    0x40f0f6
  40f0c5:	jmp    0x81a8513c
  40f0ca:	fs lahf 
  40f0cc:	adc    DWORD PTR [esp+ecx*1-0xcf0dc18],edi
  40f0d3:	jmp    FWORD PTR ds:0xeb840341
  40f0d9:	jnp    0x40f0e7
  40f0db:	add    BYTE PTR [ebx+0x50f0bf],al
	...
  40f0e9:	add    BYTE PTR [ecx],al
  40f0eb:	in     eax,0x0
  40f0ed:	call   FWORD PTR [ebx]
  40f0ef:	jmp    0x40f15d
  40f0f1:	inc    ecx
  40f0f2:	out    0x1,al
  40f0f4:	into   
  40f0f5:	or     ch,bl
  40f0f7:	inc    eax
  40f0f8:	add    eax,DWORD PTR [ebp+0xc8153]
  40f0fe:	mov    WORD PTR [ebx+0x7f],?
  40f101:	inc    ebp
  40f102:	dec    bl
  40f104:	call   DWORD PTR [esi]
  40f107:	sub    DWORD PTR [ebx+0x41],0xffffffb6
  40f10b:	imul   edi,DWORD PTR [ecx-0x4],0xffffff81
  40f10f:	test   BYTE PTR [edx-0x728418a0],cl
  40f115:	les    ebp,FWORD PTR [edx+0x2b0fcc87]
  40f11b:	cld    
  40f11c:	or     al,0x0
  40f11e:	iret   
  40f11f:	data16 stc 
  40f121:	je     0x40f0ba
  40f123:	add    eax,0xa7ef8a02
  40f128:	or     BYTE PTR [ebx-0x872a575],al
  40f12e:	repz jb 0x40f124
  40f131:	call   0x4f591b
  40f136:	pop    edx
  40f137:	and    esp,edx
  40f139:	dec    edi
  40f13a:	cmc    
  40f13b:	data16 stc 
  40f13d:	je     0x40f196
  40f13f:	mov    esi,0xc550ff1c
  40f144:	add    eax,eax
  40f146:	fsub   st,st(2)
  40f148:	inc    edi
  40f149:	add    edi,ecx
  40f14b:	lea    di,[eax+eax*1+0x0]
	...
  40f158:	inc    ebx
  40f159:	or     WORD PTR [edx+ecx*4+0x4f000e67],ax
  40f161:	pop    esi
  40f162:	push   cs
  40f163:	cmovnp edx,DWORD PTR [edx+0xf]
  40f167:	add    bh,cl
  40f169:	test   DWORD PTR ss:[ebx+ebx*1+0x28],edx
  40f16e:	pop    esp
  40f16f:	call   0xff38d72f
  40f174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f175:	out    dx,eax
  40f176:	xor    eax,ebp
  40f178:	clc    
  40f179:	repnz loope 0x40f17a
  40f17c:	jp     0x40f1fc
  40f17e:	pop    esi
  40f17f:	call   0xff39d700
  40f184:	or     BYTE PTR [ebx+0x65d8fff8],bl
  40f18a:	push   cs
  40f18b:	(bad)  
  40f18c:	mov    dh,BYTE PTR [edx]
  40f18e:	push   cs
  40f18f:	add    bh,cl
  40f191:	push   0xc9593c8d
  40f196:	dec    ebp
  40f197:	add    bh,cl
  40f199:	mov    bl,0x5e
  40f19b:	push   0x4dc843
  40f1a0:	mov    bh,0x80
  40f1a2:	ins    DWORD PTR es:[edi],dx
  40f1a3:	jb     0x40f174
  40f1a5:	jg     0x40f1da
  40f1a7:	ins    BYTE PTR es:[edi],dx
  40f1a8:	dec    ebx
  40f1a9:	loope  0x40f1cf
  40f1ab:	add    al,0x90
  40f1ad:	in     eax,dx
  40f1ae:	mov    ebp,ebx
  40f1b0:	out    dx,al
  40f1b1:	out    dx,al
  40f1b2:	jecxz  0x40f1b7
  40f1b4:	aam    0x3f
  40f1b6:	clc    
  40f1b7:	sbb    esp,edi
  40f1b9:	push   cs
  40f1ba:	add    eax,0x43
  40f1bf:	add    BYTE PTR [eax],al
  40f1c1:	add    BYTE PTR [eax],al
  40f1c3:	add    BYTE PTR [eax],al
  40f1c5:	add    bh,cl
  40f1c7:	addr16 inc edx
  40f1c9:	jb     0x40f19a
  40f1cb:	jg     0x40f180
  40f1cd:	imul   edi,DWORD PTR [ecx+eiz*8],0xffffffa4
  40f1d1:	add    ebx,DWORD PTR [eax-0x13]
  40f1d4:	dec    ebx
  40f1d5:	jmp    0x40f1e1
  40f1d7:	out    dx,eax
  40f1d8:	jecxz  0x40f1dd
  40f1da:	aam    0x3f
  40f1dc:	mov    al,0x4b
  40f1de:	mov    bh,0x16
  40f1e0:	lds    eax,FWORD PTR [edx-0x31]
  40f1e3:	addr16 data16 jb 0x40f1b6
  40f1e7:	jg     0x40f17c
  40f1e9:	imul   eax,DWORD PTR [ecx+eiz*8-0x5c],0x3
  40f1ee:	and    ch,ch
  40f1f0:	sbb    ebp,ebx
  40f1f2:	out    0xee,al
  40f1f4:	jecxz  0x40f1f9
  40f1f6:	and    al,0xa2
  40f1f8:	ss popaw 
  40f1fb:	loopne 0x40f1a1
  40f1fd:	add    ecx,esi
  40f1ff:	in     al,dx
  40f200:	in     eax,dx
  40f201:	imul   esi,DWORD PTR [ebx],0xffffffe1
  40f204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f205:	add    esp,edi
  40f207:	shl    BYTE PTR [ebx+eax*1-0x31],cl
  40f20b:	iret   
  40f20c:	pop    ebx
  40f20d:	test   al,0x6f
  40f20f:	shl    bl,0xf2
  40f212:	arpl   WORD PTR [edi-0x34],sp
  40f215:	or     ebx,DWORD PTR [edi+edi*2-0x1d]
  40f219:	(bad)  
  40f21b:	dec    BYTE PTR [eax]
  40f21d:	call   0x7e42:0x5e3c120
  40f224:	or     al,0x2
  40f226:	mov    eax,DWORD PTR [ebp+0x34cc]
	...
  40f234:	sub    eax,0xfb9d4805
  40f239:	in     eax,0xb
  40f23b:	sahf   
  40f23c:	push   ss
  40f23d:	js     0x40f224
  40f23f:	fcomp  QWORD PTR [esi+0x68ef271]
  40f245:	ins    BYTE PTR es:[edi],dx
  40f246:	pop    ebp
  40f247:	xchg   ecx,eax
  40f248:	lods   al,BYTE PTR ds:[esi]
  40f249:	je     0x40f23d
  40f24b:	jle    0x40f247
  40f24d:	mov    ebx,0x6c0664fc
  40f252:	pop    ebp
  40f253:	add    edx,ecx
  40f255:	jb     0x40f2cf
  40f257:	popa   
  40f258:	adc    DWORD PTR [ebp+0x715c5ef2],0x78
  40f25f:	pop    ebp
  40f260:	sti    
  40f261:	sbb    BYTE PTR [si+0x3c],cl
  40f265:	jno    0x40f1eb
  40f267:	lods   al,BYTE PTR ds:[esi]
  40f268:	and    ch,bh
  40f26a:	outs   dx,DWORD PTR ds:[esi]
  40f26b:	push   ecx
  40f26c:	shr    ebx,cl
  40f26e:	cmp    BYTE PTR [edx-0x42],ch
  40f271:	arpl   WORD PTR ds:0xce7eeb5,cx
  40f277:	jmp    0x953326a9
  40f27c:	adc    al,0x5a
  40f27e:	ret    
  40f27f:	imul   ebx,DWORD PTR [ecx+esi*2],0xfffffff2
  40f283:	xchg   esp,eax
  40f284:	and    al,0x71
  40f286:	js     0x40f279
  40f288:	and    al,0x9b
  40f28a:	(bad)  
  40f28b:	(bad)  
  40f28c:	std    
  40f28d:	jo     0x40f307
  40f28f:	stc    
  40f290:	std    
  40f291:	jmp    0xe6f1:0xfed90104
	...
  40f2a0:	add    BYTE PTR [eax],al
  40f2a2:	fucomp st(2)
  40f2a4:	loopne 0x40f284
  40f2a6:	push   edi
  40f2a7:	xchg   esp,esp
  40f2a9:	out    0x49,al
  40f2ab:	jno    0x40f29f
  40f2ad:	into   
  40f2ae:	inc    edi
  40f2af:	jo     0x40f296
  40f2b1:	add    BYTE PTR [edx+0x79fff308],al
  40f2b7:	clc    
  40f2b8:	loopne 0x40f2a2
  40f2ba:	mov    cl,BYTE PTR [eax]
  40f2bc:	repz (bad) 
  40f2be:	jns    0x40f2b8
  40f2c0:	in     al,0xe8
  40f2c2:	push   edx
  40f2c3:	or     bl,dh
  40f2c5:	(bad)  
  40f2c6:	aas    
  40f2c7:	std    
  40f2c8:	out    dx,eax
  40f2c9:	(bad)  
  40f2ca:	cmp    DWORD PTR [esi+0x79],ebp
  40f2cd:	cld    
  40f2ce:	pop    ecx
  40f2cf:	cwde   
  40f2d0:	mov    fs,WORD PTR [eax-0x49]
  40f2d3:	jnp    0x40f262
  40f2d5:	les    esi,FWORD PTR [edx+0x55]
  40f2d8:	(bad)  
  40f2d9:	cld    
  40f2da:	stc    
  40f2db:	ins    DWORD PTR es:[edi],dx
  40f2dc:	(bad)
  40f2df:	jge    0x40f338
  40f2e1:	mov    edi,edx
  40f2e3:	leave  
  40f2e4:	data16 add cl,bh
  40f2e7:	test   DWORD PTR [eax+ebp*8],0xfff2f41d
  40f2ee:	lods   eax,DWORD PTR ds:[esi]
  40f2ef:	inc    esp
  40f2f0:	pop    edi
  40f2f1:	call   0x4ddfb2
  40f2f6:	cmp    eax,0x251b7e3d
  40f2fb:	cmp    cl,BYTE PTR [edx-0x15]
  40f2fe:	add    al,0xfd
  40f300:	cmp    DWORD PTR ds:0x388c8842,ecx
	...
  40f30e:	add    BYTE PTR [eax],al
  40f310:	sbb    al,0xf8
  40f312:	pop    es
  40f313:	(bad)  
  40f314:	es jge 0x40f2fc
  40f317:	add    cl,ch
  40f319:	xchg   DWORD PTR [ebx+edi*1-0x4b],eax
  40f31d:	jmp    0xc1e67f08
  40f322:	ret    
  40f323:	ret    0x7ce2
  40f326:	push   edi
  40f327:	mov    ebp,edx
  40f329:	cli    
  40f32a:	int    0xb4
  40f32c:	mov    eax,ds:0xfe0c796e
  40f331:	iret   
  40f332:	xchg   bh,bh
  40f334:	iret   
  40f335:	dec    ecx
  40f336:	lock mov edi,0xc95d5c42
  40f33c:	lea    edx,[esi+0xe]
  40f33f:	inc    DWORD PTR [edx+0x63]
  40f342:	(bad)  
  40f343:	dec    ebp
  40f344:	arpl   WORD PTR [ecx],bp
  40f346:	cld    
  40f347:	or     cl,BYTE PTR [edi-0x69a0f656]
  40f34d:	and    al,0x19
  40f34f:	add    BYTE PTR [eax+0x1aff148b],bl
  40f355:	ja     0x40f32d
  40f357:	push   esp
  40f358:	test   BYTE PTR [ecx],al
  40f35a:	cld    
  40f35b:	mov    WORD PTR [edx],cs
  40f35d:	neg    DWORD PTR [eax-0x1]
  40f360:	add    ah,BYTE PTR [ebx-0x2a]
  40f363:	icebp  
  40f364:	inc    ebp
  40f365:	jmp    0x51cffe65
  40f36a:	mov    al,BYTE PTR [edi]
  40f36c:	int3   
  40f36d:	pushw  cs
  40f36f:	jmp    edx
  40f371:	sar    bl,cl
  40f373:	je     0x40f375
	...
  40f37d:	add    BYTE PTR [edi-0x42],dl
  40f380:	mov    ch,0x8f
  40f382:	dec    eax
  40f383:	shr    edi,0xbf
  40f386:	shl    dl,1
  40f388:	in     al,dx
  40f389:	add    edi,ecx
  40f38b:	data16 ja 0x40f3d2
  40f38e:	and    ebx,ebp
  40f390:	loopne 0x40f411
  40f392:	call   0xf9c500fd
  40f397:	arpl   WORD PTR [esi],cx
  40f399:	add    BYTE PTR [eax+0x10ff598e],al
  40f39f:	mov    DWORD PTR [ebp+0x44],esi
  40f3a2:	pop    ds
  40f3a3:	cmp    DWORD PTR [ecx-0x30],0x416f6d77
  40f3aa:	iret   
  40f3ab:	mov    fs,WORD PTR [edi+0x70]
  40f3ae:	iret   
  40f3af:	pop    si
  40f3b1:	jmp    DWORD PTR [edx-0x6a]
  40f3b4:	push   eax
  40f3b5:	movd   mm7,DWORD PTR [edi+0x24]
  40f3b9:	add    al,0xe7
  40f3bb:	leave  
  40f3bc:	push   ebx
  40f3bd:	add    al,0xcf
  40f3bf:	iret   
  40f3c0:	fidiv  DWORD PTR [esi-0x61]
  40f3c3:	fdiv   st,st(6)
  40f3c5:	bound  ecx,QWORD PTR [esi]
  40f3c7:	sbb    bl,0x48
  40f3ca:	aas    
  40f3cb:	and    bl,0x4d
  40f3ce:	push   ss
  40f3cf:	jnp    0x40f374
  40f3d1:	ja     0x40f3ae
  40f3d3:	jp     0x40f36a
  40f3d5:	ja     0x40f3ae
  40f3d7:	jp     0x40f395
  40f3d9:	add    BYTE PTR [edx-0x6],dl
  40f3dc:	in     eax,0x3
  40f3de:	iret   
  40f3df:	jp     0x40f38d
  40f3e1:	jbe    0x40f3e3
	...
  40f3eb:	add    dh,dl
  40f3ed:	inc    esi
  40f3ee:	sub    DWORD PTR [eax+0x3e37fcf],edi
  40f3f4:	xchg   DWORD PTR fs:[edx-0x1c7fc4ba],ebp
  40f3fb:	add    ecx,edi
  40f3fd:	imul   esi,DWORD PTR [edi+0x6b6f27c3],0xfffffff0
  40f404:	pop    ecx
  40f405:	jb     0x40f389
  40f407:	sub    ecx,eax
  40f409:	hlt    
  40f40a:	jecxz  0x40f3d4
  40f40c:	xchg   ebx,eax
  40f40d:	push   edi
  40f40e:	in     al,0x3
  40f410:	iret   
  40f411:	jg     0x40f476
  40f413:	xor    bh,cl
  40f415:	jle    0x40f47e
  40f417:	dec    ebx
  40f418:	int    0x7f
  40f41a:	jecxz  0x40f474
  40f41c:	aaa    
  40f41d:	dec    edi
  40f41e:	and    dh,al
  40f420:	and    ecx,edi
  40f422:	mov    al,ds:0x1bed4dbf
  40f427:	add    ebx,DWORD PTR [edx-0x66227460]
  40f42d:	shl    bl,0xf0
  40f430:	jnp    0x40f46d
  40f432:	sbb    al,0xe8
  40f434:	imul   edi,DWORD PTR [edi-0x1d],0xc7f30fc
  40f43b:	ins    BYTE PTR es:[edi],dx
  40f43c:	fiadd  DWORD PTR [ecx-0x3be816f4]
  40f442:	in     al,0xe8
  40f444:	int3   
  40f445:	jg     0x40f453
  40f447:	rcl    cl,1
  40f449:	or     BYTE PTR [ecx+ebp*8],0x4d
  40f44d:	jmp    0x40f433
  40f44f:	call   0x40f454
  40f454:	add    BYTE PTR [eax],al
  40f456:	add    BYTE PTR [eax],al
  40f458:	add    BYTE PTR [eax],al
  40f45a:	inc    edi
  40f45b:	jg     0x40f3e0
  40f45d:	inc    esp
  40f45e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f45f:	inc    ebp
  40f460:	dec    eax
  40f461:	ror    ebp,1
  40f463:	jg     0x40f471
  40f465:	jmp    0xe94d35f5
  40f46a:	int3   
  40f46b:	add    dh,BYTE PTR [eax-0x6f]
  40f46e:	int    0xf4
  40f470:	add    DWORD PTR [eax+0x1e],esi
  40f473:	pusha  
  40f474:	retf   0xab2c
  40f477:	or     DWORD PTR [ecx+ebp*8],0xe8a358cc
  40f47e:	int3   
  40f47f:	jg     0x40f40e
  40f481:	cld    
  40f482:	xchg   esp,eax
  40f483:	xor    DWORD PTR [edi-0x1a],0xa6d0ebeb
  40f48a:	push   ss
  40f48b:	pop    eax
  40f48c:	or     ecx,ebp
  40f48e:	int3   
  40f48f:	jg     0x40f474
  40f491:	or     dl,0x7f
  40f494:	or     al,0x6a
  40f496:	mov    esi,0x41d40957
  40f49b:	imul   DWORD PTR [edi+0x21]
  40f49e:	adc    bl,al
  40f4a0:	in     al,0xe4
  40f4a2:	int3   
  40f4a3:	jg     0x40f4b1
  40f4a5:	inc    eax
  40f4a6:	push   edi
  40f4a7:	jg     0x40f4b5
  40f4a9:	jmp    0xed25dffb
  40f4ae:	sbb    DWORD PTR [ebx],eax
  40f4b0:	pusha  
  40f4b1:	call   0x94c47482
  40f4b6:	and    BYTE PTR [ecx],al
  40f4b8:	jo     0x40f50f
  40f4ba:	retf   
  40f4bb:	repz add eax,DWORD PTR [eax]
	...
  40f4c6:	add    BYTE PTR [eax],al
  40f4c8:	test   eax,0xe602e4b8
  40f4cd:	or     DWORD PTR [ebx+ebp*8],0xe84944f9
  40f4d4:	call   0x2941015a
  40f4d9:	mov    bh,0xcc
  40f4db:	add    dh,ah
  40f4dd:	or     DWORD PTR [edi+eax*8],0xfff22bfb
  40f4e4:	mov    dh,0x81
  40f4e6:	leave  
  40f4e7:	inc    ebp
  40f4e8:	push   0xffffff81
  40f4ea:	or     al,0x0
  40f4ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4ed:	inc    esi
  40f4ee:	dec    ecx
  40f4ef:	mov    esp,0xc81b6
  40f4f4:	imul   edi,DWORD PTR [eax-0x7e59ff4c],0x57bbff0c
  40f4fe:	jmp    0xab89:0xf35e6013
  40f505:	inc    ebx
  40f506:	repz jne 0x40f53b
  40f509:	dec    ecx
  40f50a:	or     bh,dh
  40f50c:	icebp  
  40f50d:	pop    ebp
  40f50e:	test   DWORD PTR [ebp+0x2e],eax
  40f511:	pop    esi
  40f512:	jns    0x40f4e8
  40f514:	dec    esi
  40f515:	jo     0x40f508
  40f517:	push   ecx
  40f519:	jmp    0x40f563
  40f51b:	(bad)  
  40f51c:	in     eax,0xaf
  40f51e:	call   0x8475:0xc817760
  40f525:	leave  
  40f526:	and    BYTE PTR [ecx+0x67],0x81
  40f52a:	in     al,0x87
	...
  40f534:	add    BYTE PTR [eax],al
  40f536:	add    BYTE PTR [ecx-0x12f1aff4],al
  40f53c:	ins    BYTE PTR es:[edi],dx
  40f53d:	inc    ecx
  40f53e:	ss pop esi
  40f540:	jns    0x40f502
  40f542:	mov    esi,0x26007c8d
  40f547:	push   0xffffffb2
  40f549:	je     0x40f51a
  40f54b:	outs   dx,BYTE PTR ds:[esi]
  40f54c:	push   esi
  40f54d:	xchg   ebx,eax
  40f54e:	outs   dx,BYTE PTR ds:[esi]
  40f54f:	pop    ss
  40f550:	push   cs
  40f551:	call   0x4f09ba
  40f556:	lahf   
  40f557:	push   cs
  40f558:	lahf   
  40f559:	pusha  
  40f55a:	mov    ss,WORD PTR [esi-0x1d]
  40f55d:	je     0x40f56e
  40f55f:	jg     0x40f57f
  40f561:	jo     0x40f532
  40f563:	push   esi
  40f564:	cmc    
  40f565:	mov    edi,0x9b508d5b
  40f56a:	cs cwde 
  40f56c:	or     al,ch
  40f56e:	adc    BYTE PTR [ebp-0x30e0fff8],ch
  40f574:	and    DWORD PTR [eax+0xe],0x57
  40f578:	loope  0x40f5ee
  40f57a:	(bad)  
  40f57b:	ds clc 
  40f57d:	outs   dx,BYTE PTR ds:[esi]
  40f57e:	iret   
  40f57f:	push   esi
  40f580:	aad    0x24
  40f582:	dec    esp
  40f583:	arpl   WORD PTR [eax+0xf570e5f],bx
  40f589:	jne    0x40f570
  40f58b:	jle    0x40f531
  40f58d:	pusha  
  40f58e:	push   cs
  40f58f:	push   edi
  40f590:	(bad)  
  40f591:	sub    ebp,ecx
  40f593:	push   esi
  40f594:	push   cs
  40f595:	push   eax
  40f596:	out    0xc2,eax
  40f598:	ins    DWORD PTR es:[edi],dx
  40f599:	inc    ecx
	...
  40f5a2:	add    BYTE PTR [eax],al
  40f5a4:	iret   
  40f5a5:	cmc    
  40f5a6:	jns    0x40f568
  40f5a8:	ja     0x40f5bc
  40f5aa:	push   eax
  40f5ab:	add    bh,cl
  40f5ad:	ror    DWORD PTR [esi],1
  40f5af:	sub    ecx,DWORD PTR [edi-0x528b318f]
  40f5b5:	aad    0x79
  40f5b7:	enter  0x4c37,0x50
  40f5bb:	add    bh,cl
  40f5bd:	push   es
  40f5be:	loope  0x40f634
  40f5c0:	pop    es
  40f5c1:	into   
  40f5c2:	repz stc 
  40f5c4:	sub    BYTE PTR [ebp-0x629cbb8b],dh
  40f5ca:	jns    0x40f590
  40f5cc:	daa    
  40f5cd:	jg     0x40f5fc
  40f5cf:	pop    edi
  40f5d0:	iret   
  40f5d1:	jg     0x40f586
  40f5d3:	in     al,dx
  40f5d4:	add    DWORD PTR [ebx+0xc],0xfffffff5
  40f5d8:	pop    es
  40f5d9:	ins    BYTE PTR es:[edi],dx
  40f5da:	add    edi,DWORD PTR [ebx-0x6d]
  40f5dd:	daa    
  40f5de:	outs   dx,DWORD PTR ds:[si]
  40f5e0:	movq   QWORD PTR [edi+0x37],mm6
  40f5e4:	dec    esp
  40f5e5:	jmp    0x38b:0x9d5b043b
  40f5ec:	iret   
  40f5ed:	pop    esp
  40f5ee:	stos   BYTE PTR es:[edi],al
  40f5ef:	in     al,dx
  40f5f0:	pop    ebx
  40f5f1:	ja     0x40f5ce
  40f5f3:	mov    bl,0x49
  40f5f5:	imul   ebx,ebx,0xffffffec
  40f5f8:	cmp    eax,DWORD PTR [eax-0x3d]
  40f5fb:	jbe    0x40f5c4
  40f5fd:	push   edi
  40f5fe:	jecxz  0x40f583
  40f600:	mov    cl,0x6b
  40f602:	mov    bl,0x76
  40f604:	imul   ebp,DWORD PTR [ebx+0x31],0xfffffffc
	...
  40f610:	add    BYTE PTR [eax],al
  40f612:	test   al,0x6c
  40f614:	and    ebp,ebp
  40f616:	cdq    
  40f617:	imul   edx,DWORD PTR [ecx],0xffffffac
  40f61a:	xchg   ecx,eax
  40f61b:	cmc    
  40f61c:	sti    
  40f61d:	fstp   TBYTE PTR [edi-0x15]
  40f620:	call   0xa2db:0xa3f581ec
  40f627:	dec    BYTE PTR [edx-0x440a8e14]
  40f62d:	fistp  DWORD PTR [edx+0x61ec7afe]
  40f633:	cmc    
  40f634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f635:	fist   DWORD PTR [edx+0x51ec6afe]
  40f63b:	cmc    
  40f63c:	(bad)  
  40f63d:	fisttp DWORD PTR [edx+0x41ec5afe]
  40f643:	cmc    
  40f644:	fild   DWORD PTR [edx+0x25ec4afe]
  40f64b:	jge    0x40f6b3
  40f64d:	outs   dx,BYTE PTR ds:[esi]
  40f64e:	aaa    
  40f64f:	or     BYTE PTR [esp+edi*4],0xcb
  40f653:	inc    edx
  40f654:	dec    eax
  40f655:	inc    ecx
  40f656:	into   
  40f657:	jg     0x40f665
  40f659:	jmp    0xea25e2ad
  40f65e:	sub    BYTE PTR [edi-0x3f3cfc9c],0xc
  40f665:	push   cs
  40f666:	cmp    DWORD PTR [ebx],0x7f9111e5
  40f66c:	or     al,0xf2
  40f66e:	or     al,0xf4
  40f670:	or     DWORD PTR [esi],ebp
  40f672:	mov    DWORD PTR [edi+0xc],edx
  40f675:	jmp    0x40f67a
  40f67a:	add    BYTE PTR [eax],al
  40f67c:	add    BYTE PTR [eax],al
  40f67e:	add    BYTE PTR [eax],al
  40f680:	int3   
  40f681:	jg     0x40f6e7
  40f683:	jno    0x40f6ef
  40f685:	ror    BYTE PTR [esi+ebx*8],0x3e
  40f689:	cmp    al,0xe5
  40f68b:	mov    ecx,0xe20c8026
  40f690:	mov    ebx,?
  40f692:	or     DWORD PTR [esi-0x16f0a7f2],ebp
  40f698:	int3   
  40f699:	jg     0x40f68c
  40f69b:	cmp    al,0x67
  40f69d:	bound  esp,QWORD PTR [ebx+ebp*2-0x5c]
  40f6a1:	imul   esi,ecx,0xf2278cda
  40f6a7:	sahf   
  40f6a8:	je     0x40f713
  40f6aa:	inc    DWORD PTR [edi-0x4d]
  40f6ad:	add    BYTE PTR [ecx],0x64
  40f6b0:	inc    esp
  40f6b1:	imul   esi,edx,0xffffff86
  40f6b4:	repz fcom QWORD PTR fs:[ecx+0x76f1fda4]
  40f6bc:	je     0x40f6b1
  40f6be:	loopne 0x40f641
  40f6c0:	or     al,0xfe
  40f6c2:	icebp  
  40f6c3:	data16 (bad) 
  40f6c5:	ret    
  40f6c6:	cld    
  40f6c7:	mov    ecx,0x5684f424
  40f6cc:	xor    al,0x62
  40f6ce:	loope  0x40f721
  40f6d0:	and    al,0x69
  40f6d2:	push   edx
  40f6d3:	add    bh,bh
  40f6d5:	inc    ecx
  40f6d6:	add    al,BYTE PTR [eax]
  40f6d8:	inc    ebx
  40f6d9:	jmp    0x303378c3
  40f6de:	lock (bad) 
  40f6e0:	jmp    0xf98023
	...
  40f6ed:	add    al,ch
  40f6ef:	push   esi
  40f6f0:	repz add dh,dh
  40f6f3:	jge    0x40f701
  40f6f5:	mov    esi,DWORD PTR [ebx]
  40f6f7:	jp     0x40f6fe
  40f6f9:	shl    BYTE PTR [edx+0x7f],0x8c
  40f6fd:	cmp    dh,ah
  40f6ff:	out    dx,al
  40f700:	pop    es
  40f701:	jmp    0x4d7b38
  40f706:	fldz   
  40f708:	sbb    al,ch
  40f70a:	ds out 0xf2,eax
  40f70d:	(bad)  
  40f70e:	fnstsw WORD PTR ds:0x451e0f79
  40f714:	inc    ebx
  40f715:	inc    ecx
  40f716:	mov    dh,0x56
  40f718:	jns    0x40f72e
  40f71a:	mov    cs,WORD PTR [edi]
  40f71c:	mov    edi,edi
  40f71e:	mov    DWORD PTR [edx+0x1],ecx
  40f721:	push   0x4ba662
  40f726:	pop    ecx
  40f727:	lock sbb al,ch
  40f72a:	xor    DWORD PTR [eax],eax
  40f72c:	repz call FWORD PTR [edi]
  40f72f:	add    BYTE PTR [edx+0x6a5669fe],bh
  40f735:	ds ja  0x40f7b5
  40f738:	or     al,0x8d
  40f73a:	repz inc edx
  40f73c:	lock dec DWORD PTR [ecx-0x33]
  40f740:	in     al,0xff
  40f742:	not    DWORD PTR [ebp-0xd]
  40f745:	(bad)  
  40f746:	repz inc edx
  40f748:	lock (bad) 
  40f74a:	jmp    0x2ef6e91b
  40f74f:	push   edi
  40f750:	repz inc DWORD PTR [eax]
	...
  40f75b:	add    BYTE PTR [esi-0x30ffa04d],bl
  40f761:	push   esi
  40f762:	jno    0x40f6e8
  40f764:	jnp    0x40f71f
  40f766:	out    0xfe,al
  40f768:	(bad)  
  40f769:	jno    0x40f7dd
  40f76b:	in     eax,0xce
  40f76d:	push   esi
  40f76e:	push   cs
  40f76f:	lea    edi,[edx]
  40f771:	xchg   ebp,eax
  40f772:	jecxz  0x40f772
  40f774:	sbb    BYTE PTR [edx+0x56cf1007],dh
  40f77a:	push   cs
  40f77b:	rcpps  xmm2,xmm6
  40f77e:	or     eax,0x47e3cf00
  40f783:	sub    al,0x9f
  40f785:	dec    bh
  40f787:	dec    esi
  40f788:	mov    ss,WORD PTR [esi-0x2a]
  40f78b:	or     DWORD PTR [edx+0x56],edi
  40f78e:	push   cs
  40f78f:	or     ecx,DWORD PTR [edi]
  40f791:	in     al,dx
  40f792:	or     al,0xe9
  40f794:	aaa    
  40f795:	pop    eax
  40f796:	push   cs
  40f797:	add    BYTE PTR [edx-0x14],al
  40f79a:	retf   0xc8fd
  40f79d:	dec    ecx
  40f79e:	jp     0x40f7e1
  40f7a0:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7a2:	push   eax
  40f7a3:	in     al,dx
  40f7a4:	or     BYTE PTR [eax-0x2d5d17f8],bl
  40f7aa:	or     BYTE PTR [eax],al
  40f7ac:	aam    0x16
  40f7ae:	bound  eax,QWORD PTR ds:0xdadb6
  40f7b4:	iret   
  40f7b5:	sbb    DWORD PTR [edx+0x14],esp
  40f7b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7b9:	retf   0xfe74
  40f7bc:	mov    BYTE PTR [ebp-0x32],ch
  40f7bf:	je     0x40f7c1
	...
  40f7c9:	add    al,dl
  40f7cb:	jle    0x40f75c
  40f7cd:	inc    edi
  40f7ce:	push   cs
  40f7cf:	push   edi
  40f7d0:	in     eax,0x74
  40f7d2:	fisttp DWORD PTR [esi]
  40f7d4:	sti    
  40f7d5:	sub    DWORD PTR [eax-0x17],0xffffffcf
  40f7d9:	or     ebp,esi
  40f7db:	push   esi
  40f7dc:	in     eax,0x74
  40f7de:	ret    
  40f7df:	(bad)  
  40f7e0:	out    dx,al
  40f7e1:	adc    DWORD PTR [eax+0x7f],0x6a
  40f7e5:	ja     0x40f84a
  40f7e7:	cmp    eax,0xfa41e952
  40f7ec:	mov    ch,0x17
  40f7ee:	popf   
  40f7ef:	iret   
  40f7f0:	dec    ebx
  40f7f1:	push   ds
  40f7f2:	dec    edx
  40f7f3:	push   0x687f544b
  40f7f8:	mov    ecx,0xe7f22013
  40f7fd:	call   0xf58c6fa5
  40f802:	adc    ch,BYTE PTR [eax+0x2b]
  40f805:	fsubr  QWORD PTR [esi-0x816ed02]
  40f80b:	call   0x17a5:0xfacf03e4
  40f812:	inc    esi
  40f813:	add    dh,BYTE PTR [eax]
  40f815:	jmp    0xdf39:0x276767e9
  40f81c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f81d:	add    ecx,esp
  40f81f:	repnz test eax,0x24df025b
  40f825:	add    al,0xc8
  40f827:	sub    eax,0x67c1e998
  40f82c:	int3   
  40f82d:	pop    eax
	...
  40f836:	add    BYTE PTR [eax],al
  40f838:	sub    al,BYTE PTR [eax-0x138f031d]
  40f83e:	sbb    BYTE PTR [esp+esi*2-0x48],bl
  40f842:	and    al,0x4
  40f844:	mov    al,ds:0x47dbcfed
  40f849:	cld    
  40f84a:	mov    ds:0x502d91e8,al
  40f84f:	jmp    0xdc755fdd
  40f854:	lahf   
  40f855:	cld    
  40f856:	call   0x6003:0xe4d808e8
  40f85d:	es adc al,0xe9
  40f860:	jecxz  0x40f8d9
  40f862:	fwait
  40f863:	(bad)  
  40f864:	sub    ah,BYTE PTR [edi+0xd]
  40f867:	jbe    0x40f8dd
  40f869:	cmp    DWORD PTR [ebp-0x26a79892],ecx
  40f86f:	jmp    0x37a57840
  40f874:	lods   al,BYTE PTR ds:[esi]
  40f875:	ror    BYTE PTR [esi+edx*2],0x69
  40f879:	xor    esi,ebx
  40f87b:	dec    esi
  40f87c:	daa    
  40f87d:	pop    edi
  40f87e:	and    al,0xd4
  40f880:	int3   
  40f881:	jg     0x40f888
  40f883:	sub    DWORD PTR [eax-0x2b7d9b6b],esi
  40f889:	ror    BYTE PTR [esi+ebp*1],0xa1
  40f88d:	mov    esp,esp
  40f88f:	stos   BYTE PTR es:[edi],al
  40f890:	mov    BYTE PTR [ebp-0xe],ah
  40f893:	push   ds
  40f894:	xor    DWORD PTR [ebx],esi
  40f896:	repz push ss
  40f898:	out    0xb6,eax
  40f89a:	in     al,0x62
	...
  40f8a4:	add    BYTE PTR [eax],al
  40f8a6:	jo     0x40f90d
  40f8a8:	repnz cdq 
  40f8aa:	imul   ebx
  40f8ac:	sbb    al,0xfe
  40f8ae:	jb     0x40f923
  40f8b0:	pop    esp
  40f8b1:	imul   BYTE PTR [edx+0x77]
  40f8b4:	in     al,0x5c
  40f8b6:	in     al,0x65
  40f8b8:	repnz ror DWORD PTR [esi+eiz*8-0xf],1
  40f8bd:	fisubr WORD PTR [eax-0x4f2846d5]
  40f8c3:	gs in  eax,0x1f
  40f8c6:	adc    al,0x80
  40f8c8:	or     al,0x6a
  40f8ca:	mov    ebx,0x25d57e80
  40f8cf:	or     al,0xb9
  40f8d1:	mov    bh,0xb0
  40f8d3:	gs push cs
  40f8d5:	cdq    
  40f8d6:	dec    esp
  40f8d7:	pop    eax
  40f8d8:	(bad)  
  40f8d9:	rsqrtps xmm5,XMMWORD PTR [eax-0x7e01e5de]
  40f8e0:	in     eax,0x29
  40f8e2:	sbb    ebx,DWORD PTR [ebp+0x6d]
  40f8e5:	sub    bl,cl
  40f8e7:	mov    ax,0xaa00
  40f8eb:	pop    ebp
  40f8ec:	repz (bad) 
  40f8ee:	ds inc edx
  40f8f0:	data16 add BYTE PTR [esi-0x2e],ah
  40f8f4:	fs icebp 
  40f8f6:	(bad)  
  40f8f7:	mov    esp,0x2f6bff0c
  40f8fc:	lock jmp DWORD PTR [ecx+0x266cbc43]
  40f903:	sbb    BYTE PTR [eax+ebp*2-0x80],0xdb
  40f908:	dec    ebx
	...
  40f911:	add    BYTE PTR [eax],al
  40f913:	add    BYTE PTR [ecx-0x1e0141d0],dl
  40f919:	pop    esi
  40f91a:	jmp    0x3f5a:0xc8212a1
  40f921:	imul   esi,DWORD PTR [edx-0x2397018b],0xc568ea75
  40f92b:	je     0x40f93d
  40f92d:	retf   0x48a5
  40f930:	daa    
  40f931:	xor    cl,0x75
  40f934:	or     cl,BYTE PTR [edx-0x43]
  40f937:	and    ecx,0x5c
  40f93a:	repz mov ch,0x9a
  40f93d:	pop    ebp
  40f93e:	repz push DWORD PTR [esi]
  40f941:	dec    edx
  40f942:	cmc    
  40f943:	xor    DWORD PTR [ecx+0x1bff425e],0xffffff8c
  40f94a:	icebp  
  40f94b:	jne    0x40f8ff
  40f94d:	shl    ecx,1
  40f94f:	jne    0x40f8ff
  40f951:	dec    ecx
  40f952:	push   0xfffffffa
  40f954:	xchg   ecx,eax
  40f955:	pop    esi
  40f956:	jmp    0x2b8d:0xf35ce1f1
  40f95d:	aas    
  40f95e:	lock jmp DWORD PTR [ecx-0x2f]
  40f962:	icebp  
  40f963:	mov    ch,0xf2
  40f965:	pop    edx
  40f966:	repz call FWORD PTR [esi-0x48]
  40f96a:	gs add bh,cl
  40f96d:	push   esi
  40f96e:	lea    edi,[edi-0x1d32440]
  40f974:	push   0xb4eafe
	...
  40f981:	add    BYTE PTR [ebx],ah
  40f983:	in     eax,0xea
  40f985:	(bad)  
  40f986:	xchg   DWORD PTR [di+0x0],edx
  40f98a:	iret   
  40f98b:	aad    0xbc
  40f98d:	mov    bh,0x49
  40f98f:	fsubp  st(2),st
  40f991:	out    0xe,eax
  40f993:	inc    esi
  40f994:	jmp    0x40f994
  40f996:	push   es
  40f997:	cdq    
  40f998:	sbb    eax,0xd9e19a00
  40f99d:	(bad)  
  40f99e:	mov    ds:0xbf74eb6a,al
  40f9a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9a4:	jl     0x40f9b2
  40f9a6:	sbb    BYTE PTR [esi+esi*8],ah
  40f9a9:	out    0x9a,eax
  40f9ab:	xchg   ebx,eax
  40f9ac:	jmp    0x9bff:0xf99916fe
  40f9b3:	icebp  
  40f9b4:	fld    DWORD PTR [edx-0xbd78ed]
  40f9ba:	jp     0x40f9fe
  40f9bc:	(bad)  
  40f9bd:	mov    edx,0xaea7e53
  40f9c2:	paddsb mm1,QWORD PTR [edi+ebx*2]
  40f9c6:	push   es
  40f9c7:	cdq    
  40f9c8:	stc    
  40f9c9:	call   ecx
  40f9cb:	jmp    0x40f9ea
  40f9cd:	call   0xff28cc47
  40f9d2:	aam    0x16
  40f9d4:	bound  eax,QWORD PTR ds:0xbcf2018
  40f9da:	iret   
  40f9db:	xor    eax,0x12b70c62
  40f9e0:	ja     0x40f9e0
  40f9e2:	mov    al,ds:0x74ce71
	...
  40f9ef:	add    al,cl
  40f9f1:	mov    esi,0x570e4793
  40f9f6:	jmp    0x9bc0d56f
  40f9fb:	add    cl,BYTE PTR [esp+eiz*2-0x6d]
  40f9ff:	fld    st(6)
  40fa01:	(bad)  
  40fa03:	in     al,0xfb
  40fa05:	jae    0x40f992
  40fa07:	out    dx,al
  40fa08:	dec    esi
  40fa09:	mov    edi,DWORD PTR fs:[ebx+0xb]
  40fa0d:	ins    BYTE PTR es:[edi],dx
  40fa0e:	sbb    al,0x86
  40fa10:	clc    
  40fa11:	mov    esi,0x6bdbe4e3
  40fa16:	mov    esi,ds
  40fa18:	dec    esi
  40fa19:	imul   edi,DWORD PTR fs:[ebx-0x75],0x67
  40fa1e:	(bad)  
  40fa20:	cmp    edi,DWORD PTR [edi-0x1d]
  40fa23:	fistp  DWORD PTR [edi+0x57e542e4]
  40fa29:	mov    edx,0x8fcf5c47
  40fa2e:	jecxz  0x40fa33
  40fa30:	daa    
  40fa31:	mov    ebx,0xf611e4ba
  40fa36:	test   al,0xf3
  40fa38:	or     edx,ebp
  40fa3a:	sub    ebx,esp
  40fa3c:	add    DWORD PTR [eax],eax
  40fa3e:	adc    esp,ebp
  40fa40:	lds    edi,FWORD PTR [edi]
  40fa42:	jmp    0x40fac3
  40fa44:	xor    edi,DWORD PTR [edi-0x1d]
  40fa47:	add    ebp,eax
  40fa49:	jmp    0x62385659
  40fa4e:	in     al,0x3
  40fa50:	fsubr  st,st(1)
  40fa52:	neg    ebx
	...
  40fa5c:	add    BYTE PTR [eax],al
  40fa5e:	adc    bl,cl
  40fa60:	jecxz  0x40fa65
  40fa62:	dec    esp
  40fa63:	push   0x1c4af4e6
  40fa68:	in     al,0x3
  40fa6a:	iret   
  40fa6b:	neg    BYTE PTR [eax-0x18]
  40fa6e:	xor    BYTE PTR [ebx+0x84cf4e3],ah
  40fa74:	in     al,0x3
  40fa76:	iret   
  40fa77:	xlat   BYTE PTR ds:[ebx]
  40fa78:	sahf   
  40fa79:	arpl   WORD PTR [esi],cx
  40fa7b:	or     BYTE PTR [esi+ebx*1],0x73
  40fa7f:	lds    esp,FWORD PTR [ebp-0x17]
  40fa82:	int3   
  40fa83:	jbe    0x40fa51
  40fa85:	sbb    eax,0xa17862f2
  40fa8a:	adc    al,0x63
  40fa8c:	add    ch,cl
  40fa8e:	int3   
  40fa8f:	bound  edi,QWORD PTR [eax-0x67]
  40fa92:	add    al,0x15
  40fa94:	inc    ebp
  40fa95:	sub    bl,cl
  40fa97:	xlat   BYTE PTR ds:[ebx]
  40fa98:	mov    dl,0x9
  40fa9a:	or     al,0x80
  40fa9c:	pop    ecx
  40fa9d:	sbb    edi,0x47e90cd5
  40faa3:	and    edi,DWORD PTR [ecx-0x3f]
  40faa6:	sub    ebp,esp
  40faa8:	hlt    
  40faa9:	ror    ebp,cl
  40faab:	xlat   BYTE PTR ds:[ebx]
  40faac:	mov    ebp,0x597f8dc9
  40fab1:	inc    ecx
  40fab2:	popf   
  40fab3:	aad    0xc
  40fab5:	jmp    0xb44d6609
  40faba:	jmp    0x2b7a7321
  40fabf:	in     al,dx
  40fac0:	clc    
  40fac1:	inc    ecx
	...
  40faca:	add    BYTE PTR [eax],al
  40facc:	retf   0xf1fd
  40facf:	es pushf 
  40fad1:	neg    ah
  40fad3:	adc    dh,ch
  40fad5:	loop   0x40fb0d
  40fad7:	(bad)  
  40fad8:	popa   
  40fad9:	jle    0x40faa5
  40fadb:	jmp    0x40fa6d
  40fadd:	mov    ebp,0x7c701b05
  40fae2:	mov    ebx,es
  40fae4:	int3   
  40fae5:	in     al,dx
  40fae6:	loop   0x40fade
  40fae8:	bound  ecx,QWORD PTR [edi+0x783aee5c]
  40faee:	in     al,0xae
  40faf0:	lods   eax,DWORD PTR ds:[esi]
  40faf1:	popa   
  40faf2:	repnz shr DWORD PTR [edx+eiz*8],1
  40faf6:	icebp  
  40faf7:	(bad)  
  40faf8:	mov    al,ds:0xa354f174
  40fafd:	popa   
  40fafe:	js     0x40fb00
  40fb00:	pop    si
  40fb02:	jns    0x40fb0c
  40fb04:	jle    0x40fb0f
  40fb06:	lock call FWORD PTR [ecx+0x5f]
  40fb0a:	aas    
  40fb0b:	sar    bh,0x5e
  40fb0e:	repz jmp FWORD PTR [ecx]
  40fb11:	dec    ecx
  40fb12:	mov    al,ds:0x878d7138
  40fb17:	push   0xfff35e59
  40fb1c:	ret    
  40fb1d:	inc    edi
  40fb1e:	jmp    0x63ff:0xf35ec855
  40fb25:	dec    esi
  40fb26:	jmp    0x43ff:0xf35d584d
  40fb2d:	inc    esi
  40fb2e:	jmp    0x0:0x45
  40fb35:	add    BYTE PTR [eax],al
  40fb37:	add    BYTE PTR [eax],al
  40fb39:	add    BYTE PTR [eax],ch
  40fb3b:	pop    ebp
  40fb3c:	repz jmp DWORD PTR [ebx]
  40fb3f:	inc    edx
  40fb40:	jmp    0x3ff:0xf35d183d
  40fb47:	outs   dx,BYTE PTR ds:[esi]
  40fb48:	repz jne 0x40fb65
  40fb4b:	pop    ebp
  40fb4c:	jns    0x40fb56
  40fb4e:	jle    0x40fb19
  40fb50:	repnz (bad) 
  40fb52:	fnstcw WORD PTR [esi+0x7e2ac2c3]
  40fb58:	push   edi
  40fb59:	mov    ebx,edx
  40fb5b:	cli    
  40fb5c:	int    0xe8
  40fb5e:	fxch   st(0)
  40fb60:	sbb    bh,bh
  40fb62:	push   ebx
  40fb63:	outs   dx,BYTE PTR ds:[esi]
  40fb64:	jmp    0xb60b:0xc7e4c8d
  40fb6b:	(bad)  
  40fb6c:	pop    ecx
  40fb6d:	push   0xffffffe6
  40fb6f:	aad    0xcd
  40fb71:	pusha  
  40fb72:	daa    
  40fb73:	jle    0x40fb66
  40fb75:	jne    0x40fb1d
  40fb77:	pop    esi
  40fb78:	jns    0x40fb86
  40fb7a:	sahf   
  40fb7b:	bound  ecx,QWORD PTR [ebp-0x338d6601]
  40fb81:	je     0x40fb52
  40fb83:	xchg   edi,eax
  40fb84:	cmp    BYTE PTR [eax-0x49],dl
  40fb87:	sbb    eax,0x6ea0fe87
  40fb8c:	into   
  40fb8d:	jae    0x40fb6d
  40fb8f:	out    dx,eax
  40fb90:	inc    esp
  40fb91:	call   0x422748bb
  40fb96:	dec    ebp
  40fb97:	adc    ch,bh
  40fb99:	or     cl,BYTE PTR [edi+0xfef183]
	...
  40fba7:	add    BYTE PTR [edx],al
  40fba9:	jg     0x40fbe3
  40fbab:	call   0xff2fd44f
  40fbb0:	push   ecx
  40fbb2:	push   esp
  40fbb3:	call   0x895f5b7
  40fbb8:	addr16 dec esi
  40fbba:	in     al,dx
  40fbbb:	(bad)  
  40fbbc:	push   eax
  40fbbd:	inc    edx
  40fbbf:	jl     0x40fc09
  40fbc1:	shr    dh,cl
  40fbc3:	je     0x40fbfc
  40fbc5:	iret   
  40fbc6:	retf   0x387c
  40fbc9:	ret    0xbde5
  40fbcc:	mov    dl,0xc9
  40fbce:	out    dx,al
  40fbcf:	addr16 iret 
  40fbd1:	pop    esi
  40fbd2:	push   cs
  40fbd3:	add    BYTE PTR [edi],dh
  40fbd5:	scas   al,BYTE PTR es:[edi]
  40fbd6:	ins    BYTE PTR es:[edi],dx
  40fbd7:	call   FWORD PTR [eax]
  40fbd9:	lock inc esp
  40fbdb:	clc    
  40fbdc:	inc    edx
  40fbdd:	adc    al,0xd2
  40fbdf:	dec    edi
  40fbe0:	or     BYTE PTR [esi+edi*8],ch
  40fbe3:	(bad)  
  40fbe4:	jp     0x40fc50
  40fbe6:	out    0xd3,al
  40fbe8:	push   si
  40fbea:	push   cs
  40fbeb:	or     ecx,DWORD PTR [edi]
  40fbed:	add    al,0x5e
  40fbef:	(bad)  
  40fbf0:	xchg   edx,eax
  40fbf1:	xchg   BYTE PTR ds:0xc756cf00,cl
  40fbf7:	inc    esp
  40fbf8:	jecxz  0x40fc5b
  40fbfa:	add    al,0x0
  40fbfc:	iret   
  40fbfd:	cld    
  40fbfe:	or     eax,0xdfccf6a
  40fc03:	push   0xffffffcf
  40fc05:	jg     0x40fc7f
  40fc07:	inc    edi
  40fc08:	ret    
  40fc09:	iret   
  40fc0a:	rcl    BYTE PTR [edi+0x0],cl
	...
  40fc15:	add    BYTE PTR [edi-0x562baea0],dh
  40fc1b:	jmp    0x3e3:0xd672ecbf
  40fc22:	les    edi,FWORD PTR [edi]
  40fc24:	cmp    BYTE PTR [esi],al
  40fc26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc28:	dec    ebx
  40fc29:	lods   eax,DWORD PTR ds:[esi]
  40fc2a:	adc    BYTE PTR [edi-0x70041f1d],bh
  40fc30:	fwait
  40fc31:	push   es
  40fc32:	dec    esi
  40fc33:	pusha  
  40fc34:	xchg   ebx,eax
  40fc35:	loope  0x40fc32
  40fc37:	addr16 xor al,0xec
  40fc3a:	sbb    edi,edi
  40fc3c:	and    cl,0x57
  40fc3f:	mov    edx,0x87e3e197
  40fc44:	jb     0x40fc9d
  40fc46:	mov    ebx,0x49eff160
  40fc4b:	jmp    0xfb5b:0x77bbe0cf
  40fc52:	cmp    DWORD PTR [eax+0x53],esp
  40fc55:	loope  0x40fc12
  40fc57:	push   ebx
  40fc58:	dec    esp
  40fc59:	sbb    eax,0xe14360aa
  40fc5e:	mov    ebp,DWORD PTR [edi+0x5f]
  40fc61:	sbb    DWORD PTR [ecx],0x76ec2fea
  40fc67:	(bad)  
  40fc68:	jecxz  0x40fc6d
  40fc6a:	or     dl,ch
  40fc6c:	cmp    ebp,esp
  40fc6e:	stos   BYTE PTR es:[edi],al
  40fc6f:	loop   0x40fc9b
  40fc71:	loope  0x40fc7a
  40fc73:	cmp    eax,0xf49a03f8
  40fc78:	pop    es
  40fc79:	add    DWORD PTR [eax],0x0
	...
  40fc84:	or     al,0x6b
  40fc86:	add    ah,cl
  40fc88:	loope  0x40fc5e
  40fc8a:	jecxz  0x40fcf9
  40fc8c:	mov    bl,0x60
  40fc8e:	jns    0x40fc9b
  40fc90:	out    0xb9,eax
  40fc92:	or     al,0x73
  40fc94:	scas   eax,DWORD PTR es:[edi]
  40fc95:	pop    esi
  40fc96:	test   BYTE PTR [eax+eiz*4+0x2c7f0846],ah
  40fc9d:	ror    DWORD PTR [ecx+ebp*8],0xcc
  40fca1:	jg     0x40fcaf
  40fca3:	fs push ecx
  40fca5:	push   esi
  40fca6:	repz into 
  40fca8:	scas   eax,DWORD PTR es:[edi]
  40fca9:	iret   
  40fcaa:	fs in  eax,dx
  40fcac:	int    0x7f
  40fcae:	or     al,0xd1
  40fcb0:	pop    edi
  40fcb1:	out    0xc,eax
  40fcb3:	jmp    0x28ace1ac
  40fcb8:	retf   
  40fcb9:	out    0x4f,eax
  40fcbb:	or     BYTE PTR [eax+eax*4],cl
  40fcbe:	fs push ss
  40fcc0:	in     al,dx
  40fcc1:	ror    BYTE PTR [esi+edx*4],0xc1
  40fcc5:	dec    esi
  40fcc6:	inc    ebp
  40fcc7:	sub    bl,cl
  40fcc9:	pop    esi
  40fcca:	js     0x40fcbd
  40fccc:	fs daa 
  40fcce:	repz jle 0x40fd40
  40fcd1:	out    0x67,eax
  40fcd3:	or     BYTE PTR [edi+edi*2-0x3f53f39c],cl
  40fcda:	or     al,0xd1
  40fcdc:	xchg   edi,eax
  40fcdd:	loopne 0x40fd2a
  40fcdf:	jmp    0xe94d7e88
  40fce4:	dec    esp
  40fce5:	pop    esi
  40fce6:	js     0x40fcc9
	...
  40fcf0:	add    BYTE PTR [eax],al
  40fcf2:	xor    al,0xb
  40fcf4:	repz inc esi
  40fcf6:	das    
  40fcf7:	or     al,0x88
  40fcf9:	ss cs pop esi
  40fcfc:	repnz cdq 
  40fcfe:	hlt    
  40fcff:	mov    dh,0x64
  40fd01:	jmp    0x25b95bd2
  40fd06:	out    dx,eax
  40fd07:	rol    DWORD PTR [ecx+edx*1],cl
  40fd0a:	icebp  
  40fd0b:	fdiv   st,st(1)
  40fd0d:	push   ss
  40fd0e:	adc    eax,0x99e90941
  40fd13:	or     ah,cl
  40fd15:	add    BYTE PTR [edi+0x46],ah
  40fd18:	(bad)  
  40fd19:	(bad)  
  40fd1a:	sar    DWORD PTR [esi],1
  40fd1c:	add    BYTE PTR fs:[ebp+eiz*4-0xf],cl
  40fd21:	jne    0x40fcd1
  40fd23:	push   0xffffffb0
  40fd25:	jns    0x40fcd8
  40fd27:	test   DWORD PTR ds:[ebp-0x6e],eax
  40fd2b:	jmp    0x3abe546
  40fd30:	repz jmp FWORD PTR [ebp-0x1db81be]
  40fd37:	call   0x92e73ea7
  40fd3c:	in     al,0x60
  40fd3e:	idiv   BYTE PTR [esi]
  40fd40:	repz push eax
  40fd42:	push   cs
  40fd43:	test   BYTE PTR [edi+ebp*8],bl
  40fd46:	lock jmp 0x40fcec
  40fd49:	popa   
  40fd4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd4b:	sbb    DWORD PTR [edi+edi*8-0x35],0xffffff8b
  40fd50:	in     al,0x4b
  40fd52:	or     edi,DWORD PTR [edi]
  40fd54:	repz call 0x40fd5a
  40fd5a:	add    BYTE PTR [eax],al
  40fd5c:	add    BYTE PTR [eax],al
  40fd5e:	add    BYTE PTR [eax],al
  40fd60:	mov    edx,0x29fff1df
  40fd65:	mov    BYTE PTR [edx+0xb83f760],bl
  40fd6b:	add    BYTE PTR [esi],dh
  40fd6d:	cmp    BYTE PTR [edi-0x7b],0x99
  40fd71:	cmp    eax,0xea76fff3
  40fd76:	or     BYTE PTR [ecx],al
  40fd78:	ss and ah,0xf9
  40fd7c:	or     DWORD PTR [edx-0x1cf497f4],eax
  40fd82:	dec    ebx
  40fd83:	add    dh,bh
  40fd85:	mov    esi,0xe9f6416b
  40fd8a:	jns    0x40fded
  40fd8c:	aaa    
  40fd8d:	xor    cl,0x35
  40fd90:	ror    ebx,0x4b
  40fd93:	add    cl,dl
  40fd95:	mov    eax,0x7acfe804
  40fd9a:	jmp    0x40fd9a
  40fd9c:	loopne 0x40fd9d
  40fd9e:	fs popa 
  40fda0:	mov    gs,WORD PTR [eax+0x66]
  40fda3:	pop    ebp
  40fda4:	outs   dx,BYTE PTR ds:[esi]
  40fda5:	daa    
  40fda6:	push   cs
  40fda7:	push   0x490840
  40fdac:	aaa    
  40fdad:	imul   ecx,DWORD PTR [esi],0x55664f00
  40fdb3:	or     BYTE PTR [edi-0x570112eb],ah
  40fdb9:	in     al,0x84
  40fdbb:	mul    BYTE PTR [ecx-0x58b02cb2]
  40fdc1:	or     DWORD PTR [ebx+0x0],ebp
	...
  40fdcc:	add    BYTE PTR [eax],al
  40fdce:	iret   
  40fdcf:	sbb    eax,0x9c88fc55
  40fdd4:	add    al,ch
  40fdd6:	call   0x873fcf6a
  40fddb:	sub    DWORD PTR [edx],ecx
  40fddd:	add    BYTE PTR [edx],bl
  40fddf:	shl    cl,cl
  40fde1:	adc    BYTE PTR [ebx+0x60fecffb],0x81
  40fde8:	or     BYTE PTR [edx-0x4f],ch
  40fdeb:	add    eax,0x4f670855
  40fdf0:	push   ecx
  40fdf1:	dec    DWORD PTR [eax-0x20]
  40fdf4:	inc    esp
  40fdf5:	cld    
  40fdf6:	or     BYTE PTR [eax+edi*2+0x5f],ah
  40fdfa:	mov    fs,WORD PTR [esi+0xe]
  40fdfd:	add    bh,cl
  40fdff:	popfw  
  40fe01:	test   BYTE PTR [eax],ah
  40fe03:	mov    ch,0xd2
  40fe05:	(bad)  
  40fe06:	jg     0x40fe46
  40fe08:	or     al,BYTE PTR [ecx]
  40fe0a:	iret   
  40fe0b:	data16 out 0x71,al
  40fe0e:	test   al,0x66
  40fe10:	push   cs
  40fe11:	push   0x494813
  40fe16:	ja     0x40fde8
  40fe18:	push   0x9b7fcf41
  40fe1d:	push   esi
  40fe1e:	outs   dx,BYTE PTR ds:[esi]
  40fe1f:	mov    esi,0x4ca3dee3
  40fe24:	lods   al,BYTE PTR ds:[esi]
  40fe25:	inc    esp
  40fe26:	iret   
  40fe27:	pop    esp
  40fe28:	cdq    
  40fe29:	or     esp,edi
  40fe2b:	call   0xe812dc38
  40fe30:	daa    
  40fe31:	add    BYTE PTR fs:[eax],al
	...
  40fe3c:	push   cs
  40fe3d:	or     BYTE PTR [ebx-0x1c40d067],0x6b
  40fe44:	inc    eax
  40fe45:	fbld   TBYTE PTR [esp+eax*1]
  40fe48:	daa    
  40fe49:	and    bl,0x3
  40fe4c:	dec    edi
  40fe4d:	pop    esp
  40fe4e:	push   ecx
  40fe4f:	or     al,0xb7
  40fe51:	int3   
  40fe52:	rcr    ch,0x99
  40fe55:	or     ah,BYTE PTR [ecx-0x2b]
  40fe58:	xchg   edx,eax
  40fe59:	pop    esp
  40fe5a:	mov    bl,0x34
  40fe5c:	ja     0x40fed6
  40fe5e:	inc    edx
  40fe5f:	add    al,0xcf
  40fe61:	pop    esp
  40fe62:	cmp    eax,esp
  40fe64:	jns    0x40fe38
  40fe66:	sti    
  40fe67:	jmp    0x40fdf9
  40fe69:	xlat   BYTE PTR ds:[ebx]
  40fe6a:	xchg   edx,eax
  40fe6b:	fst    QWORD PTR [edi-0x5fc1fbf]
  40fe71:	or     BYTE PTR [eax-0x7d],dh
  40fe74:	mov    WORD PTR [ebx-0x76],ss
  40fe77:	fst    QWORD PTR [ecx-0x17]
  40fe7a:	jecxz  0x40fee5
  40fe7c:	lock pop esp
  40fe7e:	icebp  
  40fe7f:	or     esi,DWORD PTR [edi]
  40fe81:	(bad)  
  40fe82:	sti    
  40fe83:	fdivr  QWORD PTR [ecx]
  40fe85:	push   es
  40fe86:	mov    eax,ds:0x798209df
  40fe8b:	mov    ?,WORD PTR fs:[edi-0x1d]
  40fe8f:	add    ecx,edi
  40fe91:	jg     0x40fee3
  40fe93:	xchg   DWORD PTR [ecx],esp
  40fe95:	pop    ebp
  40fe96:	dec    ebx
  40fe97:	fld    QWORD PTR [eax-0x30fd1819]
  40fe9d:	jg     0x40feab
  40fe9f:	inc    ecx
	...
  40fea8:	add    BYTE PTR [eax],al
  40feaa:	mul    cl
  40feac:	or     al,0xe9
  40feae:	fs cmp eax,0xe7cca86c
  40feb4:	aam    0x88
  40feb6:	lea    edi,[edi+0x64]
  40feb9:	sahf   
  40feba:	ins    DWORD PTR es:[edi],dx
  40febb:	mov    esi,0x4cc00e0c
  40fec0:	inc    ebp
  40fec1:	test   al,0xcc
  40fec3:	pop    esp
  40fec4:	js     0x40feb7
  40fec6:	mov    ah,0x5f
  40fec8:	icebp  
  40fec9:	mul    BYTE PTR [ebx+0xd88d2e3]
  40fecf:	and    BYTE PTR [ecx+eax*8+0x2d],0xc1
  40fed4:	or     al,0x51
  40fed6:	add    ah,cl
  40fed8:	dec    ebx
  40fed9:	jmp    0xe94d7d12
  40fede:	dec    esp
  40fedf:	pop    edx
  40fee0:	js     0x40fed3
  40fee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fee3:	inc    ebx
  40fee4:	icebp  
  40fee5:	mov    esi,0xbe880cab
  40feea:	mov    ds:0x6b19f25a,al
  40feef:	out    dx,eax
  40fef0:	push   0xffffffe9
  40fef2:	int3   
  40fef3:	pop    edx
  40fef4:	js     0x40fe93
  40fef6:	mov    edx,esp
  40fef8:	add    al,0x81
  40fefa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fefb:	xlat   BYTE PTR ds:[ebx]
  40fefc:	icebp  
  40fefd:	mov    es,WORD PTR [ebp-0x6616f6bf]
  40ff03:	push   es
  40ff04:	loope  0x40ff6e
  40ff06:	adc    BYTE PTR [edi-0xd],cl
  40ff09:	jbe    0x40ff2e
  40ff0b:	jmp    0x41021c
	...
  40ff18:	jmp    0x40ff74
  40ff1a:	js     0x40ff0d
  40ff1c:	and    al,0x59
  40ff1e:	jp     0x40ff7e
  40ff20:	or     ecx,DWORD PTR [eax]
  40ff22:	dec    eax
  40ff23:	push   ebp
  40ff24:	or     eax,DWORD PTR [edx+ebx*4+0xc7f8dc9]
  40ff2b:	add    BYTE PTR [esi],ah
  40ff2d:	jg     0x40ff3b
  40ff2f:	lea    esi,[ebx+0x33]
  40ff32:	lock (bad) 
  40ff34:	mov    ecx,0xe704648e
  40ff39:	jle    0x40ff47
  40ff3b:	call   0x4de482
  40ff40:	ds xor eax,0xe6f6416d
  40ff46:	loop   0x40ffa9
  40ff48:	daa    
  40ff49:	jg     0x40ffaf
  40ff4b:	ja     0x40ff94
  40ff4d:	mov    esi,0x4b83ff0c
  40ff52:	dec    edx
  40ff53:	inc    ecx
  40ff54:	mov    dh,0x3b
  40ff56:	jns    0x40ff60
  40ff58:	into   
  40ff59:	cdq    
  40ff5a:	lock jmp FWORD PTR [ecx-0x89e0515]
  40ff61:	and    DWORD PTR [esi+ebp*8+0x17],0xffffffc5
  40ff66:	or     al,0x68
  40ff68:	add    ebp,esp
  40ff6a:	dec    ebx
  40ff6b:	add    dh,bh
  40ff6d:	or     DWORD PTR [eax+eax*1],0x87936f6
  40ff74:	mov    es,esp
  40ff76:	lock jmp FWORD PTR [ecx]
  40ff79:	or     BYTE PTR [ecx+0xf7],cl
  40ff7f:	add    BYTE PTR [eax],al
  40ff81:	add    BYTE PTR [eax],al
  40ff83:	add    BYTE PTR [eax],al
  40ff85:	add    BYTE PTR [eax],ch
  40ff87:	ss repz push eax
  40ff8a:	mov    BYTE PTR ds:[edx+0x0],ch
  40ff8e:	jbe    0x40ffc5
  40ff90:	jns    0x40ff8e
  40ff92:	dec    ecx
  40ff93:	mov    al,0x4
  40ff95:	call   0x32adce
  40ff9a:	jg     0x40ffdd
  40ff9c:	push   cs
  40ff9d:	add    bl,ah
  40ff9f:	or     ah,dh
  40ffa1:	xor    DWORD PTR [edx+0x37],0x64
  40ffa5:	add    BYTE PTR [ebx+ebp*4],bl
  40ffa8:	icebp  
  40ffa9:	jne    0x40ffc9
  40ffab:	data16 js 0x410025
  40ffae:	iret   
  40ffaf:	mov    cl,0xd5
  40ffb1:	mov    BYTE PTR [edx-0x58ff9d34],dl
  40ffb7:	pop    ebp
  40ffb8:	push   0x130cf41
  40ffbd:	bound  ecx,QWORD PTR [esi+0x834d768]
  40ffc3:	and    BYTE PTR [ecx+0x0],cl
  40ffc6:	out    0x63,eax
  40ffc8:	push   ebp
  40ffc9:	(bad)  
  40ffca:	call   0xc6b4ce1b
  40ffcf:	sbb    BYTE PTR [esi+0x0],ah
  40ffd2:	iret   
  40ffd3:	pop    ecx
  40ffd4:	xchg   esp,eax
  40ffd5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40ffd7:	push   es
  40ffd8:	dec    ecx
  40ffd9:	add    BYTE PTR [edi],bl
  40ffdb:	pop    edx
  40ffdc:	pop    ebp
  40ffdd:	or     BYTE PTR [edi-0x470157af],dh
  40ffe3:	jg     0x40fff2
  40ffe5:	jp     0x40ff97
  40ffe7:	bound  esp,QWORD PTR [eax+0x0]
	...
  40fff2:	add    BYTE PTR [eax],al
  40fff4:	aaa    
  40fff5:	test   DWORD PTR [edx+0x41],ebp
  40fff8:	iret   
  40fff9:	mov    esi,0x670e61ff
  40fffe:	xlat   BYTE PTR ds:[ebx]
  40ffff:	xor    al,0x80
  410001:	pop    DWORD PTR [edi+0x0]
  410004:	ja     0x410055
  410006:	push   ebp
  410007:	inc    DWORD PTR [eax-0x298c31a2]
  41000d:	jbe    0x41006f
  41000f:	add    bh,cl
  410011:	icebp  
  410012:	xchg   ebx,eax
  410013:	addr16 mov ah,0x84
  410016:	inc    edi
  410017:	add    bh,bh
  410019:	icebp  
  41001a:	pop    esp
  41001b:	or     BYTE PTR [edi+0x1d],ah
  41001e:	test   al,0xfe
  410020:	push   eax
  410021:	out    dx,eax
  410022:	mov    edx,0xd6da4878
  410027:	je     0x41006c
  410029:	rcr    BYTE PTR [eax+ecx*1+0x27],cl
  41002d:	mov    eax,ds:0x8030ff5d
  410032:	cmp    al,0xc5
  410034:	int3   
  410035:	jg     0x40ffef
  410037:	mov    ?,WORD PTR [edi*8-0x4f7d28e1]
  41003e:	int    0x3
  410040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410042:	dec    edx
  410043:	push   eax
  410044:	xlat   BYTE PTR ds:[ebx]
  410045:	addr16 pop esp
  410047:	push   ecx
  410048:	add    BYTE PTR [ecx+0x6d],bl
  41004b:	inc    eax
  41004c:	sti    
  41004d:	in     eax,0xe3
  41004f:	jmp    0x410043
  410051:	fisubr DWORD PTR [edx]
  410053:	fcmovbe st,st(5)
  410055:	aas    
  410056:	cwde   
  410057:	cld    
	...
  410060:	add    BYTE PTR [eax],al
  410062:	nop
  410063:	out    0xe3,eax
  410065:	add    ebp,eax
  410067:	sbb    DWORD PTR [ebx+ebx*1+0x33e3be6d],ecx
  41006e:	enter  0xfbd2,0xeb
  410072:	inc    eax
  410073:	push   ds
  410074:	sti    
  410075:	fnstenv [eax-0x4e2582fa]
  41007b:	add    al,0x11
  41007d:	xor    eax,0x8ce3bf17
  410082:	jecxz  0x410034
  410084:	sub    eax,DWORD PTR [ebx-0x31]
  410087:	inc    DWORD PTR [edx]
  410089:	add    al,0x1b
  41008b:	ret    
  41008c:	pop    ebx
  41008d:	aas    
  41008e:	in     eax,dx
  41008f:	mov    esi,0x5e7730e3
  410094:	inc    ecx
  410095:	add    al,0xcf
  410097:	test   BYTE PTR [ebx-0x644e2fb0],ah
  41009d:	cmovl  ebx,DWORD PTR [eax-0x6d]
  4100a1:	xor    al,0xf7
  4100a3:	jg     0x410088
  4100a5:	call   0x661ce7c4
  4100aa:	push   cs
  4100ab:	adc    BYTE PTR [ebx],0xd9
  4100ae:	ret    
  4100af:	xchg   DWORD PTR [ebx+0xd586d43],ebx
  4100b5:	jbe    0x4100e2
  4100b7:	(bad)  
  4100b8:	jae    0x410128
  4100ba:	push   ss
  4100bb:	gs or  al,0xaf
  4100be:	dec    esp
  4100bf:	call   0x1af0:0xc202d40c
	...
  4100ce:	add    BYTE PTR [eax],al
  4100d0:	adc    edx,DWORD PTR [edi]
  4100d2:	repnz dec esi
  4100d4:	neg    BYTE PTR [eax-0x1]
  4100d7:	xchg   edi,eax
  4100d8:	jmp    0x41005a
  4100da:	ja     0x41005e
  4100dc:	es shl eax,cl
  4100df:	mov    BYTE PTR ss:[edi+0x589d87e4],al
  4100e6:	repnz (bad) 
  4100e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100e9:	inc    esi
  4100ea:	iret   
  4100eb:	in     eax,0xcc
  4100ed:	mov    dl,0x85
  4100ef:	add    eax,0xb7f13c52
  4100f4:	lahf   
  4100f5:	in     eax,0xc
  4100f7:	xchg   ebx,eax
  4100f8:	sti    
  4100f9:	push   esi
  4100fa:	js     0x4100ed
  4100fc:	mov    ah,0xbd
  4100fe:	jp     0x4100f6
  410100:	xchg   edi,eax
  410101:	or     BYTE PTR [eax-0x13],cl
  410104:	inc    ebx
  410105:	mov    WORD PTR [ebp+0x31],ds
  410108:	or     al,0x80
  41010a:	test   DWORD PTR [esi+ebx*8],ebx
  41010d:	(bad)  
  41010e:	dec    ebx
  41010f:	jmp    0x554d9760
  410114:	shl    bh,1
  410116:	push   esp
  410117:	dec    ebx
  410118:	or     al,0x80
  41011a:	pop    ecx
  41011b:	shr    ebx,1
  41011d:	fmul   QWORD PTR [ecx+ebp*8]
  410120:	retf   
  410121:	aas    
  410122:	jns    0x4100f2
  410124:	mov    esi,0x876bba67
  410129:	push   esi
  41012a:	pop    ebp
  41012b:	adc    ebx,ecx
  41012d:	jg     0x410110
  41012f:	push   edi
  410130:	in     al,0xc9
  410132:	outs   dx,BYTE PTR ds:[esi]
  410133:	sub    BYTE PTR [eax],al
	...
  41013d:	add    bl,cl
  41013f:	scas   eax,DWORD PTR es:[edi]
  410140:	icebp  
  410141:	add    BYTE PTR [ebx-0x75],cl
  410144:	in     al,0xc3
  410146:	xchg   edi,eax
  410147:	aaa    
  410148:	repz call 0x32bcc0
  41014e:	dec    ebp
  41014f:	or     BYTE PTR [edx-0x80],0xf0
  410153:	jnp    0x4101cc
  410155:	cli    
  410156:	push   0x3fc03f2f
  41015b:	cmp    bl,dh
  41015d:	inc    DWORD PTR [ecx-0x6c75fd4]
  410163:	lds    esi,FWORD PTR [ebp-0xcd0c401]
  410169:	jne    0x410159
  41016b:	push   0x2a
  41016d:	jbe    0x410110
  41016f:	aaa    
  410170:	push   ebx
  410171:	pop    esi
  410172:	lahf   
  410173:	cmp    al,0xe
  410175:	add    BYTE PTR [ebx],bl
  410177:	add    al,0xe6
  410179:	sub    DWORD PTR [edx+0x4c00642e],0xffffff9f
  410180:	icebp  
  410181:	jne    0x410141
  410183:	push   0xffffffc4
  410185:	jne    0x410148
  410187:	test   DWORD PTR cs:[ebp-0x3e],eax
  41018b:	jecxz  0x410199
  41018d:	push   0xffffffa6
  41018f:	jmp    0x64:0x7bf76264
  410196:	mov    dh,0x82
  410198:	mov    eax,gs
  41019a:	sbb    bh,BYTE PTR [ebx+0x42adfff1]
  4101a0:	jle    0x4101c1
	...
  4101aa:	add    BYTE PTR [eax],al
  4101ac:	out    0x63,al
  4101ae:	dec    esi
  4101af:	add    BYTE PTR [ecx+0x2e],0x42
  4101b3:	push   0xbee18266
  4101b8:	push   cs
  4101b9:	(bad)  
  4101ba:	outs   dx,BYTE PTR ds:[esi]
  4101bb:	inc    ecx
  4101bc:	jbe    0x410150
  4101be:	icebp  
  4101bf:	jne    0x41021f
  4101c1:	push   0x42
  4101c3:	mov    eax,ds:0xe7d9edcf
  4101c8:	div    BYTE PTR [eax-0x27]
  4101cb:	dec    BYTE PTR [eax+0x53]
  4101ce:	(bad)  
  4101d0:	mov    edx,0xc2cbe650
  4101d5:	int    0xd9
  4101d7:	enter  0x5c0d,0xe
  4101db:	push   ebp
  4101dc:	push   esp
  4101dd:	lods   al,BYTE PTR ds:[esi]
  4101de:	(bad)  
  4101df:	ret    
  4101e0:	and    esi,DWORD PTR [edx]
  4101e2:	push   cs
  4101e3:	push   0xffffffea
  4101e5:	lods   eax,DWORD PTR ds:[esi]
  4101e6:	pop    ebx
  4101e7:	or     BYTE PTR [edi],ah
  4101e9:	cmp    BYTE PTR [ebp-0x1],bl
  4101ec:	or     bh,cl
  4101ee:	dec    ebx
  4101ef:	cld    
  4101f0:	ja     0x41025a
  4101f2:	push   cs
  4101f3:	out    dx,eax
  4101f4:	cmp    DWORD PTR [eax-0x6e],eax
  4101f7:	popa   
  4101f8:	mov    gs,WORD PTR [eax+0x66]
  4101fb:	mov    al,0x6d
  4101fd:	daa    
  4101fe:	push   cs
  4101ff:	call   FWORD PTR [edx+0x50]
  410202:	out    0x5a,al
  410204:	cs ins DWORD PTR es:[edi],dx
  410206:	fsin   
  410208:	pop    edx
  410209:	test   cl,bl
  41020b:	je     0x4101e4
  41020d:	outs   dx,BYTE PTR ds:[esi]
  41020e:	ja     0x410284
	...
  410218:	add    BYTE PTR [eax],al
  41021a:	rcl    BYTE PTR [esi-0x3f],0xc1
  41021e:	shl    DWORD PTR [esi+0x3d],cl
  410221:	mov    esp,DWORD PTR [ebx+0x35fbccea]
  410227:	addr16 fs mov al,cs:0xac
  41022d:	call   0xff1ab614
  410232:	inc    esi
  410233:	pushf  
  410234:	aam    0x67
  410236:	iret   
  410237:	data16 jmp 0x4101f7
  41023a:	test   DWORD PTR [ecx],0xbecf416c
  410240:	mov    eax,0xdb670e61
  410245:	je     0x41021e
  410247:	jg     0x4101e4
  410249:	and    ebp,DWORD PTR [esi]
  41024b:	push   ebp
  41024c:	xchg   ebx,eax
  41024d:	imul   ecx,edi,0x7f
  410250:	mov    dl,BYTE PTR [ebp+0x45063de8]
  410256:	iret   
  410257:	out    0x93,eax
  410259:	popa   
  41025a:	mov    ?,WORD PTR [edi+0x72]
  41025d:	push   eax
  41025e:	(bad)  
  41025f:	addr16 in eax,dx
  410261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410262:	xor    DWORD PTR [ebp+0x63],edx
  410265:	push   eax
  410266:	sub    edx,DWORD PTR [ebp-0x2f]
  410269:	or     esi,DWORD PTR [edi]
  41026b:	xchg   ebp,eax
  41026c:	fcom   st(6)
  41026e:	sbb    DWORD PTR [edi+0x26],eax
  410271:	call   DWORD PTR [eax]
  410273:	lods   al,BYTE PTR ds:[esi]
  410274:	outs   dx,BYTE PTR ds:[esi]
  410275:	out    0x4d,eax
  410277:	cmp    al,0x48
  410279:	mov    bl,BYTE PTR [ebx+0xf17e6f]
	...
  410287:	add    BYTE PTR [esi+0x7f],ah
  41028a:	push   0x22aff340
  41028f:	push   eax
  410290:	xlat   BYTE PTR ds:[ebx]
  410291:	jmp    0x6f9cd979
  410296:	adc    dh,BYTE PTR [ecx]
  410298:	mov    ebx,0xa85023fa
  41029d:	or     BYTE PTR [ecx-0x1c16a729],bh
  4102a3:	imul   ecx,edi,0xcf01f2e7
  4102a9:	jg     0x4102a5
  4102ab:	dec    edi
  4102ac:	ret    
  4102ad:	jmp    0x7c5fd894
  4102b2:	pop    ebp
  4102b3:	add    al,0x35
  4102b5:	sbb    bl,0xbd
  4102b8:	cs and bl,0x73
  4102bc:	xchg   ecx,eax
  4102bd:	retf   0xecbf
  4102c0:	or     ah,cl
  4102c2:	jecxz  0x4102c7
  4102c4:	xchg   esi,eax
  4102c5:	inc    ecx
  4102c6:	loopne 0x4102cb
  4102c8:	and    cl,BYTE PTR [ecx]
  4102ca:	or     eax,0xf1404ec5
  4102cf:	bound  edi,QWORD PTR [eax-0x9047a95]
  4102d5:	jg     0x410356
  4102d7:	and    al,0x77
  4102d9:	(bad)  
  4102da:	icebp  
  4102db:	sbb    al,0xc7
  4102dd:	push   esp
  4102de:	js     0x4102c1
  4102e0:	mov    dh,0x7f
  4102e2:	icebp  
  4102e3:	cld    
  4102e4:	xor    BYTE PTR [ebp+0x5f],dl
  4102e7:	sar    DWORD PTR [ecx+0xce7814],1
	...
  4102f5:	add    BYTE PTR [edi-0x55],al
  4102f8:	lock pop ecx
  4102fa:	mov    ch,0x7f
  4102fc:	jmpw   0x57b4
  410300:	push   cs
  410301:	jmp    0xf9b957d2
  410306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410307:	push   esp
  410308:	repnz fisttp DWORD PTR [eax]
  41030b:	out    0xc,al
  41030d:	ror    esp,cl
  41030f:	addr16 je 0x4102dd
  410312:	int3   
  410313:	jg     0x4102b1
  410315:	adc    BYTE PTR ss:[ebx-0x1b],0xf9
  41031a:	outs   dx,DWORD PTR ds:[esi]
  41031b:	jg     0x410329
  41031d:	xor    BYTE PTR ds:0x47b40c84,cl
  410323:	push   0xad332d8e
  410328:	lea    ecx,[esp+eax*8-0x41386ad]
  41032f:	dec    eax
  410330:	iret   
  410331:	aad    0xcc
  410333:	push   es
  410334:	pop    eax
  410335:	fld    QWORD PTR [edi+0x71]
  410338:	jg     0x4102de
  41033a:	inc    esp
  41033b:	ret    
  41033c:	jmpw   0xcfbb
  410340:	add    dh,bl
  410342:	or     DWORD PTR [eax-0x3384169a],ecx
  410348:	sbb    dh,cl
  41034a:	mov    esi,0x360087ab
  41034f:	ret    0xc75e
  410352:	mov    bl,0xf7
  410354:	icebp  
  410355:	jmp    DWORD PTR [esi+0x7f]
  410358:	test   DWORD PTR [ebp+0x0],edx
	...
  410363:	add    dh,bl
  410365:	pop    es
  410366:	sbb    al,0x8d
  410368:	mov    bl,0xf7
  41036a:	inc    ecx
  41036b:	lea    esi,[ebx+0x566a423b]
  410371:	sub    al,0x79
  410373:	mov    eax,0x83009159
  410378:	retf   
  410379:	div    ecx
  41037b:	jae    0x410390
  41037d:	cli    
  41037e:	jo     0x410340
  410380:	mov    ecx,0x23ff18c1
  410385:	dec    edi
  410386:	repz aaa 
  410388:	test   eax,0x3ff00c1
  41038d:	xchg   ecx,esi
  41038f:	push   ebp
  410390:	push   ds
  410391:	sub    al,0x3b
  410393:	call   0x4de44e
  410398:	jne    0x4103ad
  41039a:	push   cs
  41039b:	jmp    FWORD PTR [ebx]
  41039d:	jmp    0x410417
  41039f:	loopne 0x41032e
  4103a1:	cmc    
  4103a2:	xchg   BYTE PTR [ebp+0x5e],dl
  4103a5:	pop    es
  4103a6:	sbb    al,0xff
  4103a8:	inc    ebx
  4103a9:	div    edx
  4103ab:	push   edx
  4103ac:	fimul  WORD PTR [ebx+0x7ed2c2c3]
  4103b2:	push   edi
  4103b3:	mov    ecx,edx
  4103b5:	add    dh,cl
  4103b7:	clc    
  4103b8:	enter  0xf32b,0x57
  4103bc:	cmp    eax,0x948b1ca2
  4103c1:	stc    
  4103c2:	mov    al,bh
  4103c4:	mov    eax,0x50f32e
	...
  4103d1:	add    ah,bh
  4103d3:	jnp    0x4103c6
  4103d5:	jne    0x410375
  4103d7:	mov    ah,0xc
  4103d9:	dec    edi
  4103db:	mov    bl,0xf8
  4103dd:	(bad)  
  4103de:	sbb    eax,0xfabf8385
  4103e3:	scas   al,BYTE PTR es:[edi]
  4103e4:	lds    eax,FWORD PTR [ebx+edi*2-0x300121ee]
  4103eb:	push   0xab54000e
  4103f0:	sar    ch,0x60
  4103f3:	sbb    DWORD PTR [edx+0x11],esi
  4103f6:	dec    edx
  4103f7:	fcmovnu st,st(4)
  4103f9:	std    
  4103fa:	push   eax
  4103fb:	jmp    0x68939138
  410400:	(bad)  
  410402:	inc    eax
  410403:	js     0x410457
  410405:	adc    BYTE PTR [eax],bh
  410407:	mov    eax,eax
  410409:	std    
  41040a:	xor    cl,cl
  41040c:	fst    QWORD PTR [ecx-0x25]
  41040f:	in     eax,0x9b
  410411:	sti    
  410412:	and    ecx,ebx
  410414:	(bad)  
  410416:	pushf  
  410417:	jnp    0x4103a4
  410419:	mov    esp,0xfedda9cf
  41041e:	or     BYTE PTR [ebx],ch
  410420:	cli    
  410421:	(bad)  
  410422:	jp     0x41045c
  410424:	fbstp  TBYTE PTR [ebx+ecx*8-0x17]
  410428:	fidiv  WORD PTR [edi+eax*8-0x40]
  41042c:	add    eax,0x89a0e8ff
  410431:	(bad)  
  410432:	mov    edi,0xfb8b99
	...
  41043f:	add    cl,bl
  410441:	jo     0x410420
  410443:	je     0x410431
  410445:	jl     0x4103ec
  410447:	mov    ah,BYTE PTR [edx+0x6f]
  41044a:	fdivp  st(6),st
  41044c:	ror    dh,0xfa
  41044f:	inc    BYTE PTR [edx-0x4f012181]
  410455:	dec    edx
  410456:	cmp    BYTE PTR [eax],cl
  410458:	or     BYTE PTR [eax+0x7fcf0fca],ah
  41045e:	xor    BYTE PTR [edi-0x5c],bh
  410461:	jmp    DWORD PTR [edi-0x24ae6d35]
  410467:	cmp    dl,BYTE PTR [ebx+ebp*4-0x31]
  41046b:	jle    0x41044b
  41046d:	add    ah,BYTE PTR [ecx-0x35]
  410470:	jp     0x4104c3
  410472:	mov    bl,0x33
  410474:	in     eax,0x7f
  410476:	dec    ebp
  410477:	add    al,0x68
  410479:	retf   
  41047a:	iret   
  41047b:	sar    dh,cl
  41047d:	xchg   edi,eax
  41047e:	pusha  
  41047f:	ret    
  410480:	jecxz  0x41045f
  410482:	stos   BYTE PTR es:[edi],al
  410483:	dec    eax
  410484:	push   ebx
  410485:	and    bl,0x3
  410488:	iret   
  410489:	out    dx,eax
  41048a:	outs   dx,BYTE PTR ds:[esi]
  41048b:	js     0x4104c5
  41048d:	push   edx
  41048e:	mov    edx,edx
  410490:	inc    ebp
  410491:	outs   dx,BYTE PTR ds:[esi]
  410492:	pusha  
  410493:	dec    eax
  410494:	xor    esi,DWORD PTR [eax+0x52248868]
  41049a:	arpl   dx,dx
  41049c:	nop
  41049d:	in     eax,0xf3
  41049f:	shl    BYTE PTR [ebx+0x58],cl
  4104a2:	push   edx
  4104a3:	rol    BYTE PTR [eax],cl
	...
  4104ad:	add    BYTE PTR [ecx],dl
  4104af:	push   ecx
  4104b0:	mov    dh,0xff
  4104b2:	pop    eax
  4104b3:	std    
  4104b4:	ror    bh,0x0
  4104b7:	add    DWORD PTR [eax+0x30134a26],esi
  4104bd:	shl    ecx,1
  4104bf:	push   eax
  4104c0:	push   esp
  4104c1:	shl    BYTE PTR [ebx+0x6f],cl
  4104c4:	and    bl,BYTE PTR [eax-0x2d]
  4104c7:	push   eax
  4104c8:	xchg   ecx,eax
  4104c9:	sti    
  4104ca:	and    DWORD PTR [edi-0x1a],0x6750d1d2
  4104d1:	retf   0xefd8
  4104d4:	add    al,BYTE PTR [eax-0x3d]
  4104d7:	out    dx,eax
  4104d8:	jo     0x4104c3
  4104da:	dec    eax
  4104db:	fs inc ebx
  4104dd:	jle    0x41053a
  4104df:	push   edi
  4104e0:	or     eax,0x86517ef7
  4104e5:	fstp   TBYTE PTR [ebp+0xb]
  4104e8:	cmc    
  4104e9:	out    0x7e,eax
  4104eb:	push   ecx
  4104ec:	repnz cmp edx,DWORD PTR [ebx-0x30543c4f]
  4104f3:	jg     0x41054c
  4104f5:	bound  ebp,QWORD PTR [edi+0x51]
  4104f8:	js     0x4104eb
  4104fa:	lahf   
  4104fb:	retf   
  4104fc:	adc    al,0xd1
  4104fe:	stos   DWORD PTR es:[edi],eax
  4104ff:	int    0xf1
  410501:	mov    dh,0x7e
  410503:	retf   
  410504:	add    cl,al
  410506:	rcr    dh,0xc
  410509:	jmp    0xa9cf352b
  41050e:	leave  
  41050f:	scas   eax,DWORD PTR es:[edi]
  410510:	icebp  
  410511:	sbb    al,0x0
	...
  41051b:	add    bh,cl
  41051d:	push   eax
  41051e:	js     0x410511
  410520:	and    al,0x93
  410522:	jle    0x4104aa
  410524:	push   ds
  410525:	push   ecx
  410526:	js     0x4104fd
  410528:	pop    ds
  410529:	retf   
  41052a:	sbb    al,0x76
  41052c:	xor    BYTE PTR [edi-0x1c],0xbe
  410530:	jp     0x410582
  410532:	repnz xor BYTE PTR [ecx],dl
  410535:	ins    BYTE PTR es:[edi],dx
  410536:	or     al,0xb4
  410538:	xchg   ebx,eax
  410539:	repnz fadd QWORD PTR fs:[ecx+edx*2]
  41053e:	js     0x410531
  410540:	and    al,0x59
  410542:	jl     0x41058a
  410544:	push   ds
  410545:	push   ecx
  410546:	js     0x410535
  410548:	adc    al,0x7c
  41054a:	ins    BYTE PTR es:[edi],dx
  41054b:	jmp    0x2e9dc51c
  410550:	js     0x4104d5
  410552:	icebp  
  410553:	pushf  
  410554:	in     al,0x57
  410556:	add    eax,0xf250ff9b
  41055b:	pushf  
  41055c:	ror    BYTE PTR [esi+0x78],0xf9
  410560:	lahf   
  410561:	aam    0x14
  410563:	add    dh,bl
  410565:	cmp    eax,0xab1ff7d
  41056a:	int3   
  41056b:	adc    al,0xb6
  41056d:	xchg   esi,eax
  41056e:	test   esp,ebp
  410570:	aaa    
  410571:	cmp    dh,bl
  410573:	div    DWORD PTR [ecx-0x318a0cd0]
  410579:	into   
  41057a:	mov    BYTE PTR [eax],al
  41057c:	mov    ds:0x50f330,al
	...
  410589:	add    BYTE PTR [ecx+0x79e804b6],dl
  41058f:	repz call FWORD PTR ds:[esp+eax*4]
  410594:	data16 add BYTE PTR [esi],cl
  410597:	xor    DWORD PTR [edi],ecx
  410599:	add    BYTE PTR [esi-0x32],dh
  41059c:	mov    BYTE PTR [eax],al
  41059e:	cs xor bl,dh
  4105a1:	push   eax
  4105a2:	mov    esp,0x4675f330
  4105a7:	lods   eax,DWORD PTR ds:[esi]
  4105a8:	or     al,0x6a
  4105aa:	sub    edx,DWORD PTR ss:[eax]
  4105ad:	pusha  
  4105ae:	es or  ecx,0xffffff85
  4105b2:	mov    dh,0x27
  4105b4:	repz inc DWORD PTR [esi]
  4105b7:	or     DWORD PTR [eax+eax*1],0x69
  4105bb:	push   es
  4105bc:	(bad)  
  4105bd:	div    DWORD PTR [ecx+0x26000c2f]
  4105c3:	or     ecx,0xffffff85
  4105c6:	sahf   
  4105c7:	daa    
  4105c8:	repz push esi
  4105cb:	or     BYTE PTR [eax+eax*1],0xa9
  4105cf:	add    eax,0x2fb1f7f6
  4105d4:	repnz push esi
  4105d7:	add    BYTE PTR [ebp+0x1bcbfe55],0x6a
  4105de:	out    0xcd,al
  4105e0:	mov    al,dh
  4105e2:	mov    ecx,0xcf50f32f
  4105e7:	jecxz  0x410573
  4105e9:	jmp    0x4105a3
  4105eb:	jge    0x4105c9
  4105ed:	dec    edi
	...
  4105f6:	add    BYTE PTR [eax],al
  4105f8:	dec    edx
  4105f9:	fcmovnbe st,st(5)
  4105fb:	div    BYTE PTR [eax+0x22ff3f4d]
  410601:	sub    ebp,ebx
  410603:	je     0x4105d8
  410605:	pop    ebp
  410606:	pop    eax
  410607:	or     BYTE PTR ds:0xb774c359,ah
  41060d:	sub    eax,0xf34c443f
  410612:	shl    dh,1
  410614:	cmp    BYTE PTR ds:0x64530f09,0x9
  41061b:	add    bh,cl
  41061d:	fstp   DWORD PTR [ebx-0x3dea9f15]
  410623:	call   ecx
  410625:	in     al,0xf1
  410627:	add    bh,cl
  410629:	pop    eax
  41062a:	retf   
  41062b:	test   BYTE PTR [ebx-0xb],bh
  41062e:	sar    esi,0xcf
  410631:	pop    eax
  410632:	sar    DWORD PTR [ebp+0x416f1db7],cl
  410638:	iret   
  410639:	rol    DWORD PTR [ebx-0x3e32cb01],cl
  41063f:	dec    edi
  410640:	aaa    
  410641:	sbb    al,0x22
  410643:	add    bh,cl
  410645:	jecxz  0x41060f
  410647:	jae    0x4105d6
  410649:	popf   
  41064a:	adc    ebx,0x18
  41064d:	lods   eax,DWORD PTR ds:[esi]
  41064e:	rol    DWORD PTR [eax],0xcf
  410651:	lds    eax,FWORD PTR [edx+0x4939fe67]
  410657:	add    BYTE PTR [edx-0x25],cl
  41065a:	or     ah,bh
	...
  410664:	add    BYTE PTR [eax],al
  410666:	lock mov WORD PTR [eax],?
  410669:	call   0x4efba0
  41066e:	dec    edx
  41066f:	cwde   
  410670:	push   esp
  410671:	and    edx,DWORD PTR [eax]
  410673:	jg     0x4106d5
  410675:	mov    eax,0x2134dd9
  41067a:	iret   
  41067b:	pop    esp
  41067c:	pop    edx
  41067d:	pop    esp
  41067e:	(bad)  
  41067f:	loopne 0x410625
  410681:	add    ecx,DWORD PTR [edx+0x3]
  410684:	in     al,0xcf
  410686:	mov    cl,0x4d
  410688:	xchg   esp,eax
  410689:	fist   DWORD PTR [edx-0x53]
  41068c:	jecxz  0x410691
  41068e:	dec    edx
  41068f:	inc    eax
  410690:	ror    DWORD PTR [eax+0x3e3806d],cl
  410696:	daa    
  410697:	imul   eax,DWORD PTR [esi+0x45],0xffffffcf
  41069b:	cli    
  41069c:	pusha  
  41069d:	add    eax,DWORD PTR [edi+0x6733c34d]
  4106a3:	xlat   BYTE PTR ds:[ebx]
  4106a4:	inc    ebx
  4106a5:	add    al,0xcf
  4106a7:	js     0x41064c
  4106a9:	push   edi
  4106aa:	fiadd  WORD PTR [eax]
  4106ac:	stc    
  4106ad:	pushf  
  4106ae:	adc    eax,0xc803e3bf
  4106b3:	add    esp,DWORD PTR [ebp+0x3]
  4106b6:	iret   
  4106b7:	jg     0x41064b
  4106b9:	cwde   
  4106ba:	xor    BYTE PTR [ebp-0x65],dl
  4106bd:	into   
  4106be:	push   ecx
  4106bf:	add    eax,DWORD PTR [esi+edx*8-0x6774b2c7]
  4106c6:	and    al,0x55
  4106c8:	jae    0x410698
	...
  4106d2:	add    BYTE PTR [eax],al
  4106d4:	pop    ecx
  4106d5:	add    eax,DWORD PTR [eax+0x514d21d6]
  4106db:	mov    BYTE PTR [eax],al
  4106dd:	push   ebp
  4106de:	imul   ecx,esi,0xffffff80
  4106e1:	ftst   
  4106e3:	pop    ecx
  4106e4:	iret   
  4106e5:	(bad)  
  4106e7:	pop    ecx
  4106e8:	iret   
  4106e9:	(bad)  
  4106eb:	adc    BYTE PTR [ebx+0x60],0x33
  4106ef:	into   
  4106f0:	icebp  
  4106f1:	scas   eax,DWORD PTR es:[edi]
  4106f2:	xor    bh,al
  4106f4:	aaa    
  4106f5:	mov    ecx,0x78cca80c
  4106fa:	int3   
  4106fb:	mov    ch,0x91
  4106fd:	dec    esp
  4106fe:	js     0x4106fd
  410700:	add    DWORD PTR [edx*8-0xdb266ea],edx
  410707:	pop    esp
  410708:	jo     0x41075f
  41070a:	repnz push cs
  41070c:	mov    ebx,edx
  41070e:	sbb    al,0x6
  410710:	push   edi
  410711:	xor    dl,bh
  410713:	(bad)  
  410714:	call   0xf24d:0x92f71d64
  41071b:	xor    al,0x68
  41071d:	push   ebp
  41071e:	repnz out 0x73,al
  410721:	(bad)  
  410722:	push   edx
  410723:	jmp    0xd6515ff4
  410728:	sbb    BYTE PTR [ecx+esi*8-0x6c],dh
  41072c:	fwait
  41072d:	push   ebp
  41072e:	repnz mov BYTE PTR [edx-0x65491eed],0x4d
  410736:	repnz cmp al,0x0
	...
  410741:	add    BYTE PTR [ebx+0x4d],bl
  410744:	mov    eax,0xf24d8295
  410749:	xchg   ecx,eax
  41074a:	imul   ecx,DWORD PTR [ebx-0xe],0xe1131a9e
  410751:	sahf   
  410752:	adc    cl,BYTE PTR [ebp-0x1b]
  410755:	or     edx,ebp
  410757:	jg     0x410765
  410759:	mov    al,0xd
  41075b:	jo     0x410769
  41075d:	adc    al,0xa6
  41075f:	pop    eax
  410760:	mov    gs,WORD PTR [ebp-0xb0e4dc5]
  410766:	sbb    BYTE PTR [esi+eax*1-0x3a],ah
  41076a:	int3   
  41076b:	jg     0x410772
  41076d:	sub    DWORD PTR [eax+0xd205282],esp
  410773:	js     0x410781
  410775:	cmp    bl,dh
  410777:	add    ch,cl
  410779:	add    ah,ah
  41077b:	mov    cl,0x8d
  41077e:	xor    ebp,DWORD PTR [edx+eax*2]
  410781:	push   edx
  410782:	cdq    
  410783:	mov    ah,0x0
  410785:	call   0x33d449
  41078a:	std    
  41078b:	or     BYTE PTR [ebp+0x429024d],al
  410791:	ss test eax,0xba294df5
  410797:	jle    0x4107e0
  410799:	aam    0x67
  41079b:	add    ch,dh
  41079d:	adc    al,0x24
  41079f:	cs daa 
  4107a1:	imul   BYTE PTR [edi]
  4107a3:	mov    bl,0xdc
  4107a5:	jmp    0x4107a7
	...
  4107af:	add    BYTE PTR [esi-0x1d49fe8b],cl
  4107b5:	imul   esp,eax,0x6d971e50
  4107bb:	inc    ecx
  4107bc:	jbe    0x410788
  4107be:	dec    eax
  4107bf:	fdiv   DWORD PTR [esi+0x665f022b]
  4107c5:	jg     0x410754
  4107c7:	les    edi,FWORD PTR [edx-0x36]
  4107ca:	dec    eax
  4107cb:	fadd   st,st(6)
  4107cd:	cmp    al,0x79
  4107cf:	ror    BYTE PTR [esi+0x29ff7819],1
  4107d5:	(bad)  
  4107d6:	dec    eax
  4107d7:	shl    al,1
  4107d9:	add    al,dh
  4107db:	adc    al,0xe4
  4107dd:	adc    BYTE PTR [ebp-0xdc37d9b],cl
  4107e3:	jmp    DWORD PTR [esi]
  4107e5:	cmp    al,0x79
  4107e7:	aam    0xbe
  4107e9:	xchg   esi,eax
  4107ea:	ins    DWORD PTR es:[edi],dx
  4107eb:	inc    ecx
  4107ec:	ss retf 0xd848
  4107f0:	mov    dh,0x2b
  4107f2:	rcr    BYTE PTR [esi+0x26],cl
  4107f5:	jg     0x410784
  4107f7:	(bad)  
  4107f8:	cli    
  4107f9:	leave  
  4107fa:	dec    eax
  4107fb:	fmul   st,st(7)
  4107fd:	or     cl,al
  4107ff:	je     0x410820
  410801:	rcl    DWORD PTR [ebx+0x76c1f075],0x44
  410808:	(bad)  
  410809:	fisttp DWORD PTR [edx-0x34]
  41080c:	jg     0x41079f
  41080e:	pop    edx
  41080f:	shl    BYTE PTR [edi-0x6],1
  410812:	ins    BYTE PTR es:[edi],dx
  410813:	inc    ecx
	...
  41081c:	add    BYTE PTR [eax],al
  41081e:	iret   
  41081f:	mov    eax,ds:0x1817cf1a
  410824:	push   cs
  410825:	call   0xff01f3a4
  41082a:	les    ebx,FWORD PTR [eax+0x585883f0]
  410830:	push   cs
  410831:	add    BYTE PTR [esi+0x23],dl
  410834:	mov    dh,0x82
  410836:	and    ah,BYTE PTR [ebp-0x29acf0f3]
  41083c:	or     eax,0x5c61cf00
  410841:	or     al,0x77
  410843:	mov    ds:0x7cf0026,al
  410848:	jmp    0x719797cf
  41084d:	inc    esp
  41084e:	aas    
  41084f:	inc    ecx
  410850:	pop    esp
  410851:	or     al,0x58
  410853:	mov    ds:0x24dafe9c,eax
  410858:	jbe    0x41089e
  41085a:	(bad)  
  41085b:	sbb    DWORD PTR [eax+ecx*8+0x40],ebx
  41085f:	fwait
  410860:	int3   
  410861:	(bad)  
  410862:	xchg   edx,eax
  410863:	lods   al,BYTE PTR ds:[esi]
  410864:	or     BYTE PTR [eax],al
  410866:	iret   
  410867:	pop    eax
  410868:	mov    edi,DWORD PTR [esi+eiz*2]
  41086b:	popf   
  41086c:	inc    edi
  41086d:	add    bh,cl
  41086f:	dec    esp
  410870:	lea    edx,ds:[edx-0x3195c740]
  410877:	jle    0x410881
  410879:	push   0xffffffcf
  41087b:	stos   DWORD PTR es:[edi],eax
  41087c:	dec    ebx
  41087d:	mov    al,0x7f
  41087f:	jg     0x41085e
  410881:	add    eax,DWORD PTR [eax]
	...
  41088b:	add    BYTE PTR [edx-0x3c],bl
  41088e:	and    esi,DWORD PTR [eax+eax*1]
  410891:	je     0x41081f
  410893:	aas    
  410894:	mov    ?,WORD PTR [edi-0x12]
  410897:	ret    
  410898:	jl     0x410827
  41089a:	dec    cx
  41089c:	sub    edi,DWORD PTR [edi-0x49]
  41089f:	pop    ss
  4108a0:	dec    esp
  4108a1:	int3   
  4108a2:	rol    DWORD PTR [ebx],cl
  4108a4:	arpl   WORD PTR [edi+0x6e],si
  4108a7:	xor    DWORD PTR [edi+0x80622e1],edi
  4108ad:	adc    BYTE PTR [edx],0x51
  4108b0:	xlat   BYTE PTR ds:[ebx]
  4108b1:	dec    eax
  4108b2:	xchg   ecx,eax
  4108b3:	mov    edi,DWORD PTR [ecx+0x3bcb3fd3]
  4108b9:	jl     0x410856
  4108bb:	push   es
  4108bc:	iret   
  4108bd:	pop    eax
  4108be:	xor    bl,ah
  4108c0:	aas    
  4108c1:	dec    esp
  4108c2:	sti    
  4108c3:	retf   0xd399
  4108c6:	pop    ds
  4108c7:	fsub   QWORD PTR [edx-0x77fc1c54]
  4108cd:	sar    DWORD PTR [ebx-0x25307d25],cl
  4108d3:	retf   0xd379
  4108d6:	mov    bl,0xdb
  4108d8:	jp     0x4108a9
  4108da:	retf   0xaca
  4108dd:	aaa    
  4108de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108df:	mul    DWORD PTR [eax-0x4c]
  4108e2:	outs   dx,BYTE PTR ds:[esi]
  4108e3:	xlat   BYTE PTR ds:[ebx]
  4108e4:	dec    ebp
  4108e5:	inc    esp
  4108e6:	lods   al,BYTE PTR ds:[esi]
  4108e7:	js     0x4108f4
  4108e9:	dec    esp
  4108ea:	xor    al,0x5c
  4108ec:	add    bl,ch
  4108ee:	and    al,0x4
	...
  4108f8:	add    BYTE PTR [eax],al
  4108fa:	mov    ch,0x82
  4108fc:	or     eax,0x6a2a704
  410901:	inc    ebp
  410902:	iret   
  410903:	push   edi
  410904:	xchg   BYTE PTR [eax],ch
  410906:	iret   
  410907:	jg     0x410971
  410909:	ret    
  41090a:	shl    edi,1
  41090c:	or     al,0xa9
  41090e:	int3   
  41090f:	jg     0x41091d
  410911:	(bad)  
  410912:	fisttp WORD PTR [ebx-0x7a]
  410915:	sti    
  410916:	xchg   ebx,eax
  410918:	hlt    
  410919:	mov    ecx,0x56f0d415
  41091e:	ret    0x876b
  410921:	sub    ebp,esi
  410923:	add    BYTE PTR [ebx-0x72803317],dl
  410929:	mov    esp,0x6d034914
  41092e:	push   0xde9f248
  410933:	(bad)  
  410934:	fsubr  st,st(1)
  410936:	int3   
  410937:	jg     0x410945
  410939:	movaps xmm1,XMMWORD PTR es:0xc97fcce9
  410941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410942:	jl     0x4108e4
  410944:	or     al,0xe9
  410946:	int3   
  410947:	inc    eax
  410948:	dec    eax
  410949:	sub    eax,0xe90c7fcc
  41094e:	sbb    DWORD PTR [esp+esi*8+0x47fb9a62],esi
  410955:	mov    ch,0xc3
  410957:	cli    
  410958:	inc    edi
  410959:	mov    ecx,0xd60bd5bb
	...
  410966:	add    BYTE PTR [eax],al
  410968:	or     BYTE PTR [eax-0xe],cl
  41096b:	cmp    esi,DWORD PTR [edi+0x75]
  41096e:	int3   
  41096f:	cmp    al,0x9f
  410971:	cld    
  410972:	outs   dx,DWORD PTR ds:[esi]
  410973:	lods   eax,DWORD PTR ds:[esi]
  410974:	int3   
  410975:	rol    BYTE PTR [edx+0x6a],cl
  410978:	adc    BYTE PTR [ecx*1+0x57d80d35],dh
  41097f:	or     cl,BYTE PTR [edi+edi*2+0x607f14f1]
  410986:	loop   0x4109bc
  410988:	sar    DWORD PTR [edi+0x5],cl
  41098b:	test   eax,0x6a759f
  410990:	jns    0x410915
  410992:	or     al,0x0
  410994:	lahf   
  410995:	mov    ah,al
  410997:	jmp    0x4109c2
  410999:	aas    
  41099a:	dec    ecx
  41099b:	enter  0x7c26,0xc
  41099f:	add    BYTE PTR [ecx-0x48],dh
  4109a2:	(bad)  
  4109a3:	call   FWORD PTR [ebx]
  4109a5:	sbb    bl,dh
  4109a7:	jne    0x410997
  4109a9:	and    ebp,eax
  4109ab:	std    
  4109ac:	xor    DWORD PTR [esi],0x2bca75f3
  4109b2:	xor    al,0x5d
  4109b4:	idiv   BYTE PTR [ebx-0x73]
  4109b7:	jge    0x410977
  4109b9:	cmp    DWORD PTR [eax+0x8],0xffffffa1
  4109bd:	mov    eax,0x9ea2e8d4
  4109c2:	or     al,0x0
  4109c4:	ffree  st(7)
  4109c6:	xchg   BYTE PTR [ebp-0x22],dl
  4109c9:	les    ebx,FWORD PTR [ebx]
  4109cb:	inc    DWORD PTR [eax]
	...
  4109d5:	add    BYTE PTR [ebx+0x3b],bl
  4109d8:	repz push edx
  4109da:	sahf   
  4109db:	les    ebx,FWORD PTR [eax-0x4]
  4109de:	sbb    eax,0xa275f34e
  4109e3:	cmp    BYTE PTR [eax+ecx*1-0x11],bl
  4109e7:	cmp    eax,0xc4cb000e
  4109ec:	in     eax,0x83
  4109ee:	sub    ah,BYTE PTR [ebx+0x58]
  4109f1:	and    ebx,0xffffffda
  4109f4:	outs   dx,BYTE PTR ds:[esi]
  4109f5:	inc    ecx
  4109f6:	xor    WORD PTR [edi+0x1e],0x39
  4109fb:	inc    esi
  4109fc:	xchg   ebp,eax
  4109fd:	arpl   WORD PTR [edi+0x66000b7b],si
  410a03:	xor    DWORD PTR [edx+0xcc3059d],0xffffffeb
  410a0a:	cmp    ecx,esp
  410a0c:	retf   
  410a0d:	es xor al,0xfc
  410a10:	mov    DWORD PTR [edx],0x3d8776cf
  410a16:	iret   
  410a17:	imul   edx,edi,0xffffff82
  410a1a:	jmp    0xf558:0xcf413143
  410a21:	adc    DWORD PTR [ecx+ebx*2],0xe
  410a25:	add    BYTE PTR [esp+edx*1+0x5f],cl
  410a29:	dec    ebx
  410a2a:	mov    ds,WORD PTR [eax+0xe]
  410a2d:	cmovnp esi,DWORD PTR [edi-0x2630fff3]
  410a34:	or     ch,BYTE PTR [ecx+0xe1784]
	...
  410a42:	add    BYTE PTR [eax],al
  410a44:	fcom   st(4)
  410a46:	out    dx,al
  410a47:	jmp    eax
  410a49:	pop    eax
  410a4a:	int    0x44
  410a4c:	fistp  DWORD PTR [eax+0xe]
  410a4f:	add    bh,cl
  410a51:	popf   
  410a52:	xor    bh,al
  410a54:	iret   
  410a55:	pop    eax
  410a56:	push   cs
  410a57:	add    BYTE PTR [edx+0x1b],dl
  410a5a:	retf   0x4a4f
  410a5d:	adc    eax,esi
  410a5f:	dec    edi
  410a60:	and    eax,0x2ce75659
  410a65:	sbb    BYTE PTR [esi],cl
  410a67:	(bad)  
  410a68:	mov    edx,0xcf4130c7
  410a6d:	popa   
  410a6e:	into   
  410a6f:	push   cs
  410a70:	dec    ebx
  410a71:	mov    cs,WORD PTR ds:0x43d9cf00
  410a77:	clc    
  410a78:	iret   
  410a79:	push   ebp
  410a7a:	jb     0x410a27
  410a7c:	iret   
  410a7d:	pop    eax
  410a7e:	push   cs
  410a7f:	xor    edx,0x34
  410a82:	or     DWORD PTR [edi],ecx
  410a84:	push   ebx
  410a85:	cli    
  410a86:	or     BYTE PTR [eax],al
  410a88:	iret   
  410a89:	rcr    DWORD PTR [ebx-0x4],1
  410a8c:	data16 fimul DWORD PTR [eax]
  410a8f:	add    bh,cl
  410a91:	outs   dx,BYTE PTR ds:[esi]
  410a92:	jne    0x410ac9
  410a94:	dec    eax
  410a95:	jg     0x410aa8
  410a97:	in     al,dx
  410a98:	push   ecx
  410a99:	mov    esp,0x63c2c793
  410a9e:	push   0x41
  410aa0:	cmp    edx,edi
  410aa2:	pusha  
  410aa3:	arpl   WORD PTR [esi+0xed9b7f],cx
	...
  410ab1:	add    BYTE PTR [edi+edi*2+0x1f8b4e3],al
  410ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ab9:	add    al,BYTE PTR [esi-0x44]
  410abc:	sbb    DWORD PTR [edx+ebp*2-0x1e],0xffffffa4
  410ac1:	add    edx,DWORD PTR [eax-0x44]
  410ac4:	inc    edi
  410ac5:	mov    edi,0x3e45393
  410aca:	iret   
  410acb:	jg     0x410b1d
  410acd:	inc    ecx
  410ace:	imul   DWORD PTR [esi+0x7f7504dd]
  410ad4:	fld    QWORD PTR [ebx]
  410ad6:	dec    edx
  410ad7:	mov    esp,0x7f653443
  410adc:	push   eax
  410add:	inc    ecx
  410ade:	mov    edi,0x77f12ab0
  410ae3:	mov    ecx,0x3fc403a4
  410ae8:	nop
  410ae9:	sbb    BYTE PTR [ebx+eax*8-0x11],cl
  410aed:	add    esp,DWORD PTR [ebx]
  410aef:	popf   
  410af0:	dec    ebx
  410af1:	add    eax,0xfae37fcf
  410af6:	pop    eax
  410af7:	int3   
  410af8:	rol    esi,1
  410afa:	sbb    edi,DWORD PTR [eax-0x1e]
  410afd:	push   eax
  410afe:	ja     0x410b45
  410b00:	push   ecx
  410b01:	fadd   DWORD PTR [ecx-0x2ca40432]
  410b07:	jg     0x410ad3
  410b09:	test   DWORD PTR [eax+0xb],ebp
  410b0c:	faddp  st(6),st
  410b0e:	imul   eax,DWORD PTR [ebp+0x31],0x2e2768d8
  410b15:	add    al,0x0
	...
  410b1f:	add    bh,cl
  410b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b22:	or     al,0xb6
  410b24:	xchg   edi,eax
  410b25:	inc    edi
  410b26:	mov    fs,WORD PTR [edi-0x5e8ffdb8]
  410b2c:	int3   
  410b2d:	retf   
  410b2e:	add    ebp,DWORD PTR [edx-0x2e]
  410b31:	jg     0x410b34
  410b33:	ins    BYTE PTR es:[edi],dx
  410b34:	cdq    
  410b35:	inc    esp
  410b36:	repnz mov ss,WORD PTR [ecx]
  410b39:	int3   
  410b3a:	lock xchg BYTE PTR [edi],bl
  410b3d:	int3   
  410b3e:	inc    ebp
  410b3f:	sub    bl,dl
  410b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b42:	ret    
  410b43:	stos   DWORD PTR es:[edi],eax
  410b44:	adc    BYTE PTR [ebp+0x59],al
  410b47:	bound  esp,QWORD PTR [eax]
  410b49:	add    cl,cl
  410b4b:	popa   
  410b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4d:	jg     0x410bb5
  410b4f:	push   cs
  410b50:	adc    ah,cl
  410b52:	add    al,0x41
  410b54:	sbb    eax,0x6b4ef1d9
  410b59:	mov    ebx,0x3ed76af0
  410b5e:	inc    esi
  410b5f:	test   al,0xcc
  410b61:	jg     0x410bdb
  410b63:	not    BYTE PTR [ecx]
  410b65:	mov    esp,0x7fcce9f4
  410b6a:	or     al,0xd2
  410b6c:	mov    WORD PTR [esp+ebx*2-0xb53c847],?
  410b73:	mov    ebx,0xa2cb6b89
  410b78:	adc    eax,DWORD PTR [eax-0x7decd679]
  410b7e:	in     eax,0xca
  410b80:	dec    ebp
  410b81:	ret    
  410b82:	hlt    
  410b83:	jmp    0x410b88
  410b88:	add    BYTE PTR [eax],al
  410b8a:	add    BYTE PTR [eax],al
  410b8c:	add    BYTE PTR [eax],al
  410b8e:	inc    DWORD PTR [ecx-0x10db2d1b]
  410b94:	lods   eax,DWORD PTR ds:[esi]
  410b95:	sub    ebx,ecx
  410b97:	inc    esp
  410b98:	js     0x410b7b
  410b9a:	xchg   edx,eax
  410b9b:	retf   
  410b9c:	add    al,0xc1
  410b9e:	push   ds
  410b9f:	inc    edi
  410ba0:	repnz into 
  410ba2:	out    0xab,al
  410ba4:	hlt    
  410ba5:	add    ch,bl
  410ba7:	push   ecx
  410ba8:	repz jne 0x410b39
  410bab:	cmp    bl,BYTE PTR [eax+ecx*1+0x19]
  410baf:	mov    ah,0x4
  410bb1:	call   0x3448b7
  410bb6:	imul   esi,DWORD PTR [esp+eax*1-0xcc27118],0xf0b459ff
  410bc1:	inc    ebx
  410bc3:	inc    ebx
  410bc4:	jmp    0x64c9:0xf33abad3
  410bcb:	jg     0x410bd9
  410bcd:	push   ebp
  410bce:	lods   eax,DWORD PTR ds:[esi]
  410bcf:	daa    
  410bd0:	pop    esp
  410bd2:	xchg   BYTE PTR [ebp-0x6b82aca7],dl
  410bd8:	add    bh,al
  410bda:	in     al,0x7f
  410bdc:	or     al,0x0
  410bde:	out    0x3a,al
  410be0:	jns    0x410bea
  410be2:	mov    cs,WORD PTR [esp+edx*2+0x0]
  410be6:	idiv   dh
  410be8:	stc    
  410be9:	add    DWORD PTR [ecx],esp
  410beb:	dec    ecx
  410bec:	daa    
  410bed:	sar    BYTE PTR ds:0xc9529b,0x0
	...
  410bfc:	hlt    
  410bfd:	inc    ebx
  410bfe:	repnz rcr dh,1
  410c01:	enter  0xc58,0x3f
  410c05:	jle    0x410b8c
  410c07:	fsubr  DWORD PTR [ecx-0x49ff2bff]
  410c0d:	jg     0x410b94
  410c0f:	jne    0x410baf
  410c11:	enter  0x870,0xbd
  410c15:	xchg   ebp,eax
  410c16:	push   0xffffff8b
  410c18:	mov    al,ds:0x430f5ff
  410c1d:	dec    ecx
  410c1e:	jb     0x410c1c
  410c20:	scas   eax,DWORD PTR es:[edi]
  410c21:	mov    ah,0x7
  410c23:	or     BYTE PTR [edx-0x30e41a91],0xd8
  410c2a:	leave  
  410c2b:	inc    eax
  410c2c:	frstor [ebx]
  410c2e:	mov    ?,ebx
  410c30:	or     DWORD PTR [edx-0x67948010],eax
  410c36:	mov    bl,al
  410c38:	lds    edi,FWORD PTR ds:0x6e0f2af7
  410c3e:	daa    
  410c3f:	pop    esi
  410c40:	push   ss
  410c41:	pop    ss
  410c42:	idiv   bh
  410c44:	hlt    
  410c45:	sub    BYTE PTR [eax+ecx*1-0xd],bl
  410c49:	das    
  410c4a:	inc    ecx
  410c4b:	add    al,0xfb
  410c4d:	sub    ch,dl
  410c4f:	push   ss
  410c50:	jecxz  0x410be9
  410c52:	pop    esi
  410c53:	or     bl,bl
  410c55:	call   0xa0c:0x97e3063f
  410c5c:	hlt    
  410c5d:	pop    edi
  410c5e:	adc    eax,0xc0
  410c63:	add    BYTE PTR [eax],al
  410c65:	add    BYTE PTR [eax],al
  410c67:	add    BYTE PTR [eax],al
  410c69:	add    BYTE PTR [ecx+edi*1+0x510dc928],ah
  410c70:	push   cs
  410c71:	shr    bh,0x54
  410c74:	hlt    
  410c75:	ret    
  410c76:	xor    eax,0xcdc58d1e
  410c7b:	dec    ebp
  410c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c7d:	je     0x410cac
  410c7f:	into   
  410c80:	xor    cl,BYTE PTR [eax+edx*8]
  410c83:	dec    eax
  410c84:	jns    0x410cca
  410c86:	(bad)  
  410c87:	xchg   ecx,eax
  410c88:	inc    edx
  410c89:	or     BYTE PTR [eax+0x13],dl
  410c8c:	retf   0x12c6
  410c8f:	ins    DWORD PTR es:[edi],dx
  410c90:	or     eax,0x8d58cf00
  410c95:	cmp    al,0x76
  410c97:	sbb    eax,0xc4cf004f
  410c9c:	pop    ds
  410c9d:	lea    edx,[edx]
  410c9f:	dec    ecx
  410ca0:	aas    
  410ca1:	push   0xffffffce
  410ca3:	dec    BYTE PTR ds:0xdfecf6a
  410ca9:	push   0xffffffcf
  410cab:	jg     0x410d25
  410cad:	dec    ecx
  410cae:	ja     0x410c5f
  410cb0:	rcr    BYTE PTR [ecx],cl
  410cb2:	es mov dh,0x24
  410cb5:	add    al,0xd4
  410cb7:	aas    
  410cb8:	pop    eax
  410cb9:	dec    BYTE PTR [ebp-0x3c]
  410cbc:	scas   eax,DWORD PTR es:[edi]
  410cbd:	add    al,0xe3
  410cbf:	mov    edi,DWORD PTR [esi+0x49]
  410cc2:	ret    
  410cc3:	imul   BYTE PTR [eax]
  410cc5:	mov    ah,0x5
  410cc7:	js     0x410d03
  410cc9:	out    dx,al
  410cca:	inc    esp
  410ccb:	not    BYTE PTR [eax]
  410ccd:	mov    eax,0x0
  410cd2:	add    BYTE PTR [eax],al
  410cd4:	add    BYTE PTR [eax],al
  410cd6:	add    BYTE PTR [eax],al
  410cd8:	inc    ebp
  410cd9:	(bad)  
  410cda:	sti    
  410cdb:	mov    es,WORD PTR [ebx+0x1c06874f]
  410ce1:	sbb    ebp,DWORD PTR [edi+0x49]
  410ce4:	rol    DWORD PTR [edx-0xf],cl
  410ce7:	mov    bl,0x49
  410ce9:	jg     0x410d5d
  410ceb:	cmp    DWORD PTR [ebx],ebx
  410ced:	push   edi
  410cee:	mov    al,0x5c
  410cf0:	iret   
  410cf1:	jg     0x410d2e
  410cf3:	add    eax,0x5ee37fcf
  410cf8:	cwde   
  410cf9:	mov    eax,ds:0x7fc8c63c
  410cfe:	push   cs
  410cff:	les    eax,FWORD PTR [ebp+0xecca1a2]
  410d05:	ja     0x410cea
  410d07:	pop    eax
  410d08:	inc    esp
  410d09:	push   ebx
  410d0a:	addr16 enter 0xd710,0xe3
  410d0f:	jecxz  0x410cd9
  410d11:	inc    ecx
  410d12:	dec    esp
  410d13:	add    dh,BYTE PTR [ecx]
  410d15:	inc    ecx
  410d16:	sub    ecx,DWORD PTR [ebp+0x39c4413]
  410d1c:	out    dx,eax
  410d1d:	jg     0x410d02
  410d1f:	stos   DWORD PTR es:[edi],eax
  410d20:	(bad)  
  410d22:	add    al,bl
  410d24:	push   edi
  410d25:	mov    ebx,0x9fcf2c0b
  410d2a:	jecxz  0x410d2f
  410d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d2d:	pushf  
  410d2e:	or     al,0x87
  410d30:	lea    eax,[edx-0x7c]
  410d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d34:	cmp    cl,bl
  410d36:	or     al,0x9
  410d38:	sar    DWORD PTR [edi-0x1c],cl
  410d3b:	test   BYTE PTR [eax],0x0
	...
  410d46:	mov    esi,0x1760f240
  410d4b:	push   eax
  410d4c:	gs jmp 0xd2334ebe
  410d52:	retf   0xf1d1
  410d55:	mov    esi,0x41e0bc43
  410d5a:	rcr    DWORD PTR [edi+0x4474e90c],cl
  410d60:	pusha  
  410d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d62:	or     eax,0xe49147f8
  410d67:	jg     0x410d95
  410d69:	jmp    0xfd3e653a
  410d6e:	or     eax,0x672c8442
  410d73:	inc    edx
  410d74:	js     0x410d4f
  410d76:	in     al,0x9b
  410d78:	push   0x7840d328
  410d7d:	ins    DWORD PTR es:[edi],dx
  410d7e:	xor    al,0x21
  410d80:	push   esp
  410d81:	jmp    0xee0a0a52
  410d86:	or     eax,0xe5c11ccc
  410d8b:	fmul   QWORD PTR [ebx-0x17]
  410d8e:	or     eax,0xff51f4cc
  410d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d94:	or     al,0xe9
  410d96:	dec    ecx
  410d97:	cmp    eax,0x70073601
  410d9c:	fs popf 
  410d9e:	call   0xf7671a61
  410da3:	dec    ebx
  410da4:	in     eax,0x63
  410da6:	adc    eax,DWORD PTR [eax+0x6a0c]
	...
  410db4:	nop
  410db5:	je     0x410da8
  410db7:	xchg   esp,eax
  410db8:	mov    esp,0x4a0065d7
  410dbd:	mov    ebx,0xd1bff0c
  410dc2:	jmp    0xaa83:0xc7c5fa7
  410dc9:	jo     0x410dbc
  410dcb:	jne    0x410e43
  410dcd:	xchg   esp,eax
  410dce:	jb     0x410e34
  410dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd1:	jnp    0x410dc4
  410dd3:	jne    0x410d67
  410dd5:	adc    ebx,DWORD PTR [esi-0x728389a7]
  410ddb:	les    esp,FWORD PTR [edx+0x3f]
  410dde:	jns    0x410dec
  410de0:	(bad)  
  410de1:	out    0x6d,eax
  410de3:	inc    ecx
  410de4:	ss aas 
  410de6:	jns    0x410dd0
  410de8:	push   cs
  410de9:	cld    
  410dea:	push   esp
  410deb:	add    BYTE PTR [esi],ah
  410ded:	sti    
  410dee:	int    0xc
  410df0:	push   ecx
  410df1:	mov    BYTE PTR [eax+ebp*2],bl
  410df4:	xchg   esi,eax
  410df5:	xchg   edi,eax
  410df6:	dec    ebx
  410df7:	add    BYTE PTR [ecx-0x78],dl
  410dfa:	call   0xce5cee7
  410dff:	add    BYTE PTR [ebp-0x995f9c9],ah
  410e05:	ds jns 0x410e04
  410e08:	jno    0x410d92
  410e0a:	add    bh,bh
  410e0c:	fld    TBYTE PTR [esi]
  410e0e:	dec    edx
  410e0f:	inc    ecx
  410e10:	out    0x13,al
  410e12:	pop    eax
  410e13:	jo     0x410d96
  410e15:	test   DWORD PTR ds:[ebp+0x0],eax
	...
  410e21:	add    BYTE PTR [esi+0x1bff0c91],dl
  410e27:	add    al,0xf3
  410e29:	jne    0x410e0d
  410e2b:	ds cmp edi,ecx
  410e2e:	outs   dx,BYTE PTR ds:[esi]
  410e2f:	ret    0xe80c
  410e32:	jbe    0x410ea7
  410e34:	icebp  
  410e35:	(bad)  
  410e36:	aas    
  410e37:	(bad)  
  410e38:	shr    BYTE PTR [edx-0x5a],1
  410e3b:	inc    eax
  410e3c:	jns    0x410e32
  410e3e:	iret   
  410e3f:	xchg   ebp,eax
  410e40:	cmp    DWORD PTR [eax+eiz*4],ecx
  410e43:	push   esp
  410e44:	fld    QWORD PTR [edi+0xe]
  410e47:	sub    DWORD PTR [esi-0x32c1e0d7],esp
  410e4d:	mov    BYTE PTR [edx],dl
  410e4f:	xchg   ecx,eax
  410e50:	and    al,BYTE PTR [eax]
  410e52:	xor    BYTE PTR [ebp+edi*4-0x32aefd02],0x34
  410e5a:	xor    BYTE PTR [ecx+0x4d],0x0
  410e5e:	ja     0x410e9d
  410e60:	notrack jmp DWORD PTR [eax-0x60]
  410e64:	dec    edx
  410e65:	aam    0xe5
  410e67:	sub    ch,cl
  410e69:	je     0x410ece
  410e6b:	(bad)  
  410e6c:	cmp    ch,al
  410e6e:	dec    eax
  410e6f:	cmp    al,0xdd
  410e71:	inc    edi
  410e72:	mov    gs,WORD PTR [eax]
  410e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e75:	std    
  410e76:	test   al,0xe5
  410e78:	int3   
  410e79:	mov    BYTE PTR [edx+0xf4482f8],cl
  410e7f:	jns    0x410e4c
  410e81:	je     0x410eae
  410e83:	push   cs
  410e84:	cmp    ecx,DWORD PTR [eax+eax*1]
	...
  410e8f:	add    BYTE PTR [eax],bl
  410e91:	cld    
  410e92:	fadd   QWORD PTR [edi-0x72]
  410e95:	sub    BYTE PTR [esi-0x334a871b],ah
  410e9b:	mov    BYTE PTR [edx-0x108376e4],cl
  410ea1:	sub    BYTE PTR ds:0xe293884,bl
  410ea7:	add    BYTE PTR [esp+edx*2-0x26],cl
  410eab:	call   ecx
  410ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eae:	(bad)  
  410eaf:	(bad)  
  410eb0:	fsubr  DWORD PTR [eax]
  410eb2:	mov    DWORD PTR [edi+edi*8+0x28],edi
  410eb6:	sbb    eax,0xe286c84
  410ebb:	add    BYTE PTR [edx-0x1d],dl
  410ebe:	leave  
  410ebf:	dec    edi
  410ec0:	mov    eax,0xa8d7907f
  410ec5:	iret   
  410ec6:	adc    al,al
  410ec8:	test   eax,0x4b10238a
  410ecd:	push   cs
  410ece:	in     al,0x3
  410ed0:	iret   
  410ed1:	add    cl,BYTE PTR [ecx+0x678d90c7]
  410ed7:	xchg   BYTE PTR [eax+0xb8ee43e],cl
  410edd:	dec    eax
  410ede:	xchg   esp,eax
  410edf:	rol    BYTE PTR [ebx],0x50
  410ee2:	fdivr  st(2),st
  410ee4:	jae    0x410f24
  410ee6:	ror    DWORD PTR [ebx],cl
  410ee8:	(bad)  
  410ee9:	mov    bl,0x50
  410eeb:	and    ebx,0x47
  410eee:	in     al,0x37
  410ef0:	call   0x44e29c
	...
  410efd:	add    BYTE PTR [eax-0x3],ah
  410f00:	mov    dl,0x39
  410f02:	xlat   BYTE PTR ds:[ebx]
  410f03:	daa    
  410f04:	fldcw  WORD PTR [eax+eax*2]
  410f07:	mov    ds:0x113e2f39,eax
  410f0d:	or     al,0x27
  410f0f:	mov    bl,0x1c
  410f11:	mov    edi,0xe0113e29
  410f16:	and    DWORD PTR [ebx+ebp*8-0x75575855],esi
  410f1d:	mov    edi,0xbfabb411
  410f22:	add    DWORD PTR [edi+0x3e765e8b],0x63
  410f29:	mov    edi,0x396b4383
  410f2e:	sbb    edi,DWORD PTR [esi]
  410f30:	(bad)  [ebx]
  410f32:	mul    DWORD PTR [edx-0x34]
  410f35:	mov    esi,0xcbd93de1
  410f3a:	fnstenv [ebx-0x78a440ed]
  410f40:	pop    ebx
  410f41:	push   ss
  410f42:	ss cmp eax,0xbc4c360d
  410f48:	shr    cl,0x0
  410f4b:	xchg   ebx,eax
  410f4c:	lea    esp,[esp+ecx*4+0x55ee7781]
  410f53:	(bad)  
  410f54:	rcl    BYTE PTR [esi],0x9b
  410f57:	ds js  0x410f3b
  410f5a:	fs inc esi
  410f5c:	gs push es
  410f5e:	push   eax
  410f5f:	sub    al,BYTE PTR [edi]
  410f61:	xchg   ebx,eax
	...
  410f6a:	add    BYTE PTR [eax],al
  410f6c:	int3   
  410f6d:	cmp    al,0x78
  410f6f:	loope  0x410fa5
  410f71:	cli    
  410f72:	fs out dx,al
  410f74:	cmp    DWORD PTR [esi],edi
  410f76:	js     0x410f5d
  410f78:	and    al,0x7f
  410f7a:	pusha  
  410f7b:	fisubr WORD PTR [ecx]
  410f7d:	ds js  0x410f51
  410f80:	xor    al,0x37
  410f82:	data16 into 
  410f84:	sbb    DWORD PTR [esi],edi
  410f86:	js     0x410f45
  410f88:	and    al,0x2f
  410f8a:	mov    si,0x3e89
  410f8e:	js     0x410f49
  410f90:	je     0x410fb9
  410f92:	data16 scas al,BYTE PTR es:[edi]
  410f94:	jns    0x410fd4
  410f96:	js     0x410f2d
  410f98:	fs pop ds
  410f9a:	data16 sahf 
  410f9c:	imul   edi,DWORD PTR [esi],0x57748178
  410fa2:	data16 mov ds,WORD PTR [ecx+0x3e]
  410fa6:	js     0x410f35
  410fa8:	fs dec edi
  410faa:	data16 jle 0x410ff6
  410fad:	ds js  0x410f39
  410fb0:	xor    al,0x47
  410fb2:	data16 outs dx,BYTE PTR ds:[esi]
  410fb4:	cmp    DWORD PTR [esi],edi
  410fb6:	js     0x410ffd
  410fb8:	and    al,0x3f
  410fba:	pop    si
  410fbc:	sub    DWORD PTR [esi],edi
  410fbe:	js     0x410ff1
  410fc0:	xor    al,0xf7
  410fc2:	gs dec esi
  410fc4:	sbb    DWORD PTR [esi],edi
  410fc6:	js     0x410fc8
  410fc8:	mov    dl,0xe8
  410fca:	mov    ebx,0xf2fe096b
  410fcf:	jne    0x410fd1
	...
  410fd9:	add    dh,ah
  410fdb:	call   0xfe2a7b83
  410fe0:	bnd jne 0x410fdd
  410fe3:	call   0xfe0a7b93
  410fe8:	(bad)
  410fec:	push   edi
  410fed:	mov    ebx,DWORD PTR [edx-0x6e173200]
  410ff3:	cli    
  410ff4:	repnz lea esi,[ebx]
  410ff7:	cld    
  410ff8:	inc    ecx
  410ff9:	inc    DWORD PTR [ebx]
  410ffb:	(bad)  
  410ffc:	icebp  
  410ffd:	xor    eax,0x4bc8d9
  411002:	sahf   
  411003:	mov    ah,0x5a
  411005:	add    BYTE PTR [esi-0x79],dh
  411008:	int3   
  411009:	psllq  mm2,QWORD PTR [edi+0x4366000b]
  411010:	dec    ecx
  411011:	clc    
  411012:	data16 or BYTE PTR [eax+eax*1],0x71
  411017:	(bad)  
  411018:	clc    
  411019:	push   DWORD PTR [ecx]
  41101b:	or     BYTE PTR [edx+ebp*2],0x26
  41101f:	data16 or al,0x6a
  411022:	es data16 or al,0x8d
  411026:	repz test DWORD PTR [ecx-0x73],0xfffaf3b3
  41102e:	dec    ecx
  41102f:	shl    ecx,cl
  411031:	jne    0x411081
  411033:	cli    
  411034:	js     0x411032
  411036:	pop    esi
  411037:	add    bl,BYTE PTR [ebx+0x0]
  41103a:	test   BYTE PTR [esi+0x74cc],0x0
  411041:	add    BYTE PTR [eax],al
  411043:	add    BYTE PTR [eax],al
  411045:	add    BYTE PTR [eax],al
  411047:	add    bl,dh
  411049:	call   0x80271128
  41104e:	fs stos DWORD PTR es:[edi],eax
  411050:	push   ds
  411051:	ror    DWORD PTR [edi+edi*8],0xcf
  411055:	pop    ebx
  411056:	add    ch,al
  411058:	idiv   ebx
  41105a:	mov    al,0xfe
  41105c:	jg     0x41100f
  41105e:	fmul   DWORD PTR [edx+edx*2-0x3f014887]
  411065:	sbb    DWORD PTR [eax+ebp*8-0x79],ebx
  411069:	sti    
  41106a:	mov    al,0xfe
  41106c:	inc    esi
  41106d:	lods   al,BYTE PTR ds:[esi]
  41106e:	mov    al,ds:0xa09aa8f6
  411073:	sbb    eax,0x8caf9234
  411078:	adc    bl,BYTE PTR [ecx+0xcb76858]
  41107e:	dec    edi
  41107f:	add    BYTE PTR [eax-0x7f095f8c],cl
  411085:	xor    dh,BYTE PTR [ecx+0x4ee18834]
  41108b:	add    BYTE PTR [edi-0x7b],ah
  41108e:	and    bh,bh
  411090:	push   0x58eb8ab0
  411095:	push   edx
  411096:	mov    cl,0x82
  411098:	sbb    bh,ch
  41109a:	mov    eax,0x3a2950fe
  41109f:	pop    edx
  4110a0:	dec    esp
  4110a1:	jl     0x41105b
  4110a3:	add    edi,DWORD PTR [edx+0x2b84835f]
  4110a9:	repnz mov al,0xfe
	...
  4110b4:	add    BYTE PTR [eax],al
  4110b6:	xor    BYTE PTR [ecx-0x7f],bl
  4110b9:	test   BYTE PTR [ebx],bh
  4110bb:	adc    dh,BYTE PTR [ecx-0x5e2bb102]
  4110c1:	neg    BYTE PTR [eax]
  4110c3:	or     ah,BYTE PTR [esi+0x3828cf02]
  4110c9:	or     dl,BYTE PTR [eax]
  4110cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110cc:	mov    eax,ds:0xa5b200f6
  4110d1:	add    cl,bh
  4110d3:	sub    BYTE PTR [ebp+0x787ff019],ah
  4110d9:	scas   eax,DWORD PTR es:[edi]
  4110da:	loope  0x411116
  4110dc:	push   ebx
  4110dd:	mov    esp,0xbc532c1b
  4110e2:	fnstcw WORD PTR [edx]
  4110e4:	cdq    
  4110e5:	stos   DWORD PTR es:[edi],eax
  4110e6:	fnstcw WORD PTR [edx]
  4110e8:	dec    ebx
  4110e9:	mov    esp,0x3b5b8843
  4110ee:	ret    
  4110ef:	cmp    bh,BYTE PTR [ebx]
  4110f1:	cmp    BYTE PTR [ebx+0x2b],0x3b
  4110f5:	mov    esp,0xde907fb1
  4110fa:	test   eax,0xa1b3fff4
  4110ff:	cmp    cl,BYTE PTR [eax+ebx*4]
  411102:	cmp    eax,DWORD PTR es:[ebx]
  411105:	mov    esp,0xbbf32b5b
  41110a:	mov    DWORD PTR [edi],esp
  41110c:	push   esp
  41110d:	sub    DWORD PTR [eax+0x7075fb3a],eax
  411113:	xor    ah,bl
  411115:	mov    ebx,0xabfbb471
	...
  411122:	add    BYTE PTR [eax],al
  411124:	ins    BYTE PTR es:[edi],dx
  411125:	cmp    ebx,edx
  411127:	mov    ebx,0xb3cbf461
  41112c:	pop    ecx
  41112d:	cmp    cl,ah
  41112f:	xor    esp,ebp
  411131:	cmp    cl,bl
  411133:	mov    ebx,0xbfdd3793
  411138:	inc    edx
  411139:	cmp    bh,BYTE PTR [ebx-0x33c43c45]
  41113f:	xchg   edi,eax
  411140:	call   0xe387:0xecce37f
  411147:	push   eax
  411148:	push   esp
  411149:	sub    esp,DWORD PTR [edi-0x40]
  41114c:	adc    al,0xa5
  41114e:	jecxz  0x41117d
  411150:	fistp  QWORD PTR [edx]
  411152:	icebp  
  411153:	or     esi,edi
  411155:	pop    es
  411156:	or     edi,DWORD PTR [ebx+0x2c0d0801]
  41115c:	aaa    
  41115d:	mov    ds:0x7f8a050e,al
  411162:	icebp  
  411163:	(bad)  
  411165:	daa    
  411166:	scas   al,BYTE PTR es:[edi]
  411167:	pop    edi
  411168:	and    al,0x39
  41116a:	repnz fsub QWORD PTR [eax]
  41116d:	cmp    DWORD PTR [eax-0x1f],edi
  411170:	and    al,0xee
  411172:	imul   eax,DWORD PTR [esi-0x7c],0xcce5cf48
  411179:	rol    BYTE PTR [ebp-0xec2afbb],cl
  41117f:	xchg   edi,eax
  411180:	sbb    eax,0xa3930ca6
  411185:	cmp    bh,BYTE PTR [eax-0xf]
	...
  411190:	add    BYTE PTR [eax],al
  411192:	je     0x411167
  411194:	imul   edx,DWORD PTR [esi],0xd480854
  41119a:	inc    eax
  41119b:	je     0x4111fa
  41119d:	mov    cl,0x13
  41119f:	add    BYTE PTR [ebp+0x4bc81dbc],0xe9
  4111a6:	dec    esp
  4111a7:	jp     0x4111b5
  4111a9:	jne    0x4111ba
  4111ab:	test   al,0xbd
  4111ad:	dec    ebp
  4111ae:	adc    al,BYTE PTR [eax-0x2e662ea7]
  4111b4:	or     al,0xe9
  4111b6:	leave  
  4111b7:	aas    
  4111b8:	jns    0x4111a8
  4111ba:	(bad)  
  4111bb:	daa    
  4111bc:	retf   0x843a
  4111bf:	cmp    bl,BYTE PTR [ebp+0x51]
  4111c2:	retf   
  4111c3:	jg     0x4111a6
  4111c5:	ja     0x4111ab
  4111c7:	cli    
  4111c8:	push   0xf1cfcb28
  4111cd:	sbb    al,0xdb
  4111cf:	daa    
  4111d0:	fidivr WORD PTR [ebx+0x65]
  4111d3:	cmp    ah,ch
  4111d5:	mov    ch,0xeb
  4111d7:	cmp    dl,dh
  4111d9:	or     bl,0xc1
  4111dc:	mov    WORD PTR [eax],es
  4111de:	adc    BYTE PTR [ebp+0x77],bh
  4111e1:	cli    
  4111e2:	test   al,0xf7
  4111e4:	sar    BYTE PTR ds:[edi+0x61fff2f5],0xf2
  4111ec:	lahf   
  4111ed:	cmp    cl,bh
  4111ef:	outs   dx,DWORD PTR ds:[esi]
  4111f0:	mov    ch,0xff
  4111f2:	sti    
  4111f3:	lock bnd jne 0x4111f7
	...
  4111ff:	add    dh,ch
  411201:	in     al,0x39
  411203:	addr16 xor ebp,0x42ff5e52
  41120a:	push   cs
  41120b:	add    BYTE PTR [ebx+0x9],bl
  41120e:	out    0x83,al
  411210:	jmp    0xf1f4:0x6bc75ef4
  411217:	push   DWORD PTR [esi-0x3dba3684]
  41121d:	jl     0x41122b
  41121f:	add    BYTE PTR [esi+0x250c4909],ah
  411225:	xor    eax,0x297f74f2
  41122a:	mov    dl,0x2b
  41122c:	in     al,0xd9
  41122e:	ret    
  41122f:	ret    0x7c72
  411232:	mov    ch,0x1
  411234:	data16 jl 0x411243
  411237:	jmp    0x411250
  411239:	add    esi,DWORD PTR [ecx+0x10]
  41123c:	jbe    0x4112a6
  41123e:	pop    es
  41123f:	mov    ebp,DWORD PTR [ebx-0x7ee77c6d]
  411245:	push   0x8c0bff00
  41124a:	in     al,0x76
  41124c:	mov    dh,dh
  41124e:	repnz cmp DWORD PTR [ebp-0x7c],0x77
  411253:	add    eax,0xebf4792f
  411258:	clc    
  411259:	shl    DWORD PTR [edi],cl
  41125b:	jg     0x41129e
  41125d:	div    dl
  41125f:	or     edi,ecx
  411261:	imul   esi,DWORD PTR [eax+0x57],0x0
  411268:	add    BYTE PTR [eax],al
  41126a:	add    BYTE PTR [eax],al
  41126c:	add    BYTE PTR [eax],al
  41126e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411270:	or     BYTE PTR [eax],al
  411272:	iret   
  411273:	cmp    ecx,DWORD PTR [eax]
  411275:	jmp    0x411233
  411277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411278:	scas   eax,DWORD PTR es:[edi]
  411279:	pop    es
  41127a:	sbb    BYTE PTR [ebx-0x7f],0x44
  41127e:	neg    DWORD PTR [ecx+eax*2-0x34f52704]
  411285:	pop    es
  411286:	push   cs
  411287:	mov    BYTE PTR [eax],0x89
  41128a:	xchg   edx,eax
  41128b:	into   
  41128c:	test   DWORD PTR [ebx+edx*8-0x44],edx
  411290:	pop    ss
  411291:	mov    edx,DWORD PTR [edx]
  411293:	sar    DWORD PTR [edi+0x54],0xc3
  411297:	es push edx
  411299:	rcl    eax,0x67
  41129c:	test   al,0x6
  41129e:	inc    esi
  41129f:	fdiv   QWORD PTR [ebp+0x475d0288]
  4112a5:	and    DWORD PTR [eax+esi*1-0x1bbb65c4],0x9
  4112ad:	adc    edi,0x28
  4112b0:	and    eax,DWORD PTR [esi]
  4112b2:	mov    ah,0x68
  4112b4:	(bad)  
  4112b6:	je     0x4112d7
  4112b8:	add    DWORD PTR [edi+esi*2-0x5e],0x6014fc41
  4112c0:	retf   0xcf0b
  4112c3:	jae    0x411344
  4112c5:	jmp    0x411313
  4112c7:	frstor [ecx+0x4e9f43a0]
  4112cd:	add    BYTE PTR [esi+0x76045b],dl
	...
  4112db:	add    cl,dl
  4112dd:	xchg   ecx,eax
  4112de:	enter  0xdc8,0x59
  4112e2:	push   cs
  4112e3:	inc    DWORD PTR [edx]
  4112e5:	aad    0x83
  4112e7:	inc    eax
  4112e8:	iret   
  4112e9:	inc    eax
  4112ea:	mov    ah,0x67
  4112ec:	sub    BYTE PTR [eax+0x378b8aaa],al
  4112f2:	popa   
  4112f3:	ds sbb edx,eax
  4112f6:	mov    edi,esp
  4112f8:	jo     0x411330
  4112fa:	cmp    DWORD PTR [eax+0x2e8a8b83],0xffffffd3
  411301:	ss stc 
  411303:	mov    ebx,0xabebacf9
  411308:	and    BYTE PTR [edx+0x3fd5b862],0xfb
  41130f:	jg     0x41133b
  411311:	and    bl,0x3
  411314:	fsubr  DWORD PTR [edi+eiz*8+0x43375bb8]
  41131b:	cs retf 
  41131d:	daa    
  41131e:	push   eax
  41131f:	and    al,al
  411321:	ss jg  0x411362
  411324:	retf   
  411325:	jp     0x4112c7
  411327:	adc    eax,eax
  411329:	add    cl,BYTE PTR [eax+0x2a7fcf03]
  41132f:	cs mov ebx,0xa70b9936
  411335:	enter  0xb886,0x91
  411339:	or     BYTE PTR [ecx+0xaab75af],ch
  41133f:	inc    esi
	...
  411348:	add    BYTE PTR [eax],al
  41134a:	jnp    0x4113b6
  41134c:	adc    eax,0xf32c138c
  411351:	fstp   QWORD PTR [ebp+eax*1-0x5b]
  411355:	add    edx,esp
  411357:	push   ecx
  411358:	push   eax
  411359:	add    dh,BYTE PTR [edi+eiz*4+0x5d]
  41135d:	add    al,0xff
  41135f:	ss push ecx
  411361:	or     al,0x67
  411363:	xchg   ebx,eax
  411364:	inc    ebx
  411365:	mov    bh,0x49
  411367:	xor    DWORD PTR ss:[eax],edx
  41136a:	inc    eax
  41136b:	lods   al,BYTE PTR ds:[esi]
  41136c:	sti    
  41136d:	stos   DWORD PTR es:[edi],eax
  41136e:	(bad)  
  41136f:	mov    ds:0x978b60c,al
  411374:	pop    eax
  411375:	aad    0x4d
  411377:	js     0x411385
  411379:	sbb    al,0xcd
  41137b:	sub    al,BYTE PTR [ebp+0x70]
  41137e:	mov    gs,WORD PTR [ebx]
  411380:	xchg   ah,ah
  411382:	inc    eax
  411383:	add    al,0x4c
  411385:	jmp    0x184a3ad7
  41138a:	cmp    BYTE PTR [ebx-0x54bfe7e8],ch
  411390:	hlt    
  411391:	jbe    0x411351
  411393:	xchg   esp,esp
  411395:	lahf   
  411396:	lods   eax,DWORD PTR ds:[esi]
  411397:	ss repnz rcl ch,0x3f
  41139c:	js     0x411389
  41139e:	and    eax,0x9e565b5b
  4113a3:	aaa    
  4113a4:	repnz aam 0x80
  4113a7:	sbb    eax,0x3679c818
  4113ac:	repnz mov ah,0x0
	...
  4113b7:	add    BYTE PTR [eax+0x79c9041d],al
  4113bd:	ss xor cl,ch
  4113c0:	int3   
  4113c1:	mov    edi,0x28ce9f0a
  4113c6:	add    eax,0xd2bd66a
  4113cb:	pushf  
  4113cc:	adc    ch,BYTE PTR [edx]
  4113ce:	adc    eax,0xe533be0e
  4113d3:	pop    edx
  4113d4:	sbb    BYTE PTR ds:0x340e26f2,dh
  4113da:	or     eax,0x857fcce9
  4113df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113e0:	fdivr  DWORD PTR [ecx*1+0xc7fcce9]
  4113e7:	ficomp WORD PTR [edi-0x4e2a1ac9]
  4113ed:	xor    al,0xf2
  4113ef:	bound  ecx,QWORD PTR [edi+0x7400c433]
  4113f5:	xchg   ecx,eax
  4113f6:	or     al,0x55
  4113f8:	mov    ebp,0xe38b5adc
  4113fd:	xchg   DWORD PTR [ebp-0x1b2ed140],ecx
  411403:	cld    
  411404:	shr    esp,1
  411406:	repnz mov ebp,DWORD PTR [esi-0x12]
  41140a:	js     0x411418
  41140c:	test   eax,0x675f335
  411411:	dec    BYTE PTR [edx+0x4]
  411414:	jne    0x41148d
  411416:	add    BYTE PTR [eax],al
  411418:	add    bh,BYTE PTR [esi-0xf]
  41141b:	jne    0x41141d
	...
  411425:	add    dl,ch
  411427:	pop    es
  411428:	dec    ebx
  411429:	or     dh,al
  41142b:	in     al,dx
  41142c:	js     0x411436
  41142e:	jle    0x4113bb
  411430:	fs (bad) 
  411432:	jns    0x41143d
  411434:	dec    ecx
  411435:	adc    al,0x6f
  411437:	cmp    BYTE PTR [edx+0xc80b601],bh
  41143d:	pop    edi
  41143e:	(bad)  
  41143f:	add    al,BYTE PTR ds:[eax]
  411442:	arpl   WORD PTR [ecx],cx
  411444:	out    0x83,al
  411446:	loop   0x41142c
  411448:	xchg   BYTE PTR [ebp-0x7e],dl
  41144b:	cmc    
  41144c:	or     eax,DWORD PTR [eax]
  41144e:	mov    dh,0x80
  411450:	or     al,0x2b
  411452:	aam    0xe5
  411454:	dec    eax
  411455:	or     al,0xa7
  411457:	or     BYTE PTR [eax+eax*1],0xa9
  41145b:	add    al,0xcc
  41145d:	or     DWORD PTR [ebx+0x7c],0xc
  411461:	jne    0x4113f8
  411463:	in     eax,dx
  411464:	js     0x41147a
  411466:	dec    esp
  411467:	and    DWORD PTR [esi+0x0],0x90e4804c
  41146e:	imul   ebp,edx,0x81bfe9f2
  411474:	or     al,0x0
  411476:	iret   
  411477:	test   eax,0xcbce0c39
  41147c:	jmp    0x41147c
  41147e:	mov    edx,0xc774b956
  411483:	dec    esi
  411484:	cmp    eax,0x85ed3062
  411489:	inc    esp
	...
  411492:	add    BYTE PTR [eax],al
  411494:	sub    esp,ebp
  411496:	and    DWORD PTR [esi*4+0x4a042426],edx
  41149d:	pop    ebx
  41149e:	mov    ah,0x4f
  4114a0:	daa    
  4114a1:	test   DWORD PTR [edi+0x8ff08fe],esi
  4114a7:	add    cl,bh
  4114a9:	lea    edi,es:[ebx+ecx*8+0x28]
  4114ae:	and    esp,DWORD PTR [ebx]
  4114b0:	lock xor bl,BYTE PTR [esi]
  4114b3:	jmp    DWORD PTR [edx+0x1e]
  4114b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b7:	sbb    eax,0x88b79d6d
  4114bc:	xchg   edx,eax
  4114bd:	shl    BYTE PTR [edi+0xe40bb74],cl
  4114c3:	push   0xffffffd3
  4114c5:	shl    DWORD PTR [ecx],cl
  4114c7:	cld    
  4114c8:	pop    ds
  4114c9:	sar    edx,1
  4114cb:	(bad)  
  4114cc:	mov    eax,0xced6a572
  4114d1:	sub    BYTE PTR [esi],cl
  4114d3:	sub    DWORD PTR [edx],0x55
  4114d6:	or     eax,0x2159ef75
  4114db:	adc    BYTE PTR ds:0xc774b926,ah
  4114e1:	add    BYTE PTR [ebx+0x62],0x88
  4114e5:	xor    BYTE PTR [edi+0xd0edb74],0x6a
  4114ec:	iret   
  4114ed:	push   cs
  4114ee:	push   cs
  4114ef:	call   0xfefa3ecb
  4114f4:	jbe    0x41156e
  4114f6:	or     eax,0x0
  4114fb:	add    BYTE PTR [eax],al
  4114fd:	add    BYTE PTR [eax],al
  4114ff:	add    BYTE PTR [eax],al
  411501:	add    bh,cl
  411503:	jg     0x41156b
  411505:	ss retf 
  411507:	jnp    0x411561
  411509:	loope  0x41155c
  41150b:	lods   eax,DWORD PTR ds:[esi]
  41150c:	repz mov ah,0xc3
  41150f:	xchg   ebx,ecx
  411511:	pusha  
  411512:	scas   eax,DWORD PTR es:[edi]
  411513:	xor    cl,bl
  411515:	mov    dl,BYTE PTR [ebx-0x24d14ccd]
  41151b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41151c:	jecxz  0x411547
  41151e:	rol    DWORD PTR [ecx+ebp*1],cl
  411521:	mov    eax,0xb59b2790
  411526:	sbb    DWORD PTR [ebx],esi
  411528:	popf   
  411529:	mov    ecx,edi
  41152b:	jg     0x411510
  41152d:	or     BYTE PTR [ebx-0x27d1177d],0x32
  411534:	icebp  
  411535:	adc    esp,DWORD PTR [ebp+0x79]
  411538:	jb     0x411568
  41153a:	(bad)  
  41153b:	daa    
  41153c:	js     0x411560
  41153e:	call   0xcf435175
  411543:	jg     0x411528
  411545:	stos   BYTE PTR es:[edi],al
  411546:	gs and bl,0x3
  41154a:	dec    esp
  41154b:	mov    ch,0xe7
  41154d:	std    
  41154e:	inc    ebx
  41154f:	pusha  
  411550:	inc    edx
  411551:	fbld   TBYTE PTR cs:[ebp-0x77bc4b05]
  411558:	pop    ebx
  411559:	aam    0x2f
  41155b:	xor    edi,DWORD PTR [ebx]
  41155d:	mov    ah,0x23
  41155f:	mov    ebp,cs
  411561:	add    BYTE PTR ds:0x39d80,dh
	...
  41156f:	add    BYTE PTR [edi-0x6e4bee1d],ah
  411575:	sub    BYTE PTR [ecx+0x667fcf02],ah
  41157b:	sar    DWORD PTR ss:[edx+0x70],cl
  41157f:	jecxz  0x4115fa
  411581:	lods   al,BYTE PTR ds:[esi]
  411582:	shr    DWORD PTR [ecx],cl
  411584:	(bad)  
  411585:	xor    cl,BYTE PTR ds:0xb427d47c
  41158b:	mov    BYTE PTR [ebx],bl
  41158d:	xor    edx,esi
  41158f:	pop    esp
  411590:	mov    bh,0xa5
  411592:	or     eax,0xca5cb53
  411597:	rcl    DWORD PTR [ebp+0x34],0xf2
  41159b:	into   
  41159c:	bound  edx,QWORD PTR [ecx-0x13316f5]
  4115a2:	outs   dx,DWORD PTR ds:[esi]
  4115a3:	in     eax,dx
  4115a4:	xor    al,0xab
  4115a6:	adc    BYTE PTR [esi-0x16f2cc6a],ch
  4115ac:	int3   
  4115ad:	jg     0x4115a0
  4115af:	sbb    al,0xb7
  4115b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115b2:	or     al,0x13
  4115b4:	mov    DWORD PTR [eax+ecx*2],0x6927a395
  4115bb:	(bad)  
  4115bc:	cmp    al,0x31
  4115be:	in     al,0x84
  4115c0:	sar    DWORD PTR [edi+0xc],cl
  4115c3:	push   0xffffffbe
  4115c5:	add    DWORD PTR [ebx],0xfffffffc
  4115c8:	fdivr  DWORD PTR [edx]
  4115ca:	dec    eax
  4115cb:	ins    DWORD PTR es:[edi],dx
  4115cc:	retf   0xc7f
  4115cf:	jmp    0xd359c0f1
	...
  4115dc:	add    BYTE PTR [eax],al
  4115de:	int3   
  4115df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115e0:	or     BYTE PTR [esi+edx*1+0x34],ah
  4115e4:	pop    ebp
  4115e5:	inc    ecx
  4115e6:	or     DWORD PTR [edx],esi
  4115e8:	repnz inc esi
  4115ea:	pop    edx
  4115eb:	push   esi
  4115ec:	or     eax,0x6ffccce9
  4115f1:	in     eax,0xaa
  4115f3:	lods   al,BYTE PTR ds:[esi]
  4115f4:	push   es
  4115f5:	jno    0x4115c2
  4115f7:	jg     0x411605
  4115f9:	jmp    0xe94e5c39
  4115fe:	int3   
  4115ff:	cld    
  411600:	outs   dx,DWORD PTR ds:[esi]
  411601:	in     eax,0x89
  411603:	lods   al,BYTE PTR ds:[esi]
  411604:	push   es
  411605:	push   ecx
  411606:	retf   
  411607:	jg     0x411615
  411609:	add    BYTE PTR [esi+0x14],ah
  41160c:	mov    bh,0x0
  41160e:	data16 jge 0x41159e
  411611:	jge    0x411685
  411613:	xor    DWORD PTR [ebp+edx*2+0x6d],edi
  411617:	dec    ebx
  411618:	jle    0x41166b
  41161a:	out    0x6f,eax
  41161c:	add    BYTE PTR [eax],al
  41161e:	mov    bp,0x730a
  411622:	out    dx,al
  411623:	in     al,dx
  411624:	js     0x411632
  411626:	mov    eax,ds:0xa383f8c7
  41162b:	test   DWORD PTR ds:0xf2f783d1,0xd156a75
  411635:	data16 jno 0x411626
  411638:	test   BYTE PTR [ebp+0x6e],al
  41163b:	out    dx,al
  41163c:	js     0x41164e
  41163e:	xor    DWORD PTR [eax-0x8],edi
  411641:	inc    DWORD PTR [eax]
	...
  41164b:	add    bl,ch
  41164d:	jecxz  0x411641
  41164f:	jne    0x41163f
  411651:	adc    al,0x56
  411653:	pusha  
  411654:	push   ecx
  411655:	out    dx,al
  411656:	bnd jne 0x411673
  411659:	xchg   ebx,eax
  41165a:	push   cs
  41165b:	(bad)  
  41165c:	jmp    0x411646
  41165e:	bnd jne 0x4116bf
  411661:	adc    al,0xdd
  411663:	std    
  411664:	jno    0x411653
  411666:	bnd jne 0x4116d7
  411669:	adc    al,0xb0
  41166b:	gs and esi,ebp
  41166e:	mov    ecx,0xc7cb601
  411673:	jmp    0x4115fb
  411675:	stc    
  411676:	jo     0x411684
  411678:	mov    ds:0xc40b576a,eax
  41167d:	ja     0x4116da
  41167f:	xor    DWORD PTR [ebx+0x30],0x8666fff2
  411686:	jge    0x4116d0
  411688:	mov    cl,0x77
  41168a:	add    BYTE PTR [edi-0x7d461c31],cl
  411690:	repnz mov cl,BYTE PTR [ecx+edx*8]
  411694:	jmp    0x638e:0x7b74bc32
  41169b:	fs push 0x67447629
  4116a1:	and    DWORD PTR [edx],edi
  4116a3:	adc    BYTE PTR [eax-0x2d],bl
  4116a6:	mov    ah,0xfe
  4116a8:	ficomp DWORD PTR [esi]
  4116aa:	mov    esp,0xe3ed774
  4116af:	pusha  
	...
  4116b8:	add    BYTE PTR [eax],al
  4116ba:	inc    eax
  4116bb:	inc    ecx
  4116bc:	mov    esp,0xdcce374
  4116c1:	(bad)  
  4116c2:	mov    edx,0x2774bbea
  4116c7:	ds aaa 
  4116c9:	std    
  4116ca:	and    cl,ah
  4116cc:	mov    ebx,0x280e1774
  4116d1:	adc    BYTE PTR gs:[ecx],dl
  4116d4:	popa   
  4116d5:	add    bh,cl
  4116d7:	es push cs
  4116d9:	jmp    0x4116a5
  4116db:	into   
  4116dc:	or     BYTE PTR [eax],al
  4116de:	iret   
  4116df:	es mov bh,0xc1
  4116e2:	fbld   TBYTE PTR [esi]
  4116e4:	pop    ebx
  4116e5:	mov    edi,ebx
  4116e7:	pop    DWORD PTR [edi+0x3b26d77c]
  4116ed:	add    eax,0x3ca6f79
  4116f2:	iret   
  4116f3:	lods   eax,DWORD PTR ds:[esi]
  4116f4:	cmp    DWORD PTR [eax],ecx
  4116f6:	mov    ah,0x23
  4116f8:	mov    ebp,0x2991b735
  4116fd:	(bad)  
  4116fe:	mov    eax,0x4c03c69a
  411703:	das    
  411704:	push   cs
  411705:	jne    0x4116a5
  411707:	jbe    0x411742
  411709:	or     BYTE PTR [edi-0x6700d67f],dh
  41170f:	or     cl,0xba
  411712:	mov    es,WORD PTR [ebx+eiz*8+0x6f1c5456]
  411719:	inc    edi
  41171a:	xlat   BYTE PTR ds:[ebx]
  41171b:	cli    
  41171c:	mov    eax,0xff
  411721:	add    BYTE PTR [eax],al
  411723:	add    BYTE PTR [eax],al
  411725:	add    BYTE PTR [eax],al
  411727:	add    BYTE PTR [ebp-0x7c],al
  41172a:	push   ebx
  41172b:	test   ebx,esi
  41172d:	(bad)  
  41172e:	jecxz  0x411767
  411730:	sar    dl,1
  411732:	nop
  411733:	adc    esp,DWORD PTR [eax+0x70]
  411736:	push   edx
  411737:	push   es
  411738:	dec    esp
  411739:	lods   eax,DWORD PTR ds:[esi]
  41173a:	out    dx,eax
  41173b:	add    ebx,ebx
  41173d:	ja     0x4117bd
  41173f:	push   esi
  411740:	jecxz  0x411770
  411742:	push   esp
  411743:	or     BYTE PTR [eax-0x7e],dl
  411746:	data16 xlat BYTE PTR cs:[ebx]
  411749:	jg     0x41177a
  41174b:	sti    
  41174c:	inc    ebp
  41174d:	aad    0xeb
  41174f:	push   ebx
  411750:	pop    eax
  411751:	and    BYTE PTR [esi+0x5],0xd7
  411755:	cmp    BYTE PTR [esi+0x7ed4cf17],ah
  41175b:	lahf   
  41175c:	dec    ebp
  41175d:	inc    esp
  41175e:	mov    al,0x58
  411760:	mov    eax,ds:0x81420fa
  411765:	and    bl,0x3
  411768:	iret   
  411769:	jg     0x4117e9
  41176b:	inc    esi
  41176c:	ret    
  41176d:	inc    esi
  41176e:	in     al,0x3
  411770:	iret   
  411771:	jg     0x411756
  411773:	test   BYTE PTR [ebx+0x77],ah
  411776:	jecxz  0x4117ae
  411778:	(bad)  
  411779:	pop    edx
  41177a:	and    edx,DWORD PTR [ecx+0x70]
  41177d:	cmp    BYTE PTR [esi],ah
  41177f:	dec    eax
  411781:	sub    eax,0x14a8fbd1
  411786:	mov    al,ds:0x237ab9b0
  41178b:	add    BYTE PTR ss:[eax],al
	...
  411796:	(bad)  
  411797:	pop    edx
  411798:	and    edx,DWORD PTR [ecx+0x8]
  41179b:	cmp    DWORD PTR ds:0x852ea02b,ecx
  4117a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117a2:	fs sub eax,0xd934f178
  4117a8:	push   edx
  4117a9:	push   ds
  4117aa:	aas    
  4117ab:	inc    ebp
  4117ac:	dec    eax
  4117ad:	sbb    eax,0xe90c7fcd
  4117b2:	stc    
  4117b3:	ret    
  4117b4:	loopne 0x41174f
  4117b6:	icebp  
  4117b7:	ret    
  4117b8:	clc    
  4117b9:	cdq    
  4117ba:	pop    ds
  4117bb:	mov    bl,0x4
  4117bd:	add    DWORD PTR [edi+0x66eef228],eax
  4117c3:	ret    
  4117c4:	loopne 0x411824
  4117c6:	push   ebp
  4117c7:	add    DWORD PTR [eax-0x2b],esi
  4117ca:	shl    DWORD PTR [ebx-0x4de11df8],cl
  4117d0:	add    al,0x2
  4117d2:	adc    ecx,esp
  4117d4:	push   ecx
  4117d5:	mov    al,0xd
  4117d7:	jp     0x4117e5
  4117d9:	adc    dl,BYTE PTR [esi+0x432c841b]
  4117df:	jmp    FWORD PTR [edi-0x3f]
  4117e2:	sar    DWORD PTR [edi-0x54],cl
  4117e5:	jmp    0xa9668fc4
  4117ea:	cdq    
  4117eb:	into   
  4117ec:	ret    
  4117ed:	stos   DWORD PTR es:[edi],eax
  4117ee:	iret   
  4117ef:	jg     0x411776
  4117f1:	and    al,0x5b
  4117f3:	aas    
  4117f4:	in     eax,dx
  4117f5:	jmp    0x411793
  4117f7:	pop    ss
  4117f8:	gs add eax,0x0
  4117fe:	add    BYTE PTR [eax],al
  411800:	add    BYTE PTR [eax],al
  411802:	add    BYTE PTR [eax],al
  411804:	cmp    BYTE PTR ds:0xf91f2c84,ch
  41180a:	hlt    
  41180b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41180c:	xchg   BYTE PTR [ebx],ah
  41180e:	or     eax,0xe57fcce9
  411813:	sbb    cl,BYTE PTR [esi-0x3c]
  411816:	cld    
  411817:	mov    ecx,0xb9f8c44f
  41181c:	imul   esi,DWORD PTR [esp+eax*1-0x9a2e200],0x40a8e9ff
  411827:	lock popf 
  411829:	shl    ah,0x77
  41182c:	mov    dl,0x2a
  41182e:	fdiv   QWORD PTR [esi+edx*4-0x22]
  411832:	js     0x411830
  411834:	fidivr WORD PTR [eax+ebp*2-0x1]
  411838:	(bad)  [eax-0x4e]
  41183b:	pop    esi
  41183c:	sub    esp,ebp
  41183e:	retf   
  41183f:	or     al,0x66
  411841:	dec    esp
  411842:	inc    ecx
  411843:	call   0xac29d0b1
  411848:	cmc    
  411849:	outs   dx,BYTE PTR ds:[esi]
  41184a:	in     al,0x0
  41184c:	loopne 0x4117d0
  41184e:	lea    edi,[ebp+0x72]
  411851:	xor    DWORD PTR [edi-0x3f],0xe46fb5
  411858:	mov    ds:0x227d8d85,eax
  41185d:	xor    DWORD PTR [edi+0x10],0xe8f06809
  411864:	data16 (bad) 
	...
  411872:	int    0x43
  411874:	push   eax
  411875:	pop    edi
  411876:	outs   dx,DWORD PTR ds:[esi]
  411877:	aas    
  411878:	push   es
  411879:	add    BYTE PTR [ebp-0x1cff1791],ah
  41187f:	jbe    0x411864
  411881:	mov    esi,esi
  411883:	or     BYTE PTR [ebx+ecx*4],0xb3
  411887:	xchg   ebx,eax
  411888:	icebp  
  411889:	jne    0x4118cd
  41188b:	scas   al,BYTE PTR es:[edi]
  41188c:	icebp  
  41188d:	mov    dh,BYTE PTR [ebx-0xb1f3329]
  411893:	shl    ah,1
  411895:	loopne 0x41185c
  411897:	fdivr  st(2),st
  411899:	mov    DWORD PTR [ebx],esp
  41189b:	cmp    eax,0xaa0a7d87
  4118a0:	js     0x41189e
  4118a2:	iret   
  4118a3:	rol    DWORD PTR [ebp-0x53],0x44
  4118a7:	retfw  0xaf44
  4118ab:	push   ss
  4118ac:	push   cs
  4118ad:	add    bh,cl
  4118af:	fwait
  4118b0:	inc    esp
  4118b1:	loopne 0x4118b2
  4118b3:	mov    ds:0x8fff444,eax
  4118b8:	mov    ds:0x928ec774,eax
  4118bd:	cli    
  4118be:	mov    BYTE PTR [ebp+0x22fbbff6],cl
  4118c4:	(bad)  
  4118c5:	jl     0x41184a
  4118c7:	push   ss
  4118c8:	cmp    al,BYTE PTR [esi]
  4118ca:	dec    esp
  4118cb:	add    ebp,DWORD PTR [esi-0x70bb1c01]
  4118d1:	jl     0x411942
  4118d3:	push   ss
  4118d4:	cmp    cl,BYTE PTR [eax]
	...
  4118de:	add    BYTE PTR [eax],al
  4118e0:	pop    eax
  4118e1:	mov    bl,0xad
  4118e3:	out    0x4a,eax
  4118e5:	mov    ecx,0xd348fe9f
  4118ea:	fsubr  st(7),st
  4118ec:	cmc    
  4118ed:	push   esp
  4118ee:	mov    al,ds:0xbcd338fe
  4118f3:	out    0xba,eax
  4118f5:	mov    ecx,0xd6f4fe9f
  4118fa:	inc    edx
  4118fb:	pop    edi
  4118fc:	push   ss
  4118fd:	fmul   DWORD PTR [eax+eax*1]
  411900:	inc    esp
  411901:	arpl   WORD PTR [eax-0x5b8cef56],bp
  411907:	or     BYTE PTR [edx-0x368bf6fe],0x99
  41190e:	and    esp,esi
  411910:	iret   
  411911:	xchg   ebx,eax
  411912:	pushf  
  411913:	mov    cl,BYTE PTR [edx+0xb74a132]
  411919:	popf   
  41191a:	or     bh,bh
  41191c:	pop    edx
  41191d:	mov    dl,0x90
  41191f:	dec    ecx
  411920:	ins    BYTE PTR es:[edi],dx
  411921:	popf   
  411922:	lahf   
  411923:	mov    bh,0xce
  411925:	jg     0x41190a
  411927:	add    ecx,edi
  411929:	leave  
  41192a:	mov    dl,0xba
  41192c:	mov    ?,WORD PTR [ebx+eiz*8+0x56]
  411930:	inc    esp
  411931:	sbb    al,0x67
  411933:	enter  0xd388,0x66
  411937:	das    
  411938:	mov    edi,0x58f9b87f
  41193d:	and    ebx,0x2ccacf03
  411943:	ret    0x0
	...
  41194e:	mov    esp,0xdf3f2a7f
  411953:	push   esi
  411954:	xor    eax,0x12900b79
  411959:	out    0x5c,eax
  41195b:	cli    
  41195c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41195d:	add    eax,DWORD PTR [esi-0x3b]
  411960:	repz sbb edi,ecx
  411963:	sub    bh,BYTE PTR [ecx-0x4d]
  411966:	popa   
  411967:	mov    ch,0xeb
  411969:	fwait
  41196a:	sub    eax,esi
  41196c:	loop   0x41191a
  41196e:	dec    ebp
  41196f:	lods   eax,DWORD PTR ds:[esi]
  411970:	repz add eax,edx
  411973:	jnp    0x4119d2
  411975:	add    esi,DWORD PTR [ebp-0x38c9255d]
  41197b:	pop    ss
  41197c:	jg     0x4119c7
  41197e:	xor    BYTE PTR [ebx],ch
  411980:	retf   
  411981:	ss ret 
  411983:	sub    bh,BYTE PTR [ecx]
  411985:	cld    
  411986:	sub    BYTE PTR [esi],ch
  411988:	sbb    DWORD PTR [ebp-0x4fd706e7],ebp
  41198e:	adc    DWORD PTR [ebp+0x7783acef],esi
  411994:	fwait
  411995:	je     0x41193a
  411997:	sub    bl,BYTE PTR [ebx-0x7d6c7c54]
  41199d:	ss (bad) 
  41199f:	pop    ss
  4119a0:	pop    eax
  4119a1:	dec    esi
  4119a2:	call   0xe78796d1
  4119a7:	sub    cl,BYTE PTR ds:0x782ac0fc
  4119ad:	loope  0x4119e3
  4119af:	or     eax,0x6650
	...
  4119bc:	jnp    0x4119e7
  4119be:	js     0x4119b5
  4119c0:	jae    0x411975
  4119c2:	add    al,0x41
  4119c4:	mov    ebx,cs
  4119c6:	icebp  
  4119c7:	dec    esi
  4119c8:	aaa    
  4119c9:	les    ebx,FWORD PTR [eax]
  4119cb:	push   0xffffffb4
  4119cd:	sub    bh,BYTE PTR [esi-0x13]
  4119d0:	dec    edi
  4119d1:	stos   DWORD PTR es:[edi],eax
  4119d2:	lock in al,0xe0
  4119d5:	jl     0x411964
  4119d7:	lods   al,BYTE PTR ds:[esi]
  4119d8:	pusha  
  4119d9:	cmp    DWORD PTR [eax-0x12],0xffffffa7
  4119dd:	jmp    0x480c:0x8e8e3051
  4119e4:	pusha  
  4119e5:	cld    
  4119e6:	dec    ebx
  4119e7:	jmp    0xac753c89
  4119ec:	xor    al,0xb4
  4119ee:	or     edx,edx
  4119f0:	mov    ecx,cs
  4119f2:	ret    
  4119f3:	sub    eax,eax
  4119f5:	jg     0x411984
  4119f7:	ins    BYTE PTR es:[edi],dx
  4119f8:	and    BYTE PTR [ebx-0x4c8a0889],al
  4119fe:	sbb    dh,bl
  411a00:	(bad)  
  411a01:	ja     0x4119e7
  411a03:	add    DWORD PTR [esi-0x719f0dd6],eax
  411a09:	aaa    
  411a0a:	gs jmp 0xd14d9adc
  411a10:	dec    ebp
  411a11:	mov    al,ds:0xc39ab6f1
  411a16:	clc    
  411a17:	add    ah,BYTE PTR [ebp+edx*1+0x1f]
  411a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a1c:	mov    esi,0x14f193
	...
  411a29:	add    BYTE PTR [ebx],al
  411a2b:	and    bh,BYTE PTR [eax]
  411a2d:	xor    al,0x24
  411a2f:	sub    DWORD PTR [esi+0x8f73f34],eax
  411a35:	add    BYTE PTR [esi+edi*4+0x714e7d35],cl
  411a3c:	jecxz  0x4119c9
  411a3e:	stos   DWORD PTR es:[edi],eax
  411a3f:	(bad)  
  411a40:	lea    edi,[eax]
  411a42:	out    0x6e,al
  411a44:	add    edi,edi
  411a46:	stos   DWORD PTR es:[edi],eax
  411a47:	fldl2t 
  411a49:	inc    ecx
  411a4a:	xchg   esp,eax
  411a4b:	(bad)  
  411a4c:	repnz sub esp,esi
  411a4f:	mov    ah,0xc3
  411a51:	ret    0x7dba
  411a54:	lea    edi,[ebp+0x12]
  411a57:	jg     0x411a5a
  411a59:	test   DWORD PTR [ecx-0x7c],ecx
  411a5c:	or     al,0x0
  411a5e:	int    0xd4
  411a60:	out    0x6e,al
  411a62:	sub    eax,0x7a8bf8cf
  411a67:	fwait
  411a68:	push   cs
  411a69:	inc    ebp
  411a6a:	out    0x89,al
  411a6c:	or     al,0x50
  411a6e:	loope  0x411ade
  411a70:	add    al,0xe8
  411a72:	sbb    eax,0xd1fff1bb
  411a77:	outs   dx,BYTE PTR ds:[esi]
  411a78:	sbb    bh,bh
  411a7a:	(bad)  [edx+ebp*8]
  411a7d:	mov    ecx,0x89f2d642
  411a82:	sub    esi,ecx
  411a84:	arpl   WORD PTR [eax],ax
  411a86:	xor    DWORD PTR [eax+0x18],esi
  411a89:	call   FWORD PTR [ebx+0x49ea2b]
	...
  411a97:	add    BYTE PTR [esi],bl
  411a99:	(bad)  
  411a9a:	repnz mov edx,ebx
  411a9d:	(bad)  
  411a9e:	lea    edi,[ecx]
  411aa0:	ss jo  0x411aa4
  411aa3:	(bad)  
  411aa4:	fucomi st,st(7)
  411aa6:	jmp    0xf315a298
  411aab:	sub    esp,DWORD PTR [esi-0x4a]
  411aae:	ret    
  411aaf:	ret    0x7d0a
  411ab2:	icebp  
  411ab3:	jne    0x411a83
  411ab5:	aam    0x78
  411ab7:	adc    al,0xcf
  411ab9:	adc    DWORD PTR ds:0xf493f0cc,edi
  411abf:	(bad)  
  411ac0:	bound  ebp,QWORD PTR [esi]
  411ac2:	xchg   esi,eax
  411ac3:	xchg   edx,eax
  411ac4:	loope  0x411a6f
  411ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ac7:	or     cl,BYTE PTR [edi]
  411ac9:	sub    al,0xf7
  411acb:	(bad)  
  411acc:	pop    edx
  411acd:	mov    dl,0x95
  411acf:	lds    ebp,FWORD PTR [esi]
  411ad1:	mov    ds:0xe98f2aa6,al
  411ad6:	mov    al,0xc1
  411ad8:	jecxz  0x411af0
  411ada:	dec    edi
  411adb:	cmp    esi,DWORD PTR [edx]
  411add:	iret   
  411ade:	aaa    
  411adf:	lea    ebp,[eax+0x1aff05eb]
  411ae5:	push   ebx
  411ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ae7:	je     0x411a70
  411ae9:	jno    0x411b27
  411aeb:	or     al,0x90
  411aed:	repz cmc 
  411aef:	out    0xf1,eax
  411af1:	pusha  
  411af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411af3:	(bad)  
  411af4:	aam    0x56
  411af6:	test   BYTE PTR [ebp+ebx*1+0xe18],0x0
	...
  411b06:	jo     0x411b1b
  411b08:	mov    ds:0xa6f742e7,al
  411b0d:	(bad)  
  411b0e:	mov    ah,0x56
  411b10:	inc    esi
  411b11:	leave  
  411b12:	lea    ecx,[edx+0xe]
  411b15:	jmp    0x4f32ab
  411b1a:	dec    esp
  411b1b:	mov    ds:0xa3d00ca4,eax
  411b20:	cld    
  411b21:	add    bh,cl
  411b23:	push   ss
  411b24:	sar    esi,1
  411b26:	or     BYTE PTR es:0x41adcf00,0xf4
  411b2e:	push   esp
  411b2f:	and    ah,BYTE PTR [eax+0x2]
  411b32:	xchg   edx,eax
  411b33:	out    0x12,al
  411b35:	add    BYTE PTR [edi-0x27],bh
  411b38:	and    DWORD PTR [eax],ecx
  411b3a:	idiv   DWORD PTR [esi-0x1e]
  411b3d:	dec    edx
  411b3e:	add    BYTE PTR [eax],ch
  411b40:	push   ds
  411b41:	add    al,0xf8
  411b43:	mov    cl,0xef
  411b45:	test   al,0x7b
  411b47:	ja     0x411ad4
  411b49:	gs loope 0x411b73
  411b4c:	mov    edi,DWORD PTR [ebp-0x6d]
  411b4f:	xchg   ebx,eax
  411b50:	data16 jmp 0x411b2b
  411b53:	mov    dl,0xea
  411b55:	test   al,0x5b
  411b57:	xor    ecx,DWORD PTR [ecx+eax*2-0x2294d8d2]
  411b5e:	add    bh,0x3c
  411b61:	(bad)  
  411b62:	fdivr  QWORD PTR [edi-0x12]
  411b65:	aad    0x3c
  411b67:	jge    0x411bb5
  411b69:	cwde   
	...
  411b72:	add    BYTE PTR [eax],al
  411b74:	test   al,0x27
  411b76:	in     al,0x7a
  411b78:	or     edx,DWORD PTR [esi+ebx*8]
  411b7b:	add    ebx,DWORD PTR [eax+0x1ba8cfad]
  411b81:	js     0x411bce
  411b83:	xor    eax,0x7d2b2780
  411b88:	adc    ecx,DWORD PTR [esi+eiz*2-0x15538715]
  411b8f:	test   al,0xfb
  411b91:	sub    ecx,DWORD PTR [ecx+edx*1]
  411b94:	out    dx,al
  411b95:	es or  ebx,ebp
  411b98:	and    bh,al
  411b9a:	cmp    al,0xc6
  411b9c:	mov    esp,0x3ceefa7f
  411ba1:	mul    BYTE PTR [ebx+eax*1+0x7cdbbd58]
  411ba8:	mov    edx,DWORD PTR [edi]
  411baa:	addr16 fwait
  411bac:	les    eax,FWORD PTR [eax-0x3c]
  411baf:	(bad)  
  411bb0:	in     eax,0x51
  411bb2:	popf   
  411bb3:	test   al,0x28
  411bb5:	daa    
  411bb6:	in     al,0xb0
  411bb8:	pop    ds
  411bb9:	add    ebx,esp
  411bbb:	adc    BYTE PTR [esi-0x43],al
  411bbe:	or     al,0xc9
  411bc0:	dec    ebx
  411bc1:	xchg   esp,eax
  411bc2:	in     al,0xa
  411bc4:	mov    bh,BYTE PTR [ebx+0x17c1e2e0]
  411bca:	jp     0x411bb7
  411bcc:	pop    ebx
  411bcd:	pop    eax
  411bce:	and    eax,0xe0bb73bb
  411bd3:	ret    0x1fa9
  411bd6:	xchg   BYTE PTR [eax+eax*1],dh
	...
  411be1:	add    BYTE PTR [ebx+0x2],al
  411be4:	int3   
  411be5:	retf   0x1853
  411be8:	or     DWORD PTR [esi+0x1d],edi
  411beb:	adc    BYTE PTR [edi-0x77],0x45
  411bef:	int3   
  411bf0:	call   0x36591d67
  411bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf6:	pop    eax
  411bf7:	mov    cl,0x7
  411bf9:	(bad)
  411bfe:	sub    edi,DWORD PTR [eax+ebp*8-0xe740eba]
  411c05:	mov    ah,0x40
  411c07:	mov    dh,0xf1
  411c09:	mov    esp,0x36ac1e94
  411c0e:	aaa    
  411c0f:	and    eax,0x76b12906
  411c14:	icebp  
  411c15:	xchg   esp,eax
  411c16:	sub    BYTE PTR [esi],bl
  411c18:	nop
  411c19:	mov    DWORD PTR [edi],esp
  411c1b:	and    eax,0x39172926
  411c20:	iret   
  411c21:	(bad)  
  411c23:	clc    
  411c24:	inc    edi
  411c25:	sbb    eax,0xac8036db
  411c2a:	xor    BYTE PTR [esi-0x49eb5b81],0x5e
  411c31:	rcl    DWORD PTR [ebp+0x29],1
  411c34:	repnz fidivr WORD PTR [edx-0x1292345]
  411c3b:	inc    ebx
  411c3c:	in     eax,0xd6
  411c3e:	cwde   
  411c3f:	repnz add BYTE PTR es:[ebp+0xdc58],dh
	...
  411c4f:	add    dl,ah
  411c51:	js     0x411be0
  411c53:	jge    0x411c93
  411c55:	jnp    0x411ccf
  411c57:	pop    ss
  411c58:	cmp    DWORD PTR [eax-0x28],esi
  411c5b:	jmp    ebx
  411c5d:	xor    esi,ebx
  411c5f:	jne    0x411c4b
  411c61:	fdivr  QWORD PTR [eax+0x8]
  411c64:	pop    ecx
  411c65:	rcl    BYTE PTR [edi+edi*8],1
  411c68:	ret    
  411c69:	xor    ebp,edx
  411c6b:	add    cl,BYTE PTR [ebp-0x22]
  411c6e:	repnz inc edi
  411c70:	or     eax,0x640ff457
  411c75:	push   edx
  411c76:	lock (bad) 
  411c78:	cmp    ebp,ebx
  411c7a:	js     0x411c70
  411c7c:	push   ds
  411c7d:	shr    DWORD PTR [edi+edi*8+0x19],0x94
  411c82:	or     al,0x0
  411c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c85:	adc    DWORD PTR [ecx-0x37],0x550c8ff4
  411c8c:	sbb    eax,0x63ff5b08
  411c91:	sub    edx,ebp
  411c93:	ror    BYTE PTR [eax-0x3c970d22],cl
  411c99:	pop    edi
  411c9a:	dec    ebx
  411c9b:	add    BYTE PTR [ecx+0x2e8046e],ch
  411ca1:	push   0x416d000c
  411ca6:	jns    0x411cad
  411ca8:	cmp    esp,esp
  411caa:	retf   
  411cab:	or     BYTE PTR [esi-0x1d],dh
  411cae:	icebp  
  411caf:	call   FWORD PTR [ecx+0x70]
  411cb2:	add    al,0xe8
	...
  411cbc:	add    BYTE PTR [eax],al
  411cbe:	xchg   edi,eax
  411cbf:	(bad)  
  411cc0:	icebp  
  411cc1:	(bad)  
  411cc2:	stc    
  411cc3:	aam    0x6d
  411cc5:	inc    ecx
  411cc6:	fidivr WORD PTR ss:[eax+0x8]
  411cca:	add    DWORD PTR [eax+edi*2],eax
  411ccd:	dec    ebx
  411cce:	iret   
  411ccf:	push   ss
  411cd0:	push   cs
  411cd1:	or     ecx,DWORD PTR [edi]
  411cd3:	int3   
  411cd4:	or     ebx,DWORD PTR [edi+0x16]
  411cd7:	fprem1 
  411cd9:	call   DWORD PTR [edx+ebp*1]
  411cdc:	into   
  411cdd:	mov    eax,0xfeaaee10
  411ce2:	std    
  411ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce4:	in     eax,0x6
  411ce6:	jp     0x411cde
  411ce8:	stos   BYTE PTR es:[edi],al
  411ce9:	je     0x411cb2
  411ceb:	push   cs
  411cec:	jge    0x411d37
  411cee:	iret   
  411cef:	push   ss
  411cf0:	idiv   DWORD PTR [edi-0x36b4e49e]
  411cf6:	or     eax,0xb0680e2f
  411cfb:	jnp    0x411d44
  411cfd:	add    al,dl
  411cff:	and    esi,esi
  411d01:	out    0xe,eax
  411d03:	bound  ecx,QWORD PTR [eax]
  411d05:	add    ah,dl
  411d07:	push   esi
  411d08:	cmp    al,0x9
  411d0a:	mov    eax,0xca8efa4b
  411d0f:	stos   BYTE PTR es:[edi],al
  411d10:	ja     0x411d52
  411d12:	iret   
  411d13:	ds cld 
  411d15:	fs push cs
  411d17:	pop    ss
  411d18:	stos   DWORD PTR es:[edi],eax
  411d19:	je     0x411ce2
  411d1b:	into   
  411d1c:	ror    BYTE PTR [edx-0x31],cl
  411d1f:	push   ss
  411d20:	idiv   DWORD PTR [edi+0x0]
  411d26:	add    BYTE PTR [eax],al
  411d28:	add    BYTE PTR [eax],al
  411d2a:	add    BYTE PTR [eax],al
  411d2c:	add    ah,BYTE PTR [eax]
  411d2e:	stos   DWORD PTR es:[edi],eax
  411d2f:	je     0x411d04
  411d31:	lods   eax,DWORD PTR ds:[esi]
  411d32:	or     al,0xa0
  411d34:	dec    ecx
  411d35:	xlat   BYTE PTR ds:[ebx]
  411d36:	or     eax,0x48f40e68
  411d3b:	add    BYTE PTR [eax+0xb],ch
  411d3e:	mul    bh
  411d40:	shl    cl,cl
  411d42:	or     eax,0x3c56c400
  411d47:	or     DWORD PTR [eax-0x5d],edx
  411d4a:	stc    
  411d4b:	mov    ss,edx
  411d4d:	mov    edx,0x7fcf4077
  411d52:	stos   DWORD PTR es:[edi],eax
  411d53:	add    ecx,edi
  411d55:	jg     0x411d3a
  411d57:	inc    esp
  411d58:	push   es
  411d59:	inc    ecx
  411d5a:	in     al,dx
  411d5b:	add    eax,DWORD PTR [edx+0xc81aff8]
  411d61:	sub    edx,DWORD PTR [edx]
  411d63:	dec    ebp
  411d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d65:	cs dec eax
  411d67:	inc    ebx
  411d68:	iret   
  411d69:	and    al,0x31
  411d6b:	cld    
  411d6c:	lock inc ecx
  411d6e:	das    
  411d6f:	add    al,0xcf
  411d71:	js     0x411d16
  411d73:	das    
  411d74:	rol    esp,1
  411d76:	xor    DWORD PTR [ebx+0x43e37b0e],edi
  411d7c:	push   esp
  411d7d:	das    
  411d7e:	outs   dx,DWORD PTR ds:[esi]
  411d7f:	daa    
  411d80:	xlat   BYTE PTR ds:[ebx]
  411d81:	sbb    ch,ah
  411d83:	pop    edi
  411d84:	pop    eax
  411d85:	gs jecxz 0x411db6
  411d88:	aad    0xda
  411d8a:	or     esi,DWORD PTR [ecx-0x5b1c3ed4]
	...
  411d98:	add    BYTE PTR [eax],al
  411d9a:	cmp    edi,DWORD PTR [eax+0x5b]
  411d9d:	ins    DWORD PTR es:[edi],dx
  411d9e:	add    eax,0x70f8e380
  411da3:	lods   eax,DWORD PTR ds:[esi]
  411da4:	loope  0x411dea
  411da6:	or     DWORD PTR [ecx],edi
  411da8:	es add bh,cl
  411dab:	test   al,0xfb
  411dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411daf:	pop    esi
  411db0:	arpl   bp,sp
  411db2:	(bad)  
  411db3:	stos   DWORD PTR es:[edi],eax
  411db4:	fadd   QWORD PTR [ebx+0xfb774c9]
  411dba:	dec    edi
  411dbb:	arpl   bp,di
  411dbd:	das    
  411dbe:	enter  0xd2ff,0x48
  411dc2:	sti    
  411dc3:	jne    0x411e28
  411dc5:	in     eax,0xb
  411dc7:	lods   al,BYTE PTR ds:[esi]
  411dc8:	call   0x70e0bf50
  411dcd:	add    BYTE PTR [ecx+0x4f3cc37b],dl
  411dd3:	arpl   WORD PTR [ecx+ebp*8],cx
  411dd6:	stc    
  411dd7:	dec    eax
  411dd8:	retf   0x68a4
  411ddb:	and    esi,edx
  411ddd:	jmp    0xe18958ae
  411de2:	int3   
  411de3:	jg     0x411df1
  411de5:	jmp    0xc245c191
  411dea:	out    0xff,eax
  411dec:	xor    DWORD PTR [esi],ecx
  411dee:	call   0x677dab49
  411df3:	and    edi,DWORD PTR [ecx-0x25]
  411df6:	cmp    edi,DWORD PTR [esp+esi*8+0xc7fcce8]
  411dfd:	sbb    al,0x0
	...
  411e07:	add    bh,al
  411e09:	cmp    cl,BYTE PTR [eax-0x63]
  411e0c:	int    0x7f
  411e0e:	or     al,0xe9
  411e10:	inc    edi
  411e11:	mov    ?,ecx
  411e13:	and    al,0x33
  411e15:	or     BYTE PTR [ecx+ebp*8],0xcc
  411e19:	lods   al,BYTE PTR ds:[esi]
  411e1a:	push   es
  411e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e1c:	rol    DWORD PTR [edx+0x22772cc9],cl
  411e22:	bnd jmp 0xc5731df4
  411e28:	jmp    0x64e60fa9
  411e2d:	adc    eax,0x27e92e0a
  411e32:	or     eax,0x8d7fcce9
  411e37:	les    esi,FWORD PTR [eax+0x7f]
  411e3a:	ja     0x411e26
  411e3c:	push   edx
  411e3d:	jns    0x411e6b
  411e3f:	scas   al,BYTE PTR es:[edi]
  411e40:	dec    esp
  411e41:	popa   
  411e42:	or     al,0xb4
  411e44:	cld    
  411e45:	cmc    
  411e46:	outs   dx,DWORD PTR ds:[esi]
  411e47:	icebp  
  411e48:	push   edi
  411e49:	xchg   BYTE PTR [esi+ebx*8+0x691aab6c],cl
  411e50:	mov    bl,0x80
  411e52:	sub    al,0x94
  411e54:	mov    esp,0x6800e5ca
  411e59:	test   al,0x4a
  411e5b:	add    esi,ebx
  411e5d:	and    ecx,DWORD PTR [ebx-0x80]
  411e60:	cmp    DWORD PTR [esi+0x77],0x496b51f5
  411e67:	xor    cl,0x7b
  411e6a:	ja     0x411e4b
	...
  411e74:	add    BYTE PTR [eax],al
  411e76:	imul   edi,DWORD PTR [eax+0x7e3600f8],0x737b8b0c
  411e80:	test   DWORD PTR [ebp+0x1e],edi
  411e83:	shr    DWORD PTR [ebx],1
  411e85:	adc    BYTE PTR [ecx],0x12
  411e88:	jns    0x411ea6
  411e8a:	cmp    BYTE PTR [esi+0xc],dh
  411e8d:	(bad)  
  411e8e:	mov    ebx,0x1de85807
  411e93:	loopne 0x411e87
  411e95:	(bad)  
  411e96:	std    
  411e97:	cmp    eax,0xbda10679
  411e9c:	ret    
  411e9d:	ret    0x7dea
  411ea0:	test   edi,esi
  411ea2:	test   al,0xde
  411ea4:	dec    eax
  411ea5:	hlt    
  411ea6:	test   eax,0xcb0032fb
  411eab:	in     al,0xf2
  411ead:	jne    0x411ee9
  411eaf:	data16 in al,0xc
  411eb2:	xor    ch,bl
  411eb4:	repnz pop edi
  411eb6:	jo     0x411eec
  411eb8:	int3   
  411eb9:	add    al,0xb6
  411ebb:	push   0x3835ec85
  411ec0:	retf   0x3956
  411ec3:	cli    
  411ec4:	jo     0x411eda
  411ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ec7:	mov    DWORD PTR [ebx],eax
  411ec9:	add    DWORD PTR [ebx+0x76414694],0x7d
  411ed0:	ja     0x411ed8
  411ed2:	xchg   ecx,eax
  411ed3:	mov    edi,0x7d76c2c3
  411ed8:	test   DWORD PTR [ebp+0x0],eax
	...
  411ee3:	add    bh,cl
  411ee5:	and    dl,cl
  411ee7:	add    al,0x43
  411ee9:	rol    DWORD PTR [edi+0x0],0xc8
  411eed:	xchg   ebp,eax
  411eee:	imul   eax,DWORD PTR [eax],0x4d116cf
  411ef4:	outs   dx,DWORD PTR ds:[esi]
  411ef5:	cdq    
  411ef6:	inc    edi
  411ef7:	add    al,dl
  411ef9:	xchg   ebp,eax
  411efa:	jne    0x411efc
  411efc:	iret   
  411efd:	push   ss
  411efe:	rol    DWORD PTR [ebx+ebp*2],1
  411f01:	xchg   ecx,eax
  411f02:	dec    eax
  411f03:	add    al,bl
  411f05:	xchg   ebp,eax
  411f06:	add    BYTE PTR [eax],0xcf
  411f09:	push   ss
  411f0a:	popf   
  411f0b:	inc    esp
  411f0c:	and    eax,DWORD PTR [edi-0x78e8bb65]
  411f12:	fwait
  411f13:	inc    esp
  411f14:	or     eax,DWORD PTR [edi-0x3e9ccb53]
  411f1a:	dec    eax
  411f1b:	add    al,bh
  411f1d:	cmp    eax,0xffffffe7
  411f20:	xor    edi,ebx
  411f22:	scas   al,BYTE PTR es:[edi]
  411f23:	(bad)  
  411f24:	pop    edx
  411f25:	push   esp
  411f26:	mov    al,ds:0xbc5c524f
  411f2b:	dec    edi
  411f2c:	dec    edx
  411f2d:	push   esp
  411f2e:	cwde   
  411f2f:	dec    edi
  411f30:	shr    bl,1
  411f32:	imul   ecx,DWORD PTR [ebp+0x74af170e],0xf769fedf
  411f3c:	mov    eax,0x93449c99
  411f41:	out    0x9c,al
  411f43:	inc    esp
  411f44:	scas   eax,DWORD PTR es:[edi]
  411f45:	out    0x9c,al
  411f47:	inc    esp
	...
  411f50:	add    BYTE PTR [eax],al
  411f52:	stos   DWORD PTR es:[edi],eax
  411f53:	out    0xae,al
  411f55:	xor    al,0x6f
  411f57:	test   al,0x48
  411f59:	add    BYTE PTR [eax+0x55e7fdeb],dl
  411f5f:	outs   dx,BYTE PTR ds:[esi]
  411f60:	scas   al,BYTE PTR es:[edi]
  411f61:	inc    BYTE PTR [eax+0x128ea9eb]
  411f67:	sub    BYTE PTR [edi],0xa2
  411f6a:	sti    
  411f6b:	inc    ebx
  411f6c:	arpl   WORD PTR [eax-0x79],cx
  411f6f:	cmp    BYTE PTR [ecx-0x1bdf9f4d],ah
  411f75:	add    ecx,DWORD PTR [edx-0x46]
  411f78:	aaa    
  411f79:	xor    esp,ebp
  411f7b:	jle    0x411f1a
  411f7d:	add    esi,DWORD PTR [ebp-0x4afc7281]
  411f83:	jg     0x411fd5
  411f85:	dec    eax
  411f86:	and    ecx,edi
  411f88:	jmp    0xd404:0x24b467f7
  411f8f:	aas    
  411f90:	jmp    0x411f19
  411f92:	(bad)  
  411f93:	jle    0x411f78
  411f95:	add    ecx,DWORD PTR [edx+eiz*4-0x6d]
  411f99:	add    al,0xc0
  411f9b:	sti    
  411f9c:	jecxz  0x411fa0
  411f9e:	iret   
  411f9f:	jg     0x41200f
  411fa1:	dec    edi
  411fa2:	adc    esp,DWORD PTR [eax+edx*1-0x58]
  411fa6:	leave  
  411fa7:	clc    
  411fa8:	pop    DWORD PTR [edi+ecx*8]
  411fab:	jg     0x411f3c
  411fad:	lea    esp,[ebx+0x4f]
  411fb0:	outs   dx,DWORD PTR ds:[esi]
  411fb1:	pop    ds
  411fb2:	add    esi,esp
  411fb4:	adc    al,dl
	...
  411fbe:	add    BYTE PTR [eax],al
  411fc0:	in     eax,dx
  411fc1:	jl     0x412039
  411fc3:	push   0x919fa9d1
  411fc8:	adc    esp,DWORD PTR [ebx+edi*2]
  411fcb:	pop    ss
  411fcc:	lahf   
  411fcd:	sub    BYTE PTR [ebx+ecx*2+0x1f667fcf],dh
  411fd4:	mov    bl,0x80
  411fd6:	loop   0x411f5f
  411fd8:	call   0x539d:0x4c03e380
  411fdf:	add    al,0xc8
  411fe1:	add    esp,DWORD PTR [eax]
  411fe3:	add    al,0xcf
  411fe5:	jg     0x41204d
  411fe7:	pop    ds
  411fe8:	jae    0x411f6a
  411fea:	or     al,0xe6
  411fec:	dec    eax
  411fed:	(bad)  [ecx+ebp*8]
  411ff0:	int3   
  411ff1:	push   ds
  411ff2:	js     0x412019
  411ff4:	and    ebx,DWORD PTR [eax+0x4f]
  411ff7:	push   ds
  411ff8:	or     BYTE PTR cs:[eax+0x21],cl
  411ffc:	cs xchg esp,eax
  411ffe:	lock push cs
  412000:	rol    BYTE PTR [edi-0xe],0x7c
  412004:	cmp    BYTE PTR [edi],ah
  412006:	push   edx
  412007:	pushf  
  412008:	outs   dx,DWORD PTR ds:[esi]
  412009:	push   ds
  41200a:	gs cdq 
  41200c:	jmp    0x78422cd1
  412011:	(bad)  
  412012:	or     al,0xe9
  412014:	cld    
  412015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412016:	pop    esp
  412017:	inc    esp
  412018:	mov    WORD PTR [edi-0xf],?
  41201b:	pop    esp
  41201c:	adc    esp,DWORD PTR [edi]
  41201e:	mov    BYTE PTR [eax],ah
  412020:	sar    DWORD PTR [edi+0x5],cl
  412023:	test   eax,0x0
  412028:	add    BYTE PTR [eax],al
  41202a:	add    BYTE PTR [eax],al
  41202c:	add    BYTE PTR [eax],al
  41202e:	mov    eax,0xb0166477
  412033:	ror    BYTE PTR [ecx+eax*8],0xd
  412037:	(bad)  
  412038:	or     al,0xe9
  41203a:	mov    esp,0x8c0c59a7
  41203f:	jg     0x412032
  412041:	adc    al,0x1b
  412043:	daa    
  412044:	fs and bl,cl
  412047:	jg     0x41204e
  412049:	test   eax,0x266477c0
  41204e:	test   al,0xc0
  412050:	or     al,0x91
  412052:	xor    esi,eax
  412054:	or     al,0xe9
  412056:	cld    
  412057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412058:	push   ecx
  412059:	add    al,0xc
  41205b:	xor    cl,0xdc
  41205e:	test   BYTE PTR [esi],ah
  412060:	inc    eax
  412061:	mov    al,0xcc
  412063:	jg     0x41206a
  412065:	sub    DWORD PTR [ecx-0x33169b3c],edi
  41206b:	cs mov bl,0x0
  41206e:	or     DWORD PTR [esi+0x0],esi
  412071:	call   0x327a0d
  412076:	mov    ecx,0x278e9a35
  41207b:	xor    cl,0x75
  41207e:	jp     0x41206a
  412080:	pop    esi
  412081:	pop    ecx
  412082:	leave  
  412083:	fcomip st,st(2)
  412085:	jne    0x412041
  412087:	fistp  QWORD PTR [eax-0xc]
  41208a:	leave  
  41208b:	jne    0x41208d
  41208d:	call   0x3279df
	...
  41209a:	add    BYTE PTR [eax],al
  41209c:	dec    ecx
  41209d:	je     0x41209b
  41209f:	inc    ebx
  4120a1:	jmp    0x5960:0xea1a75f2
  4120a8:	sub    esi,edi
  4120aa:	bnd jne 0x4120bf
  4120ad:	(bad)  
  4120ae:	js     0x41208c
  4120b0:	stc    
  4120b1:	ja     0x4120b3
  4120b3:	call   0x327da1
  4120b8:	or     DWORD PTR [eax-0x3c],edi
  4120bb:	call   0x32e086
  4120c0:	fstp   DWORD PTR [ebp-0x3d]
  4120c3:	ret    0x8216
  4120c6:	push   edi
  4120c7:	mov    ebx,DWORD PTR [edx+0x2]
  4120ca:	into   
  4120cb:	call   0x5598145
  4120d0:	jmp    0xe6423fdb
  4120d5:	cmp    DWORD PTR [edi+0x45],0x457f5352
  4120dc:	dec    esi
  4120dd:	push   esp
  4120de:	jg     0x412125
  4120e0:	cmp    dl,BYTE PTR [esi+eiz*2+0x2]
  4120e4:	sub    DWORD PTR [edi+0x1c],esi
  4120e7:	call   0x3415b3
  4120ec:	xor    eax,0xcf01f45f
  4120f1:	and    eax,0x26cff285
  4120f6:	push   cs
  4120f7:	call   FWORD PTR [edx]
  4120f9:	pop    ebx
  4120fa:	add    DWORD PTR [edi+edi*2+0x2f],0x64ee
	...
  41210a:	push   cs
  41210b:	daa    
  41210c:	xchg   ebx,eax
  41210d:	je     0x41218e
  41210f:	mov    edi,0x26cf4671
  412114:	pop    es
  412115:	rcr    al,0xa3
  412118:	mov    al,0xff
  41211a:	pusha  
  41211b:	daa    
  41211c:	popf   
  41211d:	inc    esp
  41211e:	arpl   di,dx
  412120:	pushf  
  412121:	inc    esp
  412122:	push   edi
  412123:	neg    DWORD PTR [esp+eax*2+0x23f74b]
  41212a:	inc    eax
  41212b:	pushf  
  41212c:	std    
  41212d:	out    0x31,eax
  41212f:	adc    eax,0xa44cfe93
  412134:	nop
  412135:	add    al,bl
  412137:	mov    ds:0x2720ff55,eax
  41213c:	xchg   ebx,eax
  41213d:	je     0x412162
  41213f:	mov    edi,0x268e63a5
  412144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412145:	inc    ebp
  412146:	nop
  412147:	es push cs
  412149:	or     ecx,DWORD PTR [edi]
  41214b:	test   DWORD PTR es:[edx-0x72f1d931],esp
  412152:	mov    bh,dl
  412154:	cmp    eax,0x3dde928d
  412159:	lea    ecx,[edx-0x3395c20e]
  41215f:	or     eax,0x57e71015
  412164:	xchg   edi,eax
  412165:	dec    al
  412167:	test   eax,0x25cff82c
  41216c:	test   DWORD PTR [edx+0x0],eax
  412172:	add    BYTE PTR [eax],al
  412174:	add    BYTE PTR [eax],al
  412176:	add    BYTE PTR [eax],al
  412178:	iret   
  412179:	es push cs
  41217b:	mov    ecx,DWORD PTR [edx]
  41217d:	or     BYTE PTR [edi-0x62],0xf8
  412181:	or     al,0xa9
  412183:	scas   eax,DWORD PTR es:[edi]
  412184:	push   ebx
  412185:	ret    0x334f
  412188:	dec    edx
  412189:	ret    0x335b
  41218c:	inc    edx
  41218d:	ret    0x3347
  412190:	cmc    
  412191:	xor    DWORD PTR [edx],0x18
  412194:	fbld   TBYTE PTR [edi]
  412196:	ins    DWORD PTR es:[edi],dx
  412197:	xchg   ebp,eax
  412198:	jns    0x4121b6
  41219a:	and    BYTE PTR [bx+0x7e],dh
  41219e:	nop
  41219f:	ds nop
  4121a1:	sub    BYTE PTR [edi-0x73],0xf
  4121a5:	sbb    BYTE PTR [edx],0x9e
  4121a8:	pop    ecx
  4121a9:	sbb    al,0x2b
  4121ab:	or     BYTE PTR [edi],ch
  4121ad:	or     eax,0x1c4803a5
  4121b2:	repz popf 
  4121b4:	or     DWORD PTR [edx+0x7f8f8d3f],eax
  4121ba:	loop   0x412159
  4121bc:	xor    DWORD PTR [ebx+ebp*8],ebx
  4121bf:	pop    ss
  4121c0:	and    esp,DWORD PTR [edi]
  4121c2:	out    0x9f,al
  4121c4:	and    DWORD PTR [ebx+eiz*4],ebx
  4121c7:	inc    edi
  4121c8:	daa    
  4121c9:	jle    0x4121ae
  4121cb:	add    ecx,edi
  4121cd:	add    BYTE PTR [ecx],cl
  4121cf:	sbb    BYTE PTR [edx-0x42],0xe3
  4121d3:	pushf  
  4121d4:	jl     0x41223c
  4121d6:	data16 fistp WORD PTR [eax+0xd]
  4121da:	and    eax,0x4
  4121df:	add    BYTE PTR [eax],al
  4121e1:	add    BYTE PTR [eax],al
  4121e3:	add    BYTE PTR [eax],al
  4121e5:	add    al,dh
  4121e7:	xchg   edx,eax
  4121e8:	ret    
  4121e9:	sub    BYTE PTR [ebx-0x30bc9e1d],0x1c
  4121f0:	adc    ch,dh
  4121f2:	jo     0x412192
  4121f4:	pop    ebp
  4121f5:	inc    esp
  4121f6:	iret   
  4121f7:	or     ah,BYTE PTR [ecx]
  4121f9:	lods   al,BYTE PTR ds:[esi]
  4121fa:	sbb    BYTE PTR [ebx],bl
  4121fc:	stc    
  4121fd:	scas   eax,DWORD PTR es:[edi]
  4121fe:	rcl    DWORD PTR [ebp-0x6ba41af4],0x4
  412205:	add    ebx,0x9466f217
  41220b:	inc    ecx
  41220c:	sbb    eax,0xe106d9e9
  412211:	push   0xffffff87
  412213:	daa    
  412214:	repnz aam 0xc4
  412217:	daa    
  412218:	xor    ebx,DWORD PTR [ebx+ebp*2+0x51d9671a]
  41221f:	(bad)  
  412220:	cld    
  412221:	cdq    
  412222:	pop    ebx
  412223:	xchg   esp,eax
  412224:	add    al,0x41
  412226:	sbb    ebp,DWORD PTR [esi+0x3fd626f1]
  41222c:	js     0x412213
  41222e:	xchg   ebp,eax
  41222f:	inc    ecx
  412230:	add    eax,0x646fa6e9
  412235:	xor    ah,BYTE PTR [edi-0x6f8bf340]
  41223b:	minps  xmm2,XMMWORD PTR [ecx]
  41223e:	fnstenv [esi+0x3fc7f6f1]
  412244:	js     0x41222b
  412246:	add    eax,0xe90541
	...
  412253:	add    BYTE PTR [ebx],dl
  412255:	(bad)  
  412256:	loopne 0x412240
  412258:	int3   
  412259:	jg     0x412267
  41225b:	fs xchg ecx,eax
  41225d:	sub    ebx,DWORD PTR [ebp-0x32]
  412260:	mov    ecx,0xc1b5e487
  412265:	sbb    dh,dl
  412267:	repnz or al,0x8f
  41226a:	or     ch,BYTE PTR [edx-0x27]
  41226d:	sub    ecx,DWORD PTR ds:0xcc66c934
  412273:	mov    al,0xe
  412275:	or     DWORD PTR [ecx+edi*1],0xfffffff6
  412279:	inc    edi
  41227a:	out    0xec,al
  41227c:	sbb    eax,0x8de87e23
  412281:	xchg   ah,cl
  412283:	add    bl,cl
  412285:	repz pop ecx
  412287:	or     DWORD PTR [esi+0x7d],0x77
  41228b:	add    eax,0x10c7efe
  412290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412291:	push   esp
  412293:	add    DWORD PTR [edx-0x203fda7c],ecx
  412299:	inc    eax
  41229a:	or     al,BYTE PTR [eax]
  41229c:	inc    ebp
  41229d:	xchg   edx,eax
  41229e:	jg     0x4122e1
  4122a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122a1:	or     DWORD PTR [ecx-0x14],ecx
  4122a4:	data16 sti 
  4122a6:	js     0x4122b0
  4122a8:	push   ds
  4122a9:	mov    bl,0x58
  4122ab:	inc    ecx
  4122ad:	(bad)  
  4122ae:	stc    
  4122af:	add    DWORD PTR [edx],edi
  4122b1:	or     DWORD PTR [ebp+0xa7174f8],0x83
  4122bb:	add    BYTE PTR [eax],al
  4122bd:	add    BYTE PTR [eax],al
  4122bf:	add    BYTE PTR [eax],al
  4122c1:	add    BYTE PTR [ebx-0x16],al
  4122c4:	icebp  
  4122c5:	je     0x41232f
  4122c7:	daa    
  4122c8:	mov    dl,0xc9
  4122ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122cb:	xchg   BYTE PTR [ecx*4-0xbe1585],cl
  4122d2:	mov    ebx,0x5b92e486
  4122d7:	sti    
  4122d8:	repnz cmp DWORD PTR [esi],0xffffff80
  4122dc:	js     0x4122e3
  4122de:	mov    ch,0xfb
  4122e0:	or     esi,DWORD PTR [ebp+0x28]
  4122e3:	add    DWORD PTR [ecx-0x14],esi
  4122e6:	outs   dx,DWORD PTR es:[esi]
  4122e8:	or     ch,BYTE PTR [ebx]
  4122ea:	dec    sp
  4122ec:	int3   
  4122ed:	or     dh,dh
  4122ef:	push   es
  4122f0:	dec    ecx
  4122f1:	in     al,dx
  4122f2:	out    0xf6,al
  4122f4:	js     0x4122fe
  4122f6:	push   cs
  4122f7:	jae    0x412350
  4122f9:	jmp    DWORD PTR [ecx]
  4122fb:	mov    cl,ah
  4122fd:	jne    0x4122f7
  4122ff:	add    BYTE PTR [ecx-0x14],dh
  412302:	imul   BYTE PTR [esi+0xa]
  412305:	sub    ecx,edi
  412307:	call   0x2908e4cb
  41230c:	test   DWORD PTR [ebx+edi*4+0x77],eax
  412310:	xchg   ebp,eax
  412311:	je     0x4122ea
  412313:	out    dx,al
  412314:	cmp    al,0x55
  412316:	mov    eax,0xff78992
  41231b:	adc    al,0xc
  41231d:	sub    DWORD PTR [edx],0xffffffb3
  412320:	or     BYTE PTR [ebp-0x37],dh
  412323:	ins    DWORD PTR es:[edi],dx
  412324:	enter  0xc8,0x0
	...
  412330:	lea    ebx,[edi]
  412332:	push   cs
  412333:	lea    ecx,[edx]
  412335:	pop    ebx
  412336:	cmp    bh,bh
  412338:	add    cl,BYTE PTR [edi]
  41233a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41233b:	sbb    bl,BYTE PTR ss:[edx-0x6b]
  41233f:	xor    BYTE PTR [edi-0x79],0x1b
  412343:	push   es
  412344:	dec    esp
  412345:	in     al,dx
  412346:	test   eax,0xe328e3ff
  41234b:	mov    edi,0x6596
  412350:	dec    edx
  412351:	in     al,dx
  412352:	test   eax,0x5f4504f
  412357:	call   0xfed81f41
  41235c:	dec    esp
  41235d:	jg     0x412347
  41235f:	je     0x412332
  412361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412362:	adc    ebp,esp
  412364:	iret   
  412365:	xchg   ebx,eax
  412366:	or     ebp,DWORD PTR [ebx]
  412368:	(bad)  
  41236a:	mov    DWORD PTR [edi],0xec4cabcf
  412370:	jg     0x41232e
  412372:	call   0xa65fbe75
  412377:	and    eax,0x8c9741a2
  41237c:	mov    cl,BYTE PTR [edx+0x3e]
  41237f:	inc    DWORD PTR [edx-0x646a59e2]
  412385:	jmp    0x8028a620
  41238a:	in     al,0x15
  41238c:	aam    0xfc
  41238e:	stos   DWORD PTR es:[edi],eax
  41238f:	push   es
  412390:	pusha  
  412391:	and    DWORD PTR [esi+0x18],0x0
  412398:	add    BYTE PTR [eax],al
  41239a:	add    BYTE PTR [eax],al
  41239c:	add    BYTE PTR [eax],al
  41239e:	jecxz  0x41241f
  4123a0:	sbb    BYTE PTR [edx],al
  4123a2:	hlt    
  4123a3:	aas    
  4123a4:	mov    ebp,0x467fc8c5
  4123a9:	jnp    0x4123f5
  4123ab:	mov    esi,0x2c0b88e3
  4123b0:	adc    al,0x2e
  4123b2:	neg    DWORD PTR [eax]
  4123b4:	ror    DWORD PTR [ebx],1
  4123b6:	mov    bh,0xe
  4123b8:	mov    eax,0x11a7999a
  4123bd:	pop    eax
  4123be:	sar    BYTE PTR [edi+0x50],1
  4123c1:	inc    eax
  4123c2:	jnp    0x412373
  4123c4:	fld    QWORD PTR [eax+eax*4]
  4123c7:	xchg   edx,eax
  4123c8:	fistp  WORD PTR [edx+0x274b8803]
  4123ce:	jns    0x4123e8
  4123d0:	and    ecx,esp
  4123d2:	mov    es,WORD PTR [edi+0x2b5430e3]
  4123d8:	addr16 mov edi,0x97a10a54
  4123de:	add    BYTE PTR [eax],ch
  4123e0:	sbb    al,0x33
  4123e2:	dec    eax
  4123e3:	sbb    BYTE PTR [ebx],cl
  4123e5:	adc    BYTE PTR [ebx+0x18],al
  4123e8:	jns    0x4123f1
  4123ea:	daa    
  4123eb:	sub    edx,DWORD PTR [esi+0x2384319a]
  4123f1:	psubusb mm3,QWORD PTR [eax]
  4123f4:	push   ecx
  4123f5:	or     al,0x20
  4123f7:	xchg   edx,eax
  4123f8:	iret   
  4123f9:	lods   al,BYTE PTR ds:[esi]
  4123fa:	aad    0x19
  4123fc:	fistp  DWORD PTR [ecx+0x4593fc5]
	...
  41240a:	add    BYTE PTR [eax],al
  41240c:	or     BYTE PTR [edx-0x51005339],dl
  412412:	mov    dl,0x99
  412414:	pop    es
  412415:	cmp    eax,0xb2cce50d
  41241a:	test   DWORD PTR [ebp-0x6eff6cba],edi
  412420:	cmp    BYTE PTR [ebx+0x3fca9ef1],0x79
  412427:	retf   0x9337
  41242a:	sbb    al,0x39
  41242c:	jnp    0x4123f6
  41242e:	dec    edi
  41242f:	xchg   BYTE PTR [esi-0x39],ah
  412432:	adc    BYTE PTR fs:0xc0760c57,0x77
  41243a:	icebp  
  41243b:	hlt    
  41243c:	mov    eax,0xd4dcf1c7
  412441:	daa    
  412442:	test   DWORD PTR [ecx+0x36],ebp
  412445:	push   ss
  412446:	in     eax,0x15
  412448:	aam    0x16
  41244a:	repnz and BYTE PTR [ecx+0x539c0c73],dl
  412451:	sub    esp,DWORD PTR [ebp-0x17]
  412454:	int3   
  412455:	es mov bl,0xc1
  412458:	(bad)  
  412459:	mov    ds:0x8c47e94b,eax
  41245e:	add    BYTE PTR [ebx-0xe87e99e],dl
  412464:	and    al,0xe7
  412466:	icebp  
  412467:	push   ss
  412468:	ss lahf 
  41246a:	or     al,0xe9
  41246c:	ja     0x412443
  41246e:	sbb    DWORD PTR fs:[eax],eax
	...
  412479:	add    bh,ch
  41247b:	ror    BYTE PTR [esi+edi*8],0xc9
  41247f:	and    DWORD PTR [esi-0x2d],0x57
  412483:	mov    WORD PTR [ecx+eax*1],es
  412486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412487:	adc    eax,0x7ff4e6f2
  41248c:	or     al,0xce
  41248e:	jbe    0x41242e
  412490:	leave  
  412491:	dec    ebp
  412492:	mov    WORD PTR [edi-0xf],?
  412495:	push   esp
  412496:	xlat   BYTE PTR ds:[ebx]
  412497:	test   eax,0x86090010
  41249c:	add    al,0xe8
  41249e:	fs div edx
  4124a1:	dec    DWORD PTR [esi+0x78ef0c7b]
  4124a7:	push   0xffffffdc
  4124a9:	fs mov bh,0x7b
  4124ac:	icebp  
  4124ad:	jne    0x412499
  4124af:	fs adc bh,bh
  4124b2:	mov    bl,0x83
  4124b4:	in     al,0x6b
  4124b6:	pop    ecx
  4124b7:	div    edx
  4124b9:	push   0xbee182b6
  4124be:	fiadd  WORD PTR [eax+0x6e]
  4124c1:	inc    ecx
  4124c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124c3:	idiv   DWORD PTR [eax+0xc]
  4124c6:	int3   
  4124c7:	sbb    al,0xf3
  4124c9:	jne    0x412469
  4124cb:	jmp    0x69:0xf7f9ff5d
  4124d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124d3:	out    0xaf,eax
  4124d5:	push   0x4b76c6
  4124da:	or     DWORD PTR [esi+0x6a00],eax
	...
  4124e8:	(bad)  
  4124eb:	or     BYTE PTR [esi],cl
  4124ed:	cs repz (bad) 
  4124f0:	mov    ecx,0x7608cc49
  4124f5:	gs test esp,ebp
  4124f8:	in     eax,0xd6
  4124fa:	cmc    
  4124fb:	push   0x66
  4124fd:	fs notrack jmp DWORD PTR [ebx-0x76]
  412502:	in     al,0xcd
  412504:	arpl   di,si
  412506:	repnz mov DWORD PTR [ebx-0x12],esi
  41250a:	imul   ebp,DWORD PTR [eax+0x43],0xa3ff0cc1
  412511:	mov    ah,ah
  412513:	dec    ebp
  412514:	sub    esi,ebp
  412516:	repnz inc DWORD PTR [ebx-0x308a0d09]
  41251d:	and    BYTE PTR [esi-0x65ba5d09],ah
  412523:	enter  0x240d,0xe
  412527:	push   ebp
  412528:	inc    esp
  412529:	inc    esp
  41252a:	mov    es,ebx
  41252c:	repz ror DWORD PTR [eax],0x6a
  412530:	pushf  
  412531:	in     eax,0x1b
  412533:	or     bh,dh
  412535:	sti    
  412536:	cmp    edi,edi
  412538:	fmul   DWORD PTR [esi+0x7567fc4b]
  41253e:	sub    eax,DWORD PTR [ecx-0x31]
  412541:	add    eax,0x1bb7081c
  412546:	fwait
  412547:	(bad)  
  412548:	mov    eax,0xfc1b96
	...
  412555:	add    BYTE PTR [eax-0x6f17f9ec],dh
  41255b:	ins    BYTE PTR es:[edi],dx
  41255c:	cdq    
  41255d:	(bad)  
  41255e:	xchg   esi,eax
  41255f:	imul   ecx,DWORD PTR [eax+eax*1],0x82a49202
  412566:	mov    ebp,DWORD PTR [edi+0x6af50026]
  41256c:	cdq    
  41256d:	je     0x412546
  41256f:	scas   al,BYTE PTR es:[edi]
  412570:	and    eax,0x7f567855
  412575:	inc    esp
  412576:	jae    0x4125b7
  412578:	mov    DWORD PTR [esi+ecx*1+0x27],esp
  41257c:	fwait
  41257d:	je     0x412556
  41257f:	outs   dx,BYTE PTR ds:[esi]
  412580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412581:	std    
  412582:	pop    eax
  412583:	jbe    0x4125ab
  412585:	add    bh,ah
  412587:	(bad)  
  412588:	sub    eax,DWORD PTR [ecx-0x31]
  41258b:	inc    BYTE PTR [esp+eiz*2+0x349b268e]
  412592:	or     bh,cl
  412594:	dec    eax
  412595:	add    BYTE PTR [edi],ah
  412597:	inc    ebx
  412598:	aaa    
  412599:	jmp    FWORD PTR [eax]
  41259b:	and    cl,dh
  41259d:	jae    0x41257f
  41259f:	jg     0x41261d
  4125a1:	inc    eax
  4125a2:	pop    ss
  4125a3:	test   al,0xec
  4125a5:	push   ebp
  4125a6:	sar    BYTE PTR [edi+0x4b],1
  4125a9:	add    al,0xcf
  4125ab:	and    al,0x82
  4125ad:	sub    ecx,DWORD PTR [eax]
  4125af:	pushf  
  4125b0:	and    al,0x4
  4125b2:	clc    
  4125b3:	mov    cl,bl
  4125b5:	xchg   esi,eax
  4125b6:	jnp    0x41253f
  4125b8:	retf   
  4125b9:	rol    DWORD PTR [eax],1
	...
  4125c3:	add    BYTE PTR [ecx+0x14],ch
  4125c6:	mov    ds:0x23d5e62b,eax
  4125cb:	add    al,0x67
  4125cd:	jg     0x4125b2
  4125cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125d0:	adc    ch,BYTE PTR [eax-0x7ff1e04d]
  4125d6:	adc    BYTE PTR [eax],0xc7
  4125d9:	adc    al,0xf1
  4125db:	or     esp,DWORD PTR [edi-0x4e690d89]
  4125e1:	adc    al,0xf1
  4125e3:	fwait
  4125e4:	mov    al,0x46
  4125e6:	sbb    edx,DWORD PTR [edi-0x682eeb5f]
  4125ec:	cdq    
  4125ed:	mov    bh,bl
  4125ef:	stos   DWORD PTR es:[edi],eax
  4125f0:	aam    0xaa
  4125f2:	pop    edx
  4125f3:	xchg   esi,eax
  4125f4:	xchg   edi,eax
  4125f5:	inc    ecx
  4125f6:	call   0x584a3ffe
  4125fb:	or     BYTE PTR [ebx+edx*1+0x4ae503de],0x3a
  412603:	adc    bh,dl
  412605:	daa    
  412606:	inc    esp
  412607:	das    
  412608:	pusha  
  412609:	adc    al,0x7d
  41260b:	inc    eax
  41260c:	pop    ebx
  41260d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41260e:	inc    eax
  41260f:	and    BYTE PTR [esi],cl
  412611:	sbb    BYTE PTR [edx],0x10
  412614:	xlat   BYTE PTR ds:[ebx]
  412615:	daa    
  412616:	test   BYTE PTR [ebp+0x100b1441],dl
  41261c:	cmp    edx,DWORD PTR [ecx+edi*2]
  41261f:	or     esp,DWORD PTR [edi]
  412621:	mov    BYTE PTR [esp+ebx*4],cl
  412624:	inc    ecx
  412625:	adc    eax,0x2bc4
	...
  412632:	and    BYTE PTR [ecx+ebx*2],dl
  412635:	jb     0x41269e
  412637:	add    ecx,ecx
  412639:	fucom  st(5)
  41263b:	jg     0x4126a3
  41263d:	pop    ds
  41263e:	bound  ecx,QWORD PTR [ebx-0x4f953efc]
  412644:	icebp  
  412645:	mov    BYTE PTR [ebx+edi*4-0x10],0x51
  41264a:	sbb    DWORD PTR [ebx-0x74bc16b5],0x11eac104
  412654:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412656:	inc    edx
  412657:	mov    esi,eax
  412659:	sahf   
  41265a:	rol    BYTE PTR [edi+0x12ffb3e4],0xf2
  412661:	mov    al,ds:0x1c0c7f8d
  412666:	inc    esi
  412667:	daa    
  412668:	mov    fs,WORD PTR [ebp+0x30ca957]
  41266e:	call   0x5895:0x74e17812
  412675:	inc    dx
  412677:	or     BYTE PTR [eax+0x5d],cl
  41267a:	jecxz  0x4126bb
  41267c:	push   0x7812cca8
  412681:	loope  0x4126b7
  412683:	adc    eax,0x126246f0
  412688:	js     0x4126c7
  41268a:	pop    edx
  41268b:	mov    WORD PTR [ecx+eax*2],es
  41268e:	hlt    
  41268f:	scas   al,BYTE PTR es:[edi]
  412690:	icebp  
  412691:	cs xchg esp,eax
  412693:	inc    ecx
  412694:	or     ecx,ebp
	...
  41269e:	add    BYTE PTR [eax],al
  4126a0:	test   eax,0x8f6ae106
  4126a5:	pop    ss
  4126a6:	addr16 jmp 0x95327ea2
  4126ac:	aam    0x27
  4126ae:	inc    eax
  4126af:	add    BYTE PTR [edx-0x14],bl
  4126b2:	repnz mov DWORD PTR [ebx-0x15],ebp
  4126b6:	imul   ecx,eax,0xff0cbe5b
  4126bc:	fwait
  4126bd:	xchg   ah,ah
  4126bf:	int    0x33
  4126c1:	in     al,dx
  4126c2:	repnz (bad) 
  4126c4:	jnp    0x4126bd
  4126c6:	bnd jne 0x4126b7
  4126c9:	out    0x79,al
  4126cb:	push   esp
  4126cc:	adc    esp,ebp
  4126ce:	(bad)
  4126d2:	push   edi
  4126d3:	mov    eax,DWORD PTR [edx]
  4126d5:	in     al,dx
  4126d6:	js     0x4126e4
  4126d8:	push   cs
  4126d9:	rcl    BYTE PTR [ebp-0x1],0x31
  4126dd:	mov    ah,cl
  4126df:	je     0x4126b4
  4126e1:	arpl   bp,dx
  4126e3:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4126e5:	jnp    0x412743
  4126e7:	call   0x327f5d
  4126ec:	push   es
  4126ed:	in     eax,dx
  4126ee:	js     0x412700
  4126f0:	(bad)  
  4126f1:	in     al,dx
  4126f2:	js     0x4126fc
  4126f4:	pop    esi
  4126f5:	sub    bl,bl
  4126f7:	jmp    DWORD PTR [ecx]
  4126f9:	out    0xc3,eax
  4126fb:	push   esi
  4126fc:	xor    esp,ebp
  4126fe:	(bad)
  412702:	push   edi
  412703:	mov    eax,DWORD PTR [eax]
	...
  41270d:	add    BYTE PTR [edx],al
  41270f:	add    dh,cl
  412711:	clc    
  412712:	dec    ecx
  412713:	push   0xecdf6a0c
  412718:	js     0x412722
  41271a:	push   ds
  41271b:	call   0x5f3267e
  412720:	dec    ecx
  412721:	cld    
  412722:	in     eax,dx
  412723:	sub    DWORD PTR [edi+0x48],ebx
  412726:	aaa    
  412727:	jle    0x4126b5
  412729:	aas    
  41272a:	data16 xor BYTE PTR [eax+0x68],0x94
  41272f:	jno    0x41277c
  412731:	add    bh,cl
  412733:	shl    DWORD PTR [ebp+0xe288c0d],1
  412739:	or     ecx,DWORD PTR [edi]
  41273b:	xchg   esp,eax
  41273c:	cmp    BYTE PTR [edi+0x27],dl
  41273f:	push   es
  412740:	jmp    FWORD PTR cs:[eax]
  412743:	sbb    eax,0x9f7a73ce
  412748:	xor    bh,al
  41274a:	sbb    BYTE PTR [ebx+0x31b56980],dh
  412750:	adc    al,0x8
  412752:	mul    DWORD PTR [ecx+0x4100fe9d]
  412758:	adc    al,0xf8
  41275a:	gs sbb al,0x9f
  41275d:	je     0x412726
  41275f:	xor    BYTE PTR [eax],al
  412761:	(bad)  
  412762:	call   0xe7b5c52f
  412767:	mov    ebp,0x1062fee9
  41276c:	xchg   esi,eax
  41276d:	imul   edx,eax,0xfffffff0
  412770:	popf   
  412771:	add    BYTE PTR [bx+si],al
	...
  41277c:	mov    dl,0x84
  41277e:	inc    edi
  41277f:	add    al,al
  412781:	ins    BYTE PTR es:[edi],dx
  412782:	and    bh,0xc3
  412785:	pusha  
  412786:	popf   
  412787:	inc    ah
  412789:	out    0x14,al
  41278b:	adc    bh,bh
  41278d:	mov    DWORD PTR [ebx],edx
  41278f:	clc    
  412790:	jmp    DWORD PTR [ecx-0x558f7ed]
  412796:	mov    dh,0xfe
  412798:	nop
  412799:	scas   eax,DWORD PTR es:[edi]
  41279a:	fst    QWORD PTR [ebp-0x78]
  41279d:	stos   BYTE PTR es:[edi],al
  41279e:	popf   
  41279f:	je     0x412728
  4127a1:	mov    edi,0xba7855d5
  4127a6:	pushf  
  4127a7:	xor    cl,BYTE PTR [edi+0x68fe9e00]
  4127ad:	dec    edx
  4127ae:	call   0x5884:0x1519a7ad
  4127b5:	adc    BYTE PTR [eax-0x474ae71],0x9b
  4127bc:	lods   eax,DWORD PTR fs:[esi]
  4127be:	sbb    dl,BYTE PTR [ebx+0x82646a1]
  4127c4:	iret   
  4127c5:	stos   BYTE PTR es:[edi],al
  4127c6:	jle    0x412768
  4127c8:	xor    DWORD PTR [ebx-0x4a4d6421],ecx
  4127ce:	cli    
  4127cf:	xchg   edx,eax
  4127d0:	aad    0x3f
  4127d2:	js     0x4127c4
  4127d4:	mov    al,0xb
  4127d6:	inc    ecx
  4127d7:	inc    ebp
  4127d8:	iret   
  4127d9:	scas   eax,DWORD PTR es:[edi]
  4127da:	fist   DWORD PTR [ebp+0x33db10a7]
	...
  4127e8:	add    BYTE PTR [eax],al
  4127ea:	add    BYTE PTR [ebx-0x7507cc0d],cl
  4127f0:	sti    
  4127f1:	fwait
  4127f2:	sub    DWORD PTR [ecx],0xffffffb3
  4127f5:	xchg   edx,eax
  4127f6:	lock and dl,BYTE PTR [ecx]
  4127f9:	xchg   ebx,eax
  4127fa:	loope  0x412842
  4127fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127fd:	(bad)  
  4127fe:	fsubr  DWORD PTR [ebx+0x3c4d9f7e]
  412804:	lods   al,BYTE PTR ds:[esi]
  412805:	cmp    dh,BYTE PTR ds:0xc1ce0d80
  41280b:	mov    ch,bl
  41280d:	fwait
  41280e:	retf   0x8aac
  412811:	xchg   edx,eax
  412812:	inc    edi
  412813:	mov    edx,0xaceb7e6f
  412818:	sub    eax,DWORD PTR [ebp-0x31]
  41281b:	jmp    DWORD PTR [edx-0x2448dcfd]
  412821:	mov    ds:0x3ae3bf2b,al
  412826:	ja     0x412876
  412828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412829:	add    ecx,edi
  41282b:	test   BYTE PTR [ebx],ah
  41282d:	pop    ss
  41282e:	mov    ebx,0x11885ba8
  412833:	adc    DWORD PTR [ebx],esi
  412835:	(bad)  
  412836:	sub    BYTE PTR [ebx-0x441c04f4],cl
  41283c:	hlt    
  41283d:	cs mov bh,0x17
  412840:	add    edi,DWORD PTR [si]
  412843:	mov    eax,DWORD PTR [ecx+edx*1]
  412846:	push   esi
  412847:	adc    edx,esi
  412849:	push   ss
  41284a:	pop    ebp
  41284b:	mov    esi,esp
  41284d:	add    DWORD PTR [eax],0x0
	...
  412858:	sub    BYTE PTR [ecx],dl
  41285a:	js     0x41284d
  41285c:	push   esp
  41285d:	xchg   edi,eax
  41285e:	icebp  
  41285f:	(bad)  
  412860:	adc    DWORD PTR ds:[eax-0xf],edi
  412864:	ret    
  412865:	pop    esp
  412866:	icebp  
  412867:	je     0x41287d
  412869:	sbb    BYTE PTR [ecx-0x1a],ah
  41286c:	ds adc edx,esi
  41286f:	push   esp
  412870:	pop    ebx
  412871:	sbb    BYTE PTR [eax+0x3c],dh
  412874:	pop    esi
  412875:	adc    ecx,esi
  412877:	sbb    dl,BYTE PTR [ebx]
  412879:	xlat   BYTE PTR ds:[ebx]
  41287a:	icebp  
  41287b:	(bad)  
  41287c:	pop    esi
  41287d:	adc    edi,edi
  41287f:	(bad)  
  412880:	sbb    edi,DWORD PTR [ecx+0x77]
  412883:	mov    ?,WORD PTR [esi]
  412885:	mov    esi,eax
  412887:	scas   al,BYTE PTR es:[edi]
  412888:	rol    BYTE PTR [edi+0x10998be4],0xf2
  41288f:	test   BYTE PTR ds:[ecx+0x9],al
  412893:	jmp    0x6b222391
  412898:	xchg   DWORD PTR [ebx],ecx
  41289a:	pop    edx
  41289b:	adc    ecx,ebx
  41289d:	cdq    
  41289e:	xor    eax,0xe477c07e
  4128a3:	ins    DWORD PTR es:[edi],dx
  4128a4:	(bad)  [esi]
  4128a6:	repnz pusha 
  4128a8:	adc    BYTE PTR [esi+eax*4],cl
  4128ab:	and    al,0xda
  4128ad:	mov    bh,0x4b
  4128af:	jmp    0xdd4d7700
  4128b4:	or     al,0x98
  4128b6:	icebp  
  4128b7:	les    ecx,FWORD PTR ds:0x5980
	...
  4128c5:	add    BYTE PTR [esi],bl
  4128c7:	cdq    
  4128c8:	dec    esp
  4128c9:	add    BYTE PTR [esi+0xc],dh
  4128cc:	mov    dl,0x74
  4128ce:	aad    0x48
  4128d0:	in     al,0xfb
  4128d2:	dec    eax
  4128d3:	lock repnz or esp,DWORD PTR [esi+0x5e501367]
  4128db:	or     DWORD PTR [edi+ebp*8],0xffffff98
  4128df:	imul   eax,DWORD PTR [ebx],0x66
  4128e2:	sbb    DWORD PTR [si-0x1],0xffffffb3
  4128e7:	or     ch,dl
  4128e9:	add    ebp,DWORD PTR [eax+0x2ae8f2ef]
  4128ef:	push   esi
  4128f0:	icebp  
  4128f1:	jmp    FWORD PTR [edx]
  4128f3:	xor    al,0xb2
  4128f5:	mov    ecx,0xfff2f029
  4128fa:	and    al,0xa1
  4128fc:	cmp    DWORD PTR [edi],eax
  4128fe:	mov    ds:0xa75f343,eax
  412903:	lock js 0x41290e
  412906:	push   ds
  412907:	jb     0x412967
  412909:	jmp    FWORD PTR [ecx]
  41290b:	push   eax
  41290c:	ret    
  41290d:	ret    0x82f2
  412910:	push   edi
  412911:	mov    ebx,DWORD PTR [edx]
  412913:	add    al,0xce
  412915:	call   0x4bae667f
  41291a:	test   DWORD PTR [ebx-0x364d8af4],0x6ca60ccb
  412924:	or     al,0x6a
  412926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412927:	ins    BYTE PTR es:[edi],dx
  412928:	icebp  
  412929:	inc    DWORD PTR [eax]
	...
  412933:	add    BYTE PTR [ebx-0x33ff9bf2],ah
  412939:	and    esp,0xffffff95
  41293c:	out    0x83,al
  41293e:	or     al,0x89
  412940:	arpl   dx,di
  412942:	bnd jne 0x412933
  412945:	jmp    0x889c:0xb5cf54d8
  41294c:	adc    bh,BYTE PTR [ebp-0x3a888b64]
  412952:	sbb    bh,ah
  412954:	cmc    
  412955:	dec    ebp
  412956:	pushf  
  412957:	je     0x41292c
  412959:	inc    edx
  41295a:	push   cs
  41295b:	push   0xffffffcf
  41295d:	rcr    BYTE PTR [eax],0x40
  412960:	iret   
  412961:	sbb    BYTE PTR [ebx+0x44],dh
  412964:	inc    ebx
  412965:	enter  0xf,0xb5
  412969:	sbb    BYTE PTR [eax],dl
  41296b:	adc    ah,BYTE PTR [ebp+0x33749d18]
  412971:	test   edx,edi
  412973:	pusha  
  412974:	xchg   esp,eax
  412975:	xlat   BYTE PTR ds:[ebx]
  412976:	or     eax,0x76250f85
  41297b:	xchg   edi,ecx
  41297d:	sbb    BYTE PTR [esi],cl
  41297f:	mov    edi,DWORD PTR [edx+0x2c]
  412982:	jbe    0x412995
  412984:	pop    edx
  412985:	arpl   WORD PTR [eax+0x1418754f],bx
  41298b:	adc    ah,BYTE PTR [ebp+0x18]
  41298e:	push   ss
  41298f:	imul   edx,DWORD PTR cs:[edi+0x8],0x81d462ff
  412997:	push   ecx
	...
  4129a0:	add    BYTE PTR [eax],al
  4129a2:	mov    edi,0x7877c89b
  4129a7:	fst    QWORD PTR [ebx]
  4129a9:	lock out 0x57,eax
  4129ac:	dec    esp
  4129ad:	dec    eax
  4129af:	nop
  4129b0:	inc    ebx
  4129b1:	call   0x4856008a
  4129b6:	mov    eax,0x23e79074
  4129bb:	imul   eax,DWORD PTR [ecx-0x539ba902],0xfffffffe
  4129c2:	sbb    al,BYTE PTR [edi-0x61f6ad70]
  4129c8:	cmp    esi,0x8f5b801a
  4129ce:	add    ebx,DWORD PTR [ebx+edx*2]
  4129d1:	sbb    DWORD PTR [edi+0x18],edi
  4129d4:	and    DWORD PTR [eax+0x78],eax
  4129d7:	or     eax,0x68fcc3ef
  4129dc:	fild   DWORD PTR [ebx]
  4129de:	iret   
  4129df:	sbb    al,0x72
  4129e1:	(bad)  
  4129e2:	(bad)  [edi+0x4b]
  4129e5:	mov    al,0x8
  4129e7:	or     eax,0x17db8f23
  4129ec:	sub    ebx,DWORD PTR [ecx]
  4129ee:	cmp    ecx,DWORD PTR ds:0x8428fb99
  4129f4:	mov    ah,0x8e
  4129f6:	cmp    DWORD PTR ds:0x73289f99,ecx
  4129fc:	(bad)  
  4129fd:	mov    gs,WORD PTR [ecx]
  4129ff:	or     eax,0xfc289379
  412a04:	scas   al,BYTE PTR es:[edi]
  412a05:	mov    es,WORD PTR [eax]
	...
  412a0f:	add    BYTE PTR [ecx],bl
  412a11:	stc    
  412a12:	cwde   
  412a13:	xchg   edi,eax
  412a14:	inc    ebp
  412a15:	jb     0x412a01
  412a17:	sbb    BYTE PTR [ebx],al
  412a19:	or     eax,0x9301fc36
  412a1e:	xlat   BYTE PTR ds:[ebx]
  412a1f:	fwait
  412a20:	div    BYTE PTR [eax+0x42078ec2]
  412a26:	clc    
  412a27:	add    eax,DWORD PTR [edx+0x5b8ebff8]
  412a2d:	jnp    0x4129fa
  412a2f:	inc    edx
  412a30:	ja     0x412a3e
  412a32:	mov    ds:0xdc9410fa,eax
  412a37:	sbb    ebx,esp
  412a39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a3a:	and    al,0x4
  412a3c:	pop    ds
  412a3d:	sbb    BYTE PTR [ebx+0x340cb836],ch
  412a43:	sbb    al,0x7d
  412a45:	inc    eax
  412a46:	and    al,0x4
  412a48:	aaa    
  412a49:	and    bl,0x9e
  412a4c:	bound  edx,QWORD PTR [edi-0x410d3ff4]
  412a52:	or     al,0x19
  412a54:	inc    eax
  412a55:	xchg   ebx,eax
  412a56:	add    al,0x51
  412a58:	xchg   BYTE PTR [ecx-0x359ba10f],cl
  412a5e:	pop    ebp
  412a5f:	push   esi
  412a60:	dec    ecx
  412a61:	or     eax,0x7a54dd78
  412a66:	push   esp
  412a67:	inc    esi
  412a68:	pop    ecx
  412a69:	jns    0x412a37
  412a6b:	mov    ch,0x83
  412a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a6e:	push   ss
  412a6f:	iret   
  412a70:	adc    eax,DWORD PTR [eax+0x415c]
	...
  412a7e:	out    0xb5,al
  412a80:	icebp  
  412a81:	es cld 
  412a83:	xchg   edi,eax
  412a84:	mov    esi,0x647f8c2a
  412a89:	jmp    0x81f4475a
  412a8e:	adc    esp,DWORD PTR [edx+0xcdce94b]
  412a94:	js     0x412a87
  412a96:	inc    esp
  412a97:	xor    esi,DWORD PTR [edi-0xa]
  412a9a:	dec    edx
  412a9b:	and    al,0x84
  412a9d:	call   0xc0b:0xabc40d41
  412aa4:	pop    ecx
  412aa5:	jb     0x412ad6
  412aa7:	add    ecx,ecx
  412aa9:	aad    0xd5
  412aab:	jg     0x412b13
  412aad:	or     eax,0xd1049342
  412ab2:	xchg   BYTE PTR [ecx+esi*8-0xf3c9b42],bh
  412ab9:	inc    ebx
  412aba:	in     eax,0xc
  412abc:	js     0x412a9f
  412abe:	xor    al,0x9c
  412ac0:	icebp  
  412ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ac2:	pop    edx
  412ac3:	cdq    
  412ac4:	sub    eax,0xe477d89e
  412ac9:	cmovp  ecx,DWORD PTR [edx]
  412acc:	repnz add edi,DWORD PTR [edi-0x61ff87f6]
  412ad3:	out    0x55,eax
  412ad5:	jmp    DWORD PTR [ecx]
  412ad7:	std    
  412ad8:	bnd jne 0x412afd
  412adb:	std    
  412adc:	js     0x412ae6
  412ade:	dec    esi
  412adf:	inc    ebx
  412ae0:	inc    edx
  412ae1:	inc    DWORD PTR [eax]
	...
  412aeb:	add    cl,dh
  412aed:	(bad)  
  412aee:	retf   
  412aef:	add    al,0x76
  412af1:	push   edx
  412af2:	test   esp,ebp
  412af4:	and    DWORD PTR [ebx+0x0],esi
  412af7:	call   0x327ff2
  412afc:	pop    ebp
  412afd:	aas    
  412afe:	jle    0x412b24
  412b00:	jle    0x412ac1
  412b02:	push   0x41
  412b04:	dec    di
  412b06:	in     al,0x1c
  412b08:	cmp    esp,edi
  412b0a:	repnz push eax
  412b0c:	pop    esi
  412b0d:	jg     0x412b1b
  412b0f:	out    dx,eax
  412b10:	mov    al,ds:0x67665d6b
  412b15:	jg     0x412b73
  412b17:	call   FWORD PTR [ebx+0x7]
  412b1a:	jmp    0x6e8:0xf2fc5207
  412b21:	push   eax
  412b22:	icebp  
  412b23:	(bad)  
  412b24:	out    dx,eax
  412b25:	cmp    eax,0x883b000a
  412b2a:	in     eax,0x83
  412b2c:	cmp    bh,bl
  412b2e:	arpl   WORD PTR [eax],ax
  412b30:	pushf  
  412b31:	cmp    dh,bl
  412b33:	jne    0x412b23
  412b35:	out    0x3b,al
  412b37:	push   eax
  412b38:	add    esp,edi
  412b3a:	test   BYTE PTR [ebp+0x12],al
  412b3d:	imul   edx,DWORD PTR [esi],0xea0b9bff
  412b43:	stos   BYTE PTR es:[edi],al
  412b44:	and    esp,edi
  412b46:	repnz push 0xffffffc5
  412b49:	cld    
  412b4a:	js     0x412b54
  412b4c:	pop    esi
  412b4d:	sahf   
  412b4e:	repnz inc DWORD PTR [eax]
	...
  412b59:	add    BYTE PTR [ecx+0x68],ah
  412b5c:	adc    bh,bh
  412b5e:	iret   
  412b5f:	imul   esi,eax,0xffffffe7
  412b62:	pop    ecx
  412b63:	stc    
  412b64:	cmp    dh,0xa8
  412b67:	or     eax,DWORD PTR [edx-0x69eee502]
  412b6d:	dec    ebx
  412b6e:	call   DWORD PTR [ecx+0x248dc880]
  412b74:	push   cs
  412b75:	push   ebp
  412b76:	push   esp
  412b77:	mov    ah,0x8c
  412b79:	ret    
  412b7a:	xchg   ecx,edx
  412b7c:	adc    eax,DWORD PTR [eax]
  412b7e:	in     eax,0x72
  412b80:	jg     0x412bf6
  412b82:	mov    eax,0xc1684e90
  412b88:	jbe    0x412bce
  412b8a:	arpl   WORD PTR [ebp-0x27f8ad3e],cx
  412b90:	or     eax,0x1a189080
  412b95:	inc    edi
  412b96:	mov    bh,0x3d
  412b98:	sub    BYTE PTR [ecx-0x31],al
  412b9b:	rcl    DWORD PTR [ebp+0xe18f811],1
  412ba1:	or     ecx,DWORD PTR [edi]
  412ba3:	hlt    
  412ba4:	rcl    DWORD PTR [esi+0x37],cl
  412ba7:	cli    
  412ba8:	and    edi,edi
  412baa:	and    BYTE PTR ds:0x9fef73ce,cl
  412bb0:	dec    edx
  412bb1:	clc    
  412bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bb3:	sbb    BYTE PTR [esi],cl
  412bb5:	out    dx,eax
  412bb6:	dec    ecx
  412bb7:	mov    al,0x2c
  412bb9:	data16 mov ds,WORD PTR [eax]
  412bbc:	xchg   DWORD PTR [eax+eax*1+0x0],esi
	...
  412bc8:	div    DWORD PTR [eax]
  412bca:	sbb    al,0x8
  412bcc:	out    0xbd,eax
  412bce:	add    edi,edi
  412bd0:	call   0xf8394815
  412bd5:	inc    edi
  412bd6:	cmp    bh,bh
  412bd8:	fcom   st(3)
  412bda:	fnstcw WORD PTR [edi-0x17a26ea]
  412be0:	enter  0x9580,0x5a
  412be4:	clc    
  412be5:	sbb    BYTE PTR [eax],0x4d
  412be8:	mov    ecx,0x3b8b9793
  412bed:	js     0x412b7a
  412bef:	mov    cl,0x19
  412bf1:	or     DWORD PTR [ebx-0x17c169d5],ecx
  412bf7:	add    eax,DWORD PTR [edx]
  412bf9:	cmc    
  412bfa:	xchg   DWORD PTR [edi+0x1e1b248c],eax
  412c00:	iret   
  412c01:	xchg   ebp,eax
  412c02:	sub    cl,BYTE PTR [ebx+0x135b77fb]
  412c08:	or     BYTE PTR [ecx],cl
  412c0a:	pop    ebx
  412c0b:	jge    0x412c18
  412c0d:	or     al,0x6f
  412c0f:	leave  
  412c10:	std    
  412c11:	mov    bh,0xa4
  412c13:	add    ecx,DWORD PTR [edi+0x49]
  412c16:	jecxz  0x412c27
  412c18:	adc    BYTE PTR [eax-0x7ff1de34],bl
  412c1e:	call   0xd403:0xe34a669b
  412c25:	aas    
  412c26:	cwde   
  412c27:	frstor [ecx+0x2f0a17]
	...
  412c35:	add    BYTE PTR [eax],dh
  412c37:	or     edi,ebp
  412c39:	ret    
  412c3a:	pushf  
  412c3b:	pop    edi
  412c3c:	jl     0x412c7f
  412c3e:	daa    
  412c3f:	cwde   
  412c40:	jecxz  0x412c45
  412c42:	sub    dl,cl
  412c44:	mov    edx,DWORD PTR ds:0x8ae3bea9
  412c4a:	add    DWORD PTR [edi],0xffffffeb
  412c4d:	adc    bh,dl
  412c4f:	pop    ss
  412c50:	(bad)  
  412c51:	or     eax,0x10db08f8
  412c56:	not    DWORD PTR [edi]
  412c58:	fdiv   QWORD PTR [eax+ebp*8]
  412c5b:	or     al,cl
  412c5d:	(bad)  
  412c5e:	and    bh,al
  412c60:	mov    dl,0x8a
  412c62:	(bad)  [eax]
  412c64:	or     eax,0x95076bb
  412c69:	xor    al,0x1a
  412c6b:	mov    eax,ds:0xca65e90c
  412c70:	fs sbb ebp,ebp
  412c73:	mov    esi,0xa270010c
  412c78:	dec    ebx
  412c79:	jmp    0x9145bfd3
  412c7e:	pushf  
  412c7f:	test   ecx,esi
  412c81:	jle    0x412c3d
  412c83:	jg     0x412ce9
  412c85:	repnz out dx,al
  412c87:	mov    esi,0xa2ed010c
  412c8c:	dec    ebx
  412c8d:	jmp    0xb2027fe7
  412c92:	adc    eax,DWORD PTR [eax+0x8a03de4]
  412c98:	repnz pusha 
	...
  412ca2:	add    BYTE PTR [eax],al
  412ca4:	nop    DWORD PTR [edi-0x17]
  412ca8:	(bad)  
  412ca9:	imul   DWORD PTR [edx-0x58]
  412cac:	int3   
  412cad:	xchg   edi,eax
  412cae:	stos   BYTE PTR es:[edi],al
  412caf:	iret   
  412cb0:	or     eax,DWORD PTR [eax-0x3f7a0b0f]
  412cb6:	dec    ebx
  412cb7:	jmp    0x1e99f320
  412cbc:	inc    ebp
  412cbd:	test   DWORD PTR [edi+0x1d],0x75647fd2
  412cc4:	out    dx,al
  412cc5:	mov    esi,0xa2ae910c
  412cca:	dec    ebx
  412ccb:	jmp    0xa2028015
  412cd0:	mov    edi,DWORD PTR [edi-0x1c]
  412cd3:	dec    ecx
  412cd4:	mov    eax,0xc070f208
  412cd9:	jo     0x64f95c03
  412cdf:	je     0x412c8e
  412ce1:	mov    esi,0xa26d410c
  412ce6:	dec    ebx
  412ce7:	add    dh,dh
  412ce9:	idiv   BYTE PTR [eax]
  412ceb:	iret   
  412cec:	sahf   
  412ced:	mov    esp,0x4f62e80c
  412cf2:	icebp  
  412cf3:	jmp    FWORD PTR [edi]
  412cf5:	inc    edi
  412cf6:	in     al,0x83
  412cf8:	jmp    0x412ce9
  412cfa:	icebp  
  412cfb:	jae    0x412cfb
  412cfd:	cld    
  412cfe:	jo     0x412cf0
  412d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d01:	ja     0x412d51
  412d03:	sbb    ebx,0xffffffe7
  412d06:	icebp  
  412d07:	jae    0x412d09
	...
  412d11:	add    BYTE PTR [edx+0x49000b6b],cl
  412d17:	mov    edx,0xebae75f2
  412d1c:	test   BYTE PTR [ebp-0x7],0xf8
  412d20:	bnd jne 0x412d45
  412d23:	stc    
  412d24:	js     0x412d2e
  412d26:	push   ds
  412d27:	dec    esi
  412d28:	inc    edx
  412d29:	call   FWORD PTR [ecx]
  412d2b:	stc    
  412d2c:	js     0x412d1e
  412d2e:	sbb    DWORD PTR [edi+0x4],esi
  412d31:	call   0x327667
  412d36:	cdq    
  412d37:	jbe    0x412d19
  412d39:	call   DWORD PTR [ebx]
  412d3b:	or     ebp,edx
  412d3d:	cmp    al,0x68
  412d3f:	clc    
  412d40:	bnd jmp DWORD PTR [ebx-0x19]
  412d44:	bnd jne 0x412d25
  412d47:	clc    
  412d48:	js     0x412d52
  412d4a:	into   
  412d4b:	jge    0x412d8f
  412d4d:	(bad)  
  412d4e:	fprem  
  412d50:	js     0x412d3e
  412d52:	mov    esi,0x19ff5d0c
  412d57:	clc    
  412d58:	js     0x412d4e
  412d5a:	into   
  412d5b:	add    al,0x5d
  412d5d:	(bad)  
  412d5e:	stc    
  412d5f:	idiv   DWORD PTR [eax-0x10]
  412d62:	push   ds
  412d63:	jl     0x412dc0
  412d65:	call   FWORD PTR [ecx]
  412d67:	clc    
  412d68:	js     0x412d52
  412d6a:	iret   
  412d6b:	inc    eax
  412d6c:	or     DWORD PTR [edi-0x18],0xe3748535
  412d73:	cmp    eax,0x803
	...
  412d80:	out    0xb6,eax
  412d82:	ss call eax
  412d85:	ins    DWORD PTR es:[edi],dx
  412d86:	mov    ch,0xc1
  412d88:	rcr    DWORD PTR [eax],cl
  412d8a:	and    ecx,DWORD PTR [ebx-0x44e664d]
  412d90:	and    eax,0xb0401019
  412d95:	arpl   ax,si
  412d97:	out    0xbe,eax
  412d99:	cmp    si,0x56
  412d9d:	push   ebx
  412d9e:	test   BYTE PTR [ecx-0x31],ch
  412da1:	jb     0x412dab
  412da3:	push   0x4d7675
  412da8:	neg    DWORD PTR [eax]
  412daa:	push   cs
  412dab:	add    BYTE PTR [edi-0x50],cl
  412dae:	mov    al,ds:0xf0a57852
  412db3:	mov    edi,0xe83879fb
  412db8:	push   esp
  412db9:	rol    BYTE PTR [esi+edi*8+0x190158d4],cl
  412dc0:	push   DWORD PTR [eax]
  412dc2:	push   cs
  412dc3:	add    BYTE PTR [eax-0x72],ah
  412dc6:	adc    eax,0xdd7b1d5
  412dcb:	push   eax
  412dcc:	inc    eax
  412dcd:	jecxz  0x412dc4
  412dcf:	out    0x5c,eax
  412dd1:	fild   WORD PTR [esi+edi*8-0xc273d9]
  412dd8:	sub    BYTE PTR [ebp+0x2],dh
  412ddb:	cld    
  412ddc:	and    BYTE PTR [ebx-0x2937180b],al
  412de2:	test   dh,bh
	...
  412dec:	add    BYTE PTR [eax],al
  412dee:	push   es
  412def:	pop    edx
  412df0:	icebp  
  412df1:	jmp    DWORD PTR [ebx+0xb8299a1]
  412df7:	jg     0x412de0
  412df9:	das    
  412dfa:	gs jg  0x412e5a
  412dfd:	inc    ebp
  412dfe:	lock mov ebp,ebx
  412e01:	fwait
  412e02:	push   ds
  412e03:	mov    ah,0xc2
  412e05:	xchg   DWORD PTR [edi-0x44],edx
  412e08:	(bad)  
  412e09:	jnp    0x412da6
  412e0b:	mov    dl,0x3b
  412e0d:	inc    ebp
  412e0e:	iret   
  412e0f:	(bad)  
  412e10:	cli    
  412e11:	add    eax,DWORD PTR [ebx-0x40]
  412e14:	dec    ebx
  412e15:	mov    WORD PTR [edx],gs
  412e17:	mov    edi,0x2ba72ee3
  412e1c:	rol    BYTE PTR [ebx],1
  412e1e:	iret   
  412e1f:	js     0x412dc4
  412e21:	adc    ah,ch
  412e23:	lods   al,BYTE PTR ds:[esi]
  412e24:	mov    ebx,ebp
  412e26:	push   es
  412e27:	add    eax,0x8c58fb8b
  412e2c:	in     al,dx
  412e2d:	xor    esp,DWORD PTR [edi]
  412e2f:	and    bl,0x96
  412e32:	dec    edx
  412e33:	cwde   
  412e34:	popa   
  412e35:	push   ds
  412e36:	push   cs
  412e37:	xor    BYTE PTR [ebx+0x5b780386],0xd5
  412e3e:	test   DWORD PTR [ebx+ebx*2],0x42afa69c
  412e45:	xchg   DWORD PTR [ecx+edx*2+0x23],esp
  412e49:	dec    ebp
  412e4a:	pop    ecx
  412e4b:	add    eax,0xd65e8733
  412e50:	sti    
  412e51:	inc    BYTE PTR [eax]
	...
  412e5b:	add    bl,al
  412e5d:	aas    
  412e5e:	and    edx,DWORD PTR [ecx]
  412e60:	inc    ebx
  412e61:	add    eax,0xe530fb91
  412e66:	mov    al,ds:0x2ca53186
  412e6b:	ret    0x7fcc
  412e6e:	mov    eax,0x2001347a
  412e73:	mov    BYTE PTR [ecx-0x72e61c67],al
  412e79:	add    al,0xd
  412e7b:	jl     0x412e81
  412e7d:	sbb    eax,0x6499c4c
  412e82:	test   BYTE PTR [edi+eax*2],ch
  412e85:	cli    
  412e86:	das    
  412e87:	cmp    dh,BYTE PTR [ebx+0x11690cbe]
  412e8d:	add    eax,0x75c3297e
  412e92:	imul   ebp,DWORD PTR [eax],0x45e4acd3
  412e98:	pop    es
  412e99:	add    eax,0x908ce2f2
  412e9e:	sub    eax,0x53cc6316
  412ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea4:	push   ecx
  412ea5:	jns    0x412e73
  412ea7:	adc    eax,0xe964b4a2
  412eac:	int3   
  412ead:	adc    al,0xb3
  412eaf:	add    DWORD PTR [esi-0x2316b463],ebx
  412eb5:	add    al,0x78
  412eb7:	icebp  
  412eb8:	xor    al,0xc4
  412eba:	je     0x412f32
  412ebc:	push   ecx
  412ebd:	sbb    al,0xc4
  412ebf:	push   ds
	...
  412ec8:	add    BYTE PTR [eax],al
  412eca:	dec    eax
  412ecb:	add    eax,0xc7931af1
  412ed0:	icebp  
  412ed1:	pop    esi
  412ed2:	dec    ecx
  412ed3:	add    eax,0x7d9487ff
  412ed8:	ja     0x412f03
  412eda:	(bad)  
  412edb:	pusha  
  412edc:	in     al,0xf5
  412ede:	test   al,0x4
  412ee0:	repnz repnz mov WORD PTR [eax-0x62ce3ed8],ss
  412ee8:	dec    ebx
  412ee9:	jmp    0xbad646ea
  412eee:	push   ecx
  412eef:	add    eax,0x7fcc915d
  412ef4:	loope  0x412f4d
  412ef6:	les    ebp,FWORD PTR [edx+0x69]
  412ef9:	test   al,0xcc
  412efb:	scas   eax,DWORD PTR es:[edi]
  412efc:	icebp  
  412efd:	add    BYTE PTR [ebx+0x4e83ea08],bl
  412f03:	std    
  412f04:	bnd call 0x327c7c
  412f0a:	dec    esp
  412f0b:	and    edx,ebp
  412f0d:	fnsave [ebp+0x260bf2fa]
  412f13:	outs   dx,DWORD PTR ds:[esi]
  412f14:	sub    BYTE PTR [eax-0x27],ch
  412f17:	bound  ecx,QWORD PTR [ebx+0x0]
  412f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f1b:	jecxz  0x412f81
  412f1d:	push   ebx
  412f1e:	adc    edx,edi
  412f20:	inc    ecx
  412f21:	push   0xbee17fe6
  412f26:	push   cs
  412f27:	adc    ebp,DWORD PTR [ebx+0x41]
  412f2a:	mov    dh,0x4f
  412f2c:	icebp  
  412f2d:	jne    0x412f2f
	...
  412f37:	add    BYTE PTR [esi+0x51785de7],bh
  412f3d:	std    
  412f3e:	jmp    0xf33e20a0
  412f43:	(bad)  
  412f44:	mov    ebx,0x9e75f2f7
  412f49:	out    0xc1,eax
  412f4b:	dec    esp
  412f4c:	adc    ebp,edi
  412f4e:	push   edx
  412f4f:	leave  
  412f50:	xor    al,0x80
  412f52:	or     al,0x55
  412f54:	in     eax,dx
  412f55:	out    0x8e,eax
  412f57:	les    edx,FWORD PTR [esi]
  412f59:	mov    ecx,DWORD PTR [eax-0x10]
  412f5c:	ss cld 
  412f5e:	js     0x412f6c
  412f60:	push   cs
  412f61:	fstp   QWORD PTR [ebp-0x1]
  412f64:	adc    DWORD PTR [ecx],ecx
  412f66:	mov    dl,0x74
  412f68:	push   esp
  412f69:	add    BYTE PTR [ecx-0x4],dh
  412f6c:	fs jne 0x412f9c
  412f6f:	mov    edi,DWORD PTR [ebx-0x9]
  412f72:	cmp    DWORD PTR ds:0x2c2b,0x78fccf75
  412f7b:	adc    cl,dl
  412f7d:	jb     0x412f83
  412f7f:	call   0xff748b53
  412f84:	and    BYTE PTR [edx+0x1],dh
  412f87:	cld    
  412f88:	sbb    BYTE PTR [ebp+eax*4-0x69ef6502],al
  412f8f:	hlt    
  412f90:	xchg   esp,eax
  412f91:	or     DWORD PTR [ecx+0x3e088a8c],ecx
  412f97:	call   0xfec87356
	...
  412fa4:	add    BYTE PTR [eax],al
  412fa6:	push   es
  412fa7:	xlat   BYTE PTR ds:[ebx]
  412fa8:	stc    
  412fa9:	inc    DWORD PTR [ebx+0xb82999d]
  412faf:	xor    DWORD PTR [eax+eax*1],edx
  412fb2:	gs push ebp
  412fb4:	xchg   DWORD PTR [edi+eax*8+0x30],esi
  412fb8:	ror    DWORD PTR [ebx-0x38],1
  412fbb:	leave  
  412fbc:	jbe    0x413002
  412fbe:	ret    
  412fbf:	mov    esi,0x70cf6a08
  412fc4:	shl    DWORD PTR [esi+0xe],0x19
  412fc8:	push   ss
  412fc9:	add    cl,bh
  412fcb:	sbb    BYTE PTR [esi-0x78b86119],cl
  412fd1:	inc    ah
  412fd3:	fadd   DWORD PTR [ecx]
  412fd5:	aas    
  412fd6:	inc    esi
  412fd7:	pop    ebx
  412fd8:	and    BYTE PTR [edi+0x4e],0x71
  412fdc:	dec    ebp
  412fdd:	add    BYTE PTR [eax-0x491879f5],al
  412fe3:	pop    ebp
  412fe4:	or     BYTE PTR [eax],al
  412fe6:	les    ebx,FWORD PTR [eax+0x1]
  412fe9:	and    ebp,DWORD PTR [eax+0x23]
  412fec:	xchg   bh,ah
  412fee:	push   esp
  412fef:	ror    BYTE PTR [eax+0x3d30fffe],1
  412ff5:	leave  
  412ff6:	nop    DWORD PTR [esi]
  412ff9:	add    bh,cl
  412ffb:	mov    ecx,0xe8cf6947
  413000:	mov    BYTE PTR [edi+eax*8+0x7f],dh
  413004:	sbb    ebx,DWORD PTR [ecx-0x64ecfd45]
	...
  413012:	add    BYTE PTR [eax],al
  413014:	dec    edx
  413015:	mov    cl,0x1a
  413017:	test   BYTE PTR [ecx],ah
  413019:	mov    WORD PTR [ebx],ds
  41301b:	fwait
  41301c:	inc    edx
  41301d:	mov    cl,0xa
  41301f:	test   BYTE PTR [ecx],dl
  413021:	mov    edi,gs
  413023:	add    DWORD PTR [ebx-0x6b05f489],0x2
  41302a:	jecxz  0x412fe5
  41302c:	push   cs
  41302d:	jnp    0x413012
  41302f:	fadd   DWORD PTR [ebp+0x13]
  413032:	addr16 dec eax
  413034:	in     al,0x94
  413036:	jecxz  0x413025
  413038:	mov    WORD PTR [edx],es
  41303a:	pop    ecx
  41303b:	or     al,0xe7
  41303d:	sar    DWORD PTR [esi],cl
  41303f:	adc    ecx,0xfffffff7
  413042:	sub    BYTE PTR [eax+0x72e38030],al
  413048:	sbb    BYTE PTR [eax-0x7ff014a9],0x1b
  41304f:	lea    ebp,[ecx]
  413051:	mov    edi,0x782382e3
  413056:	mov    ebx,DWORD PTR [ecx+ebx*1+0x23838301]
  41305d:	add    al,0x8b
  41305f:	stc    
  413060:	enter  0xa217,0xcf
  413064:	mov    DWORD PTR [ecx],eax
  413066:	lods   eax,DWORD PTR ds:[esi]
  413067:	inc    esi
  413068:	int3   
  413069:	jg     0x413083
  41306b:	(bad)  
  41306c:	fs std 
  41306e:	pop    ds
  41306f:	jl     0x413059
  413071:	jg     0x413056
  413073:	jb     0x41309f
  413075:	add    ecx,edx
  413077:	or     eax,DWORD PTR [eax]
	...
  413081:	add    BYTE PTR [edi+0x16],dh
  413084:	scas   al,BYTE PTR es:[edi]
  413085:	sbb    BYTE PTR [ecx+0x1],0xb1
  413089:	(bad)  
  41308b:	mov    edi,ebx
  41308d:	imul   ecx,DWORD PTR [edi+0x4c360cb4],0x2
  413094:	js     0x41306f
  413096:	dec    ebp
  413097:	mov    WORD PTR [ecx+edx*1],es
  41309a:	cmc    
  41309b:	mov    ah,0xf1
  41309d:	push   ds
  41309e:	dec    esp
  41309f:	mov    WORD PTR [esi+edx*1],ss
  4130a2:	es ins DWORD PTR es:[edi],dx
  4130a4:	icebp  
  4130a5:	xchg   esp,eax
  4130a6:	les    edx,FWORD PTR [edi]
  4130a8:	icebp  
  4130a9:	mov    bl,0x4d
  4130ab:	add    ah,BYTE PTR [ebp+0x1a]
  4130ae:	hlt    
  4130af:	mov    edi,0x7107f60c
  4130b4:	in     al,0x6d
  4130b6:	mov    edx,0x8cf20c7f
  4130bb:	mov    esp,DWORD PTR [edi+0x51]
  4130be:	xchg   BYTE PTR [ecx+0x3074e94b],bl
  4130c4:	xor    eax,0x47f6cce9
  4130c9:	shl    esp,0x2b
  4130cc:	push   0x28
  4130ce:	rol    DWORD PTR [eax],cl
  4130d0:	js     0x4130ab
  4130d2:	xor    al,0xa3
  4130d4:	ss jmp 0x1e0da5a6
  4130da:	lds    edi,FWORD PTR [edi+eax*2-0x5f]
  4130de:	pop    ebx
  4130df:	mov    ebx,0x70a7961c
  4130e4:	in     al,0xce
	...
  4130ee:	add    BYTE PTR [eax],al
  4130f0:	test   eax,0x146af201
  4130f5:	add    bh,BYTE PTR [ecx-0x4b]
  4130f8:	pop    ebx
  4130f9:	mov    ebx,0x7fca01f0
  4130fe:	loope  0x41312f
  413100:	dec    ebp
  413101:	mov    eax,DWORD PTR [ecx+edx*2]
  413104:	js     0x4130bc
  413106:	icebp  
  413107:	pop    esi
  413108:	dec    ebp
  413109:	mov    eax,DWORD PTR [eax]
  41310b:	push   esi
  41310c:	addr16 js 0x4130f3
  41310f:	and    cl,BYTE PTR [edx+0x900f201]
  413115:	or     dh,dh
  413117:	inc    DWORD PTR [ebx+0x6c5ee474]
  41311d:	std    
  41311e:	repnz inc DWORD PTR [ebx+0x3275f164]
  413125:	std    
  413126:	js     0x413130
  413128:	mov    esi,0xb9ff43f6
  41312d:	mov    bl,0xcb
  41312f:	adc    al,0x26
  413131:	daa    
  413132:	xchg   esp,ebp
  413134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413135:	mov    eax,0xbf7556f9
  41313a:	ja     0x413187
  41313c:	aaa    
  41313d:	jl     0x41314b
  41313f:	je     0x4131ab
  413141:	stc    
  413142:	xor    BYTE PTR [ecx-0x43],dh
  413145:	cmp    al,0xf2
  413147:	inc    DWORD PTR [edx+0x4f3d8f0a]
  41314d:	xor    cl,BYTE PTR [ebp+0x0]
  413150:	out    0x7,al
  413152:	mov    DWORD PTR fs:[eax],0x0
  413159:	add    BYTE PTR [eax],al
  41315b:	add    BYTE PTR [eax],al
  41315d:	add    BYTE PTR [ebx-0x49000e01],ah
  413163:	or     ecx,0x45
  413166:	jle    0x4130ec
  413168:	or     al,0x0
  41316a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41316b:	push   cs
  41316c:	dec    ecx
  41316d:	cld    
  41316e:	test   BYTE PTR [esi],0x49
  413171:	clc    
  413172:	out    0xed,al
  413174:	icebp  
  413175:	addr16 sbb cl,ch
  413178:	dec    esp
  413179:	add    BYTE PTR [ecx-0x69],cl
  41317c:	jnp    0x4131c9
  41317e:	out    0x83,eax
  413180:	add    eax,0x8ec482c0
  413185:	jge    0x413185
  413187:	cmp    DWORD PTR [eax+0x3d],0xffffffe5
  41318b:	(bad)  
  41318c:	cmc    
  41318d:	add    BYTE PTR [edx+0xa7585b8],dl
  413193:	ins    DWORD PTR es:[edi],dx
  413194:	orps   xmm1,xmm7
  413197:	popa   
  413198:	ss jmp ecx
  41319b:	lock mov WORD PTR [ebp-0x4d],?
  41319f:	inc    ebp
  4131a0:	test   BYTE PTR [edi],0x48
  4131a3:	aaa    
  4131a4:	ds (bad) 
  4131a6:	mov    edx,0x39dd65e0
  4131ab:	scas   al,BYTE PTR es:[edi]
  4131ac:	mov    ebx,DWORD PTR [ebp+0x30]
  4131af:	xor    al,0x76
  4131b1:	adc    BYTE PTR [ecx],0xe5
  4131b4:	mov    BYTE PTR [edi+eiz*1-0x17],bh
  4131b8:	stc    
  4131b9:	add    al,0x4c
  4131bb:	iret   
  4131bc:	or     eax,0xf985f875
  4131c1:	sti    
	...
  4131ca:	add    BYTE PTR [eax],al
  4131cc:	or     ah,dl
  4131ce:	cli    
  4131cf:	dec    edx
  4131d0:	mov    gs,eax
  4131d2:	jmp    0x41319c
  4131d4:	or     eax,0x44550de5
  4131d9:	aad    0x88
  4131db:	ret    
  4131dc:	jecxz  0x413197
  4131de:	inc    ebx
  4131df:	inc    esp
  4131e0:	out    0xe8,eax
  4131e2:	or     eax,0xcb25cf00
  4131e7:	repz iret 
  4131e9:	call   0xb40931fb
  4131ee:	sbb    BYTE PTR [edi+0x6c5f350a],cl
  4131f4:	mov    ebx,0xcf6a0842
  4131f9:	xchg   edx,eax
  4131fa:	or     BYTE PTR [edx-0x31],ch
  4131fd:	sbb    eax,0x9ba0fbfb
  413202:	sbb    al,0x6a
  413204:	iret   
  413205:	or     BYTE PTR [eax],0xe8
  413208:	mov    dl,0xc0
  41320a:	or     eax,0xfa28d400
  41320f:	xor    al,0x1f
  413211:	cdq    
  413212:	pusha  
  413213:	loopne 0x413220
  413215:	outs   dx,BYTE PTR ds:[esi]
  413216:	mov    WORD PTR [eax-0x25947ff6],cs
  41321c:	idiv   BYTE PTR [edi-0x23]
  41321f:	add    edi,esi
  413221:	(bad)  
  413222:	sar    BYTE PTR [ebx+0x59],1
  413225:	je     0x413266
  413227:	sbb    bl,0x8b
  41322a:	fld    QWORD PTR [ebx]
  41322c:	mov    ch,0x7f
  41322e:	pop    ebx
  41322f:	js     0x413231
	...
  413239:	add    cl,bh
  41323b:	jg     0x413220
  41323d:	or     al,0xf
  41323f:	je     0x413213
  413241:	cmp    BYTE PTR [ebx-0x6b5be409],0xfe
  413248:	adc    cl,BYTE PTR [eax-0x75]
  41324b:	mul    ebx
  41324d:	add    ecx,edi
  41324f:	jg     0x4132b7
  413251:	(bad)  
  413252:	sbb    BYTE PTR [edi+0x6f],bh
  413255:	ror    DWORD PTR [ecx],1
  413257:	je     0x413254
  413259:	cmp    BYTE PTR [ebx-0x9],0xb
  41325d:	add    al,0x7f
  413260:	jecxz  0x41326e
  413262:	(bad)  
  413264:	sub    dl,ah
  413266:	jmp    0x7cad2dde
  41326b:	mov    dh,0xe3
  41326d:	add    esi,DWORD PTR [esi-0x7e]
  413270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413271:	mov    edi,eax
  413273:	jmp    0x8b41b695
  413278:	cmp    BYTE PTR [eax],ch
  41327a:	mov    DWORD PTR [eax-0x424f2d1d],eax
  413280:	cli    
  413281:	add    ecx,edi
  413283:	mov    BYTE PTR [ebx+0x334fc3f8],ah
  413289:	ins    BYTE PTR es:[edi],dx
  41328a:	sbb    ecx,DWORD PTR [edx+ebx*4+0x7f]
  41328e:	inc    edi
  41328f:	inc    ebx
  413290:	xchg   edi,eax
  413291:	(bad)  
  413293:	cld    
  413294:	lock ja 0x4132b4
  413297:	call   0xfdc302ed
  41329c:	or     al,0x82
	...
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	sar    DWORD PTR [edi],1
  4132aa:	mov    WORD PTR [ecx+0x66db72cc],?
  4132b0:	data16 cmc 
  4132b2:	in     al,0xa9
  4132b4:	nop
  4132b5:	(bad)  
  4132b6:	icebp  
  4132b7:	bound  eax,QWORD PTR [esi+0xd2055f1]
  4132bd:	mov    DWORD PTR [esp+ebx*4],ecx
  4132c0:	push   ebp
  4132c1:	jmp    0x52e85853
  4132c6:	pop    ecx
  4132c7:	push   0xffffff8e
  4132c9:	es inc esi
  4132cb:	test   al,0xcc
  4132cd:	jg     0x413346
  4132cf:	out    dx,eax
  4132d0:	or     DWORD PTR [ebx-0x3d],ebx
  4132d3:	sub    edi,DWORD PTR [edi-0x63538081]
  4132d9:	dec    esp
  4132da:	icebp  
  4132db:	xchg   esp,eax
  4132dc:	shl    bh,0xb3
  4132df:	cwde   
  4132e0:	mov    ebp,edi
  4132e2:	add    eax,0x2003d029
  4132e7:	call   0x6cccb2b8
  4132ec:	jo     0x4132ea
  4132ee:	icebp  
  4132ef:	stc    
  4132f0:	int3   
  4132f1:	mov    WORD PTR [ebp+0xc7fcbf6],cs
  4132f7:	(bad)  
  4132f8:	xlat   BYTE PTR ds:[ebx]
  4132f9:	clc    
  4132fa:	icebp  
  4132fb:	push   esp
  4132fc:	push   ebx
  4132fd:	in     al,0x48
  4132ff:	sbb    al,0x48
  413301:	inc    BYTE PTR ds:0x902d1a9
  413307:	call   0x3532b2d8
	...
  413314:	add    BYTE PTR [eax],al
  413316:	dec    edi
  413317:	std    
  413318:	ja     0x4132bb
  41331a:	mov    ah,0x35
  41331c:	push   0x28
  41331e:	retf   
  41331f:	out    0xdd,eax
  413321:	xchg   edi,eax
  413322:	sbb    esi,edi
  413324:	and    DWORD PTR [edi+ebx*1],0xfffffffe
  413328:	ja     0x41332a
  41332a:	push   edx
  41332b:	jge    0x4133a5
  41332d:	clc    
  41332e:	fisubr WORD PTR [ebx]
  413330:	imul   eax,DWORD PTR [ecx+0x66],0x68
  413334:	mov    cl,0xfe
  413336:	loope  0x4133b5
  413338:	test   BYTE PTR [ebp-0x2],al
  41333b:	jge    0x4133b5
  41333d:	cld    
  41333e:	add    eax,edi
  413340:	stc    
  413341:	push   0x4ce5a5
  413346:	push   cs
  413347:	xor    al,dh
  413349:	call   DWORD PTR [ecx-0x4a1bb6f5]
  41334f:	jg     0x413331
  413351:	add    BYTE PTR [ecx],dh
  413353:	add    al,0xa5
  413355:	add    BYTE PTR [esi],ah
  413357:	or     BYTE PTR [ebp+0x180be7d],0x84
  41335e:	mov    eax,ds:0xa5000c80
  413363:	jg     0x41334d
  413365:	add    cl,dh
  413367:	add    ebx,DWORD PTR [ecx-0xe800a00]
  41336d:	jne    0x41334d
  41336f:	push   0x7fe6366d
  413374:	test   DWORD PTR [ebp-0x32],esi
  413377:	or     eax,esi
  413379:	mov    eax,DWORD PTR [eax]
	...
  413383:	add    BYTE PTR [esi],bl
  413385:	push   eax
  413386:	in     al,0x51
  413388:	std    
  413389:	lods   al,BYTE PTR ds:[esi]
  41338a:	push   0xffffffad
  41338c:	ret    0x7eb3
  41338f:	or     dl,al
  413391:	mov    eax,0xb3e20479
  413396:	in     eax,0x4
  413398:	sar    BYTE PTR [esi+0x260a0d],cl
  41339e:	and    dh,BYTE PTR [edx-0x54]
  4133a1:	push   ebp
  4133a3:	cmp    ecx,ecx
  4133a5:	or     BYTE PTR [esp+ebp*8-0x7ff8977a],0xcf
  4133ad:	add    al,0xce
  4133af:	jg     0x41333c
  4133b1:	fisttp WORD PTR [ebp-0x21]
  4133b4:	shr    esi,cl
  4133b6:	dec    ecx
  4133b7:	test   eax,0x7446ee16
  4133bc:	mov    DWORD PTR [eax+0x6a934c85],edx
  4133c2:	stc    
  4133c3:	out    0x58,eax
  4133c5:	sub    al,0x6e
  4133c7:	(bad)  
  4133c8:	or     al,BYTE PTR [ecx+0x8]
  4133cb:	add    bh,cl
  4133cd:	call   0x39bc7854
  4133d2:	in     al,0x0
  4133d4:	mov    ch,0xe8
  4133d6:	jecxz  0x4133d7
  4133d8:	mov    dh,0xe8
  4133da:	jecxz  0x4133db
  4133dc:	dec    ebx
  4133dd:	sub    al,0x52
  4133df:	dec    edi
  4133e0:	xor    ah,dl
  4133e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133e3:	dec    edx
  4133e4:	mov    gs,eax
  4133e6:	add    al,0xc0
	...
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	fwait
  4133f3:	(bad)  
  4133f4:	mov    WORD PTR [edi+esi*8-0x18],?
  4133f8:	stc    
  4133f9:	sbb    edx,DWORD PTR [eax]
  4133fb:	adc    al,0x5a
  4133fd:	inc    BYTE PTR [edx-0x148b9060]
  413403:	stc    
  413404:	cli    
  413405:	jmp    0x4133ff
  413407:	jnp    0x41340e
  413409:	call   0xfeb22140
  41340e:	call   0xf728846e
  413413:	xchg   ebx,eax
  413414:	or     BYTE PTR [eax],al
  413416:	fcomp  DWORD PTR [ebx+0x7c]
  413419:	out    0xd6,eax
  41341b:	sahf   
  41341c:	outs   dx,DWORD PTR ds:[esi]
  41341d:	dec    al
  41341f:	mov    ebx,0xaebee760
  413424:	outs   dx,DWORD PTR ds:[esi]
  413425:	(bad)  
  413426:	mov    eax,0xa6e764bb
  41342b:	sahf   
  41342c:	outs   dx,DWORD PTR ds:[esi]
  41342d:	(bad)  
  41342e:	pop    edx
  41342f:	jg     0x413451
  413431:	je     0x413443
  413433:	call   0xfadb0743
  413438:	cmp    bl,dh
  41343a:	xchg   DWORD PTR [ebp+0x72203cf],edi
  413440:	cwde   
  413441:	or     BYTE PTR [ebx+edi*8+0x44e5041d],0x7a
  413449:	test   al,0xe7
  41344c:	jecxz  0x413419
  41344e:	imul   edi,edx,0xfa64c67c
  413454:	fmul   DWORD PTR [ebx]
	...
  41345e:	add    BYTE PTR [eax],al
  413460:	addr16 popf 
  413462:	pop    eax
  413463:	jl     0x4134b6
  413465:	gs call 0x4a8c0ed6
  41346b:	jl     0x413442
  41346d:	mov    edi,0x679f1db7
  413472:	retf   
  413473:	dec    edi
  413474:	lock jg 0x413442
  413477:	add    ecx,edi
  413479:	jmp    0x3a4:0x6247eb69
  413480:	jg     0x41347c
  413482:	nop
  413483:	or     esp,DWORD PTR [edi]
  413485:	fist   WORD PTR [esp+edi*2-0x36b018f7]
  41348c:	add    edx,edi
  41348e:	repnz cmc 
  413490:	hlt    
  413491:	stc    
  413492:	jo     0x41349f
  413494:	out    0x81,eax
  413496:	stos   DWORD PTR es:[edi],eax
  413497:	jl     0x413482
  413499:	(bad)  
  41349a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41349b:	add    bh,cl
  41349d:	push   esp
  41349e:	jle    0x413508
  4134a0:	dec    ebp
  4134a1:	ret    
  4134a2:	xlat   BYTE PTR ds:[ebx]
  4134a3:	shl    DWORD PTR [esi+0x7f],cl
  4134a6:	dec    ebp
  4134a7:	ret    0x73c9
  4134aa:	sti    
  4134ab:	imul   esi,DWORD PTR [esi+0x41],0xffffffb2
  4134af:	jnp    0x4134f8
  4134b1:	inc    ebx
  4134b2:	or     al,0xb5
  4134b4:	inc    eax
  4134b5:	mov    esp,0xf992215d
  4134ba:	jno    0x4134a2
  4134bc:	int3   
  4134bd:	jae    0x41351a
  4134bf:	adc    DWORD PTR ds:0xe94b62,ebp
	...
  4134cd:	add    BYTE PTR [ebp-0x1f],bh
  4134d0:	mov    edi,0x57fccd7
  4134d5:	test   eax,0xeee57f7f
  4134da:	fld    TBYTE PTR fs:[ecx+0x28]
  4134de:	retf   
  4134df:	push   eax
  4134e0:	in     al,0x2d
  4134e2:	popf   
  4134e3:	jg     0x4134f1
  4134e5:	repnz or al,0x6d
  4134e8:	sub    eax,0x5888e4b6
  4134ed:	push   esi
  4134ee:	aam    0x85
  4134f0:	int3   
  4134f1:	aad    0xeb
  4134f3:	dec    edi
  4134f4:	fs jmp 0xd1f41dc6
  4134fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134fb:	popa   
  4134fc:	dec    ebx
  4134fd:	jmp    0xe1b92f1e
  413502:	mov    ah,0x90
  413504:	jge    0x41352c
  413506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413507:	loopne 0x413534
  413509:	mov    bl,0x95
  41350b:	stc    
  41350c:	lock fimul DWORD PTR [edi+esi*1-0x67bf10e]
  413514:	(bad)  
  413515:	push   edi
  413516:	ret    
  413517:	xor    BYTE PTR [edi+0x4e],0x74
  41351b:	jae    0x41350d
  41351d:	idiv   bh
  41351f:	and    ah,0x67
  413522:	or     al,0xfa
  413524:	icebp  
  413525:	inc    esi
  413526:	xchg   edx,eax
  413527:	mov    esi,0x5ffe908
  41352c:	loope  0x413596
  41352e:	nop
  41352f:	enter  0xcef9,0x0
	...
  41353b:	add    BYTE PTR [ebp+0xc],al
  41353e:	dec    eax
  41353f:	add    BYTE PTR [edx-0x698a0d34],cl
  413545:	jne    0x4135bf
  413547:	or     al,0x8e
  413549:	xchg   edi,eax
  41354a:	cmp    al,BYTE PTR [eax]
  41354c:	mov    dh,0x89
  41354e:	int3   
  41354f:	rdpmc  
  413551:	mov    al,0xe
  413553:	add    BYTE PTR [esi-0x5907b7c3],ah
  413559:	jl     0x413567
  41355b:	add    BYTE PTR [ecx],dh
  41355d:	mov    edi,0x7c71ffe1
  413562:	or     al,0x6a
  413564:	jmp    0xea66:0x69f1
  41356a:	icebp  
  41356b:	mov    WORD PTR [ebx-0xc72be8d],?
  413571:	ins    BYTE PTR es:[edi],dx
  413572:	cli    
  413573:	(bad)  
  413574:	stc    
  413575:	int3   
  413576:	bnd jne 0x413577
  413579:	jne    0x4135f3
  41357b:	cld    
  41357c:	mov    fs,WORD PTR [ebp+0x38]
  41357f:	add    BYTE PTR [esi],dh
  413581:	mov    esp,ecx
  413583:	je     0x4135b8
  413585:	imul   edi,ecx,0x1
  413588:	es jl  0x4135ef
  41358b:	stos   DWORD PTR es:[edi],eax
  41358c:	outs   dx,BYTE PTR ds:[esi]
  41358d:	ret    
  41358e:	icebp  
  41358f:	inc    BYTE PTR [ebx-0x74]
  413592:	in     al,0x40
  413594:	imul   esi,DWORD PTR [ebp-0xe],0x50
  413598:	lods   eax,DWORD PTR ds:[esi]
  413599:	dec    esp
  41359a:	add    BYTE PTR [ebp-0xd921a],0x0
	...
  4135a9:	add    BYTE PTR [esi-0x2e],ah
  4135ac:	jmp    0xf2b660e1
  4135b1:	mov    DWORD PTR [ebx+0x60],esp
  4135b4:	cli    
  4135b5:	(bad)  
  4135b6:	stc    
  4135b7:	xchg   DWORD PTR fs:[ecx-0x17],ecx
  4135bb:	jne    0x41353d
  4135bd:	inc    ebp
  4135be:	add    dl,bl
  4135c0:	imul   ecx,DWORD PTR [ebx-0x31],0xc9ffcd3e
  4135c7:	or     al,0x65
  4135c9:	test   al,0xbe
  4135cc:	jae    0x413642
  4135ce:	retf   
  4135cf:	ror    BYTE PTR [ebx-0x79d14fb5],1
  4135d5:	test   BYTE PTR [edi+0x35fe742e],al
  4135db:	jmp    0xa86889c5
  4135e0:	or     bh,bh
  4135e2:	pop    edx
  4135e3:	std    
  4135e4:	jnp    0x4135e4
  4135e6:	mov    BYTE PTR [esi],al
  4135e8:	loop   0x4135f5
  4135ea:	ja     0x413579
  4135ec:	(bad)  
  4135ed:	(bad)  
  4135ee:	js     0x413660
  4135f0:	jno    0x4135d9
  4135f2:	js     0x413662
  4135f4:	jae    0x41365f
  4135f6:	iret   
  4135f7:	adc    bl,0x67
  4135fa:	push   cs
  4135fb:	jmp    0x4eacea74
  413600:	jae    0x413600
  413602:	push   eax
  413603:	aam    0x9
  413605:	call   0xfeb64aa8
  41360a:	push   esi
  41360b:	fs ins BYTE PTR es:[edi],dx
  41360d:	test   BYTE PTR [eax],0x0
	...
  413618:	cmp    BYTE PTR [esi-0x49e47b77],dh
  41361e:	jae    0x41361e
  413620:	jg     0x4135e2
  413622:	cld    
  413623:	addr16 mov gs,eax
  413626:	je     0x4135dc
  413628:	sub    ecx,DWORD PTR [esi+0x1410fe73]
  41362e:	or     ch,al
  413630:	mov    esi,0xd4fe7514
  413635:	test   al,0xfc
  413637:	sbb    BYTE PTR [esp+esi*4+0x5c],cl
  41363b:	div    al
  41363d:	in     eax,dx
  41363e:	icebp  
  41363f:	je     0x413600
  413641:	in     eax,0x3d
  413643:	(bad)
  413647:	jo     0x413622
  413649:	div    BYTE PTR [ebx]
  41364b:	ins    BYTE PTR es:[edi],dx
  41364c:	rol    BYTE PTR [edi-0x26],cl
  41364f:	js     0x413606
  413651:	mov    ebp,esi
  413653:	inc    ebx
  413654:	cmp    al,0x7e
  413656:	adc    ebp,DWORD PTR [esi+edi*4+0x47]
  41365a:	mov    dl,0x78
  41365c:	mov    esp,edi
  41365e:	ret    
  41365f:	jo     0x41360a
  413661:	neg    al
  413663:	add    ecx,edi
  413665:	jg     0x413684
  413667:	add    al,0x27
  413669:	pop    esi
  41366a:	sbb    eax,ebx
  41366c:	nop
  41366d:	cmc    
  41366e:	push   eax
  41366f:	addr16 xor esi,0x83fb7882
  413676:	fwait
  413677:	ins    BYTE PTR es:[edi],dx
  413678:	add    eax,0x8a72f7
	...
  413685:	add    BYTE PTR [ebx-0x2d],cl
  413688:	jb     0x413702
  41368a:	imul   ebp,DWORD PTR [ecx-0x1d],0xa4674eeb
  413691:	add    ebx,DWORD PTR [eax+0x2c]
  413694:	inc    eax
  413695:	jo     0x4136e8
  413697:	neg    BYTE PTR [edx-0x12]
  41369a:	aam    0xe7
  41369c:	xor    ecx,esp
  41369e:	inc    ecx
  41369f:	idiv   BYTE PTR [esi+edi*2+0x8]
  4136a3:	out    dx,al
  4136a4:	xor    bh,BYTE PTR [eax+0x4d]
  4136a7:	xor    al,0x1c
  4136a9:	jo     0x4136d4
  4136ab:	mul    bl
  4136ad:	or     BYTE PTR [ebx+0xb],cl
  4136b0:	in     al,0x3
  4136b2:	iret   
  4136b3:	addr16 pusha 
  4136b5:	jmp    0x413646
  4136b7:	jg     0x413721
  4136b9:	mov    esi,0xae024efc
  4136be:	sbb    dh,ch
  4136c0:	or     bh,BYTE PTR [eax-0x10]
  4136c3:	test   BYTE PTR [ebp+0x78],dh
  4136c6:	icebp  
  4136c7:	mov    DWORD PTR [ecx+ebp*1],ecx
  4136ca:	clc    
  4136cb:	jns    0x41365a
  4136cd:	ins    BYTE PTR es:[edi],dx
  4136ce:	jo     0x4136c6
  4136d0:	jge    0x413731
  4136d2:	dec    esp
  4136d3:	xor    ebp,ecx
  4136d5:	(bad)  
  4136d6:	pop    eax
  4136d7:	cmc    
  4136d8:	or     al,0x5d
  4136da:	mov    dh,0x2
  4136dc:	mov    al,0xc1
  4136de:	xor    dh,dh
  4136e0:	icebp  
  4136e1:	jmp    0xd9a5988e
  4136e6:	int3   
  4136e7:	in     al,0xb2
  4136e9:	mov    dh,0x0
	...
  4136f3:	add    BYTE PTR [esi-0x702f1b83],bl
  4136f9:	div    cl
  4136fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136fc:	pop    esi
  4136fd:	(bad)  
  4136ff:	sahf   
  413700:	sbb    dh,dh
  413702:	ja     0x4136e5
  413704:	hlt    
  413705:	arpl   WORD PTR [edi-0x72],ax
  413708:	clc    
  413709:	cmc    
  41370a:	mov    bh,0x8d
  41370c:	call   0x7ec02906
  413711:	jge    0x4136f7
  413713:	push   ss
  413714:	mov    ?,esi
  413716:	icebp  
  413717:	outs   dx,BYTE PTR ds:[esi]
  413718:	pop    esi
  413719:	icebp  
  41371a:	icebp  
  41371b:	pushf  
  41371c:	sti    
  41371d:	in     eax,dx
  41371e:	icebp  
  41371f:	pop    esi
  413720:	fsubr  DWORD PTR [ebx+0x4]
  413723:	inc    ecx
  413724:	in     eax,dx
  413725:	cmp    dh,cl
  413727:	dec    esi
  413728:	mov    eax,0xc03eed2b
  41372d:	cmc    
  41372e:	icebp  
  41372f:	mov    ah,0xc4
  413731:	out    0xd2,eax
  413733:	lods   eax,DWORD PTR ds:[esi]
  413734:	mov    eax,ds:0x8774f1f5
  413739:	in     eax,dx
  41373a:	icebp  
  41373b:	mov    al,es:0xdd11046b
  413741:	cmp    dh,cl
  413743:	push   ss
  413744:	sub    BYTE PTR [ebx],0xdd
  413747:	push   ss
  413748:	js     0x41373f
  41374a:	icebp  
  41374b:	add    BYTE PTR [ebx-0x78],bh
  41374e:	in     al,0x24
  413750:	sub    ebp,DWORD PTR [esi-0xe]
  413753:	jmp    FWORD PTR [ebx+0xfffa53]
	...
  413761:	add    cl,dh
  413763:	push   0x6df14807
  413768:	repnz mov ch,0xfe
  41376b:	repnz dec DWORD PTR gs:[esi-0x6e00b587]
  413773:	ins    DWORD PTR es:[edi],dx
  413774:	mov    eax,0xf26d79dc
  413779:	call   0x346cf4
  41377e:	popa   
  41377f:	das    
  413780:	out    dx,al
  413781:	div    DWORD PTR [ecx+0x6d]
  413784:	jmp    0xf2ae216e
  413789:	(bad)  
  41378a:	sti    
  41378b:	push   eax
  41378c:	cli    
  41378d:	jmp    DWORD PTR [ecx+0x68]
  413790:	rol    DWORD PTR [edi+0x51],cl
  413793:	ins    DWORD PTR es:[edi],dx
  413794:	repnz mov ch,0x62
  413797:	gs repnz push ecx
  41379b:	out    dx,eax
  41379c:	add    eax,0xe4886bff
  4137a1:	(bad)  
  4137a2:	rep ins DWORD PTR es:[edi],dx
  4137a4:	repnz (bad) 
  4137a6:	cmp    ebx,DWORD PTR [edx+edi*8-0x1]
  4137aa:	icebp  
  4137ab:	push   0x6da147af
  4137b0:	repnz inc ebp
  4137b2:	sahf   
  4137b3:	arpl   bx,dx
  4137b5:	std    
  4137b6:	xchg   ecx,eax
  4137b7:	ins    DWORD PTR es:[edi],dx
  4137b8:	bnd jne 0x4137ad
  4137bb:	push   0x803633d3
  4137c0:	ret    
  4137c1:	ret    0x8002
  4137c4:	push   edi
  4137c5:	mov    eax,DWORD PTR [eax]
	...
  4137cf:	add    dl,al
  4137d1:	add    esi,ecx
  4137d3:	in     al,0xa3
  4137d5:	mov    edi,0xfecf50f5
  4137da:	pop    ds
  4137db:	push   0xf6e5e68e
  4137e0:	jo     0x413809
  4137e2:	push   cs
  4137e3:	(bad)  
  4137e4:	jp     0x4137c8
  4137e6:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4137e8:	xchg   ebp,eax
  4137e9:	in     eax,dx
  4137ea:	ja     0x4137f6
  4137ec:	punpckhdq mm4,mm6
  4137ef:	dec    edi
  4137f0:	dec    esp
  4137f1:	pop    ebx
  4137f2:	je     0x4137f7
  4137f4:	pop    edx
  4137f5:	mov    ch,0x77
  4137f7:	das    
  4137f8:	pop    eax
  4137f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137fa:	jo     0x41377c
  4137fc:	inc    edx
  4137fd:	sar    DWORD PTR [eax+eax*1-0x31],1
  413801:	call   0x9cc93ee5
  413806:	jo     0x4137fb
  413808:	into   
  413809:	call   0x224f231b
  41380e:	loop   0x413807
  413810:	daa    
  413811:	test   eax,0x63cf40e0
  413816:	mov    cl,0xe3
  413818:	pop    ds
  413819:	add    edx,esp
  41381b:	xor    cl,bh
  41381d:	call   0x8f0cfbae
  413822:	or     BYTE PTR [ebp+0x67d8fd0a],cl
  413828:	pusha  
  413829:	or     ch,0xff
  41382c:	popa   
  41382d:	in     al,dx
  41382e:	or     eax,ebp
  413830:	cli    
  413831:	cs jns 0x413832
	...
  41383c:	add    BYTE PTR [eax],al
  41383e:	les    ebp,FWORD PTR [eax-0x3f60ec04]
  413844:	push   cs
  413845:	add    BYTE PTR [eax],dh
  413847:	add    ebx,ecx
  413849:	inc    dl
  41384b:	lock gs mov ds:0xfae777b1,al
  413853:	and    DWORD PTR [ecx-0x2],edi
  413856:	and    BYTE PTR [esi+esi*2],dl
  413859:	sbb    BYTE PTR [edx-0x65fbd481],0x37
  413860:	sbb    al,0x15
  413862:	nop
  413863:	repnz sbb cl,BYTE PTR [ebx+0xe]
  413867:	mov    bl,ah
  413869:	into   
  41386a:	inc    ebp
  41386b:	in     al,0x66
  41386d:	inc    eax
  41386e:	hlt    
  41386f:	gs jecxz 0x41385b
  413872:	xchg   ecx,eax
  413873:	bnd jo 0x413881
  413876:	test   DWORD PTR [eax-0x59],0x2108d974
  41387d:	js     0x4138e7
  41387f:	mov    WORD PTR [ebx-0x3d],ds
  413882:	enter  0x10f1,0x45
  413886:	or     BYTE PTR [ecx-0x1d],al
  413889:	je     0x4138ce
  41388b:	mov    bl,bl
  41388d:	jae    0x413843
  41388f:	repnz mov dl,0xeb
  413892:	ret    
  413893:	addr16 and al,0x4
  413896:	aaa    
  413897:	jle    0x41387c
  413899:	add    ecx,DWORD PTR [edi-0xe]
  41389c:	adc    BYTE PTR [edi+eiz*4],cl
  41389f:	ror    DWORD PTR [edi+0x74],1
  4138a5:	add    BYTE PTR [eax],al
  4138a7:	add    BYTE PTR [eax],al
  4138a9:	add    BYTE PTR [eax],al
  4138ab:	add    BYTE PTR [ecx+0x844d0f2],cl
  4138b1:	inc    ecx
  4138b2:	jecxz  0x413928
  4138b4:	add    ecx,DWORD PTR [eax-0xd8fd565]
  4138ba:	jb     0x4138a7
  4138bc:	into   
  4138bd:	jg     0x4138a2
  4138bf:	and    DWORD PTR [ecx+0x6c],0xffffffeb
  4138c3:	imul   esi,DWORD PTR [edx+esi*8+0x6c51746a],0x4f
  4138cb:	je     0x413890
  4138cd:	xchg   DWORD PTR [ebx+0x3a],ecx
  4138d0:	mov    esi,edx
  4138d2:	inc    edx
  4138d3:	dec    edx
  4138d4:	push   cs
  4138d5:	jnp    0x4138ba
  4138d7:	into   
  4138d8:	inc    ebp
  4138d9:	jecxz  0x413941
  4138db:	aas    
  4138dc:	add    al,0x49
  4138de:	or     al,0x9e
  4138e0:	repnz arpl WORD PTR ss:[ecx+0x11046ba3],sp
  4138e8:	ja     0x413927
  4138ea:	icebp  
  4138eb:	push   ds
  4138ec:	push   ebp
  4138ed:	cmp    esi,eax
  4138ef:	push   0xffffffb9
  4138f1:	and    al,0x46
  4138f3:	test   al,0xcc
  4138f5:	jg     0x4138f8
  4138f7:	ins    DWORD PTR es:[edi],dx
  4138f8:	mov    DWORD PTR [edi+0xc],edi
  4138fb:	jmp    0xa2fcec4f
  413900:	or     eax,0x58def1f2
  413905:	xor    cl,BYTE PTR [ecx+ebp*8]
  413908:	int3   
  413909:	(bad)  
  41390a:	das    
  41390b:	mov    al,ds:0xe90c4088
	...
  413918:	add    BYTE PTR [eax],al
  41391a:	int    0xfb
  41391c:	mov    ebp,0x8d7fcce8
  413921:	add    al,0xa2
  413923:	inc    esi
  413924:	dec    ebx
  413925:	jmp    0x8fc9b9f6
  41392a:	retf   0xc7f
  41392d:	push   0xffffffde
  41392f:	jb     0x413976
  413931:	sub    bl,cl
  413933:	jg     0x413936
  413935:	gs pop edx
  413937:	or     BYTE PTR [ecx+ebp*8],0x49
  41393b:	mov    ah,0x8b
  41393d:	and    dl,BYTE PTR [edx+0x48f6f1f1]
  413943:	add    eax,0xfccce90c
  413948:	das    
  413949:	ins    BYTE PTR es:[edi],dx
  41394a:	and    BYTE PTR [eax+0xc],al
  41394d:	jmp    0xe8b3351f
  413952:	int3   
  413953:	jg     0x4138e2
  413955:	sbb    al,0x86
  413957:	inc    esi
  413958:	dec    ebx
  413959:	jmp    0xdbc9ba2a
  41395e:	sar    DWORD PTR [edi+0xc],cl
  413961:	add    BYTE PTR [esi],bl
  413963:	sub    BYTE PTR [edx+0x41],ch
  413966:	ss shl ecx,cl
  413969:	inc    BYTE PTR [ebx]
  41396b:	and    BYTE PTR [edi+0x41],al
  41396e:	es je  0x4139b9
  413971:	clc    
  413972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413973:	out    dx,al
  413974:	stc    
  413975:	add    cl,bh
  413977:	clc    
  413978:	pop    ecx
  413979:	add    esi,esi
  41397b:	jl     0x4139a2
  41397d:	test   BYTE PTR [eax],0x0
	...
  413988:	inc    eax
  413989:	outs   dx,BYTE PTR ds:[esi]
  41398a:	js     0x413984
  41398c:	leave  
  41398d:	xchg   esi,eax
  41398e:	mov    ebx,0x857d374b
  413993:	lock in eax,dx
  413995:	jbe    0x413a0f
  413997:	add    eax,0xbb5cf
  41399c:	out    0x71,al
  41399e:	push   edi
  41399f:	or     al,0x3d
  4139a1:	xor    ebp,DWORD PTR [edx-0x75]
  4139a4:	sbb    al,0xe0
  4139a6:	test   BYTE PTR [ebp-0x5e],cl
  4139a9:	icebp  
  4139aa:	repnz mov cr2,eax
  4139ae:	or     eax,DWORD PTR [eax]
  4139b0:	mov    dh,0x53
  4139b2:	inc    DWORD PTR [eax]
  4139b4:	mov    dh,0x7c
  4139b6:	fs test al,0xe
  4139b9:	mov    ebx,0x5471fef1
  4139be:	aaa    
  4139bf:	xor    DWORD PTR [esi+0x7c],esi
  4139c2:	add    eax,0xfe0769c0
  4139c7:	add    BYTE PTR [esi+0x7c],ah
  4139ca:	lea    edi,[edi+0x7e]
  4139cd:	jl     0x4139d0
  4139cf:	test   BYTE PTR [esp+edi*2],bh
  4139d2:	or     al,0x0
  4139d4:	fprem1 
  4139d6:	or     eax,ebp
  4139d8:	dec    ecx
  4139d9:	(bad)  
  4139da:	repnz (bad) 
  4139dc:	ffreep st(7)
  4139de:	loope  0x4139df
  4139e0:	and    esp,esi
  4139e2:	bnd jne 0x4139b4
  4139e5:	push   esi
  4139e6:	jle    0x413a5e
  4139e8:	retf   
  4139e9:	ds add al,0x46
	...
  4139f4:	add    BYTE PTR [eax],al
  4139f6:	xor    BYTE PTR [ecx],bh
  4139f8:	aad    0xb1
  4139fa:	mov    bh,0x27
  4139fc:	push   cs
  4139fd:	call   FWORD PTR [edx-0x2002aa4a]
  413a03:	out    0xd,al
  413a05:	or     ecx,DWORD PTR [edi]
  413a07:	jmp    0xe710ed90
  413a0c:	or     eax,0xc45bcf6a
  413a11:	out    0x9f,eax
  413a13:	push   ebx
  413a14:	(bad)  
  413a15:	jmp    0x4139b6
  413a17:	or     al,0xe
  413a19:	push   0xffffffcf
  413a1b:	or     BYTE PTR [edi+0x14],bh
  413a1e:	es sbb eax,0xa6c5ffc9
  413a24:	push   cs
  413a25:	test   BYTE PTR [eax],bh
  413a27:	out    0xd,al
  413a29:	add    BYTE PTR [edx-0x5c],bl
  413a2c:	fs dec edi
  413a2e:	ror    BYTE PTR [eax+edx*2-0x2],0x42
  413a33:	sub    eax,0xb236147c
  413a38:	int    0xff
  413a3a:	aad    0x18
  413a3c:	cmc    
  413a3d:	ja     0x413a91
  413a3f:	pushf  
  413a40:	push   0xcfd9254f
  413a45:	jmp    DWORD PTR [esi]
  413a47:	fmulp  st(7),st
  413a49:	dec    DWORD PTR [ecx-0x25019b6c]
  413a4f:	xchg   ebx,eax
  413a50:	scas   eax,DWORD PTR es:[edi]
  413a51:	inc    eax
  413a52:	iret   
  413a53:	loope  0x413aa2
  413a55:	jae    0x413a70
  413a57:	push   es
  413a58:	cli    
  413a59:	fild   WORD PTR [eax]
	...
  413a63:	add    BYTE PTR [edi-0x7a],dh
  413a66:	leave  
  413a67:	(bad)  
  413a68:	pusha  
  413a69:	pusha  
  413a6a:	leave  
  413a6b:	fisttp DWORD PTR [edx-0x5c]
  413a6e:	push   0xd080504f
  413a73:	dec    edi
  413a74:	mov    dh,0x7f
  413a76:	fisttp QWORD PTR [eax]
  413a78:	mov    ch,0x7f
  413a7a:	pop    edx
  413a7b:	imul   DWORD PTR [edi+ebp*8]
  413a7e:	clc    
  413a7f:	out    dx,al
  413a80:	test   DWORD PTR [eax-0x1d],eax
  413a83:	cld    
  413a84:	push   0x20dc1c74
  413a89:	out    dx,eax
  413a8a:	dec    edx
  413a8b:	mov    dl,0x19
  413a8d:	jne    0x413a7a
  413a8f:	pop    ebx
  413a90:	stc    
  413a91:	inc    eax
  413a92:	sub    dh,BYTE PTR [ecx+0x9]
  413a95:	jbe    0x413a92
  413a97:	jo     0x413b13
  413a99:	sbb    DWORD PTR [edx],0xfffffff7
  413a9c:	rcl    bh,1
  413a9e:	add    al,bl
  413aa0:	icebp  
  413aa1:	out    dx,al
  413aa2:	or     dh,bh
  413aa4:	or     bh,ch
  413aa6:	js     0x413af7
  413aa8:	loope  0x413b1e
  413aaa:	jmp    0x413b07
  413aac:	fild   WORD PTR [eax-0x1e]
  413aaf:	jo     0x413a82
  413ab1:	je     0x413a7a
  413ab3:	pop    ebx
  413ab4:	into   
  413ab5:	inc    esp
  413ab6:	shl    BYTE PTR [eax-0x3f],cl
  413ab9:	je     0x413a7a
  413abb:	jo     0x413aa0
  413abd:	add    BYTE PTR [edi],ch
  413abf:	ret    
  413ac0:	mov    al,0x58
  413ac2:	jecxz  0x413b34
  413ac4:	and    ebx,esp
  413ac6:	mov    dl,0x16
	...
  413ad0:	add    BYTE PTR [eax],al
  413ad2:	dec    edx
  413ad3:	cmp    ah,BYTE PTR [esp+eax*1]
  413ad6:	cwde   
  413ad7:	je     0x413a8c
  413ad9:	pop    ebx
  413ada:	stos   BYTE PTR es:[edi],al
  413adb:	inc    ebx
  413adc:	stos   BYTE PTR es:[edi],al
  413add:	jo     0x413b2c
  413adf:	(bad)  
  413ae0:	repz jo 0x413af6
  413ae3:	hlt    
  413ae4:	data16 out dx,al
  413ae6:	jl     0x413b67
  413ae8:	rol    BYTE PTR [esi+0x708aed68],cl
  413aee:	ja     0x413b24
  413af0:	jb     0x413b62
  413af2:	popa   
  413af3:	pop    ecx
  413af4:	or     al,0xe9
  413af6:	fbstp  TBYTE PTR [ebx-0xc]
  413af9:	outs   dx,BYTE PTR ds:[esi]
  413afa:	mov    ecx,0xcca84634
  413aff:	out    dx,al
  413b00:	ja     0x413b5f
  413b02:	mov    edi,0xe5410473
  413b07:	inc    ecx
  413b08:	icebp  
  413b09:	dec    esi
  413b0a:	pop    ds
  413b0b:	dec    esp
  413b0c:	ret    
  413b0d:	sub    edx,eax
  413b0f:	jg     0x413b68
  413b11:	jb     0x413a93
  413b13:	dec    eax
  413b15:	adc    eax,0x5cf1ed97
  413b1a:	or     edx,ebp
  413b1c:	pop    esp
  413b1d:	add    DWORD PTR es:[edx-0xf],edi
  413b21:	aam    0x8f
  413b23:	inc    esi
  413b24:	dec    ebx
  413b25:	jmp    0xe97df5be
  413b2a:	int3   
  413b2b:	jp     0x413af9
  413b2d:	not    BYTE PTR [ecx+0x1d]
  413b30:	or     al,0xe9
  413b32:	int3   
  413b33:	mov    BYTE PTR [edi-0xf],0x0
	...
  413b3f:	add    ch,cl
  413b41:	jg     0x413b4f
  413b43:	jmp    0xe7397ecf
  413b48:	sar    BYTE PTR [edi+0xc],1
  413b4b:	push   ebx
  413b4c:	retf   
  413b4d:	pop    ecx
  413b4e:	or     al,0x43
  413b50:	rcr    DWORD PTR [ecx+0xc],cl
  413b53:	pop    esp
  413b54:	xchg   cl,dh
  413b56:	pop    esp
  413b57:	je     0x413baf
  413b59:	icebp  
  413b5a:	stc    
  413b5b:	mov    esi,0x3cf13d30
  413b60:	sub    ebp,esi
  413b62:	ja     0x413b11
  413b64:	repz or bh,BYTE PTR ds:0xcc78cce9
  413b6b:	adc    eax,0xe87ed6d6
  413b70:	int3   
  413b71:	jg     0x413bd7
  413b73:	inc    edx
  413b74:	xor    eax,DWORD PTR [eax+0xc]
  413b77:	add    BYTE PTR [ecx-0x19],dl
  413b7a:	add    eax,0xf2c551e8
  413b7f:	push   DWORD PTR [esi-0x14723e98]
  413b85:	addr16 cli 
  413b87:	push   DWORD PTR [ecx+0x1e85bd3]
  413b8d:	(bad)
  413b90:	scas   eax,DWORD PTR es:[edi]
  413b91:	not    ch
  413b93:	test   DWORD PTR [ecx+0x7a35e95c],0x366af25e
  413b9d:	leave  
  413b9e:	iret   
  413b9f:	push   0xb5f18167
	...
  413bac:	add    BYTE PTR [eax],al
  413bae:	ret    0xf274
  413bb1:	push   DWORD PTR [ecx+0x3748c1a6]
  413bb7:	and    esp,0xf25e2935
  413bbd:	mov    DWORD PTR [ebx+0x73],ebp
  413bc0:	cli    
  413bc1:	call   ecx
  413bc3:	leave  
  413bc4:	icebp  
  413bc5:	addr16 aad 0xcb
  413bc8:	dec    esp
  413bc9:	add    cl,ah
  413bcb:	daa    
  413bcc:	(bad)  
  413bcd:	mul    ecx
  413bcf:	pop    ebp
  413bd0:	repnz xor eax,0x4d2881
  413bd6:	sahf   
  413bd7:	xchg   ebp,eax
  413bd8:	dec    ecx
  413bd9:	jmp    DWORD PTR [ecx-0x66137795]
  413bdf:	pop    ebp
  413be0:	repnz push 0xffffffb6
  413be3:	enter  0x68e9,0xf7
  413be7:	xor    ecx,0xffffffb5
  413bea:	inc    edx
  413beb:	jne    0x413bdf
  413bed:	jmp    DWORD PTR [ecx-0x59]
  413bf0:	ror    DWORD PTR [eax-0x49],0x83
  413bf4:	in     al,0xf9
  413bf6:	test   al,0x5c
  413bf8:	repnz mov edi,ecx
  413bfb:	pop    ebx
  413bfc:	push   ebp
  413bfd:	div    BYTE PTR [eax-0x3]
  413c00:	sar    edi,cl
  413c02:	lock adc edx,esi
  413c05:	inc    eax
  413c06:	iret   
  413c07:	ins    DWORD PTR es:[edi],dx
  413c08:	mov    ah,0xdb
  413c0a:	pusha  
  413c0b:	jne    0x413c6f
  413c0d:	(bad)  
  413c0e:	call   0x0:0x40b60d
  413c15:	add    BYTE PTR [eax],al
  413c17:	add    BYTE PTR [eax],al
  413c19:	add    BYTE PTR [eax],al
  413c1b:	add    bh,cl
  413c1d:	dec    esi
  413c1e:	inc    esi
  413c1f:	inc    ebp
  413c20:	inc    eax
  413c21:	dec    ebp
  413c22:	jo     0x413ba8
  413c24:	xor    ecx,DWORD PTR [ebp+0x62]
  413c27:	(bad)  
  413c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c29:	(bad)  
  413c2a:	aad    0xf1
  413c2c:	mov    bh,0x17
  413c2e:	push   cs
  413c2f:	call   FWORD PTR [edx-0x76]
  413c32:	jp     0x413c32
  413c34:	sbb    BYTE PTR [ebp+0x1787cf34],dh
  413c3a:	push   cs
  413c3b:	call   0xfea4588a
  413c40:	push   esi
  413c41:	arpl   WORD PTR [ebp-0xa],bp
  413c44:	clc    
  413c45:	xchg   esp,eax
  413c46:	mov    ?,WORD PTR [ebx+eiz*8-0x30019d6c]
  413c4d:	push   0xffffffde
  413c4f:	addr16 iret 
  413c51:	(bad)  
  413c52:	push   edx
  413c53:	mov    ebp,0xe7f56ad8
  413c58:	xchg   ebp,eax
  413c59:	push   ss
  413c5a:	arpl   si,di
  413c5c:	enter  0x790c,0xf6
  413c60:	ror    dl,0x5f
  413c63:	je     0x413c2c
  413c65:	shl    BYTE PTR [edx+0x3f],0xb0
  413c69:	mov    edx,0x2abbb45f
  413c6e:	pusha  
  413c6f:	(bad)  
  413c70:	mov    al,ds:0x4fe7f0b4
  413c75:	cdq    
  413c76:	pop    edi
  413c77:	(bad)  
  413c78:	nop
  413c79:	je     0x413ccb
  413c7b:	test   BYTE PTR [eax+0x6daa80],0x0
	...
  413c8a:	sti    
  413c8b:	ja     0x413c28
  413c8d:	repnz mov eax,0x3b6d9aea
  413c93:	in     al,0x9a
  413c95:	ins    DWORD PTR es:[edi],dx
  413c96:	imul   ebp,ebx,0x6468fbf0
  413c9c:	and    ebp,DWORD PTR [ebp+0x59]
  413c9f:	jmp    0x413cd1
  413ca1:	fs pop ecx
  413ca3:	jmp    0x413d07
  413ca5:	ins    DWORD PTR es:[edi],dx
  413ca6:	ret    
  413ca7:	ja     0x413d04
  413ca9:	(bad)  
  413caa:	add    bl,ch
  413cac:	push   edx
  413cad:	ins    DWORD PTR es:[edi],dx
  413cae:	or     esp,0x52
  413cb1:	ins    DWORD PTR es:[edi],dx
  413cb2:	xor    ebx,ebp
  413cb4:	fdivr  st,st(3)
  413cb6:	xor    BYTE PTR [eax],al
  413cb8:	dec    edx
  413cb9:	ins    DWORD PTR es:[edi],dx
  413cba:	and    ebx,ebp
  413cbc:	js     0x413d0e
  413cbe:	and    ebx,ebp
  413cc0:	cmp    bl,BYTE PTR [esi+eiz*8+0x3e]
  413cc4:	and    ch,BYTE PTR [ebp+0x9]
  413cc7:	xor    eax,0xeb017514
  413ccc:	sbb    ecx,DWORD PTR ds:0x6d1aea8c
  413cd2:	cmp    ebx,esp
  413cd4:	sbb    ch,BYTE PTR [ebp-0x17]
  413cd7:	xlat   BYTE PTR ds:[ebx]
  413cd8:	iret   
  413cd9:	shl    cl,0xea
  413cdc:	repnz mov dh,0xf0
  413cdf:	repnz cli 
  413ce1:	ins    BYTE PTR es:[edi],dx
  413ce2:	call   0xc9ade35f
  413ce7:	jmp    0x5bd2:0xeab96790
	...
  413cf6:	add    BYTE PTR [eax],al
  413cf8:	mov    edx,0xb16cda3d
  413cfd:	xor    al,0xc4
  413cff:	je     0x413caa
  413d01:	jmp    0x6cb2:0xeb0e70db
  413d08:	adc    ebp,eax
  413d0a:	or     al,0xc0
  413d0c:	lods   al,BYTE PTR ds:[esi]
  413d0d:	in     al,dx
  413d0e:	icebp  
  413d0f:	scas   al,BYTE PTR es:[edi]
  413d10:	sti    
  413d11:	jae    0x413d03
  413d13:	xchg   ecx,eax
  413d14:	sbb    DWORD PTR [ecx-0x3f4a16f4],0x4
  413d1b:	jmp    0x6b2232b9
  413d20:	adc    bh,ah
  413d22:	jmpw   0x74ac
  413d26:	icebp  
  413d27:	hlt    
  413d28:	push   esp
  413d29:	loop   0x413d32
  413d2b:	sub    edx,esp
  413d2d:	jmp    0x630061b5
  413d32:	mov    cl,0xd1
  413d34:	or     eax,0x34d4f2ea
  413d39:	loop   0x413d3f
  413d3b:	push   edi
  413d3c:	mov    ds:0xb8d4f1e9,eax
  413d41:	jmp    0x9ac62ebd
  413d46:	dec    esp
  413d47:	ds stos DWORD PTR es:[edi],eax
  413d49:	mov    bh,0xce
  413d4b:	in     eax,dx
  413d4c:	int3   
  413d4d:	push   esp
  413d4e:	test   DWORD PTR ds:0x26f8be4f,edi
  413d54:	stc    
  413d55:	jne    0x413d3b
  413d57:	xchg   edi,eax
  413d58:	fnstcw WORD PTR [edi+0xc]
  413d5b:	loop   0x413d5d
	...
  413d65:	add    BYTE PTR [ebx+esi*2+0x768e2008],cl
  413d6c:	or     al,0x6
  413d6e:	fnstcw WORD PTR [ecx-0x1c]
  413d71:	xchg   DWORD PTR [ecx-0x731df381],edi
  413d77:	jae    0x413d81
  413d79:	and    BYTE PTR [esi],cl
  413d7b:	jne    0x413d89
  413d7d:	jo     0x413d0d
  413d7f:	icebp  
  413d80:	icebp  
  413d81:	push   esp
  413d82:	sub    esp,ecx
  413d84:	cwde   
  413d85:	sub    esp,DWORD PTR [edx+ebp*8]
  413d88:	and    DWORD PTR [edi+esi*1],0xffffffea
  413d8c:	ja     0x413d8e
  413d8e:	mov    dl,BYTE PTR [ebp+0x78]
  413d91:	clc    
  413d92:	pop    ecx
  413d93:	out    dx,eax
  413d94:	add    eax,ebp
  413d96:	dec    edx
  413d97:	repz jmp FWORD PTR es:[ebp+0x3d]
  413d9c:	jge    0x413dd9
  413d9e:	(bad)  
  413d9f:	mov    esi,0x68666afd
  413da4:	dec    eax
  413da5:	hlt    
  413da6:	mov    dh,0x54
  413da8:	js     0x413da6
  413daa:	dec    esi
  413dab:	push   eax
  413dac:	dec    WORD PTR [ecx-0x17]
  413db0:	mov    cl,0x74
  413db2:	nop
  413db3:	(bad)
  413db6:	dec    ecx
  413db7:	push   ss
  413db8:	repz jne 0x413de9
  413dbb:	inc    ebp
  413dbc:	cli    
  413dbd:	ds test eax,0x2a75f254
  413dc3:	push   esi
  413dc4:	js     0x413dce
  413dc6:	mov    fs,WORD PTR ds:0xff33
	...
  413dd4:	cdq    
  413dd5:	push   esp
  413dd6:	js     0x413dcc
  413dd8:	mov    esi,ebp
  413dda:	cmc    
  413ddb:	jmp    DWORD PTR [ebx-0x1b]
  413dde:	jmp    0xf29756f7
  413de3:	inc    DWORD PTR [ebx+0x61]
  413de6:	jmp    0xf2977210
  413deb:	leave  
  413dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ded:	out    0xf1,eax
  413def:	push   esp
  413df0:	ins    DWORD PTR es:[edi],dx
  413df1:	inc    edi
  413df2:	mov    es,esp
  413df4:	mov    ds:0xda75f2cd,al
  413df9:	inc    esp
  413dfa:	loop   0x413e42
  413dfc:	fst    DWORD PTR [ebp+0x6]
  413dff:	rcl    BYTE PTR [ebx+0x7f],0x52
  413e03:	leave  
  413e04:	hlt    
  413e05:	out    0xf1,eax
  413e07:	mov    ebx,?
  413e09:	jae    0x413e4c
  413e0b:	jmp    DWORD PTR [ebx]
  413e0d:	call   0x9a10dffb
  413e12:	gs (bad) 
  413e14:	aam    0x16
  413e16:	test   DWORD PTR [ebx+0xdd6af],0xe764b398
  413e20:	retf   
  413e21:	xchg   esp,eax
  413e22:	gs (bad) 
  413e24:	push   esi
  413e25:	mov    ds:0x22fafe54,eax
  413e2a:	addr16 je 0x413e98
  413e2d:	or     ebp,edi
  413e2f:	mul    DWORD PTR [edi-0x44]
  413e32:	(bad)  
  413e33:	(bad)  
  413e34:	push   0xebfc5d
	...
  413e41:	add    BYTE PTR [esi+0x35],dh
  413e44:	or     eax,0x28ecf00
  413e49:	imul   ecx,DWORD PTR [esi],0x98e7dbd7
  413e4f:	sub    BYTE PTR [esi],cl
  413e51:	add    ah,dl
  413e53:	xchg   esi,eax
  413e54:	cld    
  413e55:	add    al,0x26
  413e57:	dec    BYTE PTR ds:0x7d5dcf00
  413e5d:	lds    edi,FWORD PTR [bx-0x38]
  413e62:	sub    BYTE PTR [ecx+ebx*1+0x0],ch
  413e66:	iret   
  413e67:	aad    0x7d
  413e69:	mov    BYTE PTR [edx+0x7629d53e],bl
  413e6f:	pop    ss
  413e70:	push   cs
  413e71:	push   esi
  413e72:	test   ebx,0xedcf0013
  413e78:	dec    ebp
  413e79:	je     0x413e48
  413e7b:	jge    0x413e78
  413e7d:	mov    DWORD PTR [edi+0x56e2dc5e],edi
  413e83:	sbb    edx,DWORD PTR [edx+0x67]
  413e86:	stos   DWORD PTR es:[edi],eax
  413e87:	bswap  ecx
  413e89:	(bad)  
  413e8a:	jp     0x413f0a
  413e8c:	sbb    BYTE PTR [esi],ch
  413e8e:	iret   
  413e8f:	fdiv   st,st(2)
  413e91:	mov    edi,0x5ce5803a
  413e96:	sbb    edi,ebx
  413e98:	rcr    esp,cl
  413e9a:	in     al,0x58
  413e9c:	and    al,0x4
  413e9e:	mov    bh,0x37
  413ea0:	out    dx,eax
  413ea1:	add    ecx,edi
  413ea3:	xor    BYTE PTR [ebx+0x7b],0x0
  413eaa:	add    BYTE PTR [eax],al
  413eac:	add    BYTE PTR [eax],al
  413eae:	add    BYTE PTR [eax],al
  413eb0:	and    eax,esp
  413eb2:	pop    ebx
  413eb3:	push   ds
  413eb4:	es inc ecx
  413eb6:	jecxz  0x413e89
  413eb8:	jo     0x413e91
  413eba:	lock add ecx,edi
  413ebd:	jp     0x413e62
  413ebf:	out    dx,eax
  413ec0:	into   
  413ec1:	(bad)  
  413ec3:	jge    0x413e85
  413ec5:	div    DWORD PTR [eax]
  413ec7:	push   ecx
  413ec8:	push   edi
  413ec9:	cmp    eax,0xdc0b7dbb
  413ece:	mov    eax,ds:0x28facf04
  413ed3:	dec    esp
  413ed4:	mov    al,BYTE PTR [eax-0x3c3c971d]
  413eda:	(bad)  
  413edb:	out    dx,eax
  413edc:	sub    bh,ah
  413ede:	sar    bl,1
  413ee0:	xor    BYTE PTR [ebx],dl
  413ee2:	push   edx
  413ee3:	imul   esi,DWORD PTR [ecx],0x5564b0fa
  413ee9:	cmp    eax,0xf9d07c47
  413eee:	nop
  413eef:	push   eax
  413ef0:	inc    ebp
  413ef1:	cmp    eax,0xffc07c2b
  413ef6:	stc    
  413ef7:	add    ebx,eax
  413ef9:	cld    
  413efa:	xchg   edi,eax
  413efb:	push   0xef2ae701
  413f00:	in     al,0xd7
  413f02:	ret    
  413f03:	ret    0xe6f1
  413f06:	push   0xb4ff8bf
  413f0b:	mov    ecx,0x5d0ae689
  413f10:	fadd   DWORD PTR [esp+edi*1+0x46]
	...
  413f1c:	add    BYTE PTR [eax],al
  413f1e:	les    edi,FWORD PTR [edi+0xc]
  413f21:	pushf  
  413f22:	dec    ebx
  413f23:	fcomi  st,st(1)
  413f25:	je     0x413edf
  413f27:	fimul  WORD PTR [edi+0x2c]
  413f2a:	es out 0x5,al
  413f2d:	test   eax,0xd46497a0
  413f32:	test   BYTE PTR [edi],bh
  413f34:	or     al,0x39
  413f36:	add    ebx,eax
  413f38:	dec    eax
  413f39:	(bad)  
  413f3a:	daa    
  413f3b:	aaa    
  413f3c:	fs ds std 
  413f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f40:	or     al,0x41
  413f42:	sar    DWORD PTR [edi-0x1f],cl
  413f45:	outs   dx,DWORD PTR ds:[esi]
  413f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f47:	je     0x413fac
  413f49:	sub    bl,dl
  413f4b:	dec    edi
  413f4c:	icebp  
  413f4d:	adc    al,0x73
  413f4f:	fisubr WORD PTR [eax]
  413f51:	add    esi,esi
  413f53:	in     eax,0xe4
  413f55:	mov    cl,0x8c
  413f57:	in     eax,0xf1
  413f59:	mov    al,0x12
  413f5b:	jg     0x413f69
  413f5d:	adc    al,0xd2
  413f5f:	fimul  DWORD PTR [ebp+0xc58b0ad]
  413f65:	add    eax,DWORD PTR [ecx-0x6b0e881b]
  413f6b:	call   0xf7e89d9f
  413f70:	inc    edi
  413f71:	push   ebp
  413f72:	or     cl,BYTE PTR [eax-0x21db2b0f]
  413f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f79:	inc    esi
  413f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f7b:	in     eax,0x66
  413f7d:	or     ah,BYTE PTR [esi+0x41046b]
	...
  413f8b:	add    BYTE PTR [ebx-0x1b],bl
  413f8e:	icebp  
  413f8f:	and    cl,BYTE PTR cs:[edx-0x220b630f]
  413f96:	fwait
  413f97:	push   ds
  413f98:	addr16 in eax,0x64
  413f9b:	jmp    0x81f4166c
  413fa0:	in     al,0x56
  413fa2:	dec    ebx
  413fa3:	add    dh,ah
  413fa5:	leave  
  413fa6:	lock push 0x75f18227
  413fac:	scas   al,BYTE PTR es:[edi]
  413fad:	dec    ecx
  413fae:	retf   0xb169
  413fb1:	pop    ebp
  413fb2:	bnd jne 0x413f67
  413fb5:	pop    ebp
  413fb6:	js     0x413fc0
  413fb8:	sahf   
  413fb9:	push   edi
  413fba:	xor    bh,bh
  413fbc:	and    DWORD PTR [ebx-0x2f49fb35],0x4027ec86
  413fc6:	fincstp 
  413fc8:	push   ecx
  413fc9:	pop    ebp
  413fca:	add    BYTE PTR [ebp+0x42],0xcc
  413fce:	bnd jne 0x413f73
  413fd1:	pop    esi
  413fd2:	js     0x413fdc
  413fd4:	pop    esi
  413fd5:	(bad)  
  413fd7:	add    BYTE PTR [esi-0x16],ah
  413fda:	mov    cl,0xf
  413fdc:	sti    
  413fdd:	cmp    ecx,DWORD PTR [eax+eax*1]
  413fe0:	jbe    0x413f88
  413fe2:	dec    eax
  413fe3:	clc    
  413fe4:	or     WORD PTR [eax+eax*1],0xbf29
  413fea:	std    
  413feb:	(bad)  
  413fec:	cmp    DWORD PTR [ecx+0x6a0c],eax
	...
  413ffa:	ss (bad) 
  413ffc:	icebp  
  413ffd:	imul   esp,DWORD PTR [esi],0x6b8cf1c7
  414003:	push   ebp
  414004:	inc    ecx
  414005:	lea    edi,[ebx-0x6e000591]
  41400b:	retf   
  41400c:	bnd jne 0x413f9d
  41400f:	pop    esp
  414010:	js     0x41400e
  414012:	jle    0x413fd8
  414014:	and    eax,0xb1e9f600
  414019:	je     0x414006
  41401b:	inc    ebx
  41401c:	mov    es,WORD PTR [ecx]
  41401e:	out    0x80,al
  414020:	fs stos DWORD PTR es:[edi],eax
  414022:	ds mov esp,0x3cffef1
  414028:	cli    
  414029:	out    0x27,eax
  41402b:	sbb    ch,BYTE PTR [ebx-0x2]
  41402e:	jg     0x4140a1
  414030:	pop    eax
  414031:	mov    WORD PTR [edx-0x15],cs
  414034:	(bad)  
  414035:	dec    al
  414037:	push   es
  414038:	fsubr  st(7),st
  41403a:	ja     0x414055
  41403c:	imul   edi,esi,0x46
  41403f:	push   ebx
  414040:	inc    ebp
  414041:	div    BYTE PTR [eax-0x1702aa3b]
  414047:	int    0x6a
  414049:	imul   ecx,edi,0xe68c03e
  41404f:	xlat   BYTE PTR ds:[ebx]
  414050:	push   0xffffffb4
  414052:	ja     0x414081
  414054:	imul   edi,esi,0xffffff88
  414057:	mov    ds:0x99cee7f0,eax
  41405c:	imul   edi,esi,0x0
  414062:	add    BYTE PTR [eax],al
  414064:	add    BYTE PTR [eax],al
  414066:	add    BYTE PTR [eax],al
  414068:	inc    esi
  414069:	push   ebx
  41406a:	jge    0x414062
  41406c:	jo     0x414073
  41406e:	aam    0xff
  414070:	lock ja 0x414042
  414073:	inc    eax
  414074:	iret   
  414075:	cmc    
  414076:	mov    esp,0x6afd60d7
  41407b:	(bad)  
  41407c:	(bad)  
  41407e:	push   ebp
  41407f:	in     eax,0x8d
  414081:	ins    DWORD PTR es:[edi],dx
  414082:	push   0xffffff88
  414084:	dec    edx
  414085:	bound  esp,QWORD PTR [edx-0x2]
  414088:	cmp    al,dl
  41408a:	or     eax,0xc8cfa568
  41408f:	jmp    FWORD PTR [ecx]
  414091:	add    eax,DWORD PTR [esi-0xa]
  414094:	and    BYTE PTR ds:0x4ec7746a,dh
  41409a:	ss inc ecx
  41409c:	adc    BYTE PTR [ebp-0x5b087b90],ah
  4140a2:	push   0xfffffffe
  4140a4:	push   edx
  4140a5:	pop    ebx
  4140a6:	dec    ecx
  4140a7:	idiv   al
  4140a9:	jle    0x4140d5
  4140ab:	shr    DWORD PTR [eax+0x70],cl
  4140ae:	pushf  
  4140af:	(bad)  
  4140b0:	call   0xd98c9199
  4140b5:	jecxz  0x4140b9
  4140b7:	data16 arpl WORD PTR [edi+0x1b],si
  4140bb:	call   0xdc53:0x7bf2e48e
  4140c2:	repnz rcl DWORD PTR gs:[esi-0x1d],0xdb
  4140c8:	cmp    bl,BYTE PTR [ecx+0x24]
  4140cb:	add    al,0x0
	...
  4140d5:	add    BYTE PTR [eax-0x569233d3],dh
  4140db:	jecxz  0x4140b7
  4140dd:	out    dx,eax
  4140de:	enter  0x73d7,0xc2
  4140e2:	cdq    
  4140e3:	jecxz  0x414161
  4140e5:	jg     0x414157
  4140e7:	jmp    0x41409b
  4140e9:	gs dec ebp
  4140eb:	and    eax,0xe3816db4
  4140f0:	jecxz  0x4140e1
  4140f2:	in     eax,0xfe
  4140f4:	push   0x92e37958
  4140f9:	add    al,0xe3
  4140fb:	pop    ebp
  4140fc:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4140fe:	push   0x586582eb
  414103:	outs   dx,DWORD PTR ds:[esi]
  414104:	sub    al,0xdc
  414106:	push   eax
  414107:	jecxz  0x41408b
  414109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41410a:	dec    ecx
  41410b:	ins    DWORD PTR es:[edi],dx
  41410c:	rcr    DWORD PTR [ebx+0x45],cl
  41410f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414110:	bound  esp,QWORD PTR [ebp+0x39]
  414113:	sub    eax,0xe3316d54
  414118:	push   edx
  414119:	out    dx,eax
  41411a:	fcom   st(7)
  41411c:	stos   BYTE PTR es:[edi],al
  41411d:	daa    
  41411e:	and    bl,ah
  414120:	inc    edx
  414121:	scas   eax,DWORD PTR es:[edi]
  414122:	and    al,0xeb
  414124:	dec    edx
  414125:	adc    DWORD PTR gs:[ebp-0x2d],ebp
  414129:	pop    ebx
  41412a:	(bad)  
  41412b:	mov    ds:0xe16a360c,eax
  414130:	mov    bh,0x41
  414132:	push   0xffffffe1
  414134:	icebp  
  414135:	es loopne 0x4141aa
  414138:	in     al,0xda
	...
  414142:	add    BYTE PTR [eax],al
  414144:	mov    al,0xe2
  414146:	icebp  
  414147:	push   ss
  414148:	xor    bh,al
  41414a:	stc    
  41414b:	push   cs
  41414c:	jb     0x41412f
  41414e:	mov    bh,0xd
  414150:	(bad)  
  414152:	icebp  
  414153:	(bad)  
  414154:	mov    ecx,0xf7fae472
  414159:	loop   0x41414c
  41415b:	out    dx,al
  41415c:	imul   eax,edx,0xe22be6f9
  414162:	ja     0x41415d
  414164:	add    al,0x90
  414166:	xor    dh,dl
  414168:	sub    esp,edx
  41416a:	ja     0x414165
  41416c:	xor    ebp,DWORD PTR [edx*8-0xe1dd442]
  414173:	xor    al,0x8b
  414175:	fidivr DWORD PTR [esi-0x49]
  414178:	jmp    0x41415b
  41417a:	icebp  
  41417b:	je     0x414181
  41417d:	jmp    0x9e32:0xe114a6f1
  414184:	repz loope 0x41413e
  414187:	cdq    
  414188:	repz loope 0x41417c
  41418b:	or     DWORD PTR [ebx],0xeb86f1a5
  414191:	sub    esp,ecx
  414193:	jbe    0x414148
  414195:	loope  0x41417b
  414197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414198:	jmp    0xf9da:0x696ef1e2
  41419f:	stos   WORD PTR es:[edi],ax
  4141a1:	fcmove st,st(3)
  4141a3:	pop    ds
  4141a4:	mov    dl,0xe1
  4141a6:	icebp  
  4141a7:	pushf  
	...
  4141b0:	add    BYTE PTR [eax],al
  4141b2:	sub    cl,0xf1
  4141b5:	dec    esi
  4141b6:	je     0x4141e4
  4141b8:	xor    eax,DWORD PTR [eax]
  4141ba:	mov    DWORD PTR [ebx-0xe],ebx
  4141bd:	mov    ch,0x96
  4141bf:	push   ebx
  4141c0:	repnz dec DWORD PTR [esi-0x5600cff9]
  4141c7:	pop    ebx
  4141c8:	dec    eax
  4141c9:	clc    
  4141ca:	fild   QWORD PTR [ebx]
  4141cc:	lock dec ecx
  4141cf:	pop    ebx
  4141d0:	js     0x4141ce
  4141d2:	into   
  4141d3:	mov    ds:0xa4e60023,eax
  4141d8:	retf   
  4141d9:	or     al,0xe6
  4141db:	mov    al,0x86
  4141dd:	in     al,dx
  4141de:	xor    eax,0xb66af5a1
  4141e3:	mov    DWORD PTR [esi-0x1],0xbde9e543
  4141ea:	in     eax,dx
  4141eb:	pop    esp
  4141ec:	repnz mov ebx,esi
  4141ef:	pop    edi
  4141f0:	bnd jne 0x4141a1
  4141f3:	aad    0x3d
  4141f5:	imul   esp,edi,0x5935f17b
  4141fb:	mov    ah,0x4c
  4141fd:	add    BYTE PTR [esi+0x39fff048],bl
  414203:	pop    ebp
  414204:	js     0x41420e
  414206:	push   cs
  414207:	mov    BYTE PTR [ebx+0x41],ah
  41420a:	data16 aad 0xb
  41420d:	add    BYTE PTR [esi-0x3],dh
  414210:	jmp    0xf29e7df7
  414215:	inc    DWORD PTR [eax]
	...
  41421f:	add    bl,al
  414221:	pop    edi
  414222:	bnd jne 0x414283
  414225:	push   ebp
  414226:	sar    DWORD PTR [ebx],0xc9
  414229:	pop    esp
  41422a:	(bad)
  41422e:	push   edi
  41422f:	mov    edi,DWORD PTR [edx+0x1cfccdf8]
  414235:	jge    0x41429d
  414237:	dec    esp
  414238:	mov    esi,eax
  41423a:	or     eax,ebp
  41423c:	iret   
  41423d:	ret    0xff12
  414240:	sbb    BYTE PTR [eax-0x3d],ah
  414243:	sti    
  414244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414245:	(bad)  
  414246:	or     eax,0x82cf49ef
  41424b:	push   0x95e5d68e
  414250:	popw   ss
  414252:	push   cs
  414253:	(bad)  
  414254:	jp     0x414244
  414256:	gs pop esi
  414258:	jo     0x4141db
  41425a:	ins    DWORD PTR es:[edi],dx
  41425b:	(bad)  
  41425c:	pop    edx
  41425d:	mov    ch,BYTE PTR [ebp+0x74]
  414260:	(bad)  
  414261:	jle    0x4142d6
  414263:	cmp    dl,al
  414265:	jns    0x4142a6
  414267:	rcl    ebx,0xd6
  41426a:	mov    ah,0x8a
  41426c:	mov    bl,0x57
  41426e:	inc    esp
  41426f:	iret   
  414270:	rcl    cl,0x6e
  414273:	mov    WORD PTR [edx],cs
  414275:	fstp   TBYTE PTR [ebp+0x6ed322fe]
  41427b:	je     0x414254
  41427d:	mov    esi,0xd6cf2a3c
  414282:	add    al,al
	...
  41428c:	add    BYTE PTR [eax],al
  41428e:	rcl    BYTE PTR [ebx-0xc],0x1
  414292:	iret   
  414293:	(bad)  
  414294:	inc    esi
  414295:	inc    esp
  414296:	xchg   esi,edx
  414298:	or     eax,0xc519cf00
  41429d:	repz jo 0x414271
  4142a0:	or     eax,0xdfd6f500
  4142a5:	push   esi
  4142a7:	(bad)  
  4142a8:	(bad)  
  4142aa:	dec    ebx
  4142ab:	fwait
  4142ac:	push   esp
  4142ad:	dec    edi
  4142ae:	inc    edx
  4142af:	push   ebx
  4142b0:	pop    ecx
  4142b1:	test   BYTE PTR [eax+0x61],0xbd
  4142b5:	(bad)  
  4142b6:	mov    edx,0x3b746e6e
  4142bb:	(bad)  
  4142bc:	outs   dx,BYTE PTR ds:[esi]
  4142bd:	sub    bh,cl
  4142bf:	jg     0x4142a4
  4142c1:	push   cs
  4142c2:	packssdw mm5,mm0
  4142c5:	ins    BYTE PTR es:[edi],dx
  4142c6:	clc    
  4142c7:	jge    0x4142ac
  4142c9:	add    esp,DWORD PTR [edi+0x10c4ac14]
  4142cf:	loope  0x414281
  4142d1:	maskmovq mm1,(bad)
  4142d2:	test   DWORD PTR [esi-0x5c],0x6e4f0162
  4142d9:	xor    ecx,DWORD PTR [ebx-0x6]
  4142dc:	aaa    
  4142dd:	pop    edx
  4142de:	icebp  
  4142df:	fbstp  TBYTE PTR [ebx-0x5bc10f4b]
  4142e5:	(bad)
  4142ea:	loope  0x4142cb
  4142ec:	add    ch,BYTE PTR [ebx+0x3a]
  4142ef:	mov    ds:0x620a,al
	...
  4142fc:	sbb    BYTE PTR ss:[ebx-0x1cbec860],0x62
  414304:	cmp    DWORD PTR [eax-0x204e9e06],0x50
  41430b:	or     al,0xb7
  41430d:	stc    
  41430e:	and    esp,DWORD PTR [ecx-0x5f]
  414311:	or     DWORD PTR [ecx+0x54],esp
  414314:	mov    eax,ds:0x90eec2df
  414319:	addr16 (bad) 
  41431b:	jmp    0x41432c
  41431d:	xor    BYTE PTR [edx-0x45286769],0x61
  414324:	jns    0x41437b
  414326:	jmp    0x414393
  414328:	repnz aas 
  41432a:	stos   BYTE PTR es:[edi],al
  41432b:	popa   
  41432c:	push   edi
  41432d:	add    eax,0xdf615980
  414332:	or     eax,0xce8e704
  414337:	ret    
  414338:	push   eax
  414339:	fidiv  WORD PTR [eax]
  41433b:	cmp    al,0x41
  41433d:	fbstp  TBYTE PTR [edx+0x61]
  414340:	mov    ebx,0x32810c87
  414345:	lahf   
  414346:	icebp  
  414347:	outs   dx,BYTE PTR ds:[esi]
  414348:	inc    esp
  414349:	add    al,0xe5
  41434b:	pop    esi
  41434c:	scas   al,BYTE PTR es:[edi]
  41434d:	fnstsw WORD PTR [edi+0x64]
  414350:	(bad)  
  414351:	aad    0xf1
  414353:	push   esi
  414354:	arpl   WORD PTR [edi+0xe],sp
  414357:	ret    
  414358:	or     eax,0xcb7cf2df
  41435d:	aad    0xf1
  41435f:	add    BYTE PTR ds:[eax],al
	...
  41436a:	outs   dx,BYTE PTR ds:[esi]
  41436b:	push   ebx
  41436c:	add    al,0x41
  41436e:	adc    bl,BYTE PTR [edi+0x4442ef1]
  414374:	jmp    0x671eb197
  414379:	jmp    0xa8a7b972
  41437e:	int3   
  41437f:	fidiv  WORD PTR [edi-0xe2289cf]
  414385:	push   es
  414386:	mov    al,ds:0x8cd1e486
  41438b:	(bad)  
  41438d:	pusha  
  41438e:	push   eax
  41438f:	mov    esi,0xc2feef9
  414394:	mov    BYTE PTR [ecx+0x39f1de07],bh
  41439a:	mov    bl,0xad
  41439c:	data16 sub bl,dl
  41439f:	fidiv  WORD PTR [edi-0xe22084f]
  4143a5:	(bad)  
  4143a6:	mov    eax,ds:0x8cf1e486
  4143ab:	(bad)  
  4143ad:	pusha  
  4143ae:	push   ecx
  4143af:	mov    dl,0xf9
  4143b1:	scas   al,BYTE PTR es:[edi]
  4143b2:	out    dx,eax
  4143b3:	add    DWORD PTR [eax-0xe21f867],esi
  4143b9:	jmp    0x54cead36
  4143be:	call   0xccd03598
  4143c3:	push   ebx
  4143c4:	outs   dx,BYTE PTR ds:[esi]
  4143c5:	add    BYTE PTR [ebp-0x3e081603],dh
  4143cb:	pop    edi
  4143cc:	icebp  
  4143cd:	jae    0x4143cf
	...
  4143d7:	add    bh,bl
  4143d9:	jmp    0x4143cc
  4143db:	push   DWORD PTR [ecx+0x2675f320]
  4143e1:	push   0x7e
  4143e3:	cmp    DWORD PTR [ecx+0x76b5f25f],eax
  4143e9:	aaa    
  4143ea:	repnz inc DWORD PTR [ecx-0x4617fe4b]
  4143f1:	jns    0x4143e4
  4143f3:	inc    ecx
  4143f5:	cmc    
  4143f6:	in     eax,0xf7
  4143f8:	rcr    DWORD PTR [edi-0xe],0x75
  4143fc:	push   ss
  4143fd:	push   0xffffffb4
  4143ff:	cmp    DWORD PTR [ecx-0x414a0da1],esi
  414405:	aaa    
  414406:	repnz inc ecx
  414409:	mov    ch,0x1
  41440b:	call   0x32bd9d
  414410:	shl    ebp,1
  414412:	aad    0xf7
  414414:	sar    DWORD PTR ds:0x37cab5f2,0xf2
  41441b:	jmp    DWORD PTR [ecx-0x217fe4d]
  414421:	jp     0x414414
  414423:	inc    DWORD PTR [ecx-0x7e082e09]
  414429:	cmp    eax,0x699675f2
  41442e:	test   BYTE PTR [ecx],bh
  414430:	xchg   ecx,eax
  414431:	cmp    eax,0x3566bd8e
  414436:	bnd jmp DWORD PTR [esi-0x4b]
  41443a:	sub    al,0x68
	...
  414444:	add    BYTE PTR [eax],al
  414446:	addr16 and ecx,0x1b731be
  41444d:	call   0x32c0b9
  414452:	iret   
  414453:	cmc    
  414454:	xchg   ebx,eax
  414455:	iret   
  414456:	pop    eax
  414457:	push   cs
  414458:	push   edx
  414459:	inc    BYTE PTR [edx+0x40fe59fb]
  41445f:	pop    esi
  414460:	ror    DWORD PTR [edi],cl
  414462:	daa    
  414463:	sbb    dl,BYTE PTR [ecx]
  414465:	push   DWORD PTR [eax]
  414467:	outs   dx,BYTE PTR ds:[esi]
  414468:	ror    DWORD PTR [edi],cl
  41446a:	sub    ah,bh
  41446c:	xor    dh,dh
  41446e:	and    BYTE PTR [esi],bh
  414470:	push   ecx
  414471:	je     0x41443a
  414473:	ds and dh,bh
  414476:	adc    BYTE PTR [esi+0x51],cl
  414479:	mov    ah,0x27
  41447b:	sahf   
  41447c:	push   ecx
  41447d:	(bad)  
  41447e:	not    esi
  414480:	adc    edi,edi
  414482:	clc    
  414483:	xchg   ebp,eax
  414484:	xchg   ebx,eax
  414485:	out    dx,eax
  414486:	clc    
  414487:	lods   eax,DWORD PTR ds:[esi]
  414488:	push   ecx
  414489:	out    0xb2,eax
  41448b:	loop   0x4144df
  41448d:	(bad)  
  41448e:	loopne 0x4144c3
  414490:	jl     0x414488
  414492:	fdiv   DWORD PTR [ebp+0x60]
  414495:	sbb    DWORD PTR [ebx-0x7d01ae73],edx
  41449b:	outs   dx,BYTE PTR ds:[esi]
  41449c:	pop    ecx
  41449d:	inc    al
  41449f:	outs   dx,BYTE PTR ds:[esi]
  4144a0:	add    DWORD PTR [eax+edi*4],edi
  4144a3:	aad    0x52
  4144a5:	mov    ah,0xab
  4144a7:	aad    0x52
  4144a9:	inc    BYTE PTR [eax]
	...
  4144b3:	add    BYTE PTR [edi-0x5f00ee16],dh
  4144b9:	mov    ebp,0xb5a0df94
  4144be:	push   edx
  4144bf:	out    0x96,eax
  4144c1:	jno    0x414514
  4144c3:	dec    BYTE PTR [eax-0x7f09c6a5]
  4144c9:	sbb    eax,0x15b4ed66
  4144ce:	push   ebx
  4144cf:	dec    BYTE PTR [edx]
  4144d1:	punpcklwd mm7,mm1
  4144d4:	push   0x7f
  4144d6:	stos   BYTE PTR es:[edi],al
  4144d7:	pop    esi
  4144d8:	popa   
  4144d9:	push   edx
  4144da:	(bad)  
  4144db:	imul   eax,esi,0xffffffa7
  4144de:	jecxz  0x4144e3
  4144e0:	xchg   cl,al
  4144e2:	iret   
  4144e3:	add    esp,DWORD PTR [edx+0xc829808]
  4144e9:	fistp  DWORD PTR ds:0x7a4aa504
  4144ef:	fmul   st,st(0)
  4144f1:	out    0xe3,eax
  4144f3:	sbb    al,0x28
  4144f5:	fdivr  QWORD PTR [eax+ecx*8+0x24]
  4144f9:	(bad)  
  4144fb:	or     esp,DWORD PTR [edi+0x10c4cd1e]
  414501:	fstp   QWORD PTR [eax]
  414503:	dec    edi
  414504:	nop
  414505:	ds jecxz 0x414573
  414508:	popa   
  414509:	fidiv  DWORD PTR [edx]
  41450b:	pop    esi
  41450c:	stc    
  41450d:	push   ecx
  41450e:	jmp    0x4144fb
  414510:	das    
  414511:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414513:	add    esi,DWORD PTR [edi-0x7f]
  414516:	jecxz  0x41451b
	...
  414520:	add    BYTE PTR [eax],al
  414522:	dec    edi
  414523:	out    0x60,eax
  414525:	pusha  
  414526:	(bad)  
  414528:	sbb    bl,al
  41452a:	aam    0xdb
  41452c:	cwde   
  41452d:	or     esi,DWORD PTR [edi-0x3ea13391]
  414533:	leave  
  414534:	and    eax,0x6e34cf07
  414539:	outs   dx,DWORD PTR ds:[esi]
  41453a:	dec    ebp
  41453b:	(bad)  
  41453c:	fbstp  TBYTE PTR [ecx+eax*1+0x12e9e366]
  414543:	fistp  DWORD PTR [eax+0xc]
  414546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414547:	adc    eax,0x9915d1c
  41454c:	sub    DWORD PTR [eax+0x55],esp
  41454f:	xchg   ebp,eax
  414550:	push   ss
  414551:	int3   
  414552:	jo     0x486164d6
  414558:	or     al,0x28
  41455a:	retf   
  41455b:	push   DWORD PTR [ecx]
  41455d:	jmp    0xe5a589e2
  414562:	jbe    0x4145a4
  414564:	or     al,0x36
  414566:	jmp    0x414518
  414568:	sub    ecx,ebp
  41456a:	int3   
  41456b:	xchg   ah,cl
  41456d:	adc    eax,0xcfe4354a
  414572:	or     edx,ebx
  414574:	icebp  
  414575:	sbb    DWORD PTR [ebx],ebp
  414577:	fcomi  st,st(1)
  414579:	xchg   BYTE PTR [ecx+0x63],dl
  41457c:	inc    edi
  41457d:	add    ecx,DWORD PTR [ebx+ebx*8]
  414580:	inc    ecx
  414581:	data16 clc 
  414583:	and    ah,0x1b
	...
  41458e:	add    BYTE PTR [eax],al
  414590:	daa    
  414591:	(bad)  
  414593:	inc    ecx
  414594:	mov    dh,0x96
  414596:	icebp  
  414597:	dec    esi
  414598:	jbe    0x414619
  41459a:	dec    edx
  41459b:	imul   esp,ecx,0x1143777f
  4145a1:	xlat   BYTE PTR ds:[ebx]
  4145a2:	cmp    eax,0xf1da5429
  4145a7:	cs mov dl,al
  4145aa:	mov    ds:0xb554cbe1,al
  4145af:	push   ds
  4145b0:	add    bh,dl
  4145b2:	icebp  
  4145b3:	pushf  
  4145b4:	(bad)  
  4145b5:	out    0x99,eax
  4145b7:	shr    DWORD PTR [ebx],1
  4145b9:	ficom  DWORD PTR [ecx-0x59]
  4145bc:	adc    eax,0x81e908c1
  4145c1:	add    eax,0xd7076ae1
  4145c6:	jmpw   0x8f80
  4145ca:	icebp  
  4145cb:	pop    esp
  4145cc:	shl    edi,cl
  4145ce:	xor    esp,DWORD PTR [ecx]
  4145d0:	cli    
  4145d1:	fld    DWORD PTR [ebx+0xc692f2c]
  4145d7:	inc    ecx
  4145d8:	popf   
  4145d9:	push   0xe676004b
  4145de:	pop    ebx
  4145df:	push   0xffffffa7
  4145e1:	xor    ecx,0x35
  4145e4:	sub    esi,eax
  4145e6:	dec    esp
  4145e7:	add    BYTE PTR [esi+0x29ff303b],cl
  4145ed:	xchg   esp,ecx
  4145ef:	je     0x4145c0
  4145f1:	adc    ebp,DWORD PTR [edx+0x0]
	...
  4145fc:	add    BYTE PTR [eax],al
  4145fe:	imul   bp,WORD PTR [edi+0x4ce8b568],0x0
  414606:	out    0x3c,al
  414608:	js     0x414612
  41460a:	pop    esi
  41460b:	cmp    eax,0x66b9ff6e
  414610:	ret    
  414611:	cmp    bh,BYTE PTR [ecx+0x3600693b]
  414617:	imul   ebp,DWORD PTR [edi+0x4ce8a568],0x0
  41461e:	push   cs
  41461f:	mov    eax,0x3af64163
  414624:	js     0x41462e
  414626:	sahf   
  414627:	outs   dx,BYTE PTR cs:[esi]
  414629:	(bad)  
  41462a:	mov    ecx,0xb9fc783b
  41462f:	mov    cl,0x9
  414631:	call   0x32c206
  414636:	lahf   
  414637:	inc    eax
  414638:	or     eax,0xe6072300
  41463d:	and    DWORD PTR [edx+0x4c57573a],0x7d
  414644:	push   ax
  414646:	leave  
  414647:	mov    cl,0x9
  414649:	call   0x32ba4c
  41464e:	das    
  41464f:	ret    0x8bf5
  414652:	arpl   WORD PTR [eax],dx
  414654:	dec    edx
  414655:	inc    ecx
  414656:	mov    dh,0xa
  414658:	xor    DWORD PTR [edi-0x22],edx
  41465b:	ret    0x7ff1
  41465e:	iret   
  41465f:	jno    0x414669
  414661:	je     0x414663
	...
  41466b:	add    BYTE PTR [edx],dl
  41466d:	aas    
  41466e:	jp     0x4146d9
  414670:	push   cs
  414671:	out    0xbe,eax
  414673:	out    0x72,eax
  414675:	or     DWORD PTR [eax],0xdd26c400
  41467b:	push   ds
  41467c:	add    DWORD PTR [edi+0x2260440f],edi
  414682:	mov    ecx,0x66e6cf67
  414687:	mov    ebp,0x40e252e7
  41468c:	iret   
  41468d:	xchg   esi,eax
  41468e:	push   ebp
  41468f:	je     0x414668
  414691:	out    dx,al
  414692:	retf   
  414693:	bound  edi,QWORD PTR [eax]
  414695:	pop    edx
  414696:	pusha  
  414697:	dec    ebp
  414698:	cmc    
  414699:	push   ecx
  41469a:	push   ebp
  41469b:	jmp    0xbbcf:0x3d88a0ce
  4146a2:	dec    edi
  4146a3:	inc    ebp
  4146a4:	sbb    esi,DWORD PTR [esi+0x48]
  4146a7:	mov    eax,0xfe553210
  4146ac:	std    
  4146ad:	pop    eax
  4146ae:	adc    BYTE PTR [edi],al
  4146b0:	jp     0x4146af
  4146b2:	push   ebp
  4146b3:	je     0x4146b0
  4146b5:	cdq    
  4146b6:	fild   DWORD PTR [edi]
  4146b8:	out    0xfc,eax
  4146ba:	sbb    eax,0xb409e8ff
  4146bf:	enter  0xeb0d,0xd
  4146c3:	push   ebp
  4146c4:	inc    esp
  4146c5:	mov    ecx,DWORD PTR [ecx-0x40e72c3d]
  4146cb:	imul   ecx,edi,0xfeb8fc
	...
  4146d9:	add    BYTE PTR [edx],bh
  4146db:	iret   
  4146dc:	gs dec ecx
  4146de:	add    dl,bl
  4146e0:	push   esi
  4146e1:	mov    BYTE PTR [edx],cl
  4146e3:	rol    DWORD PTR [edx-0x36e103cc],cl
  4146e9:	call   DWORD PTR [ebp+0x7f]
  4146ec:	sub    BYTE PTR [ebx-0x7c1cc0f0],dh
  4146f2:	sar    DWORD PTR [edi+0x4f],1
  4146f5:	shl    eax,0x27
  4146f8:	dec    esi
  4146f9:	lds    eax,FWORD PTR [eax-0x4d1d24cf]
  4146ff:	jg     0x4146e4
  414701:	push   cs
  414702:	(bad)  
  414703:	push   ebx
  414704:	fidiv  DWORD PTR [ecx+0x5b271470]
  41470a:	popa   
  41470b:	das    
  41470c:	sbb    eax,DWORD PTR [edi+ecx*8]
  41470f:	call   0x65583265
  414714:	and    al,0x4
  414716:	lahf   
  414717:	fcomp  DWORD PTR [eax]
  414719:	or     al,0x37
  41471b:	rol    BYTE PTR ds:0x93e7395b,0x1c
  414722:	xor    al,bl
  414724:	mov    es,WORD PTR [ecx+edx*4]
  414727:	jmp    DWORD PTR [ecx-0x5e2a65fd]
  41472d:	push   edi
  41472e:	fnstsw WORD PTR [edi-0x27eea554]
  414734:	pop    edx
  414735:	push   ebp
  414736:	cmp    dl,BYTE PTR [edi-0x27ba2f16]
  41473c:	mov    al,0x57
	...
  414746:	add    BYTE PTR [eax],al
  414748:	stc    
  414749:	push   ecx
  41474a:	sti    
  41474b:	imul   esp,DWORD PTR [eax+edx*4+0x39895a3a],0x2c
  414753:	inc    ebp
  414754:	int3   
  414755:	jg     0x414707
  414757:	mov    fs,esp
  414759:	sti    
  41475a:	daa    
  41475b:	push   edi
  41475c:	data16 jg 0x4146ec
  41475f:	mov    ch,0xc9
  414761:	dec    ebp
  414762:	jmp    0x4147cf
  414764:	xchg   edx,eax
  414765:	mov    cs,WORD PTR [edx]
  414767:	pop    edx
  414768:	inc    edi
  414769:	cmp    eax,0x6a8beaef
  41476e:	or     al,0xa8
  414770:	int3   
  414771:	(bad)  
  414772:	ja     0x414755
  414774:	xor    al,0x45
  414776:	in     al,dx
  414777:	out    0xf6,al
  414779:	aad    0x77
  41477b:	(bad)  
  41477d:	dec    ebx
  41477e:	add    al,0xc1
  414780:	and    al,0x8d
  414782:	icebp  
  414783:	into   
  414784:	adc    al,0xc1
  414786:	or     cl,ch
  414788:	sub    DWORD PTR [edx],ecx
  41478a:	loope  0x4147f6
  41478c:	movzx  ebx,WORD PTR [edx-0x4a]
  414790:	cwde   
  414791:	mov    esp,esp
  414793:	and    al,0xc5
  414795:	(bad)  
  414796:	icebp  
  414797:	repnz or al,0x4c
  41479a:	pop    es
  41479b:	aas    
  41479c:	add    al,0xc1
  41479e:	add    al,0xe9
  4147a0:	push   ecx
  4147a1:	cmp    al,0xfc
  4147a3:	cmp    DWORD PTR [esi-0x616effb5],esp
  4147a9:	xchg   esp,eax
  4147aa:	icebp  
  4147ab:	jle    0x4147ad
	...
  4147b5:	add    dl,al
  4147b7:	mov    edi,0x80db6d01
  4147bc:	or     al,0xe9
  4147be:	xchg   DWORD PTR [ebx-0x10],ecx
  4147c1:	push   ecx
  4147c2:	pop    ecx
  4147c3:	cwde   
  4147c4:	icebp  
  4147c5:	pop    esi
  4147c6:	inc    esp
  4147c7:	cmp    al,0xe0
  4147c9:	push   esi
  4147ca:	sbb    bl,bl
  4147cc:	icebp  
  4147cd:	aam    0x68
  4147cf:	aad    0x77
  4147d1:	inc    ecx
  4147d2:	imul   edx,DWORD PTR [esi+0x33],0x3e
  4147d6:	xchg   esi,eax
  4147d7:	or     DWORD PTR [eax+0x45],edi
  4147da:	je     0x414802
  4147dc:	or     eax,0x5867cce9
  4147e1:	xchg   edx,eax
  4147e2:	or     eax,0x301157d7
  4147e7:	pushf  
  4147e8:	or     al,0xe9
  4147ea:	fstp   TBYTE PTR [edi+0x1c35e477]
  4147f0:	or     eax,0x8582a600
  4147f5:	lock pop esi
  4147f7:	es addr16 inc ecx
  4147fa:	mov    dh,0x6a
  4147fc:	shl    DWORD PTR [ebx],1
  4147fe:	mov    dh,0x82
  414800:	or     eax,0xe9c61ff0
  414805:	push   0x4ce4d2
  41480a:	enter  0x7163,0x25
  41480e:	jbe    0x414792
  414810:	add    eax,0xe4d6bbc0
  414815:	and    BYTE PTR [esi-0x7e],0xc
  414819:	mov    al,BYTE PTR [eax]
	...
  414823:	add    BYTE PTR [esi-0x39000ec0],al
  414829:	or     eax,0x6a3e75f3
  41482e:	mov    ecx,0x5826623
  414833:	shr    dl,0xdb
  414836:	test   BYTE PTR [ebp+0x4a],al
  414839:	aaa    
  41483a:	js     0x414824
  41483c:	pop    esi
  41483d:	dec    edi
  41483e:	dec    ecx
  41483f:	push   DWORD PTR [ecx-0x5e1fb6f7]
  414845:	(bad)
  414848:	sbb    esp,DWORD PTR [edx-0x17]
  41484b:	jns    0x4148ac
  41484d:	aaa    
  41484e:	repnz or esp,esi
  414851:	(bad)  
  414852:	rcl    DWORD PTR ss:[ebx],1
  414855:	arpl   WORD PTR ss:[eax],ax
  414858:	mov    ds:0x9150ee15,eax
  41485d:	vpsubsb xmm0,xmm5,xmm3
  414861:	(bad)  
  414863:	(bad)  
  414864:	in     eax,dx
  414865:	inc    ecx
  414866:	jge    0x41488e
  414868:	push   cs
  414869:	or     DWORD PTR [edi+ebp*8],0x8783770
  414870:	mov    esi,0xcfff3912
  414875:	ins    DWORD PTR es:[edi],dx
  414876:	push   esp
  414877:	je     0x414830
  414879:	xchg   dl,al
  41487b:	pop    es
  41487c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41487d:	inc    esi
  41487e:	add    bh,bh
  414880:	mov    al,0xd6
  414882:	mov    edi,0x6d54a8e3
  414887:	inc    BYTE PTR [eax]
	...
  414891:	add    BYTE PTR [edx],bl
  414893:	fbld   TBYTE PTR [ebp+0x6c]
  414896:	loop   0x414875
  414898:	pop    ecx
  414899:	(bad)  
  41489a:	sbb    al,bh
  41489c:	pusha  
  41489d:	jge    0x414866
  41489f:	lods   eax,DWORD PTR ds:[esi]
  4148a0:	pop    ecx
  4148a1:	pop    ecx
  4148a2:	daa    
  4148a3:	pop    edi
  4148a4:	clc    
  4148a5:	jg     0x414860
  4148a7:	out    0xa,al
  4148a9:	test   DWORD PTR [eax],ecx
  4148ab:	push   ss
  4148ac:	pop    edx
  4148ad:	(bad)  
  4148ae:	imul   eax
  4148b0:	or     eax,0xdc2621ef
  4148b5:	pop    es
  4148b6:	addr16 aam 0x1c
  4148b9:	call   DWORD PTR [eax-0xa]
  4148bc:	(bad)  
  4148be:	dec    eax
  4148bf:	je     0x414925
  4148c1:	(bad)  
  4148c2:	mov    edx,0x23c65de
  4148c7:	(bad)  
  4148c8:	pop    ecx
  4148c9:	(bad)  
  4148ca:	mov    edx,0xe74d6102
  4148cf:	dec    ebp
  4148d0:	pop    ecx
  4148d1:	mov    WORD PTR [edx-0x651847aa],cs
  4148d7:	pushf  
  4148d8:	pop    ecx
  4148d9:	(bad)  
  4148da:	and    al,0xe7
  4148dc:	mov    bh,0xc8
  4148de:	or     eax,0x54550ddf
  4148e3:	xchg   ebx,eax
  4148e4:	(bad)  
  4148e5:	ret    
  4148e6:	repz dec ebx
  4148e8:	retf   
  4148e9:	sti    
  4148ea:	lahf   
  4148eb:	xchg   ebp,eax
  4148ec:	fisttp DWORD PTR [ebx]
  4148ee:	call   0x85294f06
  4148f3:	jp     0x4148fd
	...
  4148fd:	add    BYTE PTR [eax],al
  4148ff:	add    ah,al
  414901:	jg     0x414926
  414903:	pop    es
  414904:	dec    edx
  414905:	test   al,0xe4
  414907:	add    ecx,edi
  414909:	imul   esp,ebx,0xa468f0eb
  41490f:	add    edi,DWORD PTR [eax+0x3b56f74a]
  414915:	mov    BYTE PTR [ebx],bl
  414917:	pop    ds
  414918:	in     al,0xd4
  41491a:	cli    
  41491b:	mov    WORD PTR [ebx],cs
  41491d:	fmul   DWORD PTR [ebp+0x5e8b2703]
  414923:	lds    edx,FWORD PTR [eax-0x77f7a72b]
  414929:	dec    edx
  41492a:	jmp    0x414997
  41492c:	ficomp WORD PTR [eax+0x3a4756c2]
  414932:	scas   eax,DWORD PTR es:[edi]
  414933:	mov    BYTE PTR [ebx],cl
  414935:	fcom   QWORD PTR [ebx]
  414937:	in     al,dx
  414938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414939:	push   0x4a600424
  41493e:	iret   
  41493f:	push   esi
  414940:	jecxz  0x4148c9
  414942:	fwait
  414943:	pop    edx
  414944:	xchg   esi,eax
  414945:	aam    0x92
  414947:	mov    WORD PTR [ebx-0x48fbf231],ss
  41494d:	inc    eax
  41494e:	push   cs
  41494f:	lds    edi,FWORD PTR [eax]
  414951:	aad    0xf0
  414953:	pop    es
  414954:	xor    BYTE PTR [edx-0x5],cl
  414957:	imul   esi,DWORD PTR [edx],0xffffff99
  41495a:	jp     0x4149b2
  41495c:	push   edi
  41495d:	cmp    ch,BYTE PTR [edi-0x17]
  414960:	sbb    BYTE PTR [ebx+edi*4-0x16],bl
	...
  41496c:	add    BYTE PTR [eax],al
  41496e:	(bad)  
  41496f:	jg     0x4149c3
  414971:	rcl    ah,1
  414973:	aam    0xd0
  414975:	or     esi,edi
  414977:	lods   eax,DWORD PTR ds:[esi]
  414978:	sbb    eax,0xa105f957
  41497d:	imul   ecx,DWORD PTR [ebp+0x52],0x33
  414981:	add    ebx,eax
  414983:	sti    
  414984:	or     al,0x6a
  414986:	int3   
  414987:	jg     0x414995
  414989:	push   0xfffffff7
  41498b:	fisttp WORD PTR [ebx*4+0x577d4f7]
  414992:	and    DWORD PTR [esp+edi*8+0x1],ecx
  414996:	mov    DWORD PTR [ebx],edi
  414998:	icebp  
  414999:	push   cs
  41499a:	lds    edi,FWORD PTR [edi+0x63fb9778]
  4149a0:	call   0x48461638
  4149a5:	or     eax,0xf977d25c
  4149aa:	and    eax,0xfae66b7e
  4149af:	test   esp,ecx
  4149b1:	push   ebp
  4149b2:	inc    esp
  4149b3:	(bad)  
  4149b4:	outs   dx,DWORD PTR ds:[esi]
  4149b5:	ror    ebx,1
  4149b7:	dec    ebx
  4149b8:	pop    ebp
  4149b9:	push   0xffffffa0
  4149bb:	iret   
  4149bc:	or     al,0x3d
  4149be:	mov    dh,bh
  4149c0:	outs   dx,DWORD PTR ds:[esi]
  4149c1:	mov    ecx,0x41494bd3
  4149c6:	retf   
  4149c7:	jg     0x4149aa
  4149c9:	outs   dx,DWORD PTR ds:[esi]
  4149ca:	add    cl,BYTE PTR [esp+ebx*1-0x6f]
  4149ce:	pop    edi
  4149cf:	(bad)  
  4149d0:	icebp  
  4149d1:	sahf   
	...
  4149da:	add    BYTE PTR [eax],al
  4149dc:	mov    ds:0x1096f44b,al
  4149e1:	and    esp,0x2
  4149e4:	(bad)  
  4149e6:	icebp  
  4149e7:	xchg   BYTE PTR [eax],al
  4149e9:	iret   
  4149ea:	icebp  
  4149eb:	hlt    
  4149ec:	sbb    al,0xdb
  4149ee:	ins    BYTE PTR es:[edi],dx
  4149ef:	mov    ebp,0xf4f1d17b
  4149f4:	js     0x4149c7
  4149f6:	ja     0x414a51
  4149f8:	jp     0x414a45
  4149fa:	sbb    al,0x51
  4149fc:	jmp    0x9a983b8c
  414a01:	dec    ebx
  414a02:	loopne 0x414a52
  414a04:	or     BYTE PTR [ebx-0x7cdeff1c],al
  414a0a:	icebp  
  414a0b:	jmp    FWORD PTR [ecx+0x23ffe9c2]
  414a11:	iret   
  414a12:	jmp    0xf26d2c53
  414a17:	push   DWORD PTR [ebx]
  414a19:	aaa    
  414a1a:	jmp    0xf26ceb40
  414a1f:	jmp    DWORD PTR [ebx+0x42]
  414a22:	jmp    0xf26ceb40
  414a27:	push   DWORD PTR [ebx]
  414a29:	das    
  414a2a:	jmp    0xf26cab40
  414a2f:	jmp    DWORD PTR [ebx]
  414a31:	pop    ebx
  414a32:	jmp    0xf26cab40
  414a37:	push   ebx
  414a39:	arpl   cx,bp
  414a3b:	add    ecx,esp
  414a3d:	sub    al,0xf2
  414a3f:	inc    DWORD PTR [eax]
	...
  414a49:	add    BYTE PTR [ebx],ah
  414a4b:	cmp    cl,ch
  414a4d:	and    eax,0xc90c7bc5
  414a52:	and    al,0x7a
  414a54:	or     al,0x55
  414a56:	fstp   QWORD PTR [edx-0x74]
  414a59:	les    ecx,FWORD PTR [esi-0x4000dbd]
  414a5f:	adc    esi,esi
  414a61:	push   eax
  414a62:	sub    ecx,eax
  414a64:	add    eax,0xe483e3ff
  414a69:	unpckhps xmm7,XMMWORD PTR [esi+0xc]
  414a6d:	or     esp,DWORD PTR [esi+0x7b]
  414a70:	xchg   DWORD PTR [ebp-0x38f381da],esp
  414a76:	repz xor esi,ecx
  414a79:	push   DWORD PTR [esi]
  414a7b:	jle    0x414a46
  414a7d:	inc    ebp
  414a7e:	mov    ds:0x26000a2b,al
  414a83:	call   0xf937b479
  414a88:	mov    ah,ch
  414a8a:	iret   
  414a8b:	xor    DWORD PTR [eax-0x2],ebx
  414a8e:	lahf   
  414a8f:	mov    esi,0x948a8d0d
  414a94:	mov    ebp,0x408c528c
  414a99:	(bad)  
  414a9a:	loopne 0x414a93
  414a9c:	pop    eax
  414a9d:	je     0x414a76
  414a9f:	mov    al,ds:0x9de7fbc2
  414aa4:	sub    eax,DWORD PTR [eax]
  414aa6:	iret   
  414aa7:	int    0x4d
  414aa9:	jae    0x414a78
  414aab:	jge    0x414a7c
  414aad:	add    BYTE PTR [eax],0x0
	...
  414ab8:	jp     0x414a8d
  414aba:	inc    ebp
  414abb:	(bad)  
  414abc:	mov    al,0xe8
  414abe:	rol    DWORD PTR [eax+ebp*4],0x1c
  414ac2:	push   esi
  414ac3:	jmp    0xe2a0:0xe7725c8d
  414aca:	pop    ebp
  414acb:	dec    edi
  414acc:	inc    edx
  414acd:	fs push esp
  414acf:	test   BYTE PTR [eax-0x501474e],0xda
  414ad6:	pop    esi
  414ad7:	je     0x414aa0
  414ad9:	mov    esi,0xba70388d
  414ade:	icebp  
  414adf:	mov    edi,0x8470d5e3
  414ae4:	pop    edi
  414ae5:	adc    bl,BYTE PTR [esi-0x2]
  414ae8:	out    0x71,eax
  414aea:	rol    DWORD PTR [eax-0x31],1
  414aed:	sbb    DWORD PTR [edi+ebp*8-0x18a20dc0],edx
  414af4:	push   ds
  414af5:	lds    ecx,FWORD PTR ds:0xd526c400
  414afb:	or     eax,0xf6589430
  414b00:	sub    BYTE PTR [edx+0x5d],dl
  414b03:	je     0x414ac4
  414b05:	(bad)  
  414b06:	xor    al,0xfb
  414b08:	sbb    BYTE PTR [edx+0x5d],ah
  414b0b:	mov    ah,0x1f
  414b0d:	adc    BYTE PTR [edx+0x53],0x9
  414b11:	call   0xd14164b9
  414b16:	pop    edx
  414b17:	leave  
  414b18:	add    bh,ah
  414b1a:	int    0x52
	...
  414b24:	add    BYTE PTR [eax],al
  414b26:	icebp  
  414b27:	ror    BYTE PTR [edx-0x27],1
  414b2a:	in     al,0xe7
  414b2c:	(bad)  
  414b2d:	and    eax,0x462c7fcf
  414b32:	les    edi,FWORD PTR [edi-0x68]
  414b35:	jle    0x414b1b
  414b37:	cld    
  414b38:	pop    ds
  414b39:	push   eax
  414b3a:	sbb    BYTE PTR ss:[ebp-0x14b53e4a],0x5b
  414b42:	push   ds
  414b43:	lea    eax,[edx]
  414b45:	push   ebx
  414b46:	inc    edi
  414b47:	cmp    al,BYTE PTR [edi]
  414b49:	push   ebx
  414b4a:	and    ecx,DWORD PTR [eax+0x3f36309b]
  414b50:	jecxz  0x414ba4
  414b52:	jecxz  0x414b14
  414b54:	stos   DWORD PTR es:[edi],eax
  414b55:	les    edx,FWORD PTR [eax-0x76af5e28]
  414b5b:	rcl    dl,1
  414b5d:	fmul   st,st(0)
  414b5f:	addr16 mov eax,0x4b800fdd
  414b65:	push   es
  414b66:	iret   
  414b67:	jg     0x414bcc
  414b69:	pop    ebx
  414b6a:	sbb    al,0xd2
  414b6c:	mov    dl,0x52
  414b6e:	popa   
  414b6f:	dec    edx
  414b70:	jmp    0x414b4d
  414b72:	int3   
  414b73:	fs and al,0x4
  414b76:	push   eax
  414b77:	mov    bh,BYTE PTR [edx-0x64807045]
  414b7d:	pop    ebp
  414b7e:	inc    edx
  414b7f:	rcr    BYTE PTR [edx+0xb87c352],1
  414b85:	or     BYTE PTR [esi+edi*1+0xdbe3],ah
	...
  414b94:	into   
  414b95:	jg     0x414b7a
  414b97:	sub    DWORD PTR [eax],0xffffffb7
  414b9a:	or     al,0x77
  414b9c:	jge    0x414b6f
  414b9e:	icebp  
  414b9f:	hlt    
  414ba0:	adc    cl,0x77
  414ba3:	icebp  
  414ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ba5:	nop
  414ba6:	cmp    eax,0xcec79d5e
  414bab:	in     eax,dx
  414bac:	int3   
  414bad:	sub    al,BYTE PTR [ebp-0xf43b6c3]
  414bb3:	ror    esp,cl
  414bb5:	gs pop eax
  414bb7:	ds pop es
  414bb9:	js     0x414b9f
  414bbb:	dec    ebp
  414bbc:	ret    0xf1d0
  414bbf:	pusha  
  414bc0:	pop    es
  414bc1:	aam    0x64
  414bc3:	mov    DWORD PTR [ecx-0x58e1f3c0],ebp
  414bc9:	xchg   esp,esp
  414bcb:	(bad)  
  414bcc:	call   0x97503d9e
  414bd1:	retf   
  414bd2:	icebp  
  414bd3:	jl     0x414b79
  414bd5:	out    0x1,eax
  414bd7:	mov    edx,0x2bc3cdfd
  414bdc:	sar    BYTE PTR [edi+0x57],1
  414bdf:	(bad)  
  414be0:	lock add ecx,ecx
  414be3:	in     eax,0x45
  414be5:	ss jmpw 0x808c
  414bea:	icebp  
  414beb:	pop    esp
  414bec:	jnp    0x414bd5
  414bee:	mov    ebx,0x83ce1e1b
  414bf3:	sub    al,0xff
  414bf5:	stc    
  414bf6:	aaa    
  414bf7:	sbb    al,BYTE PTR [eax]
	...
  414c01:	add    BYTE PTR [ebx],ah
  414c03:	inc    eax
  414c04:	or     al,0x62
  414c06:	enter  0x4436,0x28
  414c0a:	retf   
  414c0b:	push   DWORD PTR [ecx]
  414c0d:	jmp    0x11a59032
  414c12:	and    al,BYTE PTR [eax+0xc]
  414c15:	ds fwait
  414c17:	mov    esp,0x7acce92b
  414c1c:	int3   
  414c1d:	add    BYTE PTR [edx],ch
  414c1f:	rcl    BYTE PTR [edi-0x18],1
  414c22:	adc    al,0x70
  414c24:	icebp  
  414c25:	push   DWORD PTR [esi-0x6e000e55]
  414c2b:	icebp  
  414c2c:	imul   ebp,DWORD PTR [edi+0x1d],0xa14ff1c2
  414c33:	mov    dh,0x9
  414c35:	call   0x345e0a
  414c3a:	mov    gs,WORD PTR [eax+0x37]
  414c3d:	call   DWORD PTR [ecx+0x76460c2c]
  414c43:	jno    0x414c51
  414c45:	jne    0x414be3
  414c47:	mov    ecx,0xfaa633f5
  414c4c:	repnz push ecx
  414c4f:	xor    bl,bh
  414c51:	scas   al,BYTE PTR es:[edi]
  414c52:	scas   al,BYTE PTR es:[edi]
  414c53:	ja     0x414ccc
  414c55:	mov    ebx,0xfff5b6e1
  414c5a:	pop    ebx
  414c5b:	retf   0x93e9
  414c5e:	fs das 
  414c60:	repnz pop edi
  414c62:	inc    eax
  414c63:	mov    ebx,ecx
  414c65:	add    al,0x0
	...
  414c6f:	add    BYTE PTR [esi+0x25ec8715],ah
  414c75:	cmp    cl,bh
  414c77:	xor    DWORD PTR [ebx+0x764146fe],0xffffff82
  414c7e:	ja     0x414c84
  414c80:	das    
  414c81:	inc    esp
  414c82:	or     DWORD PTR [eax],eax
  414c84:	push   cs
  414c85:	xchg   DWORD PTR [ebx],ecx
  414c87:	add    BYTE PTR [esi+0x2a],dh
  414c8a:	add    al,0x35
  414c8c:	and    DWORD PTR [edi],ebp
  414c8e:	test   BYTE PTR [ebp+0x22],al
  414c91:	aaa    
  414c92:	dec    eax
  414c93:	clc    
  414c94:	push   0xffffff81
  414c96:	or     al,0x0
  414c98:	ret    
  414c99:	(bad)  
  414c9c:	popa   
  414c9d:	mov    ch,0xf5
  414c9f:	dec    edi
  414ca1:	imul   ecx,DWORD PTR [edi+edi*8],0xffffffba
  414ca5:	lods   al,BYTE PTR ds:[esi]
  414ca6:	pop    esp
  414ca7:	adc    al,0x6a
  414ca9:	xchg   ecx,eax
  414caa:	int    0xff
  414cac:	and    ebx,edx
  414cae:	inc    ecx
  414caf:	out    0x6c,eax
  414cb1:	mov    ch,0xd
  414cb3:	add    BYTE PTR [eax+edx*2+0x8],cl
  414cb7:	jbe    0x414c9b
  414cb9:	mov    al,0xd
  414cbb:	add    al,dh
  414cbd:	in     eax,dx
  414cbe:	aad    0x7a
  414cc0:	fs pop ss
  414cc2:	push   cs
  414cc3:	(bad)  
  414cc4:	jp     0x414d02
  414cc6:	pop    esp
  414cc7:	je     0x414ca0
  414cc9:	xor    BYTE PTR [edx+0x5c8ce05c],ch
  414ccf:	je     0x414cac
  414cd1:	aas    
  414cd2:	nop
  414cd3:	xor    eax,DWORD PTR [eax]
	...
  414cdd:	add    al,dl
  414cdf:	pushf  
  414ce0:	ss rcl edi,0xd6
  414ce4:	mov    edx,0x495ab38a
  414ce9:	sti    
  414cea:	and    eax,0xb055cfd7
  414cef:	hlt    
  414cf0:	cmc    
  414cf1:	out    0x9a,eax
  414cf3:	or     BYTE PTR [ebp-0x2],bl
  414cf6:	push   esi
  414cf7:	and    al,0x42
  414cf9:	addr16 dec edi
  414cfb:	add    cl,bh
  414cfd:	call   DWORD PTR [ecx+0x1e7f554]
  414d03:	out    0x41,al
  414d05:	inc    BYTE PTR [eax+0x2fe5c34]
  414d0b:	fist   WORD PTR [ebp-0x9]
  414d0e:	mov    esi,0x8dc841bd
  414d13:	fisttp DWORD PTR ds:0x8dbb5455
  414d19:	ret    
  414d1a:	pop    ebx
  414d1b:	inc    ecx
  414d1c:	or     BYTE PTR [edx-0x8],ch
  414d1f:	sbb    eax,0x803707d4
  414d24:	xchg   DWORD PTR ds:0xc97ccd40,edx
  414d2a:	xor    al,0x58
  414d2c:	jecxz  0x414d31
  414d2e:	and    BYTE PTR [esi],cl
  414d30:	or     al,0xa7
  414d32:	mov    ch,0x3e
  414d34:	jecxz  0x414d11
  414d36:	pop    esi
  414d37:	pop    ecx
  414d38:	and    al,0x4
  414d3a:	sbb    BYTE PTR [ebx-0x15],dl
  414d3d:	pop    ebx
  414d3e:	dec    ecx
  414d3f:	sub    esp,DWORD PTR [edx+0x4f]
	...
  414d4a:	add    BYTE PTR [eax],al
  414d4c:	or     DWORD PTR [ebx+0x67],edx
  414d4f:	dec    edi
  414d50:	jnp    0x414dc9
  414d52:	pop    ebx
  414d53:	xchg   ecx,eax
  414d54:	mov    edi,0xe3d5acc
  414d59:	test   bl,ah
  414d5b:	mov    eax,0x4866dc55
  414d60:	cld    
  414d61:	xor    eax,0x7b634e9a
  414d66:	dec    ebx
  414d67:	cld    
  414d68:	xchg   edi,eax
  414d69:	int3   
  414d6a:	and    bh,bl
  414d6c:	mov    BYTE PTR [edx-0x1f],dl
  414d6f:	scas   al,BYTE PTR es:[edi]
  414d70:	and    dh,BYTE PTR [edi-0x44703db]
  414d76:	mov    al,ds:0x98cd0053
  414d7b:	push   DWORD PTR [eax-0x5eb132fa]
  414d81:	js     0x414da6
  414d83:	dec    DWORD PTR [eax+ebp*1-0x1c]
  414d87:	add    ecx,edi
  414d89:	int3   
  414d8a:	js     0x414ddb
  414d8c:	pop    ecx
  414d8d:	inc    edx
  414d8e:	(bad)  
  414d8f:	xor    al,0xf3
  414d91:	stos   DWORD PTR es:[edi],eax
  414d92:	rcr    al,cl
  414d94:	xchg   esp,eax
  414d95:	int3   
  414d96:	push   eax
  414d97:	dec    esp
  414d98:	push   0x694f26ad
  414d9d:	js     0x414d42
  414d9f:	xlat   BYTE PTR ds:[ebx]
  414da0:	leave  
  414da1:	imul   BYTE PTR [eax]
  414da3:	pusha  
  414da4:	inc    ebp
  414da5:	iret   
  414da6:	or     al,0xc2
  414da8:	pusha  
  414da9:	int    0x77
  414dab:	lods   eax,DWORD PTR ds:[esi]
  414dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dad:	retf   
  414dae:	cmp    eax,0xa6
  414db3:	add    BYTE PTR [eax],al
  414db5:	add    BYTE PTR [eax],al
  414db7:	add    BYTE PTR [eax],al
  414db9:	add    BYTE PTR [ecx-0x7672b809],dl
  414dbf:	push   ebx
  414dc0:	lock xchg esi,eax
  414dc2:	pop    ss
  414dc3:	fdiv   st,st(1)
  414dc5:	adc    al,0x9b
  414dc7:	in     al,0x2d
  414dc9:	mov    ebp,0xf485cd91
  414dce:	js     0x414da7
  414dd0:	in     al,dx
  414dd1:	jmp    0x8af2cda2
  414dd6:	and    eax,0x3abe0c3f
  414ddb:	in     al,0x49
  414ddd:	or     ebx,edx
  414ddf:	jg     0x414de6
  414de1:	sub    DWORD PTR [eax],ebx
  414de3:	jle    0x414dca
  414de5:	cli    
  414de6:	cwde   
  414de7:	xchg   ecx,eax
  414de8:	int3   
  414de9:	adc    BYTE PTR [ecx+0x7e3ef1cd],0x1a
  414df0:	xor    eax,0xe3e2f7ee
  414df5:	and    esp,ecx
  414df7:	jg     0x414e05
  414df9:	jb     0x414e17
  414dfb:	arpl   dx,dx
  414dfd:	xchg   edx,eax
  414dfe:	xchg   ebx,eax
  414dff:	retf   
  414e00:	push   edi
  414e01:	add    DWORD PTR [ecx-0x5a16f395],esi
  414e07:	or     edi,DWORD PTR [eax-0x14]
  414e0a:	add    edx,DWORD PTR [ecx]
  414e0c:	or     eax,0x853fcce9
  414e11:	stc    
  414e12:	adc    al,0x54
  414e14:	in     al,0x81
  414e16:	in     al,dx
  414e17:	push   ebp
  414e18:	dec    ebx
  414e19:	jmp    0x94b3158
	...
  414e26:	add    BYTE PTR [eax],al
  414e28:	sar    DWORD PTR [edi+0x5],cl
  414e2b:	test   eax,0x71e38498
  414e30:	sar    DWORD PTR [edi+0xc],cl
  414e33:	add    ah,bl
  414e35:	rol    edi,cl
  414e37:	add    BYTE PTR [esi+0xf],ah
  414e3a:	pop    esp
  414e3b:	call   DWORD PTR [ebx+0x183fe92b]
  414e41:	jg     0x414e4f
  414e43:	or     esi,DWORD PTR [esi-0x58]
  414e46:	jge    0x414dd1
  414e48:	repz push edi
  414e4a:	bnd jne 0x414e9b
  414e4d:	sub    al,0xf
  414e4f:	inc    ebx
  414e50:	pop    ecx
  414e51:	cmp    eax,0x3d564584
  414e56:	js     0x414e3c
  414e58:	cdq    
  414e59:	mov    dl,0xd1
  414e5b:	call   0x341186
  414e60:	in     eax,dx
  414e61:	ds jge 0x414eb3
  414e64:	(bad)  
  414e65:	stos   BYTE PTR es:[edi],al
  414e66:	in     eax,dx
  414e67:	jmp    ebx
  414e69:	xchg   ecx,eax
  414e6a:	inc    cx
  414e6c:	out    0x4b,al
  414e6e:	dec    eax
  414e6f:	fcomp  DWORD PTR [ecx+0x376bd672]
  414e75:	jg     0x414df8
  414e77:	inc    ebp
  414e78:	ret    0x484a
  414e7b:	aam    0x36
  414e7d:	dec    edx
  414e7e:	dec    eax
  414e7f:	in     al,0x66
  414e81:	cmp    edi,DWORD PTR [eax-0x20]
  414e84:	fisub  WORD PTR [ebx]
  414e86:	push   esi
  414e87:	(bad)  
  414e88:	fxch   st(0)
  414e8a:	mov    cl,0x74
	...
  414e94:	add    BYTE PTR [eax],al
  414e96:	and    BYTE PTR [esi-0x356fff4],0xf2
  414e9d:	jne    0x414e3d
  414e9f:	es into 
  414ea1:	das    
  414ea2:	cdq    
  414ea3:	cmp    esi,edx
  414ea5:	jne    0x414e75
  414ea7:	cmp    al,0x78
  414ea9:	or     dh,cl
  414eab:	aad    0x21
  414ead:	jmp    FWORD PTR [ecx+0x3b]
  414eb0:	js     0x414e96
  414eb2:	cdq    
  414eb3:	mov    cl,0xd1
  414eb5:	dec    edi
  414eb7:	sub    esi,eax
  414eb9:	out    0x6f,eax
  414ebb:	leave  
  414ebc:	inc    eax
  414ebd:	(bad)  
  414ebe:	pusha  
  414ebf:	mov    ebp,DWORD PTR [eax-0x19]
  414ec2:	pop    esi
  414ec3:	mov    BYTE PTR [eax-0x2],0xf5
  414ec7:	jo     0x414f39
  414ec9:	paddq  mm2,QWORD PTR [edx]
  414ecc:	fimul  DWORD PTR [eax]
  414ece:	dec    edi
  414ecf:	loop   0x414ede
  414ed1:	rsqrtps xmm0,xmm5
  414ed4:	inc    eax
  414ed5:	(bad)  
  414ed6:	xor    BYTE PTR [eax+0x3a38000e],al
  414edc:	inc    eax
  414edd:	je     0x414eb6
  414edf:	lock mov DWORD PTR [esi],ebp
  414ee2:	sbb    BYTE PTR [ecx+0x40],cl
  414ee5:	je     0x414efa
  414ee7:	push   ecx
  414ee8:	(bad)  
  414eea:	or     bl,dl
  414eec:	cmc    
  414eed:	out    0x33,eax
  414eef:	jno    0x414f30
  414ef1:	(bad)  
  414ef2:	clc    
  414ef3:	mov    dl,0x51
  414ef5:	out    0x32,eax
  414ef7:	data16 aas 
  414ef9:	inc    BYTE PTR [eax]
	...
  414f03:	add    BYTE PTR [edx+0x23],bl
  414f06:	pop    esi
  414f07:	dec    edi
  414f08:	div    DWORD PTR [ebx]
  414f0a:	add    eax,0xd2cd8ff
  414f0f:	pop    edi
  414f10:	jno    0x414eb1
  414f12:	dec    ebx
  414f13:	pop    es
  414f14:	iret   
  414f15:	repz je 0x414f03
  414f18:	shr    ah,0xf1
  414f1b:	inc    BYTE PTR [edx-0x31]
  414f1e:	push   ebp
  414f1f:	bound  esi,QWORD PTR [ecx-0x7237bf8e]
  414f25:	stos   DWORD PTR es:[edi],eax
  414f26:	or     eax,0x40735455
  414f2b:	je     0x414ef8
  414f2d:	outs   dx,BYTE PTR ds:[esi]
  414f2e:	push   0xf9d29035
  414f33:	mov    edi,0x7440b603
  414f38:	fistp  QWORD PTR [edi+0x33]
  414f3b:	pop    esp
  414f3c:	add    edx,DWORD PTR [edx+0x58004bd2]
  414f42:	iret   
  414f43:	popa   
  414f44:	test   al,0x7f
  414f46:	ret    0xb8d1
  414f49:	enter  0xf030,0x8
  414f4d:	leave  
  414f4e:	cmp    ah,bh
  414f50:	push   0x494b1d14
  414f55:	fmul   DWORD PTR [ebx+0x16]
  414f58:	inc    eax
  414f59:	leave  
  414f5a:	mov    esp,0x387fdc46
  414f5f:	jg     0x414f85
  414f61:	pop    eax
  414f62:	jecxz  0x414f67
  414f64:	cmp    BYTE PTR [edx],cl
  414f66:	or     al,0x42
	...
  414f70:	add    BYTE PTR [eax],al
  414f72:	mov    ch,0x3e
  414f74:	jecxz  0x414fc0
  414f76:	mov    ds:0x11ee1d7b,eax
  414f7b:	push   ebx
  414f7c:	jmp    0x414fd9
  414f7e:	cmp    cl,cl
  414f80:	bound  ecx,QWORD PTR [ebx+0x68]
  414f83:	jg     0x414f68
  414f85:	pop    edx
  414f86:	cmp    bl,BYTE PTR [eax+0x29]
  414f89:	fisttp WORD PTR [edi-0x2b2ea581]
  414f8f:	push   ebp
  414f90:	fisttp WORD PTR [edx+0x5b]
  414f93:	ja     0x414ff0
  414f95:	ins    DWORD PTR es:[edi],dx
  414f96:	fxch   st(0)
  414f98:	xor    bl,ah
  414f9a:	ror    al,1
  414f9c:	dec    edx
  414f9d:	mov    dh,BYTE PTR [eax]
  414f9f:	ret    0xc4ce
  414fa2:	ror    cl,0x90
  414fa5:	mul    DWORD PTR [esi]
  414fa7:	popf   
  414fa8:	adc    dl,cl
  414faa:	enter  0x65d7,0x4b
  414fae:	test   eax,0xc8462cc8
  414fb3:	jg     0x414f45
  414fb5:	jle    0x414f5b
  414fb7:	push   edi
  414fb8:	sub    eax,0xc800fdf
  414fbd:	add    ebx,0x15e94b55
  414fc3:	push   esp
  414fc4:	sbb    al,0xe6
  414fc6:	fistp  QWORD PTR [eax-0x2834d7bc]
  414fcc:	pop    ss
  414fcd:	sbb    al,0x14
  414fcf:	retf   0xa905
  414fd2:	nop
  414fd3:	lods   eax,DWORD PTR gs:[esi]
  414fd5:	lahf   
	...
  414fde:	add    BYTE PTR [eax],al
  414fe0:	jns    0x415021
  414fe2:	or     al,0xbe
  414fe4:	jg     0x41505a
  414fe6:	icebp  
  414fe7:	cmp    al,0x4b
  414fe9:	loopne 0x414f72
  414feb:	scas   al,BYTE PTR es:[edi]
  414fec:	xchg   ebp,eax
  414fed:	leave  
  414fee:	icebp  
  414fef:	fdiv   st(6),st
  414ff1:	push   ebp
  414ff2:	dec    ebx
  414ff3:	jmp    0x967cfa8c
  414ff8:	xchg   ebp,eax
  414ff9:	mov    bh,0xce
  414ffb:	(bad)  
  414ffd:	xor    al,BYTE PTR [ebp-0xf43ae6b]
  415003:	adc    ecx,ebx
  415005:	push   ebp
  415006:	push   ebx
  415007:	jbe    0x415028
  415009:	and    ah,0xe9
  41500c:	in     eax,0xc8
  41500e:	icebp  
  41500f:	jo     0x415020
  415011:	les    esp,FWORD PTR [esp+eiz*4+0x18]
  415015:	aas    
  415016:	or     al,0xc1
  415018:	les    ebx,FWORD PTR [ebx+0x4b]
  41501b:	jmp    0x5145a3b5
  415020:	imul   ecx,ecx,0x53853ef1
  415026:	lock ss lahf 
  415029:	jg     0x41500f
  41502b:	pop    es
  41502c:	in     al,0xc6
  41502e:	icebp  
  41502f:	xor    BYTE PTR [edx],dl
  415031:	or     DWORD PTR [esp+esi*4],0x31
  415035:	fisttp DWORD PTR [ebp+0xc59102d]
  41503b:	xor    DWORD PTR [esi+eax*8+0x77],0x0
  415040:	sahf   
  415041:	sub    eax,ebx
  415043:	add    BYTE PTR cs:[eax],al
	...
  41504e:	xchg   ecx,eax
  41504f:	cmp    DWORD PTR [ebp+eax*2+0x6c8baa82],eax
  415056:	aaa    
  415057:	and    DWORD PTR [edx+ebp*2+0x22],0xffffffc3
  41505c:	icebp  
  41505d:	(bad)  
  41505e:	sbb    eax,esp
  415060:	jmp    0xf27ad1ca
  415065:	(bad)  
  415066:	sti    
  415067:	aaa    
  415068:	bnd jne 0x4150c9
  41506b:	sub    esp,ecx
  41506d:	adc    DWORD PTR cs:[ecx],edi
  415070:	(bad)
  415074:	push   edi
  415075:	mov    eax,DWORD PTR [edx-0x23033203]
  41507b:	jnp    0x4150e3
  41507d:	pop    edx
  41507e:	push   ecx
  41507f:	mov    bh,0x9
  415081:	call   0x32ba30
  415086:	scas   eax,DWORD PTR es:[edi]
  415087:	push   es
  415088:	imul   BYTE PTR [edx+0x26]
  41508b:	stos   DWORD PTR es:[edi],eax
  41508c:	mov    dl,0x6c
  41508e:	out    0x7b,eax
  415090:	mov    fs:0xfef1c2d2,al
  415096:	cmp    ecx,DWORD PTR [eax+0x2ae64149]
  41509c:	push   ebx
  41509d:	xor    al,0x91
  41509f:	cmp    BYTE PTR [esi],al
  4150a1:	ror    BYTE PTR [edx],0xda
  4150a4:	inc    ecx
  4150a5:	push   0xbee182f6
  4150aa:	dec    BYTE PTR [ebp+eiz*2-0xced19bf]
  4150b1:	jne    0x4150b3
	...
  4150bb:	add    BYTE PTR [esi-0xea5ead6],ch
  4150c1:	cmp    cl,ch
  4150c3:	and    eax,0x6af23797
  4150c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c9:	stos   BYTE PTR es:[edi],al
  4150ca:	mov    dl,0x6c
  4150cc:	iret   
  4150cd:	pop    ss
  4150ce:	push   cs
  4150cf:	push   0xffce446d
  4150d4:	xor    bl,bl
  4150d6:	or     eax,0x2b704f00
  4150db:	xor    al,0x88
  4150dd:	int    0xf0
  4150df:	mov    edi,0x67bdaffb
  4150e4:	iret   
  4150e5:	fcom   DWORD PTR [ebp+edi*4-0x19]
  4150e9:	or     bl,dl
  4150eb:	inc    eax
  4150ec:	iret   
  4150ed:	mov    BYTE PTR [ebx+0x74],al
  4150f0:	xlat   BYTE PTR ds:[ebx]
  4150f1:	rcl    BYTE PTR [esi+0x58],0x58
  4150f5:	mov    ebp,0x59ff155
  4150fa:	inc    ebp
  4150fb:	imul   ecx,edi,0x8e6b4b40
  415101:	fcom   st(5)
  415103:	mov    eax,ds:0xff0897ab
  415108:	cli    
  415109:	adc    eax,0xcf40b6
  41510e:	pop    ecx
  41510f:	xor    ah,BYTE PTR [eax]
  415111:	cmc    
  415112:	lock mov edi,0x67bddfa3
  415118:	iret   
  415119:	fcom   DWORD PTR [ebp+edi*4+0x77]
  41511d:	jmp    0x0:0x40d9
  415124:	add    BYTE PTR [eax],al
  415126:	add    BYTE PTR [eax],al
  415128:	add    BYTE PTR [eax],al
  41512a:	iret   
  41512b:	push   0x30c77443
  415130:	sbb    BYTE PTR [eax-0x10],0x24
  415134:	push   ebp
  415135:	mov    ebp,0x69442d9f
  41513a:	iret   
  41513b:	ror    BYTE PTR [ebx+ebp*2-0x72],0xd8
  415140:	aad    0xa1
  415142:	arpl   WORD PTR [edi],dx
  415144:	push   cs
  415145:	push   0x800dd6cd
  41514a:	mov    bh,0x97
  41514c:	sbb    bh,bh
  41514e:	mov    eax,0x3c43fe80
  415153:	addr16 mov bl,0xdb
  415156:	test   al,0xc5
  415158:	or     cl,BYTE PTR [ecx-0x3d904dd8]
  41515e:	cwde   
  41515f:	xor    eax,0xd7c8ce0a
  415164:	gs stos BYTE PTR es:[edi],al
  415166:	mov    ebp,eax
  415168:	or     edi,DWORD PTR [eax+esi*4-0x3c]
  41516c:	loop   0x4151b5
  41516e:	add    eax,esp
  415170:	jmp    0x6819:0xd1d7c8d1
  415177:	lds    ebp,FWORD PTR [edx+eax*2+0x7b387fcc]
  41517e:	call   FWORD PTR fs:[edi-0x4d3aa6a4]
  415185:	(bad)  
  415187:	jle    0x41516c
  415189:	add    esi,DWORD PTR [edi]
  41518b:	add    ah,dh
  41518d:	inc    esi
	...
  415196:	add    BYTE PTR [eax],al
  415198:	cmp    edi,esi
  41519a:	pusha  
  41519b:	pop    esp
  41519c:	cmp    ebp,eax
  41519e:	xchg   edx,eax
  41519f:	jns    0x415134
  4151a1:	ret    
  4151a2:	xor    eax,DWORD PTR [edi-0x65]
  4151a5:	jae    0x415129
  4151a7:	rcl    eax,1
  4151a9:	xlat   BYTE PTR ds:[ebx]
  4151aa:	popa   
  4151ab:	call   0x444016c0
  4151b0:	fsqrt  
  4151b2:	out    dx,al
  4151b3:	add    al,0xcf
  4151b5:	jg     0x415161
  4151b7:	rol    DWORD PTR [eax],0x80
  4151ba:	jecxz  0x4151bf
  4151bc:	iret   
  4151bd:	mov    esp,0x7ce94fa8
  4151c2:	jecxz  0x4151c7
  4151c4:	jne    0x415245
  4151c6:	int    0x3
  4151c8:	gs jg  0x4151a8
  4151cb:	add    eax,DWORD PTR [edx+0x3b]
  4151ce:	aaa    
  4151cf:	mov    ah,0x5b
  4151d1:	cli    
  4151d2:	or     al,0x3d
  4151d4:	adc    dh,al
  4151d6:	icebp  
  4151d7:	cdq    
  4151d8:	adc    DWORD PTR [esp+esi*8+0x26],ecx
  4151dc:	sahf   
  4151dd:	enter  0xc1e4,0xb0
  4151e1:	(bad)  
  4151e2:	icebp  
  4151e3:	loop   0x4151f1
  4151e5:	push   ecx
  4151e6:	pop    es
  4151e7:	add    cl,ah
  4151e9:	(bad)  
  4151ea:	icebp  
  4151eb:	jmp    0xa8866b64
  4151f0:	int3   
  4151f1:	les    esi,FWORD PTR [edi-0x1b]
  4151f4:	and    al,0x18
  4151f6:	ds out dx,al
  4151f8:	adc    DWORD PTR ds:0xb985,esi
	...
  415206:	idiv   ebx
  415208:	clc    
  415209:	(bad)  
  41520a:	adc    esi,eax
  41520c:	pop    esp
  41520d:	cmp    eax,DWORD PTR [ebx]
  41520f:	call   0xf8532051
  415214:	xchg   DWORD PTR [ecx-0x2e0e39ff],edi
  41521a:	mov    eax,ds:0x26b6f195
  41521f:	les    ebp,FWORD PTR [ecx-0x4f]
  415222:	and    BYTE PTR [edi],bh
  415224:	or     al,0xa6
  415226:	pop    edi
  415227:	aam    0xf9
  415229:	sahf   
  41522a:	xchg   ecx,eax
  41522b:	lds    esi,FWORD PTR [edi-0x1f]
  41522e:	test   dh,cl
  415230:	mov    ss,WORD PTR ds:[ecx-0x7e6a7809]
  415237:	vpunpckhdq xmm2,xmm1,XMMWORD PTR [edi-0x28]
  41523c:	stc    
  41523d:	jbe    0x4151c8
  41523f:	les    edi,FWORD PTR [ebp+0x1a]
  415242:	sbb    eax,ebx
  415244:	pusha  
  415245:	test   al,0xcc
  415247:	les    esi,FWORD PTR [edi-0xe3a66b3]
  41524d:	inc    ecx
  41524e:	ss xchg ecx,eax
  415250:	icebp  
  415251:	dec    esi
  415252:	sbb    al,0x34
  415254:	fs add dl,ah
  415257:	jp     0x415265
  415259:	add    BYTE PTR [ecx],cl
  41525b:	lock jmp 0x697b4c58
  415261:	lods   eax,DWORD PTR ds:[esi]
  415262:	outs   dx,BYTE PTR ds:[esi]
  415263:	mov    esp,0xa8b367f1
  415268:	dec    esp
	...
  415271:	add    BYTE PTR [eax],al
  415273:	add    BYTE PTR [esi],bh
  415275:	enter  0x4160,0xb6
  415279:	daa    
  41527a:	dec    ebx
  41527b:	sbb    esp,DWORD PTR [esi-0x5a077281]
  415281:	mov    ch,0x19
  415283:	push   0xbee17f76
  415288:	dec    esi
  415289:	frstor [eax+0x41]
  41528c:	data16 cmp bh,BYTE PTR [eax-0xdc26e18]
  415293:	inc    DWORD PTR [ebx]
  415295:	int3   
  415296:	jmp    0xf27df10a
  41529b:	call   0x32bf9e
  4152a0:	mov    DWORD PTR [ebx+0x2bc3ff01],esi
  4152a6:	cli    
  4152a7:	(bad)  
  4152a8:	jns    0x4152e7
  4152aa:	js     0x4152b4
  4152ac:	push   cs
  4152ad:	sub    edi,ebp
  4152af:	jmp    FWORD PTR [ecx+0x3d]
  4152b2:	mov    eax,0xf23d41f0
  4152b7:	call   0x32bf96
  4152bc:	dec    ecx
  4152bd:	repz in eax,0xf7
  4152c0:	dec    ecx
  4152c1:	cmp    eax,0x3c1951e9
  4152c6:	repnz push DWORD PTR [ebx+0x6904e433]
  4152cd:	cmp    al,0xf2
  4152cf:	call   DWORD PTR [ebx]
  4152d1:	cmp    ebp,ecx
  4152d3:	ins    DWORD PTR es:[edi],dx
  4152d4:	int    0x7b
  4152d6:	or     al,0xff
	...
  4152e0:	add    BYTE PTR [eax],al
  4152e2:	iret   
  4152e3:	jecxz  0x415335
  4152e5:	neg    al
  4152e7:	xor    DWORD PTR [eax+0x35],edx
  4152ea:	mov    al,ds:0x8dc84739
  4152ef:	aam    0xd
  4152f1:	push   ebp
  4152f2:	push   esp
  4152f3:	cmp    al,0x8b
  4152f5:	ret    
  4152f6:	mov    ebx,0x146a0dbe
  4152fb:	call   0xff19:0xc0b707c1
  415302:	mov    al,ds:0x98fbb15f
  415307:	jmp    0x4152fe
  415309:	addr16 jno 0x4152f8
  41530c:	into   
  41530d:	dec    DWORD PTR [ecx+0xe47390b]
  415313:	fst    DWORD PTR [ebp-0x73]
  415316:	jns    0x4152e9
  415318:	dec    eax
  415319:	(bad)  
  41531a:	cli    
  41531b:	rcl    ch,1
  41531d:	(bad)  
  41531f:	xchg   edi,eax
  415320:	or     BYTE PTR [eax-0x33],ch
  415323:	fmul   DWORD PTR ds:0x4a346780
  415329:	(bad)  
  41532a:	push   eax
  41532b:	xor    BYTE PTR [eax],cl
  41532d:	add    BYTE PTR [eax],bh
  41532f:	inc    edx
  415330:	aad    0x1d
  415332:	mov    dl,0x97
  415334:	or     BYTE PTR [eax-0x1c],ch
  415337:	or     ebp,0xffffffff
  41533a:	xor    DWORD PTR [ebx-0x10],esp
  41533d:	out    0xc9,eax
  41533f:	inc    eax
  415340:	inc    edi
  415341:	(bad)  
  415342:	and    BYTE PTR [ebx+0x44],ah
  415345:	inc    BYTE PTR [eax]
	...
  41534f:	add    BYTE PTR [edx-0x1cacaa20],ah
  415355:	stc    
  415356:	dec    eax
  415357:	enter  0xdc0d,0xd
  41535b:	push   ebp
  41535c:	push   esp
  41535d:	cld    
  41535e:	mov    es,ebx
  415360:	aaa    
  415361:	dec    ecx
  415362:	dec    eax
  415363:	inc    BYTE PTR [edx+0x7f]
  415366:	mov    al,ds:0xd8c29847
  41536b:	mul    ecx
  41536d:	dec    ebx
  41536e:	jmp    0x4153cb
  415370:	in     al,0x64
  415372:	jecxz  0x415377
  415374:	les    edi,FWORD PTR [edi+0x7eb17efa]
  41537a:	jecxz  0x41537f
  41537c:	mov    BYTE PTR [ebx],bh
  41537e:	cmp    eax,DWORD PTR [ebx]
  415380:	iret   
  415381:	jg     0x415366
  415383:	cmp    al,0xb
  415385:	int3   
  415386:	sub    bh,ah
  415388:	test   al,0xc1
  41538a:	popf   
  41538b:	add    esi,DWORD PTR ds:0x25038d80
  415391:	adc    BYTE PTR [eax-0x42],0x9c
  415395:	xor    BYTE PTR [eax+0x7e],bh
  415398:	jl     0x415363
  41539a:	repnz inc ebx
  41539c:	adc    cl,al
  41539e:	jo     0x4153eb
  4153a0:	jns    0x4153ed
  4153a2:	fistp  WORD PTR [edx+0x32]
  4153a5:	data16 jecxz 0x4153ab
  4153a8:	aam    0xbf
  4153aa:	push   edi
  4153ab:	or     DWORD PTR [esi+0x16],esi
  4153ae:	out    0x3,al
  4153b0:	iret   
  4153b1:	push   edi
  4153b2:	mov    cs,esp
	...
  4153bc:	add    BYTE PTR [eax],al
  4153be:	jo     0xd8160d8e
  4153c4:	loop   0x4153bb
  4153c6:	inc    ecx
  4153c7:	shr    DWORD PTR [esi+0x54],0x4b
  4153cb:	sti    
  4153cc:	mov    bh,0x3b
  4153ce:	xor    ecx,eax
  4153d0:	xor    edx,esi
  4153d2:	xor    BYTE PTR [edx*8+0x60f72142],ch
  4153d9:	xor    al,0x21
  4153db:	rol    DWORD PTR [edx+0x3d5910ae],0xb1
  4153e2:	(bad)  
  4153e3:	jg     0x415457
  4153e5:	jns    0x4153d7
  4153e7:	enter  0x760c,0x8c
  4153eb:	shl    DWORD PTR [edi-0x1f],0xa4
  4153ef:	and    bh,BYTE PTR [ebx]
  4153f1:	mov    di,?
  4153f4:	xchg   DWORD PTR [ebp-0x5c],ecx
  4153f7:	shl    ecx,0xc3
  4153fa:	int3   
  4153fb:	push   edi
  4153fc:	pop    ecx
  4153fd:	mov    esp,0x7cf2c10b
  415402:	add    ecx,edx
  415404:	icebp  
  415405:	ds or  al,0x4c
  415408:	add    al,0x41
  41540a:	nop
  41540b:	(bad)  
  41540c:	icebp  
  41540d:	cs inc edx
  41540f:	sti    
  415410:	in     al,0x1e
  415412:	or     al,0xc2
  415414:	jmpw   0xb28c
  415418:	pop    edi
  415419:	test   al,0xcc
  41541b:	shl    BYTE PTR [edi-0xe3e2be7],0x6
	...
  41542a:	add    BYTE PTR [eax],al
  41542c:	inc    esi
  41542d:	js     0x415413
  41542f:	sar    DWORD PTR [ebx-0x3f],1
  415432:	icebp  
  415433:	pusha  
  415434:	inc    esi
  415435:	fdiv   st(1),st
  415437:	out    dx,al
  415438:	or     eax,0xa5c587f4
  41543d:	shl    ecx,0x39
  415440:	xor    edx,DWORD PTR [edi+ebx*2+0x28]
  415444:	rol    eax,cl
  415446:	mov    bh,0xd9
  415448:	xchg   ebp,eax
  415449:	shl    ecx,0xc6
  41544c:	xchg   DWORD PTR [eax-0x1c],edi
  41544f:	icebp  
  415450:	cmp    eax,ecx
  415452:	icebp  
  415453:	pusha  
  415454:	inc    edi
  415455:	mov    al,ds:0x568daef9
  41545a:	or     al,0x11
  41545c:	addr16 push ebx
  41545e:	dec    ebx
  41545f:	jmp    0x9f3e5ff1
  415464:	(bad)  
  415465:	shl    ecx,0x14
  415468:	ret    
  415469:	xlat   BYTE PTR ds:[ebx]
  41546a:	fild   WORD PTR [eax]
  41546c:	inc    esi
  41546d:	cmp    eax,0x246b89f2
  415472:	cli    
  415473:	inc    DWORD PTR [ecx+0x79d088ef]
  415479:	cmp    eax,0xbcfe50f2
  41547e:	pusha  
  41547f:	inc    ecx
  415480:	idiv   BYTE PTR [eax+edi*4]
  415483:	lock jns 0x4154c3
  415486:	repnz (bad) 
  415488:	sti    
  415489:	jae    0x41546f
  41548b:	int    0xc6
  41548d:	inc    edx
  41548e:	repnz mov DWORD PTR [eax],eax
	...
  415499:	add    BYTE PTR [ebx],ch
  41549b:	push   edi
  41549c:	cli    
  41549d:	inc    DWORD PTR [ecx]
  41549f:	in     eax,dx
  4154a0:	icebp  
  4154a1:	addr16 sub eax,0xf1004cf0
  4154a7:	aaa    
  4154a8:	loope  0x4154a1
  4154aa:	rol    DWORD PTR [ecx-0xe],0x75
  4154ae:	scas   al,BYTE PTR es:[edi]
  4154af:	imul   edi,DWORD PTR [ebx-0x7bbe3ed0],0xffffff85
  4154b6:	ret    0xf279
  4154b9:	push   ebx
  4154bb:	pop    es
  4154bc:	into   
  4154bd:	test   DWORD PTR [ecx+0x18684141],0x71004cf0
  4154c7:	aaa    
  4154c8:	loope  0x4154c1
  4154ca:	add    DWORD PTR [ecx-0xe],0x9b6b6e75
  4154d1:	xor    BYTE PTR [ecx+0x7e858441],al
  4154d7:	jns    0x4154cb
  4154d9:	call   FWORD PTR [ebx+eax*4-0x3d6c609c]
  4154e0:	icebp  
  4154e1:	(bad)  
  4154e2:	mov    ebx,0x71fffa73
  4154e7:	inc    ecx
  4154e8:	js     0x4154f2
  4154ea:	ds stc 
  4154ec:	and    edi,edi
  4154ee:	iret   
  4154ef:	adc    eax,0x160f8486
  4154f4:	dec    esp
  4154f5:	(bad)  
  4154f6:	pop    edx
  4154f7:	sub    al,0x70
  4154f9:	test   BYTE PTR [eax],0x3e
  4154fc:	fsub   DWORD PTR [edi+0x0]
	...
  415507:	add    BYTE PTR [esp+eax*4],ah
  41550a:	int    0xff
  41550c:	icebp  
  41550d:	jae    0x415547
  41550f:	imul   al
  415511:	and    eax,0x50d7744b
  415516:	shr    DWORD PTR [edi],cl
  415518:	fcom   DWORD PTR [ebp-0x7b]
  41551b:	test   BYTE PTR [ebx],dl
  41551d:	push   esi
  41551e:	dec    ebx
  41551f:	dec    BYTE PTR [ebx+eax*1+0x3d]
  415523:	test   al,0x7d
  415526:	or     BYTE PTR [edi],cl
  415528:	push   ebx
  415529:	ins    DWORD PTR es:[edi],dx
  41552a:	or     BYTE PTR [eax],al
  41552c:	iret   
  41552d:	sub    DWORD PTR [ecx-0x31],esi
  415530:	mov    al,ds:0x1bff4b65
  415535:	lods   al,BYTE PTR ds:[esi]
  415536:	mov    BYTE PTR [edi+edx*2-0x3001b463],bh
  41553d:	fisttp QWORD PTR [ecx+0xda8cfb0]
  415543:	push   0xbd3ca8cf
  415548:	js     0x415585
  41554a:	sbb    eax,0x4cbf35e8
  41554f:	(bad)  
  415550:	push   0x60f6221b
  415555:	fisttp QWORD PTR [esp+esi*2-0x41]
  415559:	rcr    BYTE PTR [ebx],0x2a
  41555c:	push   eax
  41555d:	int    0x4c
  41555f:	mov    ah,0x37
  415561:	std    
  415562:	dec    esp
  415563:	inc    BYTE PTR [eax+0x73]
  415566:	sbb    al,ch
  415568:	iret   
  415569:	or     BYTE PTR [ebx-0x2],0x0
	...
  415575:	add    BYTE PTR [eax],dh
  415577:	xor    ebp,DWORD PTR [ecx]
  415579:	imul   BYTE PTR [eax]
  41557b:	jg     0x415527
  41557d:	inc    eax
  41557e:	fwait
  41557f:	(bad)  
  415580:	fwait
  415581:	xor    eax,0x409abee7
  415586:	pop    ebx
  415587:	fistp  DWORD PTR [edx+0x30be0940]
  41558d:	and    edi,ecx
  41558f:	mov    ebp,0x8f834072
  415594:	mov    esi,DWORD PTR [ebp-0x59]
  415597:	mov    esi,0xd7234062
  41559c:	push   edx
  41559d:	inc    eax
  41559e:	loope  0x41555d
  4155a0:	fcom   DWORD PTR [ebx]
  4155a2:	out    0xce,eax
  4155a4:	or     al,0x41
  4155a6:	sar    DWORD PTR [ebp-0x423eac68],1
  4155ac:	dec    edx
  4155ad:	inc    eax
  4155ae:	jnp    0x415584
  4155b0:	cmp    al,BYTE PTR [eax-0x47]
  4155b3:	mov    ebp,0x10a713b0
  4155b8:	or     eax,0x50bda941
  4155bd:	dec    edi
  4155be:	cdq    
  4155bf:	mov    ebp,0x90234012
  4155c4:	or     esi,DWORD PTR [ecx-0x19]
  4155c7:	mov    esp,0xc4434002
  4155cc:	repnz aas 
  4155ce:	cmp    DWORD PTR [ebp-0x427eb4c8],0x8ffb3ffa
  4155d8:	or     esi,DWORD PTR [ecx+0x0]
  4155de:	add    BYTE PTR [eax],al
  4155e0:	add    BYTE PTR [eax],al
  4155e2:	add    BYTE PTR [eax],al
  4155e4:	mov    bh,0xbc
  4155e6:	jmp    0x593f:0xdac01b3f
  4155ed:	mov    ebp,0xc671450
  4155f2:	or     eax,0x70bd493f
  4155f7:	jl     0x415632
  4155f9:	mov    ebp,0xfc833fb2
  4155fe:	or     al,0xbe
  415600:	lock mov ebp,0xa7c334f1
  415606:	inc    eax
  415607:	shl    cl,1
  415609:	mov    ebp,0xbcc314f1
  41560e:	mov    bh,0x99
  415610:	fdivr  DWORD PTR [ebp-0x7ab9710f]
  415616:	in     al,0x6b
  415618:	mov    ?,WORD PTR [ebp-0x5389810f]
  41561e:	stc    
  41561f:	jbe    0x4155d1
  415621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415622:	inc    ebx
  415623:	mov    ebp,0x9cf1bda9
  415628:	lahf   
  415629:	mov    ch,0xf1
  41562b:	pop    esi
  41562c:	stos   DWORD PTR es:[edi],eax
  41562d:	jp     0x41564f
  41562f:	push   esi
  415630:	nop
  415631:	mov    ebp,0xbe0041b7
  415636:	icebp  
  415637:	push   ecx
  415638:	mov    esp,0xf83ef168
  41563d:	repz call 0xe4ff4681
  415643:	add    DWORD PTR [edi+0x26f1bd],ebx
	...
  415651:	add    BYTE PTR [esi],ah
  415653:	(bad)  
  415655:	push   ds
  415656:	fsub   DWORD PTR [edi+ecx*1-0xe422e3b]
  41565d:	push   esp
  41565e:	sub    esi,DWORD PTR [esi-0x714cf90f]
  415664:	and    dh,bh
  415666:	mov    ecx,0xb81db7bd
  41566b:	mov    ebp,0x6bd001f1
  415670:	icebp  
  415671:	out    0xa1,al
  415673:	repz rcl dh,0x99
  415677:	mov    ebp,0xbd65d5e4
  41567c:	icebp  
  41567d:	into   
  41567e:	mov    esp,0x7d0900f9
  415684:	jmp    0xf2be347a
  415689:	push   DWORD PTR [ebx+0x79fffa40]
  41568f:	push   0x7d692be7
  415694:	repnz mov ch,0x7a
  415697:	jne    0x41568b
  415699:	dec    DWORD PTR [esi+0x59]
  41569c:	call   FWORD PTR es:[ecx+0x7d]
  4156a0:	dec    eax
  4156a1:	clc    
  4156a2:	pop    edi
  4156a3:	test   al,0xf0
  4156a5:	(bad)  
  4156a6:	jns    0x415725
  4156a8:	js     0x4156a6
  4156aa:	dec    esi
  4156ab:	jne    0x4156c7
  4156ad:	add    dh,dh
  4156af:	dec    edx
  4156b0:	retf   
  4156b1:	or     al,0xf6
  4156b3:	(bad)  
  4156b4:	xchg   ah,ch
	...
  4156be:	add    BYTE PTR [eax],al
  4156c0:	gs inc esp
  4156c2:	cmc    
  4156c3:	push   0xffffffe6
  4156c5:	in     eax,0x55
  4156c7:	jmp    DWORD PTR [ebx-0x21121b79]
  4156cd:	jp     0x4156c1
  4156cf:	mov    DWORD PTR [ebx+0x7b],esi
  4156d2:	bnd jne 0x415683
  4156d5:	out    0x38,eax
  4156d7:	ins    DWORD PTR es:[edi],dx
  4156d8:	ja     0x415759
  4156da:	icebp  
  4156db:	xor    eax,0x4cc6d9
  4156e0:	mov    esi,0xb9fff54f
  4156e5:	jns    0x41575f
  4156e7:	or     BYTE PTR [esi-0x48],cl
  4156ea:	pusha  
  4156eb:	inc    ecx
  4156ec:	jbe    0x4156d5
  4156ee:	or     eax,DWORD PTR [eax]
  4156f0:	data16 (bad) 
  4156f2:	jmp    0xf2bed1b2
  4156f7:	jmp    ebx
  4156f9:	jp     0x4156ed
  4156fb:	jne    0x41575b
  4156fd:	addr16 icebp 
  4156ff:	sub    BYTE PTR [ecx+0x7d],bh
  415702:	(bad)
  415706:	or     eax,0x8bfd5455
  41570b:	ret    
  41570c:	inc    ebx
  41570d:	push   ecx
  41570e:	or     BYTE PTR [eax],al
  415710:	sub    BYTE PTR [ebx],bh
  415712:	mov    al,ds:0x867a2b7
  415717:	jmp    DWORD PTR [edx-0x288bcf24]
  41571d:	adc    dl,bl
  41571f:	push   ebx
  415720:	sbb    BYTE PTR [edx],bl
  415722:	mov    eax,ds:0x0
  415727:	add    BYTE PTR [eax],al
  415729:	add    BYTE PTR [eax],al
  41572b:	add    BYTE PTR [eax],al
  41572d:	add    bh,cl
  41572f:	add    DWORD PTR [ebx+0x67],esi
  415732:	adc    edi,DWORD PTR [esi+ecx*8+0x1bc01ff]
  415739:	inc    DWORD PTR [edx-0x64c0da50]
  41573f:	xor    DWORD PTR [edi],ebp
  415741:	(bad)  
  415742:	(bad)  
  415743:	fsub   QWORD PTR ds:0x2f219fa5
  415749:	or     cl,BYTE PTR [edi]
  41574b:	aad    0xfa
  41574d:	mov    BYTE PTR [edx-0x37005fac],cl
  415753:	jns    0x4157c7
  415755:	addr16 xchg ebx,edx
  415758:	into   
  415759:	(bad)  
  41575a:	mov    ecx,0x3afe31f3
  41575f:	mov    eax,ds:0x6a031b25
  415764:	das    
  415765:	addr16 into 
  415767:	test   al,0x20
  415769:	mov    ebp,0x40a16527
  41576e:	iret   
  41576f:	xchg   ecx,eax
  415770:	mov    ecx,0x61388fb
  415775:	call   0xfe727442
  41577a:	js     0x4157af
  41577c:	xor    edi,esp
  41577e:	ret    0x30bd
  415781:	(bad)  
  415782:	xchg   esi,eax
  415783:	data16 add BYTE PTR [eax],al
  415786:	cli    
  415787:	jg     0x415807
  415789:	das    
  41578a:	dec    ebp
  41578b:	ret    
  41578c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41578d:	test   eax,0xadfe2250
	...
  41579a:	add    BYTE PTR [eax],al
  41579c:	(bad)  
  41579d:	jg     0x4157ea
  41579f:	and    DWORD PTR [ebx-0x3cc31cc0],esi
  4157a5:	mov    ebx,ebx
  4157a7:	add    al,0xe1
  4157a9:	mov    edx,0x330f08ba
  4157ae:	(bad)  [edx-0x49554475]
  4157b4:	adc    al,0xba
  4157b6:	sbb    BYTE PTR [edi+eiz*1],cl
  4157b9:	pop    edx
  4157ba:	call   0xe840:0x18ba093c
  4157c1:	rcr    ebp,cl
  4157c3:	cmp    al,0xf9
  4157c5:	and    al,0xe3
  4157c7:	stos   DWORD PTR es:[edi],eax
  4157c8:	mov    ds:0x77042429,eax
  4157cd:	sahf   
  4157ce:	lock ret 0xb8e0
  4157d2:	ror    BYTE PTR [edi],1
  4157d4:	out    0xd7,eax
  4157d6:	add    BYTE PTR ds:0xb72385d1,bh
  4157dc:	loop   0x4157e4
  4157de:	test   eax,0x4733c13f
  4157e3:	cmp    al,0x43
  4157e5:	mov    BYTE PTR [ebx-0xe],bl
  4157e8:	mov    cl,0xb9
  4157ea:	cmp    bh,BYTE PTR [ebx+eiz*1]
  4157ed:	mov    esp,0xb8f6644b
  4157f2:	sub    ch,BYTE PTR [ecx-0x522ede68]
  4157f8:	jo     0x3f3c9289
  4157fe:	jecxz  0x41583c
	...
  415808:	add    BYTE PTR [eax],al
  41580a:	sti    
  41580b:	mov    ebx,DWORD PTR [ebx]
  41580d:	push   0x7f2b8ab
  415812:	(bad)  
  415813:	xor    al,0xc
  415815:	fist   WORD PTR [ebp+0x44]
  415818:	lock out dx,al
  41581a:	sbb    dh,BYTE PTR [ebp-0x5834a30f]
  415820:	or     eax,0xf1b994de
  415825:	pop    esp
  415826:	pop    es
  415827:	mov    eax,ds:0xba040373
  41582c:	jg     0x41585a
  41582e:	dec    DWORD PTR [eax+0x64]
  415831:	add    DWORD PTR [ebp+0x40],esp
  415834:	or     al,0x41
  415836:	jmp    0x33:0xe5e94b2b
  41583d:	xchg   ecx,eax
  41583e:	pop    eax
  41583f:	ins    BYTE PTR es:[edi],dx
  415840:	icebp  
  415841:	sahf   
  415842:	sar    BYTE PTR [edi+0x445a1078],0xf4
  415849:	push   0x46
  41584b:	lods   eax,DWORD PTR ds:[esi]
  41584c:	or     ah,bh
  41584e:	and    al,0x6
  415850:	dec    eax
  415851:	add    DWORD PTR [eax-0x47],0xb8edd930
  415858:	icebp  
  415859:	test   edi,0xd30e1cf7
  41585f:	jg     0x4157e4
  415861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415862:	pushf  
  415863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415864:	inc    eax
  415865:	push   esi
  415866:	jle    0x415810
  415868:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41586a:	jbe    0x4158ab
  41586c:	or     al,0x74
	...
  415876:	add    BYTE PTR [eax],al
  415878:	mov    es,eax
  41587a:	pop    esp
  41587b:	push   ecx
  41587c:	adc    BYTE PTR [edx-0x43ae16f4],0x0
  415883:	pop    esp
  415884:	mov    ?,WORD PTR [esp+ebx*2+0x5cc08e74]
  41588b:	xchg   ecx,eax
  41588c:	shr    DWORD PTR [ebx],cl
  41588e:	dec    ebx
  41588f:	jmp    0x1418c59
  415894:	je     0x415901
  415896:	icebp  
  415897:	add    cl,dl
  415899:	mov    ah,cl
  41589b:	je     0x41582f
  41589d:	or     ecx,DWORD PTR [ecx-0x4]
  4158a0:	cmc    
  4158a1:	test   ch,0x3
  4158a4:	fmul   DWORD PTR [ecx+0x757275f1]
  4158aa:	js     0x4158b4
  4158ac:	jle    0x4158b1
  4158ae:	lock jmp DWORD PTR [ecx]
  4158b1:	jne    0x41592b
  4158b3:	cld    
  4158b4:	push   cs
  4158b5:	ins    DWORD PTR es:[edi],dx
  4158b6:	and    al,0xff
  4158b8:	adc    DWORD PTR [ebp+0x40],esi
  4158bb:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158bd:	mul    ecx
  4158bf:	add    bl,ch
  4158c1:	and    eax,0x645e75f2
  4158c6:	out    0x29,eax
  4158c8:	jno    0x41593f
  4158ca:	(bad)
  4158ce:	push   edi
  4158cf:	mov    edx,DWORD PTR [edx+0x1]
  4158d2:	into   
  4158d3:	cld    
  4158d4:	int3   
  4158d5:	and    DWORD PTR [esi+0x5d],0x51
  4158d9:	out    dx,eax
  4158da:	or     eax,ebp
	...
  4158e4:	add    BYTE PTR [eax],al
  4158e6:	(bad)  
  4158e7:	pushf  
  4158e8:	repnz jmp FWORD PTR [edi-0x41]
  4158ec:	cmc    
  4158ed:	push   0xbee17bf6
  4158f2:	(bad)  
  4158f3:	xor    esp,DWORD PTR [eax+0x41]
  4158f6:	out    0xe3,al
  4158f8:	shr    DWORD PTR [ebp+0x77],0x83
  4158fc:	icebp  
  4158fd:	jne    0x4158ad
  4158ff:	imul   edi,esi,0x52
  415902:	adc    DWORD PTR [edx+0x69],edi
  415905:	add    DWORD PTR [esi-0x5975096],esp
  41590b:	out    0x4c,eax
  41590d:	add    BYTE PTR [esi-0x59be9fad],cl
  415913:	jp     0x41598d
  415915:	or     BYTE PTR [esi-0x3000a4b2],bh
  41591b:	lea    esp,[ebp+0x74b680ff]
  415921:	addr16 aaa 
  415923:	or     al,0xc9
  415925:	(bad)  
  415926:	call   0xcf81fd8a
  41592b:	lods   eax,DWORD PTR ds:[esi]
  41592c:	mov    eax,ds:0xd75c7707
  415931:	(bad)  
  415932:	pop    eax
  415933:	push   ecx
  415934:	or     eax,0xa1176000
  415939:	ret    
  41593a:	mov    edx,0x26680867
  41593f:	je     0x41590e
  415941:	(bad)  
  415942:	cmp    DWORD PTR [eax+eax*1-0x18],esi
  415946:	popa   
  415947:	fwait
  415948:	xor    edi,esi
	...
  415952:	add    BYTE PTR [eax],al
  415954:	sub    BYTE PTR [esp+eax*2+0x34a88e47],dh
  41595b:	je     0x415924
  41595d:	adc    bl,dl
  41595f:	std    
  415960:	adc    BYTE PTR [esi],dl
  415962:	mov    eax,ds:0x8da8cf01
  415967:	(bad)  
  415968:	jp     0x41590a
  41596a:	and    eax,0x33fdf94c
  41596f:	(bad)  
  415970:	jp     0x4159a6
  415972:	xor    esi,DWORD PTR [edi+edx*8+0x0]
  415976:	inc    esi
  415977:	and    eax,0xc14525e0
  41597c:	shr    DWORD PTR [eax+0x29e38ac2],cl
  415982:	dec    esp
  415983:	sti    
  415984:	enter  0x1d3,0xff
  415988:	cmp    bh,BYTE PTR [ecx+0x3df69725]
  41598e:	xor    ecx,DWORD PTR [edx]
  415990:	(bad)  
  415991:	in     al,dx
  415992:	dec    BYTE PTR [eax+0x74336d12]
  415998:	(bad)  
  415999:	mov    eax,gs:0x307fa707
  41599f:	fist   WORD PTR [ecx-0x2b50ed4a]
  4159a5:	mov    dh,0x90
  4159a7:	or     esi,DWORD PTR [edi+0x63]
  4159aa:	leave  
  4159ab:	cmp    BYTE PTR [ecx-0x4a],bh
  4159ae:	jo     0x4159e7
  4159b0:	jno    0x4159de
  4159b2:	sti    
  4159b3:	sub    ebp,DWORD PTR [edi+0x38fa5d]
	...
  4159c1:	add    BYTE PTR [ecx+0x2c],ah
  4159c4:	fild   QWORD PTR [ebx]
  4159c6:	shr    BYTE PTR [eax-0x16],cl
  4159c9:	cmp    BYTE PTR [eax],bl
  4159cb:	and    bl,0x3
  4159ce:	iret   
  4159cf:	enter  0xfa5,0xcf
  4159d3:	dec    esp
  4159d4:	outs   dx,BYTE PTR ds:[esi]
  4159d5:	daa    
  4159d6:	dec    ebp
  4159d7:	mov    ebx,0x529ad0cb
  4159dc:	push   ds
  4159dd:	pop    ebp
  4159de:	imul   eax,DWORD PTR [ebp+0x49],0x290320c3
  4159e5:	cmp    BYTE PTR [eax-0x3f5155b2],cl
  4159eb:	mov    dh,0x18
  4159ed:	or     bh,dh
  4159ef:	stos   DWORD PTR es:[edi],eax
  4159f0:	into   
  4159f1:	cmp    BYTE PTR [ecx],al
  4159f3:	mov    ah,BYTE PTR [ebx+0x1b4fd6af]
  4159f9:	add    al,0xcf
  4159fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159fc:	xor    DWORD PTR [eax],edi
  4159fe:	arpl   WORD PTR [ebx+0x2be1d113],si
  415a04:	jmp    0x415a31
  415a06:	pop    ecx
  415a07:	mov    dh,0x6a
  415a09:	cmp    ch,al
  415a0b:	xlat   BYTE PTR ds:[ebx]
  415a0c:	pop    ebx
  415a0d:	js     0x4159ff
  415a0f:	mov    ah,0x5a
  415a11:	aaa    
  415a12:	std    
  415a13:	mov    edi,0xb5b9389c
  415a18:	dec    edx
  415a19:	xor    eax,0xaeea7862
  415a1e:	mov    ebp,?
  415a20:	or     al,0xc8
  415a22:	ja     0x415a64
  415a24:	or     al,0x5c
	...
  415a2e:	add    BYTE PTR [eax],al
  415a30:	pop    ecx
  415a31:	mov    ecx,0x2bd7be5c
  415a36:	sbb    al,0x1e
  415a38:	cmp    DWORD PTR [ecx-0x498ca21c],ecx
  415a3e:	icebp  
  415a3f:	loop   0x415a4d
  415a41:	xor    DWORD PTR [ecx+ebx*4],edi
  415a44:	inc    ebp
  415a45:	cmp    al,0xf4
  415a47:	xchg   ecx,eax
  415a48:	sar    DWORD PTR [edi-0x1f],cl
  415a4b:	aaa    
  415a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a4d:	sub    eax,DWORD PTR [ecx+eax*1]
  415a50:	push   esp
  415a51:	pop    esp
  415a52:	icebp  
  415a53:	out    0x80,al
  415a55:	mov    dh,0x77
  415a57:	icebp  
  415a58:	hlt    
  415a59:	movaps xmm2,xmm6
  415a5c:	clc    
  415a5d:	mov    ch,0x77
  415a5f:	int    0x0
  415a61:	sub    al,0xf4
  415a63:	(bad)  
  415a64:	jle    0x415ae3
  415a66:	in     al,0x16
  415a68:	cs mov dh,0xf1
  415a6b:	shl    DWORD PTR [ebp+ebx*2-0xf],0xae
  415a70:	dec    esp
  415a71:	retf   0xa50b
  415a74:	sbb    al,0xf5
  415a76:	mov    bl,0x9e
  415a78:	shl    BYTE PTR [ebp+0x6c699bf1],0x9
  415a7f:	adc    al,0x71
  415a81:	cmc    
  415a82:	mov    ebx,0x80b50a16
  415a87:	and    al,0xa7
  415a89:	inc    esp
  415a8a:	pop    ecx
  415a8b:	jbe    0x415aab
  415a8d:	test   ecx,esi
  415a8f:	hlt    
  415a90:	shl    BYTE PTR [edi+0x124f],1
	...
  415a9e:	cwde   
  415a9f:	mov    ch,0x5
  415aa1:	sub    DWORD PTR [edi+0x56],edi
  415aa4:	pop    esp
  415aa5:	(bad)  
  415aa6:	sti    
  415aa7:	add    DWORD PTR [eax+0x4d],esi
  415aaa:	shr    BYTE PTR ds:0xae260040,cl
  415ab0:	or     al,0x75
  415ab2:	lods   al,BYTE PTR ds:[esi]
  415ab3:	repnz repnz dec ebp
  415ab6:	(bad)  
  415ab8:	or     al,0x0
  415aba:	fldcw  WORD PTR ds:0xc5ea75f2
  415ac0:	pop    edx
  415ac1:	jmp    DWORD PTR [ebx-0x78]
  415ac4:	in     al,0xd6
  415ac6:	fsubr  DWORD PTR [edx+esi*8+0xb]
  415aca:	mov    esi,0x88802068
  415acf:	jle    0x415b48
  415ad1:	sub    BYTE PTR [eax],dh
  415ad3:	ins    DWORD PTR es:[edi],dx
  415ad4:	inc    eax
  415ad5:	cld    
  415ad6:	dec    esp
  415ad7:	cmp    BYTE PTR [edi+0x45],0x6a
  415adb:	rcl    BYTE PTR [edi-0x18],1
  415ade:	out    0xcb,eax
  415ae0:	repnz (bad) 
  415ae2:	cmp    eax,0x8e147d40
  415ae7:	or     DWORD PTR [edi+ebp*8],0xfc786d48
  415aee:	rol    ah,1
  415af0:	bnd jne 0x415b11
  415af3:	push   0x6d59feaa
  415af8:	push   es
  415af9:	fmul   DWORD PTR [esi]
  415afb:	xchg   ebp,eax
  415afc:	sub    bh,bh
  415afe:	imul   ebp,DWORD PTR [esi+edi*1-0x40],0x0
  415b06:	add    BYTE PTR [eax],al
  415b08:	add    BYTE PTR [eax],al
  415b0a:	add    BYTE PTR [eax],al
  415b0c:	outs   dx,DWORD PTR ds:[esi]
  415b0d:	ins    DWORD PTR es:[edi],dx
  415b0e:	repnz call FWORD PTR [ecx+0x6e]
  415b12:	lahf   
  415b13:	cmp    cl,dh
  415b15:	out    dx,al
  415b16:	lea    edi,[edi+0x4cdca4]
  415b1c:	jnp    0x415add
  415b1e:	cmc    
  415b1f:	push   eax
  415b20:	shr    DWORD PTR [eax+edi*2+0x10],0x69
  415b25:	out    dx,eax
  415b26:	add    eax,0xf2a68ae8
  415b2b:	(bad)  
  415b2c:	mov    ebp,0xcf307d3f
  415b31:	clc    
  415b32:	add    BYTE PTR [edi+esi*4-0x3f],0xf1
  415b37:	jmp    DWORD PTR [ecx-0x288bc505]
  415b3d:	push   eax
  415b3e:	lods   eax,DWORD PTR ds:[esi]
  415b3f:	and    esp,DWORD PTR [eax+0x22fec26a]
  415b45:	mov    eax,ds:0x59ebb825
  415b4a:	cmp    bh,dh
  415b4c:	add    dl,BYTE PTR [ebp-0x75788bc6]
  415b52:	mov    esp,0xd2026707
  415b57:	(bad)  
  415b58:	jo     0x415aeb
  415b5a:	sahf   
  415b5b:	es push 0xceca8bb2
  415b61:	lods   al,BYTE PTR ds:[esi]
  415b62:	sti    
  415b63:	mov    edi,0xfe37a216
  415b68:	push   eax
  415b69:	xlat   BYTE PTR ds:[ebx]
  415b6a:	push   0x37
  415b6c:	ror    BYTE PTR [ebx+0x6a],1
  415b6f:	or     al,BYTE PTR [eax]
	...
  415b79:	add    BYTE PTR [edx*2-0x572097f7],ah
  415b80:	sub    BYTE PTR [ebp-0x17ff8bd0],bh
  415b86:	in     eax,dx
  415b87:	jl     0x415bc0
  415b89:	(bad)  
  415b8a:	push   esp
  415b8b:	out    0xd3,al
  415b8d:	pop    ebp
  415b8e:	js     0x415b6f
  415b90:	dec    esi
  415b91:	bswap  edi
  415b93:	jae    0x415b18
  415b95:	jmp    0x415be5
  415b97:	fnstsw WORD PTR [eax]
  415b99:	test   BYTE PTR [eax],0xa
  415b9c:	mov    al,BYTE PTR [ebx+edi*8+0x78]
  415ba0:	aaa    
  415ba1:	je     0x415b82
  415ba3:	stc    
  415ba4:	mov    eax,ds:0x1b26f70b
  415ba9:	add    bh,cl
  415bab:	popf   
  415bac:	dec    ebp
  415bad:	je     0x415c07
  415baf:	fnstenv [ecx-0x1c803009]
  415bb5:	add    ecx,edi
  415bb7:	mov    edx,0x7ac12fa8
  415bbc:	jecxz  0x415bc1
  415bbe:	and    eax,0x2503cd80
  415bc3:	sbb    ch,0x3
  415bc6:	pop    edx
  415bc7:	cmp    al,0x37
  415bc9:	aam    0x53
  415bcb:	cld    
  415bcc:	das    
  415bcd:	sub    eax,0x3493b299
  415bd2:	sbb    edi,DWORD PTR [eax-0x587b50d6]
  415bd8:	retf   
  415bd9:	adc    bh,cl
  415bdb:	jg     0x415bcb
  415bdd:	inc    ebx
	...
  415be6:	add    BYTE PTR [eax],al
  415be8:	cld    
  415be9:	jge    0x415bf9
  415beb:	mov    edi,0xc2bbe6e8
  415bf0:	push   0x771378b1
  415bf5:	jecxz  0x415bc4
  415bf7:	xor    al,0x59
  415bf9:	push   es
  415bfa:	adc    al,0x87
  415bfc:	dec    ebx
  415bfd:	stos   DWORD PTR es:[edi],eax
  415bfe:	shl    BYTE PTR [ecx+ecx*2],cl
  415c01:	dec    edi
  415c02:	xor    eax,0xda653f2c
  415c07:	xor    al,0x47
  415c09:	cld    
  415c0a:	shr    DWORD PTR [ecx+esi*1],cl
  415c0d:	mov    dl,0x5d
  415c0f:	add    al,0x28
  415c11:	in     al,dx
  415c12:	mov    bl,0x2c
  415c14:	and    DWORD PTR [edx-0x4d3b5146],esi
  415c1a:	cmp    BYTE PTR [edi+eiz*1],cl
  415c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c1e:	test   al,0x34
  415c20:	or     DWORD PTR [edx-0x4e06cca8],esi
  415c26:	call   0xf134:0x8259162b
  415c2d:	cmp    ecx,DWORD PTR [ebx-0x74da7d8]
  415c33:	aaa    
  415c34:	call   0xcd1c68f0
  415c39:	jg     0x415bfe
  415c3b:	stos   DWORD PTR es:[edi],eax
  415c3c:	enter  0x577f,0x72
  415c40:	lock dec eax
  415c43:	pop    ecx
  415c44:	repz mov cl,0xf1
  415c47:	fs jns 0x415bff
  415c4a:	pop    esp
  415c4b:	dec    esi
	...
  415c54:	add    BYTE PTR [eax],al
  415c56:	popa   
  415c57:	xor    ecx,0xeda7d0bc
  415c5d:	fcmovne st,st(4)
  415c5f:	jg     0x415c66
  415c61:	sub    ebx,edx
  415c63:	cli    
  415c64:	mov    ch,cl
  415c66:	int3   
  415c67:	jg     0x415c32
  415c69:	lods   al,BYTE PTR ds:[esi]
  415c6a:	les    esi,FWORD PTR [eax-0x4733160f]
  415c70:	inc    edi
  415c71:	sbb    eax,0xe90c79c3
  415c76:	es mov cl,0x63
  415c79:	jmp    0xe9a50db4
  415c7e:	dec    ecx
  415c7f:	cmp    al,0xf8
  415c81:	cdq    
  415c82:	push   ecx
  415c83:	cld    
  415c84:	clc    
  415c85:	neg    BYTE PTR [ecx+esi*4-0x567919a4]
  415c8c:	icebp  
  415c8d:	push   esp
  415c8e:	call   FWORD PTR [eax+0x7fccfbb7]
  415c94:	add    eax,0xe57f77a9
  415c99:	xor    eax,0x2844e64b
  415c9e:	retf   
  415c9f:	mov    al,0x77
  415ca1:	fnstenv [edi+eax*4+0x5dcae26]
  415ca8:	fnsave [esi+edx*2-0x53]
  415cac:	stc    
  415cad:	sahf   
  415cae:	mov    esp,0xd815e40
  415cb3:	addr16 icebp 
  415cb5:	mov    ?,WORD PTR [ebx+ebp*1+0x18]
	...
  415cc4:	(bad)  
  415cc5:	xchg   ebx,eax
  415cc6:	dec    eax
  415cc7:	sub    ah,BYTE PTR [ecx+0x6c]
  415cca:	test   BYTE PTR [ebp-0xd8baa],al
  415cd0:	popa   
  415cd1:	ss loope 0x415ccb
  415cd4:	xor    DWORD PTR [ebp-0xe],ebp
  415cd7:	jne    0x415c8b
  415cd9:	ins    DWORD PTR es:[edi],dx
  415cda:	js     0x415ce4
  415cdc:	push   cs
  415cdd:	dec    ecx
  415cde:	out    dx,eax
  415cdf:	inc    DWORD PTR [ecx]
  415ce1:	ins    DWORD PTR es:[edi],dx
  415ce2:	mov    eax,0xf26ce9f0
  415ce7:	call   0x340392
  415cec:	loope  0x415cb4
  415cee:	stc    
  415cef:	jmp    0x415d20
  415cf1:	ins    DWORD PTR es:[edi],dx
  415cf2:	js     0x415cf0
  415cf4:	fidivr WORD PTR [ebx+ebx*1-0x348c8a00]
  415cfb:	adc    BYTE PTR [esi-0x29],ah
  415cfe:	xchg   ah,ch
  415d00:	in     eax,0x47
  415d02:	popf   
  415d03:	push   edi
  415d04:	shl    esi,1
  415d06:	add    eax,0xf2b657e8
  415d0b:	jmp    FWORD PTR [ebp+0x3c]
  415d0e:	js     0x415d15
  415d10:	inc    ecx
  415d11:	jae    0x415cde
  415d13:	sbb    al,0x36
  415d15:	xor    ecx,DWORD PTR [eax-0x6c]
  415d18:	mov    ebp,0x580f15ef
  415d1d:	lds    eax,FWORD PTR [edx]
  415d1f:	push   eax
  415d20:	adc    DWORD PTR [esi],esi
  415d22:	dec    edx
  415d23:	push   cs
  415d24:	(bad)  
  415d25:	jl     0x415ce1
  415d27:	inc    edi
	...
  415d30:	add    BYTE PTR [eax],al
  415d32:	xor    ecx,esp
  415d34:	add    dh,BYTE PTR [esi+0xf5c7fe9]
  415d3a:	cwde   
  415d3b:	lds    eax,FWORD PTR [esi]
  415d3d:	push   eax
  415d3e:	add    DWORD PTR [esi],esi
  415d40:	dec    edx
  415d41:	or     al,dh
  415d43:	jl     0x415cff
  415d45:	inc    edi
  415d46:	iret   
  415d47:	lahf   
  415d48:	fisttp QWORD PTR [esi]
  415d4a:	cmp    DWORD PTR [ecx-0x10],ebx
  415d4d:	dec    edi
  415d4e:	fdiv   DWORD PTR [ecx-0x3a]
  415d51:	add    eax,0x4676a17f
  415d56:	rcl    DWORD PTR [esi-0x698c9c3],cl
  415d5c:	mov    eax,0xc433cf40
  415d61:	fwait
  415d62:	pop    ds
  415d63:	push   ecx
  415d64:	inc    eax
  415d65:	adc    bh,cl
  415d67:	cwde   
  415d68:	mov    al,bl
  415d6a:	sti    
  415d6b:	sbb    DWORD PTR [edi+ebx*1-0x14f1331],edi
  415d72:	sbb    dl,ch
  415d74:	ds je  0x415d36
  415d77:	inc    eax
  415d78:	or     al,0x36
  415d7a:	nop
  415d7b:	pop    esi
  415d7c:	repnz mov edi,0x44711303
  415d82:	mov    ?,WORD PTR [si+0x7807]
  415d87:	or     al,0x6
  415d89:	call   0xfe801893
  415d8e:	push   0xdafe992c
  415d93:	mov    al,ds:0xa015
	...
  415da0:	lods   eax,DWORD PTR ds:[esi]
  415da1:	mov    ch,0x3b
  415da3:	mov    WORD PTR [edx],cs
  415da5:	cmp    eax,0x80c2fedd
  415daa:	adc    BYTE PTR [ebp+ebp*8-0x3d01c433],dl
  415db1:	xor    BYTE PTR [ebx],bh
  415db3:	je     0x415d8c
  415db5:	shl    BYTE PTR [edx+0x21],0x28
  415db9:	(bad)  
  415dba:	cmp    esi,DWORD PTR [edi+eax*2-0x2f]
  415dbe:	stos   DWORD PTR es:[edi],eax
  415dbf:	and    al,0x18
  415dc1:	test   BYTE PTR [edi],0x2f
  415dc4:	adc    BYTE PTR [eax+esi*8-0x2],dh
  415dc8:	cmp    BYTE PTR [edi+0xb],0x1c
  415dcc:	frstor [ecx-0x6e]
  415dcf:	xor    ecx,edi
  415dd1:	xor    al,0x6f
  415dd3:	xor    DWORD PTR [ebx-0x79],edi
  415dd6:	mov    ebx,DWORD PTR [esi+0x7f8aaeae]
  415ddc:	mov    ecx,DWORD PTR [ebx]
  415dde:	adc    al,0x31
  415de0:	arpl   WORD PTR [edi-0x51512d75],ax
  415de6:	bound  esi,QWORD PTR [ecx]
  415de8:	inc    ebx
  415de9:	xchg   esp,eax
  415dea:	push   0xffffffb7
  415dec:	shr    BYTE PTR [esi+0x63a70bd8],1
  415df2:	add    eax,0xd8aeb131
  415df7:	xchg   edi,eax
  415df8:	mov    al,0x74
  415dfa:	add    BYTE PTR [ecx],dh
  415dfc:	mov    eax,ds:0xb4463c4e
  415e01:	jg     0x415d93
  415e03:	jl     0x415e05
	...
  415e0d:	add    BYTE PTR [eax+eax*1-0x5182d7d8],ah
  415e14:	sub    dh,BYTE PTR [ecx]
  415e16:	sti    
  415e17:	xchg   DWORD PTR [eax-0x79],esp
  415e1a:	js     0x415dc6
  415e1c:	sbb    dh,BYTE PTR [ecx]
  415e1e:	add    BYTE PTR [edi+0x4770fb98],ch
  415e24:	pop    eax
  415e25:	xor    DWORD PTR [ecx-0x52],esp
  415e28:	js     0x415e35
  415e2a:	dec    edx
  415e2b:	add    al,0xe4
  415e2d:	sub    edx,DWORD PTR [ecx-0x52]
  415e30:	xchg   ebx,eax
  415e31:	xor    bl,al
  415e33:	jnp    0x415e1f
  415e35:	mov    dh,0xc8
  415e37:	xchg   edi,eax
  415e38:	popa   
  415e39:	pop    esi
  415e3a:	cmp    DWORD PTR [esi+0x7fa5044d],ebp
  415e40:	dec    ebx
  415e41:	xor    ebp,ecx
  415e43:	jg     0x415e28
  415e45:	jle    0x415e92
  415e47:	jg     0x415e00
  415e49:	xor    BYTE PTR [ecx],bl
  415e4b:	dec    edi
  415e4c:	or     al,0x43
  415e4e:	fisubr WORD PTR [ebp-0x51952689]
  415e54:	arpl   cx,bp
  415e56:	in     al,0x58
  415e58:	sbb    al,0xe9
  415e5a:	int3   
  415e5b:	mov    BYTE PTR [edi-0xe524467],0xf9
  415e62:	int3   
  415e63:	jg     0x415e71
  415e65:	scas   al,BYTE PTR es:[edi]
  415e66:	dec    ecx
  415e67:	mov    dl,0xfd
  415e69:	jle    0x415e0a
  415e6b:	or     BYTE PTR [ecx+ebp*8],0xcc
  415e6f:	mov    BYTE PTR [edi+0x71],0x0
  415e76:	add    BYTE PTR [eax],al
  415e78:	add    BYTE PTR [eax],al
  415e7a:	add    BYTE PTR [eax],al
  415e7c:	add    ebp,DWORD PTR [esi+0x7fcce9f1]
  415e82:	or     al,0x26
  415e84:	push   ecx
  415e85:	test   eax,0xacff56fd
  415e8a:	icebp  
  415e8b:	jmp    0xe199575c
  415e90:	and    ecx,DWORD PTR [edi+0x419e966]
  415e96:	std    
  415e97:	cmp    bl,bh
  415e99:	lods   eax,DWORD PTR ds:[esi]
  415e9a:	pop    esp
  415e9b:	pop    esp
  415e9c:	push   ecx
  415e9d:	cdq    
  415e9e:	std    
  415e9f:	es mov edi,0xd4647f3c
  415ea5:	mov    cl,0xf1
  415ea7:	push   ss
  415ea8:	pushf  
  415ea9:	scas   al,BYTE PTR es:[edi]
  415eaa:	ja     0x415ea5
  415eac:	lahf   
  415ead:	xor    eax,DWORD PTR [eax]
  415eaf:	push   es
  415eb0:	sbb    DWORD PTR [ebp+0x339fe966],eax
  415eb6:	adc    al,0xf6
  415eb8:	jnp    0x415efb
  415eba:	lea    ebp,[esp+eiz*8]
  415ebd:	mov    cl,0xf1
  415ebf:	out    0xcb,al
  415ec1:	jl     0x415e4b
  415ec3:	aam    0xd3
  415ec5:	jg     0x415ed3
  415ec7:	push   0xffffffbe
  415ec9:	cwde   
  415eca:	std    
  415ecb:	into   
  415ecc:	clc    
  415ecd:	lods   al,BYTE PTR ds:[esi]
  415ece:	add    al,BYTE PTR [eax]
  415ed0:	mov    dl,0x8b
  415ed2:	icebp  
  415ed3:	jmp    DWORD PTR [esi]
  415ed5:	or     DWORD PTR [ecx+0x7f83e771],ecx
  415edb:	test   esi,esi
  415edd:	pop    esp
  415ede:	repnz inc DWORD PTR [eax]
	...
  415ee9:	add    dh,al
  415eeb:	mov    edx,ebx
  415eed:	(bad)  
  415eef:	add    BYTE PTR [edi+0x647ad2c0],0x94
  415ef6:	mov    edx,0x83738cf1
  415efc:	lock call FWORD PTR [ecx-0x2d]
  415f00:	jmp    0xcc248ca
  415f05:	test   DWORD PTR [esi-0x54],esi
  415f08:	mov    BYTE PTR [edi-0x38f37f4a],ch
  415f0e:	xor    ebx,DWORD PTR [eax-0x2]
  415f11:	call   FWORD PTR [ecx]
  415f13:	ja     0x415f21
  415f15:	out    dx,eax
  415f16:	pop    eax
  415f17:	or     edx,DWORD PTR [edx+0x7f807771]
  415f1d:	test   DWORD PTR [esi+0x36fff258],esp
  415f23:	mov    BYTE PTR [ebx-0x787f89f1],ch
  415f29:	shl    BYTE PTR [edx-0x66],0xca
  415f2d:	test   edx,edx
  415f2f:	jo     0x415f23
  415f31:	jmp    DWORD PTR [eax-0x80]
  415f34:	loope  0x415ef4
  415f36:	dec    esi
  415f37:	push   ss
  415f38:	jl     0x415f7b
  415f3a:	jbe    0x415f3b
  415f3c:	mov    BYTE PTR [eax],al
  415f3e:	into   
  415f3f:	pop    esp
  415f40:	repnz push eax
  415f42:	into   
  415f43:	add    BYTE PTR [ebx],al
  415f45:	add    BYTE PTR [esi],dh
  415f47:	div    DWORD PTR [ecx-0x77bb368c]
  415f4d:	in     al,0x0
	...
  415f57:	add    BYTE PTR ds:0xcf07f25d,dl
  415f5d:	xchg   esi,eax
  415f5e:	adc    bh,BYTE PTR [ebp+0x40b8dab7]
  415f64:	iret   
  415f65:	xor    eax,DWORD PTR [edi+edi*8+0x4f22ed20]
  415f6c:	daa    
  415f6d:	cmp    dh,cl
  415f6f:	dec    DWORD PTR [eax]
  415f71:	and    ecx,DWORD PTR [ebp+0x74]
  415f74:	popf   
  415f75:	pop    ss
  415f76:	jl     0x415f5b
  415f78:	cld    
  415f79:	or     al,0x23
  415f7b:	push   es
  415f7c:	iret   
  415f7d:	add    eax,0x80b37460
  415f82:	or     bh,bh
  415f84:	pop    edx
  415f85:	mov    dl,0x22
  415f87:	je     0x415f4c
  415f89:	sub    eax,0x34dce774
  415f8e:	and    bh,dh
  415f90:	sub    BYTE PTR ds:0x22c0fe3e,0xb4
  415f97:	(bad)  
  415f99:	adc    al,0x2a
  415f9b:	repnz mov al,0x52
  415f9e:	adc    eax,0x223aaa9a
  415fa3:	jmp    0x9d22:0xff08ceed
  415faa:	and    dh,BYTE PTR [ebx+edi*4+0x71]
  415fae:	je     0x415f97
  415fb0:	jl     0x41600c
  415fb2:	and    bh,dh
  415fb4:	cmp    dl,BYTE PTR [ebp-0x758701c2]
  415fba:	mov    ah,0xf
	...
  415fc4:	add    BYTE PTR [eax],al
  415fc6:	jo     0x416014
  415fc8:	sub    edx,esi
  415fca:	push   0x6276157a
  415fcf:	and    BYTE PTR [edx],0xfe
  415fd2:	and    bh,BYTE PTR [ebp+0x3e]
  415fd5:	(bad)  
  415fd6:	push   eax
  415fd7:	sbb    DWORD PTR [esi+0x3098cf0e],0xe37fdbc1
  415fe1:	(bad)  
  415fe2:	inc    ebp
  415fe3:	pushf  
  415fe4:	dec    ax
  415fe6:	xor    al,0xff
  415fe8:	sbb    BYTE PTR [ebx-0x6b],al
  415feb:	inc    eax
  415fec:	jecxz  0x415ff1
  415fee:	fwait
  415fef:	push   0xffffffa2
  415ff1:	(bad)  
  415ff2:	adc    al,0x80
  415ff4:	jecxz  0x415ff9
  415ff6:	iret   
  415ff7:	push   esi
  415ff8:	mov    ds:0x504f98d4,eax
  415ffd:	xlat   BYTE PTR ds:[ebx]
  415ffe:	add    al,0x4e
  416000:	stos   BYTE PTR es:[edi],al
  416001:	pop    ss
  416002:	push   cs
  416003:	aaa    
  416004:	and    al,0x4
  416006:	dec    edx
  416007:	rcr    BYTE PTR [edx+eax*1],0xf4
  41600b:	pop    esi
  41600c:	scas   ax,WORD PTR es:[edi]
  41600e:	in     al,0x7f
  416010:	lock add esp,esp
  416013:	xchg   BYTE PTR [ebx],bl
  416015:	mov    ah,0xdd
  416017:	aas    
  416018:	jecxz  0x416046
  41601a:	inc    ebx
  41601b:	lods   al,BYTE PTR ds:[esi]
  41601c:	bound  esi,QWORD PTR [edi+0x5f2797c8]
  416022:	mov    ecx,0xb4d77eaa
  416027:	div    ch
  416029:	sub    al,0x0
	...
  416033:	add    BYTE PTR [ebx],ah
  416035:	lods   al,BYTE PTR ds:[esi]
  416036:	inc    edx
  416037:	ror    al,cl
  416039:	mov    eax,0x54cf0825
  41603e:	jle    0x416060
  416040:	dec    ebp
  416041:	ret    
  416042:	aaa    
  416043:	call   0x77fb:0x2c811888
  41604a:	sbb    ecx,ecx
  41604c:	fsubr  DWORD PTR [edx-0x53f484ee]
  416052:	sbb    dh,BYTE PTR [edi+0x2d7497d0]
  416058:	popa   
  416059:	stos   BYTE PTR es:[edi],al
  41605a:	fwait
  41605b:	sub    ebp,ecx
  41605d:	inc    eax
  41605e:	jecxz  0x41608c
  416060:	fwait
  416061:	mov    edx,0xaa0da10c
  416066:	bnd je 0x4160ad
  416069:	mov    ds:0xa9ebe28f,al
  41606e:	fs loope 0x4160c4
  416071:	aas    
  416072:	or     al,0x41
  416074:	xchg   BYTE PTR [edx+0x4b],al
  416077:	jmp    0xc66c7440
  41607c:	jmp    0x4160b8
  41607e:	pop    esp
  41607f:	push   ecx
  416080:	lock sbb DWORD PTR [ebx-0x17],ecx
  416084:	mov    ebx,0xc21c173
  416089:	stos   BYTE PTR es:[edi],al
  41608a:	repnz sbb al,0xfb
  41608d:	mov    eax,ds:0xa9a39d14
  416092:	in     al,0xb5
  416094:	out    dx,al
  416095:	test   al,0xf1
  416097:	add    eax,DWORD PTR [eax]
	...
  4160a1:	add    bl,cl
  4160a3:	pop    ss
  4160a4:	jge    0x41609e
  4160a6:	or     eax,0x1c2669aa
  4160ab:	aas    
  4160ac:	or     al,0x1
  4160ae:	int    0x7f
  4160b0:	or     al,0x69
  4160b2:	in     al,0xca
  4160b4:	daa    
  4160b5:	data16 jmp 0x41612d
  4160b8:	int3   
  4160b9:	aad    0xac
  4160bb:	and    DWORD PTR [ebp-0x28],esi
  4160be:	lea    ebp,[ecx+0x63064141]
  4160c4:	icebp  
  4160c5:	inc    esi
  4160c6:	jl     0x416101
  4160c8:	icebp  
  4160c9:	hlt    
  4160ca:	rol    DWORD PTR [eax+0x4b],cl
  4160cd:	jmp    0x4145948d
  4160d2:	jae    0x41607a
  4160d4:	icebp  
  4160d5:	es aam 0xde
  4160d8:	cs push ds
  4160da:	mov    ds:0x8d993420,eax
  4160df:	test   eax,0x40a3d4f2
  4160e4:	dec    ebx
  4160e5:	add    BYTE PTR [esi+0x5c],ah
  4160e8:	js     0x4160f2
  4160ea:	mov    esi,0x41fff6a3
  4160ef:	or     dl,dh
  4160f1:	addr16 mov ecx,0x31004cec
  4160f7:	scas   eax,DWORD PTR es:[edi]
  4160f8:	ret    0xe748
  4160fb:	xor    ecx,0x75
  4160fe:	test   DWORD PTR cs:[ebx+edi*8+0x635511],edi
	...
  41610e:	add    BYTE PTR [eax],al
  416110:	jle    0x416098
  416112:	popa   
  416113:	inc    ecx
  416114:	es push esi
  416116:	cmp    bh,cl
  416118:	scas   al,BYTE PTR es:[edi]
  416119:	ret    0xfef1
  41611c:	mov    ebx,0x2d9ce9ab
  416121:	push   ebp
  416122:	repnz (bad) 
  416124:	fist   DWORD PTR [edi-0xe]
  416127:	jne    0x416117
  416129:	test   cl,bl
  41612b:	pop    ds
  41612c:	push   ecx
  41612d:	push   ebp
  41612e:	(bad)
  416132:	push   edi
  416133:	mov    eax,DWORD PTR [edx+0x3]
  416136:	into   
  416137:	hlt    
  416138:	inc    eax
  416139:	push   ebp
  41613a:	repnz push 0xffffffb6
  41613d:	or     dl,BYTE PTR [ebx-0x1]
  416140:	fwait
  416141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416142:	jmp    0xf29712c0
  416147:	mov    DWORD PTR [ebx+0x60],edi
  41614a:	retf   0x1805
  41614d:	in     al,0x4c
  41614f:	add    BYTE PTR [esp+edi*2-0xdcfff4],ah
  416156:	cli    
  416157:	inc    cl
  416159:	push   esp
  41615a:	inc    ecx
  41615b:	push   0xc836a
  416160:	fisub  WORD PTR [eax+0x0]
  416163:	add    BYTE PTR [esi+0x4],ah
  416166:	sub    BYTE PTR [edx-0x31],dh
  416169:	xlat   BYTE PTR ds:[ebx]
  41616a:	or     eax,0xc904c568
  41616f:	push   eax
  416171:	sub    DWORD PTR [eax+0x40],ebp
  416177:	add    BYTE PTR [eax],al
  416179:	add    BYTE PTR [eax],al
  41617b:	add    BYTE PTR [eax],al
  41617d:	add    bh,cl
  41617f:	test   eax,0xd797cefc
  416184:	or     eax,0x159ebaff
  416189:	fld    TBYTE PTR [ecx+eiz*4+0x26]
  41618d:	addr16 jmp 0xb14128d7
  416193:	lods   al,BYTE PTR ds:[esi]
  416194:	mov    bh,0x40
  416196:	iret   
  416197:	ds mov ebp,0x95968e60
  41619d:	add    edi,ecx
  41619f:	xchg   esi,eax
  4161a0:	(bad)  
  4161a1:	inc    BYTE PTR [edx+0x2cbf159e]
  4161a7:	fldenv [esi]
  4161a9:	mov    WORD PTR [edx+0x9],ss
  4161ac:	and    al,0xfe
  4161ae:	lock adc BYTE PTR gs:[ebx-0x38f26926],cl
  4161b6:	retf   0xad30
  4161b9:	inc    eax
  4161ba:	iret   
  4161bb:	xchg   ebp,eax
  4161bc:	or     eax,0x8c1bcf00
  4161c1:	test   cl,0x2e
  4161c4:	es dec edi
  4161c6:	aaa    
  4161c7:	popf   
  4161c8:	or     BYTE PTR [eax],al
  4161ca:	iret   
  4161cb:	push   eax
  4161cc:	mov    cl,BYTE PTR [edi+ecx*8]
  4161cf:	cwde   
  4161d0:	xchg   ebp,eax
  4161d1:	and    eax,0x680dd81d
  4161d6:	(bad)
  4161d9:	push   DWORD PTR [eax]
  4161db:	out    0xa8,al
  4161dd:	inc    eax
  4161de:	iret   
  4161df:	gs cld 
  4161e1:	into   
	...
  4161ea:	add    BYTE PTR [eax],al
  4161ec:	pop    ss
  4161ed:	fmul   DWORD PTR ds:0x15a0faff
  4161f3:	jnp    0x416221
  4161f5:	sub    BYTE PTR [edx],0x2a
  4161f8:	call   0x6905f75a
  4161fd:	pop    ds
  4161fe:	std    
  4161ff:	mov    ch,0xf
  416201:	or     BYTE PTR [ebx-0x1cbf104e],0x9b
  416208:	into   
  416209:	jg     0x4161ee
  41620b:	or     DWORD PTR [ecx+0x2d],0xffffffeb
  41620f:	sbb    esp,DWORD PTR [eax+0x4b29e2e2]
  416215:	std    
  416216:	shr    BYTE PTR [edx],cl
  416218:	xor    DWORD PTR [edi+0x74f41c33],esp
  41621e:	jecxz  0x416223
  416220:	and    BYTE PTR ds:0x77a329bf,ch
  416226:	(bad)  [ebx]
  416228:	mov    dl,0xa6
  41622a:	mov    dl,0x3b
  41622c:	push   cs
  41622d:	jl     0x416212
  41622f:	into   
  416230:	push   ebp
  416231:	xchg   esp,eax
  416232:	inc    ax
  416234:	hlt    
  416235:	dec    esi
  416236:	xor    ecx,esp
  416238:	push   0xe8c49a3b
  41623d:	scas   al,BYTE PTR es:[edi]
  41623e:	adc    eax,0xaaa70c03
  416243:	mov    edi,0x3e37fd4
  416248:	iret   
  416249:	out    0xb6,al
  41624b:	mov    ch,0xf
  41624d:	cmp    BYTE PTR [edx-0x51],0x0
	...
  416259:	add    al,cl
  41625b:	imul   al
  41625d:	ins    BYTE PTR es:[edi],dx
  41625e:	cmp    eax,0x6f9fe341
  416263:	outs   dx,DWORD PTR ds:[esi]
  416264:	jecxz  0x416269
  416266:	iret   
  416267:	(bad)  
  416268:	fild   DWORD PTR ds:0x28eb2bcf
  41626e:	and    edi,DWORD PTR [eax+0x5b]
  416271:	jbe    0x41622b
  416273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416274:	xor    bl,BYTE PTR [ebx]
  416276:	inc    eax
  416277:	jg     0x416285
  416279:	jmp    0x417fa4a
  41627e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41627f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416280:	icebp  
  416281:	pushf  
  416282:	je     0x416222
  416284:	test   esp,edi
  416286:	mov    bh,0xa5
  416288:	lods   eax,DWORD PTR ds:[esi]
  416289:	pop    esi
  41628a:	sbb    bh,BYTE PTR [edi]
  41628c:	or     al,0x85
  41628e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41628f:	imul   ecx,DWORD PTR [ecx+ebp*8],0xffffffcc
  416293:	jg     0x41621a
  416295:	and    eax,0xe937a56f
  41629a:	int3   
  41629b:	jg     0x4162a9
  41629d:	xchg   esp,eax
  41629e:	sbb    al,0x1e
  4162a0:	sub    al,0xe1
  4162a2:	or     al,0xa6
  4162a4:	imul   eax,eax,0x390c66df
  4162aa:	outs   dx,DWORD PTR ds:[esi]
  4162ab:	mul    DWORD PTR [edi]
  4162ad:	jmp    0xc64de27e
  4162b2:	popa   
  4162b3:	jle    0x4162a6
  4162b5:	(bad)  
  4162b6:	dec    ebp
  4162b7:	xor    ch,BYTE PTR gs:0xce7da60b
	...
  4162c6:	add    BYTE PTR [eax],al
  4162c8:	push   ebx
  4162c9:	scas   al,BYTE PTR es:[edi]
  4162ca:	sbb    al,0x1d
  4162cc:	hlt    
  4162cd:	mov    esp,0x7fcd9d47
  4162d2:	or     al,0xe9
  4162d4:	ret    
  4162d5:	(bad)  
  4162d6:	icebp  
  4162d7:	aam    0x5f
  4162d9:	xor    DWORD PTR [ebx-0x17],ecx
  4162dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162dd:	imul   esi,DWORD PTR [ebp-0x165a7206],0x7d
  4162e4:	shl    BYTE PTR [ecx+esi*8-0x1a730796],cl
  4162eb:	scas   al,BYTE PTR es:[edi]
  4162ec:	cmp    edx,0x799972e0
  4162f2:	test   DWORD PTR [esp+edi*4+0x17e17ea4],ebp
  4162f9:	and    eax,0x81a600b4
  4162fe:	or     al,0xff
  416300:	inc    esp
  416301:	lods   eax,DWORD PTR ds:[esi]
  416302:	add    BYTE PTR [eax+0xc80b2],0xa9
  416309:	jmp    0xfff1:0x14e68f01
  416310:	jbe    0x41630e
  416312:	xor    BYTE PTR [ebx-0xe3dbb],bh
  416318:	inc    edx
  416319:	xchg   edx,eax
  41631a:	icebp  
  41631b:	xor    eax,0x4ceb91
  416320:	dec    ecx
  416321:	xchg   ebx,eax
  416322:	mov    dh,0x73
  416324:	ja     0x4162a7
  416326:	in     al,0xb1
  416328:	sbb    al,0x58
  41632a:	repnz mov eax,0x0
  416330:	add    BYTE PTR [eax],al
  416332:	add    BYTE PTR [eax],al
  416334:	add    BYTE PTR [eax],al
  416336:	or     DWORD PTR es:[eax+eax*1],0x2d41eb
  41633e:	xchg   edx,eax
  41633f:	sub    al,0x8
  416341:	add    BYTE PTR [esi],ah
  416343:	or     DWORD PTR [ebx+eax*4],0x3f8d8061
  41634a:	imul   BYTE PTR [ebp+0x5d393f88]
  416350:	repnz mov esi,DWORD PTR [ebx+0x24c95257]
  416357:	or     BYTE PTR [edx*2-0x3b7178a3],0x3a
  41635f:	mov    dh,0x41
  416361:	pop    eax
  416362:	into   
  416363:	in     eax,dx
  416364:	stc    
  416365:	inc    eax
  416366:	out    0x58,al
  416368:	jnp    0x41636b
  41636a:	jne    0x4163c8
  41636c:	xchg   cl,cl
  41636e:	sub    eax,0x2df62663
  416373:	arpl   WORD PTR [ecx-0x6],bp
  416376:	mov    DWORD PTR [esi+0x2cdf8b0c],ebx
  41637c:	dec    eax
  41637d:	cld    
  41637e:	iret   
  41637f:	and    DWORD PTR [edi],ebp
  416381:	jmp    0x3189:0x22f21b5
  416388:	das    
  416389:	dec    edi
  41638a:	push   esp
  41638b:	outs   dx,DWORD PTR ds:[esi]
  41638c:	adc    bh,bh
  41638e:	aam    0x96
  416390:	or     eax,0x770e868b
  416395:	enter  0x58cc,0x75
  416399:	enter  0x0,0x0
  41639d:	add    BYTE PTR [eax],al
  41639f:	add    BYTE PTR [eax],al
  4163a1:	add    BYTE PTR [eax],al
  4163a3:	add    BYTE PTR [eax-0x2d],ch
  4163a6:	sub    DWORD PTR [edx+0x75088ae2],eax
  4163ac:	outs   dx,DWORD PTR ds:[esi]
  4163ad:	aam    0x30
  4163af:	ret    0x31fa
  4163b2:	adc    al,0x4f
  4163b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b5:	push   cs
  4163b6:	xor    bh,0x8f
  4163b9:	xchg   esi,eax
  4163ba:	and    eax,0x2959ce71
  4163bf:	mov    cl,BYTE PTR [edx-0x5c400952]
  4163c5:	xchg   edx,eax
  4163c6:	push   ss
  4163c7:	add    al,0x21
  4163c9:	sahf   
  4163ca:	daa    
  4163cb:	pop    es
  4163cc:	(bad)  
  4163cd:	push   ss
  4163ce:	in     eax,0xff
  4163d0:	fwait
  4163d1:	in     al,0x30
  4163d3:	rcl    ebx,0x96
  4163d6:	fmul   QWORD PTR [edx-0xccee70d]
  4163dc:	pushf  
  4163dd:	xchg   al,al
  4163df:	addr16 pmaxub mm1,mm5
  4163e3:	jmp    eax
  4163e5:	xchg   DWORD PTR [edi],eax
  4163e7:	ret    
  4163e8:	loopne 0x4163be
  4163ea:	int3   
  4163eb:	repz iret 
  4163ed:	xchg   esi,eax
  4163ee:	or     eax,0x74e1a400
  4163f3:	inc    esp
  4163f4:	retf   
  4163f5:	mov    DWORD PTR [ecx],ebp
  4163f7:	je     0x4163d0
  4163f9:	add    BYTE PTR [ebx],dh
  4163fb:	or     cl,bh
  4163fd:	cwde   
  4163fe:	mov    WORD PTR [edi+0x27108037],?
  416404:	and    edi,DWORD PTR [eax+0x5b]
  416407:	mov    al,BYTE PTR [eax]
	...
  416411:	add    BYTE PTR [ecx+0x137c5aa2],bh
  416417:	test   al,0xa3
  416419:	shr    DWORD PTR [eax-0x76d9154c],cl
  41641f:	stc    
  416420:	test   al,0x2f
  416422:	sub    DWORD PTR ds:0x76521b37,0xbfc403e3
  41642c:	(bad)  
  41642d:	punpckhbw mm5,QWORD PTR ds:0xabdb262b
  416434:	mov    bl,0x1b
  416436:	jo     0x4163bb
  416438:	add    ah,BYTE PTR [esi]
  41643a:	push   ecx
  41643b:	sub    eax,0x75bc1b07
  416440:	jecxz  0x416445
  416442:	inc    eax
  416443:	sub    eax,0x88bc1beb
  416448:	loop   0x41646f
  41644a:	dec    ebp
  41644b:	and    eax,0x81a304cf
  416450:	pop    ebx
  416451:	push   ecx
  416452:	popf   
  416453:	inc    eax
  416454:	jecxz  0x41647a
  416456:	mov    ds:0xc519cbab,eax
  41645b:	jg     0x416440
  41645d:	clc    
  41645e:	dec    eax
  41645f:	sub    al,0xe8
  416461:	push   0x3e37fcf
  416466:	clc    
  416467:	sub    al,0xb7
  416469:	sbb    al,0x6a
  41646b:	sub    BYTE PTR [edx+0x4ebf5525],0x3b
  416472:	push   cs
  416473:	jl     0x416458
  416475:	into   
	...
  41647e:	add    BYTE PTR [eax],al
  416480:	inc    ebp
  416481:	xchg   esp,eax
  416482:	xor    ecx,esp
  416484:	push   0xc8c48c4f
  416489:	stos   BYTE PTR es:[edi],al
  41648a:	cmc    
  41648b:	add    cl,BYTE PTR [edx+eiz*4+0x7a68760c]
  416492:	in     al,0x38
  416494:	les    esp,FWORD PTR [edx+0x1aa4d3f1]
  41649a:	cs mov cl,0x8d
  41649d:	mov    ds:0x9a94dcf2,al
  4164a2:	icebp  
  4164a3:	bnd jmp 0x416447
  4164a6:	data16 icebp 
  4164a8:	fs cmp eax,0xa2cca844
  4164ae:	ja     0x416491
  4164b0:	aam    0x92
  4164b2:	adc    eax,0x77a1aa2e
  4164b7:	icebp  
  4164b8:	(bad)  
  4164b9:	in     eax,dx
  4164ba:	out    dx,eax
  4164bb:	push   ds
  4164bc:	stos   BYTE PTR es:[edi],al
  4164bd:	jmp    0x2bc3:0x7fcce90b
  4164c4:	iret   
  4164c5:	jg     0x41651e
  4164c7:	jb     0x4164b0
  4164c9:	std    
  4164ca:	enter  0x1b01,0x4a
  4164ce:	fs push eax
  4164d0:	in     al,0x62
  4164d2:	or     al,0xf1
  4164d4:	jle    0x416555
  4164d6:	int    0xe6
  4164d8:	repz sub eax,DWORD PTR [eax]
  4164db:	fidiv  WORD PTR [ecx+0x7a]
  4164de:	in     al,0xa5
  4164e0:	shl    DWORD PTR [edx+0xa6f1],1
	...
  4164ee:	push   ecx
  4164ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f0:	or     ebp,ecx
  4164f2:	int3   
  4164f3:	jg     0x416574
  4164f5:	and    al,0xb3
  4164f7:	xor    ah,BYTE PTR [esi+ebp*4+0x3f]
  4164fb:	aas    
  4164fc:	or     al,0xc1
  4164fe:	jno    0x416556
  416500:	icebp  
  416501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416502:	out    0xe1,eax
  416504:	js     0x4164d1
  416506:	cld    
  416507:	cld    
  416508:	outs   dx,DWORD PTR ds:[esi]
  416509:	xchg   ecx,eax
  41650a:	mov    esp,0xbb031a2c
  41650f:	dec    edi
  416510:	icebp  
  416511:	add    bl,cl
  416513:	test   eax,0x5ca138e9
  416518:	repnz or esp,DWORD PTR [esi-0x2f]
  41651c:	or     al,bh
  41651e:	jmp    0x416577
  416520:	icebp  
  416521:	push   DWORD PTR [esi-0x5f3e1b83]
  416527:	pop    esp
  416528:	repnz mov ebp,DWORD PTR [ebx+0x59]
  41652c:	(bad)
  416530:	push   edi
  416531:	mov    esp,DWORD PTR [edx]
  416533:	rol    BYTE PTR [ecx+0x58],1
  416536:	sahf   
  416537:	push   ebx
  416538:	hlt    
  416539:	inc    eax
  41653a:	push   bp
  41653c:	jnp    0x41653f
  41653e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41653f:	pop    ebx
  416540:	(bad)  es:[ecx+0x37e809d1]
  416547:	pop    esp
  416548:	repnz jmp FWORD PTR [ebp+0x3d]
  41654c:	add    al,BYTE PTR [eax+ebx*8+0xc7c]
	...
  41655b:	add    cl,dl
  41655d:	ror    DWORD PTR [ecx],1
  41655f:	call   0x32d8b6
  416564:	sub    eax,0xcf05783d
  416569:	es icebp 
  41656b:	push   DWORD PTR [esi]
  41656d:	pop    esi
  41656e:	js     0x41657c
  416570:	add    DWORD PTR [edi],eax
  416572:	or     ch,al
  416574:	test   DWORD PTR [edx+esi*8-0x1],ebx
  416578:	add    DWORD PTR [edi],eax
  41657a:	or     ch,al
  41657c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41657d:	jle    0x416570
  41657f:	(bad)  
  416580:	std    
  416581:	cmp    al,0x78
  416583:	add    cl,BYTE PTR ds:0xee75f30b
  416589:	push   esp
  41658a:	cs sbb al,0x31
  41658d:	pop    ebp
  41658e:	push   es
  41658f:	sar    BYTE PTR [ebx-0x309c1a87],0x9
  416596:	xchg   esp,eax
  416597:	pop    es
  416598:	out    0x8d,eax
  41659a:	or     al,0xff
  41659c:	enter  0x4dad,0x74
  4165a0:	int    0xd
  4165a2:	mov    ah,0x67
  4165a4:	and    DWORD PTR [edx-0x39],edx
  4165a7:	push   DWORD PTR [ecx+0x63e805ab]
  4165ad:	jns    0x4165dc
  4165af:	(bad)  
  4165b0:	aam    0x56
  4165b2:	xchg   ebx,eax
  4165b3:	add    DWORD PTR [esp+edx*8+0x3ec7742e],esp
  4165ba:	adc    al,0x1a
  4165bc:	mov    BYTE PTR [ecx],bh
  4165be:	add    eax,eax
	...
  4165c8:	add    BYTE PTR [eax],al
  4165ca:	cli    
  4165cb:	xchg   esp,eax
  4165cc:	and    dh,BYTE PTR [ebx]
  4165ce:	js     0x4165b3
  4165d0:	add    eax,0x2eb303e8
  4165d5:	(bad)  
  4165d6:	aam    0x56
  4165d8:	xchg   ebx,eax
  4165d9:	add    DWORD PTR [eax+edi*4+0x2e],esi
  4165dd:	je     0x4165a6
  4165df:	jle    0x4165f6
  4165e1:	adc    al,0x50
  4165e3:	jno    0x41656e
  4165e5:	imul   edi
  4165e7:	and    DWORD PTR [edi],eax
  4165e9:	sub    ecx,DWORD PTR [edi]
  4165eb:	lods   eax,DWORD PTR ds:[esi]
  4165ec:	dec    ebp
  4165ed:	jae    0x4165cb
  4165ef:	jmp    0x4165fe
  4165f1:	add    bh,bl
  4165f3:	xchg   esi,eax
  4165f4:	call   0xcf00:0xd97640b
  4165fb:	int    0x4
  4165fd:	mov    ebx,0xd96cc
  416602:	inc    esp
  416603:	aad    0xb2
  416605:	enter  0xae0d,0xd
  416609:	push   ebp
  41660a:	push   esp
  41660b:	mov    dl,0xbd
  41660d:	push   edi
  41660e:	addr16 das 
  416610:	(bad)  
  416612:	iret   
  416613:	out    dx,al
  416614:	xchg   edi,eax
  416615:	add    BYTE PTR [edi+edi*2],cl
  416618:	stos   BYTE PTR es:[edi],al
  416619:	and    bl,BYTE PTR [ebx+0x73]
  41661c:	xchg   edx,eax
  41661d:	cwde   
  41661e:	rcl    BYTE PTR [edi-0x602edd3b],1
  416624:	out    dx,al
  416625:	inc    ebx
  416626:	inc    ebx
  416627:	jp     0x4165b3
  416629:	cwde   
  41662a:	aam    0x9e
  41662c:	clc    
  41662d:	or     eax,DWORD PTR [eax]
	...
  416637:	add    BYTE PTR [edi-0x4edd858d],ah
  41663d:	mov    esp,DWORD PTR [ebx-0x2f612a68]
  416643:	push   fs
  416645:	adc    eax,0x9ecc2bfb
  41664a:	pop    edx
  41664b:	and    al,BYTE PTR [edi+0x2203ebc2]
  416651:	or     ebx,DWORD PTR [eax-0x7a]
  416654:	mov    WORD PTR [esi+edx*4-0x34c7f746],fs
  41665b:	sbb    eax,0x1be34076
  416660:	fiadd  WORD PTR [eax-0x454addda]
  416666:	sbb    ebx,esi
  416668:	or     eax,0xb4a1a9f
  41666d:	lods   al,BYTE PTR ds:[esi]
  41666e:	jecxz  0x416673
  416670:	iret   
  416671:	jg     0x4166eb
  416673:	enter  0x3034,0x1b
  416677:	xor    bl,ah
  416679:	sahf   
  41667a:	cli    
  41667b:	test   DWORD PTR [ebx-0x3f671c55],esi
  416681:	or     al,0x21
  416683:	xor    BYTE PTR [eax+0x19f8c3a7],dl
  416689:	lahf   
  41668a:	data16 lahf 
  41668c:	and    al,0x80
  41668e:	pop    eax
  41668f:	or     ebx,DWORD PTR [edx+0x45]
  416692:	xlat   BYTE PTR ds:[ebx]
  416693:	mov    ah,0xe8
  416695:	mov    al,0xd7
  416697:	and    cl,bh
  416699:	add    cl,BYTE PTR ds:0x34
  41669f:	add    BYTE PTR [eax],al
  4166a1:	add    BYTE PTR [eax],al
  4166a3:	add    BYTE PTR [eax],al
  4166a5:	add    BYTE PTR [edi+0x3d65029e],bh
  4166ab:	lahf   
  4166ac:	icebp  
  4166ad:	jmp    0x3a3dab03
  4166b2:	scas   al,BYTE PTR es:[edi]
  4166b3:	adc    esp,eax
  4166b5:	sub    DWORD PTR [eax],0x528ef19e
  4166bb:	xchg   esi,eax
  4166bc:	or     edi,esp
  4166be:	popa   
  4166bf:	(bad)  [esi+0x26]
  4166c2:	mov    WORD PTR [esi+0x440610e6],ds
  4166c8:	call   0xcc133b0
  4166cd:	mov    BYTE PTR cs:[esi+0x7fcce90c],ah
  4166d4:	jg     0x416682
  4166d6:	in     al,0x4e
  4166d8:	icebp  
  4166d9:	aam    0xb8
  4166db:	xor    eax,0x9d8ad5e4
  4166e0:	icebp  
  4166e1:	repnz or al,0x13
  4166e4:	sbb    al,0x6a
  4166e6:	push   eax
  4166e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166e8:	or     al,0xb5
  4166ea:	ficomp DWORD PTR [esi+0x6db31177]
  4166f0:	out    dx,eax
  4166f1:	push   ds
  4166f2:	scas   al,BYTE PTR es:[edi]
  4166f3:	or     ebp,edx
  4166f5:	push   ss
  4166f6:	cmp    BYTE PTR [esi-0x62b8891c],ah
  4166fc:	icebp  
  4166fd:	repnz add edx,DWORD PTR [edi+edx*1]
  416701:	push   0x58
  416703:	mov    ds:0x9edf7d0c,al
  416708:	aas    
  416709:	add    eax,0x0
  41670e:	add    BYTE PTR [eax],al
  416710:	add    BYTE PTR [eax],al
  416712:	add    BYTE PTR [eax],al
  416714:	jnp    0x41671c
  416716:	push   ds
  416717:	jmp    0xf2150ee8
  41671c:	int3   
  41671d:	jg     0x416704
  41671f:	sahf   
  416720:	jecxz  0x4167a1
  416722:	dec    ecx
  416723:	imul   ebp,edi,0xc00789d
  416729:	(bad)  
  41672a:	jno    0x41676b
  41672c:	out    0xf5,al
  41672e:	or     eax,0x8ff65d0b
  416733:	or     edi,DWORD PTR ds:0xe66a01f6
  416739:	or     al,0x49
  41673b:	lock xchg esi,eax
  41673d:	jmp    0x416709
  41673f:	jae    0x4166e8
  416741:	and    esp,0x5d
  416744:	(bad)  
  416745:	pusha  
  416746:	repnz inc ebx
  416749:	ins    DWORD PTR es:[edi],dx
  41674a:	jmp    0xf2a2099f
  41674f:	mov    esp,DWORD PTR [ebp-0x40]
  416752:	push   esi
  416753:	leave  
  416754:	jne    0x41672c
  416756:	xchg   ah,ch
  416758:	aaa    
  416759:	inc    ebp
  41675a:	xchg   ecx,eax
  41675b:	(bad)  
  41675c:	stc    
  41675d:	pop    edi
  41675e:	pop    edx
  41675f:	push   esi
  416760:	push   esi
  416761:	fldcw  WORD PTR [ecx-0x14]
  416764:	sbb    eax,0x44f7f1c1
  416769:	or     ch,0xff
  41676c:	stc    
  41676d:	xor    eax,0x166414a
  416772:	xor    eax,DWORD PTR [eax]
  416774:	mov    DWORD PTR ds:0x1c7,eax
	...
  416782:	jbe    0x416705
  416784:	jg     0x41670b
  416786:	ret    0xf25e
  416789:	call   DWORD PTR [esi]
  41678b:	fsubr  st,st(1)
  41678d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41678e:	sbb    DWORD PTR [eax-0xe],esp
  416791:	or     esi,esi
  416793:	outs   dx,DWORD PTR ds:[esi]
  416794:	mov    BYTE PTR [edi+eiz*1-0x47cf37f],ah
  41679b:	je     0x41678c
  41679d:	(bad)  
  41679e:	cmp    DWORD PTR [edx-0x7d5e7bff],eax
  4167a4:	or     al,0x0
  4167a6:	stos   DWORD PTR es:[edi],eax
  4167a7:	push   es
  4167a8:	stos   BYTE PTR es:[edi],al
  4167a9:	dec    bh
  4167ab:	mov    ch,0x11
  4167ad:	dec    edi
  4167ae:	or     ah,dh
  4167b0:	adc    al,0xfd
  4167b2:	add    dh,al
  4167b4:	and    BYTE PTR [ecx-0x2c],al
  4167b7:	fst    QWORD PTR [ecx]
  4167b9:	sub    bh,cl
  4167bb:	pop    ds
  4167bc:	push   ebx
  4167bd:	mov    ds:0xea11ede9,eax
  4167c2:	cwde   
  4167c3:	mov    esp,0xcd53b602
  4167c8:	gs std 
  4167ca:	shl    ch,1
  4167cc:	mov    eax,0xc779b467
  4167d1:	call   DWORD PTR [ebx+0x2b]
  4167d4:	dec    esi
  4167d5:	std    
  4167d6:	mov    eax,0x28e7b81d
  4167db:	lahf   
  4167dc:	or     eax,0x1ce24c00
  4167e1:	lea    ecx,[edx+0x68]
  4167e4:	adc    bh,dh
	...
  4167ee:	add    BYTE PTR [eax],al
  4167f0:	cwde   
  4167f1:	(bad)  
  4167f2:	adc    dh,BYTE PTR [ebx+ebp*2+0x77fe1134]
  4167f9:	sub    eax,0x830f80fe
  4167ff:	mov    ds:0x45115d79,eax
  416804:	dec    esp
  416805:	push   esp
  416806:	clc    
  416807:	jno    0x41679c
  416809:	ins    DWORD PTR es:[edi],dx
  41680a:	push   ebx
  41680b:	repz popa 
  41680d:	gs adc edi,esp
  416810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416811:	xchg   esp,eax
  416812:	adc    bh,dh
  416814:	mov    BYTE PTR [ebx],ch
  416816:	push   eax
  416817:	std    
  416818:	dec    eax
  416819:	lea    ecx,[eax]
  41681b:	add    bh,cl
  41681d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681e:	mov    ds:0x50234a01,eax
  416823:	std    
  416824:	xor    BYTE PTR [ebp-0x6d9d0143],dl
  41682a:	paddd  mm4,QWORD PTR [eax]
  41682d:	jg     0x41680a
  41682f:	(bad)  
  416830:	mov    esp,0xf0ad29c
  416835:	mov    WORD PTR [edi+0x1b],ds
  416838:	or     BYTE PTR [ebx+eiz*8-0x3628bc7c],bl
  41683f:	push   ds
  416840:	stc    
  416841:	dec    ecx
  416842:	sub    eax,0x608ccf04
  416847:	sub    ebp,eax
  416849:	fwait
  41684a:	jecxz  0x4167dc
  41684c:	dec    ebx
  41684d:	cwde   
  41684e:	test   eax,0x1b2ed91e
  416853:	or     BYTE PTR [eax],al
	...
  41685d:	add    dh,cl
  41685f:	jg     0x416844
  416861:	sub    edx,esi
  416863:	and    bl,0x3
  416866:	aam    0xbf
  416868:	cli    
  416869:	xchg   DWORD PTR [ecx-0xdfc1c80],ecx
  41686f:	and    esp,0x3
  416872:	iret   
  416873:	mov    ch,BYTE PTR [edx+0x47]
  416876:	mov    al,ds:0x3c2be39b
  41687b:	and    ebx,0x3
  41687e:	jmp    DWORD PTR [edi]
  416880:	aas    
  416881:	xchg   edx,eax
  416882:	jo     0x9acff0d8
  416888:	dec    edx
  416889:	push   ds
  41688a:	or     BYTE PTR [eax+0x7fcf063d],ch
  416890:	inc    di
  416892:	aam    0x25
  416894:	jecxz  0x416826
  416896:	dec    ebx
  416897:	xchg   edi,eax
  416898:	sub    DWORD PTR [esi],ebx
  41689a:	pop    ecx
  41689b:	xor    BYTE PTR [ebx],bl
  41689d:	cmp    dl,cl
  41689f:	jg     0x416884
  4168a1:	nop
  4168a2:	push   ebx
  4168a3:	xchg   edi,eax
  4168a4:	add    DWORD PTR [esi],ebx
  4168a6:	inc    ecx
  4168a7:	xor    BYTE PTR [ebx],bl
  4168a9:	and    dh,dl
  4168ab:	call   0xc90c:0x150f09f2
  4168b2:	je     0x41689a
  4168b4:	inc    esp
  4168b5:	test   al,0xcc
  4168b7:	or     al,0x88
  4168b9:	loop   0x416874
  4168bb:	cdq    
  4168bc:	icebp  
  4168bd:	cmp    ebx,esp
  4168bf:	jnp    0x4168d2
  4168c1:	(bad)  
	...
  4168ca:	add    BYTE PTR [eax],al
  4168cc:	jmp    0xf199:0xe1ab980b
  4168d3:	sbb    eax,DWORD PTR [ebx-0x5d]
  4168d6:	push   0xe599d3de
  4168db:	ficomp DWORD PTR [ecx+0x4]
  4168de:	iret   
  4168df:	scas   eax,DWORD PTR es:[edi]
  4168e0:	ret    0x5c99
  4168e3:	je     0x416935
  4168e5:	xchg   esi,eax
  4168e6:	repnz sahf 
  4168e8:	mov    dl,0x4a
  4168ea:	in     al,0x92
  4168ec:	leave  
  4168ed:	cdq    
  4168ee:	icebp  
  4168ef:	pusha  
  4168f0:	dec    eax
  4168f1:	(bad)  
  4168f2:	repnz xchg dl,bl
  4168f5:	cdq    
  4168f6:	mov    bh,0x3d
  4168f8:	rcr    DWORD PTR [ecx-0x70ff890f],1
  4168fe:	repnz outs dx,BYTE PTR ds:[esi]
  416900:	ret    0xfca2
  416903:	(bad)  
  416904:	mov    ebx,0x37290599
  416909:	dec    ebp
  41690a:	fs pop ecx
  41690c:	pop    esi
  41690d:	aas    
  41690e:	or     al,0x41
  416910:	rol    BYTE PTR [ecx+0x223ce90c],1
  416916:	cld    
  416917:	mov    edx,0x7cf29a8d
  41691c:	neg    DWORD PTR [ecx+esi*8+0x29e8b32e]
  416923:	es mov edx,0xcc930b28
  416929:	and    eax,0xd6a0160c
  41692e:	repnz push cs
	...
  416938:	add    BYTE PTR [eax],al
  41693a:	loop   0x41695e
  41693c:	mov    BYTE PTR [eax],0x7e
  41693f:	mov    ebp,0x662669f1
  416944:	popa   
  416945:	pop    es
  416946:	ss jle 0x41693a
  416949:	mov    ch,0xf2
  41694b:	jns    0x41693f
  41694d:	(bad)  
  41694e:	(bad)  
  41694f:	jle    0x416966
  416951:	push   ecx
  416953:	jp     0x41690d
  416955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416956:	and    BYTE PTR [ebx-0xe],bh
  416959:	call   0x34017c
  41695e:	adc    DWORD PTR [ecx],esi
  416960:	std    
  416961:	(bad)  
  416962:	xor    DWORD PTR [ebx-0x17],edi
  416965:	ins    BYTE PTR es:[edi],dx
  416966:	add    al,0x7b
  416968:	repnz cld 
  41696a:	in     eax,0x3d
  41696c:	mov    ah,0xff
  41696e:	xor    DWORD PTR [ebx-0xe],edi
  416971:	repnz xor BYTE PTR [esi-0x4dc4f0f6],0xef
  416979:	call   DWORD PTR [ecx-0x25]
  41697c:	push   edx
  41697d:	leave  
  41697e:	rol    BYTE PTR gs:[esi-0x1ebeda14],cl
  416985:	push   eax
  416986:	mov    esi,0xf6fdd6eb
  41698b:	xor    esp,0x72
  41698e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41698f:	inc    eax
  416990:	repnz mov edx,esp
  416993:	or     al,0x69
  416995:	add    eax,0xe80c7d77
  41699a:	loope  0x416932
  41699c:	repnz inc DWORD PTR [eax]
	...
  4169a7:	add    BYTE PTR [esi],dl
  4169a9:	or     ah,bl
  4169ab:	nop
  4169ac:	inc    ecx
  4169ae:	cmc    
  4169af:	nop
  4169b0:	in     eax,dx
  4169b1:	dec    esi
  4169b2:	sub    DWORD PTR [eax+0x6b],0xbe000c7e
  4169b9:	ss adc edi,edi
  4169bc:	mov    cl,0xc
  4169be:	xchg   dl,dl
  4169c0:	iret   
  4169c1:	pop    ds
  4169c2:	retf   0x5fef
  4169c5:	dec    DWORD PTR [edx]
  4169c7:	add    edi,ecx
  4169c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169ca:	and    eax,0x1599d5a8
  4169cf:	mov    bh,ch
  4169d1:	ss test cl,dl
  4169d4:	push   esi
  4169d5:	in     al,0x15
  4169d7:	mov    bh,ch
  4169d9:	or     eax,0xa2a78f3a
  4169de:	or     BYTE PTR [eax],al
  4169e0:	iret   
  4169e1:	mov    cl,0x9b
  4169e3:	sti    
  4169e4:	jne    0x41698c
  4169e6:	and    eax,0xda6d153
  4169eb:	nop
  4169ec:	inc    esp
  4169ed:	cmc    
  4169ee:	adc    ecx,0x67185be8
  4169f4:	retf   
  4169f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169f6:	or     eax,0xb1ae700
  4169fb:	add    bh,cl
  4169fd:	lea    ecx,[ebp+0x73]
  416a00:	fistp  WORD PTR ds:0xa6378f3a
  416a06:	add    DWORD PTR [eax-0x31],0xef9c01
	...
  416a15:	add    BYTE PTR [edi-0x30fff4b4],ah
  416a1b:	sbb    eax,0x7ccf693a
  416a20:	or     BYTE PTR [edx-0x33],ch
  416a23:	lods   al,BYTE PTR ds:[esi]
  416a24:	or     eax,0xdaecc6a
  416a29:	add    bh,cl
  416a2b:	adc    ax,0x7f74
  416a2f:	sbb    eax,DWORD PTR ds:[ebx]
  416a32:	iret   
  416a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a34:	add    BYTE PTR [ebx+edi*2-0x1a],0x2
  416a39:	shl    dl,0xea
  416a3c:	push   ss
  416a3d:	je     0x416aa2
  416a3f:	imul   ebx,DWORD PTR [ebx+0xb7f67ef],0x9d7fcf01
  416a49:	mov    bh,0xb6
  416a4b:	jg     0x416a67
  416a4d:	xchg   ecx,eax
  416a4e:	xor    BYTE PTR [edi+0x7fcf0275],ah
  416a54:	inc    BYTE PTR [ebx-0x44]
  416a57:	mov    esp,DWORD PTR [ebx-0x5bec3255]
  416a5d:	add    edi,DWORD PTR [edi-0x59]
  416a60:	(bad)  
  416a62:	sbb    BYTE PTR [eax+0x7fa5045d],bl
  416a68:	pop    ebp
  416a69:	push   es
  416a6a:	jne    0x416aeb
  416a6c:	dec    ebp
  416a6d:	pop    es
  416a6e:	ja     0x416aef
  416a70:	jecxz  0x416a75
  416a72:	sets   BYTE PTR [eax]
  416a75:	adc    al,0xe8
  416a77:	out    0xe7,eax
  416a79:	add    eax,DWORD PTR [eax]
	...
  416a83:	add    bh,cl
  416a85:	push   es
  416a86:	and    DWORD PTR [eax],edx
  416a88:	mov    al,ds:0xc4ac4e13
  416a8d:	adc    esp,DWORD PTR [esp+eax*1]
  416a90:	out    0xcf,eax
  416a92:	out    0x3,eax
  416a94:	iret   
  416a95:	das    
  416a96:	or     ecx,DWORD PTR [eax]
  416a98:	cmp    eax,DWORD PTR [ecx-0x1d]
  416a9b:	sbb    al,BYTE PTR [ebx-0x74]
  416a9e:	fcomp  st(3)
  416aa1:	xchg   esi,eax
  416aa2:	jb     0x416a57
  416aa4:	test   eax,0x3c2b6f0d
  416aa9:	jl     0x416a8e
  416aab:	add    esi,edi
  416aad:	mov    ah,BYTE PTR [ebx]
  416aaf:	nop
  416ab0:	into   
  416ab1:	stos   BYTE PTR es:[edi],al
  416ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ab3:	sbb    al,BYTE PTR [ebx]
  416ab5:	xchg   esp,eax
  416ab6:	retf   
  416ab7:	mov    ebx,0x1ae340fc
  416abc:	add    ebx,DWORD PTR [eax+0x7fcb485b]
  416ac2:	jecxz  0x416a4a
  416ac4:	mov    WORD PTR [esp+ecx*1+0x4b1340c1],es
  416acb:	jmp    0xe94a3374
  416ad0:	int3   
  416ad1:	mov    cl,ah
  416ad3:	xchg   ebp,eax
  416ad4:	xor    bl,BYTE PTR [edi]
  416ad6:	neg    DWORD PTR [edx+0x141970b]
  416adc:	xchg   ebx,eax
  416add:	or     BYTE PTR [ecx+ebp*8],0xc1
  416ae1:	mov    edi,0x977ada78
  416ae6:	arpl   cx,bp
	...
  416af0:	add    BYTE PTR [eax],al
  416af2:	lds    ecx,FWORD PTR [ebx]
  416af4:	hlt    
  416af5:	out    dx,al
  416af6:	dec    eax
  416af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416af8:	fs mov bl,0x3
  416afb:	inc    eax
  416afc:	or     al,0x53
  416afe:	rcl    DWORD PTR [esi-0x64af2924],cl
  416b04:	in     al,0x51
  416b06:	hlt    
  416b07:	xchg   ebp,eax
  416b08:	icebp  
  416b09:	mov    BYTE PTR [eax-0x59],0xe4
  416b0d:	cmp    esp,esp
  416b0f:	xchg   ebp,eax
  416b10:	icebp  
  416b11:	mov    dh,0x50
  416b13:	(bad)  
  416b14:	in     al,0x41
  416b16:	aam    0x95
  416b18:	icebp  
  416b19:	mov    al,0x8a
  416b1b:	sub    eax,DWORD PTR [ebp-0x133dad73]
  416b21:	cmp    bh,BYTE PTR [ebx+0x2e]
  416b24:	fs sbb al,0xd6
  416b27:	push   esi
  416b28:	or     al,0x81
  416b2a:	pop    ecx
  416b2b:	jg     0x416afa
  416b2d:	jle    0x416b81
  416b2f:	push   ebx
  416b30:	dec    edi
  416b31:	and    cl,BYTE PTR [esi+edx*4+0x2c5f5f1]
  416b38:	xor    al,al
  416b3a:	cmp    DWORD PTR [edi],0xc
  416b3d:	jmp    0x2966e69b
  416b42:	inc    edx
  416b43:	(bad)  
  416b44:	int    0x26
  416b46:	cmp    BYTE PTR [edx-0x7d99fff4],bl
  416b4c:	or     al,0xc7
  416b4e:	xor    edi,DWORD PTR [edx-0xf]
  416b51:	push   DWORD PTR [esi-0x7e]
  416b54:	leave  
  416b55:	inc    ebp
	...
  416b5e:	add    BYTE PTR [eax],al
  416b60:	call   0x483f:0x66000c7b
  416b67:	hlt    
  416b68:	or     BYTE PTR ss:[eax+eax*1],0xf1
  416b6d:	(bad)  
  416b6e:	loope  0x416b70
  416b70:	or     BYTE PTR es:[ecx*4-0x72be8d9d],0x73
  416b79:	xchg   BYTE PTR [ecx-0x73],al
  416b7c:	jae    0x416bdc
  416b7e:	inc    ecx
  416b7f:	push   0x29
  416b81:	std    
  416b82:	dec    eax
  416b83:	cld    
  416b84:	(bad)  
  416b85:	in     eax,0xb
  416b87:	push   0xfffffff5
  416b89:	jecxz  0x416b7c
  416b8b:	inc    BYTE PTR [ebx]
  416b8d:	int    0x46
  416b8f:	inc    ecx
  416b90:	out    0x8,al
  416b92:	dec    ecx
  416b93:	call   0x12b58fd
  416b98:	mov    ds:0xe7d8b8a,al
  416b9d:	fs icebp 
  416b9f:	jmp    esi
  416ba1:	add    al,0x7e
  416ba3:	push   DWORD PTR [ebx+0x6e458277]
  416ba9:	cld    
  416baa:	jo     0x416ba4
  416bac:	mov    dh,0x5
  416bae:	push   esp
  416baf:	mov    ebp,ebx
  416bb1:	jae    0x416b99
  416bb3:	aas    
  416bb4:	dec    ecx
  416bb5:	in     al,dx
  416bb6:	imul   ebp,eax,0xfff2aa97
  416bbc:	das    
  416bbd:	(bad)  
  416bbe:	sar    edi,1
  416bc0:	push   ebp
  416bc1:	imul   ebx,DWORD PTR [edx],0x29
  416bc7:	add    BYTE PTR [eax],al
  416bc9:	add    BYTE PTR [eax],al
  416bcb:	add    BYTE PTR [eax],al
  416bcd:	add    BYTE PTR [ecx],ch
  416bcf:	js     0x416bd7
  416bd1:	shl    BYTE PTR [edx-0x30ba7b64],0x42
  416bd8:	lahf   
  416bd9:	or     esp,DWORD PTR [edi+0x76]
  416bdc:	cmc    
  416bdd:	(bad)  
  416bde:	jo     0x416c1e
  416be0:	sbb    bh,0x58
  416be3:	out    0x5,eax
  416be5:	(bad)  
  416be6:	fiadd  DWORD PTR [edx-0x7c]
  416be9:	aas    
  416bea:	shl    DWORD PTR [ebp-0x3e],cl
  416bed:	mov    esi,0x8f0de7dc
  416bf2:	iret   
  416bf3:	dec    ecx
  416bf4:	push   esp
  416bf5:	jb     0x416b85
  416bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf8:	mov    dl,al
  416bfa:	ret    
  416bfb:	test   edx,ecx
  416bfd:	jmp    0x416c4b
  416bff:	cld    
  416c00:	sub    edi,edi
  416c02:	mov    ds:0x23741441,eax
  416c07:	mov    ds,edi
  416c09:	pop    eax
  416c0a:	test   bh,ah
  416c0c:	or     eax,0x89a8ac7
  416c11:	add    bh,cl
  416c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c14:	mov    BYTE PTR [edi+esi*8-0x40],bh
  416c18:	or     BYTE PTR [eax],al
  416c1a:	iret   
  416c1b:	sub    ecx,DWORD PTR [ebx]
  416c1d:	jmp    0xfe5b29b5
  416c22:	dec    esp
  416c23:	push   esp
  416c24:	adc    al,0xff
  416c26:	pop    esp
  416c27:	lahf   
  416c28:	sbb    dh,BYTE PTR [ebx+ebx*8-0x1b]
  416c2c:	sti    
  416c2d:	pop    eax
  416c2e:	test   BYTE PTR [edi+0x8],ah
  416c31:	mov    eax,0x0
  416c36:	add    BYTE PTR [eax],al
  416c38:	add    BYTE PTR [eax],al
  416c3a:	add    BYTE PTR [eax],al
  416c3c:	into   
  416c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c3e:	or     eax,0x4de02400
  416c43:	push   esp
  416c44:	inc    esp
  416c45:	adc    cl,BYTE PTR [ebp-0x5e86643d]
  416c4b:	dec    edi
  416c4c:	pop    es
  416c4d:	outs   dx,DWORD PTR ds:[esi]
  416c4e:	mov    ds:0x15a70fff,al
  416c53:	jno    0x416c23
  416c55:	jmp    0x8013ee73
  416c5a:	je     0x416c27
  416c5c:	jo     0x118fc45
  416c62:	sbb    DWORD PTR [ecx+0x5],edi
  416c65:	aas    
  416c66:	jecxz  0x416c6b
  416c68:	cli    
  416c69:	jge    0x416c89
  416c6b:	inc    esp
  416c6c:	or     DWORD PTR [ecx],edi
  416c6e:	cmp    al,0x43
  416c70:	push   ebp
  416c71:	jb     0x416ced
  416c73:	xchg   ebx,eax
  416c74:	jo     0x8010e1c6
  416c7a:	jecxz  0x416ca7
  416c7c:	pop    ebp
  416c7d:	data16 adc dl,BYTE PTR [edi]
  416c80:	dec    ebp
  416c81:	push   edx
  416c82:	es xchg ebx,eax
  416c84:	(bad)  
  416c85:	jg     0x416c6a
  416c87:	(bad)  
  416c88:	fst    DWORD PTR [esi+esi*2+0x264a29ff]
  416c8f:	xchg   ebx,eax
  416c90:	(bad)  
  416c91:	jg     0x416c9e
  416c93:	or     ebp,0x7f
  416c96:	jecxz  0x416ca2
  416c98:	(bad)  
  416c9a:	loopne 0x416cc8
  416c9c:	jbe    0x416d1c
  416c9e:	jecxz  0x416ca3
	...
  416ca8:	add    BYTE PTR [eax],al
  416caa:	or     BYTE PTR [edx],bh
  416cac:	xlat   BYTE PTR ds:[ebx]
  416cad:	add    ecx,edi
  416caf:	jg     0x416c94
  416cb1:	mov    BYTE PTR [ebx-0x1755ec6d],cl
  416cb7:	and    eax,0x7b5d16e5
  416cbc:	dec    ebp
  416cbd:	add    al,0xd8
  416cbf:	movntq QWORD PTR [esi],mm2
  416cc2:	mov    ebx,0xc8c53ef2
  416cc7:	xchg   BYTE PTR [ebx+0x6ca8cb8f],ah
  416ccd:	add    ecx,edi
  416ccf:	jg     0x416c53
  416cd1:	xchg   edx,eax
  416cd2:	int3   
  416cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cd4:	imul   ebx,esi,0xffffffa9
  416cd7:	xchg   ebx,eax
  416cd8:	jl     0x416c9a
  416cda:	cwde   
  416cdb:	xchg   ebx,eax
  416cdc:	or     al,0xfa
  416cde:	cwde   
  416cdf:	fwait
  416ce0:	xchg   ecx,eax
  416ce1:	jmp    0x416caf
  416ce3:	jg     0x416d41
  416ce5:	pop    di
  416ce7:	mov    ebx,DWORD PTR [esi+ebx*2+0x5d]
  416ceb:	jg     0x416d51
  416ced:	jmp    0xc14decc5
  416cf2:	int3   
  416cf3:	jnp    0x416d01
  416cf5:	jmp    0xe94f59ae
  416cfa:	int3   
  416cfb:	xchg   ah,cl
  416cfd:	mov    ebp,0x2d47ba65
  416d02:	int3   
  416d03:	jg     0x416d11
  416d05:	jmp    0xba31a961
  416d0a:	jbe    0x416c9f
  416d0c:	arpl   bx,bp
	...
  416d16:	add    BYTE PTR [eax],al
  416d18:	loope  0x416d25
  416d1a:	hlt    
  416d1b:	or     esp,0xffffff92
  416d1e:	jge    0x416d0d
  416d20:	shr    DWORD PTR [ebx-0x71],0xb2
  416d24:	or     edx,DWORD PTR [ebx-0x76b7d6fa]
  416d2a:	icebp  
  416d2b:	je     0x416ce1
  416d2d:	call   0x19e5:0x91e3fe87
  416d34:	fimul  DWORD PTR [ebx]
  416d36:	hlt    
  416d37:	rcl    DWORD PTR [esi+0x6a],0xf1
  416d3b:	into   
  416d3c:	call   0x47ba:0xd3283192
  416d43:	mov    ebp,0xe90c7fcb
  416d48:	push   ecx
  416d49:	cmp    al,0xf0
  416d4b:	sbb    DWORD PTR ds:0x7beb6393,esp
  416d51:	sub    BYTE PTR [esi+ebx*4],cl
  416d54:	pop    esi
  416d55:	jle    0x416d48
  416d57:	cld    
  416d58:	inc    ecx
  416d59:	inc    esi
  416d5a:	dec    ebx
  416d5b:	jmp    0x432d27
  416d60:	cmp    ah,BYTE PTR [edi]
  416d62:	icebp  
  416d63:	push   DWORD PTR [esi-0x7927b7ad]
  416d69:	jle    0x416d77
  416d6b:	add    BYTE PTR [ecx-0x2e],ch
  416d6e:	aad    0x1
  416d70:	jbe    0x416df0
  416d72:	or     al,0xff
  416d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d75:	xchg   edx,eax
  416d76:	add    BYTE PTR [ebp+0x6],0x6d
  416d7a:	jle    0x416d84
	...
  416d84:	add    BYTE PTR [eax],al
  416d86:	adc    ebx,edx
  416d88:	in     eax,dx
  416d89:	(bad)  
  416d8a:	cmp    esp,DWORD PTR [esi-0xf]
  416d8d:	push   DWORD PTR [esi+0x7e]
  416d90:	leave  
  416d91:	inc    ebp
  416d92:	adc    bh,BYTE PTR [esp+ecx*1+0x0]
  416d96:	push   bx
  416d98:	dec    eax
  416d99:	lock ss jle 0x416da9
  416d9d:	add    cl,ch
  416d9f:	sar    ch,cl
  416da1:	add    BYTE PTR [esi],ah
  416da3:	jle    0x416db1
  416da5:	lea    ebp,[ebx+0x56]
  416da8:	inc    ecx
  416da9:	jmp    FWORD PTR [ebx+0x35e5e96a]
  416daf:	jle    0x416dbd
  416db1:	or     esp,esi
  416db3:	out    dx,eax
  416db4:	sbb    DWORD PTR [ebx+0x73f182a3],eax
  416dba:	jmp    FWORD PTR [edx+0x78]
  416dbd:	hlt    
  416dbe:	jno    0x416d51
  416dc0:	ret    0xa748
  416dc3:	jnp    0x416d8e
  416dc5:	inc    ebp
  416dc6:	cmp    bh,BYTE PTR [ebp+0xc]
  416dc9:	add    dh,dh
  416dcb:	data16 or al,bh
  416dce:	stos   DWORD PTR es:[edi],eax
  416dcf:	dec    edi
  416dd0:	icebp  
  416dd1:	jmp    esi
  416dd3:	jge    0x416dc6
  416dd5:	jne    0x416df9
  416dd7:	imul   ebx,DWORD PTR [eax],0xffffff91
  416dda:	std    
  416ddb:	mov    esp,0x1760af1
  416de0:	adc    al,ch
  416de2:	iret   
  416de3:	les    edx,FWORD PTR [esi]
  416de5:	(bad)  
  416de6:	mov    al,0x26
  416de8:	fimul  DWORD PTR [eax+0x0]
  416dee:	add    BYTE PTR [eax],al
  416df0:	add    BYTE PTR [eax],al
  416df2:	add    BYTE PTR [eax],al
  416df4:	adc    al,0x68
  416df6:	or     BYTE PTR [eax],al
  416df8:	sbb    ebx,DWORD PTR [ecx+0x5e461418]
  416dfe:	int    0xff
  416e00:	mov    DWORD PTR [eax+ecx*2+0xea70e47],ebx
  416e07:	add    bh,cl
  416e09:	mov    WORD PTR es:[ebx+eiz*4-0x59],?
  416e0e:	or     DWORD PTR [edx],0xfe01ac70
  416e14:	loop   0x416e50
  416e16:	and    eax,0xda6cc8b
  416e1b:	jmp    edx
  416e1d:	dec    edx
  416e1e:	and    eax,0xda6ce73
  416e23:	cld    
  416e24:	cld    
  416e25:	push   si
  416e27:	inc    BYTE PTR [eax+0x72]
  416e2a:	sbb    cl,dh
  416e2c:	imul   ebp,DWORD PTR [edi-0x3ab5f110],0xe28fe18
  416e36:	hlt    
  416e37:	or     al,BYTE PTR [edx+eiz*4]
  416e3a:	jb     0x416ea2
  416e3c:	sbb    DWORD PTR [edx-0x593148e3],ecx
  416e42:	or     eax,0x2f3da800
  416e47:	ret    0xd9a
  416e4a:	sub    al,0x82
  416e4c:	adc    ebp,DWORD PTR [ebx-0x6c98a848]
  416e52:	pop    es
  416e53:	inc    ecx
  416e54:	iret   
  416e55:	mov    esi,0x9a
	...
  416e62:	or     al,0xd2
  416e64:	xchg   edx,eax
  416e65:	push   eax
  416e67:	or     al,BYTE PTR es:[eax]
  416e6a:	iret   
  416e6b:	mov    esi,0x7fc820de
  416e70:	stos   BYTE PTR es:[edi],al
  416e71:	sbb    al,0xc3
  416e73:	mov    dl,BYTE PTR [edx-0x3d3e4fed]
  416e79:	adc    dh,BYTE PTR [ecx-0x56147e59]
  416e7f:	nop
  416e80:	inc    BYTE PTR [ebx+0x1c]
  416e83:	ins    DWORD PTR es:[edi],dx
  416e84:	fwait
  416e85:	sub    eax,0xff7a90f0
  416e8a:	push   eax
  416e8b:	or     ebp,ebp
  416e8d:	dec    edx
  416e8e:	rol    DWORD PTR ds:0x7f80c4b9,cl
  416e94:	jecxz  0x416e99
  416e96:	iret   
  416e97:	daa    
  416e98:	in     al,0x4
  416e9a:	iret   
  416e9b:	jg     0x416ee8
  416e9d:	ret    0x90c2
  416ea0:	dec    edx
  416ea1:	lea    ecx,[si]
  416ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ea5:	add    edx,DWORD PTR [eax-0x31fac8c6]
  416eab:	jg     0x416e90
  416ead:	adc    BYTE PTR [ebx-0x4ed4c6d],0xbc
  416eb4:	xchg   esi,eax
  416eb5:	les    edi,FWORD PTR [eax]
  416eb7:	cwde   
  416eb8:	fwait
  416eb9:	add    eax,0x43ee7fcf
  416ebe:	mov    ds:0xdd90a6a,eax
  416ec3:	or     al,0xa4
  416ec5:	add    eax,DWORD PTR [eax]
	...
  416ecf:	add    BYTE PTR [edi],ah
  416ed1:	adc    cl,0x12
  416ed4:	adc    DWORD PTR [eax+0x3e7d46e8],edi
  416eda:	jecxz  0x416edf
  416edc:	iret   
  416edd:	jg     0x416ec2
  416edf:	sbb    ebx,DWORD PTR [edx-0x17ed258d]
  416ee5:	push   ecx
  416ee6:	cld    
  416ee7:	adc    ch,cl
  416ee9:	es adc ebx,ecx
  416eec:	(bad)  
  416eed:	jg     0x416eca
  416eef:	cmp    ebx,esp
  416ef1:	(bad)  
  416ef2:	or     al,0xb6
  416ef4:	xchg   ebx,eax
  416ef5:	mov    ebp,0x3ee86257
  416efa:	push   esp
  416efb:	adc    DWORD PTR [ecx],ecx
  416efd:	or     DWORD PTR [ebx-0x17],0xaa0b10c4
  416f04:	fstp   QWORD PTR [eax]
  416f06:	or     al,0x81
  416f08:	adc    eax,DWORD PTR [eax-0x70eb16f4]
  416f0e:	icebp  
  416f0f:	jmp    0xee1027e0
  416f14:	int3   
  416f15:	das    
  416f16:	push   esp
  416f17:	add    DWORD PTR [ebp-0x2b16b480],edi
  416f1d:	adc    BYTE PTR [ebx],cl
  416f1f:	sub    bl,ch
  416f21:	es mov ebp,0xe98f8beb
  416f27:	adc    ebx,0x6e510c7f
  416f2d:	mov    ?,ecx
  416f2f:	ds mov ah,0x37
  416f32:	div    DWORD PTR [esi]
	...
  416f3c:	add    BYTE PTR [eax],al
  416f3e:	mov    ebp,0xdd36e1a6
  416f43:	(bad)  
  416f44:	in     al,0x40
  416f46:	aam    0x8d
  416f48:	icebp  
  416f49:	push   0x1f
  416f4b:	stc    
  416f4c:	aas    
  416f4d:	test   al,0xcc
  416f4f:	jg     0x416fc9
  416f51:	lock push ecx
  416f53:	dec    esp
  416f54:	xor    DWORD PTR [edx+0x75f18f0b],0xffffffc6
  416f5b:	mov    ss,WORD PTR [edi]
  416f5d:	pusha  
  416f5e:	push   ecx
  416f5f:	inc    eax
  416f60:	or     al,0x26
  416f62:	xlat   BYTE PTR ds:[ebx]
  416f63:	mov    esi,0x80cb2844
  416f68:	or     al,0xe9
  416f6a:	dec    esp
  416f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f6c:	sbb    ebp,edx
  416f6e:	fimul  WORD PTR [ebp-0x72260c1c]
  416f74:	icebp  
  416f75:	add    BYTE PTR ds:0xe36859d4,dh
  416f7b:	or     DWORD PTR [ebx+0x0],0x1e
  416f7f:	test   BYTE PTR [ebx+eax*8],0x79
  416f83:	imul   edi,DWORD PTR [ecx],0x1
  416f86:	mov    dh,0x82
  416f88:	mov    bl,0x7
  416f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f8b:	or     BYTE PTR [ebx+esi*1],0x74
  416f8f:	push   0x863c83fc
  416f94:	ja     0x416f98
  416f96:	cmp    eax,0x3ee9e585
  416f9b:	add    dh,bl
  416f9d:	call   FWORD PTR [ecx]
  416f9f:	ins    BYTE PTR es:[edi],dx
  416fa0:	jle    0x416f9c
	...
  416faa:	add    BYTE PTR [eax],al
  416fac:	stc    
  416fad:	jo     0x417012
  416faf:	add    BYTE PTR [esi],bl
  416fb1:	scas   eax,DWORD PTR es:[edi]
  416fb2:	or     al,0x0
  416fb4:	dec    si
  416fb6:	repnz and eax,0x4d012e
  416fbc:	sbb    DWORD PTR [edi-0x7dc87ebb],esp
  416fc2:	icebp  
  416fc3:	and    eax,0x4d0136
  416fc8:	cdq    
  416fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fca:	pop    ebp
  416fcb:	xor    DWORD PTR [edi-0x7e],0x10e25f1
  416fd2:	dec    ebp
  416fd3:	add    cl,bl
  416fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fd6:	push   ebp
  416fd7:	and    DWORD PTR [edi-0x7e],0x15625f1
  416fde:	dec    ebp
  416fdf:	add    cl,cl
  416fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fe2:	ins    DWORD PTR es:[edi],dx
  416fe3:	and    DWORD PTR [edi-0x7e],0x14e25f1
  416fea:	dec    ebp
  416feb:	add    cl,bh
  416fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fee:	xor    DWORD PTR gs:[edi-0x69da0e7d],0xcf004d02
  416ff9:	mov    ch,0xea
  416ffb:	jae    0x41704b
  416ffd:	push   edi
  416ffe:	or     bh,bh
  417000:	stos   BYTE PTR es:[edi],al
  417001:	inc    eax
  417002:	lea    eax,[eax-0x31]
  417005:	int    0xea
  417007:	jnp    0x417057
  417009:	push   edi
  41700a:	or     bh,bh
  41700c:	repnz push ss
  41700e:	mov    es,WORD PTR [eax+0x0]
	...
  417019:	add    bh,cl
  41701b:	in     eax,0xea
  41701d:	or     DWORD PTR [esi+0x58],0x8
  417021:	(bad)  
  417022:	jmp    0xeafd:0xcf408e1e
  417029:	mov    ecx,DWORD PTR [esi+0x58]
  41702c:	or     bh,bh
  41702e:	repnz mov es,WORD PTR es:[eax-0x31]
  417033:	adc    eax,0x584e93ea
  417038:	or     bh,bh
  41703a:	stos   BYTE PTR es:[edi],al
  41703b:	dec    BYTE PTR [esi-0x15d230c0]
  417041:	fwait
  417042:	dec    esi
  417043:	fmul   DWORD PTR ds:0x8ef6b2ff
  417049:	inc    eax
  41704a:	iret   
  41704b:	inc    ebp
  41704c:	jmp    0xaaff:0xdd84ea3
  417053:	dec    BYTE PTR [esi-0x15a230c0]
  417059:	stos   DWORD PTR es:[edi],eax
  41705a:	dec    esi
  41705b:	fmul   DWORD PTR ds:0x8e26f2ff
  417061:	inc    eax
  417062:	iret   
  417063:	jne    0x41704f
  417065:	mov    bl,0x4e
  417067:	fmul   DWORD PTR ds:0x8e3eeaff
  41706d:	inc    eax
  41706e:	iret   
  41706f:	(bad)  
  417070:	out    0xbb,eax
  417072:	dec    esi
  417073:	fmul   DWORD PTR ds:0x8e56b2ff
  417079:	inc    eax
  41707a:	iret   
  41707b:	jg     0x417067
  41707d:	jmp    0x417082
  417082:	add    BYTE PTR [eax],al
  417084:	add    BYTE PTR [eax],al
  417086:	add    BYTE PTR [eax],al
  417088:	or     al,0xff
  41708a:	and    al,0x4
  41708c:	lock bound ebp,QWORD PTR [ebx-0x3d80707b]
  417093:	jmp    0x4666fac
  417098:	fsub   DWORD PTR [edx-0x6d]
  41709b:	test   DWORD PTR [edi-0x63164581],ecx
  4170a1:	(bad)  
  4170a2:	and    al,0x4
  4170a4:	shl    BYTE PTR [edx-0x35],0x85
  4170a8:	jo     0xfed65a40
  4170ae:	and    al,0x4
  4170b0:	test   al,0x62
  4170b2:	add    DWORD PTR [ebp-0x16757ff1],0xffffffac
  4170b9:	(bad)  
  4170ba:	and    al,0x4
  4170bc:	nop
  4170bd:	bound  ecx,QWORD PTR [ebx+0x62800f85]
  4170c3:	jmp    0x3e66f3c
  4170c8:	js     0x41712c
  4170ca:	push   ebx
  4170cb:	test   DWORD PTR [edi],ecx
  4170cd:	sbb    BYTE PTR [edx-0x17],0x5c
  4170d1:	(bad)  
  4170d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d3:	add    esp,DWORD PTR [eax+0x62]
  4170d6:	dec    ebx
  4170d7:	test   DWORD PTR [edi],ecx
  4170d9:	xor    BYTE PTR [edx],0xe9
  4170dc:	push   esp
  4170dd:	(bad)  
  4170de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170df:	add    ecx,DWORD PTR [eax+0x62]
  4170e2:	jecxz  0x417065
  4170e4:	(bad)  
  4170e5:	jg     0x417111
  4170e7:	jmp    0x3e672b8
	...
  4170f4:	add    BYTE PTR [eax],al
  4170f6:	xor    BYTE PTR [edx-0x15],ah
  4170f9:	or     DWORD PTR [edi-0x2b16fd81],0x1803a501
  417103:	(bad)  
  417105:	or     DWORD PTR [edi-0x809f381],0xcca88e6f
  41710f:	mov    WORD PTR [edi],fs
  417111:	add    eax,0xde0c3f4d
  417116:	out    0x6b,eax
  417118:	mov    gs,WORD PTR [eax]
  41711a:	ror    DWORD PTR [edi+eiz*1+0xc3f4d05],cl
  417121:	(bad)  
  417122:	out    0x63,eax
  417124:	mov    gs,WORD PTR [eax]
  417126:	retf   
  417127:	mov    WORD PTR [edi],fs
  417129:	add    eax,0xae0c404d
  41712e:	mov    bh,0x5b
  417130:	mov    gs,WORD PTR [eax]
  417132:	ror    DWORD PTR [edx+0x404ee127],cl
  417138:	or     al,0x96
  41713a:	mov    bh,0x4b
  41713c:	mov    gs,WORD PTR [eax]
  41713e:	retf   
  41713f:	mov    ah,BYTE PTR [edi]
  417141:	sub    eax,0x7e0c404d
  417146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417147:	inc    ebx
  417148:	mov    gs,WORD PTR [eax]
  41714a:	ror    DWORD PTR [edx+0x404d1d27],cl
  417150:	or     al,0x66
  417152:	cmp    ecx,DWORD PTR [bp-0x3358]
  417157:	mov    ah,BYTE PTR [edi]
  417159:	mov    ebp,0x0
  41715e:	add    BYTE PTR [eax],al
  417160:	add    BYTE PTR [eax],al
  417162:	add    BYTE PTR [eax],al
  417164:	dec    esi
  417165:	inc    eax
  417166:	or     al,0x4e
  417168:	ja     0x41719d
  41716a:	mov    gs,WORD PTR [eax-0x62d87534]
  417170:	dec    esi
  417171:	inc    eax
  417172:	or     al,0x36
  417174:	aaa    
  417175:	sub    ecx,DWORD PTR [esi+0x278acca8]
  41717b:	lea    ecx,[esi+0x40]
  41717e:	or     al,0x1e
  417180:	daa    
  417181:	and    ecx,DWORD PTR [esi+0x278acca8]
  417187:	cdq    
  417188:	dec    esi
  417189:	inc    eax
  41718a:	or     al,0x0
  41718c:	rcl    DWORD PTR [edi+0x7f678279],1
  417192:	icebp  
  417193:	and    eax,0x4d0082
  417198:	icebp  
  417199:	mov    ds:0x83a7828d,al
  41719e:	icebp  
  41719f:	and    eax,0x4cfd7e
  4171a4:	add    DWORD PTR [ebx-0x7c487d7b],esp
  4171aa:	icebp  
  4171ab:	and    eax,0x4cfd76
  4171b0:	adc    DWORD PTR [ebx-0x7c087d63],esp
  4171b6:	icebp  
  4171b7:	and    eax,0x4cfe1e
  4171bc:	jno    0x417160
  4171be:	xchg   ecx,eax
  4171bf:	and    bh,0x83
  4171c2:	icebp  
  4171c3:	and    eax,0x4cfe1a
	...
  4171d0:	add    BYTE PTR [eax],al
  4171d2:	push   ecx
  4171d3:	mov    ds:0x83e782a9,al
  4171d8:	icebp  
  4171d9:	and    eax,0x4cfe02
  4171de:	add    DWORD PTR [ebx-0x7c487d5f],esp
  4171e4:	icebp  
  4171e5:	and    eax,0x4cfd5a
  4171ea:	adc    DWORD PTR [ebx+0x7e3782b9],esp
  4171f0:	icebp  
  4171f1:	and    eax,0x4cfd52
  4171f6:	adc    DWORD PTR [ebx+0x7e2782b1],esp
  4171fc:	icebp  
  4171fd:	and    eax,0x4cfdfa
  417202:	icebp  
  417203:	mov    ds:0x7e6782c5,al
  417208:	icebp  
  417209:	and    eax,0x4cfdf6
  41720e:	iret   
  41720f:	sbb    eax,0x15cb23c4
  417214:	add    BYTE PTR [ecx],al
  417216:	call   0xd98:0xcf634590
  41721d:	ret    0x98d3
  417220:	mov    edi,?
  417222:	retf   
  417223:	sbb    esi,ebp
  417225:	mov    bh,0xcd
  417227:	cwde   
  417228:	or     eax,0xda40d00
  41722d:	and    edi,0xffffff9f
  417230:	add    BYTE PTR [edi],0x27
  417233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417234:	or     eax,0x0
  417239:	add    BYTE PTR [eax],al
  41723b:	add    BYTE PTR [eax],al
  41723d:	add    BYTE PTR [eax],al
  41723f:	add    bh,cl
  417241:	(bad)  
  417242:	or     DWORD PTR [eax],eax
  417244:	dec    esp
  417245:	sar    ch,0x7c
  417248:	xlat   BYTE PTR ds:[ebx]
  417249:	push   cs
  41724a:	pop    es
  41724b:	add    bh,cl
  41724d:	xchg   esi,eax
  41724e:	dec    ebx
  41724f:	add    ecx,edi
  417251:	adc    eax,0x8f321f05
  417256:	inc    ebp
  417257:	pop    es
  417258:	iret   
  417259:	xchg   esi,eax
  41725a:	or     eax,0x8c96cbc2
  41725f:	test   DWORD PTR [edi],0xc5b7f084
  417265:	xchg   esi,eax
  417266:	or     eax,0xd9b8d00
  41726b:	cmp    eax,0xd974f
  417270:	cli    
  417271:	mov    es,WORD PTR [ebp+0xb]
  417274:	iret   
  417275:	xchg   esi,eax
  417276:	or     eax,0xc296d3c2
  41727b:	dec    edi
  41727d:	xchg   esi,eax
  41727e:	or     eax,0xeffec77d
  417283:	call   DWORD PTR [eax-0x69]
  417286:	dec    ebx
  417287:	add    ecx,edi
  417289:	xchg   ebx,eax
  41728a:	or     eax,0x8296cf02
  41728f:	pop    es
  417290:	ja     0x417212
  417292:	repz add ecx,edi
  417295:	jg     0x4172bc
  417297:	pop    es
  417298:	iret   
  417299:	dec    edx
  41729a:	jecxz  0x4172a3
  41729c:	iret   
  41729d:	jg     0x41721f
  41729f:	sti    
  4172a0:	pusha  
  4172a1:	outs   dx,BYTE PTR ds:[esi]
  4172a2:	jecxz  0x4172a7
	...
  4172ac:	add    BYTE PTR [eax],al
  4172ae:	iret   
  4172af:	mov    ebp,0x7fca03e7
  4172b4:	jmp    0x4172b9
  4172b6:	iret   
  4172b7:	or     ch,bl
  4172b9:	dec    ebx
  4172ba:	fdivr  QWORD PTR [edi-0x1d]
  4172bd:	add    ecx,DWORD PTR ds:0xe8c8e384
  4172c3:	js     0x4172a8
  4172c5:	add    esp,DWORD PTR [edx+0x77]
  4172c8:	repnz fmul DWORD PTR [eax+0x7fcc45e3]
  4172d0:	lock add ebp,edi
  4172d3:	jg     0x4172b8
  4172d5:	mov    al,cl
  4172d7:	(bad)  
  4172d8:	fild   DWORD PTR [ebx]
  4172da:	iret   
  4172db:	jg     0x417282
  4172dd:	add    bh,cl
  4172df:	dec    edx
  4172e0:	jecxz  0x4172a5
  4172e2:	test   al,0x88
  4172e4:	sbb    ah,bh
  4172e6:	pop    eax
  4172e7:	gs jecxz 0x4172ed
  4172ea:	iret   
  4172eb:	mov    ebp,0x7fd203df
  4172f0:	arpl   WORD PTR [edi+ecx*8],ax
  4172f3:	or     ch,bl
  4172f5:	dec    ebx
  4172f6:	in     al,0x7f
  4172f8:	jecxz  0x4172fd
  4172fa:	lea    eax,[ebx+0x4a87d6e3]
  417300:	jecxz  0x417305
  417302:	into   
  417303:	jg     0x4172ef
  417305:	push   0xfc8ffa8f
  41730a:	mov    edx,0xcc4624f4
  41730f:	jg     0x417377
  417311:	test   DWORD PTR [eax],eax
	...
  41731b:	add    ah,ah
  41731d:	or     DWORD PTR [ecx+ebp*8],0xffffffcc
  417321:	mov    BYTE PTR [edi-0x34],dh
  417324:	mov    ecx,0xcced1cff
  417329:	jg     0x4172ae
  41732b:	push   0xe90c7c3b
  417330:	or     al,0xc1
  417332:	mov    ebp,ebp
  417334:	sbb    BYTE PTR [eax+0x7fccf1f1],cl
  41733a:	or     al,0x70
  41733c:	push   edx
  41733d:	js     0x417347
  41733f:	jmp    0xc5b27010
  417344:	clc    
  417345:	xchg   DWORD PTR [esi+0xc7be470],eax
  41734b:	jmp    0xe8c7e8a8
  417350:	retf   0xf2bf
  417353:	test   eax,0xedce7f54
  417358:	int3   
  417359:	scas   eax,DWORD PTR es:[edi]
  41735a:	sub    ebp,DWORD PTR [ebx+0x688e87c8]
  417360:	test   al,0x83
  417362:	or     al,0xe9
  417364:	lds    ecx,FWORD PTR [ebx]
  417366:	(bad)  
  417368:	dec    ebx
  417369:	ja     0x417373
  41736b:	jmp    0xf1cd6c3c
  417370:	mov    al,ds:0xc29f187
  417375:	add    BYTE PTR [ecx],dl
  417377:	in     eax,dx
  417378:	int3   
  417379:	jg     0x41737f
  41737b:	jmp    0x68c4f34c
	...
  417388:	add    BYTE PTR [eax],al
  41738a:	jl     0x41730f
  41738c:	or     al,0xe9
  41738e:	stc    
  41738f:	not    DWORD PTR [ebp*8+0x8dc7fcc]
  417396:	adc    BYTE PTR [edx],al
  417398:	mov    ebp,?
  41739a:	pusha  
  41739b:	xchg   ecx,esi
  41739d:	dec    esi
  41739e:	aas    
  41739f:	test   DWORD PTR fs:[eax],eax
  4173a2:	out    0x92,eax
  4173a4:	or     eax,0x8c043600
  4173a9:	sbb    BYTE PTR [edx],dh
  4173ab:	or     DWORD PTR [eax+eax*2],0xfffffff1
  4173af:	sti    
  4173b0:	adc    eax,0x4832604
  4173b5:	add    BYTE PTR [esi],dh
  4173b7:	add    DWORD PTR [ebx-0xe78d97f],0xffffffff
  4173be:	lods   eax,DWORD PTR ds:[esi]
  4173bf:	add    ebx,DWORD PTR [ecx]
  4173c1:	add    al,0x26
  4173c3:	add    DWORD PTR [esi-0x10bd0bff],0xffffffc0
  4173ca:	outs   dx,BYTE PTR ds:[esi]
  4173cb:	jnp    0x41739a
  4173cd:	mov    esi,DWORD PTR [edx]
  4173cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d0:	or     eax,0xd9fb28b
  4173d5:	push   ebp
  4173d6:	mov    al,ds:0x6bf63ed0
  4173db:	retf   0x8af1
  4173de:	(bad)  
  4173df:	cld    
  4173e0:	jmp    0xa28d:0x47643701
  4173e7:	iret   
  4173e8:	mov    ?,eax
  4173ea:	mov    bh,0xef
  4173ec:	loope  0x417371
	...
  4173f6:	add    BYTE PTR [eax],al
  4173f8:	js     0x41737c
  4173fa:	scas   eax,DWORD PTR es:[edi]
  4173fb:	jmp    FWORD PTR [ecx+0x78]
  4173fe:	repnz (bad) 
  417400:	retf   
  417401:	mov    bh,BYTE PTR [ebp+0x72]
  417404:	in     eax,0x4
  417406:	repnz add DWORD PTR [edi],ecx
  417409:	cwde   
  41740a:	or     eax,0x14f5a600
  41740f:	mov    esi,edi
  417411:	mov    ecx,DWORD PTR ds:0x8c097600
  417417:	sbb    BYTE PTR [edx-0x7e],dh
  41741a:	or     al,0x40
  41741c:	(bad)  
  41741d:	cmp    dl,BYTE PTR ds:0x83827604
  417423:	or     edi,0x58fff188
  417429:	and    DWORD PTR [ebp+0xd98cb17],ecx
  41742f:	test   BYTE PTR ds:0x55098197,0xb0
  417436:	pop    es
  417437:	fstp   TBYTE PTR [ecx]
  417439:	pop    ecx
  41743a:	jo     0x417453
  41743c:	and    al,0x9a
  41743e:	cmp    eax,0xe42fce1f
  417443:	add    ecx,edi
  417445:	cwde   
  417446:	sbb    BYTE PTR [eax],0x44
  417449:	pop    ss
  41744a:	clc    
  41744b:	add    ecx,edi
  41744d:	cwde   
  41744e:	jbe    0x4173d0
  417450:	out    0x9c,eax
  417452:	or     eax,0x451f8f00
  417457:	sbb    edx,ebx
  417459:	cwde   
  41745a:	or     eax,0x89
  41745f:	add    BYTE PTR [eax],al
  417461:	add    BYTE PTR [eax],al
  417463:	add    BYTE PTR [eax],al
  417465:	add    BYTE PTR [esi-0x78],cl
  417468:	icebp  
  417469:	(bad)  
  41746a:	call   0xcb59027f
  41746f:	cwde   
  417470:	or     eax,0x209ab78a
  417475:	std    
  417476:	or     al,0xe7
  417478:	jb     0x17b70d37
  41747e:	cmp    ch,BYTE PTR [ecx]
  417480:	mov    al,ds:0xf1b36600
  417485:	push   DWORD PTR [eax+0x4e8ae564]
  41748b:	xchg   ecx,esi
  41748d:	jmp    DWORD PTR [eax-0x2ce871e0]
  417493:	xchg   esi,eax
  417494:	or     eax,0xe9404640
  417499:	add    ecx,edi
  41749b:	xchg   esi,eax
  41749c:	jbe    0x41741e
  41749e:	fist   WORD PTR [edx+0x1844000d]
  4174a4:	in     eax,0x3
  4174a6:	iret   
  4174a7:	jg     0x41748c
  4174a9:	adc    DWORD PTR [esi+0x56fdd77f],ecx
  4174af:	jo     0x417496
  4174b1:	xor    eax,0xf36bc25a
  4174b6:	adc    BYTE PTR gs:[ebx],0xe3
  4174ba:	iret   
  4174bb:	(bad)  
  4174bc:	iret   
  4174bd:	inc    DWORD PTR [eax-0x7b]
  4174c0:	mov    al,0xea
  4174c2:	inc    ebp
  4174c3:	call   ebx
  4174c5:	push   DWORD PTR [eax]
  4174c7:	test   DWORD PTR [edx+eax*4+0x0],edi
	...
  4174d3:	add    al,al
  4174d5:	jnp    0x4174ba
  4174d7:	add    ecx,DWORD PTR [edi-0x3318a30a]
  4174dd:	jg     0x4174c2
  4174df:	jp     0x417530
  4174e1:	jo     0x4174c2
  4174e3:	add    ecx,edi
  4174e5:	clc    
  4174e6:	jl     0x4174d3
  4174e8:	int3   
  4174e9:	jg     0x4174ce
  4174eb:	xor    ebp,DWORD PTR [edi+0xea68124]
  4174f1:	jl     0x4174d6
  4174f3:	mov    dl,0x83
  4174f5:	clc    
  4174f6:	aas    
  4174f7:	loopne 0x4174c9
  4174f9:	sub    eax,0x814416
  4174fe:	shl    edi,0x5a
  417501:	jp     0x41748b
  417503:	test   eax,0x447ae384
  417509:	pop    esp
  41750a:	iret   
  41750b:	jp     0x4174ce
  41750d:	pop    eax
  41750e:	mov    eax,0xe35c2c79
  417513:	jns    0x4174de
  417515:	sti    
  417516:	into   
  417517:	nop
  417518:	sar    al,0xa8
  41751b:	jnp    0x41749f
  41751d:	bnd jle 0x417524
  417520:	iret   
  417521:	jg     0x417506
  417523:	leave  
  417524:	out    0xb,al
  417526:	jmp    0xd3c83e7
  41752b:	mov    al,ds:0xa98d8a5e
  417530:	jo     0x41752d
  417532:	ret    
  417533:	fsub   QWORD PTR [ecx+eax*1-0x33]
  417537:	jmp    0x417539
	...
  417541:	add    ch,al
  417543:	or     DWORD PTR [ebp+0x4a3d5829],0x1060376a
  41754d:	call   0x9f9327b1
  417552:	ja     0x41757d
  417554:	into   
  417555:	in     eax,0xcc
  417557:	clc    
  417558:	pop    eax
  417559:	add    eax,0x725a2acf
  41755e:	ret    0x8abd
  417561:	shl    DWORD PTR [eax],1
  417563:	test   cl,dh
  417565:	jmp    0x634df536
  41756a:	adc    eax,0x88f6c400
  41756f:	push   esp
  417570:	or     ebp,ecx
  417572:	int3   
  417573:	sub    al,0x85
  417575:	jne    0x41758f
  417577:	jo     0x417506
  417579:	out    dx,al
  41757a:	stc    
  41757b:	or     DWORD PTR [edi],eax
  41757d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41757e:	loope  0x417503
  417580:	icebp  
  417581:	jmp    0xae6733eb
  417586:	pop    esp
  417587:	inc    esi
  417588:	add    al,0x55
  41758a:	adc    eax,0xd16c4c35
  41758f:	or     edi,edx
  417591:	push   0x42
  417593:	addr16 or cl,ch
  417596:	int3   
  417597:	xor    BYTE PTR [edi-0x34],0x35
  41759b:	std    
  41759c:	sbb    al,0xed
  41759e:	int3   
  41759f:	jg     0x417524
  4175a1:	addr16 mov ah,0x7f
  4175a4:	or     al,0xe9
	...
  4175ae:	add    BYTE PTR [eax],al
  4175b0:	mov    WORD PTR [edx-0x7c6f1276],?
  4175b6:	icebp  
  4175b7:	add    BYTE PTR [esi+0x7f],bh
  4175ba:	or     al,0x0
  4175bc:	inc    DWORD PTR [ecx+eax*1]
  4175bf:	add    al,0x66
  4175c1:	jg     0x417548
  4175c3:	xchg   BYTE PTR [esi-0x59000e7d],bl
  4175c9:	sahf   
  4175ca:	xchg   BYTE PTR [esi-0xe7c9a],al
  4175d0:	in     al,dx
  4175d1:	mov    BYTE PTR [edx-0x78],dl
  4175d4:	outs   dx,BYTE PTR ds:[esi]
  4175d5:	jp     0x41755e
  4175d7:	adc    BYTE PTR [edx],bh
  4175d9:	jg     0x4175e7
  4175db:	pop    esi
  4175dc:	arpl   WORD PTR [ecx+0x9],ax
  4175df:	add    BYTE PTR [ebx-0x5a478287],ch
  4175e5:	inc    ebx
  4175e6:	repnz add DWORD PTR [eax+0x36000d9a],esp
  4175ed:	or     BYTE PTR [ecx+ecx*1+0x3b],ah
  4175f1:	xchg   esp,eax
  4175f2:	xchg   BYTE PTR [esi-0xe7cea],al
  4175f8:	jg     0x4175fe
  4175fa:	sbb    DWORD PTR [esi+esi*8],eax
  4175fd:	jle    0x41764b
  4175ff:	mov    DWORD PTR [eax-0x19fff266],edx
  417605:	add    eax,DWORD PTR [edi+0xc7efa10]
  41760b:	mov    ebp,DWORD PTR [eax-0x6d]
  41760e:	or     eax,0x108e600
  417613:	add    al,BYTE PTR [eax]
	...
  41761d:	add    BYTE PTR [edx+edi*2],dl
  417620:	retf   
  417621:	mov    BYTE PTR [esi-0x55e37d83],ah
  417627:	jle    0x417635
  417629:	jne    0x4175ca
  41762b:	pop    es
  41762c:	xchg   DWORD PTR [eax],edx
  41762e:	stos   BYTE PTR es:[edi],al
  41762f:	jle    0x41763d
  417631:	mov    DWORD PTR [eax],edi
  417633:	xchg   esp,eax
  417634:	or     eax,0x84beb600
  417639:	scas   al,BYTE PTR es:[edi]
  41763a:	iret   
  41763b:	mov    ecx,?
  41763d:	call   DWORD PTR [eax-0x2cf08de1]
  417643:	cwde   
  417644:	or     eax,0xf1a0498b
  417649:	(bad)  
  41764a:	js     0x41766a
  41764c:	clc    
  41764d:	add    DWORD PTR [ebp-0x4078b1ee],ebx
  417653:	xchg   edi,eax
  417654:	ja     0x417671
  417656:	retf   
  417657:	cwde   
  417658:	or     eax,0x721db675
  41765d:	bswap  ebx
  41765f:	cwde   
  417660:	or     eax,0xf1a05189
  417665:	inc    DWORD PTR [eax-0x28]
  417668:	jbe    0x417617
  41766a:	fist   DWORD PTR [ebp+ecx*1-0x7e5ba00]
  417671:	add    ecx,edi
  417673:	cwde   
  417674:	je     0x4175fb
  417676:	(bad)  
  417677:	pushf  
  417678:	or     eax,0xba04500
  41767d:	leave  
  41767e:	adc    DWORD PTR [edi+0x73],edx
  417681:	(bad)  
	...
  41768a:	add    BYTE PTR [eax],al
  41768c:	lods   al,BYTE PTR ds:[esi]
  41768d:	arpl   WORD PTR [eax+0x7],si
  417690:	popf   
  417691:	or     eax,0x8c16e73a
  417696:	or     dh,bh
  417698:	inc    esp
  417699:	pop    ecx
  41769a:	mov    ebx,edi
  41769c:	ror    DWORD PTR [eax+0x73],cl
  41769f:	int    0xf7
  4176a1:	ror    DWORD PTR [ecx],cl
  4176a3:	(bad)  
  4176a4:	fcomp  DWORD PTR [eax+edi*1]
  4176a7:	sub    dh,0x95
  4176aa:	mov    esi,0x48af998a
  4176af:	sti    
  4176b0:	rol    dl,0x8c
  4176b3:	out    0xce,al
  4176b5:	popa   
  4176b6:	jae    0x417685
  4176b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176b9:	or     ecx,DWORD PTR [ecx]
  4176bb:	(bad)  
  4176bc:	test   al,0x80
  4176be:	dec    edx
  4176bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176c0:	add    edi,DWORD PTR [esi-0x48b3fc05]
  4176c6:	call   0xcf03:0xe7644102
  4176cd:	repnz sbb al,0xfb
  4176d0:	sti    
  4176d1:	data16 jle 0x417751
  4176d4:	enter  0xe37b,0x3
  4176d8:	inc    esi
  4176d9:	cli    
  4176da:	(bad)  
  4176dc:	push   0x327aa381
  4176e1:	fs out 0x3,eax
  4176e4:	iret   
  4176e5:	mul    BYTE PTR [ecx-0xd]
  4176e8:	int3   
  4176e9:	jg     0x4176ce
  4176eb:	js     0x41773f
  4176ed:	push   0x3df
	...
  4176fa:	iret   
  4176fb:	cmc    
  4176fc:	rol    DWORD PTR [ecx],cl
  4176fe:	sbb    eax,0xc07b2582
  417703:	jle    0x417756
  417705:	out    0xcc,eax
  417707:	jg     0x4176ec
  417709:	mov    es,edi
  41770b:	hlt    
  41770c:	imul   esi,ebx,0x7ae37fcc
  417712:	dec    edx
  417713:	push   0x3fcf03e7
  417718:	jl     0x41776f
  41771a:	in     al,0x7b
  41771c:	jecxz  0x417721
  41771e:	inc    esi
  41771f:	cli    
  417720:	sar    edi,cl
  417722:	lock sub BYTE PTR [esi+0x7d],0xc0
  417727:	jnp    0x41770c
  417729:	add    edx,DWORD PTR [ebp+0x70]
  41772c:	in     eax,0xd5
  41772e:	fnstcw WORD PTR [ebp-0xd2feb95]
  417734:	fild   WORD PTR [edi]
  417736:	iret   
  417737:	jg     0x417769
  417739:	sbb    eax,0x7d3f956
  41773e:	iret   
  41773f:	jg     0x41774d
  417741:	pusha  
  417742:	inc    ebp
  417743:	addr16 or cl,ch
  417746:	int3   
  417747:	aas    
  417748:	adc    DWORD PTR [edi-0x11],0x7b
  41774c:	or     al,0xe9
  41774e:	dec    ebx
  41774f:	stc    
  417750:	sbb    al,0xed
  417752:	int3   
  417753:	jg     0x4176da
  417755:	addr16 jmp 0x4177d3
  417758:	or     al,0xe9
  41775a:	push   edx
  41775b:	outs   dx,DWORD PTR ds:[esi]
  41775c:	push   cs
  41775d:	fwait
	...
  417766:	add    BYTE PTR [eax],al
  417768:	int    0xbc
  41776a:	test   cl,bl
  41776c:	retf   
  41776d:	icebp  
  41776e:	adc    ch,ah
  417770:	int3   
  417771:	jg     0x4177ea
  417773:	add    BYTE PTR [eax-0x7],dl
  417776:	sbb    al,0xe5
  417778:	int3   
  417779:	jg     0x4176fe
  41777b:	outs   dx,DWORD PTR ds:[esi]
  41777c:	mov    bl,0x7b
  41777e:	or     al,0xe9
  417780:	mov    eax,?
  417782:	mov    ds:0xc7fc8e5,al
  417787:	jo     0x4177ce
  417789:	outs   dx,DWORD PTR ds:[esi]
  41778a:	or     cl,ch
  41778c:	int3   
  41778d:	test   BYTE PTR [edx+0xc7fd0d1],0x39
  417794:	jmp    0x417716
  417796:	jg     0x417795
  417798:	sar    BYTE PTR [edi+0xc],1
  41779b:	pushf  
  41779c:	mov    bl,0xf6
  41779e:	mov    bh,cl
  4177a0:	sar    BYTE PTR [edi+0xc],1
  4177a3:	jo     0x4177fa
  4177a5:	addr16 or cl,ch
  4177a8:	int3   
  4177a9:	aas    
  4177aa:	add    DWORD PTR [edi-0x51],0x7b
  4177ae:	or     al,0xe9
  4177b0:	pop    ebx
  4177b1:	stc    
  4177b2:	sbb    al,0xed
  4177b4:	int3   
  4177b5:	jg     0x41773c
  4177b7:	addr16 mov ah,0x7b
  4177ba:	or     al,0xe9
  4177bc:	cld    
  4177bd:	pop    esi
  4177be:	or     ebx,DWORD PTR [edi-0x18]
  4177c1:	or     DWORD PTR [eax+eax*1],0xffffffb6
  4177c5:	clc    
  4177c6:	sbb    DWORD PTR [ebx+0x89330],ecx
	...
  4177d4:	add    BYTE PTR [eax],al
  4177d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177d7:	or     al,0x8a
  4177d9:	sbb    BYTE PTR [edx+0x1f400c83],dh
  4177df:	xor    DWORD PTR [eax],edx
  4177e1:	add    al,0xa6
  4177e3:	or     DWORD PTR [ecx+0xc879686],0x0
  4177ea:	in     eax,dx
  4177eb:	or     BYTE PTR [esp+eax*1],dl
  4177ee:	jbe    0x417773
  4177f0:	fsub   QWORD PTR [eax]
  4177f2:	adc    DWORD PTR [bx+si],edx
  4177f5:	add    al,0x66
  4177f7:	cmp    DWORD PTR [ebp+0x19],0xffffffed
  4177fb:	or     BYTE PTR [esp+eax*1],bl
  4177fe:	jbe    0x417783
  417800:	mov    DWORD PTR [esi+0xc87ce],eax
  417806:	es or  al,0xa2
  417809:	sbb    al,0x32
  41780b:	or     DWORD PTR [ecx+ecx*4],0xffffffb0
  41780f:	xchg   edx,eax
  417810:	or     BYTE PTR [eax],al
  417812:	es push cs
  417814:	mov    edx,0xc832218
  417819:	rcl    al,1
  41781b:	loope  0x417872
  41781d:	ret    0x831e
  417820:	add    DWORD PTR [edx+edx*1-0x79],0x5a
  417825:	push   edi
  417826:	lods   eax,DWORD PTR ds:[esi]
  417827:	(bad)  
  417828:	sub    BYTE PTR [eax],dl
  41782a:	ins    DWORD PTR es:[edi],dx
  41782b:	jae    0x417862
  41782d:	xor    dh,0x82
  417830:	or     al,0x73
  417832:	sbb    al,BYTE PTR [esi]
  417834:	out    dx,eax
  417835:	add    al,0x75
  417837:	cdq    
  417838:	xor    eax,DWORD PTR [esi+0x0]
  41783e:	add    BYTE PTR [eax],al
  417840:	add    BYTE PTR [eax],al
  417842:	add    BYTE PTR [eax],al
  417844:	adc    al,BYTE PTR [edi-0x287dfff4]
  41784a:	neg    eax
  41784c:	int    0x43
  41784e:	mov    esp,eax
  417850:	iret   
  417851:	outs   dx,BYTE PTR ds:[esi]
  417852:	ins    BYTE PTR es:[edi],dx
  417853:	or     DWORD PTR [edi-0x283d949d],0xf3863068
  41785d:	fs or  eax,0x32743b00
  417863:	or     bh,0x68
  417866:	or     eax,0xfbe9ca71
  41786b:	add    ah,BYTE PTR [eax+edi*2+0x68ca0032]
  417872:	or     eax,0x319dce72
  417877:	add    BYTE PTR [edx],al
  417879:	imul   ecx,DWORD PTR ds:0xcdadce72,0x8799c7e8
  417883:	ror    ah,0x98
  417886:	loopne 0x4178ae
  417888:	gs in  eax,0xb
  41788b:	push   esi
  41788c:	inc    esp
  41788d:	scas   al,BYTE PTR es:[edi]
  41788e:	jg     0x417868
  417890:	addr16 je 0x417882
  417893:	std    
  417894:	dec    eax
  417895:	fild   DWORD PTR [eax+ebx*1-0x2b]
  417899:	and    DWORD PTR [esi+ebx*2+0xd],ebp
  41789d:	jo     0x4178ac
  41789f:	push   ebp
  4178a0:	daa    
  4178a1:	fs out dx,eax
  4178a3:	std    
  4178a4:	sub    BYTE PTR ds:0xc088,cl
	...
  4178b2:	retf   
  4178b3:	inc    esi
  4178b4:	(bad)  
  4178b5:	or     bh,cl
  4178b7:	cmp    DWORD PTR [eax+0x5a60eb5c],eax
  4178bd:	push   esi
  4178be:	push   esp
  4178bf:	xchg   edi,eax
  4178c0:	xchg   DWORD PTR [esi+0xd6cb7],edi
  4178c6:	iret   
  4178c7:	adc    eax,0x67d4841c
  4178cc:	or     eax,0x8d714e00
  4178d1:	add    bh,cl
  4178d3:	jg     0x4178b8
  4178d5:	je     0x41786f
  4178d7:	add    cl,BYTE PTR [edi+0x28]
  4178da:	mov    bh,0x83
  4178dc:	push   esi
  4178dd:	ds mov bh,0xb5
  4178e0:	fiadd  WORD PTR [eax]
  4178e2:	ror    DWORD PTR [ecx],0xb9
  4178e5:	jmp    0x4178e6
  4178e7:	js     0x41789b
  4178e9:	add    BYTE PTR [ebp+0x4e],al
  4178ec:	retf   
  4178ed:	std    
  4178ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ef:	jge    0x417893
  4178f1:	lea    ecx,[ebx]
  4178f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178f4:	or     ecx,DWORD PTR [ebp+0x3e79041]
  4178fa:	iret   
  4178fb:	or     DWORD PTR [esi-0x538077d9],ebp
  417901:	add    eax,0x57bdd40
  417906:	jp     0x41790e
  417908:	rol    DWORD PTR [edi],cl
  41790a:	iret   
  41790b:	jg     0x417979
  41790d:	mov    eax,ds:0x3e383b3
  417912:	add    ebx,ebx
  417914:	into   
  417915:	lds    eax,FWORD PTR [eax]
	...
  41791f:	add    bh,al
  417921:	jg     0x417989
  417923:	rcl    BYTE PTR [edx+0x7f],1
  417926:	cdq    
  417927:	pop    ds
  417928:	sar    DWORD PTR [edi-0x1d],cl
  41792b:	mov    ?,WORD PTR [edx+0x461ab086]
  417931:	push   es
  417932:	rol    DWORD PTR [edi],cl
  417934:	iret   
  417935:	jg     0x4179a3
  417937:	mov    edi,eax
  417939:	and    ebx,0x3
  41793c:	pop    DWORD PTR [esi]
  41793e:	pop    ecx
  41793f:	pop    ds
  417940:	sar    DWORD PTR [edi-0x1d],cl
  417943:	mov    cl,BYTE PTR [ecx-0x70]
  417946:	fild   WORD PTR [ebx]
  417948:	iret   
  417949:	or     BYTE PTR [ecx+0x1b],ch
  41794c:	retf   
  41794d:	jg     0x417932
  41794f:	(bad)  
  417950:	mov    DWORD PTR [ecx+0x80f013c],0x3dcde10c
  41795a:	adc    ch,ah
  41795c:	int3   
  41795d:	jg     0x4179d6
  41795f:	add    BYTE PTR [esi+eax*1+0x1c],al
  417963:	in     eax,0xcc
  417965:	jg     0x4178ea
  417967:	outs   dx,DWORD PTR ds:[esi]
  417968:	jmp    0x4178ed
  41796a:	or     al,0xe9
  41796c:	or     al,0x5
  41796e:	mov    ds:0xc7fd0e5,al
  417973:	jo     0x4179be
  417975:	vpcomb xmm8,xmm2,XMMWORD PTR [esi],0x8a
  41797b:	ror    eax,1
  41797d:	jg     0x41798b
  41797f:	mov    ecx,0xa8dd06f3
	...
  41798c:	add    BYTE PTR [eax],al
  41798e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41798f:	xchg   DWORD PTR [ebp-0x7a2e3255],ecx
  417995:	lahf   
  417996:	jae    0x4179dc
  417998:	test   BYTE PTR [esi-0x2675f988],0xc8
  41799f:	jg     0x4179ad
  4179a1:	popa   
  4179a2:	retf   
  4179a3:	aaa    
  4179a4:	or     ebp,ecx
  4179a6:	int3   
  4179a7:	jg     0x4179b4
  4179a9:	outs   dx,DWORD PTR ds:[esi]
  4179aa:	ret    
  4179ab:	or     DWORD PTR [ecx+ebp*8],0x43
  4179af:	sbb    eax,0x7fcced28
  4179b4:	mov    edx,DWORD PTR [edx+0x4b]
  4179b7:	jg     0x4179c5
  4179b9:	jmp    0xcdcf117b
  4179be:	call   0x7fa3885a
  4179c3:	mov    ds:0x4d559814,eax
  4179c8:	in     al,0x7e
  4179ca:	adc    eax,0x72bef17a
  4179cf:	fcom   DWORD PTR [ebp+0x2b]
  4179d2:	fstp   TBYTE PTR [edi-0x75]
  4179d5:	adc    cl,bl
  4179d7:	or     BYTE PTR [eax+eax*1],0xe6
  4179db:	in     eax,dx
  4179dc:	or     BYTE PTR [ecx],ch
  4179de:	sub    ah,BYTE PTR [esp+edx*1+0x757fdd81]
  4179e5:	add    dh,dh
  4179e7:	in     eax,dx
  4179e8:	or     BYTE PTR [ecx],ch
  4179ea:	stos   BYTE PTR es:[edi],al
  4179eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179ec:	adc    al,0x8b
  4179ee:	mov    ds:0x5114a7,al
	...
  4179fb:	add    BYTE PTR ds:0x9c6ce44d,ch
  417a01:	jp     0x4179f2
  417a03:	pop    edi
  417a04:	lock loopne 0x417a5a
  417a07:	ret    0x7fbe
  417a0a:	mov    DWORD PTR [esi+0xc87ce],0xc7fb7
  417a14:	daa    
  417a15:	jbe    0x4179a3
  417a17:	add    BYTE PTR [esi-0xab68481],ah
  417a1d:	cli    
  417a1e:	sub    BYTE PTR [eax],bl
  417a20:	push   0xffffffee
  417a22:	dec    esi
  417a23:	cmp    esi,eax
  417a25:	mov    ds:0xf3660008,al
  417a2a:	ss call 0x30f39c
  417a30:	in     eax,dx
  417a31:	dec    esp
  417a32:	in     al,0x3
  417a34:	in     al,dx
  417a35:	jns    0x417a26
  417a37:	mov    esp,DWORD PTR [eax-0x5e063a9a]
  417a3d:	jns    0x4179c5
  417a3f:	inc    esp
  417a40:	retf   0x839b
  417a43:	mov    ss,WORD PTR [esi]
  417a45:	or     DWORD PTR [eax+eax*1],0xffffffbc
  417a49:	dec    ebp
  417a4a:	sub    BYTE PTR [ecx],al
  417a4c:	xor    al,0x51
  417a4e:	push   cs
  417a4f:	ret    0x751
  417a52:	icebp  
  417a53:	(bad)  
  417a54:	test   al,0x8e
  417a56:	or     BYTE PTR [eax],al
  417a58:	es or  al,0x92
  417a5b:	and    al,0xcf
  417a5d:	ins    BYTE PTR es:[edi],dx
  417a5e:	or     eax,0x0
  417a63:	add    BYTE PTR [eax],al
  417a65:	add    BYTE PTR [eax],al
  417a67:	add    BYTE PTR [eax],al
  417a69:	add    BYTE PTR [ecx-0x383da9d5],ah
  417a6f:	push   0x67f0cd8e
  417a74:	scas   eax,DWORD PTR es:[edi]
  417a75:	sbb    al,0xd3
  417a77:	push   0x5f708b0d
  417a7c:	je     0x417a95
  417a7e:	inc    esp
  417a7f:	jmp    0x417a99
  417a81:	add    al,0xcf
  417a83:	push   0x6ce78686
  417a88:	or     eax,0xa2e00f00
  417a8d:	sbb    al,0xd3
  417a8f:	push   0x5849870d
  417a94:	or     DWORD PTR [eax],eax
  417a96:	iret   
  417a97:	fisttp QWORD PTR [edx+0xd68cb18]
  417a9d:	mov    bh,BYTE PTR [edi-0x7201249a]
  417aa3:	lock sbb bh,bh
  417aa6:	dec    edx
  417aa7:	je     0x417ab2
  417aa9:	add    bh,cl
  417aab:	xchg   ebx,eax
  417aac:	adc    eax,0x9585189
  417ab1:	add    bh,cl
  417ab3:	out    dx,eax
  417ab4:	mov    bl,BYTE PTR [eax]
  417ab6:	shr    DWORD PTR [eax+0xd],cl
  417ab9:	inc    eax
  417aba:	push   esi
  417abb:	mov    edx,0x68cf042c
  417ac0:	xchg   BYTE PTR [esi+0xd64bf],al
  417ac6:	push   esp
  417ac7:	jmp    0x20dd:0x68cf0410
	...
  417ad6:	add    BYTE PTR [eax],al
  417ad8:	hlt    
  417ad9:	loop   0x417aff
  417adb:	add    al,0xcf
  417add:	push   0xa5547279
  417ae2:	int    0xe8
  417ae4:	xlat   BYTE PTR ds:[ebx]
  417ae5:	in     eax,0xc8
  417ae7:	add    DWORD PTR [edi+0x7f],edi
  417aea:	sbb    edx,DWORD PTR [esi-0x76ed85e8]
  417af0:	pop    ecx
  417af1:	(bad)  
  417af2:	fild   WORD PTR [ebx]
  417af4:	iret   
  417af5:	pop    es
  417af6:	cld    
  417af7:	mov    ebx,0x3e379f8
  417afc:	lock add edx,ebx
  417aff:	pop    es
  417b00:	iret   
  417b01:	jg     0x417b6f
  417b03:	sahf   
  417b04:	stos   DWORD PTR es:[edi],eax
  417b05:	and    ebx,0x3
  417b08:	pop    eax
  417b09:	jbe    0x417b6e
  417b0b:	add    ecx,edi
  417b0d:	jg     0x417b65
  417b0f:	sbb    al,0x4e
  417b11:	in     al,dx
  417b12:	call   FWORD PTR [ebx]
  417b14:	int    0x4
  417b16:	aaa    
  417b17:	sub    bh,dl
  417b19:	int    0x7e
  417b1b:	int    0xa7
  417b1d:	in     al,0xcc
  417b1f:	cld    
  417b20:	stos   BYTE PTR es:[edi],al
  417b21:	fstp   DWORD PTR [ecx]
  417b23:	pop    edi
  417b24:	push   es
  417b25:	ds jmp 0x417b2b
  417b28:	sbb    BYTE PTR [ebp-0x1d],dh
  417b2b:	push   es
  417b2c:	iret   
  417b2d:	jg     0x417b44
  417b2f:	or     BYTE PTR [eax+0x1bbfc3],dh
  417b35:	jne    0x417b1a
  417b37:	jle    0x417b08
  417b39:	jg     0x417b30
  417b3b:	push   0x0
	...
  417b45:	add    BYTE PTR [eax+0x561bc7c3],ch
  417b4b:	aam    0xbf
  417b4d:	sbb    edi,ebp
  417b4f:	add    al,0x91
  417b51:	jmp    0x417af3
  417b53:	jbe    0x417bbf
  417b55:	cld    
  417b56:	repnz fnstenv [eax-0x1c77f2a8]
  417b5d:	add    al,BYTE PTR [ecx-0x30fc1864]
  417b63:	repnz in al,dx
  417b65:	mov    BYTE PTR [ecx-0x70],cl
  417b68:	out    0x3,eax
  417b6a:	iret   
  417b6b:	push   es
  417b6c:	or     al,0x6f
  417b6e:	les    eax,FWORD PTR [ebx+0x8ce90c]
  417b74:	mov    ds:0xc7fc705,al
  417b79:	jo     0x417bcd
  417b7b:	nop
  417b7c:	or     cl,ch
  417b7e:	int3   
  417b7f:	push   es
  417b80:	mov    dh,cl
  417b82:	sar    BYTE PTR [edi+0xc],1
  417b85:	sbb    DWORD PTR [eax+edi*2+0x7fd0ddaf],ebp
  417b8c:	or     al,0x7c
  417b8e:	lds    eax,FWORD PTR [esi]
  417b90:	mov    bl,cl
  417b92:	sar    BYTE PTR [edi+0xc],1
  417b95:	jo     0x417be4
  417b97:	cwde   
  417b98:	or     cl,ch
  417b9a:	int3   
  417b9b:	mov    edi,0x83e78783
  417ba0:	or     al,0xe9
  417ba2:	dec    ebx
  417ba3:	add    DWORD PTR [ebp*8+0x67857fcc],ebx
	...
  417bb2:	add    BYTE PTR [eax],al
  417bb4:	retf   
  417bb5:	or     DWORD PTR [ecx+ebp*8],0x7c
  417bb9:	lahf   
  417bba:	test   DWORD PTR ds:0x725e97ef,edx
  417bc0:	test   DWORD PTR [edi-0x28],esp
  417bc3:	mov    eax,ds:0x37517a84
  417bc8:	xlat   BYTE PTR es:[ebx]
  417bca:	into   
  417bcb:	loope  0x417b99
  417bcd:	push   es
  417bce:	dec    eax
  417bcf:	int    0x70
  417bd1:	add    eax,0x78f4e99c
  417bd6:	icebp  
  417bd7:	mov    dl,0x3b
  417bd9:	or     DWORD PTR [eax],0xffffffe9
  417bdc:	int3   
  417bdd:	icebp  
  417bde:	adc    esi,DWORD PTR [edx+0x42]
  417be1:	mov    ecx,DWORD PTR [eax]
  417be3:	jmp    0xe00d32b4
  417be8:	iret   
  417be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bea:	retf   
  417beb:	sub    ecx,edi
  417bed:	jg     0x417c14
  417bef:	add    bh,ah
  417bf1:	jle    0x417bff
  417bf3:	push   0x4ce7c37
  417bf8:	ss mov cl,0xcc
  417bfb:	ret    0x7c32
  417bfe:	mov    ebp,esp
  417c00:	push   ss
  417c01:	rcr    DWORD PTR [ebp-0x75],1
  417c04:	pop    edx
  417c05:	cwde   
  417c06:	sub    al,0x56
  417c08:	and    eax,0x41f18359
  417c0d:	or     edx,DWORD PTR [eax+0x24]
  417c10:	push   ss
  417c11:	or     edx,DWORD PTR [eax+0x24]
  417c14:	out    dx,al
  417c15:	mov    edx,0x8a2
	...
  417c22:	bnd jnp 0x417c31
  417c25:	pcmpgtw mm4,QWORD PTR [eax]
  417c28:	or     al,0x0
  417c2a:	out    0x68,al
  417c2c:	add    ecx,DWORD PTR [ebp+0xc9752]
  417c32:	mov    dh,0x83
  417c34:	test   DWORD PTR [edx+edx*8+0x7b],esp
  417c38:	add    DWORD PTR [esi-0xe885e],0x3b
  417c3f:	or     ecx,DWORD PTR [eax+ebp*2]
  417c42:	mov    bh,0x83
  417c44:	xor    ecx,eax
  417c46:	loopne 0x417bda
  417c48:	or     DWORD PTR [esi-0xe8866],0x6d
  417c4f:	cmp    al,0x7a
  417c51:	add    al,0x8d
  417c53:	cmp    al,0xe3
  417c55:	or     ecx,DWORD PTR [ebp-0x21fff2c4]
  417c5b:	jl     0x417c69
  417c5d:	jmp    0x417cd3
  417c5f:	scas   al,BYTE PTR es:[edi]
  417c60:	int3   
  417c61:	mov    ebp,eax
  417c63:	mov    cl,BYTE PTR [eax]
  417c65:	add    BYTE PTR [esi-0x76],ah
  417c68:	mov    edx,0x49315911
  417c6d:	add    DWORD PTR [ebp-0x30fb653a],edi
  417c73:	loope  0x417c7e
  417c75:	mov    al,BYTE PTR [edi+eax*4+0x7f]
  417c79:	or     al,0x48
  417c7b:	repnz mov ecx,DWORD PTR [eax]
  417c7e:	shr    DWORD PTR [eax+0xd],cl
  417c81:	or     eax,0xb6065959
	...
  417c8e:	add    BYTE PTR [eax],al
  417c90:	(bad)  
  417c91:	or     BYTE PTR [si+0x39],0x65
  417c96:	adc    BYTE PTR [esi+0xd5cd3],0x56
  417c9d:	jne    0x417c27
  417c9f:	mov    bh,0xce
  417ca1:	push   0xeece000d
  417ca6:	icebp  
  417ca7:	add    ecx,edi
  417ca9:	push   0x64d78e08
  417cae:	or     eax,0xf1df4400
  417cb3:	add    ecx,edi
  417cb5:	push   0xe6f4c880
  417cba:	add    al,0x4
  417cbc:	iret   
  417cbd:	push   0xc0cff78e
  417cc2:	or     eax,0x45663900
  417cc7:	xchg   DWORD PTR [ecx+0x64],edx
  417cca:	icebp  
  417ccb:	jmp    DWORD PTR [eax-0x2cf75c91]
  417cd1:	push   0x924d0d0d
  417cd6:	repz std 
  417cd8:	mov    cl,dh
  417cda:	dec    esp
  417cdb:	and    al,0xbf
  417cdd:	ror    BYTE PTR [eax],cl
  417cdf:	gs into 
  417ce1:	push   0x66f9c230
  417ce6:	xchg   BYTE PTR [ebx+esi*4+0x38],dl
  417cea:	loopne 0x417cf3
  417cec:	dec    esp
  417ced:	lock or eax,0xd22510d
	...
  417cfb:	add    BYTE PTR [eax],al
  417cfd:	add    bh,cl
  417cff:	jg     0x417cfb
  417d01:	mov    cl,0x8c
  417d03:	jg     0x417ce7
  417d05:	mov    cl,0x94
  417d07:	sub    BYTE PTR [esi+0x40],0x51
  417d0b:	jnp    0x417d7b
  417d0d:	cmp    BYTE PTR [edi-0x46],al
  417d10:	dec    esi
  417d11:	or     DWORD PTR [ebx+0x32],edx
  417d14:	in     al,0x3
  417d16:	iret   
  417d17:	or     ch,BYTE PTR [ecx+0x24]
  417d1a:	sar    DWORD PTR [edi-0x1d],cl
  417d1d:	xchg   bl,cl
  417d1f:	xchg   BYTE PTR [edx],ah
  417d21:	inc    eax
  417d22:	mov    bl,0x93
  417d24:	jecxz  0x417d31
  417d26:	iret   
  417d27:	jg     0x417d07
  417d29:	mov    esi,0xf96eb97d
  417d2e:	mov    dh,0x7a
  417d30:	outs   dx,DWORD PTR ds:[esi]
  417d31:	das    
  417d32:	push   esp
  417d33:	(bad)  
  417d34:	loop   0x417da1
  417d36:	loopne 0x417dad
  417d38:	mov    esi,0xe37bd381
  417d3d:	add    ebx,DWORD PTR [ecx-0x69]
  417d40:	jle    0x417cc3
  417d42:	fstp   TBYTE PTR [ebx-0x1d]
  417d45:	add    eax,DWORD PTR [esi]
  417d47:	js     0x417d9a
  417d49:	add    dh,ah
  417d4b:	ja     0x417d1b
  417d4d:	pop    es
  417d4e:	out    0x77,al
  417d50:	fs ror bh,0xe7
  417d54:	in     al,0x3
  417d56:	mov    dh,0x82
  417d58:	idiv   al
  417d5a:	inc    esi
  417d5b:	jle    0x417dcb
  417d5d:	aaa    
  417d5e:	push   edi
  417d5f:	add    ebx,edi
  417d61:	or     BYTE PTR [eax],al
	...
  417d6b:	add    dh,al
  417d6d:	cmp    dl,BYTE PTR [esi]
  417d6f:	int3   
  417d70:	mov    eax,0x127bfcb
  417d75:	jl     0x417de3
  417d77:	dec    edi
  417d78:	stos   DWORD PTR es:[edi],eax
  417d79:	mov    ds:0xfbdafcce,eax
  417d7e:	adc    al,0x3
  417d80:	iret   
  417d81:	jg     0x417d8f
  417d83:	cmp    eax,DWORD PTR fs:[eax+0x6cce90c]
  417d8a:	mov    edi,0x3ffd1b12
  417d8f:	add    eax,0xd40b6df
  417d94:	out    0x82,eax
  417d96:	mov    DWORD PTR [ebx],edx
  417d98:	int3   
  417d99:	jg     0x417da7
  417d9b:	jb     0x417d2d
  417d9d:	fwait
  417d9e:	sbb    al,0x73
  417da0:	shl    BYTE PTR [ebx+esi*1-0x63],1
  417da4:	sar    DWORD PTR [edi-0x7b],1
  417da7:	popf   
  417da8:	mov    al,0x8b
  417daa:	mov    ch,0xeb
  417dac:	int3   
  417dad:	jg     0x417dbb
  417daf:	xchg   ebp,eax
  417db0:	enter  0x82b6,0xcd
  417db4:	clc    
  417db5:	je     0x417da8
  417db7:	fidiv  WORD PTR [ecx+0x49]
  417dba:	or     al,0xe9
  417dbc:	int3   
  417dbd:	push   es
  417dbe:	pop    eax
  417dbf:	lds    ebx,FWORD PTR [esi+esi*4+0x8ad7ad6]
  417dc6:	aas    
  417dc7:	jmp    0x417e0c
  417dc9:	push   0xa7ef5525
  417dce:	xchg   BYTE PTR ds:0x0,ah
  417dd4:	add    BYTE PTR [eax],al
  417dd6:	add    BYTE PTR [eax],al
  417dd8:	add    BYTE PTR [eax],al
  417dda:	(bad)  
  417ddb:	jg     0x417e13
  417ddd:	call   0x288efc21
  417de2:	hlt    
  417de3:	pop    ecx
  417de4:	jle    0x417da1
  417de6:	push   esp
  417de7:	ret    
  417de8:	sub    ch,dl
  417dea:	push   ebp
  417deb:	jecxz  0x417e15
  417ded:	add    esp,edx
  417def:	pop    ecx
  417df0:	add    DWORD PTR [ebp-0x56],esp
  417df3:	jg     0x417e01
  417df5:	jmp    0xf96a51bf
  417dfa:	repnz mov edx,0x4544385d
  417e00:	in     al,0x5b
  417e02:	jne    0x417e76
  417e04:	icebp  
  417e05:	add    ch,bl
  417e07:	(bad)  
  417e08:	sub    BYTE PTR [eax],dl
  417e0a:	(bad)  
  417e0c:	sub    BYTE PTR [eax],bl
  417e0e:	mov    bh,0xd1
  417e10:	or     esi,0xffffffed
  417e13:	arpl   sp,sp
  417e15:	lahf   
  417e16:	lods   al,BYTE PTR ds:[esi]
  417e17:	ins    BYTE PTR es:[edi],dx
  417e18:	out    dx,eax
  417e19:	sub    ebx,DWORD PTR [esi+0x3a244008]
  417e1f:	and    ebp,0xc85c51b8
  417e25:	dec    esi
  417e26:	jmp    0xcaae0191
  417e2b:	mov    ds:0x924fab1,eax
  417e30:	into   
  417e31:	ror    DWORD PTR [esi-0xa3df474],0xb3
  417e38:	sub    BYTE PTR [eax],dl
  417e3a:	in     eax,dx
  417e3b:	push   edi
  417e3c:	jp     0x417e44
	...
  417e46:	add    BYTE PTR [eax],al
  417e48:	outs   dx,DWORD PTR ds:[esi]
  417e49:	(bad)  
  417e4a:	sub    BYTE PTR [eax],bl
  417e4c:	int    0xc9
  417e4e:	xor    ecx,DWORD PTR [esi-0xe8be6]
  417e54:	pop    ebx
  417e55:	mov    dl,0x5b
  417e57:	push   ecx
  417e58:	ins    DWORD PTR es:[edi],dx
  417e59:	cmp    eax,0x6cdc63e4
  417e5e:	out    dx,eax
  417e5f:	mov    ecx,DWORD PTR [edx]
  417e61:	mov    al,ds:0x69e8b1c
  417e66:	dec    eax
  417e67:	and    al,0xbe
  417e69:	rcr    DWORD PTR [ebx+ecx*4+0x50],1
  417e6d:	addr16 pop esp
  417e6f:	cli    
  417e70:	xchg   ecx,eax
  417e71:	push   0xffffff83
  417e73:	enter  0x48bd,0x83
  417e77:	ins    BYTE PTR es:[edi],dx
  417e78:	retf   0xb4a3
  417e7b:	stos   DWORD PTR es:[edi],eax
  417e7c:	dec    esp
  417e7d:	sub    DWORD PTR [esi],esp
  417e7f:	neg    DWORD PTR [edi+0x6]
  417e82:	mov    cl,0x5f
  417e85:	mov    cl,BYTE PTR [ebx]
  417e87:	retf   0x65cf
  417e8a:	(bad)  
  417e8b:	cmp    DWORD PTR [ebx],eax
  417e8d:	cmp    eax,0xeddb721d
  417e92:	inc    ecx
  417e93:	and    al,0xbb
  417e95:	out    dx,eax
  417e96:	inc    ecx
  417e97:	and    al,0xb7
  417e99:	fistp  WORD PTR [ecx+0x24]
  417e9c:	mov    edi,0xb70072d3
  417ea1:	addr16 or eax,0xf15d4939
  417ea7:	(bad)  
  417ea8:	cmp    BYTE PTR [ebx+0x15],dl
  417eab:	mov    DWORD PTR [eax],eax
	...
  417eb5:	add    BYTE PTR [ecx+0x55],cl
  417eb8:	icebp  
  417eb9:	jmp    FWORD PTR [eax]
  417ebb:	jle    0x417ead
  417ebd:	jbe    0x417e8a
  417ebf:	(bad)  
  417ec0:	lock jmp 0x8031fc91
  417ec6:	or     BYTE PTR [ecx+0x65],ch
  417ec9:	dec    DWORD PTR [eax]
  417ecb:	mov    cs,WORD PTR [ebx]
  417ecd:	xor    DWORD PTR [eax],eax
  417ecf:	out    dx,al
  417ed0:	pop    es
  417ed1:	mov    DWORD PTR [ebx-0x50797931],edi
  417ed7:	pop    esp
  417ed8:	or     eax,0x8ea1cc00
  417edd:	ins    BYTE PTR es:[edi],dx
  417ede:	stos   DWORD PTR es:[edi],eax
  417edf:	push   esp
  417ee0:	or     BYTE PTR [ebp+edi*4-0x1d],dh
  417ee4:	cli    
  417ee5:	or     eax,0xfdf7a34a
  417eea:	enter  0x4d,0x87
  417eee:	adc    edi,DWORD PTR [ebp+0x10]
  417ef1:	xchg   DWORD PTR [ebx],ebx
  417ef3:	test   DWORD PTR [eax],ebx
  417ef5:	mov    DWORD PTR [ebx],ecx
  417ef7:	jge    0x417f25
  417ef9:	mov    DWORD PTR [ebx],eax
  417efb:	test   DWORD PTR [eax],ebx
  417efd:	mov    DWORD PTR [ebx],edx
  417eff:	jge    0x417f11
  417f01:	pop    ebp
  417f02:	stc    
  417f03:	mov    eax,DWORD PTR [ebp+0xdfcb50]
  417f09:	pop    ecx
  417f0a:	dec    esp
  417f0b:	jg     0x417eac
  417f0d:	adc    al,0x8d
  417f0f:	(bad)  
  417f10:	jecxz  0x417e92
  417f12:	imul   esi,DWORD PTR [edi-0x4454879a],0xffffffe3
  417f19:	dec    ebp
	...
  417f22:	add    BYTE PTR [eax],al
  417f24:	push   esi
  417f25:	jo     0x417f17
  417f27:	or     bl,BYTE PTR [esi-0x6c7eeec1]
  417f2d:	mov    bh,0xa5
  417f2f:	sbb    al,0xcf
  417f31:	push   es
  417f32:	daa    
  417f33:	and    BYTE PTR [edi-0x2a90dd04],cl
  417f39:	(bad)  
  417f3a:	cmp    dh,ch
  417f3c:	cdq    
  417f3d:	(bad)  
  417f3e:	push   ds
  417f3f:	cmp    al,0xd
  417f41:	xchg   edi,eax
  417f42:	jecxz  0x417ecc
  417f44:	fwait
  417f45:	fwait
  417f46:	lahf   
  417f47:	jle    0x417f51
  417f49:	jmp    0x417f8c
  417f4b:	mov    DWORD PTR [ebx-0x2815865],eax
  417f51:	jmp    0x3df:0x8b518b49
  417f58:	iret   
  417f59:	(bad)  
  417f5a:	jl     0x417fda
  417f5c:	scas   eax,DWORD PTR es:[edi]
  417f5d:	jnp    0x417f42
  417f5f:	add    ecx,DWORD PTR [eax+0x1]
  417f62:	repz (bad) 
  417f64:	call   0xe727cada
  417f69:	pusha  
  417f6a:	pop    esi
  417f6b:	xor    DWORD PTR [eax],edx
  417f6d:	retf   0xadea
  417f70:	sbb    BYTE PTR [edi-0x4d],bh
  417f73:	inc    edx
  417f74:	iret   
  417f75:	dec    esi
  417f76:	mov    ds:0x99818a30,eax
  417f7b:	mov    edx,0x424a1b8
  417f80:	add    BYTE PTR [eax+0x16],0xbd
  417f84:	fisubr DWORD PTR [ecx]
  417f86:	mov    WORD PTR [ecx],es
	...
  417f90:	add    BYTE PTR [eax],al
  417f92:	fistp  QWORD PTR [esi-0x52702d1d]
  417f98:	or     al,0xae
  417f9a:	retf   
  417f9b:	sub    DWORD PTR [ebx+0xcb0bcea],esi
  417fa1:	mov    eax,0xe5caff8c
  417fa6:	mov    edi,0xcc908b3a
  417fab:	jo     0x417f9e
  417fad:	jmp    0xa9c8b890
  417fb2:	retf   
  417fb3:	cld    
  417fb4:	mov    ah,0xf0
  417fb6:	int3   
  417fb7:	jg     0x418016
  417fb9:	pusha  
  417fba:	ret    0x4204
  417fbd:	in     eax,0x4d
  417fbf:	ds adc al,0x89
  417fc2:	inc    ecx
  417fc3:	jno    0x417f77
  417fc5:	jmp    0x644dff97
  417fca:	xchg   esp,eax
  417fcb:	jo     0x418025
  417fcd:	pusha  
  417fce:	mov    ebp,0xccecccae
  417fd3:	jg     0x417fe1
  417fd5:	jmp    0xae0b1921
  417fda:	adc    DWORD PTR [ecx-0xf],esi
  417fdd:	jmp    0x29ceffae
  417fe2:	add    BYTE PTR [esi+0x7fcce50c],dh
  417fe8:	jle    0x417fef
  417fea:	dec    ebp
  417feb:	ds or  al,0xe5
  417fee:	int3   
  417fef:	jg     0x417f7e
  417ff1:	sub    al,ah
  417ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff4:	cmc    
  417ff5:	je     0x417ff7
	...
  417fff:	add    BYTE PTR [edx],cl
  418001:	pop    es
  418002:	sbb    ch,0xd0
  418005:	jo     0x417ff8
  418007:	(bad)  
  418008:	(bad)  
  41800a:	ret    
  41800b:	out    0x42,al
  41800d:	cli    
  41800e:	daa    
  41800f:	in     eax,0xcc
  418011:	jg     0x417f96
  418013:	addr16 mov bl,0x7c
  418016:	or     al,0xe9
  418018:	sub    edx,DWORD PTR [edx]
  41801a:	or     BYTE PTR [eax],al
  41801c:	mov    dl,0x7c
  41801e:	or     al,0x89
  418020:	sbb    BYTE PTR [eax-0xc59fff8],al
  418026:	mov    ebp,DWORD PTR ss:[eax]
  418029:	cwde   
  41802a:	or     BYTE PTR [eax],al
  41802c:	jbe    0x41801f
  41802e:	call   0x1889:0xc7c7210
  418035:	xchg   esp,eax
  418036:	or     BYTE PTR [eax],al
  418038:	jbe    0x41802c
  41803a:	or     DWORD PTR [ecx-0x74ef584e],ecx
  418040:	mov    dl,0xa7
  418042:	pop    eax
  418043:	mov    BYTE PTR [ebx+edi*2-0x6e],ch
  418047:	adc    al,0x32
  418049:	jl     0x418057
  41804b:	add    DWORD PTR [eax-0x75],ecx
  41804e:	or     BYTE PTR [eax],al
  418050:	es mov ah,0x89
  418053:	jl     0x418017
  418055:	mov    ecx,DWORD PTR [ecx-0x767c2d84]
  41805b:	sahf   
  41805c:	sub    bh,BYTE PTR [eax+0xc]
  41805f:	add    BYTE PTR [edi+0x5828cf],bl
	...
  41806d:	add    BYTE PTR ds:0xc585ff39,bl
  418073:	test   BYTE PTR [eax+eax*1],cl
  418076:	jnp    0x418078
  418078:	or     al,0x0
  41807a:	out    0x7b,al
  41807c:	add    DWORD PTR [edx+eax*1-0x40],0xffffff8d
  418081:	rol    BYTE PTR [edx-0x5e],0x83
  418085:	dec    esp
  418086:	adc    al,BYTE PTR [ecx+esi*1+0x14982a89]
  41808d:	test   BYTE PTR [edi+0x628b25f6],ch
  418093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418094:	ins    BYTE PTR es:[edi],dx
  418095:	mov    edi,DWORD PTR [eax]
  418097:	xchg   ebx,eax
  418098:	or     BYTE PTR [eax],al
  41809a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41809b:	mov    es,WORD PTR [eax+0x24]
  41809e:	iret   
  41809f:	test   al,0x5a
  4180a1:	mov    DWORD PTR [ecx+0x75],eax
  4180a4:	or     DWORD PTR [eax],eax
  4180a6:	iret   
  4180a7:	xchg   ecx,eax
  4180a8:	push   esp
  4180a9:	and    al,0xff
  4180ab:	xchg   DWORD PTR [ecx+0x4c],esi
  4180ae:	jmp    0x418044
  4180b0:	pop    edx
  4180b1:	dec    edi
  4180b2:	mov    BYTE PTR [ecx],cl
  4180b4:	mov    al,ah
  4180b6:	(bad)  
  4180b8:	int    0xd
  4180ba:	push   ebx
  4180bb:	xchg   esp,eax
  4180bc:	add    eax,0x4151cf00
  4180c1:	and    al,0xcb
  4180c3:	xchg   ebx,eax
  4180c4:	sbb    cl,BYTE PTR [ecx-0x76b6c30d]
  4180ca:	add    eax,DWORD PTR [ebp+0x4d]
  4180cd:	xchg   ebx,esp
  4180cf:	cmp    al,0x11
  4180d1:	xchg   DWORD PTR [eax],eax
	...
  4180db:	add    BYTE PTR [ebx-0x1f16eabc],ah
  4180e1:	icebp  
  4180e2:	dec    ecx
  4180e3:	and    al,0xa3
  4180e5:	icebp  
  4180e6:	mov    edx,DWORD PTR [ebx+ecx*8]
  4180e9:	pop    eax
  4180ea:	or     eax,0x5a290c29
  4180ef:	dec    edi
  4180f0:	push   edx
  4180f1:	or     eax,0xf17d3429
  4180f6:	retf   
  4180f7:	call   0xfe403348
  4180fc:	push   esp
  4180fd:	sub    eax,0xa44c2c29
  418102:	pop    es
  418103:	or     eax,0x4c74b
  418108:	iret   
  418109:	loope  0x41808e
  41810b:	and    al,0xd3
  41810d:	pop    eax
  41810e:	or     eax,0x193c8bc5
  418113:	add    bh,cl
  418115:	pop    eax
  418116:	or     eax,0x153c8b37
  41811b:	jae    0x41814a
  41811d:	(bad)  
  41811f:	call   ecx
  418121:	jg     0x418184
  418123:	push   esi
  418124:	into   
  418125:	jg     0x41810a
  418127:	sub    cl,BYTE PTR [ebx]
  418129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41812a:	sbb    eax,DWORD PTR [ecx]
  41812c:	push   ebx
  41812d:	mov    bh,0xe6
  41812f:	add    ecx,edi
  418131:	cli    
  418132:	push   ds
  418133:	sub    BYTE PTR [edi-0x12ee12a],bh
  418139:	iret   
  41813a:	outs   dx,BYTE PTR ds:[esi]
  41813b:	ret    0x6177
  41813e:	mov    bh,0xf1
	...
  418148:	add    BYTE PTR [eax],al
  41814a:	cmp    dl,0x36
  41814d:	sub    BYTE PTR [edi-0x7e82cb2a],dh
  418153:	cli    
  418154:	mov    edx,0x827623dc
  418159:	icebp  
  41815a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41815b:	inc    edx
  41815c:	cli    
  41815d:	jle    0x418113
  41815f:	and    bl,0x3
  418162:	inc    esi
  418163:	ret    
  418164:	mov    edi,0xe880042b
  418169:	add    ecx,edi
  41816b:	jmp    0x418169
  41816d:	test   BYTE PTR [edx],bh
  41816f:	and    edx,0xe382c887
  418175:	add    esp,esp
  418177:	jg     0x418139
  418179:	add    ecx,edi
  41817b:	jmp    0x418179
  41817d:	test   BYTE PTR [edx],bl
  41817f:	and    dl,0x87
  418182:	sbb    BYTE PTR [ecx-0x34a9fc1d],al
  418188:	pop    es
  418189:	dec    esp
  41818a:	push   esi
  41818b:	ret    
  41818c:	mov    edi,0xf7154657
  418191:	pop    es
  418192:	iret   
  418193:	jg     0x418163
  418195:	les    edx,FWORD PTR [eax-0x3d]
  418198:	(bad)  
  418199:	and    edx,DWORD PTR [edi-0x27c28731]
  41819f:	into   
  4181a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181a1:	push   ebp
  4181a2:	inc    esp
  4181a3:	ret    
  4181a4:	or     al,0xcd
  4181a6:	or     al,dl
  4181a8:	test   DWORD PTR [edi],ebx
  4181aa:	mov    ds:0xe6f64c,eax
	...
  4181b7:	add    BYTE PTR [edi-0x2cfac009],bh
  4181bd:	mov    ah,0x40
  4181bf:	or     eax,0xe84cf913
  4181c4:	and    eax,0x1e528c4
  4181c9:	in     al,dx
  4181ca:	xor    esi,DWORD PTR [edx+0x7d]
  4181cd:	rol    BYTE PTR [ebp-0x63b5b59],cl
  4181d3:	scas   al,BYTE PTR es:[edi]
  4181d4:	jg     0x4181cd
  4181d6:	aas    
  4181d7:	int    0xc
  4181d9:	add    eax,0xf6a8c548
  4181de:	inc    edi
  4181df:	int    0x10
  4181e1:	rcr    BYTE PTR [ebx+0x62],1
  4181e4:	mov    ds,WORD PTR [eax+0x21]
  4181e7:	jle    0x418248
  4181e9:	imul   eax,DWORD PTR [ebp+0x25a3a72d],0xffffffa1
  4181f0:	rol    DWORD PTR [esp+esi*4-0x50],cl
  4181f4:	dec    esi
  4181f5:	pop    edi
  4181f6:	xor    al,0x5e
  4181f8:	adc    eax,0xa72f63d
  4181fd:	sub    eax,0x41d3f6e4
  418202:	in     eax,0x19
  418204:	mov    ds:0x7c1528bb,al
  418209:	test   cl,0x51
  41820c:	adc    eax,0x8b36f174
  418211:	shr    DWORD PTR [eax],cl
  418213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418214:	add    DWORD PTR [edi-0x7b],0xffffffad
  418218:	mov    al,0xbf
  41821a:	pop    esi
  41821b:	mov    ecx,0x0
  418220:	add    BYTE PTR [eax],al
  418222:	add    BYTE PTR [eax],al
  418224:	add    BYTE PTR [eax],al
  418226:	jae    0x418265
  418228:	in     al,0x1f
  41822a:	out    0x6a,al
  41822c:	icebp  
  41822d:	ret    0xf714
  418230:	int3   
  418231:	add    BYTE PTR [ebp-0x44],bl
  418234:	sub    BYTE PTR [eax+0x6f],bl
  418237:	add    ebp,esi
  418239:	add    esi,DWORD PTR [ebp-0x4b074ebe]
  41823f:	or     DWORD PTR [eax+0x24],0xffffffea
  418243:	cwde   
  418244:	in     al,0x7d
  418246:	mov    esi,0xaa244845
  41824b:	or     DWORD PTR [eax+eax*1],0xffffffb6
  41824f:	imul   esi
  418251:	jbe    0x418221
  418253:	call   0x8b3c:0xefea2460
  41825a:	mov    dl,0x97
  41825c:	and    al,0x55
  41825e:	out    0xe8,eax
  418260:	ret    0xf0e8
  418263:	jne    0x418254
  418265:	(bad)  
  418266:	std    
  418267:	(bad)  
  418268:	sub    BYTE PTR [ebp+ebp*8+0x3b],al
  41826c:	add    DWORD PTR [edx+ecx*4-0x40],0x5e
  418271:	push   eax
  418272:	(bad)  ds:0x5cd8abe4
  418278:	out    dx,eax
  418279:	cmp    esi,DWORD PTR [ebp-0x18]
  41827c:	push   eax
  41827d:	and    al,0xde
  41827f:	out    dx,al
  418280:	add    al,0xc7
  418282:	push   0xffffffa4
  418284:	sbb    BYTE PTR [ecx],al
  418286:	or     BYTE PTR es:[eax*4+0x0],0x0
  41828f:	add    BYTE PTR [eax],al
  418291:	add    BYTE PTR [eax],al
  418293:	add    BYTE PTR [ecx+0x623945e6],al
  418299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41829a:	dec    eax
  41829b:	jge    0x418306
  41829d:	jmp    0x806b9724
  4182a2:	or     al,0x6a
  4182a4:	not    eax
  4182a6:	inc    ecx
  4182a7:	mov    esp,eax
  4182a9:	dec    ebx
  4182aa:	(bad)  
  4182ab:	repz mov cl,0x5c
  4182ae:	adc    DWORD PTR [edx+ecx*1-0x3c],0xffffff83
  4182b3:	fmul   st,st(7)
  4182b5:	loope  0x4182fb
  4182b7:	and    al,0x8f
  4182b9:	sub    BYTE PTR [ebp-0x77],bl
  4182bc:	or     DWORD PTR [esi+0x6cd0f66b],ecx
  4182c2:	jbe    0x418310
  4182c4:	repz inc eax
  4182c6:	push   esp
  4182c7:	dec    edi
  4182c8:	push   esp
  4182c9:	mov    ecx,DWORD PTR [ebx-0x2aa828a4]
  4182cf:	pop    esp
  4182d0:	mov    ecx,0x8739e24a
  4182d5:	fiadd  WORD PTR [ecx+0x24]
  4182d8:	pop    es
  4182d9:	mov    ebx,0x7d13c4f6
  4182de:	adc    al,0x0
  4182e0:	iret   
  4182e1:	pop    eax
  4182e2:	or     eax,0x61d5d4e9
  4182e7:	and    al,0xdb
  4182e9:	pop    eax
  4182ea:	repnz or BYTE PTR [ecx+0x4c000d56],0xc
  4182f2:	or     ecx,DWORD PTR ds:0x8be59
	...
  418300:	add    BYTE PTR [eax],al
  418302:	iret   
  418303:	fstp   QWORD PTR [ecx+0x24]
  418306:	scas   eax,DWORD PTR es:[edi]
  418307:	in     eax,dx
  418308:	xchg   DWORD PTR [ebx+ecx*8],edx
  41830b:	pop    eax
  41830c:	or     eax,0x5bf30d81
  418311:	or     DWORD PTR [edi+edx*2],0x570f815e
  418318:	pop    ebp
  418319:	mov    eax,DWORD PTR [ebx+0x544f3c84]
  41831f:	mov    ds:0xba2690d5,eax
  418324:	loop   0x4182af
  418326:	xchg   ebx,eax
  418327:	jl     0x418361
  418329:	cmp    DWORD PTR [ebx-0x5c76ef7c],ecx
  41832f:	jl     0x418365
  418331:	push   edx
  418332:	push   esp
  418333:	mov    ebx,DWORD PTR [ebp+0x7c]
  418336:	lods   al,BYTE PTR ds:[esi]
  418337:	jg     0x418354
  418339:	lock cld 
  41833b:	push   0x12
  41833d:	jp     0x418346
  41833f:	neg    DWORD PTR [esi-0x4c2b48d9]
  418345:	jp     0x418350
  418347:	pop    eax
  418348:	sbb    eax,edi
  41834a:	shr    BYTE PTR [edx-0x22],cl
  41834d:	ret    0xfe60
  418350:	add    al,0x2
  418352:	into   
  418353:	cmp    eax,0x6878bb6e
  418358:	in     eax,0xd8
  41835a:	in     eax,0x57
  41835c:	int    0xf7
  41835e:	stos   BYTE PTR es:[edi],al
  41835f:	push   0x6e
  418361:	int3   
  418362:	push   esi
  418363:	ret    
  418364:	pop    es
  418365:	sbb    al,0x0
	...
  41836f:	add    ah,bh
  418371:	iret   
  418372:	jle    0x418332
  418374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418375:	ss mov eax,0xaaf68aed
  41837b:	sbb    DWORD PTR [esi+0x70acac7e],edx
  418381:	sbb    eax,0x587a1e7e
  418386:	mov    ah,0xea
  418388:	push   esi
  418389:	xor    eax,0x7ec2dba4
  41838e:	lods   eax,DWORD PTR ds:[esi]
  41838f:	jns    0x4183a4
  418391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418392:	scas   eax,DWORD PTR es:[edi]
  418393:	add    BYTE PTR [edi-0x2890635a],al
  418399:	inc    edx
  41839a:	pop    ds
  41839b:	sub    bl,bl
  41839d:	and    bl,0x3
  4183a0:	iret   
  4183a1:	add    al,0x6a
  4183a3:	jbe    0x41838c
  4183a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183a6:	sub    BYTE PTR [eax-0xd],dh
  4183a9:	imul   BYTE PTR [esi-0x4a3020d9]
  4183af:	js     0x4183ba
  4183b1:	push   edi
  4183b2:	jns    0x4183ab
  4183b4:	adc    ch,BYTE PTR [edx+0x7e]
  4183b7:	int3   
  4183b8:	push   esi
  4183b9:	ret    
  4183ba:	or     al,0xd
  4183bc:	jecxz  0x41838c
  4183be:	pop    esp
  4183bf:	bound  edi,QWORD PTR [ecx]
  4183c1:	push   edi
  4183c2:	jno    0x4183e0
  4183c4:	loop   0x418431
  4183c6:	xor    eax,0xdf5ea41
  4183cb:	jmp    0x93b0:0x8d8d7fcc
  4183d2:	or     al,0xf6
	...
  4183dc:	add    BYTE PTR [eax],al
  4183de:	dec    ecx
  4183df:	je     0x4183ef
  4183e1:	jmp    0xeb3082b2
  4183e6:	ret    
  4183e7:	sti    
  4183e8:	xlat   BYTE PTR ds:[ebx]
  4183e9:	jmp    0x35c703ba
  4183ee:	out    0x9f,eax
  4183f0:	test   DWORD PTR ds:0x6f85c7f7,esi
  4183f6:	mov    eax,0x4fe90c83
  4183fb:	sub    edi,ebp
  4183fd:	sbb    BYTE PTR [esi+0x3e],cl
  418400:	or     eax,0xd404e1b
  418405:	sbb    DWORD PTR [eax],eax
  418407:	mov    esp,0xf71ded28
  41840c:	rcl    DWORD PTR [ecx-0x610e97db],0xe7
  418413:	ret    
  418414:	sub    cl,bl
  418416:	out    0xd3,eax
  418418:	sub    ch,dl
  41841a:	xlat   BYTE PTR ds:[ebx]
  41841b:	retf   
  41841c:	sub    cl,dl
  41841e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41841f:	ds pop esi
  418421:	jb     0x4183ad
  418423:	shl    BYTE PTR [eax-0x34],1
  418426:	and    al,0xa4
  418428:	imul   DWORD PTR [esi+0x2b]
  41842b:	int    0x5d
  41842d:	jb     0x4184a1
  41842f:	add    DWORD PTR [eax+0x5],ecx
  418432:	out    dx,eax
  418433:	push   edi
  418434:	sbb    DWORD PTR [ebx+esi*1+0x6b],ebx
  418438:	test   DWORD PTR [ebp+0x25a3f0],ebx
  41843e:	out    0xf5,eax
  418440:	mov    ah,dl
	...
  41844a:	add    BYTE PTR [eax],al
  41844c:	cmc    
  41844d:	jg     0x41841d
  41844f:	mov    ebp,DWORD PTR [esi-0x72fd06c3]
  418455:	mov    ah,ah
  418457:	call   edx
  418459:	pop    ebx
  41845a:	out    dx,eax
  41845b:	push   ebp
  41845c:	and    eax,0x3289c2e8
  418461:	mov    eax,ds:0x70b4e820
  418466:	out    dx,eax
  418467:	call   FWORD PTR [ebp+0x24]
  41846a:	add    DWORD PTR [edx+edx*4-0x60],0x23
  41846f:	enter  0x25b5,0xb4
  418473:	jmp    0xf7646c7c
  418478:	lahf   
  418479:	push   edx
  41847a:	test   BYTE PTR [ebx+0x1fe9425c],0xb5
  418481:	sub    al,BYTE PTR [ebx+0xbafd244]
  418487:	enter  0x4acd,0x75
  41848b:	or     BYTE PTR [ecx],dh
  41848d:	mov    edi,0x7c771428
  418492:	or     al,0x0
  418494:	repz push esp
  418496:	jp     0x4184c0
  418498:	ins    DWORD PTR es:[edi],dx
  418499:	aas    
  41849a:	jo     0x4184c0
  41849c:	(bad)  
  41849e:	sub    BYTE PTR [eax],dh
  4184a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184a1:	rol    DWORD PTR [ebx-0x7cdb132],1
  4184a7:	dec    DWORD PTR [ecx-0x18]
  4184aa:	aam    0x8b
  4184ac:	repnz lahf 
  4184ae:	and    al,0x55
	...
  4184b8:	add    BYTE PTR [eax],al
  4184ba:	out    0xe8,al
  4184bc:	ret    0x84e8
  4184bf:	outs   dx,DWORD PTR ds:[esi]
  4184c0:	out    dx,eax
  4184c1:	(bad)  
  4184c2:	in     eax,dx
  4184c3:	cmp    edi,edi
  4184c5:	mov    edx,ebx
  4184c7:	or     DWORD PTR [eax+eax*1],0x2464d5cf
  4184ce:	ret    
  4184cf:	push   esi
  4184d0:	test   BYTE PTR [edx+0xd54b5],0x54
  4184d7:	or     dl,BYTE PTR [ecx]
  4184d9:	pop    eax
  4184da:	dec    edx
  4184db:	mov    cl,0xf5
  4184dd:	and    DWORD PTR [edi+edx*2+0xd],0x0
  4184e2:	dec    esp
  4184e3:	mov    eax,ds:0x26510d07
  4184e8:	or     BYTE PTR [eax],al
  4184ea:	iret   
  4184eb:	fstp   QWORD PTR [esp-0x7d]
  4184ef:	fnsave [ebp+0xcf30429]
  4184f5:	or     al,BYTE PTR [esi+ebx*4]
  4184f8:	jle    0x4184fc
  4184fa:	push   esp
  4184fb:	xchg   esi,eax
  4184fc:	pop    eax
  4184fd:	mov    DWORD PTR [ebx],edx
  4184ff:	cmp    eax,0xaa902901
  418504:	pop    eax
  418505:	mov    ebx,DWORD PTR [ebx]
  418507:	jge    0x41852d
  418509:	dec    edi
  41850a:	push   esp
  41850b:	pop    ds
  41850c:	jo     0x41856a
  41850e:	repz jl 0x4184e1
  418511:	int3   
  418512:	cwde   
  418513:	ds out 0x37,al
  418516:	or     edi,DWORD PTR [ebp+0x3c]
  418519:	jb     0x4184d6
  41851b:	loope  0x41855e
  41851d:	and    al,0x0
	...
  418527:	add    BYTE PTR [edi-0x7e76a573],bh
  41852d:	adc    DWORD PTR [esp+esi*8],esp
  418530:	push   0x54d87206
  418535:	xchg   ebp,eax
  418536:	sub    al,0x38
  418538:	add    BYTE PTR [ecx+0x4f67ce71],ch
  41853e:	loope  0x41853d
  418540:	dec    eax
  418541:	inc    edx
  418542:	retf   0xa389
  418545:	xor    al,0x1
  418547:	jle    0x418528
  418549:	loope  0x418584
  41854b:	and    al,0xff
  41854d:	jg     0x4185cd
  41854f:	dec    edi
  418550:	rep stos DWORD PTR es:[edi],eax
  418552:	jl     0x41858b
  418554:	jmp    0x4184fd
  418556:	ins    BYTE PTR es:[edi],dx
  418557:	dec    edi
  418558:	repz mov ds:0x8feb3f6e,eax
  41855e:	xchg   edx,eax
  41855f:	push   esi
  418560:	lahf   
  418561:	cli    
  418562:	and    bl,bl
  418564:	stos   BYTE PTR es:[edi],al
  418565:	jo     0x4185a1
  418567:	jmp    0xd09a:0x2c07b446
  41856e:	jle    0x418529
  418570:	push   esi
  418571:	dec    eax
  418572:	sbb    ebp,esp
  418574:	fisub  WORD PTR [esi+0x1a]
  418577:	cs push cs
  418579:	ja     0x4185cb
  41857b:	mov    ds:0x7ee37fcf,al
  418580:	sub    ebx,DWORD PTR [ebx+ebx*8-0x20649ed2]
  418587:	add    ecx,edi
  418589:	in     al,dx
  41858a:	fwait
  41858b:	jle    0x41858d
	...
  418595:	add    BYTE PTR [ebx],bl
  418597:	pushf  
  418598:	out    dx,eax
  418599:	jl     0x4185ae
  41859b:	pushf  
  41859c:	repz push eax
  41859e:	std    
  41859f:	iret   
  4185a0:	outs   dx,BYTE PTR ds:[esi]
  4185a1:	mov    edx,0xe9d371a7
  4185a6:	xchg   edx,eax
  4185a7:	int3   
  4185a8:	push   ss
  4185a9:	jge    0x418544
  4185ab:	clc    
  4185ac:	and    BYTE PTR es:[ebx+0x7af5a157],dh
  4185b3:	data16 outs dx,BYTE PTR ds:[esi]
  4185b5:	cmp    BYTE PTR [ebx+0x56bbe69b],ch
  4185bb:	push   edx
  4185bc:	cmp    BYTE PTR [esi+0x48],al
  4185bf:	mov    bl,0xbf
  4185c1:	sbb    edi,ebp
  4185c3:	cli    
  4185c4:	nop
  4185c5:	fcomp  QWORD PTR [edi]
  4185c7:	jb     0x418553
  4185c9:	jmp    0x40bfcd24
  4185ce:	jmp    0x418577
  4185d0:	or     al,0x1e
  4185d2:	mov    ds:0x6c81c1f8,eax
  4185d7:	jo     0x4185ca
  4185d9:	data16 stos BYTE PTR es:[edi],al
  4185db:	shr    DWORD PTR [eax],cl
  4185dd:	or     eax,0xad8547ca
  4185e2:	mov    eax,0x922a359b
  4185e7:	ret    
  4185e8:	sub    BYTE PTR [ecx-0x1a1a418a],ah
  4185ee:	add    ebx,0x28
  4185f1:	xchg   ecx,eax
  4185f2:	jnp    0x4185af
  4185f4:	sub    cl,dh
  4185f6:	mov    ds:0xed27fd,eax
	...
  418603:	add    ah,cl
  418605:	jg     0x41867e
  418607:	lock dec ebx
  418609:	and    eax,0x7fcced24
  41860e:	or     al,0x95
  418610:	ret    
  418611:	stos   BYTE PTR es:[edi],al
  418612:	or     al,0xec
  418614:	int3   
  418615:	jg     0x418687
  418617:	in     al,0x4b
  418619:	arpl   WORD PTR [esi],cx
  41861b:	jge    0x41860f
  41861d:	in     al,0x70
  41861f:	(bad)
  418622:	outs   dx,DWORD PTR ds:[esi]
  418623:	jmp    0x6a4969f4
  418628:	mov    bh,0x7f
  41862a:	js     0x418626
  41862c:	sbb    esi,DWORD PTR [eax+ebp*1-0x7a4b01ef]
  418633:	mov    bh,0xa4
  418635:	ss std 
  418637:	mov    esi,0x623c5777
  41863c:	adc    BYTE PTR [esp+edx*2+0x1c9bb062],bl
  418643:	jb     0x4185c8
  418645:	xchg   edi,eax
  418646:	fnstcw WORD PTR [ebx]
  418648:	sti    
  418649:	test   cl,0x81
  41864c:	inc    ecx
  41864d:	jo     0x418640
  41864f:	mov    fs,WORD PTR [edi-0x44]
  418652:	sub    BYTE PTR [eax],al
  418654:	es cld 
  418656:	fiadd  WORD PTR [ecx]
  418658:	cmp    ebx,DWORD PTR [edi-0x1d]
  41865b:	adc    ch,BYTE PTR [ebp-0x6cefd74c]
  418661:	mov    ds:0xe46451ef,eax
  418666:	ret    0xe8
	...
  418671:	add    BYTE PTR [eax+esi*2+0x56b5ffef],ah
  418678:	mov    edi,ebp
  41867a:	and    eax,0xf6818068
  41867f:	or     BYTE PTR [ebx+ecx*4],0x68
  418683:	je     0x41868d
  418685:	add    dh,ah
  418687:	mov    ch,0x5b
  418689:	push   eax
  41868a:	ins    DWORD PTR es:[edi],dx
  41868b:	es in  al,0x1e
  41868e:	(bad)  
  41868f:	push   edi
  418690:	out    dx,eax
  418691:	mov    esi,DWORD PTR [edx]
  418693:	test   DWORD PTR [edx*2-0x743d1be9],esp
  41869a:	sahf   
  41869b:	dec    eax
  41869c:	cld    
  41869d:	repnz rcl DWORD PTR [edi+0x33],1
  4186a1:	ret    
  4186a2:	inc    ecx
  4186a3:	mov    DWORD PTR [ebx+0x33888a44],eax
  4186a9:	xchg   BYTE PTR [edx+0xbfff164],cl
  4186af:	arpl   WORD PTR [esi+edi*4+0xc7fbe],cx
  4186b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186b7:	aam    0x4d
  4186b9:	cmp    eax,0xc7fa6
  4186be:	adc    bh,BYTE PTR [edi-0x75]
  4186c1:	std    
  4186c2:	je     0x418698
  4186c4:	pop    es
  4186c5:	cmp    eax,0xcd766
  4186ca:	mov    ds:0x9a5c83b1,al
  4186cf:	mov    eax,0x748a6c89
  4186d4:	(bad)  
  4186d5:	in     eax,dx
	...
  4186de:	add    BYTE PTR [eax],al
  4186e0:	iret   
  4186e1:	sub    BYTE PTR [eax],0x89
  4186e4:	cmp    DWORD PTR [edx-0xf],ebp
  4186e7:	dec    DWORD PTR [eax-0x77]
  4186ea:	pop    esi
  4186eb:	mov    DWORD PTR [ecx],edx
  4186ed:	push   cs
  4186ee:	daa    
  4186ef:	lock cmp ch,ch
  4186f2:	mov    al,ds:0xd5630ff
  4186f7:	call   DWORD PTR [edx+0x62]
  4186fa:	icebp  
  4186fb:	jmp    DWORD PTR [eax]
  4186fd:	(bad)  
  4186fe:	dec    esp
  4186ff:	and    al,0xc3
  418701:	inc    ebx
  418702:	in     eax,dx
  418703:	mov    esi,DWORD PTR [ebx+0x53]
  418706:	jmp    0xa724:0x44f1a5e9
  41870d:	icebp  
  41870e:	dec    esp
  41870f:	and    al,0xa7
  418711:	add    ebx,DWORD PTR [ebp-0x77]
  418714:	add    DWORD PTR [esi-0x63170ef3],edi
  41871a:	pop    es
  41871b:	scas   al,BYTE PTR es:[edi]
  41871c:	mov    ebx,0x4a000d5a
  418721:	sub    al,BYTE PTR [edi*8+0x5c7632e4]
  418728:	repz and BYTE PTR [ebp+edi*8+0x4c764b3a],cl
  418730:	repz inc eax
  418732:	jbe    0x4186ca
  418734:	fistp  DWORD PTR [ebp+ecx*1+0x0]
  418738:	push   esi
  418739:	int    0x2c
  41873b:	cmp    al,0x56
  41873d:	xchg   ebp,eax
  41873e:	sub    al,0x38
  418740:	inc    esi
  418741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418742:	sub    al,0x10
	...
  41874c:	add    BYTE PTR [eax],al
  41874e:	or     BYTE PTR [esi],bh
  418750:	inc    DWORD PTR [edx+0x450da588]
  418756:	je     0x4187aa
  418758:	jbe    0x4186e0
  41875a:	jecxz  0x4187b0
  41875c:	or     eax,0x75891c00
  418761:	into   
  418762:	ja     0x4186e4
  418764:	push   ecx
  418765:	(bad)  
  418766:	bound  esp,QWORD PTR [ebx-0x6e]
  418769:	jge    0x41872e
  41876b:	jnp    0x418750
  41876d:	add    ecx,DWORD PTR [ebx+eiz*2-0x2e]
  418771:	jg     0x4187a9
  418773:	and    bl,0x3
  418776:	push   es
  418777:	in     al,0xc7
  418779:	daa    
  41877a:	retf   0x83fc
  41877d:	add    ecx,edi
  41877f:	jg     0x4187ef
  418781:	dec    edi
  418782:	repz retf 
  418784:	jle    0x41873c
  418786:	div    BYTE PTR [esi]
  418788:	pusha  
  418789:	inc    esi
  41878b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41878c:	and    ch,BYTE PTR [ebp-0x33]
  41878f:	imul   BYTE PTR [ecx]
  418791:	push   ebx
  418792:	push   esi
  418793:	mov    esp,0x57560fff
  418798:	push   ds
  418799:	xlat   BYTE PTR ds:[ebx]
  41879a:	pushf  
  41879b:	iret   
  41879c:	push   0x94a3ab37
  4187a1:	jp     0x4187bc
  4187a3:	stc    
  4187a4:	xchg   esi,eax
  4187a5:	pop    ds
  4187a6:	stos   DWORD PTR es:[edi],eax
  4187a7:	push   edi
  4187a8:	cdq    
  4187a9:	lock fisub DWORD PTR [edx-0x24]
  4187ad:	stos   DWORD PTR es:[di],eax
  4187af:	stos   DWORD PTR es:[edi],eax
  4187b0:	xchg   ebp,eax
  4187b1:	das    
	...
  4187ba:	add    BYTE PTR [eax],al
  4187bc:	push   esi
  4187bd:	retf   
  4187be:	mov    edi,0x7ece1a33
  4187c3:	mov    ch,0xa7
  4187c5:	pop    edx
  4187c6:	hlt    
  4187c7:	in     eax,0xb2
  4187c9:	test   BYTE PTR [edx],0x7a
  4187cc:	adc    ebx,DWORD PTR [ebx+ebp*1-0x5f0900b3]
  4187d3:	fdiv   QWORD PTR [edi+0x70]
  4187d6:	(bad)  
  4187d8:	(bad)  
  4187d9:	cmp    al,0x6e
  4187db:	pop    eax
  4187dc:	mov    bl,0x8b
  4187de:	dec    ecx
  4187df:	adc    al,0x56
  4187e1:	mov    bl,0x7
  4187e3:	xor    al,0x46
  4187e5:	retf   
  4187e6:	or     al,0xd
  4187e8:	mov    edi,0xbb053ffa
  4187ed:	cli    
  4187ee:	push   edi
  4187ef:	int    0xa8
  4187f1:	clc    
  4187f2:	inc    edi
  4187f3:	lds    edi,FWORD PTR [esp+ecx*8+0x31d63957]
  4187fa:	in     al,0xb8
  4187fc:	and    DWORD PTR [ecx+esi*8+0x72],esp
  418800:	pop    es
  418801:	pushf  
  418802:	xor    al,0x16
  418804:	pushf  
  418805:	clc    
  418806:	shl    DWORD PTR [edx+0x13],0x57
  41880a:	lods   eax,DWORD PTR ds:[esi]
  41880b:	js     0x41883f
  41880d:	fs xor eax,0x85a5a82c
  418813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418814:	mov    eax,0xef6f35a7
  418819:	jnp    0x418827
  41881b:	jmp    0x87cf0299
	...
  418828:	add    BYTE PTR [eax],al
  41882a:	jecxz  0x4188a7
  41882c:	or     al,0xe9
  41882e:	int3   
  41882f:	jmp    0x418845
  418831:	hlt    
  418832:	int3   
  418833:	jle    0x418841
  418835:	jmp    0x26cf06aa
  41883a:	int    0xeb
  41883c:	adc    ebx,esp
  41883e:	int3   
  41883f:	out    0xc,al
  418841:	jmp    0xecf06ae
  418846:	into   
  418847:	jmp    0x418848
  418849:	popf   
  41884a:	sbb    al,0xf7
  41884c:	rcl    DWORD PTR [ecx],0x96
  41884f:	push   ecx
  418850:	icebp  
  418851:	idiv   bh
  418853:	(bad)  
  418854:	in     eax,0xc9
  418856:	daa    
  418857:	aam    0x28
  418859:	stc    
  41885a:	mov    eax,ds:0xcce9f161
  41885f:	neg    ah
  418861:	add    al,BYTE PTR [edx+0x426257ce]
  418867:	pop    eax
  418868:	leave  
  418869:	add    BYTE PTR [eax-0x1aba10a4],bl
  41886f:	dec    ebx
  418870:	icebp  
  418871:	je     0x4187fe
  418873:	out    0x60,al
  418875:	and    al,0x86
  418877:	call   0xbee3acc4
  41887c:	inc    esp
  41887d:	mov    DWORD PTR [edx+0x1e3b549f],ebx
  418883:	ins    BYTE PTR es:[edi],dx
  418884:	mov    esi,DWORD PTR [edi-0x7a10a3a2]
  41888a:	dec    ecx
  41888b:	ins    BYTE PTR es:[edi],dx
  41888c:	lea    ebx,[eax+eax*1+0x0]
  418893:	add    BYTE PTR [eax],al
  418895:	add    BYTE PTR [eax],al
  418897:	add    BYTE PTR [esi],ah
  418899:	jge    0x4188a7
  41889b:	cmp    DWORD PTR [ecx-0x4a7a0083],0x7c
  4188a2:	or     al,0x0
  4188a4:	popf   
  4188a5:	test   al,0x28
  4188a7:	adc    BYTE PTR [ecx-0x18],ah
  4188aa:	retf   
  4188ab:	sub    esp,ecx
  4188ad:	int3   
  4188ae:	inc    ecx
  4188af:	mov    ebp,eax
  4188b1:	inc    esp
  4188b2:	pop    ds
  4188b3:	out    dx,al
  4188b4:	mov    DWORD PTR [ebx-0x7d],ebx
  4188b7:	push   esp
  4188b8:	rcl    BYTE PTR [ebx+0x2a6d5257],cl
  4188be:	sub    eax,0xffffff8e
  4188c1:	jge    0x4188a4
  4188c3:	jmp    FWORD PTR [ecx+0x337fcd97]
  4188c9:	call   0x983fad16
  4188ce:	mov    ah,BYTE PTR [edx+esi*4]
  4188d1:	jl     0x4188df
  4188d3:	jne    0x418894
  4188d5:	push   DWORD PTR [ecx+0xc7cb228]
  4188db:	add    BYTE PTR [edx],dh
  4188dd:	jne    0x418914
  4188df:	add    BYTE PTR [ebx-0x4c83f384],dh
  4188e5:	stc    
  4188e6:	out    dx,al
  4188e7:	add    al,BYTE PTR [edx]
  4188e9:	cwde   
  4188ea:	xor    eax,0x8cbcf00
  4188ef:	add    BYTE PTR [ebx],cl
  4188f1:	pop    esp
  4188f2:	mov    bh,ch
  4188f4:	int3   
  4188f5:	mov    ds:0xee1f54f0,al
  4188fa:	fsubp  st(0),st
	...
  418904:	add    BYTE PTR [eax],al
  418906:	push   es
  418907:	sub    ch,ch
  418909:	std    
  41890a:	je     0x418974
  41890c:	dec    esp
  41890d:	pop    ecx
  41890e:	add    dh,dl
  418910:	sar    ch,0xf9
  418913:	aad    0xc4
  418915:	cmp    BYTE PTR [ebp-0x4476f292],cl
  41891b:	cmp    bh,ch
  41891d:	mov    BYTE PTR [ecx*2-0x125daf3a],cl
  418924:	fsubp  st(0),st
  418926:	sar    al,1
  418928:	in     al,dx
  418929:	std    
  41892a:	xchg   edx,eax
  41892b:	aad    0xfd
  41892d:	call   FWORD PTR [ebx+0x4410e1cb]
  418933:	sub    ch,BYTE PTR [ecx]
  418935:	adc    BYTE PTR [edx+0x1d],al
  418938:	out    dx,al
  418939:	dec    edi
  41893a:	popf   
  41893b:	fstp   st(6)
  41893d:	call   0xfe2f520a
  418942:	inc    esp
  418943:	and    ch,BYTE PTR [ecx]
  418945:	push   esp
  418946:	xor    dl,BYTE PTR [edi+0xd]
  418949:	add    bh,cl
  41894b:	ins    DWORD PTR es:[edi],dx
  41894c:	into   
  41894d:	jno    0x4188fd
  41894f:	jmp    0x4189c2
  418951:	add    bh,cl
  418953:	push   esi
  418954:	or     eax,0x9624989
  418959:	add    bh,cl
  41895b:	sbb    DWORD PTR ds:0xe3719189,edi
  418961:	jmp    0x41891b
  418963:	pop    esi
  418964:	or     BYTE PTR [esi+0xd6cdb],ch
	...
  418972:	add    BYTE PTR [eax],al
  418974:	int3   
  418975:	mov    edx,DWORD PTR [ecx]
  418977:	fstp   QWORD PTR ds:0x8686c080
  41897d:	pop    edi
  41897e:	in     al,0x81
  418980:	mov    bl,0x83
  418982:	jecxz  0x418987
  418984:	push   esp
  418985:	retf   
  418986:	in     al,dx
  418987:	pop    eax
  418988:	fmul   DWORD PTR [edx]
  41898a:	popa   
  41898b:	repz int3 
  41898d:	jg     0x418972
  41898f:	mov    WORD PTR [ecx+0x78],cs
  418992:	fild   WORD PTR [ebx]
  418994:	iret   
  418995:	mov    edi,0x83c3916c
  41899a:	jecxz  0x41899f
  41899c:	push   eax
  41899d:	push   es
  41899e:	repz pop es
  4189a0:	iret   
  4189a1:	jg     0x418a11
  4189a3:	mov    edi,esp
  4189a5:	and    ebx,0x3
  4189a8:	push   ebp
  4189a9:	jo     0x418990
  4189ab:	mov    ch,0x39
  4189ad:	inc    edx
  4189ae:	jnp    0x4189a3
  4189b0:	xor    ebp,edi
  4189b2:	(bad)  
  4189b3:	pop    es
  4189b4:	iret   
  4189b5:	jg     0x4189af
  4189b7:	cld    
  4189b8:	push   edi
  4189b9:	push   es
  4189ba:	repz pop es
  4189bc:	iret   
  4189bd:	jg     0x418a3b
  4189bf:	mov    DWORD PTR [edi-0x70fc1c7d],esi
  4189c5:	or     BYTE PTR [ecx-0x1],dl
  4189c8:	int3   
  4189c9:	jg     0x4189ae
  4189cb:	mov    WORD PTR [ecx+0x70],ss
  4189ce:	out    0x3,eax
  4189d0:	iret   
  4189d1:	or     ah,BYTE PTR [ecx-0x5]
  4189d4:	int3   
  4189d5:	jg     0x4189ba
  4189d7:	lea    eax,[eax]
	...
  4189e1:	add    BYTE PTR [edi+0xde13581],bh
  4189e7:	or     bl,dh
  4189e9:	add    al,0x31
  4189eb:	jl     0x4189cc
  4189ed:	add    ecx,edi
  4189ef:	aam    0xfc
  4189f1:	mov    cs,WORD PTR [ecx+0x6f]
  4189f4:	fild   WORD PTR [ebx]
  4189f6:	iret   
  4189f7:	or     BYTE PTR [ecx-0x5],ch
  4189fa:	int3   
  4189fb:	jg     0x418a09
  4189fd:	jmp    0xcdc3910e
  418a02:	enter  0xc7f,0x70
  418a06:	inc    ebp
  418a07:	outs   dx,DWORD PTR ds:[esi]
  418a08:	or     cl,ch
  418a0a:	int3   
  418a0b:	or     BYTE PTR [edx+0xc7fd0f1],cl
  418a11:	mov    ecx,0xd98a08ab
  418a16:	sar    BYTE PTR [edi+0xc],1
  418a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a1a:	retf   
  418a1b:	jg     0x4189a2
  418a1d:	addr16 iret 
  418a1f:	or     DWORD PTR [ecx+ebp*8],0x53
  418a23:	add    eax,0x7fcced14
  418a28:	or     ecx,DWORD PTR [edi+0x5b]
  418a2b:	or     BYTE PTR [ecx+ebp*8],0xfb
  418a2f:	dec    edx
  418a30:	fmulp  st(1),st
  418a32:	push   ebx
  418a33:	ret    
  418a34:	sub    BYTE PTR ds:0xb8783f50,ah
  418a3a:	inc    ebx
  418a3b:	retf   
  418a3c:	sub    BYTE PTR [ecx],cl
  418a3e:	pop    edx
  418a3f:	cmc    
  418a40:	sbb    esp,ebp
  418a42:	int3   
  418a43:	jg     0x418a6a
  418a45:	mov    ebp,0x0
  418a4a:	add    BYTE PTR [eax],al
  418a4c:	add    BYTE PTR [eax],al
  418a4e:	add    BYTE PTR [eax],al
  418a50:	lock scas eax,DWORD PTR es:[edi]
  418a52:	pop    ebx
  418a53:	jb     0x418a92
  418a55:	jae    0x418a5f
  418a57:	jmp    0x5823328
  418a5c:	mov    ebx,0xef9e5bb1
  418a61:	lea    esp,cs:0xbccc00fb
  418a68:	fdivr  DWORD PTR [edx-0x435dd57b]
  418a6e:	push   edx
  418a6f:	push   0x7
  418a71:	xchg   edi,eax
  418a72:	into   
  418a73:	add    ebx,ecx
  418a75:	or     BYTE PTR [edx+0xc7fd0f9],cl
  418a7b:	ret    0xa408
  418a7e:	pop    esp
  418a7f:	add    BYTE PTR [ebx-0x64],dh
  418a82:	dec    edi
  418a83:	pop    esi
  418a84:	and    eax,0x7ec23448
  418a89:	xor    DWORD PTR [eax+eax*1-0x3cf3744a],0x428c51d
  418a94:	sbb    eax,0x75e9b149
  418a99:	push   cs
  418a9a:	dec    eax
  418a9b:	or     BYTE PTR [esi-0x35bb7cbe],dh
  418aa1:	outs   dx,DWORD PTR ds:[esi]
  418aa2:	jno    0x418a90
  418aa4:	ret    0xc87
  418aa7:	add    bl,bh
  418aa9:	inc    eax
  418aaa:	jge    0x418ab3
  418aac:	test   DWORD PTR [eax+eiz*1+0x4],0x8bcb8166
	...
  418abc:	add    BYTE PTR [eax],al
  418abe:	loop   0x418a64
  418ac0:	dec    eax
  418ac1:	add    al,0x36
  418ac3:	add    DWORD PTR [ebx+0x8c10a94],0x83922600
  418acd:	mov    WORD PTR [edx],cs
  418acf:	ror    DWORD PTR [eax],0x0
  418ad2:	ss xchg ebx,eax
  418ad4:	adc    DWORD PTR [edx+ecx*1+0x2600087d],0xffffff92
  418adc:	pop    esp
  418add:	mov    ebp,DWORD PTR [edx-0x9fbb35c]
  418ae3:	sbb    BYTE PTR [esi+0x50],0xa3
  418ae7:	int3   
  418ae8:	sub    BYTE PTR [eax],bl
  418aea:	sahf   
  418aeb:	nop
  418aec:	std    
  418aed:	push   DWORD PTR [ecx-0x5d337ff]
  418af3:	or     BYTE PTR [ebx+eax*8],0xc2
  418af7:	dec    esp
  418af8:	ror    ah,0xa2
  418afb:	dec    esp
  418afc:	ror    ah,0xa2
  418aff:	dec    esp
  418b00:	ror    ah,0xcf
  418b03:	sbb    eax,DWORD PTR [esi-0x21a5b11d]
  418b09:	add    bh,cl
  418b0b:	data16 cmp BYTE PTR [esi+0x18],dl
  418b0f:	sar    BYTE PTR [edx],cl
  418b11:	or     dh,bl
  418b13:	jno    0x418b31
  418b15:	mov    dh,0x5c
  418b17:	into   
  418b18:	push   ebx
  418b19:	aas    
  418b1a:	iret   
  418b1b:	iret   
  418b1c:	fdivr  DWORD PTR [edi-0x49fd9669]
	...
  418b2a:	add    BYTE PTR [eax],al
  418b2c:	rcl    DWORD PTR [esi-0x80],cl
  418b2f:	out    dx,eax
  418b30:	dec    esp
  418b31:	inc    edi
  418b32:	or     DWORD PTR ds:0x7ffd240,ecx
  418b38:	stc    
  418b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b3a:	or     BYTE PTR [ebx-0x308b9a69],al
  418b40:	rcl    ah,1
  418b42:	(bad)  
  418b43:	mov    BYTE PTR [ebx],dl
  418b45:	test   al,al
  418b47:	inc    ecx
  418b48:	dec    esp
  418b49:	and    DWORD PTR [eax],edx
  418b4b:	jl     0x418b6b
  418b4d:	aaa    
  418b4e:	mov    ebx,0x1c8b4c66
  418b53:	inc    ebx
  418b55:	push   eax
  418b56:	adc    al,0x38
  418b59:	push   ds
  418b5a:	fwait
  418b5b:	dec    esp
  418b5c:	iret   
  418b5d:	xor    al,0xe6
  418b5f:	add    DWORD PTR [edx+0x3a],edx
  418b62:	sti    
  418b63:	mov    dl,BYTE PTR [esi+0x52a48e67]
  418b69:	push   esi
  418b6a:	sar    ch,cl
  418b6c:	or     BYTE PTR [esi-0x72],ah
  418b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b70:	push   edx
  418b71:	push   esi
  418b72:	sar    ch,cl
  418b74:	clc    
  418b75:	gs sbb cl,bl
  418b78:	rcl    ah,0x8e
  418b7b:	mov    al,0x61
  418b7d:	daa    
  418b7e:	or     eax,0x8e2e9b8b
  418b83:	(bad)  
  418b84:	mov    ebx,0x4509a87f
  418b89:	ret    
  418b8a:	fmul   st,st(3)
  418b8c:	push   edi
  418b8d:	(bad)  
  418b8e:	clc    
  418b8f:	jae    0x418b91
	...
  418b99:	add    BYTE PTR [esi-0x3b79278],dh
  418b9f:	sub    edi,DWORD PTR [ebx+0x48]
  418ba2:	aam    0xef
  418ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ba5:	and    BYTE PTR [esi+0x66bc777c],0x7c
  418bac:	jecxz  0x418bb1
  418bae:	iret   
  418baf:	mov    dl,BYTE PTR [ecx+0x24d25f81]
  418bb5:	add    al,0x54
  418bb7:	xchg   esp,eax
  418bb8:	sti    
  418bb9:	add    BYTE PTR [ecx+0x450a4098],0xc4
  418bc0:	lock retf 
  418bc2:	inc    edi
  418bc3:	(bad)  
  418bc4:	shl    BYTE PTR [ebx+0x76],1
  418bc7:	mov    BYTE PTR [ebp+0x47],ch
  418bca:	pushf  
  418bcb:	sub    ebp,DWORD PTR [ebx+0x47]
  418bce:	mov    ah,0xef
  418bd0:	and    eax,0xf985683
  418bd5:	mov    ebp,0x95ea36f8
  418bda:	dec    esi
  418bdb:	inc    eax
  418bdc:	sbb    DWORD PTR [ebp-0x31],eax
  418bdf:	inc    DWORD PTR [esi]
  418be1:	or     DWORD PTR [edi-0x80],ebx
  418be4:	test   DWORD PTR ds:0xfb588456,0xce3c09a
  418bee:	push   ebx
  418bef:	or     eax,0x5b12def3
  418bf4:	loop   0x418b8b
  418bf6:	dec    esi
  418bf7:	cmp    cl,dl
  418bf9:	inc    esp
  418bfa:	iret   
  418bfb:	(bad)  
  418bfc:	mov    esi,0x8
  418c01:	add    BYTE PTR [eax],al
  418c03:	add    BYTE PTR [eax],al
  418c05:	add    BYTE PTR [eax],al
  418c07:	add    BYTE PTR [edi-0x80],bl
  418c0a:	scas   eax,DWORD PTR es:[edi]
  418c0b:	or     eax,0xfb508446
  418c10:	(bad)  
  418c11:	ror    BYTE PTR [ecx+ebp*8],0xd3
  418c15:	add    ebp,DWORD PTR [edi-0xea30627]
  418c1b:	stos   BYTE PTR es:[edi],al
  418c1c:	dec    ebp
  418c1d:	pop    ecx
  418c1e:	adc    al,0x9d
  418c20:	mov    ?,WORD PTR [ebp-0x7443ec73]
  418c26:	adc    bl,0x99
  418c29:	pop    esp
  418c2a:	icebp  
  418c2b:	je     0x418c74
  418c2d:	outs   dx,DWORD PTR ds:[esi]
  418c2e:	icebp  
  418c2f:	dec    BYTE PTR [edx-0x331f1b51]
  418c35:	jg     0x418c43
  418c37:	mov    ds,edx
  418c39:	mov    eax,0x3dd0d583
  418c3e:	add    al,0xe9
  418c40:	rol    DWORD PTR [edx],0xe7
  418c43:	push   0xe90bff7f
  418c48:	int3   
  418c49:	mov    al,0x5a
  418c4b:	push   ds
  418c4c:	inc    esi
  418c4d:	mov    esi,0xffa06c04
  418c52:	mov    dl,0xd9
  418c54:	int3   
  418c55:	jg     0x418c63
  418c57:	pusha  
  418c58:	mov    es,WORD PTR [eax]
  418c5a:	int3   
  418c5b:	in     eax,dx
  418c5c:	inc    edi
  418c5d:	nop
  418c5e:	mov    eax,DWORD PTR [edi-0x160f802d]
  418c64:	or     eax,0xd6620a61
  418c69:	fucompp 
  418c6b:	test   eax,0x0
  418c70:	add    BYTE PTR [eax],al
  418c72:	add    BYTE PTR [eax],al
  418c74:	add    BYTE PTR [eax],al
  418c76:	ret    0xc7f
  418c79:	test   al,0x32
  418c7b:	test   DWORD PTR [ebx],eax
  418c7d:	ja     0x418cd5
  418c7f:	xchg   edi,eax
  418c80:	mov    eax,DWORD PTR [esi-0x160f802d]
  418c86:	or     eax,0x2af0066c
  418c8b:	add    bh,BYTE PTR [esi]
  418c8d:	pusha  
  418c8e:	cmp    DWORD PTR [eax],eax
  418c90:	into   
  418c91:	in     eax,0x47
  418c93:	xchg   edi,eax
  418c94:	mov    eax,DWORD PTR [eax]
  418c96:	add    DWORD PTR [ebx-0x1],0xdf3cf6ff
  418c9d:	push   es
  418c9e:	in     eax,dx
  418c9f:	jnp    0x418c2a
  418ca1:	ds ins DWORD PTR es:[edi],dx
  418ca3:	jo     0x418d16
  418ca5:	out    0xe6,al
  418ca7:	sub    eax,0x61f7000b
  418cac:	add    BYTE PTR [ebx+0x3feb00bd],cl
  418cb2:	out    0x5e,eax
  418cb4:	sbb    al,0x9
  418cb6:	call   0xd5c2a0c1
  418cbb:	cmp    esp,0x3
  418cbe:	mov    dh,0x3e
  418cc0:	jecxz  0x418cc6
  418cc2:	scas   eax,DWORD PTR es:[edi]
  418cc3:	sbb    ecx,DWORD PTR [ecx-0x74efe0ce]
  418cc9:	ret    0x872
  418ccc:	cmp    al,0x83
  418cce:	nop
  418ccf:	jl     0x418cd4
  418cd1:	xor    ebp,edi
  418cd3:	outs   dx,DWORD PTR ds:[esi]
  418cd4:	dec    ecx
  418cd5:	and    DWORD PTR [esi],0xffffff81
  418cd8:	(bad)  
  418cd9:	leave  
	...
  418ce2:	add    BYTE PTR [eax],al
  418ce4:	mov    ds:0xf6458501,eax
  418ce9:	mov    esp,fs
  418ceb:	daa    
  418cec:	data16 jge 0x418cfb
  418cef:	pop    edi
  418cf0:	or     BYTE PTR [edi+0x3e0bec89],dl
  418cf6:	or     BYTE PTR [eax],al
  418cf8:	lods   eax,DWORD PTR ds:[esi]
  418cf9:	shr    BYTE PTR [eax],0x4
  418cfc:	pushf  
  418cfd:	lods   al,BYTE PTR ds:[esi]
  418cfe:	js     0x418d41
  418d00:	or     BYTE PTR es:[esi],al
  418d03:	mov    DWORD PTR [esi],ebx
  418d05:	add    dh,cl
  418d07:	add    al,0xb5
  418d09:	cmp    al,0x8
  418d0b:	sbb    DWORD PTR [esp+ebp*1-0x50d9be88],0x7cf2c2e2
  418d16:	add    DWORD PTR [edi+ecx*8-0x76],0x4
  418d1b:	mov    edx,0x4e327f
  418d20:	inc    esp
  418d21:	dec    edi
  418d22:	xchg   BYTE PTR [edx],cl
  418d24:	dec    esp
  418d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d26:	or     DWORD PTR [ecx-0x57194f3],eax
  418d2c:	fist   WORD PTR [edx]
  418d2e:	dec    esi
  418d2f:	add    BYTE PTR [ebp+0x70],bl
  418d32:	retf   
  418d33:	add    al,0xcf
  418d35:	adc    eax,DWORD PTR [esi+0x3c171fe3]
  418d3b:	mov    DWORD PTR [edx],edx
  418d3d:	pop    edi
  418d3e:	test   BYTE PTR [ebx-0x3d],bl
  418d41:	sar    DWORD PTR [edx],cl
  418d43:	clc    
  418d44:	std    
  418d45:	mul    ah
  418d47:	sbb    eax,0x0
  418d4c:	add    BYTE PTR [eax],al
  418d4e:	add    BYTE PTR [eax],al
  418d50:	add    BYTE PTR [eax],al
  418d52:	iret   
  418d53:	or     ax,0x1f68
  418d57:	ror    DWORD PTR [esi+0x0],cl
  418d5a:	inc    edx
  418d5b:	stos   DWORD PTR es:[edi],eax
  418d5c:	rcl    BYTE PTR [eax+0x77],1
  418d5f:	invd   
  418d61:	add    bh,cl
  418d63:	xchg   ebp,eax
  418d64:	add    DWORD PTR [ebx+0x77],0xffffff96
  418d68:	loopne 0x418dda
  418d6a:	iret   
  418d6b:	or     ax,0x5659
  418d6f:	dec    edx
  418d70:	xor    eax,edx
  418d72:	xlat   BYTE PTR ds:[ebx]
  418d73:	data16 cmp cl,BYTE PTR [ecx-0x76ff7ced]
  418d7a:	sti    
  418d7b:	dec    edx
  418d7c:	or     DWORD PTR [edi-0x49fa59f2],eax
  418d82:	(bad)  
  418d83:	daa    
  418d84:	out    0x18,eax
  418d86:	inc    esi
  418d87:	pop    esp
  418d88:	cmp    BYTE PTR [edi+0x79b518f],0xe
  418d8f:	pop    es
  418d90:	clc    
  418d91:	or     ch,dl
  418d93:	fild   WORD PTR [edx]
  418d95:	xchg   DWORD PTR [esi],ecx
  418d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d98:	add    eax,0x247fc6b6
  418d9d:	in     eax,0xd7
  418d9f:	test   ch,bh
  418da1:	mov    ebp,ss
  418da3:	push   es
  418da4:	xor    al,0x87
  418da6:	or     eax,0x8fc76c83
  418dab:	mov    BYTE PTR [ecx-0x1],dh
  418dae:	shl    DWORD PTR [esi+0x7c],1
  418db1:	lds    ecx,FWORD PTR [edi+0xd7188]
	...
  418dbf:	add    BYTE PTR [eax],bl
  418dc1:	pop    esi
  418dc2:	fisttp DWORD PTR [ebp+eax*8-0x25bbdbfa]
  418dc9:	or     eax,0x70a0c4fc
  418dce:	out    dx,al
  418dcf:	or     eax,0xc56c8a50
  418dd4:	ja     0x61a99b0b
  418dda:	sti    
  418ddb:	push   cs
  418ddc:	aad    0x86
  418dde:	xor    DWORD PTR [eax+edx*8],eax
  418de1:	inc    eax
  418de2:	ins    BYTE PTR es:[edi],dx
  418de3:	push   cs
  418de4:	test   BYTE PTR [ecx-0x5],0x3
  418de8:	push   ds
  418de9:	or     esi,DWORD PTR [edi]
  418deb:	and    bh,dl
  418ded:	or     ah,BYTE PTR [edi]
  418def:	and    bl,cl
  418df1:	or     ah,ch
  418df3:	les    esp,FWORD PTR [edi+0x78]
  418df6:	jnp    0x418dfc
  418df8:	test   al,0xa
  418dfa:	in     eax,0xc4
  418dfc:	ja     0x418e6e
  418dfe:	imul   eax,DWORD PTR [eax+ebx*4],0xa
  418e02:	in     eax,0xc4
  418e04:	mov    BYTE PTR [bp+di+0x4],bh
  418e08:	or     BYTE PTR [ecx],cl
  418e0a:	mov    esi,0x66304844
  418e0f:	(bad)
  418e12:	jecxz  0x418d9f
  418e14:	into   
  418e15:	or     ah,ch
  418e17:	les    esi,FWORD PTR [edi]
  418e19:	js     0x418e96
  418e1b:	add    al,0xe0
  418e1d:	or     cl,BYTE PTR [ebx+ebp*8]
  418e20:	adc    ebp,DWORD PTR [eax+0x1c]
  418e23:	popa   
	...
  418e2c:	add    BYTE PTR [eax],al
  418e2e:	retf   
  418e2f:	xchg   esi,eax
  418e30:	test   ebx,ebp
  418e32:	adc    ebp,DWORD PTR [eax+0x4]
  418e35:	jno    0x418e02
  418e37:	xchg   esi,eax
  418e38:	test   ebx,edi
  418e3a:	inc    esp
  418e3b:	xor    BYTE PTR [eax+ebp*8-0x16fbbe4f],al
  418e42:	lahf   
  418e43:	(bad)  
  418e44:	out    0x6a,al
  418e46:	call   0x9de0ebce
  418e4b:	or     BYTE PTR [edi-0x23],al
  418e4e:	inc    ecx
  418e4f:	mov    bl,0x4
  418e51:	jb     0x418e15
  418e53:	pop    es
  418e54:	aas    
  418e55:	icebp  
  418e56:	push   ecx
  418e57:	mov    esi,0x16816008
  418e5c:	in     eax,0xe5
  418e5e:	fisttp DWORD PTR [eax-0x75]
  418e61:	or     dl,ch
  418e63:	test   BYTE PTR [ecx],al
  418e65:	out    dx,al
  418e66:	mov    ebx,0x9317832e
  418e6b:	pop    ebp
  418e6c:	or     BYTE PTR [eax-0x57260186],bh
  418e72:	jne    0x418ee3
  418e74:	cmp    ebp,DWORD PTR [edi-0x3574afac]
  418e7a:	xchg   esi,eax
  418e7b:	push   esp
  418e7c:	or     al,0xe9
  418e7e:	(bad)  [esi]
  418e80:	and    DWORD PTR [edi-0x7e3a274],0x7a
  418e87:	inc    cl
  418e89:	test   al,0x65
  418e8b:	cmp    DWORD PTR [ebx],0x8b504497
  418e91:	mov    al,BYTE PTR [eax]
	...
  418e9b:	add    dl,ah
  418e9d:	nop
  418e9e:	cmp    eax,0x8339ddda
  418ea3:	mov    bh,0xc
  418ea5:	pop    ebp
  418ea6:	push   cs
  418ea7:	fcomp  DWORD PTR ds:0x7700c1fe
  418ead:	imul   eax,DWORD PTR [ecx+esi*1],0x81fb0a38
  418eb4:	inc    ebp
  418eb5:	cmp    BYTE PTR [edi+edi*8],cl
  418eb8:	es jno 0x418e91
  418ebb:	mov    DWORD PTR [eax-0x18f715be],edx
  418ec1:	dec    ecx
  418ec2:	mov    DWORD PTR [ebp-0x5e],esi
  418ec5:	cmp    dl,0x8b
  418ec8:	add    ebp,DWORD PTR [esi]
  418eca:	mov    cl,0xef
  418ecc:	icebp  
  418ecd:	cli    
  418ece:	out    0x1,al
  418ed0:	pop    edi
  418ed1:	xor    cl,BYTE PTR [ecx]
  418ed3:	stc    
  418ed4:	outs   dx,DWORD PTR ds:[esi]
  418ed5:	adc    DWORD PTR [ecx],esp
  418ed7:	into   
  418ed8:	outs   dx,DWORD PTR ds:[esi]
  418ed9:	sub    al,0x71
  418edb:	jecxz  0x418ef9
  418edd:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  418edf:	stos   BYTE PTR es:[edi],al
  418ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ee1:	adc    esp,DWORD PTR [ecx]
  418ee3:	fnstenv [ebx]
  418ee5:	jo     0x418f05
  418ee7:	mov    ecx,edi
  418ee9:	inc    eax
  418eea:	fistp  WORD PTR [edi]
  418eec:	xor    eax,0xa488f15f
  418ef1:	mov    dh,dh
  418ef3:	(bad)  
  418ef4:	imul   edi,DWORD PTR [ecx],0x4
  418ef7:	add    BYTE PTR [esi+0x37ce8981],ah
  418efd:	pop    edi
  418efe:	adc    BYTE PTR [ecx+0x0],cl
  418f04:	add    BYTE PTR [eax],al
  418f06:	add    BYTE PTR [eax],al
  418f08:	add    BYTE PTR [eax],al
  418f0a:	xor    DWORD PTR [edx-0x21],eax
  418f0d:	add    al,0xef
  418f0f:	sub    ecx,DWORD PTR [ecx]
  418f11:	sti    
  418f12:	out    dx,eax
  418f13:	ds mov eax,eax
  418f16:	jp     0x418f84
  418f18:	adc    cl,BYTE PTR [ecx+0x3fe9fc40]
  418f1e:	in     eax,dx
  418f1f:	test   BYTE PTR [ebp+0xcc0a2f0],bh
  418f25:	mov    DWORD PTR [ecx],edx
  418f27:	inc    edx
  418f28:	fild   WORD PTR [esi]
  418f2a:	mov    bh,0x5f
  418f2c:	lock add bh,cl
  418f2f:	or     ax,0x7809
  418f33:	test   DWORD PTR [esi+0x3f],0xbfb4cfcf
  418f3a:	xor    BYTE PTR [ebp-0x72],ah
  418f3d:	in     eax,0x1b
  418f3f:	addr16 or eax,0xdd8dc400
  418f45:	js     0x418ed5
  418f47:	data16 xchg ch,bl
  418f4a:	push   cs
  418f4b:	(bad)  
  418f4c:	sti    
  418f4d:	jle    0x418f3f
  418f4f:	stos   BYTE PTR es:[edi],al
  418f50:	or     eax,0x9c61cf00
  418f55:	lock popa 
  418f57:	daa    
  418f58:	or     eax,0x868a5a87
  418f5d:	(bad)  
  418f5e:	dec    esp
  418f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f60:	icebp  
  418f61:	xchg   BYTE PTR [edx+ebx*2],al
  418f64:	xrelease xchg BYTE PTR [ecx+0x543debe9],ch
  418f6b:	sub    al,BYTE PTR [edx+0xf0]
  418f71:	add    BYTE PTR [eax],al
  418f73:	add    BYTE PTR [eax],al
  418f75:	add    BYTE PTR [eax],al
  418f77:	add    BYTE PTR [edx],bh
  418f79:	sub    BYTE PTR ds:0x866b3a09,cl
  418f7f:	fisttp QWORD PTR [esi-0x5780f493]
  418f85:	push   edx
  418f86:	push   cs
  418f87:	add    bh,cl
  418f89:	popa   
  418f8a:	pushf  
  418f8b:	lock adc al,0x28
  418f8e:	or     eax,0xe927a887
  418f93:	push   cs
  418f94:	dec    esi
  418f95:	cmp    eax,0x66cf00d4
  418f9a:	push   es
  418f9b:	mov    ch,0x7f
  418f9d:	scas   eax,DWORD PTR es:[edi]
  418f9e:	inc    edi
  418f9f:	add    BYTE PTR [esi+0x1d],dl
  418fa2:	(bad)  
  418fa3:	in     eax,dx
  418fa4:	mov    ecx,0xcffcd1e7
  418fa9:	or     ax,0x1809
  418fad:	push   ss
  418fae:	inc    ecx
  418faf:	aas    
  418fb0:	iret   
  418fb1:	jg     0x418f87
  418fb3:	ror    DWORD PTR [eax+0x2d],1
  418fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fb7:	(bad)  
  418fb9:	push   es
  418fba:	mov    dl,0xc5
  418fbc:	and    bh,BYTE PTR [ebx+0x6c]
  418fbf:	rcl    eax,cl
  418fc1:	pop    eax
  418fc2:	jl     0x418f82
  418fc4:	dec    esi
  418fc5:	aas    
  418fc6:	out    0x12,eax
  418fc8:	mov    ecx,0x29839906
  418fcd:	xchg   esp,eax
  418fce:	outs   dx,BYTE PTR ds:[esi]
  418fcf:	adc    BYTE PTR [edi+ecx*2],bh
  418fd2:	out    0x44,eax
  418fd4:	iret   
  418fd5:	push   es
  418fd6:	xor    al,ch
  418fd8:	jmp    0x0:0xdf647c
  418fdf:	add    BYTE PTR [eax],al
  418fe1:	add    BYTE PTR [eax],al
  418fe3:	add    BYTE PTR [eax],al
  418fe5:	add    bl,dh
  418fe7:	jle    0x418fcc
  418fe9:	add    edx,esi
  418feb:	or     al,0x33
  418fed:	pop    edx
  418fee:	mov    al,ds:0x18b77c7f
  418ff3:	fs jmp 0xe3947a7d
  418ff9:	add    ecx,edi
  418ffb:	xchg   BYTE PTR [edx-0x2c],dl
  418ffe:	inc    edi
  418fff:	shl    ebx,0x8c
  419002:	call   0xff5b:0x31ee0a41
  419009:	add    ecx,edi
  41900b:	jg     0x41900b
  41900d:	mov    ds,WORD PTR [edi+0x5003a4ca]
  419013:	int    0xef
  419015:	mov    WORD PTR [ecx+0x500022ff],cs
  41901b:	das    
  41901c:	push   ss
  41901d:	test   BYTE PTR [ecx+0x32],0x66
  419021:	fnstsw WORD PTR [edx+0x7f910f06]
  419027:	aad    0x24
  419029:	add    al,0xd6
  41902b:	int3   
  41902c:	scas   eax,DWORD PTR es:[edi]
  41902d:	mov    WORD PTR [edx-0x26023dbf],es
  419033:	pop    edx
  419034:	or     al,0xb5
  419036:	int3   
  419037:	jg     0x419045
  419039:	loop   0x419094
  41903b:	push   eax
  41903c:	jne    0x419066
  41903e:	retf   
  41903f:	cli    
  419040:	shr    BYTE PTR [eax-0x71747dcf],1
  419046:	sbb    BYTE PTR [eax+0xe90c],al
	...
  419054:	aad    0xc
  419056:	cld    
  419057:	add    BYTE PTR [edx+0x139e837f],cl
  41905d:	sbb    ch,BYTE PTR gs:[eax-0xf]
  419061:	push   ebx
  419062:	or     al,0xe9
  419064:	int3   
  419065:	mov    BYTE PTR [ecx+0xc929159],bh
  41906b:	sbb    BYTE PTR [edx],ah
  41906d:	push   ebp
  41906e:	aas    
  41906f:	push   ecx
  419070:	dec    ebp
  419071:	xlat   BYTE PTR ds:[ebx]
  419072:	hlt    
  419073:	jmp    0x47e68f49
  419078:	stc    
  419079:	push   esp
  41907a:	xor    DWORD PTR [ecx],0x13
  41907d:	pusha  
  41907e:	adc    DWORD PTR [eax+0xa],esp
  419081:	inc    ebx
  419082:	loop   0x4190e4
  419084:	xchg   ebx,eax
  419085:	jp     0x419082
  419087:	jo     0x419105
  419089:	mov    ds:0xd28d70c4,al
  41908e:	in     eax,dx
  41908f:	inc    ebx
  419090:	and    ax,0xd8a6
  419094:	data16 mov ds:0x125c70d3,al
  41909a:	in     al,dx
  41909b:	fimul  WORD PTR [ebx+0x29]
  41909e:	fild   DWORD PTR [edi]
  4190a0:	inc    ebx
  4190a1:	cmp    eax,0x2f54fb03
  4190a6:	retf   
  4190a7:	rcl    ebx,1
  4190a9:	mov    ds:0xd28e70c4,al
  4190ae:	in     eax,dx
  4190af:	(bad)  
  4190b0:	retf   
  4190b1:	push   esp
  4190b2:	or     al,0x18
  4190b4:	and    al,0xfa
  4190b6:	rol    DWORD PTR [eax],cl
	...
  4190c0:	add    BYTE PTR [eax],al
  4190c2:	aaa    
  4190c3:	pop    ebx
  4190c4:	add    al,0x31
  4190c6:	and    al,0x6
  4190c8:	fadd   st(1),st
  4190ca:	mov    ?,WORD PTR [ebp+0x21]
  4190cd:	enter  0x40af,0x71
  4190d1:	jecxz  0x4190f8
  4190d3:	outs   dx,DWORD PTR ds:[esi]
  4190d4:	cmp    esi,DWORD PTR [ebx]
  4190d6:	pop    ss
  4190d7:	adc    eax,0x5b67d889
  4190dc:	push   cs
  4190dd:	xor    DWORD PTR [esi+eax*1-0x3c],esi
  4190e1:	sar    DWORD PTR [esi],0x4b
  4190e4:	and    dl,al
  4190e6:	lahf   
  4190e7:	inc    eax
  4190e8:	jno    0x4190cd
  4190ea:	cdq    
  4190eb:	sub    al,0xc
  4190ed:	add    BYTE PTR [edi+0x18],al
  4190f0:	mov    eax,ebx
  4190f2:	mov    bh,0x5b
  4190f4:	sbb    al,0x31
  4190f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190f7:	push   es
  4190f8:	(bad)
  4190fc:	and    eax,edx
  4190fe:	outs   dx,DWORD PTR ds:[esi]
  4190ff:	inc    eax
  419100:	jno    0x4190e5
  419102:	fnstcw WORD PTR [edx-0x1]
  419105:	push   cs
  419106:	xlat   BYTE PTR ds:[ebx]
  419107:	pop    ss
  419108:	add    DWORD PTR [ebp-0x12],0x3c
  41910c:	jmp    0x419112
  41910e:	(bad)  
  41910f:	dec    eax
  419110:	mov    DWORD PTR [eax],ebx
  419112:	xor    eax,0x3d040491
  419117:	xchg   ecx,eax
  419118:	add    al,0x89
  41911a:	mov    dh,0x8c
  41911c:	push   edx
  41911d:	pop    ebx
  41911e:	das    
  41911f:	push   0x7d9ec255
  419124:	pop    ebx
  419125:	push   esi
	...
  41912e:	add    BYTE PTR [eax],al
  419130:	sbb    eax,0x400c2898
  419135:	or     BYTE PTR [eax+0x24],bh
  419138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419139:	mov    bl,0x8d
  41913b:	idiv   BYTE PTR [ecx-0x1f]
  41913e:	ror    DWORD PTR [edi],0x60
  419141:	push   DWORD PTR ds:[esi-0x74c2d931]
  419148:	or     al,0x5f
  41914a:	cmp    eax,0xd83cfae8
  41914f:	std    
  419150:	out    0x16,eax
  419152:	inc    ecx
  419153:	aas    
  419154:	iret   
  419155:	ds add al,0xfc
  419158:	dec    eax
  419159:	and    cl,BYTE PTR [eax]
  41915b:	mov    ch,0x39
  41915d:	xchg   ecx,eax
  41915e:	cmp    ebp,eax
  419160:	mov    ds,WORD PTR [eax+ebx*8]
  419163:	std    
  419164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419165:	jbe    0x4191a8
  419167:	aas    
  419168:	iret   
  419169:	(bad)  
  41916a:	mov    edi,0x36fa20f9
  41916f:	pop    ecx
  419170:	or     eax,0x46530d4f
  419175:	add    al,0x3d
  419177:	push   eax
  419178:	pushf  
  419179:	fnsave [edx]
  41917b:	or     BYTE PTR [esp+edi*1+0x9],dl
  41917f:	mov    esp,DWORD PTR [edx-0x18afc422]
  419185:	sbb    ebx,ecx
  419187:	std    
  419188:	call   0x8eb5eecb
  41918d:	data16 mov al,BYTE PTR [ebx-0x29]
  419191:	mul    ah
  419193:	cmc    
	...
  41919c:	add    BYTE PTR [eax],al
  41919e:	ror    DWORD PTR [ecx+0xabf68d8],cl
  4191a4:	dec    esi
  4191a5:	add    BYTE PTR [edx+0x23],dl
  4191a8:	aad    0x50
  4191aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191ab:	outs   dx,DWORD PTR ds:[esi]
  4191ac:	fscale 
  4191ae:	mov    al,0xfe
  4191b0:	pop    esp
  4191b1:	jae    0x4191c1
  4191b3:	mov    al,BYTE PTR [bp+di-0x59]
  4191b7:	mul    ah
  4191b9:	fstp   DWORD PTR [ebx+0x4251dd51]
  4191bf:	and    edx,ebp
  4191c1:	push   eax
  4191c2:	ja     0x4191a8
  4191c4:	fscale 
  4191c6:	cmp    BYTE PTR [edi+0x4e],0x7d
  4191ca:	imul   esi,DWORD PTR [edx-0x548f035b],0x6c
  4191d1:	jmp    0x3734f524
  4191d6:	stc    
  4191d7:	add    al,0x28
  4191d9:	cld    
  4191da:	inc    edi
  4191db:	retf   0x80df
  4191de:	or     al,0x58
  4191e0:	adc    esi,DWORD PTR [edi]
  4191e2:	aaa    
  4191e3:	push   ebp
  4191e4:	mov    esi,0x200242d3
  4191e9:	aam    0x9f
  4191eb:	cld    
  4191ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ed:	cld    
  4191ee:	lahf   
  4191ef:	addr16 mov bh,cl
  4191f2:	sub    dl,BYTE PTR [eax+0xb]
  4191f5:	push   esp
  4191f6:	fwait
  4191f7:	mov    esi,0x578c80e3
  4191fc:	adc    ebx,esp
  4191fe:	cmp    dl,BYTE PTR [ebx+0x7a]
  419201:	rol    DWORD PTR [eax],cl
	...
  41920b:	add    BYTE PTR [edi-0x31],dh
  41920e:	test   DWORD PTR [edi+ecx*8+0x2],0x679fd3a0
  419216:	jl     0x4191e8
  419218:	repnz dec edi
  41921a:	outs   dx,BYTE PTR ds:[esi]
  41921b:	xor    ebx,ebp
  41921d:	add    ebp,DWORD PTR [eax+0x47ba48d3]
  419223:	jge    0x419299
  419225:	dec    edi
  419226:	fcmovnbe st,st(3)
  419228:	pop    ebx
  419229:	mov    esi,0x480c80e3
  41922e:	xchg   ebx,eax
  41922f:	(bad)  [edx]
  419231:	dec    esp
  419232:	sub    dl,bl
  419234:	daa    
  419235:	push   eax
  419236:	xchg   edi,eax
  419237:	inc    esp
  419238:	iret   
  419239:	cld    
  41923a:	lahf   
  41923b:	sar    edi,cl
  41923d:	push   edi
  41923e:	test   bh,cl
  419240:	mov    ds:0x9b317e4f,al
  419245:	sti    
  419246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419247:	ror    DWORD PTR [eax-0x3b],cl
  41924a:	or     al,0xf5
  41924c:	or     ebp,DWORD PTR [ebx-0x2ce37e04]
  419252:	dec    ebx
  419253:	jmp    0x3a3655a7
  419258:	xchg   ebx,eax
  419259:	(bad)
  41925c:	jge    0x419236
  41925e:	jl     0x4192b4
  419260:	or     al,BYTE PTR [eax-0x4f7cd381]
  419266:	in     al,0x0
  419268:	jg     0x4192b7
  41926a:	icebp  
  41926b:	pop    ds
  41926c:	dec    esi
  41926d:	ret    
  41926e:	hlt    
  41926f:	sbb    DWORD PTR [eax],eax
	...
  419279:	add    BYTE PTR [ebx],ah
  41927b:	pusha  
  41927c:	cmc    
  41927d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41927e:	sbb    eax,0xf6f1ca01
  419283:	cli    
  419284:	inc    esi
  419285:	cdq    
  419286:	fcom   QWORD PTR [edi-0x23]
  419289:	xchg   edx,eax
  41928a:	std    
  41928b:	dec    esp
  41928c:	push   edx
  41928d:	and    bl,BYTE PTR [edx+0x14ab4f5b]
  419293:	dec    edi
  419294:	pop    eax
  419295:	pusha  
  419296:	test   esi,0x7fcb5de0
  41929c:	or     al,0xba
  41929e:	mov    dh,0xb4
  4192a0:	test   DWORD PTR [esp+esi*8+0x4fe576f7],edi
  4192a7:	add    ecx,DWORD PTR [edi+ecx*2+0x515c4cfd]
  4192ae:	aas    
  4192af:	dec    edi
  4192b0:	icebp  
  4192b1:	jmp    0x39a61228
  4192b6:	daa    
  4192b7:	(bad)  
  4192b8:	or     al,0x41
  4192ba:	cmp    ecx,DWORD PTR [esi-0xf]
  4192bd:	es jecxz 0x4192f1
  4192c0:	xchg   BYTE PTR [ebx-0x64],ch
  4192c3:	ror    BYTE PTR [ebx-0x17],cl
  4192c6:	and    al,0x84
  4192c8:	ds stos DWORD PTR es:[edi],eax
  4192ca:	dec    ecx
  4192cb:	dec    ecx
  4192cc:	add    al,0x0
  4192ce:	push   edx
  4192cf:	xor    eax,edi
  4192d1:	test   DWORD PTR [esi+0x30],ecx
  4192d4:	out    dx,eax
  4192d5:	push   DWORD PTR [edi-0x7e]
  4192d8:	or     al,0x0
  4192da:	int    0x96
  4192dc:	mov    eax,esi
	...
  4192e6:	add    BYTE PTR [eax],al
  4192e8:	inc    DWORD PTR [esi]
  4192ea:	js     0x4192ea
  4192ec:	xchg   ecx,eax
  4192ed:	xor    BYTE PTR [ecx],ah
  4192ef:	ror    BYTE PTR [ebp-0x57a7c8d],cl
  4192f5:	xor    edi,ebp
  4192f7:	(bad)  
  4192f8:	fild   WORD PTR [esi]
  4192fa:	jo     0x4192fa
  4192fc:	adc    DWORD PTR [eax],esi
  4192fe:	out    dx,eax
  4192ff:	test   DWORD PTR [edx],ecx
  419301:	xor    ch,bh
  419303:	jmp    FWORD PTR [ebp+0x71fe70ce]
  419309:	xor    bh,bh
  41930b:	mov    ebp,0x7fec0325
  419310:	lods   eax,DWORD PTR ds:[esi]
  419311:	(bad)  
  419312:	outs   dx,DWORD PTR ds:[esi]
  419313:	(bad)  
  419314:	push   ecx
  419315:	xor    bh,bh
  419317:	mov    ch,0x11
  419319:	jno    0x41930f
  41931b:	mov    BYTE PTR [edi],ah
  41931d:	cmp    BYTE PTR [ebx],cl
  41931f:	add    BYTE PTR [ebp-0x1105743b],dh
  419325:	mov    esp,0x83ad800d
  41932a:	jge    0x4192f2
  41932c:	cmp    BYTE PTR [eax+0x30806be4],cl
  419332:	out    dx,eax
  419333:	or     DWORD PTR [ebx-0x45],0xfffffff2
  419337:	call   DWORD PTR [ecx-0x19c4737d]
  41933d:	mov    ah,0xa7
  41933f:	add    DWORD PTR [ebx-0x44],0xfffffff2
  419343:	push   ecx
  419345:	cmp    DWORD PTR [ebp-0x62],0x43
  419349:	add    eax,0xfe8c
	...
  419356:	shr    DWORD PTR [esi],1
  419358:	pop    esp
  419359:	call   0x4f912d
  41935e:	iret   
  41935f:	sbb    eax,0x7346593b
  419364:	and    edx,eax
  419366:	(bad)  
  419367:	push   esi
  419368:	cmp    al,BYTE PTR [edi-0x7313278e]
  41936e:	into   
  41936f:	push   esi
  419370:	or     eax,0x6f8e2151
  419375:	pop    ebx
  419376:	(bad)  
  419377:	rcr    DWORD PTR [edx+0xc],1
  41937a:	pop    edx
  41937b:	fmul   QWORD PTR [ebp+0x3d3e60fe]
  419381:	call   0x4eeade
  419386:	in     eax,0x56
  419388:	push   ebp
  419389:	lock ret 0x897
  41938d:	call   0xfe1dafae
  419392:	dec    BYTE PTR [eax]
  419394:	outs   dx,DWORD PTR ds:[esi]
  419395:	cmp    BYTE PTR [edi],0x74
  419398:	dec    ebp
  419399:	add    BYTE PTR [edi+0x5b],dl
  41939c:	pop    ss
  41939d:	inc    edx
  41939e:	dec    esp
  41939f:	icebp  
  4193a0:	cld    
  4193a1:	jnp    0x4193c1
  4193a3:	push   ds
  4193a4:	mov    bh,BYTE PTR [eax+0x11]
  4193a7:	into   
  4193a8:	fdiv   st(7),st
  4193aa:	or     BYTE PTR [edi+0xd],dl
  4193ad:	jmp    0x881f734d
  4193b2:	push   edx
  4193b3:	sub    ebx,ebx
  4193b5:	std    
  4193b6:	lock addr16 mov edx,0xe9
  4193bd:	add    BYTE PTR [eax],al
  4193bf:	add    BYTE PTR [eax],al
  4193c1:	add    BYTE PTR [eax],al
  4193c3:	add    BYTE PTR [edi-0x1e8b751f],bl
  4193c9:	mov    ebp,0x435287dc
  4193ce:	(bad)  
  4193d0:	ror    BYTE PTR [ebp-0x6a368b76],1
  4193d6:	fmul   QWORD PTR [ecx-0x224e5ae]
  4193dc:	mov    eax,0xce91fa7f
  4193e1:	add    BYTE PTR [ebx],al
  4193e3:	push   eax
  4193e4:	push   esi
  4193e5:	or     dl,BYTE PTR [edi-0x2db35d2f]
  4193eb:	cdq    
  4193ec:	fimul  DWORD PTR [esi+0x42907b0b]
  4193f2:	out    0x3,al
  4193f4:	push   cs
  4193f5:	ret    0xcd66
  4193f8:	(bad)  
  4193fa:	call   0x50c14a82
  4193ff:	(bad)  
  419400:	sbb    DWORD PTR [esi+0x4c64cedb],esi
  419406:	fiadd  DWORD PTR [ebx-0x303e38d4]
  41940c:	pop    edx
  41940d:	jg     0x419472
  41940f:	or     ecx,edi
  419411:	ror    BYTE PTR [edx-0x46387b7d],cl
  419417:	iret   
  419418:	inc    edx
  419419:	jg     0x419453
  41941b:	outs   dx,BYTE PTR ds:[esi]
  41941c:	inc    esp
  41941d:	add    ah,BYTE PTR [ebx-0x32]
  419420:	xor    cl,BYTE PTR [ebx+esi*1-0x24]
  419424:	jo     0x4194a5
  419426:	jecxz  0x41942b
	...
  419430:	add    BYTE PTR [eax],al
  419432:	sub    BYTE PTR [ebp-0x55d482c2],0xa5
  419439:	cld    
  41943a:	adc    BYTE PTR [ecx-0x3ca9c8e7],dh
  419440:	mov    edi,0xfef86af3
  419445:	daa    
  419446:	jecxz  0x41942d
  419448:	pusha  
  419449:	stos   DWORD PTR es:[edi],eax
  41944a:	jl     0x4194c4
  41944c:	jl     0x419414
  41944e:	push   esp
  41944f:	(bad)  
  419450:	repz gs and eax,0xc7dae37e
  419457:	cli    
  419458:	mov    dl,0xf3
  41945a:	dec    ecx
  41945b:	inc    esp
  41945c:	leave  
  41945d:	adc    al,0x9d
  41945f:	jnp    0x41946d
  419461:	jle    0x4194e0
  419463:	scas   al,BYTE PTR es:[edi]
  419464:	lea    ebp,[ecx]
  419466:	mov    ebx,0x986de4bb
  41946b:	dec    ebp
  41946c:	icebp  
  41946d:	xchg   ecx,eax
  41946e:	jl     0x419444
  419470:	dec    ebx
  419471:	jmp    0xf351afa
  419476:	mov    BYTE PTR [ebp-0x47],bh
  419479:	and    bl,ah
  41947b:	mov    ah,0xe4
  41947d:	jns    0x419420
  41947f:	dec    ebp
  419480:	icebp  
  419481:	sbb    DWORD PTR [edi+ecx*8],0xa294e94b
  419488:	repz out 0x81,al
  41948b:	jge    0x419446
  41948d:	ret    0xb19d
  419490:	in     al,0x35
  419492:	js     0x4194e1
  419494:	icebp  
  419495:	add    BYTE PTR cs:[eax],al
	...
  4194a0:	test   eax,0xccf1cea8
  4194a5:	mov    al,0x85
  4194a7:	sbb    eax,0xc15d77f7
  4194ac:	inc    ebp
  4194ad:	push   edx
  4194ae:	icebp  
  4194af:	scas   al,BYTE PTR es:[edi]
  4194b0:	push   ebx
  4194b1:	inc    ecx
  4194b2:	mov    ecx,gs
  4194b4:	int3   
  4194b5:	jg     0x41946b
  4194b7:	cdq    
  4194b8:	or     BYTE PTR [edx+0x21c620c],0x1d
  4194bf:	push   0xc
  4194c1:	test   BYTE PTR [ebp+0x7c86c8aa],cl
  4194c7:	hlt    
  4194c8:	xchg   ebx,eax
  4194c9:	jg     0x419549
  4194cb:	xchg   BYTE PTR [eax+edx*8+0x77],dl
  4194cf:	sub    bl,dl
  4194d1:	clc    
  4194d2:	sbb    esi,DWORD PTR [eax-0x3]
  4194d5:	dec    ebx
  4194d7:	in     eax,0x4d
  4194d9:	inc    ecx
  4194da:	or     BYTE PTR [ebx+edi*8],dl
  4194dd:	into   
  4194de:	dec    ebx
  4194df:	jmp    0x96f162
  4194e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e5:	or     BYTE PTR [ebx+edx*2],0x3d
  4194e9:	fwait
  4194ea:	sub    BYTE PTR [eax],cl
  4194ec:	gs es in al,0xf8
  4194f0:	jmp    0x2705062e
  4194f5:	jg     0x419503
  4194f7:	add    BYTE PTR [esi],ch
  4194f9:	das    
  4194fa:	js     0x41953d
  4194fc:	mov    dh,0xc5
  4194fe:	sbb    ecx,DWORD PTR [ecx+0x4cafd96]
	...
  41950c:	add    BYTE PTR [eax],al
  41950e:	and    eax,0x63d083f
  419513:	test   al,0x31
  419515:	add    BYTE PTR [edx+ebp*1],al
  419518:	mov    ah,0x70
  41951a:	add    eax,esp
  41951c:	or     al,0x8b
  41951e:	jne    0x4194e5
  419520:	sbb    al,0x83
  419522:	xor    eax,0x72c08b77
  419527:	jns    0x419525
  419529:	jne    0x4194d2
  41952b:	cmp    DWORD PTR [esi-0x11],0xffffffad
  41952f:	cmp    eax,0xc6e30008
  419534:	in     eax,dx
  419535:	or     DWORD PTR [edx],0x5b
  419538:	pop    esp
  419539:	push   esi
  41953a:	lods   eax,DWORD PTR ds:[esi]
  41953b:	call   0x4585:0x7fd38b04
  419542:	outs   dx,BYTE PTR ds:[esi]
  419543:	xchg   ebx,eax
  419544:	pop    ebx
  419545:	call   0x30d095
  41954a:	jnp    0x41950e
  41954c:	cld    
  41954d:	push   eax
  41954e:	fwait
  41954f:	rol    BYTE PTR [eax+edx*2],0x5e
  419553:	arpl   sp,si
  419555:	(bad)  
  419556:	jns    0x419522
  419558:	dec    ebp
  419559:	call   0x110c9634
  41955e:	xor    eax,0x89f8db26
  419563:	cmp    al,0x64
  419565:	jo     0x419536
  419567:	sub    al,0x4e
  419569:	add    BYTE PTR [edx+0x23],cl
  41956c:	lds    edx,FWORD PTR [eax-0x19]
  41956f:	inc    edx
  419570:	(bad)  
  419571:	std    
	...
  41957a:	add    BYTE PTR [eax],al
  41957c:	enter  0x5d2f,0x74
  419580:	push   cs
  419581:	push   edi
  419582:	jb     0x4195c7
  419584:	mov    edi,0xb66dd4e7
  419589:	mov    ds:0xf31f68bf,al
  41958e:	dec    ebp
  41958f:	add    BYTE PTR [edx+0x1c],dl
  419592:	aad    0x50
  419594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419595:	clc    
  419596:	(bad)  
  419599:	into   
  41959a:	and    esp,edi
  41959c:	push   esp
  41959d:	and    al,0xdd
  41959f:	xchg   DWORD PTR [edx],ecx
  4195a1:	push   ebx
  4195a2:	jbe    0x4195ff
  4195a4:	jg     0x419584
  4195a6:	and    esp,esi
  4195a8:	inc    esp
  4195a9:	pushf  
  4195aa:	rol    BYTE PTR [edi+0x5b763312],1
  4195b0:	ja     0x419571
  4195b2:	fdiv   DWORD PTR [esi+ecx*1+0x57]
  4195b6:	jb     0x4195fb
  4195b8:	push   edi
  4195b9:	sar    BYTE PTR [bx+di],1
  4195bc:	inc    esi
  4195bd:	or     al,al
  4195bf:	push   0x4d8b3f
  4195c4:	dec    edx
  4195c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c6:	fcom   DWORD PTR [eax+0x27]
  4195c9:	xor    al,0xc6
  4195cb:	std    
  4195cc:	sub    BYTE PTR [edi-0x28],ch
  4195cf:	je     0x41955f
  4195d1:	push   esi
  4195d2:	jb     0x419617
  4195d4:	daa    
  4195d5:	xchg   eax,edx
  4195d7:	sbb    eax,0x89c00216
  4195dc:	stos   BYTE PTR es:[edi],al
  4195dd:	retf   0x4374
	...
  4195e8:	add    BYTE PTR [eax],al
  4195ea:	(bad)  
  4195eb:	fisttp WORD PTR [edx-0x4]
  4195ee:	inc    esi
  4195ef:	jl     0x4195c9
  4195f1:	mov    DWORD PTR [edx-0x7387b081],edx
  4195f7:	push   edi
  4195f8:	jl     0x419640
  4195fa:	fcomi  st,st(6)
  4195fc:	mov    bh,0xdb
  4195fe:	addr16 iret 
  419600:	fadd   DWORD PTR [edx-0x31]
  419603:	cli    
  419604:	lahf   
  419605:	retf   
  419606:	pop    ds
  419607:	pop    eax
  419608:	dec    esp
  419609:	retf   
  41960a:	ret    0xcb48
  41960d:	push   ebx
  41960e:	cmp    al,0xbf
  419610:	jecxz  0x419690
  419612:	or     al,0x50
  419614:	mov    bl,0xdb
  419616:	mov    dh,0x47
  419618:	adc    cl,ah
  41961a:	aaa    
  41961b:	rcl    BYTE PTR [eax-0x580530be],1
  419621:	(bad)  
  419623:	push   edi
  419624:	sub    bl,cl
  419626:	mov    cl,BYTE PTR [eax-0x67]
  419629:	jle    0x419637
  41962b:	dec    eax
  41962c:	xchg   ebx,eax
  41962d:	fist   DWORD PTR [ebx+0x47]
  419630:	loop   0x4195fd
  419632:	inc    esp
  419633:	sar    ebx,0x33
  419636:	push   esp
  419637:	ret    0x34d3
  41963a:	ja     0x41960c
  41963c:	fcmovne st,st(3)
  41963e:	pop    edx
  41963f:	cld    
  419640:	test   al,0xf4
  419642:	cli    
  419643:	cli    
  419644:	pop    ds
  419645:	fcomp  QWORD PTR [edi+0x42cc5d57]
  41964b:	dec    eax
  41964c:	sbb    DWORD PTR [edi],ebp
	...
  419656:	add    BYTE PTR [eax],al
  419658:	push   eax
  419659:	pop    ebx
  41965a:	add    dh,al
  41965c:	(bad)  
  41965d:	jg     0x41968f
  41965f:	jge    0x41968d
  419661:	(bad)  
  419662:	jle    0x4196dc
  419664:	and    BYTE PTR [eax-0x1d],cl
  419667:	xor    DWORD PTR ss:[eax-0xb38d692],0x255f7ef
  419672:	arpl   dx,cx
  419674:	add    cl,BYTE PTR [eax+0xc]
  419677:	sbb    DWORD PTR [ebx],ebx
  419679:	mov    bl,0xf2
  41967b:	outs   dx,BYTE PTR ds:[esi]
  41967c:	add    al,0xd5
  41967e:	or     al,0xd1
  419680:	cld    
  419681:	retf   
  419682:	dec    ebx
  419683:	jmp    0x5730f68c
  419688:	add    al,0x98
  41968a:	fisub  WORD PTR [ebx+0x49]
  41968d:	dec    edi
  41968e:	ja     0x419638
  419690:	int3   
  419691:	test   DWORD PTR [edi],0xf6010afb
  419697:	rcl    DWORD PTR [eax],1
  419699:	push   edi
  41969a:	leave  
  41969b:	add    eax,DWORD PTR fs:[esi-0xf]
  41969f:	sar    BYTE PTR es:[edi+0xc],cl
  4196a3:	jmp    0x19c54329
  4196a8:	sbb    al,BYTE PTR [ebx]
  4196aa:	js     0x4196bb
  4196ac:	test   BYTE PTR [ebp+0x3b],al
  4196af:	sbb    ebp,DWORD PTR [eax+0x1f648590]
  4196b5:	inc    esi
  4196b6:	icebp  
  4196b7:	idiv   bl
  4196b9:	add    dh,BYTE PTR [eax-0x11]
	...
  4196c4:	add    BYTE PTR [eax],al
  4196c6:	test   DWORD PTR [ebp-0xf],eax
  4196c9:	ins    BYTE PTR es:[edi],dx
  4196ca:	sbb    BYTE PTR [esi-0xf],al
  4196cd:	fsubrp st(1),st
  4196cf:	cli    
  4196d0:	outs   dx,DWORD PTR ds:[esi]
  4196d1:	xlat   BYTE PTR ds:[ebx]
  4196d2:	test   DWORD PTR [ebp+0x1],eax
  4196d5:	(bad)
  4196d9:	inc    esi
  4196da:	enter  0x700a,0xbf
  4196de:	adc    eax,0xc57f0145
  4196e3:	xchg   esi,eax
  4196e4:	hlt    
  4196e5:	popa   
  4196e6:	retf   
  4196e7:	cmp    eax,0xc191e90d
  4196ec:	lea    esp,[ebx+0x6907ca34]
  4196f2:	leave  
  4196f3:	jg     0x41976c
  4196f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196f6:	fisubr WORD PTR [ebp+0x39d600e4]
  4196fc:	out    dx,eax
  4196fd:	push   DWORD PTR [ebp+0x1f]
  419700:	je     0x419700
  419702:	cmp    DWORD PTR [ecx],0x833d800c
  419708:	jge    0x4196b1
  41970a:	jne    0x419703
  41970c:	jae    0x41970c
  41970e:	cmp    DWORD PTR [ecx],0xc760750c
  419714:	lea    eax,[eax+0x50ef3980]
  41971a:	push   ds
  41971b:	cmp    ebp,esi
  41971d:	inc    DWORD PTR [ecx]
  41971f:	call   0xc255:0x2f2f5b52
  419726:	scas   al,BYTE PTR es:[edi]
  419727:	sbb    BYTE PTR [ebp-0x77],0x0
	...
  419733:	add    bl,bl
  419735:	xchg   edx,eax
  419736:	pop    esp
  419737:	push   ebx
  419738:	pop    eax
  419739:	lds    ebx,FWORD PTR [ebp+0x8]
  41973c:	sub    eax,0x3b8b0098
  419741:	push   edx
  419742:	and    cl,cl
  419744:	cld    
  419745:	inc    esi
  419746:	add    cl,BYTE PTR [eax-0x7506b8d6]
  41974c:	push   0x4b
  41974e:	mov    DWORD PTR [edi+ebx*4],eax
  419751:	mov    ebx,0xbe5ef98b
  419756:	in     eax,0x53
  419758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419759:	and    esp,DWORD PTR [eax+0x213881fa]
  41975f:	shl    bl,cl
  419761:	inc    edi
  419762:	adc    ecx,DWORD PTR [edx+0x13e6c3a]
  419768:	mov    esi,0x7c834e82
  41976d:	inc    ebx
  41976e:	jne    0x419760
  419770:	aaa    
  419771:	or     al,0x86
  419773:	inc    esp
  419774:	sub    edi,DWORD PTR [edx]
  419776:	test   BYTE PTR [esp+eax*1],al
  419779:	mov    esp,0x60cffa8b
  41977e:	dec    ecx
  41977f:	icebp  
  419780:	jno    0x419713
  419782:	jne    0x419770
  419784:	stos   BYTE PTR es:[edi],al
  419785:	sbb    dh,ah
  419787:	inc    DWORD PTR [eax]
  419789:	pop    eax
  41978a:	or     eax,0xd58cf00
  41978f:	add    bh,cl
  419791:	pop    eax
  419792:	or     eax,0xd58cf00
	...
  41979f:	add    BYTE PTR [eax],al
  4197a1:	add    bh,cl
  4197a3:	pop    eax
  4197a4:	or     eax,0xd58cf00
  4197a9:	add    bh,cl
  4197ab:	pop    eax
  4197ac:	or     eax,0xd56cf00
  4197b1:	add    bh,cl
  4197b3:	push   esi
  4197b4:	or     eax,0xd56cf00
  4197b9:	add    bh,cl
  4197bb:	push   esi
  4197bc:	or     eax,0xd56cf00
  4197c1:	add    bh,cl
  4197c3:	push   esi
  4197c4:	or     eax,0xd56cf00
  4197c9:	add    bh,cl
  4197cb:	push   esi
  4197cc:	or     eax,0xd56cf00
  4197d1:	add    bh,cl
  4197d3:	push   esi
  4197d4:	or     eax,0xd56cf00
  4197d9:	add    bh,cl
  4197db:	push   esi
  4197dc:	or     eax,0xd56cf00
  4197e1:	add    bh,cl
  4197e3:	push   esi
  4197e4:	or     eax,0xd56cf00
  4197e9:	add    bh,cl
  4197eb:	push   esi
  4197ec:	or     eax,0xd56cf00
  4197f1:	add    bh,cl
  4197f3:	push   esi
  4197f4:	or     eax,0xd56cf00
  4197f9:	add    bh,cl
  4197fb:	push   esi
  4197fc:	or     eax,0xe37fcf00
  419801:	add    ecx,edi
  419803:	jg     0x4197e8
  419805:	add    eax,DWORD PTR [eax]
	...
  41980f:	add    bh,cl
  419811:	jg     0x4197f6
  419813:	add    ecx,edi
  419815:	jg     0x4197fa
  419817:	add    ecx,edi
  419819:	jg     0x4197fe
  41981b:	add    ecx,edi
  41981d:	jg     0x419802
  41981f:	add    ecx,edi
  419821:	jg     0x419806
  419823:	add    ecx,edi
  419825:	jg     0x41980a
  419827:	add    ecx,edi
  419829:	jg     0x41980e
  41982b:	add    ecx,edi
  41982d:	jg     0x419812
  41982f:	add    ecx,edi
  419831:	jg     0x419816
  419833:	add    ecx,edi
  419835:	jg     0x41981a
  419837:	add    ecx,edi
  419839:	jg     0x41981e
  41983b:	add    ecx,edi
  41983d:	jg     0x419822
  41983f:	add    ecx,edi
  419841:	jg     0x419826
  419843:	add    ecx,edi
  419845:	jg     0x41982a
  419847:	add    ecx,edi
  419849:	jg     0x41982e
  41984b:	add    ecx,edi
  41984d:	jg     0x419832
  41984f:	add    ecx,edi
  419851:	jg     0x41983b
  419853:	std    
  419854:	lds    edi,FWORD PTR [ecx-0x7c]
  419857:	xor    ebx,DWORD PTR [ebx]
  419859:	xlat   BYTE PTR ds:[ebx]
  41985a:	test   DWORD PTR [ebx],esp
  41985c:	stc    
  41985d:	mov    es,ecx
  41985f:	adc    ebp,DWORD PTR [eax-0x50e93c61]
  419865:	lahf   
  419866:	ja     0x4198c3
  419868:	in     al,dx
  419869:	lahf   
  41986a:	push   esi
  41986b:	pop    ecx
  41986c:	add    ah,dl
  41986e:	aas    
  41986f:	popa   
  419870:	fstp   QWORD PTR [edi+0x5c4f]
	...
  41987e:	in     al,dx
  41987f:	lahf   
  419880:	inc    ebp
  419881:	popa   
  419882:	ret    
  419883:	retf   
  419884:	inc    eax
  419885:	push   edx
  419886:	out    dx,eax
  419887:	mov    DWORD PTR [ecx+edi*8],ebx
  41988a:	mov    al,0xc
  41988d:	inc    esi
  41988e:	fwait
  41988f:	int3   
  419890:	jle    0x4198d2
  419892:	mov    bh,dl
  419894:	js     0x41985f
  419896:	(bad)  
  419897:	fisub  WORD PTR [ebx]
  419899:	leave  
  41989a:	ret    
  41989b:	mov    WORD PTR [ebx],?
  41989d:	shl    DWORD PTR [edi-0x2426c36f],1
  4198a3:	lahf   
  4198a4:	outs   dx,BYTE PTR ds:[esi]
  4198a5:	add    BYTE PTR [ebx-0x62fb9e47],ch
  4198ab:	fisub  DWORD PTR [edi+0x7]
  4198ae:	stos   DWORD PTR es:[edi],eax
  4198af:	mov    esp,0xd56ffa6e
  4198b4:	and    BYTE PTR [ecx],cl
  4198b6:	mov    dl,bl
  4198b8:	pusha  
  4198b9:	or     DWORD PTR [ebp-0x7f3e9624],ebx
  4198bf:	into   
  4198c0:	sub    al,0xbb
  4198c2:	das    
  4198c3:	shl    DWORD PTR [edi-0x45],1
  4198c6:	adc    bl,bh
  4198c8:	push   0xff79b60f
  4198cd:	loop   0x4198c6
  4198cf:	aam    0x7e
  4198d1:	(bad)  
  4198d2:	in     al,dx
  4198d3:	fisub  DWORD PTR [edx-0x71]
  4198d6:	stc    
  4198d7:	int    0x5f
  4198d9:	mov    BYTE PTR [eax],cl
  4198db:	(bad)  [ecx-0x79]
  4198de:	(bad)  
  4198df:	lahf   
  4198e0:	fs xchg ebp,eax
	...
  4198ea:	add    BYTE PTR [eax],al
  4198ec:	sbb    al,dl
  4198ee:	ss (bad) 
  4198f0:	fxch   st(4)
  4198f2:	jns    0x41996a
  4198f4:	loop   0x4198d0
  4198f6:	outs   dx,BYTE PTR ds:[esi]
  4198f7:	jp     0x4198e8
  4198f9:	sar    DWORD PTR [ebp+0x7e],1
  4198fc:	or     cl,ah
  4198fe:	jns    0x419948
  419900:	std    
  419901:	fisub  WORD PTR [edx]
  419903:	dec    edx
  419904:	add    bh,dl
  419906:	and    esp,esp
  419908:	push   esi
  419909:	jbe    0x419911
  41990b:	jmp    0x4e18dc
  419910:	ss jg  0x41991f
  419913:	add    BYTE PTR [esi],ah
  419915:	jg     0x419923
  419917:	add    BYTE PTR [esi],ah
  419919:	jg     0x419927
  41991b:	add    BYTE PTR [esi],dh
  41991d:	jg     0x41992b
  41991f:	add    BYTE PTR [esi],dh
  419921:	jg     0x41992f
  419923:	add    BYTE PTR [esi],ah
  419925:	jg     0x419933
  419927:	add    BYTE PTR [esi],ah
  419929:	jg     0x419937
  41992b:	add    dh,dh
  41992d:	jle    0x41993b
  41992f:	add    dh,dh
  419931:	jle    0x41993f
  419933:	add    dh,ah
  419935:	jle    0x419943
  419937:	add    dh,ah
  419939:	jle    0x419947
  41993b:	add    dh,dh
  41993d:	jle    0x41994b
  41993f:	add    dh,dh
  419941:	jle    0x41994f
  419943:	add    dh,ah
  419945:	jle    0x419953
  419947:	add    BYTE PTR [ebx],bh
  419949:	repnz inc ecx
  41994b:	imul   esi,edi,0xffffff9f
  41994e:	and    eax,0x4
	...
  41995b:	adc    eax,0x20dbec58
  419960:	outs   dx,BYTE PTR ds:[esi]
  419961:	sub    eax,0x5702ff89
  419966:	stos   DWORD PTR es:[edi],eax
  419967:	dec    eax
  419968:	or     DWORD PTR [ecx],edx
  41996a:	jb     0x4199b5
  41996c:	imul   esp,esp,0x8e5bb85e
  419972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419973:	jle    0x419981
  419975:	add    BYTE PTR [esi+0x7e],dh
  419978:	or     al,0x0
  41997a:	jbe    0x4199fa
  41997c:	or     al,0x0
  41997e:	data16 jle 0x41998d
  419981:	add    BYTE PTR [esi+0x7e],ah
  419984:	or     al,0x0
  419986:	jbe    0x419a06
  419988:	or     al,0x0
  41998a:	jbe    0x419a0a
  41998c:	or     al,0x0
  41998e:	data16 jle 0x41999d
  419991:	add    bh,cl
  419993:	pop    eax
  419994:	or     eax,0xd58cf00
  419999:	add    bh,cl
  41999b:	pop    eax
  41999c:	or     eax,0xd58cf00
  4199a1:	add    bh,cl
  4199a3:	pop    eax
  4199a4:	or     eax,0xd58cf00
  4199a9:	add    bh,cl
  4199ab:	pop    eax
  4199ac:	or     eax,0xd58cf00
  4199b1:	add    bh,cl
  4199b3:	pop    eax
  4199b4:	or     eax,0xd58cf00
  4199b9:	add    bh,cl
  4199bb:	pop    eax
  4199bc:	or     eax,0x0
  4199c1:	add    BYTE PTR [eax],al
  4199c3:	add    BYTE PTR [eax],al
  4199c5:	add    BYTE PTR [eax],al
  4199c7:	add    bh,cl
  4199c9:	pop    eax
  4199ca:	or     eax,0xd58cf00
  4199cf:	add    bh,cl
  4199d1:	pop    eax
  4199d2:	or     eax,0xd58cf00
  4199d7:	add    bh,cl
  4199d9:	pop    eax
  4199da:	or     eax,0xd58cf00
  4199df:	add    bh,cl
  4199e1:	push   esi
  4199e2:	or     eax,0xd56cf00
  4199e7:	add    bh,cl
  4199e9:	push   esi
  4199ea:	or     eax,0xd56cf00
  4199ef:	add    bh,cl
  4199f1:	push   esi
  4199f2:	or     eax,0xd56cf00
  4199f7:	add    bh,cl
  4199f9:	push   esi
  4199fa:	or     eax,0xd56cf00
  4199ff:	add    bh,cl
  419a01:	push   esi
  419a02:	or     eax,0xd56cf00
  419a07:	add    bh,cl
  419a09:	push   esi
  419a0a:	or     eax,0xd56cf00
  419a0f:	add    bh,cl
  419a11:	push   esi
  419a12:	or     eax,0xe37fcf00
  419a17:	add    ecx,edi
  419a19:	jg     0x4199fe
  419a1b:	add    ecx,edi
  419a1d:	jg     0x419a02
  419a1f:	add    ecx,edi
  419a21:	jg     0x419a06
  419a23:	add    ecx,edi
  419a25:	jg     0x419a0a
  419a27:	add    ecx,edi
  419a29:	jg     0x419a0e
  419a2b:	add    eax,DWORD PTR [eax]
	...
  419a35:	add    bh,cl
  419a37:	jg     0x419a1c
  419a39:	add    ecx,edi
  419a3b:	jg     0x419a20
  419a3d:	add    ecx,edi
  419a3f:	jg     0x419a24
  419a41:	add    ecx,edi
  419a43:	jg     0x419a28
  419a45:	add    ecx,edi
  419a47:	jg     0x419a2c
  419a49:	add    ecx,edi
  419a4b:	jg     0x419a30
  419a4d:	add    ecx,edi
  419a4f:	jg     0x419a34
  419a51:	add    ecx,edi
  419a53:	jg     0x419a38
  419a55:	add    ecx,edi
  419a57:	jg     0x419a3c
  419a59:	add    ecx,edi
  419a5b:	jg     0x419a40
  419a5d:	add    ecx,edi
  419a5f:	jg     0x419a44
  419a61:	add    ecx,edi
  419a63:	jg     0x419a48
  419a65:	add    ecx,edi
  419a67:	jg     0x419a4c
  419a69:	add    ecx,edi
  419a6b:	jg     0x419a50
  419a6d:	add    ecx,edi
  419a6f:	jg     0x419a54
  419a71:	add    ecx,edi
  419a73:	jg     0x419a58
  419a75:	add    ecx,edi
  419a77:	jg     0x419a5c
  419a79:	add    ecx,edi
  419a7b:	jg     0x419a60
  419a7d:	add    ecx,edi
  419a7f:	jg     0x419a64
  419a81:	add    ecx,edi
  419a83:	jg     0x419a68
  419a85:	add    ecx,edi
  419a87:	jg     0x419a5d
  419a89:	adc    DWORD PTR [esi-0x30f22775],edi
  419a8f:	iret   
  419a90:	test   BYTE PTR [eax-0x2],dl
  419a93:	enter  0x5182,0xeb
  419a97:	jg     0x419aa5
  419a99:	jns    0x419a9b
	...
  419aa3:	add    BYTE PTR [eax+edx*8],al
  419aa6:	outs   dx,BYTE PTR ds:[esi]
  419aa7:	mov    ecx,esp
  419aa9:	sar    BYTE PTR [ecx+0x4c],1
  419aac:	mov    eax,ds:0x5be973cb
  419ab1:	mov    ?,WORD PTR ds:0x6340461d
  419ab7:	inc    esp
  419ab8:	clc    
  419ab9:	int3   
  419aba:	jge    0x419aa5
  419abc:	inc    ebx
  419abd:	mov    ?,WORD PTR ds:0x398a37f5
  419ac3:	icebp  
  419ac4:	int3   
  419ac5:	nop
  419ac6:	ds cli 
  419ac8:	sbb    BYTE PTR [eax+0x6c],al
  419acb:	or     esi,eax
  419acd:	nop
  419ace:	ds fcmove st,st(4)
  419ad1:	shl    DWORD PTR [edi+0x1d],cl
  419ad4:	mov    esi,0xccff63dc
  419ad9:	retf   
  419ada:	addr16 cli 
  419adc:	sar    BYTE PTR [edi+0x60],0xe
  419ae0:	mov    ch,0xdc
  419ae2:	or     al,0xb8
  419ae4:	loop   0x419a74
  419ae6:	or     al,0xf9
  419ae8:	stos   DWORD PTR es:[edi],eax
  419ae9:	into   
  419aea:	jge    0x419aca
  419aec:	popf   
  419aed:	int    0x68
  419aef:	sbb    bl,cl
  419af1:	xlat   BYTE PTR ds:[ebx]
  419af2:	addr16 (bad) 
  419af6:	or     al,0xbc
  419af8:	std    
  419af9:	lods   eax,DWORD PTR ds:[esi]
  419afa:	gs int3 
  419afc:	sti    
  419afd:	jg     0x419b67
  419aff:	mov    ebx,0xc761a4eb
  419b04:	int3   
  419b05:	mov    bl,0x7e
  419b07:	mov    ah,0x0
	...
  419b11:	add    cl,bl
  419b13:	mov    bl,0x62
  419b15:	xchg   esi,eax
  419b16:	mov    ds:0x9bd83c3f,eax
  419b1b:	outs   dx,BYTE PTR ds:[esi]
  419b1c:	cmp    ebx,eax
  419b1e:	int3   
  419b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b20:	pusha  
  419b21:	jle    0x419ae9
  419b23:	mov    ds:0x78610073,al
  419b28:	or     al,0x31
  419b2a:	xor    al,0x36
  419b2c:	cmp    eax,0xf13a2835
  419b31:	jb     0x419b81
  419b33:	fs push 0x2183f96f
  419b39:	xor    dh,BYTE PTR [ebp-0x16c9c1c9]
  419b3f:	cmp    edi,DWORD PTR [edx]
  419b41:	add    BYTE PTR [ebp-0xa968195],dl
  419b47:	ja     0x419b55
  419b49:	jae    0x419b46
  419b4b:	jno    0x419bc8
  419b4d:	push   0x6d718f
  419b52:	jecxz  0x419bb8
  419b54:	jnp    0x419bca
  419b56:	retf   
  419b57:	jne    0x419b65
  419b59:	arpl   cx,ax
  419b5b:	jo     0x419bd9
  419b5d:	jne    0x419b49
  419b5f:	push   0x75e6007e
  419b64:	imul   ebp,DWORD PTR [esi-0x3b],0xe6737b68
  419b6b:	jbe    0x419bd6
  419b6d:	fldcw  WORD PTR [bx+si+0x7e]
  419b71:	add    al,cl
  419b73:	jb     0x419bd4
  419b75:	je     0x419b77
	...
  419b7f:	add    BYTE PTR [esp+eiz*2],al
  419b82:	pusha  
  419b83:	ins    BYTE PTR es:[edi],dx
  419b84:	out    0x63,al
  419b86:	bound  esp,QWORD PTR [edi-0x65]
  419b89:	outs   dx,BYTE PTR ds:[esi]
  419b8a:	or     al,0x6a
  419b8c:	mov    esi,DWORD PTR [ebp+0x7d]
  419b8f:	jae    0x419b48
  419b91:	and    BYTE PTR [ecx],0x32
  419b94:	mov    ch,0x33
  419b96:	cmp    esi,DWORD PTR [ebx]
  419b98:	mov    dh,0x79
  419b9a:	fs popa 
  419b9c:	pop    edx
  419b9d:	addr16 jp 0x419c05
  419ba0:	xor    al,0x82
  419ba2:	push   0x72
  419ba4:	dec    ebx
  419ba5:	addr16 push 0xd03cf6f
  419bab:	imul   esi,esi,0xfd6321bc
  419bb1:	sub    BYTE PTR [eax],ch
  419bb3:	jno    0x419ba0
  419bb5:	push   es
  419bb6:	or     eax,0x2a09f871
  419bbb:	arpl   bp,bx
  419bbd:	sub    BYTE PTR [edx],bh
  419bbf:	jae    0x419ba0
  419bc1:	retf   
  419bc2:	cmp    ch,BYTE PTR [ebx-0x12]
  419bc5:	into   
  419bc6:	or     BYTE PTR [ebx-0x4a],ch
  419bc9:	leave  
  419bca:	and    BYTE PTR [edi-0x56],bl
  419bcd:	jl     0x419bd7
  419bcf:	popa   
  419bd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bd1:	retf   
  419bd2:	sub    DWORD PTR [ecx-0x56],esi
  419bd5:	sub    BYTE PTR [esi],ah
  419bd7:	outs   dx,BYTE PTR ds:[esi]
  419bd8:	mov    ds:0xaa6e3acb,eax
  419bdd:	je     0x419be7
  419bdf:	push   0xffffffa8
  419be1:	cdq    
  419be2:	and    BYTE PTR [ebx+0x0],dh
	...
  419bed:	add    BYTE PTR [esi+0x6c732328],ch
  419bf3:	xor    DWORD PTR ds:0x27287a6d,0x3839726c
  419bfd:	arpl   WORD PTR [ebx+0x28],bp
  419c00:	daa    
  419c01:	pop    edi
  419c02:	pop    esp
  419c03:	mov    ebp,DWORD PTR [edx]
  419c05:	pop    edi
  419c06:	jae    0x419c44
  419c08:	or     eax,0x37476371
  419c0d:	jne    0x419c7d
  419c0f:	pop    edx
  419c10:	cmp    BYTE PTR [eax],al
  419c12:	call   DWORD PTR [esi-0x6900d008]
  419c18:	or     BYTE PTR [eax+0x42],dh
  419c1b:	stc    
  419c1c:	cmp    al,0x6c
  419c1e:	sub    ah,BYTE PTR [edi]
  419c20:	pop    ds
  419c21:	ins    DWORD PTR es:[edi],dx
  419c22:	sbb    eax,0xcf6e2e4b
  419c27:	inc    esp
  419c28:	and    eax,DWORD PTR cs:[bx+si+0x39b]
  419c2e:	push   ds
  419c2f:	mov    bl,0x80
  419c31:	cs in  al,dx
  419c33:	mov    cl,0xe3
  419c35:	and    bh,dh
  419c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c38:	outs   dx,DWORD PTR ds:[esi]
  419c39:	add    BYTE PTR es:[eax-0x4c01c97b],al
  419c40:	mov    BYTE PTR ds:0x2280a7cf,dh
  419c46:	fldenv [edx-0x5d20fc8f]
  419c4c:	push   ebx
  419c4d:	xor    al,0xec
  419c4f:	mov    cl,0xe3
  419c51:	clc    
	...
  419c5a:	add    BYTE PTR [eax],al
  419c5c:	add    esi,DWORD PTR [ebp+0x12]
  419c5f:	stc    
  419c60:	sti    
  419c61:	je     0x419c46
  419c63:	sub    edi,DWORD PTR [ebp+ebp*4+0x7fbd272f]
  419c6a:	aas    
  419c6b:	xor    DWORD PTR [ecx-0x30c4b85e],esp
  419c71:	sahf   
  419c72:	xor    DWORD PTR [eax],ebp
  419c74:	popf   
  419c75:	mov    ds:0xa79b0412,al
  419c7a:	add    ch,BYTE PTR [edi]
  419c7c:	test   al,0xb0
  419c7e:	jecxz  0x419ca2
  419c80:	jno    0x419c26
  419c82:	or     BYTE PTR [eax],dh
  419c84:	jle    0x419d05
  419c86:	push   es
  419c87:	sub    al,0x90
  419c89:	mov    cl,0xff
  419c8b:	sub    ch,BYTE PTR [edi+edi*2-0x1]
  419c8f:	and    dh,BYTE PTR [ecx-0x5a]
  419c92:	or     BYTE PTR [eax],dh
  419c94:	iret   
  419c95:	outs   dx,BYTE PTR ds:[esi]
  419c96:	adc    al,0xf3
  419c98:	mov    eax,ds:0x3926dd7f
  419c9d:	scas   al,BYTE PTR es:[edi]
  419c9e:	int3   
  419c9f:	sub    DWORD PTR [edx+esi*4],ebp
  419ca2:	jecxz  0x419cd8
  419ca4:	xor    BYTE PTR [esi-0x7fd3d03e],ch
  419caa:	(bad)  [edx]
  419cac:	cmp    DWORD PTR [esi+0x7ff4c80c],ebp
  419cb2:	jnp    0x419c7c
  419cb4:	fidiv  DWORD PTR [edx-0x58335e83]
  419cba:	imul   ebx,DWORD PTR [ecx-0x7bf34b44],0x0
	...
  419cc9:	add    BYTE PTR [ebp-0x4b7f814d],ch
  419ccf:	jg     0x419d4d
  419cd1:	mov    BYTE PTR [ebx-0x5277f352],bh
  419cd7:	fsubr  QWORD PTR [ebx-0x78]
  419cda:	lods   eax,DWORD PTR ds:[esi]
  419cdb:	jg     0x419d17
  419cdd:	mov    ah,0x60
  419cdf:	outs   dx,DWORD PTR ds:[esi]
  419ce0:	ds sbb bl,cl
  419ce3:	fcomp  QWORD PTR [edi+0x48]
  419ce6:	stc    
  419ce7:	mov    ds:0xaaf2e96b,eax
  419cec:	js     0x419d2f
  419cee:	jmp    0x62a4:0xe9e969ad
  419cf5:	inc    esi
  419cf6:	div    BYTE PTR [ecx-0x4c0fbbf4]
  419cfc:	fs inc esp
  419cfe:	fnstsw WORD PTR [edi+0x7d]
  419d01:	pop    ss
  419d02:	loopne 0x419cae
  419d04:	jl     0x419d26
  419d06:	shr    DWORD PTR [ecx-0x5b43e599],cl
  419d0c:	ins    DWORD PTR es:[edi],dx
  419d0d:	or     bl,dl
  419d0f:	mov    dl,0x67
  419d11:	adc    eax,0x45faaac
  419d16:	shr    DWORD PTR [edi-0x5749fd9f],cl
  419d1c:	popa   
  419d1d:	dec    esp
  419d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d20:	pusha  
  419d21:	(bad)  
  419d22:	call   0xc6b:0x7ce73a0
  419d29:	sbb    BYTE PTR [edx+0x183b6a],bh
	...
  419d37:	add    bl,dl
  419d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d3a:	ja     0x419d3c
  419d3c:	jne    0x419db1
  419d3e:	push   ecx
  419d3f:	outs   dx,BYTE PTR ds:[esi]
  419d40:	xchg   ecx,eax
  419d41:	jg     0x419da7
  419d43:	mov    ch,BYTE PTR gs:[edi+0x65]
  419d47:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  419d49:	imul   edi,DWORD PTR [ebp+0x73],0x626c32
  419d50:	pop    esp
  419d51:	fs jnp 0x419dc1
  419d54:	dec    edi
  419d55:	ins    DWORD PTR es:[edi],dx
  419d56:	ins    DWORD PTR es:[edi],dx
  419d57:	add    cl,bh
  419d59:	jo     0x419dac
  419d5b:	outs   dx,BYTE PTR ds:[esi]
  419d5c:	inc    ecx
  419d5d:	push   0x6e53740c
  419d62:	js     0x419dcd
  419d64:	dec    eax
  419d65:	bound  ecx,QWORD PTR [ecx+eiz*2]
  419d68:	(bad)  
  419d69:	outs   dx,BYTE PTR ds:[esi]
  419d6a:	pusha  
  419d6b:	gs data16 jo 0x419dd8
  419d6f:	arpl   WORD PTR [esi-0x6c939f98],bx
  419d75:	cmp    DWORD PTR [ebp+eiz*2-0x79],0x5e
  419d7a:	ins    DWORD PTR es:[edi],dx
  419d7b:	add    ch,dh
  419d7d:	push   0x7793726b
  419d82:	or     al,0x31
  419d84:	bound  edi,QWORD PTR ss:[esi+0x61]
  419d88:	test   DWORD PTR [eax+0xc],ebp
  419d8b:	ja     0x419d4c
  419d8d:	outs   dx,DWORD PTR ds:[esi]
  419d8e:	pusha  
  419d8f:	imul   edx,edi,0xca690c70
  419d95:	push   0x7a
  419d97:	fild   QWORD PTR gs:[edx+0x7d]
  419d9b:	xor    al,BYTE PTR [eax]
	...
  419da5:	add    dh,ah
  419da7:	ins    BYTE PTR es:[edi],dx
  419da8:	imul   esp,DWORD PTR [ebx-0x27],0x20006d6f
  419daf:	xor    eax,0x35203637
  419db4:	icebp  
  419db5:	ins    BYTE PTR es:[edi],dx
  419db6:	repz fs push 0x69
  419dba:	cwde   
  419dbb:	jle    0x419e24
  419dbd:	popa   
  419dbe:	iret   
  419dbf:	pop    esp
  419dc0:	and    al,0x75
  419dc2:	cs push eax
  419dc4:	or     eax,0x26463a66
  419dc9:	ja     0x419e03
  419dcb:	hlt    
  419dcc:	idiv   edi
  419dce:	das    
  419dcf:	idiv   BYTE PTR ds:0x23fd2868
  419dd5:	add    BYTE PTR [edi],ah
  419dd7:	or     BYTE PTR ds:0xd07f75f,ah
  419ddd:	jo     0x419dcf
  419ddf:	add    DWORD PTR ds:0x24bced00,edi
  419de5:	jno    0x419de3
  419de7:	nop    DWORD PTR [ebp-0x31]
  419deb:	push   es
  419dec:	and    DWORD PTR [edi-0x9],ebx
  419def:	push   es
  419df0:	and    DWORD PTR [edi-0x19],ebx
  419df3:	sub    BYTE PTR [edi+esi*2],bh
  419df6:	(bad)  
  419df8:	sub    eax,0x897b261
  419dfd:	imul   ebp,DWORD PTR [esi-0x4d97cb24],0xffffffd1
  419e04:	or     BYTE PTR [ecx-0x52],ah
  419e07:	shr    BYTE PTR ds:0x64,cl
  419e0d:	add    BYTE PTR [eax],al
  419e0f:	add    BYTE PTR [eax],al
  419e11:	add    BYTE PTR [eax],al
  419e13:	add    BYTE PTR [esi-0x4c98c3d8],ch
  419e19:	jp     0x419e44
  419e1b:	jb     0x419dec
  419e1d:	jbe    0x419e3e
  419e1f:	bound  ebp,QWORD PTR [edx+0x71003496]
  419e25:	mov    DWORD PTR [esi],edi
  419e27:	arpl   WORD PTR [ecx-0x75],di
  419e2a:	add    BYTE PTR ds:[esi-0x6b],ch
  419e2e:	and    al,0x66
  419e30:	push   0x6e720890
  419e35:	test   DWORD PTR [eax],esp
  419e37:	arpl   WORD PTR [ebx+0x28],si
  419e3a:	cmp    ebx,DWORD PTR [edi+0x66]
  419e3d:	cmp    ch,BYTE PTR [ebx]
  419e3f:	ins    DWORD PTR es:[edi],dx
  419e40:	pop    eax
  419e41:	jg     0x419e26
  419e43:	and    al,0x3c
  419e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e46:	xlat   BYTE PTR ds:[ebx]
  419e47:	and    bh,BYTE PTR ds:0x1826d380
  419e4d:	stos   BYTE PTR es:[edi],al
  419e4e:	fdiv   DWORD PTR [edi]
  419e50:	iret   
  419e51:	popf   
  419e52:	les    esi,FWORD PTR [edi]
  419e54:	xor    al,0x9f
  419e56:	rol    DWORD PTR [ebx],0x2e
  419e59:	test   eax,0xa33028ca
  419e5e:	jecxz  0x419e81
  419e60:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e62:	xchg   edi,eax
  419e63:	add    BYTE PTR es:[eax-0x6311d36a],al
  419e6a:	xor    BYTE PTR [ecx],0xa8
  419e6d:	jg     0x419edf
  419e6f:	sub    ch,dh
  419e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e72:	cmp    BYTE PTR [edx],0xcf
  419e75:	popf   
  419e76:	pushf  
  419e77:	aaa    
	...
  419e80:	add    BYTE PTR [eax],al
  419e82:	in     al,dx
  419e83:	stos   BYTE PTR es:[edi],al
  419e84:	add    BYTE PTR [ebx],0xe7
  419e87:	mov    ds:0x6ee22f6f,al
  419e8c:	jecxz  0x419eb4
  419e8e:	mov    ah,0xa6
  419e90:	inc    ecx
  419e91:	daa    
  419e92:	mov    ah,0x7f
  419e94:	aas    
  419e95:	and    esp,DWORD PTR [esi-0x30dca858]
  419e9b:	lods   al,BYTE PTR ds:[esi]
  419e9c:	inc    esp
  419e9d:	das    
  419e9e:	mov    BYTE PTR [ecx+0x7f802c37],ch
  419ea4:	inc    esi
  419ea5:	sub    eax,0x3344afa4
  419eaa:	iret   
  419eab:	mov    ds:0xa874231c,eax
  419eb0:	add    DWORD PTR [eax],ebp
  419eb2:	iret   
  419eb3:	mov    bl,0x4
  419eb5:	cmp    ebp,DWORD PTR [ebx-0x58]
  419eb8:	adc    eax,0xf5a86904
  419ebd:	ss je  0x419f3f
  419ec0:	sbb    eax,0xca9772d
  419ec5:	mov    edx,0xfb0c72dd
  419eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ecb:	sahf   
  419ecc:	fs enter 0xa3fe,0xc
  419ed1:	retf   
  419ed2:	lock mov al,ds:0x70bdc262
  419ed8:	ds jmp 0xcaad3bda
  419ede:	hlt    
  419edf:	pushf  
  419ee0:	jge    0x419ecb
  419ee2:	out    dx,eax
  419ee3:	stos   BYTE PTR es:[edi],al
  419ee4:	popa   
  419ee5:	lds    eax,FWORD PTR [eax]
	...
  419eef:	add    ah,cl
  419ef1:	mov    eax,ds:0x9cdbbe60
  419ef6:	jle    0x419ee1
  419ef8:	mov    edi,0xb88e619e
  419efd:	pushf  
  419efe:	jle    0x419ee9
  419f00:	scas   al,BYTE PTR es:[edi]
  419f01:	fsub   DWORD PTR [edx-0x78]
  419f04:	mov    ds:0xad930cd8,al
  419f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f0a:	addr16 jp 0x419ed9
  419f0d:	fdivr  DWORD PTR [ebp-0x73]
  419f10:	mov    dl,0xd8
  419f12:	jge    0x419e99
  419f14:	stos   BYTE PTR es:[edi],al
  419f15:	jg     0x419f91
  419f17:	push   eax
  419f18:	lock mov bl,0x61
  419f1b:	pop    ebx
  419f1c:	add    al,BYTE PTR [eax-0x5c1ab9a0]
  419f22:	popa   
  419f23:	aas    
  419f24:	retf   
  419f25:	push   0xb2e3fa3e
  419f2a:	addr16 jmp 0xfa7f0d4b
  419f30:	and    ch,BYTE PTR [ecx+0xc]
  419f33:	cmp    bl,bh
  419f35:	fdivr  DWORD PTR [esi+0x1d]
  419f38:	rcr    DWORD PTR [ebp+eiz*2+0x619cade9],0x1b
  419f40:	lods   al,BYTE PTR ds:[esi]
  419f41:	pushf  
  419f42:	or     al,0x16
  419f44:	mov    ds:0xdb0062a9,al
  419f49:	jno    0x419f57
  419f4b:	ins    DWORD PTR es:[edi],dx
  419f4c:	xlat   BYTE PTR ds:[ebx]
  419f4d:	pop    esp
  419f4e:	addr16 imul ecx,ebx,0x727883
	...
  419f5d:	add    bh,cl
  419f5f:	imul   esi,DWORD PTR gs:[edi+ebp*4-0x7d],0x64926e5f
  419f68:	bound  esp,QWORD PTR [ebp-0x5a]
  419f6b:	sub    al,0x3b
  419f6d:	xor    eax,DWORD PTR [edi-0x6aff94a3]
  419f73:	imul   ebp,DWORD PTR [ecx+0x63],0x7d
  419f77:	pusha  
  419f78:	bound  eax,QWORD PTR [eax]
  419f7a:	mov    WORD PTR [eax+0x62],?
  419f7d:	imul   edx,DWORD PTR [ecx+0x6d],0x6d5e630c
  419f84:	imul   esi,DWORD PTR [ebx+0x76],0x55735173
  419f8b:	jb     0x419fc9
  419f8d:	jb     0x419fd9
  419f8f:	adc    DWORD PTR [ecx+0x75],0xffffffe5
  419f93:	imul   bp,WORD PTR [esi+0x76],0x7c6e
  419f99:	popa   
  419f9a:	aam    0x65
  419f9c:	jns    0x419f9e
  419f9e:	inc    edi
  419f9f:	xchg   edi,eax
  419fa0:	imul   esp,DWORD PTR gs:[eax-0x5b9a9a85],0x266e6967
  419fab:	bound  ebx,QWORD PTR [edi+0x6f]
  419fae:	mov    DWORD PTR [edi+0x6d],esp
  419fb1:	add    BYTE PTR [eax-0x6f9a9693],bl
  419fb7:	pop    edi
  419fb8:	jnp    0x419fba
  419fba:	mov    gs,WORD PTR [edx+0x7c]
  419fbd:	gs outs dx,BYTE PTR es:[esi]
  419fc0:	fs popa 
	...
  419fca:	add    BYTE PTR [eax],al
  419fcc:	loop   0x41a038
  419fce:	gs add al,dl
  419fd1:	bound  esi,QWORD PTR fs:[edi+ecx*8-0x7d]
  419fd6:	es fs pusha 
  419fd9:	sub    BYTE PTR [ecx],ch
  419fdb:	ins    DWORD PTR es:[edi],dx
  419fdc:	js     0x419f6f
  419fde:	pop    ds
  419fdf:	outs   dx,BYTE PTR ds:[esi]
  419fe0:	push   0x5d5f2528
  419fe5:	jl     0x41a012
  419fe7:	ja     0x419fb8
  419fe9:	cmp    DWORD PTR [ebp*2+0x304434],esp
  419ff0:	clc    
  419ff1:	(bad)  
  419ff2:	std    
  419ff3:	xor    al,0xcf
  419ff5:	inc    edx
  419ff6:	es jno 0x41a023
  419ff9:	pop    ecx
  419ffa:	and    eax,0x29f43b00
  419fff:	imul   esp,DWORD PTR [esi],0x30671129
  41a005:	inc    eax
  41a006:	and    DWORD PTR [edi+0x23],ebx
  41a009:	sub    DWORD PTR [eax],ebp
  41a00b:	add    BYTE PTR [ebx],al
  41a00d:	adc    DWORD PTR [esi+ebp*2],edi
  41a010:	jmp    0x41a00d
  41a012:	ss add ah,bh
  41a015:	sbb    BYTE PTR [eax],ah
  41a017:	jb     0x419fff
  41a019:	or     al,0xd
  41a01b:	(bad)  
  41a01c:	out    dx,al
  41a01d:	push   cs
  41a01e:	adc    DWORD PTR [edi-0x25],esp
  41a021:	sub    BYTE PTR [esi+ebp*2],ch
  41a024:	jecxz  0x41a029
  41a026:	aaa    
  41a027:	add    dh,ch
  41a029:	mov    dh,0x21
  41a02b:	push   0x35ceb8
	...
  41a038:	add    BYTE PTR [eax],al
  41a03a:	lods   al,BYTE PTR ds:[esi]
  41a03b:	lds    edi,FWORD PTR [edx]
  41a03d:	jbe    0x419ff1
  41a03f:	aam    0x3c
  41a041:	arpl   di,cx
  41a043:	shl    BYTE PTR [ebx],0x61
  41a046:	mov    ah,0xc3
  41a048:	xor    eax,0x3bc59f00
  41a04d:	arpl   WORD PTR [ebp-0x5e9cd8d8],bx
  41a053:	ret    0x6b2d
  41a056:	jbe    0x41a0d7
  41a058:	sbb    DWORD PTR [eax+ebp*2],eax
  41a05b:	mov    ds:0xb86c3202,eax
  41a060:	or     ch,BYTE PTR [edi]
  41a062:	sar    BYTE PTR [edi-0x2c],1
  41a065:	xor    bl,BYTE PTR [ebp-0x30e14952]
  41a06b:	lods   eax,DWORD PTR ds:[esi]
  41a06c:	sbb    al,0x34
  41a06e:	ins    BYTE PTR es:[edi],dx
  41a06f:	mov    cl,0xe3
  41a071:	and    BYTE PTR [ebp+eiz*4+0x8],ch
  41a075:	xor    eax,0x2ce3b130
  41a07a:	xor    DWORD PTR [edi-0x7fbcd436],esp
  41a080:	aam    0x30
  41a082:	sub    al,0xb2
  41a084:	xlat   BYTE PTR ds:[ebx]
  41a085:	cmp    bh,al
  41a087:	jg     0x41a04f
  41a089:	xor    eax,0x2ab79f2c
  41a08e:	and    DWORD PTR [ebx-0x5addde1d],ebx
  41a094:	lds    esp,FWORD PTR [edx]
  41a096:	std    
  41a097:	jg     0x41a01d
  41a099:	pop    ds
  41a09a:	call   0x76253a
	...
  41a0a7:	add    bh,cl
  41a0a9:	mov    cl,0x8a
  41a0ab:	das    
  41a0ac:	call   0xde452d53
  41a0b1:	mov    ds:0xb1ec3a84,eax
  41a0b6:	jecxz  0x41a0e8
  41a0b8:	lock mov al,0x7f
  41a0bb:	sub    ah,ah
  41a0bd:	jg     0x41a132
  41a0bf:	xor    eax,0x1f56a6a8
  41a0c4:	iret   
  41a0c5:	mov    ecx,0xa1c1256b
  41a0ca:	dec    ecx
  41a0cb:	daa    
  41a0cc:	iret   
  41a0cd:	mov    al,0x44
  41a0cf:	daa    
  41a0d0:	pushf  
  41a0d1:	call   0x1f5e:0xa6b40457
  41a0d8:	iret   
  41a0d9:	fwait
  41a0da:	or     al,0x48
  41a0dc:	out    0xa3,eax
  41a0de:	imul   edi,DWORD PTR [edx],0xffffffd3
  41a0e1:	call   0x150c:0xa5e00c7e
  41a0e8:	fsubr  DWORD PTR [esi-0x512fe288]
  41a0ee:	js     0x41a0d9
  41a0f0:	mov    cl,0xd4
  41a0f2:	jp     0x41a100
  41a0f4:	cdq    
  41a0f5:	pushf  
  41a0f6:	ins    DWORD PTR es:[edi],dx
  41a0f7:	adc    dl,bl
  41a0f9:	mov    ds:0xa2a70c62,al
  41a0fe:	jp     0x41a104
  41a100:	rcr    DWORD PTR [ebx-0x640a2095],cl
  41a106:	or     al,0xcc
  41a108:	cmc    
  41a109:	mov    ds:0xdf61,eax
	...
  41a116:	sar    DWORD PTR [edi+0x6d],1
  41a119:	sar    ecx,0xb1
  41a11c:	ins    DWORD PTR es:[edi],dx
  41a11d:	ror    esp,1
  41a11f:	popf   
  41a120:	jle    0x41a0f2
  41a122:	mov    ecx,0xefe968a5
  41a127:	mov    ds:0xa0e8e968,al
  41a12c:	jge    0x41a0cb
  41a12e:	mov    ch,0xa5
  41a130:	jae    0x41a11b
  41a132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a133:	mov    ds:0xa8cc8c62,al
  41a138:	arpl   WORD PTR [edx-0x69825d5e],cx
  41a13e:	scas   al,BYTE PTR es:[edi]
  41a13f:	stos   DWORD PTR es:[edi],eax
  41a140:	or     al,0xbb
  41a142:	bound  ebp,QWORD PTR [esi+0x3e]
  41a145:	mov    ebx,0x746b345a
  41a14a:	repnz mov eax,ds:0x7ffc4c60
  41a150:	cmp    ebx,DWORD PTR [eax]
  41a152:	inc    edx
  41a153:	cmp    ebx,DWORD PTR gs:[eax]
  41a156:	cmp    ah,BYTE PTR [ebp+0xc]
  41a159:	dec    edx
  41a15a:	lock sahf 
  41a15c:	imul   eax,DWORD PTR [eax],0xffffff95
  41a15f:	pop    esp
  41a160:	pusha  
  41a161:	popa   
  41a162:	es pop di
  41a165:	jb     0x41a0e9
  41a167:	pop    edx
  41a168:	bound  esi,QWORD PTR [edx]
  41a16a:	add    eax,0xd96c6980
  41a16f:	gs ins DWORD PTR es:[edi],dx
  41a171:	addr16 leave 
  41a173:	pop    edi
  41a174:	or     al,0x66
  41a176:	leave  
  41a177:	pop    esp
  41a178:	js     0x41a1dc
	...
  41a182:	add    BYTE PTR [eax],al
  41a184:	xlat   BYTE PTR ds:[ebx]
  41a185:	addr16 pusha 
  41a187:	xor    esi,esi
  41a189:	pop    ebx
  41a18a:	pop    edi
  41a18b:	jbe    0x41a14c
  41a18d:	pop    ebp
  41a18e:	addr16 add al,cl
  41a191:	pop    edx
  41a192:	js     0x41a1fc
  41a194:	xlat   BYTE PTR ds:[ebx]
  41a195:	pop    ecx
  41a196:	or     al,0x65
  41a198:	fwait
  41a199:	push   0x60a36e51
  41a19e:	pusha  
  41a19f:	add    BYTE PTR [ebp-0x6b90a0a2],dl
  41a1a5:	je     0x41a1b3
  41a1a7:	data16 arpl WORD PTR [esi+0x63],bx
  41a1ab:	outs   dx,DWORD PTR ds:[esi]
  41a1ac:	nop
  41a1ad:	xchg   ebp,eax
  41a1ae:	or     al,0x73
  41a1b0:	xchg   DWORD PTR [eax+0x65],ebp
  41a1b3:	jns    0x41a22b
  41a1b5:	push   0x60617851
  41a1ba:	pusha  
  41a1bb:	ins    BYTE PTR es:[edi],dx
  41a1bc:	imul   dx,WORD PTR [ecx+0x73],0x5d49
  41a1c2:	or     al,0x6a
  41a1c4:	jmp    0x2742042f
  41a1c9:	ins    BYTE PTR es:[edi],dx
  41a1ca:	ds ja  0x41a1e2
  41a1cd:	pusha  
  41a1ce:	cmp    BYTE PTR [edx+0x66],dh
  41a1d1:	popa   
  41a1d2:	push   ecx
  41a1d3:	bound  edi,QWORD PTR [edi-0x6d9a8182]
  41a1d9:	sub    al,0x3b
  41a1db:	xor    esp,DWORD PTR [esi]
  41a1dd:	popa   
  41a1de:	pusha  
  41a1df:	popa   
  41a1e0:	iret   
  41a1e1:	(bad)  
  41a1e2:	and    al,0x5f
  41a1e4:	iret   
  41a1e5:	fdivr  DWORD PTR [esi]
  41a1e7:	add    BYTE PTR [bx+si],al
	...
  41a1f2:	mov    cl,0xc5
  41a1f4:	sub    eax,DWORD PTR [eax]
  41a1f6:	sahf   
  41a1f7:	imul   ebp,DWORD PTR [ebx],0x2e289b72
  41a1fd:	push   0x633d7472
  41a202:	outs   dx,BYTE PTR ds:[esi]
  41a203:	sub    ah,bh
  41a205:	xor    al,dl
  41a207:	dec    ebx
  41a208:	cld    
  41a209:	jmp    FWORD PTR [edi+0x7a]
  41a20c:	adc    DWORD PTR [ebx+0x7b],esp
  41a20f:	push   edi
  41a210:	or     eax,0x11366e68
  41a215:	popa   
  41a216:	push   0x6b002c36
  41a21b:	xor    DWORD PTR [eax],0x74
  41a21e:	xor    dh,BYTE PTR [edi]
  41a220:	or     eax,0x2c532e71
  41a225:	fs iret 
  41a227:	xchg   edi,eax
  41a228:	div    DWORD PTR [ecx]
  41a22a:	std    
  41a22b:	xchg   ebp,eax
  41a22c:	std    
  41a22d:	push   DWORD PTR [eax]
  41a22f:	dec    eax
  41a230:	sub    DWORD PTR [eax+esi*1+0x29],ebp
  41a234:	and    ebx,DWORD PTR [edi+0x1c]
  41a237:	stc    
  41a238:	sub    esi,DWORD PTR [edx-0x31]
  41a23b:	inc    esp
  41a23c:	sub    BYTE PTR [esi-0xa],ch
  41a23f:	cmp    ebp,DWORD PTR [ecx]
  41a241:	ins    BYTE PTR es:[edi],dx
  41a242:	jmp    0x2c0d:0x3672628
  41a249:	outs   dx,BYTE PTR ds:[esi]
  41a24a:	iret   
  41a24b:	add    eax,0xffdc7128
  41a250:	sub    eax,DWORD PTR [eax]
  41a252:	fdiv   QWORD PTR [esp+ebp*1+0x6c]
  41a259:	add    BYTE PTR [eax],al
  41a25b:	add    BYTE PTR [eax],al
  41a25d:	add    BYTE PTR [eax],al
  41a25f:	add    bl,ch
  41a261:	pop    es
  41a262:	or     eax,0x3007dd70
  41a267:	arpl   WORD PTR [ebp-0x4492dad8],di
  41a26d:	jg     0x41a2ae
  41a26f:	and    eax,0x2b5a7fb2
  41a274:	mov    eax,ds:0x9e2d4a9b
  41a279:	jg     0x41a2ab
  41a27b:	das    
  41a27c:	sahf   
  41a27d:	stos   DWORD PTR es:[edi],eax
  41a27e:	aas    
  41a27f:	sub    ebp,DWORD PTR [edi+edi*2-0x6364dcb6]
  41a286:	ss add al,0x6d
  41a289:	test   al,0x2f
  41a28b:	sub    BYTE PTR [edx-0x60],ch
  41a28e:	nop    DWORD PTR [esi+0x7f]
  41a292:	or     ch,BYTE PTR [ebp*2-0x30d9f065]
  41a299:	call   0x418:0xa6752c09
  41a2a0:	test   al,0x6d
  41a2a2:	mov    dh,0xef
  41a2a4:	popf   
  41a2a5:	imul   esi,DWORD PTR [edx-0x1c8ffe05],0xeeac2c03
  41a2af:	xor    DWORD PTR [ecx-0x5b],eax
  41a2b2:	ret    0x2131
  41a2b5:	test   eax,0xac3703d0
  41a2ba:	xlat   BYTE PTR ds:[ebx]
  41a2bb:	xor    esp,ebp
  41a2bd:	pusha  
  41a2be:	sbb    dh,bl
  41a2c0:	call   0x134a43c
	...
  41a2cd:	add    bl,bl
  41a2cf:	ja     0x41a2da
  41a2d1:	out    dx,eax
  41a2d2:	shl    DWORD PTR [ecx-0xb],0xed
  41a2d6:	mov    bl,0x99
  41a2d8:	call   0xe82d:0xc2a2fc31
  41a2df:	call   0x208c:0xaffa2f92
  41a2e6:	mov    cl,0xaf
  41a2e8:	fwait
  41a2e9:	xor    ecx,edi
  41a2eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ec:	ja     0x41a31d
  41a2ee:	fbstp  TBYTE PTR [ebp+0xc]
  41a2f1:	(bad)  
  41a2f2:	xor    ebp,DWORD PTR [edi+0x3c]
  41a2f5:	mov    bh,0x2a
  41a2f7:	ins    BYTE PTR es:[edi],dx
  41a2f8:	ds pop ss
  41a2fa:	cmp    al,0x6a
  41a2fc:	cmp    DWORD PTR [edi],ecx
  41a2fe:	cmp    al,0x70
  41a300:	and    DWORD PTR [edi-0xe],ecx
  41a303:	lods   eax,DWORD PTR ds:[esi]
  41a304:	ja     0x41a342
  41a306:	sub    ch,BYTE PTR [ebx-0x5415b39d]
  41a30c:	popa   
  41a30d:	cmp    esp,esp
  41a30f:	sahf   
  41a310:	and    bh,BYTE PTR [ecx]
  41a312:	mov    ebx,0xb4e90caf
  41a317:	stos   DWORD PTR es:[edi],eax
  41a318:	js     0x41a333
  41a31a:	cmc    
  41a31b:	arpl   WORD PTR [ecx],sp
  41a31d:	loopne 0x41a31c
  41a31f:	bound  edi,QWORD PTR [ebx]
  41a321:	sar    eax,1
  41a323:	bound  edi,QWORD PTR [esi]
  41a325:	fucomi st,st(2)
  41a327:	popa   
  41a328:	cmp    bh,BYTE PTR [ebp+0x87cd1f3]
  41a32e:	jle    0x41a398
  41a330:	(bad)  
  41a331:	stc    
	...
  41a33a:	add    BYTE PTR [eax],al
  41a33c:	mov    dl,0x9d
  41a33e:	je     0x41a344
  41a340:	retf   
  41a341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a342:	js     0x41a321
  41a344:	cld    
  41a345:	jne    0x41a368
  41a347:	push   cs
  41a348:	(bad)  
  41a349:	mov    ds:0xa2f9da77,al
  41a34e:	gs aam 0xaa
  41a351:	lahf   
  41a352:	popa   
  41a353:	aam    0xb3
  41a355:	popf   
  41a356:	fstp   QWORD PTR fs:[esi+0x6279fc45]
  41a35e:	addr16 mov cl,0xe1
  41a361:	jg     0x41a3c7
  41a363:	popf   
  41a364:	test   al,0xaf
  41a366:	ss into 
  41a368:	imul   ebp,DWORD PTR [ebx-0x558d6187],0x63
  41a36f:	xchg   edi,eax
  41a370:	lods   eax,DWORD PTR ds:[esi]
  41a371:	cwde   
  41a372:	push   0x5f6c3f00
  41a377:	jb     0x41a353
  41a379:	pop    ebp
  41a37a:	bound  ebp,QWORD PTR [edi-0x38]
  41a37d:	pop    ebp
  41a37e:	and    ch,BYTE PTR [ecx-0x46]
  41a381:	sbb    esp,DWORD PTR [ecx+0x55]
  41a384:	fistp  DWORD PTR ds:0x7b8b786e
  41a38a:	or     al,0x59
  41a38c:	jmp    0x41a400
  41a38e:	pop    esp
  41a38f:	push   edi
  41a390:	jmp    0x5a2b:0xeb4c49c5
  41a397:	push   ebp
  41a398:	(bad)  
  41a39a:	inc    ebx
  41a39b:	inc    esp
  41a39c:	mov    eax,0x454072
	...
  41a3a9:	add    BYTE PTR [esi],al
  41a3ab:	ret    
  41a3ac:	pop    ebp
  41a3ad:	dec    ecx
  41a3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3af:	leave  
  41a3b0:	pop    ecx
  41a3b1:	push   eax
  41a3b2:	mov    edx,0x9f3048c6
  41a3b7:	(bad)  
  41a3b8:	dec    ecx
  41a3b9:	xor    DWORD PTR [eax],esp
  41a3bb:	sub    al,0xf1
  41a3bd:	jmp    esi
  41a3bf:	jnp    0x41a3cd
  41a3c1:	add    ah,dh
  41a3c3:	mov    esi,0x84eb443f
  41a3c8:	icebp  
  41a3c9:	push   DWORD PTR [esi-0x59fff37d]
  41a3cf:	or     DWORD PTR [ebx+edx*2],0x61
  41a3d3:	mov    ecx,0xd5775758
  41a3d8:	dec    ebp
  41a3d9:	pop    esp
  41a3da:	inc    ebx
  41a3db:	mov    WORD PTR [ebx+0x72],gs
  41a3de:	xor    DWORD PTR [esi+0x5f],0x57bf5a66
  41a3e5:	imul   edx,DWORD PTR [eax+0x45775f67],0x54754bbf
  41a3ef:	jne    0x41a45e
  41a3f1:	outs   dx,BYTE PTR ds:[esi]
  41a3f2:	pop    edx
  41a3f3:	leave  
  41a3f4:	ins    DWORD PTR es:[edi],dx
  41a3f5:	jb     0x41a3c6
  41a3f7:	or     DWORD PTR [eax],edx
  41a3f9:	ins    DWORD PTR es:[edi],dx
  41a3fa:	icebp  
  41a3fb:	fcom   QWORD PTR [ebx+0x6e]
  41a3fe:	out    0x16,al
  41a400:	cmp    dh,BYTE PTR [esi+ebp*8-0x4]
  41a404:	adc    BYTE PTR [eax],al
  41a406:	mov    ds:0xbc6e1006,al
  41a40b:	mov    ah,0x28
  41a40d:	ins    BYTE PTR es:[edi],dx
	...
  41a416:	add    BYTE PTR [eax],al
  41a418:	stos   DWORD PTR es:[edi],eax
  41a419:	imul   esi,DWORD PTR [edx+esi*2],0x25bea6
  41a420:	xchg   ebx,eax
  41a421:	mov    edi,0xb7b37039
  41a426:	pop    ds
  41a427:	dec    esi
  41a428:	scas   al,BYTE PTR es:[edi]
  41a429:	shl    DWORD PTR [ebx],cl
  41a42b:	add    BYTE PTR [ebx+0x18],dh
  41a42e:	or     eax,0xd18cf00
  41a433:	add    bh,cl
  41a435:	sbb    bl,ch
  41a437:	bound  esi,QWORD PTR [edi+0x7b]
  41a43a:	or     BYTE PTR [ecx+0x60],dl
  41a43d:	xchg   BYTE PTR [esi*2+0x5c238a6e],dh
  41a444:	js     0x41a4c5
  41a446:	cs push edx
  41a448:	mov    cs,WORD PTR [edx-0x7ca092f8]
  41a44e:	cs add dh,cl
  41a451:	sbb    BYTE PTR ds:0x3a843480,cl
  41a457:	outs   dx,BYTE PTR ds:[esi]
  41a458:	xor    dl,BYTE PTR [ebp-0x6]
  41a45b:	xor    ecx,esp
  41a45d:	inc    esp
  41a45e:	adc    DWORD PTR [edi+ecx*8-0x13],ebp
  41a462:	pop    eax
  41a463:	push   ecx
  41a464:	or     BYTE PTR [ecx+edi*1+0x3f],al
  41a468:	sub    al,0xed
  41a46a:	pcmpeqd mm5,QWORD PTR [edx]
  41a46d:	fisubr DWORD PTR ds:0x1145fc6e
  41a473:	arpl   WORD PTR [esp+eax*2],bx
  41a476:	cmp    dh,BYTE PTR [ecx-0x1a]
  41a479:	jg     0x41a415
  41a47b:	and    DWORD PTR [eax],eax
	...
  41a485:	add    BYTE PTR [eax],cl
  41a487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a488:	jecxz  0x41a4dd
  41a48a:	fstp   QWORD PTR [esi-0x4d21d77a]
  41a490:	lods   al,BYTE PTR ds:[esi]
  41a491:	daa    
  41a492:	add    ebx,DWORD PTR [edi-0x4d21d76a]
  41a498:	pushf  
  41a499:	and    bh,BYTE PTR [ecx-0x30fc8048]
  41a49f:	popf   
  41a4a0:	mov    BYTE PTR [edi],dh
  41a4a2:	cwde   
  41a4a3:	scas   eax,DWORD PTR es:[edi]
  41a4a4:	pop    esp
  41a4a5:	cmc    
  41a4a6:	(bad)  
  41a4a7:	pop    ebp
  41a4a8:	inc    edi
  41a4a9:	and    BYTE PTR [ebx-0x64d8d681],bh
  41a4af:	rcl    BYTE PTR [ebx+0x1b],0x8d
  41a4b3:	mov    ah,0x41
  41a4b5:	sub    ch,BYTE PTR [ecx+esi*4-0x5b93c9d7]
  41a4bc:	jecxz  0x41a4ff
  41a4be:	ins    BYTE PTR es:[edi],dx
  41a4bf:	mov    bl,0x18
  41a4c1:	xor    eax,0x2220b16c
  41a4c6:	jl     0x41a464
  41a4c8:	jecxz  0x41a4cd
  41a4ca:	jp     0x41a467
  41a4cc:	add    ch,dh
  41a4ce:	sahf   
  41a4cf:	pop    ebp
  41a4d0:	pop    es
  41a4d1:	and    BYTE PTR [ebx+0x7f],ch
  41a4d4:	push   ss
  41a4d5:	cmp    BYTE PTR [edx-0x42],ch
  41a4d8:	repz es cmp ecx,edx
  41a4dc:	out    dx,eax
  41a4dd:	and    BYTE PTR ds:0xcf270a9f,bh
  41a4e3:	jg     0x41a4a9
  41a4e5:	daa    
  41a4e6:	cmp    DWORD PTR [edi+0x1ad3],ebx
	...
  41a4f4:	fidiv  WORD PTR [ecx+0x9]
  41a4f7:	sub    BYTE PTR [ebx],dh
  41a4f9:	pushf  
  41a4fa:	jecxz  0x41a53e
  41a4fc:	sub    ebx,DWORD PTR [edx+ebx*8-0x374c0fdc]
  41a503:	inc    edx
  41a504:	stc    
  41a505:	mov    ds:0xa4aea00c,eax
  41a50a:	js     0x41a4cc
  41a50c:	lods   eax,DWORD PTR ds:[esi]
  41a50d:	fwait
  41a50e:	arpl   WORD PTR [ebx-0x7a9c3157],sp
  41a514:	int3   
  41a515:	mov    esi,0x96ab8c64
  41a51a:	pop    eax
  41a51b:	jle    0x41a4d8
  41a51d:	mov    al,ds:0x98a9b462
  41a522:	outs   dx,BYTE PTR ds:[esi]
  41a523:	test   BYTE PTR [edx],al
  41a525:	scas   eax,DWORD PTR es:[edi]
  41a526:	fs cmp ah,0x7f
  41a52a:	dec    edx
  41a52b:	jnp    0x41a51e
  41a52d:	mov    al,ds:0x7fe7505d
  41a532:	dec    ebp
  41a533:	pop    ebx
  41a534:	lock mov ds:0x98d84747,eax
  41a53a:	addr16 pop ebx
  41a53c:	in     al,dx
  41a53d:	mov    bl,0x67
  41a53f:	sub    bl,cl
  41a541:	mov    esi,0xc5b7447e
  41a546:	jle    0x41a594
  41a548:	test   al,0x7f
  41a54a:	dec    ebp
  41a54b:	cmp    esp,DWORD PTR [edi+ebp*4-0x4c57d188]
  41a552:	push   edi
  41a553:	sbb    dh,BYTE PTR [eax+0xc45b1]
	...
  41a561:	add    BYTE PTR [edi+edi*2-0x505be4b3],dh
  41a568:	js     0x41a596
  41a56a:	mov    ds:0xfb61af,eax
  41a56f:	mov    bh,0x67
  41a571:	lock int3 
  41a573:	mov    esi,0xb3fcf07e
  41a578:	dec    eax
  41a579:	int3   
  41a57a:	sti    
  41a57b:	mov    bl,0x7e
  41a57d:	into   
  41a57e:	cmc    
  41a57f:	mov    dh,0x67
  41a581:	ror    ah,1
  41a583:	mov    esi,0xb3dcd07e
  41a588:	pop    esi
  41a589:	add    BYTE PTR [ebx+0x45616d8c],al
  41a58f:	gs dec ebx
  41a591:	outs   dx,DWORD PTR ds:[esi]
  41a592:	mov    BYTE PTR [ebp+ebp*2+0x78],dh
  41a596:	inc    edx
  41a597:	sbb    BYTE PTR [esi+0x65],0x50
  41a59b:	gs jle 0x41a612
  41a59e:	and    bl,BYTE PTR [edi+0x5b]
  41a5a1:	gs dec edx
  41a5a3:	push   esi
  41a5a4:	or     al,0x4f
  41a5a6:	ss bound edx,QWORD PTR gs:[eax-0x2c]
  41a5ab:	pop    edi
  41a5ac:	imul   esp,DWORD PTR [ebp-0x3b],0x73
  41a5b0:	pop    eax
  41a5b1:	outs   dx,DWORD PTR ds:[esi]
  41a5b2:	dec    ebp
  41a5b3:	bound  eax,QWORD PTR gs:[eax]
  41a5b6:	outs   dx,DWORD PTR ds:[esi]
  41a5b7:	lea    edi,[ebp+eiz*2-0x6c]
  41a5bb:	jo     0x41a61c
  41a5bd:	outs   dx,BYTE PTR ds:[esi]
  41a5be:	xchg   edi,eax
  41a5bf:	ins    DWORD PTR es:[di],dx
  41a5c1:	dec    esp
  41a5c2:	mov    DWORD PTR [edi+eiz*2+0x65],esp
	...
  41a5ce:	add    BYTE PTR [eax],al
  41a5d0:	xchg   edx,eax
  41a5d1:	ins    BYTE PTR es:[edi],dx
  41a5d2:	bound  edx,QWORD PTR [ebp-0x2b]
  41a5d5:	push   esi
  41a5d6:	jle    0x41a5d8
  41a5d8:	mov    cl,0x56
  41a5da:	js     0x41a630
  41a5dc:	mov    DWORD PTR [eax-0x72509193],ecx
  41a5e2:	push   0x6f
  41a5e4:	aam    0x5e
  41a5e6:	push   ecx
  41a5e7:	je     0x41a5a8
  41a5e9:	mov    WORD PTR [edx+0x0],fs
  41a5ec:	mov    ch,0x8c
  41a5ee:	bound  esi,QWORD PTR [esi-0x2d]
  41a5f1:	jno    0x41a66b
  41a5f3:	push   ebx
  41a5f4:	mov    edi,0xe56f5857
  41a5f9:	addr16 jle 0x41a665
  41a5fc:	enter  0x5b62,0x69
  41a600:	rol    ah,cl
  41a602:	or     al,0x4c
  41a604:	cdq    
  41a605:	bound  ebx,QWORD PTR [edi+0x6e]
  41a608:	arpl   WORD PTR [esi+0x6d],bp
  41a60b:	jb     0x41a5dc
  41a60d:	xlat   BYTE PTR ds:[ebx]
  41a60e:	or     al,0x4c
  41a610:	sub    dl,ch
  41a612:	adc    eax,0x3b091f73
  41a617:	add    DWORD PTR [bx+si+0x11],edx
  41a61b:	arpl   ax,bp
  41a61d:	cmp    edx,DWORD PTR [edi+0x5f]
  41a620:	jmp    0x41a615
  41a622:	and    edi,DWORD PTR [edi]
  41a624:	iret   
  41a625:	xlat   BYTE PTR ds:[ebx]
  41a626:	sub    BYTE PTR [edx-0x1e],ch
  41a629:	add    eax,0xfdf05439
  41a62e:	and    ebp,DWORD PTR [esi-0x1]
  41a631:	push   es
  41a632:	adc    BYTE PTR [esi+0x0],dh
	...
  41a63d:	add    dh,ah
  41a63f:	adc    al,0x24
  41a641:	gs mov dl,0xa5
  41a644:	or     eax,0x20a6ac00
  41a649:	jo     0x41a60e
  41a64b:	in     eax,0xfa
  41a64d:	sub    eax,0x2cd4ab
  41a652:	mov    esi,es
  41a654:	pop    ds
  41a655:	jo     0x41a5f2
  41a657:	imul   edx,DWORD PTR [edx],0x70
  41a65a:	popf   
  41a65b:	imul   esi,DWORD PTR [ebx+eiz*2],0x5f446cac
  41a662:	xor    DWORD PTR [edi+0x666a4108],0x34
  41a669:	dec    ebp
  41a66a:	jg     0x41a62f
  41a66c:	adc    dl,BYTE PTR [ecx+0x76]
  41a66f:	test   DWORD PTR [ebx+eiz*2],esi
  41a672:	jp     0x41a6d9
  41a674:	xor    al,0x6d
  41a676:	pop    ebp
  41a677:	jnp    0x41a6c0
  41a679:	add    BYTE PTR [ebx+eax*4-0x6d758bc2],cl
  41a680:	xor    ebp,DWORD PTR [ebx+0xc]
  41a683:	test   BYTE PTR [esi],bh
  41a685:	je     0x41a6bd
  41a687:	jnp    0x41a698
  41a689:	popa   
  41a68a:	cs xor eax,0x80067124
  41a690:	fst    DWORD PTR [edx+0x23]
  41a693:	fwait
  41a694:	aad    0x28
  41a696:	iret   
  41a697:	mov    esi,0xbf2331c0
  41a69c:	scas   eax,DWORD PTR es:[edi]
  41a69d:	push   ds
  41a69e:	push   ds
  41a69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6a0:	xchg   esi,eax
  41a6a1:	aaa    
	...
  41a6aa:	add    BYTE PTR [eax],al
  41a6ac:	cli    
  41a6ad:	lods   eax,DWORD PTR ds:[esi]
  41a6ae:	enter  0xe03,0xae
  41a6b2:	mov    esp,0xc6c10333
  41a6b7:	xor    al,0xfc
  41a6b9:	cwde   
  41a6ba:	xchg   ebp,eax
  41a6bb:	sub    BYTE PTR [esi],cl
  41a6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6be:	xchg   ebp,eax
  41a6bf:	aaa    
  41a6c0:	call   0xf8643366
  41a6c5:	mov    bl,0x88
  41a6c7:	push   ebx
  41a6c8:	fstp   QWORD PTR [eax-0x5b3cdb8f]
  41a6ce:	mov    esi,0xe37fb828
  41a6d3:	and    BYTE PTR [esi-0x5cd84e68],bh
  41a6d9:	fwait
  41a6da:	jecxz  0x41a71a
  41a6dc:	sahf   
  41a6dd:	cwde   
  41a6de:	sub    ah,BYTE PTR [edi]
  41a6e0:	fwait
  41a6e1:	mov    esi,0x9a9f1f4a
  41a6e6:	xor    DWORD PTR [edi],esp
  41a6e8:	mov    eax,ds:0x832313b3
  41a6ed:	xchg   edi,eax
  41a6ee:	and    al,0x4
  41a6f0:	iret   
  41a6f1:	scas   eax,DWORD PTR es:[edi]
  41a6f2:	cmp    BYTE PTR ss:[edx-0x53],ch
  41a6f6:	dec    eax
  41a6f7:	and    DWORD PTR [ecx-0x30dfe85d],esp
  41a6fd:	iret   
  41a6fe:	cmp    BYTE PTR ss:[edx-0x53],dh
  41a702:	add    BYTE PTR [ecx+0x5d],al
  41a705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a706:	add    al,0x38
  41a708:	ins    BYTE PTR es:[edi],dx
  41a709:	mov    eax,0x9f433119
  41a70e:	add    DWORD PTR [ecx],esp
	...
  41a718:	add    BYTE PTR [eax],al
  41a71a:	sub    al,0x80
  41a71c:	or     al,0xe9
  41a71e:	int3   
  41a71f:	jg     0x41a72d
  41a721:	jmp    0xe94e26f2
  41a726:	int3   
  41a727:	jg     0x41a735
  41a729:	jmp    0xe94e26fa
  41a72e:	int3   
  41a72f:	jg     0x41a73d
  41a731:	jmp    0xe94e2702
  41a736:	int3   
  41a737:	jg     0x41a745
  41a739:	jmp    0xe94e270a
  41a73e:	int3   
  41a73f:	jg     0x41a74d
  41a741:	jmp    0xe94e2712
  41a746:	int3   
  41a747:	jg     0x41a755
  41a749:	jmp    0xe94e271a
  41a74e:	int3   
  41a74f:	jg     0x41a75d
  41a751:	jmp    0xe94e2722
  41a756:	int3   
  41a757:	jg     0x41a765
  41a759:	jmp    0xe94e272a
  41a75e:	int3   
  41a75f:	jg     0x41a76d
  41a761:	jmp    0xe94e2732
  41a766:	int3   
  41a767:	jg     0x41a775
  41a769:	jmp    0xe94e273a
  41a76e:	int3   
  41a76f:	jg     0x41a77d
  41a771:	jmp    0xe94e2742
  41a776:	int3   
  41a777:	jg     0x41a785
  41a779:	jmp    0xe94e274a
	...
  41a786:	add    BYTE PTR [eax],al
  41a788:	int3   
  41a789:	jg     0x41a797
  41a78b:	jmp    0xe94e275c
  41a790:	int3   
  41a791:	jg     0x41a79f
  41a793:	jmp    0xe94e2764
  41a798:	int3   
  41a799:	jg     0x41a7a7
  41a79b:	jmp    0xa93f3f
  41a7a0:	loop   0x41a801
  41a7a2:	cmp    esi,DWORD PTR [edx]
  41a7a4:	nop
  41a7a5:	pusha  
  41a7a6:	pusha  
  41a7a7:	ins    BYTE PTR es:[edi],dx
  41a7a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7a9:	iret   
  41a7aa:	inc    esp
  41a7ab:	inc    edi
  41a7ac:	retf   
  41a7ad:	addr16 dec edx
  41a7af:	outs   dx,DWORD PTR ds:[esi]
  41a7b0:	and    BYTE PTR [eax+0x6d],0x72
  41a7b4:	pop    bp
  41a7b6:	js     0x41a820
  41a7b8:	addr16 jl 0x41a7c7
  41a7bb:	add    BYTE PTR [esi+0x421f0c7c],ah
  41a7c1:	mov    ebp,0xbd32340c
  41a7c6:	or     al,0x44
  41a7c8:	xor    bh,BYTE PTR [ebp-0x42ada5f4]
  41a7ce:	or     al,0x68
  41a7d0:	and    bh,BYTE PTR [ebp-0x42cd87f4]
  41a7d6:	or     al,0x88
  41a7d8:	xor    bh,BYTE PTR [ebp-0x42cd62f4]
  41a7de:	or     al,0xb4
  41a7e0:	cmp    BYTE PTR [ebp-0x428d37f4],0xc
  41a7e7:	loope  0x41a85b
  41a7e9:	mov    ebp,0x50c
	...
  41a7f6:	push   ebx
  41a7f7:	mov    ebp,0xc2e3220c
  41a7fc:	or     al,0x0
  41a7fe:	ss jl  0x41a80d
  41a801:	add    DWORD PTR [esi],esp
  41a803:	jl     0x41a791
  41a805:	add    eax,0x4d0c7c26
  41a80a:	(bad)  
  41a80b:	and    ecx,DWORD PTR [ebp+0x6f]
  41a80e:	xchg   ebp,eax
  41a80f:	outs   dx,BYTE PTR ds:[esi]
  41a810:	gs gs nop
  41a813:	outs   dx,DWORD PTR ds:[esi]
  41a814:	jnp    0x41a816
  41a816:	out    0x7b,eax
  41a818:	or     al,0x80
  41a81a:	int3   
  41a81b:	or     DWORD PTR [eax+eax*1],0xffffffb7
  41a81f:	jae    0x41a89d
  41a821:	inc    esp
  41a822:	iret   
  41a823:	ja     0x41a861
  41a825:	pop    edi
  41a826:	iret   
  41a827:	pop    ss
  41a828:	or     eax,0xd1d4f00
  41a82d:	add    bh,cl
  41a82f:	push   esp
  41a830:	adc    eax,0xe87d2e61
  41a835:	ds aas 
  41a837:	sub    DWORD PTR [ecx],esi
  41a839:	pop    edi
  41a83a:	and    edi,DWORD PTR [eax]
  41a83c:	or     eax,0x8d19a0ff
  41a841:	and    bh,cl
  41a843:	sbb    BYTE PTR ds:0x153a2e41,cl
  41a849:	arpl   di,cx
  41a84b:	pop    ss
  41a84c:	or     eax,0x8784f00
  41a851:	add    bh,cl
  41a853:	fst    DWORD PTR ds:0x2c3fe46d
  41a859:	jno    0x41a85b
	...
  41a863:	add    bh,cl
  41a865:	pop    ss
  41a866:	or     eax,0xd3b4f00
  41a86b:	add    bh,cl
  41a86d:	loopne 0x41a87e
  41a86f:	jno    0x41a84c
  41a871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a872:	aaa    
  41a873:	ja     0x41a844
  41a875:	sbb    cl,BYTE PTR ds:0xd1c4f00
  41a87b:	add    bh,cl
  41a87d:	fistp  DWORD PTR [edi]
  41a87f:	and    BYTE PTR [ebx-0x458cd55b],cl
  41a885:	mov    bl,0x16
  41a887:	je     0x41a825
  41a889:	sbb    BYTE PTR [edi],al
  41a88b:	add    bh,cl
  41a88d:	cwde   
  41a88e:	jmp    0x7a6d:0x4a1910ff
  41a895:	retf   
  41a896:	adc    eax,0x3857af6e
  41a89b:	jo     0x41a830
  41a89d:	mov    bh,0x3c
  41a89f:	pop    edi
  41a8a0:	iret   
  41a8a1:	pop    ss
  41a8a2:	or     eax,0xc2804f00
  41a8a7:	add    ecx,edi
  41a8a9:	jg     0x41a8cb
  41a8ab:	sub    eax,0x270ccfaf
  41a8b0:	pop    ebx
  41a8b1:	lods   al,BYTE PTR ds:[esi]
  41a8b2:	adc    eax,0xe5803e21
  41a8b7:	add    ecx,edi
  41a8b9:	inc    eax
  41a8bb:	add    ecx,edi
  41a8bd:	jg     0x41a8e5
  41a8bf:	sbb    esp,DWORD PTR [edx*4-0x4410e60e]
  41a8c6:	fisub  DWORD PTR [esi]
	...
  41a8d0:	add    BYTE PTR [eax],al
  41a8d2:	sbb    al,0x95
  41a8d4:	enter  0x2319,0xb3
  41a8d8:	jecxz  0x41a8df
  41a8da:	iret   
  41a8db:	jg     0x41a940
  41a8dd:	fimul  DWORD PTR [eax-0xdb91cda]
  41a8e3:	xchg   esp,eax
  41a8e4:	rcr    BYTE PTR [edx],0xe9
  41a8e7:	pop    edi
  41a8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8e9:	pop    ds
  41a8ea:	in     al,0x98
  41a8ec:	mov    cl,0x1c
  41a8ee:	fisubr WORD PTR [ebx-0x6724db6b]
  41a8f4:	cdq    
  41a8f5:	and    BYTE PTR [edi-0x1ce57535],ch
  41a8fb:	mov    dl,0xe3
  41a8fd:	add    al,0xcf
  41a8ff:	jg     0x41a964
  41a901:	repz inc eax
  41a903:	es jecxz 0x41a94a
  41a906:	mov    bl,0x94
  41a908:	mov    WORD PTR [ecx],ds
  41a90a:	test   al,0xb2
  41a90c:	ja     0x41a943
  41a90e:	mov    BYTE PTR [ebx+0x5fac325c],ch
  41a914:	aaa    
  41a915:	sbb    DWORD PTR [edx+0x10045693],ebp
  41a91b:	es jecxz 0x41a8a1
  41a91e:	int3   
  41a91f:	jg     0x41a904
  41a921:	add    ebx,DWORD PTR [edi+0x6a35359c]
  41a927:	xchg   ebp,eax
  41a928:	or     al,0x48
  41a92a:	xlat   BYTE PTR ds:[ebx]
  41a92b:	jg     0x41a98a
  41a92d:	lods   eax,DWORD PTR ds:[esi]
  41a92f:	stos   DWORD PTR es:[edi],eax
  41a930:	jns    0x41a93a
  41a932:	cdq    
  41a933:	mov    ds:0x2c50,al
	...
  41a940:	mov    ah,0xa0
  41a942:	jle    0x41a94a
  41a944:	call   0x63cb:0x17156a94
  41a94b:	pop    ss
  41a94c:	out    dx,eax
  41a94d:	xchg   edx,eax
  41a94e:	jns    0x41a94a
  41a950:	adc    BYTE PTR [edi-0x5f050489],bh
  41a956:	(bad)  
  41a957:	cmc    
  41a958:	(bad)  
  41a959:	mov    al,ds:0x92c5da7e
  41a95e:	bound  edi,QWORD PTR [ebp-0x3a835827]
  41a964:	mov    bh,0xb1
  41a966:	fist   DWORD PTR [bx+si]
  41a969:	iret   
  41a96a:	fs int3 
  41a96c:	fcom   DWORD PTR [ebx-0x6c2858d4]
  41a972:	push   0xcaebacc
  41a977:	les    esi,FWORD PTR [edi+ebp*4-0x5f6569a0]
  41a97e:	jle    0x41a94f
  41a980:	mov    ecx,0xfbe967a7
  41a985:	pop    eax
  41a986:	cmp    edi,DWORD PTR [ecx+edi*1-0x333ec4a6]
  41a98d:	jg     0x41a99b
  41a98f:	jmp    0xa0a97860
  41a994:	fldcw  WORD PTR [edi-0x6d1c8499]
  41a99a:	bound  ecx,QWORD PTR [eax-0x21]
  41a99d:	mov    al,ds:0xadb45b5c
  41a9a2:	arpl   WORD PTR [ebp+0x0],ax
	...
  41a9ad:	add    BYTE PTR [eax-0x5c169866],dh
  41a9b3:	mov    al,ds:0x5d950058
  41a9b8:	pop    esp
  41a9b9:	jb     0x41a95a
  41a9bb:	jno    0x41aa26
  41a9bd:	ins    BYTE PTR es:[edi],dx
  41a9be:	sbb    DWORD PTR [esi+0x6d],0x0
  41a9c2:	lds    eax,FWORD PTR [ebx+ecx*2+0x6789d768]
  41a9c9:	gs test al,0x86
  41a9cc:	js     0x41aa37
  41a9ce:	rcr    BYTE PTR [eax+0x5c],0x72
  41a9d2:	iret   
  41a9d3:	jno    0x41aa3e
  41a9d5:	ins    BYTE PTR es:[edi],dx
  41a9d6:	rcr    DWORD PTR [esi+0x6d],cl
  41a9d9:	add    ch,dl
  41a9db:	test   BYTE PTR [ebx+0x72],cl
  41a9de:	ret    
  41a9df:	pusha  
  41a9e0:	js     0x41aa47
  41a9e2:	ret    0x6386
  41a9e5:	gs js  0x41a9b8
  41a9e8:	jle    0x41aa53
  41a9ea:	or     BYTE PTR [ecx-0x7a7e9aa0],0xc
  41a9f1:	push   ebx
  41a9f2:	xchg   ebx,eax
  41a9f3:	mov    edx,0x559d6351
  41a9f8:	jl     0x41aa4a
  41a9fa:	xor    al,0x89
  41a9fc:	jp     0x41aa67
  41a9fe:	mov    al,BYTE PTR [ebp-0x34899a99]
  41aa04:	ins    DWORD PTR es:[edi],dx
  41aa05:	push   edx
  41aa06:	push   ebx
  41aa07:	imul   edi,DWORD PTR [eax+0x6f],0x34
  41aa0b:	test   DWORD PTR [edx+esi*2+0x4f],ebx
  41aa0f:	outs   dx,BYTE PTR ds:[esi]
  41aa10:	imul   ebp,DWORD PTR [eax+eax*1+0x0],0x0
  41aa18:	add    BYTE PTR [eax],al
  41aa1a:	add    BYTE PTR [eax],al
  41aa1c:	push   ebx
  41aa1d:	pop    edi
  41aa1e:	ins    DWORD PTR es:[edi],dx
  41aa1f:	add    BYTE PTR [ebp-0x7b],ah
  41aa22:	dec    ecx
  41aa23:	outs   dx,BYTE PTR ds:[esi]
  41aa24:	inc    ebp
  41aa25:	push   0x6d
  41aa27:	popa   
  41aa28:	mov    ch,0x85
  41aa2a:	inc    ecx
  41aa2b:	jne    0x41a9d6
  41aa2d:	push   esp
  41aa2e:	push   ecx
  41aa2f:	push   eax
  41aa30:	test   BYTE PTR [edx+0x5e8a697a],al
  41aa36:	addr16 gs iret 
  41aa39:	push   ss
  41aa3a:	pop    esi
  41aa3b:	arpl   WORD PTR [esi+0x68673dc9],cx
  41aa41:	int3   
  41aa42:	pop    eax
  41aa43:	jb     0x41aaab
  41aa45:	mov    bl,0x27
  41aa47:	jb     0x41aabf
  41aa49:	sbb    BYTE PTR [ecx],0x69
  41aa4c:	jb     0x41aab2
  41aa4e:	pop    eax
  41aa4f:	jb     0x41aac7
  41aa51:	test   BYTE PTR [edi],cl
  41aa53:	ins    BYTE PTR es:[edi],dx
  41aa54:	jb     0x41aad3
  41aa56:	sub    eax,DWORD PTR [eax]
  41aa58:	iret   
  41aa59:	cmp    WORD PTR [ecx+0x23],dx
  41aa5d:	cmp    esp,ebp
  41aa5f:	jo     0x41aa50
  41aa61:	jo     0x41aabf
  41aa63:	push   esp
  41aa64:	pop    ds
  41aa65:	xor    bh,al
  41aa67:	sub    eax,0x47f31bff
  41aa6c:	cmp    BYTE PTR [esi],ah
  41aa6e:	and    DWORD PTR [edx],edi
  41aa70:	out    dx,eax
  41aa71:	jae    0x41aab0
  41aa73:	or     eax,ebp
  41aa75:	xlat   BYTE PTR ds:[ebx]
  41aa76:	sub    eax,0x21492a61
  41aa7b:	cmp    ch,BYTE PTR [edi+0x29d97e]
	...
  41aa89:	add    dl,dl
  41aa8b:	cs dec eax
  41aa8d:	popa   
  41aa8e:	in     al,dx
  41aa8f:	cmp    edi,DWORD PTR ds:0x16d3a274
  41aa95:	popa   
  41aa96:	clc    
  41aa97:	cmp    al,0x10
  41aa99:	outs   dx,BYTE PTR ds:[esi]
  41aa9a:	call   0xf3a897bd
  41aa9f:	sti    
  41aaa0:	push   ss
  41aaa1:	je     0x41aa89
  41aaa3:	add    al,0x20
  41aaa5:	sub    al,0xef
  41aaa7:	ds out 0x6e,al
  41aaaa:	add    ch,cl
  41aaac:	repz or DWORD PTR [ecx+esi*8-0x5558bea],ecx
  41aab4:	and    BYTE PTR [ebx],ch
  41aab6:	fwait
  41aab7:	sti    
  41aab8:	push   ss
  41aab9:	gs fwait
  41aabb:	jg     0x41ab18
  41aabd:	jmp    0x75c4:0x313f5cb8
  41aac4:	es pop ss
  41aac6:	jns    0x41aa59
  41aac8:	dec    eax
  41aac9:	and    edi,DWORD PTR [ebx-0x68]
  41aacc:	pop    edx
  41aacd:	push   ss
  41aace:	mov    ch,0x5f
  41aad0:	inc    esi
  41aad1:	sbb    BYTE PTR [edx-0x52],ah
  41aad4:	inc    eax
  41aad5:	stc    
  41aad6:	(bad)  
  41aad7:	mov    esi,0x9c5b1632
  41aadc:	sbb    DWORD PTR [eax],esi
  41aade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aadf:	retf   
  41aae0:	sub    al,0x34
  41aae2:	ins    BYTE PTR es:[edi],dx
  41aae3:	gs ret 
  41aae5:	and    al,0x3f
  41aae7:	mov    al,0xef
  41aae9:	sbb    al,0x2e
  41aaeb:	mov    eax,ds:0x1cef
	...
  41aaf8:	sub    dl,BYTE PTR [edx-0x53d1e93e]
  41aafe:	add    BYTE PTR [eax],dh
  41ab00:	hlt    
  41ab01:	scas   al,BYTE PTR es:[edi]
  41ab02:	div    DWORD PTR [ecx]
  41ab04:	sub    al,0xa1
  41ab06:	fdivr  st,st(0)
  41ab08:	(bad)  
  41ab09:	mov    esi,0x9d1b15c2
  41ab0e:	leave  
  41ab0f:	das    
  41ab10:	mov    ah,0xbc
  41ab12:	mov    cl,0x22
  41ab14:	repnz fcom QWORD PTR ds:0x220365f2
  41ab1c:	call   0xe0736fb2
  41ab21:	je     0x41ab10
  41ab23:	push   eax
  41ab24:	ficomp WORD PTR [ebp+edx*4-0x77656628]
  41ab2b:	adc    eax,0x38c365db
  41ab30:	mov    edx,0xb3178ca5
  41ab35:	mov    al,ds:0x6feaefda
  41ab3a:	ret    
  41ab3b:	fld    TBYTE PTR [edi-0x237bf36e]
  41ab41:	ret    0x8078
  41ab44:	out    dx,al
  41ab45:	xchg   ebx,eax
  41ab46:	and    dh,BYTE PTR [bp+di]
  41ab49:	mov    ch,0x5d
  41ab4b:	xor    al,dl
  41ab4d:	pop    edi
  41ab4e:	aaa    
  41ab4f:	pop    es
  41ab50:	add    esp,DWORD PTR [edi+0x2c]
  41ab53:	ss in  al,0x91
  41ab56:	push   0x2cb0aa56
	...
  41ab63:	add    BYTE PTR [eax],al
  41ab65:	add    bl,ah
  41ab67:	pop    eax
  41ab68:	jmp    edx
  41ab6a:	loope  0x41abe3
  41ab6c:	or     al,0x2a
  41ab6e:	mov    edx,0xc10c7891
  41ab73:	stos   DWORD PTR es:[edi],eax
  41ab74:	pop    ds
  41ab75:	sub    eax,0x1d6991b0
  41ab7a:	jmp    0x41abe1
  41ab7c:	or     al,0x1d
  41ab7e:	ficomp DWORD PTR [esi-0x6d2a0295]
  41ab84:	(bad)
  41ab89:	sbb    eax,0xc97d5eb3
  41ab8e:	in     al,0xcb
  41ab90:	pop    eax
  41ab91:	mov    ecx,0x19225283
  41ab96:	cwde   
  41ab97:	ja     0x41abdd
  41ab99:	(bad)  
  41ab9a:	mov    edi,0xa00936ab
  41ab9f:	mov    al,0xff
  41aba1:	repnz or eax,0xbcc46d9f
  41aba7:	stos   DWORD PTR es:[edi],eax
  41aba8:	or     DWORD PTR ss:[ebp+0x66dc2654],eax
  41abaf:	bound  ebp,QWORD PTR [ebp-0x76]
  41abb2:	mov    ecx,0x91cc78af
  41abb7:	xchg   ecx,eax
  41abb8:	ins    DWORD PTR es:[edi],dx
  41abb9:	xchg   al,ch
  41abbb:	cwde   
  41abbc:	bound  eax,QWORD PTR [esi+0x638136]
  41abc2:	dec    edx
  41abc3:	and    BYTE PTR [edx+0x74],0x5f
  41abc7:	push   ecx
  41abc8:	jns    0x41abf6
	...
  41abd2:	add    BYTE PTR [eax],al
  41abd4:	push   ss
  41abd5:	inc    edi
  41abd6:	xor    al,0x71
  41abd8:	jae    0x41ac07
  41abda:	push   es
  41abdb:	or     ah,ch
  41abdd:	mov    ah,BYTE PTR [edx+0x6e]
  41abe0:	mov    ebx,DWORD PTR [esi+0x78]
  41abe3:	imul   edx,DWORD PTR [ecx-0x6adfc977],0x8b735f87
  41abed:	sub    BYTE PTR [ebx],al
  41abef:	push   ebp
  41abf0:	mov    ch,0x80
  41abf2:	jle    0x41ac21
  41abf4:	mov    bh,0x82
  41abf6:	ins    DWORD PTR es:[edi],dx
  41abf7:	outs   dx,BYTE PTR ds:[esi]
  41abf8:	call   0x6955:0xc14d1115
  41abff:	ins    BYTE PTR es:[edi],dx
  41ac00:	ret    0x1f5c
  41ac03:	xor    al,0x90
  41ac05:	sub    al,0x11
  41ac07:	sub    ch,dl
  41ac09:	mov    ah,BYTE PTR [ebp+0x70]
  41ac0c:	(bad)  
  41ac0d:	outs   dx,DWORD PTR ds:[esi]
  41ac0e:	imul   esp,DWORD PTR [edx-0x3e],0xf3203380
  41ac15:	into   
  41ac16:	dec    ecx
  41ac17:	inc    ebp
  41ac18:	xchg   esi,eax
  41ac19:	adc    DWORD PTR [edi],ebx
  41ac1b:	xor    ch,ch
  41ac1d:	sbb    ebx,DWORD PTR [eax+0x69]
  41ac20:	add    BYTE PTR [eax+0x1ca5775f],0x3a
  41ac27:	cmp    bh,cl
  41ac29:	sub    BYTE PTR [ebx],al
  41ac2b:	or     eax,0x227c7c
  41ac30:	ror    BYTE PTR [ecx-0xf],0x5b
  41ac34:	int3   
  41ac35:	dec    ecx
  41ac36:	and    eax,DWORD PTR [eax]
	...
  41ac40:	add    BYTE PTR [eax],al
  41ac42:	int3   
  41ac43:	dec    ecx
  41ac44:	and    eax,DWORD PTR [eax]
  41ac46:	push   ds
  41ac47:	mov    bl,0x49
  41ac49:	inc    esp
  41ac4a:	push   di
  41ac4c:	sub    eax,0x454ecf30
  41ac51:	sub    ebp,edx
  41ac53:	inc    esi
  41ac54:	loope  0x41acad
  41ac56:	jmp    0xd233:0x9733fd33
  41ac5d:	das    
  41ac5e:	fisttp QWORD PTR [esi]
  41ac60:	shr    BYTE PTR [edi],cl
  41ac62:	fisttp QWORD PTR [esi]
  41ac64:	fisub  DWORD PTR [edx]
  41ac66:	fild   WORD PTR [eax+esi*1+0x3084df23]
  41ac6d:	and    edi,DWORD PTR [edi-0x40dccf7c]
  41ac73:	test   BYTE PTR [eax],dh
  41ac75:	and    edi,DWORD PTR [edi-0x40dccadc]
  41ac7b:	and    al,0x35
  41ac7d:	jnp    0x41ac4e
  41ac7f:	push   ecx
  41ac80:	and    esi,DWORD PTR [ecx+edx*4-0x49]
  41ac84:	adc    al,0x67
  41ac86:	popa   
  41ac87:	jae    0x41acc2
  41ac89:	ja     0x41ace7
  41ac8b:	mov    ah,BYTE PTR [ebx]
  41ac8d:	imul   edx,DWORD PTR [esi],0xffffff87
  41ac90:	es ins DWORD PTR es:[edi],dx
  41ac92:	iret   
  41ac93:	and    DWORD PTR [ebx],0x3c8c2972
  41ac99:	xor    ebp,edi
  41ac9b:	dec    esi
  41ac9c:	sub    DWORD PTR [ebx+edi*1+0x29],ebp
  41aca0:	inc    eax
  41aca1:	jno    0x41ac9b
  41aca3:	sbb    eax,0x3616
	...
  41acb0:	jecxz  0x41ac8a
  41acb2:	push   ss
  41acb3:	ins    DWORD PTR es:[edi],dx
  41acb4:	sub    al,0x44
  41acb6:	sbb    dh,BYTE PTR [ecx-0x31]
  41acb9:	fnstcw WORD PTR ds:0x2835fb66
  41acbf:	jb     0x41acb3
  41acc1:	in     al,0x42
  41acc3:	pop    edi
  41acc4:	std    
  41acc5:	cld    
  41acc6:	cmp    al,0x6c
  41acc8:	loop   0x41ad17
  41acca:	and    BYTE PTR [esi-0x24],ch
  41accd:	or     al,0x43
  41accf:	push   esp
  41acd0:	(bad)  
  41acd1:	jg     0x41ac9a
  41acd3:	dec    ebx
  41acd4:	loop   0x41ac68
  41acd6:	xchg   edi,eax
  41acd7:	push   ss
  41acd8:	iret   
  41acd9:	mov    dl,0x8a
  41acdb:	sub    DWORD PTR [ebx-0x53ea7b6a],edi
  41ace1:	mov    ebx,0x51bd24a1
  41ace6:	(bad)  
  41ace7:	xor    edi,DWORD PTR [ebx-0x4ed37d6c]
  41aced:	xchg   edx,eax
  41acee:	jg     0x41ad39
  41acf0:	sub    DWORD PTR [edi-0x6d5db3b9],0x57
  41acf7:	pop    ss
  41acf8:	iret   
  41acf9:	mov    dl,0x4a
  41acfb:	sub    bh,BYTE PTR [ebx-0x6a]
  41acfe:	inc    esp
  41acff:	push   ss
  41ad00:	ins    BYTE PTR es:[edi],dx
  41ad01:	mov    ebx,0x5f7d2521
  41ad06:	and    BYTE PTR ds:0x2942a079,ah
  41ad0c:	pop    ebp
  41ad0d:	mov    ebx,0xa65c3013
  41ad12:	sbb    al,0x32
	...
  41ad1c:	add    BYTE PTR [eax],al
  41ad1e:	pop    esi
  41ad1f:	mov    ebx,0xbc1f3829
  41ad24:	sub    esi,DWORD PTR [ebx]
  41ad26:	ds xchg esp,eax
  41ad28:	push   ss
  41ad29:	add    al,0x1e
  41ad2b:	scas   eax,DWORD PTR es:[edi]
  41ad2c:	add    DWORD PTR [eax],ebx
  41ad2e:	cmp    ah,BYTE PTR [ecx-0x39f4d70b]
  41ad34:	add    al,0x16
  41ad36:	add    esi,DWORD PTR [ebx-0x5bd3e5fc]
  41ad3c:	lahf   
  41ad3d:	sub    al,0xf0
  41ad3f:	stos   DWORD PTR es:[edi],eax
  41ad40:	ret    0x172a
  41ad43:	test   eax,0x91f217d6
  41ad48:	fdivr  QWORD PTR [edi]
  41ad4a:	adc    DWORD PTR [ebx+edx*4-0x486d1db5],esi
  41ad51:	add    edi,esi
  41ad53:	scas   al,BYTE PTR es:[edi]
  41ad54:	or     al,0xcf
  41ad56:	mov    eax,0xa7bb6b94
  41ad5b:	mov    ebx,0x51ba884a
  41ad60:	push   eax
  41ad61:	mov    edx,0x8d6795f3
  41ad66:	mov    BYTE PTR [esi-0x5b028295],ah
  41ad6c:	inc    esp
  41ad6d:	nop
  41ad6e:	fst    DWORD PTR [ebx-0x4434849f]
  41ad74:	dec    edx
  41ad75:	popf   
  41ad76:	fadd   st(7),st
  41ad78:	popa   
  41ad79:	jp     0x41ad3b
  41ad7b:	jg     0x41adda
  41ad7d:	push   esi
  41ad7e:	in     eax,0x93
  41ad80:	jns    0x41adca
	...
  41ad8a:	add    BYTE PTR [eax],al
  41ad8c:	loope  0x41ad30
  41ad8e:	push   eax
  41ad8f:	das    
  41ad90:	lods   al,BYTE PTR ds:[esi]
  41ad91:	xchg   ecx,eax
  41ad92:	sub    al,0x1c
  41ad94:	lods   al,BYTE PTR ds:[esi]
  41ad95:	lods   eax,DWORD PTR ds:[esi]
  41ad96:	imul   ecx,DWORD PTR [esi-0x58],0xffffff91
  41ad9a:	push   eax
  41ad9b:	sbb    ch,BYTE PTR [ebp+edx*4-0x5968b299]
  41ada2:	imul   edi,DWORD PTR ds:0x1044a49e,0xffffffba
  41ada9:	xchg   ebx,eax
  41adaa:	popa   
  41adab:	sbb    esp,esp
  41adad:	mov    ebx,0xc7fb3d4a
  41adb2:	popa   
  41adb3:	sbb    dl,bh
  41adb5:	jg     0x41ae13
  41adb7:	or     dl,bl
  41adb9:	mov    ?,WORD PTR [ecx+0xe]
  41adbc:	shl    DWORD PTR [ebx-0x7121def4],0x78
  41adc3:	pop    ds
  41adc4:	in     al,dx
  41adc5:	test   al,0x67
  41adc7:	jmp    0xdba93ca5
  41adcc:	int3   
  41adcd:	retf   
  41adce:	arpl   di,ax
  41add0:	test   eax,0xd4ca797f
  41add5:	mov    edx,0x7132006a
  41adda:	and    ch,BYTE PTR [ecx-0x68]
  41addd:	push   0xc
  41addf:	pop    esp
  41ade0:	xor    ecx,ecx
  41ade2:	dec    ecx
  41ade3:	push   ebx
  41ade4:	cmp    al,dh
  41ade6:	pop    esi
  41ade7:	add    BYTE PTR [edi],bl
  41ade9:	dec    edi
  41adea:	jnp    0x41ae60
  41adec:	push   edi
  41aded:	ins    DWORD PTR es:[edi],dx
  41adee:	pusha  
  41adef:	inc    esp
	...
  41adf8:	add    BYTE PTR [eax],al
  41adfa:	dec    edi
  41adfb:	jae    0x41ae09
  41adfd:	inc    esi
  41adfe:	bound  esi,QWORD PTR [ecx+0x49]
  41ae01:	outs   dx,BYTE PTR ds:[esi]
  41ae02:	pop    edi
  41ae03:	scas   eax,DWORD PTR es:[edi]
  41ae04:	push   ecx
  41ae05:	ins    DWORD PTR es:[edi],dx
  41ae06:	push   ebx
  41ae07:	sbb    DWORD PTR [ebx+0x6f],0x61777550
  41ae0e:	xchg   esp,eax
  41ae0f:	gs push eax
  41ae11:	inc    edi
  41ae12:	jle    0x41ae7c
  41ae14:	jnp    0x41ae82
  41ae16:	xchg   ebx,eax
  41ae17:	jne    0x41ae69
  41ae19:	push   edi
  41ae1a:	(bad)  
  41ae1b:	push   ecx
  41ae1c:	push   0x2c72a16f
  41ae21:	inc    ebx
  41ae22:	cdq    
  41ae23:	ins    BYTE PTR es:[edi],dx
  41ae24:	gs popa 
  41ae26:	cwde   
  41ae27:	ins    DWORD PTR es:[di],dx
  41ae29:	jb     0x41ae21
  41ae2b:	push   ebx
  41ae2c:	pop    edi
  41ae2d:	data16 mov ds:0xc3725176,al
  41ae33:	mov    edi,0x72df6847
  41ae38:	pusha  
  41ae39:	gs in  al,0xbf
  41ae3c:	pop    eax
  41ae3d:	outs   dx,DWORD PTR ds:[esi]
  41ae3e:	loop   0x41aea0
  41ae40:	pusha  
  41ae41:	and    ch,ah
  41ae43:	dec    esi
  41ae44:	gs ins DWORD PTR es:[edi],dx
  41ae46:	xlat   BYTE PTR ds:[ebx]
  41ae47:	push   ecx
  41ae48:	push   0x5080a465
  41ae4d:	dec    ecx
  41ae4e:	xchg   esi,eax
  41ae4f:	jae    0x41aec8
  41ae51:	imul   esi,DWORD PTR [edx+0x63],0x69450064
  41ae58:	js     0x41aebf
  41ae5a:	iret   
  41ae5b:	cmp    DWORD PTR [ecx],esi
	...
  41ae65:	add    BYTE PTR [eax],al
  41ae67:	add    BYTE PTR [ebx],bl
  41ae69:	loopne 0x41ae87
  41ae6b:	jno    0x41ae65
  41ae6d:	das    
  41ae6e:	sbb    DWORD PTR [ecx-0x9],esp
  41ae71:	cli    
  41ae72:	xor    edx,DWORD PTR [ecx+0x0]
  41ae75:	in     eax,dx
  41ae76:	cmp    BYTE PTR [eax-0x31],dl
  41ae79:	or     dl,BYTE PTR [edi+eiz*2]
  41ae7c:	loope  0x41aeb2
  41ae7e:	outs   dx,BYTE PTR es:[esi]
  41ae80:	mov    dh,0x26
  41ae82:	sti    
  41ae83:	data16 mov cl,0xff
  41ae86:	or     al,0x55
  41ae88:	pushf  
  41ae89:	in     eax,dx
  41ae8a:	inc    edx
  41ae8b:	push   esp
  41ae8c:	lahf   
  41ae8d:	es dec ecx
  41ae8f:	inc    edi
  41ae90:	jge    0x41aeb8
  41ae92:	dec    ecx
  41ae93:	inc    ebx
  41ae94:	mov    edx,ebp
  41ae96:	inc    ebp
  41ae97:	push   edx
  41ae98:	iret   
  41ae99:	jmp    0x6ccc02d7
  41ae9e:	xor    al,0x50
  41aea0:	iret   
  41aea1:	push   edi
  41aea2:	dec    ebp
  41aea3:	dec    eax
  41aea4:	jbe    0x41ae5f
  41aea6:	adc    al,0x6d
  41aea8:	jge    0x41ae59
  41aeaa:	or     BYTE PTR [ecx+0x60],dl
  41aead:	int3   
  41aeae:	adc    al,0x75
  41aeb0:	outs   dx,BYTE PTR ds:[esi]
  41aeb1:	pop    eax
  41aeb2:	and    ebx,DWORD PTR [eax+ecx*4-0x3e]
  41aeb6:	and    DWORD PTR [edx+0x6e],esp
  41aeb9:	pop    edx
  41aeba:	cmp    eax,0x43568e41
  41aebf:	pop    esp
  41aec0:	or     al,0x74
  41aec2:	adc    al,0x63
  41aec4:	or     DWORD PTR [ebp+0x38],ebx
  41aec7:	and    BYTE PTR [ecx],al
  41aec9:	dec    ecx
  41aeca:	inc    ebp
  41aecb:	ins    DWORD PTR es:[edi],dx
	...
  41aed4:	add    BYTE PTR [eax],al
  41aed6:	and    cl,BYTE PTR [esp+ecx*2+0x21750c4f]
  41aedd:	ins    DWORD PTR es:[edi],dx
  41aede:	xor    eax,DWORD PTR [edi+0x75cf7227]
  41aee4:	and    DWORD PTR [esi+0x1b],esp
  41aee7:	adc    dl,0x24
  41aeea:	std    
  41aeeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeec:	scas   eax,DWORD PTR es:[edi]
  41aeed:	inc    esi
  41aeee:	rep stos BYTE PTR es:[edi],al
  41aef0:	lds    esp,FWORD PTR [ebx+ebp*8]
  41aef3:	scas   al,BYTE PTR es:[edi]
  41aef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aef5:	inc    esp
  41aef6:	pop    ds
  41aef7:	lds    esp,FWORD PTR [edi-0x376c23be]
  41aefd:	inc    ebp
  41aefe:	sti    
  41aeff:	scas   eax,DWORD PTR es:[edi]
  41af00:	add    edx,esi
  41af02:	mov    eax,0xe92eb5af
  41af07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af08:	xchg   esi,eax
  41af09:	adc    dh,BYTE PTR [eax-0x4cdb7e56]
  41af0f:	mov    ebx,0xaaa342b4
  41af14:	jb     0x41af45
  41af16:	lods   eax,DWORD PTR ds:[esi]
  41af17:	mov    al,ds:0xaa7e0375
  41af1c:	mov    DWORD PTR [edi],edx
  41af1e:	call   0x6fc2:0x7b2875a0
  41af25:	lods   eax,DWORD PTR cs:[esi]
  41af27:	mov    al,ds:0xc08e3357
  41af2c:	xor    ecx,DWORD PTR [ecx-0x5d]
  41af2f:	mov    esi,0xc16c1850
  41af34:	aaa    
  41af35:	xor    al,0xaf
  41af37:	push   edx
  41af38:	add    ecx,DWORD PTR [eax+eax*1+0x0]
	...
  41af44:	jp     0x41aef2
  41af46:	dec    eax
  41af47:	inc    eax
  41af48:	nop
  41af49:	mov    esi,0xab6a2f0f
  41af4e:	inc    ebp
  41af4f:	and    eax,0x2f367f5d
  41af54:	xor    DWORD PTR [edx+ebx*1+0x37a53d25],edx
  41af5b:	inc    edi
  41af5c:	sub    ebp,DWORD PTR [ebx-0x50dcdafb]
  41af62:	es inc ebp
  41af64:	inc    esp
  41af66:	cmovae ebx,DWORD PTR [esp+edx*4]
  41af6a:	or     al,0xc
  41af6c:	adc    DWORD PTR [esp+ebx*2+0x5c7a79c9],esi
  41af73:	fstp   TBYTE PTR [ecx-0x2225985f]
  41af79:	mov    ds:0xabb3c761,al
  41af7e:	push   eax
  41af7f:	mov    eax,0xd661b40d
  41af84:	mov    eax,0xccbb6b9d
  41af89:	mov    al,0x61
  41af8b:	iret   
  41af8c:	rcl    BYTE PTR [ebx+ebp*2+0x49bba7bb],0x95
  41af94:	stc    
  41af95:	popf   
  41af96:	imul   ecx,DWORD PTR [ebp-0x46b43f03],0xffffff87
  41af9d:	mov    ebx,0x9ed8944d
  41afa2:	dec    edx
  41afa3:	popf   
  41afa4:	fcomp  QWORD PTR [edi+0x34]
  41afa7:	leave  
	...
  41afb0:	add    BYTE PTR [eax],al
  41afb2:	xchg   esp,eax
  41afb3:	lods   al,BYTE PTR ds:[esi]
  41afb4:	pop    edi
  41afb5:	mov    eax,ds
  41afb7:	retf   0x954d
  41afba:	loope  0x41af68
  41afbc:	pusha  
  41afbd:	dec    ebx
  41afbe:	lods   al,BYTE PTR ds:[esi]
  41afbf:	lea    ecx,[edx+edi*1]
  41afc2:	mov    dl,0xa1
  41afc4:	js     0x41b024
  41afc6:	lods   al,BYTE PTR ds:[esi]
  41afc7:	lea    esp,[edi+0x2d]
  41afca:	mov    ch,BYTE PTR [ebx-0x5453b49f]
  41afd0:	pop    ebp
  41afd1:	sub    cl,BYTE PTR [edi+ebp*4-0x7171eab9]
  41afd8:	js     0x41b01e
  41afda:	mov    DWORD PTR [ebx+0x79a4c95c],esi
  41afe0:	pop    esp
  41afe1:	sbb    esi,edx
  41afe3:	mov    eax,ds:0xa0de1a67
  41afe8:	popa   
  41afe9:	(bad)  
  41afea:	in     eax,dx
  41afeb:	stos   DWORD PTR es:[edi],eax
  41afec:	push   eax
  41afed:	add    bh,al
  41afef:	mov    esi,0x4fd16f58
  41aff4:	outs   dx,BYTE PTR ds:[esi]
  41aff5:	popa   
  41aff6:	xchg   esp,eax
  41aff7:	jge    0x41b049
  41aff9:	inc    edi
  41affa:	xchg   edx,eax
  41affb:	ins    BYTE PTR es:[edi],dx
  41affc:	outs   dx,BYTE PTR ds:[esi]
  41affd:	popa   
  41affe:	mov    ds:0x46414b50,al
  41b003:	ret    0x4350
  41b006:	fwait
  41b007:	jno    0x41b076
  41b009:	inc    esi
  41b00a:	cmp    cl,BYTE PTR [ebp+0xc]
  41b00d:	pop    esp
  41b00e:	cmp    DWORD PTR [ecx+0x5f],ebp
  41b011:	bound  edx,QWORD PTR [edi+0x435b69]
	...
  41b01f:	add    BYTE PTR [edi],ah
  41b021:	dec    ebp
  41b022:	dec    ebp
  41b023:	pop    esp
  41b024:	and    eax,0x78657872
  41b029:	push   ecx
  41b02a:	pop    esp
  41b02b:	and    BYTE PTR [esi-0x7dffa091],al
  41b031:	les    esp,FWORD PTR [eax+0x6f]
  41b034:	inc    esp
  41b035:	pop    esi
  41b036:	pusha  
  41b037:	push   ebx
  41b038:	jne    0x41aff8
  41b03a:	pop    esp
  41b03b:	inc    ebp
  41b03c:	inc    edx
  41b03d:	sar    BYTE PTR [ebp+0x74],0x4b
  41b041:	ret    
  41b042:	pop    eax
  41b043:	push   eax
  41b044:	push   es
  41b045:	leave  
  41b046:	imul   esi,DWORD PTR [ebx+ebx*4-0x7d],0x779b4350
  41b04e:	ins    DWORD PTR es:[edi],dx
  41b04f:	inc    esi
  41b050:	mov    edx,0x955c0c53
  41b055:	push   0x77976422
  41b05a:	or     al,0x53
  41b05c:	xchg   ecx,eax
  41b05d:	popa   
  41b05e:	js     0x41b0d7
  41b060:	xchg   DWORD PTR [ebp+0x6d],ebp
  41b063:	pop    esp
  41b064:	test   al,0x4f
  41b066:	push   ecx
  41b067:	jae    0x41b047
  41b069:	rcl    DWORD PTR [eax+edx*2+0x2],0x2f
  41b06e:	icebp  
  41b06f:	push   edx
  41b070:	iret   
  41b071:	sub    DWORD PTR [edx],0x1e883874
  41b077:	arpl   WORD PTR [ebx],cx
  41b079:	imul   edi,DWORD PTR [edi+ebx*2],0x584a6f1c
  41b080:	jmp    DWORD PTR [esi]
  41b082:	cmp    al,0x6d
	...
  41b08c:	add    BYTE PTR [eax],al
  41b08e:	sub    DWORD PTR [ebx],edx
  41b090:	sbb    BYTE PTR [edi-0x3],bl
  41b093:	dec    ebx
  41b094:	xor    DWORD PTR [esi-0xd],eax
  41b097:	inc    edi
  41b098:	sbb    al,0x68
  41b09a:	adc    edi,ecx
  41b09c:	cmp    al,0x5c
  41b09e:	mov    ebx,0xdc6e4626
  41b0a3:	fisubr DWORD PTR ds:0x1b43f36c
  41b0a9:	inc    esp
  41b0aa:	out    dx,al
  41b0ab:	fisub  DWORD PTR [eax+edx*2]
  41b0ae:	out    dx,al
  41b0af:	shl    BYTE PTR [eax+eax*1],cl
  41b0b2:	mov    edi,0xcf681907
  41b0b7:	iret   
  41b0b8:	push   ds
  41b0b9:	jno    0x41b07e
  41b0bb:	pop    es
  41b0bc:	and    DWORD PTR [edi+ebp*8-0x2a],ebp
  41b0c0:	sub    eax,0x4926b774
  41b0c5:	pop    edi
  41b0c6:	fwait
  41b0c7:	pop    es
  41b0c8:	inc    edi
  41b0c9:	ins    DWORD PTR es:[edi],dx
  41b0ca:	stos   DWORD PTR es:[edi],eax
  41b0cb:	or     ch,BYTE PTR [edx]
  41b0cd:	jb     0x41b09e
  41b0cf:	or     bh,BYTE PTR [edi+eiz*2]
  41b0d2:	or     ebx,0x19
  41b0d5:	cs imul eax,edi,0x1c
  41b0d9:	add    BYTE PTR [ebx+0x6c671b57],bl
  41b0df:	mov    ebp,0x5a6e63e6
  41b0e4:	or     BYTE PTR [edi+edx*4-0x51],bl
  41b0e8:	sbb    DWORD PTR [eax+ebp*2+0x54],esi
  41b0ec:	ucomiss xmm5,DWORD PTR [ebx-0x39]
  41b0f0:	sbb    al,0x0
	...
  41b0fa:	add    BYTE PTR [eax],al
  41b0fc:	sub    eax,DWORD PTR [eax-0x6cdfd7df]
  41b102:	sbb    eax,DWORD PTR [edx+0x17]
  41b105:	mov    al,0x37
  41b107:	xlat   BYTE PTR ds:[ebx]
  41b108:	mov    al,0xbb
  41b10a:	sub    DWORD PTR [eax],ebp
  41b10c:	or     BYTE PTR [ebx-0x4ff8bde5],dl
  41b112:	(bad)  
  41b114:	cwde   
  41b115:	mov    ebx,0x9d232d21
  41b11a:	sbb    eax,0xc4a3fb2d
  41b11f:	add    esp,DWORD PTR [ebx]
  41b121:	xchg   ebx,eax
  41b122:	fmul   QWORD PTR [edi]
  41b124:	in     al,dx
  41b125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b126:	les    ebp,FWORD PTR [ecx]
  41b128:	adc    BYTE PTR [edi-0x6846ea38],bl
  41b12e:	fsub   DWORD PTR [edi]
  41b130:	iret   
  41b131:	mov    bl,0xb5
  41b133:	and    dh,ch
  41b135:	pushf  
  41b136:	leave  
  41b137:	pmaxub mm3,QWORD PTR [ebp+esi*4-0x696e53ef]
  41b13f:	jmp    0x3c155fc
  41b144:	fwait
  41b145:	popf   
  41b146:	mov    WORD PTR [edi],fs
  41b148:	lods   al,BYTE PTR ds:[esi]
  41b149:	cdq    
  41b14a:	mov    WORD PTR [edi],fs
  41b14c:	mov    ebx,0xb41bd9a0
  41b151:	mov    ds:0x9daa36e3,eax
  41b156:	outs   dx,DWORD PTR ds:[esi]
  41b157:	adc    dh,BYTE PTR [eax-0x6f]
  41b15a:	mov    BYTE PTR [edi],dh
  41b15c:	xchg   ecx,eax
  41b15d:	test   al,0x57
  41b15f:	and    DWORD PTR [eax],eax
	...
  41b169:	add    BYTE PTR [ebp-0x67d7c058],ah
  41b16f:	jg     0x41b1a7
  41b171:	sub    ebp,DWORD PTR [ecx-0x75]
  41b174:	pop    edx
  41b175:	and    eax,0x42279c5d
  41b17a:	push   0x703e48a3
  41b17f:	mov    ds:0x5faa450c,eax
  41b184:	dec    ebp
  41b185:	cmp    eax,0x1d62a2fa
  41b18a:	retf   
  41b18b:	mov    esi,0xb6df1a62
  41b190:	pusha  
  41b191:	add    eax,0x1b63bbf4
  41b196:	rol    edi,cl
  41b198:	popa   
  41b199:	cli    
  41b19a:	sar    BYTE PTR [edi+0x57],1
  41b19d:	cli    
  41b19e:	out    dx,eax
  41b19f:	xchg   ecx,eax
  41b1a0:	or     al,0x19
  41b1a2:	jmp    0x7ea4:0xbce97d90
  41b1a9:	(bad)  
  41b1ab:	mov    cl,0x67
  41b1ad:	int3   
  41b1ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1af:	mov    esp,DWORD PTR [edi+0x9]
  41b1b2:	setg   BYTE PTR [esi-0x17]
  41b1b6:	mov    eax,ds:0xafbf7ea2
  41b1bb:	xchg   ecx,eax
  41b1bc:	sub    al,0x95
  41b1be:	mov    ebx,0x99e9678f
  41b1c3:	mov    ds:0x91efb77e,al
  41b1c8:	and    dh,BYTE PTR [ecx-0x16876f0b]
	...
  41b1d6:	add    BYTE PTR [eax],al
  41b1d8:	add    DWORD PTR [ebx-0x6e106082],esp
  41b1de:	and    dh,BYTE PTR [ecx+eax*8-0x2616815e]
  41b1e5:	mov    ds:0x91ef777e,al
  41b1ea:	and    bl,BYTE PTR [ecx-0x16826f15]
  41b1f0:	shl    DWORD PTR [edx-0x6e1fa082],0x22
  41b1f7:	cmp    DWORD PTR [esi-0x4316876f],esp
  41b1fd:	mov    dh,0x78
  41b1ff:	inc    ecx
  41b200:	shl    DWORD PTR [eax+0x71a40067],cl
  41b206:	ins    DWORD PTR es:[edi],dx
  41b207:	jb     0x41b1cb
  41b209:	jp     0x41b287
  41b20b:	gs out 0xbd,al
  41b20e:	push   ecx
  41b20f:	jae    0x41b213
  41b211:	sbb    al,0x5c
  41b213:	gs in  al,0x71
  41b216:	ins    DWORD PTR es:[edi],dx
  41b217:	jb     0x41b19f
  41b219:	leave  
  41b21a:	pop    edi
  41b21b:	jae    0x41b1ef
  41b21d:	jnp    0x41b25f
  41b21f:	popa   
  41b220:	lds    ebp,FWORD PTR [edi+0x2c]
  41b223:	push   ebx
  41b224:	shr    DWORD PTR [ebp+0x7a],cl
  41b227:	gs xchg esp,eax
  41b229:	and    DWORD PTR [esi+0x73],ebx
  41b22c:	ret    
  41b22d:	ins    DWORD PTR es:[edi],dx
  41b22e:	or     al,0x4c
  41b230:	xlat   BYTE PTR ds:[ebx]
  41b231:	push   0x78
  41b233:	and    BYTE PTR [ebp+0x76],al
  41b236:	jle    0x41b2ae
  41b238:	xchg   ebx,eax
  41b239:	imul   ebp,DWORD PTR [eax+edx*2],0x0
	...
  41b245:	add    BYTE PTR [edi+0x4a007b6c],al
  41b24b:	bound  edi,QWORD PTR [ebx+0x74]
  41b24e:	(bad)  
  41b24f:	dec    edx
  41b250:	ins    DWORD PTR es:[edi],dx
  41b251:	jb     0x41b273
  41b253:	jbe    0x41b2d3
  41b255:	and    BYTE PTR [esi],dh
  41b257:	push   0xbd36747e
  41b25c:	push   ecx
  41b25d:	jae    0x41b2c1
  41b25f:	and    DWORD PTR [ebp+eiz*2+0x54],ebx
  41b263:	outs   dx,DWORD PTR ds:[esi]
  41b264:	ins    DWORD PTR es:[edi],dx
  41b265:	jb     0x41b26d
  41b267:	push   ecx
  41b268:	push   ecx
  41b269:	je     0x41b2b9
  41b26b:	add    DWORD PTR [eax+0x61],0x532c84a5
  41b272:	push   ebx
  41b273:	imul   edi,DWORD PTR [edx+0x65],0xffffff94
  41b277:	and    BYTE PTR [ebp+0x79],bl
  41b27a:	xchg   BYTE PTR [ebp+0xc],dh
  41b27d:	inc    esi
  41b27e:	ret    0x2c4b
  41b281:	dec    esi
  41b282:	xchg   DWORD PTR [ecx+0x69],esi
  41b285:	addr16 iret 
  41b287:	(bad)  
  41b288:	sbb    al,0x6d
  41b28a:	pop    ebp
  41b28b:	es dec ebx
  41b28d:	push   esp
  41b28e:	jg     0x41b216
  41b290:	inc    edi
  41b291:	ins    DWORD PTR es:[edi],dx
  41b292:	push   0xffffffc3
  41b294:	sub    eax,0x1ac36b6e
  41b299:	add    BYTE PTR [ecx],dh
  41b29b:	dec    ebx
  41b29c:	sbb    BYTE PTR [esi+esi*1+0x7a],ch
  41b2a0:	sbb    al,0x2e
  41b2a2:	inc    ebx
  41b2a3:	pop    edi
  41b2a4:	sbb    al,0x0
  41b2a6:	adc    ebp,DWORD PTR [ecx+0x1]
  41b2a9:	ins    BYTE PTR es:[edi],dx
	...
  41b2b2:	add    BYTE PTR [eax],al
  41b2b4:	cmp    edi,DWORD PTR [esp+ebx*1+0x50]
  41b2b8:	sbb    eax,0xef66236e
  41b2bd:	jns    0x41b2e2
  41b2bf:	sbb    dx,WORD PTR [esi]
  41b2c2:	cs jb  0x41b2b7
  41b2c5:	es jecxz 0x41b32b
  41b2c8:	out    dx,al
  41b2c9:	xor    cl,BYTE PTR ds:0x1836ed2e
  41b2cf:	add    BYTE PTR [esi+edi*1],bl
  41b2d2:	sub    esi,DWORD PTR [eax+eiz*8+0x47]
  41b2d6:	pop    ss
  41b2d7:	arpl   WORD PTR [ebx],ax
  41b2d9:	jmp    0xf744f91a
  41b2de:	cmp    BYTE PTR [edx-0x26],al
  41b2e1:	cmp    ch,BYTE PTR [ecx]
  41b2e3:	arpl   bx,ax
  41b2e5:	xchg   BYTE PTR [eax],bh
  41b2e7:	jb     0x41b299
  41b2e9:	in     eax,dx
  41b2ea:	sub    ah,BYTE PTR [eax]
  41b2ec:	xchg   ecx,eax
  41b2ed:	retf   0x5c3c
  41b2f0:	add    BYTE PTR [edi],0x26
  41b2f3:	outs   dx,BYTE PTR ds:[esi]
  41b2f4:	iret   
  41b2f5:	fldenv [ebx]
  41b2f7:	data16 fwait
  41b2f9:	xchg   ebp,eax
  41b2fa:	cs jb  0x41b2af
  41b2fd:	repnz inc esi
  41b2ff:	jae    0x41b2a4
  41b301:	cli    
  41b302:	adc    DWORD PTR [edi+ebx*4-0x68],esi
  41b306:	and    al,0x6d
  41b308:	imul   edi,DWORD PTR [edi+0x3],0x579d6a33
  41b30f:	seto   BYTE PTR [ecx-0x7572c7c0]
  41b316:	das    
  41b317:	sub    BYTE PTR [eax],al
	...
  41b321:	add    BYTE PTR [ebx+ecx*4+0x13],ch
  41b325:	adc    ch,BYTE PTR [edx-0x5c]
  41b328:	dec    ecx
  41b329:	in     al,0x8a
  41b32b:	stos   DWORD PTR es:[edi],eax
  41b32c:	adc    esp,esp
  41b32e:	shld   DWORD PTR [ecx+eiz*1+0x31],ecx,0x8c
  41b334:	inc    edi
  41b335:	dec    ecx
  41b336:	sbb    BYTE PTR [ecx-0x5ce1fbff],ch
  41b33c:	add    DWORD PTR [eax],edx
  41b33e:	and    ah,BYTE PTR [ecx-0x41fcdeeb]
  41b344:	adc    edi,DWORD PTR [esi]
  41b346:	add    esi,DWORD PTR [eax-0x5be3bdf1]
  41b34c:	pop    es
  41b34d:	and    DWORD PTR [ebx],eax
  41b34f:	pusha  
  41b350:	adc    edx,DWORD PTR [edx]
  41b352:	repnz mov ds:0xac12e3c1,al
  41b358:	mov    bl,0x37
  41b35a:	add    dl,BYTE PTR [eax-0x5e05d331]
  41b360:	(bad)  
  41b361:	add    edi,esi
  41b363:	mov    ds:0xa0e20fc1,al
  41b368:	mov    ch,0x20
  41b36a:	repz mov ebp,0x9cbb27b0
  41b370:	mov    bh,0x33
  41b372:	mov    ebp,0xef1d9aa2
  41b377:	scas   al,BYTE PTR es:[edi]
  41b378:	sbb    BYTE PTR ds:0x11848abb,0xac
  41b37f:	mov    bl,0xa5
  41b381:	adc    BYTE PTR [ebx+0xf80a3],dh
	...
  41b38f:	add    BYTE PTR [edi-0x73],bh
  41b392:	and    BYTE PTR [esi],0xa9
  41b395:	pop    edi
  41b396:	or     al,0xaf
  41b398:	mov    eax,0xa8aa2caf
  41b39d:	call   0x5941:0xb3df5767
  41b3a4:	fistp  WORD PTR [edx+0x7fbc4761]
  41b3aa:	pop    ebp
  41b3ab:	ror    DWORD PTR ds:[ebx-0x6142b787],0x50
  41b3b3:	sub    ebx,DWORD PTR [ebx-0x2ce6a747]
  41b3b9:	ret    
  41b3ba:	imul   edi,DWORD PTR [edx],0xffffffdf
  41b3bd:	mov    al,0x67
  41b3bf:	sbb    bl,ah
  41b3c1:	call   0xc60:0x9af10f61
  41b3c8:	shl    DWORD PTR [eax-0x6f11ea9d],cl
  41b3ce:	dec    eax
  41b3cf:	adc    BYTE PTR [ebp-0x43f0bc81],bh
  41b3d5:	mov    ebp,DWORD PTR [ebx+0x5]
  41b3d8:	mov    bh,0xbb
  41b3da:	arpl   bx,di
  41b3dc:	fwait
  41b3dd:	adc    bl,BYTE PTR [edi]
  41b3df:	loope  0x41b388
  41b3e1:	mov    ds:0xa6bdbd0c,eax
  41b3e6:	imul   ebx,ebx,0xffffffd8
  41b3e9:	mov    ecx,0xb9ccb958
  41b3ee:	imul   edi,DWORD PTR [edi-0x4a9c724f],0x0
	...
  41b3fd:	add    BYTE PTR [edi-0xc32dd70],ch
  41b403:	mov    ecx,DWORD PTR [ecx+eiz*4]
  41b406:	pause  
  41b408:	js     0x41b3a0
  41b40a:	fimul  WORD PTR [edx-0x74147ade]
  41b410:	or     al,0x88
  41b412:	enter  0x7e9b,0x8b
  41b416:	cmc    
  41b417:	popa   
  41b418:	push   0xc824700
  41b41d:	jno    0x41b3ba
  41b41f:	arpl   WORD PTR [ebx+0x6b],bp
  41b422:	adc    BYTE PTR [edx+0x51],dh
  41b425:	je     0x41b41d
  41b427:	dec    ecx
  41b428:	pop    eax
  41b429:	jne    0x41b3bf
  41b42b:	pop    ebp
  41b42c:	pop    edi
  41b42d:	inc    esi
  41b42e:	mov    edx,0x91530c4b
  41b433:	jno    0x41b4ad
  41b435:	ja     0x41b3ce
  41b437:	ins    DWORD PTR es:[edi],dx
  41b438:	ins    DWORD PTR es:[edi],dx
  41b439:	pop    esp
  41b43a:	mov    edx,0x81627e82
  41b43f:	push   ecx
  41b440:	pop    eax
  41b441:	push   eax
  41b442:	mov    dh,0x66
  41b444:	bound  esi,QWORD PTR [ebx-0x6]
  41b447:	pop    esp
  41b448:	pusha  
  41b449:	ins    BYTE PTR es:[edi],dx
  41b44a:	(bad)  
  41b44b:	pop    esp
  41b44c:	js     0x41b4b6
  41b44e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b44f:	push   eax
  41b450:	pop    edi
  41b451:	retfw  0x5182
  41b455:	jb     0x41b422
  41b457:	push   edi
  41b458:	pop    ebx
  41b459:	outs   dx,DWORD PTR ds:[esi]
  41b45a:	call   0x5851:0xe846505e
  41b461:	push   eax
	...
  41b46a:	add    BYTE PTR [eax],al
  41b46c:	jbe    0x41b42e
  41b46e:	jle    0x41b4d5
  41b470:	retf   0x6270
  41b473:	je     0x41b414
  41b475:	pop    esi
  41b476:	pusha  
  41b477:	push   ebx
  41b478:	xchg   DWORD PTR [ecx+0x78],ebx
  41b47b:	add    BYTE PTR ds:0x8b646d6f,dh
  41b481:	pop    ebx
  41b482:	js     0x41b4ed
  41b484:	xchg   DWORD PTR [ecx+0x4b],ebx
  41b487:	push   0x63608b
  41b48c:	gs pop esp
  41b48e:	push   0x74
  41b490:	jns    0x41b4f0
  41b492:	jle    0x41b4f9
  41b494:	adc    dl,BYTE PTR [eax+0x5f]
  41b497:	je     0x41b4e0
  41b499:	dec    ecx
  41b49a:	dec    edx
  41b49b:	inc    esi
  41b49c:	iret   
  41b49d:	loopne 0x41b4bf
  41b49f:	push   eax
  41b4a0:	xor    ecx,0x1c
  41b4a3:	je     0x41b44b
  41b4a5:	jmp    0xf71125d0
  41b4aa:	sub    eax,0x28917c71
  41b4af:	jb     0x41b51c
  41b4b1:	and    dh,BYTE PTR es:[ecx+0x72]
  41b4b5:	mov    ah,0x4a
  41b4b7:	pop    edi
  41b4b8:	bound  edi,QWORD PTR [ebx-0x4a87b7f8]
  41b4be:	sbb    al,0x3f
  41b4c0:	imul   esi,DWORD PTR [ebx+ebx*1+0x29c37d00],0x6d
  41b4c8:	pop    ebx
  41b4c9:	mov    ebx,0x273d674c
  41b4ce:	cmp    eax,0x6d
  41b4d3:	add    BYTE PTR [eax],al
  41b4d5:	add    BYTE PTR [eax],al
  41b4d7:	add    BYTE PTR [eax],al
  41b4d9:	add    BYTE PTR ds:0x2848084b,bh
  41b4df:	jbe    0x41b4fd
  41b4e1:	dec    esi
  41b4e2:	test   BYTE PTR cs:[ecx],dl
  41b4e5:	add    bh,bh
  41b4e7:	jns    0x41b507
  41b4e9:	je     0x41b4ba
  41b4eb:	dec    ebx
  41b4ec:	sbb    esp,DWORD PTR [ebx+0x1d]
  41b4ef:	imul   ebp,DWORD PTR ds:0x3d272a6b,0x15fc5f
  41b4f9:	ins    DWORD PTR es:[edi],dx
  41b4fa:	std    
  41b4fb:	jp     0x41b505
  41b4fd:	dec    eax
  41b4fe:	call   0xe685b638
  41b503:	xor    al,0x47
  41b505:	pop    edi
  41b506:	cli    
  41b507:	inc    ebx
  41b508:	or     eax,0x138f051
  41b50d:	jne    0x41b4fd
  41b50f:	aam    0x11
  41b511:	pop    esp
  41b512:	or     al,0x42
  41b514:	pcmpgtd mm6,QWORD PTR [edx-0x408cb3bd]
  41b51b:	xchg   BYTE PTR [ebx],bh
  41b51d:	ins    DWORD PTR es:[edi],dx
  41b51e:	mov    cl,0x7f
  41b520:	(bad)  
  41b521:	or     al,0x90
  41b523:	lea    ecx,[eax-0x705e6fc9]
  41b529:	push   ds
  41b52a:	popf   
  41b52b:	mov    eax,ds:0xaf7b0f88
  41b530:	jne    0x41b556
  41b532:	test   eax,0x7e1e7fa6
  41b537:	jg     0x41b4cf
  41b539:	and    al,0x69
  41b53b:	mov    edi,DWORD PTR [edx+0x22]
	...
  41b546:	add    BYTE PTR [eax],al
  41b548:	jge    0x41b4e4
  41b54a:	inc    edi
  41b54b:	dec    edx
  41b54c:	fwait
  41b54d:	scas   eax,DWORD PTR es:[edi]
  41b54e:	cmp    ah,BYTE PTR ds:0x47379a5d
  41b554:	xchg   edx,eax
  41b555:	lods   eax,DWORD PTR ds:[esi]
  41b556:	sub    BYTE PTR [edx-0x7d],cl
  41b559:	scas   eax,DWORD PTR es:[edi]
  41b55a:	daa    
  41b55b:	aaa    
  41b55c:	push   0xcf17488b
  41b561:	mov    bh,0x4a
  41b563:	pop    ss
  41b564:	cmp    eax,DWORD PTR [eax-0x6dd3e8e8]
  41b56a:	jecxz  0x41b59f
  41b56c:	and    dl,BYTE PTR [edx-0x4900fbe9]
  41b572:	jecxz  0x41b5a7
  41b574:	sbb    ebx,DWORD PTR [eax-0x4d01fbcb]
  41b57a:	cmp    eax,DWORD PTR [edi+ebx*1]
  41b57d:	xchg   edx,eax
  41b57e:	add    ch,BYTE PTR [edx]
  41b580:	lock fwait
  41b582:	add    BYTE PTR [edi],dl
  41b584:	mov    cl,0x87
  41b586:	lock pop ds
  41b588:	iret   
  41b589:	stos   DWORD PTR es:[edi],eax
  41b58a:	mov    eax,ds:0xa8601f37
  41b58f:	or     ebx,edi
  41b591:	fwait
  41b592:	retf   0xec15
  41b595:	xchg   ecx,eax
  41b596:	jecxz  0x41b5ce
  41b598:	jmp    0xc891:0xf01aafa5
  41b59f:	das    
  41b5a0:	xchg   ecx,eax
  41b5a1:	mov    bl,0xc
  41b5a3:	cdq    
  41b5a4:	sub    al,0xc2
  41b5a6:	je     0x41b561
  41b5a8:	fcomp  DWORD PTR [esi+edi*2+0x8c]
  41b5af:	add    BYTE PTR [eax],al
  41b5b1:	add    BYTE PTR [eax],al
  41b5b3:	add    BYTE PTR [eax],al
  41b5b5:	add    dl,bl
  41b5b7:	stos   DWORD PTR es:[edi],eax
  41b5b8:	dec    edx
  41b5b9:	mov    ch,0xdc
  41b5bb:	pop    edi
  41b5bc:	inc    edi
  41b5bd:	xchg   ecx,eax
  41b5be:	mov    esp,0xe79b619b
  41b5c3:	xchg   ecx,eax
  41b5c4:	push   eax
  41b5c5:	sahf   
  41b5c6:	in     eax,dx
  41b5c7:	xchg   ecx,eax
  41b5c8:	gs jp  0x41b5a7
  41b5cb:	scas   al,BYTE PTR es:[edi]
  41b5cc:	ins    DWORD PTR es:[edi],dx
  41b5cd:	mov    WORD PTR [eax-0x3f55b546],?
  41b5d3:	pushf  
  41b5d4:	popa   
  41b5d5:	push   ebp
  41b5d6:	mov    DWORD PTR [esi+0x51010c7e],ebp
  41b5dc:	cmp    cl,ch
  41b5de:	mov    dl,BYTE PTR [edx-0x6253aa88]
  41b5e4:	jge    0x41b5cf
  41b5e6:	cdq    
  41b5e7:	pushf  
  41b5e8:	push   0x35
  41b5ea:	in     al,0xae
  41b5ec:	jle    0x41b63a
  41b5ee:	inc    ebp
  41b5f0:	pop    eax
  41b5f1:	sbb    DWORD PTR [ebx-0x10e68b3f],esi
  41b5f7:	pushf  
  41b5f8:	jle    0x41b5fe
  41b5fa:	shr    DWORD PTR [ebx-0x5a13e4a4],0x63
  41b601:	std    
  41b602:	out    0x90,eax
  41b604:	or     al,0x19
  41b606:	jmp    0x6891:0xadf67d90
  41b60d:	jmp    0xfabf64ce
  41b612:	aad    0x9c
  41b614:	jle    0x41b5e3
  41b616:	mov    eax,0xc47c96
	...
  41b623:	add    ah,cl
  41b625:	mov    bh,0x61
  41b627:	fidivr DWORD PTR [eax-0x5a41bf81]
  41b62d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b62e:	bound  eax,QWORD PTR [eax]
  41b630:	push   dx
  41b632:	pop    edi
  41b633:	jb     0x41b5b7
  41b635:	or     BYTE PTR [ecx+0x6e],0xf
  41b639:	jbe    0x41b6a4
  41b63b:	popa   
  41b63c:	jp     0x41b690
  41b63e:	push   ecx
  41b63f:	je     0x41b69f
  41b641:	or     BYTE PTR [edx+0x74],0x46
  41b645:	push   ebp
  41b646:	imul   esi,DWORD PTR [ebx+edx*2+0x20],0x829a6d79
  41b64e:	push   eax
  41b64f:	inc    esi
  41b650:	xchg   esp,eax
  41b651:	imul   esp,DWORD PTR [edi+0x61],0xffffff82
  41b655:	push   edi
  41b656:	cmp    eax,DWORD PTR [eax]
  41b658:	or     BYTE PTR [ebx+0x62],ch
  41b65b:	imul   esp,esi,0x98615a5d
  41b661:	mov    bh,0x79
  41b663:	imul   edx,DWORD PTR [ebx-0x7790b4b1],0x59
  41b66a:	imul   esp,DWORD PTR [edi-0x56],0x95736d54
  41b671:	push   0x5f
  41b673:	outs   dx,BYTE PTR ds:[esi]
  41b674:	add    eax,0x13535084
  41b679:	jae    0x41b6f6
  41b67b:	imul   edi,ecx,0xf5007b61
  41b681:	pop    esi
  41b682:	push   0x74
  41b684:	shl    DWORD PTR [eax+0x7e],0x65
	...
  41b690:	add    BYTE PTR [eax],al
  41b692:	fimul  DWORD PTR [ecx+0x51]
  41b695:	outs   dx,BYTE PTR ds:[esi]
  41b696:	bnd js 0x41b6fc
  41b699:	gs jmp 0x6d73:0x83636d52
  41b6a1:	inc    esi
  41b6a2:	fiadd  WORD PTR [ebx+0x57786f4b]
  41b6a8:	imul   esp,DWORD PTR [edi-0x3a],0x7e745153
  41b6af:	sbb    DWORD PTR [ebp+0x6c],0x5f172acf
  41b6b6:	adc    edi,ecx
  41b6b8:	cmp    al,0x0
  41b6ba:	repz leave 
  41b6bc:	adc    eax,0xeac9b274
  41b6c1:	ja     0x41b675
  41b6c3:	inc    edx
  41b6c4:	or     eax,0x3cf2915c
  41b6c9:	push   edx
  41b6ca:	mov    edx,0x7d0014e9
  41b6cf:	repz pop ss
  41b6d1:	push   0x6318ff7c
  41b6d6:	jmp    0xcfadc8c9
  41b6db:	jmp    0x3c32909
  41b6e0:	pop    ss
  41b6e1:	add    BYTE PTR [edx+0x69722a89],bl
  41b6e7:	not    DWORD PTR [ecx]
  41b6e9:	arpl   di,cx
  41b6eb:	inc    esi
  41b6ec:	sub    eax,0x2bb55c71
  41b6f1:	jb     0x41b75e
  41b6f3:	push   ss
  41b6f4:	inc    ebx
  41b6f5:	je     0x41b6f7
	...
  41b6ff:	add    BYTE PTR [edi+0x46],bl
  41b702:	sub    esi,DWORD PTR [edx+0x5b]
  41b705:	push   ss
  41b706:	cmp    BYTE PTR [ebp+0x31],ch
  41b709:	push   ebx
  41b70a:	adc    ebx,DWORD PTR [edi+0x3d]
  41b70d:	mov    esp,0x503d413c
  41b712:	sub    DWORD PTR [edx+0x13],esi
  41b715:	dec    esi
  41b716:	sub    DWORD PTR [edx-0x4],esp
  41b719:	outs   dx,DWORD PTR ds:[esi]
  41b71a:	adc    al,0x63
  41b71c:	jmp    FWORD PTR [ebx+0x2a]
  41b71f:	ins    BYTE PTR es:[edi],dx
  41b720:	es push 0x10
  41b723:	arpl   WORD PTR ds:0xf6422117,bx
  41b729:	adc    dh,BYTE PTR [eax]
  41b72b:	addr16 icebp 
  41b72d:	jnp    0x41b72f
  41b72f:	add    ch,ch
  41b731:	jg     0x41b747
  41b733:	imul   esp,esi,0xe726d97f
  41b739:	pop    ebp
  41b73a:	(bad)  
  41b73b:	adc    al,0xcf
  41b73d:	mov    bh,0xca
  41b73f:	adc    al,0xe3
  41b741:	popf   
  41b742:	les    ebx,FWORD PTR [esi]
  41b744:	in     al,dx
  41b745:	jg     0x41b6d7
  41b747:	adc    al,0xac
  41b749:	xchg   ecx,eax
  41b74a:	shl    DWORD PTR [edx],0xb4
  41b74d:	mov    ds:0x909833e3,al
  41b752:	mov    dh,0x18
  41b754:	mov    ds:0x7f037f91,al
  41b759:	pushf  
  41b75a:	xchg   ebp,eax
  41b75b:	pop    ss
  41b75c:	iret   
  41b75d:	mov    al,0x8a
  41b75f:	sub    DWORD PTR [ebx+0x158494],esp
	...
  41b76d:	add    BYTE PTR [ebx+ebp*4-0x6180f460],ch
  41b774:	add    DWORD PTR [edi+0x7d],0x9b267196
  41b77b:	mov    al,0x88
  41b77d:	adc    al,0x7e
  41b77f:	xchg   esi,eax
  41b780:	pop    edx
  41b781:	push   ds
  41b782:	pop    esi
  41b783:	jg     0x41b7b4
  41b785:	dec    ecx
  41b786:	pop    DWORD PTR [si+0x1e]
  41b78a:	xchg   ebx,eax
  41b78b:	xchg   ecx,eax
  41b78c:	dec    esp
  41b78d:	push   ss
  41b78e:	ins    BYTE PTR es:[edi],dx
  41b78f:	jg     0x41b7b8
  41b791:	sub    BYTE PTR ds:0x3e293999,bh
  41b797:	pop    edx
  41b798:	dec    ebp
  41b799:	adc    ecx,edi
  41b79b:	pop    ebp
  41b79c:	xor    esp,DWORD PTR ds:0x1f128f3e
  41b7a2:	sbb    eax,0xe6e3c5a4
  41b7a7:	pop    edi
  41b7a8:	lds    eax,FWORD PTR [ebx]
  41b7aa:	in     eax,dx
  41b7ab:	pop    ebx
  41b7ac:	jecxz  0x41b7e0
  41b7ae:	and    ah,BYTE PTR [edx-0x71d7e911]
  41b7b4:	or     BYTE PTR [eax],dh
  41b7b6:	or     al,0x88
  41b7b8:	or     al,0xf9
  41b7ba:	mov    bl,0x99
  41b7bc:	dec    eax
  41b7bd:	sti    
  41b7be:	rcl    DWORD PTR [ecx-0x77e81699],cl
  41b7c4:	jl     0x41b78e
  41b7c6:	ret    0x7ec3
  41b7c9:	rol    dl,0x9e
  41b7cc:	push   ecx
  41b7cd:	mov    eax,ds:0xe96796b1
	...
  41b7da:	add    BYTE PTR [eax],al
  41b7dc:	std    
  41b7dd:	sahf   
  41b7de:	jle    0x41b797
  41b7e0:	test   DWORD PTR [ebp-0x612263f4],0x96eb9f7e
  41b7ea:	addr16 jmp 0x9abf62cc
  41b7f0:	mov    ecx,0xcc8d7e9c
  41b7f5:	lods   al,BYTE PTR ds:[esi]
  41b7f6:	pop    esp
  41b7f7:	mov    BYTE PTR [ebp-0x21698670],bh
  41b7fd:	mov    ds:0x8de3a50c,eax
  41b802:	addr16 mov ah,al
  41b805:	pushf  
  41b806:	jle    0x41b878
  41b808:	int3   
  41b809:	mov    al,0x61
  41b80b:	dec    edi
  41b80c:	(bad)  
  41b80d:	xchg   esp,eax
  41b80e:	imul   ebx,DWORD PTR [ebx-0x4a],0xffffffab
  41b812:	inc    edx
  41b813:	sub    bl,BYTE PTR [ebx-0x56c1a2a1]
  41b819:	xchg   ebx,eax
  41b81a:	jns    0x41b864
  41b81c:	fstp   QWORD PTR [esi-0x5510d5b0]
  41b822:	jge    0x41b85e
  41b824:	fisub  DWORD PTR [eax-0x5404eab6]
  41b82a:	dec    edx
  41b82b:	cmp    eax,0xa6d4ae3
  41b830:	ror    BYTE PTR [esi+0x7fbc1d62],0x4a
  41b837:	adc    eax,0x67b0bb
  41b83c:	test   BYTE PTR [ebp+ebp*2+0x72],dh
	...
  41b848:	add    BYTE PTR [eax],al
  41b84a:	jbe    0x41b810
  41b84c:	js     0x41b8be
  41b84e:	fld    TBYTE PTR [esi+0x6d]
  41b851:	jb     0x41b823
  41b853:	fs gs gs jbe 0x41b81c
  41b858:	js     0x41b8ca
  41b85a:	arpl   WORD PTR es:[ebx+0x73],di
  41b85e:	jns    0x41b8c9
  41b860:	jle    0x41b8c6
  41b862:	pop    cx
  41b864:	dec    edx
  41b865:	je     0x41b7ed
  41b867:	dec    esi
  41b868:	push   ecx
  41b869:	jae    0x41b7f0
  41b86b:	jno    0x41b8cc
  41b86d:	jb     0x41b879
  41b86f:	jle    0x41b8bb
  41b871:	je     0x41b8e9
  41b873:	ret    0x7269
  41b876:	pop    ebx
  41b877:	pop    ebp
  41b878:	js     0x41b8e9
  41b87a:	inc    esp
  41b87b:	jnp    0x41b889
  41b87d:	push   ebx
  41b87e:	jno    0x41b844
  41b880:	pop    eax
  41b881:	push   edi
  41b882:	addr16 push eax
  41b884:	dec    ebp
  41b885:	pop    esp
  41b886:	inc    eax
  41b887:	mov    ebp,0x69652044
  41b88c:	push   0x74
  41b88e:	jns    0x41b8f3
  41b890:	jle    0x41b8f7
  41b892:	inc    edx
  41b893:	les    esp,FWORD PTR [eax+0x69]
  41b896:	and    BYTE PTR [eax+edx*2+0x41],0x95
  41b89b:	pusha  
  41b89c:	pop    edi
  41b89d:	jne    0x41b82f
  41b89f:	addr16 jnp 0x41b8a2
  41b8a2:	xchg   ebp,eax
  41b8a3:	ins    BYTE PTR es:[edi],dx
  41b8a4:	push   0x74
  41b8a6:	or     DWORD PTR [ebp+0x7e],ebx
  41b8a9:	gs loop 0x41b86d
  41b8ac:	pop    eax
  41b8ad:	push   eax
	...
  41b8b6:	add    BYTE PTR [eax],al
  41b8b8:	in     eax,0x5f
  41b8ba:	imul   esp,DWORD PTR [ebp-0x10],0xbf535067
  41b8c1:	ins    DWORD PTR es:[di],dx
  41b8c3:	jae    0x41b87b
  41b8c5:	push   eax
  41b8c6:	pop    edi
  41b8c7:	iretw  
  41b8c9:	push   0x17
  41b8cb:	pop    edi
  41b8cc:	sbb    eax,0xf8513c84
  41b8d1:	js     0x41b8e7
  41b8d3:	pop    eax
  41b8d4:	mov    cl,0x79
  41b8d6:	push   ds
  41b8d7:	sbb    ebx,DWORD PTR gs:[ecx+0x34]
  41b8db:	push   eax
  41b8dc:	or     al,0xb
  41b8de:	push   ss
  41b8df:	arpl   cx,di
  41b8e1:	sub    ah,BYTE PTR [ecx]
  41b8e3:	push   ecx
  41b8e4:	div    BYTE PTR [edx]
  41b8e6:	sub    dh,BYTE PTR [ecx-0x31]
  41b8e9:	or     BYTE PTR [edi],0x78
  41b8ec:	in     al,dx
  41b8ed:	push   ss
  41b8ee:	iret   
  41b8ef:	ins    BYTE PTR es:[edi],dx
  41b8f0:	mov    ebx,0xbb660d32
  41b8f5:	(bad)  
  41b8f6:	adc    BYTE PTR [edi-0x44],bl
  41b8f9:	retf   0x6cce
  41b8fc:	mov    esp,0x905c0d42
  41b901:	(bad)  
  41b902:	cmp    ebp,DWORD PTR [ebp-0x57]
  41b905:	repnz pop ss
  41b907:	pop    edi
  41b908:	popf   
  41b909:	sti    
  41b90a:	and    BYTE PTR [esi+eiz*4-0x1c],al
  41b90e:	sub    DWORD PTR [ecx-0x7d],esp
  41b911:	icebp  
  41b912:	sbb    dh,BYTE PTR [edi-0x51]
  41b915:	fstp   DWORD PTR [ebx+esi*2]
  41b918:	jl     0x41b930
  41b91a:	and    DWORD PTR [ecx+0x0],edx
	...
  41b925:	add    BYTE PTR [edi-0x9],ah
  41b928:	sbb    ah,BYTE PTR [ebx+0x73]
  41b92b:	inc    ebp
  41b92c:	sub    DWORD PTR [ebx+ebx*2-0x51],esi
  41b930:	adc    ah,BYTE PTR [ebp+0x5c]
  41b933:	sub    BYTE PTR [ebx],0x61
  41b936:	pop    esp
  41b937:	push   ss
  41b938:	and    DWORD PTR [ecx+0x37],edx
  41b93b:	mov    eax,0x662b631e
  41b940:	sub    DWORD PTR [ebx+eax*2-0x40],esi
  41b944:	adc    ah,BYTE PTR [ebp+0x3c]
  41b947:	jp     0x41b926
  41b949:	pop    esp
  41b94a:	fistp  QWORD PTR [edi+0x4a]
  41b94d:	xlat   BYTE PTR ds:[ebx]
  41b94e:	repnz pushf 
  41b950:	push   es
  41b951:	adc    edi,ecx
  41b953:	stos   DWORD PTR es:[edi],eax
  41b954:	ss sbb al,0xf0
  41b957:	lea    ecx,[eax]
  41b959:	sub    BYTE PTR [esi],bl
  41b95b:	mov    ds:0x99e817ef,eax
  41b960:	or     dl,BYTE PTR [ecx]
  41b962:	test   eax,0xe81ff48c
  41b967:	xchg   ebx,eax
  41b968:	or     BYTE PTR [ebx+ecx*1],al
  41b96b:	lods   eax,DWORD PTR ds:[esi]
  41b96c:	(bad)  [edx]
  41b96e:	frstor [edx-0x6c13cf39]
  41b974:	iret   
  41b975:	sbb    ah,cl
  41b977:	mov    al,ds:0xa8f82cd6
  41b97c:	repz sub al,0xfc
  41b97f:	pop    ecx
  41b980:	mov    dh,0x12
  41b982:	stos   DWORD PTR es:[edi],eax
  41b983:	xchg   esi,eax
  41b984:	scas   eax,DWORD PTR es:[edi]
  41b985:	es iret 
  41b987:	stos   DWORD PTR es:[edi],eax
  41b988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b989:	sbb    al,0x0
	...
  41b993:	add    BYTE PTR [ecx-0x71d97f5f],dh
  41b999:	xchg   edx,eax
  41b99a:	xchg   ebx,eax
  41b99b:	jecxz  0x41ba1c
  41b99d:	cwde   
  41b99e:	adc    DWORD PTR [edi],0x26959e9a
  41b9a4:	iret   
  41b9a5:	fwait
  41b9a6:	and    BYTE PTR [edx],0x7f
  41b9a9:	mov    eax,ds:0x92cf1377
  41b9ae:	mov    DWORD PTR [edi],ebx
  41b9b0:	ins    BYTE PTR es:[edi],dx
  41b9b1:	sahf   
  41b9b2:	jae    0x41b991
  41b9b4:	ins    DWORD PTR es:[edi],dx
  41b9b5:	xchg   DWORD PTR [eax+0x4],eax
  41b9b8:	pop    esi
  41b9b9:	xchg   esi,eax
  41b9ba:	push   edi
  41b9bb:	and    DWORD PTR [esi+0x59],ebx
  41b9be:	aas    
  41b9bf:	and    eax,0x1d567f5b
  41b9c4:	inc    ebx
  41b9c5:	popf   
  41b9c6:	fisubr DWORD PTR ss:[ecx]
  41b9c9:	xchg   esi,eax
  41b9ca:	pop    esp
  41b9cb:	add    al,0x1b
  41b9cd:	mov    ah,0xc
  41b9cf:	dec    esp
  41b9d0:	jmp    0x50a2:0xc148598f
  41b9d7:	xor    eax,0x277ca6ee
  41b9dc:	fild   QWORD PTR [edi-0x422bc5f4]
  41b9e2:	pop    eax
  41b9e3:	adc    dh,BYTE PTR ss:[edx-0x5d38dab9]
  41b9ea:	imul   edi,ecx,0xffffffbd
  41b9ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9ee:	jle    0x41b9fc
  41b9f0:	retf   
  41b9f1:	mov    esi,0xa6d8fa62
  41b9f6:	pusha  
  41b9f7:	aad    0x0
	...
  41ba01:	add    BYTE PTR [esi+eiz*4-0x44332e88],bl
  41ba08:	imul   ebx,ebp,0xffffffab
  41ba0b:	mov    ebx,0xafccdb63
  41ba10:	imul   edi,DWORD PTR [edx-0x449e7327],0xffffffd8
  41ba17:	jg     0x41ba5d
  41ba19:	(bad)  
  41ba1a:	(bad)  [ebx-0x5d3837be]
  41ba20:	or     al,0xbc
  41ba22:	mov    ecx,0xf3af7ea2
  41ba27:	call   0x7e5f:0xa2dae967
  41ba2e:	fsub   DWORD PTR [edx-0x5d256fb8]
  41ba34:	ins    DWORD PTR es:[edi],dx
  41ba35:	jne    0x41ba0c
  41ba37:	xchg   ecx,eax
  41ba38:	jae    0x41ba23
  41ba3a:	mov    esp,0xa6757e94
  41ba3f:	xchg   edx,eax
  41ba40:	pop    edi
  41ba41:	dec    ebx
  41ba42:	scas   al,BYTE PTR es:[edi]
  41ba43:	xchg   ecx,eax
  41ba44:	or     al,0x27
  41ba46:	mov    al,ds:0xbf467eaf
  41ba4b:	xchg   esp,eax
  41ba4c:	ins    DWORD PTR es:[edi],dx
  41ba4d:	ds out 0x7f,eax
  41ba50:	pop    ebp
  41ba51:	add    BYTE PTR [ecx],bl
  41ba53:	bound  edi,QWORD PTR [eax+0x77]
  41ba56:	pop    es
  41ba57:	outs   dx,BYTE PTR ds:[esi]
  41ba58:	ins    DWORD PTR es:[edi],dx
  41ba59:	pop    esp
  41ba5a:	jmp    0x41bab8
  41ba5c:	jle    0x41bad2
  41ba5e:	punpckhdq mm5,QWORD PTR [eax+edx*2]
  41ba62:	les    esp,FWORD PTR [ebx+eiz*2+0x72]
	...
  41ba6e:	add    BYTE PTR [eax],al
  41ba70:	out    dx,eax
  41ba71:	addr16 or al,0x5c
  41ba74:	jne    0x41baa2
  41ba76:	dec    ebx
  41ba77:	imul   esp,edx,0x987078c1
  41ba7d:	arpl   WORD PTR [edx+0x69],sp
  41ba80:	dec    ax
  41ba82:	dec    eax
  41ba83:	push   ebx
  41ba84:	iret   
  41ba85:	outs   dx,DWORD PTR ds:[esi]
  41ba86:	ins    DWORD PTR es:[edi],dx
  41ba87:	jae    0x41bab1
  41ba89:	arpl   WORD PTR [edx+0x69],sp
  41ba8c:	jbe    0x41baec
  41ba8e:	inc    edx
  41ba8f:	add    BYTE PTR gs:[esi+0x7e],0x69
  41ba94:	jo     0x41baf5
  41ba96:	or     al,0x50
  41ba98:	pop    ss
  41ba99:	ins    DWORD PTR es:[edi],dx
  41ba9a:	jnp    0x41baf3
  41ba9c:	sbb    DWORD PTR [eax+ebp*2+0x0],ebp
  41baa0:	arpl   WORD PTR [eax+eiz*2+0x0],bp
  41baa4:	push   ebx
  41baa5:	ins    DWORD PTR es:[edi],dx
  41baa6:	ins    DWORD PTR es:[edi],dx
  41baa7:	jb     0x41baf1
  41baa9:	pop    ebx
  41baaa:	gs gs ss dec esp
  41baae:	pop    edi
  41baaf:	outs   dx,DWORD PTR ds:[esi]
  41bab0:	inc    edx
  41bab1:	inc    esi
  41bab2:	imul   esi,DWORD PTR [edx+0x43],0x646f785d
  41bab9:	jae    0x41bac7
  41babb:	push   eax
  41babc:	pop    ecx
  41babd:	ins    BYTE PTR es:[edi],dx
  41babe:	js     0x41bac0
  41bac0:	push   ebp
  41bac1:	imul   ebp,DWORD PTR [edx+0x74],0x657e5b71
  41bac8:	pop    edx
  41bac9:	dec    ebp
  41baca:	pop    edi
  41bacb:	jne    0x41ba4f
  41bacd:	arpl   WORD PTR [edx+edx*2],bp
  41bad0:	jg     0x41bb43
  41bad2:	ins    DWORD PTR es:[edi],dx
  41bad3:	jb     0x41bad5
	...
  41badd:	add    bh,cl
  41badf:	js     0x41bb1d
  41bae1:	arpl   WORD PTR [edi+edi*4],bp
  41bae4:	push   ss
  41bae5:	ins    DWORD PTR es:[edi],dx
  41bae6:	xor    ebp,DWORD PTR [esi+0x4a32672b]
  41baec:	and    al,0x55
  41baee:	sub    bh,BYTE PTR [ecx+0x4d36724c]
  41baf4:	adc    DWORD PTR [esp+ecx*1+0x6e],ebx
  41baf8:	push   ss
  41baf9:	outs   dx,BYTE PTR ds:[esi]
  41bafa:	xor    bh,BYTE PTR [edx+0x1c]
  41bafd:	and    BYTE PTR [di+0x17],bh
  41bb01:	add    BYTE PTR [esp+edi*2],bl
  41bb04:	sbb    dh,BYTE PTR [esi-0x16]
  41bb07:	or     BYTE PTR [ecx],ah
  41bb09:	ja     0x41bb0a
  41bb0b:	jnp    0x41bb15
  41bb0d:	inc    esi
  41bb0e:	sbb    esp,DWORD PTR [edi-0x18]
  41bb11:	inc    eax
  41bb12:	sbb    BYTE PTR [ebp+0x3c],ah
  41bb15:	push   edx
  41bb16:	adc    bl,cl
  41bb18:	or     al,0x46
  41bb1a:	add    eax,edi
  41bb1c:	inc    edi
  41bb1d:	dec    ebp
  41bb1e:	add    DWORD PTR [edi],edx
  41bb20:	shr    DWORD PTR [edi-0x43],cl
  41bb23:	cmp    al,0xd
  41bb25:	pop    esp
  41bb26:	lahf   
  41bb27:	enter  0x6613,0xa6
  41bb2b:	xor    dl,BYTE PTR [edx]
  41bb2d:	jno    0x41bafe
  41bb2f:	cdq    
  41bb30:	or     esp,edi
  41bb32:	fsub   DWORD PTR [edi+edx*2+0x53e9b6e8]
  41bb39:	std    
  41bb3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb3b:	jmp    0xffd4:0x3dd57000
	...
  41bb4a:	add    BYTE PTR [eax],al
  41bb4c:	jo     0x41bb38
  41bb4e:	add    BYTE PTR [eax+0x7c],dh
  41bb51:	inc    eax
  41bb52:	aam    0x2c
  41bb54:	iret   
  41bb55:	cld    
  41bb56:	add    BYTE PTR [eax-0x4b],dh
  41bb59:	cmp    eax,0x8679ffd4
  41bb5e:	adc    dh,BYTE PTR [edx+0x6e]
  41bb61:	jg     0x41bb46
  41bb63:	adc    BYTE PTR [eax-0x6b],bh
  41bb66:	inc    edi
  41bb67:	fisubr DWORD PTR [esi+ebx*4+0x4f]
  41bb6b:	add    al,0x2a
  41bb6d:	mov    cl,0x32
  41bb6f:	and    bh,BYTE PTR [ebx]
  41bb71:	lea    eax,[esi+edx*1+0x2c]
  41bb75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb76:	and    dl,BYTE PTR [esp+ebp*1]
  41bb79:	xchg   edx,eax
  41bb7a:	inc    esp
  41bb7b:	in     al,0xff
  41bb7d:	xchg   esp,eax
  41bb7e:	dec    ecx
  41bb7f:	adc    BYTE PTR [edx],bl
  41bb81:	lahf   
  41bb82:	adc    eax,0x4b3cf1f
  41bb87:	adc    eax,0x1b1f601b
  41bb8c:	std    
  41bb8d:	call   0xd50c:0x91f21006
  41bb94:	js     0x41bb4e
  41bb96:	add    al,0x15
  41bb98:	sti    
  41bb99:	pop    edi
  41bb9a:	sub    al,0x1a
  41bb9c:	fimul  WORD PTR [ebx+0x5ff31804]
  41bba2:	mov    bl,0x22
  41bba4:	jecxz  0x41bb3d
  41bba6:	jecxz  0x41bbe0
  41bba8:	fistp  WORD PTR [edx-0x4806dd2b]
  41bbae:	mov    bh,0x36
	...
  41bbb8:	add    BYTE PTR [eax],al
  41bbba:	xchg   ebx,eax
  41bbbb:	mov    ds:0x93ac1bb6,eax
  41bbc0:	mov    edi,0xc08fa227
  41bbc5:	sbb    DWORD PTR [ebx-0x4be94d60],ecx
  41bbcb:	sahf   
  41bbcc:	cdq    
  41bbcd:	pop    ds
  41bbce:	iret   
  41bbcf:	mov    WORD PTR [esp+edx*1+0x138f9dac],ds
  41bbd6:	jle    0x41bb69
  41bbd8:	cdq    
  41bbd9:	adc    al,0xb1
  41bbdb:	mov    eax,ds:0xa3cf199c
  41bbe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbe1:	and    al,0x6c
  41bbe3:	ror    DWORD PTR [eax+eiz*4],0xb8
  41bbe7:	jg     0x41bc46
  41bbe9:	jle    0x41bb99
  41bbeb:	mov    edi,DWORD PTR [ecx+0x48]
  41bbee:	mov    ebp,0xac2850a0
  41bbf3:	mov    al,ds:0x7fff204e
  41bbf8:	aas    
  41bbf9:	cmp    edi,esi
  41bbfb:	jg     0x41bc5a
  41bbfd:	ss stc 
  41bbff:	stos   DWORD PTR es:[edi],eax
  41bc00:	pop    ecx
  41bc01:	sub    ch,bh
  41bc03:	mov    esi,0xa2c72a50
  41bc08:	jge    0x41bc44
  41bc0a:	out    dx,al
  41bc0b:	nop
  41bc0c:	push   eax
  41bc0d:	cmp    eax,0x2d678fca
  41bc12:	mov    dl,0x9d
  41bc14:	push   eax
  41bc15:	adc    cl,BYTE PTR [esi+edi*4]
  41bc18:	cmp    esp,DWORD PTR [edi]
  41bc1a:	popf   
  41bc1b:	sar    BYTE PTR [edi+ebp*1],0x0
	...
  41bc27:	add    BYTE PTR [esi-0x7f3fc3b5],dl
  41bc2d:	push   esi
  41bc2e:	cmp    BYTE PTR [eax],ch
  41bc30:	adc    al,cl
  41bc32:	pop    ds
  41bc33:	sub    ecx,DWORD PTR [edx+edi*4]
  41bc36:	aaa    
  41bc37:	adc    al,0x7f
  41bc39:	push   edx
  41bc3a:	dec    ebx
  41bc3b:	pop    ss
  41bc3c:	jg     0x41bbfc
  41bc3e:	ds push ds
  41bc40:	or     DWORD PTR [ebp+0x39],ecx
  41bc43:	push   ss
  41bc44:	(bad)  
  41bc45:	jg     0x41bca4
  41bc47:	mov    dh,0xfa
  41bc49:	stos   DWORD PTR es:[edi],eax
  41bc4a:	pop    ecx
  41bc4b:	test   al,0xfe
  41bc4d:	mov    esi,0xa2c0aa50
  41bc52:	jge    0x41bc0e
  41bc54:	out    dx,eax
  41bc55:	nop
  41bc56:	push   eax
  41bc57:	mov    ebp,0xad678fcb
  41bc5c:	mov    bl,0x9d
  41bc5e:	push   eax
  41bc5f:	xchg   edx,eax
  41bc60:	sbb    edi,DWORD PTR [esi+0x4e1fd44b]
  41bc66:	add    BYTE PTR ds:[edi],cl
  41bc69:	sub    BYTE PTR [esi+0x31],cl
  41bc6c:	xor    al,0x31
  41bc6e:	es xor al,0x29
  41bc71:	xor    BYTE PTR [eax],bh
  41bc73:	sub    eax,0x3937be34
  41bc78:	ret    
  41bc79:	sar    BYTE PTR [eax],0x38
  41bc7c:	mov    ah,0x30
  41bc7e:	inc    edi
  41bc7f:	cmp    dh,ah
  41bc81:	xor    bh,BYTE PTR [edx+esi*1]
  41bc84:	cmc    
  41bc85:	js     0x41bc93
  41bc87:	ja     0x41bca8
  41bc89:	outs   dx,DWORD PTR ds:[esi]
  41bc8a:	ins    DWORD PTR es:[edi],dx
  41bc8b:	data16 add BYTE PTR [eax],al
	...
  41bc96:	cli    
  41bc97:	imul   edi,DWORD PTR [ebx+0x72],0xffffffe8
  41bc9b:	outs   dx,BYTE PTR ds:[esi]
  41bc9c:	and    ch,BYTE PTR [ecx-0x20]
  41bc9f:	fs or  al,0x77
  41bca2:	mov    edi,0xba666d6e
  41bca7:	imul   esp,DWORD PTR [edx],0x69
  41bcaa:	shl    BYTE PTR [esp+ecx*1+0x46],1
  41bcae:	mov    edx,0xcf6f5a4b
  41bcb3:	pop    esp
  41bcb4:	addr16 gs je 0x41bce4
  41bcb8:	addr16 je 0x41bd21
  41bcbb:	jle    0x41bd07
  41bcbd:	push   esp
  41bcbe:	(bad)  
  41bcbf:	push   ecx
  41bcc0:	pop    edi
  41bcc1:	jns    0x41bc4a
  41bcc3:	popa   
  41bcc4:	ins    DWORD PTR es:[edi],dx
  41bcc5:	jb     0x41bc87
  41bcc7:	ins    BYTE PTR es:[edi],dx
  41bcc8:	imul   eax,DWORD PTR [eax],0xffffff82
  41bccb:	push   eax
  41bccc:	imul   eax,DWORD PTR fs:[eax+0x86f5b69],0x1632272
  41bcd7:	addr16 or al,0x6e
  41bcda:	gs ins DWORD PTR es:[edi],dx
  41bcdc:	cmp    ebp,DWORD PTR [esi]
  41bcde:	or     ch,BYTE PTR [edx+0x60]
  41bce1:	add    BYTE PTR [eax+0x4d],ah
  41bce4:	pop    ebx
  41bce5:	pop    edi
  41bce6:	pop    edi
  41bce7:	ins    BYTE PTR es:[edi],dx
  41bce8:	imul   esi,DWORD PTR [edi+ecx*8+0x18],0xd19c5137
  41bcf0:	cmp    eax,0x11848268
  41bcf5:	ins    DWORD PTR es:[edi],dx
  41bcf6:	js     0x41bcea
  41bcf8:	or     al,0x4e
	...
  41bd02:	add    BYTE PTR [eax],al
  41bd04:	jl     0x41bceb
  41bd06:	dec    edx
  41bd07:	pop    edi
  41bd08:	pop    esp
  41bd09:	sti    
  41bd0a:	mov    esi,0x11547833
  41bd0f:	popa   
  41bd10:	pusha  
  41bd11:	mov    esp,0xb1424211
  41bd16:	adc    ah,BYTE PTR [ebx+0x3d]
  41bd19:	pop    ss
  41bd1a:	cmp    al,0x43
  41bd1c:	or     al,0x50
  41bd1e:	cmp    al,0x43
  41bd20:	add    ah,BYTE PTR [edx+0x32]
  41bd23:	jb     0x41bd57
  41bd25:	mov    ah,0x35
  41bd27:	je     0x41bd53
  41bd29:	inc    esp
  41bd2a:	or     BYTE PTR [eax+0x4],dl
  41bd2d:	sub    dh,bl
  41bd2f:	pop    esp
  41bd30:	or     BYTE PTR [esp+ebx*1+0x47],bh
  41bd34:	stc    
  41bd35:	bound  edx,QWORD PTR [ecx]
  41bd37:	jb     0x41bd2a
  41bd39:	ja     0x41bd4f
  41bd3b:	dec    ecx
  41bd3c:	bnd jg 0x41bd7a
  41bd3f:	ins    BYTE PTR es:[edi],dx
  41bd40:	loopne 0x41bd4c
  41bd42:	or     eax,0xddc81450
  41bd47:	pop    esp
  41bd48:	push   cs
  41bd49:	or     al,0x1
  41bd4b:	push   0x670128f2
  41bd50:	in     al,dx
  41bd51:	aaa    
  41bd52:	add    DWORD PTR [ebx-0x31],esp
  41bd55:	(bad)  
  41bd56:	xor    ebp,DWORD PTR [edi]
  41bd58:	inc    ch
  41bd5a:	xor    BYTE PTR [edx-0x68],dl
  41bd5d:	rcl    BYTE PTR [ecx],cl
  41bd5f:	popa   
  41bd60:	mov    ebp,0xcf741d3f
  41bd65:	out    0x33,al
  41bd67:	das    
	...
  41bd70:	add    BYTE PTR [eax],al
  41bd72:	fdivrp st(1),st
  41bd74:	cs jb  0x41bd29
  41bd77:	jg     0x41bcf9
  41bd79:	xor    BYTE PTR [ebx-0x30fc6870],ah
  41bd7f:	jg     0x41bd64
  41bd81:	add    ecx,edi
  41bd83:	jg     0x41bd68
  41bd85:	add    ecx,edi
  41bd87:	jg     0x41bd6c
  41bd89:	add    ecx,edi
  41bd8b:	jg     0x41bd70
  41bd8d:	add    ecx,edi
  41bd8f:	jg     0x41bd74
  41bd91:	add    ecx,edi
  41bd93:	jg     0x41bd78
  41bd95:	add    ecx,edi
  41bd97:	jg     0x41bd7c
  41bd99:	add    ecx,edi
  41bd9b:	jg     0x41bd80
  41bd9d:	add    ecx,edi
  41bd9f:	mov    WORD PTR [eax+ebx*1+0x28],ss
  41bda3:	mov    WORD PTR [eax-0x2f],cs
  41bda6:	jmp    0x348c:0xcf18579b
  41bdad:	sbb    BYTE PTR [eax],dh
  41bdaf:	mov    WORD PTR [eax-0x2f],es
  41bdb2:	add    edx,DWORD PTR [ecx-0x7fd6e0cd]
  41bdb8:	push   ss
  41bdb9:	adc    esp,DWORD PTR [ebx]
  41bdbb:	xchg   edi,eax
  41bdbc:	pop    ss
  41bdbd:	pop    ds
  41bdbe:	mov    esi,0xf21806a0
  41bdc3:	mov    WORD PTR [eax],cs
  41bdc5:	add    al,0xfe
  41bdc7:	mov    ss,WORD PTR [edi]
  41bdc9:	sbb    edi,ebx
  41bdcb:	call   0x1400:0x8ddf24b6
  41bdd2:	add    BYTE PTR [esi+0x408],cl
	...
  41bde0:	fimul  WORD PTR [esi-0x6524e529]
  41bde6:	push   ss
  41bde7:	and    eax,0x13c08bbe
  41bdec:	iret   
  41bded:	mov    esp,ss
  41bdef:	pop    ss
  41bdf0:	mov    al,0x8b
  41bdf2:	rcl    al,0x93
  41bdf5:	pushf  
  41bdf6:	ret    0x9c17
  41bdf9:	xchg   edx,eax
  41bdfa:	or     al,0xc7
  41bdfc:	jmp    0x41bd9b
  41bdfe:	jae    0x41bdb5
  41be00:	mov    ecx,0xbd9a0c8e
  41be05:	xchg   ebx,eax
  41be06:	arpl   WORD PTR [ebp-0x75aeb117],dx
  41be0c:	fist   DWORD PTR [ebx-0x5d1d8389]
  41be12:	outs   dx,BYTE PTR ds:[esi]
  41be13:	xchg   ebp,eax
  41be14:	fistp  DWORD PTR [ebp-0x6d3e16f4]
  41be1a:	jbe    0x41be96
  41be1c:	mov    ebp,0xb9756393
  41be21:	dec    esi
  41be22:	and    cl,BYTE PTR [ebp-0x21]
  41be25:	xchg   ebx,eax
  41be26:	or     al,0x5a
  41be28:	ret    0x636b
  41be2b:	pop    ebp
  41be2c:	mov    dh,0xb0
  41be2e:	push   ecx
  41be2f:	ds ret 
  41be31:	bound  esp,QWORD PTR [edx-0x17]
  41be34:	mov    ecx,0xa750606e
  41be39:	bound  edi,QWORD PTR ds:0x616ba816
  41be3f:	cmp    ah,BYTE PTR [esi+0x187dff]
	...
  41be4d:	add    BYTE PTR [edi-0x3ffb879a],bl
  41be53:	pop    esp
  41be54:	jl     0x41be71
  41be56:	jbe    0x41bec7
  41be58:	imul   ebx,DWORD PTR [ebx],0x66
  41be5b:	(bad)  
  41be5c:	jge    0x41be56
  41be5e:	pusha  
  41be5f:	data16 js 0x41be66
  41be62:	mov    al,ds:0x77fd7d5c
  41be67:	outs   dx,DWORD PTR ds:[esi]
  41be68:	or     al,0xfa
  41be6a:	arpl   WORD PTR [ebx+0x63],bp
  41be6d:	frstor [edi-0x50]
  41be70:	push   ecx
  41be71:	retf   0x6b3d
  41be74:	ja     0x41be3a
  41be76:	ds pop esp
  41be78:	outs   dx,BYTE PTR ds:[esi]
  41be79:	rol    BYTE PTR [eax+0x62],1
  41be7c:	jge    0x41be7e
  41be7e:	mul    BYTE PTR es:[ecx+0x6c]
  41be82:	push   esi
  41be84:	ins    DWORD PTR es:[edi],dx
  41be85:	xor    edi,DWORD PTR [ecx]
  41be87:	out    0x5f,al
  41be89:	ins    BYTE PTR es:[edi],dx
  41be8a:	arpl   ax,si
  41be8c:	pop    esi
  41be8d:	pop    edi
  41be8e:	inc    esp
  41be8f:	out    dx,eax
  41be90:	pop    edi
  41be91:	(bad)  
  41be92:	test   BYTE PTR [edx-0x7d09fff4],0xc
  41be99:	add    dh,ah
  41be9b:	or     BYTE PTR [eax+eax*1],0xe6
  41be9f:	or     BYTE PTR [eax+eax*1],0xf6
  41bea3:	or     BYTE PTR [eax+eax*1],0xf6
  41bea7:	or     BYTE PTR [eax+eax*1],0xe6
  41beab:	or     BYTE PTR [eax+eax*1],0xe6
  41beaf:	or     BYTE PTR [eax+eax*1],0x0
	...
  41bebb:	add    BYTE PTR [esi+0x9727c82],dh
  41bec1:	jmp    0x691e:0xf7136c69
  41bec8:	sbb    ch,ch
  41beca:	lock dec edi
  41becc:	in     al,0xf2
  41bece:	imul   cx,WORD PTR [edx],0xf0e9
  41bed3:	dec    eax
  41bed4:	aad    0xd5
  41bed6:	ins    DWORD PTR es:[edi],dx
  41bed7:	ins    BYTE PTR es:[edi],dx
  41bed8:	(bad)  
  41bed9:	imul   DWORD PTR [ecx+0x76]
  41bedc:	rol    DWORD PTR [ebx-0x141d9ea4],cl
  41bee2:	lock dec edi
  41bee4:	(bad)  
  41bee5:	imul   DWORD PTR [eax+0x54]
  41bee8:	fxch   st(0)
  41beea:	js     0x41bf51
  41beec:	jbe    0x41bee0
  41beee:	jp     0x41bf55
  41bef0:	shl    dh,1
  41bef2:	push   ds
  41bef3:	push   0x55
  41bef5:	cmp    BYTE PTR [ebx+0x69],0x81
  41bef9:	lock pop edi
  41befb:	outs   dx,BYTE PTR ds:[esi]
  41befc:	and    eax,0xcf717bb0
  41bf01:	(bad)  
  41bf02:	fbstp  TBYTE PTR [ebx-0x4e]
  41bf05:	call   0xd6ea2603
  41bf0a:	std    
  41bf0b:	ins    DWORD PTR es:[edi],dx
  41bf0c:	pushf  
  41bf0d:	mov    ?,esp
  41bf0f:	ja     0x41beac
  41bf11:	call   0x3ef2260f
  41bf16:	(bad)  
  41bf17:	ins    DWORD PTR es:[edi],dx
  41bf18:	pushf  
  41bf19:	fidivr DWORD PTR [edx]
  41bf1b:	je     0x41bea4
  41bf1d:	adc    al,0xd
  41bf1f:	jno    0x41bf21
	...
  41bf29:	add    BYTE PTR [esi+0xd],dh
  41bf2c:	sti    
  41bf2d:	ins    BYTE PTR es:[edi],dx
  41bf2e:	imul   ebx,DWORD PTR [ecx],0x7b2e3a
  41bf34:	stc    
  41bf35:	jmp    FWORD PTR [ebp-0x520015c6]
  41bf3b:	cmp    ch,cl
  41bf3d:	jmp    FWORD PTR [ebp+0x7dffe43a]
  41bf43:	stos   DWORD PTR es:[edi],eax
  41bf44:	fadd   QWORD PTR [edx+0xc]
  41bf47:	mov    bl,0x28
  41bf49:	push   0x6df45a30
  41bf4e:	cs mov esp,0x4bef2be9
  41bf54:	(bad)  
  41bf55:	pusha  
  41bf56:	sbb    eax,0x2a73f840
  41bf5b:	dec    ebx
  41bf5c:	fnstenv [eax+0x32]
  41bf5f:	mov    ecx,0x8c225efe
  41bf64:	cmp    al,0x20
  41bf66:	repnz mov edi,fs
  41bf69:	jno    0x41bf71
  41bf6b:	xchg   edi,eax
  41bf6c:	hlt    
  41bf6d:	(bad)
  41bf72:	cld    
  41bf73:	std    
  41bf74:	sti    
  41bf75:	jno    0x41bf6a
  41bf77:	mov    dl,0x51
  41bf7a:	adc    BYTE PTR [eax+ebp*1-0x140f1795],ah
  41bf81:	imul   esp,eax,0x7f
  41bf84:	ret    0xbaea
  41bf87:	jo     0x41bf6c
  41bf89:	leave  
  41bf8a:	test   eax,0xe9c071
	...
  41bf97:	add    BYTE PTR [ebx-0x7a201c89],ch
  41bf9d:	ins    BYTE PTR es:[edi],dx
  41bf9e:	int    0xea
  41bfa0:	mov    ah,0x6b
  41bfa2:	(bad)  
  41bfa3:	fisttp WORD PTR [edx-0x4d194a9a]
  41bfa9:	ins    BYTE PTR es:[edi],dx
  41bfaa:	mov    ebx,0x9a5210df
  41bfaf:	jmp    0xf5c63430
  41bfb4:	ins    DWORD PTR es:[edi],dx
  41bfb5:	pop    ebx
  41bfb6:	test   al,0xf0
  41bfb8:	jbe    0x41c020
  41bfba:	outs   dx,DWORD PTR ds:[esi]
  41bfbb:	out    dx,eax
  41bfbc:	xchg   ecx,eax
  41bfbd:	jg     0x41bf97
  41bfbf:	cs mov ah,0x7f
  41bfc2:	mov    edi,esi
  41bfc4:	jo     0x41bf7f
  41bfc6:	retf   0xcf30
  41bfc9:	addr16 ja 0x41bfc3
  41bfcc:	pusha  
  41bfcd:	mov    ecx,0x67cf311a
  41bfd2:	push   edi
  41bfd3:	clc    
  41bfd4:	xor    BYTE PTR [ecx+0x1d],dh
  41bfd7:	xor    edx,ebp
  41bfd9:	jg     0x41c024
  41bfdb:	clc    
  41bfdc:	and    BYTE PTR [esi+0x7231e9e3],ch
  41bfe2:	dec    eax
  41bfe3:	retf   0x4ffc
  41bfe6:	ss jmp 0x41c005
  41bfe9:	arpl   WORD PTR [esi],si
  41bfeb:	xor    ch,BYTE PTR [ebx]
  41bfed:	pop    edi
  41bfee:	(bad)  
  41bff0:	push   ds
  41bff1:	arpl   WORD PTR [edi+ecx*8],ax
  41bff4:	rep ins DWORD PTR es:[edi],dx
  41bff6:	push   cs
  41bff7:	out    0x1,eax
  41bff9:	sbb    BYTE PTR [edi],0xcf
	...
  41c004:	add    BYTE PTR [eax],al
  41c006:	jecxz  0x41c081
  41c008:	sbb    al,0xf0
  41c00a:	hlt    
  41c00b:	pop    esi
  41c00c:	pmullw mm5,mm5
  41c00f:	pop    esi
  41c010:	or     al,0x24
  41c012:	pop    esi
  41c013:	push   0x65
  41c015:	add    al,0x54
  41c017:	pop    eax
  41c018:	or     al,0xaf
  41c01a:	cmp    BYTE PTR [ebx+0x6d],ch
  41c01d:	ror    ah,cl
  41c01f:	pop    ebx
  41c020:	dec    edx
  41c021:	lds    edi,FWORD PTR [edi]
  41c023:	pop    edi
  41c024:	lods   eax,DWORD PTR gs:[esi]
  41c026:	or     ch,BYTE PTR [esi+0x61]
  41c029:	mov    esi,0x9d7e6123
  41c02e:	int3   
  41c02f:	dec    eax
  41c030:	popa   
  41c031:	mov    bl,0x25
  41c033:	push   0x5bccc860
  41c038:	aas    
  41c039:	xchg   esi,eax
  41c03a:	or     ah,BYTE PTR [ebp+0x60]
  41c03d:	(bad)  
  41c03e:	in     eax,dx
  41c03f:	push   edi
  41c040:	pop    esp
  41c041:	fwait
  41c042:	jmp    DWORD PTR [ecx+0x63]
  41c045:	jge    0x41c030
  41c047:	outs   dx,BYTE PTR ds:[esi]
  41c048:	push   eax
  41c049:	jmp    0x75ac2b51
  41c04e:	out    0x5c,eax
  41c050:	jle    0x41bfde
  41c052:	clc    
  41c053:	inc    edi
  41c054:	addr16 test bl,ch
  41c057:	arpl   WORD PTR [edx+0x3d],cx
  41c05a:	mov    ds:0xbb594bfb,eax
  41c05f:	aas    
  41c060:	arpl   WORD PTR [ebx-0x2d],bx
  41c063:	dec    ebx
  41c064:	popa   
  41c065:	dec    edx
  41c066:	stos   BYTE PTR es:[edi],al
  41c067:	addr16 dec eax
  41c069:	push   eax
	...
  41c072:	add    BYTE PTR [eax],al
  41c074:	popf   
  41c075:	sti    
  41c076:	push   0x4e
  41c078:	mov    al,0x68
  41c07a:	pop    edi
  41c07b:	dec    eax
  41c07c:	popf   
  41c07d:	push   0x6faa4522
  41c082:	or     al,0x3a
  41c084:	jp     0x41c0f5
  41c086:	xor    BYTE PTR [bx+di+0x65],dh
  41c08a:	popa   
  41c08b:	(bad)  
  41c08c:	mov    ds:0x81e95c45,eax
  41c091:	pop    edi
  41c092:	arpl   WORD PTR [eax],ax
  41c094:	rol    BYTE PTR [ebx-0x15a79eb6],0x7a
  41c09b:	imul   ebx,DWORD PTR [edx-0x18],0xe4ca2e7b
  41c0a2:	jl     0x41c0a4
  41c0a4:	mov    esp,ebp
  41c0a6:	pop    esi
  41c0a7:	inc    esi
  41c0a8:	jp     0x41c079
  41c0aa:	lock jb 0x41c0bc
  41c0ad:	rep ins DWORD PTR es:[edi],dx
  41c0af:	jae    0x41c0e1
  41c0b1:	jecxz  0x41c11d
  41c0b3:	add    BYTE PTR [ebp-0x35],dh
  41c0b6:	pop    ebx
  41c0b7:	dec    ecx
  41c0b8:	push   0xffffffdb
  41c0ba:	jae    0x41c0ed
  41c0bc:	pop    ss
  41c0bd:	mov    esi,0xb3194421
  41c0c2:	and    DWORD PTR ds:0x423dbc37,ebp
  41c0c8:	adc    esi,DWORD PTR [ecx+eiz*1+0x34b01464]
  41c0cf:	inc    ecx
  41c0d0:	push   ds
  41c0d1:	scas   eax,DWORD PTR es:[edi]
  41c0d2:	and    eax,0x3cb72630
  41c0d7:	inc    ecx
	...
  41c0e0:	add    BYTE PTR [eax],al
  41c0e2:	sub    al,cl
  41c0e4:	cmp    esi,DWORD PTR [edx]
  41c0e6:	sub    ch,al
  41c0e8:	cmp    al,0x7d
  41c0ea:	inc    edx
  41c0eb:	int3   
  41c0ec:	pop    esi
  41c0ed:	push   eax
  41c0ee:	and    al,0xeb
  41c0f0:	imul   edx,DWORD PTR [ebx+0xb],0xffffffee
  41c0f4:	jbe    0x41c15b
  41c0f6:	adc    al,0xaf
  41c0f8:	add    BYTE PTR ds:0x1b767ae9,dl
  41c0ff:	out    dx,al
  41c100:	jnp    0x41c130
  41c102:	push   cs
  41c103:	icebp  
  41c104:	fs add dl,al
  41c107:	rcr    DWORD PTR [eax+edx*2-0x17],0xe8
  41c10c:	jl     0x41c182
  41c10e:	fucomi st,st(5)
  41c110:	lock inc esp
  41c112:	(bad)
  41c115:	(bad)  
  41c116:	iret   
  41c117:	(bad)  
  41c118:	push   ds
  41c119:	fs out dx,al
  41c11b:	xchg   esp,eax
  41c11c:	or     BYTE PTR [edi+0x13],cl
  41c11f:	mov    ah,dh
  41c121:	pop    esi
  41c122:	mov    cl,0x84
  41c124:	out    0x73,eax
  41c126:	iret   
  41c127:	xchg   esp,eax
  41c128:	ret    
  41c129:	jo     0x41c106
  41c12b:	cmc    
  41c12c:	loope  0x41c193
  41c12e:	ret    
  41c12f:	(bad)  
  41c130:	(bad)  
  41c131:	dec    ebx
  41c132:	mov    DWORD PTR [ebx*8-0x73d7801],esi
  41c139:	bound  edi,QWORD PTR [ebp-0x108c1bc6]
  41c13f:	sub    esi,ebp
  41c141:	outs   dx,DWORD PTR ds:[esi]
  41c142:	mov    bl,0xc9
  41c144:	cli    
  41c145:	bound  eax,QWORD PTR [eax]
	...
  41c14f:	add    BYTE PTR [ebp-0x5e992618],bl
  41c155:	mov    edi,0x258362de
  41c15a:	call   0xce4538bf
  41c15f:	jno    0x41c1d3
  41c161:	or     al,0xe4
  41c163:	ins    DWORD PTR es:[edi],dx
  41c164:	jnp    0x41c165
  41c166:	out    0x6b,eax
  41c168:	pop    esp
  41c169:	call   0x2ff11249
  41c16e:	les    ebx,FWORD PTR [edi]
  41c170:	xchg   ecx,eax
  41c171:	sbb    al,0xdd
  41c173:	pop    ds
  41c174:	jg     0x41c17d
  41c176:	(bad)  
  41c177:	jo     0x41c1b9
  41c179:	push   edx
  41c17a:	(bad)  
  41c17b:	arpl   WORD PTR [edi+eiz*8],di
  41c17e:	enter  0xe4f,0xb7
  41c182:	lds    edi,FWORD PTR [ecx]
  41c184:	out    dx,eax
  41c185:	out    0xcc,al
  41c187:	dec    ecx
  41c188:	loopne 0x41c10c
  41c18a:	fs mov edx,0x7bafd890
  41c190:	iret   
  41c191:	cld    
  41c192:	pop    es
  41c193:	or     DWORD PTR [bx+di],edi
  41c196:	int    0x49
  41c198:	sar    BYTE PTR [edi-0x19],0x67
  41c19c:	inc    ebp
  41c19d:	leave  
  41c19e:	repz mov esp,0x44d7ff4
  41c1a4:	call   0x170432ea
  41c1a9:	mov    cl,0xc7
  41c1ab:	addr16 and eax,0xd4bcd3c9
  41c1b1:	jg     0x41c200
  41c1b3:	add    al,0x0
	...
  41c1bd:	add    al,ch
  41c1bf:	inc    ecx
  41c1c0:	jno    0x41c1ff
  41c1c2:	iret   
  41c1c3:	jg     0x41c1a8
  41c1c5:	jmp    FWORD PTR es:[ebp+0x689e03cb]
  41c1cc:	shl    edi,0xbb
  41c1cf:	pop    esi
  41c1d0:	aad    0xe6
  41c1d2:	test   BYTE PTR [edx-0x24],cl
  41c1d5:	loopne 0x41c175
  41c1d7:	push   0x73b2ecb6
  41c1dc:	xchg   edi,eax
  41c1dd:	retf   0x73a2
  41c1e0:	enter  0x7af1,0x62
  41c1e4:	(bad)  
  41c1e5:	and    ecx,DWORD PTR [edi+esi*2+0x6d6bef93]
  41c1ec:	xor    cl,0x94
  41c1ef:	inc    esi
  41c1f0:	jno    0x41c1e9
  41c1f2:	ins    DWORD PTR es:[edi],dx
  41c1f3:	imul   edx,DWORD PTR [edi+0x75688aea],0xffffffee
  41c1fa:	pop    edi
  41c1fb:	pop    ebx
  41c1fc:	xchg   esi,eax
  41c1fd:	mul    DWORD PTR [ebx+0x6d]
  41c200:	test   ah,ah
  41c202:	sub    eax,0xcf03e3ae
  41c207:	jg     0x41c1ec
  41c209:	loop   0x41c1c3
  41c20b:	pop    esi
  41c20c:	jecxz  0x41c1f4
  41c20e:	mov    al,0xae
  41c210:	jecxz  0x41c24d
  41c212:	iret   
  41c213:	mov    cl,0xe3
  41c215:	cmp    cl,bh
  41c217:	popa   
  41c218:	jecxz  0x41c248
  41c21a:	iret   
  41c21b:	mov    dh,0xc
  41c21d:	jmp    0xe97ebad0
	...
  41c22a:	add    BYTE PTR [eax],al
  41c22c:	ret    
  41c22d:	jg     0x41c24e
  41c22f:	jmp    0xe9af41ec
  41c234:	jo     0x41c22e
  41c236:	xor    ebp,ecx
  41c238:	mov    eax,ds:0x9fe96b7f
  41c23d:	jg     0x41c276
  41c23f:	jmp    0xe96141e8
  41c244:	outs   dx,DWORD PTR ds:[esi]
  41c245:	clc    
  41c246:	cmp    ch,cl
  41c248:	sahf   
  41c249:	jg     0x41c27e
  41c24b:	jmp    0xe97a424c
  41c250:	sub    al,bh
  41c252:	push   0xffffffe9
  41c254:	sub    eax,0x2ae939f8
  41c259:	clc    
  41c25a:	cmp    ecx,ebp
  41c25c:	int3   
  41c25d:	jg     0x41c29e
  41c25f:	shr    BYTE PTR [edi],1
  41c261:	outs   dx,BYTE PTR ds:[esi]
  41c262:	popa   
  41c263:	mov    edx,0x9678622b
  41c268:	sti    
  41c269:	pusha  
  41c26a:	bound  esp,QWORD PTR [eax-0x3987a306]
  41c270:	mov    dh,0x7f
  41c272:	push   0xffffff95
  41c274:	cld    
  41c275:	mov    ch,0x21
  41c277:	(bad)  
  41c278:	int3   
  41c279:	dec    esi
  41c27a:	popa   
  41c27b:	xchg   eax,esp
  41c27d:	jb     0x41c2ea
  41c27f:	jnp    0x41c26a
  41c281:	push   ebx
  41c282:	dec    ebx
  41c283:	test   ebx,ebp
  41c285:	pop    ebp
  41c286:	addr16 xchg ebp,eax
  41c288:	packssdw mm3,QWORD PTR [edi+0x7c]
  41c28c:	mov    ebx,0x3a0c65
	...
  41c299:	add    BYTE PTR [edx-0x51c5988d],dh
  41c29f:	jno    0x41c31b
  41c2a1:	dec    esp
  41c2a2:	mov    ecx,0xba3a0c70
  41c2a7:	jae    0x41c310
  41c2a9:	add    ch,al
  41c2ab:	loopne 0x41c327
  41c2ad:	jbe    0x41c2c2
  41c2af:	out    dx,al
  41c2b0:	adc    BYTE PTR ds:0x6f48d802,ah
  41c2b6:	(bad)
  41c2b9:	push   edx
  41c2ba:	fucomip st,st(7)
  41c2bc:	ins    DWORD PTR es:[edi],dx
  41c2bd:	push   ebx
  41c2be:	shr    ebp,cl
  41c2c0:	jbe    0x41c327
  41c2c2:	aam    0x9b
  41c2c4:	sub    eax,0x6dd2ba64
  41c2c9:	(bad)
  41c2ce:	mov    ch,0xe4
  41c2d0:	jl     0x41c337
  41c2d2:	mov    ch,0xe0
  41c2d4:	jp     0x41c34c
  41c2d6:	shr    ebp,cl
  41c2d8:	adc    BYTE PTR ds:0x655acf12,ah
  41c2de:	or     ebp,edx
  41c2e0:	jl     0x41c347
  41c2e2:	(bad)  
  41c2e3:	mov    edi,0xde137269
  41c2e8:	jl     0x41c359
  41c2ea:	fs hlt 
  41c2ec:	lock push edx
  41c2ee:	jmp    esi
  41c2f0:	ins    DWORD PTR es:[edi],dx
  41c2f1:	push   ebx
  41c2f2:	add    ebp,ebp
  41c2f4:	jbe    0x41c35b
  41c2f6:	inc    esp
  41c2f7:	mov    ds:0xd01b642d,eax
  41c2fc:	jnp    0x41c363
	...
  41c306:	add    BYTE PTR [eax],al
  41c308:	push   esp
  41c309:	sbb    DWORD PTR [ebx+0x69],0x52
  41c30d:	loopne 0x41c36a
  41c30f:	gs inc esp
  41c311:	icebp  
  41c312:	ins    DWORD PTR es:[edi],dx
  41c313:	jb     0x41c32b
  41c315:	mov    al,ds:0xee432d68
  41c31a:	ins    DWORD PTR es:[edi],dx
  41c31b:	jb     0x41c323
  41c31d:	rcl    DWORD PTR [edi+0x0],cl
  41c320:	xchg   ebx,eax
  41c321:	in     eax,dx
  41c322:	push   esp
  41c323:	dec    ebx
  41c324:	adc    esi,ebp
  41c326:	imul   ebp,DWORD PTR [eax+0x7],0xffffffe5
  41c32a:	pop    esi
  41c32b:	add    bh,cl
  41c32d:	mov    ecx,0xba3273df
  41c332:	jmp    0x41c3a5
  41c334:	sbb    DWORD PTR [edx+edi*8+0x1f],eax
  41c338:	repnz cmp al,0xd4
  41c33b:	push   eax
  41c33c:	or     DWORD PTR [ebp+0x3c0cffd8],edx
  41c342:	in     al,0x72
  41c344:	pop    es
  41c345:	test   dh,cl
  41c347:	push   ebx
  41c348:	pop    ds
  41c349:	jmp    0x843d2a47
  41c34e:	stc    
  41c34f:	sub    eax,0xffe8f3e7
  41c354:	stc    
  41c355:	sub    edx,0x1f
  41c358:	adc    ecx,DWORD PTR [eax-0x6330a104]
  41c35e:	in     eax,0x64
  41c360:	mov    dh,0xf6
  41c362:	sub    al,0x44
  41c364:	scas   al,BYTE PTR es:[edi]
  41c365:	aam    0xe7
  41c367:	call   FWORD PTR [ebp+0x66c937]
	...
  41c375:	add    BYTE PTR [ebx-0x4799d33d],bh
  41c37b:	(bad)  
  41c37d:	pop    esi
  41c37e:	fwait
  41c37f:	mov    BYTE PTR [ecx],bh
  41c381:	add    BYTE PTR [ebx-0x55941939],ah
  41c387:	call   0xe8f7c3b0
  41c38c:	sub    al,0x0
  41c38e:	mov    WORD PTR ds:0x3aa350c3,gs
  41c394:	enter  0x8146,0x34
  41c398:	or     eax,0xc41f7d50
  41c39d:	ds jge 0x41c3bf
  41c3a0:	or     eax,0xd82f8953
  41c3a5:	push   edx
  41c3a6:	mov    ch,al
  41c3a8:	leave  
  41c3a9:	inc    edi
  41c3aa:	adc    ch,BYTE PTR [edx]
  41c3ac:	ret    0xaff
  41c3af:	cmp    BYTE PTR [edx],0xd6
  41c3b2:	or     eax,0xb0ca2a47
  41c3b7:	cmc    
  41c3b8:	inc    esi
  41c3b9:	jmp    0xf5732af1
  41c3be:	mov    al,ds:0x33eb3566
  41c3c3:	addr16 inc ecx
  41c3c5:	fstp   DWORD PTR ds:0xff044772
  41c3cb:	pop    esi
  41c3cc:	ss cmc 
  41c3ce:	sti    
  41c3cf:	fs adc eax,0x46e1be0
  41c3d5:	call   0xef251ed7
	...
  41c3e2:	add    BYTE PTR [eax],al
  41c3e4:	fistp  WORD PTR [edx+0x15]
  41c3e7:	jmp    0x5ee2:0xd9006301
  41c3ee:	(bad)  
  41c3ef:	out    dx,al
  41c3f0:	in     eax,dx
  41c3f1:	jg     0x41c3f4
  41c3f3:	lock mov eax,0xcf28b2b9
  41c3f9:	addr16 iret 
  41c3fb:	out    dx,eax
  41c3fc:	test   al,0xb9
  41c3fe:	add    ch,BYTE PTR [ecx]
  41c400:	iret   
  41c401:	addr16 iret 
  41c403:	out    dx,eax
  41c404:	mov    eax,0xf2291d70
  41c409:	jg     0x41c3b2
  41c40b:	shr    BYTE PTR [ebx-0x5218359c],0x53
  41c412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c413:	jmp    0x41c493
  41c415:	fs mov al,0xde
  41c418:	add    BYTE PTR [ecx-0x5a],bl
  41c41b:	jmp    0x41c49b
  41c41d:	fs sub dl,0x7d
  41c421:	(bad)
  41c426:	xchg   ebp,eax
  41c427:	call   0xe7d51ea1
  41c42c:	pop    ebp
  41c42d:	jo     0x41c412
  41c42f:	aam    0x63
  41c431:	pop    ebp
  41c432:	or     al,0x7d
  41c434:	mov    edi,0x98847e55
  41c439:	aas    
  41c43a:	fs pop ebx
  41c43c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c43d:	imul   esp,DWORD PTR [edi+0x39],0xe97d71a7
  41c444:	xchg   ebp,eax
  41c445:	bound  edi,QWORD PTR [ebp+0x55]
	...
  41c450:	add    BYTE PTR [eax],al
  41c452:	lods   al,BYTE PTR ds:[esi]
  41c453:	push   0x5d8f2660
  41c458:	jle    0x41c443
  41c45a:	js     0x41c49a
  41c45c:	jle    0x41c4a4
  41c45e:	jo     0x41c4bd
  41c460:	ja     0x41c49e
  41c462:	retf   
  41c463:	push   ebx
  41c464:	inc    edx
  41c465:	adc    BYTE PTR [edx+0x5c],dh
  41c468:	jle    0x41c478
  41c46a:	push   0x92350c61
  41c46f:	arpl   WORD PTR [edi-0x2],bx
  41c472:	and    BYTE PTR [ebx+0xc],0x25
  41c476:	and    DWORD PTR [ebx+0x6d],0x60618812
  41c47d:	std    
  41c47e:	int3   
  41c47f:	inc    esi
  41c480:	pop    ds
  41c481:	sbb    al,0x20
  41c483:	push   0xf426d667
  41c488:	push   esp
  41c489:	mov    dl,0xe9
  41c48b:	dec    eax
  41c48c:	lds    ecx,FWORD PTR [bx+di]
  41c48f:	arpl   WORD PTR [edx-0x17],sp
  41c492:	clc    
  41c493:	inc    ebx
  41c494:	jle    0x41c46c
  41c496:	cs pop ebp
  41c498:	pusha  
  41c499:	les    ebx,FWORD PTR [ebx]
  41c49b:	hlt    
  41c49c:	inc    edi
  41c49d:	mov    ecx,0x8d0c5ef5
  41c4a2:	inc    ecx
  41c4a3:	arpl   WORD PTR fs:[edx-0x6f83bee0],cx
  41c4aa:	jmp    0x41c49f
  41c4ac:	pop    ebp
  41c4ad:	popf   
  41c4ae:	in     eax,dx
  41c4af:	pop    ecx
  41c4b0:	push   0xffffffbc
  41c4b2:	push   cs
  41c4b3:	push   eax
  41c4b4:	pop    esp
	...
  41c4bd:	add    BYTE PTR [eax],al
  41c4bf:	add    dh,ah
  41c4c1:	jmp    0x691e:0xeb4b7469
  41c4c8:	push   eax
  41c4c9:	out    0xf0,al
  41c4cb:	pop    ebx
  41c4cc:	gs out 0x7c,al
  41c4cf:	gs adc eax,0x1f56507c
  41c4d5:	out    dx,eax
  41c4d6:	imul   esp,DWORD PTR [ebx+0x11],0xb4d10e9
  41c4dd:	loopne 0x41c548
  41c4df:	popa   
  41c4e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4e1:	popf   
  41c4e2:	push   0x74
  41c4e4:	(bad)  
  41c4e5:	jnp    0x41c542
  41c4e7:	add    BYTE PTR [ebx],bl
  41c4e9:	jl     0x41c563
  41c4eb:	add    BYTE PTR [edx-0x1fff9685],bh
  41c4f1:	jnp    0x41c55a
  41c4f3:	add    ch,dl
  41c4f5:	jnp    0x41c503
  41c4f7:	add    BYTE PTR [edx-0x2b909ace],ah
  41c4fd:	fsub   QWORD PTR [eax+eiz*1-0x56]
  41c501:	fidiv  DWORD PTR [edi+0x6e]
  41c504:	ret    0x51da
  41c507:	fs fucomi st,st(5)
  41c50a:	lock push edx
  41c50c:	jecxz  0x41c4a7
  41c50e:	push   ecx
  41c50f:	jb     0x41c516
  41c511:	out    0xf0,eax
  41c513:	inc    ebp
  41c514:	adc    al,0xe0
  41c516:	jnp    0x41c580
  41c518:	js     0x41c4dd
  41c51a:	inc    eax
  41c51b:	add    BYTE PTR [eax],ah
  41c51d:	into   
  41c51e:	inc    ebp
  41c51f:	inc    esi
  41c520:	shl    DWORD PTR es:[ecx+eiz*2+0x0],0x0
	...
  41c52e:	or     al,0xe0
  41c530:	inc    esi
  41c531:	je     0x41c579
  41c533:	jg     0x41c5b0
  41c535:	imul   edi,DWORD PTR [edx],0x47641ee0
  41c53b:	jecxz  0x41c52d
  41c53d:	dec    ebx
  41c53e:	inc    edi
  41c53f:	out    dx,al
  41c540:	jl     0x41c592
  41c542:	iret   
  41c543:	pop    es
  41c544:	(bad)  
  41c545:	jo     0x41c59f
  41c547:	jno    0x41c544
  41c549:	arpl   di,cx
  41c54b:	sub    al,0xe8
  41c54d:	jo     0x41c5aa
  41c54f:	daa    
  41c550:	shl    DWORD PTR [ebx+0x3d],1
  41c553:	add    al,0xfe
  41c555:	jo     0x41c526
  41c557:	adc    al,0xe8
  41c559:	jo     0x41c59e
  41c55b:	mov    ah,0xfd
  41c55d:	bound  edi,QWORD PTR ds:0x1c5ec8e9
  41c563:	push   ebp
  41c564:	fsubr  DWORD PTR [ebp+ebx*1+0x4d]
  41c568:	or     BYTE PTR [ecx+0x28],dl
  41c56b:	inc    ebx
  41c56c:	cld    
  41c56d:	je     0x41c59d
  41c56f:	mov    bh,0xeb
  41c571:	pop    ebx
  41c572:	adc    DWORD PTR ds:0x98f770e7,edi
  41c578:	jmp    0x41c5d8
  41c57a:	in     al,0x3c
  41c57c:	into   
  41c57d:	imul   ebp,esi,0xffffff9e
  41c580:	jmp    0x41c5c7
  41c582:	jecxz  0x41c51c
  41c584:	aam    0x50
  41c586:	jmp    0xfd81:0xe966fc8c
  41c58d:	push   esp
  41c58f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c590:	in     al,0x5e
	...
  41c59a:	add    BYTE PTR [eax],al
  41c59c:	lds    eax,FWORD PTR [ebx-0x17408c4e]
  41c5a2:	es mov di,0xccc
  41c5a7:	inc    esi
  41c5a8:	fwait
  41c5a9:	cmp    BYTE PTR [esi],ah
  41c5ab:	sub    ecx,edi
  41c5ad:	sbb    al,0xe0
  41c5af:	ins    DWORD PTR es:[edi],dx
  41c5b0:	mov    ah,0x24
  41c5b2:	(bad)  
  41c5b3:	addr16 mov dl,0xcc
  41c5b6:	call   0xec7a6616
  41c5bb:	ins    DWORD PTR es:[edi],dx
  41c5bc:	stos   DWORD PTR es:[edi],eax
  41c5bd:	vpunpckhdq xmm6,xmm2,XMMWORD PTR [edx-0x39]
  41c5c2:	out    0x63,al
  41c5c4:	iret   
  41c5c5:	jg     0x41c569
  41c5c7:	out    0x8a,al
  41c5c9:	dec    ebx
  41c5ca:	mov    bl,0x3
  41c5cc:	mov    fs,WORD PTR [edx-0x77]
  41c5cf:	in     eax,0x6d
  41c5d1:	pop    esi
  41c5d2:	xchg   edi,eax
  41c5d3:	in     al,dx
  41c5d4:	imul   esp,DWORD PTR [ecx+0x76],0x25
  41c5d8:	pop    ebx
  41c5d9:	ja     0x41c652
  41c5db:	add    edi,esi
  41c5dd:	cmp    ecx,eax
  41c5df:	mov    ebp,0xf2e3501c
  41c5e4:	xor    DWORD PTR [eax+eax*2-0xf],ebp
  41c5e8:	loop   0x41c650
  41c5ea:	inc    ecx
  41c5eb:	jmp    0x41c595
  41c5ed:	push   ebp
  41c5ee:	push   ss
  41c5ef:	shl    ch,0x39
  41c5f2:	aaa    
  41c5f3:	aam    0x98
  41c5f5:	push   ebp
  41c5f6:	push   ss
  41c5f7:	jmp    0x41c615
  41c5f9:	pop    ebx
  41c5fa:	daa    
  41c5fb:	(bad)  
  41c5fd:	inc    dx
  41c5ff:	out    0x0,al
	...
  41c609:	add    ch,ch
  41c60b:	ins    DWORD PTR es:[edi],dx
  41c60c:	jecxz  0x41c5de
  41c60e:	or     edi,DWORD PTR [edx]
  41c610:	das    
  41c611:	int    0xb1
  41c613:	dec    ebp
  41c614:	sub    al,bl
  41c616:	pcmpgtb mm0,QWORD PTR [ecx+esi*8]
  41c61a:	fistp  WORD PTR [edx+0x16]
  41c61d:	fdivr  st,st(4)
  41c61f:	jbe    0x41c614
  41c621:	fiadd  WORD PTR [edi+eiz*2]
  41c624:	add    eax,0xbc39c7d8
  41c629:	xor    edi,ebx
  41c62b:	lods   al,BYTE PTR ds:[esi]
  41c62c:	es cmp al,0xf7
  41c62f:	mov    ds:0xad892da1,al
  41c634:	add    BYTE PTR [ebx],dh
  41c636:	fild   QWORD PTR [esi-0x531fd95c]
  41c63c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c63d:	cmp    ah,ah
  41c63f:	scas   eax,DWORD PTR es:[edi]
  41c640:	or     esi,DWORD PTR [edi+ebx*8]
  41c643:	lods   eax,DWORD PTR ds:[esi]
  41c644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c645:	xor    DWORD PTR [ecx+0x42f00cab],edx
  41c64b:	aas    
  41c64c:	outs   dx,DWORD PTR ds:[esi]
  41c64d:	lea    edi,[ebp-0x433ac15f]
  41c653:	push   ebx
  41c654:	jns    0x41c5e6
  41c656:	repnz scas eax,DWORD PTR es:[edi]
  41c658:	ds jmp 0x90bf187f
  41c65e:	sbb    cl,BYTE PTR [ebp+0x5c]
  41c661:	jmp    0x75a9095e
  41c666:	lahf   
  41c667:	push   ecx
  41c668:	jle    0x41c5f2
  41c66a:	stos   BYTE PTR es:[edi],al
  41c66b:	pop    ebx
  41c66c:	or     al,0xbf
	...
  41c676:	add    BYTE PTR [eax],al
  41c678:	mov    ah,0x5a
  41c67a:	jl     0x41c665
  41c67c:	jmp    0x474b:0xd359686d
  41c683:	cmp    ecx,DWORD PTR [eax-0xdc8a1b1]
  41c689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c68a:	or     al,0x39
  41c68c:	lods   al,BYTE PTR ds:[esi]
  41c68d:	outs   dx,DWORD PTR ds:[esi]
  41c68e:	jge    0x41c6c6
  41c690:	jb     0x41c700
  41c692:	push   0x36a0b009
  41c697:	dec    ebx
  41c698:	mov    ch,0x7f
  41c69a:	ja     0x41c6b6
  41c69c:	nop
  41c69d:	outs   dx,BYTE PTR ds:[esi]
  41c69e:	bound  ecx,QWORD PTR [eax]
  41c6a0:	jo     0x41c6ff
  41c6a2:	sbb    ah,BYTE PTR ss:[ebp+0x67146a7f]
  41c6a9:	fs sub al,0x8
  41c6ac:	outs   dx,DWORD PTR ds:[esi]
  41c6ad:	pop    esp
  41c6ae:	jle    0x41c6b4
  41c6b0:	outs   dx,DWORD PTR ds:[esi]
  41c6b2:	ss cli 
  41c6b4:	push   es
  41c6b5:	and    BYTE PTR [edx],0xe9
  41c6b8:	or     BYTE PTR ds:0x4e1fb45e,bh
  41c6be:	pop    edx
  41c6bf:	push   cs
  41c6c0:	sar    DWORD PTR [ecx],cl
  41c6c2:	pop    eax
  41c6c3:	mov    ecx,0xd66141ec
  41c6c8:	int3   
  41c6c9:	cmp    DWORD PTR [eax+0x0],ebx
  41c6cc:	ss mov edx,0xeef6775f
  41c6d2:	imul   esi,DWORD PTR [ebx+edx*1-0x11],0xd83b781e
  41c6da:	lock push edx
	...
  41c6e4:	add    BYTE PTR [eax],al
  41c6e6:	cmp    DWORD PTR [edx],esi
  41c6e8:	pop    ebp
  41c6e9:	push   edi
  41c6ea:	aaa    
  41c6eb:	into   
  41c6ec:	dec    ebp
  41c6ed:	pop    esp
  41c6ee:	and    al,0xdb
  41c6f0:	push   0x6f
  41c6f2:	sbb    esi,DWORD PTR [edx]
  41c6f4:	pop    ebp
  41c6f5:	push   eax
  41c6f6:	push   es
  41c6f7:	scas   eax,DWORD PTR es:[edi]
  41c6f8:	and    dh,BYTE PTR [edi]
  41c6fa:	push   0xffffffd0
  41c6fc:	imul   esi,DWORD PTR [edx+0x4f],0xfffffff3
  41c700:	jl     0x41c775
  41c702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c703:	sar    BYTE PTR [edi],1
  41c705:	inc    esi
  41c706:	repnz retf 0x5231
  41c70a:	repz iret 
  41c70c:	pop    edx
  41c70d:	outs   dx,DWORD PTR ds:[esi]
  41c70e:	adc    al,0xe3
  41c710:	and    eax,0x10d3e246
  41c715:	xor    edi,DWORD PTR [eax-0x1db9af56]
  41c71b:	rcr    DWORD PTR [ebx+0x65],cl
  41c71e:	(bad)  
  41c71f:	jmp    0x83f73991
  41c724:	dec    edx
  41c725:	push   esp
  41c726:	mov    dh,0xa3
  41c728:	dec    ebx
  41c729:	outs   dx,DWORD PTR ds:[esi]
  41c72a:	ret    
  41c72b:	loope  0x41c7a9
  41c72d:	add    BYTE PTR [eax-0x4fdfbf39],dh
  41c733:	int3   
  41c734:	fs gs and edi,0xfffffff0
  41c739:	dec    edi
  41c73a:	xlat   BYTE PTR ds:[ebx]
  41c73b:	idiv   BYTE PTR [ebx+0x77]
  41c73e:	leave  
  41c73f:	cmc    
  41c740:	ins    BYTE PTR es:[edi],dx
  41c741:	add    ch,dl
  41c743:	fdivr  DWORD PTR [edx+0x76]
  41c746:	add    esi,ebp
  41c748:	ds popa 
	...
  41c752:	add    BYTE PTR [eax],al
  41c754:	sbb    ebx,eax
  41c756:	lock push esp
  41c758:	iret   
  41c759:	leave  
  41c75a:	jecxz  0x41c7cd
  41c75c:	xchg   BYTE PTR [ecx*1-0x7305eb9],ah
  41c763:	data16 outs dx,BYTE PTR ds:[esi]
  41c765:	mov    esp,0xbb7d66c8
  41c76a:	jmp    0xe06c2fe2
  41c76f:	inc    DWORD PTR [eax-0x668c08eb]
  41c775:	adc    ebp,esp
  41c777:	popa   
  41c778:	push   0xa
  41c77a:	or     eax,0xf30a7251
  41c77f:	bound  ebx,QWORD PTR [ebp+0xc]
  41c782:	loopne 0x41c7f3
  41c784:	xor    bl,cl
  41c786:	sbb    al,0x0
  41c788:	iret   
  41c789:	fcom   DWORD PTR [ebx-0x3126f198]
  41c78f:	bound  ebx,QWORD PTR [esi+0x63]
  41c792:	xchg   DWORD PTR [ebp+0x1b],eax
  41c795:	jle    0x41c74d
  41c797:	xlat   BYTE PTR ds:[ebx]
  41c798:	enter  0x64f8,0xe3
  41c79c:	jl     0x41c7e4
  41c79e:	retf   
  41c79f:	push   esi
  41c7a0:	iret   
  41c7a1:	jmp    0x2e1f:0xeab9332a
  41c7a8:	mov    esp,0xc5300ced
  41c7ad:	out    0xf4,al
  41c7af:	sub    cl,cl
  41c7b1:	xlat   BYTE PTR ds:[ebx]
  41c7b2:	add    eax,DWORD PTR [ebx]
  41c7b4:	rcr    cl,1
  41c7b6:	or     DWORD PTR [eax],eax
	...
  41c7c0:	add    BYTE PTR [eax],al
  41c7c2:	cld    
  41c7c3:	test   esi,esp
  41c7c5:	jae    0x41c7a7
  41c7c7:	ja     0x41c7c3
  41c7c9:	(bad)
  41c7ce:	scas   al,BYTE PTR es:[edi]
  41c7cf:	jmp    0x94e11b96
  41c7d4:	fldenv [esi-0x3d]
  41c7d7:	sub    DWORD PTR [eax],0x4b
  41c7da:	scas   al,BYTE PTR es:[edi]
  41c7db:	jg     0x41c7b6
  41c7dd:	in     al,0xb3
  41c7df:	fs aad 0x3
  41c7e2:	xchg   edi,eax
  41c7e3:	pop    esi
  41c7e4:	(bad)  
  41c7e5:	neg    DWORD PTR [eax]
  41c7e7:	push   ebx
  41c7e8:	(bad)  
  41c7e9:	call   0xe4d5478c
  41c7ee:	jg     0x41c862
  41c7f0:	jecxz  0x41c7c5
  41c7f2:	jae    0x41c865
  41c7f4:	scas   eax,DWORD PTR es:[edi]
  41c7f5:	add    ebx,DWORD PTR [ebp+0x7ce2b064]
  41c7fb:	fs ret 
  41c7fd:	(bad)  
  41c7fe:	jno    0x41c871
  41c800:	jecxz  0x41c7d1
  41c802:	(bad)
  41c806:	pop    esi
  41c807:	arpl   WORD PTR [eax-0x2680981a],bx
  41c80d:	out    0x3d,eax
  41c80f:	popa   
  41c810:	sahf   
  41c811:	add    edi,DWORD PTR [ecx+esi*2]
  41c814:	xor    ch,0xea
  41c817:	pusha  
  41c818:	jb     0x41c7fb
  41c81a:	sub    dl,BYTE PTR [edi+0x42]
  41c81d:	add    al,0xeb
  41c81f:	jo     0x41c869
  41c821:	clc    
  41c822:	sbb    al,0x57
  41c824:	dec    ecx
  41c825:	jmp    0x41c82a
  41c82a:	add    BYTE PTR [eax],al
  41c82c:	add    BYTE PTR [eax],al
  41c82e:	add    BYTE PTR [eax],al
  41c830:	mov    eax,0x2ddf445d
  41c835:	stos   DWORD PTR es:[edi],eax
  41c836:	add    eax,0x397fad04
  41c83b:	jecxz  0x41c831
  41c83d:	jb     0x41c87f
  41c83f:	das    
  41c840:	lods   eax,DWORD PTR ds:[esi]
  41c841:	jg     0x41c859
  41c843:	loope  0x41c82f
  41c845:	jae    0x41c859
  41c847:	jecxz  0x41c827
  41c849:	bound  ebp,QWORD PTR [edi]
  41c84b:	aad    0xe9
  41c84d:	pop    edx
  41c84e:	or     ah,dl
  41c850:	cld    
  41c851:	pop    esi
  41c852:	pop    ss
  41c853:	fdivr  st(1),st
  41c855:	pop    edx
  41c856:	daa    
  41c857:	aam    0xbd
  41c859:	push   ebx
  41c85a:	pop    ss
  41c85b:	retf   
  41c85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c85d:	push   eax
  41c85e:	or     al,0xc
  41c860:	inc    edx
  41c861:	jo     0x41c8c6
  41c863:	(bad)  
  41c864:	cs jo  0x41c873
  41c867:	mov    cl,0x2f
  41c869:	jo     0x41c8e3
  41c86b:	scas   eax,DWORD PTR es:[edi]
  41c86c:	sub    eax,0x1e9675a
  41c871:	jo     0x41c8da
  41c873:	fisttp DWORD PTR [esi]
  41c875:	dec    esi
  41c876:	pop    edi
  41c877:	int3   
  41c878:	int3   
  41c879:	dec    edi
  41c87a:	imul   edi,DWORD PTR [edx-0x449e8c05],0xfffffff0
  41c881:	in     al,dx
  41c882:	inc    eax
  41c883:	mov    esi,0x9c4270fa
  41c888:	or     DWORD PTR [edi+0x67],ebx
  41c88b:	fwait
  41c88c:	int3   
  41c88d:	push   ebx
  41c88e:	addr16 fwait
  41c890:	stc    
  41c891:	bound  ecx,QWORD PTR gs:[eax+0x0]
  41c898:	add    BYTE PTR [eax],al
  41c89a:	add    BYTE PTR [eax],al
  41c89c:	add    BYTE PTR [eax],al
  41c89e:	lock push eax
  41c8a0:	jae    0x41c91b
  41c8a2:	mov    cl,0xec
  41c8a4:	ds jns 0x41c863
  41c8a7:	inc    edx
  41c8a8:	pop    eax
  41c8a9:	cdq    
  41c8aa:	out    dx,al
  41c8ab:	addr16 pop edi
  41c8ad:	jge    0x41c87b
  41c8af:	dec    ebx
  41c8b0:	inc    edx
  41c8b1:	push   esi
  41c8b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8b3:	popa   
  41c8b4:	jl     0x41c8fe
  41c8b6:	mov    bh,0x97
  41c8b8:	and    eax,0x6a5b83e9
  41c8bd:	push   ebp
  41c8be:	xchg   esi,eax
  41c8bf:	dec    ebp
  41c8c0:	jle    0x41c90e
  41c8c2:	lahf   
  41c8c3:	aas    
  41c8c4:	popa   
  41c8c5:	inc    edi
  41c8c6:	jne    0x41c929
  41c8c8:	sub    al,BYTE PTR [bx+si+0x2c5c]
  41c8cd:	sbb    ch,BYTE PTR [esi+0x62]
  41c8d0:	js     0x41c8f0
  41c8d2:	ins    BYTE PTR es:[edi],dx
  41c8d3:	outs   dx,BYTE PTR ds:[esi]
  41c8d4:	addr16 jmp 0xc99e1970
  41c8da:	jo     0x41c93d
  41c8dc:	jge    0x41c8f3
  41c8de:	je     0x41c93a
  41c8e0:	imul   eax,DWORD PTR [eax],0x4a
  41c8e3:	leave  
  41c8e4:	pop    edi
  41c8e5:	outs   dx,BYTE PTR ds:[esi]
  41c8e6:	push   ss
  41c8e7:	rep ins DWORD PTR es:[edi],dx
  41c8e9:	jb     0x41c923
  41c8eb:	in     eax,0x7a
  41c8ed:	add    al,ch
  41c8ef:	mov    DWORD PTR [eax+0x20],0x747be51a
  41c8f6:	(bad)  
  41c8f7:	fst    QWORD PTR [ecx+0x74]
  41c8fa:	pandn  mm3,QWORD PTR [esi+0x20]
  41c8fe:	sti    
  41c8ff:	repnz ins DWORD PTR es:[edi],dx
  41c901:	jb     0x41c903
	...
  41c90b:	add    dh,dh
  41c90d:	mov    ch,0x5c
  41c90f:	push   eax
  41c910:	(bad)  
  41c911:	xlat   BYTE PTR ds:[ebx]
  41c912:	ins    DWORD PTR es:[edi],dx
  41c913:	jae    0x41c94f
  41c915:	leave  
  41c916:	pop    esi
  41c917:	popa   
  41c918:	cmp    cl,cl
  41c91a:	pop    edi
  41c91b:	outs   dx,BYTE PTR ds:[esi]
  41c91c:	push   ss
  41c91d:	lock push ecx
  41c91f:	jae    0x41c966
  41c921:	out    0x5f,eax
  41c923:	jb     0x41c96f
  41c925:	or     BYTE PTR [edx+0x54],0x16
  41c929:	mov    al,ds:0xf3456568
  41c92e:	imul   ebp,DWORD PTR [esi+0x57],0x506f69f3
  41c935:	lahf   
  41c936:	jl     0x41c9a7
  41c938:	xor    al,0xf3
  41c93a:	lock inc ebp
  41c93c:	jmp    0x7cef:0xb6410d3
  41c943:	imul   edx,DWORD PTR [eax],0xd1697ce5
  41c949:	leave  
  41c94a:	adc    BYTE PTR [ebx+0x17],ah
  41c94d:	call   0xe35335a3
  41c952:	lock inc ebp
  41c954:	fcmovbe st,st(3)
  41c956:	adc    BYTE PTR [eax-0x4c],dh
  41c959:	retf   0x6966
  41c95c:	ret    0x7bd8
  41c95f:	add    BYTE PTR [eax-0x30acbf39],ch
  41c965:	and    bl,0x6b
  41c968:	jecxz  0x41c942
  41c96a:	out    0x73,al
  41c96c:	mov    edi,0x62d4e5
	...
  41c979:	add    BYTE PTR [ebx-0x4399ed84],dh
  41c97f:	jg     0x41c989
  41c981:	push   ecx
  41c982:	mov    al,ds:0xae74f482
  41c987:	(bad)  
  41c988:	jecxz  0x41c9e5
  41c98a:	xchg   edx,eax
  41c98b:	pop    ss
  41c98c:	fisubr WORD PTR [edx]
  41c98e:	jl     0x41c951
  41c990:	out    0x73,al
  41c992:	jae    0x41c9b6
  41c994:	(bad)  [edi-0x6a]
  41c997:	shl    dh,cl
  41c999:	ins    BYTE PTR es:[edi],dx
  41c99a:	mov    ds:0x8273e405,eax
  41c99f:	sub    BYTE PTR ds:0xe8346e44,cl
  41c9a5:	inc    ebx
  41c9a6:	jbe    0x41c9ae
  41c9a8:	or     eax,0xdd34895c
  41c9ad:	inc    esi
  41c9ae:	imul   edi,edx,0x37dffd1
  41c9b4:	sti    
  41c9b5:	jne    0x41c9e9
  41c9b7:	addr16 mov cl,0x66
  41c9ba:	cmp    al,0x75
  41c9bc:	vmread DWORD PTR [edx],ebp
  41c9bf:	add    eax,0x712a4e0d
  41c9c4:	hlt    
  41c9c5:	jo     0x41c9d8
  41c9c7:	push   eax
  41c9c8:	in     al,dx
  41c9c9:	(bad)  
  41c9ca:	iret   
  41c9cb:	inc    edx
  41c9cc:	hlt    
  41c9cd:	outs   dx,DWORD PTR ds:[esi]
  41c9ce:	sbb    al,0x40
  41c9d0:	hlt    
  41c9d1:	(bad)
  41c9d6:	iret   
  41c9d7:	call   0x6cf4:0x85fb70e7
	...
  41c9e6:	add    BYTE PTR [eax],al
  41c9e8:	jmp    0xfd83f228
  41c9ed:	test   eax,0x7ff270f9
  41c9f2:	adc    eax,0x33540904
  41c9f7:	shl    cl,0x6e
  41c9fa:	nop    ebx
  41c9fd:	pop    ebp
  41c9fe:	jecxz  0x41c9cf
  41ca00:	xchg   ebp,eax
  41ca01:	pusha  
  41ca02:	repz fild QWORD PTR [ebp-0x530708b2]
  41ca09:	pop    eax
  41ca0a:	or     dl,al
  41ca0c:	(bad)  
  41ca0d:	push   edi
  41ca0e:	cmc    
  41ca0f:	fidiv  WORD PTR [ebp-0x62204c9c]
  41ca15:	outs   dx,BYTE PTR ds:[esi]
  41ca16:	jecxz  0x41c9ea
  41ca18:	stos   DWORD PTR es:[edi],eax
  41ca19:	popa   
  41ca1a:	iret   
  41ca1b:	div    BYTE PTR [ecx+0x6d]
  41ca1e:	enter  0x9acf,0x58
  41ca22:	(bad)  
  41ca23:	fsubrp st(0),st
  41ca25:	cmp    al,0xc4
  41ca27:	fcmovu st,st(0)
  41ca29:	ds retf 0x60e0
  41ca2d:	je     0x41c9e6
  41ca2f:	fdivr  QWORD PTR [edx+0x62]
  41ca32:	(bad)  
  41ca33:	(bad)  
  41ca34:	imul   ebx,DWORD PTR [ecx-0x33],0xa14b68dc
  41ca3b:	xlat   BYTE PTR ds:[ebx]
  41ca3c:	cmp    BYTE PTR [edi-0x4a],0xde
  41ca40:	xor    dh,BYTE PTR [edx+esi*2-0x1c]
  41ca44:	arpl   WORD PTR ds:[edi-0x75a2ce43],cx
  41ca4b:	and    eax,DWORD PTR [eax]
	...
  41ca55:	add    BYTE PTR [edi+ebx*2],al
  41ca58:	mov    fs,WORD PTR [ebx]
  41ca5a:	push   cs
  41ca5b:	pop    ecx
  41ca5c:	pop    eax
  41ca5d:	hlt    
  41ca5e:	sbb    eax,0x33de5c74
  41ca63:	dec    esp
  41ca64:	xor    bl,bl
  41ca66:	and    al,BYTE PTR [esi+0x4c]
  41ca69:	hlt    
  41ca6a:	and    al,0x5b
  41ca6c:	xor    eax,0x425624f7
  41ca71:	loop   0x41ca72
  41ca73:	jg     0x41ca81
  41ca75:	sbb    dl,BYTE PTR [ebp+ebp*2+0x7081e967]
  41ca7c:	sbb    esp,DWORD PTR [si]
  41ca7f:	cmp    eax,0x5571210c
  41ca84:	imul   ecx,DWORD PTR [esi],0x5e
  41ca87:	jmp    0x6d80c8cc
  41ca8c:	or     al,0x2f
  41ca8e:	and    dl,BYTE PTR [ebp+0x68]
  41ca91:	add    al,0x3d
  41ca93:	jmp    0x6358c8b6
  41ca98:	or     al,0xf6
  41ca9a:	add    eax,0xf1e1675b
  41ca9f:	popf   
  41caa0:	or     al,0xb
  41caa2:	mov    edx,0x5b50ca9
  41caa7:	dec    edx
  41caa8:	(bad)  
  41caa9:	(bad)
  41caac:	or     al,0xb4
  41caae:	cmc    
  41caaf:	mov    BYTE PTR [edx-0x6b],cl
  41cab2:	sbb    al,0xe9
  41cab4:	pusha  
  41cab5:	mov    ebx,0xca675713
	...
  41cac2:	add    BYTE PTR [eax],al
  41cac4:	loopne 0x41ca60
  41cac6:	arpl   WORD PTR [edi-0x5ee116fb],dx
  41cacc:	stc    
  41cacd:	push   esp
  41cace:	or     al,0x92
  41cad0:	fwait
  41cad1:	mov    bl,0x4a
  41cad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cad4:	std    
  41cad5:	mov    dl,0x3d
  41cad7:	mov    ecx,0xa73b3de1
  41cadc:	(bad)  
  41cadd:	xchg   esp,eax
  41cade:	cmp    BYTE PTR [ebp-0x4fe0581c],ch
  41cae4:	fidiv  WORD PTR [ecx-0x5323ebb2]
  41caea:	cmp    ah,BYTE PTR [ecx]
  41caec:	xchg   ecx,eax
  41caed:	test   eax,0x43dc1f47
  41caf2:	dec    esi
  41caf3:	push   ss
  41caf4:	js     0x41cade
  41caf6:	add    BYTE PTR ds:[ecx],bl
  41caf9:	repnz push ecx
  41cafb:	inc    esi
  41cafc:	loop   0x41cad1
  41cafe:	push   ds
  41caff:	fs add al,0x84
  41cb02:	push   eax
  41cb03:	dec    ecx
  41cb04:	enter  0x5fce,0x66
  41cb08:	ret    0x51f2
  41cb0b:	jb     0x41cae0
  41cb0d:	iret   
  41cb0e:	outs   dx,DWORD PTR ds:[esi]
  41cb10:	mov    al,0xdc
  41cb12:	inc    esi
  41cb13:	push   esp
  41cb14:	push   es
  41cb15:	test   BYTE PTR [edx],ah
  41cb17:	outs   dx,DWORD PTR ds:[esi]
  41cb18:	rcr    esp,cl
  41cb1a:	imul   esp,DWORD PTR [ebx-0x37],0xfffffff0
  41cb1e:	pop    esi
  41cb1f:	je     0x41cb47
  41cb21:	iret   
  41cb22:	push   ecx
  41cb23:	ins    BYTE PTR es:[edi],dx
  41cb24:	and    bh,BYTE PTR [esp+ecx*1+0x0]
	...
  41cb30:	add    BYTE PTR [eax],al
  41cb32:	ss jl  0x41cb41
  41cb35:	add    BYTE PTR [esi],ah
  41cb37:	jl     0x41cb6b
  41cb39:	add    BYTE PTR [edx+0x463c0c8a],bh
  41cb3f:	sub    eax,DWORD PTR [ecx+0x33]
  41cb42:	sub    esp,ecx
  41cb44:	push   ecx
  41cb45:	jae    0x41cb7c
  41cb47:	repz pop edi
  41cb49:	jb     0x41cb4d
  41cb4b:	scas   al,BYTE PTR es:[edi]
  41cb4c:	or     al,0x3c
  41cb4e:	inc    ebp
  41cb4f:	sub    DWORD PTR [ebp+0x50],ebx
  41cb52:	or     esp,ecx
  41cb54:	push   ecx
  41cb55:	jae    0x41cb8c
  41cb57:	repz pop edi
  41cb59:	jb     0x41cb9d
  41cb5b:	scas   al,BYTE PTR es:[edi]
  41cb5c:	or     al,0x3c
  41cb5e:	outs   dx,DWORD PTR ds:[esi]
  41cb5f:	xor    dl,BYTE PTR es:[eax+0x69]
  41cb63:	rcl    DWORD PTR [ecx+0x73],cl
  41cb66:	xor    eax,0x42725fec
  41cb6b:	mov    cl,0xc
  41cb6d:	cmp    al,0x6e
  41cb6f:	iret   
  41cb70:	pop    esp
  41cb71:	push   eax
  41cb72:	fcmovnu st,st(4)
  41cb74:	imul   ebp,DWORD PTR [ecx+ebx*8-0x35],0x49cf7351
  41cb7c:	std    
  41cb7d:	ins    BYTE PTR es:[edi],dx
  41cb7e:	std    
  41cb7f:	cmp    al,0x3a
  41cb81:	add    bh,cl
  41cb83:	pushf  
  41cb84:	mov    bl,0x66
  41cb86:	in     al,dx
  41cb87:	stos   BYTE PTR es:[edi],al
  41cb88:	aad    0x70
  41cb8a:	loopne 0x41cbc2
  41cb8c:	cld    
  41cb8d:	pop    ebx
  41cb8e:	add    BYTE PTR [eax-0x2a],al
  41cb91:	arpl   ax,si
  41cb93:	test   ecx,edi
  41cb95:	pop    ds
	...
  41cb9e:	add    BYTE PTR [eax],al
  41cba0:	or     edx,DWORD PTR [eax-0x64509d02]
  41cba6:	out    0x66,eax
  41cba8:	mov    ebx,0xa96cd9d8
  41cbad:	in     al,0xfd
  41cbaf:	pop    esi
  41cbb0:	mov    ebp,0xa64ac47b
  41cbb5:	jns    0x41cbb1
  41cbb7:	ins    BYTE PTR es:[edi],dx
  41cbb8:	pushf  
  41cbb9:	in     eax,0xea
  41cbbb:	jae    0x41cb40
  41cbbd:	and    eax,0xb5b36dd0
  41cbc2:	std    
  41cbc3:	jo     0x41cbb4
  41cbc5:	sbb    al,0xd0
  41cbc7:	jne    0x41cc3b
  41cbc9:	js     0x41cb7e
  41cbcb:	pop    esi
  41cbcc:	jbe    0x41cb9a
  41cbce:	or     al,0x5c
  41cbd0:	mov    cl,bh
  41cbd2:	jmp    0xd66b2c48
  41cbd7:	gs arpl sp,si
  41cbda:	frstor [esi+0x71]
  41cbdd:	hlt    
  41cbde:	aad    0x74
  41cbe0:	pop    esp
  41cbe1:	mov    eax,0xfc665eb3
  41cbe6:	or     al,0x51
  41cbe8:	cmp    bh,bh
  41cbea:	loopne 0x41cc60
  41cbec:	cs imul ebp,esp,0x5b
  41cbf0:	or     dl,BYTE PTR [eax]
  41cbf2:	jmp    0x2365:0xd66a2071
  41cbf9:	cmc    
  41cbfa:	frstor [esi+0x31]
  41cbfd:	cmp    BYTE PTR [edi],0xdb
  41cc00:	and    esi,DWORD PTR [ebx+0x3]
  41cc03:	mov    ecx,0x0
  41cc08:	add    BYTE PTR [eax],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	add    BYTE PTR [eax],al
  41cc0e:	icebp  
  41cc0f:	pop    eax
  41cc10:	inc    edi
  41cc11:	add    al,0x1e
  41cc13:	push   edi
  41cc14:	dec    ecx
  41cc15:	lock sti 
  41cc17:	pusha  
  41cc18:	xor    eax,0x5c5214e1
  41cc1d:	fnstenv [ecx+0x4f72f71]
  41cc23:	inc    edx
  41cc24:	cmc    
  41cc25:	(bad)  
  41cc26:	call   FWORD PTR [edi+ecx*1-0x10]
  41cc2a:	icebp  
  41cc2b:	push   ebp
  41cc2c:	or     dh,bh
  41cc2e:	push   eax
  41cc2f:	inc    edx
  41cc30:	add    al,0xf0
  41cc32:	test   eax,0x40f60c3b
  41cc37:	inc    edx
  41cc38:	add    al,0xf0
  41cc3a:	cdq    
  41cc3b:	cmp    ebx,DWORD PTR [esi+esi*8]
  41cc3e:	mov    fs,WORD PTR [eax+0xe]
  41cc41:	add    al,0x94
  41cc43:	pusha  
  41cc44:	or     al,0xd8
  41cc46:	scas   al,BYTE PTR es:[edi]
  41cc47:	push   esi
  41cc48:	jmp    0x41cc63
  41cc4a:	mov    al,0x55
  41cc4c:	fadd   QWORD PTR [ebx]
  41cc4e:	jle    0x41cca6
  41cc50:	shr    edi,0x83
  41cc53:	pusha  
  41cc54:	aad    0xe0
  41cc56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc57:	dec    edi
  41cc58:	(bad)  
  41cc5a:	imul   ebx,DWORD PTR [edi+0x6b7fec96],0xffffffc0
  41cc61:	fcomp  DWORD PTR [edi-0x61]
  41cc64:	lods   al,BYTE PTR ds:[esi]
  41cc65:	fldcw  WORD PTR [edi+0x7f]
  41cc68:	mov    bl,0xe4
  41cc6a:	pop    esp
  41cc6b:	push   edi
  41cc6c:	jecxz  0x41cc35
  41cc6e:	adc    BYTE PTR [esi-0x7a],0xda
	...
  41cc7a:	add    BYTE PTR [eax],al
  41cc7c:	pop    ds
  41cc7d:	addr16 xchg esi,eax
  41cc7f:	out    dx,eax
  41cc80:	sub    eax,0x2adcd953
  41cc85:	push   edi
  41cc86:	jecxz  0x41cc5b
  41cc88:	ds push ebp
  41cc8a:	or     al,0x8e
  41cc8c:	mov    ds:0x60e95f46,al
  41cc91:	inc    esi
  41cc92:	js     0x41ccdc
  41cc94:	add    DWORD PTR [esi+0x78],0x51
  41cc98:	retf   
  41cc99:	inc    esp
  41cc9a:	ins    DWORD PTR es:[edi],dx
  41cc9b:	dec    edx
  41cc9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc9d:	jb     0x41cd01
  41cc9f:	push   ebp
  41cca0:	jp     0x41cc35
  41cca2:	arpl   WORD PTR [edi-0x6c],dx
  41cca5:	in     eax,0x54
  41cca7:	sbb    DWORD PTR [esi+0x6c446160],edx
  41ccad:	pop    esi
  41ccae:	pusha  
  41ccaf:	jmp    0x1dac212f
  41ccb4:	pop    esi
  41ccb5:	inc    esi
  41ccb6:	jle    0x41ccbc
  41ccb8:	xchg   DWORD PTR [esi],edi
  41ccba:	bound  ecx,QWORD PTR [edx]
  41ccbc:	inc    ecx
  41ccbd:	bound  ebp,QWORD PTR [eax+0x0]
  41ccc0:	js     0x41cd08
  41ccc2:	arpl   WORD PTR ds:0x85f40d3,dx
  41ccc8:	adc    al,0x59
  41ccca:	dec    ebx
  41cccb:	or     eax,0xfa676f2f
  41ccd0:	sbb    esp,ebp
  41ccd2:	pop    esp
  41ccd3:	int3   
  41ccd4:	xor    ebx,DWORD PTR [ebp+0x62]
  41ccd7:	into   
  41ccd8:	clc    
  41ccd9:	push   ebx
  41ccda:	imul   edx,eax,0xd9614fcc
	...
  41cce8:	add    BYTE PTR [eax],al
  41ccea:	sbb    esp,DWORD PTR [edx+0x7e]
  41cced:	mov    edi,0x990c6f19
  41ccf2:	pop    ss
  41ccf3:	push   ebp
  41ccf4:	pop    esp
  41ccf5:	(bad)  
  41ccf6:	loop   0x41cd68
  41ccf8:	or     al,0x99
  41ccfa:	pop    es
  41ccfb:	push   ebp
  41ccfc:	dec    ebx
  41ccfd:	mov    dh,bl
  41ccff:	push   ebx
  41cd00:	ja     0x41cc91
  41cd02:	loopne 0x41cce8
  41cd04:	inc    eax
  41cd05:	xchg   BYTE PTR [esp+esi*1+0x6bbb9a6b],bh
  41cd0c:	popa   
  41cd0d:	add    BYTE PTR [eax*8-0x2bbcad10],dh
  41cd14:	pusha  
  41cd15:	push   ebx
  41cd16:	pop    ebx
  41cd17:	jmp    0x6d5b:0x81246576
  41cd1e:	cli    
  41cd1f:	jmp    0x41cd61
  41cd21:	outs   dx,DWORD PTR ds:[esi]
  41cd22:	hlt    
  41cd23:	out    dx,eax
  41cd24:	lock push edx
  41cd26:	adc    esi,eax
  41cd28:	pusha  
  41cd29:	inc    ecx
  41cd2a:	adc    eax,0x20755fdb
  41cd2f:	lock lock push edx
  41cd32:	add    esi,eax
  41cd34:	pusha  
  41cd35:	push   eax
  41cd36:	pop    ss
  41cd37:	jmp    0x41cdb4
  41cd39:	ja     0x41ccdc
  41cd3b:	in     eax,dx
  41cd3c:	ins    BYTE PTR es:[edi],dx
  41cd3d:	add    bh,al
  41cd3f:	fisubr DWORD PTR [ebx+0x6f]
  41cd42:	mov    ebx,0xd52e7cc9
  41cd47:	loope  0x41cdb0
  41cd49:	add    bh,dl
  41cd4b:	fisubr DWORD PTR [ebx+0x6f]
	...
  41cd56:	add    BYTE PTR [eax],al
  41cd58:	cmp    eax,esi
  41cd5a:	jl     0x41cd8a
  41cd5c:	vdivpd xmm0,xmm3,XMMWORD PTR [eax]
  41cd60:	ret    0x51bd
  41cd63:	je     0x41cd28
  41cd65:	loopne 0x41cdd0
  41cd67:	ins    BYTE PTR es:[edi],dx
  41cd68:	es mov esp,0xa00b685c
  41cd6e:	dec    esi
  41cd6f:	popa   
  41cd70:	sub    ah,BYTE PTR [ecx-0x21beacf4]
  41cd76:	jl     0x41cdef
  41cd78:	pop    es
  41cd79:	jmp    0x5c5d:0x29545c6d
  41cd80:	dec    edx
  41cd81:	enter  0x206d,0x34
  41cd85:	loope  0x41ce03
  41cd87:	and    esi,esp
  41cd89:	retf   0x665f
  41cd8c:	cmp    ch,bh
  41cd8e:	push   ecx
  41cd8f:	jb     0x41cd60
  41cd91:	repz enter 0x1651,0x2d
  41cd96:	leave  
  41cd97:	push   ebx
  41cd98:	daa    
  41cd99:	hlt    
  41cd9a:	sub    al,0x42
  41cd9c:	cs ins DWORD PTR es:[edi],dx
  41cd9e:	cs pop esp
  41cda0:	add    ah,BYTE PTR [esi-0x2e]
  41cda3:	jno    0x41cdc1
  41cda5:	mov    ecx,0x4a1f62d0
  41cdaa:	cld    
  41cdab:	(bad)  
  41cdac:	stc    
  41cdad:	xor    esi,edi
  41cdaf:	push   0x1fd13af6
  41cdb4:	or     eax,DWORD PTR [eax-0x2]
  41cdb7:	(bad)  
  41cdb8:	in     al,dx
  41cdb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdba:	fnstenv [ecx+0x0]
	...
  41cdc5:	add    dh,dh
  41cdc7:	fcomp  st(4)
  41cdc9:	jno    0x41cdc3
  41cdcb:	xor    esi,edi
  41cdcd:	pop    esi
  41cdce:	repnz pushf 
  41cdd0:	iret   
  41cdd1:	jno    0x41cda2
  41cdd3:	xchg   ebp,eax
  41cdd4:	fnstenv [edx-0x1f]
  41cdd7:	mov    WORD PTR [eax],cs
  41cdd9:	inc    esp
  41cdda:	mov    dl,0x72
  41cddc:	out    0x72,eax
  41cdde:	mov    bl,0x8c
  41cde0:	or     BYTE PTR [esi+eiz*4-0x1a],al
  41cde4:	sub    al,0x21
  41cde6:	jmp    0xd884:0x9a51087c
  41cded:	pop    ds
  41cdee:	mov    ah,bl
  41cdf0:	out    0x66,eax
  41cdf2:	stos   DWORD PTR es:[edi],eax
  41cdf3:	js     0x41cdbc
  41cdf5:	arpl   WORD PTR [ebx+0x7c70ebc6],bp
  41cdfb:	fcomp  st(5)
  41cdfd:	dec    edx
  41cdfe:	fwait
  41cdff:	sub    BYTE PTR ds:0xdf267251,ch
  41ce05:	bound  edi,QWORD PTR [ebp-0x28]
  41ce08:	fmul   QWORD PTR [edi+edi*2-0x1b]
  41ce0c:	sub    al,0x51
  41ce0e:	push   0x26
  41ce10:	fbld   TBYTE PTR [edx+0x5d]
  41ce13:	jg     0x41cdf8
  41ce15:	rol    DWORD PTR [ebx+0x1c23d64f],cl
  41ce1b:	outs   dx,DWORD PTR ds:[esi]
  41ce1c:	xor    cl,0xe0
  41ce1f:	xor    DWORD PTR [eax+ebx*8-0x47697fd3],eax
  41ce26:	sbb    al,0x50
  41ce28:	ret    
  41ce29:	rol    BYTE PTR [eax],1
	...
  41ce33:	add    BYTE PTR [edi],bl
  41ce35:	pop    ebp
  41ce36:	jne    0x41ce5b
  41ce38:	adc    DWORD PTR [ecx+0x70],esp
  41ce3b:	loopne 0x41cdd5
  41ce3d:	xor    al,0x39
  41ce3f:	rol    BYTE PTR [eax],1
  41ce41:	mov    al,ds:0x5929d928
  41ce46:	inc    edi
  41ce47:	and    al,0xc0
  41ce49:	pop    ebx
  41ce4a:	inc    edi
  41ce4b:	repnz in eax,dx
  41ce4d:	outs   dx,BYTE PTR ds:[esi]
  41ce4e:	ss add al,0x1
  41ce51:	xor    dl,BYTE PTR [edi]
  41ce53:	aam    0xc8
  41ce55:	dec    esp
  41ce56:	ss loope 0x41ce37
  41ce59:	lahf   
  41ce5a:	adc    ebp,esp
  41ce5c:	in     eax,0x5c
  41ce5e:	jecxz  0x41ce15
  41ce60:	add    cl,BYTE PTR [ebx+esi*1+0x24]
  41ce64:	sahf   
  41ce65:	pop    esp
  41ce66:	adc    eax,0xe36dadee
  41ce6b:	mov    esp,0x24134085
  41ce70:	sahf   
  41ce71:	pop    esp
  41ce72:	cmc    
  41ce73:	in     eax,dx
  41ce74:	lods   eax,DWORD PTR ds:[esi]
  41ce75:	ins    DWORD PTR es:[edi],dx
  41ce76:	jecxz  0x41ce34
  41ce78:	xchg   ebp,eax
  41ce79:	inc    eax
  41ce7a:	adc    esp,DWORD PTR [esp+edi*2]
  41ce7d:	outs   dx,BYTE PTR ds:[esi]
  41ce7e:	shl    cl,0xb0
  41ce81:	xor    esp,eax
  41ce83:	fsubr  DWORD PTR [ebp+0x7f]
  41ce86:	mov    al,ds:0xaf58a1d8
  41ce8b:	add    eax,DWORD PTR [edi-0x2f2c70b5]
  41ce91:	dec    esp
  41ce92:	mov    dh,0xe0
  41ce94:	pop    esi
  41ce95:	jg     0x41cea3
  41ce97:	mov    eax,ds:0x0
  41ce9c:	add    BYTE PTR [eax],al
  41ce9e:	add    BYTE PTR [eax],al
  41cea0:	add    BYTE PTR [eax],al
  41cea2:	adc    BYTE PTR [esi+0x5c],cl
  41cea5:	or     esp,edi
  41cea7:	pop    esp
  41cea8:	jle    0x41ce49
  41ceaa:	out    dx,eax
  41ceab:	outs   dx,DWORD PTR ds:[esi]
  41ceac:	sub    al,0xb4
  41ceae:	sahf   
  41ceaf:	xor    eax,0x3179b90c
  41ceb4:	cmp    eax,0x67709fc9
  41ceb9:	jnp    0x41ce87
  41cebb:	cmp    BYTE PTR [edi],bh
  41cebd:	test   al,0x7c
  41cebf:	adc    DWORD PTR [edi+0x7a],0xa10c6faf
  41cec6:	mov    BYTE PTR [ebp+0x5c],cl
  41cec9:	xor    al,0xac
  41cecb:	pop    edx
  41cecc:	pusha  
  41cecd:	or     DWORD PTR [eax-0x54a49890],ebx
  41ced3:	xor    DWORD PTR [ebx+0x3c],ebp
  41ced6:	cwde   
  41ced7:	loope  0x41cf21
  41ced9:	sbb    eax,0x483f319f
  41cede:	test   BYTE PTR [ebp+0x2c],dl
  41cee1:	sbb    al,BYTE PTR [eax+0x5d447a6f]
  41cee7:	loope  0x41cf46
  41cee9:	xor    al,0x7f
  41ceeb:	xor    DWORD PTR [esp+esi*1],ebp
  41ceee:	ds pop esi
  41cef0:	jle    0x41cedb
  41cef2:	int3   
  41cef3:	dec    edi
  41cef4:	inc    ecx
  41cef5:	cmp    esi,edi
  41cef7:	lahf   
  41cef8:	pop    esp
  41cef9:	push   ss
  41cefa:	cmp    eax,0x601a0c6d
  41ceff:	dec    ebp
  41cf00:	pop    esp
  41cf01:	leave  
  41cf02:	cld    
  41cf03:	push   ebx
  41cf04:	jle    0x41cefb
	...
  41cf0e:	add    BYTE PTR [eax],al
  41cf10:	int3   
  41cf11:	cmp    BYTE PTR [edi],bh
  41cf13:	test   al,0xfc
  41cf15:	sbb    BYTE PTR [esi+ecx*8-0x2],0x6c
  41cf1a:	or     al,0xe9
  41cf1c:	sbb    al,0x34
  41cf1e:	pop    esp
  41cf1f:	sbb    dh,BYTE PTR [ebx+0x35006b4f]
  41cf25:	lock ja 0x41cf97
  41cf28:	and    al,0xc1
  41cf2a:	cmp    al,BYTE PTR [eax]
  41cf2c:	das    
  41cf2d:	sub    dh,BYTE PTR [edx]
  41cf2f:	push   eax
  41cf30:	(bad)  
  41cf31:	retf   
  41cf32:	push   ecx
  41cf33:	jae    0x41cf6a
  41cf35:	aam    0x5f
  41cf37:	jb     0x41cf8b
  41cf39:	scas   al,BYTE PTR es:[edi]
  41cf3a:	or     al,0x4e
  41cf3c:	push   0x762040b0
  41cf41:	fnstsw WORD PTR [ebx+0x73]
  41cf44:	xor    esp,ecx
  41cf46:	jp     0x41cfac
  41cf48:	fs jl  0x41cf8f
  41cf4b:	push   esp
  41cf4c:	inc    edx
  41cf4d:	int3   
  41cf4e:	inc    ebp
  41cf4f:	popa   
  41cf50:	dec    edi
  41cf51:	enter  0x5010,0x7
  41cf55:	out    dx,eax
  41cf56:	jnp    0x41cfcf
  41cf58:	sbb    esi,ebp
  41cf5a:	ins    BYTE PTR es:[edi],dx
  41cf5b:	xor    dh,BYTE PTR [esi-0x31]
  41cf5e:	inc    ebp
  41cf5f:	push   esp
  41cf60:	mov    dh,0x9b
  41cf62:	pop    esp
  41cf63:	popa   
  41cf64:	mov    ch,0xee
  41cf66:	ja     0x41cfd7
  41cf68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf69:	fistp  QWORD PTR [edx]
  41cf6b:	add    BYTE PTR [esi-0x34],dh
  41cf6e:	aas    
  41cf6f:	push   eax
  41cf70:	push   ebp
  41cf71:	pushf  
  41cf72:	pop    esp
  41cf73:	popa   
	...
  41cf7c:	add    BYTE PTR [eax],al
  41cf7e:	mov    ch,0xee
  41cf80:	ja     0x41cff1
  41cf82:	in     al,0xdf
  41cf84:	lock dec eax
  41cf86:	jmp    0x41cf44
  41cf88:	inc    eax
  41cf89:	and    dh,dh
  41cf8b:	fdivr  QWORD PTR [ebx+0x73]
  41cf8e:	xor    ebx,ecx
  41cf90:	jp     0x41cff6
  41cf92:	sub    bh,BYTE PTR ss:[edi]
  41cf95:	push   esp
  41cf96:	(bad)  
  41cf97:	fwait
  41cf98:	pop    esp
  41cf99:	popa   
  41cf9a:	adc    eax,0xf46f77ef
  41cf9f:	mov    edi,0xb04247f0
  41cfa4:	inc    eax
  41cfa5:	and    bh,cl
  41cfa7:	es out dx,al
  41cfa9:	jo     0x41d027
  41cfab:	leave  
  41cfac:	xlat   BYTE PTR ds:[ebx]
  41cfad:	jno    0x41d01a
  41cfaf:	(bad)  
  41cfb0:	fisttp DWORD PTR [edx-0x7d]
  41cfb3:	push   es
  41cfb4:	sub    eax,0xfc256e50
  41cfb9:	je     0x41d023
  41cfbb:	and    al,0xd1
  41cfbd:	call   eax
  41cfbf:	and    al,0xd8
  41cfc1:	gs inc ebx
  41cfc3:	imul   ch
  41cfc5:	jno    0x41cff1
  41cfc7:	adc    eax,0xfb2c66ba
  41cfcc:	xlat   BYTE PTR ds:[ebx]
  41cfcd:	jo     0x41cfef
  41cfcf:	psraw  mm3,QWORD PTR [ebx+0x16]
  41cfd3:	psraw  mm4,QWORD PTR [edx+0x1d]
  41cfd7:	pop    es
  41cfd8:	shl    BYTE PTR [ebx-0x11],cl
  41cfdb:	daa    
  41cfdc:	in     al,dx
  41cfdd:	pusha  
  41cfde:	and    BYTE PTR [esi+edi*8],bh
  41cfe1:	jae    0x41cfe3
	...
  41cfeb:	add    BYTE PTR [edi-0x11921855],ch
  41cff1:	dec    ebp
  41cff2:	jecxz  0x41d065
  41cff4:	sbb    ebp,DWORD PTR [eax-0x641f9f17]
  41cffa:	(bad)  
  41cffb:	jae    0x41cfd9
  41cffd:	call   0x472c33c1
  41d002:	aam    0x66
  41d004:	jecxz  0x41d045
  41d006:	jecxz  0x41d078
  41d008:	iret   
  41d009:	cdq    
  41d00a:	std    
  41d00b:	gs ret 
  41d00d:	jne    0x41cff6
  41d00f:	jno    0x41cfbb
  41d011:	xchg   esp,eax
  41d012:	(bad)  [esi-0x54]
  41d015:	jp     0x41d014
  41d017:	jo     0x41cfb9
  41d019:	mov    ss,esp
  41d01b:	pop    ebx
  41d01c:	cwde   
  41d01d:	xchg   dh,ah
  41d01f:	data16 lods al,BYTE PTR ds:[esi]
  41d021:	mov    ecx,esp
  41d023:	dec    esp
  41d024:	mov    ds:0xa06ce0d4,al
  41d029:	jg     0x41d009
  41d02b:	mov    edi,0x23bc4c9b
  41d030:	shl    BYTE PTR [edx-0x3a],0xf2
  41d034:	jge    0x41d0a3
  41d036:	xlat   BYTE PTR ds:[ebx]
  41d037:	and    eax,DWORD PTR [eax+eiz*2+0x6473e4d9]
  41d03e:	mov    ch,0xbf
  41d040:	mov    eax,ds:0x5df2c662
  41d045:	ins    DWORD PTR es:[edi],dx
  41d046:	mov    bh,0xd6
  41d048:	shl    BYTE PTR [ecx],1
  41d04a:	call   0xd5:0x84573ce9
	...
  41d059:	add    BYTE PTR ds:0x2feca83c,ch
  41d05f:	push   edx
  41d060:	jb     0x41d038
  41d062:	and    esp,DWORD PTR [esi+0x6f]
  41d065:	mov    edi,0xe7816903
  41d06a:	xor    edx,DWORD PTR [edi+0x76]
  41d06d:	and    ecx,DWORD PTR [ecx]
  41d06f:	xor    al,0x7f
  41d071:	(bad)  
  41d072:	sbb    eax,0xfae95552
  41d077:	push   ebx
  41d078:	cmp    ecx,ebp
  41d07a:	(bad)  
  41d07b:	push   edx
  41d07c:	dec    esp
  41d07d:	repz jmp 0x5a63:0xe2ed3a3b
  41d085:	fcmovnu st,st(7)
  41d087:	lahf   
  41d088:	and    cl,ch
  41d08a:	fist   WORD PTR [edx+0x44]
  41d08d:	jmp    0x41d080
  41d08f:	ins    DWORD PTR es:[edi],dx
  41d090:	dec    edx
  41d091:	and    al,0xfe
  41d093:	push   esp
  41d094:	add    eax,0x1752c1d7
  41d099:	jmp    0xd6750c53
  41d09e:	stos   DWORD PTR es:[edi],eax
  41d09f:	gs or  al,0xf0
  41d0a2:	lods   eax,DWORD PTR ds:[esi]
  41d0a3:	push   edx
  41d0a4:	daa    
  41d0a5:	shl    DWORD PTR [ecx-0x600d0a9e],1
  41d0ab:	outs   dx,BYTE PTR ds:[esi]
  41d0ac:	or     al,0xf
  41d0ae:	idiv   DWORD PTR [ebp+0x41]
  41d0b1:	hlt    
  41d0b2:	clc    
  41d0b3:	imul   esp,DWORD PTR [ecx-0x2a],0xcf437df9
  41d0ba:	sbb    BYTE PTR [ecx+0x7e],ah
  41d0bd:	mov    DWORD PTR [eax],0x0
  41d0c3:	add    BYTE PTR [eax],al
  41d0c5:	add    BYTE PTR [eax],al
  41d0c7:	add    bh,ah
  41d0c9:	push   ecx
  41d0ca:	sub    al,0xba
  41d0cc:	out    0x51,eax
  41d0ce:	js     0x41d0a0
  41d0d0:	fisub  WORD PTR [edx+0x7d]
  41d0d3:	jmp    0xbdac3bf1
  41d0d8:	cmc    
  41d0d9:	cmp    al,0x7e
  41d0db:	les    edx,FWORD PTR [eax]
  41d0dd:	dec    ecx
  41d0de:	arpl   WORD PTR [edx-0x7182935e],cx
  41d0e4:	mov    dh,0x51
  41d0e6:	push   eax
  41d0e7:	mov    esi,0x7e686bab
  41d0ec:	xchg   ebp,eax
  41d0ed:	push   eax
  41d0ee:	sub    al,0xb7
  41d0f0:	pusha  
  41d0f1:	cmp    DWORD PTR [ebp+0x74],ecx
  41d0f4:	jp     0x41d145
  41d0f6:	xchg   DWORD PTR [bx+si+0x6733],eax
  41d0fb:	jnp    0x41d176
  41d0fd:	popaw  
  41d0ff:	push   edi
  41d100:	(bad)  
  41d101:	xor    al,0x63
  41d103:	dec    edi
  41d104:	ja     0x41d172
  41d106:	jns    0x41d162
  41d108:	mov    bl,0x48
  41d10a:	addr16 pop edx
  41d10c:	call   0x2c64:0x5d50693e
  41d113:	sbb    bh,BYTE PTR [eax+0x5f]
  41d116:	jge    0x41d148
  41d118:	adc    BYTE PTR [ecx+0x67],0x3c
  41d11c:	(bad)  
  41d11d:	dec    ebp
  41d11e:	jle    0x41d136
  41d120:	xor    eax,0x1a046066
  41d125:	cmp    DWORD PTR [ecx+0x1c],eax
  41d128:	pop    ss
  41d129:	imul   esp,DWORD PTR [ecx-0x2],0x0
  41d130:	add    BYTE PTR [eax],al
  41d132:	add    BYTE PTR [eax],al
  41d134:	add    BYTE PTR [eax],al
  41d136:	and    ebx,ebp
  41d138:	pop    ebp
  41d139:	add    cl,al
  41d13b:	jmp    0xb61948bc
  41d140:	ins    DWORD PTR es:[edi],dx
  41d141:	pop    esp
  41d142:	repz call 0xb45343b3
  41d148:	pop    edi
  41d149:	data16 sub bl,BYTE PTR ds:0xe61a6e4a
  41d150:	jp     0x41d1c0
  41d152:	or     esi,DWORD PTR [ebp-0x1bfabef0]
  41d158:	pop    edi
  41d159:	jne    0x41d15b
  41d15b:	mov    ch,0x10
  41d15d:	dec    ebp
  41d15e:	pop    ss
  41d15f:	iret   
  41d160:	push   ecx
  41d161:	or     esi,DWORD PTR [bp+di+0x4ef0]
  41d166:	sbb    esi,DWORD PTR [ebp-0x149e909c]
  41d16c:	lock pop ebx
  41d16e:	ja     0x41d153
  41d170:	imul   ebp,DWORD PTR [edi+0x5b],0xffffffce
  41d174:	jl     0x41d1e9
  41d176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d177:	jmp    0xb48236e8
  41d17c:	imul   esp,DWORD PTR [esi+0x3f],0x4f7451e3
  41d183:	iret   
  41d184:	pop    esi
  41d185:	add    BYTE PTR [edi-0x1c],cl
  41d188:	ins    DWORD PTR es:[edi],dx
  41d189:	outs   dx,BYTE PTR ds:[esi]
  41d18a:	sub    ch,cl
  41d18c:	jl     0x41d207
  41d18e:	adc    esp,edi
  41d190:	jp     0x41d192
  41d192:	psrld  mm5,QWORD PTR [ebp+0x74]
  41d196:	add    eax,0x6d65cf
	...
  41d1a3:	add    dh,dl
  41d1a5:	mov    dl,0x6d
  41d1a7:	jb     0x41d141
  41d1a9:	in     al,0x7a
  41d1ab:	and    BYTE PTR [esi-0x668c8420],dl
  41d1b1:	into   
  41d1b2:	jp     0x41d218
  41d1b4:	in     eax,0x83
  41d1b6:	pop    edi
  41d1b7:	jne    0x41d193
  41d1b9:	iret   
  41d1ba:	pop    edi
  41d1bb:	outs   dx,DWORD PTR ds:[esi]
  41d1bc:	iret   
  41d1bd:	sub    DWORD PTR [eax],0xfb89ac5f
  41d1c3:	jb     0x41d17e
  41d1c5:	fisubr DWORD PTR [ebx+ebp*2]
  41d1c8:	scas   al,BYTE PTR es:[edi]
  41d1c9:	mov    ebp,gs
  41d1cb:	fs mov dl,0xd8
  41d1ce:	sub    al,0x70
  41d1d0:	scas   al,BYTE PTR es:[edi]
  41d1d1:	(bad)  
  41d1d3:	je     0x41d24d
  41d1d5:	mov    eax,0xafcf70e8
  41d1da:	call   0xe5fc3b41
  41d1df:	jae    0x41d247
  41d1e1:	ret    
  41d1e2:	xlat   BYTE PTR ds:[ebx]
  41d1e3:	jmp    DWORD PTR [ebp-0x75]
  41d1e6:	sbb    BYTE PTR [eax],bh
  41d1e8:	xchg   DWORD PTR [ebx-0x115ccfd7],ecx
  41d1ee:	and    DWORD PTR [ebx],esp
  41d1f0:	lahf   
  41d1f1:	shl    BYTE PTR [edx+ebp*1+0x5816b8f2],cl
  41d1f8:	jmp    0x1ccb:0xea5816b8
  41d1ff:	xor    dl,BYTE PTR [edi]
  41d201:	les    ebx,FWORD PTR [edx+esi*1]
  41d204:	pop    es
  41d205:	int3   
  41d206:	sbb    al,0x32
	...
  41d210:	add    BYTE PTR [eax],al
  41d212:	pop    es
  41d213:	les    ebx,FWORD PTR [edx+esi*1]
  41d216:	test   ebx,0xc3f7321c
  41d21c:	sbb    al,0x32
  41d21e:	daa    
  41d21f:	or     BYTE PTR fs:[edi+esi*8+0x33],dl
  41d224:	loop   0x41d289
  41d226:	repnz ss out dx,al
  41d229:	data16 std 
  41d22b:	inc    esp
  41d22c:	or     BYTE PTR [ebx+eax*1+0x31],bl
  41d230:	shr    DWORD PTR [ebp-0x15],cl
  41d233:	inc    ebx
  41d234:	fisub  WORD PTR [ecx-0x1a]
  41d237:	xchg   esi,eax
  41d238:	in     al,0xff
  41d23a:	xchg   edx,eax
  41d23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d23c:	enter  0x22ff,0x80
  41d240:	cmp    eax,esp
  41d242:	inc    eax
  41d243:	icebp  
  41d244:	cmp    al,0xc4
  41d246:	cmp    BYTE PTR [edi],al
  41d248:	sub    esp,eax
  41d24a:	xor    BYTE PTR [edi+0x35],bh
  41d24d:	les    ebp,FWORD PTR [eax]
  41d24f:	lods   eax,DWORD PTR ds:[esi]
  41d250:	pinsrw mm4,WORD PTR [eax],0x87
  41d254:	sub    al,0xc4
  41d256:	sbb    BYTE PTR [eax-0x79ef3be3],al
  41d25c:	push   ds
  41d25d:	les    ecx,FWORD PTR [eax]
  41d25f:	or     edi,eax
  41d261:	ret    
  41d262:	add    BYTE PTR [eax+esi*4-0x3d],al
  41d266:	clc    
  41d267:	push   es
  41d268:	mov    edx,0xc58bf0c3
  41d26d:	ret    
  41d26e:	call   0xe105916c
  41d273:	xor    al,0xca
  41d275:	ret    
	...
  41d27e:	add    BYTE PTR [eax],al
  41d280:	fcomp  st(7)
  41d282:	rol    ebx,0xd0
  41d285:	jbe    0x41d252
  41d287:	ret    
  41d288:	enter  0x9af4,0xc3
  41d28c:	sar    BYTE PTR [eax-0x64],0xc3
  41d290:	mov    eax,0xb0c38e7b
  41d295:	dec    esp
  41d296:	mov    es,ebx
  41d298:	test   al,0x1a
  41d29a:	cdq    
  41d29b:	ret    
  41d29c:	mov    al,ds:0x98c373f2
  41d2a1:	mov    ebp,0x1990c375
  41d2a6:	ja     0x41d26b
  41d2a8:	mov    BYTE PTR [eax+edx*2],cl
  41d2ab:	les    eax,FWORD PTR [eax+0x78c4590b]
  41d2b1:	pop    ss
  41d2b2:	pop    ebx
  41d2b3:	les    esi,FWORD PTR [eax+0x38]
  41d2b6:	aas    
  41d2b7:	les    ebp,FWORD PTR [eax+0x1d]
  41d2ba:	inc    edi
  41d2bb:	les    esp,FWORD PTR [eax-0x7b]
  41d2be:	xor    ah,al
  41d2c0:	pop    eax
  41d2c1:	cmp    al,0xc
  41d2c3:	ss mov ebx,edx
  41d2c6:	test   eax,0x6fda132e
  41d2cb:	jae    0x41d2d9
  41d2cd:	fiadd  DWORD PTR [ebx+0x53da0c6c]
  41d2d3:	addr16 or al,0xda
  41d2d6:	outs   dx,BYTE PTR ds:[esi]
  41d2d7:	jb     0x41d2e5
  41d2d9:	fiadd  DWORD PTR [edi]
  41d2db:	gs or  al,0xda
  41d2de:	mov    ch,0x5d
  41d2e0:	or     al,0xda
  41d2e2:	dec    edx
  41d2e3:	push   esp
	...
  41d2ec:	add    BYTE PTR [eax],al
  41d2ee:	or     al,0xda
  41d2f0:	ret    
  41d2f1:	dec    esp
  41d2f2:	or     al,0xda
  41d2f4:	inc    eax
  41d2f5:	xchg   DWORD PTR [edx+ebx*8],ecx
  41d2f8:	aam    0x7f
  41d2fa:	or     al,0xda
  41d2fc:	outs   dx,BYTE PTR ds:[esi]
  41d2fd:	jbe    0x41d30b
  41d2ff:	(bad)  
  41d301:	outs   dx,BYTE PTR ds:[esi]
  41d302:	or     al,0xda
  41d304:	push   esi
  41d305:	mov    DWORD PTR [edx+ebx*8],ecx
  41d308:	fwait
  41d309:	mov    DWORD PTR [edx+ebx*8],ecx
  41d30c:	fld    QWORD PTR [ecx+0x7f2fda0c]
  41d312:	mov    ecx,ds
  41d314:	pop    esi
  41d315:	push   edi
  41d316:	mov    ecx,ds
  41d318:	repz pop esi
  41d31a:	mov    ecx,ds
  41d31c:	and    ch,BYTE PTR [ecx]
  41d31e:	mov    ecx,ds
  41d320:	push   ebp
  41d321:	sub    DWORD PTR [ecx+ebx*8-0x2673d61a],ecx
  41d328:	sbb    DWORD PTR [eax],ebp
  41d32a:	mov    ecx,ds
  41d32c:	dec    eax
  41d32d:	sub    BYTE PTR [ecx+ebx*8-0x2673d78d],cl
  41d334:	shr    BYTE PTR [eax-0x54462675],cl
  41d33a:	xchg   ebx,eax
  41d33b:	(bad)  [ebx-0x56]
  41d33e:	mov    ebx,ecx
  41d340:	adc    eax,0x9cd993a4
  41d345:	add    BYTE PTR [ebx],dh
  41d347:	(bad)  
  41d348:	lock aad 0x33
  41d34b:	(bad)  
  41d34c:	lock dec ebp
  41d34e:	and    ah,al
  41d350:	lock mov ah,0x0
	...
  41d35b:	add    BYTE PTR [ecx-0x3c],dh
  41d35e:	lock adc bh,BYTE PTR [esi-0x3c]
  41d362:	lock cmp DWORD PTR [esi-0x3c],0xfffffff0
  41d367:	sahf   
  41d368:	outs   dx,DWORD PTR ds:[esi]
  41d369:	(bad)  
  41d36a:	lock sbb BYTE PTR [esp+eax*8-0x10],ch
  41d36f:	lds    ebx,FWORD PTR [ebx-0x3c]
  41d372:	lock sbb ch,BYTE PTR [eax-0x3c]
  41d376:	lock test BYTE PTR [edi],dh
  41d379:	(bad)  
  41d37a:	lock call 0xc13297e7
  41d380:	ret    
  41d381:	ret    
  41d382:	lock retf 
  41d384:	rol    ebx,0xf0
  41d387:	or     BYTE PTR [ebx+eax*8-0x3c63ae10],bh
  41d38e:	lock lds ebp,FWORD PTR [edx-0x44f10f3d]
  41d395:	ret    
  41d396:	lock mov WORD PTR [ebx-0x24040f3d],?
  41d39d:	ret    
  41d39e:	lock jns 0x41d3a9
  41d3a1:	(bad)  
  41d3a2:	lock idiv eax
  41d3a5:	ret    
  41d3a6:	lock jae 0x41d36d
  41d3a9:	ret    
  41d3aa:	lock loope 0x41d381
  41d3ad:	ret    
  41d3ae:	lock adc dl,ch
  41d3b1:	ret    
  41d3b2:	lock clc 
  41d3b4:	(bad)
  41d3b7:	sub    edx,eax
  41d3b9:	ret    
  41d3ba:	(bad)
  41d3be:	lock sti 
	...
  41d3c8:	add    BYTE PTR [eax],al
  41d3ca:	nop
  41d3cb:	mov    esp,0xbc9131f0
  41d3d0:	lock ins DWORD PTR es:[edi],dx
  41d3d2:	iret   
  41d3d3:	mov    edi,0x1a87ffcc
  41d3d8:	int    0xff
  41d3da:	and    dh,BYTE PTR [eax+0x13e5ffcc]
  41d3e0:	int    0xff
  41d3e2:	push   es
  41d3e3:	sbb    ebp,ecx
  41d3e5:	dec    DWORD PTR [eax-0x1a]
  41d3e8:	or     al,0x0
  41d3ea:	iret   
  41d3eb:	out    0xc,al
  41d3ed:	add    bh,cl
  41d3ef:	out    0xc,al
  41d3f1:	add    bh,cl
  41d3f3:	out    0xc,al
  41d3f5:	add    bh,cl
  41d3f7:	out    0xc,al
  41d3f9:	add    BYTE PTR [edx+esi*2-0x2d569d1b],cl
  41d400:	sub    al,0x48
  41d402:	scas   al,BYTE PTR es:[edi]
  41d403:	aad    0xe4
  41d405:	call   FWORD PTR [ebp-0x65ac328e]
  41d40b:	adc    eax,0x168a4722
  41d410:	rcl    BYTE PTR [ecx-0x65],0x83
  41d414:	mov    edi,0xe483cf48
  41d419:	sub    eax,0xffe9be6a
  41d41e:	mov    bl,0xd6
  41d420:	sbb    bl,BYTE PTR [eax-0x31]
  41d423:	sbb    bl,bl
  41d425:	jb     0x41d459
  41d427:	jmp    0xed6c3be7
  41d42c:	loopne 0x41d470
	...
  41d436:	add    BYTE PTR [eax],al
  41d438:	aaa    
  41d439:	cld    
  41d43a:	jmp    0x41d4ae
  41d43c:	cmp    eax,DWORD PTR [esi+ecx*8]
  41d43f:	jmp    FWORD PTR [edi]
  41d441:	or     ebp,esp
  41d443:	arpl   cx,si
  41d445:	or     ch,dh
  41d447:	jae    0x41d418
  41d449:	iret   
  41d44a:	add    eax,0x2dbc50b
  41d44f:	pop    es
  41d450:	scas   eax,DWORD PTR es:[edi]
  41d451:	adc    ah,dh
  41d453:	imul   esi,esp,0xc509037f
  41d459:	lahf   
  41d45a:	inc    edi
  41d45b:	loope  0x41d441
  41d45d:	lahf   
  41d45e:	in     al,dx
  41d45f:	and    BYTE PTR [eax-0x2af6fc61],bh
  41d465:	mov    BYTE PTR [edx+eiz*8-0x48],bl
  41d469:	mov    ah,bh
  41d46b:	and    ebp,esp
  41d46d:	push   edi
  41d46e:	dec    esp
  41d46f:	xlat   BYTE PTR ds:[ebx]
  41d470:	mov    esp,0xef23ec9f
  41d475:	lahf   
  41d476:	rcl    BYTE PTR [edi+ebp*8],0x9f
  41d47a:	cld    
  41d47b:	and    ebp,edi
  41d47d:	pop    esi
  41d47e:	or     dl,al
  41d480:	mov    ebx,0xef08ec9f
  41d485:	push   0x89c5ef1d
  41d48a:	ret    
  41d48b:	fild   QWORD PTR [ebp-0x50f33c9d]
  41d491:	lahf   
  41d492:	enter  0xaf13,0x7f
  41d496:	add    esp,DWORD PTR [edi+ebp*4]
  41d499:	lahf   
  41d49a:	add    eax,0x21
  41d49f:	add    BYTE PTR [eax],al
  41d4a1:	add    BYTE PTR [eax],al
  41d4a3:	add    BYTE PTR [eax],al
  41d4a5:	add    BYTE PTR [esi-0x5f],bh
  41d4a8:	add    esp,DWORD PTR [edi+ebp*4]
  41d4ab:	jg     0x41d483
  41d4ad:	jmp    0x41d51c
  41d4af:	arpl   di,dx
  41d4b1:	push   ss
  41d4b2:	popf   
  41d4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4b4:	(bad)  
  41d4b5:	out    0x64,eax
  41d4b7:	jg     0x41d49c
  41d4b9:	add    ecx,edi
  41d4bb:	jg     0x41d4a0
  41d4bd:	add    ecx,edi
  41d4bf:	jg     0x41d4a4
  41d4c1:	add    ecx,edi
  41d4c3:	jg     0x41d4a8
  41d4c5:	add    ecx,edi
  41d4c7:	jg     0x41d4ac
  41d4c9:	add    ecx,edi
  41d4cb:	jg     0x41d4b0
  41d4cd:	add    ecx,edi
  41d4cf:	jg     0x41d4b4
  41d4d1:	add    ecx,edi
  41d4d3:	jg     0x41d4b8
  41d4d5:	add    ecx,edi
  41d4d7:	jg     0x41d4e5
  41d4d9:	jmp    0xe94e54aa
  41d4de:	int3   
  41d4df:	jg     0x41d4ed
  41d4e1:	jmp    0xe94e54b2
  41d4e6:	int3   
  41d4e7:	jg     0x41d4f5
  41d4e9:	jmp    0xe94e54ba
  41d4ee:	int3   
  41d4ef:	jg     0x41d4fd
  41d4f1:	jmp    0xe94e54c2
  41d4f6:	int3   
  41d4f7:	jg     0x41d505
  41d4f9:	jmp    0xe94e54ca
  41d4fe:	int3   
  41d4ff:	jg     0x41d50d
  41d501:	jmp    0xe94e54d2
  41d506:	int3   
  41d507:	jg     0x41d515
  41d509:	jmp    0x41d50e
  41d50e:	add    BYTE PTR [eax],al
  41d510:	add    BYTE PTR [eax],al
  41d512:	add    BYTE PTR [eax],al
  41d514:	int3   
  41d515:	jg     0x41d523
  41d517:	jmp    0xe94e54e8
  41d51c:	int3   
  41d51d:	jg     0x41d52b
  41d51f:	jmp    0xe94e54f0
  41d524:	int3   
  41d525:	jg     0x41d533
  41d527:	jmp    0xe94e54f8
  41d52c:	int3   
  41d52d:	jg     0x41d53b
  41d52f:	jmp    0xe94e5500
  41d534:	int3   
  41d535:	jg     0x41d543
  41d537:	jmp    0xe94e5508
  41d53c:	int3   
  41d53d:	jg     0x41d54b
  41d53f:	jmp    0xe94e5510
  41d544:	int3   
  41d545:	jg     0x41d553
  41d547:	jmp    0xe94e5518
  41d54c:	int3   
  41d54d:	jg     0x41d55b
  41d54f:	jmp    0xe94e5520
  41d554:	int3   
  41d555:	jg     0x41d563
  41d557:	jmp    0x4e5528
  41d55c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d55d:	or     DWORD PTR [eax+eax*1],0xc81a6
  41d564:	jbe    0x41d4e7
  41d566:	or     al,0x0
  41d568:	jbe    0x41d4eb
  41d56a:	or     al,0x0
  41d56c:	or     WORD PTR [eax+eax*1],0x8166
  41d572:	or     al,0x0
  41d574:	jbe    0x41d4f7
  41d576:	or     al,0x0
	...
  41d580:	add    BYTE PTR [eax],al
  41d582:	jbe    0x41d505
  41d584:	or     al,0x0
  41d586:	or     WORD PTR [eax+eax*1],0x8166
  41d58c:	or     al,0x0
  41d58e:	or     DWORD PTR ss:[eax+eax*1],0xc8136
  41d596:	or     DWORD PTR es:[eax+eax*1],0xc8126
  41d59e:	or     DWORD PTR ss:[eax+eax*1],0xc8136
  41d5a6:	or     DWORD PTR es:[eax+eax*1],0xc8126
  41d5ae:	test   BYTE PTR [eax-0x7f09fff4],0xc
  41d5b5:	add    dh,ah
  41d5b7:	or     BYTE PTR [eax+eax*1],0xe6
  41d5bb:	or     BYTE PTR [eax+eax*1],0xf6
  41d5bf:	or     BYTE PTR [eax+eax*1],0xf6
  41d5c3:	or     BYTE PTR [eax+eax*1],0xe6
  41d5c7:	or     BYTE PTR [eax+eax*1],0xe6
  41d5cb:	or     BYTE PTR [eax+eax*1],0xb6
  41d5cf:	or     BYTE PTR [eax+eax*1],0xb6
  41d5d3:	or     BYTE PTR [eax+eax*1],0xa6
  41d5d7:	or     BYTE PTR [eax+eax*1],0xa6
  41d5db:	or     BYTE PTR [eax+eax*1],0xcf
  41d5df:	out    0xc,al
  41d5e1:	add    bh,cl
  41d5e3:	out    0xc,al
	...
  41d5ed:	add    BYTE PTR [eax],al
  41d5ef:	add    bh,cl
  41d5f1:	out    0xc,al
  41d5f3:	add    bh,cl
  41d5f5:	out    0xc,al
  41d5f7:	add    bh,cl
  41d5f9:	out    0xc,al
  41d5fb:	add    bh,cl
  41d5fd:	out    0xc,al
  41d5ff:	add    bh,cl
  41d601:	out    0xc,al
  41d603:	add    bh,cl
  41d605:	out    0xc,al
  41d607:	add    bh,cl
  41d609:	out    0xc,al
  41d60b:	add    bh,cl
  41d60d:	out    0xc,al
  41d60f:	add    bh,cl
  41d611:	out    0xc,al
  41d613:	add    bh,cl
  41d615:	out    0xc,al
  41d617:	add    bh,cl
  41d619:	out    0xc,al
  41d61b:	add    bh,cl
  41d61d:	out    0xc,al
  41d61f:	add    bh,cl
  41d621:	out    0xc,al
  41d623:	add    bh,cl
  41d625:	out    0xc,al
  41d627:	add    bh,cl
  41d629:	out    0xc,al
  41d62b:	add    bh,cl
  41d62d:	out    0xc,al
  41d62f:	add    bh,cl
  41d631:	out    0xc,al
  41d633:	add    bh,cl
  41d635:	out    0xc,al
  41d637:	add    bh,cl
  41d639:	out    0xc,al
  41d63b:	add    bh,cl
  41d63d:	out    0xc,al
  41d63f:	add    bh,cl
  41d641:	out    0xc,al
  41d643:	add    bh,cl
  41d645:	out    0xc,al
  41d647:	add    bh,cl
  41d649:	out    0xc,al
  41d64b:	add    bh,cl
  41d64d:	out    0xc,al
  41d64f:	add    bh,cl
  41d651:	out    0xc,al
	...
  41d65b:	add    BYTE PTR [eax],al
  41d65d:	add    bh,cl
  41d65f:	out    0xc,al
  41d661:	add    bh,cl
  41d663:	out    0x27,eax
  41d665:	inc    ebx
  41d666:	sub    BYTE PTR [eax-0x60],ah
  41d669:	retf   
  41d66a:	test   al,0x80
  41d66c:	sub    DWORD PTR [edi],esi
  41d66e:	jne    0x41d668
  41d670:	cwde   
  41d671:	scas   eax,DWORD PTR es:[edi]
  41d672:	fisubr WORD PTR [edi+0x6c]
  41d675:	lods   al,BYTE PTR ds:[esi]
  41d676:	xchg   esp,eax
  41d677:	jecxz  0x41d65c
  41d679:	and    al,0xc
  41d67b:	pop    ebx
  41d67c:	arpl   WORD PTR [ebx],ax
  41d67e:	jo     0x8020da47
  41d684:	jmp    0x41d689
  41d686:	retf   
  41d687:	jg     0x41d66e
  41d689:	add    edi,DWORD PTR [eax-0x2d]
  41d68c:	loop   0x41d691
  41d68e:	dec    edi
  41d68f:	and    bl,0x3
  41d692:	jo     0x7ff0da7b
  41d698:	jecxz  0x41d69d
  41d69a:	mov    edi,0xc703e37f
  41d69f:	jg     0x41d684
  41d6a1:	add    edx,ebx
  41d6a3:	jg     0x41d688
  41d6a5:	add    ecx,ebp
  41d6a7:	jg     0x41d68c
  41d6a9:	add    edi,DWORD PTR [eax]
  41d6ab:	shl    edx,cl
  41d6ad:	or     edi,0x7f
  41d6b0:	jecxz  0x41d675
  41d6b2:	sub    bl,dl
  41d6b4:	loop   0x41d6d9
  41d6b6:	iret   
  41d6b7:	jg     0x41d69c
  41d6b9:	repz sbb bl,dl
  41d6bc:	loop   0x41d6c9
  41d6be:	iret   
  41d6bf:	jg     0x41d6a4
  41d6c1:	inc    DWORD PTR [eax]
	...
  41d6cb:	add    BYTE PTR [eax],cl
  41d6cd:	shl    edx,cl
  41d6cf:	add    edi,ecx
  41d6d1:	jg     0x41d6b6
  41d6d3:	add    al,0xcf
  41d6d5:	jg     0x41d73a
  41d6d7:	add    al,0xcf
  41d6d9:	jg     0x41d67e
  41d6db:	add    ecx,edi
  41d6dd:	jg     0x41d6e2
  41d6df:	add    al,0xcf
  41d6e1:	jg     0x41d6d6
  41d6e3:	add    ecx,edi
  41d6e5:	jg     0x41d6e2
  41d6e7:	add    ecx,edi
  41d6e9:	jg     0x41d6d2
  41d6eb:	add    ecx,edi
  41d6ed:	jg     0x41d6fb
  41d6ef:	jmp    0x41d6bd
  41d6f1:	jg     0x41d6ff
  41d6f3:	call   0xe14e56c4
  41d6f8:	fsub   QWORD PTR [edi+0x7aa3012c]
  41d6fe:	or     al,0xd0
  41d700:	mov    ebx,0xa3f02b9a
  41d705:	jns    0x41d712
  41d707:	ret    
  41d708:	mov    esi,0x7ee32ea5
  41d70d:	mov    BYTE PTR [esi],cl
  41d70f:	mov    dl,0xdd
  41d711:	test   al,0x2d
  41d713:	scas   eax,DWORD PTR es:[edi]
  41d714:	retf   0x2aa1
  41d717:	pop    es
  41d718:	popa   
  41d719:	test   BYTE PTR [edx],cl
  41d71b:	sbb    al,0xbe
  41d71d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d71e:	daa    
  41d71f:	hlt    
  41d720:	pop    edi
  41d721:	test   DWORD PTR [edi],eax
  41d723:	or     eax,0xe528a3bf
  41d728:	pusha  
  41d729:	xchg   BYTE PTR [eax],cl
  41d72b:	loop   0x41d76a
  41d72d:	xchg   DWORD PTR ds:0xe8,ecx
  41d733:	add    BYTE PTR [eax],al
  41d735:	add    BYTE PTR [eax],al
  41d737:	add    BYTE PTR [eax],al
  41d739:	add    dh,cl
  41d73b:	jnp    0x41d747
  41d73d:	loope  0x41d705
  41d73f:	add    DWORD PTR [edx],0xfffffff6
  41d742:	cmp    ebp,DWORD PTR [edi+0x17]
  41d745:	imul   BYTE PTR [ebx]
  41d747:	ja     0x41d759
  41d749:	in     al,0x1c
  41d74b:	mov    BYTE PTR [ecx],bl
  41d74d:	jmp    0xf757576a
  41d752:	iret   
  41d753:	imul   eax,DWORD PTR [ebx],0xffffffd7
  41d756:	inc    BYTE PTR [esi-0x7cfe2ff3]
  41d75c:	or     dl,bl
  41d75e:	std    
  41d75f:	test   DWORD PTR [ebx],ecx
  41d761:	adc    esp,ebx
  41d763:	jno    0x41d78d
  41d765:	psubusw mm6,QWORD PTR [esi+0x29]
  41d769:	sbb    esi,DWORD PTR [edi-0x3cfdde61]
  41d76f:	cdq    
  41d770:	cmp    DWORD PTR [eax],eax
  41d772:	(bad)  
  41d773:	outs   dx,DWORD PTR ds:[esi]
  41d774:	and    eax,0x109ec729
  41d779:	pop    ds
  41d77a:	mov    dh,0xd1
  41d77c:	icebp  
  41d77d:	add    BYTE PTR [esi-0x59fff383],ah
  41d783:	jge    0x41d776
  41d785:	push   DWORD PTR [edx-0x4dff0e2f]
  41d78b:	jge    0x41d77e
  41d78d:	add    BYTE PTR [edx-0x5d000e2f],dh
  41d793:	jge    0x41d7a1
  41d795:	add    BYTE PTR [esi+0x7d],dh
  41d798:	icebp  
  41d799:	push   DWORD PTR [esi-0x2f]
  41d79c:	lock inc DWORD PTR [eax]
	...
  41d7a7:	add    BYTE PTR [esi-0x2f],ah
  41d7aa:	icebp  
  41d7ab:	add    BYTE PTR [edx-0x2f],ah
  41d7ae:	icebp  
  41d7af:	add    BYTE PTR [esi-0x2f],dh
  41d7b2:	lock push DWORD PTR [edx-0x2f]
  41d7b6:	lock add BYTE PTR [edx+0x7d],dh
  41d7ba:	icebp  
  41d7bb:	add    BYTE PTR [esi+0x7d],ah
  41d7be:	or     al,0x1
  41d7c0:	xor    bh,BYTE PTR [ebp+0xc]
  41d7c3:	add    BYTE PTR [edx],dh
  41d7c5:	shl    eax,1
  41d7c7:	jmp    DWORD PTR [esi]
  41d7c9:	shl    eax,1
  41d7cb:	add    BYTE PTR [esi],ah
  41d7cd:	shl    eax,1
  41d7cf:	add    BYTE PTR [esi],dh
  41d7d1:	shl    ecx,1
  41d7d3:	push   DWORD PTR [esi]
  41d7d5:	shl    ecx,1
  41d7d7:	jmp    DWORD PTR [esi]
  41d7d9:	jge    0x41d7cc
  41d7db:	add    BYTE PTR [esi],ah
  41d7dd:	jge    0x41d7d0
  41d7df:	add    dl,dh
  41d7e1:	shl    al,1
  41d7e3:	add    dl,dh
  41d7e5:	jl     0x41d7d8
  41d7e7:	push   edx
  41d7e9:	jl     0x41d7f7
  41d7eb:	add    edx,esp
  41d7ed:	jl     0x41d7fb
  41d7ef:	add    edx,esi
  41d7f1:	jl     0x41d7e4
  41d7f3:	dec    edi
  41d7f5:	out    0xc,al
  41d7f7:	add    bh,cl
  41d7f9:	(bad)  
  41d7fb:	call   eax
  41d7fd:	loop   0x41d7ef
  41d7ff:	dec    al
  41d801:	out    0xc,al
  41d803:	add    dh,cl
  41d805:	out    0xc,al
  41d807:	(bad)  
  41d808:	mov    eax,0xfef0da
	...
  41d815:	add    bh,cl
  41d817:	loop   0x41d825
  41d819:	add    bh,cl
  41d81b:	out    0xc,al
  41d81d:	dec    edi
  41d81f:	out    0xf0,al
  41d821:	dec    bh
  41d823:	out    0xc,al
  41d825:	add    dh,cl
  41d827:	out    0xc,al
  41d829:	add    dh,cl
  41d82b:	out    0xf0,al
  41d82d:	inc    DWORD PTR [eax-0x3000f31e]
  41d833:	out    0xc,al
  41d835:	push   DWORD PTR [eax-0x1a]
  41d838:	lock (bad) 
  41d83a:	push   0xce000cda
  41d83f:	out    0xf0,al
  41d841:	call   FWORD PTR [eax-0x26]
  41d844:	or     al,0x0
  41d846:	iret   
  41d847:	loop   0x41d839
  41d849:	dec    edi
  41d84b:	(bad)  
  41d84d:	inc    BYTE PTR [eax-0x1e]
  41d850:	lock dec bh
  41d853:	fimul  DWORD PTR [edi+edi*8]
  41d856:	xor    dh,ah
  41d858:	or     al,0xff
  41d85a:	iret   
  41d85b:	(bad)  
  41d85d:	dec    edi
  41d85f:	loop   0x41d86d
  41d861:	add    dh,cl
  41d863:	(bad)  
  41d865:	call   DWORD PTR [eax]
  41d867:	loop   0x41d859
  41d869:	dec    BYTE PTR [eax]
  41d86b:	out    0xf0,al
  41d86d:	dec    bh
  41d86f:	loop   0x41d861
  41d871:	(bad)  
  41d872:	clc    
  41d873:	in     eax,0xf0
  41d875:	dec    edi
  41d877:	jg     0x41d85c
  41d879:	inc    DWORD PTR [eax]
	...
  41d883:	add    al,ch
  41d885:	jle    0x41d86a
  41d887:	add    ecx,edi
  41d889:	jg     0x41d86a
  41d88b:	add    ebx,eax
  41d88d:	iret   
  41d88e:	loop   0x41d88f
  41d890:	ror    edi,1
  41d892:	loop   0x41d897
  41d894:	iret   
  41d895:	jg     0x41d87e
  41d897:	add    eax,eax
  41d899:	add    BYTE PTR [ebx],0x84
  41d89c:	(bad)  
  41d89e:	loop   0x41d823
  41d8a0:	iret   
  41d8a1:	jmp    edx
  41d8a3:	or     edi,0x7f
  41d8a6:	ret    
  41d8a7:	cmp    DWORD PTR [edi-0x40fc1c81],0x7f
  41d8ae:	ret    
  41d8af:	add    ecx,edi
  41d8b1:	jg     0x41d876
  41d8b3:	add    ebx,edi
  41d8b5:	inc    edx
  41d8b7:	or     edi,0xffffffff
  41d8ba:	ret    0xcf03
  41d8bd:	inc    edx
  41d8bf:	sbb    edi,0xffffffff
  41d8c2:	loop   0x41d847
  41d8c4:	mov    edi,0xcf03e2ff
  41d8c9:	jmp    edx
  41d8cb:	or     edi,0xffffffff
  41d8ce:	loop   0x41d8d3
  41d8d0:	mov    edi,0xcf04037f
  41d8d5:	jg     0x41d8da
  41d8d7:	add    al,0xdf
  41d8d9:	jmp    edx
  41d8db:	sbb    edi,0x7f
  41d8de:	add    eax,DWORD PTR [edi+ebx*8]
  41d8e1:	jg     0x41d8a6
  41d8e3:	or     edi,0xffffffff
  41d8e6:	loop   0x41d8eb
	...
  41d8f0:	add    BYTE PTR [eax],al
  41d8f2:	iret   
  41d8f3:	jg     0x41d8d8
  41d8f5:	add    ecx,edi
  41d8f7:	jmp    edx
  41d8f9:	or     edi,0x7f
  41d8fc:	ret    
  41d8fd:	sbb    edi,0x7f
  41d900:	jecxz  0x41d905
  41d902:	(bad)  
  41d904:	or     ecx,ecx
  41d906:	int3   
  41d907:	outs   dx,DWORD PTR ds:[esi]
  41d908:	or     al,0xc9
  41d90a:	int3   
  41d90b:	jg     0x41d899
  41d90d:	jmp    0xe94e58de
  41d912:	dec    esp
  41d913:	jo     0x41d921
  41d915:	or     DWORD PTR [ebx-0x80],edx
  41d918:	or     al,0xe9
  41d91a:	dec    esp
  41d91b:	jo     0x41d8a9
  41d91d:	jmp    0x9ce48ee
  41d922:	dec    ebx
  41d923:	jg     0x41d931
  41d925:	jmp    0x94e58f6
  41d92a:	dec    ebx
  41d92b:	outs   dx,DWORD PTR ds:[esi]
  41d92c:	or     al,0xc9
  41d92e:	int3   
  41d92f:	outs   dx,DWORD PTR ds:[esi]
  41d930:	mov    ecx,gs
  41d932:	int3   
  41d933:	outs   dx,DWORD PTR ds:[esi]
  41d934:	or     al,0xc9
  41d936:	dec    esp
  41d937:	jg     0x41d8c5
  41d939:	jmp    0xe9ce490a
  41d93e:	dec    esp
  41d93f:	outs   dx,DWORD PTR ds:[esi]
  41d940:	mov    ecx,gs
  41d942:	dec    esp
  41d943:	jg     0x41d951
  41d945:	jmp    0xe9ce4916
  41d94a:	dec    esp
  41d94b:	jg     0x41d8d9
  41d94d:	or     ebx,edx
  41d94f:	jg     0x41d95d
  41d951:	or     DWORD PTR [ebx+0x6f],ecx
  41d954:	mov    WORD PTR [ecx],cs
	...
  41d95e:	add    BYTE PTR [eax],al
  41d960:	push   ebx
  41d961:	outs   dx,DWORD PTR ds:[esi]
  41d962:	or     al,0x9
  41d964:	retf   
  41d965:	jg     0x41d973
  41d967:	jmp    0xe94e58b8
  41d96c:	int3   
  41d96d:	jg     0x41d8fb
  41d96f:	or     DWORD PTR [ebx+0x7f],edx
  41d972:	or     al,0xe9
  41d974:	dec    esp
  41d975:	outs   dx,DWORD PTR ds:[esi]
  41d976:	mov    ecx,gs
  41d978:	int3   
  41d979:	outs   dx,DWORD PTR ds:[esi]
  41d97a:	or     al,0xc9
  41d97c:	int3   
  41d97d:	jg     0x41d90b
  41d97f:	leave  
  41d980:	int3   
  41d981:	outs   dx,DWORD PTR ds:[esi]
  41d982:	or     al,0xc9
  41d984:	dec    esp
  41d985:	jg     0x41d913
  41d987:	add    BYTE PTR [esi],dl
  41d989:	or     BYTE PTR [eax+eax*4],0x16
  41d98d:	sbb    BYTE PTR [eax+eax*1],0xe6
  41d991:	add    DWORD PTR [eax+eax*1],ebx
  41d994:	out    0x81,al
  41d996:	or     al,0x0
  41d998:	test   BYTE PTR [ecx],0xc
  41d99b:	adc    dh,0x3
  41d99e:	or     al,0x0
  41d9a0:	out    0x81,al
  41d9a2:	or     al,0x80
  41d9a4:	mov    BYTE PTR [ebx+0x3d6801c],0x1c
  41d9ab:	xor    BYTE PTR [esi-0x51ffe3ff],0x83
  41d9b2:	or     al,0x0
  41d9b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9b5:	or     DWORD PTR [esi],0x8
  41d9b8:	mov    dh,0x81
  41d9ba:	or     al,0x0
  41d9bc:	sahf   
  41d9bd:	or     DWORD PTR [esi],0xc83a608
  41d9c3:	or     BYTE PTR [eax],al
	...
  41d9cd:	add    BYTE PTR [esi+0x7e000c81],ah
  41d9d3:	or     DWORD PTR [esi],0x0
  41d9d6:	jbe    0x41d95b
  41d9d8:	or     al,0x8
  41d9da:	outs   dx,BYTE PTR ds:[esi]
  41d9db:	or     DWORD PTR [esi],0xc816e00
  41d9e1:	or     BYTE PTR [esi-0x7f],bl
  41d9e4:	or     al,0x8
  41d9e6:	jbe    0x41d969
  41d9e8:	push   cs
  41d9e9:	add    BYTE PTR [esi-0x7d],ch
  41d9ec:	push   cs
  41d9ed:	or     BYTE PTR [esi-0x7f],ch
  41d9f0:	push   cs
  41d9f1:	add    BYTE PTR [esi],dh
  41d9f3:	or     DWORD PTR [esi],0xc833e08
  41d9f9:	add    BYTE PTR [esi],ah
  41d9fb:	or     DWORD PTR [eax+ecx*1],0xc812e
  41da02:	or     DWORD PTR ss:[esi],0x8
  41da06:	or     DWORD PTR ss:[eax+eax*1],0xffffffcf
  41da0b:	(bad)  
  41da0c:	push   es
  41da0d:	add    cl,bh
  41da0f:	(bad)  
  41da10:	or     al,0x2
  41da12:	xlat   BYTE PTR ds:[ebx]
  41da13:	into   
  41da14:	or     al,0x2
  41da16:	xlat   BYTE PTR ds:[ebx]
  41da17:	into   
  41da18:	push   es
  41da19:	add    cl,bh
  41da1b:	fiadd  WORD PTR [esi]
  41da1d:	add    bh,al
  41da1f:	(bad)  
  41da20:	push   es
  41da21:	add    cl,bh
  41da23:	(bad)  
  41da24:	or     al,0x2
  41da26:	iret   
  41da27:	into   
  41da28:	push   es
  41da29:	add    bh,al
  41da2b:	fimul  WORD PTR [eax+eax*1]
  41da2e:	iret   
  41da2f:	fiadd  WORD PTR [esi]
  41da31:	add    al,BYTE PTR [eax]
	...
  41da3b:	add    bh,dl
  41da3d:	(bad)  
  41da3e:	push   es
  41da3f:	add    bh,cl
  41da41:	(bad)  
  41da42:	or     al,0x0
  41da44:	(bad)  
  41da45:	(bad)  
  41da46:	push   es
  41da47:	add    al,bh
  41da49:	(bad)  
  41da4a:	or     al,0x0
  41da4c:	xlat   BYTE PTR ds:[ebx]
  41da4d:	into   
  41da4e:	or     al,0x2
  41da50:	iret   
  41da51:	into   
  41da52:	push   es
  41da53:	add    bh,cl
  41da55:	(bad)  
  41da56:	or     al,0x2
  41da58:	iret   
  41da59:	(bad)  
  41da5a:	push   es
  41da5b:	add    dl,bh
  41da5d:	(bad)  
  41da5e:	push   es
  41da5f:	add    bh,dl
  41da61:	(bad)  
  41da62:	or     al,0x0
  41da64:	iret   
  41da65:	(bad)  
  41da66:	push   es
  41da67:	add    bh,cl
  41da69:	fimul  WORD PTR [edx+eax*1]
  41da6c:	iret   
  41da6d:	into   
  41da6e:	push   es
  41da6f:	add    dl,bh
  41da71:	(bad)  
  41da72:	push   es
  41da73:	add    bh,al
  41da75:	fimul  WORD PTR [eax+eax*1]
  41da78:	(bad)  
  41da79:	(bad)  
  41da7a:	push   es
  41da7b:	add    bh,cl
  41da7d:	(bad)  
  41da7e:	or     al,0x0
  41da80:	iret   
  41da81:	into   
  41da82:	or     al,0x2
  41da84:	(bad)  
  41da85:	fiadd  WORD PTR [esi]
  41da87:	add    bh,al
  41da89:	(bad)  
  41da8a:	or     al,0x2
  41da8c:	iret   
  41da8d:	jg     0x41da72
  41da8f:	add    ecx,edi
  41da91:	ja     0x41da8e
  41da93:	add    eax,0x3eb77cd
  41da98:	iret   
  41da99:	jg     0x41da86
  41da9b:	add    eax,0x5e37fcd
	...
  41daa8:	add    BYTE PTR [eax],al
  41daaa:	int    0x7f
  41daac:	sti    
  41daad:	add    ecx,edi
  41daaf:	ja     0x41da94
  41dab1:	add    ecx,ebp
  41dab3:	ja     0x41daa0
  41dab5:	add    eax,0x5fb77cf
  41daba:	iret   
  41dabb:	jg     0x41daa0
  41dabd:	add    ecx,ebp
  41dabf:	ja     0x41daac
  41dac1:	add    eax,0x3eb7fcd
  41dac6:	iret   
  41dac7:	jg     0x41dac4
  41dac9:	add    ecx,ebp
  41dacb:	ja     0x41dab0
  41dacd:	add    eax,0x23e47fcd
  41dad2:	dec    edi
  41dad3:	and    BYTE PTR [ebx+eiz*1-0x31],0x7f
  41dad8:	fs and ecx,edi
  41dadb:	jg     0x41db40
  41dadd:	add    ecx,edi
  41dadf:	jg     0x41db44
  41dae1:	and    ecx,DWORD PTR [edi-0x80]
  41dae4:	add    ecx,DWORD PTR fs:[edi-0x80]
  41dae8:	in     al,0x3
  41daea:	dec    edi
  41daeb:	and    ah,0x23
  41daee:	iret   
  41daef:	jg     0x41dad4
  41daf1:	add    ecx,edi
  41daf3:	jg     0x41dad8
  41daf5:	and    ecx,DWORD PTR [edi-0x80]
  41daf8:	jecxz  0x41db1d
  41dafa:	dec    edi
  41dafb:	and    BYTE PTR [esp+0x4f],0x80
  41db00:	fs add al,0xcf
  41db03:	jg     0x41dae8
  41db05:	add    ecx,edi
  41db07:	jg     0x41db6c
  41db09:	add    al,0x4f
  41db0b:	and    ah,0x3
	...
  41db16:	add    BYTE PTR [eax],al
  41db18:	dec    edi
  41db19:	or     BYTE PTR [eax+ebp*8],0xcc
  41db1d:	jg     0x41db2b
  41db1f:	jmp    0xe94e5b10
  41db24:	int3   
  41db25:	dec    DWORD PTR [ebx]
  41db27:	call   0x694ddb18
  41db2c:	retf   
  41db2d:	jg     0x41db3b
  41db2f:	jmp    0xe84ddb00
  41db34:	lods   al,BYTE PTR ds:[esi]
  41db35:	jg     0x41db43
  41db37:	imul   esi,DWORD PTR [ebx-0x3497f381],0xcce80bff
  41db41:	jg     0x41db4f
  41db43:	imul   ebp,DWORD PTR [ebx-0x2c96f381],0xace90bff
  41db4d:	jg     0x41db5b
  41db4f:	imul   esi,ebx,0xeb680bff
  41db55:	dec    DWORD PTR [ebx]
  41db57:	push   0x690c7fd3
  41db5c:	retf   
  41db5d:	dec    DWORD PTR [ebx]
  41db5f:	call   0xe94ddb30
  41db64:	in     al,dx
  41db65:	dec    DWORD PTR [ebx]
  41db67:	push   0x680bfff3
  41db6c:	retf   
  41db6d:	jg     0x41db7b
  41db6f:	jmp    0xe94e5b40
  41db74:	int3   
  41db75:	jg     0x41db83
  41db77:	jmp    0x694ddb28
	...
  41db84:	add    BYTE PTR [eax],al
  41db86:	stos   DWORD PTR es:[edi],eax
  41db87:	jg     0x41db95
  41db89:	imul   edx,ebx,0xcc680bff
  41db8f:	dec    DWORD PTR [ebx]
  41db91:	call   0xe84e5b62
  41db96:	lods   al,BYTE PTR ds:[esi]
  41db97:	dec    DWORD PTR [ebx]
  41db99:	push   0xc7fec
  41db9e:	mov    bh,0x9e
  41dba0:	or     al,0x0
  41dba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dba3:	jle    0x41dbb1
  41dba5:	add    BYTE PTR [edi-0x48ff7362],ah
  41dbab:	jle    0x41dbb9
  41dbad:	add    BYTE PTR [edi],dh
  41dbaf:	jle    0x41dbbd
  41dbb1:	add    BYTE PTR [esi],ah
  41dbb3:	sahf   
  41dbb4:	or     al,0x0
  41dbb6:	daa    
  41dbb7:	jle    0x41db45
  41dbb9:	add    bh,dh
  41dbbb:	popf   
  41dbbc:	or     al,0x0
  41dbbe:	jbe    0x41db5e
  41dbc0:	mov    WORD PTR [eax],es
  41dbc2:	addr16 jle 0x41db51
  41dbc5:	add    bh,ah
  41dbc7:	popf   
  41dbc8:	or     al,0x0
  41dbca:	jbe    0x41db6a
  41dbcc:	or     al,0x0
  41dbce:	idiv   BYTE PTR [ebp-0x74]
  41dbd1:	add    bh,ah
  41dbd3:	popf   
  41dbd4:	mov    WORD PTR [eax],es
  41dbd6:	data16 jle 0x41dbe5
  41dbd9:	add    BYTE PTR [esi-0x49ff7383],dh
  41dbdf:	popf   
  41dbe0:	or     al,0x0
  41dbe2:	es popf 
  41dbe4:	mov    WORD PTR [eax],es
  41dbe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbe7:	test   BYTE PTR [eax+eax*1],cl
	...
  41dbf2:	add    BYTE PTR [eax],al
  41dbf4:	mov    dh,0x84
  41dbf6:	add    al,0x2
  41dbf8:	mov    dh,0x7d
  41dbfa:	add    al,0x2
  41dbfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbfd:	test   BYTE PTR [edx+eax*2],cl
  41dc00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc01:	jge    0x41dc07
  41dc03:	add    BYTE PTR [esi-0x7c],dh
  41dc06:	or     al,0x0
  41dc08:	jbe    0x41dc87
  41dc0a:	or     al,0x40
  41dc0c:	data16 jge 0x41dc13
  41dc0f:	add    ah,BYTE PTR [esi-0x7c]
  41dc12:	add    al,0x40
  41dc14:	jbe    0x41dc93
  41dc16:	add    al,0x0
  41dc18:	jbe    0x41dc98
  41dc1a:	or     al,0x2
  41dc1c:	data16 jle 0x41dc23
  41dc1f:	inc    eax
  41dc20:	iret   
  41dc21:	(bad)  
  41dc22:	or     eax,0xcd68d00
  41dc27:	or     BYTE PTR [ebp-0x30f7f22a],cl
  41dc2d:	(bad)  
  41dc2e:	or     al,0x0
  41dc30:	(bad)  
  41dc31:	(bad)  
  41dc32:	or     al,0x0
  41dc34:	int    0xd6
  41dc36:	or     al,0x8
  41dc38:	(bad)  
  41dc39:	(bad)  
  41dc3a:	or     al,0x8
  41dc3c:	(bad)  
  41dc3d:	(bad)  
  41dc3e:	or     al,0x0
  41dc40:	iret   
  41dc41:	(bad)  
  41dc42:	or     eax,0xdd68f00
  41dc47:	or     BYTE PTR [ebp-0x72f7f22a],cl
  41dc4d:	(bad)  
  41dc4e:	or     eax,0xcd6cd00
  41dc53:	or     BYTE PTR [ebp+0xdd6],cl
	...
  41dc61:	add    BYTE PTR [edi-0x30fff32a],cl
  41dc67:	(bad)  
  41dc68:	or     al,0x0
  41dc6a:	(bad)  
  41dc6b:	(bad)  
  41dc6c:	or     eax,0xcd6cd08
  41dc71:	add    ch,cl
  41dc73:	(bad)  
  41dc74:	or     al,0x0
  41dc76:	or     eax,0xcf080dd7
  41dc7b:	(bad)  
  41dc7c:	or     al,0x8
  41dc7e:	iret   
  41dc7f:	(bad)  
  41dc80:	or     eax,0xdd70d00
  41dc85:	add    bh,cl
  41dc87:	(bad)  
  41dc88:	or     al,0x0
  41dc8a:	int    0xd6
  41dc8c:	or     al,0x0
  41dc8e:	(bad)  
  41dc90:	or     al,0x8
  41dc92:	int    0xd6
  41dc94:	or     eax,0xdd70d00
  41dc99:	or     BYTE PTR [edi],cl
  41dc9b:	xlat   BYTE PTR ds:[ebx]
  41dc9c:	or     eax,0xcd6cd00
  41dca1:	add    BYTE PTR [edi],cl
  41dca3:	and    bl,0x3
  41dca6:	(bad)  
  41dca7:	cmp    eax,0x7dc702e3
  41dcac:	jecxz  0x41dcb0
  41dcae:	xlat   BYTE PTR ds:[ebx]
  41dcaf:	aas    
  41dcb0:	jecxz  0x41dcb4
  41dcb2:	iret   
  41dcb3:	jg     0x41dc98
  41dcb5:	add    ecx,edi
  41dcb7:	jge    0x41dc9c
  41dcb9:	add    eax,edi
  41dcbb:	cmp    eax,0x3dd702e3
  41dcc0:	jecxz  0x41dcc4
  41dcc2:	xlat   BYTE PTR ds:[ebx]
  41dcc3:	jg     0x41dca8
  41dcc5:	add    eax,DWORD PTR [eax]
	...
  41dccf:	add    bh,cl
  41dcd1:	cmp    eax,0x3dc702e3
  41dcd6:	jecxz  0x41dcdb
  41dcd8:	xlat   BYTE PTR ds:[ebx]
  41dcd9:	jge    0x41dcbe
  41dcdb:	add    ecx,edi
  41dcdd:	jg     0x41dcc2
  41dcdf:	add    eax,edi
  41dce1:	aas    
  41dce2:	jecxz  0x41dce7
  41dce4:	iret   
  41dce5:	cmp    eax,0x7fd702e3
  41dcea:	jecxz  0x41dcee
  41dcec:	iret   
  41dced:	jge    0x41dcd2
  41dcef:	add    cl,bh
  41dcf1:	aas    
  41dcf2:	jecxz  0x41dcf7
  41dcf4:	(bad)  
  41dcf5:	jg     0x41dcda
  41dcf7:	add    ecx,edi
  41dcf9:	jg     0x41dcde
  41dcfb:	add    edx,edi
  41dcfd:	aas    
  41dcfe:	jecxz  0x41dd02
  41dd00:	mov    DWORD PTR [ecx+0x3fcf02e3],0x9fcf03d3
  41dd0a:	jecxz  0x41dd0f
  41dd0c:	push   fs
  41dd0e:	jecxz  0x41dcd3
  41dd10:	cwde   
  41dd11:	(bad)  
  41dd12:	bnd ret 
  41dd14:	rcr    BYTE PTR [edi-0x5ff0fc1d],1
  41dd1a:	repz add ecx,edi
  41dd1d:	jg     0x41dcf2
  41dd1f:	ret    
  41dd20:	mov    eax,0xf03e39f
  41dd25:	or     BYTE PTR [ecx+ebp*8],0x8c
  41dd29:	(bad)  
  41dd2a:	adc    cl,bl
  41dd2c:	mov    WORD PTR [edi+0x3fcce90c],es
  41dd32:	or     al,0xf9
	...
  41dd3c:	add    BYTE PTR [eax],al
  41dd3e:	int3   
  41dd3f:	jg     0x41dd6d
  41dd41:	stc    
  41dd42:	int3   
  41dd43:	aas    
  41dd44:	or     al,0xe9
  41dd46:	or     al,0xc7
  41dd48:	adc    cl,ch
  41dd4a:	int3   
  41dd4b:	jg     0x41dd79
  41dd4d:	(bad)  [edi+eax*8]
  41dd50:	lock jmp 0xd94e5d22
  41dd56:	int3   
  41dd57:	aas    
  41dd58:	or     al,0xf9
  41dd5a:	or     al,0xc7
  41dd5c:	adc    cl,ch
  41dd5e:	or     al,0xc7
  41dd60:	lock jmp 0xf94e6472
  41dd66:	or     al,0xc7
  41dd68:	adc    cl,bl
  41dd6a:	int3   
  41dd6b:	jg     0x41dd79
  41dd6d:	fxch   st(4)
  41dd6f:	aas    
  41dd70:	sub    al,0xd9
  41dd72:	int3   
  41dd73:	aas    
  41dd74:	sub    al,0xe9
  41dd76:	int3   
  41dd77:	jg     0x41dd85
  41dd79:	stc    
  41dd7a:	or     al,0x87
  41dd7c:	or     al,0xe9
  41dd7e:	or     al,0x87
  41dd80:	sub    al,0xf9
  41dd82:	mov    esi,es
  41dd84:	lock jmp 0xe94e6416
  41dd8a:	mov    WORD PTR [esi+0x7fcce92c],es
  41dd90:	sub    al,0xe9
  41dd92:	mov    esi,es
  41dd94:	adc    cl,bl
  41dd96:	int3   
  41dd97:	jg     0x41dda5
  41dd99:	stc    
  41dd9a:	int3   
  41dd9b:	aas    
  41dd9c:	sub    al,0xe9
  41dd9e:	mov    WORD PTR [esi+0xf90c],es
	...
  41ddac:	mov    WORD PTR [esi+0x3fcce92c],es
  41ddb2:	or     al,0x0
  41ddb4:	xchg   esi,eax
  41ddb5:	ret    0xfff0
  41ddb8:	xchg   esi,eax
  41ddb9:	or     BYTE PTR [eax+eiz*1],0x76
  41ddbd:	or     BYTE PTR [eax+eax*1+0x76],0xc2
  41ddc2:	lock pop ds
  41ddc4:	data16 or BYTE PTR [eax+eiz*1],0x56
  41ddc9:	ret    0xfff0
  41ddcc:	inc    esi
  41ddcd:	or     BYTE PTR [eax+eiz*1],0x46
  41ddd1:	ret    0x2030
  41ddd4:	es ret 0x30
  41ddd8:	or     BYTE PTR es:[eax+eiz*1+0x6],0xc2
  41ddde:	xor    BYTE PTR [eax],al
  41dde0:	ss ret 0x2030
  41dde4:	or     BYTE PTR es:[eax+eax*1],0x16
  41dde9:	or     BYTE PTR [eax+eiz*1+0x6],0x82
  41ddee:	or     al,0x0
  41ddf0:	test   cl,0xf0
  41ddf3:	jmp    esi
  41ddf5:	or     DWORD PTR [eax+eiz*1+0x16],0xf60030c2
  41ddfd:	shl    eax,0xff
  41de00:	push   es
  41de01:	or     BYTE PTR [eax+eax*1-0x2a],0xc1
  41de06:	lock pop ds
  41de08:	out    0x81,al
  41de0a:	or     al,0x0
  41de0c:	mov    dh,0xc1
  41de0e:	xor    BYTE PTR [eax],ah
	...
  41de18:	add    BYTE PTR [eax],al
  41de1a:	mov    dh,0x81
  41de1c:	or     al,0x20
  41de1e:	xchg   esi,eax
  41de1f:	or     DWORD PTR [eax+eax*1-0x6a],0xb61ff0c1
  41de27:	sub    DWORD PTR [eax+eax*1],0x42c81b4
  41de2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de2f:	leave  
  41de30:	lock add esp,DWORD PTR [esi-0x30fff37f]
  41de37:	(bad)  
  41de38:	hlt    
  41de39:	inc    DWORD PTR [eax-0x33000b27]
  41de3f:	fdiv   st,st(4)
  41de41:	pop    ds
  41de42:	iret   
  41de43:	(bad)  
  41de44:	hlt    
  41de45:	pop    ds
  41de46:	rcr    eax,cl
  41de48:	hlt    
  41de49:	pop    ds
  41de4a:	retf   
  41de4b:	(bad)  
  41de4c:	or     al,0x20
  41de4e:	iret   
  41de4f:	(bad)  
  41de50:	or     al,0x0
  41de52:	iret   
  41de53:	fmul   DWORD PTR [eax+eax*1]
  41de56:	rcr    eax,cl
  41de58:	or     al,0x0
  41de5a:	iret   
  41de5b:	(bad)  
  41de5c:	or     al,0x0
  41de5e:	rcr    eax,cl
  41de60:	or     al,0x20
  41de62:	retf   
  41de63:	fdiv   st,st(4)
  41de65:	jmp    FWORD PTR [eax]
  41de67:	xlat   BYTE PTR ds:[ebx]
  41de68:	hlt    
  41de69:	dec    esp
  41de6b:	fdiv   st,st(4)
  41de6d:	pop    ds
  41de6e:	iret   
  41de6f:	fmul   DWORD PTR [eax+eiz*1]
  41de72:	iret   
  41de73:	(bad)  
  41de74:	hlt    
  41de75:	dec    esp
  41de77:	fmul   DWORD PTR [eax+eax*1]
  41de7a:	retf   
  41de7b:	(bad)  
  41de7c:	or     al,0x20
	...
  41de86:	add    BYTE PTR [eax],al
  41de88:	rcl    esi,cl
  41de8a:	hlt    
  41de8b:	pop    ds
  41de8c:	retf   
  41de8d:	fmul   DWORD PTR [eax+eiz*1]
  41de90:	iret   
  41de91:	(bad)  
  41de92:	or     al,0x20
  41de94:	retf   
  41de95:	(bad)  
  41de96:	hlt    
  41de97:	(bad)  
  41de98:	fcomp  st(0)
  41de9a:	hlt    
  41de9b:	call   eax
  41de9d:	fdiv   st,st(4)
  41de9f:	pop    ds
  41dea0:	rcl    esi,cl
  41dea2:	hlt    
  41dea3:	pop    ds
  41dea4:	iret   
  41dea5:	fmul   DWORD PTR [eax+eax*1]
  41dea8:	iret   
  41dea9:	(bad)  
  41deaa:	or     al,0x0
  41deac:	retf   
  41dead:	(bad)  
  41deae:	hlt    
  41deaf:	pop    ds
  41deb0:	iret   
  41deb1:	(bad)  
  41deb2:	or     al,0x0
  41deb4:	retf   
  41deb5:	(bad)  
  41deb6:	hlt    
  41deb7:	pop    ds
  41deb8:	iret   
  41deb9:	jg     0x41de9e
  41debb:	add    ebp,edi
  41debd:	jg     0x41dea4
  41debf:	sti    
  41dec0:	mov    BYTE PTR [eax-0x7f7f041b],al
  41dec6:	in     eax,0x3
  41dec8:	scas   eax,DWORD PTR es:[edi]
  41dec9:	jnp    0x41deb0
  41decb:	add    ebp,DWORD PTR [edi-0x30fc1a85]
  41ded1:	jg     0x41deb8
  41ded3:	add    ebp,DWORD PTR [edi-0x30fc1c81]
  41ded9:	jnp    0x41debe
  41dedb:	sti    
  41dedc:	push   eax
  41dedd:	and    bl,0x3
  41dee0:	out    dx,eax
  41dee1:	jg     0x41dec6
  41dee3:	sti    
  41dee4:	loopne 0x41df61
  41dee6:	in     eax,0xfb
  41dee8:	cmp    ah,al
  41deea:	in     al,0xfb
	...
  41def4:	add    BYTE PTR [eax],al
  41def6:	sar    BYTE PTR [edi-0x1d],1
  41def9:	sti    
  41defa:	enter  0xe57b,0xfb
  41defe:	and    ah,al
  41df00:	in     al,0x3
  41df02:	iret   
  41df03:	jnp    0x41deea
  41df05:	sti    
  41df06:	mov    al,0x7b
  41df08:	jecxz  0x41df0d
  41df0a:	scas   eax,DWORD PTR es:[edi]
  41df0b:	jnp    0x41def0
  41df0d:	sti    
  41df0e:	loopne 0x41df8f
  41df10:	jecxz  0x41df15
  41df12:	iret   
  41df13:	jg     0x41defa
  41df15:	add    ecx,edi
  41df17:	jg     0x41defe
  41df19:	sti    
  41df1a:	enter  0xe37b,0x3
  41df1e:	iret   
  41df1f:	jg     0x41df06
  41df21:	sti    
  41df22:	mov    eax,0xaf03e37f
  41df27:	jnp    0x41df0c
  41df29:	sti    
  41df2a:	enter  0xe4c3,0x3
  41df2e:	iret   
  41df2f:	jnp    0x41df14
  41df31:	sti    
  41df32:	mov    eax,0xb0fbe37f
  41df37:	ret    
  41df38:	in     al,0x3
  41df3a:	out    dx,eax
  41df3b:	jg     0x41df49
  41df3d:	test   eax,0xe900c39c
  41df42:	pushf  
  41df43:	ret    
  41df44:	lock jmp 0xa94e5b16
  41df4a:	jl     0x41dfcb
  41df4c:	sbb    al,0xe9
  41df4e:	int3   
  41df4f:	jg     0x41df6d
  41df51:	test   eax,0xa900c37c
  41df56:	int3   
  41df57:	jg     0x41df65
  41df59:	jmp    0x41df5e
  41df5e:	add    BYTE PTR [eax],al
  41df60:	add    BYTE PTR [eax],al
  41df62:	add    BYTE PTR [eax],al
  41df64:	int3   
  41df65:	jg     0x41df83
  41df67:	test   eax,0xe90c7bcc
  41df6c:	int3   
  41df6d:	jnp    0x41df8b
  41df6f:	sub    DWORD PTR [ebx+0x7f],ebx
  41df72:	sbb    al,0xe9
  41df74:	cmp    al,0x7f
  41df76:	or     al,0xe9
  41df78:	cmp    al,0x7f
  41df7a:	sbb    al,0x29
  41df7c:	inc    ebx
  41df7d:	jg     0x41df8b
  41df7f:	jmp    0x2a32a2c0
  41df84:	sar    DWORD PTR [edi+0xc],cl
  41df87:	jmp    0x295e5b58
  41df8c:	sar    DWORD PTR [edi+0x1c],cl
  41df8f:	jmp    0x2942a2b0
  41df94:	add    eax,ebx
  41df96:	lock jmp 0x294e5e98
  41df9c:	sar    DWORD PTR [ebx+0xc],cl
  41df9f:	sub    ebx,ecx
  41dfa1:	jnp    0x41dfbf
  41dfa3:	jmp    0x295e5e84
  41dfa8:	fcmovnb st,st(2)
  41dfaa:	lock jmp 0xe94e5f7c
  41dfb0:	int3   
  41dfb1:	jg     0x41dfbf
  41dfb3:	test   eax,0xa91c7bcc
  41dfb8:	int3   
  41dfb9:	jg     0x41dfd7
  41dfbb:	jmp    0x42a27c
  41dfc0:	data16 into 
  41dfc2:	or     al,0x0
  41dfc4:	mov    dh,0x7e
  41dfc6:	or     BYTE PTR [eax],al
	...
  41dfd0:	add    BYTE PTR [eax],al
  41dfd2:	jbe    0x41dfa2
  41dfd4:	or     al,0x0
  41dfd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfd7:	jle    0x41dfe1
  41dfd9:	add    BYTE PTR [esi+0x76100cce],ah
  41dfdf:	into   
  41dfe0:	lock push DWORD PTR [esi]
  41dfe3:	jle    0x41dff1
  41dfe5:	add    BYTE PTR [esi],ah
  41dfe7:	jle    0x41dff1
  41dfe9:	adc    BYTE PTR [esi-0x32],ah
  41dfec:	lock push DWORD PTR [esi]
  41dfef:	into   
  41dff0:	or     al,0x0
  41dff2:	jbe    0x41dfc2
  41dff4:	lock (bad) 
  41dff7:	jle    0x41e005
  41dff9:	add    BYTE PTR [esi+0x36100c7b],ah
  41dfff:	jle    0x41e009
  41e001:	adc    dh,dh
  41e003:	jnp    0x41e00d
  41e005:	adc    BYTE PTR [esi],ah
  41e007:	jle    0x41e015
  41e009:	adc    BYTE PTR [esi],ah
  41e00b:	jle    0x41e015
  41e00d:	add    dh,dh
  41e00f:	retf   
  41e010:	lock (bad) 
  41e013:	jle    0x41e021
  41e015:	add    dh,ah
  41e017:	retf   
  41e018:	or     al,0x10
  41e01a:	out    0x7b,al
  41e01c:	or     BYTE PTR [eax],al
  41e01e:	mov    dh,0x7b
  41e020:	or     al,0x10
  41e022:	idiv   BYTE PTR [ebp+0x8]
  41e025:	adc    dh,ah
  41e027:	int    0xf0
  41e029:	xsha1  (bad)
  41e02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e02b:	retf   
  41e02c:	lock psadbw mm7,QWORD PTR [ebp+0xc]
  41e031:	add    BYTE PTR [esi+0x100ccb],dh
	...
  41e03f:	add    dh,ah
  41e041:	int    0xc
  41e043:	add    dh,ah
  41e045:	int    0xc
  41e047:	add    BYTE PTR [esi-0x33],dh
  41e04a:	lock dec edi
  41e04d:	push   ss
  41e04e:	std    
  41e04f:	(bad)  
  41e050:	mov    eax,0xcf040d17
  41e055:	(bad)  
  41e056:	or     al,0x0
  41e058:	mov    edi,0xbf03fcd6
  41e05d:	dec    esi
  41e05e:	retf   0x98fe
  41e061:	xlat   BYTE PTR ds:[ebx]
  41e062:	or     al,0x0
  41e064:	iret   
  41e065:	(bad)  
  41e066:	or     al,0x0
  41e068:	iret   
  41e069:	out    0x6e,al
  41e06b:	inc    DWORD PTR [eax+0x78ff881f]
  41e071:	and    ecx,DWORD PTR [ebp+0xcd770ff]
  41e077:	add    bh,cl
  41e079:	(bad)  
  41e07a:	or     al,0x0
  41e07c:	iret   
  41e07d:	les    ebp,FWORD PTR [edi-0x1]
  41e080:	pop    eax
  41e081:	mov    bl,0x8a
  41e083:	call   DWORD PTR [eax-0x11]
  41e086:	xchg   edi,edi
  41e088:	dec    eax
  41e089:	xlat   BYTE PTR ds:[ebx]
  41e08a:	or     al,0x0
  41e08c:	iret   
  41e08d:	(bad)  
  41e08e:	or     al,0x0
  41e090:	iret   
  41e091:	fisubr WORD PTR [edi-0x1]
  41e094:	xor    BYTE PTR [edi-0x72],bh
  41e097:	jmp    FWORD PTR [eax]
  41e099:	inc    edi
  41e09a:	mov    bh,bh
  41e09c:	and    bh,dl
  41e09e:	or     al,0x0
  41e0a0:	iret   
  41e0a1:	(bad)  
  41e0a2:	or     al,0x0
	...
  41e0ac:	add    BYTE PTR [eax],al
  41e0ae:	iret   
  41e0af:	or     ch,BYTE PTR [edi-0x1]
  41e0b2:	or     BYTE PTR [edi-0x8ff0072],dl
  41e0b8:	xchg   edi,edi
  41e0ba:	clc    
  41e0bb:	(bad)  
  41e0bc:	or     al,0x0
  41e0be:	iret   
  41e0bf:	(bad)  
  41e0c0:	or     al,0x0
  41e0c2:	iret   
  41e0c3:	in     al,dx
  41e0c4:	outs   dx,BYTE PTR ds:[esi]
  41e0c5:	jmp    eax
  41e0c7:	(bad)  
  41e0c8:	mov    bh,bh
  41e0ca:	fdivr  st,st(6)
  41e0cc:	xchg   edi,edi
  41e0ce:	sar    BYTE PTR [edi-0x1d],1
  41e0d1:	add    ecx,edi
  41e0d3:	jg     0x41e0b8
  41e0d5:	add    ecx,edi
  41e0d7:	jg     0x41e0dc
  41e0d9:	jl     0x41e093
  41e0db:	rcr    dl,0x81
  41e0de:	mov    al,0xc0
  41e0e0:	test   BYTE PTR cs:[eax-0x30fc1d40],ch
  41e0e7:	jg     0x41e0cc
  41e0e9:	add    ecx,edi
  41e0eb:	jg     0x41e0a2
  41e0ed:	jnp    0x41e07f
  41e0ef:	rcr    BYTE PTR [esi-0x7e],0x88
  41e0f3:	shl    dl,0x82
  41e0f6:	add    al,0xe2
  41e0f9:	add    ecx,edi
  41e0fb:	jg     0x41e0e0
  41e0fd:	add    ecx,edi
  41e0ff:	jg     0x41e0f6
  41e101:	jnp    0x41e16b
  41e103:	rol    BYTE PTR [edx-0x7e],0x60
  41e107:	shl    BYTE PTR [esi-0x1d3fa77e],0x3
  41e10e:	iret   
  41e10f:	jg     0x41e0f4
  41e111:	add    eax,DWORD PTR [eax]
	...
  41e11b:	add    bh,cl
  41e11d:	jg     0x41e128
  41e11f:	jnp    0x41e161
  41e121:	shl    BYTE PTR [esi-0x1d3fc77f],0x3
  41e128:	iret   
  41e129:	jg     0x41e10e
  41e12b:	add    ecx,edi
  41e12d:	jg     0x41e112
  41e12f:	add    ecx,edi
  41e131:	jg     0x41e116
  41e133:	add    ecx,edi
  41e135:	jg     0x41e11a
  41e137:	add    ecx,edi
  41e139:	jg     0x41e106
  41e13b:	or     DWORD PTR [eax],0x8188c0
  41e141:	rcl    BYTE PTR [ecx+eax*4-0x7f1d4008],0xf0
  41e149:	mov    edi,0xbfe880f6
  41e14e:	jmp    0x4fcf:0xbbfe080
  41e155:	shl    al,0xb7
  41e158:	dec    edi
  41e159:	shl    al,0xab
  41e15c:	dec    edi
  41e15d:	mov    edi,0xbf4fb9f0
  41e162:	lock mov ch,0x4f
  41e165:	mov    edi,0xbf4fc1f0
  41e16a:	lock (bad) 
  41e16c:	dec    edi
  41e16d:	mov    edi,0xbf4f63f0
  41e172:	lock or DWORD PTR [edi-0x41],0xbf4f6ff0
  41e17a:	lock aaa 
  41e17c:	dec    edi
  41e17d:	mov    edi,0x9f0
	...
  41e18a:	dec    edi
  41e18b:	mov    edi,0xbf4f19f0
  41e190:	lock jmp 0x41e183
  41e193:	mov    esi,0xbee8dbf0
  41e198:	lock (bad) 
  41e19a:	loopne 0x41e15a
  41e19c:	lock mov ebp,0xa1f0bed8
  41e1a2:	sar    BYTE PTR [esi-0x40a8b810],1
  41e1a8:	lock dec edi
  41e1aa:	push   edi
  41e1ab:	mov    edi,0xbf4753f0
  41e1b0:	lock ja 0x41e1fa
  41e1b3:	mov    edi,0xbf5791f0
  41e1b8:	lock ja 0x41e212
  41e1bb:	mov    edi,0xbf47aff0
  41e1c0:	lock xchg ecx,eax
  41e1c2:	inc    edi
  41e1c3:	mov    edi,0xbf578df0
  41e1c8:	lock xchg ebp,eax
  41e1ca:	push   edi
  41e1cb:	mov    edi,0xbf47e9f0
  41e1d0:	lock cmc 
  41e1d2:	inc    edi
  41e1d3:	mov    edi,0x81a00f0
  41e1d8:	icebp  
  41e1d9:	call   FWORD PTR [eax]
  41e1db:	or     cl,dh
  41e1dd:	jmp    FWORD PTR [eax-0x3f000ef8]
  41e1e3:	or     cl,dh
  41e1e5:	jmp    FWORD PTR [edi+eax*1+0x944fff1]
  41e1ec:	icebp  
  41e1ed:	inc    DWORD PTR [eax]
	...
  41e1f7:	add    BYTE PTR [edx+0x8],bl
  41e1fa:	icebp  
  41e1fb:	call   edx
  41e1fd:	or     cl,dh
  41e1ff:	call   FWORD PTR [edx]
  41e201:	or     ecx,esi
  41e203:	jmp    esi
  41e205:	or     cl,dh
  41e207:	jmp    FWORD PTR [eax+0x78fff108]
  41e20d:	or     cl,dh
  41e20f:	call   eax
  41e211:	or     ecx,esi
  41e213:	call   FWORD PTR [edx+0x2afff108]
  41e219:	or     cl,dh
  41e21b:	push   DWORD PTR [eax+ecx*1]
  41e21e:	icebp  
  41e21f:	push   DWORD PTR [esi-0x7e]
  41e222:	or     al,0x0
  41e224:	loopne 0x41e22e
  41e226:	icebp  
  41e227:	(bad)  
  41e228:	clc    
  41e229:	or     ecx,esi
  41e22b:	call   DWORD PTR [eax+0x70fff109]
  41e231:	or     cl,dh
  41e233:	push   DWORD PTR [eax+0x8]
  41e236:	icebp  
  41e237:	inc    DWORD PTR [eax+ecx*1]
  41e23a:	icebp  
  41e23b:	jmp    DWORD PTR [esi]
  41e23d:	or     BYTE PTR [eax+eax*1],0x12
  41e241:	or     cl,dh
  41e243:	push   DWORD PTR [esi]
  41e245:	or     BYTE PTR [eax+eax*1],0xfa
  41e249:	or     cl,dh
  41e24b:	dec    edx
  41e24d:	or     dh,cl
  41e24f:	(bad)  
  41e250:	out    dx,al
  41e251:	or     cl,dh
  41e253:	jmp    FWORD PTR [eax-0x30000ef6]
  41e259:	jl     0x41e1e0
  41e25b:	inc    DWORD PTR [eax]
	...
  41e265:	add    al,dh
  41e267:	add    DWORD PTR [ebp-0x7a441701],0xffffffff
  41e26e:	loopne 0x41e295
  41e270:	xchg   bh,bh
  41e272:	fcomp  DWORD PTR [ebp-0x7a]
  41e275:	call   eax
  41e277:	jnp    0x41e1ff
  41e279:	dec    eax
  41e27b:	jecxz  0x41e202
  41e27d:	inc    eax
  41e27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e280:	or     al,0x0
  41e282:	iret   
  41e283:	jo     0x41e20b
  41e285:	push   DWORD PTR [eax-0x30fff359]
  41e28b:	jl     0x41e213
  41e28d:	jmp    DWORD PTR [eax-0x67007b4f]
  41e293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e294:	or     al,0x0
  41e296:	iret   
  41e297:	mov    edx,0x9f88ff84
  41e29c:	test   bh,bh
  41e29e:	and    bl,0x84
  41e2a1:	(bad)  
  41e2a2:	js     0x41e29b
  41e2a4:	test   bh,bh
  41e2a6:	jo     0x41e299
  41e2a8:	test   bh,bh
  41e2aa:	push   0x60ff850d
  41e2af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2b0:	or     al,0x0
  41e2b2:	iret   
  41e2b3:	xor    al,0x85
  41e2b5:	call   DWORD PTR [eax+0x21]
  41e2b8:	test   edi,edi
  41e2ba:	dec    eax
  41e2bb:	add    DWORD PTR [eax-0x7ffcbf01],eax
  41e2c1:	(bad)  
  41e2c2:	cmp    BYTE PTR ds:0xb30ff80,al
  41e2c8:	cmp    bh,0x0
	...
  41e2d3:	add    BYTE PTR [eax],ch
  41e2d5:	jmp    0x41e356
  41e2d7:	jmp    DWORD PTR [eax]
  41e2d9:	in     eax,dx
  41e2da:	jg     0x41e2db
  41e2dc:	sbb    BYTE PTR ds:0xc310ff80,bl
  41e2e2:	jg     0x41e2e3
  41e2e4:	or     BYTE PTR [eax+0x7fcf03e3],al
  41e2ea:	xchg   ecx,eax
  41e2eb:	mov    eax,?
  41e2ed:	mov    esp,0xbcf08af4
  41e2f2:	loop   0x41e2f7
  41e2f4:	iret   
  41e2f5:	jg     0x41e2a2
  41e2f7:	xchg   al,ah
  41e2f9:	mov    esp,0xbcd88688
  41e2fe:	je     0x41e286
  41e300:	sar    BYTE PTR [edx+eiz*8-0x943377c],1
  41e307:	test   al,al
  41e309:	mov    esp,0xbcb8850a
  41e30e:	add    BYTE PTR [ebp-0x7ae74350],al
  41e314:	test   al,0xbc
  41e316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e317:	test   BYTE PTR [eax-0x677b6d44],ah
  41e31d:	mov    esp,0xbc908496
  41e322:	retf   0x8884
  41e325:	mov    esp,0xbc8084a8
  41e32a:	mov    WORD PTR [ebp-0x7ab54388],es
  41e330:	jo     0x41e2ee
  41e332:	inc    eax
  41e333:	test   DWORD PTR [eax-0x44],ebp
  41e336:	cmp    BYTE PTR [ebp+0x0],al
  41e33c:	add    BYTE PTR [eax],al
  41e33e:	add    BYTE PTR [eax],al
  41e340:	add    BYTE PTR [eax],al
  41e342:	pusha  
  41e343:	mov    esp,0xbc588502
  41e348:	repnz test BYTE PTR [eax-0x44],dl
  41e34c:	in     al,0x87
  41e34e:	dec    eax
  41e34f:	mov    esp,0xbc4087f4
  41e354:	or     BYTE PTR [eax-0x77f143c8],cl
  41e35a:	xor    BYTE PTR [edx+ebp*1+0x28bc2888],bh
  41e361:	mov    BYTE PTR [eax],ah
  41e363:	mov    esp,0xbc188840
  41e368:	or     esi,DWORD PTR [ebx]
  41e36a:	inc    edi
  41e36b:	mov    esp,0xbc5057f0
  41e370:	lock push ecx
  41e372:	dec    eax
  41e373:	mov    esp,0xbc5057f0
  41e378:	lock scas eax,DWORD PTR es:[edi]
  41e37a:	dec    eax
  41e37b:	mov    esp,0xbc50b1f0
  41e380:	lock lea ecx,[eax-0x44]
  41e384:	lock jne 0x41e3d7
  41e387:	mov    esp,0xbc49e9f0
  41e38c:	lock aad 0x51
  41e38f:	mov    ebx,0xbb480df0
  41e394:	lock pop ss
  41e396:	push   eax
  41e397:	mov    ebx,0xbb49aff0
  41e39c:	lock scas eax,DWORD PTR es:[edi]
  41e39e:	push   ecx
  41e39f:	mov    ebx,0xbb49c3f0
  41e3a4:	lock pop ebx
	...
  41e3ae:	add    BYTE PTR [eax],al
  41e3b0:	push   ecx
  41e3b1:	mov    ebx,0xbb497df0
  41e3b6:	lock sbb eax,0xdf0bb51
  41e3bc:	dec    ecx
  41e3bd:	mov    ebx,0xbb5119f0
  41e3c2:	lock out dx,eax
  41e3c4:	inc    esi
  41e3c5:	mov    ebx,0xbb56f7f0
  41e3ca:	lock out 0x56,eax
  41e3cd:	mov    ebx,0xbb46b5f0
  41e3d2:	lock lods eax,DWORD PTR ds:[esi]
  41e3d4:	inc    esi
  41e3d5:	mov    ebx,0xbb569bf0
  41e3da:	lock jmp 0x5f4e63ac
  41e3e0:	push   ecx
  41e3e1:	mov    ebx,0xbb497ff0
  41e3e6:	lock jg 0x41e43a
  41e3e9:	mov    ebx,0x24800f0
  41e3ee:	icebp  
  41e3ef:	jmp    FWORD PTR [eax+0x2]
  41e3f2:	icebp  
  41e3f3:	inc    DWORD PTR [edx+eax*1]
  41e3f6:	icebp  
  41e3f7:	push   esi
  41e3f9:	jle    0x41e407
  41e3fb:	add    BYTE PTR [edx],ch
  41e3fd:	add    dh,cl
  41e3ff:	jmp    esi
  41e401:	jle    0x41e40f
  41e403:	add    dl,dh
  41e405:	add    ecx,esi
  41e407:	call   DWORD PTR [edx]
  41e409:	add    dh,cl
  41e40b:	dec    DWORD PTR [esi]
  41e40d:	add    dh,cl
  41e40f:	push   DWORD PTR [eax+0xfff102]
	...
  41e41d:	add    BYTE PTR [edx-0x2d000efe],dh
  41e423:	add    dh,cl
  41e425:	jmp    DWORD PTR [edx+0x30fff101]
  41e42b:	add    esi,ecx
  41e42d:	push   DWORD PTR [eax]
  41e42f:	add    esi,ecx
  41e431:	jmp    FWORD PTR [edx]
  41e433:	add    esi,ecx
  41e435:	dec    DWORD PTR [edx+0x2]
  41e438:	icebp  
  41e439:	jmp    DWORD PTR [esi-0x43fff382]
  41e43f:	add    dh,cl
  41e441:	push   DWORD PTR [esi+0x7e]
  41e444:	or     al,0x0
  41e446:	loopne 0x41e44a
  41e448:	icebp  
  41e449:	(bad)  
  41e44a:	jl     0x41e452
  41e44c:	icebp  
  41e44d:	jmp    DWORD PTR [esi+0x7e]
  41e450:	or     al,0x0
  41e452:	sub    al,BYTE PTR [esi]
  41e454:	icebp  
  41e455:	dec    DWORD PTR [esi+0x32fff106]
  41e45b:	push   es
  41e45c:	icebp  
  41e45d:	push   DWORD PTR [esi]
  41e45f:	push   es
  41e460:	icebp  
  41e461:	call   FWORD PTR [esi+eax*1-0xf]
  41e465:	call   DWORD PTR [eax+0x26fff10b]
  41e46b:	jle    0x41e479
  41e46d:	add    bh,cl
  41e46f:	push   edx
  41e470:	cmp    bh,0x28
  41e473:	push   ds
  41e474:	test   edi,edi
  41e476:	and    BYTE PTR [esi],bl
  41e478:	test   edi,edi
  41e47a:	sbb    BYTE PTR [eax*4-0x7afdef01],al
  41e481:	inc    DWORD PTR [eax]
	...
  41e48b:	add    BYTE PTR [eax],cl
  41e48d:	sub    al,0x85
  41e48f:	inc    DWORD PTR [eax]
  41e491:	in     al,dx
  41e492:	test   bh,bh
  41e494:	clc    
  41e495:	jmp    0xfa32e41e
  41e49a:	test   bh,bh
  41e49c:	call   0xe14169a4
  41e4a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4a2:	or     al,0x0
  41e4a4:	iret   
  41e4a5:	cmp    al,BYTE PTR [ebp+0x7fd5d0ff]
  41e4ab:	dec    eax
  41e4ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4ae:	or     al,0x0
  41e4b0:	iret   
  41e4b1:	arpl   WORD PTR [eax],cx
  41e4b3:	inc    ecx
  41e4b4:	cmp    eax,0x2a73a7c4
  41e4b9:	jmp    0xe874505d
  41e4be:	or     al,0x3f
  41e4c0:	int    0x14
  41e4c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4c3:	pop    esi
  41e4c4:	xor    esp,ecx
  41e4c6:	lahf   
  41e4c7:	imul   ebp,DWORD PTR [edx],0xffffffa7
  41e4ca:	or     al,0x21
  41e4cc:	iret   
  41e4cd:	in     eax,0xa0
  41e4cf:	ins    BYTE PTR es:[edi],dx
  41e4d0:	cld    
  41e4d1:	or     eax,ebp
  41e4d3:	pop    esi
  41e4d4:	jmp    0xcfa485db
  41e4d9:	lea    ecx,[ebx]
  41e4db:	push   ebp
  41e4dc:	(bad)  
  41e4de:	mov    eax,0xa1100962
  41e4e3:	(bad)  
  41e4e4:	iret   
  41e4e5:	fisttp DWORD PTR ds:0xbb3adc6c
  41e4eb:	imul   esi,DWORD PTR [edx+0xffc838],0x0
	...
  41e4fa:	inc    eax
  41e4fb:	adc    BYTE PTR [ebx+0x422b9203],0xa2
  41e502:	xchg   ecx,eax
  41e503:	sub    esp,DWORD PTR [edi]
  41e505:	lods   eax,DWORD PTR ds:[esi]
  41e506:	scas   eax,DWORD PTR es:[edi]
  41e507:	and    al,0xe3
  41e509:	add    ebx,DWORD PTR [edx+0x7f]
  41e50c:	and    dh,BYTE PTR [eax-0x4fbbe255]
  41e512:	jge    0x41e53d
  41e514:	inc    edi
  41e515:	lods   eax,DWORD PTR ds:[esi]
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	and    al,0xe3
  41e519:	add    edi,ebx
  41e51b:	jle    0x41e554
  41e51d:	lods   eax,DWORD PTR ds:[esi]
  41e51e:	outs   dx,DWORD PTR ds:[esi]
  41e51f:	push   ds
  41e520:	inc    ebp
  41e522:	jle    0x41e546
  41e524:	add    BYTE PTR [edi+ebx*8],al
  41e527:	jle    0x41e538
  41e529:	lods   eax,DWORD PTR ds:[esi]
  41e52a:	outs   dx,DWORD PTR ds:[esi]
  41e52b:	push   ds
  41e52c:	pop    ss
  41e52d:	ret    
  41e52e:	sub    eax,DWORD PTR fs:[edx]
  41e531:	mov    eax,ds:0xdbb8d0
  41e536:	cmp    ebp,DWORD PTR ds:0x302fb1f7
  41e53c:	in     al,dx
  41e53d:	ret    0xb8b8
  41e540:	cmc    
  41e541:	add    BYTE PTR [ebx],ah
  41e543:	sub    eax,0x1f2fb1cf
  41e548:	xlat   BYTE PTR ds:[ebx]
  41e549:	ret    0xb8a0
  41e54c:	rol    DWORD PTR [edx],1
  41e54e:	adc    ah,BYTE PTR [ebx]
  41e550:	mov    bh,0xc5
  41e552:	sub    DWORD PTR [eax+eax*8],ebp
  41e555:	ret    0x33fc
  41e558:	mov    ch,0xaa
  41e55a:	out    dx,al
  41e55b:	xor    cl,BYTE PTR [edi+0xa6]
  41e561:	add    BYTE PTR [eax],al
  41e563:	add    BYTE PTR [eax],al
  41e565:	add    BYTE PTR [eax],al
  41e567:	add    bh,bh
  41e569:	ds jecxz 0x41e56f
  41e56c:	push   esp
  41e56d:	jg     0x41e50f
  41e56f:	mov    ebx,0xa7711ef8
  41e574:	or     eax,0xdeaa712a
  41e579:	sub    BYTE PTR [ecx+0xc29edae],al
  41e57f:	jge    0x41e5a0
  41e581:	sub    al,0x7e
  41e583:	xor    BYTE PTR [edx+0x23],0x7d
  41e587:	sub    bl,dl
  41e589:	fwait
  41e58a:	or     esp,DWORD PTR [esi]
  41e58c:	push   0x5f404a2c
  41e591:	sbb    eax,0x1d65405d
  41e596:	or     al,0x7
  41e598:	sar    DWORD PTR [esi],cl
  41e59a:	jle    0x41e5e0
  41e59c:	ins    BYTE PTR es:[edi],dx
  41e59d:	sub    al,0x67
  41e59f:	das    
  41e5a0:	xor    al,0x24
  41e5a2:	addr16 sbb al,0x2c
  41e5a5:	sub    BYTE PTR [eax+edx*1+0x29],bh
  41e5a9:	and    ecx,DWORD PTR [ebx-0x17]
  41e5ac:	int3   
  41e5ad:	jg     0x41e5bd
  41e5af:	and    al,0x2c
  41e5b1:	sub    BYTE PTR [edx+0x0],bl
  41e5b4:	sub    BYTE PTR [ebx],dh
  41e5b6:	inc    ecx
  41e5b7:	movups XMMWORD PTR [ecx],xmm4
  41e5ba:	pusha  
  41e5bb:	add    al,0xcb
  41e5bd:	into   
  41e5be:	or     eax,0x6b2a791c
  41e5c3:	stc    
  41e5c4:	call   0x4a1d:0x8bde671e
  41e5cb:	rol    BYTE PTR [eax],1
	...
  41e5d5:	add    BYTE PTR [eax+0x22],ah
  41e5d8:	or     al,0x43
  41e5da:	int    0x43
  41e5dc:	popa   
  41e5dd:	enter  0x4b68,0x63
  41e5e1:	retf   
  41e5e2:	pop    esi
  41e5e3:	push   esi
  41e5e4:	jle    0x41e5a6
  41e5e6:	lea    esi,[edi+0x3ccd9af0]
  41e5ec:	addr16 mov ch,0x9c
  41e5ef:	xor    DWORD PTR [ecx-0x76],esp
  41e5f2:	lea    esp,[ebx]
  41e5f4:	push   0x7d30299b
  41e5f9:	jmp    0xa64ce1ca
  41e5fe:	sub    DWORD PTR [ebx],esi
  41e600:	pop    eax
  41e601:	add    BYTE PTR [ebx-0x1a],cl
  41e604:	pusha  
  41e605:	push   eax
  41e606:	inc    edi
  41e607:	out    dx,eax
  41e608:	push   0x3d833641
  41e60d:	add    BYTE PTR [ebp-0xf],dh
  41e610:	ins    DWORD PTR es:[edi],dx
  41e611:	popa   
  41e612:	call   0x6be0:0x94694ce0
  41e619:	je     0x41e5ac
  41e61b:	in     eax,dx
  41e61c:	jns    0x41e65f
  41e61e:	sub    DWORD PTR ss:[ecx+0x0],0xffffffea
  41e623:	loopne 0x41e689
  41e625:	gs (bad) 
  41e628:	inc    esi
  41e629:	imul   edx,DWORD PTR [edx-0x9ffce20],0xda65477b
  41e633:	mov    esi,0xe0d4727d
  41e638:	pop    esi
  41e639:	je     0x41e63b
	...
  41e643:	add    BYTE PTR [esi-0x349ca013],ah
  41e649:	out    dx,al
  41e64a:	jnp    0x41e64c
  41e64c:	push   esi
  41e64d:	jge    0x41e6a6
  41e64f:	imul   ecx,edx,0xd7684be0
  41e655:	in     eax,dx
  41e656:	pop    esp
  41e657:	outs   dx,DWORD PTR ds:[esi]
  41e658:	jecxz  0x41e64a
  41e65a:	fs je  0x41e5fc
  41e65d:	mov    esp,0x828b7479
  41e662:	and    al,0x1
  41e664:	jns    0x41e645
  41e666:	jl     0x41e6b4
  41e668:	xchg   edi,eax
  41e669:	in     eax,dx
  41e66a:	jl     0x41e6b1
  41e66c:	push   esp
  41e66d:	in     al,dx
  41e66e:	pop    edi
  41e66f:	jb     0x41e617
  41e671:	sbb    BYTE PTR ds:0x7ced9203,0x72
  41e678:	xchg   ebp,eax
  41e679:	out    0x60,eax
  41e67b:	inc    ecx
  41e67c:	data16 sbb BYTE PTR [ecx+0x0],0x25
  41e681:	in     al,dx
  41e682:	ins    DWORD PTR es:[edi],dx
  41e683:	popa   
  41e684:	iret   
  41e685:	adc    al,0xac
  41e687:	push   ebx
  41e688:	lock xor eax,0xcf267a9
  41e68e:	mov    ebp,0xa3199d30
  41e693:	pop    esi
  41e694:	mov    edi,0xbb6ca539
  41e699:	test   al,0xc
  41e69b:	and    ecx,ebp
  41e69d:	js     0x41e659
  41e69f:	ins    BYTE PTR es:[edi],dx
  41e6a0:	lods   al,BYTE PTR ds:[esi]
  41e6a1:	cmp    edi,DWORD PTR [ecx-0x31652390]
  41e6a7:	data16 add BYTE PTR [eax],al
	...
  41e6b2:	popf   
  41e6b3:	pop    ecx
  41e6b4:	mov    esp,0x6a018ff
  41e6b9:	dec    ebp
  41e6ba:	lahf   
  41e6bb:	cmp    esp,DWORD PTR [esi-0x56c282b1]
  41e6c1:	bound  edi,QWORD PTR [ecx+edi*2+0x8]
  41e6c5:	and    eax,0x6cba78cd
  41e6ca:	ins    BYTE PTR es:[edi],dx
  41e6cb:	jnp    0x41e686
  41e6cd:	jo     0x41e66b
  41e6cf:	fcmovb st,st(2)
  41e6d1:	bound  esp,QWORD PTR [edi-0x74]
  41e6d4:	or     BYTE PTR [edi+0x6d9f66cf],ch
  41e6da:	imul   ebx,DWORD PTR [esi-0x61],0x71
  41e6de:	cmp    al,0xb3
  41e6e0:	retf   0x3366
  41e6e3:	jl     0x41e6ac
  41e6e5:	(bad)  
  41e6e6:	mov    eax,0x3c6c09b6
  41e6eb:	retf   
  41e6ec:	mov    dh,0x60
  41e6ee:	cmp    dl,bh
  41e6f0:	lahf   
  41e6f1:	ds iret 
  41e6f3:	adc    BYTE PTR ds:0x90cd2646,cl
  41e6f9:	dec    ebp
  41e6fa:	sub    bh,BYTE PTR [edi-0x4509ba60]
  41e700:	stos   DWORD PTR es:[edi],eax
  41e701:	ds iret 
  41e703:	xor    ecx,DWORD PTR ds:0x997fe646
  41e709:	lahf   
  41e70a:	(bad)  
  41e70c:	xor    BYTE PTR [esi+0x4cf7fed],0xa
  41e713:	sbb    edx,DWORD PTR [edi+0xc8]
  41e719:	add    BYTE PTR [eax],al
  41e71b:	add    BYTE PTR [eax],al
  41e71d:	add    BYTE PTR [eax],al
  41e71f:	add    bl,ch
  41e721:	sbb    esi,DWORD PTR [eax-0x59]
  41e724:	in     eax,dx
  41e725:	inc    edi
  41e726:	test   BYTE PTR [ecx-0x3b7fdc54],ch
  41e72c:	inc    eax
  41e72d:	mov    ch,0x58
  41e72f:	add    al,0x92
  41e731:	sbb    cl,BYTE PTR [edi-0x2e]
  41e734:	lods   eax,DWORD PTR ds:[esi]
  41e735:	xor    DWORD PTR [esi-0x55],edx
  41e738:	mov    ebx,0xe1bc2025
  41e73d:	jg     0x41e74c
  41e73f:	add    edx,DWORD PTR [edx-0x5c37d0e6]
  41e745:	and    BYTE PTR [eax+ebp*4+0x6d],al
  41e749:	inc    esi
  41e74a:	dec    ecx
  41e74b:	mov    ds:0x3e33e73,al
  41e750:	cmp    DWORD PTR [esi+0x22],0xffffff9f
  41e754:	jl     0x41e7a6
  41e756:	sub    al,0xb5
  41e758:	pop    esp
  41e759:	sbb    cl,BYTE PTR [eax]
  41e75b:	retf   
  41e75c:	jb     0x41e77b
  41e75e:	repnz add ebp,DWORD PTR [edi]
  41e761:	jg     0x41e785
  41e763:	lahf   
  41e764:	pop    esp
  41e765:	dec    esp
  41e766:	sbb    al,0xaa
  41e768:	sub    al,0x25
  41e76a:	repnz mov ah,0xc
  41e76d:	daa    
  41e76e:	cmc    
  41e76f:	sahf   
  41e770:	das    
  41e771:	sub    al,0xda
  41e773:	mov    ch,0x39
  41e775:	aas    
  41e776:	jecxz  0x41e77b
  41e778:	sbb    bh,BYTE PTR [edi-0x5e]
  41e77b:	sahf   
  41e77c:	sbb    al,0x50
  41e77e:	aad    0xaa
  41e780:	and    bl,BYTE PTR [edi]
  41e782:	scas   eax,DWORD PTR es:[edi]
  41e783:	sahf   
	...
  41e78c:	add    BYTE PTR [eax],al
  41e78e:	add    BYTE PTR [edx],dh
  41e790:	ret    0xf1a1
  41e793:	and    ecx,DWORD PTR [esp+ecx*8]
  41e796:	fwait
  41e797:	xor    BYTE PTR [esi-0x40],bh
  41e79a:	sbb    ecx,DWORD PTR es:[ebx-0x17]
  41e79e:	int3   
  41e79f:	cmp    DWORD PTR [esi],ecx
  41e7a1:	mov    edx,0x9c4d3049
  41e7a6:	sbb    ch,BYTE PTR [esi]
  41e7a8:	addr16 jg 0x41e7d3
  41e7ab:	inc    eax
  41e7ac:	arpl   WORD PTR [ebx+0x31],di
  41e7af:	pop    ds
  41e7b0:	js     0x41e740
  41e7b2:	sub    BYTE PTR ds:0x43cce94b,0xb
  41e7b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7ba:	pop    ecx
  41e7bb:	xor    BYTE PTR [ebx+ebx*2+0x64],bl
  41e7bf:	sub    ch,BYTE PTR [ebx+0x55]
  41e7c2:	dec    eax
  41e7c3:	inc    esp
  41e7c4:	jle    0x41e80c
  41e7c6:	ins    DWORD PTR es:[edi],dx
  41e7c7:	sbb    eax,0x21024460
  41e7cc:	ins    DWORD PTR es:[edi],dx
  41e7cd:	cmp    eax,0x2f622364
  41e7d2:	sub    al,0x29
  41e7d4:	cmp    cl,BYTE PTR [si]
  41e7d7:	mov    ah,0xf0
  41e7d9:	and    ah,cl
  41e7db:	cmp    ah,BYTE PTR [edi+0x1d]
  41e7de:	sbb    ebp,DWORD PTR [esi]
  41e7e0:	arpl   WORD PTR [edi],dx
  41e7e2:	sub    al,0x30
  41e7e4:	cmp    DWORD PTR [bx+di],ebx
  41e7e7:	and    ebp,DWORD PTR [edx+0x0]
  41e7ea:	daa    
  41e7eb:	and    DWORD PTR [ebx+0x17],eax
  41e7ee:	pop    ds
  41e7ef:	jne    0x41e7fd
  41e7f1:	jg     0x41e7f3
	...
  41e7fb:	add    ah,cl
  41e7fd:	cmp    al,0x67
  41e7ff:	std    
  41e800:	mov    ebp,DWORD PTR [esi]
  41e802:	jle    0x41e7ff
  41e804:	pop    ecx
  41e805:	and    eax,0x3165ad78
  41e80a:	addr16 retf 0x2478
  41e80e:	jle    0x41e7e0
  41e810:	lea    esi,[ebx+0x23d3eff0]
  41e816:	jge    0x41e818
  41e818:	push   edx
  41e819:	in     eax,dx
  41e81a:	fs gs cwde 
  41e81d:	shl    al,1
  41e81f:	jmp    FWORD PTR [ebx+0x7d]
  41e822:	inc    ebp
  41e823:	jne    0x41e85f
  41e825:	jecxz  0x41e890
  41e827:	inc    edx
  41e828:	das    
  41e829:	jecxz  0x41e898
  41e82b:	push   esp
  41e82c:	pop    ecx
  41e82d:	shr    BYTE PTR [ecx+0x64],1
  41e830:	push   ebx
  41e831:	mov    esp,0x7f346168
  41e836:	test   DWORD PTR [ecx],eax
  41e838:	and    DWORD PTR [edx],edx
  41e83a:	jge    0x41e890
  41e83c:	pop    edi
  41e83d:	fsub   QWORD PTR [ebx+0x43]
  41e840:	dec    ecx
  41e841:	loop   0x41e8a1
  41e843:	je     0x41e86b
  41e845:	jg     0x41e7fa
  41e847:	add    dh,ch
  41e849:	out    0x6d,eax
  41e84b:	xchg   BYTE PTR gs:[ebx+0x3e],bh
  41e84f:	add    ecx,esi
  41e851:	loopne 0x41e8cf
  41e853:	dec    ebp
  41e854:	(bad)  
  41e856:	jge    0x41e8c4
  41e858:	xor    ecx,0x69
  41e85b:	ins    BYTE PTR es:[edi],dx
  41e85c:	xchg   ebx,eax
  41e85d:	mov    ecx,0x6d51
	...
  41e86a:	xchg   ebx,eax
  41e86b:	mov    esp,0x7d11fff0
  41e870:	inc    eax
  41e871:	inc    ebx
  41e872:	mov    ebx,0xc25360dc
  41e877:	in     eax,dx
  41e878:	imul   ebp,DWORD PTR [esi-0x2f],0x5dfff0bc
  41e87f:	jnp    0x41e8ce
  41e881:	js     0x41e842
  41e883:	out    dx,eax
  41e884:	inc    eax
  41e885:	jb     0x41e860
  41e887:	fisubr WORD PTR [ebp+0x73]
  41e88a:	lds    edi,FWORD PTR [esi-0x5f]
  41e88d:	add    dl,ch
  41e88f:	loopne 0x41e90d
  41e891:	push   ebp
  41e892:	cwde   
  41e893:	out    0x51,al
  41e895:	outs   dx,BYTE PTR ds:[esi]
  41e896:	xchg   edx,eax
  41e897:	fisubr DWORD PTR [ebp+0x64]
  41e89a:	iret   
  41e89b:	jecxz  0x41e851
  41e89d:	pusha  
  41e89e:	xor    bl,cl
  41e8a0:	mov    al,ds:0xaecb2066
  41e8a5:	data16 sti 
  41e8a7:	in     al,dx
  41e8a8:	stos   DWORD PTR es:[edi],eax
  41e8a9:	jno    0x41e87a
  41e8ab:	mov    ebp,0xbbe971ab
  41e8b0:	test   al,0x30
  41e8b2:	mov    ebp,0xfb6b90ca
  41e8b7:	test   al,0xc
  41e8b9:	mov    edi,ecx
  41e8bb:	in     eax,0xba
  41e8bd:	(bad)  
  41e8be:	out    dx,al
  41e8bf:	or     al,0xac
  41e8c1:	push   eax
  41e8c2:	(bad)  [esi]
  41e8c4:	lods   al,BYTE PTR ds:[esi]
  41e8c5:	pop    esi
  41e8c6:	mov    edx,0x8847a6e1
  41e8cb:	cld    
  41e8cc:	test   eax,0x61
  41e8d1:	add    BYTE PTR [eax],al
  41e8d3:	add    BYTE PTR [eax],al
  41e8d5:	add    BYTE PTR [eax],al
  41e8d7:	add    BYTE PTR [esi-0x306af2cc],ch
  41e8dd:	popa   
  41e8de:	stos   DWORD PTR es:[edi],eax
  41e8df:	jae    0x41e878
  41e8e1:	pop    ecx
  41e8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8e3:	ins    BYTE PTR es:[edi],dx
  41e8e4:	lods   eax,DWORD PTR ds:[esi]
  41e8e5:	inc    edi
  41e8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8e7:	inc    ebp
  41e8e8:	popf   
  41e8e9:	jno    0x41e88e
  41e8eb:	push   eax
  41e8ec:	fwait
  41e8ed:	jbe    0x41e89a
  41e8ef:	pop    esi
  41e8f0:	jp     0x41e89a
  41e8f2:	or     al,0xe
  41e8f4:	iret   
  41e8f5:	gs test eax,0xa73b7d40
  41e8fb:	jae    0x41e967
  41e8fd:	popa   
  41e8fe:	mov    ebx,0xca87366
  41e903:	pusha  
  41e904:	iret   
  41e905:	gs test eax,0xa5956e53
  41e90b:	dec    edx
  41e90c:	push   0xffffff8b
  41e90e:	mov    dl,0x71
  41e910:	xor    bh,BYTE PTR [eax+ecx*1+0xd]
  41e914:	iret   
  41e915:	gs test eax,0xa77c3d40
  41e91b:	jae    0x41e947
  41e91d:	cmp    BYTE PTR [ebp+eiz*4-0x5a3bd3e1],0x2f
  41e925:	sbb    esp,ebx
  41e927:	add    ebx,DWORD PTR [esi+0x2da79280]
  41e92d:	inc    edi
  41e92e:	fldcw  WORD PTR [esp+edi*8-0x16583bda]
  41e935:	xor    eax,0x23ea03c0
  41e93a:	enter  0xf2,0x0
	...
  41e946:	mov    esi,0xf4a77f61
  41e94b:	jg     0x41e8dd
  41e94d:	add    edx,ebx
  41e94f:	sub    al,0x93
  41e951:	mov    cl,0xf1
  41e953:	and    DWORD PTR [edi+0x707f919d],edx
  41e959:	mov    dl,0xad
  41e95b:	sub    eax,0x1bf2f1b6
  41e960:	xchg   DWORD PTR [edi+0x412b138],esp
  41e966:	popf   
  41e967:	sbb    al,BYTE PTR [edx-0x3b]
  41e96a:	mov    eax,0xadc9411a
  41e96f:	and    BYTE PTR ss:[ecx+ebx*8+0x7d03bd7f],bh
  41e977:	sbb    al,BYTE PTR [edx-0x2d]
  41e97a:	jge    0x41e996
  41e97c:	xor    eax,0x471e9abb
  41e981:	scas   eax,DWORD PTR es:[edi]
  41e982:	ins    DWORD PTR es:[edi],dx
  41e983:	cmp    bh,BYTE PTR [ebx]
  41e985:	ret    
  41e986:	lock mov al,0x51
  41e989:	add    edi,DWORD PTR [ebp+0x1a]
  41e98c:	or     al,cl
  41e98e:	je     0x41e9b0
  41e990:	push   ss
  41e991:	lahf   
  41e992:	xchg   DWORD PTR [edx],ebx
  41e994:	sbb    al,0x4
  41e996:	add    bh,BYTE PTR [edi+0x15]
  41e999:	lahf   
  41e99a:	xor    eax,DWORD PTR [ecx-0xd]
  41e99d:	sahf   
  41e99e:	xor    al,BYTE PTR [ebp+0xc]
  41e9a1:	or     al,0x74
  41e9a3:	jno    0x41e9b1
  41e9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9a6:	int3   
  41e9a7:	dec    ebp
  41e9a8:	addr16 into 
	...
  41e9b2:	add    BYTE PTR [eax],al
  41e9b4:	imul   esp,DWORD PTR [edx],0x1d97cc77
  41e9ba:	jae    0x41e968
  41e9bc:	push   esp
  41e9bd:	jno    0x41e9cb
  41e9bf:	xchg   ebx,eax
  41e9c0:	int3   
  41e9c1:	dec    ebp
  41e9c2:	addr16 into 
  41e9c4:	(bad)  
  41e9c5:	cs addr16 enter 0x1d30,0x45
  41e9cb:	int3   
  41e9cc:	xor    eax,0xcc460c71
  41e9d1:	dec    ebp
  41e9d2:	mov    ?,WORD PTR [bx+0x1d]
  41e9d6:	js     0x41e98f
  41e9d8:	sub    eax,0x198c7724
  41e9dd:	sub    BYTE PTR [ebx-0x17],cl
  41e9e0:	int3   
  41e9e1:	or     esi,DWORD PTR fs:[eax-0x7e98b381]
  41e9e8:	jo     0x41ea37
  41e9ea:	bound  eax,QWORD PTR [eax-0x7b97dc91]
  41e9f0:	int3   
  41e9f1:	ror    DWORD PTR [edx],0x3b
  41e9f4:	dec    eax
  41e9f5:	sbb    eax,DWORD PTR [ecx+0x59]
  41e9f8:	inc    eax
  41e9f9:	and    cl,BYTE PTR [ebp+0x5c]
  41e9fc:	pop    ebp
  41e9fd:	cs addr16 aas 
  41ea00:	pop    edi
  41ea01:	dec    ebp
  41ea02:	jge    0x41ea50
  41ea04:	cmp    eax,0xcda6f0b0
  41ea09:	dec    ebp
  41ea0a:	addr16 dec esi
  41ea0c:	cmp    BYTE PTR [edx],ah
  41ea0e:	ja     0x41ea4c
  41ea10:	add    DWORD PTR [ecx+0x60],edx
  41ea13:	sbb    al,0x48
  41ea15:	jno    0x41ea23
  41ea17:	add    al,BYTE PTR [eax]
	...
  41ea21:	add    ah,cl
  41ea23:	cmp    ah,BYTE PTR [edi+0x1d]
  41ea26:	or     BYTE PTR [edi],ch
  41ea28:	sbb    ecx,DWORD PTR [bx+di]
  41ea2b:	push   ecx
  41ea2c:	pop    edi
  41ea2d:	add    bl,bl
  41ea2f:	ret    0xfff0
  41ea32:	xlat   BYTE PTR ds:[ebx]
  41ea33:	fbstp  TBYTE PTR [esi+0x61]
  41ea36:	mov    dh,0xda
  41ea38:	cmp    esi,DWORD PTR [edx]
  41ea3a:	jo     0x41ea4b
  41ea3c:	gs ins BYTE PTR es:[edi],dx
  41ea3e:	mov    dh,0x83
  41ea40:	fld    DWORD PTR [eax]
  41ea42:	fld    TBYTE PTR gs:[ebp+0x6c]
  41ea46:	xchg   edx,eax
  41ea47:	out    dx,al
  41ea48:	js     0x41eaaf
  41ea4a:	test   esi,ebx
  41ea4c:	jl     0x41eab3
  41ea4e:	aaa    
  41ea4f:	cmp    DWORD PTR [ebx+0x68],0xffffff8b
  41ea53:	out    0x64,eax
  41ea55:	xor    esi,DWORD PTR [ebp+eiz*4+0x6c]
  41ea59:	ins    BYTE PTR es:[edi],dx
  41ea5a:	xor    al,BYTE PTR [ebx-0x1ae0ff87]
  41ea60:	jl     0x41eac7
  41ea62:	inc    esp
  41ea63:	in     eax,0x6d
  41ea65:	je     0x41ea8c
  41ea67:	icebp  
  41ea68:	push   ecx
  41ea69:	arpl   WORD PTR [ebp-0x42],cx
  41ea6c:	jp     0x41eada
  41ea6e:	ja     0x41e9f3
  41ea70:	jae    0x41ea72
  41ea72:	jg     0x41ea59
  41ea74:	jl     0x41eadb
  41ea76:	mov    ah,0xe4
  41ea78:	ins    DWORD PTR es:[edi],dx
  41ea79:	je     0x41eae0
  41ea7b:	icebp  
  41ea7c:	ins    DWORD PTR es:[edi],dx
  41ea7d:	popa   
  41ea7e:	mov    bl,al
  41ea80:	pop    ebp
  41ea81:	jb     0x41ea15
  41ea83:	(bad)  
  41ea84:	lock inc DWORD PTR [eax]
	...
  41ea8f:	add    BYTE PTR [ecx+0xc],bh
  41ea92:	pop    edi
  41ea93:	imul   edx,eax,0x9a2e7cd8
  41ea99:	fbld   TBYTE PTR [eax+eax*1-0xd]
  41ea9d:	sbb    DWORD PTR [ebx+0x74],0xffffffb4
  41eaa1:	(bad)  
  41eaa2:	jl     0x41eb16
  41eaa4:	scas   eax,DWORD PTR es:[edi]
  41eaa5:	(bad)  
  41eaa6:	lock push esi
  41eaa9:	sbb    DWORD PTR [ebx+0x74],0xffffffc4
  41eaad:	aad    0x4b
  41eaaf:	push   0x3eaf8acf
  41eab4:	iret   
  41eab5:	mov    ah,0x7
  41eab7:	push   ecx
  41eab8:	inc    ebx
  41eab9:	stos   DWORD PTR es:[edi],eax
  41eaba:	fsubr  DWORD PTR [esi+edx*1+0x7f]
  41eabe:	mov    ah,0x3e
  41eac0:	iret   
  41eac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eac2:	pop    es
  41eac3:	push   ecx
  41eac4:	cmp    ebp,DWORD PTR [ebx-0x27e28c27]
  41eaca:	or     al,0xea
  41eacc:	iret   
  41eacd:	jmp    0xc44e5c8a
  41ead2:	mov    esp,0xcd8064d
  41ead7:	push   cs
  41ead8:	into   
  41ead9:	or     DWORD PTR [ecx-0x490ae38f],edi
  41eadf:	inc    esi
  41eae0:	and    BYTE PTR [ecx-0x13188ef4],bl
  41eae6:	mov    ch,0x5e
  41eae8:	fisttp WORD PTR [edi]
  41eaea:	jmp    0x41eb4f
  41eaec:	repz cld 
  41eaee:	or     al,0x36
  41eaf0:	iret   
  41eaf1:	jmp    FWORD PTR [edx+0x62]
  41eaf7:	add    BYTE PTR [eax],al
  41eaf9:	add    BYTE PTR [eax],al
  41eafb:	add    BYTE PTR [eax],al
  41eafd:	add    bl,bl
  41eaff:	frstor [edi+0xd2ab363]
  41eb05:	sub    cl,bh
  41eb07:	add    eax,0x5a773a4
  41eb0c:	mov    edx,0xab2fad73
  41eb11:	pop    esi
  41eb12:	mov    edx,0xcf47083b
  41eb17:	dec    ecx
  41eb18:	lods   eax,DWORD PTR ds:[esi]
  41eb19:	pusha  
  41eb1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb1b:	cmp    esi,DWORD PTR [edi+edi*8+0x61088510]
  41eb22:	js     0x41eb7a
  41eb24:	scas   al,BYTE PTR es:[edi]
  41eb25:	bound  ebp,QWORD PTR [esp+esi*2+0x8]
  41eb29:	es iret 
  41eb2b:	cmp    DWORD PTR [esp+ebp*2+0x6cb9437c],ebp
  41eb32:	ins    BYTE PTR es:[edi],dx
  41eb33:	jg     0x41eb53
  41eb35:	test   eax,0x4277f5c
  41eb3a:	pop    esi
  41eb3b:	and    al,0x9
  41eb3d:	test   al,0xd0
  41eb3f:	lods   eax,DWORD PTR ds:[esi]
  41eb40:	and    eax,0x17233e04
  41eb45:	test   eax,0x3e3342f
  41eb4a:	stc    
  41eb4b:	jg     0x41eb42
  41eb4d:	test   al,0x2f
  41eb4f:	ss jecxz 0x41eb55
  41eb52:	adc    al,BYTE PTR [eax+0x311ca8d6]
  41eb58:	ret    0x27a6
  41eb5b:	sbb    eax,0xad90b7d3
  41eb60:	add    eax,DWORD PTR [eax+eax*1]
	...
  41eb6b:	add    BYTE PTR [edx],ah
  41eb6d:	push   ecx
  41eb6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb6f:	(bad)  
  41eb70:	cld    
  41eb71:	push   ds
  41eb72:	mov    ch,0xb7
  41eb74:	std    
  41eb75:	das    
  41eb76:	jecxz  0x41eb7b
  41eb78:	cli    
  41eb79:	xor    BYTE PTR [edx-0x2a8f085a],dh
  41eb7f:	loope  0x41eb6d
  41eb81:	sbb    edi,DWORD PTR [edi+0x3]
  41eb84:	add    al,0x80
  41eb86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb87:	mov    ds:0xb6b823f1,al
  41eb8c:	lods   eax,DWORD PTR ds:[esi]
  41eb8d:	xor    DWORD PTR [ebx-0x63da4c4b],edx
  41eb93:	lahf   
  41eb94:	lods   eax,DWORD PTR ds:[esi]
  41eb95:	ds jecxz 0x41eb9b
  41eb98:	nop
  41eb99:	jg     0x41eb33
  41eb9b:	mov    eax,ds:0xa8441cb4
  41eba0:	jge    0x41ebd2
  41eba2:	dec    eax
  41eba3:	mov    dh,0x88
  41eba5:	xor    DWORD PTR [edx-0x56],ecx
  41eba8:	test   eax,0x7c04481b
  41ebad:	xor    BYTE PTR [eax-0x4a],al
  41ebb0:	ins    DWORD PTR es:[edi],dx
  41ebb1:	sbb    eax,0x1b6ce239
  41ebb6:	or     al,0x45
  41ebb8:	retf   
  41ebb9:	jg     0x41ebc7
  41ebbb:	jmp    0xe94e6b8c
  41ebc0:	int3   
  41ebc1:	jg     0x41ebcf
  41ebc3:	jmp    0xe94e6b94
  41ebc8:	int3   
  41ebc9:	jg     0x41ebd7
  41ebcb:	jmp    0xe94e6b9c
	...
  41ebd8:	add    BYTE PTR [eax],al
  41ebda:	int3   
  41ebdb:	jg     0x41ebe9
  41ebdd:	jmp    0xe94e6bae
  41ebe2:	int3   
  41ebe3:	jg     0x41ebf1
  41ebe5:	jmp    0xe94e6bb6
  41ebea:	int3   
  41ebeb:	jg     0x41ebf9
  41ebed:	jmp    0xe94e6bbe
  41ebf2:	int3   
  41ebf3:	jg     0x41ec01
  41ebf5:	jmp    0xe94e6bc6
  41ebfa:	int3   
  41ebfb:	jg     0x41ec09
  41ebfd:	jmp    0xe94e6bce
  41ec02:	int3   
  41ec03:	jg     0x41ec11
  41ec05:	jmp    0xe94e6bd6
  41ec0a:	int3   
  41ec0b:	jg     0x41ec19
  41ec0d:	jmp    0xe94e6bde
  41ec12:	int3   
  41ec13:	jg     0x41ec21
  41ec15:	jmp    0xe94e6be6
  41ec1a:	int3   
  41ec1b:	jg     0x41ec29
  41ec1d:	jmp    0xe94e6bee
  41ec22:	int3   
  41ec23:	jg     0x41ec31
  41ec25:	jmp    0xe94e6bf6
  41ec2a:	int3   
  41ec2b:	jg     0x41ec39
  41ec2d:	jmp    0xe94e6bfe
  41ec32:	int3   
  41ec33:	jg     0x41ec41
  41ec35:	jmp    0x4e6c06
  41ec3a:	idiv   BYTE PTR [edi+0xc]
	...
  41ec45:	add    BYTE PTR [eax],al
  41ec47:	add    dh,ah
  41ec49:	jg     0x41ec57
  41ec4b:	add    dh,ah
  41ec4d:	jg     0x41ec5b
  41ec4f:	add    dh,dh
  41ec51:	jg     0x41ec5f
  41ec53:	add    dh,dh
  41ec55:	jg     0x41ec63
  41ec57:	add    dh,ah
  41ec59:	jg     0x41ec67
  41ec5b:	add    dh,ah
  41ec5d:	jg     0x41ec6b
  41ec5f:	add    BYTE PTR [esi-0x49fff381],dh
  41ec65:	jg     0x41ec73
  41ec67:	add    BYTE PTR [esi-0x59fff381],ah
  41ec6d:	jg     0x41ec7b
  41ec6f:	add    BYTE PTR [esi-0x49fff381],dh
  41ec75:	jg     0x41ec83
  41ec77:	add    BYTE PTR [esi-0x59fff381],ah
  41ec7d:	jg     0x41ec8b
  41ec7f:	add    BYTE PTR [esi+0x7f],dh
  41ec82:	or     al,0x0
  41ec84:	jbe    0x41ed05
  41ec86:	or     al,0x0
  41ec88:	data16 jg 0x41ec97
  41ec8b:	add    BYTE PTR [esi+0x7f],ah
  41ec8e:	or     al,0x0
  41ec90:	jbe    0x41ed11
  41ec92:	or     al,0x0
  41ec94:	jbe    0x41ed15
  41ec96:	or     al,0x0
  41ec98:	data16 jg 0x41eca7
  41ec9b:	add    dl,bh
  41ec9d:	neg    bh
  41ec9f:	push   ecx
  41eca0:	push   esp
  41eca1:	inc    ebp
  41eca2:	add    al,0x8a
  41eca4:	xlat   BYTE PTR ds:[ebx]
  41eca5:	idiv   DWORD PTR [esi]
  41eca7:	inc    DWORD PTR [ebp+eiz*4+0x4e]
  41ecab:	ret    
	...
  41ecb4:	add    BYTE PTR [eax],al
  41ecb6:	call   0x3d52:0x8151dff6
  41ecbd:	leave  
  41ecbe:	stos   DWORD PTR es:[edi],eax
  41ecbf:	idiv   BYTE PTR [edx+0x30]
  41ecc2:	inc    esp
  41ecc3:	xor    al,BYTE PTR [eax]
  41ecc5:	mov    ebx,DWORD PTR [ecx-0x28b97a75]
  41eccb:	clc    
  41eccc:	inc    esi
  41eccd:	cld    
  41ecce:	push   esp
  41eccf:	sub    ch,BYTE PTR [ebx+ecx*4]
  41ecd2:	sar    edi,0x30
  41ecd5:	imul   edi,DWORD PTR [ebx-0x7e],0xffffff8c
  41ecd9:	aas    
  41ecda:	xchg   esp,eax
  41ecdb:	xor    ecx,DWORD PTR [esi]
  41ecdd:	jmp    0x41ecd5
  41ecdf:	dec    edx
  41ece0:	push   edx
  41ece1:	mov    esi,edx
  41ece3:	dec    esp
  41ece4:	int    0xcc
  41ece6:	jp     0x41ecde
  41ece8:	fild   WORD PTR [ebx+0x458563bb]
  41ecee:	xlat   BYTE PTR ds:[ebx]
  41ecef:	clc    
  41ecf0:	inc    esi
  41ecf1:	loopne 0x41ed37
  41ecf3:	cmp    al,0xec
  41ecf5:	mov    ebx,DWORD PTR [edx]
  41ecf7:	mov    al,ds:0xf8eb510c
  41ecfc:	push   esi
  41ecfd:	in     al,0x54
  41ecff:	inc    esp
  41ed00:	call   0xd69f490
  41ed05:	dec    ebp
  41ed06:	xbegin 0x5496e54a
  41ed0c:	hlt    
  41ed0d:	mov    ecx,DWORD PTR ds:0xc7450d64
  41ed13:	clc    
  41ed14:	inc    esi
  41ed15:	call   0x8c36295e
	...
  41ed22:	add    BYTE PTR [eax],al
  41ed24:	(bad)  
  41ed25:	pop    edi
  41ed26:	or     eax,0x56f8d755
  41ed2b:	lock inc esp
  41ed2d:	inc    esp
  41ed2e:	hlt    
  41ed2f:	mov    eax,DWORD PTR [edi]
  41ed31:	mov    WORD PTR ds:0x3ef8d74d,cs
  41ed37:	cld    
  41ed38:	or     BYTE PTR [eax+edi*8+0x0],al
  41ed3c:	iret   
  41ed3d:	jg     0x41ed4b
  41ed3f:	jmp    0x41ed07
  41ed41:	not    BYTE PTR [esi-0xc]
  41ed44:	dec    esp
  41ed45:	mov    ebp,0xb37a890a
  41ed4a:	test   BYTE PTR [ebp+0x17],al
  41ed4d:	idiv   BYTE PTR [esi]
  41ed4f:	hlt    
  41ed50:	aam    0x37
  41ed52:	adc    al,0x73
  41ed54:	xchg   edi,eax
  41ed55:	not    BYTE PTR [esi-0x10]
  41ed58:	push   esp
  41ed59:	jge    0x41ed68
  41ed5b:	inc    ebp
  41ed5c:	xbegin 0x79a7c9a8
  41ed62:	lods   al,BYTE PTR fs:[esi]
  41ed64:	int    0x3f
  41ed66:	or     al,0x8b
  41ed68:	xchg   edx,eax
  41ed69:	retf   
  41ed6a:	pop    edx
  41ed6b:	call   0x4e6def
  41ed70:	dec    esp
  41ed71:	ret    
  41ed72:	inc    DWORD PTR [edi+ecx*4+0x1a8b1533]
  41ed79:	mov    ah,0x84
  41ed7b:	inc    ebp
  41ed7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed7d:	jns    0x41ed38
  41ed7f:	or     al,0x1f
  41ed81:	idiv   DWORD PTR [esi]
  41ed83:	in     al,dx
  41ed84:	push   esp
  41ed85:	push   ebx
  41ed86:	loopne 0x41ed13
	...
  41ed90:	add    BYTE PTR [eax],al
  41ed92:	or     ch,BYTE PTR [esp+eax*4+0x477d3f04]
  41ed99:	or     BYTE PTR [ebx+edi*2-0x280b27b],ah
  41eda0:	retf   0x5604
  41eda3:	cmp    edi,esp
  41eda5:	jmp    0x41edda
  41eda7:	ins    DWORD PTR es:[edi],dx
  41eda8:	int3   
  41eda9:	mov    ebp,DWORD PTR [edx+0x4b]
  41edac:	int    0xcc
  41edae:	fwait
  41edaf:	mov    esp,0xbc93ccbf
  41edb4:	mov    edi,0xbfbc8bcc
  41edb9:	int3   
  41edba:	cli    
  41edbb:	hlt    
  41edbc:	fild   WORD PTR [ebx+0x5e4883b]
  41edc2:	inc    eax
  41edc3:	test   eax,0x979289f0
  41edc8:	test   BYTE PTR [ebp+0x27],al
  41edcb:	push   eax
  41edcc:	in     al,0x29
  41edce:	sub    BYTE PTR [ecx-0x7bf47c10],ch
  41edd4:	lods   eax,DWORD PTR ds:[esi]
  41edd5:	hlt    
  41edd6:	mov    al,ds:0x53680c3e
  41eddb:	jle    0x41ee29
  41eddd:	add    BYTE PTR [ebx+edi*1-0x1c],dl
  41ede1:	push   ecx
  41ede2:	add    BYTE PTR [ebx+0x7f8e77f8],dl
  41ede8:	lods   eax,DWORD PTR ds:[esi]
  41ede9:	clc    
  41edea:	js     0x41ee2a
  41edec:	or     al,0x6a
  41edee:	iret   
  41edef:	adc    eax,0x7e13680c
  41edf4:	dec    esp
	...
  41edfd:	add    BYTE PTR [eax],al
  41edff:	add    al,bl
  41ee01:	xchg   edx,eax
  41ee02:	hlt    
  41ee03:	ja     0x41ed93
  41ee05:	jg     0x41ed8a
  41ee07:	inc    ebp
  41ee08:	mov    bh,0xc0
  41ee0a:	inc    esi
  41ee0b:	cld    
  41ee0c:	iret   
  41ee0d:	jg     0x41ee1b
  41ee0f:	add    BYTE PTR [esi+esi*2-0x34caa7b],ah
  41ee16:	int    0x1
  41ee18:	push   esi
  41ee19:	push   edx
  41ee1a:	lock and DWORD PTR [edx],0xffffffac
  41ee1e:	add    esi,DWORD PTR [ebx-0x12]
  41ee21:	hlt    
  41ee22:	inc    esi
  41ee23:	cld    
  41ee24:	inc    esp
  41ee25:	jnp    0x41edae
  41ee27:	mov    ebp,cs
  41ee29:	aas    
  41ee2a:	or     al,0x51
  41ee2c:	push   esp
  41ee2d:	push   edx
  41ee2e:	in     al,0x52
  41ee30:	js     0x41edc4
  41ee32:	clc    
  41ee33:	ja     0x41ee43
  41ee35:	add    BYTE PTR [ebp+0x7f66b4d],0x8d
  41ee3c:	pop    ebx
  41ee3d:	xor    BYTE PTR [ebx+0x0],cl
  41ee40:	fs iret 
  41ee42:	test   ch,ah
  41ee44:	repnz mov esp,0xbb1bccbf
  41ee4a:	mov    edi,0xbfbb13cc
  41ee4f:	int3   
  41ee50:	or     edi,DWORD PTR [ebx-0xb653341]
  41ee56:	fbld   TBYTE PTR [ecx+0x4b277f]
  41ee5c:	loope  0x41ee52
  41ee5e:	dec    ebx
  41ee5f:	xor    BYTE PTR [edx+edi*1+0x4],al
  41ee63:	add    BYTE PTR ds:[eax],al
	...
  41ee6e:	inc    esi
  41ee6f:	aaa    
  41ee70:	add    al,0x5d
  41ee72:	or     al,0xbb
  41ee74:	mov    edi,0xbfbb13cc
  41ee79:	int3   
  41ee7a:	or     edi,DWORD PTR [ebx-0xb653341]
  41ee80:	fisttp WORD PTR [ebx-0x74a3846e]
  41ee86:	xchg   edx,eax
  41ee87:	ja     0x41eee4
  41ee89:	inc    edx
  41ee8b:	mov    bl,0x78
  41ee8d:	inc    ecx
  41ee8e:	iret   
  41ee8f:	dec    edx
  41ee90:	int    0xcc
  41ee92:	fwait
  41ee93:	mov    ah,0xbf
  41ee95:	int3   
  41ee96:	xchg   ebx,eax
  41ee97:	mov    ah,0xbf
  41ee99:	int3   
  41ee9a:	mov    esi,DWORD PTR [edi+edi*4-0x2004e534]
  41eea1:	cmp    DWORD PTR [ebx+0x35006678],0xffffff80
  41eea8:	fs fmul st(5),st
  41eeab:	aas    
  41eeac:	or     al,0xff
  41eeae:	mov    edx,0xcf4178a7
  41eeb3:	clc    
  41eeb4:	inc    esi
  41eeb5:	clc    
  41eeb6:	not    DWORD PTR [edi-0x530bff3]
  41eebc:	inc    esi
  41eebd:	clc    
  41eebe:	pop    ds
  41eebf:	cwde   
  41eec0:	mov    ch,0xff
  41eec2:	push   0xd7c48ca7
  41eec7:	clc    
  41eec8:	inc    esi
  41eec9:	cld    
  41eeca:	inc    esp
  41eecb:	xor    eax,0x4d44511c
  41eed0:	add    BYTE PTR [edx+0x0],dl
	...
  41eedb:	add    BYTE PTR [ebp+edi*1+0x4],dl
  41eedf:	push   eax
  41eee0:	inc    eax
  41eee1:	dec    ebp
  41eee2:	lock mov esi,DWORD PTR [edx]
  41eee5:	inc    ebp
  41eee6:	int    0xcc
  41eee8:	call   0xf03d:0x1051dffa
  41eeef:	add    bh,cl
  41eef1:	jg     0x41eeff
  41eef3:	jmp    0x41eebb
  41eef5:	cli    
  41eef6:	inc    esi
  41eef7:	cld    
  41eef8:	dec    esp
  41eef9:	ror    BYTE PTR [edx],0x89
  41eefc:	xchg   edx,eax
  41eefd:	mov    ds:0x6b034d84,eax
  41ef02:	aas    
  41ef03:	adc    BYTE PTR [esi+eax*4-0x7b],bh
  41ef07:	push   ebp
  41ef08:	mov    DWORD PTR [edx-0x122703a9],0x73928b0d
  41ef12:	or     eax,0xba76db4d
  41ef17:	adc    DWORD PTR [ecx+eax*8-0x7f78f889],edx
  41ef1e:	or     al,0x0
  41ef20:	iret   
  41ef21:	call   0x8bcc:0x729feb07
  41ef28:	stos   BYTE PTR es:[edi],al
  41ef29:	inc    esp
  41ef2a:	int    0xcc
  41ef2c:	fwait
  41ef2d:	mov    bl,0xbf
  41ef2f:	int3   
  41ef30:	xchg   ebx,eax
  41ef31:	mov    bl,0xbf
  41ef33:	int3   
  41ef34:	mov    esi,DWORD PTR [ebx-0x5053341]
  41ef3a:	fistp  QWORD PTR [ecx+0xc7fe7]
	...
  41ef48:	add    BYTE PTR [eax],al
  41ef4a:	jmp    0x41ef46
  41ef4c:	add    cl,BYTE PTR [ecx+0x41744fca]
  41ef52:	iret   
  41ef53:	inc    esp
  41ef54:	int    0xcc
  41ef56:	fwait
  41ef57:	mov    bl,0xbf
  41ef59:	int3   
  41ef5a:	xchg   ebx,eax
  41ef5b:	mov    bl,0xbf
  41ef5d:	int3   
  41ef5e:	mov    esi,DWORD PTR [ebx-0x5053341]
  41ef64:	fild   WORD PTR [ebx+0x45858f3b]
  41ef6a:	xlat   BYTE PTR ds:[ebx]
  41ef6b:	add    dh,BYTE PTR [esp+eax*1-0x31]
  41ef6f:	jbe    0x41eef9
  41ef71:	mov    bh,cl
  41ef73:	jg     0x41ef81
  41ef75:	mov    ebx,DWORD PTR [edx-0x34ae7a89]
  41ef7b:	add    ah,dh
  41ef7d:	or     dh,bh
  41ef7f:	cwde   
  41ef80:	adc    BYTE PTR [ebp+0x1b],0xfa
  41ef84:	inc    esi
  41ef85:	or     BYTE PTR [edi+edi*4+0x3],cl
  41ef89:	mov    DWORD PTR [edx-0x4ba3751],ecx
  41ef8f:	jle    0x41ef9d
  41ef91:	add    bh,cl
  41ef93:	call   0xc18c:0xa39a8b02
  41ef9a:	into   
  41ef9b:	clc    
  41ef9c:	ds cld 
  41ef9e:	inc    esp
  41ef9f:	dec    esp
  41efa0:	lock cmp edi,DWORD PTR [edx-0x55]
  41efa4:	jl     0x41efec
  41efa6:	push   esp
  41efa7:	cmp    esi,eax
  41efa9:	mov    edx,DWORD PTR [edx]
  41efab:	mov    al,0x0
  41efad:	mov    bh,0x0
	...
  41efb7:	add    bl,ah
  41efb9:	ds retf 
  41efbb:	cli    
  41efbc:	ret    
  41efbd:	add    dh,dh
  41efbf:	add    esp,DWORD PTR [edx]
  41efc1:	jb     0x41ef48
  41efc3:	inc    ebp
  41efc4:	mov    ds:0xc8f03ef9,eax
  41efc9:	in     al,dx
  41efca:	pop    ss
  41efcb:	inc    ecx
  41efcc:	dec    esi
  41efcd:	mov    ds:0x7fcf0ff0,al
  41efd2:	adc    DWORD PTR [ebp-0x79],0xfffffff9
  41efd6:	inc    esi
  41efd7:	or     BYTE PTR [ebx+esi*1+0x0],al
  41efdb:	add    eax,edi
  41efdd:	clc    
  41efde:	push   esi
  41efdf:	clc    
  41efe0:	push   esp
  41efe1:	jl     0x41effe
  41efe3:	add    ecx,DWORD PTR [edx]
  41efe5:	nop
  41efe6:	test   DWORD PTR [ebp-0x39],ecx
  41efe9:	clc    
  41efea:	push   esi
  41efeb:	or     al,0xcc
  41efed:	mov    es,WORD PTR [ebp+0x7f7474d]
  41eff3:	or     dh,BYTE PTR [edi+edx*8]
  41eff6:	test   BYTE PTR [ebp-0x39],dl
  41eff9:	clc    
  41effa:	inc    esi
  41effb:	or     ah,cl
  41effd:	inc    ecx
  41effe:	or     BYTE PTR [ecx+0x6be37792],cl
  41f004:	and    BYTE PTR [ebp+0x43328bf0],ah
  41f00a:	int    0xcc
  41f00c:	jp     0x41f006
  41f00e:	fild   WORD PTR [ebx+0x45855bfb]
  41f014:	xlat   BYTE PTR ds:[ebx]
  41f015:	test   BYTE PTR [esi-0x1c],0x44
  41f019:	xor    ebp,eax
  41f01b:	mov    eax,DWORD PTR [eax]
	...
  41f025:	add    BYTE PTR [edx-0x54aef365],bl
  41f02b:	not    BYTE PTR [esi-0x18]
  41f02e:	push   esp
  41f02f:	cmp    esp,esp
  41f031:	mov    eax,DWORD PTR [edi+0x0]
  41f034:	or     al,0x0
  41f036:	iret   
  41f037:	idiv   BYTE PTR [esi]
  41f039:	lock dec esp
  41f03b:	and    bh,ah
  41f03d:	add    al,dl
  41f03f:	sti    
  41f040:	hlt    
  41f041:	add    bh,cl
  41f043:	jg     0x41efca
  41f045:	push   ebp
  41f046:	mov    DWORD PTR [eax+0x4a56f057],0xa00a8bec
  41f050:	mov    WORD PTR [eax-0x41],?
  41f053:	jg     0x41f056
  41f055:	test   BYTE PTR [edx-0xafff381],ch
  41f05b:	jg     0x41f0c3
  41f05d:	add    BYTE PTR [edx+esi*1-0x14],dl
  41f061:	mov    esp,DWORD PTR [edx]
  41f063:	js     0x41f072
  41f065:	push   ecx
  41f066:	ret    
  41f067:	push   ecx
  41f068:	icebp  
  41f069:	adc    eax,0x4b2c67
  41f06e:	push   esi
  41f06f:	cmp    dh,al
  41f071:	mov    edx,DWORD PTR [edx]
  41f073:	mov    al,ds:0x2bcf388c
  41f078:	adc    ecx,DWORD PTR [ebx+0x55849f9a]
  41f07e:	xlat   BYTE PTR ds:[ebx]
  41f07f:	sbb    BYTE PTR [ebx],0x89
  41f082:	mov    ds:0x2f458493,al
  41f087:	clc    
  41f088:	or     BYTE PTR ds:[eax],al
	...
  41f093:	add    ah,cl
  41f095:	aaa    
  41f096:	sbb    al,0x89
  41f098:	xchg   edx,eax
  41f099:	stos   DWORD PTR es:[edi],eax
  41f09a:	in     al,0x17
  41f09c:	inc    esp
  41f09d:	dec    edx
  41f09e:	in     al,dx
  41f09f:	mov    ecx,DWORD PTR [edx-0x20bdf289]
  41f0a5:	test   BYTE PTR [esi-0xc],0x54
  41f0a9:	xor    ch,ah
  41f0ab:	mov    esp,DWORD PTR [edx+0x46110d77]
  41f0b1:	dec    edx
  41f0b2:	loopne 0x41f07b
  41f0b4:	xchg   edx,eax
  41f0b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0b6:	or     eax,DWORD PTR [eax]
  41f0b8:	iret   
  41f0b9:	jg     0x41f040
  41f0bb:	inc    ebp
  41f0bc:	out    dx,eax
  41f0bd:	push   DWORD PTR [ebx+0x10]
  41f0c0:	iret   
  41f0c1:	sub    eax,DWORD PTR [ecx]
  41f0c3:	mov    ebx,DWORD PTR [edx]
  41f0c5:	mov    al,ds:0x2bcf398c
  41f0ca:	or     edi,eax
  41f0cc:	adc    ch,BYTE PTR [eax+0x7fcf000a]
  41f0d2:	test   DWORD PTR [ebp-0x5d],edx
  41f0d5:	push   DWORD PTR ds:0x85211b00
  41f0db:	inc    ebp
  41f0dc:	mov    ds:0xae8103f7,eax
  41f0e1:	or     BYTE PTR [eax+eax*1],0x4f
  41f0e5:	sub    al,0x10
  41f0e7:	mov    ebx,DWORD PTR [edx]
  41f0e9:	lods   al,BYTE PTR ds:[esi]
  41f0ea:	test   BYTE PTR [edx],al
  41f0ec:	mov    dl,0xa2
  41f0ee:	lock push eax
  41f0f1:	dec    edi
  41f0f2:	test   DWORD PTR [ebp+0x6b],ecx
  41f0f5:	push   ecx
  41f0f6:	in     al,0xb5
	...
  41f100:	add    BYTE PTR [eax],al
  41f102:	bound  esp,QWORD PTR [ebx+0x789383f0]
  41f108:	add    DWORD PTR [ebp+0x73],0xffffff97
  41f10c:	jnp    0x2c69cb4
  41f112:	push   esp
  41f113:	xor    eax,0x77a38d04
  41f118:	push   cs
  41f119:	push   edx
  41f11a:	inc    esp
  41f11b:	cmp    eax,0xb3750f0
  41f120:	out    dx,eax
  41f121:	jmp    DWORD PTR [eax]
  41f123:	inc    edi
  41f125:	or     BYTE PTR [esi+0x3d],al
  41f128:	ror    BYTE PTR [ebx+0x5584ab82],1
  41f12e:	sub    edi,ecx
  41f130:	sbb    cl,BYTE PTR [ebx-0x3f735476]
  41f136:	sar    eax,cl
  41f138:	inc    esi
  41f139:	hlt    
  41f13a:	inc    esp
  41f13b:	xor    eax,0x7c0e83e0
  41f140:	or     DWORD PTR [ebp-0xd],0xffffff96
  41f144:	cwde   
  41f145:	mov    eax,DWORD PTR [edx-0x443d7361]
  41f14b:	clc    
  41f14c:	push   esi
  41f14d:	loopne 0x41f105
  41f14f:	jno    0x41f142
  41f151:	inc    eax
  41f153:	mul    dh
  41f155:	pop    ebp
  41f156:	mov    WORD PTR [ebx-0x8e53341],?
  41f15c:	fild   WORD PTR [ebx-0xf9b8845]
  41f162:	int    0x3f
  41f164:	or     al,0xff
	...
  41f16e:	add    BYTE PTR [eax],al
  41f170:	ret    0x747f
  41f173:	inc    ecx
  41f174:	iret   
  41f175:	clc    
  41f176:	inc    esi
  41f177:	clc    
  41f178:	mul    DWORD PTR [ebx-0x930bff3]
  41f17e:	inc    esi
  41f17f:	clc    
  41f180:	pop    ds
  41f181:	cwde   
  41f182:	xor    ebp,edi
  41f184:	jo     0x41f128
  41f186:	mov    esp,es
  41f188:	xlat   BYTE PTR ds:[ebx]
  41f189:	clc    
  41f18a:	inc    esi
  41f18b:	cld    
  41f18c:	push   esp
  41f18d:	xor    al,0x1c
  41f18f:	push   ecx
  41f190:	inc    esp
  41f191:	dec    esp
  41f192:	add    BYTE PTR [edx+0x44],dl
  41f195:	cmp    al,0x4
  41f197:	push   eax
  41f198:	dec    eax
  41f199:	dec    esp
  41f19a:	lock mov ebp,DWORD PTR [edx]
  41f19d:	inc    esp
  41f19e:	int    0xcc
  41f1a0:	or     esi,DWORD PTR [ebx-0x9653341]
  41f1a6:	fbld   TBYTE PTR [ecx+0x4b278b]
  41f1ac:	or     DWORD PTR [edi+0x64],edi
  41f1af:	mov    eax,edx
  41f1b1:	dec    ebx
  41f1b2:	je     0x41f1f5
  41f1b4:	iret   
  41f1b5:	clc    
  41f1b6:	pop    ebx
  41f1b7:	add    DWORD PTR ds:0xca5083be,edi
  41f1bd:	inc    esp
  41f1be:	int    0xcc
  41f1c0:	or     esi,DWORD PTR [ebx-0x9653341]
  41f1c6:	fild   WORD PTR [ebx+0x50ab72fb]
  41f1cc:	addr16 inc eax
  41f1ce:	or     al,0x8b
  41f1d0:	std    
  41f1d1:	ins    DWORD PTR es:[edi],dx
  41f1d2:	ret    
  41f1d3:	add    BYTE PTR ds:[eax],al
	...
  41f1de:	inc    esp
  41f1df:	aas    
  41f1e0:	cmp    al,0x8b
  41f1e2:	popf   
  41f1e3:	cmc    
  41f1e4:	fnstsw WORD PTR [esi]
  41f1e6:	push   esp
  41f1e7:	cmp    BYTE PTR [eax],al
  41f1e9:	mov    ebx,DWORD PTR [ebp+0x44f43ef7]
  41f1ef:	cmp    edi,eax
  41f1f1:	mov    edx,DWORD PTR [edi]
  41f1f3:	je     0x41f178
  41f1f5:	dec    ebp
  41f1f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1f7:	cmc    
  41f1f8:	push   esi
  41f1f9:	clc    
  41f1fa:	inc    esi
  41f1fb:	dec    ebx
  41f1fc:	lock mov eax,0xc7fce
  41f202:	push   edx
  41f203:	shl    BYTE PTR [edi+0x44],0x4c
  41f207:	and    esi,esp
  41f209:	add    BYTE PTR [edx],al
  41f20b:	jl     0x41f24a
  41f20d:	shl    BYTE PTR [esp+eiz*2-0x7b],0x4d
  41f212:	addr16 cmc 
  41f214:	pop    edx
  41f215:	sbb    BYTE PTR [edx+ecx*2-0xb498afc],ah
  41f21c:	inc    esi
  41f21d:	clc    
  41f21e:	inc    esp
  41f21f:	xor    eax,DWORD PTR [eax]
  41f221:	mov    DWORD PTR [edi+0x47558583],edx
  41f227:	cmc    
  41f228:	inc    esi
  41f229:	adc    BYTE PTR [esi+0x3e],al
  41f22c:	adc    al,0xb8
  41f22e:	into   
  41f22f:	jg     0x41f23d
  41f231:	add    BYTE PTR [eax+ecx*4],dh
  41f234:	test   DWORD PTR [ebp+0x27],ecx
  41f237:	cmc    
  41f238:	sbb    cl,BYTE PTR [ecx+0x4584a782]
  41f23e:	pop    ss
  41f23f:	gs inc edi
  41f241:	cld    
	...
  41f24a:	add    BYTE PTR [eax],al
  41f24c:	cmp    BYTE PTR [ebx+0x3d],0xc0
  41f250:	hlt    
  41f251:	jnp    0x41f238
  41f253:	mov    bl,0xbc
  41f255:	mov    edi,0xbc92e584
  41f25a:	mov    edi,0xbfb41bcc
  41f25f:	int3   
  41f260:	adc    esi,DWORD PTR [edi+edi*4-0x404bf434]
  41f267:	int3   
  41f268:	jp     0x41f25e
  41f26a:	fild   WORD PTR [ebx+0x45c987bb]
  41f270:	(bad)  
  41f271:	jg     0x41f2af
  41f273:	add    bh,cl
  41f275:	pop    ss
  41f276:	or     BYTE PTR [ebx],al
  41f278:	jo     0x3f692f29
  41f27e:	or     al,0x50
  41f280:	mov    bh,0x4c
  41f282:	lock call FWORD PTR [eax+0x4608c7fc]
  41f289:	cmp    bh,al
  41f28b:	push   0xf
  41f28d:	cmc    
  41f28e:	ds clc 
  41f290:	push   ds
  41f291:	cmc    
  41f292:	push   ss
  41f293:	sbb    al,0xf7
  41f295:	ds or  al,0x8b
  41f298:	or     eax,0xcf6a5c50
  41f29d:	mov    al,ds:0x8b2cf456
  41f2a2:	je     0x41f2e5
  41f2a4:	iret   
  41f2a5:	cld    
  41f2a6:	cs adc al,0xd7
  41f2a9:	ds or  al,0x0
  41f2ac:	ret    0xb478
  41f2af:	add    al,BYTE PTR [eax]
	...
  41f2b9:	add    bh,cl
  41f2bb:	jg     0x41f2c9
  41f2bd:	jmp    0x41f264
  41f2bf:	hlt    
  41f2c0:	(bad)  
  41f2c1:	dec    ebp
  41f2c3:	aas    
  41f2c4:	or     al,0x89
  41f2c6:	call   0xc7e:0x980063af
  41f2cd:	push   0x4c7dcf
  41f2d2:	inc    esp
  41f2d3:	mov    bl,BYTE PTR [eax]
  41f2d5:	js     0x41f265
  41f2d7:	jg     0x41f264
  41f2d9:	ret    0x7dcf
  41f2dc:	or     al,0x0
  41f2de:	popf   
  41f2df:	xchg   edi,eax
  41f2e0:	xchg   ecx,eax
  41f2e1:	(bad)  
  41f2e2:	lock lahf 
  41f2e4:	mov    esp,es
  41f2e6:	(bad)  
  41f2e8:	or     eax,DWORD PTR [edx]
  41f2ea:	(bad)  
  41f2eb:	jg     0x41f30c
  41f2ed:	add    ch,cl
  41f2ef:	jg     0x41f2fd
  41f2f1:	mov    eax,edx
  41f2f3:	mov    esi,DWORD PTR [ecx+eax*2-0x31]
  41f2f7:	push   0xffffffc4
  41f2f9:	mov    edx,edx
  41f2fb:	inc    ebx
  41f2fc:	je     0x41f33f
  41f2fe:	iret   
  41f2ff:	or     dl,BYTE PTR [edi]
  41f301:	inc    esp
  41f302:	aaa    
  41f303:	inc    ecx
  41f304:	or     al,0x52
  41f306:	outs   dx,BYTE PTR ds:[esi]
  41f307:	je     0x41f37d
  41f309:	inc    ecx
  41f30a:	iret   
  41f30b:	das    
  41f30c:	test   DWORD PTR [ebp-0x61],ecx
  41f30f:	xor    esp,esp
  41f311:	popf   
  41f312:	xchg   ebx,eax
  41f313:	lahf   
  41f314:	lock adc DWORD PTR [ebx-0x24ea7a74],0x17
  41f31c:	dec    ebx
	...
  41f325:	add    BYTE PTR [eax],al
  41f327:	add    ah,cl
  41f329:	xor    al,0x4
  41f32b:	mov    DWORD PTR [edx],ebx
  41f32d:	test   al,0x84
  41f32f:	push   ebp
  41f330:	ja     0x41f2d1
  41f332:	in     eax,dx
  41f333:	mov    ebp,DWORD PTR [edx+0x3d]
  41f336:	int    0xcc
  41f338:	mov    ecx,esp
  41f33a:	mov    edi,0xe00afacc
  41f33f:	mov    edx,DWORD PTR [edx-0x2cbaca79]
  41f345:	adc    cl,BYTE PTR [ecx]
  41f347:	mov    edx,DWORD PTR [edx+0x2405e587]
  41f34d:	add    DWORD PTR [ebp-0x32c324bb],0xffffffcc
  41f354:	adc    ecx,esp
  41f356:	mov    edi,0xbfcc0bcc
  41f35b:	int3   
  41f35c:	jp     0x41f368
  41f35e:	loopne 0x41f2e3
  41f360:	sti    
  41f361:	imul   ecx,ecx,0x45
  41f364:	add    eax,DWORD PTR [eax+0xacf019c]
  41f36a:	inc    edi
  41f36b:	or     BYTE PTR [esi+0x45],al
  41f36e:	aam    0x8b
  41f370:	call   0x5b82:0xd75584b7
  41f377:	cmp    al,0x46
  41f379:	xor    eax,0x9f8a8bec
  41f37e:	add    BYTE PTR [edi+0x55857417],dh
  41f384:	scas   eax,DWORD PTR es:[edi]
  41f385:	or     al,0x48
  41f387:	or     dl,bh
  41f389:	or     BYTE PTR [edi-0x18],al
	...
  41f394:	add    BYTE PTR [eax],al
  41f396:	daa    
  41f397:	je     0x41f3a6
  41f399:	inc    eax
  41f39a:	iret   
  41f39b:	or     bh,bh
  41f39d:	cmp    esp,DWORD PTR [edi]
  41f39f:	inc    ecx
  41f3a0:	or     al,0x51
  41f3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3a3:	dec    esi
  41f3a4:	cmc    
  41f3a5:	call   DWORD PTR [eax+0x5608c802]
  41f3ab:	inc    esp
  41f3ac:	cld    
  41f3ad:	push   0xf
  41f3af:	sub    BYTE PTR [eax+esi*1],cl
  41f3b2:	iret   
  41f3b3:	jg     0x41f419
  41f3b5:	add    BYTE PTR [edi-0x80],bl
  41f3b8:	or     al,0x6a
  41f3ba:	iret   
  41f3bb:	sahf   
  41f3bc:	push   esi
  41f3bd:	lock push esi
  41f3bf:	inc    esp
  41f3c0:	call   0x84e1f650
  41f3c5:	inc    edx
  41f3c6:	sti    
  41f3c7:	das    
  41f3c8:	test   DWORD PTR [ebp-0x29],ecx
  41f3cb:	xor    BYTE PTR [ebp-0x1bced4ab],al
  41f3d1:	sar    DWORD PTR [edx],0x9e
  41f3d4:	lock or DWORD PTR [ebx],0xffffff8b
  41f3d8:	leave  
  41f3d9:	inc    ebp
  41f3da:	and    edi,DWORD PTR [edi+0xc]
  41f3dd:	add    bh,cl
  41f3df:	stos   BYTE PTR es:[edi],al
  41f3e0:	add    cl,BYTE PTR [ebx-0x3f736c6e]
  41f3e6:	into   
  41f3e7:	or     BYTE PTR [edi-0xc],al
  41f3ea:	push   esp
  41f3eb:	dec    esp
  41f3ec:	in     al,dx
  41f3ed:	(bad)  
  41f3f0:	or     bh,BYTE PTR [ecx]
  41f3f2:	mov    ds:0x44597c93,al
  41f3f7:	inc    esp
  41f3f8:	in     al,0x83
	...
  41f402:	add    BYTE PTR [eax],al
  41f404:	addr16 jae 0x41f413
  41f407:	je     0x41f393
  41f409:	or     bh,BYTE PTR [edi]
  41f40b:	call   0x5e0c5c
  41f410:	pop    ebx
  41f411:	pop    ebx
  41f412:	test   DWORD PTR [ebp-0x49],edx
  41f415:	or     DWORD PTR [esi+0x10],ecx
  41f418:	push   esp
  41f419:	dec    ebx
  41f41a:	in     al,dx
  41f41b:	mov    ebx,DWORD PTR [esi]
  41f41d:	pop    esp
  41f41e:	jg     0x41f464
  41f420:	fistp  WORD PTR [esp+eax*4-0x21ae50b3]
  41f427:	neg    DWORD PTR [esi]
  41f429:	pop    esp
  41f42a:	test   DWORD PTR [ebp-0x51],edx
  41f42d:	lea    esp,[ecx-0x7ad02cbe]
  41f433:	inc    ebp
  41f434:	ja     0x41f43f
  41f436:	aas    
  41f437:	or     ah,cl
  41f439:	inc    edi
  41f43a:	sbb    BYTE PTR [ecx+0x44],dl
  41f43d:	xor    esp,esp
  41f43f:	mov    ecx,DWORD PTR [edx]
  41f441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f442:	or     al,0x42
  41f444:	fld    TBYTE PTR [edi]
  41f446:	in     al,0x55
  41f448:	bound  ebx,QWORD PTR [ebp-0x736c7c10]
  41f44e:	test   DWORD PTR [ebp+0x67],ecx
  41f451:	add    ebx,ecx
  41f453:	sub    BYTE PTR [esi+0x4b],dl
  41f456:	in     al,0xeb
  41f458:	pop    ebp
  41f459:	or     DWORD PTR [edi-0x1c],edx
  41f45c:	popf   
  41f45d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f45e:	add    esp,edi
  41f460:	xor    BYTE PTR [ebp+0x27d3c48c],bl
  41f466:	sub    BYTE PTR [ebx],al
	...
  41f470:	add    BYTE PTR [eax],al
  41f472:	(bad)  
  41f473:	jg     0x41f420
  41f475:	cmp    al,0x97
  41f477:	ds or  al,0x50
  41f47a:	daa    
  41f47b:	or     esi,esi
  41f47d:	dec    DWORD PTR [eax]
  41f47f:	add    eax,ecx
  41f481:	or     BYTE PTR [esi+0x43],dl
  41f484:	rol    BYTE PTR [ebx+0x417457ba],1
  41f48a:	iret   
  41f48b:	jg     0x41f504
  41f48d:	or     dl,BYTE PTR [ebx+ecx*4+0x3c]
  41f491:	js     0x41f421
  41f493:	jg     0x41f4f0
  41f495:	inc    DWORD PTR [edx-0x68c27345]
  41f49b:	pop    ss
  41f49c:	dec    ebx
  41f49d:	add    bh,cl
  41f49f:	adc    dl,BYTE PTR [eax]
  41f4a1:	push   0xf
  41f4a3:	sub    BYTE PTR [eax+esi*1],cl
  41f4a6:	iret   
  41f4a7:	jg     0x41f42e
  41f4a9:	push   ebp
  41f4aa:	mov    bl,0x31
  41f4ac:	test   DWORD PTR [ebp-0x51],eax
  41f4af:	or     BYTE PTR [esp+esi*1-0x2],al
  41f4b3:	pushf  
  41f4b4:	push   esi
  41f4b5:	lock ins BYTE PTR es:[edi],dx
  41f4b7:	jae    0x41f52d
  41f4b9:	inc    ecx
  41f4ba:	iret   
  41f4bb:	test   al,0x16
  41f4bd:	push   0xf
  41f4bf:	sub    BYTE PTR [eax+esi*1],cl
  41f4c2:	iret   
  41f4c3:	jg     0x41f44a
  41f4c5:	push   ebp
  41f4c6:	jnp    0x41f4f9
  41f4c8:	data16 add BYTE PTR [eax+0x32],dh
  41f4cc:	cld    
  41f4cd:	mov    ds:0x4b17c3,eax
  41f4d2:	dec    esp
  41f4d3:	pop    edx
  41f4d4:	sbb    BYTE PTR [eax+0x0],bh
	...
  41f4df:	add    BYTE PTR [esi],cl
  41f4e1:	or     BYTE PTR [esi*2+0x684c29ba],0xcf
  41f4e9:	dec    edi
  41f4ea:	or     al,0x0
  41f4ec:	push   esp
  41f4ed:	inc    edx
  41f4ee:	lock push eax
  41f4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4f1:	jg     0x41f4e4
  41f4f3:	push   ebp
  41f4f4:	aas    
  41f4f5:	loopne 0x41f50e
  41f4f7:	js     0x41f487
  41f4f9:	jg     0x41f480
  41f4fb:	dec    ebp
  41f4fc:	sub    eax,DWORD PTR [esi]
  41f4fe:	aas    
  41f4ff:	fadd   DWORD PTR [edx+esi*1-0x2c]
  41f503:	mov    ecx,DWORD PTR [edx-0x34bdf349]
  41f509:	push   es
  41f50a:	inc    edi
  41f50b:	loopne 0x41f561
  41f50d:	dec    edx
  41f50e:	lock push ecx
  41f510:	inc    esp
  41f511:	xor    ch,al
  41f513:	push   edx
  41f514:	cs jae 0x41f58b
  41f517:	inc    ecx
  41f518:	iret   
  41f519:	das    
  41f51a:	in     al,0x95
  41f51c:	jecxz  0x41f4b9
  41f51e:	lock adc DWORD PTR [ebx],0xffffff8b
  41f522:	test   DWORD PTR [ebp-0x11],ecx
  41f525:	push   DWORD PTR [edx+0xc7fcfa4]
  41f52b:	add    BYTE PTR [ebx],bh
  41f52d:	push   esi
  41f52e:	test   DWORD PTR [ebp-0x51],edx
  41f531:	pop    es
  41f532:	inc    edi
  41f533:	fmul   st,st(4)
  41f535:	std    
  41f536:	stos   DWORD PTR es:[edi],eax
  41f537:	add    bh,cl
  41f539:	jg     0x41f4be
  41f53b:	inc    ebp
  41f53c:	mov    bl,0x7
  41f53e:	aas    
  41f53f:	loopne 0x41f585
  41f541:	jne    0x41f55b
  41f543:	js     0x41f545
	...
  41f54d:	add    BYTE PTR [esi],cl
  41f54f:	and    BYTE PTR ds:0x1708c351,0x44
  41f556:	pop    es
  41f557:	inc    ecx
  41f558:	or     al,0xa1
  41f55a:	adc    ebx,DWORD PTR [eax]
  41f55c:	dec    ebx
  41f55d:	add    BYTE PTR [edi],bl
  41f55f:	pop    es
  41f560:	call   DWORD PTR [ebx]
  41f562:	out    0x40,eax
  41f564:	or     al,0x51
  41f566:	push   esp
  41f567:	xor    eax,0x1b6752e0
  41f56c:	idiv   bh
  41f56e:	push   eax
  41f56f:	inc    edi
  41f571:	or     al,0x54
  41f573:	inc    ebp
  41f574:	in     al,dx
  41f575:	mov    edx,edx
  41f577:	jae    0x41f5ed
  41f579:	inc    ecx
  41f57a:	iret   
  41f57b:	jle    0x41f5c1
  41f57d:	sub    BYTE PTR [esi-0x73],al
  41f580:	pop    eax
  41f581:	js     0x41f511
  41f583:	jg     0x41f512
  41f585:	cmp    eax,0x4b17e7
  41f58a:	iret   
  41f58b:	adc    al,0x1f
  41f58d:	mov    edi,DWORD PTR [edx-0x30be8b8d]
  41f593:	sub    eax,0x408754ab
  41f598:	or     al,0x50
  41f59a:	inc    esp
  41f59b:	lea    edi,[eax+edi*2]
  41f59e:	mov    ?,WORD PTR [edi+0x5b]
  41f5a1:	call   0x32910d
  41f5a6:	dec    esp
  41f5a7:	(bad)  
  41f5a8:	dec    DWORD PTR [edx+0x417473c2]
  41f5ae:	iret   
  41f5af:	sub    eax,0x49e4
	...
  41f5bc:	(bad)  
  41f5bd:	call   0x61e5:0x838b83f0
  41f5c4:	daa    
  41f5c5:	push   esp
  41f5c6:	or     eax,0x2fe0cf40
  41f5cb:	js     0x41f5db
  41f5cd:	sbb    BYTE PTR [eax+ebp*8-0x5],0x98
  41f5d2:	lock dec DWORD PTR [ebx+eax*8+0x3]
  41f5d7:	mov    DWORD PTR [edx],ecx
  41f5d9:	mov    ah,0x84
  41f5db:	or     eax,0x4b17e3
  41f5e0:	push   ds
  41f5e1:	pop    es
  41f5e2:	push   edi
  41f5e3:	loopne 0x41f613
  41f5e5:	jae    0x41f65b
  41f5e7:	inc    ecx
  41f5e8:	iret   
  41f5e9:	jle    0x41f639
  41f5eb:	sub    bh,bh
  41f5ed:	push   es
  41f5ee:	jmp    FWORD PTR [edi]
  41f5f0:	out    0x40,eax
  41f5f2:	or     al,0x51
  41f5f4:	addr16 push 0xfffffff0
  41f5f7:	call   DWORD PTR [eax-0x2]
  41f5fa:	(bad)  
  41f5fb:	or     al,0x54
  41f5fd:	je     0x41f63b
  41f5ff:	js     0x41f58f
  41f601:	jg     0x41f58e
  41f603:	ret    0x145f
  41f606:	or     eax,DWORD PTR [eax]
  41f608:	inc    esi
  41f609:	je     0x41f65b
  41f60b:	js     0x41f59b
  41f60d:	jg     0x41f68e
  41f60f:	inc    ebp
  41f610:	daa    
  41f611:	das    
  41f612:	inc    ax
  41f614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f615:	add    DWORD PTR [ebp+0x4b17730d],0x569a9e00
  41f61f:	aam    0x0
	...
  41f629:	add    bh,dh
  41f62b:	popf   
  41f62c:	hlt    
  41f62d:	(bad)  
  41f62e:	clc    
  41f62f:	(bad)  
  41f630:	or     al,BYTE PTR [eax]
  41f632:	iret   
  41f633:	jg     0x41f5ba
  41f635:	in     eax,0x8a
  41f637:	mov    ebp,0xcb130007
  41f63c:	mov    edi,0xbfcb0bcc
  41f641:	int3   
  41f642:	jp     0x41f64a
  41f644:	loopne 0x41f5d1
  41f646:	adc    cl,BYTE PTR [eax+0x3bc34085]
  41f64c:	int    0xcc
  41f64e:	mov    ecx,esp
  41f650:	mov    edi,0xe0051acc
  41f655:	push   ebx
  41f656:	add    DWORD PTR [ecx],esi
  41f658:	test   DWORD PTR ds:0x4b17ef,edi
  41f65e:	inc    esp
  41f65f:	jnp    0x41f681
  41f661:	js     0x41f671
  41f663:	add    BYTE PTR [ebp+0x4b17e735],0x0
  41f66a:	and    BYTE PTR [edx],bh
  41f66c:	push   ebp
  41f66d:	pop    ebp
  41f66e:	mov    esp,cs
  41f670:	mov    edi,0xe0051acc
  41f675:	push   ecx
  41f676:	test   DWORD PTR [ebx+0xd],0x2fdecf40
  41f67d:	js     0x41f68d
  41f67f:	sbb    BYTE PTR [eax+ebp*8+0x23],0x98
  41f684:	lock dec DWORD PTR [esp+eax*8+0x3]
  41f689:	mov    DWORD PTR [edx+0x4d849b],ecx
	...
  41f697:	add    bh,al
  41f699:	data16 add BYTE PTR cs:[ebx+esi*2+0x54],al
  41f69f:	js     0x41f62f
  41f6a1:	jg     0x41f701
  41f6a3:	(bad)  
  41f6a4:	jp     0x41f641
  41f6a6:	test   ch,ah
  41f6a8:	jp     0x41f666
  41f6aa:	mov    edi,0xe0047acc
  41f6af:	cmp    ebx,0x63
  41f6b2:	leave  
  41f6b3:	inc    ebp
  41f6b4:	pop    es
  41f6b5:	or     BYTE PTR [eax+eax*1],0xcf
  41f6b9:	rol    BYTE PTR [esi-0x24],0x77
  41f6bd:	jg     0x41f6cb
  41f6bf:	add    BYTE PTR [eax],dl
  41f6c1:	inc    ebx
  41f6c2:	clc    
  41f6c3:	add    edi,ecx
  41f6c5:	jg     0x41f6d3
  41f6c7:	(bad)  
  41f6c8:	xchg   edx,eax
  41f6c9:	fwait
  41f6ca:	or     eax,DWORD PTR [eax]
  41f6cc:	iret   
  41f6cd:	jg     0x41f698
  41f6cf:	inc    ebp
  41f6d0:	mov    bl,0x7f
  41f6d2:	or     al,0x0
  41f6d4:	iret   
  41f6d5:	add    al,0x3f
  41f6d7:	or     BYTE PTR [esi-0x76],al
  41f6da:	cmp    al,0x78
  41f6dc:	push   cs
  41f6dd:	and    ah,0xa9
  41f6e0:	mov    al,ds:0xdfa1f098
  41f6e5:	pop    ss
  41f6e6:	dec    ebx
  41f6e7:	add    dl,dh
  41f6e9:	cwde   
  41f6ea:	lock add bh,cl
  41f6ed:	adc    eax,DWORD PTR [eax]
  41f6ef:	(bad)  
  41f6f0:	rcl    BYTE PTR [edi+0x74],cl
  41f6f3:	inc    ecx
  41f6f4:	iret   
  41f6f5:	jg     0x41f703
  41f6f7:	add    bh,cl
  41f6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6fa:	add    eax,0xc7
  41f6ff:	add    BYTE PTR [eax],al
  41f701:	add    BYTE PTR [eax],al
  41f703:	add    BYTE PTR [eax],al
  41f705:	add    dl,cl
  41f707:	push   edi
  41f708:	je     0x41f74b
  41f70a:	iret   
  41f70b:	jle    0x41f719
  41f70d:	add    bh,cl
  41f70f:	cld    
  41f710:	cs xor bh,dl
  41f713:	ds or  al,0x0
  41f716:	fiadd  DWORD PTR [ebp+0x180705c9]
  41f71c:	dec    ebx
  41f71d:	add    bh,cl
  41f71f:	jg     0x41f72d
  41f721:	add    BYTE PTR [edx+ebx*2+0x34],cl
  41f725:	js     0x41f6b5
  41f727:	jg     0x41f735
  41f729:	jne    0x41f705
  41f72b:	and    eax,0x7fbaff0c
  41f730:	je     0x41f773
  41f732:	iret   
  41f733:	fdivr  QWORD PTR [ebx]
  41f735:	js     0x41f6c5
  41f737:	jg     0x41f6be
  41f739:	or     eax,0x4b17bf
  41f73e:	push   esi
  41f73f:	dec    edx
  41f740:	in     al,0x8b
  41f742:	loop   0x41f793
  41f744:	je     0x41f787
  41f746:	iret   
  41f747:	add    al,0x47
  41f749:	call   0x8972351a
  41f74e:	mov    ah,BYTE PTR [edi+0x5e74d84]
  41f754:	call   FWORD PTR [ebx]
  41f756:	push   edi
  41f757:	ds or  al,0x68
  41f75a:	pop    ds
  41f75b:	or     DWORD PTR [eax+eax*1-0x40],0x6d
  41f760:	or     al,0x78
  41f762:	push   cs
  41f763:	sub    BYTE PTR [ebp+0xc41373c],0xc7
	...
  41f772:	add    BYTE PTR [eax],al
  41f774:	rol    BYTE PTR [ebx+0x74],cl
  41f777:	inc    ecx
  41f778:	iret   
  41f779:	or     al,0xd
  41f77b:	inc    eax
  41f77c:	iret   
  41f77d:	daa    
  41f77e:	ins    BYTE PTR es:[edi],dx
  41f77f:	add    ecx,DWORD PTR [edi]
  41f781:	add    BYTE PTR [ebp+0x4b17cb15],0x0
  41f788:	sbb    eax,0x78f7cda8
  41f78d:	xchg   edi,eax
  41f78e:	mov    esp,es
  41f790:	(bad)  
  41f791:	loop   0x41f7d6
  41f793:	js     0x41f7a3
  41f795:	xor    cl,0x15
  41f798:	pop    ss
  41f799:	sbb    BYTE PTR [ebx+0x0],cl
  41f79c:	sub    al,0x38
  41f79e:	je     0x41f7e1
  41f7a0:	iret   
  41f7a1:	loopne 0x41f7e2
  41f7a3:	js     0x41f733
  41f7a5:	jg     0x41f803
  41f7a7:	call   0x328e27
  41f7ac:	dec    esp
  41f7ad:	mov    esp,0x8f8a8907
  41f7b2:	test   BYTE PTR [ebp+0x1f],cl
  41f7b5:	xor    esp,esp
  41f7b7:	aad    0x21
  41f7b9:	xchg   edi,eax
  41f7ba:	lock adc DWORD PTR [ebx],0x7c
  41f7be:	lods   eax,DWORD PTR ds:[esi]
  41f7bf:	xor    al,0x97
  41f7c1:	inc    eax
  41f7c2:	or     al,0x8b
  41f7c4:	mov    ds:0xcf6a5d8f,al
  41f7c9:	loopne 0x41f802
  41f7cb:	js     0x41f75b
  41f7cd:	jg     0x41f82b
  41f7cf:	call   0x328727
  41f7d4:	dec    esp
  41f7d5:	mov    esp,0x8aff
	...
  41f7e2:	xchg   edx,eax
  41f7e3:	pop    DWORD PTR [edx+0x570aef4d]
  41f7e9:	cld    
  41f7ea:	xchg   esp,eax
  41f7eb:	sub    al,0xfc
  41f7ed:	jae    0x41f814
  41f7ef:	or     eax,DWORD PTR [edi-0x20]
  41f7f2:	pop    ds
  41f7f3:	or     edi,DWORD PTR [edi]
  41f7f5:	fcomp  QWORD PTR [esi]
  41f7f7:	test   al,0xa1
  41f7f9:	sti    
  41f7fa:	mov    al,0x96
  41f7fc:	mov    esp,es
  41f7fe:	xlat   BYTE PTR ds:[ebx]
  41f7ff:	loop   0x41f84c
  41f801:	js     0x41f811
  41f803:	add    BYTE PTR [ebp+0x4b180f15],0x0
  41f80a:	std    
  41f80b:	loopne 0x41f84c
  41f80d:	js     0x41f81d
  41f80f:	or     BYTE PTR ds:0x852f6b45,0xd
  41f816:	ret    
  41f817:	pop    ss
  41f818:	dec    ebx
  41f819:	add    ah,cl
  41f81b:	inc    esp
  41f81c:	lock push ecx
  41f81e:	ja     0x41f7ce
  41f820:	bnd jmp DWORD PTR [eax+0x2]
  41f824:	enter  0x440c,0x2c
  41f828:	clc    
  41f829:	add    edi,edx
  41f82b:	mov    bl,0xc
  41f82d:	push   ebp
  41f82e:	xor    ecx,DWORD PTR [eax]
  41f830:	push   edi
  41f831:	in     al,0x54
  41f833:	cmp    al,0xf0
  41f835:	add    edx,DWORD PTR [edx+0x334582b3]
  41f83b:	or     bh,BYTE PTR [edi]
  41f83d:	loopne 0x41f833
  41f83f:	test   BYTE PTR [eax+edi*2-0x72],cl
  41f843:	jg     0x41f7c8
  41f845:	dec    ebp
	...
  41f84e:	add    BYTE PTR [eax],al
  41f850:	das    
  41f851:	stos   BYTE PTR es:[edi],al
  41f852:	xchg   ecx,eax
  41f853:	(bad)  
  41f854:	mov    dl,BYTE PTR [edi+0x7fcf000b]
  41f85a:	in     eax,0x9
  41f85c:	push   esp
  41f85d:	sub    al,0xf4
  41f85f:	or     DWORD PTR ds:0xf755837b,0x9
  41f866:	inc    edi
  41f867:	clc    
  41f868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f869:	cmp    al,0xfc
  41f86b:	jae    0x41f814
  41f86d:	or     bh,bh
  41f86f:	xor    edx,DWORD PTR [edi+0x40]
  41f872:	or     al,0x3
  41f874:	adc    BYTE PTR [edi+0x2acc1184],0xf4
  41f87b:	mov    eax,ds:0x4b17fb
  41f880:	int3   
  41f881:	cmp    dh,ah
  41f883:	mov    edi,ebx
  41f885:	or     BYTE PTR [edi],bh
  41f887:	clc    
  41f888:	dec    esi
  41f889:	mov    edi,0x7fcf03e2
  41f88e:	test   DWORD PTR ds:0x4b17e3,edx
  41f894:	int3   
  41f895:	sub    dh,ah
  41f897:	xor    edx,ebp
  41f899:	fidiv  WORD PTR [edi]
  41f89b:	js     0x41f8ab
  41f89d:	or     BYTE PTR ds:0x4077745,0xeb
  41f8a4:	cmp    BYTE PTR [edi],al
  41f8a6:	pop    ds
  41f8a7:	and    al,0xe7
  41f8a9:	ds or  al,0x89
  41f8ac:	mov    ds:0xcf41745f,al
  41f8b1:	push   eax
  41f8b2:	ret    
  41f8b3:	mov    DWORD PTR [eax],eax
	...
  41f8bd:	add    BYTE PTR [edx-0x30be8b89],bl
  41f8c3:	push   eax
  41f8c4:	ret    
  41f8c5:	mov    edx,esp
  41f8c7:	arpl   WORD PTR [ecx+eax*2-0x31],si
  41f8cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8cc:	inc    ecx
  41f8cd:	div    DWORD PTR [eax]
  41f8cf:	xchg   ebp,eax
  41f8d0:	jle    0x41f8df
  41f8d2:	js     0x41f8e1
  41f8d4:	dec    ebx
  41f8d5:	add    BYTE PTR [esi+0x43],dl
  41f8d8:	hlt    
  41f8d9:	mov    ecx,0x4c81cf
  41f8de:	dec    esi
  41f8df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8e0:	or     eax,DWORD PTR [edx]
  41f8e2:	iret   
  41f8e3:	jg     0x41f86a
  41f8e5:	push   ebp
  41f8e6:	pop    es
  41f8e7:	imul   ebx,ebx,0x7467e289
  41f8ed:	inc    ecx
  41f8ee:	iret   
  41f8ef:	fisub  WORD PTR [ebx]
  41f8f1:	js     0x41f881
  41f8f3:	jg     0x41f951
  41f8f5:	call   0x3292c5
  41f8fa:	dec    esp
  41f8fb:	mov    esp,0x4bc28b07
  41f900:	je     0x41f943
  41f902:	iret   
  41f903:	cs in  al,0xd5
  41f906:	lds    edx,FWORD PTR [eax+esi*8+0x80a8f85]
  41f90d:	xor    ecx,DWORD PTR [edi-0xd74da58]
  41f913:	pop    ebx
  41f914:	je     0x41f957
  41f916:	iret   
  41f917:	add    al,cl
  41f919:	add    al,0x4c
  41f91b:	push   edx
  41f91c:	xor    al,0x78
  41f91e:	push   cs
  41f91f:	or     BYTE PTR [esp+esi*2],0x0
	...
  41f92b:	add    dh,dl
  41f92d:	ficom  WORD PTR [edi]
  41f92f:	js     0x41f93f
  41f931:	add    BYTE PTR [ebx-0x1b844cbc],0x5d
  41f938:	jb     0x41f8ce
  41f93a:	lock mov eax,edx
  41f93d:	sub    esi,DWORD PTR [ecx+eax*2-0x31]
  41f941:	xor    ebp,ecx
  41f943:	xor    ecx,DWORD PTR [edi-0x73a218f8]
  41f949:	ret    
  41f94a:	mov    edi,0xc7fcfcc
  41f94f:	add    bh,cl
  41f951:	jg     0x41f95f
  41f953:	add    bh,cl
  41f955:	jg     0x41f963
  41f957:	add    bh,cl
  41f959:	jg     0x41f967
  41f95b:	add    bh,cl
  41f95d:	jg     0x41f96b
  41f95f:	add    bh,cl
  41f961:	jg     0x41f96f
  41f963:	add    bh,cl
  41f965:	jg     0x41f973
  41f967:	add    bh,cl
  41f969:	jg     0x41f977
  41f96b:	add    bh,cl
  41f96d:	jg     0x41f97b
  41f96f:	add    bh,cl
  41f971:	jg     0x41f97f
  41f973:	add    bh,cl
  41f975:	jg     0x41f983
  41f977:	add    bh,cl
  41f979:	jg     0x41f987
  41f97b:	add    bh,cl
  41f97d:	jg     0x41f98b
  41f97f:	add    bh,cl
  41f981:	jg     0x41f98f
  41f983:	add    bh,cl
  41f985:	jg     0x41f993
  41f987:	add    bh,cl
  41f989:	jg     0x41f997
  41f98b:	add    bh,cl
  41f98d:	jg     0x41f99b
	...
  41f997:	add    BYTE PTR [eax],al
  41f999:	add    bh,cl
  41f99b:	jg     0x41f9a9
  41f99d:	add    bh,cl
  41f99f:	jg     0x41f9ad
  41f9a1:	add    bh,cl
  41f9a3:	jg     0x41f9b1
  41f9a5:	add    bh,cl
  41f9a7:	jg     0x41f9b5
  41f9a9:	add    bh,cl
  41f9ab:	jg     0x41f9b9
  41f9ad:	add    bh,cl
  41f9af:	jg     0x41f9bd
  41f9b1:	add    bh,cl
  41f9b3:	jg     0x41f9c1
  41f9b5:	add    bh,cl
  41f9b7:	jg     0x41f9c5
  41f9b9:	add    bh,cl
  41f9bb:	jg     0x41f9c9
  41f9bd:	add    bh,cl
  41f9bf:	jg     0x41f9cd
  41f9c1:	add    bh,cl
  41f9c3:	jg     0x41f9d1
  41f9c5:	add    bh,cl
  41f9c7:	jg     0x41f9d5
  41f9c9:	add    bh,cl
  41f9cb:	jg     0x41f9d9
  41f9cd:	add    bh,cl
  41f9cf:	jg     0x41f9dd
  41f9d1:	add    bh,cl
  41f9d3:	jg     0x41f9e1
  41f9d5:	add    bh,cl
  41f9d7:	jg     0x41f9e5
  41f9d9:	add    bh,cl
  41f9db:	jg     0x41f9e9
  41f9dd:	add    bh,cl
  41f9df:	jg     0x41f9ed
  41f9e1:	add    bh,cl
  41f9e3:	jg     0x41f9f1
  41f9e5:	add    bh,cl
  41f9e7:	jg     0x41f9f5
  41f9e9:	add    bh,cl
  41f9eb:	jg     0x41f9f9
  41f9ed:	add    bh,cl
  41f9ef:	jg     0x41f9fd
  41f9f1:	add    bh,cl
  41f9f3:	jg     0x41fa01
  41f9f5:	add    bh,cl
  41f9f7:	jg     0x41fa05
  41f9f9:	add    bh,cl
  41f9fb:	jg     0x41fa09
	...
  41fa05:	add    BYTE PTR [eax],al
  41fa07:	add    bh,cl
  41fa09:	jg     0x41fa17
  41fa0b:	add    bh,cl
  41fa0d:	jg     0x41fa1b
  41fa0f:	add    bh,cl
  41fa11:	jg     0x41fa1f
  41fa13:	add    bh,cl
  41fa15:	jg     0x41fa23
  41fa17:	add    bh,cl
  41fa19:	jg     0x41fa27
  41fa1b:	add    bh,cl
  41fa1d:	jg     0x41fa2b
  41fa1f:	add    bh,cl
  41fa21:	jg     0x41fa2f
  41fa23:	add    bh,cl
  41fa25:	jg     0x41fa33
  41fa27:	add    bh,cl
  41fa29:	jg     0x41fa37
  41fa2b:	add    bh,cl
  41fa2d:	jg     0x41fa3b
  41fa2f:	add    bh,cl
  41fa31:	jg     0x41fa3f
  41fa33:	add    bh,cl
  41fa35:	jg     0x41fa43
  41fa37:	add    bh,cl
  41fa39:	jg     0x41fa47
  41fa3b:	add    bh,cl
  41fa3d:	jg     0x41fa4b
  41fa3f:	add    bh,cl
  41fa41:	jg     0x41fa4f
  41fa43:	add    bh,cl
  41fa45:	jg     0x41fa53
  41fa47:	add    bh,cl
  41fa49:	jg     0x41fa57
  41fa4b:	add    bh,cl
  41fa4d:	jg     0x41fa5b
  41fa4f:	add    bh,cl
  41fa51:	jg     0x41fa5f
  41fa53:	add    bh,cl
  41fa55:	jg     0x41fa63
  41fa57:	add    bh,cl
  41fa59:	jg     0x41fa67
  41fa5b:	add    bh,cl
  41fa5d:	jg     0x41fa6b
  41fa5f:	add    bh,cl
  41fa61:	jg     0x41fa6f
  41fa63:	add    bh,cl
  41fa65:	jg     0x41fa73
  41fa67:	add    bh,cl
  41fa69:	jg     0x41fa77
	...
  41fa73:	add    BYTE PTR [eax],al
  41fa75:	add    bh,bh
  41fa77:	and    eax,0x429f48
  41fa7c:	jmp    DWORD PTR ds:0x429f4c
  41fa82:	jmp    DWORD PTR ds:0x429f50
  41fa88:	jmp    DWORD PTR ds:0x429f54
  41fa8e:	jmp    DWORD PTR ds:0x429f58
  41fa94:	jmp    DWORD PTR ds:0x429f5c
  41fa9a:	jmp    DWORD PTR ds:0x429f64
  41faa0:	jmp    DWORD PTR ds:0x429f68
  41faa6:	jmp    DWORD PTR ds:0x429f6c
  41faac:	jmp    DWORD PTR ds:0x429f70
  41fab2:	jmp    DWORD PTR ds:0x429f74
  41fab8:	jmp    DWORD PTR ds:0x429f78
  41fabe:	jmp    DWORD PTR ds:0x429f7c
  41fac4:	jmp    DWORD PTR ds:0x429f80
  41faca:	jmp    DWORD PTR ds:0x429f84
  41fad0:	jmp    DWORD PTR ds:0x429f88
  41fad6:	jmp    DWORD PTR ds:0x429f8c
  41fadc:	jmp    DWORD PTR ds:0x429f90
  41fae2:	jmp    DWORD PTR ds:0x429f94
  41fae8:	jmp    DWORD PTR ds:0x429f98
  41faee:	jmp    DWORD PTR ds:0x429f9c
  41faf4:	jmp    DWORD PTR ds:0x429fa0
  41fafa:	jmp    DWORD PTR ds:0x429fa4
  41fb00:	jmp    DWORD PTR ds:0x429fa8
  41fb06:	jmp    DWORD PTR ds:0x429fac
  41fb0c:	jmp    DWORD PTR ds:0x429fb0
  41fb12:	jmp    DWORD PTR ds:0x429fb4
  41fb18:	jmp    DWORD PTR ds:0x429fb8
  41fb1e:	jmp    DWORD PTR ds:0x429fbc
  41fb24:	jmp    DWORD PTR ds:0x429fc0
  41fb2a:	jmp    DWORD PTR ds:0x429fc4
  41fb30:	jmp    DWORD PTR ds:0x429fc8
  41fb36:	jmp    DWORD PTR ds:0x429fcc
  41fb3c:	jmp    DWORD PTR ds:0x429fd0
  41fb42:	jmp    DWORD PTR ds:0x429fd4
  41fb48:	jmp    DWORD PTR ds:0x429fd8
  41fb4e:	jmp    DWORD PTR ds:0x429fdc
  41fb54:	jmp    DWORD PTR ds:0x429fe0
  41fb5a:	jmp    DWORD PTR ds:0x429fe4
  41fb60:	jmp    DWORD PTR ds:0x429fe8
  41fb66:	jmp    DWORD PTR ds:0x429fec
  41fb6c:	jmp    DWORD PTR ds:0x429ff0
  41fb72:	jmp    DWORD PTR ds:0x429ff4
  41fb78:	jmp    DWORD PTR ds:0x429ff8
  41fb7e:	jmp    DWORD PTR ds:0x429ffc
  41fb84:	jmp    DWORD PTR ds:0x42a000
  41fb8a:	jmp    DWORD PTR ds:0x42a004
  41fb90:	jmp    DWORD PTR ds:0x42a008
  41fb96:	jmp    DWORD PTR ds:0x42a00c
  41fb9c:	jmp    DWORD PTR ds:0x42a010
  41fba2:	jmp    DWORD PTR ds:0x42a014
  41fba8:	jmp    DWORD PTR ds:0x42a018
  41fbae:	jmp    DWORD PTR ds:0x42a01c
  41fbb4:	jmp    DWORD PTR ds:0x42a020
  41fbba:	jmp    DWORD PTR ds:0x42a024
  41fbc0:	jmp    DWORD PTR ds:0x42a028
  41fbc6:	jmp    DWORD PTR ds:0x42a02c
  41fbcc:	jmp    DWORD PTR ds:0x42a030
  41fbd2:	jmp    DWORD PTR ds:0x42a034
  41fbd8:	jmp    DWORD PTR ds:0x42a038
  41fbde:	jmp    DWORD PTR ds:0x42a03c
  41fbe4:	jmp    DWORD PTR ds:0x42a040
  41fbea:	jmp    DWORD PTR ds:0x42a044
  41fbf0:	jmp    DWORD PTR ds:0x42a048
  41fbf6:	jmp    DWORD PTR ds:0x42a04c
  41fbfc:	jmp    DWORD PTR ds:0x42a050
  41fc02:	jmp    DWORD PTR ds:0x42a054
  41fc08:	jmp    DWORD PTR ds:0x42a058
  41fc0e:	jmp    DWORD PTR ds:0x42a05c
  41fc14:	jmp    DWORD PTR ds:0x42a060
  41fc1a:	jmp    DWORD PTR ds:0x42a064
  41fc20:	jmp    DWORD PTR ds:0x42a068
  41fc26:	jmp    DWORD PTR ds:0x42a06c
  41fc2c:	jmp    DWORD PTR ds:0x42a070
  41fc32:	jmp    DWORD PTR ds:0x42a074
  41fc38:	jmp    DWORD PTR ds:0x42a078
  41fc3e:	jmp    DWORD PTR ds:0x42a07c
  41fc44:	jmp    DWORD PTR ds:0x42a080
  41fc4a:	jmp    DWORD PTR ds:0x42a084
  41fc50:	jmp    DWORD PTR ds:0x42a088
  41fc56:	jmp    DWORD PTR ds:0x42a08c
  41fc5c:	jmp    DWORD PTR ds:0x42a090
  41fc62:	jmp    DWORD PTR ds:0x42a094
  41fc68:	jmp    DWORD PTR ds:0x42a098
  41fc6e:	jmp    DWORD PTR ds:0x42a09c
  41fc74:	jmp    DWORD PTR ds:0x42a0a0
  41fc7a:	jmp    DWORD PTR ds:0x42a0a4
  41fc80:	jmp    DWORD PTR ds:0x42a0a8
  41fc86:	jmp    DWORD PTR ds:0x42a0ac
  41fc8c:	jmp    DWORD PTR ds:0x42a0b0
  41fc92:	jmp    DWORD PTR ds:0x42a0b4
  41fc98:	jmp    DWORD PTR ds:0x42a0b8
  41fc9e:	jmp    DWORD PTR ds:0x42a0bc
  41fca4:	jmp    DWORD PTR ds:0x42a0c0
  41fcaa:	jmp    DWORD PTR ds:0x42a0c4
  41fcb0:	jmp    DWORD PTR ds:0x42a0c8
  41fcb6:	jmp    DWORD PTR ds:0x42a0cc
  41fcbc:	jmp    DWORD PTR ds:0x42a0d0
  41fcc2:	jmp    DWORD PTR ds:0x42a0d4
  41fcc8:	jmp    DWORD PTR ds:0x42a0d8
  41fcce:	jmp    DWORD PTR ds:0x42a0dc
  41fcd4:	jmp    DWORD PTR ds:0x42a0e0
  41fcda:	jmp    DWORD PTR ds:0x42a0e4
  41fce0:	jmp    DWORD PTR ds:0x42a0ec
