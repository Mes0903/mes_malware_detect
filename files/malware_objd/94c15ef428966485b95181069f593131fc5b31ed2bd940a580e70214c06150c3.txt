
94c15ef428966485b95181069f593131fc5b31ed2bd940a580e70214c06150c3.exe:     file format pei-i386


Disassembly of section .text:

00011000 <.text>:
   11000:	push   ebp
   11001:	mov    ebp,esp
   11003:	sub    esp,0x80c
   11009:	mov    eax,DWORD PTR [ebp+0x8]
   1100c:	xor    edx,edx
   1100e:	push   ebx
   1100f:	push   esi
   11010:	xor    ecx,ecx
   11012:	inc    ecx
   11013:	push   edi
   11014:	mov    edi,0x1000
   11019:	mov    DWORD PTR [ebp-0xc],eax
   1101c:	mov    eax,0x800
   11021:	mov    DWORD PTR [ebp-0x8],edx
   11024:	mov    DWORD PTR [ebp-0x40c],eax
   1102a:	mov    DWORD PTR [ebp-0x408],eax
   11030:	mov    DWORD PTR [ebp-0x404],eax
   11036:	mov    DWORD PTR [ebp-0x400],eax
   1103c:	mov    DWORD PTR [ebp-0x3fc],edi
   11042:	mov    DWORD PTR [ebp-0x3f8],edi
   11048:	mov    DWORD PTR [ebp-0x3f4],edx
   1104e:	mov    DWORD PTR [ebp-0x3f0],edx
   11054:	mov    DWORD PTR [ebp-0x3ec],eax
   1105a:	mov    DWORD PTR [ebp-0x3e8],eax
   11060:	mov    DWORD PTR [ebp-0x3e4],eax
   11066:	mov    DWORD PTR [ebp-0x3e0],eax
   1106c:	mov    DWORD PTR [ebp-0x3dc],edi
   11072:	mov    DWORD PTR [ebp-0x3d8],edi
   11078:	mov    DWORD PTR [ebp-0x3d4],edx
   1107e:	mov    DWORD PTR [ebp-0x3d0],0x4000
   11088:	mov    DWORD PTR [ebp-0x3cc],eax
   1108e:	mov    DWORD PTR [ebp-0x3c8],eax
   11094:	mov    DWORD PTR [ebp-0x3c4],eax
   1109a:	mov    DWORD PTR [ebp-0x3c0],eax
   110a0:	mov    DWORD PTR [ebp-0x3bc],edi
   110a6:	mov    DWORD PTR [ebp-0x3b8],edi
   110ac:	mov    DWORD PTR [ebp-0x3b4],edx
   110b2:	mov    DWORD PTR [ebp-0x3b0],edx
   110b8:	mov    DWORD PTR [ebp-0x3ac],eax
   110be:	mov    DWORD PTR [ebp-0x3a8],eax
   110c4:	mov    DWORD PTR [ebp-0x3a4],eax
   110ca:	mov    DWORD PTR [ebp-0x3a0],eax
   110d0:	mov    DWORD PTR [ebp-0x39c],edi
   110d6:	mov    DWORD PTR [ebp-0x398],edi
   110dc:	mov    DWORD PTR [ebp-0x394],edx
   110e2:	mov    DWORD PTR [ebp-0x390],edx
   110e8:	mov    DWORD PTR [ebp-0x38c],eax
   110ee:	mov    DWORD PTR [ebp-0x388],eax
   110f4:	mov    DWORD PTR [ebp-0x384],eax
   110fa:	mov    DWORD PTR [ebp-0x380],eax
   11100:	mov    DWORD PTR [ebp-0x37c],edi
   11106:	mov    DWORD PTR [ebp-0x378],edi
   1110c:	mov    DWORD PTR [ebp-0x374],ecx
   11112:	mov    DWORD PTR [ebp-0x370],edx
   11118:	mov    DWORD PTR [ebp-0x36c],eax
   1111e:	mov    DWORD PTR [ebp-0x368],eax
   11124:	mov    DWORD PTR [ebp-0x364],eax
   1112a:	mov    DWORD PTR [ebp-0x360],eax
   11130:	mov    DWORD PTR [ebp-0x35c],edi
   11136:	mov    DWORD PTR [ebp-0x358],edi
   1113c:	mov    DWORD PTR [ebp-0x354],ecx
   11142:	mov    DWORD PTR [ebp-0x350],edx
   11148:	mov    DWORD PTR [ebp-0x34c],eax
   1114e:	mov    DWORD PTR [ebp-0x348],eax
   11154:	mov    DWORD PTR [ebp-0x344],eax
   1115a:	mov    DWORD PTR [ebp-0x340],eax
   11160:	mov    DWORD PTR [ebp-0x33c],edi
   11166:	mov    DWORD PTR [ebp-0x338],edi
   1116c:	mov    DWORD PTR [ebp-0x334],ecx
   11172:	mov    DWORD PTR [ebp-0x330],edx
   11178:	mov    DWORD PTR [ebp-0x32c],eax
   1117e:	mov    DWORD PTR [ebp-0x328],eax
   11184:	mov    DWORD PTR [ebp-0x324],eax
   1118a:	mov    DWORD PTR [ebp-0x320],eax
   11190:	mov    DWORD PTR [ebp-0x31c],edi
   11196:	mov    DWORD PTR [ebp-0x318],edi
   1119c:	mov    DWORD PTR [ebp-0x314],ecx
   111a2:	mov    DWORD PTR [ebp-0x310],edx
   111a8:	mov    DWORD PTR [ebp-0x30c],edx
   111ae:	mov    DWORD PTR [ebp-0x308],edx
   111b4:	mov    DWORD PTR [ebp-0x304],edx
   111ba:	mov    DWORD PTR [ebp-0x300],edx
   111c0:	mov    DWORD PTR [ebp-0x2fc],edx
   111c6:	mov    DWORD PTR [ebp-0x2f8],edx
   111cc:	push   0x8
   111ce:	pop    esi
   111cf:	mov    ebx,0x810
   111d4:	push   0x10
   111d6:	mov    DWORD PTR [ebp-0x27c],ecx
   111dc:	mov    DWORD PTR [ebp-0x278],ecx
   111e2:	pop    ecx
   111e3:	mov    DWORD PTR [ebp-0x2f4],edx
   111e9:	mov    DWORD PTR [ebp-0x2f0],edx
   111ef:	mov    DWORD PTR [ebp-0x2ec],edx
   111f5:	mov    DWORD PTR [ebp-0x2e8],edx
   111fb:	mov    DWORD PTR [ebp-0x2e4],edx
   11201:	mov    DWORD PTR [ebp-0x2e0],edx
   11207:	mov    DWORD PTR [ebp-0x2dc],edx
   1120d:	mov    DWORD PTR [ebp-0x2d8],edx
   11213:	mov    DWORD PTR [ebp-0x2d4],edx
   11219:	mov    DWORD PTR [ebp-0x2d0],edx
   1121f:	mov    DWORD PTR [ebp-0x2cc],edx
   11225:	mov    DWORD PTR [ebp-0x2c8],edx
   1122b:	mov    DWORD PTR [ebp-0x2c4],edx
   11231:	mov    DWORD PTR [ebp-0x2c0],edx
   11237:	mov    DWORD PTR [ebp-0x2bc],edx
   1123d:	mov    DWORD PTR [ebp-0x2b8],edx
   11243:	mov    DWORD PTR [ebp-0x2b4],edx
   11249:	mov    DWORD PTR [ebp-0x2b0],edx
   1124f:	mov    DWORD PTR [ebp-0x2ac],edx
   11255:	mov    DWORD PTR [ebp-0x2a8],edx
   1125b:	mov    DWORD PTR [ebp-0x2a4],edx
   11261:	mov    DWORD PTR [ebp-0x2a0],edx
   11267:	mov    DWORD PTR [ebp-0x29c],edx
   1126d:	mov    DWORD PTR [ebp-0x298],edx
   11273:	mov    DWORD PTR [ebp-0x294],edx
   11279:	mov    DWORD PTR [ebp-0x290],edx
   1127f:	mov    DWORD PTR [ebp-0x28c],edx
   11285:	mov    DWORD PTR [ebp-0x288],edx
   1128b:	mov    DWORD PTR [ebp-0x284],eax
   11291:	mov    DWORD PTR [ebp-0x280],eax
   11297:	mov    DWORD PTR [ebp-0x274],0x3
   112a1:	mov    DWORD PTR [ebp-0x270],0x5
   112ab:	mov    DWORD PTR [ebp-0x26c],esi
   112b1:	mov    DWORD PTR [ebp-0x268],0x808
   112bb:	mov    DWORD PTR [ebp-0x264],ecx
   112c1:	mov    DWORD PTR [ebp-0x260],ebx
   112c7:	mov    DWORD PTR [ebp-0x25c],edx
   112cd:	mov    DWORD PTR [ebp-0x258],edx
   112d3:	mov    DWORD PTR [ebp-0x254],edx
   112d9:	mov    DWORD PTR [ebp-0x250],edx
   112df:	mov    DWORD PTR [ebp-0x24c],ecx
   112e5:	mov    DWORD PTR [ebp-0x248],ecx
   112eb:	mov    DWORD PTR [ebp-0x244],ecx
   112f1:	mov    DWORD PTR [ebp-0x240],ecx
   112f7:	mov    DWORD PTR [ebp-0x23c],ecx
   112fd:	mov    DWORD PTR [ebp-0x238],ecx
   11303:	mov    DWORD PTR [ebp-0x234],ecx
   11309:	mov    DWORD PTR [ebp-0x230],ecx
   1130f:	mov    DWORD PTR [ebp-0x22c],ecx
   11315:	mov    DWORD PTR [ebp-0x228],ecx
   1131b:	mov    DWORD PTR [ebp-0x224],ecx
   11321:	mov    DWORD PTR [ebp-0x220],ecx
   11327:	mov    DWORD PTR [ebp-0x21c],ecx
   1132d:	mov    DWORD PTR [ebp-0x218],ecx
   11333:	mov    DWORD PTR [ebp-0x214],ecx
   11339:	mov    DWORD PTR [ebp-0x210],ecx
   1133f:	mov    DWORD PTR [ebp-0x20c],ebx
   11345:	mov    DWORD PTR [ebp-0x208],0x808
   1134f:	mov    DWORD PTR [ebp-0x204],ebx
   11355:	mov    DWORD PTR [ebp-0x200],ebx
   1135b:	mov    DWORD PTR [ebp-0x1fc],eax
   11361:	mov    DWORD PTR [ebp-0x1f8],eax
   11367:	mov    DWORD PTR [ebp-0x1f4],eax
   1136d:	mov    DWORD PTR [ebp-0x1f0],eax
   11373:	mov    DWORD PTR [ebp-0x1ec],eax
   11379:	mov    DWORD PTR [ebp-0x1e8],eax
   1137f:	mov    DWORD PTR [ebp-0x1e4],eax
   11385:	mov    DWORD PTR [ebp-0x1e0],eax
   1138b:	mov    DWORD PTR [ebp-0x1dc],eax
   11391:	mov    DWORD PTR [ebp-0x1d8],eax
   11397:	mov    DWORD PTR [ebp-0x1d4],eax
   1139d:	mov    DWORD PTR [ebp-0x1d0],eax
   113a3:	mov    DWORD PTR [ebp-0x1cc],edx
   113a9:	mov    DWORD PTR [ebp-0x1c8],edx
   113af:	mov    DWORD PTR [ebp-0x1c4],edx
   113b5:	mov    DWORD PTR [ebp-0x1c0],edx
   113bb:	mov    DWORD PTR [ebp-0x1bc],edx
   113c1:	mov    DWORD PTR [ebp-0x1b8],edx
   113c7:	mov    DWORD PTR [ebp-0x1b4],edx
   113cd:	mov    DWORD PTR [ebp-0x1b0],edx
   113d3:	mov    DWORD PTR [ebp-0x1ac],edx
   113d9:	mov    DWORD PTR [ebp-0x1a8],edx
   113df:	mov    DWORD PTR [ebp-0x1a4],0x208
   113e9:	mov    DWORD PTR [ebp-0x1a0],edx
   113ef:	mov    DWORD PTR [ebp-0x19c],edx
   113f5:	mov    DWORD PTR [ebp-0x198],edx
   113fb:	mov    DWORD PTR [ebp-0x194],edx
   11401:	mov    DWORD PTR [ebp-0x190],edx
   11407:	mov    DWORD PTR [ebp-0x18c],0x80
   11411:	mov    DWORD PTR [ebp-0x188],0x80
   1141b:	mov    DWORD PTR [ebp-0x184],0x80
   11425:	mov    DWORD PTR [ebp-0x180],0x80
   1142f:	mov    DWORD PTR [ebp-0x17c],edx
   11435:	mov    DWORD PTR [ebp-0x178],edx
   1143b:	mov    DWORD PTR [ebp-0x174],edx
   11441:	mov    DWORD PTR [ebp-0x170],edx
   11447:	mov    DWORD PTR [ebp-0x16c],ecx
   1144d:	mov    DWORD PTR [ebp-0x168],esi
   11453:	mov    DWORD PTR [ebp-0x164],edx
   11459:	mov    DWORD PTR [ebp-0x160],edx
   1145f:	mov    DWORD PTR [ebp-0x15c],edx
   11465:	mov    DWORD PTR [ebp-0x158],edx
   1146b:	mov    DWORD PTR [ebp-0x154],edx
   11471:	mov    DWORD PTR [ebp-0x150],edx
   11477:	mov    DWORD PTR [ebp-0x14c],ecx
   1147d:	mov    DWORD PTR [ebp-0x148],ecx
   11483:	mov    DWORD PTR [ebp-0x144],ecx
   11489:	mov    DWORD PTR [ebp-0x140],ecx
   1148f:	mov    DWORD PTR [ebp-0x13c],ecx
   11495:	mov    DWORD PTR [ebp-0x138],ecx
   1149b:	mov    DWORD PTR [ebp-0x134],ecx
   114a1:	mov    DWORD PTR [ebp-0x130],ecx
   114a7:	mov    DWORD PTR [ebp-0x12c],esi
   114ad:	mov    DWORD PTR [ebp-0x128],esi
   114b3:	mov    DWORD PTR [ebp-0x124],esi
   114b9:	mov    DWORD PTR [ebp-0x120],esi
   114bf:	mov    DWORD PTR [ebp-0x11c],esi
   114c5:	mov    DWORD PTR [ebp-0x118],esi
   114cb:	mov    DWORD PTR [ebp-0x114],esi
   114d1:	mov    DWORD PTR [ebp-0x110],esi
   114d7:	mov    DWORD PTR [ebp-0x10c],ebx
   114dd:	mov    DWORD PTR [ebp-0x108],ebx
   114e3:	mov    DWORD PTR [ebp-0x104],0x20
   114ed:	mov    DWORD PTR [ebp-0x100],edx
   114f3:	mov    DWORD PTR [ebp-0xfc],eax
   114f9:	mov    DWORD PTR [ebp-0xf8],eax
   114ff:	mov    DWORD PTR [ebp-0xf4],0x808
   11509:	mov    DWORD PTR [ebp-0xf0],0x808
   11513:	mov    DWORD PTR [ebp-0xec],0x30
   1151d:	mov    DWORD PTR [ebp-0xe8],edx
   11523:	mov    DWORD PTR [ebp-0xe4],0x20
   1152d:	mov    DWORD PTR [ebp-0xe0],edx
   11533:	mov    DWORD PTR [ebp-0xdc],edx
   11539:	mov    DWORD PTR [ebp-0xd8],0x50
   11543:	mov    DWORD PTR [ebp-0xd4],edx
   11549:	mov    DWORD PTR [ebp-0xd0],edx
   1154f:	mov    DWORD PTR [ebp-0xcc],eax
   11555:	mov    DWORD PTR [ebp-0xc8],eax
   1155b:	mov    DWORD PTR [ebp-0xc4],eax
   11561:	mov    DWORD PTR [ebp-0xc0],eax
   11567:	mov    DWORD PTR [ebp-0xbc],edx
   1156d:	mov    DWORD PTR [ebp-0xb8],edx
   11573:	mov    DWORD PTR [ebp-0xb4],edx
   11579:	mov    DWORD PTR [ebp-0xb0],edx
   1157f:	mov    DWORD PTR [ebp-0xac],eax
   11585:	mov    DWORD PTR [ebp-0xa8],eax
   1158b:	mov    DWORD PTR [ebp-0xa4],eax
   11591:	mov    DWORD PTR [ebp-0xa0],eax
   11597:	mov    DWORD PTR [ebp-0x9c],eax
   1159d:	mov    DWORD PTR [ebp-0x98],eax
   115a3:	mov    DWORD PTR [ebp-0x94],eax
   115a9:	mov    DWORD PTR [ebp-0x90],eax
   115af:	mov    DWORD PTR [ebp-0x8c],ecx
   115b5:	mov    DWORD PTR [ebp-0x88],ecx
   115bb:	mov    DWORD PTR [ebp-0x84],ecx
   115c1:	mov    DWORD PTR [ebp-0x80],ecx
   115c4:	mov    DWORD PTR [ebp-0x7c],ecx
   115c7:	mov    DWORD PTR [ebp-0x78],ecx
   115ca:	mov    DWORD PTR [ebp-0x74],ecx
   115cd:	mov    DWORD PTR [ebp-0x70],ecx
   115d0:	mov    DWORD PTR [ebp-0x60],ecx
   115d3:	xor    ecx,ecx
   115d5:	inc    ecx
   115d6:	mov    DWORD PTR [ebp-0x4c],ecx
   115d9:	mov    DWORD PTR [ebp-0x44],ecx
   115dc:	mov    DWORD PTR [ebp-0x40],ecx
   115df:	mov    ecx,0x2000
   115e4:	mov    DWORD PTR [ebp-0x34],ecx
   115e7:	mov    DWORD PTR [ebp-0x30],ecx
   115ea:	or     ecx,0xffffffff
   115ed:	mov    DWORD PTR [ebp-0x6c],esi
   115f0:	mov    DWORD PTR [ebp-0x68],esi
   115f3:	mov    DWORD PTR [ebp-0x64],0x208
   115fa:	mov    DWORD PTR [ebp-0x5c],edx
   115fd:	mov    DWORD PTR [ebp-0x58],edx
   11600:	mov    DWORD PTR [ebp-0x54],edx
   11603:	mov    DWORD PTR [ebp-0x50],edx
   11606:	mov    DWORD PTR [ebp-0x48],edx
   11609:	mov    DWORD PTR [ebp-0x3c],edx
   1160c:	mov    DWORD PTR [ebp-0x38],edx
   1160f:	mov    DWORD PTR [ebp-0x2c],edx
   11612:	mov    DWORD PTR [ebp-0x28],edx
   11615:	mov    DWORD PTR [ebp-0x24],edx
   11618:	mov    DWORD PTR [ebp-0x20],edx
   1161b:	mov    DWORD PTR [ebp-0x1c],edx
   1161e:	mov    DWORD PTR [ebp-0x18],edx
   11621:	mov    DWORD PTR [ebp-0x14],eax
   11624:	mov    DWORD PTR [ebp-0x10],eax
   11627:	mov    DWORD PTR [ebp-0x80c],eax
   1162d:	mov    DWORD PTR [ebp-0x808],eax
   11633:	mov    DWORD PTR [ebp-0x804],eax
   11639:	mov    DWORD PTR [ebp-0x800],eax
   1163f:	mov    DWORD PTR [ebp-0x7fc],ecx
   11645:	mov    DWORD PTR [ebp-0x7f8],ecx
   1164b:	mov    DWORD PTR [ebp-0x7f4],edx
   11651:	mov    DWORD PTR [ebp-0x7f0],ecx
   11657:	mov    DWORD PTR [ebp-0x7ec],edx
   1165d:	mov    DWORD PTR [ebp-0x7e8],edx
   11663:	mov    DWORD PTR [ebp-0x7e4],edx
   11669:	mov    DWORD PTR [ebp-0x7e0],edx
   1166f:	mov    DWORD PTR [ebp-0x7dc],ecx
   11675:	mov    DWORD PTR [ebp-0x7d8],ecx
   1167b:	mov    DWORD PTR [ebp-0x7d4],ecx
   11681:	mov    DWORD PTR [ebp-0x7d0],ecx
   11687:	mov    DWORD PTR [ebp-0x7cc],ecx
   1168d:	mov    DWORD PTR [ebp-0x7c8],ecx
   11693:	mov    DWORD PTR [ebp-0x7c4],ecx
   11699:	mov    DWORD PTR [ebp-0x7c0],ecx
   1169f:	mov    DWORD PTR [ebp-0x7bc],ecx
   116a5:	mov    DWORD PTR [ebp-0x7b8],ecx
   116ab:	mov    DWORD PTR [ebp-0x7b4],ecx
   116b1:	mov    DWORD PTR [ebp-0x7b0],ecx
   116b7:	mov    DWORD PTR [ebp-0x7ac],ecx
   116bd:	mov    DWORD PTR [ebp-0x7a8],ecx
   116c3:	mov    DWORD PTR [ebp-0x7a4],ecx
   116c9:	mov    DWORD PTR [ebp-0x7a0],ecx
   116cf:	mov    DWORD PTR [ebp-0x79c],ecx
   116d5:	mov    DWORD PTR [ebp-0x798],ecx
   116db:	mov    DWORD PTR [ebp-0x794],ecx
   116e1:	mov    DWORD PTR [ebp-0x790],ecx
   116e7:	mov    DWORD PTR [ebp-0x78c],ecx
   116ed:	mov    DWORD PTR [ebp-0x788],ecx
   116f3:	mov    DWORD PTR [ebp-0x784],ecx
   116f9:	mov    DWORD PTR [ebp-0x780],ecx
   116ff:	mov    DWORD PTR [ebp-0x77c],ecx
   11705:	mov    DWORD PTR [ebp-0x778],ecx
   1170b:	mov    DWORD PTR [ebp-0x774],ecx
   11711:	mov    DWORD PTR [ebp-0x770],ecx
   11717:	mov    DWORD PTR [ebp-0x76c],ecx
   1171d:	mov    DWORD PTR [ebp-0x768],ecx
   11723:	mov    DWORD PTR [ebp-0x764],ecx
   11729:	mov    DWORD PTR [ebp-0x760],ecx
   1172f:	mov    DWORD PTR [ebp-0x75c],ecx
   11735:	mov    DWORD PTR [ebp-0x758],ecx
   1173b:	mov    DWORD PTR [ebp-0x754],ecx
   11741:	mov    DWORD PTR [ebp-0x750],ecx
   11747:	mov    DWORD PTR [ebp-0x74c],ecx
   1174d:	mov    DWORD PTR [ebp-0x748],ecx
   11753:	mov    DWORD PTR [ebp-0x744],ecx
   11759:	mov    DWORD PTR [ebp-0x740],ecx
   1175f:	mov    DWORD PTR [ebp-0x73c],ecx
   11765:	mov    DWORD PTR [ebp-0x738],ecx
   1176b:	mov    DWORD PTR [ebp-0x734],ecx
   11771:	mov    DWORD PTR [ebp-0x730],ecx
   11777:	mov    DWORD PTR [ebp-0x72c],ecx
   1177d:	mov    DWORD PTR [ebp-0x728],ecx
   11783:	mov    DWORD PTR [ebp-0x724],ecx
   11789:	mov    DWORD PTR [ebp-0x720],ecx
   1178f:	mov    DWORD PTR [ebp-0x71c],ecx
   11795:	mov    DWORD PTR [ebp-0x718],ecx
   1179b:	mov    DWORD PTR [ebp-0x714],ecx
   117a1:	mov    DWORD PTR [ebp-0x710],ecx
   117a7:	mov    DWORD PTR [ebp-0x70c],ecx
   117ad:	mov    DWORD PTR [ebp-0x708],ecx
   117b3:	mov    DWORD PTR [ebp-0x704],ecx
   117b9:	mov    DWORD PTR [ebp-0x700],ecx
   117bf:	mov    DWORD PTR [ebp-0x6fc],ecx
   117c5:	mov    DWORD PTR [ebp-0x6f8],ecx
   117cb:	mov    DWORD PTR [ebp-0x6f4],ecx
   117d1:	mov    DWORD PTR [ebp-0x6f0],ecx
   117d7:	mov    DWORD PTR [ebp-0x6ec],ecx
   117dd:	mov    DWORD PTR [ebp-0x6e8],ecx
   117e3:	mov    DWORD PTR [ebp-0x6e4],ecx
   117e9:	mov    DWORD PTR [ebp-0x6e0],ecx
   117ef:	mov    DWORD PTR [ebp-0x6dc],ecx
   117f5:	mov    DWORD PTR [ebp-0x6d8],ecx
   117fb:	mov    DWORD PTR [ebp-0x6d4],ecx
   11801:	mov    DWORD PTR [ebp-0x6d0],ecx
   11807:	mov    DWORD PTR [ebp-0x6cc],ecx
   1180d:	mov    DWORD PTR [ebp-0x6c8],ecx
   11813:	mov    DWORD PTR [ebp-0x6c4],ecx
   11819:	mov    DWORD PTR [ebp-0x6c0],ecx
   1181f:	mov    DWORD PTR [ebp-0x6bc],ecx
   11825:	mov    DWORD PTR [ebp-0x6b8],ecx
   1182b:	mov    DWORD PTR [ebp-0x6b4],ecx
   11831:	mov    DWORD PTR [ebp-0x6b0],ecx
   11837:	mov    DWORD PTR [ebp-0x6ac],ecx
   1183d:	mov    DWORD PTR [ebp-0x6a8],ecx
   11843:	mov    DWORD PTR [ebp-0x6a4],ecx
   11849:	mov    DWORD PTR [ebp-0x6a0],ecx
   1184f:	mov    DWORD PTR [ebp-0x69c],ecx
   11855:	mov    DWORD PTR [ebp-0x698],ecx
   1185b:	mov    DWORD PTR [ebp-0x694],ecx
   11861:	mov    DWORD PTR [ebp-0x690],ecx
   11867:	mov    DWORD PTR [ebp-0x68c],ecx
   1186d:	mov    DWORD PTR [ebp-0x688],ecx
   11873:	mov    DWORD PTR [ebp-0x684],ecx
   11879:	mov    DWORD PTR [ebp-0x680],ecx
   1187f:	mov    DWORD PTR [ebp-0x67c],ecx
   11885:	mov    DWORD PTR [ebp-0x678],ecx
   1188b:	mov    DWORD PTR [ebp-0x674],ecx
   11891:	mov    DWORD PTR [ebp-0x670],ecx
   11897:	mov    DWORD PTR [ebp-0x66c],ecx
   1189d:	mov    DWORD PTR [ebp-0x668],ecx
   118a3:	mov    DWORD PTR [ebp-0x664],ecx
   118a9:	mov    DWORD PTR [ebp-0x660],ecx
   118af:	mov    DWORD PTR [ebp-0x65c],ecx
   118b5:	mov    DWORD PTR [ebp-0x658],ecx
   118bb:	mov    DWORD PTR [ebp-0x654],ecx
   118c1:	mov    DWORD PTR [ebp-0x650],ecx
   118c7:	mov    DWORD PTR [ebp-0x64c],ecx
   118cd:	mov    DWORD PTR [ebp-0x648],ecx
   118d3:	mov    DWORD PTR [ebp-0x644],ecx
   118d9:	mov    DWORD PTR [ebp-0x640],ecx
   118df:	mov    DWORD PTR [ebp-0x63c],ecx
   118e5:	mov    DWORD PTR [ebp-0x638],ecx
   118eb:	mov    DWORD PTR [ebp-0x634],ecx
   118f1:	mov    DWORD PTR [ebp-0x630],ecx
   118f7:	mov    DWORD PTR [ebp-0x62c],ecx
   118fd:	mov    DWORD PTR [ebp-0x628],ecx
   11903:	mov    DWORD PTR [ebp-0x624],ecx
   11909:	mov    DWORD PTR [ebp-0x620],ecx
   1190f:	mov    DWORD PTR [ebp-0x61c],ecx
   11915:	mov    DWORD PTR [ebp-0x618],ecx
   1191b:	mov    DWORD PTR [ebp-0x614],ecx
   11921:	mov    DWORD PTR [ebp-0x610],ecx
   11927:	mov    DWORD PTR [ebp-0x60c],esi
   1192d:	mov    DWORD PTR [ebp-0x608],esi
   11933:	mov    DWORD PTR [ebp-0x604],esi
   11939:	mov    DWORD PTR [ebp-0x600],esi
   1193f:	mov    DWORD PTR [ebp-0x5fc],esi
   11945:	mov    DWORD PTR [ebp-0x5f8],esi
   1194b:	mov    DWORD PTR [ebp-0x5f4],esi
   11951:	mov    DWORD PTR [ebp-0x5f0],esi
   11957:	mov    DWORD PTR [ebp-0x5ec],esi
   1195d:	mov    DWORD PTR [ebp-0x5e8],esi
   11963:	mov    DWORD PTR [ebp-0x5e4],esi
   11969:	mov    DWORD PTR [ebp-0x5e0],esi
   1196f:	mov    DWORD PTR [ebp-0x5dc],esi
   11975:	mov    DWORD PTR [ebp-0x5d8],esi
   1197b:	mov    DWORD PTR [ebp-0x5d4],esi
   11981:	mov    DWORD PTR [ebp-0x5d0],esi
   11987:	mov    DWORD PTR [ebp-0x5cc],eax
   1198d:	mov    DWORD PTR [ebp-0x5c8],eax
   11993:	mov    DWORD PTR [ebp-0x5c4],eax
   11999:	mov    DWORD PTR [ebp-0x5c0],eax
   1199f:	mov    DWORD PTR [ebp-0x5bc],eax
   119a5:	mov    DWORD PTR [ebp-0x5b8],eax
   119ab:	mov    DWORD PTR [ebp-0x5b4],eax
   119b1:	mov    DWORD PTR [ebp-0x5b0],eax
   119b7:	mov    DWORD PTR [ebp-0x5ac],eax
   119bd:	mov    DWORD PTR [ebp-0x5a8],eax
   119c3:	mov    DWORD PTR [ebp-0x5a4],eax
   119c9:	mov    DWORD PTR [ebp-0x5a0],eax
   119cf:	mov    DWORD PTR [ebp-0x59c],eax
   119d5:	mov    DWORD PTR [ebp-0x598],eax
   119db:	mov    DWORD PTR [ebp-0x594],eax
   119e1:	mov    DWORD PTR [ebp-0x590],eax
   119e7:	mov    DWORD PTR [ebp-0x58c],edx
   119ed:	mov    DWORD PTR [ebp-0x588],edx
   119f3:	mov    DWORD PTR [ebp-0x584],edx
   119f9:	mov    DWORD PTR [ebp-0x580],eax
   119ff:	mov    DWORD PTR [ebp-0x57c],ebx
   11a05:	mov    DWORD PTR [ebp-0x578],eax
   11a0b:	mov    DWORD PTR [ebp-0x574],ecx
   11a11:	mov    DWORD PTR [ebp-0x570],ecx
   11a17:	mov    DWORD PTR [ebp-0x56c],edx
   11a1d:	mov    DWORD PTR [ebp-0x568],edx
   11a23:	mov    DWORD PTR [ebp-0x564],edx
   11a29:	mov    DWORD PTR [ebp-0x560],eax
   11a2f:	mov    DWORD PTR [ebp-0x55c],ebx
   11a35:	mov    DWORD PTR [ebp-0x558],eax
   11a3b:	mov    DWORD PTR [ebp-0x554],ecx
   11a41:	mov    DWORD PTR [ebp-0x550],eax
   11a47:	mov    DWORD PTR [ebp-0x54c],eax
   11a4d:	mov    DWORD PTR [ebp-0x548],eax
   11a53:	mov    DWORD PTR [ebp-0x544],eax
   11a59:	mov    DWORD PTR [ebp-0x540],eax
   11a5f:	mov    DWORD PTR [ebp-0x53c],eax
   11a65:	mov    DWORD PTR [ebp-0x538],eax
   11a6b:	mov    DWORD PTR [ebp-0x534],eax
   11a71:	mov    DWORD PTR [ebp-0x530],eax
   11a77:	mov    DWORD PTR [ebp-0x52c],ecx
   11a7d:	mov    DWORD PTR [ebp-0x528],ecx
   11a83:	mov    DWORD PTR [ebp-0x524],ebx
   11a89:	mov    DWORD PTR [ebp-0x520],eax
   11a8f:	mov    DWORD PTR [ebp-0x51c],eax
   11a95:	mov    DWORD PTR [ebp-0x518],eax
   11a9b:	mov    DWORD PTR [ebp-0x514],eax
   11aa1:	mov    DWORD PTR [ebp-0x510],eax
   11aa7:	mov    DWORD PTR [ebp-0x50c],eax
   11aad:	mov    DWORD PTR [ebp-0x508],eax
   11ab3:	mov    DWORD PTR [ebp-0x504],ecx
   11ab9:	mov    DWORD PTR [ebp-0x500],ecx
   11abf:	mov    DWORD PTR [ebp-0x4fc],ecx
   11ac5:	mov    DWORD PTR [ebp-0x4f8],ecx
   11acb:	mov    DWORD PTR [ebp-0x4f4],ecx
   11ad1:	mov    DWORD PTR [ebp-0x4f0],ecx
   11ad7:	mov    DWORD PTR [ebp-0x4ec],edx
   11add:	mov    DWORD PTR [ebp-0x4e8],edx
   11ae3:	mov    DWORD PTR [ebp-0x4e4],edx
   11ae9:	mov    DWORD PTR [ebp-0x4e0],edx
   11aef:	mov    DWORD PTR [ebp-0x4dc],edx
   11af5:	mov    DWORD PTR [ebp-0x4d8],edx
   11afb:	mov    DWORD PTR [ebp-0x4d4],edx
   11b01:	mov    DWORD PTR [ebp-0x4d0],edx
   11b07:	mov    DWORD PTR [ebp-0x4cc],ecx
   11b0d:	mov    DWORD PTR [ebp-0x4c8],ecx
   11b13:	mov    DWORD PTR [ebp-0x4c4],ecx
   11b19:	mov    DWORD PTR [ebp-0x4c0],ecx
   11b1f:	mov    DWORD PTR [ebp-0x4bc],ecx
   11b25:	mov    DWORD PTR [ebp-0x4b8],ecx
   11b2b:	mov    DWORD PTR [ebp-0x4b4],ecx
   11b31:	mov    DWORD PTR [ebp-0x4b0],ecx
   11b37:	mov    DWORD PTR [ebp-0x4ac],ecx
   11b3d:	mov    DWORD PTR [ebp-0x4a8],ecx
   11b43:	mov    DWORD PTR [ebp-0x4a4],ecx
   11b49:	mov    DWORD PTR [ebp-0x4a0],ecx
   11b4f:	mov    DWORD PTR [ebp-0x49c],ecx
   11b55:	mov    DWORD PTR [ebp-0x498],ecx
   11b5b:	mov    DWORD PTR [ebp-0x494],ecx
   11b61:	mov    DWORD PTR [ebp-0x490],ecx
   11b67:	mov    DWORD PTR [ebp-0x48c],ecx
   11b6d:	mov    DWORD PTR [ebp-0x488],ecx
   11b73:	mov    DWORD PTR [ebp-0x484],ecx
   11b79:	mov    DWORD PTR [ebp-0x480],ecx
   11b7f:	mov    DWORD PTR [ebp-0x47c],ecx
   11b85:	mov    DWORD PTR [ebp-0x478],ecx
   11b8b:	mov    DWORD PTR [ebp-0x474],ecx
   11b91:	mov    DWORD PTR [ebp-0x470],ecx
   11b97:	mov    DWORD PTR [ebp-0x46c],ecx
   11b9d:	mov    DWORD PTR [ebp-0x468],ecx
   11ba3:	mov    DWORD PTR [ebp-0x464],ecx
   11ba9:	mov    DWORD PTR [ebp-0x460],ecx
   11baf:	mov    DWORD PTR [ebp-0x45c],ecx
   11bb5:	mov    DWORD PTR [ebp-0x458],ecx
   11bbb:	mov    DWORD PTR [ebp-0x454],ecx
   11bc1:	mov    DWORD PTR [ebp-0x450],ecx
   11bc7:	mov    DWORD PTR [ebp-0x44c],ecx
   11bcd:	mov    DWORD PTR [ebp-0x448],ecx
   11bd3:	mov    DWORD PTR [ebp-0x444],ecx
   11bd9:	mov    DWORD PTR [ebp-0x440],ecx
   11bdf:	mov    DWORD PTR [ebp-0x43c],ecx
   11be5:	mov    DWORD PTR [ebp-0x438],ecx
   11beb:	mov    DWORD PTR [ebp-0x434],ecx
   11bf1:	mov    DWORD PTR [ebp-0x430],ecx
   11bf7:	mov    DWORD PTR [ebp-0x42c],ecx
   11bfd:	mov    DWORD PTR [ebp-0x428],ecx
   11c03:	mov    DWORD PTR [ebp-0x424],ecx
   11c09:	mov    DWORD PTR [ebp-0x420],ecx
   11c0f:	mov    DWORD PTR [ebp-0x41c],ecx
   11c15:	mov    DWORD PTR [ebp-0x418],ecx
   11c1b:	mov    DWORD PTR [ebp-0x414],ecx
   11c21:	mov    DWORD PTR [ebp-0x410],ecx
   11c27:	mov    esi,DWORD PTR [ebp-0xc]
   11c2a:	mov    bl,BYTE PTR [esi]
   11c2c:	mov    esi,DWORD PTR [ebp-0x8]
   11c2f:	inc    DWORD PTR [ebp-0xc]
   11c32:	mov    BYTE PTR [ebp-0x1],bl
   11c35:	movzx  ebx,bl
   11c38:	or     esi,DWORD PTR [ebp+ebx*4-0x40c]
   11c3f:	mov    DWORD PTR [ebp-0x8],esi
   11c42:	test   esi,0x2000
   11c48:	mov    esi,DWORD PTR [ebp-0xc]
   11c4b:	je     0x11c67
   11c4d:	mov    bl,BYTE PTR [esi]
   11c4f:	and    bl,0x38
   11c52:	neg    bl
   11c54:	sbb    ebx,ebx
   11c56:	and    ebx,0xfffff000
   11c5c:	add    ebx,0x1800
   11c62:	mov    DWORD PTR [ebp-0x8],ebx
   11c65:	jmp    0x11c6a
   11c67:	mov    ebx,DWORD PTR [ebp-0x8]
   11c6a:	test   bh,0x40
   11c6d:	je     0x11c85
   11c6f:	mov    bl,BYTE PTR [esi]
   11c71:	mov    BYTE PTR [ebp-0x1],bl
   11c74:	movzx  ebx,bl
   11c77:	mov    ebx,DWORD PTR [ebp+ebx*4-0x80c]
   11c7e:	inc    esi
   11c7f:	mov    DWORD PTR [ebp-0xc],esi
   11c82:	mov    DWORD PTR [ebp-0x8],ebx
   11c85:	cmp    DWORD PTR [ebp-0x8],ecx
   11c88:	je     0x11c9a
   11c8a:	mov    ebx,DWORD PTR [ebp-0x8]
   11c8d:	test   bl,0x1
   11c90:	je     0x11ca4
   11c92:	and    ebx,0xfffffffe
   11c95:	mov    DWORD PTR [ebp-0x8],ebx
   11c98:	jmp    0x11c27
   11c9a:	mov    eax,DWORD PTR [ebp+0xc]
   11c9d:	mov    DWORD PTR [eax],ecx
   11c9f:	jmp    0x11d74
   11ca4:	test   edi,ebx
   11ca6:	je     0x11cb6
   11ca8:	test   BYTE PTR [ebp-0x1],0x1
   11cac:	je     0x11cb3
   11cae:	or     ebx,0x8
   11cb1:	jmp    0x11cb6
   11cb3:	or     ebx,0x10
   11cb6:	test   eax,ebx
   11cb8:	mov    edi,0x200
   11cbd:	je     0x11d1e
   11cbf:	mov    al,BYTE PTR [esi]
   11cc1:	mov    cl,al
   11cc3:	and    cl,0xc0
   11cc6:	inc    esi
   11cc7:	and    al,0x7
   11cc9:	cmp    cl,0xc0
   11ccc:	je     0x11d1e
   11cce:	test   bl,0x4
   11cd1:	je     0x11cf1
   11cd3:	cmp    cl,dl
   11cd5:	jne    0x11cdd
   11cd7:	cmp    al,0x6
   11cd9:	jne    0x11d1e
   11cdb:	or     ebx,edi
   11cdd:	cmp    cl,0x40
   11ce0:	jne    0x11ce8
   11ce2:	or     ebx,0x100
   11ce8:	cmp    cl,0x80
   11ceb:	jne    0x11d1e
   11ced:	or     ebx,edi
   11cef:	jmp    0x11d1e
   11cf1:	cmp    cl,0x40
   11cf4:	jne    0x11cfc
   11cf6:	or     ebx,0x100
   11cfc:	cmp    cl,0x80
   11cff:	jne    0x11d07
   11d01:	or     ebx,0x400
   11d07:	cmp    al,0x4
   11d09:	jne    0x11d10
   11d0b:	mov    al,BYTE PTR [esi]
   11d0d:	and    al,0x7
   11d0f:	inc    esi
   11d10:	cmp    al,0x5
   11d12:	jne    0x11d1e
   11d14:	cmp    cl,dl
   11d16:	jne    0x11d1e
   11d18:	or     ebx,0x400
   11d1e:	test   bl,bl
   11d20:	jns    0x11d31
   11d22:	test   bl,0x4
   11d25:	je     0x11d2b
   11d27:	or     ebx,edi
   11d29:	jmp    0x11d31
   11d2b:	or     ebx,0x400
   11d31:	test   bl,0x8
   11d34:	je     0x11d43
   11d36:	test   bl,0x2
   11d39:	je     0x11d40
   11d3b:	or     ebx,0x20
   11d3e:	jmp    0x11d43
   11d40:	or     ebx,0x40
   11d43:	test   bh,0x1
   11d46:	je     0x11d49
   11d48:	inc    esi
   11d49:	test   edi,ebx
   11d4b:	je     0x11d4f
   11d4d:	inc    esi
   11d4e:	inc    esi
   11d4f:	test   bh,0x4
   11d52:	je     0x11d57
   11d54:	add    esi,0x4
   11d57:	test   bl,0x10
   11d5a:	je     0x11d5d
   11d5c:	inc    esi
   11d5d:	test   bl,0x20
   11d60:	je     0x11d64
   11d62:	inc    esi
   11d63:	inc    esi
   11d64:	test   bl,0x40
   11d67:	je     0x11d6c
   11d69:	add    esi,0x4
   11d6c:	sub    esi,DWORD PTR [ebp+0x8]
   11d6f:	mov    eax,DWORD PTR [ebp+0xc]
   11d72:	mov    DWORD PTR [eax],esi
   11d74:	pop    edi
   11d75:	pop    esi
   11d76:	pop    ebx
   11d77:	leave  
   11d78:	ret    0x8
   11d7b:	int3   
   11d7c:	push   0x8
   11d7e:	push   0x180e8
   11d83:	call   0x17d50
   11d88:	and    DWORD PTR [ebp-0x4],0x0
   11d8c:	mov    eax,DWORD PTR [ebp+0x10]
   11d8f:	shr    eax,1
   11d91:	push   eax
   11d92:	push   DWORD PTR [ebp+0xc]
   11d95:	push   DWORD PTR [ebp+0x8]
   11d98:	call   DWORD PTR ds:0x180dc
   11d9e:	add    esp,0xc
   11da1:	neg    eax
   11da3:	sbb    al,al
   11da5:	inc    al
   11da7:	or     DWORD PTR [ebp-0x4],0xffffffff
   11dab:	jmp    0x11dba
   11dad:	xor    eax,eax
   11daf:	inc    eax
   11db0:	ret    
   11db1:	mov    esp,DWORD PTR [ebp-0x18]
   11db4:	or     DWORD PTR [ebp-0x4],0xffffffff
   11db8:	xor    al,al
   11dba:	call   0x17d8b
   11dbf:	ret    0xc
   11dc2:	dec    edi
   11dc3:	bound  ecx,QWORD PTR [edi+0x70]
   11dc6:	outs   dx,BYTE PTR gs:[esi]
   11dc8:	dec    edi
   11dc9:	bound  ebp,QWORD PTR [edx+0x65]
   11dcc:	arpl   WORD PTR [edx+eax*2+0x79],si
   11dd0:	dec    esi
   11dd1:	popa   
   11dd2:	ins    DWORD PTR es:[edi],dx
   11dd3:	and    BYTE PTR gs:[ebp+0x52],al
   11dd7:	push   edx
   11dd8:	dec    edi
   11dd9:	push   edx
   11dda:	and    BYTE PTR [edx],bh
   11ddc:	and    BYTE PTR [eax],dh
   11dde:	js     0x11e05
   11de0:	cmp    BYTE PTR cs:[eax+0xa],bh
   11de4:	add    BYTE PTR [eax],al
   11de6:	dec    edi
   11de7:	bound  edx,QWORD PTR [edx+0x65]
   11dea:	data16 gs jb 0x11e53
   11dee:	outs   dx,BYTE PTR ds:[esi]
   11def:	arpl   WORD PTR [ebp+0x4f],sp
   11df2:	bound  ebp,QWORD PTR [edx+0x65]
   11df5:	arpl   WORD PTR [edx+eax*2+0x79],si
   11df9:	dec    eax
   11dfa:	popa   
   11dfb:	outs   dx,BYTE PTR ds:[esi]
   11dfc:	fs ins BYTE PTR es:[edi],dx
   11dfe:	and    BYTE PTR gs:[ebp+0x52],al
   11e02:	push   edx
   11e03:	dec    edi
   11e04:	push   edx
   11e05:	and    BYTE PTR [edx],bh
   11e07:	and    BYTE PTR [eax],dh
   11e09:	js     0x11e30
   11e0b:	cmp    BYTE PTR cs:[eax+0xa],bh
   11e0f:	add    BYTE PTR [eax],al
   11e11:	add    BYTE PTR [eax+0x69],cl
   11e14:	fs gs dec edi
   11e17:	bound  ebp,QWORD PTR [edx+0x65]
   11e1a:	arpl   WORD PTR [eax+ebp*1+0x29],si
   11e1e:	and    BYTE PTR [edx],bh
   11e20:	and    BYTE PTR [edi+0x62],cl
   11e23:	push   0x65
   11e25:	arpl   WORD PTR [eax+eiz*1+0x64],si
   11e29:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
   11e30:	jns    0x11e52
   11e32:	outs   dx,BYTE PTR gs:[esi]
   11e34:	je     0x11ea8
   11e36:	jns    0x11e58
   11e38:	jne    0x11ea8
   11e3a:	ins    BYTE PTR es:[edi],dx
   11e3b:	imul   ebp,DWORD PTR [esi+0x6b],0xa6465
   11e42:	dec    eax
   11e43:	imul   esp,DWORD PTR [ebp+eiz*2+0x4f],0x63656a62
   11e4b:	je     0x11e75
   11e4d:	sub    DWORD PTR [eax],esp
   11e4f:	cmp    ah,BYTE PTR [eax]
   11e51:	dec    edi
   11e52:	bound  ebp,QWORD PTR [edx+0x65]
   11e55:	arpl   WORD PTR [eax+eiz*1+0x64],si
   11e59:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
   11e60:	jns    0x11e82
   11e62:	outs   dx,BYTE PTR gs:[esi]
   11e64:	je     0x11ed8
   11e66:	jns    0x11e88
   11e68:	jne    0x11ed8
   11e6a:	ins    BYTE PTR es:[edi],dx
   11e6b:	imul   ebp,DWORD PTR [esi+0x6b],0xa6465
   11e72:	push   ebp
   11e73:	mov    ebp,esp
   11e75:	sub    esp,0x30
   11e78:	push   ebx
   11e79:	push   DWORD PTR [ebp+0x8]
   11e7c:	xor    ebx,ebx
   11e7e:	lea    eax,[ebp-0x18]
   11e81:	push   eax
   11e82:	mov    DWORD PTR [ebp-0x10],ebx
   11e85:	mov    DWORD PTR [ebp-0xc],ebx
   11e88:	mov    BYTE PTR [ebp-0x1],bl
   11e8b:	call   DWORD PTR ds:0x1801c
   11e91:	lea    eax,[ebp-0x18]
   11e94:	mov    DWORD PTR [ebp-0x28],eax
   11e97:	lea    eax,[ebp-0x10]
   11e9a:	push   eax
   11e9b:	push   ebx
   11e9c:	push   0x80000000
   11ea1:	push   ebx
   11ea2:	push   ebx
   11ea3:	push   ebx
   11ea4:	lea    eax,[ebp-0x30]
   11ea7:	push   eax
   11ea8:	mov    DWORD PTR [ebp-0x30],0x18
   11eaf:	mov    DWORD PTR [ebp-0x2c],ebx
   11eb2:	mov    DWORD PTR [ebp-0x24],0x40
   11eb9:	mov    DWORD PTR [ebp-0x20],ebx
   11ebc:	mov    DWORD PTR [ebp-0x1c],ebx
   11ebf:	call   DWORD PTR ds:0x18018
   11ec5:	cmp    eax,ebx
   11ec7:	jge    0x11ed1
   11ec9:	push   eax
   11eca:	push   0x11dc2
   11ecf:	jmp    0x11eec
   11ed1:	push   ebx
   11ed2:	lea    eax,[ebp-0xc]
   11ed5:	push   eax
   11ed6:	push   ebx
   11ed7:	push   ebx
   11ed8:	push   ebx
   11ed9:	push   DWORD PTR [ebp-0x10]
   11edc:	call   DWORD PTR ds:0x18014
   11ee2:	cmp    eax,ebx
   11ee4:	jge    0x11ef8
   11ee6:	push   eax
   11ee7:	push   0x11de6
   11eec:	call   0x17da2
   11ef1:	pop    ecx
   11ef2:	pop    ecx
   11ef3:	jmp    0x11fea
   11ef8:	mov    cl,0x1
   11efa:	call   DWORD PTR ds:0x18004
   11f00:	push   esi
   11f01:	mov    BYTE PTR [ebp+0xb],al
   11f04:	mov    DWORD PTR [ebp-0x8],ebx
   11f07:	push   edi
   11f08:	cmp    BYTE PTR [ebp-0x1],bl
   11f0b:	jne    0x11fdf
   11f11:	mov    eax,DWORD PTR [ebp-0xc]
   11f14:	mov    ecx,DWORD PTR [ebp-0x8]
   11f17:	mov    esi,DWORD PTR [eax+ecx*4]
   11f1a:	cmp    esi,ebx
   11f1c:	je     0x11faf
   11f22:	mov    eax,DWORD PTR [esi+0x4]
   11f25:	mov    cl,BYTE PTR [eax-0xc]
   11f28:	sub    eax,0x18
   11f2b:	cmp    cl,bl
   11f2d:	je     0x11f94
   11f2f:	movzx  ecx,cl
   11f32:	sub    eax,ecx
   11f34:	je     0x11f94
   11f36:	mov    ecx,DWORD PTR [eax+0x4]
   11f39:	mov    eax,DWORD PTR [eax+0x8]
   11f3c:	movzx  ecx,cx
   11f3f:	push   ecx
   11f40:	push   DWORD PTR [ebp+0xc]
   11f43:	push   eax
   11f44:	call   0x11d7c
   11f49:	test   al,al
   11f4b:	je     0x11f94
   11f4d:	mov    ecx,DWORD PTR [ebp-0x8]
   11f50:	mov    eax,DWORD PTR [ebp-0xc]
   11f53:	shl    ecx,0x2
   11f56:	lea    edx,[ecx+eax*1]
   11f59:	mov    eax,DWORD PTR [edx]
   11f5b:	mov    eax,DWORD PTR [eax]
   11f5d:	mov    DWORD PTR [edx],eax
   11f5f:	mov    edx,DWORD PTR [ebp-0xc]
   11f62:	mov    ecx,DWORD PTR [ecx+edx*1]
   11f65:	jmp    0x11fc6
   11f67:	mov    eax,DWORD PTR [edi+0x4]
   11f6a:	mov    cl,BYTE PTR [eax-0xc]
   11f6d:	sub    eax,0x18
   11f70:	cmp    cl,bl
   11f72:	je     0x11f92
   11f74:	movzx  ecx,cl
   11f77:	sub    eax,ecx
   11f79:	je     0x11f92
   11f7b:	mov    ecx,DWORD PTR [eax+0x4]
   11f7e:	mov    eax,DWORD PTR [eax+0x8]
   11f81:	movzx  ecx,cx
   11f84:	push   ecx
   11f85:	push   DWORD PTR [ebp+0xc]
   11f88:	push   eax
   11f89:	call   0x11d7c
   11f8e:	test   al,al
   11f90:	jne    0x11f9c
   11f92:	mov    esi,DWORD PTR [esi]
   11f94:	mov    edi,DWORD PTR [esi]
   11f96:	cmp    edi,ebx
   11f98:	jne    0x11f67
   11f9a:	jmp    0x11faf
   11f9c:	mov    eax,DWORD PTR [edi]
   11f9e:	push   0x11e12
   11fa3:	mov    DWORD PTR [esi],eax
   11fa5:	call   0x17da2
   11faa:	pop    ecx
   11fab:	mov    BYTE PTR [ebp-0x1],0x1
   11faf:	inc    DWORD PTR [ebp-0x8]
   11fb2:	cmp    DWORD PTR [ebp-0x8],0x25
   11fb6:	jb     0x11f08
   11fbc:	jmp    0x11fdf
   11fbe:	mov    edx,DWORD PTR [eax]
   11fc0:	mov    DWORD PTR [ecx],edx
   11fc2:	mov    eax,DWORD PTR [eax]
   11fc4:	mov    ecx,edx
   11fc6:	cmp    eax,ebx
   11fc8:	jne    0x11fbe
   11fca:	cmp    ecx,ebx
   11fcc:	je     0x11fd0
   11fce:	mov    DWORD PTR [ecx],ebx
   11fd0:	push   0x11e42
   11fd5:	call   0x17da2
   11fda:	pop    ecx
   11fdb:	mov    BYTE PTR [ebp-0x1],0x1
   11fdf:	mov    cl,BYTE PTR [ebp+0xb]
   11fe2:	call   DWORD PTR ds:0x18000
   11fe8:	pop    edi
   11fe9:	pop    esi
   11fea:	mov    ecx,DWORD PTR [ebp-0xc]
   11fed:	cmp    ecx,ebx
   11fef:	je     0x11ff7
   11ff1:	call   DWORD PTR ds:0x1800c
   11ff7:	cmp    DWORD PTR [ebp-0x10],ebx
   11ffa:	pop    ebx
   11ffb:	je     0x12006
   11ffd:	push   DWORD PTR [ebp-0x10]
   12000:	call   DWORD PTR ds:0x18070
   12006:	mov    al,BYTE PTR [ebp-0x1]
   12009:	leave  
   1200a:	ret    0x8
   1200d:	int3   
   1200e:	push   esi
   1200f:	push   edi
   12010:	mov    edi,0x18180
   12015:	push   edi
   12016:	mov    esi,ecx
   12018:	call   0x1753a
   1201d:	push   edi
   1201e:	lea    ecx,[esi+0x4]
   12021:	call   0x1753a
   12026:	push   edi
   12027:	lea    ecx,[esi+0x8]
   1202a:	call   0x1753a
   1202f:	and    DWORD PTR [esi+0x10],0x0
   12033:	and    DWORD PTR [esi+0x14],0x0
   12037:	pop    edi
   12038:	mov    DWORD PTR [esi+0xc],0x2
   1203f:	mov    eax,esi
   12041:	pop    esi
   12042:	ret    
   12043:	int3   
   12044:	push   esi
   12045:	push   0x20736649
   1204a:	push   DWORD PTR [esp+0xc]
   1204e:	push   0x1
   12050:	call   DWORD PTR ds:0x18024
   12056:	mov    esi,eax
   12058:	test   esi,esi
   1205a:	jne    0x12067
   1205c:	push   0xc000009a
   12061:	call   DWORD PTR ds:0x18020
   12067:	mov    eax,esi
   12069:	pop    esi
   1206a:	ret    
   1206b:	int3   
   1206c:	cmp    DWORD PTR [esp+0x4],0x0
   12071:	je     0x1207f
   12073:	push   0x0
   12075:	push   DWORD PTR [esp+0x8]
   12079:	call   DWORD PTR ds:0x18028
   1207f:	ret    
   12080:	inc    edi
   12081:	gs je  0x120d4
   12084:	jb     0x120f5
   12086:	arpl   WORD PTR [ebp+0x73],sp
   12089:	jae    0x120d4
   1208b:	ins    DWORD PTR es:[edi],dx
   1208c:	popa   
   1208d:	addr16 gs dec esi
   12090:	popa   
   12091:	ins    DWORD PTR es:[edi],dx
   12092:	and    BYTE PTR gs:[ebx+0x74],dh
   12096:	popa   
   12097:	je     0x1210e
   12099:	jae    0x120bb
   1209b:	xor    BYTE PTR [eax+0x25],bh
   1209e:	js     0x120c0
   120a0:	or     al,BYTE PTR [eax]
   120a2:	add    BYTE PTR [eax],al
   120a4:	inc    edi
   120a5:	gs je  0x120f8
   120a8:	jb     0x12119
   120aa:	arpl   WORD PTR [ebp+0x73],sp
   120ad:	jae    0x120f8
   120af:	ins    DWORD PTR es:[edi],dx
   120b0:	popa   
   120b1:	addr16 gs dec esi
   120b4:	popa   
   120b5:	ins    DWORD PTR es:[edi],dx
   120b6:	and    BYTE PTR gs:[ebp+0x72],ah
   120ba:	jb     0x1212b
   120bc:	jb     0x120de
   120be:	xor    BYTE PTR [eax+0x25],bh
   120c1:	js     0x120e3
   120c3:	or     al,BYTE PTR [eax]
   120c5:	int3   
   120c6:	push   ebp
   120c7:	mov    ebp,esp
   120c9:	push   ecx
   120ca:	push   ecx
   120cb:	mov    eax,ds:0x1a0cc
   120d0:	push   esi
   120d1:	mov    esi,DWORD PTR ds:0x18030
   120d7:	push   edi
   120d8:	mov    DWORD PTR [ebp-0x4],eax
   120db:	lea    eax,[ebp-0x8]
   120de:	push   eax
   120df:	push   0x0
   120e1:	push   0x0
   120e3:	push   0x1b
   120e5:	push   DWORD PTR [ebp+0x8]
   120e8:	call   esi
   120ea:	mov    edi,eax
   120ec:	push   edi
   120ed:	push   0x12080
   120f2:	call   0x17da2
   120f7:	cmp    edi,0xc0000004
   120fd:	pop    ecx
   120fe:	pop    ecx
   120ff:	je     0x12112
   12101:	push   edi
   12102:	push   0x120a4
   12107:	call   0x17da2
   1210c:	pop    ecx
   1210d:	pop    ecx
   1210e:	mov    eax,edi
   12110:	jmp    0x12172
   12112:	mov    edx,DWORD PTR [ebp+0xc]
   12115:	mov    ecx,DWORD PTR [ebp-0x8]
   12118:	movzx  edi,WORD PTR [edx+0x2]
   1211c:	lea    eax,[ecx-0x8]
   1211f:	cmp    edi,eax
   12121:	jae    0x1212d
   12123:	mov    WORD PTR [edx],ax
   12126:	mov    eax,0x80000005
   1212b:	jmp    0x12172
   1212d:	push   0x20736649
   12132:	push   ecx
   12133:	push   0x0
   12135:	call   DWORD PTR ds:0x18024
   1213b:	mov    edi,eax
   1213d:	test   edi,edi
   1213f:	jne    0x12148
   12141:	mov    eax,0xc000009a
   12146:	jmp    0x12172
   12148:	lea    eax,[ebp-0x8]
   1214b:	push   eax
   1214c:	push   DWORD PTR [ebp-0x8]
   1214f:	push   edi
   12150:	push   0x1b
   12152:	push   DWORD PTR [ebp+0x8]
   12155:	call   esi
   12157:	mov    esi,eax
   12159:	test   esi,esi
   1215b:	jl     0x12167
   1215d:	push   edi
   1215e:	push   DWORD PTR [ebp+0xc]
   12161:	call   DWORD PTR ds:0x1802c
   12167:	push   0x0
   12169:	push   edi
   1216a:	call   DWORD PTR ds:0x18028
   12170:	mov    eax,esi
   12172:	mov    ecx,DWORD PTR [ebp-0x4]
   12175:	pop    edi
   12176:	pop    esi
   12177:	call   0x17d41
   1217c:	leave  
   1217d:	ret    0x8
   12180:	push   ebp
   12181:	mov    ebp,esp
   12183:	sub    esp,0x18
   12186:	push   0x0
   12188:	push   0x18
   1218a:	lea    eax,[ebp-0x18]
   1218d:	push   eax
   1218e:	push   0x0
   12190:	push   DWORD PTR [ebp+0x8]
   12193:	call   DWORD PTR ds:0x18030
   12199:	test   eax,eax
   1219b:	jl     0x121a2
   1219d:	mov    eax,DWORD PTR [ebp-0x8]
   121a0:	jmp    0x121a4
   121a2:	xor    eax,eax
   121a4:	leave  
   121a5:	ret    0x4
   121a8:	push   esi
   121a9:	mov    esi,DWORD PTR [esp+0x8]
   121ad:	push   esi
   121ae:	call   DWORD PTR ds:0x18034
   121b4:	cmp    eax,0xc
   121b7:	pop    ecx
   121b8:	jb     0x12282
   121be:	lea    eax,[esi+eax*2-0x18]
   121c2:	mov    cx,WORD PTR [eax]
   121c5:	cmp    cx,0x69
   121c9:	je     0x121d5
   121cb:	cmp    cx,0x49
   121cf:	jne    0x12282
   121d5:	mov    cx,WORD PTR [eax+0x2]
   121d9:	push   0x45
   121db:	pop    esi
   121dc:	push   0x65
   121de:	pop    edx
   121df:	cmp    cx,dx
   121e2:	je     0x121ed
   121e4:	cmp    cx,si
   121e7:	jne    0x12282
   121ed:	mov    cx,WORD PTR [eax+0x4]
   121f1:	cmp    cx,0x78
   121f5:	je     0x12201
   121f7:	cmp    cx,0x58
   121fb:	jne    0x12282
   12201:	mov    cx,WORD PTR [eax+0x6]
   12205:	cmp    cx,0x70
   12209:	je     0x12211
   1220b:	cmp    cx,0x50
   1220f:	jne    0x12282
   12211:	mov    cx,WORD PTR [eax+0x8]
   12215:	cmp    cx,0x6c
   12219:	je     0x12221
   1221b:	cmp    cx,0x4c
   1221f:	jne    0x12282
   12221:	mov    cx,WORD PTR [eax+0xa]
   12225:	cmp    cx,0x6f
   12229:	je     0x12231
   1222b:	cmp    cx,0x4f
   1222f:	jne    0x12282
   12231:	mov    cx,WORD PTR [eax+0xc]
   12235:	cmp    cx,0x72
   12239:	je     0x12241
   1223b:	cmp    cx,0x52
   1223f:	jne    0x12282
   12241:	mov    cx,WORD PTR [eax+0xe]
   12245:	cmp    cx,dx
   12248:	je     0x1224f
   1224a:	cmp    cx,si
   1224d:	jne    0x12282
   1224f:	cmp    WORD PTR [eax+0x10],0x2e
   12254:	jne    0x12282
   12256:	mov    cx,WORD PTR [eax+0x12]
   1225a:	cmp    cx,dx
   1225d:	je     0x12264
   1225f:	cmp    cx,si
   12262:	jne    0x12282
   12264:	mov    cx,WORD PTR [eax+0x14]
   12268:	cmp    cx,0x78
   1226c:	je     0x12274
   1226e:	cmp    cx,0x58
   12272:	jne    0x12282
   12274:	mov    ax,WORD PTR [eax+0x16]
   12278:	cmp    ax,dx
   1227b:	je     0x12286
   1227d:	cmp    ax,si
   12280:	je     0x12286
   12282:	xor    al,al
   12284:	jmp    0x12288
   12286:	mov    al,0x1
   12288:	pop    esi
   12289:	ret    0x4
   1228c:	push   esi
   1228d:	mov    esi,DWORD PTR [esp+0x8]
   12291:	push   esi
   12292:	call   DWORD PTR ds:0x18034
   12298:	cmp    eax,0xb
   1229b:	pop    ecx
   1229c:	jb     0x12354
   122a2:	lea    eax,[esi+eax*2-0x16]
   122a6:	mov    cx,WORD PTR [eax]
   122a9:	cmp    cx,0x66
   122ad:	je     0x122b9
   122af:	cmp    cx,0x46
   122b3:	jne    0x12354
   122b9:	mov    cx,WORD PTR [eax+0x2]
   122bd:	cmp    cx,0x69
   122c1:	je     0x122cd
   122c3:	cmp    cx,0x49
   122c7:	jne    0x12354
   122cd:	mov    cx,WORD PTR [eax+0x4]
   122d1:	cmp    cx,0x72
   122d5:	je     0x122dd
   122d7:	cmp    cx,0x52
   122db:	jne    0x12354
   122dd:	mov    cx,WORD PTR [eax+0x6]
   122e1:	cmp    cx,0x65
   122e5:	je     0x122ed
   122e7:	cmp    cx,0x45
   122eb:	jne    0x12354
   122ed:	mov    cx,WORD PTR [eax+0x8]
   122f1:	cmp    cx,0x66
   122f5:	je     0x122fd
   122f7:	cmp    cx,0x46
   122fb:	jne    0x12354
   122fd:	mov    cx,WORD PTR [eax+0xa]
   12301:	cmp    cx,0x6f
   12305:	je     0x1230d
   12307:	cmp    cx,0x4f
   1230b:	jne    0x12354
   1230d:	mov    cx,WORD PTR [eax+0xc]
   12311:	cmp    cx,0x78
   12315:	je     0x1231d
   12317:	cmp    cx,0x58
   1231b:	jne    0x12354
   1231d:	cmp    WORD PTR [eax+0xe],0x2e
   12322:	jne    0x12354
   12324:	mov    cx,WORD PTR [eax+0x10]
   12328:	cmp    cx,0x65
   1232c:	je     0x12334
   1232e:	cmp    cx,0x45
   12332:	jne    0x12354
   12334:	mov    cx,WORD PTR [eax+0x12]
   12338:	cmp    cx,0x78
   1233c:	je     0x12344
   1233e:	cmp    cx,0x58
   12342:	jne    0x12354
   12344:	mov    ax,WORD PTR [eax+0x14]
   12348:	cmp    ax,0x65
   1234c:	je     0x12358
   1234e:	cmp    ax,0x45
   12352:	je     0x12358
   12354:	xor    al,al
   12356:	jmp    0x1235a
   12358:	mov    al,0x1
   1235a:	pop    esi
   1235b:	ret    0x4
   1235e:	push   esi
   1235f:	mov    esi,DWORD PTR [esp+0x8]
   12363:	push   esi
   12364:	call   DWORD PTR ds:0x18034
   1236a:	cmp    eax,0x9
   1236d:	pop    ecx
   1236e:	jb     0x123fe
   12374:	lea    eax,[esi+eax*2-0x12]
   12378:	mov    cx,WORD PTR [eax]
   1237b:	cmp    cx,0x6d
   1237f:	je     0x12387
   12381:	cmp    cx,0x4d
   12385:	jne    0x123fe
   12387:	mov    cx,WORD PTR [eax+0x2]
   1238b:	cmp    cx,0x73
   1238f:	je     0x12397
   12391:	cmp    cx,0x53
   12395:	jne    0x123fe
   12397:	mov    cx,WORD PTR [eax+0x4]
   1239b:	cmp    cx,0x68
   1239f:	je     0x123a7
   123a1:	cmp    cx,0x48
   123a5:	jne    0x123fe
   123a7:	mov    cx,WORD PTR [eax+0x6]
   123ab:	cmp    cx,0x74
   123af:	je     0x123b7
   123b1:	cmp    cx,0x54
   123b5:	jne    0x123fe
   123b7:	mov    cx,WORD PTR [eax+0x8]
   123bb:	cmp    cx,0x61
   123bf:	je     0x123c7
   123c1:	cmp    cx,0x41
   123c5:	jne    0x123fe
   123c7:	cmp    WORD PTR [eax+0xa],0x2e
   123cc:	jne    0x123fe
   123ce:	mov    cx,WORD PTR [eax+0xc]
   123d2:	cmp    cx,0x65
   123d6:	je     0x123de
   123d8:	cmp    cx,0x45
   123dc:	jne    0x123fe
   123de:	mov    cx,WORD PTR [eax+0xe]
   123e2:	cmp    cx,0x78
   123e6:	je     0x123ee
   123e8:	cmp    cx,0x58
   123ec:	jne    0x123fe
   123ee:	mov    ax,WORD PTR [eax+0x10]
   123f2:	cmp    ax,0x65
   123f6:	je     0x12402
   123f8:	cmp    ax,0x45
   123fc:	je     0x12402
   123fe:	xor    al,al
   12400:	jmp    0x12404
   12402:	mov    al,0x1
   12404:	pop    esi
   12405:	ret    0x4
   12408:	push   ebp
   12409:	mov    ebp,esp
   1240b:	sub    esp,0x10
   1240e:	and    WORD PTR [ebp-0x8],0x0
   12413:	push   esi
   12414:	push   edi
   12415:	xor    eax,eax
   12417:	lea    edi,[ebp-0x6]
   1241a:	stos   DWORD PTR es:[edi],eax
   1241b:	stos   WORD PTR es:[edi],ax
   1241d:	mov    eax,DWORD PTR [ebp+0xc]
   12420:	push   eax
   12421:	mov    DWORD PTR [ebp-0x4],eax
   12424:	call   DWORD PTR ds:0x18034
   1242a:	mov    esi,DWORD PTR [ebp+0x8]
   1242d:	mov    dx,WORD PTR [esi]
   12430:	pop    ecx
   12431:	mov    ecx,eax
   12433:	shl    ecx,1
   12435:	cmp    dx,cx
   12438:	mov    WORD PTR [ebp-0x8],cx
   1243c:	mov    WORD PTR [ebp-0x6],cx
   12440:	jb     0x1247f
   12442:	xor    eax,eax
   12444:	lea    edi,[ebp-0xe]
   12447:	stos   DWORD PTR es:[edi],eax
   12448:	stos   WORD PTR es:[edi],ax
   1244a:	mov    WORD PTR [ebp-0x10],cx
   1244e:	mov    WORD PTR [ebp-0xe],cx
   12452:	movzx  eax,dx
   12455:	movzx  ecx,cx
   12458:	sub    eax,ecx
   1245a:	mov    ecx,DWORD PTR [esi+0x4]
   1245d:	cdq    
   1245e:	sub    eax,edx
   12460:	sar    eax,1
   12462:	lea    eax,[ecx+eax*2]
   12465:	mov    DWORD PTR [ebp-0xc],eax
   12468:	push   0x1
   1246a:	lea    eax,[ebp-0x8]
   1246d:	push   eax
   1246e:	lea    eax,[ebp-0x10]
   12471:	push   eax
   12472:	call   DWORD PTR ds:0x18038
   12478:	neg    eax
   1247a:	sbb    eax,eax
   1247c:	inc    eax
   1247d:	jmp    0x12481
   1247f:	xor    al,al
   12481:	pop    edi
   12482:	pop    esi
   12483:	leave  
   12484:	ret    0x8
   12487:	int3   
   12488:	dec    ebx
   12489:	gs push edi
   1248b:	popa   
   1248c:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   12494:	gs js  0x124e6
   12497:	bound  ebp,QWORD PTR [edx+0x65]
   1249a:	arpl   WORD PTR [eax+ebp*1+0x29],si
   1249e:	and    BYTE PTR [ebp+0x52],al
   124a1:	push   edx
   124a2:	dec    edi
   124a3:	push   edx
   124a4:	and    BYTE PTR [edx],bh
   124a6:	and    BYTE PTR [eax],dh
   124a8:	js     0x124cf
   124aa:	cmp    BYTE PTR cs:[eax+0xa],bh
   124ae:	add    ah,cl
   124b0:	push   ebx
   124b1:	push   esi
   124b2:	xor    esi,esi
   124b4:	push   esi
   124b5:	push   esi
   124b6:	push   esi
   124b7:	push   esi
   124b8:	mov    ebx,0x1a0d0
   124bd:	push   ebx
   124be:	call   DWORD PTR ds:0x18040
   124c4:	cmp    eax,esi
   124c6:	jge    0x124d9
   124c8:	push   eax
   124c9:	push   0x12488
   124ce:	call   0x17da2
   124d3:	pop    ecx
   124d4:	pop    ecx
   124d5:	xor    al,al
   124d7:	jmp    0x124fd
   124d9:	mov    eax,DWORD PTR [esp+0xc]
   124dd:	push   edi
   124de:	mov    edi,DWORD PTR [esp+0x14]
   124e2:	push   0x5
   124e4:	pop    ecx
   124e5:	lea    esi,[eax+eax*4]
   124e8:	push   0x0
   124ea:	lea    esi,[esi*4+0x1a1c8]
   124f1:	push   ebx
   124f2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   124f4:	call   DWORD PTR ds:0x1803c
   124fa:	mov    al,0x1
   124fc:	pop    edi
   124fd:	pop    esi
   124fe:	pop    ebx
   124ff:	ret    0x8
   12502:	dec    ebx
   12503:	gs push edi
   12505:	popa   
   12506:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   1250e:	gs js  0x12560
   12511:	bound  ebp,QWORD PTR [edx+0x65]
   12514:	arpl   WORD PTR [eax+ebp*1+0x29],si
   12518:	and    BYTE PTR [ebp+0x52],al
   1251b:	push   edx
   1251c:	dec    edi
   1251d:	push   edx
   1251e:	and    BYTE PTR [edx],bh
   12520:	and    BYTE PTR [eax],dh
   12522:	js     0x12549
   12524:	cmp    BYTE PTR cs:[eax+0xa],bh
   12528:	add    ah,cl
   1252a:	push   ebx
   1252b:	push   esi
   1252c:	xor    esi,esi
   1252e:	push   esi
   1252f:	push   esi
   12530:	push   esi
   12531:	push   esi
   12532:	mov    ebx,0x1a0d0
   12537:	push   ebx
   12538:	call   DWORD PTR ds:0x18040
   1253e:	cmp    eax,esi
   12540:	jge    0x12551
   12542:	push   eax
   12543:	push   0x12502
   12548:	call   0x17da2
   1254d:	pop    ecx
   1254e:	pop    ecx
   1254f:	jmp    0x12573
   12551:	mov    eax,DWORD PTR [esp+0xc]
   12555:	mov    esi,DWORD PTR [esp+0x10]
   12559:	push   edi
   1255a:	push   0x5
   1255c:	pop    ecx
   1255d:	lea    edi,[eax+eax*4]
   12560:	push   0x0
   12562:	lea    edi,[edi*4+0x1a1c8]
   12569:	push   ebx
   1256a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1256c:	call   DWORD PTR ds:0x1803c
   12572:	pop    edi
   12573:	pop    esi
   12574:	pop    ebx
   12575:	ret    0x8
   12578:	push   ebp
   12579:	mov    ebp,esp
   1257b:	sub    esp,0x14
   1257e:	and    DWORD PTR [ebp-0x14],0x0
   12582:	push   edi
   12583:	xor    eax,eax
   12585:	lea    edi,[ebp-0x10]
   12588:	stos   DWORD PTR es:[edi],eax
   12589:	stos   DWORD PTR es:[edi],eax
   1258a:	stos   DWORD PTR es:[edi],eax
   1258b:	stos   DWORD PTR es:[edi],eax
   1258c:	lea    eax,[ebp-0x14]
   1258f:	push   eax
   12590:	push   DWORD PTR [ebp+0x8]
   12593:	call   0x1252a
   12598:	pop    edi
   12599:	leave  
   1259a:	ret    0x4
   1259d:	int3   
   1259e:	mov    eax,ds:0x1a198
   125a3:	test   eax,eax
   125a5:	je     0x125b5
   125a7:	push   eax
   125a8:	call   DWORD PTR ds:0x18044
   125ae:	and    DWORD PTR ds:0x1a198,0x0
   125b5:	ret    
   125b6:	dec    ebx
   125b7:	gs jb  0x12628
   125ba:	gs ins BYTE PTR es:[edi],dx
   125bc:	inc    edi
   125bd:	gs je  0x12610
   125c0:	jb     0x12631
   125c2:	arpl   WORD PTR [ecx+0x64],ax
   125c5:	fs jb  0x1262d
   125c8:	jae    0x1263d
   125ca:	sub    BYTE PTR [ecx],ch
   125cc:	and    BYTE PTR [ebp+0x6f],cl
   125cf:	fs jne 0x1263e
   125d2:	gs inc edx
   125d4:	popa   
   125d5:	jae    0x1263c
   125d7:	and    BYTE PTR [edx],bh
   125d9:	and    BYTE PTR [eax],dh
   125db:	js     0x12602
   125dd:	cmp    BYTE PTR cs:[eax+0xa],bh
   125e1:	add    BYTE PTR [ebx+0x65],cl
   125e4:	jb     0x12654
   125e6:	gs ins BYTE PTR es:[edi],dx
   125e8:	inc    edi
   125e9:	gs je  0x1263c
   125ec:	jb     0x1265d
   125ee:	arpl   WORD PTR [ecx+0x64],ax
   125f1:	fs jb  0x12659
   125f4:	jae    0x12669
   125f6:	sub    BYTE PTR [ecx],ch
   125f8:	and    BYTE PTR [ebp+0x58],al
   125fb:	inc    ebp
   125fc:	push   eax
   125fd:	push   esp
   125fe:	dec    ecx
   125ff:	dec    edi
   12600:	dec    esi
   12601:	or     al,BYTE PTR [eax]
   12603:	int3   
   12604:	push   0x3c
   12606:	push   0x18188
   1260b:	call   0x17d50
   12610:	xor    esi,esi
   12612:	mov    DWORD PTR [ebp-0x2c],esi
   12615:	mov    DWORD PTR [ebp-0x30],esi
   12618:	mov    ebx,DWORD PTR [ebp+0x8]
   1261b:	push   ebx
   1261c:	push   0x125b6
   12621:	call   0x17da2
   12626:	pop    ecx
   12627:	pop    ecx
   12628:	cmp    ebx,esi
   1262a:	je     0x126fd
   12630:	mov    DWORD PTR [ebp-0x4],esi
   12633:	lea    eax,[ebp-0x30]
   12636:	push   eax
   12637:	push   esi
   12638:	push   0x1
   1263a:	push   ebx
   1263b:	call   0x17da8
   12640:	mov    DWORD PTR [ebp-0x3c],eax
   12643:	mov    edx,eax
   12645:	sub    edx,ebx
   12647:	mov    DWORD PTR [ebp-0x38],edx
   1264a:	mov    edi,DWORD PTR [eax+0x1c]
   1264d:	add    edi,ebx
   1264f:	mov    DWORD PTR [ebp-0x40],edi
   12652:	mov    ecx,DWORD PTR [eax+0x24]
   12655:	add    ecx,ebx
   12657:	mov    DWORD PTR [ebp-0x44],ecx
   1265a:	mov    esi,DWORD PTR [eax+0x20]
   1265d:	add    esi,ebx
   1265f:	mov    DWORD PTR [ebp-0x48],esi
   12662:	and    DWORD PTR [ebp-0x20],0x0
   12666:	mov    ebx,DWORD PTR [ebp-0x20]
   12669:	cmp    ebx,DWORD PTR [eax+0x18]
   1266c:	jae    0x12717
   12672:	movsx  ebx,WORD PTR [ecx+ebx*2]
   12676:	mov    DWORD PTR [ebp-0x4c],ebx
   12679:	cmp    ebx,DWORD PTR [eax+0x14]
   1267c:	jae    0x126f9
   1267e:	mov    ebx,DWORD PTR [edi+ebx*4]
   12681:	mov    DWORD PTR [ebp-0x34],ebx
   12684:	cmp    ebx,edx
   12686:	jb     0x12692
   12688:	mov    ebx,DWORD PTR [ebp-0x30]
   1268b:	add    edx,ebx
   1268d:	cmp    DWORD PTR [ebp-0x34],edx
   12690:	jb     0x126ee
   12692:	mov    edx,DWORD PTR [ebp+0xc]
   12695:	mov    DWORD PTR [ebp-0x24],edx
   12698:	mov    edx,DWORD PTR [ebp-0x20]
   1269b:	mov    edx,DWORD PTR [esi+edx*4]
   1269e:	add    edx,DWORD PTR [ebp+0x8]
   126a1:	mov    DWORD PTR [ebp-0x28],edx
   126a4:	mov    dl,BYTE PTR [edx]
   126a6:	mov    BYTE PTR [ebp-0x19],dl
   126a9:	mov    ebx,DWORD PTR [ebp-0x24]
   126ac:	cmp    dl,BYTE PTR [ebx]
   126ae:	jne    0x126d8
   126b0:	test   dl,dl
   126b2:	je     0x126d4
   126b4:	mov    edx,DWORD PTR [ebp-0x28]
   126b7:	mov    dl,BYTE PTR [edx+0x1]
   126ba:	mov    BYTE PTR [ebp-0x1a],dl
   126bd:	cmp    dl,BYTE PTR [ebx+0x1]
   126c0:	jne    0x126d8
   126c2:	mov    edx,DWORD PTR [ebp-0x28]
   126c5:	inc    edx
   126c6:	inc    edx
   126c7:	mov    DWORD PTR [ebp-0x28],edx
   126ca:	add    DWORD PTR [ebp-0x24],0x2
   126ce:	cmp    BYTE PTR [ebp-0x1a],0x0
   126d2:	jne    0x126a4
   126d4:	xor    edx,edx
   126d6:	jmp    0x126dd
   126d8:	sbb    edx,edx
   126da:	sbb    edx,0xffffffff
   126dd:	test   edx,edx
   126df:	jne    0x126ee
   126e1:	mov    eax,DWORD PTR [ebp-0x34]
   126e4:	mov    ecx,DWORD PTR [ebp+0x8]
   126e7:	add    eax,ecx
   126e9:	mov    DWORD PTR [ebp-0x2c],eax
   126ec:	jmp    0x12717
   126ee:	inc    DWORD PTR [ebp-0x20]
   126f1:	mov    edx,DWORD PTR [ebp-0x38]
   126f4:	jmp    0x12666
   126f9:	or     DWORD PTR [ebp-0x4],0xffffffff
   126fd:	xor    eax,eax
   126ff:	jmp    0x1271e
   12701:	xor    eax,eax
   12703:	inc    eax
   12704:	ret    
   12705:	mov    esp,DWORD PTR [ebp-0x18]
   12708:	push   0x125e2
   1270d:	call   0x17da2
   12712:	pop    ecx
   12713:	and    DWORD PTR [ebp-0x2c],0x0
   12717:	or     DWORD PTR [ebp-0x4],0xffffffff
   1271b:	mov    eax,DWORD PTR [ebp-0x2c]
   1271e:	call   0x17d8b
   12723:	ret    0x8
   12726:	and    eax,0x25002073
   1272b:	xor    bh,BYTE PTR cs:[eax+0x20]
   1272f:	add    BYTE PTR [eax],al
   12731:	add    BYTE PTR [edx],cl
   12733:	add    BYTE PTR [esi-0x1],dl
   12736:	je     0x1275c
   12738:	or     BYTE PTR [eax+0x26],ch
   1273b:	daa    
   1273c:	add    DWORD PTR [eax],eax
   1273e:	call   0x17da2
   12743:	xor    esi,esi
   12745:	cmp    DWORD PTR [esp+0x18],esi
   12749:	jmp    0x12763
   1274b:	mov    eax,DWORD PTR [esp+0xc]
   1274f:	movzx  eax,BYTE PTR [esi+eax*1]
   12753:	push   eax
   12754:	push   0x1272a
   12759:	call   0x17da2
   1275e:	inc    esi
   1275f:	cmp    esi,DWORD PTR [esp+0x18]
   12763:	pop    ecx
   12764:	pop    ecx
   12765:	jne    0x1274b
   12767:	push   0x12732
   1276c:	call   0x17da2
   12771:	pop    ecx
   12772:	pop    esi
   12773:	ret    0xc
   12776:	pop    edx
   12777:	ja     0x127c8
   12779:	jo     0x127e0
   1277b:	outs   dx,BYTE PTR ds:[esi]
   1277c:	push   eax
   1277d:	jb     0x127ee
   1277f:	arpl   WORD PTR [ebp+0x73],sp
   12782:	jae    0x127ac
   12784:	sub    DWORD PTR [eax],esp
   12786:	inc    ebp
   12787:	push   edx
   12788:	push   edx
   12789:	dec    edi
   1278a:	push   edx
   1278b:	and    BYTE PTR [edx],bh
   1278d:	and    BYTE PTR [eax],dh
   1278f:	js     0x127b6
   12791:	cmp    BYTE PTR cs:[eax+0xa],bh
   12795:	add    BYTE PTR [edx+0x77],bl
   12798:	inc    ecx
   12799:	ins    BYTE PTR es:[edi],dx
   1279a:	ins    BYTE PTR es:[edi],dx
   1279b:	outs   dx,DWORD PTR ds:[esi]
   1279c:	arpl   WORD PTR [ecx+0x74],sp
   1279f:	gs push esi
   127a1:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   127a8:	gs ins DWORD PTR es:[edi],dx
   127aa:	outs   dx,DWORD PTR ds:[esi]
   127ab:	jb     0x12826
   127ad:	sub    BYTE PTR [ecx],ch
   127af:	and    BYTE PTR [ebp+0x52],al
   127b2:	push   edx
   127b3:	dec    edi
   127b4:	push   edx
   127b5:	and    BYTE PTR [edx],bh
   127b7:	and    BYTE PTR [eax],dh
   127b9:	js     0x127e0
   127bb:	cmp    BYTE PTR cs:[eax+0xa],bh
   127bf:	add    BYTE PTR [eax],al
   127c1:	add    BYTE PTR [edx+0x77],bl
   127c4:	inc    ecx
   127c5:	ins    BYTE PTR es:[edi],dx
   127c6:	ins    BYTE PTR es:[edi],dx
   127c7:	outs   dx,DWORD PTR ds:[esi]
   127c8:	arpl   WORD PTR [ecx+0x74],sp
   127cb:	gs push esi
   127cd:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   127d4:	gs ins DWORD PTR es:[edi],dx
   127d6:	outs   dx,DWORD PTR ds:[esi]
   127d7:	jb     0x12852
   127d9:	sub    BYTE PTR [ecx],ch
   127db:	and    BYTE PTR [ebp+0x52],al
   127de:	push   edx
   127df:	dec    edi
   127e0:	push   edx
   127e1:	and    BYTE PTR [edx],bh
   127e3:	and    BYTE PTR [eax],dh
   127e5:	js     0x1280c
   127e7:	cmp    BYTE PTR cs:[eax+0xa],bh
   127eb:	add    BYTE PTR [eax],al
   127ed:	add    BYTE PTR [ebx+0x74],dl
   127f0:	popa   
   127f1:	jb     0x12867
   127f3:	and    BYTE PTR [ecx+0x64],ah
   127f6:	fs jb  0x12819
   127f9:	cmp    ah,BYTE PTR [eax]
   127fb:	xor    BYTE PTR [eax+0x25],bh
   127fe:	cmp    BYTE PTR cs:[eax+0xa],bh
   12802:	add    BYTE PTR [eax],al
   12804:	add    BYTE PTR [eax],al
   12806:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
   1280b:	add    BYTE PTR [eax+eax*1+0x0],ch
   1280f:	add    BYTE PTR [eax],al
   12811:	add    BYTE PTR [ebp+0x50],al
   12814:	and    BYTE PTR [ebx+0x74],dh
   12817:	popa   
   12818:	jb     0x1288e
   1281a:	cmp    al,BYTE PTR [eax]
   1281c:	add    BYTE PTR [eax],al
   1281e:	dec    esi
   1281f:	gs ja  0x12842
   12822:	inc    ebp
   12823:	push   eax
   12824:	and    BYTE PTR [ecx+0x64],ah
   12827:	fs jb  0x1284a
   1282a:	cmp    ah,BYTE PTR [eax]
   1282c:	xor    BYTE PTR [eax+0x25],bh
   1282f:	cmp    BYTE PTR cs:[eax+0xa],bh
   12833:	add    BYTE PTR [eax],al
   12835:	add    BYTE PTR [esi+0x74],cl
   12838:	push   edi
   12839:	jb     0x128a4
   1283b:	je     0x128a2
   1283d:	push   esi
   1283e:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   12845:	gs ins DWORD PTR es:[edi],dx
   12847:	outs   dx,DWORD PTR ds:[esi]
   12848:	jb     0x128c3
   1284a:	and    BYTE PTR [ebp+0x72],ah
   1284d:	jb     0x128be
   1284f:	jb     0x12871
   12851:	cmp    ah,BYTE PTR [eax]
   12853:	xor    BYTE PTR [eax+0x25],bh
   12856:	cmp    BYTE PTR cs:[eax+0xa],bh
   1285a:	add    BYTE PTR [eax],al
   1285c:	add    BYTE PTR [eax],al
   1285e:	dec    esi
   1285f:	je     0x128b1
   12861:	jb     0x128d2
   12863:	je     0x128ca
   12865:	arpl   WORD PTR [esi+edx*2+0x69],si
   12869:	jb     0x128df
   1286b:	jne    0x128ce
   1286d:	ins    BYTE PTR es:[edi],dx
   1286e:	dec    ebp
   1286f:	gs ins DWORD PTR es:[edi],dx
   12871:	outs   dx,DWORD PTR ds:[esi]
   12872:	jb     0x128ed
   12874:	and    BYTE PTR [ebp+0x72],ah
   12877:	jb     0x128e8
   12879:	jb     0x1289b
   1287b:	cmp    ah,BYTE PTR [eax]
   1287d:	xor    BYTE PTR [eax+0x25],bh
   12880:	cmp    BYTE PTR cs:[eax+0xa],bh
   12884:	add    ah,cl
   12886:	push   ebp
   12887:	mov    ebp,esp
   12889:	sub    esp,0x40
   1288c:	mov    eax,DWORD PTR [ebp+0xc]
   1288f:	mov    eax,DWORD PTR [eax]
   12891:	push   ebx
   12892:	mov    DWORD PTR [ebp-0x28],eax
   12895:	lea    eax,[ebp-0x28]
   12898:	push   eax
   12899:	lea    eax,[ebp-0x40]
   1289c:	push   eax
   1289d:	xor    ebx,ebx
   1289f:	push   0x1f0fff
   128a4:	lea    eax,[ebp-0x8]
   128a7:	push   eax
   128a8:	mov    DWORD PTR [ebp-0x40],0x18
   128af:	mov    DWORD PTR [ebp-0x3c],ebx
   128b2:	mov    DWORD PTR [ebp-0x34],0x200
   128b9:	mov    DWORD PTR [ebp-0x38],ebx
   128bc:	mov    DWORD PTR [ebp-0x30],ebx
   128bf:	mov    DWORD PTR [ebp-0x2c],ebx
   128c2:	mov    DWORD PTR [ebp-0x24],ebx
   128c5:	mov    DWORD PTR [ebp-0x8],ebx
   128c8:	call   DWORD PTR ds:0x18060
   128ce:	cmp    eax,ebx
   128d0:	jge    0x128e4
   128d2:	push   eax
   128d3:	push   0x12776
   128d8:	call   0x17da2
   128dd:	pop    ecx
   128de:	pop    ecx
   128df:	jmp    0x12b29
   128e4:	push   esi
   128e5:	mov    esi,DWORD PTR ds:0x1805c
   128eb:	push   edi
   128ec:	push   0x40
   128ee:	mov    edi,0x1000
   128f3:	push   edi
   128f4:	lea    eax,[ebp-0xc]
   128f7:	push   eax
   128f8:	push   ebx
   128f9:	lea    eax,[ebp-0x4]
   128fc:	push   eax
   128fd:	push   DWORD PTR [ebp-0x8]
   12900:	mov    DWORD PTR [ebp-0x4],ebx
   12903:	mov    DWORD PTR [ebp-0xc],0x400
   1290a:	call   esi
   1290c:	cmp    eax,ebx
   1290e:	jl     0x1291b
   12910:	mov    eax,DWORD PTR [ebp-0x4]
   12913:	mov    ecx,DWORD PTR [ebp+0xc]
   12916:	mov    DWORD PTR [ecx+0x8],eax
   12919:	jmp    0x12928
   1291b:	push   eax
   1291c:	push   0x12796
   12921:	call   0x17da2
   12926:	pop    ecx
   12927:	pop    ecx
   12928:	push   0x4
   1292a:	push   edi
   1292b:	lea    eax,[ebp-0xc]
   1292e:	push   eax
   1292f:	push   ebx
   12930:	lea    eax,[ebp-0x10]
   12933:	push   eax
   12934:	push   DWORD PTR [ebp-0x8]
   12937:	mov    DWORD PTR [ebp-0x10],ebx
   1293a:	mov    DWORD PTR [ebp-0xc],0x400
   12941:	call   esi
   12943:	cmp    eax,ebx
   12945:	jl     0x12952
   12947:	mov    eax,DWORD PTR [ebp-0x10]
   1294a:	mov    ecx,DWORD PTR [ebp+0xc]
   1294d:	mov    DWORD PTR [ecx+0xc],eax
   12950:	jmp    0x1295f
   12952:	push   eax
   12953:	push   0x127c2
   12958:	call   0x17da2
   1295d:	pop    ecx
   1295e:	pop    ecx
   1295f:	lea    eax,[ebp-0x18]
   12962:	push   eax
   12963:	push   DWORD PTR [ebp-0x28]
   12966:	call   DWORD PTR ds:0x18058
   1296c:	test   eax,eax
   1296e:	jl     0x12b27
   12974:	push   DWORD PTR [ebp-0x18]
   12977:	call   DWORD PTR ds:0x18054
   1297d:	mov    edi,DWORD PTR [ebp+0x8]
   12980:	push   edi
   12981:	push   0x127ee
   12986:	call   0x17da2
   1298b:	mov    esi,DWORD PTR [ebp-0x4]
   1298e:	cmp    esi,ebx
   12990:	pop    ecx
   12991:	pop    ecx
   12992:	je     0x12b0f
   12998:	mov    ebx,DWORD PTR [ebp-0x10]
   1299b:	push   0x40
   1299d:	push   0x1a008
   129a2:	push   ebx
   129a3:	call   0x17598
   129a8:	push   0x12806
   129ad:	push   ebx
   129ae:	call   DWORD PTR ds:0x18050
   129b4:	pop    ecx
   129b5:	pop    ecx
   129b6:	push   0x60
   129b8:	push   esi
   129b9:	mov    DWORD PTR [ebp-0x14],esi
   129bc:	call   0x17568
   129c1:	push   0x68
   129c3:	push   eax
   129c4:	call   0x17568
   129c9:	push   ebx
   129ca:	push   eax
   129cb:	call   0x17576
   129d0:	push   0xb8
   129d5:	push   eax
   129d6:	call   0x17568
   129db:	push   DWORD PTR ds:0x1a1c0
   129e1:	push   eax
   129e2:	call   0x17576
   129e7:	push   0xc00b
   129ec:	push   eax
   129ed:	call   0x17586
   129f2:	push   0x74
   129f4:	push   eax
   129f5:	call   0x17568
   129fa:	push   0x2
   129fc:	push   eax
   129fd:	call   0x17568
   12a02:	push   0xd0ff
   12a07:	push   eax
   12a08:	call   0x17586
   12a0d:	push   0x61
   12a0f:	push   eax
   12a10:	call   0x17568
   12a15:	mov    DWORD PTR [ebp+0x8],eax
   12a18:	mov    ebx,edi
   12a1a:	xor    esi,esi
   12a1c:	push   0x0
   12a1e:	push   ebx
   12a1f:	push   DWORD PTR [ebp+0x8]
   12a22:	call   0x17cfa
   12a27:	mov    ecx,eax
   12a29:	sub    ecx,ebx
   12a2b:	add    DWORD PTR [ebp+0x8],ecx
   12a2e:	add    esi,ecx
   12a30:	cmp    esi,0x5
   12a33:	mov    ebx,eax
   12a35:	jb     0x12a1c
   12a37:	push   esi
   12a38:	push   edi
   12a39:	push   0x12812
   12a3e:	call   0x12734
   12a43:	push   DWORD PTR [ebp+0x8]
   12a46:	add    esi,edi
   12a48:	push   esi
   12a49:	call   0x175ba
   12a4e:	push   DWORD PTR [ebp-0x14]
   12a51:	push   0x1281e
   12a56:	call   0x17da2
   12a5b:	mov    eax,DWORD PTR [ebp-0x4]
   12a5e:	test   eax,eax
   12a60:	pop    ecx
   12a61:	pop    ecx
   12a62:	je     0x12b0f
   12a68:	add    eax,0x400
   12a6d:	lea    esi,[eax-0xc]
   12a70:	push   esi
   12a71:	lea    ecx,[eax-0x8]
   12a74:	push   0x40
   12a76:	lea    ebx,[eax-0x4]
   12a79:	push   ecx
   12a7a:	lea    edx,[eax-0x10]
   12a7d:	mov    DWORD PTR [ebx],edi
   12a7f:	push   ebx
   12a80:	add    eax,0xffffffe8
   12a83:	mov    DWORD PTR [ecx],0x5
   12a89:	and    DWORD PTR [esi],0x0
   12a8c:	push   0xffffffff
   12a8e:	mov    DWORD PTR [ebp-0x20],ecx
   12a91:	mov    DWORD PTR [ebp-0x1c],edx
   12a94:	mov    DWORD PTR [ebp+0x8],eax
   12a97:	call   DWORD PTR ds:0x1a184
   12a9d:	test   eax,eax
   12a9f:	jl     0x12b02
   12aa1:	mov    eax,DWORD PTR [ebp-0x14]
   12aa4:	sub    eax,edi
   12aa6:	sub    eax,0x5
   12aa9:	push   eax
   12aaa:	mov    eax,DWORD PTR [ebp+0x8]
   12aad:	inc    eax
   12aae:	push   eax
   12aaf:	call   0x17576
   12ab4:	push   0xe9
   12ab9:	push   DWORD PTR [ebp+0x8]
   12abc:	call   0x17568
   12ac1:	mov    eax,DWORD PTR [ebp-0x1c]
   12ac4:	and    DWORD PTR [eax],0x0
   12ac7:	push   eax
   12ac8:	push   0x5
   12aca:	push   DWORD PTR [ebp+0x8]
   12acd:	push   edi
   12ace:	push   0xffffffff
   12ad0:	call   DWORD PTR ds:0x1a178
   12ad6:	test   eax,eax
   12ad8:	jge    0x12ae7
   12ada:	push   eax
   12adb:	push   0x12836
   12ae0:	call   0x17da2
   12ae5:	pop    ecx
   12ae6:	pop    ecx
   12ae7:	mov    eax,DWORD PTR [ebp+0xc]
   12aea:	mov    BYTE PTR [eax+0x10],0x1
   12aee:	lea    eax,[ebp-0x14]
   12af1:	push   eax
   12af2:	push   DWORD PTR [esi]
   12af4:	push   DWORD PTR [ebp-0x20]
   12af7:	push   ebx
   12af8:	push   0xffffffff
   12afa:	call   DWORD PTR ds:0x1a184
   12b00:	jmp    0x12b0f
   12b02:	push   eax
   12b03:	push   0x1285e
   12b08:	call   0x17da2
   12b0d:	pop    ecx
   12b0e:	pop    ecx
   12b0f:	call   DWORD PTR ds:0x1804c
   12b15:	mov    ecx,DWORD PTR [ebp-0x18]
   12b18:	call   DWORD PTR ds:0x1800c
   12b1e:	push   DWORD PTR [ebp-0x8]
   12b21:	call   DWORD PTR ds:0x18070
   12b27:	pop    edi
   12b28:	pop    esi
   12b29:	pop    ebx
   12b2a:	leave  
   12b2b:	ret    0x8
   12b2e:	pop    edx
   12b2f:	ja     0x12b80
   12b31:	jo     0x12b98
   12b33:	outs   dx,BYTE PTR ds:[esi]
   12b34:	push   eax
   12b35:	jb     0x12ba6
   12b37:	arpl   WORD PTR [ebp+0x73],sp
   12b3a:	jae    0x12b64
   12b3c:	sub    DWORD PTR [eax],esp
   12b3e:	inc    ebp
   12b3f:	push   edx
   12b40:	push   edx
   12b41:	dec    edi
   12b42:	push   edx
   12b43:	and    BYTE PTR [edx],bh
   12b45:	and    BYTE PTR [eax],dh
   12b47:	js     0x12b6e
   12b49:	cmp    BYTE PTR cs:[eax+0xa],bh
   12b4d:	add    BYTE PTR [edx+0x77],bl
   12b50:	inc    ecx
   12b51:	ins    BYTE PTR es:[edi],dx
   12b52:	ins    BYTE PTR es:[edi],dx
   12b53:	outs   dx,DWORD PTR ds:[esi]
   12b54:	arpl   WORD PTR [ecx+0x74],sp
   12b57:	gs push esi
   12b59:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   12b60:	gs ins DWORD PTR es:[edi],dx
   12b62:	outs   dx,DWORD PTR ds:[esi]
   12b63:	jb     0x12bde
   12b65:	sub    BYTE PTR [ecx],ch
   12b67:	and    BYTE PTR [ebp+0x52],al
   12b6a:	push   edx
   12b6b:	dec    edi
   12b6c:	push   edx
   12b6d:	and    BYTE PTR [edx],bh
   12b6f:	and    BYTE PTR [eax],dh
   12b71:	js     0x12b98
   12b73:	cmp    BYTE PTR cs:[eax+0xa],bh
   12b77:	add    BYTE PTR [eax],al
   12b79:	add    BYTE PTR [edx+0x77],bl
   12b7c:	inc    ecx
   12b7d:	ins    BYTE PTR es:[edi],dx
   12b7e:	ins    BYTE PTR es:[edi],dx
   12b7f:	outs   dx,DWORD PTR ds:[esi]
   12b80:	arpl   WORD PTR [ecx+0x74],sp
   12b83:	gs push esi
   12b85:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   12b8c:	gs ins DWORD PTR es:[edi],dx
   12b8e:	outs   dx,DWORD PTR ds:[esi]
   12b8f:	jb     0x12c0a
   12b91:	sub    BYTE PTR [ecx],ch
   12b93:	and    BYTE PTR [ebp+0x52],al
   12b96:	push   edx
   12b97:	dec    edi
   12b98:	push   edx
   12b99:	and    BYTE PTR [edx],bh
   12b9b:	and    BYTE PTR [eax],dh
   12b9d:	js     0x12bc4
   12b9f:	cmp    BYTE PTR cs:[eax+0xa],bh
   12ba3:	add    BYTE PTR [eax],al
   12ba5:	add    BYTE PTR [ebx+0x74],dl
   12ba8:	popa   
   12ba9:	jb     0x12c1f
   12bab:	and    BYTE PTR [ecx+0x64],ah
   12bae:	fs jb  0x12bd1
   12bb1:	cmp    ah,BYTE PTR [eax]
   12bb3:	xor    BYTE PTR [eax+0x25],bh
   12bb6:	cmp    BYTE PTR cs:[eax+0xa],bh
   12bba:	add    BYTE PTR [eax],al
   12bbc:	add    BYTE PTR [eax],al
   12bbe:	inc    ebp
   12bbf:	push   eax
   12bc0:	and    BYTE PTR [ebx+0x74],dh
   12bc3:	popa   
   12bc4:	jb     0x12c3a
   12bc6:	cmp    al,BYTE PTR [eax]
   12bc8:	add    BYTE PTR [eax],al
   12bca:	dec    esi
   12bcb:	gs ja  0x12bee
   12bce:	inc    ebp
   12bcf:	push   eax
   12bd0:	and    BYTE PTR [ecx+0x64],ah
   12bd3:	fs jb  0x12bf6
   12bd6:	cmp    ah,BYTE PTR [eax]
   12bd8:	xor    BYTE PTR [eax+0x25],bh
   12bdb:	cmp    BYTE PTR cs:[eax+0xa],bh
   12bdf:	add    BYTE PTR [eax],al
   12be1:	add    BYTE PTR [esi+0x74],cl
   12be4:	push   edi
   12be5:	jb     0x12c50
   12be7:	je     0x12c4e
   12be9:	push   esi
   12bea:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   12bf1:	gs ins DWORD PTR es:[edi],dx
   12bf3:	outs   dx,DWORD PTR ds:[esi]
   12bf4:	jb     0x12c6f
   12bf6:	and    BYTE PTR [ebp+0x72],ah
   12bf9:	jb     0x12c6a
   12bfb:	jb     0x12c1d
   12bfd:	cmp    ah,BYTE PTR [eax]
   12bff:	xor    BYTE PTR [eax+0x25],bh
   12c02:	cmp    BYTE PTR cs:[eax+0xa],bh
   12c06:	add    BYTE PTR [eax],al
   12c08:	add    BYTE PTR [eax],al
   12c0a:	dec    esi
   12c0b:	je     0x12c5d
   12c0d:	jb     0x12c7e
   12c0f:	je     0x12c76
   12c11:	arpl   WORD PTR [esi+edx*2+0x69],si
   12c15:	jb     0x12c8b
   12c17:	jne    0x12c7a
   12c19:	ins    BYTE PTR es:[edi],dx
   12c1a:	dec    ebp
   12c1b:	gs ins DWORD PTR es:[edi],dx
   12c1d:	outs   dx,DWORD PTR ds:[esi]
   12c1e:	jb     0x12c99
   12c20:	and    BYTE PTR [ebp+0x72],ah
   12c23:	jb     0x12c94
   12c25:	jb     0x12c47
   12c27:	cmp    ah,BYTE PTR [eax]
   12c29:	xor    BYTE PTR [eax+0x25],bh
   12c2c:	cmp    BYTE PTR cs:[eax+0xa],bh
   12c30:	add    ah,cl
   12c32:	push   ebp
   12c33:	mov    ebp,esp
   12c35:	sub    esp,0x44
   12c38:	mov    eax,DWORD PTR [ebp+0xc]
   12c3b:	mov    eax,DWORD PTR [eax]
   12c3d:	push   ebx
   12c3e:	mov    DWORD PTR [ebp-0x2c],eax
   12c41:	lea    eax,[ebp-0x2c]
   12c44:	push   eax
   12c45:	lea    eax,[ebp-0x44]
   12c48:	push   eax
   12c49:	xor    ebx,ebx
   12c4b:	push   0x1f0fff
   12c50:	lea    eax,[ebp-0xc]
   12c53:	push   eax
   12c54:	mov    DWORD PTR [ebp-0x44],0x18
   12c5b:	mov    DWORD PTR [ebp-0x40],ebx
   12c5e:	mov    DWORD PTR [ebp-0x38],0x200
   12c65:	mov    DWORD PTR [ebp-0x3c],ebx
   12c68:	mov    DWORD PTR [ebp-0x34],ebx
   12c6b:	mov    DWORD PTR [ebp-0x30],ebx
   12c6e:	mov    DWORD PTR [ebp-0x28],ebx
   12c71:	mov    DWORD PTR [ebp-0xc],ebx
   12c74:	call   DWORD PTR ds:0x18060
   12c7a:	cmp    eax,ebx
   12c7c:	jge    0x12c90
   12c7e:	push   eax
   12c7f:	push   0x12b2e
   12c84:	call   0x17da2
   12c89:	pop    ecx
   12c8a:	pop    ecx
   12c8b:	jmp    0x12f61
   12c90:	push   esi
   12c91:	mov    esi,DWORD PTR ds:0x1805c
   12c97:	push   edi
   12c98:	push   0x40
   12c9a:	mov    edi,0x1000
   12c9f:	push   edi
   12ca0:	lea    eax,[ebp-0x10]
   12ca3:	push   eax
   12ca4:	push   ebx
   12ca5:	lea    eax,[ebp-0x8]
   12ca8:	push   eax
   12ca9:	push   DWORD PTR [ebp-0xc]
   12cac:	mov    DWORD PTR [ebp-0x8],ebx
   12caf:	mov    DWORD PTR [ebp-0x10],0x400
   12cb6:	call   esi
   12cb8:	cmp    eax,ebx
   12cba:	jl     0x12cc7
   12cbc:	mov    eax,DWORD PTR [ebp-0x8]
   12cbf:	mov    ecx,DWORD PTR [ebp+0xc]
   12cc2:	mov    DWORD PTR [ecx+0x8],eax
   12cc5:	jmp    0x12cd4
   12cc7:	push   eax
   12cc8:	push   0x12b4e
   12ccd:	call   0x17da2
   12cd2:	pop    ecx
   12cd3:	pop    ecx
   12cd4:	push   0x4
   12cd6:	push   edi
   12cd7:	lea    eax,[ebp-0x10]
   12cda:	push   eax
   12cdb:	push   ebx
   12cdc:	lea    eax,[ebp-0x14]
   12cdf:	push   eax
   12ce0:	push   DWORD PTR [ebp-0xc]
   12ce3:	mov    DWORD PTR [ebp-0x14],ebx
   12ce6:	mov    DWORD PTR [ebp-0x10],0x400
   12ced:	call   esi
   12cef:	cmp    eax,ebx
   12cf1:	jl     0x12cfe
   12cf3:	mov    eax,DWORD PTR [ebp-0x14]
   12cf6:	mov    ecx,DWORD PTR [ebp+0xc]
   12cf9:	mov    DWORD PTR [ecx+0xc],eax
   12cfc:	jmp    0x12d0b
   12cfe:	push   eax
   12cff:	push   0x12b7a
   12d04:	call   0x17da2
   12d09:	pop    ecx
   12d0a:	pop    ecx
   12d0b:	lea    eax,[ebp-0x20]
   12d0e:	push   eax
   12d0f:	push   DWORD PTR [ebp-0x2c]
   12d12:	call   DWORD PTR ds:0x18058
   12d18:	test   eax,eax
   12d1a:	jl     0x12f5f
   12d20:	push   DWORD PTR [ebp-0x20]
   12d23:	call   DWORD PTR ds:0x18054
   12d29:	push   DWORD PTR [ebp+0x8]
   12d2c:	push   0x12ba6
   12d31:	call   0x17da2
   12d36:	mov    edx,DWORD PTR [ebp-0x8]
   12d39:	cmp    edx,ebx
   12d3b:	pop    ecx
   12d3c:	pop    ecx
   12d3d:	mov    DWORD PTR [ebp-0x1c],ebx
   12d40:	je     0x12f47
   12d46:	mov    esi,DWORD PTR [ebp-0x14]
   12d49:	cmp    esi,ebx
   12d4b:	je     0x12e91
   12d51:	xor    eax,eax
   12d53:	mov    ecx,0x83
   12d58:	mov    edi,esi
   12d5a:	rep stos DWORD PTR es:[edi],eax
   12d5c:	push   0x60
   12d5e:	lea    edi,[esi+0x4]
   12d61:	push   edx
   12d62:	mov    DWORD PTR [edi],ebx
   12d64:	mov    DWORD PTR [esi],ebx
   12d66:	mov    DWORD PTR [ebp-0x1c],edx
   12d69:	call   0x17568
   12d6e:	push   0x68
   12d70:	push   eax
   12d71:	call   0x17568
   12d76:	push   edi
   12d77:	push   eax
   12d78:	call   0x17576
   12d7d:	push   0x6a
   12d7f:	pop    edi
   12d80:	push   edi
   12d81:	push   eax
   12d82:	call   0x17568
   12d87:	push   0x4
   12d89:	push   eax
   12d8a:	call   0x17568
   12d8f:	push   edi
   12d90:	push   eax
   12d91:	call   0x17568
   12d96:	push   ebx
   12d97:	push   eax
   12d98:	call   0x17568
   12d9d:	push   0x68
   12d9f:	push   eax
   12da0:	call   0x17568
   12da5:	push   ebx
   12da6:	push   eax
   12da7:	mov    DWORD PTR [ebp-0x24],eax
   12daa:	call   0x17576
   12daf:	push   edi
   12db0:	push   eax
   12db1:	call   0x17568
   12db6:	push   ebx
   12db7:	push   eax
   12db8:	call   0x17568
   12dbd:	push   edi
   12dbe:	push   eax
   12dbf:	call   0x17568
   12dc4:	push   ebx
   12dc5:	push   eax
   12dc6:	call   0x17568
   12dcb:	push   0xb8
   12dd0:	push   eax
   12dd1:	call   0x17568
   12dd6:	push   DWORD PTR ds:0x1a1c4
   12ddc:	push   eax
   12ddd:	call   0x17576
   12de2:	push   0xc00b
   12de7:	push   eax
   12de8:	call   0x17586
   12ded:	push   0x74
   12def:	push   eax
   12df0:	call   0x17568
   12df5:	push   0x9
   12df7:	push   eax
   12df8:	call   0x17568
   12dfd:	push   0xd0ff
   12e02:	push   eax
   12e03:	call   0x17586
   12e08:	push   0xb9
   12e0d:	push   eax
   12e0e:	call   0x17568
   12e13:	lea    ecx,[esi+0x8]
   12e16:	push   ecx
   12e17:	push   eax
   12e18:	call   0x17576
   12e1d:	push   0x189
   12e22:	push   eax
   12e23:	call   0x17586
   12e28:	push   0x61
   12e2a:	push   eax
   12e2b:	call   0x17568
   12e30:	mov    DWORD PTR [ebp-0x4],eax
   12e33:	mov    eax,DWORD PTR [ebp+0x8]
   12e36:	mov    DWORD PTR [ebp-0x18],eax
   12e39:	xor    edi,edi
   12e3b:	push   ebx
   12e3c:	push   DWORD PTR [ebp-0x18]
   12e3f:	push   DWORD PTR [ebp-0x4]
   12e42:	call   0x17cfa
   12e47:	mov    ecx,eax
   12e49:	sub    ecx,DWORD PTR [ebp-0x18]
   12e4c:	mov    DWORD PTR [ebp-0x18],eax
   12e4f:	add    DWORD PTR [ebp-0x4],ecx
   12e52:	add    edi,ecx
   12e54:	cmp    edi,0x5
   12e57:	jb     0x12e3b
   12e59:	push   edi
   12e5a:	push   DWORD PTR [ebp+0x8]
   12e5d:	push   0x12bbe
   12e62:	call   0x12734
   12e67:	mov    eax,DWORD PTR [ebp+0x8]
   12e6a:	push   DWORD PTR [ebp-0x4]
   12e6d:	add    edi,eax
   12e6f:	push   edi
   12e70:	call   0x175ba
   12e75:	push   DWORD PTR [ebp-0x1c]
   12e78:	mov    edi,eax
   12e7a:	push   0x12bca
   12e7f:	call   0x17da2
   12e84:	pop    ecx
   12e85:	pop    ecx
   12e86:	push   edi
   12e87:	push   DWORD PTR [ebp-0x24]
   12e8a:	call   0x17576
   12e8f:	mov    DWORD PTR [esi],edi
   12e91:	mov    eax,DWORD PTR [ebp-0x8]
   12e94:	cmp    eax,ebx
   12e96:	je     0x12f47
   12e9c:	add    eax,0x400
   12ea1:	lea    esi,[eax-0xc]
   12ea4:	lea    ecx,[eax-0x8]
   12ea7:	push   esi
   12ea8:	lea    edi,[eax-0x4]
   12eab:	lea    edx,[eax-0x10]
   12eae:	push   0x40
   12eb0:	add    eax,0xffffffe8
   12eb3:	push   ecx
   12eb4:	mov    DWORD PTR [ebp-0x18],eax
   12eb7:	mov    eax,DWORD PTR [ebp+0x8]
   12eba:	mov    DWORD PTR [edi],eax
   12ebc:	push   edi
   12ebd:	mov    DWORD PTR [ecx],0x5
   12ec3:	push   0xffffffff
   12ec5:	mov    DWORD PTR [ebp-0x4],ecx
   12ec8:	mov    DWORD PTR [ebp-0x24],edx
   12ecb:	mov    DWORD PTR [esi],ebx
   12ecd:	call   DWORD PTR ds:0x1a184
   12ed3:	cmp    eax,ebx
   12ed5:	jl     0x12f3a
   12ed7:	mov    eax,DWORD PTR [ebp-0x1c]
   12eda:	sub    eax,DWORD PTR [ebp+0x8]
   12edd:	sub    eax,0x5
   12ee0:	push   eax
   12ee1:	mov    eax,DWORD PTR [ebp-0x18]
   12ee4:	inc    eax
   12ee5:	push   eax
   12ee6:	call   0x17576
   12eeb:	push   0xe9
   12ef0:	push   DWORD PTR [ebp-0x18]
   12ef3:	call   0x17568
   12ef8:	mov    eax,DWORD PTR [ebp-0x24]
   12efb:	push   eax
   12efc:	push   0x5
   12efe:	push   DWORD PTR [ebp-0x18]
   12f01:	mov    DWORD PTR [eax],ebx
   12f03:	push   DWORD PTR [ebp+0x8]
   12f06:	push   0xffffffff
   12f08:	call   DWORD PTR ds:0x1a178
   12f0e:	cmp    eax,ebx
   12f10:	jge    0x12f1f
   12f12:	push   eax
   12f13:	push   0x12be2
   12f18:	call   0x17da2
   12f1d:	pop    ecx
   12f1e:	pop    ecx
   12f1f:	mov    eax,DWORD PTR [ebp+0xc]
   12f22:	mov    BYTE PTR [eax+0x10],0x1
   12f26:	lea    eax,[ebp-0x1c]
   12f29:	push   eax
   12f2a:	push   DWORD PTR [esi]
   12f2c:	push   DWORD PTR [ebp-0x4]
   12f2f:	push   edi
   12f30:	push   0xffffffff
   12f32:	call   DWORD PTR ds:0x1a184
   12f38:	jmp    0x12f47
   12f3a:	push   eax
   12f3b:	push   0x12c0a
   12f40:	call   0x17da2
   12f45:	pop    ecx
   12f46:	pop    ecx
   12f47:	call   DWORD PTR ds:0x1804c
   12f4d:	mov    ecx,DWORD PTR [ebp-0x20]
   12f50:	call   DWORD PTR ds:0x1800c
   12f56:	push   DWORD PTR [ebp-0xc]
   12f59:	call   DWORD PTR ds:0x18070
   12f5f:	pop    edi
   12f60:	pop    esi
   12f61:	pop    ebx
   12f62:	leave  
   12f63:	ret    0x8
   12f66:	pop    edx
   12f67:	ja     0x12fbb
   12f69:	gs jae 0x12fe1
   12f6c:	ins    DWORD PTR es:[edi],dx
   12f6d:	gs push esp
   12f6f:	push   0x64616572
   12f74:	and    BYTE PTR [ebp+0x72],ah
   12f77:	jb     0x12fe8
   12f79:	jb     0x12f9b
   12f7b:	cmp    ah,BYTE PTR [eax]
   12f7d:	xor    BYTE PTR [eax+0x25],bh
   12f80:	cmp    BYTE PTR cs:[eax+0xa],bh
   12f84:	add    ah,cl
   12f86:	push   ebp
   12f87:	mov    ebp,esp
   12f89:	sub    esp,0x18
   12f8c:	and    DWORD PTR [ebp-0x18],0x0
   12f90:	push   edi
   12f91:	xor    eax,eax
   12f93:	lea    edi,[ebp-0x14]
   12f96:	stos   DWORD PTR es:[edi],eax
   12f97:	stos   DWORD PTR es:[edi],eax
   12f98:	stos   DWORD PTR es:[edi],eax
   12f99:	stos   DWORD PTR es:[edi],eax
   12f9a:	lea    eax,[ebp-0x18]
   12f9d:	push   eax
   12f9e:	push   0x1
   12fa0:	call   0x124b0
   12fa5:	test   al,al
   12fa7:	je     0x1306c
   12fad:	cmp    DWORD PTR [ebp-0x18],0x0
   12fb1:	je     0x1306c
   12fb7:	lea    eax,[ebp-0x4]
   12fba:	push   eax
   12fbb:	push   DWORD PTR [ebp-0x18]
   12fbe:	call   DWORD PTR ds:0x18058
   12fc4:	test   eax,eax
   12fc6:	jl     0x1306c
   12fcc:	push   esi
   12fcd:	push   DWORD PTR [ebp-0x4]
   12fd0:	call   DWORD PTR ds:0x18054
   12fd6:	mov    esi,DWORD PTR [ebp-0xc]
   12fd9:	push   DWORD PTR [ebp+0x8]
   12fdc:	lea    edi,[esi+0xc]
   12fdf:	push   edi
   12fe0:	call   DWORD PTR ds:0x18064
   12fe6:	mov    eax,DWORD PTR [esi]
   12fe8:	pop    ecx
   12fe9:	pop    ecx
   12fea:	push   0x68
   12fec:	push   eax
   12fed:	call   0x17568
   12ff2:	push   edi
   12ff3:	push   eax
   12ff4:	call   0x17576
   12ff9:	push   0xb8
   12ffe:	push   eax
   12fff:	call   0x17568
   13004:	push   DWORD PTR ds:0x1a1c0
   1300a:	push   eax
   1300b:	call   0x17576
   13010:	push   0xc00b
   13015:	push   eax
   13016:	call   0x17586
   1301b:	push   0x74
   1301d:	push   eax
   1301e:	call   0x17568
   13023:	push   0x2
   13025:	push   eax
   13026:	call   0x17568
   1302b:	push   0xd0ff
   13030:	push   eax
   13031:	call   0x17586
   13036:	push   0xc2
   1303b:	push   eax
   1303c:	call   0x17568
   13041:	push   0x4
   13043:	push   eax
   13044:	call   0x17586
   13049:	push   0x0
   1304b:	push   DWORD PTR [esi+0x8]
   1304e:	call   DWORD PTR ds:0x1a188
   13054:	test   eax,eax
   13056:	pop    esi
   13057:	jge    0x13066
   13059:	push   eax
   1305a:	push   0x12f66
   1305f:	call   0x17da2
   13064:	pop    ecx
   13065:	pop    ecx
   13066:	call   DWORD PTR ds:0x1804c
   1306c:	pop    edi
   1306d:	leave  
   1306e:	ret    0x4
   13071:	int3   
   13072:	imul   eax,DWORD PTR [eax],0x65
   13075:	add    BYTE PTR [edx+0x0],dh
   13078:	outs   dx,BYTE PTR ds:[esi]
   13079:	add    BYTE PTR [ebp+0x0],ah
   1307c:	ins    BYTE PTR es:[edi],dx
   1307d:	add    BYTE PTR [ebx],dh
   1307f:	add    BYTE PTR [edx],dh
   13081:	add    BYTE PTR [esi],ch
   13083:	add    BYTE PTR [eax+eax*1+0x6c],ah
   13087:	add    BYTE PTR [eax+eax*1+0x0],ch
   1308b:	add    BYTE PTR [eax],al
   1308d:	add    BYTE PTR [edi+ebp*2+0x61],cl
   13091:	fs dec esp
   13093:	imul   esp,DWORD PTR [edx+0x72],0x57797261
   1309a:	add    BYTE PTR [eax],al
   1309c:	add    BYTE PTR [eax],al
   1309e:	dec    esp
   1309f:	outs   dx,DWORD PTR ds:[esi]
   130a0:	popa   
   130a1:	fs dec esp
   130a3:	imul   esp,DWORD PTR [edx+0x72],0x20797261
   130aa:	popa   
   130ab:	fs fs jb 0x130cf
   130af:	cmp    ah,BYTE PTR [eax]
   130b1:	xor    BYTE PTR [eax+0x25],bh
   130b4:	cmp    BYTE PTR cs:[eax+0xa],bh
   130b8:	add    BYTE PTR [eax],al
   130ba:	inc    ebx
   130bb:	jb     0x13122
   130bd:	popa   
   130be:	je     0x13125
   130c0:	push   esp
   130c1:	push   0x64616572
   130c6:	add    BYTE PTR [eax],al
   130c8:	add    BYTE PTR [eax],al
   130ca:	inc    ebx
   130cb:	jb     0x13132
   130cd:	popa   
   130ce:	je     0x13135
   130d0:	push   esp
   130d1:	push   0x64616572
   130d6:	and    BYTE PTR [ecx+0x64],ah
   130d9:	fs jb  0x130fc
   130dc:	cmp    ah,BYTE PTR [eax]
   130de:	xor    BYTE PTR [eax+0x25],bh
   130e1:	cmp    BYTE PTR cs:[eax+0xa],bh
   130e5:	add    BYTE PTR [ebx+0x1a1c03d],al
   130eb:	add    BYTE PTR [eax],al
   130ed:	jne    0x13145
   130ef:	push   0x13072
   130f4:	push   DWORD PTR [esp+0x8]
   130f8:	call   0x12408
   130fd:	test   al,al
   130ff:	je     0x13145
   13101:	push   esi
   13102:	mov    esi,DWORD PTR [esp+0x10]
   13106:	push   0x1308e
   1310b:	push   DWORD PTR [esi+0x4]
   1310e:	call   0x12604
   13113:	push   eax
   13114:	push   0x1309e
   13119:	mov    ds:0x1a1c0,eax
   1311e:	call   0x17da2
   13123:	pop    ecx
   13124:	pop    ecx
   13125:	push   0x130ba
   1312a:	push   DWORD PTR [esi+0x4]
   1312d:	call   0x12604
   13132:	push   eax
   13133:	push   0x130ca
   13138:	mov    ds:0x1a1c4,eax
   1313d:	call   0x17da2
   13142:	pop    ecx
   13143:	pop    ecx
   13144:	pop    esi
   13145:	ret    0xc
   13148:	pop    edx
   13149:	ja     0x1319c
   1314b:	jne    0x131b2
   1314d:	jb     0x131c8
   1314f:	dec    ecx
   13150:	outs   dx,BYTE PTR ds:[esi]
   13151:	outs   dx,WORD PTR ds:[esi]
   13153:	jb     0x131c2
   13155:	popa   
   13156:	je     0x131c1
   13158:	outs   dx,DWORD PTR ds:[esi]
   13159:	outs   dx,BYTE PTR ds:[esi]
   1315a:	push   esp
   1315b:	push   0x64616572
   13160:	sub    BYTE PTR [ecx],ch
   13162:	and    BYTE PTR [ebp+0x52],al
   13165:	push   edx
   13166:	dec    edi
   13167:	push   edx
   13168:	and    BYTE PTR [edx],bh
   1316a:	and    BYTE PTR [eax],dh
   1316c:	js     0x13193
   1316e:	cmp    BYTE PTR cs:[eax+0xa],bh
   13172:	add    BYTE PTR [eax],al
   13174:	pop    edx
   13175:	ja     0x131c8
   13177:	jne    0x131de
   13179:	jb     0x131f4
   1317b:	dec    ecx
   1317c:	outs   dx,BYTE PTR ds:[esi]
   1317d:	outs   dx,WORD PTR ds:[esi]
   1317f:	jb     0x131ee
   13181:	popa   
   13182:	je     0x131ed
   13184:	outs   dx,DWORD PTR ds:[esi]
   13185:	outs   dx,BYTE PTR ds:[esi]
   13186:	push   esp
   13187:	push   0x64616572
   1318c:	sub    BYTE PTR [ecx],ch
   1318e:	and    BYTE PTR [ebp+0x52],al
   13191:	push   edx
   13192:	dec    edi
   13193:	push   edx
   13194:	and    BYTE PTR [edx],bh
   13196:	and    BYTE PTR [eax],dh
   13198:	js     0x131bf
   1319a:	cmp    BYTE PTR cs:[eax+0xa],bh
   1319e:	add    BYTE PTR [eax],al
   131a0:	pop    edx
   131a1:	ja     0x131f4
   131a3:	jne    0x1320a
   131a5:	jb     0x13220
   131a7:	dec    ecx
   131a8:	outs   dx,BYTE PTR ds:[esi]
   131a9:	outs   dx,WORD PTR ds:[esi]
   131ab:	jb     0x1321a
   131ad:	popa   
   131ae:	je     0x13219
   131b0:	outs   dx,DWORD PTR ds:[esi]
   131b1:	outs   dx,BYTE PTR ds:[esi]
   131b2:	push   esp
   131b3:	push   0x64616572
   131b8:	sub    BYTE PTR [ecx],ch
   131ba:	and    BYTE PTR [ebp+0x52],al
   131bd:	push   edx
   131be:	dec    edi
   131bf:	push   edx
   131c0:	and    BYTE PTR [edx],bh
   131c2:	and    BYTE PTR [eax],dh
   131c4:	js     0x131eb
   131c6:	cmp    BYTE PTR cs:[eax+0xa],bh
   131ca:	add    BYTE PTR [eax],al
   131cc:	pop    edx
   131cd:	ja     0x13220
   131cf:	jne    0x13236
   131d1:	jb     0x1324c
   131d3:	dec    ecx
   131d4:	outs   dx,BYTE PTR ds:[esi]
   131d5:	outs   dx,WORD PTR ds:[esi]
   131d7:	jb     0x13246
   131d9:	popa   
   131da:	je     0x13245
   131dc:	outs   dx,DWORD PTR ds:[esi]
   131dd:	outs   dx,BYTE PTR ds:[esi]
   131de:	push   esp
   131df:	push   0x64616572
   131e4:	sub    BYTE PTR [ecx],ch
   131e6:	and    BYTE PTR [ebp+0x52],al
   131e9:	push   edx
   131ea:	dec    edi
   131eb:	push   edx
   131ec:	and    BYTE PTR [edx],bh
   131ee:	and    BYTE PTR [eax],dh
   131f0:	js     0x13217
   131f2:	cmp    BYTE PTR cs:[eax+0xa],bh
   131f6:	add    ah,cl
   131f8:	push   ebp
   131f9:	mov    ebp,esp
   131fb:	sub    esp,0x4c
   131fe:	push   ebx
   131ff:	push   esi
   13200:	push   edi
   13201:	push   DWORD PTR [ebp+0xc]
   13204:	push   DWORD PTR [ebp+0x8]
   13207:	call   DWORD PTR ds:0x1a18c
   1320d:	mov    DWORD PTR [ebp-0x8],eax
   13210:	xor    eax,eax
   13212:	xor    ebx,ebx
   13214:	mov    DWORD PTR [ebp-0x30],ebx
   13217:	lea    edi,[ebp-0x2c]
   1321a:	stos   DWORD PTR es:[edi],eax
   1321b:	stos   DWORD PTR es:[edi],eax
   1321c:	stos   DWORD PTR es:[edi],eax
   1321d:	stos   DWORD PTR es:[edi],eax
   1321e:	xor    eax,eax
   13220:	mov    DWORD PTR [ebp-0x1c],ebx
   13223:	lea    edi,[ebp-0x18]
   13226:	stos   DWORD PTR es:[edi],eax
   13227:	stos   DWORD PTR es:[edi],eax
   13228:	stos   DWORD PTR es:[edi],eax
   13229:	stos   DWORD PTR es:[edi],eax
   1322a:	lea    eax,[ebp-0x30]
   1322d:	push   eax
   1322e:	push   ebx
   1322f:	call   0x124b0
   13234:	mov    BYTE PTR [ebp+0xf],al
   13237:	lea    eax,[ebp-0x1c]
   1323a:	push   eax
   1323b:	push   0x1
   1323d:	call   0x124b0
   13242:	cmp    BYTE PTR [ebp+0xf],bl
   13245:	mov    esi,DWORD PTR ds:0x18068
   1324b:	mov    BYTE PTR [ebp-0x1],al
   1324e:	je     0x132c4
   13250:	cmp    DWORD PTR [ebp-0x30],ebx
   13253:	je     0x132c4
   13255:	push   0x6
   13257:	pop    ecx
   13258:	push   ebx
   13259:	xor    eax,eax
   1325b:	mov    DWORD PTR [ebp-0x4c],ebx
   1325e:	lea    edi,[ebp-0x48]
   13261:	push   0x1c
   13263:	rep stos DWORD PTR es:[edi],eax
   13265:	lea    eax,[ebp-0x4c]
   13268:	push   eax
   13269:	push   ebx
   1326a:	push   DWORD PTR [ebp+0x8]
   1326d:	call   esi
   1326f:	cmp    eax,ebx
   13271:	jge    0x13280
   13273:	push   eax
   13274:	push   0x13148
   13279:	call   0x17da2
   1327e:	pop    ecx
   1327f:	pop    ecx
   13280:	mov    eax,DWORD PTR [ebp-0x30]
   13283:	cmp    DWORD PTR [ebp-0x44],eax
   13286:	jne    0x132c4
   13288:	push   ebx
   13289:	push   0x4
   1328b:	lea    eax,[ebp+0xc]
   1328e:	push   eax
   1328f:	push   0x9
   13291:	push   DWORD PTR [ebp+0x8]
   13294:	mov    DWORD PTR [ebp+0xc],ebx
   13297:	call   esi
   13299:	cmp    eax,ebx
   1329b:	jge    0x132ad
   1329d:	push   eax
   1329e:	push   0x13174
   132a3:	call   0x17da2
   132a8:	pop    ecx
   132a9:	pop    ecx
   132aa:	mov    DWORD PTR [ebp+0xc],ebx
   132ad:	cmp    DWORD PTR [ebp+0xc],ebx
   132b0:	je     0x132c4
   132b2:	lea    eax,[ebp-0x30]
   132b5:	push   eax
   132b6:	push   DWORD PTR [ebp+0xc]
   132b9:	call   0x12886
   132be:	push   ebx
   132bf:	call   0x12578
   132c4:	cmp    BYTE PTR [ebp-0x1],bl
   132c7:	je     0x13347
   132c9:	cmp    DWORD PTR [ebp-0x1c],ebx
   132cc:	je     0x13347
   132ce:	cmp    BYTE PTR [ebp-0xc],bl
   132d1:	jne    0x13347
   132d3:	push   0x6
   132d5:	pop    ecx
   132d6:	push   ebx
   132d7:	xor    eax,eax
   132d9:	mov    DWORD PTR [ebp-0x4c],ebx
   132dc:	lea    edi,[ebp-0x48]
   132df:	push   0x1c
   132e1:	rep stos DWORD PTR es:[edi],eax
   132e3:	lea    eax,[ebp-0x4c]
   132e6:	push   eax
   132e7:	push   ebx
   132e8:	push   DWORD PTR [ebp+0x8]
   132eb:	call   esi
   132ed:	cmp    eax,ebx
   132ef:	jge    0x132fe
   132f1:	push   eax
   132f2:	push   0x131a0
   132f7:	call   0x17da2
   132fc:	pop    ecx
   132fd:	pop    ecx
   132fe:	mov    eax,DWORD PTR [ebp-0x1c]
   13301:	cmp    DWORD PTR [ebp-0x44],eax
   13304:	jne    0x13347
   13306:	push   ebx
   13307:	push   0x4
   13309:	lea    eax,[ebp+0xc]
   1330c:	push   eax
   1330d:	push   0x9
   1330f:	push   DWORD PTR [ebp+0x8]
   13312:	mov    DWORD PTR [ebp+0xc],ebx
   13315:	call   esi
   13317:	cmp    eax,ebx
   13319:	jge    0x1332b
   1331b:	push   eax
   1331c:	push   0x131cc
   13321:	call   0x17da2
   13326:	pop    ecx
   13327:	pop    ecx
   13328:	mov    DWORD PTR [ebp+0xc],ebx
   1332b:	cmp    DWORD PTR [ebp+0xc],ebx
   1332e:	je     0x13347
   13330:	lea    eax,[ebp-0x1c]
   13333:	push   eax
   13334:	push   DWORD PTR [ebp+0xc]
   13337:	call   0x12c32
   1333c:	lea    eax,[ebp-0x1c]
   1333f:	push   eax
   13340:	push   0x1
   13342:	call   0x1252a
   13347:	mov    eax,DWORD PTR [ebp-0x8]
   1334a:	pop    edi
   1334b:	pop    esi
   1334c:	pop    ebx
   1334d:	leave  
   1334e:	ret    0x8
   13351:	int3   
   13352:	push   ebp
   13353:	mov    ebp,esp
   13355:	push   ecx
   13356:	and    DWORD PTR [ebp-0x4],0x0
   1335a:	push   ebx
   1335b:	push   esi
   1335c:	push   edi
   1335d:	mov    esi,0x1000
   13362:	push   0x20736649
   13367:	push   esi
   13368:	push   0x0
   1336a:	call   DWORD PTR ds:0x18024
   13370:	mov    edi,eax
   13372:	test   edi,edi
   13374:	je     0x133a7
   13376:	lea    eax,[ebp-0x4]
   13379:	push   eax
   1337a:	push   esi
   1337b:	push   edi
   1337c:	push   DWORD PTR [ebp+0x8]
   1337f:	call   DWORD PTR ds:0x1806c
   13385:	mov    ebx,eax
   13387:	cmp    ebx,0xc0000004
   1338d:	jne    0x1339a
   1338f:	push   0x0
   13391:	push   edi
   13392:	call   DWORD PTR ds:0x18028
   13398:	add    esi,esi
   1339a:	test   ebx,ebx
   1339c:	jne    0x13362
   1339e:	mov    eax,edi
   133a0:	pop    edi
   133a1:	pop    esi
   133a2:	pop    ebx
   133a3:	leave  
   133a4:	ret    0x4
   133a7:	xor    eax,eax
   133a9:	jmp    0x133a0
   133ab:	int3   
   133ac:	dec    ebx
   133ad:	gs push edi
   133af:	popa   
   133b0:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   133b8:	gs js  0x1340a
   133bb:	bound  ebp,QWORD PTR [edx+0x65]
   133be:	arpl   WORD PTR [eax+ebp*1+0x29],si
   133c2:	and    BYTE PTR [ebp+0x52],al
   133c5:	push   edx
   133c6:	dec    edi
   133c7:	push   edx
   133c8:	and    BYTE PTR [edx],bh
   133ca:	and    BYTE PTR [eax],dh
   133cc:	js     0x133f3
   133ce:	cmp    BYTE PTR cs:[eax+0xa],bh
   133d2:	add    ah,cl
   133d4:	push   0xc
   133d6:	push   0x18198
   133db:	call   0x17d50
   133e0:	mov    eax,DWORD PTR [ebp+0x8]
   133e3:	mov    esi,DWORD PTR [eax*4+0x1a1f0]
   133ea:	mov    DWORD PTR [ebp-0x1c],esi
   133ed:	xor    edi,edi
   133ef:	push   edi
   133f0:	push   edi
   133f1:	push   edi
   133f2:	push   edi
   133f3:	push   0x1a10c
   133f8:	call   DWORD PTR ds:0x18040
   133fe:	cmp    eax,edi
   13400:	jge    0x13413
   13402:	push   eax
   13403:	push   0x133ac
   13408:	call   0x17da2
   1340d:	pop    ecx
   1340e:	pop    ecx
   1340f:	xor    eax,eax
   13411:	jmp    0x1345f
   13413:	mov    DWORD PTR [ebp-0x4],edi
   13416:	mov    ebx,DWORD PTR [ebp+0xc]
   13419:	mov    edi,DWORD PTR ds:0x18078
   1341f:	test   esi,esi
   13421:	je     0x1344f
   13423:	mov    eax,DWORD PTR [ebp+0x8]
   13426:	dec    eax
   13427:	je     0x1343f
   13429:	dec    eax
   1342a:	je     0x13432
   1342c:	dec    eax
   1342d:	je     0x13432
   1342f:	dec    eax
   13430:	jne    0x13444
   13432:	push   ebx
   13433:	lea    eax,[esi+0x8]
   13436:	push   eax
   13437:	call   edi
   13439:	pop    ecx
   1343a:	pop    ecx
   1343b:	test   eax,eax
   1343d:	jmp    0x13442
   1343f:	cmp    DWORD PTR [esi+0x4],ebx
   13442:	je     0x13454
   13444:	mov    esi,DWORD PTR [esi+0x208]
   1344a:	mov    DWORD PTR [ebp-0x1c],esi
   1344d:	jmp    0x1341f
   1344f:	xor    esi,esi
   13451:	mov    DWORD PTR [ebp-0x1c],esi
   13454:	or     DWORD PTR [ebp-0x4],0xffffffff
   13458:	call   0x1346a
   1345d:	mov    eax,esi
   1345f:	call   0x17d8b
   13464:	ret    0x8
   13467:	mov    esi,DWORD PTR [ebp-0x1c]
   1346a:	push   0x0
   1346c:	push   0x1a10c
   13471:	call   DWORD PTR ds:0x1803c
   13477:	ret    
   13478:	dec    ebx
   13479:	gs push edi
   1347b:	popa   
   1347c:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   13484:	gs js  0x134d6
   13487:	bound  ebp,QWORD PTR [edx+0x65]
   1348a:	arpl   WORD PTR [eax+ebp*1+0x29],si
   1348e:	and    BYTE PTR [ebp+0x52],al
   13491:	push   edx
   13492:	dec    edi
   13493:	push   edx
   13494:	and    BYTE PTR [edx],bh
   13496:	and    BYTE PTR [eax],dh
   13498:	js     0x134bf
   1349a:	cmp    BYTE PTR cs:[eax+0xa],bh
   1349e:	add    BYTE PTR [eax],al
   134a0:	push   eax
   134a1:	jb     0x13517
   134a3:	inc    esp
   134a4:	gs ins BYTE PTR es:[edi],dx
   134a6:	push   edx
   134a7:	jne    0x13515
   134a9:	sub    BYTE PTR gs:[ecx],ch
   134ac:	and    BYTE PTR [edx],bh
   134ae:	and    BYTE PTR [edx+0x75],dl
   134b1:	ins    BYTE PTR es:[edi],dx
   134b2:	and    BYTE PTR gs:[esi+0x6f],ch
   134b6:	je     0x134d8
   134b8:	outs   dx,WORD PTR ds:[esi]
   134ba:	jne    0x1352a
   134bc:	or     al,BYTE PTR fs:[eax]
   134bf:	add    BYTE PTR [eax+0x72],dl
   134c2:	je     0x13508
   134c4:	gs ins BYTE PTR es:[edi],dx
   134c6:	push   edx
   134c7:	jne    0x13535
   134c9:	sub    BYTE PTR gs:[ecx],ch
   134cc:	and    BYTE PTR [edx],bh
   134ce:	and    BYTE PTR [eax],dh
   134d0:	js     0x134f7
   134d2:	cmp    BYTE PTR cs:[eax+0x20],bh
   134d6:	sub    BYTE PTR [ecx+edi*2+0x70],dh
   134da:	cmp    ah,BYTE PTR gs:[eax]
   134dd:	and    eax,0x64202964
   134e2:	gs ins BYTE PTR es:[edi],dx
   134e4:	gs je  0x1354c
   134e7:	and    DWORD PTR fs:[edx],ecx
   134ea:	add    ah,cl
   134ec:	push   0x10
   134ee:	push   0x181a8
   134f3:	call   0x17d50
   134f8:	xor    ebx,ebx
   134fa:	mov    BYTE PTR [ebp-0x19],bl
   134fd:	push   ebx
   134fe:	push   ebx
   134ff:	push   ebx
   13500:	push   ebx
   13501:	push   0x1a10c
   13506:	call   DWORD PTR ds:0x18040
   1350c:	cmp    eax,ebx
   1350e:	jge    0x13524
   13510:	push   eax
   13511:	push   0x13478
   13516:	call   0x17da2
   1351b:	pop    ecx
   1351c:	pop    ecx
   1351d:	xor    al,al
   1351f:	jmp    0x135ac
   13524:	mov    DWORD PTR [ebp-0x4],ebx
   13527:	push   DWORD PTR [ebp+0xc]
   1352a:	mov    edi,DWORD PTR [ebp+0x8]
   1352d:	push   edi
   1352e:	call   0x133d4
   13533:	mov    esi,eax
   13535:	mov    DWORD PTR [ebp-0x20],esi
   13538:	cmp    esi,ebx
   1353a:	jne    0x13549
   1353c:	push   0x134a0
   13541:	call   0x17da2
   13546:	pop    ecx
   13547:	jmp    0x135a0
   13549:	lea    ecx,[esi+0x20c]
   1354f:	mov    eax,DWORD PTR [ecx]
   13551:	cmp    eax,ebx
   13553:	je     0x13561
   13555:	mov    edx,DWORD PTR [esi+0x208]
   1355b:	mov    DWORD PTR [eax+0x208],edx
   13561:	lea    eax,[esi+0x208]
   13567:	mov    edx,DWORD PTR [eax]
   13569:	cmp    edx,ebx
   1356b:	je     0x13575
   1356d:	mov    ecx,DWORD PTR [ecx]
   1356f:	mov    DWORD PTR [edx+0x20c],ecx
   13575:	lea    ecx,[edi*4+0x1a1f0]
   1357c:	cmp    DWORD PTR [ecx],esi
   1357e:	jne    0x13584
   13580:	mov    eax,DWORD PTR [eax]
   13582:	mov    DWORD PTR [ecx],eax
   13584:	push   DWORD PTR [esi]
   13586:	push   esi
   13587:	push   0x134c0
   1358c:	call   0x17da2
   13591:	add    esp,0xc
   13594:	push   ebx
   13595:	push   esi
   13596:	call   DWORD PTR ds:0x18028
   1359c:	mov    BYTE PTR [ebp-0x19],0x1
   135a0:	or     DWORD PTR [ebp-0x4],0xffffffff
   135a4:	call   0x135b6
   135a9:	mov    al,BYTE PTR [ebp-0x19]
   135ac:	call   0x17d8b
   135b1:	ret    0x8
   135b4:	xor    ebx,ebx
   135b6:	push   ebx
   135b7:	push   0x1a10c
   135bc:	call   DWORD PTR ds:0x1803c
   135c2:	ret    
   135c3:	int3   
   135c4:	dec    ebx
   135c5:	gs push edi
   135c7:	popa   
   135c8:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   135d0:	gs js  0x13622
   135d3:	bound  ebp,QWORD PTR [edx+0x65]
   135d6:	arpl   WORD PTR [eax+ebp*1+0x29],si
   135da:	and    BYTE PTR [ebp+0x52],al
   135dd:	push   edx
   135de:	dec    edi
   135df:	push   edx
   135e0:	and    BYTE PTR [edx],bh
   135e2:	and    BYTE PTR [eax],dh
   135e4:	js     0x1360b
   135e6:	cmp    BYTE PTR cs:[eax+0xa],bh
   135ea:	add    BYTE PTR [eax],al
   135ec:	push   eax
   135ed:	jb     0x13663
   135ef:	inc    ecx
   135f0:	fs fs push edx
   135f3:	jne    0x13661
   135f5:	sub    BYTE PTR gs:[ecx],ch
   135f8:	and    BYTE PTR [edx],bh
   135fa:	and    BYTE PTR [ecx+0x6c],al
   135fd:	ins    BYTE PTR es:[edi],dx
   135fe:	jb     0x13665
   13600:	popa   
   13601:	fs jns 0x13624
   13604:	gs js  0x13670
   13607:	jae    0x1367d
   13609:	jae    0x13615
   1360b:	add    BYTE PTR [ebp+0x78],al
   1360e:	inc    ecx
   1360f:	ins    BYTE PTR es:[edi],dx
   13610:	ins    BYTE PTR es:[edi],dx
   13611:	outs   dx,DWORD PTR ds:[esi]
   13612:	arpl   WORD PTR [ecx+0x74],sp
   13615:	gs push eax
   13617:	outs   dx,DWORD PTR ds:[esi]
   13618:	outs   dx,DWORD PTR ds:[esi]
   13619:	ins    BYTE PTR es:[edi],dx
   1361a:	sub    BYTE PTR [ecx],ch
   1361c:	and    BYTE PTR [ebp+0x52],al
   1361f:	push   edx
   13620:	dec    edi
   13621:	push   edx
   13622:	or     al,BYTE PTR [eax]
   13624:	push   eax
   13625:	jb     0x1369b
   13627:	inc    ecx
   13628:	fs fs push edx
   1362b:	jne    0x13699
   1362d:	sub    BYTE PTR gs:[ecx],ch
   13630:	and    BYTE PTR [edx],bh
   13632:	and    BYTE PTR [edx+0x75],dl
   13635:	ins    BYTE PTR es:[edi],dx
   13636:	and    BYTE PTR gs:[ecx+0x64],ah
   1363a:	fs gs and DWORD PTR fs:[eax],esp
   1363f:	sub    BYTE PTR [ecx+edi*2+0x70],dh
   13643:	cmp    ah,BYTE PTR gs:[eax]
   13646:	and    eax,0xa2964
   1364b:	int3   
   1364c:	push   0x28
   1364e:	push   0x181b8
   13653:	call   0x17d50
   13658:	mov    BYTE PTR [ebp-0x19],0x0
   1365c:	xor    edi,edi
   1365e:	push   edi
   1365f:	push   edi
   13660:	push   edi
   13661:	push   edi
   13662:	push   0x1a10c
   13667:	call   DWORD PTR ds:0x18040
   1366d:	cmp    eax,edi
   1366f:	jge    0x13685
   13671:	push   eax
   13672:	push   0x135c4
   13677:	call   0x17da2
   1367c:	pop    ecx
   1367d:	pop    ecx
   1367e:	xor    al,al
   13680:	jmp    0x137d9
   13685:	mov    DWORD PTR [ebp-0x4],edi
   13688:	mov    ebx,DWORD PTR [ebp+0xc]
   1368b:	push   ebx
   1368c:	push   DWORD PTR [ebp+0x8]
   1368f:	call   0x133d4
   13694:	mov    DWORD PTR [ebp-0x24],eax
   13697:	cmp    eax,edi
   13699:	je     0x136a2
   1369b:	push   0x135ec
   136a0:	jmp    0x136c1
   136a2:	push   0x20736649
   136a7:	push   0x210
   136ac:	push   edi
   136ad:	call   DWORD PTR ds:0x18024
   136b3:	mov    esi,eax
   136b5:	mov    DWORD PTR [ebp-0x24],esi
   136b8:	cmp    esi,edi
   136ba:	jne    0x136cb
   136bc:	push   0x1360c
   136c1:	call   0x17da2
   136c6:	jmp    0x137cc
   136cb:	mov    ecx,0x84
   136d0:	xor    eax,eax
   136d2:	mov    edi,esi
   136d4:	rep stos DWORD PTR es:[edi],eax
   136d6:	mov    eax,DWORD PTR [ebp+0x8]
   136d9:	dec    eax
   136da:	je     0x1371f
   136dc:	dec    eax
   136dd:	je     0x13706
   136df:	dec    eax
   136e0:	je     0x13706
   136e2:	dec    eax
   136e3:	je     0x13706
   136e5:	push   0x0
   136e7:	push   esi
   136e8:	call   DWORD PTR ds:0x18028
   136ee:	jmp    0x137cd
   136f3:	mov    eax,ecx
   136f5:	push   eax
   136f6:	push   ebx
   136f7:	lea    eax,[esi+0x8]
   136fa:	push   eax
   136fb:	call   DWORD PTR ds:0x1807c
   13701:	add    esp,0xc
   13704:	jmp    0x13728
   13706:	push   ebx
   13707:	mov    edi,DWORD PTR ds:0x18034
   1370d:	call   edi
   1370f:	pop    ecx
   13710:	mov    ecx,0xff
   13715:	cmp    eax,ecx
   13717:	jae    0x136f3
   13719:	push   ebx
   1371a:	call   edi
   1371c:	pop    ecx
   1371d:	jmp    0x136f5
   1371f:	mov    DWORD PTR [esi+0x4],ebx
   13722:	mov    edi,DWORD PTR ds:0x18034
   13728:	mov    eax,DWORD PTR [ebp+0x8]
   1372b:	mov    DWORD PTR [esi],eax
   1372d:	lea    eax,[eax*4+0x1a1f0]
   13734:	mov    ebx,DWORD PTR [eax]
   13736:	test   ebx,ebx
   13738:	je     0x137b8
   1373a:	mov    DWORD PTR [ebp-0x28],ebx
   1373d:	and    DWORD PTR [ebp-0x20],0x0
   13741:	test   ebx,ebx
   13743:	je     0x13783
   13745:	lea    eax,[esi+0x8]
   13748:	mov    DWORD PTR [ebp-0x2c],eax
   1374b:	push   eax
   1374c:	call   edi
   1374e:	mov    WORD PTR [ebp-0x30],ax
   13752:	lea    eax,[ebx+0x8]
   13755:	mov    DWORD PTR [ebp-0x34],eax
   13758:	push   eax
   13759:	call   edi
   1375b:	pop    ecx
   1375c:	pop    ecx
   1375d:	mov    WORD PTR [ebp-0x38],ax
   13761:	push   0x1
   13763:	lea    eax,[ebp-0x30]
   13766:	push   eax
   13767:	lea    eax,[ebp-0x38]
   1376a:	push   eax
   1376b:	call   DWORD PTR ds:0x18038
   13771:	test   eax,eax
   13773:	jge    0x13783
   13775:	mov    DWORD PTR [ebp-0x20],ebx
   13778:	mov    ebx,DWORD PTR [ebx+0x208]
   1377e:	mov    DWORD PTR [ebp-0x28],ebx
   13781:	jmp    0x13741
   13783:	mov    eax,DWORD PTR [ebp-0x20]
   13786:	test   eax,eax
   13788:	je     0x1379e
   1378a:	mov    DWORD PTR [eax+0x208],esi
   13790:	mov    DWORD PTR [esi+0x20c],eax
   13796:	mov    DWORD PTR [esi+0x208],ebx
   1379c:	jmp    0x137ba
   1379e:	mov    eax,DWORD PTR [ebp+0x8]
   137a1:	lea    eax,[eax*4+0x1a1f0]
   137a8:	mov    ecx,DWORD PTR [eax]
   137aa:	mov    DWORD PTR [esi+0x208],ecx
   137b0:	mov    ecx,DWORD PTR [eax]
   137b2:	mov    DWORD PTR [ecx+0x20c],esi
   137b8:	mov    DWORD PTR [eax],esi
   137ba:	push   DWORD PTR [ebp+0x8]
   137bd:	push   0x13624
   137c2:	call   0x17da2
   137c7:	pop    ecx
   137c8:	mov    BYTE PTR [ebp-0x19],0x1
   137cc:	pop    ecx
   137cd:	or     DWORD PTR [ebp-0x4],0xffffffff
   137d1:	call   0x137e1
   137d6:	mov    al,BYTE PTR [ebp-0x19]
   137d9:	call   0x17d8b
   137de:	ret    0x8
   137e1:	push   0x0
   137e3:	push   0x1a10c
   137e8:	call   DWORD PTR ds:0x1803c
   137ee:	ret    
   137ef:	int3   
   137f0:	push   esi
   137f1:	mov    esi,ecx
   137f3:	lea    ecx,[esi+0x8]
   137f6:	call   0x1745c
   137fb:	lea    ecx,[esi+0x4]
   137fe:	call   0x1745c
   13803:	mov    ecx,esi
   13805:	pop    esi
   13806:	jmp    0x1745c
   1380b:	int3   
   1380c:	push   esi
   1380d:	push   edi
   1380e:	mov    edi,DWORD PTR [esp+0xc]
   13812:	push   edi
   13813:	mov    esi,ecx
   13815:	call   0x17466
   1381a:	lea    eax,[edi+0x4]
   1381d:	push   eax
   1381e:	lea    ecx,[esi+0x4]
   13821:	call   0x17466
   13826:	lea    eax,[edi+0x8]
   13829:	push   eax
   1382a:	lea    ecx,[esi+0x8]
   1382d:	call   0x17466
   13832:	mov    eax,DWORD PTR [edi+0xc]
   13835:	mov    DWORD PTR [esi+0xc],eax
   13838:	mov    eax,DWORD PTR [edi+0x10]
   1383b:	mov    DWORD PTR [esi+0x10],eax
   1383e:	mov    eax,DWORD PTR [edi+0x14]
   13841:	mov    DWORD PTR [esi+0x14],eax
   13844:	pop    edi
   13845:	mov    eax,esi
   13847:	pop    esi
   13848:	ret    0x4
   1384b:	int3   
   1384c:	push   esi
   1384d:	mov    esi,ecx
   1384f:	lea    ecx,[esi+0x8]
   13852:	call   0x137f0
   13857:	mov    ecx,esi
   13859:	pop    esi
   1385a:	jmp    0x1745c
   1385f:	int3   
   13860:	push   esi
   13861:	push   edi
   13862:	mov    edi,DWORD PTR [esp+0xc]
   13866:	push   edi
   13867:	mov    esi,ecx
   13869:	call   0x17550
   1386e:	lea    eax,[edi+0x4]
   13871:	push   eax
   13872:	lea    ecx,[esi+0x4]
   13875:	call   0x17550
   1387a:	lea    eax,[edi+0x8]
   1387d:	push   eax
   1387e:	lea    ecx,[esi+0x8]
   13881:	call   0x17550
   13886:	mov    eax,DWORD PTR [edi+0xc]
   13889:	mov    DWORD PTR [esi+0xc],eax
   1388c:	mov    eax,DWORD PTR [edi+0x10]
   1388f:	mov    DWORD PTR [esi+0x10],eax
   13892:	mov    eax,DWORD PTR [edi+0x14]
   13895:	mov    DWORD PTR [esi+0x14],eax
   13898:	pop    edi
   13899:	mov    eax,esi
   1389b:	pop    esi
   1389c:	ret    0x4
   1389f:	int3   
   138a0:	mov    eax,DWORD PTR [esp+0x4]
   138a4:	mov    edx,DWORD PTR ds:0x1a210
   138aa:	jmp    0x138ae
   138ac:	mov    eax,ecx
   138ae:	mov    ecx,DWORD PTR [eax+0x8]
   138b1:	cmp    ecx,edx
   138b3:	jne    0x138ac
   138b5:	ret    0x4
   138b8:	mov    eax,DWORD PTR [esp+0x4]
   138bc:	mov    edx,DWORD PTR ds:0x1a210
   138c2:	jmp    0x138c6
   138c4:	mov    eax,ecx
   138c6:	mov    ecx,DWORD PTR [eax]
   138c8:	cmp    ecx,edx
   138ca:	jne    0x138c4
   138cc:	ret    0x4
   138cf:	int3   
   138d0:	mov    eax,DWORD PTR [esp+0x4]
   138d4:	mov    edx,DWORD PTR ds:0x1a214
   138da:	jmp    0x138de
   138dc:	mov    eax,ecx
   138de:	mov    ecx,DWORD PTR [eax+0x8]
   138e1:	cmp    ecx,edx
   138e3:	jne    0x138dc
   138e5:	ret    0x4
   138e8:	mov    eax,DWORD PTR [esp+0x4]
   138ec:	mov    edx,DWORD PTR ds:0x1a214
   138f2:	jmp    0x138f6
   138f4:	mov    eax,ecx
   138f6:	mov    ecx,DWORD PTR [eax]
   138f8:	cmp    ecx,edx
   138fa:	jne    0x138f4
   138fc:	ret    0x4
   138ff:	int3   
   13900:	mov    edx,DWORD PTR [esp+0x4]
   13904:	mov    eax,DWORD PTR [edx+0x8]
   13907:	push   esi
   13908:	mov    esi,DWORD PTR [eax]
   1390a:	mov    DWORD PTR [edx+0x8],esi
   1390d:	mov    esi,DWORD PTR [eax]
   1390f:	cmp    esi,DWORD PTR ds:0x1a218
   13915:	je     0x1391a
   13917:	mov    DWORD PTR [esi+0x4],edx
   1391a:	mov    esi,DWORD PTR [edx+0x4]
   1391d:	mov    DWORD PTR [eax+0x4],esi
   13920:	mov    ecx,DWORD PTR [ecx+0x4]
   13923:	cmp    edx,DWORD PTR [ecx+0x4]
   13926:	pop    esi
   13927:	jne    0x1392e
   13929:	mov    DWORD PTR [ecx+0x4],eax
   1392c:	jmp    0x1393c
   1392e:	mov    ecx,DWORD PTR [edx+0x4]
   13931:	cmp    edx,DWORD PTR [ecx]
   13933:	jne    0x13939
   13935:	mov    DWORD PTR [ecx],eax
   13937:	jmp    0x1393c
   13939:	mov    DWORD PTR [ecx+0x8],eax
   1393c:	mov    DWORD PTR [eax],edx
   1393e:	mov    DWORD PTR [edx+0x4],eax
   13941:	ret    0x4
   13944:	mov    eax,DWORD PTR [esp+0x4]
   13948:	mov    edx,DWORD PTR ds:0x1a218
   1394e:	jmp    0x13952
   13950:	mov    eax,ecx
   13952:	mov    ecx,DWORD PTR [eax+0x8]
   13955:	cmp    ecx,edx
   13957:	jne    0x13950
   13959:	ret    0x4
   1395c:	mov    edx,DWORD PTR [esp+0x4]
   13960:	mov    eax,DWORD PTR [edx]
   13962:	push   esi
   13963:	mov    esi,DWORD PTR [eax+0x8]
   13966:	mov    DWORD PTR [edx],esi
   13968:	mov    esi,DWORD PTR [eax+0x8]
   1396b:	cmp    esi,DWORD PTR ds:0x1a218
   13971:	je     0x13976
   13973:	mov    DWORD PTR [esi+0x4],edx
   13976:	mov    esi,DWORD PTR [edx+0x4]
   13979:	mov    DWORD PTR [eax+0x4],esi
   1397c:	mov    ecx,DWORD PTR [ecx+0x4]
   1397f:	cmp    edx,DWORD PTR [ecx+0x4]
   13982:	pop    esi
   13983:	jne    0x1398a
   13985:	mov    DWORD PTR [ecx+0x4],eax
   13988:	jmp    0x13999
   1398a:	mov    ecx,DWORD PTR [edx+0x4]
   1398d:	cmp    edx,DWORD PTR [ecx+0x8]
   13990:	jne    0x13997
   13992:	mov    DWORD PTR [ecx+0x8],eax
   13995:	jmp    0x13999
   13997:	mov    DWORD PTR [ecx],eax
   13999:	mov    DWORD PTR [eax+0x8],edx
   1399c:	mov    DWORD PTR [edx+0x4],eax
   1399f:	ret    0x4
   139a2:	push   esi
   139a3:	mov    esi,ecx
   139a5:	mov    ecx,DWORD PTR [esi]
   139a7:	cmp    DWORD PTR [ecx+0x30],0x0
   139ab:	jne    0x139ba
   139ad:	mov    eax,DWORD PTR [ecx+0x4]
   139b0:	cmp    DWORD PTR [eax+0x4],ecx
   139b3:	jne    0x139ba
   139b5:	mov    eax,DWORD PTR [ecx+0x8]
   139b8:	jmp    0x139d7
   139ba:	mov    eax,DWORD PTR [ecx]
   139bc:	cmp    eax,DWORD PTR ds:0x1a218
   139c2:	je     0x139d0
   139c4:	push   eax
   139c5:	call   0x13944
   139ca:	jmp    0x139d7
   139cc:	mov    DWORD PTR [esi],eax
   139ce:	mov    ecx,eax
   139d0:	mov    eax,DWORD PTR [ecx+0x4]
   139d3:	cmp    ecx,DWORD PTR [eax]
   139d5:	je     0x139cc
   139d7:	mov    DWORD PTR [esi],eax
   139d9:	pop    esi
   139da:	ret    
   139db:	int3   
   139dc:	mov    eax,DWORD PTR [esp+0x4]
   139e0:	mov    edx,DWORD PTR ds:0x1a21c
   139e6:	jmp    0x139ea
   139e8:	mov    eax,ecx
   139ea:	mov    ecx,DWORD PTR [eax+0x8]
   139ed:	cmp    ecx,edx
   139ef:	jne    0x139e8
   139f1:	ret    0x4
   139f4:	mov    eax,DWORD PTR [esp+0x4]
   139f8:	mov    edx,DWORD PTR ds:0x1a21c
   139fe:	jmp    0x13a02
   13a00:	mov    eax,ecx
   13a02:	mov    ecx,DWORD PTR [eax]
   13a04:	cmp    ecx,edx
   13a06:	jne    0x13a00
   13a08:	ret    0x4
   13a0b:	int3   
   13a0c:	push   esi
   13a0d:	mov    esi,ecx
   13a0f:	mov    ecx,DWORD PTR [esi]
   13a11:	cmp    DWORD PTR [ecx+0x14],0x0
   13a15:	jne    0x13a24
   13a17:	mov    eax,DWORD PTR [ecx+0x4]
   13a1a:	cmp    DWORD PTR [eax+0x4],ecx
   13a1d:	jne    0x13a24
   13a1f:	mov    eax,DWORD PTR [ecx+0x8]
   13a22:	jmp    0x13a41
   13a24:	mov    eax,DWORD PTR [ecx]
   13a26:	cmp    eax,DWORD PTR ds:0x1a21c
   13a2c:	je     0x13a3a
   13a2e:	push   eax
   13a2f:	call   0x139dc
   13a34:	jmp    0x13a41
   13a36:	mov    DWORD PTR [esi],eax
   13a38:	mov    ecx,eax
   13a3a:	mov    eax,DWORD PTR [ecx+0x4]
   13a3d:	cmp    ecx,DWORD PTR [eax]
   13a3f:	je     0x13a36
   13a41:	mov    DWORD PTR [esi],eax
   13a43:	pop    esi
   13a44:	ret    
   13a45:	int3   
   13a46:	push   esi
   13a47:	mov    esi,ecx
   13a49:	mov    ecx,DWORD PTR [esi]
   13a4b:	cmp    DWORD PTR [ecx+0x38],0x0
   13a4f:	jne    0x13a5e
   13a51:	mov    eax,DWORD PTR [ecx+0x4]
   13a54:	cmp    DWORD PTR [eax+0x4],ecx
   13a57:	jne    0x13a5e
   13a59:	mov    eax,DWORD PTR [ecx+0x8]
   13a5c:	jmp    0x13a7b
   13a5e:	mov    eax,DWORD PTR [ecx]
   13a60:	cmp    eax,DWORD PTR ds:0x1a214
   13a66:	je     0x13a74
   13a68:	push   eax
   13a69:	call   0x138d0
   13a6e:	jmp    0x13a7b
   13a70:	mov    DWORD PTR [esi],eax
   13a72:	mov    ecx,eax
   13a74:	mov    eax,DWORD PTR [ecx+0x4]
   13a77:	cmp    ecx,DWORD PTR [eax]
   13a79:	je     0x13a70
   13a7b:	mov    DWORD PTR [esi],eax
   13a7d:	pop    esi
   13a7e:	ret    
   13a7f:	int3   
   13a80:	push   esi
   13a81:	mov    esi,ecx
   13a83:	mov    ecx,DWORD PTR [esi]
   13a85:	mov    eax,DWORD PTR [ecx+0x8]
   13a88:	cmp    eax,DWORD PTR ds:0x1a21c
   13a8e:	je     0x13a9c
   13a90:	push   eax
   13a91:	call   0x139f4
   13a96:	jmp    0x13aab
   13a98:	mov    DWORD PTR [esi],eax
   13a9a:	mov    ecx,eax
   13a9c:	mov    eax,DWORD PTR [ecx+0x4]
   13a9f:	cmp    ecx,DWORD PTR [eax+0x8]
   13aa2:	je     0x13a98
   13aa4:	mov    ecx,DWORD PTR [esi]
   13aa6:	cmp    DWORD PTR [ecx+0x8],eax
   13aa9:	je     0x13aad
   13aab:	mov    DWORD PTR [esi],eax
   13aad:	pop    esi
   13aae:	ret    
   13aaf:	int3   
   13ab0:	push   esi
   13ab1:	push   edi
   13ab2:	mov    edi,DWORD PTR [esp+0xc]
   13ab6:	push   edi
   13ab7:	mov    esi,ecx
   13ab9:	call   0x13860
   13abe:	mov    eax,DWORD PTR [edi+0x18]
   13ac1:	mov    DWORD PTR [esi+0x18],eax
   13ac4:	pop    edi
   13ac5:	mov    eax,esi
   13ac7:	pop    esi
   13ac8:	ret    0x4
   13acb:	int3   
   13acc:	push   esi
   13acd:	push   edi
   13ace:	mov    edi,DWORD PTR [esp+0xc]
   13ad2:	push   edi
   13ad3:	mov    esi,ecx
   13ad5:	call   0x17550
   13ada:	add    edi,0x8
   13add:	push   edi
   13ade:	lea    ecx,[esi+0x8]
   13ae1:	call   0x13860
   13ae6:	pop    edi
   13ae7:	mov    eax,esi
   13ae9:	pop    esi
   13aea:	ret    0x4
   13aed:	int3   
   13aee:	push   esi
   13aef:	push   DWORD PTR [esp+0x8]
   13af3:	mov    esi,ecx
   13af5:	call   0x17550
   13afa:	push   DWORD PTR [esp+0xc]
   13afe:	lea    ecx,[esi+0x8]
   13b01:	call   0x13ab0
   13b06:	mov    eax,esi
   13b08:	pop    esi
   13b09:	ret    0x8
   13b0c:	mov    eax,ecx
   13b0e:	mov    ecx,DWORD PTR [esp+0x4]
   13b12:	mov    edx,DWORD PTR [ecx]
   13b14:	test   edx,edx
   13b16:	je     0x13b1f
   13b18:	mov    DWORD PTR [eax],edx
   13b1a:	inc    DWORD PTR [edx+0x4]
   13b1d:	jmp    0x13b22
   13b1f:	and    DWORD PTR [eax],0x0
   13b22:	ret    0x4
   13b25:	int3   
   13b26:	push   esi
   13b27:	mov    esi,ecx
   13b29:	mov    eax,DWORD PTR [esi]
   13b2b:	test   eax,eax
   13b2d:	je     0x13b3b
   13b2f:	dec    DWORD PTR [eax+0x4]
   13b32:	jne    0x13b3b
   13b34:	push   eax
   13b35:	call   0x1206c
   13b3a:	pop    ecx
   13b3b:	mov    eax,DWORD PTR [esp+0x8]
   13b3f:	mov    eax,DWORD PTR [eax]
   13b41:	mov    DWORD PTR [esi],eax
   13b43:	inc    DWORD PTR [eax+0x4]
   13b46:	mov    eax,esi
   13b48:	pop    esi
   13b49:	ret    0x4
   13b4c:	mov    eax,DWORD PTR [ecx]
   13b4e:	test   eax,eax
   13b50:	je     0x13b5e
   13b52:	dec    DWORD PTR [eax+0x4]
   13b55:	jne    0x13b5e
   13b57:	push   eax
   13b58:	call   0x1206c
   13b5d:	pop    ecx
   13b5e:	ret    
   13b5f:	int3   
   13b60:	push   ebx
   13b61:	push   esi
   13b62:	mov    esi,DWORD PTR [esp+0x10]
   13b66:	mov    ebx,ecx
   13b68:	and    DWORD PTR [ebx+0x4],0x0
   13b6c:	lea    eax,[esi+0x1]
   13b6f:	push   edi
   13b70:	push   eax
   13b71:	mov    DWORD PTR [ebx+0x8],esi
   13b74:	call   0x12044
   13b79:	pop    ecx
   13b7a:	mov    ecx,esi
   13b7c:	mov    esi,DWORD PTR [esp+0x10]
   13b80:	mov    edx,ecx
   13b82:	shr    ecx,0x2
   13b85:	mov    edi,eax
   13b87:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   13b89:	mov    ecx,edx
   13b8b:	and    ecx,0x3
   13b8e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   13b90:	inc    DWORD PTR [ebx+0x4]
   13b93:	pop    edi
   13b94:	mov    DWORD PTR [ebx],eax
   13b96:	pop    esi
   13b97:	mov    eax,ebx
   13b99:	pop    ebx
   13b9a:	ret    0x8
   13b9d:	int3   
   13b9e:	push   ebp
   13b9f:	mov    ebp,esp
   13ba1:	sub    esp,0x18
   13ba4:	lea    eax,[ebp-0x18]
   13ba7:	push   eax
   13ba8:	push   DWORD PTR [ebp+0x8]
   13bab:	call   0x124b0
   13bb0:	test   al,al
   13bb2:	je     0x13c1f
   13bb4:	lea    eax,[ebp-0x4]
   13bb7:	push   eax
   13bb8:	push   DWORD PTR [ebp+0xc]
   13bbb:	call   DWORD PTR ds:0x18058
   13bc1:	test   eax,eax
   13bc3:	jl     0x13c1f
   13bc5:	push   esi
   13bc6:	push   0x5
   13bc8:	call   0x13352
   13bcd:	mov    esi,eax
   13bcf:	test   esi,esi
   13bd1:	je     0x13c1e
   13bd3:	mov    edx,DWORD PTR [ebp+0x10]
   13bd6:	cmp    DWORD PTR [esi+0x44],edx
   13bd9:	je     0x13be8
   13bdb:	mov    ecx,DWORD PTR [eax]
   13bdd:	test   ecx,ecx
   13bdf:	je     0x13c0c
   13be1:	add    eax,ecx
   13be3:	cmp    DWORD PTR [eax+0x44],edx
   13be6:	jne    0x13bdb
   13be8:	cmp    DWORD PTR [eax+0x4],0x0
   13bec:	je     0x13c0c
   13bee:	mov    ecx,DWORD PTR [eax+0xd8]
   13bf4:	mov    eax,DWORD PTR [eax+0xdc]
   13bfa:	mov    DWORD PTR [ebp-0x14],eax
   13bfd:	lea    eax,[ebp-0x18]
   13c00:	push   eax
   13c01:	push   DWORD PTR [ebp+0x8]
   13c04:	mov    DWORD PTR [ebp-0x18],ecx
   13c07:	call   0x1252a
   13c0c:	mov    ecx,DWORD PTR [ebp-0x4]
   13c0f:	call   DWORD PTR ds:0x1800c
   13c15:	push   0x0
   13c17:	push   esi
   13c18:	call   DWORD PTR ds:0x18028
   13c1e:	pop    esi
   13c1f:	leave  
   13c20:	ret    0x10
   13c23:	int3   
   13c24:	pop    edx
   13c25:	ja     0x13c76
   13c27:	jo     0x13c8e
   13c29:	outs   dx,BYTE PTR ds:[esi]
   13c2a:	push   eax
   13c2b:	jb     0x13c9c
   13c2d:	arpl   WORD PTR [ebp+0x73],sp
   13c30:	jae    0x13c5a
   13c32:	sub    DWORD PTR [eax],esp
   13c34:	inc    ebp
   13c35:	push   edx
   13c36:	push   edx
   13c37:	dec    edi
   13c38:	push   edx
   13c39:	and    BYTE PTR [edx],bh
   13c3b:	and    BYTE PTR [eax],dh
   13c3d:	js     0x13c64
   13c3f:	cmp    BYTE PTR cs:[eax+0xa],bh
   13c43:	add    BYTE PTR [edi+0x65],al
   13c46:	je     0x13c98
   13c48:	jb     0x13cb9
   13c4a:	arpl   WORD PTR [ebp+0x73],sp
   13c4d:	jae    0x13c98
   13c4f:	ins    DWORD PTR es:[edi],dx
   13c50:	popa   
   13c51:	addr16 gs dec esi
   13c54:	popa   
   13c55:	ins    DWORD PTR es:[edi],dx
   13c56:	sub    BYTE PTR gs:[ecx],ch
   13c59:	and    BYTE PTR [ebp+0x52],al
   13c5c:	push   edx
   13c5d:	dec    edi
   13c5e:	push   edx
   13c5f:	and    BYTE PTR [edx],bh
   13c61:	and    BYTE PTR [eax],dh
   13c63:	js     0x13c8a
   13c65:	cmp    BYTE PTR cs:[eax+0xa],bh
   13c69:	add    BYTE PTR [eax],al
   13c6b:	add    BYTE PTR [edi+0x6e],cl
   13c6e:	inc    ebx
   13c6f:	jb     0x13cd6
   13c71:	popa   
   13c72:	je     0x13cd9
   13c74:	push   eax
   13c75:	jb     0x13ce6
   13c77:	arpl   WORD PTR [ebp+0x73],sp
   13c7a:	jae    0x13cca
   13c7c:	outs   dx,DWORD PTR ds:[esi]
   13c7d:	je     0x13ce8
   13c7f:	data16 jns 0x13cbc
   13c82:	and    BYTE PTR [eax],dh
   13c84:	js     0x13cab
   13c86:	cmp    BYTE PTR cs:[eax+0x2c],bh
   13c8a:	and    BYTE PTR ds:0xa2053,ah
   13c90:	ja     0x13c92
   13c92:	imul   eax,DWORD PTR [eax],0x6c006e
   13c98:	outs   dx,DWORD PTR ds:[esi]
   13c99:	add    BYTE PTR [edi+0x0],ah
   13c9c:	outs   dx,DWORD PTR ds:[esi]
   13c9d:	add    BYTE PTR [esi+0x0],ch
   13ca0:	add    BYTE PTR cs:[ebp+0x0],ah
   13ca4:	js     0x13ca6
   13ca6:	add    BYTE PTR gs:[eax],al
   13ca9:	add    BYTE PTR [ebp-0x73],dl
   13cac:	lods   al,BYTE PTR ds:[esi]
   13cad:	and    al,0x50
   13caf:	(bad)  
   13cb0:	(bad)  
   13cb1:	inc    DWORD PTR [ecx+0x230ec]
   13cb7:	add    BYTE PTR [ecx+0x1a0cc],ah
   13cbd:	push   ebx
   13cbe:	push   esi
   13cbf:	push   edi
   13cc0:	mov    esi,DWORD PTR [ebp+0x1bc]
   13cc6:	mov    DWORD PTR [ebp+0x1ac],eax
   13ccc:	xor    eax,eax
   13cce:	xor    ebx,ebx
   13cd0:	lea    edi,[ebp-0x5e]
   13cd3:	stos   DWORD PTR es:[edi],eax
   13cd4:	stos   WORD PTR es:[edi],ax
   13cd6:	push   0x7f
   13cd8:	pop    ecx
   13cd9:	xor    eax,eax
   13cdb:	mov    WORD PTR [ebp-0x54],bx
   13cdf:	lea    edi,[ebp-0x52]
   13ce2:	rep stos DWORD PTR es:[edi],eax
   13ce4:	lea    eax,[ebp-0x54]
   13ce7:	mov    DWORD PTR [ebp-0x5c],eax
   13cea:	lea    eax,[ebp-0x68]
   13ced:	push   eax
   13cee:	lea    eax,[ebp-0x80]
   13cf1:	push   eax
   13cf2:	push   0x1f0fff
   13cf7:	lea    eax,[ebp-0x58]
   13cfa:	push   eax
   13cfb:	mov    DWORD PTR [ebp-0x58],ebx
   13cfe:	mov    WORD PTR [ebp-0x60],bx
   13d02:	mov    WORD PTR [ebp-0x5e],0x1fe
   13d08:	mov    DWORD PTR [ebp-0x80],0x18
   13d0f:	mov    DWORD PTR [ebp-0x7c],ebx
   13d12:	mov    DWORD PTR [ebp-0x74],0x200
   13d19:	mov    DWORD PTR [ebp-0x78],ebx
   13d1c:	mov    DWORD PTR [ebp-0x70],ebx
   13d1f:	mov    DWORD PTR [ebp-0x6c],ebx
   13d22:	mov    DWORD PTR [ebp-0x68],esi
   13d25:	mov    DWORD PTR [ebp-0x64],ebx
   13d28:	call   DWORD PTR ds:0x18060
   13d2e:	cmp    eax,ebx
   13d30:	jge    0x13d44
   13d32:	push   eax
   13d33:	push   0x13c24
   13d38:	call   0x17da2
   13d3d:	pop    ecx
   13d3e:	pop    ecx
   13d3f:	jmp    0x13df9
   13d44:	lea    eax,[ebp-0x60]
   13d47:	push   eax
   13d48:	push   DWORD PTR [ebp-0x58]
   13d4b:	call   0x120c6
   13d50:	cmp    eax,ebx
   13d52:	jge    0x13d66
   13d54:	push   eax
   13d55:	push   0x13c44
   13d5a:	call   0x17da2
   13d5f:	pop    ecx
   13d60:	pop    ecx
   13d61:	jmp    0x13df0
   13d66:	movzx  eax,WORD PTR [ebp-0x60]
   13d6a:	shr    eax,1
   13d6c:	mov    WORD PTR [ebp+eax*2-0x54],bx
   13d71:	lea    eax,[ebp-0x54]
   13d74:	push   eax
   13d75:	push   DWORD PTR [ebp-0x58]
   13d78:	call   0x12180
   13d7d:	push   eax
   13d7e:	push   0x13c6c
   13d83:	call   0x17da2
   13d88:	add    esp,0xc
   13d8b:	cmp    BYTE PTR [ebp+0x1c0],bl
   13d91:	je     0x13df0
   13d93:	lea    eax,[ebp-0x54]
   13d96:	push   eax
   13d97:	call   0x121a8
   13d9c:	test   al,al
   13d9e:	jne    0x13dba
   13da0:	lea    eax,[ebp-0x54]
   13da3:	push   eax
   13da4:	call   0x1228c
   13da9:	test   al,al
   13dab:	jne    0x13dba
   13dad:	lea    eax,[ebp-0x54]
   13db0:	push   eax
   13db1:	call   0x1235e
   13db6:	test   al,al
   13db8:	je     0x13dca
   13dba:	push   DWORD PTR [ebp-0x58]
   13dbd:	push   DWORD PTR [ebp-0x58]
   13dc0:	call   0x12180
   13dc5:	push   eax
   13dc6:	push   esi
   13dc7:	push   ebx
   13dc8:	jmp    0x13deb
   13dca:	push   0x13c90
   13dcf:	lea    eax,[ebp-0x60]
   13dd2:	push   eax
   13dd3:	call   0x12408
   13dd8:	test   al,al
   13dda:	je     0x13df0
   13ddc:	push   DWORD PTR [ebp-0x58]
   13ddf:	push   DWORD PTR [ebp-0x58]
   13de2:	call   0x12180
   13de7:	push   eax
   13de8:	push   esi
   13de9:	push   0x1
   13deb:	call   0x13b9e
   13df0:	push   DWORD PTR [ebp-0x58]
   13df3:	call   DWORD PTR ds:0x18070
   13df9:	mov    ecx,DWORD PTR [ebp+0x1ac]
   13dff:	pop    edi
   13e00:	pop    esi
   13e01:	pop    ebx
   13e02:	call   0x17d41
   13e07:	add    ebp,0x1b0
   13e0d:	leave  
   13e0e:	ret    0xc
   13e11:	int3   
   13e12:	push   ecx
   13e13:	cli    
   13e14:	mov    eax,cr0
   13e17:	mov    DWORD PTR [esp],eax
   13e1a:	and    eax,0xfffeffff
   13e1f:	mov    cr0,eax
   13e22:	push   0x131f8
   13e27:	push   DWORD PTR ds:0x1a188
   13e2d:	call   0x17626
   13e32:	push   0x0
   13e34:	push   0x13caa
   13e39:	mov    ds:0x1a18c,eax
   13e3e:	call   0x17dba
   13e43:	push   0x130e6
   13e48:	call   0x17db4
   13e4d:	mov    eax,DWORD PTR [esp]
   13e50:	mov    cr0,eax
   13e53:	sti    
   13e54:	pop    ecx
   13e55:	ret    
   13e56:	push   esi
   13e57:	mov    esi,DWORD PTR [esp+0x8]
   13e5b:	push   edi
   13e5c:	mov    edi,ecx
   13e5e:	cmp    edi,esi
   13e60:	je     0x13e8d
   13e62:	mov    eax,DWORD PTR [edi+0x4]
   13e65:	cmp    eax,DWORD PTR [esi+0x4]
   13e68:	je     0x13e7c
   13e6a:	cmp    BYTE PTR [edi],0x0
   13e6d:	je     0x13e76
   13e6f:	push   eax
   13e70:	call   0x1206c
   13e75:	pop    ecx
   13e76:	mov    al,BYTE PTR [esi]
   13e78:	mov    BYTE PTR [edi],al
   13e7a:	jmp    0x13e84
   13e7c:	cmp    BYTE PTR [esi],0x0
   13e7f:	je     0x13e84
   13e81:	mov    BYTE PTR [edi],0x1
   13e84:	mov    eax,DWORD PTR [esi+0x4]
   13e87:	mov    BYTE PTR [esi],0x0
   13e8a:	mov    DWORD PTR [edi+0x4],eax
   13e8d:	mov    eax,edi
   13e8f:	pop    edi
   13e90:	pop    esi
   13e91:	ret    0x4
   13e94:	push   esi
   13e95:	push   DWORD PTR [esp+0x8]
   13e99:	mov    esi,ecx
   13e9b:	call   0x17550
   13ea0:	push   DWORD PTR [esp+0xc]
   13ea4:	lea    ecx,[esi+0x8]
   13ea7:	call   0x13860
   13eac:	mov    eax,esi
   13eae:	pop    esi
   13eaf:	ret    0x8
   13eb2:	mov    eax,DWORD PTR [esp+0x4]
   13eb6:	mov    eax,DWORD PTR [eax]
   13eb8:	push   esi
   13eb9:	push   DWORD PTR [esp+0xc]
   13ebd:	mov    esi,ecx
   13ebf:	lea    ecx,[esi+0x4]
   13ec2:	mov    DWORD PTR [esi],eax
   13ec4:	call   0x13b0c
   13ec9:	mov    eax,esi
   13ecb:	pop    esi
   13ecc:	ret    0x8
   13ecf:	int3   
   13ed0:	mov    eax,DWORD PTR [esp+0x4]
   13ed4:	mov    edx,DWORD PTR ds:0x1a218
   13eda:	jmp    0x13ede
   13edc:	mov    eax,ecx
   13ede:	mov    ecx,DWORD PTR [eax]
   13ee0:	cmp    ecx,edx
   13ee2:	jne    0x13edc
   13ee4:	ret    0x4
   13ee7:	int3   
   13ee8:	mov    eax,DWORD PTR [ecx+0x4]
   13eeb:	push   esi
   13eec:	mov    esi,DWORD PTR [eax+0x4]
   13eef:	push   edi
   13ef0:	mov    edi,eax
   13ef2:	jmp    0x13f0e
   13ef4:	push   DWORD PTR [esp+0xc]
   13ef8:	lea    eax,[esi+0x10]
   13efb:	push   eax
   13efc:	call   0x174f8
   13f01:	test   al,al
   13f03:	je     0x13f0a
   13f05:	mov    esi,DWORD PTR [esi+0x8]
   13f08:	jmp    0x13f0e
   13f0a:	mov    edi,esi
   13f0c:	mov    esi,DWORD PTR [esi]
   13f0e:	cmp    esi,DWORD PTR ds:0x1a218
   13f14:	jne    0x13ef4
   13f16:	mov    eax,edi
   13f18:	pop    edi
   13f19:	pop    esi
   13f1a:	ret    0x4
   13f1d:	int3   
   13f1e:	mov    eax,DWORD PTR [ecx+0x4]
   13f21:	mov    ecx,DWORD PTR [eax+0x4]
   13f24:	mov    edx,DWORD PTR ds:0x1a21c
   13f2a:	cmp    ecx,edx
   13f2c:	je     0x13f48
   13f2e:	push   esi
   13f2f:	mov    esi,DWORD PTR [esp+0x8]
   13f33:	mov    esi,DWORD PTR [esi]
   13f35:	cmp    DWORD PTR [ecx+0xc],esi
   13f38:	jge    0x13f3f
   13f3a:	mov    ecx,DWORD PTR [ecx+0x8]
   13f3d:	jmp    0x13f43
   13f3f:	mov    eax,ecx
   13f41:	mov    ecx,DWORD PTR [ecx]
   13f43:	cmp    ecx,edx
   13f45:	jne    0x13f35
   13f47:	pop    esi
   13f48:	ret    0x4
   13f4b:	int3   
   13f4c:	push   esi
   13f4d:	mov    esi,ecx
   13f4f:	mov    ecx,DWORD PTR [esi]
   13f51:	mov    eax,DWORD PTR [ecx+0x8]
   13f54:	cmp    eax,DWORD PTR ds:0x1a214
   13f5a:	je     0x13f68
   13f5c:	push   eax
   13f5d:	call   0x138e8
   13f62:	jmp    0x13f77
   13f64:	mov    DWORD PTR [esi],eax
   13f66:	mov    ecx,eax
   13f68:	mov    eax,DWORD PTR [ecx+0x4]
   13f6b:	cmp    ecx,DWORD PTR [eax+0x8]
   13f6e:	je     0x13f64
   13f70:	mov    ecx,DWORD PTR [esi]
   13f72:	cmp    DWORD PTR [ecx+0x8],eax
   13f75:	je     0x13f79
   13f77:	mov    DWORD PTR [esi],eax
   13f79:	pop    esi
   13f7a:	ret    
   13f7b:	int3   
   13f7c:	push   esi
   13f7d:	mov    esi,ecx
   13f7f:	mov    ecx,DWORD PTR [esi]
   13f81:	cmp    DWORD PTR [ecx+0x10],0x0
   13f85:	jne    0x13f94
   13f87:	mov    eax,DWORD PTR [ecx+0x4]
   13f8a:	cmp    DWORD PTR [eax+0x4],ecx
   13f8d:	jne    0x13f94
   13f8f:	mov    eax,DWORD PTR [ecx+0x8]
   13f92:	jmp    0x13fb1
   13f94:	mov    eax,DWORD PTR [ecx]
   13f96:	cmp    eax,DWORD PTR ds:0x1a210
   13f9c:	je     0x13faa
   13f9e:	push   eax
   13f9f:	call   0x138a0
   13fa4:	jmp    0x13fb1
   13fa6:	mov    DWORD PTR [esi],eax
   13fa8:	mov    ecx,eax
   13faa:	mov    eax,DWORD PTR [ecx+0x4]
   13fad:	cmp    ecx,DWORD PTR [eax]
   13faf:	je     0x13fa6
   13fb1:	mov    DWORD PTR [esi],eax
   13fb3:	pop    esi
   13fb4:	ret    
   13fb5:	int3   
   13fb6:	push   esi
   13fb7:	mov    esi,ecx
   13fb9:	mov    ecx,DWORD PTR [esi]
   13fbb:	mov    eax,DWORD PTR [ecx+0x8]
   13fbe:	cmp    eax,DWORD PTR ds:0x1a210
   13fc4:	je     0x13fd2
   13fc6:	push   eax
   13fc7:	call   0x138b8
   13fcc:	jmp    0x13fe1
   13fce:	mov    DWORD PTR [esi],eax
   13fd0:	mov    ecx,eax
   13fd2:	mov    eax,DWORD PTR [ecx+0x4]
   13fd5:	cmp    ecx,DWORD PTR [eax+0x8]
   13fd8:	je     0x13fce
   13fda:	mov    ecx,DWORD PTR [esi]
   13fdc:	cmp    DWORD PTR [ecx+0x8],eax
   13fdf:	je     0x13fe3
   13fe1:	mov    DWORD PTR [esi],eax
   13fe3:	pop    esi
   13fe4:	ret    
   13fe5:	int3   
   13fe6:	mov    edx,DWORD PTR [esp+0x4]
   13fea:	mov    eax,DWORD PTR [edx+0x8]
   13fed:	push   esi
   13fee:	mov    esi,DWORD PTR [eax]
   13ff0:	mov    DWORD PTR [edx+0x8],esi
   13ff3:	mov    esi,DWORD PTR [eax]
   13ff5:	cmp    esi,DWORD PTR ds:0x1a210
   13ffb:	je     0x14000
   13ffd:	mov    DWORD PTR [esi+0x4],edx
   14000:	mov    esi,DWORD PTR [edx+0x4]
   14003:	mov    DWORD PTR [eax+0x4],esi
   14006:	mov    ecx,DWORD PTR [ecx+0x4]
   14009:	cmp    edx,DWORD PTR [ecx+0x4]
   1400c:	pop    esi
   1400d:	jne    0x14014
   1400f:	mov    DWORD PTR [ecx+0x4],eax
   14012:	jmp    0x14022
   14014:	mov    ecx,DWORD PTR [edx+0x4]
   14017:	cmp    edx,DWORD PTR [ecx]
   14019:	jne    0x1401f
   1401b:	mov    DWORD PTR [ecx],eax
   1401d:	jmp    0x14022
   1401f:	mov    DWORD PTR [ecx+0x8],eax
   14022:	mov    DWORD PTR [eax],edx
   14024:	mov    DWORD PTR [edx+0x4],eax
   14027:	ret    0x4
   1402a:	mov    edx,DWORD PTR [esp+0x4]
   1402e:	mov    eax,DWORD PTR [edx]
   14030:	push   esi
   14031:	mov    esi,DWORD PTR [eax+0x8]
   14034:	mov    DWORD PTR [edx],esi
   14036:	mov    esi,DWORD PTR [eax+0x8]
   14039:	cmp    esi,DWORD PTR ds:0x1a210
   1403f:	je     0x14044
   14041:	mov    DWORD PTR [esi+0x4],edx
   14044:	mov    esi,DWORD PTR [edx+0x4]
   14047:	mov    DWORD PTR [eax+0x4],esi
   1404a:	mov    ecx,DWORD PTR [ecx+0x4]
   1404d:	cmp    edx,DWORD PTR [ecx+0x4]
   14050:	pop    esi
   14051:	jne    0x14058
   14053:	mov    DWORD PTR [ecx+0x4],eax
   14056:	jmp    0x14067
   14058:	mov    ecx,DWORD PTR [edx+0x4]
   1405b:	cmp    edx,DWORD PTR [ecx+0x8]
   1405e:	jne    0x14065
   14060:	mov    DWORD PTR [ecx+0x8],eax
   14063:	jmp    0x14067
   14065:	mov    DWORD PTR [ecx],eax
   14067:	mov    DWORD PTR [eax+0x8],edx
   1406a:	mov    DWORD PTR [edx+0x4],eax
   1406d:	ret    0x4
   14070:	mov    eax,DWORD PTR [ecx+0x4]
   14073:	push   esi
   14074:	mov    esi,DWORD PTR [eax+0x4]
   14077:	push   edi
   14078:	mov    edi,eax
   1407a:	jmp    0x14096
   1407c:	push   DWORD PTR [esp+0xc]
   14080:	lea    eax,[esi+0x10]
   14083:	push   eax
   14084:	call   0x174f8
   14089:	test   al,al
   1408b:	je     0x14092
   1408d:	mov    esi,DWORD PTR [esi+0x8]
   14090:	jmp    0x14096
   14092:	mov    edi,esi
   14094:	mov    esi,DWORD PTR [esi]
   14096:	cmp    esi,DWORD PTR ds:0x1a214
   1409c:	jne    0x1407c
   1409e:	mov    eax,edi
   140a0:	pop    edi
   140a1:	pop    esi
   140a2:	ret    0x4
   140a5:	int3   
   140a6:	mov    edx,DWORD PTR [esp+0x4]
   140aa:	mov    eax,DWORD PTR [edx+0x8]
   140ad:	push   esi
   140ae:	mov    esi,DWORD PTR [eax]
   140b0:	mov    DWORD PTR [edx+0x8],esi
   140b3:	mov    esi,DWORD PTR [eax]
   140b5:	cmp    esi,DWORD PTR ds:0x1a214
   140bb:	je     0x140c0
   140bd:	mov    DWORD PTR [esi+0x4],edx
   140c0:	mov    esi,DWORD PTR [edx+0x4]
   140c3:	mov    DWORD PTR [eax+0x4],esi
   140c6:	mov    ecx,DWORD PTR [ecx+0x4]
   140c9:	cmp    edx,DWORD PTR [ecx+0x4]
   140cc:	pop    esi
   140cd:	jne    0x140d4
   140cf:	mov    DWORD PTR [ecx+0x4],eax
   140d2:	jmp    0x140e2
   140d4:	mov    ecx,DWORD PTR [edx+0x4]
   140d7:	cmp    edx,DWORD PTR [ecx]
   140d9:	jne    0x140df
   140db:	mov    DWORD PTR [ecx],eax
   140dd:	jmp    0x140e2
   140df:	mov    DWORD PTR [ecx+0x8],eax
   140e2:	mov    DWORD PTR [eax],edx
   140e4:	mov    DWORD PTR [edx+0x4],eax
   140e7:	ret    0x4
   140ea:	mov    edx,DWORD PTR [esp+0x4]
   140ee:	mov    eax,DWORD PTR [edx]
   140f0:	push   esi
   140f1:	mov    esi,DWORD PTR [eax+0x8]
   140f4:	mov    DWORD PTR [edx],esi
   140f6:	mov    esi,DWORD PTR [eax+0x8]
   140f9:	cmp    esi,DWORD PTR ds:0x1a214
   140ff:	je     0x14104
   14101:	mov    DWORD PTR [esi+0x4],edx
   14104:	mov    esi,DWORD PTR [edx+0x4]
   14107:	mov    DWORD PTR [eax+0x4],esi
   1410a:	mov    ecx,DWORD PTR [ecx+0x4]
   1410d:	cmp    edx,DWORD PTR [ecx+0x4]
   14110:	pop    esi
   14111:	jne    0x14118
   14113:	mov    DWORD PTR [ecx+0x4],eax
   14116:	jmp    0x14127
   14118:	mov    ecx,DWORD PTR [edx+0x4]
   1411b:	cmp    edx,DWORD PTR [ecx+0x8]
   1411e:	jne    0x14125
   14120:	mov    DWORD PTR [ecx+0x8],eax
   14123:	jmp    0x14127
   14125:	mov    DWORD PTR [ecx],eax
   14127:	mov    DWORD PTR [eax+0x8],edx
   1412a:	mov    DWORD PTR [edx+0x4],eax
   1412d:	ret    0x4
   14130:	mov    eax,DWORD PTR [ecx+0x4]
   14133:	push   esi
   14134:	mov    esi,DWORD PTR [eax+0x4]
   14137:	push   edi
   14138:	mov    edi,eax
   1413a:	jmp    0x14156
   1413c:	lea    eax,[esi+0x10]
   1413f:	push   eax
   14140:	push   DWORD PTR [esp+0x10]
   14144:	call   0x174f8
   14149:	test   al,al
   1414b:	je     0x14153
   1414d:	mov    edi,esi
   1414f:	mov    esi,DWORD PTR [esi]
   14151:	jmp    0x14156
   14153:	mov    esi,DWORD PTR [esi+0x8]
   14156:	cmp    esi,DWORD PTR ds:0x1a218
   1415c:	jne    0x1413c
   1415e:	mov    eax,edi
   14160:	pop    edi
   14161:	pop    esi
   14162:	ret    0x4
   14165:	int3   
   14166:	mov    edx,DWORD PTR [esp+0x4]
   1416a:	mov    eax,DWORD PTR [edx+0x8]
   1416d:	push   esi
   1416e:	mov    esi,DWORD PTR [eax]
   14170:	mov    DWORD PTR [edx+0x8],esi
   14173:	mov    esi,DWORD PTR [eax]
   14175:	cmp    esi,DWORD PTR ds:0x1a21c
   1417b:	je     0x14180
   1417d:	mov    DWORD PTR [esi+0x4],edx
   14180:	mov    esi,DWORD PTR [edx+0x4]
   14183:	mov    DWORD PTR [eax+0x4],esi
   14186:	mov    ecx,DWORD PTR [ecx+0x4]
   14189:	cmp    edx,DWORD PTR [ecx+0x4]
   1418c:	pop    esi
   1418d:	jne    0x14194
   1418f:	mov    DWORD PTR [ecx+0x4],eax
   14192:	jmp    0x141a2
   14194:	mov    ecx,DWORD PTR [edx+0x4]
   14197:	cmp    edx,DWORD PTR [ecx]
   14199:	jne    0x1419f
   1419b:	mov    DWORD PTR [ecx],eax
   1419d:	jmp    0x141a2
   1419f:	mov    DWORD PTR [ecx+0x8],eax
   141a2:	mov    DWORD PTR [eax],edx
   141a4:	mov    DWORD PTR [edx+0x4],eax
   141a7:	ret    0x4
   141aa:	mov    edx,DWORD PTR [esp+0x4]
   141ae:	mov    eax,DWORD PTR [edx]
   141b0:	push   esi
   141b1:	mov    esi,DWORD PTR [eax+0x8]
   141b4:	mov    DWORD PTR [edx],esi
   141b6:	mov    esi,DWORD PTR [eax+0x8]
   141b9:	cmp    esi,DWORD PTR ds:0x1a21c
   141bf:	je     0x141c4
   141c1:	mov    DWORD PTR [esi+0x4],edx
   141c4:	mov    esi,DWORD PTR [edx+0x4]
   141c7:	mov    DWORD PTR [eax+0x4],esi
   141ca:	mov    ecx,DWORD PTR [ecx+0x4]
   141cd:	cmp    edx,DWORD PTR [ecx+0x4]
   141d0:	pop    esi
   141d1:	jne    0x141d8
   141d3:	mov    DWORD PTR [ecx+0x4],eax
   141d6:	jmp    0x141e7
   141d8:	mov    ecx,DWORD PTR [edx+0x4]
   141db:	cmp    edx,DWORD PTR [ecx+0x8]
   141de:	jne    0x141e5
   141e0:	mov    DWORD PTR [ecx+0x8],eax
   141e3:	jmp    0x141e7
   141e5:	mov    DWORD PTR [ecx],eax
   141e7:	mov    DWORD PTR [eax+0x8],edx
   141ea:	mov    DWORD PTR [edx+0x4],eax
   141ed:	ret    0x4
   141f0:	mov    eax,DWORD PTR [ecx+0x4]
   141f3:	mov    ecx,DWORD PTR [eax+0x4]
   141f6:	mov    edx,DWORD PTR ds:0x1a21c
   141fc:	cmp    ecx,edx
   141fe:	je     0x1421a
   14200:	push   esi
   14201:	mov    esi,DWORD PTR [esp+0x8]
   14205:	mov    esi,DWORD PTR [esi]
   14207:	cmp    esi,DWORD PTR [ecx+0xc]
   1420a:	jge    0x14212
   1420c:	mov    eax,ecx
   1420e:	mov    ecx,DWORD PTR [ecx]
   14210:	jmp    0x14215
   14212:	mov    ecx,DWORD PTR [ecx+0x8]
   14215:	cmp    ecx,edx
   14217:	jne    0x14207
   14219:	pop    esi
   1421a:	ret    0x4
   1421d:	int3   
   1421e:	mov    eax,DWORD PTR [ecx+0x4]
   14221:	mov    ecx,DWORD PTR [eax+0x4]
   14224:	mov    edx,DWORD PTR ds:0x1a210
   1422a:	cmp    ecx,edx
   1422c:	je     0x14248
   1422e:	push   esi
   1422f:	mov    esi,DWORD PTR [esp+0x8]
   14233:	mov    esi,DWORD PTR [esi]
   14235:	cmp    DWORD PTR [ecx+0xc],esi
   14238:	jae    0x1423f
   1423a:	mov    ecx,DWORD PTR [ecx+0x8]
   1423d:	jmp    0x14243
   1423f:	mov    eax,ecx
   14241:	mov    ecx,DWORD PTR [ecx]
   14243:	cmp    ecx,edx
   14245:	jne    0x14235
   14247:	pop    esi
   14248:	ret    0x4
   1424b:	int3   
   1424c:	mov    eax,DWORD PTR [ecx+0x4]
   1424f:	mov    ecx,DWORD PTR [eax+0x4]
   14252:	mov    edx,DWORD PTR ds:0x1a210
   14258:	cmp    ecx,edx
   1425a:	je     0x14276
   1425c:	push   esi
   1425d:	mov    esi,DWORD PTR [esp+0x8]
   14261:	mov    esi,DWORD PTR [esi]
   14263:	cmp    esi,DWORD PTR [ecx+0xc]
   14266:	jae    0x1426e
   14268:	mov    eax,ecx
   1426a:	mov    ecx,DWORD PTR [ecx]
   1426c:	jmp    0x14271
   1426e:	mov    ecx,DWORD PTR [ecx+0x8]
   14271:	cmp    ecx,edx
   14273:	jne    0x14263
   14275:	pop    esi
   14276:	ret    0x4
   14279:	int3   
   1427a:	push   esi
   1427b:	push   edi
   1427c:	mov    edi,DWORD PTR [esp+0xc]
   14280:	push   edi
   14281:	mov    esi,ecx
   14283:	call   0x17550
   14288:	add    edi,0x8
   1428b:	push   edi
   1428c:	lea    ecx,[esi+0x8]
   1428f:	call   0x13ab0
   14294:	pop    edi
   14295:	mov    eax,esi
   14297:	pop    esi
   14298:	ret    0x4
   1429b:	int3   
   1429c:	mov    eax,DWORD PTR [esp+0x4]
   142a0:	push   esi
   142a1:	mov    esi,ecx
   142a3:	mov    ecx,DWORD PTR [eax]
   142a5:	add    eax,0x4
   142a8:	mov    DWORD PTR [esi],ecx
   142aa:	push   eax
   142ab:	lea    ecx,[esi+0x4]
   142ae:	call   0x13b0c
   142b3:	mov    eax,esi
   142b5:	pop    esi
   142b6:	ret    0x4
   142b9:	int3   
   142ba:	push   esi
   142bb:	mov    esi,ecx
   142bd:	lea    ecx,[esi+0x4]
   142c0:	call   0x13b4c
   142c5:	test   BYTE PTR [esp+0x8],0x1
   142ca:	je     0x142d3
   142cc:	push   esi
   142cd:	call   0x1206c
   142d2:	pop    ecx
   142d3:	mov    eax,esi
   142d5:	pop    esi
   142d6:	ret    0x4
   142d9:	int3   
   142da:	push   ebp
   142db:	mov    ebp,esp
   142dd:	push   edi
   142de:	mov    edi,DWORD PTR [ebp+0xc]
   142e1:	cmp    DWORD PTR [ebp+0x8],edi
   142e4:	je     0x142fa
   142e6:	push   esi
   142e7:	mov    esi,DWORD PTR [ebp+0x10]
   142ea:	inc    DWORD PTR [esi]
   142ec:	lea    ecx,[ebp+0x8]
   142ef:	call   0x13a80
   142f4:	cmp    DWORD PTR [ebp+0x8],edi
   142f7:	jne    0x142ea
   142f9:	pop    esi
   142fa:	pop    edi
   142fb:	pop    ebp
   142fc:	ret    
   142fd:	int3   
   142fe:	push   ebp
   142ff:	mov    ebp,esp
   14301:	push   edi
   14302:	mov    edi,DWORD PTR [ebp+0xc]
   14305:	cmp    DWORD PTR [ebp+0x8],edi
   14308:	je     0x1431e
   1430a:	push   esi
   1430b:	mov    esi,DWORD PTR [ebp+0x10]
   1430e:	inc    DWORD PTR [esi]
   14310:	lea    ecx,[ebp+0x8]
   14313:	call   0x13fb6
   14318:	cmp    DWORD PTR [ebp+0x8],edi
   1431b:	jne    0x1430e
   1431d:	pop    esi
   1431e:	pop    edi
   1431f:	pop    ebp
   14320:	ret    
   14321:	int3   
   14322:	push   esi
   14323:	push   0xc
   14325:	mov    esi,ecx
   14327:	call   0x12044
   1432c:	test   eax,eax
   1432e:	pop    ecx
   1432f:	je     0x14342
   14331:	push   DWORD PTR [esp+0xc]
   14335:	mov    ecx,eax
   14337:	push   DWORD PTR [esp+0xc]
   1433b:	call   0x13b60
   14340:	jmp    0x14344
   14342:	xor    eax,eax
   14344:	mov    DWORD PTR [esi],eax
   14346:	mov    eax,esi
   14348:	pop    esi
   14349:	ret    0x8
   1434c:	push   esi
   1434d:	mov    esi,ecx
   1434f:	mov    ecx,DWORD PTR [esi]
   14351:	mov    eax,DWORD PTR [ecx+0x8]
   14354:	cmp    eax,DWORD PTR ds:0x1a218
   1435a:	je     0x14368
   1435c:	push   eax
   1435d:	call   0x13ed0
   14362:	jmp    0x14377
   14364:	mov    DWORD PTR [esi],eax
   14366:	mov    ecx,eax
   14368:	mov    eax,DWORD PTR [ecx+0x4]
   1436b:	cmp    ecx,DWORD PTR [eax+0x8]
   1436e:	je     0x14364
   14370:	mov    ecx,DWORD PTR [esi]
   14372:	cmp    DWORD PTR [ecx+0x8],eax
   14375:	je     0x14379
   14377:	mov    DWORD PTR [esi],eax
   14379:	pop    esi
   1437a:	ret    
   1437b:	int3   
   1437c:	push   ebx
   1437d:	push   esi
   1437e:	push   edi
   1437f:	mov    edi,DWORD PTR [esp+0x10]
   14383:	cmp    edi,DWORD PTR ds:0x1a210
   14389:	mov    ebx,ecx
   1438b:	mov    esi,edi
   1438d:	je     0x143ac
   1438f:	push   DWORD PTR [esi+0x8]
   14392:	mov    ecx,ebx
   14394:	call   0x1437c
   14399:	mov    esi,DWORD PTR [esi]
   1439b:	push   edi
   1439c:	call   0x1206c
   143a1:	cmp    esi,DWORD PTR ds:0x1a210
   143a7:	pop    ecx
   143a8:	mov    edi,esi
   143aa:	jne    0x1438f
   143ac:	pop    edi
   143ad:	pop    esi
   143ae:	pop    ebx
   143af:	ret    0x4
   143b2:	push   0x14
   143b4:	call   0x12044
   143b9:	pop    ecx
   143ba:	mov    ecx,DWORD PTR [esp+0x4]
   143be:	mov    DWORD PTR [eax+0x4],ecx
   143c1:	mov    ecx,DWORD PTR [esp+0x8]
   143c5:	mov    DWORD PTR [eax+0x10],ecx
   143c8:	ret    0x8
   143cb:	int3   
   143cc:	push   ebp
   143cd:	mov    ebp,esp
   143cf:	push   ecx
   143d0:	push   DWORD PTR [ebp-0x4]
   143d3:	push   DWORD PTR [ebp+0x10]
   143d6:	push   DWORD PTR [ebp+0xc]
   143d9:	push   DWORD PTR [ebp+0x8]
   143dc:	call   0x142da
   143e1:	add    esp,0x10
   143e4:	leave  
   143e5:	ret    
   143e6:	push   ebp
   143e7:	mov    ebp,esp
   143e9:	push   ecx
   143ea:	push   DWORD PTR [ebp-0x4]
   143ed:	push   DWORD PTR [ebp+0x10]
   143f0:	push   DWORD PTR [ebp+0xc]
   143f3:	push   DWORD PTR [ebp+0x8]
   143f6:	call   0x142fe
   143fb:	add    esp,0x10
   143fe:	leave  
   143ff:	ret    
   14400:	push   ebp
   14401:	mov    ebp,esp
   14403:	push   ecx
   14404:	push   esi
   14405:	push   DWORD PTR [ebp+0xc]
   14408:	mov    esi,ecx
   1440a:	call   0x13ee8
   1440f:	cmp    eax,DWORD PTR [esi+0x4]
   14412:	mov    DWORD PTR [ebp-0x4],eax
   14415:	je     0x1442c
   14417:	add    eax,0x10
   1441a:	push   eax
   1441b:	push   DWORD PTR [ebp+0xc]
   1441e:	call   0x174f8
   14423:	test   al,al
   14425:	jne    0x1442c
   14427:	lea    eax,[ebp-0x4]
   1442a:	jmp    0x14435
   1442c:	mov    eax,DWORD PTR [esi+0x4]
   1442f:	mov    DWORD PTR [ebp+0xc],eax
   14432:	lea    eax,[ebp+0xc]
   14435:	mov    ecx,DWORD PTR [eax]
   14437:	mov    eax,DWORD PTR [ebp+0x8]
   1443a:	mov    DWORD PTR [eax],ecx
   1443c:	pop    esi
   1443d:	leave  
   1443e:	ret    0x8
   14441:	int3   
   14442:	push   ebp
   14443:	mov    ebp,esp
   14445:	push   ecx
   14446:	push   esi
   14447:	push   edi
   14448:	mov    edi,DWORD PTR [ebp+0xc]
   1444b:	push   edi
   1444c:	mov    esi,ecx
   1444e:	call   0x13f1e
   14453:	mov    esi,DWORD PTR [esi+0x4]
   14456:	cmp    eax,esi
   14458:	mov    DWORD PTR [ebp+0xc],eax
   1445b:	je     0x14469
   1445d:	mov    ecx,DWORD PTR [edi]
   1445f:	cmp    ecx,DWORD PTR [eax+0xc]
   14462:	jl     0x14469
   14464:	lea    eax,[ebp+0xc]
   14467:	jmp    0x1446f
   14469:	mov    DWORD PTR [ebp-0x4],esi
   1446c:	lea    eax,[ebp-0x4]
   1446f:	mov    ecx,DWORD PTR [eax]
   14471:	mov    eax,DWORD PTR [ebp+0x8]
   14474:	pop    edi
   14475:	mov    DWORD PTR [eax],ecx
   14477:	pop    esi
   14478:	leave  
   14479:	ret    0x8
   1447c:	push   ebp
   1447d:	mov    ebp,esp
   1447f:	push   ecx
   14480:	mov    eax,DWORD PTR [ecx]
   14482:	lea    ecx,[ebp-0x4]
   14485:	mov    DWORD PTR [ebp-0x4],eax
   14488:	call   0x13f7c
   1448d:	mov    eax,DWORD PTR [ebp-0x4]
   14490:	add    eax,0xc
   14493:	leave  
   14494:	ret    
   14495:	int3   
   14496:	push   ebp
   14497:	mov    ebp,esp
   14499:	push   ecx
   1449a:	push   esi
   1449b:	push   DWORD PTR [ebp+0xc]
   1449e:	mov    esi,ecx
   144a0:	call   0x14070
   144a5:	cmp    eax,DWORD PTR [esi+0x4]
   144a8:	mov    DWORD PTR [ebp-0x4],eax
   144ab:	je     0x144c2
   144ad:	add    eax,0x10
   144b0:	push   eax
   144b1:	push   DWORD PTR [ebp+0xc]
   144b4:	call   0x174f8
   144b9:	test   al,al
   144bb:	jne    0x144c2
   144bd:	lea    eax,[ebp-0x4]
   144c0:	jmp    0x144cb
   144c2:	mov    eax,DWORD PTR [esi+0x4]
   144c5:	mov    DWORD PTR [ebp+0xc],eax
   144c8:	lea    eax,[ebp+0xc]
   144cb:	mov    ecx,DWORD PTR [eax]
   144cd:	mov    eax,DWORD PTR [ebp+0x8]
   144d0:	mov    DWORD PTR [eax],ecx
   144d2:	pop    esi
   144d3:	leave  
   144d4:	ret    0x8
   144d7:	int3   
   144d8:	push   esi
   144d9:	push   edi
   144da:	push   DWORD PTR [esp+0x10]
   144de:	mov    edi,ecx
   144e0:	call   0x14130
   144e5:	push   DWORD PTR [esp+0x10]
   144e9:	mov    ecx,edi
   144eb:	mov    esi,eax
   144ed:	call   0x13ee8
   144f2:	mov    ecx,DWORD PTR [esp+0xc]
   144f6:	pop    edi
   144f7:	mov    DWORD PTR [ecx],eax
   144f9:	mov    DWORD PTR [ecx+0x4],esi
   144fc:	mov    eax,ecx
   144fe:	pop    esi
   144ff:	ret    0x8
   14502:	push   ebx
   14503:	push   esi
   14504:	push   edi
   14505:	push   0x38
   14507:	mov    esi,ecx
   14509:	call   0x12044
   1450e:	xor    ebx,ebx
   14510:	mov    DWORD PTR [eax+0x4],ebx
   14513:	mov    DWORD PTR [eax+0x30],0x1
   1451a:	cmp    DWORD PTR ds:0x1a218,ebx
   14520:	pop    ecx
   14521:	mov    ecx,eax
   14523:	jne    0x14536
   14525:	mov    ds:0x1a218,eax
   1452a:	mov    DWORD PTR [eax],ebx
   1452c:	mov    eax,ds:0x1a218
   14531:	xor    ecx,ecx
   14533:	mov    DWORD PTR [eax+0x8],ebx
   14536:	inc    DWORD PTR ds:0x1a220
   1453c:	cmp    ecx,ebx
   1453e:	je     0x14547
   14540:	push   ecx
   14541:	call   0x1206c
   14546:	pop    ecx
   14547:	mov    edi,DWORD PTR ds:0x1a218
   1454d:	push   0x38
   1454f:	call   0x12044
   14554:	mov    DWORD PTR [eax+0x4],edi
   14557:	mov    DWORD PTR [eax+0x30],ebx
   1455a:	mov    DWORD PTR [esi+0xc],ebx
   1455d:	mov    DWORD PTR [esi+0x4],eax
   14560:	pop    ecx
   14561:	mov    DWORD PTR [eax],eax
   14563:	mov    esi,DWORD PTR [esi+0x4]
   14566:	pop    edi
   14567:	mov    DWORD PTR [esi+0x8],esi
   1456a:	pop    esi
   1456b:	pop    ebx
   1456c:	ret    
   1456d:	int3   
   1456e:	push   esi
   1456f:	push   edi
   14570:	push   DWORD PTR [esp+0x10]
   14574:	mov    edi,ecx
   14576:	call   0x141f0
   1457b:	push   DWORD PTR [esp+0x10]
   1457f:	mov    ecx,edi
   14581:	mov    esi,eax
   14583:	call   0x13f1e
   14588:	mov    ecx,DWORD PTR [esp+0xc]
   1458c:	pop    edi
   1458d:	mov    DWORD PTR [ecx],eax
   1458f:	mov    DWORD PTR [ecx+0x4],esi
   14592:	mov    eax,ecx
   14594:	pop    esi
   14595:	ret    0x8
   14598:	push   ebx
   14599:	push   esi
   1459a:	push   edi
   1459b:	push   0x18
   1459d:	mov    esi,ecx
   1459f:	call   0x12044
   145a4:	xor    ebx,ebx
   145a6:	mov    DWORD PTR [eax+0x4],ebx
   145a9:	mov    DWORD PTR [eax+0x14],0x1
   145b0:	cmp    DWORD PTR ds:0x1a21c,ebx
   145b6:	pop    ecx
   145b7:	mov    ecx,eax
   145b9:	jne    0x145cc
   145bb:	mov    ds:0x1a21c,eax
   145c0:	mov    DWORD PTR [eax],ebx
   145c2:	mov    eax,ds:0x1a21c
   145c7:	xor    ecx,ecx
   145c9:	mov    DWORD PTR [eax+0x8],ebx
   145cc:	inc    DWORD PTR ds:0x1a224
   145d2:	cmp    ecx,ebx
   145d4:	je     0x145dd
   145d6:	push   ecx
   145d7:	call   0x1206c
   145dc:	pop    ecx
   145dd:	mov    edi,DWORD PTR ds:0x1a21c
   145e3:	push   0x18
   145e5:	call   0x12044
   145ea:	mov    DWORD PTR [eax+0x4],edi
   145ed:	mov    DWORD PTR [eax+0x14],ebx
   145f0:	mov    DWORD PTR [esi+0xc],ebx
   145f3:	mov    DWORD PTR [esi+0x4],eax
   145f6:	pop    ecx
   145f7:	mov    DWORD PTR [eax],eax
   145f9:	mov    esi,DWORD PTR [esi+0x4]
   145fc:	pop    edi
   145fd:	mov    DWORD PTR [esi+0x8],esi
   14600:	pop    esi
   14601:	pop    ebx
   14602:	ret    
   14603:	int3   
   14604:	push   ebp
   14605:	mov    ebp,esp
   14607:	push   ecx
   14608:	push   ecx
   14609:	push   ebx
   1460a:	push   esi
   1460b:	mov    DWORD PTR [ebp-0x4],ecx
   1460e:	push   edi
   1460f:	mov    edi,DWORD PTR [ebp+0xc]
   14612:	lea    ecx,[ebp+0xc]
   14615:	call   0x13fb6
   1461a:	mov    esi,DWORD PTR [edi]
   1461c:	mov    eax,ds:0x1a210
   14621:	cmp    esi,eax
   14623:	mov    ebx,edi
   14625:	mov    DWORD PTR [ebp-0x8],esi
   14628:	jne    0x14646
   1462a:	mov    esi,DWORD PTR [edi+0x8]
   1462d:	mov    eax,DWORD PTR [ebx+0x4]
   14630:	mov    ecx,DWORD PTR [ebp-0x4]
   14633:	mov    DWORD PTR [esi+0x4],eax
   14636:	mov    eax,DWORD PTR [ecx+0x4]
   14639:	cmp    DWORD PTR [eax+0x4],edi
   1463c:	jne    0x146bb
   1463e:	mov    DWORD PTR [eax+0x4],esi
   14641:	jmp    0x146c9
   14646:	mov    ecx,DWORD PTR [edi+0x8]
   14649:	cmp    ecx,eax
   1464b:	je     0x1462d
   1464d:	push   ecx
   1464e:	call   0x138b8
   14653:	mov    ebx,eax
   14655:	cmp    ebx,edi
   14657:	mov    esi,DWORD PTR [ebx+0x8]
   1465a:	je     0x1462d
   1465c:	mov    eax,DWORD PTR [ebp-0x8]
   1465f:	mov    DWORD PTR [eax+0x4],ebx
   14662:	mov    eax,DWORD PTR [edi]
   14664:	mov    DWORD PTR [ebx],eax
   14666:	cmp    ebx,DWORD PTR [edi+0x8]
   14669:	jne    0x14670
   1466b:	mov    DWORD PTR [esi+0x4],ebx
   1466e:	jmp    0x14687
   14670:	mov    eax,DWORD PTR [ebx+0x4]
   14673:	mov    DWORD PTR [esi+0x4],eax
   14676:	mov    eax,DWORD PTR [ebx+0x4]
   14679:	mov    DWORD PTR [eax],esi
   1467b:	mov    eax,DWORD PTR [edi+0x8]
   1467e:	mov    DWORD PTR [ebx+0x8],eax
   14681:	mov    eax,DWORD PTR [edi+0x8]
   14684:	mov    DWORD PTR [eax+0x4],ebx
   14687:	mov    eax,DWORD PTR [ebp-0x4]
   1468a:	mov    eax,DWORD PTR [eax+0x4]
   1468d:	cmp    DWORD PTR [eax+0x4],edi
   14690:	jne    0x14697
   14692:	mov    DWORD PTR [eax+0x4],ebx
   14695:	jmp    0x146a5
   14697:	mov    eax,DWORD PTR [edi+0x4]
   1469a:	cmp    DWORD PTR [eax],edi
   1469c:	jne    0x146a2
   1469e:	mov    DWORD PTR [eax],ebx
   146a0:	jmp    0x146a5
   146a2:	mov    DWORD PTR [eax+0x8],ebx
   146a5:	mov    eax,DWORD PTR [edi+0x4]
   146a8:	mov    DWORD PTR [ebx+0x4],eax
   146ab:	mov    eax,DWORD PTR [ebx+0x10]
   146ae:	mov    ecx,DWORD PTR [edi+0x10]
   146b1:	mov    DWORD PTR [ebx+0x10],ecx
   146b4:	mov    DWORD PTR [edi+0x10],eax
   146b7:	mov    ebx,edi
   146b9:	jmp    0x1471c
   146bb:	mov    eax,DWORD PTR [edi+0x4]
   146be:	cmp    DWORD PTR [eax],edi
   146c0:	jne    0x146c6
   146c2:	mov    DWORD PTR [eax],esi
   146c4:	jmp    0x146c9
   146c6:	mov    DWORD PTR [eax+0x8],esi
   146c9:	mov    eax,DWORD PTR [ecx+0x4]
   146cc:	cmp    DWORD PTR [eax],edi
   146ce:	mov    DWORD PTR [ebp-0x8],eax
   146d1:	jne    0x146f3
   146d3:	mov    edx,DWORD PTR [edi+0x8]
   146d6:	cmp    edx,DWORD PTR ds:0x1a210
   146dc:	jne    0x146e5
   146de:	mov    edx,DWORD PTR [edi+0x4]
   146e1:	mov    DWORD PTR [eax],edx
   146e3:	jmp    0x146f3
   146e5:	push   esi
   146e6:	call   0x138b8
   146eb:	mov    ecx,DWORD PTR [ebp-0x8]
   146ee:	mov    DWORD PTR [ecx],eax
   146f0:	mov    ecx,DWORD PTR [ebp-0x4]
   146f3:	mov    eax,DWORD PTR [ecx+0x4]
   146f6:	cmp    DWORD PTR [eax+0x8],edi
   146f9:	mov    DWORD PTR [ebp-0x8],eax
   146fc:	jne    0x1471c
   146fe:	mov    ecx,DWORD PTR [edi]
   14700:	cmp    ecx,DWORD PTR ds:0x1a210
   14706:	jne    0x14710
   14708:	mov    ecx,DWORD PTR [edi+0x4]
   1470b:	mov    DWORD PTR [eax+0x8],ecx
   1470e:	jmp    0x1471c
   14710:	push   esi
   14711:	call   0x138a0
   14716:	mov    ecx,DWORD PTR [ebp-0x8]
   14719:	mov    DWORD PTR [ecx+0x8],eax
   1471c:	xor    edi,edi
   1471e:	inc    edi
   1471f:	cmp    DWORD PTR [ebx+0x10],edi
   14722:	jne    0x1483d
   14728:	jmp    0x147eb
   1472d:	cmp    DWORD PTR [esi+0x10],edi
   14730:	jne    0x1483a
   14736:	mov    ecx,DWORD PTR [esi+0x4]
   14739:	mov    eax,DWORD PTR [ecx]
   1473b:	cmp    esi,eax
   1473d:	jne    0x147b6
   1473f:	mov    eax,DWORD PTR [ecx+0x8]
   14742:	cmp    DWORD PTR [eax+0x10],0x0
   14746:	jne    0x14762
   14748:	mov    DWORD PTR [eax+0x10],edi
   1474b:	mov    eax,DWORD PTR [esi+0x4]
   1474e:	and    DWORD PTR [eax+0x10],0x0
   14752:	push   DWORD PTR [esi+0x4]
   14755:	mov    ecx,edx
   14757:	call   0x13fe6
   1475c:	mov    eax,DWORD PTR [esi+0x4]
   1475f:	mov    eax,DWORD PTR [eax+0x8]
   14762:	mov    ecx,DWORD PTR [eax]
   14764:	cmp    DWORD PTR [ecx+0x10],edi
   14767:	jne    0x14771
   14769:	mov    ecx,DWORD PTR [eax+0x8]
   1476c:	cmp    DWORD PTR [ecx+0x10],edi
   1476f:	je     0x147e4
   14771:	mov    ecx,DWORD PTR [eax+0x8]
   14774:	cmp    DWORD PTR [ecx+0x10],edi
   14777:	jne    0x14791
   14779:	mov    ecx,DWORD PTR [eax]
   1477b:	mov    DWORD PTR [ecx+0x10],edi
   1477e:	mov    ecx,DWORD PTR [ebp-0x4]
   14781:	and    DWORD PTR [eax+0x10],0x0
   14785:	push   eax
   14786:	call   0x1402a
   1478b:	mov    eax,DWORD PTR [esi+0x4]
   1478e:	mov    eax,DWORD PTR [eax+0x8]
   14791:	mov    ecx,DWORD PTR [esi+0x4]
   14794:	mov    ecx,DWORD PTR [ecx+0x10]
   14797:	mov    DWORD PTR [eax+0x10],ecx
   1479a:	mov    ecx,DWORD PTR [esi+0x4]
   1479d:	mov    DWORD PTR [ecx+0x10],edi
   147a0:	mov    eax,DWORD PTR [eax+0x8]
   147a3:	mov    ecx,DWORD PTR [ebp-0x4]
   147a6:	mov    DWORD PTR [eax+0x10],edi
   147a9:	push   DWORD PTR [esi+0x4]
   147ac:	call   0x13fe6
   147b1:	jmp    0x1483a
   147b6:	cmp    DWORD PTR [eax+0x10],0x0
   147ba:	jne    0x147d5
   147bc:	mov    DWORD PTR [eax+0x10],edi
   147bf:	mov    eax,DWORD PTR [esi+0x4]
   147c2:	and    DWORD PTR [eax+0x10],0x0
   147c6:	push   DWORD PTR [esi+0x4]
   147c9:	mov    ecx,edx
   147cb:	call   0x1402a
   147d0:	mov    eax,DWORD PTR [esi+0x4]
   147d3:	mov    eax,DWORD PTR [eax]
   147d5:	mov    ecx,DWORD PTR [eax+0x8]
   147d8:	cmp    DWORD PTR [ecx+0x10],edi
   147db:	jne    0x147fc
   147dd:	mov    ecx,DWORD PTR [eax]
   147df:	cmp    DWORD PTR [ecx+0x10],edi
   147e2:	jne    0x147fc
   147e4:	and    DWORD PTR [eax+0x10],0x0
   147e8:	mov    esi,DWORD PTR [esi+0x4]
   147eb:	mov    edx,DWORD PTR [ebp-0x4]
   147ee:	mov    eax,DWORD PTR [edx+0x4]
   147f1:	cmp    esi,DWORD PTR [eax+0x4]
   147f4:	jne    0x1472d
   147fa:	jmp    0x1483a
   147fc:	mov    ecx,DWORD PTR [eax]
   147fe:	cmp    DWORD PTR [ecx+0x10],edi
   14801:	jne    0x1481b
   14803:	mov    ecx,DWORD PTR [eax+0x8]
   14806:	mov    DWORD PTR [ecx+0x10],edi
   14809:	mov    ecx,DWORD PTR [ebp-0x4]
   1480c:	and    DWORD PTR [eax+0x10],0x0
   14810:	push   eax
   14811:	call   0x13fe6
   14816:	mov    eax,DWORD PTR [esi+0x4]
   14819:	mov    eax,DWORD PTR [eax]
   1481b:	mov    ecx,DWORD PTR [esi+0x4]
   1481e:	mov    ecx,DWORD PTR [ecx+0x10]
   14821:	mov    DWORD PTR [eax+0x10],ecx
   14824:	mov    ecx,DWORD PTR [esi+0x4]
   14827:	mov    DWORD PTR [ecx+0x10],edi
   1482a:	mov    eax,DWORD PTR [eax]
   1482c:	mov    ecx,DWORD PTR [ebp-0x4]
   1482f:	mov    DWORD PTR [eax+0x10],edi
   14832:	push   DWORD PTR [esi+0x4]
   14835:	call   0x1402a
   1483a:	mov    DWORD PTR [esi+0x10],edi
   1483d:	push   ebx
   1483e:	call   0x1206c
   14843:	mov    eax,DWORD PTR [ebp-0x4]
   14846:	dec    DWORD PTR [eax+0xc]
   14849:	mov    eax,DWORD PTR [ebp+0x8]
   1484c:	pop    ecx
   1484d:	mov    ecx,DWORD PTR [ebp+0xc]
   14850:	pop    edi
   14851:	pop    esi
   14852:	mov    DWORD PTR [eax],ecx
   14854:	pop    ebx
   14855:	leave  
   14856:	ret    0x8
   14859:	int3   
   1485a:	push   esi
   1485b:	push   edi
   1485c:	push   DWORD PTR [esp+0x10]
   14860:	mov    edi,ecx
   14862:	call   0x1424c
   14867:	push   DWORD PTR [esp+0x10]
   1486b:	mov    ecx,edi
   1486d:	mov    esi,eax
   1486f:	call   0x1421e
   14874:	mov    ecx,DWORD PTR [esp+0xc]
   14878:	pop    edi
   14879:	mov    DWORD PTR [ecx],eax
   1487b:	mov    DWORD PTR [ecx+0x4],esi
   1487e:	mov    eax,ecx
   14880:	pop    esi
   14881:	ret    0x8
   14884:	push   ebx
   14885:	push   esi
   14886:	push   edi
   14887:	push   0x14
   14889:	mov    esi,ecx
   1488b:	call   0x12044
   14890:	xor    ebx,ebx
   14892:	mov    DWORD PTR [eax+0x4],ebx
   14895:	mov    DWORD PTR [eax+0x10],0x1
   1489c:	cmp    DWORD PTR ds:0x1a210,ebx
   148a2:	pop    ecx
   148a3:	mov    ecx,eax
   148a5:	jne    0x148b8
   148a7:	mov    ds:0x1a210,eax
   148ac:	mov    DWORD PTR [eax],ebx
   148ae:	mov    eax,ds:0x1a210
   148b3:	xor    ecx,ecx
   148b5:	mov    DWORD PTR [eax+0x8],ebx
   148b8:	inc    DWORD PTR ds:0x1a228
   148be:	cmp    ecx,ebx
   148c0:	je     0x148c9
   148c2:	push   ecx
   148c3:	call   0x1206c
   148c8:	pop    ecx
   148c9:	mov    edi,DWORD PTR ds:0x1a210
   148cf:	push   0x14
   148d1:	call   0x12044
   148d6:	mov    DWORD PTR [eax+0x4],edi
   148d9:	mov    DWORD PTR [eax+0x10],ebx
   148dc:	mov    DWORD PTR [esi+0xc],ebx
   148df:	mov    DWORD PTR [esi+0x4],eax
   148e2:	pop    ecx
   148e3:	mov    DWORD PTR [eax],eax
   148e5:	mov    esi,DWORD PTR [esi+0x4]
   148e8:	pop    edi
   148e9:	mov    DWORD PTR [esi+0x8],esi
   148ec:	pop    esi
   148ed:	pop    ebx
   148ee:	ret    
   148ef:	int3   
   148f0:	push   ebx
   148f1:	push   esi
   148f2:	push   edi
   148f3:	push   0x14
   148f5:	mov    ebx,ecx
   148f7:	call   0x12044
   148fc:	mov    edx,DWORD PTR [esp+0x20]
   14900:	mov    edi,eax
   14902:	mov    eax,DWORD PTR [esp+0x1c]
   14906:	and    DWORD PTR [edi+0x10],0x0
   1490a:	mov    DWORD PTR [edi+0x4],eax
   1490d:	pop    ecx
   1490e:	mov    ecx,DWORD PTR ds:0x1a210
   14914:	mov    DWORD PTR [edi],ecx
   14916:	mov    ecx,DWORD PTR ds:0x1a210
   1491c:	mov    DWORD PTR [edi+0x8],ecx
   1491f:	lea    ecx,[edi+0xc]
   14922:	test   ecx,ecx
   14924:	je     0x1492a
   14926:	mov    esi,DWORD PTR [edx]
   14928:	mov    DWORD PTR [ecx],esi
   1492a:	inc    DWORD PTR [ebx+0xc]
   1492d:	cmp    eax,DWORD PTR [ebx+0x4]
   14930:	je     0x14955
   14932:	mov    ecx,DWORD PTR [esp+0x14]
   14936:	cmp    ecx,DWORD PTR ds:0x1a210
   1493c:	jne    0x14955
   1493e:	mov    ecx,DWORD PTR [edx]
   14940:	cmp    ecx,DWORD PTR [eax+0xc]
   14943:	jb     0x14955
   14945:	mov    DWORD PTR [eax+0x8],edi
   14948:	mov    ecx,DWORD PTR [ebx+0x4]
   1494b:	cmp    eax,DWORD PTR [ecx+0x8]
   1494e:	jne    0x1496f
   14950:	mov    DWORD PTR [ecx+0x8],edi
   14953:	jmp    0x1496f
   14955:	mov    DWORD PTR [eax],edi
   14957:	mov    ecx,DWORD PTR [ebx+0x4]
   1495a:	cmp    eax,ecx
   1495c:	jne    0x14969
   1495e:	mov    DWORD PTR [ecx+0x4],edi
   14961:	mov    eax,DWORD PTR [ebx+0x4]
   14964:	mov    DWORD PTR [eax+0x8],edi
   14967:	jmp    0x1496f
   14969:	cmp    eax,DWORD PTR [ecx]
   1496b:	jne    0x1496f
   1496d:	mov    DWORD PTR [ecx],edi
   1496f:	mov    eax,DWORD PTR [ebx+0x4]
   14972:	cmp    edi,DWORD PTR [eax+0x4]
   14975:	mov    esi,edi
   14977:	je     0x14a2d
   1497d:	mov    eax,DWORD PTR [esi+0x4]
   14980:	cmp    DWORD PTR [eax+0x10],0x0
   14984:	jne    0x14a2d
   1498a:	mov    edx,DWORD PTR [eax+0x4]
   1498d:	mov    ecx,DWORD PTR [edx]
   1498f:	cmp    eax,ecx
   14991:	jne    0x149ec
   14993:	mov    ecx,DWORD PTR [edx+0x8]
   14996:	cmp    DWORD PTR [ecx+0x10],0x0
   1499a:	jne    0x149ba
   1499c:	mov    edx,DWORD PTR [esi+0x4]
   1499f:	xor    eax,eax
   149a1:	inc    eax
   149a2:	mov    DWORD PTR [edx+0x10],eax
   149a5:	mov    DWORD PTR [ecx+0x10],eax
   149a8:	mov    eax,DWORD PTR [esi+0x4]
   149ab:	mov    eax,DWORD PTR [eax+0x4]
   149ae:	and    DWORD PTR [eax+0x10],0x0
   149b2:	mov    eax,DWORD PTR [esi+0x4]
   149b5:	mov    esi,DWORD PTR [eax+0x4]
   149b8:	jmp    0x14a21
   149ba:	cmp    esi,DWORD PTR [eax+0x8]
   149bd:	jne    0x149c9
   149bf:	mov    esi,eax
   149c1:	push   esi
   149c2:	mov    ecx,ebx
   149c4:	call   0x13fe6
   149c9:	mov    eax,DWORD PTR [esi+0x4]
   149cc:	mov    DWORD PTR [eax+0x10],0x1
   149d3:	mov    eax,DWORD PTR [esi+0x4]
   149d6:	mov    eax,DWORD PTR [eax+0x4]
   149d9:	and    DWORD PTR [eax+0x10],0x0
   149dd:	mov    eax,DWORD PTR [esi+0x4]
   149e0:	push   DWORD PTR [eax+0x4]
   149e3:	mov    ecx,ebx
   149e5:	call   0x1402a
   149ea:	jmp    0x14a21
   149ec:	cmp    DWORD PTR [ecx+0x10],0x0
   149f0:	je     0x1499c
   149f2:	cmp    esi,DWORD PTR [eax]
   149f4:	jne    0x14a00
   149f6:	mov    esi,eax
   149f8:	push   esi
   149f9:	mov    ecx,ebx
   149fb:	call   0x1402a
   14a00:	mov    eax,DWORD PTR [esi+0x4]
   14a03:	mov    DWORD PTR [eax+0x10],0x1
   14a0a:	mov    eax,DWORD PTR [esi+0x4]
   14a0d:	mov    eax,DWORD PTR [eax+0x4]
   14a10:	and    DWORD PTR [eax+0x10],0x0
   14a14:	mov    eax,DWORD PTR [esi+0x4]
   14a17:	push   DWORD PTR [eax+0x4]
   14a1a:	mov    ecx,ebx
   14a1c:	call   0x13fe6
   14a21:	mov    eax,DWORD PTR [ebx+0x4]
   14a24:	cmp    esi,DWORD PTR [eax+0x4]
   14a27:	jne    0x1497d
   14a2d:	mov    eax,DWORD PTR [ebx+0x4]
   14a30:	mov    eax,DWORD PTR [eax+0x4]
   14a33:	mov    DWORD PTR [eax+0x10],0x1
   14a3a:	mov    eax,DWORD PTR [esp+0x10]
   14a3e:	mov    DWORD PTR [eax],edi
   14a40:	pop    edi
   14a41:	pop    esi
   14a42:	pop    ebx
   14a43:	ret    0x10
   14a46:	push   ebp
   14a47:	mov    ebp,esp
   14a49:	push   ecx
   14a4a:	push   ecx
   14a4b:	push   ebx
   14a4c:	push   esi
   14a4d:	mov    DWORD PTR [ebp-0x4],ecx
   14a50:	push   edi
   14a51:	mov    edi,DWORD PTR [ebp+0xc]
   14a54:	lea    ecx,[ebp+0xc]
   14a57:	call   0x13f4c
   14a5c:	mov    esi,DWORD PTR [edi]
   14a5e:	mov    eax,ds:0x1a214
   14a63:	cmp    esi,eax
   14a65:	mov    ebx,edi
   14a67:	mov    DWORD PTR [ebp-0x8],esi
   14a6a:	jne    0x14a88
   14a6c:	mov    esi,DWORD PTR [edi+0x8]
   14a6f:	mov    eax,DWORD PTR [ebx+0x4]
   14a72:	mov    ecx,DWORD PTR [ebp-0x4]
   14a75:	mov    DWORD PTR [esi+0x4],eax
   14a78:	mov    eax,DWORD PTR [ecx+0x4]
   14a7b:	cmp    DWORD PTR [eax+0x4],edi
   14a7e:	jne    0x14afd
   14a80:	mov    DWORD PTR [eax+0x4],esi
   14a83:	jmp    0x14b0b
   14a88:	mov    ecx,DWORD PTR [edi+0x8]
   14a8b:	cmp    ecx,eax
   14a8d:	je     0x14a6f
   14a8f:	push   ecx
   14a90:	call   0x138e8
   14a95:	mov    ebx,eax
   14a97:	cmp    ebx,edi
   14a99:	mov    esi,DWORD PTR [ebx+0x8]
   14a9c:	je     0x14a6f
   14a9e:	mov    eax,DWORD PTR [ebp-0x8]
   14aa1:	mov    DWORD PTR [eax+0x4],ebx
   14aa4:	mov    eax,DWORD PTR [edi]
   14aa6:	mov    DWORD PTR [ebx],eax
   14aa8:	cmp    ebx,DWORD PTR [edi+0x8]
   14aab:	jne    0x14ab2
   14aad:	mov    DWORD PTR [esi+0x4],ebx
   14ab0:	jmp    0x14ac9
   14ab2:	mov    eax,DWORD PTR [ebx+0x4]
   14ab5:	mov    DWORD PTR [esi+0x4],eax
   14ab8:	mov    eax,DWORD PTR [ebx+0x4]
   14abb:	mov    DWORD PTR [eax],esi
   14abd:	mov    eax,DWORD PTR [edi+0x8]
   14ac0:	mov    DWORD PTR [ebx+0x8],eax
   14ac3:	mov    eax,DWORD PTR [edi+0x8]
   14ac6:	mov    DWORD PTR [eax+0x4],ebx
   14ac9:	mov    eax,DWORD PTR [ebp-0x4]
   14acc:	mov    eax,DWORD PTR [eax+0x4]
   14acf:	cmp    DWORD PTR [eax+0x4],edi
   14ad2:	jne    0x14ad9
   14ad4:	mov    DWORD PTR [eax+0x4],ebx
   14ad7:	jmp    0x14ae7
   14ad9:	mov    eax,DWORD PTR [edi+0x4]
   14adc:	cmp    DWORD PTR [eax],edi
   14ade:	jne    0x14ae4
   14ae0:	mov    DWORD PTR [eax],ebx
   14ae2:	jmp    0x14ae7
   14ae4:	mov    DWORD PTR [eax+0x8],ebx
   14ae7:	mov    eax,DWORD PTR [edi+0x4]
   14aea:	mov    DWORD PTR [ebx+0x4],eax
   14aed:	mov    eax,DWORD PTR [ebx+0x38]
   14af0:	mov    ecx,DWORD PTR [edi+0x38]
   14af3:	mov    DWORD PTR [ebx+0x38],ecx
   14af6:	mov    DWORD PTR [edi+0x38],eax
   14af9:	mov    ebx,edi
   14afb:	jmp    0x14b5e
   14afd:	mov    eax,DWORD PTR [edi+0x4]
   14b00:	cmp    DWORD PTR [eax],edi
   14b02:	jne    0x14b08
   14b04:	mov    DWORD PTR [eax],esi
   14b06:	jmp    0x14b0b
   14b08:	mov    DWORD PTR [eax+0x8],esi
   14b0b:	mov    eax,DWORD PTR [ecx+0x4]
   14b0e:	cmp    DWORD PTR [eax],edi
   14b10:	mov    DWORD PTR [ebp-0x8],eax
   14b13:	jne    0x14b35
   14b15:	mov    edx,DWORD PTR [edi+0x8]
   14b18:	cmp    edx,DWORD PTR ds:0x1a214
   14b1e:	jne    0x14b27
   14b20:	mov    edx,DWORD PTR [edi+0x4]
   14b23:	mov    DWORD PTR [eax],edx
   14b25:	jmp    0x14b35
   14b27:	push   esi
   14b28:	call   0x138e8
   14b2d:	mov    ecx,DWORD PTR [ebp-0x8]
   14b30:	mov    DWORD PTR [ecx],eax
   14b32:	mov    ecx,DWORD PTR [ebp-0x4]
   14b35:	mov    eax,DWORD PTR [ecx+0x4]
   14b38:	cmp    DWORD PTR [eax+0x8],edi
   14b3b:	mov    DWORD PTR [ebp-0x8],eax
   14b3e:	jne    0x14b5e
   14b40:	mov    ecx,DWORD PTR [edi]
   14b42:	cmp    ecx,DWORD PTR ds:0x1a214
   14b48:	jne    0x14b52
   14b4a:	mov    ecx,DWORD PTR [edi+0x4]
   14b4d:	mov    DWORD PTR [eax+0x8],ecx
   14b50:	jmp    0x14b5e
   14b52:	push   esi
   14b53:	call   0x138d0
   14b58:	mov    ecx,DWORD PTR [ebp-0x8]
   14b5b:	mov    DWORD PTR [ecx+0x8],eax
   14b5e:	xor    edi,edi
   14b60:	inc    edi
   14b61:	cmp    DWORD PTR [ebx+0x38],edi
   14b64:	jne    0x14c7f
   14b6a:	jmp    0x14c2d
   14b6f:	cmp    DWORD PTR [esi+0x38],edi
   14b72:	jne    0x14c7c
   14b78:	mov    ecx,DWORD PTR [esi+0x4]
   14b7b:	mov    eax,DWORD PTR [ecx]
   14b7d:	cmp    esi,eax
   14b7f:	jne    0x14bf8
   14b81:	mov    eax,DWORD PTR [ecx+0x8]
   14b84:	cmp    DWORD PTR [eax+0x38],0x0
   14b88:	jne    0x14ba4
   14b8a:	mov    DWORD PTR [eax+0x38],edi
   14b8d:	mov    eax,DWORD PTR [esi+0x4]
   14b90:	and    DWORD PTR [eax+0x38],0x0
   14b94:	push   DWORD PTR [esi+0x4]
   14b97:	mov    ecx,edx
   14b99:	call   0x140a6
   14b9e:	mov    eax,DWORD PTR [esi+0x4]
   14ba1:	mov    eax,DWORD PTR [eax+0x8]
   14ba4:	mov    ecx,DWORD PTR [eax]
   14ba6:	cmp    DWORD PTR [ecx+0x38],edi
   14ba9:	jne    0x14bb3
   14bab:	mov    ecx,DWORD PTR [eax+0x8]
   14bae:	cmp    DWORD PTR [ecx+0x38],edi
   14bb1:	je     0x14c26
   14bb3:	mov    ecx,DWORD PTR [eax+0x8]
   14bb6:	cmp    DWORD PTR [ecx+0x38],edi
   14bb9:	jne    0x14bd3
   14bbb:	mov    ecx,DWORD PTR [eax]
   14bbd:	mov    DWORD PTR [ecx+0x38],edi
   14bc0:	mov    ecx,DWORD PTR [ebp-0x4]
   14bc3:	and    DWORD PTR [eax+0x38],0x0
   14bc7:	push   eax
   14bc8:	call   0x140ea
   14bcd:	mov    eax,DWORD PTR [esi+0x4]
   14bd0:	mov    eax,DWORD PTR [eax+0x8]
   14bd3:	mov    ecx,DWORD PTR [esi+0x4]
   14bd6:	mov    ecx,DWORD PTR [ecx+0x38]
   14bd9:	mov    DWORD PTR [eax+0x38],ecx
   14bdc:	mov    ecx,DWORD PTR [esi+0x4]
   14bdf:	mov    DWORD PTR [ecx+0x38],edi
   14be2:	mov    eax,DWORD PTR [eax+0x8]
   14be5:	mov    ecx,DWORD PTR [ebp-0x4]
   14be8:	mov    DWORD PTR [eax+0x38],edi
   14beb:	push   DWORD PTR [esi+0x4]
   14bee:	call   0x140a6
   14bf3:	jmp    0x14c7c
   14bf8:	cmp    DWORD PTR [eax+0x38],0x0
   14bfc:	jne    0x14c17
   14bfe:	mov    DWORD PTR [eax+0x38],edi
   14c01:	mov    eax,DWORD PTR [esi+0x4]
   14c04:	and    DWORD PTR [eax+0x38],0x0
   14c08:	push   DWORD PTR [esi+0x4]
   14c0b:	mov    ecx,edx
   14c0d:	call   0x140ea
   14c12:	mov    eax,DWORD PTR [esi+0x4]
   14c15:	mov    eax,DWORD PTR [eax]
   14c17:	mov    ecx,DWORD PTR [eax+0x8]
   14c1a:	cmp    DWORD PTR [ecx+0x38],edi
   14c1d:	jne    0x14c3e
   14c1f:	mov    ecx,DWORD PTR [eax]
   14c21:	cmp    DWORD PTR [ecx+0x38],edi
   14c24:	jne    0x14c3e
   14c26:	and    DWORD PTR [eax+0x38],0x0
   14c2a:	mov    esi,DWORD PTR [esi+0x4]
   14c2d:	mov    edx,DWORD PTR [ebp-0x4]
   14c30:	mov    eax,DWORD PTR [edx+0x4]
   14c33:	cmp    esi,DWORD PTR [eax+0x4]
   14c36:	jne    0x14b6f
   14c3c:	jmp    0x14c7c
   14c3e:	mov    ecx,DWORD PTR [eax]
   14c40:	cmp    DWORD PTR [ecx+0x38],edi
   14c43:	jne    0x14c5d
   14c45:	mov    ecx,DWORD PTR [eax+0x8]
   14c48:	mov    DWORD PTR [ecx+0x38],edi
   14c4b:	mov    ecx,DWORD PTR [ebp-0x4]
   14c4e:	and    DWORD PTR [eax+0x38],0x0
   14c52:	push   eax
   14c53:	call   0x140a6
   14c58:	mov    eax,DWORD PTR [esi+0x4]
   14c5b:	mov    eax,DWORD PTR [eax]
   14c5d:	mov    ecx,DWORD PTR [esi+0x4]
   14c60:	mov    ecx,DWORD PTR [ecx+0x38]
   14c63:	mov    DWORD PTR [eax+0x38],ecx
   14c66:	mov    ecx,DWORD PTR [esi+0x4]
   14c69:	mov    DWORD PTR [ecx+0x38],edi
   14c6c:	mov    eax,DWORD PTR [eax]
   14c6e:	mov    ecx,DWORD PTR [ebp-0x4]
   14c71:	mov    DWORD PTR [eax+0x38],edi
   14c74:	push   DWORD PTR [esi+0x4]
   14c77:	call   0x140ea
   14c7c:	mov    DWORD PTR [esi+0x38],edi
   14c7f:	lea    ecx,[ebx+0x10]
   14c82:	call   0x1384c
   14c87:	push   ebx
   14c88:	call   0x1206c
   14c8d:	mov    eax,DWORD PTR [ebp-0x4]
   14c90:	dec    DWORD PTR [eax+0xc]
   14c93:	mov    eax,DWORD PTR [ebp+0x8]
   14c96:	pop    ecx
   14c97:	mov    ecx,DWORD PTR [ebp+0xc]
   14c9a:	pop    edi
   14c9b:	pop    esi
   14c9c:	mov    DWORD PTR [eax],ecx
   14c9e:	pop    ebx
   14c9f:	leave  
   14ca0:	ret    0x8
   14ca3:	int3   
   14ca4:	push   ebx
   14ca5:	push   esi
   14ca6:	push   edi
   14ca7:	push   0x40
   14ca9:	mov    esi,ecx
   14cab:	call   0x12044
   14cb0:	xor    ebx,ebx
   14cb2:	mov    DWORD PTR [eax+0x4],ebx
   14cb5:	mov    DWORD PTR [eax+0x38],0x1
   14cbc:	cmp    DWORD PTR ds:0x1a214,ebx
   14cc2:	pop    ecx
   14cc3:	mov    ecx,eax
   14cc5:	jne    0x14cd8
   14cc7:	mov    ds:0x1a214,eax
   14ccc:	mov    DWORD PTR [eax],ebx
   14cce:	mov    eax,ds:0x1a214
   14cd3:	xor    ecx,ecx
   14cd5:	mov    DWORD PTR [eax+0x8],ebx
   14cd8:	inc    DWORD PTR ds:0x1a22c
   14cde:	cmp    ecx,ebx
   14ce0:	je     0x14ce9
   14ce2:	push   ecx
   14ce3:	call   0x1206c
   14ce8:	pop    ecx
   14ce9:	mov    edi,DWORD PTR ds:0x1a214
   14cef:	push   0x40
   14cf1:	call   0x12044
   14cf6:	mov    DWORD PTR [eax+0x4],edi
   14cf9:	mov    DWORD PTR [eax+0x38],ebx
   14cfc:	mov    DWORD PTR [esi+0xc],ebx
   14cff:	mov    DWORD PTR [esi+0x4],eax
   14d02:	pop    ecx
   14d03:	mov    DWORD PTR [eax],eax
   14d05:	mov    esi,DWORD PTR [esi+0x4]
   14d08:	pop    edi
   14d09:	mov    DWORD PTR [esi+0x8],esi
   14d0c:	pop    esi
   14d0d:	pop    ebx
   14d0e:	ret    
   14d0f:	int3   
   14d10:	push   ebp
   14d11:	mov    ebp,esp
   14d13:	push   ebx
   14d14:	push   esi
   14d15:	push   edi
   14d16:	push   0x40
   14d18:	mov    ebx,ecx
   14d1a:	call   0x12044
   14d1f:	mov    esi,DWORD PTR [ebp+0x10]
   14d22:	mov    edi,eax
   14d24:	and    DWORD PTR [edi+0x38],0x0
   14d28:	mov    DWORD PTR [edi+0x4],esi
   14d2b:	mov    eax,ds:0x1a214
   14d30:	pop    ecx
   14d31:	mov    DWORD PTR [edi],eax
   14d33:	mov    eax,ds:0x1a214
   14d38:	lea    ecx,[edi+0x10]
   14d3b:	test   ecx,ecx
   14d3d:	mov    DWORD PTR [edi+0x8],eax
   14d40:	je     0x14d4a
   14d42:	push   DWORD PTR [ebp+0x14]
   14d45:	call   0x1427a
   14d4a:	inc    DWORD PTR [ebx+0xc]
   14d4d:	cmp    esi,DWORD PTR [ebx+0x4]
   14d50:	je     0x14d7d
   14d52:	mov    eax,DWORD PTR [ebp+0xc]
   14d55:	cmp    eax,DWORD PTR ds:0x1a214
   14d5b:	jne    0x14d7d
   14d5d:	lea    eax,[esi+0x10]
   14d60:	push   eax
   14d61:	push   DWORD PTR [ebp+0x14]
   14d64:	call   0x174f8
   14d69:	test   al,al
   14d6b:	jne    0x14d7d
   14d6d:	mov    DWORD PTR [esi+0x8],edi
   14d70:	mov    eax,DWORD PTR [ebx+0x4]
   14d73:	cmp    esi,DWORD PTR [eax+0x8]
   14d76:	jne    0x14d94
   14d78:	mov    DWORD PTR [eax+0x8],edi
   14d7b:	jmp    0x14d94
   14d7d:	mov    DWORD PTR [esi],edi
   14d7f:	mov    eax,DWORD PTR [ebx+0x4]
   14d82:	cmp    esi,eax
   14d84:	jne    0x14d8e
   14d86:	mov    DWORD PTR [eax+0x4],edi
   14d89:	mov    eax,DWORD PTR [ebx+0x4]
   14d8c:	jmp    0x14d78
   14d8e:	cmp    esi,DWORD PTR [eax]
   14d90:	jne    0x14d94
   14d92:	mov    DWORD PTR [eax],edi
   14d94:	mov    eax,DWORD PTR [ebx+0x4]
   14d97:	cmp    edi,DWORD PTR [eax+0x4]
   14d9a:	mov    esi,edi
   14d9c:	je     0x14e52
   14da2:	mov    eax,DWORD PTR [esi+0x4]
   14da5:	cmp    DWORD PTR [eax+0x38],0x0
   14da9:	jne    0x14e52
   14daf:	mov    edx,DWORD PTR [eax+0x4]
   14db2:	mov    ecx,DWORD PTR [edx]
   14db4:	cmp    eax,ecx
   14db6:	jne    0x14e11
   14db8:	mov    ecx,DWORD PTR [edx+0x8]
   14dbb:	cmp    DWORD PTR [ecx+0x38],0x0
   14dbf:	jne    0x14ddf
   14dc1:	mov    edx,DWORD PTR [esi+0x4]
   14dc4:	xor    eax,eax
   14dc6:	inc    eax
   14dc7:	mov    DWORD PTR [edx+0x38],eax
   14dca:	mov    DWORD PTR [ecx+0x38],eax
   14dcd:	mov    eax,DWORD PTR [esi+0x4]
   14dd0:	mov    eax,DWORD PTR [eax+0x4]
   14dd3:	and    DWORD PTR [eax+0x38],0x0
   14dd7:	mov    eax,DWORD PTR [esi+0x4]
   14dda:	mov    esi,DWORD PTR [eax+0x4]
   14ddd:	jmp    0x14e46
   14ddf:	cmp    esi,DWORD PTR [eax+0x8]
   14de2:	jne    0x14dee
   14de4:	mov    esi,eax
   14de6:	push   esi
   14de7:	mov    ecx,ebx
   14de9:	call   0x140a6
   14dee:	mov    eax,DWORD PTR [esi+0x4]
   14df1:	mov    DWORD PTR [eax+0x38],0x1
   14df8:	mov    eax,DWORD PTR [esi+0x4]
   14dfb:	mov    eax,DWORD PTR [eax+0x4]
   14dfe:	and    DWORD PTR [eax+0x38],0x0
   14e02:	mov    eax,DWORD PTR [esi+0x4]
   14e05:	push   DWORD PTR [eax+0x4]
   14e08:	mov    ecx,ebx
   14e0a:	call   0x140ea
   14e0f:	jmp    0x14e46
   14e11:	cmp    DWORD PTR [ecx+0x38],0x0
   14e15:	je     0x14dc1
   14e17:	cmp    esi,DWORD PTR [eax]
   14e19:	jne    0x14e25
   14e1b:	mov    esi,eax
   14e1d:	push   esi
   14e1e:	mov    ecx,ebx
   14e20:	call   0x140ea
   14e25:	mov    eax,DWORD PTR [esi+0x4]
   14e28:	mov    DWORD PTR [eax+0x38],0x1
   14e2f:	mov    eax,DWORD PTR [esi+0x4]
   14e32:	mov    eax,DWORD PTR [eax+0x4]
   14e35:	and    DWORD PTR [eax+0x38],0x0
   14e39:	mov    eax,DWORD PTR [esi+0x4]
   14e3c:	push   DWORD PTR [eax+0x4]
   14e3f:	mov    ecx,ebx
   14e41:	call   0x140a6
   14e46:	mov    eax,DWORD PTR [ebx+0x4]
   14e49:	cmp    esi,DWORD PTR [eax+0x4]
   14e4c:	jne    0x14da2
   14e52:	mov    eax,DWORD PTR [ebx+0x4]
   14e55:	mov    eax,DWORD PTR [eax+0x4]
   14e58:	mov    DWORD PTR [eax+0x38],0x1
   14e5f:	mov    eax,DWORD PTR [ebp+0x8]
   14e62:	mov    DWORD PTR [eax],edi
   14e64:	pop    edi
   14e65:	pop    esi
   14e66:	pop    ebx
   14e67:	pop    ebp
   14e68:	ret    0x10
   14e6b:	int3   
   14e6c:	push   ebx
   14e6d:	push   esi
   14e6e:	push   edi
   14e6f:	mov    edi,DWORD PTR [esp+0x10]
   14e73:	cmp    edi,DWORD PTR ds:0x1a218
   14e79:	mov    ebx,ecx
   14e7b:	mov    esi,edi
   14e7d:	je     0x14ea4
   14e7f:	push   DWORD PTR [esi+0x8]
   14e82:	mov    ecx,ebx
   14e84:	call   0x14e6c
   14e89:	mov    esi,DWORD PTR [esi]
   14e8b:	lea    ecx,[edi+0x10]
   14e8e:	call   0x1384c
   14e93:	push   edi
   14e94:	call   0x1206c
   14e99:	cmp    esi,DWORD PTR ds:0x1a218
   14e9f:	pop    ecx
   14ea0:	mov    edi,esi
   14ea2:	jne    0x14e7f
   14ea4:	pop    edi
   14ea5:	pop    esi
   14ea6:	pop    ebx
   14ea7:	ret    0x4
   14eaa:	push   ebp
   14eab:	mov    ebp,esp
   14ead:	push   ebx
   14eae:	push   esi
   14eaf:	push   edi
   14eb0:	push   0x38
   14eb2:	mov    ebx,ecx
   14eb4:	call   0x12044
   14eb9:	mov    esi,DWORD PTR [ebp+0x10]
   14ebc:	mov    edi,eax
   14ebe:	and    DWORD PTR [edi+0x30],0x0
   14ec2:	mov    DWORD PTR [edi+0x4],esi
   14ec5:	mov    eax,ds:0x1a218
   14eca:	pop    ecx
   14ecb:	mov    DWORD PTR [edi],eax
   14ecd:	mov    eax,ds:0x1a218
   14ed2:	lea    ecx,[edi+0x10]
   14ed5:	test   ecx,ecx
   14ed7:	mov    DWORD PTR [edi+0x8],eax
   14eda:	je     0x14ee4
   14edc:	push   DWORD PTR [ebp+0x14]
   14edf:	call   0x13acc
   14ee4:	inc    DWORD PTR [ebx+0xc]
   14ee7:	cmp    esi,DWORD PTR [ebx+0x4]
   14eea:	je     0x14f17
   14eec:	mov    eax,DWORD PTR [ebp+0xc]
   14eef:	cmp    eax,DWORD PTR ds:0x1a218
   14ef5:	jne    0x14f17
   14ef7:	lea    eax,[esi+0x10]
   14efa:	push   eax
   14efb:	push   DWORD PTR [ebp+0x14]
   14efe:	call   0x174f8
   14f03:	test   al,al
   14f05:	jne    0x14f17
   14f07:	mov    DWORD PTR [esi+0x8],edi
   14f0a:	mov    eax,DWORD PTR [ebx+0x4]
   14f0d:	cmp    esi,DWORD PTR [eax+0x8]
   14f10:	jne    0x14f2e
   14f12:	mov    DWORD PTR [eax+0x8],edi
   14f15:	jmp    0x14f2e
   14f17:	mov    DWORD PTR [esi],edi
   14f19:	mov    eax,DWORD PTR [ebx+0x4]
   14f1c:	cmp    esi,eax
   14f1e:	jne    0x14f28
   14f20:	mov    DWORD PTR [eax+0x4],edi
   14f23:	mov    eax,DWORD PTR [ebx+0x4]
   14f26:	jmp    0x14f12
   14f28:	cmp    esi,DWORD PTR [eax]
   14f2a:	jne    0x14f2e
   14f2c:	mov    DWORD PTR [eax],edi
   14f2e:	mov    eax,DWORD PTR [ebx+0x4]
   14f31:	cmp    edi,DWORD PTR [eax+0x4]
   14f34:	mov    esi,edi
   14f36:	je     0x14fec
   14f3c:	mov    eax,DWORD PTR [esi+0x4]
   14f3f:	cmp    DWORD PTR [eax+0x30],0x0
   14f43:	jne    0x14fec
   14f49:	mov    edx,DWORD PTR [eax+0x4]
   14f4c:	mov    ecx,DWORD PTR [edx]
   14f4e:	cmp    eax,ecx
   14f50:	jne    0x14fab
   14f52:	mov    ecx,DWORD PTR [edx+0x8]
   14f55:	cmp    DWORD PTR [ecx+0x30],0x0
   14f59:	jne    0x14f79
   14f5b:	mov    edx,DWORD PTR [esi+0x4]
   14f5e:	xor    eax,eax
   14f60:	inc    eax
   14f61:	mov    DWORD PTR [edx+0x30],eax
   14f64:	mov    DWORD PTR [ecx+0x30],eax
   14f67:	mov    eax,DWORD PTR [esi+0x4]
   14f6a:	mov    eax,DWORD PTR [eax+0x4]
   14f6d:	and    DWORD PTR [eax+0x30],0x0
   14f71:	mov    eax,DWORD PTR [esi+0x4]
   14f74:	mov    esi,DWORD PTR [eax+0x4]
   14f77:	jmp    0x14fe0
   14f79:	cmp    esi,DWORD PTR [eax+0x8]
   14f7c:	jne    0x14f88
   14f7e:	mov    esi,eax
   14f80:	push   esi
   14f81:	mov    ecx,ebx
   14f83:	call   0x13900
   14f88:	mov    eax,DWORD PTR [esi+0x4]
   14f8b:	mov    DWORD PTR [eax+0x30],0x1
   14f92:	mov    eax,DWORD PTR [esi+0x4]
   14f95:	mov    eax,DWORD PTR [eax+0x4]
   14f98:	and    DWORD PTR [eax+0x30],0x0
   14f9c:	mov    eax,DWORD PTR [esi+0x4]
   14f9f:	push   DWORD PTR [eax+0x4]
   14fa2:	mov    ecx,ebx
   14fa4:	call   0x1395c
   14fa9:	jmp    0x14fe0
   14fab:	cmp    DWORD PTR [ecx+0x30],0x0
   14faf:	je     0x14f5b
   14fb1:	cmp    esi,DWORD PTR [eax]
   14fb3:	jne    0x14fbf
   14fb5:	mov    esi,eax
   14fb7:	push   esi
   14fb8:	mov    ecx,ebx
   14fba:	call   0x1395c
   14fbf:	mov    eax,DWORD PTR [esi+0x4]
   14fc2:	mov    DWORD PTR [eax+0x30],0x1
   14fc9:	mov    eax,DWORD PTR [esi+0x4]
   14fcc:	mov    eax,DWORD PTR [eax+0x4]
   14fcf:	and    DWORD PTR [eax+0x30],0x0
   14fd3:	mov    eax,DWORD PTR [esi+0x4]
   14fd6:	push   DWORD PTR [eax+0x4]
   14fd9:	mov    ecx,ebx
   14fdb:	call   0x13900
   14fe0:	mov    eax,DWORD PTR [ebx+0x4]
   14fe3:	cmp    esi,DWORD PTR [eax+0x4]
   14fe6:	jne    0x14f3c
   14fec:	mov    eax,DWORD PTR [ebx+0x4]
   14fef:	mov    eax,DWORD PTR [eax+0x4]
   14ff2:	mov    DWORD PTR [eax+0x30],0x1
   14ff9:	mov    eax,DWORD PTR [ebp+0x8]
   14ffc:	mov    DWORD PTR [eax],edi
   14ffe:	pop    edi
   14fff:	pop    esi
   15000:	pop    ebx
   15001:	pop    ebp
   15002:	ret    0x10
   15005:	int3   
   15006:	push   ebp
   15007:	mov    ebp,esp
   15009:	push   ecx
   1500a:	mov    eax,ds:0x1a210
   1500f:	push   ebx
   15010:	mov    ebx,DWORD PTR [ebp+0xc]
   15013:	push   esi
   15014:	mov    esi,DWORD PTR [ebp+0x8]
   15017:	cmp    esi,eax
   15019:	mov    DWORD PTR [ebp-0x4],ecx
   1501c:	mov    DWORD PTR [ebp+0x8],esi
   1501f:	je     0x15063
   15021:	push   edi
   15022:	push   DWORD PTR [esi+0x10]
   15025:	mov    ecx,DWORD PTR [ebp-0x4]
   15028:	push   ebx
   15029:	call   0x143b2
   1502e:	cmp    DWORD PTR [ebp+0x8],esi
   15031:	mov    edi,eax
   15033:	jne    0x15038
   15035:	mov    DWORD PTR [ebp+0x8],edi
   15038:	mov    ecx,DWORD PTR [ebp-0x4]
   1503b:	push   edi
   1503c:	push   DWORD PTR [esi+0x8]
   1503f:	call   0x15006
   15044:	mov    DWORD PTR [edi+0x8],eax
   15047:	lea    eax,[edi+0xc]
   1504a:	test   eax,eax
   1504c:	je     0x15053
   1504e:	mov    ecx,DWORD PTR [esi+0xc]
   15051:	mov    DWORD PTR [eax],ecx
   15053:	mov    DWORD PTR [ebx],edi
   15055:	mov    esi,DWORD PTR [esi]
   15057:	mov    eax,ds:0x1a210
   1505c:	cmp    esi,eax
   1505e:	mov    ebx,edi
   15060:	jne    0x15022
   15062:	pop    edi
   15063:	mov    DWORD PTR [ebx],eax
   15065:	mov    eax,DWORD PTR [ebp+0x8]
   15068:	pop    esi
   15069:	pop    ebx
   1506a:	leave  
   1506b:	ret    0x8
   1506e:	push   ebp
   1506f:	mov    ebp,esp
   15071:	push   edi
   15072:	mov    edi,DWORD PTR [ebp+0xc]
   15075:	cmp    DWORD PTR [ebp+0x8],edi
   15078:	je     0x1508e
   1507a:	push   esi
   1507b:	mov    esi,DWORD PTR [ebp+0x10]
   1507e:	inc    DWORD PTR [esi]
   15080:	lea    ecx,[ebp+0x8]
   15083:	call   0x1434c
   15088:	cmp    DWORD PTR [ebp+0x8],edi
   1508b:	jne    0x1507e
   1508d:	pop    esi
   1508e:	pop    edi
   1508f:	pop    ebp
   15090:	ret    
   15091:	int3   
   15092:	push   ebp
   15093:	mov    ebp,esp
   15095:	push   ecx
   15096:	push   ebx
   15097:	push   esi
   15098:	push   edi
   15099:	mov    edi,ecx
   1509b:	mov    eax,DWORD PTR [edi+0x4]
   1509e:	mov    esi,DWORD PTR [eax+0x4]
   150a1:	mov    ebx,eax
   150a3:	mov    eax,ds:0x1a210
   150a8:	cmp    esi,eax
   150aa:	mov    dl,0x1
   150ac:	je     0x150ca
   150ae:	mov    ecx,DWORD PTR [ebp+0xc]
   150b1:	mov    ecx,DWORD PTR [ecx]
   150b3:	cmp    ecx,DWORD PTR [esi+0xc]
   150b6:	mov    ebx,esi
   150b8:	setb   dl
   150bb:	test   dl,dl
   150bd:	je     0x150c3
   150bf:	mov    esi,DWORD PTR [esi]
   150c1:	jmp    0x150c6
   150c3:	mov    esi,DWORD PTR [esi+0x8]
   150c6:	cmp    esi,eax
   150c8:	jne    0x150b3
   150ca:	cmp    BYTE PTR [edi+0x8],0x0
   150ce:	je     0x150d5
   150d0:	push   DWORD PTR [ebp+0xc]
   150d3:	jmp    0x150fb
   150d5:	test   dl,dl
   150d7:	mov    ecx,ebx
   150d9:	mov    DWORD PTR [ebp-0x4],ecx
   150dc:	je     0x150f0
   150de:	mov    eax,DWORD PTR [edi+0x4]
   150e1:	cmp    ebx,DWORD PTR [eax]
   150e3:	je     0x150d0
   150e5:	lea    ecx,[ebp-0x4]
   150e8:	call   0x13f7c
   150ed:	mov    ecx,DWORD PTR [ebp-0x4]
   150f0:	mov    edx,DWORD PTR [ecx+0xc]
   150f3:	mov    eax,DWORD PTR [ebp+0xc]
   150f6:	cmp    edx,DWORD PTR [eax]
   150f8:	jae    0x15113
   150fa:	push   eax
   150fb:	push   ebx
   150fc:	push   esi
   150fd:	lea    eax,[ebp+0xc]
   15100:	push   eax
   15101:	mov    ecx,edi
   15103:	call   0x148f0
   15108:	mov    ecx,DWORD PTR [eax]
   1510a:	mov    eax,DWORD PTR [ebp+0x8]
   1510d:	mov    BYTE PTR [eax+0x4],0x1
   15111:	jmp    0x1511a
   15113:	mov    eax,DWORD PTR [ebp+0x8]
   15116:	mov    BYTE PTR [eax+0x4],0x0
   1511a:	pop    edi
   1511b:	pop    esi
   1511c:	mov    DWORD PTR [eax],ecx
   1511e:	pop    ebx
   1511f:	leave  
   15120:	ret    0x8
   15123:	int3   
   15124:	push   ebp
   15125:	mov    ebp,esp
   15127:	push   ecx
   15128:	push   esi
   15129:	mov    esi,ecx
   1512b:	cmp    DWORD PTR [esi+0xc],0x0
   1512f:	mov    ecx,DWORD PTR [ebp+0xc]
   15132:	je     0x1516c
   15134:	mov    eax,DWORD PTR [esi+0x4]
   15137:	cmp    ecx,DWORD PTR [eax]
   15139:	jne    0x1516c
   1513b:	cmp    DWORD PTR [ebp+0x10],eax
   1513e:	jne    0x1516c
   15140:	push   DWORD PTR [eax+0x4]
   15143:	mov    ecx,esi
   15145:	call   0x1437c
   1514a:	mov    ecx,DWORD PTR ds:0x1a210
   15150:	mov    eax,DWORD PTR [esi+0x4]
   15153:	mov    DWORD PTR [eax+0x4],ecx
   15156:	mov    eax,DWORD PTR [esi+0x4]
   15159:	and    DWORD PTR [esi+0xc],0x0
   1515d:	mov    DWORD PTR [eax],eax
   1515f:	mov    eax,DWORD PTR [esi+0x4]
   15162:	mov    DWORD PTR [eax+0x8],eax
   15165:	mov    eax,DWORD PTR [esi+0x4]
   15168:	mov    ecx,DWORD PTR [eax]
   1516a:	jmp    0x15191
   1516c:	cmp    ecx,DWORD PTR [ebp+0x10]
   1516f:	je     0x15191
   15171:	push   edi
   15172:	mov    edi,ecx
   15174:	lea    ecx,[ebp+0xc]
   15177:	call   0x13fb6
   1517c:	push   edi
   1517d:	lea    eax,[ebp-0x4]
   15180:	push   eax
   15181:	mov    ecx,esi
   15183:	call   0x14604
   15188:	mov    ecx,DWORD PTR [ebp+0xc]
   1518b:	cmp    ecx,DWORD PTR [ebp+0x10]
   1518e:	jne    0x15172
   15190:	pop    edi
   15191:	mov    eax,DWORD PTR [ebp+0x8]
   15194:	mov    DWORD PTR [eax],ecx
   15196:	pop    esi
   15197:	leave  
   15198:	ret    0xc
   1519b:	int3   
   1519c:	push   ebp
   1519d:	mov    ebp,esp
   1519f:	push   ecx
   151a0:	push   ecx
   151a1:	push   esi
   151a2:	push   DWORD PTR [ebp+0x8]
   151a5:	lea    eax,[ebp-0x8]
   151a8:	push   eax
   151a9:	mov    esi,ecx
   151ab:	call   0x1485a
   151b0:	and    DWORD PTR [ebp+0x8],0x0
   151b4:	lea    eax,[ebp+0x8]
   151b7:	push   eax
   151b8:	push   DWORD PTR [ebp-0x4]
   151bb:	push   DWORD PTR [ebp-0x8]
   151be:	call   0x143e6
   151c3:	add    esp,0xc
   151c6:	push   DWORD PTR [ebp-0x4]
   151c9:	lea    eax,[ebp-0x4]
   151cc:	push   DWORD PTR [ebp-0x8]
   151cf:	mov    ecx,esi
   151d1:	push   eax
   151d2:	call   0x15124
   151d7:	mov    eax,DWORD PTR [ebp+0x8]
   151da:	pop    esi
   151db:	leave  
   151dc:	ret    0x4
   151df:	int3   
   151e0:	push   ebp
   151e1:	mov    ebp,esp
   151e3:	push   ecx
   151e4:	push   ebx
   151e5:	push   esi
   151e6:	push   edi
   151e7:	mov    edi,ecx
   151e9:	mov    eax,DWORD PTR [edi+0x4]
   151ec:	mov    esi,DWORD PTR [eax+0x4]
   151ef:	mov    ebx,eax
   151f1:	mov    al,0x1
   151f3:	jmp    0x1520e
   151f5:	lea    eax,[esi+0x10]
   151f8:	push   eax
   151f9:	push   DWORD PTR [ebp+0xc]
   151fc:	mov    ebx,esi
   151fe:	call   0x174f8
   15203:	test   al,al
   15205:	je     0x1520b
   15207:	mov    esi,DWORD PTR [esi]
   15209:	jmp    0x1520e
   1520b:	mov    esi,DWORD PTR [esi+0x8]
   1520e:	cmp    esi,DWORD PTR ds:0x1a214
   15214:	jne    0x151f5
   15216:	cmp    BYTE PTR [edi+0x8],0x0
   1521a:	jne    0x15245
   1521c:	test   al,al
   1521e:	mov    DWORD PTR [ebp-0x4],ebx
   15221:	je     0x15232
   15223:	mov    eax,DWORD PTR [edi+0x4]
   15226:	cmp    ebx,DWORD PTR [eax]
   15228:	je     0x15245
   1522a:	lea    ecx,[ebp-0x4]
   1522d:	call   0x13a46
   15232:	push   DWORD PTR [ebp+0xc]
   15235:	mov    eax,DWORD PTR [ebp-0x4]
   15238:	add    eax,0x10
   1523b:	push   eax
   1523c:	call   0x174f8
   15241:	test   al,al
   15243:	je     0x15260
   15245:	push   DWORD PTR [ebp+0xc]
   15248:	lea    eax,[ebp+0xc]
   1524b:	push   ebx
   1524c:	push   esi
   1524d:	push   eax
   1524e:	mov    ecx,edi
   15250:	call   0x14d10
   15255:	mov    ecx,DWORD PTR [eax]
   15257:	mov    eax,DWORD PTR [ebp+0x8]
   1525a:	mov    BYTE PTR [eax+0x4],0x1
   1525e:	jmp    0x1526a
   15260:	mov    eax,DWORD PTR [ebp+0x8]
   15263:	mov    ecx,DWORD PTR [ebp-0x4]
   15266:	mov    BYTE PTR [eax+0x4],0x0
   1526a:	pop    edi
   1526b:	pop    esi
   1526c:	mov    DWORD PTR [eax],ecx
   1526e:	pop    ebx
   1526f:	leave  
   15270:	ret    0x8
   15273:	int3   
   15274:	push   ebp
   15275:	mov    ebp,esp
   15277:	push   ecx
   15278:	push   ebx
   15279:	push   esi
   1527a:	push   edi
   1527b:	mov    edi,ecx
   1527d:	mov    eax,DWORD PTR [edi+0x4]
   15280:	mov    esi,DWORD PTR [eax+0x4]
   15283:	mov    ebx,eax
   15285:	mov    al,0x1
   15287:	jmp    0x152a2
   15289:	lea    eax,[esi+0x10]
   1528c:	push   eax
   1528d:	push   DWORD PTR [ebp+0xc]
   15290:	mov    ebx,esi
   15292:	call   0x174f8
   15297:	test   al,al
   15299:	je     0x1529f
   1529b:	mov    esi,DWORD PTR [esi]
   1529d:	jmp    0x152a2
   1529f:	mov    esi,DWORD PTR [esi+0x8]
   152a2:	cmp    esi,DWORD PTR ds:0x1a218
   152a8:	jne    0x15289
   152aa:	cmp    BYTE PTR [edi+0x8],0x0
   152ae:	jne    0x152d9
   152b0:	test   al,al
   152b2:	mov    DWORD PTR [ebp-0x4],ebx
   152b5:	je     0x152c6
   152b7:	mov    eax,DWORD PTR [edi+0x4]
   152ba:	cmp    ebx,DWORD PTR [eax]
   152bc:	je     0x152d9
   152be:	lea    ecx,[ebp-0x4]
   152c1:	call   0x139a2
   152c6:	push   DWORD PTR [ebp+0xc]
   152c9:	mov    eax,DWORD PTR [ebp-0x4]
   152cc:	add    eax,0x10
   152cf:	push   eax
   152d0:	call   0x174f8
   152d5:	test   al,al
   152d7:	je     0x152f4
   152d9:	push   DWORD PTR [ebp+0xc]
   152dc:	lea    eax,[ebp+0xc]
   152df:	push   ebx
   152e0:	push   esi
   152e1:	push   eax
   152e2:	mov    ecx,edi
   152e4:	call   0x14eaa
   152e9:	mov    ecx,DWORD PTR [eax]
   152eb:	mov    eax,DWORD PTR [ebp+0x8]
   152ee:	mov    BYTE PTR [eax+0x4],0x1
   152f2:	jmp    0x152fe
   152f4:	mov    eax,DWORD PTR [ebp+0x8]
   152f7:	mov    ecx,DWORD PTR [ebp-0x4]
   152fa:	mov    BYTE PTR [eax+0x4],0x0
   152fe:	pop    edi
   152ff:	pop    esi
   15300:	mov    DWORD PTR [eax],ecx
   15302:	pop    ebx
   15303:	leave  
   15304:	ret    0x8
   15307:	int3   
   15308:	push   ebx
   15309:	mov    ebx,DWORD PTR [esp+0x8]
   1530d:	mov    eax,DWORD PTR [ebx+0x4]
   15310:	push   esi
   15311:	push   edi
   15312:	mov    esi,ecx
   15314:	mov    edi,DWORD PTR [esi+0x4]
   15317:	push   edi
   15318:	push   DWORD PTR [eax+0x4]
   1531b:	call   0x15006
   15320:	mov    DWORD PTR [edi+0x4],eax
   15323:	mov    eax,DWORD PTR [ebx+0xc]
   15326:	mov    edi,DWORD PTR [esi+0x4]
   15329:	mov    DWORD PTR [esi+0xc],eax
   1532c:	mov    eax,DWORD PTR [edi+0x4]
   1532f:	cmp    eax,DWORD PTR ds:0x1a210
   15335:	je     0x1534f
   15337:	push   eax
   15338:	call   0x138b8
   1533d:	mov    DWORD PTR [edi],eax
   1533f:	mov    esi,DWORD PTR [esi+0x4]
   15342:	push   DWORD PTR [esi+0x4]
   15345:	call   0x138a0
   1534a:	mov    DWORD PTR [esi+0x8],eax
   1534d:	jmp    0x15357
   1534f:	mov    DWORD PTR [edi],edi
   15351:	mov    esi,DWORD PTR [esi+0x4]
   15354:	mov    DWORD PTR [esi+0x8],esi
   15357:	pop    edi
   15358:	pop    esi
   15359:	pop    ebx
   1535a:	ret    0x4
   1535d:	int3   
   1535e:	push   ebp
   1535f:	mov    ebp,esp
   15361:	push   ecx
   15362:	push   ecx
   15363:	push   ebx
   15364:	push   esi
   15365:	mov    DWORD PTR [ebp-0x4],ecx
   15368:	push   edi
   15369:	mov    edi,DWORD PTR [ebp+0xc]
   1536c:	lea    ecx,[ebp+0xc]
   1536f:	call   0x1434c
   15374:	mov    esi,DWORD PTR [edi]
   15376:	mov    eax,ds:0x1a218
   1537b:	cmp    esi,eax
   1537d:	mov    ebx,edi
   1537f:	mov    DWORD PTR [ebp-0x8],esi
   15382:	jne    0x153a0
   15384:	mov    esi,DWORD PTR [edi+0x8]
   15387:	mov    eax,DWORD PTR [ebx+0x4]
   1538a:	mov    ecx,DWORD PTR [ebp-0x4]
   1538d:	mov    DWORD PTR [esi+0x4],eax
   15390:	mov    eax,DWORD PTR [ecx+0x4]
   15393:	cmp    DWORD PTR [eax+0x4],edi
   15396:	jne    0x15415
   15398:	mov    DWORD PTR [eax+0x4],esi
   1539b:	jmp    0x15423
   153a0:	mov    ecx,DWORD PTR [edi+0x8]
   153a3:	cmp    ecx,eax
   153a5:	je     0x15387
   153a7:	push   ecx
   153a8:	call   0x13ed0
   153ad:	mov    ebx,eax
   153af:	cmp    ebx,edi
   153b1:	mov    esi,DWORD PTR [ebx+0x8]
   153b4:	je     0x15387
   153b6:	mov    eax,DWORD PTR [ebp-0x8]
   153b9:	mov    DWORD PTR [eax+0x4],ebx
   153bc:	mov    eax,DWORD PTR [edi]
   153be:	mov    DWORD PTR [ebx],eax
   153c0:	cmp    ebx,DWORD PTR [edi+0x8]
   153c3:	jne    0x153ca
   153c5:	mov    DWORD PTR [esi+0x4],ebx
   153c8:	jmp    0x153e1
   153ca:	mov    eax,DWORD PTR [ebx+0x4]
   153cd:	mov    DWORD PTR [esi+0x4],eax
   153d0:	mov    eax,DWORD PTR [ebx+0x4]
   153d3:	mov    DWORD PTR [eax],esi
   153d5:	mov    eax,DWORD PTR [edi+0x8]
   153d8:	mov    DWORD PTR [ebx+0x8],eax
   153db:	mov    eax,DWORD PTR [edi+0x8]
   153de:	mov    DWORD PTR [eax+0x4],ebx
   153e1:	mov    eax,DWORD PTR [ebp-0x4]
   153e4:	mov    eax,DWORD PTR [eax+0x4]
   153e7:	cmp    DWORD PTR [eax+0x4],edi
   153ea:	jne    0x153f1
   153ec:	mov    DWORD PTR [eax+0x4],ebx
   153ef:	jmp    0x153ff
   153f1:	mov    eax,DWORD PTR [edi+0x4]
   153f4:	cmp    DWORD PTR [eax],edi
   153f6:	jne    0x153fc
   153f8:	mov    DWORD PTR [eax],ebx
   153fa:	jmp    0x153ff
   153fc:	mov    DWORD PTR [eax+0x8],ebx
   153ff:	mov    eax,DWORD PTR [edi+0x4]
   15402:	mov    DWORD PTR [ebx+0x4],eax
   15405:	mov    eax,DWORD PTR [ebx+0x30]
   15408:	mov    ecx,DWORD PTR [edi+0x30]
   1540b:	mov    DWORD PTR [ebx+0x30],ecx
   1540e:	mov    DWORD PTR [edi+0x30],eax
   15411:	mov    ebx,edi
   15413:	jmp    0x15476
   15415:	mov    eax,DWORD PTR [edi+0x4]
   15418:	cmp    DWORD PTR [eax],edi
   1541a:	jne    0x15420
   1541c:	mov    DWORD PTR [eax],esi
   1541e:	jmp    0x15423
   15420:	mov    DWORD PTR [eax+0x8],esi
   15423:	mov    eax,DWORD PTR [ecx+0x4]
   15426:	cmp    DWORD PTR [eax],edi
   15428:	mov    DWORD PTR [ebp-0x8],eax
   1542b:	jne    0x1544d
   1542d:	mov    edx,DWORD PTR [edi+0x8]
   15430:	cmp    edx,DWORD PTR ds:0x1a218
   15436:	jne    0x1543f
   15438:	mov    edx,DWORD PTR [edi+0x4]
   1543b:	mov    DWORD PTR [eax],edx
   1543d:	jmp    0x1544d
   1543f:	push   esi
   15440:	call   0x13ed0
   15445:	mov    ecx,DWORD PTR [ebp-0x8]
   15448:	mov    DWORD PTR [ecx],eax
   1544a:	mov    ecx,DWORD PTR [ebp-0x4]
   1544d:	mov    eax,DWORD PTR [ecx+0x4]
   15450:	cmp    DWORD PTR [eax+0x8],edi
   15453:	mov    DWORD PTR [ebp-0x8],eax
   15456:	jne    0x15476
   15458:	mov    ecx,DWORD PTR [edi]
   1545a:	cmp    ecx,DWORD PTR ds:0x1a218
   15460:	jne    0x1546a
   15462:	mov    ecx,DWORD PTR [edi+0x4]
   15465:	mov    DWORD PTR [eax+0x8],ecx
   15468:	jmp    0x15476
   1546a:	push   esi
   1546b:	call   0x13944
   15470:	mov    ecx,DWORD PTR [ebp-0x8]
   15473:	mov    DWORD PTR [ecx+0x8],eax
   15476:	xor    edi,edi
   15478:	inc    edi
   15479:	cmp    DWORD PTR [ebx+0x30],edi
   1547c:	jne    0x15597
   15482:	jmp    0x15545
   15487:	cmp    DWORD PTR [esi+0x30],edi
   1548a:	jne    0x15594
   15490:	mov    ecx,DWORD PTR [esi+0x4]
   15493:	mov    eax,DWORD PTR [ecx]
   15495:	cmp    esi,eax
   15497:	jne    0x15510
   15499:	mov    eax,DWORD PTR [ecx+0x8]
   1549c:	cmp    DWORD PTR [eax+0x30],0x0
   154a0:	jne    0x154bc
   154a2:	mov    DWORD PTR [eax+0x30],edi
   154a5:	mov    eax,DWORD PTR [esi+0x4]
   154a8:	and    DWORD PTR [eax+0x30],0x0
   154ac:	push   DWORD PTR [esi+0x4]
   154af:	mov    ecx,edx
   154b1:	call   0x13900
   154b6:	mov    eax,DWORD PTR [esi+0x4]
   154b9:	mov    eax,DWORD PTR [eax+0x8]
   154bc:	mov    ecx,DWORD PTR [eax]
   154be:	cmp    DWORD PTR [ecx+0x30],edi
   154c1:	jne    0x154cb
   154c3:	mov    ecx,DWORD PTR [eax+0x8]
   154c6:	cmp    DWORD PTR [ecx+0x30],edi
   154c9:	je     0x1553e
   154cb:	mov    ecx,DWORD PTR [eax+0x8]
   154ce:	cmp    DWORD PTR [ecx+0x30],edi
   154d1:	jne    0x154eb
   154d3:	mov    ecx,DWORD PTR [eax]
   154d5:	mov    DWORD PTR [ecx+0x30],edi
   154d8:	mov    ecx,DWORD PTR [ebp-0x4]
   154db:	and    DWORD PTR [eax+0x30],0x0
   154df:	push   eax
   154e0:	call   0x1395c
   154e5:	mov    eax,DWORD PTR [esi+0x4]
   154e8:	mov    eax,DWORD PTR [eax+0x8]
   154eb:	mov    ecx,DWORD PTR [esi+0x4]
   154ee:	mov    ecx,DWORD PTR [ecx+0x30]
   154f1:	mov    DWORD PTR [eax+0x30],ecx
   154f4:	mov    ecx,DWORD PTR [esi+0x4]
   154f7:	mov    DWORD PTR [ecx+0x30],edi
   154fa:	mov    eax,DWORD PTR [eax+0x8]
   154fd:	mov    ecx,DWORD PTR [ebp-0x4]
   15500:	mov    DWORD PTR [eax+0x30],edi
   15503:	push   DWORD PTR [esi+0x4]
   15506:	call   0x13900
   1550b:	jmp    0x15594
   15510:	cmp    DWORD PTR [eax+0x30],0x0
   15514:	jne    0x1552f
   15516:	mov    DWORD PTR [eax+0x30],edi
   15519:	mov    eax,DWORD PTR [esi+0x4]
   1551c:	and    DWORD PTR [eax+0x30],0x0
   15520:	push   DWORD PTR [esi+0x4]
   15523:	mov    ecx,edx
   15525:	call   0x1395c
   1552a:	mov    eax,DWORD PTR [esi+0x4]
   1552d:	mov    eax,DWORD PTR [eax]
   1552f:	mov    ecx,DWORD PTR [eax+0x8]
   15532:	cmp    DWORD PTR [ecx+0x30],edi
   15535:	jne    0x15556
   15537:	mov    ecx,DWORD PTR [eax]
   15539:	cmp    DWORD PTR [ecx+0x30],edi
   1553c:	jne    0x15556
   1553e:	and    DWORD PTR [eax+0x30],0x0
   15542:	mov    esi,DWORD PTR [esi+0x4]
   15545:	mov    edx,DWORD PTR [ebp-0x4]
   15548:	mov    eax,DWORD PTR [edx+0x4]
   1554b:	cmp    esi,DWORD PTR [eax+0x4]
   1554e:	jne    0x15487
   15554:	jmp    0x15594
   15556:	mov    ecx,DWORD PTR [eax]
   15558:	cmp    DWORD PTR [ecx+0x30],edi
   1555b:	jne    0x15575
   1555d:	mov    ecx,DWORD PTR [eax+0x8]
   15560:	mov    DWORD PTR [ecx+0x30],edi
   15563:	mov    ecx,DWORD PTR [ebp-0x4]
   15566:	and    DWORD PTR [eax+0x30],0x0
   1556a:	push   eax
   1556b:	call   0x13900
   15570:	mov    eax,DWORD PTR [esi+0x4]
   15573:	mov    eax,DWORD PTR [eax]
   15575:	mov    ecx,DWORD PTR [esi+0x4]
   15578:	mov    ecx,DWORD PTR [ecx+0x30]
   1557b:	mov    DWORD PTR [eax+0x30],ecx
   1557e:	mov    ecx,DWORD PTR [esi+0x4]
   15581:	mov    DWORD PTR [ecx+0x30],edi
   15584:	mov    eax,DWORD PTR [eax]
   15586:	mov    ecx,DWORD PTR [ebp-0x4]
   15589:	mov    DWORD PTR [eax+0x30],edi
   1558c:	push   DWORD PTR [esi+0x4]
   1558f:	call   0x1395c
   15594:	mov    DWORD PTR [esi+0x30],edi
   15597:	lea    ecx,[ebx+0x10]
   1559a:	call   0x1384c
   1559f:	push   ebx
   155a0:	call   0x1206c
   155a5:	mov    eax,DWORD PTR [ebp-0x4]
   155a8:	dec    DWORD PTR [eax+0xc]
   155ab:	mov    eax,DWORD PTR [ebp+0x8]
   155ae:	pop    ecx
   155af:	mov    ecx,DWORD PTR [ebp+0xc]
   155b2:	pop    edi
   155b3:	pop    esi
   155b4:	mov    DWORD PTR [eax],ecx
   155b6:	pop    ebx
   155b7:	leave  
   155b8:	ret    0x8
   155bb:	int3   
   155bc:	push   ebp
   155bd:	mov    ebp,esp
   155bf:	push   ecx
   155c0:	push   ecx
   155c1:	push   ebx
   155c2:	push   esi
   155c3:	mov    DWORD PTR [ebp-0x4],ecx
   155c6:	push   edi
   155c7:	mov    edi,DWORD PTR [ebp+0xc]
   155ca:	lea    ecx,[ebp+0xc]
   155cd:	call   0x13a80
   155d2:	mov    esi,DWORD PTR [edi]
   155d4:	mov    eax,ds:0x1a21c
   155d9:	cmp    esi,eax
   155db:	mov    ebx,edi
   155dd:	mov    DWORD PTR [ebp-0x8],esi
   155e0:	jne    0x155fe
   155e2:	mov    esi,DWORD PTR [edi+0x8]
   155e5:	mov    eax,DWORD PTR [ebx+0x4]
   155e8:	mov    ecx,DWORD PTR [ebp-0x4]
   155eb:	mov    DWORD PTR [esi+0x4],eax
   155ee:	mov    eax,DWORD PTR [ecx+0x4]
   155f1:	cmp    DWORD PTR [eax+0x4],edi
   155f4:	jne    0x15673
   155f6:	mov    DWORD PTR [eax+0x4],esi
   155f9:	jmp    0x15681
   155fe:	mov    ecx,DWORD PTR [edi+0x8]
   15601:	cmp    ecx,eax
   15603:	je     0x155e5
   15605:	push   ecx
   15606:	call   0x139f4
   1560b:	mov    ebx,eax
   1560d:	cmp    ebx,edi
   1560f:	mov    esi,DWORD PTR [ebx+0x8]
   15612:	je     0x155e5
   15614:	mov    eax,DWORD PTR [ebp-0x8]
   15617:	mov    DWORD PTR [eax+0x4],ebx
   1561a:	mov    eax,DWORD PTR [edi]
   1561c:	mov    DWORD PTR [ebx],eax
   1561e:	cmp    ebx,DWORD PTR [edi+0x8]
   15621:	jne    0x15628
   15623:	mov    DWORD PTR [esi+0x4],ebx
   15626:	jmp    0x1563f
   15628:	mov    eax,DWORD PTR [ebx+0x4]
   1562b:	mov    DWORD PTR [esi+0x4],eax
   1562e:	mov    eax,DWORD PTR [ebx+0x4]
   15631:	mov    DWORD PTR [eax],esi
   15633:	mov    eax,DWORD PTR [edi+0x8]
   15636:	mov    DWORD PTR [ebx+0x8],eax
   15639:	mov    eax,DWORD PTR [edi+0x8]
   1563c:	mov    DWORD PTR [eax+0x4],ebx
   1563f:	mov    eax,DWORD PTR [ebp-0x4]
   15642:	mov    eax,DWORD PTR [eax+0x4]
   15645:	cmp    DWORD PTR [eax+0x4],edi
   15648:	jne    0x1564f
   1564a:	mov    DWORD PTR [eax+0x4],ebx
   1564d:	jmp    0x1565d
   1564f:	mov    eax,DWORD PTR [edi+0x4]
   15652:	cmp    DWORD PTR [eax],edi
   15654:	jne    0x1565a
   15656:	mov    DWORD PTR [eax],ebx
   15658:	jmp    0x1565d
   1565a:	mov    DWORD PTR [eax+0x8],ebx
   1565d:	mov    eax,DWORD PTR [edi+0x4]
   15660:	mov    DWORD PTR [ebx+0x4],eax
   15663:	mov    eax,DWORD PTR [ebx+0x14]
   15666:	mov    ecx,DWORD PTR [edi+0x14]
   15669:	mov    DWORD PTR [ebx+0x14],ecx
   1566c:	mov    DWORD PTR [edi+0x14],eax
   1566f:	mov    ebx,edi
   15671:	jmp    0x156d4
   15673:	mov    eax,DWORD PTR [edi+0x4]
   15676:	cmp    DWORD PTR [eax],edi
   15678:	jne    0x1567e
   1567a:	mov    DWORD PTR [eax],esi
   1567c:	jmp    0x15681
   1567e:	mov    DWORD PTR [eax+0x8],esi
   15681:	mov    eax,DWORD PTR [ecx+0x4]
   15684:	cmp    DWORD PTR [eax],edi
   15686:	mov    DWORD PTR [ebp-0x8],eax
   15689:	jne    0x156ab
   1568b:	mov    edx,DWORD PTR [edi+0x8]
   1568e:	cmp    edx,DWORD PTR ds:0x1a21c
   15694:	jne    0x1569d
   15696:	mov    edx,DWORD PTR [edi+0x4]
   15699:	mov    DWORD PTR [eax],edx
   1569b:	jmp    0x156ab
   1569d:	push   esi
   1569e:	call   0x139f4
   156a3:	mov    ecx,DWORD PTR [ebp-0x8]
   156a6:	mov    DWORD PTR [ecx],eax
   156a8:	mov    ecx,DWORD PTR [ebp-0x4]
   156ab:	mov    eax,DWORD PTR [ecx+0x4]
   156ae:	cmp    DWORD PTR [eax+0x8],edi
   156b1:	mov    DWORD PTR [ebp-0x8],eax
   156b4:	jne    0x156d4
   156b6:	mov    ecx,DWORD PTR [edi]
   156b8:	cmp    ecx,DWORD PTR ds:0x1a21c
   156be:	jne    0x156c8
   156c0:	mov    ecx,DWORD PTR [edi+0x4]
   156c3:	mov    DWORD PTR [eax+0x8],ecx
   156c6:	jmp    0x156d4
   156c8:	push   esi
   156c9:	call   0x139dc
   156ce:	mov    ecx,DWORD PTR [ebp-0x8]
   156d1:	mov    DWORD PTR [ecx+0x8],eax
   156d4:	xor    edi,edi
   156d6:	inc    edi
   156d7:	cmp    DWORD PTR [ebx+0x14],edi
   156da:	jne    0x157f5
   156e0:	jmp    0x157a3
   156e5:	cmp    DWORD PTR [esi+0x14],edi
   156e8:	jne    0x157f2
   156ee:	mov    ecx,DWORD PTR [esi+0x4]
   156f1:	mov    eax,DWORD PTR [ecx]
   156f3:	cmp    esi,eax
   156f5:	jne    0x1576e
   156f7:	mov    eax,DWORD PTR [ecx+0x8]
   156fa:	cmp    DWORD PTR [eax+0x14],0x0
   156fe:	jne    0x1571a
   15700:	mov    DWORD PTR [eax+0x14],edi
   15703:	mov    eax,DWORD PTR [esi+0x4]
   15706:	and    DWORD PTR [eax+0x14],0x0
   1570a:	push   DWORD PTR [esi+0x4]
   1570d:	mov    ecx,edx
   1570f:	call   0x14166
   15714:	mov    eax,DWORD PTR [esi+0x4]
   15717:	mov    eax,DWORD PTR [eax+0x8]
   1571a:	mov    ecx,DWORD PTR [eax]
   1571c:	cmp    DWORD PTR [ecx+0x14],edi
   1571f:	jne    0x15729
   15721:	mov    ecx,DWORD PTR [eax+0x8]
   15724:	cmp    DWORD PTR [ecx+0x14],edi
   15727:	je     0x1579c
   15729:	mov    ecx,DWORD PTR [eax+0x8]
   1572c:	cmp    DWORD PTR [ecx+0x14],edi
   1572f:	jne    0x15749
   15731:	mov    ecx,DWORD PTR [eax]
   15733:	mov    DWORD PTR [ecx+0x14],edi
   15736:	mov    ecx,DWORD PTR [ebp-0x4]
   15739:	and    DWORD PTR [eax+0x14],0x0
   1573d:	push   eax
   1573e:	call   0x141aa
   15743:	mov    eax,DWORD PTR [esi+0x4]
   15746:	mov    eax,DWORD PTR [eax+0x8]
   15749:	mov    ecx,DWORD PTR [esi+0x4]
   1574c:	mov    ecx,DWORD PTR [ecx+0x14]
   1574f:	mov    DWORD PTR [eax+0x14],ecx
   15752:	mov    ecx,DWORD PTR [esi+0x4]
   15755:	mov    DWORD PTR [ecx+0x14],edi
   15758:	mov    eax,DWORD PTR [eax+0x8]
   1575b:	mov    ecx,DWORD PTR [ebp-0x4]
   1575e:	mov    DWORD PTR [eax+0x14],edi
   15761:	push   DWORD PTR [esi+0x4]
   15764:	call   0x14166
   15769:	jmp    0x157f2
   1576e:	cmp    DWORD PTR [eax+0x14],0x0
   15772:	jne    0x1578d
   15774:	mov    DWORD PTR [eax+0x14],edi
   15777:	mov    eax,DWORD PTR [esi+0x4]
   1577a:	and    DWORD PTR [eax+0x14],0x0
   1577e:	push   DWORD PTR [esi+0x4]
   15781:	mov    ecx,edx
   15783:	call   0x141aa
   15788:	mov    eax,DWORD PTR [esi+0x4]
   1578b:	mov    eax,DWORD PTR [eax]
   1578d:	mov    ecx,DWORD PTR [eax+0x8]
   15790:	cmp    DWORD PTR [ecx+0x14],edi
   15793:	jne    0x157b4
   15795:	mov    ecx,DWORD PTR [eax]
   15797:	cmp    DWORD PTR [ecx+0x14],edi
   1579a:	jne    0x157b4
   1579c:	and    DWORD PTR [eax+0x14],0x0
   157a0:	mov    esi,DWORD PTR [esi+0x4]
   157a3:	mov    edx,DWORD PTR [ebp-0x4]
   157a6:	mov    eax,DWORD PTR [edx+0x4]
   157a9:	cmp    esi,DWORD PTR [eax+0x4]
   157ac:	jne    0x156e5
   157b2:	jmp    0x157f2
   157b4:	mov    ecx,DWORD PTR [eax]
   157b6:	cmp    DWORD PTR [ecx+0x14],edi
   157b9:	jne    0x157d3
   157bb:	mov    ecx,DWORD PTR [eax+0x8]
   157be:	mov    DWORD PTR [ecx+0x14],edi
   157c1:	mov    ecx,DWORD PTR [ebp-0x4]
   157c4:	and    DWORD PTR [eax+0x14],0x0
   157c8:	push   eax
   157c9:	call   0x14166
   157ce:	mov    eax,DWORD PTR [esi+0x4]
   157d1:	mov    eax,DWORD PTR [eax]
   157d3:	mov    ecx,DWORD PTR [esi+0x4]
   157d6:	mov    ecx,DWORD PTR [ecx+0x14]
   157d9:	mov    DWORD PTR [eax+0x14],ecx
   157dc:	mov    ecx,DWORD PTR [esi+0x4]
   157df:	mov    DWORD PTR [ecx+0x14],edi
   157e2:	mov    eax,DWORD PTR [eax]
   157e4:	mov    ecx,DWORD PTR [ebp-0x4]
   157e7:	mov    DWORD PTR [eax+0x14],edi
   157ea:	push   DWORD PTR [esi+0x4]
   157ed:	call   0x141aa
   157f2:	mov    DWORD PTR [esi+0x14],edi
   157f5:	push   0x0
   157f7:	lea    ecx,[ebx+0xc]
   157fa:	call   0x142ba
   157ff:	push   ebx
   15800:	call   0x1206c
   15805:	mov    eax,DWORD PTR [ebp-0x4]
   15808:	dec    DWORD PTR [eax+0xc]
   1580b:	mov    eax,DWORD PTR [ebp+0x8]
   1580e:	pop    ecx
   1580f:	mov    ecx,DWORD PTR [ebp+0xc]
   15812:	pop    edi
   15813:	pop    esi
   15814:	mov    DWORD PTR [eax],ecx
   15816:	pop    ebx
   15817:	leave  
   15818:	ret    0x8
   1581b:	int3   
   1581c:	push   ebx
   1581d:	push   esi
   1581e:	push   edi
   1581f:	mov    edi,DWORD PTR [esp+0x10]
   15823:	cmp    edi,DWORD PTR ds:0x1a21c
   15829:	mov    ebx,ecx
   1582b:	mov    esi,edi
   1582d:	je     0x15856
   1582f:	push   DWORD PTR [esi+0x8]
   15832:	mov    ecx,ebx
   15834:	call   0x1581c
   15839:	mov    esi,DWORD PTR [esi]
   1583b:	push   0x0
   1583d:	lea    ecx,[edi+0xc]
   15840:	call   0x142ba
   15845:	push   edi
   15846:	call   0x1206c
   1584b:	cmp    esi,DWORD PTR ds:0x1a21c
   15851:	pop    ecx
   15852:	mov    edi,esi
   15854:	jne    0x1582f
   15856:	pop    edi
   15857:	pop    esi
   15858:	pop    ebx
   15859:	ret    0x4
   1585c:	push   ebp
   1585d:	mov    ebp,esp
   1585f:	push   ebx
   15860:	push   esi
   15861:	push   edi
   15862:	push   0x18
   15864:	mov    ebx,ecx
   15866:	call   0x12044
   1586b:	mov    esi,DWORD PTR [ebp+0x10]
   1586e:	mov    edi,eax
   15870:	and    DWORD PTR [edi+0x14],0x0
   15874:	mov    DWORD PTR [edi+0x4],esi
   15877:	mov    eax,ds:0x1a21c
   1587c:	pop    ecx
   1587d:	mov    DWORD PTR [edi],eax
   1587f:	mov    eax,ds:0x1a21c
   15884:	lea    ecx,[edi+0xc]
   15887:	test   ecx,ecx
   15889:	mov    DWORD PTR [edi+0x8],eax
   1588c:	je     0x15896
   1588e:	push   DWORD PTR [ebp+0x14]
   15891:	call   0x1429c
   15896:	inc    DWORD PTR [ebx+0xc]
   15899:	cmp    esi,DWORD PTR [ebx+0x4]
   1589c:	je     0x158c3
   1589e:	mov    eax,DWORD PTR [ebp+0xc]
   158a1:	cmp    eax,DWORD PTR ds:0x1a21c
   158a7:	jne    0x158c3
   158a9:	mov    eax,DWORD PTR [ebp+0x14]
   158ac:	mov    eax,DWORD PTR [eax]
   158ae:	cmp    eax,DWORD PTR [esi+0xc]
   158b1:	jl     0x158c3
   158b3:	mov    DWORD PTR [esi+0x8],edi
   158b6:	mov    eax,DWORD PTR [ebx+0x4]
   158b9:	cmp    esi,DWORD PTR [eax+0x8]
   158bc:	jne    0x158da
   158be:	mov    DWORD PTR [eax+0x8],edi
   158c1:	jmp    0x158da
   158c3:	mov    DWORD PTR [esi],edi
   158c5:	mov    eax,DWORD PTR [ebx+0x4]
   158c8:	cmp    esi,eax
   158ca:	jne    0x158d4
   158cc:	mov    DWORD PTR [eax+0x4],edi
   158cf:	mov    eax,DWORD PTR [ebx+0x4]
   158d2:	jmp    0x158be
   158d4:	cmp    esi,DWORD PTR [eax]
   158d6:	jne    0x158da
   158d8:	mov    DWORD PTR [eax],edi
   158da:	mov    eax,DWORD PTR [ebx+0x4]
   158dd:	cmp    edi,DWORD PTR [eax+0x4]
   158e0:	mov    esi,edi
   158e2:	je     0x15998
   158e8:	mov    eax,DWORD PTR [esi+0x4]
   158eb:	cmp    DWORD PTR [eax+0x14],0x0
   158ef:	jne    0x15998
   158f5:	mov    edx,DWORD PTR [eax+0x4]
   158f8:	mov    ecx,DWORD PTR [edx]
   158fa:	cmp    eax,ecx
   158fc:	jne    0x15957
   158fe:	mov    ecx,DWORD PTR [edx+0x8]
   15901:	cmp    DWORD PTR [ecx+0x14],0x0
   15905:	jne    0x15925
   15907:	mov    edx,DWORD PTR [esi+0x4]
   1590a:	xor    eax,eax
   1590c:	inc    eax
   1590d:	mov    DWORD PTR [edx+0x14],eax
   15910:	mov    DWORD PTR [ecx+0x14],eax
   15913:	mov    eax,DWORD PTR [esi+0x4]
   15916:	mov    eax,DWORD PTR [eax+0x4]
   15919:	and    DWORD PTR [eax+0x14],0x0
   1591d:	mov    eax,DWORD PTR [esi+0x4]
   15920:	mov    esi,DWORD PTR [eax+0x4]
   15923:	jmp    0x1598c
   15925:	cmp    esi,DWORD PTR [eax+0x8]
   15928:	jne    0x15934
   1592a:	mov    esi,eax
   1592c:	push   esi
   1592d:	mov    ecx,ebx
   1592f:	call   0x14166
   15934:	mov    eax,DWORD PTR [esi+0x4]
   15937:	mov    DWORD PTR [eax+0x14],0x1
   1593e:	mov    eax,DWORD PTR [esi+0x4]
   15941:	mov    eax,DWORD PTR [eax+0x4]
   15944:	and    DWORD PTR [eax+0x14],0x0
   15948:	mov    eax,DWORD PTR [esi+0x4]
   1594b:	push   DWORD PTR [eax+0x4]
   1594e:	mov    ecx,ebx
   15950:	call   0x141aa
   15955:	jmp    0x1598c
   15957:	cmp    DWORD PTR [ecx+0x14],0x0
   1595b:	je     0x15907
   1595d:	cmp    esi,DWORD PTR [eax]
   1595f:	jne    0x1596b
   15961:	mov    esi,eax
   15963:	push   esi
   15964:	mov    ecx,ebx
   15966:	call   0x141aa
   1596b:	mov    eax,DWORD PTR [esi+0x4]
   1596e:	mov    DWORD PTR [eax+0x14],0x1
   15975:	mov    eax,DWORD PTR [esi+0x4]
   15978:	mov    eax,DWORD PTR [eax+0x4]
   1597b:	and    DWORD PTR [eax+0x14],0x0
   1597f:	mov    eax,DWORD PTR [esi+0x4]
   15982:	push   DWORD PTR [eax+0x4]
   15985:	mov    ecx,ebx
   15987:	call   0x14166
   1598c:	mov    eax,DWORD PTR [ebx+0x4]
   1598f:	cmp    esi,DWORD PTR [eax+0x4]
   15992:	jne    0x158e8
   15998:	mov    eax,DWORD PTR [ebx+0x4]
   1599b:	mov    eax,DWORD PTR [eax+0x4]
   1599e:	mov    DWORD PTR [eax+0x14],0x1
   159a5:	mov    eax,DWORD PTR [ebp+0x8]
   159a8:	mov    DWORD PTR [eax],edi
   159aa:	pop    edi
   159ab:	pop    esi
   159ac:	pop    ebx
   159ad:	pop    ebp
   159ae:	ret    0x10
   159b1:	int3   
   159b2:	push   ebp
   159b3:	mov    ebp,esp
   159b5:	push   ecx
   159b6:	push   DWORD PTR [ebp-0x4]
   159b9:	push   DWORD PTR [ebp+0x10]
   159bc:	push   DWORD PTR [ebp+0xc]
   159bf:	push   DWORD PTR [ebp+0x8]
   159c2:	call   0x1506e
   159c7:	add    esp,0x10
   159ca:	leave  
   159cb:	ret    
   159cc:	push   ebp
   159cd:	mov    ebp,esp
   159cf:	mov    ecx,DWORD PTR ds:0x1a180
   159d5:	push   esi
   159d6:	push   DWORD PTR [ebp+0x8]
   159d9:	lea    eax,[ebp+0x8]
   159dc:	push   eax
   159dd:	call   0x14400
   159e2:	mov    esi,DWORD PTR [ebp+0x8]
   159e5:	mov    eax,ds:0x1a180
   159ea:	cmp    esi,DWORD PTR [eax+0x4]
   159ed:	jne    0x159f3
   159ef:	xor    al,al
   159f1:	jmp    0x15a23
   159f3:	mov    ecx,DWORD PTR [ebp+0xc]
   159f6:	lea    eax,[esi+0x1c]
   159f9:	push   eax
   159fa:	call   0x17466
   159ff:	mov    ecx,DWORD PTR [ebp+0x10]
   15a02:	lea    eax,[esi+0x20]
   15a05:	push   eax
   15a06:	call   0x17466
   15a0b:	mov    eax,DWORD PTR [esi+0x24]
   15a0e:	mov    ecx,DWORD PTR [ebp+0x14]
   15a11:	mov    DWORD PTR [ecx],eax
   15a13:	mov    ecx,DWORD PTR [esi+0x28]
   15a16:	mov    eax,DWORD PTR [ebp+0x18]
   15a19:	mov    DWORD PTR [eax],ecx
   15a1b:	mov    ecx,DWORD PTR [esi+0x2c]
   15a1e:	mov    DWORD PTR [eax+0x4],ecx
   15a21:	mov    al,0x1
   15a23:	pop    esi
   15a24:	pop    ebp
   15a25:	ret    0x14
   15a28:	dec    ebx
   15a29:	gs push edi
   15a2b:	popa   
   15a2c:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   15a34:	gs js  0x15a86
   15a37:	bound  ebp,QWORD PTR [edx+0x65]
   15a3a:	arpl   WORD PTR [eax+ebp*1+0x29],si
   15a3e:	and    BYTE PTR [ebp+0x52],al
   15a41:	push   edx
   15a42:	dec    edi
   15a43:	push   edx
   15a44:	and    BYTE PTR [edx],bh
   15a46:	and    BYTE PTR [eax],dh
   15a48:	js     0x15a6f
   15a4a:	cmp    BYTE PTR cs:[eax+0xa],bh
   15a4e:	add    ah,cl
   15a50:	push   0x30
   15a52:	push   0x181c8
   15a57:	call   0x17d50
   15a5c:	xor    ebx,ebx
   15a5e:	push   ebx
   15a5f:	push   ebx
   15a60:	push   ebx
   15a61:	push   ebx
   15a62:	push   0x1a10c
   15a67:	call   DWORD PTR ds:0x18040
   15a6d:	cmp    eax,ebx
   15a6f:	jge    0x15a83
   15a71:	push   eax
   15a72:	push   0x15a28
   15a77:	call   0x17da2
   15a7c:	pop    ecx
   15a7d:	pop    ecx
   15a7e:	jmp    0x15b4c
   15a83:	mov    DWORD PTR [ebp-0x4],ebx
   15a86:	mov    esi,DWORD PTR ds:0x1a174
   15a8c:	mov    DWORD PTR [ebp-0x2c],esi
   15a8f:	lea    eax,[ebp+0x8]
   15a92:	push   eax
   15a93:	lea    eax,[ebp-0x20]
   15a96:	push   eax
   15a97:	mov    ecx,esi
   15a99:	call   0x14442
   15a9e:	mov    esi,DWORD PTR [esi+0x4]
   15aa1:	mov    DWORD PTR [ebp-0x30],esi
   15aa4:	mov    DWORD PTR [ebp-0x34],esi
   15aa7:	mov    eax,DWORD PTR [ebp-0x20]
   15aaa:	cmp    eax,esi
   15aac:	jne    0x15aba
   15aae:	mov    eax,DWORD PTR [ebp+0xc]
   15ab1:	mov    DWORD PTR [eax+0x8],0x1
   15ab8:	jmp    0x15b23
   15aba:	lea    edx,[eax+0x10]
   15abd:	mov    eax,edx
   15abf:	mov    DWORD PTR [ebp-0x38],eax
   15ac2:	mov    eax,DWORD PTR [eax]
   15ac4:	cmp    eax,ebx
   15ac6:	jne    0x15acc
   15ac8:	xor    ecx,ecx
   15aca:	jmp    0x15acf
   15acc:	mov    ecx,DWORD PTR [eax+0x8]
   15acf:	mov    DWORD PTR [ebp-0x24],ecx
   15ad2:	mov    eax,DWORD PTR [ebp+0xc]
   15ad5:	cmp    ecx,DWORD PTR [eax]
   15ad7:	jbe    0x15ae4
   15ad9:	mov    DWORD PTR [eax],ecx
   15adb:	mov    DWORD PTR [eax+0x8],0x2
   15ae2:	jmp    0x15b23
   15ae4:	mov    DWORD PTR [eax+0x8],ebx
   15ae7:	mov    ecx,edx
   15ae9:	mov    DWORD PTR [ebp-0x3c],ecx
   15aec:	mov    ecx,DWORD PTR [ecx]
   15aee:	cmp    ecx,ebx
   15af0:	jne    0x15af7
   15af2:	mov    DWORD PTR [ebp-0x1c],ebx
   15af5:	jmp    0x15afd
   15af7:	mov    ecx,DWORD PTR [ecx+0x8]
   15afa:	mov    DWORD PTR [ebp-0x1c],ecx
   15afd:	mov    DWORD PTR [ebp-0x40],edx
   15b00:	mov    ecx,DWORD PTR [edx]
   15b02:	cmp    ecx,ebx
   15b04:	jne    0x15b0a
   15b06:	xor    esi,esi
   15b08:	jmp    0x15b0c
   15b0a:	mov    esi,DWORD PTR [ecx]
   15b0c:	mov    DWORD PTR [ebp-0x28],esi
   15b0f:	mov    ecx,DWORD PTR [ebp-0x1c]
   15b12:	lea    edi,[eax+0xc]
   15b15:	mov    eax,ecx
   15b17:	shr    ecx,0x2
   15b1a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15b1c:	mov    ecx,eax
   15b1e:	and    ecx,0x3
   15b21:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   15b23:	or     DWORD PTR [ebp-0x4],0xffffffff
   15b27:	jmp    0x15b40
   15b29:	xor    eax,eax
   15b2b:	inc    eax
   15b2c:	ret    
   15b2d:	mov    esp,DWORD PTR [ebp-0x18]
   15b30:	mov    eax,DWORD PTR [ebp+0xc]
   15b33:	mov    DWORD PTR [eax+0x8],0x4
   15b3a:	or     DWORD PTR [ebp-0x4],0xffffffff
   15b3e:	xor    ebx,ebx
   15b40:	push   ebx
   15b41:	push   0x1a10c
   15b46:	call   DWORD PTR ds:0x1803c
   15b4c:	call   0x17d8b
   15b51:	ret    0x8
   15b54:	push   ebp
   15b55:	mov    ebp,esp
   15b57:	push   esi
   15b58:	push   DWORD PTR [ebp+0x8]
   15b5b:	lea    eax,[ebp+0x8]
   15b5e:	push   eax
   15b5f:	mov    esi,ecx
   15b61:	call   0x14496
   15b66:	mov    eax,DWORD PTR [ebp+0x8]
   15b69:	cmp    eax,DWORD PTR [esi+0x4]
   15b6c:	pop    esi
   15b6d:	je     0x15b7f
   15b6f:	mov    ecx,DWORD PTR [ebp+0xc]
   15b72:	add    eax,0x18
   15b75:	push   eax
   15b76:	call   0x1380c
   15b7b:	mov    al,0x1
   15b7d:	jmp    0x15b81
   15b7f:	xor    al,al
   15b81:	pop    ebp
   15b82:	ret    0x8
   15b85:	int3   
   15b86:	push   ebp
   15b87:	mov    ebp,esp
   15b89:	push   ecx
   15b8a:	push   ecx
   15b8b:	push   DWORD PTR [ebp+0xc]
   15b8e:	lea    eax,[ebp-0x8]
   15b91:	push   eax
   15b92:	call   0x15092
   15b97:	mov    eax,DWORD PTR [ebp+0x8]
   15b9a:	mov    ecx,DWORD PTR [ebp-0x8]
   15b9d:	mov    DWORD PTR [eax],ecx
   15b9f:	mov    cl,BYTE PTR [ebp-0x4]
   15ba2:	mov    BYTE PTR [eax+0x4],cl
   15ba5:	leave  
   15ba6:	ret    0x8
   15ba9:	int3   
   15baa:	push   ecx
   15bab:	push   esi
   15bac:	mov    esi,ecx
   15bae:	mov    eax,DWORD PTR [esi+0x4]
   15bb1:	mov    ecx,DWORD PTR [eax]
   15bb3:	push   eax
   15bb4:	push   ecx
   15bb5:	lea    eax,[esp+0xc]
   15bb9:	push   eax
   15bba:	mov    ecx,esi
   15bbc:	call   0x15124
   15bc1:	push   DWORD PTR [esi+0x4]
   15bc4:	call   0x1206c
   15bc9:	pop    ecx
   15bca:	xor    ecx,ecx
   15bcc:	mov    DWORD PTR [esi+0x4],ecx
   15bcf:	mov    DWORD PTR [esi+0xc],ecx
   15bd2:	dec    DWORD PTR ds:0x1a228
   15bd8:	pop    esi
   15bd9:	jne    0x15bf1
   15bdb:	mov    eax,ds:0x1a210
   15be0:	cmp    eax,ecx
   15be2:	mov    DWORD PTR ds:0x1a210,ecx
   15be8:	je     0x15bf1
   15bea:	push   eax
   15beb:	call   0x1206c
   15bf0:	pop    ecx
   15bf1:	pop    ecx
   15bf2:	ret    
   15bf3:	int3   
   15bf4:	push   ebp
   15bf5:	mov    ebp,esp
   15bf7:	push   ecx
   15bf8:	push   ecx
   15bf9:	push   DWORD PTR [ebp+0xc]
   15bfc:	lea    eax,[ebp-0x8]
   15bff:	push   eax
   15c00:	call   0x151e0
   15c05:	mov    eax,DWORD PTR [ebp+0x8]
   15c08:	mov    ecx,DWORD PTR [ebp-0x8]
   15c0b:	mov    DWORD PTR [eax],ecx
   15c0d:	mov    cl,BYTE PTR [ebp-0x4]
   15c10:	mov    BYTE PTR [eax+0x4],cl
   15c13:	leave  
   15c14:	ret    0x8
   15c17:	int3   
   15c18:	push   ebp
   15c19:	mov    ebp,esp
   15c1b:	push   ecx
   15c1c:	push   ecx
   15c1d:	push   DWORD PTR [ebp+0xc]
   15c20:	lea    eax,[ebp-0x8]
   15c23:	push   eax
   15c24:	call   0x15274
   15c29:	mov    eax,DWORD PTR [ebp+0x8]
   15c2c:	mov    ecx,DWORD PTR [ebp-0x8]
   15c2f:	mov    DWORD PTR [eax],ecx
   15c31:	mov    cl,BYTE PTR [ebp-0x4]
   15c34:	mov    BYTE PTR [eax+0x4],cl
   15c37:	leave  
   15c38:	ret    0x8
   15c3b:	int3   
   15c3c:	push   ebp
   15c3d:	mov    ebp,esp
   15c3f:	push   ecx
   15c40:	push   ecx
   15c41:	push   DWORD PTR [ebp+0x8]
   15c44:	lea    eax,[ebp-0x8]
   15c47:	push   eax
   15c48:	call   0x144d8
   15c4d:	and    DWORD PTR [ebp+0x8],0x0
   15c51:	lea    eax,[ebp+0x8]
   15c54:	push   eax
   15c55:	push   DWORD PTR [ebp-0x4]
   15c58:	push   DWORD PTR [ebp-0x8]
   15c5b:	call   0x159b2
   15c60:	mov    eax,DWORD PTR [ebp+0x8]
   15c63:	add    esp,0xc
   15c66:	leave  
   15c67:	ret    0x4
   15c6a:	push   esi
   15c6b:	push   edi
   15c6c:	mov    edi,DWORD PTR [esp+0xc]
   15c70:	mov    al,BYTE PTR [edi+0x8]
   15c73:	mov    esi,ecx
   15c75:	mov    BYTE PTR [esi+0x8],al
   15c78:	call   0x14884
   15c7d:	push   edi
   15c7e:	mov    ecx,esi
   15c80:	call   0x15308
   15c85:	pop    edi
   15c86:	mov    eax,esi
   15c88:	pop    esi
   15c89:	ret    0x4
   15c8c:	push   ebp
   15c8d:	mov    ebp,esp
   15c8f:	push   ecx
   15c90:	push   esi
   15c91:	mov    esi,ecx
   15c93:	cmp    esi,DWORD PTR [ebp+0x8]
   15c96:	je     0x15cb4
   15c98:	mov    eax,DWORD PTR [esi+0x4]
   15c9b:	mov    ecx,DWORD PTR [eax]
   15c9d:	push   eax
   15c9e:	push   ecx
   15c9f:	lea    eax,[ebp-0x4]
   15ca2:	push   eax
   15ca3:	mov    ecx,esi
   15ca5:	call   0x15124
   15caa:	push   DWORD PTR [ebp+0x8]
   15cad:	mov    ecx,esi
   15caf:	call   0x15308
   15cb4:	mov    eax,esi
   15cb6:	pop    esi
   15cb7:	leave  
   15cb8:	ret    0x4
   15cbb:	int3   
   15cbc:	push   ebp
   15cbd:	mov    ebp,esp
   15cbf:	push   ecx
   15cc0:	push   esi
   15cc1:	mov    esi,ecx
   15cc3:	cmp    DWORD PTR [esi+0xc],0x0
   15cc7:	mov    ecx,DWORD PTR [ebp+0xc]
   15cca:	je     0x15d04
   15ccc:	mov    eax,DWORD PTR [esi+0x4]
   15ccf:	cmp    ecx,DWORD PTR [eax]
   15cd1:	jne    0x15d04
   15cd3:	cmp    DWORD PTR [ebp+0x10],eax
   15cd6:	jne    0x15d04
   15cd8:	push   DWORD PTR [eax+0x4]
   15cdb:	mov    ecx,esi
   15cdd:	call   0x14e6c
   15ce2:	mov    ecx,DWORD PTR ds:0x1a218
   15ce8:	mov    eax,DWORD PTR [esi+0x4]
   15ceb:	mov    DWORD PTR [eax+0x4],ecx
   15cee:	mov    eax,DWORD PTR [esi+0x4]
   15cf1:	and    DWORD PTR [esi+0xc],0x0
   15cf5:	mov    DWORD PTR [eax],eax
   15cf7:	mov    eax,DWORD PTR [esi+0x4]
   15cfa:	mov    DWORD PTR [eax+0x8],eax
   15cfd:	mov    eax,DWORD PTR [esi+0x4]
   15d00:	mov    ecx,DWORD PTR [eax]
   15d02:	jmp    0x15d29
   15d04:	cmp    ecx,DWORD PTR [ebp+0x10]
   15d07:	je     0x15d29
   15d09:	push   edi
   15d0a:	mov    edi,ecx
   15d0c:	lea    ecx,[ebp+0xc]
   15d0f:	call   0x1434c
   15d14:	push   edi
   15d15:	lea    eax,[ebp-0x4]
   15d18:	push   eax
   15d19:	mov    ecx,esi
   15d1b:	call   0x1535e
   15d20:	mov    ecx,DWORD PTR [ebp+0xc]
   15d23:	cmp    ecx,DWORD PTR [ebp+0x10]
   15d26:	jne    0x15d0a
   15d28:	pop    edi
   15d29:	mov    eax,DWORD PTR [ebp+0x8]
   15d2c:	mov    DWORD PTR [eax],ecx
   15d2e:	pop    esi
   15d2f:	leave  
   15d30:	ret    0xc
   15d33:	int3   
   15d34:	push   ebp
   15d35:	mov    ebp,esp
   15d37:	push   ecx
   15d38:	push   ebx
   15d39:	push   esi
   15d3a:	push   edi
   15d3b:	mov    edi,ecx
   15d3d:	mov    eax,DWORD PTR [edi+0x4]
   15d40:	mov    esi,DWORD PTR [eax+0x4]
   15d43:	mov    ebx,eax
   15d45:	mov    eax,ds:0x1a21c
   15d4a:	cmp    esi,eax
   15d4c:	mov    dl,0x1
   15d4e:	je     0x15d6c
   15d50:	mov    ecx,DWORD PTR [ebp+0xc]
   15d53:	mov    ecx,DWORD PTR [ecx]
   15d55:	cmp    ecx,DWORD PTR [esi+0xc]
   15d58:	mov    ebx,esi
   15d5a:	setl   dl
   15d5d:	test   dl,dl
   15d5f:	je     0x15d65
   15d61:	mov    esi,DWORD PTR [esi]
   15d63:	jmp    0x15d68
   15d65:	mov    esi,DWORD PTR [esi+0x8]
   15d68:	cmp    esi,eax
   15d6a:	jne    0x15d55
   15d6c:	cmp    BYTE PTR [edi+0x8],0x0
   15d70:	je     0x15d77
   15d72:	push   DWORD PTR [ebp+0xc]
   15d75:	jmp    0x15d9d
   15d77:	test   dl,dl
   15d79:	mov    ecx,ebx
   15d7b:	mov    DWORD PTR [ebp-0x4],ecx
   15d7e:	je     0x15d92
   15d80:	mov    eax,DWORD PTR [edi+0x4]
   15d83:	cmp    ebx,DWORD PTR [eax]
   15d85:	je     0x15d72
   15d87:	lea    ecx,[ebp-0x4]
   15d8a:	call   0x13a0c
   15d8f:	mov    ecx,DWORD PTR [ebp-0x4]
   15d92:	mov    edx,DWORD PTR [ecx+0xc]
   15d95:	mov    eax,DWORD PTR [ebp+0xc]
   15d98:	cmp    edx,DWORD PTR [eax]
   15d9a:	jge    0x15db5
   15d9c:	push   eax
   15d9d:	push   ebx
   15d9e:	push   esi
   15d9f:	lea    eax,[ebp+0xc]
   15da2:	push   eax
   15da3:	mov    ecx,edi
   15da5:	call   0x1585c
   15daa:	mov    ecx,DWORD PTR [eax]
   15dac:	mov    eax,DWORD PTR [ebp+0x8]
   15daf:	mov    BYTE PTR [eax+0x4],0x1
   15db3:	jmp    0x15dbc
   15db5:	mov    eax,DWORD PTR [ebp+0x8]
   15db8:	mov    BYTE PTR [eax+0x4],0x0
   15dbc:	pop    edi
   15dbd:	pop    esi
   15dbe:	mov    DWORD PTR [eax],ecx
   15dc0:	pop    ebx
   15dc1:	leave  
   15dc2:	ret    0x8
   15dc5:	int3   
   15dc6:	push   ebp
   15dc7:	mov    ebp,esp
   15dc9:	push   ecx
   15dca:	push   esi
   15dcb:	mov    esi,ecx
   15dcd:	cmp    DWORD PTR [esi+0xc],0x0
   15dd1:	mov    ecx,DWORD PTR [ebp+0xc]
   15dd4:	je     0x15e0e
   15dd6:	mov    eax,DWORD PTR [esi+0x4]
   15dd9:	cmp    ecx,DWORD PTR [eax]
   15ddb:	jne    0x15e0e
   15ddd:	cmp    DWORD PTR [ebp+0x10],eax
   15de0:	jne    0x15e0e
   15de2:	push   DWORD PTR [eax+0x4]
   15de5:	mov    ecx,esi
   15de7:	call   0x1581c
   15dec:	mov    ecx,DWORD PTR ds:0x1a21c
   15df2:	mov    eax,DWORD PTR [esi+0x4]
   15df5:	mov    DWORD PTR [eax+0x4],ecx
   15df8:	mov    eax,DWORD PTR [esi+0x4]
   15dfb:	and    DWORD PTR [esi+0xc],0x0
   15dff:	mov    DWORD PTR [eax],eax
   15e01:	mov    eax,DWORD PTR [esi+0x4]
   15e04:	mov    DWORD PTR [eax+0x8],eax
   15e07:	mov    eax,DWORD PTR [esi+0x4]
   15e0a:	mov    ecx,DWORD PTR [eax]
   15e0c:	jmp    0x15e33
   15e0e:	cmp    ecx,DWORD PTR [ebp+0x10]
   15e11:	je     0x15e33
   15e13:	push   edi
   15e14:	mov    edi,ecx
   15e16:	lea    ecx,[ebp+0xc]
   15e19:	call   0x13a80
   15e1e:	push   edi
   15e1f:	lea    eax,[ebp-0x4]
   15e22:	push   eax
   15e23:	mov    ecx,esi
   15e25:	call   0x155bc
   15e2a:	mov    ecx,DWORD PTR [ebp+0xc]
   15e2d:	cmp    ecx,DWORD PTR [ebp+0x10]
   15e30:	jne    0x15e14
   15e32:	pop    edi
   15e33:	mov    eax,DWORD PTR [ebp+0x8]
   15e36:	mov    DWORD PTR [eax],ecx
   15e38:	pop    esi
   15e39:	leave  
   15e3a:	ret    0xc
   15e3d:	int3   
   15e3e:	push   ebp
   15e3f:	mov    ebp,esp
   15e41:	sub    esp,0x10
   15e44:	push   DWORD PTR [ebp+0x8]
   15e47:	lea    ecx,[ebp-0x10]
   15e4a:	call   0x15c6a
   15e4f:	push   DWORD PTR [ebp+0xc]
   15e52:	mov    ecx,DWORD PTR [ebp+0x8]
   15e55:	call   0x15c8c
   15e5a:	mov    ecx,DWORD PTR [ebp+0xc]
   15e5d:	lea    eax,[ebp-0x10]
   15e60:	push   eax
   15e61:	call   0x15c8c
   15e66:	lea    ecx,[ebp-0x10]
   15e69:	call   0x15baa
   15e6e:	leave  
   15e6f:	ret    0x8
   15e72:	push   ebp
   15e73:	mov    ebp,esp
   15e75:	sub    esp,0x18
   15e78:	push   ebx
   15e79:	lea    ecx,[ebp-0x18]
   15e7c:	call   0x1200e
   15e81:	mov    ecx,DWORD PTR ds:0x1a104
   15e87:	lea    eax,[ebp-0x18]
   15e8a:	push   eax
   15e8b:	push   DWORD PTR [ebp+0x8]
   15e8e:	call   0x15b54
   15e93:	test   al,al
   15e95:	jne    0x15e9b
   15e97:	xor    bl,bl
   15e99:	jmp    0x15ecc
   15e9b:	mov    ecx,DWORD PTR [ebp+0xc]
   15e9e:	lea    eax,[ebp-0x14]
   15ea1:	push   eax
   15ea2:	call   0x17466
   15ea7:	mov    ecx,DWORD PTR [ebp+0x10]
   15eaa:	lea    eax,[ebp-0x10]
   15ead:	push   eax
   15eae:	call   0x17466
   15eb3:	mov    eax,DWORD PTR [ebp+0x14]
   15eb6:	mov    ecx,DWORD PTR [ebp-0x8]
   15eb9:	mov    DWORD PTR [eax],0x2
   15ebf:	mov    eax,DWORD PTR [ebp+0x18]
   15ec2:	mov    DWORD PTR [eax],ecx
   15ec4:	mov    ecx,DWORD PTR [ebp-0x4]
   15ec7:	mov    DWORD PTR [eax+0x4],ecx
   15eca:	mov    bl,0x1
   15ecc:	lea    ecx,[ebp-0x18]
   15ecf:	call   0x137f0
   15ed4:	mov    al,bl
   15ed6:	pop    ebx
   15ed7:	leave  
   15ed8:	ret    0x14
   15edb:	int3   
   15edc:	dec    ebx
   15edd:	gs push edi
   15edf:	popa   
   15ee0:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   15ee8:	gs js  0x15f3a
   15eeb:	bound  ebp,QWORD PTR [edx+0x65]
   15eee:	arpl   WORD PTR [eax+ebp*1+0x29],si
   15ef2:	and    BYTE PTR [ebp+0x52],al
   15ef5:	push   edx
   15ef6:	dec    edi
   15ef7:	push   edx
   15ef8:	and    BYTE PTR [edx],bh
   15efa:	and    BYTE PTR [eax],dh
   15efc:	js     0x15f23
   15efe:	cmp    BYTE PTR cs:[eax+0xa],bh
   15f02:	add    BYTE PTR [eax],al
   15f04:	add    ah,cl
   15f06:	push   0x2c
   15f08:	push   0x181d8
   15f0d:	call   0x17d50
   15f12:	xor    esi,esi
   15f14:	push   esi
   15f15:	push   esi
   15f16:	push   esi
   15f17:	push   esi
   15f18:	push   0x1a10c
   15f1d:	call   DWORD PTR ds:0x18040
   15f23:	cmp    eax,esi
   15f25:	jge    0x15f39
   15f27:	push   eax
   15f28:	push   0x15edc
   15f2d:	call   0x17da2
   15f32:	pop    ecx
   15f33:	pop    ecx
   15f34:	jmp    0x1605b
   15f39:	mov    DWORD PTR [ebp-0x4],esi
   15f3c:	mov    BYTE PTR [ebp-0x19],0x0
   15f40:	push   0x15f03
   15f45:	lea    ecx,[ebp-0x24]
   15f48:	call   0x1753a
   15f4d:	push   0x15f04
   15f52:	lea    ecx,[ebp-0x20]
   15f55:	call   0x1753a
   15f5a:	mov    esi,DWORD PTR [ebp+0xc]
   15f5d:	lea    eax,[ebp-0x3c]
   15f60:	push   eax
   15f61:	lea    eax,[ebp-0x28]
   15f64:	push   eax
   15f65:	lea    eax,[ebp-0x20]
   15f68:	push   eax
   15f69:	lea    eax,[ebp-0x24]
   15f6c:	push   eax
   15f6d:	push   DWORD PTR [ebp+0x8]
   15f70:	test   BYTE PTR [esi+0x4],0x4
   15f74:	je     0x15f7d
   15f76:	call   0x15e72
   15f7b:	jmp    0x15f82
   15f7d:	call   0x159cc
   15f82:	mov    BYTE PTR [ebp-0x19],al
   15f85:	test   al,al
   15f87:	jne    0x15f95
   15f89:	mov    DWORD PTR [esi+0x8],0x1
   15f90:	jmp    0x1604a
   15f95:	mov    ecx,DWORD PTR [ebp+0x8]
   15f98:	call   0x174a8
   15f9d:	mov    edi,eax
   15f9f:	inc    edi
   15fa0:	mov    DWORD PTR [ebp-0x2c],edi
   15fa3:	lea    ecx,[ebp-0x24]
   15fa6:	call   0x174a8
   15fab:	lea    ebx,[eax+edi*1+0x1]
   15faf:	mov    DWORD PTR [ebp-0x30],ebx
   15fb2:	lea    ecx,[ebp-0x20]
   15fb5:	call   0x174a8
   15fba:	lea    eax,[eax+ebx*1+0x1]
   15fbe:	mov    DWORD PTR [ebp-0x34],eax
   15fc1:	cmp    eax,DWORD PTR [esi]
   15fc3:	jbe    0x15fd0
   15fc5:	mov    DWORD PTR [esi],eax
   15fc7:	mov    DWORD PTR [esi+0x8],0x2
   15fce:	jmp    0x1604a
   15fd0:	and    DWORD PTR [esi+0x8],0x0
   15fd4:	mov    eax,DWORD PTR [ebp-0x28]
   15fd7:	mov    DWORD PTR [esi+0xc],eax
   15fda:	mov    eax,DWORD PTR [ebp-0x3c]
   15fdd:	mov    DWORD PTR [esi+0x10],eax
   15fe0:	mov    eax,DWORD PTR [ebp-0x38]
   15fe3:	mov    DWORD PTR [esi+0x14],eax
   15fe6:	mov    ecx,DWORD PTR [ebp+0x8]
   15fe9:	call   0x174a4
   15fee:	lea    ecx,[esi+0x18]
   15ff1:	mov    dl,BYTE PTR [eax]
   15ff3:	mov    BYTE PTR [ecx],dl
   15ff5:	inc    eax
   15ff6:	inc    ecx
   15ff7:	test   dl,dl
   15ff9:	jne    0x15ff1
   15ffb:	lea    ecx,[ebp-0x24]
   15ffe:	call   0x174a4
   16003:	lea    edx,[edi+esi*1+0x18]
   16007:	mov    cl,BYTE PTR [eax]
   16009:	mov    BYTE PTR [edx],cl
   1600b:	inc    eax
   1600c:	inc    edx
   1600d:	test   cl,cl
   1600f:	jne    0x16007
   16011:	lea    ecx,[ebp-0x20]
   16014:	call   0x174a4
   16019:	lea    edx,[ebx+esi*1+0x18]
   1601d:	mov    cl,BYTE PTR [eax]
   1601f:	mov    BYTE PTR [edx],cl
   16021:	inc    eax
   16022:	inc    edx
   16023:	test   cl,cl
   16025:	jne    0x1601d
   16027:	lea    ecx,[ebp-0x20]
   1602a:	call   0x1745c
   1602f:	lea    ecx,[ebp-0x24]
   16032:	call   0x1745c
   16037:	jmp    0x1604a
   16039:	xor    eax,eax
   1603b:	inc    eax
   1603c:	ret    
   1603d:	mov    esp,DWORD PTR [ebp-0x18]
   16040:	mov    eax,DWORD PTR [ebp+0xc]
   16043:	mov    DWORD PTR [eax+0x8],0x4
   1604a:	or     DWORD PTR [ebp-0x4],0xffffffff
   1604e:	push   0x0
   16050:	push   0x1a10c
   16055:	call   DWORD PTR ds:0x1803c
   1605b:	call   0x17d8b
   16060:	ret    0x8
   16063:	int3   
   16064:	push   ebp
   16065:	mov    ebp,esp
   16067:	sub    esp,0x40
   1606a:	push   esi
   1606b:	mov    esi,ecx
   1606d:	lea    ecx,[ebp-0x20]
   16070:	call   0x1200e
   16075:	push   eax
   16076:	push   DWORD PTR [ebp+0x8]
   16079:	lea    ecx,[ebp-0x40]
   1607c:	call   0x13e94
   16081:	push   eax
   16082:	lea    eax,[ebp-0x8]
   16085:	push   eax
   16086:	mov    ecx,esi
   16088:	call   0x15c18
   1608d:	mov    esi,DWORD PTR [eax]
   1608f:	lea    ecx,[ebp-0x38]
   16092:	call   0x137f0
   16097:	lea    ecx,[ebp-0x40]
   1609a:	call   0x1745c
   1609f:	lea    ecx,[ebp-0x20]
   160a2:	call   0x137f0
   160a7:	lea    eax,[esi+0x18]
   160aa:	pop    esi
   160ab:	leave  
   160ac:	ret    0x4
   160af:	int3   
   160b0:	push   ebp
   160b1:	mov    ebp,esp
   160b3:	sub    esp,0x20
   160b6:	push   esi
   160b7:	mov    esi,ecx
   160b9:	mov    eax,DWORD PTR [esi+0x20]
   160bc:	mov    ecx,DWORD PTR [esi+0x24]
   160bf:	add    ecx,eax
   160c1:	cmp    DWORD PTR [esi+0xc],ecx
   160c4:	jbe    0x16156
   160ca:	test   eax,eax
   160cc:	mov    ecx,DWORD PTR [esi+0x14]
   160cf:	mov    ecx,DWORD PTR [ecx]
   160d1:	push   edi
   160d2:	mov    DWORD PTR [ebp-0x4],ecx
   160d5:	je     0x160e4
   160d7:	mov    edi,eax
   160d9:	lea    ecx,[ebp-0x4]
   160dc:	call   0x13fb6
   160e1:	dec    edi
   160e2:	jne    0x160d9
   160e4:	mov    eax,DWORD PTR [ebp-0x4]
   160e7:	mov    edi,DWORD PTR [eax+0xc]
   160ea:	lea    ecx,[ebp-0x20]
   160ed:	mov    BYTE PTR [ebp-0x18],0x0
   160f1:	call   0x14884
   160f6:	mov    eax,DWORD PTR [esi+0x4]
   160f9:	mov    ecx,DWORD PTR [eax]
   160fb:	cmp    ecx,eax
   160fd:	mov    DWORD PTR [ebp-0x4],ecx
   16100:	je     0x16140
   16102:	lea    edx,[ecx+0x30]
   16105:	mov    eax,DWORD PTR [edx]
   16107:	cmp    eax,edi
   16109:	jae    0x1611f
   1610b:	push   ecx
   1610c:	lea    eax,[ebp-0x8]
   1610f:	push   eax
   16110:	mov    ecx,esi
   16112:	call   0x14a46
   16117:	mov    ecx,DWORD PTR [ebp-0x8]
   1611a:	mov    DWORD PTR [ebp-0x4],ecx
   1611d:	jmp    0x1613b
   1611f:	sub    eax,edi
   16121:	mov    DWORD PTR [edx],eax
   16123:	push   edx
   16124:	lea    eax,[ebp-0x10]
   16127:	push   eax
   16128:	lea    ecx,[ebp-0x20]
   1612b:	call   0x15b86
   16130:	lea    ecx,[ebp-0x4]
   16133:	call   0x13f4c
   16138:	mov    ecx,DWORD PTR [ebp-0x4]
   1613b:	cmp    ecx,DWORD PTR [esi+0x4]
   1613e:	jne    0x16102
   16140:	lea    eax,[ebp-0x20]
   16143:	push   eax
   16144:	add    esi,0x10
   16147:	push   esi
   16148:	call   0x15e3e
   1614d:	lea    ecx,[ebp-0x20]
   16150:	call   0x15baa
   16155:	pop    edi
   16156:	pop    esi
   16157:	leave  
   16158:	ret    
   16159:	int3   
   1615a:	push   ecx
   1615b:	mov    eax,DWORD PTR [ecx+0x4]
   1615e:	mov    edx,DWORD PTR [eax]
   16160:	push   eax
   16161:	push   edx
   16162:	lea    eax,[esp+0x8]
   16166:	push   eax
   16167:	call   0x15cbc
   1616c:	pop    ecx
   1616d:	ret    
   1616e:	push   ebp
   1616f:	mov    ebp,esp
   16171:	push   ecx
   16172:	push   ecx
   16173:	push   DWORD PTR [ebp+0xc]
   16176:	lea    eax,[ebp-0x8]
   16179:	push   eax
   1617a:	call   0x15d34
   1617f:	mov    eax,DWORD PTR [ebp+0x8]
   16182:	mov    ecx,DWORD PTR [ebp-0x8]
   16185:	mov    DWORD PTR [eax],ecx
   16187:	mov    cl,BYTE PTR [ebp-0x4]
   1618a:	mov    BYTE PTR [eax+0x4],cl
   1618d:	leave  
   1618e:	ret    0x8
   16191:	int3   
   16192:	push   ebp
   16193:	mov    ebp,esp
   16195:	push   ecx
   16196:	push   ecx
   16197:	push   esi
   16198:	push   DWORD PTR [ebp+0x8]
   1619b:	lea    eax,[ebp-0x8]
   1619e:	push   eax
   1619f:	mov    esi,ecx
   161a1:	call   0x1456e
   161a6:	and    DWORD PTR [ebp+0x8],0x0
   161aa:	lea    eax,[ebp+0x8]
   161ad:	push   eax
   161ae:	push   DWORD PTR [ebp-0x4]
   161b1:	push   DWORD PTR [ebp-0x8]
   161b4:	call   0x143cc
   161b9:	add    esp,0xc
   161bc:	push   DWORD PTR [ebp-0x4]
   161bf:	lea    eax,[ebp-0x4]
   161c2:	push   DWORD PTR [ebp-0x8]
   161c5:	mov    ecx,esi
   161c7:	push   eax
   161c8:	call   0x15dc6
   161cd:	mov    eax,DWORD PTR [ebp+0x8]
   161d0:	pop    esi
   161d1:	leave  
   161d2:	ret    0x4
   161d5:	int3   
   161d6:	push   ecx
   161d7:	mov    eax,DWORD PTR [ecx+0x4]
   161da:	mov    edx,DWORD PTR [eax]
   161dc:	push   eax
   161dd:	push   edx
   161de:	lea    eax,[esp+0x8]
   161e2:	push   eax
   161e3:	call   0x15dc6
   161e8:	pop    ecx
   161e9:	ret    
   161ea:	push   ebp
   161eb:	mov    ebp,esp
   161ed:	push   DWORD PTR [ebp+0xc]
   161f0:	mov    ecx,DWORD PTR ds:0x1a180
   161f6:	call   0x15c3c
   161fb:	test   eax,eax
   161fd:	jne    0x16209
   161ff:	test   BYTE PTR [ebp+0x8],0x1
   16203:	jne    0x16209
   16205:	xor    al,al
   16207:	jmp    0x1625d
   16209:	mov    ecx,DWORD PTR ds:0x1a180
   1620f:	push   esi
   16210:	push   DWORD PTR [ebp+0xc]
   16213:	call   0x16064
   16218:	test   BYTE PTR [ebp+0x8],0x1
   1621c:	mov    esi,eax
   1621e:	je     0x16246
   16220:	mov    eax,DWORD PTR [ebp+0x18]
   16223:	push   DWORD PTR [ebp+0xc]
   16226:	mov    ecx,esi
   16228:	mov    DWORD PTR [esi+0xc],eax
   1622b:	call   0x17466
   16230:	push   DWORD PTR [ebp+0x10]
   16233:	lea    ecx,[esi+0x4]
   16236:	call   0x17466
   1623b:	push   DWORD PTR [ebp+0x14]
   1623e:	lea    ecx,[esi+0x8]
   16241:	call   0x17466
   16246:	test   BYTE PTR [ebp+0x8],0x2
   1624a:	je     0x1625a
   1624c:	mov    eax,DWORD PTR [ebp+0x1c]
   1624f:	mov    ecx,DWORD PTR [eax]
   16251:	mov    DWORD PTR [esi+0x10],ecx
   16254:	mov    eax,DWORD PTR [eax+0x4]
   16257:	mov    DWORD PTR [esi+0x14],eax
   1625a:	mov    al,0x1
   1625c:	pop    esi
   1625d:	pop    ebp
   1625e:	ret    0x18
   16261:	int3   
   16262:	push   esi
   16263:	mov    esi,ecx
   16265:	mov    BYTE PTR [esi+0x8],0x0
   16269:	call   0x14ca4
   1626e:	lea    ecx,[esi+0x10]
   16271:	mov    BYTE PTR [ecx+0x8],0x0
   16275:	call   0x14884
   1627a:	mov    eax,DWORD PTR [esp+0x8]
   1627e:	mov    DWORD PTR [esi+0x20],eax
   16281:	mov    eax,DWORD PTR [esp+0xc]
   16285:	mov    DWORD PTR [esi+0x24],eax
   16288:	mov    eax,esi
   1628a:	pop    esi
   1628b:	ret    0x8
   1628e:	push   ebp
   1628f:	mov    ebp,esp
   16291:	sub    esp,0x7c
   16294:	push   ebx
   16295:	push   esi
   16296:	mov    esi,ecx
   16298:	call   0x160b0
   1629d:	push   DWORD PTR [ebp+0x8]
   162a0:	lea    eax,[ebp-0x4]
   162a3:	push   eax
   162a4:	mov    ecx,esi
   162a6:	call   0x14496
   162ab:	mov    ebx,DWORD PTR [ebp-0x4]
   162ae:	cmp    ebx,DWORD PTR [esi+0x4]
   162b1:	je     0x162fe
   162b3:	mov    eax,DWORD PTR [esi+0x14]
   162b6:	push   edi
   162b7:	lea    ecx,[ebp+0x8]
   162ba:	mov    DWORD PTR [ebp+0x8],eax
   162bd:	call   0x1447c
   162c2:	mov    edi,DWORD PTR [eax]
   162c4:	lea    eax,[ebx+0x30]
   162c7:	add    esi,0x10
   162ca:	inc    edi
   162cb:	push   eax
   162cc:	mov    ecx,esi
   162ce:	mov    DWORD PTR [ebp+0x8],edi
   162d1:	mov    DWORD PTR [ebp-0x4],eax
   162d4:	call   0x1519c
   162d9:	lea    eax,[ebp+0x8]
   162dc:	push   eax
   162dd:	lea    eax,[ebp-0xc]
   162e0:	push   eax
   162e1:	mov    ecx,esi
   162e3:	call   0x15b86
   162e8:	push   DWORD PTR [ebp+0xc]
   162eb:	lea    ecx,[ebx+0x18]
   162ee:	call   0x1380c
   162f3:	mov    eax,DWORD PTR [ebp-0x4]
   162f6:	mov    DWORD PTR [eax],edi
   162f8:	pop    edi
   162f9:	jmp    0x16391
   162fe:	lea    ecx,[ebp-0x2c]
   16301:	call   0x1200e
   16306:	xor    eax,eax
   16308:	cmp    DWORD PTR [esi+0x1c],eax
   1630b:	je     0x1631e
   1630d:	mov    eax,DWORD PTR [esi+0x14]
   16310:	lea    ecx,[ebp-0x4]
   16313:	mov    DWORD PTR [ebp-0x4],eax
   16316:	call   0x1447c
   1631b:	mov    eax,DWORD PTR [eax]
   1631d:	inc    eax
   1631e:	push   DWORD PTR [ebp+0xc]
   16321:	lea    ecx,[ebp-0x2c]
   16324:	mov    DWORD PTR [ebp-0x4],eax
   16327:	mov    DWORD PTR [ebp-0x14],eax
   1632a:	call   0x1380c
   1632f:	lea    eax,[ebp-0x2c]
   16332:	push   eax
   16333:	push   DWORD PTR [ebp+0x8]
   16336:	lea    ecx,[ebp-0x7c]
   16339:	call   0x13aee
   1633e:	lea    eax,[ebp-0x7c]
   16341:	push   eax
   16342:	lea    ecx,[ebp-0x54]
   16345:	call   0x1427a
   1634a:	lea    eax,[ebp-0x54]
   1634d:	push   eax
   1634e:	lea    eax,[ebp-0xc]
   16351:	push   eax
   16352:	mov    ecx,esi
   16354:	call   0x15bf4
   16359:	lea    ecx,[ebp-0x4c]
   1635c:	call   0x137f0
   16361:	lea    ecx,[ebp-0x54]
   16364:	call   0x1745c
   16369:	lea    ecx,[ebp-0x74]
   1636c:	call   0x137f0
   16371:	lea    ecx,[ebp-0x7c]
   16374:	call   0x1745c
   16379:	lea    eax,[ebp-0x4]
   1637c:	push   eax
   1637d:	lea    eax,[ebp-0xc]
   16380:	push   eax
   16381:	lea    ecx,[esi+0x10]
   16384:	call   0x15b86
   16389:	lea    ecx,[ebp-0x2c]
   1638c:	call   0x137f0
   16391:	pop    esi
   16392:	pop    ebx
   16393:	leave  
   16394:	ret    0x8
   16397:	int3   
   16398:	push   ebp
   16399:	mov    ebp,esp
   1639b:	sub    esp,0x14
   1639e:	and    DWORD PTR [ebp-0x4],0x0
   163a2:	push   esi
   163a3:	lea    eax,[ebp-0x4]
   163a6:	push   eax
   163a7:	push   DWORD PTR [ebp+0x8]
   163aa:	mov    esi,ecx
   163ac:	lea    ecx,[ebp-0xc]
   163af:	call   0x13eb2
   163b4:	push   eax
   163b5:	lea    eax,[ebp-0x14]
   163b8:	push   eax
   163b9:	mov    ecx,esi
   163bb:	call   0x1616e
   163c0:	mov    esi,DWORD PTR [eax]
   163c2:	lea    ecx,[ebp-0x8]
   163c5:	call   0x13b4c
   163ca:	lea    eax,[esi+0x10]
   163cd:	pop    esi
   163ce:	leave  
   163cf:	ret    0x4
   163d2:	push   ebp
   163d3:	mov    ebp,esp
   163d5:	sub    esp,0x18
   163d8:	push   ebx
   163d9:	push   esi
   163da:	lea    ecx,[ebp-0x18]
   163dd:	call   0x1200e
   163e2:	mov    esi,DWORD PTR [ebp+0xc]
   163e5:	mov    ecx,DWORD PTR ds:0x1a104
   163eb:	lea    eax,[ebp-0x18]
   163ee:	push   eax
   163ef:	push   esi
   163f0:	call   0x15b54
   163f5:	test   al,al
   163f7:	push   0x2
   163f9:	pop    ebx
   163fa:	jne    0x16428
   163fc:	test   BYTE PTR [ebp+0x8],0x1
   16400:	jne    0x16406
   16402:	xor    bl,bl
   16404:	jmp    0x16478
   16406:	push   esi
   16407:	lea    ecx,[ebp-0x18]
   1640a:	call   0x17466
   1640f:	push   DWORD PTR [ebp+0x10]
   16412:	lea    ecx,[ebp-0x14]
   16415:	call   0x17466
   1641a:	push   DWORD PTR [ebp+0x14]
   1641d:	lea    ecx,[ebp-0x10]
   16420:	call   0x17466
   16425:	mov    DWORD PTR [ebp-0xc],ebx
   16428:	test   BYTE PTR [ebp+0x8],0x1
   1642c:	je     0x16453
   1642e:	mov    eax,DWORD PTR [ebp+0x18]
   16431:	push   esi
   16432:	lea    ecx,[ebp-0x18]
   16435:	mov    DWORD PTR [ebp-0xc],eax
   16438:	call   0x17466
   1643d:	push   DWORD PTR [ebp+0x10]
   16440:	lea    ecx,[ebp-0x14]
   16443:	call   0x17466
   16448:	push   DWORD PTR [ebp+0x14]
   1644b:	lea    ecx,[ebp-0x10]
   1644e:	call   0x17466
   16453:	test   BYTE PTR [ebp+0x8],bl
   16456:	je     0x16466
   16458:	mov    eax,DWORD PTR [ebp+0x1c]
   1645b:	mov    ecx,DWORD PTR [eax]
   1645d:	mov    eax,DWORD PTR [eax+0x4]
   16460:	mov    DWORD PTR [ebp-0x8],ecx
   16463:	mov    DWORD PTR [ebp-0x4],eax
   16466:	mov    ecx,DWORD PTR ds:0x1a104
   1646c:	lea    eax,[ebp-0x18]
   1646f:	push   eax
   16470:	push   esi
   16471:	call   0x1628e
   16476:	mov    bl,0x1
   16478:	lea    ecx,[ebp-0x18]
   1647b:	call   0x137f0
   16480:	pop    esi
   16481:	mov    al,bl
   16483:	pop    ebx
   16484:	leave  
   16485:	ret    0x18
   16488:	dec    ebx
   16489:	gs push edi
   1648b:	popa   
   1648c:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   16494:	gs js  0x164e6
   16497:	bound  ebp,QWORD PTR [edx+0x65]
   1649a:	arpl   WORD PTR [eax+ebp*1+0x29],si
   1649e:	and    BYTE PTR [ebp+0x52],al
   164a1:	push   edx
   164a2:	dec    edi
   164a3:	push   edx
   164a4:	and    BYTE PTR [edx],bh
   164a6:	and    BYTE PTR [eax],dh
   164a8:	js     0x164cf
   164aa:	cmp    BYTE PTR cs:[eax+0xa],bh
   164ae:	add    ah,cl
   164b0:	push   0x28
   164b2:	push   0x181e8
   164b7:	call   0x17d50
   164bc:	xor    ebx,ebx
   164be:	push   ebx
   164bf:	push   ebx
   164c0:	push   ebx
   164c1:	push   ebx
   164c2:	push   0x1a10c
   164c7:	call   DWORD PTR ds:0x18040
   164cd:	cmp    eax,ebx
   164cf:	jge    0x164ed
   164d1:	push   eax
   164d2:	push   0x16488
   164d7:	call   0x17da2
   164dc:	pop    ecx
   164dd:	pop    ecx
   164de:	mov    eax,DWORD PTR [ebp+0x8]
   164e1:	mov    DWORD PTR [eax+0x8],0x4
   164e8:	jmp    0x165c7
   164ed:	mov    DWORD PTR [ebp-0x4],ebx
   164f0:	mov    esi,DWORD PTR [ebp+0x8]
   164f3:	lea    eax,[esi+0x18]
   164f6:	push   eax
   164f7:	lea    ecx,[ebp-0x24]
   164fa:	call   0x1753a
   164ff:	mov    DWORD PTR [ebp-0x2c],ebx
   16502:	lea    ecx,[ebp-0x24]
   16505:	call   0x174a8
   1650a:	mov    edi,eax
   1650c:	inc    edi
   1650d:	mov    DWORD PTR [ebp-0x2c],edi
   16510:	lea    eax,[edi+esi*1+0x18]
   16514:	push   eax
   16515:	lea    ecx,[ebp-0x20]
   16518:	call   0x1753a
   1651d:	lea    ecx,[ebp-0x20]
   16520:	call   0x174a8
   16525:	lea    eax,[edi+eax*1+0x1]
   16529:	mov    DWORD PTR [ebp-0x2c],eax
   1652c:	lea    eax,[eax+esi*1+0x18]
   16530:	push   eax
   16531:	lea    ecx,[ebp-0x28]
   16534:	call   0x1753a
   16539:	mov    ecx,DWORD PTR [esi+0xc]
   1653c:	mov    DWORD PTR [ebp-0x30],ecx
   1653f:	mov    eax,DWORD PTR [esi+0x10]
   16542:	mov    DWORD PTR [ebp-0x38],eax
   16545:	mov    eax,DWORD PTR [esi+0x14]
   16548:	mov    DWORD PTR [ebp-0x34],eax
   1654b:	mov    BYTE PTR [ebp-0x19],bl
   1654e:	mov    eax,DWORD PTR [esi+0x4]
   16551:	lea    edx,[ebp-0x38]
   16554:	push   edx
   16555:	push   ecx
   16556:	lea    ecx,[ebp-0x28]
   16559:	push   ecx
   1655a:	lea    ecx,[ebp-0x20]
   1655d:	push   ecx
   1655e:	lea    ecx,[ebp-0x24]
   16561:	push   ecx
   16562:	push   eax
   16563:	test   al,0x4
   16565:	je     0x1656e
   16567:	call   0x163d2
   1656c:	jmp    0x16573
   1656e:	call   0x161ea
   16573:	mov    BYTE PTR [ebp-0x19],al
   16576:	cmp    al,bl
   16578:	jne    0x16583
   1657a:	mov    DWORD PTR [esi+0x8],0x1
   16581:	jmp    0x1659e
   16583:	mov    DWORD PTR [esi+0x8],ebx
   16586:	lea    ecx,[ebp-0x28]
   16589:	call   0x1745c
   1658e:	lea    ecx,[ebp-0x20]
   16591:	call   0x1745c
   16596:	lea    ecx,[ebp-0x24]
   16599:	call   0x1745c
   1659e:	or     DWORD PTR [ebp-0x4],0xffffffff
   165a2:	jmp    0x165bb
   165a4:	xor    eax,eax
   165a6:	inc    eax
   165a7:	ret    
   165a8:	mov    esp,DWORD PTR [ebp-0x18]
   165ab:	mov    eax,DWORD PTR [ebp+0x8]
   165ae:	mov    DWORD PTR [eax+0x8],0x4
   165b5:	or     DWORD PTR [ebp-0x4],0xffffffff
   165b9:	xor    ebx,ebx
   165bb:	push   ebx
   165bc:	push   0x1a10c
   165c1:	call   DWORD PTR ds:0x1803c
   165c7:	call   0x17d8b
   165cc:	ret    0x4
   165cf:	int3   
   165d0:	dec    ebx
   165d1:	gs push edi
   165d3:	popa   
   165d4:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x74754d72
   165dc:	gs js  0x1662e
   165df:	bound  ebp,QWORD PTR [edx+0x65]
   165e2:	arpl   WORD PTR [eax+ebp*1+0x29],si
   165e6:	and    BYTE PTR [ebp+0x52],al
   165e9:	push   edx
   165ea:	dec    edi
   165eb:	push   edx
   165ec:	and    BYTE PTR [edx],bh
   165ee:	and    BYTE PTR [eax],dh
   165f0:	js     0x16617
   165f2:	cmp    BYTE PTR cs:[eax+0xa],bh
   165f6:	add    ah,cl
   165f8:	push   0x14
   165fa:	push   0x181f8
   165ff:	call   0x17d50
   16604:	xor    edi,edi
   16606:	push   edi
   16607:	push   edi
   16608:	push   edi
   16609:	push   edi
   1660a:	push   0x1a10c
   1660f:	call   DWORD PTR ds:0x18040
   16615:	cmp    eax,edi
   16617:	jge    0x16632
   16619:	push   eax
   1661a:	push   0x165d0
   1661f:	call   0x17da2
   16624:	pop    ecx
   16625:	pop    ecx
   16626:	mov    eax,DWORD PTR [ebp+0x8]
   16629:	mov    DWORD PTR [eax+0x8],0x4
   16630:	jmp    0x166a3
   16632:	mov    DWORD PTR [ebp-0x4],edi
   16635:	mov    esi,DWORD PTR [ebp+0x8]
   16638:	mov    ecx,DWORD PTR ds:0x1a174
   1663e:	lea    eax,[esi+0x4]
   16641:	push   eax
   16642:	cmp    DWORD PTR [esi],edi
   16644:	jbe    0x1666f
   16646:	call   0x16398
   1664b:	mov    DWORD PTR [ebp-0x1c],eax
   1664e:	push   DWORD PTR [esi]
   16650:	lea    eax,[esi+0xc]
   16653:	push   eax
   16654:	lea    ecx,[ebp-0x20]
   16657:	call   0x14322
   1665c:	push   eax
   1665d:	mov    ecx,DWORD PTR [ebp-0x1c]
   16660:	call   0x13b26
   16665:	lea    ecx,[ebp-0x20]
   16668:	call   0x13b4c
   1666d:	jmp    0x16677
   1666f:	mov    DWORD PTR [ebp-0x24],ecx
   16672:	call   0x16192
   16677:	mov    DWORD PTR [esi+0x8],edi
   1667a:	or     DWORD PTR [ebp-0x4],0xffffffff
   1667e:	jmp    0x16697
   16680:	xor    eax,eax
   16682:	inc    eax
   16683:	ret    
   16684:	mov    esp,DWORD PTR [ebp-0x18]
   16687:	mov    eax,DWORD PTR [ebp+0x8]
   1668a:	mov    DWORD PTR [eax+0x8],0x4
   16691:	or     DWORD PTR [ebp-0x4],0xffffffff
   16695:	xor    edi,edi
   16697:	push   edi
   16698:	push   0x1a10c
   1669d:	call   DWORD PTR ds:0x1803c
   166a3:	call   0x17d8b
   166a8:	ret    0x4
   166ab:	int3   
   166ac:	push   ebp
   166ad:	mov    ebp,esp
   166af:	sub    esp,0x10
   166b2:	and    DWORD PTR [ebp-0xc],0x0
   166b6:	xor    ecx,ecx
   166b8:	mov    DWORD PTR [ebp-0x10],0x1
   166bf:	xor    eax,eax
   166c1:	mov    dl,BYTE PTR [eax+0x18170]
   166c7:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   166cb:	inc    ecx
   166cc:	inc    eax
   166cd:	and    eax,0xf
   166d0:	cmp    ecx,0x8
   166d3:	jne    0x166c1
   166d5:	push   ecx
   166d6:	lea    eax,[ebp-0x10]
   166d9:	push   eax
   166da:	lea    ecx,[ebp-0x8]
   166dd:	mov    DWORD PTR [ebp-0x4],0x2
   166e4:	call   0x14322
   166e9:	mov    ecx,DWORD PTR ds:0x1a174
   166ef:	push   eax
   166f0:	lea    eax,[ebp-0x4]
   166f3:	push   eax
   166f4:	call   0x16398
   166f9:	mov    ecx,eax
   166fb:	call   0x13b26
   16700:	mov    eax,DWORD PTR [ebp-0x8]
   16703:	test   eax,eax
   16705:	je     0x1671a
   16707:	mov    ecx,eax
   16709:	add    eax,0x4
   1670c:	dec    DWORD PTR [eax]
   1670e:	cmp    DWORD PTR [eax],0x0
   16711:	jne    0x1671a
   16713:	push   ecx
   16714:	call   0x1206c
   16719:	pop    ecx
   1671a:	leave  
   1671b:	ret    
   1671c:	add    BYTE PTR [eax],al
   1671e:	add    BYTE PTR [eax],al
   16720:	add    BYTE PTR [eax],al
   16722:	push   0x89c
   16727:	push   0x18208
   1672c:	call   0x17d50
   16731:	mov    eax,ds:0x1a0cc
   16736:	mov    DWORD PTR [ebp-0x1c],eax
   16739:	xor    ebx,ebx
   1673b:	mov    DWORD PTR [ebp-0x838],ebx
   16741:	mov    DWORD PTR [ebp-0x4],ebx
   16744:	mov    DWORD PTR [ebp-0x884],ebx
   1674a:	xor    eax,eax
   1674c:	lea    edi,[ebp-0x880]
   16752:	stos   DWORD PTR es:[edi],eax
   16753:	stos   DWORD PTR es:[edi],eax
   16754:	stos   DWORD PTR es:[edi],eax
   16755:	stos   DWORD PTR es:[edi],eax
   16756:	stos   DWORD PTR es:[edi],eax
   16757:	mov    DWORD PTR [ebp-0x89c],ebx
   1675d:	mov    BYTE PTR [ebp-0x850],bl
   16763:	xor    esi,esi
   16765:	mov    DWORD PTR [ebp-0x84c],esi
   1676b:	mov    ax,ds:0x1671c
   16771:	mov    WORD PTR [ebp-0x834],ax
   16778:	mov    ecx,0x1ff
   1677d:	xor    eax,eax
   1677f:	lea    edi,[ebp-0x832]
   16785:	rep stos DWORD PTR es:[edi],eax
   16787:	stos   WORD PTR es:[edi],ax
   16789:	push   DWORD PTR ds:0x1a0c8
   1678f:	lea    eax,[ebp-0x834]
   16795:	push   eax
   16796:	mov    edi,DWORD PTR ds:0x18050
   1679c:	call   edi
   1679e:	push   0x1a048
   167a3:	lea    eax,[ebp-0x834]
   167a9:	push   eax
   167aa:	call   edi
   167ac:	lea    eax,[ebp-0x834]
   167b2:	mov    DWORD PTR [ebp-0x860],eax
   167b8:	push   eax
   167b9:	mov    edi,DWORD PTR ds:0x18034
   167bf:	call   edi
   167c1:	add    esp,0x14
   167c4:	shl    eax,1
   167c6:	mov    WORD PTR [ebp-0x862],ax
   167cd:	mov    WORD PTR [ebp-0x864],ax
   167d4:	mov    DWORD PTR [ebp-0x884],0x18
   167de:	mov    DWORD PTR [ebp-0x880],ebx
   167e4:	mov    DWORD PTR [ebp-0x878],0x40
   167ee:	lea    eax,[ebp-0x864]
   167f4:	mov    DWORD PTR [ebp-0x87c],eax
   167fa:	mov    DWORD PTR [ebp-0x874],ebx
   16800:	mov    DWORD PTR [ebp-0x870],ebx
   16806:	lea    eax,[ebp-0x884]
   1680c:	push   eax
   1680d:	push   0x1
   1680f:	lea    eax,[ebp-0x838]
   16815:	push   eax
   16816:	call   DWORD PTR ds:0x18094
   1681c:	mov    DWORD PTR [ebp-0x840],eax
   16822:	cmp    eax,ebx
   16824:	jne    0x1691c
   1682a:	mov    eax,0x16720
   1682f:	mov    DWORD PTR [ebp-0x854],eax
   16835:	push   eax
   16836:	call   edi
   16838:	pop    ecx
   16839:	mov    WORD PTR [ebp-0x856],ax
   16840:	mov    WORD PTR [ebp-0x858],ax
   16847:	mov    DWORD PTR [ebp-0x83c],ebx
   1684d:	lea    eax,[ebp-0x83c]
   16853:	push   eax
   16854:	push   0x18
   16856:	lea    eax,[ebp-0x34]
   16859:	push   eax
   1685a:	push   0x1
   1685c:	lea    eax,[ebp-0x858]
   16862:	push   eax
   16863:	push   DWORD PTR [ebp-0x838]
   16869:	mov    edi,DWORD PTR ds:0x18090
   1686f:	call   edi
   16871:	mov    DWORD PTR [ebp-0x840],eax
   16877:	cmp    eax,0x80000005
   1687c:	je     0x16889
   1687e:	cmp    eax,0xc0000023
   16883:	jne    0x1690c
   16889:	push   DWORD PTR [ebp-0x83c]
   1688f:	call   0x12044
   16894:	pop    ecx
   16895:	mov    DWORD PTR [ebp-0x898],eax
   1689b:	xor    ecx,ecx
   1689d:	cmp    eax,ebx
   1689f:	setne  cl
   168a2:	mov    BYTE PTR [ebp-0x848],cl
   168a8:	mov    DWORD PTR [ebp-0x844],eax
   168ae:	lea    eax,[ebp-0x848]
   168b4:	push   eax
   168b5:	lea    ecx,[ebp-0x850]
   168bb:	call   0x13e56
   168c0:	cmp    BYTE PTR [ebp-0x848],bl
   168c6:	je     0x168db
   168c8:	mov    eax,DWORD PTR [ebp-0x844]
   168ce:	mov    DWORD PTR [ebp-0x8a8],eax
   168d4:	push   eax
   168d5:	call   0x1206c
   168da:	pop    ecx
   168db:	mov    esi,DWORD PTR [ebp-0x84c]
   168e1:	mov    DWORD PTR [ebp-0x88c],esi
   168e7:	lea    eax,[ebp-0x83c]
   168ed:	push   eax
   168ee:	push   DWORD PTR [ebp-0x83c]
   168f4:	push   esi
   168f5:	push   0x1
   168f7:	lea    eax,[ebp-0x858]
   168fd:	push   eax
   168fe:	push   DWORD PTR [ebp-0x838]
   16904:	call   edi
   16906:	mov    DWORD PTR [ebp-0x840],eax
   1690c:	cmp    eax,ebx
   1690e:	jne    0x1691c
   16910:	mov    DWORD PTR [ebp-0x894],esi
   16916:	cmp    DWORD PTR [esi+0x4],0x3
   1691a:	je     0x16926
   1691c:	call   0x166ac
   16921:	jmp    0x169ad
   16926:	mov    DWORD PTR [ebp-0x888],esi
   1692c:	mov    edi,DWORD PTR [esi+0xc]
   1692f:	mov    DWORD PTR [ebp-0x8a4],edi
   16935:	cmp    edi,ebx
   16937:	je     0x169ad
   16939:	cmp    edi,0xf4240
   1693f:	ja     0x169ad
   16941:	mov    DWORD PTR [ebp-0x86c],0x2
   1694b:	lea    eax,[ebp-0x86c]
   16951:	push   eax
   16952:	mov    ecx,DWORD PTR ds:0x1a174
   16958:	call   0x16398
   1695d:	mov    DWORD PTR [ebp-0x85c],eax
   16963:	mov    DWORD PTR [ebp-0x8ac],esi
   16969:	mov    DWORD PTR [ebp-0x890],esi
   1696f:	push   edi
   16970:	mov    eax,DWORD PTR [esi+0x8]
   16973:	add    eax,esi
   16975:	push   eax
   16976:	lea    ecx,[ebp-0x868]
   1697c:	call   0x14322
   16981:	push   eax
   16982:	mov    ecx,DWORD PTR [ebp-0x85c]
   16988:	call   0x13b26
   1698d:	lea    ecx,[ebp-0x868]
   16993:	call   0x13b4c
   16998:	cmp    BYTE PTR [ebp-0x850],bl
   1699e:	je     0x169ad
   169a0:	mov    DWORD PTR [ebp-0x8a0],esi
   169a6:	push   esi
   169a7:	call   0x1206c
   169ac:	pop    ecx
   169ad:	or     DWORD PTR [ebp-0x4],0xffffffff
   169b1:	call   0x169c6
   169b6:	mov    ecx,DWORD PTR [ebp-0x1c]
   169b9:	call   0x17d41
   169be:	call   0x17d8b
   169c3:	ret    
   169c4:	xor    ebx,ebx
   169c6:	cmp    DWORD PTR [ebp-0x838],ebx
   169cc:	je     0x169da
   169ce:	push   DWORD PTR [ebp-0x838]
   169d4:	call   DWORD PTR ds:0x18070
   169da:	ret    
   169db:	int3   
   169dc:	add    BYTE PTR [eax],al
   169de:	add    BYTE PTR [eax],al
   169e0:	add    BYTE PTR [eax],al
   169e2:	push   0x858
   169e7:	push   0x18218
   169ec:	call   0x17d50
   169f1:	mov    eax,ds:0x1a0cc
   169f6:	mov    DWORD PTR [ebp-0x1c],eax
   169f9:	xor    ebx,ebx
   169fb:	mov    DWORD PTR [ebp-0x820],ebx
   16a01:	mov    DWORD PTR [ebp-0x4],ebx
   16a04:	mov    DWORD PTR [ebp-0x858],ebx
   16a0a:	xor    eax,eax
   16a0c:	lea    edi,[ebp-0x854]
   16a12:	stos   DWORD PTR es:[edi],eax
   16a13:	stos   DWORD PTR es:[edi],eax
   16a14:	stos   DWORD PTR es:[edi],eax
   16a15:	stos   DWORD PTR es:[edi],eax
   16a16:	stos   DWORD PTR es:[edi],eax
   16a17:	mov    DWORD PTR [ebp-0x85c],ebx
   16a1d:	mov    BYTE PTR [ebp-0x868],bl
   16a23:	mov    DWORD PTR [ebp-0x864],ebx
   16a29:	mov    ax,ds:0x169dc
   16a2f:	mov    WORD PTR [ebp-0x81c],ax
   16a36:	mov    ecx,0x1ff
   16a3b:	xor    eax,eax
   16a3d:	lea    edi,[ebp-0x81a]
   16a43:	rep stos DWORD PTR es:[edi],eax
   16a45:	stos   WORD PTR es:[edi],ax
   16a47:	push   DWORD PTR ds:0x1a0c8
   16a4d:	lea    eax,[ebp-0x81c]
   16a53:	push   eax
   16a54:	mov    esi,DWORD PTR ds:0x18050
   16a5a:	call   esi
   16a5c:	push   0x1a048
   16a61:	lea    eax,[ebp-0x81c]
   16a67:	push   eax
   16a68:	call   esi
   16a6a:	lea    eax,[ebp-0x81c]
   16a70:	mov    DWORD PTR [ebp-0x82c],eax
   16a76:	push   eax
   16a77:	mov    esi,DWORD PTR ds:0x18034
   16a7d:	call   esi
   16a7f:	add    esp,0x14
   16a82:	shl    eax,1
   16a84:	mov    WORD PTR [ebp-0x82e],ax
   16a8b:	mov    WORD PTR [ebp-0x830],ax
   16a92:	mov    DWORD PTR [ebp-0x858],0x18
   16a9c:	mov    DWORD PTR [ebp-0x854],ebx
   16aa2:	mov    DWORD PTR [ebp-0x84c],0x40
   16aac:	lea    eax,[ebp-0x830]
   16ab2:	mov    DWORD PTR [ebp-0x850],eax
   16ab8:	mov    DWORD PTR [ebp-0x848],ebx
   16abe:	mov    DWORD PTR [ebp-0x844],ebx
   16ac4:	lea    eax,[ebp-0x858]
   16aca:	push   eax
   16acb:	push   0x3
   16acd:	lea    eax,[ebp-0x820]
   16ad3:	push   eax
   16ad4:	call   DWORD PTR ds:0x18094
   16ada:	mov    DWORD PTR [ebp-0x828],eax
   16ae0:	cmp    eax,ebx
   16ae2:	je     0x16aff
   16ae4:	push   0xffffffff
   16ae6:	lea    eax,[ebp-0x10]
   16ae9:	push   eax
   16aea:	call   0x17dae
   16aef:	pop    ecx
   16af0:	pop    ecx
   16af1:	mov    ecx,DWORD PTR [ebp-0x1c]
   16af4:	call   0x17d41
   16af9:	call   0x17d8b
   16afe:	ret    
   16aff:	mov    eax,0x169e0
   16b04:	mov    DWORD PTR [ebp-0x838],eax
   16b0a:	push   eax
   16b0b:	call   esi
   16b0d:	pop    ecx
   16b0e:	mov    WORD PTR [ebp-0x83a],ax
   16b15:	mov    WORD PTR [ebp-0x83c],ax
   16b1c:	mov    DWORD PTR [ebp-0x834],0x2
   16b26:	lea    eax,[ebp-0x834]
   16b2c:	push   eax
   16b2d:	mov    ecx,DWORD PTR ds:0x1a174
   16b33:	call   0x16398
   16b38:	mov    DWORD PTR [ebp-0x860],eax
   16b3e:	mov    eax,DWORD PTR [eax]
   16b40:	cmp    eax,ebx
   16b42:	jne    0x16b4c
   16b44:	mov    DWORD PTR [ebp-0x824],ebx
   16b4a:	jmp    0x16b55
   16b4c:	mov    ecx,DWORD PTR [eax+0x8]
   16b4f:	mov    DWORD PTR [ebp-0x824],ecx
   16b55:	cmp    eax,ebx
   16b57:	jne    0x16b5d
   16b59:	xor    eax,eax
   16b5b:	jmp    0x16b5f
   16b5d:	mov    eax,DWORD PTR [eax]
   16b5f:	mov    DWORD PTR [ebp-0x840],eax
   16b65:	push   DWORD PTR [ebp-0x824]
   16b6b:	push   eax
   16b6c:	push   0x3
   16b6e:	push   ebx
   16b6f:	lea    eax,[ebp-0x83c]
   16b75:	push   eax
   16b76:	push   DWORD PTR [ebp-0x820]
   16b7c:	call   DWORD PTR ds:0x18098
   16b82:	mov    DWORD PTR [ebp-0x828],eax
   16b88:	or     DWORD PTR [ebp-0x4],0xffffffff
   16b8c:	call   0x16b98
   16b91:	jmp    0x16af1
   16b96:	xor    ebx,ebx
   16b98:	cmp    DWORD PTR [ebp-0x820],ebx
   16b9e:	je     0x16bac
   16ba0:	push   DWORD PTR [ebp-0x820]
   16ba6:	call   DWORD PTR ds:0x18070
   16bac:	ret    
   16bad:	int3   
   16bae:	dec    ecx
   16baf:	push   edx
   16bb0:	push   eax
   16bb1:	pop    edi
   16bb2:	dec    ebp
   16bb3:	dec    edx
   16bb4:	pop    edi
   16bb5:	inc    esp
   16bb6:	inc    ebp
   16bb7:	push   esi
   16bb8:	dec    ecx
   16bb9:	inc    ebx
   16bba:	inc    ebp
   16bbb:	pop    edi
   16bbc:	inc    ebx
   16bbd:	dec    edi
   16bbe:	dec    esi
   16bbf:	push   esp
   16bc0:	push   edx
   16bc1:	dec    edi
   16bc2:	dec    esp
   16bc3:	and    BYTE PTR [edx],bh
   16bc5:	and    BYTE PTR [eax],dh
   16bc7:	js     0x16bee
   16bc9:	cmp    BYTE PTR cs:[eax+0xa],bh
   16bcd:	add    BYTE PTR [eax+eax*1+0x44],bl
   16bd1:	add    BYTE PTR [edx+0x0],dh
   16bd4:	imul   eax,DWORD PTR [eax],0x650076
   16bda:	jb     0x16bdc
   16bdc:	add    BYTE PTR [eax],al
   16bde:	push   ebx
   16bdf:	gs dec ecx
   16be1:	ins    DWORD PTR es:[edi],dx
   16be2:	jo     0x16c49
   16be4:	jb     0x16c59
   16be6:	outs   dx,DWORD PTR ds:[esi]
   16be7:	outs   dx,BYTE PTR ds:[esi]
   16be8:	popa   
   16be9:	je     0x16c50
   16beb:	inc    ebx
   16bec:	ins    BYTE PTR es:[edi],dx
   16bed:	imul   esp,DWORD PTR [ebp+0x6e],0x28784574
   16bf4:	sub    DWORD PTR [eax],esp
   16bf6:	inc    ebp
   16bf7:	push   edx
   16bf8:	push   edx
   16bf9:	dec    edi
   16bfa:	push   edx
   16bfb:	and    BYTE PTR [edx],bh
   16bfd:	and    BYTE PTR [eax],dh
   16bff:	js     0x16c26
   16c01:	cmp    BYTE PTR cs:[eax+0xa],bh
   16c05:	add    BYTE PTR [eax],al
   16c07:	int3   
   16c08:	push   ebp
   16c09:	mov    ebp,esp
   16c0b:	sub    esp,0xc
   16c0e:	xor    eax,eax
   16c10:	push   ebx
   16c11:	mov    ebx,DWORD PTR [ebp+0xc]
   16c14:	mov    DWORD PTR [ebx+0x18],eax
   16c17:	mov    DWORD PTR [ebx+0x1c],eax
   16c1a:	mov    DWORD PTR [ebp-0x4],eax
   16c1d:	mov    eax,DWORD PTR [ebx+0x60]
   16c20:	cmp    BYTE PTR [eax],0xe
   16c23:	push   esi
   16c24:	push   edi
   16c25:	jne    0x16fe2
   16c2b:	mov    edi,DWORD PTR [eax+0xc]
   16c2e:	mov    esi,DWORD PTR [ebx+0xc]
   16c31:	push   edi
   16c32:	push   0x16bae
   16c37:	call   0x17da2
   16c3c:	mov    eax,0x22c030
   16c41:	cmp    edi,eax
   16c43:	pop    ecx
   16c44:	pop    ecx
   16c45:	mov    DWORD PTR [ebx+0x1c],0x84c
   16c4c:	ja     0x16e23
   16c52:	je     0x16df5
   16c58:	add    eax,0xffffffe8
   16c5b:	cmp    edi,eax
   16c5d:	ja     0x16cd4
   16c5f:	je     0x16cb9
   16c61:	sub    edi,0x22c008
   16c67:	je     0x16cb1
   16c69:	push   0x4
   16c6b:	pop    eax
   16c6c:	sub    edi,eax
   16c6e:	je     0x16ca6
   16c70:	sub    edi,eax
   16c72:	je     0x16c9b
   16c74:	sub    edi,eax
   16c76:	jne    0x16f29
   16c7c:	lea    ecx,[esi+0x64c]
   16c82:	push   ecx
   16c83:	push   eax
   16c84:	cmp    BYTE PTR [esi+0x84a],0x0
   16c8b:	je     0x16c94
   16c8d:	call   0x1364c
   16c92:	jmp    0x16cca
   16c94:	call   0x134ec
   16c99:	jmp    0x16cca
   16c9b:	lea    eax,[esi+0x64c]
   16ca1:	push   eax
   16ca2:	push   0x3
   16ca4:	jmp    0x16c84
   16ca6:	lea    eax,[esi+0x64c]
   16cac:	push   eax
   16cad:	push   0x2
   16caf:	jmp    0x16c84
   16cb1:	and    DWORD PTR [esi],0x0
   16cb4:	jmp    0x16fe2
   16cb9:	lea    eax,[esi+0x64c]
   16cbf:	push   eax
   16cc0:	push   0x16bce
   16cc5:	call   0x11e72
   16cca:	movzx  eax,al
   16ccd:	mov    DWORD PTR [esi],eax
   16ccf:	jmp    0x16fe2
   16cd4:	sub    edi,0x22c020
   16cda:	je     0x16d8f
   16ce0:	push   0x4
   16ce2:	pop    eax
   16ce3:	sub    edi,eax
   16ce5:	je     0x16d1b
   16ce7:	sub    edi,eax
   16ce9:	je     0x16d00
   16ceb:	sub    edi,eax
   16ced:	jne    0x16f29
   16cf3:	push   DWORD PTR [ebx+0xc]
   16cf6:	call   0x164b0
   16cfb:	jmp    0x16f59
   16d00:	mov    ecx,DWORD PTR ds:0x1a180
   16d06:	call   0x1615a
   16d0b:	mov    ecx,DWORD PTR ds:0x1a174
   16d11:	call   0x161d6
   16d16:	jmp    0x16fe2
   16d1b:	mov    eax,DWORD PTR [ebx+0xc]
   16d1e:	mov    DWORD PTR [ebx+0x1c],0x10
   16d25:	mov    ecx,DWORD PTR [eax]
   16d27:	dec    ecx
   16d28:	je     0x16d79
   16d2a:	dec    ecx
   16d2b:	je     0x16d63
   16d2d:	dec    ecx
   16d2e:	je     0x16d4d
   16d30:	dec    ecx
   16d31:	jne    0x16fe2
   16d37:	mov    ecx,DWORD PTR [eax+0x8]
   16d3a:	mov    DWORD PTR ds:0x1a1b8,ecx
   16d40:	mov    eax,DWORD PTR [eax+0xc]
   16d43:	mov    ds:0x1a1bc,eax
   16d48:	jmp    0x16fe2
   16d4d:	mov    ecx,DWORD PTR [eax+0x8]
   16d50:	mov    DWORD PTR ds:0x1a1b0,ecx
   16d56:	mov    eax,DWORD PTR [eax+0xc]
   16d59:	mov    ds:0x1a1b4,eax
   16d5e:	jmp    0x16fe2
   16d63:	mov    ecx,DWORD PTR [eax+0x8]
   16d66:	mov    DWORD PTR ds:0x1a1a8,ecx
   16d6c:	mov    eax,DWORD PTR [eax+0xc]
   16d6f:	mov    ds:0x1a1ac,eax
   16d74:	jmp    0x16fe2
   16d79:	mov    ecx,DWORD PTR [eax+0x8]
   16d7c:	mov    DWORD PTR ds:0x1a1a0,ecx
   16d82:	mov    eax,DWORD PTR [eax+0xc]
   16d85:	mov    ds:0x1a1a4,eax
   16d8a:	jmp    0x16fe2
   16d8f:	mov    eax,DWORD PTR [ebx+0xc]
   16d92:	mov    DWORD PTR [ebx+0x1c],0x10
   16d99:	mov    ecx,DWORD PTR [eax]
   16d9b:	dec    ecx
   16d9c:	je     0x16dde
   16d9e:	dec    ecx
   16d9f:	je     0x16dcd
   16da1:	dec    ecx
   16da2:	je     0x16dbc
   16da4:	dec    ecx
   16da5:	jne    0x16fe2
   16dab:	mov    ecx,DWORD PTR ds:0x1a1b8
   16db1:	mov    DWORD PTR [eax+0x8],ecx
   16db4:	mov    ecx,DWORD PTR ds:0x1a1bc
   16dba:	jmp    0x16ded
   16dbc:	mov    ecx,DWORD PTR ds:0x1a1b0
   16dc2:	mov    DWORD PTR [eax+0x8],ecx
   16dc5:	mov    ecx,DWORD PTR ds:0x1a1b4
   16dcb:	jmp    0x16ded
   16dcd:	mov    ecx,DWORD PTR ds:0x1a1a8
   16dd3:	mov    DWORD PTR [eax+0x8],ecx
   16dd6:	mov    ecx,DWORD PTR ds:0x1a1ac
   16ddc:	jmp    0x16ded
   16dde:	mov    ecx,DWORD PTR ds:0x1a1a0
   16de4:	mov    DWORD PTR [eax+0x8],ecx
   16de7:	mov    ecx,DWORD PTR ds:0x1a1a4
   16ded:	mov    DWORD PTR [eax+0xc],ecx
   16df0:	jmp    0x16fe2
   16df5:	mov    esi,DWORD PTR [ebx+0xc]
   16df8:	mov    eax,DWORD PTR [esi]
   16dfa:	add    eax,0x18
   16dfd:	mov    DWORD PTR [ebx+0x1c],eax
   16e00:	lea    eax,[esi+0x18]
   16e03:	push   eax
   16e04:	lea    ecx,[ebp-0xc]
   16e07:	call   0x1753a
   16e0c:	push   esi
   16e0d:	lea    eax,[ebp-0xc]
   16e10:	push   eax
   16e11:	call   0x15f06
   16e16:	lea    ecx,[ebp-0xc]
   16e19:	call   0x1745c
   16e1e:	jmp    0x16fe2
   16e23:	mov    eax,0x22c04c
   16e28:	cmp    edi,eax
   16e2a:	ja     0x16f11
   16e30:	je     0x16f07
   16e36:	sub    edi,0x22c034
   16e3c:	je     0x16ef1
   16e42:	push   0x4
   16e44:	pop    eax
   16e45:	sub    edi,eax
   16e47:	je     0x16ed8
   16e4d:	sub    edi,eax
   16e4f:	je     0x16e84
   16e51:	sub    edi,0xc
   16e54:	jne    0x16f29
   16e5a:	push   0x0
   16e5c:	push   0x1a130
   16e61:	call   DWORD PTR ds:0x180a0
   16e67:	test   eax,eax
   16e69:	mov    DWORD PTR [ebp-0x4],eax
   16e6c:	jge    0x16e7b
   16e6e:	push   eax
   16e6f:	push   0x16bde
   16e74:	call   0x17da2
   16e79:	pop    ecx
   16e7a:	pop    ecx
   16e7b:	and    DWORD PTR [ebx+0x1c],0x0
   16e7f:	jmp    0x16fd9
   16e84:	push   DWORD PTR ds:0x1a000
   16e8a:	mov    esi,DWORD PTR [ebx+0xc]
   16e8d:	mov    edi,DWORD PTR ds:0x18064
   16e93:	push   esi
   16e94:	call   edi
   16e96:	lea    eax,[esi+0x50]
   16e99:	push   0x1a048
   16e9e:	push   eax
   16e9f:	call   edi
   16ea1:	lea    eax,[esi+0x90]
   16ea7:	push   0x1a008
   16eac:	push   eax
   16ead:	call   edi
   16eaf:	lea    eax,[esi+0xd0]
   16eb5:	push   0x1a088
   16eba:	push   eax
   16ebb:	call   edi
   16ebd:	lea    edi,[esi+0x40]
   16ec0:	mov    esi,0x18170
   16ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16ec9:	add    esp,0x20
   16ecc:	mov    DWORD PTR [ebx+0x1c],0x110
   16ed3:	jmp    0x16fe2
   16ed8:	mov    eax,DWORD PTR [ebx+0xc]
   16edb:	mov    ecx,DWORD PTR [eax]
   16edd:	add    ecx,0xc
   16ee0:	push   eax
   16ee1:	mov    DWORD PTR [ebx+0x1c],ecx
   16ee4:	push   DWORD PTR [eax+0x4]
   16ee7:	call   0x15a50
   16eec:	jmp    0x16fe2
   16ef1:	mov    esi,DWORD PTR [ebx+0xc]
   16ef4:	push   esi
   16ef5:	call   0x165f8
   16efa:	cmp    DWORD PTR [esi+0x4],0x2
   16efe:	jne    0x16f59
   16f00:	call   0x169e2
   16f05:	jmp    0x16f59
   16f07:	call   0x1259e
   16f0c:	jmp    0x16fe2
   16f11:	sub    edi,0x22c050
   16f17:	je     0x16f62
   16f19:	sub    edi,0xc
   16f1c:	je     0x16f4f
   16f1e:	push   0x4
   16f20:	pop    eax
   16f21:	sub    edi,eax
   16f23:	je     0x16f3c
   16f25:	sub    edi,eax
   16f27:	je     0x16f32
   16f29:	mov    DWORD PTR [ebp-0x4],0xc0000010
   16f30:	jmp    0x16f59
   16f32:	push   DWORD PTR [ebx+0xc]
   16f35:	call   0x12f86
   16f3a:	jmp    0x16f59
   16f3c:	mov    DWORD PTR [ebx+0x1c],eax
   16f3f:	mov    eax,DWORD PTR [ebx+0xc]
   16f42:	mov    ecx,DWORD PTR ds:0x1a194
   16f48:	mov    DWORD PTR [eax],ecx
   16f4a:	jmp    0x16fe2
   16f4f:	mov    eax,DWORD PTR [ebx+0xc]
   16f52:	mov    eax,DWORD PTR [eax]
   16f54:	mov    ds:0x1a194,eax
   16f59:	and    DWORD PTR [ebx+0x1c],0x0
   16f5d:	jmp    0x16fe2
   16f62:	mov    esi,DWORD PTR [ebx+0xc]
   16f65:	mov    eax,DWORD PTR [esi]
   16f67:	add    eax,0x18
   16f6a:	mov    DWORD PTR [ebx+0x1c],eax
   16f6d:	mov    eax,ds:0x1a180
   16f72:	mov    edi,DWORD PTR [eax+0x4]
   16f75:	mov    eax,DWORD PTR [edi]
   16f77:	and    DWORD PTR [ebp+0xc],0x0
   16f7b:	cmp    DWORD PTR [esi+0x18],0x0
   16f7f:	mov    DWORD PTR [ebp-0x8],eax
   16f82:	jle    0x16f9c
   16f84:	cmp    DWORD PTR [ebp-0x8],edi
   16f87:	je     0x16f9c
   16f89:	lea    ecx,[ebp-0x8]
   16f8c:	call   0x1434c
   16f91:	inc    DWORD PTR [ebp+0xc]
   16f94:	mov    eax,DWORD PTR [ebp+0xc]
   16f97:	cmp    eax,DWORD PTR [esi+0x18]
   16f9a:	jl     0x16f84
   16f9c:	push   0x16c06
   16fa1:	lea    ecx,[ebp+0xc]
   16fa4:	call   0x1753a
   16fa9:	mov    ecx,DWORD PTR ds:0x1a180
   16faf:	mov    eax,DWORD PTR [ebp-0x8]
   16fb2:	cmp    eax,DWORD PTR [ecx+0x4]
   16fb5:	je     0x16fc3
   16fb7:	add    eax,0x10
   16fba:	push   eax
   16fbb:	lea    ecx,[ebp+0xc]
   16fbe:	call   0x17466
   16fc3:	and    DWORD PTR [esi+0x4],0x0
   16fc7:	push   esi
   16fc8:	lea    eax,[ebp+0xc]
   16fcb:	push   eax
   16fcc:	call   0x15f06
   16fd1:	lea    ecx,[ebp+0xc]
   16fd4:	call   0x1745c
   16fd9:	cmp    DWORD PTR [ebp-0x4],0x103
   16fe0:	je     0x16ff2
   16fe2:	xor    dl,dl
   16fe4:	mov    ecx,ebx
   16fe6:	call   DWORD PTR ds:0x1809c
   16fec:	mov    eax,DWORD PTR [ebp-0x4]
   16fef:	mov    DWORD PTR [ebx+0x18],eax
   16ff2:	mov    eax,DWORD PTR [ebp-0x4]
   16ff5:	pop    edi
   16ff6:	pop    esi
   16ff7:	pop    ebx
   16ff8:	leave  
   16ff9:	ret    0x8
   16ffc:	push   ebx
   16ffd:	gs inc ebx
   16fff:	jb     0x17066
   17001:	popa   
   17002:	je     0x17069
   17004:	inc    ebx
   17005:	ins    BYTE PTR es:[edi],dx
   17006:	imul   esp,DWORD PTR [ebp+0x6e],0x63655374
   1700d:	jne    0x17081
   1700f:	imul   esi,DWORD PTR [ecx+edi*2+0x28],0x52452029
   17017:	push   edx
   17018:	dec    edi
   17019:	push   edx
   1701a:	and    BYTE PTR [edx],bh
   1701c:	and    BYTE PTR [eax],dh
   1701e:	js     0x17045
   17020:	cmp    BYTE PTR cs:[eax+0xa],bh
   17024:	add    BYTE PTR [eax],al
   17026:	add    BYTE PTR [eax],al
   17028:	inc    esp
   17029:	jb     0x17094
   1702b:	jbe    0x17092
   1702d:	jb     0x17074
   1702f:	outs   dx,BYTE PTR ds:[esi]
   17030:	je     0x170a4
   17032:	jns    0x1705c
   17034:	sub    DWORD PTR [eax],esp
   17036:	cmp    ah,BYTE PTR [eax]
   17038:	and    eax,0x53000a53
   1703d:	add    BYTE PTR [ecx+0x0],bh
   17040:	jae    0x17042
   17042:	inc    ebp
   17043:	add    BYTE PTR [esi+0x0],dh
   17046:	je     0x17048
   17048:	inc    ebx
   17049:	add    BYTE PTR [eax],al
   1704b:	add    BYTE PTR [eax+eax*1+0x44],bl
   1704f:	add    BYTE PTR [ebp+0x0],ah
   17052:	jbe    0x17054
   17054:	imul   eax,DWORD PTR [eax],0x650063
   1705a:	pop    esp
   1705b:	add    BYTE PTR ds:0x7300,ah
   17061:	add    BYTE PTR [eax],al
   17063:	add    BYTE PTR [ebx+0x0],dl
   17066:	jns    0x17068
   17068:	jae    0x1706a
   1706a:	inc    ebp
   1706b:	add    BYTE PTR [esi+0x0],dh
   1706e:	je     0x17070
   17070:	inc    ebx
   17071:	add    BYTE PTR [eax],al
   17073:	add    BYTE PTR [eax+eax*1+0x44],bl
   17077:	add    BYTE PTR [edi+0x0],ch
   1707a:	jae    0x1707c
   1707c:	inc    esp
   1707d:	add    BYTE PTR [ebp+0x0],ah
   17080:	jbe    0x17082
   17082:	imul   eax,DWORD PTR [eax],0x650063
   17088:	jae    0x1708a
   1708a:	pop    esp
   1708b:	add    BYTE PTR ds:0x7300,ah
   17091:	add    BYTE PTR [eax],al
   17093:	add    BYTE PTR [ecx+0x6f],cl
   17096:	inc    ebx
   17097:	jb     0x170fe
   17099:	popa   
   1709a:	je     0x17101
   1709c:	push   ebx
   1709d:	jns    0x1710c
   1709f:	bound  ebp,QWORD PTR [edi+0x6c]
   170a2:	imul   esp,DWORD PTR [ebx+0x4c],0x286b6e69
   170a9:	sub    DWORD PTR [eax],esp
   170ab:	popaw  
   170ad:	imul   ebp,DWORD PTR [ebx+esi*2+0x20],0x7830203a
   170b5:	and    eax,0xa78382e
   170ba:	add    BYTE PTR [eax],al
   170bc:	outs   dx,BYTE PTR ds:[esi]
   170bd:	je     0x17123
   170bf:	ins    BYTE PTR es:[edi],dx
   170c0:	ins    BYTE PTR es:[edi],dx
   170c1:	cs fs ins BYTE PTR es:[edi],dx
   170c4:	ins    BYTE PTR es:[edi],dx
   170c5:	add    BYTE PTR [eax],al
   170c7:	add    BYTE PTR [edx+0x77],bl
   170ca:	push   eax
   170cb:	jb     0x1713c
   170cd:	je     0x17134
   170cf:	arpl   WORD PTR [esi+edx*2+0x69],si
   170d3:	jb     0x17149
   170d5:	jne    0x17138
   170d7:	ins    BYTE PTR es:[edi],dx
   170d8:	dec    ebp
   170d9:	gs ins DWORD PTR es:[edi],dx
   170db:	outs   dx,DWORD PTR ds:[esi]
   170dc:	jb     0x17157
   170de:	add    BYTE PTR [eax],al
   170e0:	dec    esi
   170e1:	je     0x1713a
   170e3:	jb     0x1714e
   170e5:	je     0x1714c
   170e7:	push   esi
   170e8:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   170ef:	gs ins DWORD PTR es:[edi],dx
   170f1:	outs   dx,DWORD PTR ds:[esi]
   170f2:	jb     0x1716d
   170f4:	add    BYTE PTR [eax],al
   170f6:	add    BYTE PTR [eax],al
   170f8:	pop    edx
   170f9:	ja     0x1714d
   170fb:	gs jae 0x17173
   170fe:	ins    DWORD PTR es:[edi],dx
   170ff:	gs push esp
   17101:	push   0x64616572
   17106:	add    BYTE PTR [eax],al
   17108:	dec    esi
   17109:	je     0x1715b
   1710b:	jb     0x1717c
   1710d:	je     0x17174
   1710f:	arpl   WORD PTR [esi+edx*2+0x69],si
   17113:	jb     0x17189
   17115:	jne    0x17178
   17117:	ins    BYTE PTR es:[edi],dx
   17118:	dec    ebp
   17119:	gs ins DWORD PTR es:[edi],dx
   1711b:	outs   dx,DWORD PTR ds:[esi]
   1711c:	jb     0x17197
   1711e:	and    BYTE PTR [eax],ah
   17120:	and    eax,0x4e000a78
   17125:	je     0x1717e
   17127:	jb     0x17192
   17129:	je     0x17190
   1712b:	push   esi
   1712c:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   17133:	gs ins DWORD PTR es:[edi],dx
   17135:	outs   dx,DWORD PTR ds:[esi]
   17136:	jb     0x171b1
   17138:	and    BYTE PTR [eax],ah
   1713a:	and    eax,0xa78
   1713f:	add    BYTE PTR [edx+0x77],bl
   17142:	push   edx
   17143:	gs jae 0x171bb
   17146:	ins    DWORD PTR es:[edi],dx
   17147:	gs push esp
   17149:	push   0x64616572
   1714e:	and    BYTE PTR [eax],ah
   17150:	and    eax,0x49000a78
   17155:	outs   dx,DWORD PTR ds:[esi]
   17156:	inc    ebx
   17157:	jb     0x171be
   17159:	popa   
   1715a:	je     0x171c1
   1715c:	inc    esp
   1715d:	gs jbe 0x171c9
   17160:	arpl   WORD PTR [ebp+0x28],sp
   17163:	sub    DWORD PTR [eax],esp
   17165:	popaw  
   17167:	imul   ebp,DWORD PTR [ebx+esi*2+0x20],0x7830203a
   1716f:	and    eax,0xa78382e
   17174:	add    ah,cl
   17176:	push   ebp
   17177:	lea    ebp,[esp-0x7a4]
   1717e:	sub    esp,0x824
   17184:	mov    eax,ds:0x1a0cc
   17189:	push   ebx
   1718a:	push   esi
   1718b:	push   edi
   1718c:	mov    DWORD PTR [ebp+0x7a0],eax
   17192:	xor    eax,eax
   17194:	lea    edi,[ebp-0x6c]
   17197:	stos   DWORD PTR es:[edi],eax
   17198:	stos   DWORD PTR es:[edi],eax
   17199:	push   0x2
   1719b:	pop    edi
   1719c:	xor    ebx,ebx
   1719e:	push   0x1a130
   171a3:	push   ebx
   171a4:	lea    eax,[ebp-0x70]
   171a7:	push   eax
   171a8:	mov    DWORD PTR [ebp-0x70],0xc
   171af:	mov    DWORD PTR [ebp-0x6c],edi
   171b2:	mov    BYTE PTR [ebp-0x68],bl
   171b5:	mov    BYTE PTR [ebp-0x67],bl
   171b8:	call   0x17dc0
   171bd:	push   eax
   171be:	call   DWORD PTR ds:0x180b8
   171c4:	cmp    eax,ebx
   171c6:	jge    0x171d5
   171c8:	push   eax
   171c9:	push   0x16ffc
   171ce:	call   0x17da2
   171d3:	pop    ecx
   171d4:	pop    ecx
   171d5:	push   0x10
   171d7:	call   0x12044
   171dc:	mov    esi,eax
   171de:	cmp    esi,ebx
   171e0:	pop    ecx
   171e1:	je     0x171f5
   171e3:	mov    ecx,esi
   171e5:	mov    BYTE PTR [esi+0x8],bl
   171e8:	call   0x14502
   171ed:	mov    DWORD PTR ds:0x1a180,esi
   171f3:	jmp    0x171fb
   171f5:	mov    DWORD PTR ds:0x1a180,ebx
   171fb:	push   0x10
   171fd:	call   0x12044
   17202:	mov    esi,eax
   17204:	cmp    esi,ebx
   17206:	pop    ecx
   17207:	je     0x1721b
   17209:	mov    ecx,esi
   1720b:	mov    BYTE PTR [esi+0x8],bl
   1720e:	call   0x14598
   17213:	mov    DWORD PTR ds:0x1a174,esi
   17219:	jmp    0x17221
   1721b:	mov    DWORD PTR ds:0x1a174,ebx
   17221:	push   0x28
   17223:	call   0x12044
   17228:	cmp    eax,ebx
   1722a:	pop    ecx
   1722b:	je     0x1723d
   1722d:	push   edi
   1722e:	push   edi
   1722f:	mov    ecx,eax
   17231:	call   0x16262
   17236:	mov    ds:0x1a104,eax
   1723b:	jmp    0x17243
   1723d:	mov    DWORD PTR ds:0x1a104,ebx
   17243:	call   0x16722
   17248:	mov    eax,DWORD PTR [ebp+0x7b0]
   1724e:	push   DWORD PTR [eax+0x4]
   17251:	push   0x17028
   17256:	call   0x17da2
   1725b:	mov    esi,DWORD PTR ds:0x180b4
   17261:	push   0x1703c
   17266:	lea    eax,[ebp+0x3a0]
   1726c:	push   0x1704c
   17271:	push   eax
   17272:	call   esi
   17274:	mov    edi,DWORD PTR ds:0x1801c
   1727a:	add    esp,0x14
   1727d:	lea    eax,[ebp+0x3a0]
   17283:	push   eax
   17284:	lea    eax,[ebp-0x78]
   17287:	push   eax
   17288:	call   edi
   1728a:	push   0x17064
   1728f:	lea    eax,[ebp-0x60]
   17292:	push   0x17074
   17297:	push   eax
   17298:	call   esi
   1729a:	add    esp,0xc
   1729d:	lea    eax,[ebp-0x60]
   172a0:	push   eax
   172a1:	lea    eax,[ebp-0x80]
   172a4:	push   eax
   172a5:	call   edi
   172a7:	mov    esi,DWORD PTR [ebp+0x7ac]
   172ad:	push   0x1a198
   172b2:	push   ebx
   172b3:	push   0x100
   172b8:	push   0x22
   172ba:	lea    eax,[ebp-0x78]
   172bd:	push   eax
   172be:	push   ebx
   172bf:	push   esi
   172c0:	call   DWORD PTR ds:0x180b0
   172c6:	mov    edi,eax
   172c8:	cmp    edi,ebx
   172ca:	jl     0x17435
   172d0:	mov    eax,0x16c08
   172d5:	mov    DWORD PTR [esi+0x70],eax
   172d8:	mov    DWORD PTR [esi+0x40],eax
   172db:	mov    DWORD PTR [esi+0x38],eax
   172de:	mov    eax,ds:0x1a198
   172e3:	or     DWORD PTR [eax+0x1c],0x4
   172e7:	lea    eax,[ebp-0x78]
   172ea:	push   eax
   172eb:	lea    eax,[ebp-0x80]
   172ee:	push   eax
   172ef:	call   DWORD PTR ds:0x180ac
   172f5:	mov    edi,eax
   172f7:	cmp    edi,ebx
   172f9:	mov    DWORD PTR [ebp+0x7b0],edi
   172ff:	jge    0x1731c
   17301:	push   edi
   17302:	push   0x17094
   17307:	call   0x17da2
   1730c:	pop    ecx
   1730d:	pop    ecx
   1730e:	push   DWORD PTR [esi+0x4]
   17311:	call   DWORD PTR ds:0x18044
   17317:	jmp    0x17442
   1731c:	mov    esi,DWORD PTR ds:0x180a8
   17322:	push   ebx
   17323:	push   0x1a10c
   17328:	call   esi
   1732a:	push   ebx
   1732b:	push   0x1a0d0
   17330:	call   esi
   17332:	push   0x8000000
   17337:	push   0x170bc
   1733c:	lea    eax,[ebp-0x64]
   1733f:	push   eax
   17340:	call   0x178d8
   17345:	push   DWORD PTR [ebp-0x64]
   17348:	call   DWORD PTR ds:0x180a4
   1734e:	push   ebx
   1734f:	push   0x170c8
   17354:	push   DWORD PTR [ebp-0x64]
   17357:	mov    esi,eax
   17359:	call   0x17792
   1735e:	push   eax
   1735f:	push   esi
   17360:	call   0x17744
   17365:	add    eax,DWORD PTR [ebp-0x64]
   17368:	push   eax
   17369:	call   0x176fe
   1736e:	mov    ecx,DWORD PTR ds:0x18084
   17374:	mov    ecx,DWORD PTR [ecx]
   17376:	mov    eax,DWORD PTR [ecx+eax*4]
   17379:	push   ebx
   1737a:	push   0x170e0
   1737f:	push   DWORD PTR [ebp-0x64]
   17382:	mov    ds:0x1a184,eax
   17387:	call   0x17792
   1738c:	push   eax
   1738d:	push   esi
   1738e:	call   0x17744
   17393:	add    eax,DWORD PTR [ebp-0x64]
   17396:	push   eax
   17397:	call   0x176fe
   1739c:	mov    ecx,DWORD PTR ds:0x18084
   173a2:	mov    ecx,DWORD PTR [ecx]
   173a4:	mov    eax,DWORD PTR [ecx+eax*4]
   173a7:	push   ebx
   173a8:	push   0x170f8
   173ad:	push   DWORD PTR [ebp-0x64]
   173b0:	mov    ds:0x1a178,eax
   173b5:	call   0x17792
   173ba:	push   eax
   173bb:	push   esi
   173bc:	call   0x17744
   173c1:	add    eax,DWORD PTR [ebp-0x64]
   173c4:	push   eax
   173c5:	call   0x176fe
   173ca:	mov    ecx,DWORD PTR ds:0x18084
   173d0:	mov    ecx,DWORD PTR [ecx]
   173d2:	push   DWORD PTR ds:0x1a184
   173d8:	mov    eax,DWORD PTR [ecx+eax*4]
   173db:	push   0x17108
   173e0:	mov    ds:0x1a188,eax
   173e5:	call   0x17da2
   173ea:	push   DWORD PTR ds:0x1a178
   173f0:	push   0x17124
   173f5:	call   0x17da2
   173fa:	push   DWORD PTR ds:0x1a188
   17400:	push   0x17140
   17405:	call   0x17da2
   1740a:	add    esp,0x18
   1740d:	push   DWORD PTR [ebp-0x64]
   17410:	call   0x179da
   17415:	call   0x13e12
   1741a:	push   0x6
   1741c:	xor    eax,eax
   1741e:	pop    ecx
   1741f:	mov    edi,0x1a1f0
   17424:	rep stos DWORD PTR es:[edi],eax
   17426:	mov    eax,DWORD PTR [ebp+0x7b0]
   1742c:	mov    BYTE PTR ds:0x1a19c,0x1
   17433:	jmp    0x17444
   17435:	push   edi
   17436:	push   0x17154
   1743b:	call   0x17da2
   17440:	pop    ecx
   17441:	pop    ecx
   17442:	mov    eax,edi
   17444:	mov    ecx,DWORD PTR [ebp+0x7a0]
   1744a:	pop    edi
   1744b:	pop    esi
   1744c:	pop    ebx
   1744d:	call   0x17d41
   17452:	add    ebp,0x7a4
   17458:	leave  
   17459:	ret    0x8
   1745c:	push   DWORD PTR [ecx]
   1745e:	call   0x1206c
   17463:	pop    ecx
   17464:	ret    
   17465:	int3   
   17466:	push   ebx
   17467:	push   esi
   17468:	push   edi
   17469:	mov    edi,DWORD PTR [esp+0x10]
   1746d:	mov    eax,DWORD PTR [edi]
   1746f:	mov    esi,ecx
   17471:	mov    ebx,DWORD PTR [esi]
   17473:	lea    ecx,[eax+0x1]
   17476:	mov    dl,BYTE PTR [eax]
   17478:	inc    eax
   17479:	test   dl,dl
   1747b:	jne    0x17476
   1747d:	sub    eax,ecx
   1747f:	inc    eax
   17480:	push   eax
   17481:	call   0x12044
   17486:	pop    ecx
   17487:	mov    DWORD PTR [esi],eax
   17489:	mov    ecx,DWORD PTR [edi]
   1748b:	mov    dl,BYTE PTR [ecx]
   1748d:	inc    ecx
   1748e:	mov    BYTE PTR [eax],dl
   17490:	inc    eax
   17491:	test   dl,dl
   17493:	jne    0x1748b
   17495:	push   ebx
   17496:	call   0x1206c
   1749b:	pop    ecx
   1749c:	pop    edi
   1749d:	mov    eax,esi
   1749f:	pop    esi
   174a0:	pop    ebx
   174a1:	ret    0x4
   174a4:	mov    eax,DWORD PTR [ecx]
   174a6:	ret    
   174a7:	int3   
   174a8:	mov    eax,DWORD PTR [ecx]
   174aa:	lea    ecx,[eax+0x1]
   174ad:	mov    dl,BYTE PTR [eax]
   174af:	inc    eax
   174b0:	test   dl,dl
   174b2:	jne    0x174ad
   174b4:	sub    eax,ecx
   174b6:	ret    
   174b7:	int3   
   174b8:	mov    eax,DWORD PTR [esp+0x4]
   174bc:	push   esi
   174bd:	mov    esi,ecx
   174bf:	lea    ecx,[eax+0x1]
   174c2:	mov    dl,BYTE PTR [eax]
   174c4:	inc    eax
   174c5:	test   dl,dl
   174c7:	jne    0x174c2
   174c9:	sub    eax,ecx
   174cb:	inc    eax
   174cc:	push   eax
   174cd:	call   0x12044
   174d2:	test   eax,eax
   174d4:	pop    ecx
   174d5:	mov    DWORD PTR [esi],eax
   174d7:	jne    0x174e4
   174d9:	push   0xc000009a
   174de:	call   DWORD PTR ds:0x18020
   174e4:	mov    ecx,DWORD PTR [esp+0x8]
   174e8:	mov    esi,DWORD PTR [esi]
   174ea:	mov    al,BYTE PTR [ecx]
   174ec:	inc    ecx
   174ed:	mov    BYTE PTR [esi],al
   174ef:	inc    esi
   174f0:	test   al,al
   174f2:	jne    0x174ea
   174f4:	pop    esi
   174f5:	ret    0x4
   174f8:	mov    eax,DWORD PTR [esp+0x8]
   174fc:	push   esi
   174fd:	mov    esi,DWORD PTR [eax]
   174ff:	mov    eax,DWORD PTR [esp+0x8]
   17503:	mov    eax,DWORD PTR [eax]
   17505:	mov    dl,BYTE PTR [eax]
   17507:	mov    cl,dl
   17509:	cmp    dl,BYTE PTR [esi]
   1750b:	jne    0x17527
   1750d:	test   cl,cl
   1750f:	je     0x17523
   17511:	mov    dl,BYTE PTR [eax+0x1]
   17514:	mov    cl,dl
   17516:	cmp    dl,BYTE PTR [esi+0x1]
   17519:	jne    0x17527
   1751b:	inc    eax
   1751c:	inc    eax
   1751d:	inc    esi
   1751e:	inc    esi
   1751f:	test   cl,cl
   17521:	jne    0x17505
   17523:	xor    eax,eax
   17525:	jmp    0x1752c
   17527:	sbb    eax,eax
   17529:	sbb    eax,0xffffffff
   1752c:	xor    ecx,ecx
   1752e:	test   eax,eax
   17530:	setl   cl
   17533:	mov    al,cl
   17535:	pop    esi
   17536:	ret    0x8
   17539:	int3   
   1753a:	push   esi
   1753b:	push   DWORD PTR [esp+0x8]
   1753f:	mov    esi,ecx
   17541:	and    DWORD PTR [esi],0x0
   17544:	call   0x174b8
   17549:	mov    eax,esi
   1754b:	pop    esi
   1754c:	ret    0x4
   1754f:	int3   
   17550:	mov    eax,DWORD PTR [esp+0x4]
   17554:	push   esi
   17555:	mov    esi,ecx
   17557:	and    DWORD PTR [esi],0x0
   1755a:	push   DWORD PTR [eax]
   1755c:	call   0x174b8
   17561:	mov    eax,esi
   17563:	pop    esi
   17564:	ret    0x4
   17567:	int3   
   17568:	mov    eax,DWORD PTR [esp+0x4]
   1756c:	mov    cl,BYTE PTR [esp+0x8]
   17570:	mov    BYTE PTR [eax],cl
   17572:	inc    eax
   17573:	ret    0x8
   17576:	mov    eax,DWORD PTR [esp+0x4]
   1757a:	mov    ecx,DWORD PTR [esp+0x8]
   1757e:	mov    DWORD PTR [eax],ecx
   17580:	add    eax,0x4
   17583:	ret    0x8
   17586:	mov    eax,DWORD PTR [esp+0x4]
   1758a:	mov    cx,WORD PTR [esp+0x8]
   1758f:	mov    WORD PTR [eax],cx
   17592:	add    eax,0x2
   17595:	ret    0x8
   17598:	push   esi
   17599:	mov    esi,DWORD PTR [esp+0x10]
   1759d:	push   edi
   1759e:	mov    edi,DWORD PTR [esp+0xc]
   175a2:	push   esi
   175a3:	push   DWORD PTR [esp+0x14]
   175a7:	push   edi
   175a8:	call   DWORD PTR ds:0x18074
   175ae:	add    esp,0xc
   175b1:	lea    eax,[edi+esi*1]
   175b4:	pop    edi
   175b5:	pop    esi
   175b6:	ret    0xc
   175b9:	int3   
   175ba:	mov    eax,DWORD PTR [esp+0x8]
   175be:	mov    ecx,DWORD PTR [esp+0x4]
   175c2:	sub    ecx,eax
   175c4:	sub    ecx,0x5
   175c7:	mov    DWORD PTR [eax+0x1],ecx
   175ca:	mov    BYTE PTR [eax],0xe9
   175cd:	add    eax,0x5
   175d0:	ret    0x8
   175d3:	int3   
   175d4:	inc    esi
   175d5:	jne    0x17645
   175d7:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
   175db:	outs   dx,BYTE PTR ds:[esi]
   175dc:	and    BYTE PTR [ecx+0x64],ah
   175df:	fs jb  0x17602
   175e2:	cmp    ah,BYTE PTR [eax]
   175e4:	xor    BYTE PTR [eax+0x25],bh
   175e7:	cmp    BYTE PTR cs:[eax+0xa],bh
   175eb:	add    BYTE PTR [eax+0x61],cl
   175ee:	outs   dx,BYTE PTR ds:[esi]
   175ef:	fs ins BYTE PTR es:[edi],dx
   175f1:	gs jb  0x17614
   175f4:	popa   
   175f5:	fs fs jb 0x17619
   175f9:	cmp    ah,BYTE PTR [eax]
   175fb:	xor    BYTE PTR [eax+0x25],bh
   175fe:	cmp    BYTE PTR cs:[eax+0xa],bh
   17602:	add    BYTE PTR [eax],al
   17604:	inc    ebx
   17605:	popa   
   17606:	ins    BYTE PTR es:[edi],dx
   17607:	ins    BYTE PTR es:[edi],dx
   17608:	inc    edi
   17609:	popa   
   1760a:	je     0x17671
   1760c:	and    BYTE PTR [ecx+0x74],ah
   1760f:	and    BYTE PTR [edx],bh
   17611:	and    BYTE PTR [eax],dh
   17613:	js     0x1763a
   17615:	cmp    BYTE PTR cs:[eax+0x3b],bh
   17619:	and    BYTE PTR [ebx+0x69],dh
   1761c:	jp     0x17683
   1761e:	and    BYTE PTR [edx],bh
   17620:	and    BYTE PTR ds:0xcc000a64,ah
   17626:	push   ebp
   17627:	mov    ebp,esp
   17629:	push   ecx
   1762a:	push   ecx
   1762b:	push   ebx
   1762c:	push   esi
   1762d:	mov    esi,DWORD PTR [ebp+0x8]
   17630:	xor    ebx,ebx
   17632:	cmp    esi,ebx
   17634:	mov    DWORD PTR [ebp-0x8],ebx
   17637:	jne    0x17640
   17639:	xor    eax,eax
   1763b:	jmp    0x176f8
   17640:	lea    eax,[ebp-0x8]
   17643:	push   eax
   17644:	push   esi
   17645:	call   0x11000
   1764a:	add    ebx,DWORD PTR [ebp-0x8]
   1764d:	add    esi,DWORD PTR [ebp-0x8]
   17650:	cmp    ebx,0x5
   17653:	jb     0x17640
   17655:	push   edi
   17656:	push   0x206b6444
   1765b:	lea    edi,[ebx+0x5]
   1765e:	push   edi
   1765f:	push   0x0
   17661:	call   DWORD PTR ds:0x18024
   17667:	push   DWORD PTR [ebp+0x8]
   1766a:	mov    DWORD PTR [ebp-0x4],eax
   1766d:	push   0x175d4
   17672:	call   0x17da2
   17677:	push   DWORD PTR [ebp+0xc]
   1767a:	push   0x175ec
   1767f:	call   0x17da2
   17684:	push   edi
   17685:	push   DWORD PTR [ebp-0x4]
   17688:	push   0x17604
   1768d:	call   0x17da2
   17692:	mov    ecx,edi
   17694:	mov    edi,DWORD PTR [ebp-0x4]
   17697:	mov    esi,ecx
   17699:	shr    ecx,0x2
   1769c:	mov    edx,0x90909090
   176a1:	mov    eax,edx
   176a3:	rep stos DWORD PTR es:[edi],eax
   176a5:	mov    ecx,esi
   176a7:	mov    esi,DWORD PTR [ebp+0x8]
   176aa:	and    ecx,0x3
   176ad:	rep stos BYTE PTR es:[edi],al
   176af:	mov    edi,DWORD PTR [ebp-0x4]
   176b2:	mov    ecx,ebx
   176b4:	mov    eax,ecx
   176b6:	shr    ecx,0x2
   176b9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   176bb:	mov    ecx,eax
   176bd:	and    ecx,0x3
   176c0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   176c2:	mov    ecx,ebx
   176c4:	mov    esi,ecx
   176c6:	mov    eax,edx
   176c8:	mov    edx,DWORD PTR [ebp+0x8]
   176cb:	shr    ecx,0x2
   176ce:	mov    edi,edx
   176d0:	rep stos DWORD PTR es:[edi],eax
   176d2:	mov    ecx,esi
   176d4:	mov    esi,DWORD PTR [ebp-0x4]
   176d7:	and    ecx,0x3
   176da:	rep stos BYTE PTR es:[edi],al
   176dc:	add    esp,0x1c
   176df:	lea    eax,[esi+ebx*1]
   176e2:	push   eax
   176e3:	lea    eax,[edx+0x5]
   176e6:	push   eax
   176e7:	call   0x175ba
   176ec:	push   edx
   176ed:	push   DWORD PTR [ebp+0xc]
   176f0:	call   0x175ba
   176f5:	mov    eax,esi
   176f7:	pop    edi
   176f8:	pop    esi
   176f9:	pop    ebx
   176fa:	leave  
   176fb:	ret    0x8
   176fe:	mov    eax,DWORD PTR [esp+0x4]
   17702:	mov    eax,DWORD PTR [eax+0x1]
   17705:	ret    0x4
   17708:	mov    ecx,DWORD PTR [esp+0x4]
   1770c:	movzx  eax,WORD PTR [ecx+0x14]
   17710:	lea    eax,[eax+ecx*1+0x18]
   17714:	movzx  ecx,WORD PTR [ecx+0x6]
   17718:	push   esi
   17719:	xor    esi,esi
   1771b:	test   ecx,ecx
   1771d:	push   edi
   1771e:	jbe    0x1773c
   17720:	mov    edx,DWORD PTR [eax+0xc]
   17723:	cmp    DWORD PTR [esp+0x10],edx
   17727:	jb     0x17734
   17729:	mov    edi,DWORD PTR [eax+0x8]
   1772c:	add    edi,edx
   1772e:	cmp    DWORD PTR [esp+0x10],edi
   17732:	jb     0x1773e
   17734:	add    eax,0x28
   17737:	inc    esi
   17738:	cmp    esi,ecx
   1773a:	jb     0x17720
   1773c:	xor    eax,eax
   1773e:	pop    edi
   1773f:	pop    esi
   17740:	ret    0x8
   17743:	int3   
   17744:	push   esi
   17745:	push   DWORD PTR [esp+0xc]
   17749:	mov    esi,DWORD PTR [esp+0xc]
   1774d:	push   esi
   1774e:	call   0x17708
   17753:	mov    ecx,eax
   17755:	test   ecx,ecx
   17757:	je     0x1776b
   17759:	mov    eax,DWORD PTR [esi+0x3c]
   1775c:	dec    eax
   1775d:	not    eax
   1775f:	and    eax,DWORD PTR [ecx+0x14]
   17762:	sub    eax,DWORD PTR [ecx+0xc]
   17765:	add    eax,DWORD PTR [esp+0xc]
   17769:	jmp    0x1776f
   1776b:	mov    eax,DWORD PTR [esp+0xc]
   1776f:	pop    esi
   17770:	ret    0x8
   17773:	int3   
   17774:	cmp    DWORD PTR [esp+0xc],0x0
   17779:	je     0x17781
   1777b:	mov    eax,DWORD PTR [esp+0x8]
   1777f:	jmp    0x1778e
   17781:	push   DWORD PTR [esp+0x8]
   17785:	push   DWORD PTR [esp+0x8]
   17789:	call   0x17744
   1778e:	ret    0xc
   17791:	int3   
   17792:	push   ebp
   17793:	mov    ebp,esp
   17795:	sub    esp,0x20
   17798:	push   ebx
   17799:	push   esi
   1779a:	mov    esi,DWORD PTR [ebp+0x8]
   1779d:	push   edi
   1779e:	push   esi
   1779f:	call   DWORD PTR ds:0x180a4
   177a5:	mov    ebx,eax
   177a7:	lea    eax,[ebp-0x18]
   177aa:	push   eax
   177ab:	push   0x0
   177ad:	push   0x0
   177af:	push   esi
   177b0:	mov    DWORD PTR [ebp-0xc],ebx
   177b3:	call   0x17da8
   177b8:	mov    edi,eax
   177ba:	mov    eax,DWORD PTR [ebx+0x50]
   177bd:	mov    ecx,edi
   177bf:	sub    ecx,esi
   177c1:	cmp    eax,ecx
   177c3:	jb     0x17814
   177c5:	mov    ecx,DWORD PTR [ebp-0x18]
   177c8:	sub    ecx,esi
   177ca:	add    ecx,edi
   177cc:	cmp    eax,ecx
   177ce:	jb     0x17814
   177d0:	push   DWORD PTR [ebp+0x10]
   177d3:	push   DWORD PTR [edi+0x20]
   177d6:	push   ebx
   177d7:	call   0x17774
   177dc:	push   DWORD PTR [ebp+0x10]
   177df:	mov    ebx,eax
   177e1:	push   DWORD PTR [edi+0x1c]
   177e4:	add    ebx,esi
   177e6:	push   DWORD PTR [ebp-0xc]
   177e9:	call   0x17774
   177ee:	push   DWORD PTR [ebp+0x10]
   177f1:	add    eax,esi
   177f3:	push   DWORD PTR [edi+0x24]
   177f6:	mov    DWORD PTR [ebp-0x20],eax
   177f9:	push   DWORD PTR [ebp-0xc]
   177fc:	call   0x17774
   17801:	and    DWORD PTR [ebp-0x14],0x0
   17805:	add    eax,esi
   17807:	mov    esi,DWORD PTR [edi+0x18]
   1780a:	test   esi,esi
   1780c:	mov    DWORD PTR [ebp-0x1c],eax
   1780f:	mov    DWORD PTR [ebp-0x10],esi
   17812:	jg     0x17820
   17814:	xor    eax,eax
   17816:	pop    edi
   17817:	pop    esi
   17818:	pop    ebx
   17819:	leave  
   1781a:	ret    0xc
   1781d:	mov    esi,DWORD PTR [ebp-0x10]
   17820:	mov    eax,DWORD PTR [ebp-0x14]
   17823:	push   DWORD PTR [ebp+0x10]
   17826:	add    esi,eax
   17828:	mov    eax,DWORD PTR [ebp+0xc]
   1782b:	sar    esi,1
   1782d:	push   DWORD PTR [ebx+esi*4]
   17830:	mov    DWORD PTR [ebp-0x8],eax
   17833:	push   DWORD PTR [ebp-0xc]
   17836:	call   0x17774
   1783b:	add    eax,DWORD PTR [ebp+0x8]
   1783e:	mov    cl,BYTE PTR [eax]
   17840:	mov    edx,DWORD PTR [ebp-0x8]
   17843:	mov    BYTE PTR [ebp-0x1],cl
   17846:	cmp    cl,BYTE PTR [edx]
   17848:	jne    0x17867
   1784a:	test   cl,cl
   1784c:	je     0x17863
   1784e:	mov    cl,BYTE PTR [eax+0x1]
   17851:	mov    BYTE PTR [ebp-0x1],cl
   17854:	cmp    cl,BYTE PTR [edx+0x1]
   17857:	jne    0x17867
   17859:	add    DWORD PTR [ebp-0x8],0x2
   1785d:	inc    eax
   1785e:	inc    eax
   1785f:	test   cl,cl
   17861:	jne    0x1783e
   17863:	xor    eax,eax
   17865:	jmp    0x1786c
   17867:	sbb    eax,eax
   17869:	sbb    eax,0xffffffff
   1786c:	test   eax,eax
   1786e:	je     0x17885
   17870:	jge    0x17878
   17872:	inc    esi
   17873:	mov    DWORD PTR [ebp-0x14],esi
   17876:	jmp    0x1787b
   17878:	mov    DWORD PTR [ebp-0x10],esi
   1787b:	mov    eax,DWORD PTR [ebp-0x10]
   1787e:	cmp    DWORD PTR [ebp-0x14],eax
   17881:	jl     0x1781d
   17883:	jmp    0x17814
   17885:	mov    eax,DWORD PTR [ebp-0x1c]
   17888:	movzx  eax,WORD PTR [eax+esi*2]
   1788c:	mov    ecx,DWORD PTR [ebp-0x20]
   1788f:	mov    ecx,DWORD PTR [ecx+eax*4]
   17892:	mov    eax,ecx
   17894:	sub    eax,edi
   17896:	add    eax,DWORD PTR [ebp+0x8]
   17899:	cmp    eax,DWORD PTR [ebp-0x18]
   1789c:	sbb    eax,eax
   1789e:	not    eax
   178a0:	and    eax,ecx
   178a2:	jmp    0x17816
   178a7:	int3   
   178a8:	pop    esp
   178a9:	add    BYTE PTR [ebx+0x0],dh
   178ac:	jns    0x178ae
   178ae:	jae    0x178b0
   178b0:	je     0x178b2
   178b2:	add    BYTE PTR gs:[ebp+0x0],ch
   178b6:	jb     0x178b8
   178b8:	outs   dx,DWORD PTR ds:[esi]
   178b9:	add    BYTE PTR [edi+0x0],ch
   178bc:	je     0x178be
   178be:	pop    esp
   178bf:	add    BYTE PTR [ebx+0x0],dh
   178c2:	jns    0x178c4
   178c4:	jae    0x178c6
   178c6:	je     0x178c8
   178c8:	add    BYTE PTR gs:[ebp+0x0],ch
   178cc:	xor    eax,DWORD PTR [eax]
   178ce:	xor    al,BYTE PTR [eax]
   178d0:	pop    esp
   178d1:	add    BYTE PTR ds:0x5300,ah
   178d7:	add    BYTE PTR [ebp-0x75],dl
   178da:	in     al,dx
   178db:	sub    esp,0x40
   178de:	push   ebx
   178df:	push   esi
   178e0:	xor    ebx,ebx
   178e2:	push   edi
   178e3:	xor    eax,eax
   178e5:	lea    edi,[ebp-0x14]
   178e8:	mov    DWORD PTR [ebp-0x18],ebx
   178eb:	stos   DWORD PTR es:[edi],eax
   178ec:	mov    eax,DWORD PTR [ebp+0xc]
   178ef:	mov    DWORD PTR [ebp-0xc],ebx
   178f2:	mov    DWORD PTR [ebp-0x10],ebx
   178f5:	lea    esi,[eax+0x1]
   178f8:	mov    cl,BYTE PTR [eax]
   178fa:	inc    eax
   178fb:	cmp    cl,bl
   178fd:	jne    0x178f8
   178ff:	sub    eax,esi
   17901:	push   0x20736649
   17906:	lea    eax,[eax+eax*1+0x40]
   1790a:	push   eax
   1790b:	push   0x1
   1790d:	call   DWORD PTR ds:0x18024
   17913:	push   DWORD PTR [ebp+0xc]
   17916:	mov    esi,eax
   17918:	push   0x178a8
   1791d:	push   esi
   1791e:	call   DWORD PTR ds:0x180b4
   17924:	add    esp,0xc
   17927:	push   esi
   17928:	lea    eax,[ebp-0x20]
   1792b:	push   eax
   1792c:	call   DWORD PTR ds:0x1801c
   17932:	push   0x10
   17934:	lea    eax,[ebp-0x20]
   17937:	mov    DWORD PTR [ebp-0x38],eax
   1793a:	push   0x1
   1793c:	lea    eax,[ebp-0x28]
   1793f:	push   eax
   17940:	lea    eax,[ebp-0x40]
   17943:	push   eax
   17944:	push   0x80100000
   17949:	lea    eax,[ebp-0x4]
   1794c:	push   eax
   1794d:	mov    DWORD PTR [ebp-0x40],0x18
   17954:	mov    DWORD PTR [ebp-0x3c],ebx
   17957:	mov    DWORD PTR [ebp-0x34],ebx
   1795a:	mov    DWORD PTR [ebp-0x30],ebx
   1795d:	mov    DWORD PTR [ebp-0x2c],ebx
   17960:	call   DWORD PTR ds:0x180c8
   17966:	push   ebx
   17967:	push   esi
   17968:	mov    edi,eax
   1796a:	call   DWORD PTR ds:0x18028
   17970:	cmp    edi,ebx
   17972:	jl     0x179c4
   17974:	push   DWORD PTR [ebp-0x4]
   17977:	lea    eax,[ebp-0x18]
   1797a:	push   DWORD PTR [ebp+0x10]
   1797d:	push   0x2
   1797f:	push   eax
   17980:	push   ebx
   17981:	push   0x4
   17983:	lea    eax,[ebp-0x8]
   17986:	push   eax
   17987:	call   DWORD PTR ds:0x180c4
   1798d:	push   DWORD PTR [ebp-0x4]
   17990:	mov    esi,DWORD PTR ds:0x18070
   17996:	mov    edi,eax
   17998:	call   esi
   1799a:	cmp    edi,ebx
   1799c:	jl     0x179c4
   1799e:	push   0x2
   179a0:	push   ebx
   179a1:	push   0x2
   179a3:	lea    eax,[ebp-0x10]
   179a6:	push   eax
   179a7:	push   ebx
   179a8:	push   ebx
   179a9:	push   ebx
   179aa:	lea    eax,[ebp-0xc]
   179ad:	push   eax
   179ae:	push   0xffffffff
   179b0:	push   DWORD PTR [ebp-0x8]
   179b3:	call   DWORD PTR ds:0x180c0
   179b9:	push   DWORD PTR [ebp-0x8]
   179bc:	mov    edi,eax
   179be:	call   esi
   179c0:	cmp    edi,ebx
   179c2:	jge    0x179c8
   179c4:	mov    eax,edi
   179c6:	jmp    0x179d2
   179c8:	mov    eax,DWORD PTR [ebp+0x8]
   179cb:	mov    ecx,DWORD PTR [ebp-0xc]
   179ce:	mov    DWORD PTR [eax],ecx
   179d0:	xor    eax,eax
   179d2:	pop    edi
   179d3:	pop    esi
   179d4:	pop    ebx
   179d5:	leave  
   179d6:	ret    0xc
   179d9:	int3   
   179da:	push   DWORD PTR [esp+0x4]
   179de:	push   0xffffffff
   179e0:	call   DWORD PTR ds:0x180cc
   179e6:	ret    0x4
   179e9:	int3   
   179ea:	push   esi
   179eb:	mov    esi,DWORD PTR [esp+0x8]
   179ef:	test   esi,esi
   179f1:	jne    0x179f6
   179f3:	lea    esi,[ecx+0x18]
   179f6:	mov    edx,DWORD PTR [esp+0xc]
   179fa:	test   edx,edx
   179fc:	jne    0x17a02
   179fe:	xor    eax,eax
   17a00:	jmp    0x17a12
   17a02:	movzx  eax,BYTE PTR [edx]
   17a05:	push   edx
   17a06:	lea    eax,[eax*8+0x18328]
   17a0d:	push   esi
   17a0e:	push   eax
   17a0f:	call   DWORD PTR [eax+0x4]
   17a12:	pop    esi
   17a13:	ret    0x8
   17a16:	push   ebp
   17a17:	mov    ebp,esp
   17a19:	mov    eax,DWORD PTR [ebp+0x14]
   17a1c:	push   ebx
   17a1d:	mov    ebx,DWORD PTR [ebp+0x8]
   17a20:	push   esi
   17a21:	mov    esi,DWORD PTR [ebp+0x10]
   17a24:	sub    esi,eax
   17a26:	push   edi
   17a27:	lea    edi,[ebx+eax*1]
   17a2a:	mov    eax,esi
   17a2c:	xor    edx,edx
   17a2e:	dec    eax
   17a2f:	je     0x17a50
   17a31:	dec    eax
   17a32:	je     0x17a42
   17a34:	dec    eax
   17a35:	dec    eax
   17a36:	jne    0x17a5c
   17a38:	mov    eax,DWORD PTR [ecx+0xc]
   17a3b:	mov    edx,DWORD PTR [edi]
   17a3d:	and    DWORD PTR [eax],0x0
   17a40:	jmp    0x17a5c
   17a42:	mov    eax,DWORD PTR [ecx+0xc]
   17a45:	movsx  edx,WORD PTR [edi]
   17a48:	mov    DWORD PTR [eax],0x2
   17a4e:	jmp    0x17a5c
   17a50:	mov    eax,DWORD PTR [ecx+0xc]
   17a53:	movsx  edx,BYTE PTR [edi]
   17a56:	mov    DWORD PTR [eax],0x3
   17a5c:	mov    ecx,DWORD PTR [ebp+0xc]
   17a5f:	lea    eax,[edx+ecx*1]
   17a62:	add    eax,DWORD PTR [ebp+0x10]
   17a65:	sub    edx,ebx
   17a67:	add    edx,ecx
   17a69:	dec    esi
   17a6a:	je     0x17a7c
   17a6c:	dec    esi
   17a6d:	je     0x17a77
   17a6f:	dec    esi
   17a70:	dec    esi
   17a71:	jne    0x17a7e
   17a73:	mov    DWORD PTR [edi],edx
   17a75:	jmp    0x17a7e
   17a77:	mov    WORD PTR [edi],dx
   17a7a:	jmp    0x17a7e
   17a7c:	mov    BYTE PTR [edi],dl
   17a7e:	pop    edi
   17a7f:	pop    esi
   17a80:	pop    ebx
   17a81:	pop    ebp
   17a82:	ret    0x10
   17a85:	int3   
   17a86:	mov    eax,DWORD PTR [esp+0xc]
   17a8a:	inc    eax
   17a8b:	ret    0xc
   17a8e:	mov    eax,ecx
   17a90:	mov    ecx,DWORD PTR [esp+0x4]
   17a94:	and    DWORD PTR [eax],0x0
   17a97:	and    DWORD PTR [eax+0x4],0x0
   17a9b:	test   ecx,ecx
   17a9d:	jne    0x17aa2
   17a9f:	lea    ecx,[eax+0x14]
   17aa2:	mov    edx,DWORD PTR [esp+0x8]
   17aa6:	test   edx,edx
   17aa8:	mov    DWORD PTR [eax+0x8],ecx
   17aab:	jne    0x17ab0
   17aad:	lea    edx,[eax+0x10]
   17ab0:	mov    DWORD PTR [eax+0xc],edx
   17ab3:	and    DWORD PTR [ecx],0x0
   17ab6:	mov    ecx,DWORD PTR [eax+0xc]
   17ab9:	and    DWORD PTR [ecx],0x0
   17abc:	ret    0x8
   17abf:	int3   
   17ac0:	push   ebp
   17ac1:	mov    ebp,esp
   17ac3:	push   ecx
   17ac4:	push   ecx
   17ac5:	mov    eax,ecx
   17ac7:	mov    ecx,DWORD PTR [ebp+0x8]
   17aca:	mov    ecx,DWORD PTR [ecx]
   17acc:	test   ecx,0x200000
   17ad2:	mov    DWORD PTR [ebp-0x8],eax
   17ad5:	je     0x17add
   17ad7:	cmp    DWORD PTR [eax+0x4],0x0
   17adb:	jmp    0x17ae0
   17add:	cmp    DWORD PTR [eax],0x0
   17ae0:	mov    eax,ecx
   17ae2:	je     0x17ae9
   17ae4:	shr    eax,0xb
   17ae7:	jmp    0x17aec
   17ae9:	shr    eax,0x8
   17aec:	and    eax,0x7
   17aef:	shr    ecx,0xe
   17af2:	and    ecx,0x7
   17af5:	mov    DWORD PTR [ebp-0x4],eax
   17af8:	jbe    0x17b3c
   17afa:	mov    edx,DWORD PTR [ebp+0x10]
   17afd:	add    ecx,edx
   17aff:	push   ebx
   17b00:	mov    bl,BYTE PTR [ecx]
   17b02:	movzx  edx,bl
   17b05:	mov    dl,BYTE PTR [edx+0x18228]
   17b0b:	test   dl,0x10
   17b0e:	je     0x17b35
   17b10:	mov    cl,BYTE PTR [ecx+0x1]
   17b13:	and    cl,0x7
   17b16:	cmp    cl,0x5
   17b19:	jne    0x17b35
   17b1b:	and    bl,0xc0
   17b1e:	je     0x17b2f
   17b20:	cmp    bl,0x40
   17b23:	jne    0x17b2a
   17b25:	lea    ecx,[eax+0x1]
   17b28:	jmp    0x17b32
   17b2a:	cmp    bl,0x80
   17b2d:	jne    0x17b35
   17b2f:	lea    ecx,[eax+0x4]
   17b32:	mov    DWORD PTR [ebp-0x4],ecx
   17b35:	and    edx,0xf
   17b38:	add    DWORD PTR [ebp-0x4],edx
   17b3b:	pop    ebx
   17b3c:	mov    ecx,DWORD PTR [ebp-0x4]
   17b3f:	mov    edx,ecx
   17b41:	push   esi
   17b42:	mov    esi,DWORD PTR [ebp+0x10]
   17b45:	shr    ecx,0x2
   17b48:	push   edi
   17b49:	mov    edi,DWORD PTR [ebp+0xc]
   17b4c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b4e:	mov    ecx,edx
   17b50:	and    ecx,0x3
   17b53:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b55:	mov    edi,DWORD PTR [ebp+0x8]
   17b58:	mov    ecx,DWORD PTR [edi]
   17b5a:	mov    esi,DWORD PTR [ebp-0x8]
   17b5d:	shl    ecx,0xc
   17b60:	sar    ecx,0x1d
   17b63:	je     0x17b79
   17b65:	push   ecx
   17b66:	push   eax
   17b67:	push   DWORD PTR [ebp+0x10]
   17b6a:	mov    ecx,esi
   17b6c:	push   DWORD PTR [ebp+0xc]
   17b6f:	call   0x17a16
   17b74:	mov    ecx,DWORD PTR [esi+0x8]
   17b77:	mov    DWORD PTR [ecx],eax
   17b79:	test   BYTE PTR [edi+0x2],0x40
   17b7d:	je     0x17b84
   17b7f:	mov    eax,DWORD PTR [esi+0xc]
   17b82:	neg    DWORD PTR [eax]
   17b84:	test   BYTE PTR [edi+0x2],0x10
   17b88:	je     0x17b90
   17b8a:	mov    eax,DWORD PTR [esi+0x8]
   17b8d:	or     DWORD PTR [eax],0xffffffff
   17b90:	mov    eax,DWORD PTR [ebp-0x4]
   17b93:	mov    ecx,DWORD PTR [ebp+0x10]
   17b96:	pop    edi
   17b97:	add    eax,ecx
   17b99:	pop    esi
   17b9a:	leave  
   17b9b:	ret    0xc
   17b9e:	push   ebx
   17b9f:	push   esi
   17ba0:	mov    esi,DWORD PTR [esp+0x14]
   17ba4:	push   edi
   17ba5:	mov    edi,DWORD PTR [esp+0x14]
   17ba9:	push   esi
   17baa:	push   edi
   17bab:	push   DWORD PTR [esp+0x18]
   17baf:	mov    ebx,ecx
   17bb1:	call   0x17ac0
   17bb6:	lea    eax,[esi+0x1]
   17bb9:	movzx  edx,BYTE PTR [eax]
   17bbc:	push   eax
   17bbd:	inc    edi
   17bbe:	lea    edx,[edx*8+0x18328]
   17bc5:	push   edi
   17bc6:	push   edx
   17bc7:	mov    ecx,ebx
   17bc9:	call   DWORD PTR [edx+0x4]
   17bcc:	pop    edi
   17bcd:	pop    esi
   17bce:	pop    ebx
   17bcf:	ret    0xc
   17bd2:	push   ebx
   17bd3:	push   esi
   17bd4:	mov    esi,DWORD PTR [esp+0x14]
   17bd8:	push   edi
   17bd9:	mov    edi,DWORD PTR [esp+0x14]
   17bdd:	push   esi
   17bde:	push   edi
   17bdf:	push   DWORD PTR [esp+0x18]
   17be3:	mov    ebx,ecx
   17be5:	call   0x17ac0
   17bea:	lea    eax,[esi+0x1]
   17bed:	movzx  edx,BYTE PTR [eax]
   17bf0:	push   eax
   17bf1:	inc    edi
   17bf2:	lea    edx,[edx*8+0x18b30]
   17bf9:	push   edi
   17bfa:	push   edx
   17bfb:	mov    ecx,ebx
   17bfd:	call   DWORD PTR [edx+0x4]
   17c00:	pop    edi
   17c01:	pop    esi
   17c02:	pop    ebx
   17c03:	ret    0xc
   17c06:	mov    DWORD PTR [ecx],0x1
   17c0c:	jmp    0x17b9e
   17c11:	int3   
   17c12:	mov    DWORD PTR [ecx+0x4],0x1
   17c19:	jmp    0x17b9e
   17c1e:	push   ebp
   17c1f:	mov    ebp,esp
   17c21:	sub    esp,0x10
   17c24:	mov    eax,DWORD PTR [ebp+0x10]
   17c27:	test   BYTE PTR [eax+0x1],0x38
   17c2b:	push   eax
   17c2c:	push   DWORD PTR [ebp+0xc]
   17c2f:	jne    0x17c44
   17c31:	mov    DWORD PTR [ebp-0x8],0x5bf6
   17c38:	mov    DWORD PTR [ebp-0x4],0x17ac0
   17c3f:	lea    eax,[ebp-0x8]
   17c42:	jmp    0x17c55
   17c44:	mov    DWORD PTR [ebp-0x10],0x52f6
   17c4b:	mov    DWORD PTR [ebp-0xc],0x17ac0
   17c52:	lea    eax,[ebp-0x10]
   17c55:	push   eax
   17c56:	call   0x17ac0
   17c5b:	leave  
   17c5c:	ret    0xc
   17c5f:	int3   
   17c60:	push   ebp
   17c61:	mov    ebp,esp
   17c63:	sub    esp,0x10
   17c66:	mov    eax,DWORD PTR [ebp+0x10]
   17c69:	test   BYTE PTR [eax+0x1],0x38
   17c6d:	push   eax
   17c6e:	push   DWORD PTR [ebp+0xc]
   17c71:	jne    0x17c86
   17c73:	mov    DWORD PTR [ebp-0x8],0x66f7
   17c7a:	mov    DWORD PTR [ebp-0x4],0x17ac0
   17c81:	lea    eax,[ebp-0x8]
   17c84:	jmp    0x17c97
   17c86:	mov    DWORD PTR [ebp-0x10],0x52f7
   17c8d:	mov    DWORD PTR [ebp-0xc],0x17ac0
   17c94:	lea    eax,[ebp-0x10]
   17c97:	push   eax
   17c98:	call   0x17ac0
   17c9d:	leave  
   17c9e:	ret    0xc
   17ca1:	int3   
   17ca2:	push   ebp
   17ca3:	mov    ebp,esp
   17ca5:	push   ecx
   17ca6:	push   ecx
   17ca7:	mov    edx,DWORD PTR [ebp+0x10]
   17caa:	mov    al,BYTE PTR [edx+0x1]
   17cad:	cmp    al,0x15
   17caf:	je     0x17ccf
   17cb1:	cmp    al,0x25
   17cb3:	je     0x17ccf
   17cb5:	and    al,0x38
   17cb7:	cmp    al,0x10
   17cb9:	je     0x17cc7
   17cbb:	cmp    al,0x18
   17cbd:	je     0x17cc7
   17cbf:	cmp    al,0x20
   17cc1:	je     0x17cc7
   17cc3:	cmp    al,0x28
   17cc5:	jne    0x17cdb
   17cc7:	mov    eax,DWORD PTR [ecx+0x8]
   17cca:	or     DWORD PTR [eax],0xffffffff
   17ccd:	jmp    0x17cdb
   17ccf:	mov    eax,DWORD PTR [edx+0x2]
   17cd2:	mov    eax,DWORD PTR [eax]
   17cd4:	push   esi
   17cd5:	mov    esi,DWORD PTR [ecx+0x8]
   17cd8:	mov    DWORD PTR [esi],eax
   17cda:	pop    esi
   17cdb:	push   edx
   17cdc:	push   DWORD PTR [ebp+0xc]
   17cdf:	lea    eax,[ebp-0x8]
   17ce2:	push   eax
   17ce3:	mov    DWORD PTR [ebp-0x8],0x52ff
   17cea:	mov    DWORD PTR [ebp-0x4],0x17ac0
   17cf1:	call   0x17ac0
   17cf6:	leave  
   17cf7:	ret    0xc
   17cfa:	push   ebp
   17cfb:	mov    ebp,esp
   17cfd:	sub    esp,0x5c
   17d00:	mov    eax,ds:0x1a0cc
   17d05:	push   0x0
   17d07:	push   DWORD PTR [ebp+0x10]
   17d0a:	mov    DWORD PTR [ebp-0x4],eax
   17d0d:	lea    ecx,[ebp-0x5c]
   17d10:	call   0x17a8e
   17d15:	push   DWORD PTR [ebp+0xc]
   17d18:	lea    ecx,[ebp-0x5c]
   17d1b:	push   DWORD PTR [ebp+0x8]
   17d1e:	call   0x179ea
   17d23:	mov    ecx,DWORD PTR [ebp-0x4]
   17d26:	call   0x17d41
   17d2b:	leave  
   17d2c:	ret    0xc
   17d2f:	xor    eax,eax
   17d31:	push   eax
   17d32:	push   eax
   17d33:	push   eax
   17d34:	push   eax
   17d35:	push   0xf7
   17d3a:	call   DWORD PTR ds:0x180d4
   17d40:	int3   
   17d41:	cmp    ecx,DWORD PTR ds:0x1a0cc
   17d47:	jne    0x17d4a
   17d49:	ret    
   17d4a:	jmp    0x17d2f
   17d4f:	int3   
   17d50:	push   0x17d9c
   17d55:	mov    eax,fs:0x0
   17d5b:	push   eax
   17d5c:	mov    eax,DWORD PTR [esp+0x10]
   17d60:	mov    DWORD PTR [esp+0x10],ebp
   17d64:	lea    ebp,[esp+0x10]
   17d68:	sub    esp,eax
   17d6a:	push   ebx
   17d6b:	push   esi
   17d6c:	push   edi
   17d6d:	mov    eax,DWORD PTR [ebp-0x8]
   17d70:	mov    DWORD PTR [ebp-0x18],esp
   17d73:	push   eax
   17d74:	mov    eax,DWORD PTR [ebp-0x4]
   17d77:	mov    DWORD PTR [ebp-0x4],0xffffffff
   17d7e:	mov    DWORD PTR [ebp-0x8],eax
   17d81:	lea    eax,[ebp-0x10]
   17d84:	mov    fs:0x0,eax
   17d8a:	ret    
   17d8b:	mov    ecx,DWORD PTR [ebp-0x10]
   17d8e:	mov    DWORD PTR fs:0x0,ecx
   17d95:	pop    ecx
   17d96:	pop    edi
   17d97:	pop    esi
   17d98:	pop    ebx
   17d99:	leave  
   17d9a:	push   ecx
   17d9b:	ret    
   17d9c:	jmp    DWORD PTR ds:0x180d8
   17da2:	jmp    DWORD PTR ds:0x18010
   17da8:	jmp    DWORD PTR ds:0x18048
   17dae:	jmp    DWORD PTR ds:0x18080
   17db4:	jmp    DWORD PTR ds:0x18088
   17dba:	jmp    DWORD PTR ds:0x1808c
   17dc0:	jmp    DWORD PTR ds:0x180bc

Disassembly of section INIT:

0001b000 <INIT>:
   1b000:	mov    eax,ds:0x1a0cc
   1b005:	test   eax,eax
   1b007:	mov    ecx,0xbb40e64e
   1b00c:	je     0x1b012
   1b00e:	cmp    eax,ecx
   1b010:	jne    0x1b02b
   1b012:	mov    eax,ds:0x180d0
   1b017:	mov    eax,DWORD PTR [eax]
   1b019:	xor    eax,0x1a0cc
   1b01e:	mov    ds:0x1a0cc,eax
   1b023:	jne    0x1b02b
   1b025:	mov    DWORD PTR ds:0x1a0cc,ecx
   1b02b:	jmp    0x17176
   1b030:	js     0x1afe2
	...
   1b03a:	add    BYTE PTR [eax],al
   1b03c:	jo     0x1aff3
   1b03e:	add    BYTE PTR [eax],al
   1b040:	or     al,0x80
   1b042:	add    BYTE PTR [eax],al
   1b044:	ins    BYTE PTR es:[edi],dx
   1b045:	mov    al,0x0
	...
   1b04f:	add    BYTE PTR [edx+0xb5],bl
   1b055:	add    BYTE PTR [eax],0x0
	...
   1b06c:	jle    0x1b023
   1b06e:	add    BYTE PTR [eax],al
   1b070:	mov    WORD PTR [ebp+0x0],?
   1b076:	add    BYTE PTR [eax],al
   1b078:	js     0x1b02b
   1b07a:	add    BYTE PTR [eax],al
   1b07c:	nop
   1b07d:	mov    cl,0x0
   1b07f:	add    BYTE PTR [ecx+esi*4-0x4e480000],bl
   1b086:	add    BYTE PTR [eax],al
   1b088:	into   
   1b089:	mov    cl,0x0
   1b08b:	add    dh,ah
   1b08d:	mov    cl,0x0
   1b08f:	add    dh,dh
   1b091:	mov    cl,0x0
   1b093:	add    BYTE PTR [esi],cl
   1b095:	mov    dl,0x0
   1b097:	add    BYTE PTR [edx],ah
   1b099:	mov    dl,0x0
   1b09b:	add    BYTE PTR [edx],bh
   1b09d:	mov    dl,0x0
   1b09f:	add    BYTE PTR [esi-0x4e],dl
   1b0a2:	add    BYTE PTR [eax],al
   1b0a4:	pusha  
   1b0a5:	mov    dl,0x0
   1b0a7:	add    BYTE PTR [edx-0x4e],bh
   1b0aa:	add    BYTE PTR [eax],al
   1b0ac:	mov    WORD PTR [edx-0x4d5c0000],?
   1b0b2:	add    BYTE PTR [eax],al
   1b0b4:	mov    dh,0xb2
   1b0b6:	add    BYTE PTR [eax],al
   1b0b8:	(bad)  
   1b0b9:	mov    dl,0x0
   1b0bb:	add    al,ch
   1b0bd:	mov    dl,0x0
   1b0bf:	add    dl,dh
   1b0c1:	mov    dl,0x0
   1b0c3:	add    BYTE PTR [ebx+esi*4],al
   1b0c6:	add    BYTE PTR [eax],al
   1b0c8:	and    dh,BYTE PTR [ebx-0x4cc40000]
   1b0ce:	add    BYTE PTR [eax],al
   1b0d0:	dec    esp
   1b0d1:	mov    bl,0x0
   1b0d3:	add    BYTE PTR [esi-0x4d],dl
   1b0d6:	add    BYTE PTR [eax],al
   1b0d8:	jb     0x1b08d
   1b0da:	add    BYTE PTR [eax],al
   1b0dc:	outs   dx,BYTE PTR ds:[esi]
   1b0dd:	mov    cl,0x0
   1b0df:	add    BYTE PTR [esi-0x67ffff4d],cl
   1b0e5:	mov    bl,0x0
   1b0e7:	add    BYTE PTR [edx-0x53ffff4d],ah
   1b0ed:	mov    bl,0x0
   1b0ef:	add    BYTE PTR [esi-0x25ffff4d],bh
   1b0f5:	mov    bl,0x0
   1b0f7:	add    al,bh
   1b0f9:	mov    bl,0x0
   1b0fb:	add    BYTE PTR [edx],bl
   1b0fd:	mov    ah,0x0
   1b0ff:	add    BYTE PTR [esp+esi*4],ch
   1b102:	add    BYTE PTR [eax],al
   1b104:	cmp    BYTE PTR [eax+eax*1+0xb44800],dh
   1b10b:	add    BYTE PTR [esi-0x4c],bl
   1b10e:	add    BYTE PTR [eax],al
   1b110:	jbe    0x1b0c6
   1b112:	add    BYTE PTR [eax],al
   1b114:	mov    dh,BYTE PTR [eax+eax*1+0xb49e00]
   1b11b:	add    BYTE PTR [esi-0x37ffff4c],dh
   1b121:	mov    ah,0x0
   1b123:	add    ah,dl
   1b125:	mov    ah,0x0
   1b127:	add    dh,ch
   1b129:	mov    ah,0x0
   1b12b:	add    BYTE PTR [esi*4-0x4ae60000],al
   1b132:	add    BYTE PTR [eax],al
   1b134:	sub    al,0xb5
   1b136:	add    BYTE PTR [eax],al
   1b138:	cmp    dh,BYTE PTR [ebp-0x4aae0000]
   1b13e:	add    BYTE PTR [eax],al
   1b140:	pusha  
   1b141:	mov    ch,0x0
   1b143:	add    BYTE PTR [edx-0x4f],bl
   1b146:	add    BYTE PTR [eax],al
   1b148:	push   eax
   1b149:	mov    cl,0x0
   1b14b:	add    BYTE PTR [eax],al
   1b14d:	add    BYTE PTR [eax],al
   1b14f:	add    dh,ch
   1b151:	add    eax,0x6e736377
   1b156:	arpl   WORD PTR [ebp+0x70],bp
   1b159:	add    BYTE PTR [ebx+0x78655f05],ch
   1b15f:	arpl   WORD PTR [ebp+0x70],sp
   1b162:	je     0x1b1c3
   1b164:	push   0x6c646e61
   1b169:	gs jb  0x1b19f
   1b16c:	add    BYTE PTR [eax],al
   1b16e:	sub    eax,DWORD PTR ds:0x6c43775a
   1b174:	outs   dx,DWORD PTR ds:[esi]
   1b175:	jae    0x1b1dc
   1b177:	add    BYTE PTR [ebx+eax*1+0x4f],cl
   1b17b:	bound  esp,QWORD PTR [esi+0x44]
   1b17e:	gs jb  0x1b1e6
   1b181:	data16 gs jb 0x1b1ea
   1b185:	outs   dx,BYTE PTR ds:[esi]
   1b186:	arpl   WORD PTR [ebp+0x4f],sp
   1b189:	bound  ebp,QWORD PTR [edx+0x65]
   1b18c:	arpl   WORD PTR [eax+eax*1+0x0],si
   1b190:	xor    DWORD PTR [eax],eax
   1b192:	inc    esp
   1b193:	bound  esp,QWORD PTR [edi+0x50]
   1b196:	jb     0x1b201
   1b198:	outs   dx,BYTE PTR ds:[esi]
   1b199:	je     0x1b19b
   1b19b:	add    BYTE PTR [ebx+eax*1+0x4f],al
   1b19f:	bound  edx,QWORD PTR [edx+0x65]
   1b1a2:	data16 gs jb 0x1b20b
   1b1a6:	outs   dx,BYTE PTR ds:[esi]
   1b1a7:	arpl   WORD PTR [ebp+0x4f],sp
   1b1aa:	bound  ebp,QWORD PTR [edx+0x65]
   1b1ad:	arpl   WORD PTR [edx+eax*2+0x79],si
   1b1b1:	dec    eax
   1b1b2:	popa   
   1b1b3:	outs   dx,BYTE PTR ds:[esi]
   1b1b4:	fs ins BYTE PTR es:[edi],dx
   1b1b6:	add    BYTE PTR gs:[eax+0x3],al
   1b1ba:	dec    edi
   1b1bb:	bound  ecx,QWORD PTR [edi+0x70]
   1b1be:	outs   dx,BYTE PTR gs:[esi]
   1b1c0:	dec    edi
   1b1c1:	bound  ebp,QWORD PTR [edx+0x65]
   1b1c4:	arpl   WORD PTR [edx+eax*2+0x79],si
   1b1c8:	dec    esi
   1b1c9:	popa   
   1b1ca:	ins    DWORD PTR es:[edi],dx
   1b1cb:	add    BYTE PTR gs:[eax],al
   1b1ce:	cmp    eax,DWORD PTR [edx+edx*2]
   1b1d1:	je     0x1b23f
   1b1d3:	dec    ecx
   1b1d4:	outs   dx,BYTE PTR ds:[esi]
   1b1d5:	imul   esi,DWORD PTR [ebp+edx*2+0x6e],0x646f6369
   1b1dd:	gs push ebx
   1b1df:	je     0x1b253
   1b1e1:	imul   ebp,DWORD PTR [esi+0x67],0x760000
   1b1e8:	inc    ebp
   1b1e9:	js     0x1b23d
   1b1eb:	popa   
   1b1ec:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   1b1f3:	jne    0x1b268
   1b1f5:	add    BYTE PTR [edx+0x0],al
   1b1f8:	inc    ebp
   1b1f9:	js     0x1b23c
   1b1fb:	ins    BYTE PTR es:[edi],dx
   1b1fc:	ins    BYTE PTR es:[edi],dx
   1b1fd:	outs   dx,DWORD PTR ds:[esi]
   1b1fe:	arpl   WORD PTR [ecx+0x74],sp
   1b201:	gs push eax
   1b203:	outs   dx,DWORD PTR ds:[esi]
   1b204:	outs   dx,DWORD PTR ds:[esi]
   1b205:	ins    BYTE PTR es:[edi],dx
   1b206:	push   edi
   1b207:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x4f006761
   1b20f:	add    BYTE PTR [ebp+0x78],al
   1b212:	inc    esi
   1b213:	jb     0x1b27a
   1b215:	gs push eax
   1b217:	outs   dx,DWORD PTR ds:[esi]
   1b218:	outs   dx,DWORD PTR ds:[esi]
   1b219:	ins    BYTE PTR es:[edi],dx
   1b21a:	push   edi
   1b21b:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xe4006761
   1b223:	add    edx,DWORD PTR [edx+0x74]
   1b226:	ins    BYTE PTR es:[edi],dx
   1b227:	inc    ebx
   1b228:	outs   dx,DWORD PTR ds:[esi]
   1b229:	jo     0x1b2a4
   1b22b:	push   ebp
   1b22c:	outs   dx,BYTE PTR ds:[esi]
   1b22d:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   1b234:	jb     0x1b29f
   1b236:	outs   dx,BYTE PTR ds:[esi]
   1b237:	add    BYTE PTR [bx+si],al
   1b23a:	ins    BYTE PTR es:[edi],dx
   1b23b:	add    eax,0x7551775a
   1b240:	gs jb  0x1b2bc
   1b243:	dec    ecx
   1b244:	outs   dx,BYTE PTR ds:[esi]
   1b245:	outs   dx,WORD PTR ds:[esi]
   1b247:	jb     0x1b2b6
   1b249:	popa   
   1b24a:	je     0x1b2b5
   1b24c:	outs   dx,DWORD PTR ds:[esi]
   1b24d:	outs   dx,BYTE PTR ds:[esi]
   1b24e:	push   eax
   1b24f:	jb     0x1b2c0
   1b251:	arpl   WORD PTR [ebp+0x73],sp
   1b254:	jae    0x1b256
   1b256:	in     al,dx
   1b257:	add    eax,0x6c736377
   1b25c:	outs   dx,BYTE PTR gs:[esi]
   1b25e:	add    BYTE PTR [eax],al
   1b260:	fiadd  DWORD PTR [ebx]
   1b262:	push   edx
   1b263:	je     0x1b2d1
   1b265:	inc    ebx
   1b266:	outs   dx,DWORD PTR ds:[esi]
   1b267:	ins    DWORD PTR es:[edi],dx
   1b268:	jo     0x1b2cb
   1b26a:	jb     0x1b2d1
   1b26c:	push   ebp
   1b26d:	outs   dx,BYTE PTR ds:[esi]
   1b26e:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   1b275:	jb     0x1b2e0
   1b277:	outs   dx,BYTE PTR ds:[esi]
   1b278:	add    BYTE PTR [bx+si+0x2],bl
   1b27c:	dec    ebx
   1b27d:	gs push edx
   1b27f:	gs ins BYTE PTR es:[edi],dx
   1b281:	gs popa 
   1b283:	jae    0x1b2ea
   1b285:	dec    ebp
   1b286:	jne    0x1b2fc
   1b288:	gs js  0x1b28b
   1b28b:	add    BYTE PTR [esi+0x57654b02],al
   1b291:	popa   
   1b292:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   1b29a:	ins    BYTE PTR es:[di],dx
   1b29c:	gs dec edi
   1b29e:	bound  ebp,QWORD PTR [edx+0x65]
   1b2a1:	arpl   WORD PTR [eax+eax*1+0x5e],si
   1b2a5:	add    DWORD PTR [ecx+0x6f],ecx
   1b2a8:	inc    esp
   1b2a9:	gs ins BYTE PTR es:[edi],dx
   1b2ab:	gs je  0x1b313
   1b2ae:	inc    esp
   1b2af:	gs jbe 0x1b31b
   1b2b2:	arpl   WORD PTR [ebp+0x0],sp
   1b2b5:	add    BYTE PTR ds:0x6c745204,dh
   1b2bb:	dec    ecx
   1b2bc:	ins    DWORD PTR es:[edi],dx
   1b2bd:	popa   
   1b2be:	addr16 gs inc esp
   1b2c1:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
   1b2c8:	jns    0x1b30f
   1b2ca:	outs   dx,BYTE PTR ds:[esi]
   1b2cb:	je     0x1b33f
   1b2cd:	jns    0x1b323
   1b2cf:	outs   dx,DWORD PTR ds:[esi]
   1b2d0:	inc    esp
   1b2d1:	popa   
   1b2d2:	je     0x1b335
   1b2d4:	add    BYTE PTR [eax],al
   1b2d6:	adc    BYTE PTR [edx],al
   1b2d8:	dec    ebx
   1b2d9:	gs inc esp
   1b2db:	gs je  0x1b33f
   1b2de:	arpl   WORD PTR [eax+0x50],bp
   1b2e1:	jb     0x1b352
   1b2e3:	arpl   WORD PTR [ebp+0x73],sp
   1b2e6:	jae    0x1b2e8
   1b2e8:	out    0x5,eax
   1b2ea:	ja     0x1b34f
   1b2ec:	jae    0x1b351
   1b2ee:	popa   
   1b2ef:	je     0x1b2f1
   1b2f1:	add    BYTE PTR ds:0x41654b02,al
   1b2f7:	je     0x1b36d
   1b2f9:	popa   
   1b2fa:	arpl   WORD PTR [eax+0x50],bp
   1b2fd:	jb     0x1b36e
   1b2ff:	arpl   WORD PTR [ebp+0x73],sp
   1b302:	jae    0x1b304
   1b304:	call   0x6f6f:0x4c735003
   1b30b:	imul   esi,DWORD PTR [ebp+0x70],0x50
   1b30f:	jb     0x1b380
   1b311:	arpl   WORD PTR [ebp+0x73],sp
   1b314:	jae    0x1b358
   1b316:	jns    0x1b368
   1b318:	jb     0x1b389
   1b31a:	arpl   WORD PTR [ebp+0x73],sp
   1b31d:	jae    0x1b368
   1b31f:	add    BYTE PTR fs:[eax],al
   1b322:	es add eax,0x6c41775a
   1b328:	ins    BYTE PTR es:[edi],dx
   1b329:	outs   dx,DWORD PTR ds:[esi]
   1b32a:	arpl   WORD PTR [ecx+0x74],sp
   1b32d:	gs push esi
   1b32f:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   1b336:	gs ins DWORD PTR es:[edi],dx
   1b338:	outs   dx,DWORD PTR ds:[esi]
   1b339:	jb     0x1b3b4
   1b33b:	add    BYTE PTR [esi+0x5],dl
   1b33e:	pop    edx
   1b33f:	ja     0x1b390
   1b341:	jo     0x1b3a8
   1b343:	outs   dx,BYTE PTR ds:[esi]
   1b344:	push   eax
   1b345:	jb     0x1b3b6
   1b347:	arpl   WORD PTR [ebp+0x73],sp
   1b34a:	jae    0x1b34c
   1b34c:	jmp    0x7063:0x73637705
   1b353:	jns    0x1b355
   1b355:	add    BYTE PTR [ebp+0x5],ch
   1b358:	pop    edx
   1b359:	ja     0x1b3ac
   1b35b:	jne    0x1b3c2
   1b35d:	jb     0x1b3d8
   1b35f:	dec    ecx
   1b360:	outs   dx,BYTE PTR ds:[esi]
   1b361:	outs   dx,WORD PTR ds:[esi]
   1b363:	jb     0x1b3d2
   1b365:	popa   
   1b366:	je     0x1b3d1
   1b368:	outs   dx,DWORD PTR ds:[esi]
   1b369:	outs   dx,BYTE PTR ds:[esi]
   1b36a:	push   esp
   1b36b:	push   0x64616572
   1b370:	add    BYTE PTR [eax],al
   1b372:	jne    0x1b379
   1b374:	pop    edx
   1b375:	ja     0x1b3c8
   1b377:	jne    0x1b3de
   1b379:	jb     0x1b3f4
   1b37b:	push   ebx
   1b37c:	jns    0x1b3f1
   1b37e:	je     0x1b3e5
   1b380:	ins    DWORD PTR es:[edi],dx
   1b381:	dec    ecx
   1b382:	outs   dx,BYTE PTR ds:[esi]
   1b383:	outs   dx,WORD PTR ds:[esi]
   1b385:	jb     0x1b3f4
   1b387:	popa   
   1b388:	je     0x1b3f3
   1b38a:	outs   dx,DWORD PTR ds:[esi]
   1b38b:	outs   dx,BYTE PTR ds:[esi]
   1b38c:	add    BYTE PTR [eax],al
   1b38e:	into   
   1b38f:	add    eax,0x6d6d656d
   1b394:	outs   dx,DWORD PTR ds:[esi]
   1b395:	jbe    0x1b3fc
   1b397:	add    cl,ch
   1b399:	add    eax,0x63736377
   1b39e:	ins    DWORD PTR es:[edi],dx
   1b39f:	jo     0x1b3a1
   1b3a1:	add    bh,ch
   1b3a3:	add    eax,0x6e736377
   1b3a8:	arpl   WORD PTR [eax+0x79],si
   1b3ab:	add    BYTE PTR [edi+0x6f6c5f05],ch
   1b3b1:	arpl   WORD PTR [ecx+0x6c],sp
   1b3b4:	pop    edi
   1b3b5:	jne    0x1b425
   1b3b7:	ja     0x1b422
   1b3b9:	outs   dx,BYTE PTR ds:[esi]
   1b3ba:	xor    al,BYTE PTR fs:[eax]
   1b3bd:	add    BYTE PTR [ecx+0x2],ch
   1b3c0:	dec    ebx
   1b3c1:	gs push ebx
   1b3c3:	gs jb  0x1b43c
   1b3c6:	imul   esp,DWORD PTR [ebx+0x65],0x63736544
   1b3cd:	jb     0x1b438
   1b3cf:	jo     0x1b445
   1b3d1:	outs   dx,DWORD PTR ds:[esi]
   1b3d2:	jb     0x1b428
   1b3d4:	popa   
   1b3d5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
   1b3d9:	add    BYTE PTR [ebp+0x53735003],ch
   1b3df:	gs je  0x1b42e
   1b3e2:	outs   dx,DWORD PTR ds:[esi]
   1b3e3:	popa   
   1b3e4:	fs dec ecx
   1b3e6:	ins    DWORD PTR es:[edi],dx
   1b3e7:	popa   
   1b3e8:	addr16 gs dec esi
   1b3eb:	outs   dx,DWORD PTR ds:[esi]
   1b3ec:	je     0x1b457
   1b3ee:	data16 jns 0x1b443
   1b3f1:	outs   dx,DWORD PTR ds:[esi]
   1b3f2:	jne    0x1b468
   1b3f4:	imul   ebp,DWORD PTR [esi+0x65],0x5003a900
   1b3fb:	jae    0x1b450
   1b3fd:	gs je  0x1b443
   1b400:	jb     0x1b467
   1b402:	popa   
   1b403:	je     0x1b46a
   1b405:	push   eax
   1b406:	jb     0x1b477
   1b408:	arpl   WORD PTR [ebp+0x73],sp
   1b40b:	jae    0x1b45b
   1b40d:	outs   dx,DWORD PTR ds:[esi]
   1b40e:	je     0x1b479
   1b410:	data16 jns 0x1b465
   1b413:	outs   dx,DWORD PTR ds:[esi]
   1b414:	jne    0x1b48a
   1b416:	imul   ebp,DWORD PTR [esi+0x65],0x5a057600
   1b41d:	ja     0x1b470
   1b41f:	jne    0x1b486
   1b421:	jb     0x1b49c
   1b423:	push   esi
   1b424:	popa   
   1b425:	ins    BYTE PTR es:[edi],dx
   1b426:	jne    0x1b48d
   1b428:	dec    ebx
   1b429:	gs jns 0x1b42c
   1b42c:	push   ebp
   1b42d:	add    eax,0x704f775a
   1b432:	outs   dx,BYTE PTR gs:[esi]
   1b434:	dec    ebx
   1b435:	gs jns 0x1b438
   1b438:	pop    DWORD PTR ds:0x6553775a
   1b43e:	je     0x1b496
   1b440:	popa   
   1b441:	ins    BYTE PTR es:[edi],dx
   1b442:	jne    0x1b4a9
   1b444:	dec    ebx
   1b445:	gs jns 0x1b448
   1b448:	icebp  
   1b449:	add    DWORD PTR [ecx+0x6f],ecx
   1b44c:	inc    bx
   1b44e:	outs   dx,DWORD PTR ds:[esi]
   1b44f:	ins    DWORD PTR es:[edi],dx
   1b450:	jo     0x1b4be
   1b452:	gs je  0x1b4ba
   1b455:	push   edx
   1b456:	gs jno 0x1b4ce
   1b459:	gs jae 0x1b4d0
   1b45c:	add    BYTE PTR [eax],al
   1b45e:	out    dx,eax
   1b45f:	add    al,0x53
   1b461:	gs dec ecx
   1b463:	ins    DWORD PTR es:[edi],dx
   1b464:	jo     0x1b4cb
   1b466:	jb     0x1b4db
   1b468:	outs   dx,DWORD PTR ds:[esi]
   1b469:	outs   dx,BYTE PTR ds:[esi]
   1b46a:	popa   
   1b46b:	je     0x1b4d2
   1b46d:	inc    ebx
   1b46e:	ins    BYTE PTR es:[edi],dx
   1b46f:	imul   esp,DWORD PTR [ebp+0x6e],0x784574
   1b476:	ss add al,0x52
   1b479:	je     0x1b4e7
   1b47b:	dec    ecx
   1b47c:	ins    DWORD PTR es:[edi],dx
   1b47d:	popa   
   1b47e:	addr16 gs dec esi
   1b481:	je     0x1b4cb
   1b483:	gs popa 
   1b485:	fs gs jb 0x1b489
   1b489:	add    BYTE PTR [edx+eax*1],ch
   1b48c:	dec    ebx
   1b48d:	gs dec ecx
   1b48f:	outs   dx,BYTE PTR ds:[esi]
   1b490:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   1b498:	dec    ebp
   1b499:	jne    0x1b50f
   1b49b:	gs js  0x1b49e
   1b49e:	push   esp
   1b49f:	add    DWORD PTR [ecx+0x6f],ecx
   1b4a2:	inc    ebx
   1b4a3:	jb     0x1b50a
   1b4a5:	popa   
   1b4a6:	je     0x1b50d
   1b4a8:	push   ebx
   1b4a9:	jns    0x1b518
   1b4ab:	bound  ebp,QWORD PTR [edi+0x6c]
   1b4ae:	imul   esp,DWORD PTR [ebx+0x4c],0x6b6e69
   1b4b5:	add    BYTE PTR [ebx+0x1],cl
   1b4b8:	dec    ecx
   1b4b9:	outs   dx,DWORD PTR ds:[esi]
   1b4ba:	inc    ebx
   1b4bb:	jb     0x1b522
   1b4bd:	popa   
   1b4be:	je     0x1b525
   1b4c0:	inc    esp
   1b4c1:	gs jbe 0x1b52d
   1b4c4:	arpl   WORD PTR [ebp+0x0],sp
   1b4c7:	add    bh,bl
   1b4c9:	add    eax,0x72707773
   1b4ce:	imul   ebp,DWORD PTR [esi+0x74],0xe6000066
   1b4d5:	add    al,0x53
   1b4d7:	gs inc ebx
   1b4d9:	jb     0x1b540
   1b4db:	popa   
   1b4dc:	je     0x1b543
   1b4de:	inc    ebx
   1b4df:	ins    BYTE PTR es:[edi],dx
   1b4e0:	imul   esp,DWORD PTR [ebp+0x6e],0x63655374
   1b4e7:	jne    0x1b55b
   1b4e9:	imul   esi,DWORD PTR [ecx+edi*2+0x0],0x4b021900
   1b4f1:	gs inc edi
   1b4f3:	gs je  0x1b539
   1b4f6:	jne    0x1b56a
   1b4f8:	jb     0x1b55f
   1b4fa:	outs   dx,BYTE PTR ds:[esi]
   1b4fb:	je     0x1b551
   1b4fd:	push   0x64616572
   1b502:	add    BYTE PTR [eax],al
   1b504:	dec    ebp
   1b505:	add    eax,0x614d775a
   1b50a:	jo     0x1b562
   1b50c:	imul   esp,DWORD PTR [ebp+0x77],0x6553664f
   1b513:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
   1b517:	outs   dx,BYTE PTR ds:[esi]
   1b518:	add    BYTE PTR [eax],al
   1b51a:	xor    eax,DWORD PTR ds:0x7243775a
   1b520:	gs popa 
   1b522:	je     0x1b589
   1b524:	push   ebx
   1b525:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
   1b52a:	outs   dx,BYTE PTR ds:[esi]
   1b52b:	add    BYTE PTR [ebx+0x5],dl
   1b52e:	pop    edx
   1b52f:	ja     0x1b580
   1b531:	jo     0x1b598
   1b533:	outs   dx,BYTE PTR ds:[esi]
   1b534:	inc    esi
   1b535:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a059600
   1b53d:	ja     0x1b594
   1b53f:	outs   dx,BYTE PTR ds:[esi]
   1b540:	ins    DWORD PTR es:[edi],dx
   1b541:	popa   
   1b542:	jo     0x1b59a
   1b544:	imul   esp,DWORD PTR [ebp+0x77],0x6553664f
   1b54b:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
   1b54f:	outs   dx,BYTE PTR ds:[esi]
   1b550:	add    BYTE PTR [eax],al
   1b552:	jg     0x1b556
   1b554:	dec    ebx
   1b555:	gs push esp
   1b557:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   1b55e:	je     0x1b560
   1b560:	pop    es
   1b561:	add    cl,BYTE PTR [ebx+0x65]
   1b564:	inc    edx
   1b565:	jne    0x1b5ce
   1b567:	inc    ebx
   1b568:	push   0x456b6365
   1b56d:	js     0x1b56f
   1b56f:	add    BYTE PTR [esi+0x74],ch
   1b572:	outs   dx,DWORD PTR ds:[esi]
   1b573:	jae    0x1b5e0
   1b575:	jb     0x1b5e5
   1b577:	ins    BYTE PTR es:[edi],dx
   1b578:	cs gs js 0x1b5e1
   1b57c:	add    BYTE PTR [eax],al
   1b57e:	dec    ebp
   1b57f:	add    BYTE PTR [ebx+0x66],cl
   1b582:	dec    esp
   1b583:	outs   dx,DWORD PTR ds:[esi]
   1b584:	ja     0x1b5eb
   1b586:	jb     0x1b5d1
   1b588:	jb     0x1b5fb
   1b58a:	ins    BYTE PTR es:[edi],dx
   1b58b:	add    BYTE PTR [esi+0x0],cl
   1b58e:	dec    ebx
   1b58f:	push   dx
   1b591:	popa   
   1b592:	imul   esi,DWORD PTR [ebx+0x65],0x6c717249
   1b599:	add    BYTE PTR [eax+0x41],cl
   1b59c:	dec    esp
   1b59d:	cs fs ins BYTE PTR es:[edi],dx
   1b5a0:	ins    BYTE PTR es:[edi],dx
	...
