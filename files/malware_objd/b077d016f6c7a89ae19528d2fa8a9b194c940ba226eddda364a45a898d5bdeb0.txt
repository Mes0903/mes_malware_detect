
b077d016f6c7a89ae19528d2fa8a9b194c940ba226eddda364a45a898d5bdeb0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x10c
  401009:	push   ebx
  40100a:	or     DWORD PTR ds:0x428010,0x1d4c
  401014:	push   edi
  401015:	lea    eax,[ebp-0xac]
  40101b:	add    DWORD PTR ds:0x427008,0x428014
  401025:	push   eax
  401026:	sub    DWORD PTR ds:0x42a010,0x429008
  401030:	push   0xf
  401032:	xor    DWORD PTR ds:0x429014,0x4b08
  40103c:	call   DWORD PTR ds:0x42cf09
  401042:	sub    DWORD PTR ds:0x428004,edi
  401048:	mov    ebx,DWORD PTR ds:0x42cf01
  40104e:	mov    DWORD PTR ds:0x42700c,0x1dcb
  401058:	push   0x42c489
  40105d:	add    DWORD PTR ds:0x428004,0x7b86
  401067:	xor    edi,edi
  401069:	inc    edi
  40106a:	push   edi
  40106b:	push   edi
  40106c:	call   ebx
  40106e:	sub    DWORD PTR ds:0x428000,0xf2c
  401078:	test   eax,eax
  40107a:	mov    DWORD PTR ds:0x426004,0x42d3
  401084:	lea    eax,[ebp-0x64]
  401087:	mov    DWORD PTR ds:0x426004,0x559
  401091:	je     0x4010a8
  401097:	push   eax
  401098:	push   0x42c4a9
  40109d:	call   DWORD PTR ds:0x42cf1d
  4010a3:	jmp    0x4029a8
  4010a8:	xor    DWORD PTR ds:0x426004,0x7e86
  4010b2:	push   esi
  4010b3:	mov    esi,DWORD PTR ds:0x42cf1d
  4010b9:	add    DWORD PTR ds:0x42701c,0x21f7
  4010c3:	push   eax
  4010c4:	or     DWORD PTR ds:0x426014,0x427008
  4010ce:	push   0x42c4c5
  4010d3:	mov    DWORD PTR ds:0x426020,0x75f5
  4010dd:	call   esi
  4010df:	test   eax,eax
  4010e1:	je     0x4010fb
  4010e7:	push   0x42c4dd
  4010ec:	mov    DWORD PTR ds:0x42a000,0x63c4
  4010f6:	jmp    0x40298d
  4010fb:	push   0x42c505
  401100:	sbb    DWORD PTR ds:0x429018,0x427014
  40110a:	push   edi
  40110b:	xor    DWORD PTR ds:0x42800c,0x4f99
  401115:	push   edi
  401116:	and    DWORD PTR ds:0x42700c,0x1c70
  401120:	call   ebx
  401122:	test   eax,eax
  401124:	mov    DWORD PTR ds:0x42a004,0x77ba
  40112e:	lea    eax,[ebp-0x64]
  401131:	mov    DWORD PTR ds:0x426024,0x6b26
  40113b:	push   eax
  40113c:	mov    DWORD PTR ds:0x42901c,0x7511
  401146:	je     0x40116a
  40114c:	mov    DWORD PTR ds:0x42701c,0x56f5
  401156:	push   0x42c525
  40115b:	mov    DWORD PTR ds:0x426010,0x4582
  401165:	jmp    0x402972
  40116a:	adc    DWORD PTR ds:0x429014,0x27e8
  401174:	push   0x42c541
  401179:	sub    DWORD PTR ds:0x428010,0x42800c
  401183:	call   esi
  401185:	add    DWORD PTR ds:0x429000,0x12c6
  40118f:	test   eax,eax
  401191:	je     0x4011a1
  401197:	push   0x42c559
  40119c:	jmp    0x40298d
  4011a1:	sbb    ecx,eax
  4011a3:	mov    DWORD PTR [ebp-0x10],0x0
  4011aa:	xor    esi,DWORD PTR ds:0x428004
  4011b0:	mov    eax,DWORD PTR [ebp-0x34]
  4011b3:	mov    DWORD PTR ds:0x42800c,0x1b
  4011bd:	cmp    DWORD PTR ds:0x42800c,0x0
  4011c4:	je     0x4011fb
  4011ca:	cmp    DWORD PTR ds:0x42800c,0x29
  4011d1:	jge    0x4011fb
  4011d7:	jmp    0x4011e7
  4011dc:	push   0x0
  4011de:	push   DWORD PTR [ebp-0x1c]
  4011e1:	call   DWORD PTR ds:0x42cec9
  4011e7:	xor    edi,edi
  4011e9:	or     edi,DWORD PTR ds:0x42800c
  4011ef:	dec    edi
  4011f0:	mov    DWORD PTR ds:0x42800c,edi
  4011f6:	jmp    0x4011bd
  4011fb:	mov    DWORD PTR [ebp-0x34],eax
  4011fe:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  401205:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  40120c:	and    DWORD PTR ds:0x42600c,0x0
  401216:	jmp    0x401228
  40121b:	mov    esi,DWORD PTR ds:0x42600c
  401221:	inc    esi
  401222:	mov    DWORD PTR ds:0x42600c,esi
  401228:	cmp    DWORD PTR ds:0x42600c,0x18
  40122f:	jae    0x40125c
  401235:	cmp    DWORD PTR ds:0x42600c,0x27
  40123c:	ja     0x40125c
  401242:	jmp    0x401257
  401247:	push   0x42c041
  40124c:	push   0x42c055
  401251:	call   DWORD PTR ds:0x42cef9
  401257:	jmp    0x40121b
  40125c:	lea    eax,[ebp-0x48]
  40125f:	dec    edi
  401260:	mov    DWORD PTR [ebp-0x30],eax
  401263:	lea    eax,[ebp-0x40]
  401266:	mov    DWORD PTR [ebp-0x18],eax
  401269:	and    edi,0x7fbb
  40126f:	mov    eax,ds:0x42c379
  401274:	and    edi,edi
  401276:	mov    eax,DWORD PTR [eax+0x1c8]
  40127c:	mov    eax,DWORD PTR [eax]
  40127e:	mov    ecx,DWORD PTR [ebp-0x18]
  401281:	movzx  esi,WORD PTR ds:0x42601c
  401288:	sub    esi,DWORD PTR ds:0x42901c
  40128e:	mov    DWORD PTR ds:0x42601c,esi
  401294:	mov    esi,0x751089f
  401299:	dec    edi
  40129a:	xor    eax,esi
  40129c:	adc    DWORD PTR ds:0x42600c,ecx
  4012a2:	mov    edi,0x3272e6
  4012a7:	sub    DWORD PTR ds:0x426018,0x429014
  4012b1:	add    eax,edi
  4012b3:	mov    DWORD PTR ds:0x427010,0x232c
  4012bd:	mov    DWORD PTR [ecx],eax
  4012bf:	mov    eax,ds:0x42cd9d
  4012c4:	cmp    eax,0x423ccaf7
  4012c9:	jne    0x40132c
  4012cf:	and    DWORD PTR ds:0x427000,0x55d4
  4012d9:	mov    eax,DWORD PTR [ebp-0x8]
  4012dc:	xor    DWORD PTR ds:0x426004,0x33ef
  4012e6:	mov    ecx,DWORD PTR ds:0x42c379
  4012ec:	mov    ecx,DWORD PTR [ecx+0x198]
  4012f2:	add    DWORD PTR ds:0x42a00c,0x429018
  4012fc:	xor    eax,esi
  4012fe:	add    eax,edi
  401300:	mov    DWORD PTR [ecx],eax
  401302:	add    DWORD PTR ds:0x428014,0x426010
  40130c:	mov    eax,DWORD PTR [ebp-0x8]
  40130f:	and    DWORD PTR ds:0x428018,0x42a018
  401319:	xor    eax,esi
  40131b:	and    DWORD PTR ds:0x428000,0x42701c
  401325:	add    eax,edi
  401327:	mov    ds:0x42cd9d,eax
  40132c:	mov    eax,ds:0x42c379
  401331:	mov    eax,DWORD PTR [eax+0x18c]
  401337:	sub    DWORD PTR ds:0x42a00c,0x426024
  401341:	mov    eax,DWORD PTR [eax]
  401343:	and    DWORD PTR ds:0x42a008,0x35
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	mov    eax,0xf89c8581
  401358:	adc    DWORD PTR ds:0x426004,0x427004
  401362:	mov    DWORD PTR [ebp-0x10],eax
  401365:	mov    DWORD PTR [ebp-0x10],eax
  401368:	adc    DWORD PTR ds:0x42a00c,0x427014
  401372:	push   0x42c581
  401377:	mov    DWORD PTR [ebp-0x10],eax
  40137a:	push   0x1
  40137c:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  401383:	or     DWORD PTR ds:0x427004,0x42600c
  40138d:	mov    DWORD PTR [ebp-0x10],eax
  401390:	push   0x1
  401392:	sbb    DWORD PTR ds:0x427010,0x429000
  40139c:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4013a3:	call   ebx
  4013a5:	adc    DWORD PTR ds:0x427014,0x6b24
  4013af:	test   eax,eax
  4013b1:	mov    DWORD PTR ds:0x426024,0x1db7
  4013bb:	lea    eax,[ebp-0x64]
  4013be:	push   eax
  4013bf:	je     0x4013d9
  4013c5:	push   0x42c5a1
  4013ca:	mov    DWORD PTR ds:0x42600c,0x4eee
  4013d4:	jmp    0x402918
  4013d9:	sub    DWORD PTR ds:0x427004,0x426020
  4013e3:	push   0x42c5bd
  4013e8:	sbb    DWORD PTR ds:0x429008,0x32a3
  4013f2:	call   DWORD PTR ds:0x42cf1d
  4013f8:	test   eax,eax
  4013fa:	je     0x40141e
  401400:	mov    DWORD PTR ds:0x426018,0x7af0
  40140a:	push   0x42c5d5
  40140f:	mov    DWORD PTR ds:0x42a014,0x13d0
  401419:	jmp    0x40298d
  40141e:	mov    eax,DWORD PTR [ebp-0x8]
  401421:	xor    eax,esi
  401423:	add    eax,edi
  401425:	jmp    0x401611
  40142a:	push   0x42c5fd
  40142f:	push   0x1
  401431:	xor    DWORD PTR ds:0x428008,0x428004
  40143b:	push   0x1
  40143d:	call   ebx
  40143f:	xor    DWORD PTR ds:0x42900c,0x7dc7
  401449:	test   eax,eax
  40144b:	lea    eax,[ebp-0x64]
  40144e:	mov    DWORD PTR ds:0x426004,0x288d
  401458:	push   eax
  401459:	mov    DWORD PTR ds:0x42a00c,0x24c9
  401463:	jne    0x4016f1
  401469:	sbb    DWORD PTR ds:0x426010,0x42a00c
  401473:	push   0x42c639
  401478:	and    DWORD PTR ds:0x42700c,0x42701c
  401482:	call   DWORD PTR ds:0x42cf1d
  401488:	test   eax,eax
  40148a:	jne    0x401705
  401490:	mov    eax,DWORD PTR [ebp-0xc]
  401493:	and    DWORD PTR ds:0x42a01c,0x0
  40149d:	mov    ecx,DWORD PTR ds:0x42a01c
  4014a3:	inc    ecx
  4014a4:	mov    DWORD PTR ds:0x42a01c,ecx
  4014aa:	cmp    DWORD PTR ds:0x42a01c,0x5
  4014b1:	jl     0x4014ec
  4014b7:	jmp    0x4014c5
  4014bc:	push   DWORD PTR [ebp-0x28]
  4014bf:	call   DWORD PTR ds:0x42cefd
  4014c5:	cmp    DWORD PTR ds:0x42a01c,0x4
  4014cc:	jne    0x4014df
  4014d2:	mov    ecx,DWORD PTR ds:0x42a01c
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x42a01c,ecx
  4014df:	cmp    DWORD PTR ds:0x42a01c,0x10
  4014e6:	jb     0x40149d
  4014ec:	mov    ecx,DWORD PTR [ebp-0x1c]
  4014ef:	add    DWORD PTR ds:0x42800c,0x417
  4014f9:	xor    eax,esi
  4014fb:	mov    DWORD PTR ds:0x42700c,0x5142
  401505:	lea    eax,[eax+ecx*1+0x3272e6]
  40150c:	push   eax
  40150d:	mov    DWORD PTR ds:0x42a010,0x10
  401517:	cmp    DWORD PTR ds:0x42a010,0x0
  40151e:	je     0x401571
  401524:	cmp    DWORD PTR ds:0x42a010,0x9
  40152b:	jbe    0x401571
  401531:	jmp    0x401549
  401536:	push   DWORD PTR [ebp-0x14]
  401539:	push   0x1de4
  40153e:	push   0x7aa3
  401543:	call   DWORD PTR ds:0x42cecd
  401549:	cmp    DWORD PTR ds:0x42a010,0xa
  401550:	jne    0x401561
  401556:	mov    eax,ds:0x42a010
  40155b:	dec    eax
  40155c:	mov    ds:0x42a010,eax
  401561:	mov    eax,ds:0x42a010
  401566:	dec    eax
  401567:	mov    ds:0x42a010,eax
  40156c:	jmp    0x401517
  401571:	mov    eax,DWORD PTR [ebp-0x18]
  401574:	xor    eax,esi
  401576:	lea    eax,[ebp+eax*1+0x3272ee]
  40157d:	add    DWORD PTR ds:0x428014,0x55c7
  401587:	push   eax
  401588:	mov    eax,ds:0x42c379
  40158d:	or     DWORD PTR ds:0x426010,0x426028
  401597:	push   DWORD PTR [eax+0x1bc]
  40159d:	call   0x4029bc
  4015a2:	and    edx,DWORD PTR ds:0x427010
  4015a8:	mov    eax,DWORD PTR [ebp-0xc]
  4015ab:	mov    ecx,DWORD PTR [ebp-0x1c]
  4015ae:	and    DWORD PTR ds:0x426000,0x429008
  4015b8:	xor    eax,esi
  4015ba:	and    DWORD PTR ds:0x427004,0x0
  4015c4:	jmp    0x4015d6
  4015c9:	mov    edx,DWORD PTR ds:0x427004
  4015cf:	inc    edx
  4015d0:	mov    DWORD PTR ds:0x427004,edx
  4015d6:	cmp    DWORD PTR ds:0x427004,0x1e
  4015dd:	jae    0x40160a
  4015e3:	cmp    DWORD PTR ds:0x427004,0x2e
  4015ea:	jl     0x40160a
  4015f0:	jmp    0x401605
  4015f5:	push   0x428008
  4015fa:	push   0x42c0e1
  4015ff:	call   DWORD PTR ds:0x42ced1
  401605:	jmp    0x4015c9
  40160a:	lea    eax,[ecx+eax*1+0x3272e6]
  401611:	sbb    edx,DWORD PTR ds:0x42a01c
  401617:	mov    ecx,DWORD PTR [ebp-0xc]
  40161a:	mov    edx,DWORD PTR [ebp-0xc]
  40161d:	sbb    DWORD PTR ds:0x428000,0x42a018
  401627:	xor    edx,esi
  401629:	xor    DWORD PTR ds:0x42a018,0x42a004
  401633:	xor    ecx,esi
  401635:	sub    DWORD PTR ds:0x42801c,0x4e63
  40163f:	add    ecx,edx
  401641:	mov    edx,DWORD PTR [ebp-0xc]
  401644:	xor    edx,esi
  401646:	mov    DWORD PTR ds:0x428010,0x1192
  401650:	lea    ecx,[ecx+edx*1+0x9758b2]
  401657:	mov    DWORD PTR ds:0x42a01c,0x3b7d
  401661:	mov    DWORD PTR [ebp-0x1c],eax
  401664:	mov    DWORD PTR ds:0x42a004,0x124e
  40166e:	cmp    eax,ecx
  401670:	mov    DWORD PTR ds:0x426028,0x1dba
  40167a:	jbe    0x40142a
  401680:	add    DWORD PTR ds:0x428000,0x429010
  40168a:	push   0x42c679
  40168f:	or     DWORD PTR ds:0x42900c,0x42701c
  401699:	push   0x1
  40169b:	push   0x1
  40169d:	xor    DWORD PTR ds:0x427000,0x527
  4016a7:	call   ebx
  4016a9:	sbb    DWORD PTR ds:0x429008,0x2c08
  4016b3:	test   eax,eax
  4016b5:	mov    DWORD PTR ds:0x426020,0x3e7c
  4016bf:	lea    eax,[ebp-0x64]
  4016c2:	push   eax
  4016c3:	mov    DWORD PTR ds:0x42a008,0xe64
  4016cd:	je     0x40170f
  4016d3:	mov    DWORD PTR ds:0x42700c,0x3ad2
  4016dd:	push   0x42c699
  4016e2:	mov    DWORD PTR ds:0x428010,0x56f5
  4016ec:	jmp    0x402918
  4016f1:	mov    DWORD PTR ds:0x428018,0x615d
  4016fb:	push   0x42c61d
  401700:	jmp    0x402918
  401705:	push   0x42c651
  40170a:	jmp    0x40298d
  40170f:	or     DWORD PTR ds:0x428014,0x426028
  401719:	push   0x42c6b5
  40171e:	call   DWORD PTR ds:0x42cf1d
  401724:	test   eax,eax
  401726:	je     0x401736
  40172c:	push   0x42c6cd
  401731:	jmp    0x40298d
  401736:	mov    eax,DWORD PTR [ebp+0xc]
  401739:	mov    ds:0x42c1fd,eax
  40173e:	and    DWORD PTR ds:0x426018,0x0
  401748:	jmp    0x40175a
  40174d:	mov    ecx,DWORD PTR ds:0x426018
  401753:	inc    ecx
  401754:	mov    DWORD PTR ds:0x426018,ecx
  40175a:	cmp    DWORD PTR ds:0x426018,0x1d
  401761:	jae    0x40178a
  401767:	cmp    DWORD PTR ds:0x426018,0x1f
  40176e:	jge    0x40178a
  401774:	jmp    0x401785
  401779:	push   DWORD PTR [ebp-0x10]
  40177c:	push   DWORD PTR [ebp-0x20]
  40177f:	call   DWORD PTR ds:0x42cf05
  401785:	jmp    0x40174d
  40178a:	mov    eax,DWORD PTR [ebp+0x10]
  40178d:	inc    ecx
  40178e:	mov    ds:0x42c451,eax
  401793:	and    DWORD PTR ds:0x426018,0x0
  40179d:	jmp    0x4017af
  4017a2:	mov    ecx,DWORD PTR ds:0x426018
  4017a8:	inc    ecx
  4017a9:	mov    DWORD PTR ds:0x426018,ecx
  4017af:	cmp    DWORD PTR ds:0x426018,0x1a
  4017b6:	jae    0x401805
  4017bc:	cmp    DWORD PTR ds:0x426018,0x9
  4017c3:	jbe    0x401805
  4017c9:	jmp    0x4017e6
  4017ce:	push   DWORD PTR [ebp-0x10]
  4017d1:	push   0x74e3
  4017d6:	push   0x2d12
  4017db:	push   0x5ea7
  4017e0:	call   DWORD PTR ds:0x42ced5
  4017e6:	cmp    DWORD PTR ds:0x426018,0x8
  4017ed:	jne    0x401800
  4017f3:	mov    ecx,DWORD PTR ds:0x426018
  4017f9:	inc    ecx
  4017fa:	mov    DWORD PTR ds:0x426018,ecx
  401800:	jmp    0x4017a2
  401805:	mov    eax,ds:0x42c1fd
  40180a:	and    DWORD PTR ds:0x428018,0x5463
  401814:	mov    ecx,DWORD PTR [ebp-0x30]
  401817:	or     DWORD PTR ds:0x426028,0x42700c
  401821:	push   0x42c6f5
  401826:	sub    eax,edi
  401828:	push   0x1
  40182a:	xor    DWORD PTR ds:0x426028,0x61dd
  401834:	xor    eax,esi
  401836:	push   0x1
  401838:	sub    DWORD PTR ds:0x42a01c,0x42900c
  401842:	mov    DWORD PTR [ecx],eax
  401844:	xor    DWORD PTR ds:0x426028,0x42901c
  40184e:	call   ebx
  401850:	test   eax,eax
  401852:	lea    eax,[ebp-0x64]
  401855:	mov    DWORD PTR ds:0x427000,0x5971
  40185f:	push   eax
  401860:	je     0x40187a
  401866:	mov    DWORD PTR ds:0x427018,0x1f42
  401870:	push   0x42c715
  401875:	jmp    0x402918
  40187a:	sbb    DWORD PTR ds:0x428000,0x427000
  401884:	push   0x42c731
  401889:	call   DWORD PTR ds:0x42cf1d
  40188f:	and    DWORD PTR ds:0x42701c,0x42900c
  401899:	test   eax,eax
  40189b:	je     0x4018bf
  4018a1:	mov    DWORD PTR ds:0x426000,0x4b8f
  4018ab:	push   0x42c749
  4018b0:	mov    DWORD PTR ds:0x426010,0x706
  4018ba:	jmp    0x40298d
  4018bf:	mov    eax,DWORD PTR [ebp-0x34]
  4018c2:	mov    DWORD PTR ds:0x426028,0x3b43
  4018cc:	cmp    eax,0xf89c8585
  4018d1:	mov    DWORD PTR ds:0x42a01c,0x783a
  4018db:	jne    0x401e52
  4018e1:	add    DWORD PTR ds:0x42a000,0x426018
  4018eb:	push   0x42c771
  4018f0:	push   0x1
  4018f2:	sub    DWORD PTR ds:0x427018,0x42900c
  4018fc:	push   0x1
  4018fe:	call   ebx
  401900:	test   eax,eax
  401902:	mov    DWORD PTR ds:0x429014,0x76e2
  40190c:	lea    eax,[ebp-0x64]
  40190f:	push   eax
  401910:	je     0x40192a
  401916:	mov    DWORD PTR ds:0x42a000,0x2027
  401920:	push   0x42c791
  401925:	jmp    0x402918
  40192a:	add    DWORD PTR ds:0x427018,0x427004
  401934:	push   0x42c7ad
  401939:	add    DWORD PTR ds:0x427010,0x42a010
  401943:	call   DWORD PTR ds:0x42cf1d
  401949:	sbb    DWORD PTR ds:0x42600c,0x37cd
  401953:	test   eax,eax
  401955:	je     0x401979
  40195b:	mov    DWORD PTR ds:0x428018,0x242f
  401965:	push   0x42c7c5
  40196a:	mov    DWORD PTR ds:0x426020,0x46bd
  401974:	jmp    0x40298d
  401979:	and    DWORD PTR ds:0x426028,0x2c8a
  401983:	lea    eax,[ebp-0x38]
  401986:	mov    DWORD PTR [ebp-0xc4],eax
  40198c:	lea    eax,[ebp+0x4]
  40198f:	mov    DWORD PTR [ebp-0x38],eax
  401992:	mov    DWORD PTR ds:0x429018,0x16
  40199c:	cmp    DWORD PTR ds:0x429018,0x0
  4019a3:	je     0x4019ec
  4019a9:	cmp    DWORD PTR ds:0x429018,0xc
  4019b0:	jbe    0x4019ec
  4019b6:	jmp    0x4019c4
  4019bb:	push   DWORD PTR [ebp-0xc]
  4019be:	call   DWORD PTR ds:0x42cf11
  4019c4:	cmp    DWORD PTR ds:0x429018,0xd
  4019cb:	jne    0x4019dc
  4019d1:	mov    eax,ds:0x429018
  4019d6:	dec    eax
  4019d7:	mov    ds:0x429018,eax
  4019dc:	mov    eax,ds:0x429018
  4019e1:	dec    eax
  4019e2:	mov    ds:0x429018,eax
  4019e7:	jmp    0x40199c
  4019ec:	mov    eax,DWORD PTR [ebp-0x38]
  4019ef:	add    DWORD PTR ds:0x429018,0x42a00c
  4019f9:	test   eax,eax
  4019fb:	mov    DWORD PTR ds:0x426014,0x652e
  401a05:	je     0x4028fb
  401a0b:	push   0x42c7ed
  401a10:	push   0x1
  401a12:	adc    DWORD PTR ds:0x428018,0x42701c
  401a1c:	push   0x1
  401a1e:	and    DWORD PTR ds:0x42901c,0x428014
  401a28:	call   ebx
  401a2a:	test   eax,eax
  401a2c:	mov    DWORD PTR ds:0x426028,0xce9
  401a36:	lea    eax,[ebp-0x64]
  401a39:	mov    DWORD PTR ds:0x426028,0x6581
  401a43:	push   eax
  401a44:	mov    DWORD PTR ds:0x426004,0x7fa5
  401a4e:	je     0x401a72
  401a54:	mov    DWORD PTR ds:0x42701c,0x4dc9
  401a5e:	push   0x42c80d
  401a63:	mov    DWORD PTR ds:0x428004,0x4554
  401a6d:	jmp    0x402918
  401a72:	adc    DWORD PTR ds:0x429004,0x378b
  401a7c:	push   0x42c829
  401a81:	add    DWORD PTR ds:0x427000,0x42a008
  401a8b:	call   DWORD PTR ds:0x42cf1d
  401a91:	test   eax,eax
  401a93:	mov    DWORD PTR ds:0x42a018,0xdd6
  401a9d:	je     0x401ac1
  401aa3:	mov    DWORD PTR ds:0x42a01c,0x7cec
  401aad:	push   0x42c841
  401ab2:	mov    DWORD PTR ds:0x427004,0x48ea
  401abc:	jmp    0x40298d
  401ac1:	or     ecx,DWORD PTR ds:0x429018
  401ac7:	mov    eax,DWORD PTR [ebp-0x24]
  401aca:	sub    DWORD PTR ds:0x428008,ebx
  401ad0:	mov    eax,DWORD PTR [ebp-0xc]
  401ad3:	mov    eax,DWORD PTR [ebp-0x8]
  401ad6:	mov    DWORD PTR [ebp+0xc],eax
  401ad9:	sub    DWORD PTR ds:0x429000,0x500c
  401ae3:	mov    eax,eax
  401ae5:	and    DWORD PTR ds:0x426018,0x0
  401aef:	jmp    0x401aff
  401af4:	mov    eax,ds:0x426018
  401af9:	inc    eax
  401afa:	mov    ds:0x426018,eax
  401aff:	cmp    DWORD PTR ds:0x426018,0x1e
  401b06:	jae    0x401b46
  401b0c:	cmp    DWORD PTR ds:0x426018,0x23
  401b13:	jge    0x401b46
  401b19:	jmp    0x401b41
  401b1e:	push   0x5d45
  401b23:	push   0x171a
  401b28:	push   0x357f
  401b2d:	push   DWORD PTR [ebp-0xc]
  401b30:	push   DWORD PTR [ebp-0x18]
  401b33:	push   DWORD PTR [ebp-0x18]
  401b36:	push   0x42c14d
  401b3b:	call   DWORD PTR ds:0x42cf15
  401b41:	jmp    0x401af4
  401b46:	mov    eax,ds:0x42c379
  401b4b:	and    DWORD PTR ds:0x427014,0x0
  401b55:	jmp    0x401b67
  401b5a:	mov    ecx,DWORD PTR ds:0x427014
  401b60:	inc    ecx
  401b61:	mov    DWORD PTR ds:0x427014,ecx
  401b67:	cmp    DWORD PTR ds:0x427014,0x19
  401b6e:	jae    0x401b9e
  401b74:	cmp    DWORD PTR ds:0x427014,0x29
  401b7b:	ja     0x401b9e
  401b81:	jmp    0x401b99
  401b86:	push   0x42901c
  401b8b:	push   DWORD PTR [ebp-0x20]
  401b8e:	push   0x42c14d
  401b93:	call   DWORD PTR ds:0x42cf19
  401b99:	jmp    0x401b5a
  401b9e:	mov    eax,DWORD PTR [eax+0x1c8]
  401ba4:	add    DWORD PTR ds:0x428008,0x18
  401bae:	mov    eax,DWORD PTR [eax]
  401bb0:	dec    ecx
  401bb1:	cdq    
  401bb2:	and    ebx,DWORD PTR ds:0x426010
  401bb8:	mov    ebx,eax
  401bba:	and    DWORD PTR ds:0x42701c,0x0
  401bc4:	jmp    0x401bd6
  401bc9:	mov    ecx,DWORD PTR ds:0x42701c
  401bcf:	inc    ecx
  401bd0:	mov    DWORD PTR ds:0x42701c,ecx
  401bd6:	cmp    DWORD PTR ds:0x42701c,0x14
  401bdd:	jae    0x401c08
  401be3:	cmp    DWORD PTR ds:0x42701c,0x16
  401bea:	jb     0x401c08
  401bf0:	jmp    0x401c03
  401bf5:	push   DWORD PTR [ebp-0x20]
  401bf8:	push   0x3441
  401bfd:	call   DWORD PTR ds:0x42ced9
  401c03:	jmp    0x401bc9
  401c08:	mov    eax,0xfabdbee3
  401c0d:	and    DWORD PTR ds:0x42a004,0x0
  401c17:	jmp    0x401c29
  401c1c:	mov    ecx,DWORD PTR ds:0x42a004
  401c22:	inc    ecx
  401c23:	mov    DWORD PTR ds:0x42a004,ecx
  401c29:	cmp    DWORD PTR ds:0x42a004,0x18
  401c30:	jae    0x401c53
  401c36:	cmp    DWORD PTR ds:0x42a004,0x1e
  401c3d:	jbe    0x401c53
  401c43:	jmp    0x401c4e
  401c48:	call   DWORD PTR ds:0x42cedd
  401c4e:	jmp    0x401c1c
  401c53:	add    ebx,eax
  401c55:	mov    ecx,DWORD PTR ds:0x427004
  401c5b:	adc    edx,0xffffffff
  401c5e:	and    DWORD PTR [ebp-0x10],0x0
  401c62:	xor    edx,0x0
  401c65:	mov    ecx,DWORD PTR ds:0x42a000
  401c6b:	sbb    DWORD PTR ds:0x428004,ecx
  401c71:	mov    DWORD PTR [ebp-0x84],edx
  401c77:	or     edx,DWORD PTR ds:0x42700c
  401c7d:	mov    edx,DWORD PTR [ebp+0xc]
  401c80:	adc    DWORD PTR ds:0x42701c,edi
  401c86:	mov    DWORD PTR [ebp-0x14],edx
  401c89:	mov    ecx,0x8a29a131
  401c8e:	mov    edx,DWORD PTR ds:0x41d2d8
  401c94:	mov    edx,DWORD PTR [edx]
  401c96:	and    DWORD PTR ds:0x42a010,edx
  401c9c:	xor    ebx,ecx
  401c9e:	and    DWORD PTR ds:0x429000,0x0
  401ca8:	mov    edx,DWORD PTR ds:0x429000
  401cae:	inc    edx
  401caf:	mov    DWORD PTR ds:0x429000,edx
  401cb5:	cmp    DWORD PTR ds:0x429000,0x6
  401cbc:	jg     0x401d08
  401cc2:	jmp    0x401cdf
  401cc7:	push   DWORD PTR [ebp-0x20]
  401cca:	push   DWORD PTR [ebp-0x20]
  401ccd:	push   DWORD PTR [ebp-0x24]
  401cd0:	push   DWORD PTR [ebp-0x1c]
  401cd3:	push   DWORD PTR [ebp-0xc]
  401cd6:	push   DWORD PTR [ebp-0x14]
  401cd9:	call   DWORD PTR ds:0x42cee1
  401cdf:	cmp    DWORD PTR ds:0x429000,0x5
  401ce6:	jne    0x401cfb
  401cec:	xor    edx,edx
  401cee:	add    edx,DWORD PTR ds:0x429000
  401cf4:	inc    edx
  401cf5:	mov    DWORD PTR ds:0x429000,edx
  401cfb:	cmp    DWORD PTR ds:0x429000,0x18
  401d02:	jb     0x401ca8
  401d08:	add    DWORD PTR [ebp-0x14],eax
  401d0b:	mov    edx,DWORD PTR [ebp-0x14]
  401d0e:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401d12:	and    DWORD PTR ds:0x42601c,0x428008
  401d1c:	xor    edx,ecx
  401d1e:	mov    DWORD PTR [ebp-0x74],edx
  401d21:	mov    edx,DWORD PTR ds:0x41d27f
  401d27:	mov    edx,DWORD PTR [edx]
  401d29:	sub    DWORD PTR ds:0x42a00c,edx
  401d2f:	mov    edx,DWORD PTR [ebp-0x10]
  401d32:	or     DWORD PTR ds:0x429000,0x42601c
  401d3c:	xor    edx,0x0
  401d3f:	mov    DWORD PTR ds:0x426014,0x46a4
  401d49:	mov    DWORD PTR [ebp-0x70],edx
  401d4c:	mov    DWORD PTR ds:0x426008,0x3569
  401d56:	cmp    DWORD PTR [ebp-0x74],ebx
  401d59:	mov    DWORD PTR ds:0x42a008,0x626d
  401d63:	jne    0x401d82
  401d69:	mov    edx,DWORD PTR [ebp-0x84]
  401d6f:	cmp    DWORD PTR [ebp-0x70],edx
  401d72:	mov    DWORD PTR ds:0x426018,0x3ab8
  401d7c:	je     0x401dff
  401d82:	mov    edx,DWORD PTR ds:0x428014
  401d88:	and    DWORD PTR ds:0x426010,edx
  401d8e:	mov    edx,DWORD PTR ds:0x42c379
  401d94:	mov    edx,DWORD PTR [edx+0x1c0]
  401d9a:	add    DWORD PTR ds:0x428008,0x426028
  401da4:	mov    edx,DWORD PTR [edx]
  401da6:	xor    ebx,ebx
  401da8:	add    edx,eax
  401daa:	mov    DWORD PTR ds:0x428004,0xbbd
  401db4:	adc    ebx,0xffffffff
  401db7:	add    DWORD PTR ds:0x429000,0x426010
  401dc1:	xor    edx,ecx
  401dc3:	dec    DWORD PTR ds:0x428014
  401dc9:	xor    ebx,0x0
  401dcc:	mov    DWORD PTR ds:0x42a000,0xf65
  401dd6:	cmp    edx,0x70941fd5
  401ddc:	mov    DWORD PTR ds:0x42901c,0xbd9
  401de6:	jne    0x4028f5
  401dec:	cmp    ebx,0xffffffff
  401def:	mov    DWORD PTR ds:0x42701c,0xa77
  401df9:	jne    0x4028f5
  401dff:	mov    edx,DWORD PTR ds:0x42c3f5
  401e05:	sub    ebx,DWORD PTR ds:0x429010
  401e0b:	mov    ebx,DWORD PTR ds:0x42c3fd
  401e11:	xor    edx,ebx
  401e13:	sub    DWORD PTR ds:0x429004,edx
  401e19:	mov    DWORD PTR ds:0x42c3f5,edx
  401e1f:	mov    edx,DWORD PTR [ebp-0x38]
  401e22:	mov    ebx,DWORD PTR ds:0x42c3f5
  401e28:	xor    DWORD PTR ds:0x427004,0x3bff
  401e32:	add    ebx,DWORD PTR [edx]
  401e34:	mov    edx,DWORD PTR [ebp-0x38]
  401e37:	mov    DWORD PTR ds:0x429018,0x5a68
  401e41:	mov    DWORD PTR [edx],ebx
  401e43:	mov    DWORD PTR ds:0x42a01c,0x3aa
  401e4d:	jmp    0x4028b6
  401e52:	mov    eax,DWORD PTR [ebp-0x48]
  401e55:	cmp    eax,0xf89c8584
  401e5a:	je     0x401f89
  401e60:	adc    DWORD PTR ds:0x42800c,0x3df8
  401e6a:	mov    eax,DWORD PTR [ebp-0x8]
  401e6d:	mov    ecx,DWORD PTR [ebp-0x40]
  401e70:	xor    eax,esi
  401e72:	add    eax,edi
  401e74:	cmp    eax,ecx
  401e76:	mov    DWORD PTR ds:0x42600c,0x41ce
  401e80:	je     0x401f89
  401e86:	push   0x42cb51
  401e8b:	push   0x1
  401e8d:	push   0x1
  401e8f:	sbb    DWORD PTR ds:0x427018,0x127e
  401e99:	call   ebx
  401e9b:	test   eax,eax
  401e9d:	lea    eax,[ebp-0x64]
  401ea0:	push   eax
  401ea1:	mov    DWORD PTR ds:0x429008,0x336d
  401eab:	je     0x401ec5
  401eb1:	push   0x42cb71
  401eb6:	mov    DWORD PTR ds:0x428014,0x7101
  401ec0:	jmp    0x402918
  401ec5:	push   0x42cb8d
  401eca:	call   DWORD PTR ds:0x42cf1d
  401ed0:	test   eax,eax
  401ed2:	mov    DWORD PTR ds:0x429008,0x775f
  401edc:	je     0x401ef6
  401ee2:	mov    DWORD PTR ds:0x426010,0x680b
  401eec:	push   0x42cba5
  401ef1:	jmp    0x40298d
  401ef6:	sbb    DWORD PTR ds:0x429018,ebx
  401efc:	mov    eax,ds:0x42c379
  401f01:	not    DWORD PTR ds:0x426028
  401f07:	mov    eax,DWORD PTR [eax+0x194]
  401f0d:	mov    ecx,DWORD PTR [eax]
  401f0f:	mov    DWORD PTR ds:0x42a000,0x285b
  401f19:	mov    eax,DWORD PTR [ecx+0x3c]
  401f1c:	push   DWORD PTR ds:0x42c451
  401f22:	sub    DWORD PTR ds:0x429010,0x42a01c
  401f2c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401f30:	sub    DWORD PTR ds:0x426004,0x42801c
  401f3a:	push   DWORD PTR ds:0x42c1fd
  401f40:	add    eax,ecx
  401f42:	mov    ecx,DWORD PTR ds:0x42c379
  401f48:	mov    ecx,DWORD PTR [ecx+0x194]
  401f4e:	push   DWORD PTR [ecx]
  401f50:	add    DWORD PTR ds:0x429010,0x428018
  401f5a:	call   eax
  401f5c:	not    DWORD PTR ds:0x427014
  401f62:	mov    ecx,DWORD PTR ds:0x42c379
  401f68:	mov    DWORD PTR ds:0x429018,0x2744
  401f72:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401f78:	mov    DWORD PTR [ecx],eax
  401f7a:	mov    DWORD PTR ds:0x426000,0x46ab
  401f84:	jmp    0x4028fb
  401f89:	push   0x42c869
  401f8e:	xor    DWORD PTR ds:0x42a000,0x57ea
  401f98:	push   0x1
  401f9a:	and    DWORD PTR ds:0x42901c,0x7cc8
  401fa4:	push   0x1
  401fa6:	neg    DWORD PTR ds:0x427008
  401fac:	call   ebx
  401fae:	adc    DWORD PTR ds:0x42700c,0x42a010
  401fb8:	test   eax,eax
  401fba:	lea    eax,[ebp-0x64]
  401fbd:	mov    DWORD PTR ds:0x42701c,0x651
  401fc7:	push   eax
  401fc8:	mov    DWORD PTR ds:0x42701c,0x5776
  401fd2:	je     0x401fec
  401fd8:	push   0x42c889
  401fdd:	mov    DWORD PTR ds:0x428008,0x5ffc
  401fe7:	jmp    0x402918
  401fec:	adc    DWORD PTR ds:0x426018,0x3467
  401ff6:	push   0x42c8a5
  401ffb:	and    DWORD PTR ds:0x42900c,0x1b2
  402005:	call   DWORD PTR ds:0x42cf1d
  40200b:	xor    DWORD PTR ds:0x42901c,0x3e21
  402015:	test   eax,eax
  402017:	mov    DWORD PTR ds:0x42a018,0x49ac
  402021:	je     0x40203b
  402027:	mov    DWORD PTR ds:0x428014,0x5d0f
  402031:	push   0x42c8bd
  402036:	jmp    0x40298d
  40203b:	mov    eax,DWORD PTR [ebp-0x8]
  40203e:	xor    ecx,ecx
  402040:	add    ecx,DWORD PTR ds:0x426028
  402046:	adc    ecx,DWORD PTR ds:0x428010
  40204c:	mov    DWORD PTR ds:0x426028,ecx
  402052:	mov    ecx,DWORD PTR [ebp-0x94]
  402058:	add    DWORD PTR ds:0x429000,0x6a53
  402062:	xor    eax,esi
  402064:	adc    DWORD PTR ds:0x426020,0x7652
  40206e:	add    eax,edi
  402070:	cmp    eax,ecx
  402072:	mov    DWORD PTR ds:0x426020,0x275a
  40207c:	jne    0x4026f5
  402082:	add    ecx,0x1c4a
  402088:	mov    eax,DWORD PTR [ebp-0x8]
  40208b:	mov    ecx,DWORD PTR ds:0x42c379
  402091:	sub    DWORD PTR ds:0x429004,0x42600c
  40209b:	mov    ecx,DWORD PTR [ecx+0x198]
  4020a1:	adc    DWORD PTR ds:0x427008,0x1471
  4020ab:	xor    eax,esi
  4020ad:	or     DWORD PTR ds:0x42900c,0x427018
  4020b7:	add    eax,edi
  4020b9:	cmp    eax,DWORD PTR [ecx]
  4020bb:	mov    DWORD PTR ds:0x42701c,0x4fb
  4020c5:	jne    0x4021d2
  4020cb:	inc    DWORD PTR ds:0x42a004
  4020d1:	push   0x42c8e5
  4020d6:	sbb    DWORD PTR ds:0x426008,0x426014
  4020e0:	push   0x1
  4020e2:	sbb    DWORD PTR ds:0x426008,0x42901c
  4020ec:	push   0x1
  4020ee:	call   ebx
  4020f0:	test   eax,eax
  4020f2:	mov    DWORD PTR ds:0x42900c,0x76ac
  4020fc:	lea    eax,[ebp-0x64]
  4020ff:	mov    DWORD PTR ds:0x428000,0x6a60
  402109:	push   eax
  40210a:	mov    DWORD PTR ds:0x426008,0x4bf5
  402114:	je     0x40212e
  40211a:	mov    DWORD PTR ds:0x42601c,0x3939
  402124:	push   0x42c905
  402129:	jmp    0x402918
  40212e:	sbb    DWORD PTR ds:0x426014,0x42900c
  402138:	push   0x42c921
  40213d:	sub    DWORD PTR ds:0x427018,0x426020
  402147:	call   DWORD PTR ds:0x42cf1d
  40214d:	sub    DWORD PTR ds:0x426028,0x427010
  402157:	test   eax,eax
  402159:	mov    DWORD PTR ds:0x42a00c,0x5759
  402163:	je     0x402187
  402169:	mov    DWORD PTR ds:0x428010,0x125d
  402173:	push   0x42c939
  402178:	mov    DWORD PTR ds:0x427014,0x1996
  402182:	jmp    0x40298d
  402187:	sbb    DWORD PTR ds:0x426010,ecx
  40218d:	mov    eax,DWORD PTR [ebp-0x8]
  402190:	push   0xf89c8585
  402195:	sbb    DWORD PTR ds:0x42800c,0x426028
  40219f:	xor    eax,esi
  4021a1:	add    eax,edi
  4021a3:	push   eax
  4021a4:	sub    DWORD PTR ds:0x42801c,0x6c8c
  4021ae:	push   0xf89c8581
  4021b3:	push   DWORD PTR [ebp-0xc]
  4021b6:	or     DWORD PTR ds:0x427000,0x428004
  4021c0:	push   DWORD PTR [ebp-0x8]
  4021c3:	adc    DWORD PTR ds:0x427018,0x6ed0
  4021cd:	call   0x40e8bc
  4021d2:	and    DWORD PTR ds:0x42a018,0x427010
  4021dc:	push   0x42c961
  4021e1:	sub    DWORD PTR ds:0x427004,0x18db
  4021eb:	push   0x1
  4021ed:	mov    DWORD PTR ds:0x426010,0x3d4e
  4021f7:	push   0x1
  4021f9:	add    DWORD PTR ds:0x426020,0x722a
  402203:	call   ebx
  402205:	test   eax,eax
  402207:	lea    eax,[ebp-0x64]
  40220a:	push   eax
  40220b:	mov    DWORD PTR ds:0x428008,0x65b
  402215:	je     0x40222f
  40221b:	push   0x42c981
  402220:	mov    DWORD PTR ds:0x42a010,0x3637
  40222a:	jmp    0x402918
  40222f:	push   0x42c99d
  402234:	call   DWORD PTR ds:0x42cf1d
  40223a:	sub    DWORD PTR ds:0x42a010,0x42a00c
  402244:	test   eax,eax
  402246:	mov    DWORD PTR ds:0x429004,0x779
  402250:	je     0x40226a
  402256:	push   0x42c9b5
  40225b:	mov    DWORD PTR ds:0x42a00c,0x2295
  402265:	jmp    0x40298d
  40226a:	mov    eax,DWORD PTR [ebp-0xc]
  40226d:	mov    DWORD PTR [ebp-0x44],eax
  402270:	mov    DWORD PTR ds:0x42a004,0x1a
  40227a:	cmp    DWORD PTR ds:0x42a004,0x0
  402281:	je     0x4022df
  402287:	cmp    DWORD PTR ds:0x42a004,0xb
  40228e:	jbe    0x4022df
  402294:	jmp    0x4022b3
  402299:	push   0x1a0f
  40229e:	push   0x864a
  4022a3:	push   0x8ba5
  4022a8:	push   0x1119
  4022ad:	call   DWORD PTR ds:0x42cee5
  4022b3:	cmp    DWORD PTR ds:0x42a004,0xc
  4022ba:	jne    0x4022cd
  4022c0:	mov    ecx,DWORD PTR ds:0x42a004
  4022c6:	dec    ecx
  4022c7:	mov    DWORD PTR ds:0x42a004,ecx
  4022cd:	mov    ecx,DWORD PTR ds:0x42a004
  4022d3:	dec    ecx
  4022d4:	mov    DWORD PTR ds:0x42a004,ecx
  4022da:	jmp    0x40227a
  4022df:	mov    eax,DWORD PTR [ebp-0x8]
  4022e2:	or     DWORD PTR ds:0x427000,0x19ef
  4022ec:	mov    DWORD PTR [ebp-0x1c],eax
  4022ef:	mov    DWORD PTR ds:0x42a004,0x1b
  4022f9:	cmp    DWORD PTR ds:0x42a004,0x0
  402300:	je     0x402349
  402306:	cmp    DWORD PTR ds:0x42a004,0x5
  40230d:	jge    0x402349
  402313:	jmp    0x402321
  402318:	push   DWORD PTR [ebp-0xc]
  40231b:	call   DWORD PTR ds:0x42cee9
  402321:	cmp    DWORD PTR ds:0x42a004,0x6
  402328:	jne    0x402339
  40232e:	mov    eax,ds:0x42a004
  402333:	dec    eax
  402334:	mov    ds:0x42a004,eax
  402339:	mov    eax,ds:0x42a004
  40233e:	dec    eax
  40233f:	mov    ds:0x42a004,eax
  402344:	jmp    0x4022f9
  402349:	mov    eax,DWORD PTR [ebp-0x1c]
  40234c:	xor    eax,esi
  40234e:	add    eax,edi
  402350:	mov    DWORD PTR [ebp+0x10],eax
  402353:	mov    eax,ds:0x42c1f9
  402358:	mov    eax,DWORD PTR [eax]
  40235a:	mov    DWORD PTR [ebp+0x10],eax
  40235d:	mov    eax,ds:0x42c401
  402362:	mov    eax,DWORD PTR [eax]
  402364:	mov    DWORD PTR [ebp-0x18],eax
  402367:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  40236e:	mov    eax,DWORD PTR [ebp+0xc]
  402371:	xor    eax,esi
  402373:	add    eax,edi
  402375:	mov    DWORD PTR [ebp+0xc],eax
  402378:	mov    eax,ds:0x42c379
  40237d:	mov    DWORD PTR [ebp+0xc],eax
  402380:	mov    eax,DWORD PTR [ebp+0x10]
  402383:	mov    DWORD PTR [ebp+0xc],eax
  402386:	mov    eax,DWORD PTR [ebp+0xc]
  402389:	push   0x4
  40238b:	pop    ecx
  40238c:	sub    ecx,eax
  40238e:	add    ecx,DWORD PTR [ebp-0x18]
  402391:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402398:	mov    DWORD PTR [ebp+0x10],ecx
  40239b:	mov    DWORD PTR [ebp-0x10c],0xf89c8581
  4023a5:	mov    eax,DWORD PTR [ebp+0xc]
  4023a8:	mov    DWORD PTR [ebp-0x108],eax
  4023ae:	mov    eax,DWORD PTR [ebp+0x10]
  4023b1:	mov    DWORD PTR [ebp-0x104],eax
  4023b7:	mov    eax,DWORD PTR [ebp-0x30]
  4023ba:	xor    eax,esi
  4023bc:	add    eax,edi
  4023be:	mov    DWORD PTR [ebp-0x100],eax
  4023c4:	lea    eax,[ebp-0xbc]
  4023ca:	mov    DWORD PTR [ebp-0xfc],eax
  4023d0:	mov    eax,DWORD PTR [ebp-0x10c]
  4023d6:	xor    eax,esi
  4023d8:	add    eax,edi
  4023da:	mov    DWORD PTR [ebp-0x10c],eax
  4023e0:	lea    eax,[ebp-0x10c]
  4023e6:	push   eax
  4023e7:	mov    eax,DWORD PTR [ebp-0x44]
  4023ea:	xor    eax,esi
  4023ec:	add    eax,edi
  4023ee:	push   eax
  4023ef:	mov    eax,ds:0x42c399
  4023f4:	push   0x42c2ef
  4023f9:	push   DWORD PTR [eax]
  4023fb:	call   0x409758
  402400:	mov    eax,DWORD PTR [ebp+0xc]
  402403:	mov    ecx,DWORD PTR [ebp+0x10]
  402406:	mov    DWORD PTR [ebp-0x90],ecx
  40240c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40240f:	xor    ecx,esi
  402411:	mov    DWORD PTR [ebp-0x34],eax
  402414:	add    ecx,edi
  402416:	jmp    0x402690
  40241b:	add    eax,ecx
  40241d:	mov    DWORD PTR [ebp+0x10],eax
  402420:	mov    eax,DWORD PTR [ebp-0x90]
  402426:	sub    eax,ecx
  402428:	mov    DWORD PTR [ebp+0xc],eax
  40242b:	mov    eax,DWORD PTR [ebp+0xc]
  40242e:	mov    DWORD PTR [ebp-0x6c],eax
  402431:	mov    eax,DWORD PTR [ebp+0x10]
  402434:	mov    DWORD PTR [ebp-0x68],0xf89c8585
  40243b:	mov    DWORD PTR [ebp-0x84],eax
  402441:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  402448:	mov    eax,DWORD PTR [ebp-0x68]
  40244b:	xor    eax,esi
  40244d:	add    eax,edi
  40244f:	mov    DWORD PTR [ebp+0x10],eax
  402452:	mov    eax,DWORD PTR [ebp-0x68]
  402455:	xor    eax,esi
  402457:	add    eax,edi
  402459:	mov    DWORD PTR [ebp+0xc],eax
  40245c:	mov    DWORD PTR [ebp-0x30],0xf89c85a5
  402463:	mov    DWORD PTR [ebp-0x80],0xf89c85be
  40246a:	mov    eax,DWORD PTR [ebp-0x68]
  40246d:	mov    edx,DWORD PTR [ebp-0x6c]
  402470:	xor    eax,esi
  402472:	add    eax,edi
  402474:	cmp    edx,eax
  402476:	je     0x402681
  40247c:	mov    eax,DWORD PTR [ebp-0x20]
  40247f:	xor    eax,esi
  402481:	mov    edx,0xffcd8d1a
  402486:	sub    edx,eax
  402488:	add    edx,DWORD PTR [ebp-0x6c]
  40248b:	mov    eax,DWORD PTR [ebp-0x20]
  40248e:	mov    ebx,DWORD PTR [ebp+0x10]
  402491:	xor    eax,esi
  402493:	add    eax,edi
  402495:	imul   eax,ebx
  402498:	cmp    eax,edx
  40249a:	ja     0x40267b
  4024a0:	mov    edx,DWORD PTR [ebp+0x10]
  4024a3:	mov    eax,DWORD PTR [ebp-0x6c]
  4024a6:	mov    ebx,DWORD PTR [ebp-0x30]
  4024a9:	sub    eax,edx
  4024ab:	xor    ebx,esi
  4024ad:	xor    edx,edx
  4024af:	add    ebx,edi
  4024b1:	div    ebx
  4024b3:	mov    DWORD PTR [ebp+0xc],eax
  4024b6:	mov    eax,DWORD PTR [ebp-0x80]
  4024b9:	mov    edx,DWORD PTR [ebp+0xc]
  4024bc:	xor    eax,esi
  4024be:	add    eax,edi
  4024c0:	cmp    edx,eax
  4024c2:	jbe    0x4024d2
  4024c8:	mov    eax,DWORD PTR [ebp-0x80]
  4024cb:	xor    eax,esi
  4024cd:	add    eax,edi
  4024cf:	mov    DWORD PTR [ebp+0xc],eax
  4024d2:	mov    eax,DWORD PTR [ebp-0x30]
  4024d5:	mov    edx,DWORD PTR [ebp+0xc]
  4024d8:	xor    eax,esi
  4024da:	add    eax,edi
  4024dc:	imul   eax,edx
  4024df:	mov    DWORD PTR [ebp+0xc],eax
  4024e2:	mov    eax,DWORD PTR [ebp-0x68]
  4024e5:	mov    edx,DWORD PTR [ebp+0xc]
  4024e8:	xor    eax,esi
  4024ea:	add    eax,edi
  4024ec:	cmp    edx,eax
  4024ee:	je     0x402664
  4024f4:	mov    eax,DWORD PTR [ebp+0xc]
  4024f7:	mov    DWORD PTR [ebp-0x7c],eax
  4024fa:	mov    eax,DWORD PTR [ebp+0x10]
  4024fd:	add    eax,DWORD PTR [ebp-0x84]
  402503:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  40250a:	mov    DWORD PTR [ebp-0x2c],eax
  40250d:	mov    eax,0xf89c8584
  402512:	mov    DWORD PTR [ebp-0x78],eax
  402515:	mov    DWORD PTR [ebp-0x70],0xf89c8583
  40251c:	mov    DWORD PTR [ebp-0x10],0xf89c8582
  402523:	mov    DWORD PTR [ebp-0x28],eax
  402526:	mov    eax,DWORD PTR [ebp-0x18]
  402529:	xor    eax,esi
  40252b:	add    eax,edi
  40252d:	jmp    0x402620
  402532:	mov    DWORD PTR [ebp-0x98],0xf89c85bb
  40253c:	mov    DWORD PTR [ebp-0x8c],0xf89c85b1
  402546:	mov    eax,DWORD PTR [ebp-0x28]
  402549:	mov    edx,DWORD PTR [ebp+0xc]
  40254c:	xor    eax,esi
  40254e:	add    eax,edi
  402550:	imul   eax,edx
  402553:	mov    edx,DWORD PTR [ebp-0x2c]
  402556:	mov    al,BYTE PTR [eax+edx*1]
  402559:	mov    BYTE PTR [ebp-0x1],al
  40255c:	mov    eax,DWORD PTR [ebp-0x28]
  40255f:	mov    edx,DWORD PTR [ebp+0xc]
  402562:	xor    eax,esi
  402564:	add    eax,edi
  402566:	imul   eax,edx
  402569:	mov    edx,DWORD PTR [ebp-0x70]
  40256c:	xor    edx,esi
  40256e:	add    eax,edx
  402570:	mov    edx,DWORD PTR [ebp-0x2c]
  402573:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e6]
  40257b:	mov    edx,DWORD PTR [ebp-0x98]
  402581:	xor    edx,esi
  402583:	lea    eax,[edx+eax*1+0x3272e6]
  40258a:	movzx  edx,BYTE PTR [ebp-0x1]
  40258e:	xor    edx,eax
  402590:	mov    BYTE PTR [ebp-0x1],dl
  402593:	mov    al,BYTE PTR [ebp-0x1]
  402596:	mov    edx,DWORD PTR [ebp-0x28]
  402599:	mov    ebx,DWORD PTR [ebp+0xc]
  40259c:	xor    edx,esi
  40259e:	add    edx,edi
  4025a0:	imul   edx,ebx
  4025a3:	mov    ebx,DWORD PTR [ebp-0x2c]
  4025a6:	mov    BYTE PTR [edx+ebx*1],al
  4025a9:	mov    eax,DWORD PTR [ebp-0x28]
  4025ac:	mov    edx,DWORD PTR [ebp+0xc]
  4025af:	xor    eax,esi
  4025b1:	add    eax,edi
  4025b3:	imul   eax,edx
  4025b6:	mov    edx,DWORD PTR [ebp-0x2c]
  4025b9:	mov    al,BYTE PTR [eax+edx*1]
  4025bc:	mov    BYTE PTR [ebp-0x1],al
  4025bf:	mov    eax,DWORD PTR [ebp-0x28]
  4025c2:	mov    edx,DWORD PTR [ebp+0xc]
  4025c5:	xor    eax,esi
  4025c7:	add    eax,edi
  4025c9:	imul   eax,edx
  4025cc:	mov    edx,DWORD PTR [ebp-0x78]
  4025cf:	xor    edx,esi
  4025d1:	add    eax,edx
  4025d3:	mov    edx,DWORD PTR [ebp-0x2c]
  4025d6:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e6]
  4025de:	mov    edx,DWORD PTR [ebp-0x8c]
  4025e4:	xor    edx,esi
  4025e6:	lea    eax,[edx+eax*1+0x3272e6]
  4025ed:	movzx  edx,BYTE PTR [ebp-0x1]
  4025f1:	xor    edx,eax
  4025f3:	mov    BYTE PTR [ebp-0x1],dl
  4025f6:	mov    al,BYTE PTR [ebp-0x1]
  4025f9:	mov    edx,DWORD PTR [ebp-0x28]
  4025fc:	mov    ebx,DWORD PTR [ebp+0xc]
  4025ff:	xor    edx,esi
  402601:	add    edx,edi
  402603:	imul   edx,ebx
  402606:	mov    ebx,DWORD PTR [ebp-0x2c]
  402609:	mov    BYTE PTR [edx+ebx*1],al
  40260c:	mov    eax,DWORD PTR [ebp-0x10]
  40260f:	mov    edx,DWORD PTR [ebp-0x78]
  402612:	xor    eax,esi
  402614:	xor    edx,esi
  402616:	add    eax,edi
  402618:	add    edx,edi
  40261a:	imul   eax,edx
  40261d:	add    eax,DWORD PTR [ebp+0xc]
  402620:	mov    DWORD PTR [ebp+0xc],eax
  402623:	mov    eax,DWORD PTR [ebp+0xc]
  402626:	mov    edx,DWORD PTR [ebp-0x7c]
  402629:	cmp    edx,eax
  40262b:	jb     0x402532
  402631:	mov    eax,DWORD PTR [ebp-0x78]
  402634:	mov    edx,DWORD PTR [ebp-0x7c]
  402637:	xor    eax,esi
  402639:	add    eax,edi
  40263b:	imul   eax,edx
  40263e:	mov    edx,DWORD PTR [ebp-0x18]
  402641:	xor    edx,esi
  402643:	add    edx,edi
  402645:	or     eax,edx
  402647:	mov    edx,DWORD PTR [ebp-0x20]
  40264a:	xor    edx,esi
  40264c:	add    eax,edx
  40264e:	mov    edx,DWORD PTR [ebp-0x20]
  402651:	xor    edx,esi
  402653:	add    eax,edx
  402655:	mov    edx,DWORD PTR [ebp+0x10]
  402658:	lea    eax,[eax+edx*1+0x64e5cc]
  40265f:	jmp    0x402673
  402664:	mov    eax,DWORD PTR [ebp-0x20]
  402667:	mov    edx,DWORD PTR [ebp+0x10]
  40266a:	xor    eax,esi
  40266c:	lea    eax,[eax+edx*1+0x3272e6]
  402673:	mov    DWORD PTR [ebp+0x10],eax
  402676:	jmp    0x40247c
  40267b:	mov    ebx,DWORD PTR ds:0x42cf01
  402681:	mov    edx,DWORD PTR [ebp-0x44]
  402684:	mov    eax,DWORD PTR [ebp-0x34]
  402687:	xor    edx,esi
  402689:	lea    ecx,[ecx+edx*1+0x3272e6]
  402690:	lea    edx,[ecx-0x3272e6]
  402696:	xor    edx,esi
  402698:	cmp    edx,0xf89c9585
  40269e:	jne    0x40241b
  4026a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4026a7:	xor    ecx,esi
  4026a9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e6]
  4026b0:	mov    BYTE PTR [ebp+0xf],cl
  4026b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4026b6:	mov    edx,DWORD PTR [ebp-0x1c]
  4026b9:	xor    ecx,esi
  4026bb:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e6]
  4026c2:	xor    edx,esi
  4026c4:	mov    BYTE PTR [edx+eax*1+0x3272e6],cl
  4026cb:	mov    ecx,DWORD PTR [ebp-0x44]
  4026ce:	mov    dl,BYTE PTR [ebp+0xf]
  4026d1:	xor    ecx,esi
  4026d3:	mov    BYTE PTR [ecx+eax*1+0x3272e6],dl
  4026da:	mov    eax,DWORD PTR [ebp-0x44]
  4026dd:	mov    eax,DWORD PTR [ebp-0x8]
  4026e0:	xor    eax,esi
  4026e2:	add    eax,edi
  4026e4:	mov    ds:0x42c3fd,eax
  4026e9:	mov    eax,DWORD PTR [ebp-0x8]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	mov    ds:0x42c3f5,eax
  4026f5:	push   0x42c9dd
  4026fa:	lea    eax,[ebp-0x3c]
  4026fd:	mov    DWORD PTR [ebp-0xb0],eax
  402703:	push   0x1
  402705:	lea    eax,[ebp+0x4]
  402708:	push   0x1
  40270a:	mov    DWORD PTR [ebp-0x3c],eax
  40270d:	call   ebx
  40270f:	test   eax,eax
  402711:	lea    eax,[ebp-0x64]
  402714:	push   eax
  402715:	je     0x402725
  40271b:	push   0x42c9fd
  402720:	jmp    0x402918
  402725:	push   0x42ca19
  40272a:	call   DWORD PTR ds:0x42cf1d
  402730:	test   eax,eax
  402732:	je     0x402742
  402738:	push   0x42ca31
  40273d:	jmp    0x40298d
  402742:	mov    eax,DWORD PTR [ebp-0x3c]
  402745:	test   eax,eax
  402747:	je     0x4028fb
  40274d:	push   0x42ca59
  402752:	push   0x1
  402754:	push   0x1
  402756:	call   ebx
  402758:	test   eax,eax
  40275a:	lea    eax,[ebp-0x64]
  40275d:	push   eax
  40275e:	je     0x40276e
  402764:	push   0x42ca79
  402769:	jmp    0x402918
  40276e:	push   0x42ca95
  402773:	call   DWORD PTR ds:0x42cf1d
  402779:	test   eax,eax
  40277b:	je     0x40278b
  402781:	push   0x42caad
  402786:	jmp    0x40298d
  40278b:	mov    DWORD PTR [ebp-0xb8],0xf152c3c
  402795:	mov    DWORD PTR [ebp-0xc8],0x712ed0f
  40279f:	mov    DWORD PTR [ebp-0xc0],0x373fc2d
  4027a9:	mov    DWORD PTR [ebp-0xb4],0x72670a1d
  4027b3:	call   0x40e53a
  4027b8:	push   0x42cad5
  4027bd:	push   0x1
  4027bf:	push   0x1
  4027c1:	call   ebx
  4027c3:	test   eax,eax
  4027c5:	lea    eax,[ebp-0x64]
  4027c8:	push   eax
  4027c9:	je     0x4027d9
  4027cf:	push   0x42caf5
  4027d4:	jmp    0x402918
  4027d9:	push   0x42cb11
  4027de:	call   DWORD PTR ds:0x42cf1d
  4027e4:	test   eax,eax
  4027e6:	je     0x4027f6
  4027ec:	push   0x42cb29
  4027f1:	jmp    0x40298d
  4027f6:	mov    eax,DWORD PTR [ebp-0x24]
  4027f9:	mov    eax,DWORD PTR [ebp-0xc]
  4027fc:	mov    eax,DWORD PTR [ebp-0x8]
  4027ff:	mov    DWORD PTR [ebp+0xc],eax
  402802:	mov    eax,eax
  402804:	mov    eax,ds:0x42c379
  402809:	mov    eax,DWORD PTR [eax+0x1c8]
  40280f:	mov    eax,DWORD PTR [eax]
  402811:	cdq    
  402812:	mov    ebx,eax
  402814:	mov    eax,0xfabdbee3
  402819:	add    ebx,eax
  40281b:	adc    edx,0xffffffff
  40281e:	and    DWORD PTR [ebp-0x10],0x0
  402822:	xor    edx,0x0
  402825:	mov    DWORD PTR [ebp-0x84],edx
  40282b:	mov    edx,DWORD PTR [ebp+0xc]
  40282e:	mov    DWORD PTR [ebp-0x14],edx
  402831:	mov    ecx,0x8a29a131
  402836:	xor    ebx,ecx
  402838:	add    DWORD PTR [ebp-0x14],eax
  40283b:	mov    edx,DWORD PTR [ebp-0x14]
  40283e:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402842:	xor    edx,ecx
  402844:	mov    DWORD PTR [ebp-0x74],edx
  402847:	mov    edx,DWORD PTR [ebp-0x10]
  40284a:	xor    edx,0x0
  40284d:	mov    DWORD PTR [ebp-0x70],edx
  402850:	cmp    DWORD PTR [ebp-0x74],ebx
  402853:	jne    0x402868
  402859:	mov    edx,DWORD PTR [ebp-0x84]
  40285f:	cmp    DWORD PTR [ebp-0x70],edx
  402862:	je     0x402897
  402868:	mov    edx,DWORD PTR ds:0x42c379
  40286e:	mov    edx,DWORD PTR [edx+0x1c0]
  402874:	mov    edx,DWORD PTR [edx]
  402876:	xor    ebx,ebx
  402878:	add    edx,eax
  40287a:	adc    ebx,0xffffffff
  40287d:	xor    edx,ecx
  40287f:	xor    ebx,0x0
  402882:	cmp    edx,0x70941fd5
  402888:	jne    0x4028f5
  40288e:	cmp    ebx,0xffffffff
  402891:	jne    0x4028f5
  402897:	mov    edx,DWORD PTR ds:0x42c3f5
  40289d:	mov    ebx,DWORD PTR ds:0x42c3fd
  4028a3:	xor    edx,ebx
  4028a5:	mov    DWORD PTR ds:0x42c3f5,edx
  4028ab:	mov    ebx,DWORD PTR ds:0x42c3f5
  4028b1:	mov    edx,DWORD PTR [ebp-0x3c]
  4028b4:	add    DWORD PTR [edx],ebx
  4028b6:	mov    edx,DWORD PTR [ebp+0xc]
  4028b9:	xor    esi,edx
  4028bb:	mov    edx,DWORD PTR ds:0x42c3f5
  4028c1:	add    esi,edi
  4028c3:	xor    ebx,ebx
  4028c5:	add    esi,eax
  4028c7:	adc    ebx,0xffffffff
  4028ca:	xor    edi,edi
  4028cc:	xor    esi,ecx
  4028ce:	xor    ebx,0x0
  4028d1:	add    edx,eax
  4028d3:	adc    edi,0xffffffff
  4028d6:	xor    edx,ecx
  4028d8:	xor    edi,0x0
  4028db:	cmp    edx,esi
  4028dd:	jne    0x4028f5
  4028e3:	cmp    edi,ebx
  4028e5:	jne    0x4028f5
  4028eb:	mov    eax,ds:0x42c3f5
  4028f0:	mov    ds:0x42c3fd,eax
  4028f5:	mov    ebx,DWORD PTR ds:0x42cf01
  4028fb:	push   0x42cbcd
  402900:	xor    edi,edi
  402902:	inc    edi
  402903:	push   edi
  402904:	push   edi
  402905:	call   ebx
  402907:	test   eax,eax
  402909:	lea    eax,[ebp-0x64]
  40290c:	push   eax
  40290d:	je     0x402923
  402913:	push   0x42cbed
  402918:	call   DWORD PTR ds:0x42cf1d
  40291e:	jmp    0x4029a7
  402923:	mov    esi,DWORD PTR ds:0x42cf1d
  402929:	push   0x42cc09
  40292e:	call   esi
  402930:	test   eax,eax
  402932:	je     0x402942
  402938:	push   0x42cc21
  40293d:	jmp    0x40298d
  402942:	mov    eax,ds:0x42c379
  402947:	push   0x4
  402949:	add    eax,0x1cc
  40294e:	push   eax
  40294f:	lea    eax,[ebp-0x24]
  402952:	push   eax
  402953:	call   0x4029bc
  402958:	push   0x42cc49
  40295d:	push   edi
  40295e:	push   edi
  40295f:	call   ebx
  402961:	test   eax,eax
  402963:	lea    eax,[ebp-0x64]
  402966:	push   eax
  402967:	je     0x402979
  40296d:	push   0x42cc69
  402972:	call   esi
  402974:	jmp    0x4029a7
  402979:	push   0x42cc85
  40297e:	call   esi
  402980:	test   eax,eax
  402982:	je     0x4029a2
  402988:	push   0x42cc9d
  40298d:	push   0x65546
  402992:	push   0x6465
  402997:	call   DWORD PTR ds:0x42cf0d
  40299d:	jmp    0x4029a7
  4029a2:	mov    eax,DWORD PTR [ebp-0x24]
  4029a5:	mov    eax,DWORD PTR [eax]
  4029a7:	pop    esi
  4029a8:	pop    edi
  4029a9:	pop    ebx
  4029aa:	leave  
  4029ab:	ret    0xc
  4029ae:	xor    eax,eax
  4029b0:	add    DWORD PTR ds:0x429000,0x429008
  4029ba:	inc    eax
  4029bb:	ret    
  4029bc:	push   ebp
  4029bd:	mov    ebp,esp
  4029bf:	sub    esp,0x10
  4029c2:	mov    DWORD PTR ds:0x42901c,0x12
  4029cc:	cmp    DWORD PTR ds:0x42901c,0x0
  4029d3:	je     0x402a22
  4029d9:	cmp    DWORD PTR ds:0x42901c,0x7
  4029e0:	jl     0x402a22
  4029e6:	jmp    0x4029f6
  4029eb:	push   0x428014
  4029f0:	call   DWORD PTR ds:0x42ceed
  4029f6:	cmp    DWORD PTR ds:0x42901c,0x8
  4029fd:	jne    0x402a10
  402a03:	mov    edx,DWORD PTR ds:0x42901c
  402a09:	dec    edx
  402a0a:	mov    DWORD PTR ds:0x42901c,edx
  402a10:	mov    edx,DWORD PTR ds:0x42901c
  402a16:	dec    edx
  402a17:	mov    DWORD PTR ds:0x42901c,edx
  402a1d:	jmp    0x4029cc
  402a22:	mov    eax,0xf89c8585
  402a27:	mov    DWORD PTR [ebp-0x4],eax
  402a2a:	or     DWORD PTR ds:0x429010,ebx
  402a30:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402a37:	mov    DWORD PTR ds:0x42601c,0x25ba
  402a41:	mov    ecx,DWORD PTR [ebp-0x4]
  402a44:	xor    DWORD PTR ds:0x42a01c,0x6325
  402a4e:	push   esi
  402a4f:	or     esi,esi
  402a51:	mov    edx,0x751089f
  402a56:	xor    ecx,edx
  402a58:	mov    esi,0x3272e6
  402a5d:	push   edi
  402a5e:	mov    DWORD PTR ds:0x42700c,0x15
  402a68:	cmp    DWORD PTR ds:0x42700c,0x0
  402a6f:	je     0x402aa2
  402a75:	cmp    DWORD PTR ds:0x42700c,0x1f
  402a7c:	jg     0x402aa2
  402a82:	jmp    0x402a90
  402a87:	push   DWORD PTR [ebp-0xc]
  402a8a:	call   DWORD PTR ds:0x42cef1
  402a90:	mov    edi,DWORD PTR ds:0x42700c
  402a96:	dec    edi
  402a97:	mov    DWORD PTR ds:0x42700c,edi
  402a9d:	jmp    0x402a68
  402aa2:	mov    edi,DWORD PTR [ebp+0x10]
  402aa5:	add    ecx,esi
  402aa7:	cmp    ecx,edi
  402aa9:	je     0x409672
  402aaf:	mov    ecx,DWORD PTR [ebp-0x4]
  402ab2:	and    DWORD PTR ds:0x426020,0x0
  402abc:	mov    edi,DWORD PTR ds:0x426020
  402ac2:	inc    edi
  402ac3:	mov    DWORD PTR ds:0x426020,edi
  402ac9:	cmp    DWORD PTR ds:0x426020,0x6
  402ad0:	jge    0x402b0f
  402ad6:	jmp    0x402ae8
  402adb:	push   0x1
  402add:	push   0x78ce
  402ae2:	call   DWORD PTR ds:0x42cec9
  402ae8:	cmp    DWORD PTR ds:0x426020,0x5
  402aef:	jne    0x402b02
  402af5:	mov    edi,DWORD PTR ds:0x426020
  402afb:	inc    edi
  402afc:	mov    DWORD PTR ds:0x426020,edi
  402b02:	cmp    DWORD PTR ds:0x426020,0x10
  402b09:	jb     0x402abc
  402b0f:	mov    edi,DWORD PTR [ebp+0x10]
  402b12:	adc    DWORD PTR ds:0x426004,0x426000
  402b1c:	xor    eax,eax
  402b1e:	or     DWORD PTR ds:0x426028,0x427008
  402b28:	xor    ecx,edx
  402b2a:	and    DWORD PTR ds:0x42600c,0x429014
  402b34:	add    ecx,esi
  402b36:	add    edi,0xfabdbee3
  402b3c:	adc    eax,0xffffffff
  402b3f:	xor    eax,0x0
  402b42:	mov    DWORD PTR [ebp-0xc],eax
  402b45:	push   ebx
  402b46:	xor    ebx,ebx
  402b48:	xor    edi,0x8a29a131
  402b4e:	mov    eax,ecx
  402b50:	add    eax,0xfabdbee3
  402b55:	adc    ebx,0xffffffff
  402b58:	jmp    0x404edb
  402b5d:	lods   al,BYTE PTR ds:[esi]
  402b5e:	dec    ebx
  402b5f:	(bad)  
  402b60:	hlt    
  402b61:	xchg   DWORD PTR [ebp-0x56],esi
  402b64:	mov    bl,0x8a
  402b66:	pop    esp
  402b67:	ss std 
  402b69:	data16 sub al,0x8c
  402b6c:	adc    esi,DWORD PTR [eax+0x70]
  402b6f:	jo     0x402be1
  402b71:	sbb    bl,BYTE PTR [edi+0x70]
  402b74:	jo     0x402b9f
  402b76:	cs pop ss
  402b78:	cmp    eax,0x2f133915
  402b7d:	jns    0x402bb1
  402b7f:	gs adc bh,BYTE PTR fs:[eax+0x60]
  402b84:	pusha  
  402b85:	popa   
  402b86:	dec    eax
  402b87:	(bad)  
  402b89:	std    
  402b8a:	push   0x42
  402b8c:	arpl   WORD PTR [ebp+0x53],di
  402b8f:	stos   BYTE PTR es:[edi],al
  402b90:	jp     0x402bf3
  402b92:	push   ebp
  402b93:	iret   
  402b94:	push   ecx
  402b95:	inc    eax
  402b96:	cmp    cl,BYTE PTR [esi+0x577487f0]
  402b9c:	inc    ecx
  402b9d:	jg     0x402bd6
  402b9f:	mov    ah,BYTE PTR [edi+edi*2+0x2e33b8ba]
  402ba6:	jmp    DWORD PTR [esi+ebx*8-0x10]
  402baa:	imul   edi,DWORD PTR [edi+0x1c],0xffffffe1
  402bae:	xor    eax,0x87e1b0c1
  402bb3:	sub    ebx,esp
  402bb5:	and    DWORD PTR ds:0x80a3550f,0xffffffc6
  402bbc:	mul    DWORD PTR [ecx-0x2f]
  402bbf:	push   es
  402bc0:	(bad)  
  402bc1:	or     al,0xf0
  402bc3:	and    al,0x12
  402bc5:	inc    edx
  402bc6:	push   cs
  402bc7:	and    al,0x63
  402bc9:	bound  esi,QWORD PTR [ebp+0x195d2baf]
  402bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bd0:	jmp    ebp
  402bd2:	inc    ebp
  402bd3:	and    esi,DWORD PTR [esi+0x48]
  402bd6:	ret    0xf553
  402bd9:	adc    al,dh
  402bdb:	jb     0x402b9a
  402bdd:	jnp    0x402bb0
  402bdf:	xchg   edx,eax
  402be0:	pop    edi
  402be1:	cmp    DWORD PTR [ebp+0x4d981607],0xb
  402be8:	pushf  
  402be9:	mov    BYTE PTR ds:[ebx+0x6821d003],cl
  402bf0:	xor    DWORD PTR [esi],0xcffb564b
  402bf6:	and    BYTE PTR ds:0xceb7ca85,0x82
  402bfd:	ins    DWORD PTR es:[edi],dx
  402bfe:	out    0x59,al
  402c00:	push   0xb3c0e4e
  402c05:	xor    al,0x1b
  402c07:	mov    eax,ds:0x4aa7c043
  402c0c:	fiadd  DWORD PTR [esi]
  402c0e:	push   esp
  402c0f:	icebp  
  402c10:	push   0x62f5b954
  402c15:	mov    edi,0xc41358f2
  402c1a:	cmc    
  402c1b:	loopne 0x402c3d
  402c1d:	retf   0x16ec
  402c20:	fisttp DWORD PTR [ecx]
  402c22:	xlat   BYTE PTR ds:[ebx]
  402c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c24:	stos   DWORD PTR es:[edi],eax
  402c25:	sub    BYTE PTR [esi+eax*4-0x43],0x74
  402c2a:	xchg   DWORD PTR es:[ecx+eax*4+0x7a],ebx
  402c2f:	add    bl,BYTE PTR [eax+0x40]
  402c32:	iret   
  402c33:	inc    edi
  402c34:	pop    edi
  402c35:	push   es
  402c36:	push   eax
  402c37:	imul   esp,DWORD PTR [edi-0x1],0x1e
  402c3b:	inc    edx
  402c3c:	stos   BYTE PTR es:[edi],al
  402c3d:	dec    ebp
  402c3e:	xchg   BYTE PTR [ebx-0x35c1494d],cl
  402c44:	aas    
  402c45:	fdivr  DWORD PTR [edi]
  402c47:	jns    0x402c80
  402c49:	push   0x25eba35c
  402c4e:	jmp    DWORD PTR [ecx-0x3cb4f2eb]
  402c54:	pop    esp
  402c55:	lods   al,BYTE PTR ds:[esi]
  402c56:	jbe    0x402cd5
  402c58:	daa    
  402c59:	popf   
  402c5a:	jecxz  0x402c88
  402c5c:	xchg   edx,eax
  402c5d:	ins    BYTE PTR es:[edi],dx
  402c5e:	outs   dx,DWORD PTR ds:[esi]
  402c5f:	aaa    
  402c60:	pop    edi
  402c61:	hlt    
  402c62:	xchg   esi,eax
  402c63:	cmp    al,0x8
  402c65:	fist   DWORD PTR [ecx+0x60]
  402c68:	push   edi
  402c69:	xchg   edi,eax
  402c6a:	sar    edi,0xab
  402c6d:	je     0x402c92
  402c6f:	xor    cl,BYTE PTR [edi+0x1c]
  402c72:	sbb    eax,0x3a02a4a3
  402c77:	fcmovu st,st(6)
  402c79:	iret   
  402c7a:	pop    ebp
  402c7b:	aaa    
  402c7c:	mov    cl,0xe6
  402c7e:	pusha  
  402c7f:	repz push 0x71
  402c82:	adc    ax,0x9a4f
  402c86:	sti    
  402c87:	fsubr  DWORD PTR [edx]
  402c89:	gs in  eax,0xa5
  402c8c:	loopne 0x402c7a
  402c8e:	sub    edx,eax
  402c90:	pusha  
  402c91:	rol    DWORD PTR [eax+esi*1+0xa],1
  402c95:	lock out dx,al
  402c97:	scas   al,BYTE PTR es:[edi]
  402c98:	add    dl,BYTE PTR [esi-0x1]
  402c9b:	push   esi
  402c9c:	mov    cl,BYTE PTR [edi]
  402c9e:	mov    esi,0x8f983b5c
  402ca3:	(bad)  
  402ca4:	imul   BYTE PTR [edx-0x3c]
  402ca7:	int3   
  402ca8:	add    eax,0xb09e048e
  402cad:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402caf:	cli    
  402cb0:	fs in  eax,0x8d
  402cb3:	add    al,al
  402cb5:	mov    al,0xb1
  402cb7:	out    dx,al
  402cb8:	iret   
  402cb9:	and    BYTE PTR [ebx],al
  402cbb:	shl    DWORD PTR [esp+ebp*8+0x6526ca08],cl
  402cc2:	test   DWORD PTR [ecx],edi
  402cc4:	jecxz  0x402c64
  402cc6:	popa   
  402cc7:	scas   eax,DWORD PTR es:[edi]
  402cc8:	sahf   
  402cc9:	jp     0x402d41
  402ccb:	sbb    DWORD PTR [ecx-0x45],ebp
  402cce:	xor    BYTE PTR [ebx-0x58a5dc26],cl
  402cd4:	in     al,dx
  402cd5:	je     0x402c7c
  402cd7:	(bad)  
  402cd8:	and    DWORD PTR [ecx],esi
  402cda:	lods   eax,DWORD PTR ds:[si]
  402cdc:	repz pop ss
  402cde:	mov    eax,ds:0xf52da559
  402ce3:	push   gs
  402ce5:	ins    BYTE PTR es:[edi],dx
  402ce6:	or     BYTE PTR [ebx-0x2700c44c],ah
  402cec:	jle    0x402ca5
  402cee:	mov    esi,0xda49a7eb
  402cf3:	xchg   ebp,eax
  402cf4:	daa    
  402cf5:	outs   dx,DWORD PTR ds:[esi]
  402cf6:	cmp    eax,0xeff4199f
  402cfb:	or     al,0x72
  402cfd:	jmp    0xd56897b
  402d02:	pop    esi
  402d03:	push   esi
  402d04:	add    esi,edi
  402d06:	lock jmp 0xfdf3:0x27e639ba
  402d0e:	test   DWORD PTR [ecx],0x28dea410
  402d14:	out    dx,al
  402d15:	push   edi
  402d16:	mov    cl,BYTE PTR [edi-0x4741aa74]
  402d1c:	iret   
  402d1d:	das    
  402d1e:	idiv   bl
  402d20:	retf   
  402d21:	repnz loopne 0x402cb6
  402d24:	enter  0xb080,0x64
  402d28:	push   ebx
  402d29:	ds mov al,0x6b
  402d2c:	sub    ebx,edi
  402d2e:	xor    ebx,DWORD PTR [edi+0x7496f28a]
  402d34:	loopne 0x402d67
  402d36:	in     al,0xba
  402d38:	inc    ebp
  402d39:	out    0x64,al
  402d3b:	mov    esi,0x643cfd00
  402d40:	inc    ebp
  402d41:	loop   0x402d7d
  402d43:	in     eax,dx
  402d44:	mov    ebp,0x94254a30
  402d49:	test   BYTE PTR [edx-0x74],cl
  402d4c:	inc    edx
  402d4d:	pop    ebx
  402d4e:	stc    
  402d4f:	rol    eax,0xa6
  402d52:	jmp    0x667a9c60
  402d57:	fs lock pop ebp
  402d5a:	fsubr  QWORD PTR [ebp+ecx*8+0x48c08593]
  402d61:	and    al,bh
  402d63:	div    al
  402d65:	aas    
  402d66:	sub    eax,0x6f1a0ff8
  402d6b:	not    bl
  402d6d:	push   es
  402d6e:	xor    BYTE PTR [edi+0x22],ah
  402d71:	mov    edi,DWORD PTR [edi+ebx*8+0x66765588]
  402d78:	jnp    0x402da9
  402d7a:	mov    eax,0x8a666550
  402d7f:	lahf   
  402d80:	or     BYTE PTR [edx+0x4af30de2],bh
  402d86:	or     BYTE PTR [ecx],bl
  402d88:	xchg   esi,eax
  402d89:	fdiv   st(0),st
  402d8b:	dec    ebx
  402d8c:	fmulp  st(3),st
  402d8e:	enter  0x817e,0xe0
  402d92:	mov    ebx,0xff25c955
  402d97:	jne    0x402d58
  402d99:	jl     0x402d9e
  402d9b:	mov    WORD PTR [ebx+0x1a75e1bc],cs
  402da1:	fsubr  DWORD PTR [ecx+edx*1]
  402da4:	outs   dx,DWORD PTR ds:[esi]
  402da5:	dec    ebp
  402da6:	(bad)  
  402da7:	fcomi  st,st(6)
  402da9:	push   0x2649a13
  402dae:	lods   al,BYTE PTR ds:[esi]
  402daf:	out    0xea,al
  402db1:	jno    0x402e15
  402db3:	call   ebp
  402db5:	mov    bl,0xbf
  402db7:	jns    0x402d52
  402db9:	mov    fs,ecx
  402dbb:	stc    
  402dbc:	mov    bh,0xcc
  402dbe:	cdq    
  402dbf:	push   cs
  402dc0:	sub    dh,BYTE PTR [ecx]
  402dc2:	and    ecx,DWORD PTR [esi+eax*8]
  402dc5:	dec    eax
  402dc6:	xor    DWORD PTR [edi-0x17],esp
  402dc9:	or     eax,0x5b708bff
  402dce:	mov    eax,ds:0x6d7cff46
  402dd3:	mov    BYTE PTR [esi],cl
  402dd5:	xchg   DWORD PTR [ebx-0x2bbd96f2],eax
  402ddb:	mov    bl,0xd4
  402ddd:	rcr    DWORD PTR [edi+esi*1],cl
  402de0:	int    0xbd
  402de2:	mov    BYTE PTR [edi-0x74],cl
  402de5:	scas   eax,DWORD PTR es:[edi]
  402de6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402de8:	cwde   
  402de9:	ficomp DWORD PTR [edi]
  402deb:	xlat   BYTE PTR ds:[ebx]
  402dec:	mov    ecx,0xdf455b30
  402df1:	xor    al,0xc1
  402df3:	push   ebx
  402df4:	arpl   WORD PTR [edi-0x7b3bdae3],ax
  402dfa:	mov    edx,0xc5e6f64e
  402dff:	mov    dl,0x25
  402e01:	jne    0x402e26
  402e03:	jne    0x402e26
  402e05:	sahf   
  402e06:	xor    eax,0x74abd45
  402e0b:	je     0x402e77
  402e0d:	or     esi,DWORD PTR [ecx-0x23eef348]
  402e13:	(bad)  
  402e14:	push   ebp
  402e15:	stos   DWORD PTR es:[edi],eax
  402e16:	xor    dl,BYTE PTR [esi+0x6e]
  402e19:	push   ds
  402e1a:	jmp    0x402e7e
  402e1c:	mov    BYTE PTR [esi+0x5f8a40d4],bl
  402e22:	out    0xfd,al
  402e24:	bound  ebx,QWORD PTR [esi+0x5d]
  402e27:	aaa    
  402e28:	dec    esi
  402e29:	(bad)  [ebx+0xbb26c51]
  402e2f:	rcr    DWORD PTR [ebx+0x15],cl
  402e32:	xor    esp,edi
  402e34:	loopne 0x402e9e
  402e36:	push   ebx
  402e37:	sbb    eax,0xbfd9da44
  402e3c:	not    ebp
  402e3e:	xchg   BYTE PTR [edx+esi*8+0x65d49feb],al
  402e45:	pop    ss
  402e46:	sti    
  402e47:	jp     0x402dd5
  402e49:	or     DWORD PTR [edx-0x58da84ac],ebx
  402e4f:	test   BYTE PTR [eax+0x35e84006],ch
  402e55:	das    
  402e56:	ror    edx,0x44
  402e59:	xrstor [ecx]
  402e5c:	jmp    DWORD PTR [edi-0x74311c23]
  402e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e63:	sbb    dl,BYTE PTR [edx-0x61]
  402e66:	add    bh,ch
  402e68:	inc    edx
  402e69:	pusha  
  402e6a:	clc    
  402e6b:	rol    BYTE PTR [eax-0x59],0xeb
  402e6f:	mov    dl,0x5f
  402e71:	sbb    edx,edx
  402e73:	xor    al,0xe0
  402e75:	dec    ebx
  402e76:	sub    eax,0x9b7e7526
  402e7b:	jg     0x402eed
  402e7d:	and    DWORD PTR [ecx],ebp
  402e7f:	push   es
  402e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e81:	inc    eax
  402e82:	pop    edi
  402e83:	push   ss
  402e84:	xlat   BYTE PTR ds:[ebx]
  402e85:	stos   BYTE PTR es:[edi],al
  402e86:	mov    ds:0xdc661a53,al
  402e8b:	pop    ebp
  402e8c:	in     eax,0x83
  402e8e:	push   cs
  402e8f:	sbb    eax,0xacb6e8c5
  402e94:	dec    edi
  402e95:	sbb    eax,0xbb4ec58e
  402e9a:	pushf  
  402e9b:	jg     0x402ed8
  402e9d:	ds in  eax,0x7c
  402ea0:	jb     0x402e40
  402ea2:	mov    esp,0x582f02c5
  402ea7:	scas   al,BYTE PTR es:[edi]
  402ea8:	int    0x6e
  402eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eab:	push   edi
  402eac:	mov    ds:0xddf78d1b,al
  402eb1:	cmp    ebp,eax
  402eb3:	or     DWORD PTR [ecx+0x6bf01fd9],ebp
  402eb9:	cmp    ebp,DWORD PTR [eax+edi*4-0x14]
  402ebd:	test   ch,dh
  402ebf:	ja     0x402e64
  402ec1:	fs ins BYTE PTR es:[edi],dx
  402ec3:	jae    0x402e5d
  402ec5:	push   es
  402ec6:	lock add BYTE PTR [edi+0x20],ah
  402eca:	lock je 0x402f3a
  402ecd:	push   cs
  402ece:	xchg   ebx,eax
  402ecf:	fs push eax
  402ed1:	and    cl,al
  402ed3:	inc    ebp
  402ed4:	repz scas eax,DWORD PTR es:[edi]
  402ed6:	fist   DWORD PTR [edx-0x3023d731]
  402edc:	lahf   
  402edd:	fs aad 0x83
  402ee0:	sbb    DWORD PTR [ecx],0x74c7db55
  402ee6:	ins    DWORD PTR es:[edi],dx
  402ee7:	popa   
  402ee8:	mov    al,ds:0xff8b3312
  402eed:	or     al,0x4b
  402eef:	loopne 0x402e82
  402ef1:	push   ss
  402ef2:	or     edi,DWORD PTR ds:0x15950415
  402ef8:	ret    0x3fb8
  402efb:	stos   DWORD PTR es:[edi],eax
  402efc:	ret    
  402efd:	mov    esi,edi
  402eff:	int3   
  402f00:	cwde   
  402f01:	or     ebp,DWORD PTR [ebp+0x3e7d6233]
  402f07:	jle    0x402f0b
  402f09:	mov    ds:0x2ecf37c9,al
  402f0e:	(bad)  
  402f0f:	fidiv  DWORD PTR [edi]
  402f11:	mov    ch,BYTE PTR [ebx]
  402f13:	xor    bl,cl
  402f15:	call   0x3435:0x1d28af23
  402f1c:	add    esp,DWORD PTR [edx-0x3762c497]
  402f22:	aam    0xf4
  402f24:	aam    0x36
  402f26:	stos   BYTE PTR es:[edi],al
  402f27:	fidiv  DWORD PTR ds:0x9723db95
  402f2d:	fnstsw WORD PTR [ebp+0x684232c9]
  402f33:	out    0xe6,eax
  402f35:	pusha  
  402f36:	and    al,0x45
  402f38:	les    ecx,FWORD PTR [ebp+0x3f]
  402f3b:	ins    DWORD PTR es:[edi],dx
  402f3c:	xchg   edx,eax
  402f3d:	cs dec ebx
  402f3f:	shr    DWORD PTR [edx+0x72],0xb
  402f43:	mov    edi,0xf14ec764
  402f48:	sbb    eax,0x97e65b1a
  402f4d:	(bad)  
  402f4e:	cli    
  402f4f:	mov    edx,0x5f73937
  402f54:	in     eax,dx
  402f55:	mov    bh,0x8f
  402f57:	js     0x402faa
  402f59:	xor    DWORD PTR [edx+0x75],ebx
  402f5c:	stos   DWORD PTR es:[edi],eax
  402f5d:	adc    ebp,eax
  402f5f:	fcom   DWORD PTR [edx]
  402f61:	das    
  402f62:	(bad)  
  402f63:	xlat   BYTE PTR ds:[ebx]
  402f64:	adc    eax,0x89dde157
  402f69:	int    0xf5
  402f6b:	sub    eax,0xceb417ad
  402f70:	add    eax,0x51a3635d
  402f75:	loopne 0x402fe3
  402f77:	jl     0x402faa
  402f79:	lods   eax,DWORD PTR ds:[esi]
  402f7a:	nop
  402f7b:	xchg   edx,eax
  402f7c:	jne    0x402fc0
  402f7e:	fmul   st(5),st
  402f80:	cli    
  402f81:	pushf  
  402f82:	out    0x5f,al
  402f84:	ret    
  402f85:	push   es
  402f86:	scas   al,BYTE PTR es:[edi]
  402f87:	add    WORD PTR [edx],cx
  402f8a:	jg     0x402fce
  402f8c:	jb     0x402fb2
  402f8e:	xchg   ecx,eax
  402f8f:	nop
  402f90:	call   FWORD PTR ds:0xa89ec44b
  402f96:	jns    0x402f3d
  402f98:	fst    DWORD PTR [ecx]
  402f9a:	inc    esi
  402f9b:	mov    eax,0xe26d6ed7
  402fa0:	mov    bh,0x91
  402fa2:	inc    ecx
  402fa3:	in     al,dx
  402fa4:	mov    ch,0xc0
  402fa6:	nop
  402fa7:	icebp  
  402fa8:	mov    al,0x1d
  402faa:	jo     0x402fbf
  402fac:	mov    ebx,0x449a6cb4
  402fb1:	jne    0x402fa3
  402fb3:	inc    ebx
  402fb4:	mov    cl,0x22
  402fb6:	mov    al,ds:0x53593051
  402fbb:	scas   eax,DWORD PTR es:[edi]
  402fbc:	jecxz  0x402f5a
  402fbe:	dec    esp
  402fbf:	jmp    0xde4b955f
  402fc4:	div    DWORD PTR [edx+0x44]
  402fc7:	add    eax,0xe7ed3a3c
  402fcc:	retf   0x9427
  402fcf:	push   ebp
  402fd0:	mov    ds:0xf97af2d6,al
  402fd5:	clc    
  402fd6:	dec    ebx
  402fd7:	cli    
  402fd8:	xchg   ebx,eax
  402fd9:	mov    esp,0xac02d632
  402fde:	mov    eax,ds:0x7a132714
  402fe3:	cdq    
  402fe4:	pop    ecx
  402fe5:	test   eax,0xe1798e54
  402fea:	int    0xc1
  402fec:	ins    BYTE PTR es:[edi],dx
  402fed:	test   eax,0xbd54240f
  402ff2:	ret    
  402ff3:	mov    ecx,0x1f228c45
  402ff8:	dec    edi
  402ff9:	mov    edx,0x6d39e246
  402ffe:	not    DWORD PTR [eax]
  403000:	fldenv [edx+0x37d520de]
  403006:	sbb    al,0x9
  403008:	mov    ecx,es
  40300a:	push   cs
  40300b:	add    al,BYTE PTR [edi+0x1d0a67f8]
  403011:	aam    0x8
  403013:	out    dx,al
  403014:	stc    
  403015:	(bad)  
  403016:	adc    DWORD PTR ds:0xc8621015,ebx
  40301c:	adc    eax,0x61d51c94
  403021:	imul   edx,DWORD PTR [eax+0x352dcc77],0xffffffa8
  403028:	aaa    
  403029:	rol    BYTE PTR [ebp-0x66],1
  40302c:	adc    al,0x9b
  40302e:	push   esi
  40302f:	sbb    BYTE PTR [esi+0x3f],cl
  403032:	push   esi
  403033:	push   edx
  403034:	sub    eax,0xb3981330
  403039:	loope  0x40305f
  40303b:	mov    WORD PTR [esi-0x7c],?
  40303e:	rcl    BYTE PTR [esi-0x6b],cl
  403041:	inc    esi
  403042:	adc    BYTE PTR [edi-0x26],0x2d
  403046:	jl     0x402fcc
  403048:	mov    eax,ds:0x90cf54cd
  40304d:	fld    TBYTE PTR [edi-0x11]
  403050:	dec    ebp
  403051:	and    ah,BYTE PTR [esi+0x2b928f52]
  403057:	pushf  
  403058:	adc    BYTE PTR [ebx+0x34],bl
  40305b:	inc    esi
  40305c:	popf   
  40305d:	sbb    al,0xa
  40305f:	gs aas 
  403061:	rol    BYTE PTR [edx+ecx*8],0xac
  403065:	sub    DWORD PTR [ecx+esi*2+0x29139992],esp
  40306c:	gs leave 
  40306e:	jecxz  0x4030b9
  403070:	(bad)
  403074:	mov    esi,0xaba7c044
  403079:	adc    eax,0xde687771
  40307e:	jmp    0x4030f0
  403080:	and    bl,BYTE PTR [edi]
  403082:	jge    0x4030c1
  403084:	mov    edx,0xfa021b
  403089:	xor    eax,0xd6bde711
  40308e:	int3   
  40308f:	pop    ss
  403090:	aas    
  403091:	mov    es,WORD PTR es:[ebp+0x5e428e91]
  403098:	gs cmc 
  40309a:	pop    esi
  40309b:	aas    
  40309c:	fadd   DWORD PTR [edi-0x39]
  40309f:	push   0xffffff9f
  4030a1:	push   edx
  4030a2:	jae    0x4030ca
  4030a4:	cmc    
  4030a5:	sub    bl,BYTE PTR [ebx+ebp*8]
  4030a8:	jle    0x4030cb
  4030aa:	test   DWORD PTR [edx+0x4e],0x8f2ba474
  4030b1:	mov    al,0x13
  4030b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030b4:	cdq    
  4030b5:	clc    
  4030b6:	stos   DWORD PTR es:[edi],eax
  4030b7:	fild   DWORD PTR [eax]
  4030b9:	clc    
  4030ba:	(bad)  
  4030bb:	jle    0x4030ea
  4030bd:	mov    es,ebp
  4030bf:	ja     0x4030b5
  4030c1:	hlt    
  4030c2:	mov    ebp,0xb79b4e71
  4030c7:	icebp  
  4030c8:	sbb    dh,0xf1
  4030cb:	(bad)  
  4030cd:	ret    0x8521
  4030d0:	pop    edi
  4030d1:	xchg   esp,ecx
  4030d3:	jns    0x40306e
  4030d5:	mov    cl,0x5f
  4030d7:	sub    bh,BYTE PTR [edx]
  4030d9:	xor    al,0x5
  4030db:	test   al,0x3b
  4030dd:	jb     0x403129
  4030df:	add    ax,dx
  4030e2:	mov    ebp,0x5268a626
  4030e7:	xchg   edx,eax
  4030e8:	and    BYTE PTR [edx+0x13c11dcd],0x38
  4030ef:	or     eax,0x38f8b977
  4030f4:	clc    
  4030f5:	bound  edx,QWORD PTR [edi+0x7f327dc4]
  4030fb:	das    
  4030fc:	xchg   edi,eax
  4030fd:	je     0x4030ad
  4030ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403100:	fs jmp 0x2798:0xeba538d4
  403108:	mov    ch,0x8a
  40310a:	pop    eax
  40310b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40310c:	jmp    0x11ddb68d
  403111:	inc    ebp
  403112:	fild   QWORD PTR [eax-0x10]
  403115:	fiadd  WORD PTR [esi]
  403117:	cdq    
  403118:	shr    BYTE PTR [esi+0x75ef26de],1
  40311e:	cld    
  40311f:	jnp    0x403114
  403121:	jo     0x40316f
  403123:	sbb    DWORD PTR [ebx+ebx*8],edi
  403126:	not    BYTE PTR [ebp+0x3646d6c3]
  40312c:	push   eax
  40312d:	or     eax,0x1c382eaa
  403132:	xchg   esi,eax
  403133:	dec    esp
  403134:	js     0x403114
  403136:	adc    eax,DWORD PTR [edx-0x72]
  403139:	push   edx
  40313a:	mov    ebx,eax
  40313c:	cmp    ch,BYTE PTR [edi-0x65d07b3e]
  403142:	push   edi
  403143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403144:	test   al,0x37
  403146:	push   ebp
  403147:	in     eax,dx
  403148:	jns    0x4031b8
  40314a:	push   ss
  40314b:	adc    ch,0x17
  40314e:	xlat   BYTE PTR ds:[ebx]
  40314f:	and    DWORD PTR [ebp-0x39d2bff8],ebp
  403155:	cmp    ebx,esp
  403157:	mov    DWORD PTR [esi-0x5e2c80d3],ecx
  40315d:	cmp    al,BYTE PTR [ecx+0x2b]
  403160:	inc    esi
  403161:	into   
  403162:	inc    esp
  403163:	lahf   
  403164:	cmp    eax,0x92d53bad
  403169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40316b:	pop    ecx
  40316c:	sbb    al,0x41
  40316e:	and    bl,ch
  403170:	mov    ah,0xb9
  403172:	mov    bh,0x5f
  403174:	xchg   DWORD PTR ds:0xd633ba5b,esi
  40317a:	pop    ss
  40317b:	push   edx
  40317c:	mov    eax,0xe4ea68b2
  403181:	out    dx,eax
  403182:	ret    0x18a2
  403185:	inc    ebx
  403186:	(bad)  
  403187:	push   ss
  403188:	jns    0x4031cb
  40318a:	mov    al,ds:0x6eb1f33d
  40318f:	(bad)  
  403190:	cwde   
  403191:	repnz dec ebx
  403193:	inc    esi
  403194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403195:	test   BYTE PTR [esi-0x73efab2c],bl
  40319b:	pop    eax
  40319c:	out    dx,eax
  40319d:	and    BYTE PTR ds:0xda2fb697,0x41
  4031a4:	add    al,0x7b
  4031a6:	add    dl,BYTE PTR [ebx-0x1e]
  4031a9:	add    eax,0x2fbd3ed0
  4031ae:	mov    ebx,0x6b01cc48
  4031b3:	test   DWORD PTR [edi],edx
  4031b5:	out    0xd1,eax
  4031b7:	enter  0xef8d,0x64
  4031bb:	push   0xaab31555
  4031c0:	pushw  0xa540
  4031c4:	in     eax,dx
  4031c5:	out    0x79,eax
  4031c7:	pop    edi
  4031c8:	(bad)  
  4031c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031ca:	shr    BYTE PTR [esi],0x3d
  4031cd:	xchg   BYTE PTR [ecx+eiz*2-0x47a90c01],ah
  4031d4:	(bad)  
  4031d5:	pop    edx
  4031d6:	dec    esi
  4031d7:	es push es
  4031d9:	inc    esi
  4031da:	inc    edi
  4031db:	push   ecx
  4031dc:	inc    ebp
  4031dd:	inc    ax
  4031df:	scas   eax,DWORD PTR es:[edi]
  4031e0:	mov    ds:0x89f6125b,eax
  4031e5:	lock and eax,0xd4112e34
  4031eb:	xchg   ecx,eax
  4031ec:	mov    esi,0x2c2891f2
  4031f1:	mov    cs,WORD PTR [edx]
  4031f3:	sbb    bl,BYTE PTR [ebx+0x40]
  4031f6:	js     0x403199
  4031f8:	clc    
  4031f9:	mov    cs,eax
  4031fb:	(bad)  
  4031fc:	jo     0x4031ed
  4031fe:	dec    esp
  4031ff:	or     edi,esp
  403201:	outs   dx,BYTE PTR ds:[esi]
  403202:	les    eax,FWORD PTR [ecx-0x26]
  403205:	cmp    dl,bl
  403207:	mov    ch,0x3c
  403209:	xchg   ebp,eax
  40320a:	das    
  40320b:	pop    esi
  40320c:	popa   
  40320d:	mov    cl,0x7f
  40320f:	adc    ebx,DWORD PTR [edi+0x3761311c]
  403215:	inc    ecx
  403216:	cmp    bh,dl
  403218:	mov    WORD PTR [ebx-0x23],gs
  40321b:	test   ebp,esi
  40321d:	test   BYTE PTR [ecx],cl
  40321f:	push   0x7cae5914
  403224:	inc    edx
  403225:	shr    BYTE PTR [ebp+0x5a58e6b3],0x26
  40322c:	cmp    cl,BYTE PTR ds:0x9abc2e25
  403232:	mov    esi,0xf046e0cc
  403237:	sti    
  403238:	xor    ebp,edi
  40323a:	in     eax,0x43
  40323c:	mov    al,0xe6
  40323e:	push   0x926dd66b
  403243:	push   es
  403244:	mov    ebx,DWORD PTR [ebp-0x4]
  403247:	inc    ebx
  403248:	cmp    al,0x5a
  40324a:	popa   
  40324b:	div    edx
  40324d:	(bad)  
  40324f:	arpl   WORD PTR [ebp-0x60],cx
  403252:	xor    eax,ebp
  403254:	sahf   
  403255:	jne    0x4031ef
  403257:	outs   dx,BYTE PTR ds:[esi]
  403258:	xchg   bh,al
  40325a:	dec    ecx
  40325b:	mov    dl,0x6d
  40325d:	pop    edi
  40325e:	add    al,0xc1
  403260:	xor    dl,ch
  403262:	jne    0x40328d
  403264:	sub    eax,0xd62c3d5c
  403269:	and    al,0xda
  40326b:	test   edi,edx
  40326d:	in     eax,dx
  40326e:	cs xchg esp,eax
  403270:	aas    
  403271:	mov    cl,0x57
  403273:	inc    edx
  403274:	in     al,0x72
  403276:	push   0x41
  403278:	jmp    0x56c9:0x1cba9764
  40327f:	xchg   ebp,eax
  403280:	push   ds
  403281:	mov    ch,0x27
  403283:	adc    eax,0x18d495a9
  403288:	add    eax,0xe210bb7b
  40328d:	in     eax,dx
  40328e:	cdq    
  40328f:	xchg   BYTE PTR [edi-0x9f74f56],ch
  403295:	mov    al,ds:0x213b7116
  40329a:	sub    ah,dl
  40329c:	fstp   QWORD PTR [ecx+edx*2-0x1f91cc0a]
  4032a3:	push   ecx
  4032a4:	arpl   WORD PTR [esi],bx
  4032a6:	test   DWORD PTR fs:[ecx],ecx
  4032a9:	push   edx
  4032aa:	loop   0x403291
  4032ac:	js     0x40331f
  4032ae:	cmc    
  4032af:	sbb    al,0xa1
  4032b1:	lock fs jge 0x40324f
  4032b5:	pop    edx
  4032b6:	sbb    eax,0xa64c8d97
  4032bb:	dec    esi
  4032bc:	pushf  
  4032bd:	lods   eax,DWORD PTR ds:[esi]
  4032be:	xchg   ecx,eax
  4032bf:	gs mov esi,0x16025108
  4032c5:	outs   dx,DWORD PTR ds:[esi]
  4032c6:	xor    DWORD PTR [esi+0x698a6339],0xa0ec0904
  4032d0:	clc    
  4032d1:	dec    esi
  4032d2:	adc    ch,0x3c
  4032d5:	mov    esi,0xc0155228
  4032da:	iret   
  4032db:	cmc    
  4032dc:	push   eax
  4032dd:	lahf   
  4032de:	pop    esp
  4032df:	pop    edi
  4032e0:	adc    al,0x71
  4032e2:	call   0x2c29faad
  4032e7:	or     BYTE PTR [ebx-0x6d],al
  4032ea:	ds inc esp
  4032ec:	jp     0x4032ef
  4032ee:	inc    eax
  4032ef:	lods   al,BYTE PTR ds:[esi]
  4032f0:	mov    esi,0x1a6a5eeb
  4032f5:	aas    
  4032f6:	jno    0x4032c5
  4032f8:	fwait
  4032f9:	ror    DWORD PTR [eax],cl
  4032fb:	and    BYTE PTR [esi+eax*2+0x65],dh
  4032ff:	pop    eax
  403300:	aaa    
  403301:	push   esp
  403302:	mov    edi,?
  403304:	imul   esp,DWORD PTR [eax-0x9],0xffffffa5
  403308:	popa   
  403309:	jns    0x403365
  40330b:	lock ffree st(3)
  40330e:	pop    es
  40330f:	mov    ecx,0x9e780f9f
  403314:	mov    ecx,0x6b1dc63b
  403319:	pop    ecx
  40331a:	add    eax,0x6e585b05
  40331f:	div    DWORD PTR [ebx+0x2204283a]
  403325:	in     eax,0xd4
  403327:	aaa    
  403328:	sub    DWORD PTR [edx+ebx*2+0x65],ebx
  40332c:	es push ebx
  40332e:	iret   
  40332f:	(bad)  
  403330:	popf   
  403331:	pushf  
  403332:	mov    bh,0xf8
  403334:	lock pop ebx
  403336:	mov    ds:0x4b916083,al
  40333b:	or     al,0x3a
  40333d:	dec    ecx
  40333e:	cwde   
  40333f:	js     0x4032c8
  403341:	(bad)  
  403342:	shr    BYTE PTR [edi],cl
  403344:	jo     0x403366
  403346:	not    ch
  403348:	ds inc edi
  40334a:	xchg   edi,eax
  40334b:	sbb    al,0x6c
  40334d:	in     al,dx
  40334e:	sbb    ebx,esp
  403350:	dec    ecx
  403351:	lea    esp,[esi]
  403353:	jl     0x403346
  403355:	push   ds
  403356:	jne    0x403319
  403358:	mov    esp,esp
  40335a:	fcomp  QWORD PTR [esi]
  40335c:	mov    esi,DWORD PTR [ecx]
  40335e:	cmp    ebx,0x3d4ab580
  403364:	pop    eax
  403365:	inc    edi
  403366:	leave  
  403367:	mov    eax,0x318ab64
  40336c:	daa    
  40336d:	sbb    al,0x11
  40336f:	jmp    0xbb42:0xb1f81090
  403376:	int3   
  403377:	ins    BYTE PTR es:[edi],dx
  403378:	pop    ebp
  403379:	fadd   st(2),st
  40337b:	fdiv   st,st(4)
  40337d:	loopne 0x4033e2
  40337f:	retf   0x38f0
  403382:	push   edx
  403383:	adc    eax,0x8219bbfd
  403388:	cmp    DWORD PTR [ebp+0x3c],edi
  40338b:	inc    ebx
  40338c:	ror    BYTE PTR [edx+0x6ba4ded3],1
  403392:	mov    ebp,0x345967f0
  403397:	shl    edi,1
  403399:	shr    DWORD PTR [ebp-0x21],0xb3
  40339d:	mov    BYTE PTR [ebx*4+0x1c7d589f],0x98
  4033a5:	dec    esi
  4033a6:	fsub   DWORD PTR [edx+eiz*4-0x45]
  4033aa:	sub    cl,BYTE PTR [ecx+ebp*8-0x96ed677]
  4033b1:	cld    
  4033b2:	repz aad 0xa7
  4033b5:	scas   al,BYTE PTR es:[edi]
  4033b6:	mov    dh,0x25
  4033b8:	clc    
  4033b9:	(bad)  
  4033ba:	push   edx
  4033bb:	iret   
  4033bc:	in     al,0x48
  4033be:	stos   DWORD PTR es:[di],eax
  4033c0:	ja     0x40338d
  4033c2:	mov    dl,0x40
  4033c4:	aam    0x66
  4033c6:	jp     0x403424
  4033c8:	sbb    eax,0x1e29c4c6
  4033cd:	and    BYTE PTR [edi],bh
  4033cf:	push   ss
  4033d0:	mov    al,0xbc
  4033d2:	sbb    ecx,DWORD PTR [edx]
  4033d4:	fistp  QWORD PTR [edi]
  4033d6:	cld    
  4033d7:	pusha  
  4033d8:	or     al,0xf2
  4033da:	xor    DWORD PTR [ebp+0x25],ecx
  4033dd:	inc    esp
  4033de:	test   DWORD PTR [edx+0x26],edi
  4033e1:	inc    ebx
  4033e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033e3:	xor    BYTE PTR [esi+ebp*4+0x14644f6e],0x6a
  4033eb:	cli    
  4033ec:	inc    DWORD PTR [ebx-0x57]
  4033ef:	or     ah,ah
  4033f1:	lahf   
  4033f2:	loope  0x403443
  4033f4:	mov    ds:0x662f45ec,eax
  4033f9:	jb     0x403436
  4033fb:	pusha  
  4033fc:	ret    0xabbd
  4033ff:	enter  0xa58a,0x3f
  403403:	sti    
  403404:	mov    al,ds:0xb76920d1
  403409:	loope  0x40341b
  40340b:	ins    BYTE PTR es:[edi],dx
  40340c:	fwait
  40340d:	popf   
  40340e:	icebp  
  40340f:	adc    DWORD PTR [esi],edi
  403411:	data16 (bad) 
  403414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403415:	ins    BYTE PTR es:[edi],dx
  403416:	mov    ds:0xec2efc38,al
  40341b:	mov    ah,BYTE PTR [esi]
  40341d:	jae    0x403458
  40341f:	repz push edi
  403421:	mov    ah,0x3b
  403423:	adc    eax,0x976fd33b
  403428:	inc    ebp
  403429:	mov    dl,0xb3
  40342b:	std    
  40342c:	dec    esp
  40342e:	int    0xd8
  403430:	cs fsubrp st(7),st
  403433:	or     ah,BYTE PTR [ebx]
  403435:	xchg   ecx,eax
  403436:	add    eax,0x75bc3ef0
  40343b:	out    dx,al
  40343c:	sti    
  40343d:	mov    al,0x36
  40343f:	sub    al,0xa4
  403441:	neg    BYTE PTR [esp+esi*2]
  403444:	jno    0x4033f3
  403446:	sub    ebx,DWORD PTR cs:[edx+edi*2+0x46]
  40344b:	xor    eax,0x32a0ab79
  403450:	jns    0x403494
  403452:	xor    BYTE PTR [edi+0x2dca09b4],cl
  403458:	xchg   DWORD PTR [eax+0x67],ebp
  40345b:	adc    bh,0xac
  40345e:	jb     0x403466
  403460:	push   ecx
  403461:	mov    edi,DWORD PTR [eax]
  403463:	jg     0x4033ff
  403465:	adc    BYTE PTR ds:0x7f240d02,0x4
  40346c:	repnz jecxz 0x4034c0
  40346f:	inc    eax
  403470:	dec    eax
  403471:	mov    eax,0x774e23d6
  403476:	fwait
  403477:	retf   
  403478:	lock adc al,0xf6
  40347b:	fs cmp al,0x3f
  40347e:	outs   dx,BYTE PTR ds:[esi]
  40347f:	repz or DWORD PTR [ebx],ebp
  403482:	jge    0x403421
  403484:	sub    eax,0xffa3f6e8
  403489:	nop
  40348a:	shl    BYTE PTR [edi],cl
  40348c:	sbb    ah,dh
  40348e:	mov    ebx,DWORD PTR [esi-0x60]
  403491:	jo     0x40347e
  403493:	mov    ah,0xb1
  403495:	mov    ah,0xd
  403497:	data16 jecxz 0x4034a8
  40349a:	out    dx,eax
  40349b:	pop    ebx
  40349c:	pop    esp
  40349d:	sahf   
  40349e:	call   0x68f2971
  4034a3:	jmp    0x63cb1807
  4034a8:	push   ebx
  4034a9:	mov    esi,ss
  4034ab:	std    
  4034ac:	adc    edi,DWORD PTR [eax]
  4034ae:	out    dx,eax
  4034af:	in     al,dx
  4034b0:	frstor [ecx-0x63a862b]
  4034b6:	jge    0x403513
  4034b8:	rcr    BYTE PTR [esi],cl
  4034ba:	cli    
  4034bb:	jecxz  0x4034b6
  4034bd:	fld    DWORD PTR [ecx-0x39]
  4034c0:	xchg   esi,eax
  4034c1:	and    al,0xe8
  4034c3:	inc    edi
  4034c4:	adc    DWORD PTR [esi],ebx
  4034c6:	out    0x3c,eax
  4034c8:	mov    ch,ah
  4034ca:	iret   
  4034cb:	test   DWORD PTR [esi+0x4e6dc1c3],ecx
  4034d1:	pusha  
  4034d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034d3:	dec    edx
  4034d4:	cld    
  4034d5:	xlat   BYTE PTR ds:[ebx]
  4034d6:	dec    ebp
  4034d7:	dec    edi
  4034d8:	and    al,BYTE PTR [ebp-0x484c8c16]
  4034de:	xchg   edx,eax
  4034df:	mov    cl,0xfa
  4034e1:	mov    DWORD PTR ds:0xbd533c62,ebx
  4034e7:	jbe    0x403533
  4034e9:	cmc    
  4034ea:	push   0x32
  4034ec:	adc    edi,DWORD PTR [ecx+0x44]
  4034ef:	int3   
  4034f0:	std    
  4034f1:	jo     0x4034a1
  4034f3:	leave  
  4034f4:	mov    ds:0x59d47924,eax
  4034f9:	outs   dx,DWORD PTR ds:[esi]
  4034fa:	dec    eax
  4034fb:	out    dx,eax
  4034fc:	and    bh,ch
  4034fe:	pop    ss
  4034ff:	ins    BYTE PTR es:[edi],dx
  403500:	ins    BYTE PTR es:[edi],dx
  403501:	mov    ch,0x25
  403503:	pop    es
  403504:	and    eax,0x4fc66ba9
  403509:	mov    ah,0x8e
  40350b:	imul   edx,DWORD PTR [esi+0x1f082093],0x454b0091
  403515:	dec    edx
  403516:	icebp  
  403517:	push   0xffffffcd
  403519:	in     eax,dx
  40351a:	pop    edx
  40351b:	pop    eax
  40351c:	dec    ebp
  40351d:	inc    esi
  40351e:	fs jbe 0x403507
  403521:	(bad)  
  403522:	sti    
  403523:	test   dl,0x2d
  403526:	in     al,dx
  403527:	mov    ch,0x36
  403529:	mov    ds:0x2a2b45f5,eax
  40352e:	adc    ebp,DWORD PTR [ebx*8+0x2197647a]
  403535:	push   esi
  403536:	cmp    esi,esi
  403538:	jmp    0x22c2:0xf1475601
  40353f:	mov    ds:0xcb4920f4,al
  403544:	in     al,0x9d
  403546:	jp     0x40356e
  403548:	outs   dx,BYTE PTR ds:[esi]
  403549:	(bad)  
  40354a:	mov    dl,0xe4
  40354c:	xchg   edx,eax
  40354d:	inc    edx
  40354e:	add    ebp,DWORD PTR [ebx+0x4b]
  403551:	push   edi
  403552:	jb     0x40351f
  403554:	aad    0xb2
  403556:	lds    eax,FWORD PTR [ecx]
  403558:	test   bl,0xe
  40355b:	jno    0x403588
  40355d:	out    0x2f,al
  40355f:	ss inc ecx
  403561:	adc    al,BYTE PTR [esi+0x7c]
  403564:	(bad)  
  403565:	xor    eax,DWORD PTR [ebx+0x2067dc4]
  40356b:	inc    edx
  40356c:	xchg   edx,eax
  40356d:	fistp  DWORD PTR [esi]
  40356f:	dec    eax
  403570:	push   edx
  403571:	outs   dx,BYTE PTR ds:[esi]
  403572:	mov    bh,0x9c
  403574:	adc    BYTE PTR [edx+esi*1+0x18],0x22
  403579:	arpl   si,bx
  40357b:	stos   DWORD PTR es:[edi],eax
  40357c:	in     eax,0x2f
  40357e:	test   al,0xe
  403580:	push   es
  403581:	cmp    esp,DWORD PTR [esp+edx*2]
  403584:	dec    eax
  403585:	adc    BYTE PTR [esi-0x42],ah
  403588:	mov    ah,0x16
  40358a:	dec    ebx
  40358b:	ja     0x4035fb
  40358d:	cmp    DWORD PTR [ebx],edi
  40358f:	push   cs
  403590:	add    al,0x0
  403592:	add    edx,DWORD PTR [ecx+0x3a]
  403595:	ficom  DWORD PTR [edi-0x838ce2f]
  40359b:	sub    DWORD PTR [ebx],esp
  40359d:	xor    bl,dh
  40359f:	push   edi
  4035a0:	and    ebx,0x7889253d
  4035a6:	in     al,0x1c
  4035a8:	arpl   WORD PTR [ebx+ebp*4-0x62],di
  4035ac:	clc    
  4035ad:	js     0x4035f1
  4035af:	ret    0xc178
  4035b2:	clc    
  4035b3:	loopne 0x403572
  4035b5:	mov    ds:0x231c7899,al
  4035ba:	mov    bh,0xd
  4035bc:	xor    bh,bh
  4035be:	int    0xc7
  4035c0:	dec    edx
  4035c1:	push   esi
  4035c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035c3:	mov    ah,ah
  4035c5:	inc    ecx
  4035c6:	aam    0xb4
  4035c8:	rcl    dh,cl
  4035ca:	mov    ds:0xef085494,eax
  4035cf:	in     al,0xdd
  4035d1:	inc    ecx
  4035d2:	sbb    ebx,ebp
  4035d4:	dec    eax
  4035d5:	sub    al,0x9f
  4035d7:	mov    bl,0x12
  4035d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035da:	pop    ss
  4035db:	test   eax,0x4d57c800
  4035e0:	sub    eax,0xda8aa246
  4035e5:	xlat   BYTE PTR ds:[ebx]
  4035e6:	dec    ebx
  4035e7:	push   0x216ad0bf
  4035ec:	mov    WORD PTR [ebx+0x363f318],cs
  4035f2:	mov    bl,bh
  4035f4:	push   edi
  4035f5:	xchg   ebp,eax
  4035f6:	in     eax,dx
  4035f7:	cmp    bl,dh
  4035f9:	aad    0x58
  4035fb:	std    
  4035fc:	jo     0x403674
  4035fe:	pop    ebp
  4035ff:	sub    al,BYTE PTR [edx-0x16]
  403602:	hlt    
  403603:	xlat   BYTE PTR ds:[ebx]
  403604:	pop    edx
  403605:	push   0xfffffffc
  403607:	es sar al,cl
  40360a:	and    DWORD PTR [eax+0x10],esi
  40360d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40360e:	mov    ah,0xa1
  403610:	(bad)  
  403612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403613:	cwde   
  403614:	adc    eax,0xe5880c89
  403619:	add    al,0x2b
  40361b:	fidiv  DWORD PTR [esi]
  40361d:	idiv   BYTE PTR gs:[ebx+eax*8-0x234cc950]
  403625:	mov    dh,0xa8
  403627:	xchg   esp,eax
  403628:	jle    0x4035e5
  40362a:	test   eax,0x55ef60f9
  40362f:	push   es
  403630:	xchg   ebp,eax
  403631:	(bad)  [esi+0x5ce4e3b2]
  403637:	pusha  
  403638:	leave  
  403639:	push   edx
  40363a:	mov    ebx,0x6d82674f
  40363f:	aad    0x45
  403641:	inc    ebx
  403642:	aam    0xc9
  403644:	(bad)
  403647:	shl    DWORD PTR [ebp+0x1f],0xfb
  40364b:	xchg   ebx,eax
  40364c:	sar    edx,0x11
  40364f:	cmp    esi,DWORD PTR [ebx]
  403651:	test   DWORD PTR ds:0x2d1b48fc,edx
  403657:	(bad)  
  403658:	loop   0x4036b7
  40365a:	imul   edx,DWORD PTR [ebp-0x64acf698],0x8c7a109d
  403664:	xchg   DWORD PTR [ebp+0x6f],edi
  403667:	pop    ss
  403668:	inc    edx
  403669:	data16 cli 
  40366b:	and    ebp,ebx
  40366d:	pop    edx
  40366e:	ficomp WORD PTR [ebp-0x7b]
  403671:	sahf   
  403672:	jmp    0xe8fa:0x2c45a49d
  403679:	sub    dh,bh
  40367b:	lahf   
  40367c:	cmp    ah,BYTE PTR ds:0x7f56222
  403682:	mov    dh,0x43
  403684:	rcr    BYTE PTR [eax],cl
  403686:	cwde   
  403687:	add    eax,0xd6d66cc7
  40368c:	jge    0x4036c2
  40368e:	mov    esp,0x15f3fd31
  403693:	aad    0x4a
  403695:	add    DWORD PTR [eax+0x15],eax
  403698:	fimul  WORD PTR [eax-0x2e122ac5]
  40369e:	lds    ebp,FWORD PTR [edi+esi*4]
  4036a1:	addr16 retf 
  4036a3:	(bad)  
  4036a5:	aaa    
  4036a6:	adc    cl,BYTE PTR [eax+0x3a86e017]
  4036ac:	mov    cl,0x9a
  4036ae:	enter  0x7b0c,0xf8
  4036b2:	xchg   ebx,eax
  4036b3:	mov    ebp,0xdf60c106
  4036b8:	rep lods eax,DWORD PTR ds:[esi]
  4036ba:	jnp    0x403697
  4036bc:	cmp    ebp,eax
  4036be:	push   0x2f
  4036c0:	sbb    eax,0x5b847c5f
  4036c5:	cs inc edx
  4036c7:	add    ecx,esp
  4036c9:	push   es
  4036ca:	popa   
  4036cb:	out    0x6c,al
  4036cd:	ret    0xb7a4
  4036d0:	fld    QWORD PTR [esi+0x10]
  4036d3:	cmp    eax,0x34b83fcc
  4036d8:	clc    
  4036d9:	cmp    eax,0x4b522a67
  4036de:	xchg   esp,eax
  4036df:	leave  
  4036e0:	adc    al,BYTE PTR [eax+0x29aa7a51]
  4036e6:	loopne 0x4036d7
  4036e8:	dec    edi
  4036e9:	sub    eax,0x18b3248
  4036ee:	mov    ebp,0x98f43717
  4036f3:	push   es
  4036f4:	out    dx,eax
  4036f5:	nop
  4036f6:	inc    ebx
  4036f7:	ds cld 
  4036f9:	(bad)  
  4036fa:	out    dx,eax
  4036fb:	pop    eax
  4036fc:	pop    ebx
  4036fd:	mov    eax,0xd3fab279
  403702:	ds cwde 
  403704:	loopne 0x403729
  403706:	out    dx,eax
  403707:	(bad)  
  403708:	repz sub eax,0xc5e6f382
  40370e:	push   edx
  40370f:	inc    eax
  403710:	sub    DWORD PTR [ebx+0x2a],ecx
  403713:	cmp    eax,DWORD PTR [ecx]
  403715:	fimul  DWORD PTR [edx+0x7a0e060b]
  40371b:	mov    eax,ds:0x339fd642
  403720:	bound  eax,QWORD PTR [edi+ebx*8+0xd]
  403724:	or     eax,0x8fe66ea9
  403729:	inc    ebp
  40372a:	mov    ds:0xc6ab3fb6,eax
  40372f:	jp     0x40370d
  403731:	jge    0x40373b
  403733:	mov    ebx,0x952bbda6
  403738:	idiv   DWORD PTR fs:[edi+0x57]
  40373c:	jno    0x40376f
  40373e:	popf   
  40373f:	jns    0x403770
  403741:	rcr    BYTE PTR [ecx+0x75],cl
  403744:	or     eax,esi
  403746:	mov    cl,0x6
  403748:	cwde   
  403749:	pop    eax
  40374a:	mov    ds:0x8c1e4bba,eax
  40374f:	pop    ebp
  403750:	cmp    bl,BYTE PTR [ebx+0x3d]
  403753:	or     DWORD PTR [ecx-0x5a],0xd53f494c
  40375a:	sbb    esp,esi
  40375c:	push   ebp
  40375d:	xor    DWORD PTR [eax+edi*1+0x1],ecx
  403761:	jae    0x4037c0
  403763:	(bad)  
  403764:	retf   
  403765:	test   al,0x7f
  403767:	in     al,dx
  403768:	loop   0x403755
  40376a:	dec    edi
  40376b:	mov    ah,0x4a
  40376d:	pop    es
  40376e:	sub    ah,BYTE PTR [ecx-0x3752eac3]
  403774:	cdq    
  403775:	jecxz  0x403774
  403777:	ret    
  403778:	sbb    bl,ch
  40377a:	sbb    al,0x6b
  40377c:	cmp    ah,dl
  40377e:	pop    esp
  40377f:	sub    al,0x68
  403781:	lods   eax,DWORD PTR ds:[esi]
  403782:	or     ebp,ebx
  403784:	jl     0x4037f3
  403786:	xchg   edx,eax
  403787:	adc    DWORD PTR [edx+eiz*8],esi
  40378a:	rcl    DWORD PTR [esi-0x57571c6c],1
  403790:	loop   0x4037bc
  403792:	call   FWORD PTR [ebx-0x34]
  403795:	push   edi
  403796:	push   esp
  403797:	mov    eax,0x13294bc4
  40379c:	lahf   
  40379d:	pop    esi
  40379e:	cmp    DWORD PTR [ebx+0x2afac998],ecx
  4037a4:	mov    esi,DWORD PTR [eax]
  4037a6:	jmp    0x86f294e5
  4037ab:	in     eax,0x9f
  4037ad:	and    DWORD PTR [edi-0x2],edi
  4037b0:	mov    eax,ds:0x2f958d78
  4037b5:	inc    edi
  4037b6:	inc    eax
  4037b7:	adc    DWORD PTR [esi-0x618badd4],0x2affd4a5
  4037c1:	sahf   
  4037c2:	dec    ecx
  4037c3:	push   ss
  4037c4:	pop    edx
  4037c5:	inc    edx
  4037c6:	push   eax
  4037c7:	jg     0x40379f
  4037c9:	xchg   esi,eax
  4037ca:	bound  esi,QWORD PTR [esi+0x4bcd2af9]
  4037d0:	fucomi st,st(4)
  4037d2:	jecxz  0x4037c1
  4037d4:	cmp    bh,BYTE PTR [esi]
  4037d6:	lahf   
  4037d7:	dec    ebx
  4037d8:	adc    eax,0x6c45f4b6
  4037dd:	pop    ds
  4037de:	jp     0x40378f
  4037e0:	arpl   dx,bx
  4037e2:	xchg   edx,eax
  4037e3:	push   edx
  4037e4:	sti    
  4037e5:	(bad)  
  4037e6:	sti    
  4037e7:	push   ss
  4037e8:	mov    esp,cs
  4037ea:	inc    ecx
  4037eb:	repnz mov ch,0x85
  4037ee:	cmp    eax,0x6e6b7d1e
  4037f3:	int    0xe4
  4037f5:	sar    DWORD PTR [ebx+0x12],1
  4037f8:	dec    ecx
  4037f9:	add    bl,BYTE PTR [edx]
  4037fb:	push   ds
  4037fc:	jo     0x403859
  4037fe:	and    ebp,DWORD PTR [ecx-0x5c]
  403801:	and    edx,ebx
  403803:	push   esi
  403804:	inc    eax
  403805:	hlt    
  403806:	loope  0x403821
  403808:	xchg   ebp,eax
  403809:	dec    esp
  40380a:	pop    eax
  40380b:	sub    DWORD PTR [eax],0x53
  40380e:	(bad)  
  40380f:	or     dl,BYTE PTR [edi]
  403811:	inc    edx
  403812:	(bad)  
  403813:	outs   dx,BYTE PTR ds:[esi]
  403814:	add    eax,0x273ee516
  403819:	(bad)  
  40381a:	add    bh,BYTE PTR [edi-0x16]
  40381d:	xor    al,0x51
  40381f:	or     al,0xed
  403821:	mov    ecx,DWORD PTR [edx]
  403823:	inc    esi
  403824:	cdq    
  403825:	cdq    
  403826:	dec    DWORD PTR [ebp-0x4d6b57ca]
  40382c:	(bad)  
  40382d:	aad    0x28
  40382f:	pop    ebx
  403830:	stos   DWORD PTR es:[edi],eax
  403831:	jne    0x40386d
  403833:	aam    0x6a
  403835:	and    esi,ecx
  403837:	es pop ecx
  40383a:	ret    
  40383b:	in     al,dx
  40383c:	jl     0x4037e3
  40383e:	push   ecx
  40383f:	leave  
  403840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403841:	daa    
  403842:	jmp    0x4037fa
  403844:	shl    BYTE PTR [edi-0x34],0x9c
  403848:	stos   BYTE PTR es:[edi],al
  403849:	pop    edx
  40384a:	lahf   
  40384b:	and    dh,dl
  40384d:	cmp    al,0x57
  40384f:	imul   DWORD PTR [ebx-0x12d526e9]
  403855:	sbb    al,0x37
  403857:	push   ss
  403858:	push   0x763473ef
  40385d:	scas   al,BYTE PTR es:[edi]
  40385e:	add    ebp,DWORD PTR [edx-0x5b723eb5]
  403864:	retf   0x19ea
  403867:	add    BYTE PTR [esi+0x66],0x56
  40386b:	in     al,dx
  40386c:	xchg   DWORD PTR [ecx+edi*4+0x21],edi
  403870:	cmp    esp,edi
  403872:	sbb    BYTE PTR [ecx-0x41],bl
  403875:	jl     0x40388f
  403877:	push   esi
  403878:	pop    ds
  403879:	add    eax,0xf6b950a8
  40387e:	aad    0x69
  403880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403881:	hlt    
  403882:	sti    
  403883:	or     DWORD PTR [esi+0x2d3919],ebx
  403889:	dec    esi
  40388a:	pop    ds
  40388b:	xor    ch,BYTE PTR [edi+0x16]
  40388e:	sbb    ah,al
  403890:	in     al,dx
  403891:	sub    DWORD PTR [ebx],edx
  403893:	sub    DWORD PTR [esi-0x5f],edi
  403896:	imul   BYTE PTR [eax]
  403898:	sahf   
  403899:	mov    dl,0xc5
  40389b:	sbb    dh,dh
  40389d:	inc    edi
  40389e:	jbe    0x403905
  4038a0:	(bad)  
  4038a1:	cwde   
  4038a2:	xor    BYTE PTR [ecx-0x55bf5f9b],ch
  4038a8:	and    al,0xdd
  4038aa:	sbb    eax,0xefa8084e
  4038af:	jne    0x403858
  4038b1:	int    0x1a
  4038b3:	xchg   ecx,eax
  4038b4:	mov    ecx,0x51ac9804
  4038b9:	imul   DWORD PTR [ecx]
  4038bb:	inc    esi
  4038bc:	dec    ebp
  4038bd:	mov    ah,0xcd
  4038bf:	push   edi
  4038c0:	pop    edi
  4038c1:	push   edx
  4038c2:	xor    eax,0xa47b9926
  4038c7:	mov    eax,ds:0x409bc1c8
  4038cc:	mov    ds:0xe119ce40,al
  4038d1:	data16 out 0xc7,al
  4038d4:	jmp    0x9719e0fa
  4038d9:	lock retf 0xb60d
  4038dd:	ins    DWORD PTR es:[edi],dx
  4038de:	inc    eax
  4038df:	xor    ebp,DWORD PTR [ecx+0x77]
  4038e2:	cmp    ecx,DWORD PTR [ebx+0x318aec0e]
  4038e8:	imul   eax,DWORD PTR [edi],0x86a65d89
  4038ee:	rol    BYTE PTR [ebx],cl
  4038f0:	xchg   esi,eax
  4038f1:	test   BYTE PTR [ecx],0xf8
  4038f4:	lods   al,BYTE PTR ds:[esi]
  4038f5:	push   ebp
  4038f6:	test   BYTE PTR [ebp-0x2ee08efd],cl
  4038fc:	cmp    bl,cl
  4038fe:	xor    ecx,DWORD PTR [eax]
  403900:	lods   al,BYTE PTR ds:[esi]
  403901:	mov    dl,0x4b
  403903:	addr16 adc edi,esi
  403906:	aam    0xc7
  403908:	(bad)  
  403909:	sbb    BYTE PTR [ebx+0x596fed9a],cl
  40390f:	push   edx
  403910:	iret   
  403911:	mov    ds:0x33d43a18,al
  403916:	jl     0x40393a
  403918:	or     dl,BYTE PTR [edi+eax*4-0x603e56a3]
  40391f:	mov    al,ds:0x29aae751
  403924:	and    esp,esi
  403926:	jae    0x4038b9
  403928:	cmp    al,0x39
  40392a:	sar    DWORD PTR [ebx],cl
  40392c:	ins    DWORD PTR es:[edi],dx
  40392d:	and    al,0xcc
  40392f:	push   esi
  403930:	xchg   ebx,esi
  403932:	cmp    DWORD PTR [edx+0x659ba4d5],0xffffffc5
  403939:	sub    esi,eax
  40393b:	push   ebp
  40393c:	and    eax,0xfbd7e1ac
  403941:	icebp  
  403942:	loopne 0x4038d9
  403944:	push   DWORD PTR [eax+0x28]
  403947:	mov    edi,0xd19a7ce8
  40394c:	daa    
  40394d:	adc    DWORD PTR [eax-0x34],edx
  403950:	scas   eax,DWORD PTR es:[edi]
  403951:	xor    al,0x23
  403953:	jl     0x40394f
  403955:	xchg   BYTE PTR [edx],ah
  403957:	jb     0x40399a
  403959:	inc    eax
  40395a:	(bad)  
  40395b:	and    al,BYTE PTR [ebp+0x59b9ff21]
  403961:	fwait
  403962:	int3   
  403963:	jecxz  0x4038f8
  403965:	ins    DWORD PTR es:[edi],dx
  403966:	in     al,dx
  403967:	inc    edi
  403968:	jo     0x403932
  40396a:	mov    ds:0xd67302b6,eax
  40396f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403970:	scas   al,BYTE PTR es:[edi]
  403971:	fdiv   st,st(1)
  403973:	or     BYTE PTR [ebx],al
  403975:	popf   
  403976:	das    
  403977:	(bad)  
  403979:	jnp    0x403938
  40397b:	iret   
  40397c:	enter  0x870a,0xd5
  403980:	popa   
  403981:	pop    es
  403982:	dec    ebx
  403983:	push   es
  403984:	data16 data16 mov BYTE PTR [ecx],dh
  403988:	jbe    0x4039f6
  40398a:	or     al,0xf1
  40398c:	add    ebp,ebx
  40398e:	hlt    
  40398f:	jmp    0xfde0b468
  403994:	inc    eax
  403995:	popa   
  403996:	jne    0x40397e
  403998:	and    DWORD PTR [esi+0x4e974bd7],0xffffffb2
  40399f:	in     eax,0x58
  4039a1:	jg     0x40392d
  4039a3:	inc    ebp
  4039a4:	pop    edx
  4039a5:	jge    0x4039ec
  4039a7:	bound  ebx,QWORD PTR [eax+ecx*4]
  4039aa:	ja     0x403a23
  4039ac:	stos   BYTE PTR es:[edi],al
  4039ad:	fwait
  4039ae:	cmp    bh,BYTE PTR [eax+0x76]
  4039b1:	(bad)  
  4039b2:	dec    ecx
  4039b3:	out    0x10,al
  4039b5:	cdq    
  4039b6:	sbb    cl,ah
  4039b8:	outs   dx,DWORD PTR ds:[esi]
  4039b9:	cmp    eax,0xc59017b9
  4039be:	shl    DWORD PTR [eax+0x6dfac20d],1
  4039c4:	xchg   esi,eax
  4039c5:	and    BYTE PTR [ecx+0x2303a935],al
  4039cb:	jle    0x40397d
  4039cd:	sti    
  4039ce:	fiadd  WORD PTR gs:[edx]
  4039d1:	dec    eax
  4039d2:	inc    esp
  4039d3:	xchg   esp,eax
  4039d4:	mov    ebx,0x4bc3cf95
  4039d9:	call   0x59eec43e
  4039de:	icebp  
  4039df:	daa    
  4039e0:	loope  0x4039d6
  4039e2:	ins    BYTE PTR es:[edi],dx
  4039e3:	cdq    
  4039e4:	push   ds
  4039e5:	mov    esp,0x213d2c00
  4039ea:	out    dx,al
  4039eb:	or     al,0x18
  4039ed:	sbb    ebp,ecx
  4039ef:	loop   0x403a5e
  4039f1:	idiv   BYTE PTR [edx+0x64]
  4039f4:	inc    eax
  4039f5:	jnp    0x4039b0
  4039f7:	popa   
  4039f8:	jne    0x403a42
  4039fa:	cmc    
  4039fb:	add    DWORD PTR ds:0xd80c0339,ebp
  403a01:	jo     0x403a76
  403a03:	add    eax,0x9b85eb21
  403a08:	daa    
  403a09:	mov    eax,0xd6db4b24
  403a0e:	hlt    
  403a0f:	sbb    al,0xfb
  403a11:	inc    eax
  403a12:	mov    BYTE PTR [edx-0x5f5bfebc],dh
  403a18:	adc    ah,BYTE PTR [edx]
  403a1a:	repnz mov bl,0xb3
  403a1d:	sbb    BYTE PTR [ebx+0x4fc2011f],ah
  403a23:	lods   eax,DWORD PTR ds:[esi]
  403a24:	(bad)  
  403a25:	fcom   QWORD PTR [eax-0x612fda0f]
  403a2b:	test   DWORD PTR [eax+0x31],edx
  403a2e:	gs jl  0x403a27
  403a31:	cvtpi2ps xmm1,QWORD PTR [edx+0xdffe416]
  403a38:	out    dx,eax
  403a39:	and    eax,DWORD PTR [esi-0x6fa4b9e8]
  403a3f:	cld    
  403a40:	sbb    eax,0x5faf04c1
  403a45:	ror    DWORD PTR [ecx+edi*8+0x1d],1
  403a49:	mov    dl,0x47
  403a4b:	sub    ebp,DWORD PTR [esi]
  403a4d:	(bad)  [eax+0x2d7e0d7f]
  403a53:	xor    eax,0x1c433b23
  403a58:	leave  
  403a59:	push   ss
  403a5a:	or     al,0x31
  403a5c:	(bad)  
  403a5d:	or     al,0x2f
  403a5f:	gs in  eax,dx
  403a61:	fcom   QWORD PTR [ebx-0x6a]
  403a64:	xor    DWORD PTR [eax],esp
  403a66:	mov    dh,0x6c
  403a68:	pop    ebp
  403a69:	pop    esi
  403a6a:	add    eax,0xc8b9e125
  403a6f:	mov    esp,DWORD PTR [ecx-0x29]
  403a72:	call   ebp
  403a74:	jbe    0x403ace
  403a76:	push   edx
  403a77:	push   esi
  403a78:	sahf   
  403a79:	adc    eax,0xd4144cc3
  403a7e:	or     ebx,0x8dc6d51d
  403a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a85:	shr    BYTE PTR [eax],cl
  403a87:	rdpmc  
  403a89:	or     DWORD PTR [ecx],ebx
  403a8b:	mov    ebx,0xe05c592c
  403a90:	push   ebx
  403a91:	xchg   esi,eax
  403a92:	mov    edx,0x3a61c246
  403a97:	lock (bad) 
  403a99:	mov    bl,0x1e
  403a9b:	mov    eax,0x725daf2e
  403aa0:	es and bl,cl
  403aa3:	clc    
  403aa4:	xchg   ebx,eax
  403aa5:	aaa    
  403aa6:	adc    DWORD PTR [ebx+0x39],ebx
  403aa9:	bound  edx,QWORD PTR [esi+0x78]
  403aac:	jnp    0x403b0a
  403aae:	add    esp,DWORD PTR [edx]
  403ab0:	and    eax,0xd251c730
  403ab5:	sbb    BYTE PTR [edx+edi*1+0x3edc0d28],dl
  403abc:	test   al,0x75
  403abe:	or     DWORD PTR [ebx+0x4c],esp
  403ac1:	ins    DWORD PTR es:[edi],dx
  403ac2:	dec    edx
  403ac3:	jecxz  0x403a60
  403ac5:	xchg   ebx,eax
  403ac6:	nop
  403ac7:	xor    al,0x19
  403ac9:	cs aaa 
  403acb:	xor    al,0xed
  403acd:	cmp    esp,DWORD PTR [ebp-0xf]
  403ad0:	cmp    eax,0x62a1c8c1
  403ad5:	xor    dh,al
  403ad7:	inc    ecx
  403ad8:	jae    0x403a7c
  403ada:	push   ss
  403adb:	sahf   
  403adc:	inc    edi
  403add:	dec    ebx
  403ade:	sahf   
  403adf:	lock pusha 
  403ae1:	(bad)  [esi]
  403ae3:	inc    edx
  403ae4:	mov    WORD PTR [edi-0x1b],?
  403ae7:	or     esi,DWORD PTR [ecx-0x58bd7201]
  403aed:	test   BYTE PTR ss:[edi],0x10
  403af1:	jmp    0x3b28:0x67604f5b
  403af8:	fidivr WORD PTR [eax+0x5a44ac25]
  403afe:	adc    BYTE PTR ds:0x32db478e,bh
  403b04:	and    eax,0x6c1d60a8
  403b09:	(bad)  
  403b0a:	jno    0x403b56
  403b0c:	mov    bh,0x2
  403b0e:	and    ebx,esp
  403b10:	add    dh,BYTE PTR [esi]
  403b12:	cmp    bl,BYTE PTR [eax+esi*4+0x797eb7d7]
  403b19:	jmp    0x403b68
  403b1b:	(bad)  
  403b1c:	in     al,0x50
  403b1e:	aas    
  403b1f:	jge    0x403af7
  403b21:	push   0x11077405
  403b26:	mov    bh,0x8e
  403b28:	xchg   edx,eax
  403b29:	jo     0x403b2c
  403b2b:	sub    ecx,edi
  403b2d:	push   edi
  403b2e:	pop    edx
  403b2f:	(bad)  
  403b30:	jge    0x403ad9
  403b32:	push   ebp
  403b33:	pop    esp
  403b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b35:	pop    edi
  403b36:	and    al,0xfb
  403b38:	pop    ebx
  403b39:	inc    esp
  403b3a:	cli    
  403b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b3c:	xchg   ebp,eax
  403b3d:	xor    ecx,DWORD PTR [esi-0x5a]
  403b40:	xchg   edi,eax
  403b41:	shl    ecx,1
  403b43:	nop
  403b44:	and    esi,DWORD PTR [edi+esi*4+0x129927fd]
  403b4b:	dec    ebx
  403b4c:	fiadd  DWORD PTR ds:[ecx-0x3e]
  403b50:	je     0x403b81
  403b52:	push   eax
  403b53:	call   0xb2ae3e13
  403b58:	xchg   ebx,eax
  403b59:	inc    ebp
  403b5a:	lock sub bh,BYTE PTR [edx+esi*4]
  403b5e:	push   ss
  403b5f:	mov    ebx,eax
  403b61:	jo     0x403b87
  403b63:	mov    ds:0x7e818fa1,eax
  403b68:	push   es
  403b69:	adc    eax,0x56aa32f5
  403b6e:	outs   dx,BYTE PTR ds:[esi]
  403b6f:	mov    bl,0xe7
  403b71:	sbb    BYTE PTR [eax],bh
  403b73:	dec    edx
  403b75:	adc    BYTE PTR [ebx+0xea4355a],0xca
  403b7c:	adc    DWORD PTR [edx],esp
  403b7e:	and    eax,0xed8e9e05
  403b83:	retf   0xb427
  403b86:	popf   
  403b87:	jae    0x403bed
  403b89:	xor    BYTE PTR [ebx-0x332d335b],ah
  403b8f:	in     eax,dx
  403b90:	xlat   BYTE PTR ds:[ebx]
  403b91:	cs adc eax,0xaae8f5cf
  403b97:	xor    BYTE PTR [ecx-0x67d603f7],bh
  403b9d:	and    al,0xbf
  403b9f:	push   ecx
  403ba0:	es test eax,0xabb5f473
  403ba6:	loop   0x403b7e
  403ba8:	mov    esi,0xb287f714
  403bad:	(bad)  
  403bae:	jmp    FWORD PTR [ebx+ebx*2+0x67bb98b3]
  403bb5:	push   ss
  403bb6:	call   0x5289:0x1b272f29
  403bbd:	dec    ecx
  403bbe:	pop    ebx
  403bbf:	sub    eax,0x12487747
  403bc4:	inc    esp
  403bc5:	add    BYTE PTR [eax+ebx*8],dh
  403bc8:	out    0xb0,al
  403bca:	inc    ebx
  403bcb:	or     ecx,esp
  403bcd:	test   eax,0xb3cee419
  403bd2:	lea    ecx,[esi-0x41a9921f]
  403bd8:	push   ebp
  403bd9:	sti    
  403bda:	sub    edi,DWORD PTR [ecx+0x7f]
  403bdd:	sbb    eax,0xc1326522
  403be2:	ss pop eax
  403be4:	ret    
  403be5:	cli    
  403be6:	sbb    BYTE PTR [eax+0x13],ch
  403be9:	adc    dl,BYTE PTR [eiz*2+0x6a0cae8]
  403bf0:	jbe    0x403bdc
  403bf2:	aad    0x71
  403bf4:	(bad)  
  403bf5:	sbb    BYTE PTR [ebx],ah
  403bf7:	mov    eax,0x9b46a18e
  403bfc:	fld    TBYTE PTR [ecx]
  403bfe:	js     0x403c04
  403c00:	and    dl,BYTE PTR [ecx-0x61b5d549]
  403c06:	cwde   
  403c07:	pop    eax
  403c08:	xchg   ebx,eax
  403c09:	fstp   QWORD PTR [eax-0x1f]
  403c0c:	adc    al,0xa1
  403c0e:	cmp    al,0x5f
  403c10:	cmp    al,BYTE PTR [edx]
  403c12:	add    cl,BYTE PTR [edi+0x351b8461]
  403c18:	data16 mov bh,0x5f
  403c1b:	(bad)  
  403c1d:	fst    QWORD PTR [esi+0x1b839080]
  403c23:	scas   eax,DWORD PTR es:[edi]
  403c24:	cmc    
  403c25:	dec    esi
  403c26:	push   cs
  403c27:	add    eax,DWORD PTR [esi+0x72e458fe]
  403c2d:	fidivr WORD PTR [eax-0x62]
  403c30:	clc    
  403c31:	mov    edx,0x9d629db1
  403c36:	inc    ecx
  403c37:	adc    ah,BYTE PTR [ebx-0x6634e837]
  403c3d:	sbb    BYTE PTR [esi*2+0x6c83c696],cl
  403c44:	mov    bh,0x4c
  403c46:	sbb    eax,edi
  403c48:	adc    ebx,DWORD PTR [ebx-0x29c7df0c]
  403c4e:	sub    eax,0x29f2f7ab
  403c53:	cmp    eax,0x69ab69e6
  403c58:	sbb    BYTE PTR [ecx+0x2d08b15b],0xb0
  403c5f:	and    ah,BYTE PTR [edx]
  403c61:	aaa    
  403c62:	int    0x74
  403c64:	mov    ah,0x5a
  403c66:	push   esi
  403c67:	sti    
  403c68:	cdq    
  403c69:	sbb    DWORD PTR [ebx+edi*8+0xc],0x62
  403c6e:	inc    eax
  403c6f:	push   ebp
  403c70:	stos   DWORD PTR es:[edi],eax
  403c71:	das    
  403c72:	push   ebx
  403c73:	jno    0x403c4e
  403c75:	fld    DWORD PTR [ebx-0x396d49eb]
  403c7b:	(bad)  
  403c7c:	mov    BYTE PTR [ebp+0x2],dl
  403c7f:	mov    al,ds:0x3324f1f
  403c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c85:	fstp   QWORD PTR [edx-0x4399bb43]
  403c8b:	mov    ch,cl
  403c8d:	xchg   ecx,eax
  403c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c8f:	adc    dl,BYTE PTR [ebx-0x4d69bd6f]
  403c95:	and    BYTE PTR [eax-0xc],dl
  403c98:	(bad)  
  403c99:	aaa    
  403c9a:	sbb    al,BYTE PTR ds:0xe71cdf71
  403ca0:	xor    BYTE PTR [ebp+0x16],0x2b
  403ca4:	add    ch,ch
  403ca6:	daa    
  403ca7:	mov    ds:0x8ce6a6ff,al
  403cac:	cmp    al,dl
  403cae:	stos   DWORD PTR es:[edi],eax
  403caf:	pop    ebp
  403cb0:	push   ss
  403cb1:	stc    
  403cb2:	out    0xa,eax
  403cb4:	xchg   edi,eax
  403cb5:	test   eax,ecx
  403cb7:	pop    edx
  403cb8:	dec    ecx
  403cb9:	mov    ebp,0x5282acbd
  403cbe:	xchg   ecx,eax
  403cbf:	ret    0x236c
  403cc2:	dec    ebx
  403cc3:	clc    
  403cc4:	dec    esp
  403cc5:	cmp    eax,0xd19c1cc2
  403cca:	enter  0x6753,0x3a
  403cce:	add    DWORD PTR [edx],0x157c1a31
  403cd4:	not    DWORD PTR [eax]
  403cd6:	mov    ds:0x9b62e146,al
  403cdb:	into   
  403cdc:	mov    edi,0x5c76c3c
  403ce1:	fisttp QWORD PTR [eax]
  403ce3:	ins    BYTE PTR es:[edi],dx
  403ce4:	repz pop ss
  403ce6:	and    BYTE PTR [esi],0x48
  403ce9:	nop
  403cea:	(bad)  
  403ceb:	sbb    BYTE PTR [ecx-0x58],ah
  403cee:	push   eax
  403cef:	dec    ebp
  403cf0:	fdivr  QWORD PTR [edx-0x2b99cc8a]
  403cf6:	fcmovnbe st,st(7)
  403cf8:	xor    BYTE PTR [edx],bh
  403cfa:	sbb    al,BYTE PTR [esi]
  403cfc:	ds fwait
  403cfe:	mov    ds:0x2eb7f5ed,eax
  403d03:	(bad)  
  403d04:	and    ebp,eax
  403d06:	fist   DWORD PTR [edx]
  403d08:	mov    eax,0x573010cb
  403d0d:	repnz mov ebp,0x69b994eb
  403d13:	ret    0x6984
  403d16:	mov    bl,0x20
  403d18:	int    0xb7
  403d1a:	je     0x403d6f
  403d1c:	cmp    eax,0xfad419b9
  403d21:	xchg   ebx,eax
  403d22:	sub    al,0x10
  403d24:	gs lahf 
  403d26:	inc    eax
  403d27:	jnp    0x403d4c
  403d29:	pop    ds
  403d2a:	fistp  QWORD PTR [ebx-0x6d]
  403d2d:	pop    esi
  403d2e:	(bad)  
  403d2f:	push   es
  403d30:	cmc    
  403d31:	hlt    
  403d32:	add    eax,0x71f97fa1
  403d37:	fldenv [edx+0x969fe67]
  403d3d:	aas    
  403d3e:	sub    cl,BYTE PTR [edx-0x29]
  403d41:	or     ch,BYTE PTR [esi-0x743eb437]
  403d47:	xchg   ecx,eax
  403d48:	rcr    BYTE PTR [edx],1
  403d4a:	pushf  
  403d4b:	(bad)  
  403d4c:	enter  0x8229,0xd
  403d50:	stos   DWORD PTR es:[edi],eax
  403d51:	hlt    
  403d52:	cmp    al,0x6d
  403d54:	mov    al,ds:0x5d9deec8
  403d59:	add    edx,eax
  403d5b:	enter  0x40eb,0xf4
  403d5f:	mov    al,0x71
  403d61:	leave  
  403d62:	cld    
  403d63:	and    ebp,DWORD PTR [ebp+0x34169b91]
  403d69:	mov    al,ds:0x27b60ba8
  403d6e:	jae    0x403db5
  403d70:	mov    esp,0x92bd71b0
  403d75:	mov    ebp,ebx
  403d77:	mov    dl,0xc0
  403d79:	inc    ebx
  403d7a:	or     eax,0xecf2bb2a
  403d7f:	clc    
  403d80:	fsub   DWORD PTR [edi]
  403d82:	add    al,0xe3
  403d84:	test   al,0x70
  403d86:	inc    edi
  403d87:	pop    es
  403d88:	popa   
  403d89:	inc    ebp
  403d8a:	adc    bl,al
  403d8c:	inc    esi
  403d8d:	add    BYTE PTR [esi-0x1408d34e],bl
  403d93:	pop    ebx
  403d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d95:	sbb    DWORD PTR [esi+ecx*4+0x51],edx
  403d99:	or     al,0x7b
  403d9b:	jmp    0xb4a800d9
  403da0:	out    0xe1,al
  403da2:	out    0x84,al
  403da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403da5:	cdq    
  403da6:	sbb    ah,BYTE PTR [edx+0x7edded36]
  403dac:	jb     0x403d49
  403dae:	std    
  403daf:	jb     0x403d66
  403db1:	mov    al,ch
  403db3:	scas   al,BYTE PTR es:[edi]
  403db4:	mov    dh,0x8b
  403db6:	in     eax,dx
  403db7:	icebp  
  403db8:	scas   al,BYTE PTR es:[edi]
  403db9:	push   ebx
  403dba:	and    BYTE PTR [edi],ch
  403dbc:	pop    eax
  403dbd:	loopne 0x403e33
  403dbf:	push   esi
  403dc0:	jge    0x403e1a
  403dc2:	aaa    
  403dc3:	sti    
  403dc4:	adc    BYTE PTR [ecx],bh
  403dc6:	es push 0xffffff8f
  403dc9:	add    dh,BYTE PTR [edi+0x36]
  403dcc:	aad    0x3
  403dce:	xor    dh,bh
  403dd0:	cmc    
  403dd1:	mov    esi,0x209578da
  403dd6:	dec    esi
  403dd7:	xchg   ebp,eax
  403dd8:	cld    
  403dd9:	sti    
  403dda:	imul   esi,ecx,0x2a
  403ddd:	inc    eax
  403dde:	mov    DWORD PTR [ebx-0x643f695],edi
  403de4:	jp     0x403e13
  403de6:	fwait
  403de7:	rcl    BYTE PTR [ebx-0x38c28873],0xb9
  403dee:	inc    esi
  403def:	cmc    
  403df0:	out    dx,eax
  403df1:	jno    0x403d99
  403df3:	pop    ss
  403df4:	jae    0x403e5b
  403df6:	(bad)  
  403df7:	cli    
  403df8:	xchg   edx,eax
  403df9:	je     0x403dfe
  403dfb:	jb     0x403e38
  403dfd:	in     al,dx
  403dfe:	leave  
  403dff:	fwait
  403e00:	jb     0x403d89
  403e02:	pop    ecx
  403e03:	or     eax,0xf80e1c36
  403e08:	xchg   esp,eax
  403e09:	scas   eax,DWORD PTR es:[edi]
  403e0a:	(bad)  
  403e0b:	fdiv   QWORD PTR [ebp-0xc6c108f]
  403e11:	jbe    0x403dd3
  403e13:	xor    al,0x8a
  403e15:	sbb    ch,ch
  403e17:	lds    ebx,FWORD PTR [edx-0x17]
  403e1a:	call   0x4b00ba66
  403e1f:	xlat   BYTE PTR ds:[ebx]
  403e20:	add    BYTE PTR [edx],cl
  403e22:	xor    edx,ebp
  403e24:	call   0xc971:0x2d489863
  403e2b:	mov    ah,0x58
  403e2d:	jge    0x403dbb
  403e2f:	idiv   DWORD PTR [eax+0x38c80078]
  403e35:	mov    edi,0x2b6b2767
  403e3a:	mov    bh,0x6e
  403e3c:	or     dh,dh
  403e3e:	(bad)  [eax+0x48be40a]
  403e44:	or     dh,BYTE PTR [edi]
  403e46:	adc    BYTE PTR [eax-0x40],0x60
  403e4a:	pusha  
  403e4b:	jno    0x403e2b
  403e4d:	add    ch,ch
  403e4f:	jle    0x403e5e
  403e51:	loop   0x403e6d
  403e53:	jno    0x403dde
  403e55:	add    DWORD PTR [edx+0x22dad751],esp
  403e5b:	ds push edx
  403e5d:	dec    ecx
  403e5e:	scas   al,BYTE PTR es:[edi]
  403e5f:	pop    ecx
  403e60:	mov    edi,0xddc41c0f
  403e65:	scas   al,BYTE PTR es:[edi]
  403e66:	sti    
  403e67:	push   ds
  403e68:	mov    bl,0x47
  403e6a:	je     0x403ed7
  403e6c:	inc    BYTE PTR [esp+ebp*8+0x1dbd27fb]
  403e73:	mov    al,0x6f
  403e75:	mov    ebx,0x62e056c6
  403e7a:	pop    ebp
  403e7b:	packssdw mm0,QWORD PTR [edi+esi*4]
  403e7f:	push   ebx
  403e80:	loop   0x403e46
  403e82:	daa    
  403e83:	mov    ah,0xde
  403e85:	push   es
  403e86:	test   ecx,ebp
  403e88:	mov    cl,0x32
  403e8a:	ror    BYTE PTR [ecx-0x4161120e],cl
  403e90:	pop    edx
  403e91:	stos   BYTE PTR es:[edi],al
  403e92:	addr16 adc ecx,0x89c8d297
  403e99:	loope  0x403e5c
  403e9b:	mov    ebp,0x3238f7b2
  403ea0:	push   ds
  403ea1:	inc    edx
  403ea2:	out    0x90,al
  403ea4:	adc    DWORD PTR [esi+ebx*1-0x46],esp
  403ea8:	push   ds
  403ea9:	adc    ebp,DWORD PTR [edi]
  403eab:	pop    ecx
  403eac:	push   ebp
  403ead:	lds    esi,FWORD PTR [ebp-0x29720c96]
  403eb3:	mov    al,al
  403eb5:	mov    esp,DWORD PTR [esi]
  403eb7:	addr16 mov ebp,0xd7b548a8
  403ebd:	xor    DWORD PTR [ebp-0x6f],esi
  403ec0:	rol    DWORD PTR [ebp-0x79],cl
  403ec3:	push   es
  403ec4:	jae    0x403f1d
  403ec6:	mov    edi,0x956ac7f7
  403ecb:	sub    eax,DWORD PTR [ebx+0x5c573c3c]
  403ed1:	mov    esp,0x4c2e3928
  403ed6:	sbb    BYTE PTR [edi+0x133e4b4d],dh
  403edc:	mov    eax,ds:0xbbaa79fa
  403ee1:	push   ds
  403ee2:	sar    eax,cl
  403ee4:	push   edx
  403ee5:	or     ebp,ebx
  403ee7:	mov    esp,0xf5361138
  403eec:	outs   dx,BYTE PTR ds:[esi]
  403eed:	mov    bh,BYTE PTR [ecx+0x6495b5c7]
  403ef3:	pop    edi
  403ef4:	iret   
  403ef5:	pushf  
  403ef6:	adc    al,0x5c
  403ef8:	xchg   edi,eax
  403ef9:	cmp    eax,DWORD PTR [edx+edi*1+0x695b2b58]
  403f00:	leave  
  403f01:	pop    edi
  403f02:	push   eax
  403f03:	ja     0x403f76
  403f05:	pop    ebx
  403f06:	ja     0x403e8c
  403f08:	lods   eax,DWORD PTR ds:[esi]
  403f09:	add    esi,DWORD PTR [esi]
  403f0b:	adc    BYTE PTR [eax],0x89
  403f0e:	ss mov esi,0x3b44d747
  403f14:	xchg   DWORD PTR [ebp+ebp*4-0x2b],ebx
  403f18:	pop    ds
  403f19:	mov    edx,0x1104a0d2
  403f1e:	arpl   WORD PTR [esi+edx*2-0x2dd9cf72],bx
  403f25:	inc    esp
  403f26:	fld    TBYTE PTR [eax+0x62]
  403f2a:	(bad)  
  403f2c:	sbb    edi,DWORD PTR [eax+0x6a]
  403f2f:	test   BYTE PTR [ebx+ebp*1-0x4e],bh
  403f33:	xor    DWORD PTR cs:[ebp+0x69],ebp
  403f37:	jb     0x403f0b
  403f39:	arpl   WORD PTR [ebp+0x2f],bx
  403f3c:	inc    ebx
  403f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f3e:	mov    ecx,0xecfe6c72
  403f43:	arpl   WORD PTR [ecx-0x30],bx
  403f46:	adc    eax,0x577f6533
  403f4b:	nop
  403f4c:	inc    eax
  403f4d:	mov    DWORD PTR [eax],ebp
  403f4f:	sub    BYTE PTR [ecx-0x31a4627e],ch
  403f55:	(bad)
  403f59:	mov    ah,BYTE PTR ds:0x8c7a1935
  403f5f:	xor    BYTE PTR [eax+0x55],cl
  403f62:	nop
  403f63:	add    ecx,DWORD PTR [ebx-0x34f54a89]
  403f69:	nop
  403f6a:	enter  0xb514,0xdf
  403f6e:	bound  eax,QWORD PTR [esi-0x4bddc2b0]
  403f74:	mov    esi,0x99ba808
  403f79:	xor    dl,dh
  403f7b:	dec    edx
  403f7c:	inc    esp
  403f7d:	(bad)  
  403f7e:	test   al,0x71
  403f80:	sar    BYTE PTR [esi+0x49],cl
  403f83:	or     edi,esi
  403f85:	outs   dx,DWORD PTR ds:[esi]
  403f86:	cmp    al,0x42
  403f88:	sbb    eax,0xb72cb85d
  403f8d:	jbe    0x40400c
  403f8f:	out    0xc9,eax
  403f91:	cli    
  403f92:	adc    al,0x35
  403f94:	cmc    
  403f95:	adc    BYTE PTR [ebp-0xa31c53e],cl
  403f9b:	lock and ecx,DWORD PTR [edi+ebx*8+0x13cdcd]
  403fa3:	out    0x64,eax
  403fa5:	inc    esi
  403fa6:	jle    0x403f3d
  403fa8:	(bad)  
  403fa9:	sub    eax,0xc430b42d
  403fae:	out    0xeb,al
  403fb0:	stos   DWORD PTR es:[edi],eax
  403fb1:	(bad)  
  403fb2:	loopne 0x403fff
  403fb4:	mov    al,ds:0xe3e8bea3
  403fb9:	mov    edx,0x43fd6176
  403fbe:	ficomp DWORD PTR [ebp+0x22]
  403fc1:	mov    ah,BYTE PTR [edx-0x7cb242a3]
  403fc7:	push   edx
  403fc8:	clc    
  403fc9:	or     eax,DWORD PTR [ebx-0x75a4b346]
  403fcf:	addr16 out 0xb1,eax
  403fd2:	fwait
  403fd3:	aas    
  403fd4:	pushf  
  403fd5:	aas    
  403fd6:	inc    esi
  403fd7:	lods   eax,DWORD PTR ds:[esi]
  403fd8:	rcr    DWORD PTR [ebp+0x71],0x54
  403fdc:	(bad)  
  403fdd:	(bad)  
  403fde:	gs ins BYTE PTR es:[edi],dx
  403fe0:	lock xchg esi,eax
  403fe2:	pop    es
  403fe3:	scas   al,BYTE PTR es:[edi]
  403fe4:	rcr    DWORD PTR ds:[eax+0x2e],1
  403fe8:	pop    es
  403fe9:	xchg   ebx,eax
  403fea:	ins    BYTE PTR es:[edi],dx
  403feb:	rcr    DWORD PTR [eax],1
  403fed:	mov    esp,0x9adeb76a
  403ff2:	sub    al,0x70
  403ff4:	sbb    ch,bl
  403ff6:	xchg   ebp,eax
  403ff7:	dec    esi
  403ff8:	pop    es
  403ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ffa:	je     0x404022
  403ffc:	jl     0x40405a
  403ffe:	dec    edx
  403fff:	imul   edi,DWORD PTR [eax+0x2],0xcf7650ab
  404006:	adc    dl,dh
  404008:	sub    al,0x33
  40400a:	pusha  
  40400b:	mov    ds:0xf4de99af,eax
  404010:	mov    eax,0xa3f6d93c
  404015:	mov    al,ds:0xf966d1ae
  40401a:	idiv   BYTE PTR [esi]
  40401c:	sub    bl,al
  40401e:	mov    ebx,0x623707ae
  404023:	jl     0x40400d
  404025:	bound  edx,QWORD PTR [edi-0x7a32af57]
  40402b:	lods   al,BYTE PTR ds:[esi]
  40402c:	add    al,0xb2
  40402e:	and    ebx,DWORD PTR [eax-0x40]
  404031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404032:	push   cs
  404033:	dec    eax
  404034:	stos   DWORD PTR es:[edi],eax
  404035:	xchg   ebp,eax
  404036:	bound  eax,QWORD PTR ds:0x35c5115c
  40403c:	pop    ebp
  40403d:	sbb    esp,DWORD PTR [edx-0x60]
  404040:	jmp    0x404070
  404042:	or     esp,DWORD PTR [edx-0x6dc57e75]
  404048:	je     0x404091
  40404a:	jne    0x40403b
  40404c:	shl    BYTE PTR [edi-0x4b163369],0x6
  404053:	(bad)  
  404054:	int3   
  404055:	retf   0xd9f7
  404058:	cld    
  404059:	sahf   
  40405a:	call   0x804c:0xf8e808a3
  404061:	daa    
  404062:	mov    ebx,0x8d7aa00a
  404067:	stos   BYTE PTR es:[edi],al
  404068:	nop
  404069:	fadd   QWORD PTR [eax-0x3f]
  40406c:	rol    esi,0xdf
  40406f:	mov    ebx,0x3fd2ab24
  404074:	cli    
  404075:	into   
  404076:	xor    al,0x66
  404078:	mov    cl,0xc5
  40407a:	mov    ah,0xa5
  40407c:	clc    
  40407d:	jnp    0x4040fc
  40407f:	or     eax,0xb6cb2b4
  404084:	push   0x127f4a54
  404089:	mov    edi,0x67eb42ef
  40408e:	lahf   
  40408f:	loope  0x4040f4
  404091:	(bad)  
  404092:	dec    ecx
  404093:	mov    BYTE PTR [edi+0x10],ch
  404096:	sbb    BYTE PTR [ebx-0xa],bl
  404099:	push   es
  40409a:	pop    ebx
  40409b:	mov    ah,0xd4
  40409d:	aas    
  40409e:	inc    ebp
  40409f:	or     dl,ch
  4040a1:	push   esp
  4040a2:	js     0x404112
  4040a4:	inc    ebp
  4040a5:	jne    0x4040e2
  4040a7:	sub    al,0x3c
  4040a9:	dec    edx
  4040aa:	adc    ah,BYTE PTR [ecx-0x31e471ab]
  4040b0:	test   al,0x5f
  4040b2:	pop    edx
  4040b3:	jle    0x4040b2
  4040b5:	mov    al,ds:0x40b294b2
  4040ba:	sub    cl,BYTE PTR [eax]
  4040bc:	fwait
  4040bd:	xchg   edi,eax
  4040be:	lahf   
  4040bf:	outs   dx,DWORD PTR ds:[esi]
  4040c0:	xchg   ah,bh
  4040c2:	into   
  4040c3:	loop   0x404116
  4040c5:	cdq    
  4040c6:	pop    esi
  4040c7:	sub    BYTE PTR [esi-0x6e1bd9be],bl
  4040cd:	stc    
  4040ce:	push   esp
  4040cf:	shr    ebx,cl
  4040d1:	adc    eax,0x73798ee3
  4040d6:	mov    al,0x44
  4040d8:	imul   esp,DWORD PTR [ecx-0x55],0x6473c67e
  4040df:	stos   BYTE PTR es:[edi],al
  4040e0:	sub    eax,0xad6cbc2a
  4040e5:	nop
  4040e6:	shl    ah,1
  4040e8:	dec    ecx
  4040e9:	fsub   st,st(3)
  4040eb:	adc    esp,DWORD PTR [eax]
  4040ed:	cmp    cl,bl
  4040ef:	mov    ch,0xf4
  4040f1:	xor    BYTE PTR [esi-0x5613fbb5],ah
  4040f7:	xor    eax,0xf38260c7
  4040fc:	xlat   BYTE PTR ds:[ebx]
  4040fd:	pop    edi
  4040fe:	dec    ecx
  4040ff:	scas   al,BYTE PTR es:[edi]
  404100:	mov    ebp,0x3a2c5362
  404105:	xor    al,0x23
  404107:	arpl   WORD PTR [ecx],si
  404109:	sbb    ah,bh
  40410b:	or     cl,cl
  40410d:	ds pop eax
  40410f:	ret    
  404110:	bts    edi,0x13
  404114:	lods   al,BYTE PTR ds:[esi]
  404115:	jmp    0x4040a8
  404117:	ins    DWORD PTR es:[edi],dx
  404118:	data16 mov dl,0x1
  40411b:	scas   eax,DWORD PTR es:[edi]
  40411c:	mov    edi,0x3fbea238
  404121:	jmp    0xde7a:0xb930db89
  404128:	mov    ds:0x49d698c8,al
  40412d:	cmp    DWORD PTR [ebp-0x42],esi
  404130:	int3   
  404131:	mov    eax,ds:0xb3837ab1
  404136:	or     al,0x66
  404138:	pop    ds
  404139:	sahf   
  40413a:	mov    ?,WORD PTR [eax+0x12]
  40413d:	mov    edi,0x2cacdfc0
  404142:	dec    esp
  404143:	test   eax,0x8362b14a
  404148:	mov    eax,ds:0x74dcac23
  40414d:	rol    BYTE PTR [edx+0x1ad26e2e],0x40
  404154:	xor    al,0xa0
  404156:	test   eax,0xe0f0f440
  40415b:	adc    cl,BYTE PTR [edx-0x26608f48]
  404161:	mov    ds:0x925025f0,eax
  404166:	xchg   esp,eax
  404167:	mov    ecx,0xb3b07dd5
  40416c:	sbb    BYTE PTR [ecx],ch
  40416e:	push   ebp
  40416f:	jno    0x404176
  404171:	scas   al,BYTE PTR es:[edi]
  404172:	cmp    eax,0xbb17de3
  404177:	and    dh,BYTE PTR [ebx+0x4c3a793f]
  40417d:	jno    0x4041bc
  40417f:	push   cs
  404180:	xor    eax,0x75876e8c
  404185:	adc    cl,BYTE PTR [ebx+ebp*8-0x54]
  404189:	repz sub eax,0x53237970
  40418f:	bound  ebp,QWORD PTR [ecx+edx*8]
  404192:	leave  
  404193:	pusha  
  404194:	out    0x11,eax
  404196:	aad    0xc5
  404198:	cmp    al,0xc7
  40419a:	xchg   edx,eax
  40419b:	cld    
  40419c:	and    BYTE PTR [ebp+0x160cf9f5],0xef
  4041a3:	or     al,BYTE PTR [edi-0x14]
  4041a6:	in     al,0x69
  4041a8:	add    ebx,DWORD PTR [edx-0x3befdf29]
  4041ae:	mov    eax,0x109746a1
  4041b3:	sub    edi,DWORD PTR [eax-0x50]
  4041b6:	sti    
  4041b7:	out    0x57,al
  4041b9:	push   0x23763ab5
  4041be:	inc    ebx
  4041bf:	imul   edx,DWORD PTR [edi+0x4f],0xdc48fd19
  4041c6:	add    ch,al
  4041c8:	js     0x4041c7
  4041ca:	push   ss
  4041cb:	push   esi
  4041cc:	push   ebp
  4041cd:	pop    ebp
  4041ce:	dec    edx
  4041cf:	inc    ecx
  4041d0:	fistp  WORD PTR [ebx+0x33baa829]
  4041d6:	xor    BYTE PTR [esi],ch
  4041d8:	das    
  4041d9:	xchg   ebp,eax
  4041da:	stos   BYTE PTR es:[edi],al
  4041db:	int    0xe5
  4041dd:	jae    0x4041a8
  4041df:	jne    0x40422b
  4041e1:	sub    BYTE PTR [eax-0x2e4aa368],ch
  4041e7:	std    
  4041e8:	push   ebp
  4041e9:	neg    BYTE PTR [edi+0x796ea1a0]
  4041ef:	outs   dx,BYTE PTR ds:[esi]
  4041f0:	xor    eax,0xa1ee0049
  4041f5:	pop    ecx
  4041f6:	gs es aam 0x0
  4041fa:	mov    BYTE PTR [esi-0x75],ch
  4041fd:	dec    ch
  4041ff:	adc    dl,BYTE PTR [ebp+0x3a43a2a3]
  404205:	jecxz  0x40424c
  404207:	jecxz  0x404226
  404209:	sbb    al,0xc
  40420b:	cwde   
  40420c:	pop    esi
  40420d:	jl     0x404270
  40420f:	(bad)  
  404210:	mov    ds:0xe7f3db71,eax
  404215:	and    al,0x53
  404217:	xor    BYTE PTR [ecx],ah
  404219:	(bad)  
  40421a:	cli    
  40421b:	cmc    
  40421c:	les    ecx,FWORD PTR [esi]
  40421e:	dec    edi
  40421f:	mov    dl,0xe8
  404221:	outs   dx,BYTE PTR ds:[esi]
  404222:	rcl    BYTE PTR [eax],cl
  404224:	add    eax,0x6de14c1c
  404229:	jge    0x404279
  40422b:	aas    
  40422c:	pop    edx
  40422d:	outs   dx,BYTE PTR ds:[esi]
  40422e:	js     0x68360b56
  404234:	xor    esp,DWORD PTR [eax]
  404236:	mov    dl,0xb0
  404238:	stos   DWORD PTR es:[edi],eax
  404239:	and    eax,0xe2be2beb
  40423e:	bound  ebp,QWORD PTR [edx-0x34e8169a]
  404244:	js     0x4041e4
  404246:	cmp    eax,DWORD PTR ds:0xb3d4aaf1
  40424c:	push   edi
  40424d:	push   ebp
  40424e:	leave  
  40424f:	loopne 0x404206
  404251:	mov    ds,WORD PTR [ebp-0x55]
  404254:	push   ebp
  404255:	xchg   edi,eax
  404256:	mov    edi,ebp
  404258:	inc    edx
  404259:	sub    eax,0xacbd3d0f
  40425e:	mov    ecx,ebx
  404260:	lods   eax,DWORD PTR ds:[esi]
  404261:	fcom   DWORD PTR [esi]
  404263:	sbb    BYTE PTR [eax],dl
  404265:	dec    ebx
  404266:	or     al,0x3e
  404268:	(bad)  
  404269:	popa   
  40426a:	mov    ah,bl
  40426c:	aam    0xc3
  40426e:	push   es
  40426f:	ret    0xfb80
  404272:	in     al,dx
  404273:	sub    edi,DWORD PTR [edx]
  404275:	out    0xa0,al
  404277:	lea    esp,es:[eax-0x4a]
  40427b:	fistp  DWORD PTR [esi-0x4650cf43]
  404281:	push   eax
  404282:	hlt    
  404283:	mov    al,ds:0x52e07c9
  404288:	je     0x404248
  40428a:	mul    DWORD PTR [ebx+0x20]
  40428d:	jp     0x404298
  40428f:	dec    esi
  404290:	leave  
  404291:	add    ecx,edx
  404293:	and    bl,al
  404295:	fadd   DWORD PTR [ecx]
  404297:	lea    ecx,[edi-0x4165b15f]
  40429d:	xchg   ecx,eax
  40429e:	icebp  
  40429f:	fs dec eax
  4042a1:	mov    DWORD PTR [ebp+0x8e47987],esi
  4042a7:	xor    eax,0x147b1f9e
  4042ac:	mov    esp,0x370e3461
  4042b1:	nop
  4042b2:	mov    ?,WORD PTR [eax]
  4042b4:	xor    dh,dh
  4042b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042b7:	mov    edx,0x5364ab75
  4042bc:	lods   eax,DWORD PTR ds:[esi]
  4042bd:	and    BYTE PTR [eax+0x5af06ced],0x1f
  4042c4:	jne    0x404298
  4042c6:	sbb    ebx,eax
  4042c8:	js     0x4042b5
  4042ca:	stos   DWORD PTR es:[edi],eax
  4042cb:	lea    edi,[edi]
  4042cd:	add    bl,BYTE PTR [ebx]
  4042cf:	dec    esp
  4042d0:	out    dx,al
  4042d1:	cwde   
  4042d2:	das    
  4042d3:	pop    ss
  4042d4:	or     al,0xf3
  4042d6:	push   ebp
  4042d7:	cmp    al,0x28
  4042d9:	and    DWORD PTR [ebp+ebp*2+0x59],ebp
  4042dd:	(bad)
  4042e0:	sbb    eax,DWORD PTR [ecx+edi*1]
  4042e3:	cmc    
  4042e4:	test   bl,dl
  4042e6:	sahf   
  4042e7:	fst    DWORD PTR [eax-0x1d]
  4042ea:	ss jp  0x4042cd
  4042ed:	out    0x5,eax
  4042ef:	ds mov dl,0x31
  4042f2:	xor    BYTE PTR [edi+0x23488ddb],bl
  4042f8:	iret   
  4042f9:	out    0x1c,eax
  4042fb:	stos   BYTE PTR es:[edi],al
  4042fc:	shr    DWORD PTR [ecx],0xec
  4042ff:	sbb    al,0x4e
  404301:	test   DWORD PTR ds:0x723c106,ecx
  404307:	out    dx,al
  404308:	fsub   QWORD PTR [edx-0x6b51b00f]
  40430e:	jl     0x404343
  404310:	cmp    DWORD PTR [esi-0x18046274],ebp
  404316:	test   DWORD PTR [edx+0x70afd867],0x1f5cb39f
  404320:	inc    ebx
  404321:	dec    eax
  404322:	jo     0x40439d
  404324:	pop    ebp
  404325:	push   ebp
  404326:	inc    edx
  404327:	fild   QWORD PTR [ecx+eax*2+0x60]
  40432b:	pop    edx
  40432c:	jl     0x404301
  40432e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40432f:	dec    esp
  404330:	stos   DWORD PTR es:[edi],eax
  404331:	sub    DWORD PTR [ecx+0x15],edx
  404334:	fcom   QWORD PTR [ecx-0x66]
  404337:	clc    
  404338:	or     al,0xec
  40433a:	push   esi
  40433b:	ror    edx,1
  40433d:	sub    edx,DWORD PTR [ebx-0x7ad3216]
  404343:	(bad)  
  404345:	dec    ecx
  404346:	aad    0x85
  404348:	mov    ecx,0x4d5bb62e
  40434d:	data16 xor BYTE PTR [edx+0x7ee04387],0xff
  404355:	dec    edx
  404356:	inc    eax
  404357:	je     0x404319
  404359:	push   esp
  40435a:	imul   esi,DWORD PTR [edi+edx*8+0x3e4b5d46],0x19203c70
  404365:	(bad)  
  404367:	lahf   
  404368:	sub    dl,BYTE PTR [ecx+0x27]
  40436b:	cs sub al,0x70
  40436e:	cld    
  40436f:	xchg   ebx,eax
  404370:	add    BYTE PTR [ecx+0xe],ch
  404373:	inc    eax
  404374:	jns    0x404352
  404376:	sar    BYTE PTR [eax],0xf6
  404379:	test   eax,0x9557ee31
  40437e:	mov    dl,0x8a
  404380:	and    al,0x11
  404382:	inc    ebx
  404383:	lds    esp,FWORD PTR [ebx+0x34]
  404386:	inc    esi
  404387:	(bad)  
  40438a:	and    ecx,edx
  40438c:	mov    bl,0x34
  40438e:	xchg   ebx,eax
  40438f:	shl    DWORD PTR [edx],0x2d
  404392:	pop    ds
  404393:	add    eax,0x58d23d8
  404398:	xchg   edx,eax
  404399:	(bad)  
  40439a:	fisubr WORD PTR [ebx+edx*4]
  40439d:	add    al,0xa8
  40439f:	popf   
  4043a0:	test   al,0x27
  4043a2:	shr    BYTE PTR [ecx+0x51],0xfd
  4043a6:	gs mov ebp,0x8612366
  4043ac:	sub    esi,edx
  4043ae:	xor    BYTE PTR [esp+edx*8],ch
  4043b1:	add    bl,dl
  4043b3:	sbb    al,0x4c
  4043b5:	dec    bh
  4043b7:	imul   eax,DWORD PTR [edx+0x2e],0x51
  4043bb:	sti    
  4043bc:	out    0x2,al
  4043be:	mov    eax,ds:0x9d07e8c3
  4043c3:	push   ds
  4043c4:	inc    esi
  4043c5:	adc    BYTE PTR [edi+ebx*2],0xad
  4043c9:	fs ss in al,dx
  4043cc:	jo     0x40438a
  4043ce:	mov    edi,0x37b1e1c5
  4043d3:	and    edx,ebx
  4043d5:	mov    edx,0x3ab78b2a
  4043da:	add    al,0x5e
  4043dc:	outs   dx,DWORD PTR ds:[esi]
  4043dd:	sbb    BYTE PTR [edi-0x4257e8dd],al
  4043e3:	fdivr  DWORD PTR ds:0xb1f6e449
  4043e9:	(bad)  
  4043ea:	jmp    0xfe153e13
  4043ef:	cmp    eax,0x6cb14caf
  4043f4:	sub    cl,0xee
  4043f7:	push   edi
  4043f8:	(bad)  
  4043f9:	fst    QWORD PTR [ecx]
  4043fb:	std    
  4043fc:	mov    al,ds:0x82fd876e
  404401:	fimul  DWORD PTR [edx+esi*1-0x72b5cf59]
  404408:	outs   dx,BYTE PTR ds:[esi]
  404409:	int    0x95
  40440b:	lahf   
  40440c:	cvtps2pi mm6,QWORD PTR [eax]
  40440f:	icebp  
  404410:	xchg   DWORD PTR [esi],esp
  404412:	add    BYTE PTR [ebx-0x54fce522],bl
  404418:	repz and esp,DWORD PTR [ebx]
  40441b:	(bad)  
  40441c:	(bad)  
  40441d:	bound  esp,QWORD PTR [edx-0x7769008c]
  404423:	xchg   ebp,eax
  404424:	inc    esp
  404425:	jl     0x404417
  404427:	loopne 0x404433
  404429:	jb     0x40445e
  40442b:	or     al,BYTE PTR [esi+0x43d85aac]
  404431:	pop    esp
  404432:	inc    esi
  404433:	shl    BYTE PTR [edx+0x3007619b],1
  404439:	mov    eax,0xe36f43e
  40443e:	dec    ecx
  40443f:	cmp    DWORD PTR [esi],edi
  404441:	mov    cl,0x34
  404443:	les    esp,FWORD PTR [ecx]
  404445:	ins    DWORD PTR es:[edi],dx
  404446:	pushf  
  404447:	scas   eax,DWORD PTR es:[edi]
  404448:	xor    bh,bh
  40444a:	loop   0x4043cc
  40444c:	dec    eax
  40444d:	jns    0x404460
  40444f:	sub    eax,0x1d5e0ea3
  404454:	pop    ebp
  404455:	mov    eax,DWORD PTR [eax]
  404457:	std    
  404458:	ror    DWORD PTR [edx],0xf7
  40445b:	int    0xbc
  40445d:	js     0x4044cf
  40445f:	inc    edi
  404460:	fadd   QWORD PTR [ecx+ebp*4]
  404463:	dec    ecx
  404464:	xchg   esp,eax
  404465:	add    BYTE PTR [edi],bl
  404467:	mov    ch,0x59
  404469:	out    dx,al
  40446a:	imul   ecx,DWORD PTR [ecx],0xf1d17404
  404470:	sbb    BYTE PTR ds:0xc813e739,cl
  404476:	call   0x55934585
  40447b:	jno    0x40445f
  40447d:	sbb    ah,BYTE PTR [ebx]
  40447f:	jp     0x404422
  404481:	mov    eax,edx
  404483:	mov    dh,0xfb
  404485:	shl    BYTE PTR ds:0xafc9280e,0x7d
  40448c:	inc    edx
  40448d:	add    ecx,DWORD PTR es:[eax-0x12]
  404491:	imul   esp,edx,0xed3e3031
  404497:	cmp    DWORD PTR [ebx],eax
  404499:	ss jb  0x4044aa
  40449c:	xor    esi,DWORD PTR [esi+ebx*2]
  40449f:	mov    cs,WORD PTR [edi+ebp*2-0x7c15d37]
  4044a6:	fcom   DWORD PTR [esp+edi*8-0x41c52ee7]
  4044ad:	mov    dl,0xec
  4044af:	in     eax,0x37
  4044b1:	fmul   DWORD PTR [ecx+0x622db675]
  4044b7:	repz and ebx,DWORD PTR [eax-0x775f42d2]
  4044be:	sub    al,0x7e
  4044c0:	mov    ah,cl
  4044c2:	call   0x9a54cdd2
  4044c7:	or     DWORD PTR [eax+0x54a080c8],esi
  4044cd:	dec    ecx
  4044ce:	dec    eax
  4044cf:	clc    
  4044d0:	push   es
  4044d1:	adc    BYTE PTR [eax],al
  4044d3:	cwde   
  4044d4:	enter  0xada4,0xf2
  4044d8:	add    eax,0xb08554f2
  4044dd:	jbe    0x404510
  4044df:	shl    ebx,0xfa
  4044e2:	int3   
  4044e3:	addr16 jo 0x404533
  4044e6:	outs   dx,BYTE PTR ds:[esi]
  4044e7:	sub    BYTE PTR [esi],ch
  4044e9:	out    0x29,eax
  4044eb:	cmp    esp,edx
  4044ed:	leave  
  4044ee:	scas   al,BYTE PTR es:[edi]
  4044ef:	pop    eax
  4044f0:	xor    eax,0x193e597e
  4044f5:	mov    ch,BYTE PTR [ecx+0x52]
  4044f8:	pop    ecx
  4044f9:	xchg   edi,eax
  4044fa:	popf   
  4044fb:	jecxz  0x40451b
  4044fd:	cld    
  4044fe:	nop
  4044ff:	push   ebx
  404500:	fwait
  404501:	das    
  404502:	cs (bad) 
  404504:	test   al,0x27
  404506:	push   esi
  404507:	mov    ds:0x1d19820,eax
  40450c:	cmp    al,0x1e
  40450e:	rcr    DWORD PTR ds:0xbf916aeb,cl
  404514:	pop    es
  404515:	push   eax
  404516:	xchg   edi,eax
  404517:	mov    ebp,0x6b482908
  40451c:	mov    bh,0x33
  40451e:	mov    eax,0x948bfd81
  404523:	jnp    0x404556
  404525:	mov    WORD PTR [esi],ds
  404527:	mov    cl,0x95
  404529:	xchg   ecx,eax
  40452a:	fnsave fs:[ecx]
  40452d:	jb     0x4044bd
  40452f:	cwde   
  404530:	inc    edi
  404531:	jge    0x404519
  404533:	and    ah,bh
  404535:	xchg   edi,eax
  404536:	add    eax,0x92f57a2a
  40453b:	sbb    DWORD PTR [edi+edx*4+0x5ce97978],esp
  404542:	adc    bh,bl
  404544:	into   
  404545:	jns    0x4044ce
  404547:	dec    edi
  404548:	(bad)  
  40454a:	inc    ebp
  40454b:	cmp    BYTE PTR [ebx+eax*1+0x6d483f78],dl
  404552:	out    0x12,al
  404554:	fsubr  st(0),st
  404556:	push   cs
  404557:	mov    dh,0xc9
  404559:	pop    esp
  40455a:	les    esi,FWORD PTR [esp+edi*1-0x58d7b24f]
  404561:	jge    0x404517
  404563:	mov    ds:0x283c41f9,al
  404568:	pop    esi
  404569:	fstp   DWORD PTR [ebp+ebx*2-0x15]
  40456d:	jno    0x4045e2
  40456f:	and    eax,0xe8b670c7
  404574:	jns    0x404596
  404576:	inc    ebx
  404577:	mov    ecx,DWORD PTR [ebx+0x5bd20f35]
  40457d:	sub    eax,0x7d0e4bd
  404582:	inc    esp
  404583:	je     0x4045da
  404585:	in     eax,dx
  404586:	in     al,dx
  404587:	loopne 0x404599
  404589:	push   ecx
  40458a:	sbb    ch,BYTE PTR [edx-0x5fd36465]
  404590:	int    0x25
  404592:	repnz add al,BYTE PTR [edi-0x2612262d]
  404599:	mov    dh,0x8a
  40459b:	addr16 mov eax,0xbb8924e1
  4045a1:	hlt    
  4045a2:	sti    
  4045a3:	lods   al,BYTE PTR ds:[esi]
  4045a4:	ds push ebx
  4045a6:	jp     0x4045df
  4045a8:	cli    
  4045a9:	sar    esp,cl
  4045ab:	test   BYTE PTR [edx+0x51b38da3],al
  4045b1:	push   0x5e
  4045b3:	in     al,0x4b
  4045b5:	dec    ecx
  4045b6:	sbb    eax,0xdba569d1
  4045bb:	and    edx,DWORD PTR [edx-0x7a]
  4045be:	pop    ebx
  4045bf:	dec    edi
  4045c0:	jge    0x40457c
  4045c2:	xchg   ebp,eax
  4045c3:	pop    esp
  4045c4:	dec    esi
  4045c5:	leave  
  4045c6:	popa   
  4045c7:	ror    DWORD PTR [ebx+0x65],0xc0
  4045cb:	cmp    al,0x64
  4045cd:	pusha  
  4045ce:	imul   eax,ecx,0xffffffd1
  4045d1:	rcr    BYTE PTR [edi-0x1db5197f],1
  4045d7:	jne    0x404617
  4045d9:	jge    0x4045ec
  4045db:	or     edx,DWORD PTR [eax+0x585c6391]
  4045e1:	mov    ebx,DWORD PTR [esi]
  4045e3:	pop    ds
  4045e4:	pusha  
  4045e5:	lods   al,BYTE PTR ds:[esi]
  4045e6:	in     eax,dx
  4045e7:	call   0x6724f4fe
  4045ec:	test   eax,0x56c24835
  4045f1:	sub    ebx,DWORD PTR [edx+ebp*4+0x60]
  4045f5:	mov    al,ds:0x633d0137
  4045fa:	mov    ebx,0x38b26b80
  4045ff:	(bad)
  404603:	fidiv  WORD PTR [edi]
  404605:	lds    ebx,FWORD PTR [edx+0x5f64c97c]
  40460b:	inc    esp
  40460c:	cmp    edx,ecx
  40460e:	xor    al,0x51
  404610:	mov    eax,0x3b630022
  404615:	(bad)  
  404617:	fcom   DWORD PTR [eax]
  404619:	xchg   BYTE PTR [ecx+ebp*8+0x4b2bff4d],ch
  404620:	cdq    
  404621:	loopne 0x4045a8
  404623:	int    0x37
  404625:	in     al,dx
  404626:	out    0x2d,al
  404628:	int3   
  404629:	fnstsw WORD PTR [ebx+0x1e]
  40462c:	call   0x9dc67902
  404631:	in     eax,dx
  404632:	xor    DWORD PTR [ebp-0x4c],ecx
  404635:	xchg   BYTE PTR ds:0x7c8f2b5e,dh
  40463b:	pop    esp
  40463c:	xchg   ebp,eax
  40463d:	mov    ah,0xcc
  40463f:	mov    bl,bl
  404641:	iret   
  404642:	fwait
  404643:	jnp    0x404692
  404645:	mov    esi,0x7040c1d9
  40464a:	aam    0xc7
  40464c:	and    al,0x52
  40464e:	sub    BYTE PTR [eax+0x6b56b162],bl
  404654:	std    
  404655:	and    ch,dl
  404657:	aam    0x7e
  404659:	and    edx,DWORD PTR [eax-0x5e68fe6]
  40465f:	mov    DWORD PTR [ebx],ebx
  404661:	(bad)  
  404662:	cwde   
  404663:	ja     0x40468e
  404665:	ds jb  0x404675
  404668:	lahf   
  404669:	shl    DWORD PTR [esi],cl
  40466b:	xchg   ecx,eax
  40466c:	data16 and dh,BYTE PTR ds:0xa5f26aca
  404673:	or     eax,DWORD PTR [edi-0x6e04d41e]
  404679:	fild   QWORD PTR [ebx-0x28f07763]
  40467f:	test   al,0xa7
  404681:	xchg   ebx,eax
  404682:	add    ebx,DWORD PTR [ecx-0x44]
  404685:	inc    ebx
  404686:	rol    DWORD PTR [ebx+0x3980709a],cl
  40468c:	enter  0x3f4d,0x75
  404690:	inc    edi
  404691:	int    0x76
  404693:	push   es
  404694:	add    dh,cl
  404696:	mov    edi,0xf78e75ac
  40469b:	imul   esi,esp,0x72f43fec
  4046a1:	data16 cmp al,0x8d
  4046a4:	adc    edx,DWORD PTR [eax+0x309519d9]
  4046aa:	jnp    0x404718
  4046ac:	fadd   st,st(6)
  4046ae:	ror    DWORD PTR [esi-0x78],0xc4
  4046b2:	mov    esi,DWORD PTR [ebp+edi*4+0x48]
  4046b6:	xchg   esp,eax
  4046b7:	and    DWORD PTR [edx-0x33d6202a],ebp
  4046bd:	pop    es
  4046be:	data16 test al,0x65
  4046c1:	mov    esi,0xd4d0b68b
  4046c6:	in     al,dx
  4046c7:	div    BYTE PTR [ebx-0x16]
  4046ca:	out    0xe4,eax
  4046cc:	icebp  
  4046cd:	xor    BYTE PTR [ecx+0x77e5e8cd],ah
  4046d3:	and    DWORD PTR [ebx+0x797200b9],0xfdb7527f
  4046dd:	lods   eax,DWORD PTR ds:[esi]
  4046de:	pop    ebx
  4046df:	cs out 0xca,eax
  4046e2:	cmp    eax,0xf710cf6d
  4046e7:	loope  0x4046a2
  4046e9:	dec    eax
  4046ea:	mov    bh,0x9d
  4046ec:	repnz daa 
  4046ee:	sbb    eax,0xdf64babc
  4046f3:	dec    ecx
  4046f4:	or     DWORD PTR [edx+0x53],0x827d9b6c
  4046fb:	cmc    
  4046fc:	add    eax,0xdb82dc3
  404701:	mov    esp,0x5bafdf27
  404706:	pop    esi
  404707:	or     eax,0x269b51c0
  40470c:	adc    BYTE PTR [edi+0x792dbb08],bh
  404712:	cmp    dh,cl
  404714:	pop    esp
  404715:	push   0xbe1a96b9
  40471a:	(bad)  
  40471b:	out    dx,eax
  40471c:	and    bh,BYTE PTR [eax+0x2903e546]
  404722:	adc    al,0x27
  404724:	retf   0xea91
  404727:	fs xor al,0x15
  40472a:	popa   
  40472b:	ins    DWORD PTR es:[edi],dx
  40472c:	das    
  40472d:	adc    bh,al
  40472f:	dec    esi
  404730:	add    DWORD PTR [ecx],ebp
  404732:	jno    0x4047ad
  404734:	mov    edi,0xf954480c
  404739:	stos   DWORD PTR es:[edi],eax
  40473a:	jecxz  0x404713
  40473c:	(bad)  
  40473d:	dec    ebp
  40473e:	icebp  
  40473f:	lds    edx,FWORD PTR [eax+ebp*4+0x32]
  404743:	jae    0x404715
  404745:	dec    esi
  404746:	imul   ebp,DWORD PTR [edi],0x6253b804
  40474c:	jg     0x404705
  40474e:	mov    bh,0x81
  404750:	add    eax,0x6b941fa8
  404755:	fld    QWORD PTR [ecx+ebp*2+0x5f]
  404759:	clc    
  40475a:	cmp    eax,ebx
  40475c:	push   cs
  40475d:	xchg   ebx,eax
  40475e:	into   
  40475f:	or     eax,0xf25281c6
  404764:	pop    es
  404765:	xchg   edi,eax
  404766:	jmp    0xdcd85ca1
  40476b:	mov    ch,0x9a
  40476d:	scas   eax,DWORD PTR es:[edi]
  40476e:	sbb    esi,ecx
  404770:	sbb    ah,BYTE PTR [ecx]
  404772:	das    
  404773:	xchg   ebp,eax
  404774:	mov    DWORD PTR ds:0x5044ebda,0x64235684
  40477e:	cwde   
  40477f:	inc    esi
  404780:	push   ss
  404781:	inc    edi
  404782:	xor    bl,ah
  404784:	je     0x404731
  404786:	mov    al,0xf
  404788:	rcl    DWORD PTR [edi+0x2861a9],cl
  40478e:	mov    ah,0xdf
  404790:	jmp    0x4047f6
  404792:	sete   BYTE PTR [ebx+0x7b]
  404796:	mov    eax,0xd7138974
  40479b:	daa    
  40479c:	test   al,0xae
  40479e:	sbb    BYTE PTR [esi-0x607216f3],ah
  4047a4:	push   es
  4047a5:	xchg   esi,eax
  4047a6:	neg    DWORD PTR [ecx-0x4e64474f]
  4047ac:	mov    ebx,ebp
  4047ae:	push   0xffffff99
  4047b0:	aaa    
  4047b1:	pop    edi
  4047b2:	xor    DWORD PTR [edi-0x1b97835],ecx
  4047b8:	jmp    0x43c5:0x44eb663f
  4047bf:	add    ah,BYTE PTR [ebp+0x5599abc8]
  4047c5:	mov    ch,0x95
  4047c7:	jl     0x4047f4
  4047c9:	jle    0x4047a7
  4047cb:	adc    DWORD PTR [edx-0x74],ebp
  4047ce:	mov    dl,0xf7
  4047d0:	adc    BYTE PTR ds:0x9802170b,bh
  4047d6:	into   
  4047d7:	inc    eax
  4047d8:	cmp    BYTE PTR [esi+0x1dadc8d6],ch
  4047de:	out    0x85,eax
  4047e0:	sbb    eax,0x83f1f8e5
  4047e5:	mov    edx,0x62edc3f4
  4047ea:	js     0x4047e6
  4047ec:	clc    
  4047ed:	xor    ch,0x85
  4047f0:	adc    bl,BYTE PTR [edi+edi*2-0x3ef36e17]
  4047f7:	out    dx,al
  4047f8:	and    DWORD PTR [ecx+0x5b],0x89130007
  4047ff:	cmp    BYTE PTR [eax+eax*8-0x6ecec47a],dh
  404806:	imul   esi,DWORD PTR [ecx],0x86113052
  40480c:	ss push ebx
  40480e:	in     al,0x6d
  404810:	jae    0x4047c2
  404812:	mov    dl,0xa9
  404814:	repz mov WORD PTR [ecx-0x13],ds
  404818:	dec    ecx
  404819:	pop    ecx
  40481a:	(bad)  
  40481b:	loope  0x40485d
  40481d:	stos   BYTE PTR es:[edi],al
  40481e:	cld    
  40481f:	(bad)  
  404820:	mov    eax,ds:0xd33b457c
  404825:	lock sti 
  404827:	outs   dx,DWORD PTR ds:[esi]
  404828:	fs stos BYTE PTR es:[edi],al
  40482a:	scas   eax,DWORD PTR es:[edi]
  40482b:	adc    DWORD PTR [eax-0x40a45df3],edx
  404831:	mov    esi,edx
  404833:	mov    ch,0x3
  404835:	mov    eax,0x602b67e
  40483a:	add    dh,BYTE PTR [edx]
  40483c:	call   0xb884:0x606f3964
  404843:	push   esp
  404844:	stos   BYTE PTR es:[edi],al
  404845:	dec    esp
  404846:	xchg   edx,eax
  404847:	bound  ecx,QWORD PTR [edx-0x17b3f5d6]
  40484d:	and    edx,DWORD PTR [ebx-0x10]
  404850:	mov    WORD PTR [edi+0x663de3d0],gs
  404856:	sbb    cl,cl
  404858:	cmp    cl,bh
  40485a:	mov    ebx,0xd3133869
  40485f:	sbb    eax,0x65e14962
  404864:	or     BYTE PTR [edi],al
  404866:	mov    cs,edi
  404868:	lods   eax,DWORD PTR ds:[esi]
  404869:	(bad)  
  40486a:	aaa    
  40486b:	xchg   DWORD PTR [edx],edx
  40486d:	pop    esi
  40486e:	sbb    al,0x1a
  404870:	inc    eax
  404871:	xchg   BYTE PTR [edi+0x28],al
  404874:	xor    edx,DWORD PTR [ebx+0x3290637e]
  40487a:	push   ecx
  40487b:	lods   eax,DWORD PTR ds:[esi]
  40487c:	(bad)  
  40487d:	mov    edx,0xe16c05be
  404882:	mov    esi,0x97925f23
  404887:	mov    esi,0x716062b1
  40488c:	repnz shl bh,0xb4
  404890:	push   ebx
  404891:	cmp    edi,DWORD PTR [esi+0x1eaa6f7]
  404897:	mov    edi,0x8684b8ff
  40489c:	xchg   ecx,eax
  40489d:	push   ebp
  40489e:	or     BYTE PTR [ebx-0xe],bh
  4048a1:	sub    ecx,esi
  4048a3:	or     al,0x1e
  4048a5:	jo     0x4048e6
  4048a7:	lahf   
  4048a8:	inc    esi
  4048a9:	xor    DWORD PTR [eax+0x4df1d0d4],ecx
  4048af:	or     BYTE PTR [esi],0x3e
  4048b2:	(bad)  
  4048b3:	sti    
  4048b4:	pop    es
  4048b5:	xor    DWORD PTR cs:[edx+0x6a],esp
  4048b9:	scas   eax,DWORD PTR es:[edi]
  4048ba:	cli    
  4048bb:	adc    BYTE PTR [esi-0x6d28c56],bl
  4048c1:	pop    ecx
  4048c2:	int    0x31
  4048c4:	jmp    0x44024669
  4048c9:	pop    edi
  4048ca:	add    eax,0xf9847632
  4048cf:	mov    bl,0x1d
  4048d1:	mov    esp,0xfc0459ae
  4048d6:	dec    edi
  4048d7:	cmp    ah,BYTE PTR [ebp+edi*4-0x58]
  4048db:	add    eax,0x95757a67
  4048e0:	mov    ecx,0x3fa12a4f
  4048e5:	add    ebx,DWORD PTR [esp+ebx*1]
  4048e8:	push   0xffffffe2
  4048ea:	xchg   BYTE PTR [ebx],al
  4048ec:	imul   eax,DWORD PTR ds:0xeaef96fe,0x391caeb1
  4048f6:	ins    DWORD PTR es:[edi],dx
  4048f7:	adc    esp,DWORD PTR [ecx+0xa]
  4048fa:	or     BYTE PTR [ecx],bh
  4048fc:	cmp    ebx,esp
  4048fe:	push   ss
  4048ff:	gs and eax,0xa094ecc3
  404905:	sub    BYTE PTR [esi-0x2edf5f12],dh
  40490b:	push   ecx
  40490c:	cmp    bh,BYTE PTR [edx]
  40490e:	std    
  40490f:	ja     0x404891
  404911:	stos   BYTE PTR es:[edi],al
  404912:	lods   eax,DWORD PTR ds:[esi]
  404913:	pop    es
  404914:	mov    dl,0xec
  404916:	push   ds
  404917:	das    
  404918:	cli    
  404919:	jne    0x404982
  40491b:	mov    ds:0x3ff8fabf,eax
  404920:	arpl   WORD PTR [ebx-0x7],si
  404923:	hlt    
  404924:	shl    esp,1
  404926:	jb     0x4048b3
  404928:	xor    edx,DWORD PTR [ecx]
  40492a:	(bad)  
  40492b:	fwait
  40492c:	sub    al,0xb6
  40492e:	imul   DWORD PTR [esi+0x459839d7]
  404934:	leave  
  404935:	mov    cl,0xb1
  404937:	push   ecx
  404938:	cmp    esp,DWORD PTR [eax-0x4]
  40493b:	and    bl,BYTE PTR [esi-0x51]
  40493e:	repnz (bad) 
  404940:	push   eax
  404941:	and    eax,0x9eb2c018
  404946:	inc    esp
  404947:	push   ecx
  404948:	or     esp,edx
  40494a:	jp     0x404996
  40494c:	sbb    DWORD PTR [edi-0xd833dc1],edi
  404952:	and    dl,al
  404954:	mov    cl,0xa1
  404956:	mov    dh,BYTE PTR [ecx+ebp*2]
  404959:	push   ss
  40495a:	mulps  xmm2,XMMWORD PTR [esi-0x2b]
  40495e:	xchg   esp,eax
  40495f:	std    
  404960:	ret    
  404961:	(bad)  
  404962:	sub    eax,0x1a7b6b75
  404967:	pop    edi
  404968:	cwde   
  404969:	stos   BYTE PTR es:[edi],al
  40496a:	cli    
  40496b:	test   eax,0x6c1c8c62
  404970:	push   edi
  404971:	out    dx,al
  404972:	pop    eax
  404973:	fist   WORD PTR [ebx-0xf]
  404976:	ins    DWORD PTR es:[edi],dx
  404977:	cmp    esp,DWORD PTR [edx]
  404979:	ror    bh,1
  40497b:	lea    esi,[eax+0x6a]
  40497e:	jne    0x404986
  404980:	cmc    
  404981:	cld    
  404982:	arpl   cx,bx
  404984:	out    0x85,al
  404986:	test   al,0x1f
  404988:	adc    eax,0xc359d64e
  40498d:	(bad)  
  40498e:	jmp    0x98e4c866
  404993:	xchg   ebp,eax
  404994:	in     al,0xfd
  404996:	imul   esi,DWORD PTR [ebx],0x14deca30
  40499c:	(bad)  
  40499d:	push   ds
  40499e:	and    DWORD PTR [edi-0x7253227e],0xa72c7a6b
  4049a8:	jae    0x404930
  4049aa:	shr    ch,cl
  4049ac:	add    DWORD PTR [eax],ebp
  4049ae:	or     DWORD PTR [esi+eiz*8],ebx
  4049b1:	and    esi,DWORD PTR [ebp+0x6a513567]
  4049b7:	cmp    al,0x4e
  4049b9:	adc    BYTE PTR [ebp+0x5e409068],cl
  4049bf:	loope  0x40499c
  4049c1:	shr    DWORD PTR [edi],cl
  4049c3:	ret    0xecdd
  4049c6:	or     al,0xad
  4049c8:	outs   dx,BYTE PTR ds:[esi]
  4049c9:	mov    ah,0xc7
  4049cb:	push   ebp
  4049cc:	loopne 0x4049d2
  4049ce:	jbe    0x4049c5
  4049d0:	loop   0x404a29
  4049d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049d3:	loopne 0x4049fa
  4049d5:	xchg   DWORD PTR [edx-0x6a1003e4],ebx
  4049db:	mov    edi,0x8d7f761d
  4049e0:	aas    
  4049e1:	inc    ebp
  4049e2:	call   0xf83a:0x2884fc2c
  4049e9:	xchg   edi,eax
  4049ea:	lods   al,BYTE PTR ds:[esi]
  4049eb:	add    ebp,DWORD PTR [eax+0x32]
  4049ee:	or     eax,0x403a54ab
  4049f3:	test   ch,dl
  4049f5:	dec    esi
  4049f6:	cli    
  4049f7:	pop    esi
  4049f8:	cmp    BYTE PTR [ecx+0x12],ah
  4049fb:	push   esi
  4049fc:	mov    al,ds:0x7e27771a
  404a01:	push   ebx
  404a02:	(bad)  
  404a03:	xchg   edi,eax
  404a04:	fstp   TBYTE PTR [ecx]
  404a06:	test   ch,dh
  404a08:	lea    ebp,[edx-0x2466ca0]
  404a0e:	in     al,0xcf
  404a10:	mov    DWORD PTR [edx-0x6e424f02],eax
  404a16:	scas   al,BYTE PTR es:[edi]
  404a17:	xchg   ebp,eax
  404a18:	jbe    0x404a78
  404a1a:	lds    ecx,FWORD PTR [edx-0xbc9371c]
  404a20:	jno    0x404a67
  404a22:	inc    eax
  404a23:	xchg   ebp,eax
  404a24:	stos   BYTE PTR es:[edi],al
  404a25:	jmp    0x8349a855
  404a2a:	dec    edx
  404a2b:	es and BYTE PTR cs:[edi],ah
  404a2f:	push   edi
  404a30:	(bad)  
  404a31:	imul   eax,DWORD PTR ds:0xfa1c9238,0x35
  404a38:	in     eax,0x34
  404a3a:	(bad)  
  404a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a3c:	retf   0xa885
  404a3f:	mov    esi,edx
  404a41:	or     BYTE PTR [esi],0x15
  404a44:	stc    
  404a45:	cmp    al,0x69
  404a47:	lds    esi,FWORD PTR [esi+ecx*4-0x1f646bd]
  404a4e:	jne    0x4049ed
  404a50:	in     al,0x11
  404a52:	test   al,0x72
  404a54:	xchg   ebx,eax
  404a55:	add    al,0xd3
  404a57:	mov    al,0xf9
  404a59:	and    DWORD PTR [ecx+eiz*8-0x42447c6d],0x2
  404a61:	lods   al,BYTE PTR ds:[esi]
  404a62:	addr16 jne 0x4049fc
  404a65:	mov    ds:0xd110e69e,al
  404a6a:	in     eax,dx
  404a6b:	pusha  
  404a6c:	lods   al,BYTE PTR ds:[esi]
  404a6d:	ret    
  404a6e:	(bad)  
  404a70:	push   es
  404a71:	pop    edx
  404a72:	out    0x94,al
  404a74:	in     eax,0x72
  404a76:	fimul  DWORD PTR [esi]
  404a78:	xchg   ebx,eax
  404a79:	push   ecx
  404a7a:	xor    BYTE PTR [edx+0x2238ed28],cl
  404a80:	fiadd  DWORD PTR [ebp+0x6ebd8984]
  404a86:	pop    es
  404a87:	stos   DWORD PTR es:[edi],eax
  404a88:	sub    ebp,esp
  404a8a:	addr16 inc edx
  404a8c:	(bad)  
  404a8d:	and    ch,BYTE PTR [ebp+esi*2+0x1e]
  404a91:	aad    0x4
  404a93:	ret    0x5de1
  404a96:	mov    edi,0x2d0a5cc7
  404a9b:	sbb    al,0x5e
  404a9d:	mov    dh,0x48
  404a9f:	ds dec edx
  404aa1:	xor    ch,BYTE PTR [ebx+0x1a]
  404aa4:	mov    gs,WORD PTR ds:0x40883e3
  404aaa:	ficom  WORD PTR [ebx-0xe]
  404aad:	ins    BYTE PTR es:[edi],dx
  404aae:	xchg   ecx,eax
  404aaf:	mov    eax,0x9ab6b779
  404ab4:	(bad)  
  404ab5:	sbb    eax,0xf2726b88
  404aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404abb:	and    eax,0x8722b27e
  404ac0:	xlat   BYTE PTR ds:[ebx]
  404ac1:	fwait
  404ac2:	es pop edx
  404ac4:	pop    edx
  404ac5:	cdq    
  404ac6:	mov    ?,WORD PTR [edx+0x5fcfb494]
  404acc:	aam    0xac
  404ace:	cmp    esi,DWORD PTR [edx]
  404ad0:	(bad)  
  404ad1:	mov    ebp,0x2bc5ccca
  404ad6:	or     BYTE PTR [eax+0x935b1b],dh
  404adc:	xchg   ebx,eax
  404add:	cmp    edx,DWORD PTR [ebp+0x2d413e2c]
  404ae3:	dec    eax
  404ae4:	mov    dh,BYTE PTR [edx]
  404ae6:	loope  0x404b0e
  404ae8:	pop    eax
  404ae9:	push   ebp
  404aea:	mov    ecx,0x15910f85
  404aef:	mov    eax,0x9a9d9a9b
  404af4:	enter  0x4ae6,0xa7
  404af8:	xchg   DWORD PTR [esp+ebp*8+0x75309a11],edi
  404aff:	dec    ebp
  404b00:	xchg   ebp,eax
  404b01:	(bad)  
  404b02:	pop    edi
  404b03:	mov    DWORD PTR [eax-0x3fde237b],ebx
  404b09:	mov    bl,BYTE PTR [esi]
  404b0b:	push   ds
  404b0c:	adc    al,0x5a
  404b0e:	fcom   DWORD PTR [ebx+0x44]
  404b11:	sbb    eax,0x5f981aff
  404b16:	jg     0x404aa6
  404b18:	mul    BYTE PTR [eax+0x29]
  404b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b1c:	fldenv [esi]
  404b1e:	and    esi,DWORD PTR [ebx]
  404b20:	cmp    DWORD PTR [edx+0x33a72d6b],esi
  404b26:	test   al,0xc7
  404b28:	shr    BYTE PTR [eax-0x6cb066fb],cl
  404b2e:	(bad)  
  404b2f:	rcr    bl,0xa8
  404b32:	jo     0x404ac9
  404b34:	pop    edx
  404b35:	fwait
  404b36:	adc    eax,0x34caf15
  404b3b:	sub    ecx,DWORD PTR [edx+edi*4-0x6a]
  404b3f:	outs   dx,BYTE PTR ds:[esi]
  404b41:	sbb    ebp,DWORD PTR [eax+edx*4-0x78368330]
  404b48:	mov    ebp,0xb40d322b
  404b4d:	xchg   edi,eax
  404b4e:	push   ss
  404b4f:	mov    bl,BYTE PTR [esi+0x1c30031e]
  404b55:	mov    eax,0x97de84ad
  404b5a:	or     esp,esp
  404b5c:	sbb    eax,0x986859ed
  404b61:	dec    ecx
  404b62:	sbb    bh,BYTE PTR [ebx-0x38927da5]
  404b68:	sbb    bh,dh
  404b6a:	cmp    BYTE PTR [esp+ebp*4-0x43057a62],cl
  404b71:	mov    esp,0xaa221865
  404b76:	cmp    eax,0xe57bed9e
  404b7b:	nop
  404b7c:	mov    eax,ss:0x2e515e98
  404b82:	mov    esp,0xda2f6567
  404b87:	cmc    
  404b88:	mov    ss,WORD PTR [ebx-0x27]
  404b8b:	ret    
  404b8c:	leave  
  404b8d:	mov    cl,0xee
  404b8f:	pop    ecx
  404b90:	push   0xae2b206d
  404b95:	test   DWORD PTR [eax],0x1a47dc56
  404b9b:	sahf   
  404b9c:	dec    eax
  404b9d:	mov    al,0x4f
  404b9f:	enter  0x7b47,0x69
  404ba3:	stos   DWORD PTR es:[edi],eax
  404ba4:	lds    eax,FWORD PTR [edi+0x7b]
  404ba7:	push   ebp
  404ba8:	repnz lods eax,DWORD PTR ds:[esi]
  404baa:	mov    fs,WORD PTR [edx]
  404bac:	sub    BYTE PTR [esi+eiz*8-0x2e298c1],0xbe
  404bb4:	loop   0x404b71
  404bb6:	test   eax,0x93576ade
  404bbb:	cmp    DWORD PTR [eax-0x7083e315],esi
  404bc1:	aad    0x7
  404bc3:	int    0xe2
  404bc5:	dec    ebp
  404bc6:	ficomp WORD PTR [ebp+edx*4-0x2d3474d9]
  404bcd:	fst    QWORD PTR [ecx]
  404bcf:	and    eax,0x65c07864
  404bd4:	cld    
  404bd5:	pushf  
  404bd6:	(bad)  
  404bd8:	mov    cl,0x4c
  404bda:	or     al,0x1a
  404bdc:	mov    esi,?
  404bde:	jp     0x404bde
  404be0:	mov    ch,0xa1
  404be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404be3:	pop    ebx
  404be4:	dec    edi
  404be5:	shl    DWORD PTR [edx+0xe1e8783],0x8f
  404bec:	test   ebx,esp
  404bee:	push   cs
  404bef:	in     al,0x9b
  404bf1:	or     al,0x30
  404bf3:	fidivr DWORD PTR [ebx]
  404bf5:	xor    BYTE PTR [ebx],dh
  404bf7:	jl     0x404bea
  404bf9:	mov    DWORD PTR [eax-0x488cffc4],ebx
  404bff:	and    ebp,DWORD PTR [ecx]
  404c01:	pop    ds
  404c02:	mov    ds:0xac145df,al
  404c07:	in     eax,0xf7
  404c09:	xor    al,0xb5
  404c0b:	xor    dh,BYTE PTR [ecx-0x7a9af1a2]
  404c11:	rcl    esp,1
  404c13:	outs   dx,DWORD PTR ds:[esi]
  404c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c15:	dec    edi
  404c16:	and    eax,0x1e3a06f7
  404c1b:	call   0xfa2ca1c0
  404c20:	sbb    eax,0x36240cfe
  404c25:	mov    cl,0xbb
  404c27:	and    esi,edx
  404c29:	and    DWORD PTR [ecx],0x8d689b6e
  404c2f:	dec    edi
  404c30:	xor    eax,0xfc36ae77
  404c35:	ins    BYTE PTR es:[edi],dx
  404c36:	mov    ds:0x1226dca0,al
  404c3b:	add    BYTE PTR ds:0x147d0b8a,dl
  404c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c42:	mov    dl,BYTE PTR [edi]
  404c44:	mov    dl,0xe2
  404c46:	jb     0x404c6b
  404c48:	icebp  
  404c49:	xor    ecx,ebp
  404c4b:	adc    eax,0xd8620c1e
  404c51:	adc    BYTE PTR cs:[edi-0x7f077b66],bh
  404c58:	mov    ds:0x634326e7,al
  404c5d:	push   0x5310e50c
  404c62:	xchg   DWORD PTR [edi-0x4dca1af1],ebx
  404c68:	sub    ch,cl
  404c6a:	mov    WORD PTR [edx+0x366263b0],?
  404c70:	and    esp,DWORD PTR ds:0xef6ece3a
  404c76:	push   esp
  404c77:	imul   edx,ebx,0x850f7fdb
  404c7d:	(bad)  
  404c7e:	mov    ebp,0x8e8fa174
  404c83:	mov    bh,0x1
  404c85:	or     esi,ecx
  404c87:	je     0x404c82
  404c89:	xor    dl,BYTE PTR [esi+0x5bc69663]
  404c8f:	je     0x404c35
  404c91:	xor    eax,0x68cfdcbc
  404c96:	std    
  404c97:	add    DWORD PTR [edx],ebp
  404c99:	int    0xa2
  404c9b:	outs   dx,BYTE PTR ds:[esi]
  404c9c:	sbb    BYTE PTR [ebx],cl
  404c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c9f:	adc    al,BYTE PTR [ebp+0x61]
  404ca2:	and    ecx,ebx
  404ca4:	mov    ds:0x3d4c82d7,eax
  404ca9:	xor    BYTE PTR [esi],bh
  404cab:	sbb    DWORD PTR [edx],edx
  404cad:	mov    cl,0xc3
  404caf:	outs   dx,BYTE PTR ds:[esi]
  404cb0:	arpl   WORD PTR [ecx-0x2f],cx
  404cb3:	adc    edx,DWORD PTR [ebp+0x62b4ed60]
  404cb9:	mov    esp,0xa163bb73
  404cbe:	inc    eax
  404cbf:	xlat   BYTE PTR ds:[ebx]
  404cc0:	out    0xdb,eax
  404cc2:	inc    eax
  404cc3:	shl    BYTE PTR [edx],0xd3
  404cc6:	(bad)  
  404cc7:	or     BYTE PTR [ecx],dl
  404cc9:	or     ebx,esi
  404ccb:	jnp    0x404d4a
  404ccd:	pushf  
  404cce:	fnstenv [esi+0x15db38a6]
  404cd4:	mov    ah,0xab
  404cd6:	mov    ch,0xc4
  404cd8:	sub    eax,0x23e8b83d
  404cdd:	mov    bl,ah
  404cdf:	adc    ecx,DWORD PTR [ecx]
  404ce1:	js     0x404ca7
  404ce3:	and    ebx,DWORD PTR [esi-0x15]
  404ce6:	retf   
  404ce7:	xchg   ecx,eax
  404ce8:	out    0x3,eax
  404cea:	inc    ebp
  404ceb:	pop    ss
  404cec:	test   ch,0x7a
  404cef:	retf   
  404cf0:	daa    
  404cf1:	sti    
  404cf2:	cmp    BYTE PTR [ebp-0x713c8944],bh
  404cf8:	pop    edx
  404cf9:	pop    ds
  404cfa:	add    BYTE PTR [edx+0x19],ah
  404cfd:	cmp    al,0x3f
  404cff:	fcom   DWORD PTR [ebp-0x4f79343b]
  404d05:	stc    
  404d06:	lea    esi,[edi+0x4c]
  404d09:	xor    bl,0xa6
  404d0c:	je     0x404cb2
  404d0e:	mov    DWORD PTR [ebx-0x28],edx
  404d11:	js     0x404cdd
  404d13:	retf   
  404d14:	scas   eax,DWORD PTR es:[edi]
  404d15:	xchg   ebp,eax
  404d16:	(bad)  
  404d17:	iret   
  404d18:	pop    ebp
  404d19:	(bad)  
  404d1a:	in     eax,dx
  404d1b:	dec    esi
  404d1c:	mov    WORD PTR [eax-0x48a3511],?
  404d22:	mov    ds:0x213173aa,eax
  404d27:	xor    DWORD PTR [edx-0x62a0cbc1],esp
  404d2d:	and    al,0xff
  404d2f:	jge    0x404d3d
  404d31:	nop    DWORD PTR [eax]
  404d34:	fsubr  QWORD PTR [ecx+0x72a86259]
  404d3a:	xchg   ecx,eax
  404d3b:	mov    eax,0xdb170323
  404d40:	jno    0x404d6a
  404d42:	fild   QWORD PTR [ebp-0x13]
  404d45:	pop    ecx
  404d46:	mov    ds:0x3475ab45,al
  404d4b:	inc    DWORD PTR [edx-0x130cd849]
  404d51:	into   
  404d52:	enter  0x7c48,0xfc
  404d56:	xchg   edi,eax
  404d57:	test   al,0xb3
  404d59:	mov    al,0x4b
  404d5b:	fdivr  QWORD PTR [esi+0x7]
  404d5e:	jae    0x404dbc
  404d60:	xor    eax,0x983f844d
  404d65:	pop    es
  404d66:	mov    dh,0xce
  404d68:	test   ah,0xce
  404d6b:	(bad)  
  404d6c:	mov    dl,0xee
  404d6e:	pop    esi
  404d6f:	ins    DWORD PTR es:[edi],dx
  404d70:	scas   al,BYTE PTR es:[edi]
  404d71:	faddp  st(0),st
  404d73:	mov    eax,ds:0x22e25b6
  404d78:	mov    edx,0x551763b3
  404d7d:	js     0x404dd7
  404d7f:	es cdq 
  404d81:	ret    0xa357
  404d84:	fbstp  TBYTE PTR [esi+ebx*8]
  404d87:	lods   al,BYTE PTR ds:[esi]
  404d88:	xchg   esi,ecx
  404d8a:	mov    bl,0x47
  404d8c:	add    bh,BYTE PTR [esi-0x1]
  404d8f:	out    0x1b,al
  404d91:	ins    BYTE PTR es:[edi],dx
  404d92:	jae    0x404d40
  404d94:	in     eax,dx
  404d95:	jo     0x404d78
  404d97:	retf   
  404d98:	leave  
  404d99:	in     eax,0x41
  404d9b:	into   
  404d9c:	je     0x404d3b
  404d9e:	sti    
  404d9f:	test   al,0xfc
  404da1:	sbb    bl,cl
  404da3:	(bad)  
  404da4:	jmp    0x577e:0xf6177be2
  404dab:	(bad)  
  404dac:	sbb    al,0xa8
  404dae:	dec    edx
  404daf:	and    al,0x26
  404db1:	popf   
  404db2:	loope  0x404d70
  404db4:	shr    BYTE PTR [ebp+0x18],0x35
  404db8:	mov    ch,0xa2
  404dba:	pop    ebx
  404dbb:	adc    al,0x2c
  404dbd:	mov    al,0xf3
  404dbf:	fs inc edi
  404dc1:	(bad)  
  404dc2:	scas   eax,DWORD PTR es:[edi]
  404dc3:	adc    al,0xbc
  404dc5:	inc    esi
  404dc6:	js     0x404d67
  404dc8:	mov    DWORD PTR [edi-0x2d],0x887d7780
  404dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dd0:	mov    al,0x26
  404dd2:	retf   
  404dd3:	sub    ah,dl
  404dd5:	loope  0x404d6f
  404dd7:	jmp    0x404d91
  404dd9:	leave  
  404dda:	(bad)  
  404ddc:	sbb    eax,0xdaf7a52
  404de1:	fst    DWORD PTR [ecx]
  404de3:	add    DWORD PTR [esi],esp
  404de5:	push   esp
  404de6:	cmp    eax,DWORD PTR [esi]
  404de8:	xor    BYTE PTR [edx+0x2732b974],ah
  404dee:	jmp    0x4aea8083
  404df3:	or     al,0x58
  404df5:	cmp    edx,DWORD PTR [ebx]
  404df7:	push   0x2ce95807
  404dfc:	mov    ch,0xb4
  404dfe:	rcr    DWORD PTR [eax-0x6071572c],1
  404e04:	or     al,0xc8
  404e06:	inc    ebx
  404e07:	jl     0x404e33
  404e09:	gs add cl,ah
  404e0c:	push   ebp
  404e0d:	cli    
  404e0e:	xchg   ebx,eax
  404e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e10:	inc    edx
  404e11:	jle    0x404e39
  404e13:	pusha  
  404e14:	pop    gs
  404e16:	pop    edx
  404e17:	scas   eax,DWORD PTR es:[edi]
  404e18:	or     DWORD PTR [ecx+0x13],ebp
  404e1b:	je     0x404e95
  404e1d:	cs mov cl,0x75
  404e20:	(bad)  [edi]
  404e22:	xor    bh,ah
  404e24:	push   0xa
  404e26:	stc    
  404e27:	add    eax,DWORD PTR [esi]
  404e29:	lahf   
  404e2a:	aaa    
  404e2b:	xor    al,0x59
  404e2d:	movups xmm0,XMMWORD PTR [ecx-0x159c0832]
  404e34:	xor    ecx,DWORD PTR [eax+0x1592b3d7]
  404e3a:	push   ebp
  404e3b:	add    BYTE PTR [edx],0xf9
  404e3e:	(bad)  
  404e3f:	fstp   QWORD PTR [esp+ecx*4]
  404e42:	push   0xfffffff1
  404e44:	and    BYTE PTR [ebx-0xe88b82d],al
  404e4a:	dec    edi
  404e4b:	leave  
  404e4c:	sub    esi,DWORD PTR [edx]
  404e4e:	div    DWORD PTR [esi-0x7df508dc]
  404e54:	call   0x2456:0x34b32bcc
  404e5b:	and    eax,0x52fec6f8
  404e60:	push   ebp
  404e61:	cwde   
  404e62:	push   cs
  404e63:	cmp    DWORD PTR [edx+0x7da7f2ac],0xa960f8a8
  404e6d:	push   esp
  404e6e:	inc    eax
  404e6f:	dec    eax
  404e70:	mov    BYTE PTR ds:[ecx+0x7caa2cf7],dh
  404e77:	(bad)  
  404e78:	push   0x68
  404e7a:	ror    BYTE PTR [edx+ebp*1-0x59],1
  404e7e:	nop
  404e7f:	pop    esi
  404e80:	or     eax,0x779e9b5e
  404e85:	dec    ebp
  404e86:	fld    QWORD PTR [esi+edx*4-0x3f]
  404e8a:	adc    bl,BYTE PTR [ebx+0x48]
  404e8d:	int3   
  404e8e:	in     al,dx
  404e8f:	lock adc BYTE PTR [esi+0x4c],0x8
  404e94:	test   eax,0xb6a575f0
  404e99:	shl    esp,cl
  404e9b:	les    edi,FWORD PTR [edi]
  404e9d:	nop
  404e9e:	fld    TBYTE PTR [ecx+eax*2+0x131844e3]
  404ea5:	adc    al,0x18
  404ea7:	(bad)  
  404ea8:	pop    ecx
  404ea9:	cmp    al,0x1e
  404eab:	ds sub al,0xd4
  404eae:	adc    DWORD PTR [ecx],ecx
  404eb0:	arpl   WORD PTR [ebx],ax
  404eb2:	jle    0x404efc
  404eb4:	aaa    
  404eb5:	arpl   WORD PTR [eax-0x57e2f550],ax
  404ebb:	sub    DWORD PTR [edi+0x2081b6be],eax
  404ec1:	or     DWORD PTR [eax],edi
  404ec3:	xchg   ebx,eax
  404ec4:	mov    ds:0x7f88278b,al
  404ec9:	fist   WORD PTR [esi+0x7a06639a]
  404ecf:	int3   
  404ed0:	jecxz  0x404f0f
  404ed2:	or     DWORD PTR [esi+0x37],ebp
  404ed5:	js     0x404f0a
  404ed7:	stos   BYTE PTR es:[edi],al
  404ed8:	ss cmc 
  404eda:	retf   0x3135
  404edd:	mov    eax,ds:0xf3838a29
  404ee2:	add    BYTE PTR [ebx],bh
  404ee4:	(bad)  
  404ee5:	jmp    0x407268
  404eea:	inc    ecx
  404eeb:	imul   eax,ebp,0x3a
  404eee:	ret    
  404eef:	jb     0x404f68
  404ef1:	or     ebp,DWORD PTR [ecx+0x5bae21e1]
  404ef7:	mov    dl,0x5d
  404ef9:	neg    DWORD PTR [edx]
  404efb:	pop    edi
  404efc:	jo     0x404f6e
  404efe:	sbb    bl,BYTE PTR [edi+0x70]
  404f01:	jo     0x404efc
  404f03:	dec    ebp
  404f04:	push   esp
  404f05:	inc    ebx
  404f06:	test   eax,0xaee703e7
  404f0b:	mov    ds:0x2d493b35,eax
  404f10:	jb     0x404edb
  404f12:	test   DWORD PTR [edx-0x1e],edx
  404f15:	ds xchg edx,eax
  404f17:	mov    eax,0x571d4fcd
  404f1c:	retf   
  404f1d:	(bad)  
  404f1f:	dec    ebp
  404f20:	or     al,0x4c
  404f22:	mov    ecx,0x70907a8
  404f27:	jo     0x404f91
  404f29:	or     esp,DWORD PTR [eax-0x5834fd13]
  404f2f:	cmp    al,0x8c
  404f31:	addr16 push edx
  404f33:	add    ecx,DWORD PTR [ecx+0x3e]
  404f36:	xchg   ebp,eax
  404f37:	jge    0x404f15
  404f39:	pop    ebx
  404f3a:	sbb    ch,BYTE PTR [ebp-0x23edb823]
  404f40:	push   0xffffff8f
  404f42:	mov    ecx,0xf79353f5
  404f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f48:	stos   BYTE PTR es:[edi],al
  404f49:	mov    bl,0x6c
  404f4b:	mov    dh,BYTE PTR ds:0xed06d7ee
  404f51:	neg    DWORD PTR [ebp+edi*2+0x14]
  404f55:	aaa    
  404f56:	outs   dx,BYTE PTR ds:[esi]
  404f57:	jmp    0x404f68
  404f59:	jb     0x404f24
  404f5b:	outs   dx,BYTE PTR ds:[esi]
  404f5c:	enter  0xee1c,0xa9
  404f60:	pop    edi
  404f61:	mov    WORD PTR [ecx-0x21],es
  404f64:	add    edi,ecx
  404f66:	(bad)  
  404f68:	mov    esi,0x3be76c3f
  404f6d:	cmp    cl,BYTE PTR [edx+0x4c]
  404f70:	loopne 0x404fae
  404f72:	pop    edx
  404f73:	rcr    DWORD PTR [ecx-0x5a3d02e],cl
  404f79:	and    BYTE PTR [ecx+esi*2-0x38],ch
  404f7d:	push   ebx
  404f7e:	rep outs dx,DWORD PTR ds:[esi]
  404f80:	add    cl,dh
  404f82:	xor    al,0x27
  404f84:	dec    ebx
  404f85:	push   esp
  404f86:	test   BYTE PTR [edx-0x1d],ch
  404f89:	inc    ebx
  404f8a:	aaa    
  404f8b:	test   BYTE PTR [edx],bl
  404f8d:	out    dx,eax
  404f8e:	push   ds
  404f8f:	mov    edx,esi
  404f91:	dec    esp
  404f92:	test   DWORD PTR [edx-0x3bf2acc9],esp
  404f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f99:	repz test BYTE PTR [esi-0x43],0x95
  404f9e:	add    dh,BYTE PTR ds:0x5fa94152
  404fa4:	pop    ds
  404fa5:	(bad)  
  404fa6:	aaa    
  404fa7:	mov    ecx,ebp
  404fa9:	dec    esi
  404faa:	jmp    0x404ffb
  404fac:	mov    ecx,0x8e5b8439
  404fb1:	sbb    DWORD PTR [edi+0x2ad95d11],ecx
  404fb7:	push   ebx
  404fb8:	mov    BYTE PTR [ebp-0x1079dd02],0x99
  404fbf:	push   edx
  404fc0:	test   DWORD PTR gs:[edx-0x1b195b8d],esi
  404fc7:	or     eax,ecx
  404fc9:	pop    esp
  404fca:	adc    DWORD PTR [ebp-0xf],0xffffffc4
  404fce:	iret   
  404fcf:	or     bl,cl
  404fd1:	test   al,0x69
  404fd3:	or     eax,0x552fa32f
  404fd8:	rcl    BYTE PTR [ecx+0x5d],1
  404fdb:	mov    bh,0x10
  404fdd:	das    
  404fde:	push   0x5bfca361
  404fe3:	imul   ebx,DWORD PTR [eax-0x71],0xffffff90
  404fe7:	xchg   esi,eax
  404fe8:	or     DWORD PTR [ebp-0x63],ebx
  404feb:	mov    al,0x1
  404fed:	lods   eax,DWORD PTR ds:[esi]
  404fee:	or     bh,BYTE PTR [ecx-0x36f3854b]
  404ff4:	les    ecx,FWORD PTR [ecx+0x349afb93]
  404ffa:	stos   BYTE PTR es:[edi],al
  404ffb:	(bad)
  404ffe:	es (bad) 
  405000:	lahf   
  405001:	std    
  405002:	mov    ebp,0xab785cc5
  405007:	aaa    
  405008:	and    BYTE PTR [ebx],ah
  40500a:	adc    al,0x4b
  40500c:	mov    esp,0x9f182cb9
  405011:	push   cs
  405012:	push   ds
  405013:	mov    gs,eax
  405015:	cs pushf 
  405017:	daa    
  405018:	sub    BYTE PTR [edx-0x80],dh
  40501b:	push   0xffffffd5
  40501d:	xchg   ebp,eax
  40501e:	out    0x6a,eax
  405020:	cmc    
  405021:	adc    edx,0xffffff96
  405024:	outs   dx,DWORD PTR ds:[esi]
  405025:	or     edi,DWORD PTR [edi]
  405027:	into   
  405028:	dec    ecx
  405029:	mov    edi,0x6cd6a361
  40502e:	mov    dl,0xa2
  405030:	js     0x40500e
  405032:	pop    edi
  405033:	int    0xc6
  405035:	pop    ebx
  405036:	xor    esp,DWORD PTR [ebx+eiz*1+0x34]
  40503a:	fcomp  QWORD PTR [ebp+0x66]
  40503d:	push   ds
  40503e:	mov    cl,0xbb
  405040:	ins    DWORD PTR es:[edi],dx
  405041:	mov    edi,0x6500aa7f
  405046:	in     eax,0xb5
  405048:	add    DWORD PTR [ebx],0xffffffb8
  40504b:	(bad)  
  40504d:	popf   
  40504e:	popa   
  40504f:	pop    esp
  405050:	les    ebp,FWORD PTR [ecx+0x51]
  405053:	call   FWORD PTR [edi]
  405055:	mov    cl,BYTE PTR [ebx+0x7a]
  405058:	test   BYTE PTR [eax-0x24],bh
  40505b:	cwde   
  40505c:	sbb    al,0x8a
  40505e:	cmp    dh,BYTE PTR [ebx]
  405060:	repz inc DWORD PTR [eax-0x24]
  405064:	(bad)  
  405065:	adc    BYTE PTR [ebx-0x39],al
  405068:	fimul  DWORD PTR [eax]
  40506a:	push   es
  40506b:	or     dl,dh
  40506d:	inc    esi
  40506e:	xor    BYTE PTR [ebx],al
  405070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405071:	nop
  405072:	mov    dh,0xf2
  405074:	in     eax,0x49
  405076:	not    esi
  405078:	outs   dx,BYTE PTR ds:[esi]
  405079:	jb     0x405008
  40507b:	mov    ebp,0xd0a2c1b0
  405080:	std    
  405081:	or     BYTE PTR [edx+ecx*8-0x80],0xe2
  405086:	xor    esp,ebx
  405088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405089:	dec    ebp
  40508a:	jno    0x405061
  40508c:	loop   0x405052
  40508e:	push   ebp
  40508f:	stos   DWORD PTR es:[edi],eax
  405090:	iret   
  405091:	sub    bl,BYTE PTR [eax+0x4649229e]
  405097:	outs   dx,DWORD PTR gs:[esi]
  405099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40509a:	push   esp
  40509b:	mov    al,0x8a
  40509d:	les    edx,FWORD PTR [eax+0x37164a43]
  4050a3:	or     al,0xee
  4050a5:	imul   eax,DWORD PTR [eax],0xfffffff1
  4050a8:	mov    ecx,0x33f079c3
  4050ad:	arpl   WORD PTR [edi-0x39],sp
  4050b0:	lahf   
  4050b1:	sub    BYTE PTR [eax],ch
  4050b3:	pop    ebx
  4050b4:	jg     0x40505c
  4050b6:	jmp    0x205b8161
  4050bb:	cwde   
  4050bc:	inc    ebp
  4050bd:	xchg   ebp,eax
  4050be:	push   eax
  4050bf:	sbb    al,0x5c
  4050c1:	mov    ecx,0xba537750
  4050c6:	out    dx,eax
  4050c7:	(bad)  [edi]
  4050c9:	mov    ecx,0x39608221
  4050ce:	out    dx,al
  4050cf:	cmc    
  4050d0:	cmp    al,0x58
  4050d2:	cmp    ecx,edi
  4050d4:	inc    eax
  4050d5:	pop    edi
  4050d6:	dec    ebx
  4050d7:	(bad)
  4050db:	add    BYTE PTR [edi],al
  4050dd:	aam    0x5c
  4050df:	sar    ebx,0x5b
  4050e2:	lar    ebp,ax
  4050e5:	push   ds
  4050e6:	or     eax,0xa0dbaee2
  4050eb:	pop    edi
  4050ec:	push   eax
  4050ed:	push   cs
  4050ee:	cmp    bl,BYTE PTR [eax+0x2d]
  4050f1:	push   ebx
  4050f2:	jne    0x40507e
  4050f4:	inc    eax
  4050f5:	or     esi,ecx
  4050f7:	push   esi
  4050f8:	push   eax
  4050f9:	cmp    eax,0x3140e052
  4050fe:	les    edx,FWORD PTR [eax+0x3164d73b]
  405104:	jb     0x40511a
  405106:	push   edx
  405107:	icebp  
  405108:	sub    al,0xd4
  40510a:	out    0xc5,eax
  40510c:	cmp    BYTE PTR [edx],cl
  40510e:	call   0x67c475b5
  405113:	push   0xffffff83
  405115:	ds cmp eax,0xfea6efbd
  40511b:	outs   dx,BYTE PTR ds:[esi]
  40511c:	les    ecx,FWORD PTR [esi-0x71]
  40511f:	retf   
  405120:	pop    ecx
  405121:	mov    cl,0x2
  405123:	ficomp WORD PTR [ebx+0x2d]
  405126:	loop   0x4050f7
  405128:	push   esp
  405129:	or     ecx,DWORD PTR [esi+0x13c79be5]
  40512f:	pop    edx
  405130:	jle    0x4050b3
  405132:	fst    QWORD PTR [esi+esi*1]
  405135:	cmc    
  405136:	ss stos DWORD PTR es:[edi],eax
  405138:	es ds mov al,0x66
  40513c:	xor    al,0xf6
  40513e:	popf   
  40513f:	add    cl,bh
  405141:	pop    edi
  405142:	imul   ecx
  405144:	or     al,0xf9
  405146:	ficomp DWORD PTR [eax-0x218d4709]
  40514c:	xchg   ebp,ebp
  40514e:	repz dec ecx
  405150:	mov    ch,0x9d
  405152:	(bad)  
  405154:	stos   BYTE PTR es:[edi],al
  405155:	jp     0x4051d0
  405157:	mov    cl,0x36
  405159:	pop    es
  40515a:	icebp  
  40515b:	fs inc ebp
  40515d:	add    al,0x9d
  40515f:	push   0x5b
  405161:	shr    DWORD PTR [ecx],0x3a
  405164:	push   ebp
  405165:	fcmovb st,st(4)
  405167:	mov    edx,0xaf875380
  40516c:	loopne 0x4051bb
  40516e:	xchg   ebx,esi
  405170:	sbb    ebp,DWORD PTR [ebp-0x21]
  405173:	add    eax,0x49d936ae
  405178:	(bad)  
  405179:	add    bh,BYTE PTR ss:[esp+esi*1+0x404d766d]
  405181:	in     eax,dx
  405182:	icebp  
  405183:	adc    BYTE PTR [ebp+ecx*1+0x393bc103],0x34
  40518b:	mov    ah,0xcb
  40518d:	pop    esp
  40518e:	ss rol edx,cl
  405191:	(bad)  
  405192:	scas   al,BYTE PTR es:[edi]
  405193:	mov    esi,DWORD PTR [ebp-0x5245337e]
  405199:	scas   eax,DWORD PTR es:[edi]
  40519a:	mov    dl,0x7f
  40519c:	or     BYTE PTR [ecx+0x7],bl
  40519f:	or     dl,bh
  4051a1:	fisubr WORD PTR [ecx]
  4051a3:	daa    
  4051a4:	add    al,0x22
  4051a6:	ds dec ebp
  4051a8:	xchg   esi,eax
  4051a9:	stos   BYTE PTR es:[edi],al
  4051aa:	mov    dh,0x25
  4051ac:	ss or  bh,ch
  4051af:	rol    DWORD PTR [eax],cl
  4051b1:	retf   0x8fc
  4051b4:	mov    esp,0x2d975651
  4051b9:	and    al,0x99
  4051bb:	(bad)  
  4051bc:	imul   ebp,eax,0xffffff92
  4051bf:	and    ah,BYTE PTR [ecx]
  4051c1:	jnp    0x40517d
  4051c3:	test   ax,0xb7f2
  4051c7:	push   edx
  4051c8:	inc    esp
  4051c9:	pop    eax
  4051ca:	pop    ebx
  4051cb:	arpl   cx,bx
  4051cd:	call   0x3d555bd9
  4051d2:	fidivr WORD PTR [ebp-0x2c95fdfe]
  4051d8:	jge    0x4051a8
  4051da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051db:	data16 shr BYTE PTR [ebx+ebx*4-0x33],1
  4051e0:	and    BYTE PTR [ebp+0x39],dl
  4051e3:	test   eax,0x8ecee077
  4051e8:	mov    eax,0xf4d75a8c
  4051ed:	mov    ch,bh
  4051ef:	mov    bl,0x9b
  4051f1:	xchg   esi,eax
  4051f2:	jns    0x4051ff
  4051f4:	cli    
  4051f5:	frstor [esi+edx*2]
  4051f8:	xchg   ecx,eax
  4051f9:	dec    esi
  4051fa:	out    dx,al
  4051fb:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4051fd:	xchg   edi,eax
  4051fe:	xchg   ebx,eax
  4051ff:	push   cs
  405200:	sbb    DWORD PTR ds:0xc5129f17,0x87864ad1
  40520a:	mov    edx,0xc8eebe7d
  40520f:	loope  0x40526f
  405211:	into   
  405212:	xchg   esp,eax
  405213:	mov    esp,0x5fdcef48
  405218:	mov    dh,0x8e
  40521a:	scas   al,BYTE PTR es:[edi]
  40521b:	clc    
  40521c:	adc    eax,0x47154393
  405221:	add    eax,0xdd1d53f3
  405226:	jmp    0x405273
  405228:	and    DWORD PTR [esi-0x52],esp
  40522b:	xlat   BYTE PTR ds:[ebx]
  40522c:	add    al,0x46
  40522e:	pop    ds
  40522f:	mov    edi,0x74b19b68
  405234:	outs   dx,DWORD PTR ds:[esi]
  405235:	pop    eax
  405236:	and    ebx,DWORD PTR [ebx-0x18a59521]
  40523c:	jne    0x40520b
  40523e:	gs cdq 
  405240:	cmc    
  405241:	cmp    esp,edi
  405243:	hlt    
  405244:	cmp    al,ah
  405246:	add    edx,DWORD PTR [esi-0x241851e8]
  40524c:	(bad)  
  40524d:	xor    eax,0xad42e957
  405252:	retf   
  405253:	cs into 
  405255:	mov    ebx,0xd6eeedd1
  40525a:	stos   DWORD PTR es:[edi],eax
  40525b:	(bad)
  40525e:	into   
  40525f:	xor    DWORD PTR [edx-0x5594c68c],ebx
  405265:	xabort 0xcc
  405268:	call   0xe41a:0xa54f357d
  40526f:	pop    ss
  405270:	or     eax,0xb3e63115
  405275:	add    esi,DWORD PTR [edi]
  405277:	jbe    0x4052ef
  405279:	or     al,0x25
  40527b:	push   ss
  40527c:	sub    DWORD PTR [edx-0x16],ebp
  40527f:	ret    0x8056
  405282:	imul   ebx,esi,0xffffffc2
  405285:	scas   al,BYTE PTR es:[edi]
  405286:	(bad)  
  405287:	ror    BYTE PTR [eax-0x48],1
  40528a:	imul   ah
  40528c:	cmc    
  40528d:	loopne 0x40525b
  40528f:	mov    eax,0x70699508
  405294:	jne    0x40528a
  405296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405297:	retf   0x26ef
  40529a:	test   BYTE PTR [ebx],bl
  40529c:	pushf  
  40529d:	lods   al,BYTE PTR ds:[esi]
  40529e:	outs   dx,BYTE PTR ds:[esi]
  40529f:	mov    ch,BYTE PTR ds:0x15cc743
  4052a5:	ret    
  4052a6:	mov    cs,edi
  4052a8:	hlt    
  4052a9:	adc    BYTE PTR [eax+0x7fdf2fd9],dh
  4052af:	pusha  
  4052b0:	or     DWORD PTR [ecx+0x35],0x5c
  4052b4:	inc    ebx
  4052b5:	ss test eax,0x9f9de749
  4052bb:	imul   ecx,DWORD PTR [ebx-0x65],0x76ae3a72
  4052c2:	sti    
  4052c3:	das    
  4052c4:	pop    ss
  4052c5:	arpl   WORD PTR ds:0xa1bd1f8f,bp
  4052cb:	(bad)  
  4052cd:	retf   0x2fef
  4052d0:	jae    0x405290
  4052d2:	imul   ebp,edx,0xffffffd7
  4052d5:	sub    ch,BYTE PTR [edx]
  4052d7:	xchg   esp,eax
  4052d8:	pop    ecx
  4052d9:	inc    edx
  4052da:	xor    bh,BYTE PTR [eax-0x74]
  4052dd:	icebp  
  4052de:	ss nop
  4052e0:	les    eax,FWORD PTR [eax+eax*8]
  4052e3:	in     eax,dx
  4052e4:	or     ah,bh
  4052e6:	fdiv   QWORD PTR [ecx-0x74]
  4052e9:	mov    eax,ds:0x5a643c04
  4052ee:	sbb    dh,BYTE PTR [edi+0x437332c7]
  4052f4:	jns    0x4052a9
  4052f6:	fdiv   st(5),st
  4052f8:	jmp    FWORD PTR [edi+0xd2c0215]
  4052fe:	adc    BYTE PTR [esi+0x33],bl
  405301:	jmp    0x405283
  405303:	pop    edx
  405304:	mov    ch,0xe1
  405306:	mov    dh,0x1
  405308:	into   
  405309:	sub    bh,dh
  40530b:	xor    eax,0xb8550356
  405310:	push   esp
  405311:	sbb    eax,0xa0ffd749
  405316:	adc    BYTE PTR [edi+0x75],cl
  405319:	adc    ah,BYTE PTR [esi]
  40531b:	sub    dl,BYTE PTR [esi-0x7e]
  40531e:	outs   dx,BYTE PTR ds:[esi]
  40531f:	cmp    al,0x36
  405321:	adc    esp,DWORD PTR [esi-0x1f]
  405324:	fwait
  405325:	xor    bl,BYTE PTR [esp+esi*8]
  405328:	push   esp
  405329:	and    ebp,DWORD PTR [eax+0x357a2a74]
  40532f:	pop    esp
  405330:	xchg   ecx,eax
  405331:	sub    eax,0xa1ac7de6
  405336:	(bad)  
  405338:	cmp    cl,BYTE PTR [ebx+ecx*1+0x48]
  40533c:	aad    0x0
  40533e:	dec    esi
  40533f:	jle    0x4052fb
  405341:	jmp    0xdf1:0x40a5ea0
  405348:	addr16 cdq 
  40534a:	mov    esp,0xd67f4fc1
  40534f:	aaa    
  405350:	or     BYTE PTR [edi-0x369bc233],cl
  405356:	push   DWORD PTR [edx]
  405358:	and    cl,BYTE PTR [edx+ebx*1-0x10]
  40535c:	enter  0xac03,0x7a
  405360:	jnp    0x40534e
  405362:	data16 stc 
  405364:	jmp    DWORD PTR [edx+ebp*2+0x58e991f8]
  40536b:	enter  0x77,0xff
  40536f:	repnz pusha 
  405371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405372:	inc    ecx
  405373:	ret    
  405374:	retf   0x9b99
  405377:	les    cx,DWORD PTR ds:0x1bbf84c2
  40537e:	enter  0xe351,0x32
  405382:	cld    
  405383:	sub    eax,ebp
  405385:	mov    ah,0x6e
  405387:	and    al,0xa0
  405389:	mov    bl,0x7
  40538b:	inc    ebx
  40538c:	xchg   esp,eax
  40538d:	or     DWORD PTR ds:[ebx+0x3c],0xffffffed
  405392:	and    al,0x15
  405394:	adc    eax,esp
  405396:	aam    0xd8
  405398:	fwait
  405399:	jmp    DWORD PTR [esi]
  40539b:	mov    ah,0x76
  40539d:	(bad)  
  40539f:	frstpm(287 only) 
  4053a1:	in     eax,dx
  4053a2:	push   ss
  4053a3:	xchg   ebx,eax
  4053a4:	inc    ecx
  4053a5:	pop    edi
  4053a6:	jge    0x405364
  4053a8:	nop
  4053a9:	lahf   
  4053aa:	lea    esp,[esi-0x80]
  4053ad:	ret    
  4053ae:	cld    
  4053af:	mov    cl,0x1f
  4053b1:	out    0x43,eax
  4053b3:	xchg   esp,eax
  4053b4:	pop    edx
  4053b5:	jne    0x405379
  4053b7:	scas   eax,DWORD PTR es:[edi]
  4053b8:	jo     0x4053fa
  4053ba:	enter  0xc007,0xec
  4053be:	cmp    DWORD PTR [esi],0x2f5e7d3c
  4053c4:	test   eax,0xdc964bb4
  4053c9:	div    DWORD PTR [eax]
  4053cb:	or     DWORD PTR [edi],ebp
  4053cd:	outs   dx,DWORD PTR ds:[esi]
  4053ce:	pusha  
  4053cf:	aas    
  4053d0:	mov    eax,0x42c1bd54
  4053d5:	push   eax
  4053d6:	inc    eax
  4053d7:	into   
  4053d8:	imul   eax,DWORD PTR [eax],0x46
  4053db:	cmp    eax,0xcc1d81b8
  4053e0:	mov    ah,0xef
  4053e2:	xchg   esp,eax
  4053e3:	imul   ecx,DWORD PTR [eax],0xffffff91
  4053e6:	mov    ch,0xca
  4053e8:	retf   
  4053e9:	xor    BYTE PTR ds:0x463cb9d7,dl
  4053ef:	test   BYTE PTR [esi+0x4b],bh
  4053f2:	inc    esp
  4053f3:	xor    BYTE PTR [ebx+ecx*4+0x29a774ad],0xd3
  4053fb:	cwde   
  4053fc:	pop    eax
  4053fd:	in     eax,0x91
  4053ff:	outs   dx,BYTE PTR ds:[esi]
  405400:	mov    ds:0x957a3592,al
  405405:	dec    esi
  405406:	adc    BYTE PTR [edi],ch
  405408:	lods   al,BYTE PTR ss:[esi]
  40540a:	sub    dl,BYTE PTR [eax]
  40540c:	xlat   BYTE PTR ds:[ebx]
  40540d:	add    eax,esp
  40540f:	or     esp,DWORD PTR [eax-0x5c6b873]
  405415:	popa   
  405416:	retf   
  405417:	adc    esp,0xf9177505
  40541d:	jbe    0x4053a9
  40541f:	stc    
  405420:	jg     0x4053f0
  405422:	mov    ds:0xad69b0ea,eax
  405427:	dec    edi
  405428:	sbb    BYTE PTR [ecx+0x295fe3f2],ch
  40542e:	fs fisttp WORD PTR fs:[ebx-0x1a]
  405433:	xor    eax,0x262f0143
  405438:	mov    al,ds:0xae3dbf71
  40543d:	xchg   edi,eax
  40543e:	xlat   BYTE PTR ds:[ebx]
  40543f:	leave  
  405440:	retf   
  405441:	add    BYTE PTR [edx-0x43],bl
  405444:	inc    esi
  405445:	xor    DWORD PTR [edi-0x79],esi
  405448:	fnstenv [esi]
  40544a:	lds    esi,FWORD PTR [edx+0x3924816b]
  405450:	outs   dx,BYTE PTR ds:[esi]
  405451:	fdivr  QWORD PTR ds:0xa1fdcfba
  405457:	jge    0x405440
  405459:	lahf   
  40545a:	(bad)  
  40545b:	daa    
  40545c:	add    al,0x93
  40545e:	dec    esp
  40545f:	es int3 
  405461:	jnp    0x405415
  405463:	add    esp,DWORD PTR [esp+esi*8]
  405466:	cmp    DWORD PTR [ecx+0x1d],ecx
  405469:	xor    eax,0x767326d1
  40546e:	addr16 inc ecx
  405470:	xchg   ecx,eax
  405471:	in     eax,dx
  405472:	sub    ch,ch
  405474:	shl    BYTE PTR [ebx],0x1b
  405477:	je     0x405447
  405479:	adc    BYTE PTR [ecx-0x70],dh
  40547c:	sbb    eax,0xeb065d12
  405481:	push   0xffffffe5
  405483:	call   0xfa3f:0xbaabef48
  40548a:	out    dx,eax
  40548b:	repz push ecx
  40548d:	push   cs
  40548e:	mov    esi,0x59be3ce4
  405493:	pop    ecx
  405494:	sbb    eax,DWORD PTR [edi+0x3c]
  405497:	jnp    0x40547f
  405499:	cmp    eax,0xc0c3e394
  40549e:	lods   al,BYTE PTR ds:[esi]
  40549f:	mov    WORD PTR [esp+edx*8-0x4a00d72],gs
  4054a6:	mov    edx,0xad4a1aaf
  4054ab:	rcr    DWORD PTR [edi+0x3c1ced44],0xc7
  4054b2:	ds jge 0x40544f
  4054b5:	iret   
  4054b6:	xchg   ebx,eax
  4054b7:	push   ecx
  4054b8:	push   edx
  4054b9:	cli    
  4054ba:	gs cmc 
  4054bc:	dec    ebp
  4054bd:	cdq    
  4054be:	and    al,0x16
  4054c0:	jge    0x4054cd
  4054c2:	enter  0x32bd,0x36
  4054c6:	scas   eax,DWORD PTR es:[edi]
  4054c7:	loopne 0x4054a2
  4054c9:	xchg   ebx,eax
  4054ca:	popf   
  4054cb:	in     al,dx
  4054cc:	ss loope 0x4054a2
  4054cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054d0:	sbb    bl,BYTE PTR ds:[eax+0x38cec164]
  4054d7:	add    BYTE PTR [eax-0x58056427],ch
  4054dd:	cmp    al,0x64
  4054df:	(bad)  
  4054e0:	std    
  4054e1:	mov    WORD PTR [edi],ss
  4054e3:	fidiv  WORD PTR [ebx+edx*8-0x5d1decf2]
  4054ea:	xchg   edx,eax
  4054eb:	xchg   ecx,eax
  4054ec:	sbb    edx,edi
  4054ee:	rol    BYTE PTR [ecx],cl
  4054f0:	push   ss
  4054f1:	ds mov ah,0xc3
  4054f4:	outs   dx,DWORD PTR ds:[esi]
  4054f5:	sbb    al,BYTE PTR [edi+0x46]
  4054f8:	mov    ebp,0x1205f275
  4054fe:	int3   
  4054ff:	hlt    
  405500:	push   esp
  405501:	fidivr DWORD PTR [eax+0x12]
  405504:	jns    0x405559
  405506:	iret   
  405507:	xchg   esi,eax
  405508:	push   edi
  405509:	xor    DWORD PTR [edx],edi
  40550b:	jg     0x405493
  40550d:	mov    bl,0x36
  40550f:	mov    cs,WORD PTR [ecx]
  405511:	fcmovu st,st(0)
  405513:	test   DWORD PTR [ecx+0x3b51a7c5],edi
  405519:	popa   
  40551a:	cmp    ebx,DWORD PTR [ecx+0x58]
  40551d:	mov    eax,0xf7eb297f
  405522:	pop    ds
  405523:	ror    cl,1
  405525:	xor    eax,0x1767c900
  40552a:	mov    edx,0x6137b0
  40552f:	imul   ebp
  405531:	or     eax,0xc73d127c
  405536:	sub    al,0x5e
  405538:	jno    0x40551b
  40553a:	inc    ebx
  40553b:	je     0x4055b3
  40553d:	stc    
  40553e:	lahf   
  40553f:	adc    esp,edx
  405541:	sbb    dl,bh
  405543:	nop
  405544:	and    ebx,ebp
  405546:	sub    al,0x0
  405548:	jp     0x40551e
  40554a:	push   edx
  40554b:	rcr    ecx,1
  40554d:	inc    edi
  40554e:	retf   0xc760
  405551:	fxch   st(7)
  405553:	repnz add DWORD PTR [ebp-0x26],ebx
  405557:	add    al,0xbf
  405559:	xor    cl,al
  40555b:	push   cs
  40555c:	in     al,dx
  40555d:	xlat   BYTE PTR ds:[ebx]
  40555e:	mov    dh,0x6f
  405561:	clc    
  405562:	in     al,dx
  405563:	(bad)  
  405564:	je     0x4054fc
  405566:	(bad)  
  405568:	mov    dl,0x9a
  40556a:	jmp    0x493ac4bb
  40556f:	add    dl,BYTE PTR [ebp+ebx*2-0x3d]
  405573:	xor    ebx,0x822d0b9a
  405579:	sub    al,dh
  40557b:	pop    ss
  40557c:	sub    esp,esi
  40557e:	ins    DWORD PTR es:[edi],dx
  40557f:	or     eax,0x72faa93e
  405584:	(bad)  
  405585:	sar    cl,cl
  405587:	sar    DWORD PTR [ebp+0x76558ada],0xfd
  40558e:	jge    0x405581
  405590:	inc    esp
  405591:	ja     0x4055bb
  405593:	les    eax,FWORD PTR [edx-0x53]
  405596:	xor    ch,BYTE PTR [ecx]
  405598:	mov    DWORD PTR [edx-0x4c],ebx
  40559b:	(bad)  
  40559c:	outs   dx,DWORD PTR ds:[esi]
  40559d:	jmp    0x4055c9
  40559f:	sbb    eax,0x3f5b632b
  4055a4:	imul   ebx,DWORD PTR [ecx+0x69f6d7f7],0xd09a074e
  4055ae:	dec    edx
  4055af:	ss repnz into 
  4055b2:	mov    dl,BYTE PTR [ebp+0xb]
  4055b5:	ret    0x1234
  4055b8:	mov    ah,0xcf
  4055ba:	and    al,BYTE PTR [edx]
  4055bc:	xor    eax,0xb9911ab8
  4055c1:	cmp    ebx,DWORD PTR [ebx]
  4055c3:	rcl    esp,1
  4055c5:	int    0x59
  4055c7:	jmp    0x4ed2:0x4cbfd0cd
  4055ce:	sti    
  4055cf:	lods   eax,DWORD PTR ds:[esi]
  4055d0:	sub    eax,0xb6a28995
  4055d5:	mov    bl,0x2a
  4055d7:	mov    dh,0x65
  4055d9:	xor    al,0x88
  4055db:	xor    ah,al
  4055dd:	dec    esp
  4055de:	jmp    0x405634
  4055e0:	add    bh,BYTE PTR [eax]
  4055e2:	cdq    
  4055e3:	enter  0x88c,0xe8
  4055e7:	shr    DWORD PTR [eax-0x54],1
  4055ea:	in     al,dx
  4055eb:	and    eax,ebx
  4055ed:	jo     0x405605
  4055ef:	dec    esp
  4055f0:	repnz ficomp DWORD PTR [edi-0x2]
  4055f4:	call   0x7560:0x900c386a
  4055fb:	je     0x405590
  4055fd:	ins    DWORD PTR es:[edi],dx
  4055fe:	dec    esi
  4055ff:	stc    
  405600:	add    al,0x25
  405602:	shl    ebx,cl
  405604:	pop    ebp
  405605:	(bad)  
  405606:	js     0x405675
  405608:	cmc    
  405609:	add    al,0x24
  40560b:	ins    DWORD PTR es:[edi],dx
  40560c:	sar    BYTE PTR [esi-0x69ce002c],cl
  405612:	mov    ch,al
  405614:	push   ecx
  405615:	repnz imul esi,DWORD PTR [ecx],0xfefa7975
  40561c:	(bad)  
  40561d:	jno    0x405650
  40561f:	mov    ds:0xcd9af9b1,al
  405624:	push   0xffffff9f
  405626:	sbb    bh,bh
  405628:	outs   dx,BYTE PTR ds:[esi]
  405629:	xor    ecx,DWORD PTR [edx]
  40562b:	adc    eax,0xb0820548
  405630:	(bad)  
  405631:	fld    DWORD PTR [edx-0x50cf30c9]
  405637:	dec    ebx
  405638:	dec    ebx
  405639:	jmp    0xae3f97a3
  40563e:	pop    edx
  40563f:	sar    esp,1
  405641:	test   al,0x2e
  405643:	add    DWORD PTR [edi],eax
  405645:	xlat   BYTE PTR fs:[ebx]
  405647:	inc    edi
  405648:	test   eax,0x3e55f04
  40564d:	ins    BYTE PTR es:[edi],dx
  40564e:	out    dx,al
  40564f:	ins    BYTE PTR es:[edi],dx
  405650:	out    0xd8,eax
  405652:	repz xor eax,0xb59d588e
  405658:	stc    
  405659:	leave  
  40565a:	push   ebp
  40565b:	push   edi
  40565c:	pop    eax
  40565d:	sbb    al,0xd4
  40565f:	mov    ecx,0xf57c4c40
  405664:	xchg   BYTE PTR [edi+0x5b],ah
  405667:	cmp    al,0xfc
  405669:	jl     0x4056d4
  40566b:	nop
  40566c:	pop    eax
  40566d:	repnz mov edi,0xebdee287
  405673:	jg     0x4056d0
  405675:	stos   DWORD PTR es:[edi],eax
  405676:	icebp  
  405677:	pop    edx
  405678:	outs   dx,DWORD PTR ds:[esi]
  405679:	ficomp DWORD PTR [ebx+eiz*4]
  40567c:	sub    dl,al
  40567e:	jecxz  0x4056e9
  405680:	pop    esp
  405681:	xchg   ebx,eax
  405682:	je     0x405655
  405684:	enter  0xdf6b,0x95
  405688:	jmp    0x9a2714f0
  40568d:	jmp    0x40567b
  40568f:	dec    ecx
  405690:	jns    0x405710
  405692:	scas   al,BYTE PTR es:[edi]
  405693:	jp     0x405690
  405695:	stos   BYTE PTR es:[edi],al
  405696:	aas    
  405697:	(bad)  
  405698:	xor    BYTE PTR [eax-0x64c1c344],al
  40569e:	int    0x12
  4056a0:	js     0x405637
  4056a2:	pop    esp
  4056a3:	pop    ebp
  4056a4:	xchg   ecx,eax
  4056a5:	mov    al,0x4e
  4056a7:	xor    eax,0x33d3fa6a
  4056ac:	jp     0x4056e1
  4056ae:	popf   
  4056af:	push   ds
  4056b0:	pop    esp
  4056b1:	inc    esp
  4056b2:	test   DWORD PTR [esi],ebx
  4056b4:	pop    ebx
  4056b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056b6:	mov    ds:0xaac2fd1e,eax
  4056bb:	icebp  
  4056bc:	sar    BYTE PTR [ebx+0x51],0xd0
  4056c0:	mov    BYTE PTR [ebp-0x26df59ff],al
  4056c6:	push   edx
  4056c7:	or     eax,0x6d3e367b
  4056cc:	loop   0x4056aa
  4056ce:	rcr    ebx,0x6
  4056d1:	sub    BYTE PTR [edi],cl
  4056d3:	ins    BYTE PTR es:[edi],dx
  4056d4:	xor    dh,0x61
  4056d7:	daa    
  4056d8:	sub    edi,edx
  4056da:	pop    ebx
  4056db:	cmc    
  4056dc:	pop    es
  4056dd:	icebp  
  4056de:	es es ret 0x6b08
  4056e3:	adc    dh,BYTE PTR [ebx]
  4056e5:	fidivr DWORD PTR [edx+0x15dfe8c]
  4056eb:	jb     0x40569a
  4056ed:	outs   dx,BYTE PTR ds:[esi]
  4056ee:	sbb    al,0x0
  4056f0:	mov    esp,0x5f7f69cc
  4056f5:	les    ebx,FWORD PTR [edi-0x4d]
  4056f8:	fld    DWORD PTR [ebx+0x68]
  4056fb:	sbb    al,0x6b
  4056fd:	bnd jnp 0x405713
  405700:	xor    DWORD PTR [esp],ecx
  405703:	add    eax,0x765bc667
  405708:	(bad)  
  405709:	rol    DWORD PTR [ebp+0x5a162c9a],cl
  40570f:	loope  0x405698
  405711:	mov    ebx,0xad6716c8
  405716:	jle    0x40576e
  405718:	int3   
  405719:	jb     0x40572f
  40571b:	mov    bl,0x47
  40571d:	in     al,0x4d
  40571f:	pop    ebx
  405720:	dec    DWORD PTR [eax+0x70]
  405723:	dec    edi
  405724:	inc    edx
  405725:	adc    eax,0xc1a0082e
  40572a:	pop    eax
  40572b:	pushf  
  40572c:	into   
  40572d:	ins    DWORD PTR es:[edi],dx
  40572e:	sbb    BYTE PTR es:[ecx],al
  405731:	sar    DWORD PTR [eax+ebx*4],0x17
  405735:	sub    eax,0x2f9fd8d7
  40573a:	les    ebp,FWORD PTR [eax-0x2d3875e5]
  405740:	add    DWORD PTR [edx-0x11],esi
  405743:	xchg   al,bl
  405745:	xor    BYTE PTR fs:[eax],ah
  405748:	out    0xda,al
  40574a:	cwde   
  40574b:	test   eax,0x84c7f447
  405750:	or     dh,BYTE PTR [edi]
  405752:	jae    0x405784
  405754:	jo     0x40575d
  405756:	xchg   edx,eax
  405757:	mov    al,ds:0x47235e05
  40575c:	cmp    DWORD PTR [esi+ebx*8-0x629798e2],0x21f224b
  405767:	outs   dx,DWORD PTR ds:[esi]
  405768:	imul   esi,DWORD PTR [esi+edi*2+0x7edc1d67],0x9333dfa3
  405773:	cli    
  405774:	das    
  405775:	jo     0x4057c7
  405777:	cmp    eax,0x1cec948
  40577c:	arpl   bp,bp
  40577e:	mov    ch,0x9c
  405780:	lods   al,BYTE PTR ds:[esi]
  405781:	inc    eax
  405782:	(bad)
  405786:	sub    bh,BYTE PTR [esi+0x6d]
  405789:	test   edi,ebp
  40578b:	popf   
  40578c:	sbb    BYTE PTR [esi+eiz*8+0x66],dh
  405790:	leave  
  405791:	or     esp,ebx
  405793:	jae    0x405780
  405795:	jo     0x4057f0
  405797:	jnp    0x4057ab
  405799:	and    eax,0xc27a38c0
  40579e:	cs iret 
  4057a0:	ss stc 
  4057a2:	xor    eax,0x612695fe
  4057a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057a8:	mov    esp,0x3d02f045
  4057ad:	fsubr  st,st(1)
  4057af:	dec    edi
  4057b0:	sti    
  4057b1:	test   al,0xfe
  4057b3:	inc    ebx
  4057b4:	or     ch,ah
  4057b6:	lahf   
  4057b7:	pop    edi
  4057b8:	cmp    al,0xd0
  4057ba:	icebp  
  4057bb:	pop    esp
  4057bc:	xchg   edx,eax
  4057bd:	dec    ebx
  4057be:	(bad)  
  4057bf:	and    al,0x93
  4057c1:	ja     0x405838
  4057c3:	sbb    esi,eax
  4057c5:	fwait
  4057c6:	add    al,0x32
  4057c8:	scas   eax,DWORD PTR es:[edi]
  4057c9:	mov    ebp,0xc3c7f8bd
  4057ce:	outs   dx,BYTE PTR ds:[esi]
  4057cf:	out    dx,al
  4057d0:	xchg   edx,eax
  4057d1:	stc    
  4057d2:	xchg   esp,edi
  4057d4:	dec    eax
  4057d5:	mov    DWORD PTR [edx],esi
  4057d7:	mov    edx,0x5c60e37a
  4057dc:	mov    esi,0xd463acbf
  4057e1:	sar    BYTE PTR [esi],0x61
  4057e4:	xchg   DWORD PTR ds:0x20dd00a6,esp
  4057ea:	adc    DWORD PTR [ebx-0x70bc6cd0],ecx
  4057f0:	mov    cl,0x84
  4057f2:	dec    edx
  4057f3:	xor    dh,BYTE PTR [ecx]
  4057f5:	jp     0x405825
  4057f7:	clc    
  4057f8:	inc    ebp
  4057f9:	mov    edx,0x87922893
  4057fe:	fsub   DWORD PTR [edx]
  405800:	(bad)  
  405801:	jmp    FWORD PTR [eax+0x223f5ae2]
  405807:	add    DWORD PTR [ebp+0x76145ce8],ebx
  40580d:	(bad)  
  40580f:	das    
  405810:	shl    DWORD PTR [ebx+0x387521f4],1
  405816:	pop    ds
  405817:	test   eax,0xd1697d61
  40581c:	push   ebp
  40581d:	adc    edx,DWORD PTR [ecx]
  40581f:	adc    esp,esp
  405821:	pop    esp
  405822:	xor    dl,bl
  405824:	stos   BYTE PTR es:[edi],al
  405825:	xchg   DWORD PTR [ebx-0x4d],edx
  405828:	push   0x91546eb5
  40582d:	dec    esp
  40582e:	cli    
  40582f:	and    BYTE PTR [edi+0x36],0xe3
  405833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405834:	adc    ah,BYTE PTR [ebp+0x47]
  405837:	loope  0x4057c9
  405839:	push   0x7f
  40583b:	ins    DWORD PTR es:[edi],dx
  40583c:	inc    esp
  40583d:	ss pop esi
  40583f:	mov    WORD PTR [esi+0x5e],?
  405842:	inc    edi
  405843:	pop    edi
  405844:	popf   
  405845:	mov    ebp,0xd53f05e6
  40584a:	dec    edi
  40584b:	and    DWORD PTR [ebx],esp
  40584d:	sbb    BYTE PTR [ebp+edx*1-0x706a67c6],al
  405854:	fsub   QWORD PTR [edi]
  405856:	sub    al,0xe8
  405858:	jbe    0x405861
  40585a:	mov    ebp,0x576138ed
  40585f:	loope  0x40584b
  405861:	pop    eax
  405862:	mov    DWORD PTR [esp+ebp*2+0x67338005],ebp
  405869:	push   esp
  40586a:	jnp    0x4058c6
  40586c:	mov    WORD PTR [ecx-0x702c6455],ds
  405872:	push   cs
  405873:	push   ebx
  405874:	call   0xd8c3:0xee9ae204
  40587b:	dec    ebp
  40587c:	aam    0xd4
  40587e:	pop    esi
  40587f:	shl    BYTE PTR [esp+edx*4],1
  405882:	lds    edi,FWORD PTR [edi]
  405884:	xor    ebp,ebp
  405886:	std    
  405887:	dec    esi
  405888:	xchg   esi,eax
  405889:	adc    cl,BYTE PTR [ebx+0x4c]
  40588c:	pop    ds
  40588d:	outs   dx,DWORD PTR ds:[esi]
  40588e:	in     al,dx
  40588f:	push   ecx
  405890:	fmul   DWORD PTR [ebx-0x1e]
  405893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405894:	jle    0x405887
  405896:	(bad)  
  405897:	mov    edx,0x8af7c9d7
  40589c:	sub    al,0x8b
  40589e:	jne    0x4058c7
  4058a0:	call   0xd116a5e7
  4058a5:	pop    eax
  4058a6:	sbb    eax,0xabe86705
  4058ab:	mov    bl,0x8c
  4058ad:	xchg   ebx,eax
  4058ae:	sar    DWORD PTR [ecx],1
  4058b0:	cmp    eax,0xafe5abbd
  4058b5:	ds loope 0x40585a
  4058b8:	fmul   DWORD PTR [eax]
  4058ba:	clc    
  4058bb:	mov    al,0xdf
  4058bd:	and    esi,edi
  4058bf:	pop    ecx
  4058c0:	adc    dh,al
  4058c2:	data16 mov al,ds:0xd6ffa8a3
  4058c8:	fidiv  WORD PTR [ebx]
  4058ca:	inc    edx
  4058cb:	cmc    
  4058cc:	test   al,0x95
  4058ce:	cli    
  4058cf:	jle    0x40587f
  4058d1:	cmp    esi,DWORD PTR [edi-0x6a]
  4058d4:	inc    ebp
  4058d5:	mov    dh,bl
  4058d7:	dec    ebp
  4058d8:	popf   
  4058d9:	mov    eax,ds:0xebdbe12c
  4058de:	mov    ecx,0x69a1db9f
  4058e3:	mov    bh,0xc6
  4058e5:	ins    BYTE PTR es:[edi],dx
  4058e6:	push   esp
  4058e7:	dec    ecx
  4058e8:	(bad)  
  4058e9:	add    DWORD PTR [ebx],0xb7ff7eab
  4058ef:	pop    ebp
  4058f0:	or     eax,esp
  4058f2:	pop    edi
  4058f3:	pop    ss
  4058f4:	cmpps  xmm3,XMMWORD PTR [edi-0x4],0xb9
  4058f9:	addr16 leave 
  4058fb:	leave  
  4058fc:	loop   0x4058b3
  4058fe:	mov    al,0x69
  405900:	bnd ja 0x40594c
  405903:	jl     0x4058f7
  405905:	adc    dl,BYTE PTR [edi+0x4bc3ce26]
  40590b:	adc    DWORD PTR [edi-0x53713c23],ebx
  405911:	or     ah,al
  405913:	into   
  405914:	fwait
  405915:	lock mov ebx,0x6554f982
  40591b:	pop    eax
  40591c:	cs (bad) 
  40591e:	mov    esi,0x2de059e5
  405923:	mov    ah,0x62
  405925:	lods   al,BYTE PTR ds:[esi]
  405926:	jae    0x405927
  405928:	inc    ebp
  405929:	sub    edx,edx
  40592b:	mov    cl,0x1a
  40592d:	je     0x4058c8
  40592f:	pop    ds
  405930:	int3   
  405931:	pop    ecx
  405932:	dec    ecx
  405933:	mov    al,ds:0x639fd0d7
  405938:	jle    0x4058be
  40593a:	jg     0x40596f
  40593c:	mov    ebx,0x9bc45ba9
  405941:	into   
  405942:	adc    BYTE PTR [edx+0x2b2be70d],ch
  405948:	cs jns 0x405983
  40594b:	sub    DWORD PTR [eax],edi
  40594d:	adc    bl,bh
  40594f:	aad    0x4
  405951:	fld    TBYTE PTR [eax]
  405953:	hlt    
  405954:	xor    BYTE PTR [ebp-0x3cf6743a],ah
  40595a:	pop    ebx
  40595b:	idiv   DWORD PTR [esi+0x1c]
  40595e:	pop    eax
  40595f:	push   ds
  405960:	inc    eax
  405961:	imul   edx,DWORD PTR [edx+esi*2-0x684641d3],0xffffffa5
  405969:	mov    eax,ds:0xacf16aed
  40596e:	pop    ds
  40596f:	clc    
  405970:	xor    BYTE PTR [edi-0x7cc72216],dl
  405976:	mov    dh,0x28
  405978:	ins    BYTE PTR es:[edi],dx
  405979:	adc    ah,0xf4
  40597c:	xor    ax,bp
  40597f:	aam    0xd9
  405981:	call   0x4dec:0x3b6af842
  405988:	mov    bl,0x19
  40598a:	test   DWORD PTR [eax],edx
  40598c:	test   eax,0xe3fd5727
  405991:	retf   0x1b5a
  405994:	adc    eax,0x36e40c7c
  405999:	inc    edi
  40599a:	adc    ch,bl
  40599c:	cmp    BYTE PTR [eax+0x77a45d],bl
  4059a2:	inc    edx
  4059a3:	jo     0x405970
  4059a5:	sbb    bh,BYTE PTR [ebx]
  4059a7:	or     DWORD PTR [esi+0x1e],ebx
  4059aa:	push   eax
  4059ab:	sbb    eax,0x3b6a9974
  4059b0:	push   0xfffffff3
  4059b2:	outs   dx,DWORD PTR ds:[esi]
  4059b3:	pop    ecx
  4059b4:	ins    DWORD PTR es:[edi],dx
  4059b5:	stos   BYTE PTR es:[edi],al
  4059b6:	push   ss
  4059b7:	pop    ecx
  4059b8:	cld    
  4059b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059ba:	repz xchg esp,eax
  4059bc:	out    dx,eax
  4059bd:	ret    0xea6
  4059c0:	dec    esi
  4059c1:	mov    bh,0xc6
  4059c3:	mov    ah,dh
  4059c5:	add    eax,DWORD PTR [edx+ebp*4-0x4c]
  4059c9:	daa    
  4059ca:	cdq    
  4059cb:	dec    esp
  4059cc:	xor    dh,BYTE PTR [esi]
  4059ce:	fdivr  DWORD PTR [ebp-0x26]
  4059d1:	sub    eax,0x62ba8560
  4059d6:	jmp    0xb83fe36e
  4059db:	inc    ebx
  4059dc:	jmp    0x9a70:0x8f8cc4f0
  4059e3:	sub    al,0xd2
  4059e5:	dec    ebp
  4059e6:	js     0x4059d8
  4059e8:	push   ebx
  4059e9:	fist   WORD PTR [ecx+0x35]
  4059ec:	push   ss
  4059ed:	jmp    0x405a5f
  4059ef:	sar    BYTE PTR [esi],1
  4059f1:	or     DWORD PTR [edx-0x4b],eax
  4059f4:	adc    al,0x6d
  4059f6:	or     edi,DWORD PTR [ecx+0x1e981bb3]
  4059fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059fd:	sbb    DWORD PTR [esp+esi*2],edx
  405a00:	sub    eax,0x16b13e25
  405a05:	pop    ss
  405a06:	in     al,0x9e
  405a08:	sbb    eax,0xadf960d5
  405a0d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a0f:	add    ax,0x5ab9
  405a13:	retf   0x2d13
  405a16:	xor    ch,BYTE PTR [edi+0x2276da61]
  405a1c:	mov    bl,0x5f
  405a1e:	cmc    
  405a1f:	cdq    
  405a20:	fadd   st,st(6)
  405a22:	(bad)  
  405a23:	repz cmp dh,0xa5
  405a27:	xchg   ebx,eax
  405a28:	mov    al,ds:0x323fcc3b
  405a2d:	repnz cld 
  405a2f:	xchg   esi,eax
  405a30:	test   BYTE PTR [esi],cl
  405a32:	and    BYTE PTR [esi+0x7bfdfdd8],cl
  405a38:	in     eax,dx
  405a39:	dec    esi
  405a3a:	xchg   DWORD PTR [esi],edi
  405a3c:	push   edi
  405a3d:	pop    eax
  405a3e:	nop
  405a3f:	adc    DWORD PTR [edx],ebx
  405a41:	inc    ebp
  405a42:	aam    0x80
  405a44:	outs   dx,BYTE PTR ds:[esi]
  405a45:	out    dx,al
  405a46:	inc    ecx
  405a47:	ins    DWORD PTR es:[edi],dx
  405a48:	push   esi
  405a49:	ds pop esp
  405a4b:	xchg   ebx,eax
  405a4c:	mov    ch,0xba
  405a4e:	mov    dl,al
  405a50:	imul   edi,DWORD PTR [edx-0x4da0bda7],0xffffff9f
  405a57:	bound  eax,QWORD PTR [esi-0x11766748]
  405a5d:	(bad)  
  405a5e:	(bad)  
  405a5f:	xchg   esi,eax
  405a60:	dec    ebx
  405a61:	sar    DWORD PTR [edx],cl
  405a63:	jnp    0x405ad2
  405a65:	sub    ecx,DWORD PTR [esi-0x7c191940]
  405a6b:	or     BYTE PTR [ebp+0x74],dh
  405a6e:	ins    BYTE PTR es:[edi],dx
  405a6f:	imul   eax,DWORD PTR [edi+esi*2+0x28],0xbd5348b5
  405a77:	pop    ecx
  405a78:	ret    
  405a79:	dec    eax
  405a7a:	xchg   DWORD PTR [ecx],edx
  405a7c:	push   ebx
  405a7d:	mov    ebp,0xf409573a
  405a82:	xor    bh,cl
  405a84:	add    al,BYTE PTR [ebx+eax*8-0x71490fbf]
  405a8b:	repz jbe 0x405abd
  405a8e:	pop    ss
  405a8f:	xchg   eax,esp
  405a91:	lea    ecx,[ecx-0x5c38ce2d]
  405a97:	call   0x98b2e17b
  405a9c:	push   0x71
  405a9e:	xor    eax,0x5d35cb37
  405aa3:	ins    BYTE PTR es:[edi],dx
  405aa4:	inc    ecx
  405aa5:	ins    DWORD PTR es:[edi],dx
  405aa6:	into   
  405aa7:	push   esi
  405aa8:	lock mov ebx,0x7f1a0017
  405aae:	mov    dl,0xc3
  405ab0:	push   ds
  405ab1:	xlat   BYTE PTR ds:[ebx]
  405ab2:	stc    
  405ab3:	outs   dx,BYTE PTR ds:[esi]
  405ab4:	(bad)  
  405ab5:	xchg   ebx,eax
  405ab6:	mov    dh,0x47
  405ab8:	inc    esp
  405ab9:	mov    cl,0x91
  405abb:	ds pop esp
  405abd:	dec    esi
  405abe:	aam    0x2f
  405ac0:	and    al,0x37
  405ac2:	adc    ebp,edx
  405ac4:	cld    
  405ac5:	inc    esp
  405ac6:	icebp  
  405ac7:	cmp    DWORD PTR [edx],0xa785ab21
  405acd:	sbb    ecx,DWORD PTR [esp+edx*8+0x30]
  405ad1:	inc    eax
  405ad2:	test   BYTE PTR [edi],cl
  405ad4:	xor    BYTE PTR [esi],ch
  405ad6:	mov    BYTE PTR es:[ebx],bl
  405ad9:	rcl    ebx,0x51
  405adc:	and    al,0xd2
  405ade:	or     DWORD PTR [edx+0x32],ebp
  405ae1:	ss ret 0xb775
  405ae5:	xchg   edx,eax
  405ae6:	mov    ds:0x526fd18b,al
  405aeb:	push   esp
  405aec:	fld    QWORD PTR [eax+0x7e0f3b04]
  405af2:	mov    dh,dl
  405af4:	jnp    0x405b4a
  405af6:	mov    ss,WORD PTR [edx+0x38]
  405af9:	nop
  405afa:	pop    eax
  405afb:	out    0x59,eax
  405afd:	out    0xaa,eax
  405aff:	jecxz  0x405a9d
  405b01:	loop   0x405b6e
  405b03:	lea    ebp,[edi+0x56]
  405b06:	sbb    BYTE PTR [ebx-0x6dfd1f97],bh
  405b0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b0d:	jecxz  0x405b17
  405b0f:	outs   dx,BYTE PTR ds:[esi]
  405b10:	mov    ebp,0xc5651752
  405b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b16:	xor    esp,edx
  405b18:	sbb    al,0x8
  405b1a:	lahf   
  405b1b:	mov    WORD PTR [eax],ss
  405b1d:	jecxz  0x405b9a
  405b1f:	push   0x2945eeaf
  405b24:	adc    ebx,DWORD PTR ds:0x17ac00ad
  405b2a:	fwait
  405b2b:	mov    dh,0xde
  405b2d:	daa    
  405b2e:	xor    DWORD PTR [esi+0x5645d370],ebp
  405b34:	mov    bl,0xb9
  405b36:	dec    edx
  405b37:	mov    cl,0x2e
  405b39:	push   es
  405b3a:	lock xchg ecx,eax
  405b3c:	loope  0x405b24
  405b3e:	xchg   DWORD PTR [edx-0x4a],ecx
  405b41:	adc    BYTE PTR [eax],bh
  405b43:	add    DWORD PTR [eax+0x5f],esp
  405b46:	cmp    edi,ebp
  405b48:	repz mov bh,BYTE PTR [edi+0x6c439532]
  405b4f:	mov    eax,0x669b7950
  405b54:	add    DWORD PTR [edx+0x18],ecx
  405b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b58:	sti    
  405b59:	xlat   BYTE PTR ds:[ebx]
  405b5a:	aad    0x67
  405b5c:	sbb    esp,DWORD PTR [ebp-0x27]
  405b5f:	psllq  mm3,QWORD PTR [esi-0xd]
  405b63:	inc    edx
  405b64:	xchg   ebp,eax
  405b65:	jge    0x405b1b
  405b67:	push   ss
  405b68:	mov    esp,0x276b2994
  405b6d:	(bad)  
  405b6e:	inc    ebp
  405b6f:	fwait
  405b70:	pop    esp
  405b71:	fidivr WORD PTR [ebp-0x600a9735]
  405b77:	cmc    
  405b78:	(bad)  
  405b7a:	mov    al,ds:0x39d6249e
  405b7f:	retf   0xa99e
  405b82:	xor    eax,0x8303328e
  405b87:	jmp    0x882261d0
  405b8c:	test   BYTE PTR [edi],al
  405b8e:	and    DWORD PTR [esi+eax*4-0x24],eax
  405b92:	in     eax,dx
  405b93:	inc    edx
  405b94:	fcmovbe st,st(2)
  405b96:	xchg   esi,eax
  405b97:	or     ebp,DWORD PTR [edx+0x71]
  405b9a:	loope  0x405b3a
  405b9c:	xor    al,0x8c
  405b9e:	ins    DWORD PTR es:[edi],dx
  405b9f:	push   ebp
  405ba0:	push   ecx
  405ba1:	rol    BYTE PTR [edi+0x522fdce1],0x57
  405ba8:	sub    BYTE PTR [ecx],bh
  405baa:	or     BYTE PTR [ecx],dl
  405bac:	cmp    esp,edx
  405bae:	pushf  
  405baf:	adc    ebp,DWORD PTR [eax+0xe]
  405bb2:	addr16 (bad) 
  405bb4:	cld    
  405bb5:	lea    esp,[ebp-0xb]
  405bb8:	mov    al,0xd0
  405bba:	cmp    al,0x22
  405bbc:	add    BYTE PTR [eax-0x684b2001],ah
  405bc2:	call   0xb2858a21
  405bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc8:	push   edi
  405bc9:	mov    bl,0x58
  405bcb:	ret    0xdab9
  405bce:	sbb    eax,0x3c54c157
  405bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bd4:	shld   ecx,edi,0x1e
  405bd8:	loope  0x405b84
  405bda:	cmp    dh,BYTE PTR [esi-0x55]
  405bdd:	arpl   WORD PTR [edi+0x7fed6e2a],dx
  405be3:	out    dx,al
  405be4:	mov    DWORD PTR [edx],edi
  405be6:	push   ecx
  405be7:	ja     0x405b96
  405be9:	mov    cl,0xb1
  405beb:	dec    edi
  405bec:	pop    eax
  405bed:	popa   
  405bee:	ss and cl,bh
  405bf1:	fsub   DWORD PTR [ebp+eiz*4+0x27]
  405bf5:	add    al,0x14
  405bf7:	add    BYTE PTR [edi+0x2],0x19
  405bfb:	push   ds
  405bfc:	dec    ebp
  405bfd:	ret    0x5d23
  405c00:	dec    esi
  405c01:	inc    ebx
  405c02:	push   0x6
  405c04:	js     0x405c62
  405c06:	push   eax
  405c07:	mov    bl,0x37
  405c09:	xor    eax,DWORD PTR ds:0x14b05151
  405c0f:	push   cs
  405c10:	repnz in al,dx
  405c12:	ins    BYTE PTR es:[edi],dx
  405c13:	sub    ah,BYTE PTR [ecx+ebp*1-0x2c]
  405c17:	(bad)  
  405c18:	les    ecx,FWORD PTR [ebp+0x1e30cdb3]
  405c1e:	repnz (bad) 
  405c20:	jbe    0x405c71
  405c22:	stos   BYTE PTR es:[edi],al
  405c23:	mov    ebp,0x72fbe2fa
  405c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c29:	ins    BYTE PTR es:[edi],dx
  405c2a:	add    BYTE PTR [ebx],dh
  405c2c:	out    dx,eax
  405c2d:	inc    BYTE PTR [ebx+esi*2]
  405c30:	out    dx,eax
  405c31:	mov    esi,0xcebc6b51
  405c36:	dec    ebx
  405c37:	jge    0x405be4
  405c39:	icebp  
  405c3a:	sub    edx,DWORD PTR [eax-0x2ca87f34]
  405c40:	pop    ebp
  405c41:	inc    ebx
  405c42:	(bad)  
  405c43:	daa    
  405c44:	jne    0x405bea
  405c46:	adc    ebp,DWORD PTR [edi]
  405c48:	sub    ecx,ebx
  405c4a:	cmp    eax,0x78a5b033
  405c4f:	mov    bh,0x21
  405c51:	jp     0x405c45
  405c53:	pop    esi
  405c54:	ins    BYTE PTR es:[edi],dx
  405c55:	push   0x6d84bf8f
  405c5a:	sbb    eax,0x36e69dd9
  405c5f:	fs aas 
  405c61:	mov    ds:0x493ee68f,eax
  405c66:	es cmp al,0x8c
  405c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c6a:	cs pop edx
  405c6c:	cmp    BYTE PTR ds:0xba47610a,cl
  405c72:	leave  
  405c73:	pop    esp
  405c74:	call   0x8e3ffbcf
  405c79:	or     ch,BYTE PTR [ebx*2-0x791e44c]
  405c80:	mov    esi,ds
  405c82:	add    eax,0xa562cdb4
  405c87:	xlat   BYTE PTR ds:[ebx]
  405c88:	aam    0x61
  405c8a:	out    dx,eax
  405c8b:	cmp    esi,DWORD PTR [ebx+ecx*2]
  405c8e:	cs xchg esi,eax
  405c90:	cmp    eax,0xa8aee3ab
  405c95:	ret    
  405c96:	inc    edx
  405c97:	je     0x405c95
  405c99:	xchg   ecx,eax
  405c9a:	pop    ebx
  405c9b:	cwde   
  405c9c:	scas   al,BYTE PTR es:[edi]
  405c9d:	mov    ah,0xd4
  405c9f:	ror    BYTE PTR [edi-0x4d0b63c6],0xcf
  405ca6:	(bad)  
  405ca7:	inc    esp
  405ca8:	pop    edi
  405ca9:	pop    edx
  405caa:	push   es
  405cab:	ret    
  405cac:	add    eax,0xa5ff05cb
  405cb1:	pop    ss
  405cb2:	xchg   edi,eax
  405cb4:	xlat   BYTE PTR ds:[ebx]
  405cb5:	out    0x6e,eax
  405cb7:	fild   QWORD PTR [edi-0x1113ed2c]
  405cbd:	mov    WORD PTR [esi],?
  405cbf:	call   0xfde927e0
  405cc4:	in     eax,0x10
  405cc6:	xchg   edx,eax
  405cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cc8:	mov    edx,0x5c78d8c3
  405ccd:	ret    0x9ebc
  405cd0:	(bad)
  405cd3:	add    BYTE PTR cs:[ebx],dh
  405cd6:	xchg   BYTE PTR [ebx],bl
  405cd8:	or     al,BYTE PTR [edi]
  405cda:	popa   
  405cdb:	lea    edi,[edx]
  405cdd:	ror    DWORD PTR [ebp-0x43b9d5f3],cl
  405ce3:	fist   WORD PTR [edi]
  405ce5:	das    
  405ce6:	loopne 0x405cc8
  405ce8:	out    0xcf,eax
  405cea:	sbb    eax,0x9b3288c
  405cef:	idiv   DWORD PTR [edx+0x21]
  405cf2:	and    esi,esp
  405cf4:	and    eax,0xc74c65b7
  405cf9:	sbb    al,0x9
  405cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cfc:	mov    ch,0x4a
  405cfe:	xchg   ecx,eax
  405cff:	loop   0x405cba
  405d01:	push   edi
  405d02:	ffreep st(6)
  405d04:	adc    DWORD PTR [edi+0xe],esi
  405d07:	sbb    BYTE PTR [edx+0x15],0x99
  405d0b:	pop    esi
  405d0c:	lods   eax,DWORD PTR ds:[esi]
  405d0d:	aas    
  405d0e:	add    BYTE PTR [esi+0x6d8b1f2e],bh
  405d14:	add    BYTE PTR [ecx+0x3cc5e37b],0x97
  405d1b:	mov    cl,0x85
  405d1d:	outs   dx,DWORD PTR ds:[esi]
  405d1e:	(bad)  [edx+0x4e4affb6]
  405d24:	fwait
  405d25:	adc    ecx,edx
  405d27:	shl    BYTE PTR [ecx],cl
  405d29:	add    ebp,DWORD PTR [esi]
  405d2b:	pusha  
  405d2c:	into   
  405d2d:	add    BYTE PTR [ebp-0xa55685],ah
  405d33:	in     al,0x25
  405d35:	push   0x4cb9c5c
  405d3a:	cli    
  405d3b:	sub    al,0x1c
  405d3d:	pop    edi
  405d3e:	adc    al,0xb
  405d40:	adc    edx,ecx
  405d42:	xlat   BYTE PTR ds:[ebx]
  405d43:	sub    esi,ebp
  405d45:	sub    bl,BYTE PTR [eax]
  405d47:	aam    0x24
  405d49:	push   cs
  405d4a:	add    ch,cl
  405d4c:	(bad)  [edx+0x32]
  405d4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d50:	cmp    edi,DWORD PTR [eax+0x1db3f5a0]
  405d56:	(bad)  
  405d57:	cmc    
  405d58:	std    
  405d59:	inc    ebx
  405d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d5b:	and    ecx,DWORD PTR [esi+0x314080b0]
  405d61:	xor    eax,0xca93b9b7
  405d66:	adc    DWORD PTR [ecx],ebp
  405d68:	repz les esp,FWORD PTR [ebp+0x12775f4d]
  405d6f:	adc    BYTE PTR [ebx],cl
  405d71:	mov    edi,0xf79db172
  405d76:	fmul   QWORD PTR [esi-0x42]
  405d79:	sub    edi,DWORD PTR [edi]
  405d7b:	(bad)  
  405d7c:	push   esp
  405d7d:	pop    ss
  405d7e:	push   0xffffffbc
  405d80:	xor    DWORD PTR [edx+eax*4-0x400fa530],0xb7a813d2
  405d8b:	test   al,0xe0
  405d8d:	jmp    0x6997ecad
  405d92:	add    DWORD PTR [eax-0x6b],ecx
  405d95:	sbb    ah,BYTE PTR [edi]
  405d97:	xor    BYTE PTR [esi+0x9],bl
  405d9a:	push   ss
  405d9b:	fs std 
  405d9d:	mov    edx,0x788317d0
  405da2:	popf   
  405da3:	xchg   edi,eax
  405da4:	pop    esi
  405da5:	push   ebp
  405da6:	mov    ds:0xe939e048,al
  405dab:	enter  0xd15f,0x8d
  405daf:	and    cl,BYTE PTR ds:0xb9bd4167
  405db5:	repnz outs dx,BYTE PTR ds:[esi]
  405db7:	xor    dl,BYTE PTR [ebx-0x45b6002a]
  405dbd:	test   al,0xee
  405dbf:	sbb    esp,ecx
  405dc1:	ret    
  405dc2:	(bad)  
  405dc3:	loope  0x405e44
  405dc5:	leave  
  405dc6:	js     0x405dbf
  405dc8:	adc    bh,ah
  405dca:	retf   
  405dcb:	adc    bl,0x31
  405dce:	fidiv  WORD PTR [eax-0x57]
  405dd1:	push   cs
  405dd2:	icebp  
  405dd3:	sahf   
  405dd4:	fcomp  QWORD PTR [edx-0x4cf3f17e]
  405dda:	and    edi,ecx
  405ddc:	ds pop es
  405dde:	adc    ah,BYTE PTR fs:[esi-0x72]
  405de2:	mov    esp,0xd36268cd
  405de7:	adc    dh,BYTE PTR [ecx-0x7945413c]
  405ded:	jmp    0x9992:0xfb1158d5
  405df4:	jno    0x405e20
  405df6:	sub    DWORD PTR [edi],esp
  405df8:	test   cl,dh
  405dfa:	sbb    al,0x2c
  405dfc:	and    ch,dl
  405dfe:	sbb    al,0xb7
  405e00:	mov    ebp,0xcaf85128
  405e05:	pusha  
  405e06:	mov    ecx,0x448c247
  405e0b:	out    0x17,eax
  405e0d:	out    0x18,al
  405e0f:	call   0x82c1:0x67df948c
  405e16:	jne    0x405da9
  405e18:	jo     0x405e32
  405e1a:	cmp    ebx,DWORD PTR [edi]
  405e1c:	push   eax
  405e1d:	jno    0x405e8f
  405e1f:	in     eax,dx
  405e20:	push   ecx
  405e21:	cs stos DWORD PTR es:[edi],eax
  405e23:	xchg   DWORD PTR [ebp-0x68],esi
  405e26:	mov    eax,ds:0xd5b21610
  405e2b:	stc    
  405e2c:	or     ch,BYTE PTR [edx+eiz*2+0xcf312b1]
  405e33:	jns    0x405de2
  405e35:	fidiv  WORD PTR [ebp+0x72]
  405e38:	neg    BYTE PTR [eax+eax*8]
  405e3b:	(bad)  
  405e3c:	(bad)  
  405e3d:	and    al,0x9d
  405e3f:	sub    dl,0xdb
  405e42:	cmp    eax,DWORD PTR [eax+0x2f93d575]
  405e48:	pop    ss
  405e49:	adc    al,BYTE PTR [ecx+esi*4]
  405e4c:	ss aaa 
  405e4e:	call   0x3318:0xc16e57f8
  405e55:	iret   
  405e56:	push   edx
  405e57:	pop    ds
  405e58:	mov    edx,0x3447649b
  405e5d:	mov    BYTE PTR [ebx+0xdc18f1f],0x1d
  405e64:	pop    esi
  405e65:	mov    dh,0xde
  405e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e68:	not    DWORD PTR [edi]
  405e6a:	push   esp
  405e6b:	leave  
  405e6c:	fcom   QWORD PTR ds:0xc311a229
  405e72:	cmp    BYTE PTR [eax-0x316f66dd],ah
  405e78:	lods   eax,DWORD PTR ds:[esi]
  405e79:	pop    ss
  405e7a:	sbb    cl,bh
  405e7c:	xchg   DWORD PTR [edi-0x32],ebp
  405e7f:	mov    ecx,0xf778cdbf
  405e84:	jge    0x405eb9
  405e86:	ja     0x405f00
  405e88:	xlat   BYTE PTR ds:[ebx]
  405e89:	out    dx,eax
  405e8a:	cmp    eax,0xbe14898c
  405e8f:	jno    0x405ee4
  405e91:	ins    BYTE PTR es:[edi],dx
  405e92:	int3   
  405e93:	dec    edi
  405e94:	paddsw mm4,QWORD PTR [esi-0x1efa322f]
  405e9b:	dec    DWORD PTR ds:0xa928d40
  405ea1:	xor    eax,DWORD PTR [ecx]
  405ea3:	sub    BYTE PTR [ebx-0x11],ah
  405ea6:	ret    
  405ea7:	sub    cl,bl
  405ea9:	push   ss
  405eaa:	retf   0x4dfc
  405ead:	jnp    0x405e60
  405eaf:	mov    dl,0x4
  405eb1:	xor    eax,0x93af1d75
  405eb6:	hlt    
  405eb7:	call   FWORD PTR [edx-0x7b9209b1]
  405ebd:	aaa    
  405ebe:	mov    WORD PTR [eax],gs
  405ec0:	sti    
  405ec1:	mov    bh,0x8a
  405ec3:	rep ins BYTE PTR es:[edi],dx
  405ec5:	jbe    0x405e5a
  405ec7:	cmp    ah,BYTE PTR [ecx-0x6d7b3748]
  405ecd:	mov    ch,0x23
  405ecf:	shl    BYTE PTR [si],cl
  405ed2:	fiadd  DWORD PTR [edx+0x305e03ce]
  405ed8:	sub    dh,al
  405eda:	test   al,0xf7
  405edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405edd:	xchg   ebx,eax
  405ede:	adc    edx,eax
  405ee0:	add    BYTE PTR [ecx],al
  405ee2:	iret   
  405ee3:	mov    al,ds:0x33954a89
  405ee8:	adc    BYTE PTR [eax+0x1c199a7b],ah
  405eee:	pusha  
  405eef:	es push si
  405ef2:	daa    
  405ef3:	leave  
  405ef4:	dec    edx
  405ef5:	jae    0x405eee
  405ef7:	dec    ebx
  405ef8:	ret    0xa610
  405efb:	outs   dx,BYTE PTR ds:[esi]
  405efc:	sbb    BYTE PTR ds:0x89493a5f,0x9e
  405f03:	xor    ah,BYTE PTR [eax]
  405f05:	popa   
  405f06:	jbe    0x405ee4
  405f08:	pop    ds
  405f09:	xor    eax,0xcb85eaf2
  405f0e:	adc    al,0x24
  405f10:	dec    ecx
  405f11:	in     al,dx
  405f12:	fisttp QWORD PTR [esi+0x5d]
  405f15:	mov    bl,BYTE PTR [edi+0x15]
  405f18:	sbb    al,0x76
  405f1a:	es push esi
  405f1c:	pop    es
  405f1d:	pop    ebx
  405f1e:	push   ss
  405f1f:	mov    WORD PTR [eax-0x63f3b9b0],fs
  405f25:	scas   eax,DWORD PTR es:[edi]
  405f26:	int    0x9e
  405f28:	dec    esi
  405f29:	ins    DWORD PTR es:[edi],dx
  405f2a:	das    
  405f2b:	or     cl,BYTE PTR ds:0x6502bc16
  405f31:	cmp    al,0xea
  405f33:	ins    BYTE PTR es:[edi],dx
  405f34:	cmp    eax,0x1c163b99
  405f39:	je     0x405f8a
  405f3b:	int    0x4
  405f3d:	lea    esi,[ecx-0x60]
  405f40:	mov    edx,0x24c60db8
  405f45:	mov    edi,0x1c44f042
  405f4a:	mov    ebx,DWORD PTR [ebx-0x34]
  405f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f4e:	or     DWORD PTR [ebx],ebx
  405f50:	lahf   
  405f51:	icebp  
  405f52:	cs cld 
  405f54:	or     eax,0x2897f7c5
  405f59:	(bad)  
  405f5a:	adc    al,0xac
  405f5c:	std    
  405f5d:	int    0x24
  405f5f:	call   0xa35e:0x1991a231
  405f66:	fimul  WORD PTR [edi+0x54176cdc]
  405f6c:	(bad)  
  405f6d:	sub    eax,DWORD PTR [eax]
  405f6f:	popf   
  405f70:	idiv   WORD PTR [eax+0xa39cc37]
  405f77:	add    dh,BYTE PTR [eax]
  405f79:	dec    ebp
  405f7a:	leave  
  405f7b:	push   ebp
  405f7c:	out    0xe2,eax
  405f7e:	ds sbb cl,bl
  405f81:	xchg   ecx,eax
  405f82:	mov    edi,0xa2f09383
  405f87:	outs   dx,BYTE PTR ds:[esi]
  405f88:	pop    ds
  405f89:	dec    ecx
  405f8a:	dec    ebx
  405f8b:	mov    ecx,ebx
  405f8d:	icebp  
  405f8e:	pushw  ss
  405f90:	retf   
  405f91:	fdivr  DWORD PTR [ecx+0x16]
  405f94:	jae    0x405f37
  405f96:	sbb    DWORD PTR ds:0x74036664,esi
  405f9c:	jmp    0x6f9c:0xb2047cf0
  405fa3:	and    eax,0xcd23994f
  405fa8:	ffree  st(0)
  405faa:	push   cs
  405fab:	mov    bh,BYTE PTR [eax+0x5ebe56f9]
  405fb1:	test   edi,eax
  405fb3:	fbld   TBYTE PTR [ebp-0x1b]
  405fb6:	call   0x61d02ee9
  405fbb:	sub    al,BYTE PTR [edi-0x2f]
  405fbe:	mov    dl,0xa6
  405fc0:	push   edi
  405fc1:	popf   
  405fc2:	mov    ecx,0xe770526
  405fc7:	rcl    ebx,cl
  405fc9:	pop    eax
  405fca:	xchg   bl,cl
  405fcc:	mov    ecx,0xb9ee50d7
  405fd1:	mov    ebp,0x92a97294
  405fd6:	xor    eax,0x35183c8c
  405fdb:	mov    esi,0x575bc4d3
  405fe0:	add    eax,0x53d3a355
  405fe5:	jmp    0xec071a4c
  405fea:	mov    al,0xa9
  405fec:	ds out 0x7c,eax
  405fef:	xchg   esp,eax
  405ff0:	inc    ebp
  405ff1:	mov    al,0x84
  405ff3:	mov    ebx,0xfc6e40a5
  405ff8:	mov    ecx,0xb9dfb3e3
  405ffd:	scas   al,BYTE PTR es:[edi]
  405ffe:	dec    eax
  405fff:	scas   eax,DWORD PTR es:[edi]
  406000:	push   esi
  406001:	push   0x453eb56d
  406006:	mov    edi,0xcff82d85
  40600b:	jae    0x405f9a
  40600d:	and    al,0x19
  40600f:	xor    al,0x46
  406011:	xsave  [ebp-0x46]
  406015:	das    
  406016:	xor    bl,dl
  406018:	push   cs
  406019:	jmp    0x405fc2
  40601b:	pop    ecx
  40601c:	enter  0xcdfb,0xf4
  406020:	or     al,0xea
  406022:	push   esi
  406023:	mov    ah,0x22
  406025:	push   ds
  406026:	enter  0x6725,0x1c
  40602a:	xchg   DWORD PTR [edx+ebx*4],edi
  40602d:	int3   
  40602e:	lahf   
  40602f:	dec    ecx
  406030:	shl    BYTE PTR [ebp-0x5d0f6b82],cl
  406036:	dec    ecx
  406037:	stc    
  406038:	push   ebp
  406039:	mov    ch,cl
  40603b:	mov    ebp,ds
  40603d:	outs   dx,BYTE PTR ds:[esi]
  40603e:	aad    0x48
  406040:	(bad)  
  406041:	in     eax,0x5f
  406043:	ins    DWORD PTR es:[edi],dx
  406044:	ds out dx,al
  406046:	xchg   ecx,eax
  406047:	or     al,0xa4
  406049:	fstp   TBYTE PTR [edx]
  40604b:	push   ebx
  40604c:	nop
  40604d:	and    BYTE PTR [esi-0x5b],al
  406050:	popf   
  406051:	pop    ds
  406052:	xchg   esi,eax
  406053:	rep ins BYTE PTR es:[edi],dx
  406055:	fdiv   DWORD PTR [edi]
  406057:	bnd jmp 0xd1a01cd6
  40605d:	in     al,0xdf
  40605f:	mov    DWORD PTR [edi+0xd],eax
  406062:	add    ax,0x746e
  406066:	es or  eax,0xbc4a475
  40606c:	jl     0x4060c7
  40606e:	jge    0x4060cd
  406070:	adc    al,0x37
  406072:	cld    
  406073:	retf   0x29c1
  406076:	int3   
  406077:	push   0x41
  406079:	push   edi
  40607a:	test   al,0x5f
  40607c:	ss call 0xd12c:0x61cc1090
  406084:	retf   0xff58
  406087:	or     esp,DWORD PTR [esi]
  406089:	nop
  40608a:	aas    
  40608b:	aad    0x63
  40608d:	test   al,0x80
  40608f:	data16 cmp al,0x48
  406092:	mov    cl,0x2b
  406094:	and    eax,0x1ae2966b
  406099:	jo     0x406077
  40609b:	pop    edi
  40609c:	sbb    ebx,DWORD PTR [ebx+0x46ac1405]
  4060a2:	jg     0x4060b4
  4060a4:	inc    ebx
  4060a5:	fisub  WORD PTR [ecx*2-0x7af8cda]
  4060ac:	xchg   esi,eax
  4060ad:	ret    
  4060ae:	cmp    DWORD PTR [edx+edi*1],ebx
  4060b1:	and    DWORD PTR [esi],0x4fd4de38
  4060b7:	push   eax
  4060b8:	dec    ebx
  4060b9:	mov    ecx,0x5bf1193d
  4060be:	cli    
  4060bf:	mul    DWORD PTR [eax+0x74]
  4060c2:	out    0x6e,eax
  4060c4:	repz push ebx
  4060c6:	or     dh,BYTE PTR [ebp+0x38]
  4060c9:	arpl   WORD PTR [edi+0x18],cx
  4060cc:	sbb    al,0x84
  4060ce:	pushf  
  4060cf:	jae    0x406055
  4060d1:	or     al,0x38
  4060d3:	lds    esp,FWORD PTR [edi*2-0x75f23ef6]
  4060da:	and    BYTE PTR [edi],0x1a
  4060dd:	mov    eax,cs
  4060df:	fld    st(5)
  4060e1:	inc    ebx
  4060e2:	mov    WORD PTR [esi+0x217ada60],es
  4060e8:	mov    dh,0x82
  4060ea:	dec    ecx
  4060eb:	mov    dh,0x85
  4060ed:	bound  edx,QWORD PTR [ebx+0x19da2b9e]
  4060f3:	js     0x406172
  4060f5:	mov    eax,ds:0x1884e355
  4060fa:	dec    esi
  4060fc:	jge    0x406135
  4060fe:	pop    ds
  4060ff:	push   ecx
  406100:	cmp    cl,cl
  406102:	or     ah,BYTE PTR [esi]
  406104:	in     eax,0x4b
  406106:	das    
  406107:	nop
  406108:	xchg   esi,eax
  406109:	sahf   
  40610a:	mov    ebp,0xa16df61e
  40610f:	not    DWORD PTR [esi-0x40]
  406112:	and    al,0x76
  406114:	(bad)  
  406115:	xchg   ebp,eax
  406116:	aam    0x59
  406118:	mov    DWORD PTR [eax-0xe652ede],edx
  40611e:	sub    eax,DWORD PTR [ecx+0x65]
  406121:	inc    ecx
  406122:	stos   BYTE PTR es:[edi],al
  406123:	mov    dh,0x87
  406125:	or     al,0x21
  406127:	enter  0x4c8a,0xa0
  40612b:	xor    eax,0xb1ddc13d
  406130:	pop    ss
  406131:	or     eax,0xfcc0cd81
  406136:	cmp    BYTE PTR [edx-0x501e9ae9],cl
  40613c:	xchg   DWORD PTR [ecx],ecx
  40613e:	fmul   DWORD PTR [edi+0x70ae547a]
  406144:	sbb    BYTE PTR [ebp+esi*4+0x20127130],bh
  40614b:	sbb    BYTE PTR ds:0xd680fb79,0x75
  406152:	mov    esi,0x167d5756
  406157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406158:	mov    ecx,0x35a9e9b5
  40615d:	jbe    0x4061d3
  40615f:	cmp    dh,BYTE PTR [ecx+ebx*4+0x76]
  406163:	cmp    BYTE PTR [esp+ebx*1-0x30],cl
  406167:	jge    0x4060f5
  406169:	das    
  40616a:	push   es
  40616b:	fs dec esp
  40616d:	ficomp WORD PTR [edi-0x43493121]
  406173:	mov    bh,0x6a
  406175:	loope  0x406131
  406177:	(bad)  
  406178:	jmp    0x4060fa
  40617a:	in     al,0x39
  40617c:	mov    al,0xce
  40617e:	call   0x2140:0xfd2d4467
  406185:	sbb    ah,BYTE PTR [edx]
  406187:	stc    
  406188:	pop    eax
  406189:	js     0x4061e8
  40618b:	fcomp  DWORD PTR [edx]
  40618d:	sub    DWORD PTR [edx],esi
  40618f:	shl    BYTE PTR [edx],1
  406191:	jne    0x40612b
  406193:	jmp    0xf5ce:0xf984ea8a
  40619a:	jl     0x3d0d741d
  4061a0:	mov    dl,0x65
  4061a2:	js     0x406160
  4061a4:	and    DWORD PTR [esi-0xe50a055],edi
  4061aa:	fnsave gs:[esi+ebx*4-0x53b3e32d]
  4061b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061b3:	jmp    0x40619d
  4061b5:	cmp    BYTE PTR [edi-0x1e],bh
  4061b8:	out    dx,eax
  4061b9:	mov    eax,ds:0x22715cd5
  4061be:	and    cl,BYTE PTR [ebx-0x6a]
  4061c1:	push   edx
  4061c2:	dec    eax
  4061c3:	cmp    BYTE PTR [eax-0x69],al
  4061c6:	out    0xb4,eax
  4061c8:	adc    esi,ecx
  4061ca:	push   eax
  4061cb:	ds (bad) 
  4061cd:	fwait
  4061ce:	push   eax
  4061cf:	pop    es
  4061d0:	rol    DWORD PTR [edi],0xbe
  4061d3:	push   edx
  4061d4:	cmp    dh,bl
  4061d6:	jb     0x4061d9
  4061d8:	pop    esi
  4061d9:	out    0x61,al
  4061db:	das    
  4061dc:	adc    eax,0xdfc2973e
  4061e1:	inc    ebx
  4061e2:	cmc    
  4061e3:	(bad)  
  4061e4:	imul   edx,DWORD PTR [edx+0x69810026],0xf9273a28
  4061ee:	outs   dx,BYTE PTR ds:[esi]
  4061ef:	icebp  
  4061f0:	or     ecx,DWORD PTR [ebp+0x76958a94]
  4061f6:	mov    ds:0xd7149201,eax
  4061fb:	in     eax,dx
  4061fc:	aaa    
  4061fd:	xchg   edi,eax
  4061fe:	retf   
  4061ff:	sub    bh,ah
  406201:	dec    esp
  406202:	mov    bh,0x4
  406204:	pop    eax
  406205:	outs   dx,BYTE PTR ds:[esi]
  406206:	jp     0x4061f8
  406208:	push   ebx
  406209:	fistp  WORD PTR [ecx]
  40620b:	nop
  40620c:	sar    BYTE PTR [ebx-0x63],1
  40620f:	aas    
  406210:	inc    ebp
  406211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406212:	aaa    
  406213:	pop    ss
  406214:	cmp    DWORD PTR [ebx-0x50dba11d],ebx
  40621a:	and    al,0xd4
  40621c:	sbb    eax,0x827cbc0a
  406221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406222:	sbb    al,0x65
  406224:	adc    eax,0x20895759
  406229:	mov    edx,0xa3f37f60
  40622e:	jae    0x4061f3
  406230:	stos   DWORD PTR es:[edi],eax
  406231:	push   ebp
  406232:	out    0x12,al
  406234:	and    al,0x7e
  406236:	jmp    0x5243:0xf5fe561d
  40623d:	jecxz  0x406289
  40623f:	popa   
  406240:	xchg   ecx,eax
  406241:	loopne 0x40626d
  406243:	inc    ebx
  406244:	test   eax,0x7d7722fd
  406249:	xchg   esi,eax
  40624a:	int    0xc7
  40624c:	out    dx,al
  40624d:	hlt    
  40624e:	xor    BYTE PTR [ebp-0x74],ah
  406251:	inc    ebx
  406252:	mov    eax,0xf6d472c3
  406257:	add    dl,BYTE PTR [edx+0x2c]
  40625a:	push   edx
  40625b:	pop    ebp
  40625c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40625d:	push   edi
  40625e:	add    DWORD PTR [edi+0x5995d6c3],edx
  406264:	dec    eax
  406265:	pop    edx
  406266:	xor    al,0xe5
  406269:	mov    esp,0x98f2f466
  40626e:	jo     0x4062c2
  406270:	pop    esp
  406271:	push   esi
  406272:	push   edx
  406273:	aam    0xfd
  406275:	in     al,dx
  406276:	nop
  406277:	popa   
  406278:	outs   dx,DWORD PTR ds:[esi]
  406279:	mov    dh,0xfe
  40627b:	ja     0x40629a
  40627d:	enter  0xc36b,0x34
  406281:	cmp    DWORD PTR [esi+edx*1],esi
  406284:	add    BYTE PTR [edi],ch
  406286:	daa    
  406287:	lods   eax,DWORD PTR ds:[esi]
  406288:	or     al,0x2
  40628a:	jmp    0x786c1d25
  40628f:	xor    esi,DWORD PTR [bx+si+0x7549]
  406294:	div    BYTE PTR [ebx+0x267cb1c4]
  40629a:	xor    BYTE PTR [ebp-0x5b],dh
  40629d:	push   ecx
  40629e:	jle    0x4062a4
  4062a0:	jb     0x406248
  4062a2:	lods   al,BYTE PTR ds:[esi]
  4062a3:	inc    eax
  4062a4:	inc    ecx
  4062a5:	adc    DWORD PTR [edi+0x2b7264b7],esi
  4062ab:	leave  
  4062ac:	sbb    eax,0xb616f8eb
  4062b1:	or     BYTE PTR [ebx+0x417ce364],0x79
  4062b8:	in     eax,dx
  4062b9:	fstp   TBYTE PTR [edx+0x3d]
  4062bc:	cmp    DWORD PTR [ecx-0x6c7338ec],0x98670ca7
  4062c6:	stos   BYTE PTR es:[edi],al
  4062c7:	adc    ebp,DWORD PTR [ebp+edi*1-0x6f17c11e]
  4062ce:	pop    ds
  4062cf:	add    BYTE PTR [ecx-0x26],ah
  4062d2:	add    al,0x53
  4062d4:	push   0x15216b46
  4062d9:	bound  ebx,QWORD PTR [ecx+0x74]
  4062dc:	mov    bh,0xc6
  4062de:	adc    esp,DWORD PTR [edi+edi*4-0x30]
  4062e2:	jg     0x406289
  4062e4:	dec    ecx
  4062e5:	(bad)  
  4062e6:	pop    ecx
  4062e7:	sub    bl,BYTE PTR [ebx]
  4062e9:	adc    DWORD PTR [edi*2+0x6b99c9a9],ebx
  4062f0:	sub    eax,0xa496bf83
  4062f5:	retf   0xea30
  4062f8:	adc    edi,esi
  4062fa:	test   DWORD PTR [ebx+eax*8+0x72],eax
  4062fe:	pop    ebx
  4062ff:	daa    
  406300:	jmp    0xd49cdf72
  406305:	cmp    eax,esp
  406307:	sub    edx,0xe276e542
  40630d:	imul   esi,DWORD PTR [edx],0x8c87c871
  406313:	inc    ebx
  406314:	in     al,dx
  406315:	fcomp  DWORD PTR [ebx+0x6457d235]
  40631b:	or     eax,0x63a543f6
  406320:	inc    esp
  406321:	popa   
  406322:	add    BYTE PTR [ecx-0x5b],0xe3
  406326:	pop    ss
  406327:	mov    esi,0xc2205d48
  40632c:	punpckhbw mm5,QWORD PTR [eax-0x2]
  406330:	in     eax,0x50
  406332:	ins    BYTE PTR es:[edi],dx
  406333:	cmp    al,0xa8
  406335:	sbb    al,0xff
  406337:	dec    esp
  406338:	push   eax
  406339:	mov    eax,ds:0x69f13486
  40633e:	or     DWORD PTR [ebp-0x5c51498],edi
  406344:	xchg   esi,eax
  406345:	out    dx,eax
  406346:	clc    
  406347:	loope  0x4062e5
  406349:	sub    BYTE PTR [ebx],dl
  40634b:	xchg   ebx,eax
  40634c:	hlt    
  40634d:	dec    ebx
  40634e:	stc    
  40634f:	fistp  DWORD PTR [ecx-0x11]
  406352:	sbb    BYTE PTR [esi-0x1b],dh
  406355:	stos   BYTE PTR es:[edi],al
  406356:	mov    ch,0xa0
  406358:	sub    DWORD PTR [esi-0x79],esp
  40635b:	push   0xefc98e39
  406360:	or     eax,0x758d413d
  406365:	and    al,BYTE PTR [edi-0x645b0366]
  40636b:	adc    esp,DWORD PTR [ecx+ecx*8-0x5b]
  40636f:	out    0x88,eax
  406371:	fs inc ebx
  406373:	xchg   esp,eax
  406374:	inc    edx
  406375:	dec    edi
  406376:	cmc    
  406377:	ins    DWORD PTR es:[edi],dx
  406378:	xchg   ecx,eax
  406379:	mov    ebp,0xd109f41a
  40637e:	pop    es
  40637f:	inc    esi
  406380:	js     0x406369
  406382:	sub    ebp,edx
  406384:	leave  
  406385:	inc    ecx
  406386:	cmp    eax,0xc5c65633
  40638b:	daa    
  40638c:	push   cs
  40638d:	sahf   
  40638e:	mov    cl,0x13
  406390:	out    dx,eax
  406391:	pop    ebx
  406392:	leave  
  406393:	sub    BYTE PTR [ecx],0x89
  406396:	mov    ebx,0xeb4eaaab
  40639b:	add    BYTE PTR [ebx+ebp*4-0x63f2f2c1],ah
  4063a2:	test   DWORD PTR [esi],ecx
  4063a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063a5:	jno    0x40641e
  4063a7:	ja     0x406373
  4063a9:	mov    esi,0xbd87d02e
  4063ae:	add    eax,ebp
  4063b0:	cmp    al,0xd2
  4063b2:	dec    eax
  4063b3:	(bad)  
  4063b4:	cli    
  4063b5:	les    edx,FWORD PTR [esi-0x44c1df4d]
  4063bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063bc:	push   ds
  4063bd:	jne    0x4063ec
  4063bf:	sbb    al,0xdb
  4063c1:	sbb    eax,0xed6869a8
  4063c6:	xchg   edi,eax
  4063c7:	sub    al,0x7e
  4063c9:	not    DWORD PTR [eax]
  4063cb:	sub    eax,0x41b553d8
  4063d0:	adc    BYTE PTR [edi-0x3abf935b],al
  4063d6:	inc    edi
  4063d7:	sub    BYTE PTR [ebx],ch
  4063d9:	xor    al,0x84
  4063db:	mov    al,0x1f
  4063dd:	cmp    DWORD PTR [ebp+0x65],0x6a
  4063e1:	xchg   ecx,eax
  4063e2:	repnz sub ch,BYTE PTR [ebx-0x418c2786]
  4063e9:	call   0x672952ef
  4063ee:	loop   0x406387
  4063f0:	ret    
  4063f1:	adc    BYTE PTR [esi+0x7c],bl
  4063f4:	mov    ds:0x1d45b53d,al
  4063f9:	xchg   ecx,eax
  4063fa:	jb     0x4063c9
  4063fc:	lock int3 
  4063fe:	cmp    BYTE PTR [ecx-0x50],cl
  406401:	xchg   ecx,eax
  406402:	or     ecx,DWORD PTR [edx+eax*4+0x32]
  406406:	into   
  406407:	jno    0x4063c7
  406409:	enter  0xf8b,0x2d
  40640d:	ins    DWORD PTR es:[edi],dx
  40640e:	or     BYTE PTR [esi-0x26],dl
  406411:	aad    0x24
  406413:	sub    BYTE PTR [esi],bl
  406415:	mov    ch,BYTE PTR [edi-0x545c4eda]
  40641b:	cmc    
  40641c:	call   0x8584ac72
  406421:	pop    ebx
  406422:	icebp  
  406423:	inc    ecx
  406424:	jae    0x40649e
  406426:	mov    BYTE PTR ds:0x4730c897,bl
  40642c:	xchg   edx,eax
  40642d:	lahf   
  40642e:	js     0x406435
  406430:	xchg   ebx,eax
  406431:	push   cs
  406432:	push   ss
  406433:	retf   
  406434:	outs   dx,BYTE PTR ds:[esi]
  406435:	inc    ebp
  406436:	(bad)  
  406438:	mov    eax,ds:0x5cffda79
  40643d:	lds    ebp,FWORD PTR [ecx]
  40643f:	xlat   BYTE PTR ds:[ebx]
  406440:	jmp    DWORD PTR [edx]
  406442:	xor    eax,0xe7fed660
  406447:	and    BYTE PTR [esp+ebp*4],0x52
  40644b:	jmp    0x47c7:0x4bcc8660
  406452:	cli    
  406453:	in     al,0xa0
  406455:	call   0x9403:0x7508000a
  40645c:	mov    dh,al
  40645e:	cmp    BYTE PTR ds:0xa1234396,ah
  406464:	mov    ebp,0xa56f39c2
  406469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40646a:	outs   dx,DWORD PTR cs:[esi]
  40646c:	jae    0x40646a
  40646e:	mov    eax,0x4c3aec30
  406473:	jb     0x406410
  406475:	outs   dx,BYTE PTR ds:[esi]
  406476:	pop    ds
  406477:	retf   
  406478:	push   ebp
  406479:	mov    eax,0xed0fedba
  40647e:	imul   ecx,edx,0x3b4163
  406484:	fnstsw WORD PTR [esi-0x74]
  406487:	mov    edx,0x425e57c1
  40648c:	cmc    
  40648d:	ret    
  40648e:	in     al,dx
  40648f:	jno    0x406420
  406491:	iret   
  406492:	fdivr  st,st(6)
  406494:	fcom   DWORD PTR [eax-0x15]
  406497:	imul   ecx,ebp,0x8e9f334d
  40649d:	jbe    0x40645a
  40649f:	clc    
  4064a0:	jl     0x40642b
  4064a2:	and    DWORD PTR [ecx-0x64],0x2a
  4064a6:	retf   
  4064a7:	aas    
  4064a8:	inc    edx
  4064a9:	pop    ecx
  4064aa:	push   ebp
  4064ab:	push   0xde88d864
  4064b0:	mov    edi,0x13f2a27b
  4064b5:	push   0xa8a2f90d
  4064ba:	leave  
  4064bb:	ds mov al,0x98
  4064be:	jg     0x40651f
  4064c0:	mov    esi,0xec34072a
  4064c5:	or     DWORD PTR [ebx+eiz*2+0x2f3c67c6],eax
  4064cc:	cmp    al,0x67
  4064ce:	inc    edi
  4064cf:	out    0xa2,eax
  4064d1:	cli    
  4064d2:	retf   0x7680
  4064d5:	cld    
  4064d6:	mov    edx,0xbf422081
  4064db:	aas    
  4064dc:	cmp    DWORD PTR [ecx-0x4c12c7c9],ecx
  4064e2:	jno    0x406522
  4064e4:	out    0x4b,al
  4064e6:	mov    dh,0xde
  4064e8:	adc    DWORD PTR [ecx+0x4b],esi
  4064eb:	or     BYTE PTR [bp-0x27],ch
  4064ef:	xchg   esp,eax
  4064f0:	lock xchg ebx,eax
  4064f2:	mov    ds:0x6f69ef0f,eax
  4064f7:	and    ch,BYTE PTR [edx+0x61]
  4064fa:	mov    eax,ds:0xc9a000a1
  4064ff:	mov    esi,0x81db5f51
  406504:	xor    al,0x7c
  406506:	clc    
  406507:	push   ecx
  406508:	clc    
  406509:	pop    ecx
  40650a:	xchg   edi,eax
  40650b:	in     al,dx
  40650c:	xchg   DWORD PTR [ebp-0x8],ecx
  40650f:	mov    dl,0x6f
  406511:	arpl   WORD PTR [edi],bx
  406513:	inc    edi
  406514:	mov    al,ds:0x32b21f46
  406519:	outs   dx,DWORD PTR ds:[esi]
  40651a:	pushf  
  40651b:	xchg   ebp,eax
  40651c:	xchg   esp,eax
  40651d:	sbb    DWORD PTR [ebx],0xffffffa2
  406520:	call   0x5855:0xb19d612b
  406527:	mov    dh,0xd4
  406529:	retf   0xa016
  40652c:	push   0xceb46692
  406531:	daa    
  406532:	or     al,0xfd
  406534:	add    al,0x62
  406536:	add    BYTE PTR [ebx-0x2f],ch
  406539:	jno    0x406576
  40653b:	or     ecx,0xffffffe6
  40653e:	sub    DWORD PTR [ebx+eax*8],edx
  406541:	ret    0x56da
  406544:	imul   edx,esp,0x937155a2
  40654a:	jg     0x406522
  40654c:	out    0xa9,eax
  40654e:	add    ecx,DWORD PTR [edx+0x29]
  406551:	stc    
  406552:	sub    DWORD PTR [eax],0x7f93c6df
  406558:	or     eax,0x9a5c5c6e
  40655d:	int3   
  40655e:	mov    edi,0xbfce393e
  406563:	into   
  406564:	pusha  
  406565:	aam    0x9a
  406567:	pusha  
  406568:	inc    edi
  406569:	add    BYTE PTR [esi-0x4f6af3a8],ah
  40656f:	jmp    0x4dc4:0xce9e44a5
  406576:	sbb    al,cl
  406578:	lea    edi,[esi]
  40657a:	nop
  40657b:	rcl    DWORD PTR [ecx-0x7a30dd37],cl
  406581:	adc    al,0x86
  406583:	sub    di,WORD PTR [edx]
  406586:	lock movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  406589:	or     BYTE PTR [ecx+eiz*2],cl
  40658c:	xchg   ebx,esi
  40658e:	and    BYTE PTR [ebp-0x2925a31c],0x8c
  406595:	arpl   WORD PTR [edx+0x5bbcb087],bx
  40659b:	push   ds
  40659c:	inc    ecx
  40659d:	aaa    
  40659e:	enter  0x7096,0x52
  4065a2:	shl    DWORD PTR [ecx-0x6fe31bf],1
  4065a8:	popa   
  4065a9:	sub    BYTE PTR [eax-0x4efed6c9],0x6b
  4065b0:	push   0x4d563df4
  4065b5:	fild   DWORD PTR [esi]
  4065b7:	or     eax,0x20426dce
  4065bc:	jo     0x40663a
  4065be:	mov    esi,0xb3720463
  4065c3:	dec    edx
  4065c4:	daa    
  4065c5:	cmp    esp,DWORD PTR ds:0x5cbfd6fe
  4065cb:	sahf   
  4065cc:	or     dl,BYTE PTR [eax]
  4065ce:	jne    0x406621
  4065d0:	push   cs
  4065d1:	push   ecx
  4065d2:	sub    BYTE PTR [edx+0x2ed63d50],cl
  4065d8:	xlat   BYTE PTR ds:[ebx]
  4065d9:	mov    eax,edi
  4065db:	add    eax,0xc265457d
  4065e0:	mov    edx,0x295b8125
  4065e5:	or     esi,DWORD PTR [ecx+0x5b]
  4065e8:	ins    BYTE PTR es:[edi],dx
  4065e9:	jle    0x4065ac
  4065eb:	popf   
  4065ec:	jns    0x406645
  4065ee:	mov    edi,0x38dd86be
  4065f3:	pop    ebx
  4065f4:	stos   BYTE PTR es:[edi],al
  4065f5:	fnsave [edx+0x58]
  4065f8:	sbb    al,0x39
  4065fa:	jae    0x4065a9
  4065fc:	mov    esi,DWORD PTR [eax+0x5a]
  4065ff:	leave  
  406600:	xchg   cx,ax
  406602:	sbb    bl,BYTE PTR [edi]
  406604:	mov    esp,0x4a71f042
  406609:	sub    ebx,DWORD PTR [eax-0x47445768]
  40660f:	gs cdq 
  406611:	xchg   edi,eax
  406612:	in     eax,0x8d
  406614:	inc    ebx
  406615:	add    edi,DWORD PTR [ebp+0x1c65760c]
  40661b:	dec    edx
  40661c:	nop
  40661d:	push   edi
  40661e:	shl    BYTE PTR [ebx+0x4edc1be],cl
  406624:	lea    esp,[edi]
  406626:	test   bl,bh
  406628:	cwde   
  406629:	add    ah,BYTE PTR [edi+0x358c5552]
  40662f:	jo     0x406655
  406631:	dec    edx
  406632:	outs   dx,BYTE PTR ds:[esi]
  406633:	outs   dx,BYTE PTR ds:[esi]
  406634:	jo     0x4065d1
  406636:	cmp    esp,ebx
  406638:	inc    esi
  406639:	and    bl,BYTE PTR [ebx+0x7d]
  40663c:	push   ebp
  40663d:	mov    edx,0x4af0f3f1
  406642:	xchg   edx,eax
  406643:	mov    bl,0xee
  406645:	ds add ebx,ecx
  406648:	pushf  
  406649:	shl    BYTE PTR [edi-0x2c7bae65],cl
  40664f:	lea    esi,[ebx+eiz*4]
  406652:	fidivr WORD PTR [ebp+0x3ec1ea62]
  406658:	sub    dh,BYTE PTR [edx-0x594a021c]
  40665e:	jno    0x4066ba
  406660:	mov    al,ds:0x53099177
  406665:	imul   esp,DWORD PTR [ebp-0x5267b2b0],0x23
  40666c:	xchg   esp,eax
  40666d:	loop   0x4066bb
  40666f:	adc    ah,dl
  406671:	jmp    0x9650:0xa13ebd5c
  406678:	addr16 popf 
  40667a:	mov    edi,0x7e4e27dc
  40667f:	fmul   QWORD PTR [ebx+0x9]
  406682:	ret    
  406683:	bound  ecx,QWORD PTR [ebp+0x63]
  406686:	aaa    
  406687:	hlt    
  406688:	pop    ecx
  406689:	mov    dh,BYTE PTR [ebp-0x1e]
  40668c:	or     DWORD PTR [eax],ecx
  40668e:	jbe    0x4066d0
  406690:	(bad)  
  406692:	push   es
  406693:	pop    es
  406694:	sub    ah,BYTE PTR [ebx+0x4f0373ba]
  40669a:	fisttp DWORD PTR [eax]
  40669c:	dec    edx
  40669d:	and    ch,BYTE PTR [esi+0x2d]
  4066a0:	(bad)  
  4066a1:	and    BYTE PTR [edx-0xd],ah
  4066a4:	cmc    
  4066a5:	les    eax,FWORD PTR [edx]
  4066a7:	rcl    DWORD PTR [ebx-0x5c],cl
  4066aa:	jmp    0x4066c5
  4066ac:	push   ds
  4066ad:	bound  edi,QWORD PTR [edx]
  4066af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066b0:	push   es
  4066b1:	sub    esp,DWORD PTR [eax-0x31]
  4066b4:	nop
  4066b5:	and    BYTE PTR [esp+esi*8+0x50270c03],ch
  4066bc:	pushf  
  4066bd:	ficomp DWORD PTR [eax]
  4066bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066c0:	add    al,0x9b
  4066c2:	inc    edx
  4066c3:	leave  
  4066c4:	call   0x3d5a:0xd2b473d6
  4066cb:	pop    ebp
  4066cc:	les    esi,FWORD PTR [edx]
  4066ce:	hlt    
  4066cf:	adc    BYTE PTR [ecx+edx*4+0x79420457],al
  4066d6:	dec    ebx
  4066d7:	push   cs
  4066d8:	sar    ch,cl
  4066da:	push   DWORD PTR [esi]
  4066dc:	adc    eax,DWORD PTR [eax+0x3ad5d50a]
  4066e2:	xchg   ebx,eax
  4066e3:	rol    DWORD PTR [esp+eiz*4+0x384af6bb],1
  4066ea:	add    al,0x90
  4066ec:	push   ss
  4066ed:	shl    BYTE PTR [ecx+0x66],0xdd
  4066f1:	je     0x4066c5
  4066f3:	or     al,0x1c
  4066f5:	mov    esi,0x303d5c74
  4066fa:	pop    esi
  4066fb:	push   ecx
  4066fc:	fwait
  4066fd:	sbb    cl,ah
  4066ff:	test   eax,0xac8e8dce
  406704:	loop   0x406762
  406706:	mov    al,0xb2
  406708:	scas   al,BYTE PTR es:[edi]
  406709:	lods   al,BYTE PTR ds:[esi]
  40670a:	test   DWORD PTR [ecx+0x62c4578c],esi
  406710:	and    BYTE PTR [ebx-0x6],al
  406713:	(bad)  [esp+ebx*1-0x65]
  406717:	mov    al,0xa6
  406719:	push   0x69
  40671b:	aam    0xb7
  40671d:	test   eax,0x4840f275
  406722:	ss dec esi
  406724:	retf   
  406725:	or     DWORD PTR [esi],ecx
  406727:	int    0xeb
  406729:	ins    BYTE PTR es:[edi],dx
  40672a:	sub    eax,esp
  40672c:	repz pusha 
  40672e:	pop    edx
  40672f:	lods   al,BYTE PTR ds:[esi]
  406730:	iret   
  406731:	mov    ch,0x28
  406733:	mov    ebx,0x438303bf
  406738:	jnp    0x406718
  40673a:	sub    BYTE PTR [ebx-0x2fcdb619],dh
  406740:	and    ch,BYTE PTR [edi-0x1eec0830]
  406746:	repz mov ah,0x2c
  406749:	mov    ebx,0xa30f9ce9
  40674e:	pop    esp
  40674f:	scas   al,BYTE PTR es:[edi]
  406750:	arpl   WORD PTR [edx+eax*1],sp
  406753:	push   0xffffffbb
  406755:	xchg   esi,eax
  406756:	cmp    BYTE PTR [edi-0x71],bh
  406759:	mov    ds:0xaba11914,eax
  40675e:	push   es
  40675f:	xchg   esp,eax
  406760:	pop    ebp
  406761:	repz jns 0x4067db
  406764:	in     eax,0xd
  406766:	into   
  406767:	xchg   ebp,eax
  406768:	sti    
  406769:	test   DWORD PTR [ebp+0x4f],ebx
  40676c:	sbb    BYTE PTR [eax-0x5399ed18],bh
  406772:	jl     0x406707
  406774:	arpl   WORD PTR [esi+edi*8-0x16],sp
  406778:	ss out dx,eax
  40677a:	int    0x90
  40677c:	std    
  40677d:	popf   
  40677e:	inc    esp
  40677f:	mov    ecx,0x1704c2ca
  406784:	mov    dh,0xf8
  406786:	fistp  QWORD PTR ds:0xa172132f
  40678c:	sub    ah,BYTE PTR [si-0x9]
  406790:	pop    esp
  406791:	xor    BYTE PTR [edi],ch
  406793:	cmp    al,bh
  406795:	je     0x40675e
  406797:	lahf   
  406798:	add    BYTE PTR [ebp+0x6a],cl
  40679b:	aad    0xad
  40679d:	add    ebx,ebx
  40679f:	icebp  
  4067a0:	mov    bh,0x77
  4067a2:	jecxz  0x40677f
  4067a4:	adc    ah,al
  4067a6:	jae    0x406788
  4067a8:	repz fst DWORD PTR [ebx]
  4067ab:	retf   0x3c72
  4067ae:	add    BYTE PTR [edi],cl
  4067b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067b1:	cmp    al,bl
  4067b3:	mov    esp,0x27dfede4
  4067b8:	imul   esi,eax,0xffffffa2
  4067bb:	sbb    DWORD PTR [eax-0x2ce0ce64],ebp
  4067c1:	push   esi
  4067c2:	inc    esi
  4067c3:	sar    DWORD PTR [eax-0x5c],cl
  4067c6:	mov    eax,ds:0xef57f816
  4067cb:	push   ecx
  4067cc:	xor    eax,0x7c922eef
  4067d1:	into   
  4067d2:	mov    ebp,0x86b62a8d
  4067d7:	adc    eax,0xedaac49d
  4067dc:	xchg   esp,eax
  4067dd:	int3   
  4067de:	jbe    0x4067f4
  4067e0:	xor    dh,BYTE PTR [ebx]
  4067e2:	push   cs
  4067e3:	push   ebp
  4067e4:	daa    
  4067e5:	ret    0x1c7b
  4067e8:	xchg   BYTE PTR [ecx+0xa3fe29e],ah
  4067ee:	jl     0x4067e7
  4067f0:	stos   DWORD PTR es:[edi],eax
  4067f1:	les    esi,FWORD PTR [eax+0x39]
  4067f4:	xor    ecx,DWORD PTR [ecx+0x5052c433]
  4067fa:	aas    
  4067fb:	mov    ds:0xa120e764,eax
  406800:	call   0x3fb5:0x970868dd
  406807:	pop    ecx
  406808:	push   0xffffff86
  40680a:	in     eax,0xbb
  40680c:	pusha  
  40680d:	and    eax,0x5e1e0444
  406812:	inc    ebx
  406813:	jbe    0x4067a1
  406815:	mov    cl,0x11
  406817:	mov    ecx,0x164d67da
  40681c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40681d:	in     eax,dx
  40681e:	jecxz  0x4067f3
  406820:	dec    edi
  406821:	mov    ebp,DWORD PTR [ecx+0x75]
  406824:	cmp    eax,0xf21e6bde
  406829:	(bad)  
  40682a:	daa    
  40682b:	xor    BYTE PTR [eax],dh
  40682d:	out    dx,al
  40682e:	adc    al,0xb1
  406830:	das    
  406831:	lock out 0xc5,al
  406834:	inc    ebp
  406835:	push   0xffffff9e
  406837:	inc    edi
  406838:	jmp    FWORD PTR [ebp+0x46]
  40683b:	mov    esp,0xd0a735a6
  406840:	fcomp  QWORD PTR [esi-0x60]
  406843:	push   ebx
  406844:	repz jb 0x40681b
  406847:	fucomi st,st(7)
  406849:	stos   DWORD PTR es:[edi],eax
  40684a:	das    
  40684b:	cdq    
  40684c:	ins    DWORD PTR es:[edi],dx
  40684d:	outs   dx,DWORD PTR ds:[esi]
  40684e:	pushf  
  40684f:	(bad)  
  406850:	ja     0x406827
  406852:	pop    esi
  406853:	and    ebx,0x76e8a896
  406859:	(bad)
  40685c:	push   eax
  40685d:	cmp    esp,DWORD PTR [edi+0x28e400fd]
  406863:	cwde   
  406864:	jbe    0x4068b9
  406866:	out    dx,al
  406867:	lods   al,BYTE PTR ds:[esi]
  406868:	sbb    BYTE PTR [esp+edi*2+0x22e13409],0xe1
  406870:	dec    ecx
  406871:	xchg   ebx,eax
  406872:	lods   eax,DWORD PTR ds:[esi]
  406873:	mov    ecx,0x70f44b4b
  406878:	dec    ebx
  406879:	dec    ebx
  40687a:	stos   DWORD PTR es:[edi],eax
  40687b:	sub    al,0xa8
  40687d:	lds    eax,FWORD PTR [ebx+ebx*4-0x73cf1949]
  406884:	add    BYTE PTR [esi],dh
  406886:	test   al,0x7e
  406888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406889:	add    ebp,ecx
  40688b:	push   0x13
  40688d:	push   eax
  40688e:	sbb    eax,0xa241b1fc
  406893:	jne    0x40690a
  406895:	outs   dx,DWORD PTR ds:[esi]
  406896:	inc    edi
  406897:	sahf   
  406898:	add    BYTE PTR [ecx-0x62],ah
  40689b:	out    dx,al
  40689c:	test   BYTE PTR [esi-0x12],cl
  40689f:	mov    cl,0x2a
  4068a1:	leave  
  4068a2:	fs test al,0xa2
  4068a5:	xchg   BYTE PTR [ecx*1-0x786b83bb],ch
  4068ac:	mov    dl,0x71
  4068ae:	mov    dl,bl
  4068b0:	cmp    BYTE PTR [ecx],bh
  4068b2:	leave  
  4068b3:	dec    eax
  4068b4:	adc    BYTE PTR [eax-0x73dc175e],bl
  4068ba:	inc    ebp
  4068bb:	shl    DWORD PTR [ecx],cl
  4068bd:	and    bl,BYTE PTR [esi]
  4068bf:	fdiv   DWORD PTR [ecx]
  4068c1:	je     0x40688e
  4068c3:	sbb    ah,BYTE PTR [esp+ebp*2]
  4068c6:	add    BYTE PTR gs:[ecx-0x75],0xf1
  4068cb:	icebp  
  4068cc:	pop    ebx
  4068cd:	jg     0x406946
  4068cf:	aad    0x71
  4068d1:	inc    ebx
  4068d2:	xchg   edx,eax
  4068d3:	stc    
  4068d4:	dec    ebp
  4068d5:	cmp    eax,0x7a4e205b
  4068da:	cmp    eax,0xbfe8cc83
  4068df:	ins    BYTE PTR es:[edi],dx
  4068e0:	arpl   bx,di
  4068e2:	add    edx,ecx
  4068e4:	jnp    0x406923
  4068e6:	adc    dl,BYTE PTR [edi+eiz*1]
  4068e9:	mov    ch,ch
  4068eb:	xor    DWORD PTR [edx],ecx
  4068ed:	mov    dh,0xc7
  4068ef:	or     cl,BYTE PTR [ecx+0x40fab679]
  4068f5:	mov    esp,0x9bbb1ce2
  4068fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068fb:	lea    eax,[ecx+0x2b]
  4068fe:	inc    esi
  4068ff:	leave  
  406900:	loopne 0x40697b
  406902:	test   eax,0x1eebd567
  406907:	(bad)  
  406908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406909:	fisttp QWORD PTR [edi-0x3a0f8393]
  40690f:	pop    esi
  406910:	jl     0x406991
  406912:	in     al,dx
  406913:	std    
  406914:	dec    ecx
  406915:	clc    
  406916:	stos   DWORD PTR es:[edi],eax
  406917:	pushf  
  406918:	pop    edi
  406919:	ins    BYTE PTR es:[edi],dx
  40691a:	in     eax,0x5
  40691c:	mov    ecx,0x98314125
  406921:	pop    esi
  406922:	cmp    eax,0xba6a2b8a
  406927:	push   ebp
  406928:	xlat   BYTE PTR ds:[ebx]
  406929:	cli    
  40692a:	and    eax,DWORD PTR [eax]
  40692c:	aad    0x1c
  40692e:	je     0x4068c8
  406930:	and    DWORD PTR [ebp+0x12],esp
  406933:	aam    0xe
  406935:	ret    0x8611
  406938:	(bad)  
  406939:	imul   ebp,DWORD PTR [eax+0x2d],0xffffff87
  40693d:	outs   dx,DWORD PTR ds:[esi]
  40693e:	push   es
  40693f:	mov    cl,0x79
  406941:	sbb    BYTE PTR [ecx-0x80],bl
  406944:	out    dx,al
  406945:	out    0x86,al
  406947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406948:	jge    0x4069a4
  40694a:	arpl   WORD PTR ds:0x26125a9b,bp
  406950:	jp     0x4068f3
  406952:	mov    fs:0x2e80d4d4,eax
  406958:	loop   0x40696a
  40695a:	mov    ds:0xe9711217,al
  40695f:	or     DWORD PTR [edx-0x18f2c685],esp
  406965:	je     0x40696f
  406967:	pop    ebp
  406968:	or     edx,ebp
  40696a:	xchg   bl,cl
  40696c:	ja     0x4069b1
  40696e:	lods   al,BYTE PTR ds:[esi]
  40696f:	dec    esi
  406970:	sbb    ebp,edx
  406972:	icebp  
  406973:	lahf   
  406974:	adc    eax,0x14e97d1b
  406979:	sbb    BYTE PTR [ebp-0x4f],bh
  40697c:	rol    DWORD PTR [esi-0x75],cl
  40697f:	clc    
  406980:	dec    ebx
  406981:	pop    ebx
  406982:	jp     0x40693d
  406984:	or     DWORD PTR [esp+eiz*4],ebp
  406987:	fistp  QWORD PTR [bx+di+0x5d61]
  40698c:	daa    
  40698d:	jno    0x406952
  40698f:	mov    ebx,0xac5437dc
  406994:	or     BYTE PTR ds:0xc88138c9,dh
  40699a:	retf   0x2ff7
  40699d:	push   cs
  40699e:	mov    cl,0x9f
  4069a0:	in     al,dx
  4069a1:	and    ebx,DWORD PTR [ecx+0x27]
  4069a4:	lds    eax,FWORD PTR [ebx+eax*4+0x1d076555]
  4069ab:	xchg   ebx,eax
  4069ac:	and    edi,DWORD PTR [esi+eax*8+0x102555a1]
  4069b3:	xor    eax,0xbfedfd8c
  4069b8:	jmp    0xda59b6ef
  4069bd:	push   esp
  4069be:	inc    BYTE PTR [eax-0x617078a3]
  4069c4:	div    DWORD PTR [edx]
  4069c6:	fist   DWORD PTR [ebx]
  4069c8:	sbb    BYTE PTR [edx+0x30],al
  4069cb:	sub    DWORD PTR ds:0x5d091b57,esi
  4069d1:	cdq    
  4069d2:	iret   
  4069d3:	push   ds
  4069d4:	dec    ebx
  4069d5:	retf   
  4069d6:	lea    edi,[ebp+0x5e579806]
  4069dc:	mov    bh,BYTE PTR [esi]
  4069de:	xchg   BYTE PTR [edi],al
  4069e0:	call   0xca8640c1
  4069e5:	cmp    edx,DWORD PTR [esp+ebp*1-0x4bcaec34]
  4069ec:	loopne 0x4069f4
  4069ee:	or     ah,BYTE PTR [edx+0x31]
  4069f1:	arpl   WORD PTR [edx],bx
  4069f3:	popa   
  4069f4:	xlat   BYTE PTR ds:[ebx]
  4069f5:	or     al,BYTE PTR ds:0x522b0386
  4069fb:	(bad)  
  4069fd:	in     al,dx
  4069fe:	bound  eax,QWORD PTR [ebp-0x75]
  406a01:	lds    ecx,FWORD PTR [edx+edi*2+0x73]
  406a05:	sbb    al,0xcb
  406a07:	inc    esi
  406a08:	inc    esi
  406a09:	jbe    0x4069f6
  406a0b:	test   BYTE PTR [edx],al
  406a0d:	or     esi,edi
  406a0f:	sar    DWORD PTR [ecx],0x27
  406a12:	scas   eax,DWORD PTR es:[edi]
  406a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a14:	push   ecx
  406a15:	ficomp DWORD PTR [edi]
  406a17:	pop    edi
  406a18:	ja     0x4069df
  406a1a:	and    BYTE PTR [ebx],al
  406a1c:	or     eax,0xe2cc651c
  406a21:	leave  
  406a22:	mov    eax,0x1323434e
  406a27:	sar    ecx,0x65
  406a2a:	dec    esi
  406a2b:	enter  0xc316,0x72
  406a2f:	daa    
  406a30:	mov    DWORD PTR [ebx*8-0x185472f6],esi
  406a37:	xlat   BYTE PTR ds:[ebx]
  406a38:	std    
  406a39:	js     0x406a14
  406a3b:	cmp    BYTE PTR [ecx],ch
  406a3d:	mov    DWORD PTR [ecx-0x68cd3a9b],esi
  406a43:	repnz loopne 0x406a54
  406a46:	sar    BYTE PTR [ebx+ebx*8-0x5c],cl
  406a4a:	inc    ebx
  406a4b:	adc    al,0x6e
  406a4d:	imul   ebx,DWORD PTR [edx],0x2a
  406a50:	jge    0x406a58
  406a52:	stos   DWORD PTR es:[edi],eax
  406a53:	jp     0x406aa0
  406a55:	fsub   QWORD PTR [edi-0xf]
  406a58:	mov    ah,0x47
  406a5a:	xor    eax,0xd78ae64b
  406a5f:	xchg   ecx,eax
  406a60:	inc    ecx
  406a61:	pop    eax
  406a62:	push   ss
  406a63:	add    ecx,DWORD PTR [eax-0x75]
  406a66:	outs   dx,DWORD PTR ds:[esi]
  406a67:	push   edx
  406a68:	or     BYTE PTR [esi+eiz*8+0x5f972366],0x9
  406a70:	pop    ecx
  406a71:	or     BYTE PTR ds:0x11851038,bh
  406a77:	inc    esi
  406a78:	cmp    eax,0x5bff542c
  406a7d:	(bad)  
  406a7e:	jl     0x406adb
  406a80:	aam    0xc
  406a82:	adc    al,0xf6
  406a84:	(bad)  
  406a86:	inc    esp
  406a87:	xchg   ecx,eax
  406a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a89:	mov    dl,0x9b
  406a8b:	nop
  406a8c:	mov    ds:0xc7f3f446,eax
  406a91:	das    
  406a92:	sbb    DWORD PTR [edx-0x7c],0xef53fcd4
  406a99:	add    al,0xec
  406a9b:	push   edx
  406a9c:	sub    ch,al
  406a9e:	adc    al,BYTE PTR [edi+eiz*4+0x71]
  406aa2:	cmp    DWORD PTR [edi-0x33267ee2],0x288ea6c0
  406aac:	test   al,0x31
  406aae:	lods   al,BYTE PTR ds:[esi]
  406aaf:	popf   
  406ab0:	(bad)  
  406ab1:	popf   
  406ab2:	ins    BYTE PTR es:[edi],dx
  406ab3:	out    dx,al
  406ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ab5:	push   eax
  406ab6:	aad    0xb0
  406ab8:	push   ecx
  406ab9:	xchg   edx,eax
  406aba:	out    0xd6,al
  406abc:	jmp    0xef36:0xf4f16c68
  406ac3:	imul   ebx,DWORD PTR [edi-0x7c6880f9],0xa2e7499e
  406acd:	leave  
  406ace:	loop   0x406aff
  406ad0:	aad    0x26
  406ad2:	pop    esp
  406ad3:	lods   eax,DWORD PTR ds:[esi]
  406ad4:	dec    ebx
  406ad5:	sub    ah,BYTE PTR [ecx]
  406ad7:	in     al,0xa5
  406ad9:	dec    edx
  406ada:	stos   BYTE PTR es:[edi],al
  406adb:	or     eax,DWORD PTR [edi-0x510ce79f]
  406ae1:	out    0xd4,eax
  406ae3:	pop    ecx
  406ae4:	xchg   edx,eax
  406ae5:	xlat   BYTE PTR ds:[ebx]
  406ae6:	mov    esp,0x4fbf0111
  406aeb:	popa   
  406aec:	jp     0x406b36
  406aee:	cmc    
  406aef:	sub    eax,0x51f7a74b
  406af4:	sub    bl,BYTE PTR [edi-0x4ab88edb]
  406afa:	xchg   ebx,eax
  406afb:	fidiv  DWORD PTR [eax-0x1e]
  406afe:	and    edx,DWORD PTR [edi+ebx*8]
  406b01:	cmp    al,0xde
  406b03:	fstp   st(1)
  406b05:	int3   
  406b06:	inc    ebx
  406b07:	outs   dx,DWORD PTR ds:[esi]
  406b08:	jne    0x406afb
  406b0a:	add    ch,BYTE PTR [ebx+edx*4]
  406b0d:	int3   
  406b0e:	jb     0x406b42
  406b10:	adc    DWORD PTR [ecx],edi
  406b12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b13:	inc    esp
  406b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b15:	addr16 sbb al,0x91
  406b18:	push   cs
  406b19:	jge    0x406b08
  406b1b:	loope  0x406ae0
  406b1d:	fs mov dh,0x83
  406b20:	push   ecx
  406b21:	pop    esi
  406b22:	mov    esi,ecx
  406b24:	(bad)  
  406b25:	stos   DWORD PTR es:[edi],eax
  406b26:	inc    esp
  406b27:	out    0x14,al
  406b29:	sub    dl,BYTE PTR [edx-0x53]
  406b2c:	add    BYTE PTR [esi+0x2b449a],dl
  406b32:	lock inc ebx
  406b34:	dec    edx
  406b35:	mov    al,0xbf
  406b37:	sbb    ah,BYTE PTR ds:[eax-0x4336c76f]
  406b3e:	pop    esp
  406b3f:	inc    edi
  406b40:	push   ds
  406b41:	xchg   ebp,eax
  406b42:	xor    DWORD PTR [ecx],ebp
  406b44:	inc    edx
  406b45:	sub    al,0xbe
  406b47:	cli    
  406b48:	ror    BYTE PTR [ecx],cl
  406b4a:	div    BYTE PTR [esp+esi*4-0x5c]
  406b4e:	fnstcw WORD PTR [ecx]
  406b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b51:	addr16 push 0x82d85cbe
  406b57:	fsubr  QWORD PTR [ebp-0x2b9bde09]
  406b5d:	pop    eax
  406b5e:	jbe    0x406ae6
  406b60:	mov    BYTE PTR [ebp-0x6e],cl
  406b63:	retf   0x5913
  406b66:	pop    esp
  406b67:	xlat   BYTE PTR ds:[ebx]
  406b68:	xor    DWORD PTR [ebx],eax
  406b6a:	cld    
  406b6b:	call   DWORD PTR [ebx+0x20f8306]
  406b71:	enter  0x6f2a,0x5f
  406b75:	xchg   ebp,eax
  406b76:	jl     0x406bc7
  406b78:	clts   
  406b7a:	mov    esp,DWORD PTR [esi]
  406b7c:	or     DWORD PTR fs:[edi],ebx
  406b7f:	fcomi  st,st(1)
  406b81:	push   es
  406b82:	int    0xe8
  406b84:	inc    eax
  406b85:	std    
  406b86:	jmp    0x4fe9:0x227947ae
  406b8d:	and    BYTE PTR [eax+0x35],bl
  406b90:	std    
  406b91:	sar    dl,0x46
  406b94:	lea    ecx,[eax]
  406b96:	js     0x406bf6
  406b98:	add    eax,DWORD PTR [ebx+0x179ca31c]
  406b9e:	inc    edi
  406b9f:	retf   0x7ad0
  406ba2:	leave  
  406ba3:	or     DWORD PTR [eax-0x29c9a32b],0x7f647fac
  406bad:	dec    ebp
  406bae:	mov    edi,0xb23aa987
  406bb3:	sbb    al,0xbc
  406bb5:	icebp  
  406bb6:	mov    esi,ds
  406bb8:	std    
  406bb9:	pop    ebx
  406bba:	mov    ah,0x55
  406bbc:	lods   eax,DWORD PTR ds:[esi]
  406bbd:	inc    edi
  406bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bbf:	outs   dx,DWORD PTR ds:[esi]
  406bc0:	and    dl,BYTE PTR [ebx-0x43142848]
  406bc6:	push   ebx
  406bc7:	aam    0xa9
  406bc9:	jmp    0x4741:0xa9c15eea
  406bd0:	and    ebx,esi
  406bd2:	pop    ecx
  406bd3:	inc    eax
  406bd4:	mov    bl,0xe4
  406bd6:	add    DWORD PTR [esi+0x7a],ebp
  406bd9:	outs   dx,DWORD PTR ds:[esi]
  406bda:	imul   ecx,edx,0xffffffc6
  406bdd:	push   ss
  406bde:	aam    0x78
  406be0:	push   0xba16b813
  406be5:	jno    0x406b72
  406be7:	jae    0x406c35
  406be9:	mov    edi,DWORD PTR [edi]
  406beb:	dec    DWORD PTR [esi-0x5b]
  406bee:	cmc    
  406bef:	push   esp
  406bf0:	cli    
  406bf1:	aam    0x26
  406bf3:	sub    dh,cl
  406bf5:	inc    esp
  406bf6:	out    dx,al
  406bf7:	lds    edi,FWORD PTR [eax-0x6a]
  406bfa:	mov    esi,0x40e2d1d4
  406bff:	ins    DWORD PTR es:[edi],dx
  406c00:	hlt    
  406c01:	inc    eax
  406c02:	outs   dx,BYTE PTR ds:[esi]
  406c03:	pop    ecx
  406c04:	mov    ds:0xf092d9c2,eax
  406c09:	push   edx
  406c0a:	xchg   al,ah
  406c0c:	in     al,0x6
  406c0e:	scas   al,BYTE PTR es:[edi]
  406c0f:	dec    eax
  406c10:	push   edi
  406c11:	cmp    al,0xa6
  406c13:	(bad)  
  406c14:	sahf   
  406c15:	aaa    
  406c16:	(bad)  
  406c17:	xlat   BYTE PTR ds:[ebx]
  406c18:	pop    eax
  406c19:	ret    0x796e
  406c1c:	test   ebp,0x83dfda03
  406c22:	popa   
  406c23:	fs out dx,eax
  406c25:	adc    ah,0xbb
  406c28:	jle    0x406bd3
  406c2a:	xchg   ebp,eax
  406c2b:	mov    bl,0x3e
  406c2d:	and    ah,dh
  406c2f:	push   eax
  406c30:	xor    esp,ebp
  406c32:	add    eax,DWORD PTR [edi-0x6caa0ff5]
  406c38:	jecxz  0x406c80
  406c3a:	lods   eax,DWORD PTR ds:[esi]
  406c3b:	mov    bl,BYTE PTR [edx+0x15dc32bb]
  406c41:	or     ebx,DWORD PTR [ebx-0x4f8f972f]
  406c47:	aaa    
  406c48:	push   0x2a
  406c4a:	stos   DWORD PTR es:[edi],eax
  406c4b:	sbb    DWORD PTR [edi+0x15ad04bd],esi
  406c51:	mov    ecx,0x87e42be9
  406c56:	nop
  406c57:	mov    bh,BYTE PTR [edi]
  406c59:	rcl    BYTE PTR [ebx-0x21716962],cl
  406c5f:	xlat   BYTE PTR ds:[ebx]
  406c60:	fcmovnbe st,st(1)
  406c62:	ins    DWORD PTR es:[edi],dx
  406c63:	xor    BYTE PTR [edi+0x4ba26331],ah
  406c69:	data16 mov bl,0x74
  406c6c:	ja     0x406c51
  406c6e:	call   DWORD PTR [edx+0x31330d32]
  406c74:	ret    0x8910
  406c77:	dec    ecx
  406c78:	cs aaa 
  406c7a:	aas    
  406c7b:	in     al,dx
  406c7c:	fldenv [esi]
  406c7e:	imul   DWORD PTR [esi+0x2d]
  406c81:	pop    esp
  406c82:	jge    0x406cc8
  406c84:	push   ecx
  406c85:	push   ebx
  406c86:	aad    0x57
  406c88:	inc    edx
  406c89:	addr16 push edx
  406c8b:	pop    ds
  406c8c:	test   eax,0xcde4fb6a
  406c91:	jg     0x406cdf
  406c93:	inc    ebx
  406c94:	add    ecx,DWORD PTR [ebp-0x7af5fda2]
  406c9a:	call   0x3200:0x3afde6fd
  406ca1:	and    BYTE PTR [esi+edx*2+0x33],bl
  406ca5:	(bad)  
  406ca7:	adc    BYTE PTR [esi-0x20],dl
  406caa:	jmp    0x406ced
  406cac:	aam    0x0
  406cae:	out    dx,al
  406caf:	push   edx
  406cb0:	dec    ebx
  406cb1:	ffree  st(1)
  406cb4:	mov    eax,ds:0xc5ad4d22
  406cb9:	push   eax
  406cba:	mov    edx,0xd4da4006
  406cbf:	loope  0x406c66
  406cc1:	jecxz  0x406cd3
  406cc3:	sbb    eax,0xd27daf1b
  406cc8:	test   BYTE PTR [ebx],0x85
  406ccb:	jb     0x406cc9
  406ccd:	mov    ecx,0x9c8cafbe
  406cd2:	into   
  406cd3:	xchg   edi,eax
  406cd4:	mov    ch,0x72
  406cd6:	or     BYTE PTR [edx+0x23],ch
  406cd9:	push   ecx
  406cda:	add    DWORD PTR [ebx+0x75485616],ebp
  406ce0:	inc    edx
  406ce1:	imul   edx,DWORD PTR ds:0xec7b606d,0x11b5d792
  406ceb:	out    dx,eax
  406cec:	je     0x406d0b
  406cee:	test   BYTE PTR [edx+ebx*2-0x7b],0xa6
  406cf3:	xor    ebx,ecx
  406cf5:	out    dx,al
  406cf6:	bound  edi,QWORD PTR ds:0xfa27a800
  406cfc:	cmp    BYTE PTR [edx+0x377b1283],0x19
  406d03:	aam    0x93
  406d05:	arpl   bx,sp
  406d07:	xor    ebp,DWORD PTR [ebp+0x1e7b5316]
  406d0d:	call   0xe447:0xe37134f4
  406d14:	cmp    eax,ecx
  406d16:	mov    ds:0x26a3ba13,eax
  406d1b:	lock mov ds:0x87bb2645,eax
  406d21:	push   0xffffffe3
  406d23:	lods   al,BYTE PTR ds:[esi]
  406d24:	test   ebp,ebp
  406d26:	retf   0x3a94
  406d29:	pop    eax
  406d2a:	push   esp
  406d2b:	(bad)  
  406d2c:	push   esi
  406d2d:	jmp    0xd84e:0xeb7536bd
  406d34:	scas   al,BYTE PTR es:[edi]
  406d35:	loop   0x406d54
  406d37:	mov    dh,BYTE PTR [edx+0x7ba93ed]
  406d3d:	jns    0x406d88
  406d3f:	pop    ecx
  406d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d41:	xor    al,0xa5
  406d43:	cmp    al,0xdd
  406d45:	mov    ds:0xbf23c979,eax
  406d4a:	mov    WORD PTR [edx+0x238812d7],gs
  406d50:	inc    esp
  406d51:	mov    esi,0xcacdfe26
  406d56:	addr16 mov edx,0x9a0715b0
  406d5c:	scas   al,BYTE PTR es:[edi]
  406d5d:	xor    al,0x94
  406d5f:	jb     0x406dcb
  406d61:	dec    ecx
  406d62:	sbb    DWORD PTR [esi],ebx
  406d64:	cmp    BYTE PTR [esi],dl
  406d66:	jmp    FWORD PTR [edx]
  406d68:	jge    0x406dbc
  406d6a:	call   0x6709967
  406d6f:	or     eax,0xe4a78938
  406d74:	mov    ecx,0xe37a91e0
  406d79:	or     BYTE PTR [ecx-0x21],bh
  406d7c:	rol    BYTE PTR [ecx],cl
  406d7e:	xor    cl,BYTE PTR [ecx]
  406d80:	pop    edx
  406d81:	repz loope 0x406df9
  406d84:	xchg   BYTE PTR [ecx+eiz*4+0x3c],ch
  406d88:	cmp    DWORD PTR [ecx-0x24],edx
  406d8b:	mov    WORD PTR [ebx+0x77],ds
  406d8e:	test   al,0x38
  406d90:	out    0x4c,eax
  406d92:	fcmovu st,st(1)
  406d94:	pop    edx
  406d95:	scas   eax,DWORD PTR es:[edi]
  406d96:	dec    ecx
  406d97:	push   ebx
  406d98:	mov    ecx,0x92185cee
  406d9d:	cli    
  406d9e:	repnz sub al,0xd5
  406da1:	and    DWORD PTR [ebp-0x63],0x1a
  406da5:	aad    0x3e
  406da7:	ss jbe 0x406e17
  406daa:	iret   
  406dab:	xor    ecx,DWORD PTR [esi]
  406dad:	loop   0x406df6
  406daf:	jb     0x406df0
  406db1:	out    0x1e,al
  406db3:	cmp    ah,BYTE PTR ds:0x6beb0df4
  406db9:	mov    cl,0xb
  406dbb:	sbb    BYTE PTR [edi+0x6f],bh
  406dbe:	xchg   ecx,eax
  406dbf:	es test al,0x24
  406dc2:	leave  
  406dc3:	mov    eax,0xcf6f5edb
  406dc8:	pop    edi
  406dc9:	cs das 
  406dcb:	adc    BYTE PTR [esi],ch
  406dcd:	scas   al,BYTE PTR es:[edi]
  406dce:	aaa    
  406dcf:	icebp  
  406dd0:	push   ds
  406dd1:	ja     0x406db8
  406dd3:	jae    0x406ddb
  406dd5:	adc    BYTE PTR [esi-0x54a9f263],ah
  406ddb:	jmp    0x406e30
  406ddd:	ficom  WORD PTR [edx-0x392a213a]
  406de3:	arpl   WORD PTR [ecx+0x2d],di
  406de6:	sub    BYTE PTR [ecx-0x30],ah
  406de9:	dec    ebx
  406dea:	adc    ch,BYTE PTR [ebp+0x58940b2e]
  406df0:	push   ebp
  406df1:	sbb    DWORD PTR [ecx-0x6d],0xfffffffd
  406df5:	mov    WORD PTR [esi+0x1be43526],cs
  406dfb:	lock popa 
  406dfd:	vpmacsswd xmm8,xmm5,xmm3,XMMWORD PTR [esi-0x21]
  406e04:	gs xchg esp,eax
  406e06:	push   esp
  406e07:	call   0x6614ec27
  406e0c:	stos   DWORD PTR es:[edi],eax
  406e0d:	adc    BYTE PTR [edi-0x24],bh
  406e10:	popa   
  406e11:	(bad)  
  406e12:	shl    DWORD PTR [edx],1
  406e14:	in     eax,dx
  406e15:	mov    ebp,0xb26f5e25
  406e1a:	mov    ebp,0xb6da2f3e
  406e1f:	ins    BYTE PTR es:[edi],dx
  406e20:	sti    
  406e21:	cmp    BYTE PTR [eax+0x325debdf],0xbe
  406e28:	(bad)  
  406e29:	xchg   esp,eax
  406e2a:	jno    0x406e3e
  406e2c:	retf   0x4394
  406e2f:	out    0xb6,eax
  406e31:	fwait
  406e32:	push   ss
  406e33:	mov    esi,0x3a38b5c9
  406e38:	iret   
  406e39:	inc    edi
  406e3a:	int    0xeb
  406e3c:	sub    eax,0x7b7b607f
  406e41:	xchg   edx,eax
  406e42:	sub    ah,BYTE PTR [ecx+0x452632fc]
  406e48:	loopne 0x406e3f
  406e4a:	out    dx,eax
  406e4b:	or     DWORD PTR [ecx+ecx*1],0xba566557
  406e52:	sahf   
  406e53:	data16 sahf 
  406e55:	sti    
  406e56:	aas    
  406e57:	pushf  
  406e58:	add    al,0xbc
  406e5a:	bound  ebx,QWORD PTR [edx+0x5c]
  406e5d:	and    eax,0x449b4108
  406e62:	cmp    BYTE PTR [ecx+eax*1-0x33],cl
  406e66:	ja     0x406ee2
  406e68:	imul   edi,DWORD PTR gs:[esi+0xe26d4d9],0xffffffc4
  406e70:	cmp    DWORD PTR [edx+0x24b3f9dd],edi
  406e76:	push   ebx
  406e77:	sub    esp,DWORD PTR [eax+ebx*8]
  406e7a:	jge    0x406efa
  406e7c:	xchg   DWORD PTR [eax],esi
  406e7e:	sub    al,0x48
  406e80:	cmp    al,0xdf
  406e82:	jcxz   0x406ed7
  406e85:	pop    ss
  406e86:	sbb    esi,ebp
  406e88:	es xchg edx,eax
  406e8a:	dec    ebx
  406e8b:	sete   bh
  406e8e:	mov    eax,ds:0x8d2fd36d
  406e94:	fs cld 
  406e96:	rcr    BYTE PTR [ebp+0x46],1
  406e99:	mov    WORD PTR [ebp-0x1cd86a1d],?
  406e9f:	imul   edi,DWORD PTR [esi],0xbffe64c8
  406ea5:	adc    al,0xe3
  406ea7:	inc    ebx
  406ea8:	sub    al,0xcf
  406eaa:	rcl    bl,0x3
  406ead:	sbb    al,0x11
  406eaf:	int    0x7e
  406eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eb2:	call   0x4ac9b673
  406eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eb8:	push   esi
  406eb9:	jo     0x406ef4
  406ebb:	dec    eax
  406ebc:	sbb    DWORD PTR [edx],esi
  406ebe:	cmp    al,0x8a
  406ec0:	scas   al,BYTE PTR es:[edi]
  406ec1:	stc    
  406ec2:	inc    edi
  406ec3:	xlat   BYTE PTR ds:[ebx]
  406ec4:	in     eax,0xab
  406ec6:	pop    edx
  406ec7:	push   0xffffffd5
  406ec9:	xor    BYTE PTR [ecx-0x3a],0xf3
  406ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ece:	add    eax,ebx
  406ed0:	or     eax,esp
  406ed2:	not    DWORD PTR [eax+0x5a]
  406ed5:	fnstcw WORD PTR [ebp+0x7b24195b]
  406edb:	sub    dl,BYTE PTR [ebp+0x28]
  406ede:	pop    edx
  406edf:	cld    
  406ee0:	and    al,0xe7
  406ee2:	fwait
  406ee3:	retf   
  406ee4:	inc    esi
  406ee5:	inc    esp
  406ee6:	fisttp QWORD PTR [edx-0x224cde1d]
  406eec:	push   eax
  406eed:	xchg   ebx,eax
  406eee:	fdivr  QWORD PTR [ebp+0x40db20ef]
  406ef4:	pop    ecx
  406ef5:	(bad)  
  406ef6:	jecxz  0x406e94
  406ef8:	icebp  
  406ef9:	scas   eax,DWORD PTR es:[edi]
  406efa:	sub    esi,DWORD PTR [ecx-0x4a66061]
  406f00:	xchg   edi,eax
  406f01:	sub    al,0x93
  406f03:	repnz pop es
  406f05:	dec    ebx
  406f06:	push   esi
  406f07:	outs   dx,BYTE PTR ds:[esi]
  406f08:	push   0x16ffc15e
  406f0d:	loop   0x406f14
  406f0f:	mov    ds,edi
  406f11:	jmp    0xf894:0x97fc836d
  406f18:	leave  
  406f19:	or     eax,0x13ab5749
  406f1e:	cmovp  edx,DWORD PTR [esi]
  406f21:	aad    0x45
  406f23:	ret    
  406f24:	sbb    ebp,DWORD PTR [eax-0xce7704a]
  406f2a:	jl     0x406f66
  406f2c:	test   DWORD PTR [esi+edx*8+0x11],esp
  406f30:	inc    edx
  406f31:	cld    
  406f32:	add    bl,ch
  406f34:	mov    esi,0x75f5fecc
  406f39:	lea    ecx,[esi+eiz*4+0xe]
  406f3d:	and    BYTE PTR [edi+0x5fc57920],dh
  406f43:	push   edx
  406f44:	scas   eax,DWORD PTR es:[edi]
  406f45:	adc    esi,DWORD PTR [edi]
  406f47:	mov    gs,WORD PTR [ebp+0x4f]
  406f4a:	pop    edx
  406f4b:	dec    ebx
  406f4c:	ins    BYTE PTR es:[edi],dx
  406f4d:	std    
  406f4e:	xchg   esp,eax
  406f4f:	int3   
  406f50:	xchg   esp,eax
  406f51:	push   ebp
  406f52:	mov    esp,0x2536d7a2
  406f57:	xchg   esp,eax
  406f58:	aas    
  406f59:	ins    BYTE PTR es:[edi],dx
  406f5a:	fucomi st,st(2)
  406f5c:	jmp    0x29dfe397
  406f61:	jecxz  0x406fc4
  406f63:	jmp    0xfcc657b1
  406f68:	js     0x406f9e
  406f6a:	mov    BYTE PTR [ebp+edi*4-0x3d],ah
  406f6e:	in     al,0xa8
  406f70:	loopne 0x406fc1
  406f72:	pop    edx
  406f73:	and    eax,DWORD PTR [edx-0xd5623b7]
  406f79:	sub    DWORD PTR [ebx],edx
  406f7b:	sar    cl,cl
  406f7d:	shl    BYTE PTR [esi],1
  406f7f:	or     DWORD PTR [edx+0x754b8d3f],edx
  406f85:	inc    edi
  406f86:	xlat   BYTE PTR ds:[ebx]
  406f87:	test   eax,0x6404ee2d
  406f8c:	pop    ecx
  406f8d:	push   0xf6e20d2d
  406f92:	stos   DWORD PTR es:[edi],eax
  406f93:	outs   dx,DWORD PTR ds:[esi]
  406f94:	aas    
  406f95:	xor    al,0x6
  406f97:	outs   dx,DWORD PTR ds:[esi]
  406f98:	sub    eax,0x93369ff8
  406f9d:	inc    edx
  406f9e:	jne    0x406fb6
  406fa0:	or     bh,BYTE PTR fs:0x58fe1ec4
  406fa7:	scas   eax,DWORD PTR es:[edi]
  406fa8:	mov    eax,ds:0xada33686
  406fad:	sbb    al,0x11
  406faf:	pop    eax
  406fb0:	jnp    0x406fd9
  406fb2:	pop    eax
  406fb3:	push   ss
  406fb4:	mov    bh,0x7c
  406fb6:	call   0x9d90:0xe19553c2
  406fbd:	pop    DWORD PTR [ebp-0x49]
  406fc0:	push   esp
  406fc1:	sar    DWORD PTR [eax-0x337bba56],1
  406fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fc8:	call   0x886e778f
  406fcd:	fmul   QWORD PTR [ebp+0x53]
  406fd0:	ret    
  406fd1:	jge    0x406fde
  406fd3:	ins    DWORD PTR es:[edi],dx
  406fd4:	xor    eax,0xc7faf628
  406fd9:	(bad)  
  406fda:	inc    dx
  406fdc:	mov    ebx,0x6fedd909
  406fe1:	pop    ss
  406fe2:	sub    al,0xcf
  406fe4:	pop    ebp
  406fe5:	sbb    ebp,esp
  406fe7:	ret    
  406fe8:	ins    DWORD PTR es:[edi],dx
  406fe9:	xchg   ebx,eax
  406fea:	dec    esi
  406feb:	scas   eax,DWORD PTR es:[edi]
  406fec:	add    bh,ah
  406fee:	(bad)  
  406fef:	lds    edx,FWORD PTR [eax]
  406ff1:	mov    ch,0x4
  406ff3:	mov    ecx,DWORD PTR [ebx]
  406ff5:	cmp    cl,dl
  406ff7:	ror    edi,1
  406ff9:	addr16 call 0xadd2de9b
  406fff:	imul   ecx,DWORD PTR [edx-0x2c],0x69
  407003:	stos   DWORD PTR es:[edi],eax
  407004:	fst    DWORD PTR [edx]
  407006:	es (bad) 
  407008:	pop    ebx
  407009:	and    esi,ebp
  40700b:	xchg   ebx,eax
  40700c:	ror    BYTE PTR ds:0x914b2edf,cl
  407012:	inc    eax
  407013:	div    edi
  407015:	js     0x40700c
  407017:	aaa    
  407018:	jne    0x407043
  40701a:	retf   0xe6ac
  40701d:	shl    DWORD PTR [edx],0x82
  407020:	lock test al,0xc
  407023:	adc    dh,BYTE PTR [ebp-0x19]
  407026:	lock cmp al,0x1
  407029:	arpl   dx,dx
  40702b:	shl    BYTE PTR [ecx+0x25706071],cl
  407031:	out    0x40,eax
  407033:	and    al,0x46
  407035:	je     0x407011
  407037:	or     BYTE PTR [esi+0x2312f77b],dh
  40703d:	sahf   
  40703e:	sbb    esp,DWORD PTR fs:[esi+0x28]
  407042:	adc    DWORD PTR [ecx],esp
  407044:	sbb    BYTE PTR [esi+0x768b525d],ah
  40704a:	push   ds
  40704b:	mov    WORD PTR [ecx+0x6f278288],?
  407051:	or     eax,0x2adc7aa3
  407056:	stos   BYTE PTR es:[edi],al
  407057:	sbb    DWORD PTR [ecx-0x51d8d8af],0xffd6651c
  407061:	lock cmp ecx,DWORD PTR [ecx-0x67dfd24c]
  407068:	push   edi
  407069:	das    
  40706a:	shl    ch,cl
  40706c:	pop    es
  40706d:	push   ebp
  40706e:	iret   
  40706f:	dec    esi
  407070:	mov    ds:0x240ae776,eax
  407075:	aas    
  407076:	mov    ah,0x27
  407078:	ror    DWORD PTR [ebx+edi*1-0x3169df92],0x79
  407080:	adc    dl,ah
  407082:	fwait
  407083:	test   DWORD PTR [esi+ebp*8-0x10be08d2],esi
  40708a:	mov    bh,0x3
  40708c:	mov    cl,0xb8
  40708e:	mov    eax,0xe4243ebb
  407093:	push   esp
  407094:	aas    
  407095:	sub    ch,ch
  407097:	mov    ebx,0xf1261507
  40709c:	jnp    0x40707d
  40709e:	xor    al,0x6d
  4070a0:	pop    DWORD PTR [edx-0x5f09355b]
  4070a6:	pop    edi
  4070a7:	or     eax,0x736f9834
  4070ac:	mov    WORD PTR [esi-0x1709982e],gs
  4070b2:	(bad)  
  4070b3:	cld    
  4070b4:	rcl    esp,1
  4070b6:	mov    ebp,0x8a01d0cf
  4070bb:	mov    ah,0xe7
  4070bd:	imul   ecx,DWORD PTR [esi-0x66],0xffffff92
  4070c1:	dec    esp
  4070c2:	jnp    0x407128
  4070c4:	scas   al,BYTE PTR es:[edi]
  4070c5:	add    eax,0xddfdba1a
  4070ca:	xchg   ecx,eax
  4070cb:	loope  0x407114
  4070cd:	leave  
  4070ce:	cdq    
  4070cf:	test   eax,0xe1f81d2
  4070d4:	fistp  QWORD PTR [eax+0x61bee217]
  4070da:	mov    cl,0xe4
  4070dc:	lock xchg ebp,eax
  4070de:	loope  0x4070d1
  4070e0:	cs and al,0xa5
  4070e3:	add    al,0x8a
  4070e5:	cmp    ch,BYTE PTR [ebx]
  4070e7:	in     al,0xbd
  4070e9:	(bad)  
  4070ea:	cmp    cl,BYTE PTR [ebp+0x4c901d18]
  4070f0:	fsubrp st(7),st
  4070f2:	push   es
  4070f3:	sbb    al,0x78
  4070f5:	inc    esp
  4070f6:	inc    ebx
  4070f7:	jae    0x407128
  4070f9:	sub    ah,bh
  4070fb:	mov    bh,0x9a
  4070fd:	mov    edi,0xba251ad5
  407102:	inc    ecx
  407103:	xor    al,0xc6
  407105:	sti    
  407106:	imul   esi,DWORD PTR [esi-0x57],0xffffffff
  40710a:	repnz rcr BYTE PTR [ecx],0xe2
  40710e:	and    eax,0xe0b4a46
  407113:	test   DWORD PTR [edx-0x2b2a044f],edx
  407119:	jno    0x407139
  40711b:	sub    ebx,edx
  40711d:	(bad)  
  40711e:	js     0x40714d
  407120:	icebp  
  407121:	out    0xc8,eax
  407123:	push   eax
  407124:	gs dec eax
  407126:	mov    ds:0xe5d1bb83,al
  40712b:	imul   ebx,esp,0x31
  40712e:	push   edx
  40712f:	mov    esi,0xb406ce4b
  407134:	jb     0x407136
  407136:	pop    edi
  407137:	shl    DWORD PTR [edi-0x2dfcf3b9],cl
  40713d:	sub    DWORD PTR [ebx],edx
  40713f:	(bad)
  407142:	jl     0x4070e1
  407144:	xor    eax,0xf840d8a0
  407149:	cmc    
  40714a:	cmp    eax,edi
  40714c:	popa   
  40714d:	pop    es
  40714e:	mov    edx,?
  407150:	xor    DWORD PTR ds:0x3c4b47c2,ebp
  407156:	ret    0xb7d2
  407159:	pop    ebx
  40715a:	mov    ecx,0xbb257162
  40715f:	pop    ecx
  407160:	sub    al,ch
  407162:	loop   0x407114
  407164:	jo     0x4070fa
  407166:	fsubr  QWORD PTR [esi]
  407168:	clc    
  407169:	push   cs
  40716a:	inc    esp
  40716b:	xchg   esi,eax
  40716c:	mov    eax,0x9575fe63
  407171:	sahf   
  407172:	mov    ecx,DWORD PTR [esp+eiz*8-0x43355eb3]
  407179:	mov    esp,DWORD PTR gs:[edi-0x9]
  40717d:	xchg   edx,eax
  40717e:	xor    DWORD PTR [ebp+0x78fb06a4],ebx
  407184:	stos   DWORD PTR es:[edi],eax
  407185:	sahf   
  407186:	and    dh,BYTE PTR [edx+0x1d]
  407189:	mov    esp,0x6c30e753
  40718e:	and    DWORD PTR [eax],eax
  407190:	enter  0xa836,0x24
  407194:	pop    ebx
  407195:	sbb    eax,0x9403ec1d
  40719a:	in     eax,dx
  40719b:	inc    ecx
  40719c:	cmp    eax,0x550352ac
  4071a1:	mov    ch,0x9a
  4071a3:	dec    ecx
  4071a4:	dec    eax
  4071a5:	pushf  
  4071a6:	(bad)  
  4071a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071a8:	cmp    cl,BYTE PTR [edx]
  4071aa:	jno    0x4071c9
  4071ac:	push   0x5d8b981c
  4071b1:	or     al,0x19
  4071b3:	(bad)  
  4071b4:	scas   eax,DWORD PTR es:[edi]
  4071b5:	or     BYTE PTR [esp+edi*1-0x75],0x85
  4071ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071bb:	adc    DWORD PTR ds:0x1997ce33,ecx
  4071c1:	arpl   WORD PTR [ebx+0x8],dx
  4071c4:	xor    cl,bl
  4071c6:	lods   eax,DWORD PTR ds:[esi]
  4071c7:	mov    ebx,0x78b676dc
  4071cc:	es data16 int 0x52
  4071d0:	(bad)  
  4071d2:	inc    esp
  4071d3:	xor    al,BYTE PTR [ecx+edx*8]
  4071d6:	in     eax,dx
  4071d7:	jns    0x40724d
  4071d9:	jl     0x4071b6
  4071db:	lods   al,BYTE PTR ds:[esi]
  4071dc:	retf   
  4071dd:	inc    ebp
  4071de:	pop    sp
  4071e0:	push   ebx
  4071e1:	lods   eax,DWORD PTR ds:[esi]
  4071e2:	into   
  4071e3:	fsubr  st(1),st
  4071e5:	das    
  4071e6:	(bad)  
  4071e7:	into   
  4071e8:	call   0xfd2b:0x95c7b260
  4071ef:	mov    al,BYTE PTR [ecx]
  4071f1:	mov    ebx,0xe932a240
  4071f6:	pushf  
  4071f7:	push   ecx
  4071f8:	mov    ah,0xdc
  4071fa:	into   
  4071fb:	mov    ebx,0x9336260a
  407200:	pushf  
  407201:	adc    esp,ecx
  407203:	or     BYTE PTR [ecx-0x3428e6c],bl
  407209:	xchg   ebx,eax
  40720a:	xchg   edx,eax
  40720b:	pop    esi
  40720c:	fsubr  DWORD PTR [edx-0x63733a13]
  407212:	ja     0x407226
  407214:	pop    ebx
  407215:	xor    eax,0x7f2f6b47
  40721a:	xor    DWORD PTR [ecx-0xf],edi
  40721d:	pop    ebx
  40721e:	fcom   DWORD PTR [ebp+0x6663082e]
  407224:	pop    ds
  407225:	std    
  407226:	popa   
  407227:	sub    edi,ecx
  407229:	sbb    al,0x80
  40722b:	pusha  
  40722c:	pop    eax
  40722d:	inc    edx
  40722e:	sbb    DWORD PTR [edi],esi
  407230:	into   
  407231:	fisubr DWORD PTR [eax+0x2a]
  407234:	sbb    DWORD PTR [edx+0x6],ecx
  407237:	and    BYTE PTR [esi+edx*4],ch
  40723a:	mov    DWORD PTR [bp+si+0x3e],ebp
  40723e:	es repnz pop edi
  407241:	inc    BYTE PTR [edx]
  407243:	stos   BYTE PTR es:[edi],al
  407244:	mov    edx,0x9fc9dd72
  407249:	mov    ebx,0xebd41faf
  40724e:	ror    BYTE PTR [edi],cl
  407250:	mov    cs,WORD PTR [edi+ebx*8+0xa]
  407254:	xor    eax,0xda87ad0
  407259:	add    DWORD PTR [eax-0x3a047e06],ebp
  40725f:	mov    ebx,0x6ecfbd8c
  407264:	mov    al,0xf8
  407266:	pop    ebp
  407267:	dec    ebx
  407268:	jne    0x409604
  40726e:	cmp    ebx,DWORD PTR [ebp-0xc]
  407271:	je     0x40966c
  407277:	jmp    0x409604
  40727c:	jmp    0x4095ff
  407281:	mov    esp,0x842fd8d0
  407286:	pop    ss
  407287:	jae    0x407254
  407289:	cmp    dl,BYTE PTR [edi+0x68]
  40728c:	lock cli 
  40728e:	mov    ds:0x3aa4a02f,al
  407293:	jo     0x407305
  407295:	sbb    bl,BYTE PTR [edi+0x70]
  407298:	jo     0x407280
  40729a:	les    ecx,FWORD PTR [ebx]
  40729c:	ret    
  40729d:	pushf  
  40729e:	mov    ebx,0xbdb736a6
  4072a3:	in     al,0x85
  4072a5:	sti    
  4072a6:	out    0xe2,al
  4072a8:	arpl   WORD PTR [esi-0x5a063b5d],sp
  4072ae:	or     edi,esi
  4072b0:	mov    ecx,0x3b89c7c0
  4072b5:	cmp    cl,BYTE PTR [edx]
  4072b7:	hlt    
  4072b8:	test   al,0xf5
  4072ba:	push   cs
  4072bb:	xlat   BYTE PTR ds:[ebx]
  4072bc:	popf   
  4072bd:	mov    ds:0x7e0c9901,al
  4072c2:	mov    ebx,0x51764992
  4072c7:	xor    DWORD PTR [edx],esp
  4072c9:	push   edx
  4072ca:	jbe    0x40726f
  4072cc:	cmp    eax,0x9585e542
  4072d1:	push   ebp
  4072d2:	cdq    
  4072d3:	data16 xor bl,BYTE PTR [edx-0x4a]
  4072d7:	adc    al,BYTE PTR [eax]
  4072d9:	adc    al,0xed
  4072db:	jmp    0x407292
  4072dd:	lods   eax,DWORD PTR ds:[esi]
  4072de:	inc    BYTE PTR [edi+ebp*4+0x26]
  4072e2:	fbld   TBYTE PTR [ecx+edi*8]
  4072e5:	retf   0x9fb9
  4072e8:	clc    
  4072e9:	jge    0x4072e2
  4072eb:	sbb    edi,DWORD PTR [edx+0x703bc65e]
  4072f1:	lea    esp,ds:0x56c0264a
  4072f7:	jp     0x4072dd
  4072f9:	dec    ecx
  4072fa:	push   esp
  4072fb:	xchg   ebp,eax
  4072fc:	xchg   BYTE PTR [edx-0x62be3b8b],ch
  407302:	xor    al,0xb5
  407304:	mov    WORD PTR [edi+eax*2+0x3],ds
  407308:	loope  0x40732a
  40730a:	ds mov esi,0xa2b7484
  407310:	push   esp
  407311:	xchg   esi,eax
  407312:	ret    0xe1b9
  407315:	jae    0x40735e
  407317:	into   
  407318:	adc    BYTE PTR [edi-0x6c],al
  40731b:	ret    0xe42c
  40731e:	inc    eax
  40731f:	jae    0x407379
  407321:	fmul   st(2),st
  407323:	sbb    bl,BYTE PTR [ecx+0x6c]
  407326:	js     0x4072d1
  407328:	aam    0xf3
  40732a:	sar    bh,0xc
  40732d:	loope  0x407376
  40732f:	mul    BYTE PTR [eax+0x7a83894c]
  407335:	and    al,0xa
  407337:	inc    edi
  407338:	jns    0x4073b0
  40733a:	aad    0x30
  40733c:	jp     0x40731e
  40733e:	aad    0xa4
  407340:	fild   DWORD PTR [esi+0x4b]
  407343:	je     0x40736b
  407345:	aaa    
  407346:	es popf 
  407348:	mov    eax,ds:0xbfd40724
  40734d:	leave  
  40734e:	adc    eax,DWORD PTR [ebx+0x7c]
  407351:	js     0x4072e0
  407353:	(bad)  
  407354:	and    al,0x8a
  407356:	push   ss
  407357:	add    DWORD PTR [edx-0x23],0x7d
  40735b:	imul   ebx,DWORD PTR [edi],0x11
  40735e:	inc    edx
  40735f:	push   edi
  407360:	int3   
  407361:	scas   eax,DWORD PTR es:[edi]
  407362:	and    DWORD PTR [esi],ebp
  407364:	aad    0x71
  407366:	arpl   WORD PTR [ebx],sp
  407368:	lock mov bh,0x7
  40736b:	fdivr  QWORD PTR [esi+0x5635174c]
  407371:	mov    WORD PTR [edx],es
  407373:	fisubr WORD PTR [ebx+0x6a3c6d9a]
  407379:	adc    al,0xc7
  40737b:	sbb    DWORD PTR [edi+0x3f],0xffffffb2
  40737f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407380:	xor    eax,DWORD PTR [eax-0x15]
  407383:	imul   edi,DWORD PTR [edi],0xebacf267
  407389:	push   edi
  40738a:	jmp    0x407368
  40738c:	sbb    bl,bl
  40738e:	adc    al,0x3
  407390:	stos   DWORD PTR es:[edi],eax
  407391:	dec    esi
  407392:	mov    bh,BYTE PTR [edi-0x46]
  407395:	call   0xb27e:0x508a208
  40739c:	mov    dl,0x39
  40739e:	xchg   edx,eax
  40739f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073a0:	adc    DWORD PTR [esi+0x6e],edi
  4073a3:	mov    esi,0x2070389b
  4073a8:	jns    0x407375
  4073aa:	stc    
  4073ab:	push   esi
  4073ac:	imul   ecx,DWORD PTR ds:0x55f37064,0xee95fbcc
  4073b6:	dec    ebp
  4073b7:	ins    DWORD PTR es:[edi],dx
  4073b8:	inc    ecx
  4073b9:	xchg   ebx,eax
  4073ba:	popa   
  4073bb:	cdq    
  4073bc:	fsub   QWORD PTR [esi]
  4073be:	xchg   ebp,eax
  4073bf:	mov    edx,0x75efc7de
  4073c4:	and    al,0x85
  4073c6:	add    cl,BYTE PTR [eax-0x73]
  4073c9:	xchg   DWORD PTR [edx],ebp
  4073cb:	lods   eax,DWORD PTR ds:[esi]
  4073cc:	add    eax,0xc0fd6a12
  4073d1:	call   0x1b3c9030
  4073d6:	cmp    edi,DWORD PTR [ebx]
  4073d8:	cs pop ds
  4073da:	loope  0x4073b3
  4073dc:	and    bh,dh
  4073de:	adc    ecx,DWORD PTR [ebx+eiz*1]
  4073e1:	repnz (bad) 
  4073e3:	push   ss
  4073e4:	aas    
  4073e5:	or     WORD PTR [edx-0x5134002d],0x45
  4073ed:	les    ebp,FWORD PTR [edi]
  4073ef:	xor    eax,DWORD PTR [edx+0x4]
  4073f2:	xlat   BYTE PTR ds:[ebx]
  4073f3:	xor    DWORD PTR [ecx+0x7186faa],ebp
  4073f9:	out    0x1c,al
  4073fb:	es inc eax
  4073fd:	int3   
  4073fe:	js     0x40741d
  407400:	sub    cl,BYTE PTR [ebx]
  407402:	sbb    DWORD PTR [ebx],ecx
  407404:	mov    al,0xba
  407406:	jns    0x4073b1
  407408:	inc    eax
  407409:	and    ch,BYTE PTR [esi-0x10d98e38]
  40740f:	sbb    BYTE PTR [esi+eiz*4],dl
  407412:	pop    edx
  407413:	xor    BYTE PTR [eax],al
  407415:	pop    edx
  407416:	leave  
  407417:	dec    ebp
  407418:	xchg   ebp,eax
  407419:	outs   dx,DWORD PTR ds:[esi]
  40741a:	cmp    al,0x8f
  40741c:	adc    eax,DWORD PTR [esi+0x60436620]
  407422:	fcom   QWORD PTR [edi+ecx*8-0x64]
  407426:	mov    al,ds:0x7daf7c1a
  40742b:	mov    bl,0xe7
  40742d:	xchg   esp,eax
  40742e:	fnstenv [eax+0x3e]
  407431:	mov    esi,0x623ed7e6
  407436:	push   cs
  407437:	add    ch,BYTE PTR [eax]
  407439:	sbb    DWORD PTR [edi-0x3e],esi
  40743c:	call   0xdfc9:0x386e90cb
  407443:	in     al,0xb9
  407445:	mov    edi,0x8d2eae4e
  40744a:	and    edx,esi
  40744c:	mov    dh,BYTE PTR [edi+0x29eafe39]
  407452:	xchg   ebp,eax
  407453:	jg     0x4074d0
  407455:	fs ret 
  407457:	int    0x47
  407459:	mov    ebx,0x5876140a
  40745e:	and    DWORD PTR [esp+ecx*4-0x26],esp
  407462:	cmp    eax,0x3f2aca38
  407467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407468:	or     BYTE PTR [eax],0xae
  40746b:	and    DWORD PTR [ecx+0x6cdb14ef],esi
  407471:	xor    DWORD PTR [ebx],edx
  407473:	aas    
  407474:	xlat   BYTE PTR ds:[ebx]
  407475:	test   eax,0x90d3fdbb
  40747a:	sbb    al,0x78
  40747c:	cmp    DWORD PTR [ebx+0xc],0x1a04ab0e
  407483:	add    esi,DWORD PTR [edi-0x2a]
  407486:	dec    edi
  407487:	push   edx
  407488:	in     al,dx
  407489:	mov    esp,0xcd0bd0ac
  40748e:	stos   BYTE PTR es:[edi],al
  40748f:	jnp    0x407417
  407491:	pop    esp
  407492:	fimul  DWORD PTR [edi]
  407494:	std    
  407495:	xlat   BYTE PTR ds:[ebx]
  407496:	and    esp,DWORD PTR [eax+0x43]
  407499:	sub    eax,0x35788004
  40749e:	inc    ebp
  40749f:	nop
  4074a0:	stc    
  4074a1:	mov    ecx,0xf4a89797
  4074a6:	repz and al,0xc9
  4074a9:	lds    eax,FWORD PTR [edx]
  4074ab:	(bad)  
  4074ac:	jno    0x407479
  4074ae:	ss bound ebx,QWORD PTR cs:[ecx+0x6f4f1224]
  4074b6:	cmp    eax,0xc1aa9fdf
  4074bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074bc:	pusha  
  4074bd:	fwait
  4074be:	inc    edx
  4074bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074c0:	mov    ah,0xd2
  4074c2:	adc    al,0xed
  4074c4:	jge    0x4074f4
  4074c6:	xchg   edi,eax
  4074c7:	dec    edi
  4074c8:	or     edx,DWORD PTR [esi+0x5c]
  4074cb:	and    esi,DWORD PTR [edx+0x45]
  4074ce:	xlat   BYTE PTR ds:[ebx]
  4074cf:	sub    al,0x2e
  4074d1:	je     0x407497
  4074d3:	loop   0x407501
  4074d5:	pop    esi
  4074d6:	sti    
  4074d7:	outs   dx,BYTE PTR ds:[esi]
  4074d8:	out    0xff,eax
  4074da:	push   eax
  4074db:	stc    
  4074dc:	mov    ds:0xc78c3a8c,al
  4074e1:	dec    eax
  4074e2:	jb     0x407563
  4074e4:	or     al,0x23
  4074e6:	jmp    0x876c3163
  4074eb:	dec    esi
  4074ec:	int    0x3b
  4074ee:	mov    dh,0x5b
  4074f0:	into   
  4074f1:	mov    al,0x31
  4074f3:	adc    BYTE PTR [eax],cl
  4074f5:	shl    BYTE PTR [edx+ebx*4],1
  4074f8:	out    dx,al
  4074f9:	cmp    ch,0xb
  4074fc:	xchg   ebp,eax
  4074fd:	jne    0x407545
  4074ff:	cmp    ch,BYTE PTR ds:[edi-0x53]
  407503:	fild   QWORD PTR ds:0x7414c2f8
  407509:	sti    
  40750a:	sbb    eax,0xceca6449
  40750f:	inc    ebp
  407510:	test   BYTE PTR [ebx],dl
  407512:	ins    BYTE PTR es:[edi],dx
  407513:	cli    
  407514:	mov    dl,0x6
  407516:	jb     0x40751a
  407518:	mov    ebp,0xb765937b
  40751d:	fsub   QWORD PTR [ebx-0x3b]
  407520:	mov    eax,ds:0x539fdf6f
  407525:	jmp    0x4074ae
  407527:	fidiv  DWORD PTR [edx-0x2e348a86]
  40752d:	xchg   DWORD PTR [ebx+ecx*8],edi
  407530:	gs scas al,BYTE PTR es:[edi]
  407532:	xor    eax,0xd9c0cff2
  407537:	pop    eax
  407538:	xchg   edi,eax
  407539:	pop    es
  40753a:	dec    esi
  40753b:	inc    ecx
  40753c:	fbld   TBYTE PTR ds:0x6a904f27
  407542:	ja     0x407550
  407544:	pop    eax
  407545:	inc    edi
  407546:	jp     0x40756a
  407548:	mov    dh,0x1b
  40754a:	cli    
  40754b:	dec    eax
  40754c:	out    0x8a,al
  40754e:	fwait
  40754f:	ret    
  407550:	das    
  407551:	jle    0x407588
  407553:	(bad)  
  407554:	int    0xb1
  407556:	push   esi
  407557:	dec    edi
  407558:	adc    eax,DWORD PTR [edi-0x7d]
  40755b:	mul    bl
  40755d:	ds pop edi
  40755f:	ja     0x40757e
  407561:	inc    eax
  407562:	mov    cl,0x2c
  407564:	stc    
  407565:	shl    DWORD PTR [edi+edx*8-0x68],1
  407569:	pop    ebx
  40756a:	inc    edi
  40756b:	jle    0x407578
  40756d:	(bad)  
  40756e:	pop    esp
  40756f:	cdq    
  407570:	(bad)  
  407571:	push   ss
  407572:	jno    0x407582
  407574:	cmp    bl,BYTE PTR [ecx]
  407576:	inc    esp
  407577:	sub    eax,0x4ca2ce25
  40757c:	(bad)  
  40757d:	sub    DWORD PTR [esi-0x39],0x15
  407581:	loopne 0x4075bf
  407583:	jmp    0x8c1e:0xd0a6f39c
  40758a:	push   es
  40758b:	popf   
  40758c:	pop    eax
  40758d:	jle    0x407526
  40758f:	pop    eax
  407590:	and    DWORD PTR [ebx-0x1417953e],0x31
  407597:	and    dl,dl
  407599:	int    0x80
  40759b:	xor    bh,BYTE PTR [ebx]
  40759d:	imul   edi,edx,0x845f55
  4075a3:	push   esi
  4075a4:	sub    eax,0x12bad1d5
  4075a9:	in     al,0xac
  4075ab:	into   
  4075ac:	je     0x407583
  4075ae:	inc    edi
  4075af:	add    ah,BYTE PTR [esi-0x69]
  4075b2:	adc    eax,0x2241d725
  4075b7:	neg    DWORD PTR [ebp+0x4c]
  4075ba:	lahf   
  4075bb:	fs pop es
  4075bd:	sub    BYTE PTR [edi+0x3b84d7e9],ch
  4075c3:	pop    edx
  4075c4:	shl    BYTE PTR [edi-0x49],0x4b
  4075c8:	add    DWORD PTR [edx-0x28],eax
  4075cb:	jbe    0x407599
  4075cd:	(bad)  
  4075ce:	test   DWORD PTR [eax+edx*8],0x6b4ec7dd
  4075d5:	pop    edi
  4075d6:	adc    eax,0x8b7fa046
  4075db:	sub    DWORD PTR [edx-0x6b972eb3],eax
  4075e1:	mov    fs,WORD PTR cs:[esi]
  4075e4:	mov    bl,0x4b
  4075e6:	test   BYTE PTR [eax],bl
  4075e8:	push   esi
  4075e9:	mov    ebx,0x6495e79d
  4075ee:	jmp    0x85572a3e
  4075f3:	xchg   ebp,eax
  4075f4:	cmp    DWORD PTR [eax+0x0],ecx
  4075f7:	push   eax
  4075f8:	lods   eax,DWORD PTR ds:[esi]
  4075f9:	je     0x40764e
  4075fb:	fcomp  DWORD PTR [eax+0x12]
  4075fe:	or     DWORD PTR [esi-0x6e591e7f],ebx
  407604:	mov    al,0xa8
  407606:	jle    0x407589
  407608:	xlat   BYTE PTR ds:[bx]
  40760a:	inc    eax
  40760b:	mov    al,ds:0x87dc6b5b
  407610:	xchg   ecx,eax
  407611:	or     DWORD PTR [ebp+0x10],esp
  407614:	mov    eax,0x32d3a351
  407619:	or     BYTE PTR [ebx-0x6bf75511],bh
  40761f:	imul   BYTE PTR [edx+ebx*2-0x58]
  407623:	leave  
  407624:	jns    0x4075d1
  407626:	push   0xc4991b78
  40762b:	lds    edx,FWORD PTR [edi-0x80]
  40762e:	int3   
  40762f:	jb     0x407679
  407631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407632:	push   esi
  407633:	mov    edi,0x24a7d633
  407638:	mov    esp,0x86b4d027
  40763d:	mov    ecx,DWORD PTR [edx+0x7ae5d72c]
  407643:	test   BYTE PTR [edi+0x19],al
  407646:	ins    DWORD PTR es:[edi],dx
  407647:	inc    ebx
  407648:	ret    0x25cb
  40764b:	pusha  
  40764c:	pop    ds
  40764d:	inc    esp
  40764e:	ins    BYTE PTR es:[edi],dx
  40764f:	pop    ecx
  407650:	frndint 
  407652:	cmp    eax,0xe405e04d
  407657:	(bad)  
  407658:	bound  esi,QWORD PTR [esi]
  40765a:	popf   
  40765b:	push   cs
  40765c:	test   BYTE PTR [eax],ah
  40765e:	lock lahf 
  407660:	ins    DWORD PTR es:[edi],dx
  407661:	mov    dh,BYTE PTR [esi]
  407663:	pop    ebx
  407664:	mov    edx,0x754a7111
  407669:	adc    al,0xee
  40766b:	pop    es
  40766c:	mov    edi,0x25d30bde
  407671:	add    BYTE PTR [ecx+0x71],bl
  407674:	shr    DWORD PTR [ebp*4+0x240fd37e],cl
  40767b:	(bad)  
  40767c:	jg     0x4076f5
  40767e:	sub    al,0xe5
  407680:	fidivr DWORD PTR [eax]
  407682:	ror    DWORD PTR [ebp-0x7b736a0b],0x6c
  407689:	in     ax,dx
  40768b:	and    edx,DWORD PTR ds:0xa7a343af
  407691:	adc    DWORD PTR [eax+0x163cb9e9],ebx
  407697:	sbb    ecx,edx
  407699:	cdq    
  40769a:	mov    bh,0x7e
  40769c:	jno    0x407649
  40769e:	(bad)  
  40769f:	shl    edi,cl
  4076a1:	fcmovb st,st(0)
  4076a3:	mov    ds:0xe9c684f7,al
  4076a8:	rol    DWORD PTR [ecx+0x68],cl
  4076ab:	scas   al,BYTE PTR es:[edi]
  4076ac:	fld    TBYTE PTR [esi]
  4076ae:	fidivr WORD PTR [ecx+0xfb006c3]
  4076b4:	pop    es
  4076b5:	mov    bl,0xe1
  4076b7:	imul   edx,ebx,0x4a
  4076ba:	aam    0x21
  4076bc:	cmp    al,0x69
  4076be:	sar    DWORD PTR [ebx+0x7cf333ac],cl
  4076c4:	sbb    ebx,DWORD PTR [esi-0x5e]
  4076c7:	in     al,dx
  4076c8:	mov    ch,0x3b
  4076ca:	inc    esp
  4076cb:	aas    
  4076cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076cd:	mov    edx,0xb3fc01a4
  4076d2:	xor    BYTE PTR [eax+edi*4+0x2d8d4dae],0xc
  4076da:	out    0x41,al
  4076dc:	inc    ebx
  4076dd:	xchg   edx,eax
  4076de:	into   
  4076df:	jl     0x40769e
  4076e1:	cld    
  4076e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076e3:	cmp    DWORD PTR [edx+0x7e353733],edx
  4076e9:	je     0x407706
  4076eb:	push   cs
  4076ec:	xor    al,0x2c
  4076ee:	fisttp QWORD PTR [eax+0x2b2bbe22]
  4076f4:	ss int3 
  4076f6:	jno    0x40772d
  4076f8:	pushf  
  4076f9:	fisubr WORD PTR [edx+0x46e91228]
  4076ff:	push   es
  407700:	sti    
  407701:	mov    dl,0xc6
  407703:	jecxz  0x4076bd
  407705:	or     DWORD PTR [ebx-0x21],eax
  407708:	jl     0x407747
  40770a:	lock sbb al,0x52
  40770d:	dec    ebp
  40770e:	xchg   edi,eax
  40770f:	imul   esp,DWORD PTR [ecx+eiz*1+0x3f1759d5],0xca9f4a22
  40771a:	sub    DWORD PTR [ebx],esi
  40771c:	das    
  40771d:	dec    ecx
  40771e:	imul   esp,DWORD PTR [eax+0x44],0xa4dd3eae
  407725:	pop    es
  407726:	add    bl,BYTE PTR [esi+ecx*4+0x7fc4e235]
  40772d:	out    0xe9,eax
  40772f:	jmp    0x601d:0xc2b20f04
  407736:	outs   dx,DWORD PTR ds:[esi]
  407737:	add    eax,0xb816874e
  40773c:	arpl   WORD PTR ss:[edi-0x7e],bp
  407740:	xor    BYTE PTR [ebx-0x5e246385],cl
  407746:	mov    ah,0x9f
  407748:	pop    edi
  407749:	xor    ah,dh
  40774b:	xchg   edx,eax
  40774c:	jmp    0x40779f
  40774e:	or     DWORD PTR [esi+0x799abd4a],edx
  407754:	push   0x74
  407756:	mov    dh,0x4c
  407758:	jmp    0x4077d7
  40775a:	aad    0x1c
  40775c:	popf   
  40775d:	dec    ecx
  40775e:	push   eax
  40775f:	clc    
  407760:	mov    eax,0x6e756675
  407765:	mov    ecx,0x72721dd7
  40776a:	jle    0x40772e
  40776c:	(bad)  
  40776d:	js     0x407712
  40776f:	nop
  407770:	sbb    dl,BYTE PTR [esi]
  407772:	mov    cl,0x87
  407774:	cmp    DWORD PTR [eax-0x643708a4],edi
  40777a:	cmp    BYTE PTR [edi],dl
  40777c:	mov    edx,0x9c7e902f
  407781:	mov    eax,ds:0xc86f822e
  407786:	xchg   esp,eax
  407787:	push   ecx
  407788:	addr16 repnz es sar cl,cl
  40778d:	add    BYTE PTR cs:[ebp+0x2e7add30],0x10
  407795:	icebp  
  407796:	dec    esi
  407797:	mov    BYTE PTR [esi],dl
  407799:	jmp    0x4077fb
  40779b:	sub    eax,DWORD PTR [edx-0x58006aa5]
  4077a1:	(bad)  
  4077a2:	imul   BYTE PTR [edi+0x64]
  4077a5:	stos   BYTE PTR es:[edi],al
  4077a6:	test   eax,0xc1e07f30
  4077ab:	or     BYTE PTR [ecx+0x2c],0xcd
  4077af:	sbb    BYTE PTR [ebx+0x7d83f01e],dh
  4077b5:	test   al,0xf6
  4077b7:	push   0xe052c8cc
  4077bc:	inc    ebp
  4077bd:	fwait
  4077be:	xor    al,0x44
  4077c0:	or     BYTE PTR [edi+0x2],0x2b
  4077c4:	pop    es
  4077c5:	adc    bl,BYTE PTR [esi]
  4077c7:	xor    eax,0xb2c133f0
  4077cc:	cmp    al,0x9
  4077ce:	or     eax,0xf467d658
  4077d3:	inc    ebx
  4077d4:	test   al,0x83
  4077d6:	pushf  
  4077d7:	repnz pop esi
  4077d9:	xor    ecx,esi
  4077db:	or     ecx,DWORD PTR [edi+0x4b014cd6]
  4077e1:	lock fcom QWORD PTR [ebx+0x5]
  4077e5:	xor    DWORD PTR [eax+0x1b6c6ec7],ebp
  4077eb:	mov    cl,0x67
  4077ed:	popa   
  4077ee:	inc    eax
  4077ef:	enter  0xe791,0x83
  4077f3:	aas    
  4077f4:	sbb    al,0x3b
  4077f6:	sub    dl,al
  4077f8:	int3   
  4077f9:	out    dx,al
  4077fa:	pop    es
  4077fb:	add    dh,BYTE PTR [eax+edx*8]
  4077fe:	cmp    ebx,DWORD PTR [edi]
  407800:	arpl   sp,di
  407802:	popf   
  407803:	ficom  DWORD PTR [edi+0x5f]
  407806:	jb     0x407869
  407808:	lods   eax,DWORD PTR ds:[esi]
  407809:	inc    eax
  40780a:	xor    ah,ch
  40780c:	movzx  ebp,BYTE PTR [ebp+eiz*1+0x4b]
  407811:	adc    eax,0xdf5d098e
  407816:	and    ebx,edx
  407818:	mov    ecx,0xe88d77c5
  40781d:	pop    ebp
  40781e:	test   esp,esp
  407820:	nop
  407821:	scas   al,BYTE PTR es:[edi]
  407822:	xchg   bl,ah
  407824:	or     ch,ch
  407826:	xchg   ebx,eax
  407827:	inc    ebp
  407828:	mov    WORD PTR [eax+0x9],?
  40782b:	mov    eax,0xcf04b90f
  407830:	out    0x5a,al
  407832:	lock jbe 0x407849
  407835:	icebp  
  407836:	sub    BYTE PTR [ebp-0x10cd7b1c],dl
  40783c:	or     ebx,ebp
  40783e:	mov    edx,0x72b40a22
  407843:	and    eax,0xef7b4e6
  407848:	out    dx,al
  407849:	xchg   edi,eax
  40784a:	sbb    eax,0x537d927c
  40784f:	js     0x40783a
  407851:	cdq    
  407852:	pushf  
  407853:	imul   edi,esp,0x2b
  407856:	sbb    dh,BYTE PTR [esi]
  407858:	jne    0x407865
  40785a:	add    DWORD PTR es:[edi-0x15],esp
  40785e:	jns    0x4078b1
  407860:	sub    eax,DWORD PTR [ecx+0x4cabb4d1]
  407866:	sub    al,0x3f
  407868:	out    dx,eax
  407869:	pop    ebx
  40786a:	out    0x93,al
  40786c:	or     al,0xe0
  40786e:	sub    DWORD PTR [ecx-0x5b],0x51
  407872:	mov    cs,ebp
  407874:	adc    ebx,0xffffffae
  407877:	sbb    al,0xa0
  407879:	std    
  40787a:	adc    ch,ch
  40787c:	shl    BYTE PTR [edx+0x70fc5af8],1
  407882:	sti    
  407883:	imul   edi,DWORD PTR [ebp-0x64],0x3d
  407887:	add    bh,bl
  407889:	pop    eax
  40788a:	int    0x13
  40788c:	xchg   ebx,eax
  40788d:	inc    esp
  40788e:	jle    0x407869
  407890:	mov    al,ds:0x79873a89
  407895:	std    
  407896:	mov    eax,ds:0xefdbe1e0
  40789b:	leave  
  40789c:	mov    gs,WORD PTR [eax+0x6b]
  40789f:	fadd   DWORD PTR [eax]
  4078a1:	scas   al,BYTE PTR es:[edi]
  4078a2:	outs   dx,DWORD PTR fs:[esi]
  4078a4:	cmp    eax,0x38853ad0
  4078a9:	xchg   esi,eax
  4078aa:	mov    ds:0x4e0c911,eax
  4078b0:	out    0x45,al
  4078b2:	xchg   ebp,eax
  4078b3:	out    dx,eax
  4078b4:	hlt    
  4078b5:	fild   QWORD PTR [ebx-0x42]
  4078b8:	test   al,0x2
  4078ba:	add    DWORD PTR [eax+0x7e],edx
  4078bd:	sbb    eax,0xf53efb71
  4078c2:	mov    ah,0x48
  4078c4:	fwait
  4078c5:	sub    esp,DWORD PTR [eax-0x4f]
  4078c8:	neg    BYTE PTR [ebx]
  4078ca:	add    BYTE PTR [ebx],bl
  4078cc:	or     edi,DWORD PTR [ecx+0x5ca0c392]
  4078d2:	por    mm7,QWORD PTR [eax-0x22]
  4078d6:	enter  0x2292,0x7c
  4078da:	mov    ebp,0x2ce379a7
  4078df:	cwde   
  4078e0:	mov    ebp,0xc46651e9
  4078e5:	jp     0x40793b
  4078e7:	jbe    0x407877
  4078e9:	pop    eax
  4078ea:	ror    eax,0x6f
  4078ed:	cmp    eax,0xe1c2f876
  4078f2:	rcr    BYTE PTR [ebx-0x745f5eb5],cl
  4078f8:	in     eax,dx
  4078f9:	test   ebx,ecx
  4078fb:	lock in eax,dx
  4078fd:	repz mov ecx,0x519f9e96
  407903:	fwait
  407904:	lock xchg ecx,eax
  407906:	int3   
  407907:	mov    bh,0x90
  407909:	lock (bad) 
  40790b:	(bad)  
  40790d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40790e:	pop    esp
  40790f:	stos   DWORD PTR es:[edi],eax
  407910:	imul   ebp,DWORD PTR [edi+ebp*4],0xfffffff3
  407914:	adc    edx,DWORD PTR [esi-0x2d]
  407917:	adc    al,0x3d
  407919:	clc    
  40791a:	(bad)  
  40791b:	xlat   BYTE PTR ds:[ebx]
  40791c:	mov    ds:0xf56c2e21,al
  407921:	push   es
  407922:	cmp    al,0x1f
  407924:	in     al,0x75
  407926:	push   edi
  407927:	mov    ebx,0x9d18d557
  40792c:	mov    ah,0x4a
  40792e:	lea    esp,[eax+0x4a]
  407931:	test   DWORD PTR [edi+0x5e106d0c],ebp
  407937:	push   ds
  407938:	mov    BYTE PTR [ebx+edx*2],cl
  40793b:	pusha  
  40793c:	sar    DWORD PTR [eax+0x4e],1
  40793f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407940:	aas    
  407941:	(bad)  
  407942:	mov    eax,ds:0x921b0850
  407947:	mov    bl,0xf9
  407949:	shl    DWORD PTR [edx],cl
  40794b:	test   al,0x6c
  40794d:	adc    BYTE PTR [esi],ch
  40794f:	jo     0x4079a6
  407951:	test   DWORD PTR [eax],0x3356e5
  407957:	test   DWORD PTR [esi+0x4c],esp
  40795a:	je     0x40799d
  40795c:	dec    eax
  40795d:	sub    DWORD PTR [esi+0x27245c88],edi
  407963:	retf   0xc7f
  407966:	js     0x4079ac
  407968:	mov    ah,BYTE PTR [ebx-0x22]
  40796b:	add    DWORD PTR ds:0x6a984c08,eax
  407971:	inc    esp
  407972:	push   esi
  407973:	retf   0x69e
  407976:	xchg   ebp,eax
  407977:	neg    DWORD PTR [ebp-0x1345337e]
  40797d:	dec    eax
  40797e:	frstor [edi+edx*4-0x1487e3c3]
  407985:	sti    
  407986:	sbb    dl,BYTE PTR [ecx-0x20d3453f]
  40798c:	xchg   ecx,eax
  40798d:	repnz add dh,BYTE PTR [edi-0x1c]
  407991:	stos   DWORD PTR es:[edi],eax
  407992:	dec    eax
  407993:	mov    dh,0x55
  407995:	scas   eax,DWORD PTR es:[edi]
  407996:	pop    eax
  407997:	mov    ah,BYTE PTR [edx]
  407999:	scas   eax,DWORD PTR es:[edi]
  40799a:	inc    edi
  40799b:	pop    esi
  40799c:	push   cs
  40799d:	sub    DWORD PTR [edx-0x70],edi
  4079a0:	and    eax,0x6d18371c
  4079a5:	jecxz  0x407928
  4079a7:	mov    dl,0x87
  4079a9:	outs   dx,BYTE PTR ds:[esi]
  4079aa:	xchg   BYTE PTR [edx-0x7c],ch
  4079ad:	xchg   esp,eax
  4079ae:	repz jmp 0x5e4090fc
  4079b4:	xor    esi,ebx
  4079b6:	and    dl,0x45
  4079b9:	scas   al,BYTE PTR es:[edi]
  4079ba:	inc    esp
  4079bb:	dec    edi
  4079bc:	inc    ebp
  4079bd:	(bad)
  4079c0:	adc    esi,esp
  4079c2:	mov    esi,0xacc1cb17
  4079c7:	push   esi
  4079c8:	into   
  4079c9:	adc    al,0x2c
  4079cb:	or     BYTE PTR [edx],ch
  4079cd:	test   ah,0x24
  4079d0:	popf   
  4079d1:	mov    esi,0xccc6d7fb
  4079d6:	sub    al,0x12
  4079d8:	dec    edi
  4079d9:	mov    esp,0xe35c7ece
  4079de:	scas   al,BYTE PTR es:[edi]
  4079df:	add    BYTE PTR [edx-0x20],bh
  4079e2:	int3   
  4079e3:	cld    
  4079e4:	dec    ebp
  4079e5:	push   edx
  4079e6:	lods   eax,DWORD PTR ds:[esi]
  4079e7:	aam    0x7d
  4079e9:	or     ebp,DWORD PTR [ebx]
  4079eb:	jecxz  0x4079c9
  4079ed:	pop    es
  4079ee:	out    0xa6,al
  4079f0:	aad    0xa6
  4079f2:	mov    ds:0x43be2374,al
  4079f7:	mov    esp,0x25486854
  4079fc:	inc    ebp
  4079fd:	and    DWORD PTR [ecx],0xc200fd9f
  407a03:	mov    cl,0xf3
  407a05:	repnz pop ds
  407a07:	mov    DWORD PTR [esp+ebp*4],eax
  407a0a:	sbb    dl,bh
  407a0c:	out    0x28,eax
  407a0e:	fcomp  st(4)
  407a10:	stos   DWORD PTR es:[edi],eax
  407a11:	inc    ebp
  407a12:	sar    DWORD PTR [ebx+edi*1],1
  407a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a16:	pop    edi
  407a17:	shl    BYTE PTR ss:[edx-0xee7fe],1
  407a1e:	mov    ecx,0xf00eb190
  407a23:	pop    ss
  407a24:	dec    esi
  407a25:	enter  0x1499,0xeb
  407a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a2a:	aas    
  407a2b:	aad    0xde
  407a2d:	xor    BYTE PTR [esp+ebp*8+0x62],al
  407a31:	dec    edi
  407a32:	fcomp  DWORD PTR [esi+edx*4+0x655802ef]
  407a39:	add    eax,0x8e2644e4
  407a3e:	dec    ecx
  407a3f:	ins    BYTE PTR es:[edi],dx
  407a40:	int3   
  407a41:	cld    
  407a42:	xor    ah,BYTE PTR fs:[ebp+0x58]
  407a46:	(bad)  
  407a47:	rcr    BYTE PTR [ebp+0x56],cl
  407a4a:	and    ecx,ebx
  407a4c:	lock aam 0x1b
  407a4f:	jbe    0x407a6a
  407a51:	push   ebp
  407a52:	(bad)  
  407a53:	dec    ebx
  407a54:	(bad)  [ebx]
  407a56:	push   ecx
  407a57:	add    eax,0xc02e442d
  407a5c:	test   al,0xc6
  407a5e:	sahf   
  407a5f:	fs je  0x407a57
  407a62:	sbb    ebx,0x965548e0
  407a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a69:	addr16 sub al,0x20
  407a6c:	test   DWORD PTR [ebx-0x7d598b11],0x80be2c1e
  407a76:	and    edx,DWORD PTR [esi+0x41]
  407a79:	mov    ds:0xc704c67c,al
  407a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a7f:	hlt    
  407a80:	adc    esp,ebx
  407a82:	adc    eax,0x46610ff2
  407a87:	lahf   
  407a88:	cwde   
  407a89:	in     al,dx
  407a8a:	adc    al,0xe2
  407a8c:	sbb    eax,0xff1a83ba
  407a91:	fmul   st,st(2)
  407a93:	jns    0x407a4f
  407a95:	aad    0x6f
  407a97:	rsqrtps xmm5,XMMWORD PTR [ecx-0x589a55cd]
  407a9e:	bound  esi,QWORD PTR [esp+edi*4]
  407aa1:	dec    eax
  407aa2:	push   ds
  407aa3:	stos   BYTE PTR es:[edi],al
  407aa4:	mov    esi,0x91c2abfa
  407aa9:	repnz outs dx,DWORD PTR ds:[esi]
  407aab:	mov    esp,0x5ccbaf1c
  407ab0:	mov    ebx,0xd04707f6
  407ab5:	outs   dx,BYTE PTR ds:[esi]
  407ab6:	xchg   edi,eax
  407ab7:	fsub   QWORD PTR [ecx+0x3d]
  407aba:	add    DWORD PTR [ecx+0x5d],ebp
  407abd:	js     0x407b12
  407abf:	and    BYTE PTR [edi+0x47b849c6],ch
  407ac5:	int    0x7b
  407ac7:	ds adc eax,0x9594e94d
  407acd:	leave  
  407ace:	mov    ds:0x34b6ba24,eax
  407ad3:	scas   eax,DWORD PTR es:[edi]
  407ad4:	psrlw  mm3,QWORD PTR [ebp-0xb]
  407ad8:	int    0x92
  407ada:	arpl   WORD PTR [edx+esi*2-0x140c9af3],di
  407ae1:	lahf   
  407ae2:	adc    edi,esi
  407ae4:	mov    DWORD PTR [edx+ebp*1],eax
  407ae7:	sbb    DWORD PTR [edi],esi
  407ae9:	pushf  
  407aea:	or     dl,BYTE PTR [ecx]
  407aec:	jb     0x407b18
  407aee:	or     DWORD PTR [ebp+edx*1-0x7512fc35],0x54a4c0cd
  407af9:	retf   0xa421
  407afc:	or     al,0x94
  407afe:	ss push 0xa223d4d
  407b04:	aad    0xee
  407b06:	jne    0x407b61
  407b08:	sar    BYTE PTR [eax-0x7d1139c4],0xb0
  407b0f:	in     al,dx
  407b10:	addr16 aad 0x56
  407b13:	push   esi
  407b14:	xor    al,0x2f
  407b16:	icebp  
  407b17:	jne    0x407aeb
  407b19:	ret    
  407b1a:	add    BYTE PTR [eax+0x11],ch
  407b1d:	jecxz  0x407b16
  407b1f:	lahf   
  407b20:	push   ss
  407b21:	sbb    eax,0xbdd90e24
  407b26:	pop    edx
  407b27:	inc    esp
  407b28:	push   eax
  407b29:	pop    esp
  407b2a:	sbb    al,0x3a
  407b2c:	pop    ecx
  407b2e:	jg     0x407b6c
  407b30:	cmp    bl,BYTE PTR [ebp-0x1a]
  407b33:	retf   0x52d9
  407b36:	das    
  407b37:	in     eax,0x74
  407b39:	cli    
  407b3a:	pop    esi
  407b3b:	cmp    al,0xa5
  407b3d:	cwde   
  407b3e:	add    esp,esi
  407b40:	cli    
  407b41:	ins    DWORD PTR es:[edi],dx
  407b42:	inc    edx
  407b43:	push   ss
  407b44:	mov    ds:0xc680c0b8,eax
  407b49:	xchg   BYTE PTR [esi],ah
  407b4b:	shr    DWORD PTR [ecx+0x25],1
  407b4e:	mov    ah,0xec
  407b50:	cmp    ecx,edx
  407b52:	adc    BYTE PTR es:[ebx+0x39],al
  407b56:	dec    ebp
  407b57:	sar    eax,1
  407b59:	js     0x407b29
  407b5b:	les    ebp,FWORD PTR [ecx+0x7c6d6d60]
  407b61:	aaa    
  407b62:	pushf  
  407b63:	and    edx,edx
  407b65:	es add eax,0x13ec043b
  407b6b:	rcl    edx,cl
  407b6d:	bound  ecx,QWORD PTR [edi+0x4c12904c]
  407b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b74:	adc    DWORD PTR [edi],esp
  407b76:	jbe    0x407ba7
  407b78:	dec    esi
  407b79:	adc    edx,DWORD PTR [ebp+0x2a]
  407b7c:	xchg   esp,eax
  407b7d:	dec    eax
  407b7e:	push   eax
  407b7f:	push   esi
  407b80:	mov    cl,0x5d
  407b82:	jp     0x407bf0
  407b84:	push   0xffffffbb
  407b86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b87:	loop   0x407bf3
  407b89:	ret    
  407b8a:	imul   edx,DWORD PTR [edx],0x8c2b9772
  407b90:	sub    al,0xf0
  407b92:	jecxz  0x407b9d
  407b94:	fdiv   QWORD PTR [esi+0x1af217e4]
  407b9a:	inc    ecx
  407b9b:	or     BYTE PTR [bp+di],bl
  407b9e:	fprem  
  407ba0:	inc    ebx
  407ba1:	inc    ebx
  407ba2:	mov    ds:0x3b141973,al
  407ba7:	push   ebp
  407ba8:	xchg   ebx,eax
  407ba9:	push   edi
  407baa:	jmp    0xed7ef3cf
  407baf:	jbe    0x407be0
  407bb1:	xchg   ecx,eax
  407bb2:	xlat   BYTE PTR ds:[ebx]
  407bb3:	outs   dx,BYTE PTR ds:[esi]
  407bb4:	clc    
  407bb5:	jnp    0x407b67
  407bb7:	ret    0x7c
  407bba:	xchg   esp,eax
  407bbb:	mov    edi,0xd7468246
  407bc0:	sbb    DWORD PTR [ecx-0x1e],ebp
  407bc3:	rcl    dh,1
  407bc5:	iret   
  407bc6:	mov    ch,0x96
  407bc8:	fucomi st,st(3)
  407bca:	in     al,0x5e
  407bcc:	rol    BYTE PTR [eax+0x50302656],1
  407bd2:	or     al,0xeb
  407bd4:	dec    edi
  407bd5:	out    0x6,al
  407bd7:	ja     0x407ba0
  407bd9:	fsubr  DWORD PTR [ecx-0x2b]
  407bdc:	jno    0x407c35
  407bde:	cmp    al,0xf7
  407be0:	lock sub BYTE PTR [eax+0x6f1163a5],dh
  407be7:	jmp    0x8e1:0x8ece6ffa
  407bee:	sub    dh,BYTE PTR [edi]
  407bf0:	adc    eax,0x6285570
  407bf5:	test   eax,0xd9e18fc7
  407bfa:	(bad)  
  407bfc:	add    ah,BYTE PTR [eax]
  407bfe:	test   DWORD PTR [ecx+0x7f21b8d4],esp
  407c04:	das    
  407c05:	push   es
  407c06:	push   0xffffffb4
  407c08:	(bad)  [ebp-0x137b0bd2]
  407c0e:	and    eax,0xcd82f71d
  407c13:	daa    
  407c14:	and    al,0xee
  407c16:	lods   eax,DWORD PTR ds:[esi]
  407c17:	fucomi st,st(1)
  407c19:	ja     0x407c0e
  407c1b:	popf   
  407c1c:	rcl    dh,0x58
  407c1f:	mov    BYTE PTR [edi+0x39c8daa4],0xc8
  407c26:	adc    ebp,DWORD PTR [esp+eax*1]
  407c29:	outs   dx,BYTE PTR ds:[esi]
  407c2a:	fsub   QWORD PTR [ebp-0x6f363836]
  407c30:	mov    WORD PTR [edi],?
  407c32:	fist   WORD PTR [esi+0x15]
  407c35:	sbb    eax,0x9a9516c9
  407c3a:	mov    ?,WORD PTR [esi]
  407c3c:	xchg   ebp,eax
  407c3d:	add    ecx,ecx
  407c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c40:	cdq    
  407c41:	mov    al,ds:0x84f4aaf7
  407c46:	sub    al,0x10
  407c48:	and    dl,0x9b
  407c4b:	les    ecx,FWORD PTR [edx+0x50e83aab]
  407c51:	pop    edi
  407c52:	mov    dl,0x55
  407c54:	arpl   WORD PTR [edi+eiz*4+0x68],cx
  407c58:	in     ax,dx
  407c5a:	xchg   esi,eax
  407c5b:	fcmovb st,st(4)
  407c5d:	mov    ch,0x3c
  407c5f:	imul   ebp,DWORD PTR [ebp-0x38],0x523c394b
  407c66:	mov    eax,0xd9679f75
  407c6b:	test   DWORD PTR [edx+0x3673bd97],eax
  407c71:	push   edi
  407c72:	sti    
  407c73:	neg    BYTE PTR [edi-0x5db93f07]
  407c79:	retf   0xc1d1
  407c7c:	orps   xmm7,XMMWORD PTR [esi-0x17b4e12f]
  407c83:	xchg   esi,eax
  407c84:	dec    edi
  407c85:	(bad)  
  407c86:	out    dx,eax
  407c87:	push   eax
  407c88:	adc    al,0x2b
  407c8a:	xor    cl,BYTE PTR [ebx]
  407c8c:	xor    BYTE PTR [ebx+0xd17d7a8],ch
  407c92:	(bad)  
  407c93:	retf   0xff89
  407c96:	xchg   ecx,eax
  407c97:	daa    
  407c98:	lea    eax,[esi-0x5f]
  407c9b:	xchg   edx,eax
  407c9c:	xlat   BYTE PTR ds:[ebx]
  407c9d:	dec    ebx
  407c9e:	lahf   
  407c9f:	(bad)  
  407ca0:	pop    eax
  407ca1:	div    BYTE PTR [ebp+0x13d53222]
  407ca7:	ret    
  407ca8:	lods   al,BYTE PTR ds:[esi]
  407ca9:	or     eax,DWORD PTR [edx+0x2d27ab3f]
  407caf:	or     al,0xd
  407cb1:	mov    eax,0x24524d3f
  407cb6:	into   
  407cb7:	sub    BYTE PTR [eax],cl
  407cb9:	dec    eax
  407cba:	imul   esi,DWORD PTR [edi+ebx*2+0x1d],0x46
  407cbf:	call   0xf564:0xf9752ae7
  407cc6:	pop    es
  407cc7:	(bad)  
  407cc8:	imul   BYTE PTR [edx+0x47ba24d9]
  407cce:	ret    0xa2fd
  407cd1:	dec    ebx
  407cd2:	test   BYTE PTR [edx],dh
  407cd4:	stos   BYTE PTR es:[edi],al
  407cd5:	xor    al,0xfd
  407cd7:	ret    
  407cd8:	jnp    0x407d49
  407cda:	psllq  mm0,QWORD PTR [eax+esi*1]
  407cde:	and    esp,ebp
  407ce0:	pop    edx
  407ce1:	pop    edx
  407ce2:	lds    eax,FWORD PTR ds:0x66348646
  407ce8:	(bad)  
  407cea:	cld    
  407ceb:	pop    ss
  407cec:	jmp    FWORD PTR [ebx-0x5066568d]
  407cf2:	and    ch,BYTE PTR [ecx-0x57]
  407cf5:	loope  0x407cae
  407cf7:	mov    cl,0x71
  407cf9:	adc    eax,0x7b52bff
  407cfe:	(bad)  
  407cff:	sar    BYTE PTR [edi],cl
  407d01:	mov    cl,0x99
  407d03:	in     al,0xd7
  407d05:	js     0x407d57
  407d07:	outs   dx,BYTE PTR ds:[esi]
  407d08:	test   al,0xb1
  407d0a:	push   esp
  407d0b:	inc    ecx
  407d0c:	mov    edx,0x98e68dd1
  407d11:	call   0xcac:0xd085e9d5
  407d18:	adc    DWORD PTR ds:0xa9927944,esi
  407d1e:	pop    ss
  407d1f:	jg     0x407cac
  407d21:	pop    ds
  407d22:	adc    eax,0x5ebb8b3
  407d27:	stc    
  407d28:	iret   
  407d29:	jmp    0x4fc7:0x85c94473
  407d30:	setnp  BYTE PTR [ecx-0x3e55cc35]
  407d37:	mov    ch,0xc6
  407d39:	(bad)  
  407d3a:	popf   
  407d3b:	pop    ebx
  407d3c:	lods   eax,DWORD PTR ds:[esi]
  407d3d:	ds sub al,0x8e
  407d40:	xchg   ebp,eax
  407d41:	lock sbb DWORD PTR [ecx],eax
  407d44:	xchg   edx,eax
  407d45:	test   BYTE PTR [ebx-0x5fbaf933],ah
  407d4b:	retf   
  407d4c:	and    DWORD PTR [ecx],ecx
  407d4e:	inc    edi
  407d4f:	aad    0xb4
  407d51:	push   ebp
  407d52:	in     eax,0x50
  407d54:	pop    ss
  407d55:	mov    edx,0x80e42583
  407d5a:	in     al,0x51
  407d5c:	sub    bl,BYTE PTR [edi-0x69c7e93f]
  407d62:	mov    eax,0x1dfc2efa
  407d67:	enter  0x510b,0xb
  407d6b:	in     eax,0x1e
  407d6d:	mov    ah,BYTE PTR [eax-0x353728dc]
  407d73:	imul   ebx,ebx,0xffffffae
  407d76:	or     al,0x73
  407d78:	add    BYTE PTR [edi],cl
  407d7a:	mov    esi,0xe6ae8b55
  407d7f:	or     BYTE PTR ss:0x82efe4ce,ch
  407d86:	out    dx,eax
  407d87:	es mov edi,0x9145777c
  407d8d:	jnp    0x407d1f
  407d8f:	adc    bl,BYTE PTR [edx+0x28]
  407d92:	mov    edi,0xd59c6b44
  407d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d98:	jge    0x407db4
  407d9a:	xchg   ecx,eax
  407d9b:	fsub   QWORD PTR [eax+0x6a]
  407d9e:	adc    DWORD PTR [ebx-0x72567c29],esp
  407da4:	sbb    DWORD PTR cs:[esi],edx
  407da7:	lods   eax,DWORD PTR ds:[esi]
  407da8:	push   esi
  407da9:	and    DWORD PTR [edi+0x4c45d949],esi
  407daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407db0:	js     0x407dad
  407db2:	xchg   edi,eax
  407db3:	popa   
  407db4:	cmp    al,0xd
  407db6:	jno    0x407d3a
  407db8:	fstp   st(2)
  407dba:	xchg   esp,eax
  407dbb:	mov    ah,BYTE PTR [ebx+0x4b]
  407dbe:	cmp    al,0x9c
  407dc0:	in     al,0x8
  407dc2:	les    ebx,FWORD PTR [edi+0x6fa07f68]
  407dc8:	mov    edx,esi
  407dca:	xchg   ecx,eax
  407dcb:	test   eax,0x53b675d9
  407dd0:	aas    
  407dd1:	mov    cl,0xd5
  407dd3:	test   eax,0xe2ed8e07
  407dd8:	and    BYTE PTR [ecx+0x61],dh
  407ddb:	ja     0x407dfd
  407ddd:	mov    edi,ecx
  407ddf:	cmp    ebp,esp
  407de1:	jle    0x407db1
  407de3:	jle    0x407d66
  407de5:	cwde   
  407de6:	pop    ecx
  407de7:	and    al,0xda
  407de9:	(bad)  
  407dea:	pop    esp
  407deb:	fild   DWORD PTR [ebp+0x44e6e91a]
  407df1:	retf   
  407df2:	lods   eax,DWORD PTR ds:[esi]
  407df3:	pop    ebp
  407df4:	call   0xf685:0xaced4cfc
  407dfb:	test   al,0x4
  407dfd:	jg     0x407e69
  407dff:	and    eax,ebx
  407e01:	or     DWORD PTR [ebp-0x1012f4dd],ebp
  407e07:	add    eax,0x5d972ef1
  407e0c:	xchg   ebp,eax
  407e0d:	in     eax,dx
  407e0e:	mov    ah,0x7d
  407e10:	scas   al,BYTE PTR es:[edi]
  407e11:	and    eax,DWORD PTR [eax-0x6802504a]
  407e17:	xchg   ebx,eax
  407e18:	or     ebx,DWORD PTR [ebx-0x60]
  407e1b:	repnz retf 0x982c
  407e1f:	mov    esi,0x4919ebdc
  407e24:	out    dx,eax
  407e25:	mov    ecx,0x2376a646
  407e2a:	push   cs
  407e2b:	inc    edx
  407e2c:	out    0xe6,al
  407e2e:	lods   eax,DWORD PTR ds:[esi]
  407e2f:	into   
  407e30:	or     ah,al
  407e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e33:	outs   dx,DWORD PTR ds:[esi]
  407e34:	popa   
  407e35:	int3   
  407e36:	call   0x9ca82a7d
  407e3b:	and    DWORD PTR [edx],edx
  407e3d:	inc    eax
  407e3e:	(bad)  
  407e3f:	cmc    
  407e40:	inc    ebx
  407e41:	sbb    cl,bl
  407e43:	inc    DWORD PTR [eax]
  407e45:	cdq    
  407e46:	popf   
  407e47:	retf   
  407e48:	mov    esi,0x5b36c79c
  407e4d:	in     al,0xb1
  407e4f:	xlat   BYTE PTR ds:[ebx]
  407e50:	std    
  407e51:	sbb    eax,0xe6695f0b
  407e56:	popa   
  407e57:	push   0x3af1326c
  407e5c:	scas   al,BYTE PTR es:[edi]
  407e5d:	push   esi
  407e5e:	sbb    eax,0xe5246bc5
  407e63:	imul   edx,DWORD PTR ds:0x8a6d3d41,0xa6d70963
  407e6d:	or     al,0xf3
  407e6f:	(bad)  
  407e71:	clc    
  407e72:	jg     0x407e8b
  407e74:	js     0x407ef4
  407e76:	pop    DWORD PTR [ecx+0x17]
  407e79:	into   
  407e7a:	arpl   bx,dx
  407e7c:	icebp  
  407e7d:	loope  0x407e40
  407e7f:	and    al,0xc
  407e81:	xchg   esp,eax
  407e82:	or     al,0x7d
  407e84:	loop   0x407e6a
  407e86:	sub    DWORD PTR [edi],ebp
  407e88:	dec    esi
  407e89:	xor    eax,0x410e1749
  407e8e:	jno    0x407e66
  407e90:	and    dl,0x48
  407e93:	std    
  407e94:	sbb    ebx,DWORD PTR [edi+eax*1-0x57]
  407e98:	aad    0xbc
  407e9a:	add    BYTE PTR ds:0x99d30448,cl
  407ea0:	(bad)  
  407ea1:	jmp    0x43348c05
  407ea6:	mov    ?,WORD PTR [ecx-0x17]
  407ea9:	jae    0x407f20
  407eab:	dec    esp
  407eac:	aad    0x9
  407eae:	fcom   QWORD PTR [eax]
  407eb0:	add    eax,0xb49959de
  407eb5:	inc    ecx
  407eb6:	sub    BYTE PTR [ecx],0x9
  407eb9:	clc    
  407eba:	inc    ebp
  407ebb:	inc    ebx
  407ebc:	(bad)  
  407ebd:	(bad)  
  407ebe:	cmp    al,0x2b
  407ec0:	mov    eax,ds:0xf8d9e40b
  407ec5:	adc    DWORD PTR [ecx],ebp
  407ec7:	fidiv  DWORD PTR [ebx]
  407ec9:	sub    ecx,DWORD PTR [eax-0x7]
  407ecc:	push   ebx
  407ecd:	dec    edx
  407ece:	lods   eax,DWORD PTR ds:[esi]
  407ecf:	jge    0x407ece
  407ed1:	mov    eax,ds:0xa9024143
  407ed6:	inc    ebx
  407ed7:	loop   0x407ef0
  407ed9:	xor    dh,bl
  407edb:	fild   WORD PTR [edx+0x20]
  407ede:	jp     0x407f2a
  407ee0:	push   esp
  407ee1:	pop    eax
  407ee2:	sub    BYTE PTR [edi+esi*4],cl
  407ee5:	sub    eax,0x4184e52b
  407eea:	pop    ecx
  407eeb:	je     0x407f1d
  407eed:	pop    esp
  407eee:	mov    ch,BYTE PTR [eax+0x45]
  407ef1:	or     ch,ah
  407ef3:	xchg   edi,eax
  407ef4:	mov    BYTE PTR [ebx],al
  407ef6:	jne    0x407ec6
  407ef8:	jmp    0x52d:0xd86f7e5c
  407eff:	push   ds
  407f00:	repz push ss
  407f02:	sbb    DWORD PTR [edx+0x7d6d20c],esi
  407f08:	sub    BYTE PTR [ecx-0x9],ah
  407f0b:	fist   DWORD PTR [edi]
  407f0d:	fwait
  407f0e:	inc    edi
  407f0f:	mov    ds:0x805e894a,eax
  407f14:	dec    ebx
  407f15:	out    0x4f,eax
  407f17:	mov    ah,BYTE PTR [esi+eiz*8+0xa]
  407f1b:	dec    ebp
  407f1c:	ins    BYTE PTR es:[edi],dx
  407f1d:	lods   al,BYTE PTR ds:[esi]
  407f1e:	repnz stos BYTE PTR es:[edi],al
  407f20:	push   edx
  407f21:	xchg   ebx,eax
  407f22:	stos   DWORD PTR es:[edi],eax
  407f23:	push   ebp
  407f24:	out    0x2d,al
  407f26:	push   es
  407f27:	xor    ebp,ecx
  407f29:	inc    esi
  407f2a:	mov    dh,0xbc
  407f2c:	lods   eax,DWORD PTR ds:[esi]
  407f2d:	ins    BYTE PTR es:[edi],dx
  407f2e:	mov    dl,0x5
  407f30:	xchg   esp,eax
  407f31:	jnp    0x407f5d
  407f33:	add    DWORD PTR [eax],esp
  407f35:	inc    edx
  407f36:	lock mov al,ds:0xb4f0a786
  407f3c:	mov    bh,0xef
  407f3e:	pop    eax
  407f3f:	jbe    0x407ef9
  407f41:	out    0x93,eax
  407f43:	jnp    0x407f18
  407f45:	jbe    0x407f39
  407f47:	out    dx,eax
  407f48:	push   es
  407f49:	repz adc bh,BYTE PTR ss:[ebx+0x5c]
  407f4e:	fld    QWORD PTR [eax+0x2ea9f7ba]
  407f54:	sti    
  407f55:	xchg   edi,eax
  407f56:	and    eax,0xec90e13c
  407f5b:	shl    DWORD PTR [ebx-0x241578b8],cl
  407f61:	lea    esi,[edx+0x3b]
  407f64:	jae    0x407fc8
  407f66:	mov    WORD PTR [eax+ecx*1],?
  407f69:	xchg   ecx,eax
  407f6a:	dec    eax
  407f6b:	dec    ebp
  407f6c:	(bad)  
  407f6d:	and    al,0x4
  407f6f:	retf   
  407f70:	loope  0x407fb4
  407f72:	xchg   edx,eax
  407f73:	push   cs
  407f74:	out    0x19,eax
  407f76:	adc    edx,DWORD PTR [eax+eiz*8+0x3ed41c4d]
  407f7d:	mov    bl,0xa6
  407f7f:	sahf   
  407f80:	je     0x407f80
  407f82:	dec    DWORD PTR [esi-0x2e]
  407f85:	into   
  407f86:	add    DWORD PTR [ecx],ebp
  407f88:	out    0x96,al
  407f8a:	xor    eax,0x38a3d33e
  407f8f:	cmp    dl,dh
  407f91:	xor    ebp,edi
  407f93:	pop    ecx
  407f94:	sub    BYTE PTR [ecx+0xf],cl
  407f97:	mov    BYTE PTR [edi],bl
  407f99:	aas    
  407f9a:	aaa    
  407f9b:	daa    
  407f9c:	xchg   esp,eax
  407f9d:	je     0x407f32
  407f9f:	jecxz  0x407fa7
  407fa1:	iret   
  407fa2:	pop    esi
  407fa3:	dec    esi
  407fa4:	out    0x49,al
  407fa6:	xchg   ebp,eax
  407fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fa8:	and    DWORD PTR [ecx],eax
  407faa:	pop    edi
  407fab:	(bad)
  407fb0:	sbb    BYTE PTR [edi-0x2b],dh
  407fb3:	cmp    DWORD PTR [esi-0x748bbd7],eax
  407fb9:	xchg   DWORD PTR [ebx+0x5904c3db],esi
  407fbf:	adc    dl,BYTE PTR [eax]
  407fc1:	fdiv   QWORD PTR [eax+0x1b]
  407fc4:	and    al,0xe3
  407fc6:	aam    0x13
  407fc8:	pop    ss
  407fc9:	lds    esp,FWORD PTR [ebx-0x20c2de3b]
  407fcf:	inc    eax
  407fd0:	test   eax,0x98b1ca0e
  407fd5:	pop    edi
  407fd6:	sti    
  407fd7:	pop    edi
  407fd8:	inc    eax
  407fd9:	stc    
  407fda:	std    
  407fdb:	dec    esp
  407fdc:	shl    ecx,1
  407fde:	inc    esi
  407fdf:	xor    DWORD PTR [edi+0x41],ecx
  407fe2:	jb     0x407f9c
  407fe4:	jmp    0x408002
  407fe6:	mov    ebp,0xa1f2ae99
  407feb:	mov    bh,0x32
  407fed:	mov    ecx,DWORD PTR [eax+ecx*8+0x55]
  407ff1:	sbb    ebx,DWORD PTR [edi]
  407ff3:	push   ebx
  407ff4:	sub    eax,0xcf4f0121
  407ff9:	dec    ebx
  407ffa:	jg     0x40806c
  407ffc:	xor    BYTE PTR [esi],cl
  407ffe:	popf   
  407fff:	add    DWORD PTR [eax-0x1a],eax
  408002:	repz or edi,DWORD PTR [esi+0x53]
  408006:	std    
  408007:	push   ecx
  408008:	jmp    0x407f9f
  40800a:	mov    esi,0xf69811c4
  40800f:	es popa 
  408011:	sbb    al,0xa8
  408013:	and    DWORD PTR [edi],edx
  408015:	add    al,0xc4
  408017:	ror    BYTE PTR [ebp+0x12],1
  40801a:	mov    ebp,0x937ca523
  40801f:	cmp    bl,bl
  408021:	sar    DWORD PTR [edi+0x45],0x28
  408025:	push   edi
  408026:	ins    DWORD PTR es:[edi],dx
  408027:	pop    ds
  408028:	jl     0x407fc0
  40802a:	je     0x40808b
  40802c:	xor    edi,DWORD PTR [ecx+ecx*4-0x1]
  408030:	fistp  WORD PTR [edx+0x3ec2c9f8]
  408036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408037:	pop    ecx
  408038:	jno    0x408005
  40803a:	adc    eax,0xfbd71820
  40803f:	inc    ebp
  408040:	stc    
  408041:	iret   
  408042:	jmp    0xa7bf9a53
  408047:	cmp    al,0xbf
  408049:	xlat   BYTE PTR ds:[ebx]
  40804a:	jg     0x408096
  40804c:	inc    esi
  40804d:	in     al,0xd5
  40804f:	mov    ah,0x99
  408051:	mov    ds:0x4f6efe20,eax
  408056:	je     0x408018
  408058:	pop    ebp
  408059:	das    
  40805a:	int    0x37
  40805c:	ror    BYTE PTR [ebp+0x3f],0xb0
  408060:	cld    
  408061:	shr    DWORD PTR [edi-0x60fa1f76],0x25
  408068:	xor    al,0x68
  40806a:	pop    edx
  40806b:	cli    
  40806c:	and    BYTE PTR ds:0x410f6bf,0xcb
  408073:	fwait
  408074:	jae    0x40803d
  408076:	popa   
  408077:	int3   
  408078:	das    
  408079:	mov    edx,0x558a90f4
  40807e:	fcmovnb st,st(0)
  408080:	cmp    ah,dl
  408082:	loop   0x4080ca
  408084:	inc    ebx
  408085:	scas   al,BYTE PTR es:[edi]
  408086:	push   ebx
  408087:	dec    eax
  408088:	sub    eax,0xcbcefb77
  40808d:	mov    ebx,0x2f940179
  408092:	idiv   BYTE PTR [edx+0x47e47917]
  408098:	push   esi
  408099:	jecxz  0x408041
  40809b:	retf   
  40809c:	sbb    bh,0x38
  40809f:	out    dx,eax
  4080a0:	test   al,0xae
  4080a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080a3:	push   cs
  4080a4:	sbb    al,0xaf
  4080a6:	push   ds
  4080a7:	mov    eax,0xb436a6bd
  4080ac:	xchg   ebx,eax
  4080ad:	jge    0x408050
  4080af:	and    al,0x6c
  4080b1:	jno    0x40812a
  4080b3:	ror    BYTE PTR [edx-0x75],cl
  4080b6:	push   ebp
  4080b7:	int    0xf5
  4080b9:	ficomp DWORD PTR [edi]
  4080bb:	int3   
  4080bc:	inc    edi
  4080bd:	fs xor al,cl
  4080c0:	add    edx,DWORD PTR [ebx+ebx*1+0xbfa2532]
  4080c7:	arpl   WORD PTR [esi+0x18],cx
  4080ca:	daa    
  4080cb:	xor    eax,0x3de2fb0c
  4080d0:	imul   ecx,DWORD PTR [edi-0x5eabf779],0x65855ebd
  4080da:	inc    edx
  4080db:	pop    ss
  4080dc:	rol    DWORD PTR [edi-0x74],0x2d
  4080e0:	and    BYTE PTR [ebx],bl
  4080e2:	inc    edx
  4080e3:	pushf  
  4080e4:	mov    ?,WORD PTR [edx+0x37]
  4080e7:	stos   BYTE PTR es:[edi],al
  4080e8:	je     0x40810b
  4080ea:	lock mov dl,0x1
  4080ed:	jns    0x40812c
  4080ef:	in     eax,dx
  4080f0:	xor    eax,0xe53e8184
  4080f5:	test   al,0x8c
  4080f7:	lods   eax,DWORD PTR ds:[esi]
  4080f8:	inc    ecx
  4080f9:	ss mov al,0x67
  4080fc:	test   BYTE PTR [edi],dh
  4080fe:	pop    edi
  4080ff:	sar    BYTE PTR [ecx+0x40e97174],0x9f
  408106:	mov    DWORD PTR [ecx],esp
  408108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408109:	push   ss
  40810a:	jecxz  0x4080ad
  40810c:	lods   al,BYTE PTR ds:[esi]
  40810d:	mov    BYTE PTR ds:0x2fa941b4,ah
  408113:	mov    ah,0x49
  408115:	and    DWORD PTR ds:0xbe721623,0xfffffff3
  40811c:	aad    0x6f
  40811e:	(bad)  
  40811f:	jae    0x40814b
  408121:	jb     0x4080e5
  408123:	mov    al,ds:0xbc678464
  408128:	(bad)  
  408129:	out    0xda,eax
  40812b:	cli    
  40812c:	mov    al,ds:0x9e18b36a
  408131:	bound  ebx,QWORD PTR [ebx-0x3f3fab8]
  408137:	sahf   
  408138:	adc    BYTE PTR [edi+0x23d1cf20],al
  40813e:	leave  
  40813f:	xchg   edi,eax
  408140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408141:	loopne 0x40819a
  408143:	mov    esi,DWORD PTR [ecx]
  408145:	inc    edi
  408146:	fmul   QWORD PTR [edx]
  408148:	mov    ds:0x3156e8e6,eax
  40814d:	mov    al,0xc9
  40814f:	or     edx,edx
  408151:	inc    ebp
  408152:	dec    ebp
  408153:	dec    esi
  408154:	add    ch,BYTE PTR [ebx]
  408156:	jp     0x4080ef
  408158:	loop   0x4080ec
  40815a:	mov    BYTE PTR [edi+0x5d],ah
  40815d:	mov    eax,0x7ff4648
  408162:	inc    edi
  408163:	outs   dx,BYTE PTR ds:[esi]
  408164:	dec    BYTE PTR [edx+0x1fe5bf47]
  40816a:	(bad)  
  40816b:	pop    eax
  40816c:	and    eax,0x6ed890a9
  408171:	mov    ah,0x7
  408173:	aad    0x60
  408175:	cmp    al,0xb1
  408177:	mov    ebx,0x2558d5cf
  40817c:	xchg   edx,eax
  40817d:	sbb    al,0xd4
  40817f:	mul    ah
  408181:	fld    QWORD PTR [ebp+edx*8-0x38ed63a6]
  408188:	loop   0x4081cf
  40818a:	and    al,0x9c
  40818c:	pop    ebx
  40818d:	loopne 0x4081b9
  40818f:	and    cl,BYTE PTR ds:0xbb7a87bc
  408195:	adc    eax,0x4a602fbe
  40819a:	lock jnp 0x40811e
  40819d:	xchg   esp,eax
  40819e:	rcl    DWORD PTR [esi],1
  4081a0:	sbb    ebx,ebp
  4081a2:	mov    dl,0x55
  4081a4:	inc    edi
  4081a5:	push   0x5d
  4081a7:	imul   ecx,DWORD PTR [esi],0x5f
  4081aa:	repnz test eax,0x35c88c31
  4081b0:	test   al,0x95
  4081b2:	repz sub bh,BYTE PTR [ebx-0x2b1690f4]
  4081b9:	jg     0x408233
  4081bb:	lea    eax,[edi+0x5a]
  4081be:	test   DWORD PTR [ecx-0x179c6ec9],ebx
  4081c4:	in     al,0x5e
  4081c6:	pop    ds
  4081c7:	rol    dh,1
  4081c9:	jp     0x4081b2
  4081cb:	mov    edx,DWORD PTR [ecx+esi*8]
  4081ce:	push   edi
  4081cf:	adc    eax,0xe191e045
  4081d4:	sbb    BYTE PTR [ecx+0xcbfda30],ah
  4081da:	addr16 sahf 
  4081dc:	mov    bl,0xe0
  4081de:	jb     0x40819c
  4081e0:	lds    esp,FWORD PTR [ecx]
  4081e2:	mov    al,0xf4
  4081e4:	fimul  DWORD PTR gs:0x38884316
  4081eb:	leave  
  4081ec:	inc    esp
  4081ed:	fistp  QWORD PTR [edx]
  4081ef:	mov    ch,0xed
  4081f1:	inc    ebx
  4081f2:	push   ecx
  4081f3:	or     DWORD PTR [esi-0x5d],esp
  4081f6:	sub    DWORD PTR [edx],0x11d78ee
  4081fc:	int3   
  4081fd:	pop    edx
  4081fe:	(bad)  [edi]
  408200:	in     eax,0x88
  408202:	push   0x4938f93a
  408207:	int    0x78
  408209:	mov    BYTE PTR [edi+0x199ff789],dh
  40820f:	mov    ebx,edx
  408211:	das    
  408212:	test   eax,0x98e5a3a3
  408217:	(bad)  
  408218:	xor    BYTE PTR [ebx+0x2962c78d],bh
  40821e:	cmp    ecx,DWORD PTR [eax-0x5887d53b]
  408224:	div    BYTE PTR [ebx+0x50]
  408227:	and    ah,BYTE PTR [edx]
  408229:	shl    DWORD PTR [ebx+eax*1-0xa],cl
  40822d:	add    bh,BYTE PTR [ecx]
  40822f:	and    dl,BYTE PTR [ebx-0x48]
  408232:	xor    al,0x26
  408234:	cmp    ch,BYTE PTR [edi-0x504cb247]
  40823a:	push   es
  40823b:	into   
  40823c:	add    BYTE PTR [edx],dh
  40823e:	out    dx,al
  40823f:	aaa    
  408240:	dec    esi
  408241:	enter  0x73d3,0xc4
  408245:	int3   
  408246:	popa   
  408247:	mov    esi,edi
  408249:	je     0x408290
  40824b:	add    al,0x1d
  40824d:	icebp  
  40824e:	fwait
  40824f:	out    0x7e,al
  408251:	mov    WORD PTR [ecx-0x2ae422f8],es
  408257:	clc    
  408258:	mov    cl,BYTE PTR [eax]
  40825a:	stos   DWORD PTR es:[edi],eax
  40825b:	pop    ss
  40825c:	mov    BYTE PTR ds:0xd256f562,0x3f
  408263:	test   DWORD PTR [edx],ecx
  408265:	pop    edi
  408266:	ss test al,0xfa
  408269:	aas    
  40826a:	int    0x78
  40826c:	repz inc eax
  40826e:	fadd   st,st(3)
  408270:	div    BYTE PTR [eax]
  408272:	xor    ebx,ecx
  408274:	call   0x829b2041
  408279:	cmp    BYTE PTR [edi+0xc32727e],cl
  40827f:	or     bh,BYTE PTR [ecx]
  408281:	ja     0x40821a
  408283:	push   edi
  408284:	ret    0xb0e1
  408287:	test   al,0x22
  408289:	(bad)  
  40828a:	sub    DWORD PTR [ebx+0x455ac877],ebx
  408290:	cmp    al,ah
  408292:	out    dx,al
  408293:	push   0x8e1703e0
  408298:	das    
  408299:	sub    BYTE PTR [eax-0x75],0xae
  40829d:	dec    esi
  40829e:	out    dx,eax
  40829f:	retf   
  4082a0:	jns    0x4082cb
  4082a2:	or     DWORD PTR ds:0x255632e7,esi
  4082a8:	rcl    ch,1
  4082aa:	retf   
  4082ab:	fwait
  4082ac:	loop   0x4082ed
  4082ae:	jp     0x408270
  4082b0:	ins    BYTE PTR es:[edi],dx
  4082b1:	or     DWORD PTR es:[eax+0x4333eaf3],ebx
  4082b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082b9:	xchg   ebp,eax
  4082ba:	sahf   
  4082bb:	in     al,dx
  4082bc:	jle    0x408240
  4082be:	enter  0x6fb6,0x5a
  4082c2:	stos   DWORD PTR es:[edi],eax
  4082c3:	push   edi
  4082c4:	aas    
  4082c5:	ins    DWORD PTR es:[edi],dx
  4082c6:	push   es
  4082c7:	xor    eax,0xd651fd47
  4082cc:	inc    bh
  4082ce:	jno    0x40826a
  4082d0:	push   0x4a
  4082d2:	iret   
  4082d3:	adc    al,0x90
  4082d5:	dec    ebp
  4082d6:	mov    ss,WORD PTR [edx-0x5d50f4e2]
  4082dc:	lea    ebp,[eax+0x24d79e99]
  4082e2:	mov    BYTE PTR [edi+ebp*4],0x13
  4082e6:	push   edx
  4082e7:	pop    ebp
  4082e8:	mov    edx,0xb4321abe
  4082ed:	add    BYTE PTR [eax],0x11
  4082f0:	mov    DWORD PTR [ebp+edi*4+0x2b71beed],edi
  4082f7:	(bad)  
  4082f8:	jmp    0x4082dc
  4082fa:	mov    ds:0xa11adc0f,eax
  408300:	mov    al,ds:0x700a0473
  408305:	mov    cl,0x55
  408307:	xchg   ecx,eax
  408308:	ins    BYTE PTR es:[edi],dx
  408309:	daa    
  40830a:	aam    0x33
  40830c:	push   0x4e
  40830e:	push   edi
  40830f:	in     al,0x11
  408311:	cs test esi,0xbe24231
  408318:	std    
  408319:	dec    esp
  40831a:	gs jp  0x40839b
  40831d:	(bad)
  408320:	and    BYTE PTR [eax],0x32
  408323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408324:	jecxz  0x40831c
  408326:	test   al,0xc3
  408328:	pop    eax
  408329:	mov    edi,0x531733f6
  40832e:	xchg   ecx,eax
  40832f:	mov    al,0x98
  408331:	xor    eax,0x46ff6084
  408336:	mov    BYTE PTR [ebx-0x23],bh
  408339:	les    eax,FWORD PTR [ecx+ecx*8]
  40833c:	or     DWORD PTR [esi],ecx
  40833e:	setb   BYTE PTR cs:[eax]
  408342:	sbb    edi,DWORD PTR [eax]
  408344:	pop    esp
  408345:	call   0xbd8e4fe4
  40834a:	push   ss
  40834b:	inc    edx
  40834c:	loop   0x408395
  40834e:	rcr    BYTE PTR [eax-0x6f],cl
  408351:	push   ebp
  408352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408353:	and    ebp,ecx
  408355:	jmp    0x408349
  408357:	push   ecx
  408358:	or     DWORD PTR [eax-0x7bb28ecd],0x4b758a8e
  408362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408363:	xor    BYTE PTR [esi+0x24],ch
  408366:	mov    BYTE PTR [edi+0x76],al
  408369:	pop    esp
  40836a:	xchg   ecx,eax
  40836b:	sub    eax,0x58e91d7e
  408370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408371:	js     0x40830d
  408373:	sbb    esp,DWORD PTR [edx+0x3a]
  408376:	pop    edx
  408377:	adc    DWORD PTR [ebx+0x367577e],edx
  40837d:	cwde   
  40837e:	mov    edx,0xe59a65af
  408383:	or     DWORD PTR [ecx+0x47ad72ce],ebx
  408389:	jae    0x4083f4
  40838b:	scas   eax,DWORD PTR es:[edi]
  40838c:	scas   al,BYTE PTR es:[edi]
  40838d:	(bad)  
  40838f:	test   eax,0xc52480ff
  408394:	mov    ecx,0x11cbbaf
  408399:	xchg   edi,eax
  40839a:	or     BYTE PTR [edx+0x2c],dl
  40839d:	adc    DWORD PTR [edi],ecx
  40839f:	and    dh,BYTE PTR [eax]
  4083a1:	push   ds
  4083a2:	xchg   edi,eax
  4083a3:	push   es
  4083a4:	mov    ebp,0x9657ee85
  4083a9:	jmp    0x408403
  4083ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083ac:	dec    ecx
  4083ad:	jge    0x40840c
  4083af:	jno    0x408341
  4083b1:	adc    eax,0x8addbb24
  4083b6:	xor    DWORD PTR [edx+0x77],eax
  4083b9:	fidiv  DWORD PTR [ecx-0x65a56718]
  4083bf:	imul   ebx,DWORD PTR [eax+0x6a55a71e],0x4d
  4083c6:	mov    ah,0x9e
  4083c8:	and    DWORD PTR [eax],edi
  4083ca:	test   BYTE PTR [ebx+0x1b],bl
  4083cd:	cmc    
  4083ce:	out    dx,al
  4083cf:	repz dec eax
  4083d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083d2:	das    
  4083d3:	xlat   BYTE PTR ds:[ebx]
  4083d4:	sbb    al,0xea
  4083d6:	data16 (bad) 
  4083d9:	push   cs
  4083da:	push   cs
  4083db:	in     eax,0xff
  4083dd:	sbb    esp,DWORD PTR [esi+esi*1-0x34f3e761]
  4083e4:	mov    edx,0x716d69fb
  4083e9:	je     0x40846a
  4083eb:	sahf   
  4083ec:	or     BYTE PTR [edi+ebp*4-0x5d2709b8],bl
  4083f3:	lods   al,BYTE PTR ds:[esi]
  4083f4:	cs xor al,0xc1
  4083f7:	xchg   edi,eax
  4083f8:	(bad)  
  4083fa:	cmp    ch,cl
  4083fc:	sub    DWORD PTR [ebp-0x37f29d25],edx
  408402:	or     bl,BYTE PTR [eax]
  408404:	int3   
  408405:	lods   al,BYTE PTR ds:[esi]
  408406:	call   0x4339:0x5a90c2b1
  40840d:	fucomi st,st(5)
  40840f:	in     al,0xe6
  408411:	test   esi,esi
  408413:	test   eax,0x59c3130
  408418:	xchg   BYTE PTR [esi+0x29],ch
  40841b:	push   ss
  40841c:	addr16 cs push ss
  40841f:	loope  0x4083de
  408421:	js     0x408486
  408423:	sbb    edx,DWORD PTR [ebp+0x746008d3]
  408429:	or     DWORD PTR [ebp+0x4e],esi
  40842c:	jg     0x4083b4
  40842e:	sub    eax,0x6c28d14c
  408433:	mov    al,ds:0xb4728034
  408438:	addr16 jg 0x408498
  40843b:	mov    esp,0x84091b8d
  408440:	sbb    al,0xc8
  408442:	push   0x6c
  408444:	scas   al,BYTE PTR es:[edi]
  408445:	pop    esi
  408446:	push   edx
  408447:	sub    dl,BYTE PTR es:[esi-0x75]
  40844b:	push   cs
  40844c:	add    ecx,DWORD PTR [eax]
  40844e:	ficomp DWORD PTR [esi]
  408450:	and    BYTE PTR [ebx+0x6475d85b],0x95
  408457:	xor    eax,0xcb9e8b53
  40845c:	ficom  DWORD PTR [esi+0xf]
  40845f:	xchg   esp,eax
  408460:	and    DWORD PTR [esi+0x4],edi
  408463:	mov    esp,DWORD PTR [ecx-0x69115a93]
  408469:	xor    esi,eax
  40846b:	stc    
  40846c:	aas    
  40846d:	cmc    
  40846e:	sar    BYTE PTR [edi],cl
  408470:	xchg   BYTE PTR [eax],ch
  408472:	aad    0xcc
  408474:	enter  0xd700,0xe4
  408478:	dec    ebx
  408479:	scas   eax,DWORD PTR es:[edi]
  40847a:	out    dx,al
  40847b:	adc    al,0x5b
  40847d:	push   es
  40847e:	into   
  40847f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408480:	pop    ds
  408481:	push   edi
  408482:	jecxz  0x40844b
  408484:	xchg   edi,eax
  408485:	push   ecx
  408486:	sub    DWORD PTR [edi],0x45
  408489:	xchg   edi,eax
  40848a:	sub    eax,0x376d0a2e
  40848f:	inc    edi
  408490:	call   FWORD PTR [edi+ecx*1+0x67]
  408494:	xchg   ecx,eax
  408495:	fcmove st,st(7)
  408497:	pop    DWORD PTR [edx+0x177cecdb]
  40849d:	stos   BYTE PTR es:[edi],al
  40849e:	lahf   
  40849f:	mov    al,ds:0x7018b2b7
  4084a4:	dec    edx
  4084a5:	(bad)  
  4084a6:	jnp    0x408486
  4084a8:	call   0x6b7712d
  4084ad:	(bad)  
  4084ae:	in     eax,0x1d
  4084b0:	inc    ecx
  4084b1:	adc    al,cl
  4084b3:	lds    edx,FWORD PTR [ebx+0x31]
  4084b6:	mov    esi,?
  4084b8:	or     al,0xed
  4084ba:	mov    dh,0x39
  4084bc:	scas   al,BYTE PTR es:[edi]
  4084bd:	adc    al,0xf9
  4084bf:	sbb    DWORD PTR [edi],eax
  4084c1:	dec    esp
  4084c2:	shl    BYTE PTR [ebx-0x5b],0xe9
  4084c6:	daa    
  4084c7:	sub    eax,DWORD PTR [eax]
  4084c9:	jle    0x4084cf
  4084cb:	cmc    
  4084cc:	jg     0x408503
  4084ce:	enter  0xa2de,0xb3
  4084d2:	es pop di
  4084d5:	(bad)  
  4084d6:	push   edx
  4084d7:	jmp    0x66cf:0xafb99e9e
  4084de:	int    0xe5
  4084e0:	mov    bh,0x0
  4084e2:	pop    ebx
  4084e3:	(bad)  
  4084e4:	bound  esi,QWORD PTR [eax]
  4084e6:	cs lahf 
  4084e8:	mov    WORD PTR [ecx+0x599be63a],gs
  4084ee:	aam    0x7
  4084f0:	ret    0x89f9
  4084f3:	fcomp  st(7)
  4084f5:	shr    edi,1
  4084f7:	pop    ss
  4084f8:	mov    ds:0x1ed29a16,eax
  4084fd:	add    bh,dh
  4084ff:	pop    ebp
  408500:	adc    eax,0x8fde1182
  408505:	test   al,0x56
  408507:	add    al,BYTE PTR [edi-0x6764d944]
  40850d:	pushf  
  40850e:	xchg   ecx,eax
  40850f:	mov    edi,0x642fb507
  408514:	(bad)  
  408515:	cs mov edi,0x7e90eaa7
  40851b:	(bad)  
  40851c:	in     al,dx
  40851d:	jno    0x408503
  40851f:	iret   
  408520:	adc    BYTE PTR [ecx-0x27f764f6],0x72
  408527:	pop    ebp
  408528:	mov    ?,edi
  40852a:	inc    esi
  40852b:	js     0x4084dd
  40852d:	(bad)  
  40852e:	or     BYTE PTR [ebx],ah
  408530:	dec    ebx
  408531:	pusha  
  408532:	pop    ebp
  408533:	adc    DWORD PTR [edx-0x77],ebx
  408536:	sub    eax,0x30cb5bf1
  40853b:	mov    DWORD PTR [eax-0x1a6ff21d],ebx
  408541:	push   ebp
  408542:	inc    ebp
  408543:	add    eax,0x32910bef
  408548:	mov    ebx,0xcd4009d7
  40854d:	add    BYTE PTR [eax],cl
  40854f:	sbb    al,0xa7
  408551:	(bad)  
  408552:	cmp    BYTE PTR [edx],ch
  408554:	adc    eax,0x6d18d7f1
  408559:	sahf   
  40855a:	dec    esi
  40855b:	int    0x68
  40855d:	ficom  DWORD PTR [esi+edi*8+0x1e]
  408561:	and    al,0x7e
  408563:	adc    eax,0xe2683926
  408568:	pop    ebx
  408569:	bound  eax,QWORD PTR [ebx-0x1760bcab]
  40856f:	fwait
  408570:	mov    edi,0xf1655637
  408575:	(bad)  
  408576:	jo     0x408592
  408578:	fidiv  DWORD PTR [edx]
  40857a:	repz out dx,al
  40857c:	lock fidiv DWORD PTR [esp+edi*4+0x69]
  408581:	pop    fs
  408583:	daa    
  408584:	mov    bl,0xd
  408586:	inc    ecx
  408587:	or     bl,BYTE PTR ds:0x818dba96
  40858d:	xchg   esp,eax
  40858e:	and    al,BYTE PTR [esp+ebp*4+0x78142d52]
  408595:	ror    ebx,0xac
  408598:	(bad)  
  408599:	mov    DWORD PTR [ebp+0x2],0x264293b9
  4085a0:	pop    edx
  4085a1:	lea    esp,[ecx]
  4085a3:	mov    ch,0x16
  4085a5:	pop    DWORD PTR cs:[ebx]
  4085a8:	aas    
  4085a9:	aaa    
  4085aa:	(bad)  
  4085ab:	cli    
  4085ac:	xchg   edi,eax
  4085ad:	jle    0x40861e
  4085af:	push   edx
  4085b0:	add    bl,BYTE PTR [ebx]
  4085b2:	ins    DWORD PTR es:[edi],dx
  4085b3:	adc    eax,0xd976ec0b
  4085b8:	push   ebp
  4085b9:	bound  ebp,QWORD PTR [edi+0x3a]
  4085bc:	jnp    0x40856d
  4085be:	adc    eax,0xb7bee5f6
  4085c3:	out    dx,eax
  4085c4:	jge    0x408572
  4085c6:	mov    ah,0x6
  4085c8:	iret   
  4085c9:	mov    edx,0xdaaeaec0
  4085ce:	cmp    DWORD PTR [ebp-0x4d3b2ccd],0xffffffe5
  4085d5:	sbb    edx,DWORD PTR [ebx-0x30]
  4085d8:	cmc    
  4085d9:	ss int 0x75
  4085dc:	adc    dl,dh
  4085de:	pop    edi
  4085df:	sbb    eax,0x444c0ace
  4085e4:	out    0x32,al
  4085e6:	pop    ds
  4085e7:	sbb    al,0x49
  4085e9:	iret   
  4085ea:	jecxz  0x408578
  4085ec:	jmp    0x47bb:0x87675e7
  4085f3:	add    eax,0x3175d326
  4085f8:	mov    ebx,0x9dab8cfb
  4085fd:	xor    ecx,DWORD PTR [esi]
  4085ff:	push   ss
  408600:	hlt    
  408601:	xor    bl,dl
  408603:	outs   dx,BYTE PTR ds:[esi]
  408604:	lods   al,BYTE PTR ds:[esi]
  408605:	adc    BYTE PTR [edi],dh
  408607:	mov    WORD PTR [edx],fs
  408609:	jae    0x408616
  40860b:	adc    bl,BYTE PTR [ebx+ebx*8+0x6c]
  40860f:	dec    ebx
  408610:	inc    eax
  408611:	mov    cl,0xfd
  408613:	mov    esi,0x429fd62f
  408618:	or     eax,0xd9fc89ae
  40861d:	fs push ax
  408620:	xor    eax,DWORD PTR [edx+0x19488123]
  408626:	aam    0x71
  408628:	push   ss
  408629:	loope  0x40867b
  40862b:	lods   al,BYTE PTR ds:[esi]
  40862c:	xchg   esi,eax
  40862d:	imul   eax,DWORD PTR [esi+0x7fff01f8],0x459ae83f
  408637:	adc    eax,0xd54cc1d
  40863c:	call   0x608b:0xe1980bde
  408643:	mov    dl,0x29
  408645:	test   al,0xd3
  408647:	nop
  408648:	adc    al,0xb2
  40864a:	jp     0x4085d0
  40864c:	or     ch,BYTE PTR ds:0x25adf297
  408652:	mov    bl,0x88
  408654:	addr16 fucomi st,st(0)
  408657:	push   ds
  408658:	add    al,0xd6
  40865a:	mov    esp,0xb0159831
  40865f:	fs pop ebx
  408661:	pop    es
  408662:	lock std 
  408664:	into   
  408665:	jge    0x408686
  408667:	jbe    0x4086ce
  408669:	repnz fimul WORD PTR [esi-0x3f]
  40866d:	and    ecx,eax
  40866f:	dec    eax
  408670:	cmc    
  408671:	cmp    esp,ecx
  408673:	cmp    dh,BYTE PTR [ebx-0x2118fb7b]
  408679:	cmp    DWORD PTR [edi],0x46
  40867c:	stc    
  40867d:	pusha  
  40867e:	mov    eax,0xb007dc12
  408683:	(bad)  
  408684:	pop    eax
  408685:	jle    0x40869e
  408687:	(bad)  
  408688:	pop    ecx
  408689:	repz jmp 0xef9e553c
  40868f:	mov    WORD PTR [edx+0x3399e11e],ss
  408695:	or     al,0xe9
  408697:	mov    cl,BYTE PTR ds:0x530a42d3
  40869d:	dec    edx
  40869e:	or     eax,0x11a0825d
  4086a3:	jmp    0xcad06320
  4086a8:	adc    ch,BYTE PTR [esi-0x60]
  4086ab:	add    al,0x99
  4086ad:	mov    eax,ds:0xc1f37907
  4086b2:	push   ecx
  4086b3:	addr16 mov eax,ds:0x7888
  4086b7:	imul   edi,DWORD PTR [esi-0x53],0xffffffe2
  4086bb:	mov    ds:0x3e26a830,al
  4086c0:	xor    DWORD PTR [ecx+0x5af33a50],edi
  4086c6:	aad    0x49
  4086c8:	jecxz  0x408677
  4086ca:	mov    ds:0x453b1cc8,eax
  4086cf:	or     bh,BYTE PTR [edi+eiz*4]
  4086d2:	out    dx,al
  4086d3:	repz fdivr st,st(4)
  4086d6:	add    dl,BYTE PTR [ecx-0x4fb194ae]
  4086dc:	xor    esp,DWORD PTR [esi-0x4c0c0b28]
  4086e2:	adc    edx,DWORD PTR [ebx+0x17]
  4086e5:	jge    0x4086fa
  4086e7:	daa    
  4086e8:	retf   
  4086e9:	aas    
  4086ea:	fdecstp 
  4086ec:	sub    esi,DWORD PTR [ecx-0x73]
  4086ef:	push   esi
  4086f0:	xor    DWORD PTR [ebx+eiz*1],ebx
  4086f3:	or     DWORD PTR [ebp-0x6e],ebp
  4086f6:	mov    dl,0x70
  4086f8:	mov    edi,0xe23e3043
  4086fd:	(bad)
  408700:	sub    BYTE PTR [ecx+0x7f355ed9],bl
  408706:	sbb    dl,dh
  408708:	sub    cl,BYTE PTR [eax+0x1b]
  40870b:	add    ch,BYTE PTR [esi-0x1e508c2f]
  408711:	leave  
  408712:	imul   esi,ebx,0x80bb68c4
  408718:	jmp    FWORD PTR [esp+esi*4-0x3a32d149]
  40871f:	push   esi
  408720:	pop    edx
  408721:	(bad)  
  408722:	mov    ah,0x9c
  408725:	int    0x2b
  408727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408728:	xchg   ebp,eax
  408729:	push   0xea1d46e1
  40872e:	clc    
  40872f:	jmp    0x4086e3
  408731:	mov    dl,0xc8
  408733:	add    eax,edi
  408735:	xor    eax,0xc10029f5
  40873a:	xchg   edx,eax
  40873b:	in     al,dx
  40873c:	ins    DWORD PTR es:[edi],dx
  40873d:	pop    edi
  40873e:	mov    dh,0xc
  408740:	hlt    
  408741:	dec    esi
  408742:	and    eax,0x6dc84ac6
  408747:	shr    BYTE PTR [esi-0x4d],1
  40874a:	ja     0x408715
  40874c:	addr16 dec edi
  40874e:	in     al,0x25
  408750:	imul   esp,DWORD PTR ds:0x499658b3,0x7b9c69f7
  40875a:	sbb    al,0x57
  40875c:	pop    edi
  40875d:	sub    DWORD PTR [edx-0x3c],esp
  408760:	add    edx,DWORD PTR [ebp+0x63]
  408763:	ja     0x40879b
  408765:	cmc    
  408766:	mov    BYTE PTR [ecx-0x4],bl
  408769:	pop    ss
  40876a:	imul   edx,DWORD PTR [edi+0x49],0xf33fcb09
  408771:	xchg   esi,eax
  408772:	mov    al,ds:0xadf561dd
  408777:	jnp    0x40876b
  408779:	pop    edx
  40877a:	xchg   BYTE PTR [eax+0x45339c06],ch
  408780:	xchg   edi,eax
  408781:	and    al,0x73
  408783:	mov    esp,0x3939579c
  408788:	mov    cl,0xa2
  40878a:	clc    
  40878b:	loop   0x408805
  40878d:	sub    DWORD PTR [esi+0x15ee230],ebx
  408793:	inc    edx
  408794:	(bad)  
  408795:	add    BYTE PTR [ecx],dl
  408797:	inc    ecx
  408798:	aad    0xaf
  40879a:	push   0x2c
  40879c:	pop    ds
  40879d:	jmp    0x9159eed9
  4087a2:	scas   al,BYTE PTR es:[edi]
  4087a3:	dec    eax
  4087a4:	ins    DWORD PTR es:[edi],dx
  4087a5:	popa   
  4087a6:	or     edx,DWORD PTR [edx-0x36]
  4087a9:	mov    esi,0x799058b3
  4087ae:	dec    ebp
  4087af:	sbb    DWORD PTR [edx+0x63383126],ebp
  4087b5:	aaa    
  4087b6:	jmp    0x18f4:0x410ea095
  4087bd:	mov    DWORD PTR [ebp+0x631501e5],esp
  4087c3:	xor    DWORD PTR [ecx],0x9219602
  4087c9:	int3   
  4087ca:	inc    ecx
  4087cb:	xchg   DWORD PTR [esi-0x282ca39d],edi
  4087d1:	inc    eax
  4087d2:	inc    ecx
  4087d3:	loopne 0x4087c7
  4087d5:	pop    ds
  4087d6:	push   edx
  4087d7:	bound  eax,QWORD PTR ds:0x2fa3c550
  4087dd:	fld    DWORD PTR [esi+eiz*1+0x24]
  4087e1:	xor    al,ch
  4087e3:	enter  0xdfd2,0xc4
  4087e7:	popa   
  4087e8:	hlt    
  4087e9:	jge    0x4087a7
  4087eb:	lahf   
  4087ec:	neg    BYTE PTR [edi+0x762e5393]
  4087f2:	pop    esp
  4087f3:	dec    edx
  4087f4:	icebp  
  4087f5:	fxch   st(5)
  4087f7:	lock jge 0x4087e5
  4087fa:	clc    
  4087fb:	mov    ds:0x87451f22,eax
  408800:	into   
  408801:	nop
  408802:	add    eax,0x7e95967f
  408807:	imul   esi,edx,0x34b877d9
  40880d:	das    
  40880e:	(bad)
  408812:	(bad)  
  408813:	lahf   
  408814:	push   ebx
  408815:	pop    ss
  408816:	in     eax,0x8a
  408818:	adc    eax,0x809740d1
  40881d:	mov    cl,0x11
  40881f:	js     0x4087a3
  408821:	(bad)  
  408822:	or     eax,0x10749c0e
  408827:	ja     0x4087f5
  408829:	ins    DWORD PTR es:[edi],dx
  40882a:	jne    0x40883e
  40882c:	add    al,0xe8
  40882e:	xchg   ebp,eax
  40882f:	push   ebp
  408830:	jp     0x408844
  408832:	jno    0x40885c
  408834:	pop    ss
  408835:	sti    
  408836:	push   cs
  408837:	dec    edi
  408838:	pop    DWORD PTR [eax+0x3c]
  40883b:	push   ecx
  40883c:	cld    
  40883d:	dec    ebx
  40883e:	lea    ebp,[edi-0x27]
  408841:	arpl   WORD PTR [edx],cx
  408843:	ds ret 
  408845:	dec    ecx
  408846:	and    DWORD PTR [esi-0x2889cc1c],edi
  40884c:	xor    BYTE PTR [ecx-0x1c55432],bl
  408852:	out    0x17,al
  408854:	push   ss
  408855:	js     0x40884a
  408857:	inc    edx
  408858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408859:	push   0x4e
  40885b:	dec    ebx
  40885c:	jp     0x4087ee
  40885e:	jno    0x408858
  408860:	mov    BYTE PTR [ebx+eax*4+0x71],cl
  408864:	add    DWORD PTR [esi],eax
  408866:	sub    BYTE PTR [ecx],0xe1
  408869:	and    BYTE PTR [ebp+0x1c6abc81],dl
  40886f:	mov    bh,0x6
  408871:	ret    0xd0e4
  408874:	aaa    
  408875:	in     eax,dx
  408876:	jg     0x4088e2
  408878:	add    al,0x78
  40887a:	aam    0xed
  40887c:	(bad)  
  40887d:	mov    eax,0x6712bf15
  408882:	xchg   esp,eax
  408883:	hlt    
  408884:	push   ecx
  408885:	cmp    dh,BYTE PTR [edx]
  408887:	cld    
  408888:	enter  0x67f9,0x85
  40888c:	jns    0x408847
  40888e:	ins    DWORD PTR es:[edi],dx
  40888f:	sbb    BYTE PTR [esi],ch
  408891:	push   esp
  408892:	aaa    
  408893:	imul   esp,DWORD PTR [eax+0x529c028a],0x9e216bc4
  40889d:	imul   ebx,DWORD PTR [ebx+0x56746649],0x40
  4088a4:	scas   al,BYTE PTR es:[edi]
  4088a5:	mov    al,0xaa
  4088a7:	ret    
  4088a8:	xchg   ebx,eax
  4088a9:	jg     0x408911
  4088ab:	adc    al,BYTE PTR [esi+0x40]
  4088ae:	popf   
  4088af:	xor    eax,0x568e1910
  4088b4:	mov    DWORD PTR [esp+eiz*2],ebp
  4088b7:	jno    0x40883a
  4088b9:	xchg   ecx,eax
  4088ba:	sahf   
  4088bb:	lea    edx,[ebp+eiz*1-0x5]
  4088bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088c0:	outs   dx,BYTE PTR ds:[esi]
  4088c1:	sbb    eax,0xacdcb81
  4088c6:	aam    0xbd
  4088c8:	loop   0x40888e
  4088ca:	(bad)  
  4088cb:	test   eax,0x54551a67
  4088d0:	repnz fild WORD PTR [esi+0x2ac142b8]
  4088d7:	dec    esp
  4088d8:	jns    0x40885d
  4088da:	and    BYTE PTR [eax],bl
  4088dc:	fmul   st(1),st
  4088de:	mov    bh,0xa7
  4088e0:	outs   dx,BYTE PTR ds:[esi]
  4088e1:	push   0x88994e02
  4088e6:	sar    DWORD PTR [ebx+esi*8+0xa],1
  4088ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088eb:	jb     0x40893b
  4088ed:	ins    DWORD PTR es:[edi],dx
  4088ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088ef:	stc    
  4088f0:	je     0x408929
  4088f2:	iret   
  4088f3:	cmp    DWORD PTR [ebx+edx*1],eax
  4088f6:	pushf  
  4088f7:	loope  0x4088a4
  4088f9:	dec    ecx
  4088fa:	add    eax,0xc577af38
  4088ff:	add    al,0x76
  408901:	push   edi
  408902:	retf   0xcd30
  408905:	add    BYTE PTR [esi+esi*1],bl
  408908:	mov    BYTE PTR ds:0xb1a3121e,ah
  40890e:	shr    DWORD PTR [esi],cl
  408910:	outs   dx,DWORD PTR ds:[esi]
  408911:	mov    dh,0xe5
  408913:	cld    
  408914:	retf   
  408915:	in     al,dx
  408916:	(bad)  
  408918:	or     dl,ch
  40891a:	je     0x4088bc
  40891c:	push   cs
  40891d:	xchg   ebp,eax
  40891e:	sahf   
  40891f:	scas   eax,DWORD PTR es:[edi]
  408920:	adc    esi,edx
  408922:	lods   eax,DWORD PTR ds:[esi]
  408923:	sbb    ebx,DWORD PTR [ecx+0x30640036]
  408929:	test   DWORD PTR [bp+di],esi
  40892c:	or     ebp,DWORD PTR [edi+0x49fe2bcb]
  408932:	mov    bl,0xa5
  408934:	sbb    eax,DWORD PTR [eax]
  408936:	jp     0x40897a
  408938:	ins    DWORD PTR es:[edi],dx
  408939:	stos   BYTE PTR es:[edi],al
  40893a:	sub    eax,0x22584bf2
  40893f:	mov    edx,0x5d73a889
  408944:	push   ss
  408945:	mov    ds:0x6fdf7acb,al
  40894a:	mov    al,es:0x3882f667
  408950:	rcl    BYTE PTR [edx+0x7d43566d],cl
  408956:	ror    BYTE PTR [bx+di-0x6d0],cl
  40895b:	ffree  st(7)
  40895d:	test   BYTE PTR [ebp-0x28a506f],bh
  408963:	add    BYTE PTR [edx],0x80
  408966:	push   edx
  408967:	mov    ch,0xad
  408969:	xchg   ebp,eax
  40896a:	ret    
  40896b:	stos   BYTE PTR es:[edi],al
  40896c:	test   eax,0xc283af5e
  408971:	xchg   edx,eax
  408972:	aaa    
  408973:	mov    dl,0xd2
  408975:	xor    BYTE PTR [ebp+0x6b],cl
  408978:	and    bh,cl
  40897a:	popa   
  40897b:	cmp    eax,0x91cdd755
  408980:	mov    ds:0x8b3d1661,eax
  408985:	out    0xc,eax
  408987:	inc    esp
  408988:	rcl    DWORD PTR [ecx],cl
  40898a:	push   esp
  40898b:	aam    0x5b
  40898d:	repz xor eax,0x361a6677
  408993:	repnz mov al,ds:0x76cb67e7
  408999:	dec    esp
  40899a:	xchg   edx,eax
  40899b:	mov    eax,ds:0xff861c0
  4089a0:	sbb    eax,0xf1a2e436
  4089a5:	daa    
  4089a6:	(bad)  
  4089a7:	adc    eax,0x2db39d03
  4089ac:	imul   edi,esi,0x2d1170b9
  4089b2:	pop    esp
  4089b3:	and    DWORD PTR [eax+0x3662d38a],edi
  4089b9:	and    ch,BYTE PTR [eax-0x4a207534]
  4089bf:	inc    DWORD PTR [ebx+0x17]
  4089c2:	xlat   BYTE PTR ds:[ebx]
  4089c3:	adc    al,0x70
  4089c5:	adc    ebx,0x0
  4089c8:	add    edx,DWORD PTR [edx+0x22]
  4089cb:	out    0xbb,al
  4089cd:	xor    esi,esi
  4089cf:	inc    edx
  4089d0:	inc    eax
  4089d1:	ja     0x408a40
  4089d3:	lods   eax,DWORD PTR ds:[esi]
  4089d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089d5:	or     DWORD PTR [edx+eiz*1],0xe2a45643
  4089dc:	or     dl,bl
  4089de:	(bad)  
  4089df:	jmp    0x408a3b
  4089e1:	out    dx,eax
  4089e2:	ja     0x408a60
  4089e4:	sahf   
  4089e5:	rcr    DWORD PTR [eax+ebx*4],1
  4089e8:	mov    fs,WORD PTR [edi]
  4089ea:	mov    edi,0x3d86cf5e
  4089ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089f0:	aaa    
  4089f1:	test   cl,cl
  4089f3:	sbb    ecx,DWORD PTR [esi+0x6b]
  4089f6:	mov    edx,0x35717faf
  4089fb:	xor    bh,dh
  4089fd:	add    BYTE PTR [edi+0x58],al
  408a00:	ins    DWORD PTR es:[edi],dx
  408a01:	and    BYTE PTR [ebx-0x19ccf23b],cl
  408a07:	not    DWORD PTR [ebx+0x72]
  408a0a:	xor    ch,BYTE PTR [esi-0x49]
  408a0d:	jg     0x40899f
  408a0f:	or     al,al
  408a11:	outs   dx,BYTE PTR ds:[esi]
  408a12:	loop   0x40899a
  408a14:	mov    ebx,0x788a6153
  408a19:	lock xchg edi,eax
  408a1b:	pop    edx
  408a1c:	(bad)  
  408a1e:	andnps xmm7,XMMWORD PTR [edi+eax*4-0x62a0be70]
  408a26:	mov    gs,ecx
  408a28:	add    BYTE PTR [esp+esi*2+0x55],bh
  408a2c:	dec    eax
  408a2d:	out    0x0,eax
  408a2f:	pop    es
  408a30:	ss add ebx,ebx
  408a33:	or     cl,bl
  408a35:	popa   
  408a36:	jnp    0x408a84
  408a38:	in     al,dx
  408a39:	cs cmp al,0x8f
  408a3c:	ss mov ah,0x36
  408a3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a40:	push   esi
  408a41:	popf   
  408a42:	dec    ebp
  408a43:	fdivr  QWORD PTR [edx]
  408a45:	sbb    dh,BYTE PTR [edx-0x33d40f82]
  408a4b:	and    ecx,edi
  408a4d:	aam    0x26
  408a4f:	jp     0x4089de
  408a51:	cwde   
  408a52:	or     al,0x28
  408a54:	iret   
  408a55:	bound  ecx,QWORD PTR [esi-0x1a]
  408a58:	(bad)  
  408a59:	sahf   
  408a5a:	icebp  
  408a5b:	lea    esp,[ecx+0x1dfb5538]
  408a61:	fidivr WORD PTR [edx-0x80]
  408a64:	sahf   
  408a65:	mov    eax,ds:0x5ae71987
  408a6a:	cmp    al,0xeb
  408a6c:	std    
  408a6d:	sbb    bh,BYTE PTR [eax-0x5fab55d4]
  408a73:	retf   0xc0b6
  408a76:	int3   
  408a77:	out    dx,eax
  408a78:	dec    ebx
  408a79:	jno    0x408a83
  408a7b:	xor    edi,DWORD PTR [ebx+0x4397d809]
  408a81:	jle    0x408ab5
  408a83:	das    
  408a84:	into   
  408a85:	jmp    FWORD PTR [esi]
  408a87:	mov    bl,0xf2
  408a89:	push   es
  408a8a:	imul   esp,esp,0x5
  408a8d:	pop    ebx
  408a8e:	fpatan 
  408a90:	jl     0x408adb
  408a92:	cdq    
  408a93:	call   0x2a1f:0x270b11de
  408a9a:	sub    DWORD PTR [ecx+edx*2-0x7d],ecx
  408a9e:	xchg   edx,eax
  408a9f:	sysexit 
  408aa1:	cmp    BYTE PTR [esi+ebx*2-0x5],al
  408aa5:	mov    esi,ebp
  408aa7:	ja     0x408a3d
  408aa9:	and    eax,0x9cfdf669
  408aae:	lock lods eax,DWORD PTR ds:[esi]
  408ab0:	fistp  QWORD PTR [edi-0x763f3c4d]
  408ab6:	mov    edx,DWORD PTR [ebp-0x32c05482]
  408abc:	(bad)  
  408abd:	jbe    0x408a80
  408abf:	scas   eax,DWORD PTR es:[edi]
  408ac0:	aad    0x90
  408ac2:	inc    ecx
  408ac3:	push   edi
  408ac4:	push   cs
  408ac5:	cld    
  408ac6:	lock cwde 
  408ac8:	push   cs
  408ac9:	xchg   BYTE PTR [ebx-0x1dd64253],bh
  408acf:	pushf  
  408ad0:	ret    
  408ad1:	xchg   esp,eax
  408ad2:	jl     0x408aa4
  408ad4:	mov    DWORD PTR [esi-0x14ce2fbb],edx
  408ada:	xchg   edi,eax
  408adb:	inc    edx
  408adc:	xor    eax,0x69450916
  408ae1:	cs mov ecx,0xc14b3fed
  408ae7:	mov    edi,0x7756cd14
  408aec:	jae    0x408abc
  408aee:	rcr    BYTE PTR [eax-0x6d],cl
  408af1:	lock ins BYTE PTR es:[edi],dx
  408af3:	inc    ecx
  408af4:	add    ah,BYTE PTR [ecx]
  408af6:	stc    
  408af7:	(bad)  
  408af8:	mov    ds:0x48a4d2fe,eax
  408afd:	retf   
  408afe:	clc    
  408aff:	sbb    al,0x7b
  408b01:	jo     0x408b1a
  408b03:	mov    edx,0x22e6fb75
  408b08:	cmp    DWORD PTR [esi],ecx
  408b0a:	mov    ebx,0x76dc2bd7
  408b0f:	dec    esp
  408b10:	pop    esi
  408b11:	stos   DWORD PTR es:[edi],eax
  408b12:	pop    ebp
  408b13:	jo     0x408b00
  408b15:	pop    ecx
  408b16:	call   0x12990b60
  408b1b:	jecxz  0x408ac3
  408b1d:	sub    BYTE PTR [esi],cl
  408b1f:	das    
  408b20:	jns    0x408aaa
  408b22:	bound  eax,QWORD PTR [edi-0x2e1de75d]
  408b28:	pop    eax
  408b29:	dec    edx
  408b2a:	pushf  
  408b2b:	jne    0x408afb
  408b2d:	inc    ecx
  408b2e:	mov    dh,0xa4
  408b30:	cwde   
  408b31:	ret    0xfe79
  408b34:	fist   DWORD PTR [ebp-0x764c7cbd]
  408b3a:	adc    al,BYTE PTR [ecx]
  408b3c:	or     BYTE PTR [eax],bh
  408b3e:	jbe    0x408ac3
  408b40:	(bad)  
  408b41:	(bad)  
  408b43:	sbb    edx,edi
  408b45:	imul   edx,DWORD PTR [esi-0x6],0xffffffe1
  408b49:	pop    ebx
  408b4a:	sub    ah,0xc
  408b4d:	call   0xcac2:0x80b5c5ec
  408b54:	addr16 loope 0x408b2b
  408b57:	iret   
  408b58:	sahf   
  408b59:	mov    ah,ch
  408b5b:	push   cs
  408b5c:	jmp    DWORD PTR cs:[esi]
  408b5f:	sub    DWORD PTR [eax+0x39cc92ea],ebx
  408b65:	pop    ebx
  408b66:	into   
  408b67:	lahf   
  408b68:	mov    ebx,0xece47ddf
  408b6d:	fs xor bl,bl
  408b70:	int3   
  408b71:	mov    cl,0xca
  408b73:	adc    cl,ah
  408b75:	test   eax,0x6d8e121e
  408b7a:	test   eax,0x64731b92
  408b7f:	mov    es,WORD PTR [eax]
  408b81:	cmc    
  408b82:	(bad)  
  408b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b84:	hlt    
  408b85:	ja     0x408bbe
  408b87:	bound  ecx,QWORD PTR [esi]
  408b89:	clc    
  408b8a:	hlt    
  408b8b:	cmp    DWORD PTR ds:0xec9f1faf,ebx
  408b91:	sub    BYTE PTR [edi-0x1d],ch
  408b94:	mov    al,ds:0xf2bea43e
  408b99:	mov    BYTE PTR [esi],ah
  408b9b:	xor    eax,0x5d2d14da
  408ba0:	adc    al,0x9f
  408ba2:	daa    
  408ba3:	int3   
  408ba4:	test   eax,0xba1d84bb
  408ba9:	jmp    0xcc22ecd9
  408bae:	sub    BYTE PTR [edx+0x63592822],ah
  408bb4:	adc    BYTE PTR [edx],dl
  408bb6:	shl    esp,1
  408bb8:	dec    ebp
  408bb9:	pusha  
  408bba:	in     al,dx
  408bbb:	shl    DWORD PTR [ecx+0x1d],1
  408bbe:	sub    BYTE PTR [ebx-0x8],bl
  408bc1:	not    DWORD PTR [esi-0x7826b08b]
  408bc7:	xor    BYTE PTR [ecx-0x2c],dl
  408bca:	(bad)  
  408bcb:	jo     0x408b4f
  408bcd:	dec    ebp
  408bce:	jnp    0x408b71
  408bd0:	clc    
  408bd1:	mov    al,ds:0x885c845c
  408bd6:	push   0xe14e6c38
  408bdb:	and    ecx,DWORD PTR [edx]
  408bdd:	stc    
  408bde:	sbb    al,0x91
  408be0:	or     BYTE PTR [eax-0x209c3f22],ah
  408be6:	or     eax,0xcb81b3b5
  408beb:	call   0x212b:0x9d7eed91
  408bf2:	dec    ebx
  408bf3:	sahf   
  408bf4:	out    0xab,al
  408bf6:	cmp    DWORD PTR [edx],edi
  408bf8:	je     0x408b8b
  408bfa:	in     eax,dx
  408bfb:	sub    BYTE PTR [ecx+0x39],0x89
  408bff:	mov    esp,ecx
  408c01:	push   0x554069e6
  408c06:	push   eax
  408c07:	fs mov bh,0x2e
  408c0a:	test   al,0xa5
  408c0c:	sahf   
  408c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c0e:	dec    eax
  408c0f:	nop
  408c10:	mov    eax,ds:0x5f7bf504
  408c15:	daa    
  408c16:	push   ecx
  408c17:	sbb    edx,DWORD PTR [ebp-0x411923f6]
  408c1d:	or     eax,0xffffff9c
  408c20:	shl    BYTE PTR [edx+0x637f2c04],0x48
  408c27:	(bad)  
  408c28:	adc    edi,DWORD PTR [ebx+0x3fdf836d]
  408c2e:	pop    esp
  408c2f:	sub    cl,ch
  408c31:	dec    edx
  408c32:	ret    
  408c33:	es mov esp,0x2c9fb556
  408c39:	fwait
  408c3a:	xor    BYTE PTR [esp+ecx*8-0x6f],0x1a
  408c3f:	cmp    esi,DWORD PTR [edx+0x2ee97399]
  408c45:	push   eax
  408c46:	jl     0x408c8c
  408c48:	mov    bh,0x2d
  408c4a:	mov    bl,0x7f
  408c4c:	int    0x7d
  408c4e:	fimul  WORD PTR ds:0xb4315d3b
  408c54:	and    eax,0x75
  408c57:	push   ss
  408c58:	adc    BYTE PTR [edi+0x20f44fe0],ah
  408c5e:	vmovq  QWORD PTR [ecx+0xd],xmm5
  408c63:	sbb    eax,0x7e39f351
  408c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c69:	inc    ebx
  408c6a:	rcl    dh,cl
  408c6c:	xchg   esp,eax
  408c6d:	cmovnp esp,DWORD PTR [eax+0x58]
  408c71:	sbb    al,0x5b
  408c74:	xchg   ebx,eax
  408c75:	pop    ss
  408c76:	fild   WORD PTR [edx-0x35f5261c]
  408c7c:	das    
  408c7d:	dec    eax
  408c7e:	dec    eax
  408c7f:	sbb    eax,0x78ec5183
  408c84:	stos   DWORD PTR es:[edi],eax
  408c85:	sahf   
  408c86:	je     0x408cfb
  408c88:	inc    esi
  408c89:	imul   eax,DWORD PTR ds:0x630fbd7d,0xffffff98
  408c90:	xchg   ebx,eax
  408c91:	mov    dh,0xa8
  408c93:	jle    0x408c4b
  408c95:	sub    eax,0xd68e5d3b
  408c9a:	loopne 0x408d0c
  408c9c:	rcr    DWORD PTR [eax+0x3d99a178],1
  408ca2:	cmp    cl,ah
  408ca4:	inc    edi
  408ca5:	retf   
  408ca6:	fnsave [esi]
  408ca8:	and    eax,DWORD PTR ds:[esi]
  408cab:	xor    dl,BYTE PTR [edi+0x7e07c57a]
  408cb1:	mov    ds:0x9630b766,eax
  408cb6:	jmp    0xe9e8e68b
  408cbb:	je     0x408c91
  408cbd:	loop   0x408d3e
  408cbf:	in     eax,dx
  408cc0:	clc    
  408cc1:	add    al,cl
  408cc3:	ds pop ebx
  408cc5:	adc    bh,BYTE PTR [ecx+esi*2+0x38f684ae]
  408ccc:	and    eax,0x7124bbe1
  408cd1:	xchg   ecx,eax
  408cd2:	dec    eax
  408cd3:	call   0x2d85:0x8867042b
  408cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cdb:	in     al,dx
  408cdc:	mov    dh,0xe5
  408cde:	fld    DWORD PTR [ebx+0x37c5af8b]
  408ce4:	pop    esp
  408ce5:	fbstp  TBYTE PTR [eax]
  408ce7:	mov    cl,0xc4
  408ce9:	(bad)  
  408cea:	bnd je 0x408c87
  408ced:	or     ebp,edi
  408cef:	mov    ss,WORD PTR [ebp+0x2c]
  408cf2:	iret   
  408cf3:	test   al,0xfc
  408cf5:	xor    al,0x17
  408cf7:	(bad)  
  408cf8:	aam    0x9e
  408cfa:	sbb    BYTE PTR [ebp-0x29],ch
  408cfd:	pop    ecx
  408cfe:	or     esi,DWORD PTR [esp+ebp*4]
  408d01:	and    eax,0x45e1936d
  408d06:	push   0x598bd64d
  408d0b:	push   cs
  408d0c:	jbe    0x408d5f
  408d0e:	mov    al,ds:0x81044e65
  408d13:	pop    ebx
  408d14:	lahf   
  408d15:	stos   DWORD PTR es:[edi],eax
  408d16:	sub    cl,dh
  408d18:	(bad)  
  408d19:	jmp    0x876cb768
  408d1e:	pushf  
  408d1f:	cmp    ecx,esi
  408d21:	enter  0x835c,0x10
  408d25:	mov    esi,0x7120a882
  408d2a:	adc    eax,0xd8eefa4c
  408d2f:	pop    es
  408d30:	push   es
  408d31:	out    0x35,al
  408d33:	jno    0x408d0c
  408d35:	jg     0x408cf3
  408d37:	inc    ebx
  408d38:	pop    edi
  408d39:	jecxz  0x408cc0
  408d3b:	ss das 
  408d3d:	sbb    dh,BYTE PTR [ebp-0x57]
  408d40:	and    esp,DWORD PTR [ebx-0x25]
  408d43:	fcomp  DWORD PTR [ebx-0x2]
  408d46:	out    0x54,al
  408d48:	adc    al,0xe9
  408d4a:	test   al,0x81
  408d4c:	add    DWORD PTR [ecx-0x44],edx
  408d4f:	addr16 mov ds:0xa4cf,eax
  408d53:	repnz cmp DWORD PTR [esi-0x6a],eax
  408d57:	mov    bl,0x9e
  408d59:	xchg   edi,eax
  408d5a:	and    bh,BYTE PTR [edx-0x588f6f40]
  408d60:	mov    dl,0x56
  408d62:	mov    ebx,0x84eea770
  408d67:	push   ds
  408d68:	mov    eax,ds:0xe680147
  408d6d:	adc    DWORD PTR [eax],edi
  408d6f:	or     eax,0x1db1cd4f
  408d74:	adc    esi,DWORD PTR [edi]
  408d76:	fstp   QWORD PTR [edi]
  408d78:	std    
  408d79:	stc    
  408d7a:	cwde   
  408d7b:	jg     0x408dc2
  408d7d:	mov    esi,0xaead707f
  408d82:	dec    edx
  408d83:	int3   
  408d84:	ret    
  408d85:	cmp    ch,BYTE PTR [eax+0x38]
  408d88:	sub    DWORD PTR [ecx-0x385e8711],edx
  408d8e:	into   
  408d8f:	xor    eax,0xba23270b
  408d94:	ins    BYTE PTR es:[edi],dx
  408d95:	mov    ah,0xae
  408d97:	inc    esp
  408d98:	jmp    0x8041851d
  408d9d:	in     al,0xfb
  408d9f:	push   edx
  408da0:	mov    ds:0xca6623af,al
  408da5:	ja     0x408d5d
  408da7:	mov    ah,0xa9
  408da9:	out    0xac,al
  408dab:	ds icebp 
  408dad:	dec    ebx
  408dae:	jg     0x408d84
  408db0:	fld    QWORD PTR [ebp-0x1436291]
  408db6:	push   esi
  408db7:	es and eax,0x84154c93
  408dbd:	aas    
  408dbe:	pushf  
  408dbf:	sub    bl,BYTE PTR [edx-0x43]
  408dc2:	inc    eax
  408dc3:	ret    
  408dc4:	and    eax,0xda5fdc4
  408dc9:	rol    DWORD PTR [edx],0xc6
  408dcc:	mov    al,0x71
  408dce:	adc    edi,DWORD PTR [eax+0x16ba374d]
  408dd4:	adc    eax,0x18d85fcd
  408dd9:	outs   dx,DWORD PTR ds:[esi]
  408dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ddb:	test   BYTE PTR [edx+0x4f00fcea],0xcc
  408de2:	sbb    eax,0xb29c724c
  408de7:	sub    al,0x60
  408de9:	and    esi,DWORD PTR [ebx+0x59531a14]
  408def:	or     dl,BYTE PTR [eax-0x24]
  408df2:	mov    ebx,0x555b6f07
  408df7:	mov    al,ds:0x1e537c5d
  408dfc:	xchg   BYTE PTR [edx-0x45],al
  408dff:	mov    ss,WORD PTR [esi-0x45]
  408e02:	lods   al,BYTE PTR ds:[esi]
  408e03:	(bad)  
  408e04:	adc    DWORD PTR [edi+0x55],eax
  408e07:	mov    cl,0xf
  408e09:	sub    ch,BYTE PTR [ebp-0x7a289c76]
  408e0f:	jae    0x408de7
  408e11:	mov    edx,0xaed80db3
  408e16:	stc    
  408e17:	lea    esi,[esi-0x57]
  408e1a:	xor    eax,0xd770084b
  408e1f:	inc    eax
  408e20:	xchg   edi,eax
  408e21:	sub    edx,0xf5a7e9e3
  408e27:	(bad)  
  408e28:	push   ds
  408e29:	je     0x408df8
  408e2b:	in     al,0x10
  408e2d:	nop
  408e2e:	jo     0x408e02
  408e30:	sbb    BYTE PTR [edx],bl
  408e32:	sbb    al,BYTE PTR [esp+ecx*2]
  408e35:	push   ds
  408e36:	(bad)  
  408e37:	mov    al,0xe2
  408e39:	fst    st(7)
  408e3b:	popf   
  408e3c:	fnstcw WORD PTR [ebx]
  408e3e:	(bad)  
  408e3f:	sbb    al,0x80
  408e41:	adc    bl,al
  408e43:	leave  
  408e44:	sub    ah,BYTE PTR [ecx+ecx*8-0x703011c0]
  408e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e4c:	inc    edi
  408e4d:	or     esp,DWORD PTR [edi+0x19]
  408e50:	mov    esp,DWORD PTR [eax+0x12]
  408e53:	inc    edi
  408e54:	push   0xdc8df47f
  408e59:	push   edx
  408e5a:	nop
  408e5b:	cmp    al,0x1e
  408e5e:	das    
  408e5f:	gs dec ecx
  408e61:	std    
  408e62:	jge    0x408e26
  408e64:	adc    al,0x7f
  408e66:	out    0x28,eax
  408e68:	pop    esi
  408e69:	ds pusha 
  408e6b:	(bad)  
  408e6d:	xlat   BYTE PTR ds:[ebx]
  408e6e:	outs   dx,DWORD PTR ds:[esi]
  408e6f:	or     DWORD PTR [edi+ebx*1],esi
  408e72:	xchg   ebp,eax
  408e73:	or     al,0x36
  408e75:	mov    al,ds:0x72bf37df
  408e7a:	lahf   
  408e7b:	sbb    ecx,DWORD PTR [edx]
  408e7d:	pushf  
  408e7e:	out    0x54,al
  408e80:	push   cs
  408e81:	daa    
  408e82:	mov    bl,0xd5
  408e84:	sahf   
  408e85:	inc    ebx
  408e86:	in     eax,dx
  408e87:	cmp    eax,0xec2a35ec
  408e8c:	lock (bad) 
  408e8e:	mov    ah,bl
  408e90:	mov    al,ds:0x47f9d704
  408e95:	adc    al,0x3e
  408e97:	cmc    
  408e98:	lods   eax,DWORD PTR ds:[esi]
  408e99:	and    DWORD PTR [eax+0x422cb584],ebx
  408e9f:	sbb    ch,BYTE PTR [ebp-0x477ad895]
  408ea5:	imul   ebx,DWORD PTR [edx],0x1e50108
  408eab:	xchg   esi,eax
  408eac:	adc    esi,DWORD PTR [ecx+0xaac5725]
  408eb2:	in     eax,dx
  408eb3:	mov    edi,DWORD PTR [ecx+0x70]
  408eb6:	test   eax,0xfa565791
  408ebb:	out    0x3d,al
  408ebd:	imul   ecx,ebx,0xffffffd4
  408ec0:	cmp    bh,BYTE PTR [ebx+eax*4-0x2b]
  408ec4:	xchg   edx,eax
  408ec5:	add    ah,BYTE PTR [ebx+0x33878d34]
  408ecb:	mov    dl,0x39
  408ecd:	sbb    esi,edi
  408ecf:	int3   
  408ed0:	add    edx,DWORD PTR ds:0xc5e0e2ab
  408ed6:	or     al,BYTE PTR [eax-0x6ed7b4fb]
  408edc:	cmp    eax,0x6cd1bee5
  408ee1:	sbb    eax,0x3d9d845b
  408ee6:	push   es
  408ee7:	out    dx,al
  408ee8:	fld    st(1)
  408eea:	inc    ebp
  408eeb:	push   cs
  408eec:	adc    al,0xb9
  408eee:	ret    
  408eef:	sub    eax,0xb3963375
  408ef4:	repz test eax,0x3ed6370b
  408efa:	sub    ah,BYTE PTR [eax]
  408efc:	xchg   ebx,edi
  408efe:	xor    eax,0xb313ca3a
  408f03:	lods   al,BYTE PTR ds:[esi]
  408f04:	add    cl,BYTE PTR ds:0xa2ff45b1
  408f0a:	loopne 0x408e97
  408f0c:	mov    ebp,0xd2e3f333
  408f11:	cmc    
  408f12:	in     eax,dx
  408f13:	(bad)  
  408f14:	cmc    
  408f15:	fmul   QWORD PTR [edx-0x19]
  408f18:	mov    eax,DWORD PTR [edi+0x3b6f4741]
  408f1e:	mov    ah,0xf9
  408f20:	mov    ecx,ebp
  408f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f23:	and    al,0x50
  408f25:	rcr    BYTE PTR [ebx+0x51cf31f3],0x9d
  408f2c:	inc    edi
  408f2d:	cmp    DWORD PTR [eax],edx
  408f2f:	mov    ch,0xef
  408f31:	fild   DWORD PTR [edi-0x3d]
  408f34:	loop   0x408ef6
  408f36:	xor    edi,edi
  408f38:	mov    ah,0xd9
  408f3a:	jno    0x408f21
  408f3c:	int3   
  408f3d:	mov    eax,0x354718e
  408f42:	retf   
  408f43:	(bad)  
  408f44:	lods   al,BYTE PTR ds:[esi]
  408f45:	test   eax,0x1ac41f99
  408f4a:	sbb    eax,0x66
  408f4d:	push   ebx
  408f4e:	data16 and dh,BYTE PTR [ebp+0x8e8835]
  408f55:	retf   
  408f56:	icebp  
  408f57:	mov    dh,0x49
  408f59:	xchg   esi,eax
  408f5a:	and    esi,ebp
  408f5c:	ficomp DWORD PTR [ebp+0x1bedbe24]
  408f62:	mov    ah,0x9c
  408f64:	and    ebp,DWORD PTR [edi+edi*8]
  408f67:	jbe    0x408f17
  408f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f6a:	sbb    dh,BYTE PTR [ebx]
  408f6c:	lock push cs
  408f6e:	xlat   BYTE PTR ds:[ebx]
  408f6f:	xor    al,0xd9
  408f71:	stc    
  408f72:	or     BYTE PTR [esi-0x1d],ah
  408f75:	cmp    al,0xd0
  408f77:	aad    0xed
  408f79:	loope  0x408f92
  408f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f7c:	gs in  eax,0x1e
  408f7f:	sub    al,0xef
  408f81:	loope  0x408ff4
  408f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f84:	mov    bh,0x61
  408f86:	push   0xfffffffe
  408f88:	sbb    DWORD PTR [ebp+edx*8+0x6c],ebx
  408f8c:	aaa    
  408f8d:	sub    BYTE PTR [esp+eiz*8-0x130a6564],bh
  408f94:	and    BYTE PTR [eax],dh
  408f96:	dec    ebp
  408f97:	push   ecx
  408f98:	inc    ecx
  408f99:	retf   
  408f9a:	imul   ecx,esp,0xfadccac2
  408fa0:	(bad)
  408fa3:	dec    esp
  408fa4:	mov    esi,0x51899d1e
  408fa9:	icebp  
  408faa:	fndisi(8087 only) 
  408fac:	fist   WORD PTR [edi]
  408fae:	adc    ch,BYTE PTR [esi]
  408fb0:	sbb    bh,BYTE PTR [ebx+0x504c55c1]
  408fb6:	sbb    bh,BYTE PTR [ebp+0x1b]
  408fb9:	fdivr  st(3),st
  408fbb:	push   cs
  408fbc:	cmp    DWORD PTR [ecx-0x6e],ecx
  408fbf:	fidivr WORD PTR [edx]
  408fc1:	mov    dh,0x60
  408fc3:	clc    
  408fc4:	outs   dx,BYTE PTR ds:[esi]
  408fc5:	ret    0x369f
  408fc8:	loope  0x408f90
  408fca:	mov    ds:0x57aa4975,eax
  408fcf:	ds inc esi
  408fd1:	pop    esi
  408fd2:	stos   DWORD PTR es:[edi],eax
  408fd3:	xor    al,al
  408fd5:	cmp    al,0x87
  408fd7:	cmp    eax,0xfe769274
  408fdc:	mov    gs,esp
  408fde:	rcl    ch,1
  408fe0:	es jge 0x408ffc
  408fe3:	test   BYTE PTR [ebx+0x5064af9c],ch
  408fe9:	add    al,0xc
  408feb:	jo     0x408fe5
  408fed:	push   ecx
  408fee:	jmp    0x1c07:0x6e70ac41
  408ff5:	add    al,0x8b
  408ff7:	adc    al,0xfc
  408ff9:	mov    ah,0x43
  408ffb:	in     al,0xb7
  408ffd:	or     BYTE PTR [eax],al
  408fff:	mov    ch,0xb8
  409001:	jbe    0x408f8d
  409003:	cmp    eax,0x91c7d9f
  409008:	repz cdq 
  40900a:	push   0x29
  40900c:	pop    es
  40900d:	hlt    
  40900e:	out    dx,al
  40900f:	xchg   ecx,eax
  409010:	stc    
  409011:	push   edx
  409012:	cmc    
  409013:	ins    BYTE PTR es:[edi],dx
  409014:	mov    ah,0x33
  409016:	ja     0x408fde
  409018:	shr    DWORD PTR [edx-0x62],1
  40901b:	sbb    DWORD PTR [esi+0x721bf7d9],esp
  409021:	push   cs
  409022:	repnz mov dl,0x3b
  409025:	xlat   BYTE PTR ds:[ebx]
  409026:	mov    cl,0xce
  409028:	ins    BYTE PTR es:[edi],dx
  409029:	into   
  40902a:	add    BYTE PTR [eax-0x170b581d],ch
  409030:	pop    ss
  409031:	inc    ebp
  409032:	nop
  409033:	jge    0x409020
  409035:	xor    edx,DWORD PTR [eax+0x494fee9]
  40903b:	xchg   ebp,eax
  40903c:	xchg   bl,ah
  40903e:	or     al,BYTE PTR [edx-0x396c890b]
  409044:	icebp  
  409045:	outs   dx,DWORD PTR ds:[esi]
  409046:	lahf   
  409047:	leave  
  409048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409049:	adc    ecx,DWORD PTR [ecx]
  40904b:	jo     0x40906a
  40904d:	add    al,0x5e
  40904f:	aad    0x98
  409051:	sbb    BYTE PTR [ebp-0x53c166c9],0x42
  409058:	sub    eax,0x13360ddf
  40905d:	ss and al,0x37
  409060:	or     al,BYTE PTR [esi]
  409062:	ret    
  409063:	lods   al,BYTE PTR ds:[esi]
  409064:	iret   
  409065:	loopne 0x409033
  409067:	pop    esp
  409068:	sti    
  409069:	mov    ch,0xad
  40906b:	pop    edi
  40906c:	test   dh,0x8e
  40906f:	popf   
  409070:	repz (bad) 
  409073:	sub    al,0xbe
  409075:	mov    DWORD PTR [ebx-0x5],esi
  409078:	mov    ebp,DWORD PTR [ecx+esi*4]
  40907b:	test   eax,0xc89bbc56
  409080:	jns    0x4090b5
  409082:	lods   al,BYTE PTR ds:[esi]
  409083:	jecxz  0x409093
  409085:	loop   0x4090a3
  409087:	sbb    al,0xf8
  409089:	jl     0x4090e6
  40908b:	xchg   edi,eax
  40908c:	add    ah,BYTE PTR ds:0x51eef2dc
  409092:	xor    BYTE PTR [esi+0x60],ah
  409095:	mov    al,0x5
  409097:	scas   al,BYTE PTR es:[edi]
  409098:	jns    0x40905e
  40909a:	sbb    eax,0x28c2a6fd
  40909f:	bound  ebx,QWORD PTR [esi]
  4090a1:	jmp    0x6d7aafe6
  4090a6:	and    eax,0x9d806768
  4090ab:	sub    al,0x33
  4090ad:	pop    ds
  4090ae:	xor    eax,0x6c209f04
  4090b3:	or     eax,0xb1963261
  4090b8:	inc    ecx
  4090b9:	mov    dh,0x92
  4090bb:	daa    
  4090bc:	mov    al,0x0
  4090be:	(bad)  
  4090bf:	aam    0x98
  4090c1:	dec    edx
  4090c2:	cmp    al,0x87
  4090c4:	jge    0x4090a7
  4090c6:	xor    BYTE PTR [edx-0x5ad38bb8],dl
  4090cc:	retf   
  4090cd:	fwait
  4090ce:	mov    al,0x98
  4090d0:	pop    ss
  4090d1:	cmp    al,0x43
  4090d3:	rcl    DWORD PTR [edi-0x251fb3df],0x8f
  4090da:	in     eax,0x47
  4090dc:	popa   
  4090dd:	les    esi,FWORD PTR ds:0x1cc68783
  4090e3:	gs ins BYTE PTR es:[edi],dx
  4090e5:	call   0x369ed107
  4090ea:	jle    0x409147
  4090ec:	frstor [eax]
  4090ee:	sbb    DWORD PTR ds:0xccb78d0b,ecx
  4090f4:	cmp    ah,dh
  4090f6:	inc    ebx
  4090f7:	and    eax,0xf93631b3
  4090fc:	cmp    DWORD PTR [edx+0x4a],edx
  4090ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409100:	aam    0x27
  409102:	or     eax,0x54dbf083
  409107:	cmp    ch,dl
  409109:	cmc    
  40910a:	xchg   esp,eax
  40910b:	pop    eax
  40910c:	mov    ebp,0x923b95b1
  409111:	not    ebx
  409113:	fucomi st,st(5)
  409115:	lods   al,BYTE PTR ds:[esi]
  409116:	sahf   
  409117:	int3   
  409118:	mov    WORD PTR [edx+0x39],ss
  40911b:	cdq    
  40911c:	je     0x409177
  40911e:	into   
  40911f:	test   eax,0xf3ee3529
  409124:	sub    BYTE PTR [ebx+edi*1],0x1c
  409128:	mov    ah,0x32
  40912a:	adc    BYTE PTR [ebx*1+0x4ec2efc0],0x75
  409132:	sub    ebx,ebp
  409134:	into   
  409135:	or     ch,BYTE PTR [edi+0x79]
  409138:	and    DWORD PTR [ebp-0x20],eax
  40913b:	mov    BYTE PTR [edx+0x31ae5286],al
  409141:	cs sti 
  409143:	sbb    BYTE PTR [edx],dl
  409145:	xor    BYTE PTR [ebx+esi*2-0x2fea49fa],0x7b
  40914d:	test   BYTE PTR [ecx],al
  40914f:	mov    ds:0x25e1ddef,al
  409154:	sahf   
  409155:	xor    bh,dh
  409157:	test   DWORD PTR [edx-0x64730fe4],ebx
  40915d:	das    
  40915e:	xor    dh,BYTE PTR [ebx-0x57cdb7fb]
  409164:	xor    al,0xcc
  409166:	ins    BYTE PTR es:[edi],dx
  409167:	daa    
  409168:	jns    0x40911b
  40916a:	outs   dx,DWORD PTR ds:[esi]
  40916b:	push   eax
  40916c:	pushf  
  40916d:	or     DWORD PTR [esi+0x27],ebp
  409170:	stc    
  409171:	pop    ds
  409172:	add    ebx,0x1
  409175:	test   al,0x8
  409177:	fsubr  DWORD PTR [edx-0x49f78dd1]
  40917d:	cmc    
  40917e:	in     al,dx
  40917f:	sti    
  409180:	clc    
  409181:	sti    
  409182:	mov    ebx,0x86752327
  409187:	ins    BYTE PTR es:[edi],dx
  409188:	inc    eax
  409189:	iret   
  40918a:	(bad)  
  40918b:	(bad)  
  40918c:	shr    BYTE PTR [ebp-0x3e373ed5],0x32
  409193:	xchg   DWORD PTR [ecx+ebx*8+0x1c],ebp
  409197:	gs push edx
  409199:	imul   eax,ebx,0x3614ec86
  40919f:	int3   
  4091a0:	mov    edi,0x650cc668
  4091a5:	mov    WORD PTR [ebx-0x6a],es
  4091a8:	and    BYTE PTR [ecx],dh
  4091aa:	cs scas al,BYTE PTR es:[edi]
  4091ac:	jo     0x409207
  4091ae:	and    ecx,DWORD PTR [eax-0x76]
  4091b1:	mov    bh,0x97
  4091b3:	sbb    BYTE PTR [edx+0x40e61161],bl
  4091b9:	(bad)  
  4091ba:	loopne 0x409185
  4091bc:	addr16 jmp 0x409163
  4091bf:	or     eax,0x384ab4de
  4091c4:	ss push edx
  4091c6:	pop    ecx
  4091c7:	xor    al,0x3
  4091c9:	(bad)  
  4091ca:	jnp    0x40923c
  4091cc:	mov    ah,BYTE PTR [edi+0x46288ca9]
  4091d2:	icebp  
  4091d3:	cld    
  4091d4:	pop    ebx
  4091d5:	push   eax
  4091d6:	add    esp,eax
  4091d8:	ins    BYTE PTR es:[edi],dx
  4091d9:	mov    dh,0x48
  4091db:	test   BYTE PTR ds:0x9ed189b9,al
  4091e1:	in     eax,0xfd
  4091e3:	imul   BYTE PTR [edi+0x45]
  4091e6:	sbb    eax,0x195ccd96
  4091eb:	mov    eax,0x9f547cd2
  4091f0:	dec    esi
  4091f1:	lock push 0xfffffff1
  4091f4:	xchg   edi,eax
  4091f5:	in     eax,0x2d
  4091f7:	add    BYTE PTR [esi+0x5d],dl
  4091fa:	mov    esi,DWORD PTR [ebp+0x58]
  4091fd:	arpl   WORD PTR [edi+0x396a3004],dx
  409203:	hlt    
  409204:	sbb    al,0x83
  409206:	cmp    eax,0xa776f89e
  40920b:	(bad)  
  40920c:	xchg   esp,eax
  40920d:	retf   
  40920e:	jne    0x4091a8
  409210:	adc    BYTE PTR [eax],al
  409212:	sahf   
  409213:	data16 (bad) 
  409215:	dec    esp
  409216:	repz and bl,BYTE PTR [esi-0x79]
  40921a:	and    al,0x86
  40921c:	leave  
  40921d:	int3   
  40921e:	push   eax
  40921f:	mov    ebp,ebx
  409221:	mov    ebp,0xf7fc882c
  409226:	xchg   DWORD PTR [ecx+edi*8],ebp
  409229:	(bad)  
  40922a:	popf   
  40922b:	pop    ds
  40922c:	jns    0x409271
  40922e:	std    
  40922f:	xchg   ebx,eax
  409230:	xchg   edx,eax
  409231:	ja     0x409295
  409233:	jle    0x409229
  409235:	xor    BYTE PTR [esi+0x15],ch
  409238:	(bad)  
  409239:	mul    edx
  40923b:	push   ecx
  40923c:	dec    eax
  40923d:	mov    al,ds:0xb8fcd1b7
  409242:	bound  ebp,QWORD PTR gs:[eax]
  409245:	hlt    
  409246:	ins    BYTE PTR es:[edi],dx
  409247:	mov    ebp,0x69e8305c
  40924c:	lods   al,BYTE PTR ds:[esi]
  40924d:	fwait
  40924e:	adc    BYTE PTR [ebp-0x46a64d],dh
  409254:	imul   ebx,DWORD PTR [ebp-0x64],0xffffffea
  409258:	mov    edx,0x65def94f
  40925d:	popa   
  40925e:	cli    
  40925f:	in     al,0xd2
  409261:	or     BYTE PTR [ebp+0x65bfcb7d],0xb1
  409268:	mov    cl,0x7f
  40926b:	outs   dx,DWORD PTR ds:[esi]
  40926c:	addr16 daa 
  40926e:	jg     0x409203
  409270:	jno    0x409294
  409272:	into   
  409273:	push   0x9f3e7e7a
  409278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409279:	xor    al,0x30
  40927b:	ds jae 0x409227
  40927e:	sub    ah,BYTE PTR fs:[ebx-0x34]
  409282:	or     DWORD PTR [ecx+0x3d6d23a8],0x44
  409289:	lods   eax,DWORD PTR ds:[esi]
  40928a:	cmp    esi,DWORD PTR [esi+0x50]
  40928d:	out    0xa,eax
  40928f:	push   eax
  409290:	inc    eax
  409291:	xchg   BYTE PTR [edx+eax*2+0x2f],ch
  409295:	pusha  
  409296:	or     bh,BYTE PTR [esi+0x77]
  409299:	pop    eax
  40929a:	jbe    0x40922f
  40929c:	fsub   DWORD PTR [edi]
  40929e:	and    ecx,DWORD PTR [eax-0x52]
  4092a1:	or     DWORD PTR [edx+0x16e2dd78],edx
  4092a7:	mov    esp,0x249eca5
  4092ac:	xchg   cl,bl
  4092ae:	(bad)  
  4092af:	aad    0xe6
  4092b1:	sbb    DWORD PTR [ebx],ecx
  4092b3:	mov    es:0x26b822b8,al
  4092b9:	mov    dl,0xad
  4092bb:	adc    dl,bh
  4092bd:	push   edi
  4092be:	aam    0xc7
  4092c0:	retf   
  4092c1:	pop    eax
  4092c2:	pop    edi
  4092c3:	ins    DWORD PTR es:[edi],dx
  4092c4:	adc    al,BYTE PTR [eax+0x430ac9ab]
  4092ca:	arpl   WORD PTR [ebx],bx
  4092cc:	les    ebx,FWORD PTR gs:[edx]
  4092cf:	xor    eax,0xafe1f944
  4092d4:	xor    DWORD PTR [bp+0x0],esp
  4092d8:	mov    edi,?
  4092da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092db:	lock repz inc eax
  4092de:	dec    ebp
  4092df:	dec    esp
  4092e0:	xchg   ebp,eax
  4092e1:	ror    ebp,1
  4092e3:	xchg   ebp,eax
  4092e4:	lahf   
  4092e5:	icebp  
  4092e6:	or     eax,0x1f5a7845
  4092eb:	sub    ecx,ecx
  4092ed:	sbb    DWORD PTR [esp+edi*8],ebp
  4092f0:	into   
  4092f1:	sub    edi,DWORD PTR [eax+0x3d]
  4092f4:	jmp    0x9441:0x9a597931
  4092fb:	mov    al,ds:0x2c250acc
  409300:	and    bh,cl
  409302:	or     dl,0xbf
  409305:	jg     0x40937d
  409307:	ja     0x4092ff
  409309:	push   ecx
  40930a:	lods   eax,DWORD PTR ds:[esi]
  40930b:	mov    ebx,DWORD PTR [ebx+0x66]
  40930e:	jl     0x4092e7
  409310:	jbe    0x4092f2
  409312:	fbld   TBYTE PTR [eax]
  409314:	jno    0x4092ba
  409316:	popf   
  409317:	(bad)  
  409318:	les    edx,FWORD PTR [ebp-0x3161e044]
  40931e:	jge    0x40931e
  409320:	cmp    esi,DWORD PTR [ebx+ebp*4-0x13d35f7f]
  409327:	add    ebx,edi
  409329:	popa   
  40932a:	dec    ebx
  40932b:	pushf  
  40932c:	ins    BYTE PTR es:[edi],dx
  40932d:	ret    0xada5
  409330:	pop    ebp
  409331:	fdivr  DWORD PTR [eax+0x26f49b83]
  409337:	and    eax,0xc9ef3fad
  40933c:	pushf  
  40933d:	aas    
  40933e:	push   ebp
  40933f:	mov    ?,WORD PTR [ecx+0x73]
  409342:	xchg   DWORD PTR [edx],ebx
  409344:	fmul   DWORD PTR [ebx+0x97d3370]
  40934a:	cmp    al,0x22
  40934c:	ret    
  40934d:	jmp    0x6aa7:0x4b55b407
  409354:	push   edi
  409355:	ss inc eax
  409357:	pop    esp
  409358:	inc    esi
  409359:	push   cs
  40935a:	rcl    DWORD PTR [edx],1
  40935c:	dec    esp
  40935d:	xchg   ebp,eax
  40935e:	bound  ebx,QWORD PTR [edx-0x5a]
  409361:	jecxz  0x40932d
  409363:	sar    DWORD PTR ds:0x5623da74,cl
  409369:	into   
  40936a:	sti    
  40936b:	in     al,dx
  40936c:	fbld   TBYTE PTR [ecx-0x57546aae]
  409372:	inc    edi
  409373:	ss pusha 
  409375:	sub    dh,BYTE PTR [edi+0x69]
  409378:	adc    DWORD PTR [edi],esp
  40937a:	ins    DWORD PTR es:[edi],dx
  40937b:	xlat   BYTE PTR ds:[ebx]
  40937c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40937d:	dec    ecx
  40937e:	ficomp DWORD PTR [ecx+ecx*8+0x15fb2cf6]
  409385:	sub    ch,dh
  409387:	sbb    eax,DWORD PTR [ebp-0xe5a3007]
  40938d:	into   
  40938e:	cmp    BYTE PTR [eax+0x7],bl
  409391:	sub    ecx,DWORD PTR [eax-0x2925f57e]
  409397:	pop    ebp
  409398:	xor    al,0xcb
  40939a:	lods   al,BYTE PTR ds:[esi]
  40939b:	out    dx,al
  40939c:	pushw  es
  40939e:	add    eax,0x79a9fcd8
  4093a3:	shl    DWORD PTR [esi+ebx*4+0x7a],0xfd
  4093a8:	les    ecx,FWORD PTR [eax+ebp*2+0x55]
  4093ac:	(bad)  
  4093ad:	rol    BYTE PTR [edx],1
  4093af:	arpl   WORD PTR ds:0xd35447dc,ax
  4093b5:	add    al,0xc6
  4093b7:	and    DWORD PTR [ebx+ecx*4],eax
  4093ba:	adc    ebp,DWORD PTR [eax-0x77c31ee0]
  4093c0:	push   ss
  4093c1:	aam    0x86
  4093c3:	dec    eax
  4093c4:	add    cl,BYTE PTR [ecx+0x3d]
  4093c7:	mov    esp,0x3aeaffc2
  4093cc:	mov    ecx,0x4be9aaae
  4093d1:	mov    BYTE PTR [ebx-0x7b00ba08],bl
  4093d7:	sbb    ah,dh
  4093d9:	in     al,0x62
  4093db:	bound  ebx,QWORD PTR [ecx-0x51fb4c4d]
  4093e1:	ret    0x239f
  4093e4:	push   ecx
  4093e5:	mov    edi,0xb8e925ba
  4093ea:	xor    edi,DWORD PTR [esi-0x3069d3eb]
  4093f0:	sbb    eax,DWORD PTR [edx+edi*1+0x5c]
  4093f4:	retf   
  4093f5:	fstp   TBYTE PTR [ecx+0x50]
  4093f8:	adc    ah,bl
  4093fa:	shl    DWORD PTR [ebp-0x4f],0x56
  4093fe:	adc    eax,eax
  409400:	and    eax,0x19e82f32
  409405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409406:	sbb    BYTE PTR [edx],bh
  409408:	sub    dl,BYTE PTR [ebx+0xb]
  40940b:	bound  ecx,QWORD PTR [esi]
  40940d:	pop    es
  40940e:	in     eax,0x5e
  409410:	or     al,BYTE PTR [eax+0x5b]
  409413:	push   eax
  409414:	pop    ds
  409415:	fdiv   DWORD PTR [esi+0x4a]
  409418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409419:	mov    dl,0x47
  40941b:	call   0x7eaff262
  409420:	xor    eax,0xe7c6a11f
  409425:	(bad)  [esi+esi*2-0x36bb1113]
  40942c:	xor    edi,eax
  40942e:	in     eax,0x96
  409430:	(bad)  
  409431:	in     eax,dx
  409432:	rol    DWORD PTR [edi+0x4],1
  409435:	push   0xffffff9f
  409437:	sbb    BYTE PTR [esi+0x7010e999],dh
  40943d:	loopne 0x40949e
  40943f:	aad    0x9f
  409441:	push   ebp
  409442:	aaa    
  409443:	and    eax,0x94536cf
  409448:	jmp    0x54fc:0x73f8b0fb
  40944f:	cs leave 
  409451:	ret    
  409452:	xchg   ecx,eax
  409453:	shl    DWORD PTR [esi+0x45],0x3e
  409457:	adc    bh,BYTE PTR [eax+0x26]
  40945a:	cmp    BYTE PTR [edi+0x72e91742],ah
  409460:	add    BYTE PTR [ebp+0x1f],cl
  409463:	sbb    bl,BYTE PTR [esi-0x80]
  409466:	les    esi,FWORD PTR [edx-0x6]
  409469:	iret   
  40946a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40946b:	xchg   esi,eax
  40946c:	shl    DWORD PTR [edi*4-0x45e98193],1
  409473:	mov    al,ds:0x51888a45
  409478:	hlt    
  409479:	jmp    0x4094a1
  40947b:	mov    cl,BYTE PTR [edx]
  40947d:	jl     0x409416
  40947f:	push   ds
  409480:	or     DWORD PTR [eax],0xffffffb6
  409483:	clc    
  409484:	into   
  409485:	loop   0x4094a2
  409487:	addr16 jp 0x40947d
  40948a:	sbb    al,0x6a
  40948c:	icebp  
  40948d:	inc    esp
  40948e:	out    0x44,al
  409490:	les    esi,FWORD PTR [esp+edx*4-0xb0fd8ff]
  409497:	or     dl,0xbc
  40949a:	jbe    0x409498
  40949c:	stos   DWORD PTR es:[edi],eax
  40949d:	mov    esi,0x44761db1
  4094a2:	and    BYTE PTR [edx+0x398fd1b0],bh
  4094a8:	sub    eax,0xaca290be
  4094ad:	sub    BYTE PTR [eax-0x72fd1cff],bl
  4094b3:	call   eax
  4094b5:	clc    
  4094b6:	aam    0x64
  4094b8:	sub    ebp,edi
  4094ba:	(bad)  
  4094bc:	xchg   edi,eax
  4094bd:	mov    eax,0x7cb6e97e
  4094c2:	fst    DWORD PTR [esi+0x18]
  4094c5:	imul   ecx,DWORD PTR [ebx+0x24],0xffffffcb
  4094c9:	fcom   st(2)
  4094cb:	sub    al,0x8f
  4094cd:	loop   0x409475
  4094cf:	and    ah,BYTE PTR [edi]
  4094d1:	xchg   esi,eax
  4094d2:	inc    eax
  4094d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094d4:	xor    DWORD PTR [edi+0x18945fba],0x2b0ef7c3
  4094de:	popa   
  4094df:	stos   DWORD PTR es:[edi],eax
  4094e0:	repz xchg edx,eax
  4094e2:	in     al,dx
  4094e3:	mov    edi,0xcb551960
  4094e8:	pop    eax
  4094e9:	or     DWORD PTR [edi+esi*4+0x77],esp
  4094ed:	push   0x7c834ad8
  4094f2:	loop   0x409558
  4094f4:	out    0x43,al
  4094f6:	iret   
  4094f7:	or     al,0x19
  4094f9:	sub    DWORD PTR [ecx-0x8],0x433596d
  409500:	mov    BYTE PTR [esi],ah
  409502:	outs   dx,DWORD PTR ds:[esi]
  409503:	sbb    BYTE PTR [eax+0x1dfeb2b0],0xbb
  40950a:	(bad)  
  40950b:	adc    BYTE PTR [eax-0x22],ch
  40950e:	dec    eax
  40950f:	fcmovne st,st(6)
  409511:	sbb    ah,BYTE PTR [ebp+0x44fa6b9e]
  409517:	(bad)  
  409518:	les    ecx,FWORD PTR [ebp+0x78077d2e]
  40951e:	cmp    DWORD PTR [ecx-0x7e],edi
  409521:	or     al,0x3f
  409523:	sti    
  409524:	push   ds
  409525:	dec    ecx
  409526:	popf   
  409527:	sbb    al,BYTE PTR [edi]
  409529:	mov    ebx,0x6c570d77
  40952e:	inc    esi
  40952f:	sbb    al,0x3f
  409531:	aam    0x4d
  409533:	in     eax,dx
  409534:	push   esi
  409535:	xor    eax,edi
  409537:	les    ecx,FWORD PTR [esi-0x15]
  40953a:	xchg   ebp,eax
  40953b:	mov    BYTE PTR [edi-0x4fdeb53b],dh
  409541:	daa    
  409542:	scas   al,BYTE PTR es:[edi]
  409543:	xor    edi,DWORD PTR [esi]
  409545:	fs push edx
  409547:	add    eax,0xecb3eacd
  40954c:	adc    ebx,DWORD PTR [edi-0x1c9e107a]
  409552:	jns    0x4095ce
  409554:	inc    edx
  409555:	fwait
  409556:	push   ss
  409557:	xchg   BYTE PTR [ebp-0x59],bh
  40955a:	fdiv   QWORD PTR [edx+eiz*2]
  40955d:	arpl   sp,si
  40955f:	addr16 (bad) 
  409561:	rcr    DWORD PTR [edi-0x154ac853],1
  409567:	push   0x7c032bb7
  40956c:	push   0x41
  40956e:	aaa    
  40956f:	sbb    DWORD PTR [ebp+0x5f],ebp
  409572:	inc    edx
  409573:	mov    bh,0x57
  409575:	das    
  409576:	outs   dx,BYTE PTR ds:[esi]
  409577:	or     al,0x3c
  409579:	mov    fs,WORD PTR [edx+0x6a]
  40957c:	and    al,BYTE PTR [eax]
  40957e:	jnp    0x4095ec
  409580:	push   0xf
  409582:	jb     0x40959f
  409584:	mov    cl,0x38
  409586:	jmp    0xc0f05594
  40958b:	sub    ebp,eax
  40958d:	lahf   
  40958e:	xlat   BYTE PTR ds:[ebx]
  40958f:	dec    esi
  409590:	pop    es
  409591:	push   esi
  409592:	sbb    ecx,DWORD PTR [edi+0x3d]
  409595:	neg    DWORD PTR [ecx+0x28]
  409598:	sar    ebx,1
  40959a:	xlat   BYTE PTR ds:[ebx]
  40959b:	sbb    esp,eax
  40959d:	adc    al,0xa
  40959f:	xor    dh,BYTE PTR cs:[ecx-0x7a]
  4095a3:	sbb    ebx,DWORD PTR [eax+ecx*1-0x3984fa86]
  4095aa:	inc    DWORD PTR [ebx+ecx*2+0x68]
  4095ae:	push   ebx
  4095af:	repz test eax,0x2e1e548a
  4095b5:	fs out 0x9b,eax
  4095b8:	push   ecx
  4095b9:	xchg   edi,eax
  4095ba:	jl     0x409550
  4095bc:	xchg   BYTE PTR [ecx+0x7b],al
  4095bf:	or     edi,DWORD PTR [ecx+0x44]
  4095c2:	mov    gs,WORD PTR ds:0xfbe8db63
  4095c8:	cdq    
  4095c9:	fistp  QWORD PTR [ebp+0x2c]
  4095cc:	or     ecx,DWORD PTR [edx]
  4095ce:	mov    BYTE PTR [ebp+0x58],ch
  4095d1:	sub    BYTE PTR [edx],al
  4095d3:	sbb    eax,0xd4dd6740
  4095d8:	aam    0x32
  4095da:	adc    al,0x1d
  4095dc:	and    eax,0xaa864a7c
  4095e1:	pop    edi
  4095e2:	(bad)  
  4095e4:	pop    esp
  4095e5:	je     0x409612
  4095e7:	xchg   ecx,eax
  4095e8:	mov    esi,0x24b3b9c1
  4095ed:	es mov ch,ah
  4095f0:	cmp    DWORD PTR [eax+0x24],ecx
  4095f3:	mov    bh,0xa5
  4095f5:	into   
  4095f6:	test   al,0xbe
  4095f8:	shl    DWORD PTR [ecx+0x6497c5cc],1
  4095fe:	or     al,0xbe
  409600:	out    0x72,al
  409602:	xor    al,BYTE PTR [eax]
  409604:	mov    eax,DWORD PTR [ebp-0x4]
  409607:	mov    edi,DWORD PTR [ebp-0x8]
  40960a:	xor    edi,edx
  40960c:	add    edi,esi
  40960e:	mov    esi,DWORD PTR [ebp+0x8]
  409611:	imul   edi,ecx
  409614:	mov    ebx,DWORD PTR [ebp+0xc]
  409617:	xor    eax,edx
  409619:	add    eax,ecx
  40961b:	mov    al,BYTE PTR [ebx+eax*1+0x3272e6]
  409622:	mov    BYTE PTR [edi+esi*1],al
  409625:	mov    eax,DWORD PTR [ebp-0x8]
  409628:	mov    esi,DWORD PTR [ebp+0x10]
  40962b:	xor    eax,edx
  40962d:	xor    ebx,ebx
  40962f:	add    esi,0xfabdbee3
  409635:	adc    ebx,0xffffffff
  409638:	lea    ecx,[ecx+eax*1+0x3272e6]
  40963f:	xor    edi,edi
  409641:	xor    esi,0x8a29a131
  409647:	xor    ebx,0x0
  40964a:	mov    eax,ecx
  40964c:	add    eax,0xfabdbee3
  409651:	adc    edi,0xffffffff
  409654:	xor    eax,0x8a29a131
  409659:	xor    edi,0x0
  40965c:	cmp    eax,esi
  40965e:	jne    0x4095ff
  409664:	cmp    edi,ebx
  409666:	jne    0x4095ff
  40966c:	mov    eax,0xf89c8584
  409671:	pop    ebx
  409672:	pop    edi
  409673:	pop    esi
  409674:	leave  
  409675:	ret    0xc
  409678:	push   ebp
  409679:	mov    ebp,esp
  40967b:	push   ecx
  40967c:	or     DWORD PTR ds:0x42901c,edi
  409682:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  409689:	mov    eax,DWORD PTR [ebp+0x8]
  40968c:	add    ecx,DWORD PTR ds:0x428008
  409692:	movsx  eax,BYTE PTR [eax]
  409695:	xor    edx,DWORD PTR ds:0x427014
  40969b:	mov    edx,0x3272e6
  4096a0:	neg    ecx
  4096a2:	sub    eax,edx
  4096a4:	not    ecx
  4096a6:	mov    ecx,0x751089f
  4096ab:	add    DWORD PTR ds:0x428010,0x2183
  4096b5:	xor    eax,ecx
  4096b7:	mov    DWORD PTR ds:0x42a00c,0x238a
  4096c1:	cmp    eax,0xf89c85f8
  4096c6:	mov    DWORD PTR ds:0x427008,0x3722
  4096d0:	jne    0x40974d
  4096d6:	and    DWORD PTR ds:0x42701c,0x0
  4096e0:	jmp    0x4096f0
  4096e5:	mov    eax,ds:0x42701c
  4096ea:	inc    eax
  4096eb:	mov    ds:0x42701c,eax
  4096f0:	cmp    DWORD PTR ds:0x42701c,0x1d
  4096f7:	jae    0x409724
  4096fd:	cmp    DWORD PTR ds:0x42701c,0x28
  409704:	jb     0x409724
  40970a:	jmp    0x40971f
  40970f:	push   0x42c064
  409714:	push   0x42c088
  409719:	call   DWORD PTR ds:0x42cef9
  40971f:	jmp    0x4096e5
  409724:	mov    eax,DWORD PTR [ebp+0x8]
  409727:	push   esi
  409728:	mov    esi,DWORD PTR [ebp+0x8]
  40972b:	add    esi,DWORD PTR [eax+0x3c]
  40972e:	mov    DWORD PTR [ebp+0x8],esi
  409731:	mov    eax,DWORD PTR [ebp-0x4]
  409734:	mov    esi,DWORD PTR [ebp+0x8]
  409737:	xor    eax,ecx
  409739:	add    eax,edx
  40973b:	cmp    DWORD PTR [esi+0x54],eax
  40973e:	pop    esi
  40973f:	je     0x40974d
  409745:	mov    eax,DWORD PTR [ebp+0x8]
  409748:	jmp    0x409754
  40974d:	mov    eax,DWORD PTR [ebp-0x4]
  409750:	xor    eax,ecx
  409752:	add    eax,edx
  409754:	leave  
  409755:	ret    0x4
  409758:	push   ebp
  409759:	mov    ebp,esp
  40975b:	sub    esp,0x38
  40975e:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  409765:	mov    eax,ds:0x426014
  40976a:	and    DWORD PTR ds:0x426018,eax
  409770:	push   ebx
  409771:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  409778:	and    DWORD PTR ds:0x42601c,0x0
  409782:	xor    eax,eax
  409784:	xor    eax,DWORD PTR ds:0x42601c
  40978a:	inc    eax
  40978b:	mov    ds:0x42601c,eax
  409790:	cmp    DWORD PTR ds:0x42601c,0x28
  409797:	jl     0x4097b8
  40979d:	jmp    0x4097ab
  4097a2:	push   DWORD PTR [ebp-0x10]
  4097a5:	call   DWORD PTR ds:0x42cefd
  4097ab:	cmp    DWORD PTR ds:0x42601c,0x1e
  4097b2:	jb     0x409782
  4097b8:	mov    eax,DWORD PTR [ebp-0x4]
  4097bb:	push   esi
  4097bc:	mov    esi,DWORD PTR ds:0x42601c
  4097c2:	and    DWORD PTR ds:0x429018,esi
  4097c8:	mov    esi,0x751089f
  4097cd:	xor    eax,esi
  4097cf:	or     DWORD PTR ds:0x427014,0x6261
  4097d9:	push   edi
  4097da:	mov    edi,0x3272e6
  4097df:	add    eax,edi
  4097e1:	mov    DWORD PTR [ebp-0x1c],eax
  4097e4:	mov    eax,DWORD PTR [ebp+0x14]
  4097e7:	test   eax,eax
  4097e9:	mov    DWORD PTR ds:0x426020,0x4f90
  4097f3:	je     0x409801
  4097f9:	mov    eax,DWORD PTR [ebp+0x14]
  4097fc:	mov    eax,DWORD PTR [eax]
  4097fe:	mov    DWORD PTR [ebp-0x1c],eax
  409801:	mov    eax,DWORD PTR [ebp-0x4]
  409804:	xor    eax,esi
  409806:	adc    DWORD PTR ds:0x429004,0x6ba1
  409810:	add    eax,edi
  409812:	or     DWORD PTR ds:0x42601c,0x6a17
  40981c:	mov    DWORD PTR [ebp-0x8],eax
  40981f:	mov    eax,DWORD PTR [ebp-0xc]
  409822:	xor    eax,esi
  409824:	add    eax,edi
  409826:	and    DWORD PTR ds:0x429008,0x0
  409830:	mov    ebx,DWORD PTR ds:0x429008
  409836:	inc    ebx
  409837:	mov    DWORD PTR ds:0x429008,ebx
  40983d:	cmp    DWORD PTR ds:0x429008,0x7
  409844:	jle    0x409887
  40984a:	jmp    0x409860
  40984f:	push   DWORD PTR [ebp-0x28]
  409852:	push   DWORD PTR [ebp-0x10]
  409855:	push   0x57fd
  40985a:	call   DWORD PTR ds:0x42cecd
  409860:	cmp    DWORD PTR ds:0x429008,0x6
  409867:	jne    0x40987a
  40986d:	mov    ebx,DWORD PTR ds:0x429008
  409873:	inc    ebx
  409874:	mov    DWORD PTR ds:0x429008,ebx
  40987a:	cmp    DWORD PTR ds:0x429008,0x1f
  409881:	jb     0x409830
  409887:	mov    DWORD PTR [ebp-0x24],eax
  40988a:	mov    eax,DWORD PTR [ebp-0x4]
  40988d:	dec    DWORD PTR ds:0x426000
  409893:	xor    eax,esi
  409895:	add    eax,edi
  409897:	mov    DWORD PTR [ebp-0x30],eax
  40989a:	mov    eax,ds:0x428018
  40989f:	adc    DWORD PTR ds:0x42900c,eax
  4098a5:	mov    ebx,DWORD PTR [ebp-0x4]
  4098a8:	mov    eax,ds:0x42a000
  4098ad:	add    DWORD PTR ds:0x427010,eax
  4098b3:	xor    ebx,esi
  4098b5:	mov    eax,ds:0x426010
  4098ba:	xor    DWORD PTR ds:0x426020,eax
  4098c0:	add    ebx,edi
  4098c2:	xor    eax,DWORD PTR ds:0x427018
  4098c8:	mov    eax,DWORD PTR [ebp-0x24]
  4098cb:	sub    DWORD PTR ds:0x427008,0x42801c
  4098d5:	sub    eax,edi
  4098d7:	lea    ecx,[ebx-0x3272e6]
  4098dd:	xor    DWORD PTR ds:0x427014,0x6e
  4098e7:	xor    eax,esi
  4098e9:	sbb    DWORD PTR ds:0x42900c,0x78f
  4098f3:	xor    ecx,esi
  4098f5:	cmp    ecx,eax
  4098f7:	je     0x40bfca
  4098fd:	mov    eax,ds:0x42b014
  409902:	mov    eax,DWORD PTR [eax]
  409904:	add    DWORD PTR ds:0x428014,eax
  40990a:	mov    eax,DWORD PTR [ebp-0x4]
  40990d:	xor    DWORD PTR ds:0x42a004,0x42a01c
  409917:	xor    eax,esi
  409919:	add    eax,edi
  40991b:	cmp    ebx,eax
  40991d:	jne    0x40bf6b
  409923:	push   DWORD PTR [ebp+0x8]
  409926:	adc    DWORD PTR ds:0x428008,0x6b85
  409930:	call   0x409678
  409935:	mov    DWORD PTR [ebp-0x14],eax
  409938:	sub    eax,DWORD PTR ds:0x42801c
  40993e:	mov    eax,DWORD PTR [ebp-0x4]
  409941:	mov    ecx,DWORD PTR [ebp-0x14]
  409944:	sbb    DWORD PTR ds:0x428008,0x42801c
  40994e:	xor    eax,esi
  409950:	sbb    DWORD PTR ds:0x426018,0x3c60
  40995a:	add    eax,edi
  40995c:	mov    DWORD PTR ds:0x42801c,0x7033
  409966:	cmp    ecx,eax
  409968:	mov    DWORD PTR ds:0x427000,0x119f
  409972:	je     0x40e40a
  409978:	and    DWORD PTR ds:0x427018,0x42a000
  409982:	push   DWORD PTR [ebp-0x14]
  409985:	or     DWORD PTR ds:0x426020,0x3dc3
  40998f:	push   DWORD PTR [ebp+0x8]
  409992:	call   0x4111ab
  409997:	and    DWORD PTR ds:0x42601c,0x0
  4099a1:	jmp    0x4099b5
  4099a6:	xor    ecx,ecx
  4099a8:	add    ecx,DWORD PTR ds:0x42601c
  4099ae:	inc    ecx
  4099af:	mov    DWORD PTR ds:0x42601c,ecx
  4099b5:	cmp    DWORD PTR ds:0x42601c,0x18
  4099bc:	jae    0x4099e9
  4099c2:	cmp    DWORD PTR ds:0x42601c,0x1e
  4099c9:	jle    0x4099e9
  4099cf:	jmp    0x4099e4
  4099d4:	push   0x42900c
  4099d9:	push   0x42c0af
  4099de:	call   DWORD PTR ds:0x42ced1
  4099e4:	jmp    0x4099a6
  4099e9:	mov    DWORD PTR [ebp-0x14],eax
  4099ec:	and    DWORD PTR ds:0x42a004,0x4b9e
  4099f6:	mov    eax,DWORD PTR [ebp-0x4]
  4099f9:	mov    ecx,DWORD PTR [ebp-0x14]
  4099fc:	add    DWORD PTR ds:0x42a01c,0x2165
  409a06:	xor    eax,esi
  409a08:	xor    DWORD PTR ds:0x426014,0x42a000
  409a12:	add    eax,edi
  409a14:	mov    DWORD PTR ds:0x428008,0x2bdd
  409a1e:	cmp    ecx,eax
  409a20:	mov    DWORD PTR ds:0x429018,0x3738
  409a2a:	je     0x40e40a
  409a30:	add    eax,DWORD PTR ds:0x42a000
  409a36:	mov    eax,DWORD PTR [ebp-0x14]
  409a39:	mov    ecx,DWORD PTR ds:0x427018
  409a3f:	sub    DWORD PTR ds:0x429000,ecx
  409a45:	mov    eax,DWORD PTR [eax+0x18]
  409a48:	jmp    0x40bdf3
  409a4d:	mov    BYTE PTR ds:0xa3cbe2fe,ah
  409a53:	je     0x409a48
  409a55:	shl    BYTE PTR [edi+0x530cf800],0x4a
  409a5c:	add    al,0x4e
  409a5e:	push   es
  409a5f:	jo     0x409ad1
  409a61:	loop   0x409ac2
  409a63:	jo     0x409ad5
  409a65:	pop    ss
  409a66:	out    0xbe,eax
  409a68:	hlt    
  409a69:	rcl    BYTE PTR [ebp+0xfe7d19a],1
  409a6f:	imul   eax,ecx,0xffffffa5
  409a72:	jnp    0x409a68
  409a74:	xchg   esi,eax
  409a75:	leave  
  409a76:	xor    ebp,esp
  409a78:	pop    ebp
  409a79:	call   0xe3ce:0x7a0150
  409a80:	in     eax,0x21
  409a82:	inc    ebp
  409a83:	in     eax,dx
  409a84:	in     eax,0xf1
  409a86:	cmp    eax,0xffffffd6
  409a89:	shl    DWORD PTR [edi],1
  409a8b:	(bad)  
  409a8c:	sub    eax,DWORD PTR [edx-0x4c]
  409a8f:	rcl    BYTE PTR [ebp+ebp*2+0x77],0x17
  409a94:	rcl    al,cl
  409a96:	shl    DWORD PTR [ecx+eax*4-0x54bc63bd],0x33
  409a9e:	push   es
  409a9f:	dec    edi
  409aa0:	bound  ebp,QWORD PTR [edx-0x3c76deb7]
  409aa6:	fisttp DWORD PTR [edi-0x1d]
  409aa9:	push   ecx
  409aaa:	data16 lods al,BYTE PTR ds:[esi]
  409aac:	loopne 0x409a78
  409aae:	mov    edi,0x9c6f46c3
  409ab3:	iret   
  409ab4:	retf   0xabf3
  409ab7:	inc    ebx
  409ab8:	pop    ebp
  409ab9:	push   edi
  409aba:	push   ss
  409abb:	pop    ebx
  409abc:	push   esi
  409abd:	ret    0x7a45
  409ac0:	cdq    
  409ac1:	ficomp DWORD PTR [ecx]
  409ac3:	(bad)  
  409ac4:	xchg   esp,eax
  409ac5:	dec    edx
  409ac6:	xchg   ecx,eax
  409ac7:	xchg   esp,eax
  409ac8:	sbb    al,0xde
  409aca:	push   eax
  409acb:	and    ecx,DWORD PTR [esi+0x52]
  409ace:	pop    ss
  409acf:	jne    0x409ad2
  409ad1:	and    eax,DWORD PTR [esi-0x30]
  409ad4:	xchg   ebp,eax
  409ad5:	loope  0x409ab5
  409ad7:	fdivr  DWORD PTR [esp+eiz*2]
  409ada:	xor    ebx,ebx
  409adc:	and    edi,DWORD PTR [ecx-0x34]
  409adf:	lods   al,BYTE PTR ds:[esi]
  409ae0:	sub    cl,dh
  409ae2:	sbb    bl,BYTE PTR [esi+0x25b99c2b]
  409ae8:	mov    dl,0xd2
  409aea:	adc    dl,dh
  409aec:	push   esp
  409aed:	push   eax
  409aee:	pop    ds
  409aef:	(bad)  
  409af0:	cmp    BYTE PTR [ecx+0xf],dh
  409af3:	jmp    0xf95c6629
  409af8:	scas   al,BYTE PTR es:[edi]
  409af9:	mov    ch,0xb2
  409afb:	sbb    al,0xf5
  409afd:	pop    ecx
  409afe:	repnz rcr al,0xe3
  409b02:	fsub   QWORD PTR [eax]
  409b04:	jg     0x409ae5
  409b06:	sub    eax,0x43e99f51
  409b0b:	pop    es
  409b0c:	les    ebp,FWORD PTR [edi-0x55]
  409b0f:	out    0xdf,al
  409b11:	out    dx,eax
  409b12:	xchg   BYTE PTR [edx],dh
  409b14:	inc    edx
  409b15:	fistp  DWORD PTR [edx+0x5b]
  409b18:	les    ecx,FWORD PTR [edi-0x6b]
  409b1b:	retf   0x4fd
  409b1e:	lock arpl WORD PTR [ebp+ebp*1-0x7d90978c],sp
  409b26:	test   BYTE PTR [edx-0xc],cl
  409b29:	sbb    al,BYTE PTR [esi]
  409b2b:	in     eax,0x6e
  409b2d:	mov    dl,0x7d
  409b2f:	jge    0x409b1d
  409b31:	mov    edx,0x77a8b2fe
  409b36:	mov    edx,0xf6795067
  409b3b:	mov    eax,ds:0x4aa8bb0a
  409b40:	xchg   esp,eax
  409b41:	sbb    DWORD PTR [ebx+ebx*1],ebp
  409b44:	int3   
  409b45:	or     al,0x1d
  409b47:	jns    0x409b0b
  409b49:	sbb    BYTE PTR [ebx+0x21],ah
  409b4c:	mov    ch,0x84
  409b4e:	arpl   WORD PTR ds:0x6512d9,ax
  409b54:	mov    ecx,DWORD PTR [edx+0x137793dd]
  409b5a:	push   ss
  409b5b:	(bad)  
  409b5c:	xchg   esp,eax
  409b5d:	fs jo  0x409ae6
  409b60:	sub    DWORD PTR [eax+0x33],edi
  409b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b64:	mov    ebp,0x490d939c
  409b69:	mov    ch,0x6f
  409b6b:	pop    ds
  409b6c:	std    
  409b6d:	aad    0x82
  409b6f:	mov    ah,0xec
  409b71:	mov    ebx,esi
  409b73:	pop    ds
  409b74:	or     BYTE PTR [eax],cl
  409b76:	cmp    BYTE PTR [eax-0x6bcdf9d7],bl
  409b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b7d:	and    eax,0xa67efce9
  409b82:	lahf   
  409b83:	xor    eax,0xfa7c9db3
  409b88:	pop    ebp
  409b89:	stos   DWORD PTR es:[edi],eax
  409b8a:	mov    ah,0xb5
  409b8c:	aam    0x59
  409b8e:	cmp    al,0x17
  409b90:	mov    BYTE PTR [ebx-0x6ea94942],0x25
  409b97:	enter  0xd916,0x17
  409b9b:	dec    edx
  409b9c:	mov    ebx,0xb4c474d3
  409ba1:	mov    BYTE PTR [ebp+0x27],al
  409ba4:	mov    eax,ds:0x45706b25
  409ba9:	jg     0x409b95
  409bab:	sbb    ecx,ebx
  409bad:	retf   
  409bae:	sub    al,0x8
  409bb0:	mov    edx,0xfd198c5c
  409bb5:	xor    ecx,DWORD PTR [esi-0x60e8141f]
  409bbb:	and    al,0x5f
  409bbd:	push   eax
  409bbe:	iret   
  409bbf:	xchg   DWORD PTR [edx],edi
  409bc1:	add    BYTE PTR [eax],al
  409bc3:	inc    edx
  409bc4:	shl    BYTE PTR [eax+0x65],cl
  409bc7:	fdivr  DWORD PTR [edi+edi*2]
  409bca:	jl     0x409bb0
  409bcc:	ins    BYTE PTR es:[edi],dx
  409bcd:	pop    esi
  409bce:	jae    0x409b92
  409bd0:	(bad)  
  409bd2:	ret    0x9bb1
  409bd5:	push   esp
  409bd6:	cs add eax,edi
  409bd9:	mov    cl,0x9a
  409bdb:	sub    esi,esi
  409bdd:	jge    0x409c46
  409bdf:	sbb    DWORD PTR [esi],ecx
  409be1:	xchg   BYTE PTR [ebx-0x486c3d3a],ch
  409be7:	inc    esi
  409be8:	daa    
  409be9:	retf   
  409bea:	adc    eax,0x3ebf3d90
  409bef:	xor    al,0xe8
  409bf1:	adc    eax,0x1a153021
  409bf6:	lods   al,BYTE PTR ds:[esi]
  409bf7:	and    esp,esp
  409bf9:	or     al,0x1
  409bfb:	dec    esi
  409bfc:	mov    ds:0x791240d3,al
  409c01:	or     eax,0xb2700867
  409c06:	imul   ebp,DWORD PTR [ebx],0x6d
  409c09:	dec    edi
  409c0a:	outs   dx,BYTE PTR ds:[esi]
  409c0b:	sub    DWORD PTR [edi+0x60],ebp
  409c0e:	inc    ebx
  409c0f:	cmp    dh,dl
  409c11:	retf   0xcd9e
  409c14:	pop    edi
  409c15:	call   0x17f223e2
  409c1a:	loop   0x409bf1
  409c1c:	jg     0x409c8b
  409c1e:	fs js  0x409c0e
  409c21:	jp     0x409c7a
  409c23:	sbb    BYTE PTR [edx],bl
  409c25:	mov    esp,0xcc6369c2
  409c2a:	call   0xeefd990d
  409c2f:	stos   DWORD PTR es:[edi],eax
  409c30:	ja     0x409bc8
  409c32:	lods   eax,DWORD PTR ds:[esi]
  409c33:	(bad)  
  409c34:	retf   0x4692
  409c37:	int    0x51
  409c39:	in     eax,dx
  409c3a:	mov    cl,0x62
  409c3c:	cdq    
  409c3d:	cmp    ah,BYTE PTR [ecx+0x1b92e918]
  409c43:	test   DWORD PTR [esi+0x2b],ebp
  409c46:	retf   
  409c47:	adc    BYTE PTR [ebx+eiz*8+0x54],al
  409c4b:	inc    ecx
  409c4c:	pop    edx
  409c4d:	add    BYTE PTR [edi+0x58b8e58e],0x5d
  409c54:	jg     0x409cb5
  409c56:	pop    ebp
  409c57:	(bad)  
  409c58:	lock pop ebp
  409c5a:	push   0x7a
  409c5c:	inc    ebx
  409c5d:	scas   eax,DWORD PTR es:[edi]
  409c5e:	sub    cl,BYTE PTR [ebx+0x33]
  409c61:	jg     0x409c41
  409c63:	pushf  
  409c64:	test   BYTE PTR [ecx-0x70440cf9],cl
  409c6a:	jecxz  0x409c79
  409c6c:	test   eax,0xda0ac085
  409c71:	pop    ebp
  409c72:	pop    edx
  409c73:	add    eax,0x239a6b2f
  409c78:	jge    0x409cbe
  409c7a:	lahf   
  409c7b:	sub    al,0x7c
  409c7d:	jmp    0x409c7f
  409c7f:	sbb    cl,bh
  409c81:	jbe    0x409ce6
  409c83:	ins    DWORD PTR es:[edi],dx
  409c84:	and    bl,dl
  409c86:	pop    ebx
  409c87:	dec    esp
  409c88:	sub    eax,0x2ca82ead
  409c8d:	xchg   edi,eax
  409c8e:	push   esi
  409c8f:	add    eax,0x8a80378e
  409c94:	(bad)  
  409c96:	in     al,dx
  409c97:	or     edx,DWORD PTR [ecx+0x65317c5f]
  409c9d:	add    dh,BYTE PTR [ecx+0x5ab7fe9e]
  409ca3:	inc    esp
  409ca4:	adc    DWORD PTR [eax-0x22],edi
  409ca7:	addr16 cli 
  409ca9:	cmp    ebx,ebp
  409cab:	leave  
  409cac:	xchg   edx,eax
  409cad:	pop    ds
  409cae:	push   ds
  409caf:	adc    ch,BYTE PTR [eax]
  409cb1:	push   ds
  409cb2:	imul   ebx,esi,0xfa8c131
  409cb8:	call   0xdb4bd64d
  409cbd:	nop
  409cbe:	clc    
  409cbf:	leave  
  409cc0:	retf   0x398d
  409cc3:	les    esp,FWORD PTR [edi]
  409cc5:	loop   0x409ce1
  409cc7:	daa    
  409cc8:	ss and eax,0xbca2306
  409cce:	mov    ebp,0xbc25e243
  409cd3:	xchg   ebp,eax
  409cd4:	stos   DWORD PTR es:[edi],eax
  409cd5:	and    eax,0x9ae6f732
  409cda:	ins    BYTE PTR es:[edi],dx
  409cdb:	fild   WORD PTR [ecx-0x3d5beebb]
  409ce1:	mul    bl
  409ce3:	xor    ebx,DWORD PTR [edx-0xe]
  409ce6:	push   ecx
  409ce7:	jle    0x409ca7
  409ce9:	and    BYTE PTR [edi],0x64
  409cec:	in     eax,dx
  409ced:	mov    eax,0xbc6760b4
  409cf2:	loopne 0x409d15
  409cf4:	xor    BYTE PTR [edi-0x711ad3cb],bl
  409cfa:	sti    
  409cfb:	sub    ecx,ebp
  409cfd:	xchg   esp,eax
  409cfe:	loopne 0x409c9b
  409d00:	pop    es
  409d01:	imul   edi,edx,0xffffffef
  409d04:	lea    edx,[edi]
  409d06:	call   0x7b65:0x3969743b
  409d0d:	pop    es
  409d0e:	iret   
  409d0f:	xor    dh,cl
  409d11:	mov    eax,ds:0xb7079f55
  409d16:	or     ch,BYTE PTR [esi+0x5bd8505c]
  409d1c:	cmc    
  409d1d:	lods   eax,DWORD PTR ds:[esi]
  409d1e:	retf   
  409d1f:	repnz hlt 
  409d21:	fidiv  WORD PTR ds:0xb83a9fdf
  409d27:	sbb    edx,DWORD PTR [ecx+0x5514246b]
  409d2d:	fild   WORD PTR [ecx+0x6b9b2fdb]
  409d33:	jo     0x409d23
  409d35:	inc    edx
  409d36:	fwait
  409d37:	in     eax,0x19
  409d39:	ins    DWORD PTR es:[edi],dx
  409d3a:	fiadd  WORD PTR [ecx+ebp*4+0x75ad292f]
  409d41:	push   0x69d0be78
  409d46:	pop    ebp
  409d47:	push   ds
  409d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d49:	push   0xffffff96
  409d4b:	push   esi
  409d4c:	sub    DWORD PTR [edx+ebp*1+0x42],esi
  409d50:	sub    al,0x1f
  409d52:	call   0x8e80:0x3d9f5f06
  409d59:	in     al,dx
  409d5a:	xchg   DWORD PTR [edi+edi*2],eax
  409d5d:	sbb    eax,0x4c2b2497
  409d62:	mov    ebx,0x5d7fffcb
  409d67:	daa    
  409d68:	push   es
  409d69:	push   ss
  409d6a:	pop    ecx
  409d6b:	lock (bad) 
  409d6e:	and    esi,esp
  409d70:	popf   
  409d71:	push   0x36ae2bbd
  409d76:	repz gs push ds
  409d79:	push   cs
  409d7a:	mov    dh,0xf3
  409d7c:	jle    0x409d3d
  409d7e:	shl    BYTE PTR [edx-0x53],1
  409d81:	xchg   esp,eax
  409d82:	mov    edx,0xebdc6eac
  409d87:	lahf   
  409d88:	dec    ecx
  409d89:	shl    DWORD PTR [ebx-0x5a],cl
  409d8c:	push   0xf9cecd12
  409d91:	sub    bl,BYTE PTR [edx-0x7e]
  409d94:	dec    ebx
  409d95:	fst    DWORD PTR [edi]
  409d97:	shl    DWORD PTR [esi+0x7e],0xa7
  409d9b:	stc    
  409d9c:	mov    gs,WORD PTR [ecx+eax*2-0x7c8bef17]
  409da3:	(bad)  
  409da4:	out    dx,eax
  409da5:	sbb    al,BYTE PTR [esi]
  409da7:	push   esp
  409da8:	add    DWORD PTR [eax],0xb2d455b2
  409dae:	fistp  DWORD PTR [esi-0x7d2af8ac]
  409db4:	mov    DWORD PTR [edx-0x2c45805c],0xb7e21055
  409dbe:	dec    edx
  409dbf:	pop    ds
  409dc0:	dec    edx
  409dc1:	pop    ecx
  409dc2:	inc    esp
  409dc3:	out    dx,al
  409dc4:	test   eax,0xdcd04cd1
  409dc9:	or     dh,BYTE PTR [eax-0x68]
  409dcc:	iret   
  409dcd:	xchg   ecx,eax
  409dce:	vpcmpeqw xmm5,xmm4,XMMWORD PTR [ecx]
  409dd2:	inc    ebp
  409dd3:	imul   DWORD PTR [eax]
  409dd5:	sub    bl,cl
  409dd7:	sub    ch,BYTE PTR [eax]
  409dd9:	adc    al,0xf
  409ddb:	sub    BYTE PTR [ebx],ah
  409ddd:	in     al,0xc4
  409ddf:	push   0xc
  409de1:	xchg   ebx,eax
  409de2:	cmp    eax,0x6b33535
  409de7:	ds cli 
  409de9:	arpl   WORD PTR [ebp+0x57],si
  409dec:	inc    esi
  409dee:	test   BYTE PTR ds:0x2a3bc9f4,bl
  409df4:	fmul   QWORD PTR [ecx+0x20]
  409df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409df8:	leave  
  409df9:	mov    al,ds:0xb696e695
  409dfe:	sahf   
  409dff:	(bad)  
  409e00:	das    
  409e01:	add    ecx,edi
  409e03:	and    BYTE PTR [eax+edx*2-0x3a3665f8],0x18
  409e0b:	enter  0x35fe,0x27
  409e0f:	push   ebx
  409e10:	xor    DWORD PTR [ebx],0xb03956ff
  409e16:	out    0x2c,eax
  409e18:	mov    esp,0x437c5f28
  409e1d:	test   DWORD PTR [ecx],ecx
  409e1f:	xchg   esi,eax
  409e20:	aaa    
  409e21:	ror    DWORD PTR ds:0xa564c55e,cl
  409e27:	fcomp  QWORD PTR [ecx]
  409e29:	hlt    
  409e2a:	mov    esi,0x5939d4a7
  409e2f:	jle    0x409e74
  409e31:	retf   
  409e32:	fisttp WORD PTR [ebx+0x96ebc97]
  409e38:	mov    edx,0xe21c3771
  409e3d:	adc    dh,BYTE PTR [ebx+0x5e]
  409e40:	jbe    0x409ec0
  409e42:	push   ecx
  409e43:	jle    0x409e5c
  409e45:	imul   edx,DWORD PTR [edx-0x569e5d0e],0x71
  409e4c:	pop    edx
  409e4d:	out    dx,eax
  409e4e:	nop
  409e4f:	enter  0xc4f8,0xc3
  409e53:	jbe    0x409ddd
  409e55:	rcr    DWORD PTR [edi],0x89
  409e58:	adc    eax,0xc12e680e
  409e5d:	push   cs
  409e5e:	test   DWORD PTR [edx+edi*2+0x21],ebx
  409e62:	push   ds
  409e63:	fld    TBYTE PTR [ecx+0x36]
  409e66:	cmp    BYTE PTR [eax+0x1a61d187],0x6b
  409e6d:	div    DWORD PTR [edi-0x55f0c381]
  409e73:	std    
  409e74:	mov    edx,0xaf666df3
  409e79:	call   0x685de07e
  409e7e:	mov    fs,edi
  409e80:	jge    0x409e6c
  409e82:	push   0xafc60c8c
  409e87:	mov    ds:0x39bd6ebb,al
  409e8c:	fnstsw WORD PTR [edx+0x39]
  409e8f:	out    0xe7,eax
  409e91:	rol    DWORD PTR [esi-0x72],1
  409e94:	mov    eax,0xc6b85629
  409e99:	out    0x86,al
  409e9b:	and    ebp,DWORD PTR [ecx]
  409e9d:	ja     0x409e4f
  409e9f:	inc    edx
  409ea0:	pop    ecx
  409ea1:	std    
  409ea2:	test   bh,dh
  409ea4:	leave  
  409ea5:	dec    edi
  409ea6:	retf   0x134b
  409ea9:	aad    0xe3
  409eab:	xlat   BYTE PTR ds:[ebx]
  409eac:	cli    
  409ead:	retf   
  409eae:	jp     0x409efd
  409eb0:	jo     0x409e65
  409eb2:	jmp    0x409ea4
  409eb4:	mul    DWORD PTR [ebx-0x58]
  409eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eb8:	jb     0x409e8c
  409eba:	pusha  
  409ebb:	and    BYTE PTR [esi],al
  409ebd:	clc    
  409ebe:	xor    ebx,eax
  409ec0:	push   edi
  409ec1:	adc    eax,0xacd203f1
  409ec6:	dec    esi
  409ec7:	pop    esp
  409ec8:	xchg   DWORD PTR [edi-0x17],ebx
  409ecb:	scas   al,BYTE PTR es:[edi]
  409ecc:	xor    al,0x56
  409ece:	retf   
  409ecf:	ins    BYTE PTR es:[edi],dx
  409ed0:	pop    ebp
  409ed1:	mov    ch,0x54
  409ed3:	(bad)
  409ed7:	pop    eax
  409ed8:	data16 sahf 
  409eda:	stc    
  409edb:	out    0xbc,al
  409edd:	outs   dx,DWORD PTR ds:[esi]
  409ede:	sbb    al,0xf7
  409ee0:	push   esp
  409ee1:	dec    esp
  409ee2:	inc    edx
  409ee3:	inc    ebx
  409ee4:	xor    ch,BYTE PTR [edi+0x3f5ce768]
  409eea:	lds    esp,FWORD PTR [ebx]
  409eec:	mov    eax,ds:0x5978efcd
  409ef1:	pop    es
  409ef2:	or     DWORD PTR ds:0xfb5000ca,esi
  409ef8:	inc    ecx
  409ef9:	sar    DWORD PTR [ebx+0x7f7f8e30],0x4f
  409f00:	mov    ds:0xeceab239,eax
  409f05:	adc    BYTE PTR [esi+0x869b6c6],bh
  409f0b:	pop    edx
  409f0c:	(bad)  
  409f0d:	aam    0xd5
  409f0f:	repz push ecx
  409f11:	cmp    eax,0x66fb2bcc
  409f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f17:	test   eax,0xe579e279
  409f1c:	adc    DWORD PTR [edx],ecx
  409f1e:	jmp    0x5f242bd0
  409f23:	adc    BYTE PTR [esi+ecx*8+0xc],dh
  409f27:	push   ebx
  409f28:	retf   0xf0bd
  409f2b:	add    DWORD PTR [edx+0x3c92b9ff],ebx
  409f31:	add    dh,BYTE PTR ds:0x704f035f
  409f37:	bound  edx,QWORD PTR [ebp+0x76]
  409f3a:	push   esi
  409f3b:	pop    edi
  409f3c:	mov    cl,0xec
  409f3e:	xchg   ebp,eax
  409f3f:	loopne 0x409fb6
  409f41:	sbb    al,BYTE PTR [esi-0x12981c3d]
  409f47:	or     DWORD PTR [ecx+0x3b],ecx
  409f4a:	fild   DWORD PTR [eax+0x4b]
  409f4d:	ret    0xca52
  409f50:	ins    BYTE PTR es:[edi],dx
  409f51:	shl    BYTE PTR [ebx-0x38e74fec],1
  409f57:	or     bl,ch
  409f59:	mov    al,0xfd
  409f5b:	xadd   BYTE PTR [edx-0x6ab817a1],ch
  409f62:	push   edx
  409f63:	(bad)  
  409f64:	icebp  
  409f65:	jno    0x409fc0
  409f67:	icebp  
  409f68:	mov    fs,WORD PTR [esi-0x2200fe09]
  409f6e:	jmp    0x608a:0x7bf66b75
  409f75:	fnsave ds:0x3fbe51c2
  409f7b:	push   ebp
  409f7c:	or     al,0x36
  409f7e:	cmp    ebx,DWORD PTR [edx-0x7ba30796]
  409f84:	stos   BYTE PTR es:[edi],al
  409f85:	inc    edi
  409f86:	mov    al,ds:0x85ec4389
  409f8b:	jbe    0x40a005
  409f8d:	sti    
  409f8e:	inc    ecx
  409f8f:	(bad)  
  409f90:	jle    0x409f2a
  409f92:	mov    al,0xd2
  409f94:	and    DWORD PTR [edi-0x7993878a],ebx
  409f9a:	fst    QWORD PTR [ecx-0x74]
  409f9d:	in     eax,0x87
  409f9f:	jns    0x409f40
  409fa1:	inc    eax
  409fa2:	jno    0x409f2e
  409fa4:	ss fxam 
  409fa7:	dec    esi
  409fa8:	shr    DWORD PTR [esi-0x5f],cl
  409fab:	jmp    0x7d33aa69
  409fb0:	gs ja  0x409fd5
  409fb3:	jge    0x409f36
  409fb5:	es jns 0x409f9b
  409fb8:	jmp    0x40a021
  409fba:	loopne 0x409f91
  409fbc:	ror    ch,0x48
  409fbf:	add    eax,0x9bea9e5e
  409fc4:	jo     0x409ff5
  409fc6:	and    bl,cl
  409fc8:	xchg   esp,eax
  409fc9:	scas   eax,DWORD PTR es:[edi]
  409fca:	xor    ch,BYTE PTR [ecx+0x31e0e12b]
  409fd0:	in     al,dx
  409fd1:	add    al,0x2c
  409fd3:	xchg   esi,eax
  409fd4:	cmp    BYTE PTR [ebp+eax*4+0x2ef224fc],bl
  409fdb:	jmp    0x409fae
  409fdd:	sbb    DWORD PTR [ecx-0x1f23c248],ebp
  409fe3:	push   ds
  409fe4:	adc    al,0xeb
  409fe6:	add    al,0x0
  409fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe9:	sbb    eax,0xedf7945e
  409fee:	cmp    BYTE PTR [ebx-0x58],dl
  409ff1:	add    al,0xb9
  409ff3:	aad    0x16
  409ff5:	jl     0x40a070
  409ff7:	push   ebp
  409ff8:	push   esi
  409ff9:	popf   
  409ffa:	or     ah,BYTE PTR [ebx-0x50]
  409ffd:	aaa    
  409ffe:	into   
  409fff:	push   ecx
  40a000:	cmp    DWORD PTR [eax],0xfffffff5
  40a003:	cmp    al,0xba
  40a005:	jne    0x409ffe
  40a007:	cwde   
  40a008:	dec    ebx
  40a009:	imul   ebx,DWORD PTR [esi+ebx*1],0x40b95717
  40a010:	loope  0x40a065
  40a012:	imul   BYTE PTR [edi-0x14]
  40a015:	fwait
  40a016:	adc    bl,BYTE PTR [eax-0x65]
  40a019:	pushf  
  40a01a:	inc    ebx
  40a01b:	mov    ds:0xc469d2e3,eax
  40a020:	push   es
  40a021:	inc    ebx
  40a022:	cld    
  40a023:	push   ss
  40a024:	fidiv  WORD PTR [ecx-0x46]
  40a027:	aam    0xd2
  40a029:	xchg   edx,eax
  40a02a:	add    al,0x5a
  40a02c:	retf   0x4ad0
  40a02f:	and    esi,DWORD PTR [edx+ecx*4-0x2c]
  40a033:	mov    esp,0x185a1e66
  40a038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a039:	dec    esi
  40a03a:	push   es
  40a03b:	pop    ss
  40a03c:	mov    edi,DWORD PTR [edi-0x6e]
  40a03f:	adc    al,0x54
  40a041:	sti    
  40a042:	dec    ebp
  40a043:	pushf  
  40a044:	sbb    esi,eax
  40a046:	pop    ds
  40a047:	cmp    DWORD PTR ds:0xdb1f4eca,esp
  40a04d:	fist   WORD PTR [edi]
  40a04f:	cmc    
  40a050:	sahf   
  40a051:	xor    bh,BYTE PTR [edx]
  40a053:	dec    ebx
  40a054:	fs pushfw 
  40a057:	fcom   QWORD PTR [ebp+edi*8-0x23]
  40a05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a05c:	or     edi,DWORD PTR [ebp-0x51]
  40a05f:	lahf   
  40a060:	ss jle 0x40a05d
  40a063:	out    dx,al
  40a064:	xlat   BYTE PTR ds:[ebx]
  40a065:	mov    esp,0x9c0a009e
  40a06a:	sbb    DWORD PTR [esi],esi
  40a06c:	sbb    bh,BYTE PTR [esi+0x75]
  40a06f:	sbb    BYTE PTR [edi+eiz*4],0x3c
  40a073:	shl    DWORD PTR [eax+0x9da9b0b],0x5
  40a07a:	mov    esi,0xb81a8c1b
  40a07f:	dec    eax
  40a080:	push   cs
  40a081:	sbb    dh,BYTE PTR [eax+0x963def7]
  40a087:	fisttp DWORD PTR [ebp+0x3]
  40a08a:	ror    DWORD PTR [eax+0x5a2ca071],1
  40a090:	xor    al,BYTE PTR [esi+0x2c]
  40a093:	mov    ds:0x8275eafc,al
  40a098:	and    BYTE PTR [esi],dh
  40a09a:	fidivr WORD PTR [esi+0x45c644f4]
  40a0a0:	into   
  40a0a1:	fimul  DWORD PTR [edi+edx*1+0x7bff9cd2]
  40a0a8:	mov    bl,0xfb
  40a0aa:	rcl    DWORD PTR [edx+0x1a1eaabe],1
  40a0b0:	mov    ebx,0x9fbe643b
  40a0b5:	js     0x40a0fb
  40a0b7:	push   edi
  40a0b8:	mov    esi,0x526b494d
  40a0bd:	jle    0x40a0f0
  40a0bf:	adc    DWORD PTR [ecx-0x26fadae3],eax
  40a0c5:	pop    ss
  40a0c6:	retf   
  40a0c7:	xchg   eax,edi
  40a0c9:	and    ecx,ecx
  40a0cb:	push   0x5b78d896
  40a0d0:	cdq    
  40a0d1:	pop    esi
  40a0d2:	sbb    eax,0xa89cf114
  40a0d7:	stc    
  40a0d8:	sti    
  40a0d9:	xchg   ebp,eax
  40a0da:	and    ebx,DWORD PTR [esi+esi*8-0x79]
  40a0de:	pop    ds
  40a0df:	add    DWORD PTR [ebp+edi*2-0x2d],0x75966bc0
  40a0e7:	imul   esp,esp,0x68
  40a0ea:	loop   0x40a129
  40a0ec:	mov    cl,0xe3
  40a0ee:	hlt    
  40a0ef:	test   eax,0xb2d45ad8
  40a0f4:	and    BYTE PTR [edx+0x65],cl
  40a0f7:	inc    esp
  40a0f8:	mov    ecx,0x24aaf8c0
  40a0fd:	dec    ebx
  40a0fe:	add    BYTE PTR [edx],0x44
  40a101:	mov    eax,0xa6c9f5e5
  40a106:	popa   
  40a107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a108:	add    DWORD PTR [ebx+0xf1b2de2],0x77
  40a10f:	in     eax,dx
  40a110:	out    0xd8,eax
  40a112:	cli    
  40a113:	inc    ebx
  40a114:	dec    edx
  40a115:	ret    
  40a116:	fmul   QWORD PTR [ecx-0x48]
  40a119:	popa   
  40a11a:	fwait
  40a11b:	jg     0x40a101
  40a11d:	pop    eax
  40a11e:	push   ecx
  40a11f:	xchg   DWORD PTR [ebx-0x66066442],esi
  40a125:	les    ebx,FWORD PTR [ecx+eax*1]
  40a128:	dec    esp
  40a129:	jge    0x40a0f7
  40a12b:	das    
  40a12c:	add    ebp,DWORD PTR [edi]
  40a12e:	icebp  
  40a12f:	mov    ecx,DWORD PTR [esi-0x2a5e86a4]
  40a135:	popa   
  40a136:	out    dx,al
  40a137:	jmp    0x9cd1:0x30e1498d
  40a13e:	inc    edx
  40a13f:	stos   BYTE PTR es:[edi],al
  40a140:	sbb    BYTE PTR [ebx+eax*4-0x751d8676],dl
  40a147:	fwait
  40a148:	jg     0x40a10b
  40a14a:	in     eax,0x59
  40a14c:	out    0x54,eax
  40a14e:	lahf   
  40a14f:	enter  0x87fd,0x59
  40a153:	sub    DWORD PTR [edi],edi
  40a155:	pop    esp
  40a156:	adc    bl,BYTE PTR [ecx]
  40a158:	mov    BYTE PTR [edi-0x7d16657b],dl
  40a15e:	cdq    
  40a15f:	cdq    
  40a160:	and    ah,bh
  40a162:	mov    bh,0x95
  40a164:	and    cl,BYTE PTR [edx]
  40a166:	leave  
  40a167:	push   ebp
  40a168:	or     DWORD PTR [edx+0x65],0xac761380
  40a16f:	das    
  40a170:	mov    ah,0x15
  40a172:	rcr    eax,1
  40a174:	jmp    0xae21:0x3446fb45
  40a17b:	clc    
  40a17c:	js     0x40a196
  40a17e:	and    BYTE PTR [edi+0x75],ah
  40a181:	cmp    al,cl
  40a183:	xlat   BYTE PTR ds:[ebx]
  40a184:	(bad)  
  40a185:	(bad)  
  40a186:	(bad)  
  40a188:	scas   al,BYTE PTR es:[edi]
  40a189:	xchg   esi,eax
  40a18a:	lods   al,BYTE PTR ds:[esi]
  40a18b:	test   BYTE PTR [eax+0x7b391e9e],bh
  40a191:	xor    BYTE PTR [ebp-0x1a149f4c],al
  40a197:	cmc    
  40a198:	ds int3 
  40a19a:	jbe    0x40a12e
  40a19c:	dec    eax
  40a19d:	xchg   ebx,eax
  40a19e:	inc    ebp
  40a19f:	jns    0x40a131
  40a1a1:	cmp    edx,DWORD PTR [edi-0x65]
  40a1a4:	add    eax,0x948cfb44
  40a1a9:	daa    
  40a1aa:	push   0x1b603715
  40a1af:	xchg   edx,eax
  40a1b0:	mov    al,ds:0x506406e9
  40a1b5:	mov    eax,ds:0x3daf50d8
  40a1ba:	out    dx,al
  40a1bb:	add    eax,0xa389e370
  40a1c0:	push   ebp
  40a1c1:	sbb    al,0x59
  40a1c3:	mov    esp,0xf32c90fe
  40a1c8:	and    cl,BYTE PTR [edi]
  40a1ca:	sub    eax,0x9fe78b59
  40a1cf:	add    edx,DWORD PTR [esi+0x4b]
  40a1d2:	adc    eax,0x241db2aa
  40a1d7:	inc    ebp
  40a1d8:	jne    0x40a1a0
  40a1da:	fsub   DWORD PTR [edi+0x3]
  40a1dd:	sub    ch,ah
  40a1df:	icebp  
  40a1e0:	imul   esi,DWORD PTR ds:0x6628ded1,0xffffffae
  40a1e7:	(bad)  
  40a1e9:	js     0x40a21a
  40a1eb:	cmp    al,0x64
  40a1ed:	in     al,dx
  40a1ee:	adc    BYTE PTR [edi],al
  40a1f0:	push   ds
  40a1f1:	or     eax,0x2adad326
  40a1f6:	in     eax,0x6f
  40a1f8:	stos   DWORD PTR es:[edi],eax
  40a1f9:	inc    DWORD PTR [ebx]
  40a1fb:	fbstp  TBYTE PTR [ebx]
  40a1fd:	icebp  
  40a1fe:	fcom   DWORD PTR [ecx+eiz*1+0x6c18006b]
  40a205:	int3   
  40a206:	sbb    eax,0x7c90594f
  40a20b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a20c:	add    esp,DWORD PTR [ecx+0x31718c65]
  40a212:	pushf  
  40a213:	cmp    al,BYTE PTR [esi]
  40a215:	adc    BYTE PTR [ebp+0x62],bl
  40a218:	mov    al,ds:0xb333c7ea
  40a21d:	(bad)  
  40a21e:	popa   
  40a21f:	rcr    DWORD PTR [ebx],1
  40a221:	out    dx,eax
  40a222:	pop    ss
  40a223:	mov    dh,0xa
  40a225:	mov    cl,0x94
  40a227:	xor    eax,0x451f7363
  40a22c:	add    bh,BYTE PTR [ebx+esi*4-0x7ba59c85]
  40a233:	adc    cl,bh
  40a235:	test   al,bl
  40a237:	xor    eax,0xed0644e9
  40a23c:	mov    ch,0x7a
  40a23e:	int    0x78
  40a240:	ds dec eax
  40a242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a243:	les    esi,FWORD PTR [eax-0x30]
  40a246:	les    ebx,FWORD PTR [edx]
  40a248:	and    DWORD PTR [esi-0x2460bf87],edx
  40a24e:	lock rcl DWORD PTR [edx+0x680d89cf],0xc8
  40a256:	fs add al,0xf7
  40a259:	add    al,0xbf
  40a25b:	jmp    DWORD PTR [edx-0x1465c804]
  40a261:	jbe    0x40a25f
  40a263:	mov    esi,0xcf667606
  40a268:	add    edi,DWORD PTR [edi+0x34cead6c]
  40a26e:	ror    BYTE PTR [edi+0x4cfaff4b],0x76
  40a275:	dec    esp
  40a276:	dec    esp
  40a277:	ds jecxz 0x40a2c8
  40a27a:	pop    ds
  40a27b:	or     DWORD PTR [eax+0x10],ecx
  40a27e:	enter  0xc76b,0x16
  40a282:	pcmpeqb mm6,mm7
  40a285:	mov    esp,0xddf0c1ee
  40a28a:	mov    cl,0x4b
  40a28c:	(bad)  
  40a28d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a28e:	fnsave [edx]
  40a290:	sti    
  40a291:	pop    es
  40a292:	pop    ss
  40a293:	ins    DWORD PTR es:[edi],dx
  40a294:	hlt    
  40a295:	push   es
  40a296:	adc    DWORD PTR [eax],0x4c
  40a299:	push   edi
  40a29a:	pop    esi
  40a29b:	out    0xde,eax
  40a29d:	mov    eax,0xcf23809a
  40a2a2:	hlt    
  40a2a3:	je     0x40a25f
  40a2a5:	and    al,0x12
  40a2a7:	lods   eax,DWORD PTR ds:[esi]
  40a2a8:	sub    BYTE PTR [edi-0x5559caef],dl
  40a2ae:	add    eax,0x2c9906e1
  40a2b3:	adc    esp,DWORD PTR [esi-0x65]
  40a2b6:	add    al,0x88
  40a2b8:	fwait
  40a2b9:	and    DWORD PTR [edi],0xffffffac
  40a2bc:	daa    
  40a2bd:	xor    cl,BYTE PTR [esi-0x32]
  40a2c0:	xchg   ecx,eax
  40a2c1:	gs pop edi
  40a2c3:	out    dx,eax
  40a2c4:	aaa    
  40a2c5:	or     ah,BYTE PTR [esi+0x2d27a5b9]
  40a2cb:	inc    edx
  40a2cc:	cmc    
  40a2cd:	mov    ch,0xb1
  40a2cf:	loope  0x40a2eb
  40a2d1:	inc    eax
  40a2d2:	jne    0x40a2ce
  40a2d4:	gs es scas al,BYTE PTR es:[edi]
  40a2d7:	lods   al,BYTE PTR ds:[esi]
  40a2d8:	xchg   edi,eax
  40a2d9:	in     eax,dx
  40a2da:	push   cs
  40a2db:	lea    ebp,[ebp+0x684898d9]
  40a2e1:	push   ss
  40a2e2:	or     eax,0x489acc2f
  40a2e7:	(bad)  
  40a2e8:	loopne 0x40a26d
  40a2ea:	xor    DWORD PTR [esi+ebx*2-0x62d0f38e],0x45
  40a2f2:	inc    ebp
  40a2f3:	idiv   DWORD PTR [ebp-0x42514698]
  40a2f9:	and    DWORD PTR [esi+0x6b],ebx
  40a2fc:	loopne 0x40a2ec
  40a2fe:	cdq    
  40a2ff:	add    dh,BYTE PTR [edx]
  40a301:	aad    0x3a
  40a303:	lods   eax,DWORD PTR ds:[esi]
  40a304:	cwde   
  40a305:	mov    eax,ds:0xafdb587
  40a30a:	or     DWORD PTR [eax+0x1f82302d],edi
  40a310:	imul   ebx,edi,0x3def28bf
  40a316:	repnz loop 0x40a378
  40a319:	dec    esi
  40a31a:	mov    dl,0xad
  40a31c:	dec    ecx
  40a31d:	xchg   ebx,eax
  40a31e:	pop    ebx
  40a31f:	cld    
  40a320:	pop    ds
  40a321:	jmp    0x40a2e1
  40a323:	inc    esi
  40a324:	pushf  
  40a325:	shl    BYTE PTR [edx+0x5a],cl
  40a328:	jns    0x40a38c
  40a32a:	scas   al,BYTE PTR es:[edi]
  40a32b:	cmp    edi,ebp
  40a32d:	ret    0x466d
  40a330:	shl    DWORD PTR [esi+0x62c4e0cb],0x38
  40a337:	mov    esi,0xe63efc12
  40a33c:	out    dx,al
  40a33d:	int    0x61
  40a33f:	xchg   esp,eax
  40a340:	mov    ebx,0xe34fcd6d
  40a345:	ds in  eax,0xf2
  40a348:	adc    eax,0x1fc95639
  40a34d:	mov    bl,0xe9
  40a34f:	aas    
  40a350:	push   ebp
  40a351:	or     DWORD PTR [ebx+0x24269b80],esp
  40a357:	sub    BYTE PTR [edx],0xb
  40a35a:	pop    esi
  40a35b:	dec    ecx
  40a35c:	adc    ebp,DWORD PTR [esi]
  40a35e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a35f:	pop    ebp
  40a360:	pop    esp
  40a361:	jmp    0x40a354
  40a363:	mov    dl,BYTE PTR [eax+0x62]
  40a366:	cdq    
  40a367:	push   ds
  40a368:	jo     0x40a3ae
  40a36a:	aaa    
  40a36b:	mov    eax,0x65bfcc29
  40a370:	int3   
  40a371:	bound  edi,QWORD PTR [edx+0x8]
  40a374:	stc    
  40a375:	not    DWORD PTR [eiz*1+0x289698a3]
  40a37c:	retf   
  40a37d:	cmp    DWORD PTR [ecx+0x66],edi
  40a380:	jbe    0x40a3c9
  40a382:	shr    BYTE PTR [eax+0x7f7201a5],1
  40a388:	sub    esp,eax
  40a38a:	and    DWORD PTR [edi],esi
  40a38c:	add    bh,BYTE PTR [ebp-0x1dd63dfb]
  40a392:	cld    
  40a393:	jp     0x40a32e
  40a395:	cmp    al,0x91
  40a397:	add    al,0xc9
  40a399:	jecxz  0x40a3e4
  40a39b:	or     al,0x65
  40a39d:	pop    edi
  40a39e:	or     DWORD PTR [ebx],ecx
  40a3a0:	(bad)  
  40a3a2:	es push esi
  40a3a4:	cmp    bl,BYTE PTR [edx-0x5c]
  40a3a7:	sbb    cl,BYTE PTR [ebx]
  40a3a9:	lods   eax,DWORD PTR ds:[esi]
  40a3aa:	int3   
  40a3ab:	mov    dh,BYTE PTR [esi+0x4b]
  40a3ae:	aaa    
  40a3af:	jae    0x40a38c
  40a3b1:	and    al,0xbd
  40a3b3:	mov    eax,0x13d89697
  40a3b8:	loopne 0x40a355
  40a3ba:	push   eax
  40a3bb:	inc    ecx
  40a3bc:	jbe    0x40a421
  40a3be:	mov    DWORD PTR [edi-0x42],0x5e34eab
  40a3c5:	test   ax,0x37db
  40a3c9:	mov    DWORD PTR ds:0x9939cab3,edi
  40a3cf:	jle    0x40a430
  40a3d1:	(bad)  
  40a3d2:	push   eax
  40a3d3:	sub    ch,BYTE PTR [ecx-0x22d7e8e4]
  40a3d9:	sub    ebx,DWORD PTR [ecx+0x6b]
  40a3dc:	push   esi
  40a3dd:	or     eax,0xe819f9c0
  40a3e2:	adc    DWORD PTR [eax+0x4c5a2550],ecx
  40a3e8:	mov    edi,0x39b649aa
  40a3ed:	pop    ss
  40a3ee:	push   esi
  40a3ef:	inc    edx
  40a3f0:	fdivr  QWORD PTR [eax]
  40a3f2:	popa   
  40a3f3:	sub    dl,BYTE PTR [ecx-0x7f]
  40a3f6:	or     DWORD PTR [edx+eiz*8],edi
  40a3f9:	dec    esp
  40a3fa:	pop    eax
  40a3fb:	push   ebp
  40a3fc:	js     0x40a397
  40a3fe:	dec    ecx
  40a3ff:	and    DWORD PTR [eax+esi*4+0x6e],eax
  40a403:	ja     0x40a42b
  40a405:	bsr    ecx,DWORD PTR [eax+0x5291a68]
  40a40c:	and    edx,DWORD PTR [ecx-0x80]
  40a40f:	out    dx,al
  40a410:	bound  ebx,QWORD PTR ds:0x9b747d01
  40a416:	xor    eax,0xe0eef687
  40a41b:	mov    ch,bh
  40a41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a41e:	aas    
  40a41f:	mov    ds:0xf86cec6c,al
  40a424:	mov    al,ds:0x142abff9
  40a429:	outs   dx,DWORD PTR ds:[esi]
  40a42a:	push   edx
  40a42b:	pop    ds
  40a42c:	ja     0x40a424
  40a42e:	fcmove st,st(4)
  40a430:	adc    al,0x9f
  40a432:	outs   dx,DWORD PTR ds:[esi]
  40a433:	into   
  40a434:	jl     0x40a42d
  40a436:	imul   eax,DWORD PTR [ebx+ebp*4-0x76],0xffffffad
  40a43b:	sar    BYTE PTR [eax],0x5
  40a43e:	not    BYTE PTR [eax]
  40a440:	in     al,dx
  40a441:	test   DWORD PTR ss:[ecx+0x50],0xc4ba3074
  40a449:	xchg   ebx,eax
  40a44a:	jb     0x40a43a
  40a44c:	arpl   WORD PTR es:[ecx+0x65bc1346],cx
  40a453:	cmp    bh,BYTE PTR [ebp+0x324ab4cd]
  40a459:	pop    ds
  40a45a:	cmp    eax,0x35fd86d
  40a45f:	inc    eax
  40a460:	jnp    0x40a4c2
  40a462:	sahf   
  40a463:	ficom  DWORD PTR [edi]
  40a465:	dec    DWORD PTR [ecx+0x5c967885]
  40a46b:	fild   WORD PTR [ecx-0x6543e0bf]
  40a471:	push   edx
  40a472:	pop    ebx
  40a473:	fistp  QWORD PTR [ecx+0x75]
  40a476:	cbw    
  40a478:	jbe    0x40a4d3
  40a47a:	sti    
  40a47b:	cmp    eax,0x3ee1c105
  40a480:	mov    esp,0x7b786137
  40a485:	call   FWORD PTR [edi-0x71ecc7f9]
  40a48b:	inc    esi
  40a48c:	cwde   
  40a48d:	add    al,0x9d
  40a48f:	call   0x320879c
  40a494:	stos   BYTE PTR es:[edi],al
  40a495:	mov    ebx,0xeaad33b1
  40a49a:	enter  0xd0dd,0x3f
  40a49e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a49f:	dec    edx
  40a4a0:	or     ah,ah
  40a4a2:	mov    edi,DWORD PTR [ebp-0x72]
  40a4a5:	gs mov edx,ds
  40a4a8:	xor    ebp,DWORD PTR [ecx+0x57]
  40a4ab:	add    eax,DWORD PTR ds:0xf2c8a84b
  40a4b1:	sub    al,0xeb
  40a4b3:	rol    BYTE PTR [ebp-0x12dd512d],1
  40a4b9:	mov    BYTE PTR [edi+0x3241197a],bh
  40a4bf:	fs jo  0x40a47f
  40a4c2:	xchg   esp,eax
  40a4c3:	mov    ds:0x47271a18,eax
  40a4c8:	cmp    dl,ch
  40a4ca:	push   DWORD PTR [edi+0x1b]
  40a4cd:	pop    ecx
  40a4ce:	test   DWORD PTR [edi],edi
  40a4d0:	inc    edx
  40a4d1:	mov    bl,0x31
  40a4d3:	sub    DWORD PTR [ebx],ebx
  40a4d5:	imul   esi,DWORD PTR [ebp-0x158e68b9],0x2224fc10
  40a4df:	stc    
  40a4e0:	pop    ecx
  40a4e1:	mov    al,ds:0x8519af2e
  40a4e6:	push   eax
  40a4e7:	dec    ecx
  40a4e8:	and    edx,DWORD PTR [edx+edx*2-0x22f4d98b]
  40a4ef:	inc    esi
  40a4f0:	sar    BYTE PTR ss:[eax],cl
  40a4f3:	aad    0x88
  40a4f5:	push   esi
  40a4f6:	pop    edx
  40a4f7:	call   0xf7e91424
  40a4fc:	sbb    ebx,DWORD PTR [ebp+0x7e77eeb7]
  40a502:	xchg   esi,eax
  40a503:	rol    esi,cl
  40a505:	jmp    0x548e:0x62add4e0
  40a50c:	mov    ?,WORD PTR ds:0x72e389fc
  40a512:	dec    ecx
  40a513:	mov    al,0x67
  40a515:	arpl   WORD PTR [esi-0x4e],dx
  40a518:	pop    es
  40a519:	pop    esi
  40a51a:	dec    ecx
  40a51b:	jno    0x40a51c
  40a51d:	cmp    eax,0x1995004c
  40a522:	or     al,dh
  40a524:	std    
  40a525:	stos   BYTE PTR es:[edi],al
  40a526:	ud2    
  40a528:	sub    BYTE PTR [eax],dh
  40a52a:	push   0x47872a3f
  40a52f:	lods   al,BYTE PTR ds:[esi]
  40a530:	push   edi
  40a531:	jl     0x40a505
  40a533:	jbe    0x40a4e8
  40a535:	cmp    al,0xdc
  40a537:	add    bh,BYTE PTR [esi+0x7bfa5e50]
  40a53d:	in     eax,0x87
  40a53f:	cmp    DWORD PTR [edx+0x7a],0xa3a9a415
  40a546:	mov    esi,0xe8565297
  40a54b:	cdq    
  40a54c:	call   edx
  40a54e:	jae    0x40a509
  40a550:	cmovnp ebx,DWORD PTR [ecx]
  40a553:	xchg   ebp,eax
  40a554:	out    0x28,eax
  40a556:	enter  0x470a,0xcb
  40a55a:	sbb    bh,al
  40a55c:	stos   BYTE PTR es:[edi],al
  40a55d:	sti    
  40a55e:	mov    eax,ds:0x7fc5a6e5
  40a563:	mov    ebx,0x7c6158f2
  40a568:	push   edi
  40a569:	cmp    cl,cl
  40a56b:	xchg   edi,eax
  40a56c:	push   ebp
  40a56d:	add    al,BYTE PTR [edx-0x413ea063]
  40a573:	push   ds
  40a574:	cmc    
  40a575:	pop    ds
  40a576:	lea    ebx,[ebp-0x764f9592]
  40a57c:	add    eax,0x607a0d96
  40a581:	mov    ds:0x7d050521,al
  40a586:	mov    ah,0xf8
  40a588:	cmp    DWORD PTR [ecx],edx
  40a58a:	rcr    DWORD PTR [eax],1
  40a58c:	inc    esp
  40a58d:	xchg   edi,eax
  40a58e:	scas   eax,DWORD PTR es:[edi]
  40a58f:	cmp    esp,ebp
  40a591:	(bad)  [edx-0x54d09b16]
  40a597:	push   0x2b265629
  40a59c:	pop    ds
  40a59d:	pushw  0x71ff
  40a5a1:	dec    edx
  40a5a2:	test   DWORD PTR [edx-0x5c9eaa8d],0xa88953bd
  40a5ac:	hlt    
  40a5ad:	and    ah,BYTE PTR [ebx]
  40a5af:	xor    BYTE PTR [ebx+edi*2],0x82
  40a5b3:	mov    esp,0xe191de02
  40a5b8:	mov    ebx,0x8e8c2b7d
  40a5bd:	pop    ss
  40a5be:	jne    0x40a556
  40a5c0:	pop    esp
  40a5c1:	subps  xmm0,XMMWORD PTR [eax+0x160c8563]
  40a5c8:	dec    edi
  40a5c9:	sub    eax,0xd100d8e9
  40a5ce:	inc    esi
  40a5cf:	xor    DWORD PTR [ecx-0x40fc6962],eax
  40a5d5:	mov    cs,WORD PTR [ebp+0x1d]
  40a5d8:	add    al,0x41
  40a5da:	rcl    esp,1
  40a5dc:	ret    
  40a5dd:	aas    
  40a5de:	mov    ss,WORD PTR [edi]
  40a5e0:	retf   0x6b5a
  40a5e3:	(bad)  
  40a5e4:	and    ebx,edi
  40a5e6:	jge    0x40a580
  40a5e8:	pop    eax
  40a5e9:	sbb    eax,0x832cd450
  40a5ee:	arpl   WORD PTR [edx],ax
  40a5f0:	ss clc 
  40a5f2:	jg     0x40a632
  40a5f4:	addr16 and eax,0xeeb802e7
  40a5fa:	sub    al,0x22
  40a5fc:	pushf  
  40a5fd:	pusha  
  40a5fe:	enter  0x2151,0x2f
  40a602:	inc    ebp
  40a603:	rcr    BYTE PTR [eax],cl
  40a605:	loope  0x40a67b
  40a607:	inc    ebp
  40a608:	mov    edx,0x57ecd52c
  40a60d:	int    0xf0
  40a60f:	icebp  
  40a610:	xchg   DWORD PTR [ebx],esi
  40a612:	lock pop ecx
  40a614:	lock jmp 0xa0d762da
  40a61a:	adc    al,0x2f
  40a61c:	mov    BYTE PTR [esi+0x42],bh
  40a61f:	aas    
  40a620:	call   0x6ca7:0xc2c02355
  40a627:	lods   eax,DWORD PTR ds:[esi]
  40a628:	(bad)  
  40a629:	scas   eax,DWORD PTR es:[edi]
  40a62a:	dec    ecx
  40a62b:	adc    eax,0x2d68f3d8
  40a630:	sub    bl,BYTE PTR [esi-0x7a]
  40a633:	jmp    0xb88a:0xb3261c6
  40a63a:	lea    ebp,[esp+ebp*8+0x1f4387d4]
  40a641:	push   esi
  40a642:	jl     0x40a69c
  40a644:	fucom  st(5)
  40a646:	adc    esp,edi
  40a648:	xchg   ebx,eax
  40a649:	mov    DWORD PTR [esi],edi
  40a64b:	inc    edi
  40a64c:	mov    esp,0xec8b4435
  40a651:	mov    esp,0x99d420d3
  40a656:	and    al,0x32
  40a658:	cmp    BYTE PTR [ebp+0x6ac7e660],ah
  40a65e:	xchg   BYTE PTR [ebp+edx*8+0x7b],cl
  40a662:	dec    esi
  40a663:	stos   BYTE PTR es:[edi],al
  40a664:	or     BYTE PTR [ebx],ah
  40a666:	enter  0x65b9,0x60
  40a66a:	fnstcw WORD PTR [eax-0x26]
  40a66d:	enter  0xabf1,0x26
  40a671:	movzx  edi,WORD PTR [ebp+0x6b]
  40a675:	push   0x31
  40a677:	jle    0x40a695
  40a679:	jno    0x40a637
  40a67b:	push   cs
  40a67c:	test   esp,ebp
  40a67e:	push   ebp
  40a67f:	jle    0x40a6c5
  40a681:	pop    edx
  40a682:	pop    edi
  40a683:	push   edi
  40a684:	nop
  40a685:	pop    ebp
  40a686:	rol    BYTE PTR [edi],cl
  40a688:	jno    0x40a6fa
  40a68a:	mov    ds:0x43433610,eax
  40a68f:	adc    cl,ah
  40a691:	inc    esi
  40a692:	loop   0x40a70b
  40a694:	pop    ss
  40a695:	lock mov bl,0x47
  40a698:	mul    DWORD PTR [edi+0x4deafed3]
  40a69e:	fldcw  WORD PTR [eax]
  40a6a0:	neg    esi
  40a6a2:	sub    cl,BYTE PTR [edi+0x66460671]
  40a6a8:	adc    edi,ebx
  40a6aa:	push   0xffffffe8
  40a6ac:	sbb    ebx,DWORD PTR [esi-0x3d3975]
  40a6b2:	sar    BYTE PTR [edi-0x86616f4],0x35
  40a6b9:	int3   
  40a6ba:	mov    esp,0x331e8b1e
  40a6bf:	sub    ebp,ebx
  40a6c1:	scas   eax,DWORD PTR es:[edi]
  40a6c2:	ficomp DWORD PTR [edi+0x1b423d05]
  40a6c8:	sbb    bl,BYTE PTR [edx+0x2b65710d]
  40a6ce:	adc    edx,DWORD PTR ss:[edx]
  40a6d1:	dec    ebx
  40a6d2:	in     al,0xd
  40a6d4:	cs iret 
  40a6d6:	lods   eax,DWORD PTR ds:[esi]
  40a6d7:	adc    al,0x69
  40a6d9:	cmp    al,0xca
  40a6db:	mov    al,ds:0x4e038c82
  40a6e0:	inc    edi
  40a6e1:	fcmovu st,st(0)
  40a6e3:	in     eax,0x75
  40a6e5:	add    esp,DWORD PTR [eax-0x30]
  40a6e8:	test   eax,0x5310b2e6
  40a6ed:	pop    edx
  40a6ee:	cmp    eax,0xfc3f8941
  40a6f3:	mov    al,0x13
  40a6f5:	inc    ecx
  40a6f6:	push   esi
  40a6f7:	and    DWORD PTR [edx+0x2b177a0e],0x40
  40a6fe:	outs   dx,BYTE PTR ds:[esi]
  40a6ff:	int3   
  40a700:	retf   0xbcc8
  40a703:	ja     0x40a6a0
  40a705:	ds inc edx
  40a707:	pop    es
  40a708:	fidivr WORD PTR [esi]
  40a70a:	push   esp
  40a70b:	or     ebp,DWORD PTR [edi*8-0x31d8081c]
  40a712:	repz dec ebx
  40a714:	inc    ebp
  40a715:	mov    ebp,0xaa4adf5
  40a71a:	in     al,0xa9
  40a71c:	outs   dx,DWORD PTR ds:[esi]
  40a71d:	scas   eax,DWORD PTR es:[edi]
  40a71e:	jmp    0xeac3:0x5847078b
  40a725:	std    
  40a726:	sti    
  40a727:	jle    0x40a6ff
  40a729:	jb     0x40a799
  40a72b:	xchg   DWORD PTR [ecx+0x58e53b29],edx
  40a731:	mov    ah,0x28
  40a733:	xor    BYTE PTR [edx-0x80],0x56
  40a737:	pop    esi
  40a738:	lods   al,BYTE PTR ds:[esi]
  40a739:	push   eax
  40a73a:	jbe    0x40a751
  40a73c:	sbb    eax,0x1811d50b
  40a741:	pop    ebx
  40a742:	(bad)  
  40a743:	and    ch,dl
  40a745:	push   esp
  40a746:	es jle 0x40a6f5
  40a749:	inc    esi
  40a74a:	mov    ch,0xf2
  40a74c:	repz pop ebx
  40a74e:	lods   al,BYTE PTR ds:[esi]
  40a74f:	lahf   
  40a750:	xchg   edi,eax
  40a751:	cmp    eax,0x4d4de9d7
  40a756:	lds    esp,FWORD PTR [esp+ebp*8-0x4d8cf6b7]
  40a75d:	sbb    DWORD PTR [esi-0x6e],0xffffffa1
  40a761:	mov    dh,0xaa
  40a763:	add    al,0xc8
  40a765:	inc    ebp
  40a766:	dec    ebp
  40a767:	push   esp
  40a768:	jg     0x40a76c
  40a76a:	icebp  
  40a76b:	je     0x40a73e
  40a76d:	out    dx,al
  40a76e:	(bad)  
  40a76f:	or     DWORD PTR [eax+esi*8+0x6cc3e6fc],ebx
  40a776:	rcl    BYTE PTR [edx+0x16a35606],1
  40a77c:	sahf   
  40a77d:	jbe    0x40a761
  40a77f:	in     eax,dx
  40a780:	cmp    BYTE PTR [ebp-0x2f],dl
  40a783:	pop    es
  40a784:	mov    cl,0x24
  40a786:	(bad)  
  40a787:	fld    TBYTE PTR [edx]
  40a789:	fild   QWORD PTR [edi-0x69846367]
  40a78f:	les    edx,FWORD PTR [ebp-0x3f59eef2]
  40a795:	push   esp
  40a796:	stc    
  40a797:	imul   eax,DWORD PTR [eax+0x405ca3c0],0x6e
  40a79e:	mov    ch,0xa
  40a7a0:	retf   0x9b43
  40a7a3:	pop    esp
  40a7a4:	(bad)  
  40a7a5:	mov    ?,WORD PTR [ebp+0x68]
  40a7a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7a9:	xchg   esi,eax
  40a7aa:	repnz xor al,0x66
  40a7ad:	sar    BYTE PTR [ebx+0x3e2815e4],0xfe
  40a7b4:	dec    esi
  40a7b5:	mov    BYTE PTR [ecx+esi*1-0x57],cl
  40a7b9:	jmp    0xa85b40b5
  40a7be:	pop    edi
  40a7bf:	test   DWORD PTR [ebp+0x458058ec],esp
  40a7c5:	sbb    ebp,DWORD PTR [ecx+ebp*1+0x56]
  40a7c9:	pop    ds
  40a7ca:	fsubr  DWORD PTR [ebx+0x3a]
  40a7cd:	xchg   edi,eax
  40a7ce:	and    BYTE PTR [edi-0x57],0x95
  40a7d2:	cmp    al,BYTE PTR [ebx-0x755b7bba]
  40a7d8:	push   esi
  40a7d9:	add    ebx,DWORD PTR [ebp+0x3f]
  40a7dc:	sbb    eax,0x22bc60cb
  40a7e1:	repz mul ch
  40a7e4:	sbb    edi,DWORD PTR [ebx-0x4778744c]
  40a7ea:	add    eax,0xfdffd53f
  40a7ef:	fmul   QWORD PTR [eax-0x6f]
  40a7f2:	and    dh,BYTE PTR [edi+eax*2+0x2b]
  40a7f6:	cmp    DWORD PTR es:[edi],0x2fcb0757
  40a7fd:	addr16 fcmovu st,st(5)
  40a800:	fimul  WORD PTR [ebx-0x2cedd863]
  40a806:	loop   0x40a80c
  40a808:	add    al,0xc7
  40a80a:	mov    cr4,ecx
  40a80d:	loope  0x40a7d9
  40a80f:	lea    edx,[ecx]
  40a811:	push   eax
  40a812:	push   esp
  40a813:	or     cl,BYTE PTR [edx]
  40a815:	dec    eax
  40a816:	daa    
  40a817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a818:	(bad)  
  40a819:	iret   
  40a81a:	in     al,0xf7
  40a81c:	outs   dx,DWORD PTR ds:[esi]
  40a81d:	cmc    
  40a81e:	data16 or al,al
  40a821:	sbb    DWORD PTR [ecx-0x2b371c72],eax
  40a827:	lea    eax,[ebx+0x30]
  40a82a:	inc    DWORD PTR [ebp+0x51]
  40a82d:	(bad)  
  40a82e:	ficomp WORD PTR [edi]
  40a830:	pop    edi
  40a831:	fiadd  DWORD PTR [ecx-0x2845e3f9]
  40a837:	call   0x4e32:0xb1109ef7
  40a83e:	xchg   ebx,eax
  40a83f:	mov    ds:0xc7840c09,al
  40a844:	retf   
  40a845:	(bad)  
  40a846:	jecxz  0x40a817
  40a848:	cmp    DWORD PTR [esi+0x7b],esp
  40a84b:	fiadd  WORD PTR [edx-0x3d]
  40a84e:	mov    WORD PTR [edi],ss
  40a850:	call   0x13452fd0
  40a855:	into   
  40a856:	mov    eax,ds:0x3c29fe82
  40a85b:	sar    BYTE PTR [eax-0x6df6db22],1
  40a861:	in     al,dx
  40a862:	cmp    BYTE PTR [ebx*8+0x5c10ae00],cl
  40a869:	test   al,0x29
  40a86b:	sbb    al,0xd1
  40a86d:	cdq    
  40a86e:	cmp    eax,DWORD PTR [edi]
  40a870:	cli    
  40a871:	mov    dl,0x2c
  40a873:	mov    bh,0x3d
  40a875:	jb     0x40a8d0
  40a877:	into   
  40a878:	dec    esi
  40a879:	fsub   QWORD PTR [esi+0x5d]
  40a87c:	adc    DWORD PTR [esi],ebx
  40a87e:	dec    edx
  40a87f:	mov    ebp,0x169cf08d
  40a884:	sub    BYTE PTR es:[ebp-0x74],bh
  40a888:	rcl    BYTE PTR [eax-0x1db72ccb],1
  40a88e:	loop   0x40a854
  40a890:	outs   dx,DWORD PTR ds:[esi]
  40a891:	sar    BYTE PTR [ecx+0x3a880acf],0xe9
  40a898:	adc    dh,BYTE PTR [edi]
  40a89a:	xchg   esi,eax
  40a89b:	push   edi
  40a89c:	add    DWORD PTR [esi+0x6c],esi
  40a89f:	jb     0x40a893
  40a8a1:	aam    0x79
  40a8a3:	jmp    0x40a84e
  40a8a5:	loope  0x40a8ce
  40a8a7:	sub    ch,cl
  40a8a9:	ret    0x6ad6
  40a8ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ad:	sub    eax,0xbac37c67
  40a8b2:	add    al,0xe5
  40a8b4:	(bad)  
  40a8b5:	out    dx,al
  40a8b6:	inc    esi
  40a8b7:	inc    ebp
  40a8b8:	push   ebx
  40a8b9:	enter  0x4be,0x40
  40a8bd:	xchg   BYTE PTR [edx],bl
  40a8bf:	or     dl,BYTE PTR [ecx]
  40a8c1:	(bad)  
  40a8c3:	icebp  
  40a8c4:	in     eax,dx
  40a8c5:	mov    ds:0x8150dd87,al
  40a8ca:	lock cmp DWORD PTR [ebx-0x2e],0xc751f79c
  40a8d2:	popa   
  40a8d3:	sbb    DWORD PTR [ebp+0x21],edi
  40a8d6:	cmp    esp,DWORD PTR [edx-0x70]
  40a8d9:	and    DWORD PTR [edi-0xc],edx
  40a8dc:	sub    al,0x74
  40a8df:	sub    DWORD PTR [ecx+0x19],eax
  40a8e2:	sbb    BYTE PTR [edi],bh
  40a8e4:	dec    esp
  40a8e5:	dec    eax
  40a8e6:	add    al,0x9c
  40a8e8:	jne    0x40a920
  40a8ea:	adc    dh,BYTE PTR [eax-0x40]
  40a8ed:	xor    BYTE PTR [esi-0xe],cl
  40a8f0:	neg    DWORD PTR [edi]
  40a8f2:	out    0xa5,al
  40a8f4:	fs in  eax,dx
  40a8f6:	push   esp
  40a8f7:	(bad)  
  40a8f8:	stc    
  40a8f9:	scas   al,BYTE PTR es:[edi]
  40a8fa:	cmp    eax,0xfe6e52ff
  40a8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a900:	or     ebx,esp
  40a902:	ins    DWORD PTR es:[edi],dx
  40a903:	pop    ss
  40a904:	dec    esp
  40a905:	pop    edi
  40a906:	test   eax,0x61706720
  40a90b:	push   ecx
  40a90c:	gs or  cl,bl
  40a90f:	out    dx,al
  40a910:	jns    0x40a8eb
  40a912:	sbb    al,0x24
  40a914:	ss dec ebx
  40a916:	jecxz  0x40a8b8
  40a918:	add    al,0x8d
  40a91a:	aad    0x57
  40a91c:	xchg   esp,eax
  40a91d:	aas    
  40a91e:	adc    ecx,DWORD PTR [ecx]
  40a920:	arpl   bp,di
  40a922:	mov    DWORD PTR [edx],edi
  40a924:	gs dec esp
  40a926:	mov    ch,0x37
  40a928:	fwait
  40a929:	inc    edx
  40a92a:	lahf   
  40a92b:	icebp  
  40a92c:	or     dh,BYTE PTR [ebp-0xb]
  40a92f:	shr    DWORD PTR ds:0x72aa66c,cl
  40a935:	stos   BYTE PTR es:[edi],al
  40a936:	push   ebp
  40a937:	or     ecx,DWORD PTR [edx]
  40a939:	adc    DWORD PTR [edi],esi
  40a93b:	or     dl,BYTE PTR [ebp-0x78dfb86f]
  40a941:	pop    edx
  40a942:	adc    ebx,DWORD PTR [ebx]
  40a944:	jnp    0x40a98c
  40a946:	jl     0x40a90f
  40a948:	loop   0x40a941
  40a94a:	dec    edx
  40a94b:	mov    BYTE PTR [ebx+0x14],al
  40a94e:	es (bad) 
  40a950:	add    ecx,DWORD PTR [ecx]
  40a952:	lock cld 
  40a954:	cmp    al,0xe8
  40a956:	icebp  
  40a957:	pop    es
  40a958:	inc    esi
  40a959:	pop    ecx
  40a95a:	cdq    
  40a95b:	mov    esp,0x46c79f6
  40a960:	or     eax,0xa98bca1
  40a965:	leave  
  40a966:	xchg   ebx,eax
  40a967:	pop    ecx
  40a968:	pop    esp
  40a969:	xor    BYTE PTR [esp+ebx*4],ch
  40a96c:	(bad)
  40a96f:	push   cs
  40a970:	ja     0x40a9b5
  40a972:	rcr    DWORD PTR [edi],1
  40a974:	add    cl,bh
  40a976:	aam    0xc0
  40a978:	ret    
  40a979:	loope  0x40a95d
  40a97b:	outs   dx,BYTE PTR ds:[esi]
  40a97c:	(bad)  
  40a97e:	and    BYTE PTR [eax+0x5e],0x41
  40a982:	adc    al,0xff
  40a984:	rcl    ebx,0xe
  40a987:	and    al,0x84
  40a989:	mov    esp,0x4ffa29f5
  40a98e:	(bad)  [edx-0x77]
  40a991:	fcom   QWORD PTR [eax+0x51]
  40a994:	inc    edi
  40a995:	ja     0x40a940
  40a997:	popa   
  40a998:	aam    0x98
  40a99a:	jae    0x40a949
  40a99c:	pop    esp
  40a99d:	in     al,0x6c
  40a99f:	jl     0x40a925
  40a9a1:	jp     0x40a999
  40a9a3:	hlt    
  40a9a4:	jge    0x40a9c1
  40a9a6:	dec    DWORD PTR [ebx-0x5a83738c]
  40a9ac:	into   
  40a9ad:	xor    dl,BYTE PTR [esi-0x65636b47]
  40a9b3:	pop    ebx
  40a9b4:	xor    edi,ecx
  40a9b6:	mov    dh,0xd9
  40a9b8:	(bad)  
  40a9b9:	mov    eax,ebx
  40a9bb:	cwde   
  40a9bc:	jl     0x40a9d5
  40a9be:	mov    DWORD PTR [ebx+0x50],edi
  40a9c1:	je     0x40aa39
  40a9c3:	ins    DWORD PTR es:[edi],dx
  40a9c4:	div    DWORD PTR [ebp+ebp*4-0x17]
  40a9c8:	jle    0x40aa36
  40a9ca:	push   ds
  40a9cb:	(bad)  
  40a9cc:	stos   DWORD PTR es:[edi],eax
  40a9cd:	jno    0x40aa3f
  40a9cf:	mov    ds:0xce636172,eax
  40a9d4:	xchg   edi,eax
  40a9d5:	push   esi
  40a9d6:	sbb    cl,BYTE PTR [ecx]
  40a9d8:	mov    ebx,0xaf938f4c
  40a9dd:	mov    ds:0x31684dc1,eax
  40a9e2:	sub    ecx,esi
  40a9e4:	push   ecx
  40a9e5:	scas   al,BYTE PTR es:[edi]
  40a9e6:	inc    esp
  40a9e7:	xor    ah,al
  40a9e9:	and    eax,0x93bf8dc
  40a9ee:	pop    esi
  40a9ef:	mov    BYTE PTR [ebx-0x6ee00c9b],dh
  40a9f5:	ins    DWORD PTR es:[edi],dx
  40a9f6:	sub    edx,0x68
  40a9f9:	xchg   esi,eax
  40a9fa:	rcr    BYTE PTR [edx],0x4e
  40a9fd:	push   edi
  40a9fe:	mov    ecx,0x4213b6e4
  40aa03:	xchg   ebx,eax
  40aa04:	sar    DWORD PTR [edx+0x654751fe],1
  40aa0a:	repz xchg edi,eax
  40aa0c:	sti    
  40aa0d:	fmul   DWORD PTR [ebp+0x516c567f]
  40aa13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa14:	or     eax,ecx
  40aa16:	in     eax,dx
  40aa17:	in     al,dx
  40aa18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa19:	sub    edi,DWORD PTR [ebx]
  40aa1b:	je     0x40aa2e
  40aa1d:	retf   
  40aa1e:	mov    edx,0x4ba9f6fe
  40aa23:	jmp    0x65c29b84
  40aa28:	xchg   esp,eax
  40aa29:	mov    ch,0xbc
  40aa2b:	imul   esi,DWORD PTR [ecx-0x2c6f3538],0xe9650c60
  40aa35:	adc    BYTE PTR ds:0xd5aba76f,cl
  40aa3b:	pop    ds
  40aa3c:	and    ecx,DWORD PTR [ecx+0x789d1a6e]
  40aa42:	xchg   ebx,eax
  40aa43:	jg     0x40a9cf
  40aa45:	jae    0x40a9c8
  40aa47:	ja     0x40aa78
  40aa49:	fnsave [esi+0x7d]
  40aa4c:	and    al,0xec
  40aa4e:	(bad)  
  40aa4f:	jmp    0xfd8:0xef1b2da6
  40aa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa57:	in     al,0x23
  40aa59:	mov    BYTE PTR [esi],al
  40aa5b:	sub    bh,BYTE PTR ds:0x41df53f3
  40aa61:	loope  0x40a9f9
  40aa63:	jecxz  0x40aa3b
  40aa65:	cvttps2pi mm6,QWORD PTR [ebp+0x53]
  40aa69:	pop    ds
  40aa6a:	sub    al,0x20
  40aa6c:	or     eax,0xe29be285
  40aa71:	cs and eax,eax
  40aa74:	xchg   ecx,eax
  40aa75:	and    esi,DWORD PTR [edi-0x4aee1bf]
  40aa7b:	cmp    bh,BYTE PTR [esi]
  40aa7d:	xchg   edx,eax
  40aa7e:	and    dh,dl
  40aa80:	xor    al,0xb1
  40aa82:	daa    
  40aa83:	dec    ebx
  40aa84:	mov    eax,0xc5af3629
  40aa89:	mov    DWORD PTR [ebp+0x46],ecx
  40aa8c:	aaa    
  40aa8d:	jae    0x40aaf3
  40aa8f:	xchg   ecx,eax
  40aa90:	stos   BYTE PTR es:[edi],al
  40aa91:	hlt    
  40aa92:	lods   eax,DWORD PTR ds:[esi]
  40aa93:	ret    0x1404
  40aa96:	repnz sbb DWORD PTR [ebx-0x1b777ed5],eax
  40aa9d:	or     al,0xd0
  40aa9f:	and    DWORD PTR [ebx+0x28129f43],edi
  40aaa5:	dec    edi
  40aaa6:	ror    BYTE PTR [eax+0x1],cl
  40aaa9:	xor    bh,BYTE PTR [edx]
  40aaab:	mov    bl,0xe8
  40aaad:	xchg   edx,eax
  40aaae:	mov    ebx,0xaa50e7e5
  40aab3:	cmp    BYTE PTR [edi-0xa],cl
  40aab6:	(bad)  
  40aab7:	out    0x1,al
  40aab9:	addr16 mov dh,0x52
  40aabc:	xor    ch,BYTE PTR [ecx+0x14]
  40aabf:	aaa    
  40aac0:	inc    edx
  40aac1:	push   ebp
  40aac2:	ficomp WORD PTR [edx+0x66]
  40aac5:	mov    dh,0xf0
  40aac7:	mov    ?,WORD PTR [ebp+0x7b]
  40aaca:	test   BYTE PTR [eax+ecx*8-0x14],cl
  40aace:	sbb    ebp,DWORD PTR [ebx]
  40aad0:	call   0xa8a2:0x768442b6
  40aad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aad8:	add    al,0xf8
  40aada:	imul   ebp,esi,0x7a3d03bd
  40aae0:	pop    ebp
  40aae1:	or     al,0x9e
  40aae3:	dec    eax
  40aae4:	and    al,0xd9
  40aae6:	test   DWORD PTR [ecx-0x1b],esp
  40aae9:	mov    ds:0xdc0c0173,al
  40aaee:	in     al,0x55
  40aaf0:	pop    ds
  40aaf1:	hlt    
  40aaf2:	cmp    ch,BYTE PTR [edi+eax*8-0x635fd57d]
  40aaf9:	xor    ebx,esp
  40aafb:	pop    es
  40aafc:	out    dx,eax
  40aafd:	sub    cl,dl
  40aaff:	gs jns 0x40ab41
  40ab02:	and    al,BYTE PTR [esi-0x59]
  40ab05:	or     ebx,DWORD PTR ds:0x19aeb4f6
  40ab0b:	cmp    DWORD PTR [esi],0x27
  40ab0e:	push   es
  40ab0f:	xchg   ecx,eax
  40ab10:	dec    edi
  40ab11:	lea    esi,[ebx]
  40ab13:	cmp    eax,0x9b701d6f
  40ab18:	xchg   cl,ch
  40ab1a:	cli    
  40ab1b:	std    
  40ab1c:	jg     0x40aad7
  40ab1e:	xchg   ebx,eax
  40ab1f:	adc    DWORD PTR [ebx-0x342151ab],eax
  40ab25:	mov    ecx,DWORD PTR ss:[edx-0x7cac83b]
  40ab2c:	inc    ebp
  40ab2d:	js     0x40aacb
  40ab2f:	test   al,0x7f
  40ab31:	call   0x2210a0a
  40ab36:	and    ah,BYTE PTR [eax*1-0x73a6b0c1]
  40ab3d:	jnp    0x40ab5f
  40ab3f:	xchg   DWORD PTR [ecx+eiz*1+0x145fc9d4],edx
  40ab46:	sbb    eax,0xa9e2654f
  40ab4b:	mov    BYTE PTR [esi-0x5d70a4c7],bl
  40ab51:	lds    esi,FWORD PTR [esi]
  40ab53:	mov    BYTE PTR [edx],cl
  40ab55:	scas   al,BYTE PTR es:[edi]
  40ab56:	mov    edi,0xf91b8527
  40ab5b:	sub    al,0x26
  40ab5d:	inc    ebp
  40ab5e:	xor    ah,0xfa
  40ab61:	call   0xe005:0xa4680230
  40ab68:	inc    ebx
  40ab69:	jb     0x40ab0c
  40ab6b:	cwde   
  40ab6c:	mov    esi,ebx
  40ab6e:	jae    0x40ab91
  40ab70:	jo     0x40ab9d
  40ab72:	fst    DWORD PTR [ebx+eiz*1]
  40ab75:	ror    BYTE PTR [ecx],cl
  40ab77:	cmp    DWORD PTR [esi+0x2],ebx
  40ab7a:	cmp    eax,0xfd7c9cd
  40ab7f:	sub    al,al
  40ab81:	loop   0x40ab1e
  40ab83:	xor    esi,DWORD PTR [eax-0x65]
  40ab86:	into   
  40ab87:	test   al,0xe3
  40ab89:	fcomp  DWORD PTR [edi-0x7b]
  40ab8c:	cmp    eax,0x70cd4f2c
  40ab91:	pushf  
  40ab92:	rcr    BYTE PTR [eax],cl
  40ab94:	fist   DWORD PTR [eax]
  40ab96:	xor    edx,ebp
  40ab98:	mov    cl,0xab
  40ab9a:	lock hlt 
  40ab9c:	xor    edi,ecx
  40ab9e:	sub    DWORD PTR [eax-0x7806e3b],esi
  40aba4:	test   BYTE PTR [ecx+0x10d990c6],al
  40abaa:	push   edi
  40abab:	fs jmp 0x40abe9
  40abae:	sub    ebp,DWORD PTR [ecx]
  40abb0:	ins    DWORD PTR es:[edi],dx
  40abb1:	cmp    DWORD PTR [ebx-0x11],ebp
  40abb4:	outs   dx,DWORD PTR ds:[esi]
  40abb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abb6:	xchg   esp,eax
  40abb7:	scas   eax,DWORD PTR es:[edi]
  40abb8:	es imul ecx
  40abbb:	jno    0x40abd6
  40abbd:	jbe    0x40ab9c
  40abbf:	xchg   cl,cl
  40abc1:	leave  
  40abc2:	xchg   ebp,eax
  40abc3:	inc    esi
  40abc4:	xor    esi,DWORD PTR [ecx-0x45]
  40abc7:	punpckhbw mm5,mm3
  40abca:	clc    
  40abcb:	pusha  
  40abcc:	xor    al,0x38
  40abce:	dec    ecx
  40abcf:	leave  
  40abd0:	cmp    al,0xd8
  40abd2:	pop    ebp
  40abd3:	fwait
  40abd4:	popa   
  40abd5:	jmp    0xa134:0x90a2475c
  40abdc:	push   es
  40abdd:	pop    ss
  40abde:	mov    edi,0x1085b764
  40abe4:	or     dh,bh
  40abe6:	mov    cl,0x13
  40abe8:	push   0x4b2253ff
  40abed:	inc    esi
  40abee:	inc    eax
  40abef:	hlt    
  40abf0:	pop    edi
  40abf1:	sbb    eax,0xb4692077
  40abf6:	xlat   BYTE PTR ds:[ebx]
  40abf7:	out    0x47,al
  40abf9:	in     al,0x23
  40abfb:	div    DWORD PTR [edi+0x37]
  40abfe:	fdivr  DWORD PTR [esi-0x6f]
  40ac01:	and    eax,0xb0fc0139
  40ac06:	mov    DWORD PTR ss:[edi+0x2a],edx
  40ac0a:	sub    dl,0xf2
  40ac0d:	faddp  st(1),st
  40ac0f:	ds fwait
  40ac11:	jmp    0x8cb07380
  40ac16:	add    BYTE PTR [ecx],0x1
  40ac19:	or     DWORD PTR [esi-0x61],esp
  40ac1c:	imul   BYTE PTR [esi]
  40ac1e:	pop    ebp
  40ac1f:	test   al,0xe2
  40ac21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac22:	ret    
  40ac23:	scas   eax,DWORD PTR es:[edi]
  40ac24:	lods   al,BYTE PTR ds:[esi]
  40ac25:	popa   
  40ac26:	(bad)  [edi]
  40ac28:	je     0x40abc3
  40ac2a:	xor    al,0xf2
  40ac2c:	adc    eax,0x1693fd60
  40ac31:	call   DWORD PTR [ecx+0x485bf79b]
  40ac37:	mov    WORD PTR [esi],es
  40ac39:	add    al,cl
  40ac3b:	(bad)  
  40ac3c:	sahf   
  40ac3d:	shr    ch,0xc
  40ac40:	push   edx
  40ac41:	test   al,0x38
  40ac43:	lea    edx,[ebp+0x7f]
  40ac46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac47:	and    dl,BYTE PTR [edi]
  40ac49:	lock out 0x26,al
  40ac4c:	or     BYTE PTR [esi+0x44],ch
  40ac4f:	gs inc eax
  40ac51:	cmp    esi,esi
  40ac53:	and    DWORD PTR [esi-0x49],ebx
  40ac56:	call   0xbd61:0xd407262a
  40ac5d:	push   esi
  40ac5e:	xor    BYTE PTR [ebx-0x5d],dh
  40ac61:	mov    fs,WORD PTR [esi]
  40ac63:	mov    ebp,0x3d19f764
  40ac68:	jge    0x40ac62
  40ac6a:	pop    esi
  40ac6b:	aaa    
  40ac6c:	or     dl,BYTE PTR [ecx+0x3a]
  40ac6f:	sub    BYTE PTR ds:0xa6635303,dh
  40ac75:	test   eax,0xf9b71a4d
  40ac7a:	fsub   QWORD PTR [ecx-0x49]
  40ac7d:	outs   dx,BYTE PTR ds:[esi]
  40ac7e:	cmp    dh,BYTE PTR [esi]
  40ac80:	mov    ebx,0x1f328cc5
  40ac85:	jbe    0x40ac19
  40ac87:	jno    0x40ac53
  40ac89:	gs or  eax,0x6281bc6f
  40ac8f:	jp     0x40ac26
  40ac91:	test   al,0x7
  40ac93:	push   es
  40ac94:	inc    eax
  40ac95:	inc    esi
  40ac96:	test   al,0xa6
  40ac98:	add    al,0x81
  40ac9a:	scas   al,BYTE PTR es:[edi]
  40ac9b:	std    
  40ac9c:	and    ebx,DWORD PTR [eax-0x8d75605]
  40aca2:	xchg   ebp,eax
  40aca3:	mov    bl,0x25
  40aca5:	adc    eax,0xb73d29d3
  40acaa:	aad    0xa1
  40acac:	adc    eax,ebx
  40acae:	and    bl,al
  40acb0:	jg     0x40acd8
  40acb2:	cs add al,0x69
  40acb5:	inc    esp
  40acb6:	sbb    eax,0xd9e5204c
  40acbb:	or     eax,0x167cf4c7
  40acc0:	jg     0x40ac52
  40acc2:	mov    WORD PTR [ecx],?
  40acc4:	pop    ss
  40acc5:	ret    0x369b
  40acc8:	cs jmp 0x48d1:0x82d052db
  40acd0:	push   0xa984ef8f
  40acd5:	fld    DWORD PTR [eax]
  40acd7:	dec    DWORD PTR [eax+ecx*8+0x4705f4e0]
  40acde:	repz push esi
  40ace0:	sbb    BYTE PTR [edx],cl
  40ace2:	mov    ch,0x7b
  40ace4:	sti    
  40ace5:	sub    edx,DWORD PTR cs:[ecx+0x1aa213ed]
  40acec:	outs   dx,DWORD PTR ds:[esi]
  40aced:	mov    ebx,edx
  40acef:	dec    esi
  40acf0:	xlat   BYTE PTR ds:[ebx]
  40acf1:	add    BYTE PTR [eax+0x7ca1c298],ah
  40acf7:	das    
  40acf8:	jecxz  0x40acb2
  40acfa:	xlat   BYTE PTR ds:[ebx]
  40acfb:	(bad)  
  40acfc:	aam    0xb7
  40acfe:	xor    bh,BYTE PTR [ebx]
  40ad00:	pop    ebx
  40ad01:	fmulp  st(7),st
  40ad03:	ror    BYTE PTR [eax-0x3ed38ae0],0xc9
  40ad0a:	jecxz  0x40acbc
  40ad0c:	lea    ebp,[ebx]
  40ad0e:	int    0xfe
  40ad10:	dec    eax
  40ad11:	pop    eax
  40ad12:	inc    esp
  40ad13:	or     ah,BYTE PTR [ebx-0xbcc22e9]
  40ad19:	dec    eax
  40ad1a:	shl    DWORD PTR [ecx],0xff
  40ad1d:	(bad)  
  40ad1e:	xchg   ebx,eax
  40ad1f:	test   DWORD PTR ds:0xc91ab2b6,eax
  40ad25:	and    eax,0xd03b880f
  40ad2a:	jp     0x40acf5
  40ad2c:	fs jle 0x40ace3
  40ad2f:	jle    0x40ada5
  40ad31:	and    al,0x32
  40ad33:	out    0x7,eax
  40ad35:	xor    dh,BYTE PTR [ebx+edx*2-0x232013f9]
  40ad3c:	push   0xfffffff2
  40ad3e:	repnz and ah,al
  40ad41:	hlt    
  40ad42:	shl    DWORD PTR [edi],0xcc
  40ad45:	mov    al,ds:0xe9c2856b
  40ad4a:	fisub  DWORD PTR [ecx+0x4]
  40ad4d:	pop    edi
  40ad4e:	es push edi
  40ad50:	ret    
  40ad51:	sub    eax,0xb6729766
  40ad56:	xchg   esp,eax
  40ad57:	test   BYTE PTR [ebx-0x22],dl
  40ad5a:	or     eax,0x9405651a
  40ad5f:	push   edi
  40ad60:	cmp    al,0xad
  40ad62:	ret    
  40ad63:	clc    
  40ad64:	cmp    dl,ah
  40ad66:	bnd jmp 0x874cbaf3
  40ad6c:	inc    eax
  40ad6d:	mov    DWORD PTR ds:0x1c41e613,ebx
  40ad73:	xchg   esi,eax
  40ad74:	in     eax,0x98
  40ad76:	pusha  
  40ad77:	out    0x50,eax
  40ad79:	push   ss
  40ad7a:	push   es
  40ad7b:	mov    esp,0xb0dea0bc
  40ad80:	xchg   ebx,eax
  40ad81:	out    0x3c,al
  40ad83:	cmp    eax,0xa3274a11
  40ad88:	icebp  
  40ad89:	and    dl,BYTE PTR [ebp+0xfa037b2]
  40ad8f:	pop    es
  40ad90:	loopne 0x40ad46
  40ad92:	or     bh,BYTE PTR [ebx-0x65]
  40ad95:	mov    bl,0x25
  40ad97:	and    DWORD PTR [esi+0x75],esp
  40ad9a:	jmp    0x40ada3
  40ad9c:	fwait
  40ad9d:	(bad)  
  40ad9e:	js     0x40ae1c
  40ada0:	std    
  40ada1:	add    DWORD PTR [edx-0x3c],edi
  40ada4:	int    0xaa
  40ada6:	inc    esi
  40ada7:	adc    al,0x91
  40ada9:	or     eax,0x5265f6e3
  40adae:	sub    al,0x28
  40adb0:	mov    esp,fs
  40adb2:	dec    ebp
  40adb3:	dec    ebx
  40adb4:	or     ah,BYTE PTR [edx]
  40adb6:	cmp    edx,DWORD PTR [esi-0x5a]
  40adb9:	sahf   
  40adba:	add    edx,DWORD PTR ds:0xdf0564b6
  40adc0:	inc    ebx
  40adc1:	aas    
  40adc2:	out    0xe0,al
  40adc4:	out    dx,al
  40adc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adc6:	sub    al,0x0
  40adc8:	cs jo  0x40adb5
  40adcb:	or     eax,0x957c1442
  40add0:	cli    
  40add1:	sub    eax,0xc2293f8e
  40add6:	push   ebx
  40add7:	pop    esi
  40add8:	arpl   bx,sp
  40adda:	jno    0x40ad8f
  40addc:	test   al,dl
  40adde:	cmc    
  40addf:	xchg   ebp,eax
  40ade0:	arpl   WORD PTR [edx],bx
  40ade2:	push   ebx
  40ade3:	popf   
  40ade4:	or     esi,edi
  40ade6:	inc    esp
  40ade7:	cmp    esp,ebx
  40ade9:	jecxz  0x40ae10
  40adeb:	arpl   WORD PTR [edi+0x8c2bb84],di
  40adf1:	aaa    
  40adf2:	xchg   ebx,eax
  40adf3:	daa    
  40adf4:	arpl   WORD PTR [ebx-0x20],di
  40adf7:	mov    ebp,0x28128840
  40adfc:	cmc    
  40adfd:	ds (bad) 
  40ae00:	or     edi,ebx
  40ae02:	pop    esi
  40ae03:	aad    0xa7
  40ae05:	invd   
  40ae07:	das    
  40ae08:	xlat   BYTE PTR ds:[ebx]
  40ae09:	pop    ebx
  40ae0a:	dec    ebx
  40ae0b:	in     al,dx
  40ae0c:	jnp    0x40adee
  40ae0e:	ja     0x40ad9c
  40ae10:	(bad)  
  40ae11:	in     al,0x59
  40ae13:	mov    ah,0x92
  40ae15:	aaa    
  40ae16:	jp     0x40ae3f
  40ae18:	repnz std 
  40ae1a:	call   0x76bd63f1
  40ae1f:	inc    esi
  40ae20:	add    BYTE PTR [ebp-0x66],0x29
  40ae24:	or     DWORD PTR ds:[eax],esi
  40ae27:	xchg   BYTE PTR [ebp-0x312a24c0],al
  40ae2d:	pusha  
  40ae2e:	(bad)  
  40ae2f:	call   0x7248a2d2
  40ae34:	loopne 0x40add5
  40ae36:	dec    eax
  40ae37:	(bad)  
  40ae38:	out    0x7b,al
  40ae3a:	inc    edi
  40ae3b:	pop    es
  40ae3c:	stc    
  40ae3d:	ret    
  40ae3e:	out    dx,al
  40ae3f:	fcom   QWORD PTR [eax+edi*2+0x626f5a82]
  40ae46:	mov    eax,ds:0xfbb7a378
  40ae4b:	leave  
  40ae4c:	icebp  
  40ae4d:	clc    
  40ae4e:	push   es
  40ae4f:	push   eax
  40ae50:	shr    dl,0x5b
  40ae53:	jbe    0x40ae67
  40ae55:	xchg   bh,al
  40ae57:	mov    eax,ds:0xf4c101b1
  40ae5c:	adc    bl,0x69
  40ae5f:	jno    0x40aed4
  40ae61:	jp     0x40aebf
  40ae63:	shl    DWORD PTR [edi-0x6e],cl
  40ae66:	xchg   DWORD PTR [edi-0x31],ebx
  40ae69:	add    DWORD PTR [ebx+0x47fc5a9c],ecx
  40ae6f:	mov    ds:0x53abb163,eax
  40ae74:	dec    eax
  40ae75:	add    ah,ah
  40ae77:	jnp    0x40adff
  40ae79:	stc    
  40ae7a:	pop    es
  40ae7b:	xchg   ecx,eax
  40ae7c:	and    al,0xcd
  40ae7e:	cli    
  40ae7f:	ret    0x5b44
  40ae82:	jp     0x40ae26
  40ae84:	fwait
  40ae85:	cmp    eax,0x76f98768
  40ae8a:	daa    
  40ae8b:	inc    edi
  40ae8c:	fstp   TBYTE PTR [edi-0x42]
  40ae8f:	test   BYTE PTR cs:[ecx],0xde
  40ae93:	dec    eax
  40ae94:	mov    esp,DWORD PTR [esi+0x7c]
  40ae97:	into   
  40ae98:	sbb    ecx,DWORD PTR ds:0xc7fecb0b
  40ae9e:	push   cs
  40ae9f:	push   eax
  40aea0:	xor    eax,0xf8b03d15
  40aea5:	inc    edx
  40aea6:	sti    
  40aea7:	retf   
  40aea8:	pop    edx
  40aea9:	push   eax
  40aeaa:	or     ah,BYTE PTR [edx+0x5eeb7e37]
  40aeb0:	and    bh,al
  40aeb2:	adc    eax,0x9536eb72
  40aeb7:	or     al,0xf3
  40aeb9:	imul   ebx,DWORD PTR [edi+0x29746e16],0x41a75aff
  40aec3:	aad    0x96
  40aec5:	mov    bl,0xdf
  40aec7:	dec    ecx
  40aec8:	enter  0xfc4b,0x3f
  40aecc:	dec    esi
  40aecd:	(bad)  
  40aece:	shl    dh,cl
  40aed0:	add    DWORD PTR [ebp+ecx*1-0x5a],edi
  40aed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aed5:	rcl    BYTE PTR [edi-0x6d42c337],1
  40aedb:	in     al,0xfd
  40aedd:	call   0x977d:0x762c2c06
  40aee4:	ins    BYTE PTR es:[edi],dx
  40aee5:	sar    DWORD PTR [esi+0x5],1
  40aee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aee9:	push   eax
  40aeea:	ror    dl,0x1
  40aeed:	mov    al,ds:0xa0a8bfca
  40aef2:	pusha  
  40aef3:	add    DWORD PTR [eax+0x5],0xffffffdf
  40aef7:	stc    
  40aef8:	(bad)  
  40aef9:	pop    ds
  40aefa:	les    edi,FWORD PTR [eax-0x18]
  40aefd:	nop
  40aefe:	add    DWORD PTR [esi+0x4e231570],esp
  40af04:	jno    0x40ae95
  40af06:	push   edx
  40af07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af08:	xchg   ebx,eax
  40af09:	scas   eax,DWORD PTR es:[edi]
  40af0a:	cwde   
  40af0b:	int    0x8
  40af0d:	sbb    esi,ecx
  40af0f:	mov    ds:0xb1ef1ce0,al
  40af14:	imul   edx,DWORD PTR [esi+edi*2-0x476c8c24],0x4
  40af1c:	xor    BYTE PTR ds:0x462cf7c1,dl
  40af22:	jne    0x40af32
  40af24:	sbb    esp,DWORD PTR [ebp-0x64]
  40af27:	or     eax,DWORD PTR [ecx]
  40af29:	sar    BYTE PTR [edx+ecx*1+0x3679330a],0x78
  40af31:	int3   
  40af32:	jae    0x40af4d
  40af34:	lds    edi,FWORD PTR [eax+eax*2]
  40af37:	jecxz  0x40af7a
  40af39:	retf   
  40af3a:	ficomp DWORD PTR [edi+0xf]
  40af3d:	xchg   ebx,eax
  40af3e:	ror    dl,1
  40af40:	adc    DWORD PTR [ecx],ecx
  40af42:	js     0x40af38
  40af44:	mov    cl,0xd9
  40af46:	push   ss
  40af47:	ja     0x40aedf
  40af49:	call   0xa156:0xf8ba646c
  40af50:	jge    0x40aeeb
  40af52:	js     0x40afc7
  40af54:	jmp    0xf5f5:0x781dfb02
  40af5b:	jl     0x40afb2
  40af5d:	mov    ?,WORD PTR [ebp+ebp*1-0x7b0a3ac9]
  40af64:	pop    es
  40af65:	lock and ecx,DWORD PTR [ecx]
  40af68:	cld    
  40af69:	sub    al,0x24
  40af6b:	imul   ebp,DWORD PTR [ebx-0x2a],0xd270dfa4
  40af72:	stos   BYTE PTR es:[edi],al
  40af73:	cmp    DWORD PTR [ecx+0x12],ecx
  40af76:	xor    al,0x40
  40af79:	xor    eax,0xbb54d255
  40af7e:	pop    esp
  40af7f:	clc    
  40af80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af81:	out    dx,eax
  40af82:	sub    DWORD PTR [edi-0x2ef0b4be],edi
  40af88:	mov    dl,0xe7
  40af8a:	sub    eax,0x166eab8
  40af8f:	xor    eax,0x32964248
  40af94:	sub    cl,bh
  40af96:	ins    BYTE PTR es:[edi],dx
  40af97:	dec    edx
  40af98:	dec    ebx
  40af99:	inc    esp
  40af9a:	mov    dl,0x7e
  40af9c:	enter  0x1473,0x4b
  40afa0:	mul    BYTE PTR [edx+0x69]
  40afa3:	iret   
  40afa4:	push   ebx
  40afa5:	std    
  40afa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afa7:	ins    DWORD PTR es:[edi],dx
  40afa8:	inc    ecx
  40afa9:	push   esi
  40afaa:	arpl   WORD PTR [eax+0x13e3b0aa],bp
  40afb0:	nop
  40afb1:	outs   dx,BYTE PTR ds:[esi]
  40afb2:	mov    esp,0x4f4f9951
  40afb7:	mov    edx,DWORD PTR [ebx+ebp*8-0x5c]
  40afbb:	fnsave [ebp+esi*4+0x3554bd6e]
  40afc2:	data16 fwait
  40afc4:	mov    ds:0xd56f2fbd,eax
  40afc9:	sub    eax,0xa23523d5
  40afce:	sahf   
  40afcf:	int3   
  40afd0:	adc    BYTE PTR [edi],ch
  40afd2:	fist   DWORD PTR [edx+0x44]
  40afd5:	adc    ebx,DWORD PTR [edi]
  40afd7:	adc    ah,BYTE PTR [ecx-0x104cb74e]
  40afdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afde:	mov    bh,0xea
  40afe0:	mov    bh,0xf5
  40afe2:	lods   eax,DWORD PTR ds:[esi]
  40afe3:	inc    eax
  40afe4:	enter  0x2db2,0x60
  40afe8:	inc    esp
  40afe9:	(bad)  
  40afea:	jecxz  0x40afa8
  40afec:	adc    BYTE PTR [ebx+0x3],cl
  40afef:	mov    al,ds:0x51c07bb5
  40aff4:	push   edx
  40aff5:	mov    ds:0xd50bd20d,eax
  40affa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40affb:	xor    DWORD PTR [edx-0x27],edi
  40affe:	push   ds
  40afff:	std    
  40b000:	in     al,0xab
  40b002:	mov    ds:0xd654f382,al
  40b007:	jns    0x40b009
  40b009:	mov    eax,ds:0xf59f088c
  40b00e:	(bad)  
  40b00f:	and    eax,0x53804852
  40b014:	dec    esp
  40b015:	sbb    DWORD PTR [ebp-0x34e967b3],edi
  40b01b:	or     bh,dl
  40b01d:	fwait
  40b01e:	mov    edi,0x2ba9b00c
  40b023:	adc    eax,0x55eefef3
  40b028:	mov    edi,0xb909c42f
  40b02d:	cmp    BYTE PTR [edi-0x36c9957a],dh
  40b033:	out    dx,eax
  40b034:	adc    dl,BYTE PTR [edx*8-0x7bd247c2]
  40b03b:	mov    cl,0x2f
  40b03d:	dec    ecx
  40b03e:	push   ds
  40b03f:	in     al,dx
  40b040:	mov    ebp,0x87cba5aa
  40b045:	lea    ebp,[ecx+0x3b]
  40b048:	adc    al,0x8
  40b04a:	cs inc edx
  40b04c:	push   ebx
  40b04d:	xor    eax,0x4e24ce84
  40b052:	sub    dh,ah
  40b054:	daa    
  40b055:	push   0xffffffc6
  40b057:	setge  bh
  40b05a:	or     al,0x1e
  40b05c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b05d:	pop    eax
  40b05e:	or     eax,0xce4f27b2
  40b063:	pop    edi
  40b064:	pushf  
  40b065:	mov    bl,0xdb
  40b067:	jno    0x40b0cf
  40b069:	mov    ebx,0xf0eca4dc
  40b06e:	in     eax,0xb9
  40b070:	div    DWORD PTR [ebx]
  40b072:	pop    esi
  40b073:	mov    al,ds:0x25455a0
  40b078:	lea    edi,[ebx+0x4]
  40b07b:	mov    eax,DWORD PTR [eax-0x45]
  40b07e:	cmp    BYTE PTR ds:[edx-0x196ce0dd],ch
  40b085:	leave  
  40b086:	mov    WORD PTR [esi-0x29],?
  40b089:	mov    WORD PTR [edi-0x160cbe8a],ss
  40b08f:	mov    al,0x0
  40b091:	repnz xchg ecx,eax
  40b093:	ror    edx,cl
  40b095:	inc    ebp
  40b096:	mov    ah,0x3c
  40b099:	pop    esp
  40b09a:	fdiv   QWORD PTR [ecx-0x6b]
  40b09d:	sub    eax,0x37045530
  40b0a2:	test   al,0xb0
  40b0a4:	mov    edx,0x653d4b5e
  40b0a9:	pop    es
  40b0aa:	rcl    BYTE PTR [eax+0x39],cl
  40b0ad:	aas    
  40b0ae:	pop    ss
  40b0af:	fdiv   DWORD PTR [edx]
  40b0b1:	jecxz  0x40b0c1
  40b0b3:	inc    ebx
  40b0b4:	mov    cl,0x34
  40b0b6:	rol    esi,cl
  40b0b8:	push   0xffffffc3
  40b0ba:	ret    
  40b0bb:	mov    ch,0xdf
  40b0bd:	gs loop 0x40b0c3
  40b0c0:	xchg   ecx,eax
  40b0c1:	cmp    ebx,ecx
  40b0c3:	popf   
  40b0c4:	outs   dx,DWORD PTR ds:[esi]
  40b0c5:	or     BYTE PTR [ecx-0x11],bh
  40b0c8:	sub    al,al
  40b0ca:	pop    eax
  40b0cb:	fisub  DWORD PTR [ebx-0x903b5e7]
  40b0d1:	push   edi
  40b0d2:	(bad)  
  40b0d3:	imul   edi,DWORD PTR [ecx],0xffffffa1
  40b0d6:	cmp    al,0xbd
  40b0d8:	cmp    BYTE PTR [esi-0x13001aef],al
  40b0de:	shl    BYTE PTR [edi+0x9],1
  40b0e1:	les    esi,FWORD PTR [edi+ebp*4]
  40b0e4:	lahf   
  40b0e5:	(bad)  
  40b0e6:	cli    
  40b0e7:	out    dx,al
  40b0e8:	lea    ecx,[edx]
  40b0ea:	loope  0x40b09d
  40b0ec:	inc    eax
  40b0ed:	aad    0xed
  40b0ef:	mov    al,ds:0xdd02c09b
  40b0f4:	mov    BYTE PTR [ebx+0x439e7292],ah
  40b0fa:	xor    al,0x22
  40b0fc:	fucomip st,st(2)
  40b0fe:	add    eax,0x1292d916
  40b103:	cld    
  40b104:	cdq    
  40b105:	scas   eax,DWORD PTR es:[edi]
  40b106:	pop    ds
  40b107:	mov    eax,DWORD PTR [edi+0x27]
  40b10a:	or     al,ah
  40b10c:	adc    al,0x51
  40b10e:	pop    esi
  40b10f:	or     ebx,DWORD PTR [edi]
  40b111:	sub    eax,0x4f2cb33d
  40b116:	in     al,0x3e
  40b118:	jno    0x40b14a
  40b11a:	add    BYTE PTR [eax-0x5e432932],bh
  40b120:	(bad)  
  40b121:	dec    edi
  40b122:	mov    dl,0xa4
  40b124:	mov    edi,0x6911bee8
  40b129:	adc    ebp,DWORD PTR [ebp-0x306f7987]
  40b12f:	loop   0x40b0d2
  40b131:	cdq    
  40b132:	call   0x777b99e1
  40b137:	jmp    0x52a1dc67
  40b13c:	xchg   esi,eax
  40b13d:	sti    
  40b13e:	dec    ecx
  40b13f:	dec    eax
  40b140:	mov    ah,0x41
  40b142:	je     0x40b102
  40b144:	xor    esp,ebp
  40b146:	icebp  
  40b147:	ja     0x40b0ce
  40b149:	and    al,0x1f
  40b14b:	or     bh,BYTE PTR [edi-0x3a76afcf]
  40b151:	jg     0x40b17f
  40b153:	cdq    
  40b154:	stc    
  40b155:	push   cs
  40b156:	bound  eax,QWORD PTR [ebx-0x1d]
  40b159:	mov    dh,0xb2
  40b15b:	aaa    
  40b15c:	int    0x35
  40b15e:	sbb    al,0xb2
  40b160:	loopne 0x40b0e3
  40b162:	push   ebp
  40b163:	aaa    
  40b164:	jl     0x40b198
  40b166:	(bad)  
  40b167:	xchg   ebx,eax
  40b168:	xor    cl,cl
  40b16a:	xchg   ebp,eax
  40b16b:	call   0xaf9b8634
  40b170:	int    0x77
  40b172:	fwait
  40b173:	int    0x45
  40b175:	add    al,0x76
  40b177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b178:	mov    esi,0x4607224a
  40b17d:	add    cl,BYTE PTR [eax+0x355e0d09]
  40b183:	icebp  
  40b184:	call   0x9ad3:0xb9d53f63
  40b18b:	adc    eax,0xe0d8e039
  40b190:	aam    0xc8
  40b192:	into   
  40b193:	out    dx,eax
  40b194:	aad    0x7a
  40b196:	test   al,0x10
  40b198:	adc    eax,DWORD PTR [edi-0x1a7c4755]
  40b19e:	and    al,0x6b
  40b1a0:	push   cs
  40b1a1:	out    0xfd,al
  40b1a3:	les    edi,FWORD PTR ds:0xb4953f59
  40b1a9:	sub    bh,BYTE PTR [ebp+eiz*8+0x62]
  40b1ad:	mov    eax,ds:0x4f6a91ec
  40b1b2:	mov    DWORD PTR [eax+0x29],ebx
  40b1b5:	jge    0x40b189
  40b1b7:	mov    eax,0x6832329e
  40b1bc:	push   ds
  40b1bd:	mov    ebx,0x9f273cbd
  40b1c2:	cmp    BYTE PTR [edx-0x52fb8690],cl
  40b1c8:	push   0x7b
  40b1ca:	jl     0x40b1d2
  40b1cc:	and    DWORD PTR [ebp+0x5c],edi
  40b1cf:	je     0x40b18e
  40b1d1:	sahf   
  40b1d2:	pop    ss
  40b1d3:	mov    ds:0x498fcb19,al
  40b1d8:	xor    eax,0x41478e82
  40b1dd:	jb     0x40b241
  40b1df:	rcl    BYTE PTR [edx+0x7e],1
  40b1e2:	cwde   
  40b1e3:	pop    ebp
  40b1e4:	xor    BYTE PTR [eax+0x60],ch
  40b1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1e8:	push   esi
  40b1e9:	lds    eax,FWORD PTR [ecx]
  40b1eb:	sub    BYTE PTR [esi],dh
  40b1ed:	xor    BYTE PTR [edx],bl
  40b1ef:	mov    esp,0x7fc6908a
  40b1f4:	dec    edx
  40b1f5:	add    al,0x96
  40b1f7:	scas   al,BYTE PTR es:[edi]
  40b1f8:	loop   0x40b22e
  40b1fa:	pop    edx
  40b1fb:	mov    bl,bh
  40b1fd:	aad    0xfd
  40b1ff:	sub    bl,cl
  40b201:	or     eax,0xa5d4f753
  40b206:	rcl    DWORD PTR [edi-0x2a],cl
  40b209:	ret    0xa9e5
  40b20c:	fwait
  40b20d:	mov    ds:0xe0f2ed4e,eax
  40b212:	xchg   esi,eax
  40b213:	test   DWORD PTR [eax-0x1a97a476],0x98d9ee53
  40b21d:	mov    WORD PTR [esi-0xb],gs
  40b220:	sbb    al,0xe5
  40b222:	pop    esp
  40b223:	and    edi,DWORD PTR [esi]
  40b225:	pop    ebp
  40b226:	cmp    al,0x4c
  40b228:	xchg   esp,eax
  40b229:	jmp    0x40b21f
  40b22b:	fsubr  QWORD PTR [edx+0x1df451]
  40b231:	or     al,0xfe
  40b233:	jae    0x40b226
  40b235:	add    eax,0xf8e797af
  40b23a:	cmp    BYTE PTR ds:0xe515dc23,ah
  40b240:	aam    0xb9
  40b242:	jmp    0x50:0xb6d5c6d1
  40b249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b24a:	adc    eax,0xa60ed7d5
  40b24f:	je     0x40b25a
  40b251:	mov    dh,0xfe
  40b253:	iret   
  40b254:	ds mov eax,0xd7fe67d
  40b25a:	iret   
  40b25b:	push   edx
  40b25c:	fnstcw WORD PTR [eax]
  40b25e:	push   esi
  40b25f:	inc    esp
  40b260:	xchg   DWORD PTR [ebx-0x48],ebx
  40b263:	(bad)
  40b267:	pusha  
  40b268:	leave  
  40b269:	scas   eax,DWORD PTR es:[edi]
  40b26a:	es aam 0xaf
  40b26d:	xchg   edx,eax
  40b26e:	pop    ebp
  40b26f:	or     BYTE PTR [edi-0x3830eb51],al
  40b275:	das    
  40b276:	jge    0x40b2d6
  40b278:	sbb    ebp,DWORD PTR [ecx+0x44641c4b]
  40b27e:	mov    dh,0xef
  40b280:	mov    DWORD PTR [edx+eiz*8-0x76f29644],ebx
  40b287:	loopne 0x40b2fa
  40b289:	arpl   WORD PTR [ebp+0x1f],bx
  40b28c:	adc    DWORD PTR [esp+eax*8-0x4f],edi
  40b290:	jmp    0xdef3:0x5bb9ca7f
  40b297:	pop    esi
  40b298:	push   ebx
  40b299:	cmp    DWORD PTR [edx-0x3b],esi
  40b29c:	push   0xabb4e7da
  40b2a1:	lds    edi,FWORD PTR gs:[edi-0x4c]
  40b2a5:	mov    esi,?
  40b2a7:	je     0x40b247
  40b2a9:	loope  0x40b291
  40b2ab:	cmp    DWORD PTR [edx+eax*1-0x6f],edx
  40b2af:	push   ss
  40b2b0:	mov    dh,0x1
  40b2b2:	push   esp
  40b2b3:	(bad)  
  40b2b4:	cmp    DWORD PTR [edx+0x7c967927],esi
  40b2ba:	jns    0x40b2fd
  40b2bc:	adc    DWORD PTR [edx+ecx*1+0x6b85243e],edx
  40b2c3:	add    al,0x11
  40b2c5:	bound  ecx,QWORD PTR [edi]
  40b2c7:	mov    cl,BYTE PTR [ecx+ebp*2+0x7d1cb4e9]
  40b2ce:	std    
  40b2cf:	ja     0x40b31a
  40b2d1:	test   BYTE PTR [ecx],0x79
  40b2d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2d5:	push   ecx
  40b2d6:	xor    edi,DWORD PTR [edx-0x5bf2d228]
  40b2dc:	sbb    edi,DWORD PTR [ebx+0x31]
  40b2df:	push   ecx
  40b2e0:	mov    eax,0x25e0dc3a
  40b2e5:	rol    DWORD PTR [edi+0x48],cl
  40b2e8:	stc    
  40b2e9:	mov    ebp,0x5ac84cb5
  40b2ee:	fimul  WORD PTR [eax-0x25]
  40b2f1:	pop    ds
  40b2f2:	test   eax,0xf06f83d6
  40b2f7:	cmp    BYTE PTR [edi-0x76fa4372],0xcf
  40b2fe:	xchg   esp,eax
  40b2ff:	push   ebx
  40b300:	sbb    eax,0xc8bb8576
  40b305:	mov    dl,0xa7
  40b307:	ja     0x40b2cc
  40b309:	or     bh,BYTE PTR [edi-0x3d39c085]
  40b30f:	dec    eax
  40b310:	mov    fs:0x65bb41f6,ax
  40b317:	add    ch,BYTE PTR [esi-0x6844865e]
  40b31d:	or     dh,dh
  40b31f:	ss scas al,BYTE PTR es:[edi]
  40b321:	cs hlt 
  40b323:	cli    
  40b324:	repnz shr ah,1
  40b327:	sub    dh,al
  40b329:	cmp    DWORD PTR [eax],0x1d
  40b32c:	mov    dh,0x1c
  40b32e:	hlt    
  40b32f:	adc    BYTE PTR [ebp+0x5321dcb8],bh
  40b335:	and    eax,ebp
  40b337:	retf   0x76b4
  40b33a:	(bad)  [eax]
  40b33c:	mov    cl,0x3
  40b33e:	jge    0x40b3b6
  40b340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b341:	fisubr DWORD PTR [ebp+0x16]
  40b344:	dec    esi
  40b345:	retf   0x90e8
  40b348:	mov    BYTE PTR ds:0x6756edff,ch
  40b34e:	idiv   BYTE PTR [ebp+ecx*1+0x1a0cab08]
  40b355:	dec    ecx
  40b356:	jg     0x40b2ee
  40b358:	pop    es
  40b359:	sbb    dl,BYTE PTR [edx]
  40b35b:	push   ecx
  40b35c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b35d:	sub    al,0x38
  40b35f:	pop    ss
  40b360:	lods   al,BYTE PTR ds:[esi]
  40b361:	repnz push cs
  40b363:	push   ds
  40b364:	repz mov cs,WORD PTR [ecx]
  40b367:	mov    cl,0x27
  40b369:	pop    ebp
  40b36a:	leave  
  40b36b:	les    esi,FWORD PTR [esi]
  40b36d:	or     edx,DWORD PTR [eax+0x127d07a4]
  40b373:	loop   0x40b3df
  40b375:	sbb    BYTE PTR [edi-0xc],bl
  40b378:	jnp    0x40b3a7
  40b37a:	enter  0xf788,0x6b
  40b37e:	mov    bl,0x67
  40b380:	push   esp
  40b381:	lods   al,BYTE PTR ds:[esi]
  40b382:	push   eax
  40b383:	pop    ss
  40b384:	push   eax
  40b385:	rcl    BYTE PTR [ecx+0x1d11156a],0x32
  40b38c:	jnp    0x40b341
  40b38e:	fst    DWORD PTR [ecx+0x7d3cf946]
  40b394:	ins    BYTE PTR es:[edi],dx
  40b395:	daa    
  40b396:	dec    esi
  40b397:	jb     0x40b367
  40b399:	jecxz  0x40b402
  40b39b:	shl    BYTE PTR [esi-0x57],0xc3
  40b39f:	sar    eax,cl
  40b3a1:	dec    ecx
  40b3a2:	jnp    0x40b35e
  40b3a4:	mov    cl,0xa7
  40b3a6:	jmp    FWORD PTR [edi+0x2c108c3f]
  40b3ac:	cmc    
  40b3ad:	ret    
  40b3ae:	jno    0x40b37a
  40b3b0:	pop    ecx
  40b3b1:	nop
  40b3b2:	mov    al,BYTE PTR [edi+esi*2-0x55]
  40b3b6:	mov    bl,0x55
  40b3b8:	adc    ebp,DWORD PTR [ebp+edi*8-0x6389275a]
  40b3bf:	inc    edi
  40b3c0:	pushf  
  40b3c1:	clc    
  40b3c2:	and    al,0xff
  40b3c4:	or     ah,BYTE PTR [eax+0x44]
  40b3c7:	mov    edi,0x1b8a30b6
  40b3cc:	retf   0xad02
  40b3cf:	xor    al,0xe5
  40b3d1:	sti    
  40b3d2:	leave  
  40b3d3:	cli    
  40b3d4:	loop   0x40b35a
  40b3d6:	lds    edx,FWORD PTR [edi-0x48]
  40b3d9:	loopne 0x40b379
  40b3db:	clc    
  40b3dc:	jbe    0x40b41b
  40b3de:	mov    edi,0xe3eb1b53
  40b3e3:	mov    ah,0xb6
  40b3e5:	xchg   ebp,eax
  40b3e6:	dec    esp
  40b3e7:	sub    BYTE PTR [esi-0x20],dl
  40b3ea:	mov    eax,ds:0x8ebcfd3
  40b3ef:	stos   DWORD PTR es:[edi],eax
  40b3f0:	sub    DWORD PTR [eax],ebx
  40b3f2:	mov    eax,ds:0x3b982a44
  40b3f7:	adc    BYTE PTR [edx],bl
  40b3f9:	test   bl,0x47
  40b3fc:	lods   eax,DWORD PTR ds:[esi]
  40b3fd:	fwait
  40b3fe:	adc    DWORD PTR [ecx-0x5e],ecx
  40b401:	sar    BYTE PTR [eax],1
  40b403:	leave  
  40b404:	(bad)  [edx+edx*8-0x77]
  40b408:	inc    esi
  40b409:	inc    edx
  40b40a:	mov    DWORD PTR [esi],esi
  40b40c:	inc    esi
  40b40d:	(bad)  
  40b40f:	and    bl,BYTE PTR [edi+ebx*8]
  40b412:	outs   dx,BYTE PTR ds:[esi]
  40b413:	in     al,dx
  40b414:	pop    ds
  40b415:	rol    cl,cl
  40b417:	andps  xmm4,XMMWORD PTR cs:[esi]
  40b41b:	jns    0x40b42b
  40b41d:	mov    eax,ds:0x67cf955c
  40b422:	lods   al,BYTE PTR ds:[esi]
  40b423:	test   al,0x77
  40b425:	push   edi
  40b426:	jg     0x40b3fd
  40b428:	loop   0x40b499
  40b42a:	inc    eax
  40b42b:	or     eax,0x5f25bad4
  40b430:	push   ds
  40b431:	jg     0x40b477
  40b433:	mov    al,ds:0x3b636b4f
  40b438:	adc    edx,DWORD PTR [edi]
  40b43a:	jmp    0xc900:0xe6b0d0ff
  40b441:	push   esi
  40b442:	call   0x9c67127f
  40b447:	jne    0x40b439
  40b449:	lea    esp,[eax+0x7d993646]
  40b44f:	push   edi
  40b450:	lahf   
  40b451:	push   cs
  40b452:	cmp    al,0x2b
  40b454:	test   BYTE PTR [ebp+0x58],dh
  40b457:	dec    ebp
  40b458:	dec    eax
  40b459:	sbb    eax,ebx
  40b45b:	mov    DWORD PTR [eax-0x36],edx
  40b45e:	mov    ebp,0x12a873c2
  40b463:	cdq    
  40b464:	mov    fs,WORD PTR [eax+0x458068d8]
  40b46a:	dec    edi
  40b46b:	xor    esi,DWORD PTR [ebx+ecx*2]
  40b46e:	or     DWORD PTR [ebx+0x697c35bb],ebp
  40b474:	call   0xe28a19fe
  40b479:	les    edx,FWORD PTR [eax-0x21]
  40b47c:	pop    eax
  40b47d:	pop    ds
  40b47e:	ror    BYTE PTR [eax+0xd1824a1],cl
  40b484:	pop    eax
  40b485:	fild   DWORD PTR [ebx-0x50]
  40b488:	xor    DWORD PTR [ebx+0x13],0xffffffca
  40b48c:	mov    ebx,0xc55fe49f
  40b491:	clc    
  40b492:	add    edx,ebp
  40b494:	jae    0x40b507
  40b496:	mov    ecx,DWORD PTR [eax-0x4a]
  40b499:	(bad)  
  40b49a:	addr16 mov ecx,0x92796c8d
  40b4a0:	or     dl,BYTE PTR [edi-0x9]
  40b4a3:	iret   
  40b4a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4a5:	push   eax
  40b4a6:	mov    ch,bh
  40b4a8:	and    al,BYTE PTR [edi+0x49]
  40b4ab:	lods   eax,DWORD PTR ds:[esi]
  40b4ac:	test   eax,0x86bf73f6
  40b4b1:	xchg   DWORD PTR [ebp-0x22],esp
  40b4b4:	loope  0x40b4f3
  40b4b6:	out    0x2c,al
  40b4b8:	pop    eax
  40b4b9:	sbb    eax,esp
  40b4bb:	cwde   
  40b4bc:	push   DWORD PTR [edi+0x344a50f7]
  40b4c2:	data16 jg 0x40b522
  40b4c5:	inc    ebp
  40b4c6:	jns    0x40b4a3
  40b4c8:	and    esi,DWORD PTR [esi-0x57]
  40b4cb:	sbb    BYTE PTR [eax+edi*2],0x44
  40b4cf:	inc    eax
  40b4d0:	outs   dx,DWORD PTR ds:[esi]
  40b4d1:	sbb    ecx,edi
  40b4d3:	push   cs
  40b4d4:	in     al,dx
  40b4d5:	pop    eax
  40b4d6:	loopne 0x40b46e
  40b4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4d9:	jbe    0x40b480
  40b4db:	xor    bh,BYTE PTR [ebp-0x27c867f4]
  40b4e1:	xchg   esp,eax
  40b4e2:	fwait
  40b4e3:	pusha  
  40b4e4:	xlat   BYTE PTR ds:[ebx]
  40b4e5:	int3   
  40b4e6:	jle    0x40b522
  40b4e8:	pop    edi
  40b4e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4ea:	push   edx
  40b4eb:	push   edx
  40b4ec:	sbb    DWORD PTR gs:[esi+0x4a],0x105d12f7
  40b4f4:	js     0x40b530
  40b4f6:	in     al,0xc3
  40b4f8:	push   ss
  40b4f9:	or     esp,edx
  40b4fb:	mov    ebx,0x5a4e3624
  40b500:	inc    edx
  40b501:	pop    edi
  40b502:	mov    BYTE PTR [edx-0x79cff28e],ch
  40b508:	ds icebp 
  40b50a:	pushf  
  40b50b:	cs fwait
  40b50d:	lods   al,BYTE PTR ds:[esi]
  40b50e:	out    dx,eax
  40b50f:	pop    edx
  40b510:	dec    esp
  40b511:	shl    BYTE PTR [ebx+0x7408ca4e],cl
  40b517:	retf   0x7136
  40b51a:	loopne 0x40b593
  40b51c:	(bad)  
  40b51d:	fisttp QWORD PTR [edx-0x6]
  40b520:	and    ah,dh
  40b522:	aaa    
  40b523:	mov    bl,0x1
  40b525:	jp     0x40b4b6
  40b527:	jmp    0x5655:0xab9dbd38
  40b52e:	xor    al,0x2f
  40b530:	imul   edx,DWORD PTR [eax-0x78],0x12
  40b534:	mov    dl,0x64
  40b536:	sbb    DWORD PTR [esp+ebp*1-0x4d05556a],ebx
  40b53d:	pop    ds
  40b53e:	sbb    dl,BYTE PTR [esi+0x4d299ad2]
  40b544:	jp     0x40b567
  40b546:	nop
  40b547:	add    edx,0xaadb7e7b
  40b54d:	push   ecx
  40b54e:	mov    ebx,0xb71ea0a5
  40b553:	pop    ecx
  40b554:	popa   
  40b555:	iret   
  40b556:	inc    edx
  40b557:	xchg   esi,eax
  40b558:	pop    esp
  40b559:	fsub   DWORD PTR [edi]
  40b55b:	jge    0x40b53f
  40b55d:	js     0x40b55f
  40b55f:	(bad)  [edx+ebx*2-0x72]
  40b563:	xacquire xchg DWORD PTR [edx-0x61841ee7],eax
  40b56a:	or     DWORD PTR [ecx+0x6fd04abf],edx
  40b570:	cmp    eax,0xb7d146ff
  40b575:	and    al,0x4d
  40b577:	sahf   
  40b578:	cmp    bh,ch
  40b57a:	mov    dl,0xeb
  40b57c:	dec    esi
  40b57d:	(bad)  
  40b57f:	xor    al,BYTE PTR [edx]
  40b581:	repnz mov WORD PTR [ebx-0x79de81d7],?
  40b588:	and    ebp,DWORD PTR [esi-0x5791ad33]
  40b58e:	mov    cl,0xa5
  40b590:	sub    ecx,DWORD PTR [ebx-0x1fa34dff]
  40b596:	lods   eax,DWORD PTR ds:[esi]
  40b597:	dec    eax
  40b598:	pop    ebp
  40b599:	mov    eax,0x93d5e348
  40b59e:	ja     0x40b5d8
  40b5a0:	sbb    bl,BYTE PTR [edx]
  40b5a2:	call   0xd4039b38
  40b5a7:	inc    esp
  40b5a8:	mov    ecx,0x153f585a
  40b5ad:	push   edx
  40b5ae:	push   esi
  40b5af:	xor    ebp,DWORD PTR [eax+0x268f8daa]
  40b5b5:	fld    QWORD PTR [ecx-0x3b455fa9]
  40b5bb:	scas   eax,DWORD PTR es:[edi]
  40b5bc:	and    al,0x3a
  40b5be:	pusha  
  40b5bf:	inc    ebx
  40b5c0:	cdq    
  40b5c1:	dec    esp
  40b5c2:	cmp    esp,DWORD PTR [ebx+0x43]
  40b5c5:	stos   DWORD PTR es:[edi],eax
  40b5c6:	mov    cl,0x8d
  40b5c8:	pop    edi
  40b5c9:	pop    ds
  40b5ca:	popa   
  40b5cb:	dec    edx
  40b5cc:	pop    edi
  40b5cd:	(bad)  
  40b5ce:	xchg   edi,eax
  40b5cf:	and    al,0x40
  40b5d1:	xstore-rng (bad)
  40b5d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5d3:	(bad)  
  40b5d4:	jmp    0x79627171
  40b5d9:	stc    
  40b5da:	and    BYTE PTR ds:0xe43a15a8,cl
  40b5e0:	jmp    0x40b5d6
  40b5e2:	sbb    al,0xa6
  40b5e4:	call   0x7e75:0x729d5625
  40b5eb:	adc    DWORD PTR [ebp-0x11da230d],ebx
  40b5f1:	xchg   dh,dl
  40b5f3:	nop
  40b5f4:	ficom  DWORD PTR [esi+0x7a4eabcb]
  40b5fa:	ficomp DWORD PTR [edx+0x55]
  40b5fd:	mov    bl,0xe3
  40b5ff:	jnp    0x40b644
  40b601:	pop    esi
  40b602:	xchg   BYTE PTR [eax-0x48],ah
  40b605:	mov    eax,0x91b9293
  40b60a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b60b:	out    0xce,al
  40b60d:	push   ebp
  40b60e:	or     ch,BYTE PTR [ebx+ebp*2+0x1c38a1f6]
  40b615:	cmp    ah,BYTE PTR [edi+0x3af50f47]
  40b61b:	hlt    
  40b61c:	mov    bh,0xb8
  40b61e:	imul   esp,DWORD PTR gs:[eax],0x9
  40b622:	call   0x6dee:0x2386118e
  40b629:	ss mov dl,0x7c
  40b62c:	mov    dh,0xa7
  40b62e:	std    
  40b62f:	shr    DWORD PTR [edi-0x28],cl
  40b632:	xor    eax,0x1ff63f
  40b637:	bnd jg 0x40b620
  40b63a:	jge    0x40b697
  40b63c:	jb     0x40b62a
  40b63e:	iret   
  40b63f:	mov    al,0x68
  40b641:	mov    BYTE PTR [ebx-0x5792516],cl
  40b647:	jg     0x40b60d
  40b649:	adc    ebx,DWORD PTR [edi-0x5fa60ce7]
  40b64f:	call   0x6b20:0x10057da
  40b656:	test   al,0xcc
  40b658:	pop    ss
  40b659:	xor    BYTE PTR [edx-0x1d52db81],dl
  40b65f:	cmp    dl,ah
  40b661:	test   DWORD PTR [edi],eax
  40b663:	dec    ebp
  40b664:	std    
  40b665:	jno    0x40b62f
  40b667:	mov    esi,0x6238b4b1
  40b66c:	mov    eax,ds:0x33f8ab00
  40b671:	jae    0x40b675
  40b673:	mov    ebx,0xd58216f7
  40b678:	lods   al,BYTE PTR ds:[esi]
  40b679:	mov    ds:0x3a19dce6,eax
  40b67e:	mov    ebx,0xef2606fe
  40b683:	loopne 0x40b609
  40b685:	fcomp  DWORD PTR [esi-0x1081a258]
  40b68b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b68c:	jge    0x40b63e
  40b68e:	cld    
  40b68f:	cld    
  40b690:	sub    al,BYTE PTR [eax-0x655c13]
  40b696:	mov    ecx,0x4a852c9
  40b69b:	mov    cl,0xaf
  40b69d:	(bad)  
  40b6a0:	xchg   BYTE PTR [ecx],cl
  40b6a2:	lahf   
  40b6a3:	sbb    al,BYTE PTR [edx+0x39]
  40b6a6:	dec    edx
  40b6a7:	popf   
  40b6a8:	std    
  40b6a9:	and    eax,0xa19ca2c2
  40b6ae:	(bad)  
  40b6af:	mov    dh,0x72
  40b6b1:	dec    eax
  40b6b2:	ins    DWORD PTR es:[edi],dx
  40b6b3:	fisub  DWORD PTR [esi-0x52]
  40b6b6:	aad    0x25
  40b6b8:	addr16 cmp esi,0xb4efbcb7
  40b6bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6c0:	addr16 loope 0x40b682
  40b6c3:	mov    ebx,0xcf043ec5
  40b6c8:	rol    BYTE PTR [ebp+0x1f],1
  40b6cb:	mov    gs,edx
  40b6cd:	int3   
  40b6ce:	pop    ds
  40b6cf:	popa   
  40b6d0:	push   ebx
  40b6d1:	ret    
  40b6d2:	dec    edx
  40b6d3:	mov    DWORD PTR [eax],edx
  40b6d5:	pop    edx
  40b6d6:	pop    edx
  40b6d7:	ret    
  40b6d8:	push   cs
  40b6d9:	pop    esp
  40b6da:	jo     0x40b716
  40b6dc:	into   
  40b6dd:	inc    ebx
  40b6de:	outs   dx,DWORD PTR ss:[esi]
  40b6e0:	loope  0x40b667
  40b6e2:	or     ch,bh
  40b6e4:	daa    
  40b6e5:	jbe    0x40b66b
  40b6e7:	and    BYTE PTR [esi],bl
  40b6e9:	cmp    DWORD PTR [edx],ecx
  40b6eb:	and    BYTE PTR [edx-0x7f],cl
  40b6ee:	retf   
  40b6ef:	push   ecx
  40b6f0:	mov    bl,0x10
  40b6f2:	jbe    0x40b694
  40b6f4:	in     eax,0xea
  40b6f6:	xor    eax,0xf3a6d2ec
  40b6fb:	push   es
  40b6fc:	inc    ecx
  40b6fd:	sub    bl,BYTE PTR [edx-0xcbeb61d]
  40b703:	cli    
  40b704:	push   ebp
  40b705:	out    dx,al
  40b706:	cli    
  40b707:	mov    bh,0x0
  40b709:	mov    cs,ebp
  40b70b:	xor    eax,0x242aa7d5
  40b710:	mov    ebx,0x1336276b
  40b715:	nop
  40b716:	je     0x40b72f
  40b718:	adc    eax,ebx
  40b71a:	(bad)  
  40b71b:	scas   al,BYTE PTR es:[edi]
  40b71c:	mov    ecx,eax
  40b71e:	shl    DWORD PTR [ebp-0x54],cl
  40b721:	out    dx,al
  40b722:	je     0x40b73b
  40b724:	sub    DWORD PTR [ecx],esp
  40b726:	out    0x6f,eax
  40b728:	call   0x8ad7:0xe3e7b6fb
  40b72f:	cmp    al,al
  40b731:	(bad)  
  40b732:	jbe    0x40b7ae
  40b734:	fsub   QWORD PTR [edi+0x5ef4db64]
  40b73a:	mov    al,ds:0x7d247bb1
  40b73f:	cmp    BYTE PTR [esp+edi*2+0x58],ch
  40b743:	jnp    0x40b76d
  40b745:	and    bh,BYTE PTR [ebx+0x11ef75c2]
  40b74b:	sbb    al,0x5e
  40b74d:	rcr    BYTE PTR [ebx],1
  40b74f:	jb     0x40b6d3
  40b751:	dec    ebx
  40b752:	popf   
  40b753:	in     al,dx
  40b754:	xor    BYTE PTR [edx+0x7ae27845],0x4b
  40b75b:	aaa    
  40b75c:	jmp    0x31d9a9cb
  40b761:	adc    al,0xe4
  40b763:	push   cs
  40b764:	sub    eax,0xee7af893
  40b769:	mov    ebp,0x67085f62
  40b76e:	pop    edx
  40b76f:	mov    dh,ch
  40b771:	ja     0x40b6f3
  40b773:	js     0x40b7e5
  40b775:	popf   
  40b776:	xchg   esp,eax
  40b777:	(bad)  
  40b778:	(bad)  
  40b779:	std    
  40b77a:	cdq    
  40b77b:	inc    ebp
  40b77c:	(bad)  
  40b77d:	in     al,0xbe
  40b77f:	jge    0x40b77e
  40b781:	loop   0x40b774
  40b783:	or     edx,DWORD PTR [ebp+0x54]
  40b786:	mov    BYTE PTR [esi-0x1e],0xa
  40b78a:	popa   
  40b78b:	data16 icebp 
  40b78d:	addr16 std 
  40b78f:	test   DWORD PTR [ebp-0x54818a1d],edi
  40b795:	fidiv  DWORD PTR [ecx+0x3148198]
  40b79b:	test   BYTE PTR [edi],ch
  40b79d:	scas   eax,DWORD PTR es:[edi]
  40b79e:	clc    
  40b79f:	cmp    esi,DWORD PTR [ecx-0x5b1acde8]
  40b7a5:	addr16 push ecx
  40b7a7:	mov    cl,BYTE PTR [eax+edx*4]
  40b7aa:	call   0x94d3:0x76d11c38
  40b7b1:	loopne 0x40b801
  40b7b3:	jb     0x40b76d
  40b7b5:	addr16 and eax,0x98a52d0b
  40b7bb:	jmp    0x708d03e2
  40b7c0:	sbb    BYTE PTR [edi-0x2d],ch
  40b7c3:	xor    DWORD PTR [eax+ecx*2-0x71],ecx
  40b7c7:	adc    ecx,esi
  40b7c9:	push   ecx
  40b7ca:	pop    esi
  40b7cb:	dec    edx
  40b7cc:	mov    ds:0x78107955,eax
  40b7d1:	fcom   DWORD PTR [ebp+edx*1-0x3]
  40b7d5:	push   ds
  40b7d6:	sbb    DWORD PTR [ecx+ecx*2+0x5c],edi
  40b7da:	(bad)  
  40b7db:	jmp    0x40b799
  40b7dd:	adc    edx,DWORD PTR [ecx]
  40b7df:	(bad)  
  40b7e0:	in     eax,dx
  40b7e1:	jb     0x40b790
  40b7e3:	add    bl,bh
  40b7e5:	fdiv   st(7),st
  40b7e7:	cmp    edx,DWORD PTR [ebp+0x510d4424]
  40b7ed:	inc    ebx
  40b7ee:	shl    DWORD PTR [eax+0x3c],cl
  40b7f1:	jp     0x40b849
  40b7f3:	mov    bh,dh
  40b7f5:	fs or  al,0xec
  40b7f8:	adc    al,0x4a
  40b7fa:	adc    BYTE PTR [ecx+0x94ead40],0x75
  40b801:	mov    al,0xe5
  40b803:	aas    
  40b804:	dec    edx
  40b805:	sub    ecx,ecx
  40b807:	cmc    
  40b808:	scas   eax,DWORD PTR es:[edi]
  40b809:	sub    al,0x7c
  40b80b:	sub    eax,0x113bd9ff
  40b810:	ror    DWORD PTR [eax],0xae
  40b813:	mov    esi,ebp
  40b815:	mov    ss:0x1cfe3869,eax
  40b81b:	jbe    0x40b84a
  40b81d:	fs pop edx
  40b820:	leave  
  40b821:	cwde   
  40b822:	sub    BYTE PTR ds:0x57a2f745,ch
  40b828:	test   DWORD PTR [eax+0x791584fb],eax
  40b82e:	mov    esi,0x5aab18e4
  40b833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b834:	inc    esp
  40b835:	jnp    0x40b86d
  40b837:	and    eax,0x90f8a010
  40b83c:	not    DWORD PTR [eax]
  40b83e:	push   0xffffffd2
  40b840:	jp     0x40b8ba
  40b842:	lds    eax,FWORD PTR [esp+edx*2]
  40b845:	(bad)  
  40b846:	push   es
  40b847:	dec    ecx
  40b848:	mov    ecx,fs
  40b84a:	jo     0x40b7ff
  40b84c:	mov    ecx,0x888a2826
  40b851:	nop
  40b852:	xor    DWORD PTR [eax-0x5a],0x3e9d86d5
  40b859:	push   es
  40b85a:	ins    DWORD PTR es:[edi],dx
  40b85b:	lods   al,BYTE PTR ds:[esi]
  40b85c:	mov    esi,0xea71fe93
  40b861:	daa    
  40b862:	(bad)  
  40b864:	pop    edx
  40b865:	dec    edx
  40b866:	xor    ch,BYTE PTR [edx+esi*2]
  40b869:	cmp    al,0x2
  40b86b:	and    ah,BYTE PTR [esi]
  40b86d:	repz jp 0x40b864
  40b870:	pop    edi
  40b871:	xor    al,0xfa
  40b873:	mov    eax,ds:0x6a7b8c13
  40b878:	jb     0x40b7fc
  40b87a:	jo     0x40b898
  40b87c:	push   0x85f35665
  40b881:	mov    eax,ds:0x1ab3672d
  40b886:	xlat   BYTE PTR ds:[ebx]
  40b887:	int3   
  40b888:	in     al,dx
  40b889:	lods   eax,DWORD PTR ds:[esi]
  40b88a:	jae    0x40b883
  40b88c:	jno    0x40b88e
  40b88e:	inc    edx
  40b88f:	xor    eax,0xd9050d81
  40b894:	or     al,bh
  40b896:	and    dh,cl
  40b898:	test   BYTE PTR [eax],ah
  40b89a:	lds    ebx,FWORD PTR [eax]
  40b89c:	lahf   
  40b89d:	sbb    edx,DWORD PTR [ebp-0x53]
  40b8a0:	and    ebx,DWORD PTR [edi]
  40b8a2:	out    0x57,eax
  40b8a4:	les    edi,FWORD PTR [ecx-0x74]
  40b8a7:	ds pop edx
  40b8a9:	fs xor al,0xc7
  40b8ac:	pusha  
  40b8ad:	js     0x40b8e8
  40b8af:	lea    esp,[edx+0x1f]
  40b8b2:	stos   DWORD PTR es:[edi],eax
  40b8b3:	mov    ss,ebp
  40b8b5:	and    eax,DWORD PTR [esi-0x6a]
  40b8b8:	pop    esp
  40b8b9:	mov    ecx,0x4c0e2dcb
  40b8be:	adc    DWORD PTR [edx+0x4b0d450c],esp
  40b8c4:	out    dx,eax
  40b8c5:	jae    0x40b915
  40b8c7:	inc    ebp
  40b8c8:	leave  
  40b8c9:	or     BYTE PTR [ecx+0x6e16fcac],dh
  40b8cf:	rol    BYTE PTR [edi-0x5811fa1],0xe3
  40b8d6:	add    dl,BYTE PTR [edx+eax*8]
  40b8d9:	xor    DWORD PTR [edi-0x7f],ebp
  40b8dc:	mov    ebx,0xf9b47d48
  40b8e1:	or     eax,0x359689c2
  40b8e6:	in     al,dx
  40b8e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8e8:	pop    ecx
  40b8e9:	or     edi,ebx
  40b8eb:	and    BYTE PTR [edi],dh
  40b8ed:	repnz mov edi,0xb93040ea
  40b8f3:	xor    dl,BYTE PTR [ecx-0x44]
  40b8f6:	shl    WORD PTR [ecx+ecx*4],1
  40b8fa:	xor    eax,0xf8175985
  40b8ff:	xchg   WORD PTR [ecx-0x32],si
  40b903:	mov    ecx,DWORD PTR [ebx+0x6e844e9a]
  40b909:	out    dx,al
  40b90a:	mov    bh,0x28
  40b90c:	(bad)  
  40b90d:	nop
  40b90e:	clc    
  40b90f:	mov    ebx,0x61e095ed
  40b914:	pop    edi
  40b915:	sar    BYTE PTR [bp+di],1
  40b918:	xchg   ebp,eax
  40b919:	fistp  WORD PTR ds:0x78a99ede
  40b91f:	ds xchg ecx,eax
  40b921:	pop    ebx
  40b922:	retf   0x13f1
  40b925:	sub    cl,BYTE PTR [ecx-0x16]
  40b928:	xor    BYTE PTR [edx],al
  40b92a:	pop    ss
  40b92b:	mov    ds:0xce0adafe,eax
  40b930:	mov    WORD PTR [edx-0x2a],es
  40b933:	push   0x6c
  40b935:	es mov edi,0x47e8a79c
  40b93b:	xor    eax,0x69ea5baa
  40b940:	fsub   st,st(4)
  40b942:	dec    ebp
  40b943:	and    edi,DWORD PTR [esi]
  40b945:	pop    ebp
  40b946:	fisubr WORD PTR [ebp+0x152725cf]
  40b94c:	data16 xor dh,BYTE PTR [edx+0x38]
  40b950:	pop    ds
  40b951:	inc    eax
  40b952:	in     al,dx
  40b953:	adc    DWORD PTR [ebp-0x550dea7f],esp
  40b959:	aam    0x5a
  40b95b:	dec    ebx
  40b95c:	mov    BYTE PTR [edx-0x3f],dh
  40b95f:	xor    BYTE PTR [eax-0x49],bl
  40b962:	or     ah,cl
  40b964:	cmc    
  40b965:	xor    al,0xdc
  40b967:	push   edi
  40b968:	sti    
  40b969:	ds stos DWORD PTR es:[edi],eax
  40b96b:	xchg   ah,bh
  40b96d:	scas   al,BYTE PTR es:[edi]
  40b96e:	mov    al,0x98
  40b970:	aad    0x81
  40b972:	jae    0x40b9e6
  40b974:	cli    
  40b975:	mov    esp,0xd4db1587
  40b97a:	in     eax,dx
  40b97b:	int    0x28
  40b97d:	leave  
  40b97e:	xor    eax,DWORD PTR [eax+0xea857cf]
  40b984:	idiv   DWORD PTR [edx]
  40b986:	pop    ebp
  40b987:	fisubr DWORD PTR [ebp-0x56]
  40b98a:	(bad)  
  40b98b:	shl    BYTE PTR [ecx+ebp*4],cl
  40b98e:	repnz sbb DWORD PTR [ecx+0xa9acbf0],esp
  40b995:	jnp    0x40b997
  40b997:	mov    bh,0x96
  40b999:	retf   0x872a
  40b99c:	out    dx,eax
  40b99d:	test   eax,0xb54d2a32
  40b9a2:	rcl    BYTE PTR ss:[edx],0x97
  40b9a6:	scas   eax,DWORD PTR es:[edi]
  40b9a7:	and    BYTE PTR [esi-0x8],cl
  40b9aa:	mov    ah,0x70
  40b9ac:	jne    0x40b985
  40b9ae:	rol    ebx,cl
  40b9b0:	out    0x3f,eax
  40b9b2:	js     0x40b956
  40b9b4:	cdq    
  40b9b5:	aas    
  40b9b6:	lods   eax,DWORD PTR ds:[esi]
  40b9b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9b8:	fild   WORD PTR [esi+0x72583781]
  40b9be:	mov    edx,0xbbd6aaa
  40b9c3:	das    
  40b9c4:	lock inc esi
  40b9c6:	jb     0x40ba2b
  40b9c8:	and    al,0x4b
  40b9ca:	add    al,0x15
  40b9cc:	dec    esp
  40b9cd:	sbb    eax,0xffffff94
  40b9d0:	lahf   
  40b9d1:	dec    ebp
  40b9d2:	fldenv [edx]
  40b9d4:	scas   al,BYTE PTR es:[edi]
  40b9d5:	cmc    
  40b9d6:	cmp    cl,al
  40b9d8:	inc    esi
  40b9d9:	add    ah,BYTE PTR [ebp-0x4a255fbd]
  40b9df:	sub    edx,ebp
  40b9e1:	sbb    BYTE PTR [eax+0x6],cl
  40b9e4:	jmp    0xcb9810a4
  40b9e9:	add    eax,0xe6209d6f
  40b9ee:	xchg   edx,eax
  40b9ef:	mov    ds,edi
  40b9f1:	sub    DWORD PTR [ebx+eiz*1+0x43],ecx
  40b9f5:	jo     0x40b9a1
  40b9f7:	or     eax,DWORD PTR [eax+0x37a40753]
  40b9fd:	stc    
  40b9fe:	sbb    ch,BYTE PTR [esi-0x69eab4fb]
  40ba04:	jae    0x40b9a9
  40ba06:	leave  
  40ba07:	ret    0xa1eb
  40ba0a:	fidiv  WORD PTR [eax-0x47824fc7]
  40ba10:	pop    ecx
  40ba11:	xor    eax,0xfd3f1a75
  40ba16:	call   0xc2f:0x37418235
  40ba1d:	clc    
  40ba1e:	out    dx,al
  40ba1f:	xor    eax,DWORD PTR ds:0x8a115c60
  40ba25:	fst    DWORD PTR [edi+0x3f]
  40ba28:	push   0x97821e56
  40ba2d:	pop    ebp
  40ba2e:	fistp  DWORD PTR [ebx]
  40ba30:	sbb    cl,ch
  40ba32:	sub    edx,DWORD PTR [edi+0x1076a5a9]
  40ba38:	xchg   ebp,eax
  40ba39:	push   eax
  40ba3a:	fmulp  st(1),st
  40ba3c:	fnstcw WORD PTR gs:[edi+0x616c3d51]
  40ba43:	inc    edi
  40ba44:	sbb    al,dl
  40ba46:	pop    eax
  40ba47:	shl    BYTE PTR [edx+edx*8],cl
  40ba4a:	inc    esi
  40ba4b:	mov    ds:0xd6454cc2,al
  40ba50:	sub    ch,BYTE PTR [esi+0x7819eabe]
  40ba56:	sbb    al,0xf0
  40ba58:	mov    ds:0xce5c21d3,al
  40ba5d:	fwait
  40ba5e:	xchg   edx,eax
  40ba5f:	mov    edx,0x5259659e
  40ba64:	out    dx,al
  40ba65:	push   ecx
  40ba66:	nop
  40ba67:	cwde   
  40ba68:	fstp   TBYTE PTR [ecx]
  40ba6a:	xlat   BYTE PTR ds:[ebx]
  40ba6b:	rol    DWORD PTR gs:[ebp+0xc936b2c],1
  40ba72:	jle    0x40baa4
  40ba74:	icebp  
  40ba75:	ins    BYTE PTR es:[edi],dx
  40ba76:	xchg   DWORD PTR [ebp+0x6d],edi
  40ba79:	es cmp al,0x6b
  40ba7c:	sub    eax,0x9d1a433f
  40ba81:	pop    eax
  40ba82:	data16 and BYTE PTR [edx+0x35],bl
  40ba86:	xlat   BYTE PTR ds:[ebx]
  40ba87:	dec    ecx
  40ba88:	les    ebx,FWORD PTR [edx+0x2d]
  40ba8b:	xchg   ecx,eax
  40ba8c:	dec    ebx
  40ba8d:	add    BYTE PTR [ecx+0x5a],al
  40ba90:	sbb    eax,0xca4a6b3a
  40ba95:	outs   dx,BYTE PTR ds:[esi]
  40ba96:	pushf  
  40ba97:	ja     0x40bad7
  40ba99:	pop    edx
  40ba9a:	jae    0x40babf
  40ba9c:	xchg   ebx,eax
  40ba9d:	and    dh,ah
  40ba9f:	nop
  40baa0:	or     bh,BYTE PTR [esi-0x2bc361d1]
  40baa6:	stos   DWORD PTR es:[edi],eax
  40baa7:	es fidiv DWORD PTR cs:[eax+0x78fe6f30]
  40baaf:	and    BYTE PTR [edi-0x1],bl
  40bab2:	xor    eax,0x103c8c48
  40bab7:	push   ds
  40bab8:	jo     0x40ba77
  40baba:	nop
  40babb:	jmp    0xaadffadf
  40bac0:	shl    ebp,cl
  40bac2:	mov    ch,0x4a
  40bac4:	and    ch,BYTE PTR [eax+eiz*4]
  40bac7:	jmp    0x40ba87
  40bac9:	popf   
  40baca:	imul   edi,DWORD PTR [ecx-0x5e4d48ee],0xffffffb5
  40bad1:	pushf  
  40bad2:	xor    al,0xf9
  40bad4:	mul    BYTE PTR [esi+0x5a240289]
  40bada:	(bad)  
  40badb:	enter  0xc92d,0xec
  40badf:	(bad)  
  40bae0:	fnsave [edi]
  40bae2:	or     ebp,DWORD PTR [esi+0x59]
  40bae5:	add    DWORD PTR [eax],ebx
  40bae7:	push   edx
  40bae8:	mov    esi,0xf83e981d
  40baed:	dec    edi
  40baee:	mov    ds:0xb7ba638b,al
  40baf3:	cmp    al,bh
  40baf5:	aaa    
  40baf6:	es bnd jae 0x40bb03
  40bafa:	sub    ebx,DWORD PTR [edi-0x2a599827]
  40bb00:	jecxz  0x40baa2
  40bb02:	mov    eax,0xaf917962
  40bb07:	sub    DWORD PTR [ebx-0x4e75ffc0],ebp
  40bb0d:	daa    
  40bb0e:	test   eax,0x42e7e7f5
  40bb13:	outs   dx,DWORD PTR ds:[esi]
  40bb14:	and    al,BYTE PTR [edi+0x233c4bcc]
  40bb1a:	jecxz  0x40bb23
  40bb1c:	inc    ebx
  40bb1d:	bound  eax,QWORD PTR [edi+0x7999805e]
  40bb23:	and    ecx,DWORD PTR [ebp-0x27]
  40bb26:	call   0x2ea182bd
  40bb2b:	and    ah,bh
  40bb2d:	push   ss
  40bb2e:	ja     0x40bb5d
  40bb30:	sub    al,BYTE PTR ds:0xa799ab92
  40bb36:	ret    
  40bb37:	adc    DWORD PTR [esi],edx
  40bb39:	mov    edi,DWORD PTR [edi+0x68]
  40bb3c:	leave  
  40bb3d:	jecxz  0x40bb62
  40bb3f:	stos   BYTE PTR es:[edi],al
  40bb40:	cmp    cl,BYTE PTR [ebx-0x35]
  40bb43:	in     al,0x5d
  40bb45:	mov    BYTE PTR [edx],bl
  40bb47:	cmp    bh,BYTE PTR [edi]
  40bb49:	mov    ds:0xb2fa7f91,al
  40bb4e:	push   edx
  40bb4f:	pop    esi
  40bb50:	mov    edi,edx
  40bb52:	push   ss
  40bb53:	rcr    BYTE PTR [edx+0x1f],cl
  40bb56:	xor    ebx,edi
  40bb58:	push   DWORD PTR [edx-0x22d73cc2]
  40bb5e:	xor    bl,ch
  40bb60:	je     0x40bb5c
  40bb62:	pop    ebx
  40bb63:	mov    bh,0xc9
  40bb65:	pop    ecx
  40bb66:	test   BYTE PTR [edx-0x6e],ch
  40bb69:	add    DWORD PTR [esi+0x563a5050],edi
  40bb6f:	je     0x40bb31
  40bb71:	lds    ebx,FWORD PTR [edx]
  40bb73:	(bad)  
  40bb74:	fcom   st(0)
  40bb76:	or     BYTE PTR [esi-0x3b066fe3],ah
  40bb7c:	xor    ch,BYTE PTR [ebx-0x2a618045]
  40bb82:	test   DWORD PTR [ebp+eax*8+0x36e67483],edi
  40bb89:	jae    0x40bb86
  40bb8b:	adc    al,0x8e
  40bb8d:	xor    ah,BYTE PTR [ecx+0x4a]
  40bb90:	arpl   bx,cx
  40bb92:	(bad)  
  40bb94:	data16 cmc 
  40bb96:	aad    0x7f
  40bb98:	les    edi,FWORD PTR [edi]
  40bb9a:	add    al,0xfd
  40bb9c:	pop    ebp
  40bb9d:	adc    dh,BYTE PTR [edi]
  40bb9f:	imul   esp,DWORD PTR [ecx-0x71],0x8330a9d9
  40bba6:	xlat   BYTE PTR ds:[ebx]
  40bba7:	clc    
  40bba8:	(bad)  [ebx+0x5a]
  40bbab:	add    BYTE PTR [ebx+edi*4],cl
  40bbae:	jb     0x40bc0c
  40bbb0:	sub    eax,DWORD PTR [ebx+0x73bd488]
  40bbb6:	and    dl,bh
  40bbb8:	out    dx,eax
  40bbb9:	or     BYTE PTR [eax],dl
  40bbbb:	dec    ebp
  40bbbc:	stos   DWORD PTR es:[edi],eax
  40bbbd:	enter  0x7d0a,0x8e
  40bbc1:	mov    bh,0xe5
  40bbc3:	mov    esi,DWORD PTR [eax+edx*8]
  40bbc6:	jle    0x40bb49
  40bbc8:	xchg   esp,eax
  40bbc9:	imul   esi,ecx,0x5ca9d3dd
  40bbcf:	loop   0x40bbba
  40bbd1:	daa    
  40bbd2:	adc    eax,0xf851b773
  40bbd7:	ret    
  40bbd8:	mov    edx,0xa9864b33
  40bbdd:	int    0xde
  40bbdf:	fwait
  40bbe0:	xchg   ebx,eax
  40bbe1:	repz jp 0x40bb98
  40bbe4:	push   0x69571f2
  40bbe9:	adc    al,0xba
  40bbeb:	jne    0x40bb90
  40bbed:	add    eax,0xd4c27540
  40bbf2:	lea    edi,[ebx]
  40bbf4:	int3   
  40bbf5:	jecxz  0x40bb84
  40bbf7:	cs cld 
  40bbf9:	mov    DWORD PTR [ecx+0x24],0x1d5d716
  40bc00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc01:	push   ebp
  40bc02:	mov    edi,0x4b3290ab
  40bc07:	pop    edi
  40bc08:	das    
  40bc09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc0a:	jne    0x40bb9e
  40bc0c:	test   DWORD PTR [ecx+0x1c],ebp
  40bc0f:	pop    edx
  40bc10:	imul   esp,edx,0xa1eddac7
  40bc16:	inc    esp
  40bc17:	adc    DWORD PTR [ebp+0x265773c0],edi
  40bc1d:	popa   
  40bc1e:	pusha  
  40bc1f:	xor    ecx,edi
  40bc21:	xor    eax,0xec26ef05
  40bc26:	sahf   
  40bc27:	loope  0x40bc39
  40bc29:	jne    0x40bc95
  40bc2b:	shl    DWORD PTR [edx],0xbd
  40bc2e:	or     eax,0xb69a469c
  40bc33:	adc    bh,ch
  40bc35:	pop    ebx
  40bc36:	or     al,0x13
  40bc38:	push   0x1b
  40bc3a:	test   al,0x3f
  40bc3c:	gs ret 
  40bc3e:	out    0xc3,al
  40bc40:	pop    ss
  40bc41:	pop    ebx
  40bc42:	(bad)  
  40bc43:	pop    DWORD PTR [edi]
  40bc45:	xor    al,0x97
  40bc47:	push   cs
  40bc48:	mov    WORD PTR [ecx-0x4c0f6d63],fs
  40bc4e:	in     eax,0xa9
  40bc50:	mov    ah,BYTE PTR [ebp-0x342cdbe7]
  40bc56:	xor    ah,bh
  40bc58:	lock adc al,0xf1
  40bc5b:	cmovg  eax,DWORD PTR [ecx]
  40bc5e:	xor    DWORD PTR [edi-0x35],edx
  40bc61:	sub    DWORD PTR [esi],esi
  40bc63:	int    0x54
  40bc65:	jecxz  0x40bcc0
  40bc67:	jg     0x40bc5d
  40bc69:	or     DWORD PTR [ebp+0x68],esi
  40bc6c:	rol    BYTE PTR ds:0x40c7186b,0xa2
  40bc73:	xor    al,0x87
  40bc75:	and    DWORD PTR [edx],0x45
  40bc78:	outs   dx,DWORD PTR ds:[esi]
  40bc79:	adc    BYTE PTR [ebp-0xa],dl
  40bc7c:	das    
  40bc7d:	or     eax,DWORD PTR [ecx]
  40bc7f:	mov    al,0xc
  40bc81:	pop    ecx
  40bc82:	test   eax,0x66f44dc6
  40bc87:	cmp    esp,DWORD PTR [edx]
  40bc89:	popf   
  40bc8a:	loopne 0x40bcaf
  40bc8c:	mov    esp,0x7db86831
  40bc91:	xlat   BYTE PTR ds:[ebx]
  40bc92:	pop    esi
  40bc93:	push   es
  40bc94:	sub    al,BYTE PTR [eax-0x1d]
  40bc97:	sbb    DWORD PTR es:[ebx],eax
  40bc9a:	or     ch,dl
  40bc9c:	mov    edx,0xcf22fb50
  40bca1:	push   esi
  40bca2:	dec    ecx
  40bca3:	leave  
  40bca4:	(bad)  [ebp-0x3d5a09c3]
  40bcaa:	mov    bh,0xcc
  40bcac:	(bad)  
  40bcad:	(bad)  
  40bcaf:	aaa    
  40bcb0:	ss (bad) 
  40bcb2:	mov    gs,WORD PTR [ebp+edi*8+0x6d]
  40bcb6:	cmp    DWORD PTR [edi-0x5d],esp
  40bcb9:	jo     0x40bd27
  40bcbb:	sub    DWORD PTR [edx+edi*8],0xffffff99
  40bcbf:	and    BYTE PTR [edi],bl
  40bcc1:	ret    
  40bcc2:	cli    
  40bcc3:	into   
  40bcc4:	(bad)  
  40bcc5:	fst    st(6)
  40bcc7:	mov    bl,BYTE PTR [ecx-0x18]
  40bcca:	xlat   BYTE PTR ds:[ebx]
  40bccb:	pop    ebp
  40bccc:	pop    edi
  40bccd:	mov    DWORD PTR [eax+ebp*4-0x67326583],ebp
  40bcd4:	xchg   ecx,eax
  40bcd5:	pop    esp
  40bcd6:	pop    edi
  40bcd7:	jp     0x40bccd
  40bcd9:	mov    esi,0xcac5ba20
  40bcde:	pop    ds
  40bcdf:	aaa    
  40bce0:	les    eax,FWORD PTR [eax]
  40bce2:	(bad)  
  40bce4:	js     0x40bcf8
  40bce6:	in     al,dx
  40bce7:	mov    esi,0x260909af
  40bcec:	enter  0xb662,0xd1
  40bcf0:	mov    ch,0xf2
  40bcf2:	sbb    eax,0xb230f63
  40bcf7:	fsub   st(1),st
  40bcf9:	cmp    ecx,DWORD PTR [edx]
  40bcfb:	in     eax,dx
  40bcfc:	mov    ds:0x83e11d04,al
  40bd01:	inc    edi
  40bd02:	lock nop
  40bd04:	push   cs
  40bd05:	lock inc ebx
  40bd07:	lds    ebp,FWORD PTR [ebx+0x70]
  40bd0a:	idiv   DWORD PTR [esi-0x28]
  40bd0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd0e:	into   
  40bd0f:	arpl   cx,ax
  40bd11:	icebp  
  40bd12:	inc    edx
  40bd13:	mov    ecx,0x7a22db1c
  40bd18:	jo     0x40bd36
  40bd1a:	cdq    
  40bd1b:	sub    DWORD PTR [eax-0x66fe5973],esi
  40bd21:	(bad)  
  40bd22:	fimul  WORD PTR ds:0x454b2177
  40bd28:	scas   eax,DWORD PTR es:[edi]
  40bd29:	push   edi
  40bd2a:	inc    eax
  40bd2b:	and    DWORD PTR [edi+0x11a25b9f],ecx
  40bd31:	shr    esp,1
  40bd33:	mov    eax,0xca3f9884
  40bd38:	jecxz  0x40bcfa
  40bd3a:	push   esp
  40bd3b:	test   DWORD PTR [eax+0x45ed65bf],ebx
  40bd41:	jbe    0x40bcfd
  40bd43:	lds    ebp,FWORD PTR ds:0x9fcc77ae
  40bd49:	or     eax,0x677a06a3
  40bd4e:	test   eax,0x101eeccb
  40bd53:	faddp  st(5),st
  40bd55:	mov    eax,ds:0x158dc718
  40bd5a:	ss jg  0x40bce5
  40bd5d:	xchg   ebp,eax
  40bd5e:	mov    al,0x3e
  40bd60:	mov    dh,0x32
  40bd62:	cmp    al,0xa4
  40bd64:	add    DWORD PTR [edi+0x30],ebx
  40bd67:	sub    DWORD PTR [edi-0x3be33ab9],ebx
  40bd6d:	daa    
  40bd6e:	cmp    esp,DWORD PTR [ebx-0x698f2799]
  40bd74:	inc    eax
  40bd75:	lds    ebx,FWORD PTR [eax]
  40bd77:	nop
  40bd78:	clc    
  40bd79:	mov    eax,0xfcc5b989
  40bd7e:	out    dx,al
  40bd7f:	sbb    bl,BYTE PTR [ecx]
  40bd81:	jp     0x40bd49
  40bd83:	jb     0x40bd32
  40bd85:	and    DWORD PTR [ecx],ecx
  40bd87:	xor    BYTE PTR [edx-0x46ae0b29],al
  40bd8d:	jae    0x40bd88
  40bd8f:	xor    DWORD PTR [esi+0x5d],esi
  40bd92:	nop
  40bd93:	stc    
  40bd94:	scas   al,BYTE PTR es:[edi]
  40bd95:	fstp   DWORD PTR [eax]
  40bd97:	fistp  WORD PTR [esi]
  40bd99:	push   ecx
  40bd9a:	ins    BYTE PTR es:[edi],dx
  40bd9b:	dec    ebx
  40bd9c:	push   es
  40bd9d:	push   edi
  40bd9e:	jge    0x40bd38
  40bda0:	mov    eax,0xd4b29bf3
  40bda5:	inc    edi
  40bda6:	xchg   ebx,eax
  40bda7:	jnp    0x40be05
  40bda9:	idiv   BYTE PTR [eax+0x67]
  40bdac:	push   edi
  40bdad:	xor    DWORD PTR [ebx+ebx*1-0x20],esi
  40bdb1:	sbb    BYTE PTR [esi-0x6d],0x9f
  40bdb5:	pop    ebp
  40bdb6:	xchg   esi,edx
  40bdb8:	sahf   
  40bdb9:	popf   
  40bdba:	mov    ebp,DWORD PTR [ebp-0x38]
  40bdbd:	or     esi,DWORD PTR [esi-0x25feeb96]
  40bdc3:	add    BYTE PTR [ebx-0x7d],0xa8
  40bdc7:	in     eax,dx
  40bdc8:	call   0x6d275fe5
  40bdcd:	push   edx
  40bdce:	stc    
  40bdcf:	fist   DWORD PTR [ebp+0x11]
  40bdd2:	dec    eax
  40bdd3:	pushf  
  40bdd4:	call   0xbb3c6f13
  40bdd9:	(bad)  
  40bdda:	mov    esp,0xb460940e
  40bddf:	cmp    BYTE PTR [ecx+edx*2+0x47],0x45
  40bde4:	and    eax,0x2636bd95
  40bde9:	push   0x77
  40bdeb:	into   
  40bdec:	mov    esp,0xb689c44d
  40bdf1:	cld    
  40bdf2:	inc    esp
  40bdf3:	mov    DWORD PTR [ebp-0x24],eax
  40bdf6:	and    DWORD PTR ds:0x429004,0x0
  40be00:	jmp    0x40be12
  40be05:	mov    ecx,DWORD PTR ds:0x429004
  40be0b:	inc    ecx
  40be0c:	mov    DWORD PTR ds:0x429004,ecx
  40be12:	cmp    DWORD PTR ds:0x429004,0x19
  40be19:	jae    0x40be44
  40be1f:	cmp    DWORD PTR ds:0x429004,0x22
  40be26:	jle    0x40be44
  40be2c:	jmp    0x40be3f
  40be31:	push   DWORD PTR [ebp-0xc]
  40be34:	push   0x22a7
  40be39:	call   DWORD PTR ds:0x42cf05
  40be3f:	jmp    0x40be05
  40be44:	mov    eax,DWORD PTR [ebp-0x14]
  40be47:	or     DWORD PTR ds:0x42a010,ebx
  40be4d:	mov    ecx,DWORD PTR [ebp+0x8]
  40be50:	or     DWORD PTR ds:0x428018,0x23e6
  40be5a:	add    ecx,DWORD PTR [eax+0x20]
  40be5d:	mov    eax,ds:0x41d257
  40be62:	mov    eax,DWORD PTR [eax]
  40be64:	adc    DWORD PTR ds:0x428008,eax
  40be6a:	mov    DWORD PTR [ebp-0x2c],ecx
  40be6d:	and    DWORD PTR ds:0x428018,0x0
  40be77:	jmp    0x40be89
  40be7c:	mov    ecx,DWORD PTR ds:0x428018
  40be82:	inc    ecx
  40be83:	mov    DWORD PTR ds:0x428018,ecx
  40be89:	cmp    DWORD PTR ds:0x428018,0x13
  40be90:	jae    0x40bedb
  40be96:	cmp    DWORD PTR ds:0x428018,0x6
  40be9d:	jge    0x40bedb
  40bea3:	jmp    0x40bebc
  40bea8:	push   0x6a94
  40bead:	push   DWORD PTR [ebp-0x18]
  40beb0:	push   DWORD PTR [ebp-0x28]
  40beb3:	push   DWORD PTR [ebp-0x10]
  40beb6:	call   DWORD PTR ds:0x42ced5
  40bebc:	cmp    DWORD PTR ds:0x428018,0x5
  40bec3:	jne    0x40bed6
  40bec9:	mov    ecx,DWORD PTR ds:0x428018
  40becf:	inc    ecx
  40bed0:	mov    DWORD PTR ds:0x428018,ecx
  40bed6:	jmp    0x40be7c
  40bedb:	mov    eax,DWORD PTR [ebp-0x14]
  40bede:	or     ecx,0x6233
  40bee4:	mov    ecx,DWORD PTR [ebp+0x8]
  40bee7:	add    DWORD PTR ds:0x426000,0x427008
  40bef1:	add    ecx,DWORD PTR [eax+0x24]
  40bef4:	mov    DWORD PTR ds:0x427000,0x10
  40befe:	cmp    DWORD PTR ds:0x427000,0x0
  40bf05:	je     0x40bf3d
  40bf0b:	cmp    DWORD PTR ds:0x427000,0x14
  40bf12:	jge    0x40bf3d
  40bf18:	jmp    0x40bf2d
  40bf1d:	push   0x7fef
  40bf22:	push   0x1522
  40bf27:	call   DWORD PTR ds:0x42ced9
  40bf2d:	mov    eax,ds:0x427000
  40bf32:	dec    eax
  40bf33:	mov    ds:0x427000,eax
  40bf38:	jmp    0x40befe
  40bf3d:	mov    DWORD PTR [ebp-0x34],ecx
  40bf40:	sbb    DWORD PTR ds:0x426024,0x5f3f
  40bf4a:	mov    eax,DWORD PTR [ebp-0x14]
  40bf4d:	sub    DWORD PTR ds:0x429008,edx
  40bf53:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf56:	or     DWORD PTR ds:0x426024,0x6bcf
  40bf60:	add    ecx,DWORD PTR [eax+0x1c]
  40bf63:	mov    DWORD PTR [ebp-0x14],ecx
  40bf66:	jmp    0x40c027
  40bf6b:	mov    DWORD PTR ds:0x428018,0x5de2
  40bf75:	mov    eax,DWORD PTR [ebp-0x2c]
  40bf78:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf7b:	and    DWORD PTR ds:0x426014,0x429014
  40bf85:	add    ecx,DWORD PTR [eax+ebx*4]
  40bf88:	adc    DWORD PTR ds:0x42a010,0x6f47
  40bf92:	mov    DWORD PTR [ebp-0x28],ecx
  40bf95:	add    DWORD PTR ds:0x42700c,0x360c
  40bf9f:	mov    eax,DWORD PTR [ebp-0x4]
  40bfa2:	mov    ecx,DWORD PTR [ebp-0x28]
  40bfa5:	or     DWORD PTR ds:0x426000,0x585a
  40bfaf:	xor    eax,esi
  40bfb1:	add    eax,edi
  40bfb3:	cmp    ecx,eax
  40bfb5:	mov    DWORD PTR ds:0x426020,0x9e5
  40bfbf:	je     0x40c027
  40bfc5:	jmp    0x40c018
  40bfca:	add    ecx,0x510e
  40bfd0:	mov    eax,DWORD PTR [ebp-0x4]
  40bfd3:	sub    DWORD PTR ds:0x427008,edi
  40bfd9:	mov    ecx,DWORD PTR [ebp-0x8]
  40bfdc:	sub    DWORD PTR ds:0x42601c,0x4623
  40bfe6:	xor    eax,esi
  40bfe8:	and    DWORD PTR ds:0x429018,0x23e5
  40bff2:	add    eax,edi
  40bff4:	cmp    ecx,eax
  40bff6:	mov    eax,DWORD PTR [ebp-0x4]
  40bff9:	mov    DWORD PTR ds:0x426020,0x3f7d
  40c003:	je     0x40e40d
  40c009:	mov    ecx,DWORD PTR [ebp-0x30]
  40c00c:	xor    eax,esi
  40c00e:	add    eax,edi
  40c010:	cmp    ecx,eax
  40c012:	je     0x40e416
  40c018:	lea    eax,[ebp-0x8]
  40c01b:	push   eax
  40c01c:	push   DWORD PTR [ebp-0x28]
  40c01f:	push   DWORD PTR [ebp+0xc]
  40c022:	call   0x413795
  40c027:	mov    eax,DWORD PTR [ebp-0x4]
  40c02a:	mov    ecx,DWORD PTR [ebp-0x8]
  40c02d:	xor    eax,esi
  40c02f:	add    eax,edi
  40c031:	cmp    ecx,eax
  40c033:	je     0x40e3f9
  40c039:	mov    eax,DWORD PTR [ebp-0x34]
  40c03c:	movzx  eax,WORD PTR [eax+ebx*2]
  40c040:	mov    ecx,DWORD PTR [ebp-0x14]
  40c043:	jmp    0x40e3ee
  40c048:	jb     0x40c0b0
  40c04a:	xchg   ebp,eax
  40c04b:	repz jne 0x40c0c1
  40c04e:	jb     0x40c037
  40c050:	adc    esi,DWORD PTR [ebp-0x1e]
  40c053:	mov    al,0x6c
  40c055:	je     0x40bfea
  40c057:	stc    
  40c058:	mov    al,0xe5
  40c05a:	jo     0x40c0cc
  40c05c:	loop   0x40c0bd
  40c05e:	jo     0x40c0d0
  40c060:	fwait
  40c061:	mov    ah,0x8
  40c063:	aad    0xe0
  40c065:	inc    ebx
  40c066:	pop    ds
  40c067:	mov    esp,0xa8edd2bf
  40c06c:	les    edi,FWORD PTR [esi]
  40c06e:	dec    esi
  40c06f:	cmp    DWORD PTR [ecx+edx*8],0x56
  40c073:	jle    0x40c09b
  40c075:	pop    ebp
  40c076:	mov    al,ds:0x5c7a7d19
  40c07b:	bound  cx,DWORD PTR [edi+0x6b0c81b0]
  40c082:	or     BYTE PTR [ebx+eax*4-0x46a6398],al
  40c089:	xchg   ebx,eax
  40c08a:	mov    bl,0x75
  40c08c:	xor    edx,ebx
  40c08e:	xor    ecx,DWORD PTR [eax+0x7a]
  40c091:	enter  0x7191,0xc6
  40c095:	in     eax,dx
  40c096:	aad    0x39
  40c098:	arpl   WORD PTR [ecx+0x423d8aee],ax
  40c09e:	sbb    ch,BYTE PTR [esi-0xd0c6f39]
  40c0a4:	mov    esi,0xab5072b7
  40c0a9:	imul   DWORD PTR [ecx]
  40c0ab:	sbb    DWORD PTR [ebp-0x5c92ac14],edx
  40c0b1:	mov    dl,0x66
  40c0b3:	cmp    DWORD PTR [ebx],ebx
  40c0b5:	jmp    0x483c:0x81e073c1
  40c0bc:	jmp    0x40c052
  40c0be:	rol    DWORD PTR [ecx],cl
  40c0c0:	call   FWORD PTR [esi+0x7c]
  40c0c3:	mov    cx,bx
  40c0c6:	repz inc eax
  40c0c8:	cmc    
  40c0c9:	ret    0x9a2
  40c0cc:	lahf   
  40c0cd:	sbb    ecx,DWORD PTR [eax+0x2c81cc9]
  40c0d3:	lea    esp,[esi-0x1b]
  40c0d6:	mov    esp,0x2b71b165
  40c0db:	pop    edx
  40c0dc:	shr    dl,0xa
  40c0df:	sahf   
  40c0e0:	jg     0x40c137
  40c0e2:	jne    0x40c116
  40c0e4:	xchg   esp,eax
  40c0e5:	jmp    0x40c0db
  40c0e7:	sbb    ebp,DWORD PTR [ecx+edi*8]
  40c0ea:	ss in  eax,dx
  40c0ec:	in     al,0x5c
  40c0ee:	std    
  40c0ef:	adc    BYTE PTR [edx+0x3f6464d0],bh
  40c0f5:	xor    edi,DWORD PTR [esi+0x6cfb3e0e]
  40c0fb:	cdq    
  40c0fc:	out    dx,al
  40c0fd:	int3   
  40c0fe:	neg    DWORD PTR [edi+0x1e]
  40c101:	mov    eax,edi
  40c103:	xchg   edx,eax
  40c104:	cmp    bl,BYTE PTR [ebx]
  40c106:	in     al,dx
  40c107:	arpl   WORD PTR [ecx+0x132ecca2],bp
  40c10d:	push   0x40df7d59
  40c112:	sub    cl,BYTE PTR [esi-0x63]
  40c115:	out    0xd6,eax
  40c117:	rcr    BYTE PTR [eax],1
  40c119:	popa   
  40c11a:	jns    0x40c0c6
  40c11c:	(bad)  
  40c11d:	test   BYTE PTR [esp+ebp*1+0x5c],0xa3
  40c122:	ins    BYTE PTR es:[edi],dx
  40c123:	popa   
  40c124:	sub    dl,0x41
  40c127:	dec    edx
  40c128:	nop
  40c129:	mov    edi,eax
  40c12b:	mov    eax,DWORD PTR [ebp+0x2f]
  40c12e:	call   0x68aa:0x7647ec05
  40c135:	or     BYTE PTR [esi],bl
  40c137:	add    cl,bl
  40c139:	push   DWORD PTR [ecx+0x587a6491]
  40c13f:	fistp  QWORD PTR [edi+ebx*2]
  40c142:	(bad)  
  40c143:	sbb    bl,BYTE PTR [eax+ecx*4]
  40c146:	and    eax,DWORD PTR gs:0x84f7b60
  40c14d:	in     al,0x55
  40c14f:	jno    0x40c1cf
  40c151:	fcom   DWORD PTR ds:0xfe556721
  40c157:	call   0xfb47:0xaedfb156
  40c15e:	dec    ebp
  40c15f:	aaa    
  40c160:	jecxz  0x40c1b6
  40c162:	scas   eax,DWORD PTR es:[edi]
  40c163:	ss add al,0x62
  40c166:	(bad)  
  40c167:	shl    DWORD PTR [eax],0xe0
  40c16a:	daa    
  40c16b:	push   esp
  40c16c:	inc    eax
  40c16d:	cwde   
  40c16e:	mov    cl,0x59
  40c170:	add    al,0xe6
  40c172:	iret   
  40c173:	mov    ecx,0xad10d5ad
  40c178:	test   BYTE PTR [edx+eax*4-0x5d],ch
  40c17c:	inc    esp
  40c17d:	dec    edi
  40c17e:	pop    edi
  40c17f:	push   edx
  40c180:	or     eax,0xc7ec0f57
  40c185:	and    al,0xd0
  40c187:	xor    eax,esp
  40c189:	repz add ah,BYTE PTR [ecx+0x249ca524]
  40c190:	int3   
  40c191:	shr    DWORD PTR [ecx],cl
  40c193:	xchg   BYTE PTR [edi-0x61],ch
  40c196:	in     eax,0xf7
  40c198:	addr16 xchg ebx,eax
  40c19a:	ja     0x40c1a2
  40c19c:	sbb    eax,0x43894390
  40c1a1:	cmp    eax,0xca0250ad
  40c1a6:	sbb    bl,BYTE PTR [edx+0x4fb899d0]
  40c1ac:	pop    ebx
  40c1ad:	outs   dx,BYTE PTR ds:[esi]
  40c1ae:	aaa    
  40c1af:	lods   eax,DWORD PTR ds:[esi]
  40c1b0:	jmp    0x40c1fc
  40c1b2:	dec    ebp
  40c1b3:	mov    bh,BYTE PTR [edi-0x6b]
  40c1b6:	cdq    
  40c1b7:	retf   0xd0d7
  40c1ba:	into   
  40c1bb:	lds    eax,FWORD PTR [ebx]
  40c1bd:	mov    dl,0x6f
  40c1c0:	cmp    ah,0x56
  40c1c3:	repnz sub ebx,esp
  40c1c6:	cmp    DWORD PTR [ebx+0x47255d42],0x3d
  40c1cd:	cmp    BYTE PTR [eax],ah
  40c1cf:	int3   
  40c1d0:	pop    esi
  40c1d1:	std    
  40c1d2:	pop    ecx
  40c1d3:	jl     0x40c1de
  40c1d5:	add    al,BYTE PTR gs:[edi]
  40c1d8:	push   ecx
  40c1d9:	xchg   ecx,eax
  40c1da:	sub    DWORD PTR [ecx-0x2f81e5d5],esi
  40c1e0:	and    dh,BYTE PTR [ebx+0x74d1ea48]
  40c1e6:	pop    esi
  40c1e7:	add    eax,0x96cd748b
  40c1ec:	pop    ebx
  40c1ed:	mov    ds:0xaa4abd45,al
  40c1f2:	mov    ds:0xbc97168c,eax
  40c1f7:	and    BYTE PTR [edx],0x53
  40c1fa:	xlat   BYTE PTR ds:[ebx]
  40c1fb:	dec    ebx
  40c1fc:	dec    eax
  40c1fd:	or     DWORD PTR [ebp-0x4e69796f],ebx
  40c203:	stos   BYTE PTR es:[edi],al
  40c204:	imul   ecx,DWORD PTR [ebp-0x438132f4],0x73
  40c20b:	jns    0x40c19a
  40c20d:	push   ebp
  40c20e:	jmp    0x2f04:0xdcdea83c
  40c215:	adc    eax,0x76147e38
  40c21a:	rol    DWORD PTR [esi],0x1e
  40c21d:	xor    DWORD PTR [edx-0x24],edi
  40c220:	pop    esp
  40c221:	jne    0x40c1b6
  40c223:	push   esp
  40c224:	ror    DWORD PTR [esi],1
  40c226:	(bad)  
  40c227:	imul   DWORD PTR [ecx+0x14bcc574]
  40c22d:	ror    esi,0x22
  40c230:	jg     0x40c21e
  40c232:	out    0x34,al
  40c234:	add    eax,0x247c5c1e
  40c239:	mov    ah,0xc9
  40c23b:	push   0x88179ceb
  40c240:	inc    edi
  40c241:	xchg   BYTE PTR [esi],ah
  40c243:	mov    cl,0xb2
  40c245:	pop    ebx
  40c246:	or     BYTE PTR [ecx],cl
  40c248:	out    dx,eax
  40c249:	jb     0x40c221
  40c24b:	jmp    0x40c2b3
  40c24d:	in     al,0x7e
  40c24f:	mov    al,0x28
  40c251:	icebp  
  40c252:	sbb    cl,ah
  40c254:	mov    dl,BYTE PTR [edx+0x19]
  40c257:	loopne 0x40c24b
  40c259:	pcmpeqw mm6,QWORD PTR ds:0x72490b83
  40c260:	loopne 0x40c240
  40c262:	push   ss
  40c263:	sbb    ebx,DWORD PTR [edx-0x7f]
  40c266:	add    dl,BYTE PTR [edx]
  40c268:	(bad)  
  40c269:	mov    ebp,0xd6c3fe9f
  40c26e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c26f:	mov    esi,0x7cbdcca8
  40c274:	fsubr  QWORD PTR [edx]
  40c276:	ins    BYTE PTR es:[edi],dx
  40c277:	xchg   BYTE PTR [ecx+esi*8],cl
  40c27a:	jb     0x40c20f
  40c27c:	js     0x40c2b8
  40c27e:	xchg   DWORD PTR [edi+0x5d],edx
  40c281:	cli    
  40c282:	inc    ebp
  40c283:	shl    DWORD PTR [eax],1
  40c285:	mul    BYTE PTR [edi]
  40c287:	mov    BYTE PTR [eax+ebx*2-0x43a629c7],dl
  40c28e:	ret    0xeb44
  40c291:	call   0x9f6c:0x83d75614
  40c298:	dec    eax
  40c299:	sbb    DWORD PTR [ebx],0x3c
  40c29c:	sbb    ch,bl
  40c29e:	icebp  
  40c29f:	rol    esi,1
  40c2a1:	(bad)  
  40c2a4:	sahf   
  40c2a5:	add    DWORD PTR [ebx+0x7f],ecx
  40c2a8:	xchg   edx,eax
  40c2a9:	outs   dx,DWORD PTR ds:[esi]
  40c2aa:	in     al,dx
  40c2ab:	and    al,0xae
  40c2ad:	ret    
  40c2ae:	xor    eax,0x7360185d
  40c2b3:	popa   
  40c2b4:	inc    ebx
  40c2b5:	arpl   si,sp
  40c2b7:	xlat   BYTE PTR ds:[ebx]
  40c2b8:	pop    edi
  40c2b9:	mov    ds:0xba35ae43,eax
  40c2be:	jns    0x40c281
  40c2c0:	mov    BYTE PTR [esi+0x52cdbf27],bh
  40c2c6:	addr16 lock in al,dx
  40c2c9:	aaa    
  40c2ca:	xchg   esp,eax
  40c2cb:	mov    cs,WORD PTR gs:[edi+0x614646ff]
  40c2d2:	shl    bl,0x64
  40c2d5:	dec    esi
  40c2d6:	sub    ebp,DWORD PTR [ebx]
  40c2d8:	das    
  40c2d9:	push   esp
  40c2da:	std    
  40c2db:	loop   0x40c27d
  40c2dd:	adc    al,BYTE PTR [ebp+0x19788361]
  40c2e3:	push   0xffffffb7
  40c2e5:	inc    ebx
  40c2e6:	lahf   
  40c2e7:	mov    esi,ebx
  40c2e9:	jmp    0xdafc:0x5cb49d3b
  40c2f0:	fnstcw WORD PTR [eax]
  40c2f2:	pop    ecx
  40c2f3:	jmp    0xef29:0x6f5fb06a
  40c2fa:	adc    eax,0x2338949d
  40c2ff:	cmp    al,BYTE PTR [eax]
  40c301:	mov    al,ds:0xcb40ce83
  40c306:	push   edi
  40c307:	cmp    bh,bh
  40c309:	jnp    0x40c34b
  40c30b:	pusha  
  40c30c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c30d:	mov    eax,ds:0x60eff580
  40c312:	inc    edi
  40c313:	lds    ebx,FWORD PTR [edi+eiz*1]
  40c316:	mov    al,0x30
  40c318:	(bad)  
  40c319:	dec    DWORD PTR [eax+0x1880a265]
  40c31f:	add    ebx,ecx
  40c321:	jns    0x40c2e8
  40c323:	ror    DWORD PTR [edx-0x2d],cl
  40c326:	cmp    DWORD PTR [esi+0x7d],edi
  40c329:	scas   al,BYTE PTR es:[edi]
  40c32a:	mov    WORD PTR [esi-0x36],?
  40c32d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c32e:	repz inc esp
  40c330:	(bad)  
  40c331:	fcomp  QWORD PTR [edx-0x1589c188]
  40c337:	cmp    DWORD PTR [ecx-0x4d],ebx
  40c33a:	push   eax
  40c33b:	mov    ah,0xd9
  40c33d:	jns    0x40c30b
  40c33f:	cs pusha 
  40c341:	cmp    eax,DWORD PTR [ecx-0x183eb7b]
  40c347:	stos   DWORD PTR es:[edi],eax
  40c348:	xchg   ebp,eax
  40c349:	cmp    al,0xe4
  40c34b:	pop    ss
  40c34c:	mov    bl,0xc2
  40c34e:	inc    edx
  40c34f:	in     eax,dx
  40c350:	or     edx,ebp
  40c352:	sar    DWORD PTR [edx+ebx*1+0x578ac6cd],0x36
  40c35a:	or     cl,BYTE PTR [ebp+0x358e5d6]
  40c360:	xchg   BYTE PTR [ebx+0x3c],bh
  40c363:	cmp    al,0x91
  40c365:	mov    bl,0x3d
  40c367:	xchg   esi,eax
  40c368:	fld    DWORD PTR [ecx+0x57b77562]
  40c36e:	std    
  40c36f:	mov    al,0xc9
  40c371:	(bad)  
  40c372:	pop    edx
  40c373:	stos   BYTE PTR es:[edi],al
  40c374:	push   ss
  40c375:	mov    al,ds:0x96217283
  40c37a:	pop    edx
  40c37b:	mov    eax,DWORD PTR [edx]
  40c37d:	sub    BYTE PTR [esi],ah
  40c37f:	scas   eax,DWORD PTR es:[edi]
  40c380:	rcr    BYTE PTR [ecx],cl
  40c382:	add    DWORD PTR ss:[ebp+0x4dbdbda],0x48
  40c38a:	mov    ch,0x1b
  40c38c:	push   0x4b
  40c38e:	jecxz  0x40c37b
  40c390:	shl    BYTE PTR [eax+eiz*2+0x26bb4f42],1
  40c397:	mov    ds:0x36ddc07a,al
  40c39c:	bound  ebp,QWORD PTR [ecx]
  40c39e:	xor    edx,DWORD PTR [edx]
  40c3a0:	ret    0x5c1c
  40c3a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3a4:	pop    ecx
  40c3a5:	cmp    bl,ah
  40c3a7:	push   dx
  40c3a9:	sub    eax,DWORD PTR [ebp-0x68dca63d]
  40c3af:	lahf   
  40c3b0:	clc    
  40c3b1:	ficomp WORD PTR [esi-0x2e8154cb]
  40c3b7:	xlat   BYTE PTR ds:[ebx]
  40c3b8:	add    dl,BYTE PTR [ebx+0x7f]
  40c3bb:	std    
  40c3bc:	jns    0x40c3a3
  40c3be:	or     ebp,ecx
  40c3c0:	xor    ah,ch
  40c3c2:	fmul   DWORD PTR ds:0x7036205c
  40c3c8:	or     BYTE PTR [ebp-0x4d9593f4],al
  40c3ce:	dec    ecx
  40c3cf:	mov    ds:0x8d00f09d,al
  40c3d4:	inc    esp
  40c3d5:	dec    esp
  40c3d6:	pop    ecx
  40c3d7:	xchg   esi,eax
  40c3d8:	stc    
  40c3d9:	sub    edi,DWORD PTR [eax+0x2031448f]
  40c3df:	mov    WORD PTR [bx+di+0x36ba],ds
  40c3e4:	inc    edx
  40c3e5:	pop    edx
  40c3e6:	sbb    dl,BYTE PTR [ecx+ecx*1-0x58]
  40c3ea:	or     BYTE PTR [eax-0x7b],bh
  40c3ed:	(bad)  
  40c3ee:	pop    ds
  40c3ef:	aas    
  40c3f0:	lahf   
  40c3f1:	repz adc BYTE PTR [edx],dh
  40c3f4:	xchg   BYTE PTR [ebx-0x6d],dh
  40c3f7:	inc    edx
  40c3f8:	sub    esp,DWORD PTR [eax-0x60]
  40c3fb:	jge    0x40c3f0
  40c3fd:	sbb    BYTE PTR [ebx+0x57],0x1d
  40c401:	push   0x8c13073b
  40c406:	dec    ecx
  40c407:	js     0x40c448
  40c409:	ret    
  40c40a:	scas   al,BYTE PTR es:[edi]
  40c40b:	jle    0x40c3a8
  40c40d:	stc    
  40c40e:	leave  
  40c40f:	jae    0x40c428
  40c411:	in     eax,dx
  40c412:	push   ebx
  40c413:	add    BYTE PTR [edi],ah
  40c415:	out    dx,al
  40c416:	sbb    al,0x29
  40c418:	outs   dx,DWORD PTR ds:[esi]
  40c419:	mov    ds:0x515a39d4,al
  40c41e:	enter  0x8ad6,0x65
  40c422:	test   eax,0xc715cf7c
  40c427:	mov    eax,ds:0xca361660
  40c42c:	mov    cl,0xe8
  40c42e:	stc    
  40c42f:	fnstenv [edx+0x618e6e21]
  40c435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c436:	std    
  40c437:	das    
  40c438:	dec    edx
  40c439:	imul   ebp,DWORD PTR [ebx],0x2b95923c
  40c43f:	outs   dx,BYTE PTR ds:[esi]
  40c440:	inc    esi
  40c441:	mov    ch,0x5b
  40c443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c444:	es movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  40c447:	adc    DWORD PTR [ebx],ebp
  40c449:	ins    BYTE PTR es:[edi],dx
  40c44a:	pop    es
  40c44b:	in     al,dx
  40c44c:	out    0xd9,eax
  40c44e:	inc    ebx
  40c44f:	popf   
  40c450:	fdivr  DWORD PTR [eax]
  40c452:	out    0x87,al
  40c454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c455:	mov    ecx,cs
  40c457:	imul   edx,DWORD PTR [eax],0x2d1ab2ee
  40c45d:	aam    0x36
  40c45f:	(bad)  [edx+0x4e]
  40c462:	dec    esi
  40c463:	adc    DWORD PTR [esi-0x4a],0xf8b062f2
  40c46a:	(bad)  
  40c46b:	nop
  40c46c:	in     eax,0x0
  40c46e:	test   al,0x4f
  40c470:	pop    ebx
  40c471:	aaa    
  40c472:	jae    0x40c444
  40c474:	je     0x40c47c
  40c476:	pop    es
  40c477:	stos   DWORD PTR es:[edi],eax
  40c478:	dec    ecx
  40c479:	inc    edi
  40c47a:	jae    0x40c43b
  40c47c:	xchg   edi,eax
  40c47d:	addr16 inc edi
  40c47f:	or     bl,BYTE PTR [ecx+0x5bc863e4]
  40c485:	pop    ecx
  40c486:	and    bh,dh
  40c488:	inc    eax
  40c489:	sub    BYTE PTR [ecx+0x54],dl
  40c48c:	sahf   
  40c48d:	pop    edx
  40c48e:	mov    ah,0xf6
  40c490:	outs   dx,DWORD PTR ds:[esi]
  40c491:	dec    ecx
  40c492:	lods   al,BYTE PTR ds:[esi]
  40c493:	pop    ds
  40c494:	mov    edi,esp
  40c496:	rol    BYTE PTR [eax-0x80],1
  40c499:	(bad)  
  40c49a:	jmp    0xc6c9:0x19dc3d7d
  40c4a1:	push   ds
  40c4a2:	sahf   
  40c4a3:	jne    0x40c4af
  40c4a5:	or     esp,DWORD PTR [ebp-0x54202535]
  40c4ab:	mov    edx,0x3e767c0
  40c4b0:	(bad)  
  40c4b1:	or     edx,DWORD PTR [esi-0x2]
  40c4b4:	xchg   DWORD PTR [ebp-0x3],ebp
  40c4b7:	fcom   QWORD PTR [eax]
  40c4b9:	repnz ror DWORD PTR ds:0x44e5f705,cl
  40c4c0:	jne    0x40c4cb
  40c4c2:	dec    eax
  40c4c3:	sahf   
  40c4c4:	sub    eax,0xdf23d396
  40c4c9:	push   ss
  40c4ca:	mov    eax,es
  40c4cc:	cli    
  40c4cd:	ds out dx,eax
  40c4cf:	sub    DWORD PTR [ecx+0x6c],ebx
  40c4d2:	dec    BYTE PTR [eax+0x3cb3bb29]
  40c4d8:	pop    esp
  40c4d9:	adc    DWORD PTR [eax],edx
  40c4db:	gs push eax
  40c4dd:	lock ret 0x7090
  40c4e1:	mov    BYTE PTR [eax],dh
  40c4e3:	and    BYTE PTR [esi],ch
  40c4e5:	mov    esi,0x57275eb
  40c4ea:	jns    0x40c475
  40c4ec:	and    al,0x2e
  40c4ee:	(bad)  
  40c4ef:	jb     0x40c570
  40c4f1:	mov    dh,0xb0
  40c4f3:	jg     0x40c52d
  40c4f5:	idiv   DWORD PTR [eax]
  40c4f7:	cs mov ebx,0x8161f8cf
  40c4fd:	in     eax,dx
  40c4fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ff:	cdq    
  40c500:	(bad)  
  40c501:	imul   eax,DWORD PTR [ebx-0x26a6f112],0x938fc964
  40c50b:	xor    BYTE PTR [ebp+0x47],ch
  40c50e:	mov    ebp,0x7ae56bb1
  40c513:	and    esp,ebx
  40c515:	scas   eax,DWORD PTR es:[edi]
  40c516:	cs cs xchg esi,eax
  40c519:	mov    edx,0x8e90b487
  40c51e:	pop    bp
  40c520:	lea    ecx,[ebx+0x68cda957]
  40c526:	and    al,0x46
  40c528:	push   esi
  40c529:	(bad)  
  40c52a:	repz sti 
  40c52c:	cmp    BYTE PTR ds:0x3f94e094,bl
  40c532:	cmp    cl,ch
  40c534:	mov    dl,0x5f
  40c536:	loopne 0x40c579
  40c538:	(bad)  
  40c539:	loop   0x40c59e
  40c53b:	inc    ebp
  40c53c:	icebp  
  40c53d:	adc    esi,DWORD PTR [ebx+ebp*8-0x46]
  40c541:	push   ebp
  40c542:	leave  
  40c543:	cmp    esp,DWORD PTR [ecx+esi*1-0x49]
  40c547:	arpl   WORD PTR [ebx+ecx*1],bp
  40c54a:	popf   
  40c54b:	mov    ds:0x608fa408,eax
  40c550:	cld    
  40c551:	stc    
  40c552:	mov    DWORD PTR [ecx+0x16f0c31d],0x3658fc6
  40c55c:	(bad)  
  40c55d:	mov    ?,edi
  40c55f:	add    ah,BYTE PTR ds:0xb87fc491
  40c565:	in     al,0xf4
  40c567:	stos   DWORD PTR es:[edi],eax
  40c568:	icebp  
  40c569:	pop    es
  40c56a:	push   eax
  40c56b:	(bad)  
  40c56c:	fist   DWORD PTR [edx+0x3f]
  40c56f:	pop    esp
  40c570:	xor    al,0x39
  40c572:	jg     0x40c5b1
  40c574:	repnz retf 
  40c576:	(bad)  
  40c577:	xor    BYTE PTR [ebp-0x2b],cl
  40c57a:	mov    fs,WORD PTR [ebp-0x1c3ddb48]
  40c580:	dec    esi
  40c581:	push   0x9e195dbd
  40c586:	popa   
  40c587:	and    BYTE PTR [edi+0x4f1419cc],dh
  40c58d:	sbb    DWORD PTR [edx+0x1802ab6d],edx
  40c593:	pop    eax
  40c594:	repnz push 0x4012bd4
  40c59a:	aam    0xed
  40c59c:	pop    ebp
  40c59d:	rol    esp,1
  40c59f:	cmp    DWORD PTR [edi],ecx
  40c5a1:	scas   eax,DWORD PTR es:[edi]
  40c5a2:	push   ebp
  40c5a3:	push   0xffffffd2
  40c5a5:	jge    0x40c5da
  40c5a7:	das    
  40c5a8:	pop    eax
  40c5a9:	jb     0x40c54a
  40c5ab:	out    dx,eax
  40c5ac:	in     eax,dx
  40c5ad:	dec    ebx
  40c5ae:	mov    ebx,0xf47a82f0
  40c5b3:	test   al,0x42
  40c5b5:	pop    fs
  40c5b7:	adc    BYTE PTR [edx+edi*2+0x2c],dh
  40c5bb:	push   edi
  40c5bc:	cs dec ebp
  40c5be:	arpl   WORD PTR [ecx],sp
  40c5c0:	cmp    eax,DWORD PTR [ebp+0x6552b724]
  40c5c6:	xchg   esi,esp
  40c5c8:	xchg   ecx,eax
  40c5c9:	ins    BYTE PTR es:[edi],dx
  40c5ca:	(bad)  
  40c5cb:	and    eax,0xe830ca20
  40c5d0:	pushf  
  40c5d1:	test   BYTE PTR [esi-0x2e4305f9],bl
  40c5d7:	push   0xffffffd4
  40c5d9:	fidivr DWORD PTR [eax+0x1fc53226]
  40c5df:	lock sub eax,0xe0bce39d
  40c5e5:	push   cs
  40c5e6:	cmp    BYTE PTR [esi-0x13a70046],bh
  40c5ec:	fsubr  DWORD PTR [eax+ebp*8+0x25000f3d]
  40c5f3:	dec    esi
  40c5f4:	inc    ebx
  40c5f6:	loope  0x40c5ec
  40c5f8:	xor    ch,BYTE PTR [edi-0x2b]
  40c5fb:	xor    al,0xd4
  40c5fd:	int    0xa7
  40c5ff:	test   BYTE PTR [edx+0x6d],dl
  40c602:	nop
  40c603:	sub    BYTE PTR [edi+eax*1],0xdc
  40c607:	pop    ebx
  40c608:	test   DWORD PTR [edi+0x325bf962],esp
  40c60e:	push   esi
  40c60f:	sar    BYTE PTR [edi+0x7265586f],0xf9
  40c616:	mov    eax,0xc9c65d2b
  40c61b:	push   esi
  40c61c:	mov    eax,0x5f9f68e7
  40c621:	bnd call 0x595ca5a7
  40c627:	dec    edi
  40c628:	call   0x4e09:0x2a885b5f
  40c62f:	ins    BYTE PTR es:[edi],dx
  40c630:	lea    esi,[ecx+0x6fb05bef]
  40c636:	adc    edi,DWORD PTR [ecx+0x224dcfb]
  40c63c:	push   cs
  40c63d:	or     bh,BYTE PTR [ebx+0x4c]
  40c640:	outs   dx,DWORD PTR ds:[esi]
  40c641:	lahf   
  40c642:	into   
  40c643:	out    0x88,eax
  40c645:	popa   
  40c646:	retf   
  40c647:	xlat   BYTE PTR ds:[ebx]
  40c648:	adc    eax,0x697d7024
  40c64d:	mov    esi,0xc07e539b
  40c652:	or     cl,ch
  40c654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c655:	and    bl,BYTE PTR [esi-0x5d]
  40c658:	mov    bh,bl
  40c65a:	dec    eax
  40c65b:	retf   
  40c65c:	xor    eax,0x2a73aa2f
  40c661:	push   es
  40c662:	aad    0x2d
  40c664:	sahf   
  40c665:	sar    BYTE PTR [esi],cl
  40c667:	sbb    al,0x17
  40c669:	lock xchg ecx,eax
  40c66b:	mov    BYTE PTR [edi],dl
  40c66d:	dec    ecx
  40c66e:	lods   al,BYTE PTR ds:[esi]
  40c66f:	xlat   BYTE PTR ds:[ebx]
  40c670:	in     al,dx
  40c671:	jb     0x40c691
  40c673:	loopne 0x40c6b0
  40c675:	pop    edi
  40c676:	adc    DWORD PTR [edi+esi*4-0x61],esi
  40c67a:	mov    al,0x48
  40c67c:	loopne 0x40c671
  40c67e:	mov    esp,0xd83d74
  40c683:	fdivr  QWORD PTR [ecx+ecx*4-0x4e143f8f]
  40c68a:	and    ecx,DWORD PTR [edx+0x1c]
  40c68d:	pop    ds
  40c68e:	push   ebx
  40c68f:	inc    edx
  40c690:	mov    eax,ebp
  40c692:	pop    ss
  40c693:	inc    ecx
  40c694:	mov    es,WORD PTR [edx+0x356c5fd1]
  40c69a:	mov    BYTE PTR [edx+esi*2],ch
  40c69d:	mov    esi,0x2351ba84
  40c6a2:	cmp    DWORD PTR [eax+0x41],ecx
  40c6a5:	xchg   bh,bl
  40c6a7:	pop    esp
  40c6a8:	pushf  
  40c6a9:	mov    BYTE PTR [edx],ah
  40c6ab:	xor    ah,dh
  40c6ad:	fstp   TBYTE PTR [ebp+0x1d35a294]
  40c6b3:	xor    eax,0x19b3c0c5
  40c6b8:	push   ecx
  40c6b9:	pop    eax
  40c6ba:	retf   
  40c6bb:	jno    0x40c6da
  40c6bd:	shr    edx,0xf6
  40c6c0:	push   ds
  40c6c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6c2:	xchg   esp,eax
  40c6c3:	enter  0x152c,0xd1
  40c6c7:	ja     0x40c68d
  40c6c9:	sub    BYTE PTR [edx+0x39],bh
  40c6cc:	cmp    bh,bh
  40c6ce:	jle    0x40c723
  40c6d0:	xchg   esi,eax
  40c6d1:	addr16 bnd call 0x4a6df548
  40c6d8:	dec    edx
  40c6d9:	cmp    BYTE PTR [esi],dh
  40c6db:	xchg   esp,eax
  40c6dc:	stc    
  40c6dd:	jmp    0x40c680
  40c6df:	shl    DWORD PTR [edx],1
  40c6e1:	sub    ebp,DWORD PTR [eax]
  40c6e3:	ins    BYTE PTR es:[edi],dx
  40c6e4:	jbe    0x40c67a
  40c6e6:	call   0xce97:0xdcdd64ea
  40c6ed:	stos   BYTE PTR es:[edi],al
  40c6ee:	les    ebp,FWORD PTR [ebx]
  40c6f0:	jp     0x40c749
  40c6f2:	shl    esp,1
  40c6f4:	jno    0x40c685
  40c6f6:	xor    bh,bl
  40c6f8:	jmp    0x40c774
  40c6fa:	mov    dh,0x8e
  40c6fc:	les    ebp,FWORD PTR [ecx-0x32]
  40c6ff:	mov    eax,ss:0xc4eb0ce
  40c705:	mov    dh,0xe3
  40c707:	push   DWORD PTR [eax-0x333b645d]
  40c70d:	sbb    eax,0xc03b12d5
  40c712:	mov    esi,0xd3e64984
  40c717:	or     al,0x63
  40c719:	test   al,0xc0
  40c71b:	ds cmc 
  40c71d:	adc    dh,BYTE PTR [ecx+0x6d4c0460]
  40c723:	or     edx,DWORD PTR [eax+0x6f59927]
  40c729:	shl    DWORD PTR [ecx+0x732849e1],0x25
  40c730:	pop    ds
  40c731:	and    eax,0xb768fcdd
  40c736:	test   bh,0x82
  40c739:	sub    dh,dh
  40c73b:	test   al,0xda
  40c73d:	jle    0x40c797
  40c73f:	push   esi
  40c740:	out    0xea,eax
  40c742:	sbb    cl,dl
  40c744:	retf   0x479c
  40c747:	(bad)  
  40c748:	stos   DWORD PTR es:[edi],eax
  40c749:	sub    BYTE PTR [ecx],bl
  40c74b:	or     eax,0xc7ff9499
  40c750:	dec    esp
  40c751:	pop    ebx
  40c752:	sub    BYTE PTR [ebx],bl
  40c754:	out    dx,eax
  40c755:	cs inc ebp
  40c757:	ins    DWORD PTR es:[edi],dx
  40c758:	leave  
  40c759:	pop    edx
  40c75a:	fs (bad) 
  40c75c:	loope  0x40c783
  40c75e:	sbb    eax,0x5a0ef86e
  40c763:	aad    0x52
  40c765:	lds    edi,FWORD PTR [esp+edi*1+0xccb626c]
  40c76c:	pop    edi
  40c76d:	cmp    cl,BYTE PTR [ebx]
  40c76f:	test   BYTE PTR [esp+esi*1],bl
  40c772:	mov    ecx,0xc8a68660
  40c777:	into   
  40c778:	cs push ebp
  40c77a:	mov    cl,0x3c
  40c77c:	push   es
  40c77d:	pop    ebx
  40c77e:	inc    ebp
  40c77f:	nop
  40c780:	jp     0x40c748
  40c782:	ja     0x40c7ab
  40c784:	push   ss
  40c785:	dec    ecx
  40c786:	stos   DWORD PTR es:[edi],eax
  40c787:	jo     0x40c7e9
  40c789:	neg    BYTE PTR [edx]
  40c78b:	jbe    0x40c7a1
  40c78d:	add    eax,0x74d46388
  40c792:	pop    esi
  40c793:	xor    ch,bl
  40c795:	xor    al,BYTE PTR [eax]
  40c797:	aaa    
  40c798:	jnp    0x40c74f
  40c79a:	stos   BYTE PTR es:[edi],al
  40c79b:	sbb    BYTE PTR [ebx],ah
  40c79d:	dec    ebx
  40c79e:	out    0x76,eax
  40c7a0:	pop    esi
  40c7a1:	ins    DWORD PTR es:[edi],dx
  40c7a2:	xor    DWORD PTR [edi],eax
  40c7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7a5:	loopne 0x40c800
  40c7a7:	movzx  ebp,WORD PTR [edx-0x401ff2f7]
  40c7ae:	jno    0x40c7f8
  40c7b0:	xchg   edi,ecx
  40c7b2:	mov    WORD PTR [edx+0x3d],fs
  40c7b5:	dec    esp
  40c7b6:	aam    0xf4
  40c7b8:	lods   al,BYTE PTR ds:[esi]
  40c7b9:	ja     0x40c7e6
  40c7bb:	(bad)  
  40c7bc:	pushf  
  40c7bd:	push   esp
  40c7be:	sub    DWORD PTR [ebx+edi*8+0x2aa1cdfa],edi
  40c7c5:	ds jge 0x40c7a8
  40c7c8:	clc    
  40c7c9:	aas    
  40c7ca:	xchg   BYTE PTR [edx],ch
  40c7cc:	loop   0x40c824
  40c7ce:	cdq    
  40c7cf:	jne    0x40c756
  40c7d1:	test   al,0x1a
  40c7d3:	pop    esi
  40c7d4:	sbb    bh,BYTE PTR [ebx+0x21]
  40c7d7:	jnp    0x40c76c
  40c7d9:	dec    edx
  40c7da:	rcr    dh,1
  40c7dc:	sbb    ebp,DWORD PTR [edx-0x32025cfc]
  40c7e2:	cld    
  40c7e3:	sub    BYTE PTR [esi-0x3b],bl
  40c7e6:	sub    bh,ch
  40c7e8:	arpl   WORD PTR [ebp-0x30],di
  40c7eb:	jo     0x40c7c8
  40c7ed:	cmp    DWORD PTR [edi],esi
  40c7ef:	and    DWORD PTR [esi-0x1d19295c],ebx
  40c7f5:	push   ebp
  40c7f6:	cdq    
  40c7f7:	push   ss
  40c7f8:	sub    ebp,DWORD PTR [eax]
  40c7fa:	lock jmp 0xb5fa38c0
  40c800:	aas    
  40c801:	mov    ebx,0x8c7bc18
  40c806:	scas   al,BYTE PTR es:[edi]
  40c807:	ins    BYTE PTR es:[edi],dx
  40c808:	or     DWORD PTR [eax+0x59],edi
  40c80b:	inc    ebx
  40c80c:	push   esi
  40c80d:	mov    al,BYTE PTR [ecx+ecx*4]
  40c810:	xchg   esp,eax
  40c811:	loop   0x40c882
  40c813:	mov    ah,0x83
  40c815:	and    BYTE PTR [esi-0x7e],ah
  40c818:	punpcklbw mm5,DWORD PTR [esp+edi*8]
  40c81c:	(bad)  
  40c81d:	and    BYTE PTR [ebp+ebp*2+0x6905423a],bh
  40c824:	mov    ds:0x1a375ed1,eax
  40c829:	mov    BYTE PTR [esp+eax*1],0x4b
  40c82d:	xlat   BYTE PTR ds:[ebx]
  40c82e:	add    eax,0xdc4791ce
  40c833:	(bad)  [eax-0x25]
  40c836:	(bad)  
  40c837:	fmul   QWORD PTR [ebp-0x41]
  40c83a:	add    bl,BYTE PTR ds:0xab17b6e1
  40c840:	push   ss
  40c841:	xor    cl,0xb9
  40c844:	lahf   
  40c845:	out    0xfd,al
  40c847:	inc    ebx
  40c848:	aad    0x14
  40c84a:	into   
  40c84b:	out    dx,al
  40c84c:	dec    edx
  40c84d:	jmp    0x40c89b
  40c84f:	jns    0x40c86b
  40c851:	nop
  40c852:	les    ecx,FWORD PTR [eax+0x60]
  40c855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c856:	in     eax,0xe6
  40c858:	repnz (bad) 
  40c85a:	and    BYTE PTR ds:0xcfa738b4,bh
  40c860:	out    0x14,al
  40c862:	xchg   ebx,eax
  40c863:	inc    esi
  40c864:	sbb    al,0x9f
  40c866:	add    eax,0x8b530903
  40c86b:	iret   
  40c86c:	lahf   
  40c86d:	test   al,0xcb
  40c86f:	faddp  st(5),st
  40c871:	xchg   ebp,eax
  40c872:	loopne 0x40c84b
  40c874:	outs   dx,DWORD PTR ds:[esi]
  40c875:	scas   al,BYTE PTR es:[edi]
  40c876:	retf   0xb87b
  40c879:	retf   0x87c5
  40c87c:	add    dh,cl
  40c87e:	cs mov esp,0x2bb8f1a6
  40c884:	jno    0x40c859
  40c886:	ror    DWORD PTR [ecx+0x2f6a7d89],cl
  40c88c:	adc    eax,0x2d6e9d98
  40c891:	dec    esp
  40c892:	add    edi,ecx
  40c894:	aad    0xa8
  40c896:	lods   eax,DWORD PTR ds:[esi]
  40c897:	je     0x40c87e
  40c899:	pop    es
  40c89a:	jl     0x40c89a
  40c89c:	adc    al,0x0
  40c89e:	sub    edi,eax
  40c8a0:	xchg   esi,eax
  40c8a1:	xor    bh,bl
  40c8a3:	sbb    BYTE PTR [ebp+0x6],ah
  40c8a6:	adc    DWORD PTR [eax],ebx
  40c8a8:	(bad)  
  40c8a9:	ds popa 
  40c8ab:	xor    BYTE PTR [edx+0x12],bh
  40c8ae:	aad    0xab
  40c8b0:	mov    edx,0x32a8ad55
  40c8b5:	xchg   esi,eax
  40c8b6:	mov    ds,WORD PTR [esi-0x15db05f2]
  40c8bc:	jmp    0x40c902
  40c8be:	stc    
  40c8bf:	popf   
  40c8c0:	enter  0x2d50,0xe0
  40c8c4:	fcom   QWORD PTR [edx+ebx*8]
  40c8c7:	je     0x40c8b9
  40c8c9:	dec    ebx
  40c8ca:	sub    DWORD PTR [edi-0x4b566b30],edx
  40c8d0:	stos   BYTE PTR es:[edi],al
  40c8d1:	imul   ecx,DWORD PTR [esp+ebp*1],0x23b53fe5
  40c8d8:	data16 std 
  40c8da:	das    
  40c8db:	stc    
  40c8dc:	rol    DWORD PTR [edi],cl
  40c8de:	push   0x78
  40c8e0:	mov    esi,0x7f8a14bb
  40c8e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8e6:	(bad)  
  40c8e8:	mov    ds:0x4d915b87,al
  40c8ed:	xchg   esp,eax
  40c8ee:	jp     0x40c8bd
  40c8f0:	mov    dh,0xfe
  40c8f2:	div    esp
  40c8f4:	ins    BYTE PTR es:[edi],dx
  40c8f5:	jae    0x40c8c5
  40c8f7:	inc    edi
  40c8f8:	lds    esi,FWORD PTR [ebx+0x46c269fb]
  40c8fe:	xchg   edx,eax
  40c8ff:	jg     0x40c8c3
  40c901:	mov    ah,0xe1
  40c903:	mov    dl,0x80
  40c905:	sti    
  40c906:	idiv   DWORD PTR [eax+0x6e686ea8]
  40c90c:	push   edx
  40c90d:	sbb    DWORD PTR [ecx+0x68],eax
  40c910:	outs   dx,BYTE PTR ds:[esi]
  40c911:	push   ds
  40c912:	cmp    BYTE PTR [edx],ch
  40c914:	test   al,0x99
  40c916:	int3   
  40c917:	cld    
  40c918:	push   es
  40c919:	out    0x2,eax
  40c91b:	pop    ebp
  40c91c:	and    al,0xca
  40c91e:	int3   
  40c91f:	xor    dl,dh
  40c921:	adc    al,0x24
  40c923:	ret    
  40c924:	dec    esi
  40c925:	(bad)  
  40c926:	vandnps ymm3,ymm3,YMMWORD PTR [edx]
  40c92a:	mov    ch,0x3f
  40c92c:	cld    
  40c92d:	jle    0x40c9a2
  40c92f:	cwde   
  40c930:	mov    cl,0xa7
  40c932:	inc    ecx
  40c933:	xchg   edi,eax
  40c934:	sbb    BYTE PTR [edi+0x4f315ea2],bh
  40c93a:	std    
  40c93b:	je     0x40c920
  40c93d:	jae    0x40c8c5
  40c93f:	loop   0x40c8cb
  40c941:	icebp  
  40c942:	dec    esp
  40c943:	dec    edi
  40c944:	dec    esi
  40c945:	cmp    ebx,DWORD PTR [ecx-0x19b8b4fe]
  40c94b:	xor    al,BYTE PTR ds:0xc99099ab
  40c951:	add    al,0xd3
  40c953:	adc    DWORD PTR [esi+eax*1],ecx
  40c956:	mov    dl,0xd2
  40c958:	mov    dl,0x73
  40c95a:	les    ebp,FWORD PTR [edx-0x27]
  40c95d:	jb     0x40c96c
  40c95f:	cmp    al,0xea
  40c961:	aad    0x3d
  40c963:	pop    edx
  40c964:	jb     0x40c9cd
  40c966:	rcl    BYTE PTR [eax-0x77],1
  40c969:	xor    edi,DWORD PTR [edx+0x40]
  40c96c:	inc    esp
  40c96d:	lods   eax,DWORD PTR ds:[esi]
  40c96e:	and    DWORD PTR [edi-0x44],eax
  40c971:	cwde   
  40c972:	sbb    al,0x99
  40c974:	or     ch,BYTE PTR [ebp+eiz*4-0x78]
  40c978:	push   edx
  40c979:	cld    
  40c97a:	add    dh,0x28
  40c97d:	repz inc edi
  40c97f:	mov    eax,edx
  40c981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c982:	faddp  st(1),st
  40c984:	add    ch,BYTE PTR [ebp+0x71]
  40c987:	mov    eax,0x3f708d0d
  40c98c:	cmp    esi,0xa5218f10
  40c992:	mov    ch,0x54
  40c994:	setl   BYTE PTR [ecx+edi*4]
  40c998:	not    ah
  40c99a:	data16 fst QWORD PTR [edi]
  40c99d:	icebp  
  40c99e:	mov    esi,0x5beeca0b
  40c9a3:	jmp    0x40ca1e
  40c9a5:	jns    0x40c98a
  40c9a7:	push   DWORD PTR [edx+ebp*4-0x696ef103]
  40c9ae:	mov    dh,0x28
  40c9b0:	mov    dh,0x83
  40c9b2:	ins    DWORD PTR es:[edi],dx
  40c9b3:	not    DWORD PTR [eax-0x2c]
  40c9b6:	jmp    0xf5d43c0d
  40c9bb:	add    BYTE PTR [ebp-0x75f0e74e],al
  40c9c1:	xchg   ch,ch
  40c9c3:	cs inc edi
  40c9c5:	cmp    dh,BYTE PTR [esi-0x3fa2806a]
  40c9cb:	mov    al,ds:0x18fafd8c
  40c9d0:	mov    DWORD PTR [ebx-0x5],esp
  40c9d3:	or     edi,eax
  40c9d5:	int    0x98
  40c9d7:	or     DWORD PTR [ecx-0xf23b218],0x1
  40c9de:	xlat   BYTE PTR ds:[ebx]
  40c9df:	add    al,0x8
  40c9e1:	mov    ebp,0xed357916
  40c9e6:	cmp    ch,BYTE PTR [ecx+edx*1+0x7513ae3f]
  40c9ed:	das    
  40c9ee:	(bad)  
  40c9ef:	or     bh,BYTE PTR [ebx]
  40c9f1:	mov    cl,0x55
  40c9f3:	or     edx,ebx
  40c9f5:	push   edx
  40c9f6:	and    al,0xf5
  40c9f8:	push   ss
  40c9f9:	aam    0x84
  40c9fb:	mov    ebp,0x55d64393
  40ca01:	adc    dl,bh
  40ca03:	(bad)  
  40ca04:	shl    DWORD PTR [ebp+0x26],1
  40ca07:	pop    ecx
  40ca08:	iret   
  40ca09:	(bad)  [ecx-0x2b5bb3dd]
  40ca0f:	jge    0x40ca1d
  40ca11:	cmp    esp,DWORD PTR [esi+eiz*1]
  40ca14:	adc    ebx,DWORD PTR [ebx+eiz*2+0x1a]
  40ca18:	lods   al,BYTE PTR ds:[esi]
  40ca19:	cli    
  40ca1a:	arpl   bx,dx
  40ca1c:	ss retf 
  40ca1e:	dec    ecx
  40ca1f:	push   0x64
  40ca21:	mov    WORD PTR [ecx+0x40],?
  40ca24:	dec    edx
  40ca25:	add    DWORD PTR [eax],ebx
  40ca27:	xor    BYTE PTR [edx-0x719ac1d4],cl
  40ca2d:	pop    ebx
  40ca2e:	mov    eax,ds:0xf45896ae
  40ca33:	(bad)  
  40ca34:	retf   
  40ca35:	add    DWORD PTR [bp+si],0x3
  40ca39:	movsx  edx,BYTE PTR [ebx+eax*2+0x29]
  40ca3e:	(bad)  
  40ca3f:	stc    
  40ca40:	push   ss
  40ca41:	mov    esp,0x6394276e
  40ca46:	pop    edx
  40ca47:	fcomp  st(2)
  40ca49:	xlat   BYTE PTR ds:[ebx]
  40ca4a:	aam    0xb7
  40ca4c:	cmp    eax,0x6bcade70
  40ca51:	push   ebx
  40ca52:	sbb    DWORD PTR [edi+0x76],edx
  40ca55:	test   edx,ecx
  40ca57:	jns    0x40cac4
  40ca59:	or     DWORD PTR [edi-0x43],esp
  40ca5c:	mov    ch,0x52
  40ca5e:	(bad)  
  40ca5f:	pop    ds
  40ca60:	fild   QWORD PTR [ebx+0x6b]
  40ca63:	adc    eax,0x85296f5b
  40ca68:	lods   eax,DWORD PTR ds:[esi]
  40ca69:	in     al,dx
  40ca6a:	repz add bl,BYTE PTR [ebx+0x73fb3358]
  40ca71:	gs int3 
  40ca73:	or     BYTE PTR [edi],ah
  40ca75:	cmp    dh,BYTE PTR [ebp+0x317ce277]
  40ca7b:	data16 xchg BYTE PTR [ecx],al
  40ca7e:	scas   al,BYTE PTR es:[edi]
  40ca7f:	adc    bl,bh
  40ca81:	dec    esi
  40ca82:	retf   
  40ca83:	dec    eax
  40ca84:	popa   
  40ca85:	cmp    al,0x6e
  40ca87:	adc    eax,0xb043403f
  40ca8c:	inc    ebp
  40ca8d:	pop    ss
  40ca8e:	or     bh,BYTE PTR es:[edi-0x76]
  40ca92:	ins    BYTE PTR es:[edi],dx
  40ca93:	lahf   
  40ca94:	mov    al,0xc5
  40ca96:	aad    0x20
  40ca98:	cs (bad) 
  40ca9a:	mov    BYTE PTR [ebx+0x65],0x97
  40ca9e:	repnz ds pop edx
  40caa1:	rcr    edi,cl
  40caa3:	xor    BYTE PTR [esi+0x5233629b],bl
  40caa9:	pusha  
  40caaa:	mov    al,ds:0x37e795c0
  40caaf:	cmp    ebp,DWORD PTR [ebx-0x37a24daf]
  40cab5:	rol    ah,0xcc
  40cab8:	dec    ebp
  40cab9:	xchg   DWORD PTR [edx],edx
  40cabb:	daa    
  40cabc:	xchg   ecx,eax
  40cabd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cabe:	dec    esp
  40cabf:	out    dx,al
  40cac0:	stc    
  40cac1:	out    0xcb,al
  40cac3:	popf   
  40cac4:	xchg   edx,eax
  40cac5:	mov    ebp,0x27537cf1
  40caca:	push   esi
  40cacb:	xor    dh,BYTE PTR [ebp-0x24]
  40cace:	sbb    dh,BYTE PTR [esi-0xc]
  40cad1:	push   esi
  40cad2:	loop   0x40cb09
  40cad4:	jnp    0x40cae2
  40cad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cad8:	add    DWORD PTR [edx-0x6f],edi
  40cadb:	pop    esi
  40cadc:	sbb    dl,cl
  40cade:	(bad)  
  40cadf:	in     eax,dx
  40cae0:	add    eax,0x42d5db61
  40cae5:	sub    eax,0x5f989c64
  40caea:	loopne 0x40ca7f
  40caec:	cmp    DWORD PTR [ebx+0x5e],eax
  40caef:	stos   BYTE PTR es:[edi],al
  40caf0:	in     al,dx
  40caf1:	rol    BYTE PTR [esi-0x591885ca],0x22
  40caf8:	arpl   WORD PTR ds:0x467c7d12,bp
  40cafe:	dec    ecx
  40caff:	(bad)  
  40cb00:	sub    eax,0x314f1898
  40cb05:	inc    esp
  40cb06:	dec    edi
  40cb07:	(bad)  
  40cb08:	icebp  
  40cb09:	adc    ecx,edi
  40cb0b:	mov    bl,BYTE PTR [eax-0x5a]
  40cb0e:	loopne 0x40cb38
  40cb10:	in     eax,dx
  40cb11:	loopne 0x40cb7b
  40cb13:	fnstcw WORD PTR [edx]
  40cb15:	adc    eax,0xc8589183
  40cb1a:	pushf  
  40cb1b:	mov    esi,DWORD PTR [ecx-0x72]
  40cb1e:	adc    al,0xfc
  40cb20:	imul   edi,DWORD PTR [ebx+0x3b],0x68a3f5a8
  40cb27:	mov    dl,0xd4
  40cb29:	add    BYTE PTR [eax-0x42],0xa0
  40cb2d:	add    BYTE PTR [edx+edx*4+0x1c9e314d],bl
  40cb34:	xchg   edx,eax
  40cb35:	mov    ds:0xcae2e5a4,al
  40cb3a:	lahf   
  40cb3b:	js     0x40cbb9
  40cb3d:	mov    ecx,0xb1b9bed1
  40cb42:	lock ret 
  40cb44:	mov    ss,WORD PTR [ebp-0x59]
  40cb47:	mov    bl,0x20
  40cb49:	js     0x40cb80
  40cb4b:	stos   BYTE PTR es:[edi],al
  40cb4c:	lock (bad) 
  40cb4e:	push   0x754fa9f
  40cb53:	add    esp,ecx
  40cb55:	adc    al,0x56
  40cb57:	mov    ds:0x5bc9a7eb,eax
  40cb5c:	int3   
  40cb5d:	repz and al,dh
  40cb60:	stos   BYTE PTR es:[edi],al
  40cb61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb62:	dec    esi
  40cb63:	and    ah,BYTE PTR [edi+0x51]
  40cb66:	out    0x58,al
  40cb68:	xchg   edx,eax
  40cb69:	ins    DWORD PTR es:[edi],dx
  40cb6a:	sti    
  40cb6b:	cmp    eax,0xe0c91702
  40cb70:	lahf   
  40cb71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb72:	js     0x40cb7e
  40cb74:	xchg   esi,eax
  40cb75:	dec    edx
  40cb76:	mov    esi,0xd147f4d5
  40cb7b:	xchg   ebx,eax
  40cb7c:	mov    eax,0x651ca7bd
  40cb81:	push   es
  40cb82:	(bad)  
  40cb83:	sbb    eax,DWORD PTR [ebx]
  40cb85:	test   BYTE PTR [edx],ah
  40cb87:	lahf   
  40cb88:	xchg   esi,eax
  40cb89:	mov    ebx,0xaaaf6458
  40cb8e:	stc    
  40cb8f:	scas   eax,DWORD PTR es:[edi]
  40cb90:	and    eax,0xa3d125cf
  40cb95:	mov    esp,0x3759358b
  40cb9a:	pop    edx
  40cb9b:	repnz icebp 
  40cb9d:	mov    ch,0xfa
  40cb9f:	test   DWORD PTR [edi-0x8c208e0],0x49c3843
  40cba9:	jle    0x40cb9f
  40cbab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbac:	mov    dl,0xb4
  40cbae:	test   BYTE PTR ds:[ecx+0x6f],0xfd
  40cbb3:	scas   al,BYTE PTR es:[edi]
  40cbb4:	shl    BYTE PTR [ebp+0x5a6a38c8],cl
  40cbba:	jmp    0x40cc2b
  40cbbc:	mov    ds:0x7cdc4786,eax
  40cbc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbc2:	adc    BYTE PTR es:[esi+0x1d],dl
  40cbc6:	mov    al,0xdc
  40cbc8:	je     0x40cb4c
  40cbca:	lods   eax,DWORD PTR fs:[esi]
  40cbcc:	inc    ebp
  40cbcd:	pop    esi
  40cbce:	pusha  
  40cbcf:	push   ecx
  40cbd0:	sub    ecx,edi
  40cbd2:	jge    0x40cb91
  40cbd4:	call   0xc700:0x6bf9d284
  40cbdb:	fs cmp bh,BYTE PTR gs:[edx-0x11]
  40cbe0:	rcl    DWORD PTR [ecx-0x5329f62e],1
  40cbe6:	mov    al,ds:0x4a833b4f
  40cbeb:	stos   DWORD PTR es:[edi],eax
  40cbec:	adc    ebp,DWORD PTR [esi-0x2902ee34]
  40cbf2:	enter  0x918f,0xab
  40cbf6:	int    0x24
  40cbf8:	mov    esp,0xea87b4e3
  40cbfd:	dec    edx
  40cbfe:	add    BYTE PTR [ebx+0x35d242a2],0x6c
  40cc05:	fldenv [eax+0x25]
  40cc08:	es fcmovne st,st(1)
  40cc0b:	xor    BYTE PTR [ebp-0x1b],0xb0
  40cc0f:	xor    eax,0xc1516a22
  40cc14:	add    eax,0xe9e8be9f
  40cc19:	stos   BYTE PTR es:[edi],al
  40cc1a:	jns    0x40cc9b
  40cc1c:	push   ebp
  40cc1d:	lods   eax,DWORD PTR ds:[esi]
  40cc1e:	dec    edx
  40cc1f:	and    al,0x2b
  40cc21:	js     0x40cc6f
  40cc23:	jecxz  0x40cca4
  40cc25:	icebp  
  40cc26:	imul   edi,edi,0xffffffdd
  40cc29:	add    esi,ebx
  40cc2b:	cmp    al,0x12
  40cc2d:	and    al,BYTE PTR [ecx-0x40]
  40cc30:	fwait
  40cc31:	int3   
  40cc32:	adc    eax,0xecc86a2b
  40cc37:	jae    0x40cbf5
  40cc39:	xor    DWORD PTR [edx],edi
  40cc3b:	jb     0x40cc29
  40cc3d:	push   edi
  40cc3e:	add    al,0x78
  40cc40:	popa   
  40cc41:	jge    0x40cc71
  40cc43:	add    al,0xf7
  40cc45:	in     eax,0x1a
  40cc47:	jb     0x40cc4e
  40cc49:	push   esp
  40cc4a:	fistp  WORD PTR [edx-0x24]
  40cc4d:	and    DWORD PTR [eax],edi
  40cc4f:	sar    BYTE PTR [esi],cl
  40cc51:	gs dec esp
  40cc53:	push   ebx
  40cc54:	pop    edi
  40cc55:	jne    0x40cc2a
  40cc57:	adc    ebp,DWORD PTR ds:[eax+ecx*8]
  40cc5b:	popf   
  40cc5c:	popf   
  40cc5d:	jge    0x40cc1d
  40cc5f:	out    dx,al
  40cc60:	in     al,0xfe
  40cc62:	retf   
  40cc63:	xchg   edi,eax
  40cc64:	ror    esp,0x43
  40cc67:	jecxz  0x40cc79
  40cc69:	sub    BYTE PTR [edi+0x28749375],al
  40cc6f:	mov    al,BYTE PTR [ebp+0x3f]
  40cc72:	dec    ecx
  40cc73:	inc    ecx
  40cc74:	add    dl,BYTE PTR [edi]
  40cc76:	sahf   
  40cc77:	jnp    0x40cbf9
  40cc79:	sahf   
  40cc7a:	stos   BYTE PTR es:[edi],al
  40cc7b:	out    dx,eax
  40cc7c:	outs   dx,BYTE PTR ds:[esi]
  40cc7d:	js     0x40ccb8
  40cc7f:	mov    bl,0x35
  40cc81:	and    eax,0x528b5867
  40cc86:	call   0x1c7e:0xae3d3dea
  40cc8d:	jnp    0x40cc71
  40cc8f:	mov    ch,0xf1
  40cc91:	jmp    0xa510:0x4268ffc3
  40cc98:	mov    ebx,0x486351cd
  40cc9d:	bound  edi,QWORD PTR [ebx+0x10]
  40cca0:	and    al,0x81
  40cca2:	aaa    
  40cca3:	mov    bl,0x6b
  40cca5:	adc    edi,edx
  40cca7:	mov    DWORD PTR [edi],eax
  40cca9:	dec    ebp
  40ccaa:	sub    eax,0x29f6c6c1
  40ccaf:	sti    
  40ccb0:	sub    DWORD PTR [edx-0x73671c7d],esp
  40ccb6:	xor    BYTE PTR [edi],ah
  40ccb8:	stos   BYTE PTR es:[edi],al
  40ccb9:	xchg   ebx,eax
  40ccba:	ret    0xf07c
  40ccbd:	push   ebp
  40ccbe:	or     bl,ch
  40ccc0:	pop    ss
  40ccc1:	outs   dx,BYTE PTR ds:[esi]
  40ccc2:	mov    ds:0xbc3660a1,al
  40ccc7:	jbe    0x40ccce
  40ccc9:	xor    edx,eax
  40cccb:	js     0x40cd44
  40cccd:	mov    ah,0x66
  40cccf:	aad    0x60
  40ccd1:	jmp    0x40cc78
  40ccd3:	adc    al,0xce
  40ccd5:	outs   dx,BYTE PTR ds:[esi]
  40ccd6:	(bad)  
  40ccd7:	push   ecx
  40ccd8:	ds (bad) 
  40ccda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccdb:	retf   
  40ccdc:	call   FWORD PTR [edx]
  40ccde:	mov    edi,0x140d1afc
  40cce3:	neg    BYTE PTR [ebx]
  40cce5:	pop    esi
  40cce6:	cs ret 
  40cce8:	scas   al,BYTE PTR es:[edi]
  40cce9:	call   0xedd2:0x8dac1567
  40ccf0:	sbb    BYTE PTR [ebp+0x5e419d49],al
  40ccf6:	(bad)  
  40ccf8:	push   eax
  40ccf9:	les    esi,FWORD PTR [eax]
  40ccfb:	(bad)  
  40ccfc:	push   ecx
  40ccfd:	xlat   BYTE PTR ds:[ebx]
  40ccfe:	fiadd  DWORD PTR [edx]
  40cd00:	call   FWORD PTR [ecx]
  40cd02:	sub    ch,cl
  40cd04:	sbb    ebx,ecx
  40cd06:	or     dh,BYTE PTR [ecx]
  40cd08:	clc    
  40cd09:	aaa    
  40cd0a:	ror    DWORD PTR [ebx+edi*2],0xa9
  40cd0e:	inc    esi
  40cd0f:	sbb    esp,DWORD PTR [ecx+0x1568ca30]
  40cd15:	sub    ebp,ebp
  40cd17:	xor    bl,BYTE PTR [edi+0x32]
  40cd1a:	sub    BYTE PTR [ebp+0x77],bh
  40cd1d:	pop    ss
  40cd1e:	dec    ebx
  40cd1f:	cmp    al,BYTE PTR [esi+0x15]
  40cd22:	sub    DWORD PTR [ecx-0xa],0x484df711
  40cd29:	ja     0x40cd1e
  40cd2b:	xchg   BYTE PTR [eax+0x74],al
  40cd2e:	fcom   QWORD PTR [ebx-0x18e8e9a]
  40cd34:	clc    
  40cd35:	ins    DWORD PTR es:[edi],dx
  40cd36:	enter  0x561b,0xe9
  40cd3a:	test   DWORD PTR [edx],esi
  40cd3c:	adc    edi,DWORD PTR [eax+0x37e58a82]
  40cd42:	cmp    al,0xef
  40cd44:	ja     0x40cdbd
  40cd46:	sbb    DWORD PTR [eax-0x38],esp
  40cd49:	shl    DWORD PTR [ecx-0x79131188],0x4e
  40cd50:	loope  0x40cd94
  40cd52:	pop    ds
  40cd53:	(bad)  
  40cd54:	loopne 0x40cd8a
  40cd56:	scas   al,BYTE PTR es:[edi]
  40cd57:	push   ebx
  40cd58:	test   ebp,esi
  40cd5a:	mov    edi,0xae979368
  40cd5f:	(bad)  
  40cd60:	mov    edi,0xb9d3d4ec
  40cd65:	(bad)
  40cd68:	or     bh,al
  40cd6a:	ror    DWORD PTR [ecx+0x1],0x9a
  40cd6e:	(bad)  
  40cd6f:	test   DWORD PTR [ecx+edi*8],0x776f0dd0
  40cd76:	popf   
  40cd77:	adc    dl,BYTE PTR [eax]
  40cd79:	(bad)  
  40cd7a:	push   cs
  40cd7b:	push   0xffffffbe
  40cd7d:	inc    edi
  40cd7e:	xchg   ebx,eax
  40cd7f:	xchg   ebx,eax
  40cd80:	xor    eax,0x8f7a11d0
  40cd85:	mov    ah,0x69
  40cd87:	lods   eax,DWORD PTR ds:[esi]
  40cd88:	ss mov bh,0xd1
  40cd8b:	js     0x40cdc8
  40cd8d:	dec    ebx
  40cd8e:	loope  0x40cd4f
  40cd90:	adc    edx,edi
  40cd92:	mov    ebp,DWORD PTR [ecx]
  40cd94:	xchg   esi,eax
  40cd95:	inc    edx
  40cd96:	adc    al,0x10
  40cd98:	or     BYTE PTR [edx-0x45830bfc],0x88
  40cd9f:	int    0xd8
  40cda1:	lea    edx,[edi+0x56ae1238]
  40cda7:	repnz cmp DWORD PTR [edx],0xa
  40cdab:	ja     0x40cda7
  40cdad:	mov    ds:0x990a2a7f,eax
  40cdb2:	into   
  40cdb3:	test   BYTE PTR [esp+ecx*1+0x1fea6a1d],cl
  40cdba:	call   DWORD PTR [edx-0x689f2ccb]
  40cdc0:	adc    al,0x93
  40cdc2:	cs jae 0x40cda0
  40cdc5:	or     dh,al
  40cdc7:	or     BYTE PTR [ecx+0x5a],bl
  40cdca:	call   0xbe931fdc
  40cdcf:	outs   dx,BYTE PTR ds:[esi]
  40cdd0:	inc    eax
  40cdd1:	and    edi,DWORD PTR [edx]
  40cdd3:	hlt    
  40cdd4:	dec    edi
  40cdd5:	je     0x40cd8f
  40cdd7:	call   0xe6173846
  40cddc:	add    ebx,edx
  40cdde:	sbb    ah,bl
  40cde0:	dec    ebp
  40cde1:	stos   DWORD PTR es:[edi],eax
  40cde2:	(bad)  
  40cde3:	int3   
  40cde4:	adc    eax,0xd2d520d1
  40cde9:	push   esi
  40cdea:	outs   dx,DWORD PTR ds:[esi]
  40cdeb:	pop    es
  40cdec:	pop    ebp
  40cded:	dec    esi
  40cdee:	fistp  QWORD PTR [ebx+0x6a4cba95]
  40cdf4:	sahf   
  40cdf5:	and    al,0x5
  40cdf7:	fisubr DWORD PTR [eax+edi*8]
  40cdfa:	xor    eax,0x43efadf4
  40cdff:	inc    eax
  40ce00:	pop    ss
  40ce01:	stos   DWORD PTR es:[edi],eax
  40ce02:	repz cmp BYTE PTR [edi-0x25378331],ah
  40ce09:	mov    bl,0x88
  40ce0b:	mov    cl,0xf6
  40ce0d:	ret    
  40ce0e:	jo     0x40cde9
  40ce10:	out    dx,eax
  40ce11:	mov    esp,0xd01fcab0
  40ce16:	sbb    ebp,DWORD PTR [eax]
  40ce18:	call   0x51cb1dea
  40ce1d:	call   0xeb63:0x2ea2d4ff
  40ce24:	or     al,0x61
  40ce26:	push   ebx
  40ce27:	mov    ebp,0x7279f43f
  40ce2c:	jecxz  0x40cdbc
  40ce2e:	xor    ebp,ebp
  40ce30:	jo     0x40cea2
  40ce32:	sbb    ch,BYTE PTR [eax+0x5076f956]
  40ce38:	xlat   BYTE PTR ds:[ebx]
  40ce39:	mov    ds:0xaa26995d,al
  40ce3e:	jb     0x40ce40
  40ce40:	mov    WORD PTR gs:[edx+0x1d],?
  40ce44:	stos   DWORD PTR es:[edi],eax
  40ce45:	scas   al,BYTE PTR es:[edi]
  40ce46:	stos   DWORD PTR es:[edi],eax
  40ce47:	or     DWORD PTR [edi+ecx*4],ecx
  40ce4a:	fs mov edx,esp
  40ce4d:	retf   0x7f92
  40ce50:	xor    eax,0xbcaf1c04
  40ce55:	stos   DWORD PTR es:[edi],eax
  40ce56:	das    
  40ce57:	and    DWORD PTR [esi],ebp
  40ce59:	mov    edx,0x9bdbcc1
  40ce5e:	cmp    dh,BYTE PTR [edx-0x7950d4d0]
  40ce64:	rcl    BYTE PTR [edx],cl
  40ce66:	fisttp WORD PTR [edi]
  40ce68:	jg     0x40ce0a
  40ce6a:	das    
  40ce6b:	pop    edx
  40ce6c:	mov    eax,DWORD PTR [ebx+0x62d3c55d]
  40ce72:	cs inc ecx
  40ce74:	adc    eax,0x2c221482
  40ce79:	cmp    BYTE PTR [esi],ah
  40ce7b:	mov    BYTE PTR [esi-0x6d],cl
  40ce7e:	push   esi
  40ce7f:	mov    gs,ecx
  40ce81:	ds cwde 
  40ce83:	adc    eax,0x53f885cb
  40ce88:	push   0x75
  40ce8a:	shl    BYTE PTR [ebp-0x6f],0xa8
  40ce8e:	daa    
  40ce8f:	clc    
  40ce90:	mov    ecx,DWORD PTR [edi+0x61]
  40ce93:	les    esi,FWORD PTR [edi]
  40ce95:	ss test al,0x6f
  40ce98:	pop    esp
  40ce99:	idiv   bl
  40ce9b:	adc    BYTE PTR [edx-0x16abbb3b],dh
  40cea1:	and    al,0x41
  40cea3:	mov    edi,0x44d3b235
  40cea8:	out    0x58,eax
  40ceaa:	and    ecx,DWORD PTR [ebp-0x27]
  40cead:	shr    DWORD PTR [ecx+0x1ff50eb6],1
  40ceb3:	sar    BYTE PTR [edx+0x3d],cl
  40ceb6:	lods   eax,DWORD PTR ds:[esi]
  40ceb7:	inc    ecx
  40ceb8:	outs   dx,DWORD PTR ds:[esi]
  40ceb9:	jno    0x40ce83
  40cebb:	ret    0x8f9a
  40cebe:	retf   
  40cebf:	jns    0x40cf2d
  40cec1:	orps   xmm6,xmm7
  40cec4:	aaa    
  40cec5:	add    al,0xb
  40cec7:	in     eax,0xad
  40cec9:	adc    bl,BYTE PTR [edx-0x59078130]
  40cecf:	dec    ecx
  40ced0:	inc    ecx
  40ced1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ced2:	and    BYTE PTR [ebp+0x2718fb1d],0x59
  40ced9:	xor    al,0x15
  40cedb:	adc    cl,dl
  40cedd:	cmp    al,0x11
  40cedf:	in     al,0xf7
  40cee1:	int    0xb6
  40cee3:	jle    0x40cf2a
  40cee5:	xor    ch,BYTE PTR [esi-0x38]
  40cee8:	sti    
  40cee9:	fadd   st(7),st
  40ceeb:	dec    ebp
  40ceec:	inc    esp
  40ceed:	mov    al,0x28
  40ceef:	xchg   ecx,eax
  40cef0:	daa    
  40cef1:	je     0x40cf6f
  40cef3:	sbb    edi,DWORD PTR [edi+0x75]
  40cef6:	push   0x18
  40cef8:	xchg   esi,eax
  40cef9:	dec    ebx
  40cefa:	cwde   
  40cefb:	cmp    al,0x83
  40cefd:	outs   dx,DWORD PTR ds:[esi]
  40cefe:	icebp  
  40ceff:	loopne 0x40cf2f
  40cf01:	pop    ss
  40cf02:	xchg   BYTE PTR [esi+esi*4],dl
  40cf05:	mov    cl,0xad
  40cf07:	cld    
  40cf08:	jbe    0x40cf0c
  40cf0a:	xchg   ebx,eax
  40cf0b:	es push 0xc383a53c
  40cf11:	xor    edi,DWORD PTR [edx-0x3836702c]
  40cf17:	xor    dh,BYTE PTR [edi+eiz*4+0x50]
  40cf1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf1c:	or     DWORD PTR [edi+eax*2],ebp
  40cf1f:	mov    dl,0xd5
  40cf21:	arpl   WORD PTR [edx],dx
  40cf23:	xchg   esp,eax
  40cf24:	cmp    edi,DWORD PTR [ecx-0x6ab32409]
  40cf2a:	push   edi
  40cf2b:	je     0x40cec0
  40cf2d:	test   al,0xb1
  40cf2f:	mov    ch,0x34
  40cf31:	or     edi,ecx
  40cf33:	shr    DWORD PTR [ecx+0x22],cl
  40cf36:	xchg   ebx,eax
  40cf37:	icebp  
  40cf38:	pop    es
  40cf39:	repz cmp al,0x69
  40cf3c:	sub    DWORD PTR [esi+0x5a],edi
  40cf3f:	mov    ebp,0x33427d9d
  40cf44:	mov    edi,0x782a09ef
  40cf49:	mov    WORD PTR [edi+0x737da2a4],ss
  40cf4f:	push   esp
  40cf50:	pusha  
  40cf51:	add    BYTE PTR [ebp+edx*2-0x4],ah
  40cf55:	stos   BYTE PTR es:[edi],al
  40cf56:	jbe    0x40ceda
  40cf58:	dec    ebx
  40cf59:	in     eax,0xa7
  40cf5b:	(bad)  [ecx-0x3f]
  40cf5e:	lds    edx,FWORD PTR [ebp-0x1874bf22]
  40cf64:	jne    0x40cf12
  40cf66:	pusha  
  40cf67:	pop    edi
  40cf68:	scas   eax,DWORD PTR es:[edi]
  40cf69:	stos   BYTE PTR es:[edi],al
  40cf6a:	lds    esi,FWORD PTR ds:0x7bfcf04
  40cf70:	mov    esp,0x3f8c884d
  40cf75:	inc    esp
  40cf76:	popf   
  40cf77:	pop    esi
  40cf78:	mov    BYTE PTR ds:0xa9b53c8c,bh
  40cf7e:	cmp    al,0xa2
  40cf80:	xchg   edx,eax
  40cf81:	mov    dl,0x84
  40cf83:	pop    esp
  40cf84:	sub    BYTE PTR [esi],cl
  40cf86:	add    eax,0xae4b1bb2
  40cf8b:	call   0x6b33:0x25f58fa7
  40cf92:	jo     0x40cfa5
  40cf94:	idiv   DWORD PTR [ebp+0x18]
  40cf97:	dec    edi
  40cf98:	inc    eax
  40cf99:	cmp    DWORD PTR [ebx-0x7cdea070],0x5b9a6470
  40cfa3:	pusha  
  40cfa4:	or     dl,BYTE PTR [eax]
  40cfa6:	xchg   dh,bh
  40cfa8:	xor    al,0xff
  40cfaa:	pop    es
  40cfab:	sub    edi,edx
  40cfad:	cli    
  40cfae:	push   0x4f8b8cd9
  40cfb3:	mov    ah,dl
  40cfb5:	mov    eax,0xa9ea9ef2
  40cfba:	in     eax,0xd2
  40cfbc:	xor    esi,ebx
  40cfbe:	bound  edi,QWORD PTR [ebp+eiz*8+0x6207a11f]
  40cfc5:	and    DWORD PTR [edx],edi
  40cfc7:	(bad)  
  40cfc9:	lea    ebx,[eax-0x3ce3653]
  40cfcf:	push   0x31a5df10
  40cfd4:	in     eax,dx
  40cfd5:	(bad)  
  40cfd6:	sahf   
  40cfd7:	jns    0x40cf84
  40cfd9:	mov    cl,0x89
  40cfdb:	or     BYTE PTR [eax+0x5139cf21],bl
  40cfe1:	loope  0x40d05e
  40cfe3:	outs   dx,BYTE PTR ds:[esi]
  40cfe4:	out    0xe7,eax
  40cfe6:	jle    0x40cfe9
  40cfe8:	or     DWORD PTR [ebp+0x6f2fa519],eax
  40cfee:	jl     0x40cfd7
  40cff0:	test   DWORD PTR [ebx+0x79],esp
  40cff3:	adc    cl,0xc9
  40cff6:	(bad)
  40cffa:	pop    ebx
  40cffb:	ins    BYTE PTR es:[edi],dx
  40cffc:	or     edx,DWORD PTR [edx]
  40cffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfff:	out    dx,eax
  40d000:	outs   dx,DWORD PTR ds:[esi]
  40d001:	push   ss
  40d002:	fwait
  40d003:	scas   eax,DWORD PTR es:[edi]
  40d004:	inc    ebp
  40d005:	add    DWORD PTR es:[esi],eax
  40d008:	outs   dx,BYTE PTR ds:[esi]
  40d009:	lock in al,0x7f
  40d00c:	mov    dh,0x51
  40d00e:	stc    
  40d00f:	fidivr DWORD PTR [eax-0x2a]
  40d012:	dec    edi
  40d013:	pop    edi
  40d014:	sub    DWORD PTR [ebp+0x1139d345],eax
  40d01a:	aam    0xc0
  40d01c:	ror    DWORD PTR [ecx+eiz*4+0x47],1
  40d020:	stos   DWORD PTR es:[edi],eax
  40d021:	hlt    
  40d022:	jmp    0xf374407d
  40d027:	popa   
  40d028:	push   eax
  40d029:	add    esi,DWORD PTR [ebx]
  40d02b:	cmc    
  40d02c:	or     DWORD PTR [ecx+0x658f55e8],ebx
  40d032:	dec    ebx
  40d033:	jns    0x40d0a8
  40d035:	adc    bh,cl
  40d037:	and    edi,DWORD PTR [ecx]
  40d039:	xchg   edi,eax
  40d03a:	loopne 0x40d047
  40d03c:	sub    esi,eax
  40d03e:	out    dx,eax
  40d03f:	push   esi
  40d040:	or     eax,0xaa6059fc
  40d045:	push   ebp
  40d046:	mov    BYTE PTR [ebp-0x76],al
  40d049:	popf   
  40d04a:	add    al,0xe4
  40d04c:	jle    0x40d06b
  40d04e:	sub    bh,ah
  40d050:	cli    
  40d051:	and    edx,esp
  40d053:	into   
  40d054:	not    BYTE PTR [ecx]
  40d056:	mov    ebx,0x2df48aae
  40d05b:	dec    edi
  40d05c:	push   0xffffffe6
  40d05e:	sar    DWORD PTR [ecx-0x15],cl
  40d061:	call   0x661b09ff
  40d066:	xor    eax,0x51e99a01
  40d06b:	pop    ds
  40d06c:	dec    ebx
  40d06d:	popa   
  40d06e:	scas   al,BYTE PTR es:[edi]
  40d06f:	nop
  40d070:	ret    
  40d071:	test   BYTE PTR [eax-0x50b35a42],ch
  40d077:	mov    BYTE PTR [edi+edi*4-0x5d],dl
  40d07b:	ss and al,0xfd
  40d07e:	inc    ebx
  40d07f:	sbb    al,BYTE PTR [ecx]
  40d081:	xchg   esi,eax
  40d082:	out    0x9e,eax
  40d084:	pop    ebx
  40d085:	shl    DWORD PTR [edx],cl
  40d087:	sub    BYTE PTR [ecx-0xf],0x32
  40d08b:	js     0x40d044
  40d08d:	inc    ebp
  40d08e:	inc    ebx
  40d08f:	ficomp WORD PTR [ebp-0x44]
  40d092:	add    edx,DWORD PTR [edi]
  40d094:	ins    BYTE PTR es:[edi],dx
  40d095:	cmp    DWORD PTR gs:[esi+0x62af795c],edi
  40d09c:	sbb    esi,0xffffffc5
  40d09f:	xchg   edx,eax
  40d0a0:	data16 shl BYTE PTR [ecx+0x9],cl
  40d0a4:	leave  
  40d0a5:	pop    esp
  40d0a6:	jle    0x40d0ee
  40d0a8:	mov    eax,ds:0x3fd4a4b9
  40d0ad:	jmp    0x3891:0xd8b4fbbd
  40d0b4:	stc    
  40d0b5:	push   eax
  40d0b6:	fadd   st,st(0)
  40d0b8:	je     0x40d0de
  40d0ba:	sbb    al,0x3e
  40d0bc:	in     eax,0xed
  40d0be:	adc    BYTE PTR [ebp+0x41],dl
  40d0c1:	cmp    DWORD PTR [eax],esi
  40d0c3:	adc    al,BYTE PTR [esi]
  40d0c5:	sub    DWORD PTR [edi+0x310198a0],ebx
  40d0cb:	inc    edi
  40d0cc:	pop    eax
  40d0cd:	scas   al,BYTE PTR es:[edi]
  40d0ce:	daa    
  40d0cf:	in     eax,dx
  40d0d0:	jb     0x40d0b9
  40d0d2:	mov    ds:0x10640a,eax
  40d0d7:	or     al,0xe3
  40d0d9:	arpl   WORD PTR [esi-0x69],si
  40d0dc:	lahf   
  40d0dd:	jae    0x40d08b
  40d0df:	out    dx,eax
  40d0e0:	jno    0x40d0b4
  40d0e2:	adc    al,0x36
  40d0e4:	cmp    BYTE PTR [edx+0x6a],bh
  40d0e7:	dec    edx
  40d0e8:	lahf   
  40d0e9:	pop    ds
  40d0ea:	add    BYTE PTR [esi+0x1d],al
  40d0ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0ee:	rcl    BYTE PTR [ebx+0x31],1
  40d0f1:	loope  0x40d111
  40d0f3:	or     BYTE PTR [edi+ebx*8],dl
  40d0f6:	je     0x40d087
  40d0f8:	cmc    
  40d0f9:	iret   
  40d0fa:	mov    dl,0xf8
  40d0fc:	pop    ds
  40d0fd:	sti    
  40d0fe:	cs cdq 
  40d100:	mov    es,WORD PTR [ebx]
  40d102:	inc    DWORD PTR [esi]
  40d104:	push   edx
  40d105:	mov    dl,0xbb
  40d107:	sbb    BYTE PTR [edi],ah
  40d109:	or     al,0x52
  40d10b:	xchg   ebx,eax
  40d10c:	dec    eax
  40d10d:	ret    
  40d10e:	aas    
  40d10f:	aam    0x58
  40d111:	fdiv   QWORD PTR [ebp-0x1c]
  40d114:	stos   BYTE PTR es:[edi],al
  40d115:	push   edx
  40d116:	push   edi
  40d117:	add    esp,DWORD PTR [ecx+0x78fa2e58]
  40d11d:	leave  
  40d11e:	ficom  WORD PTR [ebx]
  40d120:	jecxz  0x40d159
  40d122:	cmp    ch,bl
  40d124:	iret   
  40d125:	cmc    
  40d126:	push   ss
  40d127:	ds scas al,BYTE PTR es:[edi]
  40d129:	rcl    DWORD PTR [edi],cl
  40d12b:	sub    eax,0xf4319614
  40d130:	push   eax
  40d131:	or     ebp,DWORD PTR [esi+0x7c5a4da]
  40d137:	jo     0x40d0cf
  40d139:	dec    edx
  40d13a:	jmp    0x40d118
  40d13c:	fucom  st(1)
  40d13e:	jns    0x40d13e
  40d140:	repz add esp,esp
  40d143:	mov    dl,0xb4
  40d145:	adc    BYTE PTR [eax],cl
  40d147:	aad    0xb
  40d149:	rol    BYTE PTR [ebx],0xc8
  40d14c:	xchg   esi,eax
  40d14e:	jecxz  0x40d14a
  40d150:	ficomp DWORD PTR [edi+0x30d53c6a]
  40d156:	and    BYTE PTR [ebp-0x51],bl
  40d159:	retf   0x732d
  40d15c:	in     eax,0xcf
  40d15e:	out    dx,eax
  40d15f:	sub    cl,BYTE PTR [ebx]
  40d161:	aam    0xe7
  40d163:	fadd   QWORD PTR [eax]
  40d165:	ret    0x5d6a
  40d168:	call   0xc997daa6
  40d16d:	(bad)  
  40d16f:	push   ebp
  40d170:	out    dx,al
  40d171:	popf   
  40d172:	xor    al,BYTE PTR [ebp+0x18]
  40d175:	arpl   WORD PTR [esi],dx
  40d177:	pop    ds
  40d178:	dec    ebp
  40d179:	mov    ebp,0x6e22069
  40d17e:	dec    ecx
  40d17f:	mov    WORD PTR [eax+0x76],gs
  40d182:	cdq    
  40d183:	and    BYTE PTR ds:[ecx],0x7
  40d187:	cmp    ah,BYTE PTR [ecx-0x40]
  40d18a:	push   cs
  40d18b:	xchg   ebp,eax
  40d18c:	pop    edi
  40d18d:	jo     0x40d1df
  40d18f:	jae    0x40d1b0
  40d191:	xchg   ecx,eax
  40d192:	(bad)  
  40d193:	xor    DWORD PTR [ebp-0x6257ae3f],esp
  40d199:	clc    
  40d19a:	sub    DWORD PTR [ecx],eax
  40d19c:	data16 scas al,BYTE PTR es:[edi]
  40d19e:	pop    es
  40d19f:	call   0xc35afd15
  40d1a4:	pop    es
  40d1a5:	xchg   ecx,eax
  40d1a6:	inc    ebx
  40d1a7:	push   es
  40d1a8:	addr16 push edi
  40d1aa:	outs   dx,BYTE PTR ds:[esi]
  40d1ab:	adc    ch,BYTE PTR ds:0x488260c0
  40d1b1:	jmp    0xdbfe:0x80f51970
  40d1b8:	arpl   si,di
  40d1ba:	jns    0x40d17e
  40d1bc:	scas   eax,DWORD PTR es:[edi]
  40d1bd:	iret   
  40d1be:	jmp    0x40d202
  40d1c0:	xchg   DWORD PTR [ebx*8+0x93b6cf7],edi
  40d1c7:	pop    es
  40d1c8:	xchg   edi,eax
  40d1c9:	push   ebp
  40d1ca:	add    DWORD PTR [edi+0x3f1eec17],eax
  40d1d0:	es js  0x40d1c6
  40d1d3:	test   eax,0x9b29f16b
  40d1d8:	lea    edi,[esp+ebx*2]
  40d1db:	mov    ds:0x8f4246f4,al
  40d1e0:	mov    esi,0xddad751
  40d1e5:	(bad)  
  40d1e6:	push   eax
  40d1e7:	clc    
  40d1e8:	out    dx,al
  40d1e9:	cmp    eax,0xa3e07ce8
  40d1ee:	out    dx,eax
  40d1ef:	jbe    0x40d1e6
  40d1f1:	arpl   cx,si
  40d1f3:	jmp    0x60bf8410
  40d1f8:	pop    es
  40d1f9:	out    0x5f,eax
  40d1fb:	push   ss
  40d1fc:	std    
  40d1fd:	std    
  40d1fe:	stos   DWORD PTR es:[edi],eax
  40d1ff:	je     0x40d1a5
  40d201:	fs push 0xffffffc5
  40d204:	or     esp,edi
  40d206:	sti    
  40d207:	mov    fs,WORD PTR [ebp-0x5d]
  40d20a:	and    edi,DWORD PTR [esp+ecx*4+0x38]
  40d20e:	bound  esp,QWORD PTR [edx-0x114eea93]
  40d214:	adc    al,0x34
  40d216:	push   ecx
  40d217:	and    edi,ecx
  40d219:	and    eax,0x45c4d6f2
  40d21e:	lds    edx,FWORD PTR [ecx-0x68]
  40d221:	imul   edi,ebp,0x63
  40d224:	cld    
  40d225:	adc    BYTE PTR [ebx+0x71],ch
  40d228:	mov    dl,0x46
  40d22a:	lea    ebp,[eax]
  40d22c:	test   eax,0xa9dc8e5b
  40d231:	dec    eax
  40d232:	fldenv [eax]
  40d234:	cdq    
  40d235:	or     dl,BYTE PTR [ecx]
  40d237:	aas    
  40d238:	stos   BYTE PTR es:[edi],al
  40d239:	lock pop esp
  40d23b:	sbb    BYTE PTR [ecx+0x51],dh
  40d23e:	or     ah,ah
  40d240:	stc    
  40d241:	fndisi(8087 only) 
  40d243:	dec    esi
  40d244:	test   dh,0x20
  40d247:	shl    DWORD PTR [bp-0x7c66],1
  40d24c:	push   esi
  40d24d:	inc    esi
  40d24e:	(bad)  
  40d24f:	or     dl,ch
  40d251:	inc    edx
  40d252:	into   
  40d253:	pop    eax
  40d254:	and    BYTE PTR [edi+ecx*2],cl
  40d257:	test   al,0x17
  40d259:	and    esp,0x9555882e
  40d25f:	repnz lods al,BYTE PTR ds:[esi]
  40d261:	das    
  40d262:	push   es
  40d263:	ficomp WORD PTR [edi-0x35e5a6d2]
  40d269:	mov    ebp,DWORD PTR [ebx]
  40d26b:	pop    edi
  40d26c:	out    dx,eax
  40d26d:	test   eax,eax
  40d26f:	xchg   edx,edx
  40d271:	inc    edi
  40d272:	loop   0x40d2b7
  40d274:	sbb    eax,0x80ccf886
  40d279:	out    dx,al
  40d27a:	rcr    DWORD PTR [eax],0x5c
  40d27d:	push   cs
  40d27e:	bound  esi,QWORD PTR [esi-0x4b06d1c4]
  40d284:	mov    DWORD PTR [esi],0x34ab4104
  40d28a:	test   al,0x33
  40d28c:	inc    ecx
  40d28d:	test   DWORD PTR [edi+0x1d],esi
  40d290:	into   
  40d291:	ins    BYTE PTR es:[edi],dx
  40d292:	pop    eax
  40d293:	addr16 mov bl,0x68
  40d296:	or     bh,BYTE PTR [esi-0x6b]
  40d299:	push   ecx
  40d29a:	push   cs
  40d29b:	aam    0x70
  40d29d:	loope  0x40d2fd
  40d29f:	jb     0x40d2e0
  40d2a1:	out    0x39,eax
  40d2a3:	or     BYTE PTR [ebx],bl
  40d2a5:	sub    eax,0x6ac848e7
  40d2aa:	das    
  40d2ab:	push   edi
  40d2ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ad:	cmp    BYTE PTR [esi-0x76204a65],ch
  40d2b3:	xchg   ebp,eax
  40d2b4:	xchg   esp,eax
  40d2b5:	fadd   QWORD PTR [eax-0x3f2dfd57]
  40d2bb:	in     eax,dx
  40d2bc:	out    0x53,al
  40d2be:	ror    ch,1
  40d2c0:	cmp    ebx,DWORD PTR [edx-0x47]
  40d2c3:	loop   0x40d2c2
  40d2c5:	in     eax,0x3b
  40d2c7:	add    DWORD PTR [eax+0x1],ebp
  40d2ca:	pop    ebx
  40d2cb:	pop    esi
  40d2cc:	cmp    ah,bl
  40d2ce:	pop    edx
  40d2cf:	mov    dl,0x83
  40d2d1:	ret    0x350c
  40d2d4:	pop    ds
  40d2d5:	and    al,0xd8
  40d2d7:	jmp    0xe245:0xe2bb0e3
  40d2de:	and    DWORD PTR [edx],ebx
  40d2e0:	scas   al,BYTE PTR es:[edi]
  40d2e1:	push   eax
  40d2e2:	mov    cl,0x3f
  40d2e4:	or     bl,BYTE PTR [ecx+0x3073706d]
  40d2ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2eb:	adc    eax,0x65b93f3a
  40d2f0:	jg     0x40d2cd
  40d2f2:	mov    dh,0xb0
  40d2f4:	sbb    DWORD PTR [ecx+0x78118954],eax
  40d2fa:	mov    edi,0x29c150f6
  40d2ff:	(bad)  
  40d300:	xor    ebp,esi
  40d302:	xchg   ebx,eax
  40d303:	imul   edx,DWORD PTR [edx],0x71
  40d306:	push   eax
  40d307:	sar    edi,0xa7
  40d30a:	out    dx,al
  40d30b:	and    al,0xda
  40d30d:	sbb    esi,DWORD PTR [ebx]
  40d30f:	loopne 0x40d2fd
  40d311:	jecxz  0x40d368
  40d313:	mov    cl,0xb6
  40d315:	icebp  
  40d316:	lea    edi,[ebp+0x5d946268]
  40d31c:	fcom   QWORD PTR [edx]
  40d31e:	jb     0x40d2de
  40d320:	cwde   
  40d321:	test   DWORD PTR [esp+ebp*8],ecx
  40d324:	ret    0xe8f9
  40d327:	xor    ebx,ecx
  40d329:	cmp    BYTE PTR [ebx-0x1406ec25],bl
  40d32f:	ins    BYTE PTR es:[edi],dx
  40d330:	in     eax,dx
  40d331:	jb     0x40d2d0
  40d333:	enter  0xba9c,0x16
  40d337:	hlt    
  40d338:	in     al,dx
  40d339:	sub    eax,0xb94200cd
  40d33e:	clc    
  40d33f:	mov    BYTE PTR [ecx-0x4dec0f46],ch
  40d345:	and    eax,0x4bfd2a76
  40d34a:	add    esi,DWORD PTR [ebx+0x486c2618]
  40d350:	push   cs
  40d351:	pop    esp
  40d352:	dec    ebp
  40d353:	mov    edi,0xb50ed4bc
  40d358:	jp     0x40d341
  40d35a:	jmp    0x9d2dc868
  40d35f:	lahf   
  40d360:	add    ch,ch
  40d362:	ret    
  40d363:	inc    esi
  40d364:	jecxz  0x40d3e3
  40d366:	jb     0x40d3b1
  40d368:	rcr    DWORD PTR [eax+0x7e],1
  40d36b:	rcl    dl,cl
  40d36d:	push   edx
  40d36e:	jg     0x40d2f2
  40d370:	mov    esp,0xcbf745e5
  40d375:	cmp    esi,DWORD PTR [esi+edx*1]
  40d378:	inc    edx
  40d379:	fwait
  40d37a:	mov    bh,bh
  40d37c:	cli    
  40d37d:	and    BYTE PTR [ebx+0x7337a6c2],ah
  40d383:	pop    ds
  40d384:	adc    eax,0xcf2d7b36
  40d389:	sti    
  40d38a:	xchg   ebx,eax
  40d38b:	xchg   DWORD PTR [edx],edi
  40d38d:	fist   WORD PTR [edx]
  40d38f:	pop    edx
  40d390:	fmul   DWORD PTR [ecx]
  40d392:	mov    ds:0xdc36a6c,eax
  40d397:	repnz or BYTE PTR ds:0x5d30e34d,dh
  40d39e:	ss sbb edx,eax
  40d3a1:	mov    ds:0x6cdaf4fd,eax
  40d3a6:	and    edi,eax
  40d3a8:	push   ss
  40d3a9:	pop    esp
  40d3aa:	xor    edx,DWORD PTR [edx+0x22]
  40d3ad:	jno    0x40d426
  40d3af:	test   DWORD PTR [ebp-0xee5d986],esi
  40d3b5:	stc    
  40d3b6:	loopne 0x40d345
  40d3b8:	popa   
  40d3b9:	jo     0x40d3e2
  40d3bb:	xor    BYTE PTR [edi+0x21],ah
  40d3be:	scas   eax,DWORD PTR es:[edi]
  40d3bf:	imul   esi,edi,0x73df48ad
  40d3c5:	adc    BYTE PTR [esi],dl
  40d3c7:	jmp    0x5e314482
  40d3cc:	inc    esp
  40d3cd:	jmp    0x40d418
  40d3cf:	hlt    
  40d3d0:	xchg   ecx,eax
  40d3d1:	add    eax,0x9e3e75ff
  40d3d6:	imul   ebx,DWORD PTR [ecx-0x5afff440],0x6c8b0ff3
  40d3e0:	aam    0xbe
  40d3e2:	xchg   edx,eax
  40d3e3:	xchg   ecx,eax
  40d3e4:	push   0x834a44a3
  40d3e9:	(bad)  
  40d3ea:	stos   DWORD PTR es:[edi],eax
  40d3eb:	fwait
  40d3ec:	push   cs
  40d3ed:	cmp    ecx,ebp
  40d3ef:	pop    edx
  40d3f0:	mov    fs,WORD PTR [ebp+eiz*4+0x3c68d2fe]
  40d3f7:	pop    ds
  40d3f8:	in     eax,dx
  40d3f9:	das    
  40d3fa:	hlt    
  40d3fb:	jmp    0x40d426
  40d3fd:	gs scas al,BYTE PTR es:[edi]
  40d3ff:	mov    eax,ds:0xa36c633b
  40d404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d405:	sub    eax,ebp
  40d407:	jbe    0x40d3ec
  40d409:	push   ebx
  40d40a:	adc    eax,0x1812629b
  40d40f:	sub    DWORD PTR [eax-0x2d909a12],edx
  40d415:	or     DWORD PTR [esi],0x6
  40d418:	mov    ebx,0x5072c2ca
  40d41d:	xchg   edx,eax
  40d41e:	inc    ebp
  40d41f:	popf   
  40d420:	in     al,0x46
  40d422:	inc    eax
  40d423:	jbe    0x40d3db
  40d425:	push   es
  40d426:	jo     0x40d42a
  40d428:	pop    ebx
  40d429:	fstp   QWORD PTR ds:0x1021e4c7
  40d42f:	mov    cl,0xb9
  40d431:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40d433:	mov    ebx,0x5b1ff046
  40d438:	adc    eax,esi
  40d43a:	aad    0xe8
  40d43c:	sbb    dh,cl
  40d43e:	and    eax,0x8f134808
  40d443:	pop    eax
  40d444:	clc    
  40d445:	and    al,0x58
  40d447:	push   0xffffffe7
  40d449:	jecxz  0x40d3e4
  40d44b:	imul   esp,DWORD PTR [edx+0x33],0x4d4dd2b
  40d452:	mov    eax,0xbc30ea92
  40d457:	pop    edi
  40d458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d459:	mov    cl,0x1d
  40d45b:	push   0x2c8bea33
  40d460:	into   
  40d461:	int3   
  40d462:	xor    al,0xf2
  40d464:	cwde   
  40d465:	dec    esp
  40d466:	retf   0x4a42
  40d469:	out    dx,eax
  40d46a:	and    al,0x34
  40d46c:	cwde   
  40d46d:	idiv   DWORD PTR [edx+0x36]
  40d470:	std    
  40d471:	xchg   esi,eax
  40d472:	add    DWORD PTR [esi-0x31e99209],ebp
  40d478:	inc    edi
  40d479:	sbb    al,0xa2
  40d47b:	iret   
  40d47c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d47d:	int    0x40
  40d47f:	xchg   edx,eax
  40d480:	das    
  40d481:	mov    BYTE PTR cs:[ecx],ah
  40d484:	jge    0x40d4bd
  40d486:	adc    ecx,DWORD PTR [ebx]
  40d488:	cmp    al,0x17
  40d48a:	imul   esi,DWORD PTR [ecx+0x277e4caf],0xfffffff5
  40d491:	out    0x52,eax
  40d493:	jp     0x40d509
  40d495:	fadd   st,st(5)
  40d497:	xchg   BYTE PTR [ebp+0x37ba2f36],bl
  40d49d:	loopne 0x40d45b
  40d49f:	icebp  
  40d4a0:	mov    bh,0x9b
  40d4a2:	mov    bh,0x9d
  40d4a4:	sbb    DWORD PTR [edi-0x3ce41338],ebp
  40d4aa:	and    BYTE PTR [edi+edi*8-0x5e109857],dh
  40d4b1:	lds    ebx,FWORD PTR [eax+eax*8-0x17]
  40d4b5:	stos   BYTE PTR es:[edi],al
  40d4b6:	imul   ch
  40d4b8:	xor    BYTE PTR [eax+0x3e],dh
  40d4bb:	ror    DWORD PTR [edi],1
  40d4bd:	nop
  40d4be:	imul   eax,DWORD PTR [ecx-0x38cfdfbf],0xffffffa7
  40d4c5:	xor    ecx,eax
  40d4c7:	sbb    DWORD PTR [edx-0x7904cb77],edi
  40d4cd:	push   ecx
  40d4ce:	cmp    DWORD PTR [eax],ebp
  40d4d0:	xlat   BYTE PTR ds:[ebx]
  40d4d1:	fild   DWORD PTR [si+0x1]
  40d4d5:	jmp    0x4e25:0x96c25aae
  40d4dc:	push   ecx
  40d4dd:	fcomp  QWORD PTR [edi]
  40d4df:	push   esp
  40d4e0:	shr    BYTE PTR [bp+si+0x2edc],cl
  40d4e5:	or     al,0x5
  40d4e7:	mov    al,ds:0x66716156
  40d4ec:	or     edx,esp
  40d4ee:	and    eax,0x891b999f
  40d4f3:	call   0x4d325866
  40d4f8:	nop
  40d4f9:	stos   BYTE PTR es:[edi],al
  40d4fa:	jecxz  0x40d4ee
  40d4fc:	sti    
  40d4fd:	xchg   edx,eax
  40d4fe:	sbb    ebp,esp
  40d500:	in     eax,dx
  40d501:	adc    edx,esi
  40d503:	xor    al,0x52
  40d505:	xchg   edx,eax
  40d506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d507:	int    0x34
  40d509:	push   cs
  40d50a:	nop
  40d50b:	add    cl,BYTE PTR [ebx]
  40d50d:	fdiv   st,st(0)
  40d50f:	outs   dx,BYTE PTR ds:[esi]
  40d510:	pop    ss
  40d511:	ins    DWORD PTR es:[edi],dx
  40d512:	cmp    ah,BYTE PTR [esi+0x47b2a319]
  40d518:	loop   0x40d56c
  40d51a:	(bad)  
  40d51b:	into   
  40d51c:	mov    ebp,0xabfdfc22
  40d521:	xchg   esp,eax
  40d522:	dec    edi
  40d523:	push   ds
  40d524:	call   0x5fc1:0xac973e69
  40d52b:	fisub  WORD PTR ds:0xe370d593
  40d531:	jne    0x40d5b0
  40d533:	into   
  40d534:	repnz popf 
  40d536:	push   cs
  40d537:	or     eax,0xf0b3f678
  40d53c:	je     0x40d5ad
  40d53e:	out    dx,al
  40d53f:	gs retf 0xea09
  40d543:	sahf   
  40d544:	xchg   ebx,eax
  40d545:	pop    ecx
  40d546:	es lock out 0x49,eax
  40d54a:	std    
  40d54b:	jo     0x40d593
  40d54d:	xlat   BYTE PTR ds:[ebx]
  40d54e:	push   0x86d4475a
  40d553:	adc    al,bl
  40d555:	push   eax
  40d556:	xchg   ecx,eax
  40d557:	sub    eax,0x7548cc7a
  40d55c:	or     BYTE PTR [edi],cl
  40d55e:	loope  0x40d52c
  40d560:	pushf  
  40d561:	or     dh,bl
  40d563:	mov    al,0x8d
  40d565:	cmp    esi,edx
  40d567:	mov    edx,0xe329b189
  40d56c:	xchg   edx,eax
  40d56d:	fdivr  DWORD PTR [edx-0x21]
  40d570:	je     0x40d50f
  40d572:	loope  0x40d531
  40d574:	aam    0xc9
  40d576:	inc    ebx
  40d577:	dec    esp
  40d578:	inc    esp
  40d579:	js     0x40d54b
  40d57b:	cld    
  40d57c:	jne    0x40d506
  40d57e:	aaa    
  40d57f:	cdq    
  40d580:	pop    ecx
  40d581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d582:	push   0xa546dbde
  40d587:	jnp    0x40d598
  40d589:	cmp    BYTE PTR [ebp-0xc],cl
  40d58c:	es test dh,0xa8
  40d590:	aaa    
  40d591:	sbb    DWORD PTR [ecx-0x22b43a47],esi
  40d597:	daa    
  40d598:	iret   
  40d599:	sbb    al,0x19
  40d59b:	push   0x3ff14ffd
  40d5a0:	rol    ecx,0x6d
  40d5a3:	dec    edi
  40d5a4:	sahf   
  40d5a5:	sbb    DWORD PTR [ebx+0x7f],ecx
  40d5a8:	cmp    DWORD PTR [esi-0x80],edx
  40d5ab:	sbb    BYTE PTR [ebx],ah
  40d5ad:	int    0x5a
  40d5af:	mov    bh,0xe9
  40d5b1:	xchg   BYTE PTR [edi],bl
  40d5b3:	add    DWORD PTR [ecx+0x1ce1f419],0x6c
  40d5ba:	or     al,0x13
  40d5bc:	xor    dh,cl
  40d5be:	outs   dx,BYTE PTR ds:[esi]
  40d5bf:	out    0x61,al
  40d5c1:	mov    bl,0x16
  40d5c3:	mov    BYTE PTR [esi],ah
  40d5c5:	push   edx
  40d5c6:	in     eax,0xf0
  40d5c8:	or     ebx,DWORD PTR [ebx-0xd2d86eb]
  40d5ce:	xchg   esi,eax
  40d5cf:	pop    ebx
  40d5d0:	cmp    dh,al
  40d5d2:	ficom  WORD PTR [ebp-0xc]
  40d5d5:	shl    BYTE PTR [ebp-0x6b6643c2],0x57
  40d5dc:	ds jae 0x40d63f
  40d5df:	outs   dx,BYTE PTR ds:[esi]
  40d5e0:	or     DWORD PTR [eax],ebx
  40d5e2:	mov    edx,edi
  40d5e4:	test   DWORD PTR [ebx+edi*4-0x2d0de48d],edi
  40d5eb:	in     al,0xe
  40d5ed:	loop   0x40d581
  40d5ef:	dec    ecx
  40d5f0:	jo     0x40d57f
  40d5f2:	mov    ebp,0x37591cff
  40d5f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5f8:	adc    BYTE PTR [ebp+0x16],bl
  40d5fb:	xchg   edi,eax
  40d5fc:	or     eax,0xac36ab88
  40d601:	add    esi,DWORD PTR [ebx+0x7e952c4d]
  40d607:	ins    DWORD PTR es:[edi],dx
  40d608:	loope  0x40d67f
  40d60a:	and    DWORD PTR [edx-0x34260690],0xfffffff8
  40d611:	pusha  
  40d612:	mov    cl,0x63
  40d614:	cmp    ah,BYTE PTR [edx-0x55]
  40d617:	mov    eax,0x9615ebfd
  40d61c:	shr    ecx,cl
  40d61e:	mov    dh,0xae
  40d620:	jmp    0x40d632
  40d622:	icebp  
  40d623:	jge    0x40d5f5
  40d625:	xor    DWORD PTR [esi],0xf67a1f5b
  40d62b:	adc    eax,0x1c395af9
  40d630:	out    0x4,al
  40d632:	(bad)  [ebx+ebp*1-0x36a021a0]
  40d639:	sub    eax,0x31bd4a21
  40d63e:	test   BYTE PTR [ecx-0x2],bl
  40d641:	xor    bl,bh
  40d643:	ja     0x40d6a9
  40d645:	mov    ebx,0x6a32d7fd
  40d64a:	or     ah,al
  40d64c:	pushf  
  40d64d:	test   DWORD PTR [esi+0xcdddbe6],ebp
  40d653:	bswap  eax
  40d655:	in     al,dx
  40d656:	jo     0x40d6a6
  40d658:	(bad)  
  40d659:	jmp    0xc45a3d83
  40d65e:	jne    0x40d6b6
  40d660:	jns    0x40d60c
  40d662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d663:	add    eax,0x80171aa7
  40d668:	or     edx,DWORD PTR [eax+0x33]
  40d66b:	inc    ebp
  40d66c:	pop    esp
  40d66d:	outs   dx,BYTE PTR ds:[esi]
  40d66e:	mov    ?,WORD PTR [ebp+eiz*4-0x542642b4]
  40d675:	stos   BYTE PTR es:[edi],al
  40d676:	ror    DWORD PTR [ecx-0x7185cf96],0xe8
  40d67d:	in     eax,0x1f
  40d67f:	popa   
  40d680:	adc    al,0xd8
  40d682:	sti    
  40d683:	adc    esp,DWORD PTR [ecx-0x6acbc902]
  40d689:	test   cl,dl
  40d68b:	mov    al,ds:0x2baadf40
  40d690:	and    eax,0x5b3dd6f8
  40d695:	lock test DWORD PTR [edx+0x5c],ebx
  40d699:	bound  esp,QWORD PTR [esp+ebp*1]
  40d69c:	adc    BYTE PTR [eax],al
  40d69e:	and    eax,0xcceee798
  40d6a3:	imul   ecx,DWORD PTR [ebx],0x2cc2257e
  40d6a9:	or     dl,ch
  40d6ab:	mov    DWORD PTR [edx-0x27],esi
  40d6ae:	cmp    eax,0x276bb0fd
  40d6b3:	jae    0x40d678
  40d6b5:	jbe    0x40d6fc
  40d6b7:	pop    ss
  40d6b8:	and    al,0x2
  40d6ba:	test   DWORD PTR [ebp+0x9206012],eax
  40d6c0:	xor    al,0xfb
  40d6c2:	ds xchg edx,eax
  40d6c4:	dec    edx
  40d6c5:	out    0x52,eax
  40d6c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6c8:	add    edi,esi
  40d6ca:	mov    dl,0x9e
  40d6cc:	adc    al,0x51
  40d6ce:	aaa    
  40d6cf:	mov    fs,WORD PTR [eax+0x23]
  40d6d2:	mov    dl,0xa4
  40d6d4:	inc    eax
  40d6d5:	cdq    
  40d6d6:	stos   BYTE PTR es:[edi],al
  40d6d7:	xchg   ebp,eax
  40d6d8:	xchg   DWORD PTR [ebx],eax
  40d6da:	mov    ah,0xfb
  40d6dc:	xchg   ecx,eax
  40d6dd:	jg     0x40d72c
  40d6df:	cld    
  40d6e0:	mov    eax,ds:0x35d3d769
  40d6e5:	les    ecx,FWORD PTR [eax]
  40d6e7:	or     al,0x8
  40d6e9:	sbb    al,dh
  40d6eb:	sar    DWORD PTR [ecx-0x930070b],cl
  40d6f1:	lds    esi,FWORD PTR [ecx]
  40d6f3:	jb     0x40d6d6
  40d6f5:	fisttp QWORD PTR [edx-0x4624ee3d]
  40d6fb:	jmp    0xf62c9901
  40d700:	out    0x1d,eax
  40d702:	cmp    ch,BYTE PTR [ebp+esi*8+0xd5a0478]
  40d709:	(bad)  es:[ebx+0x177d4bfc]
  40d710:	xor    BYTE PTR [ebp+0x540a24f3],0x73
  40d717:	fisttp QWORD PTR [ecx-0x98b5ebc]
  40d71d:	add    ebx,esi
  40d71f:	inc    edx
  40d720:	pop    eax
  40d721:	mov    DWORD PTR [eax+0x205df706],ebx
  40d727:	inc    edi
  40d728:	xor    BYTE PTR [edi],al
  40d72a:	nop
  40d72b:	or     ebp,DWORD PTR [edx]
  40d72d:	cwde   
  40d72e:	and    eax,0x1cac0758
  40d733:	out    dx,al
  40d734:	or     eax,0x7646fdbe
  40d739:	cmp    DWORD PTR cs:[ecx],eax
  40d73c:	xchg   BYTE PTR [ebp+0x24c0d315],ah
  40d742:	mov    ebp,0x930510fc
  40d747:	push   edx
  40d748:	mov    al,ds:0xda9a3fb3
  40d74d:	bound  eax,QWORD PTR [ebp-0x3622c5e2]
  40d753:	push   ds
  40d754:	mov    ebx,0xe935127d
  40d75a:	in     al,dx
  40d75b:	cmp    edx,eax
  40d75d:	dec    ebp
  40d75e:	lds    edx,FWORD PTR [edx]
  40d760:	nop
  40d761:	in     al,dx
  40d762:	mov    edx,0x7a0fb9c2
  40d767:	addr16 pop ss
  40d769:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40d76b:	sbb    al,0x1b
  40d76d:	sub    DWORD PTR [ebx],0x3d1a531
  40d773:	jae    0x40d7a7
  40d775:	fcomi  st,st(1)
  40d777:	xchg   esi,eax
  40d778:	iret   
  40d779:	mov    edx,0xf190242
  40d77e:	add    al,BYTE PTR [esi-0x2a]
  40d781:	fsubr  QWORD PTR [edx+0x2f]
  40d784:	retf   0x5d7
  40d787:	(bad)  
  40d788:	xchg   edi,eax
  40d789:	repz loop 0x40d7f3
  40d78c:	sub    BYTE PTR [ecx*2-0xc61859f],bl
  40d793:	push   es
  40d794:	jbe    0x40d7e3
  40d796:	shr    BYTE PTR [ecx],1
  40d798:	arpl   WORD PTR [ebp+0x16],cx
  40d79b:	stos   DWORD PTR es:[edi],eax
  40d79c:	jp     0x40d75b
  40d79e:	mov    dl,0x1b
  40d7a0:	ror    BYTE PTR [esp+ecx*8],0xd0
  40d7a4:	imul   eax
  40d7a6:	fld    QWORD PTR [ebp+0x3cadcef9]
  40d7ac:	xlat   BYTE PTR ds:[ebx]
  40d7ad:	or     dl,BYTE PTR [eax]
  40d7af:	push   es
  40d7b0:	jmp    FWORD PTR [eax-0x6f73cca9]
  40d7b6:	div    BYTE PTR [ebx-0x20a97b03]
  40d7bc:	pop    ss
  40d7bd:	sbb    ecx,edx
  40d7bf:	mov    ecx,0x73cceebc
  40d7c4:	and    ch,BYTE PTR [edi+0x67b08606]
  40d7ca:	out    dx,eax
  40d7cb:	std    
  40d7cc:	dec    ebp
  40d7cd:	shl    DWORD PTR [edx+0x4c2fccc1],0xfd
  40d7d4:	rcl    BYTE PTR [edi+0x180aa525],cl
  40d7da:	daa    
  40d7db:	inc    edx
  40d7dc:	mov    cl,0xe0
  40d7de:	sbb    eax,0x374624ed
  40d7e3:	jnp    0x40d863
  40d7e5:	rcr    BYTE PTR [edx+0x7ee9af],1
  40d7eb:	adc    al,0xae
  40d7ed:	pusha  
  40d7ee:	adc    eax,ebx
  40d7f0:	add    al,bl
  40d7f2:	inc    ebp
  40d7f3:	fistp  DWORD PTR [eax+esi*8+0x68]
  40d7f7:	lahf   
  40d7f8:	popa   
  40d7f9:	int3   
  40d7fa:	add    DWORD PTR [ebx+ebx*2],0x3
  40d7fe:	cmp    BYTE PTR [ebx-0x4],ah
  40d801:	mov    fs,WORD PTR [ebx+0x3700f2e3]
  40d807:	(bad)  
  40d808:	mov    edx,0x5fb600a7
  40d80d:	xor    ch,0xb4
  40d810:	jge    0x40d879
  40d812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d813:	push   esp
  40d814:	outs   dx,DWORD PTR ds:[esi]
  40d815:	mov    dh,0x21
  40d817:	jmp    DWORD PTR [ecx-0x42fb3d03]
  40d81d:	sub    eax,0xaf11e682
  40d822:	stc    
  40d823:	fdiv   DWORD PTR [edi]
  40d825:	sbb    DWORD PTR [ebx],0x4160775
  40d82b:	inc    ebx
  40d82c:	nop
  40d82d:	int3   
  40d82e:	(bad)  [ecx-0x2c07c098]
  40d835:	pop    ss
  40d836:	pop    esi
  40d837:	nop
  40d838:	push   ecx
  40d839:	(bad)  
  40d83a:	call   0xc2c:0x8070e175
  40d841:	retf   0x5cee
  40d844:	popa   
  40d845:	test   DWORD PTR [esi+eiz*2],0x4fb5ccd2
  40d84c:	mov    esp,0x9fbaefcf
  40d851:	in     eax,0x72
  40d853:	cmp    eax,0x46c228d9
  40d858:	fldcw  WORD PTR [ebx-0x3fc66e7f]
  40d85e:	retf   
  40d85f:	ror    DWORD PTR [esi-0x70],cl
  40d862:	xor    bh,BYTE PTR [ecx+ebx*1]
  40d865:	lahf   
  40d866:	pop    ds
  40d867:	and    eax,0x606f951
  40d86c:	arpl   WORD PTR [ebp+ebx*2-0x25071a62],si
  40d873:	inc    ebp
  40d874:	aaa    
  40d875:	inc    ecx
  40d876:	push   0x4b2efc6d
  40d87b:	inc    esi
  40d87c:	stos   BYTE PTR es:[edi],al
  40d87d:	or     bl,0xf1
  40d880:	sub    al,ah
  40d882:	mov    ah,0xc7
  40d884:	cwde   
  40d885:	aas    
  40d886:	adc    esi,DWORD PTR [ecx+0x2a]
  40d889:	pop    esi
  40d88a:	loop   0x40d8ac
  40d88c:	adc    eax,DWORD PTR [ecx+eax*1-0x2b]
  40d890:	loope  0x40d886
  40d892:	add    BYTE PTR [ebp-0x77976a94],dl
  40d898:	dec    BYTE PTR [esi]
  40d89a:	popa   
  40d89b:	lds    ecx,FWORD PTR [edi]
  40d89d:	shl    BYTE PTR [edi+0x5d72f8ed],cl
  40d8a3:	int3   
  40d8a4:	inc    edx
  40d8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8a6:	lds    eax,FWORD PTR [edi-0x1de546dd]
  40d8ac:	fs scas eax,DWORD PTR es:[edi]
  40d8ae:	mov    cl,0x8a
  40d8b0:	fs pop ebx
  40d8b2:	jle    0x40d88f
  40d8b4:	sbb    al,0x33
  40d8b6:	inc    edx
  40d8b7:	lods   eax,DWORD PTR ds:[esi]
  40d8b8:	mov    al,ds:0x2f56b839
  40d8bd:	dec    edi
  40d8be:	inc    esp
  40d8bf:	adc    al,0xff
  40d8c1:	xchg   esp,eax
  40d8c2:	mov    al,ds:0xd6591e72
  40d8c7:	call   0xe02178ec
  40d8cc:	mov    eax,0xbac02931
  40d8d1:	sbb    eax,0xd361d057
  40d8d6:	iret   
  40d8d7:	jmp    0x50c217ed
  40d8dc:	and    ah,dl
  40d8de:	shl    DWORD PTR [ebp-0x79],cl
  40d8e1:	adc    DWORD PTR [edx],ebx
  40d8e3:	pop    ecx
  40d8e4:	jb     0x40d8e8
  40d8e6:	mov    ch,0x47
  40d8e8:	rcl    BYTE PTR gs:[ecx+eax*1-0x7dc31810],0xe
  40d8f1:	pop    esi
  40d8f2:	loop   0x40d8b1
  40d8f4:	xchg   edi,eax
  40d8f5:	pusha  
  40d8f6:	pop    es
  40d8f7:	addr16 aaa 
  40d8f9:	cmp    eax,0x4ddb90fe
  40d8fe:	adc    al,0x49
  40d900:	pop    ebx
  40d901:	data16 (bad) 
  40d903:	and    BYTE PTR [ebx+ebx*2-0x53],bl
  40d907:	aas    
  40d908:	push   ss
  40d909:	adc    bl,dh
  40d90b:	repz loop 0x40d967
  40d90e:	xchg   esi,eax
  40d90f:	hlt    
  40d910:	fnstenv [ecx]
  40d912:	mov    ch,0xb3
  40d914:	dec    esi
  40d915:	and    BYTE PTR [ecx+0x42],dl
  40d918:	(bad)  
  40d919:	adc    eax,0x9fb2bf2b
  40d91e:	ret    
  40d91f:	outs   dx,BYTE PTR ds:[esi]
  40d920:	cmp    eax,0x855fadeb
  40d925:	call   0x699e:0x4157c9ca
  40d92c:	mov    eax,DWORD PTR [ebp-0x5a]
  40d92f:	cmp    ebp,esi
  40d931:	push   ebx
  40d932:	out    0xac,al
  40d934:	out    0x54,al
  40d936:	pop    ds
  40d937:	scas   eax,DWORD PTR es:[edi]
  40d938:	test   eax,0x2d00a018
  40d93d:	inc    ebp
  40d93e:	cmp    al,0x9
  40d940:	push   0x33b77638
  40d945:	cmc    
  40d946:	adc    eax,0xb53dcff0
  40d94b:	(bad)  
  40d94c:	mov    ebp,0x5571eb00
  40d951:	test   BYTE PTR [edi+0x4b],ch
  40d954:	mov    esp,0xeebf5160
  40d959:	not    edi
  40d95b:	add    dh,BYTE PTR [edx+0x723dd96b]
  40d961:	push   ebx
  40d962:	and    bh,BYTE PTR [edi]
  40d964:	retf   
  40d965:	sahf   
  40d966:	or     eax,0xa01c0a40
  40d96b:	sub    esp,DWORD PTR [ecx-0x4dec894b]
  40d971:	xor    eax,DWORD PTR [edx+0x646f2cc5]
  40d977:	mov    al,ds:0x90038535
  40d97c:	out    dx,eax
  40d97d:	cwde   
  40d97e:	lods   al,BYTE PTR ds:[esi]
  40d97f:	cli    
  40d980:	mov    ecx,0x820d1452
  40d985:	repnz sbb al,0x32
  40d988:	daa    
  40d989:	mov    eax,ds:0x42decdc7
  40d98e:	stc    
  40d98f:	sub    eax,0x1d980713
  40d994:	xlat   BYTE PTR ds:[ebx]
  40d995:	dec    edx
  40d996:	scas   al,BYTE PTR es:[edi]
  40d997:	ins    BYTE PTR es:[edi],dx
  40d998:	lea    ebx,[ecx]
  40d99a:	test   eax,0x34813131
  40d99f:	lods   eax,DWORD PTR ds:[esi]
  40d9a0:	and    ecx,DWORD PTR [ebx]
  40d9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9a3:	xchg   ebx,eax
  40d9a4:	popa   
  40d9a5:	mov    edx,0xff11ca8e
  40d9aa:	push   esi
  40d9ab:	int3   
  40d9ac:	mov    esi,0x731c885f
  40d9b1:	shr    BYTE PTR [eax+0x28bf245d],0x36
  40d9b8:	dec    esp
  40d9b9:	and    BYTE PTR [eax-0x54],bl
  40d9bc:	fsubr  QWORD PTR [ebx]
  40d9be:	sti    
  40d9bf:	mov    dl,bh
  40d9c1:	rcl    ebp,0x97
  40d9c4:	fs pop ds
  40d9c6:	xor    BYTE PTR [ebp+ebp*1+0x34],ch
  40d9ca:	loope  0x40d9c2
  40d9cc:	out    dx,eax
  40d9cd:	inc    ebx
  40d9ce:	scas   al,BYTE PTR es:[edi]
  40d9cf:	es cmc 
  40d9d1:	mov    edx,0xf1ca1eb8
  40d9d6:	loopne 0x40da0a
  40d9d8:	pop    ebx
  40d9d9:	shl    esi,cl
  40d9db:	sub    esi,DWORD PTR [edx-0xa]
  40d9de:	sbb    dl,bh
  40d9e0:	sub    eax,0xb1e1335
  40d9e5:	pushf  
  40d9e6:	jnp    0x40da15
  40d9e8:	aas    
  40d9e9:	inc    esi
  40d9ea:	add    al,0x6d
  40d9ec:	out    0x6c,eax
  40d9ee:	jmp    0x2dcbacc3
  40d9f3:	in     eax,dx
  40d9f4:	or     ah,al
  40d9f6:	inc    eax
  40d9f7:	loop   0x40d98f
  40d9f9:	test   DWORD PTR [eax+0x4cfb8c25],edx
  40d9ff:	inc    edi
  40da00:	idiv   BYTE PTR [esi+esi*8+0x2f935769]
  40da07:	mov    ecx,0xdc4358ed
  40da0c:	sbb    edx,esp
  40da0e:	jno    0x40da71
  40da10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da11:	inc    esi
  40da12:	push   es
  40da13:	push   ds
  40da14:	gs jnp 0x40da30
  40da17:	xor    bl,BYTE PTR [edx+0x3d]
  40da1a:	fdivr  DWORD PTR [ecx+0x3a05d888]
  40da20:	inc    DWORD PTR [edx]
  40da22:	iret   
  40da23:	or     BYTE PTR [esi+0x5c9e9ec2],al
  40da29:	mov    dl,bh
  40da2b:	dec    esp
  40da2c:	(bad)  [ebx]
  40da2e:	xchg   esp,eax
  40da2f:	push   0x55
  40da31:	xor    al,0xf9
  40da33:	mov    DWORD PTR [edi+ecx*4-0x5ad68f0b],eax
  40da3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da3b:	cs int 0xa1
  40da3e:	aam    0x5f
  40da40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da41:	aaa    
  40da42:	push   cs
  40da43:	arpl   dx,dx
  40da45:	mov    ebx,0x8cf09f8e
  40da4a:	popf   
  40da4b:	and    al,0x39
  40da4d:	nop
  40da4e:	adc    ecx,ebx
  40da50:	jmp    0x475b:0x2c94952a
  40da57:	and    esp,DWORD PTR [ecx+0x1ea5bf77]
  40da5d:	push   0xcc60b864
  40da62:	mov    ch,0x14
  40da64:	xor    DWORD PTR [ecx+0x4bf5052f],eax
  40da6a:	xchg   edi,eax
  40da6b:	sbb    al,0x97
  40da6d:	data16 xor cl,BYTE PTR [esi-0x2b]
  40da71:	ret    0x5cf0
  40da74:	xchg   ecx,edi
  40da76:	add    DWORD PTR [eax],edx
  40da78:	dec    edi
  40da79:	cdq    
  40da7a:	add    BYTE PTR [eax+0x58636c99],bh
  40da80:	out    0x2d,eax
  40da82:	sub    ebp,DWORD PTR [eax-0x50]
  40da85:	sahf   
  40da86:	stos   DWORD PTR es:[edi],eax
  40da87:	sbb    eax,0x5280828a
  40da8c:	jnp    0x40da7c
  40da8e:	test   eax,0xea4826cb
  40da93:	movmskps edi,xmm4
  40da96:	jecxz  0x40da26
  40da98:	fwait
  40da99:	inc    esi
  40da9a:	out    dx,eax
  40da9b:	jae    0x40dad1
  40da9d:	cwde   
  40da9e:	mov    al,ds:0x64b20edb
  40daa3:	test   al,ah
  40daa5:	sahf   
  40daa6:	xchg   ebp,eax
  40daa7:	push   ebx
  40daa8:	mov    dh,0xca
  40daaa:	iret   
  40daab:	push   edi
  40daac:	xchg   edi,eax
  40daad:	mov    edi,0x1a1db8f2
  40dab2:	(bad)  
  40dab3:	sti    
  40dab4:	mov    esi,0x950592a5
  40dab9:	adc    DWORD PTR [ebx],0xdd1e8ec4
  40dabf:	lock push ebp
  40dac1:	cmp    eax,0x8ae16325
  40dac6:	sbb    al,0xf8
  40dac8:	punpcklbw mm5,mm3
  40dacb:	iret   
  40dacc:	jp     0x40dade
  40dace:	mov    eax,0xc386dbd6
  40dad3:	mov    ebx,0x60d2b0bd
  40dad8:	cmp    BYTE PTR [edi-0x72],dl
  40dadb:	aad    0x87
  40dadd:	dec    dl
  40dadf:	add    ch,BYTE PTR [edx+0x8]
  40dae2:	cdq    
  40dae3:	add    eax,0x5e1f5653
  40dae8:	stc    
  40dae9:	or     DWORD PTR [ebx],eax
  40daeb:	int3   
  40daec:	mov    eax,0xc83d6794
  40daf1:	or     BYTE PTR [ecx],0xe5
  40daf4:	aaa    
  40daf5:	in     al,0xcf
  40daf7:	jmp    0x40dac0
  40daf9:	push   edx
  40dafa:	loopne 0x40db37
  40dafc:	inc    esi
  40dafd:	add    eax,0x1fe9f780
  40db02:	fsub   DWORD PTR [edi]
  40db04:	aam    0xbd
  40db06:	repnz mov ah,0x19
  40db09:	pop    eax
  40db0a:	xchg   BYTE PTR [edx-0x71512364],ah
  40db10:	retf   0x2771
  40db13:	and    ah,BYTE PTR [ebx]
  40db15:	inc    ecx
  40db16:	mov    edi,0x62090547
  40db1b:	lods   al,BYTE PTR ds:[esi]
  40db1c:	cmp    esp,eax
  40db1e:	data16 aad 0xdf
  40db21:	add    bh,BYTE PTR [edx]
  40db23:	cmp    al,0xb1
  40db25:	addr16 loope 0x40dae1
  40db28:	xor    al,BYTE PTR [edi]
  40db2a:	sbb    BYTE PTR [edx-0x8],bh
  40db2d:	xchg   BYTE PTR [ebx],bh
  40db2f:	outs   dx,DWORD PTR ds:[esi]
  40db30:	(bad)  
  40db31:	jmp    0x40dadc
  40db33:	xchg   ebx,eax
  40db34:	xchg   ecx,eax
  40db35:	mov    ds:0x2124ae9d,eax
  40db3a:	es xchg ebp,eax
  40db3c:	idiv   DWORD PTR [edi+ecx*4+0x2a]
  40db40:	adc    al,0x8d
  40db42:	adc    al,0xef
  40db44:	mov    al,0xf
  40db46:	jmp    0xc482:0x39136774
  40db4d:	jmp    0x50018a63
  40db52:	or     eax,ecx
  40db54:	cmc    
  40db55:	call   0x4ac44c04
  40db5a:	push   ecx
  40db5b:	(bad)  
  40db5c:	cwde   
  40db5d:	stos   DWORD PTR es:[edi],eax
  40db5e:	adc    ecx,ecx
  40db60:	fisubr DWORD PTR [edi-0x63]
  40db63:	loop   0x40db7e
  40db65:	mov    esi,0xf2555c25
  40db6a:	idiv   ebp
  40db6c:	xor    al,0xbd
  40db6e:	lods   al,BYTE PTR ds:[esi]
  40db6f:	int3   
  40db70:	inc    edi
  40db71:	push   esi
  40db73:	loope  0x40db66
  40db75:	or     DWORD PTR [edx-0x414a5e1],esi
  40db7b:	sbb    ah,BYTE PTR [ecx+ebp*8-0x55]
  40db7f:	(bad)  
  40db80:	jmp    DWORD PTR [edi+0x41]
  40db83:	mov    al,ds:0xbe61d54c
  40db88:	lods   eax,DWORD PTR ds:[esi]
  40db89:	lea    edx,[ecx]
  40db8b:	pop    ebp
  40db8c:	mov    dl,0xf
  40db8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db8f:	out    dx,al
  40db90:	push   ebx
  40db91:	mov    ah,0x24
  40db93:	xchg   esp,eax
  40db94:	or     al,0xd4
  40db96:	pop    ss
  40db97:	mov    bh,0x2a
  40db99:	pop    eax
  40db9a:	retf   
  40db9b:	loopne 0x40dbfe
  40db9d:	stos   DWORD PTR es:[edi],eax
  40db9e:	pop    ss
  40db9f:	mov    esi,0x203d57cc
  40dba4:	dec    edx
  40dba5:	test   eax,0xf62ff0da
  40dbaa:	mov    ?,WORD PTR [ecx]
  40dbac:	mov    esp,0xb9a7cc86
  40dbb1:	push   0xcfe893f4
  40dbb6:	pop    edi
  40dbb7:	or     ebx,DWORD PTR [ecx+0x76]
  40dbba:	out    dx,al
  40dbbb:	xchg   edx,eax
  40dbbc:	call   0xc55f3cc7
  40dbc1:	dec    ebx
  40dbc2:	push   cs
  40dbc3:	(bad)  
  40dbc4:	and    esi,DWORD PTR [edx+edx*1+0x27]
  40dbc8:	jmp    edx
  40dbca:	cmp    al,0x8a
  40dbcc:	sub    al,0xfa
  40dbce:	adc    al,0xe4
  40dbd0:	sub    ebx,DWORD PTR [esi]
  40dbd2:	adc    DWORD PTR [esi-0x3efd19c8],ebx
  40dbd8:	arpl   WORD PTR [edx-0x12],bx
  40dbdb:	mov    ebx,0x1b48ae85
  40dbe0:	outs   dx,DWORD PTR ds:[esi]
  40dbe1:	push   0x8c5111e1
  40dbe6:	or     al,0x75
  40dbe8:	or     esi,ecx
  40dbea:	inc    esi
  40dbeb:	or     dh,BYTE PTR [edx-0x4d]
  40dbee:	add    eax,0x5d126018
  40dbf3:	inc    ebx
  40dbf4:	push   0xffffffd2
  40dbf6:	repz xor BYTE PTR [edi-0x27cdc48b],dh
  40dbfd:	xchg   ebp,eax
  40dbfe:	xor    eax,0xc4b9d461
  40dc03:	dec    ebx
  40dc04:	dec    edx
  40dc05:	ret    
  40dc06:	pop    ss
  40dc07:	ds test al,0xf
  40dc0a:	push   esp
  40dc0b:	or     BYTE PTR [ecx+0x2b657471],ah
  40dc11:	push   ss
  40dc12:	pop    ebp
  40dc13:	inc    ecx
  40dc14:	(bad)  
  40dc15:	push   ecx
  40dc16:	stos   BYTE PTR es:[edi],al
  40dc17:	(bad)  
  40dc18:	hlt    
  40dc19:	outs   dx,BYTE PTR ds:[esi]
  40dc1a:	shr    DWORD PTR [edi],1
  40dc1c:	shr    DWORD PTR [ecx-0x5cd22f7],0x6c
  40dc23:	jp     0x40dbcb
  40dc25:	(bad)  
  40dc26:	call   0x6bf4233e
  40dc2b:	sub    al,BYTE PTR [ecx+0x15]
  40dc2e:	pop    eax
  40dc2f:	stos   DWORD PTR es:[edi],eax
  40dc30:	jg     0x40dc3f
  40dc32:	inc    BYTE PTR [eax]
  40dc34:	out    0xd4,al
  40dc36:	push   0x77
  40dc38:	mov    al,0xfa
  40dc3a:	adc    bh,BYTE PTR [esi-0x3a37971f]
  40dc40:	mov    edx,0xb08b48d9
  40dc45:	add    ah,BYTE PTR [ebp+eiz*8+0x4e]
  40dc49:	clc    
  40dc4a:	jp     0x40dc07
  40dc4c:	xchg   ebp,eax
  40dc4d:	mov    ds:0x63d077b3,eax
  40dc52:	in     al,dx
  40dc53:	xchg   esi,eax
  40dc54:	test   eax,0x407d6857
  40dc59:	cmc    
  40dc5a:	enter  0x1b70,0x2c
  40dc5e:	jb     0x40dcc3
  40dc60:	jp     0x40dcd1
  40dc62:	jl     0x40dc3b
  40dc64:	jge    0x40dc39
  40dc66:	xchg   edi,eax
  40dc67:	ins    BYTE PTR es:[edi],dx
  40dc68:	and    BYTE PTR [esi-0x1afe0490],0xcb
  40dc6f:	aaa    
  40dc70:	xor    ch,BYTE PTR [esi]
  40dc72:	sbb    eax,0xfa408978
  40dc77:	push   0x25
  40dc79:	jle    0x40dc94
  40dc7b:	arpl   WORD PTR [esi+0x62724b59],bp
  40dc81:	test   DWORD PTR [ebx-0x59],ecx
  40dc84:	push   esp
  40dc85:	sar    BYTE PTR [edx],cl
  40dc87:	cmc    
  40dc88:	mov    esi,0xebb970df
  40dc8d:	xlat   BYTE PTR ds:[ebx]
  40dc8e:	xchg   ebx,eax
  40dc8f:	fadd   QWORD PTR [edi]
  40dc91:	push   ss
  40dc92:	mov    ds,WORD PTR [ecx+0x52]
  40dc95:	lds    edi,FWORD PTR [ecx]
  40dc97:	push   ebp
  40dc98:	dec    eax
  40dc99:	les    eax,FWORD PTR [edx]
  40dc9b:	push   ds
  40dc9c:	(bad)  
  40dc9d:	xchg   esi,eax
  40dc9e:	cmp    eax,0xd6078c99
  40dca3:	popf   
  40dca4:	or     cl,BYTE PTR [eax+edi*2+0x1a55a762]
  40dcab:	mov    bl,0x61
  40dcad:	xchg   ebx,eax
  40dcae:	push   esi
  40dcaf:	mov    ds:0x3a2f771b,al
  40dcb4:	leave  
  40dcb5:	cmp    DWORD PTR [eax+0x35],ecx
  40dcb8:	ja     0x40dcf5
  40dcba:	cld    
  40dcbb:	cmp    DWORD PTR [esi-0x23a6cace],0x48a1d4a6
  40dcc5:	jae    0x40dc7c
  40dcc7:	mov    DWORD PTR [ecx-0x4b],ecx
  40dcca:	repz xor ch,BYTE PTR [edi]
  40dccd:	xchg   ecx,eax
  40dcce:	aas    
  40dccf:	outs   dx,DWORD PTR ds:[esi]
  40dcd0:	push   ebx
  40dcd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcd2:	sti    
  40dcd3:	test   BYTE PTR [ebx],dl
  40dcd5:	popa   
  40dcd6:	pop    ss
  40dcd7:	leave  
  40dcd8:	and    DWORD PTR [esi+0x77],edi
  40dcdb:	jg     0x40dd36
  40dcdd:	ds inc ecx
  40dcdf:	or     DWORD PTR [ebx+0x55ee9a2e],0xf09ce3fc
  40dce9:	and    al,ch
  40dceb:	add    BYTE PTR [ecx-0x32a7447],dl
  40dcf1:	mov    BYTE PTR ds:0x6f95298a,ah
  40dcf7:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40dcf9:	adc    al,BYTE PTR [ebp+0x5b]
  40dcfc:	push   ecx
  40dcfd:	cdq    
  40dcfe:	cmc    
  40dcff:	stos   DWORD PTR es:[edi],eax
  40dd00:	sub    DWORD PTR [eax],esi
  40dd02:	mov    bl,0xc2
  40dd04:	popf   
  40dd05:	inc    ecx
  40dd06:	imul   edx,DWORD PTR [eax+eax*1],0x88e67fc2
  40dd0d:	adc    DWORD PTR [esi+0x718e7535],esi
  40dd13:	push   esi
  40dd14:	jb     0x40dcdc
  40dd16:	cmp    al,0xf7
  40dd18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd19:	pushf  
  40dd1a:	jge    0x40dcbc
  40dd1c:	cmp    DWORD PTR [eax],esp
  40dd1e:	pop    es
  40dd1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd20:	in     al,0x50
  40dd22:	fidiv  DWORD PTR [ecx]
  40dd24:	xor    DWORD PTR [edi+0x47a96a53],0xc
  40dd2b:	outs   dx,BYTE PTR ds:[esi]
  40dd2c:	inc    ecx
  40dd2d:	ins    BYTE PTR es:[edi],dx
  40dd2e:	retf   0xc56e
  40dd31:	repnz test BYTE PTR [edx-0x29c9f0c8],bl
  40dd38:	das    
  40dd39:	test   eax,0xe5c007de
  40dd3e:	sbb    BYTE PTR [esi+0x269d4853],al
  40dd44:	jmp    0x40dd65
  40dd46:	mov    DWORD PTR [edi+0x78e1dd3f],esp
  40dd4c:	ins    DWORD PTR es:[edi],dx
  40dd4d:	inc    edx
  40dd4e:	in     eax,dx
  40dd4f:	cmp    DWORD PTR [ebx-0x12],esi
  40dd52:	inc    DWORD PTR [ebp-0x1f]
  40dd55:	cmp    al,0x1e
  40dd57:	stos   BYTE PTR es:[edi],al
  40dd58:	or     bh,bl
  40dd5a:	fucomip st,st(0)
  40dd5c:	add    eax,0x177b99da
  40dd61:	popa   
  40dd62:	add    DWORD PTR [esi],ebp
  40dd64:	arpl   WORD PTR [esi-0x3ccacc1b],si
  40dd6a:	jp     0x40dd67
  40dd6c:	xor    DWORD PTR [edx*4+0x3dd082f3],eax
  40dd73:	pop    eax
  40dd74:	cdq    
  40dd75:	jge    0x40dd30
  40dd77:	je     0x40dd23
  40dd79:	inc    ebx
  40dd7a:	add    esp,DWORD PTR [esi+ebx*8]
  40dd7d:	int    0x18
  40dd7f:	mov    esi,0x24f0d3b4
  40dd84:	pop    esp
  40dd85:	dec    edi
  40dd86:	ins    DWORD PTR es:[edi],dx
  40dd87:	mov    edx,0xa05a1fe0
  40dd8c:	mov    ds:0xe23c183b,eax
  40dd91:	mov    eax,ds:0xe1348fd6
  40dd96:	push   ebp
  40dd97:	sbb    DWORD PTR [ecx+0x4f],edx
  40dd9a:	jmp    0x930876f5
  40dd9f:	mov    ds:0x5a318b07,al
  40dda4:	jb     0x40dd8a
  40dda6:	aam    0xa2
  40dda8:	daa    
  40dda9:	add    BYTE PTR [eax+ebx*4],bl
  40ddac:	das    
  40ddad:	or     BYTE PTR [edx],ah
  40ddaf:	push   ebx
  40ddb0:	dec    esi
  40ddb1:	xchg   edx,eax
  40ddb2:	and    esp,ebp
  40ddb4:	(bad)  
  40ddb5:	(bad)  
  40ddb6:	mov    esi,0x9e75f3bd
  40ddbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddbc:	repnz (bad) 
  40ddbe:	fsubr  QWORD PTR ds:0x3bb394e3
  40ddc4:	or     DWORD PTR [esi-0x6a17054d],0xb88f3c9
  40ddce:	pop    es
  40ddcf:	(bad)  
  40ddd0:	repnz pop ebx
  40ddd2:	mov    dh,0xf5
  40ddd4:	std    
  40ddd5:	in     eax,0xe0
  40ddd7:	or     bh,BYTE PTR [edi-0x67]
  40ddda:	lods   al,BYTE PTR ds:[esi]
  40dddb:	loope  0x40dd82
  40dddd:	dec    edx
  40ddde:	je     0x40de54
  40dde0:	lock mov ds:0x9abc3711,al
  40dde6:	shl    DWORD PTR [edi+ecx*4-0x3a],0x9b
  40ddeb:	mov    ch,0x66
  40dded:	jae    0x40ddc4
  40ddef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddf0:	jo     0x40dda0
  40ddf2:	test   eax,0xe16a710b
  40ddf7:	add    eax,0x436a33e3
  40ddfc:	mov    ah,BYTE PTR ds:0xa6012370
  40de02:	ja     0x40de49
  40de04:	sbb    al,0x1f
  40de06:	lahf   
  40de07:	mov    dl,0xc1
  40de09:	clc    
  40de0a:	push   eax
  40de0b:	sti    
  40de0c:	push   eax
  40de0d:	outs   dx,BYTE PTR ds:[esi]
  40de0e:	aas    
  40de0f:	cmp    bh,bl
  40de11:	aas    
  40de12:	mov    ch,0x4b
  40de14:	adc    edx,edi
  40de16:	jo     0x40ddf3
  40de18:	pushf  
  40de19:	in     al,0xc8
  40de1b:	mov    ah,0xa5
  40de1d:	repnz dec esi
  40de1f:	mov    bh,0x78
  40de21:	push   0xf59c9522
  40de26:	cdq    
  40de27:	pushf  
  40de28:	xchg   esp,eax
  40de29:	pop    edx
  40de2a:	adc    al,BYTE PTR [ebx]
  40de2c:	xor    al,0x46
  40de2e:	mov    ch,BYTE PTR [ecx-0x7f]
  40de31:	in     eax,0xc3
  40de33:	repnz push ss
  40de35:	mov    ebp,0x57a75428
  40de3a:	push   edi
  40de3b:	hlt    
  40de3c:	pop    edi
  40de3d:	das    
  40de3e:	mov    cl,0xdd
  40de40:	imul   edx
  40de42:	xchg   esp,eax
  40de43:	add    BYTE PTR [ebp-0x4d6b5d74],dl
  40de49:	cwde   
  40de4a:	test   al,0xcd
  40de4d:	inc    edx
  40de4e:	or     ecx,DWORD PTR [esp+eax*8-0x70]
  40de52:	out    0x6c,al
  40de54:	push   edi
  40de55:	aam    0x39
  40de57:	stc    
  40de58:	addr16 in eax,0x25
  40de5b:	mov    esp,0xd99e432d
  40de60:	add    BYTE PTR [edi-0x69d16c54],0xfb
  40de67:	mov    eax,ds:0x70a310d9
  40de6c:	call   DWORD PTR [edx+0x1e7c25ad]
  40de72:	ror    BYTE PTR [eax-0x6fae51d1],0xab
  40de79:	fs clc 
  40de7b:	jmp    0x40de63
  40de7d:	pop    edx
  40de7e:	push   cs
  40de7f:	mov    bl,0xc4
  40de81:	iret   
  40de82:	ror    BYTE PTR [edx+ecx*1+0x42],cl
  40de86:	retf   
  40de87:	(bad)  
  40de89:	retf   
  40de8a:	dec    ecx
  40de8b:	and    DWORD PTR [edx-0x3a7bf4bb],esp
  40de91:	xchg   DWORD PTR [edi],edi
  40de93:	jmp    0x4cb7:0xbca4b3ec
  40de9a:	pop    ecx
  40de9b:	xchg   esp,eax
  40de9c:	adc    ecx,0x48f61fef
  40dea2:	in     al,0x39
  40dea4:	xchg   ecx,eax
  40dea5:	xchg   BYTE PTR [ecx+eax*4],ch
  40dea8:	out    dx,eax
  40dea9:	mov    dl,0x82
  40deab:	push   ds
  40deac:	and    eax,0xe95bb51e
  40deb1:	mov    al,ds:0x87763d08
  40deb6:	ror    DWORD PTR [edx],cl
  40deb8:	sar    BYTE PTR [ebx],cl
  40deba:	stos   DWORD PTR es:[edi],eax
  40debb:	bound  ebx,QWORD PTR [ecx-0x80]
  40debe:	and    BYTE PTR [ebx+eiz*1-0x598b9859],bl
  40dec5:	jns    0x40de9b
  40dec7:	enter  0x406c,0x9a
  40decb:	lock nop
  40decd:	(bad)  
  40dece:	xchg   ebp,eax
  40decf:	clc    
  40ded0:	(bad)  
  40ded1:	mov    ebx,ds
  40ded3:	mov    ebx,0x6719cb0b
  40ded8:	and    al,0x0
  40deda:	push   cs
  40dedb:	inc    ecx
  40dedc:	push   cs
  40dedd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dedf:	push   ds
  40dee0:	jns    0x40df45
  40dee2:	loopne 0x40ded0
  40dee4:	xchg   esi,eax
  40dee5:	retf   0xd7d6
  40dee8:	aaa    
  40dee9:	test   edi,edi
  40deeb:	vpperm xmm9,xmm6,XMMWORD PTR [edx+r13d*8+0x524a301f],xmm1
  40def6:	jl     0x40ded7
  40def8:	mul    ah
  40defa:	das    
  40defb:	dec    edx
  40defc:	call   0xdb0f:0x9f7dd7aa
  40df03:	rcr    DWORD PTR [edx-0x15],1
  40df06:	enter  0xe209,0xa9
  40df0a:	hlt    
  40df0b:	lods   al,BYTE PTR ds:[esi]
  40df0c:	cmp    al,0xf4
  40df0e:	imul   edi,DWORD PTR [eax],0xfffffff6
  40df11:	out    dx,eax
  40df12:	(bad)  
  40df13:	in     al,dx
  40df14:	mov    esi,eax
  40df16:	add    esp,esp
  40df18:	cmp    eax,0xcb8db978
  40df1d:	pop    edx
  40df1e:	pop    esp
  40df1f:	cli    
  40df20:	mov    ch,0xbc
  40df22:	add    al,0x68
  40df24:	mov    ds:0xfbbd1639,eax
  40df29:	dec    esp
  40df2a:	xchg   ecx,eax
  40df2b:	je     0x40df5d
  40df2d:	int3   
  40df2e:	cld    
  40df2f:	push   eax
  40df30:	pop    ebx
  40df31:	mov    ebp,0x803c6e8d
  40df36:	es inc edx
  40df38:	add    DWORD PTR [edi],eax
  40df3a:	fadd   DWORD PTR [ecx]
  40df3c:	fist   DWORD PTR [esi+0x2cb42b16]
  40df42:	mov    ebx,0x7798c2ca
  40df47:	jne    0x40df5a
  40df49:	dec    ecx
  40df4a:	pop    ds
  40df4b:	push   ebp
  40df4c:	int    0x4a
  40df4e:	pop    ecx
  40df4f:	test   eax,0x107b39ce
  40df54:	lods   al,BYTE PTR ds:[esi]
  40df55:	adc    al,BYTE PTR [edi+0x7a]
  40df58:	xchg   DWORD PTR [edx],esp
  40df5a:	mov    ch,0x5d
  40df5c:	(bad)  
  40df5d:	mov    ds:0x66e506e,al
  40df62:	fisub  DWORD PTR [ebp+0x61]
  40df65:	inc    eax
  40df66:	aaa    
  40df67:	pop    edx
  40df68:	cs adc ch,ch
  40df6b:	cli    
  40df6c:	jnp    0x40dfd8
  40df6e:	xlat   BYTE PTR ds:[ebx]
  40df6f:	jns    0x40df4c
  40df71:	pop    ebx
  40df72:	shl    BYTE PTR [edi-0x54],cl
  40df75:	adc    dl,cl
  40df77:	or     ebp,ebx
  40df79:	outs   dx,BYTE PTR ds:[esi]
  40df7a:	push   edx
  40df7b:	dec    ebp
  40df7c:	dec    ebp
  40df7d:	mov    ds:0x6b30bf23,al
  40df82:	cmc    
  40df83:	scas   eax,DWORD PTR es:[edi]
  40df84:	shl    DWORD PTR [eax-0xc93743a],1
  40df8a:	imul   edi,eax,0x5d
  40df8d:	aaa    
  40df8e:	and    BYTE PTR [edi],bh
  40df90:	das    
  40df91:	cmp    DWORD PTR [esi+0x8],eax
  40df94:	fisttp WORD PTR [esi-0x356adb90]
  40df9a:	lods   eax,DWORD PTR ds:[esi]
  40df9b:	dec    ecx
  40df9c:	mov    eax,0x2a8c0485
  40dfa1:	out    0xdf,al
  40dfa3:	ja     0x40dfe8
  40dfa5:	iret   
  40dfa6:	sub    DWORD PTR [ebx-0x4f],ebx
  40dfa9:	pop    edx
  40dfaa:	imul   ebx,DWORD PTR [ebx+0x77908a09],0x6a
  40dfb1:	cdq    
  40dfb2:	sbb    al,0xca
  40dfb4:	fcomp  QWORD PTR [ebp+0x6f]
  40dfb7:	cmp    eax,0xad664cc8
  40dfbc:	nop
  40dfbd:	mov    eax,0x6013b90a
  40dfc2:	aas    
  40dfc3:	xchg   edx,eax
  40dfc4:	sub    BYTE PTR cs:[edi+0x53],0xb8
  40dfc9:	popa   
  40dfca:	jp     0x40df63
  40dfcc:	aam    0xb8
  40dfce:	xor    edi,ecx
  40dfd0:	xor    DWORD PTR [eax],ebx
  40dfd2:	int    0xe0
  40dfd4:	mov    eax,0x10753b3b
  40dfd9:	in     al,0x67
  40dfdb:	jle    0x40dfe6
  40dfdd:	mov    dh,0x7d
  40dfdf:	pop    ecx
  40dfe0:	jo     0x40e012
  40dfe2:	(bad)  
  40dfe3:	outs   dx,DWORD PTR ds:[esi]
  40dfe4:	push   0x20c71199
  40dfe9:	cs inc ebp
  40dfeb:	mov    ah,0xaf
  40dfed:	in     al,0x73
  40dfef:	fdivr  QWORD PTR [ebp-0x66]
  40dff2:	sbb    dl,BYTE PTR [eax]
  40dff4:	frndint 
  40dff6:	(bad)  
  40dff7:	into   
  40dff8:	cmp    ch,cl
  40dffa:	jmp    0x40e062
  40dffc:	(bad)  
  40dffd:	repnz in al,0xef
  40e000:	pop    esp
  40e001:	in     al,dx
  40e002:	mov    WORD PTR [edx+ecx*1-0x2b87e7cc],ds
  40e009:	jge    0x40dfc2
  40e00b:	or     BYTE PTR [ecx+0x32],dl
  40e00e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e00f:	and    BYTE PTR [ecx+0x6f],0xa4
  40e013:	je     0x40e060
  40e015:	and    cl,BYTE PTR [ebp-0x18f03d56]
  40e01b:	inc    edx
  40e01c:	ins    DWORD PTR es:[edi],dx
  40e01d:	loopne 0x40dfc8
  40e01f:	mov    ebp,0xc80ec901
  40e024:	add    dh,BYTE PTR [esi-0x35]
  40e027:	inc    edx
  40e028:	pop    ss
  40e029:	lock add eax,0xf9ecbaa0
  40e02f:	(bad)  
  40e030:	fwait
  40e031:	lods   eax,DWORD PTR ds:[esi]
  40e032:	push   ecx
  40e033:	jbe    0x40e09b
  40e035:	ffree  st(3)
  40e037:	add    ebx,esp
  40e039:	imul   esp,DWORD PTR [ecx],0xffffff90
  40e03c:	and    DWORD PTR es:[edx],ecx
  40e03f:	sar    BYTE PTR [edi],cl
  40e041:	lahf   
  40e042:	dec    esi
  40e043:	and    eax,0x87bb92a9
  40e048:	sub    al,0x98
  40e04a:	pop    edx
  40e04b:	adc    eax,0x3d9922c8
  40e050:	jno    0x40dff8
  40e052:	fisubr DWORD PTR [ebx-0x574181ce]
  40e058:	jae    0x40e009
  40e05a:	ret    0xbc0a
  40e05d:	retf   0x74b3
  40e060:	fnstcw WORD PTR [esi+0x63e455f8]
  40e066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e067:	jl     0x40dfed
  40e069:	pop    ss
  40e06a:	push   esp
  40e06b:	or     BYTE PTR [edx+ebx*8-0x59],0xdd
  40e070:	mov    al,ds:0xd830ed10
  40e075:	or     ah,cl
  40e077:	xor    DWORD PTR [eax],esp
  40e079:	mov    DWORD PTR [edx+0x6d],eax
  40e07c:	adc    eax,0xa733fcf4
  40e081:	cs jge 0x40e057
  40e084:	push   esi
  40e085:	les    edx,FWORD PTR [ebp+0x5a]
  40e088:	int3   
  40e089:	test   BYTE PTR [edx-0x5b],dl
  40e08c:	mov    ds:0xcd8d09d1,eax
  40e091:	xor    BYTE PTR [edx-0x37],cl
  40e094:	scas   eax,DWORD PTR es:[edi]
  40e095:	mov    cl,0x61
  40e097:	cld    
  40e098:	cmp    al,BYTE PTR [eax+0x24e82c9e]
  40e09e:	mov    ds:0xb058f7bf,eax
  40e0a3:	dec    ecx
  40e0a4:	stos   BYTE PTR es:[edi],al
  40e0a5:	sbb    esp,edx
  40e0a7:	adc    cl,BYTE PTR [edx+0x54]
  40e0aa:	xor    dl,BYTE PTR [eax+0x43]
  40e0ad:	push   ecx
  40e0ae:	dec    edx
  40e0af:	cmc    
  40e0b0:	sub    ebp,ebx
  40e0b2:	mov    bl,0x1a
  40e0b4:	out    0x27,al
  40e0b6:	mov    ebp,0xb91e8423
  40e0bb:	sbb    al,0xe5
  40e0bd:	xor    dl,bh
  40e0bf:	xor    BYTE PTR [eax-0x7],ah
  40e0c2:	es cmc 
  40e0c4:	inc    eax
  40e0c5:	mov    ds:0xa892012a,eax
  40e0ca:	ins    DWORD PTR es:[edi],dx
  40e0cb:	mov    bl,0x58
  40e0cd:	frstor [esi]
  40e0cf:	sub    ch,BYTE PTR [esp+ebx*2+0x64]
  40e0d3:	add    al,0x28
  40e0d5:	pop    ebp
  40e0d6:	bound  esi,QWORD PTR [esi+0x55]
  40e0d9:	sahf   
  40e0da:	movq   QWORD PTR [ebx+ebp*2],mm5
  40e0de:	or     eax,0x6861169
  40e0e3:	xor    esi,DWORD PTR [edx+ecx*2]
  40e0e6:	sub    DWORD PTR [esi],esi
  40e0e8:	xchg   ebx,eax
  40e0e9:	call   ecx
  40e0eb:	mov    esp,DWORD PTR [edi]
  40e0ed:	cmp    DWORD PTR [edi],0xc12185d4
  40e0f3:	dec    edx
  40e0f4:	jecxz  0x40e126
  40e0f6:	cmp    al,0x56
  40e0f8:	fs pop esi
  40e0fa:	inc    edx
  40e0fb:	repz adc DWORD PTR [edx+0x5],0xfffffff4
  40e100:	test   eax,ecx
  40e102:	pop    DWORD PTR [ecx-0x45a3579c]
  40e108:	dec    eax
  40e109:	data16 jge 0x40e144
  40e10c:	lods   eax,DWORD PTR ds:[esi]
  40e10d:	dec    esp
  40e10e:	in     al,0xd4
  40e110:	icebp  
  40e111:	(bad)  
  40e112:	mov    bh,cl
  40e114:	sub    cl,ah
  40e116:	mov    ah,0x5e
  40e118:	sbb    dh,BYTE PTR ds:0x47e2192e
  40e11e:	mov    cl,BYTE PTR [ebx+edx*8-0x7865372f]
  40e125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e126:	mov    dl,BYTE PTR [esi+0x74]
  40e129:	cwde   
  40e12a:	dec    edi
  40e12b:	loopne 0x40e0e1
  40e12d:	lahf   
  40e12e:	pop    esi
  40e12f:	repnz sbb DWORD PTR ds:0x4c557517,0x53329bc5
  40e13a:	fsubr  QWORD PTR [esi+ecx*4+0x495c6aa3]
  40e141:	fwait
  40e142:	xchg   ebx,eax
  40e143:	xor    BYTE PTR [ebx-0x27],bl
  40e146:	icebp  
  40e147:	xor    al,BYTE PTR [eax+edi*4+0x6f]
  40e14b:	xchg   DWORD PTR [edi+0x39],eax
  40e14e:	sbb    eax,0xa4b53606
  40e153:	cwde   
  40e154:	inc    esi
  40e155:	addr16 aaa 
  40e157:	in     al,dx
  40e158:	adc    al,0xfa
  40e15a:	out    0xc9,al
  40e15c:	mov    eax,ds:0xf571f402
  40e161:	hlt    
  40e162:	popa   
  40e163:	ja     0x40e11c
  40e165:	enter  0x152c,0x1d
  40e169:	mul    BYTE PTR [esi+0x660bd4e1]
  40e16f:	ds out 0xa7,eax
  40e172:	sub    ch,BYTE PTR [edi-0xe49f4eb]
  40e178:	(bad)  
  40e179:	adc    esp,DWORD PTR [edx+0x39fcfe2]
  40e17f:	push   ecx
  40e180:	push   esp
  40e181:	stos   BYTE PTR es:[edi],al
  40e182:	pop    ebx
  40e183:	and    BYTE PTR ds:0xa30acad4,bl
  40e189:	das    
  40e18a:	or     al,0x5d
  40e18c:	ror    DWORD PTR [esi],cl
  40e18e:	add    ch,BYTE PTR [eax]
  40e190:	push   ebx
  40e191:	inc    edi
  40e192:	rcl    BYTE PTR [edx-0x2cc4c28f],cl
  40e198:	sub    eax,0xc9c509de
  40e19d:	cmc    
  40e19e:	xor    DWORD PTR [esi+0x99ddf94],esp
  40e1a4:	pop    es
  40e1a5:	data16 lahf 
  40e1a7:	pop    ecx
  40e1a8:	mov    cl,0xe
  40e1aa:	cmc    
  40e1ab:	or     bl,BYTE PTR [ecx]
  40e1ad:	fucomp st(3)
  40e1af:	mov    ah,0xc2
  40e1b1:	or     esi,DWORD PTR [ebx+0x686cc312]
  40e1b7:	icebp  
  40e1b8:	adc    DWORD PTR [esi+0x6d],ecx
  40e1bb:	imul   edi,eax,0xffffffeb
  40e1be:	jle    0x40e1f7
  40e1c0:	add    ecx,DWORD PTR [edi]
  40e1c2:	inc    edi
  40e1c3:	lock jge 0x40e195
  40e1c6:	mov    BYTE PTR [edx+ecx*2+0x62a74ba3],al
  40e1cd:	jnp    0x40e1e4
  40e1cf:	jno    0xb99a1eec
  40e1d5:	lock mov ebx,es
  40e1d8:	enter  0xfa34,0x6e
  40e1dc:	repz mov al,ds:0x96133d7c
  40e1e2:	inc    BYTE PTR [ecx+eiz*2-0x5f7975e2]
  40e1e9:	dec    edi
  40e1ea:	inc    eax
  40e1eb:	imul   esp,DWORD PTR [ebx+eiz*2],0x7f
  40e1ef:	je     0x40e1a3
  40e1f1:	sub    DWORD PTR [esi],ebx
  40e1f3:	(bad)  
  40e1f4:	sub    BYTE PTR [ecx-0x7f57d88c],bh
  40e1fa:	and    eax,0x8864c5f8
  40e1ff:	cmp    DWORD PTR [eax],0xffffffc2
  40e202:	leave  
  40e203:	jo     0x40e206
  40e205:	(bad)  
  40e207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e208:	or     bl,BYTE PTR [esi-0x60c7e72]
  40e20e:	in     eax,0x6f
  40e210:	fsubr  DWORD PTR [esp+ebx*2+0x35]
  40e214:	fnstenv [ebx-0x1a]
  40e217:	cli    
  40e218:	or     DWORD PTR [esi-0x1f],0x12
  40e21c:	and    al,0xb
  40e21e:	nop
  40e21f:	pop    edx
  40e220:	imul   edi,DWORD PTR [ebp-0x1ea564fe],0xabe22094
  40e22a:	fs ja  0x40e1de
  40e22d:	cmp    BYTE PTR [ecx-0x2b],0xfc
  40e231:	out    0xe4,eax
  40e233:	dec    edi
  40e234:	(bad)  
  40e235:	ins    DWORD PTR es:[edi],dx
  40e236:	mov    esp,0xc2e84923
  40e23b:	add    al,0xf1
  40e23d:	mov    dh,0x94
  40e23f:	lahf   
  40e240:	out    0xfb,al
  40e242:	push   ecx
  40e243:	ds jb  0x40e2b2
  40e246:	dec    esp
  40e247:	lea    esi,[edx-0x79863033]
  40e24d:	retf   0xd562
  40e250:	(bad)  
  40e251:	dec    ebp
  40e252:	enter  0x5997,0x18
  40e256:	dec    esp
  40e257:	leave  
  40e258:	bound  ecx,QWORD PTR [edx+0x7]
  40e25b:	test   al,0x20
  40e25d:	(bad)  
  40e25f:	mov    ss,ebx
  40e261:	pop    ecx
  40e262:	repz pop es
  40e264:	xor    al,0x2a
  40e266:	inc    ebp
  40e267:	popf   
  40e268:	mov    bh,0x82
  40e26a:	lods   eax,DWORD PTR ds:[esi]
  40e26b:	jmp    0x40e283
  40e26d:	mov    ebp,0x8b2b53ec
  40e272:	and    DWORD PTR [edi+0x269c77fb],eax
  40e278:	xor    ebp,esp
  40e27a:	cwde   
  40e27b:	sub    eax,0xd7345f5b
  40e280:	push   0xe6226c0b
  40e285:	dec    ecx
  40e286:	frstor [esi-0x6b70985d]
  40e28c:	pop    edi
  40e28d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e28e:	pop    es
  40e28f:	fcmovnbe st,st(7)
  40e291:	test   eax,0xe2ab194e
  40e296:	out    0x25,al
  40e298:	dec    sp
  40e29a:	push   esi
  40e29b:	shrd   DWORD PTR [edx+0x4e],esi,cl
  40e29f:	mov    eax,ds:0x618a8467
  40e2a4:	mov    al,ds:0xa787201
  40e2a9:	push   esi
  40e2aa:	jp     0x40e310
  40e2ac:	pop    esp
  40e2ad:	repnz lahf 
  40e2af:	and    al,0xb9
  40e2b1:	mov    ecx,0xda298deb
  40e2b6:	fcom   QWORD PTR [ebx+0x729be5dd]
  40e2bc:	adc    eax,esi
  40e2be:	addr16 in al,dx
  40e2c0:	jnp    0x40e2ee
  40e2c2:	scas   eax,DWORD PTR es:[edi]
  40e2c3:	daa    
  40e2c4:	fwait
  40e2c5:	jp     0x40e269
  40e2c7:	fdivr  DWORD PTR [ebx+0x117a780e]
  40e2cd:	pop    ss
  40e2ce:	dec    esi
  40e2cf:	sub    ecx,DWORD PTR ds:0x92d9dccd
  40e2d5:	loop   0x40e2f4
  40e2d7:	rol    edi,cl
  40e2d9:	icebp  
  40e2da:	push   0x74
  40e2dc:	pop    ecx
  40e2dd:	inc    esi
  40e2de:	adc    DWORD PTR [eax+0x42e83578],edi
  40e2e4:	jl     0x40e298
  40e2e6:	inc    ebp
  40e2e7:	dec    esp
  40e2e8:	add    dl,ch
  40e2ea:	mov    al,ds:0x77df85be
  40e2ef:	push   esi
  40e2f0:	aaa    
  40e2f1:	js     0x40e27f
  40e2f3:	(bad)  [esi-0x43]
  40e2f6:	push   0xb0f85535
  40e2fb:	fisttp DWORD PTR [esi]
  40e2fd:	test   DWORD PTR [edi-0x41542060],ebp
  40e303:	mov    ds:0x580a66b8,al
  40e308:	hlt    
  40e309:	ds mov cl,0x54
  40e30c:	repz in al,dx
  40e30e:	dec    ebp
  40e30f:	xor    BYTE PTR [ecx],ch
  40e311:	cs out dx,al
  40e313:	outs   dx,DWORD PTR ds:[esi]
  40e314:	push   ebp
  40e315:	pop    es
  40e316:	cdq    
  40e317:	or     BYTE PTR [edx+0x65],ah
  40e31a:	adc    dh,bh
  40e31c:	(bad)  
  40e31e:	je     0x40e35e
  40e320:	push   edi
  40e321:	nop
  40e322:	mov    bh,0x62
  40e324:	add    BYTE PTR [ebp+0x30],ah
  40e327:	mov    WORD PTR [edx-0x69d764cb],es
  40e32d:	pusha  
  40e32e:	ins    BYTE PTR es:[edi],dx
  40e32f:	ret    
  40e330:	data16 (bad) 
  40e333:	push   ebx
  40e334:	mov    cs,edx
  40e336:	lds    esp,FWORD PTR [esi+0x60f7cdc2]
  40e33c:	dec    ecx
  40e33d:	fsqrt  
  40e33f:	push   0x9f77a261
  40e344:	adc    esi,DWORD PTR [ecx+edi*2+0x66]
  40e348:	es out dx,eax
  40e34a:	jns    0x40e2f8
  40e34c:	popa   
  40e34d:	fnstenv [eax]
  40e34f:	fnsave [esi+0x4e]
  40e352:	mov    bl,0xf1
  40e354:	out    dx,eax
  40e355:	stos   BYTE PTR es:[edi],al
  40e356:	(bad)  
  40e357:	das    
  40e358:	jmp    0xf469:0x2276dd25
  40e35f:	jmp    0x8fdeaae9
  40e364:	jp     0x40e38a
  40e366:	fwait
  40e367:	sbb    al,0x31
  40e369:	mov    ecx,0xd1f90146
  40e36e:	mov    eax,ds:0xd4186792
  40e373:	sbb    BYTE PTR [edi+edx*8-0x73],dl
  40e377:	mov    ch,0x8e
  40e379:	push   edi
  40e37a:	add    DWORD PTR [ebp+0x1e],0xffffffb5
  40e37e:	js     0x40e38f
  40e380:	std    
  40e381:	(bad)
  40e384:	push   eax
  40e385:	popa   
  40e386:	into   
  40e387:	ret    0x8881
  40e38a:	fadd   DWORD PTR [ecx+0x954191a]
  40e390:	data16 mov BYTE PTR [esi-0x7f],al
  40e394:	or     DWORD PTR ds:0x1298d8e8,edx
  40e39a:	mov    bl,BYTE PTR [esi+0x3a99ce37]
  40e3a0:	or     al,dh
  40e3a2:	add    BYTE PTR [esi-0x425e6174],0x5e
  40e3a9:	dec    esp
  40e3aa:	mov    al,ds:0x917cfb70
  40e3af:	mov    ?,WORD PTR [ebp+0x44]
  40e3b2:	aas    
  40e3b3:	adc    eax,0xe2103c66
  40e3b8:	xchg   edi,eax
  40e3b9:	mov    esi,eax
  40e3bb:	xchg   esp,eax
  40e3bc:	rcl    DWORD PTR [esi+0x30],1
  40e3bf:	mov    ds:0xae32b5f1,al
  40e3c4:	pop    es
  40e3c5:	and    esi,DWORD PTR [ecx+0x71463608]
  40e3cb:	in     al,dx
  40e3cc:	ret    0xe200
  40e3cf:	adc    bl,al
  40e3d1:	fnstenv [ebp+0x73ccda7c]
  40e3d7:	fist   DWORD PTR [ecx-0x8]
  40e3da:	xor    BYTE PTR [edi],bh
  40e3dc:	and    ebx,DWORD PTR [edx]
  40e3de:	dec    edx
  40e3df:	pushf  
  40e3e0:	les    eax,FWORD PTR ds:0xe2b383db
  40e3e6:	and    edi,DWORD PTR [edx]
  40e3e8:	mov    ch,al
  40e3ea:	rcl    esp,cl
  40e3ec:	dec    edx
  40e3ed:	hlt    
  40e3ee:	mov    eax,DWORD PTR [ecx+eax*4]
  40e3f1:	mov    DWORD PTR [ebp-0x38],eax
  40e3f4:	jmp    0x40bfca
  40e3f9:	mov    eax,DWORD PTR [ebp-0xc]
  40e3fc:	xor    eax,esi
  40e3fe:	lea    ebx,[ebx+eax*1+0x3272e6]
  40e405:	jmp    0x4098c2
  40e40a:	mov    eax,DWORD PTR [ebp-0x4]
  40e40d:	xor    eax,esi
  40e40f:	add    eax,edi
  40e411:	jmp    0x40e533
  40e416:	mov    eax,DWORD PTR [ebp-0x38]
  40e419:	add    eax,DWORD PTR [ebp+0x8]
  40e41c:	mov    DWORD PTR [ebp-0x18],eax
  40e41f:	mov    eax,DWORD PTR [ebp-0x1c]
  40e422:	test   eax,eax
  40e424:	je     0x40e4be
  40e42a:	mov    DWORD PTR [ebp-0x20],0x0
  40e431:	push   0x3
  40e433:	xor    edx,edx
  40e435:	pop    edx
  40e436:	add    edx,0x8
  40e439:	push   edx
  40e43a:	pop    ecx
  40e43b:	push   0x6
  40e43d:	dec    ecx
  40e43e:	pop    ebx
  40e43f:	dec    ebx
  40e440:	xchg   ebx,ecx
  40e442:	sub    ebx,ecx
  40e444:	xchg   ebx,ecx
  40e446:	dec    ecx
  40e447:	mov    eax,DWORD PTR [ebp-0x1c]
  40e44a:	imul   eax,ecx
  40e44d:	sub    esp,eax
  40e44f:	mov    DWORD PTR [ebp-0x20],esp
  40e452:	mov    eax,DWORD PTR [ebp-0x4]
  40e455:	xor    eax,esi
  40e457:	add    eax,edi
  40e459:	jmp    0x40e497
  40e45e:	mov    ecx,DWORD PTR [ebp-0xc]
  40e461:	mov    eax,DWORD PTR [ebp+0x8]
  40e464:	mov    edx,DWORD PTR [ebp+0x14]
  40e467:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40e46b:	xor    ecx,esi
  40e46d:	add    ecx,edi
  40e46f:	xor    edx,edx
  40e471:	div    ecx
  40e473:	mov    ecx,DWORD PTR [ebp-0x4]
  40e476:	xor    ecx,esi
  40e478:	lea    eax,[ecx+eax*1+0x3272e6]
  40e47f:	mov    ecx,DWORD PTR [ebp+0x8]
  40e482:	mov    edx,DWORD PTR [ebp-0x20]
  40e485:	mov    DWORD PTR [edx+ecx*4],eax
  40e488:	mov    eax,DWORD PTR [ebp-0xc]
  40e48b:	mov    ecx,DWORD PTR [ebp+0x8]
  40e48e:	xor    eax,esi
  40e490:	lea    eax,[eax+ecx*1+0x3272e6]
  40e497:	mov    DWORD PTR [ebp+0x8],eax
  40e49a:	mov    eax,DWORD PTR [ebp-0xc]
  40e49d:	mov    ecx,DWORD PTR [ebp+0x14]
  40e4a0:	xor    eax,esi
  40e4a2:	add    eax,edi
  40e4a4:	imul   eax,DWORD PTR [ecx]
  40e4a7:	mov    ecx,DWORD PTR [ebp-0x4]
  40e4aa:	mov    edx,DWORD PTR [ebp+0x8]
  40e4ad:	xor    ecx,esi
  40e4af:	lea    ecx,[ecx+edx*1+0x3272e6]
  40e4b6:	cmp    ecx,eax
  40e4b8:	jne    0x40e45e
  40e4be:	mov    eax,DWORD PTR [ebp-0x4]
  40e4c1:	xor    eax,esi
  40e4c3:	add    eax,edi
  40e4c5:	mov    DWORD PTR [ebp-0x10],eax
  40e4c8:	mov    ebx,0x65655
  40e4cd:	add    ebx,0x3234
  40e4d3:	xchg   ebx,esi
  40e4d5:	xor    ebx,ebx
  40e4d7:	push   esi
  40e4d8:	mov    esi,ebx
  40e4da:	pop    ebx
  40e4db:	mov    edx,esi
  40e4dd:	add    ebx,0x1002
  40e4e3:	lea    eax,[ebp-0x18]
  40e4e6:	add    edx,eax
  40e4e8:	add    edx,0x5
  40e4eb:	push   edx
  40e4ec:	inc    esi
  40e4ed:	pop    ecx
  40e4ee:	dec    ecx
  40e4ef:	xchg   ecx,eax
  40e4f0:	dec    eax
  40e4f1:	xchg   ecx,eax
  40e4f2:	dec    ecx
  40e4f3:	xchg   ecx,edx
  40e4f5:	dec    edx
  40e4f6:	push   edx
  40e4f7:	mov    edx,ebx
  40e4f9:	pop    ebx
  40e4fa:	dec    ebx
  40e4fb:	call   DWORD PTR [ebx]
  40e4fd:	cmp    DWORD PTR [ebp+0x10],esi
  40e500:	je     0x40e51f
  40e506:	xchg   edx,eax
  40e507:	push   0xb
  40e509:	pop    ecx
  40e50a:	push   0x4
  40e50c:	pop    ebx
  40e50d:	inc    ebx
  40e50e:	xchg   ebx,ecx
  40e510:	sub    ebx,ecx
  40e512:	xchg   ebx,ecx
  40e514:	dec    ecx
  40e515:	dec    ecx
  40e516:	mov    eax,DWORD PTR [ebp-0x1c]
  40e519:	imul   eax,ecx
  40e51c:	add    esp,eax
  40e51e:	xchg   edx,eax
  40e51f:	push   eax
  40e520:	xor    ebx,ebx
  40e522:	mov    edx,esp
  40e524:	dec    edx
  40e525:	inc    ebx
  40e526:	add    ebx,DWORD PTR [edx+ebx*1]
  40e529:	dec    ebx
  40e52a:	xor    edx,edx
  40e52c:	add    DWORD PTR [ebp-0x10],ebx
  40e52f:	pop    ebx
  40e530:	mov    eax,DWORD PTR [ebp-0x10]
  40e533:	pop    edi
  40e534:	pop    esi
  40e535:	pop    ebx
  40e536:	leave  
  40e537:	ret    0x10
  40e53a:	push   ebp
  40e53b:	mov    ebp,esp
  40e53d:	sub    esp,0x7c
  40e540:	mov    DWORD PTR ds:0x426008,0x18
  40e54a:	cmp    DWORD PTR ds:0x426008,0x0
  40e551:	je     0x40e581
  40e557:	cmp    DWORD PTR ds:0x426008,0x24
  40e55e:	jbe    0x40e581
  40e564:	jmp    0x40e56f
  40e569:	call   DWORD PTR ds:0x42cedd
  40e56f:	mov    ecx,DWORD PTR ds:0x426008
  40e575:	dec    ecx
  40e576:	mov    DWORD PTR ds:0x426008,ecx
  40e57c:	jmp    0x40e54a
  40e581:	push   esi
  40e582:	push   edi
  40e583:	xor    eax,edi
  40e585:	mov    eax,ds:0x42c379
  40e58a:	add    edi,edi
  40e58c:	mov    DWORD PTR [ebp-0x24],eax
  40e58f:	sub    eax,0x176d
  40e594:	mov    eax,ds:0x42c485
  40e599:	and    DWORD PTR ds:0x428018,0x7f3b
  40e5a3:	mov    DWORD PTR [ebp-0x34],eax
  40e5a6:	mov    DWORD PTR ds:0x429000,0x11
  40e5b0:	cmp    DWORD PTR ds:0x429000,0x0
  40e5b7:	je     0x40e5ec
  40e5bd:	cmp    DWORD PTR ds:0x429000,0x1d
  40e5c4:	jb     0x40e5ec
  40e5ca:	jmp    0x40e5da
  40e5cf:	push   0x83e4
  40e5d4:	call   DWORD PTR ds:0x42cf11
  40e5da:	mov    ecx,DWORD PTR ds:0x429000
  40e5e0:	dec    ecx
  40e5e1:	mov    DWORD PTR ds:0x429000,ecx
  40e5e7:	jmp    0x40e5b0
  40e5ec:	and    DWORD PTR [ebp-0x30],0x0
  40e5f0:	sub    ecx,DWORD PTR ds:0x426024
  40e5f6:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  40e5fd:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  40e604:	sub    DWORD PTR ds:0x427000,0x66fb
  40e60e:	mov    eax,DWORD PTR [ebp-0x10]
  40e611:	and    esi,0x70eb
  40e617:	mov    ecx,DWORD PTR [ebp-0x10]
  40e61a:	and    DWORD PTR ds:0x429010,0x0
  40e624:	jmp    0x40e636
  40e629:	mov    esi,DWORD PTR ds:0x429010
  40e62f:	inc    esi
  40e630:	mov    DWORD PTR ds:0x429010,esi
  40e636:	cmp    DWORD PTR ds:0x429010,0x17
  40e63d:	jae    0x40e692
  40e643:	cmp    DWORD PTR ds:0x429010,0x8
  40e64a:	ja     0x40e692
  40e650:	jmp    0x40e671
  40e655:	push   DWORD PTR [ebp-0x10]
  40e658:	push   DWORD PTR [ebp-0x24]
  40e65b:	push   0x8772
  40e660:	push   DWORD PTR [ebp-0x20]
  40e663:	push   DWORD PTR [ebp-0x28]
  40e666:	push   0x28c6
  40e66b:	call   DWORD PTR ds:0x42cee1
  40e671:	cmp    DWORD PTR ds:0x429010,0x7
  40e678:	jne    0x40e68d
  40e67e:	xor    esi,esi
  40e680:	or     esi,DWORD PTR ds:0x429010
  40e686:	inc    esi
  40e687:	mov    DWORD PTR ds:0x429010,esi
  40e68d:	jmp    0x40e629
  40e692:	sub    eax,ecx
  40e694:	mov    DWORD PTR [ebp-0x10],eax
  40e697:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  40e69e:	or     DWORD PTR ds:0x428018,0x2d89
  40e6a8:	mov    eax,DWORD PTR [ebp-0x18]
  40e6ab:	and    DWORD PTR ds:0x42a01c,0x0
  40e6b5:	mov    esi,DWORD PTR ds:0x42a01c
  40e6bb:	inc    esi
  40e6bc:	mov    DWORD PTR ds:0x42a01c,esi
  40e6c2:	cmp    DWORD PTR ds:0x42a01c,0x26
  40e6c9:	jbe    0x40e704
  40e6cf:	jmp    0x40e6f7
  40e6d4:	push   0x4590
  40e6d9:	push   DWORD PTR [ebp-0x24]
  40e6dc:	push   0x41f3
  40e6e1:	push   DWORD PTR [ebp-0x14]
  40e6e4:	push   DWORD PTR [ebp-0x20]
  40e6e7:	push   0x3d53
  40e6ec:	push   0x42c000
  40e6f1:	call   DWORD PTR ds:0x42cf15
  40e6f7:	cmp    DWORD PTR ds:0x42a01c,0x17
  40e6fe:	jb     0x40e6b5
  40e704:	mov    ecx,DWORD PTR [ebp-0x18]
  40e707:	xor    DWORD PTR ds:0x42800c,edx
  40e70d:	sub    eax,ecx
  40e70f:	and    DWORD PTR ds:0x42901c,0x0
  40e719:	xor    edi,edi
  40e71b:	xor    edi,DWORD PTR ds:0x42901c
  40e721:	inc    edi
  40e722:	mov    DWORD PTR ds:0x42901c,edi
  40e728:	cmp    DWORD PTR ds:0x42901c,0x27
  40e72f:	jl     0x40e75a
  40e735:	jmp    0x40e74d
  40e73a:	push   0x42800c
  40e73f:	push   DWORD PTR [ebp-0xc]
  40e742:	push   0x42c185
  40e747:	call   DWORD PTR ds:0x42cf19
  40e74d:	cmp    DWORD PTR ds:0x42901c,0x1a
  40e754:	jb     0x40e719
  40e75a:	mov    DWORD PTR [ebp-0x18],eax
  40e75d:	or     DWORD PTR [ebp-0x18],0xf89f0585
  40e764:	xor    ecx,0x6c8a
  40e76a:	mov    eax,DWORD PTR [ebp-0xc]
  40e76d:	xor    edi,DWORD PTR ds:0x42900c
  40e773:	mov    ecx,DWORD PTR [ebp-0xc]
  40e776:	sub    esi,edi
  40e778:	sub    eax,ecx
  40e77a:	mov    edi,DWORD PTR ds:0x41d2cc
  40e780:	mov    ecx,DWORD PTR ds:0x41d2dc
  40e786:	sub    edi,ecx
  40e788:	xor    edi,DWORD PTR [edi+ecx*1]
  40e78b:	mov    DWORD PTR [ebp-0xc],eax
  40e78e:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  40e795:	sub    esi,0x34f6
  40e79b:	mov    eax,DWORD PTR [ebp-0x1c]
  40e79e:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e7a1:	sub    eax,ecx
  40e7a3:	mov    DWORD PTR [ebp-0x1c],eax
  40e7a6:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40e7ad:	mov    eax,DWORD PTR [ebp-0x20]
  40e7b0:	mov    ecx,DWORD PTR [ebp-0x20]
  40e7b3:	sub    eax,ecx
  40e7b5:	mov    DWORD PTR [ebp-0x20],eax
  40e7b8:	mov    eax,DWORD PTR [ebp-0x2c]
  40e7bb:	mov    ecx,DWORD PTR [ebp-0x20]
  40e7be:	mov    esi,0x751089f
  40e7c3:	xor    eax,esi
  40e7c5:	mov    edi,0x3272e6
  40e7ca:	add    eax,edi
  40e7cc:	or     eax,ecx
  40e7ce:	mov    DWORD PTR [ebp-0x20],eax
  40e7d1:	mov    eax,DWORD PTR [ebp-0x4]
  40e7d4:	mov    ecx,DWORD PTR [ebp-0x4]
  40e7d7:	sub    eax,ecx
  40e7d9:	mov    DWORD PTR [ebp-0x4],eax
  40e7dc:	or     DWORD PTR [ebp-0x4],0xf89c8580
  40e7e3:	mov    eax,DWORD PTR [ebp-0xc]
  40e7e6:	xor    eax,esi
  40e7e8:	add    eax,edi
  40e7ea:	push   eax
  40e7eb:	mov    eax,DWORD PTR [ebp-0x10]
  40e7ee:	xor    eax,esi
  40e7f0:	add    eax,edi
  40e7f2:	push   eax
  40e7f3:	mov    eax,DWORD PTR [ebp-0x4]
  40e7f6:	xor    eax,esi
  40e7f8:	add    eax,edi
  40e7fa:	push   eax
  40e7fb:	lea    eax,[ebp-0x7c]
  40e7fe:	push   eax
  40e7ff:	push   DWORD PTR [ebp-0x2c]
  40e802:	push   DWORD PTR [ebp-0x28]
  40e805:	call   0x411333
  40e80a:	test   eax,eax
  40e80c:	je     0x40e83a
  40e812:	lea    eax,[ebp-0x7c]
  40e815:	push   eax
  40e816:	mov    eax,DWORD PTR [ebp-0x28]
  40e819:	xor    eax,esi
  40e81b:	add    eax,edi
  40e81d:	push   eax
  40e81e:	mov    eax,DWORD PTR [ebp-0x24]
  40e821:	add    eax,0xaa
  40e826:	push   eax
  40e827:	mov    eax,DWORD PTR [ebp-0x24]
  40e82a:	mov    eax,DWORD PTR [eax+0x198]
  40e830:	push   DWORD PTR [eax]
  40e832:	call   0x409758
  40e837:	mov    DWORD PTR [ebp-0x14],eax
  40e83a:	lea    eax,[ebp+0x4]
  40e83d:	mov    DWORD PTR [ebp-0x30],eax
  40e840:	mov    eax,DWORD PTR [ebp-0x14]
  40e843:	test   eax,eax
  40e845:	je     0x40e8ad
  40e84b:	lea    eax,[ebp-0x8]
  40e84e:	mov    DWORD PTR [ebp-0x38],eax
  40e851:	mov    eax,DWORD PTR [ebp-0x34]
  40e854:	mov    DWORD PTR [ebp-0x8],eax
  40e857:	mov    eax,DWORD PTR [ebp-0x8]
  40e85a:	mov    ecx,DWORD PTR [ebp-0x14]
  40e85d:	sub    eax,ecx
  40e85f:	mov    DWORD PTR [ebp-0x8],eax
  40e862:	mov    ecx,DWORD PTR [ebp-0x4]
  40e865:	xor    ecx,esi
  40e867:	mov    eax,0xffcd8d1a
  40e86c:	sub    eax,ecx
  40e86e:	add    DWORD PTR [ebp-0x8],eax
  40e871:	mov    eax,DWORD PTR [ebp-0x8]
  40e874:	mov    ecx,DWORD PTR [ebp-0x14]
  40e877:	mov    DWORD PTR [ecx+0x1],eax
  40e87a:	mov    eax,DWORD PTR [ebp-0x14]
  40e87d:	push   DWORD PTR [ebp-0x24]
  40e880:	mov    BYTE PTR [eax],0xe9
  40e883:	mov    eax,ds:0x42c1f5
  40e888:	push   DWORD PTR [eax]
  40e88a:	push   DWORD PTR ds:0x42c451
  40e890:	push   DWORD PTR ds:0x42c1fd
  40e896:	push   DWORD PTR ds:0x42c431
  40e89c:	push   DWORD PTR ds:0x42cccd
  40e8a2:	push   DWORD PTR [ebp-0x28]
  40e8a5:	push   DWORD PTR [ebp-0x2c]
  40e8a8:	mov    eax,DWORD PTR [ebp-0x14]
  40e8ab:	call   eax
  40e8ad:	mov    eax,DWORD PTR [ebp-0x30]
  40e8b0:	mov    ecx,DWORD PTR ds:0x42c3f5
  40e8b6:	add    DWORD PTR [eax],ecx
  40e8b8:	pop    edi
  40e8b9:	pop    esi
  40e8ba:	leave  
  40e8bb:	ret    
  40e8bc:	push   ebp
  40e8bd:	mov    ebp,esp
  40e8bf:	sub    esp,0x18
  40e8c2:	dec    ecx
  40e8c3:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40e8ca:	adc    DWORD PTR ds:0x42a010,edx
  40e8d0:	lea    eax,[ebp+0x14]
  40e8d3:	xor    DWORD PTR ds:0x427014,ecx
  40e8d9:	mov    DWORD PTR [ebp-0x4],eax
  40e8dc:	push   esi
  40e8dd:	mov    ecx,DWORD PTR ds:0x42700c
  40e8e3:	sub    DWORD PTR ds:0x427014,ecx
  40e8e9:	mov    esi,0xf89c8585
  40e8ee:	add    DWORD PTR ds:0x429010,ecx
  40e8f4:	mov    DWORD PTR [ebp-0xc],esi
  40e8f7:	and    DWORD PTR ds:0x42600c,0x428008
  40e901:	lea    eax,[ebp-0xc]
  40e904:	sub    DWORD PTR ds:0x426004,0x427008
  40e90e:	mov    DWORD PTR [ebp-0x14],eax
  40e911:	mov    DWORD PTR ds:0x428014,0x19
  40e91b:	cmp    DWORD PTR ds:0x428014,0x0
  40e922:	je     0x40e964
  40e928:	cmp    DWORD PTR ds:0x428014,0x1e
  40e92f:	jge    0x40e964
  40e935:	jmp    0x40e950
  40e93a:	push   0x782f
  40e93f:	push   0x1dae
  40e944:	push   DWORD PTR [ebp-0x20]
  40e947:	push   DWORD PTR [ebp-0x14]
  40e94a:	call   DWORD PTR ds:0x42cee5
  40e950:	xor    edx,edx
  40e952:	add    edx,DWORD PTR ds:0x428014
  40e958:	dec    edx
  40e959:	mov    DWORD PTR ds:0x428014,edx
  40e95f:	jmp    0x40e91b
  40e964:	mov    eax,DWORD PTR [ebp-0xc]
  40e967:	adc    ecx,0x5feb
  40e96d:	mov    edx,DWORD PTR [ebp-0x14]
  40e970:	adc    DWORD PTR ds:0x429004,ebx
  40e976:	mov    ecx,0x751089f
  40e97b:	adc    DWORD PTR ds:0x427014,0x429018
  40e985:	xor    eax,ecx
  40e987:	and    DWORD PTR ds:0x427000,0x426018
  40e991:	add    eax,0x3272e6
  40e996:	adc    DWORD PTR ds:0x427018,0x428004
  40e9a0:	mov    DWORD PTR [edx],eax
  40e9a2:	mov    eax,ds:0x42c1f1
  40e9a7:	xor    DWORD PTR ds:0x42700c,ecx
  40e9ad:	mov    edx,DWORD PTR [ebp-0x4]
  40e9b0:	mov    eax,DWORD PTR [eax]
  40e9b2:	or     DWORD PTR ds:0x42a01c,0x42900c
  40e9bc:	add    eax,DWORD PTR [edx]
  40e9be:	xor    DWORD PTR ds:0x42700c,0x6314
  40e9c8:	push   edi
  40e9c9:	mov    DWORD PTR [ebp-0x8],eax
  40e9cc:	and    DWORD PTR ds:0x42a00c,0x0
  40e9d6:	jmp    0x40e9e9
  40e9db:	xor    eax,eax
  40e9dd:	or     eax,DWORD PTR ds:0x42a00c
  40e9e3:	inc    eax
  40e9e4:	mov    ds:0x42a00c,eax
  40e9e9:	cmp    DWORD PTR ds:0x42a00c,0x15
  40e9f0:	jae    0x40ea2e
  40e9f6:	cmp    DWORD PTR ds:0x42a00c,0x5
  40e9fd:	jb     0x40ea2e
  40ea03:	jmp    0x40ea11
  40ea08:	push   DWORD PTR [ebp-0x14]
  40ea0b:	call   DWORD PTR ds:0x42cee9
  40ea11:	cmp    DWORD PTR ds:0x42a00c,0x4
  40ea18:	jne    0x40ea29
  40ea1e:	mov    eax,ds:0x42a00c
  40ea23:	inc    eax
  40ea24:	mov    ds:0x42a00c,eax
  40ea29:	jmp    0x40e9db
  40ea2e:	mov    edi,DWORD PTR [ebp+0x8]
  40ea31:	mov    eax,ds:0x42c379
  40ea36:	add    DWORD PTR ds:0x426020,0x42900c
  40ea40:	mov    eax,DWORD PTR [eax+0x198]
  40ea46:	sbb    DWORD PTR ds:0x42a01c,ebx
  40ea4c:	xor    edi,ecx
  40ea4e:	mov    edx,0x3272e6
  40ea53:	add    edi,edx
  40ea55:	mov    DWORD PTR ds:0x42a01c,0x3cf8
  40ea5f:	cmp    DWORD PTR [eax],edi
  40ea61:	mov    DWORD PTR ds:0x42601c,0x596
  40ea6b:	je     0x40ea78
  40ea71:	mov    eax,DWORD PTR [eax]
  40ea73:	jmp    0x4111a5
  40ea78:	mov    DWORD PTR ds:0x428018,0xd03
  40ea82:	mov    eax,DWORD PTR [ebp+0x18]
  40ea85:	mov    DWORD PTR ds:0x42800c,0x3b7e
  40ea8f:	cmp    eax,esi
  40ea91:	mov    DWORD PTR ds:0x42a014,0x2f47
  40ea9b:	jne    0x40eaab
  40eaa1:	push   0xf89c8584
  40eaa6:	jmp    0x411194
  40eaab:	not    eax
  40eaad:	mov    esi,DWORD PTR [ebp+0x18]
  40eab0:	mov    eax,0xf89c8583
  40eab5:	mov    DWORD PTR ds:0x42a000,0x3c06
  40eabf:	cmp    esi,eax
  40eac1:	jne    0x411184
  40eac7:	mov    eax,DWORD PTR [ebp+0x10]
  40eaca:	xor    eax,ecx
  40eacc:	movzx  esi,BYTE PTR ds:0x426024
  40ead3:	sub    DWORD PTR ds:0x42901c,esi
  40ead9:	add    eax,edx
  40eadb:	and    DWORD PTR ds:0x429014,0x0
  40eae5:	xor    esi,esi
  40eae7:	or     esi,DWORD PTR ds:0x429014
  40eaed:	inc    esi
  40eaee:	mov    DWORD PTR ds:0x429014,esi
  40eaf4:	cmp    DWORD PTR ds:0x429014,0x24
  40eafb:	ja     0x40eb1e
  40eb01:	jmp    0x40eb11
  40eb06:	push   0x426000
  40eb0b:	call   DWORD PTR ds:0x42ceed
  40eb11:	cmp    DWORD PTR ds:0x429014,0x1e
  40eb18:	jb     0x40eae5
  40eb1e:	mov    DWORD PTR [ebp-0x18],eax
  40eb21:	mov    DWORD PTR ds:0x42a018,0x19
  40eb2b:	cmp    DWORD PTR ds:0x42a018,0x0
  40eb32:	je     0x40eb66
  40eb38:	cmp    DWORD PTR ds:0x42a018,0x1c
  40eb3f:	jge    0x40eb66
  40eb45:	jmp    0x40eb53
  40eb4a:	push   DWORD PTR [ebp-0x20]
  40eb4d:	call   DWORD PTR ds:0x42cef1
  40eb53:	xor    eax,eax
  40eb55:	xor    eax,DWORD PTR ds:0x42a018
  40eb5b:	dec    eax
  40eb5c:	mov    ds:0x42a018,eax
  40eb61:	jmp    0x40eb2b
  40eb66:	mov    eax,DWORD PTR [ebp+0xc]
  40eb69:	mov    esi,DWORD PTR [ebp-0x8]
  40eb6c:	sbb    DWORD PTR ds:0x426010,0x426008
  40eb76:	xor    eax,ecx
  40eb78:	add    eax,edx
  40eb7a:	imul   eax,DWORD PTR [esi]
  40eb7d:	mov    esi,DWORD PTR [ebp+0x8]
  40eb80:	and    DWORD PTR ds:0x42a000,0x426014
  40eb8a:	xor    esi,ecx
  40eb8c:	add    esi,edx
  40eb8e:	mov    DWORD PTR ds:0x428008,0x47a1
  40eb98:	cmp    esi,eax
  40eb9a:	mov    DWORD PTR ds:0x42900c,edi
  40eba0:	mov    eax,DWORD PTR [ebp-0x4]
  40eba3:	mov    DWORD PTR ds:0x42a014,0x3b7f
  40ebad:	push   ebx
  40ebae:	je     0x411013
  40ebb4:	mov    esi,DWORD PTR [ebp-0x18]
  40ebb7:	add    DWORD PTR ds:0x428018,0x42801c
  40ebc1:	add    DWORD PTR [eax],esi
  40ebc3:	mov    eax,DWORD PTR [ebp-0x4]
  40ebc6:	mov    DWORD PTR ds:0x42900c,0x13
  40ebd0:	cmp    DWORD PTR ds:0x42900c,0x0
  40ebd7:	je     0x40ec2b
  40ebdd:	cmp    DWORD PTR ds:0x42900c,0x8
  40ebe4:	jge    0x40ec2b
  40ebea:	jmp    0x40ebfd
  40ebef:	push   DWORD PTR [ebp-0x10]
  40ebf2:	push   0x11d4
  40ebf7:	call   DWORD PTR ds:0x42cec9
  40ebfd:	cmp    DWORD PTR ds:0x42900c,0x9
  40ec04:	jne    0x40ec17
  40ec0a:	mov    esi,DWORD PTR ds:0x42900c
  40ec10:	dec    esi
  40ec11:	mov    DWORD PTR ds:0x42900c,esi
  40ec17:	xor    esi,esi
  40ec19:	or     esi,DWORD PTR ds:0x42900c
  40ec1f:	dec    esi
  40ec20:	mov    DWORD PTR ds:0x42900c,esi
  40ec26:	jmp    0x40ebd0
  40ec2b:	mov    esi,DWORD PTR [ebp+0xc]
  40ec2e:	xor    esi,ecx
  40ec30:	add    esi,edx
  40ec32:	sbb    DWORD PTR ds:0x428008,0x429008
  40ec3c:	imul   esi,DWORD PTR [eax]
  40ec3f:	jmp    0x411002
  40ec44:	imul   ecx,DWORD PTR [esi],0x38
  40ec47:	rol    DWORD PTR ds:0x8b8a73b7,0xe9
  40ec4e:	pop    es
  40ec4f:	jl     0x40eccf
  40ec51:	pop    ecx
  40ec52:	xchg   ebp,eax
  40ec53:	or     al,0x22
  40ec55:	shl    DWORD PTR [eax+0x70],0xda
  40ec59:	pop    edi
  40ec5a:	jo     0x40eccc
  40ec5c:	cdq    
  40ec5d:	jae    0x40ebe2
  40ec5f:	aad    0xaa
  40ec61:	push   ebx
  40ec62:	sub    eax,0xdb7977cc
  40ec67:	mov    esp,esi
  40ec69:	push   ebx
  40ec6a:	into   
  40ec6b:	fst    DWORD PTR [esi+esi*4+0x7af52382]
  40ec72:	ds pop es
  40ec74:	and    dl,BYTE PTR [esi]
  40ec76:	lahf   
  40ec77:	pop    ebx
  40ec78:	stos   DWORD PTR es:[edi],eax
  40ec79:	dec    ebp
  40ec7a:	ror    BYTE PTR [edi-0x69e36bf5],cl
  40ec80:	xchg   edi,eax
  40ec81:	hlt    
  40ec82:	(bad)  
  40ec83:	jp     0x40ec80
  40ec85:	cmovs  ecx,DWORD PTR ds:0x1b91bc9a
  40ec8c:	push   ds
  40ec8d:	jns    0x40ecdd
  40ec8f:	xchg   esi,eax
  40ec90:	fst    QWORD PTR [esi-0xb]
  40ec93:	scas   eax,DWORD PTR es:[edi]
  40ec94:	sbb    ecx,edi
  40ec96:	lods   eax,DWORD PTR ds:[esi]
  40ec97:	mov    ah,0x9a
  40ec99:	pop    ss
  40ec9a:	cmc    
  40ec9b:	adc    cl,BYTE PTR ds:0xfa3b6d8b
  40eca1:	inc    esp
  40eca2:	push   esp
  40eca3:	sbb    DWORD PTR [ebp+0x38],0x14
  40eca7:	dec    ebp
  40eca8:	xor    DWORD PTR ds:0x827a2224,ecx
  40ecae:	push   edi
  40ecaf:	fstp   st(5)
  40ecb1:	mov    dh,0xaa
  40ecb3:	jmp    0x3d177a8b
  40ecb8:	fcmovu st,st(4)
  40ecba:	cdq    
  40ecbb:	hlt    
  40ecbc:	cwde   
  40ecbd:	(bad)
  40ecc0:	stc    
  40ecc1:	fcom   QWORD PTR [ebx+0x65e21829]
  40ecc7:	stos   BYTE PTR es:[edi],al
  40ecc8:	imul   DWORD PTR [ebx-0x6f]
  40eccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eccc:	jmp    0xac6:0x9575768
  40ecd3:	mov    ebx,0xfd274f73
  40ecd8:	mov    esi,0x9f8e3f4f
  40ecdd:	or     eax,0xd1e8166c
  40ece2:	cmp    esi,ebp
  40ece4:	loope  0x40eced
  40ece6:	retf   0x758c
  40ece9:	lds    edx,FWORD PTR [eax+ebp*8]
  40ecec:	pcmpeqd mm7,QWORD PTR [edx+0x5dfd4989]
  40ecf3:	cmp    al,0x15
  40ecf5:	and    BYTE PTR [esi+edx*2],bl
  40ecf8:	int    0x59
  40ecfa:	xor    dh,dl
  40ecfc:	dec    ecx
  40ecfd:	push   esp
  40ecfe:	xor    edx,edi
  40ed00:	mov    fs,eax
  40ed02:	adc    al,0xc9
  40ed04:	jmp    0xc75c88fc
  40ed09:	stos   DWORD PTR es:[edi],eax
  40ed0a:	dec    edx
  40ed0b:	mov    ch,0xe6
  40ed0d:	cmc    
  40ed0e:	sbb    BYTE PTR [edx+0x4e],ch
  40ed11:	or     eax,esi
  40ed13:	fwait
  40ed14:	lods   eax,DWORD PTR ds:[esi]
  40ed15:	sub    eax,0x29683d17
  40ed1a:	sahf   
  40ed1b:	out    0x33,eax
  40ed1d:	aaa    
  40ed1e:	mov    eax,0xb5c9acb
  40ed23:	loopne 0x40ecff
  40ed25:	jno    0x40ed95
  40ed27:	pop    edx
  40ed28:	iret   
  40ed29:	outs   dx,DWORD PTR ds:[esi]
  40ed2a:	and    eax,0xc9e8df42
  40ed2f:	out    0xb3,al
  40ed31:	jb     0x40ecef
  40ed33:	jp     0x40ed30
  40ed35:	mov    gs,WORD PTR [edi]
  40ed37:	mov    dl,0x9f
  40ed39:	or     DWORD PTR [esi+0x41a904c0],ebp
  40ed3f:	ins    BYTE PTR es:[edi],dx
  40ed40:	add    DWORD PTR [edx],edi
  40ed42:	sbb    DWORD PTR [edi-0x22],eax
  40ed45:	pop    ecx
  40ed46:	cmp    ch,BYTE PTR [ecx]
  40ed48:	mov    dl,0xd2
  40ed4a:	(bad)  
  40ed4b:	xchg   edx,eax
  40ed4c:	push   0x74
  40ed4e:	ficomp WORD PTR [ecx]
  40ed50:	arpl   WORD PTR [edx],cx
  40ed52:	cmp    al,0x7d
  40ed55:	cmc    
  40ed56:	test   DWORD PTR [eax+0x32cb68cd],esi
  40ed5c:	pusha  
  40ed5d:	push   edi
  40ed5e:	mov    ebp,0x33f2f7a3
  40ed63:	jmp    0x6229e83c
  40ed68:	adc    esi,edx
  40ed6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed6b:	pop    DWORD PTR [ecx+0x15]
  40ed6e:	fmul   DWORD PTR [edx+esi*1+0x629d9f8e]
  40ed75:	les    esi,FWORD PTR [edi]
  40ed77:	add    cl,BYTE PTR [ebx]
  40ed79:	icebp  
  40ed7a:	mov    ah,0x25
  40ed7c:	fwait
  40ed7d:	inc    eax
  40ed7e:	or     bl,ch
  40ed80:	pop    es
  40ed81:	adc    BYTE PTR [esi+0x39011e05],al
  40ed87:	jmp    0x34535536
  40ed8c:	call   0x6b29bbc6
  40ed91:	jle    0x40ed61
  40ed93:	popa   
  40ed94:	dec    esi
  40ed95:	sbb    ebp,DWORD PTR [edx+eiz*4]
  40ed98:	lds    esp,FWORD PTR [eax]
  40ed9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed9b:	push   esp
  40ed9c:	add    ebx,DWORD PTR [ecx-0x3f9736ec]
  40eda2:	in     al,0x7
  40eda4:	dec    edx
  40eda5:	stc    
  40eda6:	xchg   esp,eax
  40eda7:	dec    ebp
  40eda8:	or     eax,0x17c37fe5
  40edad:	jnp    0x40ed2f
  40edaf:	ins    BYTE PTR es:[edi],dx
  40edb0:	into   
  40edb1:	mov    ebx,eax
  40edb3:	fsubr  QWORD PTR [ebx-0x26]
  40edb6:	ins    BYTE PTR es:[edi],dx
  40edb7:	add    dh,ch
  40edb9:	lahf   
  40edba:	lea    edi,[ebp-0x2b]
  40edbd:	enter  0x9b5b,0xac
  40edc1:	cli    
  40edc2:	pop    edx
  40edc3:	jb     0x40edf1
  40edc5:	mov    esi,0x82f7e447
  40edca:	addr16 arpl bp,ax
  40edcd:	(bad)  
  40edcf:	int    0xb3
  40edd1:	cmp    ebp,DWORD PTR [ebp-0x2b0315c7]
  40edd7:	std    
  40edd8:	and    eax,0xcc25ed79
  40eddd:	xor    BYTE PTR [ecx+0x200cab29],cl
  40ede3:	sub    DWORD PTR [ecx-0xdec2634],ecx
  40ede9:	fwait
  40edea:	dec    edi
  40edeb:	xor    esp,DWORD PTR [edi]
  40eded:	adc    BYTE PTR [esi+0x194b85a5],dh
  40edf3:	ror    BYTE PTR [edi],cl
  40edf5:	stos   BYTE PTR es:[edi],al
  40edf6:	mov    ch,0x75
  40edf8:	xor    ebp,DWORD PTR [ecx-0x4]
  40edfb:	inc    edi
  40edfc:	and    bh,BYTE PTR [esi]
  40edfe:	js     0x40edf1
  40ee00:	xchg   ebp,eax
  40ee01:	clc    
  40ee02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee03:	loopne 0x40ee3f
  40ee05:	mov    bx,cs
  40ee08:	mov    ecx,fs
  40ee0a:	adc    eax,0x9d88feb5
  40ee0f:	cmp    BYTE PTR [ecx],dh
  40ee11:	fnstenv [ebx-0x367309fe]
  40ee17:	sti    
  40ee18:	mov    ds:0x3a5630f6,eax
  40ee1d:	icebp  
  40ee1e:	in     eax,0x14
  40ee20:	mov    BYTE PTR [edx],bh
  40ee22:	xchg   esp,esi
  40ee24:	mov    bh,BYTE PTR [edi]
  40ee26:	pop    edx
  40ee27:	fcom   QWORD PTR [eax-0x7b15fde7]
  40ee2d:	pop    edx
  40ee2e:	xor    eax,DWORD PTR [eax+0x2a66551]
  40ee34:	mov    ebp,ecx
  40ee36:	sub    BYTE PTR [ecx+ebx*4],dh
  40ee39:	out    0xa3,al
  40ee3b:	push   cs
  40ee3c:	mov    ecx,0xcf184e5a
  40ee41:	repz loopne 0x40eea2
  40ee44:	jp     0x40ee4b
  40ee46:	push   ebx
  40ee47:	arpl   WORD PTR [esi+0x3fd31eaa],dx
  40ee4d:	push   edi
  40ee4e:	lods   al,BYTE PTR ds:[esi]
  40ee4f:	adc    dh,bh
  40ee51:	arpl   sp,ax
  40ee53:	add    eax,0xe5f93e52
  40ee58:	int    0x71
  40ee5a:	int3   
  40ee5b:	xchg   edx,eax
  40ee5c:	dec    ecx
  40ee5d:	xchg   DWORD PTR [eax],esi
  40ee5f:	push   ds
  40ee60:	inc    edx
  40ee61:	inc    ebx
  40ee62:	enter  0xb4c6,0xa
  40ee66:	mov    ecx,DWORD PTR [ecx+0x11]
  40ee69:	push   ebp
  40ee6a:	or     ecx,DWORD PTR [ecx+0x7]
  40ee6d:	pop    esp
  40ee6e:	test   eax,0xa65871a0
  40ee73:	out    0x9c,al
  40ee75:	mov    esi,DWORD PTR [edi+0x2]
  40ee78:	or     dh,BYTE PTR [eax-0x67]
  40ee7b:	mov    cl,0xb6
  40ee7d:	sub    al,0xe
  40ee7f:	cdq    
  40ee80:	cmp    eax,0x93eca81e
  40ee85:	mov    ebp,0x6f930c9e
  40ee8a:	dec    ebp
  40ee8b:	int    0x64
  40ee8d:	cld    
  40ee8e:	xor    edi,DWORD PTR [esi+0x0]
  40ee91:	jle    0x40ee53
  40ee93:	and    al,0xf4
  40ee95:	(bad)
  40ee99:	pop    edx
  40ee9a:	mov    dl,0x1a
  40ee9c:	outs   dx,DWORD PTR ds:[esi]
  40ee9d:	mov    esi,0xa87bbf41
  40eea2:	mov    cl,0xf0
  40eea4:	xor    dl,0x3b
  40eea7:	daa    
  40eea8:	ror    eax,1
  40eeaa:	addr16 loop 0x40ef22
  40eead:	sbb    ah,dh
  40eeaf:	cmp    eax,0xce601820
  40eeb4:	fwait
  40eeb5:	inc    edi
  40eeb6:	scas   eax,DWORD PTR es:[edi]
  40eeb7:	les    ebx,FWORD PTR [edi]
  40eeb9:	and    BYTE PTR [ecx-0x49],0xb3
  40eebd:	iret   
  40eebe:	jg     0x40ef1d
  40eec0:	mov    ss,WORD PTR [ebx-0x4936838e]
  40eec6:	mov    bl,0x30
  40eec8:	jns    0x40eead
  40eeca:	aad    0x3b
  40eecc:	and    al,0x37
  40eece:	push   ebx
  40eecf:	sahf   
  40eed0:	inc    esp
  40eed1:	mov    dl,bh
  40eed3:	xlat   BYTE PTR ds:[ebx]
  40eed4:	or     BYTE PTR [edx-0x50],0xac
  40eed8:	push   es
  40eed9:	sti    
  40eeda:	mov    al,0xd6
  40eedc:	jns    0x40ef2b
  40eede:	enter  0x6bd1,0xcb
  40eee2:	fwait
  40eee3:	adc    eax,0x9144b078
  40eee8:	xor    ecx,esp
  40eeea:	dec    ecx
  40eeeb:	jbe    0x40eee2
  40eeed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeee:	jnp    0x40eeb7
  40eef0:	cmp    BYTE PTR [ebx],ah
  40eef2:	mov    ds:0xeff82085,al
  40eef7:	xchg   edx,eax
  40eef8:	jmp    0xb8031058
  40eefd:	test   cl,bl
  40eeff:	das    
  40ef00:	call   0xfa15:0x4f1d7b59
  40ef07:	push   es
  40ef08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef09:	lock xchg DWORD PTR [eax+0x3af35f93],edi
  40ef10:	stos   BYTE PTR es:[edi],al
  40ef11:	mov    ebx,0x7aba8e4a
  40ef16:	or     BYTE PTR [ebx+0x7e],0xff
  40ef1a:	inc    dl
  40ef1c:	fidiv  WORD PTR [ebx]
  40ef1e:	or     eax,0x6154831e
  40ef23:	ror    DWORD PTR [edi],cl
  40ef25:	imul   esp,DWORD PTR [edi-0x4c199f78],0xa4e035a1
  40ef2f:	aad    0xe5
  40ef31:	jnp    0x40ef9d
  40ef33:	mov    dh,0x8b
  40ef35:	dec    ebp
  40ef36:	(bad)  
  40ef37:	mov    ebp,0x4ef8b3f7
  40ef3c:	push   ecx
  40ef3d:	imul   ebx,DWORD PTR [ebp-0x5b89fd2e],0x352f7289
  40ef47:	bnd jne 0x40ef8b
  40ef4a:	and    DWORD PTR [ebx+0x45],ecx
  40ef4d:	mov    al,ds:0xdd8a05e2
  40ef52:	sti    
  40ef53:	fs cmp al,0xac
  40ef56:	adc    esi,DWORD PTR [edi+0x23]
  40ef59:	add    al,0xe9
  40ef5b:	xchg   ebx,eax
  40ef5c:	mov    edi,0x8ecfa02e
  40ef61:	cmp    al,0x5e
  40ef63:	clc    
  40ef64:	dec    ebx
  40ef65:	cmp    BYTE PTR [eax],dl
  40ef67:	(bad)
  40ef6a:	popf   
  40ef6b:	ss mov eax,0xd90194c4
  40ef71:	jno    0x40efac
  40ef73:	arpl   WORD PTR [ecx+0x71934be8],dx
  40ef79:	das    
  40ef7a:	sbb    eax,0x3dbdb0a6
  40ef7f:	rcr    BYTE PTR [edx],cl
  40ef81:	mov    bl,0xce
  40ef83:	lahf   
  40ef84:	xchg   edi,eax
  40ef85:	sbb    al,0xef
  40ef87:	add    bh,bh
  40ef89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef8a:	jmp    0x4adaba90
  40ef8f:	push   eax
  40ef90:	adc    edi,DWORD PTR [edx+0x2bd3db8a]
  40ef96:	push   0x1bb5a366
  40ef9b:	out    0x72,eax
  40ef9d:	out    0x67,eax
  40ef9f:	xchg   esp,eax
  40efa0:	sbb    ebx,esp
  40efa2:	aas    
  40efa3:	push   edx
  40efa4:	push   edi
  40efa5:	add    dl,BYTE PTR [edi+0x1c]
  40efa8:	mov    ds,esp
  40efaa:	push   ss
  40efab:	mov    DWORD PTR ds:0x596477dd,ebp
  40efb1:	call   0x1a0157be
  40efb6:	ret    0x141c
  40efb9:	mov    edx,0x64231562
  40efbe:	mov    edi,ebp
  40efc0:	mov    ds:0x70ac96c4,al
  40efc5:	xchg   esi,eax
  40efc6:	cmp    BYTE PTR [eax-0x4e114397],0xdb
  40efcd:	xchg   dl,dh
  40efcf:	inc    DWORD PTR [esi]
  40efd1:	pop    ebx
  40efd2:	adc    DWORD PTR [eax+0x41],edx
  40efd5:	sbb    al,0xe5
  40efd7:	pop    es
  40efd8:	sar    BYTE PTR [ecx-0x4a],cl
  40efdb:	jecxz  0x40efb3
  40efdd:	arpl   WORD PTR [ecx],di
  40efdf:	cmp    dh,dh
  40efe1:	sub    ah,BYTE PTR [ebp-0x7c]
  40efe4:	pop    eax
  40efe5:	jbe    0x40efb5
  40efe7:	mov    bl,0xc7
  40efe9:	sti    
  40efea:	xor    eax,0x5564d3f4
  40efef:	sti    
  40eff0:	(bad)  
  40eff1:	adc    al,BYTE PTR [edi+edi*2+0x6d]
  40eff5:	jg     0x40f001
  40eff7:	jmp    0x40efe6
  40eff9:	retf   0x72f3
  40effc:	dec    ebp
  40effd:	repnz test al,0x1
  40f000:	pop    esi
  40f001:	push   0xffffffdd
  40f003:	push   edx
  40f004:	mov    bh,BYTE PTR [ecx+0x399cc44a]
  40f00a:	xchg   ecx,eax
  40f00b:	sub    al,BYTE PTR [ecx-0x5f]
  40f00e:	icebp  
  40f00f:	jmp    0xb831b871
  40f014:	jb     0x40efb0
  40f016:	jge    0x40f067
  40f018:	mov    ebx,0xe7bbe5c4
  40f01d:	pop    ss
  40f01e:	mov    ecx,0xd8ab6ec4
  40f023:	mov    ecx,0x965c6e29
  40f028:	jge    0x40efb5
  40f02a:	lahf   
  40f02b:	(bad)  
  40f02c:	pop    ss
  40f02d:	sub    eax,0xe5f1d24c
  40f032:	xor    DWORD PTR [ebx-0x5d1dc4e4],eax
  40f038:	clc    
  40f039:	gs retf 0x7884
  40f03d:	test   al,0xd2
  40f03f:	xchg   ecx,eax
  40f040:	int3   
  40f041:	mov    bl,0xc1
  40f043:	adc    edi,edx
  40f045:	mov    ah,0x5a
  40f047:	test   esp,ecx
  40f049:	mov    ebx,0xd4b493f6
  40f04e:	push   ebx
  40f04f:	loop   0x40f095
  40f051:	fxtract 
  40f053:	aam    0xf0
  40f055:	xlat   BYTE PTR ds:[ebx]
  40f056:	lea    ebx,[eax]
  40f058:	sub    BYTE PTR [esi+0x15af2e5a],ch
  40f05e:	mov    ebx,0xb7c34975
  40f063:	xor    BYTE PTR [esp+ecx*2+0x37],al
  40f067:	xchg   ebx,eax
  40f068:	mov    ebp,0x769697a1
  40f06d:	mov    al,ds:0xd880ffaa
  40f072:	jl     0x40f08d
  40f074:	adc    ecx,esp
  40f076:	popf   
  40f077:	lahf   
  40f078:	inc    ebx
  40f079:	sub    ch,ah
  40f07b:	dec    eax
  40f07c:	sub    al,ah
  40f07e:	mov    ebp,0x2d357e7e
  40f083:	xchg   edi,eax
  40f084:	out    0x94,eax
  40f086:	pusha  
  40f087:	mov    ebp,0x826a1735
  40f08c:	div    BYTE PTR [edx]
  40f08e:	retf   
  40f08f:	sbb    cl,BYTE PTR [esi+ecx*1+0x7b3766fe]
  40f096:	daa    
  40f097:	push   edi
  40f098:	call   0xe293fd9
  40f09d:	push   ecx
  40f09e:	mov    ah,0x2f
  40f0a0:	fisubr DWORD PTR [esi]
  40f0a2:	xor    ebp,ebx
  40f0a4:	pushf  
  40f0a5:	adc    edx,edx
  40f0a7:	pop    ebx
  40f0a8:	mov    al,ds:0xe6c70853
  40f0ad:	(bad)  
  40f0ae:	cdq    
  40f0af:	cs pop ds
  40f0b1:	jmp    0x6247:0x6b21c508
  40f0b8:	cld    
  40f0b9:	sahf   
  40f0ba:	and    BYTE PTR [eax-0x32],al
  40f0bd:	pushf  
  40f0be:	ja     0x40f0e2
  40f0c0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40f0c2:	cdq    
  40f0c3:	add    eax,0xf6993865
  40f0c8:	ror    BYTE PTR [eiz*8-0x72f196e1],1
  40f0cf:	mov    eax,0x6e91a58a
  40f0d4:	idiv   DWORD PTR [ebx+0x49667d5e]
  40f0da:	push   cs
  40f0db:	adc    al,0x99
  40f0dd:	into   
  40f0de:	neg    BYTE PTR [esi+0x78af1874]
  40f0e4:	dec    BYTE PTR [ebp-0x19]
  40f0e7:	push   0xfffffff2
  40f0e9:	rsm    
  40f0eb:	mov    al,0x4
  40f0ed:	cmp    DWORD PTR [edi+0x63],edx
  40f0f0:	rcr    BYTE PTR [ebx+0x22],1
  40f0f3:	aaa    
  40f0f4:	mov    BYTE PTR [esi-0x15],cl
  40f0f7:	xlat   BYTE PTR ds:[ebx]
  40f0f8:	mov    cl,0x45
  40f0fa:	jge    0x40f165
  40f0fc:	cmp    al,BYTE PTR [eax-0x43]
  40f0ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f100:	push   ebp
  40f101:	rcr    BYTE PTR [esi-0x7a],1
  40f104:	sub    ch,BYTE PTR ds:0x99ad9dad
  40f10a:	repnz cmp ecx,esp
  40f10d:	pushf  
  40f10e:	add    eax,0x15d949ce
  40f113:	fs push 0x75
  40f116:	mov    dh,0x6b
  40f118:	(bad)  
  40f119:	mov    ch,dh
  40f11b:	cli    
  40f11c:	mov    DWORD PTR [edx+0x2f],esp
  40f11f:	dec    edi
  40f120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f121:	(bad)  
  40f122:	sub    al,0x24
  40f124:	push   ds
  40f125:	mov    DWORD PTR [ecx-0x78747c04],eax
  40f12b:	or     eax,0xa114b8d6
  40f130:	int3   
  40f131:	mov    ch,0x9d
  40f133:	xor    DWORD PTR [ebp+0x1dc5bd4a],edi
  40f139:	cwde   
  40f13a:	xor    dl,BYTE PTR [eax-0x782268e0]
  40f140:	jne    0x40f192
  40f142:	dec    bp
  40f144:	and    BYTE PTR ds:0x9f383c1,bh
  40f14a:	and    al,0x1c
  40f14c:	pusha  
  40f14d:	push   edx
  40f14e:	test   dh,ah
  40f150:	lahf   
  40f151:	mov    ecx,0x758b0b57
  40f156:	xchg   esi,eax
  40f157:	sub    al,BYTE PTR [esi-0x6e]
  40f15a:	(bad)  
  40f15b:	xor    al,0x2
  40f15d:	mov    edx,0x9025606
  40f162:	clc    
  40f163:	jle    0x40f1e3
  40f165:	add    al,0x51
  40f167:	pop    edx
  40f168:	mov    bl,0xff
  40f16a:	add    al,0x93
  40f16c:	adc    al,0x9
  40f16e:	push   edx
  40f16f:	jmp    0x40f195
  40f171:	cmp    al,0xad
  40f173:	stc    
  40f174:	outs   dx,DWORD PTR ds:[esi]
  40f175:	cdq    
  40f176:	or     bh,dl
  40f178:	out    0x78,al
  40f17a:	aaa    
  40f17b:	cmc    
  40f17c:	test   eax,0x5d3c938e
  40f181:	xchg   edi,eax
  40f182:	push   ds
  40f183:	shl    DWORD PTR [ebp+0x5e],cl
  40f186:	and    DWORD PTR [edi+0x77ae6294],esi
  40f18c:	lock inc edx
  40f18e:	leave  
  40f18f:	inc    esp
  40f190:	cmp    al,0xa
  40f192:	push   0xffffff80
  40f194:	inc    eax
  40f195:	aaa    
  40f196:	cmp    BYTE PTR [esi],al
  40f198:	(bad)  
  40f199:	mov    BYTE PTR [edi],al
  40f19b:	imul   edx,ebx,0x4b
  40f19e:	popf   
  40f19f:	xchg   esi,eax
  40f1a0:	lods   al,BYTE PTR ds:[esi]
  40f1a1:	add    eax,0xda2a70d9
  40f1a6:	and    BYTE PTR [ebx],ch
  40f1a8:	dec    ebx
  40f1a9:	mov    eax,0x3cdd0e03
  40f1ae:	retf   0xbe0f
  40f1b1:	hlt    
  40f1b2:	out    dx,al
  40f1b3:	psrad  mm0,QWORD PTR [eax]
  40f1b6:	mov    edi,0x60611094
  40f1bb:	cmp    ecx,DWORD PTR [edx+0x5e0c5d4e]
  40f1c1:	mov    eax,0xd54aaae6
  40f1c6:	xchg   edx,eax
  40f1c7:	push   esi
  40f1c8:	dec    eax
  40f1c9:	jl     0x40f232
  40f1cb:	sti    
  40f1cc:	in     al,0x65
  40f1ce:	nop
  40f1cf:	dec    edx
  40f1d0:	mov    eax,0xe044cc24
  40f1d5:	call   0xf673:0x4278f7f3
  40f1dc:	(bad)  
  40f1dd:	xor    bl,BYTE PTR [eax-0x65]
  40f1e0:	dec    bp
  40f1e2:	push   ds
  40f1e3:	lods   al,BYTE PTR ds:[esi]
  40f1e4:	inc    esp
  40f1e5:	push   ebx
  40f1e6:	out    dx,eax
  40f1e7:	mov    esi,0x26906a4d
  40f1ec:	addr16 fs sub ebp,edx
  40f1f0:	or     bl,BYTE PTR [ebp+esi*8-0x13deb35]
  40f1f7:	inc    ecx
  40f1f8:	inc    ebx
  40f1f9:	xchg   edx,eax
  40f1fa:	in     eax,dx
  40f1fb:	imul   esi,DWORD PTR [edi-0x3f],0x63
  40f1ff:	call   0x56d1b768
  40f204:	sbb    al,0x94
  40f206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f207:	mov    ebp,0xded48df9
  40f20c:	push   edx
  40f20d:	sbb    WORD PTR [edx-0x25],sp
  40f211:	lods   al,BYTE PTR ds:[esi]
  40f212:	sub    DWORD PTR [ecx+ebp*8+0x5f],eax
  40f216:	shr    BYTE PTR [ebx+ebx*2],1
  40f219:	mov    esi,0x24bb8b4
  40f21e:	cmp    BYTE PTR [ecx],cl
  40f220:	jo     0x40f27b
  40f222:	xchg   BYTE PTR [eax],ah
  40f224:	sbb    al,0xab
  40f226:	rcl    BYTE PTR [ecx-0x3d546053],cl
  40f22c:	js     0x40f27b
  40f22e:	lods   eax,DWORD PTR ds:[esi]
  40f22f:	scas   eax,DWORD PTR es:[edi]
  40f230:	arpl   WORD PTR [ebp-0x289c0e93],ax
  40f236:	shr    BYTE PTR [edx],1
  40f238:	xor    ecx,DWORD PTR [ecx+0x7837ffab]
  40f23e:	das    
  40f23f:	out    0xd2,eax
  40f241:	ffreep st(4)
  40f243:	out    0x1d,eax
  40f245:	push   ebp
  40f246:	mov    edx,0xe35d461f
  40f24b:	mov    esp,0x81efd88
  40f250:	cld    
  40f251:	out    0xe1,eax
  40f253:	xor    dl,bh
  40f255:	sub    al,0x9d
  40f257:	xchg   esi,eax
  40f258:	sbb    DWORD PTR [ecx+0x6c],0x57
  40f25c:	test   al,0x5c
  40f25e:	xor    al,0x87
  40f260:	sar    DWORD PTR ds:0x662aee51,0xc4
  40f267:	imul   ebx,DWORD PTR [ebx+eax*8-0x6c],0xffffff8a
  40f26c:	dec    eax
  40f26d:	pop    edx
  40f26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f26f:	call   0xc361a404
  40f274:	inc    eax
  40f275:	mov    ds:0x1bc370c7,al
  40f27a:	clc    
  40f27b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f27c:	fidivr WORD PTR [ebx+0x1f]
  40f27f:	inc    DWORD PTR [edx-0x74]
  40f282:	xor    BYTE PTR [ecx+0x442b79eb],0xc2
  40f289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28a:	mov    ecx,0xd7a12827
  40f28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f290:	dec    edx
  40f291:	les    edi,FWORD PTR [esi+0x29]
  40f294:	aam    0x10
  40f296:	inc    ebp
  40f297:	call   0x3fe3:0x52c1b8c5
  40f29e:	cmp    cl,cl
  40f2a0:	ds popf 
  40f2a2:	and    DWORD PTR [edi-0x39],esp
  40f2a5:	ins    BYTE PTR es:[edi],dx
  40f2a6:	xchg   DWORD PTR [esi+0x63],esi
  40f2a9:	jg     0x40f2a6
  40f2ab:	call   FWORD PTR [esi]
  40f2ad:	jmp    0x40f2ae
  40f2af:	dec    ebp
  40f2b0:	(bad)  
  40f2b1:	in     eax,dx
  40f2b2:	into   
  40f2b3:	or     esi,DWORD PTR [eax]
  40f2b5:	mul    dl
  40f2b7:	mov    bh,0x33
  40f2b9:	pop    ds
  40f2ba:	dec    ebx
  40f2bb:	pusha  
  40f2bc:	push   es
  40f2bd:	scas   al,BYTE PTR es:[edi]
  40f2be:	pop    esi
  40f2bf:	jo     0x40f299
  40f2c1:	add    BYTE PTR [edi-0x5d],cl
  40f2c4:	adc    ecx,0xffffffe3
  40f2c7:	packuswb mm1,QWORD PTR ds:0xc1f73863
  40f2ce:	(bad)  
  40f2cf:	aas    
  40f2d0:	pop    ebx
  40f2d1:	das    
  40f2d2:	xor    eax,0x7ea9f967
  40f2d7:	jl     0x40f2f6
  40f2d9:	lock pop edi
  40f2db:	stos   BYTE PTR es:[edi],al
  40f2dc:	stos   BYTE PTR es:[edi],al
  40f2dd:	pop    ecx
  40f2de:	mov    ah,0x81
  40f2e0:	into   
  40f2e1:	rcr    edx,1
  40f2e3:	mul    DWORD PTR [eax-0x20]
  40f2e6:	sbb    ebp,esi
  40f2e8:	mov    eax,ds:0x446159b
  40f2ed:	int3   
  40f2ee:	ret    0x17e4
  40f2f1:	fldenv [edx-0x39]
  40f2f4:	jb     0x40f2b7
  40f2f6:	xchg   DWORD PTR [ecx],ebp
  40f2f8:	jns    0x40f290
  40f2fa:	ins    BYTE PTR es:[edi],dx
  40f2fb:	int    0x98
  40f2fd:	or     eax,0xe299af48
  40f302:	call   0xd5ea906e
  40f307:	out    dx,al
  40f308:	mov    bh,0xb6
  40f30a:	loope  0x40f365
  40f30c:	pop    ebx
  40f30d:	es jnp 0x40f309
  40f310:	ret    
  40f311:	test   DWORD PTR [ebx-0x5e],ebp
  40f314:	sbb    DWORD PTR [ebp-0x6bf2eaa9],eax
  40f31a:	or     ecx,DWORD PTR [edx]
  40f31c:	in     al,0xaa
  40f31e:	les    esi,FWORD PTR [eax-0x30]
  40f321:	xchg   ecx,eax
  40f322:	jo     0x40f2f3
  40f324:	enter  0x6bbc,0xd6
  40f328:	cmp    ebx,DWORD PTR [ecx-0x50951018]
  40f32e:	mov    al,ds:0x976d632e
  40f333:	aaa    
  40f334:	xor    esi,esi
  40f336:	fdiv   DWORD PTR [edx+0xbcd8d4f]
  40f33c:	and    eax,0x2eb0ff68
  40f341:	retf   0xcec4
  40f344:	shl    BYTE PTR [ebx-0x6d],0x67
  40f348:	sbb    eax,0x19b7bcde
  40f34d:	lds    edi,FWORD PTR ds:0x200d44b5
  40f353:	retf   
  40f354:	or     al,0xcc
  40f356:	scas   eax,DWORD PTR es:[edi]
  40f357:	pop    ss
  40f358:	es sub ch,bl
  40f35b:	jmp    DWORD PTR [ebx]
  40f35d:	push   ecx
  40f35e:	shl    cl,1
  40f360:	stc    
  40f361:	mov    ds:0xeb2520a8,al
  40f366:	addr16 es dec eax
  40f369:	mov    bh,BYTE PTR ds:0x7bfd3f65
  40f36f:	jle    0x40f3aa
  40f371:	cld    
  40f372:	mov    WORD PTR [esi-0x19],es
  40f375:	xchg   ebp,eax
  40f376:	dec    edi
  40f377:	bnd ja 0x40f32a
  40f37a:	popf   
  40f37b:	cmp    bl,BYTE PTR [ecx-0x5e933801]
  40f381:	cwde   
  40f382:	xor    al,0x4c
  40f384:	inc    eax
  40f385:	mov    ah,0xd0
  40f387:	inc    eax
  40f388:	cmp    DWORD PTR [ebx-0x3bb40527],eax
  40f38e:	fist   DWORD PTR [esi-0x176631fe]
  40f394:	and    al,0xf3
  40f396:	in     al,0xd8
  40f398:	(bad)  
  40f399:	shl    BYTE PTR [ebx-0x7aa797a0],0x1a
  40f3a0:	addr16 mov bl,ah
  40f3a3:	aad    0x27
  40f3a5:	in     eax,0xad
  40f3a7:	jp     0x40f3db
  40f3a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3aa:	jnp    0x40f405
  40f3ac:	push   cs
  40f3ad:	mov    ch,0x3d
  40f3af:	aas    
  40f3b0:	jmp    0x40f3ad
  40f3b2:	mov    esi,0xc415dfc5
  40f3b7:	out    0xb,eax
  40f3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ba:	fwait
  40f3bb:	dec    ebp
  40f3bc:	(bad)  
  40f3bd:	dec    esp
  40f3be:	sbb    bh,bh
  40f3c0:	push   0x51cfa8b8
  40f3c5:	mov    ds:0x74bf207b,al
  40f3ca:	out    0x41,eax
  40f3cc:	lea    ecx,[ecx]
  40f3ce:	cmp    eax,0x46c30dcb
  40f3d3:	push   ds
  40f3d4:	sub    al,0xa6
  40f3d6:	sbb    ch,0x7c
  40f3d9:	out    0x75,eax
  40f3db:	stos   BYTE PTR es:[edi],al
  40f3dc:	adc    BYTE PTR [edi],al
  40f3de:	nop
  40f3df:	jo     0x40f451
  40f3e1:	inc    edi
  40f3e2:	fnstcw WORD PTR [eax]
  40f3e4:	mov    ch,0x2d
  40f3e6:	popf   
  40f3e7:	push   ecx
  40f3e8:	sbb    eax,0x15a0fed4
  40f3ed:	into   
  40f3ee:	scas   eax,DWORD PTR es:[edi]
  40f3ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3f0:	mov    edx,0x3dd9ffd2
  40f3f5:	or     DWORD PTR [eax+0xd57ffb5],ecx
  40f3fb:	(bad)  
  40f3fc:	jle    0x40f3c9
  40f3fe:	jmp    0x7ece:0xe57ca5e4
  40f405:	push   cs
  40f406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f407:	daa    
  40f408:	or     esi,0xe089662d
  40f40e:	xchg   ebx,eax
  40f40f:	dec    edi
  40f410:	imul   ebp,DWORD PTR ds:0x6da33c79,0xffffffe3
  40f417:	xor    al,0x42
  40f419:	fwait
  40f41a:	test   DWORD PTR [ecx+eiz*8+0xcb0616c],ecx
  40f421:	sahf   
  40f422:	push   es
  40f423:	mov    al,0x6b
  40f425:	(bad)  
  40f426:	push   edx
  40f427:	aas    
  40f428:	jp     0x40f3f2
  40f42a:	xlat   BYTE PTR ds:[ebx]
  40f42b:	enter  0x9457,0x60
  40f42f:	mov    BYTE PTR [ebx],ah
  40f431:	pop    ebp
  40f432:	stos   DWORD PTR es:[edi],eax
  40f433:	in     eax,dx
  40f434:	cmp    al,0xb0
  40f437:	aaa    
  40f438:	fcmovnu st,st(3)
  40f43a:	dec    ecx
  40f43b:	retf   0x193b
  40f43e:	pop    edx
  40f43f:	pop    edx
  40f440:	ins    BYTE PTR es:[edi],dx
  40f441:	mov    cl,BYTE PTR [ebx]
  40f443:	jae    0x40f450
  40f445:	hlt    
  40f446:	xchg   DWORD PTR [edx],eax
  40f448:	enter  0xeb41,0x67
  40f44c:	cmp    bh,BYTE PTR [eax+esi*2]
  40f44f:	adc    BYTE PTR [ebp-0x5c],ch
  40f452:	mov    esp,0x4f4dc0f
  40f457:	mov    al,0xe1
  40f459:	push   ds
  40f45a:	mov    ebx,DWORD PTR cs:[edx]
  40f45d:	sub    DWORD PTR [eax],edx
  40f45f:	sbb    al,0xd
  40f461:	inc    edx
  40f462:	jmp    0xd862:0xfc957ae4
  40f469:	clc    
  40f46a:	jae    0x40f42b
  40f46c:	push   0x36
  40f46e:	ja     0x40f465
  40f470:	ss call 0x249c:0x95c8aba2
  40f478:	push   0xffffffd0
  40f47a:	xchg   edi,eax
  40f47b:	in     al,0x2d
  40f47d:	push   ebp
  40f47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f47f:	stos   BYTE PTR es:[edi],al
  40f480:	xlat   BYTE PTR ds:[ebx]
  40f481:	js     0x40f435
  40f483:	fdivr  DWORD PTR [edx+0x2d]
  40f486:	xor    edx,0xffffffd1
  40f489:	mov    ch,0x14
  40f48b:	jae    0x40f468
  40f48d:	mov    al,ds:0x3d82e9bf
  40f492:	pop    ecx
  40f493:	cmp    edx,DWORD PTR [esi-0x4d77cbff]
  40f499:	xchg   ebx,eax
  40f49a:	shr    BYTE PTR [ecx],1
  40f49c:	cli    
  40f49d:	add    al,0x7d
  40f49f:	mov    dh,0xa0
  40f4a1:	sub    ch,BYTE PTR [esi-0x2]
  40f4a4:	adc    al,0xef
  40f4a6:	mov    bl,ah
  40f4a8:	aam    0xe5
  40f4aa:	push   edi
  40f4ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4ac:	and    eax,0x963eac30
  40f4b1:	or     BYTE PTR ds:0x2ee612fe,al
  40f4b7:	dec    esp
  40f4b8:	mov    dh,0xbc
  40f4ba:	(bad)  
  40f4bb:	(bad)  
  40f4bc:	fdivr  QWORD PTR [ecx-0x48]
  40f4bf:	push   ds
  40f4c0:	adc    eax,edx
  40f4c2:	sub    eax,0x59b64a28
  40f4c7:	jmp    0x40f494
  40f4c9:	mov    al,0xe
  40f4cb:	xchg   esp,eax
  40f4cc:	sahf   
  40f4cd:	idiv   DWORD PTR [edx+0x7c]
  40f4d0:	stc    
  40f4d1:	imul   esi,edi,0x9056c50c
  40f4d7:	dec    edx
  40f4d8:	mov    ch,0x91
  40f4da:	(bad)  
  40f4db:	repz push edx
  40f4dd:	xchg   edx,eax
  40f4de:	xchg   esi,eax
  40f4df:	inc    esp
  40f4e0:	add    al,0x8b
  40f4e2:	lea    edi,[ebp+0x1bf3e783]
  40f4e8:	je     0x40f4f4
  40f4ea:	mul    BYTE PTR [eax+0x38]
  40f4ed:	icebp  
  40f4ee:	inc    eax
  40f4ef:	cld    
  40f4f0:	or     al,0x6c
  40f4f2:	inc    edx
  40f4f3:	mov    bl,0x12
  40f4f5:	push   esi
  40f4f6:	mov    ds:0x254ba365,al
  40f4fb:	mov    ds:0x33c82a31,al
  40f500:	test   DWORD PTR [ebp-0x34],ebx
  40f503:	fldcw  WORD PTR [ebp+0x5b00a55b]
  40f509:	push   0x23
  40f50b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f50c:	inc    eax
  40f50d:	cli    
  40f50e:	xrelease mov DWORD PTR [ebx+0x49],eax
  40f512:	(bad)  
  40f513:	push   ecx
  40f515:	popa   
  40f516:	sub    eax,0x57bf2e7c
  40f51b:	sub    ebp,DWORD PTR [edx]
  40f51d:	mov    cl,0xa9
  40f51f:	nop
  40f520:	pusha  
  40f521:	aaa    
  40f522:	mov    es,eax
  40f524:	mov    bl,0x6
  40f526:	leave  
  40f527:	pushf  
  40f528:	jmp    0xe8f31bd8
  40f52d:	push   0x5846d1d9
  40f532:	mov    ah,0xa1
  40f534:	cmp    esi,edi
  40f536:	ret    
  40f537:	popa   
  40f538:	xchg   esi,eax
  40f539:	cmp    BYTE PTR [edx+0x5e],dl
  40f53c:	sbb    edi,edi
  40f53e:	es mov ah,0xb
  40f541:	fstp   st(2)
  40f543:	push   0xb4c4091f
  40f548:	mov    ebx,DWORD PTR [ebx+0x2b]
  40f54b:	cs dec esp
  40f54d:	xor    BYTE PTR [eax-0x11],dl
  40f550:	cmp    eax,0xd96801d5
  40f555:	jae    0x40f5a3
  40f557:	push   es
  40f558:	pop    ebx
  40f559:	outs   dx,BYTE PTR ds:[esi]
  40f55a:	leave  
  40f55b:	icebp  
  40f55c:	test   al,0x67
  40f55e:	ficom  WORD PTR [edi-0x4a820d90]
  40f564:	fwait
  40f565:	or     esi,esi
  40f567:	(bad)  
  40f568:	xchg   ecx,eax
  40f569:	add    al,0xc6
  40f56b:	cmp    eax,0xc0aa33b5
  40f570:	in     eax,dx
  40f571:	adc    ah,BYTE PTR [ebx]
  40f573:	int3   
  40f574:	repnz push ecx
  40f576:	mov    dl,0x9a
  40f578:	push   ebp
  40f579:	daa    
  40f57a:	xchg   ah,ch
  40f57c:	fadd   QWORD PTR [esi]
  40f57e:	hlt    
  40f57f:	sbb    dh,ch
  40f581:	call   0x914b:0xac4120ae
  40f588:	dec    esp
  40f589:	repz sti 
  40f58b:	jl     0x40f5f0
  40f58d:	add    BYTE PTR [esi-0x78473425],bl
  40f593:	jae    0x40f55c
  40f595:	lods   al,BYTE PTR ds:[esi]
  40f596:	lea    eax,[esi]
  40f598:	mov    eax,ds:0xec7892e4
  40f59d:	cld    
  40f59e:	ja     0x40f571
  40f5a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5a3:	xchg   edx,eax
  40f5a4:	cwde   
  40f5a5:	mov    al,ds:0x3e574825
  40f5aa:	call   0xa1be:0x72ecd8bb
  40f5b1:	cmp    dh,ch
  40f5b3:	dec    edi
  40f5b4:	out    dx,eax
  40f5b5:	adc    eax,0x5302fab0
  40f5ba:	jmp    0x40f5ff
  40f5bc:	shl    ebx,0x79
  40f5bf:	lds    esp,FWORD PTR [ebx-0x1b18de48]
  40f5c5:	jge    0x40f5e5
  40f5c7:	mov    ah,BYTE PTR [ecx-0x151ad8e9]
  40f5cd:	pushf  
  40f5ce:	jno    0x40f57b
  40f5d0:	lods   al,BYTE PTR ds:[esi]
  40f5d1:	jl     0x40f553
  40f5d3:	sub    DWORD PTR [ebx+0x7e],ebx
  40f5d6:	in     eax,0x37
  40f5d8:	pop    ss
  40f5d9:	pop    edi
  40f5da:	mov    ebx,0x1c8e9768
  40f5df:	or     bh,bh
  40f5e1:	out    dx,eax
  40f5e2:	and    BYTE PTR [ecx],ah
  40f5e4:	shr    BYTE PTR [edi-0x43ddcba2],cl
  40f5ea:	jmp    0x5f7f:0x87ac3627
  40f5f1:	mov    BYTE PTR [ecx+0x568ab1ee],ah
  40f5f7:	jle    0x40f66c
  40f5f9:	fidiv  WORD PTR [ebx]
  40f5fb:	enter  0xec65,0x85
  40f5ff:	into   
  40f600:	arpl   WORD PTR [esi+ecx*8-0x41],di
  40f604:	add    eax,esi
  40f606:	fwait
  40f607:	push   es
  40f608:	mov    dh,0x2d
  40f60a:	or     cl,BYTE PTR [ebx+0x2dd1100a]
  40f610:	ss jle 0x40f5c9
  40f613:	and    BYTE PTR [ecx],bh
  40f615:	mov    esp,0xb6a1a489
  40f61a:	stos   DWORD PTR es:[edi],eax
  40f61b:	loopne 0x40f680
  40f61d:	jnp    0x40f5b2
  40f61f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f620:	inc    esp
  40f621:	and    BYTE PTR [edx],dh
  40f623:	fwait
  40f624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f625:	(bad)  
  40f626:	mov    edx,0x7989cab3
  40f62b:	aad    0x4f
  40f62d:	mov    ch,ah
  40f62f:	pop    esp
  40f630:	sbb    dl,ch
  40f632:	cdq    
  40f633:	test   al,0x63
  40f635:	sub    eax,0x20dcff52
  40f63a:	rol    al,1
  40f63c:	jmp    0x9086ccdf
  40f641:	pop    ss
  40f642:	mov    cl,BYTE PTR [esi+0x454e3b9a]
  40f648:	cmp    eax,0xcfa097e5
  40f64d:	mov    ebp,0xe5eac05b
  40f652:	es adc dl,dl
  40f655:	dec    ebp
  40f656:	pop    esp
  40f657:	jmp    0xfe4e:0x3bde8c4b
  40f65e:	test   ecx,0xaf6a9606
  40f664:	sti    
  40f665:	lahf   
  40f666:	std    
  40f667:	ret    0xc5ff
  40f66a:	mov    ecx,0x5c69f05f
  40f66f:	adc    al,0xc9
  40f671:	ins    DWORD PTR es:[edi],dx
  40f672:	stos   DWORD PTR es:[edi],eax
  40f673:	jge    0x40f69c
  40f675:	mov    ah,0x40
  40f677:	inc    esi
  40f678:	bound  ebp,QWORD PTR [ebx+0x19]
  40f67b:	adc    ebx,DWORD PTR ds:0x9ebb7d3a
  40f681:	into   
  40f682:	inc    ebx
  40f683:	dec    ecx
  40f684:	addr16 mov edi,0xd584a1a7
  40f68a:	outs   dx,DWORD PTR ds:[esi]
  40f68b:	sub    al,ch
  40f68d:	loope  0x40f6c3
  40f68f:	cmp    al,0x5d
  40f691:	shr    BYTE PTR [edi],cl
  40f693:	cmp    al,0x16
  40f695:	neg    BYTE PTR [ecx+0x29]
  40f698:	jge    0x40f704
  40f69a:	adc    ch,BYTE PTR [edx-0x27ff34e4]
  40f6a0:	mov    esi,0x9f5db758
  40f6a5:	pop    esi
  40f6a6:	mov    ds,esi
  40f6a8:	lods   eax,DWORD PTR ds:[esi]
  40f6a9:	stos   BYTE PTR es:[edi],al
  40f6aa:	push   cs
  40f6ab:	aaa    
  40f6ac:	shr    DWORD PTR [esi+0x19],cl
  40f6af:	add    DWORD PTR [ebx],edx
  40f6b1:	and    eax,0x46c08bbf
  40f6b6:	les    ebx,FWORD PTR [edi]
  40f6b8:	shl    BYTE PTR [edi+0x50],0x98
  40f6bc:	inc    esi
  40f6bd:	jo     0x40f717
  40f6bf:	loope  0x40f73b
  40f6c1:	lods   al,BYTE PTR ds:[esi]
  40f6c2:	stc    
  40f6c3:	pusha  
  40f6c4:	ret    
  40f6c5:	mov    esi,0x90734f6e
  40f6ca:	pop    ds
  40f6cb:	push   ebx
  40f6cc:	mov    al,ds:0x1cbf813f
  40f6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6d2:	daa    
  40f6d3:	xchg   ebx,eax
  40f6d4:	imul   esi,DWORD PTR [edi],0x554b247e
  40f6da:	sar    DWORD PTR [eax+0x8101f29],1
  40f6e0:	ret    
  40f6e1:	xchg   edi,eax
  40f6e2:	jmp    0xfbb5dc47
  40f6e7:	data16 lock sbb al,0xe5
  40f6eb:	mov    ebx,0x62d6960d
  40f6f0:	xchg   edx,eax
  40f6f1:	in     eax,dx
  40f6f2:	nop
  40f6f3:	es call 0x920df69e
  40f6f9:	cdq    
  40f6fa:	xchg   esp,esi
  40f6fc:	fisub  DWORD PTR [eax]
  40f6fe:	xlat   BYTE PTR ds:[ebx]
  40f6ff:	lods   al,BYTE PTR ds:[esi]
  40f700:	fstp   DWORD PTR [esi+esi*4]
  40f703:	sbb    eax,0x96a4543
  40f708:	jmp    0xcf611e8f
  40f70d:	lods   al,BYTE PTR ds:[esi]
  40f70e:	cmc    
  40f70f:	mov    dh,0x71
  40f711:	(bad)  [esi+0x55]
  40f714:	xor    eax,0x6603dd4d
  40f719:	test   ebp,esi
  40f71b:	call   0x9b01:0x77811619
  40f722:	push   edx
  40f723:	xor    DWORD PTR [ebx],edi
  40f725:	jl     0x40f749
  40f727:	aas    
  40f728:	pop    ds
  40f729:	and    bh,BYTE PTR [ebx]
  40f72b:	dec    ebx
  40f72c:	jo     0x40f760
  40f72e:	mov    ebx,0xe7e195e
  40f733:	jnp    0x40f736
  40f735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f736:	mov    DWORD PTR [edi],edx
  40f738:	mov    bl,0xfd
  40f73a:	pushf  
  40f73b:	cmp    BYTE PTR [edx+edx*8+0x7f],ah
  40f73f:	arpl   WORD PTR [edi+0x78962a31],cx
  40f745:	stos   DWORD PTR es:[edi],eax
  40f746:	pop    ss
  40f747:	daa    
  40f748:	pop    edx
  40f749:	dec    ecx
  40f74a:	cli    
  40f74b:	mov    dh,0x8e
  40f74d:	(bad)  
  40f74e:	gs push esi
  40f750:	xchg   esp,eax
  40f751:	scas   al,BYTE PTR es:[edi]
  40f752:	mov    ch,0x81
  40f754:	xor    DWORD PTR [ecx+0x22],0x28
  40f758:	cld    
  40f759:	mov    al,ds:0x2215a74c
  40f75e:	cmp    DWORD PTR [ebx],ecx
  40f760:	fsub   st,st(1)
  40f762:	repz fist WORD PTR [ebp+0x6b14453c]
  40f769:	ins    BYTE PTR es:[edi],dx
  40f76a:	mov    DWORD PTR [edi-0x1f],esi
  40f76d:	sbb    BYTE PTR [edx-0x32efb1b3],ah
  40f773:	adc    DWORD PTR [edx-0x3388e663],ebp
  40f779:	adc    eax,0xfeca6169
  40f77e:	jecxz  0x40f737
  40f780:	(bad)  
  40f782:	scas   al,BYTE PTR es:[edi]
  40f783:	mov    eax,ds:0x635d54a5
  40f788:	fstp   TBYTE PTR [edx+0x46]
  40f78b:	sub    al,0x5
  40f78d:	push   esi
  40f78e:	out    0x2d,al
  40f790:	jge    0x40f738
  40f792:	sahf   
  40f793:	and    al,0xd5
  40f795:	and    BYTE PTR [edx-0x1eedfd8e],ah
  40f79b:	sahf   
  40f79c:	mov    edx,0xb0538e2f
  40f7a1:	call   0x6f568950
  40f7a6:	sbb    BYTE PTR [ecx],bh
  40f7a8:	(bad)  
  40f7a9:	iret   
  40f7aa:	jmp    0x40f824
  40f7ac:	lods   al,BYTE PTR ds:[esi]
  40f7ad:	aaa    
  40f7ae:	push   ebx
  40f7af:	pop    ecx
  40f7b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7b1:	loope  0x40f829
  40f7b3:	outs   dx,DWORD PTR ds:[esi]
  40f7b4:	in     eax,dx
  40f7b5:	test   eax,0x9ce07d54
  40f7ba:	cmp    esi,esi
  40f7bc:	or     ecx,eax
  40f7be:	loop   0x40f7bd
  40f7c0:	jg     0x40f7f9
  40f7c2:	fld    st(4)
  40f7c4:	pop    ebx
  40f7c5:	adc    eax,0x4f391cfb
  40f7ca:	add    esp,ebx
  40f7cc:	or     ebx,edi
  40f7ce:	ins    DWORD PTR es:[edi],dx
  40f7cf:	sub    eax,0xe1b6d2be
  40f7d4:	popa   
  40f7d5:	or     eax,0xbb4b7659
  40f7da:	mov    ch,0x6e
  40f7dc:	adc    ebx,edi
  40f7de:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40f7e0:	lea    eax,[eax-0x1fd5a547]
  40f7e6:	mov    eax,ds:0x211472ec
  40f7eb:	mov    esi,0x2c81ecf8
  40f7f0:	mov    ds:0xeb4c75e,al
  40f7f5:	add    edi,esi
  40f7f7:	arpl   WORD PTR [ebp+0x67],bx
  40f7fa:	ins    DWORD PTR es:[edi],dx
  40f7fb:	sub    BYTE PTR [ebx-0x7a],0xc2
  40f7ff:	xchg   esp,eax
  40f800:	jno    0x40f792
  40f802:	repnz push eax
  40f804:	jnp    0x40f870
  40f806:	nop
  40f807:	mov    eax,0xe1c7083
  40f80c:	cmp    dh,BYTE PTR [ebp+edx*2-0x38]
  40f810:	jg     0x40f7de
  40f812:	ret    0x37df
  40f815:	dec    esp
  40f816:	cdq    
  40f817:	xchg   ebp,eax
  40f818:	cmc    
  40f819:	bound  eax,QWORD PTR [esi]
  40f81b:	dec    esi
  40f81c:	dec    edx
  40f81d:	jge    0x40f81a
  40f81f:	scas   eax,DWORD PTR es:[edi]
  40f820:	hlt    
  40f821:	push   ebp
  40f822:	and    BYTE PTR [ebx-0x5bebf191],ah
  40f828:	ins    BYTE PTR es:[edi],dx
  40f829:	xor    BYTE PTR [eax+0x68],0xc6
  40f82d:	jp     0x40f7d1
  40f82f:	and    BYTE PTR [eax],bl
  40f831:	js     0x40f7c9
  40f833:	stos   BYTE PTR es:[edi],al
  40f834:	shr    BYTE PTR [edx+0x2d],cl
  40f837:	lods   al,BYTE PTR ds:[esi]
  40f838:	std    
  40f839:	popa   
  40f83a:	sub    DWORD PTR [edi+0x4e],edi
  40f83d:	mov    esi,0x52226f80
  40f842:	rol    DWORD PTR [edx-0x1e],cl
  40f845:	test   eax,0xed8cccd
  40f84a:	mov    ch,0x52
  40f84c:	push   esp
  40f84d:	call   0xb2d3:0x835e0a3d
  40f854:	mov    esp,0xcd1d70be
  40f859:	dec    ecx
  40f85a:	jecxz  0x40f804
  40f85c:	call   0xeb6e:0x784e1813
  40f863:	mov    WORD PTR [ebp-0x5fed03da],cs
  40f869:	fsub   QWORD PTR [edi]
  40f86b:	int3   
  40f86c:	push   ebp
  40f86d:	mov    ebx,0xa6629be9
  40f872:	std    
  40f873:	pushw  0x6e
  40f876:	repz sub BYTE PTR [edi-0x4a9f8d87],dh
  40f87d:	ins    BYTE PTR es:[edi],dx
  40f87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f87f:	(bad)  
  40f880:	jmp    0xf200:0x39bb7e85
  40f887:	mov    esp,0x7cbd2342
  40f88c:	mov    edx,0x9f1ec9e3
  40f891:	cmp    BYTE PTR [eax-0x7b7aaa95],dh
  40f897:	pushf  
  40f898:	xor    eax,0xfcc0891
  40f89d:	jbe    0x40f851
  40f89f:	pop    ebx
  40f8a0:	push   0xb20e1e3
  40f8a5:	cwde   
  40f8a6:	xchg   ebp,eax
  40f8a7:	push   edi
  40f8a8:	pop    edx
  40f8a9:	xchg   esp,eax
  40f8aa:	xor    DWORD PTR [ebp+0x46],0x78a04045
  40f8b1:	add    al,0x57
  40f8b3:	data16 sub bl,BYTE PTR fs:[ebp+0x60]
  40f8b8:	mov    ecx,0x87f0b799
  40f8bd:	fmul   QWORD PTR [edx+eax*8+0x27a9a356]
  40f8c4:	mov    cl,0x7b
  40f8c6:	js     0x40f8e6
  40f8c8:	mov    esp,0x1abeebd5
  40f8cd:	xchg   esi,eax
  40f8ce:	jbe    0x40f918
  40f8d0:	adc    eax,0xbfe63e9
  40f8d5:	fist   DWORD PTR [ebx-0x23a335f5]
  40f8db:	or     DWORD PTR [edx+ebp*4-0x210df5d],0x21
  40f8e3:	cmp    BYTE PTR [esi],ah
  40f8e5:	dec    eax
  40f8e6:	cmp    al,0xd5
  40f8e9:	hlt    
  40f8ea:	push   esp
  40f8eb:	jmp    0x15cb:0xa9e666a4
  40f8f2:	xchg   esp,eax
  40f8f3:	lods   al,BYTE PTR ds:[esi]
  40f8f4:	mov    edx,0x9c54000c
  40f8f9:	repz test eax,0x8d41d317
  40f8ff:	fwait
  40f900:	sti    
  40f901:	sbb    BYTE PTR [ecx+0x2ca364ff],0x1f
  40f908:	sar    BYTE PTR [ebp+eiz*4+0xf],0x5a
  40f90d:	cmp    al,0xf
  40f90f:	les    esi,FWORD PTR [ecx+ebx*2+0x5ebb98ad]
  40f916:	push   edi
  40f917:	call   0x747:0x93841711
  40f91e:	mov    bh,BYTE PTR [ebx]
  40f920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f921:	shl    BYTE PTR [eax],1
  40f923:	push   ds
  40f924:	and    ah,BYTE PTR [edi]
  40f926:	sbb    edx,DWORD PTR [ebx+eiz*4+0xd]
  40f92a:	mov    dl,0xef
  40f92c:	bsf    edi,DWORD PTR [eax+eax*4-0x4cff923c]
  40f934:	pop    DWORD PTR [ebp+0x79]
  40f937:	stos   DWORD PTR es:[edi],eax
  40f938:	aaa    
  40f939:	cmp    al,0xe5
  40f93b:	daa    
  40f93c:	jmp    0x5196:0x492fe8cc
  40f943:	dec    esp
  40f944:	mov    cl,0xe0
  40f946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f947:	mov    dh,0x94
  40f949:	retf   
  40f94a:	push   edx
  40f94b:	das    
  40f94c:	repz add al,0xcd
  40f94f:	mov    bh,0x85
  40f951:	aad    0x6
  40f953:	daa    
  40f954:	sahf   
  40f955:	adc    ah,BYTE PTR ss:[edx]
  40f958:	imul   esp,DWORD PTR [ecx-0xb],0xffffffd0
  40f95c:	daa    
  40f95d:	add    eax,DWORD PTR [edx-0x27]
  40f960:	sub    ebx,DWORD PTR [edx+0xb87f353]
  40f966:	pop    esp
  40f967:	das    
  40f968:	jno    0x40f919
  40f96a:	mov    ecx,0x9ca50fbb
  40f96f:	hlt    
  40f970:	jnp    0x40f9cd
  40f972:	dec    ecx
  40f973:	hlt    
  40f974:	inc    esp
  40f975:	shl    BYTE PTR [esp+ecx*4+0x3559a85f],cl
  40f97c:	push   0x395cbb17
  40f981:	(bad)  
  40f983:	cmp    ebp,DWORD PTR fs:[esi]
  40f986:	daa    
  40f987:	jp     0x40f926
  40f989:	xor    DWORD PTR [ebp+0x249ec969],ebx
  40f98f:	arpl   WORD PTR [ebx-0x7086ab30],bx
  40f995:	and    al,0x4f
  40f997:	mov    edi,gs
  40f999:	push   ebx
  40f99a:	mov    al,ds:0x8bc9e76e
  40f99f:	xchg   esi,eax
  40f9a0:	xchg   bl,al
  40f9a2:	dec    edx
  40f9a3:	dec    esp
  40f9a4:	(bad)  
  40f9a5:	cld    
  40f9a6:	repz jecxz 0x40f989
  40f9a9:	lea    esp,[ecx+0x66c05fc1]
  40f9af:	mov    esp,0xba145011
  40f9b5:	nop
  40f9b6:	mov    ds:0xc4091e7a,eax
  40f9bb:	stc    
  40f9bc:	ret    
  40f9bd:	or     dh,BYTE PTR [ebp+ecx*2-0x41]
  40f9c1:	mov    ebx,0x526536fb
  40f9c6:	retf   
  40f9c7:	in     al,dx
  40f9c8:	or     al,0x7c
  40f9ca:	xchg   edx,eax
  40f9cb:	data16 aaa 
  40f9cd:	jne    0x40f989
  40f9cf:	test   eax,0x6db00782
  40f9d4:	idiv   DWORD PTR [ecx-0x2ff5804b]
  40f9da:	adc    al,0xde
  40f9dc:	lods   al,BYTE PTR ds:[esi]
  40f9dd:	pop    ecx
  40f9de:	dec    esp
  40f9df:	iret   
  40f9e0:	out    dx,eax
  40f9e1:	fistp  DWORD PTR cs:[ecx-0x61cf6c21]
  40f9e8:	mov    bl,0x46
  40f9ea:	cli    
  40f9eb:	pop    ecx
  40f9ec:	in     eax,0xd
  40f9ee:	iret   
  40f9ef:	mov    BYTE PTR [esi-0x10928eaa],al
  40f9f5:	cmp    eax,0xc7764a2
  40f9fa:	inc    edx
  40f9fb:	(bad)  ds:0x1e469f40
  40fa01:	dec    edi
  40fa02:	mov    BYTE PTR [edx+0x16],ch
  40fa05:	ret    0x1a0f
  40fa08:	loopne 0x40fa1e
  40fa0a:	dec    ebx
  40fa0b:	mov    edi,0x1ed78162
  40fa10:	cmp    DWORD PTR [eax],eax
  40fa12:	pop    ebp
  40fa13:	add    eax,0x21fc4f78
  40fa18:	mov    al,ds:0x40d0a326
  40fa1d:	addr16 shl ebp,0x50
  40fa21:	dec    edx
  40fa22:	aas    
  40fa23:	push   ebx
  40fa24:	sbb    bh,BYTE PTR [edi+0x72842e71]
  40fa2a:	pop    ebx
  40fa2b:	xchg   DWORD PTR [esi],edx
  40fa2d:	add    DWORD PTR [ebx+0x58e78c4f],ecx
  40fa33:	push   ebp
  40fa34:	pop    esi
  40fa35:	jge    0x40fa7c
  40fa37:	push   eax
  40fa38:	in     eax,0xe4
  40fa3a:	(bad)  
  40fa3b:	jmp    0x58de:0xfe3e3ec9
  40fa42:	stos   DWORD PTR es:[edi],eax
  40fa43:	iret   
  40fa44:	jne    0x40fa7f
  40fa46:	xor    BYTE PTR [edi-0x8],ch
  40fa49:	xor    al,0x20
  40fa4b:	popf   
  40fa4c:	shl    BYTE PTR [ebp-0x1eb50f6d],0x3d
  40fa53:	lods   al,BYTE PTR ds:[esi]
  40fa54:	popf   
  40fa55:	neg    DWORD PTR [edi-0x58fe3606]
  40fa5b:	fld    QWORD PTR [edi-0x21ed3f6c]
  40fa61:	(bad)  
  40fa62:	imul   BYTE PTR [eax]
  40fa64:	sub    al,0x84
  40fa66:	jmp    0x40fad6
  40fa68:	xchg   ebp,eax
  40fa69:	retf   
  40fa6a:	xchg   ebp,eax
  40fa6b:	or     BYTE PTR [esi+0x48],bl
  40fa6e:	pop    esi
  40fa6f:	mov    ebx,0x487dffd1
  40fa74:	and    BYTE PTR ds:0xe864b826,0xdc
  40fa7b:	cmc    
  40fa7c:	adc    bl,al
  40fa7e:	pop    ecx
  40fa7f:	aam    0x6a
  40fa81:	push   0xffffffdc
  40fa83:	mov    cl,0x6b
  40fa85:	int3   
  40fa86:	jo     0x40fa4c
  40fa88:	pop    esi
  40fa89:	lock inc eax
  40fa8b:	mov    ebp,0x609e84b1
  40fa90:	or     eax,0xfcad15b4
  40fa95:	mov    bl,bh
  40fa97:	loop   0x40fad1
  40fa99:	mov    ds:0x806c9a47,eax
  40fa9e:	mov    esp,0x8a6a477a
  40faa3:	add    DWORD PTR [ecx+0x53ecccc8],0x72
  40faaa:	call   0x2cfb4fa3
  40faaf:	xor    esp,DWORD PTR [edi-0x539e0869]
  40fab5:	popf   
  40fab6:	add    al,0xe9
  40fab8:	neg    DWORD PTR [edi+0x5d2e211c]
  40fabe:	mov    eax,ebx
  40fac0:	adc    al,ch
  40fac2:	or     al,0xbd
  40fac4:	imul   esp
  40fac6:	push   eax
  40fac7:	sub    ecx,edx
  40fac9:	mov    BYTE PTR [ebx+0x1e82a6ea],0x33
  40fad0:	mov    dl,0xa0
  40fad2:	rcr    bh,cl
  40fad4:	xchg   bh,bh
  40fad6:	or     cl,BYTE PTR [edi]
  40fad8:	shr    ecx,cl
  40fada:	xchg   esi,eax
  40fadb:	push   esi
  40fadc:	pop    ecx
  40fadd:	rcr    BYTE PTR [ebx+ebp*8],1
  40fae0:	fsub   QWORD PTR [esi]
  40fae2:	mov    ecx,0x1d415848
  40fae7:	ja     0x40facc
  40fae9:	lahf   
  40faea:	mov    ds:0x411cf083,eax
  40faef:	mov    cs,esp
  40faf1:	mov    bh,0x9e
  40faf3:	in     al,dx
  40faf4:	es iret 
  40faf6:	hlt    
  40faf7:	scas   eax,DWORD PTR es:[edi]
  40faf8:	ror    BYTE PTR [eax+0x5f],1
  40fafb:	inc    ecx
  40fafc:	cdq    
  40fafd:	or     al,0x2f
  40faff:	sub    BYTE PTR [edx+ebx*1+0x53],ch
  40fb03:	and    cl,BYTE PTR [esi-0x3da2ee8c]
  40fb09:	das    
  40fb0a:	sbb    bl,BYTE PTR [eax-0x6e]
  40fb0d:	mov    esi,0xe0718aba
  40fb12:	and    ebp,DWORD PTR [edx+edx*8]
  40fb15:	mov    ebx,0xfd515396
  40fb1a:	clc    
  40fb1b:	ins    DWORD PTR es:[edi],dx
  40fb1c:	stos   DWORD PTR es:[edi],eax
  40fb1d:	sbb    DWORD PTR [ecx],edx
  40fb1f:	test   al,bl
  40fb21:	inc    eax
  40fb22:	mov    ah,BYTE PTR [esp+ebp*1-0x45]
  40fb26:	add    DWORD PTR [ecx+0x4dc6e1c8],0x29
  40fb2d:	mov    ds:0xa196cbb1,eax
  40fb32:	fmulp  st(7),st
  40fb34:	mov    bl,0x5
  40fb36:	cs repz cli 
  40fb39:	and    BYTE PTR [edi+ecx*1+0x6f],al
  40fb3d:	outs   dx,BYTE PTR ds:[esi]
  40fb3e:	popf   
  40fb3f:	loopne 0x40fb97
  40fb41:	or     ah,dh
  40fb43:	imul   esi,ebx,0x77
  40fb46:	retf   
  40fb47:	ret    0xfff6
  40fb4a:	inc    ebx
  40fb4b:	ja     0x40fb9e
  40fb4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb4f:	xchg   ebp,eax
  40fb50:	fucom  st(3)
  40fb52:	(bad)  
  40fb53:	popf   
  40fb54:	ficomp DWORD PTR [ebx+esi*8-0x2]
  40fb58:	aaa    
  40fb59:	popf   
  40fb5a:	shr    cl,0xb4
  40fb5d:	mov    ebx,0x62ccb2e5
  40fb62:	sbb    dl,0xe6
  40fb65:	jg     0x40faf5
  40fb67:	sbb    eax,0x508e125e
  40fb6c:	sub    al,0x9a
  40fb6e:	push   es
  40fb6f:	jge    0x40fbb0
  40fb71:	hlt    
  40fb72:	jnp    0x40fb66
  40fb74:	mov    cl,ch
  40fb76:	cmc    
  40fb77:	repnz arpl WORD PTR [esp+eax*8-0x5a91882b],di
  40fb7f:	add    dl,BYTE PTR [esi-0x3f]
  40fb82:	push   edi
  40fb83:	loope  0x40fb72
  40fb85:	dec    bh
  40fb87:	rol    DWORD PTR [ebp+0x37f48c5a],0x7d
  40fb8e:	fst    QWORD PTR [ebx]
  40fb90:	imul   ecx,DWORD PTR [ecx+0x59d8e9d7],0x4a885f89
  40fb9a:	inc    edi
  40fb9b:	fs cmp al,0x38
  40fb9e:	xor    ch,bh
  40fba0:	push   ebx
  40fba1:	nop
  40fba2:	je     0x40fbac
  40fba4:	cdq    
  40fba5:	push   ecx
  40fba6:	jp     0x40fb73
  40fba8:	pushf  
  40fba9:	mov    al,0x72
  40fbab:	ror    BYTE PTR [esi-0x79],1
  40fbae:	sahf   
  40fbaf:	fcomp  DWORD PTR [ebx]
  40fbb1:	es jne 0x40fbb3
  40fbb4:	std    
  40fbb5:	imul   ecx,DWORD PTR [eax],0xffffffc3
  40fbb8:	sbb    bl,ch
  40fbba:	lea    edx,[ecx]
  40fbbc:	into   
  40fbbd:	hlt    
  40fbbe:	mov    dh,0xf5
  40fbc0:	push   0xd68c7bd4
  40fbc5:	fisttp DWORD PTR [edi+0x30]
  40fbc8:	test   dl,ch
  40fbca:	fs and ebp,edi
  40fbcd:	and    al,0xaf
  40fbcf:	push   ecx
  40fbd0:	xchg   esi,eax
  40fbd1:	sbb    ecx,DWORD PTR [esi*4-0x11a6bbbb]
  40fbd8:	sti    
  40fbd9:	in     eax,0xc8
  40fbdb:	int    0xcb
  40fbdd:	mov    esi,0xc9d3035b
  40fbe2:	jle    0x40fc10
  40fbe4:	imul   ebp,DWORD PTR [ecx-0x8b88b9d],0x92cb6584
  40fbee:	ret    
  40fbef:	out    dx,eax
  40fbf0:	pop    ss
  40fbf1:	dec    ebp
  40fbf2:	(bad)  
  40fbf3:	in     eax,0x64
  40fbf5:	adc    eax,0x606f6cda
  40fbfa:	and    edi,DWORD PTR [esi-0x47b07d3d]
  40fc00:	mov    ds:0xb1ac710e,eax
  40fc05:	fdivr  DWORD PTR [ebx]
  40fc07:	dec    esi
  40fc08:	fnstsw WORD PTR [edx-0x7054dec2]
  40fc0e:	sbb    eax,0xd9c8a7b6
  40fc13:	mov    ecx,0x17b5ed2f
  40fc18:	and    BYTE PTR [edi],al
  40fc1a:	adc    ch,dh
  40fc1c:	call   0xa7eb:0xa3fea7a4
  40fc23:	clc    
  40fc24:	pop    es
  40fc25:	enter  0xe3ca,0xb8
  40fc29:	jge    0x40fc0c
  40fc2b:	inc    edi
  40fc2c:	out    0x3b,eax
  40fc2e:	cli    
  40fc2f:	stos   BYTE PTR es:[edi],al
  40fc30:	adc    bl,ah
  40fc32:	push   edi
  40fc33:	xchg   edi,eax
  40fc34:	inc    esp
  40fc35:	mov    ebx,0x50afbcd9
  40fc3a:	sbb    al,0x6a
  40fc3c:	aad    0xcd
  40fc3e:	mov    edi,0x7e6a1353
  40fc43:	xchg   DWORD PTR [ecx+0x52],edx
  40fc46:	xchg   esi,eax
  40fc47:	das    
  40fc48:	in     al,0xab
  40fc4a:	out    dx,al
  40fc4b:	enter  0xa952,0x61
  40fc4f:	hlt    
  40fc50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc51:	adc    BYTE PTR [edi+edx*4+0x69ee579d],bh
  40fc58:	cmp    esp,eax
  40fc5a:	jp     0x40fcbd
  40fc5c:	or     bh,BYTE PTR [ebx+eax*8-0x1953619c]
  40fc63:	lods   al,BYTE PTR ds:[esi]
  40fc64:	mov    esp,0xffdd43ff
  40fc69:	ror    DWORD PTR [edi+eax*4+0xd],cl
  40fc6d:	fcomp  DWORD PTR [ebx+0x39]
  40fc70:	adc    BYTE PTR [eax-0x140982cf],0x95
  40fc77:	dec    edx
  40fc78:	retf   
  40fc79:	dec    esp
  40fc7a:	adc    eax,DWORD PTR [esi+0x14]
  40fc7d:	cwde   
  40fc7e:	mov    edi,DWORD PTR [ebx-0x4315e65b]
  40fc84:	jns    0x40fc3e
  40fc86:	(bad)  
  40fc87:	and    eax,0x34e25356
  40fc8c:	sbb    al,0xc3
  40fc8e:	mov    ch,0xce
  40fc90:	(bad)  
  40fc91:	jbe    0x40fc5c
  40fc93:	mov    bh,0xbc
  40fc95:	xor    eax,0x90ecede0
  40fc9a:	push   edi
  40fc9b:	fst    DWORD PTR [edi-0x2479da22]
  40fca2:	push   eax
  40fca3:	icebp  
  40fca4:	and    al,ch
  40fca6:	pop    esi
  40fca7:	and    ah,ch
  40fca9:	test   BYTE PTR [ebx+0x569c4cc6],bh
  40fcaf:	adc    edi,edx
  40fcb1:	inc    esp
  40fcb2:	(bad)  
  40fcb3:	cmp    eax,DWORD PTR [eax-0x6622e1ea]
  40fcb9:	mov    edx,0x33235daf
  40fcbe:	push   esi
  40fcbf:	push   edi
  40fcc0:	sub    ah,ch
  40fcc2:	ds aad 0xeb
  40fcc5:	jl     0x40fc55
  40fcc7:	daa    
  40fcc8:	std    
  40fcc9:	int    0xc1
  40fccb:	aam    0xbf
  40fccd:	repnz out dx,al
  40fccf:	rol    DWORD PTR [ebp-0x2d],0x33
  40fcd3:	daa    
  40fcd4:	push   ds
  40fcd5:	(bad)
  40fcd9:	shr    DWORD PTR [ebx-0x39],0x1f
  40fcdd:	repz sbb BYTE PTR es:[eax+0x75],0x7f
  40fce3:	and    DWORD PTR [ecx],0x58cdd352
  40fce9:	sbb    DWORD PTR [ebp-0x5edda756],0xffffffce
  40fcf0:	push   ss
  40fcf1:	cmp    BYTE PTR [edi],dl
  40fcf3:	(bad)  
  40fcf4:	imul   ebp,DWORD PTR [esi],0x64fcd68
  40fcfa:	xor    eax,0xc6f2d75e
  40fcff:	scas   al,BYTE PTR es:[edi]
  40fd00:	mov    ebx,edi
  40fd02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd03:	lahf   
  40fd04:	adc    DWORD PTR [edx],ebx
  40fd06:	mov    esi,edi
  40fd08:	out    0x43,eax
  40fd0a:	adc    eax,esp
  40fd0c:	xchg   edx,eax
  40fd0d:	loopne 0x40fcff
  40fd0f:	mov    bh,0xca
  40fd11:	leave  
  40fd12:	shr    DWORD PTR [ecx+0x48f8aec4],cl
  40fd18:	(bad)
  40fd1b:	fdivr  QWORD PTR [esi+0x2b]
  40fd1e:	stos   DWORD PTR es:[edi],eax
  40fd1f:	rol    BYTE PTR [eax],1
  40fd21:	fsubp  st(3),st
  40fd23:	data16 in al,dx
  40fd25:	sbb    al,0xca
  40fd27:	xchg   ebx,eax
  40fd28:	int    0x2c
  40fd2a:	jmp    0x81927b0c
  40fd2f:	mov    ebx,0x8e03b69a
  40fd34:	(bad)  
  40fd35:	out    0xff,eax
  40fd37:	aas    
  40fd38:	jg     0x40fcdc
  40fd3a:	das    
  40fd3b:	jno    0x40fce0
  40fd3d:	sbb    bl,al
  40fd3f:	into   
  40fd40:	je     0x40fcf3
  40fd42:	ins    DWORD PTR es:[edi],dx
  40fd43:	and    al,0xbd
  40fd45:	cld    
  40fd46:	call   0xa2db:0xb6c0ede7
  40fd4d:	xchg   esi,eax
  40fd4e:	arpl   WORD PTR [esp+esi*1],dx
  40fd51:	pop    ecx
  40fd52:	pop    es
  40fd53:	push   ebx
  40fd54:	pop    esi
  40fd55:	pusha  
  40fd56:	sub    bl,BYTE PTR ds:0x88d6c476
  40fd5c:	add    eax,0x52e236ef
  40fd61:	das    
  40fd62:	xor    esi,DWORD PTR [edx+edx*4-0x19]
  40fd66:	(bad)  
  40fd67:	pop    ebx
  40fd68:	and    BYTE PTR [edi],dl
  40fd6a:	dec    esi
  40fd6b:	scas   eax,DWORD PTR es:[edi]
  40fd6c:	jns    0x40fd92
  40fd6e:	aas    
  40fd6f:	cwde   
  40fd70:	or     BYTE PTR [esi],cl
  40fd72:	mov    eax,ds:0x8b2b0cbb
  40fd77:	jo     0x40fdd1
  40fd79:	repnz popf 
  40fd7b:	pop    DWORD PTR [edi]
  40fd7d:	push   eax
  40fd7e:	fsubr  st,st(4)
  40fd80:	or     DWORD PTR [eax-0x15],ebx
  40fd83:	and    BYTE PTR [edi],bl
  40fd85:	dec    eax
  40fd86:	nop
  40fd87:	out    dx,eax
  40fd88:	sub    BYTE PTR [esi-0x5c],dl
  40fd8b:	aad    0xaa
  40fd8d:	jb     0x40fd8a
  40fd8f:	addr16 inc ecx
  40fd91:	cmc    
  40fd92:	or     al,0xa3
  40fd94:	adc    BYTE PTR ds:0xeb3f1b6b,dh
  40fd9a:	in     al,0xc5
  40fd9c:	cwde   
  40fd9d:	or     eax,0xdf7d778c
  40fda2:	jecxz  0x40fda2
  40fda4:	or     eax,0xb052e8e5
  40fda9:	sti    
  40fdaa:	loope  0x40fe0b
  40fdac:	sbb    ch,BYTE PTR [esi+0x38643874]
  40fdb2:	pop    ecx
  40fdb3:	in     al,dx
  40fdb4:	dec    edx
  40fdb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdb6:	mov    dh,0xd7
  40fdb8:	push   eax
  40fdb9:	outs   dx,DWORD PTR ds:[esi]
  40fdba:	pop    ebp
  40fdbb:	dec    ebp
  40fdbc:	cvtdq2ps xmm5,xmm7
  40fdbf:	jl     0x40fd85
  40fdc1:	dec    ebp
  40fdc2:	jbe    0x40fe3b
  40fdc4:	rcl    DWORD PTR [ebx-0x70],0x8e
  40fdc8:	outs   dx,BYTE PTR ds:[esi]
  40fdc9:	jmp    0x6a82f910
  40fdce:	enter  0xc0fb,0xb6
  40fdd2:	shl    BYTE PTR [ecx],cl
  40fdd4:	loop   0x40fe03
  40fdd6:	jbe    0x40fd93
  40fdd8:	jns    0x40fdd3
  40fdda:	push   0x77
  40fddc:	dec    esi
  40fddd:	add    DWORD PTR [edx],eax
  40fddf:	jg     0x40fd94
  40fde1:	daa    
  40fde2:	sub    eax,DWORD PTR [ecx+ebp*4+0xf90d92f]
  40fde9:	fucomi st,st(1)
  40fdeb:	(bad)  
  40fdec:	xor    BYTE PTR [ebp-0x80],dh
  40fdef:	pop    ebx
  40fdf0:	jb     0x40fdae
  40fdf2:	jge    0x40fe71
  40fdf4:	and    DWORD PTR [edi+0x5d3fa134],0xb3018e94
  40fdfe:	inc    edx
  40fdff:	add    ch,BYTE PTR [ebx]
  40fe01:	cmp    ebx,DWORD PTR ds:0x6a1e363e
  40fe07:	iret   
  40fe08:	dec    esp
  40fe09:	call   0x4040:0x5f891efc
  40fe10:	test   DWORD PTR [edx+0x61],ecx
  40fe13:	std    
  40fe14:	cmp    BYTE PTR [edi+0x7a],al
  40fe17:	dec    edx
  40fe18:	push   0xffffffaa
  40fe1a:	arpl   WORD PTR ds:0xa3f5e4b4,cx
  40fe20:	lock jp 0x40fe64
  40fe23:	scas   al,BYTE PTR es:[edi]
  40fe24:	jmp    0xc8e6:0x4c7090f4
  40fe2b:	fmul   DWORD PTR ds:0xf620a059
  40fe31:	add    eax,0xaec6604b
  40fe36:	sbb    dl,cl
  40fe38:	dec    eax
  40fe39:	leave  
  40fe3a:	pause  
  40fe3c:	mov    esi,0x4f4c3725
  40fe41:	jmp    0xf42c47ed
  40fe46:	sbb    DWORD PTR [ecx],ebp
  40fe48:	sub    eax,0xe31a755c
  40fe4d:	call   0xd5086f
  40fe52:	cld    
  40fe53:	scas   eax,DWORD PTR es:[edi]
  40fe54:	imul   esi,DWORD PTR [edx+0x23fad19e],0xeee2275e
  40fe5e:	aad    0x74
  40fe60:	jo     0x40fe4d
  40fe62:	std    
  40fe63:	je     0x40fe7b
  40fe65:	ja     0x40fe16
  40fe67:	push   0xc748f8bc
  40fe6c:	cld    
  40fe6d:	xor    al,0x1a
  40fe6f:	jae    0x40fe2a
  40fe71:	xor    BYTE PTR [edi-0x68c73076],bl
  40fe77:	dec    edx
  40fe78:	jp     0x40fe5e
  40fe7a:	cwde   
  40fe7b:	nop
  40fe7c:	ret    
  40fe7d:	and    edi,DWORD PTR [esi-0x7259d083]
  40fe83:	cli    
  40fe84:	xchg   esp,eax
  40fe85:	push   0x3ca9547b
  40fe8a:	mov    edi,0x2b5014a0
  40fe8f:	mov    al,0x82
  40fe91:	push   ss
  40fe92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe93:	or     ecx,edx
  40fe95:	out    0x6a,al
  40fe97:	scas   al,BYTE PTR es:[edi]
  40fe98:	sbb    bl,BYTE PTR [esi+0x21]
  40fe9b:	sbb    eax,0xca335a24
  40fea0:	data16 add al,0x3a
  40fea3:	xchg   ebx,eax
  40fea4:	pop    ds
  40fea5:	jge    0x40fe9e
  40fea7:	dec    ebp
  40fea8:	pop    eax
  40fea9:	sbb    ecx,DWORD PTR [edi+eax*4]
  40feac:	nop    DWORD PTR [edi+edi*8+0x1354fd0]
  40feb4:	hlt    
  40feb5:	sbb    bl,BYTE PTR [ecx+0x170ddbba]
  40febb:	pushf  
  40febc:	ret    
  40febd:	mov    eax,0x6fc4dad6
  40fec2:	or     esi,DWORD PTR [edx]
  40fec4:	int    0x8f
  40fec6:	jle    0x40fe71
  40fec8:	and    BYTE PTR [eax-0x528519c7],dl
  40fece:	cvtdq2ps xmm2,XMMWORD PTR [edi+0x3]
  40fed2:	aam    0x7
  40fed4:	cld    
  40fed5:	out    0xca,al
  40fed7:	xchg   BYTE PTR [ebx+0x774bbdc8],dh
  40fedd:	inc    di
  40fedf:	xchg   edi,eax
  40fee0:	mov    ebx,0xd4151209
  40fee5:	pop    ss
  40fee6:	sti    
  40fee7:	ja     0x40ff37
  40fee9:	(bad)  
  40feea:	shr    BYTE PTR [edi+edx*1-0xc],cl
  40feee:	mov    ebx,0xfca637a1
  40fef3:	mov    dl,0x3c
  40fef5:	add    DWORD PTR [edi-0x98d398d],esp
  40fefb:	add    eax,0x88882ac8
  40ff00:	mov    esi,0x8646f9ee
  40ff05:	rcl    BYTE PTR [esi-0x3deffe7e],1
  40ff0b:	mov    ?,WORD PTR [ebx+eiz*1]
  40ff0e:	push   es
  40ff0f:	fstp   TBYTE PTR [eax+edi*2+0x72d4d71c]
  40ff16:	aas    
  40ff17:	pushf  
  40ff18:	loopne 0x40ff1f
  40ff1a:	xchg   ebp,eax
  40ff1b:	cmp    BYTE PTR ds:0xd09e13a0,ch
  40ff21:	sub    DWORD PTR [ebp-0x7052af4d],ecx
  40ff27:	xchg   ebp,eax
  40ff28:	mov    ch,0xa3
  40ff2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff2c:	into   
  40ff2d:	mov    ebx,0x542d611a
  40ff32:	jno    0x40fed5
  40ff34:	enter  0x4179,0xa1
  40ff38:	mov    bh,dl
  40ff3a:	daa    
  40ff3b:	mov    esp,0x17937fce
  40ff40:	nop
  40ff41:	push   ebp
  40ff42:	je     0x40fee3
  40ff44:	sbb    dh,cl
  40ff46:	arpl   dx,dx
  40ff48:	divps  xmm6,XMMWORD PTR [eax-0x66]
  40ff4c:	mov    dh,0x66
  40ff4e:	mov    bl,0x2d
  40ff50:	cs addr16 sbb edi,0xb4226637
  40ff58:	pusha  
  40ff59:	sbb    al,0x6
  40ff5b:	aaa    
  40ff5c:	xor    ch,0x8c
  40ff5f:	fimul  DWORD PTR [eax]
  40ff61:	push   es
  40ff62:	or     al,BYTE PTR [edx-0x42]
  40ff65:	mov    ah,al
  40ff67:	cmp    al,0x87
  40ff69:	xchg   esi,eax
  40ff6a:	sub    edi,ecx
  40ff6c:	and    BYTE PTR [esi],ch
  40ff6e:	or     al,0x14
  40ff70:	icebp  
  40ff71:	mov    al,ds:0xe9bf9694
  40ff76:	and    esp,eax
  40ff78:	inc    esi
  40ff79:	mov    ebp,0xa787d88f
  40ff7e:	sub    ebx,DWORD PTR [ecx-0x7822bcea]
  40ff84:	jae    0x40ff67
  40ff86:	push   0x73
  40ff88:	hlt    
  40ff89:	jne    0x40ffd5
  40ff8b:	(bad)  
  40ff8d:	ja     0x40ff71
  40ff8f:	fbld   TBYTE PTR [ebx-0x4b976841]
  40ff95:	(bad)  
  40ff96:	push   eax
  40ff97:	popa   
  40ff98:	in     eax,dx
  40ff99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff9a:	mov    ecx,0x4ddba2d3
  40ff9f:	stc    
  40ffa0:	cs mov dh,0xbe
  40ffa3:	xor    BYTE PTR [edx+0x4a],dl
  40ffa6:	push   edx
  40ffa7:	sub    al,0x98
  40ffa9:	cmp    ah,bh
  40ffab:	mov    cl,0x80
  40ffad:	xchg   DWORD PTR [ecx+0x3702c97f],ebx
  40ffb3:	rcl    BYTE PTR [esi],cl
  40ffb5:	or     al,0x51
  40ffb7:	imul   esp,DWORD PTR [eax+esi*1-0x76],0x63012ddc
  40ffbf:	sbb    eax,0xebc3e61d
  40ffc4:	jl     0x40ffff
  40ffc6:	jl     0x40ffde
  40ffc8:	mov    eax,0xb81ad075
  40ffcd:	fbld   TBYTE PTR [ebp+0x7ecb84d3]
  40ffd3:	ds ret 
  40ffd5:	xor    al,dl
  40ffd7:	cmp    edi,DWORD PTR [eax-0x716e83f5]
  40ffdd:	mov    edx,0x8a65b54
  40ffe2:	mov    ch,0x63
  40ffe4:	pop    ecx
  40ffe5:	aad    0x28
  40ffe7:	daa    
  40ffe8:	dec    esi
  40ffe9:	xlat   BYTE PTR ds:[ebx]
  40ffea:	lea    ebx,[edx]
  40ffec:	dec    ebp
  40ffed:	fsub   DWORD PTR [ebx-0x77d17e18]
  40fff3:	xchg   ebp,eax
  40fff4:	ins    BYTE PTR es:[edi],dx
  40fff5:	iret   
  40fff6:	and    dh,bh
  40fff8:	fnstenv [ebx+0x6dc744b2]
  40fffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffff:	call   0x5f13:0x5a632a78
  410006:	xor    ch,BYTE PTR es:[eax-0x3e]
  41000a:	cld    
  41000b:	pop    ss
  41000c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41000d:	jbe    0x40ff90
  41000f:	cli    
  410010:	std    
  410011:	retf   0x7810
  410014:	pop    ecx
  410015:	inc    eax
  410016:	mov    eax,ds:0x42bf70fd
  41001b:	inc    edx
  41001c:	fild   WORD PTR [ecx]
  41001e:	retf   0x9b07
  410021:	sub    ebx,DWORD PTR [eax-0x71993439]
  410027:	fs clc 
  410029:	adc    eax,0xa91a8704
  41002e:	xlat   BYTE PTR ds:[ebx]
  41002f:	inc    edi
  410030:	int    0xee
  410032:	cmp    ebx,DWORD PTR [eax]
  410034:	cld    
  410035:	bound  edx,QWORD PTR [ecx+0x2459c9dc]
  41003b:	leave  
  41003c:	jle    0x410021
  41003e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41003f:	shl    DWORD PTR ds:0xeab5f9c5,0x23
  410046:	mov    edi,0x5d9676be
  41004b:	sbb    eax,0xd7f2d74d
  410050:	push   esi
  410051:	and    eax,0x9d0ba614
  410056:	pop    ds
  410057:	(bad)  
  410058:	clc    
  410059:	sub    DWORD PTR [ebx+edi*8-0x1d395487],edi
  410060:	retf   
  410061:	rcr    DWORD PTR [edi+0x63f3f91c],0xef
  410068:	sub    ch,BYTE PTR [ebp+0x52]
  41006b:	std    
  41006c:	xor    eax,0x61870a41
  410071:	out    dx,eax
  410072:	xor    DWORD PTR [ecx+0xe597a7e],edx
  410078:	cdq    
  410079:	mov    edi,0x4e079594
  41007e:	in     eax,0x42
  410080:	imul   ebx,DWORD PTR [edi+0x9],0xffffffa7
  410084:	push   0x6a
  410086:	(bad)  
  410088:	push   cs
  410089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41008a:	push   esp
  41008b:	aas    
  41008c:	out    dx,al
  41008d:	outs   dx,DWORD PTR ds:[esi]
  41008e:	out    0xb,eax
  410090:	push   0x20
  410092:	ds je  0x410062
  410095:	sub    bh,ah
  410097:	adc    ah,BYTE PTR [ebx-0x70]
  41009a:	fild   DWORD PTR [edx+0x70]
  41009d:	retf   0xae6d
  4100a0:	xchg   ecx,eax
  4100a1:	imul   ebp,DWORD PTR [ebp+0x5a],0xffffffa7
  4100a5:	leave  
  4100a6:	js     0x410060
  4100a8:	mul    DWORD PTR [edx]
  4100aa:	mov    eax,fs
  4100ac:	int3   
  4100ad:	ficomp DWORD PTR [edi-0x70ae9475]
  4100b3:	pop    esp
  4100b4:	or     DWORD PTR [edx-0x76],esp
  4100b7:	cmp    ebp,DWORD PTR [edx]
  4100b9:	in     al,0x43
  4100bb:	xchg   esi,eax
  4100bc:	xchg   esi,eax
  4100bd:	jecxz  0x4100f5
  4100bf:	outs   dx,BYTE PTR ds:[esi]
  4100c0:	cmp    BYTE PTR ds:0x361e5b03,ch
  4100c6:	xor    eax,0x7f264ceb
  4100cb:	mov    ebx,0xf80ceeca
  4100d0:	lahf   
  4100d1:	adc    DWORD PTR [ecx+0x73],eax
  4100d4:	sti    
  4100d5:	xchg   edx,eax
  4100d6:	inc    ecx
  4100d7:	(bad)  
  4100d8:	rol    BYTE PTR [ebx],1
  4100da:	mov    ebx,0x11dd4321
  4100df:	jl     0x4100b0
  4100e1:	sub    BYTE PTR [ecx-0x4a5cc875],dh
  4100e7:	cdq    
  4100e8:	adc    al,ch
  4100ea:	adc    cl,BYTE PTR [ebx+0xa5d2019]
  4100f0:	inc    ebx
  4100f1:	dec    eax
  4100f2:	and    al,0xcb
  4100f4:	mov    edi,0x192c1775
  4100f9:	or     eax,DWORD PTR [ecx+0x1]
  4100fc:	rcl    DWORD PTR [ecx+0x6a488a92],cl
  410102:	outs   dx,DWORD PTR ds:[esi]
  410103:	xchg   ebx,eax
  410104:	dec    esi
  410105:	sbb    DWORD PTR [ebp-0x61],esi
  410108:	sbb    BYTE PTR [edi+0x53],bl
  41010b:	jecxz  0x410183
  41010d:	ins    BYTE PTR es:[edi],dx
  41010e:	xchg   ecx,eax
  41010f:	push   edi
  410110:	sbb    edi,DWORD PTR [edi+0x6d]
  410113:	cmp    BYTE PTR [ecx+ebx*8-0x3d],ch
  410117:	and    BYTE PTR [ebp+0x56],bl
  41011a:	and    al,0xf
  41011c:	sbb    DWORD PTR [esi+0x3],ebx
  41011f:	test   DWORD PTR [edi-0x2a],0xcd629ca5
  410126:	jmp    0x7a71:0x9fddf4e0
  41012d:	fistp  WORD PTR [edi-0x334e6bcd]
  410133:	stos   BYTE PTR es:[edi],al
  410134:	std    
  410135:	dec    eax
  410136:	xor    dh,dh
  410138:	retf   0xe35f
  41013b:	call   0x8d699d04
  410140:	mov    bl,0x1d
  410142:	je     0x410117
  410144:	pop    esp
  410145:	inc    BYTE PTR [eax]
  410147:	aas    
  410148:	mov    bl,0x72
  41014a:	dec    esi
  41014b:	ins    DWORD PTR es:[edi],dx
  41014c:	push   0x52
  41014e:	sub    esi,DWORD PTR [edi-0x2754dccf]
  410154:	ins    DWORD PTR es:[edi],dx
  410155:	mov    bl,0xe7
  410157:	or     dh,dh
  410159:	pop    esi
  41015a:	add    DWORD PTR [esi+edx*1],esp
  41015d:	mov    bl,0x1
  41015f:	popa   
  410160:	retf   0x5dd9
  410163:	add    esp,DWORD PTR ds:0x3d5a1284
  410169:	add    bl,BYTE PTR [ebp+0x16]
  41016c:	into   
  41016d:	call   0x4c795829
  410172:	test   al,0xa3
  410174:	int3   
  410175:	mov    ah,dh
  410177:	mov    ah,0x35
  410179:	fwait
  41017a:	shl    DWORD PTR [edi],cl
  41017c:	out    dx,al
  41017d:	fs ss mov al,0x6c
  410181:	aam    0xde
  410183:	sub    edi,DWORD PTR [esi]
  410185:	jbe    0x4101a8
  410187:	jl     0x4101ad
  410189:	shl    BYTE PTR [eax+0x7],0xbd
  41018d:	in     al,0x11
  41018f:	retf   
  410190:	cmc    
  410191:	mov    DWORD PTR [ecx+0x68606c38],edx
  410197:	cmp    ah,bl
  410199:	out    dx,eax
  41019a:	mov    bl,BYTE PTR [edx+0x3b]
  41019d:	sbb    al,0x78
  41019f:	jp     0x4101b6
  4101a1:	push   esi
  4101a2:	sub    bh,dl
  4101a4:	mov    edx,DWORD PTR [eax-0x16ccfaa2]
  4101aa:	scas   eax,DWORD PTR es:[edi]
  4101ab:	sub    al,0x75
  4101ad:	jmp    0x4101c6
  4101af:	or     al,0xbb
  4101b1:	mov    dh,0xac
  4101b3:	sbb    edx,DWORD PTR [ebx]
  4101b5:	push   edx
  4101b6:	aad    0xca
  4101b8:	test   al,0xc8
  4101ba:	nop
  4101bb:	test   eax,0xab8ebccf
  4101c0:	icebp  
  4101c1:	shl    dh,0x61
  4101c4:	jmp    0x4101aa
  4101c6:	jo     0x410213
  4101c8:	ins    BYTE PTR es:[edi],dx
  4101c9:	inc    ebp
  4101ca:	fs jae 0x410189
  4101cd:	push   ebx
  4101ce:	adc    BYTE PTR [ebx-0x12bcf776],ah
  4101d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101d5:	popf   
  4101d6:	jp     0x410221
  4101d8:	add    al,0xdb
  4101da:	loopne 0x410225
  4101dc:	std    
  4101dd:	sbb    eax,DWORD PTR [edx+ebp*2+0x5e]
  4101e1:	mov    ah,0xc3
  4101e3:	leave  
  4101e4:	daa    
  4101e5:	push   edi
  4101e6:	xchg   edx,eax
  4101e7:	retf   0x34eb
  4101ea:	mov    ebp,0x5685dd44
  4101ef:	out    dx,al
  4101f0:	sbb    ch,bl
  4101f2:	ja     0x4101d6
  4101f4:	rcl    BYTE PTR [esi-0x6fc61389],cl
  4101fa:	pop    edi
  4101fb:	push   eax
  4101fc:	sub    DWORD PTR [eax-0xc],edi
  4101ff:	mov    eax,esi
  410201:	dec    edx
  410202:	(bad)  
  410203:	jmp    0x410275
  410205:	fs fucomip st,st(7)
  410208:	scas   al,BYTE PTR es:[edi]
  410209:	addr16 sbb al,0x2b
  41020c:	push   edx
  41020d:	xlat   BYTE PTR ds:[ebx]
  41020e:	cmp    BYTE PTR [edx],0x90
  410211:	xor    eax,0xf57b1a98
  410216:	pop    ds
  410217:	inc    esp
  410218:	inc    eax
  410219:	aaa    
  41021a:	jbe    0x410200
  41021c:	dec    ebx
  41021d:	cld    
  41021e:	add    dh,BYTE PTR [edx-0x42]
  410221:	mov    eax,DWORD PTR [ebx+0x6]
  410224:	mov    edx,0x4dd6a40
  410229:	and    BYTE PTR [edx+0x6e],dh
  41022c:	popf   
  41022d:	push   cs
  41022e:	pop    ss
  41022f:	pusha  
  410230:	fwait
  410231:	nop
  410232:	lods   al,BYTE PTR ds:[esi]
  410233:	sub    eax,0x412383a1
  410238:	retf   0xfae4
  41023b:	dec    ebx
  41023c:	sti    
  41023d:	push   ds
  41023e:	and    dh,al
  410240:	scas   al,BYTE PTR es:[edi]
  410241:	xlat   BYTE PTR ds:[ebx]
  410242:	fimul  DWORD PTR [eax+0xdaa29ca]
  410248:	(bad)  
  410249:	cmp    esp,eax
  41024b:	pop    edx
  41024c:	clc    
  41024d:	inc    ebx
  41024e:	je     0x4101f4
  410250:	xor    al,0xdc
  410252:	mov    ss,edx
  410254:	addr16 adc al,0xa
  410257:	popa   
  410258:	sbb    dh,dh
  41025a:	outs   dx,BYTE PTR ds:[esi]
  41025b:	push   0xa76e788f
  410260:	pushf  
  410261:	jns    0x410213
  410263:	jnp    0x41021e
  410265:	les    ebx,FWORD PTR [esi]
  410267:	std    
  410268:	or     al,0xb4
  41026a:	jp     0x410238
  41026c:	nop
  41026d:	lods   al,BYTE PTR ds:[esi]
  41026e:	stos   DWORD PTR es:[edi],eax
  41026f:	data16 sahf 
  410271:	mul    ch
  410273:	mov    eax,edi
  410275:	xchg   ebp,eax
  410276:	cmp    DWORD PTR [edi+0x59558d88],esi
  41027c:	cmp    BYTE PTR [ebx+0x7d9731c4],ah
  410282:	mov    edi,0xeccc9fab
  410287:	sbb    eax,0x88c51bbe
  41028c:	mov    ch,0x68
  41028e:	pushf  
  41028f:	sub    BYTE PTR [edi],0xf3
  410292:	pop    eax
  410293:	(bad)  
  410294:	add    BYTE PTR [eax-0x13],0x3a
  410298:	out    dx,eax
  410299:	stos   BYTE PTR es:[edi],al
  41029a:	out    0xe9,al
  41029c:	and    BYTE PTR [edx-0x4e],dh
  41029f:	pop    ds
  4102a0:	add    al,0x7e
  4102a2:	in     al,dx
  4102a3:	in     eax,dx
  4102a4:	in     al,dx
  4102a5:	mov    dl,0x31
  4102a7:	repz mov ebx,0x78093136
  4102ad:	sbb    BYTE PTR [edx-0xc],dl
  4102b0:	jecxz  0x41027b
  4102b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102b3:	push   ss
  4102b4:	adc    DWORD PTR [eax-0x5b56ae9b],ecx
  4102ba:	pushf  
  4102bb:	adc    al,0xb2
  4102bd:	mov    ebx,0xae13a841
  4102c2:	inc    ebp
  4102c3:	pop    dx
  4102c5:	pusha  
  4102c6:	xchg   ebp,eax
  4102c7:	rcl    DWORD PTR [esi],1
  4102c9:	mov    dl,0xd3
  4102cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102cc:	and    al,0x45
  4102ce:	lods   al,BYTE PTR ds:[esi]
  4102cf:	loopne 0x410267
  4102d1:	enter  0xae74,0x63
  4102d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102d6:	outs   dx,BYTE PTR ds:[esi]
  4102d7:	pop    esi
  4102d8:	dec    ebp
  4102d9:	xchg   ebp,eax
  4102da:	xlat   BYTE PTR ss:[ebx]
  4102dc:	xor    al,0x69
  4102de:	neg    BYTE PTR [eax]
  4102e0:	jl     0x410279
  4102e2:	mov    bh,0x67
  4102e4:	inc    edx
  4102e5:	sub    eax,0x8b518085
  4102ea:	push   ebx
  4102eb:	inc    ebp
  4102ec:	pop    ds
  4102ed:	jns    0x4102e1
  4102ef:	jmp    0xe02a57b4
  4102f4:	mov    ds:0xb70bbd9c,eax
  4102f9:	lock jns 0x410303
  4102fc:	add    bh,0x8e
  4102ff:	out    0x10,al
  410301:	jno    0x410295
  410303:	call   0xf361:0xbc96e61f
  41030a:	push   cs
  41030b:	and    BYTE PTR [edx],bl
  41030d:	test   ebp,ebx
  41030f:	call   0xa955:0xd53b07d2
  410316:	clc    
  410317:	aam    0xa3
  410319:	popf   
  41031a:	dec    edx
  41031b:	fcmove st,st(1)
  41031d:	gs repz xor al,0xed
  410321:	ret    0xf2b6
  410324:	xlat   BYTE PTR ds:[ebx]
  410325:	xor    cl,dh
  410327:	pushf  
  410328:	push   edi
  410329:	pop    ecx
  41032a:	scas   al,BYTE PTR es:[edi]
  41032b:	repnz out dx,al
  41032d:	sub    ah,dh
  41032f:	imul   edx,DWORD PTR [ebp-0x26],0x13a101e8
  410336:	lods   eax,DWORD PTR ds:[esi]
  410337:	fstp   TBYTE PTR [ecx+0xa8a283]
  41033d:	xlat   BYTE PTR ds:[ebx]
  41033e:	inc    ecx
  41033f:	shl    BYTE PTR [edi+0x6a],0x7a
  410343:	adc    BYTE PTR [edx],ch
  410345:	daa    
  410346:	xchg   esi,eax
  410347:	mov    edi,0xd3d6a877
  41034c:	mov    esp,0xfd268659
  410351:	cdq    
  410352:	ss dec ebp
  410354:	sub    DWORD PTR [edx-0x3814d2d0],edi
  41035a:	mov    eax,0xa341254e
  41035f:	lods   al,BYTE PTR ds:[esi]
  410360:	fidivr DWORD PTR ds:0xff09a9f8
  410366:	clc    
  410367:	or     cl,BYTE PTR [ebx+0x3def2267]
  41036d:	xchg   BYTE PTR [eax+eiz*8],ah
  410370:	jmp    0x41032a
  410372:	js     0x4103b3
  410374:	inc    edi
  410375:	jmp    0x126b:0xbdbee609
  41037c:	sahf   
  41037d:	dec    edi
  41037e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41037f:	lods   al,BYTE PTR ds:[esi]
  410380:	outs   dx,BYTE PTR ds:[esi]
  410381:	imul   edi,DWORD PTR [eax],0x2adad242
  410387:	ds daa 
  410389:	shl    ecx,0xfb
  41038c:	push   ss
  41038d:	adc    BYTE PTR [ebx],al
  41038f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410391:	dec    edx
  410392:	push   ds
  410393:	jno    0x4103e1
  410395:	adc    eax,0x7546f7b5
  41039a:	sti    
  41039b:	int    0xb4
  41039d:	sub    al,0x26
  41039f:	ins    BYTE PTR es:[edi],dx
  4103a0:	push   ds
  4103a1:	sbb    edi,DWORD PTR [edx-0x57f68733]
  4103a7:	pusha  
  4103a8:	fcomp  QWORD PTR [edx+edi*8]
  4103ab:	popf   
  4103ac:	mov    ah,0x41
  4103ae:	inc    esp
  4103af:	clc    
  4103b0:	sub    DWORD PTR [edx-0x4a5a005b],esp
  4103b6:	cmc    
  4103b7:	std    
  4103b8:	xor    al,0x10
  4103ba:	pusha  
  4103bb:	xchg   edi,eax
  4103bc:	cmp    al,0x82
  4103be:	ja     0x4103ef
  4103c0:	cmp    eax,0xb416df33
  4103c5:	jbe    0x41040f
  4103c7:	int3   
  4103c8:	je     0x4103f7
  4103ca:	nop
  4103cb:	mov    eax,0xedbcbe89
  4103d0:	push   ebp
  4103d1:	add    cl,BYTE PTR [ebx]
  4103d3:	sub    ebx,ebx
  4103d5:	out    dx,al
  4103d6:	fwait
  4103d7:	add    BYTE PTR [edi-0x75],bl
  4103da:	xchg   edx,eax
  4103db:	das    
  4103dc:	adc    DWORD PTR [eax+edi*8+0x779101c8],0xdaf7015e
  4103e7:	es cmp al,0x15
  4103ea:	add    ebx,esp
  4103ec:	adc    dh,BYTE PTR [ebx+0x4f581c31]
  4103f2:	jle    0x4103fb
  4103f4:	sub    DWORD PTR [ebx+0x475137fe],ebp
  4103fa:	cmp    ah,0x9c
  4103fd:	shl    DWORD PTR [edi],cl
  4103ff:	popf   
  410400:	ret    
  410401:	adc    eax,edx
  410403:	fwait
  410404:	neg    DWORD PTR [ebx]
  410406:	push   edi
  410407:	add    cl,BYTE PTR [ebx+edi*4]
  41040a:	add    DWORD PTR [esi],ecx
  41040c:	pushf  
  41040d:	mov    ds:0xfd1d8811,eax
  410412:	icebp  
  410413:	fsubr  DWORD PTR [ebx+eax*4+0x1ad121ad]
  41041a:	or     ch,BYTE PTR [ebp+eiz*2+0x39]
  41041e:	or     BYTE PTR gs:[eax+0x62],al
  410422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410423:	cmp    BYTE PTR [ecx],bh
  410425:	mov    edx,0x109118c3
  41042a:	xchg   ecx,edx
  41042c:	and    al,0x68
  41042e:	pop    edi
  41042f:	mov    edi,0xca81994c
  410434:	xchg   edi,eax
  410435:	hlt    
  410436:	mov    DWORD PTR [edi],0x91f6bf73
  41043c:	and    DWORD PTR [edi-0x5c],esi
  41043f:	or     eax,0x5ebf2be1
  410444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410445:	sbb    ebx,DWORD PTR ds:0x6f5d2d73
  41044b:	retf   
  41044c:	xchg   DWORD PTR [ecx+0x45],esp
  41044f:	jl     0x410437
  410451:	loope  0x4104c1
  410453:	inc    edi
  410454:	pusha  
  410455:	cdq    
  410456:	adc    BYTE PTR [edx+0x1e],al
  410459:	nop
  41045a:	or     al,0xac
  41045c:	je     0x4103ff
  41045e:	xchg   esi,eax
  41045f:	jo     0x410488
  410461:	sub    edx,DWORD PTR [ecx+0x58c5a19b]
  410467:	div    DWORD PTR [edx-0x189ae934]
  41046d:	ja     0x4103ff
  41046f:	pop    ebx
  410470:	addr16 mov edi,edi
  410473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410474:	jle    0x410448
  410476:	adc    eax,0x7c6e3c73
  41047b:	xor    al,BYTE PTR [edx-0x27]
  41047e:	adc    BYTE PTR [edx+0x1f],dh
  410481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410482:	pop    edi
  410483:	ja     0x410443
  410485:	pushf  
  410486:	test   BYTE PTR [edx],bl
  410488:	pop    ebx
  410489:	mov    ah,BYTE PTR [ecx-0x545fddb0]
  41048f:	mov    eax,ds:0x4855e651
  410494:	lods   al,BYTE PTR ds:[esi]
  410495:	retf   
  410496:	mov    ebp,0xd26f65d8
  41049b:	or     BYTE PTR [edx],al
  41049d:	mov    esp,0x4ba1edf
  4104a2:	xor    al,0x62
  4104a4:	add    edx,DWORD PTR [ebx-0x202af4b7]
  4104aa:	es push edi
  4104ac:	mov    ch,0x33
  4104ae:	sbb    eax,0xe55ccf9c
  4104b3:	mov    al,0x6d
  4104b5:	cmp    dx,WORD PTR [ecx+0x7b]
  4104b9:	loopne 0x410520
  4104bb:	pop    esi
  4104bc:	mov    dh,0x1
  4104be:	or     ebp,DWORD PTR [ebp-0x15]
  4104c1:	dec    eax
  4104c2:	data16 mov dl,0x1e
  4104c5:	dec    esp
  4104c6:	ins    DWORD PTR es:[edi],dx
  4104c7:	out    0x90,eax
  4104c9:	int3   
  4104ca:	aam    0x6
  4104cc:	in     al,dx
  4104cd:	daa    
  4104ce:	sub    eax,0xe5fdc6be
  4104d3:	lahf   
  4104d4:	fimul  DWORD PTR [edx]
  4104d6:	loop   0x410554
  4104d8:	sbb    eax,0xd6802294
  4104dd:	shr    BYTE PTR [ecx-0xd3ef9f],cl
  4104e3:	scas   al,BYTE PTR es:[edi]
  4104e4:	outs   dx,BYTE PTR ds:[esi]
  4104e5:	xchg   ah,cl
  4104e7:	inc    edi
  4104e8:	loopne 0x4104fa
  4104ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104eb:	shl    bl,0xe0
  4104ee:	aad    0x6c
  4104f0:	ds ja  0x4104f9
  4104f3:	rcr    BYTE PTR [edi],0x9d
  4104f6:	sub    BYTE PTR [esi+0x39],ch
  4104f9:	mov    ch,0x13
  4104fb:	xlat   BYTE PTR ds:[ebx]
  4104fc:	sub    al,0x31
  4104fe:	push   0xffffffa7
  410500:	xchg   BYTE PTR [ebx-0x195a5073],bh
  410506:	or     BYTE PTR [ebx+0xd],dl
  410509:	sbb    DWORD PTR [eax],edi
  41050b:	mov    ah,0x2f
  41050d:	mov    edx,0xa17cf33f
  410512:	push   esi
  410513:	jns    0x410501
  410515:	xor    esp,ebx
  410517:	iret   
  410518:	mov    ah,BYTE PTR [ebp-0x7]
  41051b:	push   ds
  41051c:	sub    eax,0x91655f44
  410521:	addr16 dec edi
  410523:	fnstcw WORD PTR [ebp-0x47]
  410526:	adc    dh,ah
  410528:	dec    ecx
  410529:	pop    eax
  41052a:	test   DWORD PTR [edx-0x1f5918c4],ebx
  410530:	int    0xad
  410532:	retf   
  410533:	adc    al,0xff
  410535:	and    esp,ecx
  410537:	lahf   
  410538:	inc    edi
  410539:	pushf  
  41053a:	pop    esp
  41053b:	or     al,0xe4
  41053d:	neg    DWORD PTR [edx+ecx*1-0x2b]
  410541:	xor    BYTE PTR [eax],0x4c
  410544:	push   ebp
  410545:	jg     0x41054a
  410547:	aaa    
  410548:	(bad)  
  410549:	(bad)  
  41054a:	fdivp  st(4),st
  41054c:	jp     0x4104e5
  41054e:	fcmovnu st,st(2)
  410550:	std    
  410551:	or     DWORD PTR gs:[ecx],ebp
  410554:	cdq    
  410555:	xlat   BYTE PTR ds:[ebx]
  410556:	mov    edx,0x77b645f
  41055b:	jo     0x4105c4
  41055d:	pop    edx
  41055e:	pop    esp
  41055f:	and    al,ch
  410561:	sahf   
  410562:	test   eax,0x3ab322ad
  410567:	mov    dl,0x56
  410569:	jp     0x410565
  41056b:	adc    al,0x4b
  41056d:	fstp   DWORD PTR [ebx+ecx*8+0x39]
  410571:	mov    ecx,0x75d0dae9
  410576:	fdivrp st(0),st
  410578:	(bad)  
  410579:	mov    WORD PTR [ebp+eiz*4-0x33],gs
  41057d:	mov    DWORD PTR [edx-0x21],esi
  410580:	push   0x53
  410582:	imul   eax,DWORD PTR [ecx-0x48],0xb2444237
  410589:	xor    BYTE PTR [eax+0xd89e7ed],al
  41058f:	cmp    eax,0xc3f40bf2
  410594:	ret    0xeaeb
  410597:	jge    0x4105f9
  410599:	mov    ah,0x1b
  41059b:	mov    ebp,0x2b5b1e36
  4105a0:	sbb    edi,DWORD PTR [ebx+0x34ebf7a9]
  4105a6:	test   BYTE PTR [eax],cl
  4105a8:	js     0x410608
  4105aa:	and    eax,0x9c09a173
  4105af:	mov    dh,0xdf
  4105b1:	mov    ebp,0x6da1395a
  4105b6:	mov    al,0xb
  4105b8:	cs push 0x4bf7a494
  4105be:	je     0x41057f
  4105c0:	mov    ds:0xc5f04616,al
  4105c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105c6:	mov    ah,0x40
  4105c8:	in     eax,dx
  4105c9:	ins    BYTE PTR es:[edi],dx
  4105ca:	fs inc eax
  4105cc:	enter  0x830c,0xf9
  4105d0:	mov    ds:0x926888f0,eax
  4105d5:	pop    edi
  4105d6:	jbe    0x410634
  4105d8:	cs jmp 0x8cd4:0x752f52aa
  4105e0:	mov    ebp,0xc4218bbd
  4105e5:	sub    dl,BYTE PTR [eax]
  4105e7:	mov    eax,ds:0x12bb4d77
  4105ec:	loopne 0x410589
  4105ee:	call   0x65f9df88
  4105f3:	mov    ds:0xb72d2fd5,al
  4105f8:	scas   al,BYTE PTR es:[edi]
  4105f9:	or     dh,0xa6
  4105fc:	dec    eax
  4105fd:	test   al,0xd2
  4105ff:	xor    eax,0x6a01b74a
  410604:	mov    edx,0xc2c2dc3c
  410609:	dec    eax
  41060a:	pop    edx
  41060b:	xchg   edx,eax
  41060c:	hlt    
  41060d:	push   ebp
  41060e:	add    edi,DWORD PTR ds:0x776c3b36
  410614:	xchg   esi,eax
  410615:	ja     0x410652
  410617:	dec    esp
  410618:	js     0x4105eb
  41061a:	jb     0x410634
  41061c:	mov    ds:0xb85ee675,al
  410621:	jp     0x4105be
  410623:	aaa    
  410624:	push   cs
  410625:	cmp    dl,ch
  410627:	and    BYTE PTR [edx],0x9f
  41062a:	(bad)  
  41062b:	or     ebx,esp
  41062d:	adc    BYTE PTR [ebp+0x18f6bfc1],dh
  410633:	jb     0x41066d
  410635:	and    eax,0x9b8670af
  41063a:	add    al,0x68
  41063c:	push   edx
  41063d:	popa   
  41063e:	xchg   esp,eax
  41063f:	je     0x410693
  410641:	push   ecx
  410642:	scas   eax,DWORD PTR es:[edi]
  410643:	or     ebx,esp
  410645:	lea    ecx,[ebx+esi*2+0x243103a5]
  41064c:	inc    esp
  41064d:	adc    al,BYTE PTR [edx]
  41064f:	icebp  
  410650:	int3   
  410651:	leave  
  410652:	das    
  410653:	pop    es
  410654:	jbe    0x41065b
  410656:	sub    al,0x6c
  410658:	clc    
  410659:	std    
  41065a:	xor    DWORD PTR [edx+0x41],eax
  41065d:	mov    WORD PTR [edi+0x3f03ce9a],?
  410663:	shr    DWORD PTR [esi+0x67],0x2c
  410667:	xchg   DWORD PTR [ebx+0x3b7f01b6],edi
  41066d:	test   BYTE PTR [eax+0x32],dh
  410670:	dec    ecx
  410671:	xchg   ebp,eax
  410672:	push   0x6
  410674:	and    DWORD PTR [eax+0x1ba03d7a],0xffffffd2
  41067b:	lds    edi,FWORD PTR [edx+ebp*8]
  41067e:	mov    eax,ds:0xbc30537a
  410683:	(bad)  
  410685:	and    bl,BYTE PTR [eax]
  410687:	mov    esi,0x77ea4db8
  41068c:	xor    ch,BYTE PTR [ebx+ebp*4]
  41068f:	xchg   edx,eax
  410690:	adc    eax,0xba0cc914
  410695:	xchg   esp,eax
  410696:	and    DWORD PTR [edi-0x3d],edx
  410699:	mov    esp,DWORD PTR [ebp-0xd]
  41069c:	retf   
  41069d:	stos   BYTE PTR es:[edi],al
  41069e:	jnp    0x410646
  4106a0:	mov    ebx,DWORD PTR [ebx]
  4106a2:	sbb    ch,BYTE PTR [ecx]
  4106a4:	cmc    
  4106a5:	lods   al,BYTE PTR ds:[esi]
  4106a6:	mov    ?,WORD PTR [esi+ebp*1-0x48]
  4106aa:	mov    BYTE PTR [edi-0x3d5e5834],bl
  4106b0:	sti    
  4106b1:	add    al,BYTE PTR [edi-0xa3f4157]
  4106b7:	retf   0x957e
  4106ba:	sbb    BYTE PTR [bx+si],ch
  4106bd:	inc    esi
  4106be:	loope  0x410721
  4106c0:	sbb    DWORD PTR gs:[esi+0x15f2880],ecx
  4106c7:	mov    ebp,0xa9f79c8b
  4106cc:	(bad)  
  4106ce:	out    0xb0,eax
  4106d0:	mov    ah,BYTE PTR [edi-0x294771b1]
  4106d6:	jp     0x4106a2
  4106d8:	cwde   
  4106d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106da:	jb     0x41067d
  4106dc:	xchg   ecx,eax
  4106dd:	cmp    BYTE PTR [ebp+0x1a],ah
  4106e0:	adc    al,0x19
  4106e2:	push   eax
  4106e3:	mov    eax,DWORD PTR [ebp+0x1b]
  4106e6:	int    0x12
  4106e8:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106ea:	pop    ecx
  4106eb:	jl     0x41072b
  4106ed:	mov    esi,0x8efb03ba
  4106f2:	aam    0x52
  4106f4:	push   ds
  4106f5:	or     eax,0xaa4e16b0
  4106fa:	fldenv [ebp+edi*8-0x7b]
  4106fe:	shr    cl,0xf0
  410701:	jbe    0x4106e7
  410703:	ins    BYTE PTR es:[edi],dx
  410704:	call   0x600c:0xf78f5b1b
  41070b:	(bad)  
  41070c:	push   edx
  41070d:	pop    esp
  41070e:	das    
  41070f:	jp     0x41078b
  410711:	mov    dh,0xd1
  410713:	dec    edx
  410714:	(bad)  
  410715:	cmp    ebx,ecx
  410717:	ins    BYTE PTR es:[edi],dx
  410718:	fcmove st,st(3)
  41071a:	jns    0x41071d
  41071c:	add    eax,0x3b3744e5
  410721:	inc    ebp
  410722:	sub    DWORD PTR ds:0xd2ad23d1,eax
  410728:	scas   al,BYTE PTR es:[edi]
  410729:	push   ebp
  41072a:	push   ebx
  41072b:	cmp    al,0x10
  41072d:	(bad)  
  41072e:	loope  0x41076d
  410730:	push   0x1db61960
  410735:	cmp    al,0xf1
  410737:	xlat   BYTE PTR ds:[ebx]
  410738:	fucomip st,st(7)
  41073a:	dec    esp
  41073b:	cmp    edi,eax
  41073d:	es sub dh,bh
  410740:	jns    0x410792
  410742:	cmp    eax,0xc0c64f4
  410747:	mov    al,ds:0xe9ac2f53
  41074c:	repnz xchg ebp,eax
  41074e:	and    DWORD PTR [ebp+0x5f],edi
  410751:	jle    0x410791
  410753:	xlat   BYTE PTR ds:[ebx]
  410754:	in     al,dx
  410755:	cmp    DWORD PTR [ebx+0xb9e0707],edi
  41075b:	jmp    0x4107d1
  41075d:	mov    dl,0xe4
  41075f:	fwait
  410760:	outs   dx,BYTE PTR ds:[esi]
  410761:	xchg   ecx,eax
  410762:	call   0x43e5c9f4
  410767:	pop    eax
  410768:	dec    edi
  410769:	jl     0x41075e
  41076b:	push   0x7925b5cb
  410770:	sub    BYTE PTR [edi-0x4b],dh
  410773:	arpl   WORD PTR [edx+0x1d],dx
  410776:	cs cs ja 0x410713
  41077a:	aam    0xe4
  41077c:	sbb    al,BYTE PTR [edi+0x75]
  41077f:	xchg   ebx,eax
  410780:	xor    edi,ecx
  410782:	pusha  
  410783:	fimul  DWORD PTR [edx+0x53799ec7]
  410789:	shr    DWORD PTR cs:[ecx+0x5c],1
  41078d:	jne    0x410718
  41078f:	loop   0x410714
  410791:	lea    esi,[edx+edx*8-0x4b]
  410795:	sub    eax,0x9de78f21
  41079a:	inc    esp
  41079b:	(bad)  
  41079c:	test   al,0x2a
  41079e:	mov    esp,0xd885d9b0
  4107a3:	and    DWORD PTR [edx+0x6],0x62
  4107a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107a8:	sbb    esi,DWORD PTR [eax]
  4107aa:	(bad)  
  4107ac:	xchg   edx,eax
  4107ad:	popa   
  4107ae:	cli    
  4107af:	or     eax,0xa97029ef
  4107b4:	xor    esp,DWORD PTR [edi+0x19]
  4107b7:	push   esi
  4107b8:	xchg   ebp,eax
  4107b9:	mov    dl,0xbd
  4107bb:	(bad)  
  4107bc:	lods   eax,DWORD PTR ds:[esi]
  4107bd:	es cmc 
  4107bf:	sbb    DWORD PTR [ebx+eiz*4+0x2c],esi
  4107c3:	loop   0x4107d0
  4107c5:	inc    eax
  4107c6:	mov    edi,0xababa87c
  4107cb:	js     0x41077e
  4107cd:	jl     0x41082c
  4107cf:	mov    al,ds:0x205a97a5
  4107d4:	mov    ebx,0x34db167d
  4107d9:	cwde   
  4107da:	ret    0xaf84
  4107dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107de:	prefetchw (bad)
  4107df:	or     eax,0x948afec9
  4107e4:	adc    eax,0x93cf18b4
  4107e9:	in     eax,dx
  4107ea:	and    DWORD PTR [ebx+0x3c1bf87],edi
  4107f0:	aad    0xca
  4107f2:	inc    ecx
  4107f3:	in     eax,dx
  4107f4:	xor    ebp,ebx
  4107f6:	(bad)  
  4107f7:	xor    ch,BYTE PTR [eax-0x22]
  4107fa:	popf   
  4107fb:	div    al
  4107fd:	sub    eax,0x6f4fbfe1
  410802:	cld    
  410803:	push   0x5b84541c
  410808:	ficomp DWORD PTR [edi+0x7ef8c892]
  41080e:	dec    esp
  41080f:	adc    BYTE PTR [eax],bh
  410811:	fucomi st,st(3)
  410813:	xor    ebp,edx
  410815:	jp     0x41083a
  410817:	cmp    dl,BYTE PTR [ecx+0xb]
  41081a:	dec    edi
  41081b:	lock mov esi,0xa4199da7
  410821:	jne    0x41087c
  410823:	imul   eax,DWORD PTR [eax-0x230e3eeb],0x6bacff9e
  41082d:	jnp    0x4107da
  41082f:	sahf   
  410830:	retf   0xf1f7
  410833:	cld    
  410834:	sbb    DWORD PTR [ebx],ebx
  410836:	dec    esp
  410837:	pop    esi
  410838:	or     BYTE PTR [esi-0x45],ch
  41083b:	add    eax,0xbb9a438f
  410840:	clc    
  410841:	data16 jb 0x41083c
  410844:	push   cs
  410845:	add    BYTE PTR [ebx-0x4c0eea87],0xc1
  41084c:	jno    0x4107e8
  41084e:	pop    esi
  41084f:	xor    al,0xcb
  410851:	iret   
  410852:	sbb    ah,BYTE PTR [edx+ebp*1]
  410855:	call   0x57113604
  41085a:	mov    edx,0xfeeaaeb9
  41085f:	inc    ecx
  410860:	imul   eax,DWORD PTR ds:0x2c9fe137,0x54
  410867:	stos   BYTE PTR es:[edi],al
  410868:	xchg   ecx,eax
  410869:	cwde   
  41086a:	or     DWORD PTR [esi+0x53],0xffffffa4
  41086e:	sub    esp,DWORD PTR [ecx]
  410870:	stos   DWORD PTR es:[edi],eax
  410871:	outs   dx,DWORD PTR ds:[esi]
  410872:	outs   dx,DWORD PTR ds:[esi]
  410873:	mov    cl,0xce
  410875:	repz (bad) 
  410877:	aaa    
  410878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410879:	adc    eax,0x29d258e4
  41087e:	mov    BYTE PTR [ecx],0x6b
  410881:	stos   BYTE PTR es:[edi],al
  410882:	pop    ebx
  410883:	sub    eax,0x230e215f
  410888:	stos   DWORD PTR es:[edi],eax
  410889:	sub    BYTE PTR [ebp-0x3d],cl
  41088c:	sub    DWORD PTR [ebx],0xffffffcb
  41088f:	cld    
  410890:	jns    0x4108cb
  410892:	or     eax,0x87b6c755
  410897:	aam    0x2c
  410899:	dec    eax
  41089a:	sub    DWORD PTR [ebx+0x60],ebp
  41089d:	jnp    0x410857
  41089f:	nop
  4108a0:	inc    eax
  4108a1:	pop    ebx
  4108a2:	mov    bl,0x89
  4108a4:	inc    ebx
  4108a5:	dec    edi
  4108a6:	mov    dh,0xa5
  4108a8:	stc    
  4108a9:	xchg   edi,eax
  4108aa:	mov    ch,0xd
  4108ac:	sub    al,0xc0
  4108ae:	and    BYTE PTR [edi+0x61],ah
  4108b1:	inc    ebp
  4108b2:	jbe    0x41091a
  4108b4:	int    0x32
  4108b6:	push   esi
  4108b7:	add    BYTE PTR [ecx-0x4e3e4691],al
  4108bd:	fisub  WORD PTR [ecx+esi*4]
  4108c0:	push   ds
  4108c1:	cmp    BYTE PTR [ebx+0x53],ch
  4108c4:	mov    edi,0xcd65a16b
  4108c9:	mov    ss,edx
  4108cb:	(bad)  [ecx+0x35]
  4108ce:	cmp    eax,edi
  4108d0:	sbb    al,BYTE PTR ds:0x92182949
  4108d6:	pop    esi
  4108d7:	or     BYTE PTR [edx-0x1],ah
  4108da:	mov    ?,WORD PTR [edx+0x2a]
  4108dd:	test   eax,0x9f596b2f
  4108e2:	test   al,0xb3
  4108e4:	clc    
  4108e5:	popf   
  4108e6:	daa    
  4108e7:	or     eax,0x4a679059
  4108ec:	push   0x24
  4108ee:	push   ecx
  4108ef:	jns    0x410955
  4108f1:	aam    0x0
  4108f3:	mov    ebp,0x371bffd0
  4108f8:	or     bh,bl
  4108fa:	jecxz  0x41094a
  4108fc:	in     eax,dx
  4108fd:	ret    
  4108fe:	push   edi
  4108ff:	mov    edi,0xce4d6abf
  410904:	jge    0x410935
  410906:	cmp    ch,ch
  410908:	imul   BYTE PTR [eax]
  41090a:	rcr    DWORD PTR [eax+0x36d2e03],0x92
  410911:	aad    0x98
  410913:	pop    ecx
  410914:	ja     0x410957
  410916:	jne    0x41093e
  410918:	push   eax
  410919:	push   edi
  41091a:	mov    eax,0xb85aaf75
  41091f:	mov    DWORD PTR ds:0x81b22ba9,edx
  410925:	xchg   edx,eax
  410926:	push   eax
  410927:	addr16 xor ch,al
  41092a:	cs ss icebp 
  41092d:	cmp    cl,BYTE PTR fs:[ebp-0x6b]
  410931:	push   edi
  410932:	sub    DWORD PTR ds:0x7a9de03a,edx
  410938:	jp     0x410926
  41093a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41093b:	daa    
  41093c:	imul   ebx,edx,0x44
  41093f:	pop    ebx
  410940:	out    dx,eax
  410941:	cli    
  410942:	push   cs
  410943:	cmp    ebp,ecx
  410945:	or     DWORD PTR [edx],eax
  410947:	test   eax,0x59915ac9
  41094c:	pushf  
  41094d:	rcl    BYTE PTR [eax],cl
  41094f:	jmp    0x4108f1
  410951:	in     al,0xdd
  410953:	adc    DWORD PTR [ecx+esi*8+0x5cdecb28],esi
  41095a:	jmp    0xed9f:0xc2857b0b
  410961:	imul   ebp,DWORD PTR [ecx-0x4a],0x6eddfc97
  410968:	jne    0x41092d
  41096a:	test   al,0xfa
  41096c:	adc    dh,BYTE PTR [edi]
  41096e:	push   edx
  41096f:	sbb    eax,0x1358270a
  410974:	ins    DWORD PTR es:[edi],dx
  410975:	xchg   edi,eax
  410976:	xchg   DWORD PTR [ebx-0x5702aa90],eax
  41097c:	in     eax,dx
  41097d:	int    0xe6
  41097f:	pop    edi
  410980:	ret    
  410981:	aas    
  410982:	cwde   
  410983:	in     eax,0x18
  410985:	xchg   BYTE PTR [edi+0x7db55ca1],dh
  41098b:	sahf   
  41098c:	and    bl,dh
  41098e:	sbb    edi,edi
  410990:	push   edx
  410991:	adc    eax,ecx
  410993:	shl    BYTE PTR [ebp+0x4193bee8],cl
  410999:	icebp  
  41099a:	push   edi
  41099b:	or     BYTE PTR [ecx],bl
  41099d:	mov    al,0xaa
  41099f:	push   ss
  4109a0:	jb     0x4109f3
  4109a2:	and    DWORD PTR [edx-0x40],eax
  4109a5:	dec    edi
  4109a6:	dec    ebx
  4109a7:	jne    0x410940
  4109a9:	jg     0x410a14
  4109ab:	shl    DWORD PTR [edi+0xe156a36],1
  4109b1:	and    al,0xb3
  4109b3:	xchg   edx,eax
  4109b4:	mov    esp,0x9a8ffb05
  4109b9:	or     BYTE PTR [esi-0x362f415],ch
  4109bf:	and    BYTE PTR [ebx-0x54],ah
  4109c2:	or     ah,cl
  4109c4:	cld    
  4109c5:	stos   BYTE PTR es:[edi],al
  4109c6:	cli    
  4109c7:	jne    0x410993
  4109c9:	std    
  4109ca:	inc    esp
  4109cb:	sahf   
  4109cc:	dec    esp
  4109cd:	xchg   DWORD PTR [edi],esi
  4109cf:	cwde   
  4109d0:	xor    esi,DWORD PTR [ebp+0x66]
  4109d3:	retf   0x729f
  4109d6:	(bad)  
  4109d7:	arpl   WORD PTR [esi],di
  4109d9:	adc    DWORD PTR [edi],edx
  4109db:	jp     0x4109f1
  4109dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109de:	xchg   ebx,eax
  4109df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109e0:	out    dx,eax
  4109e1:	xchg   ecx,eax
  4109e2:	fild   WORD PTR [eax]
  4109e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109e5:	cwde   
  4109e6:	jbe    0x4109d0
  4109e8:	add    al,0x98
  4109ea:	push   0xcc01407
  4109ef:	pop    ecx
  4109f0:	(bad)  
  4109f1:	mov    al,BYTE PTR cs:[ebx-0x56]
  4109f5:	test   eax,0x2a669098
  4109fa:	call   0xdfac1b30
  4109ff:	(bad)  
  410a00:	ds inc edx
  410a02:	stc    
  410a03:	mov    esp,DWORD PTR [edi]
  410a05:	shl    BYTE PTR [edx+eax*2+0x1f0bfbf1],1
  410a0c:	or     edx,DWORD PTR [ecx-0x35]
  410a0f:	sbb    ebp,0xffffff90
  410a12:	shl    BYTE PTR [ebx+0x7e79e615],0x86
  410a19:	ret    
  410a1a:	jns    0x410a0f
  410a1c:	sbb    ecx,DWORD PTR [edi-0x6689fa1e]
  410a22:	idiv   BYTE PTR [ecx-0x4c283edc]
  410a28:	div    BYTE PTR [edi+0x7]
  410a2b:	pop    ebx
  410a2c:	mov    WORD PTR [edx-0x58663f0d],fs
  410a32:	inc    esp
  410a33:	and    DWORD PTR [ebx],esp
  410a35:	retf   0xd8c4
  410a38:	ss call 0x77e57439
  410a3e:	dec    ecx
  410a3f:	jo     0x410a06
  410a41:	rcr    DWORD PTR [edi],0x74
  410a44:	jge    0x410ab9
  410a46:	nop
  410a47:	add    al,0x96
  410a49:	lods   eax,DWORD PTR ds:[esi]
  410a4a:	shl    BYTE PTR [edx-0x7c],cl
  410a4d:	and    eax,0x4187d8f7
  410a52:	loop   0x410a6e
  410a54:	daa    
  410a55:	pop    esp
  410a56:	and    eax,0x2eca995a
  410a5b:	cmp    DWORD PTR [eax],ecx
  410a5d:	outs   dx,DWORD PTR ds:[esi]
  410a5e:	add    ebp,esi
  410a60:	dec    eax
  410a61:	out    dx,al
  410a62:	push   0xffffffe8
  410a64:	mov    cl,0x3
  410a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a67:	mov    ch,0xc7
  410a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a6a:	pushf  
  410a6b:	jns    0x410a8a
  410a6d:	jnp    0x410a0a
  410a6f:	pop    es
  410a70:	mov    gs,WORD PTR [eax+edx*4-0x6d]
  410a74:	sbb    eax,0x6eba0857
  410a79:	pop    edi
  410a7a:	rcl    BYTE PTR [esp+eiz*4+0x38],cl
  410a7e:	pop    ecx
  410a7f:	lds    eax,FWORD PTR [ebp-0x1994a6a1]
  410a85:	dec    ecx
  410a86:	out    0xa9,al
  410a88:	pop    edi
  410a89:	sub    DWORD PTR [esi+0x79],ebp
  410a8c:	push   edi
  410a8d:	out    0xd9,eax
  410a8f:	sbb    DWORD PTR [edx-0x7fe61fcf],ebp
  410a95:	les    esi,FWORD PTR [edi+0x2b]
  410a98:	xchg   edx,ebx
  410a9a:	pop    eax
  410a9b:	fimul  WORD PTR [ebp-0x4f509579]
  410aa1:	mov    bh,0x13
  410aa3:	xchg   edi,eax
  410aa4:	dec    esp
  410aa5:	cmp    al,dl
  410aa7:	les    ebx,FWORD PTR [edx+0x62caa029]
  410aad:	jp     0x410a54
  410aaf:	cld    
  410ab0:	add    DWORD PTR [edx-0x2a065064],ebp
  410ab6:	pushf  
  410ab7:	push   ebx
  410ab8:	adc    DWORD PTR [eax-0x5f],edx
  410abb:	fnsave [ecx]
  410abd:	lods   al,BYTE PTR ds:[esi]
  410abe:	push   edx
  410abf:	mov    DWORD PTR [ecx],edi
  410ac1:	ret    0xdc36
  410ac4:	jg     0x410b00
  410ac6:	retf   
  410ac7:	xchg   edi,eax
  410ac8:	outs   dx,DWORD PTR ds:[esi]
  410ac9:	pop    ecx
  410aca:	push   ds
  410acb:	(bad)  
  410acc:	dec    ebp
  410acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ace:	cmp    DWORD PTR [esi],ebx
  410ad0:	cli    
  410ad1:	fdiv   QWORD PTR cs:[ebx+0x1b9fac4]
  410ad8:	xor    BYTE PTR ds:0x8cb27125,al
  410ade:	cmp    esp,esi
  410ae0:	jecxz  0x410b59
  410ae2:	fidivr WORD PTR [ecx+0x5b]
  410ae5:	pop    ss
  410ae6:	pop    edi
  410ae7:	enter  0x2386,0x3f
  410aeb:	pop    edi
  410aec:	icebp  
  410aed:	daa    
  410aee:	pop    esp
  410aef:	push   ds
  410af0:	in     al,0x6a
  410af2:	adc    ecx,DWORD PTR [edi]
  410af4:	sbb    eax,0x8c8c6f7d
  410af9:	stc    
  410afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410afb:	jg     0x410a9b
  410afd:	cmc    
  410afe:	or     BYTE PTR [edi-0xb],ah
  410b01:	and    al,0x9d
  410b03:	sbb    bh,BYTE PTR [esi]
  410b05:	push   ebp
  410b06:	jbe    0x410b34
  410b08:	inc    eax
  410b09:	shr    DWORD PTR [ebx+0x1077015e],cl
  410b0f:	sbb    eax,esp
  410b11:	mov    BYTE PTR [ecx+esi*2-0x1c7c11d5],dl
  410b18:	(bad)
  410b1c:	mov    ds:0xf7f0d58d,al
  410b21:	mov    DWORD PTR [ebp-0x2],edi
  410b24:	mov    eax,0x36712a2d
  410b29:	cli    
  410b2a:	outs   dx,DWORD PTR ds:[esi]
  410b2b:	xchg   edi,eax
  410b2c:	test   DWORD PTR ds:0xc8df9d08,esp
  410b32:	iret   
  410b33:	mov    ah,0xbe
  410b35:	fdivr  DWORD PTR [esi]
  410b37:	mov    eax,0x7edf1769
  410b3c:	sub    DWORD PTR [eax+ebp*8],ecx
  410b3f:	cmp    DWORD PTR [ebx],edx
  410b41:	jbe    0x410b54
  410b43:	fs sub eax,0x5e9a08db
  410b49:	jl     0x410b99
  410b4b:	mov    ds:0x8c21dd08,eax
  410b50:	ja     0x410bb1
  410b52:	pushf  
  410b53:	jle    0x410b2c
  410b55:	mov    bl,0xe4
  410b57:	sbb    BYTE PTR [eax+0x11],al
  410b5a:	pop    edi
  410b5b:	jmp    0xe60a:0x337733e4
  410b62:	inc    ecx
  410b63:	outs   dx,DWORD PTR ds:[esi]
  410b64:	pop    esi
  410b65:	jae    0x410b9b
  410b67:	push   ecx
  410b68:	cmp    al,0x9f
  410b6a:	mov    ecx,0x2074db3c
  410b6f:	push   edx
  410b70:	mov    cl,0x93
  410b72:	ret    
  410b73:	and    DWORD PTR ds:0x6f764c46,edi
  410b79:	mov    eax,ds:0x6f5c5c8c
  410b7e:	pushf  
  410b7f:	push   cs
  410b80:	test   eax,esp
  410b82:	stos   DWORD PTR es:[edi],eax
  410b83:	pop    edi
  410b84:	loopne 0x410bd7
  410b86:	ret    
  410b87:	jnp    0x410baf
  410b89:	mov    esp,0xa78f99ba
  410b8e:	sub    DWORD PTR [edi],ecx
  410b90:	scas   eax,DWORD PTR es:[edi]
  410b91:	jmp    0x402:0x2dd54090
  410b98:	jge    0x410c11
  410b9a:	mov    eax,0x1fea7bd5
  410b9f:	or     BYTE PTR [eax],ch
  410ba1:	dec    DWORD PTR [edi]
  410ba3:	xor    esp,DWORD PTR [ebp+0x5a]
  410ba6:	jg     0x410b77
  410ba8:	xor    BYTE PTR ds:0xa73c47b9,bl
  410bae:	lods   al,BYTE PTR ds:[esi]
  410baf:	add    BYTE PTR [ebp+0x3a70f72],0xdf
  410bb6:	cli    
  410bb7:	xchg   esp,eax
  410bb8:	popa   
  410bb9:	int    0xc2
  410bbb:	adc    ch,BYTE PTR [ecx]
  410bbd:	mov    edx,0xecbb8b7b
  410bc2:	mov    esp,0x6d80b19
  410bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bc8:	mov    dh,0x4d
  410bca:	inc    esi
  410bcb:	jmp    0x2e970937
  410bd0:	fistp  WORD PTR [edi+esi*4-0x481884c7]
  410bd7:	mov    ah,0x4a
  410bd9:	xor    al,0x82
  410bdb:	mov    ecx,0x3ed01175
  410be0:	add    BYTE PTR [esi+0xfaaacdf],al
  410be6:	aas    
  410be7:	outs   dx,BYTE PTR es:[esi]
  410be9:	pop    es
  410bea:	xchg   esi,eax
  410beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bec:	adc    DWORD PTR cs:[ecx],edx
  410bef:	add    BYTE PTR [esi*4+0x85cde9c],al
  410bf6:	outs   dx,DWORD PTR ds:[esi]
  410bf7:	mov    ebp,0xa88a3506
  410bfc:	hlt    
  410bfd:	ja     0x410bf7
  410bff:	sbb    eax,0xe39fcb9f
  410c04:	or     esi,0xb349a87f
  410c0a:	cli    
  410c0b:	jge    0x410c6b
  410c0d:	push   cs
  410c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c0f:	ss retf 
  410c11:	push   edi
  410c12:	sub    eax,0xc6be3089
  410c17:	or     esp,ebx
  410c19:	xor    BYTE PTR [eax],0x8b
  410c1c:	xchg   edi,eax
  410c1d:	pusha  
  410c1e:	adc    al,BYTE PTR [edx]
  410c20:	add    DWORD PTR [esi],esp
  410c22:	xchg   DWORD PTR [edi+0x433c497e],ebx
  410c28:	not    BYTE PTR [edi]
  410c2a:	xor    eax,0x8bc11b3
  410c2f:	in     eax,dx
  410c30:	popf   
  410c31:	(bad)  
  410c32:	mov    al,0xe1
  410c34:	push   ds
  410c35:	mov    ebp,0xb6ed7b9f
  410c3a:	aaa    
  410c3b:	je     0x410c1a
  410c3d:	push   ebp
  410c3e:	dec    ebx
  410c3f:	mov    ecx,0x92ca0cf5
  410c44:	or     eax,0x18e865c4
  410c49:	xchg   edi,eax
  410c4a:	cmp    eax,0x40c271dc
  410c4f:	aas    
  410c50:	out    0x76,al
  410c52:	xor    DWORD PTR [ebx-0xb],0x6726404c
  410c59:	gs push 0xde268568
  410c5f:	push   ecx
  410c60:	dec    edx
  410c61:	or     al,BYTE PTR [ebx-0x19]
  410c64:	int    0x1
  410c66:	lods   al,BYTE PTR ds:[esi]
  410c67:	or     al,0x30
  410c69:	jmp    0x4b70:0xfaa749e7
  410c70:	inc    ecx
  410c71:	fisubr DWORD PTR [ebx+0x3a9c8278]
  410c77:	or     eax,0xd2167dd
  410c7c:	jo     0x410c9c
  410c7e:	mov    ah,0x44
  410c80:	div    BYTE PTR cs:[ebx+0x435de89e]
  410c87:	loope  0x410c41
  410c89:	inc    edi
  410c8a:	repnz xchg ebx,eax
  410c8c:	stos   BYTE PTR es:[edi],al
  410c8d:	inc    esp
  410c8e:	sbb    dl,ah
  410c90:	pop    ebx
  410c91:	scas   eax,DWORD PTR es:[edi]
  410c92:	mov    edx,0xcfbb565d
  410c97:	clc    
  410c98:	rol    BYTE PTR [edx-0x3adab8c8],1
  410c9e:	fs and eax,0x9f15216f
  410ca4:	fwait
  410ca5:	test   DWORD PTR [edx-0x4487d036],0x89f0c488
  410caf:	arpl   bx,cx
  410cb1:	mov    DWORD PTR [eax-0x30b56903],eax
  410cb7:	mov    WORD PTR [edi+edx*2],?
  410cba:	adc    ebx,DWORD PTR [eax]
  410cbc:	sub    ecx,DWORD PTR [ebp+0x4d76a26d]
  410cc2:	jns    0x410d10
  410cc4:	je     0x410c7c
  410cc6:	lds    edi,FWORD PTR [ecx+ebx*4+0x45]
  410cca:	aad    0x26
  410ccc:	mov    bh,0xbb
  410cce:	pop    ss
  410ccf:	repnz mov dh,0x10
  410cd2:	and    edx,ebp
  410cd4:	fprem  
  410cd6:	xchg   ebp,eax
  410cd7:	out    0x46,eax
  410cd9:	mov    cl,0x6
  410cdb:	pop    dx
  410cdd:	sub    eax,0x1a6de28
  410ce2:	cmp    bh,dh
  410ce4:	pop    edx
  410ce5:	push   ebx
  410ce6:	xor    ebx,edx
  410ce8:	(bad)  
  410ce9:	pop    ecx
  410cea:	lock jmp 0x2d85:0x1907ef47
  410cf2:	popa   
  410cf3:	shl    edi,cl
  410cf5:	in     al,dx
  410cf6:	shl    DWORD PTR [edi+0x52e9b7a2],0x3
  410cfd:	sbb    BYTE PTR [edx-0x2c],bh
  410d00:	xor    DWORD PTR [ebx+0x35d9de9c],edi
  410d06:	and    cl,BYTE PTR [edx]
  410d08:	cmp    eax,0x1a8c2331
  410d0d:	mov    eax,0x7fc7cf5a
  410d12:	mov    esp,0x29e8bc8f
  410d17:	fidiv  DWORD PTR [esp+ecx*2-0x5]
  410d1b:	jp     0x410d03
  410d1d:	mov    bl,0xe
  410d1f:	mov    al,0x53
  410d21:	push   es
  410d22:	add    BYTE PTR [ebx],0x11
  410d25:	in     al,0x75
  410d27:	pop    esi
  410d28:	mov    WORD PTR [edi+esi*2-0x34cb28c4],?
  410d2f:	push   0xc048a574
  410d34:	adc    BYTE PTR [esp+eax*4+0x38],al
  410d38:	imul   eax,DWORD PTR [ebp-0x35],0x16bc2967
  410d3f:	mov    eax,ds:0x7a59a2d3
  410d44:	adc    BYTE PTR [ebp-0x8],dl
  410d47:	mov    bh,0xda
  410d49:	xchg   BYTE PTR [ebx-0x4ee6d19d],bl
  410d4f:	pop    es
  410d50:	xor    edx,esp
  410d52:	mov    bl,0x8
  410d54:	mov    BYTE PTR [eax+0x78],ch
  410d57:	pushw  0x2e
  410d5a:	out    dx,al
  410d5b:	cmp    ebx,DWORD PTR [edi+0x3ba2551]
  410d61:	add    ebp,DWORD PTR [edi+edx*1]
  410d64:	fsubr  DWORD PTR [edi+0x2b]
  410d67:	mov    esi,0xf6e2ec33
  410d6c:	dec    edx
  410d6d:	lods   al,BYTE PTR ds:[esi]
  410d6e:	dec    eax
  410d6f:	mov    edx,0xfb0a6bb2
  410d74:	mov    ah,0x37
  410d76:	pop    ss
  410d77:	int3   
  410d78:	xchg   BYTE PTR [edi-0x419f2341],bh
  410d7e:	les    ebp,FWORD PTR [esi+0x3c99d8e8]
  410d84:	inc    ebp
  410d85:	lahf   
  410d86:	mov    eax,ds:0x7bade141
  410d8b:	xor    al,0x46
  410d8d:	in     al,dx
  410d8e:	pop    esp
  410d8f:	test   DWORD PTR [ebp+0x65],edx
  410d92:	sub    DWORD PTR [ecx-0x1ad9c399],esp
  410d98:	ja     0x410db7
  410d9a:	aad    0xca
  410d9c:	jg     0x410d73
  410d9e:	stos   DWORD PTR es:[edi],eax
  410d9f:	in     al,0x52
  410da1:	push   0xb05e931f
  410da6:	inc    edi
  410da7:	sbb    eax,0x1e7ea6b1
  410dac:	es cdq 
  410dae:	mov    ah,0x82
  410db0:	or     ecx,DWORD PTR [ecx+esi*4-0x4d]
  410db4:	xchg   ecx,eax
  410db5:	inc    esp
  410db6:	shl    BYTE PTR [eax+esi*2-0x1d],0xe9
  410dbb:	sahf   
  410dbc:	clc    
  410dbd:	ret    0x9292
  410dc0:	jns    0x410da2
  410dc2:	push   eax
  410dc3:	or     bh,dh
  410dc5:	ret    
  410dc6:	inc    ebx
  410dc7:	clc    
  410dc8:	repz add al,0xb
  410dcb:	js     0x410ddf
  410dcd:	cmp    esi,DWORD PTR [esi-0x72]
  410dd0:	add    ebx,ebp
  410dd2:	cmp    al,BYTE PTR [eax+0x7f0942c9]
  410dd8:	xchg   ecx,eax
  410dd9:	sbb    ebx,edx
  410ddb:	xor    DWORD PTR [esi-0x83150b],0xffffffbd
  410de2:	add    BYTE PTR [ebx-0x703994cc],dh
  410de8:	dec    esp
  410de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dea:	jne    0x410e20
  410dec:	mov    es,WORD PTR [eax]
  410dee:	and    al,0x12
  410df0:	cmp    ch,bl
  410df2:	xchg   DWORD PTR [esi-0x7ba7bf51],esp
  410df8:	add    ch,cl
  410dfa:	or     BYTE PTR [edx],bl
  410dfc:	(bad)  
  410dfd:	adc    ebx,DWORD PTR [esi-0x10347ee5]
  410e03:	cmp    DWORD PTR [ecx],esi
  410e05:	clc    
  410e06:	mov    ebx,0x903b21f6
  410e0b:	mov    ah,0x5b
  410e0d:	cwde   
  410e0e:	ins    BYTE PTR es:[edi],dx
  410e0f:	mov    edx,0x76c2ee1f
  410e14:	call   0xcc1ece18
  410e19:	ret    0xeedf
  410e1c:	and    bl,BYTE PTR [ebx+0x4c]
  410e1f:	mov    esi,0x35d322d0
  410e24:	iret   
  410e25:	test   BYTE PTR [esi],al
  410e27:	push   0xffffffa1
  410e29:	hlt    
  410e2a:	push   0x6a48d95d
  410e2f:	pop    ecx
  410e30:	cmc    
  410e31:	cdq    
  410e32:	out    dx,al
  410e33:	push   es
  410e34:	jp     0x410e31
  410e36:	adc    eax,0x40a561d4
  410e3b:	pop    es
  410e3c:	add    DWORD PTR [ecx-0x2451cb86],ebp
  410e42:	jle    0x410df8
  410e44:	test   esp,0x68bdcd66
  410e4a:	jne    0x410e78
  410e4c:	inc    esp
  410e4d:	pop    ebp
  410e4e:	(bad)  
  410e4f:	bound  ebx,QWORD PTR [edx+eiz*4+0x44]
  410e53:	sbb    eax,esp
  410e55:	xchg   esp,eax
  410e56:	pop    esi
  410e57:	scas   al,BYTE PTR es:[edi]
  410e58:	nop
  410e59:	stc    
  410e5a:	call   0x3f9e2b17
  410e5f:	loop   0x410e45
  410e61:	jo     0x410e25
  410e63:	sbb    ah,0x17
  410e66:	fsub   QWORD PTR [ebx-0x75f8db20]
  410e6c:	mov    dl,0x11
  410e6e:	xor    ebp,DWORD PTR [edx+edi*4-0x5fe877c2]
  410e75:	sahf   
  410e76:	rcl    DWORD PTR [esi-0x16],0x23
  410e7a:	push   0x7716ffd7
  410e7f:	gs (bad) 
  410e81:	stos   BYTE PTR es:[edi],al
  410e82:	pop    ebp
  410e83:	cmp    eax,0xac9a5976
  410e88:	idiv   DWORD PTR [esi+eax*4+0x2dbce09a]
  410e8f:	das    
  410e90:	fadd   st(2),st
  410e92:	mov    eax,0xd49050e9
  410e97:	mov    ch,0x25
  410e99:	scas   al,BYTE PTR es:[edi]
  410e9a:	push   edi
  410e9b:	scas   eax,DWORD PTR es:[edi]
  410e9c:	aaa    
  410e9d:	(bad)  
  410e9e:	sti    
  410e9f:	lock in eax,0xf0
  410ea2:	enter  0xa627,0xd9
  410ea6:	mov    esp,0x38114ba8
  410eab:	cmp    BYTE PTR [ecx+edx*8],bl
  410eae:	mov    ds:0x6b8f6e7,eax
  410eb3:	ins    DWORD PTR es:[edi],dx
  410eb4:	test   al,0x41
  410eb6:	lods   al,BYTE PTR ds:[esi]
  410eb7:	and    al,0xde
  410eb9:	mov    ebp,0x4c61a4ba
  410ebe:	(bad)  
  410ebf:	mov    DWORD PTR [esi-0x2b],esi
  410ec2:	and    dh,BYTE PTR [edi+edi*8]
  410ec5:	xchg   BYTE PTR [ebx+0x48120369],bh
  410ecb:	jg     0x410f20
  410ecd:	lahf   
  410ece:	sub    DWORD PTR [edi-0xc],eax
  410ed1:	mov    ?,WORD PTR [ecx-0x215723ba]
  410ed7:	and    BYTE PTR [ebx+0x27],ch
  410eda:	dec    edi
  410edb:	pop    ecx
  410edc:	int    0xa0
  410ede:	xor    eax,edi
  410ee0:	xor    eax,0x42cfe840
  410ee5:	jnp    0x410f09
  410ee7:	mov    bh,0xdf
  410ee9:	jp     0x410ed3
  410eeb:	sub    dh,bh
  410eed:	adc    cl,BYTE PTR ds:0x789fce8f
  410ef3:	pop    edx
  410ef4:	into   
  410ef5:	sbb    BYTE PTR [ebp+0x6721f894],bh
  410efb:	retf   
  410efc:	pop    eax
  410efd:	int    0x56
  410eff:	push   0x17
  410f01:	push   cs
  410f02:	cmp    al,0x38
  410f04:	push   ebp
  410f05:	push   edx
  410f06:	inc    edx
  410f07:	nop
  410f08:	mov    al,0xe0
  410f0a:	adc    eax,0xc94ce35e
  410f0f:	pop    edx
  410f10:	shl    eax,1
  410f12:	mov    esp,0xc5dbcee2
  410f17:	mov    DWORD PTR [ebx-0x37814953],eax
  410f1d:	xor    eax,0x657fb8df
  410f22:	pop    es
  410f23:	mul    DWORD PTR ds:0x3ca2e588
  410f29:	jle    0x410f7d
  410f2b:	mov    ds:0x684ebf23,eax
  410f30:	jmp    0x9daec495
  410f35:	sub    DWORD PTR [esi-0x62dde5ae],ebx
  410f3b:	fidiv  WORD PTR [ecx+0x36196b4e]
  410f41:	jmp    0x410f9c
  410f43:	outs   dx,BYTE PTR ds:[esi]
  410f44:	repnz lods eax,DWORD PTR ds:[esi]
  410f46:	lea    ecx,[edi-0x3e]
  410f49:	fild   WORD PTR [eax-0x5d]
  410f4c:	jb     0x410f38
  410f4e:	jl     0x410fc8
  410f50:	ja     0x410ef6
  410f52:	sti    
  410f53:	jb     0x410fb9
  410f55:	mov    eax,ds:0x1d9323c9
  410f5a:	mov    ds:0xa6fb9cd2,al
  410f5f:	stos   DWORD PTR es:[edi],eax
  410f60:	mov    esp,0x6e5163d4
  410f65:	(bad)  
  410f67:	icebp  
  410f68:	lock xchg BYTE PTR [edi+0x47],ah
  410f6c:	(bad)  
  410f6d:	mov    ds,WORD PTR [eax]
  410f6f:	aaa    
  410f70:	fisubr WORD PTR [ecx+0xe3c1cec]
  410f76:	pop    ecx
  410f77:	out    0xe5,eax
  410f79:	inc    edx
  410f7a:	ins    DWORD PTR es:[edi],dx
  410f7b:	sbb    eax,DWORD PTR [esi+ebx*2-0x7]
  410f7f:	ja     0x410f21
  410f81:	or     BYTE PTR [edi-0x716def2f],bh
  410f87:	xchg   esi,eax
  410f88:	and    DWORD PTR [esi],ebx
  410f8a:	xor    cl,BYTE PTR [edi]
  410f8c:	mov    ch,0x24
  410f8e:	shl    BYTE PTR [ebx+0x2ea3f03d],cl
  410f94:	loope  0x410ff2
  410f96:	loopne 0x410f38
  410f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f99:	adc    al,0xaa
  410f9b:	adc    BYTE PTR [esi-0x4f80315d],0xb
  410fa2:	pop    ecx
  410fa3:	aam    0xb4
  410fa5:	ret    
  410fa6:	or     al,0xc8
  410fa8:	aad    0xfc
  410faa:	retf   
  410fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fac:	and    DWORD PTR ds:[eax-0x7],eax
  410fb0:	test   DWORD PTR [ecx-0x1d],ebx
  410fb3:	mov    eax,0x4f430a49
  410fb8:	mov    eax,ds:0xbabf8da
  410fbd:	in     eax,0x46
  410fbf:	adc    esp,DWORD PTR [ecx]
  410fc1:	fistp  WORD PTR [ebx]
  410fc3:	mov    cl,0x44
  410fc5:	jmp    0x410fc8
  410fc7:	shl    BYTE PTR [edi-0x50],cl
  410fca:	mov    BYTE PTR [ebx-0x3c99d35b],dh
  410fd0:	addr16 (bad) 
  410fd2:	shl    bl,1
  410fd4:	push   cs
  410fd5:	dec    esp
  410fd6:	xchg   esi,eax
  410fd7:	mov    eax,ds:0x12c159ef
  410fdc:	fistp  DWORD PTR [ebx*1-0x75415ce5]
  410fe3:	and    ch,BYTE PTR [ecx+0x19]
  410fe6:	int    0x6b
  410fe8:	out    dx,al
  410fe9:	xor    eax,DWORD PTR [edx]
  410feb:	mov    BYTE PTR [ebx],al
  410fed:	or     cl,BYTE PTR [eax]
  410fef:	xchg   ebp,eax
  410ff0:	cmp    ebp,0xda9dc744
  410ff6:	mov    ah,BYTE PTR ds:0xa3c0f720
  410ffc:	dec    esp
  410ffd:	mov    ds:0xb2dd4fa3,eax
  411002:	mov    DWORD PTR [eax],esi
  411004:	mov    DWORD PTR ds:0x426008,0x59e3
  41100e:	jmp    0x411024
  411013:	or     DWORD PTR ds:0x428004,0x1df3
  41101d:	mov    esi,DWORD PTR [ebp+0x14]
  411020:	or     edi,ebx
  411022:	xor    DWORD PTR [eax],esi
  411024:	mov    eax,DWORD PTR [ebp-0x4]
  411027:	or     DWORD PTR ds:0x426008,ebx
  41102d:	mov    edi,DWORD PTR [ebp+0x10]
  411030:	xor    edi,ecx
  411032:	mov    esi,0xffcd8d1a
  411037:	mov    ebx,esi
  411039:	sub    ebx,edi
  41103b:	add    DWORD PTR [eax],ebx
  41103d:	mov    eax,DWORD PTR [ebp-0x4]
  411040:	mov    edi,DWORD PTR [ebp-0x8]
  411043:	add    edi,DWORD PTR [eax]
  411045:	mov    DWORD PTR [ebp-0x8],edi
  411048:	mov    eax,DWORD PTR [ebp+0xc]
  41104b:	mov    edi,DWORD PTR [ebp+0xc]
  41104e:	xor    edi,ecx
  411050:	xor    eax,ecx
  411052:	lea    eax,[eax+edi*1+0x64e5cc]
  411059:	mov    edi,DWORD PTR [ebp+0xc]
  41105c:	xor    edi,ecx
  41105e:	add    edi,edx
  411060:	imul   eax,edi
  411063:	mov    edi,DWORD PTR [ebp+0xc]
  411066:	xor    edi,ecx
  411068:	sub    edi,eax
  41106a:	mov    eax,DWORD PTR [ebp-0x4]
  41106d:	add    edi,edx
  41106f:	cmp    DWORD PTR [eax],edi
  411071:	mov    eax,DWORD PTR [ebp-0x4]
  411074:	mov    edi,DWORD PTR [ebp+0x10]
  411077:	jg     0x41108a
  41107d:	xor    edi,ecx
  41107f:	mov    ebx,esi
  411081:	sub    ebx,edi
  411083:	add    DWORD PTR [eax],ebx
  411085:	jmp    0x411090
  41108a:	xor    edi,ecx
  41108c:	add    edi,edx
  41108e:	add    DWORD PTR [eax],edi
  411090:	mov    eax,DWORD PTR [ebp-0x8]
  411093:	mov    edi,DWORD PTR [ebp-0x10]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	xor    edi,ecx
  41109a:	add    edi,0x3272e5
  4110a0:	not    edi
  4110a2:	and    eax,edi
  4110a4:	movsx  di,BYTE PTR [eax+0x1]
  4110a9:	mov    ebx,0x3b53
  4110ae:	sub    di,bx
  4110b1:	mov    ebx,0x8a8f
  4110b6:	xor    di,bx
  4110b9:	mov    ebx,0x4f88
  4110be:	cmp    di,bx
  4110c1:	jne    0x4110e9
  4110c7:	movsx  di,BYTE PTR [eax]
  4110cb:	mov    ebx,0x3b53
  4110d0:	sub    di,bx
  4110d3:	mov    ebx,0x8a8f
  4110d8:	xor    di,bx
  4110db:	mov    ebx,0x4e75
  4110e0:	cmp    di,bx
  4110e3:	je     0x4110f9
  4110e9:	mov    edi,DWORD PTR [ebp-0x10]
  4110ec:	xor    edi,ecx
  4110ee:	mov    ebx,esi
  4110f0:	sub    ebx,edi
  4110f2:	add    eax,ebx
  4110f4:	jmp    0x4110a4
  4110f9:	mov    esi,DWORD PTR [ebp-0x14]
  4110fc:	mov    esi,DWORD PTR [esi]
  4110fe:	mov    edi,DWORD PTR [eax+0x3c]
  411101:	lea    esi,[edi+esi*8+0x78]
  411105:	mov    esi,DWORD PTR [esi+eax*1]
  411108:	mov    DWORD PTR [ebp-0x8],esi
  41110b:	mov    esi,DWORD PTR [ebp+0x8]
  41110e:	xor    esi,ecx
  411110:	add    esi,edx
  411112:	mov    DWORD PTR [ebp-0x14],esi
  411115:	mov    esi,DWORD PTR [ebp+0x8]
  411118:	mov    edi,DWORD PTR [ebp-0x8]
  41111b:	xor    esi,ecx
  41111d:	add    esi,edx
  41111f:	pop    ebx
  411120:	cmp    edi,esi
  411122:	jne    0x411140
  411128:	mov    eax,DWORD PTR [ebp+0xc]
  41112b:	xor    eax,ecx
  41112d:	mov    ecx,DWORD PTR [ebp-0x8]
  411130:	add    eax,edx
  411132:	imul   eax,ecx
  411135:	mov    DWORD PTR [ebp-0x8],eax
  411138:	push   DWORD PTR [ebp+0x18]
  41113b:	jmp    0x411194
  411140:	mov    ecx,DWORD PTR [ebp-0x8]
  411143:	add    ecx,eax
  411145:	mov    DWORD PTR [ebp-0x14],ecx
  411148:	mov    ecx,DWORD PTR [ebp-0x14]
  41114b:	mov    ecx,DWORD PTR [ecx+0xc]
  41114e:	movsx  cx,BYTE PTR [ecx+eax*1]
  411153:	mov    edx,0x3b53
  411158:	sub    cx,dx
  41115b:	mov    edx,0x8a8f
  411160:	xor    cx,dx
  411163:	mov    edx,0x4e77
  411168:	cmp    cx,dx
  41116b:	jne    0x411138
  411171:	mov    ecx,DWORD PTR ds:0x42c379
  411177:	mov    ecx,DWORD PTR [ecx+0x198]
  41117d:	mov    DWORD PTR [ecx],eax
  41117f:	jmp    0x4111a5
  411184:	mov    ecx,DWORD PTR [ebp+0x18]
  411187:	cmp    ecx,0xf89c8584
  41118d:	jne    0x4111a5
  411193:	push   eax
  411194:	push   DWORD PTR [ebp+0x14]
  411197:	push   DWORD PTR [ebp+0x10]
  41119a:	push   DWORD PTR [ebp+0xc]
  41119d:	push   DWORD PTR [ebp+0x8]
  4111a0:	call   0x40e8bc
  4111a5:	pop    edi
  4111a6:	pop    esi
  4111a7:	leave  
  4111a8:	ret    0x14
  4111ab:	push   ebp
  4111ac:	mov    ebp,esp
  4111ae:	sub    esp,0xc
  4111b1:	and    DWORD PTR ds:0x428008,ebx
  4111b7:	push   esi
  4111b8:	xor    DWORD PTR ds:0x42600c,edi
  4111be:	mov    esi,0xf89c8585
  4111c3:	sbb    ecx,DWORD PTR ds:0x426018
  4111c9:	mov    DWORD PTR [ebp-0x8],esi
  4111cc:	xor    DWORD PTR ds:0x42701c,ebx
  4111d2:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  4111d9:	push   edi
  4111da:	mov    DWORD PTR ds:0x42801c,0x28de
  4111e4:	mov    eax,eax
  4111e6:	mov    eax,DWORD PTR [ebp-0x4]
  4111e9:	and    DWORD PTR ds:0x42a000,0x0
  4111f3:	mov    edi,DWORD PTR ds:0x42a000
  4111f9:	inc    edi
  4111fa:	mov    DWORD PTR ds:0x42a000,edi
  411200:	cmp    DWORD PTR ds:0x42a000,0x8
  411207:	jg     0x41124a
  41120d:	jmp    0x411223
  411212:	push   DWORD PTR [ebp-0x1c]
  411215:	push   0x667c
  41121a:	push   DWORD PTR [ebp-0x18]
  41121d:	call   DWORD PTR ds:0x42cecd
  411223:	cmp    DWORD PTR ds:0x42a000,0x7
  41122a:	jne    0x41123d
  411230:	mov    edi,DWORD PTR ds:0x42a000
  411236:	inc    edi
  411237:	mov    DWORD PTR ds:0x42a000,edi
  41123d:	cmp    DWORD PTR ds:0x42a000,0x15
  411244:	jb     0x4111f3
  41124a:	mov    edi,DWORD PTR [ebp-0x8]
  41124d:	add    ecx,0x6c49
  411253:	mov    ecx,0x751089f
  411258:	sub    edx,DWORD PTR ds:0x42a004
  41125e:	xor    eax,ecx
  411260:	xor    edi,ecx
  411262:	mov    edx,DWORD PTR ds:0x428014
  411268:	sub    DWORD PTR ds:0x42a000,edx
  41126e:	mov    edx,0x3272e6
  411273:	and    DWORD PTR ds:0x427000,0x2078
  41127d:	add    edi,edx
  41127f:	sbb    DWORD PTR ds:0x42a01c,0x427008
  411289:	add    eax,edx
  41128b:	add    DWORD PTR ds:0x426024,0x6bbe
  411295:	imul   eax,edi
  411298:	mov    DWORD PTR ds:0x429000,0x47d
  4112a2:	mov    edi,DWORD PTR [ebp+0xc]
  4112a5:	mov    DWORD PTR ds:0x426028,0x3a43
  4112af:	cmp    edi,eax
  4112b1:	mov    DWORD PTR ds:0x429010,0xea9
  4112bb:	je     0x41131c
  4112c1:	xor    eax,DWORD PTR ds:0x42800c
  4112c7:	mov    DWORD PTR [ebp-0xc],esi
  4112ca:	mov    eax,DWORD PTR [ebp-0xc]
  4112cd:	or     DWORD PTR ds:0x426018,ebx
  4112d3:	mov    esi,DWORD PTR [ebp+0xc]
  4112d6:	xor    eax,ecx
  4112d8:	lea    eax,[eax*8+0x19397a8]
  4112df:	mov    eax,DWORD PTR [esi+eax*1]
  4112e2:	mov    DWORD PTR [ebp+0xc],eax
  4112e5:	mov    eax,DWORD PTR [ebp-0x4]
  4112e8:	mov    esi,DWORD PTR [ebp-0x8]
  4112eb:	xor    eax,ecx
  4112ed:	xor    esi,ecx
  4112ef:	add    esi,edx
  4112f1:	add    eax,edx
  4112f3:	imul   eax,esi
  4112f6:	mov    esi,DWORD PTR [ebp+0xc]
  4112f9:	cmp    esi,eax
  4112fb:	je     0x41131c
  411301:	mov    eax,DWORD PTR [ebp-0x4]
  411304:	xor    eax,ecx
  411306:	mov    ecx,DWORD PTR [ebp+0xc]
  411309:	add    eax,edx
  41130b:	imul   eax,ecx
  41130e:	add    eax,DWORD PTR [ebp+0x8]
  411311:	mov    DWORD PTR [ebp+0xc],eax
  411314:	mov    eax,DWORD PTR [ebp+0xc]
  411317:	jmp    0x41132d
  41131c:	mov    eax,DWORD PTR [ebp-0x4]
  41131f:	mov    esi,DWORD PTR [ebp-0x8]
  411322:	xor    esi,ecx
  411324:	xor    eax,ecx
  411326:	add    esi,edx
  411328:	add    eax,edx
  41132a:	imul   eax,esi
  41132d:	pop    edi
  41132e:	pop    esi
  41132f:	leave  
  411330:	ret    0x8
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	push   ecx
  411337:	xor    eax,0x1b92
  41133c:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  411343:	xor    ecx,eax
  411345:	mov    eax,DWORD PTR [ebp-0x4]
  411348:	sbb    DWORD PTR ds:0x427010,ebx
  41134e:	mov    edx,DWORD PTR [ebp+0x10]
  411351:	sub    ecx,DWORD PTR ds:0x42a014
  411357:	mov    ecx,0x751089f
  41135c:	dec    DWORD PTR ds:0x429004
  411362:	jmp    0x4136d4
  411367:	dec    esi
  411368:	daa    
  411369:	inc    ebp
  41136a:	mov    ebp,esi
  41136c:	jae    0x4112f8
  41136e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41136f:	cmp    bh,BYTE PTR [eax+0x29a5df88]
  411375:	dec    ebp
  411376:	sbb    eax,0x7070ac8c
  41137b:	sub    eax,0x5070705f
  411380:	mov    ebp,0x30a99d58
  411385:	call   0xfa9e4d97
  41138a:	jne    0x411399
  41138c:	and    eax,0xa7b041f9
  411391:	aad    0xe5
  411393:	out    0x24,eax
  411395:	jmp    FWORD PTR [ecx+0x21c2110f]
  41139b:	or     esp,DWORD PTR [edx+0x43]
  41139e:	mov    ds:0xf313d846,eax
  4113a3:	clc    
  4113a4:	and    al,BYTE PTR [ebx+ebx*4-0xe00508b]
  4113ab:	mov    WORD PTR [ecx-0x7e],cs
  4113ae:	and    DWORD PTR [esi+0x9],ecx
  4113b1:	pop    ecx
  4113b2:	add    eax,0x8bebd9df
  4113b7:	add    bl,BYTE PTR [ebp-0x4f94690a]
  4113bd:	in     al,0xa1
  4113bf:	push   edi
  4113c0:	nop
  4113c1:	and    esi,DWORD PTR [edi-0x5fa75f5c]
  4113c7:	xor    esi,DWORD PTR [ecx+0x64a79e0e]
  4113cd:	or     ebx,ebp
  4113cf:	inc    ecx
  4113d0:	inc    ebp
  4113d1:	dec    ebx
  4113d2:	jge    0x411376
  4113d4:	stos   DWORD PTR es:[edi],eax
  4113d5:	ins    BYTE PTR es:[edi],dx
  4113d6:	push   0x54
  4113d8:	mov    esp,DWORD PTR [edi]
  4113da:	dec    esi
  4113db:	(bad)  
  4113dc:	lahf   
  4113dd:	test   DWORD PTR [edx+0x3466bf8d],esp
  4113e3:	mov    esp,0x68317bbf
  4113e8:	ins    BYTE PTR es:[edi],dx
  4113e9:	mov    bh,0xcf
  4113eb:	out    dx,eax
  4113ec:	cwde   
  4113ed:	dec    edi
  4113ee:	bound  eax,QWORD PTR [ecx+0xa213592]
  4113f4:	imul   esi,DWORD PTR [eax-0x57deef80],0xffffff9c
  4113fb:	ret    
  4113fc:	xor    BYTE PTR ss:[edx-0x35],ah
  411400:	les    esi,FWORD PTR [eax-0x27]
  411403:	jb     0x411418
  411405:	jmp    0x3c9d:0xea0f564d
  41140c:	inc    esi
  41140d:	arpl   WORD PTR [edx+0x19230ebc],ax
  411413:	adc    al,0x7c
  411415:	loop   0x4113a6
  411417:	or     eax,0xc9b7e6a5
  41141c:	sub    ah,bl
  41141e:	(bad)  
  41141f:	xor    ch,BYTE PTR [esi+0x7c105c53]
  411425:	mov    gs,ebp
  411427:	mov    dl,0x71
  411429:	push   edx
  41142a:	jnp    0x4113c8
  41142c:	cdq    
  41142d:	sbb    edx,DWORD PTR [ebp-0x46a12c94]
  411433:	iret   
  411434:	push   cs
  411435:	(bad)  
  411436:	es push edi
  411438:	test   BYTE PTR [edi],dh
  41143a:	pop    ds
  41143b:	xor    al,0x73
  41143d:	pop    eax
  41143e:	sub    DWORD PTR [ebx],edx
  411440:	(bad)  
  411441:	into   
  411442:	mov    esi,0x3c83cfea
  411447:	mov    bh,dh
  411449:	aad    0x69
  41144b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41144c:	imul   eax,DWORD PTR [ecx],0xfffffff5
  41144f:	and    al,0xa5
  411451:	mov    ah,0xd
  411453:	sub    DWORD PTR [ecx+edi*2-0x43],ebp
  411457:	and    DWORD PTR [edx+esi*8-0x7c],edx
  41145b:	pop    edx
  41145c:	(bad)  
  41145e:	stos   BYTE PTR es:[edi],al
  41145f:	sti    
  411460:	push   cs
  411461:	dec    eax
  411462:	xor    BYTE PTR [ebx-0x4d9fc20a],bl
  411468:	jnp    0x4114e6
  41146a:	mov    eax,0x745b8f76
  41146f:	inc    edx
  411470:	sub    eax,eax
  411472:	cmp    al,0x97
  411474:	lods   eax,DWORD PTR fs:[esi]
  411476:	cs cmc 
  411478:	test   al,0x47
  41147a:	jmp    0x3398467f
  41147f:	pmulhw mm1,QWORD PTR [esi]
  411482:	sub    DWORD PTR [eax*1+0x41c56953],esi
  411489:	xor    al,0xd1
  41148b:	mov    bh,BYTE PTR [esi+edi*2+0x1ee02390]
  411492:	mov    bl,0xd7
  411494:	aaa    
  411495:	push   0x27
  411497:	pop    esi
  411498:	mov    eax,ds:0x468cba2c
  41149d:	leave  
  41149e:	push   ds
  41149f:	jmp    0x11a:0xabc3b48
  4114a6:	xchg   BYTE PTR [edx-0xbecd081],cl
  4114ac:	fnstenv [eax-0x1]
  4114af:	ins    BYTE PTR es:[edi],dx
  4114b0:	xor    dl,BYTE PTR [ebp+0x7459c28f]
  4114b6:	add    al,0xab
  4114b8:	in     al,dx
  4114b9:	pusha  
  4114ba:	and    eax,0x7db19523
  4114bf:	lds    esi,FWORD PTR [eax+0x4f9e27d8]
  4114c5:	jle    0x41152a
  4114c7:	sbb    BYTE PTR [ebp+0x6a95b51f],al
  4114cd:	nop
  4114ce:	sub    DWORD PTR [ebx-0x32],ebx
  4114d1:	adc    cl,0xb4
  4114d4:	jg     0x411475
  4114d6:	(bad)  
  4114d7:	or     BYTE PTR [edi-0x7f4a3c9],al
  4114dd:	dec    ecx
  4114de:	pop    ebp
  4114df:	and    ebp,edi
  4114e1:	dec    ebx
  4114e2:	(bad)  
  4114e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e4:	inc    esp
  4114e5:	aam    0x73
  4114e7:	(bad)  
  4114e8:	push   0xfffffff2
  4114ea:	call   0xf5d2a7ba
  4114ef:	or     al,0xd7
  4114f1:	jo     0x4114c7
  4114f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114f4:	cld    
  4114f5:	je     0x411512
  4114f7:	xor    eax,DWORD PTR [edx+eax*2]
  4114fa:	push   ds
  4114fb:	push   0xffffffcf
  4114fd:	mov    dl,0x2d
  4114ff:	or     al,0x3c
  411501:	neg    DWORD PTR [edi]
  411503:	dec    edi
  411504:	fmul   DWORD PTR [esi]
  411506:	xlat   BYTE PTR ds:[ebx]
  411507:	in     eax,0xa6
  411509:	xor    ah,BYTE PTR [ecx-0x5a]
  41150c:	xor    al,0x8a
  41150e:	adc    eax,0xff7d6cbd
  411513:	int    0x65
  411515:	push   esp
  411516:	mov    esi,DWORD PTR [esi-0x175847d9]
  41151c:	xchg   ebp,eax
  41151d:	inc    esi
  41151e:	int    0x5e
  411520:	rcl    BYTE PTR [si+0x3e6e],cl
  411525:	es daa 
  411527:	mov    ah,bh
  411529:	lods   eax,DWORD PTR ds:[esi]
  41152a:	shl    BYTE PTR [ebx],1
  41152c:	test   DWORD PTR [ebp+eiz*4+0x1a],ebx
  411530:	sti    
  411531:	mov    ds:0x814d82a3,eax
  411536:	mov    edx,0x56fa9b11
  41153b:	nop
  41153c:	mov    ah,0xf7
  41153e:	fdivr  st(2),st
  411540:	icebp  
  411541:	mov    bh,0x3e
  411543:	stos   BYTE PTR es:[edi],al
  411544:	fdiv   QWORD PTR [eax-0xb1bb6c3]
  41154a:	mov    esi,0x7187a8ba
  41154f:	(bad)
  411554:	xchg   ebx,eax
  411555:	mov    ?,WORD PTR [edx-0x2]
  411558:	add    ebx,ecx
  41155a:	adc    cl,BYTE PTR [edi+0x1d]
  41155d:	(bad)  
  41155e:	dec    ebp
  41155f:	setge  BYTE PTR [ecx-0x2f]
  411563:	add    BYTE PTR [ebx+0x60],bh
  411566:	(bad)  
  411567:	jmp    0x411562
  411569:	mov    dl,0x22
  41156b:	and    DWORD PTR [edx+ebx*8],edx
  41156e:	push   ss
  41156f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411570:	cdq    
  411571:	call   0x72330c0a
  411576:	push   edx
  411577:	mov    al,ds:0x7ad630cd
  41157c:	push   ss
  41157d:	mov    esi,es
  41157f:	cmp    eax,0x89dfbacd
  411584:	pop    ecx
  411585:	mov    ah,0xd1
  411587:	push   eax
  411588:	enter  0xe531,0x9b
  41158c:	rcl    BYTE PTR [esi],0xbb
  41158f:	lods   eax,DWORD PTR ds:[esi]
  411590:	je     0x4115bf
  411592:	clc    
  411593:	inc    edi
  411594:	lahf   
  411595:	add    eax,0xd478e8fd
  41159a:	fidiv  DWORD PTR [esp+eiz*2+0x2f]
  41159e:	rcl    BYTE PTR [ecx+0x426cd720],cl
  4115a4:	imul   esi,DWORD PTR [edi+0x5282a8f6],0x3c
  4115ab:	pushf  
  4115ac:	loopne 0x411577
  4115ae:	pop    es
  4115af:	mov    DWORD PTR [ecx-0x11],edi
  4115b2:	pop    edi
  4115b3:	pop    edx
  4115b4:	ret    
  4115b5:	out    0xb0,al
  4115b7:	repnz imul esp,DWORD PTR [esi+0x2c],0x775face
  4115bf:	stc    
  4115c0:	ins    BYTE PTR es:[edi],dx
  4115c1:	out    0xae,eax
  4115c3:	rcr    BYTE PTR [edi],1
  4115c5:	lahf   
  4115c6:	adc    BYTE PTR [ebx-0x7f],0xb9
  4115ca:	adc    BYTE PTR [ebx],ah
  4115cc:	into   
  4115cd:	mov    al,0x7d
  4115cf:	jge    0x4115de
  4115d1:	jo     0x4115d2
  4115d3:	adc    eax,0x24594ec4
  4115d8:	adc    eax,0xf7768266
  4115dd:	mov    dl,0xa5
  4115df:	fcomip st,st(3)
  4115e1:	push   esp
  4115e2:	cmp    BYTE PTR ss:[edi],bh
  4115e5:	mov    eax,ds:0x6e21cf7b
  4115ea:	je     0x41160c
  4115ec:	mov    ah,0xf1
  4115ee:	inc    edx
  4115ef:	mov    ds:0x2d7bff98,eax
  4115f4:	ret    0x429c
  4115f7:	or     eax,0x32f98c1
  4115fc:	inc    edx
  4115fd:	fldenv [ebx]
  4115ff:	mov    dl,0xe8
  411601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411602:	add    eax,0x37b69101
  411607:	adc    DWORD PTR [esi+0x1a],edi
  41160a:	in     eax,0x23
  41160c:	or     al,BYTE PTR [edx+0x7c]
  41160f:	jecxz  0x4115ab
  411611:	xchg   esp,eax
  411612:	(bad)  
  411614:	push   edx
  411615:	fimul  WORD PTR [eax-0x27]
  411618:	or     al,0x7d
  41161a:	mov    eax,ds:0xc5d2e373
  41161f:	cmp    DWORD PTR [ebx],edx
  411621:	loopne 0x41169b
  411623:	push   cs
  411624:	stc    
  411625:	mul    BYTE PTR gs:[ebx+ebp*1+0x760d34c0]
  41162d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41162e:	ret    0xbb2
  411631:	(bad)  
  411633:	inc    ebp
  411634:	cmc    
  411635:	iret   
  411636:	fwait
  411637:	sbb    al,0xa
  411639:	je     0x41164e
  41163b:	xchg   edx,eax
  41163c:	pop    ds
  41163d:	cmc    
  41163e:	bound  eax,QWORD PTR [ebx+0x38d0293c]
  411644:	iret   
  411645:	(bad)  
  411646:	imul   eax,DWORD PTR [ecx+0x101b0317],0xfb737091
  411650:	inc    ebp
  411651:	sub    DWORD PTR [edx+0x61971a58],ebx
  411657:	rcl    BYTE PTR [ecx-0x1002396],1
  41165d:	xchg   ecx,eax
  41165e:	inc    esi
  41165f:	fldcw  WORD PTR [ebp+0xf]
  411662:	sbb    eax,0x1ccd0cb0
  411667:	popf   
  411668:	jns    0x411614
  41166a:	sub    esi,eax
  41166c:	push   es
  41166d:	dec    ebp
  41166e:	jp     0x411623
  411670:	ret    
  411671:	pop    esi
  411672:	sbb    BYTE PTR [edi-0x33b9e618],bl
  411678:	aam    0xf
  41167a:	and    eax,0x4243c4e
  41167f:	adc    BYTE PTR [ebx-0x5e],0xf5
  411683:	adc    DWORD PTR [ecx-0x37],0x71
  411687:	loope  0x4116df
  411689:	sti    
  41168a:	cs jno 0x41168d
  41168d:	and    esi,DWORD PTR [edi+0x1598586]
  411693:	popa   
  411694:	xor    al,0x15
  411696:	fwait
  411697:	jecxz  0x4116a3
  411699:	pop    ebp
  41169a:	imul   bl
  41169c:	loop   0x4116bf
  41169e:	mov    BYTE PTR [ebp+0x13866f6c],bl
  4116a4:	inc    ebp
  4116a5:	sub    ebx,esp
  4116a7:	rol    DWORD PTR [ecx+0x62],1
  4116aa:	or     bl,BYTE PTR [edx]
  4116ac:	fld    QWORD PTR [edx+0x19]
  4116af:	sub    cl,BYTE PTR [esi]
  4116b1:	dec    ebx
  4116b2:	cdq    
  4116b3:	dec    edi
  4116b4:	push   ecx
  4116b5:	mov    bh,0x3e
  4116b7:	xchg   edi,eax
  4116b8:	xor    eax,DWORD PTR [ebp+0x23029189]
  4116be:	mov    eax,0xfc04d333
  4116c3:	lea    edx,[ebp-0xe9bb9ed]
  4116c9:	xor    bl,BYTE PTR [ebp+edx*8-0x23]
  4116cd:	stc    
  4116ce:	mov    edi,0x10b0bb06
  4116d3:	mov    ebx,0x20551132
  4116d8:	push   0x762a4cd6
  4116dd:	sub    al,0x5
  4116df:	inc    ebp
  4116e0:	rcr    esp,0x8
  4116e3:	mov    ah,0x27
  4116e5:	scas   al,BYTE PTR es:[edi]
  4116e6:	arpl   di,cx
  4116e8:	dec    edx
  4116e9:	mov    ecx,0xa1c0281c
  4116ee:	xor    BYTE PTR [eax],0x75
  4116f1:	cmc    
  4116f2:	cmp    al,0x77
  4116f4:	pushf  
  4116f5:	gs push es
  4116f7:	push   es
  4116f8:	sub    eax,0x5d014255
  4116fd:	shl    DWORD PTR [ebx],0x1c
  411700:	push   esp
  411701:	mov    fs,WORD PTR [edx-0x1e]
  411704:	xchg   ecx,eax
  411705:	inc    esi
  411706:	sbb    ebp,DWORD PTR [edi+0x2ffe419]
  41170c:	adc    ebx,DWORD PTR [edx]
  41170e:	out    dx,eax
  41170f:	test   bl,0x82
  411712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411713:	in     al,0x29
  411715:	push   es
  411716:	test   eax,0xbb506e9b
  41171b:	scas   al,BYTE PTR es:[edi]
  41171c:	clc    
  41171d:	adc    eax,0x32ec029f
  411722:	and    eax,0x262dea5a
  411727:	in     al,0xf1
  411729:	ret    0x25ec
  41172c:	jle    0x41177d
  41172e:	cmp    eax,0xa91c4364
  411733:	sahf   
  411734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411735:	ds jnp 0x41173e
  411738:	ret    0x8202
  41173b:	sub    BYTE PTR [ebx-0x67],0xf9
  41173f:	inc    ecx
  411740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411741:	jb     0x41171b
  411743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411744:	in     eax,0x86
  411746:	xchg   ebx,eax
  411747:	out    dx,al
  411748:	js     0x41176f
  41174a:	je     0x4117b4
  41174c:	in     eax,dx
  41174d:	inc    ebx
  41174e:	in     eax,0xab
  411750:	cmp    al,0xc6
  411752:	adc    eax,0xee1f8b8b
  411757:	sbb    ebp,DWORD PTR [ecx-0x23]
  41175a:	repnz xor DWORD PTR [edx-0x71],eax
  41175e:	iret   
  41175f:	nop
  411760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411761:	push   ebp
  411762:	inc    ecx
  411763:	enter  0x2038,0x41
  411767:	sbb    eax,0xaf8670fa
  41176c:	cmp    al,0x5a
  41176e:	mov    bl,0xeb
  411770:	aam    0x1f
  411772:	(bad)  
  411773:	mov    ah,0x1a
  411775:	adc    DWORD PTR [eax+0x46],esi
  411778:	adc    BYTE PTR [esi],cl
  41177a:	dec    ebp
  41177b:	mov    ds:0x9cdadea0,al
  411780:	push   esp
  411781:	jge    0x411708
  411783:	pop    es
  411784:	adc    esp,edi
  411786:	mov    edx,0x66f96303
  41178b:	cwde   
  41178c:	jecxz  0x411776
  41178e:	std    
  41178f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411790:	pushf  
  411791:	in     eax,0x61
  411793:	ror    eax,cl
  411795:	xor    eax,0x2eaf97
  41179a:	in     eax,dx
  41179b:	xchg   ah,cl
  41179d:	mov    DWORD PTR [eax+0x432dc1e],0xcb9253f9
  4117a7:	mov    al,0xd0
  4117a9:	sbb    edi,DWORD PTR [eax]
  4117ab:	mov    al,0x37
  4117ad:	xchg   BYTE PTR [edi+0x5f],ah
  4117b0:	pop    es
  4117b1:	push   eax
  4117b2:	imul   edi,DWORD PTR [esi-0x44cbb9ec],0x41228be1
  4117bc:	cs xchg cl,ch
  4117bf:	xabort 0xe2
  4117c2:	in     eax,dx
  4117c3:	push   ds
  4117c4:	dec    ebx
  4117c5:	addr16 mov bl,0x5
  4117c8:	(bad)  
  4117c9:	stc    
  4117ca:	ror    DWORD PTR [esi],cl
  4117cc:	(bad)  
  4117ce:	mov    ebx,0x54afc4f3
  4117d3:	daa    
  4117d4:	outs   dx,BYTE PTR ds:[esi]
  4117d5:	sbb    BYTE PTR [ebp-0x6971ccdd],ah
  4117db:	(bad)  [eax]
  4117dd:	or     al,0x5d
  4117df:	inc    esp
  4117e0:	inc    esi
  4117e1:	shl    esi,cl
  4117e3:	or     ebp,DWORD PTR [esp+edi*1-0x6e]
  4117e7:	and    BYTE PTR [edi],cl
  4117e9:	mov    eax,0x55ef1144
  4117ee:	mov    ds:0x239c6ab9,eax
  4117f3:	popa   
  4117f4:	aas    
  4117f5:	pop    ebp
  4117f6:	cmp    ecx,edi
  4117f8:	shl    BYTE PTR [edx+0x2d],1
  4117fb:	iret   
  4117fc:	je     0x411827
  4117fe:	or     al,0x7e
  411800:	mov    ds:0xa1ab7798,eax
  411805:	stc    
  411806:	mov    eax,ds:0xc94da280
  41180b:	fsub   DWORD PTR [edx+eax*2]
  41180e:	push   edi
  41180f:	inc    ebp
  411810:	out    0xa8,al
  411812:	iret   
  411813:	sti    
  411814:	cmp    bl,BYTE PTR [eax+edx*2+0x7932e900]
  41181b:	xor    DWORD PTR [ebx+ecx*4],edi
  41181e:	add    bh,cl
  411820:	(bad)  
  411821:	pop    esp
  411822:	jbe    0x411831
  411824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411825:	sub    ebp,edx
  411827:	nop
  411828:	sbb    eax,0x303c194d
  41182d:	fistp  WORD PTR [ebx]
  41182f:	push   edi
  411830:	jo     0x411895
  411832:	add    DWORD PTR [esi],edx
  411834:	pop    ebp
  411835:	push   0xc0310e40
  41183a:	push   cs
  41183b:	xchg   edx,eax
  41183c:	mov    ecx,0xc54061f2
  411841:	pop    ebp
  411842:	adc    al,0x9f
  411844:	jne    0x411884
  411846:	mov    edi,0x8025e5cd
  41184b:	in     eax,0x5f
  41184d:	jecxz  0x4118b9
  41184f:	in     eax,dx
  411850:	pop    ss
  411851:	push   esi
  411852:	les    edi,FWORD PTR [esi-0x48cf4f1]
  411858:	cmc    
  411859:	inc    ebp
  41185a:	test   eax,0x18a69bb6
  41185f:	adc    al,0xde
  411861:	or     BYTE PTR [ecx+0x7b9acf76],al
  411867:	pop    DWORD PTR [esi]
  411869:	pop    esp
  41186a:	aaa    
  41186b:	xor    esp,DWORD PTR [esi+0x42]
  41186e:	cmc    
  41186f:	or     eax,0xe2f68c1c
  411874:	shl    bh,cl
  411876:	and    dl,BYTE PTR [ecx-0x3ce7321c]
  41187c:	or     BYTE PTR [ebx+0x64],dh
  41187f:	cmp    DWORD PTR [ebx+0x7d],edi
  411882:	pop    edx
  411883:	(bad)  
  411884:	mov    ebx,0x2bb23076
  411889:	bound  eax,QWORD PTR [ebp+0x74ddf7a4]
  41188f:	push   es
  411890:	cmp    dh,BYTE PTR ss:[ebx-0xfeb93bb]
  411897:	ins    DWORD PTR es:[edi],dx
  411898:	bound  eax,QWORD PTR [esi+0x6f]
  41189b:	cmp    ecx,DWORD PTR [ebx+0x7622036f]
  4118a1:	mov    ds:0xf427767c,al
  4118a6:	cwde   
  4118a7:	dec    ebp
  4118a8:	retf   0x50f3
  4118ab:	push   ecx
  4118ac:	in     al,0xf3
  4118ae:	mov    eax,ds:0xafab4575
  4118b3:	retf   
  4118b4:	sbb    DWORD PTR [ebx+eax*4-0x17],eax
  4118b8:	mov    esi,0xdaaa0527
  4118bd:	sub    ch,BYTE PTR [edi]
  4118bf:	and    DWORD PTR [ebp+0x38094e02],esi
  4118c5:	in     al,dx
  4118c6:	sub    eax,0x97e92579
  4118cb:	cs out 0xfa,eax
  4118ce:	inc    edx
  4118cf:	mov    ebp,0x19040b72
  4118d4:	out    0x12,al
  4118d6:	sbb    BYTE PTR [edx],bh
  4118d8:	fdiv   QWORD PTR [esi]
  4118da:	cmp    eax,0xe0d54ce3
  4118df:	aam    0xd1
  4118e1:	mov    dl,0x73
  4118e3:	mov    cl,0xd3
  4118e5:	(bad)  
  4118e6:	mov    edi,0x402dcf8e
  4118eb:	popf   
  4118ec:	and    al,0xaa
  4118ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118ef:	jle    0x4118ac
  4118f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118f2:	inc    edi
  4118f3:	outs   dx,BYTE PTR ds:[esi]
  4118f4:	faddp  st(0),st
  4118f6:	xchg   BYTE PTR [edx-0x1024ccb3],dl
  4118fc:	inc    esi
  4118fd:	(bad)  
  4118fe:	jno    0x4118b2
  411900:	dec    eax
  411901:	sbb    edx,eax
  411903:	ror    DWORD PTR ds:0x111d1948,0xe5
  41190a:	cld    
  41190b:	xor    edx,ecx
  41190d:	data16 (bad) 
  41190f:	rcr    BYTE PTR [edi+0x64cdd1e5],1
  411915:	sar    DWORD PTR [esi+0x5b],cl
  411918:	shl    BYTE PTR [edx+0x5917fa12],0x50
  41191f:	jns    0x41199a
  411921:	cwde   
  411922:	jge    0x41192c
  411924:	aas    
  411925:	push   es
  411926:	or     edx,DWORD PTR ds:0xeb8ccd91
  41192c:	mov    ebp,0x7834cc96
  411931:	jecxz  0x4118d6
  411933:	iret   
  411934:	lea    ecx,[ebp-0x6cd35fbf]
  41193a:	add    DWORD PTR [ebp+esi*8-0x44],esi
  41193e:	xlat   BYTE PTR ds:[ebx]
  41193f:	add    esi,DWORD PTR ds:0x478a045e
  411945:	ins    BYTE PTR es:[edi],dx
  411946:	aaa    
  411947:	scas   al,BYTE PTR es:[edi]
  411948:	mov    esp,0xf064befe
  41194d:	enter  0x17d5,0xd3
  411951:	xor    al,0xb3
  411953:	inc    edi
  411954:	cwde   
  411955:	mov    ds:0x6463c91d,al
  41195a:	mov    bl,BYTE PTR [eax]
  41195c:	cdq    
  41195d:	pop    edx
  41195e:	or     eax,0x56b63c6
  411963:	push   esp
  411964:	pop    ebp
  411965:	sar    BYTE PTR [ebx-0x12],cl
  411968:	sub    ch,bl
  41196a:	cmp    ch,bh
  41196c:	jb     0x4119a4
  41196e:	mov    ebp,ebp
  411970:	inc    ebp
  411971:	push   edi
  411972:	pop    esp
  411973:	into   
  411974:	add    ebp,DWORD PTR ds:0x7b8930e6
  41197a:	rcr    BYTE PTR [esi+0x3],0x8a
  41197e:	sar    BYTE PTR [edx+0x7b],1
  411981:	mov    esi,0x35e37418
  411986:	jns    0x411952
  411988:	pusha  
  411989:	cmp    al,0x58
  41198b:	stos   DWORD PTR es:[edi],eax
  41198c:	inc    esp
  41198d:	in     eax,0x39
  41198f:	(bad)  
  411991:	stc    
  411992:	or     BYTE PTR [eax],bh
  411994:	pusha  
  411995:	dec    ecx
  411997:	jae    0x4119eb
  411999:	cdq    
  41199a:	mov    dl,0xaa
  41199c:	mov    al,ds:0x21a7363e
  4119a1:	bound  eax,QWORD PTR [ecx]
  4119a3:	or     ebx,DWORD PTR [ecx-0xc]
  4119a6:	je     0x411933
  4119a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a9:	xchg   ebp,eax
  4119aa:	scas   al,BYTE PTR es:[edi]
  4119ab:	mov    ?,edx
  4119ad:	sub    al,0x9e
  4119af:	enter  0x2046,0xf2
  4119b3:	mov    al,cs:0x2e6f1bec
  4119b9:	mov    esi,0x9c81a6ec
  4119be:	popf   
  4119bf:	loope  0x41194f
  4119c1:	(bad)  
  4119c2:	jge    0x411966
  4119c4:	(bad)  
  4119c5:	in     eax,0xde
  4119c7:	add    al,0x76
  4119c9:	in     eax,0xac
  4119cb:	inc    ebp
  4119cc:	lds    ecx,FWORD PTR [esi]
  4119ce:	fdivrp st(4),st
  4119d0:	in     eax,dx
  4119d1:	push   ds
  4119d2:	inc    ebx
  4119d3:	aam    0xe9
  4119d5:	(bad)  
  4119d6:	jp     0x411a49
  4119d8:	xor    al,0x47
  4119da:	xor    al,0x1d
  4119dc:	cmp    DWORD PTR [ecx-0x77],eax
  4119df:	jnp    0x411a59
  4119e1:	dec    ebp
  4119e2:	aas    
  4119e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119e4:	mov    eax,0x43cb329a
  4119e9:	inc    ebx
  4119ea:	jno    0x411983
  4119ec:	mov    ebx,0x1bcde6df
  4119f1:	test   al,0xd1
  4119f3:	shl    ebp,1
  4119f5:	inc    ebp
  4119f6:	std    
  4119f7:	xor    eax,0xc3f84136
  4119fc:	push   0x4a2d1dea
  411a01:	add    al,0xad
  411a03:	mov    esi,0x30569490
  411a08:	sahf   
  411a09:	push   edx
  411a0a:	sbb    DWORD PTR [ebx+eiz*2],ecx
  411a0d:	xor    esi,ebx
  411a0f:	push   ebp
  411a10:	xchg   edi,eax
  411a11:	or     eax,0x9acffd8a
  411a16:	and    ecx,DWORD PTR [ebp+0x39]
  411a19:	inc    edx
  411a1a:	push   ds
  411a1b:	fistp  QWORD PTR [edi]
  411a1d:	aas    
  411a1e:	add    dh,cl
  411a20:	xchg   DWORD PTR [ebp-0x34],edi
  411a23:	sub    BYTE PTR [edx+0x2784ee74],ah
  411a29:	pop    edi
  411a2a:	or     DWORD PTR [edi],ecx
  411a2c:	iret   
  411a2d:	fbld   TBYTE PTR [edi]
  411a2f:	ret    
  411a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a31:	je     0x4119bf
  411a33:	(bad)  
  411a34:	adc    ah,cl
  411a36:	cs xchg ebx,eax
  411a38:	xor    bh,0x82
  411a3b:	xchg   edi,eax
  411a3c:	fimul  DWORD PTR [edx]
  411a3e:	and    ebp,edx
  411a40:	jp     0x411a3e
  411a42:	adc    al,0xe7
  411a44:	fld    QWORD PTR [eax+0x1c]
  411a47:	jle    0x411a28
  411a49:	sbb    eax,0x434d4674
  411a4e:	and    BYTE PTR [ebp+0x51a216ef],al
  411a54:	adc    eax,0xecaf66dc
  411a59:	pop    ebp
  411a5a:	stc    
  411a5b:	add    dh,BYTE PTR [ebx+0x6368bd42]
  411a61:	xchg   BYTE PTR [eax-0x66],cl
  411a64:	or     DWORD PTR [ebp-0x3cd2b8a9],esp
  411a6a:	jne    0x411aaf
  411a6c:	ins    DWORD PTR es:[edi],dx
  411a6d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  411a6f:	mov    dl,0x80
  411a71:	pop    ebp
  411a72:	sbb    ebp,DWORD PTR [eax+esi*8-0x2a]
  411a76:	sub    bl,BYTE PTR ds:0x5c7c904f
  411a7c:	int3   
  411a7d:	and    al,0x9c
  411a7f:	ror    BYTE PTR [esi-0x56b59f2a],1
  411a85:	test   eax,0x252579a1
  411a8a:	jecxz  0x411a5e
  411a8c:	mov    BYTE PTR [eax],dl
  411a8e:	dec    esp
  411a8f:	and    eax,0x51ef001b
  411a94:	jne    0x411a1e
  411a96:	cdq    
  411a97:	mov    edx,0xebb7581c
  411a9c:	fild   QWORD PTR [edi-0x869a03a]
  411aa2:	sti    
  411aa3:	imul   esi,DWORD PTR [eax-0x3f],0x23c61940
  411aaa:	fisttp WORD PTR [ecx+ebx*1]
  411aad:	fmul   DWORD PTR [edi+0x64]
  411ab0:	xchg   edi,eax
  411ab1:	aas    
  411ab2:	add    eax,0x871abec4
  411ab7:	aam    0x8a
  411ab9:	dec    esi
  411aba:	pop    es
  411abb:	fcmovu st,st(5)
  411abd:	sub    eax,DWORD PTR [esi+0x1f]
  411ac0:	icebp  
  411ac1:	sbb    al,0x39
  411ac3:	cli    
  411ac4:	pop    esp
  411ac5:	(bad)  
  411ac6:	mov    eax,0xfe555218
  411acb:	ins    BYTE PTR es:[edi],dx
  411acc:	xchg   ebx,eax
  411acd:	jp     0x411b1f
  411acf:	mov    bl,0x54
  411ad1:	frstor [eax-0x57]
  411ad4:	add    cl,BYTE PTR [edi-0x3102b60f]
  411ada:	cmc    
  411adb:	dec    esi
  411adc:	jnp    0x411ad0
  411ade:	out    dx,al
  411adf:	mov    ah,0x56
  411ae1:	jns    0x411a63
  411ae3:	daa    
  411ae4:	xchg   ebx,eax
  411ae5:	clc    
  411ae6:	je     0x411a83
  411ae8:	jmp    0xe7b9:0xce668a38
  411aef:	and    eax,0x2a9762db
  411af4:	into   
  411af5:	mov    edx,0x43cb673a
  411afa:	retf   0xa14c
  411afd:	fsubr  QWORD PTR [edx+0x3a]
  411b00:	into   
  411b01:	push   cs
  411b02:	and    edx,edi
  411b04:	mov    ch,0xac
  411b06:	push   es
  411b07:	xor    DWORD PTR [ecx+0x7a],0x75
  411b0b:	push   0xa
  411b0d:	or     bl,BYTE PTR [ebx]
  411b0f:	out    0x3d,al
  411b11:	jmp    0x411abf
  411b13:	ror    DWORD PTR [esi+eax*1-0x2efb8ab2],cl
  411b1a:	xchg   edi,eax
  411b1b:	mov    dh,0x56
  411b1d:	ins    DWORD PTR es:[edi],dx
  411b1e:	lods   eax,DWORD PTR ds:[esi]
  411b1f:	or     edi,DWORD PTR [esi-0x2d4ed35d]
  411b25:	sbb    al,0xf8
  411b27:	sub    ecx,esi
  411b29:	cmp    ch,ah
  411b2b:	(bad)  ds:0xb4c77240
  411b31:	cs mov bl,0x7c
  411b34:	into   
  411b35:	ds mov bh,0x39
  411b38:	dec    edx
  411b39:	pop    bx
  411b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b3c:	jno    0x411b0b
  411b3e:	arpl   bp,dx
  411b40:	lea    esi,[ecx+0x4fc66e0e]
  411b46:	pop    ebp
  411b47:	mov    edi,DWORD PTR [eax]
  411b49:	add    ebp,DWORD PTR [ecx-0x7fffbf9]
  411b4f:	std    
  411b50:	fmul   QWORD PTR [ecx]
  411b52:	xchg   DWORD PTR [ebx+ebp*1],ebx
  411b55:	inc    esi
  411b56:	call   0xfffd:0x1467b939
  411b5d:	stos   BYTE PTR es:[edi],al
  411b5e:	sub    DWORD PTR [ebx-0x52eecaab],eax
  411b64:	adc    ah,ah
  411b66:	mov    ebx,0xf605d0b9
  411b6b:	ja     0x411b0d
  411b6d:	and    dh,bl
  411b6f:	push   edi
  411b70:	ror    DWORD PTR [edx+0x1b],cl
  411b73:	aad    0xb
  411b75:	or     edi,edi
  411b77:	mov    ah,0x1d
  411b79:	stos   BYTE PTR es:[edi],al
  411b7a:	or     eax,0x1acc5b09
  411b7f:	(bad)  
  411b80:	jmp    0x182e:0x17c87b01
  411b87:	aad    0xfa
  411b89:	push   esi
  411b8a:	push   edx
  411b8b:	cld    
  411b8c:	ja     0x411b4a
  411b8e:	xchg   ecx,eax
  411b8f:	pop    esi
  411b90:	dec    esi
  411b91:	push   cs
  411b92:	popf   
  411b93:	pop    eax
  411b94:	ss es push ebp
  411b97:	mov    ebx,tr2
  411b9a:	mov    dh,0x58
  411b9c:	repz int 0x64
  411b9f:	mov    ds:0x8d5ee67a,eax
  411ba4:	lds    ebp,FWORD PTR [ebp-0x73]
  411ba7:	sbb    BYTE PTR [esi],al
  411ba9:	jmp    0xc5f:0xe2aa99c0
  411bb0:	test   BYTE PTR [ecx+edi*4],bh
  411bb3:	inc    ebp
  411bb4:	imul   ebp,DWORD PTR [edi-0x24],0x27ddfbc2
  411bbb:	ds addr16 daa 
  411bbe:	pop    eax
  411bbf:	inc    edi
  411bc0:	mov    bh,0x2
  411bc2:	inc    esi
  411bc3:	or     DWORD PTR [ebx-0x15],0xffb30208
  411bca:	jae    0x411b64
  411bcc:	das    
  411bcd:	ins    DWORD PTR es:[edi],dx
  411bce:	mov    ebx,0xa09ea96c
  411bd3:	cmp    BYTE PTR [edx-0x61],bl
  411bd6:	xchg   edi,eax
  411bd7:	ins    BYTE PTR es:[edi],dx
  411bd8:	in     eax,dx
  411bd9:	or     DWORD PTR [edi+0x3a],ecx
  411bdc:	in     eax,0xbf
  411bde:	call   0xfc7c:0x6b7f921f
  411be5:	xchg   ebx,eax
  411be6:	mov    WORD PTR [edi+0x9],ss
  411be9:	push   esi
  411bea:	xchg   esi,eax
  411beb:	mov    bl,0x5e
  411bed:	xchg   DWORD PTR [edx+edx*1-0x6e2e7eb0],edi
  411bf4:	jge    0x411c52
  411bf6:	push   0x115fe378
  411bfb:	push   ebx
  411bfc:	xor    esi,DWORD PTR [di]
  411bff:	loopne 0x411bdb
  411c01:	add    DWORD PTR [ebx],edx
  411c03:	fst    DWORD PTR [edi]
  411c05:	push   ds
  411c06:	pop    esi
  411c07:	or     DWORD PTR [edx-0x78],esp
  411c0a:	cmp    DWORD PTR [eax+0x7a],ebx
  411c0d:	(bad)  
  411c0e:	mov    ch,BYTE PTR [eax]
  411c10:	into   
  411c11:	icebp  
  411c12:	shl    BYTE PTR [esp+edi*8-0x4c],1
  411c16:	outs   dx,DWORD PTR ds:[esi]
  411c17:	cmp    ebp,DWORD PTR [eax+0x2f]
  411c1a:	and    DWORD PTR [eax+0xd],edx
  411c1d:	inc    eax
  411c1e:	out    0x75,al
  411c20:	adc    eax,0x9740f2a6
  411c25:	(bad)  
  411c27:	jb     0xd91c34af
  411c2d:	lahf   
  411c2e:	mov    ebp,eax
  411c30:	push   ebx
  411c31:	loopne 0x411bde
  411c33:	ficomp WORD PTR [ebp-0x5a]
  411c36:	mov    ah,0xdc
  411c38:	pop    esp
  411c39:	dec    esp
  411c3a:	shr    BYTE PTR [eax-0x7deb5d8d],cl
  411c40:	fldcw  WORD PTR fs:[eax]
  411c43:	stos   DWORD PTR es:[edi],eax
  411c44:	div    BYTE PTR [eax+ecx*4-0x601c87b8]
  411c4b:	xlat   BYTE PTR ds:[ebx]
  411c4c:	imul   esi,ebx,0x21
  411c4f:	ss xchg ebx,edx
  411c52:	cmp    di,WORD PTR ds:0x12a2193e
  411c59:	push   cs
  411c5a:	dec    edx
  411c5b:	cmp    al,BYTE PTR [edi+0x38]
  411c5e:	push   ds
  411c5f:	mov    al,0x9f
  411c61:	jbe    0x411c5f
  411c63:	imul   ebp,DWORD PTR [ebp+0x8],0x1d
  411c67:	pop    edi
  411c68:	mov    dl,0x9b
  411c6a:	and    al,0x4c
  411c6c:	xchg   esp,eax
  411c6d:	fild   DWORD PTR [ebp-0x4b]
  411c70:	cmp    BYTE PTR [esp+ebp*4+0x698a2bf6],ah
  411c77:	push   edi
  411c78:	ror    BYTE PTR [edi],0x7b
  411c7b:	inc    esp
  411c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c7d:	test   bh,dh
  411c7f:	(bad)  
  411c80:	sbb    esi,DWORD PTR [eax]
  411c82:	mul    BYTE PTR [ebx]
  411c84:	into   
  411c85:	loopne 0x411c0c
  411c87:	addr16 lahf 
  411c89:	(bad)  
  411c8a:	paddsb mm6,mm1
  411c8d:	call   0x67f16994
  411c92:	pop    eax
  411c93:	jmp    0xa40e:0xd679f13b
  411c9a:	lock xlat BYTE PTR ds:[ebx]
  411c9c:	xchg   DWORD PTR [ecx+0x62],ebx
  411c9f:	adc    al,0xc8
  411ca1:	jne    0x411cc7
  411ca3:	das    
  411ca4:	xchg   esi,eax
  411ca5:	mov    BYTE PTR [edi+0x47f64f5f],bh
  411cab:	div    ebx
  411cad:	jnp    0x411c73
  411caf:	loope  0x411ca4
  411cb1:	jb     0x411c67
  411cb3:	mov    ah,0xa8
  411cb5:	jmp    0x58ecf270
  411cba:	in     al,0x74
  411cbc:	fld    TBYTE PTR [ecx+ebx*4+0x38]
  411cc0:	arpl   WORD PTR fs:[ebp+edi*2-0x735a6213],si
  411cc8:	jecxz  0x411c98
  411cca:	push   ds
  411ccb:	mov    ebx,0x404a5ce0
  411cd0:	push   edi
  411cd1:	dec    edi
  411cd2:	arpl   WORD PTR [ebp-0x6b],bx
  411cd5:	pop    esp
  411cd6:	cmp    BYTE PTR [ebx-0x7beacf8f],cl
  411cdc:	pop    esp
  411cdd:	ds (bad) 
  411cdf:	ficom  WORD PTR [edi]
  411ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce2:	in     al,dx
  411ce3:	push   ds
  411ce4:	cmp    al,0xaf
  411ce6:	push   ecx
  411ce7:	inc    esp
  411ce8:	inc    eax
  411ce9:	lahf   
  411cea:	stc    
  411ceb:	jmp    0x411d34
  411ced:	bound  edx,QWORD PTR [edi]
  411cef:	cmp    ebx,edi
  411cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cf2:	mov    ebp,0xac0235c8
  411cf7:	retf   0xcd5f
  411cfa:	icebp  
  411cfb:	in     al,0xdd
  411cfd:	ss mov dl,0xc7
  411d00:	dec    ebx
  411d01:	loopne 0x411ce2
  411d03:	cmp    al,0x48
  411d05:	push   edx
  411d06:	in     eax,0x38
  411d08:	adc    DWORD PTR [ecx-0x36573a09],ebp
  411d0e:	jns    0x411d4a
  411d10:	mov    ds:0xf8a751a3,eax
  411d15:	hlt    
  411d16:	int3   
  411d17:	adc    bh,BYTE PTR ds:0x16b87a58
  411d1d:	je     0x411d55
  411d1f:	enter  0x5f55,0x44
  411d23:	inc    esp
  411d24:	or     esi,DWORD PTR es:[eax+0x497204ff]
  411d2b:	sub    eax,0xec467b20
  411d30:	mov    al,0x69
  411d32:	dec    eax
  411d33:	jecxz  0x411cc2
  411d35:	inc    eax
  411d36:	or     esi,DWORD PTR [eax-0x7e84704d]
  411d3c:	push   ds
  411d3d:	shl    DWORD PTR [edx-0x78],cl
  411d40:	inc    ecx
  411d41:	adc    cl,BYTE PTR [eax]
  411d43:	mov    ecx,0x4eabe1ca
  411d48:	mov    cl,0x57
  411d4a:	push   ebp
  411d4b:	ds push eax
  411d4d:	retf   
  411d4e:	div    BYTE PTR [esi-0x25]
  411d51:	xor    BYTE PTR [esi+0x56],bl
  411d54:	enter  0xf19e,0x26
  411d58:	test   ch,0x54
  411d5b:	sbb    al,0x4f
  411d5d:	mov    esp,0x76258f75
  411d62:	out    dx,al
  411d63:	repnz int3 
  411d65:	(bad)  
  411d66:	and    DWORD PTR [ecx],edx
  411d68:	jge    0x411d7e
  411d6a:	call   0x6a681e23
  411d6f:	cmp    eax,0x114223ea
  411d74:	or     al,0xd1
  411d76:	sbb    BYTE PTR [eax+0x122698b],ah
  411d7c:	jle    0x411d97
  411d7e:	sar    esp,cl
  411d80:	xchg   ebp,eax
  411d81:	scas   eax,DWORD PTR es:[edi]
  411d82:	sahf   
  411d83:	xor    al,0x68
  411d85:	xchg   BYTE PTR [edx-0x41d02c56],bl
  411d8b:	jp     0x411d68
  411d8d:	and    esi,DWORD PTR [ecx]
  411d8f:	fs dec edi
  411d91:	jno    0x411d34
  411d93:	add    eax,0x1630712a
  411d98:	in     eax,dx
  411d99:	mov    edx,0x170ed8fb
  411d9e:	push   0x59
  411da0:	cmc    
  411da1:	rcl    edx,1
  411da3:	lahf   
  411da4:	xchg   edi,eax
  411da5:	push   esp
  411da6:	jl     0x411dd5
  411da8:	sahf   
  411da9:	mov    ds:0x915c5839,al
  411dae:	xlat   BYTE PTR ds:[ebx]
  411daf:	cdq    
  411db0:	je     0x411df9
  411db2:	popa   
  411db3:	mov    WORD PTR [ebx-0x23],gs
  411db6:	shr    BYTE PTR [ebp+0x1d],0xc1
  411dba:	pop    edi
  411dbb:	cwde   
  411dbc:	jmp    0x411d69
  411dbe:	ret    
  411dbf:	js     0x411dcc
  411dc1:	mov    dl,0xe6
  411dc3:	std    
  411dc4:	int3   
  411dc5:	or     BYTE PTR [esi],cl
  411dc7:	std    
  411dc8:	out    dx,al
  411dc9:	and    al,0xab
  411dcb:	push   ds
  411dcc:	sub    BYTE PTR [esi-0x558bf219],bl
  411dd2:	icebp  
  411dd3:	inc    ecx
  411dd4:	pusha  
  411dd5:	dec    eax
  411dd6:	xor    ebx,DWORD PTR [eax]
  411dd8:	icebp  
  411dd9:	ins    BYTE PTR es:[edi],dx
  411dda:	fld    DWORD PTR [edx]
  411ddc:	push   eax
  411ddd:	jp     0x411e35
  411ddf:	stos   BYTE PTR es:[edi],al
  411de0:	loop   0x411e2c
  411de2:	mov    eax,0xe44fbe90
  411de7:	pop    esp
  411de8:	(bad)
  411deb:	adc    BYTE PTR [eax+esi*8],ah
  411dee:	ss sub al,0x15
  411df1:	xor    eax,0x2beea63e
  411df6:	mov    eax,ds:0xa7c44c50
  411dfb:	dec    edi
  411dfc:	inc    esp
  411dfd:	or     al,0x46
  411dff:	rcl    ebp,0xd2
  411e02:	(bad)  [ecx+0x2bbb220e]
  411e08:	iret   
  411e09:	push   ecx
  411e0a:	jle    0x411de5
  411e0c:	jmp    FWORD PTR [eax-0x8898a7]
  411e12:	jo     0x411e8b
  411e14:	push   ebx
  411e15:	gs scas eax,DWORD PTR es:[edi]
  411e17:	add    DWORD PTR [edx+edx*8],esp
  411e1a:	jl     0x411dbd
  411e1c:	push   esi
  411e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e1e:	in     al,0x4d
  411e20:	add    edx,DWORD PTR [ebx]
  411e22:	push   edx
  411e23:	fdiv   QWORD PTR [edx-0x64368a52]
  411e29:	add    dl,BYTE PTR fs:[esp+ebx*8+0x13]
  411e2e:	aad    0x1d
  411e30:	hlt    
  411e31:	and    cl,BYTE PTR [edi]
  411e33:	in     eax,dx
  411e34:	and    bl,al
  411e36:	push   edx
  411e37:	mov    eax,ds:0x48667db9
  411e3c:	repnz cmp eax,0xc83b39c7
  411e42:	mov    BYTE PTR [esi+0x15d38d6f],ch
  411e48:	(bad)  
  411e4a:	nop
  411e4b:	pop    esp
  411e4c:	gs iret 
  411e4e:	arpl   WORD PTR [edx],ax
  411e50:	inc    ebx
  411e51:	mov    esi,0x8d0349e6
  411e56:	xchg   bl,cl
  411e58:	pop    edx
  411e59:	push   es
  411e5a:	xor    bl,bh
  411e5c:	pop    eax
  411e5d:	clc    
  411e5e:	fcmovbe st,st(5)
  411e60:	push   edi
  411e61:	jp     0x411ec2
  411e63:	into   
  411e64:	ja     0x411e9d
  411e66:	dec    eax
  411e67:	test   eax,0xc6c39024
  411e6c:	inc    ebx
  411e6d:	xchg   ebx,eax
  411e6e:	push   0x47df024a
  411e73:	pop    ss
  411e74:	push   eax
  411e75:	retf   
  411e76:	mov    ds:0x2e1c037a,al
  411e7b:	ret    
  411e7c:	cwde   
  411e7d:	mov    DWORD PTR [ebp-0x237f56d3],edi
  411e83:	lods   al,BYTE PTR ds:[esi]
  411e84:	jmp    0xcf9d:0x4a4a7ffb
  411e8b:	ds mov dh,0x40
  411e8e:	adc    BYTE PTR [esi-0x57479d6c],bh
  411e94:	hlt    
  411e95:	cs nop
  411e97:	pop    esp
  411e98:	in     al,0x43
  411e9a:	ficom  DWORD PTR [esp+esi*2]
  411e9d:	pop    ecx
  411e9e:	jo     0x411e5d
  411ea0:	fcomp  QWORD PTR [esi-0x77]
  411ea3:	xor    al,0x8d
  411ea5:	sti    
  411ea6:	sbb    al,0xf0
  411ea8:	xor    BYTE PTR [ebx+0x39],al
  411eab:	imul   esi,ebx,0x72
  411eae:	lods   al,BYTE PTR ds:[esi]
  411eaf:	frstor [esi-0x43]
  411eb2:	ss mov dh,0xf7
  411eb5:	hlt    
  411eb6:	aam    0x76
  411eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eb9:	das    
  411eba:	and    dh,BYTE PTR [ebx]
  411ebc:	fdiv   DWORD PTR [ebx+edi*2-0x40]
  411ec0:	add    esi,DWORD PTR [ecx-0x27]
  411ec3:	stos   BYTE PTR es:[edi],al
  411ec4:	push   eax
  411ec5:	test   BYTE PTR [ebp+ebx*2-0xc7e47bf],0xd1
  411ecd:	xor    bl,BYTE PTR [edi+0x4a4e0756]
  411ed3:	fs xor al,0xe6
  411ed6:	push   ebx
  411ed7:	aas    
  411ed8:	mov    WORD PTR [ebx+0x62],fs
  411edb:	xchg   esi,eax
  411edc:	dec    edi
  411edd:	mov    eax,ds:0x63682a8d
  411ee2:	mov    ch,bh
  411ee4:	jae    0x411e66
  411ee6:	mov    WORD PTR [ebx-0x6d],es
  411ee9:	jecxz  0x411f0d
  411eeb:	or     bh,bl
  411eed:	xchg   edi,eax
  411eee:	out    0x8e,al
  411ef0:	pop    esp
  411ef1:	add    DWORD PTR [eax+0x67fde0cc],edi
  411ef7:	mov    eax,ds:0x28f8b1b2
  411efc:	mov    al,ds:0xbafbcd35
  411f01:	pop    edx
  411f02:	add    ebx,esi
  411f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f05:	push   0x444a3b89
  411f0a:	xor    al,0xa0
  411f0c:	push   ss
  411f0d:	fsubrp st(7),st
  411f0f:	push   ds
  411f10:	jecxz  0x411ee0
  411f12:	push   ss
  411f13:	pusha  
  411f14:	jmp    0x411eee
  411f16:	pusha  
  411f17:	adc    edx,eax
  411f19:	mov    dh,0x32
  411f1b:	sub    al,0x4b
  411f1d:	add    DWORD PTR [edx-0x202b5ea9],edi
  411f23:	mov    esi,0x1b75a040
  411f28:	push   ebp
  411f29:	enter  0xb6bc,0xb3
  411f2d:	nop
  411f2e:	sub    dl,BYTE PTR [esi+0x15]
  411f31:	and    cl,0xef
  411f34:	adc    BYTE PTR [eax+0x50988df6],0x30
  411f3b:	nop
  411f3c:	sub    cl,0x78
  411f3f:	(bad)  
  411f40:	push   cs
  411f41:	mov    ds:0xb5a1ce92,eax
  411f46:	xlat   BYTE PTR ds:[ebx]
  411f47:	and    cl,BYTE PTR [edx]
  411f49:	xor    dh,cl
  411f4b:	sub    BYTE PTR [ecx+eiz*8+0x2c],0xdc
  411f50:	ret    
  411f51:	jns    0x411eee
  411f53:	sub    ebx,ecx
  411f55:	popa   
  411f56:	pop    esi
  411f57:	sbb    DWORD PTR [edi],esp
  411f59:	jo     0x411f66
  411f5b:	gs inc edi
  411f5d:	test   BYTE PTR ds:0xb15aeeac,cl
  411f63:	test   eax,0xdeb1bb49
  411f68:	dec    eax
  411f69:	push   ebp
  411f6a:	retf   0x9ec
  411f6d:	das    
  411f6e:	in     al,0x77
  411f70:	dec    edx
  411f71:	sub    cl,BYTE PTR [edi+ebp*4]
  411f74:	int3   
  411f75:	xchg   esi,eax
  411f76:	mov    bl,0x13
  411f78:	sbb    al,0x6d
  411f7a:	outs   dx,DWORD PTR ds:[esi]
  411f7b:	jg     0x411f42
  411f7d:	and    eax,0xd0a0ea9e
  411f82:	mov    al,ds:0x721da5bc
  411f87:	ja     0x411f6a
  411f89:	nop
  411f8a:	les    ecx,FWORD PTR [ecx]
  411f8c:	sbb    BYTE PTR [eax],ch
  411f8e:	lods   al,BYTE PTR ds:[esi]
  411f8f:	push   ss
  411f90:	repnz enter 0x62c1,0x1
  411f95:	repnz xor eax,0xba53f0a7
  411f9b:	call   DWORD PTR [edi+eiz*1-0x3d8991ab]
  411fa2:	in     al,0xbf
  411fa4:	pop    edx
  411fa5:	gs retf 0x72e
  411fa9:	xchg   ebx,eax
  411faa:	xchg   edi,eax
  411fab:	into   
  411fac:	mov    BYTE PTR [ecx-0x40f8a775],dh
  411fb2:	mov    edx,0xfa81cce3
  411fb7:	retf   0x4643
  411fba:	out    dx,eax
  411fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fbc:	mov    esp,0xb4f4c498
  411fc1:	add    eax,0xae23d18c
  411fc6:	inc    esi
  411fc7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  411fc9:	inc    ebp
  411fca:	sub    BYTE PTR [edx+0x7d3a9adf],0x3b
  411fd1:	std    
  411fd2:	test   BYTE PTR [edi],ah
  411fd4:	or     BYTE PTR [eax+0x7b],bh
  411fd7:	outs   dx,BYTE PTR ds:[esi]
  411fd8:	inc    ebp
  411fd9:	jp     0x411fcf
  411fdb:	mov    ds:0x5e66dfa2,eax
  411fe0:	mov    esp,0x1d63c4c9
  411fe5:	in     al,dx
  411fe6:	test   bl,al
  411fe8:	mov    ds:0x3a23b9ac,eax
  411fed:	mov    BYTE PTR [ebx+0x31e33715],ah
  411ff3:	sub    bl,al
  411ff5:	lea    ebp,[edx]
  411ff7:	xchg   DWORD PTR [esi-0x30],eax
  411ffa:	mov    esp,0xdb8e60b0
  411fff:	adc    al,0x98
  412001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412002:	dec    esi
  412003:	mov    ecx,0x248c1201
  412008:	push   ebx
  412009:	sbb    BYTE PTR [eax+0x59],dl
  41200c:	xchg   DWORD PTR [esi-0x64],ebx
  41200f:	inc    esp
  412010:	adc    ch,BYTE PTR [esi+0x6637afee]
  412016:	and    BYTE PTR [edx],dh
  412018:	or     al,0xe
  41201a:	test   DWORD PTR [ebx],esp
  41201c:	sbb    cl,bl
  41201e:	mov    dl,0x88
  412020:	mov    bl,0x57
  412022:	es sbb eax,edx
  412025:	outs   dx,DWORD PTR ds:[esi]
  412026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412027:	fdivp  st(7),st
  412029:	pop    esp
  41202a:	das    
  41202b:	or     al,0x4c
  41202d:	loope  0x412024
  41202f:	aad    0x92
  412031:	ss icebp 
  412033:	repz adc edi,edi
  412036:	inc    edi
  412037:	repz push ebx
  412039:	(bad)  
  41203a:	(bad)  
  41203b:	aaa    
  41203c:	dec    ebx
  41203d:	xchg   esp,eax
  41203e:	arpl   cx,di
  412040:	push   esp
  412041:	mov    al,ds:0xbca59edb
  412046:	jb     0x4120ad
  412048:	repnz fldcw WORD PTR [edi-0x5451c84e]
  41204f:	fst    QWORD PTR [esi-0x2b7b2061]
  412055:	pop    esp
  412056:	daa    
  412057:	sbb    al,0x59
  412059:	fcomp  st(2)
  41205b:	xchg   esi,ebp
  41205d:	test   eax,0x47367066
  412062:	cmp    al,0x79
  412064:	int3   
  412065:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  412067:	cmp    edi,edi
  412069:	nop
  41206a:	lds    ebx,FWORD PTR [edi-0x42f7dabe]
  412070:	jae    0x412042
  412072:	(bad)  
  412073:	fistp  DWORD PTR [eax-0x31cda720]
  412079:	arpl   WORD PTR [ebp-0xa],dx
  41207c:	mov    edx,0xd347d0f0
  412081:	push   ebx
  412082:	xlat   BYTE PTR ds:[ebx]
  412083:	out    dx,al
  412084:	js     0x412081
  412086:	ds in  al,dx
  412088:	inc    esi
  412089:	jno    0x4120cc
  41208b:	sbb    al,BYTE PTR [edx]
  41208d:	cs jmp ebx
  412090:	(bad)  
  412091:	and    edx,esp
  412093:	sub    edi,DWORD PTR [ebp+0x24]
  412096:	jge    0x412088
  412098:	repz cwde 
  41209a:	ret    
  41209b:	test   DWORD PTR [esi+eiz*8],0x36468b58
  4120a2:	imul   DWORD PTR [ebx+0x4293177]
  4120a8:	xor    BYTE PTR es:[esi-0x1a],dl
  4120ac:	cli    
  4120ad:	jae    0x41208e
  4120af:	into   
  4120b0:	push   ecx
  4120b1:	icebp  
  4120b2:	add    cl,ch
  4120b4:	dec    ecx
  4120b5:	inc    edx
  4120b6:	push   edx
  4120b7:	push   ds
  4120b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120b9:	pop    edi
  4120ba:	mov    ah,0xb4
  4120bc:	scas   eax,DWORD PTR es:[edi]
  4120bd:	mov    bl,BYTE PTR [edx]
  4120bf:	and    dh,dl
  4120c1:	mov    bh,0xba
  4120c3:	test   DWORD PTR [edx-0x1f],ebx
  4120c6:	and    al,0x1b
  4120c8:	xor    DWORD PTR [edi-0x63c17ce9],ebx
  4120ce:	sar    DWORD PTR [edx+0x26],0x49
  4120d2:	lahf   
  4120d3:	or     al,0xf9
  4120d5:	inc    ebx
  4120d6:	mov    DWORD PTR [ebx+0x5be7ef33],ebx
  4120dc:	fld    QWORD PTR [eax+0x44595a16]
  4120e2:	dec    ebp
  4120e3:	xchg   al,ah
  4120e5:	(bad)  
  4120e7:	mov    eax,ds:0x8513390b
  4120ec:	sar    BYTE PTR [ebp-0x39d65584],1
  4120f2:	adc    al,0xb1
  4120f4:	int3   
  4120f5:	push   0x249cef2a
  4120fa:	std    
  4120fb:	outs   dx,DWORD PTR ds:[esi]
  4120fc:	sbb    eax,0x4347f38
  412101:	sub    cl,BYTE PTR [edi+eax*4+0x3c]
  412105:	es push ds
  412107:	sahf   
  412108:	push   es
  412109:	lds    edx,FWORD PTR [edx+0x3a3c7254]
  41210f:	push   ebp
  412110:	mov    ebp,0xae1b15c6
  412115:	popf   
  412116:	or     al,0x43
  412118:	sbb    ebx,DWORD PTR [ecx+0x718aeb27]
  41211e:	push   esi
  41211f:	jo     0x4120a5
  412121:	enter  0xa936,0xc
  412125:	xor    WORD PTR [edi-0x7],sp
  412129:	bnd jae 0x4120d3
  41212c:	aam    0x99
  41212e:	push   ebx
  41212f:	mov    al,ds:0x23d893a8
  412134:	jg     0x412175
  412136:	and    eax,0xed0be3bf
  41213b:	mov    ch,ch
  41213d:	push   esi
  41213e:	jb     0x4120da
  412140:	inc    ebx
  412141:	in     eax,0xb7
  412143:	(bad)  
  412144:	clc    
  412145:	sahf   
  412146:	xchg   ch,dl
  412148:	ret    
  412149:	pop    esi
  41214a:	jns    0x4120f0
  41214c:	cmp    al,0x87
  41214e:	sahf   
  41214f:	sbb    eax,0x1830be1f
  412154:	ja     0x4121c4
  412156:	das    
  412157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412158:	not    BYTE PTR [ecx]
  41215a:	mov    DWORD PTR [ebx+0x47],ebx
  41215d:	push   ecx
  41215e:	add    DWORD PTR [ebx+0x45a2de60],0xfffffffd
  412165:	rcl    BYTE PTR [ebx+0x8],1
  412168:	aam    0x25
  41216a:	pop    ebp
  41216b:	jecxz  0x412186
  41216d:	sub    esp,edi
  41216f:	ficom  WORD PTR [ecx-0x24]
  412172:	test   BYTE PTR [ebx+0x42822ec7],ch
  412178:	data16 jno 0x412124
  41217b:	fadd   st(4),st
  41217d:	(bad)  
  41217e:	pop    eax
  41217f:	into   
  412180:	sbb    DWORD PTR [ebp-0x6348e975],esp
  412186:	jo     0x41213c
  412188:	bound  ecx,QWORD PTR ds:0x419d55da
  41218e:	dec    ebx
  41218f:	dec    edx
  412190:	or     dh,dl
  412192:	push   ebp
  412193:	adc    DWORD PTR [esi+edi*1-0x66e437ca],edi
  41219a:	adc    DWORD PTR [ebx],0xffffffc6
  41219d:	adc    ecx,edx
  41219f:	imul   esi,esi,0x62
  4121a2:	mov    dh,0x1b
  4121a4:	inc    ebp
  4121a5:	push   ecx
  4121a6:	cld    
  4121a7:	xchg   edi,eax
  4121a8:	or     al,0xdc
  4121aa:	cld    
  4121ab:	xor    al,dl
  4121ad:	adc    ecx,DWORD PTR [esi]
  4121af:	mov    ch,0xbd
  4121b1:	jmp    0x412165
  4121b3:	iret   
  4121b4:	jo     0x412217
  4121b6:	jo     0x41214c
  4121b8:	mov    cl,cl
  4121ba:	cmp    eax,0xbfe3b46b
  4121bf:	or     ah,BYTE PTR [ecx]
  4121c1:	enter  0x27b8,0xdc
  4121c5:	repz pop esp
  4121c7:	ja     0x412160
  4121c9:	stos   BYTE PTR es:[edi],al
  4121ca:	mov    edx,0xf6c50acd
  4121cf:	cmp    DWORD PTR [ecx+0x4e],ebx
  4121d2:	adc    BYTE PTR ds:0x1c2b0535,bh
  4121d8:	scas   eax,DWORD PTR es:[edi]
  4121d9:	jb     0x4121f8
  4121db:	inc    esi
  4121dc:	inc    ecx
  4121dd:	cs jmp 0x412213
  4121e0:	cdq    
  4121e1:	adc    cl,ch
  4121e3:	lea    eax,[ebp-0x12]
  4121e6:	lea    edi,ss:[ecx-0xe]
  4121ea:	xchg   ebp,eax
  4121eb:	xchg   ebp,eax
  4121ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121ed:	test   al,0x80
  4121ef:	shl    BYTE PTR [esi],1
  4121f1:	or     al,0x68
  4121f3:	ja     0x41225e
  4121f5:	retf   0xd0f5
  4121f8:	cmc    
  4121f9:	inc    esi
  4121fa:	pop    ebx
  4121fb:	pop    es
  4121fc:	cmp    eax,0xe570c258
  412201:	dec    ebp
  412202:	lea    esp,[esi+0x73]
  412205:	dec    esp
  412206:	sbb    DWORD PTR [ebx],eax
  412208:	(bad)  
  412209:	sbb    DWORD PTR [eax-0x14c6a76],ebx
  41220f:	nop
  412210:	gs push ebp
  412212:	dec    edi
  412213:	fisub  WORD PTR gs:[ebp-0xb]
  412217:	neg    dh
  412219:	mov    eax,0xed0c4594
  41221e:	es pop esp
  412220:	and    al,0x68
  412222:	imul   ecx,edx,0xfffffffa
  412225:	jb     0x4121f0
  412227:	pop    edi
  412228:	and    BYTE PTR [edx-0x32fdb4f8],ch
  41222e:	pop    ebx
  41222f:	mov    ds:0xcd758c19,al
  412234:	xchg   eax,esp
  412236:	cmp    eax,0x7a04a73
  41223b:	stos   BYTE PTR es:[edi],al
  41223c:	(bad)  
  41223d:	iret   
  41223e:	popf   
  41223f:	aaa    
  412240:	xchg   edi,eax
  412241:	addr16 cmp eax,0xb6bc7dcd
  412247:	sti    
  412248:	adc    ebx,0xa1cbae0f
  41224e:	lods   eax,DWORD PTR ds:[esi]
  41224f:	mov    esi,DWORD PTR [esi+0x9]
  412252:	int3   
  412253:	adc    al,0xc7
  412255:	mov    dl,0xad
  412257:	and    al,0xc6
  412259:	aam    0x37
  41225b:	push   eax
  41225c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41225d:	sub    al,0x6
  41225f:	test   DWORD PTR [ebx],esi
  412261:	lea    esi,[eax-0x761117aa]
  412267:	icebp  
  412268:	enter  0x9884,0x5
  41226c:	popf   
  41226d:	jb     0x4121f4
  41226f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412270:	jmp    0xbaaa:0x79194e2c
  412277:	add    ebp,DWORD PTR [ebx-0x109062c5]
  41227d:	adc    al,0xca
  41227f:	call   0x8408cd4
  412284:	out    0x70,eax
  412286:	stc    
  412287:	iret   
  412288:	mov    ebx,0x6c6c3791
  41228d:	sar    DWORD PTR [ecx+0x38],cl
  412290:	mov    esi,0x96da25d4
  412295:	(bad)  
  412296:	xchg   ecx,eax
  412297:	cmp    al,0x5e
  412299:	(bad)  
  41229b:	sub    DWORD PTR [ebx-0x11],ebp
  41229e:	pop    esp
  41229f:	cmp    DWORD PTR [ecx+0x6e367ee3],edi
  4122a5:	push   ebp
  4122a6:	xchg   BYTE PTR [ecx-0x11],bh
  4122a9:	(bad)  
  4122aa:	loope  0x41225c
  4122ac:	inc    edx
  4122ad:	add    al,0x9b
  4122af:	dec    ebp
  4122b0:	jbe    0x4122fb
  4122b2:	mov    bx,0xbb1c
  4122b6:	sbb    eax,0x248f9ed0
  4122bb:	(bad)  
  4122bc:	in     al,dx
  4122bd:	pop    ss
  4122be:	mov    eax,ds:0x11fedfc3
  4122c3:	cld    
  4122c4:	(bad)  
  4122c6:	int    0x35
  4122c8:	mov    esp,0xbf4afe6
  4122cd:	inc    ebp
  4122ce:	or     eax,0x7ff2ce36
  4122d3:	retf   0x1c00
  4122d6:	jns    0x412306
  4122d8:	les    esi,FWORD PTR [edi]
  4122da:	push   ss
  4122db:	mov    ?,WORD PTR [ebp-0x7e]
  4122de:	adc    BYTE PTR [ecx],ah
  4122e0:	test   al,0x67
  4122e2:	xchg   ecx,eax
  4122e3:	mov    dh,0xf6
  4122e5:	and    al,BYTE PTR [esi+0x64d130ec]
  4122eb:	sub    al,0x2a
  4122ed:	adc    dl,BYTE PTR [ecx+edx*1]
  4122f0:	icebp  
  4122f1:	mov    ds:0x7a93e6a5,al
  4122f6:	mov    ch,0xf5
  4122f8:	das    
  4122f9:	cmp    eax,ecx
  4122fb:	aam    0x72
  4122fd:	nop
  4122fe:	dec    eax
  4122ff:	mov    ecx,0x34f7fd40
  412304:	xor    eax,0x658a51e0
  412309:	aam    0x53
  41230b:	inc    ecx
  41230c:	pop    ecx
  41230d:	(bad)  
  41230e:	fsubr  DWORD PTR [eax+0x54]
  412311:	jl     0x4122f1
  412313:	jmp    0xa462a1e8
  412318:	fld    DWORD PTR [eax-0x1a]
  41231b:	fxch   st(1)
  41231d:	jo     0x412308
  41231f:	sbb    al,0x47
  412321:	mov    ah,0x4d
  412323:	add    DWORD PTR [esi+0x242cb60a],ecx
  412329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41232a:	xchg   esi,eax
  41232b:	pushf  
  41232c:	mov    cl,0x72
  41232e:	mov    ebp,0xb2bf1719
  412333:	lea    esi,[edx]
  412335:	or     edx,DWORD PTR [esp+ecx*1]
  412338:	dec    ebp
  412339:	in     al,dx
  41233a:	scas   al,BYTE PTR es:[edi]
  41233b:	hlt    
  41233c:	(bad)  
  41233e:	mov    ecx,DWORD PTR ds:0x57af3038
  412344:	imul   edi,DWORD PTR [ebp-0x77ec1276],0xc6f62425
  41234e:	mov    bh,0xf9
  412350:	popf   
  412351:	and    BYTE PTR [edx-0x2a],ch
  412354:	push   0xffffffc6
  412356:	mov    dh,BYTE PTR [edi-0x353a3892]
  41235c:	stos   DWORD PTR es:[edi],eax
  41235d:	fsub   DWORD PTR [ecx-0x59cc757a]
  412363:	popf   
  412364:	test   esp,esi
  412366:	sbb    edx,DWORD PTR [ecx]
  412368:	push   eax
  412369:	jmp    0x6bee83fc
  41236e:	mov    es,WORD PTR [ecx-0x5e]
  412371:	xor    eax,0xc16f22e4
  412376:	ins    DWORD PTR es:[edi],dx
  412377:	(bad)  
  412378:	sahf   
  412379:	xchg   ebx,eax
  41237a:	jp     0x412348
  41237c:	xor    eax,ebp
  41237e:	fwait
  41237f:	mov    al,ds:0x720e79ea
  412384:	retf   
  412385:	add    al,0xd8
  412387:	sub    BYTE PTR [ebx+0x4e],bl
  41238a:	shr    BYTE PTR [edi-0x1e],1
  41238d:	mov    DWORD PTR [ebx],esp
  41238f:	pop    ebp
  412390:	xor    al,0x43
  412392:	mov    cl,0x13
  412394:	je     0x412370
  412396:	or     eax,0x7052a71c
  41239b:	push   ebx
  41239c:	cmp    edx,edx
  41239e:	in     al,dx
  41239f:	cmp    al,0x1c
  4123a1:	fwait
  4123a2:	or     ax,WORD PTR [ebx+0x46]
  4123a6:	daa    
  4123a7:	dec    esi
  4123a8:	add    al,0xee
  4123aa:	loopne 0x4123d6
  4123ac:	or     al,0xa4
  4123ae:	pop    edi
  4123af:	addr16 sahf 
  4123b1:	loope  0x412375
  4123b3:	pop    esi
  4123b4:	scas   al,BYTE PTR es:[edi]
  4123b5:	inc    ebp
  4123b6:	xrelease mov DWORD PTR [ecx-0x6c],ebp
  4123ba:	shr    DWORD PTR ds:0x8c810db9,cl
  4123c0:	pop    ebx
  4123c1:	ret    0xac2b
  4123c4:	das    
  4123c5:	xlat   BYTE PTR ds:[ebx]
  4123c6:	jo     0x412442
  4123c8:	mov    esi,DWORD PTR [eax]
  4123ca:	mov    al,0xa6
  4123cc:	cmp    DWORD PTR [ebx-0xe6f0def],esi
  4123d2:	dec    ebp
  4123d3:	xchg   edx,ebx
  4123d5:	and    BYTE PTR [edx+0x4b169b76],ch
  4123db:	dec    BYTE PTR [ecx-0x7554b1b5]
  4123e1:	nop
  4123e2:	sbb    al,0x58
  4123e4:	into   
  4123e5:	xor    BYTE PTR [ebx-0x78],dl
  4123e8:	adc    ch,bh
  4123ea:	outs   dx,DWORD PTR ds:[esi]
  4123eb:	das    
  4123ec:	pop    es
  4123ed:	in     eax,0xb9
  4123ef:	pop    ecx
  4123f0:	mov    eax,ebx
  4123f2:	ds mov ebx,0x13752c84
  4123f8:	aas    
  4123f9:	adc    eax,esi
  4123fb:	mov    ch,dh
  4123fd:	xchg   esp,eax
  4123fe:	out    dx,al
  4123ff:	ror    BYTE PTR [edx],0x11
  412402:	push   ss
  412403:	clc    
  412404:	xor    al,0xe0
  412406:	cmc    
  412407:	loop   0x4123c4
  412409:	imul   ecx,esi,0xcabacd47
  41240f:	dec    BYTE PTR [edi]
  412411:	mov    al,0xc4
  412413:	cmc    
  412414:	retf   0x49ae
  412417:	nop
  412418:	mov    ds:0x40886ef6,al
  41241d:	mov    esp,0x758c0b4a
  412422:	xchg   edx,eax
  412423:	(bad)  [eax-0x759b7c4d]
  412429:	inc    esi
  41242a:	mov    ebx,0x7fe49e2e
  41242f:	lods   eax,DWORD PTR ds:[esi]
  412430:	lods   eax,DWORD PTR ds:[esi]
  412431:	cmp    al,BYTE PTR ds:0x30cec577
  412437:	push   ss
  412438:	outs   dx,DWORD PTR ds:[esi]
  412439:	push   0xffffffe2
  41243b:	push   ebp
  41243c:	test   eax,0x6642efa
  412441:	ins    DWORD PTR es:[edi],dx
  412442:	jno    0x412402
  412444:	mov    ecx,0x419af6ca
  412449:	jg     0x4123f5
  41244b:	aad    0x1a
  41244d:	test   esi,edi
  41244f:	push   esp
  412450:	cs jo  0x4123e3
  412453:	push   ecx
  412454:	fs push edi
  412456:	icebp  
  412457:	ss dec eax
  412459:	or     eax,0x154845f5
  41245e:	jle    0x412432
  412460:	aad    0x56
  412462:	jecxz  0x4124a1
  412464:	mov    dh,0x73
  412466:	sti    
  412467:	mov    al,0x64
  412469:	js     0x412485
  41246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41246c:	and    edi,DWORD PTR [edx+0x6f3f46ca]
  412472:	imul   eax,DWORD PTR [ebx-0x6847bd34],0xffffffb4
  412479:	scas   eax,DWORD PTR es:[edi]
  41247a:	daa    
  41247b:	not    DWORD PTR [eax-0x91c00c2]
  412481:	loop   0x412408
  412483:	xchg   edi,eax
  412484:	and    dl,BYTE PTR [ebx]
  412486:	or     dh,ch
  412488:	out    dx,eax
  412489:	rol    BYTE PTR [ebp-0x38e27271],1
  41248f:	es cmp ebx,eax
  412492:	mov    esp,0xaa82d85b
  412497:	jl     0x412491
  412499:	mov    al,0xaa
  41249b:	sbb    BYTE PTR [edx-0x68],cl
  41249e:	push   ebp
  41249f:	test   DWORD PTR [esi],ebp
  4124a1:	mov    dh,0x53
  4124a3:	icebp  
  4124a4:	test   DWORD PTR [ebp+0x3],0x7b221407
  4124ab:	(bad)  
  4124ac:	iret   
  4124ad:	or     cl,BYTE PTR [ecx+0x60ede6f7]
  4124b3:	push   0x78
  4124b5:	aas    
  4124b6:	outs   dx,DWORD PTR ds:[esi]
  4124b7:	dec    esi
  4124b8:	fs jmp 0x9caf:0xc9bfa97
  4124c0:	rol    DWORD PTR [esi],0x9d
  4124c3:	sbb    BYTE PTR [edx+0x2e],bh
  4124c6:	sbb    eax,0xfdef1b9
  4124cb:	sbb    BYTE PTR [ecx-0x6bfc152b],cl
  4124d1:	imul   esi,DWORD PTR [edi+0x139d8e47],0xc290118a
  4124db:	je     0x4124eb
  4124dd:	es clc 
  4124df:	push   es
  4124e0:	test   eax,0xed62f954
  4124e5:	out    0xe8,al
  4124e7:	ss jecxz 0x41249c
  4124ea:	clc    
  4124eb:	leave  
  4124ec:	les    ebp,FWORD PTR [edx+0x20ecf66c]
  4124f2:	xchg   esi,eax
  4124f3:	pop    ss
  4124f4:	int    0x94
  4124f6:	nop
  4124f7:	jae    0x412549
  4124f9:	cli    
  4124fa:	inc    ebp
  4124fb:	sub    bl,BYTE PTR [edi-0x48c2b7fe]
  412501:	lds    eax,FWORD PTR [edi]
  412503:	or     al,0x0
  412505:	inc    edi
  412506:	xchg   edx,eax
  412507:	pushf  
  412508:	into   
  412509:	jns    0x412553
  41250b:	mov    ebp,0xf8ac4c1
  412510:	xchg   BYTE PTR [ecx-0x62b81e1d],bl
  412516:	lods   al,BYTE PTR ds:[esi]
  412517:	adc    bl,BYTE PTR [eax-0x514b7b7e]
  41251d:	mov    esp,0x279211b3
  412522:	adc    edx,DWORD PTR [edi+0x1e]
  412525:	je     0x412567
  412527:	inc    edx
  412528:	adc    ebp,DWORD PTR [ebx+0x0]
  41252b:	xor    dl,BYTE PTR [esi]
  41252d:	mov    esp,0x44f52fb4
  412532:	(bad)  
  412533:	sti    
  412534:	or     dh,BYTE PTR [ebx+0x2d]
  412537:	les    ecx,FWORD PTR [eax+0x2b]
  41253a:	mov    edx,0x45fe89c5
  41253f:	pusha  
  412540:	call   0x50a3fc4d
  412545:	ins    DWORD PTR es:[edi],dx
  412546:	scas   al,BYTE PTR es:[edi]
  412547:	jo     0x4125c8
  412549:	hlt    
  41254a:	pushf  
  41254b:	in     al,dx
  41254c:	(bad)  
  41254d:	push   edi
  41254e:	push   es
  41254f:	adc    al,0xdf
  412551:	jmp    0x6add1da1
  412556:	cli    
  412557:	cmp    edi,DWORD PTR [edi+edx*2-0x5f]
  41255b:	div    cl
  41255d:	adc    DWORD PTR [esi],0x12
  412560:	aam    0xeb
  412562:	arpl   WORD PTR [ebp+0x66],bp
  412565:	fxch   st(4)
  412567:	sbb    eax,0xb80025f4
  41256c:	sub    al,0x9b
  41256e:	xchg   ebp,eax
  41256f:	stos   BYTE PTR es:[edi],al
  412570:	call   0xf5b06ae7
  412575:	(bad)  
  412576:	jnp    0x4125d8
  412578:	enter  0x9f9f,0x45
  41257c:	jmp    0xf812c771
  412581:	cmc    
  412582:	pop    ss
  412583:	movd   DWORD PTR [esi],mm0
  412586:	add    edi,DWORD PTR [ebx+0x5b]
  412589:	add    eax,DWORD PTR [edx]
  41258b:	adc    eax,DWORD PTR [ecx]
  41258d:	dec    ebp
  41258e:	ror    esp,1
  412590:	mov    al,0x1a
  412592:	xor    DWORD PTR [ecx+ebp*2+0x4d],ebx
  412596:	enter  0x1ded,0x2b
  41259a:	hlt    
  41259b:	or     al,dh
  41259d:	lock sub ch,0xe2
  4125a1:	pop    edi
  4125a2:	int    0x58
  4125a4:	or     eax,0x4c
  4125a7:	jmp    0x9b89471
  4125ac:	ret    0x7b13
  4125af:	out    dx,eax
  4125b0:	(bad)  [edx-0x3f]
  4125b3:	sub    bh,ch
  4125b5:	pop    edx
  4125b6:	or     eax,0x16e18781
  4125bb:	pop    es
  4125bc:	and    eax,0xa411c8a7
  4125c1:	sub    al,0xa3
  4125c3:	cdq    
  4125c4:	bound  ecx,QWORD PTR [ebp+ebx*8+0x2e]
  4125c8:	and    bl,BYTE PTR [ecx]
  4125ca:	pop    es
  4125cb:	out    0x8c,al
  4125cd:	sahf   
  4125ce:	push   cs
  4125cf:	mov    cs:0xf6834442,eax
  4125d5:	push   ss
  4125d6:	mov    BYTE PTR [ebx+0xce8619d],bl
  4125dc:	jbe    0x4125ce
  4125de:	das    
  4125df:	mov    ecx,0x549d9d6c
  4125e4:	dec    ecx
  4125e5:	add    cl,BYTE PTR [eax-0x5bbfd48b]
  4125eb:	mov    dl,0x3c
  4125ed:	jp     0x41265d
  4125ef:	lea    esi,[ebx+0x19a47043]
  4125f5:	mov    bl,0xaa
  4125f7:	jp     0x41260a
  4125f9:	dec    esp
  4125fa:	jns    0x4125c9
  4125fc:	xrelease xchg DWORD PTR [eax-0x1c83bca7],edx
  412603:	inc    esi
  412604:	stos   DWORD PTR es:[edi],eax
  412605:	mov    ds:0xbdad28ef,al
  41260a:	ss in  al,dx
  41260c:	ins    DWORD PTR es:[edi],dx
  41260d:	inc    edi
  41260e:	inc    eax
  41260f:	(bad)  
  412610:	and    ecx,esi
  412612:	jl     0x41260d
  412614:	test   al,0xe8
  412616:	sbb    eax,0xeb510fcb
  41261b:	push   edi
  41261c:	imul   eax,ebx,0x117d82ef
  412622:	(bad)  
  412623:	imul   DWORD PTR [esi+0x47cb0f60]
  412629:	or     edx,ebx
  41262b:	push   ebx
  41262c:	ror    BYTE PTR [edi+0x46],1
  41262f:	(bad)
  412634:	imul   esi,DWORD PTR [ebx-0x59],0xffffffad
  412638:	loopne 0x41269d
  41263a:	adc    eax,0x510b2bc4
  41263f:	inc    eax
  412640:	outs   dx,BYTE PTR ds:[esi]
  412641:	stos   DWORD PTR es:[edi],eax
  412642:	int3   
  412643:	fimul  WORD PTR [esi-0x1848ae6b]
  412649:	mov    bl,0xcd
  41264b:	(bad)  
  41264c:	push   cs
  41264d:	or     esi,eax
  41264f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412650:	test   al,0x3
  412652:	xchg   esi,eax
  412653:	call   0x320d3285
  412658:	cmp    bl,BYTE PTR [ecx+0x785403d]
  41265e:	push   esi
  41265f:	(bad)  [eax-0x631ea3c9]
  412665:	dec    edx
  412666:	cs aaa 
  412668:	daa    
  412669:	jnp    0x412605
  41266b:	inc    eax
  41266c:	or     eax,0x34f77304
  412671:	sbb    edx,edi
  412673:	inc    edi
  412674:	ja     0x4126e0
  412676:	pop    esp
  412677:	ret    0xbbcf
  41267a:	sub    edx,DWORD PTR [edx-0x5d8195e9]
  412680:	cli    
  412681:	xor    ecx,DWORD PTR [ebx+0x5d]
  412684:	aam    0x39
  412686:	inc    ebx
  412687:	call   0x7c58:0xacdb27dc
  41268e:	push   edx
  41268f:	push   ebp
  412690:	std    
  412691:	dec    edx
  412692:	shl    edx,cl
  412694:	xchg   ebx,eax
  412695:	add    ebx,DWORD PTR [ebp-0x68]
  412698:	mov    eax,ds:0x8c2514f9
  41269d:	je     0x412713
  41269f:	lods   al,BYTE PTR ds:[esi]
  4126a0:	iret   
  4126a1:	mov    edi,0x995fbc2b
  4126a6:	mov    ebp,0xd68b6ad7
  4126ab:	das    
  4126ac:	pusha  
  4126ad:	mov    ebx,0xdec3c491
  4126b2:	mov    cl,0x55
  4126b4:	ins    DWORD PTR es:[edi],dx
  4126b5:	xor    eax,0x2451eac
  4126ba:	and    eax,0x5c07a0fc
  4126bf:	call   FWORD PTR [ebx]
  4126c1:	xchg   edi,eax
  4126c2:	jp     0x4126bb
  4126c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c5:	out    0xe9,al
  4126c7:	mov    cl,0x39
  4126c9:	and    BYTE PTR [eax],al
  4126cb:	in     al,dx
  4126cc:	xlat   BYTE PTR ds:[ebx]
  4126cd:	xchg   BYTE PTR [eax+ecx*2],bl
  4126d0:	aad    0x19
  4126d2:	fld    DWORD PTR [eax-0x1297fe00]
  4126d8:	add    ecx,DWORD PTR [ebx]
  4126da:	mov    edx,0xb76615fe
  4126df:	shr    DWORD PTR [ebx+0x7820a38d],0xa4
  4126e6:	xor    al,0x49
  4126e8:	cmp    BYTE PTR [eax+0x6f2fa1c3],cl
  4126ee:	repnz add dl,al
  4126f1:	sbb    bh,BYTE PTR [eax]
  4126f3:	jle    0x412695
  4126f5:	mov    ebx,0x62d03fb5
  4126fa:	jecxz  0x4126ac
  4126fc:	imul   edi,DWORD PTR [ebx],0x5dfff716
  412702:	push   ecx
  412703:	add    eax,0x5fe187dc
  412708:	mov    dh,BYTE PTR [edx]
  41270a:	fcomi  st,st(5)
  41270c:	retf   0x5d84
  41270f:	loope  0x4126f7
  412711:	xchg   ebx,eax
  412712:	clc    
  412713:	mov    eax,0xc6bdc715
  412718:	fcom   DWORD PTR [ebx+0x74]
  41271b:	inc    edi
  41271c:	mov    WORD PTR [ecx-0x79195ab6],ds
  412722:	clc    
  412723:	sbb    BYTE PTR [ecx],cl
  412725:	(bad)  
  412726:	test   al,0xc0
  412728:	aas    
  412729:	sbb    BYTE PTR [edi+0x55db98f0],dl
  41272f:	aaa    
  412730:	in     al,dx
  412731:	out    dx,eax
  412732:	sbb    BYTE PTR [edi+0x196b937c],0xcc
  412739:	and    WORD PTR ds:0x370bbb06,cx
  412740:	clc    
  412741:	lds    ecx,FWORD PTR [eax]
  412743:	push   edi
  412744:	fstp   st(4)
  412746:	neg    DWORD PTR [edx+0x547aaed4]
  41274c:	inc    esi
  41274d:	push   edi
  41274e:	xor    cl,cl
  412750:	lock push ss
  412752:	jg     0x4126d4
  412754:	add    BYTE PTR [ebx-0x67],0xad
  412758:	jo     0x412722
  41275a:	jmp    0x412766
  41275c:	fist   DWORD PTR fs:[ebp-0x36]
  412760:	adc    DWORD PTR [esi+ecx*8-0x59],eax
  412764:	test   al,0x47
  412766:	fidivr WORD PTR [edi]
  412768:	push   esp
  412769:	jnp    0x412795
  41276b:	pop    edx
  41276c:	popf   
  41276d:	shr    ch,0xc2
  412770:	iret   
  412771:	aam    0x60
  412773:	push   es
  412774:	sbb    BYTE PTR [ebx-0x59],dh
  412777:	xor    eax,0x66a54761
  41277c:	or     DWORD PTR [ecx],0x2c
  41277f:	mov    eax,0x27a4cf72
  412784:	cmp    bl,BYTE PTR [edx]
  412786:	nop
  412787:	ja     0x412797
  412789:	fist   DWORD PTR [esi]
  41278b:	sub    BYTE PTR [edi+edi*2+0x50eb8adf],al
  412792:	pop    eax
  412793:	jno    0x412767
  412795:	bound  eax,QWORD PTR [edi+esi*1]
  412798:	gs inc eax
  41279a:	push   esi
  41279b:	and    DWORD PTR ds:0x1935ba6b,0xcb5e72af
  4127a5:	fs or  dh,bl
  4127a8:	cmp    al,0x58
  4127aa:	popf   
  4127ab:	jmp    0x41282c
  4127ad:	xor    bh,cl
  4127af:	std    
  4127b0:	and    BYTE PTR [ebx+0x64],dh
  4127b3:	jl     0x41277a
  4127b5:	ret    0xff7a
  4127b8:	xchg   esp,eax
  4127b9:	mov    ebp,0xdc996f84
  4127be:	out    dx,eax
  4127bf:	mov    ds:0xb2a497ad,al
  4127c4:	xor    al,0x14
  4127c6:	outs   dx,BYTE PTR ds:[esi]
  4127c7:	xchg   edi,eax
  4127c8:	int    0xc
  4127ca:	iret   
  4127cb:	and    eax,0x227ceff6
  4127d0:	xlat   BYTE PTR ds:[ebx]
  4127d1:	pop    edi
  4127d2:	sbb    BYTE PTR [esi+0x57183e45],0x30
  4127d9:	xchg   ebx,eax
  4127da:	mov    edi,0x70a5d2a1
  4127df:	add    BYTE PTR [eax+ebx*4],bh
  4127e2:	inc    ecx
  4127e3:	es jb  0x4127f9
  4127e6:	push   ss
  4127e7:	mov    BYTE PTR [ebx+0x7ef9ee05],0x51
  4127ee:	and    ch,BYTE PTR [ebp-0x5fef4475]
  4127f4:	lahf   
  4127f5:	lds    edx,FWORD PTR [eax]
  4127f7:	inc    esi
  4127f8:	push   ebx
  4127f9:	cmp    eax,0x72cf35b3
  4127fe:	fild   DWORD PTR [eax+0x59]
  412801:	dec    esp
  412802:	cmp    esp,ecx
  412804:	mov    ds:0xc93448a9,eax
  412809:	or     eax,0x8d07317
  41280e:	retf   0xd989
  412811:	iret   
  412812:	jl     0x4127da
  412814:	js     0x412813
  412816:	mov    dh,BYTE PTR [esi]
  412818:	jp     0x412840
  41281a:	and    esi,DWORD PTR [eax-0x6905cc04]
  412820:	push   ebp
  412821:	and    eax,0x1412c12f
  412826:	dec    ebp
  412827:	rol    ecx,0xe3
  41282a:	out    0x26,al
  41282c:	push   cs
  41282d:	pop    es
  41282e:	push   esi
  41282f:	push   edi
  412830:	or     DWORD PTR [edx],esp
  412832:	mov    ds:0xd4a3485a,al
  412837:	fisttp WORD PTR [edx+0x592b1ba0]
  41283d:	int3   
  41283e:	mov    WORD PTR [ecx+0x0],es
  412841:	mov    dl,0x3d
  412843:	jne    0x41281e
  412845:	scas   eax,DWORD PTR es:[edi]
  412846:	dec    edi
  412847:	repnz fidivr WORD PTR [ecx+0x6737d7fb]
  41284e:	push   ds
  41284f:	imul   edx,edx,0xffffffe9
  412852:	inc    esi
  412853:	icebp  
  412854:	push   ss
  412855:	popa   
  412856:	(bad)  
  412857:	xchg   esi,eax
  412858:	test   DWORD PTR [esi+0x1dda02e],eax
  41285e:	add    BYTE PTR [eax+eax*8+0x38fc2543],dl
  412865:	fadd   DWORD PTR [ecx]
  412867:	jne    0x412865
  412869:	imul   eax,DWORD PTR [eax],0xd446dcbe
  41286f:	je     0x412842
  412871:	dec    ebx
  412872:	mov    cl,0x46
  412874:	and    al,0x64
  412876:	mov    bl,0x88
  412878:	ror    cl,0xf3
  41287b:	call   FWORD PTR [ebx+esi*2-0xf20eead]
  412882:	adc    eax,0x2cd06dfc
  412887:	(bad)  
  412888:	and    ah,BYTE PTR [ecx]
  41288a:	(bad)  
  41288b:	retf   0x31bb
  41288e:	mov    al,0x31
  412890:	out    dx,al
  412891:	loop   0x412843
  412893:	aas    
  412894:	mov    ebx,0x97636d91
  412899:	xchg   ecx,eax
  41289a:	(bad)  
  41289b:	xor    DWORD PTR [edx-0x62],eax
  41289e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41289f:	sub    esp,ebx
  4128a1:	mov    eax,ds:0xc1e4aeb4
  4128a6:	int3   
  4128a7:	outs   dx,DWORD PTR ds:[esi]
  4128a8:	ss cdq 
  4128aa:	retf   0x36b4
  4128ad:	xchg   esp,eax
  4128ae:	retf   
  4128af:	rcl    esp,0xa1
  4128b2:	jecxz  0x41291f
  4128b4:	into   
  4128b5:	out    0x6b,al
  4128b7:	push   es
  4128b8:	pop    ecx
  4128b9:	and    eax,0xcfc68e72
  4128be:	and    BYTE PTR [ebx+edi*1-0x1f],al
  4128c2:	push   0x76
  4128c4:	in     eax,dx
  4128c5:	dec    ebp
  4128c6:	ds sahf 
  4128c8:	inc    eax
  4128c9:	(bad)
  4128cc:	rcr    BYTE PTR [eax-0x326bdae2],1
  4128d2:	out    dx,eax
  4128d3:	rol    BYTE PTR [edi],cl
  4128d5:	sub    al,0x74
  4128d7:	aaa    
  4128d8:	idiv   DWORD PTR [ebx+ecx*4+0x43]
  4128dc:	cmp    ebp,DWORD PTR [esi]
  4128de:	cdq    
  4128df:	aas    
  4128e0:	mov    eax,ds:0xaea606af
  4128e5:	mov    ah,0xc6
  4128e7:	jbe    0x412905
  4128e9:	bound  edi,QWORD PTR [ebx+0x5f]
  4128ec:	int    0xf1
  4128ee:	ret    
  4128ef:	cmp    ecx,DWORD PTR [ebp-0x42]
  4128f2:	std    
  4128f3:	sub    ebx,0xfc67fd70
  4128f9:	push   ebp
  4128fa:	mov    cl,0xb
  4128fc:	xor    BYTE PTR [ebx],ah
  4128fe:	add    eax,0xc2350c66
  412903:	or     al,0xd7
  412905:	retf   
  412906:	add    BYTE PTR [edi+0x62d3f3b9],bl
  41290c:	push   cs
  41290d:	jnp    0x412950
  41290f:	test   bl,bl
  412911:	call   0x396afa45
  412916:	pop    edi
  412917:	in     eax,dx
  412918:	add    al,0xd5
  41291a:	mov    dl,0x7a
  41291c:	fcomp  st(7)
  41291e:	pusha  
  41291f:	retf   
  412920:	retf   0x29ba
  412923:	es inc esi
  412925:	add    ch,BYTE PTR [edi+0x7a071e2e]
  41292b:	xor    bl,BYTE PTR [edx]
  41292d:	xchg   ebx,eax
  41292e:	stc    
  41292f:	xor    al,BYTE PTR [ebp+0x74]
  412932:	push   0x936e88a0
  412937:	jle    0x4128f4
  412939:	out    dx,eax
  41293a:	mov    ch,0x4d
  41293c:	sub    al,BYTE PTR [ebp+esi*8-0x7675bc5f]
  412943:	mov    bh,0x1c
  412945:	jmp    0x1b2b2e81
  41294a:	cdq    
  41294b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41294c:	mov    DWORD PTR [edi+0x14],eax
  41294f:	dec    esp
  412950:	sub    DWORD PTR [ebx-0x44af00ef],eax
  412956:	cli    
  412957:	inc    ebx
  412958:	push   esi
  412959:	jo     0x412921
  41295b:	pop    esp
  41295c:	dec    ebx
  41295d:	jb     0x4128e8
  41295f:	hlt    
  412960:	and    BYTE PTR [eax],dl
  412962:	scas   al,BYTE PTR es:[edi]
  412963:	pusha  
  412964:	rcr    BYTE PTR [ecx-0x79e06cf0],1
  41296a:	loop   0x4128fe
  41296c:	arpl   WORD PTR [ebp+0x1f814f1e],dx
  412972:	loope  0x4129af
  412974:	or     edx,DWORD PTR [ecx+0x233b3672]
  41297a:	xchg   ch,al
  41297c:	pop    edi
  41297d:	mov    dl,0xc7
  41297f:	mov    ss,WORD PTR ds:0xf4c7af50
  412985:	pop    esp
  412986:	ins    BYTE PTR es:[edi],dx
  412987:	mov    cs:0x587f7db,al
  41298d:	xor    cl,BYTE PTR [esp+eiz*2+0x11]
  412991:	adc    eax,0xf1a3b9a3
  412996:	push   es
  412997:	or     BYTE PTR [ecx],0x68
  41299a:	push   cs
  41299b:	das    
  41299c:	scas   eax,DWORD PTR es:[edi]
  41299d:	(bad)  
  41299e:	mov    bl,0x5
  4129a0:	fucomp st(7)
  4129a2:	and    BYTE PTR [ebp-0x64],ah
  4129a5:	ret    
  4129a6:	xchg   ecx,eax
  4129a7:	out    dx,al
  4129a8:	jno    0x412931
  4129aa:	jp     0x4129e8
  4129ac:	or     ecx,DWORD PTR [ebp-0x4851eaa9]
  4129b2:	inc    eax
  4129b3:	and    al,0x5d
  4129b5:	lods   al,BYTE PTR ds:[esi]
  4129b6:	pop    edx
  4129b7:	ja     0x412a03
  4129b9:	inc    esi
  4129ba:	pop    edx
  4129bb:	repz or eax,0x65f02696
  4129c1:	icebp  
  4129c2:	add    BYTE PTR [esp-0x2ebbfcea],dh
  4129c9:	add    BYTE PTR [edx+0x318294dc],0xb8
  4129d0:	fisttp WORD PTR [ecx+0x3e93af33]
  4129d6:	mul    DWORD PTR [edi+0xc]
  4129d9:	jecxz  0x41299e
  4129db:	or     eax,0x3b64db0b
  4129e0:	sbb    dl,0x30
  4129e3:	in     al,dx
  4129e4:	shl    eax,cl
  4129e6:	pop    ss
  4129e7:	fidivr DWORD PTR [eax+0x54475ddd]
  4129ed:	jmp    0xa1be:0xbcb37902
  4129f4:	mov    al,0xca
  4129f6:	dec    esp
  4129f7:	push   0x3
  4129f9:	and    DWORD PTR [esi+edi*1],edi
  4129fc:	mov    ss,WORD PTR [edi+ebp*4]
  4129ff:	inc    esp
  412a00:	jl     0x412995
  412a02:	retf   0x9ce2
  412a05:	(bad)  
  412a06:	jmp    0x412a7b
  412a08:	inc    ebp
  412a09:	pop    eax
  412a0a:	mov    ah,al
  412a0c:	sbb    al,0xef
  412a0e:	cmp    bl,dh
  412a10:	cs adc al,0xb8
  412a13:	mov    ah,0xb6
  412a15:	xchg   bp,ax
  412a17:	retf   0xc13e
  412a1a:	add    al,0x6f
  412a1c:	mov    ds:0x40972557,eax
  412a21:	fwait
  412a22:	cdq    
  412a23:	add    eax,0x54da003
  412a28:	ret    0x9b6c
  412a2b:	xchg   edi,eax
  412a2c:	push   es
  412a2d:	sbb    bl,BYTE PTR [eax-0x3]
  412a30:	sub    DWORD PTR [edi+0x6a],ecx
  412a33:	cdq    
  412a34:	add    al,0xd3
  412a36:	mov    ah,0xf9
  412a38:	icebp  
  412a39:	pop    eax
  412a3a:	aaa    
  412a3b:	enter  0x93d4,0xfb
  412a3f:	in     al,dx
  412a40:	adc    al,0x1
  412a42:	adc    al,dl
  412a44:	scas   al,BYTE PTR es:[edi]
  412a45:	in     eax,dx
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	cwde   
  412a48:	push   edi
  412a49:	aas    
  412a4a:	mov    bl,BYTE PTR [ebx]
  412a4c:	sbb    ah,0x8c
  412a4f:	push   0x14
  412a51:	cwde   
  412a52:	inc    ebp
  412a53:	push   ss
  412a54:	cmp    BYTE PTR [ebx],bh
  412a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a57:	out    dx,al
  412a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a59:	mov    ebx,ebx
  412a5b:	ja     0x412a32
  412a5d:	aaa    
  412a5e:	test   esi,edi
  412a60:	sbb    ah,BYTE PTR [ebx+ecx*8]
  412a63:	push   ds
  412a64:	xchg   esp,eax
  412a65:	dec    ecx
  412a66:	push   es
  412a67:	and    BYTE PTR [edi+eax*8-0x2a],dl
  412a6b:	and    BYTE PTR [ebx+edi*8],bl
  412a6e:	xor    edi,esi
  412a70:	loope  0x4129f2
  412a72:	das    
  412a73:	adc    eax,0xc9e70c4b
  412a78:	push   0x28ae79de
  412a7d:	test   al,0x19
  412a7f:	lahf   
  412a80:	push   ecx
  412a81:	sub    BYTE PTR [ecx+0x6634b535],0xb2
  412a88:	jge    0x412aaf
  412a8a:	es stc 
  412a8c:	xor    DWORD PTR [edi],eax
  412a8e:	add    dh,BYTE PTR [esi]
  412a90:	jbe    0x412a8b
  412a92:	fdivr  DWORD PTR [ebp-0x8]
  412a95:	mov    esi,0x9b29d31d
  412a9a:	bnd ret 0xa1bf
  412a9e:	scas   eax,DWORD PTR es:[edi]
  412a9f:	pop    edx
  412aa0:	(bad)  
  412aa1:	hlt    
  412aa2:	in     al,0x32
  412aa4:	fucomp st(6)
  412aa6:	mov    DWORD PTR [ecx],esp
  412aa8:	or     al,0xcc
  412aaa:	cld    
  412aab:	test   al,0x61
  412aad:	in     eax,0x53
  412aaf:	mov    ds:0x1cd795f3,al
  412ab4:	jl     0x412a7b
  412ab6:	push   eax
  412ab7:	shl    dh,1
  412ab9:	jae    0x412a9d
  412abb:	rcr    esi,1
  412abd:	fcom   st(4)
  412ac0:	pop    ecx
  412ac1:	mov    esp,0xe42fdcf6
  412ac6:	sbb    al,0x6d
  412ac8:	sti    
  412ac9:	call   0xad7eca9b
  412ace:	sbb    BYTE PTR [ebx+0x7c],dh
  412ad1:	lea    edx,ds:0xa6284b75
  412ad7:	clc    
  412ad8:	jmp    0x3d6d:0xda31ab0b
  412adf:	fsubp  st(0),st
  412ae1:	je     0x412acf
  412ae3:	inc    ebp
  412ae4:	mov    ch,0x4e
  412ae6:	add    eax,0x9e04b2e9
  412aeb:	xchg   esp,eax
  412aec:	mov    ah,0xf
  412aee:	jbe    0x412ade
  412af0:	(bad)  
  412af1:	push   esp
  412af3:	lods   al,BYTE PTR ds:[esi]
  412af4:	into   
  412af5:	addr16 adc al,0x9b
  412af8:	stc    
  412af9:	jmp    0x67b7e4c
  412afe:	ret    
  412aff:	xor    al,BYTE PTR [ecx+0x76f7a95c]
  412b05:	out    dx,al
  412b06:	shr    ch,0x54
  412b09:	imul   ebx,DWORD PTR [esi-0x6b],0x5
  412b0d:	sbb    ecx,ebx
  412b0f:	je     0x412b7e
  412b11:	pop    edi
  412b12:	cwde   
  412b13:	push   ebx
  412b14:	pusha  
  412b15:	xchg   esi,eax
  412b16:	mov    bh,0x85
  412b18:	xchg   BYTE PTR [ecx],bh
  412b1a:	adc    eax,0x4214f4f3
  412b1f:	loopne 0x412b3f
  412b21:	xor    al,0x74
  412b23:	(bad)  
  412b24:	jg     0x412b40
  412b26:	inc    esp
  412b27:	and    eax,DWORD PTR [edx+ebx*8+0x62910970]
  412b2e:	mov    ds:0x5602eb21,eax
  412b33:	sub    al,al
  412b35:	xlat   BYTE PTR ds:[ebx]
  412b36:	or     ebp,esi
  412b38:	xor    BYTE PTR [esi+esi*1-0x16],bh
  412b3c:	ror    DWORD PTR [ecx-0x4899f5ea],0x34
  412b43:	cdq    
  412b44:	out    0x8f,eax
  412b46:	stc    
  412b47:	mov    DWORD PTR [eax-0x2df7bbf8],ebx
  412b4d:	add    BYTE PTR [eax+0x6d],dh
  412b50:	test   al,0x50
  412b52:	out    0x1,al
  412b54:	push   ecx
  412b55:	cmp    esi,DWORD PTR [eax]
  412b57:	jp     0x412b0d
  412b59:	push   edx
  412b5a:	ja     0x412b84
  412b5c:	cmp    al,0xd1
  412b5e:	int3   
  412b5f:	mov    eax,gs
  412b61:	ds pop esi
  412b63:	inc    ecx
  412b64:	sub    eax,0x2c342822
  412b69:	push   edx
  412b6a:	inc    edi
  412b6b:	bound  esp,QWORD PTR [edx]
  412b6d:	xchg   BYTE PTR [edx-0x18],ch
  412b70:	dec    edi
  412b71:	cld    
  412b72:	inc    esp
  412b73:	pop    esi
  412b74:	(bad)  
  412b76:	mov    edi,0x837cbe2e
  412b7b:	(bad)  
  412b7c:	push   0xeb3076cf
  412b81:	jno    0x412bfe
  412b83:	pop    ecx
  412b84:	fisubr DWORD PTR [esi-0x49]
  412b87:	jbe    0x412b0c
  412b89:	cli    
  412b8a:	std    
  412b8b:	fisttp DWORD PTR [ecx+esi*4-0x21]
  412b8f:	dec    esp
  412b90:	icebp  
  412b91:	push   0xffffff84
  412b93:	repz xor BYTE PTR [edi],ch
  412b96:	pop    esp
  412b97:	jl     0x412be1
  412b99:	bnd call 0x9f338952
  412b9f:	pop    esp
  412ba0:	cs ss adc eax,0x2f800679
  412ba7:	jns    0x412c1c
  412ba9:	push   cs
  412baa:	in     eax,dx
  412bab:	mov    cl,0xea
  412bad:	push   0xc69f3496
  412bb2:	jp     0x412bd4
  412bb4:	dec    DWORD PTR [ecx-0x1f]
  412bb7:	pop    esp
  412bb8:	das    
  412bb9:	adc    al,0x22
  412bbb:	(bad)  
  412bbc:	sbb    eax,0x354b2aa8
  412bc1:	aaa    
  412bc2:	and    BYTE PTR [ebp-0x60],dh
  412bc5:	mov    dh,0x86
  412bc7:	or     eax,0xc676df24
  412bcc:	enter  0x24d7,0x7d
  412bd0:	push   edx
  412bd1:	je     0x412b64
  412bd3:	mov    al,0x88
  412bd5:	add    al,0xa7
  412bd7:	adc    bh,BYTE PTR [esi+0xe]
  412bda:	nop
  412bdb:	mov    ebx,0x1620d334
  412be0:	ficom  DWORD PTR [edi]
  412be2:	jns    0x412beb
  412be4:	cmp    BYTE PTR [edx],dl
  412be6:	jg     0x412b8f
  412be8:	imul   BYTE PTR [esi+ebp*1]
  412beb:	sub    al,0x2f
  412bed:	neg    BYTE PTR [ebp+eiz*4-0x230e806b]
  412bf4:	scas   al,BYTE PTR es:[edi]
  412bf5:	adc    BYTE PTR [ecx+0x12435a62],0x40
  412bfc:	jp     0x412b9f
  412bfe:	retf   
  412bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c00:	or     bl,ah
  412c02:	sbb    DWORD PTR [esi-0x1],edi
  412c05:	in     al,0xc4
  412c07:	(bad)  
  412c08:	jnp    0x412beb
  412c0a:	dec    esi
  412c0b:	jae    0x412ba0
  412c0d:	inc    esi
  412c0e:	dec    ebp
  412c0f:	sbb    al,BYTE PTR [edi+0x56]
  412c12:	cs xchg edx,eax
  412c14:	(bad)  
  412c15:	sub    al,0x22
  412c17:	or     eax,0x5f6f186a
  412c1c:	test   esi,ecx
  412c1e:	and    al,0xbd
  412c20:	mov    ds:0xa55b7709,al
  412c25:	int3   
  412c26:	cmp    cl,BYTE PTR [edi+0x79]
  412c29:	mov    eax,0x3c826860
  412c2e:	xchg   cl,bl
  412c30:	adc    BYTE PTR [eax+eax*2],ah
  412c33:	aas    
  412c34:	xor    al,0xb8
  412c36:	inc    esp
  412c37:	xor    al,0xb
  412c39:	dec    ebx
  412c3a:	lahf   
  412c3b:	jg     0x412c03
  412c3d:	mov    edi,0x2d7090b1
  412c42:	cdq    
  412c43:	push   cs
  412c44:	retf   
  412c45:	xor    DWORD PTR ds:0x82c4b1e6,edi
  412c4b:	pop    ebp
  412c4c:	or     eax,0x4cf798b3
  412c51:	out    dx,al
  412c52:	adc    dl,dl
  412c54:	jb     0x412c0a
  412c56:	js     0x412c03
  412c58:	and    ebx,ecx
  412c5a:	sbb    al,0x2b
  412c5c:	out    0xae,eax
  412c5e:	dec    ecx
  412c5f:	neg    DWORD PTR [eax]
  412c61:	jae    0x412cc1
  412c63:	sbb    BYTE PTR [eax],bh
  412c65:	push   0x4bf4fb48
  412c6a:	add    eax,0xb45d5b42
  412c6f:	jmp    0x412ccb
  412c71:	test   DWORD PTR [esi+0x1f],0x95d535f0
  412c78:	pusha  
  412c79:	xlat   BYTE PTR ds:[ebx]
  412c7a:	les    ebx,FWORD PTR [esi+0x72]
  412c7d:	repz rol BYTE PTR [edi-0x1764074d],cl
  412c84:	push   esi
  412c85:	push   0x54
  412c87:	xchg   ebp,eax
  412c88:	sub    eax,edx
  412c8a:	mov    ecx,0x44dfe90c
  412c8f:	dec    ecx
  412c90:	lds    ebx,FWORD PTR [edx-0x76ce17d9]
  412c96:	loopne 0x412c8e
  412c98:	leave  
  412c99:	aas    
  412c9a:	jnp    0x412c8d
  412c9c:	jmp    0x3420e194
  412ca1:	jge    0x412c80
  412ca3:	imul   edx,DWORD PTR [ebx],0x969665c7
  412ca9:	pop    edi
  412caa:	pusha  
  412cab:	mov    ecx,0xe10279f4
  412cb0:	mov    esp,DWORD PTR [edi-0x26]
  412cb3:	(bad)  
  412cb4:	adc    eax,0xb89d64c1
  412cb9:	pop    ds
  412cba:	xor    ch,dl
  412cbc:	fwait
  412cbd:	adc    ebp,DWORD PTR [bx+di-0x46f9]
  412cc2:	push   di
  412cc4:	pop    esi
  412cc5:	idiv   dh
  412cc7:	xor    bh,BYTE PTR [edi]
  412cc9:	mov    dl,0xe
  412ccb:	stc    
  412ccc:	arpl   WORD PTR [ebp+0x2419a435],ax
  412cd2:	gs scas al,BYTE PTR es:[edi]
  412cd4:	xor    eax,0xe22314fa
  412cd9:	or     al,0x5
  412cdb:	cdq    
  412cdc:	clc    
  412cdd:	mov    WORD PTR [esi+0x0],ds
  412ce0:	stos   DWORD PTR es:[edi],eax
  412ce1:	mov    dh,0xb0
  412ce3:	dec    esp
  412ce4:	mov    cl,0x7b
  412ce6:	sti    
  412ce7:	imul   ebp,DWORD PTR [esi-0x61],0x68053d91
  412cee:	arpl   WORD PTR [edi-0x5c],bx
  412cf1:	xor    ah,bh
  412cf3:	gs jp  0x412d04
  412cf6:	xchg   ecx,eax
  412cf7:	push   0x96e5b0ff
  412cfc:	and    eax,0x28441e42
  412d01:	jne    0x412cb9
  412d03:	mov    esp,0x238d3fb2
  412d08:	sub    DWORD PTR [esi],0x32
  412d0b:	(bad)  [edi-0x1bc09449]
  412d11:	stos   BYTE PTR es:[edi],al
  412d12:	xlat   BYTE PTR ds:[ebx]
  412d13:	repz jo 0x412cf2
  412d16:	pop    es
  412d17:	xor    al,0xe1
  412d19:	mov    edi,0x42da967d
  412d1e:	out    0x2d,eax
  412d20:	fadd   st,st(2)
  412d22:	jl     0x412cf1
  412d24:	lods   eax,DWORD PTR ds:[esi]
  412d25:	mov    esp,0x6d6977b9
  412d2a:	push   ss
  412d2b:	sbb    DWORD PTR [ebx],eax
  412d2d:	data16 icebp 
  412d2f:	cmp    edx,esi
  412d31:	cmp    al,0xbe
  412d33:	and    ebx,edx
  412d35:	cmp    eax,0x46c70d0b
  412d3a:	sub    cl,bl
  412d3c:	or     ah,BYTE PTR [ebp+0x2a6abb3]
  412d42:	into   
  412d43:	pop    edi
  412d44:	jo     0x412dbe
  412d46:	jne    0x412ceb
  412d48:	add    DWORD PTR [esp+ebx*4+0x37b21120],esp
  412d4f:	repnz rcl ah,cl
  412d52:	xchg   esp,eax
  412d53:	pop    ds
  412d54:	inc    ebx
  412d55:	push   esi
  412d56:	push   ebx
  412d57:	pop    ss
  412d58:	push   ds
  412d59:	cmp    BYTE PTR [esi+0x34],dh
  412d5c:	(bad)  
  412d5d:	push   ecx
  412d5e:	cmp    edx,ecx
  412d60:	sbb    eax,0x4250a17
  412d65:	repnz test ah,bl
  412d68:	lods   eax,DWORD PTR ds:[esi]
  412d69:	inc    ecx
  412d6a:	mov    ds:0x8d9d6a1f,eax
  412d6f:	xchg   ecx,eax
  412d70:	push   edi
  412d71:	mov    fs,WORD PTR [ebp+eiz*4+0x68e57a5d]
  412d78:	and    al,0xd0
  412d7a:	adc    DWORD PTR [ebp+0x60],edx
  412d7d:	dec    edi
  412d7e:	lea    edi,cs:[edx]
  412d81:	add    al,0xc
  412d83:	adc    eax,0x93ef7d3d
  412d88:	popa   
  412d89:	sbb    bl,BYTE PTR [eax-0x12]
  412d8c:	mov    ecx,edi
  412d8e:	bnd jmp 0x412d93
  412d91:	into   
  412d92:	sbb    eax,0x67c5f1ef
  412d97:	iret   
  412d98:	jmp    0x802ffdb9
  412d9d:	in     eax,0xfe
  412d9f:	inc    esi
  412da0:	lods   eax,DWORD PTR ds:[esi]
  412da1:	mov    ebx,0xb280e8fb
  412da6:	imul   ecx,DWORD PTR [ebp+0x489a75e7],0x32e3a707
  412db0:	or     DWORD PTR [ecx+0x27],ebx
  412db3:	adc    ah,BYTE PTR [esi-0x2b]
  412db6:	dec    ebx
  412db7:	cmp    bh,BYTE PTR [ecx+0x532b46b4]
  412dbd:	sbb    BYTE PTR [esi-0x34df0317],0x40
  412dc4:	out    0x0,al
  412dc6:	add    BYTE PTR es:[esi+0x72],bh
  412dca:	pop    edx
  412dcb:	xor    DWORD PTR [edi+0x3c],0xed28f182
  412dd2:	jne    0x412e41
  412dd4:	pop    ds
  412dd5:	cld    
  412dd6:	pop    ebp
  412dd7:	loopne 0x412e30
  412dd9:	sahf   
  412dda:	and    eax,0x42bd206e
  412ddf:	pusha  
  412de0:	cmc    
  412de1:	daa    
  412de2:	add    ecx,DWORD PTR [ecx-0x77]
  412de5:	and    eax,0x809f2836
  412dea:	sbb    al,0x82
  412dec:	sbb    eax,0x1ae5cbb6
  412df2:	pop    edx
  412df3:	movd   ebx,mm3
  412df6:	push   ecx
  412df7:	(bad)  
  412df8:	icebp  
  412df9:	sub    al,0xf7
  412dfb:	lods   eax,DWORD PTR ds:[esi]
  412dfc:	xchg   edi,eax
  412dfd:	in     eax,0x57
  412dff:	cmc    
  412e00:	hlt    
  412e01:	jb     0x412e31
  412e03:	clc    
  412e04:	pop    es
  412e05:	push   ebp
  412e06:	inc    ebp
  412e07:	sbb    al,0x85
  412e09:	mov    al,0x6c
  412e0b:	xchg   esi,eax
  412e0c:	dec    ebp
  412e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e0e:	(bad)  
  412e0f:	in     al,0x45
  412e11:	leave  
  412e12:	sbb    esp,DWORD PTR ds:0xf91931d0
  412e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e19:	enter  0xa7ac,0x39
  412e1d:	in     al,dx
  412e1e:	in     al,dx
  412e1f:	hlt    
  412e20:	lods   eax,DWORD PTR ds:[esi]
  412e21:	jp     0x412e89
  412e23:	xchg   esi,eax
  412e24:	out    0xc,eax
  412e26:	mov    eax,0x22c31445
  412e2b:	jge    0x412e92
  412e2d:	scas   al,BYTE PTR es:[edi]
  412e2e:	sbb    eax,0xb285d1ba
  412e33:	inc    esp
  412e34:	xlat   BYTE PTR ds:[ebx]
  412e35:	sub    esi,ecx
  412e37:	sbb    ecx,esi
  412e39:	cmp    eax,0x1bdcc8a7
  412e3e:	mov    al,0x66
  412e40:	inc    esp
  412e41:	out    0xf4,eax
  412e43:	je     0x412e2a
  412e45:	or     cl,BYTE PTR [edx-0x78]
  412e48:	sub    DWORD PTR ds:0x86e992b6,esp
  412e4e:	inc    esi
  412e4f:	imul   esi
  412e51:	loopne 0x412ea1
  412e53:	clc    
  412e54:	in     eax,0x20
  412e56:	aam    0xb6
  412e58:	mov    ebp,0x90fc3e29
  412e5d:	inc    ecx
  412e5e:	nop
  412e5f:	mov    bh,0xfb
  412e61:	xor    BYTE PTR [esi-0x4d],ah
  412e64:	(bad)  
  412e65:	std    
  412e66:	icebp  
  412e67:	enter  0x963f,0xb7
  412e6b:	punpckldq mm1,DWORD PTR [esi+ebp*1+0x61921749]
  412e73:	or     edi,DWORD PTR [eax+0x7]
  412e76:	ficomp WORD PTR [eax]
  412e78:	es adc eax,0xd671a666
  412e7e:	scas   al,BYTE PTR es:[edi]
  412e7f:	push   eax
  412e80:	add    al,0xaf
  412e82:	test   DWORD PTR [edx-0x61],esi
  412e85:	lea    ebp,[edx+edi*2]
  412e88:	out    0xeb,eax
  412e8a:	cmp    ah,BYTE PTR ds:0x1ae934e4
  412e90:	and    al,0xc5
  412e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e93:	add    al,0x7f
  412e95:	jnp    0x412ed8
  412e97:	push   0x746297a1
  412e9c:	xchg   ebx,eax
  412e9d:	mov    WORD PTR [ebx],?
  412e9f:	and    DWORD PTR [esi+0x23],ecx
  412ea2:	test   al,0x43
  412ea4:	ret    0x1954
  412ea7:	pusha  
  412ea8:	(bad)  
  412ea9:	fldpi  
  412eab:	into   
  412eac:	inc    ebp
  412ead:	pop    ss
  412eae:	xchg   BYTE PTR [eax],ch
  412eb0:	mov    BYTE PTR [edi-0x53],ch
  412eb3:	fcmovnbe st,st(7)
  412eb5:	add    al,0xaf
  412eb7:	aad    0x2c
  412eb9:	dec    ebx
  412eba:	fiadd  WORD PTR [ebx+0x70b8c0a1]
  412ec0:	mov    WORD PTR [ebx],?
  412ec2:	mov    bh,BYTE PTR ds:0x1afb5afc
  412ec8:	dec    edx
  412ec9:	sub    ecx,DWORD PTR [ecx]
  412ecb:	xor    BYTE PTR [ebx],ah
  412ecd:	mov    ecx,ebx
  412ecf:	mov    al,0xa6
  412ed1:	adc    al,0x83
  412ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ed4:	lods   eax,DWORD PTR ds:[esi]
  412ed5:	js     0x412ec6
  412ed7:	lea    edi,[ecx]
  412ed9:	sub    al,0x65
  412edb:	out    0x99,eax
  412edd:	rcr    ecx,1
  412edf:	sub    DWORD PTR [eax+0x7506d231],esp
  412ee5:	pop    edi
  412ee6:	dec    ebx
  412ee7:	jns    0x412f24
  412ee9:	mov    edx,0x3b2560a4
  412eee:	popf   
  412eef:	mov    al,0x3d
  412ef1:	out    0x5a,al
  412ef3:	push   ecx
  412ef4:	dec    eax
  412ef5:	jno    0x412f4e
  412ef7:	cmp    DWORD PTR [eax+0x32],eax
  412efa:	lea    esi,[ebp+esi*4+0x3]
  412efe:	dec    ebx
  412eff:	inc    esi
  412f00:	or     eax,DWORD PTR [edi]
  412f02:	mov    ecx,DWORD PTR [eax+edx*1-0x7f]
  412f06:	adc    al,0xf
  412f08:	cli    
  412f09:	adc    ch,BYTE PTR [ebx-0x71]
  412f0c:	cmp    edx,0xffffff8b
  412f0f:	(bad)  
  412f10:	sahf   
  412f11:	and    edx,DWORD PTR [eax-0xc]
  412f14:	test   DWORD PTR [edx-0x2],esp
  412f17:	(bad)
  412f1a:	not    DWORD PTR [ebp+0x5b]
  412f1d:	aam    0x4
  412f1f:	jp     0x412eb3
  412f21:	jmp    0x78cd:0xe9f3ae50
  412f28:	mov    dh,0x10
  412f2a:	in     al,dx
  412f2b:	push   edx
  412f2c:	repz jge 0x412f51
  412f2f:	outs   dx,BYTE PTR ds:[esi]
  412f30:	dec    eax
  412f31:	pop    es
  412f32:	fild   QWORD PTR [eax]
  412f34:	pop    eax
  412f35:	gs or  dh,al
  412f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f39:	(bad)  
  412f3a:	jae    0x412f7b
  412f3c:	xchg   esp,eax
  412f3d:	call   0x62b608fa
  412f42:	cmp    ah,dh
  412f44:	lods   eax,DWORD PTR ds:[esi]
  412f45:	ins    BYTE PTR es:[edi],dx
  412f46:	xchg   edx,eax
  412f47:	pop    edx
  412f48:	sbb    esi,DWORD PTR [edx+0x5a]
  412f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f4c:	es push edi
  412f4e:	in     al,dx
  412f4f:	je     0x412fcf
  412f51:	and    eax,esi
  412f53:	pop    esi
  412f54:	(bad)  
  412f55:	(bad)  
  412f56:	lahf   
  412f57:	push   cs
  412f58:	pop    ecx
  412f59:	jge    0x412f0b
  412f5b:	xchg   esp,eax
  412f5c:	and    bh,ch
  412f5e:	inc    edx
  412f5f:	dec    edi
  412f60:	jnp    0x412fcf
  412f62:	pop    ebx
  412f63:	sar    BYTE PTR [eax],cl
  412f65:	xchg   ebp,eax
  412f66:	dec    eax
  412f67:	add    eax,0x761f4449
  412f6c:	push   ss
  412f6d:	out    0xac,eax
  412f6f:	and    dl,dh
  412f71:	rep lods eax,DWORD PTR ds:[esi]
  412f73:	retf   
  412f74:	stc    
  412f75:	aam    0x3d
  412f77:	lods   eax,DWORD PTR ds:[esi]
  412f78:	test   DWORD PTR [ecx+0x2518ae5d],eax
  412f7e:	xlat   BYTE PTR ds:[ebx]
  412f7f:	int3   
  412f80:	mov    esi,0x34bc632d
  412f85:	pop    edx
  412f86:	fstp   QWORD PTR [edx+edi*1-0x54]
  412f8a:	fcom   st(6)
  412f8c:	add    DWORD PTR [ecx+0x2a],ecx
  412f8f:	lds    esi,FWORD PTR [edi]
  412f91:	xor    al,0x10
  412f93:	xchg   ebp,eax
  412f94:	push   ebp
  412f95:	adc    al,0xd1
  412f97:	xchg   edx,eax
  412f98:	mov    BYTE PTR [ecx],al
  412f9a:	mov    edx,0xe1696d70
  412f9f:	add    edi,DWORD PTR [ebp+0x2c180354]
  412fa5:	jo     0x412fde
  412fa7:	aam    0x91
  412fa9:	fwait
  412faa:	dec    edi
  412fab:	push   edi
  412fac:	cld    
  412fad:	popa   
  412fae:	add    ah,BYTE PTR [eax]
  412fb0:	or     DWORD PTR [ebp+0x49baf72a],esi
  412fb6:	adc    DWORD PTR [bx+si-0x59],ebp
  412fba:	lahf   
  412fbb:	loope  0x413011
  412fbd:	in     al,0xa5
  412fbf:	mov    bh,0x5c
  412fc1:	rcr    DWORD PTR [edi+ecx*4+0x52d0f7f5],1
  412fc8:	mov    esp,0xa9978e6d
  412fcd:	add    al,0x7f
  412fcf:	mov    al,ds:0x1e0939b0
  412fd4:	cmp    DWORD PTR [eax+0x5e0880e6],ebx
  412fda:	mov    bh,0x27
  412fdc:	aas    
  412fdd:	in     al,0x6a
  412fdf:	xchg   ebp,eax
  412fe0:	lods   eax,DWORD PTR ds:[esi]
  412fe1:	push   ebx
  412fe2:	ret    0x5e6f
  412fe5:	mul    BYTE PTR [edx+0x3754f41f]
  412feb:	and    BYTE PTR [ebx-0x12],bh
  412fee:	inc    edi
  412fef:	dec    eax
  412ff0:	jb     0x412fa6
  412ff2:	mov    ecx,0x6478b7c8
  412ff7:	mov    al,0x94
  412ff9:	ds loopne 0x413010
  412ffc:	cli    
  412ffd:	fisttp WORD PTR [eax+0x43]
  413000:	jge    0x413014
  413002:	push   ecx
  413003:	mov    ch,0xe6
  413005:	mov    bl,0xc0
  413007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413008:	ret    0xfab2
  41300b:	xlat   BYTE PTR ds:[ebx]
  41300c:	mov    ah,0x43
  41300e:	push   0x27
  413010:	lahf   
  413011:	ds stc 
  413013:	xchg   dl,dh
  413015:	rcl    DWORD PTR [esi],cl
  413017:	jae    0x412feb
  413019:	pop    ss
  41301a:	cli    
  41301b:	mov    esp,0x3b06dc4d
  413020:	outs   dx,BYTE PTR ds:[esi]
  413021:	fisub  DWORD PTR [eax+edi*8-0x3586ef8c]
  413028:	or     dh,BYTE PTR [esi*8-0xd5ae723]
  41302f:	imul   ecx,DWORD PTR [ecx+0x72],0xffffff87
  413033:	dec    ecx
  413034:	sbb    eax,0x6e3aca5a
  413039:	xchg   edi,eax
  41303a:	iret   
  41303b:	xlat   BYTE PTR ds:[ebx]
  41303c:	fidiv  WORD PTR ds:0x8df84e20
  413042:	rcr    DWORD PTR [esi+0x6],0x67
  413046:	xor    edx,ebx
  413048:	push   eax
  413049:	mov    ch,0xba
  41304b:	in     eax,0x49
  41304d:	lods   al,BYTE PTR ds:[esi]
  41304e:	sbb    dl,BYTE PTR [edx+0x22]
  413051:	sti    
  413052:	mov    bl,BYTE PTR [ecx-0x63236c8a]
  413058:	ror    DWORD PTR [ebp+ebx*4+0x5e],0xed
  41305d:	and    edx,DWORD PTR [edi]
  41305f:	out    0x22,al
  413061:	stos   BYTE PTR es:[edi],al
  413062:	xchg   esi,eax
  413063:	cli    
  413064:	xchg   BYTE PTR [edx-0x31],dl
  413067:	cmp    ebp,DWORD PTR [esi+0x76f3f048]
  41306d:	cmp    eax,DWORD PTR [ecx]
  41306f:	outs   dx,DWORD PTR ds:[esi]
  413070:	div    edx
  413072:	outs   dx,BYTE PTR ds:[esi]
  413073:	dec    ebx
  413074:	stc    
  413075:	leave  
  413076:	imul   edx,DWORD PTR [edx-0x12],0x48
  41307a:	(bad)  
  41307b:	or     BYTE PTR [ebx+esi*8],ah
  41307e:	xor    DWORD PTR [edi-0x1283cd94],esp
  413084:	imul   edi,DWORD PTR [edi+ecx*2],0xffffffaa
  413088:	(bad)  
  413089:	ins    BYTE PTR es:[edi],dx
  41308a:	bnd jmp 0x413049
  41308d:	xor    BYTE PTR [esi+0x38],ah
  413090:	(bad)
  413093:	mov    bh,0x62
  413095:	sub    BYTE PTR [edx+0x44],cl
  413098:	cmp    al,0x92
  41309a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41309b:	mov    dh,0xa6
  41309d:	xor    dl,dl
  41309f:	bound  eax,QWORD PTR [edx-0x1d]
  4130a2:	rol    DWORD PTR [ecx+edi*1+0x383a470a],0x68
  4130aa:	xchg   ebp,eax
  4130ab:	jns    0x413061
  4130ad:	adc    al,bl
  4130af:	jge    0x4130e0
  4130b1:	xor    BYTE PTR [edx-0xf229d75],0xe5
  4130b8:	sbb    edi,edi
  4130ba:	push   es
  4130bb:	ror    BYTE PTR [eax-0x7cf8b75],0x4c
  4130c2:	cmp    eax,0x4682c777
  4130c7:	mov    dl,0x77
  4130c9:	push   ecx
  4130ca:	mov    DWORD PTR [ecx],0x71ab6ce0
  4130d0:	test   eax,0xf4cca2b9
  4130d5:	int3   
  4130d6:	pop    eax
  4130d7:	and    eax,0x2e894a6f
  4130dc:	push   esi
  4130dd:	into   
  4130de:	sub    eax,0xcb32a735
  4130e3:	jne    0x413084
  4130e5:	dec    ebp
  4130e6:	jnp    0x413153
  4130e8:	push   cs
  4130e9:	lds    esi,FWORD PTR [ebx]
  4130eb:	(bad)  
  4130ec:	xlat   BYTE PTR ds:[ebx]
  4130ed:	push   eax
  4130ee:	add    eax,DWORD PTR [edi-0x41]
  4130f1:	mov    esp,DWORD PTR [eax+0x59]
  4130f4:	push   edx
  4130f5:	les    edi,FWORD PTR cs:[eax]
  4130f8:	shl    BYTE PTR [ecx-0x71],cl
  4130fb:	cmp    bh,bl
  4130fd:	addr16 and eax,0xb376db7c
  413103:	jbe    0x4130b1
  413105:	sti    
  413106:	pop    eax
  413107:	adc    edi,DWORD PTR [ebx]
  413109:	mov    ch,0x1f
  41310b:	lods   eax,DWORD PTR ds:[esi]
  41310c:	cs mov bh,0x90
  41310f:	sti    
  413110:	or     ecx,esp
  413112:	das    
  413113:	rcr    BYTE PTR [esi+0x66a077cc],1
  413119:	dec    edi
  41311a:	std    
  41311b:	mov    eax,0x24192a10
  413120:	retf   0x9442
  413123:	(bad)  
  413125:	mov    WORD PTR [esi-0x16],cs
  413128:	jge    0x41316f
  41312a:	mov    eax,ds:0x88b91e6c
  41312f:	aaa    
  413130:	adc    edx,DWORD PTR [esi-0x2f]
  413133:	sysret 
  413135:	aad    0xe8
  413137:	mov    ah,0x48
  413139:	test   esi,0x473b4e0f
  41313f:	jp     0x4130d0
  413141:	jg     0x41319c
  413143:	mov    bl,0x0
  413145:	dec    esi
  413146:	inc    edx
  413147:	fisubr DWORD PTR ds:0xd0f2fe4b
  41314d:	jb     0x413107
  41314f:	jl     0x4130f9
  413151:	rol    DWORD PTR [edi+0xe8b2710],cl
  413157:	repnz mov esi,0x36393c9
  41315d:	lahf   
  41315e:	lods   al,BYTE PTR ds:[esi]
  41315f:	dec    ebx
  413160:	fld    QWORD PTR [edi+ebx*1]
  413163:	fstp   TBYTE PTR [eax+eax*2+0x2b]
  413167:	add    edi,ebp
  413169:	bound  edx,QWORD PTR [esp+esi*4+0x37c6a481]
  413170:	(bad)  
  413171:	and    al,0x83
  413173:	in     al,dx
  413174:	sbb    DWORD PTR [eax+0x40],ecx
  413177:	loopne 0x413164
  413179:	test   DWORD PTR [ebx],0x9fc2190
  41317f:	dec    ebx
  413180:	add    ebx,eax
  413182:	stos   DWORD PTR es:[edi],eax
  413183:	pop    ds
  413184:	mov    esp,0x387a9354
  413189:	add    eax,0x9036998d
  41318e:	hlt    
  41318f:	neg    DWORD PTR [esi]
  413191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413192:	mov    ebp,0xa79724d4
  413197:	cmp    edi,DWORD PTR [eax+0x24a1dae3]
  41319d:	fld    st(0)
  41319f:	fld    QWORD PTR [ecx]
  4131a1:	lods   eax,DWORD PTR ds:[esi]
  4131a2:	rol    DWORD PTR [eax+esi*8-0x1a],0xe8
  4131a7:	rcr    bh,0x93
  4131aa:	out    dx,al
  4131ab:	mov    ebp,0x5c6d628a
  4131b0:	loopne 0x41321c
  4131b2:	dec    ebp
  4131b3:	fcomp  QWORD PTR [edi+ebx*2-0xf]
  4131b7:	jb     0x4131a3
  4131b9:	test   BYTE PTR [ebp+0x4b],bh
  4131bc:	data16 sbb BYTE PTR [edx+0x4a],0x31
  4131c1:	cdq    
  4131c2:	imul   edi,DWORD PTR [ebx-0x5b],0x19d67c22
  4131c9:	cs pop edi
  4131cb:	xor    BYTE PTR [ecx],al
  4131cd:	loopne 0x4131cb
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	and    eax,0xa72722e
  4131d5:	jae    0x4131f8
  4131d7:	into   
  4131d8:	push   ebx
  4131d9:	bound  esp,QWORD PTR [esi-0x454cf1cc]
  4131df:	inc    edi
  4131e0:	imul   esi,DWORD PTR [eax],0xbbea623f
  4131e6:	mov    esi,0x893787ad
  4131eb:	out    dx,eax
  4131ec:	sbb    DWORD PTR [ebx-0x8933f46],ebp
  4131f2:	xchg   edi,eax
  4131f3:	add    DWORD PTR [esi+0x3f],ecx
  4131f6:	jp     0x413225
  4131f8:	cmp    ebp,ebx
  4131fa:	push   esp
  4131fb:	cmp    BYTE PTR [edx-0x48952c2],ah
  413201:	pop    ebp
  413202:	leave  
  413203:	fxch   st(7)
  413205:	frstor [edx-0x68]
  413208:	loope  0x413239
  41320a:	inc    eax
  41320b:	imul   esi,ecx,0xfffffff8
  41320e:	pop    es
  41320f:	gs test eax,0xe05e8332
  413215:	mov    esp,DWORD PTR [ecx+0x3a]
  413218:	ss pop eax
  41321a:	cdq    
  41321b:	js     0x41321f
  41321d:	adc    DWORD PTR [edx+0x5e77f0a],ebx
  413223:	jno    0x4131df
  413225:	sub    al,0xa
  413227:	pop    ebp
  413228:	mov    bl,0x5e
  41322a:	daa    
  41322b:	out    dx,eax
  41322c:	iret   
  41322d:	cld    
  41322e:	shl    BYTE PTR [ebp+0x4704af71],cl
  413234:	cmp    edi,DWORD PTR [ebx+0x5e]
  413237:	add    al,dl
  413239:	adc    eax,0xd2882788
  41323e:	push   ebp
  41323f:	es xchg edx,eax
  413241:	cdq    
  413242:	dec    eax
  413243:	cld    
  413244:	(bad)  
  413245:	sbb    eax,0x4a4b4aa3
  41324a:	sbb    BYTE PTR [ecx+ecx*4-0x41],dl
  41324e:	out    0xc,al
  413250:	sub    al,0xf4
  413252:	fild   WORD PTR [edi]
  413254:	mov    dh,0x78
  413256:	lea    edx,[esi]
  413258:	or     al,0x5f
  41325a:	dec    esp
  41325b:	add    BYTE PTR [edi-0x4f],bh
  41325e:	dec    edi
  41325f:	shl    BYTE PTR [edx+edi*8-0x17],1
  413263:	sub    esp,DWORD PTR [eax]
  413265:	push   0x14
  413267:	xchg   DWORD PTR [ebx-0x7e],esi
  41326a:	xchg   BYTE PTR [ecx-0x6c0650c7],dl
  413270:	sub    edx,DWORD PTR [edx+ebx*1-0x2b30d2fe]
  413277:	xchg   ebx,eax
  413278:	imul   esp,DWORD PTR [ebx+0x27],0xc91d3808
  41327f:	xchg   edx,eax
  413280:	cli    
  413281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413282:	les    ecx,FWORD PTR [edi]
  413284:	push   edi
  413285:	push   0x78eb2fa2
  41328a:	stc    
  41328b:	adc    bh,BYTE PTR [esi-0x54]
  41328e:	sbb    esp,ecx
  413290:	retf   
  413291:	out    0x29,eax
  413293:	je     0x41322b
  413295:	sbb    esp,DWORD PTR ss:[edi-0x80]
  413299:	retf   
  41329a:	mov    ds:0xf80e3977,eax
  41329f:	mov    esi,0x8788ea1c
  4132a4:	call   0x7381:0xcc82c90d
  4132ab:	dec    edx
  4132ac:	cmp    DWORD PTR [esi],ebx
  4132ae:	add    bl,BYTE PTR [esi+0x591ef13e]
  4132b4:	xchg   BYTE PTR [edx+0x45802275],dl
  4132ba:	push   0x21af2dea
  4132bf:	neg    DWORD PTR [esi]
  4132c1:	popa   
  4132c2:	div    BYTE PTR [esi-0x47]
  4132c5:	stos   DWORD PTR es:[edi],eax
  4132c6:	pop    esi
  4132c7:	lahf   
  4132c8:	jbe    0x41325a
  4132ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132cb:	jecxz  0x413335
  4132cd:	cs mov esi,0xacac1dfc
  4132d3:	out    dx,al
  4132d4:	and    al,0x63
  4132d6:	pop    DWORD PTR ds:0x23ecb36e
  4132dc:	cld    
  4132dd:	xor    edx,edi
  4132df:	out    dx,al
  4132e0:	mov    dh,0x29
  4132e2:	jns    0x4132bd
  4132e4:	ret    0xf633
  4132e7:	jmp    0xefd4:0x7651e52c
  4132ee:	jo     0x4132b9
  4132f0:	inc    ebx
  4132f1:	lds    esp,FWORD PTR [eax-0x5f941d8a]
  4132f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132f8:	sahf   
  4132f9:	dec    ebx
  4132fa:	loop   0x413288
  4132fc:	call   0xbaa7ec2e
  413301:	mov    ds:0xd03c139d,al
  413306:	sub    DWORD PTR [edi-0x110131f],0x5d
  41330d:	leave  
  41330e:	stc    
  41330f:	loop   0x4132d5
  413311:	cli    
  413312:	and    ebp,DWORD PTR ds:0x25a796af
  413318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413319:	push   ds
  41331a:	repz mov eax,ds:0xf001efdd
  413320:	xchg   ebp,eax
  413321:	xor    al,ah
  413323:	in     al,dx
  413324:	(bad)  [ebx-0x4c6ebefb]
  41332a:	not    BYTE PTR [esi+esi*1]
  41332d:	xor    DWORD PTR [eax],ebx
  41332f:	or     BYTE PTR fs:[edi+0x35a08526],dl
  413336:	inc    ebx
  413337:	sub    esi,DWORD PTR [esi+edi*4]
  41333a:	mov    esi,0xa3a58a6d
  41333f:	int    0x45
  413341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413342:	mov    al,ds:0x6d1b672f
  413347:	into   
  413348:	xor    DWORD PTR [edi],esp
  41334a:	mov    eax,0x5502e884
  41334f:	jle    0x413343
  413351:	mov    ecx,0x73f25548
  413356:	inc    esi
  413357:	cdq    
  413358:	out    0xf5,al
  41335a:	inc    edx
  41335b:	inc    esi
  41335c:	sbb    DWORD PTR [edx],eax
  41335e:	call   0x5bc1:0x71bf5428
  413365:	pop    es
  413366:	and    eax,0xd6c1019c
  41336b:	dec    esi
  41336c:	pop    ebp
  41336d:	test   ebp,edi
  41336f:	in     eax,dx
  413370:	inc    ebp
  413371:	popa   
  413372:	pop    ecx
  413373:	in     eax,0xce
  413375:	stc    
  413376:	pop    edx
  413377:	push   ss
  413378:	and    al,0xa5
  41337a:	sub    eax,edx
  41337c:	pop    ss
  41337d:	jmp    0x94663c7b
  413382:	outs   dx,DWORD PTR ds:[esi]
  413383:	cmp    eax,0x1c7a78d9
  413388:	cmp    al,0x73
  41338a:	les    edx,FWORD PTR ds:0x3fdf7523
  413390:	add    BYTE PTR [ebx],cl
  413392:	inc    ebx
  413393:	and    BYTE PTR [edi-0x1a5e5c07],cl
  413399:	push   ebp
  41339a:	lods   eax,DWORD PTR ds:[esi]
  41339b:	mov    DWORD PTR [ebx],ebp
  41339d:	mov    al,ds:0xbc1024ae
  4133a2:	jae    0x4133ae
  4133a4:	xchg   ecx,eax
  4133a5:	data16 stos WORD PTR es:[edi],ax
  4133a8:	test   eax,0xe460e9c2
  4133ad:	mov    ds:0xcc7f5f65,eax
  4133b2:	loope  0x4133ce
  4133b4:	test   eax,0x52de6ab
  4133b9:	stos   DWORD PTR es:[edi],eax
  4133ba:	shl    DWORD PTR [ebp+0x62],0x11
  4133be:	hlt    
  4133bf:	jp     0x41343c
  4133c1:	retf   
  4133c2:	inc    ebp
  4133c3:	xor    eax,0xcb590743
  4133c8:	mov    ecx,0xfaec86be
  4133cd:	lods   eax,DWORD PTR ds:[esi]
  4133ce:	mov    ds:0xd9df5484,al
  4133d3:	mov    al,0x9c
  4133d5:	rcl    DWORD PTR [edi-0x62cb4dfd],1
  4133db:	inc    ebx
  4133dc:	push   ebp
  4133dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133de:	mov    ah,0x51
  4133e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133e1:	push   edi
  4133e2:	mov    ebx,0x7a29731d
  4133e7:	js     0x413425
  4133e9:	movsx  eax,di
  4133ec:	jbe    0x413468
  4133ee:	sbb    DWORD PTR [edx+0x49a99bab],ebp
  4133f4:	call   0x1c3c851c
  4133f9:	push   cs
  4133fa:	add    al,0xac
  4133fc:	lahf   
  4133fd:	jns    0x4133ba
  4133ff:	dec    BYTE PTR [ecx]
  413401:	clc    
  413402:	push   edi
  413403:	jle    0x4133c4
  413405:	int3   
  413406:	cwde   
  413407:	div    BYTE PTR [esi+0x7f237c19]
  41340d:	test   DWORD PTR [edi+0x40],eax
  413410:	push   edi
  413411:	xor    BYTE PTR [ecx],ch
  413413:	dec    edx
  413414:	pop    ecx
  413415:	shl    DWORD PTR [ecx],0x74
  413418:	es push cs
  41341a:	int3   
  41341b:	dec    ebp
  41341c:	push   ebp
  41341d:	mov    DWORD PTR [ebp+0x41e90879],edi
  413423:	sti    
  413424:	(bad)  
  413425:	fwait
  413426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413427:	mov    WORD PTR [ecx+0x5885ed77],ds
  41342d:	pop    edx
  41342e:	ficom  WORD PTR [ebp+0x2f]
  413431:	(bad)  
  413432:	ror    al,cl
  413434:	icebp  
  413435:	mov    dh,0x30
  413437:	sahf   
  413438:	stos   BYTE PTR es:[edi],al
  413439:	ret    0x2579
  41343c:	cwde   
  41343d:	je     0x413495
  41343f:	mov    eax,0xc4bf7136
  413444:	mov    dl,0x7
  413446:	imul   ebp,DWORD PTR [eax+0x2a6cc646],0x380d99b4
  413450:	in     eax,0xe2
  413452:	cmc    
  413453:	add    eax,0xcc99e75d
  413458:	in     eax,dx
  413459:	mov    ebx,0x12803b06
  41345e:	sti    
  41345f:	mov    edx,0xf7c6c470
  413464:	test   al,0xdb
  413467:	mov    dl,0x4c
  413469:	dec    esp
  41346a:	dec    eax
  41346b:	jns    0x41341f
  41346d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41346e:	mov    ebx,0x998f4f82
  413473:	in     al,0x44
  413475:	fld    QWORD PTR [ecx]
  413477:	jecxz  0x4134ae
  413479:	mov    cl,0x2d
  41347b:	inc    eax
  41347c:	or     eax,0xc99d6896
  413481:	inc    ecx
  413482:	ffree  st(1)
  413484:	dec    edx
  413485:	xchg   esi,ebx
  413487:	imul   esp,DWORD PTR [esi-0x3c],0x88848f36
  41348e:	shl    cl,1
  413490:	shr    ebx,0x80
  413493:	xchg   ebx,eax
  413494:	fisttp QWORD PTR [ebp+0x454bfcba]
  41349a:	sub    cl,dh
  41349c:	mov    ebx,0x866f7a65
  4134a1:	test   BYTE PTR [ecx+eax*4-0x35a9d18d],ch
  4134a8:	push   0x55
  4134aa:	loopne 0x413514
  4134ac:	jge    0x4134b6
  4134ae:	fwait
  4134af:	push   ebp
  4134b0:	div    WORD PTR [ecx-0x2f]
  4134b4:	sub    eax,0x5d8cf06c
  4134b9:	inc    ebx
  4134ba:	add    eax,0x87781836
  4134bf:	pop    es
  4134c0:	sahf   
  4134c1:	cmp    al,0x28
  4134c3:	(bad)  
  4134c5:	mov    DWORD PTR [ebp+0x7b],edi
  4134c8:	mov    eax,0x4250ba6a
  4134cd:	dec    edi
  4134ce:	jmp    0xbbb3:0x247c7dce
  4134d5:	shr    BYTE PTR [ebx+0x7f69291c],0x7c
  4134dc:	ins    BYTE PTR es:[edi],dx
  4134dd:	inc    edi
  4134de:	int3   
  4134df:	(bad)  
  4134e0:	cmp    eax,eax
  4134e2:	scas   al,BYTE PTR es:[edi]
  4134e3:	in     al,dx
  4134e4:	fistp  DWORD PTR [ebx-0xab2a731]
  4134ea:	out    dx,al
  4134eb:	push   esi
  4134ec:	add    eax,0xab83ebbb
  4134f1:	mov    ecx,0x987b2aa7
  4134f6:	sbb    eax,DWORD PTR [ecx+0x77]
  4134f9:	sub    BYTE PTR [ebp-0x5f4ee4ef],dl
  4134ff:	addr16 test eax,0x5817e01b
  413505:	out    0x6c,eax
  413507:	cmp    eax,0xa54bc156
  41350c:	dec    esi
  41350d:	sub    al,0xf9
  41350f:	fild   DWORD PTR ds:0xf8bd59bb
  413515:	push   0xffffffdc
  413517:	sbb    BYTE PTR ds:0x805b9a6d,cl
  41351d:	dec    ecx
  41351e:	call   0xf1a1:0x95c088cc
  413525:	(bad)  [eax]
  413527:	and    ch,dh
  413529:	ss dec edx
  41352b:	clc    
  41352c:	les    ecx,FWORD PTR [ebx+ecx*2]
  41352f:	scas   eax,DWORD PTR es:[edi]
  413530:	mov    ah,0x22
  413532:	jne    0x4134f8
  413534:	cmp    BYTE PTR [ebp+ecx*4-0x72825447],al
  41353b:	int    0xe5
  41353d:	push   0x14
  41353f:	rcl    ecx,0xb0
  413542:	je     0x4134d4
  413544:	add    BYTE PTR [esi-0x3b],0x2d
  413548:	hlt    
  413549:	add    BYTE PTR [esi],al
  41354b:	sub    BYTE PTR [edx-0x55],0xfb
  41354f:	xor    DWORD PTR [esi+edi*1-0x7178d043],ebx
  413556:	adc    DWORD PTR [ebx+esi*4+0x11],esi
  41355a:	fdivr  DWORD PTR [ebx+0x6a]
  41355d:	pop    eax
  41355e:	lods   al,BYTE PTR ds:[esi]
  41355f:	pusha  
  413560:	ficomp DWORD PTR [eax+0x1cc138fe]
  413566:	push   esp
  413567:	or     al,0xe9
  413569:	jbe    0x4135d7
  41356b:	out    0x95,al
  41356d:	push   ebp
  41356e:	aam    0xcd
  413570:	push   esi
  413571:	jb     0x41356b
  413573:	xor    eax,0xdd0686ab
  413578:	pop    esp
  413579:	mov    ch,0x23
  41357b:	(bad)  
  41357c:	out    0xda,eax
  41357e:	add    al,BYTE PTR [eax]
  413580:	xor    DWORD PTR [edi],ecx
  413582:	fdivr  QWORD PTR [eax]
  413584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413585:	sbb    eax,DWORD PTR [ecx+0x46]
  413588:	ins    DWORD PTR es:[edi],dx
  413589:	push   edx
  41358a:	add    BYTE PTR [ebp-0x5cc39451],0x57
  413591:	inc    ecx
  413592:	clc    
  413593:	loop   0x4135ae
  413595:	dec    esp
  413596:	cmp    ch,ch
  413598:	add    ch,BYTE PTR ds:0xba224bb0
  41359e:	or     DWORD PTR [edx+ecx*1],eax
  4135a1:	in     al,dx
  4135a2:	mov    esp,0x727d4698
  4135a7:	out    0xbd,eax
  4135a9:	test   eax,0xfd7fcbb5
  4135ae:	add    esi,DWORD PTR [ebx]
  4135b0:	cmp    dl,dl
  4135b2:	out    0xab,eax
  4135b4:	loop   0x41357e
  4135b6:	pusha  
  4135b7:	mov    bh,al
  4135b9:	inc    esi
  4135ba:	js     0x41356e
  4135bc:	ins    BYTE PTR es:[edi],dx
  4135bd:	loopne 0x41363b
  4135bf:	sbb    al,0xe4
  4135c1:	mov    cl,BYTE PTR [ebx+edx*2-0x227dbd27]
  4135c8:	and    bl,bh
  4135ca:	cwde   
  4135cb:	out    dx,al
  4135cc:	aas    
  4135cd:	js     0x4135a0
  4135cf:	outs   dx,DWORD PTR ds:[esi]
  4135d0:	inc    eax
  4135d1:	shl    DWORD PTR [edx+0x739b5cc1],0x49
  4135d8:	imul   esp,edi,0x69
  4135db:	dec    ecx
  4135dc:	sbb    DWORD PTR [eax-0x39],ecx
  4135df:	inc    esp
  4135e0:	aad    0xc5
  4135e2:	inc    edx
  4135e3:	dec    edi
  4135e4:	aas    
  4135e5:	(bad)  
  4135e6:	fst    QWORD PTR fs:[edx+edx*4+0xf]
  4135eb:	shl    BYTE PTR [bp+di-0x2ec6],1
  4135f0:	push   cs
  4135f1:	and    bl,cl
  4135f3:	clc    
  4135f4:	push   ebx
  4135f5:	add    eax,0x2c650f97
  4135fa:	test   DWORD PTR [eax+0x38],edi
  4135fd:	jnp    0x4135cb
  4135ff:	xor    esi,DWORD PTR [ebx+eiz*4+0x69]
  413603:	sbb    DWORD PTR [edx-0xa],esp
  413606:	push   cs
  413607:	rcr    ch,cl
  413609:	dec    edi
  41360a:	pusha  
  41360b:	ds (bad) 
  41360e:	es ins BYTE PTR es:[edi],dx
  413610:	in     al,0x35
  413612:	add    DWORD PTR [esi],0x7c
  413615:	repz pusha 
  413617:	je     0x41362b
  413619:	pop    ebx
  41361a:	cmp    dh,BYTE PTR [ebp-0x33]
  41361d:	jp     0x4135e6
  41361f:	jns    0x4135f0
  413621:	fidiv  DWORD PTR [eax]
  413623:	scas   eax,DWORD PTR es:[edi]
  413624:	lods   eax,DWORD PTR ds:[esi]
  413625:	jmp    0x5160cf6a
  41362a:	cli    
  41362b:	sbb    dh,dh
  41362d:	sbb    dl,BYTE PTR [edi-0x7b]
  413630:	outs   dx,DWORD PTR ds:[esi]
  413631:	push   ecx
  413632:	or     dh,BYTE PTR ds:0xeabe03cb
  413638:	push   es
  413639:	popf   
  41363a:	mov    ds:0xe9d0e296,eax
  41363f:	stos   BYTE PTR es:[edi],al
  413640:	cmp    al,0x17
  413642:	add    BYTE PTR [edx-0x6],bl
  413645:	add    bl,dl
  413647:	jae    0x4135ce
  413649:	xchg   cl,cl
  41364b:	sbb    eax,0x83b8e6e3
  413650:	in     al,dx
  413651:	rcl    BYTE PTR [esi-0x6f76c0a6],0x67
  413658:	cwde   
  413659:	sbb    eax,0x9402ec5
  41365e:	jge    0x413646
  413660:	call   DWORD PTR [esi]
  413662:	int    0x2f
  413664:	pop    ss
  413665:	dec    ebx
  413666:	in     eax,0x79
  413668:	les    ebx,FWORD PTR [eax+0x55]
  41366b:	ret    0x4d61
  41366e:	mov    eax,0x2422c6a4
  413673:	xchg   esp,eax
  413674:	sub    al,BYTE PTR [esi+esi*8+0x72b71967]
  41367b:	lds    ebx,FWORD PTR [eax-0x83df615]
  413681:	call   0x4d8358c9
  413686:	xchg   esi,eax
  413687:	in     eax,dx
  413688:	push   ecx
  413689:	push   0xe9cb2009
  41368e:	push   0xb504a02d
  413693:	jnp    0x41369c
  413695:	and    esi,DWORD PTR [ecx+0x74]
  413698:	inc    eax
  413699:	push   ds
  41369a:	imul   eax,DWORD PTR [eax+0x5dea7c1d],0xffffffb9
  4136a1:	out    dx,eax
  4136a2:	xchg   edi,eax
  4136a3:	fs sbb edi,eax
  4136a6:	add    BYTE PTR [edx],bl
  4136a8:	cdq    
  4136a9:	xchg   esi,eax
  4136aa:	loopne 0x4136b5
  4136ac:	pop    ds
  4136ad:	inc    esi
  4136ae:	adc    BYTE PTR [esi+0x31],0x56
  4136b2:	inc    edi
  4136b3:	inc    esp
  4136b4:	adc    cl,BYTE PTR [edi]
  4136b6:	sub    al,0xa2
  4136b8:	ss aas 
  4136ba:	inc    edi
  4136bb:	popa   
  4136bc:	cdq    
  4136bd:	mov    ch,0xc2
  4136bf:	dec    esp
  4136c0:	stos   DWORD PTR es:[edi],eax
  4136c1:	xchg   ebp,ecx
  4136c3:	cmp    esp,DWORD PTR [ebx]
  4136c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136c6:	(bad)  
  4136c8:	push   esp
  4136c9:	cmc    
  4136ca:	fs and ebp,esi
  4136cd:	test   DWORD PTR [edx-0x76],0x4a1b5f48
  4136d4:	xor    eax,ecx
  4136d6:	add    eax,0x3272e6
  4136db:	sbb    DWORD PTR ds:0x42800c,0x97a
  4136e5:	mov    DWORD PTR [edx],eax
  4136e7:	mov    eax,DWORD PTR [ebp+0xc]
  4136ea:	adc    DWORD PTR ds:0x42900c,edx
  4136f0:	xor    eax,ecx
  4136f2:	push   esi
  4136f3:	and    DWORD PTR ds:0x42600c,0x0
  4136fd:	jmp    0x413711
  413702:	xor    esi,esi
  413704:	add    esi,DWORD PTR ds:0x42600c
  41370a:	inc    esi
  41370b:	mov    DWORD PTR ds:0x42600c,esi
  413711:	cmp    DWORD PTR ds:0x42600c,0x11
  413718:	jae    0x413761
  41371e:	cmp    DWORD PTR ds:0x42600c,0x5
  413725:	jl     0x413761
  41372b:	jmp    0x413740
  413730:	push   0x42c0d8
  413735:	push   0x42c055
  41373a:	call   DWORD PTR ds:0x42cef9
  413740:	cmp    DWORD PTR ds:0x42600c,0x4
  413747:	jne    0x41375c
  41374d:	xor    esi,esi
  41374f:	add    esi,DWORD PTR ds:0x42600c
  413755:	inc    esi
  413756:	mov    DWORD PTR ds:0x42600c,esi
  41375c:	jmp    0x413702
  413761:	mov    esi,DWORD PTR [ebp+0x10]
  413764:	mov    edx,0x3272e6
  413769:	add    eax,edx
  41376b:	mov    DWORD PTR [esi+0x4],eax
  41376e:	mov    eax,DWORD PTR [ebp+0x14]
  413771:	mov    esi,DWORD PTR [ebp+0x10]
  413774:	mov    DWORD PTR [esi+0x8],eax
  413777:	mov    eax,DWORD PTR [ebp+0x18]
  41377a:	mov    esi,DWORD PTR [ebp+0x10]
  41377d:	mov    DWORD PTR [esi+0xc],eax
  413780:	mov    eax,DWORD PTR [ebp+0x1c]
  413783:	mov    esi,DWORD PTR [ebp+0x10]
  413786:	mov    DWORD PTR [esi+0x10],eax
  413789:	mov    eax,DWORD PTR [ebp+0x8]
  41378c:	xor    eax,ecx
  41378e:	add    eax,edx
  413790:	pop    esi
  413791:	leave  
  413792:	ret    0x18
  413795:	push   ebp
  413796:	mov    ebp,esp
  413798:	sub    esp,0x9c
  41379e:	or     ecx,eax
  4137a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4137a3:	mov    DWORD PTR ds:0x42701c,0x1a
  4137ad:	cmp    DWORD PTR ds:0x42701c,0x0
  4137b4:	je     0x413804
  4137ba:	cmp    DWORD PTR ds:0x42701c,0x8
  4137c1:	jb     0x413804
  4137c7:	jmp    0x4137dc
  4137cc:	push   0x42700c
  4137d1:	push   0x42c088
  4137d6:	call   DWORD PTR ds:0x42ced1
  4137dc:	cmp    DWORD PTR ds:0x42701c,0x9
  4137e3:	jne    0x4137f4
  4137e9:	mov    eax,ds:0x42701c
  4137ee:	dec    eax
  4137ef:	mov    ds:0x42701c,eax
  4137f4:	mov    eax,ds:0x42701c
  4137f9:	dec    eax
  4137fa:	mov    ds:0x42701c,eax
  4137ff:	jmp    0x4137ad
  413804:	mov    eax,0x8a8f
  413809:	xor    ax,WORD PTR [ecx+0x20]
  41380d:	and    DWORD PTR ds:0x429004,0x0
  413817:	jmp    0x413829
  41381c:	mov    ecx,DWORD PTR ds:0x429004
  413822:	inc    ecx
  413823:	mov    DWORD PTR ds:0x429004,ecx
  413829:	cmp    DWORD PTR ds:0x429004,0x18
  413830:	jae    0x41387d
  413836:	cmp    DWORD PTR ds:0x429004,0xd
  41383d:	jl     0x41387d
  413843:	jmp    0x41385c
  413848:	push   0x1ae4
  41384d:	push   DWORD PTR [ebp-0x10]
  413850:	push   DWORD PTR [ebp-0x18]
  413853:	push   DWORD PTR [ebp-0x28]
  413856:	call   DWORD PTR ds:0x42ced5
  41385c:	cmp    DWORD PTR ds:0x429004,0xc
  413863:	jne    0x413878
  413869:	xor    ecx,ecx
  41386b:	or     ecx,DWORD PTR ds:0x429004
  413871:	inc    ecx
  413872:	mov    DWORD PTR ds:0x429004,ecx
  413878:	jmp    0x41381c
  41387d:	mov    ecx,0x3b53
  413882:	and    DWORD PTR ds:0x42a008,0x66a9
  41388c:	add    ax,cx
  41388f:	and    DWORD PTR ds:0x42a01c,0x0
  413899:	mov    ecx,DWORD PTR ds:0x42a01c
  41389f:	inc    ecx
  4138a0:	mov    DWORD PTR ds:0x42a01c,ecx
  4138a6:	cmp    DWORD PTR ds:0x42a01c,0x15
  4138ad:	ja     0x4138d3
  4138b3:	jmp    0x4138c6
  4138b8:	push   DWORD PTR [ebp-0xc]
  4138bb:	push   0x6da9
  4138c0:	call   DWORD PTR ds:0x42ced9
  4138c6:	cmp    DWORD PTR ds:0x42a01c,0x10
  4138cd:	jb     0x413899
  4138d3:	movzx  eax,ax
  4138d6:	or     ecx,0x78e
  4138dc:	mov    DWORD PTR [ebp-0x10],eax
  4138df:	sub    ecx,DWORD PTR ds:0x428008
  4138e5:	mov    BYTE PTR [ebp-0x1],0x71
  4138e9:	lea    eax,[ebp-0x1]
  4138ec:	mov    DWORD PTR [ebp-0xc],eax
  4138ef:	add    ecx,DWORD PTR ds:0x42a008
  4138f5:	mov    al,BYTE PTR [ebp-0x1]
  4138f8:	mov    DWORD PTR ds:0x42a00c,0x12
  413902:	cmp    DWORD PTR ds:0x42a00c,0x0
  413909:	je     0x413939
  41390f:	cmp    DWORD PTR ds:0x42a00c,0x16
  413916:	jle    0x413939
  41391c:	jmp    0x413927
  413921:	call   DWORD PTR ds:0x42cedd
  413927:	mov    ecx,DWORD PTR ds:0x42a00c
  41392d:	dec    ecx
  41392e:	mov    DWORD PTR ds:0x42a00c,ecx
  413934:	jmp    0x413902
  413939:	mov    ecx,DWORD PTR [ebp-0xc]
  41393c:	sbb    DWORD PTR ds:0x42800c,0x427010
  413946:	xor    al,0x76
  413948:	sub    al,0x6
  41394a:	or     DWORD PTR ds:0x427014,0x428010
  413954:	mov    BYTE PTR [ecx],al
  413956:	mov    DWORD PTR ds:0x426010,0x1c3a
  413960:	jmp    0x415cf2
  413965:	cmp    al,0x83
  413967:	cmp    eax,0xbd8283bc
  41396c:	add    ebx,0xffffffc5
  41396f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413970:	in     al,dx
  413971:	ja     0x41393a
  413973:	das    
  413974:	xchg   esi,eax
  413975:	cmp    DWORD PTR [eax+0x5f0d7070],ecx
  41397b:	jo     0x4139ed
  41397d:	mov    al,0xd
  41397f:	push   ss
  413980:	cli    
  413981:	es xchg esi,eax
  413983:	in     al,0xbf
  413985:	iret   
  413986:	ja     0x4139e8
  413988:	mov    ?,ecx
  41398a:	test   DWORD PTR [esi+0x4f],0x8712bc0a
  413991:	xchg   ebx,eax
  413992:	xlat   BYTE PTR ds:[ebx]
  413993:	inc    ebx
  413994:	sbb    DWORD PTR [ebp+0x17c6f95a],eax
  41399a:	and    al,0xc9
  41399c:	pop    edi
  41399d:	xor    DWORD PTR [ebp+0x5c73cd79],ecx
  4139a3:	xor    edi,esp
  4139a5:	fwait
  4139a6:	sbb    BYTE PTR [ebx+0x5c8870c4],0x50
  4139ad:	xor    al,0xae
  4139af:	push   ss
  4139b0:	push   ecx
  4139b1:	xchg   ecx,eax
  4139b2:	dec    ebx
  4139b3:	push   cs
  4139b4:	xor    DWORD PTR [eax+0x775cbce0],esi
  4139ba:	loopne 0x413a08
  4139bc:	retf   
  4139bd:	cdq    
  4139be:	inc    edi
  4139bf:	imul   esp,edx,0xffffffb8
  4139c2:	jmp    0x413a39
  4139c4:	mov    ebp,0x460e7aa0
  4139c9:	fistp  QWORD PTR [eax+0x4d3ec37b]
  4139cf:	xchg   ebp,eax
  4139d0:	rcl    DWORD PTR [edx+0x414e12c3],0xfe
  4139d7:	sahf   
  4139d8:	ins    BYTE PTR es:[edi],dx
  4139d9:	in     eax,dx
  4139da:	rcl    BYTE PTR [ecx-0x750b0419],1
  4139e0:	jns    0x4139ed
  4139e2:	cli    
  4139e3:	mov    eax,0x45d0c6d9
  4139e8:	mov    cl,0xf9
  4139ea:	test   al,0x34
  4139ec:	je     0x4139e4
  4139ee:	icebp  
  4139ef:	adc    BYTE PTR [edx+0x77],bh
  4139f2:	fisttp DWORD PTR [edx+edi*2+0x13]
  4139f6:	xor    ch,bh
  4139f8:	mov    ah,0x98
  4139fa:	inc    esp
  4139fb:	and    DWORD PTR [ebp-0x5a],esi
  4139fe:	and    ebx,DWORD PTR [edx+0x33]
  413a01:	fwait
  413a02:	cmp    DWORD PTR [esi-0x5f],esi
  413a05:	mov    edx,0x715de5d7
  413a0a:	stos   DWORD PTR es:[edi],eax
  413a0b:	jmp    0xa2c:0x73cdc60c
  413a12:	ins    DWORD PTR es:[edi],dx
  413a13:	jmp    0x413a28
  413a15:	jnp    0x413a80
  413a17:	loopne 0x4139f2
  413a19:	loop   0x4139fe
  413a1b:	xchg   DWORD PTR [eax-0x62f72d4d],ebx
  413a21:	ins    DWORD PTR es:[edi],dx
  413a22:	dec    esp
  413a23:	inc    ecx
  413a24:	xor    eax,0x51a5f274
  413a29:	jnp    0x413a04
  413a2b:	aad    0x31
  413a2d:	add    bl,BYTE PTR [eax]
  413a2f:	aam    0x0
  413a31:	mov    BYTE PTR [ebx],ah
  413a33:	fst    DWORD PTR [edi-0x5e93be09]
  413a39:	xchg   edi,eax
  413a3a:	ss loop 0x4139fc
  413a3d:	mov    eax,ds:0x9e573b20
  413a42:	mov    BYTE PTR [eax+0xc428b30],bl
  413a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a49:	sbb    BYTE PTR [ecx+ecx*8-0x4d],bh
  413a4d:	aad    0x4
  413a4f:	fisub  WORD PTR [ebx]
  413a51:	rcr    ecx,1
  413a53:	call   0xfef4a3c5
  413a58:	sub    dl,al
  413a5a:	pop    esi
  413a5b:	sbb    al,0xe6
  413a5d:	retf   
  413a5e:	call   0x930f:0x6c370ec4
  413a65:	popa   
  413a66:	xchg   BYTE PTR [esi*8+0x7d7e87ec],bl
  413a6d:	xchg   BYTE PTR [ebp+0x56],dh
  413a70:	daa    
  413a71:	cmp    DWORD PTR [eax+0x6418f7b2],0x8501b1ff
  413a7b:	or     al,al
  413a7d:	arpl   WORD PTR [ebx+0x38320dcd],cx
  413a83:	scas   al,BYTE PTR es:[edi]
  413a84:	leave  
  413a85:	cmp    DWORD PTR [eax+0x50],ebx
  413a88:	cwde   
  413a89:	dec    ebp
  413a8a:	popa   
  413a8b:	sahf   
  413a8c:	clc    
  413a8d:	je     0x413ae4
  413a8f:	mov    edi,0xbecdea47
  413a94:	test   DWORD PTR [edi+esi*8+0x11],eax
  413a98:	mov    edi,0xbb97a330
  413a9d:	hlt    
  413a9e:	push   eax
  413a9f:	je     0x413ad4
  413aa1:	push   esi
  413aa2:	pop    edx
  413aa3:	jno    0x413a5f
  413aa5:	lea    edx,[esi-0x2c]
  413aa8:	pushf  
  413aa9:	mov    esi,0xe815d025
  413aae:	push   0x45
  413ab0:	mov    edx,0x21ba9573
  413ab5:	add    DWORD PTR [ebx-0x49],ebp
  413ab8:	dec    ecx
  413ab9:	push   cs
  413aba:	inc    ebx
  413abb:	mov    ?,WORD PTR [eax-0x16]
  413abe:	arpl   WORD PTR [edx+0x55],si
  413ac1:	data16 out 0x39,al
  413ac4:	es ja  0x413a4d
  413ac7:	sti    
  413ac8:	pushf  
  413ac9:	mov    dh,0x3
  413acb:	mov    bl,0xe2
  413acd:	jo     0x413a6f
  413acf:	sbb    ch,BYTE PTR gs:[edi+0x75e4080f]
  413ad6:	popa   
  413ad7:	jmp    0x413a8b
  413ad9:	ret    0x661
  413adc:	sub    edx,DWORD PTR [edx]
  413ade:	xor    al,0xc3
  413ae0:	cmp    edi,DWORD PTR [eax]
  413ae2:	imul   edx,DWORD PTR [edx],0xffffffbb
  413ae5:	push   0x2a7a6614
  413aea:	adc    eax,0x6e4a8135
  413aef:	ja     0x413b19
  413af1:	mov    cl,0xaa
  413af3:	push   ebp
  413af4:	sahf   
  413af5:	xor    BYTE PTR [ebp+0x7d],al
  413af8:	shr    BYTE PTR [ecx-0xa],cl
  413afb:	aad    0x96
  413afd:	jl     0x413b47
  413aff:	stc    
  413b00:	push   0xa1fd16f0
  413b05:	pop    ebp
  413b06:	scas   eax,DWORD PTR es:[edi]
  413b07:	add    bh,BYTE PTR [eax+0x56768d03]
  413b0d:	push   edi
  413b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b0f:	pop    es
  413b10:	xchg   esp,eax
  413b12:	jge    0x413b0f
  413b14:	pop    es
  413b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b16:	test   edx,ecx
  413b18:	retf   
  413b19:	ffree  st(5)
  413b1b:	sub    bh,BYTE PTR fs:[eax]
  413b1e:	adc    cl,BYTE PTR [ebp-0x13]
  413b21:	mov    ds:0xf33a6e36,al
  413b26:	es push ebx
  413b28:	dec    esp
  413b29:	add    al,0x79
  413b2b:	cmp    dh,BYTE PTR [edx+0x11]
  413b2e:	test   BYTE PTR [esi],bl
  413b30:	cmp    eax,0x49b1b871
  413b35:	fwait
  413b36:	les    esp,FWORD PTR gs:[eax-0x5e]
  413b3a:	retf   0xfd7d
  413b3d:	hlt    
  413b3e:	scas   al,BYTE PTR es:[edi]
  413b3f:	nop
  413b40:	stos   DWORD PTR es:[edi],eax
  413b41:	ins    BYTE PTR es:[edi],dx
  413b42:	xor    eax,0xa80abd4
  413b47:	shl    DWORD PTR [ecx],cl
  413b49:	call   0x2e91:0x670d8acf
  413b50:	sbb    DWORD PTR [edx-0x6],ebx
  413b53:	inc    ebp
  413b54:	fwait
  413b55:	pop    es
  413b56:	rcl    DWORD PTR [ecx+0x7f3bdefe],cl
  413b5c:	or     al,0x83
  413b5e:	xchg   ebp,eax
  413b5f:	push   edi
  413b60:	cmc    
  413b61:	in     al,dx
  413b62:	iret   
  413b63:	xchg   DWORD PTR [ecx],ebx
  413b65:	pop    ebp
  413b67:	lahf   
  413b68:	inc    edi
  413b69:	iret   
  413b6a:	xchg   esp,eax
  413b6b:	and    eax,0x52f993f6
  413b70:	jae    0x413b10
  413b72:	pusha  
  413b73:	pop    ds
  413b74:	xchg   ebx,eax
  413b75:	in     al,dx
  413b76:	call   0xe3120f48
  413b7b:	adc    DWORD PTR es:[ebx],edi
  413b7e:	fsub   st,st(6)
  413b80:	mov    ah,0x42
  413b82:	in     al,dx
  413b83:	jo     0x413b34
  413b85:	dec    edx
  413b86:	xchg   edi,eax
  413b87:	aam    0xeb
  413b89:	gs in  al,0xd
  413b8c:	xchg   edx,eax
  413b8d:	sub    al,0x91
  413b8f:	addr16 loope 0x413b5d
  413b92:	in     al,0xce
  413b94:	jb     0x413b7e
  413b96:	pop    edx
  413b97:	out    dx,al
  413b98:	xchg   esi,eax
  413b99:	ss daa 
  413b9b:	neg    ah
  413b9d:	push   ebp
  413b9e:	div    BYTE PTR [ebp-0x71]
  413ba1:	or     eax,0xd70a554d
  413ba6:	inc    edi
  413ba7:	aam    0xa9
  413ba9:	push   edi
  413baa:	mov    es,esi
  413bac:	out    dx,eax
  413bad:	or     DWORD PTR [ebx+0x4e2e8ba5],ebp
  413bb3:	add    BYTE PTR [ebx],al
  413bb5:	jnp    0x413b48
  413bb7:	add    eax,0xcf1059e7
  413bbc:	cmc    
  413bbd:	dec    esi
  413bbe:	ja     0x413c00
  413bc0:	push   cs
  413bc1:	shl    BYTE PTR [esi],0x8e
  413bc4:	sti    
  413bc5:	retf   
  413bc6:	pop    edi
  413bc7:	cmp    DWORD PTR [edi-0x55],eax
  413bca:	adc    ah,BYTE PTR [esi]
  413bcc:	int    0xa
  413bce:	int    0xeb
  413bd0:	ins    BYTE PTR es:[edi],dx
  413bd1:	and    esi,esp
  413bd3:	cmp    eax,0x8b5cc19
  413bd8:	jmp    0xe4134a6
  413bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bde:	cld    
  413bdf:	jp     0x413b96
  413be1:	popf   
  413be2:	mov    ds:0x7d7aa252,al
  413be7:	mov    ebx,0xba2ef841
  413bec:	stc    
  413bed:	repnz arpl WORD PTR [ebx+0x1b835896],cx
  413bf4:	popf   
  413bf5:	pcmpeqb mm7,QWORD PTR [edx]
  413bf8:	hlt    
  413bf9:	dec    ebx
  413bfa:	or     BYTE PTR [bp+di-0x4be5],dh
  413bff:	leave  
  413c00:	add    eax,0x8877fab3
  413c05:	(bad)  
  413c07:	(bad)  
  413c08:	gs out 0x28,al
  413c0b:	sbb    DWORD PTR [ebx],eax
  413c0d:	call   0x3498ef93
  413c12:	int3   
  413c13:	adc    cl,BYTE PTR [esp+ebx*1-0xf7df57c]
  413c1a:	fwait
  413c1b:	push   cs
  413c1c:	push   ds
  413c1d:	mov    eax,ds:0x7f70190f
  413c22:	xchg   esp,eax
  413c23:	mov    bl,0xb0
  413c25:	pop    ebp
  413c26:	retf   0xd84c
  413c29:	inc    esp
  413c2a:	jge    0x413c75
  413c2c:	nop
  413c2d:	push   edx
  413c2e:	adc    ah,BYTE PTR [edi+0x8]
  413c31:	or     ch,BYTE PTR [edx-0x72febb1d]
  413c37:	jmp    0x413bd2
  413c39:	sub    bl,cl
  413c3b:	add    BYTE PTR [ebp-0x69399dd0],ah
  413c41:	shl    ecx,0x5
  413c44:	or     ch,bl
  413c46:	stos   BYTE PTR es:[edi],al
  413c47:	sbb    BYTE PTR [edi-0x7e60474f],ah
  413c4d:	imul   DWORD PTR [edi]
  413c4f:	cdq    
  413c50:	add    eax,0xe078a23e
  413c55:	pusha  
  413c56:	scas   al,BYTE PTR es:[edi]
  413c57:	mov    ds:0xdbd7f9ba,al
  413c5c:	pop    ds
  413c5d:	ss retf 0xccbc
  413c61:	ins    DWORD PTR es:[edi],dx
  413c62:	repnz ror BYTE PTR [ecx+0x52],1
  413c66:	cmp    esp,ebp
  413c68:	(bad)  [eax+ecx*4]
  413c6b:	and    eax,0xc645f104
  413c70:	fadd   DWORD PTR [ebp+ecx*8-0x1764c533]
  413c77:	dec    ebp
  413c78:	mov    esi,0xece4736b
  413c7d:	xor    al,0x86
  413c7f:	mov    ds:0xa7d4a26a,eax
  413c84:	sbb    ebx,DWORD PTR [ecx+0x6a6d8590]
  413c8a:	sub    edi,ebx
  413c8c:	data16 or dl,0x6b
  413c90:	out    0x1d,al
  413c92:	(bad)
  413c97:	sub    eax,0xcf1e585d
  413c9c:	imul   edx,DWORD PTR cs:[ebx-0x5b],0x3e
  413ca1:	call   0x2ee7:0x3de1f16
  413ca8:	fcomp  QWORD PTR [edi+0x24]
  413cab:	fistp  DWORD PTR [si]
  413cae:	add    BYTE PTR ds:0xe122b3e0,al
  413cb4:	pop    esp
  413cb5:	(bad)  
  413cb6:	in     eax,dx
  413cb7:	cmp    ecx,DWORD PTR [edx+0x5313d3f]
  413cbd:	push   eax
  413cbe:	mov    ch,0xde
  413cc0:	mov    ds:0x6c976d3,eax
  413cc5:	retf   0xf057
  413cc8:	pcmpeqb mm2,QWORD PTR [ebx]
  413ccb:	sub    dh,BYTE PTR [esi-0x51c6ac10]
  413cd1:	popf   
  413cd2:	push   edi
  413cd3:	sub    ah,BYTE PTR [esi-0x7116025c]
  413cd9:	cmp    eax,0x93e8aac0
  413cde:	jnp    0x413cba
  413ce0:	lea    ebx,[ebx+0x3e989224]
  413ce6:	xor    eax,0xa2506f39
  413ceb:	xor    eax,0x2fa7aa5b
  413cf0:	iret   
  413cf1:	into   
  413cf2:	jmp    0x413d5a
  413cf4:	push   0xc2a1ce21
  413cf9:	or     ecx,edi
  413cfb:	cwde   
  413cfc:	cdq    
  413cfd:	mov    cl,0xab
  413cff:	or     BYTE PTR ds:[edx-0x2c],bl
  413d03:	mov    WORD PTR [edi-0x1149ec04],cs
  413d09:	pop    ebp
  413d0a:	mov    edi,0x8867e68e
  413d0f:	pushf  
  413d10:	in     al,0x36
  413d12:	and    bh,BYTE PTR [esi+0x48]
  413d15:	sbb    ah,BYTE PTR [edi+edx*8+0x22]
  413d19:	mov    ds:0x62fe2ab9,eax
  413d1e:	inc    esi
  413d1f:	addr16 inc edx
  413d21:	arpl   WORD PTR [esi+0x3d9b35ec],bp
  413d27:	stos   BYTE PTR es:[edi],al
  413d28:	jno    0x413cc7
  413d2a:	je     0x413cc7
  413d2c:	test   DWORD PTR [edx-0x47],ebp
  413d2f:	pop    ss
  413d30:	stos   BYTE PTR es:[edi],al
  413d31:	ss push esi
  413d33:	add    BYTE PTR [ecx+ebx*1-0x34],dh
  413d37:	shl    DWORD PTR [eax+0x1e99db60],cl
  413d3d:	lds    ebp,FWORD PTR [ebx-0x16]
  413d40:	mov    bh,0xaa
  413d42:	bound  esi,QWORD PTR [ecx]
  413d44:	mov    cl,0x38
  413d46:	mov    ebx,0xf0aa96c7
  413d4b:	sub    ebp,0x29
  413d4e:	call   0xf903c96
  413d53:	adc    eax,0x242dd5ef
  413d58:	cs jecxz 0x413d3a
  413d5b:	jge    0x413d55
  413d5d:	pop    es
  413d5e:	sbb    DWORD PTR [edi],edi
  413d60:	or     ebp,DWORD PTR [ebx+ebp*4]
  413d63:	xchg   esp,eax
  413d64:	icebp  
  413d65:	gs dec edx
  413d67:	inc    ebx
  413d68:	pop    ebx
  413d69:	out    dx,al
  413d6a:	sbb    ebp,DWORD PTR [eax-0x12]
  413d6d:	and    eax,0xc047ebee
  413d72:	enter  0x8103,0x60
  413d76:	or     BYTE PTR [ebx+0x7a],al
  413d79:	call   0x7257:0x72739fb
  413d80:	retf   0x724
  413d83:	int    0x9d
  413d85:	pop    ss
  413d86:	jmp    0x154e:0xfed3d8b2
  413d8d:	int    0x6e
  413d8f:	sbb    ebx,DWORD PTR [edi-0x66]
  413d92:	mov    al,ds:0x49fa3500
  413d97:	les    ecx,FWORD PTR [edi+0x50ab587]
  413d9d:	or     eax,0x75568736
  413da2:	cmp    BYTE PTR [edx-0x9],ch
  413da5:	mov    edi,0x968e8529
  413daa:	xchg   ebp,eax
  413dab:	push   eax
  413dac:	cli    
  413dad:	mov    WORD PTR [ebx+0x23],?
  413db0:	mov    ebx,0x286ead71
  413db5:	(bad)  
  413db6:	out    0x17,eax
  413db8:	pushf  
  413db9:	shr    BYTE PTR cs:[edx],cl
  413dbc:	mov    edx,0xe2cf2e57
  413dc1:	ficom  DWORD PTR [esi-0x400625c9]
  413dc7:	jbe    0x413e48
  413dc9:	mov    al,0x39
  413dcb:	fdiv   st,st(5)
  413dcd:	inc    eax
  413dce:	jmp    0x413d6f
  413dd0:	mov    esp,0xd5251f57
  413dd5:	lahf   
  413dd6:	mov    al,0x60
  413dd8:	test   BYTE PTR [esi],ch
  413dda:	push   esp
  413ddb:	clc    
  413ddc:	add    al,0xfc
  413dde:	xchg   esi,eax
  413ddf:	adc    al,0x2f
  413de1:	scas   eax,DWORD PTR es:[edi]
  413de2:	push   cs
  413de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413de4:	jp     0x413db7
  413de6:	clc    
  413de7:	(bad)  
  413de8:	or     DWORD PTR [edx+0x47fa174b],esi
  413dee:	test   eax,0xa35bcd17
  413df3:	loope  0x413db5
  413df5:	gs (bad) 
  413df8:	push   0x848f2167
  413dfd:	inc    ebp
  413dfe:	mov    WORD PTR [esi-0x31dc20c1],ss
  413e04:	gs push ecx
  413e06:	test   DWORD PTR [edi+edi*1],esi
  413e09:	or     dl,BYTE PTR [esi]
  413e0b:	fisubr WORD PTR [esi-0x4b]
  413e0e:	xor    DWORD PTR [edi+0x2f],edi
  413e11:	mov    ebp,0x8bb541a6
  413e16:	rcr    dl,0x69
  413e19:	pop    ebp
  413e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e1b:	sbb    edi,esi
  413e1d:	push   es
  413e1e:	bound  eax,QWORD PTR [esi]
  413e20:	mov    ebp,0x6efad943
  413e25:	iret   
  413e26:	jae    0x413de0
  413e28:	jmp    0x5a25:0x1d00d844
  413e2f:	mov    ds:0x65c6b144,al
  413e34:	fmul   DWORD PTR [edx+0x200e9965]
  413e3a:	and    eax,0x8f4ffd8e
  413e3f:	(bad)  
  413e40:	jge    0x413e73
  413e42:	call   0x4f1bb278
  413e47:	push   edx
  413e48:	jle    0x413ebe
  413e4a:	sub    al,0x49
  413e4c:	mov    DWORD PTR es:[esi-0x39],edx
  413e50:	ss inc esi
  413e52:	imul   ebx,DWORD PTR [ebx-0x5a],0x4976c03e
  413e59:	dec    eax
  413e5a:	sub    eax,DWORD PTR [eax+0x46]
  413e5d:	xchg   ebx,eax
  413e5e:	addr16 dec ecx
  413e60:	inc    ebx
  413e61:	mov    cl,0x2f
  413e63:	pop    ds
  413e64:	or     al,0xc
  413e66:	mov    dl,0x6d
  413e68:	mov    es,WORD PTR [ebx+0x6e]
  413e6b:	ret    
  413e6c:	xor    BYTE PTR [ebp-0x61],ah
  413e6f:	shr    DWORD PTR ds:0xd3ef,1
  413e74:	xor    eax,0x1f021f7f
  413e79:	mov    eax,0x966a85b1
  413e7e:	xchg   esi,eax
  413e7f:	retf   0xf8a
  413e82:	aaa    
  413e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e84:	pop    ss
  413e85:	add    BYTE PTR [eax-0x5d1f438c],dl
  413e8b:	dec    ebx
  413e8c:	dec    DWORD PTR [ebx+0x74]
  413e8f:	add    esi,esi
  413e91:	and    al,0x4
  413e93:	mov    ds:0x9f233aae,al
  413e98:	cmp    esi,esi
  413e9a:	cli    
  413e9b:	in     al,0xf0
  413e9d:	addr16 mov eax,ds:0x9a0f
  413ea1:	repz push ebp
  413ea3:	lock or BYTE PTR [edx],cl
  413ea6:	js     0x413e8a
  413ea8:	or     DWORD PTR [edx+edx*2+0x51c7e82f],0xa5f322d1
  413eb3:	stc    
  413eb4:	ja     0x413f1b
  413eb6:	jo     0x413ef2
  413eb8:	jb     0x413e8f
  413eba:	xchg   esp,eax
  413ebb:	aaa    
  413ebc:	into   
  413ebd:	in     al,0x29
  413ebf:	fmul   st,st(6)
  413ec1:	rol    BYTE PTR [ecx+0x7187a4db],1
  413ec7:	into   
  413ec8:	ins    DWORD PTR es:[edi],dx
  413ec9:	pop    esi
  413eca:	mov    al,ds:0x78bca4d9
  413ecf:	push   ebp
  413ed0:	popa   
  413ed1:	test   al,0x1e
  413ed3:	push   edi
  413ed4:	aad    0x5a
  413ed6:	cmp    ch,BYTE PTR [edx+0x56535e57]
  413edc:	fld    TBYTE PTR [edx-0x48]
  413edf:	cmp    ebp,0x486a4668
  413ee5:	(bad)  [esi]
  413ee7:	mov    ebp,0x208000e8
  413eec:	pop    ecx
  413eed:	push   ss
  413eee:	ret    
  413eef:	fnstenv [eax+edx*2-0x73]
  413ef3:	cdq    
  413ef4:	jno    0x413efa
  413ef6:	inc    edi
  413ef7:	rcl    BYTE PTR [ebx-0x5b],1
  413efa:	pop    ebx
  413efb:	mov    ds:0x56d45b3d,eax
  413f00:	retf   0x64e0
  413f03:	and    BYTE PTR [ecx+0x57],ch
  413f06:	(bad)  
  413f07:	js     0x413f5c
  413f09:	xchg   edx,eax
  413f0a:	cmp    BYTE PTR [esi-0x53f97105],dl
  413f10:	sub    eax,0x5a67e376
  413f15:	pop    ecx
  413f16:	lds    ebx,FWORD PTR [eax+edi*8-0x31]
  413f1a:	lahf   
  413f1b:	dec    ecx
  413f1c:	aas    
  413f1d:	push   0x5710b61b
  413f22:	adc    cl,0x17
  413f25:	outs   dx,BYTE PTR ds:[esi]
  413f26:	or     eax,DWORD PTR [eax-0x1]
  413f29:	out    0xb,al
  413f2b:	and    eax,0x4e8a3397
  413f30:	sbb    DWORD PTR [ebx],ebp
  413f32:	cmp    esi,DWORD PTR [eax]
  413f34:	push   edi
  413f35:	sub    BYTE PTR [edi-0x623969de],dl
  413f3b:	or     eax,0x1e61430f
  413f40:	sbb    eax,0xfa7fd3bc
  413f45:	xor    ecx,esi
  413f47:	add    BYTE PTR [ebp-0x4c],dl
  413f4a:	mov    dh,BYTE PTR [edi-0x2c]
  413f4d:	and    esp,edx
  413f4f:	xor    ch,BYTE PTR [ebx]
  413f51:	push   edx
  413f52:	xor    BYTE PTR [edx+ebx*1-0x80],0x57
  413f57:	xor    DWORD PTR [edx+ecx*2+0x6471576f],ecx
  413f5e:	inc    eax
  413f5f:	jne    0x413ee4
  413f61:	imul   edi,DWORD PTR [edi-0x55],0x5677c780
  413f68:	pop    ss
  413f69:	xchg   BYTE PTR [ebp+0x5bfb92d8],bl
  413f6f:	les    ebx,FWORD PTR [edi]
  413f71:	sti    
  413f72:	and    eax,0xb75df6ed
  413f77:	mov    esp,DWORD PTR [ebx-0x3b]
  413f7a:	retf   
  413f7b:	xchg   esi,eax
  413f7c:	inc    ebx
  413f7d:	iret   
  413f7e:	mov    eax,0xcd24606c
  413f83:	mov    BYTE PTR [ebx+0x1b9968bf],ch
  413f89:	pop    ecx
  413f8a:	bound  esi,QWORD PTR [edx-0x1e]
  413f8d:	sbb    dh,BYTE PTR [eax-0xa]
  413f90:	push   0xd03ecb34
  413f95:	xchg   DWORD PTR [esi-0x83a4deb],ecx
  413f9b:	push   edx
  413f9c:	add    eax,DWORD PTR [ebx]
  413f9e:	push   ebx
  413f9f:	inc    BYTE PTR [edi+edx*1-0x2369253f]
  413fa6:	xor    esi,DWORD PTR [eax-0x4f]
  413fa9:	loopne 0x413ff2
  413fab:	in     eax,0x33
  413fad:	xor    BYTE PTR [ecx],ch
  413faf:	add    eax,esp
  413fb1:	neg    BYTE PTR [ebp-0x14a9ede5]
  413fb7:	mov    dh,0x60
  413fb9:	dec    eax
  413fba:	aam    0x6f
  413fbc:	fmul   QWORD PTR [eax]
  413fbe:	in     al,dx
  413fbf:	and    BYTE PTR [ebp+0x5f0ca43e],dh
  413fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fc6:	out    0x1e,al
  413fc8:	inc    ecx
  413fc9:	fisubr DWORD PTR [ecx-0x12]
  413fcc:	cs inc ecx
  413fce:	cmp    DWORD PTR [ebx+eiz*8+0x58de940],edi
  413fd5:	cs int3 
  413fd7:	mov    dl,0x42
  413fd9:	popa   
  413fda:	sub    ecx,DWORD PTR [ecx+0x37]
  413fdd:	cmp    ah,BYTE PTR [esi+0x79056886]
  413fe3:	adc    bl,dh
  413fe5:	adc    DWORD PTR ds:0x52d4758d,ecx
  413feb:	gs and edi,ebx
  413fee:	mov    eax,eax
  413ff0:	arpl   di,cx
  413ff2:	aad    0x21
  413ff4:	add    al,0x75
  413ff6:	mov    eax,0x7bbc489d
  413ffb:	pop    ds
  413ffc:	dec    ebx
  413ffd:	xor    BYTE PTR [ecx+0x3a443a89],cl
  414003:	push   ds
  414004:	add    al,0xd4
  414006:	(bad)  
  414007:	xor    DWORD PTR gs:[ebx],eax
  41400a:	xchg   esp,eax
  41400b:	outs   dx,DWORD PTR ds:[esi]
  41400c:	xor    eax,0x3cf00bd2
  414011:	mov    ecx,0xd887839b
  414016:	stos   DWORD PTR es:[edi],eax
  414017:	lods   al,BYTE PTR ds:[esi]
  414018:	sub    dl,dh
  41401a:	fisttp WORD PTR [ebx-0x9]
  41401d:	mov    al,0x7a
  41401f:	or     bh,BYTE PTR [ebp+0x2f6c654b]
  414025:	add    ch,BYTE PTR [ebx-0x23]
  414028:	jecxz  0x41401b
  41402a:	dec    eax
  41402b:	push   DWORD PTR [edi]
  41402d:	clc    
  41402e:	xchg   ecx,eax
  41402f:	sub    al,0x17
  414031:	jmp    0x18f:0x94a966e5
  414038:	out    dx,eax
  414039:	push   eax
  41403a:	xor    edx,DWORD PTR [edi-0x3d163603]
  414040:	adc    ah,BYTE PTR [edx]
  414042:	rol    BYTE PTR [esi+0x1f],0x32
  414046:	and    edx,DWORD PTR [esi+0x1e]
  414049:	sahf   
  41404a:	int3   
  41404b:	loop   0x413fef
  41404d:	call   0x763cb19a
  414052:	test   DWORD PTR [ebp-0x6828919e],ebx
  414058:	mov    ch,0x49
  41405a:	lds    edx,FWORD PTR [esi+edx*8-0x3cd3b3ff]
  414061:	cmp    esp,DWORD PTR [eax+0x7e]
  414064:	std    
  414065:	arpl   WORD PTR [esi-0x30],di
  414068:	adc    eax,0x9513f944
  41406d:	adc    BYTE PTR [esi+0x6d],dh
  414070:	xor    al,BYTE PTR [ebx-0x61]
  414073:	and    al,0x3c
  414075:	cmp    esp,DWORD PTR [esi-0x50]
  414078:	neg    BYTE PTR [ecx-0x5]
  41407b:	ins    DWORD PTR es:[edi],dx
  41407c:	cmp    ebp,eax
  41407e:	sbb    DWORD PTR ds:0x7628d332,esi
  414084:	into   
  414085:	xchg   DWORD PTR [ebx-0x69],ebp
  414088:	fcmovbe st,st(7)
  41408a:	(bad)  
  41408b:	add    dh,dh
  41408d:	(bad)
  414091:	fs aam 0x7c
  414094:	add    ecx,DWORD PTR [edx]
  414096:	outs   dx,DWORD PTR ds:[esi]
  414097:	or     ecx,esp
  414099:	cmp    al,0x8c
  41409b:	and    al,0x17
  41409d:	nop
  41409e:	add    al,0x4
  4140a0:	mov    bh,0xe7
  4140a2:	mov    al,ds:0xdbe81f60
  4140a7:	push   esi
  4140a8:	and    BYTE PTR [esi+0x3],al
  4140ab:	jle    0x41405e
  4140ad:	or     al,0xa2
  4140af:	xchg   esp,eax
  4140b0:	lods   eax,DWORD PTR ds:[esi]
  4140b1:	stos   DWORD PTR es:[edi],eax
  4140b2:	ficom  DWORD PTR [ecx-0x45]
  4140b5:	das    
  4140b6:	fadd   st,st(3)
  4140b8:	jecxz  0x41404d
  4140ba:	pop    edx
  4140bb:	xchg   ebx,eax
  4140bc:	cld    
  4140bd:	imul   ebp,DWORD PTR [edx+0x2de6665d],0x834029d5
  4140c7:	retf   
  4140c8:	inc    ecx
  4140c9:	push   0xcd7f0fd2
  4140ce:	fisubr WORD PTR [esp+ebp*8]
  4140d1:	or     DWORD PTR [edx+0x48],ebx
  4140d4:	inc    ebx
  4140d5:	mov    ds:0xc43bef16,al
  4140da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140db:	push   eax
  4140dc:	add    esp,eax
  4140de:	lahf   
  4140df:	dec    ebx
  4140e0:	jnp    0x41407a
  4140e2:	into   
  4140e3:	adc    al,0xf7
  4140e5:	outs   dx,BYTE PTR ds:[esi]
  4140e6:	jecxz  0x41412a
  4140e8:	mov    ebp,0xd8021e18
  4140ed:	mov    bl,0xc6
  4140ef:	es dec eax
  4140f1:	pop    esp
  4140f2:	cmp    DWORD PTR [esi],ebx
  4140f4:	add    esi,esi
  4140f6:	jp     0x4140c3
  4140f8:	pop    ds
  4140f9:	push   esp
  4140fa:	aaa    
  4140fb:	pop    ds
  4140fc:	cdq    
  4140fd:	cmp    BYTE PTR [ecx*8+0x4b27b17b],al
  414104:	jb     0x414158
  414106:	retf   
  414107:	push   DWORD PTR [edx]
  414109:	pop    ss
  41410a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41410b:	jge    0x414112
  41410d:	jno    0x414170
  41410f:	test   eax,0x200abb70
  414114:	xor    al,0x5e
  414116:	inc    esi
  414117:	jecxz  0x414155
  414119:	pop    ss
  41411a:	scas   al,BYTE PTR es:[edi]
  41411b:	(bad)  
  41411c:	push   ecx
  41411d:	lahf   
  41411e:	sti    
  41411f:	cmp    al,BYTE PTR [edi+0x552569ed]
  414125:	mov    ebp,DWORD PTR [ebx]
  414127:	inc    ebp
  414128:	fild   DWORD PTR [ecx-0x66]
  41412b:	cmc    
  41412c:	sub    DWORD PTR [ebp-0x2301323d],eax
  414132:	sbb    dh,BYTE PTR [ebp-0x7f3a5d1a]
  414138:	and    eax,0x1d31229d
  41413d:	clc    
  41413e:	xlat   BYTE PTR ds:[ebx]
  41413f:	nop
  414140:	mov    bh,0x9b
  414142:	enter  0xd32f,0x34
  414146:	fwait
  414147:	lods   eax,DWORD PTR ds:[si]
  414149:	(bad)  
  41414a:	das    
  41414b:	das    
  41414c:	cwde   
  41414d:	xor    esi,esi
  41414f:	retf   0x7845
  414152:	retf   0x25af
  414155:	mov    ?,WORD PTR [ebp+edx*4+0x51]
  414159:	sbb    eax,0x8e43daca
  41415e:	pop    ebx
  41415f:	gs cmp edi,ebx
  414162:	jge    0x414175
  414164:	pop    ds
  414165:	mov    DWORD PTR [ecx+0x1cb60df9],ebp
  41416b:	int3   
  41416c:	inc    esp
  41416d:	pop    edx
  41416e:	ins    BYTE PTR es:[edi],dx
  41416f:	stc    
  414170:	fs pushf 
  414172:	pop    ecx
  414173:	lock jp 0x414158
  414176:	ss sub eax,0xb7f8fa1f
  41417c:	jbe    0x4141c6
  41417e:	iret   
  41417f:	pusha  
  414180:	dec    ebp
  414181:	ror    DWORD PTR [ebp+0x6ec6cc7d],cl
  414187:	jg     0x414152
  414189:	add    ch,al
  41418b:	jne    0x41413e
  41418d:	dec    ebx
  41418e:	mov    ebp,0x98ca16eb
  414193:	adc    BYTE PTR [edi+0x68],dh
  414196:	mov    cl,BYTE PTR [esi+0x62a4fac]
  41419c:	or     ecx,ebp
  41419e:	push   edi
  41419f:	and    al,0x28
  4141a1:	or     BYTE PTR [esi+0x23],dh
  4141a4:	call   0x9c14:0x6f9d850e
  4141ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141ac:	or     DWORD PTR [ebx],edi
  4141ae:	out    dx,eax
  4141af:	dec    ecx
  4141b0:	dec    eax
  4141b1:	jmp    0x6e8d69d0
  4141b6:	stc    
  4141b7:	inc    ebx
  4141b8:	adc    ch,ch
  4141ba:	ja     0x41413f
  4141bc:	xlat   BYTE PTR ds:[ebx]
  4141bd:	push   es
  4141be:	mov    ecx,0x8c797b9b
  4141c3:	arpl   WORD PTR [ebx+0x4b],bx
  4141c6:	jmp    0xeee6eb13
  4141cb:	dec    ecx
  4141cc:	xchg   esi,eax
  4141cd:	out    dx,al
  4141ce:	scas   eax,DWORD PTR es:[edi]
  4141cf:	xchg   BYTE PTR [eax+0x15],ah
  4141d2:	imul   edi,DWORD PTR [ebx],0x8f147de3
  4141d8:	mov    ds,WORD PTR ds:0x8def5a10
  4141de:	mov    bh,0xb6
  4141e0:	jp     0x414179
  4141e2:	mov    ch,0xc8
  4141e4:	xchg   edx,edx
  4141e6:	lods   al,BYTE PTR ds:[esi]
  4141e7:	jbe    0x414206
  4141e9:	pop    edi
  4141ea:	xchg   ebx,eax
  4141eb:	jp     0x4141b8
  4141ed:	ss dec esp
  4141ef:	xlat   BYTE PTR ds:[ebx]
  4141f0:	cmc    
  4141f1:	js     0x41426a
  4141f3:	dec    edi
  4141f4:	aam    0x65
  4141f6:	mov    ds:0x1a64b831,al
  4141fb:	shl    BYTE PTR [esp+ebx*4-0x14187894],0xce
  414203:	xchg   ecx,eax
  414204:	cdq    
  414205:	add    al,0x53
  414207:	inc    ebx
  414208:	arpl   WORD PTR [eax-0x3],cx
  41420b:	leave  
  41420c:	sub    al,bh
  41420e:	scas   al,BYTE PTR es:[edi]
  41420f:	xor    eax,0x713f3f94
  414214:	dec    ebx
  414215:	ds push cs
  414217:	shl    DWORD PTR [esi+0x62],0x71
  41421b:	jle    0x414201
  41421d:	out    0x88,eax
  41421f:	fidivr DWORD PTR [edi]
  414221:	stc    
  414222:	out    dx,eax
  414223:	cmp    DWORD PTR [ebx-0x2f],ebp
  414226:	jmp    0x414240
  414228:	mov    WORD PTR [ebx-0x2aeed55],cs
  41422e:	push   ebp
  41422f:	mov    esp,0xe1fe4c56
  414234:	mov    eax,DWORD PTR ds:0x9c9a6ef2
  41423a:	mov    eax,0xfd8f3581
  41423f:	into   
  414240:	loopne 0x41420f
  414242:	stos   BYTE PTR es:[edi],al
  414243:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414245:	or     BYTE PTR [edi-0x6c],dh
  414248:	mov    ds:0x18fe8e2d,al
  41424d:	and    ch,dh
  41424f:	fisub  WORD PTR [ebx]
  414251:	fadd   QWORD PTR [edi]
  414253:	lock enter 0x45d6,0xe2
  414258:	mov    bl,0x2
  41425a:	loopne 0x414296
  41425c:	scas   eax,DWORD PTR es:[edi]
  41425d:	jg     0x414254
  41425f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414260:	mov    al,ds:0x478dfc49
  414265:	addr16 out 0x72,eax
  414268:	pop    ecx
  414269:	jl     0x414287
  41426b:	(bad)
  41426e:	mov    bl,0x72
  414270:	mov    bl,0x10
  414272:	sahf   
  414273:	xor    eax,0x24
  414276:	test   eax,0xd20c243e
  41427b:	loope  0x414222
  41427d:	sub    eax,0xfbc483da
  414282:	fidiv  WORD PTR [ebp+esi*8+0x9761f68]
  414289:	and    bh,dh
  41428b:	into   
  41428c:	test   DWORD PTR [eax+0xe],0x297455f1
  414293:	scas   eax,DWORD PTR es:[edi]
  414294:	push   ds
  414295:	cli    
  414296:	xchg   esi,eax
  414297:	retf   
  414298:	sub    esi,esi
  41429a:	mov    ds:0x48dba4d,al
  41429f:	inc    edx
  4142a0:	jae    0x41426f
  4142a2:	sub    ah,BYTE PTR [edi+0x728d1b95]
  4142a8:	dec    esi
  4142a9:	sub    edi,DWORD PTR [ebx+0x60dd212]
  4142af:	dec    ebx
  4142b0:	cld    
  4142b1:	or     al,0x1
  4142b3:	pop    ebx
  4142b4:	sbb    edx,edi
  4142b6:	stc    
  4142b7:	cmp    BYTE PTR [edi],0x2b
  4142ba:	dec    DWORD PTR [ecx+0x76]
  4142bd:	adc    eax,0x6c18220d
  4142c2:	std    
  4142c3:	lods   al,BYTE PTR ds:[esi]
  4142c4:	outs   dx,BYTE PTR ds:[esi]
  4142c5:	jo     0x414253
  4142c7:	inc    ebx
  4142c8:	mov    dh,cl
  4142ca:	int    0xec
  4142cc:	push   edi
  4142cd:	xchg   BYTE PTR [edx+eax*8],dl
  4142d0:	retf   
  4142d1:	cli    
  4142d2:	push   0xc197ddb
  4142d7:	outs   dx,DWORD PTR ds:[esi]
  4142d8:	add    BYTE PTR [ecx],bl
  4142da:	mov    esp,0xaeb00f38
  4142df:	pop    ecx
  4142e0:	jmp    0x75201046
  4142e5:	fstp   TBYTE PTR [esi-0x61b5cc1c]
  4142eb:	mov    esi,0xbccb5b33
  4142f0:	jb     0x414310
  4142f2:	mov    eax,0x2376b2c3
  4142f7:	mov    bl,0x63
  4142f9:	dec    edx
  4142fa:	dec    esi
  4142fb:	iret   
  4142fc:	pusha  
  4142fd:	and    dh,BYTE PTR [edi-0x7e]
  414300:	addr16 push esp
  414302:	neg    DWORD PTR [edx+0x633a6b14]
  414308:	xchg   DWORD PTR [ecx-0x79619b85],ebp
  41430e:	dec    eax
  41430f:	fcomp  st(5)
  414311:	cmp    DWORD PTR [ecx],ebx
  414313:	imul   edi
  414315:	outs   dx,BYTE PTR ds:[esi]
  414316:	cmp    ebp,DWORD PTR [ebp+0x1bd5b4ae]
  41431c:	mov    BYTE PTR [esp+ebp*8+0x30],0xc6
  414321:	addr16 leave 
  414323:	pop    ebx
  414324:	clc    
  414325:	lods   eax,DWORD PTR ds:[esi]
  414326:	xchg   edx,eax
  414327:	in     al,dx
  414328:	ins    BYTE PTR es:[edi],dx
  414329:	mov    ebp,0x9245c35a
  41432e:	lods   eax,DWORD PTR ds:[esi]
  41432f:	and    DWORD PTR [ebp+0x7dbb0527],edi
  414335:	aad    0xcb
  414337:	fs add al,0x93
  41433a:	adc    dl,BYTE PTR [esi+ecx*2+0x7]
  41433e:	xor    eax,0x977c9a90
  414343:	fwait
  414344:	xchg   edi,eax
  414345:	cmp    BYTE PTR [ecx-0x11],dl
  414348:	and    dl,cl
  41434a:	xor    esp,DWORD PTR [eax+0x30]
  41434d:	(bad)  
  41434e:	mov    DWORD PTR [ecx+0x19],ecx
  414351:	xor    bl,BYTE PTR [edi-0x32]
  414354:	or     BYTE PTR ds:0xb73ecef,bh
  41435a:	ficom  WORD PTR [edi-0x2c]
  41435d:	or     eax,0x6017009
  414362:	xchg   BYTE PTR [ebx+ebp*4],dl
  414365:	and    eax,0xb6b4cadc
  41436a:	es push cs
  41436c:	add    bl,BYTE PTR [edx]
  41436e:	imul   ebp,DWORD PTR ds:0xf342da67,0xd
  414375:	pop    eax
  414376:	ins    BYTE PTR es:[di],dx
  414378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414379:	arpl   cx,dx
  41437b:	cmp    BYTE PTR [ebp-0x6ee5e7a5],ch
  414381:	jnp    0x4143d3
  414383:	call   0x8694119b
  414388:	loopne 0x4143f6
  41438a:	enter  0xd224,0x21
  41438e:	mov    DWORD PTR [esi-0x44],ebp
  414391:	xchg   ebp,eax
  414392:	mov    dl,0x4
  414394:	in     al,0x28
  414396:	mov    DWORD PTR [ebp-0x73bb5eb7],esp
  41439c:	std    
  41439d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41439e:	sub    ah,cl
  4143a0:	sub    DWORD PTR [eax+0x5c15a03d],esi
  4143a6:	jmp    0x414427
  4143a8:	iret   
  4143a9:	xor    bl,BYTE PTR [edx-0x7444ca48]
  4143af:	jmp    0xb8d1df
  4143b4:	sub    BYTE PTR [eax],al
  4143b6:	jnp    0x41441d
  4143b8:	sar    DWORD PTR [edi-0xcce2844],0x8d
  4143bf:	movzx  esp,bl
  4143c2:	sub    eax,0xa79a7837
  4143c7:	xchg   edx,eax
  4143c8:	je     0x414417
  4143ca:	retf   0x802
  4143cd:	neg    BYTE PTR [edx+eax*2+0x24]
  4143d1:	int3   
  4143d2:	push   es
  4143d3:	test   BYTE PTR [esi-0x4e],cl
  4143d6:	push   ebx
  4143d7:	add    ch,BYTE PTR [ebp+0x4e]
  4143da:	imul   edx,DWORD PTR [edi+0x268aa508],0xffffff91
  4143e1:	cmp    bh,BYTE PTR [eax+0x36]
  4143e4:	(bad)  
  4143e5:	jl     0x4143e7
  4143e7:	push   ebx
  4143e8:	xchg   ebx,eax
  4143e9:	mov    dl,0x67
  4143eb:	cli    
  4143ec:	std    
  4143ed:	mov    esp,0x580e3ea6
  4143f2:	adc    al,BYTE PTR [edi-0x400be500]
  4143f8:	sbb    eax,0x1ea4fd8e
  4143fd:	push   esi
  4143fe:	ror    cl,1
  414400:	xchg   esi,eax
  414401:	jp     0x41447f
  414403:	pop    ds
  414404:	dec    esi
  414405:	iret   
  414406:	push   edx
  414407:	fadd   QWORD PTR [edx+0x36]
  41440b:	test   al,0xb3
  41440d:	jne    0x414444
  41440f:	jg     0x4143a9
  414411:	(bad)
  414416:	cmp    esp,esp
  414418:	jg     0x41447a
  41441a:	push   esi
  41441b:	cmp    ch,ch
  41441d:	lds    esp,FWORD PTR [ebx+0x5a]
  414420:	inc    eax
  414421:	jmp    0xfeefecbe
  414426:	mov    edx,0xf87bc17a
  41442b:	xlat   BYTE PTR ds:[ebx]
  41442c:	icebp  
  41442d:	or     DWORD PTR ds:0x57f5f73e,esp
  414433:	aam    0xd8
  414435:	or     ecx,DWORD PTR [edx-0x1d7d0112]
  41443b:	in     al,dx
  41443c:	jmp    FWORD PTR [edx+edi*8-0x14]
  414440:	adc    eax,0xb6c153f2
  414445:	ret    0xbbc8
  414448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414449:	stc    
  41444a:	xchg   esi,eax
  41444b:	test   BYTE PTR [edx],0x92
  41444e:	js     0x414483
  414450:	into   
  414451:	mov    eax,ds:0x49b96b15
  414456:	dec    ecx
  414457:	mov    al,0x6c
  414459:	(bad)  
  41445a:	push   ecx
  41445b:	es test eax,0xfad625ad
  414461:	arpl   WORD PTR [ebx+ecx*8-0xb],si
  414465:	sar    BYTE PTR [edi+ecx*4],cl
  414468:	sub    al,0x55
  41446a:	outs   dx,BYTE PTR ds:[esi]
  41446b:	shr    BYTE PTR [eax],cl
  41446d:	fnstenv [ebx+0x6b]
  414470:	push   ds
  414471:	jae    0x4144e3
  414473:	js     0x4144ba
  414475:	fist   DWORD PTR [ecx+0x6a42a7b6]
  41447b:	pop    edx
  41447c:	or     BYTE PTR [eax],bl
  41447e:	xchg   ecx,eax
  41447f:	in     eax,0xa0
  414481:	scas   eax,DWORD PTR es:[edi]
  414482:	dec    ecx
  414483:	jmp    0x643cf2d2
  414488:	xor    BYTE PTR [esi+0x7393c589],al
  41448e:	cmp    DWORD PTR [ecx],esp
  414490:	add    BYTE PTR [edi-0x6b77451d],bl
  414496:	mov    al,BYTE PTR [ebx+ebx*4]
  414499:	rol    esi,0x4c
  41449c:	xor    DWORD PTR [edi],eax
  41449e:	addr16 xchg ebx,eax
  4144a0:	jo     0x41448e
  4144a2:	arpl   WORD PTR [edi],si
  4144a4:	(bad)
  4144a8:	iret   
  4144a9:	icebp  
  4144aa:	push   ecx
  4144ab:	ds sub eax,0x31e0d13a
  4144b1:	sahf   
  4144b2:	adc    dl,BYTE PTR [ebx+0x54]
  4144b5:	ficom  DWORD PTR [edi-0xb]
  4144b8:	mov    cl,0xf
  4144ba:	cmp    DWORD PTR [edx-0x7],esi
  4144bd:	and    DWORD PTR [eax],ebp
  4144bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144c0:	out    dx,al
  4144c1:	adc    DWORD PTR [edx-0x71491294],edx
  4144c7:	scas   al,BYTE PTR es:[edi]
  4144c8:	jns    0x4144d5
  4144ca:	(bad)  
  4144cb:	sbb    al,BYTE PTR [eax]
  4144cd:	nop
  4144ce:	push   0xed27a975
  4144d3:	mov    al,0x27
  4144d5:	mov    bl,0x29
  4144d7:	adc    DWORD PTR [ebx+0x9],ebp
  4144da:	xor    al,0x81
  4144dc:	mov    esp,0x5adae506
  4144e1:	adc    BYTE PTR [ebx-0x69baf98a],0xaf
  4144e8:	sti    
  4144e9:	cmp    DWORD PTR [esi],0xefbfeade
  4144ef:	push   edx
  4144f0:	jnp    0x41456b
  4144f2:	adc    DWORD PTR [ebx-0xa],edi
  4144f5:	into   
  4144f6:	mov    edx,DWORD PTR [ebp+0x52]
  4144f9:	sbb    ah,BYTE PTR [esp+edx*2-0x8]
  4144fd:	and    BYTE PTR [ebp-0x14d30ee1],dh
  414503:	cdq    
  414504:	shl    BYTE PTR [eax+esi*8-0x56],cl
  414508:	xchg   edx,eax
  414509:	xchg   edi,eax
  41450a:	xchg   ch,dh
  41450c:	(bad)  [esi]
  41450e:	cmp    BYTE PTR [eax+ebx*4+0x68],al
  414512:	cmp    bh,bh
  414514:	and    ebp,DWORD PTR [esi+0x79]
  414517:	div    DWORD PTR [ecx+0x15]
  41451a:	push   0x6dd12df7
  41451f:	in     eax,dx
  414520:	daa    
  414521:	cld    
  414522:	iret   
  414523:	outs   dx,BYTE PTR ss:[esi]
  414525:	outs   dx,BYTE PTR ds:[esi]
  414526:	mov    esp,0xb6ed98e9
  41452b:	mov    BYTE PTR [ebx],ah
  41452d:	mov    cl,0x62
  41452f:	adc    ecx,DWORD PTR [ecx]
  414531:	test   eax,0xcacf40c1
  414536:	adc    al,ah
  414538:	pop    es
  414539:	fadd   QWORD PTR [edx]
  41453b:	jo     0x41457b
  41453d:	pop    ss
  41453e:	popa   
  41453f:	cdq    
  414540:	pop    ecx
  414541:	and    esp,DWORD PTR [edi+0x5f92035f]
  414547:	pop    ds
  414548:	mov    edx,DWORD PTR [ebx+0x43c50e3a]
  41454e:	xchg   edx,eax
  41454f:	jo     0x41455c
  414551:	outs   dx,BYTE PTR ds:[esi]
  414552:	add    bh,BYTE PTR [ecx]
  414554:	pop    ds
  414555:	enter  0xb3d1,0xb
  414559:	hlt    
  41455a:	push   edi
  41455b:	les    edi,FWORD PTR [eax]
  41455d:	sub    eax,0x80788507
  414562:	or     eax,0x509cbaf0
  414567:	call   FWORD PTR [ebx]
  414569:	addr16 in al,0x87
  41456c:	pop    edx
  41456d:	(bad)  
  41456e:	test   al,0x2a
  414570:	inc    esi
  414571:	setnp  BYTE PTR [esp+eax*2+0x77]
  414576:	ret    0x58d
  414579:	loopne 0x414589
  41457b:	add    BYTE PTR [esi],dl
  41457d:	mov    dl,BYTE PTR [ebp-0x58]
  414580:	push   cs
  414581:	adc    eax,0x23a3af65
  414586:	push   0xffffffda
  414588:	cmp    eax,0x7cf7046e
  41458d:	pop    ebx
  41458e:	inc    ebp
  41458f:	sbb    eax,0xffffff95
  414592:	add    al,0x10
  414594:	fsubr  QWORD PTR [edi+edx*4+0x3dd5068b]
  41459b:	and    bl,al
  41459d:	adc    esi,esp
  41459f:	sbb    DWORD PTR [edi+eax*1],ebp
  4145a2:	adc    al,0x94
  4145a4:	cs es loope 0x4145e8
  4145a8:	mov    ah,0x30
  4145aa:	xor    al,0x6e
  4145ac:	xchg   ecx,eax
  4145ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ae:	dec    edx
  4145af:	dec    edx
  4145b0:	(bad)  
  4145b1:	out    dx,al
  4145b2:	hlt    
  4145b3:	xchg   ebp,eax
  4145b4:	ret    0x4573
  4145b7:	adc    BYTE PTR [edx-0x39046a14],0x46
  4145be:	aad    0x4
  4145c0:	jb     0x4145a5
  4145c2:	lods   eax,DWORD PTR ds:[esi]
  4145c3:	mov    ch,BYTE PTR [eax-0xe71b6c2]
  4145c9:	push   eax
  4145ca:	inc    ch
  4145cc:	sbb    eax,0x97fe92e4
  4145d1:	inc    ebp
  4145d2:	add    ebp,DWORD PTR [ebp-0x26]
  4145d5:	and    dh,BYTE PTR [ebp+0x172eda8d]
  4145db:	push   0x38
  4145dd:	pushf  
  4145de:	and    bh,BYTE PTR [esp+0x42]
  4145e2:	(bad)  
  4145e3:	retf   
  4145e4:	sub    eax,DWORD PTR [ebx+0x63]
  4145e7:	je     0x4145e7
  4145e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145eb:	mov    DWORD PTR [ebx],edx
  4145ed:	xor    BYTE PTR fs:[eax+0x21],0x8c
  4145f2:	pushf  
  4145f3:	lea    edi,[ecx-0x8aa3524]
  4145f9:	jle    0x41459e
  4145fb:	mov    bh,0xa
  4145fd:	inc    ecx
  4145fe:	ins    DWORD PTR es:[edi],dx
  4145ff:	pop    ecx
  414600:	cli    
  414601:	stc    
  414602:	jecxz  0x414610
  414604:	sbb    ebx,DWORD PTR [edx]
  414606:	mov    bl,0x83
  414608:	and    al,BYTE PTR [eax-0x7f21b1d8]
  41460e:	mov    esp,0xa3f7cca
  414613:	push   esi
  414614:	jg     0x4145b1
  414616:	sbb    BYTE PTR [esp+eax*4],0x2e
  41461a:	and    eax,0x77692a1c
  41461f:	in     al,dx
  414620:	xor    BYTE PTR [ebx],bh
  414622:	jns    0x4145c3
  414624:	dec    edx
  414625:	mov    WORD PTR [ebp-0x3b],?
  414628:	cmp    al,0x92
  41462a:	xchg   ebp,esp
  41462c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41462d:	aad    0x93
  41462f:	out    0x87,al
  414631:	sbb    eax,0x3dbf8a50
  414636:	icebp  
  414637:	cmp    al,0xaf
  414639:	cdq    
  41463a:	jns    0x4145e0
  41463c:	mov    cl,0xe4
  41463e:	arpl   WORD PTR [edi+0x18],bp
  414641:	test   eax,0xfb847a51
  414646:	aaa    
  414647:	mov    ecx,eax
  414649:	(bad)  
  41464a:	xor    esp,DWORD PTR [edi]
  41464c:	(bad)  
  41464d:	mov    WORD PTR [edx+0x33],ds
  414650:	out    dx,al
  414651:	fst    st(4)
  414653:	push   esi
  414654:	sub    cl,BYTE PTR [esi-0x7c]
  414657:	mov    ecx,0xd6954562
  41465c:	pushf  
  41465d:	dec    edi
  41465e:	cmp    eax,0x1d52329
  414663:	sub    BYTE PTR [ebx+0x1f647bb],cl
  414669:	push   edi
  41466a:	into   
  41466b:	or     edi,DWORD PTR [eax]
  41466d:	call   0xad3b:0x608610b4
  414674:	jmp    0x7c6a:0x9c7177c1
  41467b:	outs   dx,BYTE PTR ds:[esi]
  41467c:	adc    al,0x80
  41467e:	inc    esp
  41467f:	inc    esp
  414680:	cs test al,0xfa
  414683:	xor    DWORD PTR [ecx],edi
  414685:	sub    al,0xdb
  414687:	add    esi,0x57
  41468a:	int3   
  41468b:	push   ebx
  41468c:	jecxz  0x414618
  41468e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41468f:	sub    eax,0x5cdbb442
  414694:	mov    bl,0x2b
  414696:	aas    
  414697:	cwde   
  414698:	jp     0x4146bf
  41469a:	popf   
  41469b:	sub    eax,0x8d1a1294
  4146a0:	and    eax,0x9228edf
  4146a5:	out    dx,eax
  4146a6:	mov    dh,0xff
  4146a8:	sub    BYTE PTR [eax],0x81
  4146ab:	inc    esi
  4146ac:	mov    ds:0xb557187f,al
  4146b1:	nop
  4146b2:	xlat   BYTE PTR ds:[ebx]
  4146b3:	jno    0x41467b
  4146b5:	(bad)  
  4146b6:	cmp    al,0xe7
  4146b8:	in     eax,0xa4
  4146ba:	cmc    
  4146bb:	dec    esp
  4146bc:	bound  esi,QWORD PTR [esi]
  4146be:	xchg   ebp,eax
  4146bf:	in     al,0x2e
  4146c1:	(bad)  
  4146c2:	push   ss
  4146c3:	nop
  4146c4:	imul   edx,eax,0x5
  4146c7:	retf   
  4146c8:	imul   ebx,DWORD PTR [ebx],0x4f
  4146cb:	daa    
  4146cc:	sbb    ch,BYTE PTR [eax+eiz*2-0x5b]
  4146d0:	ins    BYTE PTR es:[edi],dx
  4146d1:	pop    edi
  4146d2:	jae    0x4146bf
  4146d4:	les    eax,FWORD PTR [edi]
  4146d6:	dec    eax
  4146d7:	inc    eax
  4146d8:	adc    esi,DWORD PTR [ebx+0x160aa5d8]
  4146de:	cmp    DWORD PTR [ecx],esi
  4146e0:	sar    BYTE PTR ds:0xbd00002a,1
  4146e6:	rcr    DWORD PTR [esi-0x46],cl
  4146e9:	out    dx,al
  4146ea:	pusha  
  4146eb:	adc    BYTE PTR [esp+esi*1],bh
  4146ee:	and    DWORD PTR [eax+ebp*2-0x36f787ab],ebp
  4146f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146f6:	repz ret 
  4146f8:	or     ebp,DWORD PTR [edx+0x130196bd]
  4146fe:	outs   dx,BYTE PTR ds:[esi]
  4146ff:	mov    ds,esp
  414701:	adc    edx,DWORD PTR [ecx]
  414703:	and    esi,DWORD PTR [eax]
  414705:	into   
  414706:	inc    esp
  414707:	les    esp,FWORD PTR [ecx-0x38]
  41470a:	(bad)  
  41470b:	jns    0x41476e
  41470d:	mov    ah,0xcf
  41470f:	dec    eax
  414710:	in     al,dx
  414711:	pop    ecx
  414712:	pop    ds
  414713:	mov    ecx,0x5b380679
  414718:	jbe    0x4146aa
  41471a:	repz sub BYTE PTR [ecx+ebx*8+0x7f],cl
  41471f:	(bad)  
  414720:	out    0x8a,al
  414722:	inc    edi
  414723:	sbb    ch,BYTE PTR [eax-0x3a02213]
  414729:	or     cl,BYTE PTR [ebx-0x73]
  41472c:	xor    eax,ecx
  41472e:	repnz xor esp,DWORD PTR [edi-0x345f0c19]
  414735:	dec    edi
  414736:	and    DWORD PTR [eax+0x1a18b89b],esi
  41473c:	in     al,0xf3
  41473e:	or     bl,BYTE PTR [esi+0x4eba07a8]
  414744:	inc    edi
  414745:	lods   al,BYTE PTR ds:[esi]
  414746:	into   
  414747:	xchg   esi,eax
  414748:	mov    edi,0x1f6a660a
  41474d:	out    dx,al
  41474e:	push   ebx
  41474f:	mov    ecx,DWORD PTR [edi]
  414751:	in     eax,dx
  414752:	pop    ebx
  414753:	outs   dx,BYTE PTR ds:[esi]
  414754:	jmp    0x14f8:0x9c39e844
  41475b:	lods   eax,DWORD PTR ds:[esi]
  41475c:	jb     0x414765
  41475e:	adc    ecx,ebp
  414760:	cmp    dh,BYTE PTR [edi]
  414762:	rcl    BYTE PTR [ecx],1
  414764:	(bad)  
  414765:	mov    esi,0x9ab76cb8
  41476a:	out    dx,eax
  41476b:	aaa    
  41476c:	arpl   si,cx
  41476e:	lds    ecx,FWORD PTR [edi]
  414770:	cmp    DWORD PTR es:[edi+0x1b],0x6d
  414775:	or     DWORD PTR [esi],0x46
  414778:	xchg   ebx,eax
  414779:	adc    eax,0xd67d4fab
  41477e:	scas   eax,DWORD PTR es:[edi]
  41477f:	push   esi
  414780:	imul   DWORD PTR [ebp+0x57]
  414783:	jge    0x414713
  414785:	leave  
  414786:	outs   dx,BYTE PTR ds:[esi]
  414787:	mov    ch,0xc2
  414789:	xlat   BYTE PTR ds:[ebx]
  41478a:	or     al,0xed
  41478c:	repnz xchg esi,eax
  41478e:	inc    ebx
  41478f:	or     eax,DWORD PTR [esi-0x24]
  414792:	shr    BYTE PTR [eax],1
  414794:	or     eax,0xc1eb33ae
  414799:	sub    DWORD PTR [edi-0x39],ebx
  41479c:	mov    edx,0xa404bcb5
  4147a1:	xchg   edx,eax
  4147a2:	gs mov al,0x0
  4147a5:	pop    esi
  4147a6:	in     eax,0x6c
  4147a8:	dec    eax
  4147a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147aa:	loop   0x414730
  4147ac:	mov    dl,ah
  4147ae:	sahf   
  4147af:	cdq    
  4147b0:	push   ebp
  4147b1:	cmp    BYTE PTR [eax-0x6794d0f5],bh
  4147b7:	mov    ds,WORD PTR cs:[edx+0x65]
  4147bb:	pop    ebp
  4147bc:	out    0xe8,al
  4147be:	int    0x5c
  4147c0:	sbb    edi,edi
  4147c2:	adc    al,dh
  4147c4:	adc    eax,0x2f5f67cd
  4147c9:	test   ecx,esi
  4147cb:	leave  
  4147cc:	sub    eax,0xdd425914
  4147d1:	dec    eax
  4147d2:	inc    ebp
  4147d3:	mov    BYTE PTR [edi+0x707ee565],al
  4147d9:	xor    al,cl
  4147db:	bound  esi,QWORD PTR [ecx+0x49]
  4147de:	stos   DWORD PTR es:[edi],eax
  4147df:	imul   ebp,DWORD PTR [ebp-0x2ed3c984],0x8abe939c
  4147e9:	mov    esp,0x733ac278
  4147ee:	aaa    
  4147ef:	call   0xb28b1cd6
  4147f4:	or     ah,ch
  4147f6:	clc    
  4147f7:	retf   0xce04
  4147fa:	add    BYTE PTR [esi-0x10e2b827],cl
  414800:	or     eax,0x40e94046
  414805:	sti    
  414806:	outs   dx,BYTE PTR ds:[esi]
  414807:	loop   0x4147e6
  414809:	out    0x59,al
  41480b:	cmp    al,0x3d
  41480d:	add    eax,0x302fb0c4
  414812:	jecxz  0x4147da
  414814:	inc    esp
  414815:	jb     0x4147d7
  414817:	inc    ah
  414819:	test   DWORD PTR [ecx],0x2c1f43a8
  41481f:	mov    edx,0x76515ae9
  414824:	shl    BYTE PTR [ecx+ebx*2-0x26],cl
  414828:	faddp  st(7),st
  41482a:	sbb    al,0xf7
  41482c:	dec    ebp
  41482d:	dec    eax
  41482e:	mov    al,0xd6
  414830:	fsubp  st(4),st
  414832:	(bad)  
  414833:	std    
  414834:	retf   
  414835:	fmul   QWORD PTR cs:[edi-0x49110849]
  41483c:	sar    BYTE PTR [ebp+0x61],cl
  41483f:	fst    QWORD PTR [ebx-0x66c10748]
  414845:	out    0xce,al
  414847:	or     ecx,0xffffffdd
  41484a:	ss jbe 0x414885
  41484d:	fcom   st(3)
  41484f:	in     eax,0x6f
  414851:	test   DWORD PTR [edi-0x55e3de0e],esi
  414857:	jmp    0x138264c7
  41485c:	mov    ds:0x80b0bd19,al
  414861:	push   esi
  414862:	mov    ecx,0x75edc938
  414867:	cwde   
  414868:	mov    edx,0x56f8d4b
  41486d:	push   ecx
  41486e:	test   BYTE PTR [edx],ah
  414870:	pop    edx
  414871:	dec    esp
  414872:	adc    esp,DWORD PTR [ecx+ebp*2-0x8]
  414876:	push   esp
  414877:	inc    ebp
  414878:	push   cs
  414879:	fcomp  DWORD PTR [ecx+0x5a]
  41487c:	sbb    eax,0x3854552
  414881:	mov    ds:0xde668622,al
  414886:	add    DWORD PTR [ebx-0x2a0411b9],ecx
  41488c:	nop
  41488d:	loope  0x41483f
  41488f:	dec    ebx
  414890:	inc    edx
  414891:	adc    cl,BYTE PTR [edi-0x29]
  414894:	loopne 0x41482c
  414896:	aam    0x70
  414898:	mov    eax,0xc46adbd2
  41489d:	inc    edx
  41489e:	inc    esi
  41489f:	inc    esi
  4148a0:	stos   BYTE PTR es:[edi],al
  4148a1:	pusha  
  4148a2:	adc    al,0xd2
  4148a4:	aaa    
  4148a5:	in     eax,0x74
  4148a7:	js     0x414882
  4148a9:	dec    ecx
  4148aa:	sub    DWORD PTR [eax+esi*2+0x57],edi
  4148ae:	adc    eax,0x3086080c
  4148b3:	iret   
  4148b4:	daa    
  4148b5:	mov    al,0x5b
  4148b7:	repz enter 0x1d55,0xb8
  4148bc:	pop    ss
  4148bd:	jbe    0x414911
  4148bf:	xchg   ebp,eax
  4148c0:	ja     0x414932
  4148c2:	stc    
  4148c3:	mov    esi,0x3c979d64
  4148c8:	xchg   edx,eax
  4148c9:	jo     0x4148a6
  4148cb:	mov    ah,0xb4
  4148cd:	fimul  WORD PTR [edi+0x184659bd]
  4148d3:	cld    
  4148d4:	add    al,0xce
  4148d6:	mov    eax,DWORD PTR [edi+0x1d]
  4148d9:	ds (bad) 
  4148db:	das    
  4148dc:	cs sub edx,ecx
  4148df:	lock mov cl,0x9c
  4148e2:	(bad)  
  4148e3:	dec    ebp
  4148e4:	das    
  4148e5:	mov    ebx,0x34ec46f7
  4148ea:	rcr    al,1
  4148ec:	bound  ebx,QWORD PTR [eax+0x47]
  4148ef:	jge    0x4148f7
  4148f1:	xchg   edi,eax
  4148f2:	mov    bh,0xb5
  4148f4:	push   esp
  4148f5:	sahf   
  4148f6:	jo     0x414885
  4148f8:	aaa    
  4148f9:	jae    0x414966
  4148fb:	fs out dx,al
  4148fd:	xchg   ebp,eax
  4148fe:	scas   al,BYTE PTR es:[edi]
  4148ff:	(bad)  [edx]
  414901:	adc    ah,BYTE PTR [esi-0x49e82cd4]
  414907:	push   edi
  414908:	ret    0x6918
  41490b:	int3   
  41490c:	jns    0x4148bb
  41490e:	repnz and eax,DWORD PTR [ebx+0xff9ddd3]
  414915:	ror    ebx,cl
  414917:	shl    dh,cl
  414919:	pushf  
  41491a:	and    ebp,DWORD PTR [ebx-0x63bd6fa0]
  414920:	int3   
  414921:	jno    0x414991
  414923:	call   0x94726626
  414928:	inc    esp
  414929:	outs   dx,DWORD PTR ds:[esi]
  41492a:	push   edx
  41492b:	cdq    
  41492c:	mov    bl,0x66
  41492e:	inc    ebp
  41492f:	jl     0x414955
  414931:	retf   
  414932:	outs   dx,BYTE PTR ds:[esi]
  414933:	stos   DWORD PTR es:[edi],eax
  414934:	xor    eax,0xca90d975
  414939:	lock add eax,0x829bb948
  41493f:	sub    DWORD PTR [ecx+eax*2+0x343d3de8],eax
  414946:	cld    
  414947:	lahf   
  414948:	and    dl,ch
  41494a:	leave  
  41494b:	push   eax
  41494c:	lea    ebx,[ebp+edx*4-0x6d04305e]
  414953:	xchg   ebx,eax
  414954:	mov    gs,WORD PTR [ebx]
  414956:	ret    
  414957:	cwde   
  414958:	sbb    ecx,DWORD PTR [edx-0x2c]
  41495b:	or     al,0xa6
  41495d:	lahf   
  41495e:	(bad)  
  41495f:	in     al,dx
  414960:	repnz or BYTE PTR ds:0x8d86c294,ah
  414967:	pop    ds
  414968:	hlt    
  414969:	xor    BYTE PTR [ebp+0x8],al
  41496c:	mov    al,ds:0x78dab8cb
  414971:	mov    dh,0x32
  414973:	dec    eax
  414974:	or     eax,0xb86a8868
  414979:	mov    edx,0xa39ea169
  41497e:	add    eax,0x90b25063
  414983:	and    ebp,ebp
  414985:	cld    
  414986:	ror    BYTE PTR [edx],cl
  414988:	aad    0xa4
  41498a:	xor    al,0x2e
  41498c:	cmc    
  41498d:	bound  edi,QWORD PTR [ebp-0x3b]
  414990:	mov    eax,ds:0x1ae62027
  414995:	test   DWORD PTR cs:[edi],edi
  414998:	add    BYTE PTR [edx+0x54],cl
  41499b:	dec    ecx
  41499c:	pop    es
  41499d:	or     edi,ebp
  41499f:	lahf   
  4149a0:	retf   0x30b8
  4149a3:	jecxz  0x414989
  4149a5:	pop    ebp
  4149a6:	mov    ds:0x9344e870,al
  4149ab:	js     0x414953
  4149ad:	repnz mov bh,0x71
  4149b0:	push   0xc0fdf8a3
  4149b5:	sbb    eax,0xb6075b3c
  4149ba:	mov    DWORD PTR ds:0x36a8bc52,ebp
  4149c0:	mul    DWORD PTR [ebp-0x60]
  4149c3:	cli    
  4149c4:	adc    al,0x8a
  4149c6:	sub    DWORD PTR [ecx+0x21029f9c],ebp
  4149cc:	rol    DWORD PTR [ebx-0x674fac52],0xb
  4149d3:	xor    BYTE PTR [ebx-0x14],bh
  4149d6:	call   0x7e609362
  4149db:	xor    BYTE PTR [esi],bh
  4149dd:	jecxz  0x41496c
  4149df:	inc    ebp
  4149e0:	mov    ebp,0x28230bc1
  4149e5:	and    DWORD PTR [ebp+0x66],edi
  4149e8:	mov    gs:0xa61f3b64,al
  4149ee:	push   eax
  4149ef:	es lahf 
  4149f1:	ffree  st(2)
  4149f3:	das    
  4149f4:	sub    bh,bl
  4149f6:	jge    0x414a1d
  4149f8:	adc    edi,DWORD PTR [edi+ecx*4-0x2859375c]
  4149ff:	inc    esi
  414a00:	mov    ah,0xed
  414a02:	xor    BYTE PTR [eiz*2+0x2c1626c6],bl
  414a09:	mov    ds:0xa584a31a,eax
  414a0e:	retf   0x1acc
  414a11:	not    DWORD PTR [esi-0x33]
  414a14:	jmp    0x8bf8:0x54dad937
  414a1b:	jecxz  0x4149bc
  414a1d:	jp     0x4149ec
  414a1f:	dec    ebp
  414a20:	mov    WORD PTR [esi+0x61],es
  414a23:	pop    eax
  414a24:	sbb    esi,DWORD PTR [edx]
  414a26:	xlat   BYTE PTR ds:[ebx]
  414a27:	loopne 0x4149be
  414a29:	nop
  414a2a:	sub    ecx,DWORD PTR gs:0x87192905
  414a31:	retf   
  414a32:	adc    al,0xa0
  414a34:	outs   dx,BYTE PTR ds:[esi]
  414a35:	mov    esi,0x21d0d49e
  414a3a:	dec    edi
  414a3b:	mov    esp,0xc7986c6d
  414a40:	adc    eax,0x18f1876
  414a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a46:	cmp    ch,ch
  414a48:	pop    ebx
  414a49:	hlt    
  414a4a:	jb     0x414a2b
  414a4c:	mov    al,0x26
  414a4e:	std    
  414a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a50:	jnp    0x414acc
  414a52:	pop    esi
  414a53:	cmp    DWORD PTR [ecx+edi*2-0x6204b9ab],ebx
  414a5a:	or     al,0x50
  414a5c:	imul   eax,DWORD PTR [edx],0x2f
  414a5f:	jecxz  0x414a30
  414a61:	cmp    eax,0x135ac5e5
  414a66:	cmp    bh,BYTE PTR [esi]
  414a68:	xor    DWORD PTR [ebx-0x6a],edx
  414a6b:	adc    bl,0xcb
  414a6e:	xchg   esi,eax
  414a6f:	sub    eax,0x728ec417
  414a74:	dec    esi
  414a75:	test   BYTE PTR [edx-0x1e1dacc7],cl
  414a7b:	ja     0x414ad9
  414a7d:	push   esp
  414a7e:	push   ecx
  414a7f:	pop    ebx
  414a80:	push   0xfffffff0
  414a82:	mov    ds:0x3cf84eb5,al
  414a87:	push   0xffffffd6
  414a89:	cld    
  414a8a:	pop    es
  414a8b:	das    
  414a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a8d:	cmp    BYTE PTR [ebp+0x2e450801],bh
  414a93:	jp     0x414b0a
  414a95:	mov    ch,0x19
  414a97:	call   0xdbac:0xd53e3fc6
  414a9e:	sub    esi,ebp
  414aa0:	sub    eax,0xcca92f5b
  414aa5:	pop    ss
  414aa6:	mov    al,bh
  414aa8:	aaa    
  414aa9:	neg    dx
  414aac:	push   cs
  414aad:	xor    eax,0xae56528
  414ab2:	sbb    ebx,DWORD PTR [edx]
  414ab4:	inc    esi
  414ab5:	mov    al,ds:0x9f99826d
  414aba:	cld    
  414abb:	pop    ecx
  414abc:	inc    ebp
  414abd:	cli    
  414abe:	xchg   DWORD PTR [esi],eax
  414ac0:	jnp    0x414aa1
  414ac2:	mov    ebp,0xe4dadcf9
  414ac7:	mov    dh,0x4a
  414ac9:	test   DWORD PTR [edi+esi*8],eax
  414acc:	inc    edi
  414acd:	mov    edi,eax
  414acf:	fmul   st(7),st
  414ad1:	repz cdq 
  414ad3:	stos   DWORD PTR es:[edi],eax
  414ad4:	add    dl,BYTE PTR [edx]
  414ad6:	mov    dl,0x8e
  414ad8:	xor    al,0xed
  414ada:	ret    
  414adb:	lds    ebp,FWORD PTR [esi]
  414add:	out    0x31,eax
  414adf:	clc    
  414ae0:	or     eax,0xf90225cf
  414ae5:	xor    eax,0x7622546
  414aea:	sub    esp,ecx
  414aec:	or     al,0xd4
  414aee:	dec    ecx
  414aef:	jmp    0x5226:0xfa2fc5b1
  414af6:	(bad)  
  414af7:	mov    ebp,0x3dbe3cad
  414afc:	sbb    eax,0x125f6603
  414b01:	(bad)  
  414b02:	pop    edx
  414b03:	push   ebx
  414b04:	lods   al,BYTE PTR ds:[esi]
  414b05:	aam    0xab
  414b07:	arpl   sp,di
  414b09:	aaa    
  414b0a:	ins    DWORD PTR es:[edi],dx
  414b0b:	and    BYTE PTR [ebx+0x52],bl
  414b0e:	pop    edx
  414b0f:	sbb    DWORD PTR [eax+edi*4],esp
  414b12:	in     eax,dx
  414b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b14:	mov    ds:0xafeae972,eax
  414b19:	xchg   BYTE PTR [ecx+0x2f],ch
  414b1c:	or     DWORD PTR [esi+0x5b],esi
  414b1f:	add    al,0xd7
  414b21:	int    0x70
  414b23:	in     eax,0x2f
  414b25:	adc    eax,0x3421eaac
  414b2a:	lahf   
  414b2b:	mov    WORD PTR [esi],?
  414b2d:	jmp    0x2bcc6248
  414b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b33:	sbb    al,0x51
  414b35:	out    0x8e,eax
  414b37:	pop    ds
  414b38:	rcr    BYTE PTR [ebx],cl
  414b3a:	inc    eax
  414b3b:	jle    0x414b9b
  414b3d:	fild   QWORD PTR [esi-0x4d]
  414b40:	add    eax,0x7a231e70
  414b45:	inc    edx
  414b46:	loopne 0x414b61
  414b48:	xchg   BYTE PTR [eax-0x7682fe97],dh
  414b4e:	imul   edx,DWORD PTR [ebp+0x3c],0xf8cf2e6d
  414b55:	adc    bl,ch
  414b57:	adc    eax,0xbe7dbef0
  414b5c:	push   ds
  414b5d:	fcomip st,st(6)
  414b5f:	push   esi
  414b60:	idiv   BYTE PTR [edx+0x726569ab]
  414b66:	stc    
  414b67:	(bad)  
  414b68:	lods   al,BYTE PTR ds:[esi]
  414b69:	in     eax,dx
  414b6a:	adc    bh,al
  414b6c:	pusha  
  414b6d:	push   edx
  414b6e:	push   ebx
  414b6f:	ror    BYTE PTR [esi+0x28],cl
  414b72:	adc    BYTE PTR ss:0x48139139,bh
  414b79:	dec    edi
  414b7a:	dec    esp
  414b7b:	sbb    al,0xe1
  414b7d:	xlat   BYTE PTR ds:[ebx]
  414b7e:	pop    esp
  414b7f:	fst    QWORD PTR [ebp+0x100fd9cf]
  414b85:	rol    BYTE PTR [ebx+esi*8-0xb559edc],cl
  414b8c:	cmp    ebx,0x73973aa3
  414b92:	jle    0x414b9c
  414b94:	int3   
  414b95:	mov    dl,0xff
  414b97:	jecxz  0x414c08
  414b99:	into   
  414b9a:	dec    ecx
  414b9b:	loope  0x414bb5
  414b9d:	mov    al,ds:0x47aac406
  414ba2:	cmp    DWORD PTR [ebp+0x40d04429],ecx
  414ba8:	std    
  414ba9:	push   ebx
  414baa:	sub    eax,0x556e41d8
  414baf:	int3   
  414bb0:	test   DWORD PTR [esi-0x1a],ebp
  414bb3:	add    al,0x70
  414bb5:	pop    edi
  414bb6:	jo     0x414bad
  414bb8:	sub    al,0xf7
  414bba:	cmp    eax,0x8d8ed55a
  414bbf:	dec    eax
  414bc0:	ss js  0x414bfe
  414bc3:	fwait
  414bc4:	mov    al,ds:0x6df90faf
  414bc9:	stos   BYTE PTR es:[edi],al
  414bca:	mov    dh,dh
  414bcc:	lods   al,BYTE PTR ds:[esi]
  414bcd:	in     al,0xf8
  414bcf:	lock stc 
  414bd1:	sub    ch,BYTE PTR [ecx]
  414bd3:	inc    ebx
  414bd4:	jmp    0x4ddc:0x3a103e27
  414bdb:	xchg   ecx,eax
  414bdc:	std    
  414bdd:	sbb    BYTE PTR [ebx],0x35
  414be0:	out    0x8c,eax
  414be2:	mov    edi,es
  414be4:	or     eax,0x9a94332c
  414be9:	mov    ds:0x6e591ca4,eax
  414bee:	jle    0x414be1
  414bf0:	stos   DWORD PTR es:[edi],eax
  414bf1:	mov    ebp,0x6f5f31b8
  414bf6:	mov    esp,0x94a80a98
  414bfb:	xor    dl,BYTE PTR ss:[bx+di+0x1e5b]
  414c01:	adc    eax,edi
  414c03:	sbb    BYTE PTR [ecx+0x2b7a7ac1],0xbc
  414c0a:	sbb    al,0x20
  414c0c:	dec    edx
  414c0d:	jo     0x414c1d
  414c0f:	push   ebp
  414c10:	dec    esi
  414c11:	xor    DWORD PTR [eax+ecx*8-0x1f],esi
  414c15:	add    eax,0x1a97b37c
  414c1a:	jbe    0x414bb1
  414c1c:	ret    0xfed9
  414c1f:	out    dx,al
  414c20:	out    dx,al
  414c21:	outs   dx,DWORD PTR ds:[esi]
  414c22:	and    ebp,DWORD PTR [edx-0x80]
  414c25:	adc    ch,BYTE PTR [eax]
  414c27:	or     DWORD PTR [ebx+0x1c2a12d],edi
  414c2d:	fwait
  414c2e:	pop    ss
  414c2f:	shr    DWORD PTR [edx],1
  414c31:	ror    DWORD PTR fs:[esp+edx*4-0x4f],0xc
  414c37:	adc    DWORD PTR [esi-0x2a3c0bdd],edi
  414c3d:	out    0x1d,al
  414c3f:	or     dl,BYTE PTR [ebp+eax*1-0x14b99bc5]
  414c46:	out    0x71,eax
  414c48:	ficomp DWORD PTR [ecx]
  414c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c4b:	jp     0x414bdd
  414c4d:	cmp    esi,0xffffffe1
  414c50:	addr16 lock jo 0x414c9d
  414c54:	jl     0x414cd3
  414c56:	sbb    ecx,esp
  414c58:	addr16 jp 0x414be6
  414c5b:	xor    BYTE PTR [edi+0x74],cl
  414c5e:	arpl   WORD PTR [di],sp
  414c61:	bound  edi,QWORD PTR [ebx+0x4ab4e131]
  414c67:	pop    esi
  414c68:	(bad)  
  414c69:	adc    bl,dh
  414c6b:	popf   
  414c6c:	(bad)  
  414c6d:	stos   BYTE PTR es:[edi],al
  414c6e:	xor    BYTE PTR [ecx-0x10],dh
  414c71:	cmp    eax,ebx
  414c73:	in     al,dx
  414c74:	cmp    BYTE PTR [esi],cl
  414c76:	and    ah,BYTE PTR [ecx+0x754962ba]
  414c7c:	aam    0xe5
  414c7e:	xchg   ecx,eax
  414c7f:	xchg   ebx,eax
  414c80:	mov    edi,0x3f201eb7
  414c85:	lods   al,BYTE PTR ds:[esi]
  414c86:	out    dx,al
  414c87:	push   esi
  414c88:	sub    esp,DWORD PTR [edx+0x3e56029f]
  414c8e:	ja     0x414cd6
  414c90:	mov    BYTE PTR [edi+edx*2-0x27],cl
  414c94:	inc    ebp
  414c95:	test   BYTE PTR [ebx+0x2d38cb18],dl
  414c9b:	mov    esi,0xcb380757
  414ca0:	je     0x414c3d
  414ca2:	mov    edx,0x94e688c7
  414ca7:	jnp    0x414d25
  414ca9:	pop    ebp
  414caa:	scas   al,BYTE PTR es:[edi]
  414cab:	(bad)  
  414cac:	ror    ah,1
  414cae:	or     ch,BYTE PTR [ebp+0x47]
  414cb1:	push   esi
  414cb2:	cdq    
  414cb3:	sub    al,0x7
  414cb5:	inc    eax
  414cb6:	xchg   ebp,eax
  414cb7:	sahf   
  414cb8:	sub    bl,BYTE PTR [esi]
  414cba:	xor    ecx,DWORD PTR [eiz*1+0x35801e06]
  414cc1:	inc    ebp
  414cc2:	neg    DWORD PTR [edx-0x1ca42e11]
  414cc8:	loop   0x414cb0
  414cca:	retf   0x2ca4
  414ccd:	mov    esp,cs
  414ccf:	lds    ebx,FWORD PTR [edx]
  414cd1:	scas   eax,DWORD PTR es:[edi]
  414cd2:	adc    DWORD PTR [eax+0x2a],ebx
  414cd5:	loop   0x414c79
  414cd7:	sub    eax,0xe3a2d067
  414cdc:	sub    edi,edi
  414cde:	sbb    BYTE PTR [edx+esi*1-0x4d19eb23],ch
  414ce5:	jmp    0xd092493a
  414cea:	sub    edi,DWORD PTR [ebx+0x1b707a45]
  414cf0:	ret    0x28a4
  414cf3:	mov    bh,BYTE PTR [edi-0x6d7c1ae2]
  414cf9:	ja     0x414d19
  414cfb:	in     al,dx
  414cfc:	and    eax,esi
  414cfe:	shr    DWORD PTR fs:[esi-0x4ae2ac25],1
  414d05:	in     al,dx
  414d06:	mov    esi,0x11cfb3f0
  414d0b:	inc    eax
  414d0c:	jg     0x414d22
  414d0e:	clc    
  414d0f:	rol    BYTE PTR [eax+eiz*8],0xea
  414d13:	dec    esi
  414d14:	mov    ch,0xe9
  414d16:	jmp    0x414d3a
  414d18:	imul   edi,DWORD PTR [ebx],0xffffff99
  414d1b:	mov    edi,0x93a6b09b
  414d20:	or     DWORD PTR [ebx],edx
  414d22:	and    esi,esi
  414d24:	lock xchg esi,eax
  414d26:	jle    0x414d69
  414d28:	fnsave [ebp+0xbf7eead]
  414d2e:	xlat   BYTE PTR ds:[ebx]
  414d2f:	inc    edx
  414d30:	pop    es
  414d31:	jge    0x414cd6
  414d33:	sub    eax,0xefd5bfcc
  414d38:	push   esi
  414d39:	inc    esi
  414d3a:	int    0x17
  414d3c:	xor    dl,BYTE PTR ds:0x4137313e
  414d42:	aas    
  414d43:	stos   BYTE PTR es:[edi],al
  414d44:	loope  0x414d2f
  414d46:	in     eax,dx
  414d47:	sar    bl,cl
  414d49:	sub    esi,edi
  414d4b:	cmp    cl,bl
  414d4d:	scas   al,BYTE PTR es:[edi]
  414d4e:	mov    ds:0x5cb4d6f3,al
  414d53:	arpl   WORD PTR [ebx-0xd],cx
  414d56:	dec    ebp
  414d57:	daa    
  414d58:	mov    ebx,DWORD PTR [edi+0x1f]
  414d5b:	(bad)  
  414d5d:	mov    bl,0x52
  414d5f:	and    DWORD PTR [ebp-0x74],0x3a
  414d63:	ret    
  414d64:	pop    edi
  414d65:	lods   al,BYTE PTR ds:[esi]
  414d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d67:	shl    al,1
  414d69:	sar    BYTE PTR [edi-0x1],0x51
  414d6d:	out    0xaa,al
  414d6f:	push   edi
  414d70:	les    edx,FWORD PTR [esi]
  414d72:	mov    BYTE PTR [ecx+0x14],cl
  414d75:	sub    eax,0x8731deab
  414d7a:	jg     0x414de0
  414d7c:	int    0x43
  414d7e:	xchg   BYTE PTR [esi-0x2],ah
  414d81:	push   ss
  414d82:	int3   
  414d83:	aad    0xc8
  414d85:	mov    ebp,0xbda3b4ff
  414d8a:	aaa    
  414d8b:	mov    eax,ds:0x36203a1c
  414d90:	bound  esp,QWORD PTR fs:[eax-0x10]
  414d94:	add    BYTE PTR [ecx-0x5e],ah
  414d97:	push   ebx
  414d98:	add    esp,DWORD PTR [esi+ebx*4]
  414d9b:	es retf 
  414d9d:	fs stos BYTE PTR es:[edi],al
  414d9f:	bound  ebx,QWORD PTR [esi+ebx*2]
  414da2:	shr    DWORD PTR [edi],0x7e
  414da5:	xor    al,0x17
  414da7:	adc    ebp,DWORD PTR [ebx-0x6d]
  414daa:	aam    0x3d
  414dac:	add    eax,0x5429f5be
  414db1:	das    
  414db2:	std    
  414db3:	addr16 inc ecx
  414db5:	and    bh,BYTE PTR [ecx-0x36]
  414db8:	loopne 0x414d4f
  414dba:	sub    bh,BYTE PTR [edx-0x32]
  414dbd:	in     eax,0xb0
  414dbf:	xor    ecx,edi
  414dc1:	pop    edx
  414dc2:	add    edi,DWORD PTR [ebx+0x47a954d7]
  414dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dc9:	mov    bl,BYTE PTR [eax+eiz*2-0x16]
  414dcd:	stos   BYTE PTR es:[edi],al
  414dce:	jne    0x414dff
  414dd0:	xor    bl,BYTE PTR [edx]
  414dd2:	scas   al,BYTE PTR es:[edi]
  414dd3:	mov    eax,0x5cf4d512
  414dd8:	jb     0x414e50
  414dda:	in     al,0xdd
  414ddc:	(bad)  
  414ddd:	mov    ebp,0x54282475
  414de2:	scas   eax,DWORD PTR es:[edi]
  414de3:	xchg   edi,eax
  414de4:	sti    
  414de5:	ins    DWORD PTR es:[edi],dx
  414de6:	out    dx,al
  414de7:	(bad)  
  414de8:	stc    
  414de9:	jns    0x414e4b
  414deb:	add    eax,0xc73d2a6a
  414df0:	or     eax,0x95ecab19
  414df5:	sbb    dl,BYTE PTR [edx+edi*1-0x52]
  414df9:	std    
  414dfa:	retf   0xf05
  414dfd:	out    dx,al
  414dfe:	jno    0x414e39
  414e00:	arpl   WORD PTR [ecx],cx
  414e02:	nop
  414e03:	fcom   DWORD PTR [eax]
  414e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e06:	mov    bh,0x1a
  414e08:	add    DWORD PTR ds:[edi],0xffffffee
  414e0c:	enter  0x5896,0x44
  414e10:	or     bl,cl
  414e12:	add    ebx,DWORD PTR ds:0x322ca50
  414e18:	fs ins BYTE PTR es:[edi],dx
  414e1a:	mov    eax,ds:0x386fb5b4
  414e1f:	scas   al,BYTE PTR es:[edi]
  414e20:	pop    ebp
  414e21:	cdq    
  414e22:	stc    
  414e23:	mov    esi,0xe5d472fa
  414e28:	mov    dl,0xba
  414e2a:	into   
  414e2b:	and    ah,dl
  414e2d:	aad    0xb7
  414e2f:	or     al,0xa5
  414e31:	and    eax,0x8bd0dd0b
  414e36:	test   al,0x35
  414e38:	popf   
  414e39:	xchg   ebp,eax
  414e3a:	mov    WORD PTR [eax],cs
  414e3c:	jae    0x414e53
  414e3e:	dec    edx
  414e3f:	adc    DWORD PTR [esi],edx
  414e41:	into   
  414e42:	xchg   ebp,eax
  414e43:	fisttp WORD PTR [edi]
  414e45:	xchg   bh,bl
  414e47:	stos   BYTE PTR es:[edi],al
  414e48:	shl    dl,cl
  414e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e4b:	push   ecx
  414e4c:	mov    esi,DWORD PTR [esi]
  414e4e:	add    eax,0x51221a73
  414e53:	loopne 0x414e9e
  414e55:	adc    ah,cl
  414e57:	xchg   esp,eax
  414e58:	mov    dl,0xf
  414e5a:	or     al,0x6e
  414e5c:	int3   
  414e5d:	jo     0x414eb4
  414e5f:	fs call 0x57f4:0x2e3ceb9b
  414e67:	sar    BYTE PTR [esi-0xe],0xb6
  414e6b:	add    eax,0xfb70bb30
  414e70:	adc    ah,ch
  414e72:	xchg   ebx,eax
  414e73:	aas    
  414e74:	cwde   
  414e75:	push   ebx
  414e76:	loope  0x414e1c
  414e78:	popa   
  414e79:	shl    BYTE PTR [ebx+edi*1],cl
  414e7c:	gs add eax,0x3b51f67b
  414e82:	mov    ds:0xc01e3502,al
  414e87:	mov    ebx,0x358f53ee
  414e8c:	push   ebp
  414e8d:	adc    al,0x23
  414e8f:	(bad)  
  414e90:	loop   0x414ed8
  414e92:	inc    esp
  414e93:	fsub   st,st(5)
  414e95:	aas    
  414e96:	mov    edi,DWORD PTR [eax]
  414e98:	test   cl,0x82
  414e9b:	fisttp WORD PTR [edx+0xf]
  414e9e:	dec    ecx
  414e9f:	push   ss
  414ea0:	inc    ecx
  414ea1:	lock xchg ecx,eax
  414ea3:	sar    BYTE PTR [edi+0x410877c1],cl
  414ea9:	cld    
  414eaa:	mov    ebp,0xce2259ab
  414eaf:	adc    BYTE PTR [ebp-0x3f],0xe
  414eb3:	xor    DWORD PTR [edx],0xffffffbd
  414eb6:	sbb    BYTE PTR [eax],0x68
  414eb9:	push   ss
  414eba:	cmp    dl,al
  414ebc:	sbb    eax,DWORD PTR [ebp+0x48baaa6a]
  414ec2:	pop    eax
  414ec3:	sbb    BYTE PTR [ecx+0x5f227aa0],0xd7
  414eca:	mov    edx,fs
  414ecc:	data16 (bad) 
  414ed0:	fadd   QWORD PTR [ebx-0x4c6cc611]
  414ed6:	mov    ebx,0x540a48bc
  414edb:	arpl   WORD PTR [edi-0x7],bx
  414ede:	test   eax,0xb17ed89
  414ee3:	in     al,dx
  414ee4:	adc    edi,DWORD PTR [ebx+0x1c0d7277]
  414eea:	mov    dl,0x77
  414eec:	out    dx,al
  414eed:	cli    
  414eee:	jne    0x414e9c
  414ef0:	sub    eax,0xd77f8843
  414ef5:	test   ebp,0x7d63d87d
  414efb:	aam    0x31
  414efd:	in     eax,0x10
  414eff:	and    BYTE PTR ds:0xc3b36ab7,bl
  414f05:	mov    edi,0x22c1f144
  414f0a:	into   
  414f0b:	and    cl,BYTE PTR [ecx]
  414f0d:	repnz cmp ebx,DWORD PTR [ecx+esi*2-0x62]
  414f12:	out    dx,eax
  414f13:	lds    ebp,FWORD PTR [ebx+0x8d9efb6]
  414f19:	push   esp
  414f1a:	in     eax,0xb6
  414f1c:	out    0x6,eax
  414f1e:	xchg   edi,eax
  414f1f:	xchg   ebx,eax
  414f20:	cli    
  414f21:	add    edx,ecx
  414f23:	std    
  414f24:	jmp    0x287ce39b
  414f29:	(bad)  
  414f2a:	jae    0x414f78
  414f2c:	inc    edi
  414f2d:	je     0x414ee1
  414f2f:	cmp    BYTE PTR [eax-0x6b],dl
  414f32:	test   DWORD PTR [ecx-0x75b167ba],eax
  414f38:	aas    
  414f39:	adc    ah,BYTE PTR [ecx-0x26]
  414f3c:	or     DWORD PTR [edx],ebp
  414f3e:	lea    ebp,[edi+0x36]
  414f41:	push   edi
  414f42:	pusha  
  414f43:	xchg   edi,eax
  414f44:	push   edx
  414f45:	enter  0x4edf,0x5c
  414f49:	inc    esi
  414f4a:	dec    ebx
  414f4b:	icebp  
  414f4c:	into   
  414f4d:	mov    bh,0x2d
  414f4f:	dec    esp
  414f50:	sbb    edx,edx
  414f52:	push   edx
  414f53:	shl    BYTE PTR [edi+0x2f],1
  414f56:	(bad)  
  414f57:	in     al,0x73
  414f59:	jecxz  0x414fd8
  414f5b:	cmp    BYTE PTR [ecx],ah
  414f5d:	cmp    eax,0xce6bec81
  414f62:	sbb    eax,0x3876f07e
  414f67:	loope  0x414fdb
  414f69:	mov    eax,0x49672cd0
  414f6e:	xchg   DWORD PTR [ecx],esi
  414f70:	mov    DWORD PTR [esi+esi*2+0x63eb5f32],ebx
  414f77:	jmp    0xe97a0b4e
  414f7c:	pusha  
  414f7d:	mov    ds:0x1d5624b4,eax
  414f82:	push   0x78aa43fa
  414f87:	lock or esp,DWORD PTR [esi]
  414f8a:	inc    esi
  414f8b:	sbb    BYTE PTR [esi],0xbd
  414f8e:	xchg   DWORD PTR [ebx+ebx*2],esp
  414f91:	aas    
  414f92:	shl    DWORD PTR [ebp-0x6ffcdf3],1
  414f98:	fwait
  414f99:	sub    ebx,DWORD PTR [eax-0x78]
  414f9c:	sbb    eax,0xf1bd6f0a
  414fa1:	fdivr  st(7),st
  414fa3:	pop    ss
  414fa4:	sbb    BYTE PTR [esi-0x3e],dh
  414fa7:	sbb    bl,BYTE PTR [esi+0x27]
  414faa:	rcr    DWORD PTR [edx],1
  414fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fae:	sti    
  414faf:	jmp    0xd212b295
  414fb4:	mov    bl,0xfc
  414fb6:	jle    0x414f91
  414fb8:	jmp    DWORD PTR [ebx]
  414fba:	inc    ebp
  414fbb:	jae    0x41502b
  414fbd:	fimul  DWORD PTR [esi]
  414fbf:	adc    al,0x8d
  414fc1:	retf   0x8d30
  414fc4:	fwait
  414fc5:	test   al,0xda
  414fc7:	jl     0x414fc9
  414fc9:	push   ds
  414fca:	rcr    edx,0x89
  414fcd:	test   DWORD PTR [esi],edx
  414fcf:	in     al,dx
  414fd0:	pop    ecx
  414fd1:	out    dx,al
  414fd2:	adc    BYTE PTR [eax+ecx*1],dl
  414fd5:	or     al,0xf6
  414fd7:	and    esp,DWORD PTR [edx-0x67e8a469]
  414fdd:	mov    eax,0x664b88e9
  414fe2:	je     0x414f70
  414fe4:	(bad)  
  414fe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fe6:	and    ah,bh
  414fe8:	and    ah,bl
  414fea:	xor    dl,BYTE PTR [ebx+0x60321a61]
  414ff0:	add    eax,eax
  414ff2:	inc    eax
  414ff3:	popa   
  414ff4:	add    BYTE PTR [edi+0x6b],cl
  414ff7:	lahf   
  414ff8:	mov    esi,0x2c4ca080
  414ffd:	faddp  st(6),st
  414fff:	outs   dx,BYTE PTR ds:[esi]
  415000:	test   eax,0x3204f1f9
  415005:	dec    esp
  415006:	call   0x2b638315
  41500b:	lds    edi,FWORD PTR [edx]
  41500d:	je     0x414f9c
  41500f:	addr16 mov edi,0xda4e5b9b
  415015:	add    BYTE PTR [edi-0x2c36797a],dh
  41501b:	mov    edi,0xdafd97c6
  415020:	jge    0x415090
  415022:	frstor [ecx]
  415024:	pop    eax
  415025:	and    DWORD PTR [esi+0x646c2250],ecx
  41502b:	sbb    bh,al
  41502d:	xor    edi,DWORD PTR [eax+edi*8+0x59]
  415031:	mov    ch,0xaf
  415033:	imul   eax,esp,0xffffffb4
  415036:	shl    BYTE PTR [esi+ebp*8-0x51af7dc5],1
  41503d:	(bad)  
  41503e:	jae    0x414fea
  415040:	push   eax
  415041:	mov    ebx,0x2246afdb
  415046:	ror    BYTE PTR ds:0xc0bdc6f4,0xa3
  41504d:	pop    edx
  41504e:	sbb    ebp,ebx
  415050:	jle    0x415051
  415052:	sbb    eax,0xf9f18a16
  415057:	(bad)  
  415058:	pop    ecx
  415059:	out    dx,al
  41505a:	inc    edx
  41505b:	xchg   BYTE PTR [ebx+ebx*1+0x4efffa06],bl
  415062:	xchg   edi,eax
  415063:	aam    0x5
  415065:	leave  
  415066:	adc    DWORD PTR [edi],esp
  415068:	repz sub al,BYTE PTR [ebx]
  41506b:	jnp    0x415089
  41506d:	enter  0xb2f4,0x2
  415071:	add    al,0x90
  415073:	fild   WORD PTR [eax+0x3d5b1ebb]
  41507a:	push   es
  41507b:	inc    eax
  41507c:	scas   al,BYTE PTR es:[edi]
  41507d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41507e:	mov    dl,0x6a
  415080:	in     al,dx
  415081:	mov    cl,0xa6
  415083:	or     BYTE PTR [eax],cl
  415085:	sub    ah,BYTE PTR [eax-0x681b9ae4]
  41508b:	inc    edi
  41508c:	(bad)  [ebp-0x7f]
  41508f:	(bad)  
  415090:	out    dx,al
  415091:	scas   al,BYTE PTR es:[edi]
  415092:	addr16 lahf 
  415094:	stos   DWORD PTR es:[edi],eax
  415095:	test   BYTE PTR [esi+eiz*2+0x10],dl
  415099:	mov    ebp,0xaec0a9ac
  41509e:	jne    0x4150b6
  4150a0:	popf   
  4150a1:	push   ecx
  4150a2:	inc    edi
  4150a3:	inc    eax
  4150a4:	fwait
  4150a5:	xchg   BYTE PTR [edi+0x7549635a],dl
  4150ab:	fstp   QWORD PTR [esp+esi*2]
  4150ae:	mov    ch,0xd6
  4150b0:	ror    esp,cl
  4150b2:	and    DWORD PTR [ebx+0x551cdec4],0x7e
  4150b9:	imul   eax,DWORD PTR [ebx+ebx*1+0x53],0xffffffe6
  4150be:	into   
  4150bf:	push   ebx
  4150c0:	adc    DWORD PTR [eax],ecx
  4150c2:	push   ebp
  4150c3:	imul   esp,DWORD PTR [esi+ebx*1-0x6d],0x9f63de20
  4150cb:	dec    edx
  4150cc:	inc    edi
  4150cd:	dec    esp
  4150ce:	xchg   ecx,eax
  4150cf:	repz retf 
  4150d1:	pushf  
  4150d2:	test   BYTE PTR ds:0xfd13b4bc,bh
  4150d8:	cmp    eax,0xd7264c8a
  4150dd:	push   eax
  4150de:	dec    ebx
  4150df:	dec    edi
  4150e0:	ret    0xed91
  4150e3:	mov    DWORD PTR [eax+eax*4],edi
  4150e6:	xchg   edx,eax
  4150e7:	out    dx,eax
  4150e8:	clc    
  4150e9:	xor    BYTE PTR ds:0x40148ccb,dl
  4150ef:	xchg   ecx,eax
  4150f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f1:	in     al,dx
  4150f2:	out    dx,eax
  4150f3:	cmp    eax,0x2321919c
  4150f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f9:	fcomp  st(3)
  4150fb:	mov    dl,ch
  4150fd:	es pop es
  4150ff:	xchg   DWORD PTR [ebx],ebp
  415101:	mov    edi,DWORD PTR [edi]
  415103:	call   0xc361:0x3e6657d6
  41510a:	stos   BYTE PTR es:[edi],al
  41510b:	loop   0x415164
  41510d:	daa    
  41510e:	add    ah,BYTE PTR [ecx+esi*2-0x79cf48a5]
  415115:	outs   dx,DWORD PTR ds:[esi]
  415116:	stc    
  415117:	sub    bh,BYTE PTR [ebp-0x64]
  41511a:	sbb    DWORD PTR [esi-0x8],ebx
  41511d:	sub    al,0xe9
  41511f:	jle    0x415198
  415121:	or     eax,0x449284c0
  415126:	and    DWORD PTR [ebp+0x6c],esp
  415129:	cli    
  41512a:	(bad)  
  41512c:	push   esi
  41512d:	sahf   
  41512e:	jle    0x415168
  415130:	loope  0x415147
  415132:	pop    ecx
  415133:	push   ss
  415134:	fcmovnu st,st(1)
  415136:	pusha  
  415137:	loopne 0x4151a5
  415139:	lods   al,BYTE PTR ds:[esi]
  41513a:	sbb    eax,0x57bd0c68
  41513f:	adc    eax,0x58c91990
  415144:	xor    ah,BYTE PTR [ebp-0x8]
  415147:	aaa    
  415148:	jl     0x41518b
  41514a:	out    dx,al
  41514b:	test   eax,0xabf2fafe
  415150:	lock pop ds
  415152:	mov    ebp,0x619b4292
  415157:	jae    0x415131
  415159:	sbb    ah,BYTE PTR [eax-0x44]
  41515c:	sub    BYTE PTR [esi],al
  41515e:	jmp    0x2fba:0x3d65b297
  415165:	lea    ebx,[eax]
  415167:	clc    
  415168:	aas    
  415169:	xchg   edx,eax
  41516a:	pop    ds
  41516b:	js     0x4151e4
  41516d:	xchg   edx,eax
  41516e:	inc    esp
  41516f:	stc    
  415170:	cmp    bl,BYTE PTR [esi-0x3818d197]
  415176:	scas   eax,DWORD PTR es:[edi]
  415177:	adc    eax,0x18553a9
  41517c:	sbb    eax,0xb96b2969
  415181:	cmp    BYTE PTR [esi+0x44],cl
  415184:	jo     0x415155
  415186:	mov    edi,0x8e1e93c
  41518b:	div    BYTE PTR [ebx]
  41518d:	and    ah,BYTE PTR [ebp+0x7288516d]
  415193:	push   sp
  415195:	iret   
  415196:	xchg   edi,eax
  415197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415198:	cmp    dl,BYTE PTR [eax+0x3d]
  41519b:	push   edx
  41519c:	out    dx,al
  41519d:	mov    ah,0x9f
  41519f:	add    ah,bh
  4151a1:	dec    ebx
  4151a2:	scas   eax,DWORD PTR es:[edi]
  4151a3:	test   DWORD PTR [edi+0x59f01c94],ecx
  4151a9:	stc    
  4151aa:	neg    bl
  4151ac:	xchg   edx,eax
  4151ad:	lods   al,BYTE PTR ds:[esi]
  4151ae:	sbb    al,ah
  4151b0:	jmp    0x6556:0x79a0709
  4151b7:	adc    DWORD PTR [ecx-0x78],ecx
  4151ba:	inc    eax
  4151bb:	outs   dx,BYTE PTR ds:[esi]
  4151bc:	cld    
  4151bd:	add    eax,0x6b8b39e9
  4151c2:	mov    ecx,0xf1585b9f
  4151c7:	dec    esi
  4151c8:	dec    esi
  4151c9:	(bad)  
  4151ca:	shl    ah,0xc4
  4151cd:	sub    BYTE PTR [edx-0x5e],ch
  4151d0:	(bad)  
  4151d1:	sar    BYTE PTR [ebp+0x59dc7ca3],1
  4151d7:	std    
  4151d8:	cmp    eax,0x875b08f9
  4151dd:	in     al,0x11
  4151df:	lods   eax,DWORD PTR ds:[esi]
  4151e0:	inc    ecx
  4151e1:	fadd   QWORD PTR [ebp+0x65]
  4151e4:	cli    
  4151e5:	repz in eax,dx
  4151e7:	sbb    edx,esi
  4151e9:	out    0x50,al
  4151eb:	inc    edi
  4151ec:	mov    dl,0xe6
  4151ee:	cli    
  4151ef:	push   ebx
  4151f0:	iret   
  4151f1:	je     0x415207
  4151f3:	aad    0xb3
  4151f5:	enter  0x3eed,0x3d
  4151f9:	cmp    al,0xa0
  4151fb:	jmp    0x4151e9
  4151fd:	add    al,0x66
  4151ff:	mov    WORD PTR [edx],fs
  415201:	lahf   
  415202:	sar    BYTE PTR [edx+0x61c31e5f],1
  415208:	xchg   edi,ebx
  41520a:	in     al,dx
  41520b:	mov    dl,0xd0
  41520d:	xchg   edi,eax
  41520e:	add    DWORD PTR [ebp+0x41d2bad5],edi
  415214:	ins    DWORD PTR es:[edi],dx
  415215:	int3   
  415216:	aaa    
  415217:	mov    edx,0xe7d6a1f
  41521c:	sbb    eax,0x533062be
  415221:	aam    0x0
  415223:	xor    eax,0x9bd142bf
  415228:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41522a:	push   ebp
  41522b:	jp     0x4151bd
  41522d:	ins    DWORD PTR es:[edi],dx
  41522e:	or     al,BYTE PTR [ebp-0x47]
  415231:	add    DWORD PTR [edi-0x4a],esi
  415234:	xchg   BYTE PTR [esi-0x2e],bl
  415237:	dec    ebx
  415238:	in     eax,dx
  415239:	icebp  
  41523a:	(bad)  
  41523b:	dec    esi
  41523c:	sub    eax,DWORD PTR ds:0xc7275cfe
  415242:	retf   
  415243:	repz inc esi
  415245:	or     DWORD PTR [edi+eiz*1+0xf51b18f],0xffffffc5
  41524d:	ss in  al,dx
  41524f:	jns    0x41523a
  415251:	cmp    al,0x2b
  415253:	jecxz  0x4151ec
  415255:	jns    0x415203
  415257:	sbb    DWORD PTR [ecx+0x66bb3f58],0x3e4433d3
  415261:	push   ebp
  415262:	and    bl,BYTE PTR [eax+edx*4-0x20]
  415266:	repnz mov ss,WORD PTR [ecx+ebx*8+0x2]
  41526b:	aaa    
  41526c:	xor    cl,BYTE PTR [esi]
  41526e:	(bad)  
  41526f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  415271:	jmp    0x8b5365bb
  415276:	sbb    eax,0x2af6e2d9
  41527b:	rsqrtps xmm0,XMMWORD PTR [edi+0x50f04ac5]
  415282:	jno    0x41526d
  415284:	and    al,BYTE PTR [ecx-0x6bcc9046]
  41528a:	(bad)  
  41528b:	je     0x41530a
  41528d:	mov    WORD PTR [eax-0x4aafdd62],ds
  415293:	scas   al,BYTE PTR es:[edi]
  415294:	repz cld 
  415296:	add    DWORD PTR [ebx-0x50],esi
  415299:	dec    esp
  41529a:	aad    0x95
  41529c:	(bad)  
  41529d:	and    ch,cl
  41529f:	fldenv [esi-0x5a]
  4152a2:	mov    edx,0xad872da4
  4152a7:	xchg   esp,eax
  4152a8:	mov    cl,BYTE PTR [edx+0x7c75bcc7]
  4152ae:	xchg   edx,eax
  4152af:	push   ecx
  4152b0:	pop    esi
  4152b1:	mov    BYTE PTR [edx-0x386a0a7],cl
  4152b7:	push   esi
  4152b8:	mov    eax,0xd439150e
  4152bd:	adc    ecx,DWORD PTR ds:0x2aefba32
  4152c3:	or     eax,0x1587b7b1
  4152c8:	loope  0x4152c3
  4152ca:	inc    DWORD PTR [eax+0x3993fedc]
  4152d0:	ins    BYTE PTR es:[edi],dx
  4152d1:	jb     0x415318
  4152d3:	pop    ss
  4152d4:	jle    0x4152f3
  4152d6:	fsubrp st(0),st
  4152d8:	xor    al,0xd
  4152da:	push   edi
  4152db:	dec    edi
  4152dc:	icebp  
  4152dd:	jle    0x415264
  4152df:	scas   al,BYTE PTR es:[edi]
  4152e0:	push   ds
  4152e1:	mov    edi,0x8f6985f8
  4152e6:	jmp    0x22a2:0x87e60fd0
  4152ed:	inc    ebx
  4152ee:	or     DWORD PTR [ebx-0x413cc17d],edx
  4152f4:	sbb    ax,0xa590
  4152f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152f9:	add    DWORD PTR [ecx],edi
  4152fb:	mov    dl,0xbd
  4152fd:	daa    
  4152fe:	sub    eax,0xfe7482a4
  415303:	rcr    DWORD PTR [eax+0x6c636cca],1
  415309:	outs   dx,BYTE PTR ds:[esi]
  41530a:	pop    es
  41530b:	sti    
  41530c:	aad    0x30
  41530e:	fistp  QWORD PTR [ebx-0x4f]
  415311:	pop    esi
  415312:	ds and eax,0x73486ff4
  415318:	out    0xfb,al
  41531a:	leave  
  41531b:	lahf   
  41531c:	or     ebx,0xffffffa0
  41531f:	mov    dh,0x32
  415321:	push   esp
  415322:	lds    edi,FWORD PTR [ecx+0x7b]
  415325:	dec    esi
  415326:	int    0xc
  415328:	ret    
  415329:	loop   0x4152f2
  41532b:	pusha  
  41532c:	and    ecx,DWORD PTR [eax]
  41532e:	aaa    
  41532f:	fstp   QWORD PTR [ecx-0x44]
  415332:	test   esi,edx
  415334:	sub    al,BYTE PTR [edx]
  415336:	fist   WORD PTR [eax]
  415338:	mov    bh,0x3d
  41533a:	(bad)  
  41533b:	xchg   edi,eax
  41533c:	adc    ah,BYTE PTR [eax-0x68]
  41533f:	fldcw  WORD PTR [ebx]
  415341:	push   ds
  415342:	lahf   
  415343:	adc    ebp,esi
  415345:	xor    ecx,ebp
  415347:	mov    esp,?
  415349:	(bad)  
  41534b:	mov    esp,0x9750b823
  415350:	jge    0x41538a
  415352:	aam    0x34
  415354:	in     eax,0xb3
  415356:	jge    0x41537f
  415358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415359:	test   BYTE PTR [esi],cl
  41535b:	mov    dl,0x2b
  41535d:	faddp  st(4),st
  41535f:	push   eax
  415360:	leave  
  415361:	dec    ebx
  415362:	in     al,0xf6
  415364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415365:	xlat   BYTE PTR ds:[ebx]
  415366:	sbb    esp,eax
  415368:	mov    gs,ebx
  41536a:	cdq    
  41536b:	mov    DWORD PTR [esp+esi*4],ebx
  41536e:	push   esi
  41536f:	push   eax
  415370:	aaa    
  415371:	and    DWORD PTR [ecx+0x64078374],0xfff75923
  41537b:	call   0x922f:0x21721987
  415382:	inc    eax
  415383:	inc    ebp
  415384:	je     0x415359
  415386:	imul   esi,eax,0xffffffd2
  415389:	pop    ebx
  41538a:	addr16 push ecx
  41538c:	scas   al,BYTE PTR es:[edi]
  41538d:	jne    0x4153db
  41538f:	mov    ebp,0x9f324246
  415394:	rol    BYTE PTR [esi],0x67
  415397:	pop    edx
  415398:	jnp    0x4153da
  41539a:	sbb    DWORD PTR [esi+0x46],ebx
  41539d:	fadd   QWORD PTR [eax]
  41539f:	mov    bl,al
  4153a1:	mov    edx,0xa011e5b3
  4153a6:	(bad)  
  4153a7:	jae    0x415399
  4153a9:	or     ebx,DWORD PTR [ebx-0x6d]
  4153ac:	retf   0x6001
  4153af:	xchg   esi,eax
  4153b0:	pushf  
  4153b1:	scas   al,BYTE PTR es:[edi]
  4153b2:	push   cs
  4153b3:	pop    esi
  4153b4:	push   cs
  4153b5:	sub    WORD PTR [edx],cx
  4153b8:	dec    esp
  4153b9:	and    cl,BYTE PTR [ecx+edx*1]
  4153bc:	adc    ch,BYTE PTR [edx]
  4153be:	pop    edi
  4153bf:	neg    DWORD PTR [edi]
  4153c1:	cmp    eax,0xf49cfd4b
  4153c6:	xlat   BYTE PTR ds:[ebx]
  4153c7:	lods   eax,DWORD PTR ds:[esi]
  4153c8:	mov    eax,0xa1e6a5c3
  4153cd:	(bad)  
  4153ce:	fmul   QWORD PTR [eax-0x770a0ebc]
  4153d4:	mov    ecx,0x730f3050
  4153d9:	push   ss
  4153da:	mov    al,ds:0xe7c12253
  4153df:	pop    edi
  4153e0:	sbb    esi,esp
  4153e2:	add    eax,0xd1f7375c
  4153e7:	pop    esp
  4153e8:	sub    edi,DWORD PTR [ebx+0x1]
  4153eb:	mov    ebp,0x6f05e86c
  4153f0:	call   0xd390:0x5932f5be
  4153f7:	add    al,ah
  4153f9:	cmp    BYTE PTR [edx+0x38],0xd6
  4153fd:	adc    eax,0x380255e2
  415402:	jg     0x415399
  415404:	dec    edx
  415405:	adc    BYTE PTR [esi+0x25],bl
  415408:	test   eax,0x36e11ac6
  41540d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41540e:	push   esi
  41540f:	and    al,0x16
  415411:	sub    DWORD PTR [ecx+ecx*4+0x3b],ecx
  415415:	bound  esp,QWORD PTR [edi-0x7dff9d70]
  41541b:	sub    al,BYTE PTR [eax]
  41541d:	jae    0x4153a0
  41541f:	mov    ds:0x58b0d1fd,eax
  415424:	rcl    DWORD PTR [edx+0x376b061f],cl
  41542a:	in     eax,dx
  41542b:	lss    ebx,FWORD PTR [edx-0x78]
  41542f:	jbe    0x4153c0
  415431:	mov    esp,0x5a3e4e9
  415436:	std    
  415437:	jo     0x415494
  415439:	sti    
  41543a:	daa    
  41543b:	mov    ecx,DWORD PTR [eax]
  41543d:	push   edx
  41543e:	xor    cl,BYTE PTR [ebp+edi*2-0x20]
  415442:	cdq    
  415443:	call   0x9982:0xb5af
  415449:	push   es
  41544a:	inc    BYTE PTR [edx+0x375dd899]
  415450:	mov    eax,ds:0xdec6168c
  415455:	loopne 0x4153e5
  415457:	sbb    BYTE PTR [ecx-0x6f],bh
  41545a:	int    0xb9
  41545c:	lods   eax,DWORD PTR ds:[esi]
  41545d:	(bad)  
  41545e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41545f:	(bad)  
  415460:	popf   
  415461:	adc    DWORD PTR [edx],ebx
  415463:	add    al,0x88
  415465:	jg     0x415493
  415467:	mov    fs,WORD PTR [ebp+ebp*1-0x6ce8467]
  41546e:	xor    ebp,esp
  415470:	fdiv   DWORD PTR [ecx-0xd63e82e]
  415476:	mov    dl,0xc6
  415478:	dec    esp
  415479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41547a:	dec    edi
  41547b:	sub    edx,DWORD PTR [ecx]
  41547d:	in     al,dx
  41547e:	pop    esp
  41547f:	data16 mov dl,0x75
  415482:	jno    0x415415
  415484:	adc    DWORD PTR [edx+0x6e866fd8],ecx
  41548a:	jno    0x41540f
  41548c:	mov    DWORD PTR ds:0x540ba375,ebx
  415492:	jae    0x4154e4
  415494:	cmc    
  415495:	call   0x78f:0x34f9de7f
  41549c:	sbb    edx,DWORD PTR [edi]
  41549e:	fnstsw WORD PTR [edx]
  4154a0:	cld    
  4154a1:	dec    ebp
  4154a2:	stos   BYTE PTR es:[edi],al
  4154a3:	loope  0x415430
  4154a5:	push   eax
  4154a6:	xor    BYTE PTR [ebp+0x27],al
  4154a9:	mov    BYTE PTR [edi-0x2b758ee2],0x52
  4154b0:	and    al,0x3b
  4154b2:	cmp    al,0xa2
  4154b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154b5:	(bad)  
  4154b6:	push   eax
  4154b7:	sbb    eax,0x55f3aa99
  4154bc:	pop    ss
  4154bd:	sbb    BYTE PTR [edx-0x55],dh
  4154c0:	lods   al,BYTE PTR ds:[esi]
  4154c1:	scas   eax,DWORD PTR es:[edi]
  4154c2:	retf   
  4154c3:	xor    BYTE PTR [edi-0x75],0x81
  4154c7:	inc    esi
  4154c8:	sbb    eax,0xcc9e67e5
  4154cd:	inc    ebx
  4154ce:	jge    0x415517
  4154d0:	jo     0x415494
  4154d2:	adc    edx,edi
  4154d4:	(bad)  
  4154d5:	mov    edx,0x9dfd3338
  4154da:	adc    ebx,esp
  4154dc:	(bad)  
  4154dd:	or     esi,DWORD PTR ds:0xb0490839
  4154e3:	add    BYTE PTR [edx+0x34],ch
  4154e6:	cli    
  4154e7:	lahf   
  4154e8:	test   BYTE PTR [ebx],0xc7
  4154eb:	fst    QWORD PTR [eax+0x4d]
  4154ee:	push   ebx
  4154ef:	sti    
  4154f0:	pop    DWORD PTR [eax+0x2ad0997b]
  4154f6:	dec    esp
  4154f7:	pop    esi
  4154f8:	pop    DWORD PTR [ebx+0x62640365]
  4154fe:	and    BYTE PTR [ebp-0x151f474b],ah
  415504:	and    al,0x81
  415506:	add    ah,BYTE PTR [eax+eax*4]
  415509:	lea    esi,[edx-0x12053fd9]
  41550f:	outs   dx,DWORD PTR ds:[esi]
  415510:	dec    eax
  415511:	inc    ecx
  415512:	or     al,0xa8
  415514:	dec    edi
  415515:	leave  
  415516:	aam    0xa1
  415518:	test   al,0xf9
  41551a:	packsswb mm2,QWORD PTR [ebx]
  41551d:	mov    dh,0xc4
  41551f:	lods   al,BYTE PTR ds:[esi]
  415520:	popf   
  415521:	xchg   ecx,eax
  415522:	sbb    al,0xab
  415524:	sbb    BYTE PTR [edx-0x6f],dl
  415527:	adc    edx,edi
  415529:	cmp    ebx,0xffffffa8
  41552c:	push   cs
  41552d:	loopne 0x415534
  41552f:	lahf   
  415530:	sub    eax,0xa4849167
  415535:	dec    esi
  415536:	xor    eax,0xeba2d2e2
  41553b:	mov    eax,0x2e69af9c
  415540:	push   0xfffffffa
  415542:	mov    ch,0xd7
  415544:	add    ch,0xa6
  415547:	jno    0x4155a9
  415549:	pop    eax
  41554a:	sbb    al,0x2c
  41554c:	jge    0x415554
  41554e:	sbb    bl,BYTE PTR [edx+0xac39cfa]
  415554:	jne    0x41554e
  415556:	mov    ecx,0x9e654e73
  41555b:	test   ebx,edi
  41555d:	mov    al,ds:0xa6a993d4
  415562:	push   eax
  415563:	outs   dx,BYTE PTR ds:[esi]
  415564:	hlt    
  415565:	inc    edi
  415566:	repnz pop ebx
  415568:	jl     0x41556d
  41556a:	aam    0xa9
  41556c:	xlat   BYTE PTR ds:[ebx]
  41556d:	pop    esi
  41556e:	xor    DWORD PTR [ebx],ebp
  415570:	jne    0x415519
  415572:	aad    0xe4
  415574:	cmp    al,0x97
  415576:	daa    
  415577:	fwait
  415578:	in     eax,0xf
  41557a:	add    eax,0xaafe91dd
  41557f:	popf   
  415580:	and    al,0x7e
  415582:	push   0xcded6581
  415587:	mov    es,ebp
  415589:	pop    ecx
  41558a:	arpl   WORD PTR [ebx+0x1e54b45],bx
  415590:	sub    edx,0xce71448a
  415596:	jo     0x415561
  415598:	mov    esp,0x64a5ed07
  41559d:	push   es
  41559e:	and    al,0xec
  4155a0:	push   edx
  4155a1:	xor    DWORD PTR [edx],ebx
  4155a3:	push   ss
  4155a4:	sub    eax,0x25ae9772
  4155a9:	jnp    0x41554a
  4155ab:	push   0x4cd59d50
  4155b0:	mov    edx,0xb0165845
  4155b5:	sub    al,0x37
  4155b7:	pop    esp
  4155b8:	mov    ds:0x4a4810c9,al
  4155bd:	sbb    cl,bl
  4155bf:	cmp    al,0x71
  4155c1:	int    0x94
  4155c3:	cs iret 
  4155c5:	dec    ebx
  4155c6:	cld    
  4155c7:	(bad)  
  4155c8:	fsubr  QWORD PTR [esi]
  4155ca:	ret    0x67b2
  4155cd:	mov    ah,dl
  4155cf:	adc    cl,cl
  4155d1:	out    dx,eax
  4155d2:	adc    ebx,DWORD PTR [edi+0x350c5c0]
  4155d8:	loope  0x41563c
  4155da:	mov    eax,ds:0x9fd5119d
  4155df:	(bad)  
  4155e0:	idiv   BYTE PTR [edx+0x7ba6b956]
  4155e6:	inc    eax
  4155e7:	or     cl,bh
  4155e9:	dec    edi
  4155ea:	fwait
  4155eb:	sub    edi,esi
  4155ed:	mov    al,0x6a
  4155ef:	and    eax,0x2ca41c9e
  4155f4:	idiv   BYTE PTR [edx]
  4155f6:	bound  esp,QWORD PTR [edi-0x449111bb]
  4155fc:	pop    edx
  4155fd:	add    DWORD PTR [ecx],0xffffffd7
  415600:	icebp  
  415601:	mov    ds:0xe84be4d6,al
  415606:	pop    esi
  415607:	lds    ebp,FWORD PTR [ebp+0x4fd40a15]
  41560d:	xchg   ebx,eax
  41560e:	out    0xc9,eax
  415610:	mov    al,ds:0x721ec036
  415615:	sti    
  415616:	or     eax,0x1f36aaf5
  41561b:	or     al,dh
  41561d:	inc    BYTE PTR ds:0x68c1abf9
  415623:	fisttp DWORD PTR [ecx+ecx*1]
  415626:	sbb    eax,0xf2c6d398
  41562b:	jnp    0x41569a
  41562d:	scas   al,BYTE PTR es:[edi]
  41562e:	std    
  41562f:	lock xor eax,0x42b1ac0
  415635:	mov    ds:0x573624a,al
  41563a:	mov    bl,0x48
  41563c:	pop    ebx
  41563d:	mov    cs,WORD PTR [edx-0x5c734817]
  415643:	cmp    al,0xde
  415645:	cwde   
  415646:	pop    ebx
  415647:	fisub  WORD PTR [eax-0x705013e2]
  41564d:	leave  
  41564e:	pmaxsw mm4,QWORD PTR [edx+0x31]
  415652:	loop   0x415600
  415654:	aam    0xf5
  415656:	in     eax,0xce
  415658:	or     bl,BYTE PTR [edi-0x16]
  41565b:	les    ecx,FWORD PTR [edx+0x42]
  41565e:	fcos   
  415660:	js     0x415694
  415662:	xchg   edi,eax
  415663:	adc    DWORD PTR [eax-0x68c87baa],ebp
  415669:	repz mov edx,0x1742bee7
  41566f:	push   ds
  415670:	fcmovu st,st(5)
  415672:	jae    0x415699
  415674:	push   eax
  415675:	sub    eax,esp
  415677:	call   0x75b0:0x3a9ee52b
  41567e:	popa   
  41567f:	je     0x41568e
  415681:	(bad)  
  415682:	leave  
  415683:	jge    0x415658
  415685:	jns    0x415654
  415687:	popf   
  415688:	mov    bh,0x1b
  41568a:	hlt    
  41568b:	ds hlt 
  41568d:	inc    esp
  41568e:	bound  edi,QWORD PTR [esp+ecx*8-0x79]
  415692:	sub    BYTE PTR [esi+0x35],bl
  415695:	fcmovb st,st(5)
  415697:	loope  0x41569e
  415699:	shr    DWORD PTR [ecx+eiz*2+0x76],0xc1
  41569e:	sbb    al,0xe0
  4156a0:	sub    al,0xa6
  4156a2:	call   0x96ba046
  4156a7:	and    DWORD PTR [eax+0x68],eax
  4156aa:	gs jns 0x415650
  4156ad:	test   BYTE PTR ds:0xda931c79,dh
  4156b3:	repz mov al,0x19
  4156b6:	mov    ds:0xcbbbff75,eax
  4156bb:	mul    BYTE PTR [ecx+0x43]
  4156be:	aam    0x66
  4156c0:	jne    0x41564b
  4156c2:	mov    bh,0xbb
  4156c4:	cs xor eax,0x3e8d1e76
  4156ca:	repz jnp 0x415697
  4156cd:	test   al,0x23
  4156cf:	pop    ebp
  4156d0:	std    
  4156d1:	imul   esi,DWORD PTR [edx],0x2a
  4156d4:	(bad)  
  4156d5:	xor    dh,BYTE PTR [edi+edx*4+0x59]
  4156d9:	les    esp,FWORD PTR [ebp+0x35]
  4156dc:	mov    ds:0xf866746c,eax
  4156e1:	adc    DWORD PTR [esp+esi*1-0x2c288567],ebx
  4156e8:	xchg   ebp,eax
  4156e9:	pop    esi
  4156ea:	test   al,0xb6
  4156ec:	cs cli 
  4156ee:	jns    0x415679
  4156f0:	lea    esp,[eax-0x3c15d1f0]
  4156f6:	cmp    bl,BYTE PTR [edx+ebp*1]
  4156f9:	ficom  DWORD PTR [edi+0x9dda371]
  4156ff:	out    dx,al
  415700:	mov    eax,0x5ae3f65b
  415705:	add    dl,BYTE PTR [ebx-0x5a]
  415708:	mov    eax,cs
  41570a:	mov    BYTE PTR [edx],cl
  41570c:	dec    edi
  41570d:	stos   BYTE PTR es:[edi],al
  41570e:	cs sbb cl,ah
  415711:	dec    esp
  415712:	sbb    BYTE PTR [esi+0x65],0x4c
  415716:	call   0x72ec47cb
  41571b:	sub    BYTE PTR [esi-0x7f],dl
  41571e:	stos   BYTE PTR es:[edi],al
  41571f:	xchg   ebx,eax
  415720:	ror    DWORD PTR gs:[edi+0x27],1
  415724:	or     eax,0xd1d1ab83
  415729:	mov    dh,0xb8
  41572b:	dec    ecx
  41572c:	rol    DWORD PTR [esi+ebx*2-0x12dea1bd],0x0
  415734:	xor    al,0x59
  415736:	sub    eax,0x5d6b8449
  41573b:	ds lock test cl,bh
  41573f:	aas    
  415740:	pop    esp
  415741:	test   esp,edx
  415743:	pop    esp
  415744:	sahf   
  415745:	add    al,0x6a
  415747:	mov    ds:0x63bd2538,al
  41574c:	pop    ss
  41574d:	mov    bh,0x6c
  41574f:	ds pop eax
  415751:	and    bh,BYTE PTR [ebx-0x7bbb94d3]
  415757:	jbe    0x41575a
  415759:	xchg   edi,eax
  41575a:	(bad)  
  41575c:	addr16 ret 0x6742
  415760:	ins    DWORD PTR es:[edi],dx
  415761:	jne    0x41576c
  415763:	xchg   sp,ax
  415765:	shl    DWORD PTR [edx+0x11],cl
  415768:	push   ds
  415769:	cmc    
  41576a:	mov    ah,0x4
  41576c:	xchg   edi,eax
  41576d:	ret    0x13ce
  415770:	fnsave [edi+0x2ce32b4c]
  415776:	ds jl  0x4157bd
  415779:	ds dec esp
  41577b:	pop    esi
  41577c:	inc    ebp
  41577d:	dec    DWORD PTR ss:[ebx-0x3f]
  415781:	bnd jp 0x415715
  415784:	aad    0x68
  415786:	sbb    bh,BYTE PTR [ecx-0x33]
  415789:	clc    
  41578a:	cmp    al,0x68
  41578c:	add    bh,BYTE PTR [esi]
  41578e:	jge    0x41580f
  415790:	loop   0x415775
  415792:	mov    esp,0x8dc3e3f2
  415797:	jbe    0x4157ab
  415799:	sbb    bh,BYTE PTR [ebx-0xe]
  41579c:	jg     0x415744
  41579e:	or     al,BYTE PTR [edx]
  4157a0:	pop    edx
  4157a1:	pop    ecx
  4157a2:	fdivr  QWORD PTR [edx]
  4157a4:	test   BYTE PTR [eax-0x3b88e45b],al
  4157aa:	rcr    DWORD PTR [eax+0x5f17b918],1
  4157b0:	pop    eax
  4157b1:	jle    0x415752
  4157b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157b4:	in     eax,dx
  4157b5:	inc    eax
  4157b6:	(bad)  
  4157b7:	cld    
  4157b8:	retf   0x6d42
  4157bb:	in     al,0x2e
  4157bd:	jbe    0x415824
  4157bf:	int3   
  4157c0:	lahf   
  4157c1:	int    0x90
  4157c3:	dec    BYTE PTR [edx-0x34]
  4157c6:	inc    ebx
  4157c7:	(bad)  
  4157c8:	lahf   
  4157c9:	sbb    BYTE PTR [ebp+0x6c4fe2ee],bl
  4157cf:	sub    ebp,ebp
  4157d1:	push   ebx
  4157d2:	dec    ebp
  4157d3:	fistp  WORD PTR [eax+0x15]
  4157d6:	cmp    bl,cl
  4157d8:	rcr    BYTE PTR [eax*2-0xdbe0d35],cl
  4157df:	loope  0x41578a
  4157e1:	pop    edx
  4157e2:	enter  0x886d,0x9
  4157e6:	lea    ebp,[edi+0x34312dd5]
  4157ec:	scas   al,BYTE PTR es:[edi]
  4157ed:	mov    ecx,0x8f4df285
  4157f2:	jl     0x415859
  4157f4:	aad    0x3c
  4157f6:	cs in  al,dx
  4157f8:	add    eax,0x8d3f26ea
  4157fd:	dec    ecx
  4157fe:	and    al,0xd9
  415800:	inc    edx
  415801:	aaa    
  415802:	addr16 jno 0x415878
  415805:	push   es
  415806:	int3   
  415807:	aad    0xeb
  415809:	adc    DWORD PTR [edx+0x7f4b6d63],0xfac32f91
  415813:	push   ebx
  415814:	xor    BYTE PTR [edx-0x265b5fab],0xd3
  41581b:	popf   
  41581c:	push   ebx
  41581d:	adc    esi,DWORD PTR [edi]
  41581f:	aam    0x12
  415821:	fwait
  415822:	scas   al,BYTE PTR es:[edi]
  415823:	xchg   BYTE PTR [edx],ah
  415825:	arpl   WORD PTR [esi-0x4d28cce1],di
  41582b:	loope  0x4157b5
  41582d:	in     eax,0x74
  41582f:	dec    eax
  415830:	adc    esi,0x25fc839e
  415836:	mov    edx,eax
  415838:	imul   eax,DWORD PTR [ecx+0x6e342944],0xc6d109c9
  415842:	dec    esi
  415843:	test   BYTE PTR [edx],ch
  415845:	int    0xdc
  415847:	sub    ah,BYTE PTR [edx]
  415849:	xlat   BYTE PTR ds:[ebx]
  41584a:	in     al,dx
  41584b:	retf   
  41584c:	lock ret 0xbbda
  415850:	call   0xa189:0x2c2ed733
  415857:	push   esi
  415858:	mov    ecx,0x3371acab
  41585d:	dec    ebp
  41585e:	rol    BYTE PTR [ebx+ecx*4-0x66d01bc9],cl
  415865:	arpl   WORD PTR [ebp+0x44],si
  415868:	or     DWORD PTR [ebx],0xffffff89
  41586b:	lock out dx,eax
  41586d:	call   0x37a0:0x2bb764f8
  415874:	sub    DWORD PTR [esi-0xa8cffa2],ebx
  41587a:	jmp    0xffdae250
  41587f:	or     eax,0x5acc3700
  415884:	inc    esp
  415885:	enter  0xfad4,0xa5
  415889:	addr16 mov cl,0xda
  41588c:	fidivr DWORD PTR [edi-0x5]
  41588f:	mov    cl,BYTE PTR [ecx]
  415891:	popf   
  415892:	jae    0x4158d6
  415894:	inc    ecx
  415895:	mov    cl,0xf
  415897:	aas    
  415898:	sbb    edx,DWORD PTR [ebx-0x59]
  41589b:	in     al,dx
  41589c:	in     eax,0x2
  41589e:	in     eax,dx
  41589f:	das    
  4158a0:	(bad)  
  4158a2:	cmp    eax,0xdb2a33a3
  4158a7:	ins    DWORD PTR es:[edi],dx
  4158a8:	jl     0x415890
  4158aa:	(bad)  
  4158ab:	mov    edx,0xef1423c6
  4158b0:	or     eax,0x5e3c57b6
  4158b5:	sub    ecx,DWORD PTR [edx]
  4158b7:	sbb    BYTE PTR [eax-0x2],dl
  4158ba:	or     al,0x87
  4158bc:	push   ss
  4158bd:	adc    DWORD PTR [edx+0x47],eax
  4158c0:	and    eax,0xa12013aa
  4158c5:	cld    
  4158c6:	jge    0x41589c
  4158c8:	mov    ah,0x85
  4158ca:	out    dx,al
  4158cb:	daa    
  4158cc:	shr    DWORD PTR [esi-0x4f],cl
  4158cf:	iret   
  4158d0:	cli    
  4158d1:	mov    es,WORD PTR [eax]
  4158d3:	push   esi
  4158d4:	adc    al,0x8d
  4158d6:	xchg   ecx,eax
  4158d7:	sbb    al,0x97
  4158d9:	xor    ecx,DWORD PTR [edi]
  4158db:	xor    dl,BYTE PTR [ebx]
  4158dd:	push   esp
  4158de:	lock je 0x415915
  4158e1:	data16 shl dh,0x85
  4158e5:	sub    esi,DWORD PTR [ebp-0x5b17cba8]
  4158eb:	pop    ebp
  4158ec:	hlt    
  4158ed:	xchg   ecx,eax
  4158ee:	mov    al,0x28
  4158f0:	or     al,al
  4158f2:	xor    al,0x72
  4158f4:	xor    BYTE PTR [eax+0x97c5111],0x5f
  4158fb:	push   edx
  4158fc:	xchg   edi,eax
  4158fd:	fiadd  DWORD PTR [esi-0x6eb4eb75]
  415903:	test   esp,ebp
  415905:	shl    bl,cl
  415907:	xor    esi,ecx
  415909:	xchg   esp,eax
  41590a:	cmp    al,0xa9
  41590c:	mov    ds:0x4847791,eax
  415911:	iret   
  415912:	fs push cs
  415914:	in     eax,0x9d
  415916:	push   ss
  415917:	arpl   ax,cx
  415919:	data16 add bl,ch
  41591c:	loop   0x415951
  41591e:	out    dx,al
  41591f:	xor    esi,esp
  415921:	dec    esi
  415922:	add    dh,dh
  415924:	rcl    edi,0x53
  415927:	cld    
  415928:	loopne 0x4158e8
  41592a:	loop   0x4158cb
  41592c:	(bad)  
  41592d:	adc    esp,esp
  41592f:	inc    edx
  415930:	sti    
  415931:	or     DWORD PTR [esi],ebp
  415933:	mov    ch,0x39
  415935:	rcl    DWORD PTR [edx+edx*8-0x77],0x80
  41593a:	or     eax,0x80ddffc3
  41593f:	rcr    BYTE PTR [ebx],1
  415941:	and    al,0x95
  415943:	in     eax,0x62
  415945:	(bad)  
  415946:	sbb    BYTE PTR [ebp-0x14],dh
  415949:	mov    ebx,0xf215e1cd
  41594e:	xor    al,0xa1
  415950:	cli    
  415951:	scas   al,BYTE PTR es:[edi]
  415952:	ret    
  415953:	pop    edi
  415954:	scas   al,BYTE PTR es:[edi]
  415955:	es inc edx
  415957:	iret   
  415958:	(bad)  
  415959:	cli    
  41595a:	jno    0x41594e
  41595c:	out    dx,eax
  41595d:	pop    edi
  41595e:	inc    edx
  41595f:	dec    ebx
  415960:	hlt    
  415961:	xchg   ah,ch
  415963:	fmulp  st(1),st
  415965:	rol    DWORD PTR ds:0x8e5443da,1
  41596b:	xlat   BYTE PTR ds:[ebx]
  41596c:	jl     0x41591f
  41596e:	xchg   ebx,eax
  41596f:	xchg   ebx,eax
  415970:	cdq    
  415971:	mov    ah,0x5c
  415973:	and    ah,BYTE PTR [eax+0x19]
  415976:	sbb    ebp,DWORD PTR [edi+0x42a7bfe1]
  41597c:	lock fninit 
  41597f:	push   es
  415980:	inc    esi
  415981:	ins    DWORD PTR es:[edi],dx
  415982:	cmc    
  415983:	mov    edx,0xb576023e
  415988:	ja     0x41597f
  41598a:	jnp    0x41593b
  41598c:	push   0xffffff96
  41598e:	cmp    ebp,DWORD PTR [ecx]
  415990:	push   edi
  415991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415992:	or     al,0xcd
  415994:	push   edx
  415995:	mov    ecx,DWORD PTR [eax-0x74]
  415998:	mov    ds:0xd668145f,al
  41599d:	xchg   ebp,eax
  41599e:	xchg   edi,eax
  41599f:	mov    esp,0x8df7b95f
  4159a4:	xor    al,0x20
  4159a6:	popf   
  4159a7:	pop    ecx
  4159a8:	popa   
  4159a9:	ins    BYTE PTR es:[edi],dx
  4159aa:	pusha  
  4159ab:	and    al,0x6d
  4159ad:	jmp    0x415a1e
  4159af:	and    dh,BYTE PTR fs:[esi]
  4159b2:	sub    ch,BYTE PTR [esi-0x7c]
  4159b5:	dec    esp
  4159b6:	pusha  
  4159b7:	retf   
  4159b8:	xchg   ebp,eax
  4159b9:	sar    BYTE PTR [edi],1
  4159bb:	dec    ecx
  4159bc:	bound  esp,QWORD PTR [ecx]
  4159be:	inc    esi
  4159bf:	adc    dl,BYTE PTR [ebx-0x63]
  4159c2:	outs   dx,DWORD PTR ds:[esi]
  4159c3:	shr    DWORD PTR [ebx],0x40
  4159c6:	into   
  4159c7:	(bad)  
  4159c8:	push   cs
  4159c9:	pop    eax
  4159ca:	dec    ebx
  4159cb:	xchg   edx,eax
  4159cc:	sub    ch,ah
  4159ce:	call   0xf37f:0x1b7cddd5
  4159d5:	mov    BYTE PTR [edi],cl
  4159d7:	mov    cl,0xdb
  4159d9:	les    esi,FWORD PTR [eax-0x40e58640]
  4159df:	loopne 0x415991
  4159e1:	or     DWORD PTR [ecx+0x3de56339],esp
  4159e7:	neg    DWORD PTR [ecx-0x642fa3bc]
  4159ed:	std    
  4159ee:	jbe    0x4159bc
  4159f0:	push   cs
  4159f1:	pop    ss
  4159f2:	sbb    eax,0x545e3195
  4159f7:	xor    BYTE PTR [ebx-0x495afdc1],bh
  4159fd:	add    dl,0xb3
  415a00:	imul   esp,DWORD PTR [esi],0xd0e79e04
  415a06:	fs pop ecx
  415a08:	out    dx,eax
  415a09:	mov    bh,dl
  415a0b:	loop   0x415a33
  415a0d:	repz shr BYTE PTR [eax+0x65e6fdd5],cl
  415a14:	xchg   ebx,eax
  415a15:	fwait
  415a16:	mov    ah,0x6e
  415a18:	pop    eax
  415a19:	into   
  415a1a:	jb     0x4159a8
  415a1c:	test   dh,cl
  415a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a1f:	jno    0x415a00
  415a21:	dec    esi
  415a22:	shr    ebx,0x21
  415a25:	adc    bh,al
  415a27:	pop    ecx
  415a28:	mov    dh,0x64
  415a2a:	xchg   ecx,eax
  415a2b:	loopne 0x415a50
  415a2d:	in     eax,0x7e
  415a2f:	loop   0x415a39
  415a31:	add    dh,dh
  415a33:	sub    BYTE PTR [ecx-0x5c],cl
  415a36:	mov    BYTE PTR [ecx-0x1c],cl
  415a39:	xor    esp,DWORD PTR [ecx]
  415a3b:	loop   0x415a9c
  415a3d:	cdq    
  415a3e:	(bad)  
  415a3f:	(bad)  
  415a40:	and    dh,bl
  415a42:	mov    al,0x8e
  415a44:	sub    eax,0x5ff2c5e3
  415a49:	stos   DWORD PTR es:[edi],eax
  415a4a:	pop    esi
  415a4b:	lods   al,BYTE PTR ds:[esi]
  415a4c:	push   ds
  415a4d:	adc    BYTE PTR [eax+ebx*2-0x20dd0720],ch
  415a54:	jb     0x415a6a
  415a56:	ins    DWORD PTR es:[edi],dx
  415a57:	mov    es,WORD PTR [edi-0x18]
  415a5a:	call   0xdde8:0xa8ba55a6
  415a61:	pop    edi
  415a62:	push   ss
  415a63:	test   DWORD PTR [eax+0x13],0x9c90ec83
  415a6a:	les    ecx,FWORD PTR [edi]
  415a6c:	ret    
  415a6d:	mov    ah,0x65
  415a6f:	mov    bh,0x81
  415a71:	mov    ecx,0x1826fadc
  415a76:	ins    DWORD PTR es:[edi],dx
  415a77:	and    eax,0x75618ce4
  415a7c:	mov    dh,0x6c
  415a7e:	pop    ebx
  415a7f:	out    0xa8,eax
  415a81:	shl    DWORD PTR [ebx],0xe3
  415a84:	test   BYTE PTR [esi-0x454e44ea],0xa1
  415a8b:	cdq    
  415a8c:	mov    cl,0xa6
  415a8e:	mov    bh,0x95
  415a90:	xor    DWORD PTR [edx-0x38114781],esp
  415a96:	xchg   BYTE PTR [edx],bh
  415a98:	repz push ebp
  415a9a:	mov    WORD PTR [eax+0x2f8c9b32],fs
  415aa0:	push   ds
  415aa1:	(bad)  
  415aa2:	xor    dh,BYTE PTR [esi]
  415aa4:	jmp    0x277cf286
  415aa9:	loopne 0x415aa3
  415aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aac:	loopne 0x415a2f
  415aae:	sbb    esp,ebp
  415ab0:	add    bl,dl
  415ab2:	xchg   edi,eax
  415ab3:	and    BYTE PTR [ebp-0x7c],ah
  415ab6:	out    0xf6,eax
  415ab8:	jge    0x415a60
  415aba:	jb     0x415a5b
  415abc:	mov    BYTE PTR [ebx+0x121a815f],dh
  415ac2:	call   0xb8e470de
  415ac7:	cmp    al,0xd3
  415ac9:	sub    BYTE PTR [esi+0x2c984679],cl
  415acf:	ror    BYTE PTR [ebx-0x57c768d1],cl
  415ad5:	jae    0x415aa3
  415ad7:	cdq    
  415ad8:	scas   al,BYTE PTR es:[edi]
  415ad9:	mov    ah,0xe5
  415adb:	not    DWORD PTR [eax+0x49cef67a]
  415ae1:	sub    edx,ebp
  415ae3:	dec    edi
  415ae4:	mov    ah,0xca
  415ae6:	ret    
  415ae7:	jbe    0x415b47
  415ae9:	adc    al,0xc5
  415aeb:	cmp    dl,ch
  415aed:	xchg   DWORD PTR [edi-0x197ad9d0],edx
  415af3:	sahf   
  415af4:	(bad)  
  415af5:	je     0x415af4
  415af7:	sub    DWORD PTR [edx],0xdc9fc17f
  415afd:	mov    ah,0x6c
  415aff:	sub    cl,BYTE PTR [ebx-0x54]
  415b02:	cmp    al,0x84
  415b04:	xchg   edi,eax
  415b05:	xor    esi,DWORD PTR [ecx-0x7b]
  415b08:	mov    dl,0x5c
  415b0a:	adc    dl,BYTE PTR [eax]
  415b0c:	shr    DWORD PTR [edx-0x682beba2],1
  415b12:	fwait
  415b13:	and    bl,ah
  415b15:	iret   
  415b16:	jg     0x415aa6
  415b18:	lea    eax,[ecx]
  415b1a:	mov    ecx,0xea638a23
  415b1f:	inc    eax
  415b20:	test   BYTE PTR [eax-0x782b36c5],0x4a
  415b27:	loope  0x415b1a
  415b29:	getsec 
  415b2b:	jae    0x415aec
  415b2d:	mov    WORD PTR [ecx+0x18b65c86],fs
  415b33:	xor    al,0xce
  415b35:	xchg   ecx,esp
  415b37:	inc    edx
  415b38:	fld    QWORD PTR [esi-0x5bccd957]
  415b3e:	jg     0x415b06
  415b40:	inc    esi
  415b41:	sbb    dl,BYTE PTR [ecx+0x3f]
  415b44:	or     BYTE PTR [eax+0x3bee7e66],dl
  415b4a:	xor    al,0x82
  415b4c:	jne    0x415b40
  415b4e:	mov    al,ds:0x9e3f5409
  415b53:	pop    eax
  415b54:	mov    gs,esi
  415b56:	inc    esi
  415b57:	call   0xd80bec1a
  415b5c:	sti    
  415b5d:	xor    esi,DWORD PTR [edi]
  415b5f:	xor    al,0x7a
  415b61:	or     ah,BYTE PTR [edi-0x72]
  415b64:	leave  
  415b65:	xchg   esi,esp
  415b67:	or     ecx,DWORD PTR [esi-0x24]
  415b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b6b:	pusha  
  415b6c:	jne    0x415b09
  415b6e:	push   esp
  415b6f:	mov    cl,0x40
  415b71:	ja     0x415b75
  415b73:	xor    al,0x2e
  415b75:	cmp    al,0xd4
  415b77:	ficom  DWORD PTR [ebx+0x65]
  415b7a:	cld    
  415b7b:	fst    DWORD PTR [ebx-0xd]
  415b7e:	jo     0x415bc1
  415b80:	xor    esp,DWORD PTR ss:[edx+0x6]
  415b84:	daa    
  415b85:	inc    ebx
  415b86:	or     bl,BYTE PTR [ecx]
  415b88:	inc    eax
  415b89:	push   0xffffffc3
  415b8b:	xchg   ebx,eax
  415b8c:	add    edi,DWORD PTR [edi]
  415b8e:	mov    BYTE PTR [edi],ch
  415b90:	or     cl,bh
  415b92:	add    ebx,esp
  415b94:	xor    eax,0xd3d5e796
  415b99:	push   esi
  415b9a:	push   edi
  415b9b:	adc    eax,0xb5c451a4
  415ba0:	mov    BYTE PTR [esi+0x34],bl
  415ba3:	pop    ss
  415ba4:	cmp    eax,0xb178b173
  415ba9:	out    0x4,al
  415bab:	jle    0x415b54
  415bad:	ret    
  415bae:	and    DWORD PTR [edx+eax*4],ebx
  415bb1:	push   ebx
  415bb2:	fld    DWORD PTR [esi+0x34]
  415bb5:	and    bh,BYTE PTR [eax+0x70]
  415bb8:	adc    dh,BYTE PTR [edi-0x67]
  415bbb:	(bad)  
  415bbc:	mov    WORD PTR [edx],es
  415bbe:	scas   eax,DWORD PTR es:[edi]
  415bbf:	call   0x178f:0xeaa3ae42
  415bc6:	mul    BYTE PTR [eax-0x59]
  415bc9:	sahf   
  415bca:	mov    ebp,0x11f08b68
  415bcf:	sti    
  415bd0:	sub    bl,bh
  415bd2:	enter  0x550f,0xea
  415bd6:	and    al,0xa
  415bd8:	in     eax,dx
  415bd9:	popf   
  415bda:	sti    
  415bdb:	sub    ecx,esp
  415bdd:	sbb    BYTE PTR [ecx],cl
  415bdf:	lods   eax,DWORD PTR ds:[esi]
  415be0:	xor    edx,DWORD PTR [ebp-0x21]
  415be3:	retf   
  415be4:	jae    0x415bda
  415be6:	jbe    0x415c13
  415be8:	dec    esi
  415be9:	adc    BYTE PTR [eax+ecx*1],dl
  415bec:	je     0x415ba7
  415bee:	pop    edx
  415bef:	out    dx,al
  415bf0:	sbb    DWORD PTR [esi+ebp*2+0xfded729],esp
  415bf7:	in     al,dx
  415bf8:	in     al,dx
  415bf9:	gs push es
  415bfb:	push   ebx
  415bfc:	outs   dx,DWORD PTR ds:[esi]
  415bfd:	aaa    
  415bfe:	dec    eax
  415bff:	imul   ebp,DWORD PTR [edi+0x398bf3a3],0xffffffa6
  415c06:	int    0x34
  415c08:	dec    esp
  415c09:	lods   al,BYTE PTR ds:[esi]
  415c0a:	cwde   
  415c0b:	pop    ecx
  415c0c:	cli    
  415c0d:	out    0xb0,eax
  415c0f:	xlat   BYTE PTR ds:[ebx]
  415c10:	xor    ebx,DWORD PTR [edx]
  415c12:	sub    BYTE PTR [edx],dh
  415c14:	cmp    al,0xcc
  415c16:	outs   dx,DWORD PTR ds:[esi]
  415c17:	dec    ebp
  415c18:	push   edx
  415c19:	stc    
  415c1a:	ds int3 
  415c1c:	dec    eax
  415c1d:	jns    0x415c18
  415c1f:	mov    ch,0xb8
  415c21:	aas    
  415c22:	mov    ecx,0xbd02fc22
  415c27:	jno    0x415c75
  415c29:	xor    eax,DWORD PTR [esi-0x62]
  415c2c:	pop    edi
  415c2d:	xchg   esp,eax
  415c2e:	cwde   
  415c2f:	add    DWORD PTR ss:[esi-0x49],0xffffffe9
  415c34:	call   0x503c7451
  415c39:	dec    edx
  415c3a:	inc    edi
  415c3b:	add    bh,bh
  415c3d:	fldlg2 
  415c3f:	out    0xad,eax
  415c41:	pop    ecx
  415c42:	shr    BYTE PTR [edi+0x4e2aa097],cl
  415c48:	stos   DWORD PTR es:[edi],eax
  415c49:	stos   DWORD PTR es:[edi],eax
  415c4a:	out    dx,eax
  415c4b:	inc    eax
  415c4c:	and    dl,bl
  415c4e:	mov    esp,0xa22b3d26
  415c53:	mov    ds:0x74dc95e8,al
  415c58:	or     ebx,DWORD PTR [ecx-0x61]
  415c5b:	adc    eax,esp
  415c5d:	aad    0x6
  415c5f:	int3   
  415c60:	mov    ebp,0x421c4845
  415c65:	cmp    eax,0x763ff39e
  415c6a:	jb     0x415c80
  415c6c:	inc    esp
  415c6d:	jg     0x415c44
  415c6f:	stos   BYTE PTR es:[edi],al
  415c70:	ret    
  415c71:	sbb    al,0x5d
  415c73:	xor    DWORD PTR [edx+0x71],ecx
  415c76:	shr    BYTE PTR [esi-0x4b],1
  415c79:	jo     0x415cbd
  415c7b:	mov    WORD PTR [edi-0x6062e1c7],es
  415c81:	push   es
  415c82:	cmp    al,0xcb
  415c84:	jmp    0xdb86474e
  415c89:	adc    DWORD PTR [edx+0x65],esp
  415c8c:	pop    ds
  415c8d:	or     DWORD PTR [ebp+0x72a17293],esp
  415c93:	sbb    DWORD PTR [esi-0x495d79e1],edi
  415c99:	ja     0x415d1a
  415c9b:	shl    BYTE PTR [ebx],1
  415c9d:	outs   dx,BYTE PTR ds:[esi]
  415c9e:	and    eax,0x4c2636f2
  415ca3:	sbb    DWORD PTR [ebp-0x45],esp
  415ca6:	mov    ?,WORD PTR [ecx*8+0x7a864b06]
  415cad:	pusha  
  415cae:	dec    ebx
  415caf:	out    0x5c,al
  415cb1:	mov    dl,0x1e
  415cb3:	mov    eax,0x6c1198b5
  415cb8:	jle    0x415c95
  415cba:	push   ebp
  415cbb:	arpl   WORD PTR [edx-0x5752cb72],bp
  415cc1:	gs mov bl,0x60
  415cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cc5:	lods   al,BYTE PTR ds:[esi]
  415cc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cc7:	test   eax,0x98a10511
  415ccc:	cmp    cl,BYTE PTR ds:0x1c999e05
  415cd2:	push   0xb92a89c6
  415cd7:	cvtdq2ps xmm5,XMMWORD PTR [esi-0x5b71e68b]
  415cde:	or     bh,BYTE PTR ds:0xf7ad3c42
  415ce4:	ins    BYTE PTR es:[edi],dx
  415ce5:	(bad)  
  415ce6:	fisubr WORD PTR [eax+0x5885c8c5]
  415cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ced:	inc    esp
  415cee:	addr16 sbb eax,0x45c7945f
  415cf4:	call   0xf8dde27e
  415cf9:	or     DWORD PTR ds:0x42a000,ecx
  415cff:	push   ebx
  415d00:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  415d07:	mov    DWORD PTR ds:0x42601c,0x19
  415d11:	cmp    DWORD PTR ds:0x42601c,0x0
  415d18:	je     0x415d5d
  415d1e:	cmp    DWORD PTR ds:0x42601c,0x29
  415d25:	jl     0x415d5d
  415d2b:	jmp    0x415d4a
  415d30:	push   0x76f3
  415d35:	push   DWORD PTR [ebp-0xc]
  415d38:	push   DWORD PTR [ebp-0x28]
  415d3b:	push   DWORD PTR [ebp-0x18]
  415d3e:	push   DWORD PTR [ebp-0x24]
  415d41:	push   DWORD PTR [ebp-0x20]
  415d44:	call   DWORD PTR ds:0x42cee1
  415d4a:	xor    eax,eax
  415d4c:	or     eax,DWORD PTR ds:0x42601c
  415d52:	dec    eax
  415d53:	mov    ds:0x42601c,eax
  415d58:	jmp    0x415d11
  415d5d:	mov    ecx,DWORD PTR [ebp-0x18]
  415d60:	adc    eax,0x6e94
  415d65:	push   esi
  415d66:	add    DWORD PTR ds:0x426010,0x1c1f
  415d70:	mov    eax,0x751089f
  415d75:	xor    ecx,eax
  415d77:	and    DWORD PTR ds:0x429014,0x0
  415d81:	jmp    0x415d95
  415d86:	xor    esi,esi
  415d88:	xor    esi,DWORD PTR ds:0x429014
  415d8e:	inc    esi
  415d8f:	mov    DWORD PTR ds:0x429014,esi
  415d95:	cmp    DWORD PTR ds:0x429014,0x16
  415d9c:	jae    0x415deb
  415da2:	cmp    DWORD PTR ds:0x429014,0xc
  415da9:	jle    0x415deb
  415daf:	jmp    0x415dcc
  415db4:	push   0x6d2d
  415db9:	push   0x76bf
  415dbe:	push   DWORD PTR [ebp-0xc]
  415dc1:	push   0x4467
  415dc6:	call   DWORD PTR ds:0x42cee5
  415dcc:	cmp    DWORD PTR ds:0x429014,0xb
  415dd3:	jne    0x415de6
  415dd9:	mov    esi,DWORD PTR ds:0x429014
  415ddf:	inc    esi
  415de0:	mov    DWORD PTR ds:0x429014,esi
  415de6:	jmp    0x415d86
  415deb:	mov    esi,0x3272e6
  415df0:	push   edi
  415df1:	and    DWORD PTR ds:0x42a008,0x42700c
  415dfb:	add    ecx,esi
  415dfd:	jmp    0x415e0d
  415e02:	mov    dl,BYTE PTR [ebp-0x1]
  415e05:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  415e0c:	inc    ecx
  415e0d:	cmp    ecx,0x40
  415e10:	jb     0x415e02
  415e16:	xor    edx,DWORD PTR ds:0x427014
  415e1c:	mov    edx,DWORD PTR [ebp-0x18]
  415e1f:	sbb    DWORD PTR ds:0x427008,0x42700c
  415e29:	xor    edx,eax
  415e2b:	add    edx,esi
  415e2d:	jmp    0x415ef4
  415e32:	mov    edi,DWORD PTR [ebp+0x8]
  415e35:	xor    ecx,0x716d
  415e3b:	mov    ecx,0x8a8f
  415e40:	or     DWORD PTR ds:0x42900c,0x56a7
  415e4a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  415e4f:	mov    DWORD PTR ds:0x429018,0x14
  415e59:	cmp    DWORD PTR ds:0x429018,0x0
  415e60:	je     0x415e95
  415e66:	cmp    DWORD PTR ds:0x429018,0x1b
  415e6d:	jb     0x415e95
  415e73:	jmp    0x415e83
  415e78:	push   0x32fd
  415e7d:	call   DWORD PTR ds:0x42cefd
  415e83:	mov    edi,DWORD PTR ds:0x429018
  415e89:	dec    edi
  415e8a:	mov    DWORD PTR ds:0x429018,edi
  415e90:	jmp    0x415e59
  415e95:	mov    edi,0x3b53
  415e9a:	sub    DWORD PTR ds:0x42a000,0x6dd1
  415ea4:	add    cx,di
  415ea7:	sub    DWORD PTR ds:0x428004,0x42a01c
  415eb1:	movzx  ecx,cx
  415eb4:	mov    DWORD PTR [ebp-0xc],ecx
  415eb7:	mov    ecx,DWORD PTR [ebp+0x8]
  415eba:	movzx  ecx,WORD PTR [ecx+edx*4]
  415ebe:	adc    DWORD PTR ds:0x42700c,0x42600c
  415ec8:	xor    ecx,0x8a8f
  415ece:	add    DWORD PTR ds:0x427010,0x428000
  415ed8:	add    ecx,edi
  415eda:	mov    edi,0x2f90
  415edf:	mov    edi,DWORD PTR [ebp-0xc]
  415ee2:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  415ee9:	mov    DWORD PTR ds:0x426024,0x4f1
  415ef3:	inc    edx
  415ef4:	mov    ecx,0x2349
  415ef9:	mov    ecx,DWORD PTR [ebp-0x10]
  415efc:	cmp    edx,ecx
  415efe:	mov    DWORD PTR ds:0x426000,0x525c
  415f08:	jne    0x415e32
  415f0e:	mov    ecx,DWORD PTR [ebp-0x18]
  415f11:	adc    DWORD PTR ds:0x426018,0x718e
  415f1b:	mov    edx,DWORD PTR [ebp+0x10]
  415f1e:	mov    edi,DWORD PTR ds:0x428010
  415f24:	sub    DWORD PTR ds:0x42601c,edi
  415f2a:	xor    ecx,eax
  415f2c:	add    ecx,esi
  415f2e:	mov    edi,DWORD PTR ds:0x427014
  415f34:	and    DWORD PTR ds:0x428000,edi
  415f3a:	mov    DWORD PTR [edx],ecx
  415f3c:	mov    ecx,DWORD PTR ds:0x42800c
  415f42:	sbb    DWORD PTR ds:0x42801c,ecx
  415f48:	mov    ecx,DWORD PTR [ebp-0x18]
  415f4b:	or     DWORD PTR ds:0x428014,ebx
  415f51:	xor    ecx,eax
  415f53:	and    DWORD PTR ds:0x427014,0x0
  415f5d:	xor    edi,edi
  415f5f:	add    edi,DWORD PTR ds:0x427014
  415f65:	inc    edi
  415f66:	mov    DWORD PTR ds:0x427014,edi
  415f6c:	cmp    DWORD PTR ds:0x427014,0x6
  415f73:	jbe    0x415fb3
  415f79:	jmp    0x415f8c
  415f7e:	push   0x1041
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	call   DWORD PTR ds:0x42cf05
  415f8c:	cmp    DWORD PTR ds:0x427014,0x5
  415f93:	jne    0x415fa6
  415f99:	mov    edi,DWORD PTR ds:0x427014
  415f9f:	inc    edi
  415fa0:	mov    DWORD PTR ds:0x427014,edi
  415fa6:	cmp    DWORD PTR ds:0x427014,0x12
  415fad:	jb     0x415f5d
  415fb3:	add    ecx,esi
  415fb5:	mov    DWORD PTR [ebp-0xc],ecx
  415fb8:	or     ecx,edi
  415fba:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  415fc1:	add    ecx,ecx
  415fc3:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  415fca:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  415fd1:	add    DWORD PTR ds:0x426028,0x8e6
  415fdb:	mov    ecx,DWORD PTR [ebp-0x14]
  415fde:	mov    DWORD PTR [ebp+0x8],ecx
  415fe1:	mov    ecx,DWORD PTR [ebp+0x8]
  415fe4:	movzx  edi,WORD PTR ds:0x42a000
  415feb:	and    edi,DWORD PTR ds:0x427010
  415ff1:	mov    DWORD PTR ds:0x42a000,edi
  415ff7:	xor    ecx,eax
  415ff9:	inc    DWORD PTR ds:0x429008
  415fff:	add    ecx,esi
  416001:	mov    DWORD PTR ds:0x428004,0x2045
  41600b:	mov    ecx,0x242ebf1
  416010:	movzx  edi,BYTE PTR ds:0x429010
  416017:	mov    edi,0xf641bf2
  41601c:	je     0x4189e4
  416022:	adc    edx,ebx
  416024:	mov    edx,DWORD PTR [ebp+0x8]
  416027:	and    DWORD PTR ds:0x426010,0x0
  416031:	xor    ebx,ebx
  416033:	add    ebx,DWORD PTR ds:0x426010
  416039:	inc    ebx
  41603a:	mov    DWORD PTR ds:0x426010,ebx
  416040:	cmp    DWORD PTR ds:0x426010,0x18
  416047:	jb     0x41606a
  41604d:	jmp    0x41605d
  416052:	push   0x6c09
  416057:	call   DWORD PTR ds:0x42cf11
  41605d:	cmp    DWORD PTR ds:0x426010,0x11
  416064:	jb     0x416031
  41606a:	mov    ebx,DWORD PTR [ebp-0x8]
  41606d:	sbb    DWORD PTR ds:0x429004,0x72c6
  416077:	xor    edx,eax
  416079:	xor    ebx,eax
  41607b:	add    DWORD PTR ds:0x426028,0x427000
  416085:	sub    edx,ebx
  416087:	not    DWORD PTR ds:0x429004
  41608d:	sub    edx,esi
  41608f:	add    DWORD PTR ds:0x42a008,edx
  416095:	xor    edx,eax
  416097:	inc    DWORD PTR ds:0x42a004
  41609d:	mov    DWORD PTR [ebp+0x8],edx
  4160a0:	or     DWORD PTR ds:0x42801c,ecx
  4160a6:	mov    edx,DWORD PTR [ebp+0x8]
  4160a9:	mov    ebx,DWORD PTR [ebp-0x58]
  4160ac:	sub    DWORD PTR ds:0x427018,0x3c2
  4160b6:	add    edx,0x5708c4
  4160bc:	imul   edx,ebx
  4160bf:	mov    DWORD PTR [ebp-0x58],edx
  4160c2:	sbb    DWORD PTR ds:0x427008,edx
  4160c8:	mov    edx,DWORD PTR [ebp+0x8]
  4160cb:	mov    ebx,DWORD PTR [ebp-0x54]
  4160ce:	add    edx,0x64f8a2
  4160d4:	xor    DWORD PTR ds:0x429010,0x42a004
  4160de:	or     edx,ebx
  4160e0:	movzx  ebx,BYTE PTR ds:0x429000
  4160e7:	sub    DWORD PTR ds:0x42801c,ebx
  4160ed:	mov    DWORD PTR [ebp-0x54],edx
  4160f0:	mov    edx,DWORD PTR [ebp+0x8]
  4160f3:	sbb    DWORD PTR ds:0x429000,edi
  4160f9:	mov    ebx,DWORD PTR [ebp-0x50]
  4160fc:	add    edx,ecx
  4160fe:	xor    DWORD PTR ds:0x42800c,0x2b56
  416108:	xor    edx,ebx
  41610a:	adc    DWORD PTR ds:0x426000,edi
  416110:	mov    DWORD PTR [ebp-0x50],edx
  416113:	mov    edx,DWORD PTR [ebp+0x8]
  416116:	mov    ebx,DWORD PTR [ebp-0x4c]
  416119:	add    DWORD PTR ds:0x42701c,0x2bd0
  416123:	add    edx,edi
  416125:	add    DWORD PTR ds:0x42a018,0x7cff
  41612f:	and    edx,ebx
  416131:	mov    DWORD PTR [ebp-0x4c],edx
  416134:	sub    edx,edx
  416136:	mov    edx,DWORD PTR [ebp+0x8]
  416139:	mov    ebx,DWORD PTR [ebp-0x48]
  41613c:	and    DWORD PTR ds:0x42901c,0x60fe
  416146:	lea    edx,[ebx+edx*1+0x241fc1f]
  41614d:	mov    DWORD PTR [ebp-0x48],edx
  416150:	mov    edx,DWORD PTR [ebp+0x8]
  416153:	add    ebx,DWORD PTR ds:0x429004
  416159:	mov    ebx,0xfa5e15e2
  41615e:	or     DWORD PTR ds:0x42a008,0x429010
  416168:	sub    ebx,edx
  41616a:	mov    DWORD PTR ds:0x428008,0x14
  416174:	cmp    DWORD PTR ds:0x428008,0x0
  41617b:	je     0x4161b0
  416181:	cmp    DWORD PTR ds:0x428008,0x24
  416188:	jb     0x4161b0
  41618e:	jmp    0x41619e
  416193:	push   0x5013
  416198:	call   DWORD PTR ds:0x42cee9
  41619e:	mov    edx,DWORD PTR ds:0x428008
  4161a4:	dec    edx
  4161a5:	mov    DWORD PTR ds:0x428008,edx
  4161ab:	jmp    0x416174
  4161b0:	add    ebx,DWORD PTR [ebp-0x44]
  4161b3:	mov    DWORD PTR [ebp-0x44],ebx
  4161b6:	mov    edx,DWORD PTR [ebp+0x8]
  4161b9:	xor    edx,eax
  4161bb:	add    DWORD PTR ds:0x426008,0x5f1e
  4161c5:	add    edx,esi
  4161c7:	mov    DWORD PTR ds:0x428010,0xf9
  4161d1:	jne    0x416022
  4161d7:	jmp    0x4189e4
  4161dc:	inc    DWORD PTR ds:0x427008
  4161e2:	mov    edx,DWORD PTR [ebp-0xc]
  4161e5:	sub    edx,esi
  4161e7:	xor    edx,eax
  4161e9:	mov    DWORD PTR [ebp-0x5c],edx
  4161ec:	and    DWORD PTR ds:0x426018,0x0
  4161f6:	mov    edx,DWORD PTR ds:0x426018
  4161fc:	inc    edx
  4161fd:	mov    DWORD PTR ds:0x426018,edx
  416203:	cmp    DWORD PTR ds:0x426018,0x4
  41620a:	jg     0x416261
  416210:	jmp    0x41623a
  416215:	push   DWORD PTR [ebp-0x18]
  416218:	push   0x4660
  41621d:	push   0x2011
  416222:	push   0x80f1
  416227:	push   DWORD PTR [ebp-0x1c]
  41622a:	push   0x527c
  41622f:	push   0x42c1ad
  416234:	call   DWORD PTR ds:0x42cf15
  41623a:	cmp    DWORD PTR ds:0x426018,0x3
  416241:	jne    0x416254
  416247:	mov    edx,DWORD PTR ds:0x426018
  41624d:	inc    edx
  41624e:	mov    DWORD PTR ds:0x426018,edx
  416254:	cmp    DWORD PTR ds:0x426018,0x12
  41625b:	jb     0x4161f6
  416261:	mov    edx,DWORD PTR [ebp-0x10]
  416264:	sub    ebx,0x2ece
  41626a:	mov    ebx,DWORD PTR [ebp-0x8]
  41626d:	xor    edx,eax
  41626f:	xor    ebx,eax
  416271:	adc    DWORD PTR ds:0x42a004,0x426024
  41627b:	sub    edx,ebx
  41627d:	and    DWORD PTR ds:0x42a01c,0x3e0
  416287:	sub    edx,esi
  416289:	xor    edx,eax
  41628b:	mov    DWORD PTR ds:0x42a008,0x7a28
  416295:	mov    DWORD PTR [ebp-0x10],edx
  416298:	mov    edx,DWORD PTR [ebp-0x14]
  41629b:	mov    DWORD PTR [ebp+0x8],edx
  41629e:	jmp    0x416436
  4162a3:	adc    DWORD PTR ds:0x426028,0x5e89
  4162ad:	mov    edx,DWORD PTR [ebp+0x8]
  4162b0:	and    DWORD PTR ds:0x427010,0x0
  4162ba:	jmp    0x4162cc
  4162bf:	mov    ebx,DWORD PTR ds:0x427010
  4162c5:	inc    ebx
  4162c6:	mov    DWORD PTR ds:0x427010,ebx
  4162cc:	cmp    DWORD PTR ds:0x427010,0x1d
  4162d3:	jae    0x416317
  4162d9:	cmp    DWORD PTR ds:0x427010,0x5
  4162e0:	jg     0x416317
  4162e6:	jmp    0x4162f6
  4162eb:	push   0x429000
  4162f0:	call   DWORD PTR ds:0x42ceed
  4162f6:	cmp    DWORD PTR ds:0x427010,0x4
  4162fd:	jne    0x416312
  416303:	xor    ebx,ebx
  416305:	or     ebx,DWORD PTR ds:0x427010
  41630b:	inc    ebx
  41630c:	mov    DWORD PTR ds:0x427010,ebx
  416312:	jmp    0x4162bf
  416317:	mov    ebx,DWORD PTR [ebp-0x8]
  41631a:	xor    DWORD PTR ds:0x429014,0x427018
  416324:	xor    edx,eax
  416326:	xor    ebx,eax
  416328:	sub    edx,ebx
  41632a:	sub    DWORD PTR ds:0x427014,edx
  416330:	sub    edx,esi
  416332:	xor    edx,eax
  416334:	mov    DWORD PTR [ebp+0x8],edx
  416337:	adc    edx,edx
  416339:	mov    edx,DWORD PTR [ebp+0x8]
  41633c:	and    DWORD PTR ds:0x428004,0x651b
  416346:	mov    ebx,DWORD PTR [ebp-0x58]
  416349:	add    edx,0x5708c4
  41634f:	sub    DWORD PTR ds:0x426000,0x1bd
  416359:	imul   edx,ebx
  41635c:	and    DWORD PTR ds:0x42a004,0x54ca
  416366:	mov    DWORD PTR [ebp-0x58],edx
  416369:	or     DWORD PTR ds:0x427014,edi
  41636f:	mov    edx,DWORD PTR [ebp+0x8]
  416372:	mov    ebx,DWORD PTR [ebp-0x54]
  416375:	add    DWORD PTR ds:0x426020,0x42a00c
  41637f:	add    edx,0x64f8a2
  416385:	add    DWORD PTR ds:0x426024,0x34fb
  41638f:	or     edx,ebx
  416391:	mov    DWORD PTR [ebp-0x54],edx
  416394:	mov    edx,DWORD PTR [ebp+0x8]
  416397:	mov    DWORD PTR ds:0x42801c,0x13
  4163a1:	cmp    DWORD PTR ds:0x42801c,0x0
  4163a8:	je     0x4163ff
  4163ae:	cmp    DWORD PTR ds:0x42801c,0x2
  4163b5:	jg     0x4163ff
  4163bb:	jmp    0x4163d3
  4163c0:	push   0x42a008
  4163c5:	push   DWORD PTR [ebp-0x20]
  4163c8:	push   0x42c12d
  4163cd:	call   DWORD PTR ds:0x42cf19
  4163d3:	cmp    DWORD PTR ds:0x42801c,0x3
  4163da:	jne    0x4163ed
  4163e0:	mov    ebx,DWORD PTR ds:0x42801c
  4163e6:	dec    ebx
  4163e7:	mov    DWORD PTR ds:0x42801c,ebx
  4163ed:	mov    ebx,DWORD PTR ds:0x42801c
  4163f3:	dec    ebx
  4163f4:	mov    DWORD PTR ds:0x42801c,ebx
  4163fa:	jmp    0x4163a1
  4163ff:	mov    ebx,DWORD PTR [ebp-0x50]
  416402:	add    edx,ecx
  416404:	xor    edx,ebx
  416406:	mov    DWORD PTR [ebp-0x50],edx
  416409:	mov    edx,DWORD PTR [ebp+0x8]
  41640c:	mov    ebx,DWORD PTR [ebp-0x4c]
  41640f:	add    edx,edi
  416411:	and    edx,ebx
  416413:	mov    DWORD PTR [ebp-0x4c],edx
  416416:	mov    edx,DWORD PTR [ebp+0x8]
  416419:	mov    ebx,DWORD PTR [ebp-0x48]
  41641c:	lea    edx,[ebx+edx*1+0x241fc1f]
  416423:	mov    DWORD PTR [ebp-0x48],edx
  416426:	mov    edx,DWORD PTR [ebp+0x8]
  416429:	mov    ebx,0xfa5e15e2
  41642e:	sub    ebx,edx
  416430:	add    ebx,DWORD PTR [ebp-0x44]
  416433:	mov    DWORD PTR [ebp-0x44],ebx
  416436:	mov    edx,DWORD PTR [ebp+0x8]
  416439:	xor    edx,eax
  41643b:	add    edx,esi
  41643d:	jne    0x4162a3
  416443:	mov    edx,DWORD PTR [ebp-0xc]
  416446:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41644d:	mov    bl,BYTE PTR [ebp-0x1]
  416450:	cmp    dl,bl
  416452:	je     0x416530
  416458:	mov    ecx,DWORD PTR [ebp-0x5c]
  41645b:	mov    edx,DWORD PTR [ebp-0xc]
  41645e:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  416465:	mov    ebx,DWORD PTR [ebp+0xc]
  416468:	xor    ecx,eax
  41646a:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e6]
  416471:	jne    0x4189f6
  416477:	mov    ecx,DWORD PTR [ebp-0x5c]
  41647a:	mov    edx,DWORD PTR [ebp+0xc]
  41647d:	xor    ecx,eax
  41647f:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e6]
  416487:	mov    edx,DWORD PTR [ebp-0x18]
  41648a:	xor    edx,eax
  41648c:	add    edx,esi
  41648e:	cmp    ecx,edx
  416490:	mov    ecx,DWORD PTR [ebp-0x14]
  416493:	mov    DWORD PTR [ebp+0x8],ecx
  416496:	mov    ecx,DWORD PTR [ebp+0x8]
  416499:	je     0x41d222
  41649f:	xor    ecx,eax
  4164a1:	add    ecx,esi
  4164a3:	mov    ecx,0x242ebf1
  4164a8:	je     0x41894a
  4164ae:	mov    edx,DWORD PTR [ebp+0x8]
  4164b1:	mov    ebx,DWORD PTR [ebp-0x8]
  4164b4:	xor    edx,eax
  4164b6:	xor    ebx,eax
  4164b8:	sub    edx,ebx
  4164ba:	sub    edx,esi
  4164bc:	xor    edx,eax
  4164be:	mov    DWORD PTR [ebp+0x8],edx
  4164c1:	mov    edx,DWORD PTR [ebp+0x8]
  4164c4:	mov    ebx,DWORD PTR [ebp-0x58]
  4164c7:	add    edx,0x5708c4
  4164cd:	imul   edx,ebx
  4164d0:	mov    DWORD PTR [ebp-0x58],edx
  4164d3:	mov    edx,DWORD PTR [ebp+0x8]
  4164d6:	mov    ebx,DWORD PTR [ebp-0x54]
  4164d9:	add    edx,0x64f8a2
  4164df:	or     edx,ebx
  4164e1:	mov    DWORD PTR [ebp-0x54],edx
  4164e4:	mov    edx,DWORD PTR [ebp+0x8]
  4164e7:	mov    ebx,DWORD PTR [ebp-0x50]
  4164ea:	add    edx,ecx
  4164ec:	xor    edx,ebx
  4164ee:	mov    DWORD PTR [ebp-0x50],edx
  4164f1:	mov    edx,DWORD PTR [ebp+0x8]
  4164f4:	mov    ebx,DWORD PTR [ebp-0x4c]
  4164f7:	add    edx,edi
  4164f9:	and    edx,ebx
  4164fb:	mov    DWORD PTR [ebp-0x4c],edx
  4164fe:	mov    edx,DWORD PTR [ebp+0x8]
  416501:	mov    ebx,DWORD PTR [ebp-0x48]
  416504:	lea    edx,[ebx+edx*1+0x241fc1f]
  41650b:	mov    DWORD PTR [ebp-0x48],edx
  41650e:	mov    edx,DWORD PTR [ebp+0x8]
  416511:	mov    ebx,0xfa5e15e2
  416516:	sub    ebx,edx
  416518:	add    ebx,DWORD PTR [ebp-0x44]
  41651b:	mov    DWORD PTR [ebp-0x44],ebx
  41651e:	mov    edx,DWORD PTR [ebp+0x8]
  416521:	xor    edx,eax
  416523:	add    edx,esi
  416525:	jne    0x4164ae
  41652b:	jmp    0x41894a
  416530:	mov    edx,DWORD PTR [ebp-0x14]
  416533:	mov    DWORD PTR [ebp+0x8],edx
  416536:	jmp    0x41893d
  41653b:	mov    edx,DWORD PTR [ebp+0x8]
  41653e:	mov    ebx,DWORD PTR [ebp-0x8]
  416541:	xor    edx,eax
  416543:	xor    ebx,eax
  416545:	sub    edx,ebx
  416547:	jmp    0x4188d9
  41654c:	push   eax
  41654d:	(bad)  
  41654e:	into   
  41654f:	push   cs
  416550:	mov    ecx,DWORD PTR [ebx]
  416552:	nop
  416553:	mov    edx,DWORD PTR [esi+0x4b]
  416556:	call   0xb253:0x5c9ea533
  41655d:	push   edi
  41655e:	jno    0x4165d0
  416560:	or     eax,0x3470705f
  416565:	sbb    al,0xc7
  416567:	add    al,0x63
  416569:	jl     0x416539
  41656b:	inc    esp
  41656c:	xchg   ebx,eax
  41656d:	adc    al,0x77
  41656f:	add    eax,0xac3e2c93
  416574:	sbb    cl,BYTE PTR ds:0xe2425eb0
  41657a:	bound  edx,QWORD PTR [esp+ebx*2]
  41657d:	cmp    esi,eax
  41657f:	pop    eax
  416580:	xchg   ebp,eax
  416581:	mov    ds:0x594fa599,al
  416586:	vpcmpeqw ymm4,ymm6,YMMWORD PTR [eax-0x7a305312]
  41658e:	call   0x20eddac9
  416593:	pop    ebp
  416594:	dec    edi
  416595:	dec    esi
  416596:	lock push edx
  416598:	jae    0x416582
  41659a:	mov    ecx,0xb0b3b71b
  41659f:	popa   
  4165a0:	mov    bl,0xe2
  4165a2:	iret   
  4165a3:	mov    DWORD PTR ds:0x82c7080b,esi
  4165a9:	and    esp,ebp
  4165ab:	outs   dx,DWORD PTR ds:[esi]
  4165ac:	jg     0x416544
  4165ae:	sti    
  4165af:	mov    eax,ds:0x8602d3cd
  4165b4:	adc    edi,DWORD PTR [edx-0x59]
  4165b7:	aam    0x3c
  4165b9:	aas    
  4165ba:	fadd   st,st(7)
  4165bc:	mov    ecx,DWORD PTR ds:0xb5757888
  4165c2:	repnz xor eax,0xf86a3754
  4165c8:	out    dx,al
  4165c9:	jbe    0x4165c9
  4165cb:	adc    eax,0xac40d1d7
  4165d0:	jnp    0x416620
  4165d2:	sbb    edx,ecx
  4165d4:	inc    esi
  4165d5:	repnz in eax,dx
  4165d7:	in     al,0x6
  4165d9:	mov    ds:0x8bfec94e,eax
  4165de:	adc    BYTE PTR [edi+eiz*4-0x6],al
  4165e2:	pop    ecx
  4165e3:	push   cs
  4165e4:	sub    bh,BYTE PTR [eax]
  4165e6:	cwde   
  4165e7:	lods   al,BYTE PTR ds:[esi]
  4165e8:	out    0x66,eax
  4165ea:	mov    ch,0x7a
  4165ec:	lock dec ecx
  4165ee:	fld    QWORD PTR [edi-0x3a33bab3]
  4165f4:	cmp    DWORD PTR [esi+0x46923677],ebx
  4165fa:	push   esp
  4165fb:	sbb    al,0x3d
  4165fd:	test   ebx,edx
  4165ff:	add    DWORD PTR [edx-0x7b9b232c],0x53
  416606:	xor    BYTE PTR [esi],dl
  416608:	sbb    esp,ebp
  41660a:	sub    eax,0x23056dee
  41660f:	(bad)  
  416610:	or     al,BYTE PTR [ecx-0x4f]
  416613:	out    dx,al
  416614:	pop    es
  416615:	pop    esp
  416616:	inc    ebp
  416617:	mov    ds:0x827aa681,al
  41661c:	jl     0x4165e4
  41661e:	inc    ecx
  41661f:	xchg   BYTE PTR [edx+0x2c],al
  416622:	jge    0x416663
  416624:	sbb    al,BYTE PTR [ecx]
  416626:	sar    ebx,0xf0
  416629:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41662b:	xchg   ecx,eax
  41662c:	sbb    al,0x50
  41662e:	call   0xd2e801f0
  416633:	data16 rcr BYTE PTR [ebx-0x79],cl
  416637:	lds    edi,FWORD PTR [ecx-0x49]
  41663a:	mov    DWORD PTR [edx+ebp*8],ebp
  41663d:	inc    edx
  41663e:	(bad)
  416641:	jmp    0x4275:0x48037a43
  416648:	jb     0x416622
  41664a:	or     eax,0xa27ca0d
  41664f:	inc    ebp
  416650:	(bad)  
  416651:	cli    
  416652:	mov    BYTE PTR ds:0x56436200,cl
  416658:	repnz shr cl,cl
  41665b:	popa   
  41665c:	xor    BYTE PTR [esi-0x2caae99],bl
  416662:	inc    esp
  416663:	pushf  
  416664:	xchg   ebp,eax
  416665:	aam    0x90
  416667:	and    al,bl
  416669:	mov    BYTE PTR [esi],dh
  41666b:	xor    DWORD PTR [ecx],ecx
  41666d:	aad    0xa3
  41666f:	inc    ebx
  416670:	jmp    0xe8bf:0x6d01304
  416677:	add    BYTE PTR [esi+ebp*1],al
  41667a:	xor    edi,ebp
  41667c:	dec    eax
  41667d:	in     al,dx
  41667e:	dec    eax
  41667f:	in     al,dx
  416680:	shl    DWORD PTR [ebx],0x46
  416683:	mov    ds:0xf6021ccc,al
  416688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416689:	arpl   WORD PTR [eax],bx
  41668b:	adc    ecx,DWORD PTR [edx+0x5ab4e1cf]
  416691:	loopne 0x416678
  416693:	ficom  WORD PTR [ebx]
  416695:	mov    ah,0xfc
  416697:	call   0x1cccd216
  41669c:	rcl    ebp,cl
  41669e:	add    esp,edi
  4166a0:	mov    ecx,0x4ed9c70a
  4166a5:	jge    0x41667a
  4166a7:	push   ds
  4166a8:	xor    esp,0x36
  4166ab:	popa   
  4166ac:	mov    ch,0x9a
  4166ae:	(bad)  
  4166af:	lods   eax,DWORD PTR ds:[esi]
  4166b0:	pop    eax
  4166b1:	ss push ecx
  4166b3:	es xchg esi,eax
  4166b5:	and    ecx,DWORD PTR [edx]
  4166b7:	mov    ecx,0xcab4811f
  4166bc:	mov    ebx,0x9efe2564
  4166c1:	adc    bh,cl
  4166c3:	loopne 0x416743
  4166c5:	jb     0x4166fb
  4166c7:	ret    0x767d
  4166ca:	mov    WORD PTR [eax-0x6d],fs
  4166cd:	add    al,0xb
  4166cf:	mov    esi,0x78663a3e
  4166d4:	add    ch,BYTE PTR [esi]
  4166d6:	int    0x32
  4166d8:	sbb    bl,BYTE PTR [edx-0x570e119e]
  4166de:	out    0xce,al
  4166e0:	gs adc eax,0x3ca2d71
  4166e6:	call   0x7a10:0xb223d651
  4166ed:	cmp    eax,0x7e28f37d
  4166f2:	xchg   esi,eax
  4166f3:	push   DWORD PTR [edi+0x5aa3ab5a]
  4166f9:	pop    ecx
  4166fa:	(bad)  
  4166fb:	mov    eax,ds:0x9ae47b4e
  416700:	cld    
  416701:	adc    al,0x54
  416703:	cmc    
  416704:	lods   eax,DWORD PTR ds:[esi]
  416705:	ficomp WORD PTR [esi+ebp*4]
  416708:	jb     0x4166d7
  41670a:	shl    BYTE PTR [eax-0xe],0xfd
  41670e:	jns    0x4166f8
  416710:	adc    edi,ebp
  416712:	sub    DWORD PTR [ebx],0xbc408833
  416718:	adc    ah,BYTE PTR [ebp+0x3d]
  41671b:	xchg   ecx,eax
  41671c:	lahf   
  41671d:	mov    ah,0xd9
  41671f:	jecxz  0x41678b
  416721:	les    eax,FWORD PTR [edx+0x8855200]
  416727:	lods   eax,DWORD PTR ds:[esi]
  416728:	xor    eax,0x49c9f1fc
  41672d:	test   al,0x32
  41672f:	dec    eax
  416730:	cs pop edx
  416732:	push   ds
  416733:	inc    eax
  416734:	fwait
  416735:	outs   dx,DWORD PTR ds:[esi]
  416736:	aaa    
  416737:	cwde   
  416738:	into   
  416739:	or     esp,DWORD PTR [ebx]
  41673b:	ret    0x271c
  41673e:	fimul  WORD PTR [esi+0x4c0e7f74]
  416744:	push   ds
  416745:	sar    cl,0x12
  416748:	mov    esp,esi
  41674a:	sbb    eax,0xd3b8a05b
  41674f:	hlt    
  416750:	gs adc esp,0x53
  416754:	jb     0x41671c
  416756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416757:	outs   dx,BYTE PTR ds:[esi]
  416758:	sbb    bl,dh
  41675a:	sar    BYTE PTR [ebp-0x46],1
  41675d:	into   
  41675e:	or     DWORD PTR [esi],edi
  416760:	jb     0x416765
  416762:	sbb    BYTE PTR [esi-0x55],0x57
  416766:	shr    DWORD PTR [esi-0x42],cl
  416769:	mov    ds:0xb2dae737,al
  41676e:	xor    al,0x66
  416770:	mov    dh,0x2a
  416772:	fcmovb st,st(3)
  416774:	dec    ecx
  416775:	imul   ebp,DWORD PTR ds:0x90ab55bd,0x4e72d2fd
  41677f:	das    
  416780:	les    esp,FWORD PTR [ebp-0x5b223c39]
  416786:	xlat   BYTE PTR ds:[ebx]
  416787:	in     al,dx
  416788:	jmp    0x416766
  41678a:	(bad)  
  41678b:	push   es
  41678c:	mov    dl,0x68
  41678e:	mov    ch,0x30
  416790:	je     0x4167c6
  416792:	add    DWORD PTR [esi-0x3e],0xd4644fbb
  416799:	push   esp
  41679a:	cmp    ebx,esp
  41679c:	ja     0x41675a
  41679e:	jg     0x416799
  4167a0:	sub    DWORD PTR [edi+0x37],0x0
  4167a4:	leave  
  4167a5:	xor    edi,DWORD PTR [esi+0x7ed3543d]
  4167ab:	sahf   
  4167ac:	stos   BYTE PTR es:[edi],al
  4167ad:	sub    cl,BYTE PTR [esi-0x3b]
  4167b0:	jbe    0x4167ac
  4167b2:	dec    ebx
  4167b3:	nop
  4167b4:	mov    ebp,0xe531af9e
  4167b9:	xor    DWORD PTR [ebp+edi*8+0x30],esi
  4167bd:	jno    0x41676c
  4167bf:	pusha  
  4167c0:	pop    es
  4167c1:	dec    eax
  4167c2:	mov    edi,?
  4167c4:	iret   
  4167c5:	(bad)  
  4167c6:	lds    edx,FWORD PTR [ebx+0x1a0bba7e]
  4167cc:	(bad)  
  4167cd:	sub    al,0xe7
  4167cf:	loop   0x416814
  4167d1:	ja     0x416759
  4167d3:	rcr    BYTE PTR [edi+0x50],0xd2
  4167d7:	jge    0x4167a9
  4167d9:	out    0xf6,al
  4167db:	fwait
  4167dc:	mov    esi,0x42be071f
  4167e1:	jmp    0x2071eabf
  4167e6:	mov    BYTE PTR [ebx+0x5b162d82],bl
  4167ec:	call   0xf840:0x23be017a
  4167f3:	sub    eax,0x5c7b31db
  4167f8:	gs xchg esp,eax
  4167fa:	sbb    DWORD PTR [ecx-0xa],esi
  4167fd:	lods   al,BYTE PTR ds:[esi]
  4167fe:	pop    edi
  4167ff:	mov    dl,BYTE PTR ds:0x56dcf108
  416805:	mov    esi,0xb05beffa
  41680a:	push   cs
  41680b:	repnz icebp 
  41680d:	leave  
  41680e:	int3   
  41680f:	inc    eax
  416810:	and    dh,BYTE PTR [ecx+0x1276954f]
  416816:	sbb    eax,0x8f973573
  41681b:	xchg   ecx,eax
  41681c:	jns    0x4167f2
  41681e:	(bad)  
  416820:	push   es
  416821:	jg     0x416813
  416823:	pushf  
  416824:	xchg   DWORD PTR [edx+0x68f6477f],ecx
  41682a:	inc    ebx
  41682b:	add    al,0x18
  41682d:	stos   DWORD PTR es:[edi],eax
  41682e:	lahf   
  41682f:	jmp    0x5dab:0x76678553
  416836:	add    bl,ah
  416838:	std    
  416839:	scas   al,BYTE PTR es:[edi]
  41683a:	or     BYTE PTR [ecx],ah
  41683c:	(bad)  [ebx+0x39c6ca6e]
  416842:	mov    bx,0x534
  416846:	mov    ds:0x29d406dc,al
  41684b:	dec    esi
  41684c:	pop    esi
  41684d:	arpl   WORD PTR [ecx],sp
  41684f:	int    0xb5
  416851:	push   0xe7b4244c
  416856:	inc    esi
  416857:	(bad)  
  416858:	stos   BYTE PTR es:[edi],al
  416859:	inc    eax
  41685a:	lea    ecx,[ebx-0x2c]
  41685d:	mov    ah,BYTE PTR [ebx+0x624226fa]
  416863:	mov    ecx,0xe77c1e6b
  416868:	push   esp
  416869:	jb     0x416804
  41686b:	mov    ebp,0x17f1c99
  416870:	inc    esp
  416871:	sub    DWORD PTR [ebx],ecx
  416873:	lea    esp,[ecx+eax*8+0x58cb3adc]
  41687a:	ror    BYTE PTR [ecx],0xe3
  41687d:	xor    ah,bl
  41687f:	jcxz   0x416871
  416882:	stc    
  416883:	mov    eax,DWORD PTR [ecx]
  416885:	sti    
  416886:	sub    al,0xd6
  416888:	(bad)  
  416889:	mov    edx,0xed482a90
  41688e:	push   0x54
  416890:	pop    edx
  416891:	or     al,0x72
  416893:	or     DWORD PTR [edi-0x40],0x3eb18a0
  41689a:	arpl   WORD PTR [eax-0x4c],si
  41689d:	popf   
  41689e:	inc    ecx
  41689f:	dec    esi
  4168a0:	adc    al,0xf5
  4168a2:	stc    
  4168a3:	aas    
  4168a4:	ret    0xcc24
  4168a7:	out    0xc4,eax
  4168a9:	dec    ebx
  4168aa:	fmul   QWORD PTR [eax+0x7bdc453b]
  4168b0:	or     DWORD PTR [ebx+0x1e49875d],0x5e27f56
  4168ba:	out    dx,eax
  4168bb:	sub    ebx,edx
  4168bd:	fwait
  4168be:	adc    bh,BYTE PTR [edi+0x68]
  4168c1:	daa    
  4168c2:	sbb    eax,0x2894722e
  4168c7:	push   esp
  4168c8:	out    0xb,al
  4168ca:	mov    esi,0x9501966e
  4168cf:	jns    0x416905
  4168d1:	dec    edx
  4168d2:	sbb    DWORD PTR [edi+0x4b],esi
  4168d5:	(bad)  
  4168d6:	(bad)  
  4168d7:	stc    
  4168d8:	mov    al,ds:0x93e65275
  4168dd:	mov    ebx,0xade5e363
  4168e2:	std    
  4168e3:	or     BYTE PTR [esi],0x26
  4168e6:	dec    eax
  4168e7:	in     al,dx
  4168e8:	sbb    eax,0x75480b6
  4168ed:	add    eax,0x48b8ff67
  4168f2:	sub    ecx,DWORD PTR [ebp+ecx*4+0x3b]
  4168f6:	mov    edi,0x75fb922b
  4168fb:	sub    eax,0x3c5402a6
  416900:	loop   0x4168bc
  416902:	pop    ebx
  416903:	out    0xab,eax
  416905:	mov    BYTE PTR [eax+0x1],dl
  416908:	loopne 0x4168a2
  41690a:	test   eax,0x9f8e1584
  41690f:	arpl   WORD PTR [eax+0xa],bx
  416912:	and    BYTE PTR [esi+0x4a],ch
  416915:	push   edx
  416917:	fdivrp st(7),st
  416919:	sub    DWORD PTR [ebp+0x7ade7b94],esi
  41691f:	aas    
  416920:	mov    esp,esp
  416922:	cmp    bh,BYTE PTR [eax-0x41933331]
  416928:	scas   eax,DWORD PTR es:[edi]
  416929:	lods   eax,DWORD PTR ds:[esi]
  41692a:	and    eax,0x4e2f6e1e
  41692f:	jle    0x4168d0
  416931:	out    0x4b,eax
  416933:	xor    esp,0xffffffaf
  416936:	out    0xd8,eax
  416938:	or     DWORD PTR [edx+esi*4],edi
  41693b:	pop    eax
  41693c:	add    esp,ebx
  41693e:	or     cl,ch
  416940:	or     al,0x7
  416942:	int3   
  416943:	mov    edx,0x9191d3de
  416948:	mov    BYTE PTR [ecx],ah
  41694a:	sar    BYTE PTR [edx],0x4e
  41694d:	pop    ecx
  41694e:	retf   0x6a35
  416951:	sbb    ah,BYTE PTR [ebp-0x7e]
  416954:	push   ds
  416955:	fadd   DWORD PTR [ecx-0x384ec798]
  41695b:	(bad)
  41695e:	in     al,dx
  41695f:	repnz lds ebx,FWORD PTR [eax-0x7b0ffbd0]
  416966:	loope  0x4169c8
  416968:	fcmovb st,st(7)
  41696a:	repz sbb eax,0xfad1dbf9
  416970:	fidiv  WORD PTR [edx+0x75950465]
  416976:	and    BYTE PTR [ebx+0x4388efef],ch
  41697c:	shl    DWORD PTR ds:0xc5174be9,cl
  416982:	sub    DWORD PTR [edx+0x44c91d16],edi
  416988:	pop    edi
  416989:	iret   
  41698a:	leave  
  41698b:	test   BYTE PTR [edx-0x27672361],dh
  416991:	sti    
  416992:	mov    dl,0xab
  416994:	psubw  mm2,mm1
  416997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416998:	sub    BYTE PTR [eax+0x19e723ef],cl
  41699e:	imul   eax,DWORD PTR [esi+eax*4+0x76],0xb2555854
  4169a6:	int3   
  4169a7:	enter  0x8e41,0x91
  4169ab:	je     0x4169a0
  4169ad:	imul   esi,DWORD PTR [edi+0x7f],0x51ccd549
  4169b4:	in     al,0xc
  4169b6:	mov    cs:0xdc865152,eax
  4169bc:	out    0xbc,al
  4169be:	gs push esi
  4169c0:	fdiv   DWORD PTR [ecx-0x4db69d84]
  4169c6:	shl    BYTE PTR [ebx-0xb],0xc7
  4169ca:	fld    TBYTE PTR [esi-0x534b01cc]
  4169d0:	out    dx,al
  4169d1:	add    ebx,DWORD PTR [ebx]
  4169d3:	mov    fs,ebx
  4169d5:	pop    esp
  4169d6:	sub    ch,BYTE PTR [edx-0x6e]
  4169d9:	push   ebp
  4169da:	sbb    eax,DWORD PTR [edx+0x5c]
  4169dd:	mov    cs,ebx
  4169df:	div    DWORD PTR [edx+0x7fac8f6e]
  4169e5:	pop    esi
  4169e6:	out    dx,eax
  4169e7:	jmp    0x532c:0x8373c66f
  4169ee:	mov    BYTE PTR ds:[ebp+0x13090d1a],0xda
  4169f6:	or     esp,DWORD PTR [ecx+0x29]
  4169f9:	sahf   
  4169fa:	sub    cl,BYTE PTR [ebx]
  4169fc:	and    ecx,DWORD PTR [ebp-0x3f91de6c]
  416a02:	ret    
  416a03:	fmul   QWORD PTR [eax-0x24de8b73]
  416a09:	cwde   
  416a0a:	retf   0xeef1
  416a0d:	adc    BYTE PTR [ecx+0x5],al
  416a10:	inc    edi
  416a11:	int3   
  416a12:	test   eax,0xc9664574
  416a17:	jp     0x416a8a
  416a19:	push   ss
  416a1a:	xchg   esi,eax
  416a1b:	xchg   cl,dh
  416a1d:	test   DWORD PTR [edi-0x44fa4878],eax
  416a23:	data16 hlt 
  416a25:	cmp    eax,0x26b466a2
  416a2a:	retf   0x5421
  416a2d:	or     cl,ch
  416a2f:	mov    bl,0x68
  416a31:	dec    esp
  416a32:	ffree  st(3)
  416a34:	xor    BYTE PTR [edi-0x68],al
  416a37:	mov    ds:0x333f39f2,al
  416a3c:	jno    0x4169f0
  416a3e:	xor    bh,ah
  416a40:	scas   al,BYTE PTR es:[edi]
  416a41:	inc    edx
  416a42:	mov    ebx,0x7aadc4f1
  416a47:	and    DWORD PTR [ebx+0x2c43b6f8],eax
  416a4d:	cmp    DWORD PTR [edx-0x306cfa99],0x53df180c
  416a57:	das    
  416a58:	xchg   ebx,eax
  416a59:	push   esp
  416a5a:	fcmovu st,st(5)
  416a5c:	lahf   
  416a5d:	jne    0x416add
  416a5f:	(bad)  
  416a61:	sub    ecx,edi
  416a63:	je     0x416a8f
  416a65:	arpl   WORD PTR [ebp+0x7ea457e5],cx
  416a6b:	jl     0x416ab3
  416a6d:	jecxz  0x416ae2
  416a6f:	and    dh,ch
  416a71:	inc    esi
  416a72:	xchg   edx,eax
  416a73:	sub    dl,dh
  416a75:	xchg   edx,eax
  416a76:	pop    ds
  416a77:	jns    0x416ae1
  416a79:	and    ecx,edi
  416a7b:	cwde   
  416a7c:	cmp    esi,DWORD PTR [ebp-0x7a73da4b]
  416a82:	aad    0xc0
  416a84:	sbb    ch,ch
  416a86:	cmp    eax,0xe9195175
  416a8b:	pop    es
  416a8c:	not    BYTE PTR [esi]
  416a8e:	xchg   DWORD PTR [esi],ebx
  416a90:	ret    0x117c
  416a93:	or     BYTE PTR [eax],al
  416a95:	dec    esi
  416a96:	imul   ecx,DWORD PTR [edx-0x38],0x28
  416a9a:	mov    ah,0xe8
  416a9c:	sbb    eax,0xff36cb0d
  416aa1:	xchg   DWORD PTR [ecx+ebp*2],ebp
  416aa4:	pop    esp
  416aa5:	iret   
  416aa6:	inc    ecx
  416aa7:	imul   eax,DWORD PTR [ebp-0x49],0x17
  416aab:	pop    ebx
  416aac:	jne    0x416a31
  416aae:	int    0x4e
  416ab0:	mov    dl,BYTE PTR [ecx]
  416ab2:	out    dx,al
  416ab3:	(bad)  
  416ab4:	mov    eax,0xe911fff3
  416ab9:	adc    BYTE PTR [ebp+0x1a],al
  416abc:	or     eax,0xcb673436
  416ac1:	pop    ebx
  416ac2:	test   BYTE PTR [esi+ebx*2+0x76],ch
  416ac6:	sub    ah,BYTE PTR [ecx]
  416ac8:	(bad)  
  416ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aca:	xlat   BYTE PTR ds:[ebx]
  416acb:	and    BYTE PTR [ebp+0x61],dh
  416ace:	int3   
  416acf:	jb     0x416af6
  416ad1:	pop    ecx
  416ad2:	pop    esp
  416ad3:	rcr    BYTE PTR [ebp-0x1317c2af],1
  416ad9:	mov    al,0x62
  416adb:	mov    esp,0xa5ddcd46
  416ae0:	fisttp QWORD PTR [ebx-0x34]
  416ae3:	jecxz  0x416a82
  416ae5:	cmp    eax,0x649a5ea7
  416aea:	ss dec esp
  416aec:	xor    al,0x52
  416aee:	shl    esi,cl
  416af0:	adc    edx,DWORD PTR [edx]
  416af2:	xor    ecx,DWORD PTR [ecx+0x78e48426]
  416af8:	ins    BYTE PTR es:[edi],dx
  416af9:	mov    ah,0x46
  416afb:	or     DWORD PTR [eax],0x2c
  416afe:	xchg   ecx,eax
  416aff:	scas   al,BYTE PTR es:[edi]
  416b00:	adc    ecx,ecx
  416b02:	outs   dx,DWORD PTR ds:[esi]
  416b03:	xor    BYTE PTR ds:0xf1d8214a,dl
  416b09:	stc    
  416b0a:	js     0x416a9d
  416b0c:	or     al,0x88
  416b0e:	pop    esp
  416b0f:	lahf   
  416b10:	pop    edx
  416b11:	dec    esi
  416b12:	mov    WORD PTR [ebp-0x23],ds
  416b15:	test   al,0x46
  416b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b18:	mov    ds,WORD PTR [esi-0x72]
  416b1b:	pop    esi
  416b1c:	mov    eax,0x8e17a3f1
  416b21:	outs   dx,BYTE PTR ds:[esi]
  416b22:	int    0x67
  416b24:	jne    0x416ac7
  416b26:	ss or  al,0xb2
  416b29:	push   ebx
  416b2a:	push   ebx
  416b2b:	sbb    eax,0x5a21141f
  416b30:	test   al,0xc9
  416b32:	outs   dx,BYTE PTR ds:[esi]
  416b33:	cmp    dh,0xef
  416b36:	mov    WORD PTR [edx-0x1f33cd51],gs
  416b3c:	scas   eax,DWORD PTR es:[edi]
  416b3d:	dec    esp
  416b3e:	or     DWORD PTR [ebp-0x437f374a],edi
  416b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b45:	aam    0x9
  416b47:	mov    ebp,0x693888e6
  416b4c:	popf   
  416b4d:	push   ss
  416b4e:	mov    ebx,0xada359bb
  416b53:	push   edx
  416b54:	inc    DWORD PTR [eax+0x7d]
  416b57:	dec    edx
  416b58:	push   es
  416b59:	pop    esp
  416b5a:	fwait
  416b5b:	jo     0x416b6e
  416b5d:	xor    DWORD PTR [esi+ebx*1-0x13],esp
  416b61:	fadd   QWORD PTR [edi+0x4952e7bf]
  416b67:	lea    ecx,[eax]
  416b69:	enter  0x95af,0xce
  416b6d:	sub    ecx,edx
  416b6f:	mov    cl,0x99
  416b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b72:	gs int 0x6
  416b75:	(bad)  
  416b76:	dec    esp
  416b77:	cmp    esp,ebx
  416b79:	push   cs
  416b7a:	inc    ecx
  416b7b:	fwait
  416b7c:	daa    
  416b7d:	lock mov ah,0xf6
  416b80:	pop    ecx
  416b81:	sbb    DWORD PTR [edx-0xc],esp
  416b84:	fmul   DWORD PTR [ecx+eiz*2+0x1d]
  416b88:	mov    ecx,ss
  416b8a:	or     al,cl
  416b8c:	lahf   
  416b8d:	scas   eax,DWORD PTR es:[edi]
  416b8e:	jnp    0x416b2f
  416b90:	dec    edi
  416b91:	bound  edi,QWORD PTR [ecx-0x3d]
  416b94:	ds pop esi
  416b96:	cmp    BYTE PTR [ecx],ah
  416b98:	dec    eax
  416b99:	adc    BYTE PTR [ecx+0x42],0x81
  416b9d:	(bad)  
  416ba0:	addr16 in eax,0x5e
  416ba3:	fnstcw WORD PTR [ebx]
  416ba5:	add    eax,0xe1c8c13a
  416baa:	clc    
  416bab:	out    dx,al
  416bac:	cld    
  416bad:	mov    ecx,0xfaad39e7
  416bb2:	fcom   DWORD PTR [edx+0x7b22a34b]
  416bb8:	call   0xabb5:0x756e5770
  416bbf:	mov    ebp,edx
  416bc1:	jnp    0x416c33
  416bc3:	inc    ebp
  416bc4:	mov    ebx,0xde85ddc2
  416bc9:	jge    0x416b76
  416bcb:	jae    0x416b99
  416bcd:	jae    0x416b6c
  416bcf:	rcl    edi,0x41
  416bd2:	push   ds
  416bd3:	sbb    al,0xcc
  416bd5:	retf   
  416bd6:	stc    
  416bd7:	sub    DWORD PTR [ebp+0x44ec5abc],esi
  416bdd:	push   ecx
  416bde:	jbe    0x416bd9
  416be0:	shr    edx,1
  416be2:	mov    al,cs:0xc1ab45b3
  416be8:	out    0xb9,al
  416bea:	lock scas eax,DWORD PTR es:[edi]
  416bec:	repnz xor eax,0xaf602e23
  416bf2:	in     al,dx
  416bf3:	out    dx,eax
  416bf4:	xchg   ecx,eax
  416bf5:	xchg   edx,eax
  416bf6:	lods   al,BYTE PTR ds:[esi]
  416bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bf8:	inc    ebp
  416bf9:	jp     0x416c5f
  416bfb:	or     cl,ch
  416bfd:	out    dx,eax
  416bfe:	add    bl,BYTE PTR [eax+0x54]
  416c01:	xchg   ebp,eax
  416c02:	bound  edx,QWORD PTR [edi]
  416c04:	call   0x5c190e1a
  416c09:	fiadd  DWORD PTR [ebx-0x56]
  416c0c:	push   ss
  416c0d:	jne    0x416c37
  416c0f:	pushf  
  416c10:	repz jmp 0x5cb2597b
  416c16:	int3   
  416c17:	pop    edi
  416c18:	test   DWORD PTR [ebp-0x1ed65ad7],ebp
  416c1e:	es cmp al,0x2f
  416c21:	mov    al,cl
  416c23:	fs pop eax
  416c25:	hlt    
  416c26:	in     al,dx
  416c27:	popa   
  416c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c29:	pop    esi
  416c2a:	test   al,0x70
  416c2c:	(bad)  
  416c2d:	push   ecx
  416c2e:	mov    ecx,0x3eb6732e
  416c33:	cdq    
  416c34:	stc    
  416c35:	jle    0x416c8e
  416c37:	jle    0x416ca0
  416c39:	aad    0x31
  416c3b:	imul   ebx,DWORD PTR [esi-0x4b],0x62a9829f
  416c42:	push   edx
  416c43:	lods   eax,DWORD PTR ds:[esi]
  416c44:	dec    edx
  416c45:	cmp    DWORD PTR [edx-0x7b],0xc
  416c49:	jmp    0x1e71:0xea4c000a
  416c50:	iret   
  416c51:	add    al,0xce
  416c53:	stos   BYTE PTR es:[edi],al
  416c54:	push   ds
  416c55:	xchg   edi,eax
  416c56:	sub    eax,0xed498d4d
  416c5b:	imul   esi,DWORD PTR [ebx],0x4ce926b6
  416c61:	xor    BYTE PTR [edi],cl
  416c63:	mov    bl,0xe0
  416c65:	hlt    
  416c66:	mov    esp,0x261d79db
  416c6b:	in     eax,dx
  416c6c:	imul   ebx,DWORD PTR [ecx+0x54],0xffffffc9
  416c70:	adc    al,0xd5
  416c72:	jp     0x416c33
  416c74:	sti    
  416c75:	pop    edx
  416c76:	or     al,0xb7
  416c78:	cmc    
  416c79:	jle    0x416cb6
  416c7b:	cmp    BYTE PTR [esi+eax*4],0x4a
  416c7f:	add    al,0xa1
  416c81:	mov    esp,0xd148f8f9
  416c86:	add    al,BYTE PTR cs:[ebp+0x1b22fb78]
  416c8d:	fbstp  TBYTE PTR [edx-0x28]
  416c90:	push   ds
  416c91:	jmp    0x10dfc4a1
  416c96:	scas   eax,DWORD PTR es:[edi]
  416c97:	je     0x416cb9
  416c99:	aam    0xed
  416c9b:	dec    ecx
  416c9c:	ret    
  416c9d:	test   al,0x16
  416c9f:	jge    0x416ced
  416ca1:	shl    BYTE PTR [edi+0x66],cl
  416ca4:	fcmovbe st,st(0)
  416ca6:	cdq    
  416ca7:	push   0xd
  416ca9:	idiv   BYTE PTR [esp+esi*8-0x4c71c181]
  416cb0:	cmp    eax,DWORD PTR [esi+0x39]
  416cb3:	cmp    edi,DWORD PTR [esi-0x2f]
  416cb6:	shld   DWORD PTR [edx+0xf],edx,0xd1
  416cbb:	sub    dh,BYTE PTR ds:0xa11232f3
  416cc1:	pop    ecx
  416cc2:	mov    ecx,0xd85c2b72
  416cc7:	sub    al,0x4
  416cc9:	sbb    DWORD PTR [ebx],ecx
  416ccb:	xchg   dh,dl
  416ccd:	pop    ss
  416cce:	call   0xc28a8111
  416cd3:	push   0xffffff9c
  416cd5:	xor    cl,BYTE PTR [ebp+0x7]
  416cd8:	cs nop
  416cda:	mov    ebp,0x79d87cfe
  416ce0:	pop    ds
  416ce1:	mov    bh,0xd9
  416ce3:	mov    ecx,0xa65f2191
  416ce8:	or     eax,0x7a5170fc
  416ced:	(bad)  
  416cee:	inc    esp
  416cef:	jl     0x416d55
  416cf1:	lahf   
  416cf2:	call   0x8e4e:0x17d65107
  416cf9:	adc    ecx,DWORD PTR [edx+eiz*2-0x69]
  416cfd:	out    0x94,al
  416cff:	call   0xed61e330
  416d04:	mov    ebx,0x6cc29caf
  416d09:	stos   WORD PTR es:[edi],ax
  416d0b:	out    0xf3,al
  416d0d:	sbb    edi,edx
  416d0f:	sti    
  416d10:	sbb    ebx,ebx
  416d12:	gs push esi
  416d14:	pop    ebp
  416d15:	(bad)  
  416d16:	scas   al,BYTE PTR es:[edi]
  416d17:	fist   DWORD PTR [edi+0x66973676]
  416d1d:	mov    ds:0xfae88d47,eax
  416d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d23:	dec    esp
  416d24:	xchg   DWORD PTR [eax+0x62ed2f6c],eax
  416d2a:	and    dl,BYTE PTR [esi+esi*4+0x2a]
  416d2e:	addr16 test al,0xab
  416d31:	fimul  WORD PTR [ebp-0x3b]
  416d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d35:	mov    al,0x93
  416d37:	call   0x9d48a55f
  416d3c:	jmp    DWORD PTR [ebp+0x17]
  416d3f:	pop    ds
  416d40:	adc    BYTE PTR [bp+si-0x7a],bl
  416d44:	add    ebp,DWORD PTR [esi-0x7a]
  416d47:	add    ch,BYTE PTR [ebp+0x543bef9f]
  416d4d:	xchg   DWORD PTR [eax-0x6],ebx
  416d50:	sbb    eax,0xf130ea33
  416d55:	sbb    bl,BYTE PTR [edx+0x40]
  416d58:	mov    ds:0xfacb1e81,eax
  416d5d:	and    al,0xab
  416d5f:	das    
  416d60:	mov    al,ds:0x7af2b70e
  416d65:	jge    0x416d4e
  416d67:	out    dx,al
  416d68:	icebp  
  416d69:	mov    ds:0xe3130e57,al
  416d6e:	fidivr DWORD PTR ss:0xbd49c247
  416d75:	(bad)  
  416d76:	aas    
  416d77:	add    DWORD PTR [edx+0x3d153f26],esi
  416d7d:	or     dl,ah
  416d7f:	jp     0x416da3
  416d81:	lock ins DWORD PTR es:[edi],dx
  416d83:	sub    al,0xf8
  416d85:	inc    esp
  416d86:	dec    ecx
  416d87:	pop    esp
  416d88:	enter  0x1429,0x5c
  416d8c:	inc    ebp
  416d8d:	sti    
  416d8e:	jge    0x416dc4
  416d90:	xor    DWORD PTR [edx+0x328e3842],edi
  416d96:	imul   esp,DWORD PTR [ecx],0xbfc60101
  416d9c:	push   ecx
  416d9d:	or     cl,BYTE PTR [ecx+0x4477ade8]
  416da3:	mov    esi,0x51ac4127
  416da8:	jo     0x416d43
  416daa:	dec    ebx
  416dab:	in     eax,0x1c
  416dad:	add    edx,DWORD PTR [esi-0x51]
  416db0:	imul   esp,DWORD PTR [edx-0x76],0x29f4f00
  416db7:	add    ebx,DWORD PTR [edx-0x78]
  416dba:	dec    ebx
  416dbb:	jns    0x416d9a
  416dbd:	pusha  
  416dbe:	mov    dl,0x6a
  416dc0:	add    eax,0xffffffcb
  416dc3:	cwde   
  416dc4:	jno    0x416d9f
  416dc6:	cli    
  416dc7:	mov    ah,0xb5
  416dc9:	ret    0x7173
  416dcc:	aas    
  416dcd:	jg     0x416d98
  416dcf:	mov    edx,0x5f530557
  416dd4:	int3   
  416dd5:	cli    
  416dd6:	or     eax,0x5f3a6301
  416ddb:	fs repz inc ecx
  416dde:	aas    
  416ddf:	jne    0x416e60
  416de1:	mov    ecx,0xe7c2ca7c
  416de6:	loop   0x416e38
  416de8:	sar    DWORD PTR [esi-0x16],cl
  416deb:	test   DWORD PTR [ecx+0x73],edi
  416dee:	dec    esp
  416def:	test   al,0xa7
  416df1:	pusha  
  416df2:	out    0x1,al
  416df4:	push   0x201b6e31
  416df9:	mov    ebp,0xe5323061
  416dfe:	scas   eax,DWORD PTR es:[edi]
  416dff:	lock or eax,0xffffffd8
  416e03:	cdq    
  416e04:	add    ah,al
  416e06:	int    0x7b
  416e08:	(bad)  
  416e09:	and    bl,BYTE PTR [ebp+0x10eb6b7b]
  416e0f:	mov    al,ds:0xfec91abc
  416e14:	add    al,cl
  416e16:	dec    ecx
  416e17:	pop    esp
  416e18:	xchg   BYTE PTR [esi],al
  416e1a:	fdiv   st(5),st
  416e1c:	cmc    
  416e1d:	pop    ds
  416e1e:	add    eax,0x8fd5eb9c
  416e23:	pop    es
  416e24:	add    dh,BYTE PTR [ebp+ecx*8-0x737820a0]
  416e2b:	dec    ebp
  416e2c:	mov    edx,0xe2c3e530
  416e31:	sbb    ecx,ecx
  416e33:	add    eax,0x5ae48924
  416e38:	sbb    al,0x79
  416e3a:	lea    ebp,[ecx]
  416e3c:	add    eax,0x8c74968b
  416e41:	aad    0x1d
  416e43:	mov    ds:0x76da32d2,al
  416e48:	sbb    al,0x92
  416e4a:	ror    BYTE PTR ds:0x71ac88f5,cl
  416e50:	dec    ecx
  416e51:	stos   DWORD PTR es:[edi],eax
  416e52:	out    0xed,al
  416e54:	xor    BYTE PTR [ecx],bl
  416e56:	shl    DWORD PTR ds:0x580a8516,cl
  416e5c:	ins    DWORD PTR es:[edi],dx
  416e5d:	push   ebp
  416e5e:	mov    eax,0x78a270bc
  416e63:	(bad)  [edi+0x1581ace]
  416e69:	pop    edi
  416e6a:	int3   
  416e6b:	lahf   
  416e6c:	sbb    al,0x7b
  416e6e:	lods   eax,DWORD PTR ds:[esi]
  416e6f:	lock push ss
  416e71:	aad    0x8d
  416e73:	add    edx,DWORD PTR [edx+0x3170435d]
  416e79:	adc    bl,BYTE PTR [eax+0x38]
  416e7c:	mov    eax,0xbb27a341
  416e81:	repz push es
  416e83:	scas   eax,DWORD PTR es:[edi]
  416e84:	dec    esi
  416e85:	mov    ah,0xcf
  416e87:	lea    edi,[esi]
  416e89:	mov    esp,0x8060817a
  416e8e:	sub    al,0x47
  416e90:	jb     0x416e3a
  416e92:	sbb    esi,esp
  416e94:	push   0x12ac4ab4
  416e99:	(bad)  
  416e9a:	xchg   ebp,eax
  416e9b:	inc    edi
  416e9c:	lds    edi,FWORD PTR ss:[ebx]
  416e9f:	mov    dh,0x16
  416ea1:	loop   0x416e32
  416ea3:	jp     0x416ebc
  416ea5:	(bad)  
  416ea6:	cld    
  416ea7:	or     edx,esp
  416ea9:	lahf   
  416eaa:	(bad)  
  416eac:	int3   
  416ead:	outs   dx,BYTE PTR ds:[esi]
  416eae:	jle    0x416f0e
  416eb0:	mov    edi,0x3e2ca77c
  416eb5:	pop    ecx
  416eb6:	idiv   DWORD PTR [edx]
  416eb8:	fld    TBYTE PTR ds:0x14103c1
  416ebe:	jb     0x416f11
  416ec0:	xor    al,0xd2
  416ec2:	xor    BYTE PTR [edx-0x3c],0xde
  416ec6:	jb     0x416ea3
  416ec8:	ret    
  416ec9:	(bad)  
  416eca:	ror    bl,0x47
  416ecd:	pusha  
  416ece:	or     BYTE PTR [edi+0x4736dbbc],0xba
  416ed5:	xor    edi,edx
  416ed7:	pop    edi
  416ed8:	cdq    
  416ed9:	ss push esp
  416edb:	ss ret 
  416edd:	lods   al,BYTE PTR ds:[esi]
  416ede:	sbb    eax,0x4102b1e4
  416ee3:	test   al,0xce
  416ee5:	mov    al,ds:0xb63a7bb4
  416eea:	xchg   ecx,eax
  416eeb:	mov    bh,0xe
  416eed:	push   0xecc627e8
  416ef2:	mov    ebx,0x154960b6
  416ef7:	inc    edi
  416ef8:	jle    0x416ea9
  416efa:	pop    eax
  416efb:	shl    BYTE PTR [ebx],cl
  416efd:	pop    esi
  416efe:	(bad)  
  416f00:	or     ebp,DWORD PTR [esi]
  416f02:	adc    dh,BYTE PTR [esi+esi*2+0x572adeae]
  416f09:	mov    fs,edx
  416f0b:	sbb    al,0x7b
  416f0d:	fdiv   DWORD PTR ds:[ecx]
  416f10:	mov    cl,0x3b
  416f12:	mov    edx,0xf81d934
  416f17:	jecxz  0x416ea3
  416f19:	dec    esi
  416f1a:	push   ebp
  416f1b:	stos   DWORD PTR es:[edi],eax
  416f1c:	sbb    BYTE PTR [ebx],bl
  416f1e:	xor    ch,BYTE PTR [ecx]
  416f20:	dec    ebp
  416f21:	and    edx,esi
  416f23:	xor    BYTE PTR [ecx-0x59],bh
  416f26:	jns    0x416f3d
  416f28:	mov    esi,0x3e05a02a
  416f2d:	imul   ebp,DWORD PTR [ebx+0x34e69886],0x57
  416f34:	xor    ebx,DWORD PTR [edx]
  416f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f37:	cdq    
  416f38:	stos   BYTE PTR es:[edi],al
  416f39:	aam    0x4b
  416f3b:	ds jne 0x416f48
  416f3e:	xor    dh,BYTE PTR [edi]
  416f40:	iret   
  416f41:	and    DWORD PTR [esi+0x7ba96724],esp
  416f47:	inc    ecx
  416f48:	out    0xcc,eax
  416f4a:	add    ecx,DWORD PTR [ebp+0x36]
  416f4d:	sbb    edi,DWORD PTR [edi+edi*4]
  416f50:	les    ebp,FWORD PTR [esi]
  416f52:	inc    ebx
  416f53:	jg     0x416f7d
  416f55:	mov    ds:0x9a9bc05b,al
  416f5a:	pop    es
  416f5b:	push   edi
  416f5c:	push   edi
  416f5d:	leave  
  416f5e:	jp     0x416f98
  416f60:	sbb    eax,0x5b6f9734
  416f65:	loopne 0x416fa1
  416f67:	dec    esi
  416f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f69:	int    0x1d
  416f6b:	and    dh,BYTE PTR [edi]
  416f6d:	pusha  
  416f6e:	mov    ?,WORD PTR [eax-0x359ffcee]
  416f74:	gs in  eax,dx
  416f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f77:	imul   eax,DWORD PTR [eax-0x75],0xffffffe7
  416f7b:	and    al,0x39
  416f7d:	popa   
  416f7e:	lods   al,BYTE PTR ds:[esi]
  416f7f:	mov    al,ds:0xf8c3e1ea
  416f84:	mov    eax,ds:0x74b37f81
  416f89:	lods   al,BYTE PTR ds:[esi]
  416f8a:	int    0x82
  416f8c:	push   esi
  416f8d:	not    BYTE PTR [esi-0x64c76200]
  416f93:	shl    dh,1
  416f95:	retf   0x6163
  416f98:	xlat   BYTE PTR ds:[ebx]
  416f99:	or     BYTE PTR [ebx-0x53353131],0x83
  416fa0:	not    BYTE PTR [edx-0x66]
  416fa3:	jmp    0x1526:0x4bdc608c
  416faa:	sar    al,1
  416fac:	popa   
  416fad:	scas   al,BYTE PTR es:[edi]
  416fae:	sbb    al,0xfc
  416fb0:	xor    eax,0x2351b6d0
  416fb5:	push   esp
  416fb6:	adc    DWORD PTR [ebp+0x11332d42],esp
  416fbc:	push   edx
  416fbd:	enter  0x44e8,0x4c
  416fc1:	inc    ecx
  416fc2:	push   esp
  416fc3:	cmp    DWORD PTR [esi+0x48],esp
  416fc6:	inc    eax
  416fc7:	and    BYTE PTR [edx+0x7e16bbc2],0x42
  416fce:	mov    eax,ds:0xb6b64fb3
  416fd3:	adc    al,0x4
  416fd5:	(bad)  
  416fd6:	xchg   esp,eax
  416fd7:	aam    0x88
  416fd9:	retf   0xee91
  416fdc:	int    0x81
  416fde:	out    0x61,al
  416fe0:	cmp    al,0x8e
  416fe2:	jg     0x417041
  416fe4:	jl     0x417002
  416fe6:	pop    ebp
  416fe7:	push   0x9f66411c
  416fec:	inc    ebx
  416fed:	das    
  416fee:	(bad)  [edi+0x1ef0ba4f]
  416ff4:	mov    es,WORD PTR ds:0x8ef7cc2a
  416ffa:	jb     0x416fc0
  416ffc:	not    BYTE PTR [ebp-0x62ffe670]
  417002:	cmp    cl,ah
  417004:	pop    ss
  417005:	mov    ah,bh
  417007:	fldenv [ebx-0x30]
  41700a:	xchg   esp,eax
  41700b:	sbb    eax,0xfb5304a5
  417010:	inc    esi
  417011:	pop    ebx
  417012:	push   es
  417013:	mov    BYTE PTR [eax-0x6d],bl
  417016:	dec    edi
  417017:	lods   al,BYTE PTR ds:[esi]
  417018:	cmc    
  417019:	fsubp  st(7),st
  41701b:	cmp    ch,0x54
  41701e:	shl    DWORD PTR [ecx+0x5a9618e9],0x2c
  417025:	mov    edi,DWORD PTR [ecx+0x1dc75423]
  41702b:	sbb    eax,edx
  41702d:	mov    bh,0x53
  41702f:	add    BYTE PTR [esi+0x67],dl
  417032:	adc    ebx,DWORD PTR [esi-0x383272f7]
  417038:	dec    ecx
  417039:	mov    fs,WORD PTR [ebx]
  41703b:	push   es
  41703c:	cli    
  41703d:	dec    ebp
  41703e:	push   esi
  41703f:	(bad)  
  417040:	jl     0x4170ad
  417042:	ins    BYTE PTR es:[edi],dx
  417043:	test   eax,0x638d9a87
  417048:	fld    QWORD PTR [eax-0x29]
  41704b:	jns    0x417030
  41704d:	out    0x0,al
  41704f:	sbb    DWORD PTR ds:0xeb413192,edi
  417055:	push   ss
  417056:	xchg   esp,eax
  417057:	add    dh,0x9c
  41705a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41705b:	mov    edx,0xb4fc137a
  417060:	and    BYTE PTR [eax+0x34628b35],bh
  417066:	xchg   edi,eax
  417067:	fs sub al,0xcf
  41706a:	fidivr DWORD PTR [edx+0x41]
  41706d:	xchg   esi,eax
  41706e:	jo     0x4170be
  417070:	xchg   ebx,eax
  417071:	mov    dh,0xef
  417073:	(bad)  
  417074:	jmp    0x4170cb
  417076:	jne    0x4170ef
  417078:	scas   al,BYTE PTR es:[edi]
  417079:	pop    edi
  41707a:	and    DWORD PTR [ecx-0x4c],0x7cfce8a1
  417081:	sub    al,0xdf
  417083:	jmp    0x9bf9:0xd21bdd54
  41708a:	add    bh,al
  41708c:	leave  
  41708d:	cmp    BYTE PTR [esp+edi*8+0x30],dl
  417091:	bound  ebp,QWORD PTR [edx-0x23b132a9]
  417097:	outs   dx,DWORD PTR ds:[esi]
  417098:	and    eax,0x24fd47ec
  41709d:	pop    ss
  41709e:	push   ss
  41709f:	in     eax,dx
  4170a0:	mov    ebx,0x47c0b49
  4170a5:	je     0x417049
  4170a7:	pushf  
  4170a8:	lods   al,BYTE PTR ds:[esi]
  4170a9:	xor    ebx,DWORD PTR [edi+0x71]
  4170ac:	sub    eax,0xb129e0ac
  4170b1:	popf   
  4170b2:	lea    eax,[ecx-0x7]
  4170b5:	jbe    0x417067
  4170b7:	pop    ebp
  4170b8:	sbb    al,0x71
  4170ba:	xchg   ebx,eax
  4170bb:	dec    ebx
  4170bc:	pop    esp
  4170bd:	mov    edx,0xffa53fe7
  4170c2:	(bad)  
  4170c3:	pop    edi
  4170c4:	inc    eax
  4170c5:	and    esi,DWORD PTR [esi-0x4eb22767]
  4170cb:	lahf   
  4170cc:	ins    DWORD PTR es:[edi],dx
  4170cd:	inc    edi
  4170ce:	sbb    al,0x4f
  4170d0:	shl    BYTE PTR [ecx+0x1d],0x6f
  4170d4:	add    ch,BYTE PTR [esi]
  4170d6:	shl    DWORD PTR [edi],0xa7
  4170d9:	adc    DWORD PTR [ebx+0x5e],ebp
  4170dc:	dec    ebp
  4170dd:	stos   DWORD PTR es:[edi],eax
  4170de:	test   eax,0xc0eb5741
  4170e3:	loope  0x4170e7
  4170e5:	mov    edi,0xd6671296
  4170ea:	push   ebp
  4170eb:	xchg   DWORD PTR [ebx+0x6ce4d5a0],ebx
  4170f1:	std    
  4170f2:	jecxz  0x417110
  4170f4:	cli    
  4170f5:	lods   eax,DWORD PTR ds:[esi]
  4170f6:	mov    ds:0xa1313b50,al
  4170fb:	into   
  4170fc:	std    
  4170fd:	je     0x417160
  4170ff:	or     BYTE PTR [ebx-0xf653e97],bh
  417105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417106:	int    0x6b
  417108:	mov    bl,0x98
  41710a:	jle    0x417157
  41710c:	cld    
  41710d:	out    0x75,al
  41710f:	and    eax,0x91e7436c
  417114:	lods   eax,DWORD PTR ds:[esi]
  417115:	aam    0xc5
  417117:	shr    DWORD PTR [esi+0x1a545257],cl
  41711d:	mov    al,0x15
  41711f:	mov    esi,0x31bf5d86
  417124:	cmp    eax,0xa8b66a12
  417129:	cmp    al,0xb8
  41712b:	add    eax,0xe1136672
  417130:	sub    eax,DWORD PTR [ecx-0x1c]
  417133:	fs out 0x4e,eax
  417136:	inc    eax
  417137:	xchg   ebx,eax
  417138:	adc    al,0x6b
  41713a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41713b:	popa   
  41713c:	fsubrp st(2),st
  41713e:	aaa    
  41713f:	or     al,0x13
  417141:	sub    ah,cl
  417143:	or     eax,0x387a0098
  417148:	inc    edx
  417149:	push   ebx
  41714a:	dec    edi
  41714b:	push   eax
  41714c:	pop    esp
  41714d:	xchg   BYTE PTR [ecx+edx*4-0x6b],ch
  417151:	call   0x3379:0x2dbb64e1
  417158:	sub    DWORD PTR [ecx+0x38],ebp
  41715b:	push   esi
  41715c:	add    al,0x63
  41715e:	mov    esp,0xc8b73255
  417163:	xor    ecx,ebp
  417165:	sbb    DWORD PTR [edx],edx
  417167:	popa   
  417168:	pop    esp
  417169:	xchg   ecx,eax
  41716a:	gs ret 
  41716c:	xor    BYTE PTR ds:0x4ac37be8,0xb7
  417173:	(bad)  
  417174:	(bad)
  417178:	stos   DWORD PTR es:[edi],eax
  417179:	stc    
  41717a:	xchg   ecx,eax
  41717b:	ret    0xdcda
  41717e:	and    al,0xb4
  417180:	add    ebp,DWORD PTR [ebp+0x305ca09a]
  417186:	stos   BYTE PTR es:[edi],al
  417187:	jae    0x417142
  417189:	pop    edi
  41718a:	fmul   DWORD PTR [ebp-0x494c79de]
  417190:	add    cl,ch
  417192:	cmp    ecx,DWORD PTR [edx-0x13574a20]
  417198:	jmp    0x2e5f:0xaac69328
  41719f:	dec    eax
  4171a0:	xor    ecx,DWORD PTR [esi]
  4171a2:	cli    
  4171a3:	arpl   WORD PTR [edx-0x24a2cadd],bx
  4171a9:	pop    ebx
  4171aa:	pop    edi
  4171ab:	pop    edi
  4171ac:	repz xor bh,BYTE PTR [esi-0x68c0d9b6]
  4171b3:	ret    
  4171b4:	mov    eax,0xe0019008
  4171b9:	adc    al,0xef
  4171bb:	dec    ebp
  4171bc:	cmp    cl,BYTE PTR [eax+0x6b]
  4171bf:	push   DWORD PTR [ecx-0x58]
  4171c2:	shl    BYTE PTR [esi+0x51342e49],0x20
  4171c9:	add    cl,BYTE PTR [eax-0x3f1430a7]
  4171cf:	or     BYTE PTR [ebx+0xc4cda9b],0x9
  4171d6:	lods   eax,DWORD PTR ds:[esi]
  4171d7:	jb     0x41721a
  4171d9:	sbb    al,0x57
  4171db:	mov    ebx,0x487725d
  4171e0:	xor    ebp,edx
  4171e2:	scas   al,BYTE PTR es:[edi]
  4171e3:	fs add al,0xa3
  4171e6:	push   ds
  4171e7:	loopne 0x41716b
  4171e9:	sbb    BYTE PTR [ebx+0x745856c6],bh
  4171ef:	dec    esi
  4171f0:	retf   
  4171f1:	lds    ecx,FWORD PTR [ebp-0x74]
  4171f4:	lds    edx,FWORD PTR [ecx-0x8a218d5]
  4171fa:	mov    ebp,DWORD PTR [ecx]
  4171fc:	js     0x417208
  4171fe:	adc    al,0x83
  417200:	inc    esi
  417201:	repz fwait
  417203:	xor    BYTE PTR [ecx-0x25f22996],dl
  417209:	xchg   ecx,eax
  41720a:	pop    es
  41720b:	xchg   ecx,eax
  41720c:	cmp    ebp,esp
  41720e:	sar    BYTE PTR ds:0x84b834e8,cl
  417214:	xchg   esp,eax
  417215:	ss dec edi
  417217:	push   ecx
  417218:	fs pushf 
  41721a:	shl    DWORD PTR [ebp-0x7],0x71
  41721e:	xor    edx,DWORD PTR [edx-0x35]
  417221:	repnz sbb al,0xe2
  417224:	xor    ebp,DWORD PTR [eax]
  417226:	adc    eax,0x4e4da620
  41722b:	into   
  41722c:	cmp    DWORD PTR ds:0xf6512aa3,ebx
  417232:	pop    edx
  417233:	inc    edx
  417234:	scas   eax,DWORD PTR es:[edi]
  417235:	pop    ecx
  417236:	into   
  417237:	imul   ebx
  417239:	or     DWORD PTR [edi+edi*4+0x6899ce54],esi
  417240:	dec    eax
  417241:	in     al,0x4d
  417243:	or     al,0x5a
  417245:	cmp    ch,BYTE PTR [ebp-0x5bf148d6]
  41724b:	pushf  
  41724c:	scas   al,BYTE PTR es:[edi]
  41724d:	aad    0xd1
  41724f:	in     al,dx
  417250:	lea    eax,[edi+0x78]
  417253:	cli    
  417254:	les    ebp,FWORD PTR [edi+0x313b6b8f]
  41725a:	pop    ebp
  41725b:	(bad)  
  41725d:	aaa    
  41725e:	xlat   BYTE PTR ds:[ebx]
  41725f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417260:	or     DWORD PTR [edi-0x6ec4a348],0x42
  417267:	add    DWORD PTR [ecx],esi
  417269:	jo     0x4172de
  41726b:	je     0x417297
  41726d:	dec    esp
  41726e:	ins    DWORD PTR es:[edi],dx
  41726f:	in     eax,dx
  417270:	mov    BYTE PTR [edi+ebp*1-0x57249ce2],ch
  417277:	cmp    al,0x6e
  417279:	test   DWORD PTR [edx],edi
  41727b:	add    al,dh
  41727d:	xlat   BYTE PTR ds:[ebx]
  41727e:	push   0xffffffc5
  417280:	sbb    ah,BYTE PTR [eax+0x33e0f60a]
  417286:	xor    eax,0x5547f118
  41728b:	test   DWORD PTR [edi],ebp
  41728d:	stos   DWORD PTR es:[edi],eax
  41728e:	sub    eax,0xd98033d9
  417293:	push   0xb4c8130d
  417298:	or     BYTE PTR [ecx],0x98
  41729b:	nop
  41729c:	int    0x9c
  41729e:	daa    
  41729f:	imul   esi,DWORD PTR [eax+0x73],0xffffffc2
  4172a3:	loop   0x4172b5
  4172a5:	jbe    0x4172da
  4172a7:	arpl   WORD PTR [ebx+0x77],ax
  4172aa:	addr16 nop
  4172ac:	jecxz  0x417287
  4172ae:	aam    0xc
  4172b0:	jge    0x4172f4
  4172b2:	add    ah,bl
  4172b4:	add    BYTE PTR [ebp+0x26],ah
  4172b7:	loop   0x4172c8
  4172b9:	or     eax,0xfb73ca15
  4172be:	dec    ecx
  4172bf:	iret   
  4172c0:	push   0x32
  4172c2:	mov    edi,0x76f3fe7b
  4172c7:	arpl   WORD PTR [edi-0x5e],bp
  4172ca:	jmp    0x417276
  4172cc:	jbe    0x4172b0
  4172ce:	xchg   ebx,eax
  4172cf:	or     BYTE PTR [ebx+0x2b2c9400],al
  4172d5:	mov    bh,0x70
  4172d7:	cwde   
  4172d8:	xchg   ebx,eax
  4172d9:	dec    edi
  4172da:	imul   esi,DWORD PTR [eax],0x3b
  4172dd:	add    ebp,DWORD PTR [edi+0x56ea5722]
  4172e3:	(bad)
  4172e6:	fist   WORD PTR [esi+0x37]
  4172e9:	inc    eax
  4172ea:	sub    ah,BYTE PTR [esi+edi*2]
  4172ed:	popf   
  4172ee:	xor    dl,ah
  4172f0:	hlt    
  4172f1:	dec    esi
  4172f2:	jmp    0x4172f5
  4172f4:	xchg   ebp,eax
  4172f5:	xor    al,0xfa
  4172f7:	pop    ebp
  4172f8:	sbb    eax,0xa6bb9e18
  4172fd:	inc    edi
  4172fe:	clc    
  4172ff:	call   0x6395:0xf4f3f70b
  417306:	jge    0x417322
  417308:	ret    0xfa8
  41730b:	lock jmp 0x417389
  41730e:	jp     0x4172b0
  417310:	xchg   DWORD PTR [ebx+0x6e],edx
  417313:	sbb    bh,dh
  417315:	popa   
  417316:	mov    esi,DWORD PTR [ecx-0x5c]
  417319:	call   0x149c5bff
  41731e:	icebp  
  41731f:	gs fmul st(4),st
  417322:	or     al,0x15
  417324:	in     eax,dx
  417325:	add    ah,0x30
  417328:	clc    
  417329:	dec    edx
  41732a:	pusha  
  41732b:	xchg   DWORD PTR [ecx],eax
  41732d:	cs leave 
  41732f:	or     BYTE PTR [eax+0x6a],0x90
  417333:	push   eax
  417334:	int3   
  417335:	xchg   ecx,eax
  417336:	cwde   
  417337:	in     eax,dx
  417338:	push   ss
  417339:	jle    0x41734e
  41733b:	xlat   BYTE PTR ds:[ebx]
  41733c:	or     ch,bh
  41733e:	dec    esp
  41733f:	inc    ebp
  417340:	cld    
  417341:	or     edi,DWORD PTR [eax]
  417343:	mov    edi,0x70cd0a08
  417348:	mov    cl,0xf7
  41734a:	retf   0x9b37
  41734d:	jp     0x4172f8
  41734f:	jmp    0x41731f
  417351:	adc    ch,BYTE PTR [esi+0x18]
  417354:	lahf   
  417355:	and    ecx,DWORD PTR [esi]
  417357:	xchg   esp,eax
  417358:	xchg   edx,eax
  417359:	mov    DWORD PTR [ebx-0x3c78f5bb],eax
  41735f:	pop    edx
  417360:	out    dx,eax
  417361:	ret    
  417362:	scas   eax,DWORD PTR es:[edi]
  417363:	mov    eax,DWORD PTR [ecx+0x56465139]
  417369:	(bad)  
  41736a:	cmp    DWORD PTR [esi+ebx*4-0x22],edi
  41736e:	pop    eax
  41736f:	add    esi,DWORD PTR [esi-0x5]
  417372:	mov    ecx,DWORD PTR [ecx+eax*1-0x216de80b]
  417379:	fld    TBYTE PTR [ecx]
  41737b:	hlt    
  41737c:	test   DWORD PTR [edx+0x4e],edx
  41737f:	add    al,0x32
  417381:	(bad)  
  417382:	out    dx,al
  417383:	cmp    edi,DWORD PTR [ebp+0x73]
  417386:	mov    eax,0xa30103bf
  41738b:	stc    
  41738c:	and    DWORD PTR [edi-0x13],edx
  41738f:	push   ebp
  417390:	(bad)  
  417391:	or     eax,0x65312607
  417396:	xchg   edi,eax
  417397:	fist   WORD PTR [ecx+0x1d]
  41739a:	dec    ecx
  41739b:	popa   
  41739c:	mov    edi,0xa63f0bd1
  4173a1:	pop    ss
  4173a2:	lods   al,BYTE PTR ds:[esi]
  4173a3:	push   cs
  4173a4:	xchg   esp,eax
  4173a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173a6:	call   0x7478b79b
  4173ab:	sub    BYTE PTR [edi],ch
  4173ad:	(bad)  
  4173ae:	jmp    0x417421
  4173b0:	cmp    DWORD PTR [edx+0x4d374beb],0xffffff89
  4173b7:	fnsave [esi]
  4173b9:	cmp    eax,0x817fadd8
  4173be:	push   0x23
  4173c0:	lods   al,BYTE PTR ds:[esi]
  4173c1:	adc    BYTE PTR [eax],dl
  4173c3:	sahf   
  4173c4:	ror    BYTE PTR [edx+edi*8],0x3
  4173c8:	sub    DWORD PTR [ebx-0x68a95151],edi
  4173ce:	xchg   ebp,eax
  4173cf:	sub    eax,0x69809db6
  4173d4:	xchg   ebx,eax
  4173d5:	xor    al,0x86
  4173d7:	(bad)  
  4173d8:	and    DWORD PTR [ebx+esi*4+0x25],esi
  4173dc:	das    
  4173dd:	pop    edx
  4173de:	pushf  
  4173df:	pop    edi
  4173e0:	push   ebp
  4173e1:	mov    ebp,0x2ceaa22c
  4173e6:	mov    eax,ds:0xaadffaa0
  4173eb:	test   ecx,0x5db9e22f
  4173f1:	cmp    ah,ch
  4173f3:	(bad)
  4173f6:	adc    BYTE PTR [eax+0x12234108],ah
  4173fc:	imul   esi,DWORD PTR [esi+0x44],0x59
  417400:	mov    bh,0xa4
  417402:	fwait
  417403:	repz dec edx
  417405:	add    eax,DWORD PTR [ebx-0x34]
  417408:	out    0x2a,eax
  41740a:	test   eax,0xd254626b
  41740f:	pop    eax
  417410:	test   eax,0x305f6b24
  417415:	sbb    eax,DWORD PTR [ebx-0x310cfe6e]
  41741b:	push   esi
  41741c:	pop    ebx
  41741d:	shr    BYTE PTR [edi+0x5f],0xa4
  417421:	loopne 0x417427
  417423:	cmp    eax,0x3877988
  417428:	cs ins BYTE PTR es:[edi],dx
  41742a:	xchg   edi,eax
  41742b:	ror    BYTE PTR [esi+0x132688c9],1
  417431:	out    0x4d,eax
  417433:	xchg   BYTE PTR [ebx],ah
  417435:	adc    al,0x9
  417437:	pop    ecx
  417438:	push   esi
  417439:	mov    BYTE PTR [edi+edx*4+0x6a],ah
  41743d:	and    eax,0x5a630c55
  417442:	(bad)  
  417443:	fucompp 
  417445:	jp     0x41747e
  417447:	int    0x61
  417449:	jmp    0xc6c7:0x5975c730
  417450:	inc    ebx
  417451:	pop    es
  417452:	out    dx,al
  417453:	stos   BYTE PTR es:[edi],al
  417454:	or     al,0xab
  417456:	jae    0x4174b6
  417458:	retf   
  417459:	cdq    
  41745a:	cdq    
  41745b:	xchg   DWORD PTR [ebx-0x28],ebp
  41745e:	add    DWORD PTR [esi-0x36],edi
  417461:	daa    
  417462:	lods   al,BYTE PTR ds:[esi]
  417463:	data16 jo 0x417437
  417466:	mov    BYTE PTR [edx-0x316222f4],bh
  41746c:	(bad)  
  41746d:	push   0x1bb7daed
  417472:	push   eax
  417473:	xor    al,0x5c
  417475:	and    bh,BYTE PTR ds:0x90a36a4a
  41747b:	sbb    al,0x47
  41747d:	mov    edi,0xd8fa1380
  417482:	jl     0x417457
  417484:	aad    0x4c
  417486:	outs   dx,BYTE PTR ds:[esi]
  417487:	cmp    ecx,edi
  417489:	cmp    dl,BYTE PTR [esi-0x5bcd33bc]
  41748f:	xchg   ebx,eax
  417490:	imul   ebp,DWORD PTR [ebp-0x21b97d84],0xab8333c
  41749a:	pop    ebx
  41749b:	bound  eax,QWORD PTR [esi+ebx*8+0x14]
  41749f:	mov    bl,0x58
  4174a1:	test   al,0x30
  4174a3:	mov    ?,WORD PTR [edx-0x62]
  4174a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174a7:	xchg   ebp,eax
  4174a8:	loopne 0x41747f
  4174aa:	sbb    edi,DWORD PTR [eax]
  4174ac:	dec    ecx
  4174ad:	test   eax,0xfee12b98
  4174b2:	nop
  4174b3:	sbb    al,0x8b
  4174b5:	int    0xd
  4174b7:	pop    ecx
  4174b8:	xchg   esi,eax
  4174b9:	out    0xae,eax
  4174bb:	adc    al,BYTE PTR [ebp+0x3b735976]
  4174c1:	imul   ebp,DWORD PTR [eax+eax*4+0x2d2c5fd],0x4b
  4174c9:	and    al,BYTE PTR [eax-0x68d18c1e]
  4174cf:	mov    DWORD PTR [edx-0x6a],esp
  4174d2:	int    0x59
  4174d4:	into   
  4174d5:	push   ebp
  4174d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174d7:	js     0x4174a1
  4174d9:	push   edi
  4174da:	fidivr WORD PTR [edx]
  4174dc:	dec    ebx
  4174dd:	repz shl BYTE PTR [eax+0x2fc6a54d],0xaa
  4174e5:	ficom  DWORD PTR [edx-0x7d]
  4174e8:	lods   al,BYTE PTR ds:[esi]
  4174e9:	or     bh,bh
  4174eb:	je     0x41748d
  4174ed:	xchg   edi,eax
  4174ee:	adc    DWORD PTR [ecx+0x47],ebp
  4174f1:	pop    es
  4174f2:	ds push 0xe94a841f
  4174f8:	aad    0x9a
  4174fa:	lods   al,BYTE PTR ds:[esi]
  4174fb:	xchg   ecx,eax
  4174fc:	in     al,dx
  4174fd:	mov    ebx,0xd04184a3
  417502:	jns    0xe715cfe
  417508:	call   0xb75e5b9a
  41750d:	mov    ch,0xa5
  41750f:	ss fwait
  417511:	addr16 popf 
  417513:	adc    al,0x67
  417515:	pop    eax
  417516:	push   0xc5a522d6
  41751b:	lods   eax,DWORD PTR ds:[esi]
  41751c:	inc    ebp
  41751d:	add    BYTE PTR [edi+0x69],bh
  417520:	sbb    eax,0xaf6d4aa1
  417525:	mov    ah,0x2e
  417527:	mov    edi,0xb8f23b0a
  41752c:	in     al,dx
  41752d:	or     al,0xd6
  41752f:	fnstenv [edx+0x52]
  417532:	(bad)  
  417533:	loop   0x4174e4
  417535:	daa    
  417536:	out    dx,al
  417537:	mov    ch,ch
  417539:	xchg   ebx,eax
  41753a:	nop
  41753b:	push   edi
  41753c:	add    eax,0xa6715e9c
  417541:	in     eax,0x45
  417543:	outs   dx,DWORD PTR ds:[esi]
  417544:	(bad)
  417547:	clc    
  417548:	aaa    
  417549:	or     al,0x8e
  41754b:	sub    edi,DWORD PTR [ebx]
  41754d:	mov    dh,0x12
  41754f:	jmp    0x184:0xd87c592b
  417556:	dec    ebp
  417557:	push   edi
  417558:	sar    DWORD PTR [edx-0x6f34494c],cl
  41755e:	mov    edi,0x15f5779a
  417563:	andnps xmm6,XMMWORD PTR ds:0x137f4a6
  41756a:	iret   
  41756b:	mov    eax,eax
  41756d:	ins    DWORD PTR es:[edi],dx
  41756e:	push   eax
  41756f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417570:	(bad)  
  417571:	into   
  417572:	push   esi
  417573:	jl     0x4175eb
  417575:	push   ebx
  417576:	push   cs
  417577:	rol    DWORD PTR [eax],cl
  417579:	lods   eax,DWORD PTR ds:[esi]
  41757a:	pop    ds
  41757b:	xor    dh,BYTE PTR [edx-0x7a]
  41757e:	loop   0x4175e5
  417580:	mov    edi,0xb95a2568
  417585:	nop
  417586:	jl     0x4175ca
  417588:	jo     0x4175e3
  41758a:	adc    BYTE PTR [ebp-0xf],al
  41758d:	(bad)  
  41758e:	mov    ?,WORD PTR [esi+0x483fa5f5]
  417594:	adc    DWORD PTR [edx],esp
  417596:	inc    ebp
  417597:	aad    0x53
  417599:	cli    
  41759a:	sbb    DWORD PTR [esi],0xe5136029
  4175a0:	lock inc ebp
  4175a2:	push   0xffffffd1
  4175a4:	test   eax,0xd45ccb8c
  4175a9:	inc    ebp
  4175aa:	pop    eax
  4175ab:	pop    ebp
  4175ac:	gs daa 
  4175ae:	adc    BYTE PTR ds:0x21ffe51a,ch
  4175b4:	mov    ds:0xf07bab77,eax
  4175b9:	(bad)  
  4175ba:	mov    eax,ds:0x41a968da
  4175bf:	stc    
  4175c0:	push   esi
  4175c1:	nop
  4175c2:	bound  esp,QWORD PTR [ecx-0x77]
  4175c5:	stos   BYTE PTR es:[edi],al
  4175c6:	xor    ah,BYTE PTR [edi+0x4dbc8797]
  4175cc:	jl     0x41763f
  4175ce:	sub    eax,0x624492c3
  4175d3:	mov    bh,0xa9
  4175d5:	es clc 
  4175d7:	jl     0x417611
  4175d9:	xchg   edx,eax
  4175da:	in     al,0xa1
  4175dc:	adc    al,BYTE PTR [ecx+0x1d]
  4175df:	cmp    eax,0xc27d51c8
  4175e4:	sti    
  4175e5:	push   cs
  4175e6:	and    al,0xb
  4175e8:	inc    ecx
  4175e9:	(bad)  
  4175ea:	mov    dh,0x43
  4175ec:	les    esp,FWORD PTR [ecx]
  4175ee:	ror    DWORD PTR [eax-0x27],0xd4
  4175f2:	jno    0x417596
  4175f4:	mov    cl,0x88
  4175f6:	shl    BYTE PTR [ebx],0x96
  4175f9:	scas   al,BYTE PTR es:[edi]
  4175fa:	xchg   edx,eax
  4175fb:	in     eax,0x70
  4175fd:	aaa    
  4175fe:	xchg   eax,ecx
  417600:	inc    edi
  417601:	retf   0xa1d8
  417604:	mov    ah,0x3a
  417606:	mov    bh,0x19
  417608:	(bad)  
  417609:	push   esi
  41760a:	mov    al,0x97
  41760c:	test   eax,0xb591d4ac
  417611:	gs jo  0x417607
  417614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417615:	jmp    0x417694
  417617:	push   ds
  417618:	out    dx,al
  417619:	dec    ebp
  41761a:	sbb    BYTE PTR [edx-0xc],cl
  41761d:	and    BYTE PTR [ebp*8+0xc96ba4b],bl
  417624:	push   edx
  417625:	lds    esp,FWORD PTR [esi-0x5a]
  417628:	lea    esi,[eax]
  41762a:	and    eax,0xe72d134a
  41762f:	xchg   edi,eax
  417630:	out    dx,al
  417631:	leave  
  417632:	dec    ebx
  417633:	mov    al,ds:0x3108200b
  417638:	mov    ds:0xe55adde9,eax
  41763d:	loope  0x417654
  41763f:	sti    
  417640:	aas    
  417641:	das    
  417642:	div    bh
  417644:	jmp    0x4175f2
  417646:	push   es
  417647:	or     esp,0xf794f947
  41764d:	ror    DWORD PTR [ecx+0x40],0x7e
  417651:	pop    eax
  417652:	mov    cl,BYTE PTR [ecx-0x6ae422a3]
  417658:	js     0x4176c1
  41765a:	fstp   QWORD PTR [ebx+ebp*4-0x62]
  41765e:	int3   
  41765f:	pop    ecx
  417660:	jae    0x417672
  417662:	adc    eax,0x976b0914
  417667:	jmp    0x417671
  417669:	inc    eax
  41766a:	push   es
  41766b:	add    eax,0x3a8e37b2
  417670:	outs   dx,DWORD PTR ds:[esi]
  417671:	retf   
  417672:	ficom  DWORD PTR [edx+0x70]
  417675:	or     edi,DWORD PTR [edi+0x6]
  417678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417679:	bswap  esi
  41767b:	inc    ebp
  41767c:	(bad)  
  41767e:	and    al,0x5c
  417680:	call   0xf333:0x81d049d1
  417687:	jno    0x417699
  417689:	ja     0x4176ed
  41768b:	test   bl,cl
  41768d:	push   0x5be3c1fe
  417692:	push   esp
  417693:	test   al,0x33
  417695:	sub    ebp,DWORD PTR [ecx]
  417697:	push   ecx
  417698:	adc    al,0x8f
  41769a:	aam    0x99
  41769c:	cmp    DWORD PTR [eax+0x6ac7209],0x27
  4176a3:	loope  0x41768a
  4176a5:	pop    edi
  4176a6:	dec    esp
  4176a7:	ss xchg ebx,eax
  4176a9:	test   BYTE PTR [ebp-0x6e],dh
  4176ac:	mov    edx,0x556bb87e
  4176b1:	fmulp  st(0),st
  4176b3:	or     DWORD PTR [edi],ebx
  4176b5:	daa    
  4176b6:	shr    DWORD PTR [edi-0x65],0xd9
  4176ba:	ret    0x73aa
  4176bd:	ss pop eax
  4176bf:	adc    eax,0x5dd2d5f6
  4176c4:	sub    BYTE PTR [ecx+0x13],ch
  4176c7:	pmaxub mm3,QWORD PTR [ecx-0x11]
  4176cb:	(bad)  
  4176cc:	repz add esp,esi
  4176cf:	test   BYTE PTR [ecx-0x5a],0x8
  4176d3:	jae    0x4176f7
  4176d5:	add    BYTE PTR [ecx+0x606d9774],bh
  4176db:	mov    al,0xb
  4176dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176de:	pop    ds
  4176df:	addr16 mov edx,0x6d05ffa1
  4176e5:	test   al,0x8b
  4176e7:	inc    esi
  4176e8:	inc    edi
  4176e9:	xlat   BYTE PTR ds:[ebx]
  4176ea:	cli    
  4176eb:	sbb    eax,0x683064e7
  4176f0:	repnz push es
  4176f2:	loopne 0x417692
  4176f4:	xchg   DWORD PTR [esi-0x73],eax
  4176f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f8:	fld    DWORD PTR [edx+0x15bdc028]
  4176fe:	shl    BYTE PTR [ecx+esi*1-0xe2e7097],0x90
  417706:	sub    eax,0xe73bd09
  41770b:	cwde   
  41770c:	loope  0x417721
  41770e:	fsubr  DWORD PTR [edx+0x55]
  417711:	mov    al,0xb7
  417713:	sbb    eax,0xb4f50b10
  417718:	imul   esi,edi,0x63fcc4a7
  41771e:	mov    ebx,0x75336312
  417723:	idiv   BYTE PTR [esi-0x6932a68d]
  417729:	shr    BYTE PTR [edx+eax*1],cl
  41772c:	repnz enter 0x1a3d,0x54
  417731:	push   esi
  417732:	data16 cli 
  417734:	loop   0x417738
  417736:	mov    ebx,0x8a9b3ce1
  41773b:	fucomp st(4)
  41773d:	inc    ebx
  41773e:	inc    ebx
  41773f:	bound  ebp,QWORD PTR [esi-0x369a47e2]
  417745:	sbb    al,BYTE PTR [ebx]
  417747:	(bad)  [ebp-0x7e3f52e1]
  41774d:	clc    
  41774e:	jle    0x4176fd
  417750:	repnz sub al,0x9d
  417753:	mov    ch,0x72
  417755:	dec    edx
  417756:	push   esi
  417757:	xor    cl,BYTE PTR [ebx]
  417759:	aad    0x12
  41775b:	mov    BYTE PTR [edi+esi*8-0x5a60c80a],bh
  417762:	fwait
  417763:	xor    edi,ebx
  417765:	jbe    0x417729
  417767:	mov    bl,0x2c
  417769:	pop    ebx
  41776a:	xchg   edi,eax
  41776b:	outs   dx,BYTE PTR ds:[esi]
  41776c:	daa    
  41776d:	stos   BYTE PTR es:[edi],al
  41776e:	call   0x1abe:0x7bd5c88
  417775:	jb     0x417755
  417777:	or     DWORD PTR [ebp+0x1c3cc593],edx
  41777d:	test   al,0xa6
  41777f:	or     eax,ebx
  417781:	je     0x4177fd
  417783:	add    eax,0xa0476c9b
  417788:	xlat   BYTE PTR ds:[ebx]
  417789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41778a:	pop    ecx
  41778b:	add    ebp,DWORD PTR [eax+0x672adc65]
  417791:	jg     0x4177d7
  417793:	pop    edx
  417794:	push   ss
  417795:	cmp    eax,DWORD PTR [ebx+esi*2+0x55]
  417799:	lahf   
  41779a:	ret    0x4399
  41779d:	pop    es
  41779e:	dec    ebx
  41779f:	adc    al,al
  4177a1:	mov    BYTE PTR [edx+0x48],dh
  4177a4:	faddp  st(2),st
  4177a6:	add    al,0x31
  4177a8:	dec    edi
  4177a9:	mov    al,0x45
  4177ab:	mov    esi,0xe2d67080
  4177b0:	mov    ebp,0xefe8cfaa
  4177b5:	sbb    ecx,esp
  4177b7:	sahf   
  4177b8:	vpackssdw xmm4,xmm6,xmm4
  4177bc:	mov    ds:0xcd3e6d39,eax
  4177c1:	pop    ecx
  4177c2:	(bad)  
  4177c3:	scas   eax,DWORD PTR es:[edi]
  4177c4:	test   DWORD PTR [eax],ecx
  4177c6:	cmp    bh,BYTE PTR [esi-0xf2d3f56]
  4177cc:	xor    al,0xcf
  4177ce:	jne    0x4177ec
  4177d0:	ror    DWORD PTR [esi],cl
  4177d2:	mov    al,ds:0xb59351a6
  4177d7:	repnz or esp,DWORD PTR [ecx]
  4177da:	clc    
  4177db:	xchg   esp,eax
  4177dc:	inc    ecx
  4177dd:	push   es
  4177de:	out    dx,al
  4177df:	inc    edi
  4177e0:	aad    0xf7
  4177e2:	stc    
  4177e3:	imul   ebp,DWORD PTR [ecx-0x17],0xc6fe159c
  4177ea:	and    edi,DWORD PTR [esi]
  4177ec:	sar    BYTE PTR gs:[edx],cl
  4177ef:	push   ecx
  4177f0:	lahf   
  4177f1:	push   0x5fb9a25e
  4177f6:	in     al,0x17
  4177f8:	test   BYTE PTR [edx-0x52],al
  4177fb:	xor    ecx,DWORD PTR [edi]
  4177fd:	pop    eax
  4177fe:	dec    ebx
  4177ff:	enter  0xc754,0xd7
  417803:	clc    
  417804:	pop    esp
  417805:	xchg   BYTE PTR [esi],dl
  417807:	or     BYTE PTR [eax],dh
  417809:	icebp  
  41780a:	xor    eax,0xab3c3c74
  41780f:	xor    DWORD PTR [esi-0x18],edi
  417812:	pop    es
  417813:	repnz push 0xffffffae
  417816:	dec    ebx
  417817:	adc    bl,BYTE PTR [edx+0x5c3c6a33]
  41781d:	sbb    al,0x2f
  41781f:	fidivr DWORD PTR [esi+0x7c156c5a]
  417825:	rcl    DWORD PTR ds:0xf780b00f,1
  41782b:	cli    
  41782c:	loopne 0x417829
  41782e:	mov    bl,0x3d
  417830:	jno    0x417830
  417832:	mov    cs,WORD PTR [esi]
  417834:	outs   dx,BYTE PTR ds:[esi]
  417835:	or     bl,bh
  417837:	dec    edx
  417838:	and    bl,BYTE PTR [edi]
  41783a:	cdq    
  41783b:	jp     0x4177fb
  41783d:	icebp  
  41783e:	pop    eax
  41783f:	and    DWORD PTR [esi-0x7ac6b692],edi
  417845:	add    DWORD PTR [ebx],0x2c
  417848:	imul   esi,DWORD PTR [eax],0xffffffd1
  41784b:	or     ch,cl
  41784d:	bswap  eax
  41784f:	mov    bl,0x7f
  417851:	add    bl,BYTE PTR [edx]
  417853:	xchg   ebp,eax
  417854:	add    BYTE PTR cs:[eax],dh
  417857:	dec    esp
  417858:	mov    bh,dh
  41785a:	sub    esp,DWORD PTR [edx+0x43]
  41785d:	addr16 repz int 0x33
  417861:	in     eax,dx
  417862:	mov    WORD PTR ds:0x63bd7b0c,es
  417868:	scas   al,BYTE PTR es:[edi]
  417869:	push   ebx
  41786a:	cmp    edx,ebx
  41786c:	shl    BYTE PTR [esp+esi*4+0x7cbab73a],1
  417873:	fs add al,0x16
  417876:	pop    ss
  417877:	lods   al,BYTE PTR ds:[esi]
  417878:	pop    edx
  417879:	jmp    0xbd4475a0
  41787e:	jnp    0x41786a
  417880:	mov    ch,0x67
  417882:	xchg   DWORD PTR [ebp+0x7f432bc1],ebx
  417888:	and    eax,0xc9683bf9
  41788d:	inc    edi
  41788e:	cld    
  41788f:	xchg   ebx,eax
  417890:	cmp    ebx,DWORD PTR [edi-0x3ce258bc]
  417896:	mov    eax,0x14c371e
  41789b:	mov    dl,0x68
  41789d:	mov    al,0x68
  41789f:	and    ah,cl
  4178a1:	push   esp
  4178a2:	push   ebx
  4178a3:	mov    esp,0x1f09a616
  4178a8:	sbb    ecx,edi
  4178aa:	or     DWORD PTR [ebx],0xdd8a443d
  4178b0:	push   ecx
  4178b1:	stos   BYTE PTR es:[edi],al
  4178b2:	jle    0x417866
  4178b4:	gs cmc 
  4178b6:	pushf  
  4178b7:	pop    ss
  4178b8:	xor    edx,ebp
  4178ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178bb:	pop    ss
  4178bc:	lods   al,BYTE PTR ds:[si]
  4178be:	mov    esp,0x33aa3685
  4178c3:	daa    
  4178c4:	adc    dh,al
  4178c6:	stos   DWORD PTR es:[edi],eax
  4178c7:	ja     0x417926
  4178c9:	adc    ecx,esp
  4178cb:	sbb    al,cl
  4178cd:	add    al,0x9b
  4178cf:	outs   dx,BYTE PTR ds:[esi]
  4178d0:	add    eax,0x4bb03914
  4178d5:	outs   dx,BYTE PTR ds:[esi]
  4178d6:	fadd   QWORD PTR [edx]
  4178d8:	sbb    al,0x44
  4178da:	frstor [eax]
  4178dc:	push   ss
  4178dd:	pop    esi
  4178de:	cwde   
  4178df:	xor    eax,0xa58b1ca
  4178e4:	icebp  
  4178e5:	xor    bl,BYTE PTR [ebx-0x1e]
  4178e8:	push   ds
  4178e9:	xor    eax,edi
  4178eb:	pop    ebx
  4178ec:	dec    ebp
  4178ed:	test   al,0xf5
  4178ef:	neg    dh
  4178f1:	imul   esi,DWORD PTR [ebx+0x58],0xffffff82
  4178f5:	jb     0x4178fc
  4178f7:	test   BYTE PTR [edi-0x5],ch
  4178fa:	ins    DWORD PTR es:[edi],dx
  4178fb:	and    BYTE PTR [eax+0x36],ch
  4178fe:	or     eax,0x9cb803a4
  417903:	xchg   edi,eax
  417904:	inc    edx
  417905:	mov    dh,0x39
  417907:	out    dx,eax
  417908:	and    dh,ah
  41790a:	adc    ebx,DWORD PTR [eax-0x77]
  41790d:	pusha  
  41790e:	sbb    al,0x1e
  417910:	jne    0x4178f3
  417912:	btr    DWORD PTR [edi+0x51],edx
  417916:	nop
  417917:	xor    esi,DWORD PTR [edx-0x604c253e]
  41791d:	rcl    BYTE PTR [edi+0x2f8be086],cl
  417923:	jb     0x417992
  417925:	outs   dx,BYTE PTR ds:[esi]
  417926:	icebp  
  417927:	xchg   BYTE PTR [edi-0x63],ch
  41792a:	hlt    
  41792b:	clc    
  41792c:	arpl   WORD PTR [edi-0x9],di
  41792f:	out    dx,eax
  417930:	pop    ebx
  417931:	sub    eax,0xef8b2fb3
  417936:	add    ecx,ebp
  417938:	jo     0x27e6d2db
  41793e:	sbb    eax,0x7f8db438
  417943:	mov    ebx,0xb68fbd3d
  417948:	ins    DWORD PTR es:[edi],dx
  417949:	pop    ebx
  41794a:	mov    ecx,0x3912c502
  41794f:	in     eax,0xa5
  417951:	xor    cl,BYTE PTR [edi+0x3356fe0b]
  417957:	cmp    ah,BYTE PTR [eax+0x1a11ba42]
  41795d:	cmp    eax,0x4ec4e963
  417962:	scas   eax,DWORD PTR es:[edi]
  417963:	leave  
  417964:	pop    esi
  417965:	and    edx,ebx
  417967:	clc    
  417968:	into   
  417969:	pop    es
  41796a:	mov    ch,0x37
  41796c:	aad    0x74
  41796e:	inc    esp
  41796f:	xor    bl,BYTE PTR [ebx]
  417971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417972:	jae    0x417975
  417974:	or     al,0xdb
  417976:	retf   
  417977:	push   esi
  417978:	adc    eax,0xcbc45e4e
  41797d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41797e:	lock inc esp
  417980:	cmp    dh,dh
  417982:	aas    
  417983:	pop    ecx
  417984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417985:	pusha  
  417986:	test   ecx,esi
  417988:	mov    eax,esp
  41798a:	call   0xf3b8:0x2d50069a
  417991:	ins    DWORD PTR es:[edi],dx
  417992:	add    ecx,DWORD PTR [esp+eax*4]
  417995:	pushf  
  417996:	jae    0x417961
  417998:	rcl    DWORD PTR [ebp-0xf00ff2b],cl
  41799e:	lods   eax,DWORD PTR ds:[esi]
  41799f:	outs   dx,DWORD PTR ds:[esi]
  4179a0:	mov    edx,0xea28ef6c
  4179a5:	fs pop ebp
  4179a7:	or     eax,0x87ce1e71
  4179ac:	and    al,0x5c
  4179ae:	jl     0x417959
  4179b0:	outs   dx,DWORD PTR ds:[esi]
  4179b1:	scas   al,BYTE PTR es:[edi]
  4179b2:	in     eax,0x98
  4179b4:	cmp    al,0x9a
  4179b6:	mov    al,ds:0x4d8cbd77
  4179bb:	cmp    DWORD PTR [esi-0x2a],eax
  4179be:	shr    DWORD PTR [esi+0x1bb27ca4],1
  4179c4:	jge    0x4179eb
  4179c6:	jecxz  0x417a28
  4179c8:	sub    BYTE PTR [edi-0x3d],ch
  4179cb:	cli    
  4179cc:	xor    DWORD PTR [edi],eax
  4179ce:	loopne 0x41798a
  4179d0:	dec    edx
  4179d1:	outs   dx,BYTE PTR ds:[esi]
  4179d2:	enter  0xe2fb,0x20
  4179d6:	sbb    eax,DWORD PTR [eax-0xe39a241]
  4179dc:	test   DWORD PTR [ebx],0x8ddc1650
  4179e2:	jnp    0x4179ac
  4179e4:	inc    ecx
  4179e5:	fldl2t 
  4179e7:	or     eax,esi
  4179e9:	nop
  4179ea:	mov    ebx,0x4e903489
  4179ef:	add    al,0x2e
  4179f1:	push   0xa03364c4
  4179f6:	in     al,dx
  4179f7:	andps  xmm4,XMMWORD PTR [ecx+0x68]
  4179fb:	push   ebp
  4179fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179fd:	pop    edi
  4179fe:	addr16 aad 0x94
  417a01:	fs dec edx
  417a03:	sub    edx,DWORD PTR [ebx]
  417a05:	lea    esi,ds:0x66795bf
  417a0b:	(bad)  
  417a0c:	mov    gs,ebx
  417a0e:	test   DWORD PTR [ebx],esp
  417a10:	mov    edx,0xc5807819
  417a15:	or     BYTE PTR [ebp-0x67],dl
  417a18:	repnz loope 0x4179df
  417a1b:	loope  0x417a19
  417a1d:	sub    DWORD PTR [eax+0x4d],eax
  417a20:	ret    
  417a21:	push   ebp
  417a22:	push   es
  417a23:	mov    cl,0xb
  417a25:	pop    ebp
  417a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a27:	ret    
  417a28:	test   al,0x97
  417a2a:	cmp    DWORD PTR [edi+0x2],edx
  417a2d:	lods   al,BYTE PTR ds:[esi]
  417a2e:	adc    eax,ecx
  417a30:	imul   ecx,DWORD PTR [ecx-0x2ee285cf],0x23fb6b
  417a3a:	das    
  417a3b:	in     al,0x73
  417a3d:	pop    eax
  417a3e:	repnz shr DWORD PTR [ecx-0x4c],0xbd
  417a43:	out    dx,eax
  417a44:	sbb    BYTE PTR [eax],bh
  417a46:	sar    DWORD PTR [ebx+0x35ab0e4a],1
  417a4c:	fwait
  417a4d:	(bad)  
  417a4e:	call   0xb960:0xe05b348
  417a55:	(bad)  
  417a56:	mov    ds:0x3d894961,al
  417a5b:	adc    BYTE PTR [edx+0x336ad9fc],bl
  417a61:	xor    eax,0x282d5870
  417a66:	or     DWORD PTR [ebx-0x56950c66],0x1b
  417a6d:	int3   
  417a6e:	mov    eax,0x1822813b
  417a73:	dec    esi
  417a74:	(bad)  
  417a75:	arpl   ax,ax
  417a77:	icebp  
  417a78:	lods   eax,DWORD PTR ds:[esi]
  417a79:	stos   BYTE PTR es:[edi],al
  417a7a:	push   esi
  417a7b:	scas   eax,DWORD PTR es:[edi]
  417a7c:	call   0x2c890717
  417a81:	mov    esi,0x73334864
  417a86:	arpl   WORD PTR [edi],cx
  417a88:	fisubr WORD PTR [ebp+ebp*4+0x2abf0e4e]
  417a8f:	and    eax,0x4377fc38
  417a94:	sub    ebx,DWORD PTR ds:0xe46cb8c9
  417a9a:	call   FWORD PTR [edi+esi*2-0x708ef3e2]
  417aa1:	jle    0x417a5c
  417aa3:	adc    eax,0xf76c0839
  417aa8:	ja     0x417aa1
  417aaa:	cli    
  417aab:	or     DWORD PTR [edx+0x1d],edi
  417aae:	mov    ebp,0x2d279afe
  417ab3:	ficom  DWORD PTR [ebp+0x4401fa01]
  417ab9:	in     eax,dx
  417aba:	pop    es
  417abb:	aad    0x57
  417abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417abe:	xchg   esp,eax
  417abf:	push   edx
  417ac0:	retf   
  417ac1:	jmp    0x417b0a
  417ac3:	push   ss
  417ac4:	out    dx,al
  417ac5:	push   cs
  417ac6:	daa    
  417ac7:	les    ebx,FWORD PTR [ecx]
  417ac9:	dec    cl
  417acb:	xchg   esp,eax
  417acc:	es leave 
  417ace:	xchg   edi,eax
  417acf:	cmp    esp,DWORD PTR [eax+0x32]
  417ad2:	sub    DWORD PTR [ebp-0xa60ceba],0x947ecc1a
  417adc:	sbb    al,0x6e
  417ade:	daa    
  417adf:	jmp    0xcdd51413
  417ae4:	pop    ecx
  417ae5:	test   dl,0x99
  417ae8:	xchg   DWORD PTR [eax-0x391b01d],edi
  417aee:	adc    ch,ah
  417af0:	xchg   ebx,eax
  417af1:	jb     0x417a9d
  417af3:	sub    DWORD PTR [ebp-0x47],0x37
  417af7:	sub    BYTE PTR [ebp-0xd472574],dh
  417afd:	inc    DWORD PTR [esi-0x42]
  417b00:	mov    ebx,0xf7c54405
  417b05:	sub    dl,BYTE PTR [ecx+0x27]
  417b08:	call   FWORD PTR [eax+ebx*4-0x71]
  417b0c:	stos   BYTE PTR es:[edi],al
  417b0d:	lea    edi,[ebx+0x45]
  417b10:	rol    DWORD PTR [ecx-0x49],cl
  417b13:	inc    di
  417b15:	mov    ss,WORD PTR [edi+0x2420c00b]
  417b1b:	jge    0x417ab5
  417b1d:	outs   dx,BYTE PTR ds:[esi]
  417b1e:	cmp    ebp,DWORD PTR [ebp+0x19]
  417b21:	jecxz  0x417b6b
  417b23:	xor    DWORD PTR cs:[ebp-0x7d],esp
  417b27:	shl    DWORD PTR [ecx],cl
  417b29:	jp     0x417aef
  417b2b:	sti    
  417b2c:	aas    
  417b2d:	repz adc edx,DWORD PTR [ebx-0x51]
  417b31:	sub    eax,0x916ee7bb
  417b36:	add    ah,al
  417b38:	dec    esp
  417b39:	ins    DWORD PTR es:[edi],dx
  417b3a:	leave  
  417b3b:	ror    DWORD PTR [ebp-0x6e],1
  417b3e:	pushf  
  417b3f:	scas   eax,DWORD PTR es:[edi]
  417b40:	es add eax,0x402716ea
  417b46:	mov    edx,0x649bef3a
  417b4b:	gs jnp 0x417b31
  417b4e:	in     eax,dx
  417b4f:	or     dh,BYTE PTR [edx]
  417b51:	lods   eax,DWORD PTR ds:[esi]
  417b52:	test   DWORD PTR [eax+0x1e6ac4cb],edx
  417b58:	test   DWORD PTR fs:[ebx+0x5],0xedc164e4
  417b60:	outs   dx,BYTE PTR ds:[esi]
  417b61:	jnp    0x417b23
  417b63:	and    BYTE PTR [esi],0x87
  417b66:	sub    edx,DWORD PTR [ebx+0x7d0b89eb]
  417b6c:	xor    al,BYTE PTR [eax]
  417b6e:	pop    ss
  417b6f:	jbe    0x417be4
  417b71:	push   ebp
  417b72:	jge    0x417bea
  417b74:	sbb    ebp,DWORD PTR [eax-0x3205952f]
  417b7a:	fwait
  417b7b:	ret    
  417b7c:	inc    edi
  417b7d:	cs arpl bp,di
  417b80:	adc    dh,dl
  417b82:	dec    edi
  417b83:	call   FWORD PTR [ecx*4+0x2614191d]
  417b8a:	shl    BYTE PTR [edx-0x72],1
  417b8d:	retf   0xdbb8
  417b90:	adc    esi,DWORD PTR [ebx]
  417b92:	pop    ebx
  417b93:	jg     0x417c0a
  417b95:	stos   DWORD PTR es:[edi],eax
  417b96:	and    DWORD PTR [ebx+0x58881a7],ebx
  417b9c:	(bad)  
  417b9d:	fst    QWORD PTR [ebp-0x31b5c98e]
  417ba3:	sbb    esp,edi
  417ba5:	xor    al,0x80
  417ba7:	repz je 0x417bea
  417baa:	ja     0x417bc8
  417bac:	push   ss
  417bad:	cwde   
  417bae:	outs   dx,DWORD PTR ds:[esi]
  417baf:	push   0xffffff88
  417bb1:	push   ebx
  417bb2:	test   BYTE PTR [edx],0x22
  417bb5:	stos   DWORD PTR es:[edi],eax
  417bb6:	(bad)  
  417bb7:	mov    bh,0xd6
  417bb9:	unpcklps xmm2,XMMWORD PTR [esi]
  417bbc:	imul   esp,ebx,0xec78bd59
  417bc2:	mov    WORD PTR [esi+0x4d],cs
  417bc5:	jo     0x417c40
  417bc7:	sbb    BYTE PTR [eax-0x7a],dl
  417bca:	fisttp WORD PTR [ebp-0x41]
  417bcd:	add    BYTE PTR [ebx+0x3f],0x8e
  417bd1:	lea    ebp,[edi-0x73fc9cf4]
  417bd7:	(bad)  
  417bd8:	jmp    0x9373:0xfa21e8e9
  417bdf:	popf   
  417be0:	les    esi,FWORD PTR [esi-0x6cca2dd8]
  417be6:	jae    0x417bcf
  417be8:	std    
  417be9:	retf   0x2847
  417bec:	mov    eax,DWORD PTR [edi]
  417bee:	xchg   esp,eax
  417bef:	jge    0x417b93
  417bf1:	es retf 0xc646
  417bf5:	mov    ecx,0x46c4efba
  417bfa:	cmp    eax,0x4176f1ab
  417bff:	pop    esp
  417c00:	pushf  
  417c01:	sbb    ebp,0x46102629
  417c07:	add    al,0xf4
  417c09:	dec    ecx
  417c0a:	sti    
  417c0b:	icebp  
  417c0c:	mov    bl,0x92
  417c0e:	sbb    al,BYTE PTR [esi+0x79fbd534]
  417c14:	in     al,0x49
  417c16:	in     al,0xe4
  417c18:	jae    0x417ba0
  417c1a:	loopne 0x417c94
  417c1c:	repz xchg edx,eax
  417c1e:	hlt    
  417c1f:	adc    cl,BYTE PTR [esi+ecx*1-0x263fd9df]
  417c26:	stos   DWORD PTR es:[edi],eax
  417c27:	add    eax,DWORD PTR [ebx-0x15]
  417c2a:	mov    esi,0x45a6d022
  417c2f:	fld    QWORD PTR [edx+0x72]
  417c32:	jno    0x417c2c
  417c34:	(bad)  
  417c35:	jo     0x417c7c
  417c37:	cmp    DWORD PTR [ecx],esi
  417c39:	pop    ds
  417c3a:	inc    esi
  417c3b:	hlt    
  417c3c:	and    al,0x56
  417c3e:	cli    
  417c3f:	mov    eax,0x6e067b0d
  417c44:	xor    BYTE PTR [edi+0x7a5f3b2d],al
  417c4a:	out    0x9a,al
  417c4c:	imul   esi,ebp,0xffffff91
  417c4f:	pushf  
  417c50:	leave  
  417c51:	out    dx,eax
  417c52:	adc    BYTE PTR [ebx-0x33e1415f],bh
  417c58:	lods   eax,DWORD PTR ds:[esi]
  417c59:	sbb    eax,0xd1d45be4
  417c5e:	div    BYTE PTR [esi-0x18]
  417c61:	fisttp DWORD PTR ds:0xf34b389b
  417c67:	(bad)  
  417c68:	ins    BYTE PTR es:[edi],dx
  417c69:	mov    ch,0xe5
  417c6b:	sub    BYTE PTR ds:0xe1b4630f,dl
  417c71:	push   ebx
  417c72:	arpl   WORD PTR [eax-0x6d829d68],si
  417c78:	pop    edi
  417c79:	das    
  417c7a:	mov    edi,0x869a40ed
  417c7f:	out    0x54,al
  417c81:	sub    DWORD PTR [edi+0x6ea5ac62],edi
  417c87:	loope  0x417cb4
  417c89:	in     al,0x78
  417c8b:	lahf   
  417c8c:	call   0xb47976bd
  417c91:	int3   
  417c92:	test   al,0xd7
  417c94:	addr16 in al,0xaf
  417c97:	test   ebp,ebx
  417c99:	pop    ss
  417c9a:	jae    0x417ce5
  417c9c:	fild   QWORD PTR [esi]
  417c9e:	aaa    
  417c9f:	test   DWORD PTR [edi-0x2c4251cd],ebp
  417ca5:	es or  eax,0x742088c3
  417cab:	jle    0x417d17
  417cad:	in     al,dx
  417cae:	hlt    
  417caf:	outs   dx,BYTE PTR ds:[esi]
  417cb0:	sub    ch,BYTE PTR [edx-0x4e]
  417cb3:	pop    ebx
  417cb4:	aas    
  417cb5:	xlat   BYTE PTR ds:[ebx]
  417cb6:	push   cs
  417cb7:	stos   DWORD PTR es:[edi],eax
  417cb8:	inc    esi
  417cb9:	or     eax,0x3047990e
  417cbe:	(bad)  
  417cbf:	into   
  417cc0:	inc    edx
  417cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cc2:	jo     0x417c78
  417cc4:	dec    esi
  417cc5:	loope  0x417c60
  417cc7:	iret   
  417cc8:	inc    ebp
  417cc9:	addr16 xchg ebx,eax
  417ccb:	es inc esp
  417ccd:	retf   0x2ae9
  417cd0:	adc    BYTE PTR [edi-0x2c],dl
  417cd3:	test   al,0x30
  417cd5:	les    ecx,FWORD PTR [ebx-0x27]
  417cd8:	test   al,0x99
  417cda:	sbb    ah,BYTE PTR [edx+0x34]
  417cdd:	(bad)  
  417cde:	jae    0x417d42
  417ce0:	xchg   edx,eax
  417ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ce2:	mov    esi,0x3ee2d593
  417ce7:	jo     0x417ced
  417ce9:	mov    eax,es:0x7e2100cd
  417cef:	cld    
  417cf0:	pop    esp
  417cf1:	in     eax,0xbd
  417cf3:	fidiv  WORD PTR [ebp-0x74c69ae9]
  417cf9:	fmul   QWORD PTR gs:[ebp+esi*1+0x76]
  417cfe:	and    eax,0x6f06be91
  417d03:	in     al,0x26
  417d05:	mov    ecx,0x576b0b77
  417d0a:	pop    eax
  417d0b:	test   eax,0x4efc467c
  417d10:	adc    dl,al
  417d12:	int    0xe2
  417d14:	sub    cl,BYTE PTR [ebp+0x18e15155]
  417d1a:	mov    cl,0x8a
  417d1c:	out    0xdf,al
  417d1e:	sti    
  417d1f:	sub    edi,ecx
  417d21:	or     ebp,DWORD PTR [ebx+0x60]
  417d24:	pop    ds
  417d25:	pop    ss
  417d26:	test   eax,0x3c569722
  417d2b:	aam    0x2a
  417d2d:	(bad)  
  417d2e:	stos   DWORD PTR es:[edi],eax
  417d2f:	rcl    BYTE PTR [eax+0x62],1
  417d32:	cs ins DWORD PTR es:[edi],dx
  417d34:	xchg   edi,eax
  417d35:	inc    esi
  417d36:	jmp    0x9a03:0x6b3ed61c
  417d3d:	mov    ds:0x9bbe05b5,eax
  417d42:	adc    ch,dh
  417d44:	out    dx,eax
  417d45:	enter  0x8742,0x4c
  417d49:	imul   eax,DWORD PTR [edi-0x6c8a37ba],0x3bd9c307
  417d53:	xor    al,0xa1
  417d55:	gs ds in al,dx
  417d58:	cwde   
  417d59:	cmp    eax,0xf17cb38e
  417d5e:	test   eax,0x2f0b7635
  417d63:	and    eax,0x6ffbe26c
  417d68:	aad    0x61
  417d6a:	push   ds
  417d6b:	test   eax,0x915fc7e3
  417d70:	push   edi
  417d71:	dec    esi
  417d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d73:	add    DWORD PTR [ebp+0x33df07ad],eax
  417d79:	ja     0x417dca
  417d7b:	icebp  
  417d7c:	movnti DWORD PTR [ebx],edx
  417d7f:	xchg   ebx,eax
  417d80:	in     eax,0xf1
  417d82:	inc    ecx
  417d83:	inc    ebx
  417d84:	add    edx,DWORD PTR [ebx+eax*4-0x4f]
  417d88:	dec    esp
  417d89:	or     eax,0x54169418
  417d8e:	mov    cl,0xd7
  417d90:	xchg   BYTE PTR [esi+eiz*4-0x69],cl
  417d94:	stos   BYTE PTR es:[edi],al
  417d95:	fs inc ax
  417d98:	mov    ?,WORD PTR [esi+0x10fba7b7]
  417d9e:	test   DWORD PTR [edx-0x1a],ebx
  417da1:	and    dl,BYTE PTR [eax]
  417da3:	cmp    BYTE PTR [ebx+eax*1],bl
  417da6:	dec    edx
  417da7:	push   0xffffffb6
  417da9:	xchg   ebx,eax
  417daa:	push   cs
  417dab:	push   eax
  417dac:	or     BYTE PTR ds:0xf689f000,bl
  417db2:	cmp    BYTE PTR [ebx+0x2c],cl
  417db5:	fwait
  417db6:	dec    edi
  417db7:	stc    
  417db8:	stos   DWORD PTR es:[edi],eax
  417db9:	call   0x9ad185d6
  417dbe:	xor    BYTE PTR [ecx+0x1b],dh
  417dc1:	jns    0x417e10
  417dc3:	mov    DWORD PTR [eax],ecx
  417dc5:	jl     0x417db0
  417dc7:	sub    BYTE PTR fs:[ebp-0x26],dh
  417dcb:	ret    0x8d3c
  417dce:	std    
  417dcf:	adc    al,0xc1
  417dd1:	mov    ds:0x1a5bfbd6,al
  417dd6:	add    ecx,DWORD PTR [edi+0x35]
  417dd9:	pop    edx
  417dda:	call   0x4a99:0xeccf8412
  417de1:	sub    ch,BYTE PTR [eax]
  417de3:	sub    edx,esi
  417de5:	xor    al,0x7f
  417de7:	shl    BYTE PTR [edi-0x5c9cd8f8],0x42
  417dee:	test   DWORD PTR [ebp-0x75],0xae6c9d9a
  417df5:	aaa    
  417df6:	fmul   st,st(4)
  417df8:	sbb    al,0x14
  417dfa:	adc    BYTE PTR [ebx+0x1daefd24],bl
  417e00:	mov    ebx,0xfcdf9e27
  417e05:	inc    eax
  417e06:	jmp    0x6389f93f
  417e0b:	or     ebx,DWORD PTR [ebx]
  417e0d:	and    ebp,DWORD PTR [ecx+0xda5391e]
  417e13:	or     eax,DWORD PTR [ebx+0x73a468ac]
  417e19:	test   ah,bh
  417e1b:	cli    
  417e1c:	mov    bl,0x2
  417e1e:	ror    bl,cl
  417e20:	push   0xd60f355
  417e25:	cmp    ecx,edx
  417e27:	jle    0x417e6f
  417e29:	cmp    ecx,DWORD PTR ds:0xe74a2a9b
  417e2f:	pop    esp
  417e30:	aam    0x2e
  417e32:	pop    edi
  417e33:	pusha  
  417e34:	and    esp,esi
  417e36:	or     al,bl
  417e38:	adc    edi,ecx
  417e3a:	dec    ecx
  417e3b:	mov    bh,0x69
  417e3d:	or     DWORD PTR [ebx-0x6b85ef29],ecx
  417e43:	out    dx,eax
  417e44:	and    eax,0x90596066
  417e49:	xchg   edx,eax
  417e4a:	mov    bh,0x7e
  417e4c:	push   0x53
  417e4e:	jmpw   0xdd9a
  417e52:	dec    ebx
  417e53:	push   eax
  417e54:	inc    edi
  417e55:	pop    ecx
  417e56:	pop    esp
  417e57:	rcr    dl,0x2b
  417e5a:	or     esi,DWORD PTR [eax+0x65e0ff20]
  417e60:	repnz sub BYTE PTR [ecx],cl
  417e63:	mov    ?,WORD PTR [ebp+edx*1+0x63]
  417e67:	fst    QWORD PTR [esi-0x2656ea42]
  417e6d:	mov    al,ds:0xcc741409
  417e72:	test   eax,0x2892e1a8
  417e77:	add    BYTE PTR [esi+0x4a],dl
  417e7a:	jmp    0x417e46
  417e7c:	mov    ebx,0x56d91fcf
  417e81:	jg     0x417e2f
  417e83:	ins    BYTE PTR es:[edi],dx
  417e84:	or     eax,0x3f9a2007
  417e89:	out    dx,al
  417e8a:	push   0xdc35a8cb
  417e8f:	jge    0x417e66
  417e91:	popf   
  417e92:	cwde   
  417e93:	sbb    ecx,esi
  417e95:	mov    edx,0x59a96cbc
  417e9a:	jecxz  0x417efd
  417e9c:	mov    edi,0xb7a6817a
  417ea1:	jle    0x417ed9
  417ea3:	sub    cl,BYTE PTR [eax-0x6a]
  417ea6:	jnp    0x417ecf
  417ea8:	push   eax
  417ea9:	imul   edi,DWORD PTR [ebp-0x17b85c39],0x9b707fb4
  417eb3:	xlat   BYTE PTR ds:[ebx]
  417eb4:	mov    eax,0xeb2d4e66
  417eb9:	mov    BYTE PTR [ebp-0x7f],dl
  417ebc:	das    
  417ebd:	mov    ebx,0xe6c2a26c
  417ec2:	inc    eax
  417ec3:	stos   BYTE PTR es:[edi],al
  417ec4:	test   WORD PTR ds:0xe63ea51b,bp
  417ecb:	mov    ds:0x3262a971,al
  417ed0:	push   edx
  417ed1:	and    ebx,0x94e84ea5
  417ed7:	outs   dx,BYTE PTR ds:[esi]
  417ed8:	test   BYTE PTR [ecx+0x75],dl
  417edb:	dec    edi
  417edc:	push   es
  417edd:	(bad)  
  417ede:	sbb    BYTE PTR [ecx],bl
  417ee0:	outs   dx,BYTE PTR ds:[si]
  417ee2:	pop    esi
  417ee3:	das    
  417ee4:	xchg   ebx,eax
  417ee5:	adc    eax,0x77170ade
  417eea:	dec    esi
  417eeb:	pop    ebp
  417eec:	xor    ebp,ecx
  417eee:	mov    edx,0xd3e12205
  417ef3:	xor    dl,al
  417ef5:	push   ebx
  417ef6:	jb     0x417edb
  417ef8:	cmp    edi,0x1a01b0c8
  417efe:	jmp    0x417e87
  417f00:	test   eax,0x6a642f8
  417f05:	cli    
  417f06:	fdiv   QWORD PTR ds:0xd53feddd
  417f0c:	ret    
  417f0d:	hlt    
  417f0e:	mov    ds:0xad44ad1,al
  417f13:	rol    DWORD PTR [ecx-0x4f],1
  417f16:	pop    edi
  417f17:	fcom   st(5)
  417f19:	shr    bl,1
  417f1b:	fisub  DWORD PTR [esi]
  417f1d:	xchg   esp,eax
  417f1e:	das    
  417f1f:	pusha  
  417f20:	pushf  
  417f21:	fldcw  WORD PTR [edi]
  417f23:	std    
  417f24:	fsubr  DWORD PTR [edi-0x55b89063]
  417f2b:	sub    BYTE PTR [edi+0x49472b13],dl
  417f31:	je     0x417f78
  417f33:	scas   eax,DWORD PTR es:[edi]
  417f34:	sub    DWORD PTR [ebp-0x59],0x1262ab54
  417f3b:	js     0x417f52
  417f3d:	mov    edi,0xb96de808
  417f42:	sbb    ecx,DWORD PTR [ebp+ebp*4+0x63]
  417f46:	std    
  417f47:	retf   0x2f6c
  417f4a:	adc    al,0xf4
  417f4c:	mov    eax,0x70a6bee5
  417f51:	nop
  417f52:	mov    ebp,0xedeb11e1
  417f57:	mov    ch,0xa5
  417f59:	sub    BYTE PTR [esi+esi*4],dh
  417f5c:	je     0x417f8c
  417f5e:	sub    al,0x98
  417f60:	pop    edi
  417f61:	retf   0x1964
  417f64:	push   es
  417f65:	and    bl,BYTE PTR [eax+edx*4+0x5e]
  417f69:	rcl    BYTE PTR [ebp-0x3d],1
  417f6c:	mov    ds:0x94f540af,eax
  417f71:	ficomp DWORD PTR [ecx+0x1f]
  417f74:	xor    BYTE PTR [edi+0x2b7c06ec],ch
  417f7a:	or     bl,BYTE PTR ds:0x3e9180d4
  417f80:	mov    ecx,0x8d4c3b36
  417f85:	stc    
  417f86:	mov    BYTE PTR [eax],ch
  417f88:	stc    
  417f89:	dec    ebx
  417f8a:	sbb    DWORD PTR [esp+edi*4-0x47d2a200],ebp
  417f91:	sbb    bl,BYTE PTR [ecx]
  417f93:	ss mov dl,0x1c
  417f96:	and    al,0xbc
  417f98:	fidiv  DWORD PTR [esi-0x5504ccff]
  417f9e:	push   edx
  417f9f:	hlt    
  417fa0:	out    dx,eax
  417fa1:	xor    BYTE PTR es:[ecx],cl
  417fa4:	lods   eax,DWORD PTR ds:[esi]
  417fa5:	or     eax,0x710fc314
  417faa:	xchg   esp,eax
  417fab:	sbb    eax,0x4cdc24e6
  417fb0:	mov    eax,ds:0xd85d368c
  417fb5:	pop    ss
  417fb6:	lods   al,BYTE PTR ds:[esi]
  417fb7:	loope  0x417fa8
  417fb9:	sbb    BYTE PTR [edi+eiz*1],cl
  417fbc:	dec    ecx
  417fbd:	sbb    bl,BYTE PTR [esi-0x194c9876]
  417fc3:	jno    0x417f73
  417fc5:	jb     0x418014
  417fc7:	mov    BYTE PTR [ebx+0xdbe60db],dl
  417fcd:	adc    al,0x2f
  417fcf:	xchg   edi,eax
  417fd0:	pop    es
  417fd1:	jae    0x417f7d
  417fd3:	rcr    BYTE PTR [si-0x80],1
  417fd7:	imul   esi,DWORD PTR [esi],0xc5b7bce5
  417fdd:	and    eax,0xd3885cb7
  417fe2:	push   ebx
  417fe3:	das    
  417fe4:	aas    
  417fe5:	lods   eax,DWORD PTR ds:[esi]
  417fe6:	imul   ebp,DWORD PTR [ecx+edi*4],0xd83b1098
  417fed:	fcomi  st,st(3)
  417fef:	jns    0x417fee
  417ff1:	jbe    0x417fd9
  417ff3:	sbb    BYTE PTR [esi-0x4c],bh
  417ff6:	and    DWORD PTR [eax],0x82b75d42
  417ffc:	push   esi
  417ffd:	sub    esp,DWORD PTR [ebp-0x2f]
  418000:	es sysenter 
  418003:	mov    ds:0xf6a0451c,al
  418008:	mov    ah,0x59
  41800a:	mov    BYTE PTR [edx+0x582d703f],ah
  418010:	mov    ebx,0xba446451
  418015:	lahf   
  418016:	mov    eax,0x8370b871
  41801b:	out    dx,eax
  41801c:	test   BYTE PTR [edx],dl
  41801e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41801f:	pop    esp
  418020:	add    al,0xcb
  418022:	sub    BYTE PTR [edx],dh
  418024:	sahf   
  418025:	push   cs
  418026:	retf   0x9cbd
  418029:	mov    esi,0x4f665724
  41802e:	mov    cl,BYTE PTR [ebp-0x65]
  418031:	fwait
  418032:	dec    esi
  418033:	add    eax,DWORD PTR [ebp+ebp*8-0x68cd3051]
  41803a:	mov    esi,0x7a793bd9
  41803f:	ror    al,1
  418041:	sbb    eax,0xd9bd1152
  418046:	sub    ah,bl
  418048:	jmp    0x41808f
  41804a:	sbb    DWORD PTR [edi],ebx
  41804c:	add    al,BYTE PTR [ecx]
  41804e:	ret    
  41804f:	cmp    eax,DWORD PTR [edx-0x6c]
  418052:	inc    ah
  418054:	and    ah,BYTE PTR [ebx-0x67bb69d6]
  41805a:	aas    
  41805b:	mov    ecx,0xb61a5336
  418060:	ins    BYTE PTR es:[edi],dx
  418061:	sbb    eax,0x5484d7ed
  418066:	mov    bl,0x9a
  418068:	mov    ds:0x4a126f97,al
  41806d:	aas    
  41806e:	(bad)  
  41806f:	push   ebp
  418070:	inc    esp
  418071:	mov    ds:0x662efa7a,eax
  418076:	int    0xa5
  418078:	adc    esp,DWORD PTR [esi-0xe]
  41807b:	addr16 aaa 
  41807d:	stc    
  41807e:	ficom  DWORD PTR [eax+0x62]
  418081:	mov    al,ds:0x75169ea2
  418086:	add    al,0x74
  418088:	bound  ecx,QWORD PTR [ebx+0x73caba28]
  41808e:	cmc    
  41808f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418090:	adc    ebp,DWORD PTR [esi-0x5b]
  418093:	jge    0x41807b
  418095:	inc    esp
  418096:	pop    ebx
  418097:	mov    ecx,0xee3d7eba
  41809c:	(bad)  
  41809d:	jmp    0x64fd74fd
  4180a2:	adc    edi,ecx
  4180a4:	add    DWORD PTR [ecx+0x54383ef],eax
  4180aa:	lds    edx,FWORD PTR [ecx-0x71]
  4180ad:	ss test al,0x4f
  4180b0:	cmp    BYTE PTR [edi-0x29b4d5be],al
  4180b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180b7:	loopne 0x41812e
  4180b9:	push   ds
  4180ba:	adc    ecx,edi
  4180bc:	jae    0x4180f6
  4180be:	adc    BYTE PTR [edi-0x7b722865],0xc8
  4180c5:	mov    al,0x3e
  4180c7:	pop    ds
  4180c8:	dec    esp
  4180c9:	mov    al,ds:0x4f6929a4
  4180ce:	jmp    0x418116
  4180d0:	adc    esi,ecx
  4180d2:	rol    ch,cl
  4180d4:	and    BYTE PTR [ecx-0x71691c4e],cl
  4180da:	aas    
  4180db:	mov    bh,bl
  4180dd:	ror    DWORD PTR [ebp+0x4c],0xc8
  4180e1:	test   DWORD PTR [ebx],esp
  4180e3:	int3   
  4180e4:	cs jae 0x418165
  4180e7:	iret   
  4180e8:	adc    DWORD PTR [ebx+0x29865c97],esp
  4180ee:	xchg   ecx,eax
  4180ef:	scas   al,BYTE PTR es:[edi]
  4180f0:	ja     0x418134
  4180f2:	or     al,0x6e
  4180f4:	shl    BYTE PTR es:[ecx-0x7c],cl
  4180f8:	push   edi
  4180f9:	(bad)  
  4180fa:	jg     0x41811b
  4180fc:	and    eax,0x4b79ae74
  418101:	jmp    0x543f:0x3380ffa4
  418108:	push   esi
  418109:	cdq    
  41810a:	arpl   WORD PTR [ecx-0x6c5567f3],bp
  418110:	sahf   
  418111:	retf   0xe6d0
  418114:	outs   dx,BYTE PTR ds:[esi]
  418115:	stos   BYTE PTR es:[edi],al
  418116:	mov    BYTE PTR [esi],cl
  418118:	push   esi
  418119:	sbb    al,0xbb
  41811b:	mov    ch,0xca
  41811d:	xchg   DWORD PTR ds:0x77e4cd54,edx
  418123:	scas   al,BYTE PTR es:[edi]
  418124:	pushf  
  418125:	dec    edx
  418126:	push   ss
  418127:	les    ebx,FWORD PTR [edi-0x63]
  41812a:	cwde   
  41812b:	outs   dx,DWORD PTR ds:[esi]
  41812c:	in     eax,dx
  41812d:	popf   
  41812e:	pushf  
  41812f:	jne    0x41817b
  418131:	push   eax
  418132:	psubsb mm5,QWORD PTR [edx+eax*1-0xa77924c]
  41813a:	dec    ebx
  41813b:	and    esp,DWORD PTR [eax-0x138e8d2f]
  418141:	mov    bh,0x36
  418143:	jns    0x41813f
  418145:	push   edi
  418146:	retf   
  418147:	inc    edi
  418148:	pop    esi
  418149:	or     dh,BYTE PTR ds:0xbc978fa4
  41814f:	scas   al,BYTE PTR es:[edi]
  418150:	cmp    al,0x7f
  418152:	jp     0x4180d4
  418154:	mov    ss,eax
  418156:	or     DWORD PTR [esi-0xeeafdda],ebx
  41815c:	sahf   
  41815d:	jge    0x4181ad
  41815f:	add    eax,0x1c64f5ef
  418164:	cmp    al,BYTE PTR cs:[ebp+0x55]
  418168:	sar    BYTE PTR [eax-0x7b],1
  41816b:	scas   al,BYTE PTR es:[edi]
  41816c:	push   ebx
  41816d:	cwde   
  41816e:	(bad)  
  41816f:	xor    esi,edi
  418171:	ficom  WORD PTR [eax+0x1125a279]
  418177:	dec    esi
  418178:	(bad)  
  418179:	ror    BYTE PTR [edx-0x6e],cl
  41817c:	cmp    DWORD PTR [edx],0xffffff90
  41817f:	add    DWORD PTR [edi-0x11432b94],0xffffffd2
  418186:	mov    ebx,0xd906c64e
  41818b:	inc    edx
  41818c:	aaa    
  41818d:	aas    
  41818e:	dec    edi
  41818f:	xor    DWORD PTR fs:[eax+0x76],edx
  418193:	cmp    ecx,DWORD PTR [edi+0x1b]
  418196:	sub    BYTE PTR [ecx+ebx*4+0x53],bl
  41819a:	shl    BYTE PTR [esi+0x6319f965],0xf5
  4181a1:	pop    ecx
  4181a2:	daa    
  4181a3:	xor    cl,BYTE PTR [ebx+0x36]
  4181a6:	mov    dh,0xba
  4181a8:	add    al,0x82
  4181aa:	mov    esi,0xaefe887d
  4181af:	fisubr DWORD PTR [esi-0x4eb74817]
  4181b5:	test   DWORD PTR [ebx+0x55fbcac4],edi
  4181bb:	xchg   DWORD PTR [edx-0x5daf2e39],ebp
  4181c1:	or     al,cl
  4181c3:	dec    eax
  4181c4:	or     eax,0x9a01457e
  4181c9:	adc    eax,DWORD PTR [ebx-0x374cc2da]
  4181cf:	pop    esi
  4181d0:	lds    eax,FWORD PTR [esi]
  4181d2:	jno    0x4181fe
  4181d4:	(bad)  
  4181d6:	stc    
  4181d7:	xchg   edi,eax
  4181d8:	sbb    eax,0x6607eb63
  4181dd:	hlt    
  4181de:	push   ebx
  4181df:	adc    eax,0xeb3f082c
  4181e4:	or     BYTE PTR [eax+0x27b037b5],dl
  4181ea:	xor    dl,BYTE PTR [edi-0x77]
  4181ed:	cld    
  4181ee:	cmp    edx,DWORD PTR [edi-0x54]
  4181f1:	fsubr  st(4),st
  4181f3:	bnd jle 0x4181e6
  4181f6:	(bad)  
  4181f7:	repz popa 
  4181f9:	ror    BYTE PTR [edx-0x80],cl
  4181fc:	stos   BYTE PTR es:[edi],al
  4181fd:	sbb    al,0x6f
  4181ff:	aam    0x3a
  418201:	out    dx,al
  418202:	inc    ecx
  418203:	pushf  
  418204:	(bad)  
  418205:	push   esi
  418206:	cdq    
  418207:	arpl   bx,sp
  418209:	ins    BYTE PTR es:[edi],dx
  41820a:	cmp    DWORD PTR [eax+0x59],0xd3c5bf0
  418211:	sub    eax,0x72a41fb9
  418216:	add    cl,ch
  418218:	dec    edx
  418219:	sub    al,0x13
  41821b:	fmul   DWORD PTR [ebp+eax*1-0x55]
  41821f:	inc    esi
  418220:	leave  
  418221:	xchg   edi,eax
  418222:	add    DWORD PTR [ebx],0x99e464fb
  418228:	out    dx,eax
  418229:	loopne 0x41825a
  41822b:	out    0xd5,eax
  41822d:	jg     0x418258
  41822f:	inc    ebp
  418230:	adc    eax,0x3383b775
  418235:	(bad)  
  418236:	cmc    
  418237:	mov    esp,ebx
  418239:	or     BYTE PTR gs:[eax+edi*4+0x37efeda1],bl
  418241:	jmp    0x418256
  418243:	pop    edi
  418244:	mov    al,ds:0xb5087970
  418249:	xchg   esp,eax
  41824a:	out    0xa0,al
  41824c:	inc    ebx
  41824d:	pop    eax
  41824f:	push   0x959aa40b
  418254:	xor    eax,0xa52d3f4a
  418259:	add    DWORD PTR [edi+0x1e],ecx
  41825c:	repnz xchg ebp,eax
  41825e:	cmc    
  41825f:	arpl   sp,si
  418261:	sub    eax,0x1c71cf9c
  418266:	test   BYTE PTR [edi+0x73],ch
  418269:	fstp   TBYTE PTR [edi-0x582da5d7]
  41826f:	gs jae 0x418200
  418272:	mov    DWORD PTR ds:0xfc85c8a8,eax
  418278:	(bad)  
  418279:	fsubr  DWORD PTR [edx-0x5e]
  41827c:	call   DWORD PTR [esp+ebp*8+0x905e107]
  418283:	in     al,dx
  418284:	adc    eax,0xc80673e8
  418289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41828a:	push   ebx
  41828b:	xchg   esp,eax
  41828c:	push   esp
  41828d:	sar    DWORD PTR [edi],0x95
  418290:	xchg   ebx,eax
  418291:	inc    edi
  418292:	popf   
  418293:	mov    ds:0x21b3bab1,eax
  418298:	clc    
  418299:	(bad)
  41829d:	mov    eax,0x51913f19
  4182a2:	mov    edi,0x7427771d
  4182a7:	pop    edx
  4182a8:	push   es
  4182a9:	adc    DWORD PTR [esi-0x70eaeea3],ecx
  4182af:	and    ebx,edx
  4182b1:	mov    ecx,0x6c53219c
  4182b6:	push   ebp
  4182b7:	push   ss
  4182b8:	sub    eax,0xdfca8c29
  4182bd:	or     al,0x5a
  4182bf:	scas   al,BYTE PTR es:[edi]
  4182c0:	jnp    0x41824d
  4182c2:	push   ecx
  4182c3:	fwait
  4182c4:	xor    BYTE PTR [eax-0x72],0x5b
  4182c8:	sub    DWORD PTR [ecx+ebx*1+0x3060cd40],0x87302ca3
  4182d3:	and    edx,esi
  4182d5:	in     al,0xda
  4182d7:	bound  esp,QWORD PTR [esi-0x72]
  4182da:	int    0xfe
  4182dc:	ins    BYTE PTR es:[edi],dx
  4182dd:	jb     0x4182fd
  4182df:	jbe    0x41835e
  4182e1:	cmp    BYTE PTR [ebx-0x1d993abc],cl
  4182e7:	mov    esi,0xfc2ac5f8
  4182ec:	sub    BYTE PTR [eax-0x71490b29],cl
  4182f2:	test   al,0x6e
  4182f4:	scas   al,BYTE PTR es:[edi]
  4182f5:	aam    0xfe
  4182f7:	imul   ebx,DWORD PTR [ebx-0x25e2f7a2],0x97066811
  418301:	pop    edi
  418302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418303:	iret   
  418304:	sbb    ah,BYTE PTR es:[edx+0x10354302]
  41830b:	imul   edi,eax,0xffffffa9
  41830e:	dec    edi
  41830f:	dec    ebp
  418310:	test   eax,0x26a1e4c6
  418315:	(bad)  
  418316:	rol    DWORD PTR [ebx-0x2cb96874],cl
  41831c:	retf   0x24a2
  41831f:	jge    0x41833f
  418321:	popa   
  418322:	cmp    esp,DWORD PTR [esi-0xd]
  418325:	dec    ah
  418327:	dec    esi
  418328:	cmc    
  418329:	aaa    
  41832a:	xchg   esi,eax
  41832b:	jp     0x4182d6
  41832d:	mov    ah,0x7
  41832f:	test   eax,0xe5d3d981
  418334:	inc    ecx
  418335:	loopne 0x4182f2
  418337:	push   esp
  418338:	hlt    
  418339:	ret    
  41833a:	xor    ch,BYTE PTR [ecx+ebp*4-0x54eea468]
  418341:	adc    DWORD PTR [ecx+eiz*4+0x68],edx
  418345:	cmp    ebp,edi
  418347:	lods   al,BYTE PTR ds:[esi]
  418348:	cmc    
  418349:	push   ds
  41834a:	sub    al,dl
  41834c:	pop    eax
  41834d:	fld    TBYTE PTR [ecx-0x4]
  418350:	mov    dl,0x8b
  418352:	rcr    edx,0xf0
  418355:	sub    ah,BYTE PTR ds:0x2d592f63
  41835b:	jno    0x41835c
  41835d:	jmp    0xf31f5ee6
  418362:	stc    
  418363:	xchg   ecx,eax
  418364:	loop   0x4183b1
  418366:	dec    esp
  418367:	mov    cl,0xfd
  418369:	jl     0x4183e6
  41836b:	xchg   edx,eax
  41836c:	or     BYTE PTR [esi],ch
  41836e:	or     DWORD PTR cs:[esp+eax*8],ebp
  418372:	sub    al,0x34
  418374:	retf   
  418375:	stos   DWORD PTR es:[edi],eax
  418376:	mov    edx,0xab047a00
  41837b:	mov    eax,ds:0x55725a5c
  418380:	and    DWORD PTR [eax-0x38],ecx
  418383:	jp     0x4183a2
  418385:	outs   dx,BYTE PTR ds:[esi]
  418386:	push   es
  418387:	lods   eax,DWORD PTR ds:[esi]
  418388:	(bad)  
  418389:	imul   esp,DWORD PTR gs:[edi],0x6984e407
  418390:	mov    eax,0x45b1d182
  418395:	imul   eax,DWORD PTR [esi+0x10],0x9e5efe54
  41839c:	add    ebx,DWORD PTR [edx]
  41839e:	loopne 0x4183eb
  4183a0:	jno    0x41834e
  4183a2:	push   edx
  4183a3:	shr    BYTE PTR [eax],1
  4183a5:	jno    0x418394
  4183a7:	cld    
  4183a8:	mov    dh,0xba
  4183aa:	jbe    0x4183cf
  4183ac:	inc    esi
  4183ad:	or     ebp,edx
  4183af:	ja     0x418427
  4183b1:	mov    edx,0x668525d1
  4183b6:	jbe    0x4183b4
  4183b8:	jg     0x41835f
  4183ba:	cli    
  4183bb:	push   cs
  4183bc:	fdiv   QWORD PTR [esi-0x2d]
  4183bf:	ret    0x6ffb
  4183c2:	lods   al,BYTE PTR ds:[esi]
  4183c3:	push   es
  4183c4:	cdq    
  4183c5:	(bad)  
  4183c6:	cmc    
  4183c7:	jae    0x418409
  4183c9:	sub    al,0xf0
  4183cb:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183cd:	push   0x1e945eaa
  4183d2:	sub    eax,0xcb0eeca2
  4183d7:	add    eax,0x8c85d9e6
  4183dc:	lea    esp,[esi-0x7ff27b93]
  4183e2:	sbb    DWORD PTR [ecx-0x16],0xffffff9f
  4183e6:	adc    al,0xbd
  4183e8:	js     0x41840c
  4183ea:	push   ss
  4183eb:	retf   
  4183ec:	fsub   QWORD PTR [edx+0x253c61a1]
  4183f2:	cld    
  4183f3:	cmp    eax,0x4ce0d15a
  4183f8:	xor    DWORD PTR [edi-0x2e00181b],ebp
  4183fe:	dec    esi
  4183ff:	cmp    eax,0xabd4590a
  418404:	imul   eax,DWORD PTR ds:0xe682920e,0xb
  41840b:	xchg   esi,eax
  41840c:	mov    eax,ds:0x143d8a4f
  418412:	call   0x827c4514
  418417:	mov    edx,0xa749e73d
  41841c:	imul   DWORD PTR [edi+0x6bd9de02]
  418422:	pusha  
  418423:	imul   ebx,DWORD PTR [edi+0x2553553e],0x4a
  41842a:	jl     0x418490
  41842c:	test   eax,0xa0344070
  418431:	push   eax
  418432:	mov    al,0x64
  418434:	cmp    al,0xda
  418436:	jmp    0x3d41c5be
  41843b:	push   ebp
  41843c:	inc    esi
  41843d:	jne    0x4183f9
  41843f:	scas   al,BYTE PTR es:[edi]
  418440:	xchg   ebx,eax
  418441:	aas    
  418442:	dec    edi
  418443:	pop    ebx
  418444:	mov    edx,0x88ab52bf
  418449:	inc    edi
  41844a:	clc    
  41844b:	(bad)  
  41844c:	push   0x78
  41844e:	pop    edx
  41844f:	loopne 0x41840f
  418451:	jmp    0x65c63685
  418456:	pop    edx
  418457:	xchg   edi,eax
  418458:	pop    eax
  418459:	retf   0xaaf3
  41845c:	int    0x50
  41845e:	mov    esp,0x31224c23
  418463:	xchg   ecx,eax
  418464:	push   edi
  418465:	cmp    BYTE PTR [edi-0x2c659dc5],ch
  41846b:	fs lahf 
  41846d:	inc    esi
  41846e:	clc    
  41846f:	pop    esp
  418470:	call   0x4248:0x4bcfb78c
  418477:	aad    0x99
  418479:	jno    0x41840c
  41847b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41847c:	outs   dx,DWORD PTR ds:[esi]
  41847d:	jbe    0x418473
  41847f:	inc    edx
  418480:	loope  0x41849e
  418482:	push   edi
  418483:	lds    ebp,FWORD PTR [esi+0x1c1a179c]
  418489:	aaa    
  41848a:	adc    esp,edi
  41848c:	add    eax,0x52ef075c
  418491:	cmp    eax,0x18be06e1
  418496:	mov    ebp,0xd6e7591c
  41849b:	inc    esp
  41849c:	rcr    DWORD PTR [ecx+0x12],0x8d
  4184a0:	fld    QWORD PTR [eax-0x67]
  4184a3:	in     al,0xb4
  4184a5:	lahf   
  4184a6:	fdiv   DWORD PTR [esi+0x7e]
  4184a9:	lods   eax,DWORD PTR ds:[esi]
  4184aa:	jecxz  0x4184b6
  4184ac:	jg     0x4184d4
  4184ae:	jmp    0x4184c7
  4184b0:	dec    ebp
  4184b1:	inc    ebp
  4184b2:	pop    esi
  4184b3:	jno    0x4184bd
  4184b5:	dec    ebp
  4184b6:	shr    al,1
  4184b8:	sub    al,0x1a
  4184ba:	mov    cl,0xaa
  4184bc:	push   esi
  4184bd:	mov    esi,0x4152966e
  4184c2:	adc    DWORD PTR [edi+0x18],eax
  4184c5:	bound  edx,QWORD PTR [edx-0x61]
  4184c8:	call   0x12d7:0x9f6da28f
  4184cf:	pop    ebp
  4184d0:	cli    
  4184d1:	xchg   ebp,eax
  4184d2:	push   edx
  4184d3:	jbe    0x4184b7
  4184d5:	stc    
  4184d6:	push   es
  4184d7:	pop    ecx
  4184d8:	out    dx,eax
  4184d9:	add    al,0x26
  4184db:	(bad)  
  4184dd:	ds (bad) 
  4184df:	and    BYTE PTR [eax],ah
  4184e1:	add    eax,0x1f1a7d22
  4184e6:	ins    DWORD PTR es:[edi],dx
  4184e7:	or     dh,bh
  4184e9:	std    
  4184ea:	mov    ds:0xeadff1d3,eax
  4184ef:	fistp  QWORD PTR [ebp+0x4af73745]
  4184f5:	inc    esi
  4184f6:	rcl    BYTE PTR [esi-0x75],1
  4184f9:	sbb    BYTE PTR [esi+0x84ce866],dh
  4184ff:	lods   al,BYTE PTR ds:[esi]
  418500:	dec    esp
  418501:	mov    dl,BYTE PTR [edi]
  418503:	sbb    ebx,DWORD PTR [esi+eax*2]
  418506:	xchg   ebx,eax
  418507:	pop    es
  418508:	test   BYTE PTR [esi-0x3],0x84
  41850c:	je     0x418582
  41850e:	adc    ebp,esi
  418510:	(bad)  
  418511:	outs   dx,BYTE PTR ds:[esi]
  418512:	dec    ecx
  418513:	jmp    0x418535
  418515:	jbe    0x41857e
  418517:	xchg   esp,eax
  418518:	jno    0x4184d3
  41851a:	adc    al,0x89
  41851c:	push   edi
  41851d:	jno    0x4184ec
  41851f:	cmp    al,0xcd
  418521:	fcom   DWORD PTR ds:0xf579320
  418527:	bound  ebx,QWORD PTR ds:0xee70e2f9
  41852d:	sbb    DWORD PTR [ecx+0x2b04e8cb],ebx
  418533:	mov    esi,0xf2fb278c
  418538:	mov    eax,ds:0xef207d09
  41853d:	pusha  
  41853e:	sbb    al,BYTE PTR [edx-0x320d7bcc]
  418544:	sub    DWORD PTR [edi-0x24],edi
  418547:	and    eax,esi
  418549:	mov    edi,0xddfb157d
  41854f:	sub    eax,0x43e3ba41
  418554:	mov    eax,0xa1d55be6
  418559:	ret    
  41855a:	in     eax,0x2e
  41855c:	gs jge 0x418550
  41855f:	fsubr  QWORD PTR ds:0xc46c2a3b
  418565:	out    dx,eax
  418566:	pop    edx
  418567:	lds    ebp,FWORD PTR [ebp-0x78]
  41856a:	push   ds
  41856b:	icebp  
  41856c:	dec    ecx
  41856d:	inc    ecx
  41856e:	fs pop ss
  418570:	scas   eax,DWORD PTR es:[edi]
  418571:	sub    eax,0x18d62303
  418576:	cdq    
  418577:	mov    al,ds:0x98188894
  41857c:	push   0xffffffca
  41857e:	mov    ecx,0xf9969086
  418583:	fcom   DWORD PTR [ebx+eax*8+0x762c14e8]
  41858a:	popa   
  41858b:	mov    ds,WORD PTR [edx+0x73]
  41858e:	bound  edi,QWORD PTR [edx-0x4995819a]
  418594:	fiadd  DWORD PTR [edi+0x35]
  418597:	fidiv  WORD PTR [esi]
  418599:	add    esi,edi
  41859b:	(bad)  
  41859c:	jg     0x418562
  41859e:	xchg   edx,eax
  41859f:	neg    BYTE PTR [ebp+0x62]
  4185a2:	sbb    BYTE PTR [ecx],0x93
  4185a5:	and    BYTE PTR [edx],dl
  4185a7:	or     ch,bh
  4185a9:	xchg   ebx,eax
  4185aa:	adc    dl,dl
  4185ac:	jns    0x418580
  4185ae:	dec    edi
  4185af:	pop    ds
  4185b0:	cdq    
  4185b1:	jmp    0x41855f
  4185b3:	sub    edi,DWORD PTR [eax+0x34]
  4185b6:	push   esi
  4185b7:	cmp    DWORD PTR [eax-0x68],edi
  4185ba:	and    dl,dh
  4185bc:	cld    
  4185bd:	jne    0x418635
  4185bf:	push   esi
  4185c0:	xlat   BYTE PTR ds:[ebx]
  4185c1:	pop    edi
  4185c2:	mov    edx,0xc7ae06d4
  4185c7:	aas    
  4185c8:	pop    ecx
  4185c9:	and    ah,BYTE PTR [ebp-0x9]
  4185cc:	add    BYTE PTR [edx+0x4b386757],al
  4185d2:	aas    
  4185d3:	ss pop esp
  4185d5:	pop    esp
  4185d6:	clc    
  4185d7:	inc    edx
  4185d8:	scas   al,BYTE PTR es:[edi]
  4185d9:	sub    al,0x85
  4185db:	pop    edi
  4185dc:	dec    DWORD PTR ds:[eax-0x71ae3021]
  4185e3:	repnz sbb esi,DWORD PTR [esi]
  4185e6:	pop    es
  4185e7:	out    0xf6,eax
  4185e9:	mov    dh,0xa9
  4185eb:	mov    al,0xd0
  4185ed:	jnp    0x41864d
  4185ef:	or     ebp,DWORD PTR [esi-0x7d6fa8ad]
  4185f5:	xor    dl,BYTE PTR [edi+esi*1+0x5b20d698]
  4185fc:	or     al,0x95
  4185fe:	xchg   DWORD PTR [edx],esi
  418600:	ret    
  418601:	lods   al,BYTE PTR ds:[esi]
  418602:	fstp   DWORD PTR [eax+edx*1+0x1f]
  418606:	popa   
  418607:	jecxz  0x4185cf
  418609:	pop    ecx
  41860a:	imul   DWORD PTR [esi+edi*2]
  41860d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41860e:	or     ecx,eax
  418610:	imul   esi,ecx,0xffffffae
  418613:	jmp    0x442c:0x412698d6
  41861a:	in     eax,dx
  41861b:	xor    BYTE PTR [ecx-0x19],cl
  41861e:	out    dx,al
  41861f:	add    ebp,DWORD PTR [ebp-0x17]
  418622:	lods   al,BYTE PTR ds:[esi]
  418623:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  418625:	and    BYTE PTR [eax-0x18],0xe2
  418629:	cld    
  41862a:	pop    esp
  41862b:	pop    ebx
  41862c:	jmp    0x4185be
  41862e:	fcomp  st(2)
  418630:	and    BYTE PTR [edi],dl
  418632:	pop    ebx
  418633:	pop    ss
  418634:	fwait
  418635:	sub    BYTE PTR [ecx+0xa],dh
  418638:	or     ch,BYTE PTR [esi-0x3d83ebe2]
  41863e:	jl     0x418603
  418640:	pop    ss
  418641:	aaa    
  418642:	scas   al,BYTE PTR es:[edi]
  418643:	(bad)  
  418644:	push   ecx
  418645:	inc    esp
  418646:	rcr    DWORD PTR [edx-0x7],0x74
  41864a:	jg     0x4185f4
  41864c:	pop    ebx
  41864d:	ds or  al,0x4f
  418650:	jl     0x4185f4
  418652:	xchg   edx,eax
  418653:	js     0x418696
  418655:	fiadd  WORD PTR [edi]
  418657:	cs mov edx,edx
  41865a:	data16 mov bh,0xf4
  41865d:	pop    ds
  41865e:	test   esi,0xb3eb7ad3
  418664:	cwde   
  418665:	cs xchg ebx,eax
  418667:	test   eax,0xa1622815
  41866c:	dec    esi
  41866d:	ret    0xf9b9
  418670:	inc    ebx
  418671:	mov    ebp,0x4833e4f8
  418676:	iret   
  418677:	fsubr  DWORD PTR [edi+eax*1+0x23032195]
  41867e:	xor    BYTE PTR [esi],al
  418680:	gs jne 0x4186a8
  418683:	daa    
  418684:	adc    dl,0x14
  418687:	sbb    BYTE PTR [ecx+edx*2+0x21],dh
  41868b:	xor    eax,0x7a8eaf9e
  418690:	push   es
  418691:	(bad)  
  418692:	loopne 0x418644
  418694:	push   ds
  418695:	rcr    BYTE PTR [ebx-0x6f],1
  418698:	or     ch,al
  41869a:	cli    
  41869b:	(bad)  
  41869c:	ja     0x418690
  41869e:	xor    edx,ebp
  4186a0:	loopne 0x4186cd
  4186a2:	repnz stos DWORD PTR es:[edi],eax
  4186a4:	and    al,0x20
  4186a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186a7:	es iret 
  4186a9:	out    0xb2,al
  4186ab:	pop    ds
  4186ac:	daa    
  4186ad:	scas   eax,DWORD PTR es:[edi]
  4186ae:	hlt    
  4186af:	(bad)  
  4186b0:	jg     0x418715
  4186b2:	dec    edx
  4186b3:	cmp    eax,0x210f6f1f
  4186b8:	xchg   al,cl
  4186ba:	or     BYTE PTR [ebx+0x545b5720],ch
  4186c0:	popf   
  4186c1:	arpl   WORD PTR [edx-0x50],dx
  4186c4:	out    dx,eax
  4186c5:	fs mov esi,0x4ad976c
  4186cb:	xor    ebx,esp
  4186cd:	jecxz  0x418654
  4186cf:	inc    esp
  4186d0:	in     al,dx
  4186d1:	aas    
  4186d2:	rol    esi,0x64
  4186d5:	jle    0x41872d
  4186d7:	jb     0x4186a1
  4186d9:	(bad)  
  4186da:	and    cl,BYTE PTR [esp+ebp*2+0x22]
  4186de:	addr16 mov esp,0x57d05893
  4186e4:	lahf   
  4186e5:	cmc    
  4186e6:	cmp    BYTE PTR [eax+0x4cfe944],ah
  4186ec:	dec    ebx
  4186ed:	test   BYTE PTR [ecx],0xed
  4186f0:	adc    bh,BYTE PTR [edi]
  4186f2:	push   edx
  4186f3:	dec    dx
  4186f5:	sub    al,0xd2
  4186f7:	ja     0x4186dd
  4186f9:	cmp    bl,BYTE PTR [edx]
  4186fb:	or     edx,DWORD PTR ds:0x39614c6
  418701:	mov    esi,DWORD PTR [eax+0x60]
  418704:	jecxz  0x4186a8
  418706:	and    al,0x68
  418708:	push   esp
  418709:	mov    dl,0x29
  41870b:	nop
  41870c:	xor    esi,DWORD PTR [esi+0x4c7da0f3]
  418712:	push   edx
  418713:	mov    WORD PTR [ecx],gs
  418715:	jne    0x4186ec
  418717:	pop    ebp
  418718:	lods   al,BYTE PTR ds:[esi]
  418719:	mov    eax,ds:0x168ce645
  41871e:	xor    cl,BYTE PTR [eax+0xf]
  418721:	rcr    DWORD PTR [ebx],1
  418723:	stos   BYTE PTR es:[edi],al
  418724:	ret    0xbe35
  418727:	jmp    FWORD PTR [esp+esi*1+0x5c]
  41872b:	mov    eax,ebp
  41872d:	ss inc eax
  41872f:	adc    BYTE PTR [ebp+0x44],dl
  418732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418733:	mov    ecx,0xc8c7cf3f
  418738:	pop    es
  418739:	or     eax,0x7a1ddef1
  41873e:	jbe    0x41870f
  418740:	jbe    0x4187b3
  418742:	push   ss
  418743:	push   ebp
  418744:	xchg   ebx,eax
  418745:	xor    eax,0xac9c587a
  41874a:	inc    esi
  41874b:	rol    ebp,1
  41874d:	jge    0x4187a3
  41874f:	fld    QWORD PTR [esi-0x55c485d6]
  418755:	xchg   edx,eax
  418756:	ss jl  0x41871a
  418759:	sub    BYTE PTR [ecx+0x22],cl
  41875c:	mov    dh,0xee
  41875e:	jl     0x418734
  418760:	inc    ebp
  418761:	ins    DWORD PTR es:[edi],dx
  418762:	cmp    DWORD PTR [edi],esp
  418764:	push   ecx
  418765:	adc    al,0xab
  418767:	sub    bl,BYTE PTR [ecx+0x2afd5e0a]
  41876d:	sub    ch,BYTE PTR [edi+0x4e0e7a28]
  418773:	daa    
  418774:	jl     0x4187e6
  418776:	ret    
  418777:	mov    dl,0xb8
  418779:	and    bl,al
  41877b:	into   
  41877c:	loopne 0x41876e
  41877e:	mov    edi,0x5acf9617
  418783:	jecxz  0x4187a9
  418785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418786:	jecxz  0x4187d4
  418788:	jb     0x4187d1
  41878a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41878b:	xor    al,0xd6
  41878d:	mov    ebp,0x85c1364e
  418792:	dec    esp
  418793:	(bad)  
  418794:	loop   0x418741
  418796:	int3   
  418797:	test   eax,0x2fa4fd23
  41879c:	inc    ebx
  41879d:	mov    eax,ds:0x2792bcbd
  4187a2:	inc    ecx
  4187a3:	shr    BYTE PTR [ecx+ecx*1-0x175e77cd],0x86
  4187ab:	test   eax,0x455d3287
  4187b0:	ins    BYTE PTR es:[edi],dx
  4187b1:	loop   0x4187a1
  4187b3:	icebp  
  4187b4:	arpl   WORD PTR [esi],bx
  4187b6:	scas   eax,DWORD PTR es:[edi]
  4187b7:	fiadd  WORD PTR [eax+0x761d4e63]
  4187bd:	push   edx
  4187be:	push   eax
  4187bf:	mov    al,0xea
  4187c2:	and    DWORD PTR [edi],edx
  4187c4:	icebp  
  4187c5:	shr    cl,1
  4187c7:	xor    eax,DWORD PTR [ecx+0x3e]
  4187ca:	imul   edi,DWORD PTR [ebp-0x4ca65522],0xffffff84
  4187d1:	call   0x4629cc3c
  4187d6:	sbb    ch,BYTE PTR [ecx+0x603667ae]
  4187dc:	mov    al,0xae
  4187de:	fsubr  st(2),st
  4187e0:	or     al,0x3b
  4187e2:	mov    bl,0xe6
  4187e4:	loope  0x418788
  4187e6:	(bad)  
  4187e8:	push   esi
  4187e9:	retf   0xb4e5
  4187ec:	cs push ecx
  4187ee:	mov    esi,0x165bb369
  4187f3:	in     eax,dx
  4187f4:	pop    edi
  4187f5:	xchg   ecx,eax
  4187f6:	into   
  4187f7:	inc    ecx
  4187f8:	dec    esp
  4187f9:	cmp    dh,BYTE PTR [edi-0x144756fc]
  4187ff:	or     DWORD PTR [ecx-0x9],ebx
  418802:	dec    eax
  418803:	loop   0x4187a4
  418805:	add    eax,0x16421148
  41880a:	push   ebx
  41880b:	push   ecx
  41880c:	inc    ebp
  41880d:	imul   esp,edx,0x2
  418810:	jae    0x4187e0
  418812:	sbb    BYTE PTR [edi+0x437a75e6],dh
  418818:	fidiv  WORD PTR [edx-0x71]
  41881b:	pop    ss
  41881c:	cmp    BYTE PTR [edi],ah
  41881e:	add    al,0xb0
  418820:	pop    esi
  418821:	pusha  
  418822:	ret    0x47fd
  418825:	test   al,0x82
  418827:	mov    DWORD PTR [ebx],0xc350cd44
  41882d:	test   al,0x56
  41882f:	in     eax,0x12
  418831:	adc    esi,DWORD PTR [ebx+eiz*8]
  418834:	sub    bl,BYTE PTR [bx-0x73]
  418838:	hlt    
  418839:	idiv   BYTE PTR [ebp-0x15]
  41883c:	mov    BYTE PTR [edx-0x2bba9aa8],cl
  418842:	out    0x3b,al
  418844:	jle    0x41889e
  418846:	ins    DWORD PTR es:[edi],dx
  418847:	test   eax,0xeb72c73c
  41884c:	pushf  
  41884d:	jb     0x4187fa
  41884f:	mov    al,0x54
  418851:	cmp    ebx,edx
  418853:	imul   eax,DWORD PTR [ebp-0x325f4a39],0x44b1368b
  41885d:	lea    esi,[eax+eiz*1]
  418860:	mov    dh,0xe1
  418862:	mov    ch,0xa7
  418864:	and    ecx,DWORD PTR [ebx]
  418866:	loop   0x418875
  418868:	aam    0x2c
  41886a:	aaa    
  41886b:	jp     0x418830
  41886d:	out    0x6f,eax
  41886f:	and    eax,0xced3624d
  418874:	jne    0x418806
  418876:	(bad)  
  418877:	ja     0x418885
  418879:	jle    0x4188b3
  41887b:	push   0xffffff8f
  41887d:	mov    esp,0xe32db7e1
  418882:	stos   BYTE PTR es:[edi],al
  418883:	mov    DWORD PTR [ebx-0x55],eax
  418886:	cmp    ecx,DWORD PTR [ebx-0x7e758123]
  41888c:	pusha  
  41888d:	xor    BYTE PTR ds:0xc8040313,bl
  418893:	les    esp,FWORD PTR [esi+0x6f]
  418896:	shl    BYTE PTR [eax+ecx*2-0x1e],cl
  41889a:	gs ins DWORD PTR es:[edi],dx
  41889c:	mov    ebx,0x4e00f500
  4188a1:	xor    DWORD PTR [eax],ebx
  4188a3:	fsub   DWORD PTR [edx]
  4188a5:	gs test ch,ah
  4188a8:	into   
  4188a9:	inc    eax
  4188aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ab:	aaa    
  4188ac:	(bad)  
  4188ad:	sub    eax,0xc6fd9376
  4188b2:	fild   QWORD PTR [ebx-0x2e9db17d]
  4188b8:	xlat   BYTE PTR ds:[ebx]
  4188b9:	dec    ebx
  4188ba:	sahf   
  4188bb:	stos   BYTE PTR es:[edi],al
  4188bc:	int    0x19
  4188be:	sub    eax,0x39584928
  4188c3:	sbb    eax,0x8c797266
  4188c8:	mov    ds:0xe7c874fb,eax
  4188cd:	ret    
  4188ce:	cwde   
  4188cf:	jp     0x4188fe
  4188d1:	adc    BYTE PTR [esi],dl
  4188d3:	mov    ch,0x3e
  4188d5:	int    0x73
  4188d7:	arpl   dx,bp
  4188d9:	sub    edx,esi
  4188db:	xor    edx,eax
  4188dd:	mov    DWORD PTR [ebp+0x8],edx
  4188e0:	mov    edx,DWORD PTR [ebp+0x8]
  4188e3:	mov    ebx,DWORD PTR [ebp-0x58]
  4188e6:	add    edx,0x5708c4
  4188ec:	imul   edx,ebx
  4188ef:	mov    DWORD PTR [ebp-0x58],edx
  4188f2:	mov    edx,DWORD PTR [ebp+0x8]
  4188f5:	mov    ebx,DWORD PTR [ebp-0x54]
  4188f8:	add    edx,0x64f8a2
  4188fe:	or     edx,ebx
  418900:	mov    DWORD PTR [ebp-0x54],edx
  418903:	mov    edx,DWORD PTR [ebp+0x8]
  418906:	mov    ebx,DWORD PTR [ebp-0x50]
  418909:	add    edx,ecx
  41890b:	xor    edx,ebx
  41890d:	mov    DWORD PTR [ebp-0x50],edx
  418910:	mov    edx,DWORD PTR [ebp+0x8]
  418913:	mov    ebx,DWORD PTR [ebp-0x4c]
  418916:	add    edx,edi
  418918:	and    edx,ebx
  41891a:	mov    DWORD PTR [ebp-0x4c],edx
  41891d:	mov    edx,DWORD PTR [ebp+0x8]
  418920:	mov    ebx,DWORD PTR [ebp-0x48]
  418923:	lea    edx,[ebx+edx*1+0x241fc1f]
  41892a:	mov    DWORD PTR [ebp-0x48],edx
  41892d:	mov    edx,DWORD PTR [ebp+0x8]
  418930:	mov    ebx,0xfa5e15e2
  418935:	sub    ebx,edx
  418937:	add    ebx,DWORD PTR [ebp-0x44]
  41893a:	mov    DWORD PTR [ebp-0x44],ebx
  41893d:	mov    edx,DWORD PTR [ebp+0x8]
  418940:	xor    edx,eax
  418942:	add    edx,esi
  418944:	jne    0x41653b
  41894a:	mov    edx,DWORD PTR [ebp-0x14]
  41894d:	mov    DWORD PTR [ebp+0x8],edx
  418950:	jmp    0x4189c5
  418955:	mov    edx,DWORD PTR [ebp+0x8]
  418958:	mov    ebx,DWORD PTR [ebp-0x8]
  41895b:	xor    edx,eax
  41895d:	xor    ebx,eax
  41895f:	sub    edx,ebx
  418961:	sub    edx,esi
  418963:	xor    edx,eax
  418965:	mov    DWORD PTR [ebp+0x8],edx
  418968:	mov    edx,DWORD PTR [ebp+0x8]
  41896b:	mov    ebx,DWORD PTR [ebp-0x58]
  41896e:	add    edx,0x5708c4
  418974:	imul   edx,ebx
  418977:	mov    DWORD PTR [ebp-0x58],edx
  41897a:	mov    edx,DWORD PTR [ebp+0x8]
  41897d:	mov    ebx,DWORD PTR [ebp-0x54]
  418980:	add    edx,0x64f8a2
  418986:	or     edx,ebx
  418988:	mov    DWORD PTR [ebp-0x54],edx
  41898b:	mov    edx,DWORD PTR [ebp+0x8]
  41898e:	mov    ebx,DWORD PTR [ebp-0x50]
  418991:	add    edx,ecx
  418993:	xor    edx,ebx
  418995:	mov    DWORD PTR [ebp-0x50],edx
  418998:	mov    edx,DWORD PTR [ebp+0x8]
  41899b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41899e:	add    edx,edi
  4189a0:	and    edx,ebx
  4189a2:	mov    DWORD PTR [ebp-0x4c],edx
  4189a5:	mov    edx,DWORD PTR [ebp+0x8]
  4189a8:	mov    ebx,DWORD PTR [ebp-0x48]
  4189ab:	lea    edx,[ebx+edx*1+0x241fc1f]
  4189b2:	mov    DWORD PTR [ebp-0x48],edx
  4189b5:	mov    edx,DWORD PTR [ebp+0x8]
  4189b8:	mov    ebx,0xfa5e15e2
  4189bd:	sub    ebx,edx
  4189bf:	add    ebx,DWORD PTR [ebp-0x44]
  4189c2:	mov    DWORD PTR [ebp-0x44],ebx
  4189c5:	mov    edx,DWORD PTR [ebp+0x8]
  4189c8:	xor    edx,eax
  4189ca:	add    edx,esi
  4189cc:	jne    0x418955
  4189d2:	mov    edx,DWORD PTR [ebp-0x8]
  4189d5:	mov    ebx,DWORD PTR [ebp-0xc]
  4189d8:	xor    edx,eax
  4189da:	lea    edx,[edx+ebx*1+0x3272e6]
  4189e1:	mov    DWORD PTR [ebp-0xc],edx
  4189e4:	mov    edx,DWORD PTR [ebp-0x10]
  4189e7:	xor    edx,eax
  4189e9:	add    edx,esi
  4189eb:	jne    0x4161dc
  4189f1:	jmp    0x41d22c
  4189f6:	mov    ecx,DWORD PTR [ebp-0x14]
  4189f9:	mov    DWORD PTR [ebp+0x8],ecx
  4189fc:	jmp    0x41d199
  418a01:	mov    ecx,DWORD PTR [ebp+0x8]
  418a04:	mov    edx,DWORD PTR [ebp-0x8]
  418a07:	xor    ecx,eax
  418a09:	xor    edx,eax
  418a0b:	sub    ecx,edx
  418a0d:	sub    ecx,esi
  418a0f:	xor    ecx,eax
  418a11:	mov    DWORD PTR [ebp+0x8],ecx
  418a14:	mov    ecx,DWORD PTR [ebp+0x8]
  418a17:	mov    edx,DWORD PTR [ebp-0x58]
  418a1a:	jmp    0x41adac
  418a1f:	hlt    
  418a20:	mov    ebp,DWORD PTR [esi-0x6c]
  418a23:	xlat   BYTE PTR ds:[ebx]
  418a24:	jne    0x418a98
  418a26:	mov    edx,DWORD PTR [esi+0x53]
  418a29:	test   eax,0x683af89b
  418a2e:	sbb    eax,0x7071334f
  418a33:	or     eax,0xc670705f
  418a38:	aas    
  418a39:	sbb    eax,0x3fe9f75c
  418a3e:	mov    ecx,0xd7a8175d
  418a43:	mov    esi,0xc4bf2821
  418a48:	fist   DWORD PTR [eax+0x7483598c]
  418a4e:	cmp    eax,0xf02ada10
  418a53:	add    esp,edx
  418a55:	sbb    DWORD PTR [eax-0x461d9bca],ebx
  418a5b:	xor    dl,BYTE PTR [ebx]
  418a5d:	xchg   esi,eax
  418a5e:	bound  esp,QWORD PTR [edx]
  418a60:	int    0xda
  418a62:	dec    edi
  418a63:	or     BYTE PTR [ebp+0x18],bl
  418a66:	lahf   
  418a67:	push   edx
  418a68:	fmul   DWORD PTR [ebx-0x56]
  418a6b:	addr16 (bad) 
  418a6d:	data16 sbb BYTE PTR [edi+eax*8],ah
  418a71:	in     al,0x2
  418a73:	popf   
  418a74:	daa    
  418a75:	inc    edx
  418a76:	or     ch,BYTE PTR [esi-0x7a]
  418a79:	or     DWORD PTR [edx+eiz*1],0xffffff9d
  418a7d:	loopne 0x418a86
  418a7f:	ins    DWORD PTR es:[edi],dx
  418a80:	test   DWORD PTR [ebx],edi
  418a82:	lds    ebp,FWORD PTR [ecx-0x5f]
  418a85:	or     bl,BYTE PTR [eax+0x2597da4f]
  418a8b:	out    dx,al
  418a8c:	sbb    eax,0xf25aaccc
  418a91:	sub    esp,edi
  418a93:	nop
  418a94:	aam    0xb8
  418a96:	in     al,0xb3
  418a98:	inc    esp
  418a99:	dec    edx
  418a9a:	push   ss
  418a9b:	mov    WORD PTR [ebx],cs
  418a9d:	out    0x9a,al
  418a9f:	test   DWORD PTR [edx-0x53],esi
  418aa2:	pop    esi
  418aa3:	mov    ch,0x97
  418aa5:	bound  esp,QWORD PTR [eax+0x19768b3e]
  418aab:	iret   
  418aac:	jne    0x418b2b
  418aae:	jo     0x418a61
  418ab0:	fisttp QWORD PTR [ebx-0x6b]
  418ab3:	popa   
  418ab4:	shr    BYTE PTR [ecx-0x49782e6],0x82
  418abb:	loopne 0x418a82
  418abd:	lock sbb al,0x1a
  418ac0:	or     bh,BYTE PTR [ebp-0x66]
  418ac3:	jne    0x418b31
  418ac5:	outs   dx,BYTE PTR ds:[esi]
  418ac6:	xchg   edx,eax
  418ac7:	jmp    0xacda67
  418acc:	call   0x149f:0x2f565a95
  418ad3:	jp     0x418ad7
  418ad5:	(bad)  
  418ad6:	sbb    ebx,DWORD PTR [esi+ebx*2-0x33]
  418ada:	jmp    0x15caf399
  418adf:	(bad)  
  418ae1:	sahf   
  418ae2:	or     eax,0x52d9bdd4
  418ae7:	stos   BYTE PTR es:[edi],al
  418ae8:	inc    esp
  418ae9:	ja     0x418a89
  418aeb:	inc    edx
  418aec:	mov    ebp,0xcd6652b3
  418af1:	aaa    
  418af2:	jno    0x418b49
  418af4:	xchg   ebx,eax
  418af5:	mov    bh,0x5
  418af7:	lock mov edi,0x16932230
  418afd:	xchg   ebp,edi
  418aff:	fadd   st(7),st
  418b01:	mov    bl,BYTE PTR [esi-0x3c033707]
  418b07:	pusha  
  418b08:	test   al,0xdd
  418b0a:	cmc    
  418b0b:	das    
  418b0c:	fldenv [eax+0x14]
  418b0f:	and    bl,BYTE PTR [eax+edx*1+0x11]
  418b13:	ficom  WORD PTR [esi+0x79d2d44f]
  418b19:	pop    ecx
  418b1a:	sbb    DWORD PTR [ecx],esi
  418b1c:	xchg   edx,eax
  418b1d:	fld    QWORD PTR [edi+edi*2-0x3736db34]
  418b24:	pop    ds
  418b25:	xor    eax,0x2fec10c
  418b2a:	dec    esi
  418b2b:	cdq    
  418b2c:	sbb    eax,0x57e307d8
  418b31:	inc    eax
  418b32:	ja     0x418b71
  418b34:	xor    BYTE PTR [edx+0x374b2b7],al
  418b3a:	lea    ebp,[edi-0x2618d3ee]
  418b40:	mov    BYTE PTR [eax],al
  418b42:	cmp    al,0x9
  418b44:	ins    BYTE PTR es:[edi],dx
  418b45:	loope  0x418af2
  418b47:	xchg   ecx,eax
  418b48:	adc    eax,0x9e2e7eca
  418b4d:	inc    eax
  418b4e:	pop    edi
  418b4f:	xchg   ebp,eax
  418b50:	call   0xfecb5e58
  418b55:	cmp    ecx,0xffffff93
  418b58:	or     al,0x15
  418b5a:	and    DWORD PTR [ecx],0x20
  418b5d:	add    ebx,eax
  418b5f:	xor    BYTE PTR [edi],0x64
  418b62:	dec    esp
  418b63:	push   edi
  418b64:	or     eax,0x7df20993
  418b69:	fidivr WORD PTR [eax]
  418b6b:	xchg   ebp,eax
  418b6c:	fidivr WORD PTR [edx+ecx*8]
  418b6f:	je     0x418b2d
  418b71:	cmp    ecx,DWORD PTR [ebx+esi*4-0x30]
  418b75:	and    bl,al
  418b77:	je     0x418ba4
  418b79:	cmp    DWORD PTR [ebx+0x2b],ebx
  418b7c:	add    DWORD PTR [eax-0x6f892f8c],ebx
  418b82:	mov    esi,0x60ba43d9
  418b87:	loop   0x418bfe
  418b89:	pop    ss
  418b8a:	xor    ebx,DWORD PTR ds:0x78235a6a
  418b90:	sbb    bh,BYTE PTR [edi-0x1a]
  418b93:	cmp    esi,DWORD PTR ds:0x1edf471e
  418b99:	(bad)  
  418b9b:	push   ds
  418b9c:	test   ebx,edx
  418b9e:	mov    al,0xc5
  418ba0:	adc    DWORD PTR [edi+0x75],ebp
  418ba3:	dec    ebx
  418ba4:	push   esi
  418ba5:	and    al,BYTE PTR [esi+0x3b]
  418ba8:	cld    
  418ba9:	stc    
  418baa:	mov    edi,0xddc22798
  418baf:	pop    ebx
  418bb0:	test   eax,0xc6efca65
  418bb5:	(bad)  
  418bb6:	sbb    esp,eax
  418bb8:	iret   
  418bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bba:	fsubr  QWORD PTR [esi+0x4f]
  418bbd:	adc    al,0x1d
  418bbf:	mov    bl,0x1a
  418bc2:	dec    edx
  418bc3:	adc    BYTE PTR cs:[esi],bh
  418bc6:	pop    ss
  418bc7:	add    BYTE PTR ds:0x94e9b39e,dh
  418bcd:	dec    edx
  418bce:	les    edx,FWORD PTR [ebx-0x755566b3]
  418bd4:	sbb    edi,ebx
  418bd6:	int    0x65
  418bd8:	imul   edx,DWORD PTR [ebx+0x1bd0b8ee],0xffffffdd
  418bdf:	aad    0xfe
  418be1:	rcr    BYTE PTR [ecx],1
  418be3:	mov    dl,0xf2
  418be5:	jge    0x418c43
  418be7:	shl    BYTE PTR [eax+0x24d69646],0x1
  418bee:	ret    
  418bef:	inc    ebx
  418bf0:	repnz leave 
  418bf2:	cld    
  418bf3:	std    
  418bf4:	inc    eax
  418bf5:	pop    edx
  418bf6:	int    0xe7
  418bf8:	scas   al,BYTE PTR es:[edi]
  418bf9:	(bad)  
  418bfa:	loop   0x418b8c
  418bfc:	jge    0x418c7b
  418bfe:	repnz and al,0x3
  418c01:	mov    cs,WORD PTR [edx+0x33]
  418c04:	push   ebx
  418c05:	lahf   
  418c06:	mov    gs,WORD PTR [eax+ebp*8-0x2ad3e9b1]
  418c0d:	sbb    cl,0x81
  418c10:	in     eax,0x9e
  418c12:	repz mov eax,ds:0x28fb3fd0
  418c18:	fcomp  DWORD PTR [edi]
  418c1a:	xchg   esp,eax
  418c1b:	xchg   ecx,eax
  418c1c:	xor    edi,ebx
  418c1e:	aam    0xc7
  418c20:	(bad)  
  418c21:	test   al,0x7a
  418c23:	aaa    
  418c24:	or     BYTE PTR [ebx+esi*4+0x1563cd95],0x3
  418c2c:	sbb    al,0x81
  418c2e:	jo     0x418bb1
  418c30:	jmp    0x418c3e
  418c32:	jb     0x418c49
  418c34:	mov    eax,ds:0x19cadfe5
  418c39:	mov    ds:0x36a6801a,al
  418c3e:	cwde   
  418c3f:	xchg   esi,eax
  418c40:	cmp    DWORD PTR [esi],0x2019dd92
  418c46:	jo     0x418c1e
  418c48:	imul   esi,DWORD PTR [edi+0x464588e1],0xffffff85
  418c4f:	jmp    0x563d99ab
  418c54:	ins    BYTE PTR es:[edi],dx
  418c55:	jecxz  0x418cc8
  418c57:	sub    bh,0x41
  418c5a:	pusha  
  418c5b:	fwait
  418c5c:	int3   
  418c5d:	mov    ah,0xb7
  418c5f:	jmp    0x418c2c
  418c61:	(bad)  
  418c62:	repz xor eax,0x26a0f1ef
  418c68:	stos   DWORD PTR es:[edi],eax
  418c69:	lods   al,BYTE PTR ds:[esi]
  418c6a:	adc    ch,ah
  418c6c:	ss jno 0x418cd6
  418c6f:	pop    ebx
  418c70:	dec    esp
  418c71:	add    BYTE PTR [eax+ebp*4-0x11],0xd0
  418c76:	cmp    DWORD PTR [eax-0x1],ebp
  418c79:	cli    
  418c7a:	mov    ch,0xfc
  418c7c:	fmul   DWORD PTR [edx+edi*8+0x57]
  418c80:	fwait
  418c81:	popf   
  418c82:	xlat   BYTE PTR ds:[ebx]
  418c83:	daa    
  418c84:	mov    bl,BYTE PTR [edi-0x577580b6]
  418c8a:	adc    edx,ecx
  418c8c:	pusha  
  418c8d:	out    0x62,al
  418c8f:	jae    0x418c90
  418c91:	mov    ah,0x11
  418c93:	mov    ah,0x1d
  418c95:	jo     0x418cce
  418c97:	repz retf 0x1ef8
  418c9b:	pop    eax
  418c9c:	aas    
  418c9d:	hlt    
  418c9e:	sbb    eax,0x3d58f5a2
  418ca3:	pop    eax
  418ca4:	fld    QWORD PTR [eax-0x54]
  418ca7:	stos   BYTE PTR es:[edi],al
  418ca8:	ins    BYTE PTR es:[edi],dx
  418ca9:	fisttp WORD PTR [edx+0x3b]
  418cac:	ins    DWORD PTR es:[edi],dx
  418cad:	std    
  418cae:	dec    ecx
  418caf:	cmp    dl,BYTE PTR [esi]
  418cb1:	jo     0x418cb5
  418cb3:	and    BYTE PTR [ebx+eiz*2-0x2799cd24],0xe7
  418cbb:	outs   dx,BYTE PTR ss:[esi]
  418cbd:	dec    esi
  418cbe:	int3   
  418cbf:	xchg   edi,eax
  418cc0:	xchg   edx,eax
  418cc1:	mov    esp,0x451ee9eb
  418cc6:	inc    edx
  418cc7:	fsub   DWORD PTR [edi+0x1e]
  418cca:	into   
  418ccb:	enter  0x920e,0xf6
  418ccf:	mov    cl,0x4d
  418cd1:	retf   
  418cd2:	out    0x92,al
  418cd4:	aam    0xc
  418cd6:	and    BYTE PTR [edx+ebp*1-0x426576f5],0x11
  418cde:	mov    al,ds:0xab316656
  418ce3:	shl    dl,0x12
  418ce6:	sbb    BYTE PTR [edi+0x3cd4cc9],bl
  418cec:	retf   
  418ced:	pop    es
  418cee:	xor    BYTE PTR [edx+edx*8],bh
  418cf1:	(bad)  
  418cf2:	jmp    0x484b6b75
  418cf7:	sbb    ebx,DWORD PTR [ecx+ebx*1+0x6796b179]
  418cfe:	(bad)  
  418cff:	ret    
  418d00:	mov    dh,0xb9
  418d02:	inc    ebp
  418d03:	test   BYTE PTR [ecx-0xfd95e9b],dh
  418d09:	pop    eax
  418d0a:	cmp    eax,DWORD PTR [esi+0x461d73c9]
  418d10:	adc    ch,bl
  418d12:	pop    es
  418d13:	jmp    0x289fa761
  418d18:	out    0xde,al
  418d1a:	clc    
  418d1b:	stos   DWORD PTR es:[edi],eax
  418d1c:	dec    edi
  418d1d:	dec    esp
  418d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d1f:	mov    al,0x4
  418d21:	rcr    DWORD PTR [ebx],0xce
  418d24:	mov    edi,0x37e78611
  418d29:	xchg   edx,eax
  418d2a:	add    al,0xf8
  418d2c:	or     al,0xca
  418d2e:	jecxz  0x418da8
  418d30:	jmp    0x91da:0x1ddc2a8e
  418d37:	or     BYTE PTR [esi],dl
  418d39:	jo     0x418ce3
  418d3b:	inc    DWORD PTR [edx-0x7d]
  418d3e:	enter  0x66d8,0x9
  418d42:	lahf   
  418d43:	jae    0x418d29
  418d45:	in     al,dx
  418d46:	mov    eax,ds:0xc48e4b97
  418d4b:	xor    al,0x3
  418d4d:	neg    ah
  418d4f:	jl     0x418d52
  418d51:	dec    eax
  418d52:	loope  0x418d9a
  418d54:	mov    esi,edi
  418d56:	xor    al,dl
  418d58:	out    dx,al
  418d59:	in     eax,0xfc
  418d5b:	aam    0xd9
  418d5d:	xchg   ebx,eax
  418d5e:	jae    0x418db2
  418d60:	or     BYTE PTR [eax],bh
  418d62:	fstp   QWORD PTR [ebx]
  418d64:	ficomp DWORD PTR [ecx-0x80]
  418d67:	(bad)  
  418d68:	push   0xfa0dcb80
  418d6d:	xor    ebx,DWORD PTR [ebp+0x3ff4396c]
  418d73:	icebp  
  418d74:	in     al,dx
  418d75:	dec    esp
  418d76:	pop    esi
  418d77:	imul   ecx,edi,0x4abde9d3
  418d7d:	add    ecx,DWORD PTR [esi+0x1b]
  418d80:	repz jmp 0x418df0
  418d83:	fwait
  418d84:	xor    BYTE PTR [ebx],dl
  418d86:	ss pop ss
  418d88:	rcr    BYTE PTR [esi],cl
  418d8a:	cmc    
  418d8b:	cmc    
  418d8c:	mov    dh,0x10
  418d8e:	repz xor edi,DWORD PTR cs:[ebx+0x5d]
  418d93:	xor    cl,BYTE PTR [eax]
  418d95:	stc    
  418d96:	ss ins DWORD PTR es:[edi],dx
  418d98:	add    ebp,DWORD PTR [edx-0x2e]
  418d9b:	jecxz  0x418e18
  418d9d:	xchg   ch,ah
  418d9f:	sub    esp,DWORD PTR [edx-0x4b]
  418da2:	mov    DWORD PTR ds:0x85ea72b4,eax
  418da8:	stc    
  418da9:	cwde   
  418daa:	repnz arpl si,si
  418dad:	in     al,dx
  418dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418daf:	mov    esp,0xf5c15ace
  418db4:	test   eax,0x1f6c06ed
  418db9:	call   0xa6a5:0xa9f5094a
  418dc0:	adc    DWORD PTR [edi-0x6b],0xbc87e983
  418dc7:	push   0xffffffe2
  418dc9:	push   edi
  418dca:	shl    BYTE PTR [ecx+0x1fb677a5],cl
  418dd0:	scas   eax,DWORD PTR es:[edi]
  418dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dd2:	xor    BYTE PTR [edx+0x55],bh
  418dd5:	rcr    eax,cl
  418dd7:	dec    edx
  418dd8:	clc    
  418dd9:	js     0x418e38
  418ddb:	or     edi,edi
  418ddd:	or     ebx,DWORD PTR [ebx-0x39bef0d1]
  418de3:	and    DWORD PTR [eax-0x440a43f2],ecx
  418de9:	rol    DWORD PTR [ebp*8-0x1d177b50],1
  418df0:	popfw  
  418df2:	(bad)  
  418df3:	xchg   edi,eax
  418df4:	mov    ch,al
  418df6:	mov    esi,0xa0eb1d34
  418dfb:	inc    ebp
  418dfc:	fs jl  0x418df1
  418dff:	inc    esi
  418e00:	sbb    DWORD PTR [ebx],0xc7363825
  418e06:	push   edi
  418e07:	inc    edi
  418e08:	in     eax,dx
  418e09:	pusha  
  418e0a:	sahf   
  418e0b:	push   es
  418e0c:	shl    DWORD PTR [edx],cl
  418e0e:	sub    BYTE PTR [ebx],bh
  418e10:	push   edi
  418e11:	cli    
  418e12:	mov    ebx,0xaab7969f
  418e17:	cmp    esi,edi
  418e19:	sbb    edx,DWORD PTR [ecx]
  418e1b:	fnsave [esi-0x5f660a5e]
  418e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e22:	stos   BYTE PTR es:[edi],al
  418e23:	cmp    BYTE PTR [esi+0x4df3ebbd],al
  418e29:	pop    ecx
  418e2a:	mov    ds:0x24250185,eax
  418e2f:	in     eax,dx
  418e30:	jecxz  0x418e65
  418e32:	xchg   ecx,eax
  418e33:	out    dx,al
  418e34:	dec    esi
  418e35:	sub    eax,0x2556a5b8
  418e3a:	outs   dx,DWORD PTR ds:[esi]
  418e3b:	xor    BYTE PTR [edx+0x8],cl
  418e3e:	shr    DWORD PTR [ebx-0x52],1
  418e41:	daa    
  418e42:	mov    cl,0x8b
  418e44:	stos   BYTE PTR es:[edi],al
  418e45:	std    
  418e46:	ins    DWORD PTR es:[edi],dx
  418e47:	or     bl,dl
  418e49:	call   esp
  418e4b:	mov    bl,0xeb
  418e4d:	jp     0x418e07
  418e4f:	hlt    
  418e50:	(bad)  
  418e51:	scas   eax,DWORD PTR es:[edi]
  418e52:	mov    eax,0x79610404
  418e57:	or     DWORD PTR [edi+eiz*1],edi
  418e5a:	dec    edx
  418e5b:	inc    edx
  418e5c:	push   esi
  418e5d:	adc    eax,edi
  418e5f:	outs   dx,BYTE PTR ds:[esi]
  418e60:	xchg   DWORD PTR [eax+0x159b6128],eax
  418e66:	add    DWORD PTR [edx],0x5b
  418e69:	sbb    bl,al
  418e6b:	hlt    
  418e6c:	in     al,0x71
  418e6e:	call   0x1b03f275
  418e73:	cmp    BYTE PTR [di-0x27],ah
  418e77:	stc    
  418e78:	and    ah,BYTE PTR [ecx]
  418e7a:	jb     0x418ecb
  418e7c:	mov    eax,0xc7f1c5fd
  418e81:	cwde   
  418e82:	dec    ebp
  418e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e84:	fs xchg edi,eax
  418e86:	mov    edi,0x2ef2cc00
  418e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e8c:	and    DWORD PTR [eax-0x28d1a5f7],ecx
  418e92:	push   es
  418e93:	and    al,0xb7
  418e95:	push   edx
  418e96:	div    BYTE PTR ds:0xdf188858
  418e9c:	mov    ebx,0x2ff56195
  418ea1:	data16 fbstp TBYTE PTR ds:[edx-0x19]
  418ea6:	rol    DWORD PTR [eax],cl
  418ea8:	fwait
  418ea9:	shl    DWORD PTR [ebp-0x10],cl
  418eac:	aas    
  418ead:	sbb    ebx,DWORD PTR [edx+eax*1-0x71c73a4c]
  418eb4:	sahf   
  418eb5:	popf   
  418eb6:	xchg   esi,eax
  418eb7:	adc    DWORD PTR [edx],edx
  418eb9:	stos   DWORD PTR es:[edi],eax
  418eba:	and    bh,dl
  418ebc:	jmp    0x418e66
  418ebe:	loope  0x418e9d
  418ec0:	and    dh,bh
  418ec2:	xor    dh,bl
  418ec4:	jge    0x418f40
  418ec6:	fcomi  st,st(3)
  418ec8:	les    edx,FWORD PTR [ebx-0x7a]
  418ecb:	cwde   
  418ecc:	add    al,0x8f
  418ece:	mov    BYTE PTR [ebp+0x67ecae5a],0xb1
  418ed5:	dec    ebp
  418ed6:	sbb    eax,0xbce01687
  418edb:	daa    
  418edc:	inc    esi
  418edd:	jl     0x418e75
  418edf:	mov    esp,ebp
  418ee1:	inc    edx
  418ee2:	sbb    DWORD PTR [edi+0xa],ebx
  418ee5:	mov    eax,0xc055577b
  418eea:	lahf   
  418eeb:	push   edi
  418eec:	sbb    bl,BYTE PTR [edx+ebx*8+0x60487448]
  418ef3:	mov    DWORD PTR [eax-0x2a6eb610],ecx
  418ef9:	ror    esp,cl
  418efb:	stc    
  418efc:	and    dl,cl
  418efe:	push   ss
  418eff:	mov    ah,0xd2
  418f01:	push   eax
  418f02:	pop    esp
  418f03:	mov    ecx,0x7c8e5a35
  418f08:	push   es
  418f09:	fidiv  WORD PTR ds:0xcc85306d
  418f0f:	xchg   ebx,eax
  418f10:	add    al,0x6b
  418f12:	pop    ds
  418f13:	fild   QWORD PTR [edi+0x3821c6ae]
  418f19:	or     DWORD PTR [eax],ecx
  418f1b:	mov    al,0x6a
  418f1d:	in     al,0xb3
  418f1f:	data16 repnz xlat BYTE PTR ds:[ebx]
  418f22:	f2xm1  
  418f24:	rcl    BYTE PTR [eax+0x48e928fe],cl
  418f2a:	mov    dl,0x1d
  418f2c:	pop    ecx
  418f2d:	mov    al,0x1c
  418f2f:	dec    edi
  418f30:	sub    DWORD PTR [esp+eiz*4],esi
  418f33:	jmp    0xdfb531ab
  418f38:	push   cs
  418f39:	outs   dx,DWORD PTR ds:[esi]
  418f3a:	call   0x6eebb5af
  418f3f:	int    0xf7
  418f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f42:	mov    ebp,0x30de155c
  418f47:	aad    0x5a
  418f49:	test   BYTE PTR [eax+0x726735e8],dl
  418f4f:	xchg   edi,eax
  418f50:	push   es
  418f51:	mov    fs,ecx
  418f53:	int    0xd3
  418f55:	jg     0x418f48
  418f57:	sub    eax,0x1bf018fd
  418f5c:	inc    eax
  418f5d:	in     al,0xd2
  418f5f:	sar    DWORD PTR [ebx-0x510efb8f],cl
  418f65:	aaa    
  418f66:	inc    eax
  418f67:	push   0xf9861b0d
  418f6c:	pop    edi
  418f6d:	fmul   st(7),st
  418f6f:	mov    ebx,0xcc291895
  418f74:	into   
  418f75:	sbb    BYTE PTR [edx+0x23],al
  418f78:	sub    bl,BYTE PTR [ebp-0x7e]
  418f7b:	repz sbb esp,ecx
  418f7e:	sahf   
  418f7f:	inc    ecx
  418f80:	pop    es
  418f81:	(bad)  
  418f82:	aam    0xb6
  418f84:	inc    edx
  418f85:	and    esp,DWORD PTR [edi+eiz*4+0x4f58e472]
  418f8c:	xchg   ecx,eax
  418f8d:	xchg   esi,eax
  418f8e:	sbb    BYTE PTR [edi-0x5ec14346],0x51
  418f95:	hlt    
  418f96:	loope  0x418ff5
  418f98:	or     al,0xd
  418f9a:	push   ss
  418f9b:	xchg   edx,eax
  418f9c:	pop    ecx
  418f9d:	jle    0x418f4a
  418f9f:	aam    0x5c
  418fa1:	ds sahf 
  418fa3:	jns    0x418f3a
  418fa5:	push   esp
  418fa6:	dec    ebx
  418fa7:	fadd   QWORD PTR [edx+eax*2]
  418faa:	ja     0x418f97
  418fac:	fist   WORD PTR [esi+0x2b]
  418faf:	inc    edi
  418fb0:	js     0x418f85
  418fb2:	sub    al,0xe7
  418fb4:	in     al,dx
  418fb5:	mov    dl,0x18
  418fb7:	daa    
  418fb8:	sub    al,0x54
  418fba:	or     ebp,DWORD PTR [ebx+0x7c2fb930]
  418fc0:	jecxz  0x418f57
  418fc2:	adc    eax,0x4076e882
  418fc7:	in     eax,dx
  418fc8:	push   edi
  418fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fca:	or     DWORD PTR [ecx+0x33],edx
  418fcd:	pop    esi
  418fce:	push   esp
  418fcf:	xchg   eax,eax
  418fd1:	pop    esi
  418fd2:	push   ecx
  418fd3:	fs ins BYTE PTR es:[edi],dx
  418fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd6:	pop    esi
  418fd7:	mov    DWORD PTR [ebx+0x60],ebp
  418fda:	pop    esp
  418fdb:	jp     0x41904f
  418fdd:	xor    bh,BYTE PTR [esi]
  418fdf:	jnp    0x419057
  418fe1:	or     BYTE PTR [edi+0x7],cl
  418fe4:	sbb    edi,DWORD PTR [ebx]
  418fe6:	dec    esp
  418fe7:	into   
  418fe8:	cwde   
  418fe9:	jae    0x419027
  418feb:	sub    edx,0x6212ed30
  418ff1:	cmp    eax,0x36cc064b
  418ff6:	sbb    DWORD PTR [edi+0x73],ebx
  418ff9:	popa   
  418ffa:	or     ebp,DWORD PTR [eax+0x29]
  418ffd:	inc    eax
  418ffe:	and    al,0xaa
  419000:	nop
  419001:	pop    ebp
  419002:	add    eax,0xed45372a
  419007:	or     eax,0x6779bd56
  41900c:	frstor [eax-0x3210cf04]
  419012:	cmp    DWORD PTR [bx],ecx
  419015:	cmp    al,0x0
  419017:	mov    dl,0x7d
  419019:	push   0x87afaed3
  41901e:	dec    edx
  41901f:	jnp    0x419090
  419021:	or     BYTE PTR [edi],dh
  419023:	jno    0x419031
  419025:	push   cs
  419026:	retf   0x91ab
  419029:	cmp    al,0x3f
  41902b:	pushf  
  41902c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41902d:	pop    eax
  41902e:	and    eax,0x8ac949e6
  419033:	ds arpl cx,di
  419036:	jecxz  0x418ff5
  419038:	sbb    DWORD PTR [eax-0x12],edi
  41903b:	mov    eax,ds:0x8e36e2a2
  419040:	pusha  
  419041:	scas   eax,DWORD PTR es:[edi]
  419042:	inc    ecx
  419043:	call   0xc3d91324
  419048:	xchg   al,bh
  41904a:	mov    eax,0x2e03d07c
  41904f:	stos   DWORD PTR es:[edi],eax
  419050:	jp     0x41901a
  419052:	cmp    eax,0x211679e2
  419057:	leave  
  419058:	adc    al,0xa3
  41905a:	cld    
  41905b:	ss int 0x91
  41905e:	push   esp
  41905f:	push   cs
  419060:	dec    ebx
  419061:	popf   
  419062:	pop    ebx
  419063:	sub    DWORD PTR [esi-0x307a1b53],ebp
  419069:	shl    BYTE PTR [edx+edx*4+0x69efc6f3],1
  419070:	(bad)  
  419071:	(bad)  [eax-0x38307ffb]
  419077:	xlat   BYTE PTR ds:[ebx]
  419078:	pop    edx
  419079:	sbb    al,0x1e
  41907b:	sbb    eax,0xc51d3ff5
  419080:	mov    dh,0x99
  419082:	test   dh,al
  419084:	mov    ds:0x8e5fd87c,eax
  419089:	scas   eax,DWORD PTR es:[edi]
  41908a:	(bad)  
  41908b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41908c:	ds jmp 0x9efdc669
  419092:	lea    esp,[eax-0x29ccec0e]
  419098:	mov    bh,0x7b
  41909a:	leave  
  41909b:	jno    0x419042
  41909d:	inc    ecx
  41909e:	jo     0x41903c
  4190a0:	int    0x9
  4190a2:	sub    DWORD PTR [ebx+0x29],esp
  4190a5:	mov    ebx,es
  4190a7:	daa    
  4190a8:	mul    BYTE PTR [esi+0x4a]
  4190ab:	cmp    DWORD PTR [edx],edx
  4190ad:	ror    ebp,0xe4
  4190b0:	cmp    al,BYTE PTR [esp+edx*8-0x22f4410a]
  4190b7:	iret   
  4190b8:	fadd   st,st(7)
  4190ba:	push   0xffffffd4
  4190bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190bd:	cmp    DWORD PTR [esp+edi*4],ecx
  4190c0:	mov    al,0xfc
  4190c2:	and    eax,0x1200399b
  4190c7:	push   es
  4190c8:	jae    0x4190d2
  4190ca:	mov    dh,0xaa
  4190cc:	jae    0x41908d
  4190ce:	sti    
  4190cf:	jl     0x41913a
  4190d1:	xor    al,0x3c
  4190d3:	lock adc cl,bl
  4190d6:	and    ecx,DWORD PTR [eax+0x2b]
  4190d9:	add    BYTE PTR [ebp+0x5f],cl
  4190dc:	sub    edx,DWORD PTR [esi]
  4190de:	call   0x388da1aa
  4190e3:	je     0x41915a
  4190e5:	pop    ebp
  4190e6:	jne    0x419076
  4190e8:	mov    ds:0x97fe9bac,eax
  4190ed:	aaa    
  4190ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190ef:	icebp  
  4190f0:	fsubr  DWORD PTR [ebx+eiz*8+0x7625bb68]
  4190f7:	add    al,0x40
  4190f9:	mov    ds:0xc663f2ee,al
  4190fe:	pop    es
  4190ff:	inc    edi
  419100:	scas   eax,DWORD PTR es:[edi]
  419101:	inc    esp
  419102:	lahf   
  419103:	je     0x4190d7
  419105:	push   0x60828d03
  41910a:	push   0xffffffa3
  41910c:	popf   
  41910d:	adc    BYTE PTR [ecx-0x7a15f2bb],cl
  419113:	mov    eax,ds:0x54275dec
  419118:	xchg   edi,eax
  419119:	stos   BYTE PTR es:[edi],al
  41911a:	xchg   esp,eax
  41911b:	cmp    ebx,DWORD PTR [ebp-0x526836f0]
  419121:	adc    dl,BYTE PTR [esi-0x1a4362b7]
  419127:	xlat   BYTE PTR ds:[ebx]
  419128:	mov    ebp,edx
  41912a:	retf   0xcb17
  41912d:	inc    edx
  41912e:	and    ebx,DWORD PTR [esi-0x5b81f2d9]
  419134:	sbb    al,0x91
  419136:	xchg   ebx,eax
  419137:	and    DWORD PTR [esi-0x726a15f9],esi
  41913d:	test   eax,0x3f572d8d
  419142:	and    eax,esp
  419144:	xchg   BYTE PTR [esi-0x27],bh
  419147:	xor    BYTE PTR [edi-0x38502c51],ah
  41914d:	jge    0x41914e
  41914f:	sbb    edi,ebp
  419151:	jg     0x4191a8
  419153:	sub    ebx,DWORD PTR [ecx-0x6d2b06cc]
  419159:	shl    esi,1
  41915b:	pop    ss
  41915c:	xchg   esp,eax
  41915d:	xlat   BYTE PTR ds:[ebx]
  41915e:	cdq    
  41915f:	out    0xcd,eax
  419161:	xchg   edi,eax
  419162:	inc    eax
  419163:	mov    edx,0x9b3bfb6d
  419168:	icebp  
  419169:	test   ch,bl
  41916b:	push   ebx
  41916c:	and    dl,al
  41916e:	and    eax,0x3b1d6aee
  419173:	stc    
  419174:	xlat   BYTE PTR ds:[ebx]
  419175:	jae    0x419105
  419177:	mov    dh,0xcc
  419179:	ds xchg edi,eax
  41917b:	mov    ebp,0x1bfc51da
  419180:	enter  0xa3a1,0xbd
  419184:	jne    0x41915e
  419186:	mov    dl,0xe8
  419188:	jmp    0xfc82a86d
  41918d:	mov    DWORD PTR [ecx+0x72f14b39],eax
  419193:	push   es
  419194:	rcl    BYTE PTR [esp+esi*8],cl
  419197:	ror    BYTE PTR [ebx+0x75],1
  41919a:	push   es
  41919b:	out    dx,al
  41919c:	iret   
  41919d:	dec    esi
  41919e:	pop    esp
  41919f:	mov    esp,0x19725468
  4191a4:	aad    0x42
  4191a6:	fcmovne st,st(1)
  4191a8:	lds    ebx,FWORD PTR [edi]
  4191aa:	loop   0x419203
  4191ac:	push   cs
  4191ad:	(bad)  
  4191ae:	daa    
  4191af:	fbstp  TBYTE PTR [edx+0x2e993a31]
  4191b5:	pop    esi
  4191b6:	dec    ecx
  4191b7:	jg     0x419160
  4191b9:	push   0x55
  4191bb:	fimul  WORD PTR [ebx-0x56]
  4191be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191bf:	inc    esi
  4191c0:	cmp    eax,0x196d1a70
  4191c5:	(bad)  
  4191c7:	out    dx,al
  4191c8:	mov    dh,0xf
  4191ca:	(bad)  
  4191cb:	mov    bh,0xd5
  4191cd:	dec    esp
  4191ce:	dec    edi
  4191cf:	mov    BYTE PTR [ebx-0x441744b7],al
  4191d5:	inc    edx
  4191d6:	add    eax,0x5436a4f9
  4191db:	mov    DWORD PTR [ebp-0x16],ecx
  4191de:	imul   esp,DWORD PTR [ebx],0xbca4b347
  4191e4:	cdq    
  4191e5:	sbb    BYTE PTR [ebx+0x44],cl
  4191e8:	xchg   esi,eax
  4191e9:	mov    cl,0x8d
  4191eb:	clc    
  4191ec:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4191ee:	call   0x4e64:0x7df7de42
  4191f5:	sbb    al,0x77
  4191f7:	enter  0x5ba5,0x5b
  4191fb:	test   BYTE PTR [edi-0x47],bl
  4191fe:	adc    BYTE PTR [ebp+0x60f25a5d],dl
  419204:	mov    DWORD PTR [edx-0x56],ebp
  419207:	daa    
  419208:	mov    DWORD PTR [esi],0x57cef56a
  41920e:	jmp    0x419249
  419210:	pop    ecx
  419211:	xor    BYTE PTR ds:0x3cd09492,bh
  419217:	dec    ebx
  419218:	mov    esi,0x1472bed0
  41921d:	and    al,0xa4
  41921f:	inc    ecx
  419220:	mov    edx,0x7007dd8a
  419225:	(bad)  
  419226:	sub    al,0xe5
  419228:	add    dl,BYTE PTR [ecx]
  41922a:	jmp    0x3d68:0x8acd2037
  419231:	pop    edx
  419232:	(bad)  
  419233:	in     al,dx
  419234:	xor    dh,ah
  419236:	inc    esi
  419237:	adc    ecx,ebx
  419239:	sub    BYTE PTR [eax+0x29],0x88
  41923d:	push   0x51
  41923f:	shl    BYTE PTR [ebx],1
  419241:	sbb    ch,BYTE PTR [eax+edi*4-0x5db29145]
  419248:	mov    ds:0xf18daeec,eax
  41924d:	fsub   st(4),st
  41924f:	mov    al,ds:0xf59e47ab
  419254:	mov    esp,0x28948fef
  419259:	(bad)  
  41925a:	std    
  41925b:	push   esp
  41925c:	aad    0x1b
  41925e:	add    ch,dh
  419260:	mov    esi,esi
  419262:	gs mov ecx,0x20d150cf
  419268:	xchg   esp,eax
  419269:	cld    
  41926a:	(bad)  
  41926c:	imul   ebp,ebx,0x4e62df16
  419272:	xor    ebp,DWORD PTR [ebp+0xe]
  419275:	dec    ecx
  419276:	je     0x419289
  419278:	jne    0x419249
  41927a:	lock in eax,dx
  41927c:	adc    al,dh
  41927e:	or     DWORD PTR [ecx-0x7c],0x8
  419282:	retf   
  419283:	popa   
  419284:	fild   QWORD PTR [ebx-0x10]
  419287:	cwde   
  419288:	mov    bl,0x38
  41928a:	sahf   
  41928b:	hlt    
  41928c:	sbb    dl,BYTE PTR [ebx]
  41928e:	push   eax
  41928f:	enter  0xbbac,0xf3
  419293:	dec    edi
  419294:	jns    0x419249
  419296:	xchg   DWORD PTR [edi-0x690a67d6],ebp
  41929c:	(bad)  
  41929d:	cs mov eax,0x7d29b67c
  4192a3:	xchg   edi,eax
  4192a4:	inc    esp
  4192a5:	push   es
  4192a6:	daa    
  4192a7:	popf   
  4192a8:	ret    0xa4c5
  4192ab:	(bad)  
  4192ac:	xor    dl,al
  4192ae:	lock jbe 0x419257
  4192b1:	or     eax,0xad2e6d34
  4192b6:	jno    0x419274
  4192b8:	fsubr  QWORD PTR [ebp-0x79]
  4192bb:	inc    edi
  4192bc:	(bad)
  4192bf:	shr    BYTE PTR [ebx],0x80
  4192c2:	fcom   QWORD PTR [eax]
  4192c4:	mov    ch,0x6f
  4192c6:	push   ebp
  4192c7:	mov    ch,0x6
  4192c9:	inc    edi
  4192ca:	bt     edi,edx
  4192cd:	xchg   ebx,eax
  4192ce:	xchg   edi,ebx
  4192d0:	inc    ecx
  4192d1:	stc    
  4192d2:	jnp    0x41930d
  4192d4:	pop    ebp
  4192d5:	jae    0x419297
  4192d7:	call   0xa648:0x218faff7
  4192de:	jecxz  0x419341
  4192e0:	es inc ecx
  4192e2:	nop
  4192e3:	mov    WORD PTR [edi-0x33],cs
  4192e6:	popa   
  4192e7:	test   DWORD PTR [edi-0x3b2ae937],ebx
  4192ed:	xchg   esp,eax
  4192ee:	add    esi,ebx
  4192f0:	jmp    0x451ad675
  4192f5:	into   
  4192f6:	mov    ch,0x54
  4192f8:	in     al,dx
  4192f9:	(bad)  [eax]
  4192fb:	push   eax
  4192fc:	pop    edi
  4192fd:	(bad)  
  4192fe:	cmp    BYTE PTR [ebp-0x15da8410],bl
  419304:	and    al,0xb0
  419306:	dec    esp
  419307:	mov    al,0xa5
  419309:	jae    0x419316
  41930b:	ins    BYTE PTR es:[edi],dx
  41930c:	mov    ecx,0x350e9b2b
  419311:	cwde   
  419312:	sbb    DWORD PTR ds:0xa3e2bd3e,esi
  419318:	mov    ah,0xa6
  41931a:	lods   eax,DWORD PTR ds:[esi]
  41931b:	add    BYTE PTR [ecx+0x5847878f],0x70
  419322:	scas   al,BYTE PTR es:[edi]
  419323:	cmc    
  419324:	pusha  
  419325:	daa    
  419326:	loopne 0x4192ed
  419328:	inc    eax
  419329:	sub    eax,0x3e3645d1
  41932e:	mov    ds:0x52cdf6e2,al
  419333:	enter  0x398d,0x73
  419337:	pop    ebp
  419338:	pop    ebp
  419339:	sahf   
  41933a:	std    
  41933b:	mov    ecx,0x5a649e33
  419340:	add    DWORD PTR [ecx-0x20],ecx
  419343:	arpl   WORD PTR [ecx+esi*2+0x6b],sp
  419347:	inc    ebx
  419349:	mov    edx,0x795fc773
  41934e:	jbe    0x41931d
  419350:	xor    ecx,esi
  419352:	push   0xfffffff8
  419354:	sub    al,0xa8
  419356:	mov    cs,WORD PTR [esp+edi*8-0xa]
  41935a:	std    
  41935b:	or     ebp,eax
  41935d:	addr16 jo 0x4193d2
  419360:	push   0xffffffa0
  419362:	bound  edi,QWORD PTR [edx+esi*2+0x49]
  419366:	dec    edi
  419367:	int3   
  419368:	cdq    
  419369:	sub    bh,cl
  41936b:	cwde   
  41936c:	push   edx
  41936d:	add    eax,0x9fde8a42
  419372:	push   edi
  419373:	push   ebx
  419374:	aam    0x8a
  419376:	mov    bh,0xb7
  419378:	push   eax
  419379:	sbb    al,0x3b
  41937b:	or     DWORD PTR [edx-0x4aecbaef],0x9
  419382:	(bad)  
  419383:	faddp  st(4),st
  419385:	aas    
  419386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419387:	mov    ah,0x2e
  419389:	call   0x5b68:0x6175e1e9
  419390:	dec    ebp
  419391:	xor    BYTE PTR [edx-0x2a8c25ca],0xa4
  419398:	dec    edx
  419399:	jno    0x4193ed
  41939b:	jnp    0x4193e9
  41939d:	pushf  
  41939e:	dec    ebp
  41939f:	xchg   ebx,eax
  4193a0:	xor    al,0x5f
  4193a2:	into   
  4193a3:	adc    DWORD PTR [edx-0x53341aa1],ebx
  4193a9:	nop
  4193aa:	iret   
  4193ab:	outs   dx,DWORD PTR ds:[esi]
  4193ac:	pop    es
  4193ad:	dec    ecx
  4193ae:	mov    ch,0x69
  4193b0:	dec    edx
  4193b1:	popa   
  4193b2:	jge    0x419415
  4193b4:	int    0xde
  4193b6:	xchg   DWORD PTR [esi],ebp
  4193b8:	or     ebp,DWORD PTR [eax]
  4193ba:	pcmpeqw mm3,QWORD PTR ds:0xda7813ea
  4193c1:	mov    dh,0x82
  4193c3:	inc    esi
  4193c4:	sub    dh,ch
  4193c6:	or     eax,0x1598ff51
  4193cb:	xchg   edi,edx
  4193cd:	jg     0x41935b
  4193cf:	aad    0x5d
  4193d1:	aam    0xa6
  4193d3:	pop    edi
  4193d4:	cmc    
  4193d5:	ret    
  4193d6:	or     al,0x1a
  4193d8:	or     DWORD PTR ds:0x6190205d,edi
  4193de:	pop    ebp
  4193df:	dec    edi
  4193e0:	cld    
  4193e1:	pusha  
  4193e2:	sbb    ecx,ecx
  4193e4:	push   0x38
  4193e6:	jo     0x41945a
  4193e8:	(bad)  
  4193e9:	dec    esp
  4193ea:	pop    ds
  4193eb:	ss push ebp
  4193ed:	aas    
  4193ee:	inc    esp
  4193ef:	mov    ebp,0x79dd30ca
  4193f4:	jl     0x41946c
  4193f6:	pop    edx
  4193f7:	pop    ss
  4193f8:	jge    0x4193c0
  4193fa:	push   eax
  4193fb:	mov    BYTE PTR [edi+0x2aa78d6],al
  419401:	xlat   BYTE PTR ds:[ebx]
  419402:	(bad)  
  419403:	xor    BYTE PTR [edi],ah
  419405:	mov    al,0x20
  419407:	xor    BYTE PTR [eax],bh
  419409:	sti    
  41940a:	sbb    BYTE PTR [ecx-0xc],0x1a
  41940e:	xor    BYTE PTR fs:[esp+esi*2],al
  419412:	(bad)  
  419414:	stos   BYTE PTR es:[edi],al
  419415:	and    esp,DWORD PTR [ebp-0x39]
  419418:	sti    
  419419:	dec    ebp
  41941a:	pop    eax
  41941b:	(bad)  
  41941c:	mov    edi,DWORD PTR [edi+0x6e5b1f27]
  419422:	xor    al,0x5e
  419424:	mov    fs,WORD PTR [esp+ecx*8-0x2ed3c147]
  41942b:	pop    ecx
  41942c:	fld    TBYTE PTR [esi]
  41942e:	inc    ecx
  41942f:	cmp    BYTE PTR [ebx+0x1b],cl
  419432:	bound  ecx,QWORD PTR [edx+eiz*2-0x7a]
  419436:	(bad)  
  419437:	nop
  419438:	sbb    BYTE PTR [eax],ah
  41943a:	pop    ss
  41943b:	cwde   
  41943c:	push   esi
  41943d:	call   0xe822:0x7a0cddb
  419444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419445:	mov    cl,0x2d
  419447:	test   eax,0xb820d1bc
  41944c:	out    0x88,al
  41944e:	and    eax,0x946db48e
  419453:	aaa    
  419454:	adc    bl,BYTE PTR [esi-0x56]
  419457:	cmc    
  419458:	sub    si,WORD PTR [edi+0x2fab5eed]
  41945f:	pop    ds
  419460:	shl    DWORD PTR [ebx-0x20],cl
  419463:	int3   
  419464:	mov    es,WORD PTR [eax-0x7e]
  419467:	fild   QWORD PTR [edi-0x7d7dfa91]
  41946d:	test   BYTE PTR [ebx],al
  41946f:	outs   dx,DWORD PTR ds:[esi]
  419470:	sti    
  419471:	mov    ebp,0x4cfbbd28
  419476:	xchg   BYTE PTR [ecx+ebx*8],ch
  419479:	cwde   
  41947a:	repz or DWORD PTR [edx],ebp
  41947d:	mov    WORD PTR [eax],ax
  419480:	mov    al,0xa4
  419482:	sub    bl,BYTE PTR [edi-0x2]
  419485:	call   0x425f:0xcfa025d8
  41948c:	jo     0x4194d1
  41948e:	out    0x17,al
  419490:	icebp  
  419491:	adc    dh,ah
  419493:	(bad)  
  419494:	in     al,dx
  419495:	fwait
  419496:	mov    BYTE PTR [eax+0x70c055c],bl
  41949c:	les    ebx,FWORD PTR [ebp-0x75]
  41949f:	mov    edi,0x76667349
  4194a4:	jl     0x4194ab
  4194a6:	icebp  
  4194a7:	sub    eax,0xa5e919c0
  4194ac:	push   ecx
  4194ad:	stos   BYTE PTR es:[edi],al
  4194ae:	std    
  4194af:	in     eax,0x99
  4194b1:	sub    ebx,DWORD PTR [edx+edx*2-0xf]
  4194b5:	dec    BYTE PTR [esi+0xe216bb]
  4194bb:	std    
  4194bc:	out    0xb8,al
  4194be:	sbb    BYTE PTR [bp-0x3d],ch
  4194c2:	neg    DWORD PTR [ebx+0x47eeb00b]
  4194c8:	jmp    0xe8dd2b4a
  4194cd:	imul   dh
  4194cf:	cwde   
  4194d0:	ror    BYTE PTR [eax-0x37],cl
  4194d3:	lods   eax,DWORD PTR ds:[esi]
  4194d4:	ret    0x6966
  4194d7:	stos   DWORD PTR es:[edi],eax
  4194d8:	(bad)  
  4194d9:	fbld   TBYTE PTR [eax+0x37]
  4194dc:	and    cl,BYTE PTR [ebx+0x66]
  4194df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194e0:	repnz lds edi,FWORD PTR [edi+edi*8+0x2c]
  4194e5:	mov    edi,eax
  4194e7:	sub    BYTE PTR [ecx+0x1e],dl
  4194ea:	cmp    cl,bh
  4194ec:	inc    ecx
  4194ed:	shr    ch,0xca
  4194f0:	imul   esp,DWORD PTR [edi+0x2d],0xa81a399e
  4194f7:	cmp    al,BYTE PTR [edx]
  4194f9:	inc    esp
  4194fa:	dec    esp
  4194fb:	xor    DWORD PTR [edi+ecx*4+0x72],0xffffffa5
  419500:	cli    
  419501:	mov    al,ds:0xec9e54a0
  419506:	(bad)  
  419507:	adc    eax,DWORD PTR [ebp-0x7085cfdd]
  41950d:	xchg   edx,eax
  41950e:	cmp    al,0xad
  419510:	sbb    al,0x43
  419512:	jl     0x4194fa
  419514:	daa    
  419515:	pop    ebx
  419516:	cmc    
  419517:	out    dx,eax
  419518:	out    dx,al
  419519:	outs   dx,DWORD PTR ds:[esi]
  41951a:	gs inc ebx
  41951c:	pop    esp
  41951d:	dec    ebx
  41951e:	lock push esp
  419520:	mov    ecx,0x34cb470d
  419525:	pop    ecx
  419526:	shl    BYTE PTR [eax+ebx*2-0x27215fd4],1
  41952d:	mov    esi,0x3b0adff9
  419532:	push   ebp
  419533:	or     ch,BYTE PTR [ecx-0x26]
  419536:	mov    bl,BYTE PTR [ecx-0x10]
  419539:	pop    ds
  41953a:	mov    al,0xad
  41953c:	(bad)  
  41953d:	xchg   ebp,eax
  41953e:	mov    cl,0xf0
  419540:	xchg   edi,eax
  419541:	add    al,0x4a
  419543:	out    dx,al
  419544:	dec    eax
  419545:	inc    esp
  419546:	test   eax,0xa164cbce
  41954b:	cwde   
  41954c:	arpl   WORD PTR [eax],si
  41954e:	fwait
  41954f:	imul   edx,ebp,0x763a6f4
  419555:	mov    edx,0x153fcb98
  41955a:	or     edi,esp
  41955c:	lea    ecx,[esi-0x26c69927]
  419562:	fcomp  DWORD PTR [edi+ebx*1+0x36]
  419566:	jb     0x4195ab
  419568:	xchg   BYTE PTR [ebx-0x3c],bh
  41956b:	sub    dh,cl
  41956d:	inc    esp
  41956e:	mov    al,0x4f
  419570:	dec    eax
  419571:	or     DWORD PTR ds:0x3bd15c08,ebx
  419577:	dec    ebp
  419578:	hlt    
  419579:	out    0xee,al
  41957b:	mov    esp,0xb701a697
  419580:	xchg   ebx,eax
  419581:	mov    eax,esi
  419583:	lock fld QWORD PTR [esi-0x58]
  419587:	retf   
  419588:	jp     0x4195e4
  41958a:	and    ebx,DWORD PTR fs:[esi-0x1344f76d]
  419591:	push   ebp
  419592:	or     ah,BYTE PTR [ebx]
  419594:	lock push eax
  419596:	push   0x1bfa422a
  41959b:	in     al,dx
  41959c:	pop    ebp
  41959d:	ret    0x3db8
  4195a0:	fidivr DWORD PTR [ebx]
  4195a2:	jbe    0x419577
  4195a4:	retf   0x291
  4195a7:	div    esi
  4195a9:	or     BYTE PTR [eax-0x4fa6065],bl
  4195af:	dec    edi
  4195b0:	adc    DWORD PTR [edx-0x1e],ebx
  4195b3:	leave  
  4195b4:	add    DWORD PTR [ebp-0x80],eax
  4195b7:	pop    edi
  4195b8:	hlt    
  4195b9:	jb     0x4195f0
  4195bb:	pop    edx
  4195bc:	adc    al,0x8
  4195be:	pop    ebx
  4195bf:	mov    al,ds:0xaa524c67
  4195c4:	mov    ds:0xa324361b,al
  4195c9:	jae    0x4195b0
  4195cb:	jb     0x419635
  4195cd:	push   ecx
  4195ce:	xor    DWORD PTR ss:0x253c629,ecx
  4195d5:	sub    eax,0x373069e
  4195da:	pop    edx
  4195db:	aas    
  4195dc:	fistp  WORD PTR [esi+esi*8-0x6d]
  4195e0:	test   BYTE PTR [edx-0x6c5a8ab8],bh
  4195e6:	(bad)  
  4195e7:	popf   
  4195e8:	pop    esi
  4195e9:	pop    esp
  4195ea:	jbe    0x419654
  4195ec:	push   edx
  4195ed:	mov    ecx,0xfe9a6f2c
  4195f2:	ss sbb eax,0x7eb1f9a0
  4195f8:	pop    ecx
  4195f9:	push   0xffffffe2
  4195fb:	gs inc edi
  4195fd:	or     eax,0x8a384586
  419602:	outs   dx,DWORD PTR ds:[esi]
  419603:	test   eax,0xc775b69c
  419608:	pop    ebp
  419609:	(bad)  
  41960a:	mov    WORD PTR [eax],ds
  41960c:	ds mov dl,0x60
  41960f:	not    BYTE PTR [bx+si-0x59]
  419613:	dec    edx
  419614:	ins    DWORD PTR es:[edi],dx
  419615:	cli    
  419616:	fild   QWORD PTR [ecx-0x123d43ba]
  41961c:	hlt    
  41961d:	fcomp  DWORD PTR ss:[ecx+0x63fa7ca4]
  419624:	jmp    0xf259:0x45239795
  41962b:	push   ecx
  41962c:	fwait
  41962d:	mov    ebx,0x7f45a023
  419632:	mov    ebp,0xd72d9f18
  419637:	in     eax,0x4a
  419639:	xchg   BYTE PTR [ebx+0x494c3c8f],ch
  41963f:	test   ebx,ecx
  419641:	mov    ?,edi
  419643:	and    cl,BYTE PTR [edx]
  419645:	sub    edi,ecx
  419647:	dec    edx
  419648:	xor    eax,ecx
  41964a:	mov    al,ds:0x556e1390
  41964f:	sub    dl,BYTE PTR [ebx]
  419651:	mov    ebx,0x11dcfe1f
  419656:	ror    DWORD PTR [edx+ecx*1],1
  419659:	add    BYTE PTR [edx],ch
  41965b:	scas   eax,DWORD PTR es:[edi]
  41965c:	lds    esp,FWORD PTR [ecx-0x1c960415]
  419662:	mov    ecx,0x11f185f0
  419667:	mov    esp,0x3e83615b
  41966c:	pop    edi
  41966d:	and    DWORD PTR [ebp-0x6d],ecx
  419670:	inc    ebx
  419671:	sub    cl,BYTE PTR [ebp+eax*1+0x60]
  419675:	cmp    bh,BYTE PTR [ebx-0x2d]
  419678:	mov    ch,0xeb
  41967a:	cmp    ebp,DWORD PTR [edi]
  41967c:	ror    BYTE PTR [ecx+0x36],0x4c
  419680:	ja     0x41961b
  419682:	dec    edx
  419683:	ds mov ch,0x6e
  419686:	inc    edx
  419687:	xchg   ebp,eax
  419688:	cwde   
  419689:	repz add eax,0xc7113e66
  41968f:	add    eax,0x2fc5e2d8
  419694:	lods   eax,DWORD PTR ds:[esi]
  419695:	push   0x24
  419697:	push   ecx
  419698:	scas   al,BYTE PTR es:[edi]
  419699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41969a:	jbe    0x419658
  41969c:	je     0x41968d
  41969e:	fiadd  WORD PTR [ebx]
  4196a0:	add    edx,DWORD PTR [eax-0x3852798e]
  4196a6:	or     DWORD PTR [edx],esi
  4196a8:	(bad)  [eax+0x2]
  4196ab:	test   DWORD PTR [ebx+0x958087c],0xc183dd23
  4196b5:	js     0x4196e3
  4196b7:	outs   dx,BYTE PTR ds:[esi]
  4196b8:	xor    bh,dl
  4196ba:	aas    
  4196bb:	or     al,0xb7
  4196bd:	xor    esi,DWORD PTR ds:[edi+0x7721348a]
  4196c4:	mov    eax,ds:0xc02f0db5
  4196c9:	jge    0x41964f
  4196cb:	cld    
  4196cc:	pop    esp
  4196cd:	jg     0x4196c0
  4196cf:	mov    cl,0x0
  4196d1:	jae    0x4196f0
  4196d3:	jns    0x4196b7
  4196d5:	mov    cl,0xa0
  4196d7:	pop    edi
  4196d8:	mov    ebp,0x52155af5
  4196dd:	test   bh,ch
  4196df:	inc    ecx
  4196e0:	mov    gs,ebp
  4196e2:	mov    edi,0xece3c0af
  4196e7:	or     dh,al
  4196e9:	aam    0xb9
  4196eb:	xor    ebp,ebx
  4196ed:	imul   esi,DWORD PTR [ecx],0xffffffd2
  4196f0:	clc    
  4196f1:	or     BYTE PTR [edi],dh
  4196f3:	lea    ebx,[esi]
  4196f5:	into   
  4196f6:	arpl   WORD PTR [ebx+0x67],bx
  4196f9:	test   BYTE PTR [ebp+eax*8-0x4d41a74e],bh
  419700:	dec    ebp
  419701:	push   esi
  419702:	xor    edi,DWORD PTR [ecx]
  419704:	ret    0xc6bb
  419707:	mov    al,0x78
  419709:	mov    cl,0xee
  41970b:	push   ss
  41970c:	sub    DWORD PTR [edx],ecx
  41970e:	mov    edx,0x44c3b7d9
  419713:	ds jno 0x4196d1
  419716:	xor    DWORD PTR [eax+eiz*4+0x57],esp
  41971a:	push   ecx
  41971b:	push   esp
  41971c:	test   al,0x1f
  41971e:	call   0x340835c0
  419723:	aad    0xeb
  419725:	mov    bh,0xfd
  419727:	push   edx
  419728:	(bad)
  41972c:	(bad)  
  41972d:	sbb    bh,bh
  41972f:	jo     0x4197a2
  419731:	inc    esi
  419732:	ins    DWORD PTR es:[edi],dx
  419733:	mov    al,ds:0x16bc0194
  419738:	not    DWORD PTR [edi-0x72defde8]
  41973e:	mov    DWORD PTR [ebp+0x522edd86],ebx
  419744:	inc    edi
  419745:	test   BYTE PTR [eax],dl
  419747:	add    ah,dh
  419749:	sahf   
  41974a:	sub    BYTE PTR [ebx-0xc],bl
  41974d:	xor    ebp,eax
  41974f:	data16 das 
  419751:	or     BYTE PTR [esi],0xee
  419754:	xchg   ebp,eax
  419755:	push   0x59f35442
  41975a:	push   ebx
  41975b:	pop    es
  41975c:	je     0x419771
  41975e:	push   ecx
  41975f:	mov    al,ds:0x1953dc27
  419764:	leave  
  419765:	xchg   esi,eax
  419766:	outs   dx,BYTE PTR ds:[esi]
  419767:	dec    ebx
  419768:	mov    edx,0xdef46ef0
  41976d:	mov    esi,0xb5cc42fe
  419772:	xchg   BYTE PTR [ebp+0x3eaebcd2],ah
  419778:	add    eax,0x343c34d8
  41977d:	xchg   edx,eax
  41977e:	sti    
  41977f:	cmp    DWORD PTR fs:[ebp-0x54],ebp
  419783:	mov    eax,DWORD PTR [edi-0x53]
  419786:	in     al,0xf5
  419788:	adc    al,bh
  41978a:	ss adc eax,0x622e3019
  419790:	arpl   di,ax
  419792:	das    
  419793:	cmp    bh,BYTE PTR [edi+0x27]
  419796:	aam    0xd8
  419798:	mov    eax,0x297bbaeb
  41979d:	cdq    
  41979e:	sub    ebp,DWORD PTR [eax+0x2e]
  4197a1:	sub    DWORD PTR [edi-0x76],ebp
  4197a4:	test   eax,0x90328191
  4197a9:	ret    0x533b
  4197ac:	mov    BYTE PTR [esi-0x58],dl
  4197af:	dec    edi
  4197b0:	bound  esp,QWORD PTR fs:[ecx]
  4197b3:	jns    0x419817
  4197b5:	mov    es,WORD PTR [edx+0x2d]
  4197b8:	xchg   ebx,eax
  4197b9:	push   ecx
  4197ba:	retf   
  4197bb:	mov    ch,0x95
  4197bd:	jmp    0x6eeb5447
  4197c2:	push   edi
  4197c3:	int    0x95
  4197c5:	cs jmp 0x796c3fa1
  4197cb:	les    ebx,FWORD PTR ds:0xe4b9f547
  4197d1:	jo     0x419824
  4197d3:	adc    BYTE PTR [esi-0x80],0x6
  4197d7:	and    ah,0x88
  4197da:	jg     0x41982e
  4197dc:	jmp    0x9bd0:0xe0283755
  4197e3:	retf   
  4197e4:	add    esp,DWORD PTR [ecx]
  4197e6:	scas   eax,DWORD PTR es:[edi]
  4197e7:	mov    dh,0xba
  4197e9:	sub    bh,BYTE PTR [ebp-0x56]
  4197ec:	fdiv   DWORD PTR [eax-0x5]
  4197ef:	push   0x5f
  4197f1:	or     bh,cl
  4197f3:	daa    
  4197f4:	cmp    DWORD PTR [edi],eax
  4197f6:	add    esi,esi
  4197f8:	aad    0xb5
  4197fa:	out    dx,al
  4197fb:	push   es
  4197fc:	into   
  4197fd:	addr16 cmp ecx,0x13
  419801:	sbb    al,0xda
  419803:	stc    
  419804:	in     eax,0xa5
  419806:	adc    dl,bl
  419808:	scas   eax,DWORD PTR es:[edi]
  419809:	ins    DWORD PTR es:[edi],dx
  41980a:	mov    ebx,0x9947bd23
  41980f:	ds test eax,0x169a408
  419815:	dec    esi
  419816:	jns    0x419807
  419818:	xlat   BYTE PTR ds:[ebx]
  419819:	icebp  
  41981a:	fnstsw WORD PTR [edx-0x77db111d]
  419820:	(bad)  
  419821:	jge    0x419877
  419823:	aad    0xfa
  419825:	cmc    
  419826:	pop    ebp
  419827:	retf   0xe83a
  41982a:	add    al,0x67
  41982c:	mov    al,0x43
  41982e:	es jae 0x4197b8
  419831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419832:	sub    DWORD PTR [eax],eax
  419834:	jmp    FWORD PTR [edi-0x30]
  419837:	out    dx,al
  419838:	xchg   ebx,eax
  419839:	mov    cl,0xc4
  41983b:	mov    al,ds:0x7b1783d4
  419840:	mov    eax,ds:0x270f14b4
  419845:	stos   BYTE PTR es:[edi],al
  419846:	xor    BYTE PTR [edx],bh
  419848:	test   eax,0x3d5cf064
  41984d:	repz xchg ebx,eax
  41984f:	in     al,0x2b
  419851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419852:	mov    esp,0x7819c4d
  419857:	sbb    eax,0x5bf18c3a
  41985c:	sbb    al,0xa4
  41985e:	dec    esp
  41985f:	lahf   
  419860:	fucomi st,st(2)
  419862:	pop    ecx
  419863:	aaa    
  419864:	pop    edi
  419865:	push   cs
  419866:	inc    ebx
  419867:	retf   
  419868:	inc    esp
  419869:	jecxz  0x41989c
  41986b:	fsubr  QWORD PTR [edx]
  41986d:	jp     0x419821
  41986f:	test   eax,0xd76aca30
  419874:	add    ah,dl
  419876:	mov    al,0xe6
  419878:	inc    ecx
  419879:	into   
  41987a:	je     0x41989f
  41987c:	fmul   QWORD PTR [edi+0x1b]
  41987f:	(bad)  
  419881:	jg     0x419838
  419883:	adc    BYTE PTR [edx-0x2f],ch
  419886:	out    0x23,eax
  419888:	mov    ds:0xb72c7e6a,eax
  41988d:	xor    DWORD PTR [esi+0x5dd2a270],edi
  419893:	shr    DWORD PTR [edi+0x65],1
  419896:	xchg   edi,eax
  419897:	add    DWORD PTR [ecx],ecx
  419899:	mov    BYTE PTR [eax+0x6f],bh
  41989c:	mov    ebp,0x8e17694a
  4198a1:	push   0x17
  4198a3:	cmp    ah,cl
  4198a5:	das    
  4198a6:	or     ecx,DWORD PTR fs:[ebx+0x68]
  4198aa:	mov    ss,WORD PTR [eax-0x4171e9bf]
  4198b0:	sbb    BYTE PTR [eax+0x6daab2e4],bl
  4198b6:	jmp    0x4198ef
  4198b8:	mov    eax,ds:0x808c1c18
  4198bd:	cmp    eax,DWORD PTR [ebx+edi*4-0x2b5abbc6]
  4198c4:	outs   dx,DWORD PTR ds:[esi]
  4198c5:	mov    ds,WORD PTR [esi+edi*2]
  4198c8:	nop
  4198c9:	or     al,0xf8
  4198cb:	shr    BYTE PTR [edi-0x78c8dda5],cl
  4198d1:	ins    BYTE PTR es:[edi],dx
  4198d2:	stos   BYTE PTR es:[edi],al
  4198d3:	pushf  
  4198d4:	jle    0x41992b
  4198d6:	ins    BYTE PTR es:[edi],dx
  4198d7:	dec    ebx
  4198d8:	pop    es
  4198d9:	out    0x60,al
  4198db:	push   es
  4198dc:	mov    ebp,DWORD PTR [ebx+0x6a]
  4198df:	xor    al,0x1e
  4198e1:	pop    ecx
  4198e2:	cmp    al,0x6
  4198e4:	cmp    esi,ebp
  4198e6:	adc    cl,dl
  4198e8:	add    eax,0x1237447a
  4198ed:	sub    bl,cl
  4198ef:	inc    ebp
  4198f0:	bound  eax,QWORD PTR [esi+0x74]
  4198f3:	fadd   DWORD PTR [ebp+ecx*2-0x9]
  4198f7:	jo     0x41989b
  4198f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198fa:	cs mov edx,0xb9f7fa6a
  419900:	fucom  st(0)
  419902:	mov    DWORD PTR [eax+0x65],ebx
  419905:	pop    es
  419906:	in     eax,dx
  419907:	sbb    bh,BYTE PTR ds:0x17819b0f
  41990d:	cdq    
  41990e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41990f:	xchg   DWORD PTR [ebp-0x286b0c73],edx
  419915:	mov    ch,0x3e
  419917:	lahf   
  419918:	inc    esi
  419919:	stos   DWORD PTR es:[edi],eax
  41991a:	cli    
  41991b:	mov    ds:0xd96b4c82,al
  419920:	and    eax,0xe819da12
  419925:	or     DWORD PTR ds:0x9e2a290,0x56
  41992c:	xlat   BYTE PTR ds:[ebx]
  41992d:	int    0x19
  41992f:	xchg   DWORD PTR [edi],edx
  419931:	add    ebx,DWORD PTR [eax+0x6ce44f5c]
  419937:	mov    bl,0x2a
  419939:	adc    esi,DWORD PTR ds:0xa2415103
  41993f:	mov    bh,0x6c
  419941:	add    eax,0x7f7f1040
  419946:	lea    ecx,[esi-0x2c9ede18]
  41994c:	cmp    DWORD PTR es:[esi+ecx*4+0x6abf26b2],ebp
  419954:	nop
  419955:	and    ch,dh
  419957:	(bad)  
  419958:	mov    edx,0xdac9570d
  41995d:	adc    edi,0xffffffb8
  419960:	test   eax,0x296675e5
  419965:	lds    esp,FWORD PTR [edx-0x55bbe194]
  41996b:	mov    eax,ds:0x6db9296f
  419970:	jl     0x419917
  419972:	(bad)  
  419973:	popf   
  419974:	adc    esp,ecx
  419976:	ins    BYTE PTR es:[edi],dx
  419977:	pop    ebp
  419978:	adc    al,0x93
  41997a:	mov    WORD PTR [edi+0x4b],es
  41997d:	retf   0xd05f
  419980:	xor    eax,0x3d6ed625
  419985:	jmp    0x55b7:0x84d263ec
  41998c:	lahf   
  41998d:	enter  0xfb3a,0x4c
  419991:	js     0x41999a
  419993:	ret    0x16fd
  419996:	mov    edx,0x94eb8ca7
  41999b:	clc    
  41999c:	sbb    BYTE PTR [ebx+edx*8+0x7387358a],bh
  4199a3:	sti    
  4199a4:	cmp    dh,BYTE PTR [edi+0x1a]
  4199a7:	jl     0x419930
  4199a9:	daa    
  4199aa:	call   0x934d:0x6afccf8c
  4199b1:	mov    al,0xda
  4199b3:	aam    0x44
  4199b5:	out    dx,eax
  4199b6:	mov    ecx,0x830e18b6
  4199bb:	xor    eax,0xc5f29f74
  4199c0:	js     0x4199a7
  4199c2:	add    al,0x45
  4199c4:	mov    BYTE PTR [esi+0x53],bh
  4199c7:	cmp    bh,bh
  4199c9:	push   esp
  4199ca:	jmp    ebx
  4199cc:	and    al,0x17
  4199ce:	xchg   ebx,eax
  4199cf:	int3   
  4199d0:	pusha  
  4199d1:	or     al,0x44
  4199d3:	jge    0x419a1d
  4199d5:	mov    edi,0x817c845c
  4199da:	and    al,0x92
  4199dc:	push   0xffffffbc
  4199de:	mov    ah,0x25
  4199e0:	cmp    al,0x57
  4199e2:	adc    ah,BYTE PTR [ecx-0x27]
  4199e5:	dec    ebp
  4199e6:	jle    0x419a59
  4199e8:	(bad)  
  4199e9:	jno    0x419a09
  4199eb:	and    eax,0x7633354d
  4199f0:	into   
  4199f1:	inc    ebp
  4199f2:	scas   eax,DWORD PTR es:[edi]
  4199f3:	in     eax,0x90
  4199f5:	adc    al,0xd7
  4199f7:	shr    DWORD PTR [eax-0x74],1
  4199fa:	in     al,0x6e
  4199fc:	aas    
  4199fd:	push   es
  4199fe:	mov    dh,0xf5
  419a00:	fistp  DWORD PTR [edi-0x48bc3a62]
  419a06:	popf   
  419a07:	test   DWORD PTR [esi+0x9234031],0xe877cbc5
  419a11:	jmp    0x2873:0xc06e897
  419a18:	mov    esp,0x7a5c0022
  419a1d:	or     al,0xdd
  419a1f:	bnd jb 0x419a52
  419a22:	or     BYTE PTR [ebx+0x3],bh
  419a25:	or     al,0x67
  419a27:	hlt    
  419a28:	push   esp
  419a29:	neg    DWORD PTR [eax-0x2c1d58e6]
  419a2f:	push   es
  419a30:	inc    edx
  419a31:	ja     0x419a8d
  419a33:	sbb    DWORD PTR [esi+0x7fa26e0],ebx
  419a39:	push   esi
  419a3a:	xchg   edx,eax
  419a3b:	mov    edx,0xf8b9197
  419a40:	pop    ecx
  419a41:	jecxz  0x4199f5
  419a43:	add    BYTE PTR ds:0x37bd1f7d,dh
  419a49:	sub    eax,0xab0bf49e
  419a4e:	adc    BYTE PTR [eax-0x9],bl
  419a51:	dec    ebx
  419a52:	sti    
  419a53:	and    ch,BYTE PTR [eax-0x4b317a9b]
  419a59:	jno    0x419aad
  419a5b:	sub    ah,BYTE PTR [eax+0x1f]
  419a5e:	adc    eax,0x4f57a71a
  419a63:	dec    ebp
  419a64:	test   al,0xd
  419a66:	jp     0x419ac2
  419a68:	outs   dx,BYTE PTR ds:[esi]
  419a69:	cli    
  419a6a:	popf   
  419a6b:	test   al,0x4e
  419a6d:	add    eax,0x5ea4f2e6
  419a72:	mov    ds:0x521341e5,eax
  419a77:	mov    eax,ds:0xe1e7447b
  419a7c:	(bad)  
  419a7d:	add    al,0xd1
  419a7f:	repnz inc ebp
  419a81:	jecxz  0x419ae8
  419a83:	scas   al,BYTE PTR es:[edi]
  419a84:	lahf   
  419a85:	fs in  eax,dx
  419a87:	xchg   esp,eax
  419a88:	rol    DWORD PTR [ecx+esi*2],cl
  419a8b:	lods   al,BYTE PTR ds:[esi]
  419a8c:	ds push esp
  419a8e:	ffreep st(2)
  419a90:	rol    BYTE PTR [ebp+0x538922a1],0xe1
  419a97:	out    dx,eax
  419a98:	retf   0xfcfc
  419a9b:	lahf   
  419a9c:	inc    esi
  419a9d:	mov    esi,0x3cf40a13
  419aa2:	add    BYTE PTR [ecx-0x61d98375],0x0
  419aa9:	out    0xe1,eax
  419aab:	cmc    
  419aac:	lock jbe 0x419a71
  419aaf:	xor    eax,0xc526159
  419ab4:	sbb    DWORD PTR [ecx],ebp
  419ab6:	aad    0x6c
  419ab8:	rcl    BYTE PTR [edi-0x381e42c2],cl
  419abe:	xchg   edi,eax
  419abf:	adc    ah,BYTE PTR [ebp-0x249fba44]
  419ac5:	inc    esi
  419ac6:	push   0xb92d99b1
  419acb:	and    ah,BYTE PTR [esi]
  419acd:	mov    al,0x29
  419acf:	xchg   esp,eax
  419ad0:	shr    DWORD PTR [ecx+eax*2-0x186f93c4],0x9f
  419ad8:	inc    ebp
  419ad9:	inc    edi
  419ada:	push   ds
  419adb:	fs mov al,0x82
  419ade:	cmp    cl,BYTE PTR [edx-0x24]
  419ae1:	xchg   BYTE PTR ds:0xe5f8a88b,dl
  419ae7:	enter  0x8d1,0xec
  419aeb:	jge    0x419ad7
  419aed:	int    0x17
  419aef:	and    BYTE PTR [ebp+0x57],ch
  419af2:	xchg   BYTE PTR [edi+0x53],dl
  419af5:	shr    BYTE PTR ds:[esi],0xf6
  419af9:	jecxz  0x419b67
  419afb:	mov    esi,0x5453e9b9
  419b00:	jbe    0x419ae5
  419b02:	sbb    ah,BYTE PTR ds:0xe64ff853
  419b08:	in     eax,dx
  419b09:	test   BYTE PTR [esi+0x30],0x8b
  419b0d:	pop    esi
  419b0e:	ja     0x419aca
  419b10:	cs jbe 0x419adb
  419b13:	das    
  419b14:	push   0xffffffd9
  419b16:	popa   
  419b17:	cmp    DWORD PTR [eax],esp
  419b19:	ds xchg ebx,eax
  419b1b:	dec    esi
  419b1c:	push   0x44
  419b1e:	sahf   
  419b1f:	xchg   esp,eax
  419b20:	add    eax,0x4289545a
  419b25:	stos   BYTE PTR es:[edi],al
  419b26:	mov    bl,0x33
  419b28:	xor    eax,0x78877f8c
  419b2d:	cdq    
  419b2e:	lods   al,BYTE PTR ds:[esi]
  419b2f:	push   ebx
  419b30:	inc    edi
  419b31:	retf   
  419b32:	sti    
  419b33:	imul   edi,DWORD PTR [esi+0x45],0xe
  419b37:	mov    dl,0x10
  419b39:	sbb    eax,0x16a99996
  419b3e:	add    esp,DWORD PTR [edx+0x6d86d79f]
  419b44:	sbb    ebx,DWORD PTR [ecx]
  419b46:	inc    ebp
  419b47:	push   ebp
  419b48:	xor    dl,BYTE PTR [ecx-0x78d5b704]
  419b4e:	and    esi,DWORD PTR [edx-0x27242a04]
  419b54:	dec    esi
  419b55:	and    eax,DWORD PTR [eax+0x24]
  419b58:	pop    ebp
  419b59:	minps  xmm3,XMMWORD PTR [edi]
  419b5c:	(bad)  
  419b5d:	cmp    edi,DWORD PTR [ebp-0x5b816545]
  419b63:	cwde   
  419b64:	or     dl,BYTE PTR [edi+edx*8]
  419b67:	fnstenv [esi]
  419b69:	loop   0x419afb
  419b6b:	xor    ebp,esp
  419b6d:	push   edx
  419b6e:	jb     0x419b13
  419b70:	fmul   QWORD PTR [edi-0x6e]
  419b73:	jl     0x419b6e
  419b75:	imul   edx,DWORD PTR [edx+ebx*8+0x1a8e08b8]
  419b7d:	xchg   esi,eax
  419b7e:	or     al,0xe9
  419b80:	(bad)  
  419b81:	in     eax,dx
  419b82:	pop    edx
  419b83:	mov    eax,0x603fbe89
  419b88:	pushf  
  419b89:	int    0x68
  419b8b:	daa    
  419b8c:	es pop es
  419b8e:	cmp    al,0xb6
  419b90:	cmc    
  419b91:	inc    ebx
  419b92:	pushf  
  419b93:	shl    BYTE PTR [edi],0x47
  419b96:	ss shl BYTE PTR cs:[edi+0xa],0xf1
  419b9c:	add    esp,DWORD PTR [ecx]
  419b9e:	jmp    0x18cbadc7
  419ba3:	mov    ebp,DWORD PTR [esi+ecx*4-0x27f31040]
  419baa:	repnz test DWORD PTR [ebx-0x1b8e033c],eax
  419bb1:	test   BYTE PTR [esi-0x51],dl
  419bb4:	stos   DWORD PTR es:[edi],eax
  419bb5:	xchg   ebp,eax
  419bb6:	mov    bh,0x2e
  419bb8:	inc    ebx
  419bb9:	jmp    0xf4e:0xb7eeca38
  419bc0:	daa    
  419bc1:	jne    0x419c0a
  419bc3:	lahf   
  419bc4:	inc    edi
  419bc5:	mov    dh,0xd3
  419bc7:	fild   WORD PTR [ecx+0x2548885a]
  419bcd:	lock inc ebp
  419bcf:	xchg   ebp,eax
  419bd0:	clc    
  419bd1:	jmp    0xc52fc901
  419bd6:	enter  0x7485,0x40
  419bda:	jns    0x419b81
  419bdc:	bound  ebx,QWORD PTR [edx]
  419bde:	pop    ebx
  419bdf:	jo     0x419b78
  419be1:	int3   
  419be2:	les    edi,FWORD PTR [ebx-0x6f]
  419be5:	add    ebp,edi
  419be7:	pop    eax
  419be8:	daa    
  419be9:	xor    cl,bl
  419beb:	(bad)  
  419bec:	in     eax,0x8b
  419bee:	mov    bh,0x7e
  419bf0:	js     0x419b79
  419bf2:	loop   0x419c1e
  419bf4:	inc    eax
  419bf5:	mov    cl,0xb9
  419bf7:	mov    bl,0x6b
  419bf9:	inc    eax
  419bfa:	and    al,0xcb
  419bfc:	aam    0xa3
  419bfe:	inc    eax
  419bff:	pop    edx
  419c00:	mov    al,0x9d
  419c02:	cmp    esi,DWORD PTR [eax+0x63]
  419c05:	pop    ds
  419c06:	ss pusha 
  419c08:	dec    ebp
  419c09:	and    BYTE PTR [esi-0x44282750],dh
  419c0f:	xor    eax,0xceb455ad
  419c14:	jmp    0x419bea
  419c16:	mov    al,ds:0xfa43a6f2
  419c1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c1c:	sub    edi,edx
  419c1e:	adc    ah,BYTE PTR cs:[ebx]
  419c21:	iret   
  419c22:	xlat   BYTE PTR ds:[ebx]
  419c23:	pop    ds
  419c24:	leave  
  419c25:	pop    ds
  419c26:	cmp    DWORD PTR [ebp+0x6f1ebd9f],esp
  419c2c:	mov    dh,0xe5
  419c2e:	and    BYTE PTR [esi+0x7f4be4b7],0xc7
  419c35:	inc    ebp
  419c36:	cmovbe ebp,DWORD PTR [edi-0x3d877e6a]
  419c3d:	jg     0x419c5d
  419c3f:	pushf  
  419c40:	or     edi,DWORD PTR [eax+esi*2+0x7584e6d8]
  419c47:	mov    ds:0x75cfb90,al
  419c4c:	test   DWORD PTR [esi+0x36e42211],esi
  419c52:	inc    ebp
  419c53:	in     eax,0x8e
  419c55:	push   edi
  419c56:	scas   eax,DWORD PTR es:[edi]
  419c57:	fisub  WORD PTR [ebx+0x44]
  419c5a:	dec    edi
  419c5b:	jno    0x419cd1
  419c5d:	cmp    eax,0xe08606d3
  419c62:	xor    al,0x43
  419c64:	cmp    bl,ch
  419c66:	fiadd  WORD PTR [eax-0x4d]
  419c69:	ins    BYTE PTR es:[edi],dx
  419c6a:	(bad)  
  419c6b:	mov    bl,0x6b
  419c6d:	cmp    eax,0x39d3dff3
  419c72:	pop    ebx
  419c73:	push   0x4df279c3
  419c78:	adc    BYTE PTR [esi-0x602b5f0e],bh
  419c7e:	xchg   esi,eax
  419c7f:	aaa    
  419c80:	jo     0x419c66
  419c82:	loop   0x419cbd
  419c84:	mov    edi,0xf6e24683
  419c89:	test   eax,0xf33e5c0e
  419c8e:	out    dx,eax
  419c8f:	(bad)  
  419c90:	and    eax,0x8d87d36
  419c95:	iret   
  419c96:	pop    esp
  419c97:	add    DWORD PTR [ecx+edi*1-0x3b],eax
  419c9b:	push   0x6a
  419c9d:	fistp  QWORD PTR [ecx+0x45]
  419ca0:	into   
  419ca1:	mov    ds:0x31614f4b,eax
  419ca6:	xchg   DWORD PTR cs:[ebp+0x56],eax
  419caa:	in     eax,dx
  419cab:	cs mov esp,0x23d95e4c
  419cb1:	test   eax,0x81883540
  419cb6:	data16 (bad) 
  419cb8:	mov    bh,0xab
  419cba:	pop    edx
  419cbb:	xlat   BYTE PTR ds:[ebx]
  419cbc:	rcr    dl,1
  419cbe:	mov    ebp,0xab63c996
  419cc3:	xchg   ebp,eax
  419cc4:	mov    bl,0x23
  419cc6:	jns    0x419d0b
  419cc8:	xor    DWORD PTR [edx],esi
  419cca:	jge    0x419c5c
  419ccc:	sbb    eax,0xca37e9b2
  419cd1:	mov    ds:0xd8856eaf,eax
  419cd6:	jle    0x419cd5
  419cd8:	popa   
  419cd9:	mov    al,ds:0xf001ef
  419cde:	mov    esp,ss
  419ce0:	mov    ah,0x8d
  419ce2:	mov    edi,0x9e9a8283
  419ce7:	test   al,0x62
  419ce9:	lds    edi,FWORD PTR [ecx]
  419ceb:	push   edx
  419cec:	fmul   st(7),st
  419cee:	push   0x30
  419cf0:	push   edx
  419cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cf2:	sub    eax,0x5e18189b
  419cf7:	and    dl,BYTE PTR ds:0x2d9229f5
  419cfd:	in     al,0x26
  419cff:	dec    ecx
  419d00:	outs   dx,BYTE PTR ds:[esi]
  419d01:	jl     0x419d0b
  419d03:	mov    dl,0x63
  419d05:	fldenv [ebx]
  419d07:	jmp    0x419ca0
  419d09:	push   ds
  419d0a:	imul   ecx,DWORD PTR [ecx-0x65d000be],0xffffff94
  419d11:	out    dx,al
  419d12:	jae    0x419d58
  419d14:	test   al,0x39
  419d16:	mov    BYTE PTR [edx-0x53],ch
  419d19:	jmp    0xedba66e1
  419d1e:	pop    ss
  419d1f:	shl    BYTE PTR [edx],1
  419d21:	adc    al,0x7c
  419d23:	add    DWORD PTR [bp+si-0x7f],ebp
  419d27:	and    DWORD PTR [edi-0x156010d8],esp
  419d2d:	push   es
  419d2e:	push   edx
  419d2f:	pop    edx
  419d30:	sub    esi,ebp
  419d32:	jl     0x419d01
  419d34:	xor    ecx,esi
  419d36:	inc    ecx
  419d37:	inc    esi
  419d38:	lea    edi,[edi+ecx*2]
  419d3b:	aad    0xa0
  419d3d:	xor    edi,DWORD PTR [eax-0x17628bd8]
  419d43:	pop    eax
  419d44:	mov    BYTE PTR ds:0xd198ff97,bl
  419d4a:	iret   
  419d4b:	es (bad) 
  419d4d:	(bad)  
  419d4e:	mov    eax,0x8b1ffeb2
  419d53:	xchg   ebp,eax
  419d54:	cli    
  419d55:	ins    DWORD PTR es:[edi],dx
  419d56:	retf   0xe6b9
  419d59:	cmc    
  419d5a:	das    
  419d5b:	pop    ecx
  419d5c:	mov    ebp,0xbc3fe8b9
  419d61:	mov    bl,0xf1
  419d63:	jmp    0x419dc5
  419d65:	lahf   
  419d66:	inc    ebp
  419d67:	and    BYTE PTR [esi+0x74],al
  419d6a:	out    0x9a,al
  419d6c:	call   0x930d322c
  419d71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d72:	into   
  419d73:	pop    ecx
  419d74:	retf   
  419d75:	shl    BYTE PTR [ecx-0x79609af7],1
  419d7b:	and    al,0x93
  419d7d:	cdq    
  419d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d7f:	jl     0x419dc9
  419d81:	outs   dx,DWORD PTR ds:[esi]
  419d82:	ss enter 0x784f,0xae
  419d87:	repz test eax,0x9151b4b6
  419d8d:	xchg   ecx,eax
  419d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d8f:	jo     0x419d73
  419d91:	fwait
  419d92:	xor    DWORD PTR [eax+0x20],ebp
  419d95:	arpl   WORD PTR [edx],sp
  419d97:	fdivr  QWORD PTR [ecx+0x52]
  419d9a:	clc    
  419d9b:	mov    ecx,0xc386f07e
  419da0:	ja     0x419d70
  419da2:	add    BYTE PTR [edi-0x7bc1bf82],dl
  419da8:	fisttp QWORD PTR [eax+0x6192c191]
  419dae:	fisub  DWORD PTR [eax+0x434c13e1]
  419db4:	adc    eax,0x9e85b2c2
  419db9:	cmp    al,BYTE PTR es:[ebx+esi*1+0xf335a36]
  419dc1:	call   0x788a:0x421d37f5
  419dc8:	clc    
  419dc9:	and    eax,0x4efec565
  419dce:	arpl   WORD PTR [edi-0x102ab74b],bp
  419dd4:	addr16 push esp
  419dd6:	and    DWORD PTR ds:0x319c4b41,edx
  419ddc:	sub    BYTE PTR [eax-0x70011282],dl
  419de2:	addr16 jne 0x419e28
  419de5:	dec    ebp
  419de6:	mov    al,ds:0xeb02b008
  419deb:	push   ecx
  419dec:	push   cs
  419ded:	xchg   edx,eax
  419dee:	fcmove st,st(5)
  419df0:	repz in al,dx
  419df2:	inc    ebx
  419df3:	in     eax,0xfa
  419df5:	jmp    0x15c5:0x3debd37f
  419dfc:	mov    ah,0x3f
  419dfe:	shl    DWORD PTR [edx+0x43a24599],0x5e
  419e05:	mov    al,BYTE PTR [edx+edx*8+0x5f]
  419e09:	(bad)  
  419e0a:	jo     0x419e6a
  419e0c:	mov    esp,0x521168d6
  419e11:	fdivrp st(4),st
  419e13:	fdivr  DWORD PTR [eax+0x28f2c0ee]
  419e19:	sbb    eax,0xfcf38cdb
  419e1e:	ja     0x419df1
  419e20:	mov    ah,0x4c
  419e22:	cmp    cx,WORD PTR [esp+eiz*2+0x12]
  419e27:	and    al,0x95
  419e29:	ins    BYTE PTR es:[edi],dx
  419e2a:	ss int 0xc9
  419e2d:	add    dh,BYTE PTR [edi]
  419e2f:	aad    0xf1
  419e31:	cmp    BYTE PTR [ecx+0x2],bl
  419e34:	mov    edi,0x9826fb1e
  419e39:	mov    fs,ebx
  419e3b:	inc    esi
  419e3c:	mov    cl,0x1e
  419e3e:	jae    0x419e42
  419e40:	and    al,0xe7
  419e42:	adc    ah,BYTE PTR [ebp-0x6b52a6b]
  419e48:	retf   
  419e49:	mov    cl,bl
  419e4b:	cmp    edx,DWORD PTR [esp+ebx*1+0x5c]
  419e4f:	jg     0x419e5f
  419e51:	(bad)  
  419e52:	mov    WORD PTR [eax],fs
  419e54:	icebp  
  419e55:	pusha  
  419e56:	adc    al,0xa1
  419e58:	in     al,0x97
  419e5a:	jae    0x419eaa
  419e5c:	add    edx,esi
  419e5e:	ficomp DWORD PTR [edx]
  419e60:	jge    0x419ec8
  419e62:	inc    ecx
  419e63:	sub    eax,edx
  419e65:	(bad)  [ecx]
  419e67:	inc    edi
  419e68:	std    
  419e69:	or     al,0x26
  419e6b:	ins    BYTE PTR es:[edi],dx
  419e6c:	xor    al,0xfa
  419e6e:	std    
  419e6f:	rcl    DWORD PTR [edx-0x67],cl
  419e72:	push   ss
  419e73:	(bad)  
  419e74:	pusha  
  419e75:	pop    esp
  419e76:	mov    ecx,0xdebe55b6
  419e7b:	stos   DWORD PTR es:[edi],eax
  419e7c:	cdq    
  419e7d:	pop    ss
  419e7e:	jnp    0x419e00
  419e80:	xchg   DWORD PTR gs:[ecx+ecx*1+0x6a],edx
  419e85:	out    0xc6,al
  419e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e88:	scas   al,BYTE PTR es:[edi]
  419e89:	sbb    cl,bh
  419e8b:	push   es
  419e8c:	xchg   ecx,eax
  419e8d:	inc    edi
  419e8e:	shl    BYTE PTR [edx+0x1c],0xcb
  419e92:	xor    ah,dl
  419e94:	mov    eax,0x13e21c99
  419e99:	adc    al,bl
  419e9b:	add    DWORD PTR [edi+0x5f6f83b4],esi
  419ea1:	adc    al,0xfb
  419ea3:	mov    eax,ds:0xce195859
  419ea8:	push   cs
  419ea9:	jmp    0x419e37
  419eab:	sub    eax,0x6b30b757
  419eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eb1:	add    al,0x52
  419eb3:	dec    ebx
  419eb4:	xchg   esi,eax
  419eb5:	xor    DWORD PTR [ebx+0x21],0x81980d22
  419ebc:	prefetch BYTE PTR [esi+0x56ac5b7a]
  419ec3:	cmc    
  419ec4:	int3   
  419ec5:	xchg   ebp,eax
  419ec6:	xor    eax,DWORD PTR [eax]
  419ec8:	add    edi,DWORD PTR [edx+0x7d607967]
  419ece:	jb     0x419f4f
  419ed0:	inc    ebp
  419ed1:	or     BYTE PTR [ebp+0x1f],ch
  419ed4:	sbb    eax,0x3cfe104a
  419ed9:	jbe    0x419e9d
  419edb:	push   cs
  419edc:	mov    esp,DWORD PTR [eax]
  419ede:	out    0xc4,eax
  419ee0:	ins    DWORD PTR es:[di],dx
  419ee2:	sub    dh,ah
  419ee4:	pop    eax
  419ee5:	stos   DWORD PTR es:[edi],eax
  419ee6:	xchg   esi,eax
  419ee7:	sar    DWORD PTR [ecx],0x3a
  419eea:	call   0xda0d:0xd884c1b1
  419ef1:	xor    BYTE PTR [bx+si+0x1979],dh
  419ef6:	and    BYTE PTR [edi-0x77ca7e46],dh
  419efc:	leave  
  419efd:	sub    ebx,DWORD PTR [ecx-0x50657b]
  419f03:	mov    bh,0x4d
  419f05:	sbb    dl,BYTE PTR [esi+0xe]
  419f08:	mov    ds:0xa3736392,eax
  419f0d:	and    al,0x62
  419f0f:	push   0xffffffc0
  419f11:	fcmovne st,st(7)
  419f13:	lds    esp,FWORD PTR [ebp+0x36ae5e4e]
  419f19:	leave  
  419f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f1b:	jp     0x419f75
  419f1d:	xchg   ecx,eax
  419f1e:	rcl    bh,1
  419f20:	and    ecx,DWORD PTR [ebp+0x5e91eb3f]
  419f26:	(bad)  
  419f27:	aam    0x4e
  419f29:	repz xor esi,DWORD PTR [eax+0x57a1f4c4]
  419f30:	mov    esi,DWORD PTR [esi+edx*2]
  419f33:	std    
  419f34:	mov    ch,0x75
  419f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f37:	rcl    dh,0xf7
  419f3a:	fs jnp 0x419f72
  419f3d:	push   0xffffffcc
  419f3f:	mov    bl,0xe0
  419f41:	je     0x419f74
  419f43:	xchg   BYTE PTR [ebp-0x3e],dl
  419f46:	pop    esi
  419f47:	dec    esi
  419f48:	push   edi
  419f49:	pushw  0x7d
  419f4c:	fwait
  419f4d:	sahf   
  419f4e:	in     al,0x95
  419f50:	inc    esp
  419f51:	adc    eax,0xa269e3ee
  419f56:	sub    eax,0xb00013e8
  419f5b:	pop    es
  419f5c:	int3   
  419f5d:	cmp    eax,eax
  419f5f:	popa   
  419f60:	in     eax,dx
  419f61:	sbb    eax,0x7b87c6e8
  419f66:	mov    esp,0x56e1f651
  419f6b:	dec    eax
  419f6c:	dec    ecx
  419f6d:	pop    ebx
  419f6e:	fisubr DWORD PTR [edi+ebp*4-0x6af3c51e]
  419f75:	test   eax,0x1c8d0d6c
  419f7a:	xchg   esp,eax
  419f7b:	pop    edx
  419f7c:	cwde   
  419f7d:	sbb    DWORD PTR [ebx-0x33],esp
  419f80:	push   edi
  419f81:	fdiv   DWORD PTR [ecx+0x12]
  419f84:	inc    esp
  419f85:	dec    edi
  419f86:	scas   al,BYTE PTR es:[edi]
  419f87:	fbstp  TBYTE PTR [ebp-0x29]
  419f8a:	dec    esp
  419f8b:	cmp    DWORD PTR [ecx],eax
  419f8d:	jmp    0xf75e:0x681fd41e
  419f94:	mov    dl,0xfc
  419f96:	cmpxchg BYTE PTR [ebx],bh
  419f99:	rcl    DWORD PTR [edi],cl
  419f9b:	mov    ds:0x43812814,eax
  419fa0:	rcl    BYTE PTR [edi],1
  419fa2:	mov    ah,0x28
  419fa4:	fstp   QWORD PTR [ecx]
  419fa6:	cs jp  0x419f86
  419fa9:	and    ebx,esp
  419fab:	sub    eax,0xecacfa36
  419fb0:	aaa    
  419fb1:	out    0x48,eax
  419fb3:	test   al,0x64
  419fb5:	mov    edx,0xa835df08
  419fba:	pop    eax
  419fbb:	sub    DWORD PTR ds:0x4daca433,edx
  419fc1:	shl    DWORD PTR [esi],0x9a
  419fc4:	pop    ss
  419fc5:	jg     0x419fde
  419fc7:	jnp    0x41a027
  419fc9:	sub    BYTE PTR [esi-0x26],0x29
  419fcd:	aam    0xc2
  419fcf:	xchg   DWORD PTR [edi+0x7a2333cc],esi
  419fd5:	xchg   edi,eax
  419fd6:	dec    ecx
  419fd7:	fwait
  419fd8:	pop    ebx
  419fd9:	int3   
  419fda:	inc    eax
  419fdb:	retf   0x37b5
  419fde:	xor    ecx,DWORD PTR [ebx+0x40]
  419fe1:	dec    esp
  419fe2:	mov    esi,DWORD PTR [eax-0xd3426ed]
  419fe8:	nop
  419fe9:	shl    BYTE PTR [esi-0x7c],cl
  419fec:	fcom   QWORD PTR [edx+0x6cb58dea]
  419ff2:	mov    gs,ebp
  419ff4:	xchg   ebx,eax
  419ff5:	sbb    DWORD PTR [edx+0x4c],ebx
  419ff8:	push   ebx
  419ff9:	hlt    
  419ffa:	or     eax,eax
  419ffc:	rcr    dh,cl
  419ffe:	in     eax,dx
  419fff:	jns    0x419fd3
  41a001:	mov    ecx,0x225b9ad0
  41a006:	mov    dh,BYTE PTR [ecx-0x33]
  41a009:	test   BYTE PTR [edx+0x52],bl
  41a00c:	sub    al,0x4e
  41a00f:	int    0xcb
  41a011:	icebp  
  41a012:	mov    bh,0x1a
  41a014:	aam    0x80
  41a016:	hlt    
  41a017:	xchg   ecx,eax
  41a018:	das    
  41a019:	fstp   TBYTE PTR [edx+0x2ae80f9d]
  41a01f:	rcl    BYTE PTR [eax+0x5ad61852],1
  41a025:	adc    DWORD PTR [edx-0x2655e839],esp
  41a02b:	sub    ecx,esp
  41a02d:	sub    eax,0xf825ea0a
  41a032:	shl    edi,cl
  41a034:	sub    eax,0x24be1cc
  41a039:	jmp    0xa5e4b1f8
  41a03e:	das    
  41a03f:	out    dx,eax
  41a040:	sbb    ah,BYTE PTR [edi]
  41a042:	or     eax,esi
  41a044:	mov    ah,0x5a
  41a046:	ret    0xe54d
  41a049:	loopne 0x41a045
  41a04b:	xor    cl,dl
  41a04d:	pop    ds
  41a04e:	xchg   DWORD PTR [esi-0x4ea5b2be],edx
  41a054:	sar    dh,0x64
  41a057:	xchg   ebp,eax
  41a058:	adc    cl,BYTE PTR [esi+esi*2-0x39343796]
  41a05f:	shl    cl,1
  41a061:	xor    ah,ah
  41a063:	(bad)  [ecx]
  41a065:	fld    DWORD PTR [edi-0x72891293]
  41a06b:	dec    edx
  41a06c:	or     DWORD PTR [esi-0x3f],0x7fc4008a
  41a073:	push   esp
  41a074:	sub    esi,ebp
  41a076:	rol    BYTE PTR [esi],1
  41a078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a079:	dec    esp
  41a07a:	jmp    0x74e1:0x9f05ec2f
  41a081:	xor    BYTE PTR [edi+0x44],0x1
  41a085:	std    
  41a086:	pop    eax
  41a087:	cmp    eax,0xd454966b
  41a08c:	inc    ebp
  41a08d:	sar    DWORD PTR [ebp+0x599ad443],0xb2
  41a094:	(bad)  
  41a095:	xchg   esi,eax
  41a096:	mov    WORD PTR [ecx],?
  41a098:	mov    ah,0xf5
  41a09a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a09b:	xchg   esp,eax
  41a09c:	or     al,0x2d
  41a09e:	ja     0x41a0e6
  41a0a0:	and    eax,0x4b32a2ad
  41a0a5:	add    BYTE PTR [edi+0xc],cl
  41a0a8:	mov    ebx,0x44224c95
  41a0ad:	cld    
  41a0ae:	jp     0x41a05c
  41a0b0:	adc    ch,ch
  41a0b2:	dec    ecx
  41a0b3:	adc    ebp,DWORD PTR [esi-0x67ea1ebb]
  41a0b9:	sahf   
  41a0ba:	jnp    0x41a061
  41a0bc:	cld    
  41a0bd:	xor    eax,0x9772f8f0
  41a0c2:	fisubr WORD PTR [ecx+0x42]
  41a0c5:	sbb    eax,0x710a661a
  41a0ca:	sub    ah,dl
  41a0cc:	pop    esi
  41a0cd:	or     al,0xf5
  41a0cf:	call   0xed5cfd4a
  41a0d4:	sub    eax,0xb0fab13f
  41a0d9:	mov    BYTE PTR [ecx+0x59bb1455],dh
  41a0df:	gs jne 0x41a158
  41a0e2:	push   edi
  41a0e3:	out    dx,al
  41a0e4:	fimul  DWORD PTR [ecx]
  41a0e6:	jb     0x41a0e1
  41a0e8:	lahf   
  41a0e9:	mov    esi,esi
  41a0eb:	push   0xffffffe1
  41a0ed:	or     al,0xa9
  41a0ef:	adc    bh,dl
  41a0f1:	sbb    al,0x2a
  41a0f3:	jmp    0x36f1:0x8af1a0f9
  41a0fa:	arpl   di,cx
  41a0fc:	into   
  41a0fd:	ja     0x41a14e
  41a0ff:	push   esi
  41a100:	jmp    0x41a12e
  41a102:	ror    BYTE PTR [ebx],cl
  41a104:	mov    al,0x3d
  41a106:	nop
  41a107:	xor    eax,DWORD PTR [ebx+0x523a8d8b]
  41a10d:	jmp    0x7b7d:0x628c0dc1
  41a114:	mov    ds:0xbf3d4a1e,al
  41a119:	les    esp,FWORD PTR [edi-0x5cd53b32]
  41a11f:	or     eax,0xaab52f28
  41a124:	inc    edi
  41a125:	push   cs
  41a126:	ins    DWORD PTR es:[edi],dx
  41a127:	es dec esp
  41a129:	je     0x41a14a
  41a12b:	sar    DWORD PTR [eax*4+0x30c93bcc],0x22
  41a133:	pop    edi
  41a134:	js     0x41a0eb
  41a136:	cli    
  41a137:	loop   0x41a1b1
  41a139:	xchg   edi,eax
  41a13a:	xchg   esp,eax
  41a13b:	ror    bh,1
  41a13d:	ret    0xa0bc
  41a140:	dec    ecx
  41a141:	add    ebx,DWORD PTR [ebp+0x2]
  41a144:	out    0x8,eax
  41a146:	ss iret 
  41a148:	adc    al,0x72
  41a14a:	cmp    al,0x2c
  41a14c:	dec    ecx
  41a14d:	and    ebx,edx
  41a14f:	cmp    bh,ah
  41a151:	push   0xffffffb5
  41a153:	inc    ebx
  41a154:	dec    edx
  41a155:	mov    edx,0xf842895d
  41a15a:	out    0xec,eax
  41a15c:	mov    ecx,0xfeae3af0
  41a161:	xchg   dl,cl
  41a163:	test   al,0xd
  41a165:	ret    
  41a166:	xchg   DWORD PTR [eax-0x14efc3a2],ecx
  41a16c:	mov    es,edx
  41a16e:	pop    esi
  41a16f:	mov    ds:0x45f09270,eax
  41a174:	stos   DWORD PTR es:[edi],eax
  41a175:	mov    bl,0x94
  41a177:	xchg   esi,eax
  41a178:	mov    al,0x1a
  41a17a:	pop    edx
  41a17b:	bound  ebp,QWORD PTR [esp+ebx*1+0x7b4b8fa9]
  41a182:	pop    esi
  41a183:	ret    0xcf2f
  41a186:	jmp    0x41a193
  41a188:	daa    
  41a189:	jns    0x41a163
  41a18b:	inc    esi
  41a18c:	sub    esi,ebx
  41a18e:	test   DWORD PTR [ecx],ebx
  41a190:	loop   0x41a18e
  41a192:	or     eax,DWORD PTR [edx+0x79]
  41a195:	mov    ebx,0xeca4c205
  41a19a:	icebp  
  41a19b:	and    bh,BYTE PTR [edx]
  41a19d:	iret   
  41a19e:	pop    esi
  41a19f:	mov    al,ds:0xc416a96f
  41a1a4:	jl     0x41a134
  41a1a6:	lahf   
  41a1a7:	fisub  WORD PTR [eax+0x5d]
  41a1aa:	stc    
  41a1ab:	addr16 jne 0x41a131
  41a1ae:	int    0x80
  41a1b0:	je     0x41a15b
  41a1b2:	push   cs
  41a1b3:	imul   edx,DWORD PTR [edx+0x16c9eb61],0xffffffbd
  41a1ba:	mov    al,0x33
  41a1bc:	lock adc eax,0x5b8961a1
  41a1c2:	clc    
  41a1c3:	(bad)  [ecx]
  41a1c5:	fadd   DWORD PTR [eax*2-0x9fa5ab0]
  41a1cc:	imul   esi,DWORD PTR [ebx+0x39],0xb719b6ce
  41a1d3:	pop    edx
  41a1d4:	icebp  
  41a1d5:	fs push cs
  41a1d7:	(bad)
  41a1db:	mov    bl,0x71
  41a1dd:	aam    0xa0
  41a1df:	loopne 0x41a24a
  41a1e1:	ss inc ecx
  41a1e3:	js     0x41a1dd
  41a1e5:	mov    ds:0xae9792c7,al
  41a1ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1eb:	sbb    esp,DWORD PTR ds:0x8d9a1529
  41a1f1:	out    0x27,al
  41a1f3:	addr16 sahf 
  41a1f5:	mov    al,0x7a
  41a1f7:	pusha  
  41a1f8:	mov    ecx,0xe50c7b88
  41a1fd:	imul   esp,DWORD PTR [edi-0x7b],0x8cd08f35
  41a204:	fcomp  st(0)
  41a206:	pop    ds
  41a207:	cwde   
  41a208:	dec    ebx
  41a209:	imul   ecx,esi,0xffffff8c
  41a20c:	mov    al,ds:0xa59db82a
  41a211:	daa    
  41a212:	test   eax,0x82899656
  41a217:	lods   al,BYTE PTR cs:[esi]
  41a219:	mov    eax,0xdb0de3fc
  41a21e:	xchg   DWORD PTR [eax+0x60],edi
  41a221:	or     DWORD PTR [ebp+0x4e],ecx
  41a224:	sar    dh,1
  41a226:	mov    bh,0x3c
  41a228:	jne    0x41a2a9
  41a22a:	shr    edi,1
  41a22c:	push   edx
  41a22d:	pop    ebx
  41a22e:	call   0xd6385830
  41a233:	loop   0x41a29e
  41a235:	repnz mov eax,ds:0x5830101e
  41a23b:	cld    
  41a23c:	inc    ebp
  41a23d:	repz sbb BYTE PTR [ebx],dl
  41a240:	mov    bh,0x25
  41a242:	cmp    bl,BYTE PTR [ecx-0x43]
  41a245:	imul   BYTE PTR [ecx]
  41a247:	aas    
  41a248:	adc    al,0xbc
  41a24a:	jbe    0x41a2b7
  41a24c:	and    DWORD PTR [edi-0x21],esi
  41a24f:	inc    ebx
  41a250:	push   edi
  41a251:	mov    BYTE PTR [ebx],ah
  41a253:	cld    
  41a254:	mov    bh,0x44
  41a256:	in     al,0x63
  41a258:	cdq    
  41a259:	dec    ebx
  41a25a:	xchg   edi,eax
  41a25b:	pop    ds
  41a25c:	sbb    BYTE PTR [ecx],al
  41a25e:	mov    ebx,0xc49e5605
  41a263:	adc    al,0xf7
  41a265:	pop    edx
  41a266:	es dec ebx
  41a268:	mov    cl,0xba
  41a26a:	and    bh,BYTE PTR [eax+0x4769f40c]
  41a270:	xchg   edi,eax
  41a271:	leave  
  41a272:	sub    eax,0xb94bf946
  41a277:	ret    0x5062
  41a27a:	push   0x43
  41a27c:	push   ss
  41a27d:	add    ebp,esi
  41a27f:	into   
  41a280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a281:	stos   BYTE PTR es:[edi],al
  41a282:	dec    eax
  41a283:	out    0x93,eax
  41a285:	dec    ebx
  41a286:	iret   
  41a287:	repnz or BYTE PTR [edi+0x2ace455e],ah
  41a28e:	dec    eax
  41a28f:	fnstcw WORD PTR [ecx]
  41a291:	mov    bh,0xb4
  41a293:	xchg   BYTE PTR [edx-0x62359edb],al
  41a299:	and    ch,BYTE PTR [ebx-0x72]
  41a29c:	mov    edi,0xfa731a8b
  41a2a1:	fidiv  DWORD PTR [ecx]
  41a2a3:	dec    edi
  41a2a4:	cdq    
  41a2a5:	jne    0x41a2fd
  41a2a7:	jns    0x41a252
  41a2a9:	dec    esp
  41a2aa:	sbb    eax,0x61f45520
  41a2af:	cmc    
  41a2b0:	iret   
  41a2b1:	push   esi
  41a2b2:	sub    eax,0x3b1b25aa
  41a2b7:	mov    DWORD PTR [edi+0x14],ecx
  41a2ba:	pop    es
  41a2bb:	and    al,0x2c
  41a2bd:	(bad)  
  41a2bf:	jmp    0x41a270
  41a2c1:	jne    0x41a316
  41a2c3:	adc    dl,BYTE PTR [edx-0x11]
  41a2c6:	lods   eax,DWORD PTR ds:[esi]
  41a2c7:	push   0x2ce019fe
  41a2cc:	inc    ecx
  41a2cd:	out    0x5d,eax
  41a2cf:	test   edx,edi
  41a2d1:	sub    DWORD PTR [ecx-0x5fec3e95],0x60
  41a2d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2d9:	inc    ecx
  41a2da:	sbb    eax,0x54cbee1d
  41a2df:	(bad)  
  41a2e0:	cwde   
  41a2e1:	mov    ah,0x46
  41a2e3:	dec    ebx
  41a2e4:	js     0x41a32b
  41a2e6:	cs cmp al,0x10
  41a2e9:	adc    eax,0xbe12c988
  41a2ee:	pop    ebp
  41a2ef:	fcom   DWORD PTR [ebx]
  41a2f1:	push   0xca2c0e61
  41a2f6:	jmp    0x86ab:0x75944f5f
  41a2fd:	loopne 0x41a352
  41a2ff:	(bad)  
  41a300:	push   eax
  41a301:	call   0xefc6:0x261b5bac
  41a308:	fst    DWORD PTR [esi+ebx*8-0x7ab8af3f]
  41a30f:	mov    al,ds:0xf225cb18
  41a314:	mov    bl,0x5f
  41a316:	retf   0xadc3
  41a319:	push   edx
  41a31a:	mov    ebx,0x48270e9d
  41a31f:	mov    bh,0x2a
  41a321:	cmp    al,0xfc
  41a323:	adc    eax,0xc6ce8f05
  41a328:	into   
  41a329:	jmp    0x43e0:0xef54361e
  41a330:	mov    ds:0x3d2ea468,al
  41a335:	inc    esp
  41a336:	imul   edx,DWORD PTR [ebx+0x5e],0xcf70db48
  41a33d:	cmp    eax,0xa057f2b8
  41a342:	or     al,0x3
  41a344:	pop    ds
  41a345:	sbb    DWORD PTR [esi+0xac367fe],ebx
  41a34b:	test   eax,0xbc7ee6d
  41a350:	int3   
  41a351:	repz mov cl,0x76
  41a354:	or     edi,DWORD PTR [esi]
  41a356:	retf   0x9c85
  41a359:	sub    dh,BYTE PTR [ebx+0x7b]
  41a35c:	pshufw mm4,QWORD PTR [ecx-0x4e9515f2],0x43
  41a364:	jae    0x41a391
  41a366:	inc    edx
  41a367:	aas    
  41a368:	pop    ebp
  41a36a:	push   0x836447b6
  41a36f:	dec    esi
  41a370:	cdq    
  41a371:	(bad)  
  41a372:	add    edi,DWORD PTR [edx+0x65]
  41a375:	shr    BYTE PTR [ecx+0x3f100a2a],1
  41a37b:	add    dh,cl
  41a37d:	je     0x41a3fd
  41a37f:	inc    ebx
  41a380:	xchg   esi,eax
  41a381:	push   ebx
  41a382:	dec    ebp
  41a383:	mov    ebp,0x5eccfe79
  41a388:	adc    eax,0xfac7cb1f
  41a38d:	mov    esi,0xde968bea
  41a392:	call   0xf93:0x463be744
  41a399:	leave  
  41a39a:	jae    0x41a360
  41a39c:	sbb    bl,BYTE PTR [esi-0x25f6fb9f]
  41a3a2:	adc    ebp,DWORD PTR [ebx-0x10]
  41a3a5:	and    DWORD PTR [ebx-0x1c03a41a],ebp
  41a3ab:	inc    ecx
  41a3ac:	hlt    
  41a3ad:	xchg   edi,eax
  41a3ae:	sub    al,0x6
  41a3b0:	(bad)  
  41a3b1:	ins    BYTE PTR es:[edi],dx
  41a3b2:	dec    edx
  41a3b3:	popa   
  41a3b4:	jge    0x41a398
  41a3b6:	inc    ebp
  41a3b7:	jne    0x41a3e3
  41a3b9:	cwde   
  41a3ba:	aad    0x4c
  41a3bc:	inc    ebx
  41a3bd:	es push es
  41a3bf:	xor    bl,bl
  41a3c1:	jo     0x41a37b
  41a3c3:	or     DWORD PTR [ebp-0x52],esi
  41a3c6:	sahf   
  41a3c7:	in     al,0x0
  41a3c9:	push   eax
  41a3ca:	sbb    ax,0x4e89
  41a3ce:	test   eax,0x9bdc6d70
  41a3d3:	fcomp  QWORD PTR ds:[eax+0x2f34de4a]
  41a3da:	fisubr DWORD PTR [edx]
  41a3dc:	and    BYTE PTR [ecx],0x56
  41a3df:	lea    ecx,[edi+0x2f8f1c97]
  41a3e5:	mov    dl,0x3a
  41a3e7:	or     dl,BYTE PTR [edi]
  41a3e9:	sahf   
  41a3ea:	and    ecx,DWORD PTR [ecx]
  41a3ec:	push   es
  41a3ed:	mov    dh,0x5
  41a3ef:	(bad)  
  41a3f0:	lods   eax,DWORD PTR ds:[esi]
  41a3f1:	adc    eax,0xd7e27c14
  41a3f6:	xor    al,0x1f
  41a3f8:	sbb    bh,al
  41a3fa:	push   ebx
  41a3fb:	shr    DWORD PTR ds:[edi+0x3d],1
  41a3ff:	(bad)  
  41a400:	stos   BYTE PTR es:[edi],al
  41a401:	iret   
  41a402:	ins    BYTE PTR es:[edi],dx
  41a403:	in     eax,0x7
  41a405:	push   0x16
  41a407:	cs (bad) 
  41a409:	pop    edi
  41a40a:	jl     0x41a393
  41a40c:	popf   
  41a40d:	xchg   esi,eax
  41a40e:	dec    eax
  41a40f:	jns    0x41a391
  41a411:	pusha  
  41a412:	add    eax,0x23d0a5b7
  41a417:	outs   dx,BYTE PTR ds:[esi]
  41a418:	jmp    0x9c82:0x96008a34
  41a41f:	mov    bh,0xed
  41a421:	push   edx
  41a422:	imul   edi,ecx,0xfffffffa
  41a425:	popa   
  41a426:	mov    bl,0xe3
  41a428:	int    0x6d
  41a42a:	aad    0xa8
  41a42c:	dec    edi
  41a42d:	int3   
  41a42e:	jg     0x41a409
  41a430:	inc    esp
  41a431:	retf   0xb92e
  41a434:	mov    esp,ebx
  41a436:	test   BYTE PTR [ebx-0x33],dh
  41a439:	cmp    al,0x69
  41a43b:	cwde   
  41a43c:	dec    ecx
  41a43d:	mov    bl,0xa7
  41a43f:	xchg   edi,eax
  41a440:	ss popf 
  41a442:	out    0x36,al
  41a444:	and    ecx,0xffffff90
  41a447:	add    ebp,ebx
  41a449:	mov    eax,ds:0x46d2f89
  41a44e:	int3   
  41a44f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a450:	mov    BYTE PTR [edx],bl
  41a452:	sbb    BYTE PTR [ecx+0x5e36f619],dl
  41a458:	mov    ebx,0x151f6b98
  41a45d:	and    eax,DWORD PTR [ecx+0x7b3c0b85]
  41a463:	fisubr DWORD PTR [esi+0x428e4b0b]
  41a469:	fucom  st(0)
  41a46b:	dec    ebp
  41a46c:	pop    ecx
  41a46d:	stos   DWORD PTR es:[edi],eax
  41a46e:	and    eax,0xeba5a750
  41a473:	xchg   ebp,eax
  41a474:	imul   ecx,edi,0x1b
  41a477:	push   0xffffff88
  41a479:	cmc    
  41a47a:	pop    eax
  41a47b:	icebp  
  41a47c:	jle    0x41a4b3
  41a47e:	cmp    BYTE PTR [edx-0x659cd5c9],bh
  41a484:	imul   edi,DWORD PTR [esi-0x4],0xbf763dab
  41a48b:	pop    es
  41a48c:	popa   
  41a48d:	cmc    
  41a48e:	das    
  41a48f:	imul   edx,DWORD PTR [eax+0x469ab26e],0xf44850a7
  41a499:	mov    ss:0xf30cf462,al
  41a49f:	xchg   edx,eax
  41a4a0:	inc    esi
  41a4a1:	mov    dh,0xdc
  41a4a3:	cmp    DWORD PTR [esi],esi
  41a4a5:	aas    
  41a4a6:	pop    ebx
  41a4a7:	mov    ecx,0xd09f3f58
  41a4ac:	push   eax
  41a4ad:	inc    esp
  41a4ae:	sub    DWORD PTR [esi+edx*1+0xe],0x97235e6
  41a4b6:	shl    ebx,1
  41a4b8:	mov    ebx,0x18152a6e
  41a4bd:	dec    esi
  41a4be:	repz cmp dh,BYTE PTR [ebp+0x53300542]
  41a4c5:	inc    eax
  41a4c6:	adc    dl,BYTE PTR [ebp-0x721a313a]
  41a4cc:	fistp  QWORD PTR [edi]
  41a4ce:	mov    ds:0xf8d0de7e,eax
  41a4d3:	adc    DWORD PTR ds:0x16fdb6ae,ebp
  41a4d9:	cwde   
  41a4da:	push   ebx
  41a4db:	sub    DWORD PTR [eax-0x79],esi
  41a4de:	xor    ah,BYTE PTR [ecx+edi*4+0xa937dec]
  41a4e5:	sar    BYTE PTR [edx+0x295686be],0xeb
  41a4ec:	ret    0x94e2
  41a4ef:	jae    0x41a521
  41a4f1:	out    dx,al
  41a4f2:	jge    0x41a4f1
  41a4f4:	push   ss
  41a4f5:	(bad)  
  41a4f6:	(bad)  [eax+0x20]
  41a4f9:	mov    edx,0x457c508f
  41a4fe:	repnz or al,0x8f
  41a501:	fnstcw WORD PTR fs:[esi-0x550b1dfe]
  41a508:	jp     0x41a50d
  41a50a:	or     ch,BYTE PTR [edx-0x382fb235]
  41a510:	xchg   esp,eax
  41a511:	xchg   esp,eax
  41a512:	and    eax,0x7e68735f
  41a517:	xchg   ebx,eax
  41a518:	int3   
  41a519:	imul   edi,DWORD PTR [esi-0xb54e0e9],0xc3a40e8c
  41a523:	(bad)  
  41a524:	push   edx
  41a525:	xor    eax,0xdbe84b1d
  41a52a:	arpl   WORD PTR [eax],si
  41a52c:	mov    BYTE PTR [eax+0x6be0a80],dh
  41a532:	sbb    ah,BYTE PTR [edi-0x6a]
  41a535:	and    eax,esi
  41a537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a538:	punpckhbw mm7,mm2
  41a53b:	imul   ebx,DWORD PTR [ebp-0x53],0xffffffc9
  41a53f:	or     bh,dh
  41a541:	mov    bh,0xd9
  41a543:	or     dl,BYTE PTR [eax]
  41a545:	sub    DWORD PTR [esi+0x620fc81a],edi
  41a54b:	mov    ebp,0x41b2a8cb
  41a550:	adc    dl,BYTE PTR [eax+0x5b]
  41a553:	cmc    
  41a554:	add    cl,BYTE PTR [ebx]
  41a556:	push   cs
  41a557:	mov    bh,0x8
  41a559:	in     al,0x3c
  41a55b:	mov    al,0xdd
  41a55d:	mov    eax,ds:0xe268400e
  41a562:	mov    DWORD PTR [eax+0x77d1ec8b],ecx
  41a568:	pushf  
  41a569:	call   0x791e:0x73096180
  41a570:	mov    dl,0x0
  41a572:	icebp  
  41a573:	outs   dx,DWORD PTR ds:[esi]
  41a574:	arpl   bx,ax
  41a576:	out    0x9e,eax
  41a578:	or     al,0x43
  41a57a:	mov    WORD PTR [esi],gs
  41a57c:	pushf  
  41a57d:	inc    edx
  41a57e:	fimul  DWORD PTR [edx-0x34c2e811]
  41a584:	(bad)  
  41a585:	int3   
  41a586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a587:	mov    ebx,0xd99252d5
  41a58c:	hlt    
  41a58d:	mov    dl,0xd5
  41a58f:	scas   eax,DWORD PTR es:[edi]
  41a590:	nop
  41a591:	mov    dl,0x89
  41a593:	xor    edi,DWORD PTR [esi+0x58514d95]
  41a599:	xchg   edi,eax
  41a59a:	mov    edx,edx
  41a59c:	or     eax,0xf61ef21b
  41a5a1:	push   ds
  41a5a2:	stos   BYTE PTR es:[edi],al
  41a5a3:	(bad)  
  41a5a5:	xchg   esp,eax
  41a5a6:	jmp    0xc507:0x6d9871b9
  41a5ad:	xchg   edx,eax
  41a5ae:	fs inc ebp
  41a5b0:	jge    0x41a534
  41a5b2:	std    
  41a5b3:	ja     0x41a5c0
  41a5b5:	inc    ecx
  41a5b6:	xor    dh,al
  41a5b8:	loopne 0x41a615
  41a5ba:	pop    ebx
  41a5bb:	imul   ebp,DWORD PTR [ebp-0x7515bf3c],0x9ca61106
  41a5c5:	nop
  41a5c6:	movd   mm1,DWORD PTR [edi+0x3ff6540c]
  41a5cd:	sub    eax,0x813b2d61
  41a5d2:	pop    es
  41a5d3:	out    0xe7,eax
  41a5d5:	xor    al,0xb1
  41a5d7:	sub    eax,0xda9134d1
  41a5dc:	add    al,cl
  41a5de:	dec    ebp
  41a5df:	mov    edx,0x47b13c2d
  41a5e4:	ins    DWORD PTR es:[edi],dx
  41a5e5:	test   eax,0x7d489d72
  41a5ea:	nop
  41a5eb:	call   DWORD PTR [esi+0x461c4dff]
  41a5f1:	dec    edi
  41a5f2:	ds fwait
  41a5f4:	(bad)  
  41a5f5:	mov    BYTE PTR [esi],al
  41a5f7:	jecxz  0x41a62a
  41a5f9:	pop    esi
  41a5fa:	mov    ebp,0x2128db51
  41a5ff:	xchg   edx,eax
  41a600:	jge    0x41a5f9
  41a602:	adc    BYTE PTR [eax+0x2f0ee1f5],bh
  41a608:	outs   dx,BYTE PTR fs:[esi]
  41a60a:	jno    0x41a5e1
  41a60c:	add    eax,0x8129f42d
  41a611:	mov    ebp,0xb15b8d88
  41a616:	ja     0x41a67b
  41a618:	call   0x1ac8:0xbe6e7d96
  41a61f:	sub    ebx,edi
  41a621:	push   ds
  41a622:	adc    al,0xe8
  41a624:	mov    eax,ds:0xa996dd36
  41a629:	add    edi,eax
  41a62b:	add    DWORD PTR [edi+0x2],eax
  41a62e:	and    cl,BYTE PTR [edx-0x35093678]
  41a634:	cmp    BYTE PTR [edx+0x1cd46c8c],bh
  41a63a:	retf   
  41a63b:	hlt    
  41a63c:	push   esp
  41a63d:	rcr    BYTE PTR [eax+esi*4+0x43],cl
  41a641:	add    BYTE PTR [edx-0x61cd1f11],cl
  41a647:	or     DWORD PTR [edx-0x689e7d27],0x2e
  41a64e:	int3   
  41a64f:	shr    DWORD PTR [eax],0x18
  41a652:	mov    eax,ds:0x27f9a947
  41a657:	mov    ah,0x1d
  41a659:	repnz cld 
  41a65b:	fcmovne st,st(5)
  41a65d:	test   DWORD PTR [ebx],ecx
  41a65f:	xchg   esp,eax
  41a660:	shr    BYTE PTR [eax+0xf],1
  41a663:	cmp    BYTE PTR ds:[ecx+eax*1],0xfa
  41a668:	je     0x41a6bd
  41a66a:	add    bh,BYTE PTR [ebp+0x5f8b7bd0]
  41a670:	das    
  41a671:	adc    al,0xd1
  41a673:	ds aaa 
  41a675:	ins    DWORD PTR es:[edi],dx
  41a676:	mov    dl,0x1b
  41a678:	sub    bh,BYTE PTR [edi]
  41a67a:	mov    ebp,esi
  41a67c:	or     ch,bh
  41a67e:	inc    esi
  41a67f:	retf   
  41a680:	adc    ebx,DWORD PTR [edx-0x4d]
  41a683:	arpl   dx,dx
  41a685:	jmp    0x438e836d
  41a68a:	dec    ebp
  41a68b:	and    DWORD PTR ds:0xb720e776,ebp
  41a691:	jp     0x41a645
  41a693:	call   0xd6e2d008
  41a698:	fwait
  41a699:	sbb    BYTE PTR [edi+0x47],0x4a
  41a69d:	jg     0x41a63d
  41a69f:	mov    al,0xf1
  41a6a1:	jo     0x41a6f5
  41a6a3:	dec    esi
  41a6a4:	loop   0x41a676
  41a6a6:	mov    ebx,0x7e35ad25
  41a6ab:	aam    0xe6
  41a6ad:	pop    ecx
  41a6ae:	mov    cl,0xea
  41a6b0:	sub    eax,0x9e62b542
  41a6b5:	mov    ecx,0x703caafd
  41a6ba:	and    dh,BYTE PTR [edi]
  41a6bc:	(bad)  
  41a6bd:	icebp  
  41a6be:	fidiv  DWORD PTR [esi-0x268b2f27]
  41a6c4:	xchg   esi,eax
  41a6c5:	and    ebp,ebp
  41a6c7:	pop    ebp
  41a6c8:	fmul   QWORD PTR [edx]
  41a6ca:	push   eax
  41a6cb:	or     BYTE PTR [ecx+edx*8+0x7fec5c75],ch
  41a6d2:	cli    
  41a6d3:	xchg   ecx,eax
  41a6d4:	push   0x39c4e9cb
  41a6d9:	lock call 0xdb1dd5a5
  41a6df:	stos   BYTE PTR es:[edi],al
  41a6e0:	aaa    
  41a6e1:	in     al,dx
  41a6e2:	dec    edx
  41a6e3:	inc    ecx
  41a6e4:	fnstsw ax
  41a6e6:	int3   
  41a6e7:	jecxz  0x41a6bb
  41a6e9:	sahf   
  41a6ea:	aaa    
  41a6eb:	(bad)  
  41a6ec:	stos   BYTE PTR es:[edi],al
  41a6ed:	sub    esp,DWORD PTR [ebx-0x32]
  41a6f0:	dec    ebp
  41a6f1:	fnstcw WORD PTR [ecx-0x6e]
  41a6f4:	int3   
  41a6f5:	pop    esp
  41a6f6:	dec    edi
  41a6f7:	mov    DWORD PTR [eax+0x3f],esi
  41a6fa:	jge    0x41a6b5
  41a6fc:	pop    eax
  41a6fd:	aaa    
  41a6fe:	pop    esp
  41a6ff:	mov    dl,0x2
  41a701:	jo     0x41a6de
  41a703:	push   ds
  41a704:	push   cs
  41a705:	mov    dh,0xf2
  41a707:	or     DWORD PTR [esi-0x5a],ebp
  41a70a:	call   0x680f:0x3dd2dddf
  41a711:	sub    eax,0x90bc24fd
  41a716:	sar    BYTE PTR [ebx+0x6a9e5640],1
  41a71c:	imul   esp,DWORD PTR [ecx+0x5d57fddd]
  41a723:	mov    bl,0x66
  41a725:	cmp    al,0x19
  41a727:	sub    bl,BYTE PTR [ebp-0x533359d]
  41a72d:	dec    ecx
  41a72e:	xor    al,0xdf
  41a730:	pusha  
  41a731:	mov    es,WORD PTR [ecx]
  41a733:	pop    edx
  41a734:	pop    ss
  41a735:	dec    esp
  41a736:	je     0x41a6da
  41a738:	sbb    DWORD PTR [edx],0x10
  41a73b:	pop    ebp
  41a73c:	pop    esi
  41a73d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a73e:	mov    al,ds:0x732910c
  41a743:	adc    ah,bl
  41a745:	pop    edx
  41a746:	sub    esp,DWORD PTR [esp+esi*1-0xac59829]
  41a74d:	shr    BYTE PTR [ecx+ecx*8+0x5ec5cc94],1
  41a754:	leave  
  41a755:	cmp    eax,0xd42a4480
  41a75a:	inc    edx
  41a75b:	sbb    eax,0xa5a25a79
  41a760:	and    al,0x8a
  41a762:	xchg   esp,eax
  41a763:	pop    ds
  41a764:	xor    BYTE PTR [eax+0x12c87e80],al
  41a76a:	xor    al,0xf7
  41a76c:	fs into 
  41a76e:	or     ch,BYTE PTR ds:0xb1c8e55e
  41a774:	call   0x4992:0xbf7ef501
  41a77b:	jnp    0x41a7b4
  41a77d:	mov    bl,0x96
  41a77f:	cld    
  41a780:	dec    edx
  41a781:	or     BYTE PTR [eax-0x4a],0x27
  41a785:	cmp    bl,BYTE PTR ds:0x1d35fb11
  41a78b:	and    eax,0x5d8af78b
  41a790:	sub    al,0x67
  41a792:	fadd   QWORD PTR [edx]
  41a794:	mov    ?,WORD PTR [ecx+0x51]
  41a797:	cwde   
  41a798:	outs   dx,BYTE PTR ds:[esi]
  41a799:	pop    ebp
  41a79a:	jg     0x41a7bc
  41a79c:	mov    edx,0xbe2164d8
  41a7a1:	sbb    al,0xed
  41a7a3:	repz aad 0x64
  41a7a6:	inc    ebp
  41a7a7:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7a9:	dec    edi
  41a7aa:	push   es
  41a7ab:	test   BYTE PTR [edi],dh
  41a7ad:	xor    BYTE PTR [ecx],0x91
  41a7b0:	scas   eax,DWORD PTR es:[edi]
  41a7b1:	in     eax,0x97
  41a7b3:	xor    BYTE PTR ds:0x53472e3c,ch
  41a7b9:	test   al,bh
  41a7bb:	div    DWORD PTR [ecx]
  41a7bd:	pop    ds
  41a7be:	xchg   si,ax
  41a7c0:	mov    ah,0xb4
  41a7c2:	popa   
  41a7c3:	mov    al,ds:0x4228923
  41a7c8:	push   edi
  41a7c9:	push   0x737a9088
  41a7ce:	mov    al,0x4c
  41a7d0:	retf   0x336e
  41a7d3:	xchg   ebp,eax
  41a7d4:	jg     0x41a7fb
  41a7d6:	(bad)  
  41a7d7:	mov    ecx,0x777866f5
  41a7dc:	shl    esi,0xd4
  41a7df:	xor    eax,DWORD PTR [esp+eiz*8-0x21db590b]
  41a7e6:	les    eax,FWORD PTR [ecx+0x1c]
  41a7e9:	push   esp
  41a7ea:	push   cs
  41a7eb:	xor    ch,BYTE PTR [ebp+0x2af6513b]
  41a7f1:	lea    ecx,[ebp-0x3d]
  41a7f4:	push   0xffffffd9
  41a7f6:	inc    esi
  41a7f7:	sub    bh,BYTE PTR [esi-0x6e]
  41a7fa:	inc    ebp
  41a7fb:	out    0xae,eax
  41a7fd:	jl     0x41a866
  41a7ff:	mov    edx,0x5903d88b
  41a804:	pop    es
  41a805:	adc    edx,DWORD PTR ds:0xaf6f3ef9
  41a80b:	inc    edx
  41a80c:	cli    
  41a80d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a80e:	jnp    0x41a815
  41a810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a811:	bound  esp,QWORD PTR [edi-0x66]
  41a814:	lods   eax,DWORD PTR ds:[esi]
  41a815:	jmp    0x41a827
  41a817:	xchg   edx,eax
  41a818:	xor    ebp,esi
  41a81a:	mov    dh,BYTE PTR [ebx]
  41a81c:	fwait
  41a81d:	scas   eax,DWORD PTR es:[edi]
  41a81e:	xor    DWORD PTR [ecx],esp
  41a820:	aam    0xea
  41a822:	stc    
  41a823:	fild   DWORD PTR [ecx-0x6f]
  41a826:	xlat   BYTE PTR ds:[ebx]
  41a827:	dec    DWORD PTR [ebp-0x22285fc2]
  41a82d:	dec    esp
  41a82e:	sahf   
  41a82f:	inc    edx
  41a830:	pop    ebx
  41a831:	mov    ds:0xa313e514,al
  41a836:	jl     0x41a863
  41a838:	sbb    BYTE PTR [edi-0x64fcb428],dl
  41a83e:	(bad)  [eax]
  41a840:	mov    ebp,0xd5434684
  41a845:	clc    
  41a846:	pop    esi
  41a847:	fcmovbe st,st(6)
  41a849:	std    
  41a84a:	fmul   QWORD PTR [esi-0x2d3dd1b4]
  41a850:	sub    bh,BYTE PTR [edx]
  41a852:	add    cl,BYTE PTR [ebp-0x1d]
  41a855:	sub    DWORD PTR [edi-0x2f8ab9e7],ecx
  41a85b:	out    0x87,eax
  41a85d:	mov    esi,0x80f1237d
  41a862:	repz loopne 0x41a8be
  41a865:	cmp    eax,0xd9b18f83
  41a86a:	dec    esi
  41a86b:	les    ecx,FWORD PTR [eax+0x62]
  41a86e:	stc    
  41a86f:	dec    ebp
  41a870:	pop    ss
  41a871:	ret    0xd465
  41a874:	inc    esi
  41a875:	rcr    DWORD PTR [edx+0x53c5125d],cl
  41a87b:	test   ebx,0x999a2378
  41a881:	add    eax,0xc11ea502
  41a886:	mov    dh,0xf1
  41a888:	out    0xdd,eax
  41a88a:	inc    esi
  41a88b:	dec    edx
  41a88c:	mov    edi,0x727d3912
  41a891:	jb     0x41a81d
  41a893:	mov    edx,0xc2d6f70d
  41a898:	inc    ecx
  41a899:	nop
  41a89a:	jl     0x41a872
  41a89c:	mov    al,0xe3
  41a89e:	sbb    DWORD PTR [esi+0x2c],eax
  41a8a1:	push   0xe7aca3bd
  41a8a6:	(bad)  
  41a8a7:	push   esi
  41a8a8:	jmp    0x41a882
  41a8aa:	fimul  DWORD PTR [edi-0x561cb8c]
  41a8b0:	xchg   ebx,eax
  41a8b1:	or     dl,BYTE PTR [esi-0x6c]
  41a8b4:	push   ds
  41a8b5:	clc    
  41a8b6:	pop    es
  41a8b7:	in     al,0x4d
  41a8b9:	cwde   
  41a8ba:	pushf  
  41a8bb:	jb     0x41a918
  41a8bd:	push   0x63
  41a8bf:	push   ds
  41a8c0:	push   cs
  41a8c1:	xor    DWORD PTR [edx],esi
  41a8c3:	test   al,0x74
  41a8c5:	les    ebx,FWORD PTR [edx-0x7602afe4]
  41a8cb:	xchg   edi,eax
  41a8cc:	and    al,0x26
  41a8ce:	cmp    ch,BYTE PTR [ecx-0x6c0a4884]
  41a8d4:	pop    ecx
  41a8d5:	xor    bl,BYTE PTR [edx]
  41a8d7:	jo     0x41a8f9
  41a8d9:	outs   dx,DWORD PTR ds:[esi]
  41a8da:	dec    DWORD PTR [esi]
  41a8dc:	pop    ecx
  41a8dd:	(bad)  
  41a8df:	add    eax,0x11e09394
  41a8e4:	mov    al,ds:0xe312eba9
  41a8e9:	jne    0x41a904
  41a8eb:	lods   eax,DWORD PTR ds:[esi]
  41a8ec:	mov    ds:0xaf5ea7d6,eax
  41a8f1:	push   ss
  41a8f2:	jmp    0x6a69:0x686e1a84
  41a8f9:	jg     0x41a951
  41a8fb:	pop    eax
  41a8fc:	lods   eax,DWORD PTR ds:[esi]
  41a8fd:	dec    ecx
  41a8fe:	scas   al,BYTE PTR es:[edi]
  41a8ff:	mov    cs,WORD PTR [ecx]
  41a901:	ret    0x97b2
  41a904:	les    ebx,FWORD PTR [ebp-0x4d]
  41a907:	dec    ebp
  41a908:	sbb    ch,BYTE PTR [edx]
  41a90a:	inc    esi
  41a90b:	push   0xfce206c1
  41a910:	ja     0x41a920
  41a912:	ror    DWORD PTR ds:0xfb28925a,0xce
  41a919:	in     eax,dx
  41a91a:	cmp    ah,BYTE PTR [ecx+0x5efc6290]
  41a920:	imul   edi,DWORD PTR [eax+0x2e],0xdf7acefc
  41a927:	mov    ebx,0x94b0266d
  41a92c:	xchg   ebp,eax
  41a92d:	mov    ebx,DWORD PTR [ecx+ecx*2+0x3b]
  41a931:	dec    edx
  41a932:	sbb    dh,BYTE PTR [ecx+0x50594432]
  41a938:	daa    
  41a939:	in     al,0x6d
  41a93b:	xchg   ecx,eax
  41a93c:	inc    edi
  41a93d:	push   ds
  41a93e:	ins    DWORD PTR es:[edi],dx
  41a93f:	lock sub ebx,DWORD PTR [ebp+0x78]
  41a943:	sub    bl,bl
  41a945:	dec    esi
  41a946:	or     al,0x57
  41a948:	enter  0xa192,0xc8
  41a94c:	mov    esi,0xc2e90170
  41a951:	ss add eax,0x9f71df00
  41a957:	aad    0x47
  41a959:	xor    edi,DWORD PTR [ecx]
  41a95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a95c:	stos   DWORD PTR es:[edi],eax
  41a95d:	dec    esi
  41a95e:	xor    al,0xef
  41a960:	adc    eax,0x424be4ce
  41a965:	sahf   
  41a966:	or     bh,ah
  41a968:	hlt    
  41a969:	rol    DWORD PTR [ecx+0x67],1
  41a96c:	jg     0x41a924
  41a96e:	xchg   ebp,eax
  41a96f:	in     eax,0x28
  41a971:	sub    al,0xde
  41a973:	add    edx,DWORD PTR [ebp-0x223bdaf0]
  41a979:	xor    DWORD PTR [edi-0x4ab30ae0],ebx
  41a97f:	jl     0x41a9bf
  41a981:	mov    al,ds:0x47c70878
  41a986:	stos   BYTE PTR es:[edi],al
  41a987:	pop    esi
  41a988:	xor    bh,BYTE PTR [eax]
  41a98a:	push   eax
  41a98b:	imul   edx,DWORD PTR ss:[esi+0x58],0x6d2c47c5
  41a993:	inc    esp
  41a994:	cmc    
  41a995:	(bad)  
  41a997:	dec    ebp
  41a998:	in     al,0xe6
  41a99a:	test   eax,0x221de44e
  41a99f:	sahf   
  41a9a0:	pop    edx
  41a9a1:	outs   dx,DWORD PTR ds:[esi]
  41a9a2:	pop    esi
  41a9a3:	sub    ecx,edi
  41a9a5:	sbb    ebx,esi
  41a9a7:	pushf  
  41a9a8:	xchg   ebp,eax
  41a9a9:	aaa    
  41a9aa:	(bad)  [ecx+0x39cd7b22]
  41a9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9b1:	mov    ds:0x429fd2e5,al
  41a9b6:	dec    eax
  41a9b7:	adc    DWORD PTR [ebx+0x282061b0],eax
  41a9bd:	ret    
  41a9be:	pop    ecx
  41a9bf:	inc    ebp
  41a9c0:	cmp    dh,bh
  41a9c2:	inc    ecx
  41a9c3:	dec    ebp
  41a9c4:	sbb    DWORD PTR [ecx+0x2769ef6e],ebp
  41a9ca:	adc    ebx,ebp
  41a9cc:	mov    ecx,0x8278c389
  41a9d1:	mov    cl,0xbd
  41a9d3:	xchg   esp,eax
  41a9d4:	cs mov dh,0xfb
  41a9d7:	xor    bl,BYTE PTR [ebp+0x63]
  41a9da:	mov    ah,0x16
  41a9dc:	mov    eax,gs
  41a9de:	das    
  41a9df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9e0:	push   ecx
  41a9e1:	dec    edx
  41a9e2:	imul   ecx,DWORD PTR [esi],0xffffff82
  41a9e5:	int3   
  41a9e6:	dec    esp
  41a9e7:	arpl   ax,bx
  41a9e9:	add    al,0x1b
  41a9eb:	add    eax,0x94ccad56
  41a9f0:	xor    eax,0x3218fd6
  41a9f5:	jmp    0xce012945
  41a9fa:	sub    al,BYTE PTR [edx]
  41a9fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9fd:	inc    edi
  41a9fe:	mov    edi,0xff3e0bbc
  41aa03:	mov    bh,0x85
  41aa05:	enter  0x75e6,0xb7
  41aa09:	jp     0x41a990
  41aa0b:	pop    eax
  41aa0c:	xor    BYTE PTR [esi-0x64],ah
  41aa0f:	jmp    0x41aa29
  41aa11:	int3   
  41aa12:	ror    DWORD PTR [ecx],cl
  41aa14:	mov    esi,0x90c72b58
  41aa19:	xchg   ebp,eax
  41aa1a:	repz jp 0x41aa00
  41aa1d:	push   ecx
  41aa1e:	mov    al,0x35
  41aa20:	xor    esp,DWORD PTR [ebx]
  41aa22:	xor    eax,esp
  41aa24:	repz int3 
  41aa26:	shr    DWORD PTR [edx],0x96
  41aa29:	xchg   esi,eax
  41aa2a:	mov    ebp,ebx
  41aa2c:	mov    dl,0xbe
  41aa2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa2f:	test   DWORD PTR [edi+0x17bcda66],esp
  41aa35:	add    al,0x48
  41aa37:	add    al,0x38
  41aa39:	sub    esi,DWORD PTR [edx]
  41aa3b:	mov    ds:0x9b7cc282,eax
  41aa40:	push   ss
  41aa41:	into   
  41aa42:	scas   al,BYTE PTR es:[edi]
  41aa43:	cdq    
  41aa44:	ror    DWORD PTR [edi+0xa],0xa1
  41aa48:	mov    eax,ds:0xbbc6b6b8
  41aa4d:	fstp   DWORD PTR ds:0x9401753a
  41aa53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa54:	jp     0x41aa54
  41aa56:	jne    0x41a9fe
  41aa58:	pop    ds
  41aa59:	cwde   
  41aa5a:	in     al,0x3
  41aa5c:	pop    esi
  41aa5d:	jb     0x41aa76
  41aa5f:	retf   0x3f29
  41aa62:	push   ecx
  41aa63:	call   0xd8e8:0x72de76cb
  41aa6a:	in     eax,dx
  41aa6b:	xchg   edi,eax
  41aa6c:	(bad)
  41aa6f:	cwde   
  41aa70:	cmp    eax,0x98e66b04
  41aa75:	retf   0xf6ee
  41aa78:	jnp    0x41aa7a
  41aa7a:	inc    bp
  41aa7c:	sub    BYTE PTR [ebx],cl
  41aa7e:	push   ebx
  41aa7f:	xlat   BYTE PTR ds:[ebx]
  41aa80:	xchg   BYTE PTR [edx+0x534f9523],cl
  41aa86:	xor    DWORD PTR [esi+0x53],esi
  41aa89:	xchg   esi,eax
  41aa8a:	lock sub eax,0x5ac3ea71
  41aa91:	mov    ds:0x6f8154c,eax
  41aa96:	daa    
  41aa97:	out    0x5b,eax
  41aa99:	or     al,0x8f
  41aa9b:	cdq    
  41aa9c:	dec    ebp
  41aa9d:	xchg   DWORD PTR [edi-0xc],esi
  41aaa0:	pop    edi
  41aaa1:	sub    ecx,DWORD PTR [edx-0xda8c2b8]
  41aaa7:	dec    edx
  41aaa8:	and    edi,esi
  41aaaa:	lea    edi,[ebx+0x3686636d]
  41aab0:	test   BYTE PTR [ecx-0x3d],dl
  41aab3:	fsub   st,st(2)
  41aab5:	push   esi
  41aab6:	mov    dl,0xd
  41aab8:	dec    ecx
  41aab9:	enter  0x982b,0xb3
  41aabd:	inc    edi
  41aabe:	sub    esp,DWORD PTR [eax]
  41aac0:	inc    edx
  41aac2:	scas   al,BYTE PTR es:[edi]
  41aac3:	xchg   edi,eax
  41aac4:	stos   BYTE PTR es:[edi],al
  41aac5:	cwde   
  41aac6:	jne    0x41aa8e
  41aac8:	jmp    0x41aaea
  41aaca:	dec    edi
  41aacb:	adc    DWORD PTR [ebp+0x37eb6337],0xffffffbe
  41aad2:	repz bound edi,QWORD PTR [esi]
  41aad5:	popf   
  41aad6:	push   ecx
  41aad7:	add    eax,DWORD PTR [edx-0x6d]
  41aada:	sti    
  41aadb:	shr    BYTE PTR [ebx-0x15],1
  41aade:	mov    bh,0xca
  41aae0:	add    ecx,ebp
  41aae2:	pop    esi
  41aae3:	add    ah,BYTE PTR [edx+0x37]
  41aae6:	xchg   edx,eax
  41aae7:	sbb    esp,esp
  41aae9:	sti    
  41aaea:	outs   dx,DWORD PTR ds:[esi]
  41aaeb:	push   es
  41aaec:	or     dh,BYTE PTR [eax]
  41aaee:	push   eax
  41aaef:	rol    DWORD PTR [ecx],cl
  41aaf1:	cld    
  41aaf2:	inc    eax
  41aaf3:	in     al,dx
  41aaf4:	mov    edx,esi
  41aaf6:	jg     0x41aadf
  41aaf8:	call   0x297086a6
  41aafd:	js     0x41aac9
  41aaff:	jle    0x41aaf0
  41ab01:	xchg   ebp,eax
  41ab02:	arpl   bp,cx
  41ab04:	adc    al,0x52
  41ab06:	mov    ?,WORD PTR [esi+0x10]
  41ab09:	push   ss
  41ab0a:	stos   DWORD PTR es:[edi],eax
  41ab0b:	xlat   BYTE PTR ds:[ebx]
  41ab0c:	add    bl,al
  41ab0e:	dec    ebp
  41ab0f:	rol    bl,0x49
  41ab12:	or     DWORD PTR [edx-0x47],ebx
  41ab15:	jg     0x41aaab
  41ab17:	or     ecx,DWORD PTR [edi-0x25f2b79e]
  41ab1d:	xor    DWORD PTR [ebp-0x3f903c2c],ebx
  41ab23:	inc    ebp
  41ab24:	mov    ds,WORD PTR [edi]
  41ab26:	aam    0x87
  41ab28:	xor    al,0xee
  41ab2a:	repz sbb ebp,DWORD PTR ds:[edi-0xd05cb49]
  41ab32:	stc    
  41ab33:	pop    ecx
  41ab34:	test   al,0xbf
  41ab36:	mov    edi,DWORD PTR [esi+0x1ad18587]
  41ab3c:	call   0x3e7b:0xfd8c9576
  41ab43:	aad    0x72
  41ab45:	scas   al,BYTE PTR es:[edi]
  41ab46:	pop    edx
  41ab47:	sbb    eax,0xc5c21f43
  41ab4c:	jno    0x41aaf4
  41ab4e:	stos   DWORD PTR es:[edi],eax
  41ab4f:	es jne 0x41aada
  41ab52:	rcl    al,0xa4
  41ab55:	aad    0xfb
  41ab57:	icebp  
  41ab58:	enter  0x36e5,0x84
  41ab5c:	or     DWORD PTR [ecx+0x51],esp
  41ab5f:	sbb    BYTE PTR [esi-0x6042dddc],bh
  41ab65:	enter  0xa52e,0xe7
  41ab69:	lods   al,BYTE PTR ds:[esi]
  41ab6a:	imul   ebx,DWORD PTR [edi-0x5a9ce1bc],0xffffff9d
  41ab71:	push   0x4076b67a
  41ab76:	jp     0x41ab64
  41ab78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab79:	xchg   ebp,eax
  41ab7a:	xchg   esi,eax
  41ab7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab7c:	jl     0x41ab25
  41ab7e:	mov    al,0x69
  41ab80:	or     ch,ch
  41ab82:	pop    ds
  41ab83:	xor    ebp,eax
  41ab85:	pop    eax
  41ab86:	call   0xdb9:0xffeef89d
  41ab8d:	jae    0x41abba
  41ab8f:	in     al,dx
  41ab90:	sbb    DWORD PTR [edi+0x57a87366],edi
  41ab96:	cli    
  41ab97:	vhsubpd xmm5,xmm0,XMMWORD PTR [esp+edx*8-0x12]
  41ab9d:	mov    bh,0xfb
  41ab9f:	cmp    BYTE PTR [edx+0x5173286f],dh
  41aba5:	sahf   
  41aba6:	int    0x79
  41aba8:	push   ds
  41aba9:	cmp    eax,0xaa018ca0
  41abae:	push   esi
  41abaf:	test   DWORD PTR [ecx-0xc41473e],ecx
  41abb5:	lahf   
  41abb6:	xchg   ecx,eax
  41abb7:	xchg   edx,eax
  41abb8:	cwde   
  41abb9:	add    al,0x9b
  41abbb:	clc    
  41abbc:	imul   ebx,DWORD PTR [esi],0x6
  41abbf:	jne    0x41abcc
  41abc1:	jl     0x41ab7b
  41abc3:	test   BYTE PTR [edi],0x2b
  41abc6:	jle    0x41ab52
  41abc8:	cmp    BYTE PTR [ebx],dl
  41abca:	cli    
  41abcb:	jp     0x41ab9d
  41abcd:	pop    ecx
  41abce:	mov    edx,0xa072451a
  41abd3:	pop    edx
  41abd4:	mov    ah,0x9b
  41abd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abd7:	out    0x2b,al
  41abd9:	inc    edx
  41abda:	pop    ebx
  41abdb:	mov    dl,0x32
  41abdd:	mov    al,ds:0xc7fdc04
  41abe2:	xor    esp,DWORD PTR [ebp-0x3f]
  41abe5:	mov    bh,0xcc
  41abe7:	(bad)  
  41abe8:	mov    bl,0x5
  41abea:	sahf   
  41abeb:	call   0x86dd:0xb5e0dac9
  41abf2:	push   ebp
  41abf3:	in     al,dx
  41abf4:	scas   al,BYTE PTR es:[edi]
  41abf5:	cmc    
  41abf6:	or     DWORD PTR [edx],ebp
  41abf8:	aas    
  41abf9:	mov    edi,0xe36d852f
  41abfe:	cdq    
  41abff:	xchg   edx,eax
  41ac00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac01:	retf   
  41ac02:	add    al,0x52
  41ac04:	add    BYTE PTR [eax],0xc2
  41ac07:	shl    edx,1
  41ac09:	lods   al,BYTE PTR ds:[esi]
  41ac0a:	popa   
  41ac0b:	cld    
  41ac0c:	sub    eax,0x8946d353
  41ac11:	(bad)  
  41ac12:	sub    eax,ecx
  41ac14:	cmp    eax,0x630f49fd
  41ac19:	pop    ebp
  41ac1a:	and    al,0xb4
  41ac1c:	push   0x36
  41ac1e:	test   DWORD PTR [ecx+0x1c3b304a],ebp
  41ac24:	pop    ss
  41ac25:	jg     0x41ac91
  41ac27:	mov    al,ds:0x68808bfe
  41ac2c:	jno    0x41abdc
  41ac2e:	and    al,0xea
  41ac30:	lods   al,BYTE PTR ds:[esi]
  41ac31:	loop   0x41ac2e
  41ac33:	add    BYTE PTR [edx-0x5d],ch
  41ac36:	xchg   ecx,eax
  41ac37:	sbb    al,0xa4
  41ac39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac3a:	sbb    dh,BYTE PTR [edx-0x27b5bbee]
  41ac40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac41:	jp     0x41abfb
  41ac43:	iret   
  41ac44:	popa   
  41ac45:	shrd   DWORD PTR [ebp+0x24],esp,0x41
  41ac4a:	scas   eax,DWORD PTR es:[edi]
  41ac4b:	mov    cl,0xda
  41ac4d:	mov    BYTE PTR [eax],al
  41ac4f:	xchg   ebp,eax
  41ac50:	xchg   DWORD PTR [esi+0x76],eax
  41ac53:	pop    ss
  41ac54:	xchg   esi,eax
  41ac55:	scas   eax,DWORD PTR es:[edi]
  41ac56:	ret    
  41ac57:	push   edx
  41ac58:	jle    0x41abde
  41ac5a:	dec    edi
  41ac5b:	aam    0x77
  41ac5d:	test   eax,0xa4564298
  41ac62:	test   ah,bh
  41ac64:	xchg   esi,eax
  41ac65:	xchg   esi,eax
  41ac66:	mov    edx,0xcc6c4a9
  41ac6b:	test   eax,0x6381c093
  41ac70:	adc    al,0x62
  41ac72:	clc    
  41ac73:	sbb    eax,0x8cc07d4d
  41ac78:	idiv   ch
  41ac7a:	lock pusha 
  41ac7c:	push   ds
  41ac7d:	adc    cl,BYTE PTR [ebx+0x30]
  41ac80:	xlat   BYTE PTR ds:[ebx]
  41ac81:	in     al,dx
  41ac82:	xchg   edx,eax
  41ac83:	ja     0x41acfc
  41ac85:	test   edx,ecx
  41ac87:	out    dx,eax
  41ac88:	sub    BYTE PTR [esi+edi*8+0x6e32e246],bl
  41ac8f:	call   0xdbcc:0xac8e9041
  41ac96:	add    BYTE PTR [bx+si-0x36ab],cl
  41ac9b:	test   DWORD PTR [ebx],eax
  41ac9d:	(bad)  
  41ac9f:	neg    BYTE PTR [edx-0x70df85fc]
  41aca5:	push   ebx
  41aca6:	and    al,0xa2
  41aca8:	mov    al,0x85
  41acaa:	dec    eax
  41acab:	and    ebp,ebp
  41acad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acae:	inc    esi
  41acaf:	push   ecx
  41acb0:	push   ecx
  41acb1:	sbb    BYTE PTR [esi+ebp*4+0x245976d7],dl
  41acb8:	cmp    eax,0xe186564f
  41acbd:	xchg   ecx,eax
  41acbe:	ja     0x41acfd
  41acc0:	sbb    eax,0x88be2bfa
  41acc5:	and    DWORD PTR [edx+0x7],0xac8a91bc
  41accc:	nop
  41accd:	(bad)  
  41acce:	fdiv   st(2),st
  41acd0:	inc    ebp
  41acd1:	pop    ecx
  41acd2:	lock nop
  41acd4:	sub    eax,0xb43c2311
  41acd9:	dec    ebx
  41acda:	aad    0xbe
  41acdc:	ja     0x41acb2
  41acde:	inc    edx
  41acdf:	inc    eax
  41ace0:	pop    eax
  41ace1:	sbb    edi,DWORD PTR [eax]
  41ace3:	sub    ebp,DWORD PTR [edx+0x19]
  41ace6:	lahf   
  41ace7:	stc    
  41ace8:	(bad)  
  41acea:	outs   dx,DWORD PTR ds:[esi]
  41aceb:	inc    ebp
  41acec:	mov    cl,bl
  41acee:	and    al,0x61
  41acf0:	inc    ecx
  41acf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acf2:	or     edi,ebp
  41acf4:	daa    
  41acf5:	pop    es
  41acf6:	and    ah,al
  41acf8:	inc    edi
  41acf9:	pop    eax
  41acfa:	push   ds
  41acfb:	xor    al,BYTE PTR [esi]
  41acfd:	leave  
  41acfe:	js     0x41ad51
  41ad00:	sbb    al,0x77
  41ad02:	jp     0x41ad3f
  41ad04:	jmp    0xb00790d9
  41ad09:	xchg   esp,eax
  41ad0a:	outs   dx,BYTE PTR ds:[esi]
  41ad0b:	xor    dl,BYTE PTR [eax+0x6c]
  41ad0e:	mov    BYTE PTR [ebp+0x4fc45007],ch
  41ad14:	add    al,0x55
  41ad16:	sub    ebx,ebx
  41ad18:	imul   ecx,DWORD PTR [edi+0x698ec1ec],0x2a
  41ad1f:	jp     0x41ad5d
  41ad21:	jmp    0x32f8:0xeb234bc9
  41ad28:	mov    ?,WORD PTR [esp+ebx*8-0x2f]
  41ad2c:	mov    dl,0xb8
  41ad2e:	outs   dx,DWORD PTR ds:[esi]
  41ad2f:	rcl    DWORD PTR [ebx+0x1b],cl
  41ad32:	into   
  41ad33:	and    DWORD PTR [eax+esi*8-0x61401560],esi
  41ad3a:	pop    eax
  41ad3b:	(bad)
  41ad3e:	clc    
  41ad3f:	mov    edi,0xe3108b9b
  41ad44:	mov    ch,0x4c
  41ad46:	(bad)  
  41ad47:	imul   ecx,DWORD PTR [edx-0x2a],0x27
  41ad4b:	ss cmp al,0x80
  41ad4e:	mov    edx,ebp
  41ad50:	test   al,0xea
  41ad52:	dec    ebx
  41ad53:	sbb    DWORD PTR [esi-0x71],ecx
  41ad56:	push   0xa587a5f6
  41ad5b:	xchg   ebp,eax
  41ad5c:	pop    esi
  41ad5d:	jp     0x41adbd
  41ad5f:	jmp    0x16c85090
  41ad64:	scas   eax,DWORD PTR es:[edi]
  41ad65:	or     BYTE PTR [edi+0xc174db7],dh
  41ad6b:	push   ds
  41ad6c:	ss inc edi
  41ad6e:	mov    bh,0x37
  41ad70:	jmp    0x41ad8e
  41ad72:	pop    esp
  41ad73:	int3   
  41ad74:	jno    0x41ad1b
  41ad76:	ss icebp 
  41ad78:	lock imul esp,DWORD PTR [esp+edi*1+0x5909090d],0x231fb370
  41ad84:	mov    ch,0xb9
  41ad86:	push   esi
  41ad87:	pusha  
  41ad88:	sub    eax,0x3bb7d749
  41ad8d:	loop   0x41ad6f
  41ad8f:	arpl   bx,cx
  41ad91:	add    BYTE PTR [edx+0x7352b52a],0x20
  41ad98:	stos   BYTE PTR es:[edi],al
  41ad99:	hlt    
  41ad9a:	ja     0x41adf3
  41ad9c:	outs   dx,BYTE PTR ds:[esi]
  41ad9d:	sbb    al,0xc
  41ad9f:	daa    
  41ada0:	mov    ds:0x24621e12,al
  41ada5:	ret    
  41ada6:	fdiv   QWORD PTR [ebx]
  41ada8:	or     esi,esi
  41adaa:	scas   al,BYTE PTR es:[edi]
  41adab:	xchg   DWORD PTR [ecx+0x5708c4c1],eax
  41adb1:	add    BYTE PTR [edi],cl
  41adb3:	scas   eax,DWORD PTR es:[edi]
  41adb4:	retf   0x4d89
  41adb7:	test   al,0x8b
  41adb9:	dec    ebp
  41adba:	or     BYTE PTR [ebx-0x3e7e53ab],cl
  41adc0:	mov    ds:0xb0064f8,al
  41adc5:	retf   0x4d89
  41adc8:	lods   al,BYTE PTR ds:[esi]
  41adc9:	mov    ecx,DWORD PTR [ebp+0x8]
  41adcc:	mov    edx,DWORD PTR [ebp-0x50]
  41adcf:	add    ecx,0x242ebf1
  41add5:	xor    ecx,edx
  41add7:	mov    DWORD PTR [ebp-0x50],ecx
  41adda:	mov    ecx,DWORD PTR [ebp+0x8]
  41addd:	mov    edx,DWORD PTR [ebp-0x4c]
  41ade0:	jmp    0x41d172
  41ade5:	cmc    
  41ade6:	imul   edx,eax,0xf5899c89
  41adec:	aad    0x91
  41adee:	push   0xb791fb1f
  41adf3:	push   ss
  41adf4:	retf   
  41adf5:	fcomp  DWORD PTR [esi]
  41adf7:	jno    0x41ae69
  41adf9:	or     eax,0xb070705f
  41adfe:	adc    DWORD PTR [ebp+0x3f9e8816],ebx
  41ae04:	ins    DWORD PTR es:[edi],dx
  41ae05:	jnp    0x41ae39
  41ae07:	(bad)  
  41ae08:	push   esi
  41ae09:	gs int3 
  41ae0b:	stc    
  41ae0c:	xchg   ecx,eax
  41ae0d:	shr    BYTE PTR [ebx+esi*2+0x501f8e84],cl
  41ae14:	inc    edi
  41ae15:	mov    dl,0xe8
  41ae17:	fdivr  QWORD PTR [eax]
  41ae19:	dec    ebp
  41ae1a:	sub    BYTE PTR [esp+eax*1],bl
  41ae1d:	and    DWORD PTR [ebx-0x52],0xc780fc83
  41ae24:	cmp    eax,0x43899e82
  41ae29:	sbb    DWORD PTR [edi+eax*1+0x57c916cf],ebx
  41ae30:	retf   
  41ae31:	add    al,0xf5
  41ae33:	cli    
  41ae34:	push   ss
  41ae35:	dec    ecx
  41ae36:	lods   al,BYTE PTR ds:[esi]
  41ae37:	inc    esi
  41ae38:	test   DWORD PTR [edi],esp
  41ae3a:	cmp    DWORD PTR [edx-0x5bc0cb17],esp
  41ae40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae41:	nop
  41ae42:	fmul   st,st(4)
  41ae44:	test   DWORD PTR [ebx+0x5e],0xaa65dcab
  41ae4b:	cld    
  41ae4c:	je     0x41ae73
  41ae4e:	jmp    0x5078:0xc8ae7f1f
  41ae55:	xchg   ecx,eax
  41ae56:	mov    edi,0x88a408
  41ae5b:	mov    bh,0x10
  41ae5d:	cdq    
  41ae5e:	sti    
  41ae5f:	scas   eax,DWORD PTR es:[edi]
  41ae60:	int    0xec
  41ae62:	pushf  
  41ae63:	push   esi
  41ae64:	inc    ebp
  41ae65:	ins    DWORD PTR es:[edi],dx
  41ae66:	daa    
  41ae67:	std    
  41ae68:	icebp  
  41ae69:	sub    cl,bh
  41ae6b:	xor    DWORD PTR [eax+0x7b89640a],edx
  41ae71:	jecxz  0x41ae9e
  41ae73:	loopne 0x41ae86
  41ae75:	or     DWORD PTR [ecx+0x59],edi
  41ae78:	js     0x41ae05
  41ae7a:	fst    QWORD PTR [esi+0x3adf9112]
  41ae80:	ret    0x7ef6
  41ae83:	mov    ds:0x836c8c2,eax
  41ae88:	pop    edi
  41ae89:	fisttp DWORD PTR [edx]
  41ae8b:	pop    ebx
  41ae8c:	xor    eax,DWORD PTR [eax+0x15]
  41ae8f:	adc    bl,BYTE PTR [esi+0x4fcb5593]
  41ae95:	icebp  
  41ae96:	xchg   BYTE PTR [ecx+0x3f23c324],ah
  41ae9c:	bound  eax,QWORD PTR [edx]
  41ae9e:	out    dx,eax
  41ae9f:	dec    edx
  41aea0:	push   es
  41aea1:	jle    0x41aefa
  41aea3:	push   ebp
  41aea4:	out    0x43,eax
  41aea6:	cdq    
  41aea7:	adc    eax,DWORD PTR [edx-0x6d]
  41aeaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeab:	push   eax
  41aeac:	inc    edx
  41aead:	sbb    eax,0xf80e70af
  41aeb2:	fld    DWORD PTR [edx]
  41aeb4:	xchg   ecx,eax
  41aeb5:	pop    ds
  41aeb6:	dec    edx
  41aeb7:	push   esp
  41aeb8:	adc    BYTE PTR [ebp+0x68bd407],bl
  41aebe:	loope  0x41aedb
  41aec0:	mov    eax,0x63a4db7e
  41aec5:	lea    esi,[eax+0x54abe422]
  41aecb:	lea    edi,[ecx+0x1e77d188]
  41aed1:	stc    
  41aed2:	or     eax,0xb9c0e079
  41aed7:	dec    ebx
  41aed8:	push   esp
  41aed9:	ja     0x41aea8
  41aedb:	stos   DWORD PTR es:[edi],eax
  41aedc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aedd:	ret    
  41aede:	std    
  41aedf:	jmp    0x758c:0x2d1e1cae
  41aee6:	in     al,0xc6
  41aee8:	fs clc 
  41aeea:	stc    
  41aeeb:	mov    esp,0x6b258e41
  41aef0:	push   ds
  41aef1:	test   DWORD PTR [esi-0x47e20af3],ebx
  41aef7:	mov    dh,ah
  41aef9:	daa    
  41aefa:	ret    
  41aefb:	mov    cl,0x99
  41aefd:	outs   dx,DWORD PTR ds:[esi]
  41aefe:	aad    0x0
  41af00:	(bad)  
  41af02:	imul   eax,DWORD PTR [eax+0x31cf6d15],0x8b5c419e
  41af0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af0d:	call   0xdb676506
  41af12:	xchg   ebp,eax
  41af13:	leave  
  41af14:	stc    
  41af15:	and    DWORD PTR [edx],0x9d7696c0
  41af1b:	cmp    BYTE PTR [esi],cl
  41af1d:	das    
  41af1e:	dec    BYTE PTR [edi]
  41af20:	inc    edx
  41af21:	mov    ah,0xd3
  41af23:	sti    
  41af24:	mov    al,0xc2
  41af26:	and    BYTE PTR [edi],ah
  41af28:	(bad)  
  41af29:	icebp  
  41af2a:	pop    edi
  41af2b:	stos   BYTE PTR es:[edi],al
  41af2c:	pop    ds
  41af2d:	nop
  41af2e:	dec    edi
  41af2f:	fldln2 
  41af31:	ss push 0x39
  41af34:	into   
  41af35:	outs   dx,DWORD PTR ds:[esi]
  41af36:	push   0x46
  41af38:	jp     0x41afb1
  41af3a:	(bad)  
  41af3d:	adc    DWORD PTR [edi+0x2b2b015],ecx
  41af43:	jecxz  0x41af89
  41af45:	push   edi
  41af46:	xor    BYTE PTR [ecx+esi*2-0x7595fe72],dl
  41af4d:	pop    es
  41af4e:	mov    bh,bh
  41af50:	mov    ch,0xcb
  41af52:	hlt    
  41af53:	mov    fs:0x45ed908,eax
  41af59:	call   0x692e9e74
  41af5e:	pop    ecx
  41af5f:	je     0x41af32
  41af61:	and    al,0x6b
  41af63:	pushw  es
  41af65:	sbb    al,0x4
  41af67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af68:	mov    ds:0xabaca5a,eax
  41af6d:	xor    bl,al
  41af6f:	fldcw  WORD PTR [esi]
  41af71:	lea    ebx,[ebp+0x4eec900b]
  41af77:	xchg   BYTE PTR [edx],dh
  41af79:	adc    al,0x4e
  41af7b:	popf   
  41af7c:	bound  eax,QWORD PTR [ecx+edx*4+0x5a]
  41af80:	mov    ecx,0x4edddda7
  41af85:	pusha  
  41af86:	add    al,0xfe
  41af88:	loope  0x41afc5
  41af8a:	sar    eax,1
  41af8c:	jns    0x41af92
  41af8e:	jnp    0x41af47
  41af90:	xchg   edi,eax
  41af91:	das    
  41af92:	push   cs
  41af93:	xor    ah,BYTE PTR [esi-0x214a7d2f]
  41af99:	adc    eax,0x47ede56c
  41af9e:	imul   edi,DWORD PTR ds:0x1fd2c806,0xe707e80b
  41afa8:	cli    
  41afa9:	and    bl,0x7c
  41afac:	cld    
  41afad:	sub    al,0x3c
  41afaf:	fsubr  QWORD PTR [ecx]
  41afb1:	out    dx,eax
  41afb2:	adc    al,0xdd
  41afb4:	popf   
  41afb5:	mov    ds:0x4895e5d5,eax
  41afba:	mov    gs,WORD PTR [edi-0x21c0401d]
  41afc0:	loopne 0x41b000
  41afc2:	inc    esi
  41afc3:	(bad)  
  41afc5:	sbb    esp,DWORD PTR [esi+0x5d]
  41afc8:	(bad)  
  41afca:	jp     0x41afe4
  41afcc:	mov    al,BYTE PTR [si]
  41afcf:	or     DWORD PTR [edx+ecx*2-0x4da60634],edx
  41afd6:	mov    ebp,0x2527e38c
  41afdb:	repnz add eax,0x53b19aac
  41afe1:	paddw  mm1,QWORD PTR [ebx-0x71]
  41afe5:	pop    esi
  41afe6:	jge    0x41afb3
  41afe8:	sbb    ah,bl
  41afea:	ss pop esi
  41afec:	and    dh,BYTE PTR [ebx+0x6198a09]
  41aff2:	fsub   DWORD PTR [edx-0x2b]
  41aff5:	fdiv   DWORD PTR fs:0xfd3622f4
  41affc:	test   eax,0xd985614c
  41b001:	jmp    0x2cced190
  41b006:	cli    
  41b007:	mov    edi,0xfe95a91e
  41b00c:	aaa    
  41b00d:	stc    
  41b00e:	bound  edx,QWORD PTR [edi]
  41b010:	ds repz in eax,dx
  41b013:	push   ds
  41b014:	add    eax,0x1dd32e86
  41b019:	gs pop ebx
  41b01b:	or     eax,0xc6b8b8c2
  41b020:	outs   dx,DWORD PTR ds:[esi]
  41b021:	xchg   ebp,eax
  41b022:	sbb    BYTE PTR [esi-0x7e],bh
  41b025:	lahf   
  41b026:	popa   
  41b027:	mov    esp,0x7be2c10c
  41b02c:	aam    0xa0
  41b02e:	fwait
  41b02f:	mov    bh,0x33
  41b031:	jo     0x41b07b
  41b033:	and    ecx,edx
  41b035:	fidiv  WORD PTR es:[ebp-0x37]
  41b039:	call   0x80b6:0x407ee682
  41b040:	hlt    
  41b041:	ja     0x41b021
  41b043:	test   DWORD PTR [ecx],esi
  41b045:	jb     0x41b092
  41b047:	shr    BYTE PTR [ebp-0x21],0x9c
  41b04b:	scas   eax,DWORD PTR es:[edi]
  41b04c:	xchg   esp,eax
  41b04d:	jecxz  0x41b04c
  41b04f:	stc    
  41b050:	das    
  41b051:	sub    ebx,esi
  41b053:	jp     0x41b08e
  41b055:	adc    BYTE PTR [ecx-0x19],dl
  41b058:	popf   
  41b059:	mov    BYTE PTR [ebx-0x69],al
  41b05c:	shl    ecx,1
  41b05e:	and    DWORD PTR [edx],ebp
  41b060:	lock test DWORD PTR [esp+esi*4-0x21d45748],ebp
  41b068:	inc    esi
  41b069:	sub    ah,ch
  41b06b:	xchg   ebp,eax
  41b06c:	push   ecx
  41b06d:	fdivr  st(2),st
  41b06f:	lods   eax,DWORD PTR ds:[esi]
  41b070:	and    esp,DWORD PTR [edx]
  41b072:	lahf   
  41b073:	stc    
  41b074:	mov    bl,0xd9
  41b076:	lock icebp 
  41b078:	mov    edi,0x699ee83b
  41b07d:	lds    edx,FWORD PTR [edi+edx*1+0x3b471bb3]
  41b084:	jbe    0x41b0b0
  41b086:	stc    
  41b087:	test   al,0x12
  41b089:	jae    0x41b0fe
  41b08b:	jne    0x41b097
  41b08d:	jae    0x41b0c0
  41b08f:	rcl    dl,1
  41b091:	(bad)
  41b095:	dec    ecx
  41b096:	sbb    al,0xdc
  41b098:	call   0xe6c4:0xcc6c67f1
  41b09f:	pop    edi
  41b0a0:	mov    esi,0x28520634
  41b0a5:	icebp  
  41b0a6:	lahf   
  41b0a7:	adc    BYTE PTR [ecx],bh
  41b0a9:	nop
  41b0aa:	call   0x2c85:0xf2f95d51
  41b0b1:	xchg   edi,eax
  41b0b2:	sahf   
  41b0b3:	inc    edx
  41b0b4:	js     0x41b0d0
  41b0b6:	dec    edi
  41b0b7:	retf   0x46f0
  41b0ba:	inc    ebx
  41b0bb:	push   0xff9e5e75
  41b0c0:	sub    dl,BYTE PTR [ebx-0x8]
  41b0c3:	cmp    ah,BYTE PTR [ebp-0x3a7b03a9]
  41b0c9:	xchg   BYTE PTR [ecx],bl
  41b0cb:	pop    esi
  41b0cc:	cmp    DWORD PTR [edx+0x4f5dbc89],0xffffff96
  41b0d3:	shl    DWORD PTR [edx],0x8
  41b0d6:	fisubr WORD PTR [esi-0x9]
  41b0d9:	jmp    0x41b14d
  41b0db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0dc:	sbb    al,0x42
  41b0de:	pop    esi
  41b0df:	dec    ebp
  41b0e0:	xchg   BYTE PTR [ebx+0x68],ah
  41b0e3:	jmp    0xf2093d4a
  41b0e8:	iret   
  41b0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0eb:	fiadd  DWORD PTR [edi+ecx*4-0x59]
  41b0ef:	sbb    al,0xed
  41b0f1:	fisubr DWORD PTR [ebp+eiz*2+0x53343538]
  41b0f8:	mov    bl,0x8b
  41b0fa:	lods   al,BYTE PTR ds:[esi]
  41b0fb:	jne    0x41b0e5
  41b0fd:	dec    eax
  41b0fe:	stos   DWORD PTR es:[edi],eax
  41b0ff:	gs popa 
  41b101:	daa    
  41b102:	inc    ebp
  41b103:	sub    al,0xb1
  41b105:	push   ss
  41b106:	lds    esi,FWORD PTR [ebp+0x50b55302]
  41b10c:	fcom   st(6)
  41b10e:	out    0x20,al
  41b110:	fst    DWORD PTR [esi+0xa2db4bf]
  41b116:	(bad)  
  41b117:	in     eax,dx
  41b118:	cmp    BYTE PTR [eiz*4-0x7f8ab91],ch
  41b11f:	jmp    0xa3a1:0xd3aa458
  41b126:	test   al,0x9
  41b128:	inc    ebx
  41b129:	xchg   edi,eax
  41b12a:	fild   DWORD PTR [edx]
  41b12c:	dec    ebp
  41b12d:	xchg   dh,dl
  41b12f:	push   0x87184813
  41b134:	idiv   DWORD PTR [ebx-0x29]
  41b137:	lock push 0x8c157b28
  41b13d:	out    0xbb,eax
  41b13f:	mov    esi,0x64bab68a
  41b144:	sbb    ebp,DWORD PTR [edx]
  41b146:	xor    al,0xcc
  41b148:	push   0x7e9085a0
  41b14d:	out    dx,al
  41b14e:	pop    edx
  41b14f:	xor    DWORD PTR [edi+ecx*2-0x1815a74c],0x6438482b
  41b15a:	imul   ebp,DWORD PTR [ecx+esi*1-0x38],0xb353413a
  41b162:	arpl   WORD PTR [esi+0x1d2cf365],bx
  41b168:	fs shl ebx,0xa4
  41b16c:	in     eax,0xd1
  41b16e:	sbb    al,0x7f
  41b170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b171:	outs   dx,DWORD PTR ds:[esi]
  41b172:	lea    esp,[edi+0x25]
  41b175:	std    
  41b176:	mov    al,ds:0x51ff7532
  41b17b:	imul   ebx,DWORD PTR [ecx-0x8],0x65
  41b17f:	(bad)  
  41b180:	arpl   WORD PTR [ecx-0x77],si
  41b183:	xor    BYTE PTR [esp+edi*2-0x33],0x7b
  41b188:	push   cs
  41b189:	imul   ebp,DWORD PTR [ebp-0x7591644b],0xba5a6ec3
  41b193:	jmp    0x9cb1:0xed3e9912
  41b19a:	fiadd  WORD PTR [ebp+0x4e]
  41b19d:	pop    ecx
  41b19e:	mov    dl,0x34
  41b1a0:	sub    eax,0x7f28f209
  41b1a5:	cmp    bl,BYTE PTR [edx+0x6dc1c827]
  41b1ab:	in     al,0xa7
  41b1ad:	jle    0x41b15f
  41b1af:	sbb    edx,DWORD PTR [esi+0x1c]
  41b1b2:	nop
  41b1b3:	or     al,0x63
  41b1b5:	test   DWORD PTR [eax],ecx
  41b1b7:	push   esp
  41b1b8:	sub    BYTE PTR [edi],ah
  41b1ba:	add    DWORD PTR [ecx-0xa3121bc],ebx
  41b1c0:	xor    eax,0xa9fb996d
  41b1c5:	xchg   ebp,eax
  41b1c6:	push   ecx
  41b1c7:	vmulps xmm2,xmm0,XMMWORD PTR [ebp-0x2a662c8d]
  41b1cf:	mov    ds:0xd17a73e4,eax
  41b1d4:	cmp    eax,0x8fe70d0c
  41b1d9:	inc    ebp
  41b1da:	xchg   edx,eax
  41b1db:	pop    eax
  41b1dc:	cmp    DWORD PTR [esi-0x75],ebp
  41b1df:	fistp  DWORD PTR [ebx-0x2e]
  41b1e2:	test   al,0xba
  41b1e4:	xlat   BYTE PTR ds:[ebx]
  41b1e5:	and    BYTE PTR [esi-0x2],ah
  41b1e8:	jmp    0xac58:0x58563fc4
  41b1ef:	sub    BYTE PTR [esi+0x47],ch
  41b1f2:	jnp    0x41b17a
  41b1f4:	call   0xed015bc5
  41b1f9:	sub    BYTE PTR [eax+0x6b00a90c],bl
  41b1ff:	addr16 rol esp,0x7f
  41b203:	shl    ch,cl
  41b205:	test   DWORD PTR [eax+0x76],esi
  41b208:	rcr    eax,1
  41b20a:	inc    ebx
  41b20b:	mov    dl,0xee
  41b20d:	mov    ds:0xc4acf085,eax
  41b212:	adc    eax,0x63de1c66
  41b217:	into   
  41b218:	std    
  41b219:	push   ebp
  41b21a:	cmp    esp,DWORD PTR ds:0xa31fc3a6
  41b220:	inc    ebp
  41b221:	stc    
  41b222:	dec    edx
  41b223:	(bad)  
  41b224:	in     eax,dx
  41b225:	xor    eax,0xbee97d26
  41b22a:	sbb    DWORD PTR [ebp-0x613bf4c5],ebp
  41b230:	sbb    eax,DWORD PTR [edi]
  41b232:	jmp    0x41b297
  41b234:	adc    al,0xf9
  41b236:	scas   al,BYTE PTR es:[edi]
  41b237:	dec    esi
  41b238:	adc    al,BYTE PTR [ebx+0xbffad8b]
  41b23e:	daa    
  41b23f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b240:	or     dl,BYTE PTR [ebx-0x79913e37]
  41b246:	inc    ecx
  41b247:	ins    BYTE PTR es:[edi],dx
  41b248:	sti    
  41b249:	int3   
  41b24a:	xchg   DWORD PTR ds:0x8788d5dc,ebp
  41b250:	sahf   
  41b251:	dec    ebp
  41b252:	test   al,0xa8
  41b254:	push   esi
  41b255:	test   DWORD PTR [edi-0x17],esi
  41b258:	fcomp  st(6)
  41b25a:	iret   
  41b25b:	test   WORD PTR [eax+0x15669901],dx
  41b262:	les    ebx,FWORD PTR [edi]
  41b264:	into   
  41b265:	ret    0xc12f
  41b268:	mov    DWORD PTR [esp+esi*4-0x32e97bba],0xfe6e07bb
  41b273:	shl    edx,1
  41b275:	mov    al,ds:0xb2ee7a97
  41b27a:	add    ebx,DWORD PTR [edi+0x668a2ecd]
  41b280:	out    0x5b,eax
  41b282:	ret    0xea32
  41b285:	dec    esp
  41b286:	mov    dh,0x1e
  41b288:	js     0x41b292
  41b28a:	dec    DWORD PTR [eax]
  41b28c:	push   0x4a
  41b28e:	jmp    0x500bb71e
  41b293:	mov    ch,0xdb
  41b295:	or     ebx,DWORD PTR [esi+0x50]
  41b298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b299:	xor    ecx,DWORD PTR [ebx+edx*4]
  41b29c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b29e:	add    eax,0x9a673b8
  41b2a3:	int3   
  41b2a4:	(bad)  
  41b2a5:	int3   
  41b2a6:	mov    ?,ebx
  41b2a8:	inc    ecx
  41b2a9:	sbb    BYTE PTR [edx],ch
  41b2ab:	(bad)
  41b2af:	out    0x99,eax
  41b2b1:	shl    BYTE PTR [esi-0x7e],cl
  41b2b4:	rol    ebp,0x2c
  41b2b7:	and    DWORD PTR [ebp+edi*1+0x13dd2d1d],esi
  41b2be:	sbb    BYTE PTR [edi+0x32],bl
  41b2c1:	pop    ecx
  41b2c2:	js     0x41b276
  41b2c4:	jnp    0x41b306
  41b2c6:	cmc    
  41b2c7:	lods   al,BYTE PTR ds:[esi]
  41b2c8:	fidivr WORD PTR [esi+0x79]
  41b2cb:	pop    es
  41b2cc:	push   ebx
  41b2cd:	pop    ebx
  41b2ce:	mov    bl,0xbd
  41b2d0:	and    esp,DWORD PTR [ecx+esi*8+0x43]
  41b2d4:	pusha  
  41b2d5:	stos   BYTE PTR es:[edi],al
  41b2d6:	push   ecx
  41b2d7:	xor    al,0x1d
  41b2d9:	cwde   
  41b2da:	in     al,0x90
  41b2dc:	aas    
  41b2dd:	sub    ecx,DWORD PTR [esi-0x67badcc7]
  41b2e3:	mov    ch,0xe8
  41b2e5:	mov    edi,0x3ebd2ac9
  41b2ea:	inc    ebp
  41b2eb:	stos   BYTE PTR es:[edi],al
  41b2ec:	cmp    eax,0x2137bf0
  41b2f1:	mov    al,0xef
  41b2f3:	(bad)  
  41b2f4:	adc    esp,edi
  41b2f6:	mov    cl,0x20
  41b2f8:	test   DWORD PTR cs:[ebp-0x4d],esi
  41b2fc:	xchg   edx,eax
  41b2fd:	or     dh,ah
  41b2ff:	jl     0x41b2eb
  41b301:	mov    ebx,0x183ebd16
  41b306:	lds    esp,FWORD PTR [ebp+0x71dbd7c7]
  41b30c:	cdq    
  41b30d:	mov    esp,0x393a2ed7
  41b312:	cdq    
  41b313:	in     al,dx
  41b314:	inc    esi
  41b315:	push   edx
  41b316:	cmp    ebp,DWORD PTR [esi]
  41b318:	push   0x4e21596c
  41b31d:	mov    DWORD PTR [esi+0x42c2a7a0],edi
  41b323:	dec    esi
  41b324:	and    eax,0xfce71cfe
  41b329:	aas    
  41b32a:	(bad)  
  41b32b:	mov    ebx,0xa0d059e7
  41b330:	inc    eax
  41b331:	jno    0x41b38b
  41b333:	mov    ds:0xa534790c,al
  41b338:	mov    edi,0xde03c916
  41b33d:	xchg   esi,eax
  41b33e:	add    BYTE PTR [edi+0x767606d0],dh
  41b344:	cmp    al,0x8c
  41b346:	xchg   esi,eax
  41b347:	out    dx,eax
  41b348:	push   esp
  41b349:	cmp    ebx,ecx
  41b34b:	jmp    0xe31:0x71130822
  41b352:	(bad)  
  41b353:	out    0xb8,al
  41b355:	xor    DWORD PTR [ebx],esp
  41b357:	mov    dl,0xda
  41b359:	stos   BYTE PTR es:[edi],al
  41b35a:	xchg   edx,eax
  41b35b:	inc    edi
  41b35c:	fcmovne st,st(3)
  41b35e:	(bad)  
  41b35f:	mov    bh,0x87
  41b361:	imul   eax,DWORD PTR [eax],0x58
  41b364:	sub    DWORD PTR [edi-0x71],edi
  41b367:	push   esp
  41b368:	mov    edx,0x53dd60e3
  41b36d:	mov    edx,0x1921cd67
  41b372:	xchg   ecx,eax
  41b373:	clc    
  41b374:	fcomp  QWORD PTR [ebp+0x1e]
  41b377:	dec    ebx
  41b378:	sub    ebx,edx
  41b37a:	and    eax,0x8c5ded19
  41b37f:	push   0xffffffee
  41b381:	push   edx
  41b382:	add    BYTE PTR [ebx-0x6816e6e8],al
  41b388:	push   esp
  41b389:	pop    esp
  41b38a:	jecxz  0x41b3d4
  41b38c:	enter  0xd2e8,0xd3
  41b390:	pop    edx
  41b391:	fcom   QWORD PTR gs:[edx+eax*1-0x5]
  41b396:	or     esi,DWORD PTR [edi]
  41b398:	push   0x73ad3029
  41b39d:	popa   
  41b39e:	push   edx
  41b39f:	aam    0x1c
  41b3a1:	pop    esp
  41b3a2:	hlt    
  41b3a3:	pop    ds
  41b3a4:	pop    eax
  41b3a5:	sub    edx,DWORD PTR [edx]
  41b3a7:	lahf   
  41b3a8:	arpl   WORD PTR [edi],dx
  41b3aa:	xor    eax,0xdf908334
  41b3af:	pop    es
  41b3b0:	jecxz  0x41b38e
  41b3b2:	xchg   DWORD PTR [esp+ecx*8+0x19c02584],ebp
  41b3b9:	(bad)  
  41b3ba:	adc    ebx,DWORD PTR [edx+eiz*1-0xa]
  41b3be:	int    0x32
  41b3c0:	fadd   QWORD PTR [edi]
  41b3c2:	and    eax,0x1f0939f8
  41b3c7:	ficomp DWORD PTR [edi]
  41b3c9:	(bad)  
  41b3ca:	neg    BYTE PTR [ebp+edi*4+0x3c]
  41b3ce:	jmp    0x491793d5
  41b3d3:	invd   
  41b3d5:	cli    
  41b3d6:	jnp    0x41b3f7
  41b3d8:	dec    ebp
  41b3d9:	ret    0x1db7
  41b3dc:	pusha  
  41b3dd:	jmp    0x6158:0x4c87203
  41b3e4:	jno    0x41b3ee
  41b3e6:	lock mov ebx,0xb750dfb6
  41b3ec:	repz (bad) [ecx+0x6f]
  41b3f0:	mov    ds:0x1008b987,eax
  41b3f5:	jb     0x41b3bd
  41b3f7:	xchg   ecx,eax
  41b3f8:	mov    cl,bh
  41b3fa:	mov    ebx,0xbb56e0cd
  41b3ff:	cmp    dl,BYTE PTR ds:0x95d66c82
  41b405:	call   0x960e:0x1ff75056
  41b40c:	xor    DWORD PTR [edx+0x50],0x9
  41b410:	inc    ebp
  41b411:	ins    DWORD PTR es:[edi],dx
  41b412:	sbb    dl,BYTE PTR [ebx+0x12]
  41b415:	add    bl,BYTE PTR [eax+0x4077c074]
  41b41b:	test   BYTE PTR [eax+eiz*2+0x190bb6e6],ch
  41b422:	and    ch,dh
  41b424:	jne    0x41b461
  41b426:	(bad)  
  41b427:	push   cs
  41b428:	mul    eax
  41b42a:	mov    ah,0x7a
  41b42c:	add    BYTE PTR [esi],al
  41b42e:	loope  0x41b41f
  41b430:	push   ebx
  41b431:	neg    DWORD PTR [ebp-0x378d8f88]
  41b437:	scas   eax,DWORD PTR es:[edi]
  41b438:	sti    
  41b439:	fmulp  st(5),st
  41b43b:	scas   al,BYTE PTR es:[edi]
  41b43c:	mov    edx,0xe231a6a6
  41b441:	test   eax,0xfcafe76c
  41b446:	repz in al,dx
  41b448:	push   ss
  41b449:	mov    edi,DWORD PTR [ecx]
  41b44b:	or     DWORD PTR es:[eax],edx
  41b44e:	icebp  
  41b44f:	jg     0x41b4bd
  41b451:	(bad)  
  41b452:	nop
  41b453:	mov    ebp,0x171d4263
  41b458:	pop    esi
  41b459:	retf   
  41b45a:	dec    ebp
  41b45b:	call   0x910727a8
  41b460:	and    eax,0x9c5c221b
  41b465:	call   0x5258:0xaaac9160
  41b46c:	aam    0xe0
  41b46e:	retf   0x63ac
  41b471:	addr16 pop edi
  41b473:	scas   eax,DWORD PTR es:[edi]
  41b474:	xor    BYTE PTR [eax-0x757c1c81],ah
  41b47a:	fwait
  41b47b:	xor    eax,0xa5d4103d
  41b480:	jmp    0x43788daa
  41b485:	sbb    al,0xd9
  41b487:	jnp    0x41b420
  41b489:	pop    esi
  41b48a:	shl    cl,1
  41b48c:	cmp    al,0x7
  41b48e:	leave  
  41b48f:	jmp    0x41b4be
  41b491:	hlt    
  41b492:	sahf   
  41b493:	and    edi,0xf9c55a84
  41b499:	jne    0x41b4b0
  41b49b:	cld    
  41b49c:	sti    
  41b49d:	jb     0x41b4f1
  41b49f:	jle    0x41b51a
  41b4a1:	(bad)  
  41b4a2:	rcl    BYTE PTR [esi+0x51],cl
  41b4a5:	and    DWORD PTR [eax],esp
  41b4a7:	sub    DWORD PTR [ecx-0x1e2a8016],ecx
  41b4ad:	dec    esp
  41b4ae:	sbb    ebx,DWORD PTR [ebp-0x2b]
  41b4b1:	jg     0x41b519
  41b4b3:	inc    eax
  41b4b4:	cmp    esp,DWORD PTR [edi+0x57]
  41b4b7:	or     al,0x63
  41b4b9:	or     ebx,DWORD PTR [ebp+0x61a2db4b]
  41b4bf:	scas   eax,DWORD PTR es:[edi]
  41b4c0:	adc    ecx,0xffffffdf
  41b4c3:	addr16 mov edx,0xeda7e19e
  41b4c9:	add    eax,0xdbceff61
  41b4ce:	adc    bl,dh
  41b4d0:	pop    eax
  41b4d1:	adc    BYTE PTR [eax-0x233fefa1],ah
  41b4d7:	call   0x5e456623
  41b4dc:	dec    edx
  41b4dd:	adc    DWORD PTR cs:[edx-0x2ae4fd64],edx
  41b4e4:	aas    
  41b4e5:	fst    DWORD PTR [ebx]
  41b4e7:	pop    ss
  41b4e8:	aam    0xa8
  41b4ea:	jb     0x41b482
  41b4ec:	and    DWORD PTR ds:0xa2f8dd73,esp
  41b4f2:	jge    0x41b48e
  41b4f4:	dec    cx
  41b4f6:	test   eax,0xb4fdb486
  41b4fb:	add    DWORD PTR [eax+ebx*4+0x60],esp
  41b4ff:	cdq    
  41b500:	in     al,0x20
  41b502:	or     al,0xfd
  41b504:	add    BYTE PTR [edx-0x2012d7da],ch
  41b50a:	bound  edi,QWORD PTR [ebx+ecx*2]
  41b50d:	ins    DWORD PTR es:[edi],dx
  41b50e:	test   al,0x7b
  41b510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b511:	dec    ebp
  41b512:	in     al,dx
  41b513:	fisubr WORD PTR [edi-0x1e553c4f]
  41b519:	jmp    0x8b0fe123
  41b51e:	xor    eax,0x82d7852b
  41b523:	sub    dh,BYTE PTR [ebx+ebp*4]
  41b526:	jne    0x41b511
  41b528:	mov    esi,0x932a2382
  41b52d:	in     al,0xb3
  41b52f:	sbb    BYTE PTR [esi-0x30],bl
  41b532:	repz sahf 
  41b534:	and    cl,ch
  41b536:	cmp    DWORD PTR [ebx-0x5a],0x271e1d27
  41b53d:	ror    ch,0x48
  41b540:	sub    BYTE PTR [edi],0x4f
  41b543:	lea    esp,[ecx-0x7a]
  41b546:	aaa    
  41b547:	gs mov ch,cl
  41b54a:	xor    dh,BYTE PTR [ebx-0x48]
  41b54d:	pop    ds
  41b54e:	scas   al,BYTE PTR es:[edi]
  41b54f:	jle    0x41b5a8
  41b551:	xor    ebx,esi
  41b553:	push   cs
  41b554:	inc    esp
  41b555:	gs sub eax,0x24e8db88
  41b55b:	popf   
  41b55c:	mul    edx
  41b55e:	inc    ebp
  41b55f:	cdq    
  41b560:	xlat   BYTE PTR ds:[ebx]
  41b561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b562:	lock mov edi,0x791527ab
  41b568:	repnz dec eax
  41b56a:	cli    
  41b56b:	xor    al,0x12
  41b56d:	and    al,0x4e
  41b56f:	jp     0x41b4f5
  41b571:	mov    edi,0x2aa6214f
  41b576:	int    0xd6
  41b578:	xchg   ebx,eax
  41b579:	scas   al,BYTE PTR es:[edi]
  41b57a:	inc    ebp
  41b57b:	mov    bh,BYTE PTR [ecx]
  41b57d:	ret    0xc165
  41b580:	rol    BYTE PTR [eax+esi*1+0x2b6a4a90],cl
  41b587:	imul   esi,ecx,0x6e
  41b58a:	lock shl BYTE PTR [ebx-0x4],1
  41b58e:	cli    
  41b58f:	mov    bl,0x43
  41b591:	fdivr  DWORD PTR [ebp+0x1d]
  41b594:	ret    0x9063
  41b597:	sub    eax,0x2f4363a9
  41b59c:	aaa    
  41b59d:	or     ch,BYTE PTR ds:0x1bd44e48
  41b5a3:	dec    esp
  41b5a4:	lea    ebx,[ebx]
  41b5a6:	test   DWORD PTR gs:[edx],0x3d5bb39f
  41b5ad:	iret   
  41b5ae:	in     al,0x84
  41b5b0:	scas   al,BYTE PTR es:[edi]
  41b5b1:	mov    ds:0xa50578c0,eax
  41b5b6:	fldenv [edi+ebx*2-0x75a0e43]
  41b5bd:	inc    edi
  41b5be:	or     BYTE PTR [ebx],dh
  41b5c0:	push   esp
  41b5c1:	push   ss
  41b5c2:	aas    
  41b5c3:	jb     0x41b5eb
  41b5c5:	jno    0x41b633
  41b5c7:	sub    BYTE PTR [ebp+esi*2-0x6abc84fe],0xdd
  41b5cf:	adc    BYTE PTR [esi+0x3ead5e72],ch
  41b5d5:	xor    BYTE PTR [esi],bh
  41b5d7:	push   ss
  41b5d8:	adc    DWORD PTR [eax+0x573806f6],0xbc41314b
  41b5e2:	adc    al,0x93
  41b5e4:	sbb    ecx,ebp
  41b5e6:	repnz add al,0xaa
  41b5e9:	mov    eax,0x47da89bd
  41b5ee:	or     esp,DWORD PTR [ecx]
  41b5f0:	jo     0x41b665
  41b5f2:	mov    cl,0x75
  41b5f4:	push   esp
  41b5f5:	retf   
  41b5f6:	pop    ss
  41b5f7:	dec    ax
  41b5f9:	adc    DWORD PTR [ecx-0x13],eax
  41b5fc:	dec    ebp
  41b5fd:	push   cs
  41b5fe:	inc    esp
  41b5ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b600:	pop    ebp
  41b601:	jae    0x41b676
  41b603:	mul    BYTE PTR [ebp+0x5b90a14c]
  41b609:	push   ss
  41b60a:	jp     0x41b61b
  41b60c:	mov    bl,0xeb
  41b60e:	clc    
  41b60f:	push   es
  41b610:	(bad)  
  41b612:	push   0xd3bee933
  41b617:	sti    
  41b618:	cwde   
  41b619:	or     al,0x71
  41b61b:	loopne 0x41b5ca
  41b61d:	dec    ebp
  41b61e:	xchg   ebp,eax
  41b61f:	jnp    0x41b5b5
  41b621:	adc    DWORD PTR [ebx],esp
  41b623:	arpl   WORD PTR [ecx],cx
  41b625:	push   ss
  41b626:	xchg   ecx,eax
  41b627:	jle    0x41b5ce
  41b629:	mov    eax,0x99c24c88
  41b62e:	sub    BYTE PTR [eax],bl
  41b630:	fdivr  DWORD PTR [esi]
  41b632:	adc    DWORD PTR [ebx*1+0x31bc75b0],eax
  41b639:	fidiv  WORD PTR [ebx+0x23d6ddf]
  41b63f:	inc    ecx
  41b640:	cmp    dl,BYTE PTR [ebx+0x24c172ae]
  41b646:	aam    0x0
  41b648:	ins    BYTE PTR es:[edi],dx
  41b649:	daa    
  41b64a:	ss jns 0x41b5d3
  41b64d:	int    0x4b
  41b64f:	repnz push esi
  41b651:	cwde   
  41b652:	xchg   edi,eax
  41b653:	mov    bl,0x5
  41b655:	dec    edx
  41b656:	cld    
  41b657:	sbb    al,BYTE PTR [edi]
  41b659:	xor    DWORD PTR [edi-0x58652b38],esi
  41b65f:	dec    esi
  41b660:	in     eax,dx
  41b661:	or     al,0x2b
  41b663:	imul   edx,DWORD PTR [edi-0x28],0xffffffb6
  41b667:	mov    BYTE PTR [ecx+0x7b],ah
  41b66a:	xor    ebp,ebp
  41b66c:	inc    edi
  41b66d:	mov    dh,0x38
  41b66f:	mov    ds:0xea26d28,eax
  41b674:	shl    DWORD PTR [ebx+0x0],cl
  41b677:	(bad)
  41b67b:	out    0x17,al
  41b67d:	mov    eax,ds:0xb34d1372
  41b682:	pop    ebp
  41b683:	mov    eax,ds:0x614363f0
  41b688:	xlat   BYTE PTR ds:[ebx]
  41b689:	adc    DWORD PTR [edx+0x3e7fdf3e],esi
  41b68f:	clc    
  41b690:	jge    0x41b628
  41b692:	rcr    eax,0xdd
  41b695:	jle    0x41b636
  41b697:	mov    ds:0xc9d26eee,eax
  41b69c:	aaa    
  41b69d:	pusha  
  41b69e:	stos   BYTE PTR es:[edi],al
  41b69f:	cmp    bh,0x1
  41b6a2:	ds (bad) 
  41b6a4:	retf   0x21aa
  41b6a7:	add    ch,ah
  41b6a9:	sbb    eax,0x2758bfa2
  41b6ae:	and    DWORD PTR [eiz*8-0x636b3342],ebp
  41b6b5:	daa    
  41b6b6:	xor    eax,0x5c7ca72b
  41b6bb:	adc    al,0xd6
  41b6bd:	jp     0x41b65f
  41b6bf:	ins    BYTE PTR es:[edi],dx
  41b6c0:	pusha  
  41b6c1:	or     al,0x39
  41b6c3:	in     eax,0xb1
  41b6c5:	xchg   DWORD PTR [ebx+0x19],edi
  41b6c8:	out    dx,eax
  41b6c9:	dec    edi
  41b6ca:	and    ebp,edi
  41b6cc:	sub    BYTE PTR [edx-0x7c],dl
  41b6cf:	aam    0xee
  41b6d1:	jae    0x41b675
  41b6d3:	loope  0x41b6f9
  41b6d5:	sbb    eax,0xc8bc1c1
  41b6da:	cmp    eax,DWORD PTR [ebp-0x4e819abf]
  41b6e0:	push   esp
  41b6e1:	mov    BYTE PTR [ebx],ch
  41b6e3:	cmc    
  41b6e4:	aad    0x87
  41b6e6:	sar    esi,cl
  41b6e8:	iret   
  41b6e9:	jle    0x41b702
  41b6eb:	stos   BYTE PTR es:[di],al
  41b6ed:	fist   WORD PTR [edi+0x7587b24c]
  41b6f3:	lds    ecx,FWORD PTR ds:[esi]
  41b6f6:	push   esi
  41b6f7:	sub    al,ch
  41b6f9:	daa    
  41b6fa:	arpl   WORD PTR [ecx-0x7],cx
  41b6fd:	dec    eax
  41b6fe:	adc    eax,DWORD PTR [ebp-0x1e]
  41b701:	add    al,0x65
  41b703:	int    0x51
  41b705:	popf   
  41b706:	test   eax,0xc2cf56fa
  41b70b:	mov    es,WORD PTR [edi-0x18]
  41b70e:	cmp    BYTE PTR ds:0xbb6e17c1,0x36
  41b715:	scas   eax,DWORD PTR es:[edi]
  41b716:	pushf  
  41b717:	(bad)
  41b71a:	jns    0x41b725
  41b71c:	fld    TBYTE PTR [edx]
  41b71e:	xchg   ebx,eax
  41b71f:	fmul   DWORD PTR [esi-0x2a]
  41b722:	loopne 0x41b770
  41b724:	popf   
  41b725:	cli    
  41b726:	sbb    edi,DWORD PTR [edi+0x745ec609]
  41b72c:	out    0x58,al
  41b72e:	imul   ecx,DWORD PTR [ebx+0x5e9f250a],0xb
  41b735:	mov    edi,0x68d37dcf
  41b73a:	adc    BYTE PTR [edx+0x587722f4],ah
  41b740:	ins    DWORD PTR es:[edi],dx
  41b741:	lds    ecx,FWORD PTR [edx]
  41b743:	ja     0x41b6d3
  41b745:	adc    bh,cl
  41b747:	mov    eax,0x5445ae18
  41b74c:	jmp    0x88a7:0x8d48b69c
  41b753:	xor    ebx,DWORD PTR [esi-0x5b9cc64f]
  41b759:	mov    ah,0xf3
  41b75b:	xchg   DWORD PTR [edx-0x76],ecx
  41b75e:	cmp    ebp,ebp
  41b760:	call   0x50e6:0x4ca8b4b5
  41b767:	adc    eax,0x37269132
  41b76c:	icebp  
  41b76d:	mov    ds:0xeb2e2bff,al
  41b772:	ds fsubr st(1),st
  41b775:	jnp    0x41b742
  41b777:	mov    esp,0x75459ad
  41b77c:	pop    ebp
  41b77d:	in     al,0xc3
  41b77f:	mov    ecx,ss
  41b781:	ja     0x41b747
  41b783:	push   ecx
  41b784:	jne    0x41b7b6
  41b786:	mov    bh,0xb9
  41b788:	mov    dh,0x3b
  41b78a:	dec    ecx
  41b78b:	retf   
  41b78c:	fcmovnb st,st(0)
  41b78e:	push   0x474788c0
  41b793:	xor    eax,0x4da5f4d9
  41b798:	jnp    0x41b765
  41b79a:	mov    BYTE PTR [edx],dl
  41b79c:	neg    DWORD PTR [ebp+0x306ef1bc]
  41b7a2:	mov    edx,0x42caf5c0
  41b7a7:	xor    BYTE PTR [edi+0xd],bl
  41b7aa:	fxch   st(1)
  41b7ac:	loop   0x41b7fb
  41b7ae:	or     BYTE PTR [ebx],ch
  41b7b0:	add    eax,0xe1434f20
  41b7b5:	mul    DWORD PTR [ebp+0x3]
  41b7b8:	js     0x41b7fb
  41b7ba:	and    al,0x62
  41b7bc:	xlat   BYTE PTR ds:[ebx]
  41b7bd:	dec    ebp
  41b7be:	int3   
  41b7bf:	outs   dx,DWORD PTR ds:[esi]
  41b7c0:	mov    es,WORD PTR [edx]
  41b7c2:	pusha  
  41b7c3:	add    al,0x78
  41b7c5:	inc    ebp
  41b7c6:	je     0x41b7d5
  41b7c8:	sar    ebx,cl
  41b7ca:	push   es
  41b7cb:	jb     0x41b7e7
  41b7cd:	lahf   
  41b7ce:	scas   al,BYTE PTR es:[edi]
  41b7cf:	stc    
  41b7d0:	dec    esp
  41b7d1:	xlat   BYTE PTR ds:[ebx]
  41b7d2:	mov    esp,0xf76cd0ee
  41b7d7:	push   edx
  41b7d8:	lea    ecx,[edi+eiz*4]
  41b7db:	push   0x615a3b37
  41b7e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7e1:	fiadd  DWORD PTR [eax+0x26]
  41b7e4:	pop    ss
  41b7e5:	fiadd  WORD PTR [eax+eiz*4-0x314a2b28]
  41b7ec:	(bad)  
  41b7ed:	pop    ss
  41b7ee:	xchg   esp,eax
  41b7ef:	dec    ebp
  41b7f0:	outs   dx,DWORD PTR ds:[esi]
  41b7f1:	mul    BYTE PTR [ecx-0x1e0cac00]
  41b7f7:	imul   edx,DWORD PTR [edi+0x2f],0xd8c97ffe
  41b7fe:	sti    
  41b7ff:	push   es
  41b800:	sbb    ecx,edi
  41b802:	mov    ds:0x98eef37f,al
  41b807:	xchg   esp,eax
  41b808:	dec    esi
  41b809:	jge    0x41b818
  41b80b:	(bad)  
  41b80c:	int3   
  41b80d:	cli    
  41b80e:	push   ds
  41b80f:	cmp    BYTE PTR [esi-0x193c3373],bh
  41b815:	mov    dl,0x5
  41b817:	xchg   esp,eax
  41b818:	sbb    eax,0x7a2ab400
  41b81d:	mov    edi,DWORD PTR [ebx+0x3e95a471]
  41b823:	rol    BYTE PTR [eax],1
  41b825:	push   cs
  41b826:	inc    ebx
  41b827:	rol    BYTE PTR [edi-0x27be1238],0x4e
  41b82e:	in     eax,0x92
  41b830:	push   ebp
  41b831:	mov    eax,0xe0508794
  41b836:	add    eax,0x4a99303b
  41b83b:	mov    cl,0x8f
  41b83d:	and    BYTE PTR [edx+0x2d6d1ca7],bh
  41b843:	data16 mov BYTE PTR [esi+0x3d2f092e],bh
  41b84a:	jmp    0xc58491ca
  41b84f:	and    al,0x11
  41b851:	(bad)  
  41b852:	idiv   DWORD PTR ds:0x8ba6205a
  41b858:	sub    BYTE PTR [ebp+0x5659fadb],al
  41b85e:	jnp    0x41b84b
  41b860:	push   edx
  41b861:	fld    QWORD PTR [esi]
  41b863:	out    0x98,eax
  41b865:	pop    ebx
  41b866:	pop    ebp
  41b867:	retf   
  41b868:	mov    eax,DWORD PTR [edi+0x60378fe7]
  41b86e:	xlat   BYTE PTR ds:[ebx]
  41b86f:	xchg   edx,eax
  41b870:	stc    
  41b871:	(bad)  
  41b872:	cdq    
  41b873:	fwait
  41b874:	mov    ds:0x912d7723,eax
  41b879:	mov    edi,0x450276c5
  41b87e:	dec    esp
  41b87f:	xchg   edi,eax
  41b880:	jmp    0xd268:0x7450daa7
  41b887:	or     bh,al
  41b889:	call   DWORD PTR [esi+0x2d]
  41b88c:	mov    ds:0x8d0d768c,eax
  41b891:	ret    0xe38f
  41b894:	pop    edi
  41b895:	or     BYTE PTR [edi+edi*8-0x66ed34a6],ah
  41b89c:	and    eax,0x83ee1f71
  41b8a1:	es add al,0xec
  41b8a4:	test   eax,0xaf6a7ff7
  41b8a9:	xor    eax,0xa62cf9b9
  41b8ae:	cld    
  41b8af:	fisttp WORD PTR [ecx]
  41b8b1:	nop
  41b8b2:	and    eax,0x9edb6b55
  41b8b7:	cwde   
  41b8b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8b9:	cmp    ebx,DWORD PTR [ecx]
  41b8bb:	lods   al,BYTE PTR ds:[esi]
  41b8bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8be:	icebp  
  41b8bf:	imul   ecx,eax,0x78
  41b8c2:	pusha  
  41b8c3:	inc    ebp
  41b8c4:	aas    
  41b8c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8c6:	sbb    BYTE PTR [eax+0x2d264c53],ch
  41b8cc:	adc    BYTE PTR [esp+esi*4-0x60],bh
  41b8d0:	call   0x24c7:0xeeeb954e
  41b8d7:	fnsave [ebp-0xb]
  41b8da:	pop    ecx
  41b8db:	mov    eax,0x3c0cdc7e
  41b8e0:	mov    ebp,0x87f31947
  41b8e5:	jmp    0xcab0:0x699311e7
  41b8ec:	fs push 0xffffffa6
  41b8ef:	loopne 0x41b8af
  41b8f1:	mov    ds:0x7699170f,eax
  41b8f6:	daa    
  41b8f7:	xchg   ecx,eax
  41b8f8:	jle    0x41b8fd
  41b8fa:	jnp    0x41b906
  41b8fc:	je     0x41b900
  41b8fe:	daa    
  41b8ff:	popf   
  41b900:	enter  0xaad4,0xfd
  41b904:	or     ebp,DWORD PTR ds:0x67d325bf
  41b90a:	cli    
  41b90b:	pop    edi
  41b90c:	jno    0x41b95f
  41b90e:	jge    0x41b907
  41b910:	or     al,0x85
  41b912:	mov    al,ds:0x46e271eb
  41b917:	daa    
  41b918:	add    DWORD PTR [esi],0xd8e5e37a
  41b91e:	cli    
  41b91f:	(bad)  
  41b920:	ins    BYTE PTR es:[edi],dx
  41b921:	dec    edi
  41b922:	sub    BYTE PTR [edx+ecx*4+0x8d5a6d1],bh
  41b929:	aad    0x90
  41b92b:	mov    esp,0xf1c46d69
  41b930:	neg    BYTE PTR [edi+ebx*1-0x7f]
  41b934:	xor    DWORD PTR [esp+edx*8-0x73],ebx
  41b938:	sbb    ecx,DWORD PTR [edx]
  41b93a:	or     BYTE PTR [ecx+edi*4+0x27],0xa3
  41b93f:	ror    edi,cl
  41b941:	outs   dx,DWORD PTR ds:[esi]
  41b942:	pop    edx
  41b943:	in     al,0xd
  41b945:	mov    BYTE PTR [edi],al
  41b947:	add    eax,0x633c013e
  41b94c:	or     al,0x83
  41b94e:	nop
  41b94f:	sub    ah,BYTE PTR [ebx+ebp*4]
  41b952:	cmp    BYTE PTR [ecx-0x35],al
  41b955:	or     DWORD PTR [edx-0x228a7262],ecx
  41b95b:	(bad)  
  41b95c:	push   es
  41b95d:	push   0xffffff82
  41b95f:	push   ss
  41b960:	outs   dx,DWORD PTR ds:[esi]
  41b961:	les    eax,FWORD PTR [esi*8-0x541ade5f]
  41b968:	sbb    DWORD PTR [ecx+0x42a37e42],ecx
  41b96e:	xchg   ebp,eax
  41b96f:	inc    eax
  41b970:	in     al,0x36
  41b972:	push   esi
  41b973:	push   ds
  41b974:	fisttp DWORD PTR [edi-0xeb70571]
  41b97a:	in     al,dx
  41b97b:	mov    ah,0x4d
  41b97d:	sub    dl,BYTE PTR [esi-0x54]
  41b980:	out    0x5a,eax
  41b982:	ins    BYTE PTR es:[edi],dx
  41b983:	out    0x17,eax
  41b985:	inc    eax
  41b986:	push   ebx
  41b987:	xor    esp,edx
  41b989:	pop    ds
  41b98a:	movntq (bad),mm4
  41b98b:	out    0xe2,eax
  41b98d:	xor    al,BYTE PTR [ebx+0x53]
  41b990:	push   esp
  41b991:	out    dx,eax
  41b992:	and    BYTE PTR [ebx+ecx*8],bh
  41b995:	mov    esi,0x55021653
  41b99a:	sahf   
  41b99b:	jb     0x41b922
  41b99d:	xlat   BYTE PTR ds:[ebx]
  41b99e:	clc    
  41b99f:	sub    cl,cl
  41b9a1:	ret    0x21c2
  41b9a4:	ret    
  41b9a5:	imul   esp,DWORD PTR [ebx+0x4c36d171],0xffffffc4
  41b9ac:	xor    ebp,DWORD PTR [edi-0x154653c2]
  41b9b2:	inc    ecx
  41b9b3:	in     al,0xef
  41b9b5:	aaa    
  41b9b6:	test   al,0xa0
  41b9b8:	and    edi,esi
  41b9ba:	pop    esp
  41b9bb:	pop    eax
  41b9bc:	fcom   DWORD PTR [esi-0x71]
  41b9bf:	mov    esp,ds
  41b9c1:	xor    ebp,eax
  41b9c3:	xchg   esp,eax
  41b9c4:	mov    edx,0xb6d8ee51
  41b9c9:	(bad)  
  41b9ca:	ja     0x41ba04
  41b9cc:	aaa    
  41b9cd:	js     0x41b95d
  41b9cf:	les    ecx,FWORD PTR [edx-0x77]
  41b9d2:	arpl   dx,si
  41b9d4:	pushf  
  41b9d5:	xchg   edi,eax
  41b9d6:	mov    al,0x90
  41b9d8:	lds    ebx,FWORD PTR [ecx+0x1]
  41b9db:	add    bh,BYTE PTR [ebx+edi*2]
  41b9de:	push   eax
  41b9df:	mov    ch,0x3e
  41b9e1:	fst    DWORD PTR [eax-0x5f03de9]
  41b9e7:	stc    
  41b9e8:	dec    ecx
  41b9e9:	les    ebp,FWORD PTR [edx]
  41b9eb:	sub    eax,DWORD PTR ds:0x348be138
  41b9f1:	loope  0x41ba02
  41b9f3:	jns    0x41b999
  41b9f5:	inc    ecx
  41b9f6:	jg     0x41b9bb
  41b9f8:	aas    
  41b9f9:	arpl   WORD PTR [esi+0x4595afb],di
  41b9ff:	cmp    ecx,DWORD PTR [eax-0x69853e3b]
  41ba05:	cs sub eax,0xef49cd9
  41ba0b:	imul   ebx,DWORD PTR [ecx+edi*8+0x219cea0],0xffffff8e
  41ba13:	test   bl,0x77
  41ba16:	xchg   edi,eax
  41ba17:	mov    eax,ds:0xea0bf57e
  41ba1c:	in     al,dx
  41ba1d:	sar    DWORD PTR [ebx],1
  41ba1f:	sbb    BYTE PTR [ecx+0x29c1b07b],ch
  41ba25:	jmp    WORD PTR [ebp+0x7bf24bd2]
  41ba2c:	(bad)  
  41ba2d:	xchg   ebx,eax
  41ba2e:	ror    DWORD PTR [edi-0x6],cl
  41ba31:	jno    0x41ba4e
  41ba33:	call   0xe28938b3
  41ba38:	loope  0x41ba16
  41ba3a:	and    ebp,DWORD PTR [esi+0x5a13b768]
  41ba40:	sbb    BYTE PTR [esi-0x7ba99fb6],cl
  41ba46:	pushf  
  41ba47:	xchg   BYTE PTR ds:0x4c2600c1,dl
  41ba4d:	mov    ds:0x62e1caaf,al
  41ba52:	or     eax,0x7bdff72a
  41ba57:	jb     0x41b9f0
  41ba59:	addr16 xor eax,0xb3e64891
  41ba5f:	addr16 inc esp
  41ba61:	pop    ss
  41ba62:	inc    esi
  41ba63:	rcl    cl,1
  41ba65:	adc    al,0xb2
  41ba67:	push   esi
  41ba68:	arpl   WORD PTR [ecx-0x7],bp
  41ba6b:	retf   
  41ba6c:	pop    ds
  41ba6d:	inc    ebx
  41ba6e:	cmc    
  41ba6f:	push   ebx
  41ba70:	push   ebp
  41ba71:	aad    0x73
  41ba73:	stc    
  41ba74:	dec    edx
  41ba75:	test   DWORD PTR [esi],esi
  41ba77:	aam    0x9
  41ba79:	inc    ebp
  41ba7a:	push   esp
  41ba7b:	aas    
  41ba7c:	(bad)  
  41ba7d:	adc    bl,bh
  41ba7f:	cmp    BYTE PTR [edx-0x238a788a],al
  41ba85:	bound  edi,QWORD PTR [edx-0x25]
  41ba88:	ins    BYTE PTR es:[edi],dx
  41ba89:	loope  0x41ba0d
  41ba8b:	mov    ebx,0x18ac9e7d
  41ba90:	iret   
  41ba91:	jle    0x41ba76
  41ba93:	and    DWORD PTR [esi],eax
  41ba95:	mov    edx,0x149f9c6f
  41ba9a:	ret    
  41ba9b:	fild   QWORD PTR [ebp+0x5c]
  41ba9e:	inc    edx
  41ba9f:	fsincos 
  41baa1:	sub    DWORD PTR [edx],ecx
  41baa3:	scas   eax,DWORD PTR es:[edi]
  41baa4:	mov    al,ds:0xd75adcfe
  41baa9:	jns    0x41ba65
  41baab:	enter  0x2994,0xb1
  41baaf:	setp   ch
  41bab2:	setb   bl
  41bab5:	cmp    al,0x2c
  41bab7:	jns    0x41bae7
  41bab9:	add    eax,DWORD PTR [ebp-0x50]
  41babc:	fwait
  41babd:	repz adc BYTE PTR [edx+ecx*4-0x5],cl
  41bac2:	sbb    BYTE PTR [edi],0xe5
  41bac5:	xor    DWORD PTR [ebp+ebx*1+0x66],0x588fa073
  41bacd:	pusha  
  41bace:	clc    
  41bacf:	mov    eax,0xeddc7505
  41bad4:	gs add dl,dl
  41bad7:	sub    eax,0xab228771
  41badc:	cmp    eax,0x23adef8e
  41bae1:	cmp    dl,BYTE PTR [edi-0x20651fe1]
  41bae7:	int3   
  41bae8:	jbe    0x41bb40
  41baea:	test   eax,0xbf876847
  41baef:	repnz test dh,cl
  41baf2:	xchg   edx,eax
  41baf3:	mov    ds:0xd79fc36e,al
  41baf8:	xor    DWORD PTR [ebp+0x30e85766],ebx
  41bafe:	outs   dx,DWORD PTR ds:[esi]
  41baff:	rcl    al,cl
  41bb01:	adc    DWORD PTR ds:[eax-0xc],edi
  41bb05:	out    dx,eax
  41bb06:	pushf  
  41bb07:	jnp    0x41bb77
  41bb09:	xchg   ecx,eax
  41bb0a:	rcr    DWORD PTR [eax],1
  41bb0c:	aas    
  41bb0d:	pop    ebp
  41bb0e:	mov    bl,0xc8
  41bb10:	aam    0xf8
  41bb12:	out    dx,eax
  41bb13:	pop    eax
  41bb14:	into   
  41bb15:	cmp    eax,0xcf2e0367
  41bb1a:	call   0x75e1:0x3d6515e6
  41bb21:	mov    ds:0xe96445c0,al
  41bb27:	xor    dh,BYTE PTR [esi-0x16773662]
  41bb2d:	aas    
  41bb2e:	push   eax
  41bb2f:	pop    es
  41bb30:	dec    esp
  41bb31:	aam    0xf1
  41bb33:	or     al,0xda
  41bb35:	in     eax,dx
  41bb36:	out    0x9e,eax
  41bb38:	sbb    esp,edi
  41bb3a:	es jne 0x41bb33
  41bb3d:	cwde   
  41bb3e:	pop    edx
  41bb3f:	adc    cl,BYTE PTR [edx+0x3f]
  41bb42:	dec    ecx
  41bb43:	xchg   ebx,eax
  41bb44:	hlt    
  41bb45:	imul   edx,DWORD PTR [ecx-0x57],0xffffffb1
  41bb49:	lds    esi,FWORD PTR [edx+edi*2-0x4c44cef5]
  41bb50:	add    bl,BYTE PTR [ebx+0x47]
  41bb53:	mov    ds:0x3931c53c,eax
  41bb58:	in     al,dx
  41bb59:	fcmovnb st,st(7)
  41bb5b:	daa    
  41bb5c:	cmp    DWORD PTR [ebx-0xa82010c],ebx
  41bb62:	push   esp
  41bb63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb64:	inc    eax
  41bb65:	test   BYTE PTR [eax],dh
  41bb67:	gs xchg ebp,eax
  41bb69:	mul    BYTE PTR [edx]
  41bb6b:	jo     0x41bbb6
  41bb6d:	fucom  st(6)
  41bb6f:	mov    esp,0xa0db38a3
  41bb74:	mov    bl,0xd2
  41bb76:	jmp    0x4104:0x66c627be
  41bb7d:	sar    ecx,0x86
  41bb80:	pop    es
  41bb81:	dec    ebx
  41bb82:	leave  
  41bb83:	les    esi,FWORD PTR [ecx+esi*4+0x2f23543c]
  41bb8a:	fwait
  41bb8b:	int    0x58
  41bb8d:	leave  
  41bb8e:	aaa    
  41bb8f:	sub    al,0x12
  41bb91:	adc    BYTE PTR [esi+0x5],cl
  41bb94:	dec    edi
  41bb95:	pop    ebx
  41bb96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb97:	pop    eax
  41bb98:	rol    BYTE PTR [ebx-0x70],0xdf
  41bb9c:	push   0x78cd52b5
  41bba1:	nop
  41bba2:	mov    ecx,0x32529548
  41bba7:	jle    0x41bb8a
  41bba9:	inc    ebp
  41bbaa:	mov    esi,?
  41bbac:	fdiv   st(5),st
  41bbae:	addr16 add al,0xf5
  41bbb1:	xor    BYTE PTR [edx-0x13],0xc4
  41bbb5:	cmp    DWORD PTR ds:0x464e07ad,eax
  41bbbb:	push   0x8b2ef06b
  41bbc0:	mov    esp,0x5dcda17
  41bbc5:	xchg   esi,eax
  41bbc6:	jae    0x41bbd7
  41bbc8:	stos   DWORD PTR es:[edi],eax
  41bbc9:	sub    al,0x55
  41bbcb:	test   ecx,edi
  41bbcd:	repnz adc esi,DWORD PTR [ecx]
  41bbd0:	ret    0xcb64
  41bbd3:	push   esp
  41bbd4:	mov    cl,0x99
  41bbd6:	cmp    eax,0xb35737ae
  41bbdb:	(bad)  
  41bbdc:	popa   
  41bbdd:	push   ds
  41bbde:	jbe    0x41bc5b
  41bbe0:	int    0xb8
  41bbe2:	cmp    esi,DWORD PTR [edx+0x7cf84d56]
  41bbe8:	push   0xffffffaa
  41bbea:	inc    edx
  41bbeb:	call   0x61190c21
  41bbf0:	mov    al,0x30
  41bbf2:	dec    esp
  41bbf3:	sub    DWORD PTR [eax-0x73],0xffffffc9
  41bbf7:	test   DWORD PTR [edi-0x57d95c2b],0x4bc72315
  41bc01:	push   edi
  41bc02:	lahf   
  41bc03:	hlt    
  41bc04:	jge    0x41bbc1
  41bc06:	jmp    0xb357:0x2e206c6
  41bc0d:	pop    es
  41bc0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc0f:	out    0xeb,al
  41bc11:	bound  esi,QWORD PTR [ebx-0x23]
  41bc14:	retf   0xab67
  41bc17:	mov    edx,0xf220e9be
  41bc1c:	jle    0x41bc8c
  41bc1e:	cs mov ebx,0x188b7b29
  41bc24:	add    bh,BYTE PTR [edx-0x735342d0]
  41bc2a:	ret    
  41bc2b:	test   ax,0xca00
  41bc2f:	test   DWORD PTR ds:0x5f997c1,edi
  41bc35:	ficomp DWORD PTR [eax]
  41bc37:	add    eax,0xb3fb3009
  41bc3c:	mov    bl,0xa2
  41bc3e:	aam    0xa6
  41bc40:	xor    BYTE PTR [esi-0x42],ch
  41bc43:	mov    ds,WORD PTR [ebx+0x71d6b91f]
  41bc49:	mov    edx,0xfb3f15a5
  41bc4e:	int3   
  41bc4f:	xor    al,0x25
  41bc51:	stos   DWORD PTR es:[edi],eax
  41bc52:	or     ebx,esi
  41bc54:	fist   WORD PTR [eax]
  41bc56:	test   al,0xb7
  41bc58:	rol    BYTE PTR [ebp-0x37],1
  41bc5b:	outs   dx,BYTE PTR ds:[esi]
  41bc5c:	pop    ebx
  41bc5d:	inc    ebx
  41bc5e:	and    ch,bl
  41bc60:	and    al,0x4b
  41bc62:	jmp    0x6f52c907
  41bc67:	popa   
  41bc68:	fdivr  st,st(6)
  41bc6a:	icebp  
  41bc6b:	dec    BYTE PTR [ebx-0x328e7458]
  41bc71:	and    eax,0x48018953
  41bc76:	inc    esp
  41bc77:	mov    dl,0xb4
  41bc79:	push   ecx
  41bc7a:	push   es
  41bc7b:	je     0x41bcab
  41bc7d:	sbb    DWORD PTR [edi+esi*8+0xf],edi
  41bc81:	pop    ebx
  41bc82:	adc    ch,bh
  41bc84:	mov    al,0xa1
  41bc86:	mov    ecx,eax
  41bc88:	or     al,0xcd
  41bc8a:	mov    DWORD PTR [ebx-0x7e],ecx
  41bc8d:	mov    ah,0x23
  41bc8f:	push   edi
  41bc90:	es pop edx
  41bc92:	mov    fs,WORD PTR [ecx-0x7311b70e]
  41bc98:	into   
  41bc99:	push   ebp
  41bc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc9b:	or     al,BYTE PTR [edi-0x11]
  41bc9e:	shl    ebx,0x62
  41bca1:	jmp    0x49e0:0xbaf34f49
  41bca8:	mov    ebx,0x581f4f5b
  41bcad:	aad    0xc
  41bcaf:	cmp    edx,DWORD PTR [edi]
  41bcb1:	leave  
  41bcb2:	xchg   edi,eax
  41bcb3:	call   0xbe554e65
  41bcb8:	mov    BYTE PTR [eax-0x7b],dh
  41bcbb:	mov    ecx,0xa6462640
  41bcc0:	or     eax,0xf7dd198d
  41bcc5:	jmp    0x7f3e:0x8e1ca5c9
  41bccc:	push   esp
  41bccd:	pusha  
  41bcce:	xchg   ebx,eax
  41bccf:	fs add eax,0x731d2f0b
  41bcd5:	aad    0x5
  41bcd7:	pop    esi
  41bcd8:	and    DWORD PTR [edi],ebp
  41bcda:	test   BYTE PTR [ecx-0x5],dh
  41bcdd:	mov    bh,0xc0
  41bcdf:	jno    0x41bc75
  41bce1:	push   ecx
  41bce2:	pop    ds
  41bce3:	call   FWORD PTR [eax]
  41bce5:	mov    ax,0x730d
  41bce9:	das    
  41bcea:	leave  
  41bceb:	hlt    
  41bcec:	pushf  
  41bced:	add    BYTE PTR [eax-0x48],bl
  41bcf0:	mov    eax,0x633363e0
  41bcf5:	or     esp,esi
  41bcf7:	test   al,0x38
  41bcf9:	leave  
  41bcfa:	mov    dl,0x2e
  41bcfc:	sub    al,0x8e
  41bcfe:	shl    DWORD PTR [eax+0xf],cl
  41bd01:	and    DWORD PTR [edx+edi*1],0xffffffd9
  41bd05:	shl    BYTE PTR [ecx+0x52],1
  41bd08:	pop    ebx
  41bd09:	lock mov ecx,0x681f6520
  41bd0f:	popf   
  41bd10:	rol    DWORD PTR [edi],0xac
  41bd13:	dec    esp
  41bd14:	sbb    dh,dl
  41bd16:	fcmovu st,st(2)
  41bd18:	dec    edi
  41bd19:	aad    0xf8
  41bd1b:	in     eax,dx
  41bd1c:	test   eax,0x6810122
  41bd21:	add    edi,DWORD PTR [edi]
  41bd23:	cmp    BYTE PTR [esi-0xb],bl
  41bd26:	lock sbb eax,0x3123dc24
  41bd2c:	arpl   dx,si
  41bd2e:	sti    
  41bd2f:	mov    ?,WORD PTR [edx-0x64c51cb8]
  41bd35:	leave  
  41bd36:	or     DWORD PTR [edi+ebx*4],ecx
  41bd39:	mov    ds:0xad039276,eax
  41bd3e:	cmp    BYTE PTR [eax+0x51],cl
  41bd41:	cmc    
  41bd42:	pushf  
  41bd43:	aas    
  41bd44:	(bad)  
  41bd46:	cmp    al,BYTE PTR [esi+0x52]
  41bd49:	push   esp
  41bd4a:	sbb    eax,0xd5354736
  41bd4f:	mov    DWORD PTR [ecx-0x6d],edi
  41bd52:	mov    al,ds:0x7aefa3bf
  41bd57:	push   es
  41bd58:	push   cs
  41bd59:	ror    DWORD PTR [ecx],cl
  41bd5b:	clc    
  41bd5c:	mov    esp,0x3880a4b4
  41bd61:	add    al,0xc6
  41bd63:	push   ebp
  41bd64:	test   eax,0x97086f3c
  41bd69:	adc    BYTE PTR [ecx+0x18],al
  41bd6c:	adc    al,cl
  41bd6e:	sbb    BYTE PTR [edi],dl
  41bd70:	pop    ss
  41bd71:	jl     0x41bd0e
  41bd73:	in     al,dx
  41bd74:	in     eax,dx
  41bd75:	scas   eax,DWORD PTR es:[edi]
  41bd76:	xchg   edx,eax
  41bd77:	mov    BYTE PTR [ebx+0x42],bl
  41bd7a:	xchg   edx,eax
  41bd7c:	(bad)  
  41bd7d:	push   0xfc34fd65
  41bd82:	je     0x41bd11
  41bd84:	inc    edi
  41bd85:	cmp    al,ch
  41bd87:	cdq    
  41bd88:	xor    bh,BYTE PTR [edi-0x10]
  41bd8b:	and    ah,bh
  41bd8d:	inc    edx
  41bd8e:	shr    DWORD PTR [esi],1
  41bd90:	cmp    al,dl
  41bd92:	popf   
  41bd93:	add    al,0x24
  41bd95:	rol    DWORD PTR [eax+edx*4],1
  41bd98:	std    
  41bd99:	pop    ecx
  41bd9a:	mov    WORD PTR [esi+0x3b1d0839],gs
  41bda0:	rol    BYTE PTR [eax-0x35],1
  41bda3:	sub    al,0x6e
  41bda5:	mov    eax,0xaac00811
  41bdaa:	daa    
  41bdab:	mov    ecx,0x88c1d517
  41bdb0:	xchg   edi,eax
  41bdb1:	pop    eax
  41bdb2:	pop    es
  41bdb3:	(bad)  
  41bdb4:	stos   BYTE PTR es:[di],al
  41bdb6:	pop    ss
  41bdb7:	mov    bh,BYTE PTR [ecx+0x5c]
  41bdba:	ins    BYTE PTR es:[edi],dx
  41bdbb:	sbb    eax,0x35f1be7d
  41bdc0:	(bad)  
  41bdc1:	mov    ecx,0x6e717870
  41bdc6:	xchg   esp,eax
  41bdc7:	outs   dx,BYTE PTR ds:[esi]
  41bdc8:	mov    bh,0x59
  41bdca:	jg     0x41bd6f
  41bdcc:	adc    al,0xa6
  41bdce:	js     0x41bd54
  41bdd0:	pop    es
  41bdd1:	mov    ebp,0xeaf982cc
  41bdd6:	cli    
  41bdd7:	inc    eax
  41bdd8:	xor    DWORD PTR [ebx],ebp
  41bdda:	and    DWORD PTR [ecx+edi*1-0x65],ebx
  41bdde:	xchg   edi,eax
  41bddf:	cmp    ah,BYTE PTR [esi]
  41bde1:	cdq    
  41bde2:	cli    
  41bde3:	test   esp,esi
  41bde5:	call   edi
  41bde7:	dec    ecx
  41bde8:	mov    ds:0xca52e4ff,al
  41bded:	neg    DWORD PTR [esi-0xfc5e682]
  41bdf3:	xor    dh,BYTE PTR [esp+esi*8-0x77887228]
  41bdfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdfb:	xor    dl,BYTE PTR [edx]
  41bdfd:	add    al,0x5e
  41bdff:	pop    edx
  41be00:	add    bl,BYTE PTR [eax]
  41be02:	add    bl,dl
  41be04:	inc    ebx
  41be05:	shl    DWORD PTR [ecx-0x343b3de7],0x58
  41be0c:	sahf   
  41be0d:	aas    
  41be0e:	clc    
  41be0f:	(bad)  
  41be11:	fsub   QWORD PTR [ebx]
  41be13:	pop    ecx
  41be14:	stc    
  41be15:	fnstcw WORD PTR [eax-0xf7d82b1]
  41be1b:	popa   
  41be1c:	mov    edx,0x616d584c
  41be21:	(bad)  
  41be22:	jmp    0xbf3e:0x50eeb705
  41be29:	sub    eax,0x1f570563
  41be2e:	inc    esp
  41be2f:	and    al,0x2e
  41be31:	retf   
  41be32:	sub    BYTE PTR [ebp-0x39],0x73
  41be36:	mov    al,ds:0x2a751abf
  41be3b:	dec    DWORD PTR [esi]
  41be3d:	sbb    al,0xc0
  41be3f:	xor    bl,dl
  41be41:	mov    dh,al
  41be43:	xchg   ebx,eax
  41be44:	imul   bh
  41be46:	add    al,0x59
  41be48:	mov    ds:0xff4c5716,eax
  41be4d:	data16 int 0x72
  41be50:	lods   al,BYTE PTR ds:[esi]
  41be51:	shl    DWORD PTR [ebx+0x58b38bad],cl
  41be57:	hlt    
  41be58:	das    
  41be59:	jmp    0xf4ab:0x34d8eefa
  41be60:	mov    eax,ds:0xb4dd6e2d
  41be65:	ins    DWORD PTR es:[edi],dx
  41be66:	mov    dl,0x38
  41be68:	dec    ebx
  41be69:	mov    eax,ds:0xd6c7c0bb
  41be6e:	aaa    
  41be6f:	xchg   edx,eax
  41be70:	dec    esp
  41be71:	lods   al,BYTE PTR ds:[esi]
  41be72:	dec    ebx
  41be73:	xchg   esp,eax
  41be74:	or     dh,BYTE PTR [edx-0x7d]
  41be77:	sub    BYTE PTR [esi-0x2ace14a7],bl
  41be7d:	push   ds
  41be7e:	(bad)
  41be81:	cmp    ch,BYTE PTR [ecx+eax*4]
  41be84:	lods   eax,DWORD PTR ds:[esi]
  41be85:	xchg   BYTE PTR [ecx+0x756b6683],al
  41be8b:	mov    cl,BYTE PTR ds:0x9beddfb
  41be91:	xchg   ebx,eax
  41be92:	cwde   
  41be93:	loope  0x41be7a
  41be95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be96:	(bad)  
  41be98:	ret    0x987b
  41be9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be9c:	xor    BYTE PTR [edi+0x8c205e1],ch
  41bea2:	push   ecx
  41bea3:	jmp    0xf5616a70
  41bea8:	aam    0x81
  41beaa:	ins    DWORD PTR es:[edi],dx
  41beab:	pop    ebp
  41beac:	push   ss
  41bead:	cmp    DWORD PTR [eax-0x34],edx
  41beb0:	in     al,0x45
  41beb2:	std    
  41beb3:	sbb    eax,0xd4061956
  41beb8:	icebp  
  41beb9:	adc    edx,DWORD PTR [ebp-0x1f3b8989]
  41bebf:	cwde   
  41bec0:	loope  0x41be5d
  41bec2:	jne    0x41be4f
  41bec4:	pushf  
  41bec5:	sti    
  41bec6:	adc    BYTE PTR [ecx-0x2c],dh
  41bec9:	cmp    BYTE PTR [ecx+0x42100278],bh
  41becf:	sbb    BYTE PTR [eax+0x30c0860],dh
  41bed5:	ret    0xd870
  41bed8:	or     ah,bh
  41beda:	xchg   ecx,eax
  41bedb:	addr16 push edx
  41bedd:	lds    edi,FWORD PTR [eax]
  41bedf:	push   cs
  41bee0:	sbb    eax,0xa43b1248
  41bee5:	inc    esi
  41bee6:	call   0xa66f15ec
  41beeb:	scas   al,BYTE PTR es:[edi]
  41beec:	sub    eax,0xf728afa
  41bef1:	icebp  
  41bef2:	sar    esp,cl
  41bef4:	mov    eax,ds:0xe2aa3b8b
  41bef9:	gs pop es
  41befb:	mov    ebx,DWORD PTR [ebp-0x5d]
  41befe:	in     eax,dx
  41beff:	inc    esi
  41bf00:	dec    ebp
  41bf01:	inc    edi
  41bf02:	sub    ebx,DWORD PTR [edi+0x5e0e6117]
  41bf08:	in     eax,0xe7
  41bf0a:	pop    ebp
  41bf0b:	cli    
  41bf0c:	pop    ss
  41bf0d:	pop    ecx
  41bf0e:	fwait
  41bf0f:	inc    esp
  41bf10:	jnp    0x41bed1
  41bf12:	sub    ebp,DWORD PTR ds:0x2e49a848
  41bf18:	mov    al,bh
  41bf1a:	fcom   QWORD PTR [ebp-0x518d7f9f]
  41bf20:	push   ds
  41bf21:	cmc    
  41bf22:	dec    edi
  41bf23:	test   BYTE PTR [edi],0x3f
  41bf26:	enter  0xf8b8,0xd1
  41bf2a:	mov    bh,0x32
  41bf2c:	pop    ebp
  41bf2d:	sub    ah,BYTE PTR [edi]
  41bf2f:	add    DWORD PTR [esi],0x35
  41bf32:	test   BYTE PTR [eax+0x52c3995],dh
  41bf38:	out    dx,eax
  41bf39:	shr    BYTE PTR ds:0xbcb7d3c9,0x44
  41bf40:	iret   
  41bf41:	test   al,0x7a
  41bf43:	mov    ah,0xe
  41bf45:	inc    ebp
  41bf46:	(bad)  
  41bf48:	inc    ebx
  41bf49:	or     al,0xaf
  41bf4b:	dec    ecx
  41bf4c:	repz cmc 
  41bf4e:	xor    esi,edx
  41bf50:	inc    esp
  41bf51:	nop
  41bf52:	sbb    bl,al
  41bf54:	stos   BYTE PTR es:[edi],al
  41bf55:	stos   BYTE PTR es:[edi],al
  41bf56:	ror    BYTE PTR ds:0xdbdda13a,0x5f
  41bf5d:	adc    al,0x56
  41bf5f:	adc    al,0x1c
  41bf61:	mov    edi,0xaf2cab00
  41bf66:	in     eax,0x50
  41bf68:	je     0x41bfc3
  41bf6a:	push   cs
  41bf6b:	enter  0x5dc,0x76
  41bf6f:	mov    dl,0x6c
  41bf71:	cs xchg ebx,eax
  41bf73:	mov    al,ds:0x90c6bbe0
  41bf78:	addr16 je 0x41bf5b
  41bf7b:	push   ecx
  41bf7c:	jmp    0x60433192
  41bf81:	push   ecx
  41bf82:	xchg   edx,eax
  41bf83:	push   edi
  41bf84:	out    dx,al
  41bf85:	mov    bl,0x85
  41bf87:	sahf   
  41bf88:	sub    al,0x99
  41bf8a:	jae    0x41bf86
  41bf8c:	cdq    
  41bf8d:	dec    esp
  41bf8e:	repz sahf 
  41bf90:	enter  0x3c59,0xbe
  41bf94:	inc    ebx
  41bf95:	jl     0x41bf90
  41bf97:	jbe    0x41bfae
  41bf99:	inc    ebx
  41bf9a:	js     0x41bff9
  41bf9c:	push   0x5df0b287
  41bfa1:	mov    ds:0x1182b556,eax
  41bfa6:	mov    ecx,0x80fe7172
  41bfab:	pop    ecx
  41bfac:	nop
  41bfad:	and    edx,ecx
  41bfaf:	sbb    edi,DWORD PTR [ebx+0xf]
  41bfb2:	leave  
  41bfb3:	outs   dx,BYTE PTR ss:[esi]
  41bfb5:	dec    esi
  41bfb6:	inc    ecx
  41bfb7:	inc    ebp
  41bfb8:	loope  0x41bfe6
  41bfba:	(bad)  
  41bfbc:	sub    al,BYTE PTR [eax]
  41bfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfbf:	cmp    eax,0x5bda61a3
  41bfc4:	push   esi
  41bfc5:	inc    edi
  41bfc6:	fild   DWORD PTR [esi+0x2]
  41bfc9:	sbb    eax,0x28cc4cee
  41bfce:	cdq    
  41bfcf:	fsubr  QWORD PTR [esi]
  41bfd1:	adc    eax,0x100a0e10
  41bfd6:	jmp    0x290b:0x73d37a6
  41bfdd:	sub    al,0x8a
  41bfdf:	hlt    
  41bfe0:	push   0x7c71b089
  41bfe5:	retf   0x1adc
  41bfe8:	cs mov edi,ebx
  41bfeb:	xor    BYTE PTR [edi-0x1e],dh
  41bfee:	ja     0x41c039
  41bff0:	inc    edx
  41bff1:	es mov ds,ebx
  41bff4:	shl    DWORD PTR [edi],cl
  41bff6:	dec    ebp
  41bff7:	jmp    0x5c8c:0x49cdee69
  41bffe:	arpl   WORD PTR [edi],bx
  41c000:	pusha  
  41c001:	fidivr DWORD PTR ds:0xa2803886
  41c007:	jmp    0x41bfd6
  41c009:	jns    0x41bfec
  41c00b:	mov    gs,WORD PTR [ebp+ebx*2-0x2b]
  41c00f:	fwait
  41c010:	ds je  0x41c02d
  41c013:	pop    es
  41c014:	and    eax,0xe5407dea
  41c019:	pop    esp
  41c01a:	push   eax
  41c01b:	data16 fcomi st,st(5)
  41c01e:	xor    BYTE PTR [ecx],cl
  41c020:	stos   BYTE PTR es:[edi],al
  41c021:	inc    edx
  41c022:	mov    ch,0x5b
  41c024:	pop    ds
  41c025:	bound  ebx,QWORD PTR [ecx]
  41c027:	and    eax,DWORD PTR [ecx+esi*2]
  41c02a:	and    ah,BYTE PTR [ebp-0x62]
  41c02d:	lds    ebp,FWORD PTR [eax]
  41c02f:	jmp    0x41c045
  41c031:	bound  ebp,QWORD PTR [ecx]
  41c033:	cdq    
  41c034:	pop    esi
  41c035:	nop
  41c036:	fstp   QWORD PTR [ecx+0x58]
  41c039:	sahf   
  41c03a:	bound  esi,QWORD PTR [esi+0x4f14ee05]
  41c040:	sar    BYTE PTR [eax],cl
  41c042:	shr    BYTE PTR [eax],cl
  41c044:	in     eax,0xef
  41c046:	aad    0x4b
  41c048:	jge    0x41c0ae
  41c04a:	jg     0x41c0bf
  41c04c:	and    DWORD PTR cs:[ebp-0x7bd6aa7c],edx
  41c053:	sbb    ch,ah
  41c055:	retf   0x89c5
  41c058:	ins    DWORD PTR es:[edi],dx
  41c059:	sbb    al,0xaf
  41c05b:	je     0x41bff0
  41c05d:	into   
  41c05e:	or     al,0x7e
  41c060:	mov    ebp,DWORD PTR [ebx+edi*2+0x5437cfda]
  41c067:	not    BYTE PTR [esi+ecx*2+0x35]
  41c06b:	jle    0x41c00a
  41c06d:	jl     0x41c089
  41c06f:	fidivr DWORD PTR [esi+0x7d]
  41c072:	mov    bl,0xeb
  41c074:	loope  0x41c0c3
  41c076:	(bad)  [eax+0x23]
  41c079:	inc    esp
  41c07a:	pop    eax
  41c07b:	icebp  
  41c07c:	cmp    DWORD PTR [ebp-0x36],ecx
  41c07f:	sub    BYTE PTR [esi-0x70],0xa0
  41c083:	lods   al,BYTE PTR ds:[esi]
  41c084:	push   0x7
  41c086:	inc    edi
  41c087:	sub    al,0x4f
  41c089:	test   al,0x40
  41c08b:	add    dl,BYTE PTR [ebp-0x4a8ba301]
  41c091:	pop    edx
  41c092:	push   0x960b8530
  41c097:	repnz adc BYTE PTR [eax-0xb],dl
  41c09b:	outs   dx,DWORD PTR ds:[esi]
  41c09c:	push   es
  41c09d:	outs   dx,BYTE PTR ds:[esi]
  41c09e:	aad    0x83
  41c0a0:	fild   WORD PTR [eax+0x7a642324]
  41c0a6:	or     cl,BYTE PTR [eiz*4+0x3e9580f3]
  41c0ad:	out    0xff,al
  41c0af:	mov    al,0x2c
  41c0b1:	add    al,0x49
  41c0b3:	add    eax,0x77c2f3e0
  41c0b8:	cdq    
  41c0b9:	test   al,0xb5
  41c0bb:	imul   edi,DWORD PTR [edx],0x6e
  41c0be:	enter  0x453d,0x44
  41c0c2:	adc    DWORD PTR [ecx-0x2af3632a],esp
  41c0c8:	jb     0x41c0ea
  41c0ca:	add    cl,BYTE PTR [edx+0x1d329bd9]
  41c0d0:	fs cdq 
  41c0d2:	cmp    BYTE PTR [esi+ecx*1],dh
  41c0d5:	sahf   
  41c0d6:	addr16 dec esi
  41c0d8:	sar    BYTE PTR [ebx-0x41],0xe3
  41c0dc:	cmp    DWORD PTR [edi],0x60
  41c0df:	test   DWORD PTR [ecx],0x764cafb
  41c0e5:	or     al,0x5c
  41c0e7:	rol    DWORD PTR [ebp-0x76],cl
  41c0ea:	ds xor ebx,ebp
  41c0ed:	or     al,BYTE PTR [esi-0x18]
  41c0f0:	push   edi
  41c0f1:	mov    edi,0x898a8cd
  41c0f6:	inc    eax
  41c0f7:	stc    
  41c0f8:	(bad)  
  41c0f9:	sbb    al,0x26
  41c0fb:	or     DWORD PTR [eax],esi
  41c0fd:	or     eax,0xc94e4630
  41c102:	and    BYTE PTR [edx+0x41],ah
  41c105:	clc    
  41c106:	in     eax,0xb
  41c108:	cmp    al,0x10
  41c10a:	inc    eax
  41c10b:	sti    
  41c10c:	addr16 inc ecx
  41c10e:	mov    bh,0x1f
  41c110:	xchg   DWORD PTR [ebx-0x3c],edx
  41c113:	mov    ds:0x35c0a4a7,al
  41c118:	xor    BYTE PTR [ebx+0x1acf21ad],0xe
  41c11f:	jae    0x41c179
  41c121:	lock push 0x172ab882
  41c127:	cmp    DWORD PTR [esi+0x7d],edx
  41c12a:	icebp  
  41c12b:	iret   
  41c12c:	dec    edx
  41c12d:	out    0xa9,al
  41c12f:	stc    
  41c130:	mov    esp,0xfe5d9abd
  41c135:	push   eax
  41c136:	rcl    DWORD PTR cs:[edx+0xe71c34e],cl
  41c13d:	jle    0x41c0cb
  41c13f:	mov    eax,ds:0x2713c39e
  41c144:	mov    al,0x6a
  41c146:	adc    al,BYTE PTR [ecx-0x1a9662f0]
  41c14c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c14d:	cmp    cl,BYTE PTR [esi-0x66841dae]
  41c153:	fmulp  st(0),st
  41c155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c156:	icebp  
  41c157:	loopne 0x41c117
  41c159:	pop    es
  41c15a:	or     eax,0x2de5434f
  41c15f:	icebp  
  41c160:	add    BYTE PTR [ecx+0x79b09699],bl
  41c166:	adc    BYTE PTR [edx+0x13],dh
  41c169:	jmp    0x41c10e
  41c16b:	jbe    0x41c11d
  41c16d:	jne    0x41c17a
  41c16f:	js     0x41c100
  41c171:	cmp    edi,DWORD PTR [ecx]
  41c173:	ror    bh,1
  41c175:	mov    ds:0xde56b485,eax
  41c17a:	dec    edx
  41c17b:	jns    0x41c1df
  41c17d:	inc    eax
  41c17e:	inc    ecx
  41c17f:	in     eax,0x8a
  41c181:	jns    0x41c185
  41c183:	xchg   esp,eax
  41c184:	imul   ebp,esi,0x37
  41c187:	dec    eax
  41c188:	fisttp DWORD PTR [edi-0x22]
  41c18b:	push   cs
  41c18c:	mov    dh,0xd3
  41c18e:	push   ss
  41c18f:	scas   eax,DWORD PTR es:[edi]
  41c190:	not    DWORD PTR [ecx+0x25448740]
  41c196:	adc    DWORD PTR [ebx-0x66],edi
  41c199:	xlat   BYTE PTR ds:[ebx]
  41c19a:	xchg   ecx,eax
  41c19b:	jbe    0x41c217
  41c19d:	js     0x41c16a
  41c19f:	jl     0x41c1af
  41c1a1:	push   esi
  41c1a2:	int    0x7
  41c1a4:	out    dx,al
  41c1a5:	add    esi,DWORD PTR [ebx+ebp*1+0x12]
  41c1a9:	ud2    
  41c1ab:	cmp    eax,0xaa1f4cc6
  41c1b0:	xor    ch,BYTE PTR [ecx]
  41c1b2:	outs   dx,BYTE PTR ds:[esi]
  41c1b3:	mov    WORD PTR [ebx],ss
  41c1b5:	add    DWORD PTR [eax],esi
  41c1b7:	push   ds
  41c1b8:	test   BYTE PTR [esi],cl
  41c1ba:	dec    edi
  41c1bb:	stos   BYTE PTR es:[edi],al
  41c1bc:	fcomp  QWORD PTR [eax+0x21b3928b]
  41c1c2:	jle    0x41c193
  41c1c4:	fdiv   DWORD PTR [edi+0x7bc3e2da]
  41c1ca:	hlt    
  41c1cb:	call   0x5fbe10cd
  41c1d0:	add    ch,BYTE PTR [edi-0x24]
  41c1d3:	sub    BYTE PTR ds:0xd39da374,dh
  41c1d9:	(bad)  
  41c1da:	mov    bp,0x22f5
  41c1de:	fadd   DWORD PTR [ecx+eax*2-0x7a]
  41c1e2:	js     0x41c1bc
  41c1e4:	(bad)  
  41c1e5:	call   0xbddd:0xa98ddd88
  41c1ec:	mov    eax,ds:0x6f67afba
  41c1f1:	jbe    0x41c1ef
  41c1f3:	gs (bad) 
  41c1f5:	sub    eax,0x97884f11
  41c1fa:	idiv   BYTE PTR [esi+0x5d]
  41c1fd:	ror    BYTE PTR fs:[esi+0x5b1a2470],0xf6
  41c205:	addr16 sub al,0xe9
  41c208:	or     DWORD PTR [ebx],ebx
  41c20a:	fstp   QWORD PTR [ecx+0x472ded36]
  41c210:	lock adc BYTE PTR [esi],ch
  41c213:	retf   
  41c214:	in     al,0xdd
  41c216:	sahf   
  41c217:	push   0x3ba4cede
  41c21c:	fsubr  DWORD PTR [edi+ecx*8+0x0]
  41c220:	or     al,0x98
  41c222:	sar    BYTE PTR [ecx],0xae
  41c225:	jmp    0x41c1aa
  41c227:	icebp  
  41c228:	sahf   
  41c229:	dec    ecx
  41c22a:	cmp    ecx,DWORD PTR [ebx+0x4b]
  41c22d:	idiv   dh
  41c22f:	out    0x9b,eax
  41c231:	int    0x9b
  41c233:	out    dx,al
  41c234:	pop    ecx
  41c235:	sub    BYTE PTR [eax+eiz*2],dl
  41c238:	dec    edi
  41c239:	fcomp  QWORD PTR [edx+0x17]
  41c23c:	or     al,0x52
  41c23e:	push   cs
  41c23f:	mov    ecx,edi
  41c241:	pop    ecx
  41c242:	je     0x41c2a9
  41c244:	rep lods eax,DWORD PTR ds:[esi]
  41c246:	lods   eax,DWORD PTR ds:[esi]
  41c247:	dec    ecx
  41c248:	mov    eax,0x6192bb45
  41c24d:	cdq    
  41c24e:	cld    
  41c24f:	aam    0xc8
  41c251:	arpl   WORD PTR [ecx-0x7e],dx
  41c254:	out    0x74,al
  41c256:	hlt    
  41c257:	pop    ebp
  41c258:	out    0xe1,al
  41c25a:	push   ebp
  41c25b:	or     al,0xc9
  41c25d:	xchg   edx,eax
  41c25e:	jecxz  0x41c21d
  41c260:	arpl   WORD PTR [edi+0x51],di
  41c263:	das    
  41c264:	in     al,dx
  41c265:	push   ebx
  41c266:	mov    eax,0x810d1821
  41c26b:	(bad)  [ebx-0x7279d377]
  41c271:	enter  0xd0a1,0xbf
  41c275:	les    esi,FWORD PTR ds:0xb16f45f2
  41c27b:	pop    ebx
  41c27c:	addr16 (bad) 
  41c27e:	cmp    ebx,DWORD PTR [edx+0x281e182a]
  41c284:	adc    ecx,ebp
  41c286:	cmp    BYTE PTR [edx+0x3c],cl
  41c289:	jno    0x41c276
  41c28b:	lods   eax,DWORD PTR ds:[esi]
  41c28c:	mov    al,ds:0x7df46d07
  41c291:	adc    eax,0x7c7e0636
  41c296:	lods   al,BYTE PTR ds:[esi]
  41c297:	push   ecx
  41c298:	ins    DWORD PTR es:[edi],dx
  41c299:	imul   ebp,DWORD PTR [esi-0x4b],0x1b
  41c29d:	das    
  41c29e:	aas    
  41c29f:	sbb    BYTE PTR [ebx],dh
  41c2a1:	inc    edx
  41c2a2:	ds push ecx
  41c2a4:	jl     0x41c258
  41c2a6:	shl    DWORD PTR [edi],1
  41c2a8:	out    dx,eax
  41c2a9:	mov    ch,0x4
  41c2ab:	cmp    DWORD PTR [edi+eax*1-0x55d399d1],edx
  41c2b2:	fcomp  QWORD PTR ds:0xc77d3fd9
  41c2b8:	fmul   DWORD PTR [eax+0x2e]
  41c2bb:	ja     0x41c2b0
  41c2bd:	sar    bh,1
  41c2bf:	fcmovnbe st,st(1)
  41c2c1:	dec    edi
  41c2c2:	sbb    eax,0x67dd5cb9
  41c2c7:	and    DWORD PTR [ecx+0x46a1ff34],ebx
  41c2cd:	sbb    al,0x16
  41c2cf:	dec    edx
  41c2d0:	sub    al,0xb7
  41c2d2:	jmp    0xbd143316
  41c2d7:	call   0xb6bd0f04
  41c2dc:	nop
  41c2dd:	push   ebx
  41c2de:	mov    eax,0xd78a8eee
  41c2e3:	and    eax,0x931d37f0
  41c2e8:	shr    DWORD PTR [ebp+0x1a99b322],cl
  41c2ee:	sub    dl,BYTE PTR [edi+0x38848428]
  41c2f4:	shl    DWORD PTR [edx+edx*8],1
  41c2f7:	call   0x498c79fd
  41c2fc:	cmc    
  41c2fd:	icebp  
  41c2fe:	lods   eax,DWORD PTR ds:[esi]
  41c2ff:	test   bh,al
  41c301:	stos   DWORD PTR es:[edi],eax
  41c302:	mov    esp,0xa5420291
  41c307:	adc    al,BYTE PTR [ebx]
  41c309:	push   ebx
  41c30a:	inc    ebx
  41c30b:	push   es
  41c30c:	test   DWORD PTR [edi],esi
  41c30e:	aas    
  41c30f:	mov    bh,0xf2
  41c311:	mov    ebx,0x1739d924
  41c316:	pop    ecx
  41c317:	and    DWORD PTR [ecx+esi*1-0x64],eax
  41c31b:	test   al,0xd1
  41c31d:	out    0xa7,eax
  41c31f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c320:	dec    edi
  41c321:	ret    
  41c322:	inc    eax
  41c323:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c325:	or     ch,BYTE PTR [ebx-0x236b807b]
  41c32b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c32c:	js     0x41c33e
  41c32e:	lods   eax,DWORD PTR ds:[esi]
  41c32f:	int3   
  41c330:	js     0x41c381
  41c332:	pushf  
  41c333:	ret    
  41c334:	fsubr  DWORD PTR [eax-0x73813e07]
  41c33a:	(bad)  
  41c33b:	fdivr  QWORD PTR [edx]
  41c33d:	inc    DWORD PTR [eax]
  41c33f:	cmp    cl,BYTE PTR [esi+0x7e6db54c]
  41c345:	push   esp
  41c346:	xor    DWORD PTR [ebp-0x35],edi
  41c349:	add    al,0x1e
  41c34b:	iret   
  41c34c:	push   esp
  41c34d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c34e:	out    0x44,al
  41c350:	imul   esi,DWORD PTR [esi-0x3eece417],0x41e2fa49
  41c35a:	mov    al,0xc0
  41c35c:	and    eax,0x8b025d1
  41c361:	mov    ebp,0x2bf85b48
  41c366:	xchg   esp,eax
  41c367:	jbe    0x41c37b
  41c369:	pop    ebp
  41c36a:	sar    edi,0x2
  41c36d:	pop    ss
  41c36e:	mov    eax,0x29e94b75
  41c373:	sbb    DWORD PTR [eax-0x13],ebx
  41c376:	nop
  41c377:	into   
  41c378:	daa    
  41c379:	push   ecx
  41c37a:	int    0xe7
  41c37c:	or     BYTE PTR [eax*1+0x5cc2469],al
  41c383:	iret   
  41c384:	and    BYTE PTR [edi+0x61],dl
  41c387:	pop    ds
  41c388:	cmp    BYTE PTR [esi+0xc],cl
  41c38b:	ret    0xd387
  41c38e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c38f:	sub    DWORD PTR [ebp-0x3e],esp
  41c392:	leave  
  41c393:	out    dx,eax
  41c394:	pop    edi
  41c395:	popa   
  41c396:	dec    edi
  41c397:	jmp    0x13d94826
  41c39c:	jmp    FWORD PTR [eax+0x7e]
  41c39f:	jne    0x41c415
  41c3a1:	mov    ds:0xed9841e9,al
  41c3a6:	into   
  41c3a7:	sbb    dl,dh
  41c3a9:	scas   eax,DWORD PTR es:[edi]
  41c3aa:	hlt    
  41c3ab:	dec    edx
  41c3ac:	aaa    
  41c3ad:	jbe    0x41c3f4
  41c3af:	push   esp
  41c3b0:	pop    ecx
  41c3b1:	pop    ss
  41c3b2:	lds    eax,FWORD PTR [eax-0x43]
  41c3b5:	das    
  41c3b6:	call   0xd38a:0x253b5b46
  41c3bd:	hlt    
  41c3be:	push   ecx
  41c3bf:	retf   
  41c3c0:	cmp    al,0xda
  41c3c2:	ins    BYTE PTR es:[edi],dx
  41c3c3:	jno    0x41c34b
  41c3c5:	push   ss
  41c3c6:	jne    0x41c409
  41c3c8:	test   ebp,ebp
  41c3ca:	jno    0x41c3bc
  41c3cc:	xor    DWORD PTR [edi+0x5d6680fb],esp
  41c3d2:	inc    esi
  41c3d3:	xchg   edx,eax
  41c3d4:	dec    edi
  41c3d5:	mov    esi,ss
  41c3d7:	sbb    eax,0x1e48f2d7
  41c3dc:	mov    esi,0x4d093e85
  41c3e1:	lahf   
  41c3e2:	arpl   di,dx
  41c3e4:	jnp    0x41c42c
  41c3e6:	hlt    
  41c3e7:	xchg   ebx,eax
  41c3e8:	shr    esp,1
  41c3ea:	mov    ds:0xb18df06c,eax
  41c3ef:	sti    
  41c3f0:	shl    BYTE PTR [ecx],1
  41c3f2:	int3   
  41c3f3:	rol    bl,cl
  41c3f5:	jb     0x41c3ae
  41c3f7:	dec    ebx
  41c3f8:	cmp    BYTE PTR [ecx],bh
  41c3fa:	mov    esi,0x6c5707e7
  41c3ff:	(bad)  
  41c400:	jb     0x41c40f
  41c402:	mov    WORD PTR [ebp-0x2d69de38],es
  41c408:	xor    eax,0xe1f4b1fe
  41c40d:	jmp    0x6fc3:0x98f06cca
  41c414:	sar    BYTE PTR [ecx],cl
  41c416:	div    ebx
  41c418:	adc    edx,0x68
  41c41b:	icebp  
  41c41c:	dec    ebp
  41c41d:	gs push 0xffffffd7
  41c420:	test   al,0x66
  41c422:	mov    bl,BYTE PTR [edx+ebx*2+0x6e]
  41c426:	inc    edi
  41c427:	pushf  
  41c428:	loope  0x41c3de
  41c42a:	xor    DWORD PTR [ecx+0x7d],ebp
  41c42d:	loop   0x41c48d
  41c42f:	inc    edi
  41c430:	or     DWORD PTR [ebp+0x781fa677],edx
  41c436:	jmp    0x41c489
  41c438:	cwde   
  41c439:	int    0xb8
  41c43b:	pop    esp
  41c43c:	dec    ecx
  41c43d:	or     eax,0xbdfaa23e
  41c442:	ds ins BYTE PTR es:[edi],dx
  41c444:	jne    0x41c41e
  41c446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c447:	add    DWORD PTR [ecx+eax*8],eax
  41c44a:	jne    0x41c3f1
  41c44c:	inc    edi
  41c44d:	pop    edi
  41c44e:	push   cs
  41c44f:	xchg   esi,eax
  41c450:	xor    BYTE PTR [ebx+0x20],dh
  41c453:	sbb    al,0x94
  41c455:	or     al,0x5d
  41c457:	jo     0x41c407
  41c459:	pushf  
  41c45a:	jo     0x41c4b1
  41c45c:	call   0x9a9e:0x9da8ac35
  41c463:	inc    edx
  41c464:	dec    ebx
  41c465:	fstp   TBYTE PTR [ebp-0x5d]
  41c468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c469:	or     BYTE PTR [ecx-0x70fd015f],al
  41c46f:	(bad)  
  41c470:	xor    al,0x6b
  41c472:	stos   DWORD PTR es:[edi],eax
  41c473:	loopne 0x41c4d2
  41c475:	jmp    0x41c42b
  41c477:	mov    al,0x11
  41c479:	shl    DWORD PTR [ebx],1
  41c47b:	pop    ecx
  41c47c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c47d:	mov    bh,0xb3
  41c47f:	sub    DWORD PTR [eax-0x8],ebx
  41c482:	or     DWORD PTR [ebx-0x56],eax
  41c485:	xchg   BYTE PTR [esi-0x7866018e],al
  41c48b:	inc    esp
  41c48c:	out    0xe8,eax
  41c48e:	out    dx,eax
  41c48f:	mov    eax,ds:0x51b758d
  41c494:	pusha  
  41c495:	outs   dx,DWORD PTR ds:[esi]
  41c496:	shl    BYTE PTR [ecx-0x77],0x4b
  41c49a:	inc    edx
  41c49b:	dec    ecx
  41c49c:	test   BYTE PTR [esi],0xe6
  41c49f:	pop    ds
  41c4a0:	lock add eax,0xeeb9fbc7
  41c4a6:	in     eax,dx
  41c4a7:	xor    eax,0x5983007c
  41c4ac:	or     DWORD PTR [esi+0x77e03e53],0x31bb3df0
  41c4b6:	push   edx
  41c4b7:	jne    0x41c45c
  41c4b9:	out    dx,al
  41c4ba:	fdivr  st,st(1)
  41c4bc:	add    esp,esi
  41c4be:	cmp    DWORD PTR [ecx+eax*4+0x593cbf48],0x22
  41c4c6:	xor    DWORD PTR es:[ebp+0x236ac8bb],edi
  41c4cd:	jmp    0x25608da7
  41c4d2:	jb     0x41c534
  41c4d4:	push   ds
  41c4d5:	cli    
  41c4d6:	nop
  41c4d7:	mov    ah,cl
  41c4d9:	and    al,0x26
  41c4db:	out    dx,al
  41c4dc:	push   ebp
  41c4dd:	and    edi,DWORD PTR [ecx+ecx*4]
  41c4e0:	adc    DWORD PTR ds:0xe76c17de,ecx
  41c4e6:	dec    DWORD PTR [esi+0xb7c01d4]
  41c4ec:	pop    edx
  41c4ed:	cmp    DWORD PTR [edx+0x26],esp
  41c4f0:	push   cs
  41c4f1:	inc    eax
  41c4f2:	test   BYTE PTR [edx+eax*1-0x3cf855f6],ch
  41c4f9:	pop    eax
  41c4fa:	xor    ebp,edi
  41c4fc:	add    DWORD PTR [ebp+edi*1-0x51fbb7b2],0x8da5cbb0
  41c507:	ds push esi
  41c509:	jmp    DWORD PTR [edx]
  41c50b:	mov    ecx,0x332ac98e
  41c510:	(bad)  [eax]
  41c512:	popf   
  41c513:	add    BYTE PTR [eax-0x7c],bl
  41c516:	dec    eax
  41c517:	ins    BYTE PTR es:[edi],dx
  41c518:	mov    dh,0x40
  41c51a:	pop    ebp
  41c51b:	adc    al,0xef
  41c51d:	and    dh,BYTE PTR [edi-0x45726b12]
  41c523:	mov    dl,0xeb
  41c525:	mov    WORD PTR ds:0x4db32e2f,?
  41c52b:	xchg   ecx,eax
  41c52c:	test   al,0xe
  41c52e:	dec    edi
  41c52f:	aaa    
  41c530:	dec    esi
  41c531:	test   BYTE PTR [edi-0x7501708e],cl
  41c537:	or     al,0xb8
  41c539:	jge    0x41c571
  41c53b:	dec    BYTE PTR [ebx-0x20b36800]
  41c541:	add    esi,edi
  41c543:	jo     0x41c525
  41c545:	add    al,0x52
  41c547:	das    
  41c548:	test   BYTE PTR [ecx+esi*8],0x59
  41c54c:	retf   
  41c54d:	nop
  41c54e:	fmul   QWORD PTR [edi+0x9b9766c]
  41c554:	hlt    
  41c555:	sub    ebx,DWORD PTR [ecx]
  41c557:	pop    ss
  41c558:	fadd   DWORD PTR [edx-0x23]
  41c55b:	js     0x41c4e8
  41c55d:	fbld   TBYTE PTR [esi-0x6ab4656e]
  41c563:	and    BYTE PTR [edi],bh
  41c565:	mov    esp,0xddc29cdb
  41c56a:	cmp    DWORD PTR [edi-0x6d],ebx
  41c56d:	inc    edi
  41c56e:	xor    DWORD PTR ds:0x2d91b947,0x5a
  41c575:	data16 (bad) 
  41c577:	push   ss
  41c578:	jae    0x41c5a3
  41c57a:	popa   
  41c57b:	push   edx
  41c57c:	xor    al,0xb5
  41c57e:	cmp    bh,0x51
  41c581:	sbb    eax,0xed19829a
  41c586:	and    dl,0xca
  41c589:	fistp  DWORD PTR ds:0xee52c051
  41c58f:	out    0x4f,al
  41c591:	(bad)  [edx]
  41c593:	mov    bh,0xc0
  41c595:	mov    edx,0x788ab23d
  41c59a:	xor    DWORD PTR [ebp-0x1],esp
  41c59d:	xchg   edx,eax
  41c59e:	pop    esi
  41c59f:	pop    es
  41c5a0:	in     eax,0x50
  41c5a2:	xchg   BYTE PTR [edx-0xe5b6c73],dh
  41c5a8:	sub    bl,bl
  41c5aa:	xchg   edi,eax
  41c5ab:	mov    edi,0xea7b65e9
  41c5b0:	xor    edx,DWORD PTR [ebx-0x36]
  41c5b3:	inc    esp
  41c5b4:	xchg   ebx,eax
  41c5b5:	pop    ecx
  41c5b6:	mov    BYTE PTR [esi+0x30e8b210],dl
  41c5bc:	xor    ecx,DWORD PTR [ecx-0x2e20e3a5]
  41c5c2:	sub    esp,DWORD PTR ds:0xa06d8c22
  41c5c8:	test   edi,eax
  41c5ca:	add    eax,0xf107e8bd
  41c5cf:	xor    ch,BYTE PTR [esp+ecx*2]
  41c5d2:	sub    eax,0xf4dcbefa
  41c5d7:	inc    esp
  41c5d8:	push   esp
  41c5d9:	sub    eax,0x2a49e0a7
  41c5de:	xchg   edx,edx
  41c5e0:	ret    
  41c5e1:	jmp    0x41c60d
  41c5e3:	xor    BYTE PTR [ecx-0x566b1971],bh
  41c5e9:	mov    WORD PTR [ebx-0x7c],ds
  41c5ec:	pop    es
  41c5ed:	pusha  
  41c5ee:	and    eax,0x395dba81
  41c5f3:	stc    
  41c5f4:	adc    BYTE PTR [esi+0x4517af1d],al
  41c5fa:	das    
  41c5fb:	xchg   edx,eax
  41c5fc:	dec    ebx
  41c5fd:	loop   0x41c5bc
  41c5ff:	cdq    
  41c600:	and    edx,DWORD PTR [eax+0x40]
  41c603:	test   al,0xf4
  41c605:	mov    eax,0x2933ae38
  41c60a:	inc    ebx
  41c60b:	pop    es
  41c60c:	loope  0x41c5bb
  41c60e:	mov    ebx,0xc767324e
  41c613:	shl    DWORD PTR [edx],cl
  41c615:	rcl    DWORD PTR [ebp+0x434827],1
  41c61b:	cmc    
  41c61c:	jge    0x41c5a1
  41c61e:	ret    0xe66f
  41c621:	or     eax,0x4e94feb7
  41c626:	push   ss
  41c627:	imul   edi,DWORD PTR [esi],0xd77b9915
  41c62d:	push   edi
  41c62e:	(bad)  
  41c62f:	out    dx,al
  41c630:	cli    
  41c631:	sbb    eax,0x686ed80
  41c636:	out    0xce,eax
  41c638:	inc    esp
  41c639:	add    bl,BYTE PTR [ebx+0x154c5a32]
  41c63f:	les    esp,FWORD PTR [esi-0x21ad8398]
  41c645:	sbb    BYTE PTR [edi+0x3c],ch
  41c648:	and    BYTE PTR [ebp-0x6c7a0fb1],dh
  41c64e:	loope  0x41c645
  41c650:	adc    DWORD PTR [eax],edi
  41c652:	xchg   edx,eax
  41c653:	or     edi,0xeda718f1
  41c659:	int3   
  41c65a:	push   cs
  41c65b:	call   0x26af9453
  41c660:	adc    al,0x28
  41c662:	sbb    al,0x88
  41c664:	mov    dl,0xdd
  41c666:	xor    DWORD PTR [ebx+0x7a9b61b0],ebx
  41c66c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c66d:	ins    BYTE PTR es:[edi],dx
  41c66e:	and    eax,0xd5cac41c
  41c673:	out    dx,al
  41c674:	dec    ecx
  41c675:	aam    0x8a
  41c677:	push   ebx
  41c678:	inc    edx
  41c679:	sub    eax,0x6bf15276
  41c67e:	comiss xmm7,DWORD PTR [eax-0x11cc6227]
  41c685:	test   BYTE PTR [esi+0x3c],0xcc
  41c689:	adc    ebx,DWORD PTR [ecx]
  41c68b:	pop    esp
  41c68c:	cld    
  41c68d:	ror    DWORD PTR ds:0x6ffe2d0c,1
  41c693:	stos   DWORD PTR es:[edi],eax
  41c694:	or     BYTE PTR [ecx-0x32],dl
  41c697:	dec    esp
  41c698:	push   ds
  41c699:	stc    
  41c69a:	jb     0x41c6f9
  41c69c:	and    BYTE PTR [edi-0x2b],bh
  41c69f:	aas    
  41c6a0:	push   ebx
  41c6a1:	add    DWORD PTR [eax],0x583c05d
  41c6a7:	mov    al,ds:0x97f4ca74
  41c6ac:	sub    cl,bh
  41c6ae:	adc    al,0x86
  41c6b0:	jmp    0x41c6db
  41c6b2:	mov    eax,0xad979fcd
  41c6b7:	inc    esi
  41c6b8:	in     eax,dx
  41c6b9:	jb     0x41c648
  41c6bb:	mov    cl,0xd6
  41c6bd:	loopne 0x41c67d
  41c6bf:	jmp    FWORD PTR [esi]
  41c6c1:	fadd   st,st(0)
  41c6c3:	add    DWORD PTR [ebx-0x82fb86e],edi
  41c6c9:	fwait
  41c6ca:	xchg   esi,eax
  41c6cb:	or     ah,ch
  41c6cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6ce:	repz cmp BYTE PTR [edi],bl
  41c6d1:	ins    BYTE PTR es:[edi],dx
  41c6d2:	mov    al,0xbe
  41c6d4:	in     eax,dx
  41c6d5:	fld    DWORD PTR [edx]
  41c6d7:	push   eax
  41c6d8:	ror    BYTE PTR [ebp+0x42818a89],0xe4
  41c6df:	rol    al,0x95
  41c6e2:	xchg   BYTE PTR [edx+0x2874b5f1],bh
  41c6e8:	adc    eax,0x6ab590e9
  41c6ed:	push   esi
  41c6ee:	lock or ebx,DWORD PTR [eax]
  41c6f1:	and    DWORD PTR [eax],edi
  41c6f3:	cmc    
  41c6f4:	loope  0x41c6c5
  41c6f6:	jecxz  0x41c714
  41c6f8:	add    ch,BYTE PTR [esi+0x31909f9]
  41c6fe:	xor    DWORD PTR [ecx],edx
  41c700:	repnz mul BYTE PTR [edx]
  41c703:	dec    esp
  41c704:	and    eax,0xa3f17691
  41c709:	gs leave 
  41c70b:	scas   eax,DWORD PTR es:[edi]
  41c70c:	outs   dx,DWORD PTR ds:[esi]
  41c70d:	popa   
  41c70e:	lds    esi,FWORD PTR [eax+0x2e]
  41c711:	dec    ebx
  41c712:	aam    0xb9
  41c714:	out    dx,al
  41c715:	mov    cs,WORD PTR [edx]
  41c717:	gs ret 
  41c719:	aam    0xd2
  41c71b:	xor    edi,eax
  41c71d:	(bad)  
  41c71f:	add    DWORD PTR [esi+0x1ce3ef76],esi
  41c725:	in     al,dx
  41c726:	std    
  41c727:	fwait
  41c728:	cmp    DWORD PTR [eax+0x19],edx
  41c72b:	sbb    DWORD PTR [esi-0x18],0x471d1bf1
  41c732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c733:	mov    cl,0x7d
  41c735:	pop    esp
  41c736:	lahf   
  41c737:	lea    edx,[edi+0x57]
  41c73a:	push   ecx
  41c73b:	mov    ecx,0xa0652909
  41c740:	in     eax,0xbf
  41c742:	cmp    BYTE PTR [edi],al
  41c744:	adc    esp,DWORD PTR [ecx-0xdac38e]
  41c74a:	inc    edi
  41c74b:	popf   
  41c74c:	and    al,0x25
  41c74e:	ror    BYTE PTR [eax+0x1ab7fad2],0xf9
  41c755:	dec    esi
  41c756:	xor    al,0xb3
  41c758:	push   cs
  41c759:	addr16 inc edx
  41c75b:	or     bh,bl
  41c75d:	addr16 push eax
  41c75f:	jb     0x41c7da
  41c761:	and    al,BYTE PTR [edx]
  41c763:	test   BYTE PTR [esi+0x308d67a6],al
  41c769:	popf   
  41c76a:	mov    bh,0x62
  41c76c:	loopne 0x41c7e0
  41c76e:	mov    ch,cl
  41c770:	sub    BYTE PTR ds:0xdb1787a,ch
  41c776:	out    0x37,eax
  41c778:	icebp  
  41c779:	cwde   
  41c77a:	or     al,0xb5
  41c77c:	mov    edi,0x766a731f
  41c781:	cmp    BYTE PTR [eax],al
  41c783:	add    ecx,DWORD PTR [esi-0x68ff9f9]
  41c789:	loope  0x41c7e8
  41c78b:	xor    DWORD PTR [ebx+0x8],esi
  41c78e:	pop    edx
  41c78f:	cmp    dl,BYTE PTR [ecx+0x44]
  41c792:	inc    ebp
  41c793:	jmp    0xc16:0x4396c037
  41c79a:	jbe    0x41c791
  41c79c:	adc    ecx,DWORD PTR [edx]
  41c79e:	sbb    al,0x5e
  41c7a0:	adc    ch,BYTE PTR [edx-0x79]
  41c7a3:	stos   DWORD PTR es:[edi],eax
  41c7a4:	push   ss
  41c7a5:	jns    0x41c774
  41c7a7:	mov    ds:0xa2aa03e1,al
  41c7ac:	int3   
  41c7ad:	xchg   ebp,eax
  41c7ae:	sub    al,0xd4
  41c7b0:	add    edx,DWORD PTR [eax+0x8]
  41c7b3:	and    DWORD PTR [eax+0x6d847015],eax
  41c7b9:	or     cl,ch
  41c7bb:	rcl    BYTE PTR [eax+0x49],1
  41c7be:	xchg   esp,eax
  41c7bf:	ds stos BYTE PTR es:[edi],al
  41c7c1:	scas   al,BYTE PTR es:[edi]
  41c7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7c3:	popf   
  41c7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7c5:	lahf   
  41c7c6:	rol    cl,cl
  41c7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7c9:	jl     0x41c7e6
  41c7cb:	outs   dx,BYTE PTR ds:[esi]
  41c7cc:	jle    0x41c849
  41c7ce:	pop    esp
  41c7cf:	cs jmp 0xce7d706b
  41c7d5:	stos   DWORD PTR es:[edi],eax
  41c7d6:	pop    edi
  41c7d7:	bound  edx,QWORD PTR [edi+0x21]
  41c7da:	sbb    eax,0xb1bcf9b8
  41c7df:	mov    ah,0xbb
  41c7e1:	scas   al,BYTE PTR es:[edi]
  41c7e2:	xor    BYTE PTR [ecx+0x75],cl
  41c7e5:	out    0x6b,al
  41c7e7:	add    al,0x92
  41c7e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7ea:	outs   dx,DWORD PTR ds:[esi]
  41c7eb:	sub    ah,ah
  41c7ed:	jl     0x41c7ae
  41c7ef:	nop
  41c7f0:	push   es
  41c7f1:	loope  0x41c7fd
  41c7f3:	pushf  
  41c7f4:	xor    cl,dh
  41c7f6:	xlat   BYTE PTR ds:[ebx]
  41c7f7:	int3   
  41c7f8:	sbb    cl,BYTE PTR [edi+eax*4-0x3d]
  41c7fc:	in     al,dx
  41c7fd:	retf   0x2af9
  41c800:	dec    esp
  41c801:	out    dx,eax
  41c802:	or     edi,DWORD PTR [ecx]
  41c804:	jns    0x41c84c
  41c806:	imul   edx,DWORD PTR [esi],0xab01edaf
  41c80c:	fwait
  41c80d:	jl     0x41c869
  41c80f:	fist   WORD PTR [ebp-0x5f]
  41c812:	(bad)  
  41c813:	push   cs
  41c814:	xchg   edi,eax
  41c815:	stos   DWORD PTR es:[edi],eax
  41c816:	jmp    0x41c888
  41c818:	leave  
  41c819:	cwde   
  41c81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c81b:	pop    ebx
  41c81c:	jne    0x41c86c
  41c81e:	jecxz  0x41c846
  41c820:	in     eax,0x65
  41c822:	js     0x41c7a4
  41c824:	adc    al,BYTE PTR [eax+0xf79dec5]
  41c82a:	cs ins DWORD PTR es:[edi],dx
  41c82c:	popf   
  41c82d:	inc    esi
  41c82e:	jmp    0x90ea:0x9919c118
  41c835:	shr    esp,0x60
  41c838:	pop    esi
  41c839:	scas   eax,DWORD PTR es:[edi]
  41c83a:	cmp    al,0xfd
  41c83c:	adc    edx,DWORD PTR [ebx+0x26]
  41c83f:	pusha  
  41c840:	lock aas 
  41c842:	ja     0x41c872
  41c844:	ror    bh,0x41
  41c847:	mov    ds:0x5fe77662,eax
  41c84c:	rcr    DWORD PTR [eax],0x98
  41c84f:	ja     0x41c827
  41c851:	dec    esi
  41c852:	adc    al,0x34
  41c854:	xor    eax,0x19a761b7
  41c859:	cli    
  41c85a:	es iret 
  41c85c:	xlat   BYTE PTR ds:[ebx]
  41c85d:	in     al,dx
  41c85e:	xor    eax,0x37f31b20
  41c863:	mul    BYTE PTR [ebx]
  41c865:	or     BYTE PTR [edi-0x73],dh
  41c868:	stc    
  41c869:	jg     0x41c89b
  41c86b:	add    eax,0x4e73345b
  41c870:	inc    ecx
  41c871:	pusha  
  41c872:	pop    ebp
  41c873:	mov    ecx,0xaf4323e0
  41c878:	retf   0x3f21
  41c87b:	xchg   ebp,eax
  41c87c:	and    al,0x89
  41c87e:	add    BYTE PTR [eax+0x6e],bl
  41c881:	sub    al,0xad
  41c883:	xor    ah,BYTE PTR [edx]
  41c885:	and    BYTE PTR [eax-0x54],bl
  41c888:	mov    edi,0x78109d60
  41c88d:	cmp    dh,BYTE PTR [ebx-0x2e]
  41c890:	nop
  41c891:	mov    ebp,0x3762122a
  41c896:	dec    eax
  41c897:	je     0x41c837
  41c899:	mov    cl,0x6b
  41c89b:	imul   esi,DWORD PTR [ebx],0x73
  41c89e:	loopne 0x41c8eb
  41c8a0:	xor    al,0xee
  41c8a2:	sub    BYTE PTR [ecx],0x6e
  41c8a5:	push   es
  41c8a6:	dec    ecx
  41c8a7:	dec    esi
  41c8a8:	xchg   edx,eax
  41c8a9:	and    dl,cl
  41c8ab:	lea    esi,[ecx+esi*1+0xb]
  41c8af:	jecxz  0x41c8e8
  41c8b1:	mov    ebx,0x9d3ca122
  41c8b6:	adc    dh,BYTE PTR [ecx]
  41c8b8:	les    ecx,FWORD PTR [ebp-0x45]
  41c8bb:	adc    edx,0x58
  41c8be:	enter  0x61ac,0xfd
  41c8c2:	and    DWORD PTR [esi+0x43],edi
  41c8c5:	lods   eax,DWORD PTR ds:[esi]
  41c8c6:	sbb    esi,edx
  41c8c8:	inc    ecx
  41c8c9:	and    bl,BYTE PTR [edi-0x7e6e74cc]
  41c8cf:	inc    eax
  41c8d0:	xlat   BYTE PTR ds:[ebx]
  41c8d1:	inc    ebx
  41c8d2:	es pop edx
  41c8d4:	mov    edx,0x3b23249c
  41c8d9:	mov    ds:0xfc1bad12,eax
  41c8de:	sbb    eax,edx
  41c8e0:	in     al,0xbd
  41c8e2:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41c8e4:	and    al,0xa1
  41c8e6:	pop    ebx
  41c8e7:	neg    BYTE PTR [ebx]
  41c8e9:	or     DWORD PTR [ebp+0x13],0x3c
  41c8ed:	xchg   ebp,eax
  41c8ee:	dec    esp
  41c8ef:	(bad)  
  41c8f1:	retf   0x110a
  41c8f4:	push   ebp
  41c8f5:	adc    DWORD PTR [bx+si],ebx
  41c8f8:	push   ds
  41c8f9:	xor    dl,BYTE PTR [edx+0x61]
  41c8fc:	iret   
  41c8fd:	add    eax,0x5a0c8938
  41c902:	add    edx,DWORD PTR [ecx-0x7cd401b2]
  41c908:	nop
  41c909:	and    esi,DWORD PTR [eax+0x44]
  41c90c:	push   esp
  41c90d:	pop    esi
  41c90e:	scas   eax,DWORD PTR es:[edi]
  41c90f:	mov    cl,0x39
  41c911:	mov    ebx,0xaf968e76
  41c916:	nop
  41c917:	lahf   
  41c918:	mov    edi,ebx
  41c91a:	stc    
  41c91b:	scas   al,BYTE PTR es:[edi]
  41c91c:	in     al,0x3a
  41c91e:	repnz dec ebx
  41c920:	rcl    BYTE PTR [esi+edx*2],0x5f
  41c924:	dec    eax
  41c925:	and    bh,BYTE PTR [ecx+0x7a79df78]
  41c92b:	mov    eax,0xf36d47fa
  41c930:	mov    ebp,0xa3b81994
  41c935:	bound  esi,QWORD PTR [ebp-0x6598a094]
  41c93b:	adc    ch,BYTE PTR [edx+0x55]
  41c93e:	enter  0xbbfc,0xcf
  41c942:	call   0x7526a8f6
  41c947:	sbb    ah,BYTE PTR [edi-0x1a]
  41c94a:	daa    
  41c94b:	sbb    esp,ecx
  41c94d:	gs pushf 
  41c94f:	pusha  
  41c950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c951:	mov    ds,ecx
  41c953:	clc    
  41c954:	fucom  st(6)
  41c956:	xor    edx,eax
  41c958:	jo     0x41c9d0
  41c95a:	stc    
  41c95b:	inc    ebp
  41c95c:	retf   0x261b
  41c95f:	test   al,0x4d
  41c961:	int3   
  41c962:	pusha  
  41c963:	xchg   DWORD PTR [eax+0x1f3331af],ebx
  41c969:	sub    eax,0xc4be0472
  41c96e:	dec    eax
  41c96f:	jle    0x41c949
  41c971:	mov    esp,?
  41c973:	pushf  
  41c974:	mov    ch,0xbf
  41c976:	fdiv   DWORD PTR ds:0xbd2caa3f
  41c97c:	mov    ch,0x46
  41c97e:	test   DWORD PTR [edx],ebp
  41c980:	enter  0xc3ca,0x5
  41c984:	pop    ss
  41c985:	test   BYTE PTR [esi],ah
  41c987:	add    BYTE PTR [edi-0x765ffbe1],bl
  41c98d:	sub    eax,0x903dfbe0
  41c992:	fsub   DWORD PTR [edx+0x2a]
  41c995:	ficomp WORD PTR [eax-0x7da99681]
  41c99b:	dec    edx
  41c99c:	xchg   esi,eax
  41c99d:	xchg   ebp,eax
  41c99e:	sbb    ebx,esi
  41c9a0:	jmp    DWORD PTR [ebx+0x48f2b055]
  41c9a6:	rcr    BYTE PTR [ebp-0x7e],0xaf
  41c9aa:	ins    DWORD PTR es:[edi],dx
  41c9ab:	sbb    DWORD PTR [ebx],ebx
  41c9ad:	push   esp
  41c9ae:	clc    
  41c9af:	xchg   edx,eax
  41c9b0:	mov    ds:0xc49cb9fe,eax
  41c9b5:	ret    0x2dbd
  41c9b8:	outs   dx,BYTE PTR ds:[esi]
  41c9b9:	sti    
  41c9ba:	cmp    dh,BYTE PTR ds:0x371e7814
  41c9c0:	call   0x3bc8:0x5f627954
  41c9c7:	mov    ds:0xce6ce37f,eax
  41c9cc:	(bad)  
  41c9cd:	cmp    ch,BYTE PTR [ecx+0x2b21a848]
  41c9d3:	cmp    DWORD PTR [edi+esi*4-0x43],ecx
  41c9d7:	(bad)  
  41c9d8:	icebp  
  41c9d9:	and    esi,esi
  41c9db:	dec    ebp
  41c9dc:	pop    edx
  41c9dd:	cs inc ebp
  41c9df:	mov    bh,0xdd
  41c9e1:	pop    edx
  41c9e2:	push   esp
  41c9e4:	test   BYTE PTR [ebp+0x22a88542],bl
  41c9ea:	sbb    esi,edx
  41c9ec:	inc    edx
  41c9ed:	sbb    al,0x64
  41c9ef:	(bad)  
  41c9f0:	(bad)  
  41c9f1:	fld    DWORD PTR [ebp-0x564ab41d]
  41c9f7:	scas   al,BYTE PTR es:[edi]
  41c9f8:	sub    al,0xc2
  41c9fa:	out    0xd4,al
  41c9fc:	push   edi
  41c9fd:	nop
  41c9fe:	arpl   WORD PTR [ecx-0x2a],sp
  41ca01:	clc    
  41ca02:	jns    0x41c9af
  41ca04:	mov    dh,0x87
  41ca06:	cmp    bl,dh
  41ca08:	sbb    esp,DWORD PTR [eax]
  41ca0a:	loop   0x41ca3d
  41ca0c:	ss fcomi st,st(6)
  41ca0f:	mov    esp,0xb9d4d69b
  41ca14:	(bad)  
  41ca15:	in     al,0xa4
  41ca17:	add    esi,DWORD PTR [edi]
  41ca19:	add    al,0x83
  41ca1b:	clc    
  41ca1c:	sub    eax,0xde0ba8a5
  41ca21:	arpl   WORD PTR [edx-0x44711145],bp
  41ca27:	push   eax
  41ca28:	push   edx
  41ca29:	(bad)  
  41ca2a:	popf   
  41ca2b:	out    dx,eax
  41ca2c:	dec    edi
  41ca2d:	lods   al,BYTE PTR ds:[esi]
  41ca2e:	mov    ah,BYTE PTR [edx+0x69f0bc37]
  41ca34:	call   0xb10ff2b2
  41ca39:	or     BYTE PTR [ecx-0x65],cl
  41ca3c:	fsubr  DWORD PTR [ebp-0xc]
  41ca3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca40:	mul    BYTE PTR [esi]
  41ca42:	dec    esp
  41ca43:	pop    ebx
  41ca44:	popf   
  41ca45:	cmp    ebp,ebx
  41ca47:	xor    DWORD PTR [edx],ecx
  41ca49:	xchg   edx,edx
  41ca4b:	jb     0x41c9d5
  41ca4d:	xor    al,ch
  41ca4f:	jns    0x41ca9b
  41ca51:	pop    esp
  41ca52:	aad    0xf1
  41ca54:	fst    DWORD PTR [ebx]
  41ca56:	xchg   edx,eax
  41ca57:	adc    eax,0x5c0563ca
  41ca5c:	inc    ebx
  41ca5d:	mov    eax,0xe7214f3
  41ca62:	mov    ch,0x30
  41ca64:	in     eax,dx
  41ca65:	in     al,dx
  41ca66:	out    0x0,al
  41ca68:	in     al,0x44
  41ca6a:	fdivr  DWORD PTR [ecx]
  41ca6c:	pop    ebp
  41ca6d:	loopne 0x41cadc
  41ca6f:	mov    esi,0x2c1c1d7e
  41ca74:	int3   
  41ca75:	sub    ecx,0xffffffca
  41ca78:	shl    BYTE PTR [esi],0xe3
  41ca7b:	and    al,0x89
  41ca7d:	pop    ecx
  41ca7e:	nop
  41ca7f:	bound  esi,QWORD PTR [eax+0x3a]
  41ca82:	pop    ecx
  41ca83:	cmp    ebp,DWORD PTR [ecx]
  41ca85:	rcr    DWORD PTR [ebx+ebp*4+0xd],cl
  41ca89:	mov    ch,0x66
  41ca8b:	fild   WORD PTR [edx]
  41ca8d:	add    ebp,edi
  41ca8f:	or     BYTE PTR [esi],bh
  41ca91:	push   0x8b0bda73
  41ca96:	test   BYTE PTR [edi+0x76],dl
  41ca99:	cmp    BYTE PTR [edi],bh
  41ca9b:	push   cs
  41ca9c:	pop    ebx
  41ca9d:	adc    esp,DWORD PTR [esi]
  41ca9f:	jecxz  0x41ca40
  41caa1:	fistp  QWORD PTR [eax+0x65]
  41caa4:	cmp    al,0x71
  41caa6:	or     dh,BYTE PTR [eax+0xf]
  41caa9:	pop    ebx
  41caaa:	push   0x69
  41caac:	and    ecx,DWORD PTR [ecx]
  41caae:	mov    ?,WORD PTR [esi-0x35]
  41cab1:	sbb    al,0x2a
  41cab3:	pop    ebx
  41cab4:	aas    
  41cab5:	retf   0x9391
  41cab8:	mov    esi,ss
  41caba:	mov    cl,0x5e
  41cabc:	mov    ds:0x6817a40,al
  41cac1:	xor    DWORD PTR [eax+0x4c],0x60691e23
  41cac8:	push   ss
  41cac9:	ss pop ecx
  41cacb:	adc    eax,0x99ff45ba
  41cad0:	mov    bh,0x9f
  41cad2:	adc    bl,BYTE PTR [edi+0x29]
  41cad5:	push   0xffffffc1
  41cad7:	mov    ds:0xd94f37f4,eax
  41cadc:	push   edx
  41cadd:	out    dx,al
  41cade:	shl    ebp,cl
  41cae0:	mov    cl,0x99
  41cae2:	jl     0x41cb55
  41cae4:	lds    esp,FWORD PTR [ecx]
  41cae6:	je     0x41cace
  41cae8:	sub    DWORD PTR [ecx],0xb3685f6e
  41caee:	or     BYTE PTR [ecx],bh
  41caf0:	inc    edi
  41caf1:	adc    BYTE PTR [ebp-0x7e],dh
  41caf4:	out    0xea,eax
  41caf6:	push   eax
  41caf7:	int    0xfd
  41caf9:	push   eax
  41cafa:	adc    BYTE PTR [edi+0x129a39ea],ah
  41cb00:	cmp    ebx,DWORD PTR [ebx+esi*1]
  41cb03:	inc    edi
  41cb04:	test   BYTE PTR cs:[edx+0x37a313dc],bl
  41cb0b:	mov    edi,0xc935bbfa
  41cb10:	fst    DWORD PTR [esi+edx*4-0x71e1c00d]
  41cb17:	test   cl,bl
  41cb19:	add    DWORD PTR [ecx-0x2a],0x826a727
  41cb20:	jne    0x41cb58
  41cb22:	int    0x50
  41cb24:	stos   DWORD PTR es:[edi],eax
  41cb25:	in     eax,0xce
  41cb27:	addr16 jne 0x41cb7f
  41cb2a:	sub    BYTE PTR [edx-0x7f],ah
  41cb2d:	gs popf 
  41cb2f:	mov    eax,ds:0xb69e63ce
  41cb34:	cld    
  41cb35:	mov    ss,WORD PTR [eax]
  41cb37:	pop    ebp
  41cb38:	fist   DWORD PTR gs:[edx-0x26]
  41cb3c:	xor    DWORD PTR [edi+ebx*8+0x6],ebx
  41cb40:	sbb    edi,DWORD PTR [esi]
  41cb42:	sahf   
  41cb43:	je     0x41cb9e
  41cb45:	dec    edi
  41cb46:	dec    ebp
  41cb47:	xchg   ecx,eax
  41cb48:	adc    al,0xc
  41cb4a:	mov    edi,0xc35b5341
  41cb4f:	jge    0x41cafc
  41cb51:	mov    gs,edx
  41cb53:	aad    0xd7
  41cb55:	dec    ecx
  41cb56:	mov    esp,DWORD PTR [esi-0x46]
  41cb59:	adc    DWORD PTR [edi-0x2a09d8a1],esi
  41cb5f:	fcomip st,st(4)
  41cb61:	dec    edi
  41cb62:	rcr    DWORD PTR [ebp+0xb],1
  41cb65:	jns    0x41cb6e
  41cb67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb68:	jbe    0x41cb9b
  41cb6a:	fidiv  DWORD PTR [ebx]
  41cb6c:	sub    al,0xbb
  41cb6e:	int    0x53
  41cb70:	xor    bh,BYTE PTR [esi]
  41cb72:	test   eax,0xeb1e1af1
  41cb77:	ret    
  41cb78:	mov    ebx,0x2e4b4b52
  41cb7d:	pop    ds
  41cb7e:	ins    DWORD PTR es:[edi],dx
  41cb7f:	test   ebp,ecx
  41cb81:	adc    ecx,DWORD PTR [ebx+0x2f]
  41cb84:	pop    ecx
  41cb85:	pop    esp
  41cb86:	das    
  41cb87:	retf   0xbede
  41cb8a:	dec    ebx
  41cb8b:	cwde   
  41cb8c:	test   BYTE PTR [ecx+0x30],0x46
  41cb90:	cld    
  41cb91:	shl    BYTE PTR [edx],cl
  41cb93:	loop   0x41cb18
  41cb95:	scas   al,BYTE PTR es:[edi]
  41cb96:	int    0x2c
  41cb98:	xor    eax,0xf6134a7d
  41cb9d:	sub    al,0x90
  41cb9f:	add    eax,0x8bda6f07
  41cba4:	pusha  
  41cba5:	mov    DWORD PTR [eax+0x203a58ab],eax
  41cbab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbac:	test   eax,0xd8611f4a
  41cbb1:	and    ebp,DWORD PTR [edi-0x64]
  41cbb4:	in     al,0x0
  41cbb6:	mov    cl,0xc5
  41cbb8:	ds mov dl,0x1b
  41cbbb:	add    BYTE PTR [edx+0x77bb591],0x27
  41cbc2:	dec    eax
  41cbc3:	push   es
  41cbc4:	retf   
  41cbc5:	fisubr DWORD PTR [ebx]
  41cbc7:	add    cl,bh
  41cbc9:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41cbcb:	ret    0x8d3a
  41cbce:	ss inc esp
  41cbd0:	xchg   DWORD PTR [ebx],esi
  41cbd2:	imul   esp,DWORD PTR [eax+0x59f9b868],0x40
  41cbd9:	mov    ebp,0x9f6cacc8
  41cbde:	popa   
  41cbdf:	xchg   BYTE PTR [esi+0x24],al
  41cbe2:	adc    al,0xfb
  41cbe4:	xor    eax,0x23187985
  41cbe9:	call   0x2d40:0x7d851a1c
  41cbf0:	(bad)  
  41cbf1:	cmp    DWORD PTR [eax-0x7afa7863],ecx
  41cbf7:	jle    0x41cc18
  41cbf9:	jns    0x41cc3b
  41cbfb:	loop   0x41cbe4
  41cbfd:	cmc    
  41cbfe:	bound  ecx,QWORD PTR [edi+0x3]
  41cc01:	leave  
  41cc02:	jge    0x41cc5a
  41cc04:	dec    eax
  41cc05:	adc    BYTE PTR [esi-0x56],ch
  41cc08:	jb     0x41cc80
  41cc0a:	or     eax,DWORD PTR [ecx+0x4577264f]
  41cc10:	cld    
  41cc11:	mov    esi,0xc5ba3fcd
  41cc16:	fadd   DWORD PTR ds:[ebx]
  41cc19:	jl     0x41cbc3
  41cc1b:	mov    ds:0x77d77572,al
  41cc20:	es fwait
  41cc22:	xchg   ebp,eax
  41cc23:	sbb    DWORD PTR [edx-0x3a2a354f],esp
  41cc29:	mov    edx,0x4bfee287
  41cc2e:	jecxz  0x41cbce
  41cc30:	sub    edi,DWORD PTR [edx]
  41cc32:	and    al,BYTE PTR [ebx-0x34]
  41cc35:	ds callw 0x599f
  41cc3a:	ds dec esi
  41cc3c:	mov    esp,0x84e1dc93
  41cc41:	xchg   edi,eax
  41cc42:	mov    DWORD PTR [ebx],eax
  41cc44:	cwde   
  41cc45:	add    DWORD PTR [ebx-0x5e4c1fec],esi
  41cc4b:	stos   DWORD PTR es:[edi],eax
  41cc4c:	in     al,dx
  41cc4d:	jl     0x41cc52
  41cc4f:	mov    ds:0x8259079,al
  41cc54:	add    eax,0x432a0ed8
  41cc59:	dec    esi
  41cc5a:	(bad)  
  41cc5b:	fcom   QWORD PTR [edx-0x29ec55cf]
  41cc61:	sbb    ebp,DWORD PTR [esi+0x77a90a46]
  41cc67:	int3   
  41cc68:	jge    0x41ccc3
  41cc6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc6b:	add    ebx,edx
  41cc6d:	(bad)  
  41cc6e:	icebp  
  41cc6f:	adc    esi,DWORD PTR [ecx]
  41cc71:	pop    eax
  41cc72:	ret    0x594c
  41cc75:	mov    ecx,0xe93a9447
  41cc7a:	adc    BYTE PTR [ebp-0x42],0x7a
  41cc7e:	fild   QWORD PTR [esi]
  41cc80:	enter  0x3f,0x24
  41cc84:	mov    edx,0x607538e0
  41cc89:	xor    esi,DWORD PTR [edx-0x44]
  41cc8c:	push   ds
  41cc8d:	lods   eax,DWORD PTR ds:[esi]
  41cc8e:	mov    WORD PTR [esi+0xe],fs
  41cc91:	add    dh,cl
  41cc93:	fmul   QWORD PTR [ebx]
  41cc95:	sub    DWORD PTR [edi],ebx
  41cc97:	dec    eax
  41cc98:	das    
  41cc99:	cmp    DWORD PTR [esi+0x42],esi
  41cc9c:	into   
  41cc9d:	add    eax,0x4bacb103
  41cca2:	mov    ds:0x8359fff4,eax
  41cca7:	imul   ah
  41cca9:	nop
  41ccaa:	pusha  
  41ccab:	or     DWORD PTR [ecx-0x6c],ebx
  41ccae:	clc    
  41ccaf:	push   eax
  41ccb0:	call   0x6244:0x5f5878d
  41ccb7:	cld    
  41ccb8:	jg     0x41ccd6
  41ccba:	jmp    0x9345:0xd2561504
  41ccc1:	dec    eax
  41ccc2:	sub    ch,ah
  41ccc4:	out    0x73,al
  41ccc6:	add    eax,0x9fb9de62
  41cccb:	fisubr DWORD PTR [eax-0x3f]
  41ccce:	mov    ds:0x23277fed,eax
  41ccd3:	test   BYTE PTR [eax+0x2afdfa07],0x4
  41ccda:	or     ah,0xbe
  41ccdd:	dec    edi
  41ccde:	mov    DWORD PTR [esi+0x48b9c4d6],ebx
  41cce4:	cmp    esp,DWORD PTR ds:0x64592a2b
  41ccea:	fwait
  41cceb:	xor    eax,0x6cc06acb
  41ccf0:	sbb    eax,0xdd5c842b
  41ccf5:	repnz mov eax,esp
  41ccf8:	test   al,0xb9
  41ccfa:	jl     0x41ccb3
  41ccfc:	shr    cl,1
  41ccfe:	adc    ecx,DWORD PTR [ecx+0x49]
  41cd01:	iret   
  41cd02:	test   BYTE PTR [ecx],al
  41cd04:	div    BYTE PTR ds:0xf63138e1
  41cd0a:	ds dec ebx
  41cd0c:	pop    ss
  41cd0d:	push   eax
  41cd0e:	mov    ebx,0x81e2a936
  41cd13:	jo     0x41ccf7
  41cd15:	xchg   ecx,eax
  41cd16:	mov    DWORD PTR [esp-0x61],ebx
  41cd1a:	push   0xc0a721a2
  41cd1f:	lock scas al,BYTE PTR es:[edi]
  41cd21:	push   ds
  41cd22:	inc    eax
  41cd23:	pop    ecx
  41cd24:	sbb    edx,DWORD PTR [ebx+0x28020d8b]
  41cd2a:	push   cs
  41cd2b:	test   eax,0xb83d10a4
  41cd30:	and    esp,ebx
  41cd32:	inc    eax
  41cd33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd34:	pusha  
  41cd35:	mov    edx,0x919db9d2
  41cd3a:	cs xchg esi,eax
  41cd3c:	mov    esi,0xb8c71c35
  41cd41:	lods   eax,DWORD PTR ds:[esi]
  41cd42:	xchg   esp,eax
  41cd43:	(bad)  
  41cd44:	sbb    ecx,ecx
  41cd46:	idiv   DWORD PTR [eax+ebp*1+0x79aeed8a]
  41cd4d:	sbb    eax,0x97a583cc
  41cd52:	sub    DWORD PTR [edi],esp
  41cd54:	or     DWORD PTR [edx+ebp*8],esi
  41cd57:	pop    ebp
  41cd58:	(bad)  
  41cd59:	out    0x1f,eax
  41cd5b:	sbb    al,0xb1
  41cd5d:	mov    gs,ebx
  41cd5f:	xor    bh,BYTE PTR [esp+ecx*4-0x4b]
  41cd63:	clc    
  41cd64:	and    al,0x52
  41cd66:	mov    ebp,0xd7479739
  41cd6b:	ins    DWORD PTR es:[edi],dx
  41cd6c:	fld    TBYTE PTR [ebx+ebp*8]
  41cd6f:	(bad)  
  41cd70:	dec    edx
  41cd71:	dec    ecx
  41cd72:	fs test eax,0x34cac4fa
  41cd78:	sub    BYTE PTR [edi],ch
  41cd7a:	mov    ch,0x41
  41cd7c:	sub    dl,BYTE PTR ds:0x7b7e8ab6
  41cd82:	cmp    eax,0x813e84ea
  41cd87:	mov    ebx,0xaa3c3a1
  41cd8c:	sbb    ah,dh
  41cd8e:	push   cs
  41cd8f:	add    ebp,edx
  41cd91:	mov    ds:0x7cda6145,eax
  41cd96:	pop    ecx
  41cd97:	ror    BYTE PTR [ebp-0x3f],1
  41cd9a:	jg     0x41cd7d
  41cd9c:	and    edi,DWORD PTR [ecx+0x506a903b]
  41cda2:	xor    esi,DWORD PTR [edx]
  41cda4:	(bad)  
  41cda5:	or     edx,DWORD PTR [ebx-0x7018ec19]
  41cdab:	adc    DWORD PTR [eax+0x55],esp
  41cdae:	mov    dh,0x28
  41cdb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdb1:	and    cl,bl
  41cdb3:	add    al,bh
  41cdb5:	push   ecx
  41cdb6:	adc    edx,edx
  41cdb8:	cmp    eax,0xefcddbf5
  41cdbd:	loope  0x41cdb0
  41cdbf:	ins    DWORD PTR es:[edi],dx
  41cdc0:	or     ebx,esi
  41cdc2:	pop    edx
  41cdc3:	push   ecx
  41cdc4:	jg     0x41cdc5
  41cdc6:	fld    DWORD PTR ds:0xc0a33bf3
  41cdcc:	xchg   ecx,eax
  41cdcd:	add    edx,ecx
  41cdcf:	ss inc esi
  41cdd1:	test   DWORD PTR [edx-0x25],0x6a877d44
  41cdd8:	nop
  41cdd9:	inc    ebx
  41cdda:	lds    ebx,FWORD PTR gs:[ebp-0xc8b1295]
  41cde1:	lgs    ecx,FWORD PTR [edx-0x7a]
  41cde5:	mov    esi,0xb342eafc
  41cdea:	call   0xf623:0x1459da34
  41cdf1:	enter  0xf161,0x5f
  41cdf5:	pop    es
  41cdf6:	jp     0x41cd78
  41cdf8:	(bad)  
  41cdf9:	sub    DWORD PTR [ecx-0x56],eax
  41cdfc:	mov    al,ds:0xe4be22c9
  41ce01:	in     al,dx
  41ce02:	cli    
  41ce03:	mov    eax,ds:0x10b906bd
  41ce08:	and    al,0x23
  41ce0a:	mov    bh,0xcc
  41ce0c:	push   0xffffff82
  41ce0e:	jbe    0x41ce58
  41ce10:	mov    DWORD PTR [ebx+ebx*1-0x3712f572],ecx
  41ce17:	into   
  41ce18:	lds    eax,FWORD PTR [edi+0x6a0bbf63]
  41ce1e:	repz dec esp
  41ce20:	imul   ebx,DWORD PTR [ebx+0x7bcc9e2b],0x35805259
  41ce2a:	into   
  41ce2b:	je     0x41ce05
  41ce2d:	(bad)  
  41ce2e:	and    BYTE PTR [edi],ah
  41ce30:	dec    ebp
  41ce31:	cmp    dl,BYTE PTR [edx+0x25]
  41ce34:	inc    edi
  41ce35:	lahf   
  41ce36:	xor    esi,eax
  41ce38:	mov    eax,ds:0xf88091ed
  41ce3d:	inc    eax
  41ce3e:	sahf   
  41ce3f:	mov    dl,0x1b
  41ce41:	pop    ss
  41ce42:	jmp    0x41cdec
  41ce44:	gs jne 0x41cdec
  41ce47:	mov    ebx,0x7346c24a
  41ce4c:	mov    bl,0x24
  41ce4e:	gs in  eax,dx
  41ce50:	xchg   DWORD PTR [edi-0x4f],eax
  41ce53:	bswap  eax
  41ce55:	jl     0x41ce80
  41ce57:	or     ch,BYTE PTR [eax+0x6d]
  41ce5a:	in     al,dx
  41ce5b:	push   ss
  41ce5c:	call   FWORD PTR [esi-0x54]
  41ce5f:	mov    ds:0xb3d64c20,al
  41ce64:	dec    ebp
  41ce65:	pop    ecx
  41ce66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce67:	add    eax,0x947a3088
  41ce6c:	and    DWORD PTR [eax+eiz*4+0x19400c68],ecx
  41ce73:	(bad)  
  41ce74:	sbb    DWORD PTR [edx-0x19590a96],eax
  41ce7a:	call   0x992a1c02
  41ce7f:	or     dh,BYTE PTR [eax-0x5f]
  41ce82:	xor    al,0x8c
  41ce84:	imul   ebp,DWORD PTR [edx],0xffffffd7
  41ce87:	rcl    bh,1
  41ce89:	mov    ?,WORD PTR [edx-0xe]
  41ce8c:	mov    edx,DWORD PTR [ebx+ecx*2+0x68]
  41ce90:	xor    DWORD PTR [edx],ebx
  41ce92:	and    esi,esi
  41ce94:	and    ebx,esi
  41ce96:	ds repz mov esi,0xcffc498d
  41ce9d:	std    
  41ce9e:	sub    bh,al
  41cea0:	or     al,0x4f
  41cea2:	or     esp,DWORD PTR [esi]
  41cea4:	mov    ah,0x31
  41cea6:	inc    edx
  41cea7:	push   cs
  41cea8:	mov    al,0x85
  41ceaa:	jae    0x41cebb
  41ceac:	icebp  
  41cead:	mov    esi,0xb76bf5b3
  41ceb2:	adc    esp,DWORD PTR [eax+0x8]
  41ceb5:	popf   
  41ceb6:	sbb    DWORD PTR [eax+0x48546aa9],esp
  41cebc:	xor    eax,0x9d22be9f
  41cec2:	lods   al,BYTE PTR ds:[esi]
  41cec3:	in     eax,0x91
  41cec5:	xchg   edi,eax
  41cec6:	cmp    BYTE PTR [eax],dl
  41cec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cec9:	retf   0x13e8
  41cecc:	loop   0x41ce4e
  41cece:	outs   dx,BYTE PTR ds:[esi]
  41cecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ced0:	ficom  DWORD PTR [ebx]
  41ced2:	jbe    0x41cf1e
  41ced4:	adc    eax,0x75872bfe
  41ced9:	popf   
  41ceda:	gs stos DWORD PTR es:[edi],eax
  41cedc:	in     eax,0x87
  41cede:	out    dx,eax
  41cedf:	in     al,0x59
  41cee1:	pop    eax
  41cee2:	mov    ebp,0xe13f961f
  41cee7:	in     eax,0xed
  41cee9:	fcomip st,st(5)
  41ceeb:	fwait
  41ceec:	imul   ebp,DWORD PTR [edi-0x310d8c56],0xffffff8f
  41cef3:	xor    ah,BYTE PTR [edi-0x4e]
  41cef6:	in     eax,0x91
  41cef8:	pop    esp
  41cef9:	xor    DWORD PTR [esi],esi
  41cefb:	or     BYTE PTR [ecx-0x663c2b],dh
  41cf01:	jp     0x41cf43
  41cf03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf04:	lahf   
  41cf05:	push   ecx
  41cf06:	mov    dh,0x70
  41cf08:	jg     0x41cf3b
  41cf0a:	xlat   BYTE PTR ds:[ebx]
  41cf0b:	retf   
  41cf0c:	pop    es
  41cf0d:	pop    esi
  41cf0e:	sub    al,0x52
  41cf10:	sub    esi,DWORD PTR [ebx]
  41cf12:	icebp  
  41cf13:	aad    0xe5
  41cf15:	(bad)  
  41cf17:	iret   
  41cf18:	(bad)  
  41cf19:	icebp  
  41cf1a:	arpl   WORD PTR [edi],bp
  41cf1c:	and    ebp,ebx
  41cf1e:	cmp    edx,DWORD PTR [edi+eiz*1-0x6b8a56e0]
  41cf25:	jecxz  0x41cf33
  41cf27:	push   esi
  41cf28:	jmp    0xc344:0xe4673df8
  41cf2f:	in     eax,0x72
  41cf31:	stc    
  41cf32:	shr    ebx,1
  41cf34:	jns    0x41cefe
  41cf36:	or     dl,BYTE PTR [edi-0x70]
  41cf39:	xor    edi,DWORD PTR [ebx+eiz*2]
  41cf3c:	jle    0x41cee2
  41cf3e:	dec    eax
  41cf3f:	in     al,dx
  41cf40:	icebp  
  41cf41:	nop
  41cf42:	push   ss
  41cf43:	scas   eax,DWORD PTR es:[edi]
  41cf44:	fidiv  DWORD PTR [ebx-0xe]
  41cf47:	je     0x41cfba
  41cf49:	std    
  41cf4a:	addr16 mov al,ds:0xfeec
  41cf4e:	pop    ds
  41cf4f:	dec    eax
  41cf50:	and    al,0xab
  41cf52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf53:	cmp    eax,0x85574ec0
  41cf58:	dec    ebx
  41cf59:	add    dl,BYTE PTR [edx]
  41cf5b:	test   BYTE PTR [eax-0x20],ah
  41cf5e:	xchg   esi,eax
  41cf5f:	mov    esp,0x322f6eb5
  41cf64:	iret   
  41cf65:	stc    
  41cf66:	jno    0x41cfa8
  41cf68:	cld    
  41cf69:	out    dx,eax
  41cf6a:	scas   eax,DWORD PTR es:[edi]
  41cf6b:	in     al,0x37
  41cf6d:	push   ds
  41cf6e:	mov    cl,0xdc
  41cf70:	jno    0x41cfdd
  41cf72:	or     al,0x71
  41cf74:	and    al,0xe6
  41cf76:	ins    BYTE PTR es:[edi],dx
  41cf77:	fnstsw WORD PTR [edx-0x6c]
  41cf7a:	cwde   
  41cf7b:	push   edx
  41cf7c:	lods   eax,DWORD PTR ds:[esi]
  41cf7d:	aas    
  41cf7e:	xchg   ebp,eax
  41cf7f:	sub    DWORD PTR [esp+ecx*2+0x4],ebx
  41cf83:	imul   ebx,DWORD PTR [esi],0x48
  41cf86:	dec    edi
  41cf87:	data16 fwait
  41cf89:	xchg   edx,eax
  41cf8a:	mov    ds:0x38caf50e,al
  41cf8f:	mov    WORD PTR ds:0x6144304c,ds
  41cf95:	aas    
  41cf96:	add    cl,cl
  41cf98:	and    DWORD PTR [ecx],eax
  41cf9a:	sbb    al,0x1f
  41cf9c:	fwait
  41cf9d:	ins    BYTE PTR es:[edi],dx
  41cf9e:	add    DWORD PTR [esp+ebx*1+0x30],eax
  41cfa2:	in     al,dx
  41cfa3:	add    DWORD PTR [eax],ebp
  41cfa5:	pushf  
  41cfa6:	sti    
  41cfa7:	inc    edi
  41cfa8:	lock imul cx,WORD PTR [eax],0xffa0
  41cfad:	and    eax,0x2c3333b6
  41cfb2:	pop    ebp
  41cfb3:	xchg   ebx,eax
  41cfb4:	adc    DWORD PTR [ebx+0x5c],ebx
  41cfb7:	arpl   WORD PTR [edx],bp
  41cfb9:	push   ebx
  41cfba:	les    ebx,FWORD PTR [eax-0xe644993]
  41cfc0:	fwait
  41cfc1:	retf   
  41cfc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfc3:	retf   
  41cfc4:	out    dx,al
  41cfc5:	pop    ecx
  41cfc6:	aad    0x18
  41cfc8:	lock clc 
  41cfca:	dec    ecx
  41cfcb:	pop    esi
  41cfcc:	or     eax,0x8b8e2d69
  41cfd1:	fxch   st(3)
  41cfd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfd4:	fisub  WORD PTR [ebx+0x8]
  41cfd7:	cmc    
  41cfd8:	lahf   
  41cfd9:	in     al,dx
  41cfda:	repnz sahf 
  41cfdc:	or     DWORD PTR [edx],ecx
  41cfde:	lea    edi,[ebx-0x63340335]
  41cfe4:	(bad)  
  41cfe5:	fisttp DWORD PTR [esi+0x1df97828]
  41cfeb:	ret    
  41cfec:	cmp    BYTE PTR ds:0x5b4804b4,0x5d
  41cff3:	jne    0x41d02e
  41cff5:	std    
  41cff6:	pop    ecx
  41cff7:	sbb    DWORD PTR [eax],eax
  41cff9:	xchg   edx,eax
  41cffa:	aas    
  41cffb:	adc    ah,al
  41cffd:	sub    eax,0x412222e2
  41d002:	or     al,0x27
  41d004:	(bad)  
  41d006:	test   eax,0xf35f5bc9
  41d00b:	and    dl,BYTE PTR [eax]
  41d00d:	mov    ebx,0x5b243ca5
  41d012:	fsubrp st(7),st
  41d014:	test   BYTE PTR [esi+0x7d],ah
  41d017:	call   0x4cb8:0x53af9f19
  41d01e:	xchg   ecx,eax
  41d01f:	sbb    BYTE PTR [ebp-0x6a51d02e],ch
  41d025:	repnz push bp
  41d028:	cmp    cl,BYTE PTR [ebp-0x1316c1ac]
  41d02e:	fistp  DWORD PTR [eax-0x41]
  41d031:	inc    ebx
  41d032:	shr    BYTE PTR [ecx],cl
  41d034:	test   eax,0x4537f071
  41d039:	xchg   ebp,eax
  41d03a:	and    ch,BYTE PTR gs:[ebp+ebp*1-0x66]
  41d03f:	es cmc 
  41d041:	ja     0x41cfc3
  41d043:	mov    eax,ds:0x19097516
  41d048:	push   eax
  41d049:	fld    QWORD PTR [edi]
  41d04b:	mov    es,edx
  41d04d:	jp     0x41cff9
  41d04f:	in     eax,dx
  41d050:	mov    ebp,DWORD PTR [edx+0x37]
  41d053:	cld    
  41d054:	fcmove st,st(3)
  41d056:	jl     0x41d0a4
  41d058:	call   0xae5311b7
  41d05d:	sbb    dh,BYTE PTR [edx]
  41d05f:	sub    BYTE PTR [esi-0x4f1de7b3],dh
  41d065:	(bad)  
  41d066:	cmc    
  41d067:	outs   dx,DWORD PTR ds:[esi]
  41d068:	inc    edx
  41d069:	leave  
  41d06a:	mov    cl,0xab
  41d06c:	sbb    al,0xa4
  41d06e:	or     DWORD PTR [eax],esi
  41d070:	int3   
  41d071:	sbb    edx,eax
  41d073:	add    al,BYTE PTR [edi-0x24]
  41d076:	dec    ebx
  41d077:	and    cl,BYTE PTR [esi+0x5024095a]
  41d07d:	cmp    esp,DWORD PTR [ebx-0x2e8856eb]
  41d083:	jle    0x41d08c
  41d085:	inc    edx
  41d086:	cs inc ebp
  41d088:	push   ecx
  41d089:	div    DWORD PTR [eax]
  41d08b:	adc    al,0xaf
  41d08d:	xor    BYTE PTR [ecx],al
  41d08f:	jmp    0x41d052
  41d091:	mov    eax,0x131c5ca3
  41d096:	loop   0x41d09f
  41d098:	push   esi
  41d099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d09a:	sbb    al,0x35
  41d09c:	sub    bh,ch
  41d09e:	jle    0x41d0f2
  41d0a0:	jle    0x41d058
  41d0a2:	pop    ds
  41d0a3:	sbb    al,0xb7
  41d0a5:	daa    
  41d0a6:	repz int 0x21
  41d0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0ab:	and    al,0x69
  41d0ad:	ja     0x41d0b2
  41d0af:	inc    ecx
  41d0b0:	aaa    
  41d0b1:	mov    dl,0x7f
  41d0b3:	push   cs
  41d0b4:	mov    gs,WORD PTR [esi]
  41d0b6:	jo     0x41d049
  41d0b8:	jp     0x41d03a
  41d0ba:	adc    DWORD PTR [ecx-0x53],ecx
  41d0bd:	push   cs
  41d0be:	push   ss
  41d0bf:	mov    esp,0x57a438d7
  41d0c4:	es pop ds
  41d0c6:	push   esp
  41d0c7:	xchg   edi,eax
  41d0c8:	stos   DWORD PTR es:[edi],eax
  41d0c9:	add    al,0xcd
  41d0cb:	mov    cl,0x69
  41d0cd:	dec    edx
  41d0ce:	sub    DWORD PTR [eax+ebp*1],0x544367d4
  41d0d5:	mov    dh,0x42
  41d0d7:	repz cld 
  41d0d9:	pop    eax
  41d0da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0db:	retf   
  41d0dc:	cmp    eax,0xdc87405f
  41d0e1:	sub    DWORD PTR [eax+0x59],ebx
  41d0e4:	ins    DWORD PTR es:[edi],dx
  41d0e5:	bound  edi,QWORD PTR [eax+0x263620ce]
  41d0eb:	push   edx
  41d0ec:	jae    0x41d0b0
  41d0ee:	sar    DWORD PTR [esp+edx*8-0x7a],1
  41d0f2:	int    0xd9
  41d0f4:	pusha  
  41d0f5:	adc    DWORD PTR [eax],edx
  41d0f7:	cdq    
  41d0f8:	(bad)  
  41d0fa:	mov    edi,DWORD PTR ds:0xeed9427e
  41d100:	jb     0x41d137
  41d102:	adc    BYTE PTR [eax+ebp*8],dl
  41d105:	shl    BYTE PTR [ecx+0x6e539837],cl
  41d10b:	cdq    
  41d10c:	jmp    0x1a46:0xa870ada9
  41d113:	and    BYTE PTR [edi+eiz*1+0x46],ah
  41d117:	push   ds
  41d118:	mov    ecx,0xaa62cb1f
  41d11d:	out    0xf8,al
  41d11f:	pop    es
  41d120:	mov    dl,0x90
  41d122:	inc    edi
  41d123:	pop    esi
  41d124:	xchg   esp,eax
  41d125:	(bad)  
  41d126:	into   
  41d127:	adc    DWORD PTR [ecx],edx
  41d129:	pop    edx
  41d12a:	dec    ebp
  41d12b:	ss leave 
  41d12d:	fiadd  WORD PTR [eax]
  41d12f:	aad    0x5
  41d131:	call   0x1d54:0x6a253161
  41d138:	ss jo  0x41d18c
  41d13b:	add    ch,BYTE PTR [edi]
  41d13d:	or     al,0x7a
  41d13f:	sbb    BYTE PTR [ecx-0x6f],bh
  41d142:	cs mov al,0x4a
  41d145:	lahf   
  41d146:	imul   edi,DWORD PTR ss:[edi],0xc4f63647
  41d14d:	inc    ecx
  41d14e:	xor    DWORD PTR [ebx-0x3b2c5478],eax
  41d154:	sbb    al,ch
  41d156:	cmp    esp,esi
  41d158:	pop    esi
  41d159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d15a:	pop    ss
  41d15b:	inc    ebp
  41d15c:	mov    WORD PTR [ebx-0x1d],fs
  41d15f:	and    dl,dl
  41d161:	xor    eax,0x89b2ad36
  41d166:	xor    BYTE PTR [eax],al
  41d168:	xchg   ebp,eax
  41d169:	mov    bl,dh
  41d16b:	rcr    DWORD PTR [ebx+0x12],0x10
  41d16f:	(bad)  
  41d170:	jmp    0x2410d546
  41d175:	retf   0x4d89
  41d178:	mov    ah,0x8b
  41d17a:	dec    ebp
  41d17b:	or     BYTE PTR [ebx-0x737247ab],cl
  41d181:	or     bl,BYTE PTR [edi]
  41d183:	cld    
  41d184:	inc    ecx
  41d185:	add    cl,BYTE PTR [ecx+0x4d8bb84d]
  41d18b:	or     BYTE PTR [edx-0x5a1ea1e],bh
  41d191:	sub    edx,ecx
  41d193:	add    edx,DWORD PTR [ebp-0x44]
  41d196:	mov    DWORD PTR [ebp-0x44],edx
  41d199:	mov    ecx,DWORD PTR [ebp+0x8]
  41d19c:	xor    ecx,eax
  41d19e:	add    ecx,esi
  41d1a0:	jne    0x418a01
  41d1a6:	jmp    0x41d238
  41d1ab:	mov    ecx,DWORD PTR [ebp+0x8]
  41d1ae:	mov    edx,DWORD PTR [ebp-0x8]
  41d1b1:	xor    ecx,eax
  41d1b3:	xor    edx,eax
  41d1b5:	sub    ecx,edx
  41d1b7:	sub    ecx,esi
  41d1b9:	xor    ecx,eax
  41d1bb:	mov    DWORD PTR [ebp+0x8],ecx
  41d1be:	mov    ecx,DWORD PTR [ebp+0x8]
  41d1c1:	mov    edx,DWORD PTR [ebp-0x58]
  41d1c4:	add    ecx,0x5708c4
  41d1ca:	imul   ecx,edx
  41d1cd:	mov    DWORD PTR [ebp-0x58],ecx
  41d1d0:	mov    ecx,DWORD PTR [ebp+0x8]
  41d1d3:	mov    edx,DWORD PTR [ebp-0x54]
  41d1d6:	add    ecx,0x64f8a2
  41d1dc:	or     ecx,edx
  41d1de:	mov    DWORD PTR [ebp-0x54],ecx
  41d1e1:	mov    ecx,DWORD PTR [ebp+0x8]
  41d1e4:	mov    edx,DWORD PTR [ebp-0x50]
  41d1e7:	add    ecx,0x242ebf1
  41d1ed:	xor    ecx,edx
  41d1ef:	mov    DWORD PTR [ebp-0x50],ecx
  41d1f2:	mov    ecx,DWORD PTR [ebp+0x8]
  41d1f5:	mov    edx,DWORD PTR [ebp-0x4c]
  41d1f8:	add    ecx,edi
  41d1fa:	and    ecx,edx
  41d1fc:	mov    DWORD PTR [ebp-0x4c],ecx
  41d1ff:	mov    ecx,DWORD PTR [ebp+0x8]
  41d202:	mov    edx,DWORD PTR [ebp-0x48]
  41d205:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41d20c:	mov    DWORD PTR [ebp-0x48],ecx
  41d20f:	mov    ecx,DWORD PTR [ebp+0x8]
  41d212:	mov    edx,0xfa5e15e2
  41d217:	sub    edx,ecx
  41d219:	add    edx,DWORD PTR [ebp-0x44]
  41d21c:	mov    DWORD PTR [ebp-0x44],edx
  41d21f:	mov    ecx,DWORD PTR [ebp+0x8]
  41d222:	xor    ecx,eax
  41d224:	add    ecx,esi
  41d226:	jne    0x41d1ab
  41d22c:	mov    ecx,DWORD PTR [ebp-0x8]
  41d22f:	xor    ecx,eax
  41d231:	mov    eax,DWORD PTR [ebp+0x10]
  41d234:	add    ecx,esi
  41d236:	mov    DWORD PTR [eax],ecx
  41d238:	pop    edi
  41d239:	pop    esi
  41d23a:	pop    ebx
  41d23b:	leave  
  41d23c:	ret    0xc
  41d23f:	add    BYTE PTR [eax+0x42],ah
  41d242:	add    BYTE PTR [eax+eiz*2],al
  41d245:	inc    edx
  41d246:	add    BYTE PTR [eax],cl
  41d248:	pusha  
  41d249:	inc    edx
  41d24a:	add    BYTE PTR [eax+eiz*2],cl
  41d24d:	inc    edx
  41d24e:	add    BYTE PTR [eax],dl
  41d250:	pusha  
  41d251:	inc    edx
  41d252:	add    BYTE PTR [eax+eiz*2],dl
  41d255:	inc    edx
  41d256:	add    BYTE PTR [eax],bl
  41d258:	pusha  
  41d259:	inc    edx
  41d25a:	add    BYTE PTR [eax+eiz*2],bl
  41d25d:	inc    edx
  41d25e:	add    BYTE PTR [eax],ah
  41d260:	pusha  
  41d261:	inc    edx
  41d262:	add    BYTE PTR [eax+eiz*2],ah
  41d265:	inc    edx
  41d266:	add    BYTE PTR [eax],ch
  41d268:	pusha  
  41d269:	inc    edx
  41d26a:	add    BYTE PTR [eax],al
  41d26c:	add    BYTE PTR [edx+0x0],0x4
  41d270:	add    BYTE PTR [edx+0x0],0x8
  41d274:	add    BYTE PTR [edx+0x0],0xc
  41d278:	add    BYTE PTR [edx+0x0],0x10
  41d27c:	add    BYTE PTR [edx+0x0],0x14
  41d280:	add    BYTE PTR [edx+0x0],0x18
  41d284:	add    BYTE PTR [edx+0x0],0x1c
  41d288:	add    BYTE PTR [edx+0x0],0x0
  41d28c:	jo     0x41d2d0
  41d28e:	add    BYTE PTR [eax+esi*2],al
  41d291:	inc    edx
  41d292:	add    BYTE PTR [eax],cl
  41d294:	jo     0x41d2d8
  41d296:	add    BYTE PTR [eax+esi*2],cl
  41d299:	inc    edx
  41d29a:	add    BYTE PTR [eax],dl
  41d29c:	jo     0x41d2e0
  41d29e:	add    BYTE PTR [eax+esi*2],dl
  41d2a1:	inc    edx
  41d2a2:	add    BYTE PTR [eax],bl
  41d2a4:	jo     0x41d2e8
  41d2a6:	add    BYTE PTR [eax+esi*2],bl
  41d2a9:	inc    edx
	...
  41d2b2:	add    BYTE PTR [eax],al
  41d2b4:	stc    
  41d2b5:	clc    
  41d2b6:	sbb    cl,BYTE PTR [ebp+0x0]
  41d2b9:	add    BYTE PTR [eax],al
  41d2bb:	add    BYTE PTR [edx],al
  41d2bd:	add    BYTE PTR [eax],al
  41d2bf:	add    BYTE PTR [esi],bh
  41d2c1:	add    BYTE PTR [eax],al
  41d2c3:	add    al,dh
  41d2c5:	rol    BYTE PTR [ecx],cl
  41d2c7:	add    al,dh
  41d2c9:	enter  0x1,0x0
  41d2cd:	nop
  41d2ce:	inc    edx
  41d2cf:	add    BYTE PTR [eax+edx*4],al
  41d2d2:	inc    edx
  41d2d3:	add    BYTE PTR [eax],cl
  41d2d5:	nop
  41d2d6:	inc    edx
  41d2d7:	add    BYTE PTR [eax+edx*4],cl
  41d2da:	inc    edx
  41d2db:	add    BYTE PTR [eax],dl
  41d2dd:	nop
  41d2de:	inc    edx
  41d2df:	add    BYTE PTR [eax+edx*4],dl
  41d2e2:	inc    edx
  41d2e3:	add    BYTE PTR [eax],bl
  41d2e5:	nop
  41d2e6:	inc    edx
  41d2e7:	add    BYTE PTR [eax+edx*4],bl
  41d2ea:	inc    edx
  41d2eb:	add    BYTE PTR [eax],al
  41d2ed:	add    BYTE PTR [eax],al
  41d2ef:	add    BYTE PTR [edx+0x53],dl
  41d2f2:	inc    esp
  41d2f3:	push   ebx
  41d2f4:	addr16 ja 0x41d2e7
  41d2f7:	jmp    0x41d2ca
  41d2f9:	jp     0x41d2c1
  41d2fb:	inc    ecx
  41d2fc:	lods   eax,DWORD PTR ds:[esi]
  41d2fd:	ror    esp,cl
  41d2ff:	retf   0xd1a1
  41d302:	mov    bh,0x91
  41d304:	add    DWORD PTR [eax],eax
  41d306:	add    BYTE PTR [eax],al
  41d308:	inc    esp
  41d309:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  41d30d:	outs   dx,WORD PTR ds:[esi]
  41d30f:	inc    esi
  41d310:	outs   dx,DWORD PTR ds:[esi]
  41d311:	ins    BYTE PTR es:[edi],dx
  41d312:	fs gs jb 0x41d35a
  41d316:	popa   
  41d317:	je     0x41d37a
  41d319:	pop    esp
  41d31a:	push   edi
  41d31b:	imul   ebp,DWORD PTR [esi+0x64],0x4973776f
  41d322:	outs   dx,BYTE PTR ds:[esi]
  41d323:	je     0x41d38a
  41d325:	jb     0x41d395
  41d327:	popa   
  41d328:	ins    BYTE PTR es:[edi],dx
  41d329:	inc    esi
  41d32a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x81ec558b
  41d332:	in     al,dx
  41d333:	or     BYTE PTR [ecx],al
  41d335:	add    BYTE PTR [eax],al
  41d337:	push   ebx
  41d338:	mov    eax,ebx
  41d33a:	xchg   ecx,eax
  41d33b:	mov    eax,DWORD PTR [ebp+0x8]
  41d33e:	cmp    eax,0xf89c8585
  41d343:	jne    0x41d7ca
  41d349:	mov    eax,DWORD PTR [ebp+0xc]
  41d34c:	cmp    eax,0xf89c8584
  41d351:	jne    0x41d7ca
  41d357:	mov    eax,DWORD PTR [ebp+0x24]
  41d35a:	mov    DWORD PTR [ebp-0x4],eax
  41d35d:	mov    BYTE PTR [ebp-0x18],0x1b
  41d361:	mov    BYTE PTR [ebp-0x17],0x1c
  41d365:	mov    BYTE PTR [ebp-0x16],0x19
  41d369:	mov    BYTE PTR [ebp-0x15],0x4f
  41d36d:	mov    BYTE PTR [ebp-0x14],0x4e
  41d371:	mov    BYTE PTR [ebp-0x13],0x70
  41d375:	mov    BYTE PTR [ebp-0x20],0xd
  41d379:	mov    BYTE PTR [ebp-0x1f],0xf
  41d37d:	mov    BYTE PTR [ebp-0x1e],0x1d
  41d381:	mov    BYTE PTR [ebp-0x1d],0xe
  41d385:	mov    BYTE PTR [ebp-0x1c],0x4f
  41d389:	mov    BYTE PTR [ebp-0x1b],0x4e
  41d38d:	mov    BYTE PTR [ebp-0x1a],0x70
  41d391:	mov    BYTE PTR [ebp-0x28],0xf
  41d395:	mov    BYTE PTR [ebp-0x27],0x18
  41d399:	mov    BYTE PTR [ebp-0x26],0x4
  41d39d:	mov    BYTE PTR [ebp-0x25],0xb
  41d3a1:	mov    BYTE PTR [ebp-0x24],0x11
  41d3a5:	mov    BYTE PTR [ebp-0x23],0x0
  41d3a9:	push   esi
  41d3aa:	mov    BYTE PTR [ebp-0x22],0x19
  41d3ae:	mov    BYTE PTR [ebp-0x21],0x70
  41d3b2:	xor    esi,esi
  41d3b4:	mov    eax,0xfa
  41d3b9:	lea    ecx,[ebp+esi*1-0x18]
  41d3bd:	movzx  edx,BYTE PTR [ecx]
  41d3c0:	xor    edx,0x76
  41d3c3:	add    edx,eax
  41d3c5:	inc    esi
  41d3c6:	mov    BYTE PTR [ecx],dl
  41d3c8:	cmp    esi,0x6
  41d3cb:	jb     0x41d3b9
  41d3cd:	xor    esi,esi
  41d3cf:	lea    ecx,[ebp+esi*1-0x20]
  41d3d3:	movzx  edx,BYTE PTR [ecx]
  41d3d6:	xor    edx,0x76
  41d3d9:	add    edx,eax
  41d3db:	inc    esi
  41d3dc:	mov    BYTE PTR [ecx],dl
  41d3de:	cmp    esi,0x7
  41d3e1:	jb     0x41d3cf
  41d3e3:	xor    esi,esi
  41d3e5:	lea    ecx,[ebp+esi*1-0x28]
  41d3e9:	movzx  edx,BYTE PTR [ecx]
  41d3ec:	xor    edx,0x76
  41d3ef:	add    edx,eax
  41d3f1:	inc    esi
  41d3f2:	mov    BYTE PTR [ecx],dl
  41d3f4:	cmp    esi,0x8
  41d3f7:	jb     0x41d3e5
  41d3f9:	lea    eax,[ebp-0x2c]
  41d3fc:	mov    DWORD PTR [ebp-0x8],eax
  41d3ff:	mov    ecx,DWORD PTR [ebp-0x8]
  41d402:	mov    eax,0x7113fcef
  41d407:	mov    DWORD PTR [ecx],eax
  41d409:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d40c:	push   edi
  41d40d:	mov    esi,0x4e22
  41d412:	mov    ebx,0x3272e6
  41d417:	cmp    ecx,eax
  41d419:	jne    0x41d4e4
  41d41f:	lea    eax,[esi+0x57]
  41d422:	mov    WORD PTR [ebp-0x78],ax
  41d426:	mov    eax,esi
  41d428:	mov    WORD PTR [ebp-0x76],ax
  41d42c:	add    eax,0x5d
  41d42f:	mov    WORD PTR [ebp-0x74],ax
  41d433:	lea    eax,[esi-0x2]
  41d436:	mov    WORD PTR [ebp-0x72],ax
  41d43a:	add    eax,0x41
  41d43d:	mov    ecx,eax
  41d43f:	lea    eax,[esi+0x15]
  41d442:	mov    WORD PTR [ebp-0x66],ax
  41d446:	mov    eax,esi
  41d448:	mov    WORD PTR [ebp-0x64],ax
  41d44c:	add    eax,0x14
  41d44f:	mov    WORD PTR [ebp-0x62],ax
  41d453:	mov    eax,0x46d
  41d458:	mov    WORD PTR [ebp-0x60],ax
  41d45c:	mov    eax,0x567c
  41d461:	mov    WORD PTR [ebp-0x5e],ax
  41d465:	mov    eax,0x611c
  41d46a:	mov    WORD PTR [ebp-0x5c],ax
  41d46e:	lea    eax,[ebp-0xe0]
  41d474:	push   eax
  41d475:	mov    eax,DWORD PTR [ebp+0xc]
  41d478:	mov    edi,0x751089f
  41d47d:	xor    eax,edi
  41d47f:	add    eax,ebx
  41d481:	push   eax
  41d482:	mov    WORD PTR [ebp-0x70],cx
  41d486:	lea    ecx,[esi+0x1a]
  41d489:	mov    edx,ecx
  41d48b:	lea    eax,[ebp-0x78]
  41d48e:	push   eax
  41d48f:	mov    eax,DWORD PTR [ebp-0x4]
  41d492:	mov    eax,DWORD PTR [eax+0x198]
  41d498:	mov    WORD PTR [ebp-0x6e],dx
  41d49c:	mov    edx,0x4f96
  41d4a1:	mov    WORD PTR [ebp-0x6c],dx
  41d4a5:	mov    DWORD PTR [ebp-0x6a],0x4e614e3b
  41d4ac:	mov    DWORD PTR [ebp-0x5a],0x4e3cf10a
  41d4b3:	mov    DWORD PTR [ebp-0xe0],0x1
  41d4bd:	mov    DWORD PTR [ebp-0xdc],0x255
  41d4c7:	push   DWORD PTR [eax]
  41d4c9:	mov    eax,DWORD PTR [ebp+0x10]
  41d4cc:	call   eax
  41d4ce:	mov    DWORD PTR [ebp-0x8],eax
  41d4d1:	mov    eax,DWORD PTR [ebp-0x8]
  41d4d4:	test   eax,eax
  41d4d6:	je     0x41d4e9
  41d4d8:	xor    DWORD PTR ds:0x76586876,0x87687666
  41d4e2:	jmp    0x41d4e9
  41d4e4:	mov    edi,0x751089f
  41d4e9:	mov    eax,DWORD PTR [ebp-0x4]
  41d4ec:	mov    ecx,DWORD PTR [eax+0x18c]
  41d4f2:	xor    eax,eax
  41d4f4:	cmp    DWORD PTR [ecx],eax
  41d4f6:	jne    0x41d765
  41d4fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d4ff:	mov    ecx,DWORD PTR [ecx+0x17c]
  41d505:	mov    DWORD PTR [ecx],eax
  41d507:	mov    ecx,DWORD PTR [ebp-0x4]
  41d50a:	mov    ecx,DWORD PTR [ecx+0x180]
  41d510:	mov    DWORD PTR [ecx],eax
  41d512:	mov    eax,0x4f8f
  41d517:	mov    WORD PTR [ebp-0x9c],ax
  41d51e:	mov    eax,esi
  41d520:	mov    WORD PTR [ebp-0x9a],ax
  41d527:	mov    eax,0x4e7f
  41d52c:	mov    WORD PTR [ebp-0x98],ax
  41d533:	add    eax,0xffffffc0
  41d536:	mov    WORD PTR [ebp-0x96],ax
  41d53d:	mov    eax,0x4f92
  41d542:	mov    WORD PTR [ebp-0x94],ax
  41d549:	mov    eax,0x4e3e
  41d54e:	mov    WORD PTR [ebp-0x92],ax
  41d555:	add    eax,0x23
  41d558:	mov    WORD PTR [ebp-0x90],ax
  41d55f:	mov    eax,0x4e3c
  41d564:	mov    WORD PTR [ebp-0x8e],ax
  41d56b:	mov    eax,esi
  41d56d:	mov    WORD PTR [ebp-0x8c],ax
  41d574:	mov    eax,0x4e3b
  41d579:	mov    WORD PTR [ebp-0x8a],ax
  41d580:	mov    eax,0x99ff
  41d585:	mov    WORD PTR [ebp-0x88],ax
  41d58c:	mov    eax,0x828e
  41d591:	mov    WORD PTR [ebp-0x86],ax
  41d598:	mov    eax,0xd671
  41d59d:	mov    WORD PTR [ebp-0x84],ax
  41d5a4:	mov    eax,0xd7ad
  41d5a9:	mov    WORD PTR [ebp-0x82],ax
  41d5b0:	mov    eax,0x27ac
  41d5b5:	mov    WORD PTR [ebp-0x80],ax
  41d5b9:	mov    eax,0x47ac
  41d5be:	mov    WORD PTR [ebp-0x7e],ax
  41d5c2:	mov    eax,0x4e3d
  41d5c7:	push   0x8
  41d5c9:	mov    WORD PTR [ebp-0x7c],ax
  41d5cd:	mov    DWORD PTR [ebp-0x10],0xb04180f
  41d5d4:	mov    DWORD PTR [ebp-0xc],0x70190011
  41d5db:	lea    eax,[ebp-0x10]
  41d5de:	pop    ecx
  41d5df:	mov    dl,BYTE PTR [eax]
  41d5e1:	xor    dl,0x76
  41d5e4:	sub    dl,0x6
  41d5e7:	mov    BYTE PTR [eax],dl
  41d5e9:	inc    eax
  41d5ea:	dec    ecx
  41d5eb:	jne    0x41d5df
  41d5ed:	lea    eax,[ebp-0x10]
  41d5f0:	mov    DWORD PTR [ebp-0xdc],eax
  41d5f6:	lea    eax,[ebp-0xe0]
  41d5fc:	push   eax
  41d5fd:	mov    eax,DWORD PTR [ebp+0xc]
  41d600:	xor    eax,edi
  41d602:	add    eax,ebx
  41d604:	push   eax
  41d605:	mov    eax,DWORD PTR [ebp-0x4]
  41d608:	add    eax,0x66
  41d60b:	push   eax
  41d60c:	mov    eax,DWORD PTR [ebp-0x4]
  41d60f:	mov    eax,DWORD PTR [eax+0x198]
  41d615:	mov    DWORD PTR [ebp-0xe0],0x1
  41d61f:	push   DWORD PTR [eax]
  41d621:	mov    eax,DWORD PTR [ebp+0x10]
  41d624:	call   eax
  41d626:	mov    ecx,DWORD PTR [ebp+0x8]
  41d629:	xor    ecx,edi
  41d62b:	add    ecx,ebx
  41d62d:	mov    DWORD PTR [ebp-0x8],eax
  41d630:	cmp    eax,ecx
  41d632:	jne    0x41d64d
  41d634:	mov    eax,ds:0x33730bee
  41d639:	or     eax,0x22150bef
  41d63e:	mov    ds:0x33730bee,eax
  41d643:	add    eax,0x3372e90f
  41d648:	mov    ds:0x33730bee,eax
  41d64d:	mov    ecx,0x4f8a
  41d652:	mov    eax,ecx
  41d654:	mov    WORD PTR [ebp-0x40],ax
  41d658:	mov    eax,0x4e75
  41d65d:	mov    edx,eax
  41d65f:	mov    WORD PTR [ebp-0x3e],dx
  41d663:	lea    edx,[ecx+0x13]
  41d666:	mov    WORD PTR [ebp-0x3c],dx
  41d66a:	add    edx,0xfffffff8
  41d66d:	mov    WORD PTR [ebp-0x3a],dx
  41d671:	lea    edx,[ecx+0x9]
  41d674:	mov    WORD PTR [ebp-0x38],dx
  41d678:	add    edx,0xfffffffd
  41d67b:	mov    WORD PTR [ebp-0x36],dx
  41d67f:	lea    edx,[ecx+0x1f]
  41d682:	mov    WORD PTR [ebp-0x34],dx
  41d686:	mov    WORD PTR [ebp-0x32],cx
  41d68a:	mov    ecx,esi
  41d68c:	mov    WORD PTR [ebp-0x30],cx
  41d690:	lea    ecx,[edx+0x1]
  41d693:	mov    edx,ecx
  41d695:	mov    WORD PTR [ebp-0x54],dx
  41d699:	mov    edx,eax
  41d69b:	mov    WORD PTR [ebp-0x52],dx
  41d69f:	add    edx,0x8
  41d6a2:	mov    WORD PTR [ebp-0x50],dx
  41d6a6:	mov    WORD PTR [ebp-0x4e],ax
  41d6aa:	add    eax,0xfffffffe
  41d6ad:	mov    WORD PTR [ebp-0x4c],ax
  41d6b1:	mov    eax,0x4e70
  41d6b6:	mov    WORD PTR [ebp-0x4a],ax
  41d6ba:	lea    eax,[ecx-0x21]
  41d6bd:	mov    WORD PTR [ebp-0x48],ax
  41d6c1:	mov    WORD PTR [ebp-0x46],cx
  41d6c5:	mov    WORD PTR [ebp-0x44],si
  41d6c9:	mov    eax,DWORD PTR [ebp+0x8]
  41d6cc:	movzx  ecx,WORD PTR [ebp-0x54]
  41d6d0:	xor    eax,edi
  41d6d2:	add    eax,ebx
  41d6d4:	xor    eax,ecx
  41d6d6:	mov    WORD PTR [ebp-0x54],ax
  41d6da:	mov    eax,DWORD PTR [ebp+0x8]
  41d6dd:	movzx  ecx,WORD PTR [ebp-0x40]
  41d6e1:	xor    eax,edi
  41d6e3:	add    eax,ebx
  41d6e5:	xor    eax,ecx
  41d6e7:	mov    WORD PTR [ebp-0x40],ax
  41d6eb:	xor    eax,eax
  41d6ed:	mov    WORD PTR [ebp-0xf4],ax
  41d6f4:	mov    WORD PTR [ebp-0x108],ax
  41d6fb:	mov    edi,DWORD PTR [ebp+0x24]
  41d6fe:	lea    eax,[ebp-0xf4]
  41d704:	lea    edx,[ebp-0x54]
  41d707:	mov    DWORD PTR [ebp-0xe0],0x2
  41d711:	mov    DWORD PTR [ebp-0xdc],eax
  41d717:	call   0x42012b
  41d71c:	mov    DWORD PTR [ebp-0xd8],eax
  41d722:	lea    eax,[ebp-0xe0]
  41d728:	push   eax
  41d729:	mov    eax,DWORD PTR [ebp+0xc]
  41d72c:	xor    eax,0x751089f
  41d731:	add    eax,ebx
  41d733:	push   eax
  41d734:	lea    eax,[ebp-0x9c]
  41d73a:	push   eax
  41d73b:	push   DWORD PTR [ebp-0x8]
  41d73e:	mov    eax,DWORD PTR [ebp+0x10]
  41d741:	call   eax
  41d743:	mov    edi,DWORD PTR [ebp+0x24]
  41d746:	lea    eax,[ebp-0x108]
  41d74c:	lea    edx,[ebp-0x40]
  41d74f:	mov    DWORD PTR [ebp-0xdc],eax
  41d755:	call   0x42012b
  41d75a:	mov    DWORD PTR [ebp-0xd8],eax
  41d760:	mov    edi,0x751089f
  41d765:	mov    eax,DWORD PTR [ebp+0x14]
  41d768:	push   DWORD PTR [ebp-0x4]
  41d76b:	push   DWORD PTR [ebp+0x20]
  41d76e:	push   DWORD PTR [ebp+0x1c]
  41d771:	push   DWORD PTR [ebp+0x18]
  41d774:	push   DWORD PTR [ebp+0x10]
  41d777:	push   DWORD PTR [ebp+0x8]
  41d77a:	push   DWORD PTR [ebp+0xc]
  41d77d:	call   0x41e9c8
  41d782:	test   eax,eax
  41d784:	je     0x41d7c8
  41d786:	add    DWORD PTR [ebp-0x4],eax
  41d789:	push   DWORD PTR [ebp-0x4]
  41d78c:	lea    esi,[ebp+0x4]
  41d78f:	call   0x41dbb8
  41d794:	mov    eax,DWORD PTR [ebp-0x4]
  41d797:	mov    eax,DWORD PTR [eax+0x1c8]
  41d79d:	mov    eax,DWORD PTR [eax]
  41d79f:	xor    eax,edi
  41d7a1:	add    eax,ebx
  41d7a3:	mov    eax,DWORD PTR [ebp-0x4]
  41d7a6:	jne    0x41d7be
  41d7a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d7ab:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d7b1:	push   DWORD PTR [ecx]
  41d7b3:	mov    eax,DWORD PTR [eax+0x1d8]
  41d7b9:	call   DWORD PTR [eax+0x28]
  41d7bc:	jmp    0x41d7c8
  41d7be:	mov    eax,DWORD PTR [eax+0x17c]
  41d7c4:	mov    eax,DWORD PTR [eax]
  41d7c6:	add    DWORD PTR [esi],eax
  41d7c8:	pop    edi
  41d7c9:	pop    esi
  41d7ca:	pop    ebx
  41d7cb:	leave  
  41d7cc:	ret    0x20
  41d7cf:	push   edi
  41d7d0:	push   esi
  41d7d1:	push   ebx
  41d7d2:	push   ebp
  41d7d3:	mov    ebp,esp
  41d7d5:	mov    eax,DWORD PTR [ebp+0x24]
  41d7d8:	add    DWORD PTR [ebp+0x28],eax
  41d7db:	push   eax
  41d7dc:	cld    
  41d7dd:	mov    esi,DWORD PTR [ebp+0x18]
  41d7e0:	add    DWORD PTR [ebp+0x1c],esi
  41d7e3:	push   esi
  41d7e4:	mov    esi,DWORD PTR [ebp+0x14]
  41d7e7:	lods   eax,DWORD PTR ds:[esi]
  41d7e8:	xchg   edx,eax
  41d7e9:	push   edx
  41d7ea:	mov    cl,BYTE PTR [esi-0x2]
  41d7ed:	or     eax,0xffffffff
  41d7f0:	shl    eax,cl
  41d7f2:	not    eax
  41d7f4:	push   eax
  41d7f5:	mov    cl,dh
  41d7f7:	or     eax,0xffffffff
  41d7fa:	shl    eax,cl
  41d7fc:	not    eax
  41d7fe:	push   eax
  41d7ff:	add    cl,dl
  41d801:	mov    edi,esi
  41d803:	sub    esp,0xc
  41d806:	sub    eax,eax
  41d808:	inc    eax
  41d809:	push   eax
  41d80a:	push   eax
  41d80b:	push   eax
  41d80c:	push   eax
  41d80d:	push   eax
  41d80e:	push   edi
  41d80f:	sub    esi,esi
  41d811:	push   esi
  41d812:	or     ebx,0xffffffff
  41d815:	mov    eax,0x300
  41d81a:	shl    eax,cl
  41d81c:	lea    ecx,[eax+0x736]
  41d822:	mov    eax,0x4000400
  41d827:	shr    ecx,1
  41d829:	rep stos DWORD PTR es:[edi],eax
  41d82b:	push   0x5
  41d82d:	pop    ecx
  41d82e:	call   0x41db19
  41d833:	loop   0x41d82e
  41d835:	lea    esi,[esi]
  41d837:	lea    edi,[edi]
  41d839:	mov    edi,DWORD PTR [ebp-0x4]
  41d83c:	mov    eax,DWORD PTR [ebp-0x10]
  41d83f:	sub    edi,DWORD PTR [ebp+0x24]
  41d842:	and    eax,edi
  41d844:	mov    DWORD PTR [ebp-0x18],eax
  41d847:	mov    al,0x0
  41d849:	call   0x41db31
  41d84e:	jne    0x41d8e9
  41d854:	mov    cl,BYTE PTR [ebp-0xc]
  41d857:	and    edi,DWORD PTR [ebp-0x14]
  41d85a:	shl    edi,cl
  41d85c:	sub    cl,0x8
  41d85f:	neg    cl
  41d861:	shr    esi,cl
  41d863:	pop    eax
  41d864:	add    edi,esi
  41d866:	pop    esi
  41d867:	lea    edi,[edi+edi*2]
  41d86a:	shl    edi,0x8
  41d86d:	cmp    al,0x7
  41d86f:	pop    edx
  41d870:	lea    ecx,[esi+edi*2+0xe6c]
  41d877:	push   ecx
  41d878:	push   esi
  41d879:	mov    esi,0x100
  41d87e:	push   eax
  41d87f:	mov    al,0x1
  41d881:	jb     0x41d8b7
  41d883:	mov    edi,DWORD PTR [ebp-0x4]
  41d886:	sub    edi,DWORD PTR [ebp-0x24]
  41d889:	movzx  edi,BYTE PTR [edi]
  41d88c:	mov    ebp,DWORD PTR [ebp-0x34]
  41d88f:	shl    edi,1
  41d891:	mov    ecx,esi
  41d893:	and    esi,edi
  41d895:	add    ecx,esi
  41d897:	lea    ebp,[ebp+ecx*2+0x0]
  41d89b:	call   0x41db50
  41d8a0:	mov    ecx,eax
  41d8a2:	shr    esi,0x8
  41d8a5:	and    ecx,0x1
  41d8a8:	cmp    esi,ecx
  41d8aa:	mov    esi,0x100
  41d8af:	jne    0x41d8bf
  41d8b1:	cmp    eax,esi
  41d8b3:	jb     0x41d88c
  41d8b5:	jmp    0x41d8cb
  41d8b7:	mov    ebp,DWORD PTR [ebp-0x34]
  41d8ba:	call   0x41db50
  41d8bf:	inc    eax
  41d8c0:	inc    esi
  41d8c1:	sub    eax,0x1
  41d8c4:	sub    esi,0x1
  41d8c7:	cmp    eax,esi
  41d8c9:	jb     0x41d8b7
  41d8cb:	pop    edx
  41d8cc:	inc    edx
  41d8cd:	cmp    edx,0x5
  41d8d0:	dec    edx
  41d8d1:	mov    ecx,edx
  41d8d3:	jb     0x41d8e4
  41d8d5:	inc    edx
  41d8d6:	cmp    edx,0xb
  41d8d9:	dec    edx
  41d8da:	mov    cl,0x4
  41d8dc:	dec    cl
  41d8de:	jb     0x41d8e4
  41d8e0:	mov    cl,0x7
  41d8e2:	dec    cl
  41d8e4:	sub    edx,ecx
  41d8e6:	push   edx
  41d8e7:	jmp    0x41d938
  41d8e9:	mov    al,0xc1
  41d8eb:	dec    al
  41d8ed:	call   0x41db41
  41d8f2:	jne    0x41d908
  41d8f4:	pop    eax
  41d8f5:	pop    edi
  41d8f6:	pop    edx
  41d8f7:	pop    ecx
  41d8f8:	pop    edx
  41d8f9:	pop    ecx
  41d8fa:	push   DWORD PTR [esp]
  41d8fd:	push   ecx
  41d8fe:	push   edx
  41d8ff:	mov    edx,0x664
  41d904:	mov    cl,0x0
  41d906:	jmp    0x41d97b
  41d908:	mov    al,0xcd
  41d90a:	dec    al
  41d90c:	call   0x41db41
  41d911:	jne    0x41d941
  41d913:	mov    al,0xf1
  41d915:	dec    al
  41d917:	call   0x41db31
  41d91c:	jne    0x41d971
  41d91e:	pop    eax
  41d91f:	cmp    al,0x7
  41d921:	mov    al,0x9
  41d923:	jb     0x41d927
  41d925:	mov    al,0xb
  41d927:	push   eax
  41d928:	mov    esi,DWORD PTR [ebp-0x4]
  41d92b:	sub    esi,DWORD PTR [ebp-0x24]
  41d92e:	cmp    esi,DWORD PTR [ebp+0x24]
  41d931:	jb     0x41db08
  41d937:	lods   al,BYTE PTR ds:[esi]
  41d938:	mov    edi,DWORD PTR [ebp-0x4]
  41d93b:	stos   BYTE PTR es:[edi],al
  41d93c:	jmp    0x41dacf
  41d941:	mov    al,0xd8
  41d943:	call   0x41db41
  41d948:	mov    esi,DWORD PTR [ebp-0x28]
  41d94b:	je     0x41d968
  41d94d:	mov    al,0xe4
  41d94f:	call   0x41db41
  41d954:	mov    esi,DWORD PTR [ebp-0x2c]
  41d957:	je     0x41d962
  41d959:	mov    esi,DWORD PTR [ebp-0x30]
  41d95c:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d95f:	mov    DWORD PTR [ebp-0x30],ecx
  41d962:	mov    ecx,DWORD PTR [ebp-0x28]
  41d965:	mov    DWORD PTR [ebp-0x2c],ecx
  41d968:	mov    ecx,DWORD PTR [ebp-0x24]
  41d96b:	mov    DWORD PTR [ebp-0x28],ecx
  41d96e:	mov    DWORD PTR [ebp-0x24],esi
  41d971:	pop    eax
  41d972:	pop    edi
  41d973:	pop    ecx
  41d974:	mov    edx,0xa68
  41d979:	mov    cl,0x8
  41d97b:	add    edx,edi
  41d97d:	push   edx
  41d97e:	push   edi
  41d97f:	cmp    al,0x7
  41d981:	mov    al,cl
  41d983:	jb     0x41d987
  41d985:	add    al,0x3
  41d987:	push   eax
  41d988:	mov    ebp,DWORD PTR [ebp-0x34]
  41d98b:	call   0x41db4e
  41d990:	jne    0x41d9a6
  41d992:	mov    eax,DWORD PTR [ebp-0x18]
  41d995:	mov    edi,DWORD PTR [ebp-0x34]
  41d998:	shl    eax,0x3
  41d99b:	sub    ecx,ecx
  41d99d:	push   0x8
  41d99f:	pop    esi
  41d9a0:	lea    edi,[edi+eax*2+0x4]
  41d9a4:	jmp    0x41d9db
  41d9a6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d9a9:	add    ebp,0x2
  41d9ac:	call   0x41db4e
  41d9b1:	jne    0x41d9cb
  41d9b3:	mov    eax,DWORD PTR [ebp-0x18]
  41d9b6:	mov    edi,DWORD PTR [ebp-0x34]
  41d9b9:	shl    eax,0x3
  41d9bc:	push   0x8
  41d9be:	pop    ecx
  41d9bf:	push   0x8
  41d9c1:	pop    esi
  41d9c2:	lea    edi,[edi+eax*2+0x104]
  41d9c9:	jmp    0x41d9db
  41d9cb:	mov    edi,0x204
  41d9d0:	add    edi,DWORD PTR [ebp-0x34]
  41d9d3:	push   0x10
  41d9d5:	pop    ecx
  41d9d6:	mov    esi,0x100
  41d9db:	mov    DWORD PTR [ebp-0x1c],ecx
  41d9de:	sub    eax,eax
  41d9e0:	inc    eax
  41d9e1:	mov    ebp,edi
  41d9e3:	call   0x41db50
  41d9e8:	mov    ecx,eax
  41d9ea:	sub    ecx,esi
  41d9ec:	jb     0x41d9e1
  41d9ee:	add    DWORD PTR [ebp-0x1c],ecx
  41d9f1:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d9f5:	jae    0x41daab
  41d9fb:	add    DWORD PTR [ebp-0x3c],0x7
  41d9ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41da02:	cmp    ecx,0x4
  41da05:	jb     0x41da0a
  41da07:	push   0x3
  41da09:	pop    ecx
  41da0a:	mov    edi,DWORD PTR [ebp-0x38]
  41da0d:	shl    ecx,0x6
  41da10:	sub    eax,eax
  41da12:	inc    eax
  41da13:	push   0x40
  41da15:	pop    esi
  41da16:	lea    edi,[edi+ecx*2+0x360]
  41da1d:	mov    ebp,edi
  41da1f:	call   0x41db50
  41da24:	mov    ecx,eax
  41da26:	sub    ecx,esi
  41da28:	jb     0x41da1d
  41da2a:	mov    DWORD PTR [ebp-0x18],ecx
  41da2d:	mov    DWORD PTR [ebp-0x24],ecx
  41da30:	cmp    ecx,0x4
  41da33:	jb     0x41daa8
  41da35:	mov    esi,ecx
  41da37:	and    DWORD PTR [ebp-0x24],0x1
  41da3b:	shr    esi,1
  41da3d:	or     DWORD PTR [ebp-0x24],0x2
  41da41:	dec    esi
  41da42:	cmp    ecx,0xe
  41da45:	jae    0x41da60
  41da47:	mov    eax,0x2af
  41da4c:	sub    eax,ecx
  41da4e:	mov    ecx,esi
  41da50:	shl    BYTE PTR [ebp-0x24],cl
  41da53:	add    eax,DWORD PTR [ebp-0x24]
  41da56:	shl    eax,1
  41da58:	add    eax,DWORD PTR [ebp-0x38]
  41da5b:	mov    DWORD PTR [ebp-0x34],eax
  41da5e:	jmp    0x41da8d
  41da60:	sub    esi,0x4
  41da63:	call   0x41db0d
  41da68:	shr    ebx,1
  41da6a:	shl    DWORD PTR [ebp-0x24],1
  41da6d:	cmp    DWORD PTR [ebp-0x20],ebx
  41da70:	jb     0x41da78
  41da72:	inc    DWORD PTR [ebp-0x24]
  41da75:	sub    DWORD PTR [ebp-0x20],ebx
  41da78:	dec    esi
  41da79:	jne    0x41da63
  41da7b:	mov    eax,0x644
  41da80:	add    eax,DWORD PTR [ebp-0x38]
  41da83:	mov    DWORD PTR [ebp-0x34],eax
  41da86:	shl    DWORD PTR [ebp-0x24],0x4
  41da8a:	push   0x4
  41da8c:	pop    esi
  41da8d:	sub    edi,edi
  41da8f:	inc    edi
  41da90:	mov    eax,edi
  41da92:	mov    ebp,DWORD PTR [ebp-0x34]
  41da95:	call   0x41db50
  41da9a:	test   al,0x1
  41da9c:	je     0x41daa1
  41da9e:	or     DWORD PTR [ebp-0x24],edi
  41daa1:	shl    edi,1
  41daa3:	dec    esi
  41daa4:	jne    0x41da92
  41daa6:	jmp    0x41daa8
  41daa8:	inc    DWORD PTR [ebp-0x24]
  41daab:	mov    ecx,DWORD PTR [ebp-0x1c]
  41daae:	add    ecx,0x2
  41dab1:	mov    edi,DWORD PTR [ebp-0x4]
  41dab4:	mov    eax,edi
  41dab6:	sub    eax,DWORD PTR [ebp+0x24]
  41dab9:	cmp    DWORD PTR [ebp-0x24],eax
  41dabc:	ja     0x41db08
  41dabe:	mov    esi,edi
  41dac0:	sub    esi,DWORD PTR [ebp-0x24]
  41dac3:	mov    edx,DWORD PTR [ebp+0x28]
  41dac6:	lods   al,BYTE PTR ds:[esi]
  41dac7:	stos   BYTE PTR es:[edi],al
  41dac8:	cmp    edi,edx
  41daca:	jae    0x41dacf
  41dacc:	dec    ecx
  41dacd:	jne    0x41dac6
  41dacf:	mov    DWORD PTR [ebp-0x4],edi
  41dad2:	movzx  esi,al
  41dad5:	cmp    edi,DWORD PTR [ebp+0x28]
  41dad8:	jb     0x41d839
  41dade:	call   0x41db0d
  41dae3:	sub    eax,eax
  41dae5:	lea    ebp,[esp+0x3c]
  41dae9:	mov    edx,DWORD PTR [ebp+0x20]
  41daec:	mov    esi,DWORD PTR [ebp-0x8]
  41daef:	sub    esi,DWORD PTR [ebp+0x18]
  41daf2:	mov    DWORD PTR [edx],esi
  41daf4:	mov    edx,DWORD PTR [ebp+0x2c]
  41daf7:	mov    edi,DWORD PTR [ebp-0x4]
  41dafa:	sub    edi,DWORD PTR [ebp+0x24]
  41dafd:	mov    DWORD PTR [edx],edi
  41daff:	leave  
  41db00:	pop    ebx
  41db01:	pop    esi
  41db02:	pop    edi
  41db03:	ret    0x1c
  41db06:	pop    esi
  41db07:	pop    eax
  41db08:	sub    eax,eax
  41db0a:	inc    eax
  41db0b:	jmp    0x41dae5
  41db0d:	cmp    ebx,0x1000000
  41db13:	jb     0x41db16
  41db15:	ret    
  41db16:	shl    ebx,0x8
  41db19:	push   esi
  41db1a:	mov    esi,DWORD PTR [ebp-0x8]
  41db1d:	cmp    esi,DWORD PTR [ebp+0x1c]
  41db20:	jae    0x41db06
  41db22:	mov    eax,DWORD PTR [ebp-0x20]
  41db25:	shl    eax,0x8
  41db28:	lods   al,BYTE PTR ds:[esi]
  41db29:	mov    DWORD PTR [ebp-0x20],eax
  41db2c:	mov    DWORD PTR [ebp-0x8],esi
  41db2f:	pop    esi
  41db30:	ret    
  41db31:	mov    ecx,DWORD PTR [ebp-0x3c]
  41db34:	movzx  eax,al
  41db37:	shl    ecx,0x4
  41db3a:	add    eax,DWORD PTR [ebp-0x18]
  41db3d:	add    eax,ecx
  41db3f:	jmp    0x41db47
  41db41:	movzx  eax,al
  41db44:	add    eax,DWORD PTR [ebp-0x3c]
  41db47:	mov    ebp,DWORD PTR [ebp-0x38]
  41db4a:	lea    ebp,[ebp+eax*2+0x0]
  41db4e:	sub    eax,eax
  41db50:	lea    ebp,[ebp+eax*2+0x0]
  41db54:	cmp    ebx,0x1000000
  41db5a:	jae    0x41db78
  41db5c:	mov    ecx,DWORD PTR [esp+0x38]
  41db60:	shl    DWORD PTR [esp+0x20],0x8
  41db65:	cmp    ecx,DWORD PTR [esp+0x5c]
  41db69:	jae    0x41db07
  41db6b:	mov    dl,BYTE PTR [ecx]
  41db6d:	inc    DWORD PTR [esp+0x38]
  41db71:	shl    ebx,0x8
  41db74:	mov    BYTE PTR [esp+0x20],dl
  41db78:	mov    ecx,ebx
  41db7a:	movzx  edx,WORD PTR [ebp+0x0]
  41db7e:	shr    ecx,0xb
  41db81:	imul   ecx,edx
  41db84:	cmp    DWORD PTR [esp+0x20],ecx
  41db88:	jae    0x41dba1
  41db8a:	mov    ebx,ecx
  41db8c:	mov    ecx,0x800
  41db91:	sub    ecx,edx
  41db93:	shr    ecx,0x5
  41db96:	add    WORD PTR [ebp+0x0],cx
  41db9a:	add    eax,eax
  41db9c:	lea    ebp,[esp+0x40]
  41dba0:	ret    
  41dba1:	shr    edx,0x5
  41dba4:	sub    DWORD PTR [esp+0x20],ecx
  41dba8:	sub    ebx,ecx
  41dbaa:	sub    WORD PTR [ebp+0x0],dx
  41dbae:	add    eax,eax
  41dbb0:	add    eax,0x1
  41dbb3:	lea    ebp,[esp+0x40]
  41dbb7:	ret    
  41dbb8:	push   ebp
  41dbb9:	mov    ebp,esp
  41dbbb:	sub    esp,0x12c
  41dbc1:	push   ebx
  41dbc2:	push   esi
  41dbc3:	push   edi
  41dbc4:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41dbcb:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41dbd2:	mov    eax,DWORD PTR [ebp+0x8]
  41dbd5:	mov    DWORD PTR [ebp+0x8],eax
  41dbd8:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbdb:	mov    ebx,0x751089f
  41dbe0:	xor    ecx,ebx
  41dbe2:	mov    eax,0x3272e6
  41dbe7:	add    ecx,eax
  41dbe9:	mov    DWORD PTR [ebp-0x24],ecx
  41dbec:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbef:	xor    ecx,ebx
  41dbf1:	add    ecx,eax
  41dbf3:	mov    DWORD PTR [ebp-0x40],ecx
  41dbf6:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbf9:	xor    ecx,ebx
  41dbfb:	add    ecx,eax
  41dbfd:	mov    DWORD PTR [ebp-0x3c],ecx
  41dc00:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc03:	xor    ecx,ebx
  41dc05:	add    ecx,eax
  41dc07:	mov    DWORD PTR [ebp-0xd8],ecx
  41dc0d:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41dc14:	mov    DWORD PTR [ebp-0x3c],0xf89cb585
  41dc1b:	mov    DWORD PTR [ebp-0x54],0xf89c8581
  41dc22:	push   0x25
  41dc24:	pop    ecx
  41dc25:	mov    DWORD PTR [ebp-0x30],ecx
  41dc28:	mov    DWORD PTR [ebp-0x30],ecx
  41dc2b:	push   0x65
  41dc2d:	pop    ecx
  41dc2e:	mov    DWORD PTR [ebp-0x30],ecx
  41dc31:	mov    DWORD PTR [ebp-0x30],ecx
  41dc34:	mov    DWORD PTR [ebp-0x30],0x4d
  41dc3b:	mov    DWORD PTR [ebp-0x30],0x43
  41dc42:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc45:	xor    ecx,ebx
  41dc47:	add    ecx,eax
  41dc49:	mov    DWORD PTR [ebp-0x30],ecx
  41dc4c:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc4f:	xor    ecx,ebx
  41dc51:	add    ecx,eax
  41dc53:	mov    DWORD PTR [ebp-0x30],ecx
  41dc56:	mov    DWORD PTR [ebp-0x28],0x258
  41dc5d:	mov    DWORD PTR [ebp-0x34],0x36
  41dc64:	mov    DWORD PTR [ebp-0x14],0x7a
  41dc6b:	lea    edi,[ebp-0x10c]
  41dc71:	lea    esi,[ebp-0x12c]
  41dc77:	call   0x41e937
  41dc7c:	dec    DWORD PTR [ebp-0x14]
  41dc7f:	jne    0x41dc6b
  41dc81:	dec    DWORD PTR [ebp-0x34]
  41dc84:	jne    0x41dc64
  41dc86:	dec    DWORD PTR [ebp-0x28]
  41dc89:	jne    0x41dc5d
  41dc8b:	mov    DWORD PTR [ebp-0x28],0x400e
  41dc92:	mov    eax,DWORD PTR [ebp-0x10]
  41dc95:	xor    eax,ebx
  41dc97:	mov    esi,0x3272e6
  41dc9c:	add    eax,esi
  41dc9e:	mov    DWORD PTR [ebp-0x1c],eax
  41dca1:	mov    eax,DWORD PTR [ebp-0x10]
  41dca4:	and    DWORD PTR [ebp-0x94],0x0
  41dcab:	xor    eax,ebx
  41dcad:	add    eax,esi
  41dcaf:	mov    DWORD PTR [ebp-0x38],eax
  41dcb2:	mov    eax,fs:0x18
  41dcb8:	mov    DWORD PTR [ebp-0x94],eax
  41dcbe:	mov    eax,DWORD PTR [eax+0x30]
  41dcc1:	mov    DWORD PTR [ebp-0xcc],eax
  41dcc7:	mov    eax,DWORD PTR [eax+0xc]
  41dcca:	mov    DWORD PTR [ebp-0xc0],eax
  41dcd0:	mov    eax,DWORD PTR [ebp+0x8]
  41dcd3:	lea    ecx,[ebp-0x94]
  41dcd9:	mov    DWORD PTR [eax+0x1a0],ecx
  41dcdf:	mov    eax,DWORD PTR [ebp+0x8]
  41dce2:	lea    ecx,[ebp-0xcc]
  41dce8:	mov    DWORD PTR [eax+0x1a4],ecx
  41dcee:	mov    eax,DWORD PTR [ebp+0x8]
  41dcf1:	push   DWORD PTR [ebp+0x8]
  41dcf4:	lea    ecx,[ebp-0xc0]
  41dcfa:	mov    DWORD PTR [eax+0x1a8],ecx
  41dd00:	call   0x4200fc
  41dd05:	mov    ecx,DWORD PTR [ebp-0x10]
  41dd08:	xor    ecx,ebx
  41dd0a:	add    ecx,esi
  41dd0c:	cmp    ecx,eax
  41dd0e:	je     0x41e091
  41dd14:	mov    eax,DWORD PTR [ebp+0x8]
  41dd17:	mov    eax,DWORD PTR [eax+0x194]
  41dd1d:	mov    ecx,DWORD PTR [eax]
  41dd1f:	mov    eax,DWORD PTR [ebp+0x8]
  41dd22:	mov    eax,DWORD PTR [eax+0x194]
  41dd28:	mov    eax,DWORD PTR [eax]
  41dd2a:	add    eax,DWORD PTR [ecx+0x3c]
  41dd2d:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd30:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41dd36:	lea    edx,[ebp-0xec]
  41dd3c:	push   edx
  41dd3d:	mov    edx,DWORD PTR [ebp+0x8]
  41dd40:	mov    edx,DWORD PTR [edx+0x18c]
  41dd46:	mov    edx,DWORD PTR [edx]
  41dd48:	add    edx,DWORD PTR [eax+0x88]
  41dd4e:	push   0x4
  41dd50:	push   DWORD PTR [eax+0x8c]
  41dd56:	push   edx
  41dd57:	call   DWORD PTR [ecx+0x1c]
  41dd5a:	push   DWORD PTR [ebp+0x8]
  41dd5d:	xor    eax,eax
  41dd5f:	mov    DWORD PTR [ebp-0xa8],0x183f0f39
  41dd69:	mov    DWORD PTR [ebp-0xa4],0x3240e11
  41dd73:	mov    DWORD PTR [ebp-0xa0],0x310e1d0b
  41dd7d:	mov    BYTE PTR [ebp-0x9c],0x70
  41dd84:	lea    edi,[ebp-0x9b]
  41dd8a:	stos   DWORD PTR es:[edi],eax
  41dd8b:	stos   WORD PTR es:[edi],ax
  41dd8d:	stos   BYTE PTR es:[edi],al
  41dd8e:	xor    eax,eax
  41dd90:	mov    DWORD PTR [ebp-0xbc],0x183f0f39
  41dd9a:	mov    DWORD PTR [ebp-0xb8],0x3240e11
  41dda4:	mov    DWORD PTR [ebp-0xb4],0x2b0e1d0b
  41ddae:	mov    BYTE PTR [ebp-0xb0],0x70
  41ddb5:	lea    edi,[ebp-0xaf]
  41ddbb:	stos   DWORD PTR es:[edi],eax
  41ddbc:	stos   WORD PTR es:[edi],ax
  41ddbe:	stos   BYTE PTR es:[edi],al
  41ddbf:	mov    edi,DWORD PTR [ebp+0x8]
  41ddc2:	mov    eax,DWORD PTR [ebp+0x8]
  41ddc5:	mov    edx,DWORD PTR [eax+0x1b8]
  41ddcb:	mov    DWORD PTR [ebp-0x68],0xe0c0f04
  41ddd2:	mov    DWORD PTR [ebp-0x64],0x1900051f
  41ddd9:	mov    WORD PTR [ebp-0x60],0x7031
  41dddf:	mov    DWORD PTR [ebp-0x90],0x183f0f39
  41dde9:	mov    DWORD PTR [ebp-0x8c],0x4310e11
  41ddf3:	mov    DWORD PTR [ebp-0x88],0x22111800
  41ddfd:	mov    DWORD PTR [ebp-0x84],0xe1d050d
  41de07:	mov    DWORD PTR [ebp-0x80],0x70311f19
  41de0e:	mov    DWORD PTR [ebp-0x7c],0x183f0f39
  41de15:	mov    DWORD PTR [ebp-0x78],0x4310e11
  41de1c:	mov    DWORD PTR [ebp-0x74],0x22111800
  41de23:	mov    DWORD PTR [ebp-0x70],0xe1d050d
  41de2a:	mov    DWORD PTR [ebp-0x6c],0x702b1f19
  41de31:	call   0x42012b
  41de36:	push   eax
  41de37:	mov    eax,DWORD PTR [ebp+0x8]
  41de3a:	mov    eax,DWORD PTR [eax+0x1a8]
  41de40:	push   DWORD PTR [eax]
  41de42:	call   0x41fdcc
  41de47:	test   eax,eax
  41de49:	jne    0x41de9b
  41de4b:	mov    eax,DWORD PTR [ebp+0x8]
  41de4e:	mov    eax,DWORD PTR [eax+0x1d8]
  41de54:	mov    edi,DWORD PTR [ebp+0x8]
  41de57:	add    eax,0x4
  41de5a:	mov    DWORD PTR [ebp-0x20],eax
  41de5d:	mov    eax,DWORD PTR [ebp+0x8]
  41de60:	mov    edx,DWORD PTR [eax+0x1b8]
  41de66:	call   0x42012b
  41de6b:	push   eax
  41de6c:	mov    eax,DWORD PTR [ebp-0x20]
  41de6f:	call   DWORD PTR [eax]
  41de71:	test   eax,eax
  41de73:	jne    0x41de9b
  41de75:	mov    eax,DWORD PTR [ebp+0x8]
  41de78:	mov    eax,DWORD PTR [eax+0x1d8]
  41de7e:	mov    edi,DWORD PTR [ebp+0x8]
  41de81:	add    eax,0x10
  41de84:	mov    DWORD PTR [ebp-0x20],eax
  41de87:	mov    eax,DWORD PTR [ebp+0x8]
  41de8a:	mov    edx,DWORD PTR [eax+0x1b8]
  41de90:	call   0x42012b
  41de95:	push   eax
  41de96:	mov    eax,DWORD PTR [ebp-0x20]
  41de99:	call   DWORD PTR [eax]
  41de9b:	mov    eax,DWORD PTR [ebp-0x10]
  41de9e:	mov    ecx,DWORD PTR [ebp-0x28]
  41dea1:	xor    eax,ebx
  41dea3:	add    eax,esi
  41dea5:	cmp    eax,ecx
  41dea7:	je     0x41e06a
  41dead:	mov    eax,DWORD PTR [ebp-0x18]
  41deb0:	xor    eax,ebx
  41deb2:	mov    ecx,0xffcd8d1a
  41deb7:	sub    ecx,eax
  41deb9:	add    ecx,DWORD PTR [ebp-0x28]
  41debc:	mov    eax,DWORD PTR [ebp-0x1c]
  41debf:	cmp    eax,ecx
  41dec1:	ja     0x41e06a
  41dec7:	mov    DWORD PTR [ebp-0x34],0x0
  41dece:	push   DWORD PTR [ebp+0x8]
  41ded1:	mov    edi,DWORD PTR [ebp+0x8]
  41ded4:	mov    eax,DWORD PTR [ebp+0x8]
  41ded7:	mov    edx,DWORD PTR [eax+0x1b4]
  41dedd:	call   0x42012b
  41dee2:	push   eax
  41dee3:	mov    eax,DWORD PTR [ebp+0x8]
  41dee6:	mov    eax,DWORD PTR [eax+0x1a8]
  41deec:	push   DWORD PTR [eax]
  41deee:	call   0x41fdcc
  41def3:	mov    ecx,DWORD PTR [ebp+0x8]
  41def6:	mov    ecx,DWORD PTR [ecx+0x19c]
  41defc:	mov    DWORD PTR [ecx],eax
  41defe:	mov    eax,DWORD PTR [ebp+0x8]
  41df01:	mov    edi,DWORD PTR [eax+0x1d8]
  41df07:	mov    esi,DWORD PTR [ebp+0x8]
  41df0a:	xor    eax,eax
  41df0c:	lea    edx,[ebp-0x7c]
  41df0f:	call   0x420161
  41df14:	push   eax
  41df15:	mov    eax,DWORD PTR [ebp+0x8]
  41df18:	mov    eax,DWORD PTR [eax+0x19c]
  41df1e:	push   DWORD PTR [eax]
  41df20:	call   DWORD PTR [edi+0x8]
  41df23:	mov    DWORD PTR [ebp-0x20],eax
  41df26:	mov    eax,DWORD PTR [ebp+0x8]
  41df29:	mov    edi,DWORD PTR [eax+0x1d8]
  41df2f:	mov    esi,DWORD PTR [ebp+0x8]
  41df32:	xor    eax,eax
  41df34:	lea    edx,[ebp-0x90]
  41df3a:	call   0x420161
  41df3f:	push   eax
  41df40:	mov    eax,DWORD PTR [ebp+0x8]
  41df43:	mov    eax,DWORD PTR [eax+0x19c]
  41df49:	push   DWORD PTR [eax]
  41df4b:	call   DWORD PTR [edi+0x8]
  41df4e:	mov    eax,DWORD PTR [ebp+0x8]
  41df51:	mov    edi,DWORD PTR [eax+0x1d8]
  41df57:	mov    esi,DWORD PTR [ebp+0x8]
  41df5a:	xor    eax,eax
  41df5c:	lea    edx,[ebp-0xa8]
  41df62:	call   0x420161
  41df67:	push   eax
  41df68:	mov    eax,DWORD PTR [ebp+0x8]
  41df6b:	mov    eax,DWORD PTR [eax+0x19c]
  41df71:	push   DWORD PTR [eax]
  41df73:	call   DWORD PTR [edi+0x8]
  41df76:	and    DWORD PTR [ebp-0x8],0x0
  41df7a:	mov    DWORD PTR [ebp-0x48],eax
  41df7d:	mov    eax,DWORD PTR [ebp-0x8]
  41df80:	and    eax,0x7
  41df83:	add    eax,0x31
  41df86:	push   eax
  41df87:	call   DWORD PTR [ebp-0x20]
  41df8a:	test   eax,eax
  41df8c:	je     0x41dfd0
  41df8e:	mov    eax,DWORD PTR [ebp-0x8]
  41df91:	push   0x19
  41df93:	xor    edx,edx
  41df95:	pop    ecx
  41df96:	div    ecx
  41df98:	add    dl,0x41
  41df9b:	movzx  eax,dl
  41df9e:	push   eax
  41df9f:	call   DWORD PTR [ebp-0x48]
  41dfa2:	test   eax,eax
  41dfa4:	jne    0x41dfd0
  41dfa6:	mov    eax,DWORD PTR [ebp+0x8]
  41dfa9:	mov    edi,DWORD PTR [eax+0x1d8]
  41dfaf:	mov    esi,DWORD PTR [ebp+0x8]
  41dfb2:	xor    eax,eax
  41dfb4:	lea    edx,[ebp-0x68]
  41dfb7:	call   0x420161
  41dfbc:	push   eax
  41dfbd:	mov    eax,DWORD PTR [ebp+0x8]
  41dfc0:	mov    eax,DWORD PTR [eax+0x198]
  41dfc6:	push   DWORD PTR [eax]
  41dfc8:	call   DWORD PTR [edi+0x8]
  41dfcb:	mov    DWORD PTR [ebp-0x14],eax
  41dfce:	jmp    0x41dfd4
  41dfd0:	and    DWORD PTR [ebp-0x14],0x0
  41dfd4:	inc    DWORD PTR [ebp-0x8]
  41dfd7:	cmp    DWORD PTR [ebp-0x8],0x10
  41dfdb:	jb     0x41df7d
  41dfdd:	mov    eax,DWORD PTR [ebp-0x18]
  41dfe0:	mov    esi,DWORD PTR [ebp+0x8]
  41dfe3:	xor    eax,ebx
  41dfe5:	mov    edi,0x3272e6
  41dfea:	add    eax,edi
  41dfec:	lea    edx,[ebp-0x10c]
  41dff2:	call   0x420161
  41dff7:	push   eax
  41dff8:	mov    eax,DWORD PTR [ebp-0x10]
  41dffb:	mov    esi,DWORD PTR [ebp+0x8]
  41dffe:	xor    eax,ebx
  41e000:	add    eax,edi
  41e002:	lea    edx,[ebp-0x12c]
  41e008:	call   0x420161
  41e00d:	push   eax
  41e00e:	call   DWORD PTR [ebp-0x14]
  41e011:	mov    ecx,DWORD PTR [ebp-0x10]
  41e014:	xor    ecx,ebx
  41e016:	add    ecx,edi
  41e018:	cmp    ecx,eax
  41e01a:	jne    0x41e023
  41e01c:	mov    DWORD PTR [ebp-0x34],0x1
  41e023:	mov    eax,DWORD PTR [ebp-0x18]
  41e026:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e029:	xor    eax,ebx
  41e02b:	lea    eax,[eax+ecx*1+0x3272e6]
  41e032:	mov    DWORD PTR [ebp-0x1c],eax
  41e035:	mov    eax,DWORD PTR [ebp-0x34]
  41e038:	test   eax,eax
  41e03a:	je     0x41e04e
  41e03c:	mov    eax,DWORD PTR [ebp-0x18]
  41e03f:	mov    ecx,DWORD PTR [ebp-0x38]
  41e042:	xor    eax,ebx
  41e044:	lea    eax,[eax+ecx*1+0x3272e6]
  41e04b:	mov    DWORD PTR [ebp-0x38],eax
  41e04e:	mov    eax,DWORD PTR [ebp-0x18]
  41e051:	xor    eax,ebx
  41e053:	mov    ecx,0xffcd8d1a
  41e058:	sub    ecx,eax
  41e05a:	add    ecx,DWORD PTR [ebp-0x28]
  41e05d:	mov    eax,DWORD PTR [ebp-0x1c]
  41e060:	cmp    eax,ecx
  41e062:	jbe    0x41dec7
  41e068:	mov    esi,edi
  41e06a:	mov    eax,DWORD PTR [ebp-0x38]
  41e06d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e070:	cmp    ecx,eax
  41e072:	jne    0x41e085
  41e074:	push   DWORD PTR [ebp+0x8]
  41e077:	lea    eax,[ebp-0x40]
  41e07a:	push   eax
  41e07b:	call   0x420bd1
  41e080:	mov    DWORD PTR [ebp-0x24],eax
  41e083:	jmp    0x41e091
  41e085:	mov    eax,DWORD PTR [ebp-0x24]
  41e088:	mov    ecx,DWORD PTR [ebp-0x18]
  41e08b:	xor    ecx,ebx
  41e08d:	add    ecx,esi
  41e08f:	xor    DWORD PTR [eax],ecx
  41e091:	mov    eax,DWORD PTR [ebp-0x10]
  41e094:	mov    ecx,DWORD PTR [ebp-0x24]
  41e097:	xor    eax,ebx
  41e099:	add    eax,esi
  41e09b:	cmp    eax,ecx
  41e09d:	je     0x41e815
  41e0a3:	mov    eax,DWORD PTR [ebp-0x10]
  41e0a6:	mov    ecx,DWORD PTR [ebp-0x40]
  41e0a9:	xor    eax,ebx
  41e0ab:	add    eax,esi
  41e0ad:	cmp    eax,ecx
  41e0af:	je     0x41e815
  41e0b5:	mov    eax,DWORD PTR [ebp-0x10]
  41e0b8:	xor    eax,ebx
  41e0ba:	add    eax,esi
  41e0bc:	jmp    0x41e0da
  41e0be:	mov    edi,DWORD PTR [ebp-0x24]
  41e0c1:	mov    cl,al
  41e0c3:	and    cl,0x1f
  41e0c6:	or     dl,0xff
  41e0c9:	sub    dl,cl
  41e0cb:	add    BYTE PTR [edi+eax*1],dl
  41e0ce:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0d1:	xor    ecx,ebx
  41e0d3:	lea    eax,[eax+ecx*1+0x3272e6]
  41e0da:	mov    ecx,DWORD PTR [ebp-0x40]
  41e0dd:	cmp    eax,ecx
  41e0df:	jb     0x41e0be
  41e0e1:	mov    eax,DWORD PTR [ebp-0x40]
  41e0e4:	mov    DWORD PTR [ebp-0x28],eax
  41e0e7:	mov    eax,DWORD PTR [ebp-0x24]
  41e0ea:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41e0f1:	mov    DWORD PTR [ebp-0xd4],eax
  41e0f7:	mov    edi,0xf89c8584
  41e0fc:	mov    DWORD PTR [ebp-0x2c],edi
  41e0ff:	mov    eax,DWORD PTR [ebp-0x38]
  41e102:	xor    eax,ebx
  41e104:	add    eax,esi
  41e106:	mov    DWORD PTR [ebp-0xc],eax
  41e109:	mov    eax,DWORD PTR [ebp-0x38]
  41e10c:	xor    eax,ebx
  41e10e:	add    eax,esi
  41e110:	mov    DWORD PTR [ebp-0x8],eax
  41e113:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41e11a:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  41e121:	mov    eax,DWORD PTR [ebp-0x38]
  41e124:	mov    ecx,DWORD PTR [ebp-0x28]
  41e127:	xor    eax,ebx
  41e129:	add    eax,esi
  41e12b:	cmp    ecx,eax
  41e12d:	je     0x41e32c
  41e133:	jmp    0x41e308
  41e138:	mov    ecx,DWORD PTR [ebp-0xc]
  41e13b:	mov    eax,DWORD PTR [ebp-0x28]
  41e13e:	sub    eax,ecx
  41e140:	mov    ecx,DWORD PTR [ebp-0x48]
  41e143:	xor    ecx,ebx
  41e145:	add    ecx,esi
  41e147:	xor    edx,edx
  41e149:	div    ecx
  41e14b:	mov    DWORD PTR [ebp-0x8],eax
  41e14e:	mov    eax,DWORD PTR [ebp-0x4c]
  41e151:	mov    ecx,DWORD PTR [ebp-0x8]
  41e154:	xor    eax,ebx
  41e156:	add    eax,esi
  41e158:	cmp    ecx,eax
  41e15a:	jbe    0x41e166
  41e15c:	mov    eax,DWORD PTR [ebp-0x4c]
  41e15f:	xor    eax,ebx
  41e161:	add    eax,esi
  41e163:	mov    DWORD PTR [ebp-0x8],eax
  41e166:	mov    eax,DWORD PTR [ebp-0x48]
  41e169:	mov    ecx,DWORD PTR [ebp-0x8]
  41e16c:	xor    eax,ebx
  41e16e:	add    eax,esi
  41e170:	imul   eax,ecx
  41e173:	mov    DWORD PTR [ebp-0x8],eax
  41e176:	mov    eax,DWORD PTR [ebp-0x38]
  41e179:	mov    ecx,DWORD PTR [ebp-0x8]
  41e17c:	xor    eax,ebx
  41e17e:	add    eax,esi
  41e180:	cmp    ecx,eax
  41e182:	je     0x41e2f6
  41e188:	mov    eax,DWORD PTR [ebp-0x8]
  41e18b:	mov    DWORD PTR [ebp-0x14],eax
  41e18e:	mov    eax,DWORD PTR [ebp-0xc]
  41e191:	add    eax,DWORD PTR [ebp-0xd4]
  41e197:	mov    DWORD PTR [ebp-0x20],0xf89c8585
  41e19e:	mov    DWORD PTR [ebp-0x34],edi
  41e1a1:	mov    DWORD PTR [ebp-0xe8],0xf89c8583
  41e1ab:	mov    DWORD PTR [ebp-0x8],eax
  41e1ae:	mov    DWORD PTR [ebp-0x30],0xf89c8582
  41e1b5:	mov    DWORD PTR [ebp-0x1c],edi
  41e1b8:	mov    eax,DWORD PTR [ebp-0x20]
  41e1bb:	xor    eax,ebx
  41e1bd:	add    eax,esi
  41e1bf:	jmp    0x41e2b5
  41e1c4:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  41e1ce:	mov    DWORD PTR [ebp-0xc4],0xf89c85b1
  41e1d8:	mov    eax,DWORD PTR [ebp-0x1c]
  41e1db:	mov    ecx,DWORD PTR [ebp-0x44]
  41e1de:	xor    eax,ebx
  41e1e0:	add    eax,esi
  41e1e2:	imul   eax,ecx
  41e1e5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e1e8:	mov    al,BYTE PTR [eax+ecx*1]
  41e1eb:	mov    BYTE PTR [ebp-0x2],al
  41e1ee:	mov    eax,DWORD PTR [ebp-0x1c]
  41e1f1:	mov    ecx,DWORD PTR [ebp-0x44]
  41e1f4:	xor    eax,ebx
  41e1f6:	add    eax,esi
  41e1f8:	imul   eax,ecx
  41e1fb:	mov    ecx,DWORD PTR [ebp-0xe8]
  41e201:	xor    ecx,ebx
  41e203:	add    eax,ecx
  41e205:	mov    ecx,DWORD PTR [ebp-0x8]
  41e208:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e6]
  41e210:	mov    ecx,DWORD PTR [ebp-0xe0]
  41e216:	xor    ecx,ebx
  41e218:	lea    eax,[ecx+eax*1+0x3272e6]
  41e21f:	movzx  ecx,BYTE PTR [ebp-0x2]
  41e223:	xor    ecx,eax
  41e225:	mov    BYTE PTR [ebp-0x2],cl
  41e228:	mov    al,BYTE PTR [ebp-0x2]
  41e22b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e22e:	mov    edx,DWORD PTR [ebp-0x44]
  41e231:	xor    ecx,ebx
  41e233:	add    ecx,esi
  41e235:	imul   ecx,edx
  41e238:	mov    edx,DWORD PTR [ebp-0x8]
  41e23b:	mov    BYTE PTR [ecx+edx*1],al
  41e23e:	mov    eax,DWORD PTR [ebp-0x1c]
  41e241:	mov    ecx,DWORD PTR [ebp-0x44]
  41e244:	xor    eax,ebx
  41e246:	add    eax,esi
  41e248:	imul   eax,ecx
  41e24b:	mov    ecx,DWORD PTR [ebp-0x8]
  41e24e:	mov    al,BYTE PTR [eax+ecx*1]
  41e251:	mov    BYTE PTR [ebp-0x2],al
  41e254:	mov    eax,DWORD PTR [ebp-0x1c]
  41e257:	mov    ecx,DWORD PTR [ebp-0x44]
  41e25a:	xor    eax,ebx
  41e25c:	add    eax,esi
  41e25e:	imul   eax,ecx
  41e261:	mov    ecx,DWORD PTR [ebp-0x34]
  41e264:	xor    ecx,ebx
  41e266:	add    eax,ecx
  41e268:	mov    ecx,DWORD PTR [ebp-0x8]
  41e26b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e6]
  41e273:	mov    ecx,DWORD PTR [ebp-0xc4]
  41e279:	xor    ecx,ebx
  41e27b:	lea    eax,[ecx+eax*1+0x3272e6]
  41e282:	movzx  ecx,BYTE PTR [ebp-0x2]
  41e286:	xor    ecx,eax
  41e288:	mov    BYTE PTR [ebp-0x2],cl
  41e28b:	mov    al,BYTE PTR [ebp-0x2]
  41e28e:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e291:	mov    edx,DWORD PTR [ebp-0x44]
  41e294:	xor    ecx,ebx
  41e296:	add    ecx,esi
  41e298:	imul   ecx,edx
  41e29b:	mov    edx,DWORD PTR [ebp-0x8]
  41e29e:	mov    BYTE PTR [ecx+edx*1],al
  41e2a1:	mov    eax,DWORD PTR [ebp-0x30]
  41e2a4:	mov    ecx,DWORD PTR [ebp-0x34]
  41e2a7:	xor    eax,ebx
  41e2a9:	xor    ecx,ebx
  41e2ab:	add    eax,esi
  41e2ad:	add    ecx,esi
  41e2af:	imul   eax,ecx
  41e2b2:	add    eax,DWORD PTR [ebp-0x44]
  41e2b5:	mov    DWORD PTR [ebp-0x44],eax
  41e2b8:	mov    eax,DWORD PTR [ebp-0x44]
  41e2bb:	mov    ecx,DWORD PTR [ebp-0x14]
  41e2be:	cmp    ecx,eax
  41e2c0:	jb     0x41e1c4
  41e2c6:	mov    eax,DWORD PTR [ebp-0x34]
  41e2c9:	mov    ecx,DWORD PTR [ebp-0x14]
  41e2cc:	xor    eax,ebx
  41e2ce:	add    eax,esi
  41e2d0:	imul   eax,ecx
  41e2d3:	mov    ecx,DWORD PTR [ebp-0x20]
  41e2d6:	xor    ecx,ebx
  41e2d8:	add    ecx,esi
  41e2da:	or     eax,ecx
  41e2dc:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e2df:	xor    ecx,ebx
  41e2e1:	add    eax,ecx
  41e2e3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e2e6:	xor    ecx,ebx
  41e2e8:	add    eax,ecx
  41e2ea:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2ed:	lea    eax,[eax+ecx*1+0x64e5cc]
  41e2f4:	jmp    0x41e305
  41e2f6:	mov    eax,DWORD PTR [ebp-0x2c]
  41e2f9:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2fc:	xor    eax,ebx
  41e2fe:	lea    eax,[eax+ecx*1+0x3272e6]
  41e305:	mov    DWORD PTR [ebp-0xc],eax
  41e308:	mov    eax,DWORD PTR [ebp-0x2c]
  41e30b:	xor    eax,ebx
  41e30d:	mov    ecx,0xffcd8d1a
  41e312:	sub    ecx,eax
  41e314:	add    ecx,DWORD PTR [ebp-0x28]
  41e317:	mov    eax,DWORD PTR [ebp-0x2c]
  41e31a:	mov    edx,DWORD PTR [ebp-0xc]
  41e31d:	xor    eax,ebx
  41e31f:	add    eax,esi
  41e321:	imul   eax,edx
  41e324:	cmp    eax,ecx
  41e326:	jbe    0x41e138
  41e32c:	mov    eax,DWORD PTR [ebp-0x10]
  41e32f:	mov    ecx,DWORD PTR [ebp-0x40]
  41e332:	mov    eax,DWORD PTR [ebp+0x8]
  41e335:	mov    edx,DWORD PTR [ebp-0x54]
  41e338:	mov    eax,DWORD PTR [eax+0x1d8]
  41e33e:	xor    edx,ebx
  41e340:	add    edx,esi
  41e342:	push   edx
  41e343:	mov    edx,DWORD PTR [ebp-0x3c]
  41e346:	xor    edx,ebx
  41e348:	add    edx,esi
  41e34a:	push   edx
  41e34b:	push   ecx
  41e34c:	mov    DWORD PTR [ebp-0x30],ecx
  41e34f:	mov    ecx,DWORD PTR [ebp-0x10]
  41e352:	xor    ecx,ebx
  41e354:	add    ecx,esi
  41e356:	push   ecx
  41e357:	call   DWORD PTR [eax+0x14]
  41e35a:	mov    edi,eax
  41e35c:	mov    eax,DWORD PTR [ebp-0x10]
  41e35f:	xor    eax,ebx
  41e361:	add    eax,esi
  41e363:	cmp    eax,edi
  41e365:	je     0x41e3c0
  41e367:	mov    eax,DWORD PTR [ebp-0x10]
  41e36a:	jmp    0x41e38d
  41e36c:	mov    ecx,DWORD PTR [ebp-0x24]
  41e36f:	xor    eax,ebx
  41e371:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e6]
  41e378:	mov    BYTE PTR [eax+edi*1+0x3272e6],cl
  41e37f:	mov    ecx,DWORD PTR [ebp-0x18]
  41e382:	xor    ecx,ebx
  41e384:	lea    eax,[ecx+eax*1+0x3272e6]
  41e38b:	xor    eax,ebx
  41e38d:	mov    ecx,DWORD PTR [ebp-0x40]
  41e390:	sub    ecx,esi
  41e392:	xor    ecx,ebx
  41e394:	cmp    eax,ecx
  41e396:	jne    0x41e36c
  41e398:	mov    eax,DWORD PTR [ebp+0x8]
  41e39b:	mov    ecx,DWORD PTR [ebp-0x50]
  41e39e:	mov    eax,DWORD PTR [eax+0x1d8]
  41e3a4:	xor    ecx,ebx
  41e3a6:	add    ecx,esi
  41e3a8:	push   ecx
  41e3a9:	mov    ecx,DWORD PTR [ebp-0x10]
  41e3ac:	xor    ecx,ebx
  41e3ae:	add    ecx,esi
  41e3b0:	push   ecx
  41e3b1:	push   DWORD PTR [ebp-0x24]
  41e3b4:	call   DWORD PTR [eax+0x18]
  41e3b7:	mov    eax,DWORD PTR [ebp-0x30]
  41e3ba:	mov    DWORD PTR [ebp-0x24],edi
  41e3bd:	mov    DWORD PTR [ebp-0x40],eax
  41e3c0:	mov    edi,DWORD PTR [ebp-0x24]
  41e3c3:	mov    eax,DWORD PTR [ebp-0x18]
  41e3c6:	mov    ecx,DWORD PTR [ebp-0x10]
  41e3c9:	xor    eax,ebx
  41e3cb:	mov    DWORD PTR [ebp-0x30],edi
  41e3ce:	add    eax,esi
  41e3d0:	mov    DWORD PTR [ebp-0x5c],0x31282028
  41e3d7:	mov    DWORD PTR [ebp-0x58],0x27283f28
  41e3de:	jmp    0x41e412
  41e3e0:	xor    ecx,ebx
  41e3e2:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728a]
  41e3e9:	xor    dl,0x76
  41e3ec:	sub    dl,0x6
  41e3ef:	mov    DWORD PTR [ebp-0x3c],ecx
  41e3f2:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e6]
  41e3fa:	movzx  edx,dl
  41e3fd:	cmp    ecx,edx
  41e3ff:	jne    0x41e41c
  41e401:	mov    ecx,DWORD PTR [ebp-0x18]
  41e404:	mov    edx,DWORD PTR [ebp-0x3c]
  41e407:	xor    ecx,ebx
  41e409:	lea    ecx,[ecx+edx*1+0x3272e6]
  41e410:	xor    ecx,ebx
  41e412:	cmp    ecx,0xf89c85bd
  41e418:	jne    0x41e3e0
  41e41a:	jmp    0x41e423
  41e41c:	mov    eax,DWORD PTR [ebp-0x10]
  41e41f:	xor    eax,ebx
  41e421:	add    eax,esi
  41e423:	mov    ecx,DWORD PTR [ebp-0x10]
  41e426:	xor    ecx,ebx
  41e428:	add    ecx,esi
  41e42a:	cmp    ecx,eax
  41e42c:	je     0x41e59f
  41e432:	mov    eax,DWORD PTR [edi+0x8]
  41e435:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41e43c:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  41e443:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41e44a:	mov    DWORD PTR [ebp-0x20],0xf89c8581
  41e451:	mov    DWORD PTR [ebp-0x14],eax
  41e454:	mov    eax,DWORD PTR [ebp+0x8]
  41e457:	mov    ecx,DWORD PTR [ebp-0x20]
  41e45a:	xor    ecx,ebx
  41e45c:	add    ecx,esi
  41e45e:	push   ecx
  41e45f:	mov    ecx,DWORD PTR [ebp-0x48]
  41e462:	mov    eax,DWORD PTR [eax+0x1d8]
  41e468:	xor    ecx,ebx
  41e46a:	add    ecx,esi
  41e46c:	push   ecx
  41e46d:	mov    ecx,DWORD PTR [ebp-0x3c]
  41e470:	xor    ecx,ebx
  41e472:	add    ecx,esi
  41e474:	push   ecx
  41e475:	mov    ecx,DWORD PTR [ebp-0xc]
  41e478:	xor    ecx,ebx
  41e47a:	add    ecx,esi
  41e47c:	push   ecx
  41e47d:	call   DWORD PTR [eax+0x14]
  41e480:	mov    edi,eax
  41e482:	mov    eax,DWORD PTR [ebp+0x8]
  41e485:	mov    ecx,DWORD PTR [ebp-0x20]
  41e488:	mov    eax,DWORD PTR [eax+0x1d8]
  41e48e:	xor    ecx,ebx
  41e490:	add    ecx,esi
  41e492:	push   ecx
  41e493:	mov    ecx,DWORD PTR [ebp-0x48]
  41e496:	xor    ecx,ebx
  41e498:	add    ecx,esi
  41e49a:	push   ecx
  41e49b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e49e:	push   DWORD PTR [ebp-0x14]
  41e4a1:	xor    ecx,ebx
  41e4a3:	add    ecx,esi
  41e4a5:	push   ecx
  41e4a6:	call   DWORD PTR [eax+0x14]
  41e4a9:	mov    ecx,DWORD PTR [ebp-0xc]
  41e4ac:	xor    ecx,ebx
  41e4ae:	add    ecx,esi
  41e4b0:	mov    DWORD PTR [ebp-0x20],eax
  41e4b3:	cmp    ecx,edi
  41e4b5:	je     0x41e842
  41e4bb:	mov    ecx,DWORD PTR [ebp-0xc]
  41e4be:	xor    ecx,ebx
  41e4c0:	add    ecx,esi
  41e4c2:	cmp    ecx,eax
  41e4c4:	je     0x41e842
  41e4ca:	mov    DWORD PTR [ebp-0x3c],0xf89c8582
  41e4d1:	mov    DWORD PTR [ebp-0x54],0xf89c8583
  41e4d8:	mov    ecx,DWORD PTR [ebp-0x3c]
  41e4db:	xor    cl,0x9f
  41e4de:	sub    cl,0x1a
  41e4e1:	mov    BYTE PTR [edi],cl
  41e4e3:	mov    ecx,DWORD PTR [ebp-0xc]
  41e4e6:	xor    cl,0x9f
  41e4e9:	sub    cl,0x1a
  41e4ec:	mov    BYTE PTR [edi+0x1],cl
  41e4ef:	mov    ecx,DWORD PTR [ebp-0x54]
  41e4f2:	xor    cl,0x9f
  41e4f5:	sub    cl,0x1a
  41e4f8:	mov    BYTE PTR [edi+0x2],cl
  41e4fb:	and    DWORD PTR [ebp-0xc8],0x0
  41e502:	and    DWORD PTR [ebp-0xdc],0x0
  41e509:	lea    ecx,[ebp-0xdc]
  41e50f:	push   ecx
  41e510:	push   DWORD PTR [ebp-0x14]
  41e513:	push   eax
  41e514:	lea    eax,[ebp-0xc8]
  41e51a:	push   eax
  41e51b:	mov    eax,DWORD PTR [ebp-0x30]
  41e51e:	push   DWORD PTR [eax+0xc]
  41e521:	mov    eax,DWORD PTR [ebp-0x24]
  41e524:	add    eax,0x10
  41e527:	push   eax
  41e528:	push   edi
  41e529:	call   0x41d7cf
  41e52e:	mov    DWORD PTR [ebp-0x3c],eax
  41e531:	mov    eax,DWORD PTR [ebp+0x8]
  41e534:	mov    ecx,DWORD PTR [ebp-0x50]
  41e537:	mov    eax,DWORD PTR [eax+0x1d8]
  41e53d:	xor    ecx,ebx
  41e53f:	add    ecx,esi
  41e541:	push   ecx
  41e542:	mov    ecx,DWORD PTR [ebp-0xc]
  41e545:	xor    ecx,ebx
  41e547:	add    ecx,esi
  41e549:	push   ecx
  41e54a:	push   edi
  41e54b:	call   DWORD PTR [eax+0x18]
  41e54e:	mov    eax,DWORD PTR [ebp-0x3c]
  41e551:	add    eax,0xffcd8d1a
  41e556:	xor    eax,ebx
  41e558:	cmp    eax,0xf89c8585
  41e55d:	mov    eax,DWORD PTR [ebp+0x8]
  41e560:	mov    eax,DWORD PTR [eax+0x1d8]
  41e566:	mov    ecx,DWORD PTR [ebp-0x50]
  41e569:	jne    0x41e58c
  41e56b:	xor    ecx,ebx
  41e56d:	add    ecx,esi
  41e56f:	push   ecx
  41e570:	mov    ecx,DWORD PTR [ebp-0xc]
  41e573:	xor    ecx,ebx
  41e575:	add    ecx,esi
  41e577:	push   ecx
  41e578:	push   DWORD PTR [ebp-0x24]
  41e57b:	call   DWORD PTR [eax+0x18]
  41e57e:	mov    eax,DWORD PTR [ebp-0x20]
  41e581:	mov    DWORD PTR [ebp-0x24],eax
  41e584:	mov    eax,DWORD PTR [ebp-0x14]
  41e587:	mov    DWORD PTR [ebp-0x40],eax
  41e58a:	jmp    0x41e59f
  41e58c:	xor    ecx,ebx
  41e58e:	add    ecx,esi
  41e590:	push   ecx
  41e591:	mov    ecx,DWORD PTR [ebp-0xc]
  41e594:	xor    ecx,ebx
  41e596:	add    ecx,esi
  41e598:	push   ecx
  41e599:	push   DWORD PTR [ebp-0x20]
  41e59c:	call   DWORD PTR [eax+0x18]
  41e59f:	mov    eax,DWORD PTR [ebp-0x40]
  41e5a2:	mov    DWORD PTR [ebp-0x38],eax
  41e5a5:	mov    eax,DWORD PTR [ebp-0x24]
  41e5a8:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41e5af:	mov    DWORD PTR [ebp-0x3c],eax
  41e5b2:	mov    edi,0xf89c8584
  41e5b7:	mov    DWORD PTR [ebp-0x2c],edi
  41e5ba:	mov    eax,DWORD PTR [ebp-0x28]
  41e5bd:	xor    eax,ebx
  41e5bf:	add    eax,esi
  41e5c1:	mov    DWORD PTR [ebp-0xc],eax
  41e5c4:	mov    eax,DWORD PTR [ebp-0x28]
  41e5c7:	xor    eax,ebx
  41e5c9:	add    eax,esi
  41e5cb:	mov    DWORD PTR [ebp-0x14],eax
  41e5ce:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41e5d5:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41e5dc:	mov    eax,DWORD PTR [ebp-0x28]
  41e5df:	mov    ecx,DWORD PTR [ebp-0x38]
  41e5e2:	xor    eax,ebx
  41e5e4:	add    eax,esi
  41e5e6:	cmp    ecx,eax
  41e5e8:	je     0x41e7de
  41e5ee:	jmp    0x41e7ba
  41e5f3:	mov    ecx,DWORD PTR [ebp-0xc]
  41e5f6:	mov    eax,DWORD PTR [ebp-0x38]
  41e5f9:	sub    eax,ecx
  41e5fb:	mov    ecx,DWORD PTR [ebp-0x48]
  41e5fe:	xor    ecx,ebx
  41e600:	add    ecx,esi
  41e602:	xor    edx,edx
  41e604:	div    ecx
  41e606:	mov    DWORD PTR [ebp-0x14],eax
  41e609:	mov    eax,DWORD PTR [ebp-0x20]
  41e60c:	mov    ecx,DWORD PTR [ebp-0x14]
  41e60f:	xor    eax,ebx
  41e611:	add    eax,esi
  41e613:	cmp    ecx,eax
  41e615:	jbe    0x41e621
  41e617:	mov    eax,DWORD PTR [ebp-0x20]
  41e61a:	xor    eax,ebx
  41e61c:	add    eax,esi
  41e61e:	mov    DWORD PTR [ebp-0x14],eax
  41e621:	mov    eax,DWORD PTR [ebp-0x48]
  41e624:	mov    ecx,DWORD PTR [ebp-0x14]
  41e627:	xor    eax,ebx
  41e629:	add    eax,esi
  41e62b:	imul   eax,ecx
  41e62e:	mov    DWORD PTR [ebp-0x14],eax
  41e631:	mov    eax,DWORD PTR [ebp-0x28]
  41e634:	mov    ecx,DWORD PTR [ebp-0x14]
  41e637:	xor    eax,ebx
  41e639:	add    eax,esi
  41e63b:	cmp    ecx,eax
  41e63d:	je     0x41e7a8
  41e643:	mov    eax,DWORD PTR [ebp-0x14]
  41e646:	mov    DWORD PTR [ebp-0x34],eax
  41e649:	mov    eax,DWORD PTR [ebp-0xc]
  41e64c:	add    eax,DWORD PTR [ebp-0x3c]
  41e64f:	mov    DWORD PTR [ebp-0x4c],0xf89c8585
  41e656:	mov    DWORD PTR [ebp-0x14],edi
  41e659:	mov    DWORD PTR [ebp-0x54],0xf89c8583
  41e660:	mov    DWORD PTR [ebp-0x1c],eax
  41e663:	mov    DWORD PTR [ebp-0x30],0xf89c8582
  41e66a:	mov    DWORD PTR [ebp-0x8],edi
  41e66d:	mov    eax,DWORD PTR [ebp-0x4c]
  41e670:	xor    eax,ebx
  41e672:	add    eax,esi
  41e674:	jmp    0x41e767
  41e679:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  41e683:	mov    DWORD PTR [ebp-0xd0],0xf89c85b1
  41e68d:	mov    eax,DWORD PTR [ebp-0x8]
  41e690:	mov    ecx,DWORD PTR [ebp-0x18]
  41e693:	xor    eax,ebx
  41e695:	add    eax,esi
  41e697:	imul   eax,ecx
  41e69a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e69d:	mov    al,BYTE PTR [eax+ecx*1]
  41e6a0:	mov    BYTE PTR [ebp-0x1],al
  41e6a3:	mov    eax,DWORD PTR [ebp-0x8]
  41e6a6:	mov    ecx,DWORD PTR [ebp-0x18]
  41e6a9:	xor    eax,ebx
  41e6ab:	add    eax,esi
  41e6ad:	imul   eax,ecx
  41e6b0:	mov    ecx,DWORD PTR [ebp-0x54]
  41e6b3:	xor    ecx,ebx
  41e6b5:	add    eax,ecx
  41e6b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e6ba:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e6]
  41e6c2:	mov    ecx,DWORD PTR [ebp-0xe4]
  41e6c8:	xor    ecx,ebx
  41e6ca:	lea    eax,[ecx+eax*1+0x3272e6]
  41e6d1:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e6d5:	xor    ecx,eax
  41e6d7:	mov    BYTE PTR [ebp-0x1],cl
  41e6da:	mov    al,BYTE PTR [ebp-0x1]
  41e6dd:	mov    ecx,DWORD PTR [ebp-0x8]
  41e6e0:	mov    edx,DWORD PTR [ebp-0x18]
  41e6e3:	xor    ecx,ebx
  41e6e5:	add    ecx,esi
  41e6e7:	imul   ecx,edx
  41e6ea:	mov    edx,DWORD PTR [ebp-0x1c]
  41e6ed:	mov    BYTE PTR [ecx+edx*1],al
  41e6f0:	mov    eax,DWORD PTR [ebp-0x8]
  41e6f3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e6f6:	xor    eax,ebx
  41e6f8:	add    eax,esi
  41e6fa:	imul   eax,ecx
  41e6fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e700:	mov    al,BYTE PTR [eax+ecx*1]
  41e703:	mov    BYTE PTR [ebp-0x1],al
  41e706:	mov    eax,DWORD PTR [ebp-0x8]
  41e709:	mov    ecx,DWORD PTR [ebp-0x18]
  41e70c:	xor    eax,ebx
  41e70e:	add    eax,esi
  41e710:	imul   eax,ecx
  41e713:	mov    ecx,DWORD PTR [ebp-0x14]
  41e716:	xor    ecx,ebx
  41e718:	add    eax,ecx
  41e71a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e71d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e6]
  41e725:	mov    ecx,DWORD PTR [ebp-0xd0]
  41e72b:	xor    ecx,ebx
  41e72d:	lea    eax,[ecx+eax*1+0x3272e6]
  41e734:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e738:	xor    ecx,eax
  41e73a:	mov    BYTE PTR [ebp-0x1],cl
  41e73d:	mov    al,BYTE PTR [ebp-0x1]
  41e740:	mov    ecx,DWORD PTR [ebp-0x8]
  41e743:	mov    edx,DWORD PTR [ebp-0x18]
  41e746:	xor    ecx,ebx
  41e748:	add    ecx,esi
  41e74a:	imul   ecx,edx
  41e74d:	mov    edx,DWORD PTR [ebp-0x1c]
  41e750:	mov    BYTE PTR [ecx+edx*1],al
  41e753:	mov    eax,DWORD PTR [ebp-0x30]
  41e756:	mov    ecx,DWORD PTR [ebp-0x14]
  41e759:	xor    eax,ebx
  41e75b:	xor    ecx,ebx
  41e75d:	add    eax,esi
  41e75f:	add    ecx,esi
  41e761:	imul   eax,ecx
  41e764:	add    eax,DWORD PTR [ebp-0x18]
  41e767:	mov    DWORD PTR [ebp-0x18],eax
  41e76a:	mov    eax,DWORD PTR [ebp-0x18]
  41e76d:	mov    ecx,DWORD PTR [ebp-0x34]
  41e770:	cmp    ecx,eax
  41e772:	jb     0x41e679
  41e778:	mov    eax,DWORD PTR [ebp-0x14]
  41e77b:	mov    ecx,DWORD PTR [ebp-0x34]
  41e77e:	xor    eax,ebx
  41e780:	add    eax,esi
  41e782:	imul   eax,ecx
  41e785:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e788:	xor    ecx,ebx
  41e78a:	add    ecx,esi
  41e78c:	or     eax,ecx
  41e78e:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e791:	xor    ecx,ebx
  41e793:	add    eax,ecx
  41e795:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e798:	xor    ecx,ebx
  41e79a:	add    eax,ecx
  41e79c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e79f:	lea    eax,[eax+ecx*1+0x64e5cc]
  41e7a6:	jmp    0x41e7b7
  41e7a8:	mov    eax,DWORD PTR [ebp-0x2c]
  41e7ab:	mov    ecx,DWORD PTR [ebp-0xc]
  41e7ae:	xor    eax,ebx
  41e7b0:	lea    eax,[eax+ecx*1+0x3272e6]
  41e7b7:	mov    DWORD PTR [ebp-0xc],eax
  41e7ba:	mov    eax,DWORD PTR [ebp-0x2c]
  41e7bd:	xor    eax,ebx
  41e7bf:	mov    ecx,0xffcd8d1a
  41e7c4:	sub    ecx,eax
  41e7c6:	add    ecx,DWORD PTR [ebp-0x38]
  41e7c9:	mov    eax,DWORD PTR [ebp-0x2c]
  41e7cc:	mov    edx,DWORD PTR [ebp-0xc]
  41e7cf:	xor    eax,ebx
  41e7d1:	add    eax,esi
  41e7d3:	imul   eax,edx
  41e7d6:	cmp    eax,ecx
  41e7d8:	jbe    0x41e5f3
  41e7de:	push   DWORD PTR [ebp+0x8]
  41e7e1:	mov    eax,DWORD PTR [ebp+0x8]
  41e7e4:	push   DWORD PTR [eax+0x1cc]
  41e7ea:	lea    eax,[ebp-0xd8]
  41e7f0:	push   eax
  41e7f1:	mov    eax,DWORD PTR [ebp+0x8]
  41e7f4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e7fa:	push   DWORD PTR [eax]
  41e7fc:	mov    eax,DWORD PTR [ebp+0x8]
  41e7ff:	mov    eax,DWORD PTR [eax+0x1c0]
  41e805:	push   DWORD PTR [eax]
  41e807:	push   DWORD PTR [ebp-0x40]
  41e80a:	push   DWORD PTR [ebp-0x24]
  41e80d:	call   0x41f2a4
  41e812:	mov    DWORD PTR [ebp-0x3c],eax
  41e815:	mov    eax,DWORD PTR [ebp-0x10]
  41e818:	mov    ecx,DWORD PTR [ebp-0x24]
  41e81b:	xor    eax,ebx
  41e81d:	add    eax,esi
  41e81f:	cmp    eax,ecx
  41e821:	je     0x41e842
  41e823:	mov    eax,DWORD PTR [ebp+0x8]
  41e826:	mov    ecx,DWORD PTR [ebp-0x50]
  41e829:	mov    eax,DWORD PTR [eax+0x1d8]
  41e82f:	xor    ecx,ebx
  41e831:	add    ecx,esi
  41e833:	push   ecx
  41e834:	mov    ecx,DWORD PTR [ebp-0x10]
  41e837:	xor    ecx,ebx
  41e839:	add    ecx,esi
  41e83b:	push   ecx
  41e83c:	push   DWORD PTR [ebp-0x24]
  41e83f:	call   DWORD PTR [eax+0x18]
  41e842:	pop    edi
  41e843:	pop    esi
  41e844:	pop    ebx
  41e845:	leave  
  41e846:	ret    0x4
  41e849:	push   ebp
  41e84a:	mov    ebp,esp
  41e84c:	push   ecx
  41e84d:	push   ecx
  41e84e:	lea    eax,[ebp-0x8]
  41e851:	mov    DWORD PTR [ebp-0x4],eax
  41e854:	push   esi
  41e855:	mov    esi,DWORD PTR [ebp-0x4]
  41e858:	mov    eax,0xf881ba0f
  41e85d:	mov    DWORD PTR [esi],eax
  41e85f:	mov    esi,DWORD PTR [ebp-0x8]
  41e862:	cmp    esi,eax
  41e864:	pop    esi
  41e865:	jne    0x41e86f
  41e867:	mov    BYTE PTR [ecx+0xa],0x70
  41e86b:	mov    BYTE PTR [edx+0x8],0x2f
  41e86f:	mov    BYTE PTR [edx+0xa],0x70
  41e873:	mov    BYTE PTR [ecx+0x2],0x2
  41e877:	leave  
  41e878:	ret    
  41e879:	push   ebp
  41e87a:	mov    ebp,esp
  41e87c:	push   ecx
  41e87d:	push   ecx
  41e87e:	lea    eax,[ebp-0x8]
  41e881:	mov    DWORD PTR [ebp-0x4],eax
  41e884:	mov    edx,DWORD PTR [ebp-0x4]
  41e887:	mov    eax,0xf88b0beb
  41e88c:	mov    DWORD PTR [edx],eax
  41e88e:	mov    edx,DWORD PTR [ebp-0x8]
  41e891:	cmp    edx,eax
  41e893:	jne    0x41e8a4
  41e895:	mov    eax,DWORD PTR [ebp+0x8]
  41e898:	mov    BYTE PTR [ecx+0x9],0xc
  41e89c:	mov    BYTE PTR [eax+0x7],0x47
  41e8a0:	mov    BYTE PTR [ecx+0x6],0xf
  41e8a4:	mov    BYTE PTR [ecx+0x3],0x1c
  41e8a8:	leave  
  41e8a9:	ret    0x4
  41e8ac:	push   ebp
  41e8ad:	mov    ebp,esp
  41e8af:	push   ecx
  41e8b0:	push   ecx
  41e8b1:	lea    eax,[ebp-0x8]
  41e8b4:	mov    DWORD PTR [ebp-0x4],eax
  41e8b7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ba:	mov    eax,0x7e0da0f
  41e8bf:	mov    DWORD PTR [edx],eax
  41e8c1:	mov    edx,DWORD PTR [ebp-0x8]
  41e8c4:	cmp    edx,eax
  41e8c6:	jne    0x41e8cc
  41e8c8:	mov    BYTE PTR [ecx+0x7],0x47
  41e8cc:	mov    eax,DWORD PTR [ebp+0x8]
  41e8cf:	mov    BYTE PTR [ecx+0x1],0x19
  41e8d3:	mov    BYTE PTR [eax+0x9],0x2c
  41e8d7:	leave  
  41e8d8:	ret    0x4
  41e8db:	push   ebp
  41e8dc:	mov    ebp,esp
  41e8de:	push   ecx
  41e8df:	push   ecx
  41e8e0:	lea    eax,[ebp-0x8]
  41e8e3:	mov    DWORD PTR [ebp-0x4],eax
  41e8e6:	push   esi
  41e8e7:	mov    esi,DWORD PTR [ebp-0x4]
  41e8ea:	mov    eax,0x7060e3e
  41e8ef:	mov    DWORD PTR [esi],eax
  41e8f1:	mov    esi,DWORD PTR [ebp-0x8]
  41e8f4:	cmp    esi,eax
  41e8f6:	pop    esi
  41e8f7:	jne    0x41e903
  41e8f9:	mov    BYTE PTR [edx+0x4],0x3
  41e8fd:	mov    WORD PTR [ecx+0x3],0x31c
  41e903:	mov    BYTE PTR [edx],0x3f
  41e906:	leave  
  41e907:	ret    
  41e908:	push   ebp
  41e909:	mov    ebp,esp
  41e90b:	push   ecx
  41e90c:	push   ecx
  41e90d:	lea    eax,[ebp-0x8]
  41e910:	mov    DWORD PTR [ebp-0x4],eax
  41e913:	mov    edx,DWORD PTR [ebp-0x4]
  41e916:	mov    eax,0xf8870b3f
  41e91b:	mov    DWORD PTR [edx],eax
  41e91d:	mov    edx,DWORD PTR [ebp-0x8]
  41e920:	cmp    edx,eax
  41e922:	jne    0x41e92f
  41e924:	mov    eax,DWORD PTR [ebp+0x8]
  41e927:	mov    BYTE PTR [ecx+0x8],0xf
  41e92b:	mov    BYTE PTR [eax+0x1],0x19
  41e92f:	mov    BYTE PTR [ecx+0x5],0xb
  41e933:	leave  
  41e934:	ret    0x4
  41e937:	push   esi
  41e938:	mov    ecx,edi
  41e93a:	call   0x41e908
  41e93f:	mov    edx,edi
  41e941:	mov    ecx,esi
  41e943:	mov    BYTE PTR [esi],0x1f
  41e946:	call   0x41e8db
  41e94b:	push   esi
  41e94c:	mov    ecx,edi
  41e94e:	mov    BYTE PTR [esi+0x5],0xb
  41e952:	call   0x41e8ac
  41e957:	push   esi
  41e958:	mov    BYTE PTR [esi+0x6],0xf
  41e95c:	call   0x41e879
  41e961:	mov    BYTE PTR [esi+0x2],0x2
  41e965:	mov    edx,esi
  41e967:	jmp    0x41e849
  41e96c:	push   ebp
  41e96d:	mov    ebp,esp
  41e96f:	push   ecx
  41e970:	mov    ecx,DWORD PTR [edx+0x194]
  41e976:	push   esi
  41e977:	mov    esi,DWORD PTR [ebp+0x8]
  41e97a:	mov    esi,DWORD PTR [esi]
  41e97c:	mov    DWORD PTR [ecx],esi
  41e97e:	mov    ecx,DWORD PTR [edx+0x194]
  41e984:	mov    ecx,DWORD PTR [ecx]
  41e986:	mov    esi,DWORD PTR [edx+0x190]
  41e98c:	mov    DWORD PTR [esi],ecx
  41e98e:	mov    eax,DWORD PTR [edx+0x194]
  41e994:	mov    ecx,DWORD PTR [eax]
  41e996:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e999:	add    ecx,DWORD PTR [eax]
  41e99b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e9a2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a5:	movzx  ecx,WORD PTR [ecx+0x16]
  41e9a9:	xor    eax,0x751089f
  41e9ae:	add    eax,0x3272e6
  41e9b3:	pop    esi
  41e9b4:	test   ecx,eax
  41e9b6:	je     0x41e9c4
  41e9b8:	mov    eax,DWORD PTR [edx+0x1c8]
  41e9be:	mov    DWORD PTR [eax],0xf89c8584
  41e9c4:	leave  
  41e9c5:	ret    0x4
  41e9c8:	push   ebp
  41e9c9:	mov    ebp,esp
  41e9cb:	sub    esp,0x70
  41e9ce:	and    DWORD PTR [ebp-0x20],0x0
  41e9d2:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e9d9:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e9e0:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  41e9e7:	mov    DWORD PTR [ebp-0x14],0xf89c8583
  41e9ee:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e9f5:	mov    eax,DWORD PTR [ebp+0x20]
  41e9f8:	mov    eax,DWORD PTR [eax+0x194]
  41e9fe:	mov    DWORD PTR [ebp-0xc],eax
  41ea01:	mov    eax,DWORD PTR [ebp+0x20]
  41ea04:	push   ebx
  41ea05:	push   esi
  41ea06:	mov    esi,DWORD PTR [eax+0x190]
  41ea0c:	mov    eax,DWORD PTR [ebp+0x20]
  41ea0f:	mov    eax,DWORD PTR [eax+0x18c]
  41ea15:	mov    DWORD PTR [ebp-0x8],eax
  41ea18:	mov    eax,DWORD PTR [eax]
  41ea1a:	push   edi
  41ea1b:	mov    DWORD PTR [ebp-0x4],esi
  41ea1e:	test   eax,eax
  41ea20:	jne    0x41ea2d
  41ea22:	push   DWORD PTR [ebp+0x1c]
  41ea25:	mov    edx,DWORD PTR [ebp+0x20]
  41ea28:	call   0x41e96c
  41ea2d:	mov    eax,DWORD PTR [esi]
  41ea2f:	mov    ebx,DWORD PTR [esi]
  41ea31:	add    ebx,DWORD PTR [eax+0x3c]
  41ea34:	mov    eax,DWORD PTR [ebp+0xc]
  41ea37:	mov    ecx,DWORD PTR [ebp-0x8]
  41ea3a:	mov    ecx,DWORD PTR [ecx]
  41ea3c:	mov    esi,0x751089f
  41ea41:	xor    eax,esi
  41ea43:	mov    edi,0x3272e6
  41ea48:	add    eax,edi
  41ea4a:	cmp    eax,ecx
  41ea4c:	jne    0x41ec84
  41ea52:	mov    eax,DWORD PTR [ebp-0xc]
  41ea55:	mov    eax,DWORD PTR [eax]
  41ea57:	mov    DWORD PTR [ebp-0x10],eax
  41ea5a:	mov    eax,DWORD PTR [ebx+0x50]
  41ea5d:	mov    DWORD PTR [ebp-0x68],eax
  41ea60:	mov    eax,DWORD PTR [ebp-0x18]
  41ea63:	xor    eax,esi
  41ea65:	add    eax,edi
  41ea67:	mov    DWORD PTR [ebp-0x64],eax
  41ea6a:	mov    eax,DWORD PTR [ebp-0x14]
  41ea6d:	and    DWORD PTR [ebp-0x6c],0x0
  41ea71:	xor    eax,esi
  41ea73:	add    eax,edi
  41ea75:	mov    DWORD PTR [ebp-0x60],eax
  41ea78:	lea    eax,[ebp-0x70]
  41ea7b:	push   eax
  41ea7c:	mov    eax,DWORD PTR [ebp+0x8]
  41ea7f:	xor    eax,esi
  41ea81:	add    eax,edi
  41ea83:	push   eax
  41ea84:	mov    eax,DWORD PTR [ebp+0x20]
  41ea87:	add    eax,0xaa
  41ea8c:	push   eax
  41ea8d:	mov    eax,DWORD PTR [ebp+0x20]
  41ea90:	mov    eax,DWORD PTR [eax+0x198]
  41ea96:	mov    DWORD PTR [ebp-0x70],0x4
  41ea9d:	push   DWORD PTR [eax]
  41ea9f:	mov    eax,DWORD PTR [ebp+0x10]
  41eaa2:	call   eax
  41eaa4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eaa7:	mov    ecx,DWORD PTR [ecx]
  41eaa9:	mov    edx,DWORD PTR [ebp-0x8]
  41eaac:	mov    DWORD PTR [ebp-0x6c],eax
  41eaaf:	mov    DWORD PTR [ebp+0x1c],eax
  41eab2:	mov    DWORD PTR [edx],ecx
  41eab4:	mov    ecx,DWORD PTR [ebp-0x4]
  41eab7:	mov    DWORD PTR [ecx],eax
  41eab9:	mov    eax,DWORD PTR [ebx+0x50]
  41eabc:	mov    DWORD PTR [ebp-0x68],eax
  41eabf:	mov    eax,DWORD PTR [ebp-0x1c]
  41eac2:	xor    eax,esi
  41eac4:	add    eax,edi
  41eac6:	mov    DWORD PTR [ebp-0x64],eax
  41eac9:	lea    eax,[ebp-0x20]
  41eacc:	mov    DWORD PTR [ebp-0x60],eax
  41eacf:	lea    eax,[ebp-0x70]
  41ead2:	push   eax
  41ead3:	mov    eax,DWORD PTR [ebp+0x8]
  41ead6:	xor    eax,esi
  41ead8:	add    eax,edi
  41eada:	push   eax
  41eadb:	mov    eax,DWORD PTR [ebp+0x20]
  41eade:	add    eax,0xee
  41eae3:	push   eax
  41eae4:	mov    eax,DWORD PTR [ebp+0x20]
  41eae7:	mov    eax,DWORD PTR [eax+0x198]
  41eaed:	mov    DWORD PTR [ebp-0x70],0x4
  41eaf4:	push   DWORD PTR [eax]
  41eaf6:	mov    eax,DWORD PTR [ebp+0x10]
  41eaf9:	call   eax
  41eafb:	test   eax,eax
  41eafd:	je     0x41eb22
  41eaff:	and    DWORD PTR [ebp+0xc],0x0
  41eb03:	cmp    DWORD PTR [ebx+0x50],0x0
  41eb07:	jbe    0x41eb22
  41eb09:	mov    eax,DWORD PTR [ebp+0x1c]
  41eb0c:	mov    ecx,DWORD PTR [ebp-0x10]
  41eb0f:	sub    ecx,eax
  41eb11:	mov    dl,BYTE PTR [ecx+eax*1]
  41eb14:	inc    DWORD PTR [ebp+0xc]
  41eb17:	mov    BYTE PTR [eax],dl
  41eb19:	mov    edx,DWORD PTR [ebp+0xc]
  41eb1c:	inc    eax
  41eb1d:	cmp    edx,DWORD PTR [ebx+0x50]
  41eb20:	jb     0x41eb11
  41eb22:	mov    edx,DWORD PTR [ebp+0x1c]
  41eb25:	mov    ecx,DWORD PTR [edx+0x3c]
  41eb28:	add    ecx,edx
  41eb2a:	mov    eax,DWORD PTR [ecx+0xa0]
  41eb30:	mov    ebx,DWORD PTR [ecx+0x28]
  41eb33:	add    eax,edx
  41eb35:	sub    edx,DWORD PTR [ebp-0x10]
  41eb38:	add    ebx,DWORD PTR [ebp+0x1c]
  41eb3b:	mov    DWORD PTR [ebp+0xc],edx
  41eb3e:	mov    DWORD PTR [ebp-0x2c],ecx
  41eb41:	mov    DWORD PTR [ebp-0x14],ebx
  41eb44:	mov    DWORD PTR [ebp-0x8],0x0
  41eb4b:	jmp    0x41ebc7
  41eb4d:	add    edx,0xfffffff8
  41eb50:	shr    edx,1
  41eb52:	mov    DWORD PTR [ebp-0x18],edx
  41eb55:	je     0x41ebb3
  41eb57:	lea    edx,[eax+0x8]
  41eb5a:	mov    DWORD PTR [ebp-0x4],edx
  41eb5d:	mov    edx,DWORD PTR [ebp-0x18]
  41eb60:	mov    DWORD PTR [ebp-0x18],edx
  41eb63:	mov    edx,DWORD PTR [ebp-0x4]
  41eb66:	movzx  edx,WORD PTR [edx]
  41eb69:	mov    DWORD PTR [ebp-0x24],edx
  41eb6c:	and    edx,0xfff
  41eb72:	mov    DWORD PTR [ebp-0x28],edx
  41eb75:	mov    edx,DWORD PTR [ebp-0x24]
  41eb78:	shr    edx,0xc
  41eb7b:	add    edx,0xffcd8d1a
  41eb81:	xor    edx,esi
  41eb83:	cmp    edx,0xf89c8582
  41eb89:	jne    0x41ebaa
  41eb8b:	mov    edx,DWORD PTR [ebp-0x28]
  41eb8e:	add    edx,DWORD PTR [ebp+0x1c]
  41eb91:	mov    ebx,DWORD PTR [eax]
  41eb93:	cmp    DWORD PTR [ebx+edx*1],0x0
  41eb97:	je     0x41eba7
  41eb99:	mov    ecx,DWORD PTR [ebp+0xc]
  41eb9c:	add    ecx,DWORD PTR [ebx+edx*1]
  41eb9f:	mov    ebx,DWORD PTR [eax]
  41eba1:	mov    DWORD PTR [edx+ebx*1],ecx
  41eba4:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eba7:	mov    ebx,DWORD PTR [ebp-0x14]
  41ebaa:	add    DWORD PTR [ebp-0x4],0x2
  41ebae:	dec    DWORD PTR [ebp-0x18]
  41ebb1:	jne    0x41eb63
  41ebb3:	mov    edx,DWORD PTR [ebp-0xc]
  41ebb6:	add    DWORD PTR [ebp-0x8],edx
  41ebb9:	mov    edx,DWORD PTR [ebp-0x8]
  41ebbc:	cmp    edx,DWORD PTR [ecx+0xa4]
  41ebc2:	jae    0x41ebd5
  41ebc4:	add    eax,DWORD PTR [ebp-0xc]
  41ebc7:	mov    edx,DWORD PTR [eax+0x4]
  41ebca:	mov    DWORD PTR [ebp-0xc],edx
  41ebcd:	test   edx,edx
  41ebcf:	jne    0x41eb4d
  41ebd5:	mov    eax,DWORD PTR [ebp-0x10]
  41ebd8:	mov    DWORD PTR [ebp-0x6c],eax
  41ebdb:	mov    DWORD PTR [ebp-0x70],0x4
  41ebe2:	mov    eax,DWORD PTR [ecx+0x50]
  41ebe5:	mov    DWORD PTR [ebp-0x68],eax
  41ebe8:	mov    eax,DWORD PTR [ebp-0x1c]
  41ebeb:	xor    eax,esi
  41ebed:	add    eax,edi
  41ebef:	mov    DWORD PTR [ebp-0x64],eax
  41ebf2:	lea    eax,[ebp-0x20]
  41ebf5:	mov    DWORD PTR [ebp-0x60],eax
  41ebf8:	lea    eax,[ebp-0x70]
  41ebfb:	push   eax
  41ebfc:	mov    eax,DWORD PTR [ebp+0x8]
  41ebff:	xor    eax,esi
  41ec01:	add    eax,edi
  41ec03:	push   eax
  41ec04:	mov    eax,DWORD PTR [ebp+0x20]
  41ec07:	add    eax,0xee
  41ec0c:	push   eax
  41ec0d:	mov    eax,DWORD PTR [ebp+0x20]
  41ec10:	mov    eax,DWORD PTR [eax+0x198]
  41ec16:	push   DWORD PTR [eax]
  41ec18:	mov    eax,DWORD PTR [ebp+0x10]
  41ec1b:	call   eax
  41ec1d:	mov    eax,DWORD PTR [ebp+0x20]
  41ec20:	mov    eax,DWORD PTR [eax+0x180]
  41ec26:	add    eax,DWORD PTR [ebp+0xc]
  41ec29:	mov    ecx,DWORD PTR [ebp+0xc]
  41ec2c:	push   DWORD PTR [ebp+0x18]
  41ec2f:	mov    DWORD PTR [eax],ecx
  41ec31:	push   DWORD PTR [ebp+0x14]
  41ec34:	push   DWORD PTR [ebp+0x1c]
  41ec37:	call   ebx
  41ec39:	mov    ecx,DWORD PTR [ebp+0xc]
  41ec3c:	add    ecx,DWORD PTR [ebp+0x20]
  41ec3f:	lea    eax,[ebp+0x4]
  41ec42:	mov    DWORD PTR [ebp+0x20],ecx
  41ec45:	mov    ecx,DWORD PTR [ebp+0x20]
  41ec48:	mov    ecx,DWORD PTR [ebp+0x20]
  41ec4b:	mov    edx,DWORD PTR [ecx+0x190]
  41ec51:	mov    ecx,DWORD PTR [ebp+0x20]
  41ec54:	mov    ecx,DWORD PTR [ecx+0x18c]
  41ec5a:	mov    esi,DWORD PTR [ecx]
  41ec5c:	cmp    DWORD PTR [eax],esi
  41ec5e:	jb     0x41ec7f
  41ec60:	mov    esi,DWORD PTR [edx]
  41ec62:	mov    edi,DWORD PTR [edx]
  41ec64:	mov    esi,DWORD PTR [esi+0x3c]
  41ec67:	lea    esi,[edi+esi*1+0x50]
  41ec6b:	mov    edi,DWORD PTR [ecx]
  41ec6d:	add    edi,DWORD PTR [esi]
  41ec6f:	cmp    DWORD PTR [eax],edi
  41ec71:	jae    0x41ec7f
  41ec73:	mov    esi,DWORD PTR [ecx]
  41ec75:	mov    ecx,DWORD PTR [eax]
  41ec77:	mov    edx,DWORD PTR [edx]
  41ec79:	sub    ecx,esi
  41ec7b:	add    edx,ecx
  41ec7d:	mov    DWORD PTR [eax],edx
  41ec7f:	mov    eax,DWORD PTR [ebp+0xc]
  41ec82:	jmp    0x41ec86
  41ec84:	xor    eax,eax
  41ec86:	pop    edi
  41ec87:	pop    esi
  41ec88:	pop    ebx
  41ec89:	leave  
  41ec8a:	ret    0x1c
  41ec8d:	push   ebp
  41ec8e:	mov    ebp,esp
  41ec90:	sub    esp,0x1c
  41ec93:	push   esi
  41ec94:	mov    esi,eax
  41ec96:	mov    eax,DWORD PTR [ecx+0x190]
  41ec9c:	cmp    DWORD PTR [eax],0x0
  41ec9f:	je     0x41edaf
  41eca5:	test   edx,edx
  41eca7:	je     0x41edaf
  41ecad:	test   esi,esi
  41ecaf:	je     0x41edaf
  41ecb5:	mov    eax,DWORD PTR [esi+0x88]
  41ecbb:	test   eax,eax
  41ecbd:	je     0x41edaa
  41ecc3:	cmp    DWORD PTR [esi+0x8c],0x10
  41ecca:	je     0x41edaa
  41ecd0:	cmp    DWORD PTR [esi+0x34],edx
  41ecd3:	je     0x41edaa
  41ecd9:	mov    esi,DWORD PTR [ecx+0x18c]
  41ecdf:	and    DWORD PTR [ebp-0x10],0x0
  41ece3:	mov    ecx,edx
  41ece5:	sub    ecx,DWORD PTR [esi]
  41ece7:	add    eax,edx
  41ece9:	movzx  edx,WORD PTR [eax+0xc]
  41eced:	mov    DWORD PTR [ebp-0x1c],ecx
  41ecf0:	movzx  ecx,WORD PTR [eax+0xe]
  41ecf4:	add    ecx,edx
  41ecf6:	je     0x41edaa
  41ecfc:	lea    ecx,[eax+0x14]
  41ecff:	push   ebx
  41ed00:	mov    DWORD PTR [ebp-0x18],ecx
  41ed03:	mov    esi,0x7fffffff
  41ed08:	push   edi
  41ed09:	test   DWORD PTR [ecx],esi
  41ed0b:	je     0x41ed8c
  41ed0d:	mov    edx,DWORD PTR [ecx]
  41ed0f:	and    DWORD PTR [ebp-0xc],0x0
  41ed13:	and    edx,esi
  41ed15:	add    edx,eax
  41ed17:	movzx  edi,WORD PTR [edx+0xe]
  41ed1b:	movzx  ebx,WORD PTR [edx+0xc]
  41ed1f:	add    edi,ebx
  41ed21:	je     0x41ed8c
  41ed23:	lea    ecx,[edx+0x14]
  41ed26:	mov    DWORD PTR [ebp-0x14],ecx
  41ed29:	test   DWORD PTR [ecx],esi
  41ed2b:	je     0x41ed6e
  41ed2d:	mov    ecx,DWORD PTR [ecx]
  41ed2f:	and    DWORD PTR [ebp-0x8],0x0
  41ed33:	and    ecx,esi
  41ed35:	add    ecx,eax
  41ed37:	movzx  edi,WORD PTR [ecx+0xe]
  41ed3b:	movzx  ebx,WORD PTR [ecx+0xc]
  41ed3f:	add    edi,ebx
  41ed41:	je     0x41ed6e
  41ed43:	lea    edi,[ecx+0x14]
  41ed46:	mov    DWORD PTR [ebp-0x4],edi
  41ed49:	mov    edi,DWORD PTR [ebp-0x4]
  41ed4c:	mov    edi,DWORD PTR [edi]
  41ed4e:	test   edi,edi
  41ed50:	je     0x41ed58
  41ed52:	mov    ebx,DWORD PTR [ebp-0x1c]
  41ed55:	add    DWORD PTR [edi+eax*1],ebx
  41ed58:	movzx  edi,WORD PTR [ecx+0xe]
  41ed5c:	movzx  ebx,WORD PTR [ecx+0xc]
  41ed60:	inc    DWORD PTR [ebp-0x8]
  41ed63:	add    DWORD PTR [ebp-0x4],0x8
  41ed67:	add    edi,ebx
  41ed69:	cmp    DWORD PTR [ebp-0x8],edi
  41ed6c:	jb     0x41ed49
  41ed6e:	movzx  edi,WORD PTR [edx+0xe]
  41ed72:	movzx  ebx,WORD PTR [edx+0xc]
  41ed76:	mov    ecx,DWORD PTR [ebp-0x14]
  41ed79:	inc    DWORD PTR [ebp-0xc]
  41ed7c:	add    ecx,0x8
  41ed7f:	add    edi,ebx
  41ed81:	mov    DWORD PTR [ebp-0x14],ecx
  41ed84:	cmp    DWORD PTR [ebp-0xc],edi
  41ed87:	jb     0x41ed29
  41ed89:	mov    ecx,DWORD PTR [ebp-0x18]
  41ed8c:	movzx  edx,WORD PTR [eax+0xe]
  41ed90:	movzx  edi,WORD PTR [eax+0xc]
  41ed94:	inc    DWORD PTR [ebp-0x10]
  41ed97:	add    ecx,0x8
  41ed9a:	add    edx,edi
  41ed9c:	mov    DWORD PTR [ebp-0x18],ecx
  41ed9f:	cmp    DWORD PTR [ebp-0x10],edx
  41eda2:	jb     0x41ed09
  41eda8:	pop    edi
  41eda9:	pop    ebx
  41edaa:	xor    eax,eax
  41edac:	inc    eax
  41edad:	jmp    0x41edb1
  41edaf:	xor    eax,eax
  41edb1:	pop    esi
  41edb2:	leave  
  41edb3:	ret    
  41edb4:	push   ebp
  41edb5:	mov    ebp,esp
  41edb7:	mov    ecx,DWORD PTR [ecx+0x190]
  41edbd:	mov    eax,DWORD PTR [ebp+0xc]
  41edc0:	sub    esp,0x10
  41edc3:	push   ebx
  41edc4:	xor    ebx,ebx
  41edc6:	push   esi
  41edc7:	push   edi
  41edc8:	cmp    DWORD PTR [ecx],ebx
  41edca:	je     0x41ee52
  41edd0:	cmp    eax,ebx
  41edd2:	je     0x41ee52
  41edd4:	cmp    DWORD PTR [eax+0x78],ebx
  41edd7:	jne    0x41edde
  41edd9:	xor    eax,eax
  41eddb:	inc    eax
  41eddc:	jmp    0x41ee54
  41edde:	mov    eax,DWORD PTR [eax+0x78]
  41ede1:	add    eax,DWORD PTR [ebp+0x8]
  41ede4:	mov    ecx,DWORD PTR [eax+0x1c]
  41ede7:	mov    edx,DWORD PTR [eax+0x24]
  41edea:	mov    esi,DWORD PTR [eax+0x14]
  41eded:	mov    edi,DWORD PTR [eax+0x18]
  41edf0:	add    ecx,DWORD PTR [ebp+0x8]
  41edf3:	add    edx,DWORD PTR [ebp+0x8]
  41edf6:	mov    DWORD PTR [ebp-0x4],esi
  41edf9:	cmp    esi,edi
  41edfb:	ja     0x41ee00
  41edfd:	mov    DWORD PTR [ebp-0x4],edi
  41ee00:	mov    DWORD PTR [ebp-0x8],ebx
  41ee03:	cmp    DWORD PTR [ebp-0x4],ebx
  41ee06:	jbe    0x41edd9
  41ee08:	cmp    ebx,DWORD PTR [eax+0x14]
  41ee0b:	jae    0x41ee13
  41ee0d:	movzx  esi,WORD PTR [edx+ebx*2]
  41ee11:	jmp    0x41ee15
  41ee13:	mov    esi,ebx
  41ee15:	lea    esi,[ecx+esi*4]
  41ee18:	mov    edi,DWORD PTR [esi]
  41ee1a:	test   edi,edi
  41ee1c:	je     0x41ee47
  41ee1e:	add    edi,DWORD PTR [ebp+0x8]
  41ee21:	mov    DWORD PTR [ebp-0x10],edi
  41ee24:	cmp    edi,eax
  41ee26:	jbe    0x41ee38
  41ee28:	mov    ebx,DWORD PTR [ebp+0xc]
  41ee2b:	mov    ebx,DWORD PTR [ebx+0x7c]
  41ee2e:	add    ebx,eax
  41ee30:	cmp    edi,ebx
  41ee32:	jae    0x41ee38
  41ee34:	mov    esi,DWORD PTR [esi]
  41ee36:	jmp    0x41ee40
  41ee38:	sub    edi,DWORD PTR [ebp+0x8]
  41ee3b:	mov    DWORD PTR [esi],edi
  41ee3d:	mov    esi,DWORD PTR [ebp-0x10]
  41ee40:	test   esi,esi
  41ee42:	je     0x41ee52
  41ee44:	mov    ebx,DWORD PTR [ebp-0x8]
  41ee47:	inc    ebx
  41ee48:	mov    DWORD PTR [ebp-0x8],ebx
  41ee4b:	cmp    ebx,DWORD PTR [ebp-0x4]
  41ee4e:	jb     0x41ee08
  41ee50:	jmp    0x41edd9
  41ee52:	xor    eax,eax
  41ee54:	pop    edi
  41ee55:	pop    esi
  41ee56:	pop    ebx
  41ee57:	leave  
  41ee58:	ret    0x8
  41ee5b:	push   ebp
  41ee5c:	mov    ebp,esp
  41ee5e:	sub    esp,0x2c
  41ee61:	mov    edx,0xf89c8585
  41ee66:	mov    DWORD PTR [ebp-0x4],edx
  41ee69:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41ee70:	mov    eax,DWORD PTR [ebp-0x4]
  41ee73:	mov    ecx,DWORD PTR [ebp-0x4]
  41ee76:	mov    ecx,DWORD PTR [ebp-0x4]
  41ee79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ee7c:	mov    ecx,DWORD PTR [ebp-0x4]
  41ee7f:	mov    ecx,DWORD PTR [ebp-0x4]
  41ee82:	push   ebx
  41ee83:	mov    ebx,DWORD PTR [ebp+0x10]
  41ee86:	push   esi
  41ee87:	mov    esi,0x751089f
  41ee8c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41ee93:	mov    ecx,DWORD PTR [ebp-0x4]
  41ee96:	mov    ebx,DWORD PTR [ebx+0x190]
  41ee9c:	push   edi
  41ee9d:	mov    edi,0x3272e6
  41eea2:	xor    ecx,esi
  41eea4:	xor    eax,esi
  41eea6:	add    eax,edi
  41eea8:	add    ecx,edi
  41eeaa:	mov    DWORD PTR [ebp-0x18],eax
  41eead:	cmp    ecx,DWORD PTR [ebx]
  41eeaf:	je     0x41f130
  41eeb5:	mov    ebx,DWORD PTR [ebp-0x4]
  41eeb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41eebb:	xor    ebx,esi
  41eebd:	add    ebx,edi
  41eebf:	cmp    ebx,ecx
  41eec1:	je     0x41f130
  41eec7:	mov    ebx,DWORD PTR [ebp-0x4]
  41eeca:	mov    ecx,DWORD PTR [ecx+0x80]
  41eed0:	xor    ebx,esi
  41eed2:	add    ebx,edi
  41eed4:	cmp    ecx,ebx
  41eed6:	je     0x41f12b
  41eedc:	add    ecx,DWORD PTR [ebp+0x8]
  41eedf:	mov    DWORD PTR [ebp-0x2c],ecx
  41eee2:	mov    ebx,edx
  41eee4:	xor    ebx,esi
  41eee6:	add    ebx,edi
  41eee8:	mov    DWORD PTR [ebp-0x10],ebx
  41eeeb:	mov    ebx,DWORD PTR [ebp-0x10]
  41eeee:	cmp    ebx,edx
  41eef0:	je     0x41ef04
  41eef2:	mov    edx,DWORD PTR [ebp-0x10]
  41eef5:	mov    ebx,DWORD PTR [ebp-0x4]
  41eef8:	imul   edx,edx,0x14
  41eefb:	xor    ebx,esi
  41eefd:	add    ebx,edi
  41eeff:	cmp    DWORD PTR [edx+ecx*1],ebx
  41ef02:	jne    0x41ef1b
  41ef04:	mov    edx,DWORD PTR [ebp-0x10]
  41ef07:	mov    ebx,DWORD PTR [ebp-0x4]
  41ef0a:	imul   edx,edx,0x14
  41ef0d:	xor    ebx,esi
  41ef0f:	add    ebx,edi
  41ef11:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41ef15:	je     0x41f11d
  41ef1b:	mov    eax,DWORD PTR [ebp-0x4]
  41ef1e:	mov    ebx,DWORD PTR [ebp-0x4]
  41ef21:	mov    eax,DWORD PTR [ebp-0x10]
  41ef24:	imul   eax,eax,0x14
  41ef27:	add    eax,ecx
  41ef29:	mov    ecx,DWORD PTR [eax+0x10]
  41ef2c:	add    ecx,DWORD PTR [ebp+0x8]
  41ef2f:	xor    ebx,esi
  41ef31:	mov    DWORD PTR [ebp-0x1c],ecx
  41ef34:	mov    ecx,DWORD PTR [ebp-0x4]
  41ef37:	mov    edx,DWORD PTR [ebp-0x4]
  41ef3a:	xor    ecx,esi
  41ef3c:	add    ecx,edi
  41ef3e:	xor    edx,esi
  41ef40:	mov    DWORD PTR [ebp-0x24],ecx
  41ef43:	mov    ecx,DWORD PTR [eax]
  41ef45:	add    edx,edi
  41ef47:	add    ebx,edi
  41ef49:	cmp    ecx,edx
  41ef4b:	je     0x41ef53
  41ef4d:	add    ecx,DWORD PTR [ebp+0x8]
  41ef50:	mov    DWORD PTR [ebp-0x24],ecx
  41ef53:	mov    ecx,DWORD PTR [ebp-0x4]
  41ef56:	xor    ecx,esi
  41ef58:	add    ecx,DWORD PTR [eax+0xc]
  41ef5b:	mov    eax,DWORD PTR [ebp+0x8]
  41ef5e:	lea    eax,[ecx+eax*1+0x3272e6]
  41ef65:	mov    DWORD PTR [ebp+0xc],eax
  41ef68:	mov    DWORD PTR [ebp-0x28],0xf89c8580
  41ef6f:	mov    eax,DWORD PTR [ebp+0x10]
  41ef72:	push   DWORD PTR [ebp+0xc]
  41ef75:	mov    eax,DWORD PTR [eax+0x1d8]
  41ef7b:	call   DWORD PTR [eax]
  41ef7d:	mov    ecx,DWORD PTR [ebp-0x4]
  41ef80:	xor    ecx,esi
  41ef82:	add    ecx,edi
  41ef84:	mov    DWORD PTR [ebp-0xc],eax
  41ef87:	cmp    ecx,eax
  41ef89:	jne    0x41ef9d
  41ef8b:	mov    eax,DWORD PTR [ebp+0x10]
  41ef8e:	push   DWORD PTR [ebp+0xc]
  41ef91:	mov    eax,DWORD PTR [eax+0x1d8]
  41ef97:	call   DWORD PTR [eax+0xc]
  41ef9a:	mov    DWORD PTR [ebp-0xc],eax
  41ef9d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41efa4:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41efab:	mov    eax,DWORD PTR [ebp-0x4]
  41efae:	xor    eax,esi
  41efb0:	add    eax,edi
  41efb2:	cmp    eax,DWORD PTR [ebp-0xc]
  41efb5:	jne    0x41efda
  41efb7:	mov    eax,DWORD PTR [ebp-0x8]
  41efba:	mov    ecx,DWORD PTR [ebp-0x20]
  41efbd:	xor    eax,esi
  41efbf:	xor    ecx,esi
  41efc1:	lea    ebx,[ebx+eax*1+0x3272e6]
  41efc8:	mov    eax,DWORD PTR [ebp+0x10]
  41efcb:	mov    eax,DWORD PTR [eax+0x1d8]
  41efd1:	add    ecx,edi
  41efd3:	imul   ecx,ebx
  41efd6:	push   ecx
  41efd7:	call   DWORD PTR [eax+0x24]
  41efda:	mov    eax,DWORD PTR [ebp-0x4]
  41efdd:	xor    eax,esi
  41efdf:	add    eax,edi
  41efe1:	cmp    eax,DWORD PTR [ebp-0xc]
  41efe4:	jne    0x41eff5
  41efe6:	mov    eax,DWORD PTR [ebp-0x28]
  41efe9:	xor    eax,esi
  41efeb:	add    eax,edi
  41efed:	cmp    ebx,eax
  41efef:	jbe    0x41ef6f
  41eff5:	mov    eax,DWORD PTR [ebp-0x4]
  41eff8:	xor    eax,esi
  41effa:	add    eax,edi
  41effc:	cmp    eax,DWORD PTR [ebp-0xc]
  41efff:	jne    0x41f018
  41f001:	mov    eax,DWORD PTR [ebp-0x8]
  41f004:	mov    ecx,DWORD PTR [ebp-0x18]
  41f007:	xor    eax,esi
  41f009:	lea    eax,[ecx+eax*1+0x3272e6]
  41f010:	mov    DWORD PTR [ebp-0x18],eax
  41f013:	jmp    0x41f107
  41f018:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41f01f:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41f026:	mov    ebx,DWORD PTR [ebp-0x4]
  41f029:	xor    ebx,esi
  41f02b:	add    ebx,edi
  41f02d:	jmp    0x41f0f4
  41f032:	mov    eax,DWORD PTR [ebp-0x4]
  41f035:	xor    eax,esi
  41f037:	add    eax,edi
  41f039:	mov    DWORD PTR [ebp-0x14],eax
  41f03c:	mov    eax,DWORD PTR [ebp-0x4]
  41f03f:	xor    eax,esi
  41f041:	add    eax,edi
  41f043:	mov    DWORD PTR [ebp+0xc],eax
  41f046:	mov    ecx,DWORD PTR [ebp-0x4]
  41f049:	mov    eax,DWORD PTR [ebp-0x24]
  41f04c:	xor    ecx,esi
  41f04e:	add    ecx,edi
  41f050:	cmp    ecx,eax
  41f052:	je     0x41f05a
  41f054:	mov    eax,DWORD PTR [eax+ebx*4]
  41f057:	mov    DWORD PTR [ebp-0x14],eax
  41f05a:	mov    eax,DWORD PTR [ebp-0x1c]
  41f05d:	mov    eax,DWORD PTR [eax+ebx*4]
  41f060:	mov    DWORD PTR [ebp+0xc],eax
  41f063:	mov    eax,DWORD PTR [ebp-0x4]
  41f066:	mov    ecx,DWORD PTR [ebp-0x14]
  41f069:	xor    eax,esi
  41f06b:	add    eax,edi
  41f06d:	cmp    eax,ecx
  41f06f:	je     0x41f09a
  41f071:	mov    eax,DWORD PTR [ebp-0x4]
  41f074:	mov    ecx,DWORD PTR [ebp-0x14]
  41f077:	xor    eax,esi
  41f079:	add    eax,edi
  41f07b:	shr    ecx,0x1f
  41f07e:	cmp    eax,ecx
  41f080:	je     0x41f09a
  41f082:	mov    ecx,DWORD PTR [ebp-0x14]
  41f085:	mov    eax,DWORD PTR [ebp+0x10]
  41f088:	mov    eax,DWORD PTR [eax+0x1d8]
  41f08e:	movzx  ecx,cx
  41f091:	push   ecx
  41f092:	push   DWORD PTR [ebp-0xc]
  41f095:	call   DWORD PTR [eax+0x8]
  41f098:	jmp    0x41f0b3
  41f09a:	mov    eax,DWORD PTR [ebp+0xc]
  41f09d:	add    eax,DWORD PTR [ebp+0x8]
  41f0a0:	mov    ecx,DWORD PTR [ebp+0x10]
  41f0a3:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41f0a9:	add    eax,0x2
  41f0ac:	push   eax
  41f0ad:	push   DWORD PTR [ebp-0xc]
  41f0b0:	call   DWORD PTR [ecx+0x8]
  41f0b3:	mov    DWORD PTR [ebp+0xc],eax
  41f0b6:	mov    eax,DWORD PTR [ebp-0x4]
  41f0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0bc:	xor    eax,esi
  41f0be:	add    eax,edi
  41f0c0:	cmp    eax,ecx
  41f0c2:	mov    eax,DWORD PTR [ebp-0x8]
  41f0c5:	jne    0x41f0d8
  41f0c7:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0ca:	xor    eax,esi
  41f0cc:	lea    eax,[ecx+eax*1+0x3272e6]
  41f0d3:	mov    DWORD PTR [ebp-0x18],eax
  41f0d6:	jmp    0x41f0e8
  41f0d8:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0db:	xor    eax,esi
  41f0dd:	add    eax,edi
  41f0df:	imul   eax,ecx
  41f0e2:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f0e5:	mov    DWORD PTR [ecx+ebx*4],eax
  41f0e8:	mov    eax,DWORD PTR [ebp-0x8]
  41f0eb:	xor    eax,esi
  41f0ed:	lea    ebx,[ebx+eax*1+0x3272e6]
  41f0f4:	mov    eax,DWORD PTR [ebp-0x4]
  41f0f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f0fa:	xor    eax,esi
  41f0fc:	add    eax,edi
  41f0fe:	cmp    DWORD PTR [ecx+ebx*4],eax
  41f101:	jne    0x41f032
  41f107:	mov    edx,DWORD PTR [ebp-0x10]
  41f10a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41f10d:	mov    eax,DWORD PTR [ebp-0x18]
  41f110:	sub    edx,0x3272e5
  41f116:	xor    edx,esi
  41f118:	jmp    0x41eee2
  41f11d:	mov    ecx,DWORD PTR [ebp-0x4]
  41f120:	xor    ecx,esi
  41f122:	add    ecx,edi
  41f124:	cmp    eax,ecx
  41f126:	mov    eax,DWORD PTR [ebp-0x4]
  41f129:	jne    0x41f133
  41f12b:	mov    eax,DWORD PTR [ebp-0x8]
  41f12e:	jmp    0x41f133
  41f130:	mov    eax,DWORD PTR [ebp-0x4]
  41f133:	xor    eax,esi
  41f135:	add    eax,edi
  41f137:	pop    edi
  41f138:	pop    esi
  41f139:	pop    ebx
  41f13a:	leave  
  41f13b:	ret    0xc
  41f13e:	push   ebp
  41f13f:	mov    ebp,esp
  41f141:	sub    esp,0x28
  41f144:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f14b:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41f152:	mov    eax,DWORD PTR [ebp+0xc]
  41f155:	mov    DWORD PTR [ebp+0xc],eax
  41f158:	push   esi
  41f159:	mov    eax,eax
  41f15b:	mov    eax,DWORD PTR [ebp-0x4]
  41f15e:	mov    esi,DWORD PTR [ebp+0x8]
  41f161:	mov    ecx,0x751089f
  41f166:	xor    eax,ecx
  41f168:	mov    edx,0x3272e6
  41f16d:	add    eax,edx
  41f16f:	cmp    esi,eax
  41f171:	je     0x41f298
  41f177:	mov    eax,DWORD PTR [ebp+0x8]
  41f17a:	mov    esi,DWORD PTR [ebp+0x8]
  41f17d:	add    esi,DWORD PTR [eax+0x3c]
  41f180:	push   edi
  41f181:	mov    DWORD PTR [ebp+0xc],esi
  41f184:	mov    DWORD PTR [ebp-0x1c],0xf89c8580
  41f18b:	mov    eax,DWORD PTR [ebp-0x1c]
  41f18e:	mov    esi,DWORD PTR [ebp-0x4]
  41f191:	mov    edi,DWORD PTR [ebp+0xc]
  41f194:	xor    esi,ecx
  41f196:	xor    eax,ecx
  41f198:	add    esi,edx
  41f19a:	cmp    DWORD PTR [edi+eax*8+0x19397a8],esi
  41f1a1:	je     0x41f292
  41f1a7:	mov    esi,DWORD PTR [ebp+0xc]
  41f1aa:	mov    eax,DWORD PTR [ebp+0x8]
  41f1ad:	add    eax,DWORD PTR [esi+0xa0]
  41f1b3:	mov    esi,DWORD PTR [ebp+0x8]
  41f1b6:	mov    edi,DWORD PTR [ebp+0xc]
  41f1b9:	sub    esi,DWORD PTR [edi+0x34]
  41f1bc:	mov    edi,DWORD PTR [ebp-0x4]
  41f1bf:	xor    edi,ecx
  41f1c1:	add    edi,edx
  41f1c3:	mov    DWORD PTR [ebp-0x24],esi
  41f1c6:	cmp    esi,edi
  41f1c8:	je     0x41f292
  41f1ce:	mov    esi,DWORD PTR [ebp-0x4]
  41f1d1:	xor    esi,ecx
  41f1d3:	add    esi,edx
  41f1d5:	mov    DWORD PTR [ebp-0x8],esi
  41f1d8:	push   ebx
  41f1d9:	mov    DWORD PTR [ebp-0x10],0xf89c8582
  41f1e0:	jmp    0x41f27c
  41f1e5:	mov    esi,DWORD PTR [ebp-0x4]
  41f1e8:	xor    esi,ecx
  41f1ea:	lea    edi,[ebx-0x8]
  41f1ed:	add    esi,edx
  41f1ef:	shr    edi,1
  41f1f1:	cmp    esi,edi
  41f1f3:	jae    0x41f262
  41f1f5:	sub    edi,esi
  41f1f7:	lea    ebx,[eax+esi*2+0x8]
  41f1fb:	mov    DWORD PTR [ebp-0x18],edi
  41f1fe:	movzx  esi,WORD PTR [ebx]
  41f201:	and    esi,0xfff
  41f207:	mov    DWORD PTR [ebp-0x14],esi
  41f20a:	mov    edi,DWORD PTR [ebp-0x14]
  41f20d:	mov    esi,DWORD PTR [eax]
  41f20f:	sub    esi,edx
  41f211:	add    edi,esi
  41f213:	movzx  esi,WORD PTR [ebx]
  41f216:	shr    esi,0xc
  41f219:	xor    edi,ecx
  41f21b:	mov    DWORD PTR [ebp-0x20],edi
  41f21e:	mov    DWORD PTR [ebp-0x14],esi
  41f221:	mov    esi,DWORD PTR [ebp-0x20]
  41f224:	mov    edi,DWORD PTR [ebp+0x8]
  41f227:	xor    esi,ecx
  41f229:	lea    esi,[esi+edi*1+0x3272e6]
  41f230:	mov    DWORD PTR [ebp-0x20],esi
  41f233:	mov    esi,DWORD PTR [ebp-0x10]
  41f236:	mov    edi,DWORD PTR [ebp-0x14]
  41f239:	xor    esi,ecx
  41f23b:	add    esi,edx
  41f23d:	cmp    edi,esi
  41f23f:	jne    0x41f257
  41f241:	mov    esi,DWORD PTR [ebp-0x10]
  41f244:	mov    edi,DWORD PTR [ebp-0x14]
  41f247:	xor    esi,ecx
  41f249:	add    esi,edx
  41f24b:	cmp    edi,esi
  41f24d:	jne    0x41f257
  41f24f:	mov    esi,DWORD PTR [ebp-0x20]
  41f252:	mov    edi,DWORD PTR [ebp-0x24]
  41f255:	add    DWORD PTR [esi],edi
  41f257:	add    ebx,0x2
  41f25a:	dec    DWORD PTR [ebp-0x18]
  41f25d:	jne    0x41f1fe
  41f25f:	mov    ebx,DWORD PTR [ebp-0xc]
  41f262:	add    DWORD PTR [ebp-0x8],ebx
  41f265:	mov    esi,DWORD PTR [ebp-0x1c]
  41f268:	mov    edi,DWORD PTR [ebp-0x8]
  41f26b:	mov    ebx,DWORD PTR [ebp+0xc]
  41f26e:	xor    esi,ecx
  41f270:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397ac]
  41f277:	jae    0x41f291
  41f279:	add    eax,DWORD PTR [ebp-0xc]
  41f27c:	mov    esi,DWORD PTR [ebp-0x4]
  41f27f:	mov    ebx,DWORD PTR [eax+0x4]
  41f282:	xor    esi,ecx
  41f284:	add    esi,edx
  41f286:	mov    DWORD PTR [ebp-0xc],ebx
  41f289:	cmp    ebx,esi
  41f28b:	jne    0x41f1e5
  41f291:	pop    ebx
  41f292:	mov    eax,DWORD PTR [ebp-0x28]
  41f295:	pop    edi
  41f296:	jmp    0x41f29b
  41f298:	mov    eax,DWORD PTR [ebp-0x4]
  41f29b:	xor    eax,ecx
  41f29d:	add    eax,edx
  41f29f:	pop    esi
  41f2a0:	leave  
  41f2a1:	ret    0x8
  41f2a4:	push   ebp
  41f2a5:	mov    ebp,esp
  41f2a7:	sub    esp,0xd8
  41f2ad:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f2b4:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41f2bb:	mov    eax,DWORD PTR [ebp-0x4]
  41f2be:	push   ebx
  41f2bf:	push   esi
  41f2c0:	mov    esi,0x751089f
  41f2c5:	xor    eax,esi
  41f2c7:	push   edi
  41f2c8:	mov    edi,0x3272e6
  41f2cd:	add    eax,edi
  41f2cf:	mov    DWORD PTR [ebp-0x18],eax
  41f2d2:	mov    eax,DWORD PTR [ebp-0x4]
  41f2d5:	xor    eax,esi
  41f2d7:	add    eax,edi
  41f2d9:	mov    DWORD PTR [ebp-0x8],eax
  41f2dc:	mov    ebx,DWORD PTR [ebp+0x20]
  41f2df:	mov    eax,DWORD PTR [ebp-0x1c]
  41f2e2:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f2e5:	xor    eax,ecx
  41f2e7:	mov    DWORD PTR [ebp-0x1c],eax
  41f2ea:	add    DWORD PTR [ebp-0x1c],0xf89cb585
  41f2f1:	mov    eax,DWORD PTR [ebp-0xc]
  41f2f4:	mov    ecx,DWORD PTR [ebp-0xc]
  41f2f7:	xor    eax,ecx
  41f2f9:	mov    DWORD PTR [ebp-0xc],eax
  41f2fc:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41f303:	mov    eax,DWORD PTR [ebp-0x10]
  41f306:	mov    ecx,DWORD PTR [ebp-0x10]
  41f309:	xor    eax,ecx
  41f30b:	mov    DWORD PTR [ebp-0x10],eax
  41f30e:	add    DWORD PTR [ebp-0x10],0xf89c8581
  41f315:	mov    eax,DWORD PTR [ebp-0x28]
  41f318:	mov    ecx,DWORD PTR [ebp-0x28]
  41f31b:	xor    eax,ecx
  41f31d:	mov    DWORD PTR [ebp-0x28],eax
  41f320:	add    DWORD PTR [ebp-0x28],0xf89f0585
  41f327:	mov    DWORD PTR [ebp+0x20],0xf89ceff8
  41f32e:	mov    eax,DWORD PTR [ebp+0x8]
  41f331:	test   eax,eax
  41f333:	je     0x41f7be
  41f339:	mov    eax,DWORD PTR [ebp+0xc]
  41f33c:	test   eax,eax
  41f33e:	je     0x41f7be
  41f344:	mov    eax,DWORD PTR [ebp+0x18]
  41f347:	test   eax,eax
  41f349:	je     0x41f7be
  41f34f:	mov    eax,DWORD PTR [ebp+0x20]
  41f352:	mov    ecx,DWORD PTR [ebp+0x8]
  41f355:	xor    eax,0x89f
  41f35a:	add    eax,0x72e6
  41f35f:	cmp    WORD PTR [ecx],ax
  41f362:	jne    0x41f7be
  41f368:	mov    eax,DWORD PTR [ebp-0x4]
  41f36b:	xor    eax,esi
  41f36d:	add    eax,edi
  41f36f:	mov    DWORD PTR [ebp-0x30],eax
  41f372:	mov    eax,DWORD PTR [ebp-0x4]
  41f375:	mov    ecx,DWORD PTR [ebp+0x8]
  41f378:	mov    eax,DWORD PTR [ebp+0x8]
  41f37b:	add    eax,DWORD PTR [ecx+0x3c]
  41f37e:	mov    DWORD PTR [ebp+0xc],eax
  41f381:	mov    eax,DWORD PTR [eax+0x50]
  41f384:	test   eax,eax
  41f386:	je     0x41f7be
  41f38c:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41f393:	mov    eax,DWORD PTR [ebp-0x2c]
  41f396:	xor    eax,esi
  41f398:	add    eax,edi
  41f39a:	mov    DWORD PTR [ebp-0x2c],eax
  41f39d:	mov    eax,DWORD PTR [ebp-0x4]
  41f3a0:	mov    eax,DWORD PTR [ebx+0x190]
  41f3a6:	mov    ecx,DWORD PTR [eax]
  41f3a8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41f3ab:	add    ecx,DWORD PTR [eax]
  41f3ad:	mov    eax,DWORD PTR [ebp-0x4]
  41f3b0:	mov    eax,DWORD PTR [ebx+0x18c]
  41f3b6:	mov    edx,DWORD PTR [eax]
  41f3b8:	mov    DWORD PTR [ebp-0x20],ecx
  41f3bb:	mov    DWORD PTR [ebp+0x20],edx
  41f3be:	cmp    edx,edx
  41f3c0:	jne    0x41f3f4
  41f3c2:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f3c8:	lea    edx,[ebp-0x18]
  41f3cb:	push   edx
  41f3cc:	mov    edx,DWORD PTR [ebp-0xc]
  41f3cf:	xor    edx,esi
  41f3d1:	add    edx,edi
  41f3d3:	push   edx
  41f3d4:	push   DWORD PTR [ecx+0x50]
  41f3d7:	push   DWORD PTR [ebp+0x20]
  41f3da:	call   DWORD PTR [eax+0x1c]
  41f3dd:	mov    eax,DWORD PTR [ebp-0x20]
  41f3e0:	mov    ecx,DWORD PTR [eax+0x54]
  41f3e3:	mov    eax,DWORD PTR [eax+0x50]
  41f3e6:	sub    eax,ecx
  41f3e8:	add    ecx,DWORD PTR [ebp+0x20]
  41f3eb:	push   ecx
  41f3ec:	call   0x41fd5b
  41f3f1:	mov    edx,DWORD PTR [ebp+0x20]
  41f3f4:	mov    eax,DWORD PTR [ebx+0x194]
  41f3fa:	mov    DWORD PTR [eax],edx
  41f3fc:	mov    eax,DWORD PTR [ebp+0xc]
  41f3ff:	push   DWORD PTR [eax+0x54]
  41f402:	push   DWORD PTR [ebp+0x8]
  41f405:	push   edx
  41f406:	call   0x41fc51
  41f40b:	mov    ecx,DWORD PTR [ebp+0x20]
  41f40e:	mov    eax,DWORD PTR [ecx+0x3c]
  41f411:	add    eax,ecx
  41f413:	movzx  ecx,WORD PTR [eax+0x14]
  41f417:	lea    ecx,[ecx+eax*1+0x18]
  41f41b:	mov    DWORD PTR [ebp+0x18],ecx
  41f41e:	mov    ecx,DWORD PTR [ebp-0x4]
  41f421:	movzx  edx,WORD PTR [eax+0x6]
  41f425:	xor    ecx,esi
  41f427:	add    ecx,edi
  41f429:	mov    DWORD PTR [ebp+0xc],eax
  41f42c:	cmp    edx,ecx
  41f42e:	je     0x41f4db
  41f434:	mov    ecx,DWORD PTR [ebp-0x4]
  41f437:	xor    ecx,esi
  41f439:	add    ecx,edi
  41f43b:	mov    DWORD PTR [ebp-0x8],ecx
  41f43e:	mov    ecx,DWORD PTR [ebp-0x24]
  41f441:	movzx  edx,WORD PTR [eax+0x6]
  41f445:	xor    ecx,esi
  41f447:	sub    edx,ecx
  41f449:	sub    edx,edi
  41f44b:	cmp    DWORD PTR [ebp-0x8],edx
  41f44e:	ja     0x41f4db
  41f454:	mov    edx,DWORD PTR [ebp+0x18]
  41f457:	add    edx,0x8
  41f45a:	mov    DWORD PTR [ebp+0x18],edx
  41f45d:	jmp    0x41f462
  41f45f:	mov    edx,DWORD PTR [ebp+0x18]
  41f462:	mov    eax,DWORD PTR [eax+0x38]
  41f465:	lea    ecx,[eax-0x1]
  41f468:	mov    DWORD PTR [ebp-0x38],eax
  41f46b:	mov    eax,DWORD PTR [edx]
  41f46d:	test   eax,ecx
  41f46f:	je     0x41f478
  41f471:	not    ecx
  41f473:	and    eax,ecx
  41f475:	add    eax,DWORD PTR [ebp-0x38]
  41f478:	mov    ecx,DWORD PTR [edx+0x4]
  41f47b:	add    ecx,DWORD PTR [ebp+0x20]
  41f47e:	push   ecx
  41f47f:	call   0x41fd5b
  41f484:	mov    edx,DWORD PTR [ebp-0x4]
  41f487:	mov    eax,DWORD PTR [ebp+0x18]
  41f48a:	mov    ecx,DWORD PTR [eax+0x8]
  41f48d:	xor    edx,esi
  41f48f:	add    edx,edi
  41f491:	cmp    ecx,edx
  41f493:	je     0x41f4ac
  41f495:	push   ecx
  41f496:	mov    ecx,DWORD PTR [ebp+0x8]
  41f499:	add    ecx,DWORD PTR [eax+0xc]
  41f49c:	mov    eax,DWORD PTR [eax+0x4]
  41f49f:	add    eax,DWORD PTR [ebp+0x20]
  41f4a2:	push   ecx
  41f4a3:	push   eax
  41f4a4:	call   0x41fc51
  41f4a9:	mov    eax,DWORD PTR [ebp+0x18]
  41f4ac:	mov    ecx,DWORD PTR [ebp-0x24]
  41f4af:	mov    edx,DWORD PTR [ebp-0x8]
  41f4b2:	add    eax,0x28
  41f4b5:	xor    ecx,esi
  41f4b7:	lea    ecx,[edx+ecx*1+0x3272e6]
  41f4be:	mov    edx,DWORD PTR [ebp+0xc]
  41f4c1:	mov    DWORD PTR [ebp+0x18],eax
  41f4c4:	mov    eax,DWORD PTR [ebp-0x24]
  41f4c7:	movzx  edx,WORD PTR [edx+0x6]
  41f4cb:	xor    eax,esi
  41f4cd:	sub    edx,eax
  41f4cf:	mov    eax,DWORD PTR [ebp+0xc]
  41f4d2:	sub    edx,edi
  41f4d4:	mov    DWORD PTR [ebp-0x8],ecx
  41f4d7:	cmp    ecx,edx
  41f4d9:	jbe    0x41f45f
  41f4db:	mov    edx,DWORD PTR [ebx+0x18c]
  41f4e1:	mov    ecx,DWORD PTR [ebp+0x20]
  41f4e4:	cmp    ecx,DWORD PTR [edx]
  41f4e6:	jne    0x41f50f
  41f4e8:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f4ee:	lea    edx,[ebp-0x18]
  41f4f1:	push   edx
  41f4f2:	mov    edx,DWORD PTR [ebp-0x10]
  41f4f5:	xor    edx,esi
  41f4f7:	add    edx,edi
  41f4f9:	push   edx
  41f4fa:	mov    edx,DWORD PTR [ebp-0x20]
  41f4fd:	push   DWORD PTR [edx+0x54]
  41f500:	push   ecx
  41f501:	call   DWORD PTR [eax+0x1c]
  41f504:	test   eax,eax
  41f506:	je     0x41f7af
  41f50c:	mov    eax,DWORD PTR [ebp+0xc]
  41f50f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41f515:	mov    ecx,DWORD PTR [ecx]
  41f517:	xor    ecx,esi
  41f519:	add    ecx,edi
  41f51b:	je     0x41f6da
  41f521:	mov    eax,DWORD PTR [ebp-0x4]
  41f524:	xor    eax,esi
  41f526:	add    eax,edi
  41f528:	and    DWORD PTR [ebp+0x8],0x0
  41f52c:	mov    DWORD PTR [ebp-0x14],eax
  41f52f:	mov    ecx,0xf89c8519
  41f534:	mov    eax,0xf89c85e1
  41f539:	mov    DWORD PTR [ebp-0x58],0xf89c8517
  41f540:	mov    DWORD PTR [ebp-0x54],0xf89c8511
  41f547:	mov    DWORD PTR [ebp-0x50],eax
  41f54a:	mov    DWORD PTR [ebp-0x4c],ecx
  41f54d:	mov    DWORD PTR [ebp-0x48],ecx
  41f550:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  41f557:	mov    edx,DWORD PTR [ebp+0x8]
  41f55a:	mov    ecx,0x89f
  41f55f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  41f564:	mov    edx,0x72e6
  41f569:	add    cx,dx
  41f56c:	mov    edx,DWORD PTR [ebp+0x8]
  41f56f:	inc    DWORD PTR [ebp+0x8]
  41f572:	cmp    DWORD PTR [ebp+0x8],0x6
  41f576:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  41f57e:	jb     0x41f557
  41f580:	mov    ecx,0xf89c8513
  41f585:	mov    DWORD PTR [ebp-0xb0],eax
  41f58b:	mov    DWORD PTR [ebp-0x9c],eax
  41f591:	mov    DWORD PTR [ebp-0x74],eax
  41f594:	mov    DWORD PTR [ebp-0x70],eax
  41f597:	lea    eax,[ecx-0x1]
  41f59a:	mov    edx,0xf89c85ff
  41f59f:	mov    DWORD PTR [ebp-0x64],eax
  41f5a2:	mov    DWORD PTR [ebp-0x60],eax
  41f5a5:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  41f5af:	mov    DWORD PTR [ebp-0xac],ecx
  41f5b5:	mov    DWORD PTR [ebp-0xa8],edx
  41f5bb:	mov    DWORD PTR [ebp-0xa4],0xf89c851c
  41f5c5:	mov    DWORD PTR [ebp-0xa0],0xf89c8517
  41f5cf:	mov    DWORD PTR [ebp-0x98],0xf89c85c0
  41f5d9:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41f5e3:	mov    DWORD PTR [ebp-0x90],0xf89c8511
  41f5ed:	mov    DWORD PTR [ebp-0x8c],ecx
  41f5f3:	mov    DWORD PTR [ebp-0x88],0xf89c850c
  41f5fd:	mov    DWORD PTR [ebp-0x84],edx
  41f603:	mov    DWORD PTR [ebp-0x80],0xf89c8516
  41f60a:	mov    DWORD PTR [ebp-0x7c],ecx
  41f60d:	mov    DWORD PTR [ebp-0x78],0xf89c85c4
  41f614:	mov    DWORD PTR [ebp-0x6c],ecx
  41f617:	mov    DWORD PTR [ebp-0x68],0xf89c85e0
  41f61e:	mov    DWORD PTR [ebp-0x5c],0xf89c8585
  41f625:	xor    eax,eax
  41f627:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  41f62e:	xor    cl,0x9f
  41f631:	sub    cl,0x1a
  41f634:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  41f63b:	inc    eax
  41f63c:	cmp    eax,0x17
  41f63f:	jb     0x41f627
  41f641:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f647:	lea    ecx,[ebp-0xc0]
  41f64d:	push   ecx
  41f64e:	call   DWORD PTR [eax+0x4]
  41f651:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41f657:	lea    edx,[ebp-0xd8]
  41f65d:	push   edx
  41f65e:	push   eax
  41f65f:	call   DWORD PTR [ecx+0x8]
  41f662:	mov    DWORD PTR [ebp-0x40],eax
  41f665:	lea    eax,[ebp-0x14]
  41f668:	push   eax
  41f669:	mov    eax,DWORD PTR [ebx+0x18c]
  41f66f:	push   DWORD PTR [eax]
  41f671:	mov    eax,DWORD PTR [ebp-0x40]
  41f674:	call   eax
  41f676:	mov    eax,DWORD PTR [ebp-0x4]
  41f679:	xor    eax,esi
  41f67b:	add    eax,edi
  41f67d:	mov    DWORD PTR [ebp-0x34],eax
  41f680:	mov    ecx,DWORD PTR [ebp-0x4]
  41f683:	mov    eax,DWORD PTR [ebp-0x14]
  41f686:	xor    ecx,esi
  41f688:	add    ecx,edi
  41f68a:	cmp    eax,ecx
  41f68c:	je     0x41f6d7
  41f68e:	mov    DWORD PTR [ebp-0x3c],eax
  41f691:	jmp    0x41f6a2
  41f693:	mov    eax,DWORD PTR [eax]
  41f695:	mov    ecx,DWORD PTR [ebp-0x3c]
  41f698:	mov    DWORD PTR [ebp-0x14],eax
  41f69b:	mov    eax,DWORD PTR [ebp-0x14]
  41f69e:	cmp    eax,ecx
  41f6a0:	je     0x41f6af
  41f6a2:	mov    edx,DWORD PTR [eax+0x18]
  41f6a5:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f6ab:	cmp    edx,DWORD PTR [ecx]
  41f6ad:	jne    0x41f693
  41f6af:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f6b5:	mov    edx,DWORD PTR [eax+0x18]
  41f6b8:	cmp    edx,DWORD PTR [ecx]
  41f6ba:	jne    0x41f6d7
  41f6bc:	mov    ecx,DWORD PTR [ebx+0x190]
  41f6c2:	mov    edx,DWORD PTR [ebp-0x20]
  41f6c5:	mov    edx,DWORD PTR [edx+0x28]
  41f6c8:	add    edx,DWORD PTR [ecx]
  41f6ca:	mov    DWORD PTR [eax+0x1c],edx
  41f6cd:	mov    eax,DWORD PTR [ebp-0x24]
  41f6d0:	xor    eax,esi
  41f6d2:	add    eax,edi
  41f6d4:	mov    DWORD PTR [ebp-0x34],eax
  41f6d7:	mov    eax,DWORD PTR [ebp+0xc]
  41f6da:	push   ebx
  41f6db:	push   eax
  41f6dc:	push   DWORD PTR [ebp+0x20]
  41f6df:	call   0x41ee5b
  41f6e4:	test   eax,eax
  41f6e6:	je     0x41f7af
  41f6ec:	push   DWORD PTR [ebp+0xc]
  41f6ef:	mov    ecx,ebx
  41f6f1:	push   DWORD PTR [ebp+0x20]
  41f6f4:	call   0x41edb4
  41f6f9:	test   eax,eax
  41f6fb:	je     0x41f7af
  41f701:	mov    eax,DWORD PTR [ebp+0xc]
  41f704:	mov    edx,DWORD PTR [ebp+0x20]
  41f707:	mov    ecx,ebx
  41f709:	call   0x41ec8d
  41f70e:	test   eax,eax
  41f710:	je     0x41f7af
  41f716:	push   ebx
  41f717:	push   DWORD PTR [ebp+0x20]
  41f71a:	call   0x41f13e
  41f71f:	test   eax,eax
  41f721:	je     0x41f7af
  41f727:	mov    eax,DWORD PTR [ebx+0x18c]
  41f72d:	mov    edx,DWORD PTR [ebp+0x20]
  41f730:	cmp    edx,DWORD PTR [eax]
  41f732:	jne    0x41f74e
  41f734:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f73a:	lea    ecx,[ebp-0x18]
  41f73d:	push   ecx
  41f73e:	push   DWORD PTR [ebp-0x18]
  41f741:	mov    ecx,DWORD PTR [ebp-0x20]
  41f744:	push   DWORD PTR [ecx+0x54]
  41f747:	push   edx
  41f748:	call   DWORD PTR [eax+0x1c]
  41f74b:	mov    edx,DWORD PTR [ebp+0x20]
  41f74e:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f754:	mov    eax,DWORD PTR [eax]
  41f756:	xor    eax,esi
  41f758:	add    eax,edi
  41f75a:	je     0x41f793
  41f75c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f75f:	mov    eax,DWORD PTR [ecx+0x28]
  41f762:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f769:	mov    esi,DWORD PTR [ebp+0x8]
  41f76c:	push   DWORD PTR [ebp+0x14]
  41f76f:	xor    esi,0x89f
  41f775:	push   DWORD PTR [ebp+0x10]
  41f778:	add    esi,0x72e6
  41f77e:	or     WORD PTR [ecx+0x16],si
  41f782:	add    eax,edx
  41f784:	push   edx
  41f785:	call   eax
  41f787:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f791:	jmp    0x41f79d
  41f793:	mov    eax,DWORD PTR [ebp+0xc]
  41f796:	mov    eax,DWORD PTR [eax+0x28]
  41f799:	add    eax,edx
  41f79b:	call   eax
  41f79d:	mov    DWORD PTR [ebp-0x8],eax
  41f7a0:	mov    eax,DWORD PTR [ebp-0x8]
  41f7a3:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f7a6:	mov    DWORD PTR [ecx],eax
  41f7a8:	mov    DWORD PTR [ebp-0x30],0x1
  41f7af:	cmp    DWORD PTR [ebp-0x30],0x0
  41f7b3:	jne    0x41f7b9
  41f7b5:	and    DWORD PTR [ebp+0x20],0x0
  41f7b9:	mov    eax,DWORD PTR [ebp+0x20]
  41f7bc:	jmp    0x41f7c0
  41f7be:	xor    eax,eax
  41f7c0:	pop    edi
  41f7c1:	pop    esi
  41f7c2:	pop    ebx
  41f7c3:	leave  
  41f7c4:	ret    0x1c
  41f7c7:	push   ebp
  41f7c8:	mov    ebp,esp
  41f7ca:	movzx  edx,WORD PTR [ecx+0x6]
  41f7ce:	movzx  eax,WORD PTR [ecx+0x14]
  41f7d2:	push   ebx
  41f7d3:	push   edi
  41f7d4:	xor    edi,edi
  41f7d6:	lea    eax,[eax+ecx*1+0x18]
  41f7da:	test   edx,edx
  41f7dc:	je     0x41f7fd
  41f7de:	mov    ecx,DWORD PTR [eax+0xc]
  41f7e1:	lea    ebx,[ecx+esi*1]
  41f7e4:	cmp    DWORD PTR [ebp+0x8],ebx
  41f7e7:	jb     0x41f7f5
  41f7e9:	mov    ebx,DWORD PTR [eax+0x8]
  41f7ec:	add    ebx,ecx
  41f7ee:	add    ebx,esi
  41f7f0:	cmp    DWORD PTR [ebp+0x8],ebx
  41f7f3:	jb     0x41f7ff
  41f7f5:	add    eax,0x28
  41f7f8:	inc    edi
  41f7f9:	cmp    edi,edx
  41f7fb:	jb     0x41f7de
  41f7fd:	xor    eax,eax
  41f7ff:	pop    edi
  41f800:	pop    ebx
  41f801:	pop    ebp
  41f802:	ret    0x4
  41f805:	push   ebp
  41f806:	mov    ebp,esp
  41f808:	sub    esp,0x34
  41f80b:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f812:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f819:	mov    DWORD PTR [ebp-0x1c],0xf89c8583
  41f820:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f827:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f82e:	mov    DWORD PTR [ebp-0x2c],0xf89c850b
  41f835:	mov    DWORD PTR [ebp-0x2c],0xf89c85eb
  41f83c:	mov    DWORD PTR [ebp-0x10],eax
  41f83f:	mov    eax,DWORD PTR [ebp+0x8]
  41f842:	mov    DWORD PTR [ebp-0x14],eax
  41f845:	mov    eax,DWORD PTR [ebp-0xc]
  41f848:	push   ebx
  41f849:	mov    ecx,0x751089f
  41f84e:	xor    eax,ecx
  41f850:	push   esi
  41f851:	mov    esi,DWORD PTR [ebp-0x10]
  41f854:	mov    edx,0x3272e6
  41f859:	add    eax,edx
  41f85b:	push   edi
  41f85c:	cmp    esi,eax
  41f85e:	je     0x41fa3d
  41f864:	mov    eax,DWORD PTR [ebp-0xc]
  41f867:	mov    esi,DWORD PTR [ebp-0x14]
  41f86a:	xor    eax,ecx
  41f86c:	add    eax,edx
  41f86e:	cmp    esi,eax
  41f870:	je     0x41fa3d
  41f876:	mov    eax,DWORD PTR [ebp-0xc]
  41f879:	xor    eax,ecx
  41f87b:	add    eax,edx
  41f87d:	mov    DWORD PTR [ebp-0x24],eax
  41f880:	mov    eax,DWORD PTR [ebp-0xc]
  41f883:	xor    eax,ecx
  41f885:	add    eax,edx
  41f887:	mov    DWORD PTR [ebp-0x28],eax
  41f88a:	mov    edi,DWORD PTR [ebp-0x20]
  41f88d:	mov    ebx,DWORD PTR [ebp-0x8]
  41f890:	mov    esi,0x89f
  41f895:	xor    edi,esi
  41f897:	mov    eax,0x72e6
  41f89c:	xor    ebx,esi
  41f89e:	add    edi,eax
  41f8a0:	add    ebx,eax
  41f8a2:	sub    ebx,edi
  41f8a4:	mov    WORD PTR [ebp-0x8],bx
  41f8a8:	jmp    0x41f96d
  41f8ad:	mov    edi,DWORD PTR [ebp-0xc]
  41f8b0:	mov    bx,WORD PTR [ebp-0x4]
  41f8b4:	xor    edi,esi
  41f8b6:	add    edi,eax
  41f8b8:	cmp    bx,di
  41f8bb:	je     0x41f9af
  41f8c1:	mov    edi,DWORD PTR [ebp-0xc]
  41f8c4:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8c7:	xor    edi,ecx
  41f8c9:	add    edi,edx
  41f8cb:	cmp    ebx,edi
  41f8cd:	mov    di,WORD PTR [ebp-0x4]
  41f8d1:	mov    bx,WORD PTR [ebp+0x8]
  41f8d5:	je     0x41f940
  41f8d7:	cmp    bx,di
  41f8da:	je     0x41f949
  41f8dc:	mov    edi,DWORD PTR [ebp-0x20]
  41f8df:	mov    bx,WORD PTR [ebp+0x8]
  41f8e3:	xor    edi,esi
  41f8e5:	add    edi,eax
  41f8e7:	cmp    bx,di
  41f8ea:	jb     0x41f90a
  41f8ec:	mov    edi,DWORD PTR [ebp-0x2c]
  41f8ef:	mov    bx,WORD PTR [ebp+0x8]
  41f8f3:	xor    edi,esi
  41f8f5:	add    edi,eax
  41f8f7:	cmp    bx,di
  41f8fa:	ja     0x41f90a
  41f8fc:	movzx  edi,WORD PTR [ebp+0x8]
  41f900:	movzx  ebx,WORD PTR [ebp-0x8]
  41f904:	add    edi,ebx
  41f906:	mov    WORD PTR [ebp+0x8],di
  41f90a:	mov    edi,DWORD PTR [ebp-0x20]
  41f90d:	mov    bx,WORD PTR [ebp-0x4]
  41f911:	xor    edi,esi
  41f913:	add    edi,eax
  41f915:	cmp    bx,di
  41f918:	jb     0x41f938
  41f91a:	mov    edi,DWORD PTR [ebp-0x2c]
  41f91d:	mov    bx,WORD PTR [ebp-0x4]
  41f921:	xor    edi,esi
  41f923:	add    edi,eax
  41f925:	cmp    bx,di
  41f928:	ja     0x41f938
  41f92a:	movzx  edi,WORD PTR [ebp-0x4]
  41f92e:	movzx  ebx,WORD PTR [ebp-0x8]
  41f932:	add    edi,ebx
  41f934:	mov    WORD PTR [ebp-0x4],di
  41f938:	mov    di,WORD PTR [ebp-0x4]
  41f93c:	mov    bx,WORD PTR [ebp+0x8]
  41f940:	cmp    bx,di
  41f943:	jne    0x41fa3d
  41f949:	mov    edi,DWORD PTR [ebp-0x1c]
  41f94c:	mov    ebx,DWORD PTR [ebp-0x10]
  41f94f:	xor    edi,ecx
  41f951:	lea    edi,[edi+ebx*1+0x3272e6]
  41f958:	mov    DWORD PTR [ebp-0x10],edi
  41f95b:	mov    edi,DWORD PTR [ebp-0x1c]
  41f95e:	mov    ebx,DWORD PTR [ebp-0x14]
  41f961:	xor    edi,ecx
  41f963:	lea    edi,[edi+ebx*1+0x3272e6]
  41f96a:	mov    DWORD PTR [ebp-0x14],edi
  41f96d:	mov    edi,DWORD PTR [ebp-0x24]
  41f970:	mov    ebx,DWORD PTR [ebp-0x10]
  41f973:	mov    di,WORD PTR [ebx+edi*2]
  41f977:	mov    WORD PTR [ebp+0x8],di
  41f97b:	mov    edi,DWORD PTR [ebp-0x28]
  41f97e:	mov    ebx,DWORD PTR [ebp-0x14]
  41f981:	mov    di,WORD PTR [ebx+edi*2]
  41f985:	mov    WORD PTR [ebp-0x4],di
  41f989:	mov    edi,DWORD PTR [ebp-0xc]
  41f98c:	mov    bx,WORD PTR [ebp+0x8]
  41f990:	xor    edi,esi
  41f992:	add    edi,eax
  41f994:	cmp    bx,di
  41f997:	jne    0x41f8ad
  41f99d:	mov    eax,DWORD PTR [ebp-0x18]
  41f9a0:	mov    esi,DWORD PTR [ebp-0xc]
  41f9a3:	xor    eax,ecx
  41f9a5:	add    eax,edx
  41f9a7:	imul   eax,esi
  41f9aa:	mov    DWORD PTR [ebp-0xc],eax
  41f9ad:	jmp    0x41f9c1
  41f9af:	mov    eax,DWORD PTR [ebp-0xc]
  41f9b2:	mov    esi,DWORD PTR [ebp-0x18]
  41f9b5:	xor    eax,ecx
  41f9b7:	lea    eax,[eax+esi*1+0x3272e6]
  41f9be:	mov    DWORD PTR [ebp-0x18],eax
  41f9c1:	mov    eax,DWORD PTR [ebp-0x24]
  41f9c4:	sub    eax,edx
  41f9c6:	xor    eax,ecx
  41f9c8:	mov    DWORD PTR [ebp-0x30],eax
  41f9cb:	mov    eax,DWORD PTR [ebp-0x28]
  41f9ce:	sub    eax,edx
  41f9d0:	xor    eax,ecx
  41f9d2:	mov    DWORD PTR [ebp-0x34],eax
  41f9d5:	mov    eax,DWORD PTR [ebp-0x34]
  41f9d8:	mov    esi,DWORD PTR [ebp-0x1c]
  41f9db:	xor    esi,ecx
  41f9dd:	add    esi,edx
  41f9df:	xor    eax,ecx
  41f9e1:	add    eax,0x3272e6
  41f9e6:	imul   esi,eax
  41f9e9:	mov    eax,DWORD PTR [ebp-0x14]
  41f9ec:	movzx  eax,WORD PTR [esi+eax*1]
  41f9f0:	mov    esi,DWORD PTR [ebp-0x30]
  41f9f3:	mov    edi,DWORD PTR [ebp-0x1c]
  41f9f6:	xor    esi,ecx
  41f9f8:	add    esi,edx
  41f9fa:	xor    edi,ecx
  41f9fc:	add    edi,edx
  41f9fe:	imul   edi,esi
  41fa01:	mov    esi,DWORD PTR [ebp-0x10]
  41fa04:	movzx  esi,WORD PTR [edi+esi*1]
  41fa08:	sub    eax,edx
  41fa0a:	sub    esi,edx
  41fa0c:	xor    eax,ecx
  41fa0e:	xor    esi,ecx
  41fa10:	cmp    esi,eax
  41fa12:	jne    0x41fa3d
  41fa14:	mov    eax,DWORD PTR [ebp-0x30]
  41fa17:	mov    esi,DWORD PTR [ebp-0x1c]
  41fa1a:	xor    eax,ecx
  41fa1c:	add    eax,0x3272e6
  41fa21:	xor    esi,ecx
  41fa23:	add    esi,edx
  41fa25:	imul   esi,eax
  41fa28:	mov    eax,DWORD PTR [ebp-0x10]
  41fa2b:	movzx  eax,WORD PTR [esi+eax*1]
  41fa2f:	mov    esi,DWORD PTR [ebp-0xc]
  41fa32:	sub    eax,edx
  41fa34:	xor    eax,ecx
  41fa36:	cmp    eax,esi
  41fa38:	mov    eax,DWORD PTR [ebp-0xc]
  41fa3b:	je     0x41fa40
  41fa3d:	mov    eax,DWORD PTR [ebp-0x18]
  41fa40:	pop    edi
  41fa41:	xor    eax,ecx
  41fa43:	pop    esi
  41fa44:	add    eax,edx
  41fa46:	pop    ebx
  41fa47:	leave  
  41fa48:	ret    0x8
  41fa4b:	push   ebp
  41fa4c:	mov    ebp,esp
  41fa4e:	push   ecx
  41fa4f:	mov    cx,WORD PTR [eax]
  41fa52:	push   esi
  41fa53:	mov    esi,0x3b53
  41fa58:	sub    cx,si
  41fa5b:	mov    esi,0x8a8f
  41fa60:	xor    cx,si
  41fa63:	mov    esi,0x4e22
  41fa68:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41fa6f:	mov    edx,0xf89c8585
  41fa74:	cmp    cx,si
  41fa77:	je     0x41fad6
  41fa79:	push   ebx
  41fa7a:	push   edi
  41fa7b:	movzx  ecx,cx
  41fa7e:	mov    edi,0xffcd8d1a
  41fa83:	mov    esi,0x751089f
  41fa88:	mov    ebx,0x4f86
  41fa8d:	cmp    cx,bx
  41fa90:	jne    0x41fa95
  41fa92:	mov    DWORD PTR [ebp-0x4],edx
  41fa95:	lea    edx,[edi+0x1]
  41fa98:	xor    edx,esi
  41fa9a:	mov    edi,edx
  41fa9c:	xor    edi,esi
  41fa9e:	mov    cx,WORD PTR [eax+edi*2+0x64e5cc]
  41faa6:	mov    ebx,0x3b53
  41faab:	sub    cx,bx
  41faae:	mov    ebx,0x8a8f
  41fab3:	xor    cx,bx
  41fab6:	mov    ebx,0x4e22
  41fabb:	cmp    cx,bx
  41fabe:	jne    0x41fa88
  41fac0:	mov    ecx,DWORD PTR [ebp-0x4]
  41fac3:	pop    edi
  41fac4:	pop    ebx
  41fac5:	cmp    ecx,0xf89c8586
  41facb:	je     0x41fad6
  41facd:	xor    ecx,esi
  41facf:	lea    eax,[eax+ecx*2+0x64e5ce]
  41fad6:	pop    esi
  41fad7:	leave  
  41fad8:	ret    
  41fad9:	push   ebp
  41fada:	mov    ebp,esp
  41fadc:	push   ecx
  41fadd:	push   esi
  41fade:	push   edi
  41fadf:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41fae6:	mov    esi,0xf89c8585
  41faeb:	call   0x41fa4b
  41faf0:	mov    edi,eax
  41faf2:	mov    al,BYTE PTR [edi]
  41faf4:	add    al,0x6
  41faf6:	xor    al,0x76
  41faf8:	cmp    al,0x70
  41fafa:	je     0x41fb5d
  41fafc:	mov    eax,edi
  41fafe:	mov    edx,0xffcd8d1a
  41fb03:	mov    ecx,0x751089f
  41fb08:	push   ebx
  41fb09:	mov    ax,WORD PTR [eax]
  41fb0c:	mov    ebx,0x3b53
  41fb11:	sub    ax,bx
  41fb14:	mov    ebx,0x8a8f
  41fb19:	xor    ax,bx
  41fb1c:	mov    ebx,0x4e54
  41fb21:	cmp    ax,bx
  41fb24:	jne    0x41fb29
  41fb26:	mov    DWORD PTR [ebp-0x4],esi
  41fb29:	lea    esi,[edx+0x1]
  41fb2c:	xor    esi,ecx
  41fb2e:	mov    edx,esi
  41fb30:	xor    edx,ecx
  41fb32:	lea    eax,[edi+edx*2+0x64e5cc]
  41fb39:	mov    bl,BYTE PTR [eax]
  41fb3b:	add    bl,0x6
  41fb3e:	xor    bl,0x76
  41fb41:	cmp    bl,0x70
  41fb44:	jne    0x41fb09
  41fb46:	mov    eax,DWORD PTR [ebp-0x4]
  41fb49:	pop    ebx
  41fb4a:	cmp    eax,0xf89c8586
  41fb4f:	je     0x41fb5d
  41fb51:	xor    eax,ecx
  41fb53:	xor    ecx,ecx
  41fb55:	mov    WORD PTR [edi+eax*2+0x64e5cc],cx
  41fb5d:	mov    eax,edi
  41fb5f:	pop    edi
  41fb60:	pop    esi
  41fb61:	leave  
  41fb62:	ret    
  41fb63:	push   ebp
  41fb64:	mov    ebp,esp
  41fb66:	push   ecx
  41fb67:	push   esi
  41fb68:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41fb6f:	mov    esi,0xf89c8585
  41fb74:	call   0x41fa4b
  41fb79:	mov    cx,WORD PTR [eax]
  41fb7c:	mov    edx,0x3b53
  41fb81:	sub    cx,dx
  41fb84:	mov    edx,0x8a8f
  41fb89:	xor    cx,dx
  41fb8c:	mov    edx,0x4e22
  41fb91:	cmp    cx,dx
  41fb94:	je     0x41fbed
  41fb96:	push   ebx
  41fb97:	push   edi
  41fb98:	movzx  ecx,cx
  41fb9b:	mov    edx,0xffcd8d1a
  41fba0:	mov    edi,0x751089f
  41fba5:	mov    ebx,0x4e54
  41fbaa:	cmp    cx,bx
  41fbad:	jne    0x41fbb2
  41fbaf:	mov    DWORD PTR [ebp-0x4],esi
  41fbb2:	lea    esi,[edx+0x1]
  41fbb5:	xor    esi,edi
  41fbb7:	mov    edx,esi
  41fbb9:	xor    edx,edi
  41fbbb:	mov    cx,WORD PTR [eax+edx*2+0x64e5cc]
  41fbc3:	mov    ebx,0x3b53
  41fbc8:	sub    cx,bx
  41fbcb:	mov    ebx,0x8a8f
  41fbd0:	xor    cx,bx
  41fbd3:	mov    ebx,0x4e22
  41fbd8:	cmp    cx,bx
  41fbdb:	jne    0x41fba5
  41fbdd:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41fbe4:	pop    edi
  41fbe5:	pop    ebx
  41fbe6:	je     0x41fbed
  41fbe8:	xor    eax,eax
  41fbea:	inc    eax
  41fbeb:	jmp    0x41fbef
  41fbed:	xor    eax,eax
  41fbef:	pop    esi
  41fbf0:	leave  
  41fbf1:	ret    
  41fbf2:	push   ebp
  41fbf3:	mov    ebp,esp
  41fbf5:	push   ecx
  41fbf6:	mov    eax,DWORD PTR [ebp+0x8]
  41fbf9:	movzx  ecx,WORD PTR [eax]
  41fbfc:	push   esi
  41fbfd:	lea    eax,[ecx-0x3b53]
  41fc03:	mov    esi,0x8a8f
  41fc08:	push   edi
  41fc09:	xor    eax,esi
  41fc0b:	mov    edi,0x4e22
  41fc10:	mov    DWORD PTR [ebp-0x4],edx
  41fc13:	cmp    ax,di
  41fc16:	je     0x41fc43
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	sub    eax,edx
  41fc1d:	mov    DWORD PTR [ebp+0x8],eax
  41fc20:	jmp    0x41fc25
  41fc22:	mov    eax,DWORD PTR [ebp+0x8]
  41fc25:	mov    WORD PTR [edx],cx
  41fc28:	add    edx,0x2
  41fc2b:	movzx  edi,WORD PTR [eax+edx*1]
  41fc2f:	mov    ecx,edi
  41fc31:	add    edi,0xffffc4ad
  41fc37:	xor    edi,esi
  41fc39:	mov    eax,0x4e22
  41fc3e:	cmp    di,ax
  41fc41:	jne    0x41fc22
  41fc43:	xor    eax,eax
  41fc45:	pop    edi
  41fc46:	mov    WORD PTR [edx],ax
  41fc49:	mov    eax,DWORD PTR [ebp-0x4]
  41fc4c:	pop    esi
  41fc4d:	leave  
  41fc4e:	ret    0x4
  41fc51:	push   ebp
  41fc52:	mov    ebp,esp
  41fc54:	sub    esp,0x18
  41fc57:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  41fc5e:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41fc65:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc68:	push   esi
  41fc69:	mov    eax,0x751089f
  41fc6e:	xor    ecx,eax
  41fc70:	mov    esi,0x3272e6
  41fc75:	add    ecx,esi
  41fc77:	mov    DWORD PTR [ebp-0x4],ecx
  41fc7a:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fc81:	mov    DWORD PTR [ebp-0x10],0xf89c8581
  41fc88:	push   edi
  41fc89:	mov    DWORD PTR [ebp-0x14],0xf89c8583
  41fc90:	jmp    0x41fd31
  41fc95:	mov    ecx,DWORD PTR [ebp-0x4]
  41fc98:	mov    edx,DWORD PTR [ebp+0x10]
  41fc9b:	sub    edx,ecx
  41fc9d:	mov    ecx,DWORD PTR [ebp-0xc]
  41fca0:	xor    ecx,eax
  41fca2:	add    ecx,esi
  41fca4:	cmp    edx,ecx
  41fca6:	jbe    0x41fcc3
  41fca8:	mov    edx,DWORD PTR [ebp-0x4]
  41fcab:	add    edx,DWORD PTR [ebp+0x8]
  41fcae:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcb1:	add    ecx,DWORD PTR [ebp+0xc]
  41fcb4:	mov    edi,DWORD PTR [ecx]
  41fcb6:	mov    DWORD PTR [edx],edi
  41fcb8:	mov    ecx,DWORD PTR [ecx+0x4]
  41fcbb:	mov    DWORD PTR [edx+0x4],ecx
  41fcbe:	mov    ecx,DWORD PTR [ebp-0xc]
  41fcc1:	jmp    0x41fd10
  41fcc3:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcc6:	mov    edx,DWORD PTR [ebp+0x10]
  41fcc9:	sub    edx,ecx
  41fccb:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcce:	xor    ecx,eax
  41fcd0:	add    ecx,esi
  41fcd2:	cmp    edx,ecx
  41fcd4:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd7:	jbe    0x41fceb
  41fcd9:	add    ecx,DWORD PTR [ebp+0x8]
  41fcdc:	mov    edx,DWORD PTR [ebp-0x4]
  41fcdf:	add    edx,DWORD PTR [ebp+0xc]
  41fce2:	mov    edx,DWORD PTR [edx]
  41fce4:	mov    DWORD PTR [ecx],edx
  41fce6:	mov    ecx,DWORD PTR [ebp-0x10]
  41fce9:	jmp    0x41fd10
  41fceb:	mov    edx,DWORD PTR [ebp+0x10]
  41fcee:	sub    edx,ecx
  41fcf0:	mov    ecx,DWORD PTR [ebp-0x14]
  41fcf3:	xor    ecx,eax
  41fcf5:	add    ecx,esi
  41fcf7:	cmp    edx,ecx
  41fcf9:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcfc:	jbe    0x41fd21
  41fcfe:	add    ecx,DWORD PTR [ebp+0x8]
  41fd01:	mov    edx,DWORD PTR [ebp-0x4]
  41fd04:	add    edx,DWORD PTR [ebp+0xc]
  41fd07:	mov    dx,WORD PTR [edx]
  41fd0a:	mov    WORD PTR [ecx],dx
  41fd0d:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd10:	mov    edx,DWORD PTR [ebp-0x4]
  41fd13:	xor    ecx,eax
  41fd15:	lea    ecx,[ecx+edx*1+0x3272e6]
  41fd1c:	mov    DWORD PTR [ebp-0x4],ecx
  41fd1f:	jmp    0x41fd31
  41fd21:	add    ecx,DWORD PTR [ebp+0x8]
  41fd24:	mov    edx,DWORD PTR [ebp-0x4]
  41fd27:	add    edx,DWORD PTR [ebp+0xc]
  41fd2a:	mov    dl,BYTE PTR [edx]
  41fd2c:	mov    BYTE PTR [ecx],dl
  41fd2e:	inc    DWORD PTR [ebp-0x4]
  41fd31:	mov    ecx,DWORD PTR [ebp-0x18]
  41fd34:	mov    edx,DWORD PTR [ebp+0x10]
  41fd37:	xor    ecx,eax
  41fd39:	add    ecx,esi
  41fd3b:	imul   ecx,edx
  41fd3e:	mov    edx,DWORD PTR [ebp-0x8]
  41fd41:	mov    edi,DWORD PTR [ebp-0x4]
  41fd44:	xor    edx,eax
  41fd46:	lea    edx,[edx+edi*1+0x3272e6]
  41fd4d:	cmp    edx,ecx
  41fd4f:	jb     0x41fc95
  41fd55:	pop    edi
  41fd56:	pop    esi
  41fd57:	leave  
  41fd58:	ret    0xc
  41fd5b:	push   ebp
  41fd5c:	mov    ebp,esp
  41fd5e:	sub    esp,0xc
  41fd61:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41fd68:	push   esi
  41fd69:	mov    esi,eax
  41fd6b:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41fd72:	mov    edx,DWORD PTR [ebp-0x4]
  41fd75:	mov    eax,0x751089f
  41fd7a:	xor    edx,eax
  41fd7c:	mov    ecx,0x3272e6
  41fd81:	add    edx,ecx
  41fd83:	cmp    esi,edx
  41fd85:	je     0x41fdc7
  41fd87:	push   ebx
  41fd88:	push   edi
  41fd89:	mov    edx,DWORD PTR [ebp-0x8]
  41fd8c:	mov    ebx,DWORD PTR [ebp+0x8]
  41fd8f:	xor    edx,eax
  41fd91:	mov    edi,0xffcd8d1a
  41fd96:	sub    edi,edx
  41fd98:	add    esi,edi
  41fd9a:	lea    edx,[esi-0x3272e6]
  41fda0:	xor    edx,eax
  41fda2:	mov    DWORD PTR [ebp-0xc],edx
  41fda5:	mov    edx,DWORD PTR [ebp-0x4]
  41fda8:	mov    edi,DWORD PTR [ebp-0xc]
  41fdab:	xor    dl,0x9f
  41fdae:	sub    dl,0x1a
  41fdb1:	xor    edi,eax
  41fdb3:	mov    BYTE PTR [edi+ebx*1+0x3272e6],dl
  41fdba:	mov    edx,DWORD PTR [ebp-0x4]
  41fdbd:	xor    edx,eax
  41fdbf:	add    edx,ecx
  41fdc1:	cmp    esi,edx
  41fdc3:	jne    0x41fd89
  41fdc5:	pop    edi
  41fdc6:	pop    ebx
  41fdc7:	pop    esi
  41fdc8:	leave  
  41fdc9:	ret    0x4
  41fdcc:	push   ebp
  41fdcd:	mov    ebp,esp
  41fdcf:	sub    esp,0x21c
  41fdd5:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41fddc:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41fde3:	mov    eax,DWORD PTR [ebp+0x10]
  41fde6:	mov    eax,DWORD PTR [ebp-0x4]
  41fde9:	mov    ecx,DWORD PTR [ebp+0x8]
  41fdec:	push   esi
  41fded:	push   edi
  41fdee:	mov    edi,0x751089f
  41fdf3:	xor    eax,edi
  41fdf5:	mov    esi,0x3272e6
  41fdfa:	add    eax,esi
  41fdfc:	cmp    eax,ecx
  41fdfe:	mov    eax,DWORD PTR [ebp-0x4]
  41fe01:	jne    0x41fe0c
  41fe03:	xor    eax,edi
  41fe05:	add    eax,esi
  41fe07:	jmp    0x41feb8
  41fe0c:	mov    ecx,DWORD PTR [ebp+0xc]
  41fe0f:	xor    eax,edi
  41fe11:	add    eax,esi
  41fe13:	cmp    eax,ecx
  41fe15:	jne    0x41fe1c
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	jmp    0x41fe03
  41fe1c:	lea    eax,[ebp-0x21c]
  41fe22:	mov    DWORD PTR [ebp-0x8],eax
  41fe25:	mov    eax,DWORD PTR [ebp+0xc]
  41fe28:	mov    DWORD PTR [ebp-0x10],eax
  41fe2b:	mov    eax,DWORD PTR [ebp-0x4]
  41fe2e:	xor    eax,edi
  41fe30:	add    eax,esi
  41fe32:	mov    DWORD PTR [ebp+0x10],eax
  41fe35:	mov    eax,DWORD PTR [ebp+0xc]
  41fe38:	push   ebx
  41fe39:	call   0x41fb63
  41fe3e:	mov    ebx,eax
  41fe40:	mov    eax,DWORD PTR [ebp+0x8]
  41fe43:	mov    eax,DWORD PTR [eax+0x14]
  41fe46:	jmp    0x41fea0
  41fe48:	mov    eax,DWORD PTR [ebp+0xc]
  41fe4b:	sub    eax,0x8
  41fe4e:	mov    DWORD PTR [ebp-0xc],eax
  41fe51:	mov    eax,DWORD PTR [ebp-0xc]
  41fe54:	mov    eax,DWORD PTR [eax+0x28]
  41fe57:	call   0x41fa4b
  41fe5c:	mov    DWORD PTR [ebp+0x10],eax
  41fe5f:	push   DWORD PTR [ebp+0x10]
  41fe62:	mov    edx,DWORD PTR [ebp-0x8]
  41fe65:	call   0x41fbf2
  41fe6a:	mov    eax,DWORD PTR [ebp-0x4]
  41fe6d:	xor    eax,edi
  41fe6f:	add    eax,esi
  41fe71:	cmp    eax,ebx
  41fe73:	jne    0x41fe7d
  41fe75:	mov    eax,DWORD PTR [ebp-0x8]
  41fe78:	call   0x41fad9
  41fe7d:	mov    eax,DWORD PTR [ebp-0x14]
  41fe80:	xor    eax,edi
  41fe82:	add    eax,esi
  41fe84:	push   eax
  41fe85:	push   DWORD PTR [ebp-0x10]
  41fe88:	mov    eax,DWORD PTR [ebp-0x8]
  41fe8b:	call   0x41f805
  41fe90:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe93:	xor    ecx,edi
  41fe95:	add    ecx,esi
  41fe97:	cmp    eax,ecx
  41fe99:	je     0x41febe
  41fe9b:	mov    eax,DWORD PTR [ebp+0xc]
  41fe9e:	mov    eax,DWORD PTR [eax]
  41fea0:	mov    DWORD PTR [ebp+0xc],eax
  41fea3:	mov    eax,DWORD PTR [ebp+0x8]
  41fea6:	mov    ecx,DWORD PTR [ebp+0xc]
  41fea9:	add    eax,0x14
  41feac:	cmp    ecx,eax
  41feae:	jne    0x41fe48
  41feb0:	mov    eax,DWORD PTR [ebp-0x4]
  41feb3:	xor    eax,edi
  41feb5:	add    eax,esi
  41feb7:	pop    ebx
  41feb8:	pop    edi
  41feb9:	pop    esi
  41feba:	leave  
  41febb:	ret    0xc
  41febe:	mov    eax,DWORD PTR [ebp-0xc]
  41fec1:	mov    eax,DWORD PTR [eax+0x18]
  41fec4:	jmp    0x41feb7
  41fec6:	push   ebp
  41fec7:	mov    ebp,esp
  41fec9:	mov    eax,DWORD PTR [ebp+0xc]
  41fecc:	sub    esp,0x10
  41fecf:	cmp    DWORD PTR [ebp+0x8],0x0
  41fed3:	push   ebx
  41fed4:	push   esi
  41fed5:	push   edi
  41fed6:	je     0x41ff8b
  41fedc:	test   eax,eax
  41fede:	je     0x41ff8b
  41fee4:	movzx  eax,WORD PTR [eax+0x20]
  41fee8:	mov    ecx,eax
  41feea:	mov    DWORD PTR [ebp-0x10],eax
  41feed:	xor    edx,edx
  41feef:	and    DWORD PTR [ebp-0x8],edx
  41fef2:	mov    eax,0x8a8f
  41fef7:	xor    ecx,eax
  41fef9:	add    ecx,0x3b53
  41feff:	mov    DWORD PTR [ebp-0xc],ecx
  41ff02:	and    DWORD PTR [ebp-0x4],0x0
  41ff06:	xor    ecx,ecx
  41ff08:	push   0x7e
  41ff0a:	pop    edi
  41ff0b:	cmp    cx,WORD PTR [ebp-0xc]
  41ff0f:	jae    0x41ff75
  41ff11:	lea    esi,[edx-0x3b53]
  41ff17:	xor    esi,eax
  41ff19:	movzx  ecx,WORD PTR [ebp-0x4]
  41ff1d:	mov    ebx,DWORD PTR [ebp+0xc]
  41ff20:	lea    ecx,[ebx+ecx*4]
  41ff23:	cmp    WORD PTR [ecx+0x2],si
  41ff27:	jne    0x41ff60
  41ff29:	movzx  ecx,WORD PTR [ecx]
  41ff2c:	mov    edi,0x4e22
  41ff31:	cmp    cx,di
  41ff34:	jne    0x41ff42
  41ff36:	mov    ebx,DWORD PTR [ebp+0x8]
  41ff39:	movzx  edi,dx
  41ff3c:	cmp    BYTE PTR [edi+ebx*1],0x0
  41ff40:	je     0x41ff6f
  41ff42:	mov    ebx,DWORD PTR [ebp+0x8]
  41ff45:	movzx  edi,dx
  41ff48:	movsx  di,BYTE PTR [edi+ebx*1]
  41ff4d:	mov    ebx,0x3b53
  41ff52:	sub    di,bx
  41ff55:	xor    di,ax
  41ff58:	cmp    cx,di
  41ff5b:	je     0x41ff6f
  41ff5d:	push   0x70
  41ff5f:	pop    edi
  41ff60:	inc    DWORD PTR [ebp-0x4]
  41ff63:	mov    cx,WORD PTR [ebp-0xc]
  41ff67:	cmp    WORD PTR [ebp-0x4],cx
  41ff6b:	jb     0x41ff19
  41ff6d:	jmp    0x41ff75
  41ff6f:	inc    DWORD PTR [ebp-0x8]
  41ff72:	push   0x71
  41ff74:	pop    edi
  41ff75:	mov    esi,DWORD PTR [ebp+0x8]
  41ff78:	movzx  ecx,dx
  41ff7b:	cmp    BYTE PTR [ecx+esi*1],0x0
  41ff7f:	je     0x41ff94
  41ff81:	inc    edx
  41ff82:	cmp    edi,0x70
  41ff85:	jne    0x41ff02
  41ff8b:	xor    eax,eax
  41ff8d:	pop    edi
  41ff8e:	pop    esi
  41ff8f:	pop    ebx
  41ff90:	leave  
  41ff91:	ret    0x8
  41ff94:	mov    ecx,DWORD PTR [ebp-0x8]
  41ff97:	add    ecx,0xffffc4ad
  41ff9d:	xor    cx,ax
  41ffa0:	xor    eax,eax
  41ffa2:	cmp    cx,WORD PTR [ebp-0x10]
  41ffa6:	sete   al
  41ffa9:	jmp    0x41ff8d
  41ffab:	push   ebp
  41ffac:	mov    ebp,esp
  41ffae:	sub    esp,0x50
  41ffb1:	push   edi
  41ffb2:	mov    edi,eax
  41ffb4:	mov    eax,DWORD PTR [edi+0x1a8]
  41ffba:	cmp    DWORD PTR [eax],0x0
  41ffbd:	jne    0x41ffc6
  41ffbf:	xor    eax,eax
  41ffc1:	jmp    0x4200f7
  41ffc6:	push   DWORD PTR [ebp+0x8]
  41ffc9:	push   0x2c
  41ffcb:	pop    eax
  41ffcc:	call   0x41fd5b
  41ffd1:	mov    edx,DWORD PTR [edi+0x1ac]
  41ffd7:	lea    eax,[edi+0x22]
  41ffda:	mov    DWORD PTR [ebp-0x4c],eax
  41ffdd:	lea    eax,[edi+0x44]
  41ffe0:	mov    DWORD PTR [ebp-0x48],eax
  41ffe3:	lea    eax,[edi+0x66]
  41ffe6:	mov    DWORD PTR [ebp-0x44],eax
  41ffe9:	lea    eax,[edi+0x88]
  41ffef:	mov    DWORD PTR [ebp-0x40],eax
  41fff2:	lea    eax,[edi+0xaa]
  41fff8:	mov    DWORD PTR [ebp-0x3c],eax
  41fffb:	lea    eax,[edi+0xcc]
  420001:	mov    DWORD PTR [ebp-0x38],eax
  420004:	lea    eax,[edi+0xee]
  42000a:	mov    DWORD PTR [ebp-0x34],eax
  42000d:	lea    eax,[edi+0x110]
  420013:	mov    DWORD PTR [ebp-0x30],eax
  420016:	lea    eax,[edi+0x132]
  42001c:	mov    DWORD PTR [ebp-0x2c],eax
  42001f:	lea    eax,[edi+0x154]
  420025:	push   edi
  420026:	mov    DWORD PTR [ebp-0x50],edi
  420029:	mov    DWORD PTR [ebp-0x28],eax
  42002c:	call   0x42012b
  420031:	push   eax
  420032:	mov    eax,DWORD PTR [edi+0x1a8]
  420038:	push   DWORD PTR [eax]
  42003a:	call   0x41fdcc
  42003f:	mov    DWORD PTR [ebp-0x10],eax
  420042:	test   eax,eax
  420044:	je     0x4200f7
  42004a:	mov    ecx,DWORD PTR [eax+0x3c]
  42004d:	push   ebx
  42004e:	push   esi
  42004f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  420053:	add    esi,eax
  420055:	mov    edi,DWORD PTR [esi+0x24]
  420058:	mov    ecx,DWORD PTR [esi+0x1c]
  42005b:	mov    edx,DWORD PTR [esi+0x20]
  42005e:	mov    ebx,DWORD PTR [esi+0x18]
  420061:	add    edi,eax
  420063:	mov    DWORD PTR [ebp-0x20],edi
  420066:	mov    edi,DWORD PTR [esi+0x14]
  420069:	add    ecx,eax
  42006b:	add    edx,eax
  42006d:	mov    DWORD PTR [ebp-0xc],ecx
  420070:	mov    DWORD PTR [ebp-0x1c],edx
  420073:	mov    DWORD PTR [ebp-0x8],edi
  420076:	cmp    edi,ebx
  420078:	ja     0x42007d
  42007a:	mov    DWORD PTR [ebp-0x8],ebx
  42007d:	xor    ebx,ebx
  42007f:	mov    DWORD PTR [ebp-0x18],ebx
  420082:	cmp    DWORD PTR [ebp-0x8],ebx
  420085:	jbe    0x4200f5
  420087:	jmp    0x42008c
  420089:	mov    edx,DWORD PTR [ebp-0x1c]
  42008c:	mov    edi,DWORD PTR [ebp-0x20]
  42008f:	movzx  edi,WORD PTR [edi+ebx*2]
  420093:	cmp    ebx,DWORD PTR [esi+0x18]
  420096:	jae    0x4200f5
  420098:	cmp    edi,DWORD PTR [esi+0x14]
  42009b:	jae    0x4200f5
  42009d:	mov    ebx,DWORD PTR [edx+ebx*4]
  4200a0:	mov    edx,DWORD PTR [ebp+0x8]
  4200a3:	mov    edi,DWORD PTR [ecx+edi*4]
  4200a6:	mov    DWORD PTR [ebp-0x4],edx
  4200a9:	lea    edx,[ebp-0x50]
  4200ac:	add    ebx,eax
  4200ae:	add    edi,eax
  4200b0:	sub    edx,DWORD PTR [ebp+0x8]
  4200b3:	mov    DWORD PTR [ebp-0x14],0xb
  4200ba:	mov    DWORD PTR [ebp-0x24],edx
  4200bd:	mov    edx,DWORD PTR [ebp-0x4]
  4200c0:	cmp    DWORD PTR [edx],0x0
  4200c3:	jne    0x4200e0
  4200c5:	mov    eax,DWORD PTR [ebp-0x24]
  4200c8:	push   DWORD PTR [eax+edx*1]
  4200cb:	push   ebx
  4200cc:	call   0x41fec6
  4200d1:	mov    ecx,DWORD PTR [ebp-0xc]
  4200d4:	test   eax,eax
  4200d6:	je     0x4200dd
  4200d8:	mov    eax,DWORD PTR [ebp-0x4]
  4200db:	mov    DWORD PTR [eax],edi
  4200dd:	mov    eax,DWORD PTR [ebp-0x10]
  4200e0:	add    DWORD PTR [ebp-0x4],0x4
  4200e4:	dec    DWORD PTR [ebp-0x14]
  4200e7:	jne    0x4200bd
  4200e9:	mov    ebx,DWORD PTR [ebp-0x18]
  4200ec:	inc    ebx
  4200ed:	mov    DWORD PTR [ebp-0x18],ebx
  4200f0:	cmp    ebx,DWORD PTR [ebp-0x8]
  4200f3:	jb     0x420089
  4200f5:	pop    esi
  4200f6:	pop    ebx
  4200f7:	pop    edi
  4200f8:	leave  
  4200f9:	ret    0x4
  4200fc:	push   ebp
  4200fd:	mov    ebp,esp
  4200ff:	mov    eax,DWORD PTR [ebp+0x8]
  420102:	push   esi
  420103:	push   DWORD PTR [eax+0x1d8]
  420109:	lea    esi,[eax+0x198]
  42010f:	mov    eax,DWORD PTR [ebp+0x8]
  420112:	call   0x41ffab
  420117:	mov    ecx,DWORD PTR [esi]
  420119:	mov    DWORD PTR [ecx],eax
  42011b:	mov    eax,DWORD PTR [esi]
  42011d:	xor    ecx,ecx
  42011f:	cmp    DWORD PTR [eax],ecx
  420121:	pop    esi
  420122:	setne  cl
  420125:	mov    eax,ecx
  420127:	pop    ebp
  420128:	ret    0x4
  42012b:	mov    ecx,DWORD PTR [edi+0x188]
  420131:	push   ebx
  420132:	jmp    0x420147
  420134:	xor    eax,0x8a8f
  420139:	add    eax,0x3b53
  42013e:	mov    WORD PTR [ecx],ax
  420141:	add    ecx,0x2
  420144:	add    edx,0x2
  420147:	movzx  eax,WORD PTR [edx]
  42014a:	mov    ebx,0x4e22
  42014f:	cmp    ax,bx
  420152:	jne    0x420134
  420154:	xor    eax,eax
  420156:	mov    WORD PTR [ecx],ax
  420159:	mov    eax,DWORD PTR [edi+0x188]
  42015f:	pop    ebx
  420160:	ret    
  420161:	push   edi
  420162:	mov    edi,eax
  420164:	mov    eax,DWORD PTR [esi+0x188]
  42016a:	shl    edi,0x6
  42016d:	add    eax,edi
  42016f:	jmp    0x42017b
  420171:	xor    cl,0x76
  420174:	sub    cl,0x6
  420177:	mov    BYTE PTR [eax],cl
  420179:	inc    eax
  42017a:	inc    edx
  42017b:	mov    cl,BYTE PTR [edx]
  42017d:	cmp    cl,0x70
  420180:	jne    0x420171
  420182:	mov    BYTE PTR [eax],0x0
  420185:	mov    eax,DWORD PTR [esi+0x188]
  42018b:	add    eax,edi
  42018d:	pop    edi
  42018e:	ret    
  42018f:	push   ebp
  420190:	mov    ebp,esp
  420192:	sub    esp,0x14
  420195:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  42019c:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  4201a3:	mov    eax,DWORD PTR [ebx]
  4201a5:	mov    DWORD PTR [ebp-0x8],eax
  4201a8:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4201af:	push   esi
  4201b0:	push   edi
  4201b1:	mov    DWORD PTR [ebp-0x14],0xead718a5
  4201b8:	mov    edi,DWORD PTR [ebp-0x4]
  4201bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4201be:	mov    eax,0x751089f
  4201c3:	xor    edi,eax
  4201c5:	mov    edx,0x3272e6
  4201ca:	xor    ecx,eax
  4201cc:	add    edi,edx
  4201ce:	add    ecx,edx
  4201d0:	imul   edi,ecx
  4201d3:	jmp    0x42021b
  4201d5:	mov    ecx,DWORD PTR [ebp-0x8]
  4201d8:	mov    esi,DWORD PTR [ebp-0x4]
  4201db:	xor    ecx,eax
  4201dd:	xor    esi,eax
  4201df:	add    ecx,edx
  4201e1:	add    esi,edx
  4201e3:	test   esi,ecx
  4201e5:	mov    esi,DWORD PTR [ebp-0x8]
  4201e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4201eb:	je     0x420202
  4201ed:	xor    ecx,eax
  4201ef:	xor    esi,eax
  4201f1:	add    ecx,edx
  4201f3:	add    esi,edx
  4201f5:	shr    esi,cl
  4201f7:	mov    ecx,DWORD PTR [ebp-0x14]
  4201fa:	xor    ecx,eax
  4201fc:	add    ecx,edx
  4201fe:	xor    esi,ecx
  420200:	jmp    0x42020c
  420202:	xor    esi,eax
  420204:	xor    ecx,eax
  420206:	add    esi,edx
  420208:	add    ecx,edx
  42020a:	shr    esi,cl
  42020c:	mov    DWORD PTR [ebp-0x8],esi
  42020f:	mov    ecx,DWORD PTR [ebp-0x4]
  420212:	xor    ecx,eax
  420214:	lea    edi,[edi+ecx*1+0x3272e6]
  42021b:	mov    ecx,DWORD PTR [ebp-0xc]
  42021e:	mov    esi,DWORD PTR [ebp-0x4]
  420221:	xor    esi,eax
  420223:	xor    ecx,eax
  420225:	sub    ecx,esi
  420227:	cmp    edi,ecx
  420229:	jbe    0x4201d5
  42022b:	mov    eax,DWORD PTR [ebp-0x8]
  42022e:	pop    edi
  42022f:	mov    DWORD PTR [ebx],eax
  420231:	mov    eax,DWORD PTR [ebp-0x8]
  420234:	pop    esi
  420235:	leave  
  420236:	ret    
  420237:	push   ebp
  420238:	mov    ebp,esp
  42023a:	sub    esp,0x38
  42023d:	push   ebx
  42023e:	mov    ebx,0xf89c8585
  420243:	mov    DWORD PTR [ebp-0x4],ebx
  420246:	lea    eax,[ebx-0x1]
  420249:	push   esi
  42024a:	mov    DWORD PTR [ebp-0x24],eax
  42024d:	mov    ecx,DWORD PTR [ebp-0x4]
  420250:	mov    edx,DWORD PTR [ebp+0x8]
  420253:	mov    esi,0x751089f
  420258:	push   edi
  420259:	xor    ecx,esi
  42025b:	mov    edi,0x3272e6
  420260:	add    ecx,edi
  420262:	cmp    edx,ecx
  420264:	je     0x4203ca
  42026a:	mov    ecx,DWORD PTR [ebp-0x4]
  42026d:	mov    edx,DWORD PTR [ebp+0xc]
  420270:	xor    ecx,esi
  420272:	add    ecx,edi
  420274:	cmp    edx,ecx
  420276:	je     0x4203ca
  42027c:	mov    ecx,DWORD PTR [ebp+0x10]
  42027f:	mov    DWORD PTR [ebp-0x14],ecx
  420282:	mov    ecx,DWORD PTR [ebp+0xc]
  420285:	mov    edx,DWORD PTR [ebp+0x8]
  420288:	mov    DWORD PTR [ebp-0x18],0xf89c8505
  42028f:	mov    DWORD PTR [ebp-0x1c],eax
  420292:	mov    DWORD PTR [ebp-0x10],ebx
  420295:	mov    DWORD PTR [ebp+0xc],eax
  420298:	mov    DWORD PTR [ebp+0x10],0xf89c8583
  42029f:	mov    eax,DWORD PTR [ebp+0xc]
  4202a2:	xor    eax,esi
  4202a4:	mov    DWORD PTR [ebp-0x20],ecx
  4202a7:	sub    ecx,eax
  4202a9:	sub    ecx,edi
  4202ab:	mov    DWORD PTR [ebp+0x8],ecx
  4202ae:	mov    DWORD PTR [ebp-0xc],edx
  4202b1:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  4202b8:	jmp    0x4203ba
  4202bd:	mov    eax,DWORD PTR [ebp+0xc]
  4202c0:	mov    ecx,DWORD PTR [ebp+0xc]
  4202c3:	xor    eax,esi
  4202c5:	xor    ecx,esi
  4202c7:	lea    ecx,[eax+ecx*1+0x64e5cc]
  4202ce:	mov    eax,DWORD PTR [ebp+0x8]
  4202d1:	xor    edx,edx
  4202d3:	div    ecx
  4202d5:	mov    eax,DWORD PTR [ebp+0x10]
  4202d8:	mov    ecx,DWORD PTR [ebp+0xc]
  4202db:	xor    eax,esi
  4202dd:	xor    ecx,esi
  4202df:	sub    eax,ecx
  4202e1:	cmp    edx,eax
  4202e3:	jne    0x420379
  4202e9:	mov    eax,DWORD PTR [ebp+0x8]
  4202ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4202ef:	mov    dl,BYTE PTR [eax+ecx*1]
  4202f2:	mov    eax,DWORD PTR [ebp-0x10]
  4202f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4202f8:	xor    eax,esi
  4202fa:	xor    ecx,esi
  4202fc:	add    eax,edi
  4202fe:	add    ecx,edi
  420300:	cmp    eax,ecx
  420302:	jae    0x42034a
  420304:	lea    ecx,[eax-0x3272e6]
  42030a:	mov    DWORD PTR [ebp-0x4],ecx
  42030d:	mov    ebx,DWORD PTR [ebp-0x4]
  420310:	xor    ebx,esi
  420312:	add    ebx,0x7f55d8c3
  420318:	lea    ecx,[ebp+eax*4-0x38]
  42031c:	mov    DWORD PTR [ecx],ebx
  42031e:	mov    ebx,DWORD PTR [ecx]
  420320:	cmp    ebx,0x244ecba2
  420326:	jbe    0x420330
  420328:	add    DWORD PTR [ecx],0x405fce1
  42032e:	jmp    0x420336
  420330:	add    DWORD PTR [ecx],0xfdaf431f
  420336:	mov    ecx,DWORD PTR [ebp-0x8]
  420339:	xor    ecx,esi
  42033b:	inc    eax
  42033c:	inc    DWORD PTR [ebp-0x4]
  42033f:	add    ecx,edi
  420341:	cmp    eax,ecx
  420343:	jb     0x42030d
  420345:	mov    ebx,0xf89c8585
  42034a:	cmp    DWORD PTR [ebp-0x14],0x0
  42034e:	jne    0x420358
  420350:	xor    dl,0x76
  420353:	sub    dl,0x6
  420356:	jmp    0x42036e
  420358:	mov    eax,DWORD PTR [ebp-0x18]
  42035b:	xor    al,0x9f
  42035d:	mov    cl,0x1a
  42035f:	sub    cl,al
  420361:	add    dl,cl
  420363:	mov    ecx,DWORD PTR [ebp-0x1c]
  420366:	xor    cl,0x9f
  420369:	sub    cl,0x1a
  42036c:	ror    dl,cl
  42036e:	xor    eax,eax
  420370:	mov    eax,DWORD PTR [ebp+0x8]
  420373:	mov    ecx,DWORD PTR [ebp-0xc]
  420376:	mov    BYTE PTR [eax+ecx*1],dl
  420379:	mov    eax,DWORD PTR [ebp+0x8]
  42037c:	mov    ecx,DWORD PTR [ebp-0x10]
  42037f:	sub    eax,edi
  420381:	xor    eax,esi
  420383:	cmp    eax,ecx
  420385:	jne    0x4203a8
  420387:	mov    eax,DWORD PTR [ebp+0x10]
  42038a:	mov    ecx,DWORD PTR [ebp+0xc]
  42038d:	xor    eax,esi
  42038f:	xor    ecx,esi
  420391:	sub    eax,ecx
  420393:	mov    ecx,DWORD PTR [ebp-0x20]
  420396:	sub    eax,edi
  420398:	xor    eax,esi
  42039a:	mov    DWORD PTR [ebp+0x10],eax
  42039d:	mov    eax,DWORD PTR [ebp+0xc]
  4203a0:	xor    eax,esi
  4203a2:	sub    ecx,eax
  4203a4:	sub    ecx,edi
  4203a6:	jmp    0x4203b7
  4203a8:	mov    eax,DWORD PTR [ebp+0xc]
  4203ab:	xor    eax,esi
  4203ad:	mov    ecx,0xffcd8d1a
  4203b2:	sub    ecx,eax
  4203b4:	add    ecx,DWORD PTR [ebp+0x8]
  4203b7:	mov    DWORD PTR [ebp+0x8],ecx
  4203ba:	mov    eax,DWORD PTR [ebp+0x10]
  4203bd:	cmp    eax,ebx
  4203bf:	jne    0x4202bd
  4203c5:	mov    eax,DWORD PTR [ebp-0x24]
  4203c8:	jmp    0x4203cd
  4203ca:	mov    eax,DWORD PTR [ebp-0x4]
  4203cd:	xor    eax,esi
  4203cf:	add    eax,edi
  4203d1:	pop    edi
  4203d2:	pop    esi
  4203d3:	pop    ebx
  4203d4:	leave  
  4203d5:	ret    0xc
  4203d8:	push   ebp
  4203d9:	mov    ebp,esp
  4203db:	sub    esp,0x420
  4203e1:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  4203e8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4203ef:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  4203f6:	push   ebx
  4203f7:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  4203fe:	mov    eax,DWORD PTR [ebp-0x14]
  420401:	push   esi
  420402:	mov    esi,0x751089f
  420407:	push   edi
  420408:	xor    eax,esi
  42040a:	mov    edi,0x3272e6
  42040f:	add    eax,edi
  420411:	mov    DWORD PTR [ebp-0x8],eax
  420414:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  42041b:	mov    DWORD PTR [ebp-0x4],0xead718a5
  420422:	mov    DWORD PTR [ebp-0x10],0x8
  420429:	mov    ecx,ecx
  42042b:	mov    eax,DWORD PTR [ebp-0xc]
  42042e:	mov    ecx,DWORD PTR [ebp-0x14]
  420431:	xor    eax,esi
  420433:	xor    ecx,esi
  420435:	add    eax,edi
  420437:	add    ecx,edi
  420439:	imul   eax,ecx
  42043c:	jmp    0x42046f
  42043e:	mov    eax,DWORD PTR [ebp-0x4]
  420441:	sub    eax,edi
  420443:	xor    eax,esi
  420445:	mov    DWORD PTR [ebp-0x8],eax
  420448:	lea    ebx,[ebp-0x8]
  42044b:	call   0x42018f
  420450:	mov    DWORD PTR [ebp-0x8],eax
  420453:	mov    eax,DWORD PTR [ebp-0x8]
  420456:	mov    ecx,DWORD PTR [ebp-0x4]
  420459:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  420460:	mov    eax,DWORD PTR [ebp-0xc]
  420463:	mov    ecx,DWORD PTR [ebp-0x4]
  420466:	xor    eax,esi
  420468:	lea    eax,[eax+ecx*1+0x3272e6]
  42046f:	mov    DWORD PTR [ebp-0x4],eax
  420472:	mov    eax,DWORD PTR [ebp-0x18]
  420475:	mov    ecx,DWORD PTR [ebp-0xc]
  420478:	xor    ecx,esi
  42047a:	xor    eax,esi
  42047c:	sub    eax,ecx
  42047e:	mov    ecx,DWORD PTR [ebp-0x4]
  420481:	cmp    ecx,eax
  420483:	jbe    0x42043e
  420485:	mov    eax,DWORD PTR [ebp-0x1c]
  420488:	xor    eax,esi
  42048a:	add    eax,edi
  42048c:	mov    DWORD PTR [ebp-0x8],eax
  42048f:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  420496:	mov    ebx,ebx
  420498:	jmp    0x4204fb
  42049a:	mov    ecx,DWORD PTR [ebp-0x20]
  42049d:	mov    eax,DWORD PTR [ebp-0x8]
  4204a0:	xor    ecx,esi
  4204a2:	add    ecx,edi
  4204a4:	shr    eax,cl
  4204a6:	mov    DWORD PTR [ebp-0x4],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x8]
  4204ac:	mov    cl,BYTE PTR [eax]
  4204ae:	mov    BYTE PTR [ebp+0xb],cl
  4204b1:	mov    cl,BYTE PTR [ebp+0xb]
  4204b4:	mov    edx,DWORD PTR [ebp-0x8]
  4204b7:	movzx  ecx,cl
  4204ba:	xor    ecx,edx
  4204bc:	mov    DWORD PTR [ebp+0x8],ecx
  4204bf:	mov    ecx,DWORD PTR [ebp-0x18]
  4204c2:	mov    edx,DWORD PTR [ebp+0x8]
  4204c5:	xor    ecx,esi
  4204c7:	add    ecx,edi
  4204c9:	and    ecx,edx
  4204cb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4204d2:	mov    edx,DWORD PTR [ebp-0x4]
  4204d5:	xor    ecx,edx
  4204d7:	mov    DWORD PTR [ebp-0x8],ecx
  4204da:	mov    ecx,DWORD PTR [ebp-0xc]
  4204dd:	xor    ecx,esi
  4204df:	lea    eax,[eax+ecx*1+0x3272e6]
  4204e6:	mov    DWORD PTR [ebp+0x8],eax
  4204e9:	mov    eax,DWORD PTR [ebp-0xc]
  4204ec:	xor    eax,esi
  4204ee:	mov    ecx,0xffcd8d1a
  4204f3:	sub    ecx,eax
  4204f5:	add    ecx,DWORD PTR [ebp-0x10]
  4204f8:	mov    DWORD PTR [ebp-0x10],ecx
  4204fb:	mov    eax,DWORD PTR [ebp-0x14]
  4204fe:	mov    ecx,DWORD PTR [ebp-0x10]
  420501:	xor    eax,esi
  420503:	add    eax,edi
  420505:	cmp    ecx,eax
  420507:	jne    0x42049a
  420509:	mov    eax,DWORD PTR [ebp-0x1c]
  42050c:	mov    ecx,DWORD PTR [ebp-0x8]
  42050f:	xor    eax,esi
  420511:	add    eax,edi
  420513:	pop    edi
  420514:	pop    esi
  420515:	xor    eax,ecx
  420517:	pop    ebx
  420518:	leave  
  420519:	ret    0x4
  42051c:	push   ebp
  42051d:	mov    ebp,esp
  42051f:	mov    eax,DWORD PTR [ebp+0x1c]
  420522:	mov    ecx,DWORD PTR [ebp+0x8]
  420525:	mov    edx,DWORD PTR [ebp+0x10]
  420528:	mov    eax,DWORD PTR [eax+0x190]
  42052e:	mov    eax,DWORD PTR [eax]
  420530:	sub    esp,0x64
  420533:	push   ebx
  420534:	push   esi
  420535:	push   edi
  420536:	mov    edi,0x751089f
  42053b:	xor    ecx,edi
  42053d:	mov    ebx,0x3272e6
  420542:	add    ecx,ebx
  420544:	cmp    ecx,edx
  420546:	jne    0x420557
  420548:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  420552:	jmp    0x420a53
  420557:	mov    ecx,DWORD PTR [ebp+0x8]
  42055a:	mov    esi,DWORD PTR [ebp+0x14]
  42055d:	mov    edx,DWORD PTR [esi]
  42055f:	xor    ecx,edi
  420561:	add    ecx,ebx
  420563:	cmp    edx,ecx
  420565:	je     0x420a0e
  42056b:	mov    ecx,DWORD PTR [ebp+0x1c]
  42056e:	mov    DWORD PTR [ebp-0x1c],eax
  420571:	mov    DWORD PTR [ebp+0x1c],ecx
  420574:	mov    ecx,DWORD PTR [ebp+0x18]
  420577:	mov    eax,DWORD PTR [esi]
  420579:	mov    DWORD PTR [ebp-0x20],eax
  42057c:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  420583:	mov    edx,0xf89c8584
  420588:	mov    DWORD PTR [ebp-0x8],edx
  42058b:	mov    eax,DWORD PTR [ebp+0x1c]
  42058e:	mov    DWORD PTR [ebp+0x1c],eax
  420591:	mov    eax,DWORD PTR [ebp+0x1c]
  420594:	mov    eax,DWORD PTR [eax+0x190]
  42059a:	mov    eax,DWORD PTR [eax]
  42059c:	mov    DWORD PTR [ebp-0x24],ecx
  42059f:	mov    ecx,DWORD PTR [ebp+0x1c]
  4205a2:	mov    ecx,DWORD PTR [ecx+0x190]
  4205a8:	mov    ecx,DWORD PTR [ecx]
  4205aa:	add    ecx,DWORD PTR [eax+0x3c]
  4205ad:	mov    DWORD PTR [ebp+0x10],ecx
  4205b0:	mov    eax,DWORD PTR [ebp+0x8]
  4205b3:	xor    eax,edi
  4205b5:	add    eax,ebx
  4205b7:	mov    DWORD PTR [ebp-0x4],eax
  4205ba:	mov    eax,DWORD PTR [ebp+0x8]
  4205bd:	xor    eax,edi
  4205bf:	add    eax,ebx
  4205c1:	mov    DWORD PTR [ebp+0x18],eax
  4205c4:	mov    eax,DWORD PTR [ebp+0x10]
  4205c7:	mov    eax,DWORD PTR [eax+0x50]
  4205ca:	sub    eax,0xc
  4205cd:	mov    DWORD PTR [ebp-0x28],eax
  4205d0:	mov    eax,DWORD PTR [ebp+0x10]
  4205d3:	mov    eax,DWORD PTR [eax+0x38]
  4205d6:	mov    ecx,DWORD PTR [ebp+0x10]
  4205d9:	dec    eax
  4205da:	test   DWORD PTR [ecx+0x54],eax
  4205dd:	mov    eax,DWORD PTR [ebp+0x10]
  4205e0:	je     0x4205fa
  4205e2:	mov    eax,DWORD PTR [eax+0x38]
  4205e5:	mov    ecx,DWORD PTR [ebp+0x10]
  4205e8:	mov    ecx,DWORD PTR [ecx+0x54]
  4205eb:	dec    eax
  4205ec:	not    eax
  4205ee:	and    ecx,eax
  4205f0:	mov    eax,DWORD PTR [ebp+0x10]
  4205f3:	mov    eax,DWORD PTR [eax+0x38]
  4205f6:	add    eax,ecx
  4205f8:	jmp    0x4205fd
  4205fa:	mov    eax,DWORD PTR [eax+0x54]
  4205fd:	mov    DWORD PTR [ebp+0x1c],eax
  420600:	mov    eax,DWORD PTR [ebp+0x8]
  420603:	xor    eax,edi
  420605:	add    eax,ebx
  420607:	mov    DWORD PTR [ebp+0x18],eax
  42060a:	mov    eax,DWORD PTR [ebp+0x8]
  42060d:	xor    eax,edi
  42060f:	add    eax,ebx
  420611:	mov    DWORD PTR [ebp+0x18],eax
  420614:	mov    eax,DWORD PTR [ebp+0x8]
  420617:	mov    ecx,DWORD PTR [ebp-0x24]
  42061a:	xor    eax,edi
  42061c:	add    eax,ebx
  42061e:	mov    DWORD PTR [ecx],eax
  420620:	mov    DWORD PTR [ebp+0x18],edx
  420623:	mov    DWORD PTR [ebp+0x18],0xf89c8583
  42062a:	mov    DWORD PTR [ebp+0x18],0xf89c8582
  420631:	mov    DWORD PTR [ebp+0x18],0xf89c8581
  420638:	mov    eax,DWORD PTR [ebp-0x8]
  42063b:	mov    ecx,DWORD PTR [ebp+0x1c]
  42063e:	xor    eax,edi
  420640:	add    eax,ebx
  420642:	imul   eax,ecx
  420645:	mov    ecx,DWORD PTR [ebp+0x8]
  420648:	mov    edx,DWORD PTR [ebp-0x28]
  42064b:	xor    ecx,edi
  42064d:	lea    ecx,[ecx+edx*1+0x3272e6]
  420654:	cmp    eax,ecx
  420656:	jae    0x420a07
  42065c:	mov    eax,DWORD PTR [ebp+0x8]
  42065f:	xor    eax,edi
  420661:	add    eax,ebx
  420663:	mov    DWORD PTR [ebp+0x18],eax
  420666:	mov    eax,DWORD PTR [ebp+0x1c]
  420669:	add    eax,DWORD PTR [ebp-0x1c]
  42066c:	mov    DWORD PTR [ebp-0x4],eax
  42066f:	push   DWORD PTR [ebp-0x4]
  420672:	mov    esi,DWORD PTR [ebp-0x1c]
  420675:	mov    ecx,DWORD PTR [ebp+0x10]
  420678:	call   0x41f7c7
  42067d:	mov    DWORD PTR [ebp+0xc],eax
  420680:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420687:	mov    eax,DWORD PTR [ebp-0x18]
  42068a:	xor    eax,edi
  42068c:	lea    ecx,[ebp-0x40]
  42068f:	add    eax,ebx
  420691:	push   ecx
  420692:	call   0x41fd5b
  420697:	mov    eax,DWORD PTR [ebp+0xc]
  42069a:	test   eax,eax
  42069c:	je     0x4206ec
  42069e:	mov    eax,DWORD PTR [ebp-0x18]
  4206a1:	xor    eax,edi
  4206a3:	add    eax,ebx
  4206a5:	push   eax
  4206a6:	push   DWORD PTR [ebp+0xc]
  4206a9:	lea    eax,[ebp-0x40]
  4206ac:	push   eax
  4206ad:	call   0x41fc51
  4206b2:	mov    eax,DWORD PTR [ebp-0x4]
  4206b5:	mov    DWORD PTR [ebp-0x18],eax
  4206b8:	mov    eax,DWORD PTR [ebp-0x18]
  4206bb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4206be:	sub    eax,ecx
  4206c0:	mov    DWORD PTR [ebp-0x18],eax
  4206c3:	mov    eax,DWORD PTR [ebp+0xc]
  4206c6:	mov    ecx,DWORD PTR [ebp+0xc]
  4206c9:	mov    eax,DWORD PTR [eax+0x10]
  4206cc:	add    eax,DWORD PTR [ecx+0xc]
  4206cf:	mov    ecx,DWORD PTR [ebp-0x18]
  4206d2:	cmp    ecx,eax
  4206d4:	jb     0x4206ec
  4206d6:	mov    eax,DWORD PTR [ebp+0xc]
  4206d9:	mov    eax,DWORD PTR [eax+0xc]
  4206dc:	mov    ecx,DWORD PTR [ebp+0xc]
  4206df:	add    eax,DWORD PTR [ecx+0x8]
  4206e2:	mov    ecx,DWORD PTR [ebp-0x18]
  4206e5:	sub    eax,ecx
  4206e7:	jmp    0x4209da
  4206ec:	push   0xc
  4206ee:	push   DWORD PTR [ebp-0x4]
  4206f1:	lea    eax,[ebp-0x4c]
  4206f4:	push   eax
  4206f5:	call   0x41fc51
  4206fa:	mov    eax,0xf89c8585
  4206ff:	mov    DWORD PTR [ebp-0x2c],eax
  420702:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  420709:	mov    DWORD PTR [ebp-0x34],0xf89c8583
  420710:	mov    DWORD PTR [ebp-0x38],0xf89c8582
  420717:	lea    ecx,[ebp-0x2c]
  42071a:	mov    DWORD PTR [ebp-0xc],ecx
  42071d:	lea    ecx,[ebp-0x30]
  420720:	mov    DWORD PTR [ebp-0x10],ecx
  420723:	lea    ecx,[ebp-0x34]
  420726:	mov    DWORD PTR [ebp+0xc],ecx
  420729:	lea    ecx,[ebp-0x38]
  42072c:	mov    DWORD PTR [ebp-0x14],ecx
  42072f:	mov    ecx,DWORD PTR [ebp+0x8]
  420732:	xor    ecx,edi
  420734:	add    ecx,ebx
  420736:	mov    DWORD PTR [ebp-0x18],ecx
  420739:	jmp    0x420935
  42073e:	cmp    eax,0xf89c8583
  420743:	je     0x420947
  420749:	mov    ecx,DWORD PTR [ebp-0x8]
  42074c:	xor    ecx,edi
  42074e:	mov    esi,eax
  420750:	add    ecx,ebx
  420752:	mov    DWORD PTR [ebp+0x18],ecx
  420755:	mov    eax,DWORD PTR [ebp-0x18]
  420758:	xor    esi,edi
  42075a:	lea    eax,[eax+esi*1+0x3272e6]
  420761:	mov    DWORD PTR [ebp-0x18],eax
  420764:	mov    eax,DWORD PTR [ebp-0x8]
  420767:	mov    ecx,DWORD PTR [ebp-0x18]
  42076a:	xor    eax,edi
  42076c:	add    eax,ebx
  42076e:	cmp    ecx,eax
  420770:	jne    0x420785
  420772:	mov    eax,DWORD PTR [ebp+0x8]
  420775:	xor    eax,edi
  420777:	add    eax,ebx
  420779:	push   eax
  42077a:	push   0xc
  42077c:	lea    eax,[ebp-0x4c]
  42077f:	push   eax
  420780:	call   0x420237
  420785:	mov    eax,DWORD PTR [ebp-0xc]
  420788:	mov    eax,DWORD PTR [eax]
  42078a:	xor    eax,edi
  42078c:	mov    al,BYTE PTR [ebp+eax*1+0x32729a]
  420793:	mov    ecx,DWORD PTR [ebp+0x8]
  420796:	xor    ecx,edi
  420798:	movzx  eax,al
  42079b:	add    ecx,ebx
  42079d:	cmp    eax,ecx
  42079f:	je     0x42091d
  4207a5:	mov    eax,DWORD PTR [ebp-0x10]
  4207a8:	mov    eax,DWORD PTR [eax]
  4207aa:	xor    eax,edi
  4207ac:	mov    al,BYTE PTR [ebp+eax*1+0x32729a]
  4207b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4207b6:	xor    ecx,edi
  4207b8:	movzx  eax,al
  4207bb:	add    ecx,ebx
  4207bd:	cmp    eax,ecx
  4207bf:	je     0x42091d
  4207c5:	mov    eax,DWORD PTR [ebp+0xc]
  4207c8:	mov    eax,DWORD PTR [eax]
  4207ca:	xor    eax,edi
  4207cc:	mov    al,BYTE PTR [ebp+eax*1+0x32729a]
  4207d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4207d6:	xor    ecx,edi
  4207d8:	movzx  eax,al
  4207db:	add    ecx,ebx
  4207dd:	cmp    eax,ecx
  4207df:	je     0x42091d
  4207e5:	mov    eax,DWORD PTR [ebp-0x14]
  4207e8:	mov    eax,DWORD PTR [eax]
  4207ea:	xor    eax,edi
  4207ec:	mov    al,BYTE PTR [ebp+eax*1+0x32729a]
  4207f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4207f6:	xor    ecx,edi
  4207f8:	movzx  eax,al
  4207fb:	add    ecx,ebx
  4207fd:	cmp    eax,ecx
  4207ff:	je     0x42091d
  420805:	mov    eax,DWORD PTR [ebp-0x10]
  420808:	mov    eax,DWORD PTR [eax]
  42080a:	xor    eax,edi
  42080c:	mov    al,BYTE PTR [ebp+eax*1+0x32729a]
  420813:	mov    ecx,DWORD PTR [ebp-0xc]
  420816:	mov    ecx,DWORD PTR [ecx]
  420818:	xor    ecx,edi
  42081a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  420821:	xor    al,cl
  420823:	mov    ecx,DWORD PTR [ebp+0xc]
  420826:	mov    ecx,DWORD PTR [ecx]
  420828:	xor    ecx,edi
  42082a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  420831:	or     al,cl
  420833:	mov    ecx,DWORD PTR [ebp-0xc]
  420836:	mov    ecx,DWORD PTR [ecx]
  420838:	xor    ecx,edi
  42083a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729e]
  420841:	cmp    cl,al
  420843:	jne    0x42091d
  420849:	mov    eax,DWORD PTR [ebp+0xc]
  42084c:	mov    eax,DWORD PTR [eax]
  42084e:	xor    eax,edi
  420850:	mov    al,BYTE PTR [ebp+eax*1+0x32729a]
  420857:	mov    ecx,DWORD PTR [ebp-0x10]
  42085a:	mov    ecx,DWORD PTR [ecx]
  42085c:	xor    ecx,edi
  42085e:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  420865:	xor    al,cl
  420867:	mov    ecx,DWORD PTR [ebp-0x14]
  42086a:	mov    ecx,DWORD PTR [ecx]
  42086c:	xor    ecx,edi
  42086e:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  420875:	or     al,cl
  420877:	mov    ecx,DWORD PTR [ebp-0x10]
  42087a:	mov    ecx,DWORD PTR [ecx]
  42087c:	xor    ecx,edi
  42087e:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729e]
  420885:	cmp    cl,al
  420887:	jne    0x42091d
  42088d:	mov    eax,DWORD PTR [ebp-0x14]
  420890:	mov    eax,DWORD PTR [eax]
  420892:	xor    eax,edi
  420894:	mov    al,BYTE PTR [ebp+eax*1+0x32729a]
  42089b:	mov    ecx,DWORD PTR [ebp+0xc]
  42089e:	mov    ecx,DWORD PTR [ecx]
  4208a0:	xor    ecx,edi
  4208a2:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4208a9:	xor    al,cl
  4208ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4208ae:	mov    ecx,DWORD PTR [ecx]
  4208b0:	xor    ecx,edi
  4208b2:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4208b9:	or     al,cl
  4208bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4208be:	mov    ecx,DWORD PTR [ecx]
  4208c0:	xor    ecx,edi
  4208c2:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729e]
  4208c9:	cmp    cl,al
  4208cb:	jne    0x42091d
  4208cd:	mov    eax,DWORD PTR [ebp-0x14]
  4208d0:	mov    eax,DWORD PTR [eax]
  4208d2:	xor    eax,edi
  4208d4:	mov    al,BYTE PTR [ebp+eax*1+0x32729a]
  4208db:	mov    ecx,DWORD PTR [ebp-0xc]
  4208de:	mov    ecx,DWORD PTR [ecx]
  4208e0:	xor    ecx,edi
  4208e2:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4208e9:	xor    al,cl
  4208eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4208ee:	mov    ecx,DWORD PTR [ecx]
  4208f0:	xor    ecx,edi
  4208f2:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4208f9:	or     al,cl
  4208fb:	mov    ecx,DWORD PTR [ebp-0x14]
  4208fe:	mov    ecx,DWORD PTR [ecx]
  420900:	xor    ecx,edi
  420902:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729e]
  420909:	cmp    cl,al
  42090b:	jne    0x42091d
  42090d:	lea    eax,[ebp-0x4c]
  420910:	push   eax
  420911:	call   0x4203d8
  420916:	mov    ecx,DWORD PTR [ebp-0x44]
  420919:	cmp    eax,ecx
  42091b:	je     0x420927
  42091d:	mov    eax,DWORD PTR [ebp+0x8]
  420920:	xor    eax,edi
  420922:	add    eax,ebx
  420924:	mov    DWORD PTR [ebp+0x18],eax
  420927:	mov    eax,DWORD PTR [ebp-0x8]
  42092a:	xor    eax,edi
  42092c:	lea    eax,[eax+esi*1+0x3272e6]
  420933:	xor    eax,edi
  420935:	mov    ecx,DWORD PTR [ebp+0x8]
  420938:	mov    edx,DWORD PTR [ebp+0x18]
  42093b:	xor    ecx,edi
  42093d:	add    ecx,ebx
  42093f:	cmp    edx,ecx
  420941:	je     0x42073e
  420947:	mov    eax,DWORD PTR [ebp+0x8]
  42094a:	mov    ecx,DWORD PTR [ebp+0x18]
  42094d:	xor    eax,edi
  42094f:	add    eax,ebx
  420951:	cmp    ecx,eax
  420953:	jne    0x420966
  420955:	mov    eax,DWORD PTR [ebp-0x8]
  420958:	mov    ecx,DWORD PTR [ebp+0x1c]
  42095b:	xor    eax,edi
  42095d:	lea    eax,[eax+ecx*1+0x3272e6]
  420964:	jmp    0x4209dd
  420966:	push   0x18
  420968:	push   DWORD PTR [ebp-0x4]
  42096b:	lea    eax,[ebp-0x64]
  42096e:	push   eax
  42096f:	call   0x41fc51
  420974:	mov    eax,DWORD PTR [ebp+0x8]
  420977:	mov    ecx,DWORD PTR [ebp-0x18]
  42097a:	xor    eax,edi
  42097c:	add    eax,ebx
  42097e:	cmp    eax,ecx
  420980:	je     0x420995
  420982:	mov    eax,DWORD PTR [ebp+0x8]
  420985:	xor    eax,edi
  420987:	add    eax,ebx
  420989:	push   eax
  42098a:	push   0x18
  42098c:	lea    eax,[ebp-0x64]
  42098f:	push   eax
  420990:	call   0x420237
  420995:	mov    eax,DWORD PTR [ebp-0x4]
  420998:	add    eax,0x18
  42099b:	mov    DWORD PTR [ebp+0x18],eax
  42099e:	push   DWORD PTR [ebp-0x50]
  4209a1:	push   DWORD PTR [ebp+0x18]
  4209a4:	mov    eax,DWORD PTR [ebp-0x54]
  4209a7:	add    eax,DWORD PTR [ebp-0x20]
  4209aa:	push   eax
  4209ab:	call   0x41fc51
  4209b0:	mov    eax,DWORD PTR [ebp+0x8]
  4209b3:	mov    ecx,DWORD PTR [ebp-0x18]
  4209b6:	xor    eax,edi
  4209b8:	add    eax,ebx
  4209ba:	cmp    eax,ecx
  4209bc:	je     0x4209cf
  4209be:	push   0x0
  4209c0:	push   DWORD PTR [ebp-0x50]
  4209c3:	mov    eax,DWORD PTR [ebp-0x54]
  4209c6:	add    eax,DWORD PTR [ebp-0x20]
  4209c9:	push   eax
  4209ca:	call   0x420237
  4209cf:	mov    eax,DWORD PTR [ebp-0x24]
  4209d2:	mov    ecx,DWORD PTR [ebp-0x50]
  4209d5:	add    DWORD PTR [eax],ecx
  4209d7:	mov    eax,DWORD PTR [ebp-0x50]
  4209da:	add    eax,DWORD PTR [ebp+0x1c]
  4209dd:	mov    DWORD PTR [ebp+0x1c],eax
  4209e0:	mov    eax,DWORD PTR [ebp-0x8]
  4209e3:	mov    ecx,DWORD PTR [ebp+0x1c]
  4209e6:	xor    eax,edi
  4209e8:	add    eax,ebx
  4209ea:	imul   eax,ecx
  4209ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4209f0:	mov    edx,DWORD PTR [ebp-0x28]
  4209f3:	xor    ecx,edi
  4209f5:	lea    ecx,[ecx+edx*1+0x3272e6]
  4209fc:	cmp    eax,ecx
  4209fe:	jb     0x42065c
  420a04:	mov    esi,DWORD PTR [ebp+0x14]
  420a07:	mov    eax,DWORD PTR [ebp-0x20]
  420a0a:	mov    DWORD PTR [esi],eax
  420a0c:	jmp    0x420a53
  420a0e:	mov    ecx,DWORD PTR [ebp+0x8]
  420a11:	mov    edx,DWORD PTR [ebp+0xc]
  420a14:	xor    ecx,edi
  420a16:	xor    edx,edi
  420a18:	add    ecx,ebx
  420a1a:	add    edx,ebx
  420a1c:	cmp    ecx,edx
  420a1e:	jne    0x420a32
  420a20:	mov    eax,ds:0x7f642d1e
  420a25:	imul   eax,eax,0x9f15fcef
  420a2b:	mov    ds:0x7f642d1e,eax
  420a30:	jmp    0x420a53
  420a32:	mov    ecx,DWORD PTR [ebp+0x8]
  420a35:	xor    ecx,edi
  420a37:	add    ecx,ebx
  420a39:	cmp    eax,ecx
  420a3b:	je     0x420a49
  420a3d:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420a47:	jmp    0x420a53
  420a49:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  420a53:	pop    edi
  420a54:	pop    esi
  420a55:	pop    ebx
  420a56:	leave  
  420a57:	ret    0x18
  420a5a:	push   ebp
  420a5b:	mov    ebp,esp
  420a5d:	and    esp,0xfffffff8
  420a60:	mov    eax,DWORD PTR [ebp+0x20]
  420a63:	sub    esp,0x14
  420a66:	push   ebx
  420a67:	mov    ebx,DWORD PTR [ebp+0x14]
  420a6a:	push   esi
  420a6b:	push   edi
  420a6c:	cmp    eax,0xf89c8585
  420a71:	jne    0x420a7d
  420a73:	push   0xf89c8584
  420a78:	jmp    0x420baf
  420a7d:	mov    eax,DWORD PTR [ebp+0x20]
  420a80:	cmp    eax,0xf89c8584
  420a85:	jne    0x420a91
  420a87:	push   0xf89c8583
  420a8c:	jmp    0x420baf
  420a91:	mov    eax,DWORD PTR [ebp+0x20]
  420a94:	cmp    eax,0xf89c8583
  420a99:	jne    0x420aa5
  420a9b:	push   0xf89c8582
  420aa0:	jmp    0x420baf
  420aa5:	mov    eax,DWORD PTR [ebp+0x20]
  420aa8:	cmp    eax,0xf89c8582
  420aad:	jne    0x420ab9
  420aaf:	push   0xf89c8581
  420ab4:	jmp    0x420baf
  420ab9:	mov    ecx,DWORD PTR [ebp+0x20]
  420abc:	mov    eax,0xf89c85be
  420ac1:	cmp    ecx,eax
  420ac3:	jne    0x420b7f
  420ac9:	mov    eax,DWORD PTR [ebp+0x10]
  420acc:	mov    DWORD PTR [esp+0xc],eax
  420ad0:	mov    eax,DWORD PTR [ebp+0x18]
  420ad3:	mov    DWORD PTR [esp+0x14],eax
  420ad7:	mov    eax,DWORD PTR [ebp+0xc]
  420ada:	mov    DWORD PTR [esp+0x18],eax
  420ade:	mov    eax,DWORD PTR [ebp+0x8]
  420ae1:	mov    DWORD PTR [esp+0x10],eax
  420ae5:	mov    eax,DWORD PTR [esp+0x10]
  420ae9:	mov    ecx,DWORD PTR [esp+0x14]
  420aed:	mov    edi,0x751089f
  420af2:	xor    eax,edi
  420af4:	mov    esi,0x3272e6
  420af9:	add    eax,esi
  420afb:	mov    DWORD PTR [ecx],eax
  420afd:	mov    eax,DWORD PTR [esp+0xc]
  420b01:	mov    eax,DWORD PTR [eax+0x194]
  420b07:	mov    ecx,DWORD PTR [eax]
  420b09:	mov    eax,DWORD PTR [esp+0xc]
  420b0d:	mov    eax,DWORD PTR [eax+0x194]
  420b13:	mov    eax,DWORD PTR [eax]
  420b15:	add    eax,DWORD PTR [ecx+0x3c]
  420b18:	mov    ecx,DWORD PTR [esp+0xc]
  420b1c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  420b22:	mov    ecx,DWORD PTR [ecx+0x14]
  420b25:	push   0x4
  420b27:	push   0x3000
  420b2c:	push   DWORD PTR [eax+0x50]
  420b2f:	push   0x0
  420b31:	call   ecx
  420b33:	mov    DWORD PTR [ebx],eax
  420b35:	mov    eax,DWORD PTR [esp+0x10]
  420b39:	push   DWORD PTR [esp+0xc]
  420b3d:	xor    eax,edi
  420b3f:	add    eax,esi
  420b41:	mov    DWORD PTR [esp+0x20],eax
  420b45:	lea    eax,[esp+0x20]
  420b49:	push   eax
  420b4a:	push   ebx
  420b4b:	push   DWORD PTR [esp+0x20]
  420b4f:	push   DWORD PTR [esp+0x28]
  420b53:	push   DWORD PTR [esp+0x24]
  420b57:	call   0x42051c
  420b5c:	mov    eax,DWORD PTR [esp+0x10]
  420b60:	mov    ecx,DWORD PTR [ebx]
  420b62:	xor    eax,edi
  420b64:	add    eax,esi
  420b66:	cmp    ecx,eax
  420b68:	je     0x420bc6
  420b6a:	mov    eax,DWORD PTR [esp+0x18]
  420b6e:	mov    ecx,DWORD PTR [esp+0x14]
  420b72:	xor    eax,edi
  420b74:	add    eax,esi
  420b76:	imul   eax,DWORD PTR [esp+0x1c]
  420b7b:	mov    DWORD PTR [ecx],eax
  420b7d:	jmp    0x420bc6
  420b7f:	mov    ecx,DWORD PTR [ebp+0x20]
  420b82:	cmp    ecx,0xf89c8581
  420b88:	jne    0x420b91
  420b8a:	push   0xf89c8580
  420b8f:	jmp    0x420baf
  420b91:	mov    ecx,DWORD PTR [ebp+0x20]
  420b94:	cmp    ecx,0xf89c8580
  420b9a:	jne    0x420ba3
  420b9c:	push   0xf89c85bf
  420ba1:	jmp    0x420baf
  420ba3:	mov    ecx,DWORD PTR [ebp+0x20]
  420ba6:	cmp    ecx,0xf89c85bf
  420bac:	jne    0x420bc6
  420bae:	push   eax
  420baf:	push   DWORD PTR [ebp+0x1c]
  420bb2:	push   DWORD PTR [ebp+0x18]
  420bb5:	push   ebx
  420bb6:	push   DWORD PTR [ebp+0x10]
  420bb9:	push   DWORD PTR [ebp+0xc]
  420bbc:	push   DWORD PTR [ebp+0x8]
  420bbf:	call   0x420a5a
  420bc4:	mov    DWORD PTR [ebx],eax
  420bc6:	mov    eax,DWORD PTR [ebx]
  420bc8:	pop    edi
  420bc9:	pop    esi
  420bca:	pop    ebx
  420bcb:	mov    esp,ebp
  420bcd:	pop    ebp
  420bce:	ret    0x1c
  420bd1:	push   ebp
  420bd2:	mov    ebp,esp
  420bd4:	sub    esp,0xc
  420bd7:	mov    eax,0xf89c8585
  420bdc:	mov    DWORD PTR [ebp-0x8],eax
  420bdf:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  420be6:	mov    ecx,DWORD PTR [ebp-0x8]
  420be9:	xor    ecx,0x751089f
  420bef:	add    ecx,0x3272e6
  420bf5:	mov    DWORD PTR [ebp-0x4],ecx
  420bf8:	mov    ecx,DWORD PTR [ebp+0xc]
  420bfb:	push   eax
  420bfc:	mov    DWORD PTR [ebp+0xc],ecx
  420bff:	push   DWORD PTR [ebp+0xc]
  420c02:	lea    eax,[ebp-0x4]
  420c05:	push   DWORD PTR [ebp+0x8]
  420c08:	push   eax
  420c09:	push   DWORD PTR [ebp+0xc]
  420c0c:	push   DWORD PTR [ebp-0xc]
  420c0f:	push   DWORD PTR [ebp-0x8]
  420c12:	call   0x420a5a
  420c17:	mov    DWORD PTR [ebp-0x4],eax
  420c1a:	mov    eax,DWORD PTR [ebp-0x4]
  420c1d:	leave  
  420c1e:	ret    0x8
	...
