
f66773a3ff59910d2689d704b7f5a8a4cfd29d4f8cd48bcb4de363f9fd1d129e.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	mov    es,WORD PTR [ecx-0x72]
  41107d:	in     eax,dx
  41107e:	es std 
  411080:	inc    esp
  411081:	aam    0xc7
  411083:	pop    esp
  411084:	push   ecx
  411085:	popf   
  411086:	loopne 0x41109e
  411088:	and    esp,DWORD PTR [ebp+0x79]
  41108b:	leave  
  41108c:	sti    
  41108d:	(bad)  
  41108e:	test   BYTE PTR [edx*2+0x2423b136],0x6d
  411096:	mov    edi,0x8aac987d
  41109b:	add    eax,0x8622d191
  4110a0:	cmc    
  4110a1:	push   0x4af7f3e8
  4110a6:	jle    0x4110e4
  4110a8:	pmuludq mm0,mm0
  4110ab:	lods   eax,DWORD PTR ds:[esi]
  4110ac:	add    edx,DWORD PTR [ebx+0x2b]
  4110af:	fisub  WORD PTR [edi]
  4110b1:	(bad)  
  4110b2:	pusha  
  4110b3:	inc    eax
  4110b4:	clc    
  4110b5:	fwait
  4110b6:	pop    edx
  4110b7:	enter  0x7a47,0xc3
  4110bb:	daa    
  4110bc:	sub    eax,0x50c8dd9d
  4110c1:	js     0x4110c3
  4110c3:	popa   
  4110c4:	xchg   esp,eax
  4110c5:	mov    ebx,0x531ad74b
  4110ca:	bnd jo 0x4110d5
  4110cd:	dec    eax
  4110ce:	push   ecx
  4110cf:	adc    esp,DWORD PTR [esi]
  4110d1:	(bad)  
  4110d2:	cmovbe eax,DWORD PTR [ecx-0x72205b57]
  4110d9:	mov    WORD PTR [ebx],ds
  4110db:	retf   
  4110dc:	sti    
  4110dd:	fstp   QWORD PTR [edx-0x37]
  4110e0:	mov    DWORD PTR [edi+ebp*8],ebx
  4110e3:	pushf  
  4110e4:	push   0xf
  4110e6:	jg     0x41106b
  4110e8:	ss jne 0x411090
  4110eb:	fmul   DWORD PTR ds:[ebp+0x7]
  4110ef:	dec    esp
  4110f0:	(bad)
  4110f3:	(bad)  
  4110f4:	(bad)  
  4110f6:	(bad)  
  4110f7:	mov    ?,eax
  4110f9:	sub    al,BYTE PTR [eax+0x43]
  4110fc:	and    DWORD PTR [ebp+0x144b809],edi
  411102:	fdivrp st(7),st
  411104:	imul   eax,DWORD PTR [ebx+0x72]
  411108:	js     0x411125
  41110a:	dec    esp
  41110b:	int    0x9c
  41110d:	mov    edx,0xaf338019
  411112:	inc    eax
  411113:	aad    0xad
  411115:	dec    edi
  411116:	lds    esi,FWORD PTR [edx+ebx*8-0x121d885a]
  41111d:	mov    dl,0x84
  41111f:	(bad)  
  411120:	inc    esi
  411121:	loope  0x411154
  411123:	mov    esp,0xb6ecd58e
  411128:	je     0x41117e
  41112a:	(bad)  
  41112b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41112c:	jns    0x41117f
  41112e:	call   0x6e636b49
  411133:	lods   al,BYTE PTR ds:[esi]
  411134:	test   al,0xac
  411136:	lea    eax,[ecx+0x4b73deff]
  41113c:	adc    eax,0x7353d0a5
  411141:	push   ss
  411142:	ins    BYTE PTR es:[edi],dx
  411143:	sbb    dh,BYTE PTR [edi+0x61a56fe7]
  411149:	call   0x7e93ded5
  41114e:	mov    cl,0x23
  411150:	push   ebp
  411151:	cmc    
  411152:	mov    dl,0x48
  411154:	pop    edi
  411155:	cmp    eax,0x16c9eaa4
  41115a:	sub    BYTE PTR [edi+0x3d811f91],al
  411160:	es stos DWORD PTR es:[edi],eax
  411162:	sub    ah,BYTE PTR [esi+esi*2]
  411165:	pusha  
  411166:	mov    ecx,0x9756c30c
  41116b:	xchg   ecx,eax
  41116c:	lea    esp,[ebp+0x14]
  41116f:	pop    edx
  411170:	cmp    BYTE PTR [ecx],ch
  411172:	fdivr  QWORD PTR [eax]
  411174:	cdq    
  411175:	push   edi
  411176:	cmp    BYTE PTR [eax+0x21],cl
  411179:	sub    al,0x95
  41117b:	popf   
  41117c:	fcomi  st,st(3)
  41117e:	mov    eax,ds:0x3cafbf3d
  411183:	addr16 mov ebp,0xdbe3cb29
  411189:	and    DWORD PTR [esi],0x5c
  41118c:	icebp  
  41118d:	mov    BYTE PTR [edi+0x7c],ch
  411190:	(bad)  
  411191:	gs mov esi,0x8800cabe
  411197:	push   edi
  411198:	cs push esp
  41119a:	pop    ebx
  41119b:	adc    al,0x18
  41119d:	inc    esp
  41119e:	pop    eax
  41119f:	faddp  st(2),st
  4111a1:	imul   ecx,ecx,0xbb124f4a
  4111a7:	sahf   
  4111a8:	sahf   
  4111a9:	push   ds
  4111aa:	sbb    eax,0xe56bbb63
  4111af:	push   ds
  4111b0:	pop    ds
  4111b1:	arpl   WORD PTR [ecx+0xc3e83d4],si
  4111b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111b8:	xor    al,0x74
  4111ba:	std    
  4111bb:	dec    edx
  4111bc:	jne    0x411231
  4111be:	ss test edi,0x6a8f4e9d
  4111c5:	loopne 0x4111a2
  4111c7:	call   0x28d58667
  4111cc:	pop    ebx
  4111cd:	(bad)  [edx-0x1264c471]
  4111d3:	mov    ch,0x18
  4111d5:	(bad)  
  4111d7:	push   edi
  4111d8:	mov    edx,0xcde20a2c
  4111dd:	popf   
  4111de:	mov    BYTE PTR [ecx+0x55],al
  4111e1:	daa    
  4111e2:	lods   eax,DWORD PTR ds:[esi]
  4111e3:	mov    al,ds:0xcdff4385
  4111e8:	stos   DWORD PTR es:[edi],eax
  4111e9:	mov    ebp,0x9523e4f5
  4111ee:	ret    0xdee1
  4111f1:	adc    bl,BYTE PTR [eax]
  4111f3:	inc    edx
  4111f4:	push   edi
  4111f5:	xor    ch,bh
  4111f7:	test   DWORD PTR [ebx+0x4c847b2b],edx
  4111fd:	imul   BYTE PTR [edx]
  4111ff:	dec    esi
  411200:	jns    0x4111d3
  411202:	not    ah
  411204:	or     al,al
  411206:	xor    eax,0x369aeb35
  41120b:	ret    0xa137
  41120e:	loop   0x4111e0
  411210:	and    BYTE PTR ds:0x8292610f,ch
  411216:	pop    edi
  411217:	std    
  411218:	adc    BYTE PTR [edx+0x7],ah
  41121b:	repnz cwde 
  41121d:	cmc    
  41121e:	outs   dx,DWORD PTR ds:[esi]
  41121f:	mov    esi,0x32164568
  411224:	xchg   esp,eax
  411225:	jl     0x411244
  411227:	shl    ch,0xff
  41122a:	pop    ebp
  41122b:	retf   
  41122c:	mov    ebx,0xbbcb70bf
  411231:	nop
  411232:	and    bh,BYTE PTR [ecx]
  411234:	xchg   esp,eax
  411235:	mov    esi,0xe9e0de22
  41123a:	mov    edx,0xb7876bb3
  41123f:	mov    edi,0xa24d79ed
  411244:	or     esi,DWORD PTR [eax+0x75b6a95]
  41124a:	pop    esi
  41124b:	scas   al,BYTE PTR es:[edi]
  41124c:	pop    ss
  41124d:	leave  
  41124e:	fstp   QWORD PTR ds:0x3d246e18
  411254:	sbb    BYTE PTR [ebp+0x50],cl
  411257:	inc    edi
  411258:	pop    ebp
  411259:	dec    ebx
  41125a:	fs out dx,al
  41125c:	jmp    DWORD PTR [ebx]
  41125e:	sbb    dh,al
  411260:	ins    BYTE PTR es:[edi],dx
  411261:	cld    
  411262:	mov    eax,ds:0xe6b6c97a
  411267:	xchg   ecx,edi
  411269:	scas   eax,DWORD PTR es:[edi]
  41126a:	xor    eax,ebx
  41126c:	mov    ebx,0x21593c55
  411271:	pop    ebx
  411272:	rcl    BYTE PTR [ebp+ecx*8+0x7160501c],cl
  411279:	sbb    al,0x94
  41127b:	xor    ch,BYTE PTR [esi+esi*2]
  41127e:	arpl   WORD PTR [ebx*4-0x5592ae7a],sp
  411285:	dec    ecx
  411286:	inc    edi
  411287:	nop
  411288:	jge    0x411266
  41128a:	imul   eax,DWORD PTR [edx],0x17
  41128d:	xchg   esi,eax
  41128e:	adc    DWORD PTR [ebx+eax*4-0x3e92a567],ebx
  411295:	retf   
  411296:	xor    edi,ebp
  411298:	mov    dh,0x1b
  41129a:	fisub  DWORD PTR [edi-0x5d655dc2]
  4112a0:	add    BYTE PTR [esi],bh
  4112a2:	jne    0x41131e
  4112a4:	push   edi
  4112a5:	fidivr WORD PTR [edx-0x14cff343]
  4112ab:	in     eax,dx
  4112ac:	ret    
  4112ad:	mov    DWORD PTR [eax-0x5b],ebp
  4112b0:	loop   0x411281
  4112b2:	nop
  4112b3:	stc    
  4112b4:	xchg   edx,eax
  4112b5:	ficomp DWORD PTR ds:0xaa491905
  4112bb:	mov    ds:0x82aa1c5,eax
  4112c0:	cmc    
  4112c1:	jge    0x4112a0
  4112c3:	push   edi
  4112c4:	adc    esi,DWORD PTR [edx]
  4112c6:	mov    ebp,0xe5a84aa
  4112cb:	stos   BYTE PTR es:[edi],al
  4112cc:	pusha  
  4112cd:	add    eax,0x32e75066
  4112d2:	sub    al,0xeb
  4112d5:	stos   DWORD PTR es:[edi],eax
  4112d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112d7:	and    dh,BYTE PTR [eax-0x1b]
  4112da:	pusha  
  4112db:	out    0x11,eax
  4112dd:	popf   
  4112de:	into   
  4112df:	dec    BYTE PTR [ebx+0x62]
  4112e2:	fsubrp st(5),st
  4112e4:	in     al,0x3b
  4112e6:	cld    
  4112e7:	mov    ebp,0x5645ff2f
  4112ec:	sub    al,0xf4
  4112ee:	scas   al,BYTE PTR es:[edi]
  4112ef:	jmp    0x36b17155
  4112f4:	nop
  4112f5:	les    ebx,FWORD PTR [edi-0x61]
  4112f8:	mov    ah,0x90
  4112fa:	rol    DWORD PTR [edi-0x7eda68d],cl
  411300:	mov    bl,0x52
  411302:	jns    0x4112c1
  411304:	repz ffree st(5)
  411307:	test   eax,0x12d51305
  41130c:	in     eax,0x6b
  41130e:	out    0x19,al
  411310:	inc    edi
  411311:	inc    edi
  411312:	add    DWORD PTR [ebx],ebx
  411314:	test   ah,bh
  411316:	add    eax,0x1ec48888
  41131c:	jmp    0x1aa8b3d9
  411321:	jmp    0x4112d3
  411323:	sti    
  411324:	test   DWORD PTR [ebx],ebx
  411326:	retf   0xdec5
  411329:	ror    ebp,cl
  41132b:	(bad)  
  41132c:	fmul   DWORD PTR [edx-0xd59bdfd]
  411332:	sar    ch,0xc0
  411335:	xchg   ebx,eax
  411336:	jmp    0xf105bed2
  41133b:	jp     0x4113a5
  41133d:	cmp    BYTE PTR [ecx+edx*1],0xd6
  411341:	int3   
  411342:	mov    cl,0x4e
  411344:	cmp    esi,DWORD PTR [ebx+ebp*2]
  411347:	xchg   ebp,eax
  411348:	jecxz  0x411384
  41134a:	push   ecx
  41134b:	dec    BYTE PTR [edx+0x9]
  41134e:	sbb    BYTE PTR [edx-0xe],bl
  411351:	mov    edi,0x6bfe7b48
  411356:	icebp  
  411357:	inc    esi
  411358:	xchg   ecx,eax
  411359:	sahf   
  41135a:	std    
  41135b:	add    BYTE PTR [eax-0x38],bh
  41135e:	icebp  
  41135f:	xchg   ecx,eax
  411360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411361:	test   BYTE PTR [edi],al
  411363:	adc    al,0x68
  411365:	and    bl,al
  411367:	jmp    0x4112ee
  411369:	xchg   ecx,eax
  41136a:	js     0x4112fb
  41136c:	dec    edx
  41136d:	or     ebp,esp
  41136f:	inc    esp
  411370:	(bad)  
  411372:	retf   0x9cdd
  411375:	jle    0x411337
  411377:	mov    ds:0xb5e6687a,eax
  41137c:	retf   0x1962
  41137f:	fst    QWORD PTR [edi-0x11]
  411382:	jmp    0xf03288a7
  411387:	cs mov esp,0x25633331
  41138d:	int3   
  41138e:	(bad)
  411391:	jle    0x411407
  411393:	je     0x4113fd
  411395:	mov    si,0xa2cb
  411399:	cmp    BYTE PTR [edi*4-0x7410bbba],cl
  4113a0:	stos   DWORD PTR es:[edi],eax
  4113a1:	sbb    DWORD PTR [edi+0x1d],ecx
  4113a4:	iret   
  4113a5:	cmc    
  4113a6:	pop    edi
  4113a7:	or     eax,edx
  4113a9:	ss ins DWORD PTR es:[edi],dx
  4113ab:	sbb    eax,0x4445fd1
  4113b0:	push   edx
  4113b1:	int    0x3
  4113b3:	xchg   BYTE PTR [ecx-0x7ca4289d],bh
  4113b9:	push   esp
  4113ba:	push   edi
  4113bb:	test   BYTE PTR [ebp+0x6a],dl
  4113be:	cmp    al,0xe4
  4113c0:	sbb    DWORD PTR [ebx+0x6e4dd53d],edi
  4113c6:	scas   al,BYTE PTR es:[edi]
  4113c7:	ret    
  4113c8:	in     al,dx
  4113c9:	push   es
  4113ca:	mov    edx,es
  4113cc:	jmp    0x83c1:0x1a770b88
  4113d3:	js     0x411449
  4113d5:	sub    al,0xdd
  4113d7:	ror    DWORD PTR [ebp+0x3d1b919c],1
  4113dd:	cmp    BYTE PTR [edi+0x3d],al
  4113e0:	cs clc 
  4113e2:	mov    cl,0xed
  4113e4:	xchg   BYTE PTR [eax],al
  4113e6:	fucomp st(3)
  4113e8:	dec    esp
  4113e9:	and    eax,0x4580c63d
  4113ee:	ret    0x108b
  4113f1:	and    al,0x42
  4113f3:	dec    edx
  4113f4:	push   ss
  4113f5:	push   eax
  4113f6:	or     esp,0xe70e640c
  4113fc:	inc    eax
  4113fd:	add    DWORD PTR [ebp-0x33],esp
  411400:	sub    DWORD PTR [ebx],0x9119a534
  411406:	push   esi
  411407:	shl    DWORD PTR [ebx],0x11
  41140a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41140b:	lahf   
  41140c:	ficom  WORD PTR [ecx]
  41140e:	xor    eax,0x317fff5c
  411413:	mov    edx,0xa3289069
  411418:	jnp    0x4113fe
  41141a:	ror    DWORD PTR [edx+ecx*8],1
  41141d:	and    eax,0x906c3af8
  411422:	std    
  411423:	(bad)  
  411424:	push   ds
  411425:	and    BYTE PTR [esi-0x351d970c],bh
  41142b:	or     DWORD PTR ds:0x234e1e34,ebx
  411431:	dec    edi
  411432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411433:	push   ds
  411434:	push   0x45011553
  411439:	xor    al,0x0
  41143b:	repz xor ebp,DWORD PTR [edi-0x326ab473]
  411442:	ds std 
  411444:	ins    BYTE PTR es:[edi],dx
  411445:	in     eax,0xa5
  411447:	mov    cl,0x22
  411449:	sbb    DWORD PTR [ecx-0x59a6f89b],edx
  41144f:	cmp    BYTE PTR [edi],0x9f
  411452:	call   DWORD PTR [edi]
  411454:	out    0x6b,al
  411456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411457:	bound  esi,QWORD PTR [ebp+0x2a]
  41145a:	and    eax,0xbde79858
  41145f:	xchg   esi,eax
  411460:	out    dx,al
  411461:	add    eax,0xe8e5ab4b
  411466:	dec    eax
  411467:	sti    
  411468:	scas   al,BYTE PTR es:[edi]
  411469:	pop    ebx
  41146a:	fdiv   DWORD PTR [ecx+0x60113904]
  411470:	test   BYTE PTR [edi],bh
  411472:	xchg   ebp,eax
  411473:	sub    dl,BYTE PTR [edx]
  411475:	mov    dh,0x85
  411477:	retf   
  411478:	cmp    DWORD PTR [edi-0x20],ebx
  41147b:	ins    DWORD PTR es:[edi],dx
  41147c:	mov    WORD PTR [esi+ebx*2+0x3b],es
  411480:	ins    BYTE PTR es:[edi],dx
  411481:	retf   0x7f74
  411484:	push   eax
  411485:	mov    ah,BYTE PTR [edi]
  411487:	dec    ecx
  411488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411489:	imul   ecx,esp,0x1d174b52
  41148f:	sub    ah,BYTE PTR [edi-0x59cc4bf9]
  411495:	in     al,0x61
  411497:	or     BYTE PTR [edx+0x827805a],ah
  41149d:	retf   
  41149e:	inc    ebp
  41149f:	add    ecx,esi
  4114a1:	mov    al,ds:0x5312d1dd
  4114a6:	jbe    0x4114b3
  4114a8:	xor    dl,BYTE PTR [eax+esi*4-0x26e3148]
  4114af:	loop   0x4114e0
  4114b1:	cmp    ch,0x3b
  4114b4:	imul   esi,DWORD PTR [eax-0x77],0x3331ce18
  4114bb:	xchg   ecx,eax
  4114bc:	sar    bl,0xf6
  4114bf:	add    eax,esi
  4114c1:	xchg   edi,eax
  4114c2:	loope  0x4114b7
  4114c4:	jno    0x411530
  4114c6:	rcr    ebx,1
  4114c8:	dec    ebp
  4114c9:	inc    ebx
  4114ca:	push   edx
  4114cb:	clc    
  4114cc:	xchg   ebx,eax
  4114cd:	xlat   BYTE PTR ds:[ebx]
  4114ce:	cmp    ah,al
  4114d0:	jl     0x411528
  4114d2:	cmp    bh,BYTE PTR [ebx+0x714c2300]
  4114d8:	cmc    
  4114d9:	ins    DWORD PTR es:[edi],dx
  4114da:	shl    DWORD PTR [edi-0x41],0x78
  4114de:	fstp   DWORD PTR [ebx-0x37dded1a]
  4114e4:	hlt    
  4114e5:	dec    edi
  4114e6:	fs dec ebx
  4114e8:	inc    ebp
  4114e9:	in     al,0x6
  4114eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114ec:	ja     0x41146f
  4114ee:	cmp    cl,dl
  4114f0:	jge    0x411481
  4114f2:	sbb    esp,DWORD PTR [eax]
  4114f4:	pop    ebx
  4114f5:	dec    eax
  4114f6:	xchg   edi,eax
  4114f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114f8:	push   ebx
  4114f9:	cmp    al,0xde
  4114fb:	in     al,dx
  4114fc:	out    0x73,eax
  4114fe:	bound  edi,QWORD PTR [eax+0x2a]
  411501:	int    0xbe
  411503:	cmp    DWORD PTR ds:[edx-0x255a4c9c],edx
  41150a:	mov    BYTE PTR [edi-0x2c04b3cd],cl
  411510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411511:	stos   BYTE PTR es:[edi],al
  411512:	cmp    DWORD PTR [ecx-0x40],edx
  411515:	fwait
  411516:	(bad)  
  411517:	in     eax,dx
  411518:	mov    ebp,DWORD PTR [ebx]
  41151a:	sbb    al,0x99
  41151c:	out    dx,eax
  41151d:	pop    es
  41151e:	inc    eax
  41151f:	sti    
  411520:	dec    ebx
  411521:	scas   eax,DWORD PTR es:[edi]
  411522:	mov    bh,0x43
  411524:	rcr    BYTE PTR [edx-0x5a],1
  411527:	aaa    
  411528:	fcom   QWORD PTR [ebp+0x4]
  41152b:	or     eax,0x1b279ee4
  411530:	sbb    BYTE PTR [ebp+0x639dc093],bl
  411536:	les    sp,DWORD PTR [esi]
  411539:	jl     0x411589
  41153b:	bnd jp 0x4115a2
  41153e:	fcmovb st,st(2)
  411540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411541:	fwait
  411542:	cmc    
  411543:	mov    bl,0x7f
  411545:	dec    eax
  411546:	pop    esp
  411547:	mov    ds:0x50144fd2,eax
  41154c:	and    eax,0xc2ac7fbb
  411551:	cmp    BYTE PTR [edi-0x1de34b39],0x37
  411558:	xor    al,0x95
  41155a:	std    
  41155b:	lods   al,BYTE PTR ds:[esi]
  41155c:	nop
  41155d:	xor    dh,BYTE PTR [esp+ecx*2]
  411560:	les    ebx,FWORD PTR [ebp+0x7b]
  411563:	imul   esi,DWORD PTR [ebp-0x72],0xfffffff3
  411567:	jns    0x4115b9
  411569:	outs   dx,DWORD PTR ds:[esi]
  41156a:	in     al,dx
  41156b:	xchg   ebx,eax
  41156c:	push   esp
  41156d:	(bad)  
  41156e:	cmc    
  41156f:	aam    0xe8
  411571:	inc    bl
  411573:	mov    ds:0x187a45bc,al
  411578:	sahf   
  411579:	jo     0x4115db
  41157b:	push   ds
  41157c:	pop    esp
  41157d:	cmp    al,0x84
  41157f:	jo     0x411569
  411581:	in     eax,0xf7
  411583:	cmc    
  411584:	cwde   
  411585:	xchg   edi,eax
  411586:	sbb    eax,0xf735a943
  41158b:	je     0x41152a
  41158d:	adc    dl,bh
  41158f:	cmp    esi,DWORD PTR [esi]
  411591:	in     eax,0x91
  411593:	dec    esi
  411594:	fsubr  st(6),st
  411596:	sub    al,BYTE PTR [edx+ebx*4-0x6707ae22]
  41159d:	jae    0x411581
  41159f:	shr    eax,0x3f
  4115a2:	and    bl,BYTE PTR [edx]
  4115a4:	jb     0x4115f0
  4115a6:	popf   
  4115a7:	mov    ecx,0x6f2e3e60
  4115ac:	and    eax,0x422b53cc
  4115b1:	sbb    eax,0x367456be
  4115b6:	pop    esi
  4115b7:	data16 data16 xchg BYTE PTR [esi-0xc],bh
  4115bc:	xchg   edi,eax
  4115bd:	das    
  4115be:	mov    al,0x4d
  4115c0:	inc    BYTE PTR [edx-0x13]
  4115c3:	pop    ds
  4115c4:	xchg   ecx,eax
  4115c5:	scas   al,BYTE PTR es:[edi]
  4115c6:	dec    ebp
  4115c7:	mov    ds,WORD PTR [ebx+0x2]
  4115ca:	ja     0x41161c
  4115cc:	pop    eax
  4115cd:	jne    0x41160b
  4115cf:	sbb    dl,BYTE PTR [ebp+0x52]
  4115d2:	fdiv   QWORD PTR [eax]
  4115d4:	push   0x404ac72e
  4115d9:	(bad)  
  4115da:	fdivr  QWORD PTR [ebx+ebx*8]
  4115dd:	es jmp 0x86a6:0xdfb75508
  4115e5:	out    dx,al
  4115e6:	jb     0x4115e0
  4115e8:	loope  0x4115c6
  4115ea:	xor    BYTE PTR [eax],ch
  4115ec:	fisttp WORD PTR [ecx-0x4854ed6e]
  4115f2:	hlt    
  4115f3:	sub    dl,0x8a
  4115f6:	addr16 mov edi,0xcf136cfa
  4115fc:	push   es
  4115fd:	(bad)  
  4115ff:	push   ecx
  411600:	mov    ds:0x8603b6dc,eax
  411605:	in     eax,dx
  411606:	adc    esp,ebx
  411608:	inc    eax
  411609:	mov    ds:0xb212372a,eax
  41160e:	inc    ecx
  41160f:	jg     0x41164d
  411611:	cwde   
  411612:	cmp    eax,DWORD PTR [esi]
  411614:	cmp    ecx,esi
  411616:	xor    DWORD PTR [edi],edx
  411618:	push   ebp
  411619:	push   eax
  41161a:	or     DWORD PTR [ebx-0xceaf3f8],ecx
  411620:	sbb    BYTE PTR [edx-0x11171507],bl
  411626:	aad    0x4a
  411628:	push   eax
  411629:	pop    esi
  41162a:	out    dx,eax
  41162b:	sbb    eax,0x14f0a49f
  411630:	rcl    ecx,cl
  411632:	lds    ecx,FWORD PTR [eax+0x2a]
  411635:	sti    
  411636:	jae    0x411679
  411638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411639:	push   edx
  41163a:	mov    ebx,0xc69a861
  41163f:	inc    ebp
  411640:	or     edi,DWORD PTR [esi-0x1f0247f1]
  411646:	dec    ebp
  411647:	cwde   
  411648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411649:	xlat   BYTE PTR ds:[ebx]
  41164a:	repz dec esp
  41164c:	repnz retf 0x544c
  411650:	icebp  
  411651:	mov    WORD PTR [edx-0x2d],cs
  411654:	shl    DWORD PTR [edx-0x51],1
  411657:	ret    
  411658:	pop    es
  411659:	jmp    0x4116c4
  41165b:	arpl   WORD PTR [esi+0x159aa9b6],dx
  411661:	add    bh,ah
  411663:	retf   
  411664:	ds push ebp
  411666:	call   0x85b52001
  41166b:	rol    DWORD PTR [ecx+0x3f4ac13f],1
  411671:	sti    
  411672:	pop    edx
  411673:	jno    0x4116e3
  411675:	inc    esp
  411676:	mov    edx,0x5bf226de
  41167b:	outs   dx,DWORD PTR ds:[esi]
  41167c:	daa    
  41167d:	mov    DWORD PTR ds:[edi],edi
  411680:	icebp  
  411681:	jae    0x4116c5
  411683:	aad    0xcd
  411685:	pushf  
  411686:	cwde   
  411687:	adc    ah,BYTE PTR [esi]
  411689:	sub    esp,DWORD PTR [esi-0x1393e886]
  41168f:	inc    ebp
  411690:	cmp    DWORD PTR [ecx+0x78],esi
  411693:	mov    eax,0xaa0e8dfc
  411698:	aad    0xc4
  41169a:	sbb    ah,bh
  41169c:	sub    al,0x8f
  41169e:	inc    esp
  41169f:	pop    eax
  4116a0:	pop    eax
  4116a1:	and    cl,dl
  4116a3:	dec    edx
  4116a4:	jecxz  0x41170a
  4116a6:	and    eax,0x4caf2347
  4116ab:	or     edi,DWORD PTR [edx]
  4116ad:	cmp    BYTE PTR [esi-0x40],al
  4116b0:	cli    
  4116b1:	(bad)  
  4116b2:	pop    ds
  4116b3:	dec    edi
  4116b4:	xchg   ebp,eax
  4116b5:	push   ecx
  4116b6:	ds cdq 
  4116b8:	sbb    eax,0x26041cba
  4116bd:	and    al,0xcf
  4116bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c0:	mov    ah,0xe6
  4116c2:	push   ss
  4116c3:	pop    ecx
  4116c4:	imul   esi,DWORD PTR [edx-0x1b5cf59e],0x7a
  4116cb:	adc    cl,ah
  4116cd:	dec    ebp
  4116ce:	loope  0x411699
  4116d0:	push   edx
  4116d1:	xchg   edi,eax
  4116d2:	int    0x76
  4116d4:	inc    ecx
  4116d5:	push   esi
  4116d6:	aaa    
  4116d7:	mov    DWORD PTR [eax+0x59],ecx
  4116da:	jg     0x411730
  4116dc:	mov    eax,0x48a68df1
  4116e1:	sub    DWORD PTR ds:[ecx],ebp
  4116e4:	test   DWORD PTR [eax+0x36],ebp
  4116e7:	jb     0x411752
  4116e9:	dec    edx
  4116ea:	xchg   ebx,eax
  4116eb:	arpl   WORD PTR [eax+0x21],di
  4116ee:	fs loop 0x411727
  4116f1:	dec    eax
  4116f2:	lahf   
  4116f3:	aam    0x25
  4116f5:	mov    ds,WORD PTR [ecx]
  4116f7:	inc    edx
  4116f8:	or     bl,al
  4116fa:	and    bh,BYTE PTR ds:0xebbee5f5
  411700:	dec    edi
  411701:	out    0xdb,al
  411703:	xor    ecx,edi
  411705:	aam    0x6
  411707:	xor    ah,bh
  411709:	and    bl,BYTE PTR [eax-0x28]
  41170c:	clc    
  41170d:	popf   
  41170e:	push   0x35cab59e
  411713:	sub    al,0x14
  411715:	or     eax,0x1612a32c
  41171a:	xchg   edx,eax
  41171b:	or     al,BYTE PTR [edi+0x48]
  41171e:	push   edi
  41171f:	or     eax,0xb8e3de90
  411724:	icebp  
  411725:	pusha  
  411726:	jmp    FWORD PTR [eax+0x1294d6a]
  41172c:	sub    al,0xab
  41172e:	xchg   edi,eax
  41172f:	daa    
  411730:	cdq    
  411731:	inc    ebx
  411732:	test   al,0x61
  411734:	adc    al,0x5f
  411736:	mov    edx,0x5439156
  41173b:	sbb    BYTE PTR [ecx+0x4e],bl
  41173e:	fcom   QWORD PTR [edx+0x5e]
  411741:	sub    eax,0x80aa8f9d
  411746:	jno    0x411771
  411748:	or     ah,cl
  41174a:	add    dh,BYTE PTR [ebx+edi*1]
  41174d:	aaa    
  41174e:	push   ecx
  41174f:	das    
  411750:	sbb    al,0x3e
  411752:	adc    eax,0xc56cc1bc
  411757:	outs   dx,DWORD PTR ds:[esi]
  411758:	(bad)
  41175b:	scas   al,BYTE PTR es:[edi]
  41175c:	(bad)  
  41175d:	jae    0x411738
  41175f:	cli    
  411760:	add    eax,0x1797589c
  411765:	repnz fldlg2 
  411768:	(bad)
  41176b:	(bad)  
  41176c:	mov    edi,0xffb71385
  411771:	jno    0x41178e
  411773:	sub    eax,DWORD PTR [edi+0x3c]
  411776:	mov    ah,0x28
  411778:	mov    ebp,0x308cc3f0
  41177d:	inc    ecx
  41177e:	add    eax,0xa3b06024
  411783:	stos   DWORD PTR es:[edi],eax
  411784:	mov    WORD PTR [ecx-0x1ad638e0],?
  41178a:	jg     0x411784
  41178c:	or     DWORD PTR [ebx],ebp
  41178e:	lods   al,BYTE PTR ds:[esi]
  41178f:	sbb    DWORD PTR [ecx-0xfb7903b],esi
  411795:	jmp    0xee8b5414
  41179a:	adc    DWORD PTR [esi],edx
  41179c:	jbe    0x411727
  41179e:	pop    edx
  41179f:	test   DWORD PTR [edx-0x7d],eax
  4117a2:	push   edx
  4117a3:	outs   dx,DWORD PTR ds:[esi]
  4117a4:	imul   esp,DWORD PTR [esp+esi*2-0x37b3fff0],0x70dd9977
  4117af:	sbb    DWORD PTR [eax+0x7],edi
  4117b2:	pop    eax
  4117b3:	push   ss
  4117b4:	stos   BYTE PTR es:[edi],al
  4117b5:	sbb    esp,DWORD PTR [ecx-0x6]
  4117b8:	sbb    ecx,0xe7aac92
  4117be:	imul   edx,DWORD PTR [eax-0x795ffdec],0x34
  4117c5:	xor    eax,0x4126dab3
  4117ca:	mov    ebx,ebx
  4117cc:	loopne 0x411750
  4117ce:	xchg   BYTE PTR [ebp-0x3401f457],cl
  4117d4:	neg    BYTE PTR [edx+0x61e90a95]
  4117da:	int    0xea
  4117dc:	pcmpgtd mm2,QWORD PTR [esi]
  4117df:	cmp    BYTE PTR [ecx+0x1a],dl
  4117e2:	bound  ecx,QWORD PTR [esi+0x45]
  4117e5:	push   ecx
  4117e6:	adc    BYTE PTR [edi-0x63a5d5ee],bl
  4117ec:	mul    ebx
  4117ee:	adc    al,0x63
  4117f0:	sbb    ah,dh
  4117f2:	jnp    0x41177a
  4117f4:	sti    
  4117f5:	adc    ecx,ecx
  4117f7:	and    BYTE PTR [ebp-0x27],cl
  4117fa:	test   DWORD PTR [edi+edi*4+0x4c],eax
  4117fe:	cwde   
  4117ff:	(bad)  
  411800:	push   ebp
  411801:	loope  0x411798
  411803:	lahf   
  411804:	and    dl,BYTE PTR [ecx]
  411806:	mov    WORD PTR [ebx+0x1],fs
  411809:	adc    BYTE PTR [ebx-0x66],0x4c
  41180d:	cmp    BYTE PTR [esi-0x14527c1],0x9f
  411814:	mov    ebx,0x95193c4a
  411819:	or     ch,BYTE PTR [esi]
  41181b:	popa   
  41181c:	sub    BYTE PTR ds:0x4700851,ch
  411822:	mov    ecx,0x7df3330c
  411827:	and    edi,ebx
  411829:	cmp    DWORD PTR [ebp+0x3a],eax
  41182c:	push   edx
  41182d:	mov    bl,0x14
  41182f:	mov    ebx,0xb3e938bd
  411834:	jo     0x4117b6
  411836:	fsubr  st,st(0)
  411838:	bound  ebp,QWORD PTR [esi]
  41183a:	fiadd  WORD PTR [ecx+edx*4]
  41183d:	stos   DWORD PTR es:[edi],eax
  41183e:	call   FWORD PTR [eax+0x76180831]
  411844:	mov    eax,0xaddff6ad
  411849:	fwait
  41184a:	in     eax,0xfb
  41184c:	rcl    bh,cl
  41184e:	clc    
  41184f:	dec    eax
  411850:	or     eax,0x4a265046
  411855:	jl     0x4117fc
  411857:	and    eax,0xfaecc672
  41185c:	dec    ecx
  41185d:	fs hlt 
  41185f:	mov    dh,0x1f
  411861:	add    edi,0x8b1a13de
  411867:	std    
  411868:	js     0x41186c
  41186a:	pop    ss
  41186b:	outs   dx,DWORD PTR ds:[esi]
  41186c:	push   DWORD PTR [ecx+0x54ab5044]
  411872:	arpl   WORD PTR [edi+0x4a7570fa],bx
  411878:	or     BYTE PTR [esi-0x7cb58284],dl
  41187e:	data16 add BYTE PTR [esi+0x51890a1b],0x82
  411886:	push   ss
  411887:	(bad)  [esi+0x4c]
  41188a:	loope  0x41190a
  41188c:	outs   dx,BYTE PTR ds:[esi]
  41188d:	ja     0x41186a
  41188f:	and    eax,0xb6543981
  411894:	cli    
  411895:	wbinvd 
  411897:	add    eax,0x4fc708cb
  41189c:	not    BYTE PTR [ecx]
  41189e:	movaps XMMWORD PTR [edx],xmm0
  4118a1:	gs daa 
  4118a3:	cmp    eax,0x9d584848
  4118a8:	push   es
  4118a9:	not    DWORD PTR [eax+esi*8-0x1a]
  4118ad:	std    
  4118ae:	and    DWORD PTR [edi-0x3d],0x3e
  4118b2:	sbb    bh,BYTE PTR cs:[edx-0xb369222]
  4118b9:	popa   
  4118ba:	test   BYTE PTR es:[ebp+edi*4-0x64],ah
  4118bf:	and    ah,BYTE PTR [edi-0x73]
  4118c2:	push   es
  4118c3:	fistp  QWORD PTR [edx+0x8b94cb4]
  4118c9:	mov    ebp,0x263dea93
  4118ce:	and    BYTE PTR [edi+eiz*1-0x77],dh
  4118d2:	scas   al,BYTE PTR es:[edi]
  4118d3:	mov    bl,0x3f
  4118d5:	ss (bad) 
  4118d7:	adc    al,0x97
  4118d9:	xor    al,0x7f
  4118db:	lock outs dx,DWORD PTR ds:[esi]
  4118dd:	call   0xac7e:0x115ecf5d
  4118e4:	pop    ss
  4118e5:	add    dh,0x4
  4118e8:	js     0x4118f2
  4118ea:	stc    
  4118eb:	shl    ah,1
  4118ed:	jg     0x41195c
  4118ef:	sub    al,0x7e
  4118f1:	mov    BYTE PTR [ebp-0x2],ch
  4118f4:	test   eax,0x426df684
  4118f9:	dec    edi
  4118fa:	aaa    
  4118fb:	sub    dl,bl
  4118fd:	stos   DWORD PTR es:[edi],eax
  4118fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118ff:	out    0x30,al
  411901:	jno    0x4118d3
  411903:	pop    esp
  411904:	jb     0x411907
  411906:	add    edi,esp
  411908:	fild   WORD PTR [eax-0x57]
  41190b:	ins    DWORD PTR es:[edi],dx
  41190c:	aam    0xb3
  41190e:	sub    ah,BYTE PTR [edi-0x11]
  411911:	adc    eax,0xe2ecdfe8
  411916:	enter  0x8122,0x9d
  41191a:	ror    DWORD PTR [esi+eiz*8-0x7be3a278],0x40
  411922:	mov    ds,WORD PTR [eax-0x6]
  411925:	sbb    DWORD PTR [edx+0x67],0x4b871c5c
  41192c:	jae    0x4118b6
  41192e:	dec    ebp
  41192f:	xchg   ecx,eax
  411930:	lea    edi,[esi-0x2ac47197]
  411936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411937:	xchg   edi,eax
  411938:	push   esp
  411939:	add    bh,0x58
  41193c:	push   eax
  41193d:	outs   dx,DWORD PTR ds:[esi]
  41193e:	mov    ebp,0x13628e8f
  411943:	push   es
  411944:	and    al,0xac
  411946:	jle    0x4119bf
  411948:	or     edi,DWORD PTR [ebp+ecx*4+0x7789c85e]
  41194f:	adc    al,0x49
  411951:	cmc    
  411952:	pushf  
  411953:	mov    al,ds:0x410f608c
  411958:	or     ebx,DWORD PTR ds:0x74b9dbaa
  41195e:	stos   BYTE PTR es:[edi],al
  41195f:	xor    BYTE PTR [ebx],0xa2
  411962:	fdivr  DWORD PTR [ecx-0x3d]
  411965:	mov    esi,0x90bd9211
  41196a:	mov    ds:0x6c98c577,eax
  41196f:	add    eax,0x8dd6e5a0
  411974:	and    eax,ecx
  411976:	mov    ds:0xacdd635d,al
  41197b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41197c:	pop    ecx
  41197d:	les    eax,FWORD PTR [eax-0x5f]
  411980:	iret   
  411981:	inc    edx
  411982:	and    BYTE PTR [edx-0x5b],bh
  411985:	(bad)  
  411986:	cmp    eax,esi
  411988:	outs   dx,DWORD PTR ds:[esi]
  411989:	leave  
  41198a:	retf   0xa5a6
  41198d:	sbb    BYTE PTR [ebp-0x1c202fe4],dl
  411993:	cmp    DWORD PTR [edx-0x42],esi
  411996:	sub    DWORD PTR [ecx+0x7887fb68],esp
  41199c:	xchg   ebp,eax
  41199d:	xchg   BYTE PTR [eax+0xec94faf],ch
  4119a3:	sub    eax,0x6f2e7818
  4119a8:	cs aas 
  4119aa:	mov    edx,0xcf9696c4
  4119af:	hlt    
  4119b0:	aam    0xe9
  4119b2:	aam    0xb8
  4119b4:	shl    DWORD PTR [edx-0x59],1
  4119b7:	bound  esp,QWORD PTR [ebx+0x4d]
  4119ba:	mov    cl,0xa6
  4119bc:	adc    cl,cl
  4119be:	(bad)  
  4119bf:	sbb    dh,cl
  4119c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119c2:	setne  cl
  4119c5:	jecxz  0x411972
  4119c7:	test   al,0xde
  4119c9:	pop    si
  4119cb:	pop    edi
  4119cc:	ja     0x411a49
  4119ce:	mov    esp,0xe4f358
  4119d3:	dec    ecx
  4119d4:	mov    esp,0xcfa44664
  4119d9:	jnp    0x411979
  4119db:	sahf   
  4119dc:	adc    BYTE PTR [eax],ah
  4119de:	in     eax,dx
  4119df:	jae    0x4119c6
  4119e1:	mov    al,0x4
  4119e3:	(bad)  
  4119e4:	mov    dl,0x10
  4119e6:	int    0x42
  4119e8:	push   ecx
  4119e9:	(bad)  
  4119ea:	int3   
  4119eb:	out    0xc7,al
  4119ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119ee:	mov    ah,BYTE PTR [ebp+0x4be01b47]
  4119f4:	popa   
  4119f5:	mov    dl,0xcf
  4119f7:	gs popa 
  4119f9:	add    DWORD PTR [ecx+0x4],eax
  4119fc:	dec    ebx
  4119fd:	mov    al,0xc8
  4119ff:	fwait
  411a00:	mov    ebx,0xb48adace
  411a05:	mov    esi,0x11482f9d
  411a0a:	sbb    al,0x96
  411a0c:	mov    bl,0xe9
  411a0e:	mov    fs,WORD PTR [edi+0x7c]
  411a11:	mov    cl,0xf2
  411a13:	stos   DWORD PTR es:[edi],eax
  411a14:	push   ds
  411a15:	retf   0x5a09
  411a18:	pop    ebp
  411a19:	pushf  
  411a1a:	ins    DWORD PTR es:[edi],dx
  411a1b:	out    0x8e,eax
  411a1d:	nop
  411a1e:	jne    0x4119fd
  411a20:	test   al,0xd7
  411a23:	aaa    
  411a24:	pop    ebx
  411a25:	mov    ebx,0xa9222b49
  411a2a:	ins    BYTE PTR es:[edi],dx
  411a2b:	stos   BYTE PTR es:[edi],al
  411a2c:	pop    eax
  411a2d:	jbe    0x4119b5
  411a2f:	push   esp
  411a30:	das    
  411a31:	stos   BYTE PTR es:[edi],al
  411a32:	xchg   esi,eax
  411a33:	mov    eax,ds:0x6a3ab314
  411a38:	push   es
  411a39:	loopne 0x4119f7
  411a3b:	dec    BYTE PTR [ebx-0x3e]
  411a3e:	pop    ecx
  411a3f:	repnz cli 
  411a41:	jb     0x4119ed
  411a43:	loop   0x411a56
  411a45:	xchg   esp,eax
  411a46:	rsqrtps xmm3,XMMWORD PTR [edi+0x7f]
  411a4a:	mov    dl,0xbf
  411a4c:	fst    DWORD PTR [ebx+ebx*1-0x40]
  411a50:	out    dx,eax
  411a51:	repnz retf 
  411a53:	out    0x16,eax
  411a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a56:	xchg   BYTE PTR [eax],dl
  411a58:	jno    0x411a39
  411a5a:	fs cmp al,0x44
  411a5d:	push   ebx
  411a5e:	push   edx
  411a5f:	test   bh,bl
  411a61:	fmul   QWORD PTR [ebp+0xc3d0383]
  411a67:	arpl   WORD PTR [ecx],bp
  411a69:	cwde   
  411a6a:	jo     0x411a85
  411a6c:	loop   0x411adb
  411a6e:	mov    eax,0x324d9b62
  411a73:	or     eax,0x50bf426f
  411a78:	shr    ebp,0x96
  411a7b:	mov    esp,0x39e3ff84
  411a80:	cld    
  411a81:	mov    ds:0xbad08891,al
  411a86:	pop    eax
  411a87:	push   ebp
  411a88:	popf   
  411a89:	adc    edi,0x30
  411a8c:	dec    ecx
  411a8d:	mov    ebp,0xde341e7f
  411a92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a93:	mov    edi,0x10293997
  411a98:	ins    BYTE PTR es:[edi],dx
  411a99:	js     0x411aca
  411a9b:	dec    ebp
  411a9c:	repnz popf 
  411a9e:	push   es
  411a9f:	xor    eax,0x29fe928d
  411aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa5:	stc    
  411aa6:	loope  0x411a3c
  411aa8:	xor    dl,ch
  411aaa:	or     DWORD PTR [esi-0x8c3f9ca],edi
  411ab0:	sub    al,0x2b
  411ab2:	rcr    BYTE PTR [esi],0x6f
  411ab5:	xlat   BYTE PTR ds:[ebx]
  411ab6:	sbb    al,BYTE PTR [ecx+ebx*8-0x7b36f10]
  411abd:	adc    eax,0x161dcdeb
  411ac2:	imul   ebp,esi,0x29d2b25a
  411ac8:	cli    
  411ac9:	mov    dh,0xd3
  411acb:	ins    DWORD PTR es:[edi],dx
  411acc:	pop    ecx
  411acd:	test   DWORD PTR ds:0x8cbe6453,ebp
  411ad3:	aaa    
  411ad4:	add    eax,0x168e90b2
  411ad9:	xor    DWORD PTR [edi+0x68a1c244],ecx
  411adf:	xchg   ebp,ebp
  411ae1:	data16 mov bh,0x60
  411ae4:	push   ecx
  411ae5:	mov    ds:0xa37ee5dc,al
  411aea:	mov    bh,0x83
  411aec:	fmul   DWORD PTR [eax+0x14]
  411aef:	add    ch,BYTE PTR [esi-0xc]
  411af2:	test   al,0xc6
  411af4:	add    BYTE PTR [esi-0x46908eae],bh
  411afa:	(bad)  
  411afb:	in     eax,0x39
  411afd:	pop    es
  411afe:	xor    BYTE PTR [edi+eiz*8+0x66351f61],ah
  411b05:	push   eax
  411b06:	rcr    WORD PTR [ebp+0x2b],1
  411b0a:	ficom  WORD PTR [ecx+0x4bd9ab33]
  411b10:	dec    ecx
  411b11:	rcr    ebx,cl
  411b13:	cld    
  411b14:	xchg   edx,eax
  411b15:	push   edi
  411b16:	inc    ebx
  411b17:	mov    dl,0x72
  411b19:	icebp  
  411b1a:	ror    DWORD PTR [edx+0x10],cl
  411b1d:	jp     0x411b0a
  411b1f:	retf   
  411b20:	bound  ecx,QWORD PTR [ebx]
  411b22:	into   
  411b23:	xor    eax,0x8cec8c98
  411b28:	dec    esp
  411b29:	mov    al,0x27
  411b2b:	pop    ebx
  411b2c:	cmp    dl,BYTE PTR [ecx-0x4078efcc]
  411b32:	lods   eax,DWORD PTR ds:[esi]
  411b33:	enter  0x798,0x54
  411b37:	sub    BYTE PTR [esi],dl
  411b39:	in     al,dx
  411b3a:	dec    ebp
  411b3b:	add    cl,dl
  411b3d:	or     ecx,esp
  411b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b40:	pusha  
  411b41:	sub    DWORD PTR [eax-0x20dea9fd],eax
  411b47:	add    al,0xb4
  411b49:	push   cs
  411b4a:	and    DWORD PTR [ecx+eiz*2-0x34f655f9],ebx
  411b51:	fdivr  DWORD PTR [ebx]
  411b53:	gs or  eax,0xcda69fc9
  411b59:	inc    eax
  411b5a:	das    
  411b5b:	(bad)  
  411b5c:	adc    ah,bl
  411b5e:	bound  ebp,QWORD PTR [ecx]
  411b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b61:	repz daa 
  411b63:	mov    esp,0xf38e77d8
  411b68:	pop    ds
  411b69:	ror    DWORD PTR [edx+ebp*4],0x93
  411b6d:	(bad)  
  411b6e:	addr16 cld 
  411b70:	pop    edx
  411b71:	daa    
  411b72:	mov    esp,DWORD PTR [eax+0x6885d50d]
  411b78:	adc    eax,0xc5710217
  411b7d:	test   DWORD PTR [edx+0x7a],ebx
  411b80:	pop    esi
  411b81:	mov    eax,ds:0xd6527622
  411b86:	mov    al,0xa6
  411b88:	into   
  411b89:	arpl   WORD PTR [ebx+0x50],bx
  411b8c:	xor    eax,0xecca8687
  411b91:	fadd   QWORD PTR [edi+0x41]
  411b94:	mov    ah,0xbd
  411b96:	push   0xba7a7f1
  411b9b:	bnd es js 0x411b84
  411b9f:	mov    ah,0xc2
  411ba1:	fbld   TBYTE PTR ds:0xf60f77fd
  411ba7:	xchg   BYTE PTR [edi],ah
  411ba9:	imul   edx,DWORD PTR [ebx+0x64],0xffffffa4
  411bad:	mov    ebx,0xb431cf8f
  411bb2:	mov    ds:0xc6c4550f,eax
  411bb7:	mov    ah,BYTE PTR [edi-0x48]
  411bba:	sti    
  411bbb:	add    ebp,DWORD PTR [esi]
  411bbd:	push   cs
  411bbe:	jbe    0x411c28
  411bc0:	jns    0x411b52
  411bc2:	jo     0x411b6a
  411bc4:	and    al,0x68
  411bc6:	mov    ds:0xf538ecf4,al
  411bcb:	cmp    BYTE PTR [edx],bl
  411bcd:	scas   al,BYTE PTR es:[edi]
  411bce:	loopne 0x411bb7
  411bd0:	xor    DWORD PTR [eax-0x43],edi
  411bd3:	mov    cl,0x33
  411bd5:	jecxz  0x411c16
  411bd7:	aad    0xf6
  411bd9:	add    eax,0x4ca80c4
  411bde:	add    BYTE PTR [ecx+eax*8+0x16],ah
  411be2:	cmc    
  411be3:	cmc    
  411be4:	pop    edi
  411be5:	jle    0x411bac
  411be7:	sbb    DWORD PTR [edi],edi
  411be9:	not    dl
  411beb:	lea    ecx,[ecx]
  411bed:	sub    eax,0xbb18d538
  411bf2:	dec    esi
  411bf3:	add    esi,DWORD PTR [ecx-0x7c438e3f]
  411bf9:	retf   
  411bfa:	and    BYTE PTR [esi+0x55b7ef86],0x27
  411c01:	inc    ebp
  411c02:	xchg   ebx,eax
  411c03:	stc    
  411c04:	(bad)  
  411c05:	xor    eax,0xfb946bec
  411c0a:	inc    edi
  411c0b:	push   edi
  411c0c:	push   0xd28f722c
  411c11:	outs   dx,DWORD PTR ds:[esi]
  411c12:	xchg   ebx,eax
  411c13:	outs   dx,BYTE PTR ds:[esi]
  411c14:	das    
  411c15:	xchg   BYTE PTR [eax-0x48ad4af5],al
  411c1b:	mov    BYTE PTR [ecx-0x3dfa857e],al
  411c21:	jo     0x411c0c
  411c23:	loope  0x411bb7
  411c25:	lds    esp,FWORD PTR [edx+eax*1-0x47b78c83]
  411c2c:	xor    al,0x78
  411c2e:	push   edx
  411c2f:	loopne 0x411c06
  411c31:	pop    ebp
  411c32:	cmp    ebp,DWORD PTR [eax-0x3b]
  411c35:	and    dh,BYTE PTR [edx-0x7052a9fc]
  411c3b:	test   eax,0x424dfe46
  411c40:	mov    al,ds:0x2f6ec95d
  411c45:	mov    ds:0x9d394b9e,al
  411c4a:	push   ds
  411c4b:	sub    DWORD PTR [esp+edx*4-0x64],ecx
  411c4f:	pushf  
  411c50:	adc    DWORD PTR [edx-0x7f],ecx
  411c53:	xor    dl,BYTE PTR [edi-0x1b18f830]
  411c59:	mov    ds:0x561c9945,eax
  411c5e:	push   es
  411c5f:	jge    0x411c6a
  411c61:	stos   DWORD PTR es:[edi],eax
  411c62:	cs push esp
  411c64:	mov    edx,cr5
  411c67:	mov    dl,0xfb
  411c69:	js     0x411c8e
  411c6b:	sub    DWORD PTR [eax+0x18],ecx
  411c6e:	xor    al,0x53
  411c70:	lahf   
  411c71:	jmp    0xcba7ae84
  411c76:	fadd   DWORD PTR [ecx-0x59]
  411c79:	popf   
  411c7a:	aam    0xd8
  411c7c:	sub    BYTE PTR [ecx],dh
  411c7e:	ror    DWORD PTR [edi-0xb8ceed8],1
  411c84:	inc    edx
  411c85:	mov    ds:0x9b48def4,al
  411c8a:	lock and ch,dh
  411c8d:	xchg   edi,eax
  411c8e:	psadbw mm3,mm5
  411c91:	jb     0x411ceb
  411c93:	inc    ebp
  411c94:	push   edi
  411c95:	jmp    DWORD PTR [eax]
  411c97:	nop
  411c98:	jp     0x411c92
  411c9a:	add    DWORD PTR [eax-0x59],edi
  411c9d:	pop    esp
  411c9e:	outs   dx,DWORD PTR ds:[esi]
  411c9f:	shl    DWORD PTR [esi-0x78],cl
  411ca2:	push   cs
  411ca3:	addr16 mov edi,0xb1549d54
  411ca9:	sbb    eax,0x4b96d6dc
  411cae:	ss mov ebx,0x643f25ef
  411cb4:	xor    DWORD PTR [esi+0x2f],esp
  411cb7:	mov    DWORD PTR [esi+0x299ff3a3],edx
  411cbd:	ror    DWORD PTR [ecx],cl
  411cbf:	mov    ch,0x74
  411cc1:	in     al,dx
  411cc2:	mov    ebp,0x985842a1
  411cc7:	or     eax,0x125b8ba2
  411ccc:	xor    al,dh
  411cce:	minps  xmm4,XMMWORD PTR [esi-0x36]
  411cd2:	lahf   
  411cd3:	lea    ebp,[esi]
  411cd5:	stc    
  411cd6:	int    0xfd
  411cd8:	and    eax,0x265d27b7
  411cdd:	mov    ebx,es
  411cdf:	cmp    eax,0x5b739c62
  411ce4:	jg     0x411d3c
  411ce6:	push   0xffffff80
  411ce8:	retf   
  411ce9:	test   DWORD PTR [edx-0x32419a81],esi
  411cef:	ins    DWORD PTR es:[edi],dx
  411cf0:	outs   dx,DWORD PTR ds:[esi]
  411cf1:	in     eax,dx
  411cf2:	sub    DWORD PTR [ebx+esi*2-0x3e],ebx
  411cf6:	dec    esp
  411cf7:	cmc    
  411cf8:	icebp  
  411cf9:	jbe    0x411c99
  411cfb:	pop    ecx
  411cfc:	push   cs
  411cfd:	cli    
  411cfe:	pop    ss
  411cff:	inc    ebx
  411d00:	arpl   WORD PTR [ebx-0x44],si
  411d03:	sbb    DWORD PTR [ecx],0xec22b547
  411d09:	mov    edx,0x1d4cc082
  411d0e:	xlat   BYTE PTR ds:[ebx]
  411d0f:	adc    dh,BYTE PTR [esi-0x51bc090c]
  411d15:	xlat   BYTE PTR ds:[ebx]
  411d16:	inc    ecx
  411d17:	dec    ebx
  411d18:	ret    0xa13e
  411d1b:	retf   0x20a7
  411d1e:	repnz cmp edx,ebp
  411d21:	aaa    
  411d22:	and    esp,DWORD PTR [ebx-0x7500db4b]
  411d28:	into   
  411d29:	retf   
  411d2a:	inc    ebx
  411d2b:	outs   dx,BYTE PTR ds:[esi]
  411d2c:	and    BYTE PTR [ebx+0x6c5bc809],ch
  411d32:	rol    BYTE PTR [esi],0x11
  411d35:	aaa    
  411d36:	xchg   ecx,eax
  411d37:	fild   DWORD PTR [ecx-0x44ec0037]
  411d3d:	sbb    ebx,DWORD PTR [ebx+esi*4]
  411d40:	or     eax,0xf4ec34ba
  411d45:	dec    esp
  411d46:	leave  
  411d47:	sti    
  411d48:	pinsrw mm7,WORD PTR [ecx-0x14],0x7
  411d4d:	bound  edi,QWORD PTR [esi+0x6bf97329]
  411d53:	mov    dh,0x62
  411d55:	mov    ah,0x5b
  411d57:	sahf   
  411d58:	(bad)  
  411d59:	pop    edi
  411d5a:	cs pop ebp
  411d5c:	aad    0xda
  411d5e:	or     BYTE PTR [esi-0x77e5f9b9],0xa5
  411d65:	(bad)  
  411d66:	shl    BYTE PTR [ecx-0x69f53f68],1
  411d6c:	jae    0x411d34
  411d6e:	pop    ebp
  411d6f:	push   edx
  411d70:	push   ebp
  411d71:	stos   BYTE PTR es:[edi],al
  411d72:	inc    esp
  411d73:	xor    eax,0xbdf4aee2
  411d78:	pushf  
  411d79:	ins    BYTE PTR es:[edi],dx
  411d7a:	popa   
  411d7b:	inc    esp
  411d7c:	test   DWORD PTR [edx+ebx*4-0x356bd429],edi
  411d83:	inc    eax
  411d84:	test   DWORD PTR [esi+0x3],ecx
  411d87:	lods   eax,DWORD PTR ds:[esi]
  411d88:	dec    esp
  411d89:	add    al,0xd2
  411d8b:	je     0x411dc5
  411d8d:	ss xchg ebx,eax
  411d8f:	inc    ecx
  411d90:	aam    0xa9
  411d92:	cld    
  411d93:	retf   
  411d94:	push   ss
  411d95:	int3   
  411d96:	dec    edi
  411d97:	in     al,0x68
  411d99:	xchg   BYTE PTR [esi+esi*1-0x1b],bh
  411d9d:	lahf   
  411d9e:	dec    eax
  411d9f:	cmp    bh,bh
  411da1:	jecxz  0x411e0c
  411da3:	xlat   BYTE PTR ds:[ebx]
  411da4:	pop    ds
  411da5:	aad    0x1d
  411da7:	sbb    edi,DWORD PTR ds:0x71e85789
  411dad:	pop    edi
  411dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411daf:	cli    
  411db0:	sti    
  411db1:	jae    0x411d8c
  411db3:	cmc    
  411db4:	jbe    0x411e21
  411db6:	push   esp
  411db7:	scas   eax,DWORD PTR es:[edi]
  411db8:	push   esp
  411db9:	test   al,0x1e
  411dbb:	and    al,0xd4
  411dbd:	or     DWORD PTR [ebp+0x11],ebx
  411dc0:	mov    ch,BYTE PTR [edi]
  411dc2:	test   dl,0x4a
  411dc5:	jp     0x411e3c
  411dc7:	pop    edi
  411dc8:	jnp    0x411d90
  411dca:	imul   edi,DWORD PTR [ebx],0x2d
  411dcd:	cmp    ah,al
  411dcf:	out    dx,al
  411dd0:	test   al,0xed
  411dd2:	stos   BYTE PTR es:[edi],al
  411dd3:	test   DWORD PTR [esi-0x369c805a],esp
  411dd9:	jo     0x411e49
  411ddb:	jne    0x411d9f
  411ddd:	addr16 nop
  411ddf:	sahf   
  411de0:	push   edi
  411de1:	lock pop bx
  411de4:	sub    BYTE PTR [edx-0x1c721fd9],bh
  411dea:	inc    edx
  411deb:	cmc    
  411dec:	pop    ebp
  411ded:	xchg   BYTE PTR [esi+0x752c9e8d],al
  411df3:	(bad)  
  411df4:	call   0xcbe415cc
  411df9:	cmp    al,0x74
  411dfb:	mov    ch,0xa2
  411dfd:	les    esp,FWORD PTR [esi]
  411dff:	retf   0xd15d
  411e02:	sbb    al,0x31
  411e04:	in     al,0x83
  411e06:	mov    bl,0x43
  411e08:	in     al,dx
  411e09:	aas    
  411e0a:	xor    DWORD PTR [edx+0x24c510fd],esp
  411e10:	adc    eax,0xb2fe8438
  411e15:	aaa    
  411e16:	mov    ds:0x379e27fc,eax
  411e1b:	or     al,0x9c
  411e1d:	lea    edi,[eax-0x3e]
  411e20:	sbb    ecx,DWORD PTR [ebx+0x2e]
  411e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e24:	cmp    BYTE PTR [edi+0x1a],0x2e
  411e28:	lds    esi,FWORD PTR [edx]
  411e2a:	mov    edx,DWORD PTR [ebx-0x6]
  411e2d:	xchg   edi,eax
  411e2e:	(bad)  
  411e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e31:	mov    ds:0xd4f60c3d,al
  411e36:	icebp  
  411e37:	jne    0x411e5d
  411e39:	je     0x411ddc
  411e3b:	jle    0x411e19
  411e3d:	pop    ss
  411e3e:	mov    dl,0xf4
  411e40:	popa   
  411e41:	aas    
  411e42:	jb     0x411e80
  411e44:	(bad)  
  411e45:	cs loop 0x411e7a
  411e48:	test   BYTE PTR ss:[edi],0x29
  411e4c:	cmp    al,0x9
  411e4e:	jle    0x411ecc
  411e50:	and    DWORD PTR [edi+eax*2],0x99af372f
  411e57:	cdq    
  411e58:	pop    ds
  411e59:	push   esp
  411e5a:	xchg   edi,eax
  411e5b:	mov    bl,BYTE PTR [edx+edi*8+0x6d]
  411e5f:	push   eax
  411e60:	jne    0x411e0c
  411e62:	inc    ebp
  411e63:	mov    al,ds:0x649b14fa
  411e68:	call   0xc93c:0xb4beb88e
  411e6f:	fsubp  st(2),st
  411e71:	loopne 0x411e23
  411e73:	aaa    
  411e74:	fist   WORD PTR [edx-0x73e9bd04]
  411e7a:	test   DWORD PTR [esp+ebx*4],0x14d85c1e
  411e81:	xor    ah,dl
  411e83:	xchg   edi,eax
  411e84:	arpl   dx,di
  411e86:	stos   BYTE PTR es:[edi],al
  411e87:	cs push eax
  411e89:	daa    
  411e8a:	js     0x411ee2
  411e8c:	xlat   BYTE PTR ds:[ebx]
  411e8d:	jmp    0x9442:0x71cd3153
  411e94:	mov    eax,0x1b384412
  411e99:	out    0x78,eax
  411e9b:	lock aas 
  411e9d:	dec    esi
  411e9e:	dec    edx
  411e9f:	test   BYTE PTR [edx+0x3d],dh
  411ea2:	lods   al,BYTE PTR ds:[esi]
  411ea3:	or     DWORD PTR [edi+0x2c],edx
  411ea6:	outs   dx,DWORD PTR ds:[esi]
  411ea7:	loopne 0x411ec4
  411ea9:	out    0xc4,al
  411eab:	mov    ebp,0xad3943c0
  411eb0:	pop    ebx
  411eb1:	or     BYTE PTR [edx+0x25f29196],bh
  411eb7:	stos   DWORD PTR es:[edi],eax
  411eb8:	cwde   
  411eb9:	mov    ch,0x58
  411ebb:	aam    0xd
  411ebd:	jg     0x411e51
  411ebf:	push   eax
  411ec0:	dec    esi
  411ec1:	ret    
  411ec2:	imul   ebx,DWORD PTR [eax],0x54
  411ec5:	pop    ds
  411ec6:	ficom  WORD PTR [ebp-0x29]
  411ec9:	in     al,0x7e
  411ecb:	mov    ebp,0x790d0de
  411ed0:	dec    ebx
  411ed1:	stos   DWORD PTR es:[edi],eax
  411ed2:	or     DWORD PTR es:[eax-0x16231efc],esi
  411ed9:	loope  0x411f2f
  411edb:	loopne 0x411ef3
  411edd:	inc    edx
  411ede:	jb     0x411edf
  411ee0:	out    dx,eax
  411ee1:	sub    al,0xdb
  411ee3:	mov    WORD PTR [eax],gs
  411ee5:	xchg   edx,eax
  411ee6:	push   es
  411ee7:	ja     0x411eed
  411ee9:	outs   dx,BYTE PTR ds:[esi]
  411eea:	adc    dl,BYTE PTR [eax+ebx*4+0x40]
  411eee:	mov    edi,0x20be3
  411ef3:	cmp    BYTE PTR [ebx],dh
  411ef5:	mov    ds:0xa148fd16,eax
  411efa:	push   ds
  411efb:	xor    bh,BYTE PTR [edi-0x4f]
  411efe:	jge    0x411e8c
  411f00:	cmp    DWORD PTR [esi],eax
  411f02:	call   0xc97a:0x6c52b248
  411f09:	xor    bl,BYTE PTR [ebx]
  411f0b:	sahf   
  411f0c:	mov    BYTE PTR [ecx],bl
  411f0e:	xchg   ebx,eax
  411f0f:	fnstsw WORD PTR [eax+0x1883fb81]
  411f15:	inc    esi
  411f16:	mov    bl,0x1b
  411f18:	in     al,0x10
  411f1a:	hlt    
  411f1b:	dec    esi
  411f1c:	fsub   QWORD PTR [eax]
  411f1e:	mov    dl,0x2
  411f20:	push   ss
  411f21:	cmp    DWORD PTR [eax],ebp
  411f23:	inc    ebx
  411f24:	jecxz  0x411eeb
  411f26:	sub    BYTE PTR [ecx-0x69],ch
  411f29:	ss std 
  411f2b:	test   DWORD PTR [esi+0x5],0xa8e51877
  411f32:	mov    ch,0x7
  411f34:	jecxz  0x411f41
  411f36:	push   ebp
  411f37:	retf   0xf94b
  411f3a:	push   es
  411f3b:	fild   WORD PTR [edi]
  411f3d:	mov    ah,0xa
  411f3f:	retf   0xe4fe
  411f42:	dec    eax
  411f43:	sbb    dl,BYTE PTR [esp+edx*8-0x30f98051]
  411f4a:	(bad)  
  411f4b:	jmp    0xef26e08f
  411f50:	add    bl,0xc0
  411f53:	xor    eax,0x5f44a62c
  411f58:	mov    cl,0x87
  411f5a:	jb     0x411f3a
  411f5c:	test   eax,0xfb8ec43a
  411f61:	pop    edx
  411f62:	jl     0x411f20
  411f64:	jne    0x411f4d
  411f66:	scas   al,BYTE PTR es:[edi]
  411f67:	xor    al,0x2d
  411f69:	int    0x4e
  411f6b:	mov    ebx,0xbb07db2e
  411f70:	mov    ebx,0xf77baf21
  411f75:	es test al,0xe
  411f78:	mov    edi,0x760ed98a
  411f7d:	fcom   QWORD PTR [ecx-0x708f6f4a]
  411f83:	lods   al,BYTE PTR ds:[esi]
  411f84:	cmp    ah,dh
  411f86:	xchg   ebp,eax
  411f87:	add    BYTE PTR [edi+0x75efa81e],dl
  411f8d:	dec    ebx
  411f8e:	ja     0x411fc0
  411f90:	fiadd  WORD PTR [ecx-0x1f]
  411f93:	mov    eax,0x68f9e74b
  411f98:	sti    
  411f99:	fs pop ss
  411f9b:	push   0x34
  411f9d:	les    ecx,FWORD PTR [esi+0x48]
  411fa0:	iret   
  411fa1:	jo     0x411f3d
  411fa3:	fs inc edx
  411fa5:	mov    ecx,0xe14b0613
  411faa:	mov    dl,0x95
  411fac:	mov    edi,0x5c45f327
  411fb1:	pushf  
  411fb2:	sbb    BYTE PTR [edx-0x54e7bdc2],dh
  411fb8:	sti    
  411fb9:	je     0x411ff9
  411fbb:	imul   DWORD PTR [ecx+0x6de18d6a]
  411fc1:	push   ds
  411fc2:	inc    esp
  411fc3:	jg     0x411f64
  411fc5:	jb     0x412011
  411fc7:	in     al,0x4c
  411fc9:	cmp    ebp,edi
  411fcb:	ss call 0x6e562981
  411fd1:	pop    ebp
  411fd2:	cmc    
  411fd3:	fcom   QWORD PTR [edx-0x159513be]
  411fd9:	clc    
  411fda:	add    eax,eax
  411fdc:	push   ebx
  411fdd:	xchg   edx,eax
  411fde:	inc    edi
  411fdf:	push   0xffffff95
  411fe1:	(bad)  
  411fe2:	push   ebp
  411fe3:	mov    al,0x1c
  411fe5:	ss push ecx
  411fe7:	mov    BYTE PTR ds:0x91b2b394,cl
  411fed:	mov    esp,esp
  411fef:	fst    QWORD PTR ds:0xeb49ae71
  411ff5:	xor    BYTE PTR [ebp+0xb],ch
  411ff8:	repz vsqrtsd xmm3,xmm4,QWORD PTR [ebp+0x3c21f8a0]
  412001:	lds    eax,FWORD PTR [edx]
  412003:	mov    dh,0x3a
  412005:	jmp    0x390ee359
  41200a:	jle    0x41205c
  41200c:	dec    eax
  41200d:	mov    dh,0x66
  41200f:	push   es
  412010:	js     0x412080
  412012:	das    
  412013:	dec    edi
  412014:	mov    al,0x0
  412016:	add    ebp,DWORD PTR [edx+0x74]
  412019:	pop    ecx
  41201a:	pop    ebx
  41201b:	aam    0xb9
  41201d:	lahf   
  41201e:	mov    eax,ds:0x71b51828
  412023:	dec    esp
  412024:	ror    BYTE PTR [ebp-0x7f7295e1],cl
  41202a:	pushf  
  41202b:	jae    0x41204e
  41202d:	sbb    al,BYTE PTR [eax]
  41202f:	pop    ss
  412030:	(bad)  ds:0xf80816b2
  412036:	sub    eax,0xc09de62d
  41203b:	outs   dx,DWORD PTR ds:[esi]
  41203c:	cwde   
  41203d:	push   ds
  41203e:	push   eax
  41203f:	lea    edi,[edi-0x3be9933b]
  412045:	loope  0x411fcc
  412047:	ficomp DWORD PTR [eax+0x9a40b9e]
  41204d:	mov    bl,0x7d
  41204f:	or     BYTE PTR [esi-0x4b],cl
  412052:	sub    bh,al
  412054:	xchg   ebx,eax
  412055:	or     al,0x1f
  412057:	adc    BYTE PTR [esi-0x38],0x14
  41205b:	(bad)  
  41205c:	push   edx
  41205d:	cmp    eax,0xbbfa6961
  412062:	(bad)  
  412063:	jp     0x41200b
  412065:	stos   BYTE PTR es:[edi],al
  412066:	lds    esp,FWORD PTR [edi+0x6e]
  412069:	mov    ds:0xb6783902,al
  41206e:	inc    edi
  41206f:	aaa    
  412070:	adc    DWORD PTR [ebx-0x23],0xffffffec
  412074:	in     eax,dx
  412075:	sub    ah,cl
  412077:	sbb    al,0x2a
  412079:	int3   
  41207a:	int    0x5d
  41207c:	push   ss
  41207d:	outs   dx,BYTE PTR ds:[esi]
  41207e:	loope  0x4120d0
  412080:	pop    ss
  412081:	sbb    dh,dl
  412083:	inc    edx
  412084:	fmul   DWORD PTR [ebx+esi*2+0x66]
  412088:	mov    esp,0x8f5e9888
  41208d:	popf   
  41208e:	jae    0x41201a
  412090:	std    
  412091:	addr16 xchg edi,eax
  412093:	int3   
  412094:	jnp    0x4120f9
  412096:	imul   ebx,DWORD PTR [ebp-0x22],0xfa0b46ed
  41209d:	cld    
  41209e:	lods   eax,DWORD PTR ds:[esi]
  41209f:	sub    BYTE PTR [edi+0x5d],0xc4
  4120a3:	sub    DWORD PTR gs:[edx+0x7d],0x95678819
  4120ab:	xchg   DWORD PTR [esp+ebx*4+0x2a],ecx
  4120af:	sbb    BYTE PTR [eax-0x1190cad7],al
  4120b5:	mov    ds:0x6dac4ec4,eax
  4120ba:	test   eax,0x13573aec
  4120bf:	add    DWORD PTR [ecx-0x1f62d9f3],edx
  4120c5:	mov    eax,0xfe1810f6
  4120ca:	cmp    DWORD PTR [ecx-0xfd1a5b0],esp
  4120d0:	push   0x1f1f7b1c
  4120d5:	ret    
  4120d6:	lods   eax,DWORD PTR ds:[esi]
  4120d7:	test   esi,ebx
  4120d9:	pop    esp
  4120db:	(bad)  
  4120dc:	push   ebx
  4120dd:	sar    dh,cl
  4120df:	pop    es
  4120e0:	push   edi
  4120e1:	jg     0x41211c
  4120e3:	jnp    0x4120ea
  4120e5:	scas   eax,DWORD PTR es:[edi]
  4120e6:	sbb    bh,BYTE PTR [ebx+edi*8]
  4120e9:	ins    BYTE PTR es:[edi],dx
  4120ea:	std    
  4120eb:	scas   eax,DWORD PTR es:[edi]
  4120ec:	ficom  DWORD PTR [edx]
  4120ee:	dec    edx
  4120ef:	push   esp
  4120f0:	xor    al,0x5b
  4120f2:	(bad)
  4120f5:	inc    esp
  4120f6:	fs jns 0x412093
  4120f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120fa:	in     al,0x1c
  4120fc:	stos   DWORD PTR es:[edi],eax
  4120fd:	push   ss
  4120fe:	pop    esi
  4120ff:	shl    BYTE PTR [edi-0x6936ce38],0x6a
  412106:	aaa    
  412107:	push   ecx
  412108:	mov    BYTE PTR [esi],ch
  41210a:	or     DWORD PTR [ebx+0x21defe47],ebp
  412110:	mov    ds:0x3015253b,eax
  412115:	adc    esi,edx
  412117:	mov    dl,0x8f
  412119:	jle    0x4120e2
  41211b:	fstp   DWORD PTR [eax+0x69]
  41211e:	push   0x77b99391
  412123:	mov    DWORD PTR [ebx],esi
  412125:	cwde   
  412126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412127:	sbb    eax,0x12b5530
  41212c:	clc    
  41212d:	mov    dh,0x8b
  41212f:	jae    0x412185
  412131:	cmc    
  412132:	aas    
  412133:	arpl   WORD PTR [eax+0x18],di
  412136:	cmp    cl,bh
  412138:	push   cs
  412139:	pop    ds
  41213a:	das    
  41213b:	lods   al,BYTE PTR ds:[esi]
  41213c:	retf   0x882
  41213f:	xor    eax,0xa89ab0ed
  412144:	retf   0xc225
  412147:	popa   
  412148:	jle    0x4121b9
  41214a:	mov    ebx,0xd46cb26d
  41214f:	loopne 0x412132
  412151:	aas    
  412152:	daa    
  412153:	inc    edi
  412154:	sub    BYTE PTR [eax+0x494e1bef],cl
  41215a:	aam    0x94
  41215c:	adc    DWORD PTR [esi+eax*8-0x31],esp
  412160:	lahf   
  412161:	mov    bl,0x3a
  412163:	mov    edi,0x5c96334d
  412168:	cmp    BYTE PTR [edi+ecx*4+0x66067411],ah
  41216f:	scas   eax,DWORD PTR es:[edi]
  412170:	sub    BYTE PTR [eax],cl
  412172:	xlat   BYTE PTR ds:[ebx]
  412173:	or     ecx,DWORD PTR ds:0x18b3c9d3
  412179:	(bad)
  41217d:	fsubr  DWORD PTR [ebx-0x20]
  412180:	mov    esp,0x9279c3
  412185:	jo     0x41214a
  412187:	dec    ebp
  412188:	mov    ecx,0x5441a687
  41218d:	popa   
  41218e:	push   eax
  41218f:	mov    al,ds:0xaeb923c4
  412194:	out    dx,eax
  412195:	repz and BYTE PTR [ecx-0x7e],0x59
  41219a:	fwait
  41219b:	jns    0x4121c2
  41219d:	(bad)  
  41219e:	cmp    edi,DWORD PTR [ecx-0x75]
  4121a1:	rcr    DWORD PTR [ebp-0x77],0xe9
  4121a5:	push   esp
  4121a6:	mov    bl,0x88
  4121a8:	and    eax,0x23301475
  4121ad:	bswap  edx
  4121af:	sub    eax,0xb574b865
  4121b4:	jecxz  0x412157
  4121b6:	xor    al,0xd4
  4121b8:	(bad)  
  4121b9:	enter  0xbe1,0x50
  4121bd:	call   0xebec:0xef1faad9
  4121c4:	(bad)  
  4121c5:	sti    
  4121c6:	(bad)  
  4121c7:	mov    dl,0x43
  4121c9:	xor    DWORD PTR [edx+0x4b],ebp
  4121cc:	lods   eax,DWORD PTR ds:[esi]
  4121cd:	xchg   edx,eax
  4121ce:	jmp    0x4121b2
  4121d0:	mov    edx,0x89423a3b
  4121d5:	cmp    bl,BYTE PTR [edx-0x7b]
  4121d8:	push   0x1b4edf45
  4121dd:	lock dec edi
  4121df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121e0:	dec    ebp
  4121e1:	jnp    0x412216
  4121e3:	or     eax,0xa48801d4
  4121e8:	ss dec edx
  4121ea:	push   ebp
  4121eb:	sbb    eax,0x4d9721c7
  4121f0:	push   es
  4121f1:	stos   BYTE PTR es:[edi],al
  4121f2:	pop    esp
  4121f3:	jae    0x41219b
  4121f5:	lock ds out 0x3d,eax
  4121f9:	inc    esp
  4121fa:	push   esp
  4121fb:	call   0x343fd301
  412200:	or     eax,0xce4bd123
  412205:	push   eax
  412206:	sbb    ch,BYTE PTR [ecx]
  412208:	nop
  412209:	xor    eax,0x47cbb7fd
  41220e:	xlat   BYTE PTR ds:[ebx]
  41220f:	xchg   edi,eax
  412210:	mov    ch,0x99
  412212:	int3   
  412213:	mov    al,BYTE PTR [ebp+eiz*8-0x20bf6d6e]
  41221a:	or     BYTE PTR [esp+eiz*2],0xea
  41221e:	xlat   BYTE PTR ds:[ebx]
  41221f:	jb     0x41227d
  412221:	push   ebp
  412222:	int3   
  412223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412224:	mov    esp,0xaee1f96f
  412229:	in     al,0x9e
  41222b:	push   cs
  41222c:	imul   edi,DWORD PTR [edx+0x733086c3],0xf3794819
  412236:	(bad)  
  412237:	push   DWORD PTR [edi-0x7fae92c3]
  41223d:	jl     0x412275
  41223f:	mov    ds:0xbec334b8,al
  412244:	xor    bh,BYTE PTR [esi+edi*2+0x7eea0a25]
  41224b:	hlt    
  41224c:	inc    esi
  41224d:	fistp  WORD PTR [edx+eax*1+0x6f]
  412251:	call   0xe929:0x54905158
  412258:	sbb    ebp,ebx
  41225a:	mov    cl,0x63
  41225c:	sbb    eax,0xc817e459
  412261:	sub    ch,BYTE PTR [edi+0x24f6071f]
  412267:	dec    esi
  412268:	inc    edx
  412269:	aas    
  41226a:	pop    es
  41226b:	pop    ss
  41226c:	xor    al,0x11
  41226e:	hlt    
  41226f:	(bad)  
  412270:	loope  0x412255
  412272:	ficom  WORD PTR [ecx+ebx*8-0x5b]
  412276:	stos   DWORD PTR es:[edi],eax
  412277:	or     esp,DWORD PTR [esi]
  412279:	sub    bl,ah
  41227b:	call   0x7dc9:0x3323d948
  412282:	and    ebp,DWORD PTR [ecx+0x6c]
  412285:	xor    ecx,0xffffffb5
  412288:	cmp    ch,BYTE PTR [ebp+ecx*1+0x40136307]
  41228f:	mov    esp,0xe14e09c3
  412294:	inc    ecx
  412295:	in     eax,dx
  412296:	push   edi
  412297:	mov    bh,0x85
  412299:	adc    DWORD PTR [eax-0x45],ebx
  41229c:	add    edi,DWORD PTR ds:[ebx]
  41229f:	dec    ebx
  4122a0:	push   0xffffffd5
  4122a2:	les    ebx,FWORD PTR [edx-0x37]
  4122a5:	ret    
  4122a6:	dec    esi
  4122a7:	test   ebx,edi
  4122a9:	test   dl,bl
  4122ab:	pop    edi
  4122ac:	shl    DWORD PTR [edx],1
  4122ae:	xor    DWORD PTR [eax],0xa8521af5
  4122b4:	scas   eax,DWORD PTR es:[edi]
  4122b5:	test   DWORD PTR [edi-0x4f],esi
  4122b8:	mov    cl,0xcf
  4122ba:	mov    DWORD PTR [ebx],0x1b585db0
  4122c0:	jp     0x4122c0
  4122c2:	cdq    
  4122c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122c4:	shr    DWORD PTR [ebx+0x31],cl
  4122c7:	mov    al,0x51
  4122c9:	xlat   BYTE PTR ds:[ebx]
  4122ca:	cmp    eax,0xeb17f5f6
  4122cf:	pop    ebx
  4122d0:	pxor   mm5,QWORD PTR [ebx-0x244dc319]
  4122d7:	mov    cl,BYTE PTR [ebp-0x78072c2a]
  4122dd:	aaa    
  4122de:	jmp    ecx
  4122e0:	int3   
  4122e1:	jg     0x412290
  4122e3:	(bad)  
  4122e4:	add    BYTE PTR [ebx+0x39bb561f],0x86
  4122eb:	scas   al,BYTE PTR es:[edi]
  4122ec:	cmp    ah,dl
  4122ee:	frstor [eax+0x4faacfe1]
  4122f4:	jae    0x412279
  4122f6:	push   edx
  4122f7:	mov    edx,0x3e189af1
  4122fc:	jle    0x41236d
  4122fe:	out    0x4d,al
  412300:	mov    eax,ss:0x2d240ff0
  412306:	dec    ebp
  412307:	adc    DWORD PTR [ebp-0x3abf154c],ecx
  41230d:	mov    DWORD PTR [ebx],ebp
  41230f:	or     dh,dl
  412311:	repz aas 
  412313:	push   ebp
  412314:	cs push edx
  412316:	cmc    
  412317:	in     eax,0x2e
  412319:	daa    
  41231a:	inc    eax
  41231b:	pop    ebp
  41231c:	cmp    esp,DWORD PTR [ebx]
  41231e:	pop    esp
  41231f:	add    cl,ah
  412321:	push   0xb
  412323:	aas    
  412324:	sbb    al,0x34
  412326:	inc    ebp
  412327:	mov    BYTE PTR [edx+0xb],bh
  41232a:	sub    eax,0x11a5f0fb
  41232f:	test   eax,0xa9144a5c
  412334:	(bad)  
  412335:	sar    DWORD PTR ss:[eax],cl
  412338:	loop   0x41232b
  41233a:	mov    BYTE PTR [edx],dh
  41233c:	aam    0xbc
  41233e:	inc    edx
  41233f:	jne    0x4122e2
  412341:	scas   al,BYTE PTR es:[edi]
  412342:	jl     0x41238e
  412344:	inc    ebp
  412345:	sbb    ecx,DWORD PTR [esi+0x5dfff814]
  41234b:	add    ah,BYTE PTR ds:0x36c9af54
  412351:	jl     0x41237f
  412353:	sub    BYTE PTR [eax],al
  412355:	jns    0x412349
  412357:	push   eax
  412358:	pop    ds
  412359:	les    eax,FWORD PTR [ebp-0x1fccb69d]
  41235f:	pop    edi
  412360:	pop    ss
  412361:	arpl   WORD PTR [edi],di
  412363:	dec    edi
  412364:	mov    esi,0xa8ca7be3
  412369:	adc    eax,0xeed7ee6b
  41236e:	cmp    BYTE PTR [eax-0x2],bl
  412371:	lods   al,BYTE PTR ds:[esi]
  412372:	add    eax,0xa08888ad
  412377:	out    dx,al
  412378:	sti    
  412379:	xchg   edx,eax
  41237a:	dec    ecx
  41237b:	xor    BYTE PTR [esi],dh
  41237d:	dec    edi
  41237e:	push   esi
  41237f:	stos   DWORD PTR es:[edi],eax
  412380:	and    al,0x83
  412382:	pop    ecx
  412383:	xor    al,0x14
  412385:	jle    0x412323
  412387:	lods   eax,DWORD PTR ds:[esi]
  412388:	and    esp,esi
  41238a:	and    al,cl
  41238c:	dec    ebx
  41238d:	jne    0x412339
  41238f:	js     0x412322
  412391:	xchg   DWORD PTR [ecx-0x4a],esp
  412394:	popa   
  412395:	mov    bl,ah
  412397:	arpl   WORD PTR [esp+edx*1],cx
  41239a:	inc    ebp
  41239b:	(bad)  
  41239d:	mov    ebp,0xebcbc14c
  4123a2:	std    
  4123a3:	nop
  4123a4:	(bad)
  4123a8:	test   DWORD PTR [esi+0x176d1b06],ecx
  4123ae:	sub    edx,0xffffffcf
  4123b1:	fcomp  QWORD PTR [eax]
  4123b3:	test   DWORD PTR [ebx+0x28],edi
  4123b6:	add    eax,0x847ff1be
  4123bb:	addr16 sbb al,0x67
  4123be:	out    dx,eax
  4123bf:	and    eax,0x51a095fc
  4123c4:	addr16 fs add ecx,ebp
  4123c8:	adc    DWORD PTR [edi+ebp*8],edi
  4123cb:	adc    edi,DWORD PTR [esp+ebp*1-0x7bfa7669]
  4123d2:	aaa    
  4123d3:	mov    al,ds:0x7ced1cbe
  4123d8:	or     BYTE PTR [ebp+0x3d21441e],ah
  4123de:	sbb    al,0xd8
  4123e0:	loop   0x4123c6
  4123e2:	call   0xa6a343b8
  4123e7:	test   DWORD PTR [ebp-0x6a],edi
  4123ea:	or     al,0x9d
  4123ec:	mov    BYTE PTR ds:0xfdf9de9f,cl
  4123f2:	js     0x4123d1
  4123f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123f5:	sti    
  4123f6:	mov    WORD PTR [ebx-0x2a1b473a],cs
  4123fc:	out    0x9f,eax
  4123fe:	scas   al,BYTE PTR es:[edi]
  4123ff:	dec    edx
  412400:	ins    BYTE PTR es:[edi],dx
  412401:	adc    eax,0x3d3777a9
  412406:	push   esp
  412407:	rol    BYTE PTR [ebp+0x137d520b],1
  41240d:	dec    esp
  41240e:	sub    BYTE PTR [ebp-0x6587ef0f],cl
  412414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412415:	imul   esp,DWORD PTR [edi],0x70
  412418:	jo     0x41242c
  41241a:	jmp    0xfb4e:0xc6d81b03
  412421:	mov    ch,0xf1
  412423:	push   edi
  412424:	fiadd  WORD PTR [edi+0x67a5359a]
  41242a:	sub    edx,DWORD PTR [ebp+0x45]
  41242d:	sbb    ebp,eax
  41242f:	ds or  al,0x69
  412432:	scas   al,BYTE PTR es:[edi]
  412433:	inc    eax
  412434:	xor    dh,BYTE PTR [eax+0x1fddf403]
  41243a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41243b:	jmp    0x412403
  41243d:	test   BYTE PTR [edi-0x197fe974],cl
  412443:	mov    ebx,0x7c4ed854
  412448:	sub    BYTE PTR [ecx+0x57],0x66
  41244c:	push   esp
  41244d:	fadd   DWORD PTR [ecx]
  41244f:	adc    BYTE PTR [edi],0x8c
  412452:	jmp    0x4b6c:0x90c6e8fc
  412459:	push   edx
  41245a:	jge    0x4123f5
  41245c:	repnz in al,dx
  41245e:	les    edi,FWORD PTR [ebx+0x110fe105]
  412464:	push   edi
  412465:	cmp    BYTE PTR [ebx+eax*1+0x7],al
  412469:	ror    DWORD PTR [ebx],1
  41246b:	mov    BYTE PTR [ebx-0x3d26a68f],dh
  412471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412472:	inc    edx
  412473:	iret   
  412474:	ror    BYTE PTR [edx+0x53],0x69
  412478:	xor    al,0x5
  41247a:	add    al,0x89
  41247c:	js     0x4124d3
  41247e:	jp     0x25f48c7e
  412484:	jl     0x412448
  412486:	ror    DWORD PTR [edx-0x67582ce7],0xae
  41248d:	(bad)  
  41248e:	pop    esi
  41248f:	adc    edx,ebp
  412491:	rcr    BYTE PTR [ebx+0x73669ab7],cl
  412497:	adc    DWORD PTR [ebp+0x7af1f36d],ecx
  41249d:	cmp    eax,0x501a825b
  4124a2:	cld    
  4124a3:	call   0x472b:0xa48013e4
  4124aa:	idiv   DWORD PTR [edi-0x428d1b9a]
  4124b0:	mov    BYTE PTR [esp+ebp*4],dl
  4124b3:	or     dl,al
  4124b5:	jle    0x4124e0
  4124b7:	push   eax
  4124b8:	sti    
  4124b9:	and    bh,BYTE PTR [ebp-0x1]
  4124bc:	sub    BYTE PTR [ecx+esi*4+0x29b6557],ah
  4124c3:	and    BYTE PTR es:0x82d685f7,0x4
  4124cb:	dec    esp
  4124cc:	xor    al,0x1
  4124ce:	in     al,dx
  4124cf:	mov    esp,0x94add667
  4124d4:	fsub   DWORD PTR [esi]
  4124d6:	retf   
  4124d7:	cdq    
  4124d8:	mov    esp,0x8ae74234
  4124dd:	xor    bl,ch
  4124df:	push   ss
  4124e0:	icebp  
  4124e1:	jle    0x4124bf
  4124e3:	retf   
  4124e4:	lock cld 
  4124e6:	ins    BYTE PTR es:[edi],dx
  4124e7:	xor    ch,bl
  4124e9:	mov    ah,0x19
  4124eb:	shl    bh,1
  4124ed:	pop    ss
  4124ee:	loope  0x412474
  4124f0:	fbstp  TBYTE PTR [ebx]
  4124f2:	ret    0xbe4c
  4124f5:	rcl    DWORD PTR [edi],1
  4124f7:	das    
  4124f8:	add    al,0xd6
  4124fa:	stos   DWORD PTR es:[edi],eax
  4124fb:	pop    ss
  4124fc:	loope  0x41248f
  4124fe:	push   edi
  4124ff:	popf   
  412500:	mov    DWORD PTR [ebp-0xb],esi
  412503:	dec    edx
  412504:	jns    0x412558
  412506:	jns    0x4124c8
  412508:	inc    ecx
  412509:	jmp    0xa5f1fa53
  41250e:	int    0xd1
  412510:	mov    edi,0x975f76b6
  412515:	popa   
  412516:	stos   BYTE PTR es:[edi],al
  412517:	test   BYTE PTR [ebx-0x1d7c0000],bl
  41251d:	loope  0x412578
  41251f:	inc    esp
  412520:	jb     0x41253d
  412522:	in     eax,dx
  412523:	sub    esp,eax
  412525:	popf   
  412526:	rol    BYTE PTR [edi-0x113d9cca],1
  41252c:	popf   
  41252d:	scas   eax,DWORD PTR es:[edi]
  41252e:	in     al,dx
  41252f:	test   BYTE PTR [eax*2-0x10bc3d35],0xa2
  412537:	rol    BYTE PTR [ebx+0x14ba9e1f],0x22
  41253e:	inc    edi
  41253f:	dec    ecx
  412540:	xor    dh,BYTE PTR [esi-0x66cb9959]
  412546:	imul   DWORD PTR [eax-0x48]
  412549:	adc    eax,0x7608e9dd
  41254e:	cld    
  41254f:	popf   
  412550:	popf   
  412551:	test   al,0xca
  412553:	push   edi
  412554:	and    eax,0x15fae33e
  412559:	jnp    0x412546
  41255b:	inc    ebx
  41255c:	lds    eax,FWORD PTR [ebx-0x4e4f3e70]
  412562:	aad    0x2c
  412564:	jecxz  0x4125ca
  412566:	inc    edi
  412567:	adc    ebp,DWORD PTR [esp+edx*4+0x2c584992]
  41256e:	sti    
  41256f:	jnp    0x4124fb
  412571:	dec    ecx
  412572:	lea    edx,[ebp+eax*4-0x24ac16e4]
  412579:	push   0xa
  41257b:	mov    ebx,0x7d6f1d1a
  412580:	js     0x41258f
  412582:	dec    ebx
  412583:	push   esp
  412584:	iret   
  412585:	or     esp,DWORD PTR [ebx+eiz*1+0x326f5996]
  41258c:	xchg   ebp,eax
  41258d:	mov    bh,0x7c
  41258f:	cwde   
  412590:	in     eax,dx
  412591:	jo     0x4125ac
  412593:	inc    eax
  412594:	call   0xf473:0xbe665656
  41259b:	mov    bl,0x6d
  41259d:	out    dx,al
  41259e:	dec    ebp
  41259f:	push   ebx
  4125a0:	jl     0x4125b1
  4125a2:	retf   
  4125a3:	arpl   WORD PTR [edi+edx*2+0x66956ac1],dx
  4125aa:	xor    edi,esi
  4125ac:	push   0x23002c8
  4125b1:	aad    0x1d
  4125b3:	addr16 push ebx
  4125b5:	jo     0x41261a
  4125b7:	mov    WORD PTR [ebp-0x23],?
  4125ba:	pop    esp
  4125bb:	jns    0x4125b9
  4125bd:	mov    edx,0x57c391
  4125c2:	add    ecx,DWORD PTR [ebp+0x13]
  4125c5:	bound  esp,QWORD PTR [ecx+edx*1]
  4125c8:	sbb    BYTE PTR [ebx+0x5ccde529],ah
  4125ce:	sbb    BYTE PTR [edx-0x544b8639],bl
  4125d4:	sbb    BYTE PTR [esi],cl
  4125d6:	call   0xe8d0:0xdfd0bdd4
  4125dd:	shl    BYTE PTR [ebx+ebp*1],cl
  4125e0:	pushf  
  4125e1:	es in  al,dx
  4125e3:	mov    bl,0xbc
  4125e5:	pop    ebx
  4125e6:	hlt    
  4125e7:	mov    ds:0x1840615d,al
  4125ec:	lods   al,BYTE PTR ds:[si]
  4125ee:	mov    bh,0x5
  4125f0:	adc    cl,dh
  4125f2:	mov    ebx,0xcbbb9d88
  4125f7:	cmp    DWORD PTR [edi+edi*8+0x14],ebp
  4125fb:	cmp    BYTE PTR [ecx+0x27d9a1e0],bh
  412601:	inc    eax
  412602:	scas   eax,DWORD PTR es:[edi]
  412603:	cmc    
  412604:	jne    0x41265a
  412606:	push   es
  412607:	jno    0x41267f
  412609:	add    ch,bh
  41260b:	cwde   
  41260c:	loope  0x412636
  41260e:	shr    ebx,1
  412610:	cmp    DWORD PTR [ebx],0xd0bd57d3
  412616:	jnp    0x412630
  412618:	xchg   esi,eax
  412619:	dec    esi
  41261a:	mov    bl,0x78
  41261c:	mov    ?,esp
  41261e:	hlt    
  41261f:	test   eax,0xa4a750a5
  412624:	inc    ebp
  412625:	push   ecx
  412626:	lea    eax,[ecx+0x1ca95274]
  41262c:	scas   eax,DWORD PTR es:[edi]
  41262d:	repnz cmp cl,BYTE PTR [edi*4-0x1d793d9b]
  412635:	sub    ah,BYTE PTR [edx+0x22ea48bc]
  41263b:	mov    ds:0xeefc1c7b,eax
  412640:	push   esp
  412641:	mov    esp,0xd33667c3
  412646:	inc    ebx
  412647:	in     al,0xf9
  412649:	shl    DWORD PTR [edi+0x35],1
  41264c:	daa    
  41264d:	push   ss
  41264e:	test   DWORD PTR [ecx+0x632f7ce8],eax
  412654:	add    eax,0x5e79a35f
  412659:	sub    eax,0xa2e5a962
  41265e:	mov    eax,ds:0xa698161
  412663:	mov    DWORD PTR [esi-0x2f],0x7fec4b3c
  41266a:	mov    edx,esi
  41266c:	sub    DWORD PTR [ecx+0x327bf3a2],0xffffff87
  412673:	hlt    
  412674:	sub    ecx,DWORD PTR [esi-0xce1e1f8]
  41267a:	sbb    eax,0x12f4e4d3
  41267f:	dec    ebp
  412680:	loopne 0x412666
  412682:	push   ds
  412683:	mov    al,ds:0x221e8965
  412688:	cmp    BYTE PTR [ebx],ch
  41268a:	push   ebp
  41268b:	(bad)  
  41268c:	xchg   esi,eax
  41268d:	mov    eax,0xbb408a43
  412692:	fwait
  412693:	or     ah,BYTE PTR [ecx+0x37]
  412696:	add    edx,ebp
  412698:	and    bh,BYTE PTR [esi+ebx*8-0x15]
  41269c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41269d:	sub    bh,BYTE PTR [esi+0x9]
  4126a0:	mov    esi,0x7c67e240
  4126a5:	(bad)  
  4126a6:	test   eax,0x5493c256
  4126ab:	xchg   edi,esi
  4126ad:	inc    ecx
  4126ae:	shr    BYTE PTR [edx],1
  4126b0:	or     DWORD PTR [edi+eiz*2],edx
  4126b3:	and    edx,DWORD PTR [ebx-0x34]
  4126b6:	mov    ss,WORD PTR [eax-0x3c]
  4126b9:	add    bl,BYTE PTR [edx+eiz*4]
  4126bc:	jno    0x4126e0
  4126be:	retf   
  4126bf:	or     edx,DWORD PTR [esi-0x7de1f671]
  4126c5:	inc    ecx
  4126c6:	mov    BYTE PTR [ecx+ecx*1+0x382cee6f],0x68
  4126ce:	cs pop eax
  4126d0:	add    bl,bh
  4126d2:	cmp    eax,0x7332d916
  4126d7:	add    DWORD PTR [eax-0x3dfe607e],ebx
  4126dd:	aaa    
  4126de:	fistp  QWORD PTR [ebx+0x64c900a2]
  4126e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126e5:	or     al,0xeb
  4126e7:	mov    eax,0xa74d39d8
  4126ec:	data16 jmp 0x4126e3
  4126ef:	xchg   ebp,eax
  4126f0:	jns    0x41268a
  4126f2:	cmp    BYTE PTR [ecx+0x2f],dh
  4126f5:	inc    ecx
  4126f6:	adc    al,0x48
  4126f8:	(bad)  
  4126f9:	jbe    0x4126fd
  4126fb:	push   edi
  4126fc:	in     eax,0x3a
  4126fe:	dec    ebx
  4126ff:	xor    esi,DWORD PTR [eax+0x394972c0]
  412705:	cdq    
  412706:	xor    ch,BYTE PTR [eax+0x7f]
  412709:	adc    esp,edx
  41270b:	adc    DWORD PTR [edx+0x2f],ecx
  41270e:	mul    BYTE PTR [ebp+0x6b696b1c]
  412714:	rcr    DWORD PTR [edi+esi*4+0x4eedcc3f],0xa6
  41271c:	loop   0x41278c
  41271e:	mov    ah,0xb9
  412720:	sub    eax,0x23f50e1d
  412725:	xchg   DWORD PTR [ecx-0x408b38f3],ecx
  41272b:	dec    ecx
  41272c:	iret   
  41272d:	push   edx
  41272e:	(bad)  
  41272f:	mov    BYTE PTR [esi],al
  412731:	repnz test BYTE PTR [eax+0x5ac4c7ea],0x43
  412739:	xchg   edi,eax
  41273a:	lahf   
  41273b:	repnz and DWORD PTR [edi+0x7],ecx
  41273f:	ds ss (bad) 
  412742:	mov    ds:0xc4b58ac6,al
  412747:	sar    DWORD PTR [ebx],cl
  412749:	sub    BYTE PTR [ebp+0x47],dl
  41274c:	mov    al,BYTE PTR [eax-0x27c0e901]
  412752:	pop    DWORD PTR [ebp-0x29]
  412755:	xchg   ebp,eax
  412756:	xchg   edx,eax
  412757:	and    edx,DWORD PTR [ebx]
  412759:	add    eax,esi
  41275b:	aad    0xbc
  41275d:	aaa    
  41275e:	xchg   esp,eax
  41275f:	(bad)  [edi]
  412761:	dec    edi
  412762:	and    al,0xb2
  412764:	jge    0x412745
  412766:	xchg   ecx,eax
  412767:	push   ss
  412768:	in     eax,0x1
  41276a:	mov    ecx,0x99d64be1
  41276f:	pop    ebp
  412770:	jmp    0x22b:0xa2304cc1
  412777:	add    edx,DWORD PTR [edx-0xd]
  41277a:	stos   BYTE PTR es:[edi],al
  41277b:	sub    eax,0x8be5de2a
  412780:	std    
  412781:	ret    
  412782:	mov    eax,ds:0xad363df9
  412787:	add    DWORD PTR [edx],eax
  412789:	loop   0x4127e7
  41278b:	arpl   WORD PTR [edi+0x1644bdb8],cx
  412791:	mov    eax,ebp
  412793:	inc    edx
  412794:	imul   eax,DWORD PTR [edx+esi*8],0xfffffff1
  412798:	lock fs dec ecx
  41279b:	cmp    eax,DWORD PTR [esi-0x75b0d70]
  4127a1:	(bad)  [esi+0x13]
  4127a4:	pop    ecx
  4127a6:	lahf   
  4127a7:	mov    WORD PTR [ecx-0x3],ds
  4127aa:	fcom   QWORD PTR [eax-0xe6d2c72]
  4127b0:	or     BYTE PTR [eax-0x21],al
  4127b3:	std    
  4127b4:	xchg   ebx,eax
  4127b5:	call   0x6959159d
  4127ba:	int3   
  4127bb:	scas   al,BYTE PTR es:[edi]
  4127bc:	xor    BYTE PTR [esp+edi*8-0x11d7f39b],dl
  4127c3:	push   esi
  4127c4:	repnz pushf 
  4127c6:	test   BYTE PTR [esi-0x34],cl
  4127c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127ca:	sbb    DWORD PTR [eax+esi*8],edx
  4127cd:	hlt    
  4127ce:	jmp    0x355:0x93713bf9
  4127d5:	imul   edi,DWORD PTR [esi+0x39],0xbfc439b3
  4127dc:	repz retf 
  4127de:	call   0xd167:0x3decffcc
  4127e5:	inc    ecx
  4127e6:	es std 
  4127e8:	inc    edx
  4127e9:	sti    
  4127ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127eb:	or     ecx,DWORD PTR [esi+0x1e]
  4127ee:	aad    0x4d
  4127f0:	mov    ah,0xf7
  4127f2:	fldenv [ebx]
  4127f4:	and    al,0xf9
  4127f6:	in     al,0xc5
  4127f8:	push   0xbe929a52
  4127fd:	mov    BYTE PTR [esi-0x38e97c11],bl
  412803:	pop    esp
  412804:	pop    ds
  412805:	inc    edx
  412806:	test   al,0xa
  412808:	mov    dl,0x53
  41280a:	sbb    ebx,edx
  41280c:	inc    esp
  41280d:	sahf   
  41280e:	sub    BYTE PTR [edx+0x48f65dc7],0x7b
  412815:	retf   
  412816:	in     eax,dx
  412817:	dec    ebp
  412818:	xor    ebp,DWORD PTR [edx-0x4b]
  41281b:	adc    dl,al
  41281d:	dec    ebp
  41281e:	or     al,0xe4
  412820:	ins    DWORD PTR es:[edi],dx
  412821:	leave  
  412822:	xchg   edx,eax
  412823:	dec    esi
  412824:	jecxz  0x41287d
  412826:	test   al,0xf5
  412828:	pop    edi
  412829:	fstp   DWORD PTR [edx]
  41282b:	xor    BYTE PTR [edi],0xed
  41282e:	arpl   WORD PTR [ebx+edx*2],bp
  412831:	cmc    
  412832:	icebp  
  412833:	cmp    eax,0x6f6d9be
  412838:	loop   0x41282f
  41283a:	cmp    BYTE PTR [ebp+0x69],cl
  41283d:	aas    
  41283e:	xchg   ecx,eax
  41283f:	std    
  412840:	in     al,dx
  412841:	ds aaa 
  412843:	mov    edi,DWORD PTR [ebx-0x59]
  412846:	fmul   DWORD PTR [eax+0x2f]
  412849:	jge    0x4128b0
  41284b:	lods   eax,DWORD PTR ds:[esi]
  41284c:	pushf  
  41284d:	push   edx
  41284e:	mov    edi,0x6edb7386
  412853:	mov    edi,DWORD PTR [edx+0x41]
  412856:	fucomip st,st(7)
  412858:	jmp    0x46e0:0x9e24d6a6
  41285f:	jmp    0x41281c
  412861:	add    al,BYTE PTR [eax]
  412863:	aad    0xe0
  412865:	sub    bh,BYTE PTR [ebx-0x682dc63e]
  41286b:	sub    al,0x6e
  41286d:	jmp    0x418f:0x7c2644d7
  412874:	out    0x8e,eax
  412876:	in     al,dx
  412877:	mov    BYTE PTR [ebx+0x643c219f],dh
  41287d:	loope  0x41287b
  41287f:	ins    BYTE PTR es:[edi],dx
  412880:	out    dx,eax
  412881:	movlps xmm6,QWORD PTR [eax-0x7e]
  412885:	dec    ebx
  412886:	loop   0x4128bb
  412888:	push   cs
  412889:	sbb    eax,0x354186f7
  41288e:	enter  0x13b5,0x24
  412892:	dec    eax
  412893:	loope  0x412828
  412895:	fadd   DWORD PTR [ecx-0x22d8fcae]
  41289b:	int3   
  41289c:	inc    ebx
  41289d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41289e:	fisubr DWORD PTR [ebp+edi*2+0x3c]
  4128a2:	xchg   edi,eax
  4128a3:	cdq    
  4128a4:	push   esi
  4128a5:	nop
  4128a6:	into   
  4128a7:	cmp    bh,BYTE PTR [edi+ebx*2-0x7147167b]
  4128ae:	fwait
  4128af:	(bad)  
  4128b0:	mov    dl,0x74
  4128b2:	fld    QWORD PTR [ecx+edx*4-0x4f]
  4128b6:	test   BYTE PTR [ecx+0x48],0xda
  4128ba:	cdq    
  4128bb:	fdivr  DWORD PTR [ebx-0x1c]
  4128be:	inc    eax
  4128bf:	aad    0xff
  4128c1:	aas    
  4128c2:	pop    ds
  4128c3:	push   0x26d91f33
  4128c8:	add    eax,0x66e30979
  4128cd:	mov    ebp,0x113025de
  4128d2:	scas   al,BYTE PTR es:[edi]
  4128d3:	pop    ds
  4128d4:	scas   eax,DWORD PTR es:[edi]
  4128d5:	cdq    
  4128d6:	gs and edi,edi
  4128d9:	mov    ebx,0x5f413e73
  4128de:	clc    
  4128df:	gs inc ecx
  4128e1:	out    0x54,eax
  4128e3:	cmp    ebx,0x72
  4128e6:	xor    al,0x4e
  4128e8:	push   edx
  4128e9:	jns    0x412953
  4128eb:	call   0x26ea:0x8cff3e05
  4128f2:	push   ecx
  4128f3:	cld    
  4128f4:	push   ebx
  4128f5:	pop    eax
  4128f6:	sbb    eax,0x5a078a78
  4128fb:	ja     0x412972
  4128fd:	mov    esi,ds
  4128ff:	mov    ch,0x69
  412901:	pushf  
  412902:	sub    eax,0x9e35d15
  412907:	ss lahf 
  412909:	xchg   ebx,eax
  41290a:	push   esp
  41290b:	push   cs
  41290c:	js     0x412974
  41290e:	int3   
  41290f:	call   DWORD PTR [eax]
  412911:	sbb    al,bl
  412913:	push   0xffffffcf
  412915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412916:	mov    es,WORD PTR [ebx+esi*8]
  412919:	xchg   ebp,eax
  41291a:	inc    ebp
  41291b:	add    BYTE PTR [edi-0x32],bl
  41291e:	les    edx,FWORD PTR gs:[edi+eiz*1-0x23]
  412923:	or     eax,0x9c5c8f58
  412928:	push   eax
  412929:	push   0x4b
  41292b:	retf   
  41292c:	popf   
  41292d:	(bad)  
  41292e:	repnz lds ecx,FWORD PTR [edi+0x1f2c341a]
  412935:	lahf   
  412936:	xor    ebx,DWORD PTR [esi]
  412938:	xor    DWORD PTR cs:[edx],0x496e8ede
  41293f:	mov    ah,0x81
  412941:	xor    eax,0xcb6b3bd3
  412946:	sbb    al,0x20
  412948:	es mov esi,0x70df8a66
  41294e:	(bad)  
  41294f:	xor    al,0x63
  412951:	ret    0x7c85
  412954:	arpl   dx,cx
  412956:	lods   al,BYTE PTR ds:[esi]
  412957:	add    ecx,esi
  412959:	pushf  
  41295a:	mov    cl,0x27
  41295c:	shl    esp,cl
  41295e:	ret    0xe91
  412961:	cmp    BYTE PTR [edi+esi*4],cl
  412964:	mov    ah,0x1f
  412966:	xchg   ebx,eax
  412967:	out    0xae,al
  412969:	aaa    
  41296a:	aam    0xaf
  41296c:	inc    ebx
  41296d:	std    
  41296e:	mov    bh,0xdd
  412970:	ret    0x9b41
  412973:	adc    ah,ah
  412975:	lea    esi,[ecx-0x7f26088d]
  41297b:	push   esp
  41297c:	ins    DWORD PTR es:[edi],dx
  41297d:	popa   
  41297e:	mov    dl,0x82
  412980:	cmp    al,0xb5
  412982:	mov    al,0x58
  412984:	xchg   edx,eax
  412985:	fsub   DWORD PTR [eax]
  412987:	mov    eax,ds:0x3f51e1cf
  41298c:	xor    ch,BYTE PTR [ecx]
  41298e:	repnz sbb al,0x4
  412991:	dec    ecx
  412992:	xchg   dx,ax
  412994:	pop    edi
  412995:	xchg   DWORD PTR [edi+0x1094363f],eax
  41299b:	or     esp,DWORD PTR [edx+eax*2]
  41299e:	lea    edi,[edx+0x49]
  4129a1:	xor    cl,BYTE PTR [esp+esi*4+0x615213ce]
  4129a8:	sub    DWORD PTR [ecx],ecx
  4129aa:	pusha  
  4129ab:	hlt    
  4129ac:	les    edi,FWORD PTR [ebx-0x556b3d51]
  4129b2:	fsubr  st,st(2)
  4129b4:	shl    DWORD PTR [edi-0xe],cl
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	xchg   esp,eax
  4129b9:	inc    DWORD PTR [ecx+0x58ef89e6]
  4129bf:	stc    
  4129c0:	(bad)  
  4129c1:	cdq    
  4129c2:	les    edi,FWORD PTR [edi]
  4129c4:	ins    BYTE PTR es:[edi],dx
  4129c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129c6:	mov    ebx,DWORD PTR [edx+eax*4]
  4129c9:	js     0x412a32
  4129cb:	mov    ds,WORD PTR ds:0x3bda7c99
  4129d1:	jmp    0xa8326306
  4129d6:	lods   eax,DWORD PTR ds:[esi]
  4129d7:	retf   
  4129d8:	sub    esp,DWORD PTR [edx-0x1c8d0f02]
  4129de:	push   ecx
  4129df:	lea    edi,[ecx-0x51]
  4129e2:	loopne 0x4129ac
  4129e4:	imul   eax,DWORD PTR [edx],0xec1d0541
  4129ea:	push   esi
  4129eb:	in     al,0x39
  4129ed:	push   edx
  4129ee:	bound  edi,QWORD PTR [edx-0x4f442516]
  4129f4:	fsubr  DWORD PTR [ebp-0x2183936c]
  4129fa:	pop    edi
  4129fb:	in     al,dx
  4129fc:	sbb    al,0xea
  4129fe:	push   ebp
  4129ff:	add    BYTE PTR [ecx-0x22],bl
  412a02:	retf   
  412a03:	jmp    0x4129fc
  412a05:	inc    ebp
  412a06:	into   
  412a07:	ss std 
  412a09:	or     ch,bl
  412a0b:	ss jmp 0x4129e4
  412a0e:	out    0xf8,al
  412a10:	mov    ecx,0x380bbcc9
  412a15:	aas    
  412a16:	fimul  WORD PTR [eax]
  412a18:	jns    0x4129d9
  412a1a:	aam    0xd9
  412a1c:	(bad)  
  412a1d:	nop
  412a1e:	mov    ebx,0xdd8829ae
  412a23:	out    dx,al
  412a24:	xchg   BYTE PTR [edx-0x3d],bh
  412a27:	cmp    al,0xc3
  412a29:	mov    edi,0x2d6d4b6
  412a2e:	inc    BYTE PTR [edx-0x1996b906]
  412a34:	mov    ebp,DWORD PTR [ecx-0x45]
  412a37:	mov    dh,0xf
  412a39:	nop
  412a3a:	mov    dl,0xd4
  412a3c:	push   esp
  412a3d:	push   ecx
  412a3e:	jnp    0x4129e7
  412a40:	cmp    ch,bh
  412a42:	js     0x412a3f
  412a44:	outs   dx,DWORD PTR ds:[esi]
  412a45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a46:	lods   eax,DWORD PTR ds:[esi]
  412a47:	mov    eax,0xd6860781
  412a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a4d:	sub    eax,0x7a4015c0
  412a52:	je     0x4129ed
  412a54:	push   esi
  412a55:	mov    ah,0x6a
  412a57:	fs pusha 
  412a59:	push   0xb81afd4f
  412a5e:	mov    esp,0x5bded5b0
  412a63:	and    al,BYTE PTR [eax-0x32]
  412a66:	push   ecx
  412a67:	cli    
  412a68:	xor    ah,BYTE PTR [ebx]
  412a6a:	xchg   esp,eax
  412a6b:	call   0xfc78:0x48b1b421
  412a72:	or     eax,0x220bb746
  412a77:	mov    ebp,0xb1db8c7d
  412a7c:	inc    ebx
  412a7d:	push   eax
  412a7e:	jns    0x412a84
  412a80:	aad    0xbd
  412a82:	(bad)  
  412a83:	call   0xe7ab2036
  412a88:	dec    edx
  412a89:	jg     0x412a40
  412a8b:	lahf   
  412a8c:	sub    BYTE PTR [edi+0x386e0ca2],ch
  412a92:	stc    
  412a93:	push   0x822fdaa1
  412a98:	pop    edi
  412a99:	es dec ecx
  412a9b:	cmc    
  412a9c:	xor    eax,0x41f2c8c4
  412aa1:	div    DWORD PTR [edi+0x1f]
  412aa4:	ss or  al,0xff
  412aa7:	js     0x412ad1
  412aa9:	jecxz  0x412a59
  412aab:	fs cld 
  412aad:	gs out dx,al
  412aaf:	xor    eax,0x99be5ca
  412ab4:	rcr    BYTE PTR [ebp+0x3c],1
  412ab7:	xor    cl,BYTE PTR [eax]
  412ab9:	mov    ds:0xdb67ca08,eax
  412abe:	in     al,0xe4
  412ac0:	jo     0x412aaa
  412ac2:	ret    0x417e
  412ac5:	mov    ah,0x49
  412ac7:	in     al,0x60
  412ac9:	into   
  412aca:	lods   eax,DWORD PTR ds:[esi]
  412acb:	pop    ss
  412acc:	push   ebx
  412acd:	dec    ebp
  412ace:	sub    al,0x46
  412ad0:	stc    
  412ad1:	loop   0x412b06
  412ad3:	push   eax
  412ad4:	(bad)  
  412ad5:	xchg   ebx,eax
  412ad6:	hlt    
  412ad7:	out    dx,eax
  412ad8:	dec    edx
  412ad9:	dec    eax
  412ada:	or     BYTE PTR ds:0x7d61b09a,cl
  412ae0:	add    DWORD PTR ds:0x1938a90,edx
  412ae6:	push   ecx
  412ae7:	push   edx
  412ae8:	gs dec edx
  412aea:	pop    edi
  412aeb:	clc    
  412aec:	aad    0x3e
  412aee:	jb     0x412a87
  412af0:	and    eax,0xe86ff8d6
  412af5:	int3   
  412af6:	in     eax,0x4d
  412af8:	clc    
  412af9:	push   0x4a
  412afb:	xchg   ecx,eax
  412afc:	mov    esi,0xdd58171e
  412b01:	gs push edi
  412b03:	fcom   DWORD PTR [ecx+0x5a]
  412b06:	or     dh,bh
  412b08:	mov    BYTE PTR [edx-0x2cf64654],ch
  412b0e:	mov    esi,0x26cd54c8
  412b13:	jo     0x412b51
  412b15:	sbb    al,0xf6
  412b17:	mov    DWORD PTR [edi-0x7e],esi
  412b1a:	sub    BYTE PTR [eax],cl
  412b1c:	adc    BYTE PTR [ebx],dl
  412b1e:	inc    esi
  412b1f:	leave  
  412b20:	fnstcw WORD PTR [eax+0x72c25c65]
  412b26:	(bad)  
  412b27:	push   ss
  412b28:	pop    ebx
  412b29:	push   0x5e93348e
  412b2e:	and    BYTE PTR [ebp+0x6c],dh
  412b31:	int    0x9
  412b33:	fxch   st(5)
  412b35:	or     al,ch
  412b37:	test   al,0xdf
  412b39:	outs   dx,BYTE PTR ds:[esi]
  412b3a:	push   esp
  412b3b:	cli    
  412b3c:	ja     0x412b69
  412b3e:	pop    edx
  412b3f:	xchg   ecx,eax
  412b40:	and    bl,bh
  412b42:	mov    WORD PTR [edi+0x47],?
  412b45:	mov    al,0xd
  412b47:	ds retf 0x3fad
  412b4b:	xor    DWORD PTR [edx-0x6878d386],ebx
  412b51:	outs   dx,BYTE PTR cs:[esi]
  412b53:	pop    ebx
  412b54:	cmp    BYTE PTR [eax+edi*8],dl
  412b57:	pop    ebp
  412b58:	sub    dl,bl
  412b5a:	add    al,0x4f
  412b5c:	data16 cld 
  412b5e:	push   ecx
  412b5f:	mov    ds:0xe0761fac,eax
  412b64:	(bad)  [esi+0x74]
  412b67:	jns    0x412aee
  412b69:	icebp  
  412b6a:	push   es
  412b6b:	daa    
  412b6c:	mov    BYTE PTR [ecx],ah
  412b6e:	or     dh,al
  412b70:	pop    es
  412b71:	xor    eax,0xf98cc083
  412b76:	ins    DWORD PTR es:[edi],dx
  412b77:	cmc    
  412b78:	out    0xe6,al
  412b7a:	(bad)  
  412b7b:	sahf   
  412b7c:	or     ecx,DWORD PTR [edx-0x5a]
  412b7f:	dec    edi
  412b80:	cs pop ebx
  412b82:	(bad)  
  412b83:	pop    es
  412b84:	test   al,0xfa
  412b86:	jle    0x412be4
  412b88:	in     al,dx
  412b89:	inc    ebx
  412b8a:	test   BYTE PTR [esi-0x4db9af54],bl
  412b90:	push   esp
  412b91:	add    ch,BYTE PTR [edi-0xbc74173]
  412b97:	into   
  412b98:	jo     0x412b64
  412b9a:	mov    ebx,?
  412b9c:	jnp    0x412bc5
  412b9e:	loopne 0x412b86
  412ba0:	es scas eax,DWORD PTR es:[edi]
  412ba2:	push   esi
  412ba3:	jmp    FWORD PTR [edi-0x6b]
  412ba6:	and    ecx,edx
  412ba8:	adc    ebx,DWORD PTR [ebp-0x3d6db30e]
  412bae:	lods   al,BYTE PTR ds:[esi]
  412baf:	xor    al,0x7d
  412bb1:	jp     0x412b7e
  412bb3:	leave  
  412bb4:	cmp    BYTE PTR [ebx],0x4c
  412bb7:	ret    0x80cd
  412bba:	lods   al,BYTE PTR ds:[esi]
  412bbb:	ficom  WORD PTR [edx]
  412bbd:	repz in eax,0x61
  412bc0:	test   al,0x72
  412bc2:	(bad)  
  412bc3:	jmp    0x71ac:0x6fd36749
  412bca:	test   al,0x3f
  412bcc:	sbb    eax,0x6c2e99fc
  412bd1:	push   eax
  412bd2:	(bad)  
  412bd3:	lock gs adc dh,ah
  412bd7:	push   ecx
  412bd8:	fcomip st,st(3)
  412bda:	call   0xe1970d05
  412bdf:	inc    esp
  412be0:	pop    eax
  412be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412be2:	pop    ecx
  412be3:	or     edi,ebp
  412be5:	dec    esp
  412be6:	xlat   BYTE PTR ds:[ebx]
  412be7:	rcr    ebx,cl
  412be9:	push   ebx
  412bea:	loope  0x412c37
  412bec:	mov    dl,0x9b
  412bee:	pop    ds
  412bef:	fisttp WORD PTR [ebx+0x47]
  412bf2:	leave  
  412bf3:	stc    
  412bf4:	test   ah,bl
  412bf6:	sub    cl,bl
  412bf8:	dec    edx
  412bf9:	int    0x9c
  412bfb:	mov    bl,BYTE PTR [edx]
  412bfd:	xor    al,0x4b
  412bff:	(bad)  
  412c00:	mov    ebx,DWORD PTR [ecx*2-0x232f8faf]
  412c07:	and    BYTE PTR ds:0x67abb073,cl
  412c0d:	push   ds
  412c0e:	cmp    edx,esi
  412c10:	stos   BYTE PTR es:[edi],al
  412c11:	dec    edi
  412c12:	and    DWORD PTR [edx+0x9],esp
  412c15:	(bad)  
  412c16:	lods   eax,DWORD PTR ds:[esi]
  412c17:	and    al,bl
  412c19:	scas   eax,DWORD PTR es:[edi]
  412c1a:	adc    eax,0x9077ea6d
  412c1f:	je     0x412c8d
  412c21:	scas   eax,DWORD PTR es:[edi]
  412c22:	rcl    BYTE PTR [ebp+0x54f9f99d],0x9
  412c29:	call   0x1026:0xf4c077cc
  412c30:	xor    al,0xdc
  412c32:	mov    edi,0x7485eb8c
  412c37:	adc    DWORD PTR [ebx],esp
  412c39:	or     BYTE PTR [edi+0x23],cl
  412c3c:	add    BYTE PTR es:[edi+ebx*4],cl
  412c40:	sub    DWORD PTR [ebp-0x5548846c],ebx
  412c46:	xchg   edx,eax
  412c47:	out    dx,al
  412c48:	popa   
  412c49:	mov    ds:0x6f2fa6b5,al
  412c4e:	lods   al,BYTE PTR ds:[esi]
  412c4f:	cdq    
  412c50:	pop    ss
  412c51:	push   eax
  412c52:	push   ebx
  412c53:	push   0xf38aefe8
  412c58:	xor    cl,BYTE PTR [eax+0x5b]
  412c5b:	test   DWORD PTR [eax+0x10],ecx
  412c5e:	jecxz  0x412c13
  412c60:	xor    al,0x7
  412c62:	pop    ecx
  412c63:	ficom  DWORD PTR [ebx+esi*8]
  412c66:	xor    bl,bh
  412c68:	ins    BYTE PTR es:[edi],dx
  412c69:	mov    edi,0x59e8ab49
  412c6e:	fucomp st(5)
  412c70:	jns    0x412c27
  412c72:	clc    
  412c73:	mov    al,ds:0xdbc8c00
  412c78:	fstp   TBYTE PTR [esi-0x20c813b7]
  412c7e:	aad    0xa2
  412c80:	cli    
  412c81:	cmc    
  412c82:	xchg   BYTE PTR [edi],bh
  412c84:	xor    BYTE PTR [esi-0xa6f82e7],bh
  412c8a:	xor    DWORD PTR ds:[edi-0x71],0x23
  412c8f:	dec    ecx
  412c90:	jg     0x412c1f
  412c92:	in     al,0x75
  412c94:	dec    esi
  412c95:	add    eax,0x29ecc55d
  412c9a:	call   0x7305956a
  412c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca0:	in     eax,dx
  412ca1:	mov    ch,0x6
  412ca3:	mov    eax,0x6ba37f37
  412ca8:	test   eax,0x8d0a0a8a
  412cad:	push   edi
  412cae:	ror    BYTE PTR [esi],1
  412cb0:	push   esp
  412cb1:	shl    ebx,cl
  412cb3:	jne    0x412ca3
  412cb5:	or     eax,0x85bfd1c2
  412cba:	cwde   
  412cbb:	mov    bl,0xde
  412cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cbe:	pop    edi
  412cbf:	mov    cs,WORD PTR ds:0xf47e45ec
  412cc5:	shr    WORD PTR [eax-0x4],1
  412cc9:	hlt    
  412cca:	jnp    0x412d41
  412ccc:	xchg   edi,eax
  412ccd:	xchg   ecx,eax
  412cce:	mov    dl,0x2d
  412cd0:	pushf  
  412cd1:	sub    BYTE PTR [ebx+0xae20475],dl
  412cd7:	cs aas 
  412cd9:	iret   
  412cda:	or     BYTE PTR [edi-0x3d83e06e],bh
  412ce0:	jmp    0x3e10e7b4
  412ce5:	leave  
  412ce6:	dec    ecx
  412ce7:	or     edx,0xffffffe8
  412cea:	test   al,0x8c
  412cec:	outs   dx,BYTE PTR ds:[esi]
  412ced:	mov    BYTE PTR [eax],al
  412cef:	jno    0x412d4d
  412cf1:	adc    esi,DWORD PTR [ebp-0x7445b3d3]
  412cf7:	add    cl,ch
  412cf9:	mov    al,ds:0x44ea806d
  412cfe:	xchg   ebp,eax
  412cff:	cmp    BYTE PTR [ebx+eiz*1],dl
  412d02:	adc    BYTE PTR [ebx-0x2b6c98b5],ch
  412d08:	les    ebx,FWORD PTR fs:[edx+0x5a099161]
  412d0f:	aaa    
  412d10:	inc    ecx
  412d11:	xor    eax,0x15610af6
  412d16:	and    al,0x5d
  412d18:	(bad)  
  412d19:	push   ecx
  412d1a:	pop    esi
  412d1b:	mov    eax,ds:0x201f61b4
  412d20:	js     0x412d83
  412d22:	(bad)  
  412d23:	sub    edi,DWORD PTR [edi-0x73e2469f]
  412d29:	jle    0x412d81
  412d2b:	mov    dh,0x76
  412d2d:	push   eax
  412d2e:	and    ah,dl
  412d30:	in     al,0x67
  412d32:	outs   dx,BYTE PTR ds:[esi]
  412d33:	in     eax,dx
  412d34:	push   edx
  412d35:	xchg   esp,eax
  412d36:	cs jmp 0x9d30:0x8096d3c6
  412d3e:	mov    al,ds:0xf5945100
  412d43:	repz pop es
  412d45:	or     BYTE PTR [eax-0x32],dl
  412d48:	stc    
  412d49:	push   edx
  412d4a:	sub    dh,BYTE PTR [ebx-0x30258696]
  412d50:	fcom   DWORD PTR [ebx+0x3c35b8ad]
  412d56:	push   ecx
  412d57:	push   ebx
  412d58:	es ins BYTE PTR es:[edi],dx
  412d5a:	pop    es
  412d5b:	or     al,0xc3
  412d5d:	or     BYTE PTR [ebx-0x55],ch
  412d60:	push   esp
  412d61:	loope  0x412d2e
  412d63:	or     eax,0x7dd633b9
  412d68:	inc    eax
  412d69:	add    eax,0x481b98ea
  412d6e:	nop
  412d6f:	test   al,0x86
  412d71:	lea    edx,[edi]
  412d73:	dec    ebx
  412d74:	inc    ebp
  412d75:	dec    esp
  412d76:	push   edx
  412d77:	xlat   BYTE PTR ds:[ebx]
  412d78:	lods   eax,DWORD PTR ds:[esi]
  412d79:	pop    ss
  412d7a:	das    
  412d7b:	xor    eax,0x6cefc06e
  412d80:	adc    eax,0x7bef440f
  412d85:	and    edx,DWORD PTR [esi-0x7]
  412d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d89:	cmp    eax,0x77325639
  412d8e:	and    eax,0x2a13a4fb
  412d93:	push   ss
  412d94:	mov    cl,0xfb
  412d96:	xor    al,0x46
  412d98:	xchg   edi,eax
  412d99:	add    al,al
  412d9b:	and    cl,cl
  412d9d:	cmp    al,0xaa
  412d9f:	(bad)  
  412da0:	aad    0x23
  412da2:	mov    eax,0xfed32e5
  412da7:	push   ebx
  412da8:	mov    dh,0xb7
  412daa:	adc    cl,BYTE PTR [ebx-0x11]
  412dad:	(bad)  
  412dae:	mov    eax,0xbeef674f
  412db3:	cwde   
  412db4:	add    BYTE PTR [ebx+0x22],ch
  412db7:	ins    BYTE PTR es:[edi],dx
  412db8:	loopne 0x412d69
  412dba:	sbb    al,0x89
  412dbc:	fiadd  DWORD PTR [ecx+0x36]
  412dbf:	xchg   edi,eax
  412dc0:	repnz in eax,0xcf
  412dc3:	int    0xfd
  412dc5:	dec    ebx
  412dc6:	inc    ebx
  412dc7:	dec    ecx
  412dc8:	nop
  412dc9:	mov    bl,0xa1
  412dcb:	rcr    DWORD PTR [esi+0x263fa55f],0x7a
  412dd2:	jb     0x412df5
  412dd4:	sub    ch,BYTE PTR [edx+0x46]
  412dd7:	faddp  st(3),st
  412dd9:	pop    ebp
  412dda:	sbb    BYTE PTR [ecx+0x51],0x3c
  412dde:	adc    esi,ebx
  412de0:	adc    edx,0xffffff9f
  412de3:	add    dh,0x6b
  412de6:	dec    esi
  412de7:	pushf  
  412de8:	adc    cl,BYTE PTR [ebx+esi*2]
  412deb:	int3   
  412dec:	push   ds
  412ded:	jns    0x412e14
  412def:	cmp    esp,esp
  412df1:	cmc    
  412df2:	aas    
  412df3:	inc    edi
  412df4:	cmp    eax,0x35147e30
  412df9:	test   BYTE PTR [ebx],dh
  412dfb:	mov    ebp,0x587d43b1
  412e00:	repnz fdivr QWORD PTR [ecx+ecx*2]
  412e04:	mov    ds:0x1242e1de,eax
  412e09:	fwait
  412e0a:	xchg   BYTE PTR [edi-0x1b],bh
  412e0d:	int3   
  412e0e:	dec    eax
  412e0f:	mov    dh,0x1d
  412e11:	sahf   
  412e12:	stos   DWORD PTR es:[edi],eax
  412e13:	push   es
  412e14:	pop    esi
  412e15:	mov    esp,0x1ace9f08
  412e1a:	inc    edx
  412e1b:	or     bl,BYTE PTR [ebx+0x2f]
  412e1e:	dec    eax
  412e1f:	add    DWORD PTR [esp+ebx*8+0x2c],ebp
  412e23:	dec    esp
  412e24:	dec    ebx
  412e25:	leave  
  412e26:	mov    bh,0xd5
  412e28:	push   ebp
  412e29:	or     al,0x9d
  412e2b:	ins    BYTE PTR es:[edi],dx
  412e2c:	fs cld 
  412e2e:	sub    DWORD PTR [esp+eax*2-0x5d4cd798],ebx
  412e35:	xchg   ebx,eax
  412e36:	xchg   ah,ah
  412e38:	retf   
  412e39:	les    ebp,FWORD PTR [esi+0x1ff41fc7]
  412e3f:	out    0x8c,eax
  412e41:	pop    es
  412e42:	mov    cl,0xf5
  412e44:	jmp    0x412e2c
  412e46:	push   esi
  412e47:	add    DWORD PTR [eax+0x1a],esp
  412e4a:	sbb    al,0x6a
  412e4c:	push   esi
  412e4d:	dec    esp
  412e4e:	pushf  
  412e4f:	mov    bl,0x6a
  412e51:	in     eax,0x21
  412e53:	jne    0x412e27
  412e55:	iret   
  412e56:	jmp    0x820a0cbb
  412e5b:	iret   
  412e5c:	pop    es
  412e5d:	lahf   
  412e5e:	adc    DWORD PTR [ebp-0x33922fc2],0xa
  412e65:	xchg   edi,eax
  412e66:	in     al,dx
  412e67:	jmp    0x4e85:0x30e14fd1
  412e6e:	sbb    al,0x3e
  412e70:	mov    DWORD PTR [edx-0x5a1c68f9],ebp
  412e76:	sbb    ah,BYTE PTR [ecx-0x3ae4572c]
  412e7c:	jp     0x412e0c
  412e7e:	inc    ebp
  412e7f:	dec    ebp
  412e80:	add    eax,0x684a747f
  412e85:	xchg   ecx,eax
  412e86:	sub    BYTE PTR [edi+ebp*1-0x1b],dh
  412e8a:	and    cl,ch
  412e8c:	ja     0x412ec5
  412e8e:	mov    dh,0x56
  412e90:	mov    ecx,0x5627c747
  412e95:	mov    gs,WORD PTR [esp+ebx*2-0x4e]
  412e99:	add    DWORD PTR ds:0x48275f11,esp
  412e9f:	sub    BYTE PTR [edx],al
  412ea1:	(bad)  
  412ea2:	push   edx
  412ea3:	xor    BYTE PTR [ecx+0x5b],bh
  412ea6:	push   ss
  412ea7:	fild   WORD PTR [eax+0x638ff3]
  412ead:	adc    DWORD PTR [eax],edx
  412eaf:	and    ch,BYTE PTR [esp+ecx*8]
  412eb2:	sti    
  412eb3:	pop    eax
  412eb4:	jl     0x412ed0
  412eb6:	data16 mov bl,0x5b
  412eb9:	and    DWORD PTR fs:[esi],esi
  412ebc:	mov    eax,ds:0xb211130a
  412ec1:	adc    al,0xe3
  412ec3:	(bad)  
  412ec4:	out    dx,al
  412ec5:	(bad)  
  412ec6:	push   ds
  412ec7:	fnstcw WORD PTR ds:0x5793f9d8
  412ecd:	inc    ebx
  412ece:	cmp    al,0x51
  412ed0:	je     0x412f34
  412ed2:	shr    BYTE PTR ds:0x2b1a735,cl
  412ed8:	jae    0x412e67
  412eda:	test   DWORD PTR [eax-0x5d],0x920d0004
  412ee1:	or     al,ah
  412ee3:	(bad)  
  412ee4:	mov    ah,0x1d
  412ee6:	adc    eax,DWORD PTR [eax]
  412ee8:	sbb    ebp,DWORD PTR [ebp+0x53cb4bd7]
  412eee:	lar    ebx,dx
  412ef1:	push   ebx
  412ef2:	sbb    DWORD PTR [edx-0x61],ebx
  412ef5:	fld    st(0)
  412ef7:	mov    BYTE PTR [edi+eiz*4+0x132d81cb],dl
  412efe:	mov    BYTE PTR [ebx+0x7af396d1],dl
  412f04:	xchg   esp,eax
  412f05:	retf   
  412f06:	loopne 0x412ebf
  412f08:	sub    BYTE PTR [eax],bl
  412f0a:	loop   0x412f0d
  412f0c:	sahf   
  412f0d:	out    dx,al
  412f0e:	adc    eax,0x88d1edbc
  412f13:	scas   eax,DWORD PTR es:[edi]
  412f14:	pop    ecx
  412f15:	mov    ebx,0xf69317e9
  412f1a:	mov    esi,0xd17f842a
  412f1f:	jae    0x412f11
  412f21:	adc    dl,bh
  412f23:	cmp    al,0x37
  412f25:	test   DWORD PTR [edx-0x5b0a5de2],0x4ca8209b
  412f2f:	add    eax,0x81346745
  412f34:	imul   DWORD PTR [esi+0x711f0392]
  412f3a:	xchg   ebp,eax
  412f3b:	ja     0x412f9b
  412f3d:	lods   eax,DWORD PTR ds:[esi]
  412f3e:	or     al,0xd0
  412f40:	xchg   edi,eax
  412f41:	inc    ecx
  412f42:	in     al,dx
  412f43:	mov    eax,ds:0xd87c3bf2
  412f48:	adc    BYTE PTR [edi-0x16632e49],dh
  412f4e:	xchg   esp,eax
  412f4f:	push   ds
  412f50:	shr    DWORD PTR [ecx],1
  412f52:	sbb    al,0xcd
  412f54:	dec    esp
  412f55:	iret   
  412f56:	ja     0x412f11
  412f58:	das    
  412f59:	call   0x9116:0x28f45f14
  412f60:	push   esi
  412f61:	xchg   BYTE PTR [edi+0x7a88f578],bh
  412f67:	sub    eax,DWORD PTR [edi-0x585ca7c]
  412f6d:	adc    dh,BYTE PTR [ebp+edi*2+0x4f]
  412f71:	xor    BYTE PTR [eax+0x2e],bl
  412f74:	repnz cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  412f77:	cmp    ch,BYTE PTR [ecx]
  412f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f7a:	xor    ecx,ebx
  412f7c:	es mov ch,0x1a
  412f7f:	or     DWORD PTR [eax-0x3626d87b],esp
  412f85:	mov    eax,0x4aa652dc
  412f8a:	xchg   ebx,eax
  412f8b:	push   edi
  412f8c:	ret    0x5c18
  412f8f:	hlt    
  412f90:	pusha  
  412f91:	sub    al,0x4c
  412f93:	pop    esp
  412f94:	and    ah,BYTE PTR [eax]
  412f96:	xchg   esi,eax
  412f97:	and    eax,0xbbff5e57
  412f9c:	hlt    
  412f9d:	mov    esp,0x3e4547e2
  412fa2:	sub    al,0xfe
  412fa4:	cmc    
  412fa5:	enter  0x17a3,0x93
  412fa9:	imul   esp,DWORD PTR [ebp-0x5661d5b6],0x1
  412fb0:	imul   eax,DWORD PTR [edx],0x7ec11cf2
  412fb6:	int    0x20
  412fb8:	mov    ebx,0x75a500f5
  412fbd:	imul   ebp,ebp,0xb799179
  412fc3:	(bad)  
  412fc4:	pop    eax
  412fc5:	pushf  
  412fc6:	sbb    bl,dh
  412fc8:	push   edi
  412fc9:	mov    ?,eax
  412fcb:	dec    ecx
  412fcc:	xchg   ebp,eax
  412fcd:	xor    cl,BYTE PTR [ecx+0x3d9eb1ee]
  412fd3:	in     eax,0xdd
  412fd5:	sbb    al,dh
  412fd7:	mov    ah,0xb
  412fd9:	out    dx,eax
  412fda:	dec    eax
  412fdb:	xchg   DWORD PTR [edi+0x11],esi
  412fde:	inc    esp
  412fdf:	cmc    
  412fe0:	mov    es,WORD PTR [eax]
  412fe2:	push   edi
  412fe3:	sbb    BYTE PTR [eax],bh
  412fe5:	int3   
  412fe6:	mov    cl,0x5d
  412fe8:	retf   
  412fe9:	popa   
  412fea:	pop    edi
  412feb:	test   cl,ch
  412fed:	in     al,dx
  412fee:	pop    ss
  412fef:	in     eax,dx
  412ff0:	imul   BYTE PTR [esi+ebx*2-0x79]
  412ff4:	ins    BYTE PTR es:[edi],dx
  412ff5:	aam    0x30
  412ff7:	pop    edx
  412ff8:	inc    esi
  412ff9:	jmp    0x412fca
  412ffb:	jp     0x413078
  412ffd:	mov    ?,WORD PTR [ecx-0x71]
  413000:	(bad)  
  413001:	and    DWORD PTR [ecx+ecx*1-0xf],eax
  413005:	and    eax,0x55c7ec98
  41300a:	lock jo 0x413006
  41300d:	call   DWORD PTR [esi-0x599d7435]
  413013:	jns    0x412fc5
  413015:	inc    esp
  413016:	ins    BYTE PTR es:[edi],dx
  413017:	adc    ebx,esi
  413019:	adc    BYTE PTR [esi],dl
  41301b:	push   ecx
  41301c:	repnz jecxz 0x41303b
  41301f:	inc    esp
  413020:	outs   dx,DWORD PTR ds:[esi]
  413021:	jmp    0xe304:0x5f4af0c5
  413028:	inc    edx
  413029:	xchg   ebp,eax
  41302a:	stc    
  41302b:	fistp  DWORD PTR [ebx+0x3a8ecd]
  413031:	cdq    
  413032:	nop
  413033:	mov    ebp,0x1e23abbc
  413038:	pop    edi
  413039:	sbb    eax,0x22d068cc
  41303e:	push   ss
  41303f:	sub    DWORD PTR [ecx-0x63],edi
  413042:	(bad)  
  413043:	mov    dh,0xc0
  413045:	in     eax,dx
  413046:	into   
  413047:	add    al,ch
  413049:	imul   DWORD PTR [ebx]
  41304b:	test   edi,ecx
  41304d:	bnd je 0x4130c1
  413050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413051:	adc    eax,0xafd649d4
  413056:	xor    cl,BYTE PTR [ebx+esi*2-0x5a]
  41305a:	jns    0x413015
  41305c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41305d:	jg     0x413064
  41305f:	push   ecx
  413060:	xor    ch,BYTE PTR fs:[eax-0x4a]
  413064:	lahf   
  413065:	cmp    BYTE PTR [eax],al
  413067:	(bad)  
  413068:	repz and eax,0x18d1e381
  41306e:	fld    QWORD PTR [esi-0x3a]
  413071:	mul    BYTE PTR [eax+0x7579df4e]
  413077:	outs   dx,BYTE PTR ds:[esi]
  413078:	mov    edx,0x5ac6e3d1
  41307d:	inc    ebp
  41307e:	or     bh,ch
  413080:	inc    esp
  413081:	dec    esi
  413082:	mov    ch,0x1
  413084:	ret    0xd524
  413087:	(bad)
  41308a:	das    
  41308b:	push   0xf892dabd
  413090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413091:	xchg   ecx,eax
  413092:	ja     0x4130f8
  413094:	mov    ebx,0xf90897a1
  413099:	stos   DWORD PTR es:[edi],eax
  41309a:	je     0x413035
  41309c:	dec    esi
  41309d:	out    dx,eax
  41309e:	addr16 dec ecx
  4130a0:	lods   eax,DWORD PTR ds:[esi]
  4130a1:	js     0x4130f8
  4130a3:	into   
  4130a4:	or     dh,BYTE PTR [eax+0x18]
  4130a7:	(bad)  
  4130a9:	in     al,0x33
  4130ab:	mov    ebx,0x1ae72b
  4130b0:	inc    ecx
  4130b1:	mov    esi,0x960fdf9b
  4130b6:	movaps XMMWORD PTR [edx+0x48],xmm5
  4130ba:	hlt    
  4130bb:	in     eax,dx
  4130bc:	and    ah,BYTE PTR [eax+0x3ea1f07b]
  4130c2:	out    dx,eax
  4130c3:	out    0x69,al
  4130c5:	pop    esi
  4130c6:	loopne 0x41309a
  4130c8:	iret   
  4130c9:	ins    BYTE PTR es:[edi],dx
  4130ca:	or     dl,BYTE PTR [edi+edx*2]
  4130cd:	push   0x51
  4130cf:	pop    edx
  4130d0:	ins    BYTE PTR es:[edi],dx
  4130d1:	nop
  4130d2:	sbb    eax,0x4ea2d00d
  4130d7:	xor    ah,dh
  4130d9:	ds inc esp
  4130db:	nop
  4130dc:	xchg   ebx,eax
  4130dd:	push   cs
  4130de:	leave  
  4130df:	std    
  4130e0:	cmc    
  4130e1:	lds    eax,FWORD PTR [eax+ebx*1]
  4130e4:	mov    edx,0xf74d66dd
  4130e9:	pop    ebp
  4130ea:	and    ecx,ebp
  4130ec:	push   edi
  4130ed:	sbb    BYTE PTR fs:[esi],bh
  4130f0:	pop    ss
  4130f1:	pop    esi
  4130f2:	scas   al,BYTE PTR es:[edi]
  4130f3:	aas    
  4130f4:	ins    DWORD PTR es:[edi],dx
  4130f5:	test   BYTE PTR [ebp+0x78],ah
  4130f8:	pop    ebp
  4130f9:	inc    esi
  4130fa:	aaa    
  4130fb:	(bad)  
  4130fc:	not    dh
  4130fe:	xor    eax,0xab8a6794
  413103:	xchg   ecx,eax
  413104:	ror    DWORD PTR [ebx-0xaba0b94],0xbe
  41310b:	push   edx
  41310c:	or     DWORD PTR [edx+0x50],esi
  41310f:	cmp    al,0xda
  413111:	add    eax,0xa180c9c9
  413116:	mov    DWORD PTR fs:[esi],ebx
  413119:	es inc edx
  41311b:	push   edi
  41311c:	stos   DWORD PTR es:[edi],eax
  41311d:	sahf   
  41311e:	pop    ecx
  41311f:	mov    ds:0x4a325311,eax
  413124:	xchg   ebp,eax
  413125:	out    dx,eax
  413126:	pusha  
  413127:	dec    ebx
  413128:	and    eax,0x4e8c1def
  41312d:	ja     0x4130e6
  41312f:	call   0xb82c36f6
  413134:	pop    ebx
  413135:	mov    edx,0xb2d4b316
  41313a:	xor    dh,BYTE PTR [edx+ebp*1]
  41313d:	out    0x3c,eax
  41313f:	icebp  
  413140:	mov    eax,0x5f89a662
  413145:	sub    bh,0x1d
  413148:	(bad)
  41314b:	jae    0x41317b
  41314d:	sbb    eax,DWORD PTR [edx-0x6f4c0d2f]
  413153:	pushf  
  413154:	out    dx,al
  413155:	xchg   edx,eax
  413156:	mov    bh,0xc3
  413158:	test   DWORD PTR ds:0x5ee69559,ebx
  41315e:	cmp    ch,BYTE PTR [edi]
  413160:	mov    edi,0x2a9477b7
  413165:	dec    edx
  413166:	push   ecx
  413167:	clc    
  413168:	pop    eax
  413169:	outs   dx,BYTE PTR ds:[esi]
  41316a:	jg     0x4130fa
  41316c:	jo     0x413196
  41316e:	push   cs
  41316f:	int    0x18
  413171:	and    DWORD PTR [eax],esp
  413173:	mov    ds:0x6e0c05cd,eax
  413178:	lock sub ecx,edi
  41317b:	outs   dx,DWORD PTR ds:[esi]
  41317c:	(bad)  [ebx+edx*2+0x19]
  413180:	sub    DWORD PTR [eax+eax*8+0x3d],esi
  413184:	hlt    
  413185:	into   
  413186:	mov    ds:0x6658093c,al
  41318b:	inc    ecx
  41318c:	xor    eax,0x3de62d7e
  413191:	repz js 0x4131e3
  413194:	sub    DWORD PTR [esp+ebx*2],esi
  413197:	icebp  
  413198:	xlat   BYTE PTR ds:[ebx]
  413199:	jbe    0x413210
  41319b:	test   al,0xed
  41319d:	out    0xa,al
  41319f:	lahf   
  4131a0:	sbb    edi,ebx
  4131a2:	call   0xf631:0xb6c6009f
  4131a9:	icebp  
  4131aa:	call   0x2678418a
  4131af:	and    BYTE PTR [edi-0x7ed92e5c],al
  4131b5:	scas   eax,DWORD PTR es:[edi]
  4131b6:	addr16 je 0x41322b
  4131b9:	stos   DWORD PTR es:[edi],eax
  4131ba:	jo     0x41321a
  4131bc:	jns    0x413197
  4131be:	inc    edi
  4131bf:	pop    eax
  4131c0:	aaa    
  4131c1:	pusha  
  4131c2:	popf   
  4131c3:	adc    al,0xb0
  4131c5:	inc    ebx
  4131c6:	cmp    dh,dh
  4131c8:	imul   eax,ebx,0xffffff9e
  4131cb:	mov    eax,0xe5db49e8
  4131d0:	xchg   edi,eax
  4131d1:	(bad)  
  4131d3:	retf   0x17b
  4131d6:	sbb    eax,DWORD PTR [esi-0x5c]
  4131d9:	dec    eax
  4131da:	test   eax,0x9f88871c
  4131df:	je     0x41316d
  4131e1:	add    ch,BYTE PTR [bp-0x107a]
  4131e6:	adc    DWORD PTR [esp+ebx*4-0x28],0xec8020e2
  4131ee:	cs pop esi
  4131f0:	mov    ch,0x57
  4131f2:	cmc    
  4131f3:	in     al,dx
  4131f4:	mov    bl,0x6c
  4131f6:	nop
  4131f7:	cmp    al,0x35
  4131f9:	push   eax
  4131fa:	jecxz  0x413184
  4131fc:	ins    DWORD PTR es:[edi],dx
  4131fd:	add    al,cl
  4131ff:	sar    DWORD PTR [edx],0x0
  413202:	inc    ebp
  413203:	lods   al,BYTE PTR ds:[esi]
  413204:	inc    esi
  413205:	rcl    BYTE PTR cs:[ebp-0x14],1
  413209:	add    bl,BYTE PTR [ebp+0x236e201f]
  41320f:	or     BYTE PTR [esi+0x73fd92d6],bl
  413215:	mov    dl,BYTE PTR [edi+0x391d92d6]
  41321b:	cmp    eax,0xaeb48468
  413220:	add    dl,al
  413222:	pop    edi
  413223:	leave  
  413224:	jbe    0x41320c
  413226:	bound  edx,QWORD PTR [eax]
  413228:	retf   
  413229:	aaa    
  41322a:	ja     0x413267
  41322c:	loope  0x413203
  41322e:	inc    esi
  41322f:	pushf  
  413230:	pop    esi
  413231:	iret   
  413232:	mov    edx,0x9d2ea710
  413237:	mov    dh,0xd1
  413239:	out    dx,al
  41323a:	and    ebx,DWORD PTR [eax-0x6e8c97b7]
  413240:	xor    eax,0xef588587
  413245:	cmp    bh,dl
  413247:	cmp    eax,0x4a1cac87
  41324c:	and    esi,DWORD PTR [edx+eiz*8-0x6f8f243f]
  413253:	stc    
  413254:	retf   
  413255:	lods   al,BYTE PTR ds:[esi]
  413256:	mov    esp,0xa6af5ed3
  41325b:	fcmovu st,st(1)
  41325d:	sub    eax,0xaf6e60e6
  413262:	sub    al,BYTE PTR [esp+ebx*1+0x36d2028a]
  413269:	jmp    0x2a6a:0x9cf15d20
  413270:	mov    ch,0xdf
  413272:	gs pop ds
  413274:	xor    DWORD PTR [ecx+0x53],0x75a6fc10
  41327b:	ja     0x413243
  41327d:	xchg   edi,eax
  41327e:	ss pushf 
  413280:	xchg   esp,eax
  413281:	or     bh,BYTE PTR [esi-0x278d8180]
  413287:	icebp  
  413288:	and    BYTE PTR [esi],dh
  41328a:	mov    DWORD PTR [edi-0x55],esi
  41328d:	pop    ebx
  41328e:	dec    edx
  41328f:	repz sbb esi,eax
  413292:	and    al,0xb3
  413294:	shl    dl,0x8a
  413297:	or     eax,0x3874c3a5
  41329c:	cmc    
  41329d:	jg     0x4132d2
  41329f:	pushf  
  4132a0:	cmp    DWORD PTR [ebp+0x77d805f],0xffffffb8
  4132a7:	psrlq  mm1,QWORD PTR ds:0x1167b145
  4132ae:	jno    0x413243
  4132b0:	push   ds
  4132b1:	imul   ebx,DWORD PTR [edi+0x6d],0x17
  4132b5:	sbb    eax,0xd347fe60
  4132ba:	cld    
  4132bb:	loopne 0x413305
  4132bd:	and    ecx,edi
  4132bf:	mov    DWORD PTR [ecx-0x64],ebp
  4132c2:	jge    0x413313
  4132c4:	call   0x500746b4
  4132c9:	mov    ebx,0xa79bc247
  4132ce:	dec    esp
  4132cf:	imul   esp,DWORD PTR [esi-0x9],0x644e5692
  4132d6:	dec    esp
  4132d7:	aad    0xaf
  4132d9:	enter  0xce4e,0xc9
  4132dd:	mov    dh,0xce
  4132df:	xor    BYTE PTR [ecx-0x749c33a9],dl
  4132e5:	xor    al,0xaf
  4132e7:	or     eax,0x1796f2c8
  4132ec:	or     cl,BYTE PTR [ebx-0x294251bd]
  4132f2:	stc    
  4132f3:	push   ebx
  4132f4:	xchg   edx,eax
  4132f5:	and    DWORD PTR [ecx],0x703371aa
  4132fb:	mov    ds:0x4d4e8008,eax
  413300:	ins    BYTE PTR es:[edi],dx
  413301:	add    eax,0xadbe876e
  413306:	inc    esp
  413307:	mov    DWORD PTR [ecx],ecx
  413309:	push   ds
  41330a:	jns    0x413389
  41330c:	nop
  41330d:	fnstenv [ebx+0xe]
  413310:	mov    al,ds:0x3d2a7a34
  413315:	dec    ebx
  413316:	mov    al,ds:0xf7333513
  41331b:	imul   edx,DWORD PTR [esi+ecx*2-0x3c],0xcd0380ac
  413323:	jmp    0x6f7a:0x34a7dbf7
  41332a:	jbe    0x4132db
  41332c:	sbb    ch,ch
  41332e:	xchg   ebx,eax
  41332f:	loope  0x413382
  413331:	dec    ebx
  413332:	xchg   esi,eax
  413333:	dec    esp
  413334:	add    BYTE PTR [ebp-0x9],bh
  413337:	retf   0x5faf
  41333a:	fs push ds
  41333c:	and    eax,0x4e3c910d
  413341:	lds    esi,FWORD PTR [esi-0x31]
  413344:	mov    edx,0xb3f0ad6c
  413349:	push   es
  41334a:	jnp    0x41331e
  41334c:	test   ah,0x4e
  41334f:	in     al,dx
  413350:	test   DWORD PTR [ebx+0x67309e8f],0xe9e2ecc9
  41335a:	cmp    al,0xf7
  41335c:	adc    ebx,0x6e
  41335f:	mov    ch,0x1e
  413361:	mov    esi,0x2d6d1ada
  413366:	sti    
  413367:	int    0x17
  413369:	jbe    0x413322
  41336b:	adc    cl,bh
  41336d:	cdq    
  41336e:	outs   dx,DWORD PTR ds:[esi]
  41336f:	mov    cl,0xa1
  413371:	mov    DWORD PTR [edx],ebx
  413373:	push   esp
  413374:	cwde   
  413375:	(bad)  
  413377:	pop    ecx
  413378:	adc    DWORD PTR [ecx],0xffffffc3
  41337b:	sbb    DWORD PTR ds:0xd87ea000,esi
  413381:	ds mov ebp,0xb32b67ee
  413387:	push   edi
  413388:	jb     0x4133f0
  41338a:	das    
  41338b:	stc    
  41338c:	sub    DWORD PTR [edi],0xe
  41338f:	sbb    cl,BYTE PTR ds:0xe73b5f1d
  413395:	mov    al,ds:0xf39c8cd8
  41339a:	fdivr  DWORD PTR [ecx+0x2d3ff07d]
  4133a0:	push   es
  4133a1:	pusha  
  4133a2:	mov    esi,esi
  4133a4:	div    DWORD PTR [ebx+edx*8-0x11915211]
  4133ab:	add    esi,0xa1f714f3
  4133b1:	sbb    al,0x42
  4133b3:	call   DWORD PTR [edx+edi*4+0x561eaed4]
  4133ba:	push   ss
  4133bb:	inc    ebp
  4133bc:	or     al,0xb7
  4133be:	adc    BYTE PTR [esi],0x40
  4133c1:	add    esp,DWORD PTR [edi]
  4133c3:	push   edi
  4133c4:	push   ebx
  4133c5:	mov    ebx,es
  4133c7:	dec    edi
  4133c8:	mov    esp,0x469157b2
  4133cd:	or     DWORD PTR [ebx+0x19],ebx
  4133d0:	aam    0xb5
  4133d2:	cmp    eax,0x444c0923
  4133d7:	cli    
  4133d8:	push   ecx
  4133d9:	test   eax,0x4c72a3aa
  4133de:	shr    DWORD PTR [edi],cl
  4133e0:	nop
  4133e1:	out    dx,al
  4133e2:	js     0x41341e
  4133e4:	dec    ebp
  4133e5:	ss out 0xc5,al
  4133e8:	pushf  
  4133e9:	imul   eax,DWORD PTR [edi+0x28249fd2],0x4991c92f
  4133f3:	push   esi
  4133f4:	pop    eax
  4133f5:	jle    0x41340f
  4133f7:	push   edx
  4133f8:	popa   
  4133f9:	xchg   edx,eax
  4133fa:	out    dx,eax
  4133fb:	in     al,dx
  4133fc:	rdmsr  
  4133fe:	es push esi
  413400:	mov    esp,0x7053fb7a
  413405:	mov    esi,ss
  413407:	seta   al
  41340a:	(bad)  
  41340b:	pushf  
  41340c:	scas   eax,DWORD PTR es:[edi]
  41340d:	cld    
  41340e:	sbb    BYTE PTR [ecx+eiz*4],0xe7
  413412:	mov    esi,0x3609163e
  413417:	sbb    al,BYTE PTR [esi-0x16]
  41341a:	stos   DWORD PTR es:[edi],eax
  41341b:	push   ebx
  41341c:	and    eax,DWORD PTR [esi-0x5c]
  41341f:	mov    al,ds:0x7847f4ef
  413424:	sub    al,0x73
  413427:	lahf   
  413428:	ret    
  413429:	popa   
  41342a:	cmp    al,BYTE PTR [ecx]
  41342c:	cmp    eax,DWORD PTR [edx+0x62981061]
  413432:	or     DWORD PTR [edi-0x11a38896],esp
  413438:	sar    DWORD PTR [edx-0x1a],1
  41343b:	xor    eax,DWORD PTR [ebx-0xf2c2473]
  413441:	and    eax,DWORD PTR [edi-0x2c9191e3]
  413447:	cmp    al,0x57
  413449:	mov    ds:0x8fcddd92,al
  41344e:	or     al,0x81
  413450:	xor    DWORD PTR [esi+esi*4+0x52c7d250],eax
  413457:	shr    DWORD PTR [ebx],0x68
  41345a:	in     al,dx
  41345b:	sub    DWORD PTR [edi+ebx*1+0x4fc6fc34],0xffffffe7
  413463:	pop    es
  413464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413465:	les    edx,FWORD PTR ds:0x2140eb41
  41346b:	mov    WORD PTR [eax+0x6c],cs
  41346e:	mov    ch,BYTE PTR [ebp-0x77]
  413471:	jne    0x413401
  413473:	aas    
  413474:	mov    edi,esp
  413476:	add    eax,DWORD PTR [ecx+0x4cd3a490]
  41347c:	push   cs
  41347d:	nop
  41347e:	div    BYTE PTR [eax]
  413480:	adc    esp,ecx
  413482:	popf   
  413483:	int3   
  413484:	xchg   DWORD PTR [esi+0x76],esp
  413487:	push   0x955dcb95
  41348c:	sbb    dh,BYTE PTR [edi+ecx*4+0x14]
  413490:	jb     0x4134e9
  413492:	imul   edi,ecx,0xcc2b067c
  413498:	inc    ebx
  413499:	outs   dx,BYTE PTR ds:[esi]
  41349a:	push   0xffffffa7
  41349c:	xchg   edx,eax
  41349d:	and    al,BYTE PTR fs:[ebx+0x4d]
  4134a1:	loope  0x4134c6
  4134a3:	icebp  
  4134a4:	cmp    BYTE PTR [edi+0x581307f3],0xa
  4134ab:	cmp    ch,BYTE PTR [edx+ebx*2]
  4134ae:	aad    0x97
  4134b0:	fisttp WORD PTR [esi-0x741abcb]
  4134b6:	cmp    DWORD PTR [ebp+0x9],ebx
  4134b9:	mov    eax,0xa3d0452d
  4134be:	push   edi
  4134bf:	adc    dl,BYTE PTR ds:[eax+0x66f94628]
  4134c6:	js     0x4134f4
  4134c8:	mov    ds:0x62199e8e,eax
  4134cd:	adc    ebp,DWORD PTR [edi]
  4134cf:	sbb    al,0xf5
  4134d1:	add    ah,BYTE PTR [esp+ebx*4]
  4134d4:	pop    esi
  4134d5:	add    ecx,eax
  4134d7:	push   edi
  4134d8:	sbb    al,0xb5
  4134da:	jecxz  0x41347c
  4134dc:	inc    ebx
  4134dd:	pop    eax
  4134de:	les    ebp,FWORD PTR [ecx]
  4134e0:	ja     0x4134b6
  4134e2:	mov    edi,0x197a1d73
  4134e7:	jo     0x413565
  4134e9:	test   BYTE PTR [esi-0x68],ch
  4134ec:	lahf   
  4134ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134ee:	dec    edx
  4134ef:	sub    DWORD PTR [esi],esi
  4134f1:	add    al,0xf4
  4134f3:	loope  0x4134ad
  4134f5:	inc    ebp
  4134f6:	mov    bl,0xb5
  4134f8:	fscale 
  4134fa:	sbb    ebx,esp
  4134fc:	or     edx,esp
  4134fe:	mov    esp,0xea248321
  413503:	sub    eax,0x4cf81899
  413508:	sbb    al,0xf5
  41350a:	mov    ebx,0x1d6e0411
  41350f:	ins    DWORD PTR es:[edi],dx
  413510:	adc    eax,0x615bb752
  413515:	pop    ss
  413516:	xor    BYTE PTR [ebp+0x36],ch
  413519:	dec    edi
  41351a:	xchg   BYTE PTR [eax+0x72],ch
  41351d:	adc    eax,0x832733c5
  413522:	cmp    al,bh
  413524:	cmp    al,0x56
  413526:	imul   ebx,DWORD PTR [edx+edi*4-0x7fecf749],0xffffffa3
  41352e:	mov    edi,0x169d6cc1
  413533:	cli    
  413534:	mov    ebx,0xeb4a33b8
  413539:	fwait
  41353a:	push   0xffffffc6
  41353c:	es xchg edx,eax
  41353e:	inc    eax
  41353f:	enter  0x1378,0x35
  413543:	push   ebp
  413544:	or     DWORD PTR [ebp+ebx*2-0x10c55d34],ebx
  41354b:	mov    bl,BYTE PTR [ecx-0x2]
  41354e:	jnp    0x4135ba
  413550:	fiadd  DWORD PTR [edi]
  413552:	dec    edi
  413553:	(bad)  
  413554:	enter  0xc76b,0x1c
  413558:	inc    esi
  413559:	pop    ecx
  41355a:	daa    
  41355b:	cmp    BYTE PTR [edi],bl
  41355d:	cmp    esp,DWORD PTR [edx-0x1c]
  413560:	(bad)  
  413562:	test   esp,ebx
  413564:	mov    ebx,0xff612a28
  413569:	sti    
  41356a:	icebp  
  41356b:	fild   WORD PTR [ebx]
  41356d:	jp     0x41354e
  41356f:	ret    
  413570:	imul   ecx,DWORD PTR [edx+eiz*8-0x18],0xabed5ce3
  413578:	es leave 
  41357a:	pop    edx
  41357b:	(bad)
  41357f:	mov    ch,0x39
  413581:	inc    eax
  413582:	js     0x4135b6
  413584:	test   eax,0x622bed63
  413589:	ss cmc 
  41358b:	not    DWORD PTR [edi-0x27]
  41358e:	je     0x413584
  413590:	xchg   edx,eax
  413591:	pop    ebx
  413592:	dec    ebx
  413593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413594:	push   ss
  413595:	stos   BYTE PTR es:[edi],al
  413596:	(bad)  
  413597:	shr    BYTE PTR [edx+esi*8-0x3f88a700],0x6c
  41359f:	popf   
  4135a0:	in     eax,0x5d
  4135a2:	sbb    BYTE PTR [edi-0x77],0x7
  4135a6:	repz jmp 0x413590
  4135a9:	psrlq  mm2,mm1
  4135ac:	or     eax,0x74b78bfe
  4135b1:	js     0x413595
  4135b3:	(bad)  [edx+0x65]
  4135b6:	push   ss
  4135b7:	jb     0x4135ec
  4135b9:	sbb    dh,BYTE PTR [eax-0xd]
  4135bc:	fsubr  QWORD PTR [ecx]
  4135be:	call   0x4546:0x9c099f39
  4135c5:	xchg   esi,eax
  4135c6:	pop    edi
  4135c7:	pop    ebx
  4135c8:	sti    
  4135c9:	ss in  eax,0xca
  4135cc:	push   edi
  4135cd:	or     ax,0xfc42
  4135d1:	push   edx
  4135d2:	and    BYTE PTR [edi],al
  4135d4:	or     BYTE PTR [ecx+ecx*1+0x71],ah
  4135d8:	ds das 
  4135da:	(bad)  
  4135db:	shl    DWORD PTR [eax],1
  4135dd:	in     eax,dx
  4135de:	fdiv   QWORD PTR [ecx-0x37]
  4135e1:	iret   
  4135e2:	into   
  4135e3:	jle    0x41364e
  4135e5:	sub    edi,DWORD PTR [edi-0x633e90a]
  4135eb:	sahf   
  4135ec:	mov    ebx,0x47292eb1
  4135f1:	ficomp WORD PTR ss:[ebx]
  4135f4:	cld    
  4135f5:	(bad)  
  4135f6:	addr16 mov bl,0x32
  4135f9:	push   ds
  4135fa:	pop    eax
  4135fb:	jl     0x413648
  4135fd:	outs   dx,BYTE PTR ds:[esi]
  4135fe:	mov    bh,BYTE PTR [edi]
  413600:	mov    ch,0x6c
  413602:	fdiv   st,st(1)
  413604:	popa   
  413605:	retf   0xc4ed
  413608:	pop    ecx
  413609:	jb     0x413649
  41360b:	xor    DWORD PTR [ebx],esi
  41360d:	lock dec esi
  41360f:	(bad)  
  413611:	(bad)  
  413612:	mov    eax,ds:0xbf0a85d7
  413617:	pushf  
  413618:	xor    ecx,esp
  41361a:	push   ds
  41361b:	sbb    ecx,DWORD PTR [eax]
  41361d:	push   eax
  41361e:	fidivr WORD PTR ds:0x78219497
  413624:	add    bl,BYTE PTR [edi+0x35]
  413627:	das    
  413628:	pop    ebx
  413629:	daa    
  41362a:	ret    
  41362b:	std    
  41362c:	cmp    eax,0xd25ab946
  413631:	imul   edi,eax,0x42644d8e
  413637:	mov    ?,WORD PTR [eax-0x49]
  41363a:	ins    DWORD PTR es:[edi],dx
  41363b:	and    al,0x89
  41363d:	std    
  41363e:	call   0x5ae1:0x9f85206d
  413645:	xchg   edx,eax
  413646:	scas   eax,DWORD PTR es:[edi]
  413647:	(bad)  
  413648:	pop    esp
  413649:	xchg   BYTE PTR [ebp+0x53],bh
  41364c:	jecxz  0x4136b1
  41364e:	mov    ch,0x8d
  413650:	sti    
  413651:	pop    ebx
  413652:	add    al,0xec
  413654:	or     ebx,DWORD PTR [edi]
  413656:	and    DWORD PTR [ebx-0x43],0x9cbf37cc
  41365d:	sub    BYTE PTR [eax],0xed
  413660:	cld    
  413661:	loope  0x413680
  413663:	out    0xa2,eax
  413665:	inc    ebx
  413666:	retf   
  413667:	neg    BYTE PTR [edx]
  413669:	aaa    
  41366a:	add    ecx,ebx
  41366c:	mov    esi,0xf55c4706
  413671:	rol    DWORD PTR [ebx+edx*4-0x68056eb8],1
  413678:	into   
  413679:	data16 ja 0x4136a0
  41367c:	mov    BYTE PTR [ebx-0x6a],cl
  41367f:	mov    ah,BYTE PTR [esi-0x251fa61f]
  413685:	jb     0x4136f5
  413687:	in     al,0xc1
  413689:	stc    
  41368a:	mov    ah,0x1a
  41368c:	jmp    0x6c23551c
  413691:	in     eax,0x6c
  413693:	stos   DWORD PTR es:[edi],eax
  413694:	je     0x4136f8
  413696:	jnp    0x4136d9
  413698:	test   al,0x18
  41369a:	ret    0x76f4
  41369d:	dec    esi
  41369e:	fucomip st,st(5)
  4136a0:	fisub  WORD PTR [ebp-0x35]
  4136a3:	leave  
  4136a4:	mov    edi,0xf5f51ecd
  4136a9:	dec    eax
  4136aa:	dec    edx
  4136ab:	push   esp
  4136ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136ad:	stc    
  4136ae:	and    eax,0xe0ebf88c
  4136b3:	in     al,0xcc
  4136b5:	xor    eax,0x99a86f0a
  4136ba:	or     dh,BYTE PTR [esp+edi*1-0x69]
  4136be:	js     0x41369d
  4136c0:	shl    DWORD PTR [bp+di-0x3a],cl
  4136c4:	outs   dx,BYTE PTR ds:[esi]
  4136c5:	scas   al,BYTE PTR es:[edi]
  4136c6:	sub    al,0x4b
  4136c8:	ret    
  4136c9:	(bad)  
  4136ca:	stos   DWORD PTR es:[edi],eax
  4136cb:	or     ebp,esi
  4136cd:	ret    
  4136ce:	sub    BYTE PTR [eax],bh
  4136d0:	test   DWORD PTR [ebp-0x7687fa68],esp
  4136d6:	repnz sti 
  4136d8:	psraw  mm3,QWORD PTR ds:0x2e6441bd
  4136df:	and    edi,DWORD PTR [edi+edi*1-0x13]
  4136e3:	adc    bh,BYTE PTR [ebp+0x7e]
  4136e6:	je     0x4136bb
  4136e8:	cmp    edi,DWORD PTR [eax+0x1]
  4136eb:	and    bh,0x53
  4136ee:	sub    edx,DWORD PTR [esi+eiz*8+0x70]
  4136f2:	or     bh,BYTE PTR [eax+0x1eea8de0]
  4136f8:	inc    edx
  4136f9:	add    BYTE PTR [esi-0xf],ch
  4136fc:	adc    ch,BYTE PTR [ebx-0x6d]
  4136ff:	mov    eax,0x44323acc
  413704:	pop    ebx
  413705:	pop    edi
  413706:	mov    cl,0xf7
  413708:	daa    
  413709:	sbb    edx,DWORD PTR [esi]
  41370b:	into   
  41370c:	mov    DWORD PTR [ebx+0x1533c782],edi
  413712:	add    DWORD PTR [edx+0x27],esp
  413715:	push   esi
  413716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413718:	stc    
  413719:	jo     0x413732
  41371b:	jge    0x413713
  41371d:	pushf  
  41371e:	retf   0x5707
  413721:	clc    
  413722:	out    dx,eax
  413723:	test   al,0xac
  413725:	and    ah,dh
  413727:	dec    esp
  413728:	mov    al,0x74
  41372a:	push   ebp
  41372b:	stc    
  41372c:	test   BYTE PTR [esi],0xcf
  41372f:	dec    ebx
  413730:	imul   ax,WORD PTR [eax+0x6c],0x5
  413735:	push   eax
  413736:	out    0xbd,al
  413738:	xor    cl,ah
  41373a:	rol    DWORD PTR [esi],0x5d
  41373d:	pop    ecx
  41373e:	add    ebp,edx
  413740:	or     eax,0xa735da42
  413745:	mov    al,ds:0xeca37846
  41374a:	dec    eax
  41374b:	add    DWORD PTR [ecx-0x2],ebx
  41374e:	daa    
  41374f:	xor    al,0xae
  413751:	jp     0x413748
  413753:	(bad)  [edx+esi*1+0x492eee8f]
  41375a:	ins    DWORD PTR es:[edi],dx
  41375b:	jp     0x4137b5
  41375d:	jecxz  0x4136fb
  41375f:	cmp    ecx,DWORD PTR [edi+0x11]
  413762:	xor    ebx,DWORD PTR [esi+0x25fba60b]
  413768:	cmp    bl,BYTE PTR [ebx]
  41376a:	xor    al,0x3f
  41376c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41376d:	push   ebx
  41376e:	sub    BYTE PTR [edi-0x428b2191],dl
  413774:	mov    BYTE PTR [eax-0x49b12bb1],0x1a
  41377b:	test   BYTE PTR [edi-0x24ffc580],ah
  413781:	scas   al,BYTE PTR es:[edi]
  413782:	add    edx,ecx
  413784:	or     al,0xfe
  413786:	dec    esp
  413787:	adc    cl,BYTE PTR [eax]
  413789:	xor    al,0x83
  41378b:	call   0xb4eb:0x7e2
  413791:	jge    0x413775
  413793:	test   BYTE PTR [ebp+0x27],al
  413796:	adc    BYTE PTR [ebx+0x5008253b],cl
  41379c:	and    DWORD PTR [edx+0x58],esi
  41379f:	cmc    
  4137a0:	adc    eax,0x2e801df3
  4137a5:	imul   edx,DWORD PTR [ebx],0x7f9178aa
  4137ab:	pusha  
  4137ac:	aad    0x7a
  4137ae:	clc    
  4137af:	push   0xffffffb9
  4137b1:	xor    DWORD PTR [esi],esi
  4137b3:	jmp    0x1a083007
  4137b8:	dec    ebx
  4137b9:	adc    ebx,DWORD PTR [esi-0x62fbbfc5]
  4137bf:	iret   
  4137c0:	pop    ebx
  4137c1:	out    0xea,al
  4137c3:	repz xor al,0x13
  4137c6:	dec    esi
  4137c7:	in     al,0x4e
  4137c9:	xor    al,0xa8
  4137cb:	es dec esp
  4137cd:	add    BYTE PTR [ebp-0x9864cd4],bh
  4137d3:	retf   0xe07e
  4137d6:	clc    
  4137d7:	cwde   
  4137d8:	mov    ebx,0x2d4f383c
  4137dd:	jl     0x4137d5
  4137df:	adc    esp,0xffffffc7
  4137e2:	not    ebx
  4137e4:	mov    ah,0x9a
  4137e6:	test   al,0xd3
  4137e8:	outs   dx,BYTE PTR ds:[esi]
  4137e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137ea:	xchg   edi,eax
  4137eb:	repz mov ebx,0xbca75336
  4137f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137f2:	fdiv   st(6),st
  4137f4:	xchg   esi,eax
  4137f5:	pushf  
  4137f6:	push   ss
  4137f7:	or     dl,BYTE PTR [ecx+0x3778a267]
  4137fd:	out    dx,al
  4137fe:	popa   
  4137ff:	fstp   DWORD PTR [ecx+0xf]
  413802:	in     al,0xc9
  413804:	mov    ah,0xc7
  413806:	cmp    eax,0x53b83b45
  41380b:	cmp    ebx,DWORD PTR [ebx-0x48ee2d8]
  413811:	xor    al,0xa0
  413813:	push   eax
  413814:	ds push ds
  413816:	jecxz  0x4137ed
  413818:	add    BYTE PTR [edx],dl
  41381a:	add    edx,ebx
  41381c:	and    bl,bl
  41381e:	popa   
  41381f:	xchg   edi,eax
  413820:	mov    eax,ds:0x8078131
  413825:	shl    ecx,0xef
  413828:	pushf  
  413829:	pop    eax
  41382a:	int3   
  41382b:	mov    BYTE PTR [ecx],ah
  41382d:	sbb    cx,WORD PTR [ecx]
  413830:	addr16 jmp 0x271b:0xd416f16e
  413838:	xchg   ecx,eax
  413839:	pop    ds
  41383a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41383b:	ja     0x4137d0
  41383d:	pop    ss
  41383e:	inc    esp
  41383f:	adc    dh,BYTE PTR [eax]
  413841:	mov    cs,WORD PTR [ebx-0x7a]
  413844:	inc    ecx
  413845:	daa    
  413846:	out    0xc,eax
  413848:	popf   
  413849:	iret   
  41384a:	mov    esi,0x57347fe7
  41384f:	cld    
  413850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413851:	jmp    0x468c340c
  413856:	test   DWORD PTR [edx-0x794de396],esi
  41385c:	mov    bh,bh
  41385e:	cmp    ebx,DWORD PTR [esi]
  413860:	inc    edi
  413861:	adc    al,dh
  413863:	xor    eax,0xcc9ef243
  413868:	add    ah,BYTE PTR [edi+edi*4+0x8]
  41386c:	out    0x8c,eax
  41386e:	cmp    ah,dl
  413870:	stos   DWORD PTR es:[edi],eax
  413871:	pusha  
  413872:	retf   0x3b06
  413875:	push   ds
  413876:	or     DWORD PTR [ecx+0x6],ebp
  413879:	and    DWORD PTR [ecx-0x9c4ae52],0x9979974f
  413883:	fidiv  DWORD PTR [ebx-0x1ec1aeaf]
  413889:	jl     0x413860
  41388b:	shr    DWORD PTR [eax],cl
  41388d:	outs   dx,BYTE PTR ds:[esi]
  41388e:	pop    ds
  41388f:	and    BYTE PTR [eax-0x63],bh
  413892:	aad    0x5d
  413894:	pop    esi
  413895:	in     eax,dx
  413896:	jae    0x413867
  413898:	pusha  
  413899:	ret    0xf8d8
  41389c:	fld    QWORD PTR ds:0x15b201a4
  4138a2:	sub    bl,BYTE PTR [ebp+0x4dc09773]
  4138a8:	aas    
  4138a9:	stos   BYTE PTR es:[edi],al
  4138aa:	shl    DWORD PTR [ecx],1
  4138ac:	lea    edx,[edi+0x2a]
  4138af:	mov    esi,edi
  4138b1:	xchg   ebp,eax
  4138b2:	arpl   dx,bx
  4138b4:	jecxz  0x41388f
  4138b6:	lea    esp,[ebx-0x56]
  4138b9:	out    dx,al
  4138ba:	push   eax
  4138bb:	aam    0xc1
  4138bd:	bound  ebx,QWORD PTR [ecx]
  4138bf:	loope  0x4138eb
  4138c1:	cld    
  4138c2:	cmp    ah,BYTE PTR [esp+edx*2]
  4138c5:	inc    edi
  4138c6:	test   al,0x1
  4138c8:	or     al,0xe1
  4138ca:	mov    dl,0xb8
  4138cc:	aas    
  4138cd:	mov    ch,0x6c
  4138cf:	or     ecx,DWORD PTR [ebp-0x65]
  4138d2:	in     eax,0x3b
  4138d4:	jne    0x413859
  4138d6:	aam    0x36
  4138d8:	loope  0x4138fb
  4138da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138db:	ja     0x41391c
  4138dd:	in     eax,0xfd
  4138df:	test   al,0x1c
  4138e1:	in     al,dx
  4138e2:	xchg   DWORD PTR [eax-0x3554e367],ecx
  4138e8:	mov    edx,0xadd8a096
  4138ed:	push   esp
  4138ee:	add    esp,DWORD PTR [ebp-0x60e2fe24]
  4138f4:	(bad)
  4138f8:	call   0x3a3aadc7
  4138fd:	jp     0x4138c4
  4138ff:	mov    ch,0xb
  413901:	scas   al,BYTE PTR es:[edi]
  413902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413903:	dec    esi
  413904:	jl     0x413894
  413906:	stos   BYTE PTR es:[edi],al
  413907:	std    
  413908:	xor    al,BYTE PTR [ebx+eax*1-0x306ab63e]
  41390f:	and    BYTE PTR [ecx+ebx*4+0x67],dl
  413913:	(bad)  
  413915:	inc    ecx
  413916:	mov    ebp,DWORD PTR [edi+0x11]
  413919:	mov    dh,0xf5
  41391b:	jae    0x413978
  41391d:	pop    ss
  41391e:	mov    eax,0xe7fab3c2
  413923:	jb     0x413993
  413925:	int3   
  413926:	and    DWORD PTR [esi-0x29],esi
  413929:	les    edi,FWORD PTR [ebx+eax*4]
  41392c:	addr16 jnp 0x4138fe
  41392f:	lea    eax,[edx-0x111beaea]
  413935:	xchg   BYTE PTR [eax-0x5c113eb1],cl
  41393b:	mov    eax,0x4558ca2
  413940:	test   eax,0x3008abfd
  413945:	loope  0x4139a3
  413947:	iret   
  413948:	jae    0x413913
  41394a:	inc    edi
  41394b:	fldl2t 
  41394d:	pop    edx
  41394e:	out    dx,al
  41394f:	mov    ebp,0xcaf3c4c0
  413954:	cmp    DWORD PTR [edi-0xc8e41b6],0x600fbf69
  41395e:	les    ebp,FWORD PTR [esi]
  413960:	sub    esp,DWORD PTR [edx+edx*4+0x24e303de]
  413967:	inc    DWORD PTR [esi]
  413969:	jmp    0x413909
  41396b:	xchg   edi,eax
  41396c:	add    BYTE PTR [ecx],cl
  41396e:	ds aas 
  413970:	aam    0xf6
  413972:	jg     0x413945
  413974:	jbe    0x413914
  413976:	stos   BYTE PTR es:[edi],al
  413977:	rcl    DWORD PTR [edi-0x58054b03],0x29
  41397e:	mov    ds:0x27edae8b,al
  413983:	mov    eax,ds:0x5686828f
  413988:	inc    eax
  413989:	adc    BYTE PTR [edx-0x4bbda4f0],0x7
  413990:	into   
  413991:	or     cl,ch
  413993:	jns    0x4139ce
  413995:	jno    0x413950
  413997:	stos   BYTE PTR es:[edi],al
  413998:	mov    dh,0x8b
  41399a:	sub    DWORD PTR ds:[esi],ebp
  41399d:	in     al,0xf5
  41399f:	shl    BYTE PTR [edi+ebx*4],1
  4139a2:	gs jns 0x4139e7
  4139a5:	push   eax
  4139a6:	rol    eax,1
  4139a8:	dec    ebp
  4139a9:	dec    eax
  4139aa:	scas   eax,DWORD PTR es:[edi]
  4139ab:	xor    ch,BYTE PTR [esi-0x1f37afcc]
  4139b1:	sub    eax,0x28bbe0f7
  4139b6:	data16 xlat BYTE PTR ds:[ebx]
  4139b8:	mov    ds:0x91e30b10,al
  4139bd:	mov    dl,0xc4
  4139bf:	or     edi,ecx
  4139c1:	pop    ds
  4139c2:	jle    0x413a02
  4139c4:	dec    edi
  4139c5:	pop    esi
  4139c6:	(bad)  
  4139c7:	jle    0x413973
  4139c9:	sub    al,0x25
  4139cb:	mov    dh,0xf
  4139cd:	ret    
  4139ce:	mov    ch,0x2a
  4139d0:	xchg   ebx,eax
  4139d1:	ds scas al,BYTE PTR es:[edi]
  4139d3:	mov    ebx,0x40b90451
  4139d8:	inc    ecx
  4139d9:	in     al,0xe5
  4139db:	sub    BYTE PTR [ebx+0x5e0ab3a6],dh
  4139e1:	stc    
  4139e2:	es jmp 0x70e5:0x969d5965
  4139ea:	jb     0x4139fe
  4139ec:	cmp    bh,BYTE PTR [esp+eiz*2]
  4139ef:	aaa    
  4139f0:	jns    0x413a40
  4139f2:	dec    ecx
  4139f3:	aad    0x29
  4139f5:	outs   dx,DWORD PTR ds:[esi]
  4139f6:	(bad)  
  4139f7:	cmp    al,0x6
  4139f9:	ret    0x29e5
  4139fc:	mov    dl,0x8f
  4139fe:	scas   al,BYTE PTR es:[edi]
  4139ff:	std    
  413a00:	ss (bad) 
  413a02:	or     edx,esp
  413a04:	lds    ecx,FWORD PTR [esi+ebp*1]
  413a07:	jmp    0x41398d
  413a09:	ins    BYTE PTR es:[edi],dx
  413a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a0b:	xchg   DWORD PTR [eax-0x217cf7ae],ebx
  413a11:	or     dl,BYTE PTR [esi+eax*1+0xcf3dd1e]
  413a18:	icebp  
  413a19:	retf   
  413a1a:	ins    DWORD PTR es:[edi],dx
  413a1b:	add    al,0xd9
  413a1d:	sbb    dl,BYTE PTR [eax+edi*2-0x66]
  413a21:	or     al,0x45
  413a23:	push   eax
  413a24:	dec    eax
  413a25:	or     al,0xa6
  413a27:	push   esi
  413a28:	xchg   esi,eax
  413a29:	clc    
  413a2a:	in     al,0xee
  413a2c:	push   ecx
  413a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a2e:	dec    esp
  413a2f:	(bad)  
  413a32:	inc    esp
  413a33:	and    ebx,DWORD PTR [eax-0x45b00c8f]
  413a39:	push   ebx
  413a3a:	cwde   
  413a3b:	jl     0x413a57
  413a3d:	cmp    edx,DWORD PTR [edi-0x70]
  413a40:	xor    bh,BYTE PTR [ecx+0x9]
  413a43:	mov    esi,0x367699bf
  413a48:	cmp    DWORD PTR [ebp+0x37eee531],esp
  413a4e:	jo     0x413a02
  413a50:	and    DWORD PTR ds:0xc808ced8,esi
  413a56:	(bad)  
  413a57:	in     al,0xa
  413a59:	ds out dx,eax
  413a5b:	mov    ds:0x72733180,al
  413a60:	fst    DWORD PTR [eax+0xdce351f]
  413a66:	sub    bh,al
  413a68:	xchg   DWORD PTR [ecx+edx*8+0x5148c964],ebp
  413a6f:	cmp    eax,0x3bd7789
  413a74:	jmp    0x413a46
  413a76:	jge    0x413ab4
  413a78:	inc    edx
  413a79:	loope  0x413a45
  413a7b:	cmp    ah,BYTE PTR [ebx+0xb]
  413a7e:	mov    dh,0xec
  413a80:	out    dx,al
  413a81:	xchg   esi,eax
  413a82:	mov    esi,DWORD PTR [ebx+0x6f]
  413a85:	rcr    DWORD PTR [edi],cl
  413a87:	cvttps2pi mm0,QWORD PTR [ebx]
  413a8a:	adc    eax,0x4c01b372
  413a8f:	add    eax,0x4f78147e
  413a94:	jge    0x413acd
  413a96:	mov    DWORD PTR fs:[ecx+edi*4+0x2915b0f7],eax
  413a9e:	pop    ebx
  413a9f:	and    DWORD PTR [ebx],esp
  413aa1:	xchg   ebp,eax
  413aa2:	add    BYTE PTR [ebx+edx*8],ch
  413aa5:	stc    
  413aa6:	fisttp DWORD PTR [edi+0x1c0ad305]
  413aac:	sub    eax,0xefb11071
  413ab1:	push   eax
  413ab2:	arpl   bp,cx
  413ab4:	sub    DWORD PTR ds:0x9cb47c56,esi
  413aba:	or     DWORD PTR [edi+edx*1],esp
  413abd:	cmp    al,0x3c
  413abf:	push   0x2e
  413ac1:	xlat   BYTE PTR ds:[ebx]
  413ac2:	loop   0x413ab4
  413ac4:	in     al,0xe2
  413ac6:	sahf   
  413ac7:	nop
  413ac8:	xchg   ecx,eax
  413ac9:	or     DWORD PTR [edx-0x18],ebp
  413acc:	stos   BYTE PTR es:[edi],al
  413acd:	jo     0x413b02
  413acf:	pop    edi
  413ad0:	inc    esp
  413ad1:	cld    
  413ad2:	jne    0x413b1f
  413ad4:	push   0x8
  413ad6:	hlt    
  413ad7:	stc    
  413ad8:	rcr    dh,0x8d
  413adb:	push   esp
  413adc:	add    BYTE PTR [eax-0x5c],ch
  413adf:	outs   dx,BYTE PTR ds:[esi]
  413ae0:	pop    edi
  413ae1:	add    al,0x67
  413ae3:	retf   0x7ef2
  413ae6:	ss pop ecx
  413ae8:	scas   al,BYTE PTR es:[edi]
  413ae9:	pop    edi
  413aea:	aaa    
  413aeb:	cmp    DWORD PTR [eax-0x38],0xc2151c72
  413af2:	aad    0xb
  413af4:	call   0x52b648e7
  413af9:	aaa    
  413afa:	mov    dl,0xd3
  413afc:	push   0x1e
  413afe:	loope  0x413ae0
  413b00:	int    0xe5
  413b02:	inc    esi
  413b03:	mov    ds:0xf6c407ee,al
  413b08:	bound  edx,QWORD PTR [esi+ebx*1]
  413b0b:	sbb    bh,BYTE PTR ds:[esi]
  413b0e:	nop
  413b0f:	xor    bh,ah
  413b11:	and    esi,ebx
  413b13:	sub    al,0x3d
  413b15:	and    DWORD PTR [edx-0x58f29b3d],ecx
  413b1b:	aaa    
  413b1c:	inc    edi
  413b1d:	jmp    0x413b06
  413b1f:	sti    
  413b20:	aaa    
  413b21:	jb     0x413aaf
  413b23:	pop    es
  413b24:	and    DWORD PTR [ebp+0x15cf00e3],eax
  413b2a:	popf   
  413b2b:	pop    ecx
  413b2c:	inc    BYTE PTR [edi+0x1acd5e7]
  413b32:	push   ecx
  413b33:	aas    
  413b34:	sbb    BYTE PTR ds:0xcdff3266,al
  413b3a:	fs inc ebx
  413b3c:	xor    eax,0x958c9ad3
  413b41:	jecxz  0x413b73
  413b43:	lea    esp,[edx]
  413b45:	scas   al,BYTE PTR es:[edi]
  413b46:	retf   
  413b47:	aaa    
  413b48:	cwde   
  413b49:	inc    edi
  413b4a:	fsub   QWORD PTR [ebx+eax*4]
  413b4d:	mov    ds:0x627a30ef,eax
  413b52:	dec    esi
  413b53:	jecxz  0x413b52
  413b55:	loopne 0x413bd1
  413b57:	clc    
  413b58:	hlt    
  413b59:	jmp    0xe2a2:0x77ae7863
  413b60:	lock daa 
  413b62:	cdq    
  413b63:	add    eax,0x87f84eb5
  413b68:	ja     0x413b4f
  413b6a:	mov    bl,0xc5
  413b6c:	jbe    0x413b0d
  413b6e:	stos   DWORD PTR es:[edi],eax
  413b6f:	(bad)  
  413b70:	fwait
  413b71:	pop    ds
  413b72:	scas   al,BYTE PTR es:[edi]
  413b73:	adc    BYTE PTR [edx-0x75ec6e7e],0xcd
  413b7a:	icebp  
  413b7b:	into   
  413b7c:	in     eax,0x99
  413b7e:	mov    ch,0x43
  413b80:	cwde   
  413b81:	imul   esi,DWORD PTR [eax],0xb0df0f72
  413b87:	add    ch,bh
  413b89:	pop    ds
  413b8a:	xchg   edi,eax
  413b8b:	push   eax
  413b8c:	nop
  413b8d:	aaa    
  413b8e:	cwde   
  413b8f:	addr16 out 0xd0,al
  413b92:	add    eax,0xffffff9c
  413b95:	sub    bl,bh
  413b97:	imul   esi,ecx,0xd86f60ae
  413b9d:	mov    ebp,0x9f8f370d
  413ba2:	lds    eax,FWORD PTR [edi+0x52e7e123]
  413ba8:	mov    al,fs:0xb940ff99
  413bae:	or     esp,DWORD PTR [ebp+ebx*8+0xd]
  413bb2:	inc    edx
  413bb3:	cmp    BYTE PTR [eax-0x156df802],dl
  413bb9:	xor    BYTE PTR [ecx],bl
  413bbb:	jg     0x413b7d
  413bbd:	(bad)  
  413bbe:	adc    cl,bh
  413bc0:	xor    edx,ebp
  413bc2:	and    ebp,eax
  413bc4:	scas   eax,DWORD PTR es:[edi]
  413bc5:	inc    edi
  413bc6:	inc    esi
  413bc7:	jo     0x413bec
  413bc9:	js     0x413bd8
  413bcb:	and    eax,0xebdf7b0e
  413bd0:	dec    ebp
  413bd1:	cmp    eax,0x55cf1192
  413bd6:	fcom   QWORD PTR [ebp+ebp*2-0x49]
  413bda:	add    eax,DWORD PTR [esi-0x6974f1aa]
  413be0:	inc    ebp
  413be1:	and    BYTE PTR [eax-0x7bb9464d],cl
  413be7:	cmp    al,0x6b
  413be9:	mov    eax,ds:0x6d1c6ec1
  413bee:	ror    DWORD PTR [ebx-0x5c],0xa8
  413bf2:	push   es
  413bf3:	mov    WORD PTR [eax-0x19],gs
  413bf6:	cs stos BYTE PTR es:[edi],al
  413bf8:	fadd   st,st(7)
  413bfa:	in     al,0x9f
  413bfc:	sub    al,0x5b
  413bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bff:	in     al,0xb2
  413c01:	adc    BYTE PTR [ecx],dh
  413c03:	add    al,0xa7
  413c05:	addr16 add eax,0x7188ec0f
  413c0b:	jo     0x413c02
  413c0d:	repz shl BYTE PTR [eax-0x5954d1e6],0x1d
  413c15:	hlt    
  413c16:	jmp    0xa23486ca
  413c1b:	xchg   eax,esp
  413c1d:	push   ebx
  413c1e:	mov    bl,0xf6
  413c20:	dec    esi
  413c21:	cli    
  413c22:	push   ss
  413c23:	xor    cl,dl
  413c25:	adc    BYTE PTR es:[ebx],0x61
  413c29:	dec    edx
  413c2a:	sbb    DWORD PTR [ebp+0x2f59f726],ecx
  413c30:	(bad)
  413c33:	or     BYTE PTR [ebp-0x44],0x5e
  413c37:	xchg   ebp,eax
  413c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c39:	or     al,0x1c
  413c3b:	int3   
  413c3c:	out    dx,al
  413c3d:	rcl    BYTE PTR [ebx+edi*1+0xf],cl
  413c41:	hlt    
  413c42:	adc    al,0x55
  413c44:	xchg   edx,eax
  413c45:	popf   
  413c46:	xor    edi,eax
  413c48:	push   ds
  413c49:	mov    ds:0xc5f39c45,eax
  413c4e:	imul   esp,DWORD PTR [edi+0x78],0x564ba5f5
  413c55:	test   DWORD PTR [esi+0x57],ebx
  413c58:	mov    dl,0x7f
  413c5a:	pop    ss
  413c5b:	fiadd  WORD PTR [ecx+0x79]
  413c5e:	ror    BYTE PTR [edi],1
  413c60:	rol    BYTE PTR [edx+0x23],0x14
  413c64:	jecxz  0x413be6
  413c66:	test   bl,dl
  413c68:	xor    al,BYTE PTR [ebx-0x53bd4c76]
  413c6e:	push   ss
  413c6f:	mov    ch,0x4d
  413c71:	sbb    esp,ebp
  413c73:	mov    dh,0x2e
  413c75:	pop    ecx
  413c76:	and    DWORD PTR [ebx],esi
  413c78:	push   esp
  413c79:	and    ecx,eax
  413c7b:	mov    bl,0x50
  413c7d:	mov    bh,0x9d
  413c7f:	and    DWORD PTR [eax+0x1f],0x94d2c002
  413c86:	pop    ebp
  413c87:	popf   
  413c88:	mov    esi,0x64ef9e7
  413c8d:	push   0x1f
  413c8f:	nop
  413c90:	or     DWORD PTR [ebx+0x49],0x9512f954
  413c97:	loop   0x413c98
  413c99:	inc    eax
  413c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c9b:	adc    BYTE PTR [ebx],dl
  413c9d:	js     0x413c51
  413c9f:	cmp    eax,0xf0b896ca
  413ca4:	icebp  
  413ca5:	call   0xbb5f87f8
  413caa:	mov    al,ds:0xdb38d61
  413caf:	into   
  413cb0:	les    esi,FWORD PTR [edx-0x66]
  413cb3:	xor    eax,0xbb4c3b29
  413cb8:	and    bh,BYTE PTR [edx]
  413cba:	adc    DWORD PTR [edi+0x74],edx
  413cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cbe:	xor    BYTE PTR [ebx+0x8],dl
  413cc1:	push   ds
  413cc2:	pop    ebx
  413cc3:	std    
  413cc4:	mov    ecx,0xbc79e0f6
  413cc9:	pop    ecx
  413cca:	clc    
  413ccb:	xor    BYTE PTR [eax+0x4eeb3773],bh
  413cd1:	cmp    bh,BYTE PTR [eax]
  413cd3:	dec    edx
  413cd4:	mov    eax,0x15f7734a
  413cd9:	loop   0x413c8c
  413cdb:	dec    ebp
  413cdc:	in     al,0x24
  413cde:	stos   BYTE PTR es:[edi],al
  413cdf:	loopne 0x413cc2
  413ce1:	xchg   ecx,eax
  413ce2:	pop    ds
  413ce3:	inc    edi
  413ce4:	and    ch,dh
  413ce6:	(bad)  
  413ce7:	pop    ebx
  413ce8:	xchg   ebx,eax
  413ce9:	or     DWORD PTR [eax-0x4],edi
  413cec:	retf   0x3d9d
  413cef:	xor    al,0xd
  413cf1:	ret    
  413cf2:	push   esp
  413cf3:	sbb    edi,0x5b
  413cf6:	add    BYTE PTR [esi+0x7e210c8d],bl
  413cfc:	mov    bh,0x77
  413cfe:	loope  0x413cff
  413d00:	mov    bh,0x71
  413d02:	in     al,dx
  413d03:	mov    esi,ecx
  413d05:	pop    es
  413d06:	ss ror dh,cl
  413d09:	int    0x8f
  413d0b:	(bad)  
  413d0c:	and    eax,0xe62f7c94
  413d11:	xchg   DWORD PTR [ebp+ebp*1+0x23],ecx
  413d15:	jle    0x413cdf
  413d17:	push   cs
  413d18:	sbb    bl,BYTE PTR [esi]
  413d1a:	vmovhps xmm1,xmm7,QWORD PTR ds:0x93a2ba30
  413d22:	xor    BYTE PTR [ecx],bl
  413d24:	(bad)  
  413d25:	int3   
  413d26:	shr    bh,1
  413d28:	(bad)  
  413d29:	xchg   edx,eax
  413d2a:	pop    ss
  413d2b:	imul   DWORD PTR ds:0x2ecb343d
  413d31:	jmp    0x413dae
  413d33:	aad    0x28
  413d35:	out    0x40,al
  413d37:	add    edi,eax
  413d39:	call   0x8ea5cca7
  413d3e:	cli    
  413d3f:	and    BYTE PTR [edx],bh
  413d41:	cdq    
  413d42:	(bad)  
  413d43:	fdiv   DWORD PTR [ecx+0x2e]
  413d46:	rcr    DWORD PTR cs:[edi],1
  413d49:	push   es
  413d4a:	sub    cl,bl
  413d4c:	cmc    
  413d4d:	or     eax,0xd24086c3
  413d52:	inc    ecx
  413d53:	add    eax,0x6b094f67
  413d58:	data16 std 
  413d5a:	aas    
  413d5b:	dec    esp
  413d5c:	xchg   edx,eax
  413d5d:	loope  0x413dbd
  413d5f:	inc    esp
  413d60:	push   es
  413d61:	test   cl,al
  413d63:	lds    ecx,FWORD PTR [ecx-0x235cfbd5]
  413d69:	or     edi,edx
  413d6b:	jae    0x413d80
  413d6d:	cdq    
  413d6e:	rcl    DWORD PTR [ebp+0x40],0x5d
  413d72:	mov    dh,0x59
  413d74:	shr    cl,1
  413d76:	ds xchg edx,eax
  413d78:	dec    edx
  413d79:	pop    eax
  413d7a:	xor    DWORD PTR [edi],ecx
  413d7c:	out    0x4f,al
  413d7e:	std    
  413d7f:	div    BYTE PTR [ebx-0x4d]
  413d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d83:	or     dl,BYTE PTR [ebp+0x4a]
  413d86:	xor    BYTE PTR [esi-0x1d],al
  413d89:	mov    edi,0x3561b2e9
  413d8e:	xor    dh,BYTE PTR [ecx-0x6a6fc5ed]
  413d94:	mov    eax,0x141a6e61
  413d99:	shl    BYTE PTR [edi-0xd01ef47],1
  413d9f:	ins    BYTE PTR es:[edi],dx
  413da0:	retf   
  413da1:	ret    
  413da2:	cwde   
  413da3:	mov    al,fs:0x4aebad4a
  413da9:	pop    esi
  413daa:	stos   DWORD PTR es:[edi],eax
  413dab:	ror    BYTE PTR [edi-0x1094e685],0xa7
  413db2:	lahf   
  413db3:	pop    ds
  413db4:	sub    ecx,DWORD PTR ds:0xaa12aa0a
  413dba:	ds mov dl,0x70
  413dbd:	call   0x29:0x655c2f56
  413dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dc5:	inc    al
  413dc7:	scas   al,BYTE PTR es:[edi]
  413dc8:	inc    edi
  413dc9:	aaa    
  413dca:	pop    ecx
  413dcb:	jmp    0x96da309f
  413dd0:	call   eax
  413dd2:	popa   
  413dd3:	aad    0x12
  413dd5:	cs inc ecx
  413dd7:	xchg   ecx,ebx
  413dd9:	sbb    dl,BYTE PTR [edx]
  413ddb:	pop    ebp
  413ddc:	enter  0xdba8,0x58
  413de0:	fcomp  QWORD PTR [ecx+ebx*8]
  413de3:	rcl    DWORD PTR [esi+0x71],cl
  413de6:	sbb    eax,ebp
  413de8:	push   ss
  413de9:	test   al,0x31
  413deb:	add    eax,0xe4c22df6
  413df0:	ds jbe 0x413dda
  413df3:	div    DWORD PTR [edi-0x60585998]
  413df9:	xchg   ebp,eax
  413dfa:	imul   ebp,DWORD PTR ds:0x797a0eac,0xd
  413e01:	(bad)  
  413e02:	loope  0x413dca
  413e04:	mov    dl,bl
  413e06:	dec    esi
  413e07:	and    al,0xfc
  413e09:	xor    al,0x5
  413e0b:	stos   BYTE PTR es:[edi],al
  413e0c:	sub    ecx,DWORD PTR [esi]
  413e0e:	mov    ch,dl
  413e10:	sti    
  413e11:	jle    0x413e79
  413e13:	enter  0x1695,0x5e
  413e17:	mov    eax,edx
  413e19:	pop    ss
  413e1a:	leave  
  413e1b:	pop    ecx
  413e1c:	or     BYTE PTR [esi],0xe7
  413e1f:	cmp    dl,BYTE PTR [ebp-0x4b]
  413e22:	sub    DWORD PTR [eax-0x54f73a40],ecx
  413e28:	js     0x413e2f
  413e2a:	jne    0x413db5
  413e2c:	inc    ebp
  413e2d:	push   edi
  413e2e:	jecxz  0x413e41
  413e30:	push   ss
  413e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e32:	mov    ds:0x7badfc4b,eax
  413e37:	rol    esp,0xdb
  413e3a:	shl    DWORD PTR [edx-0x55],1
  413e3d:	adc    eax,0xbb8f799c
  413e42:	sub    ebp,DWORD PTR [esi+eiz*2]
  413e45:	in     al,dx
  413e46:	scas   al,BYTE PTR es:[edi]
  413e47:	jae    0x413ddf
  413e49:	stc    
  413e4a:	leave  
  413e4b:	pop    ebx
  413e4c:	mov    dh,0x20
  413e4e:	pop    ecx
  413e4f:	sbb    ecx,edx
  413e51:	les    esi,FWORD PTR [esi-0x699f123]
  413e57:	adc    bl,BYTE PTR [eax-0x6]
  413e5a:	jbe    0x413e6d
  413e5c:	mov    bh,BYTE PTR [edi+0x1]
  413e5f:	dec    esi
  413e60:	iret   
  413e61:	jo     0x413e01
  413e63:	cmp    DWORD PTR [ebx],0x5c
  413e66:	inc    eax
  413e67:	test   eax,0xdaa1bd5b
  413e6c:	jp     0x413ed6
  413e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e6f:	in     eax,0xeb
  413e71:	rcr    esp,0xba
  413e74:	cdq    
  413e75:	sbb    eax,0xbb064e3b
  413e7a:	add    eax,0x476c9cb6
  413e7f:	mov    edi,0xcd70edd6
  413e84:	xchg   edi,eax
  413e85:	push   esi
  413e86:	dec    ebx
  413e87:	pop    ebp
  413e88:	push   eax
  413e89:	fisttp QWORD PTR [eax+0x6751fcb3]
  413e8f:	pop    ecx
  413e90:	xlat   BYTE PTR ds:[ebx]
  413e91:	rcr    BYTE PTR [ebp-0x7b5335e7],cl
  413e97:	add    BYTE PTR [eax+0x7ebf7ff],al
  413e9d:	push   cs
  413e9e:	cmp    eax,0x77493384
  413ea3:	inc    edi
  413ea4:	cli    
  413ea5:	push   esp
  413ea6:	mov    ch,0x5c
  413ea8:	fadd   QWORD PTR [ebx+0x1ca0bca9]
  413eae:	cli    
  413eaf:	adc    ebp,0xf334ff55
  413eb5:	pushf  
  413eb6:	push   ebx
  413eb7:	imul   ebp,DWORD PTR [eax],0x5c
  413eba:	cmc    
  413ebb:	aad    0x8f
  413ebd:	aad    0x44
  413ebf:	cmp    al,0x42
  413ec1:	sub    cl,BYTE PTR [edi+0x1d]
  413ec4:	dec    esp
  413ec5:	fwait
  413ec6:	mov    DWORD PTR [eax+0x14],edx
  413ec9:	and    ecx,edx
  413ecb:	mov    ebx,DWORD PTR [esi]
  413ecd:	fmul   DWORD PTR [ecx]
  413ecf:	adc    BYTE PTR [eax-0xa],dl
  413ed2:	das    
  413ed3:	aad    0xba
  413ed5:	inc    edx
  413ed6:	es fucomi st,st(3)
  413ed9:	retf   
  413eda:	adc    DWORD PTR [ebp+0x43ca7f35],ebx
  413ee0:	push   esp
  413ee1:	jmp    0x413f4e
  413ee3:	pop    ecx
  413ee4:	into   
  413ee5:	push   edx
  413ee6:	nop
  413ee7:	test   DWORD PTR [ecx],esi
  413ee9:	fs push cs
  413eeb:	fimul  WORD PTR [ebx-0x50]
  413eee:	fstp   TBYTE PTR gs:[eax+0x60]
  413ef2:	xchg   ebp,eax
  413ef3:	and    esp,0xffffffae
  413ef6:	int3   
  413ef7:	mov    esp,edx
  413ef9:	pop    ebx
  413efa:	push   ds
  413efb:	retf   
  413efc:	xlat   BYTE PTR ds:[ebx]
  413efd:	add    esi,DWORD PTR [ebp+0x489c280d]
  413f03:	cld    
  413f04:	and    edx,DWORD PTR [ebp-0x1a]
  413f07:	in     eax,dx
  413f08:	ficom  WORD PTR [eax]
  413f0a:	push   ss
  413f0b:	out    0x22,al
  413f0d:	xor    bl,BYTE PTR [edx]
  413f0f:	mov    edx,0x5b24614a
  413f14:	test   BYTE PTR [ebp-0x18],dl
  413f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f18:	fbld   TBYTE PTR [eax-0xf]
  413f1b:	pop    ebx
  413f1c:	dec    eax
  413f1d:	outs   dx,BYTE PTR ds:[esi]
  413f1e:	rcl    DWORD PTR [edi-0x5ebb9d04],1
  413f24:	xor    DWORD PTR [esi+0x6244c0d4],ecx
  413f2a:	mov    DWORD PTR [eax],ebp
  413f2c:	mov    bh,0x56
  413f2e:	add    al,ch
  413f30:	and    WORD PTR [eax],di
  413f33:	(bad)  
  413f35:	jmp    0xaf73c36b
  413f3a:	cs dec edi
  413f3c:	dec    esp
  413f3d:	and    eax,0x8bffc7b0
  413f42:	xchg   ebp,ebp
  413f44:	mov    edx,0x14aa6b8a
  413f49:	outs   dx,DWORD PTR ds:[esi]
  413f4a:	bound  ecx,QWORD PTR [edi+0x4831ee01]
  413f50:	je     0x413f5e
  413f52:	sbb    DWORD PTR [esp+edx*4+0x983e0a8],ecx
  413f59:	out    0x35,al
  413f5b:	or     edi,esi
  413f5d:	mov    eax,0xa4f46a18
  413f62:	push   ss
  413f63:	retf   0x6ca0
  413f66:	mov    ebp,0xc45e1fa7
  413f6b:	call   0x77d6:0xe3713047
  413f72:	push   ebx
  413f73:	add    al,al
  413f75:	jns    0x413f57
  413f77:	cli    
  413f78:	(bad)  
  413f79:	pop    ds
  413f7a:	adc    ch,BYTE PTR [edi+esi*4]
  413f7d:	dec    ecx
  413f7e:	adc    al,0xd7
  413f80:	outs   dx,BYTE PTR ds:[esi]
  413f81:	xchg   ebx,eax
  413f82:	xor    cl,ch
  413f84:	inc    ebp
  413f85:	push   es
  413f86:	pop    DWORD PTR [eax-0xda75dc4]
  413f8c:	xor    BYTE PTR [edx],cl
  413f8e:	out    dx,al
  413f8f:	push   ebx
  413f90:	and    eax,DWORD PTR [edi]
  413f92:	push   esi
  413f93:	push   ebx
  413f94:	mov    esi,DWORD PTR [esi+ebx*4-0x627d87b5]
  413f9b:	or     dh,ah
  413f9d:	xor    BYTE PTR [eax],cl
  413f9f:	xchg   esp,eax
  413fa0:	retf   0x4df0
  413fa3:	sbb    edi,esp
  413fa5:	pop    eax
  413fa6:	out    dx,al
  413fa7:	(bad)  
  413fa8:	mov    al,ds:0x1402d7d8
  413fad:	sub    al,0x7d
  413faf:	dec    eax
  413fb0:	clc    
  413fb1:	int    0xaa
  413fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fb4:	daa    
  413fb5:	(bad)  
  413fb6:	xchg   edi,eax
  413fb7:	mov    ecx,0x31c7b2b8
  413fbc:	pushf  
  413fbd:	push   ss
  413fbe:	dec    edi
  413fbf:	ret    0x77c3
  413fc2:	sub    BYTE PTR [edi-0x3],0x2c
  413fc6:	test   al,0x59
  413fc8:	ja     0x413f9a
  413fca:	je     0x414030
  413fcc:	(bad)  
  413fcd:	push   esp
  413fcf:	sbb    al,BYTE PTR [esi]
  413fd1:	and    eax,0xe6f6a034
  413fd6:	push   ebx
  413fd7:	popa   
  413fd8:	aaa    
  413fd9:	add    DWORD PTR [edx+0x31491dcc],eax
  413fdf:	sar    DWORD PTR [esi+0x2583778e],0x8a
  413fe6:	mov    WORD PTR [ecx],cs
  413fe8:	or     ah,BYTE PTR [eax+ebp*2-0x29]
  413fec:	mov    dh,0x14
  413fee:	adc    ch,0x39
  413ff1:	dec    ebp
  413ff2:	sbb    ebx,DWORD PTR [esi]
  413ff4:	mov    eax,0x356138b
  413ff9:	test   al,0x48
  413ffb:	outs   dx,DWORD PTR ds:[esi]
  413ffc:	adc    dl,0xf5
  413fff:	and    DWORD PTR [ebx-0x3f4b8607],edx
  414005:	jg     0x41406c
  414007:	add    bl,BYTE PTR [edx-0x7c]
  41400a:	fisttp DWORD PTR [ecx]
  41400c:	dec    ebp
  41400d:	sub    dh,dh
  41400f:	call   0x1060:0xbac000a4
  414016:	mov    al,ds:0xc68f4dfd
  41401b:	inc    esi
  41401c:	mov    ch,0x97
  41401e:	mov    ebx,0x870f3cec
  414023:	cmp    eax,0x3bdad00b
  414028:	xchg   ecx,eax
  414029:	shl    BYTE PTR [edx],1
  41402b:	xchg   DWORD PTR ds:0xdb8668c0,eax
  414031:	inc    ecx
  414032:	sbb    dh,BYTE PTR [ebp+0xb04bab1]
  414038:	test   BYTE PTR [eax+0x315b61f7],0xd9
  41403f:	pop    edi
  414040:	sbb    al,0xd2
  414042:	scas   eax,DWORD PTR es:[edi]
  414043:	sbb    ah,ch
  414045:	outs   dx,BYTE PTR ds:[esi]
  414046:	imul   esi,DWORD PTR [ebx-0x1a91d75c],0x33d4df90
  414050:	(bad)  
  414051:	lock xchg edi,eax
  414053:	sub    DWORD PTR [edi+ecx*8],eax
  414056:	push   ebx
  414057:	cmp    edx,DWORD PTR [esp+ebp*4-0x5fb8107b]
  41405e:	inc    esp
  41405f:	inc    ecx
  414060:	mov    ecx,0xa6a9a2e9
  414065:	fdiv   QWORD PTR [edi-0x60]
  414068:	mov    ds:0xfcecb1ef,al
  41406d:	retf   0xf6a2
  414070:	cmp    eax,DWORD PTR [esi+esi*1]
  414073:	or     DWORD PTR [eax+0x49],eax
  414076:	mov    BYTE PTR [esi+0x1c],bl
  414079:	arpl   sp,cx
  41407b:	cli    
  41407c:	cmc    
  41407d:	xchg   ebp,eax
  41407e:	vmwrite ecx,DWORD PTR ds:0x20917196
  414085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414086:	enter  0x6c0f,0x91
  41408a:	loop   0x414040
  41408c:	mov    BYTE PTR [bx+di],bl
  41408f:	push   esi
  414090:	xchg   esi,eax
  414091:	jmp    0x4140f0
  414093:	stos   DWORD PTR es:[edi],eax
  414094:	data16 mov ds:0xc469d5df,al
  41409a:	cmp    edi,DWORD PTR [eax+0x2927a94d]
  4140a0:	add    ebx,ebp
  4140a2:	out    0xef,al
  4140a4:	cld    
  4140a5:	pop    esp
  4140a6:	div    DWORD PTR [edx-0x2c25df70]
  4140ac:	adc    al,BYTE PTR [edx]
  4140ae:	popf   
  4140af:	hlt    
  4140b0:	mov    edx,0x75af2e55
  4140b5:	(bad)  
  4140b6:	push   edx
  4140b7:	xor    al,0xf2
  4140b9:	jbe    0x414048
  4140bb:	mov    dh,ch
  4140bd:	getsec 
  4140bf:	sahf   
  4140c0:	sub    BYTE PTR [ebx+0x562a603e],ah
  4140c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140c7:	out    0x70,al
  4140c9:	cmc    
  4140ca:	in     al,0xbf
  4140cc:	retf   0xd329
  4140cf:	xor    eax,0x23f9d3b
  4140d4:	and    ecx,ebx
  4140d6:	inc    ebp
  4140d7:	pop    eax
  4140d8:	ins    BYTE PTR es:[edi],dx
  4140d9:	test   eax,0x7b43a7d5
  4140de:	in     eax,dx
  4140df:	pop    es
  4140e0:	ss mov dh,0x3f
  4140e3:	mov    cl,0xd8
  4140e5:	jle    0x41414d
  4140e7:	jmp    0x43c8cce8
  4140ec:	jo     0x4140cc
  4140ee:	add    bl,BYTE PTR [ebx-0x27082ecc]
  4140f4:	int3   
  4140f5:	hlt    
  4140f6:	or     DWORD PTR [eax-0x4c7f5f7c],ecx
  4140fc:	imul   esp,DWORD PTR [ebp+0x62b400eb],0x91535dc2
  414106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414107:	jae    0x41414e
  414109:	add    bl,BYTE PTR [edx-0x20]
  41410c:	sahf   
  41410d:	(bad)  
  41410e:	pop    ecx
  41410f:	rol    DWORD PTR [ebx],0xf6
  414112:	jae    0x4140e8
  414114:	mov    edi,0x893481de
  414119:	mov    ds:0x1d227843,al
  41411e:	(bad)  
  41411f:	pop    edx
  414120:	mov    al,0x65
  414122:	outs   dx,BYTE PTR ds:[esi]
  414123:	adc    eax,0xfc07cafc
  414128:	adc    eax,0x8573564a
  41412d:	adc    dh,dh
  41412f:	or     DWORD PTR [ebx],edx
  414131:	stos   BYTE PTR es:[edi],al
  414132:	lea    ebp,[edx]
  414134:	cmp    al,BYTE PTR [ebx+0x90db933]
  41413a:	pop    esp
  41413b:	(bad)  
  41413c:	pop    es
  41413d:	or     BYTE PTR [ecx+0x47ccaf2e],bl
  414143:	jb     0x414125
  414145:	ja     0x41417d
  414147:	push   ss
  414148:	pop    ebx
  414149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41414a:	push   edi
  41414b:	xor    al,0x1b
  41414d:	xchg   ecx,eax
  41414e:	push   cs
  41414f:	imul   eax,DWORD PTR [edx],0xfd6fd455
  414155:	and    eax,0xdf3299b6
  41415a:	ss icebp 
  41415c:	sar    BYTE PTR [edi+0x38dc82],0xf2
  414163:	mov    eax,ds:0x2a54c8d7
  414168:	xchg   ebp,eax
  414169:	mov    ds:0x492028b1,eax
  41416e:	call   0xc2f88b24
  414173:	sub    DWORD PTR [ecx+0x60],ebp
  414176:	mov    al,cl
  414178:	dec    ecx
  414179:	fld1   
  41417b:	fidivr WORD PTR [ebp+0x60]
  41417e:	lea    ecx,[esi]
  414180:	add    eax,0xef99c4cf
  414185:	call   0x3ceef972
  41418a:	ror    BYTE PTR [esi-0x61b83448],cl
  414190:	pop    ebp
  414191:	add    bh,BYTE PTR [edx-0x67]
  414194:	shl    BYTE PTR ds:0xa858bb34,0x78
  41419b:	leave  
  41419c:	pushf  
  41419d:	imul   edx,DWORD PTR [eax+0x26],0x74
  4141a1:	retf   0x574b
  4141a4:	dec    eax
  4141a5:	or     dh,BYTE PTR [eax]
  4141a7:	xchg   ecx,eax
  4141a8:	xchg   esp,eax
  4141a9:	cmp    al,0xf6
  4141ab:	xchg   BYTE PTR [ebx],ch
  4141ad:	add    ebx,DWORD PTR [eax+0x7a76647d]
  4141b3:	and    edi,DWORD PTR [edi-0x78]
  4141b6:	mov    ebx,0x4d2d199c
  4141bb:	mov    BYTE PTR [edi+0x5751e44e],0x2c
  4141c2:	xchg   esp,eax
  4141c3:	jg     0x4141ff
  4141c5:	mov    edx,0x137accaa
  4141ca:	scas   al,BYTE PTR es:[edi]
  4141cb:	shr    BYTE PTR [esi],cl
  4141cd:	xchg   esi,eax
  4141ce:	repz leave 
  4141d0:	and    eax,0x18f23b1c
  4141d5:	mov    ch,0x14
  4141d7:	lahf   
  4141d8:	sub    dl,dl
  4141da:	ret    0x8658
  4141dd:	sbb    bh,BYTE PTR [esi+ebx*1-0x79]
  4141e1:	scas   eax,DWORD PTR es:[edi]
  4141e2:	out    0x5e,al
  4141e4:	call   edx
  4141e6:	aaa    
  4141e7:	pop    esi
  4141e8:	add    esi,edi
  4141ea:	and    ebp,DWORD PTR [esi+0x49]
  4141ed:	gs mov ah,0x45
  4141f0:	adc    DWORD PTR [eax],eax
  4141f2:	out    dx,eax
  4141f3:	rol    BYTE PTR [ecx+0x683a4311],1
  4141f9:	rol    DWORD PTR [edx-0x37d8e440],0xa1
  414200:	jbe    0x4141a6
  414202:	retf   
  414203:	pop    esp
  414204:	test   eax,0x1c9d12f5
  414209:	(bad)
  41420c:	sub    ebx,DWORD PTR [ecx]
  41420e:	(bad)  
  41420f:	or     al,0x78
  414211:	jae    0x414266
  414213:	jne    0x414281
  414215:	inc    esp
  414216:	imul   edi,DWORD PTR [ebp-0xede01e],0x89f72a95
  414220:	jg     0x414209
  414222:	and    ah,al
  414224:	add    ecx,DWORD PTR [ebx+0x6ed9e597]
  41422a:	call   0xa17dc7d8
  41422f:	retf   
  414230:	(bad)  
  414231:	sub    DWORD PTR [ebx],esi
  414233:	dec    ecx
  414234:	or     ah,BYTE PTR [ecx-0x5a7402d4]
  41423a:	xor    dh,al
  41423c:	repnz (bad) 
  41423e:	xlat   BYTE PTR ds:[ebx]
  41423f:	lods   al,BYTE PTR ds:[esi]
  414240:	or     DWORD PTR ds:0x2a05d30e,ebp
  414246:	jmp    0xecf325c0
  41424b:	or     al,0xf7
  41424d:	js     0x41426b
  41424f:	xlat   BYTE PTR ds:[ebx]
  414250:	fstp   QWORD PTR [ebx]
  414252:	mov    ch,0x43
  414254:	mov    eax,ds:0xf3874818
  414259:	(bad)  
  41425b:	or     BYTE PTR [esi+0x16e09860],0x12
  414262:	js     0x4142bc
  414264:	jp     0x414291
  414266:	xor    DWORD PTR [ebp-0x2700a346],ecx
  41426c:	in     al,0x27
  41426e:	int    0x68
  414270:	xor    eax,0xdf188188
  414275:	inc    ecx
  414276:	sub    eax,0xa81ffa58
  41427b:	xlat   BYTE PTR ds:[ebx]
  41427c:	and    BYTE PTR [edx+0x39834f55],bh
  414282:	shl    BYTE PTR [ecx],0x8e
  414285:	jg     0x4142ea
  414287:	iret   
  414288:	jne    0x41421d
  41428a:	pop    eax
  41428b:	arpl   WORD PTR [edx-0x5b],ax
  41428e:	sub    eax,0x9fd8358c
  414293:	(bad)  ds:0xe1c105c5
  414299:	xor    DWORD PTR [edi-0x47a26ff],eax
  41429f:	inc    edx
  4142a0:	and    BYTE PTR [ebp-0x37],bl
  4142a3:	xchg   edx,eax
  4142a4:	sub    eax,0x6bea2260
  4142a9:	pushf  
  4142aa:	mov    al,ds:0x38986fa
  4142af:	lock lahf 
  4142b1:	adc    dh,BYTE PTR [esi+0x768926dd]
  4142b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142b8:	inc    ebx
  4142b9:	fcom   DWORD PTR [edi+ebx*1+0x67]
  4142bd:	push   es
  4142be:	or     ch,BYTE PTR [edx+0x7fcb1eef]
  4142c4:	cmp    ah,BYTE PTR [esi]
  4142c6:	mov    ah,BYTE PTR [ecx+0x6c]
  4142c9:	mov    ds,WORD PTR [eax+0x6f]
  4142cc:	scas   al,BYTE PTR es:[edi]
  4142cd:	xchg   ebx,eax
  4142ce:	pop    edx
  4142cf:	cmp    esi,DWORD PTR [edi+0x2296297e]
  4142d5:	mov    DWORD PTR [edx+0x524941de],esi
  4142db:	out    0x33,eax
  4142dd:	pop    ss
  4142de:	scas   al,BYTE PTR es:[edi]
  4142df:	dec    edx
  4142e0:	jne    0x41426f
  4142e2:	pop    es
  4142e3:	cmp    edx,ebp
  4142e5:	iret   
  4142e6:	scas   eax,DWORD PTR es:[edi]
  4142e7:	xor    ah,BYTE PTR [esi-0x15]
  4142ea:	mov    edx,0xa9d9c685
  4142ef:	push   0xffffff89
  4142f1:	dec    ebx
  4142f2:	inc    ebx
  4142f3:	sar    BYTE PTR [ebx],0xb1
  4142f6:	pusha  
  4142f7:	fidiv  WORD PTR [esi+edx*2-0x16]
  4142fb:	popf   
  4142fc:	jp     0x41434a
  4142fe:	pop    esi
  4142ff:	mov    ebx,0xd3c2155d
  414304:	xchg   edi,eax
  414305:	or     eax,0x15bd4a4d
  41430a:	and    edi,DWORD PTR [ebp+0x609c6264]
  414310:	adc    esp,DWORD PTR [edx+0xd]
  414313:	fild   DWORD PTR [edi+0x72a269b]
  414319:	inc    ebp
  41431a:	lods   al,BYTE PTR ds:[esi]
  41431b:	fild   WORD PTR [edx-0x112487db]
  414321:	leave  
  414322:	nop
  414323:	loopne 0x4142c6
  414325:	push   0xc88a9dae
  41432a:	jmp    0xeaf1:0xe55fb763
  414331:	mov    ecx,0x123e5c86
  414336:	cmp    eax,0x9be2a4c6
  41433b:	pop    ds
  41433c:	ret    0xe920
  41433f:	cli    
  414340:	mov    eax,0x3b19b333
  414345:	mov    bl,BYTE PTR [ebx+edx*1]
  414348:	mov    ah,0xb8
  41434a:	push   es
  41434b:	add    dl,bh
  41434d:	rcr    ebp,cl
  41434f:	test   eax,0x6a613af0
  414354:	hlt    
  414355:	and    edi,DWORD PTR [esi-0x12]
  414358:	sub    DWORD PTR [ebx+0x6e870db0],0xe895b486
  414362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414363:	sbb    eax,0x216566b
  414368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414369:	mov    ebp,0x4aa92341
  41436e:	sbb    ebp,DWORD PTR [edx]
  414370:	pop    edx
  414371:	(bad)  
  414373:	and    al,dl
  414375:	mov    al,BYTE PTR [edx]
  414377:	xchg   edi,eax
  414378:	data16 cmp BYTE PTR [edx+0x7e995ba6],ah
  41437f:	xor    ecx,0x5ed37f85
  414385:	inc    ebx
  414386:	push   0x77
  414388:	add    ecx,DWORD PTR [eax+ebx*1-0x4c847e38]
  41438f:	ret    
  414390:	fdiv   QWORD PTR [esi]
  414392:	dec    esi
  414393:	sub    ebp,DWORD PTR [edx-0x1c]
  414396:	lods   eax,DWORD PTR ds:[esi]
  414397:	inc    esi
  414398:	cmc    
  414399:	imul   eax,DWORD PTR [ebx+0x39],0xffffffe1
  41439d:	hlt    
  41439e:	xor    DWORD PTR [ebx-0xd7044],ebx
  4143a4:	out    0x64,eax
  4143a6:	fxch   st(1)
  4143a8:	(bad)  
  4143a9:	jp     0x414392
  4143ab:	call   0x5b3d:0x96fe8a40
  4143b2:	les    esp,FWORD PTR [eax+ecx*4-0xc3d25aa]
  4143b9:	in     al,0x84
  4143bb:	jmp    0x6fa8:0x859bbb86
  4143c2:	lock stos BYTE PTR es:[edi],al
  4143c4:	scas   eax,DWORD PTR es:[edi]
  4143c5:	jae    0x41437e
  4143c7:	fstp   DWORD PTR [edi-0x269ebce8]
  4143cd:	fs je  0x41436a
  4143d0:	ds sti 
  4143d2:	leave  
  4143d3:	lock sub edx,esp
  4143d6:	stos   BYTE PTR es:[edi],al
  4143d7:	shr    BYTE PTR [eax-0x57],cl
  4143da:	xor    ch,BYTE PTR [ecx+0x541272be]
  4143e0:	es lahf 
  4143e2:	dec    ebp
  4143e3:	cmp    ch,cl
  4143e5:	jle    0x4143ac
  4143e7:	xor    BYTE PTR [esi+0x2c70a62a],bh
  4143ed:	fsubp  st(1),st
  4143ef:	pop    ss
  4143f0:	and    al,0x80
  4143f2:	and    DWORD PTR [ebx+0x320e71d4],esp
  4143f8:	(bad)  
  4143f9:	fist   WORD PTR [ecx-0x748894f]
  4143ff:	inc    edi
  414400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414401:	or     cl,BYTE PTR [esi+0x52569e57]
  414407:	shr    BYTE PTR [edx+0x6a],1
  41440a:	stos   BYTE PTR es:[edi],al
  41440b:	clc    
  41440c:	pop    es
  41440d:	mov    ebx,0x53c560f0
  414412:	adc    eax,0xdf650bd5
  414417:	push   es
  414418:	or     eax,0xcd9740b0
  41441d:	leave  
  41441e:	and    dl,BYTE PTR [edi]
  414420:	popa   
  414421:	xchg   ecx,eax
  414422:	lods   ax,WORD PTR ds:[esi]
  414424:	mov    edx,0xdf4439de
  414429:	mov    DWORD PTR gs:[esi+ecx*2-0x6eeec35c],ebx
  414431:	pop    ebx
  414432:	in     al,0x8c
  414434:	push   esi
  414435:	pop    edi
  414436:	add    DWORD PTR [ecx],ebp
  414438:	and    eax,0x721aa99f
  41443d:	or     bh,cl
  41443f:	dec    ebx
  414440:	int3   
  414441:	add    ebp,DWORD PTR [ebp+0x47]
  414444:	mov    ds,WORD PTR [eax+ebp*2]
  414447:	aaa    
  414448:	mov    edx,DWORD PTR [edx+0xa]
  41444b:	adc    eax,0xd6c4959
  414450:	mov    esp,0xb651a28e
  414455:	popa   
  414456:	xchg   edx,eax
  414457:	call   0xb6eb0b58
  41445c:	call   FWORD PTR fs:[ebx]
  41445f:	rcr    BYTE PTR [edx+ecx*8-0x3ce86132],1
  414466:	(bad)
  41446b:	hlt    
  41446c:	inc    esp
  41446d:	and    ecx,DWORD PTR [edi+0x5e]
  414470:	adc    ah,BYTE PTR [ecx+0x1eace57d]
  414476:	jmp    0xe924:0x330e9ec4
  41447d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41447e:	mov    eax,ds:0xe015dfc1
  414483:	mov    ebx,DWORD PTR [eax-0x63]
  414486:	mov    eax,DWORD PTR [edi+0x3017667c]
  41448c:	sub    eax,0xe02ff343
  414491:	stos   BYTE PTR es:[edi],al
  414492:	jl     0x4144fc
  414494:	cmp    bl,BYTE PTR [ecx-0x2e]
  414497:	xor    eax,0x981c3e72
  41449c:	lds    esi,FWORD PTR [ecx-0x74]
  41449f:	sub    BYTE PTR [eax-0xa],0x8
  4144a3:	lods   eax,DWORD PTR ds:[esi]
  4144a4:	or     cl,BYTE PTR [edi]
  4144a6:	lock and BYTE PTR [eax+0xf],ah
  4144aa:	stc    
  4144ab:	pop    eax
  4144ac:	popf   
  4144ad:	inc    ecx
  4144ae:	mov    bh,0x72
  4144b0:	ds mov ah,0xcf
  4144b3:	add    dl,BYTE PTR [edx+edx*2+0x3f]
  4144b7:	jecxz  0x414464
  4144b9:	retf   
  4144ba:	mov    bl,0xf0
  4144bc:	ret    0x9231
  4144bf:	xchg   BYTE PTR ds:0xbc7fcbda,bl
  4144c5:	fidivr DWORD PTR [esi+ebp*8+0x33]
  4144c9:	mov    ebx,esi
  4144cb:	sub    edi,DWORD PTR [ecx]
  4144cd:	aad    0x51
  4144cf:	xchg   ebp,eax
  4144d0:	iret   
  4144d1:	ss int 0xc7
  4144d4:	shr    eax,cl
  4144d6:	mov    dl,0x2e
  4144d8:	push   0x50cd5c57
  4144dd:	stos   BYTE PTR es:[edi],al
  4144de:	cmp    edx,DWORD PTR [edx+0x269052b0]
  4144e4:	add    dl,BYTE PTR [edx-0xf]
  4144e7:	test   DWORD PTR [eax-0x4c],esi
  4144ea:	xchg   ecx,eax
  4144eb:	call   0x2c94:0x2567e58d
  4144f2:	push   esi
  4144f3:	sub    eax,0x2d6eb597
  4144f8:	mov    eax,ds:0x6acb391
  4144fd:	(bad)  
  4144fe:	out    dx,eax
  4144ff:	pop    eax
  414500:	leave  
  414501:	lock sbb esp,ebp
  414504:	sub    eax,0x551d3978
  414509:	jle    0x41454a
  41450b:	mov    al,ds:0x1bb64469
  414510:	call   0x1d6cace6
  414515:	data16 (bad) 
  414517:	mov    al,ds:0x70511199
  41451c:	fistp  DWORD PTR [ebx+0x7b5100c2]
  414522:	lods   al,BYTE PTR ds:[esi]
  414523:	mov    bh,0x5c
  414525:	jge    0x414516
  414527:	or     BYTE PTR [eax],0x70
  41452a:	rcl    BYTE PTR [edx-0x3d],cl
  41452d:	das    
  41452e:	xor    BYTE PTR [edx],al
  414530:	cmp    ch,dh
  414532:	aam    0x20
  414534:	bound  esp,QWORD PTR [eax+0x1]
  414537:	adc    eax,0x22fafff2
  41453c:	shl    DWORD PTR [ecx+0x30],0xae
  414540:	adc    cl,BYTE PTR [ecx]
  414542:	pop    ebx
  414543:	popf   
  414544:	and    ebp,DWORD PTR [ebx]
  414546:	cmp    DWORD PTR [eax],ebp
  414548:	sbb    ch,BYTE PTR [ebp+0x61]
  41454b:	and    eax,0xb12f0cc8
  414550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414551:	(bad)  
  414552:	repz (bad) 
  414554:	fcmovnbe st,st(7)
  414556:	mov    al,BYTE PTR [edx-0x11]
  414559:	lods   eax,DWORD PTR ds:[esi]
  41455a:	and    BYTE PTR [ebx+ebp*8],0xa5
  41455e:	dec    ecx
  41455f:	je     0x4145cc
  414561:	jo     0x41453d
  414563:	dec    esi
  414564:	mov    ecx,0x6c73a606
  414569:	scas   eax,DWORD PTR es:[edi]
  41456a:	rcl    ebp,0xc6
  41456d:	imul   edi,DWORD PTR ds:0x60278111,0x8
  414574:	gs ja  0x4145b0
  414577:	ins    BYTE PTR es:[edi],dx
  414578:	out    0xe2,eax
  41457a:	cs jne 0x41455c
  41457d:	jmp    0xd932:0x3061bb37
  414584:	cmp    BYTE PTR ds:0x877ad6c7,ah
  41458a:	and    dh,BYTE PTR [esi+0x6e]
  41458d:	and    edi,DWORD PTR [edx-0x3c19e59a]
  414593:	adc    DWORD PTR [edx],0x60
  414596:	xor    eax,0x3b792c31
  41459b:	ja     0x4145e9
  41459d:	mov    bh,0xa1
  41459f:	lods   eax,DWORD PTR ds:[esi]
  4145a0:	cli    
  4145a1:	call   DWORD PTR [ebx+0x4b401482]
  4145a7:	sub    ch,BYTE PTR [edx]
  4145a9:	iret   
  4145aa:	sub    DWORD PTR [esp+ebx*8],ebx
  4145ad:	sub    eax,0x197e3fa4
  4145b2:	sbb    bh,dl
  4145b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145b5:	inc    esi
  4145b6:	pop    esi
  4145b7:	ja     0x4145bd
  4145b9:	cmp    DWORD PTR [ecx],ecx
  4145bb:	jb     0x41458c
  4145bd:	hlt    
  4145be:	and    edi,esi
  4145c0:	adc    eax,0x25bfc2f8
  4145c5:	mov    esp,0x8ff81272
  4145ca:	dec    esi
  4145cb:	mov    dl,0xc0
  4145cd:	(bad)  
  4145ce:	mov    cl,0xa2
  4145d0:	pop    ebp
  4145d1:	inc    edx
  4145d2:	mov    eax,ds:0x698a0344
  4145d7:	adc    DWORD PTR [ebx+0x1840181e],ebp
  4145dd:	int3   
  4145de:	int3   
  4145df:	daa    
  4145e0:	dec    esp
  4145e2:	inc    ecx
  4145e3:	into   
  4145e4:	into   
  4145e5:	lods   eax,DWORD PTR ds:[esi]
  4145e6:	fistp  DWORD PTR [esi+0x912002a]
  4145ec:	inc    esi
  4145ed:	inc    ebx
  4145ee:	cdq    
  4145ef:	sbb    eax,0xecb06ae8
  4145f4:	sbb    esi,DWORD PTR [eax-0x1e1bf61e]
  4145fa:	fiadd  WORD PTR [eax]
  4145fc:	or     edi,ebp
  4145fe:	jl     0x414651
  414600:	pop    eax
  414601:	loop   0x414652
  414603:	leave  
  414604:	fbstp  TBYTE PTR [ebp-0x38dd8db5]
  41460a:	and    al,0xb6
  41460c:	ins    BYTE PTR es:[edi],dx
  41460d:	fdivr  DWORD PTR [ebx-0x18]
  414610:	mov    al,ds:0x335d31e9
  414615:	retf   
  414616:	cmp    ah,BYTE PTR [edi+0x1d3ed9bf]
  41461c:	movq   mm3,QWORD PTR [esi-0x8]
  414620:	jbe    0x414646
  414622:	fwait
  414623:	and    al,0xb5
  414625:	out    0xc9,al
  414627:	mov    WORD PTR [edi],ss
  414629:	outs   dx,BYTE PTR ds:[esi]
  41462a:	mov    bl,0x5d
  41462c:	fs push cs
  41462e:	xor    al,BYTE PTR [edi]
  414630:	mov    ebp,0x672bd155
  414635:	jge    0x41469b
  414637:	mov    dl,0xfe
  414639:	cdq    
  41463a:	xchg   ebp,eax
  41463b:	mov    esi,0x5439ec7e
  414640:	call   0x4f91:0xd4a37282
  414647:	jecxz  0x4145ce
  414649:	ror    edx,1
  41464b:	(bad)  
  41464c:	jb     0x4145da
  41464e:	inc    esp
  41464f:	inc    eax
  414650:	(bad)  
  414651:	lea    esi,ds:0x645c7f14
  414657:	fisubr DWORD PTR [ecx+0x43]
  41465a:	xchg   ebx,eax
  41465b:	adc    eax,DWORD PTR [eax-0x7c]
  41465e:	xor    DWORD PTR [ebx+edx*4],edi
  414661:	push   cs
  414662:	ss int3 
  414664:	jb     0x414690
  414666:	sbb    eax,0xb8ae2bb8
  41466b:	and    DWORD PTR [ebx+0x2c5f03e2],0xfae7106c
  414675:	xor    eax,0xc906dec8
  41467a:	ret    0xb35f
  41467d:	popf   
  41467e:	mov    eax,ds:0x3207a603
  414683:	out    dx,eax
  414684:	xchg   BYTE PTR [ecx-0x25],ah
  414687:	xor    BYTE PTR [edx+eiz*2],dh
  41468a:	loopne 0x41466e
  41468c:	push   ebx
  41468d:	fxch   st(5)
  41468f:	out    0xab,eax
  414691:	pop    es
  414692:	xchg   esp,eax
  414693:	jnp    0x4146ff
  414695:	std    
  414696:	(bad)  
  414697:	hlt    
  414698:	into   
  414699:	(bad)  
  41469a:	push   ss
  41469b:	pop    ds
  41469c:	sub    ch,ah
  41469e:	sti    
  41469f:	bound  ebp,QWORD PTR ds:0x1c086aba
  4146a5:	sti    
  4146a6:	pop    esp
  4146a7:	(bad)  
  4146a8:	mov    ebx,0x82f8d11
  4146ad:	imul   dh
  4146af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146b0:	pop    eax
  4146b1:	sbb    ah,dl
  4146b3:	je     0x414734
  4146b5:	sub    al,0x1a
  4146b7:	and    al,0xf9
  4146b9:	(bad)  
  4146bb:	cli    
  4146bc:	push   es
  4146bd:	jl     0x41465d
  4146bf:	dec    eax
  4146c0:	or     ah,0x82
  4146c3:	add    esp,eax
  4146c5:	retf   
  4146c6:	xchg   ebx,eax
  4146c7:	ins    BYTE PTR es:[edi],dx
  4146c8:	push   ebx
  4146c9:	sub    al,bh
  4146cb:	inc    eax
  4146cc:	imul   ecx,eax,0x7bdae396
  4146d2:	pop    eax
  4146d3:	jbe    0x4146e0
  4146d5:	adc    BYTE PTR [edi-0x77314e59],bh
  4146db:	push   ecx
  4146dc:	hlt    
  4146dd:	mov    eax,0x51640d7a
  4146e2:	mov    cl,0x45
  4146e4:	pop    eax
  4146e5:	mov    eax,ds:0xd057d587
  4146ea:	nop
  4146eb:	clc    
  4146ec:	pop    ss
  4146ed:	jno    0x414698
  4146ef:	shr    DWORD PTR [edi-0x19],0x74
  4146f3:	pop    edi
  4146f4:	fs jne 0x4146fb
  4146f7:	push   ds
  4146f8:	xchg   esi,eax
  4146f9:	sti    
  4146fa:	or     edx,eax
  4146fc:	add    cl,dh
  4146fe:	pop    ss
  4146ff:	inc    eax
  414700:	dec    edi
  414701:	sbb    DWORD PTR [eax-0x38],ecx
  414704:	adc    BYTE PTR [ecx],ch
  414706:	push   esp
  414707:	fcom   st(1)
  414709:	jne    0x4146f4
  41470b:	call   0xeaa04cc4
  414710:	inc    eax
  414711:	xbegin 0xe9ca01b4
  414717:	cmp    BYTE PTR [edx+0x1bdec59b],bl
  41471d:	aas    
  41471e:	das    
  41471f:	loopne 0x4146ff
  414721:	ss jns 0x4146f7
  414724:	push   es
  414725:	cmp    al,BYTE PTR [esi-0x701773ce]
  41472b:	jmp    0x27925fd
  414730:	in     eax,0xb
  414732:	ins    BYTE PTR es:[edi],dx
  414733:	ss push ss
  414735:	mov    dh,0xdb
  414737:	jne    0x4146bc
  414739:	adc    ebp,DWORD PTR [esi-0x24]
  41473c:	fstp   QWORD PTR [ebp+0xe]
  41473f:	cmp    BYTE PTR [ecx],bh
  414741:	pop    eax
  414742:	sub    BYTE PTR [eax],0xe7
  414745:	push   ds
  414746:	mov    esi,ss
  414748:	mov    esp,0x34d4b8d4
  41474d:	(bad)  
  41474e:	mov    WORD PTR [edi+0x21],ds
  414751:	and    ah,BYTE PTR [edi]
  414753:	loope  0x41471d
  414755:	ja     0x4146e8
  414757:	cmp    cl,BYTE PTR [edi]
  414759:	fisubr WORD PTR es:[esi]
  41475c:	push   esi
  41475d:	sbb    eax,0x17bc4201
  414762:	add    eax,0x2f99bb6d
  414767:	xor    BYTE PTR [esi],0xfd
  41476a:	mov    ecx,DWORD PTR [eiz*2-0x2f440653]
  414771:	inc    ebp
  414772:	scas   eax,DWORD PTR es:[edi]
  414773:	jecxz  0x4147eb
  414775:	cwde   
  414776:	pavgw  mm1,QWORD PTR ds:0xacc4193c
  41477d:	loop   0x414787
  41477f:	rcl    DWORD PTR [ecx-0x4fd63894],1
  414785:	out    0xc4,eax
  414787:	pop    ebx
  414788:	(bad)  
  414789:	sub    bl,ah
  41478b:	sub    BYTE PTR [edx+esi*1],dh
  41478e:	mov    esp,0x136affca
  414793:	test   eax,esp
  414795:	inc    ecx
  414796:	and    eax,0x1c8f5db2
  41479b:	imul   edi,DWORD PTR [ecx-0x66],0x71a31f93
  4147a2:	fadd   DWORD PTR [ebp-0x7fff29c2]
  4147a8:	rol    BYTE PTR [ecx],1
  4147aa:	(bad)  
  4147ab:	fwait
  4147ac:	je     0x4147cf
  4147ae:	and    eax,0xae6d9749
  4147b3:	mov    es,WORD PTR [ebx+0x2be61649]
  4147b9:	xor    eax,0x63791ab8
  4147be:	jnp    0x4147a3
  4147c0:	sti    
  4147c1:	mov    ds:0x3b013dd9,al
  4147c6:	xchg   DWORD PTR [ecx-0x17],esi
  4147c9:	cmp    eax,DWORD PTR [edi]
  4147cb:	cld    
  4147cc:	jae    0x414802
  4147ce:	xchg   esp,edx
  4147d0:	adc    ebx,edi
  4147d2:	fist   DWORD PTR [ebx]
  4147d4:	js     0x414840
  4147d6:	scas   eax,DWORD PTR es:[edi]
  4147d7:	add    al,bh
  4147d9:	(bad)  
  4147da:	retf   
  4147db:	or     eax,0x1b6f1cdf
  4147e0:	clc    
  4147e1:	leave  
  4147e2:	add    edx,eax
  4147e4:	test   DWORD PTR [eax-0x7b6473d5],edi
  4147ea:	aaa    
  4147eb:	pushf  
  4147ec:	mov    ds:0x73285a56,eax
  4147f1:	pusha  
  4147f2:	pop    ecx
  4147f3:	xor    al,0x44
  4147f5:	pop    es
  4147f6:	btc    DWORD PTR ds:0x6142dfad,ecx
  4147fd:	sbb    al,0xe7
  4147ff:	adc    BYTE PTR [edi],0xce
  414802:	jmp    0xef18:0x83475ca4
  414809:	mov    edx,DWORD PTR [edi+0x4392303]
  41480f:	dec    ebp
  414810:	push   ebx
  414811:	mov    dh,0xa8
  414813:	and    al,0x45
  414815:	mov    cl,0x1
  414817:	sti    
  414818:	hlt    
  414819:	push   edi
  41481a:	mov    edi,0xe14d003a
  41481f:	ja     0x4147b7
  414821:	cdq    
  414822:	ret    
  414823:	or     esp,DWORD PTR [edi+eax*4-0x3aa3e24a]
  41482a:	frstor [ecx-0x711337ac]
  414830:	dec    ebp
  414831:	inc    esi
  414832:	xor    DWORD PTR [esi-0x22],esp
  414835:	rcr    DWORD PTR [edx-0x630b5b52],cl
  41483b:	jne    0x41486a
  41483d:	xchg   esi,eax
  41483e:	neg    DWORD PTR [ebx]
  414840:	inc    ebx
  414841:	cmp    ch,BYTE PTR [edi]
  414843:	pop    edx
  414844:	sti    
  414845:	jb     0x41481a
  414847:	xchg   edi,eax
  414848:	push   eax
  414849:	(bad)  
  41484a:	adc    cl,BYTE PTR [eax-0x709ce961]
  414850:	pop    ss
  414851:	inc    ebp
  414852:	mov    esi,0xdc39c1d6
  414857:	test   BYTE PTR [eax-0x48],0xbe
  41485b:	jno    0x41489c
  41485d:	jp     0x41486a
  41485f:	pop    ebx
  414860:	xor    DWORD PTR [edi+ebp*8+0x58],edx
  414864:	mov    esi,0x1f61e50b
  414869:	in     eax,0x6f
  41486b:	ja     0x4147f6
  41486d:	push   ebx
  41486e:	sbb    eax,0xb605034a
  414873:	jns    0x4148c3
  414875:	adc    DWORD PTR [edi+esi*4-0xb],edi
  414879:	data16 mov bl,BYTE PTR ds:0x17ce1b71
  414880:	sbb    al,0xc7
  414882:	jmp    0xd750:0x21488b4f
  414889:	lea    ecx,[esi-0x2e]
  41488c:	addr16 jle 0x4148e9
  41488f:	sub    ch,BYTE PTR [eax-0x24]
  414892:	mov    edi,0x3208c0e4
  414897:	rcr    dl,cl
  414899:	or     DWORD PTR [edx-0x1ee397c5],0xab30f49
  4148a3:	sbb    ecx,esi
  4148a5:	xor    DWORD PTR [esi],esi
  4148a7:	mov    ecx,0x51fe398f
  4148ac:	add    ch,BYTE PTR ds:0xc7dfa528
  4148b2:	stos   BYTE PTR es:[edi],al
  4148b3:	enter  0x29c4,0x59
  4148b7:	mov    ch,0x6c
  4148b9:	scas   eax,DWORD PTR es:[edi]
  4148ba:	sub    edi,DWORD PTR ds:[ebp+0x27]
  4148be:	je     0x4148c6
  4148c0:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4148c2:	mov    es,WORD PTR [edx+ebp*4+0x51b6b829]
  4148c9:	pop    edx
  4148ca:	in     al,0x9c
  4148cc:	add    BYTE PTR [ebx],cl
  4148ce:	popa   
  4148cf:	dec    edx
  4148d0:	popf   
  4148d1:	repz or DWORD PTR [edx],ebp
  4148d4:	outs   dx,DWORD PTR ds:[esi]
  4148d5:	(bad)  
  4148d6:	adc    bh,BYTE PTR [edi+0x33]
  4148d9:	push   ss
  4148da:	mov    esi,DWORD PTR [edx]
  4148dc:	(bad)  
  4148dd:	es leave 
  4148df:	and    edx,eax
  4148e1:	mov    BYTE PTR [ebx],bl
  4148e3:	push   ecx
  4148e4:	dec    esi
  4148e5:	cdq    
  4148e6:	mov    ebp,0x7a3440
  4148eb:	sbb    esp,DWORD PTR [edi+ebx*1+0x5a]
  4148ef:	inc    edx
  4148f0:	xchg   ebx,eax
  4148f1:	mov    ds:0xfcb173d7,eax
  4148f6:	call   0x4691:0x534a3e81
  4148fd:	sbb    ch,BYTE PTR [edx+0x34dda78d]
  414903:	loope  0x41493f
  414905:	and    ebp,DWORD PTR [edi-0x5f]
  414908:	add    BYTE PTR [ebx],ch
  41490a:	push   ebx
  41490b:	retf   
  41490c:	mov    dl,0x49
  41490e:	enter  0xf618,0x3f
  414912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414913:	cmp    DWORD PTR [esi],ecx
  414915:	jbe    0x4148b5
  414917:	hlt    
  414918:	or     BYTE PTR [edx+edx*1+0x1b],dl
  41491c:	sbb    ah,bl
  41491e:	pushf  
  41491f:	shr    BYTE PTR [esi+eiz*8+0x35],0x43
  414924:	fnsave [ebp+0x29bb73c9]
  41492a:	enter  0x87f4,0x29
  41492e:	shr    DWORD PTR [esi],1
  414930:	test   al,0xa3
  414932:	call   0x115ebd70
  414937:	cmp    eax,0xfc124a9c
  41493c:	push   ecx
  41493d:	mov    ebp,0x956442e7
  414942:	jp     0x414929
  414944:	sahf   
  414945:	aam    0xaa
  414947:	lock fild QWORD PTR [esi-0x4c]
  41494b:	jecxz  0x41495e
  41494d:	mov    ds:0xd247ab50,al
  414952:	into   
  414953:	push   0x861552f7
  414958:	and    eax,0xda9405d1
  41495d:	add    DWORD PTR [ecx],ebp
  41495f:	xlat   BYTE PTR ds:[ebx]
  414960:	push   ebp
  414961:	mov    bh,0xd9
  414963:	mov    edi,0xe0fa63fa
  414968:	cmp    eax,0x1daa1542
  41496d:	sbb    ebx,ebp
  41496f:	and    dh,BYTE PTR [edx]
  414971:	or     edi,ecx
  414973:	jecxz  0x4149b4
  414975:	ins    BYTE PTR es:[edi],dx
  414976:	jbe    0x41494d
  414978:	iret   
  414979:	mov    bl,0x9c
  41497b:	mov    dl,0x6d
  41497d:	mov    eax,ds:0x50f82d8a
  414982:	mov    esp,0xa2af7a7
  414987:	xor    BYTE PTR [ebx-0x58807bf8],0x12
  41498e:	push   eax
  41498f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414990:	js     0x41492a
  414992:	jno    0x4149df
  414994:	xchg   ebx,eax
  414995:	push   esp
  414996:	mov    ss,WORD PTR [edx-0x793c82a1]
  41499c:	test   ecx,ecx
  41499e:	mov    ch,0xd8
  4149a0:	xchg   BYTE PTR [esi+0xe9eec24],bl
  4149a6:	jbe    0x41492b
  4149a8:	push   esp
  4149a9:	xor    BYTE PTR [esi+0x1824908b],dl
  4149af:	fwait
  4149b0:	int3   
  4149b1:	fs div edx
  4149b4:	lds    eax,FWORD PTR [esp+ebp*2]
  4149b7:	mov    edi,0x8e70f156
  4149bc:	test   DWORD PTR [ebp-0x9],edi
  4149bf:	pushf  
  4149c0:	adc    DWORD PTR [edi-0x4510bdde],ecx
  4149c6:	imul   eax,ecx,0x502921b7
  4149cc:	test   DWORD PTR [ebp-0x4b606381],0xdf8a1907
  4149d6:	fisub  DWORD PTR [edi-0x1b926c87]
  4149dc:	jne    0x4149ce
  4149de:	sbb    ebx,ecx
  4149e0:	iret   
  4149e1:	sti    
  4149e2:	ins    BYTE PTR es:[di],dx
  4149e4:	sbb    bl,BYTE PTR [ebp-0x39]
  4149e7:	shl    esi,0x41
  4149ea:	nop
  4149eb:	aas    
  4149ec:	jb     0x4149cf
  4149ee:	jg     0x4149aa
  4149f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149f1:	mov    esi,0x12fe6b27
  4149f6:	jne    0x414a74
  4149f8:	mov    eax,ds:0x9cecd6d7
  4149fd:	mov    ch,0x47
  4149ff:	dec    ebx
  414a00:	push   edi
  414a01:	(bad)  
  414a02:	ficomp WORD PTR [edx-0x54596d31]
  414a08:	jbe    0x414a7c
  414a0a:	sbb    al,0xec
  414a0c:	sti    
  414a0d:	shl    DWORD PTR [ecx-0x1],1
  414a10:	and    ebx,DWORD PTR [esi+0x60]
  414a13:	enter  0xa173,0x2b
  414a17:	call   0xe73b:0x4b728ad9
  414a1e:	imul   ebp,eax,0xe14dc1cf
  414a24:	gs clc 
  414a26:	and    ebp,DWORD PTR [esi+0x7e0bd627]
  414a2c:	das    
  414a2d:	mov    al,0x91
  414a2f:	loop   0x414a93
  414a31:	out    0x21,al
  414a33:	adc    BYTE PTR [edi+eax*1-0x54f25e5d],0x76
  414a3b:	loopne 0x414a27
  414a3d:	int    0x52
  414a3f:	loope  0x4149fd
  414a41:	imul   edi,DWORD PTR ds:0x6eb5e54e,0x48
  414a48:	fsub   QWORD PTR [ecx-0x22]
  414a4b:	dec    esp
  414a4c:	scas   al,BYTE PTR es:[edi]
  414a4d:	sbb    edx,DWORD PTR [esi]
  414a4f:	test   esp,esi
  414a51:	test   eax,0x11e68c7e
  414a56:	pusha  
  414a57:	cs rcl esi,0x6b
  414a5b:	in     eax,dx
  414a5c:	aad    0x7d
  414a5e:	in     al,0x8e
  414a60:	xchg   edi,eax
  414a61:	les    edx,FWORD PTR [ecx]
  414a63:	in     eax,dx
  414a64:	imul   DWORD PTR [eax-0x458c06e4]
  414a6a:	mov    DWORD PTR [esi-0x55],esi
  414a6d:	inc    esi
  414a6e:	lock in eax,dx
  414a70:	neg    BYTE PTR [ebx]
  414a72:	cs test eax,0x8239e26
  414a78:	repz sbb eax,0xf0f3fc7e
  414a7e:	cmp    DWORD PTR [ecx+0x24],ecx
  414a81:	push   eax
  414a82:	pop    ebx
  414a83:	sbb    BYTE PTR [ecx],0x1a
  414a86:	test   BYTE PTR [ebp-0x24],al
  414a89:	rcr    BYTE PTR [edi+edi*8],0xce
  414a8d:	outs   dx,BYTE PTR ds:[esi]
  414a8e:	sbb    bh,BYTE PTR [ecx+0x35]
  414a91:	sub    al,0x3a
  414a93:	inc    edx
  414a94:	xor    al,0xc7
  414a96:	je     0x414b02
  414a98:	mov    dh,0x3e
  414a9a:	aam    0xca
  414a9c:	stos   DWORD PTR es:[edi],eax
  414a9d:	shl    DWORD PTR [esi-0x22416660],cl
  414aa3:	push   es
  414aa4:	mov    edx,DWORD PTR [edx-0x6bad951e]
  414aaa:	push   ebx
  414aab:	popf   
  414aac:	(bad)  
  414aad:	jnp    0x414ae8
  414aaf:	fsub   QWORD PTR [ecx+0x37403702]
  414ab5:	inc    edi
  414ab6:	retf   0xfde4
  414ab9:	aam    0x66
  414abb:	imul   edi
  414abd:	out    0x9f,al
  414abf:	in     eax,0xe0
  414ac1:	push   ebp
  414ac2:	cmp    eax,0x89cb733b
  414ac7:	mov    eax,ds:0xd5364953
  414acc:	popa   
  414acd:	mov    esi,0x1c06948e
  414ad2:	add    BYTE PTR [ecx-0x34e97acc],dl
  414ad8:	fild   QWORD PTR [ecx-0x4e5d62c0]
  414ade:	xchg   ebx,eax
  414adf:	jns    0x414a6b
  414ae1:	pop    esp
  414ae2:	pop    ebx
  414ae3:	xchg   esp,eax
  414ae4:	scas   eax,DWORD PTR es:[edi]
  414ae5:	ins    BYTE PTR es:[edi],dx
  414ae6:	mov    eax,0xe2d102ea
  414aeb:	dec    edi
  414aec:	and    BYTE PTR [eax],ah
  414aee:	lock hlt 
  414af0:	sbb    BYTE PTR es:[eax],dl
  414af3:	xchg   esi,eax
  414af4:	cmp    DWORD PTR [esi-0xa],edi
  414af7:	push   es
  414af8:	add    BYTE PTR [ebx-0x6b30888d],0x1c
  414aff:	dec    ebp
  414b00:	xchg   ebx,eax
  414b01:	je     0x414ae0
  414b03:	cld    
  414b04:	enter  0x25de,0xb0
  414b08:	push   eax
  414b09:	hlt    
  414b0a:	repz pop esi
  414b0c:	pop    ebx
  414b0d:	push   es
  414b0e:	ret    
  414b0f:	jae    0x414ae5
  414b11:	sbb    al,0x61
  414b13:	mov    dl,0xfc
  414b15:	scas   al,BYTE PTR es:[edi]
  414b16:	mov    ch,0xaa
  414b18:	sub    eax,0xa3932de0
  414b1d:	sbb    al,0x97
  414b1f:	jp     0x414ac9
  414b21:	cmc    
  414b22:	push   ebx
  414b23:	jg     0x414b89
  414b25:	in     eax,0x8b
  414b27:	and    ch,bl
  414b29:	dec    edi
  414b2a:	pusha  
  414b2b:	imul   edi,DWORD PTR [esi+0x7a],0x27e6a9bd
  414b32:	loop   0x414b4f
  414b34:	nop
  414b35:	mov    dl,0xcf
  414b37:	cmp    BYTE PTR [edx-0x3bf5a422],ah
  414b3d:	push   esi
  414b3e:	sahf   
  414b3f:	jmp    0xd76723ec
  414b44:	cmp    ch,BYTE PTR [ecx+ebx*1-0x52]
  414b48:	jns    0x414b8b
  414b4a:	les    esi,FWORD PTR [ecx+edi*2+0x7fb9cb44]
  414b51:	ja     0x414ba4
  414b53:	outs   dx,DWORD PTR ds:[esi]
  414b54:	mov    eax,eax
  414b56:	push   cs
  414b57:	adc    al,0x6d
  414b59:	sbb    eax,0x261e3324
  414b5e:	jmp    0xacc0dd44
  414b63:	push   edx
  414b64:	sar    bl,1
  414b66:	xlat   BYTE PTR ds:[ebx]
  414b67:	push   edi
  414b68:	sub    ax,0x57ab
  414b6c:	daa    
  414b6d:	fbld   TBYTE PTR [edi+0x70]
  414b70:	lds    ecx,FWORD PTR [ecx]
  414b72:	jg     0x414be5
  414b74:	jmp    0xfc25:0xa87cb76d
  414b7b:	jmp    0x414b58
  414b7d:	mov    eax,ds:0x172ca583
  414b82:	sbb    DWORD PTR [esi-0xa5a37cb],esi
  414b88:	push   cs
  414b89:	stos   DWORD PTR es:[edi],eax
  414b8a:	pusha  
  414b8b:	fs ret 0x37d4
  414b8f:	ret    
  414b90:	ins    BYTE PTR es:[edi],dx
  414b91:	inc    ebp
  414b93:	bnd je 0x414b5f
  414b96:	cmp    eax,0x3e90fde4
  414b9b:	in     eax,0x86
  414b9d:	call   0x295a:0xda113665
  414ba4:	ja     0x414bf5
  414ba6:	push   0xfffffff9
  414ba8:	(bad)  
  414ba9:	mov    dl,0x74
  414bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bac:	in     al,0x86
  414bae:	pop    esp
  414baf:	and    ebp,DWORD PTR [ecx]
  414bb1:	push   ecx
  414bb2:	aaa    
  414bb3:	cld    
  414bb4:	mov    ebp,0xf074f48c
  414bb9:	push   ebp
  414bba:	fs mov dh,0x26
  414bbd:	or     BYTE PTR [edx-0x5f],dl
  414bc0:	mov    edx,0xb1a88874
  414bc5:	jmp    DWORD PTR [eax-0x27]
  414bc8:	lock in al,0xbc
  414bcb:	dec    ebx
  414bcc:	push   0x21
  414bce:	sar    BYTE PTR [edx+0x6db3162f],0xba
  414bd5:	add    DWORD PTR ds:0x69b25450,ecx
  414bdb:	ficom  DWORD PTR [esi*1-0x78d5a5b9]
  414be2:	pop    ebp
  414be3:	sar    esp,0x75
  414be6:	mov    edx,0x1800f357
  414beb:	retf   
  414bec:	push   0x65ceee51
  414bf1:	imul   ebp,DWORD PTR [edi+0x6d],0x2f
  414bf5:	iret   
  414bf6:	out    0x2e,eax
  414bf8:	fcmove st,st(4)
  414bfa:	xchg   dh,dh
  414bfc:	mov    BYTE PTR [ebx+0x2e],bl
  414bff:	push   eax
  414c00:	push   edx
  414c01:	aaa    
  414c02:	or     edi,DWORD PTR [esi]
  414c04:	loope  0x414c09
  414c06:	fnstcw WORD PTR [edi]
  414c08:	icebp  
  414c09:	sbb    ecx,DWORD PTR [edi+0x22]
  414c0c:	push   cs
  414c0d:	add    DWORD PTR [edx-0x29],esi
  414c10:	daa    
  414c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c12:	test   BYTE PTR [ecx+0x58],0x3b
  414c16:	(bad)
  414c19:	mov    ecx,0xc972b49a
  414c1e:	and    ecx,DWORD PTR [eax-0x2b]
  414c21:	cmp    eax,0x98cddf22
  414c26:	inc    ebx
  414c27:	scas   eax,DWORD PTR es:[edi]
  414c28:	jnp    0x414c19
  414c2a:	xor    bh,BYTE PTR [eax+0x41]
  414c2d:	jo     0x414c49
  414c2f:	pop    ebx
  414c30:	push   esi
  414c31:	enter  0x6158,0x6f
  414c35:	xchg   esp,eax
  414c36:	cwde   
  414c37:	xchg   DWORD PTR [edx],eax
  414c39:	and    eax,0xe0aeab55
  414c3e:	in     eax,0x95
  414c40:	mov    esp,0x260ddca1
  414c45:	fucomi st,st(7)
  414c47:	cli    
  414c48:	add    esp,DWORD PTR [edx-0xdd2b62d]
  414c4e:	cdq    
  414c4f:	(bad)
  414c52:	add    eax,0x73962115
  414c57:	daa    
  414c58:	scas   al,BYTE PTR es:[edi]
  414c59:	jl     0x414c89
  414c5b:	mov    edx,0xb754b669
  414c60:	pop    es
  414c61:	mov    cl,0x99
  414c63:	inc    ebp
  414c64:	sbb    BYTE PTR [ebx-0x48d74bcf],dl
  414c6a:	(bad)
  414c6d:	mov    ah,0xa5
  414c6f:	ins    DWORD PTR es:[edi],dx
  414c70:	div    DWORD PTR [edi-0x3713cb8e]
  414c76:	scas   al,BYTE PTR es:[edi]
  414c77:	into   
  414c78:	jae    0x414c69
  414c7a:	add    ah,BYTE PTR [ebp-0xc]
  414c7d:	add    BYTE PTR [eax-0x4b],ah
  414c80:	inc    edx
  414c81:	inc    ebp
  414c82:	aam    0x53
  414c84:	pop    esi
  414c85:	jecxz  0x414c80
  414c87:	fcmovbe st,st(1)
  414c89:	sub    esp,eax
  414c8b:	shl    BYTE PTR [ecx],1
  414c8d:	xchg   edx,eax
  414c8e:	add    eax,edi
  414c90:	loop   0x414ca9
  414c92:	jmp    0x7d25:0x72d37f76
  414c99:	les    esp,FWORD PTR [ecx+0x72b3ab4c]
  414c9f:	pop    ebx
  414ca0:	out    0xeb,al
  414ca2:	push   ebp
  414ca3:	add    al,0x7c
  414ca5:	cmc    
  414ca6:	rcr    DWORD PTR [edx+0x9],1
  414ca9:	ret    0xb576
  414cac:	mov    ah,0x6f
  414cae:	out    dx,al
  414caf:	ins    BYTE PTR es:[edi],dx
  414cb0:	stos   DWORD PTR es:[edi],eax
  414cb1:	test   BYTE PTR [eax],ah
  414cb3:	mov    ds:0xfea22688,eax
  414cb8:	mov    bl,cl
  414cba:	pop    ss
  414cbb:	test   BYTE PTR [eax-0x4a],0x4d
  414cbf:	xor    DWORD PTR [esi+0x9],ebp
  414cc2:	or     BYTE PTR [esp],cl
  414cc5:	sub    bl,BYTE PTR [edx-0x3d]
  414cc8:	dec    edx
  414cc9:	and    edi,DWORD PTR [eax]
  414ccb:	jp     0x414c59
  414ccd:	mov    DWORD PTR [ecx],0xd4868ba1
  414cd3:	xchg   DWORD PTR [eax],esi
  414cd5:	in     al,0x11
  414cd7:	out    0xd3,eax
  414cd9:	popf   
  414cda:	xor    BYTE PTR [ebp+0x6797c8d8],bh
  414ce0:	retf   0x6084
  414ce3:	mov    dl,0xf8
  414ce5:	and    ah,BYTE PTR [ebp-0x38962521]
  414ceb:	and    al,0x3b
  414ced:	dec    ebx
  414cee:	in     al,dx
  414cef:	cld    
  414cf0:	push   ebp
  414cf1:	push   ds
  414cf2:	jnp    0x414d2b
  414cf4:	jmp    0x7a7b:0x2cea6a49
  414cfb:	xor    dl,dl
  414cfd:	inc    ebx
  414cfe:	pop    esi
  414cff:	ja     0x414cf6
  414d01:	mov    ah,0x44
  414d03:	icebp  
  414d04:	mov    bh,0x46
  414d06:	fndisi(8087 only) 
  414d08:	inc    ecx
  414d09:	(bad)  
  414d0a:	jmp    DWORD PTR [ebx-0x4d]
  414d0d:	cdq    
  414d0e:	mov    DWORD PTR [esi],ebp
  414d10:	fs push cs
  414d12:	mov    ch,BYTE PTR [edx]
  414d14:	push   ebp
  414d15:	or     BYTE PTR [esi+0x391353e],al
  414d1b:	dec    esp
  414d1c:	retf   
  414d1d:	loopne 0x414cb8
  414d1f:	std    
  414d20:	popa   
  414d21:	jae    0x414d5f
  414d23:	lahf   
  414d24:	mov    DWORD PTR [edi-0x65],edx
  414d27:	call   0x8ad1:0xee14586f
  414d2e:	into   
  414d2f:	aam    0x76
  414d31:	cld    
  414d32:	pop    ss
  414d33:	(bad)  
  414d34:	push   ds
  414d35:	pop    ecx
  414d36:	jle    0x414cc8
  414d38:	lea    edx,[esp+edx*8+0x1d]
  414d3c:	mov    ds:0x54f9acc0,eax
  414d41:	push   ecx
  414d42:	addr16 xchg ebx,eax
  414d44:	lods   eax,DWORD PTR ds:[esi]
  414d45:	scas   eax,DWORD PTR es:[edi]
  414d46:	je     0x414da9
  414d48:	mov    dh,0xa3
  414d4a:	mov    cl,0x6f
  414d4c:	lods   al,BYTE PTR ds:[esi]
  414d4d:	mov    dh,0x6e
  414d4f:	stos   BYTE PTR es:[edi],al
  414d50:	fsubr  QWORD PTR [edi+ebp*8]
  414d53:	out    0x3,al
  414d55:	shl    BYTE PTR [edi-0x4f],cl
  414d58:	add    al,0x21
  414d5a:	test   DWORD PTR [edx-0x4ca410b],0xa0a6be32
  414d64:	std    
  414d65:	or     eax,0xbcf0b955
  414d6a:	jmp    0xbd212036
  414d6f:	mov    ah,0x5f
  414d71:	in     eax,dx
  414d72:	dec    edi
  414d73:	mov    dl,0x84
  414d75:	add    eax,0x50326553
  414d7a:	xchg   edx,eax
  414d7b:	adc    eax,eax
  414d7d:	repnz mov eax,0xea37c495
  414d83:	(bad)  
  414d84:	push   ecx
  414d85:	ror    ch,1
  414d87:	mov    ecx,0x6bb2de2f
  414d8c:	lods   al,BYTE PTR ds:[esi]
  414d8d:	sbb    dh,ah
  414d8f:	and    DWORD PTR [eax],ebx
  414d91:	push   esp
  414d92:	fs je  0x414d29
  414d95:	fadd   QWORD PTR [esi+0xa]
  414d98:	adc    al,0x9e
  414d9a:	call   0x15c5a2cf
  414d9f:	fs jmp 0x8f0e:0xf8a70191
  414da7:	jg     0x414d76
  414da9:	daa    
  414daa:	mov    dl,0x62
  414dac:	jle    0x414dd6
  414dae:	add    bh,BYTE PTR [ebx+0x5b]
  414db1:	inc    eax
  414db2:	outs   dx,DWORD PTR ds:[esi]
  414db3:	jae    0x414e12
  414db5:	(bad)  
  414db6:	sbb    al,0xcb
  414db8:	jns    0x414d5f
  414dba:	inc    eax
  414dbb:	push   ebx
  414dbc:	mov    esi,0x4c74e99c
  414dc1:	inc    esp
  414dc2:	jecxz  0x414db6
  414dc4:	mov    DWORD PTR [ebx],0x7ba33af1
  414dca:	and    WORD PTR [edi],di
  414dcd:	and    BYTE PTR [esi-0x4de84df3],ah
  414dd3:	fld    TBYTE PTR [esi+ebx*2]
  414dd6:	mov    bl,0x8b
  414dd8:	mov    ebp,0x60a7a33f
  414ddd:	sub    dh,bl
  414ddf:	sbb    bh,dh
  414de1:	mov    edx,0x6a6fc740
  414de6:	sbb    al,0xec
  414de8:	or     bh,bh
  414dea:	cmc    
  414deb:	cwde   
  414dec:	loope  0x414da4
  414dee:	(bad)  
  414def:	jb     0x414e60
  414df1:	out    0x6d,eax
  414df3:	and    ebx,esi
  414df5:	mov    edi,DWORD PTR [edx+esi*2-0x6eff0f9c]
  414dfc:	mov    edi,0xfe95e997
  414e01:	xor    al,BYTE PTR [ebp-0x5fa60b9f]
  414e07:	shl    DWORD PTR [esi+ecx*4+0x3347b4d5],cl
  414e0e:	cmp    ch,BYTE PTR [eax+0xb9729a1]
  414e14:	sbb    BYTE PTR [ecx+0x7716fd2d],al
  414e1a:	and    eax,0xa24ac6ac
  414e1f:	mov    ss,ebx
  414e21:	gs mov edx,0x65df6287
  414e27:	xchg   ebx,eax
  414e28:	mov    al,0x9b
  414e2a:	push   ds
  414e2b:	out    0xd4,eax
  414e2d:	sub    ebx,esi
  414e2f:	xor    BYTE PTR [ecx],dh
  414e31:	lods   al,BYTE PTR ds:[esi]
  414e32:	lods   al,BYTE PTR ds:[esi]
  414e33:	test   DWORD PTR [ecx],esp
  414e35:	mov    edi,0x181f2f4a
  414e3a:	not    DWORD PTR [ecx]
  414e3c:	xchg   DWORD PTR [esi],eax
  414e3e:	adc    eax,0xed242e8f
  414e43:	cmc    
  414e44:	pop    eax
  414e45:	dec    edx
  414e46:	mov    esp,0xa390d8c0
  414e4b:	adc    DWORD PTR [ebx],esi
  414e4d:	cmc    
  414e4e:	hlt    
  414e4f:	in     al,0x59
  414e51:	xchg   DWORD PTR [edx+0xe97a351],edi
  414e57:	popa   
  414e58:	lods   eax,DWORD PTR ds:[esi]
  414e59:	mov    WORD PTR [edi+ecx*1-0x4d],ss
  414e5d:	and    edi,eax
  414e5f:	out    dx,al
  414e60:	mov    dh,0x4d
  414e62:	sub    BYTE PTR [esi+esi*8],ch
  414e65:	pop    eax
  414e66:	out    0x4,al
  414e68:	push   ds
  414e69:	push   ecx
  414e6a:	or     ebp,esp
  414e6c:	push   ebp
  414e6d:	daa    
  414e6e:	pusha  
  414e6f:	pop    ss
  414e70:	call   0x2fd0:0xe8d9d3e0
  414e77:	nop
  414e78:	cli    
  414e79:	jbe    0x414ee4
  414e7b:	jl     0x414e3f
  414e7d:	adc    DWORD PTR [edi+0x77537659],esi
  414e83:	pop    ss
  414e84:	dec    esi
  414e85:	mov    ecx,0x7070de5c
  414e8a:	inc    eax
  414e8b:	xchg   esi,eax
  414e8c:	mov    ah,0xd5
  414e8e:	sub    al,0x93
  414e90:	imul   ebx,edi,0xd0a4248b
  414e96:	imul   edi,ebx,0x32
  414e99:	pop    ds
  414e9a:	push   edx
  414e9b:	xor    edi,eax
  414e9d:	outs   dx,DWORD PTR ds:[esi]
  414e9e:	aad    0x81
  414ea0:	xor    BYTE PTR [ecx],bl
  414ea2:	iret   
  414ea3:	in     eax,dx
  414ea4:	xor    DWORD PTR [ebp*4+0x785bc69c],ebx
  414eab:	shr    dl,0x61
  414eae:	test   BYTE PTR [edx-0x73],al
  414eb1:	fld    DWORD PTR [eax+0x5d]
  414eb4:	push   ecx
  414eb5:	rcr    BYTE PTR [esi+0x2e],1
  414eb8:	sub    al,0xc7
  414eba:	sbb    BYTE PTR [edi],ah
  414ebc:	push   ds
  414ebd:	mov    ebx,ecx
  414ebf:	sbb    eax,DWORD PTR [ecx-0x47]
  414ec2:	add    eax,0x172aa00d
  414ec7:	xchg   edi,eax
  414ec8:	fnstenv [edi]
  414eca:	push   ss
  414ecb:	jmp    0xdaa5da88
  414ed0:	ret    
  414ed1:	jnp    0x414f48
  414ed3:	dec    edi
  414ed4:	xchg   ecx,eax
  414ed5:	push   0xa84fe51c
  414eda:	inc    eax
  414edb:	sbb    DWORD PTR [ebx+0x66e26349],edi
  414ee1:	and    BYTE PTR ds:0x2e1da5d6,dh
  414ee7:	jp     0x414ec2
  414ee9:	mov    cs,WORD PTR [esi+0x4a9a5884]
  414eef:	loopne 0x414e76
  414ef1:	pop    ecx
  414ef2:	xchg   ecx,eax
  414ef3:	repnz or ch,BYTE PTR [ecx+0x4c8bdedd]
  414efa:	popf   
  414efb:	cmp    eax,ecx
  414efd:	(bad)  
  414eff:	pop    ss
  414f00:	sub    bl,dl
  414f02:	push   cs
  414f03:	xchg   ebp,eax
  414f04:	jbe    0x414ede
  414f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f07:	fbld   TBYTE PTR [edi-0x65]
  414f0a:	outs   dx,BYTE PTR ds:[esi]
  414f0b:	repz shr BYTE PTR [esi],0xd0
  414f0f:	jmp    0xa02ca1c4
  414f14:	(bad)  
  414f15:	in     eax,0xdd
  414f17:	mov    al,ds:0x5be63382
  414f1c:	dec    eax
  414f1d:	(bad)  
  414f1e:	xor    al,0x8a
  414f20:	cs and cl,cl
  414f23:	fistp  DWORD PTR [edx]
  414f25:	in     eax,0x66
  414f27:	sub    dl,bl
  414f29:	jmp    0x414ef6
  414f2b:	hlt    
  414f2c:	push   0x5d195ba0
  414f31:	fist   WORD PTR [edx]
  414f33:	in     al,dx
  414f34:	imul   edi,ebx,0xffffffd6
  414f37:	dec    esp
  414f38:	or     eax,0x88a44dbf
  414f3d:	lock dec edx
  414f3f:	push   eax
  414f40:	jl     0x414fb6
  414f42:	inc    BYTE PTR [eax+0x5be9d82e]
  414f48:	adc    dh,BYTE PTR [edx-0x7ceeac32]
  414f4e:	cmp    BYTE PTR [esi-0x3459e74],0xf5
  414f55:	xor    esp,DWORD PTR ds:0x4f59220d
  414f5b:	into   
  414f5c:	push   ecx
  414f5d:	pop    ebx
  414f5e:	popf   
  414f5f:	jecxz  0x414f99
  414f61:	test   BYTE PTR ds:0x990d46e4,0x8c
  414f68:	(bad)  
  414f69:	daa    
  414f6a:	(bad)  
  414f6b:	and    DWORD PTR ds:0x714ca3fb,ebp
  414f71:	jmp    0xb226fa41
  414f76:	shr    DWORD PTR [ebp+0x2b],0xe5
  414f7a:	add    bh,BYTE PTR [edx-0x5c3c5f74]
  414f80:	iret   
  414f81:	stos   BYTE PTR es:[edi],al
  414f82:	outs   dx,DWORD PTR ds:[esi]
  414f83:	jg     0x414f63
  414f85:	shl    DWORD PTR ds:[ebx*1+0x334909a8],0x44
  414f8e:	sbb    DWORD PTR [ebx+eiz*2],ebx
  414f91:	lahf   
  414f92:	fld    QWORD PTR [eax+edi*2+0x3c]
  414f96:	ror    esp,1
  414f98:	mov    ebx,DWORD PTR [edi+0x79841e66]
  414f9e:	stos   BYTE PTR es:[edi],al
  414f9f:	mov    WORD PTR [ebx-0x1c],gs
  414fa2:	jnp    0x414f2b
  414fa4:	mov    edx,?
  414fa6:	sub    eax,ebx
  414fa8:	les    esi,FWORD PTR [ebp+0x5d]
  414fab:	mov    esi,DWORD PTR [ebx-0x2a60f6a9]
  414fb1:	pushf  
  414fb2:	(bad)  
  414fb3:	sbb    eax,0xe8021da
  414fb8:	dec    eax
  414fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fba:	stos   BYTE PTR es:[edi],al
  414fbb:	cmc    
  414fbc:	cmp    esi,edi
  414fbe:	push   ecx
  414fbf:	mov    ebp,0xe3454a71
  414fc4:	idiv   DWORD PTR [ecx*8-0x4e3a0c82]
  414fcb:	fist   WORD PTR [ebx]
  414fcd:	pop    esi
  414fce:	mov    WORD PTR [eax],?
  414fd0:	lods   eax,DWORD PTR ds:[esi]
  414fd1:	jge    0x414fda
  414fd3:	(bad)  
  414fd4:	mov    ds:0x43b35239,eax
  414fd9:	mov    dh,0x14
  414fdb:	sbb    ah,al
  414fdd:	pushf  
  414fde:	jmp    0x236365fb
  414fe3:	out    0xf6,eax
  414fe5:	or     eax,0x61f0f422
  414fea:	push   es
  414feb:	pop    edi
  414fec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fed:	jp     0x41505d
  414fef:	out    dx,al
  414ff0:	sub    al,0x18
  414ff2:	sbb    al,0x8d
  414ff4:	inc    ebx
  414ff5:	(bad)
  414ff8:	call   0xb0fd:0xc5f7f810
  414fff:	sub    al,0x41
  415001:	div    DWORD PTR [esi+ecx*4+0x33]
  415005:	adc    cl,bh
  415007:	pop    esi
  415008:	test   DWORD PTR [edi],eax
  41500a:	cmc    
  41500b:	sub    eax,0xed372c3a
  415010:	push   ebx
  415011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415012:	jmp    0x415017
  415014:	xchg   esp,eax
  415015:	push   ds
  415016:	in     al,dx
  415017:	loop   0x415002
  415019:	sbb    eax,0xc439c5ca
  41501e:	into   
  41501f:	inc    ebx
  415020:	and    ebp,DWORD PTR ds:0xdbdcedf4
  415026:	popa   
  415027:	mov    ds:0x757f3c2b,al
  41502c:	sahf   
  41502d:	sbb    esi,0xf3dbae32
  415033:	nop
  415034:	push   ecx
  415035:	jp     0x4150ab
  415037:	dec    eax
  415038:	jecxz  0x415082
  41503a:	mov    bh,al
  41503c:	inc    esp
  41503d:	mov    cl,BYTE PTR [esi]
  41503f:	mov    ebp,0x3dfdfba4
  415044:	mov    dh,0x7a
  415046:	sbb    al,0xad
  415048:	fs lahf 
  41504a:	les    esi,FWORD PTR [ebx+edi*8-0x47]
  41504e:	sub    BYTE PTR [ebx],0x60
  415051:	push   esi
  415052:	stos   BYTE PTR es:[edi],al
  415053:	repz push 0x68
  415056:	fmulp  st(0),st
  415058:	(bad)  
  415059:	mov    esi,0xe0e7d202
  41505e:	jmp    0x8012:0x3fec72d4
  415065:	cmp    BYTE PTR [eax],bl
  415067:	dec    edx
  415068:	cli    
  415069:	int3   
  41506a:	test   DWORD PTR [eax],edx
  41506c:	rcr    DWORD PTR [ebx+0x9],cl
  41506f:	inc    edi
  415070:	test   bh,0x9c
  415073:	xchg   esp,eax
  415074:	jl     0x41500b
  415076:	sub    al,BYTE PTR [eax]
  415078:	jmp    0x414ffe
  41507a:	test   BYTE PTR [esi+0x7e],bl
  41507d:	or     eax,0xa0a22759
  415082:	add    eax,0xa96efe65
  415087:	ret    0xa4bd
  41508a:	lods   al,BYTE PTR ds:[esi]
  41508b:	retf   0xcc66
  41508e:	push   ebx
  41508f:	mov    cl,0xfd
  415091:	sbb    esi,DWORD PTR ds:0x3a71e10d
  415097:	mov    ah,0xdd
  415099:	cmp    BYTE PTR [edi-0x4d7a53b2],al
  41509f:	loope  0x415084
  4150a1:	lods   al,BYTE PTR ds:[esi]
  4150a2:	sbb    BYTE PTR [ecx+0x1ca3a1ca],dh
  4150a8:	bound  ebp,QWORD PTR [ebx-0x74]
  4150ab:	jns    0x41508c
  4150ad:	aas    
  4150ae:	shr    BYTE PTR [edx+0x7f],cl
  4150b1:	and    al,0x5a
  4150b3:	in     al,0xb3
  4150b5:	xchg   esp,eax
  4150b6:	add    ch,BYTE PTR [edx]
  4150b8:	pop    eax
  4150b9:	sti    
  4150ba:	sub    ch,0x6
  4150bd:	imul   edx,DWORD PTR [edi-0x590198f5],0x70
  4150c4:	jmp    0x41513d
  4150c6:	mov    dl,0x19
  4150c8:	dec    ebx
  4150c9:	scas   eax,DWORD PTR es:[edi]
  4150ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150cb:	addr16 in eax,dx
  4150cd:	cmp    BYTE PTR [edx],0x46
  4150d0:	push   ecx
  4150d1:	adc    ch,BYTE PTR [ecx+ebp*2+0x2df647d0]
  4150d8:	sub    dl,cl
  4150da:	fld    DWORD PTR [ebx-0x6be1fcab]
  4150e0:	aam    0xf3
  4150e2:	pop    ebx
  4150e3:	in     al,dx
  4150e4:	mov    edi,0x81d17bf6
  4150e9:	(bad)  
  4150ea:	popa   
  4150eb:	xor    eax,0xf691f854
  4150f0:	arpl   di,sp
  4150f2:	mov    dh,0xfe
  4150f4:	or     BYTE PTR [ecx-0x496b0af0],ah
  4150fa:	popa   
  4150fb:	mov    dh,0x7e
  4150fd:	mov    al,0x77
  4150ff:	push   0x65
  415101:	aad    0x4a
  415103:	jmp    0x3baa:0x6c076963
  41510a:	jge    0x415146
  41510c:	mov    edx,0x436d4c46
  415111:	mul    DWORD PTR [ebx+0x42]
  415114:	pop    esi
  415115:	mov    ds:0xb803442d,al
  41511a:	sbb    al,0x9b
  41511c:	cmp    bl,BYTE PTR [ebp-0x2b673a0e]
  415122:	int3   
  415123:	sbb    eax,0xf83dad6f
  415128:	xchg   edx,eax
  415129:	push   esi
  41512a:	les    edx,FWORD PTR [ecx+0x40792cbc]
  415130:	sti    
  415131:	ds inc eax
  415133:	pop    ss
  415134:	sub    DWORD PTR [ecx+0x1c],ecx
  415137:	in     al,0xc9
  415139:	jbe    0x41513f
  41513b:	retf   0xb27a
  41513e:	xchg   ebx,eax
  41513f:	inc    esi
  415140:	aaa    
  415141:	push   ebx
  415142:	ret    
  415143:	dec    ecx
  415144:	cwd    
  415146:	fwait
  415147:	mov    ah,0xde
  415149:	dec    edx
  41514a:	jmp    0x6e4:0x6a12efc9
  415151:	jnp    0x415159
  415153:	adc    eax,0x1d252b60
  415158:	std    
  415159:	repz sbb eax,0x75d0a8e4
  41515f:	add    BYTE PTR [ebx+0x1daeea2f],cl
  415165:	adc    BYTE PTR [ecx-0x5f],bl
  415168:	cmp    DWORD PTR [edi+0xb71dc9a],edx
  41516e:	push   0x8bdc2d15
  415173:	test   esp,edx
  415175:	int    0xab
  415177:	(bad)  
  415178:	(bad)  
  415179:	in     eax,dx
  41517a:	cli    
  41517b:	mov    cl,0xe
  41517d:	mov    ecx,0xa849a5e1
  415182:	in     al,0x62
  415184:	and    eax,ebx
  415186:	xchg   ecx,eax
  415187:	adc    eax,0xd783442a
  41518c:	adc    bh,BYTE PTR [edx+0x23]
  41518f:	mov    ds:0xb5f30915,eax
  415194:	jmp    0x7fcbf6f7
  415199:	(bad)  
  41519a:	(bad)  
  41519b:	fcmovnb st,st(6)
  41519d:	sbb    eax,0x9eca5c6a
  4151a2:	jne    0x41520e
  4151a4:	or     BYTE PTR [edx],ah
  4151a6:	mov    al,ds:0xabddf792
  4151ab:	push   eax
  4151ac:	adc    eax,0x59303139
  4151b1:	or     eax,0x8a4dde3b
  4151b6:	mov    edi,0x6c233d53
  4151bb:	mov    dl,0x8e
  4151bd:	push   ds
  4151be:	imul   edx,DWORD PTR [ebp+0x10fc0e28],0x26
  4151c5:	into   
  4151c6:	fdivr  QWORD PTR ds:0xbed854dc
  4151cc:	stos   BYTE PTR es:[edi],al
  4151cd:	mov    dl,0x81
  4151cf:	inc    ebx
  4151d0:	(bad)  
  4151d1:	int3   
  4151d2:	or     DWORD PTR [ebx+esi*2],esi
  4151d5:	mov    ah,0xd0
  4151d7:	(bad)  
  4151d8:	stc    
  4151d9:	outs   dx,DWORD PTR ds:[esi]
  4151da:	fwait
  4151db:	add    ebp,edi
  4151dd:	rcl    al,1
  4151df:	ja     0x4151fc
  4151e1:	sbb    DWORD PTR [edx+ecx*8-0x77c9d98c],esp
  4151e8:	ficomp DWORD PTR [ecx+0x20e0eb99]
  4151ee:	xor    esi,DWORD PTR [edx-0x567e3bbe]
  4151f4:	cwde   
  4151f5:	(bad)  
  4151f6:	mov    ebp,0xabdd47cf
  4151fb:	imul   esp,DWORD PTR [eax*4-0x4d2bd055],0xffffffd6
  415203:	scas   al,BYTE PTR es:[edi]
  415204:	fwait
  415205:	scas   eax,DWORD PTR es:[edi]
  415206:	mov    al,0xc5
  415208:	fsubrp st(7),st
  41520a:	imul   esi,DWORD PTR [edx-0x79],0xffffff8a
  41520e:	jl     0x4151e9
  415210:	cmp    al,0xc5
  415212:	mov    esi,0x5ceb95ab
  415217:	add    BYTE PTR [edx-0xed75d30],0xd1
  41521e:	(bad)  
  41521f:	pushf  
  415220:	pop    DWORD PTR [edi]
  415222:	or     BYTE PTR [esi-0x70],al
  415225:	iret   
  415226:	std    
  415227:	mov    esp,DWORD PTR [ecx]
  415229:	out    dx,al
  41522a:	scas   eax,DWORD PTR es:[edi]
  41522b:	adc    BYTE PTR [ecx+0x45b9522b],bh
  415231:	or     edi,DWORD PTR [edx]
  415233:	push   es
  415234:	inc    edx
  415235:	xlat   BYTE PTR ds:[ebx]
  415236:	mov    ch,0x40
  415238:	add    ch,bl
  41523a:	sar    BYTE PTR [edx-0x6f],1
  41523d:	stos   DWORD PTR es:[edi],eax
  41523e:	sub    DWORD PTR [ebp+0x28],0xacdce6a3
  415245:	stc    
  415246:	retf   0x77e4
  415249:	add    DWORD PTR [edx-0x5d8d1a40],ebx
  41524f:	jmp    0x4152b6
  415251:	(bad)  
  415252:	mov    WORD PTR [edi+0x63],?
  415255:	cmp    ebp,ecx
  415257:	and    ch,al
  415259:	mov    cl,0x54
  41525b:	fld    st(3)
  41525d:	stc    
  41525e:	stc    
  41525f:	pop    ebp
  415260:	and    DWORD PTR [edi],edi
  415262:	pop    esi
  415263:	jo     0x4152b8
  415265:	xchg   ebx,eax
  415266:	xchg   esp,eax
  415267:	ins    BYTE PTR es:[edi],dx
  415268:	enter  0xc603,0x55
  41526c:	outs   dx,DWORD PTR ds:[esi]
  41526d:	inc    esp
  41526e:	into   
  41526f:	add    al,dh
  415271:	nop
  415272:	jbe    0x4152c6
  415274:	aas    
  415275:	mov    dh,bh
  415277:	leave  
  415278:	cdq    
  415279:	adc    BYTE PTR [edx+0x1c],bl
  41527c:	jg     0x41525b
  41527e:	push   eax
  41527f:	in     al,0xda
  415281:	bound  esp,QWORD PTR [edx+0x27]
  415284:	pop    ds
  415285:	out    0x97,eax
  415287:	mov    BYTE PTR [edi+0x28],ch
  41528a:	jmp    0x4152ed
  41528c:	les    ebp,FWORD PTR [edi+0x72]
  41528f:	ficom  DWORD PTR [eax]
  415291:	add    edx,DWORD PTR [eax]
  415293:	sahf   
  415294:	adc    ebx,esp
  415296:	xchg   ebx,eax
  415297:	les    ebx,FWORD PTR [eax+0x391b017c]
  41529d:	xchg   esi,eax
  41529e:	adc    al,0x41
  4152a0:	into   
  4152a1:	xor    eax,0xaa547bc7
  4152a6:	cld    
  4152a7:	and    al,0x6a
  4152a9:	mov    ch,0x1
  4152ab:	aas    
  4152ac:	rcr    DWORD PTR [eax+0x3b],0xeb
  4152b0:	sbb    ch,BYTE PTR [eax-0x4ec3dc83]
  4152b6:	pusha  
  4152b7:	push   0x7f
  4152b9:	lock ins BYTE PTR es:[edi],dx
  4152bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152bc:	push   ebp
  4152bd:	adc    DWORD PTR [ebp-0xf],esp
  4152c0:	mov    ds:0x9240a0f4,eax
  4152c5:	es and bh,cl
  4152c8:	mov    esp,0x21733e2e
  4152cd:	push   edi
  4152ce:	inc    ecx
  4152cf:	inc    ebp
  4152d0:	and    DWORD PTR [ecx+edx*2],ebp
  4152d3:	adc    al,0xf2
  4152d5:	xchg   edx,eax
  4152d6:	mov    esp,esp
  4152d8:	mov    al,ds:0x70290a34
  4152dd:	les    esp,FWORD PTR [ecx+0x3ab3fcb]
  4152e3:	cmp    eax,esi
  4152e5:	out    0x53,eax
  4152e7:	int3   
  4152e8:	adc    BYTE PTR [eax],cl
  4152ea:	in     eax,dx
  4152eb:	mov    al,0xb9
  4152ed:	loope  0x4152bb
  4152ef:	les    ecx,FWORD PTR [eax-0x57a9ab15]
  4152f5:	icebp  
  4152f6:	jo     0x415366
  4152f8:	out    dx,al
  4152f9:	push   ss
  4152fa:	aas    
  4152fb:	push   eax
  4152fc:	mov    DWORD PTR [eax+0x42],0x8c50c698
  415303:	fs test al,0x70
  415306:	rol    DWORD PTR [eax],cl
  415308:	push   ebp
  415309:	pop    es
  41530a:	inc    ecx
  41530b:	sub    bh,BYTE PTR [eax]
  41530d:	or     eax,0xa0e15813
  415312:	mov    ecx,0x6caceef5
  415317:	xchg   esi,eax
  415318:	lods   eax,DWORD PTR ds:[esi]
  415319:	test   BYTE PTR [ecx-0x3c139d8e],al
  41531f:	outs   dx,BYTE PTR ds:[esi]
  415320:	arpl   WORD PTR [eax+ebx*4-0x6a1efd57],bx
  415327:	(bad)  
  415328:	sahf   
  415329:	pop    ss
  41532a:	add    eax,0xf382e08f
  41532f:	pop    edx
  415330:	jp     0x415336
  415332:	shr    dh,0x57
  415335:	fnstsw WORD PTR [esi]
  415337:	jp     0x41536f
  415339:	gs jge 0x415305
  41533c:	nop
  41533d:	imul   eax,DWORD PTR [edi],0xda578e0b
  415343:	jne    0x415391
  415345:	lahf   
  415346:	sahf   
  415347:	xchg   edx,eax
  415348:	fs in  al,dx
  41534a:	enter  0xa889,0x1c
  41534e:	neg    BYTE PTR [ebp-0x2d]
  415351:	pop    ax
  415353:	stos   DWORD PTR es:[edi],eax
  415354:	fchs   
  415356:	scas   al,BYTE PTR es:[edi]
  415357:	jnp    0x4153a8
  415359:	mov    esp,0x4350e63a
  41535e:	in     al,0x10
  415360:	mov    ch,0xd8
  415362:	data16 and BYTE PTR [esi-0x3ef1fa30],al
  415369:	or     esp,edi
  41536b:	cmp    BYTE PTR [ebx+0x5f],al
  41536e:	ds jge 0x41534f
  415371:	mov    esi,0x1a0c3e96
  415376:	(bad)  [ecx+0x3f181899]
  41537c:	mov    WORD PTR [ecx-0x1c1bbe8f],?
  415382:	add    DWORD PTR [eax-0x7e222c1e],eax
  415388:	xchg   esi,eax
  415389:	inc    eax
  41538a:	cmp    ah,BYTE PTR [ecx-0x1]
  41538d:	dec    edi
  41538e:	nop
  41538f:	bound  esp,QWORD PTR [esi+eax*1+0x2e]
  415393:	aas    
  415394:	dec    DWORD PTR [esi-0x2a]
  415397:	mov    ecx,0x94825719
  41539c:	in     al,dx
  41539d:	mov    eax,0x67cc41f0
  4153a2:	push   ss
  4153a3:	sub    eax,0x2fe24e32
  4153a8:	pop    esp
  4153a9:	sbb    DWORD PTR [edx],0xffffffb6
  4153ac:	cli    
  4153ad:	sub    al,0x8c
  4153af:	out    dx,al
  4153b0:	outs   dx,DWORD PTR ds:[esi]
  4153b1:	in     al,0x2b
  4153b3:	add    esp,DWORD PTR [esi]
  4153b5:	ins    BYTE PTR es:[edi],dx
  4153b6:	ret    0xa3dc
  4153b9:	retf   
  4153ba:	mov    esp,0x4acbac54
  4153bf:	pop    ebx
  4153c0:	lods   eax,DWORD PTR ds:[esi]
  4153c1:	push   ebp
  4153c2:	adc    ah,BYTE PTR [ecx]
  4153c4:	les    ebp,FWORD PTR [eax-0x7f18be35]
  4153ca:	nop
  4153cb:	xchg   ebp,eax
  4153cc:	mov    esi,0x7e1cd5b7
  4153d1:	rcl    DWORD PTR [edi+0x2f99a76e],cl
  4153d7:	cmp    al,0x14
  4153d9:	fld    QWORD PTR [edi]
  4153db:	jne    0x415434
  4153dd:	xchg   edx,eax
  4153de:	xchg   esi,ebp
  4153e0:	mov    eax,ds:0xd08f6213
  4153e5:	push   eax
  4153e6:	lods   al,BYTE PTR ds:[esi]
  4153e7:	in     al,dx
  4153e8:	jns    0x4153de
  4153ea:	add    al,0x82
  4153ec:	lds    edx,FWORD PTR [ecx+ecx*2]
  4153ef:	mov    dl,0xc5
  4153f1:	dec    eax
  4153f2:	(bad)  
  4153f3:	add    eax,0xe7c40a3
  4153f8:	repz sbb eax,0xa17b6a59
  4153fe:	xchg   BYTE PTR [edi],ah
  415400:	mov    esi,0xd864f428
  415405:	fistp  WORD PTR [edx+0x3e]
  415408:	(bad)  [esi-0x1e]
  41540b:	dec    edi
  41540c:	outs   dx,BYTE PTR ds:[esi]
  41540d:	(bad)  
  41540e:	gs pop ebp
  415410:	dec    ebx
  415411:	enter  0xacd4,0x83
  415415:	lea    ecx,[edx]
  415417:	inc    ebx
  415418:	outs   dx,BYTE PTR ds:[esi]
  415419:	les    edx,FWORD PTR [eax+0x7e]
  41541c:	xor    al,0x87
  41541e:	or     eax,0x220a5273
  415423:	cmp    eax,0x4cec310a
  415428:	ss jno 0x415465
  41542b:	push   edi
  41542c:	cdq    
  41542d:	mov    eax,0x5d86d8b4
  415432:	ret    0xd0b8
  415435:	int3   
  415436:	fadd   DWORD PTR [ecx-0xefc541f]
  41543c:	inc    ecx
  41543d:	cmp    BYTE PTR [edx+0x4a8c4f8f],dh
  415443:	cli    
  415444:	mov    ah,0x40
  415446:	sahf   
  415447:	and    eax,0x6e621c01
  41544c:	mov    eax,ds:0xa8e06773
  415451:	lahf   
  415452:	sub    ah,BYTE PTR [edx-0x7d]
  415455:	int3   
  415456:	sar    DWORD PTR [ebx],1
  415458:	push   ebp
  415459:	mov    bl,0x98
  41545b:	int3   
  41545c:	shl    DWORD PTR [ecx-0x8428ae7],cl
  415462:	xchg   esp,eax
  415463:	aas    
  415464:	test   BYTE PTR [edx+eiz*4+0x28],cl
  415468:	gs push edx
  41546a:	in     eax,dx
  41546b:	mov    ds:0x9065fc18,al
  415470:	jo     0x415447
  415472:	mov    BYTE PTR [eax-0x2a],bl
  415475:	or     edx,ebp
  415477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415478:	push   edi
  415479:	icebp  
  41547a:	ins    DWORD PTR es:[edi],dx
  41547b:	pop    ds
  41547c:	add    bl,BYTE PTR [esi+0x6ac04ee5]
  415482:	ins    DWORD PTR es:[edi],dx
  415483:	adc    eax,0xf99f8a2c
  415488:	repnz rol DWORD PTR [eax+0x3d],cl
  41548c:	loop   0x41541c
  41548e:	mov    dh,0x60
  415490:	mov    ah,0xcf
  415492:	ins    BYTE PTR es:[edi],dx
  415493:	dec    ebp
  415494:	mov    ch,0x85
  415496:	into   
  415497:	(bad)  
  415498:	mov    al,ds:0x5ed889f0
  41549d:	lahf   
  41549e:	das    
  41549f:	mov    ds:0xc18ebbad,al
  4154a4:	frstor [esi-0xa]
  4154a7:	pop    ds
  4154a8:	hlt    
  4154a9:	out    dx,eax
  4154aa:	lahf   
  4154ab:	cmc    
  4154ac:	push   ebp
  4154ad:	dec    ebp
  4154ae:	mov    fs,WORD PTR [edi]
  4154b0:	pop    esi
  4154b1:	ins    DWORD PTR es:[edi],dx
  4154b2:	sti    
  4154b3:	fcmovnb st,st(0)
  4154b5:	les    ebp,FWORD PTR [edi+edx*8-0x41]
  4154b9:	hlt    
  4154ba:	inc    esp
  4154bb:	adc    DWORD PTR [esi-0x61],ebp
  4154be:	mov    ecx,0xfdf5bd9c
  4154c3:	cmp    eax,0xdc9c9cc1
  4154c8:	aam    0x82
  4154ca:	mov    DWORD PTR [eax+0x52b98ba4],edx
  4154d0:	bound  edx,QWORD PTR [edx]
  4154d2:	retf   0xa25b
  4154d5:	je     0x41554a
  4154d7:	sub    eax,0xfdc2545e
  4154dc:	jnp    0x4154ef
  4154de:	adc    BYTE PTR [edi+0x60],bh
  4154e1:	inc    edi
  4154e2:	jecxz  0x4154bb
  4154e4:	mov    eax,DWORD PTR [edx-0x4abba6a9]
  4154ea:	enter  0x556c,0x72
  4154ee:	ds mov cl,0xf8
  4154f1:	jmp    0x568ff088
  4154f6:	push   es
  4154f7:	aas    
  4154f8:	jne    0x41547a
  4154fa:	mov    ss,WORD PTR [ebx+0x30f5b60b]
  415500:	dec    esp
  415501:	sbb    dl,bl
  415503:	test   BYTE PTR [ecx-0x4291cbc8],ch
  415509:	test   DWORD PTR [edi+0x14f935c8],0xfe92a989
  415513:	(bad)  
  415514:	out    0xa2,al
  415516:	jns    0x415578
  415518:	neg    BYTE PTR [ebp+0x54836313]
  41551e:	aad    0xf0
  415520:	sbb    eax,DWORD PTR [esi-0x9]
  415523:	cmp    eax,0x2827cde3
  415528:	in     eax,0x4e
  41552a:	push   0xdb85bc02
  41552f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415530:	je     0x4154da
  415532:	sbb    BYTE PTR [ecx-0x1c],ch
  415535:	xor    ebx,edx
  415537:	(bad)  
  415538:	or     DWORD PTR [esi+edx*2-0x188a3424],ebp
  41553f:	scas   eax,DWORD PTR es:[edi]
  415540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415541:	cmc    
  415542:	nop
  415543:	push   0xffffffef
  415545:	mov    ebp,ss
  415547:	and    al,0x83
  415549:	aad    0x6f
  41554b:	dec    eax
  41554c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41554d:	add    BYTE PTR [edi],al
  41554f:	pop    esi
  415550:	call   0x4237713d
  415555:	js     0x41551d
  415557:	arpl   WORD PTR [esi-0x66],cx
  41555a:	mov    ah,0x8c
  41555c:	cld    
  41555d:	xor    DWORD PTR [eax+0x2e82a2c3],esp
  415563:	add    eax,0x5f61d5e2
  415568:	mov    edx,ebx
  41556a:	mov    ds:0x766ec6da,eax
  41556f:	lahf   
  415570:	xchg   edx,eax
  415571:	xchg   esi,eax
  415572:	div    BYTE PTR [ecx+0x5e478fe4]
  415578:	test   al,0xb2
  41557a:	daa    
  41557b:	jge    0x415556
  41557d:	jbe    0x41554e
  41557f:	in     al,dx
  415580:	cmc    
  415581:	(bad)  
  415582:	jp     0x41551d
  415584:	push   edi
  415585:	ret    0xb032
  415588:	out    dx,al
  415589:	shl    BYTE PTR [edx-0x27bddf24],0x2d
  415590:	sub    al,0x1
  415592:	adc    eax,0x19dd872e
  415597:	fwait
  415598:	pop    ebp
  415599:	pop    ds
  41559a:	stos   BYTE PTR es:[edi],al
  41559b:	fldenv [ecx+ebp*1]
  41559e:	cdq    
  41559f:	into   
  4155a0:	sub    al,0x2d
  4155a2:	adc    al,0x45
  4155a4:	lock fnstcw WORD PTR [esi]
  4155a7:	adc    al,0x6d
  4155a9:	ret    
  4155aa:	mov    ecx,0x3b7d7f06
  4155af:	jecxz  0x415620
  4155b1:	sub    BYTE PTR [eax-0x10c6884b],0xfe
  4155b8:	mov    DWORD PTR [eax+ebp*4-0x20],ebx
  4155bc:	jne    0x415597
  4155be:	lahf   
  4155bf:	ins    DWORD PTR es:[di],dx
  4155c1:	or     bh,BYTE PTR [esp+esi*2-0x25]
  4155c5:	mov    cl,0x8
  4155c7:	nop
  4155c8:	ds test al,0x55
  4155cb:	popf   
  4155cc:	sub    BYTE PTR [ecx+0xf9a8f43],bh
  4155d2:	push   cs
  4155d3:	or     BYTE PTR [edx],ch
  4155d5:	shl    BYTE PTR [esi-0x7a7991c7],cl
  4155db:	sub    al,0x41
  4155dd:	ds or  eax,0xed20558f
  4155e3:	shr    ebx,1
  4155e5:	push   esp
  4155e6:	outs   dx,BYTE PTR ds:[esi]
  4155e7:	and    eax,0x3c46e903
  4155ec:	and    BYTE PTR [ebx+0x7c],al
  4155ef:	dec    edx
  4155f0:	ss int3 
  4155f2:	push   eax
  4155f3:	repnz imul ecx,DWORD PTR [edx+0x55db2016],0x40
  4155fb:	cmp    dl,BYTE PTR [esi-0x104f2977]
  415601:	in     eax,0x7e
  415603:	cmp    BYTE PTR [ebp+eax*2-0x5a],ah
  415607:	pushf  
  415608:	push   ecx
  415609:	int    0xdf
  41560b:	xchg   ebx,eax
  41560c:	fdiv   st,st(5)
  41560e:	cld    
  41560f:	out    dx,eax
  415610:	adc    BYTE PTR [edi+eax*1-0x3906d104],bh
  415617:	js     0x415602
  415619:	(bad)  
  41561a:	js     0x415654
  41561c:	or     bl,ah
  41561e:	stos   BYTE PTR es:[edi],al
  41561f:	adc    BYTE PTR [edi+0x9eba123],ch
  415625:	or     eax,0x7563dd17
  41562a:	and    edx,DWORD PTR [edx+edx*4]
  41562d:	dec    ebx
  41562e:	std    
  41562f:	jg     0x415606
  415631:	arpl   WORD PTR [eax-0x66],bx
  415634:	pop    esi
  415635:	jge    0x4155c5
  415637:	repnz pop ebp
  415639:	and    DWORD PTR [eax+eax*8+0x65e47ea0],edi
  415640:	test   eax,0x38ba6fc0
  415645:	push   esp
  415646:	ret    0x3aad
  415649:	dec    BYTE PTR [ecx+0x3b8b5b1a]
  41564f:	imul   edx,DWORD PTR [ebx+ebp*2-0x2a],0xb
  415654:	mov    bl,0x1a
  415656:	jbe    0x415607
  415658:	mov    bl,BYTE PTR fs:[edi]
  41565b:	ret    
  41565c:	mov    ch,0xc1
  41565e:	adc    al,0x1c
  415660:	pop    esi
  415661:	sub    DWORD PTR [esi],ecx
  415663:	mov    ch,0x8e
  415665:	jecxz  0x4156d8
  415667:	xor    BYTE PTR [esp+ecx*1],0x19
  41566b:	retf   
  41566c:	jnp    0x41569d
  41566e:	sbb    eax,0x865d2c44
  415673:	xchg   ebx,eax
  415674:	push   esp
  415675:	inc    edi
  415676:	call   0xcf423cf7
  41567b:	pop    esi
  41567c:	pop    ss
  41567d:	push   ecx
  41567e:	in     eax,0x61
  415680:	mov    al,ds:0x340d36c9
  415685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415686:	repnz cdq 
  415688:	imul   edi,DWORD PTR [edx],0xffffff8b
  41568b:	mov    cl,0xda
  41568d:	loop   0x41563a
  41568f:	ss jecxz 0x4156e4
  415692:	xor    DWORD PTR [eax-0x1b],eax
  415695:	hlt    
  415696:	lahf   
  415697:	jne    0x4156d4
  415699:	dec    eax
  41569a:	in     eax,0x97
  41569c:	or     esi,DWORD PTR [edi]
  41569e:	xor    dh,0xab
  4156a1:	lahf   
  4156a2:	js     0x4156e5
  4156a4:	pop    ss
  4156a5:	fisubr WORD PTR [esi]
  4156a7:	and    eax,0x1bfa84c6
  4156ac:	test   BYTE PTR [ebp+0x10],0xa7
  4156b0:	ja     0x4156c3
  4156b2:	add    eax,0xa9c40146
  4156b7:	and    BYTE PTR [ebp-0x759710b],ah
  4156bd:	cwde   
  4156be:	and    esp,DWORD PTR [esi]
  4156c0:	dec    eax
  4156c1:	outs   dx,BYTE PTR ds:[esi]
  4156c2:	(bad)  
  4156c3:	cmp    bh,BYTE PTR [ebp+0xda27785]
  4156c9:	(bad)  
  4156ca:	(bad)  
  4156cc:	rcl    esp,cl
  4156ce:	inc    esi
  4156cf:	bound  ecx,QWORD PTR [esi]
  4156d1:	or     edx,DWORD PTR [eax+0x20]
  4156d4:	retf   
  4156d5:	dec    ebx
  4156d6:	mov    dh,0x48
  4156d8:	and    al,0x99
  4156da:	pop    DWORD PTR [ecx+esi*2]
  4156dd:	(bad)  
  4156de:	cmp    ebx,esp
  4156e0:	mov    cl,0xae
  4156e2:	add    BYTE PTR [ecx-0x48],al
  4156e5:	in     eax,dx
  4156e6:	daa    
  4156e7:	adc    DWORD PTR [esi+edi*2],esi
  4156ea:	out    dx,al
  4156eb:	popf   
  4156ec:	xchg   edx,eax
  4156ed:	movups xmm4,xmm4
  4156f0:	jnp    0xc91e686d
  4156f6:	push   0x69
  4156f8:	mov    cl,0x72
  4156fa:	test   BYTE PTR [edi-0x7bc35355],al
  415700:	jns    0x415687
  415702:	stos   BYTE PTR es:[edi],al
  415703:	push   edi
  415704:	ja     0x41572e
  415706:	cmp    dl,BYTE PTR [eax]
  415708:	cmp    al,0xd2
  41570a:	sbb    DWORD PTR ss:[edx+ebx*8-0x2de80dd1],ebx
  415712:	repz inc ecx
  415714:	call   0x51adf8b5
  415719:	mov    edx,0x59be95b0
  41571e:	or     BYTE PTR [ecx+eax*2-0x2c],bl
  415722:	or     ebx,DWORD PTR [ebp+0x49]
  415725:	cli    
  415726:	aam    0xd4
  415728:	cli    
  415729:	dec    esi
  41572a:	sub    al,0x1a
  41572c:	loopne 0x4156d7
  41572e:	sar    DWORD PTR [ebx],1
  415730:	jl     0x415769
  415732:	lods   al,BYTE PTR ds:[esi]
  415733:	jae    0x415757
  415735:	retf   
  415736:	test   DWORD PTR [edx+0x44],esp
  415739:	(bad)  
  41573a:	loope  0x41572d
  41573c:	xor    ah,BYTE PTR [esi-0x58]
  41573f:	stc    
  415740:	es ja  0x41578b
  415743:	or     eax,0x70a99c26
  415748:	or     eax,0x9a53d291
  41574d:	in     eax,0xf6
  41574f:	add    bh,ah
  415751:	hlt    
  415752:	test   BYTE PTR [edx],al
  415754:	and    al,BYTE PTR [esi+esi*8]
  415757:	mul    BYTE PTR [ecx+0x2d]
  41575a:	dec    ebp
  41575b:	inc    esi
  41575c:	cli    
  41575d:	sbb    esi,DWORD PTR [eax-0x77bd793]
  415763:	sbb    eax,0xc54437a8
  415768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415769:	pop    ebp
  41576a:	and    DWORD PTR [ecx+0x73f941ef],edi
  415770:	mov    edi,ebx
  415772:	(bad)  
  415773:	fwait
  415774:	pop    edx
  415775:	cmp    bl,al
  415777:	lods   eax,DWORD PTR ds:[esi]
  415778:	xchg   dl,al
  41577a:	pop    ds
  41577b:	xchg   edx,eax
  41577c:	loopne 0x415721
  41577e:	das    
  41577f:	xor    eax,0x88a194d3
  415784:	adc    BYTE PTR [ecx+edi*2],al
  415787:	int3   
  415788:	pop    ds
  415789:	out    0x28,eax
  41578b:	sbb    eax,0xd05993b0
  415790:	mov    bh,0x32
  415792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415793:	cwde   
  415794:	dec    ecx
  415795:	popf   
  415796:	or     BYTE PTR [ebp-0x34],bh
  415799:	cmp    ah,0x81
  41579c:	gs pop eax
  41579e:	push   ss
  41579f:	loope  0x4157d0
  4157a1:	(bad)  
  4157a3:	push   ss
  4157a4:	push   ebp
  4157a5:	mov    ds:0xf44bc08c,al
  4157aa:	xchg   ebx,eax
  4157ab:	dec    esi
  4157ac:	sub    esp,eax
  4157ae:	sub    BYTE PTR [ebx+ebx*1-0x85d3148],dh
  4157b5:	dec    DWORD PTR [esi]
  4157b7:	inc    esp
  4157b8:	nop
  4157b9:	imul   BYTE PTR [ebp-0x15]
  4157bc:	or     al,0x2e
  4157be:	dec    edx
  4157bf:	mov    esi,0xac1b4b83
  4157c4:	sbb    DWORD PTR [ebx+0x36],0x36
  4157c8:	aas    
  4157c9:	mov    DWORD PTR [edx+0x6e],edi
  4157cc:	cmc    
  4157cd:	fsub   DWORD PTR [ebp+0x1e181dd2]
  4157d3:	fwait
  4157d4:	mov    ebx,0xb6425382
  4157d9:	dec    eax
  4157da:	ins    DWORD PTR es:[edi],dx
  4157db:	(bad)  
  4157dc:	mov    esi,0xf35d392e
  4157e1:	aad    0x81
  4157e3:	sbb    BYTE PTR [ebp+0x7535a2b1],dl
  4157e9:	cli    
  4157ea:	push   ebp
  4157eb:	xchg   esp,eax
  4157ec:	sbb    BYTE PTR [esi+0x4f],bl
  4157ef:	call   0xec99:0x173f779e
  4157f6:	test   esp,ebp
  4157f8:	inc    edx
  4157f9:	inc    esp
  4157fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157fb:	mov    BYTE PTR [edi],ch
  4157fd:	out    dx,eax
  4157fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ff:	sub    ah,BYTE PTR [eax+eiz*1]
  415802:	or     eax,0xbb0ce575
  415807:	(bad)  
  415808:	imul   esp
  41580a:	or     al,0x28
  41580c:	cld    
  41580d:	stos   BYTE PTR es:[edi],al
  41580e:	adc    BYTE PTR [esi+0x12],bl
  415811:	push   cs
  415812:	clc    
  415813:	xchg   DWORD PTR [ebx],edi
  415815:	cmp    eax,0x6f83d9b9
  41581a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41581b:	lock cwde 
  41581d:	popf   
  41581e:	push   0x5457a037
  415823:	and    BYTE PTR [ebx],cl
  415825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415826:	shl    DWORD PTR [edi],1
  415828:	inc    esi
  415829:	shl    BYTE PTR [esi+esi*8-0x6d],1
  41582d:	push   edi
  41582e:	cld    
  41582f:	mov    eax,0x5adc5390
  415834:	jne    0x4157ee
  415836:	fs js  0x41585c
  415839:	xor    edx,DWORD PTR [ebp-0x2a]
  41583c:	shld   edi,edi,cl
  41583f:	ficom  WORD PTR [ebp+0x0]
  415842:	arpl   di,ax
  415844:	mov    eax,ds:0x6d60d6ce
  415849:	loop   0x4158c6
  41584b:	ins    BYTE PTR es:[edi],dx
  41584c:	mov    al,ds:0xa32f753c
  415851:	out    dx,eax
  415852:	fmul   DWORD PTR [ebx]
  415854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415855:	pop    edx
  415856:	mov    BYTE PTR [edi-0x47],bl
  415859:	sti    
  41585a:	dec    edx
  41585b:	jecxz  0x4158a1
  41585d:	jbe    0x4157ee
  41585f:	rol    ch,1
  415861:	pop    ecx
  415862:	push   edi
  415863:	lahf   
  415864:	adc    ecx,DWORD PTR [esi+esi*4+0x36]
  415868:	jb     0x4157f0
  41586a:	xlat   BYTE PTR ds:[ebx]
  41586b:	and    esp,DWORD PTR [edi+0x23dd4702]
  415871:	sahf   
  415872:	inc    ecx
  415873:	out    0x2e,al
  415875:	je     0x4158dd
  415877:	inc    edi
  415878:	mov    ebp,DWORD PTR [edi-0x6600a381]
  41587e:	pop    esi
  41587f:	push   edi
  415880:	xchg   ecx,eax
  415881:	push   esi
  415882:	dec    esi
  415883:	cdq    
  415884:	dec    ebp
  415885:	and    dh,BYTE PTR [edx-0x65]
  415888:	pushf  
  415889:	push   ds
  41588a:	retf   
  41588b:	pop    es
  41588c:	and    al,0xe2
  41588e:	mov    dh,0x1c
  415890:	data16 and al,0x5b
  415893:	dec    eax
  415894:	fisttp WORD PTR [edx+0xdb04b83]
  41589a:	imul   esp,esi,0xc
  41589d:	or     DWORD PTR [eax+eiz*1],esp
  4158a0:	push   edx
  4158a1:	dec    edx
  4158a2:	push   esp
  4158a3:	scas   al,BYTE PTR es:[edi]
  4158a4:	dec    edx
  4158a5:	lock addr16 cmp ebx,esp
  4158a9:	push   ebp
  4158aa:	cmp    BYTE PTR [ebx+0x7e],dh
  4158ad:	in     eax,dx
  4158ae:	bound  esi,QWORD PTR [edi]
  4158b0:	int    0x23
  4158b2:	and    al,0x2d
  4158b4:	sar    bh,0x33
  4158b7:	lahf   
  4158b8:	xchg   ebp,eax
  4158b9:	xor    DWORD PTR [edx],0x47
  4158bc:	scas   eax,DWORD PTR es:[edi]
  4158bd:	sbb    BYTE PTR [ebx],cl
  4158bf:	dec    edi
  4158c0:	data16 fistp DWORD PTR [ecx-0x39]
  4158c4:	xchg   edi,eax
  4158c5:	dec    esp
  4158c6:	lahf   
  4158c7:	sbb    al,0xce
  4158c9:	cmp    bl,BYTE PTR [eax+0x48]
  4158cc:	fucomi st,st(6)
  4158ce:	out    dx,eax
  4158cf:	out    0x50,eax
  4158d1:	in     al,0x68
  4158d3:	xor    edx,DWORD PTR [ebx]
  4158d5:	repz cli 
  4158d7:	sub    dh,al
  4158d9:	xchg   edi,eax
  4158da:	push   ebp
  4158db:	dec    esi
  4158dc:	dec    esi
  4158dd:	pop    esp
  4158de:	jo     0x415957
  4158e0:	inc    edx
  4158e1:	cmp    BYTE PTR [ecx-0x7a],ah
  4158e4:	in     eax,dx
  4158e5:	xor    esp,DWORD PTR ds:0x1bd1c582
  4158eb:	in     al,dx
  4158ec:	out    0xfb,eax
  4158ee:	and    BYTE PTR [eax+ecx*4-0x572cff84],dh
  4158f5:	pop    ecx
  4158f6:	out    0xab,eax
  4158f8:	jbe    0x4158b7
  4158fa:	dec    edi
  4158fb:	or     eax,0x6a2f7f7b
  415900:	or     BYTE PTR [eax-0x67c9ae5c],dl
  415906:	and    bh,ah
  415908:	mov    bl,0x49
  41590a:	in     al,dx
  41590b:	dec    edi
  41590c:	push   ecx
  41590d:	sti    
  41590e:	mov    ecx,0xe9ccdf66
  415913:	sbb    BYTE PTR [edx+0x5dc01011],bl
  415919:	fstp   DWORD PTR [esi+esi*1-0x11]
  41591d:	sahf   
  41591e:	mov    edx,0x7a78cb91
  415923:	outs   dx,DWORD PTR ds:[esi]
  415924:	pop    edi
  415925:	cld    
  415926:	test   DWORD PTR [edx-0x13a61912],ecx
  41592c:	or     edx,DWORD PTR [edi]
  41592e:	adc    BYTE PTR [ecx+0x4],ch
  415931:	cmc    
  415932:	mov    al,ds:0x32dc837
  415937:	xchg   ebx,eax
  415938:	xor    DWORD PTR [ebp-0x65a24998],edi
  41593e:	jmp    0x7906a83a
  415943:	ret    
  415944:	mov    al,ds:0xfbe0e07
  415949:	push   ebp
  41594a:	test   al,0x4a
  41594c:	mov    al,0x8c
  41594e:	pop    ecx
  41594f:	pop    eax
  415950:	(bad)  
  415951:	addr16 dec eax
  415953:	and    BYTE PTR [eax-0x6e65f7b5],cl
  415959:	loop   0x415981
  41595b:	shl    DWORD PTR [ecx+0x2f],1
  41595e:	mov    edi,0x121355cb
  415963:	pusha  
  415964:	pop    esi
  415965:	sub    al,0xae
  415967:	jne    0x4158fa
  415969:	jl     0x415955
  41596b:	and    al,BYTE PTR cs:[ecx+0x62]
  41596f:	sbb    BYTE PTR ds:0x4bf4f387,ah
  415975:	jl     0x4159d4
  415977:	jne    0x415965
  415979:	loop   0x41593c
  41597b:	rol    BYTE PTR [ebp+esi*4-0x6b],cl
  41597f:	loope  0x4159f9
  415981:	sbb    al,0x2a
  415983:	js     0x41596f
  415985:	lds    edi,FWORD PTR [esi]
  415987:	cmp    dh,al
  415989:	out    dx,al
  41598a:	pop    edi
  41598b:	jecxz  0x4159d6
  41598d:	pop    edi
  41598e:	lods   al,BYTE PTR ds:[esi]
  41598f:	xchg   ebx,eax
  415990:	cmc    
  415991:	cdq    
  415992:	pop    esi
  415993:	test   DWORD PTR [esi+esi*4+0x1b56cecb],ebp
  41599a:	loopne 0x4159f4
  41599c:	pop    es
  41599d:	xor    eax,0x600936e3
  4159a2:	sysexit 
  4159a4:	mov    BYTE PTR [ecx],dh
  4159a6:	or     al,BYTE PTR [ebx+esi*1]
  4159a9:	addr16 add dl,dl
  4159ac:	xchg   esi,eax
  4159ad:	push   ebp
  4159ae:	imul   ecx,DWORD PTR [edi],0x7811b73d
  4159b4:	fstp   DWORD PTR [esi-0x6e]
  4159b7:	jp     0x4159a1
  4159b9:	mov    esp,0x628d69b2
  4159be:	xor    bl,BYTE PTR [ebx+ebp*4+0x6d7994c1]
  4159c5:	mov    ebp,0x5e2c0c9a
  4159ca:	imul   esp,DWORD PTR [eax],0xf29a394f
  4159d0:	repz stc 
  4159d2:	lock (bad) 
  4159d4:	push   eax
  4159d5:	mov    al,0x74
  4159d7:	mov    eax,0xca3761e7
  4159dc:	inc    ebp
  4159dd:	xlat   BYTE PTR ds:[ebx]
  4159de:	(bad)  
  4159df:	enter  0xa5f5,0xdf
  4159e3:	repnz cli 
  4159e5:	xlat   BYTE PTR ds:[ebx]
  4159e6:	lods   eax,DWORD PTR ds:[esi]
  4159e7:	js     0x4159c9
  4159e9:	fisubr DWORD PTR [eax+0x10c9cd19]
  4159ef:	jbe    0x4159c6
  4159f1:	fimul  DWORD PTR [ebx-0x4cdd518b]
  4159f7:	xor    al,0xf4
  4159f9:	les    edx,FWORD PTR [ebp+0x7e6fc7a7]
  4159ff:	and    eax,0xa6004dae
  415a04:	sbb    edi,DWORD PTR [ebx+0x7b]
  415a07:	popa   
  415a08:	cmp    al,0x9d
  415a0a:	imul   esi,DWORD PTR [edx-0x2ba58c27],0x55
  415a11:	ds inc ebp
  415a13:	adc    DWORD PTR [eax+0x2acdddad],eax
  415a19:	call   0x6f7ea3c2
  415a1e:	dec    eax
  415a1f:	into   
  415a20:	loopne 0x415a81
  415a22:	xor    ebx,eax
  415a24:	and    eax,0x3968933b
  415a29:	aad    0xb
  415a2b:	jae    0x415a9b
  415a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a2e:	jns    0x415a49
  415a30:	popa   
  415a31:	sub    al,0xf7
  415a33:	or     ebx,DWORD PTR [ebx+0x4a]
  415a36:	(bad)  
  415a37:	lea    esi,[ebp+0x1b]
  415a3a:	inc    edi
  415a3b:	(bad)  
  415a3c:	addr16 mov edx,0xc4e39d32
  415a42:	xchg   esi,eax
  415a43:	xor    al,0x8d
  415a45:	mov    al,0xe7
  415a47:	repnz mov fs,WORD PTR [ebx+0x4162bd2a]
  415a4e:	stos   BYTE PTR es:[edi],al
  415a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a51:	sub    DWORD PTR [ebp-0x34],edi
  415a54:	xchg   ebp,edi
  415a56:	pop    esi
  415a57:	dec    ebp
  415a58:	xchg   esp,eax
  415a59:	mov    ah,0x5a
  415a5b:	mov    WORD PTR [ebx],es
  415a5d:	popf   
  415a5e:	xchg   BYTE PTR [esi],bl
  415a60:	mov    ah,0x20
  415a62:	xchg   esp,eax
  415a63:	adc    BYTE PTR [esi+0x75],dh
  415a66:	cli    
  415a67:	call   0xa9658c18
  415a6c:	lods   al,BYTE PTR gs:[esi]
  415a6e:	clc    
  415a6f:	push   0x42048712
  415a74:	mov    esp,0x3c40989a
  415a79:	cdq    
  415a7a:	adc    BYTE PTR [edi-0xd],al
  415a7d:	add    al,0xa9
  415a7f:	ret    0x4d18
  415a82:	push   esp
  415a83:	icebp  
  415a84:	xchg   ah,bl
  415a86:	mov    esi,0x5d843d62
  415a8b:	and    eax,0x3b06d697
  415a90:	cmp    al,BYTE PTR [ebp+esi*4-0x1e0f8953]
  415a97:	add    DWORD PTR [esp+ebp*1-0x4],0x7b
  415a9c:	add    ebx,DWORD PTR ds:0x5d8af374
  415aa2:	or     BYTE PTR [edx-0x34],bl
  415aa5:	pop    ss
  415aa6:	cmp    DWORD PTR [ebx+ecx*8],edi
  415aa9:	std    
  415aaa:	mov    DWORD PTR [edx-0x4e48996b],0x5d46e752
  415ab4:	out    dx,al
  415ab5:	adc    al,0x3c
  415ab7:	dec    ecx
  415ab8:	dec    ecx
  415ab9:	xchg   edx,eax
  415aba:	push   esp
  415abb:	dec    ebp
  415abc:	mov    ah,BYTE PTR [esi]
  415abe:	out    dx,al
  415abf:	dec    esi
  415ac0:	adc    BYTE PTR [ecx+0x5147ff1f],ah
  415ac6:	test   BYTE PTR [eax+0xd],bl
  415ac9:	sub    BYTE PTR [ebp-0x16df4770],bh
  415acf:	aaa    
  415ad0:	adc    DWORD PTR [edx+ebp*8],0xc141ff77
  415ad7:	pop    ebx
  415ad8:	push   esp
  415ad9:	push   ebx
  415ada:	les    ebx,FWORD PTR [esi-0x21]
  415add:	jmp    0x60b9f32d
  415ae2:	inc    esp
  415ae3:	mov    esp,0x3ff059df
  415ae8:	dec    edx
  415ae9:	cmp    cl,BYTE PTR [ecx+0x18]
  415aec:	or     eax,DWORD PTR [ebp+0x5f]
  415aef:	int3   
  415af0:	ins    DWORD PTR es:[edi],dx
  415af1:	fsub   DWORD PTR [esi]
  415af3:	int    0xa3
  415af5:	xor    ebp,DWORD PTR [ecx-0x2f90b23a]
  415afb:	push   esi
  415afc:	fsubr  st(7),st
  415afe:	int3   
  415aff:	repnz mov ds:0x382fd81d,al
  415b05:	xor    dl,BYTE PTR [ebx]
  415b07:	mov    ah,BYTE PTR [ecx+0x6c]
  415b0a:	enter  0x6a42,0x7d
  415b0e:	dec    eax
  415b0f:	add    esi,DWORD PTR [eax+eiz*8]
  415b12:	inc    edx
  415b13:	mov    ds:0x6d0c7814,al
  415b18:	les    edi,FWORD PTR [ebx+ebx*8]
  415b1b:	sub    cl,BYTE PTR ds:0xd66535a5
  415b21:	scas   eax,DWORD PTR es:[edi]
  415b22:	jo     0x415ae3
  415b24:	aam    0x3e
  415b26:	jne    0x415aeb
  415b28:	sbb    al,ah
  415b2a:	fsubr  QWORD PTR [eax-0x7a]
  415b2d:	fimul  WORD PTR [ecx+ecx*4-0x662dca4]
  415b34:	push   ds
  415b35:	pop    ebp
  415b36:	cmp    BYTE PTR [edi+ebx*1-0x47],dl
  415b3a:	jns    0x415b87
  415b3c:	in     eax,0xf4
  415b3e:	add    edx,edi
  415b40:	and    BYTE PTR [esi],bl
  415b42:	inc    edi
  415b43:	pop    ecx
  415b44:	mov    al,ds:0xa4f40e93
  415b49:	aaa    
  415b4a:	push   es
  415b4b:	imul   ebp,DWORD PTR [ecx-0x3b4e037d],0xfc92980
  415b55:	sbb    al,0x60
  415b57:	mov    DWORD PTR [ebx+eiz*1],esi
  415b5a:	popf   
  415b5b:	pop    ebp
  415b5c:	or     dh,BYTE PTR [esi+0x5d942f81]
  415b62:	cmp    edx,esi
  415b64:	arpl   ax,si
  415b66:	inc    ecx
  415b67:	in     eax,dx
  415b68:	xchg   edi,eax
  415b69:	jae    0x415b94
  415b6b:	in     al,0x32
  415b6d:	nop    DWORD PTR [ecx-0x33]
  415b71:	fmul   st(5),st
  415b73:	push   es
  415b74:	outs   dx,DWORD PTR ds:[esi]
  415b75:	jp     0x415baa
  415b77:	jno    0x415b13
  415b79:	dec    esi
  415b7a:	hlt    
  415b7b:	pop    ebx
  415b7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b7d:	adc    edi,DWORD PTR [edi-0x22]
  415b80:	pop    esp
  415b81:	fbld   TBYTE PTR [eax+0x13481075]
  415b87:	cmp    ebp,eax
  415b89:	inc    esi
  415b8a:	pop    edx
  415b8b:	jp     0x415b2e
  415b8d:	aas    
  415b8e:	test   BYTE PTR [esi-0x40],bl
  415b91:	adc    DWORD PTR [ebp-0x66],ebp
  415b94:	jg     0x415bc1
  415b96:	pop    ss
  415b97:	(bad)  
  415b98:	js     0x415b3b
  415b9a:	sbb    bh,dl
  415b9c:	lods   eax,DWORD PTR ds:[esi]
  415b9d:	or     eax,0x42c86540
  415ba2:	mov    dh,0xae
  415ba4:	es out dx,al
  415ba6:	pop    ebx
  415ba7:	pop    ebx
  415ba8:	adc    bl,dl
  415baa:	pop    ss
  415bab:	jge    0x415b90
  415bad:	mov    eax,0x77f6f07b
  415bb2:	sub    al,0x59
  415bb4:	or     al,0xe4
  415bb6:	adc    al,0xe1
  415bb8:	leave  
  415bb9:	push   cs
  415bba:	add    DWORD PTR [edi],esp
  415bbc:	mov    ecx,0x3825ef38
  415bc1:	sbb    cl,BYTE PTR [esi-0x4df9428f]
  415bc7:	ror    DWORD PTR [edi-0xa79d20f],cl
  415bcd:	jge    0x415be5
  415bcf:	add    al,0xcb
  415bd1:	aam    0x77
  415bd3:	xchg   ecx,eax
  415bd4:	push   ss
  415bd5:	lods   al,BYTE PTR ds:[esi]
  415bd6:	aam    0xdc
  415bd8:	dec    ecx
  415bd9:	dec    esi
  415bda:	rol    BYTE PTR [ebp+0x3865a248],cl
  415be0:	pusha  
  415be1:	sub    ah,ah
  415be3:	mov    cl,BYTE PTR [edi-0x11]
  415be6:	mov    dh,0xbb
  415be8:	mov    edx,0x6436069b
  415bed:	cmp    eax,0x4a5275cf
  415bf2:	(bad)  
  415bf3:	imul   ebx,ecx,0x1661276a
  415bf9:	pop    eax
  415bfa:	stos   DWORD PTR es:[edi],eax
  415bfb:	aam    0x8
  415bfd:	test   BYTE PTR [edx],ah
  415bff:	icebp  
  415c00:	push   0xffffffe6
  415c02:	dec    ebp
  415c03:	inc    esp
  415c04:	xor    DWORD PTR [edi],edi
  415c06:	pop    es
  415c07:	sub    al,0x28
  415c09:	cdq    
  415c0a:	sub    BYTE PTR [ecx+0xc48c878],ah
  415c10:	xchg   ecx,eax
  415c11:	push   0x6d
  415c13:	jecxz  0x415bda
  415c15:	mov    al,ds:0x57105ca4
  415c1a:	test   al,0x9a
  415c1c:	aam    0x3e
  415c1e:	sub    BYTE PTR [ebx+0x3f],bl
  415c21:	add    al,0x89
  415c23:	fimul  WORD PTR [edx-0x1e61643]
  415c29:	dec    esi
  415c2a:	std    
  415c2b:	repnz test al,0x60
  415c2e:	cli    
  415c2f:	into   
  415c30:	out    0xf5,eax
  415c32:	(bad)  
  415c33:	not    DWORD PTR [edx+ebx*4+0x27]
  415c37:	push   ss
  415c38:	sub    eax,0xbfccbc42
  415c3d:	mov    eax,ds:0xa051e723
  415c42:	call   0xdc9e1ea8
  415c47:	sbb    ebx,DWORD PTR [ebx]
  415c49:	push   ss
  415c4a:	repnz mov edx,0xbfaf92d8
  415c50:	sub    al,0xbe
  415c52:	call   0x941b:0xa6052091
  415c59:	aas    
  415c5a:	int3   
  415c5b:	add    al,0xc3
  415c5d:	sbb    eax,0x7cf89eaf
  415c62:	or     BYTE PTR [eax],bh
  415c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c65:	imul   esp,esp,0xd78e908d
  415c6b:	ins    BYTE PTR es:[edi],dx
  415c6c:	dec    edx
  415c6d:	loopne 0x415c24
  415c6f:	xor    eax,0x97e2f0b0
  415c74:	inc    eax
  415c75:	mov    edi,0x4ecd558b
  415c7a:	pop    ebp
  415c7b:	hlt    
  415c7c:	or     ah,al
  415c7e:	repz pop eax
  415c80:	call   0x366f9832
  415c85:	mov    cl,0x96
  415c87:	adc    eax,0x3ee56544
  415c8c:	adc    eax,0xc44aa480
  415c91:	mov    ds:0xd1dbb120,al
  415c96:	xchg   BYTE PTR [ecx+edx*2],bh
  415c99:	sbb    ebx,eax
  415c9b:	push   ebx
  415c9c:	pop    ds
  415c9d:	sbb    esp,DWORD PTR [ecx]
  415c9f:	mov    eax,0xdd9a7909
  415ca4:	les    esp,FWORD PTR [esi]
  415ca6:	and    al,0xfb
  415ca8:	and    al,0xb
  415caa:	push   cs
  415cab:	mov    eax,0x7a006938
  415cb0:	(bad)  
  415cb1:	ins    DWORD PTR es:[edi],dx
  415cb2:	or     BYTE PTR [ebx],cl
  415cb4:	mov    edi,0xf71d017d
  415cb9:	xchg   esp,eax
  415cba:	stos   BYTE PTR es:[edi],al
  415cbb:	lds    ecx,FWORD PTR ds:[ecx+0x5560bc8d]
  415cc2:	arpl   di,cx
  415cc4:	daa    
  415cc5:	dec    ecx
  415cc6:	xor    edx,DWORD PTR [ebx-0x7bc684a0]
  415ccc:	push   ebp
  415ccd:	retf   0x1ac0
  415cd0:	and    esi,ebx
  415cd2:	call   0xf837ac9a
  415cd7:	mov    edx,0x1afb3fe8
  415cdc:	popf   
  415cdd:	aad    0x99
  415cdf:	mov    edi,0x72420c48
  415ce4:	push   es
  415ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ce6:	and    al,0x2f
  415ce8:	dec    edx
  415ce9:	mov    ebp,0xf922d093
  415cee:	popf   
  415cef:	jecxz  0x415cb2
  415cf1:	jle    0x415caa
  415cf3:	cmp    eax,0xe34a4106
  415cf8:	fimul  WORD PTR [esp+esi*1+0x5855436e]
  415cff:	mov    bh,0x72
  415d01:	xchg   esp,eax
  415d02:	jno    0x415cfa
  415d04:	push   ecx
  415d05:	pop    ds
  415d06:	push   ds
  415d07:	fs pop esi
  415d09:	out    dx,al
  415d0a:	pop    ebp
  415d0b:	repz jmp 0x415cb1
  415d0e:	mov    dl,0x8e
  415d10:	cwde   
  415d11:	mov    ebx,0xff81450c
  415d16:	mov    dl,0xbf
  415d18:	imul   edx,DWORD PTR [ebx],0xb
  415d1b:	mov    bh,0x90
  415d1d:	clc    
  415d1e:	push   cs
  415d1f:	add    BYTE PTR [eax],dh
  415d21:	ins    BYTE PTR es:[edi],dx
  415d22:	shl    BYTE PTR [eax],1
  415d24:	sub    ebx,DWORD PTR ds:0x38db1b3d
  415d2a:	sub    BYTE PTR [eax+0xb003105],ch
  415d30:	push   cs
  415d31:	jb     0x415cc2
  415d33:	mov    ds:0x159fde63,eax
  415d38:	push   es
  415d39:	adc    DWORD PTR [ecx+0x30],esp
  415d3c:	mov    bl,0xac
  415d3e:	inc    esi
  415d3f:	add    dl,BYTE PTR [ebx-0x17]
  415d42:	or     DWORD PTR [edx],esi
  415d44:	shl    BYTE PTR [ecx+0x45],cl
  415d47:	xor    esp,DWORD PTR [ecx]
  415d49:	adc    DWORD PTR [ecx+0x7bb6b6c5],edi
  415d4f:	ss mov ebp,ebx
  415d52:	add    esi,edi
  415d54:	adc    DWORD PTR [ecx+edx*8-0xa7cbb76],esi
  415d5b:	or     al,0x21
  415d5d:	xchg   esi,eax
  415d5e:	mov    cl,0x39
  415d60:	push   ss
  415d61:	(bad)  
  415d62:	out    0x25,al
  415d64:	jecxz  0x415d67
  415d66:	xchg   DWORD PTR [edx],edi
  415d68:	mov    ah,0xe3
  415d6a:	mov    ebx,0xa94b1eb9
  415d6f:	in     eax,0xbb
  415d71:	repnz lds ebp,FWORD PTR [eax]
  415d74:	repz icebp 
  415d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d77:	jnp    0x415dc3
  415d79:	out    0x3,eax
  415d7b:	mov    ch,0x2
  415d7d:	xchg   esi,eax
  415d7e:	inc    esp
  415d7f:	(bad)  
  415d80:	arpl   si,si
  415d82:	mov    al,ds:0x1330d192
  415d87:	jge    0x415dc3
  415d89:	cmp    eax,0xf841821
  415d8e:	push   0x91a3857a
  415d93:	mov    al,ds:0xad2151ff
  415d98:	mov    al,0xed
  415d9a:	pushf  
  415d9b:	into   
  415d9c:	ds std 
  415d9e:	sar    DWORD PTR [edi+0x53],0x21
  415da2:	fld    QWORD PTR [eax]
  415da4:	mov    ah,0x2a
  415da6:	mov    edi,0xce683dc7
  415dab:	ins    DWORD PTR es:[edi],dx
  415dac:	pop    esp
  415dad:	push   ds
  415dae:	sbb    ecx,ebp
  415db0:	adc    dl,BYTE PTR ds:[edi]
  415db3:	push   0x3e
  415db5:	and    ebp,DWORD PTR [ecx+esi*1]
  415db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415db9:	std    
  415dba:	aad    0x14
  415dbc:	in     eax,0x54
  415dbe:	repnz cmp eax,0xe6ea7428
  415dc4:	jns    0x415e29
  415dc6:	jbe    0x415d5f
  415dc8:	sub    BYTE PTR ds:0xf08706cb,0x72
  415dcf:	jg     0x415d76
  415dd1:	jle    0x415d8b
  415dd3:	popf   
  415dd4:	xchg   ebp,eax
  415dd5:	pop    ebp
  415dd6:	push   es
  415dd7:	pop    ds
  415dd8:	mov    DWORD PTR ds:0xcb3a8865,edi
  415dde:	std    
  415ddf:	push   0xffffffca
  415de1:	add    eax,DWORD PTR [edx+0x21]
  415de4:	mov    bl,0x1e
  415de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415de7:	jp     0x415e30
  415de9:	out    0xe2,al
  415deb:	dec    esi
  415dec:	fidiv  DWORD PTR [ecx]
  415dee:	sub    DWORD PTR [ebx],edx
  415df0:	repz adc BYTE PTR [ebx],cl
  415df3:	ret    0x626e
  415df6:	jg     0x415e4a
  415df8:	neg    ecx
  415dfa:	daa    
  415dfb:	(bad)  
  415dfc:	scas   al,BYTE PTR es:[edi]
  415dfd:	(bad)
  415e00:	(bad)  
  415e01:	jmp    0xc1d4ddd5
  415e06:	cwde   
  415e07:	pop    esp
  415e08:	ds es inc esp
  415e0b:	inc    edi
  415e0c:	pusha  
  415e0d:	xor    DWORD PTR [ebp+0x74],eax
  415e10:	js     0x415e0d
  415e12:	aaa    
  415e13:	sti    
  415e14:	mov    ch,0xd2
  415e16:	jne    0x415e54
  415e18:	call   DWORD PTR [edi]
  415e1a:	cmp    bl,BYTE PTR [edi+0x50]
  415e1d:	int    0x81
  415e1f:	push   esi
  415e20:	dec    esp
  415e21:	call   0xa080:0xc9d8dd23
  415e28:	sub    BYTE PTR [ebp-0x163305be],dl
  415e2e:	mov    al,ds:0x64936118
  415e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e34:	inc    edi
  415e35:	sbb    DWORD PTR [edx+0x1b],ecx
  415e38:	das    
  415e39:	push   0x3c
  415e3b:	xor    eax,0xae7b8889
  415e40:	fsubr  DWORD PTR [ebx+0x3d9b2da7]
  415e46:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  415e48:	vpmulhuw ymm0,ymm7,ymm0
  415e4c:	(bad)  
  415e4d:	in     eax,dx
  415e4e:	push   eax
  415e4f:	das    
  415e50:	shl    ah,1
  415e52:	sbb    DWORD PTR [eax+0x7a3b29d6],esi
  415e58:	in     ax,0x36
  415e5b:	in     al,0xa
  415e5d:	retf   0xfa0f
  415e60:	or     BYTE PTR [edi],dl
  415e62:	jnp    0x415eb7
  415e64:	push   esi
  415e65:	mov    cl,0x82
  415e67:	repnz push ecx
  415e69:	cmc    
  415e6a:	mov    dl,0xe0
  415e6c:	mov    ah,0xd6
  415e6e:	jmp    0x6d62:0x6641088d
  415e75:	test   DWORD PTR [eax+0x3093fa7d],eax
  415e7b:	dec    edi
  415e7c:	sbb    BYTE PTR [eax],bh
  415e7e:	scas   al,BYTE PTR es:[edi]
  415e7f:	gs mov ah,0x8
  415e82:	shr    BYTE PTR [esi-0xb],1
  415e85:	inc    esi
  415e86:	xchg   BYTE PTR ds:0x8767ebde,bl
  415e8c:	lea    ecx,[esi]
  415e8e:	pusha  
  415e8f:	pop    ds
  415e90:	scas   al,BYTE PTR es:[edi]
  415e91:	xor    ch,BYTE PTR [edi]
  415e93:	push   edi
  415e94:	adc    al,0xc6
  415e96:	mov    al,0xaa
  415e98:	mov    DWORD PTR fs:[esi+0x72],eax
  415e9c:	mov    ah,0xbc
  415e9e:	rol    BYTE PTR [esi+0x62b0dbe6],cl
  415ea4:	sbb    BYTE PTR [eax-0x56f7ed8b],bl
  415eaa:	sub    al,0xc3
  415eac:	mov    ?,WORD PTR [ebp+0xe]
  415eaf:	ret    0x5e30
  415eb2:	sub    eax,0xa077764a
  415eb7:	xor    al,0x8c
  415eb9:	ficom  WORD PTR [edi-0x3255203c]
  415ebf:	loope  0x415edb
  415ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ec2:	iret   
  415ec3:	dec    edi
  415ec4:	popf   
  415ec5:	cmp    ebx,DWORD PTR [edx-0x266ba9bc]
  415ecb:	stos   DWORD PTR es:[edi],eax
  415ecc:	inc    ebx
  415ecd:	jnp    0x415f2a
  415ecf:	sbb    BYTE PTR [ebx+ecx*8-0x54],ah
  415ed3:	add    edi,eax
  415ed5:	adc    cl,dl
  415ed7:	stos   BYTE PTR es:[edi],al
  415ed8:	fisub  DWORD PTR [edi]
  415eda:	cdq    
  415edb:	out    dx,eax
  415edc:	mov    cl,BYTE PTR [ecx+0x2c]
  415edf:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  415ee1:	aaa    
  415ee2:	dec    ebp
  415ee3:	and    edi,ebp
  415ee5:	lods   eax,DWORD PTR ds:[esi]
  415ee6:	pop    ecx
  415ee7:	sub    BYTE PTR [ebp-0x7bda7a86],ah
  415eed:	addr16 or eax,0x108db121
  415ef3:	jae    0x415f13
  415ef5:	data16 mov cl,0x9c
  415ef8:	dec    esi
  415ef9:	jmp    0x415e9d
  415efb:	js     0x415f2f
  415efd:	push   0xd5a90759
  415f02:	(bad)  
  415f03:	jmp    0x415ede
  415f05:	out    dx,eax
  415f06:	outs   dx,BYTE PTR ds:[esi]
  415f07:	push   ds
  415f08:	ins    DWORD PTR es:[edi],dx
  415f09:	push   0xc9b7fbd3
  415f0e:	add    BYTE PTR [esi],0x21
  415f11:	dec    eax
  415f12:	int3   
  415f13:	jmp    0xb865:0x4de142ad
  415f1a:	push   edx
  415f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f1c:	and    eax,0xbf41c06e
  415f21:	mov    ch,0xfc
  415f23:	cmp    dl,bl
  415f25:	push   ss
  415f26:	cmp    BYTE PTR [edx-0x38],cl
  415f29:	inc    esp
  415f2a:	leave  
  415f2b:	fnsave [edi-0x522be59b]
  415f31:	sti    
  415f32:	fimul  DWORD PTR [edx]
  415f34:	outs   dx,DWORD PTR ds:[esi]
  415f35:	pop    ds
  415f36:	xor    al,0x2f
  415f38:	aam    0xef
  415f3a:	outs   dx,BYTE PTR ds:[esi]
  415f3b:	call   0xa0fd96f0
  415f40:	cmp    BYTE PTR [edi],ah
  415f42:	retf   0x16cf
  415f45:	data16 rcr BYTE PTR [ebx+0x25411cbc],0xf4
  415f4d:	fiadd  DWORD PTR ds:0xfe624de4
  415f53:	popa   
  415f54:	imul   ecx,ebp,0x7621bf43
  415f5a:	push   ss
  415f5b:	or     ebx,esp
  415f5d:	mov    al,ds:0x47bec486
  415f62:	hlt    
  415f63:	xchg   ecx,eax
  415f64:	scas   al,BYTE PTR es:[edi]
  415f65:	sub    esi,ebx
  415f67:	outs   dx,DWORD PTR ds:[esi]
  415f68:	scas   al,BYTE PTR es:[edi]
  415f69:	cmp    bh,dh
  415f6b:	hlt    
  415f6c:	inc    esp
  415f6d:	xchg   ebp,eax
  415f6e:	daa    
  415f6f:	add    edx,DWORD PTR ds:0x67a52c49
  415f75:	daa    
  415f76:	fs enter 0xdbc9,0xa
  415f7b:	jle    0x415f22
  415f7d:	addr16 pop eax
  415f7f:	mov    cl,0x41
  415f81:	inc    edi
  415f82:	mov    cl,0x45
  415f84:	add    eax,0xe795373e
  415f89:	or     DWORD PTR [edi],ebp
  415f8b:	int3   
  415f8c:	mov    esi,0x5b24c145
  415f91:	sub    DWORD PTR [eax+ecx*1+0x4c35f6e4],eax
  415f98:	pop    eax
  415f99:	cmp    al,0x53
  415f9b:	inc    eax
  415f9c:	and    dl,dh
  415f9e:	xlat   BYTE PTR ds:[ebx]
  415f9f:	mov    eax,ebp
  415fa1:	loopne 0x415fd8
  415fa3:	xor    BYTE PTR [eax-0x1],al
  415fa6:	xor    eax,DWORD PTR [ebp-0x67]
  415fa9:	int3   
  415faa:	mov    ah,0x9
  415fac:	out    0xd6,eax
  415fae:	adc    BYTE PTR [ebp-0x60],bh
  415fb1:	jmp    0x512bb7eb
  415fb6:	mov    ch,0x17
  415fb8:	cmp    esp,DWORD PTR [esi-0x61]
  415fbb:	cmp    DWORD PTR [eax*1-0x53dbe6e5],ecx
  415fc2:	retf   0x507c
  415fc5:	jle    0x415f90
  415fc7:	mov    bh,0x92
  415fc9:	xor    edx,DWORD PTR ds:0xf3330187
  415fcf:	fcmove st,st(5)
  415fd1:	repnz ins BYTE PTR es:[edi],dx
  415fd3:	adc    eax,0x75ff4b20
  415fd8:	dec    edx
  415fd9:	fld    TBYTE PTR [ecx+0x6a76cdff]
  415fdf:	mov    eax,DWORD PTR ds:0x6c112f2
  415fe5:	out    0xd5,al
  415fe7:	or     BYTE PTR [ecx-0x6defb145],bh
  415fed:	shl    DWORD PTR [ecx-0x4cbe8681],0xa6
  415ff4:	lahf   
  415ff5:	retf   
  415ff6:	dec    ebp
  415ff7:	cmp    dl,bl
  415ff9:	jo     0x415fc0
  415ffb:	push   ds
  415ffc:	xlat   BYTE PTR ds:[ebx]
  415ffd:	(bad)  
  415ffe:	fcmovnu st,st(5)
  416000:	jno    0x416012
  416002:	fs xor bh,bl
  416005:	xor    eax,0xc07c778b
  41600a:	jno    0x416012
  41600c:	pop    edx
  41600d:	js     0x41605f
  41600f:	push   0xa59b36a6
  416014:	jmp    0x573f:0x70057eec
  41601b:	aas    
  41601c:	jg     0x415ffb
  41601e:	or     eax,0xe0a8529b
  416023:	mov    ds:0x64671c57,al
  416028:	in     eax,0x72
  41602a:	pop    ds
  41602b:	loopne 0x416043
  41602d:	iret   
  41602e:	call   0x3b6b:0x78c687
  416035:	leave  
  416036:	out    dx,eax
  416037:	add    esi,DWORD PTR [ebx]
  416039:	jnp    0x416091
  41603b:	loopne 0x416094
  41603d:	lods   eax,DWORD PTR ds:[esi]
  41603e:	imul   esi,esi,0xffffffd6
  416041:	adc    al,0xa3
  416043:	inc    esi
  416044:	outs   dx,BYTE PTR ds:[esi]
  416045:	mov    ecx,0x546d7992
  41604a:	jne    0x4160a6
  41604c:	out    dx,al
  41604d:	adc    DWORD PTR [eax+0x4c41c1fd],ecx
  416053:	out    0x10,eax
  416055:	jge    0x41608a
  416057:	add    esi,DWORD PTR [esi-0x30]
  41605a:	push   0xffffffc1
  41605c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41605d:	adc    ecx,esp
  41605f:	xlat   BYTE PTR ds:[ebx]
  416060:	mov    ch,0xc6
  416062:	push   ss
  416063:	inc    edx
  416064:	sar    esp,cl
  416066:	popa   
  416067:	cdq    
  416068:	mov    ch,0x22
  41606a:	mov    DWORD PTR [esi-0x6340f408],edx
  416070:	aaa    
  416071:	aad    0xb6
  416073:	in     al,dx
  416074:	xchg   edi,eax
  416075:	les    ecx,FWORD PTR [edx]
  416077:	cmp    bl,BYTE PTR [ecx+0x2bb05f29]
  41607d:	sbb    al,0x1
  41607f:	dec    ebx
  416080:	pop    es
  416081:	mov    ebp,0xfea396fd
  416086:	pop    ebx
  416087:	dec    esi
  416088:	sub    BYTE PTR [esp+ebx*8],0xe8
  41608c:	inc    edx
  41608d:	in     eax,0x91
  41608f:	sar    BYTE PTR [esi+0x11],cl
  416092:	daa    
  416093:	(bad)  
  416094:	cmp    eax,0xbe930903
  416099:	mov    esi,0x12ef1dcd
  41609e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41609f:	xchg   DWORD PTR [ebx],eax
  4160a1:	add    bl,ch
  4160a3:	lahf   
  4160a4:	out    dx,eax
  4160a5:	pop    edi
  4160a6:	je     0x41607f
  4160a8:	ds addr16 add ecx,edi
  4160ac:	shr    DWORD PTR [edx+esi*1+0x5a5cc42c],1
  4160b3:	ins    DWORD PTR es:[edi],dx
  4160b4:	stos   BYTE PTR es:[edi],al
  4160b5:	aaa    
  4160b6:	xchg   BYTE PTR [eax-0x72],dh
  4160b9:	fidivr WORD PTR ds:0xd1bc91ff
  4160c0:	jmp    0xe5a55a82
  4160c5:	jp     0x416112
  4160c7:	pop    ds
  4160c8:	pusha  
  4160c9:	loope  0x416128
  4160cb:	fcmove st,st(1)
  4160cd:	call   0x451c90a4
  4160d2:	push   es
  4160d3:	ror    DWORD PTR [eax],cl
  4160d5:	clc    
  4160d6:	fbstp  TBYTE PTR ds:0x15caa444
  4160dc:	pop    ss
  4160dd:	xlat   BYTE PTR ds:[ebx]
  4160de:	aaa    
  4160df:	xor    BYTE PTR [ebp+0x5f],0x59
  4160e3:	arpl   WORD PTR [ebx],ax
  4160e5:	push   edx
  4160e6:	jp     0x41612f
  4160e8:	mov    ecx,0xc6725d1a
  4160ed:	adc    BYTE PTR [esi-0x4],bh
  4160f0:	sar    BYTE PTR [ecx-0x75],0xf
  4160f4:	out    dx,eax
  4160f5:	imul   ecx,DWORD PTR [ecx],0xc
  4160f8:	mov    edx,0x8f89cfa8
  4160fd:	xchg   esp,eax
  4160fe:	mov    bl,ah
  416100:	jp     0x4160b6
  416102:	cmp    DWORD PTR [edx+ebp*2],esp
  416105:	and    al,0x9c
  416107:	fwait
  416108:	jb     0x4160f4
  41610a:	sti    
  41610b:	adc    BYTE PTR [edx-0x6f],ch
  41610e:	xchg   esi,eax
  41610f:	jle    0x4160c5
  416111:	xor    BYTE PTR [ebx-0x40],bl
  416114:	loop   0x416157
  416116:	in     al,dx
  416117:	lods   al,BYTE PTR ds:[esi]
  416118:	aaa    
  416119:	imul   edi,DWORD PTR [esi-0x6ff87b04],0x84d724e4
  416123:	sub    DWORD PTR [ebp+0x41aa9937],esp
  416129:	sub    BYTE PTR [ebx],al
  41612b:	fld    QWORD PTR [eax+0x60]
  41612e:	ss mov ebx,0x4959b2e9
  416134:	ins    DWORD PTR es:[edi],dx
  416135:	cs mov edi,0x3172c446
  41613b:	jnp    0x4160eb
  41613d:	push   0x9f519e08
  416142:	jbe    0x41619e
  416144:	sahf   
  416145:	ror    DWORD PTR [ebp+0x635e6a10],cl
  41614b:	sub    al,0xbf
  41614d:	xchg   ebx,eax
  41614e:	or     BYTE PTR [edx-0x56],dh
  416151:	imul   ecx,DWORD PTR [ebx-0x9],0x940180b5
  416158:	mov    bh,0x1d
  41615a:	cmp    DWORD PTR [ecx-0x74],ecx
  41615d:	inc    ebp
  41615e:	jge    0x41616d
  416160:	fst    DWORD PTR [edi]
  416162:	fidivr DWORD PTR [ebp-0x5]
  416165:	retf   0xd826
  416168:	stos   BYTE PTR es:[edi],al
  416169:	push   eax
  41616a:	jno    0x4161ca
  41616c:	xchg   ebx,eax
  41616d:	test   al,0x8f
  41616f:	and    BYTE PTR [ebx+0x2fe8a656],ch
  416175:	or     al,0x3a
  416177:	cmp    cl,BYTE PTR [edi]
  416179:	sub    cl,BYTE PTR [edi]
  41617b:	nop/reserved BYTE PTR [ebx+0x7c72a051]
  416182:	popa   
  416183:	mov    edx,0x19f3956d
  416188:	cwde   
  416189:	xchg   edi,eax
  41618a:	mov    al,ds:0xad4feb96
  41618f:	js     0x4161a9
  416191:	ret    
  416192:	nop    DWORD PTR [ebx]
  416195:	xchg   esi,eax
  416196:	jge    0x4161c2
  416198:	push   eax
  416199:	mov    dh,BYTE PTR [ebx-0x237c077c]
  41619f:	ret    
  4161a0:	dec    eax
  4161a1:	dec    esi
  4161a2:	fstp   DWORD PTR [esi+0x39f50099]
  4161a8:	stos   DWORD PTR es:[edi],eax
  4161a9:	or     eax,0x333ff6df
  4161ae:	fsub   st,st(0)
  4161b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b1:	or     eax,0x2867e934
  4161b6:	mov    bl,0x60
  4161b8:	(bad)  
  4161b9:	mov    ah,0xcc
  4161bb:	retf   
  4161bc:	fidivr WORD PTR [edx+0x47]
  4161bf:	icebp  
  4161c0:	sub    ecx,DWORD PTR [esi]
  4161c2:	mov    esi,0x30589e16
  4161c7:	jb     0x416207
  4161c9:	and    esi,DWORD PTR [edi]
  4161cb:	mov    ah,0xb8
  4161cd:	pop    ebp
  4161ce:	clc    
  4161cf:	mov    dh,0xc6
  4161d1:	idiv   BYTE PTR [edi-0x5e]
  4161d4:	inc    ebx
  4161d5:	jle    0x4161ad
  4161d7:	test   BYTE PTR [ebp-0x3e],0x26
  4161db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161dc:	fiadd  WORD PTR [ebp+0x43]
  4161df:	add    eax,0xd439d673
  4161e4:	dec    eax
  4161e5:	fnstsw WORD PTR [ebx-0x7a]
  4161e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161e9:	(bad)  
  4161ea:	jb     0x4161d2
  4161ec:	rol    cl,1
  4161ee:	(bad)  
  4161ef:	(bad)  
  4161f1:	inc    ebp
  4161f2:	push   cs
  4161f3:	into   
  4161f4:	nop
  4161f5:	pop    ebp
  4161f6:	mov    bl,0x22
  4161f8:	call   0x2e4b:0x73f82778
  4161ff:	cmp    al,0x31
  416201:	fwait
  416202:	and    bl,dh
  416204:	ret    
  416205:	jp     0x416198
  416207:	mov    dl,0x81
  416209:	add    ebx,DWORD PTR [ecx-0x52]
  41620c:	cdq    
  41620d:	test   eax,edi
  41620f:	ficom  DWORD PTR [esi]
  416211:	and    bh,BYTE PTR [esp+edi*1+0x45]
  416215:	hlt    
  416216:	imul   eax,DWORD PTR [eax],0x20
  416219:	push   edi
  41621a:	sbb    DWORD PTR [edi],ebx
  41621c:	imul   ebp,ebx,0x401f1a04
  416222:	icebp  
  416223:	ror    DWORD PTR [esi],1
  416225:	jmp    0x4555:0xd756f7e5
  41622c:	push   0xe03eb0a4
  416231:	nop
  416232:	pushf  
  416233:	pop    esp
  416234:	sti    
  416235:	bound  esp,QWORD PTR [ecx+0x4ef42dd9]
  41623b:	jnp    0x4162b4
  41623d:	cld    
  41623e:	inc    esp
  41623f:	test   eax,0x14dac771
  416244:	mov    bh,0xd7
  416246:	int    0x74
  416248:	pop    edi
  416249:	dec    edi
  41624a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41624b:	in     al,dx
  41624c:	pop    esi
  41624d:	rcl    bh,1
  41624f:	fwait
  416250:	and    al,BYTE PTR [eax]
  416252:	idiv   BYTE PTR [esi-0x75]
  416255:	aad    0xee
  416257:	(bad)  
  416259:	and    eax,0x95fc95f8
  41625e:	add    al,0x15
  416260:	sbb    al,0xba
  416262:	and    ecx,DWORD PTR [ebp-0x59]
  416265:	fnsave [ecx-0x4f]
  416268:	jo     0x4162da
  41626a:	and    esp,DWORD PTR [ebp-0x3db9bb3e]
  416270:	fs dec esi
  416272:	jl     0x41625e
  416274:	push   esp
  416275:	mov    ds:0x11cd8425,al
  41627a:	ret    
  41627b:	call   0xe0dd:0xacc4747c
  416282:	ret    
  416283:	push   0xffffffb8
  416285:	fneni(8087 only) 
  416287:	fld    QWORD PTR [edx*8+0x7e97eaaa]
  41628e:	mov    edx,0x115eb277
  416293:	inc    ebp
  416294:	sbb    ah,BYTE PTR [ecx-0x1192503c]
  41629a:	push   edi
  41629b:	mov    ch,0x28
  41629d:	ins    BYTE PTR es:[edi],dx
  41629e:	mov    bh,0x1
  4162a0:	fsub   QWORD PTR [ecx-0x53e3cdbe]
  4162a6:	das    
  4162a7:	mov    al,ds:0x4303c996
  4162ac:	jae    0x416240
  4162ae:	dec    esi
  4162af:	mov    al,0xe2
  4162b1:	pop    ebp
  4162b2:	arpl   ax,bp
  4162b4:	sbb    dh,BYTE PTR cs:[eax+0xb92e8ba]
  4162bb:	adc    DWORD PTR [ecx-0x4f],ebp
  4162be:	in     al,dx
  4162bf:	loop   0x416311
  4162c1:	dec    edx
  4162c2:	push   ds
  4162c3:	xchg   esp,eax
  4162c4:	jmp    0x735d:0xc9f0d275
  4162cb:	and    bh,BYTE PTR [edx]
  4162cd:	test   al,0x5
  4162cf:	stc    
  4162d0:	fwait
  4162d1:	sbb    eax,0x2c6255b6
  4162d6:	(bad)  
  4162d8:	(bad)  
  4162da:	push   0xfffffffb
  4162dc:	cwde   
  4162dd:	sbb    eax,0x926b2b33
  4162e2:	jbe    0x41633e
  4162e4:	mov    eax,ds:0x9d768b77
  4162e9:	out    0x5a,al
  4162eb:	adc    ebp,DWORD PTR [ebx-0xdc21453]
  4162f1:	jecxz  0x4162de
  4162f3:	and    DWORD PTR [eax-0x6ff3f709],0xffffffe3
  4162fa:	daa    
  4162fb:	out    0xac,al
  4162fd:	out    0xbe,eax
  4162ff:	xchg   BYTE PTR [esi],ah
  416301:	test   BYTE PTR [esi-0x80],dl
  416304:	push   esi
  416305:	rol    edx,1
  416307:	mov    ebp,0x3a732178
  41630c:	cmp    al,bl
  41630e:	mov    ch,0x59
  416310:	in     eax,dx
  416311:	loop   0x416322
  416313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416314:	stc    
  416315:	call   0x91de:0xadad633b
  41631c:	sbb    ah,BYTE PTR [ecx+0x399b1b45]
  416322:	cmp    BYTE PTR [eax+edx*4-0x1c],dh
  416326:	push   eax
  416327:	xor    al,0x29
  416329:	sub    edx,DWORD PTR [ebx-0x18885d4e]
  41632f:	mov    ebx,eax
  416331:	or     al,0x6f
  416333:	pop    edx
  416334:	mov    WORD PTR [edx+0x31],es
  416337:	mov    ah,0x1
  416339:	mov    ebp,0xf57b380c
  41633e:	es jno 0x4162c6
  416341:	mov    dh,0xdf
  416343:	or     eax,0xb9b2a390
  416348:	cmp    DWORD PTR [eax+0x39618f83],ebx
  41634e:	pushf  
  41634f:	mov    fs,esp
  416351:	or     eax,0x47aef7bd
  416356:	mov    bh,0xc1
  416358:	popa   
  416359:	mov    bh,0xa3
  41635b:	xchg   BYTE PTR [ebx+0x67],bl
  41635e:	pushf  
  41635f:	into   
  416360:	add    bh,0x41
  416363:	stc    
  416364:	ds in  eax,dx
  416366:	ret    0xe8af
  416369:	(bad)  
  41636a:	xor    DWORD PTR [eax-0x38],ecx
  41636d:	mov    bl,0x10
  41636f:	jmp    0x90f3fdfb
  416374:	data16 jae 0x4163cc
  416377:	sar    BYTE PTR ds:0x250ee67e,0xe0
  41637e:	mov    ds:0xf63c4297,al
  416383:	add    al,0x37
  416385:	pop    edi
  416386:	cmp    eax,0x745b6afe
  41638b:	sub    dh,BYTE PTR [eax]
  41638d:	and    eax,0xa8e009ff
  416392:	aad    0xe6
  416394:	out    dx,eax
  416395:	push   cs
  416396:	fcom   QWORD PTR [ebx-0x4a424b17]
  41639c:	push   0x7e0af067
  4163a1:	imul   eax,ebx,0xd9fca39
  4163a7:	fld    DWORD PTR [ebx-0xef2c2fc]
  4163ad:	inc    edx
  4163ae:	adc    DWORD PTR [esi],edi
  4163b0:	or     cl,BYTE PTR [esp+ebx*4]
  4163b3:	fwait
  4163b4:	out    0xb7,al
  4163b6:	mov    edx,DWORD PTR [eax]
  4163b8:	cmp    bh,BYTE PTR [ecx+0x50]
  4163bb:	leave  
  4163bc:	lahf   
  4163bd:	xor    dh,BYTE PTR [ebp+0x74]
  4163c0:	inc    ecx
  4163c1:	fnsave [ebx-0x56]
  4163c4:	xor    DWORD PTR [ecx],eax
  4163c6:	push   cs
  4163c7:	cmp    BYTE PTR [ecx+0x4dfddd88],0xf9
  4163ce:	and    eax,0x4e70a1ee
  4163d3:	cmp    esi,DWORD PTR ds:0x59bf7f89
  4163d9:	dec    ebx
  4163da:	iret   
  4163db:	psubsw mm0,QWORD PTR [ebp-0x4531d7c9]
  4163e2:	test   eax,0x3804a8
  4163e7:	or     al,0xd0
  4163e9:	scas   eax,DWORD PTR es:[edi]
  4163ea:	mov    al,ds:0xd7fd52f6
  4163ef:	dec    esi
  4163f0:	ins    BYTE PTR es:[edi],dx
  4163f1:	out    0x77,eax
  4163f3:	push   ss
  4163f4:	fs (bad) 
  4163f6:	jne    0x4163c0
  4163f8:	inc    esp
  4163f9:	std    
  4163fa:	cmc    
  4163fb:	ret    0xeb7
  4163fe:	dec    edi
  4163ff:	push   0x31
  416401:	ja     0x4163b5
  416403:	mov    edi,0x82161dc9
  416408:	cli    
  416409:	push   edx
  41640a:	push   ds
  41640b:	(bad)  
  41640c:	pop    esp
  41640d:	das    
  41640e:	bound  edi,QWORD PTR [edx]
  416410:	mov    cl,0xab
  416412:	xlat   BYTE PTR ds:[ebx]
  416413:	call   0x8cf7:0xb5a3b316
  41641a:	out    dx,eax
  41641b:	push   esi
  41641c:	mov    cl,0x1d
  41641e:	dec    esi
  41641f:	fld    QWORD PTR [ecx-0x2c756c1b]
  416425:	lods   eax,DWORD PTR ds:[esi]
  416426:	mov    al,ds:0xd46be435
  41642b:	push   ss
  41642c:	(bad)  
  41642d:	out    0x9f,eax
  41642f:	shl    DWORD PTR [esi+0x9],cl
  416432:	not    BYTE PTR [ebx]
  416434:	push   ss
  416435:	cmp    al,0x93
  416437:	cmp    al,0x21
  416439:	int3   
  41643a:	sub    eax,0x387133f7
  41643f:	in     eax,0x46
  416441:	add    cl,BYTE PTR [ebx]
  416443:	std    
  416444:	ret    
  416445:	push   esi
  416446:	add    eax,0xe57de3f4
  41644b:	or     BYTE PTR ds:0x667197e,dl
  416451:	xor    DWORD PTR [esi],ebx
  416453:	imul   edi,DWORD PTR [ecx+0x3f47f3bd],0xffffffd0
  41645a:	dec    edx
  41645b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41645c:	fsubr  QWORD PTR [eax-0x58d13fe2]
  416462:	jp     0x4164c1
  416464:	retf   0x81d5
  416467:	fadd   QWORD PTR [edi-0x3ec1cbc4]
  41646d:	push   ecx
  41646e:	pop    esi
  41646f:	imul   ebx,DWORD PTR [ecx+edi*1],0xe4f97fa
  416476:	jp     0x41649b
  416478:	or     al,0xba
  41647a:	jmp    0x41648a
  41647c:	test   cl,dl
  41647e:	mov    eax,0xe7de9d49
  416483:	out    0xa2,al
  416485:	jns    0x4164c4
  416487:	jl     0x416480
  416489:	cmp    BYTE PTR [ebx],ah
  41648b:	adc    bh,bl
  41648d:	mov    bl,0xcd
  41648f:	int3   
  416490:	add    ebx,edx
  416492:	out    dx,al
  416493:	mov    edi,0x3d91bfef
  416498:	push   eax
  416499:	pushf  
  41649a:	call   0xd6a6:0x76faae4d
  4164a1:	(bad)  [esi+0x30]
  4164a4:	(bad)  
  4164a6:	pop    esp
  4164a7:	fdivr  st(4),st
  4164a9:	inc    esi
  4164aa:	add    dl,BYTE PTR [ecx-0x41]
  4164ad:	or     dh,BYTE PTR [eax]
  4164af:	test   ah,dl
  4164b1:	sbb    eax,0x65d8103e
  4164b6:	loope  0x4164f8
  4164b8:	inc    edi
  4164b9:	mov    dl,0xf8
  4164bb:	fimul  WORD PTR [eax+0x5d]
  4164be:	xlat   BYTE PTR ds:[ebx]
  4164bf:	(bad)  
  4164c0:	and    bh,BYTE PTR [ebx]
  4164c2:	int    0x11
  4164c4:	call   0x5f65c28d
  4164c9:	jb     0x4164fb
  4164cb:	dec    ebp
  4164cc:	nop
  4164cd:	sahf   
  4164ce:	cmp    BYTE PTR [edi+0x52],0xba
  4164d2:	push   ebx
  4164d3:	xchg   ebp,eax
  4164d4:	fwait
  4164d5:	iret   
  4164d6:	pop    ds
  4164d7:	inc    esi
  4164d8:	mov    al,ds:0xd83d683d
  4164dd:	mov    ch,0x3
  4164df:	test   al,0xac
  4164e1:	into   
  4164e2:	mov    fs,WORD PTR [ecx+0x6d]
  4164e5:	mov    ah,BYTE PTR [ebx+0x40b27c7]
  4164eb:	pop    ss
  4164ec:	add    eax,0x6a39c2ca
  4164f1:	jno    0x4164a8
  4164f3:	xchg   esi,eax
  4164f4:	mov    al,0x85
  4164f6:	inc    ebx
  4164f7:	pop    esp
  4164f8:	or     dh,ah
  4164fa:	popf   
  4164fb:	adc    al,0xf4
  4164fd:	mov    esi,0x831b9af6
  416502:	out    0x1,eax
  416504:	test   al,0x2e
  416506:	lds    eax,FWORD PTR [edi-0x2c489751]
  41650c:	or     DWORD PTR ds:0xdeb0a93,ebx
  416512:	loop   0x4164f2
  416514:	fwait
  416515:	xchg   esi,eax
  416516:	inc    eax
  416517:	div    BYTE PTR [edx-0x3]
  41651a:	es fsubp st(0),st
  41651d:	jmp    0xafd2:0x87e9cb21
  416524:	stos   BYTE PTR es:[edi],al
  416525:	int    0xac
  416527:	add    ebp,DWORD PTR ds:0xe8dfb8f4
  41652d:	(bad)
  416530:	pop    ss
  416531:	mov    edi,edx
  416533:	sbb    eax,0x336374da
  416538:	adc    al,BYTE PTR [ebp-0x3b]
  41653b:	xlat   BYTE PTR ds:[ebx]
  41653c:	mov    bh,0x3e
  41653e:	mov    dl,0x1e
  416540:	std    
  416541:	adc    DWORD PTR [ebp+0x78],ebx
  416544:	mov    edx,0xbc745b33
  416549:	mov    WORD PTR [edx+0x4f],ss
  41654c:	lods   eax,DWORD PTR ds:[esi]
  41654d:	fcom   DWORD PTR [edi+ecx*2-0x1bbc4b90]
  416554:	ret    
  416555:	(bad)  
  416556:	mov    BYTE PTR [ebp+0xa2680f8],bl
  41655c:	xor    al,0xbe
  41655f:	inc    edx
  416560:	mov    ds:0xc8a50a15,al
  416565:	test   eax,0x7bd5dbda
  41656a:	cmp    edx,DWORD PTR [edx-0x510c4087]
  416570:	pop    ds
  416571:	fwait
  416572:	nop
  416573:	mov    ds:0x40596c51,al
  416578:	push   ds
  416579:	dec    edi
  41657a:	sbb    BYTE PTR [ebx+0xd044d25],dh
  416580:	(bad)  
  416581:	ficom  WORD PTR [eax-0x3759f2b4]
  416587:	cmc    
  416588:	rcr    ebx,1
  41658a:	sub    al,0xd5
  41658c:	shl    BYTE PTR [ebp-0x382f492a],1
  416592:	cmp    ah,al
  416594:	repz mov ds:0x88832e25,eax
  41659a:	add    DWORD PTR [edi],ebp
  41659c:	mov    eax,0x83b5e0d8
  4165a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a2:	mov    eax,0x99c00e39
  4165a7:	aaa    
  4165a8:	das    
  4165a9:	sub    eax,DWORD PTR [ebp+0x66]
  4165ac:	xlat   BYTE PTR ds:[ebx]
  4165ad:	sub    cl,BYTE PTR [ecx]
  4165af:	or     bl,ch
  4165b1:	push   ss
  4165b2:	pushf  
  4165b3:	mov    esi,0xcfd32e63
  4165b8:	fadd   DWORD PTR ds:0xae3606f7
  4165be:	(bad)  
  4165bf:	out    0x2b,al
  4165c1:	xchg   esi,eax
  4165c2:	jge    0x4165ea
  4165c4:	test   BYTE PTR [esi+eiz*2+0x46d81d1b],ch
  4165cb:	xchg   esp,eax
  4165cc:	adc    al,0xc
  4165ce:	push   ebp
  4165cf:	iret   
  4165d0:	lods   eax,DWORD PTR ds:[esi]
  4165d2:	xor    al,0x81
  4165d4:	fdiv   st(7),st
  4165d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165d7:	mov    al,0xa4
  4165d9:	repnz lahf 
  4165db:	inc    esi
  4165dc:	xor    bh,BYTE PTR [esi+0x2a207e56]
  4165e2:	sub    al,0xc0
  4165e4:	jb     0x41657e
  4165e6:	sbb    eax,DWORD PTR [esi+ebx*4+0x1]
  4165ea:	aas    
  4165eb:	aam    0x1b
  4165ed:	and    al,0x60
  4165ef:	adc    DWORD PTR ds:0x612384db,edx
  4165f5:	xchg   edx,eax
  4165f6:	mov    cl,0xb9
  4165f8:	mov    eax,ds:0x1dc4cd04
  4165fd:	imul   ebp,DWORD PTR [ebx-0x1daeec67],0x99dac8a3
  416607:	inc    esp
  416608:	scas   eax,DWORD PTR es:[edi]
  416609:	mov    bl,BYTE PTR [edx]
  41660b:	aam    0xf2
  41660d:	dec    ebp
  41660e:	mov    WORD PTR [edi-0x20],es
  416611:	and    ch,0x75
  416614:	inc    eax
  416615:	xor    edx,DWORD PTR [edx]
  416617:	fstp   DWORD PTR [eax]
  416619:	js     0x41662c
  41661b:	xchg   edi,edi
  41661d:	jmp    DWORD PTR [edi]
  41661f:	mov    al,ds:0x3ec77e48
  416624:	xchg   esp,eax
  416625:	sub    ebp,DWORD PTR [esp+edi*2]
  416628:	push   edi
  416629:	inc    edi
  41662a:	ret    0xd4e9
  41662d:	mov    cl,0x92
  41662f:	scas   al,BYTE PTR es:[edi]
  416630:	mov    ss,WORD PTR ds:0x2dda91e8
  416636:	jge    0x41661b
  416638:	mov    ds:0x72a96d61,eax
  41663d:	sbb    DWORD PTR [eax+0x118eac2e],esi
  416643:	mov    ah,0x9c
  416645:	mov    WORD PTR [edi-0x40],ds
  416648:	es mov es,WORD PTR gs:[ebp-0x1d]
  41664d:	loop   0x416648
  41664f:	aam    0x37
  416651:	lahf   
  416652:	jmp    0xe09e4fa5
  416657:	jecxz  0x416625
  416659:	(bad)  
  41665a:	dec    edx
  41665b:	clc    
  41665c:	enter  0xce7e,0xdf
  416660:	sub    eax,0xe9215a3a
  416665:	or     eax,0x41ecdce5
  41666a:	aam    0x78
  41666c:	sbb    eax,0x85b7b969
  416671:	sbb    esi,DWORD PTR ds:0x90fb5ef2
  416677:	repz pusha 
  416679:	inc    eax
  41667a:	push   esp
  41667b:	adc    DWORD PTR [ebp+0x1fda0f65],eax
  416681:	cmp    al,0xee
  416683:	sbb    al,0xf4
  416685:	int3   
  416686:	je     0x416678
  416688:	and    ch,BYTE PTR [eax]
  41668a:	fst    DWORD PTR [edx]
  41668c:	mov    ?,esi
  41668e:	xchg   BYTE PTR [esi],ah
  416690:	outs   dx,BYTE PTR ds:[esi]
  416691:	or     al,0x2d
  416693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416694:	rol    BYTE PTR [ebp-0x1755cbd1],1
  41669a:	xchg   edi,eax
  41669b:	jmp    0x3c75:0xdbb3673d
  4166a2:	jl     0x41669c
  4166a4:	xor    ebp,ebx
  4166a6:	clc    
  4166a7:	stc    
  4166a8:	jbe    0x4166e8
  4166aa:	repz mov dh,0x75
  4166ad:	jecxz  0x416715
  4166af:	mov    cl,0x66
  4166b1:	fisubr DWORD PTR [edi+ecx*1]
  4166b4:	leave  
  4166b5:	jnp    0x416652
  4166b7:	in     al,0xb4
  4166b9:	cmp    DWORD PTR [esp+ecx*8+0x42],esp
  4166bd:	cmp    BYTE PTR [esi+0x28],bl
  4166c0:	mul    BYTE PTR [ecx+edx*2+0x6a]
  4166c4:	xchg   ebp,eax
  4166c5:	retf   
  4166c6:	push   edi
  4166c7:	scas   al,BYTE PTR es:[edi]
  4166c8:	cmp    BYTE PTR [ebx-0x6ab2d513],bh
  4166ce:	enter  0x1600,0xcc
  4166d2:	imul   edx
  4166d4:	mov    ch,0x31
  4166d6:	ret    
  4166d7:	cli    
  4166d8:	(bad)  
  4166d9:	fdivr  DWORD PTR [bp+di+0x263c]
  4166de:	rol    DWORD PTR [edi+0x45],0x85
  4166e2:	push   eax
  4166e3:	stc    
  4166e4:	cmp    DWORD PTR ds:0x5f922cc4,0x78
  4166eb:	ret    0xb534
  4166ee:	add    BYTE PTR [esi],cl
  4166f0:	leave  
  4166f1:	loopne 0x41676b
  4166f3:	inc    esp
  4166f4:	call   0x29cc:0x54ed4678
  4166fb:	leave  
  4166fc:	xor    BYTE PTR [esi+0x36],al
  4166ff:	cmp    eax,0x3df75ed9
  416704:	xlat   BYTE PTR ds:[bx]
  416706:	pop    edx
  416707:	add    BYTE PTR [ecx-0x5ec2d59c],0xe7
  41670e:	mov    bh,0x4a
  416710:	mov    eax,ds:0x7abfa8f7
  416715:	aad    0xc6
  416717:	lock test DWORD PTR [edi+0x30],ebx
  41671b:	stc    
  41671c:	jae    0x4166c4
  41671e:	mov    ebx,DWORD PTR [ebx-0x1b65c518]
  416724:	je     0x41673b
  416726:	dec    edx
  416727:	je     0x4166f1
  416729:	popf   
  41672a:	sti    
  41672b:	pop    esi
  41672c:	and    DWORD PTR [ebx+0x77df4d7e],ecx
  416732:	out    0xba,eax
  416734:	das    
  416735:	xor    DWORD PTR [ecx],edx
  416737:	cmp    DWORD PTR [esi+edi*2],edi
  41673a:	add    bh,BYTE PTR [edx-0x70fd6489]
  416740:	mov    al,0xb4
  416742:	in     eax,dx
  416743:	mov    bl,BYTE PTR [ebp+ebp*1-0x445f3f3a]
  41674a:	pop    ss
  41674b:	cmp    BYTE PTR [edi-0x5881dde8],cl
  416751:	pop    ebp
  416752:	jbe    0x4167c4
  416754:	repnz mov dl,0xe9
  416757:	cli    
  416758:	xchg   esp,eax
  416759:	ret    0x80ef
  41675c:	retf   0xe5fb
  41675f:	daa    
  416760:	loop   0x4167ac
  416762:	add    al,0x59
  416764:	cld    
  416765:	dec    ebx
  416766:	stos   DWORD PTR es:[edi],eax
  416767:	sti    
  416768:	dec    esp
  416769:	nop
  41676a:	test   eax,0x63adaa05
  41676f:	pop    ds
  416770:	pop    ecx
  416771:	mov    bh,0xaa
  416773:	mov    WORD PTR [esi],?
  416775:	cmp    BYTE PTR [edi-0x80],bh
  416778:	jg     0x41674a
  41677a:	push   cs
  41677b:	out    dx,eax
  41677c:	push   eax
  41677d:	cmp    al,0x26
  41677f:	daa    
  416780:	jge    0x4167d2
  416782:	mov    al,0xf8
  416784:	arpl   di,si
  416786:	psubsw mm1,QWORD PTR [edx-0x431749f9]
  41678d:	add    al,0x45
  41678f:	dec    esp
  416790:	sub    ah,BYTE PTR [eax-0x6f05fe18]
  416796:	stos   DWORD PTR es:[edi],eax
  416797:	out    dx,eax
  416798:	out    dx,eax
  416799:	pop    ss
  41679a:	sbb    BYTE PTR ds:0xa8451a9f,bl
  4167a0:	push   ebx
  4167a1:	mov    eax,0x3991b980
  4167a6:	lea    esp,gs:[ebp-0x2ab2a64e]
  4167ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ae:	aas    
  4167af:	jno    0x4167de
  4167b1:	sbb    ch,BYTE PTR [esi+0x52]
  4167b4:	out    dx,al
  4167b5:	(bad)  
  4167b6:	lods   al,BYTE PTR ds:[esi]
  4167b7:	imul   edx,DWORD PTR [esi],0xffffffb6
  4167ba:	or     bh,0xfe
  4167bd:	push   edx
  4167be:	or     ebx,esp
  4167c0:	loop   0x416833
  4167c2:	add    DWORD PTR [edi-0x49cb769a],0xb49001b0
  4167cc:	fwait
  4167cd:	and    bh,BYTE PTR [ecx+0x51]
  4167d0:	push   cs
  4167d1:	lock dec ecx
  4167d3:	or     eax,0xc5a95be
  4167d8:	imul   esp,DWORD PTR [edx+0x3028fcb1],0x4d227d7
  4167e2:	xor    DWORD PTR [ecx+0x15383890],esi
  4167e8:	xlat   BYTE PTR ds:[ebx]
  4167e9:	cld    
  4167ea:	call   0xefcb:0x5d4731e7
  4167f1:	sub    edi,DWORD PTR [ecx+0x35b22c2]
  4167f7:	fstp   TBYTE PTR [ecx-0x4a2b13ce]
  4167fd:	fstp   DWORD PTR ss:[ecx-0x3f]
  416801:	lea    edx,[edx+0x36]
  416804:	ins    DWORD PTR es:[edi],dx
  416805:	lods   al,BYTE PTR ds:[esi]
  416806:	pop    ecx
  416807:	cmp    bh,BYTE PTR [edi-0x6dc2328b]
  41680d:	xor    DWORD PTR [esi-0x473a7bdb],edx
  416813:	mov    edx,0xdec8a4de
  416818:	dec    esi
  416819:	enter  0x5e8b,0xe
  41681d:	call   0xcb28e739
  416822:	nop
  416823:	lea    esi,[ecx+0x6fa3fd77]
  416829:	push   ss
  41682a:	out    0x49,al
  41682c:	jo     0x4167dc
  41682e:	test   al,0x4e
  416830:	out    0xc9,eax
  416832:	in     al,dx
  416833:	add    bh,BYTE PTR [edi+0x516f193e]
  416839:	mov    esi,0x37899f24
  41683e:	xor    DWORD PTR [edx+0x53327713],esi
  416844:	call   0xf327:0xe161aaa3
  41684b:	dec    edx
  41684c:	add    al,0x40
  41684e:	mov    ss,WORD PTR [edi]
  416850:	cmp    BYTE PTR [edx+eiz*2+0x640a2d],al
  416857:	sbb    cl,dl
  416859:	and    BYTE PTR [esi+0x692388be],al
  41685f:	call   0xa57bbaed
  416864:	loope  0x4168b2
  416866:	popf   
  416867:	add    eax,0x9dbd1f37
  41686c:	lods   al,BYTE PTR cs:[esi]
  41686e:	aad    0x5f
  416870:	and    DWORD PTR cs:[esi],edx
  416873:	dec    ebx
  416874:	xchg   esi,eax
  416875:	fcomip st,st(2)
  416877:	pop    esp
  416878:	pusha  
  416879:	hlt    
  41687a:	pop    ebp
  41687b:	xor    dl,BYTE PTR [esp+ebx*2]
  41687e:	sbb    al,0xd8
  416880:	pop    ss
  416881:	jmp    0x4168f4
  416883:	push   eax
  416884:	out    dx,eax
  416885:	in     al,dx
  416886:	test   eax,0x85ef9893
  41688b:	jge    0x416849
  41688d:	jbe    0x41681f
  41688f:	lods   eax,DWORD PTR ds:[esi]
  416890:	inc    ecx
  416891:	cld    
  416892:	xchg   BYTE PTR [edx],dl
  416894:	sub    ch,BYTE PTR [eax-0x5c8586b3]
  41689a:	fucomip st,st(6)
  41689c:	or     DWORD PTR [edx+eiz*8+0x12eef607],edi
  4168a3:	retf   0x79ce
  4168a6:	add    BYTE PTR fs:[ebx+0x53],bl
  4168aa:	outs   dx,BYTE PTR ds:[esi]
  4168ab:	sar    edx,cl
  4168ad:	xor    BYTE PTR [ebp-0x4c4c2c48],dl
  4168b3:	out    dx,eax
  4168b4:	jne    0x4168f2
  4168b6:	add    DWORD PTR es:[eax*2+0x57ccf738],ebp
  4168be:	xor    eax,0x9b652663
  4168c3:	loop   0x4168e8
  4168c5:	sbb    dl,BYTE PTR [edx]
  4168c7:	(bad)  
  4168c8:	sub    ah,BYTE PTR [esi-0x50]
  4168cb:	push   0x573b3e7c
  4168d0:	adc    edi,DWORD PTR [ecx+edi*4-0x58]
  4168d4:	or     esi,DWORD PTR [ebx+esi*4-0x24804448]
  4168db:	addr16 mov dh,0x9e
  4168de:	test   al,0x2e
  4168e0:	(bad)  
  4168e1:	fwait
  4168e2:	xchg   esp,eax
  4168e3:	lods   al,BYTE PTR ds:[esi]
  4168e4:	cmp    BYTE PTR [edi-0x33],bh
  4168e7:	int3   
  4168e8:	dec    ebx
  4168e9:	int3   
  4168ea:	shl    DWORD PTR es:[eax-0x279e1a9e],cl
  4168f1:	dec    eax
  4168f2:	push   esi
  4168f3:	inc    ebp
  4168f4:	shl    BYTE PTR [edi],cl
  4168f6:	ret    
  4168f7:	ret    
  4168f8:	push   edi
  4168f9:	rsqrtps xmm6,XMMWORD PTR [ecx-0x13]
  4168fd:	rcr    BYTE PTR [edx-0x22],cl
  416900:	pop    ebp
  416901:	cmp    al,0x7f
  416903:	dec    edx
  416904:	mov    ds:0x3408c9ea,eax
  416909:	scas   eax,DWORD PTR es:[edi]
  41690a:	ins    BYTE PTR es:[edi],dx
  41690b:	xchg   edx,eax
  41690c:	xchg   esp,eax
  41690d:	stos   BYTE PTR es:[edi],al
  41690e:	mov    eax,ds:0xc42cbdb7
  416913:	in     al,dx
  416914:	jmp    0x90cd3dee
  416919:	popa   
  41691a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41691b:	adc    ebp,edi
  41691d:	sub    DWORD PTR [edi-0x31c912cf],ebx
  416923:	outs   dx,DWORD PTR ds:[esi]
  416924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416925:	popa   
  416926:	dec    edx
  416927:	imul   ecx,DWORD PTR [eax],0xf3a08623
  41692d:	aaa    
  41692e:	jnp    0x41697b
  416930:	mov    ch,BYTE PTR [ebp-0x45]
  416933:	mov    al,ds:0x6ebd0066
  416938:	xor    DWORD PTR [ecx],edx
  41693a:	sahf   
  41693b:	mov    bl,0xe5
  41693d:	jl     0x4168ce
  41693f:	mov    esp,0x146c0f6c
  416944:	mov    esp,0xdeba83d2
  416949:	leave  
  41694a:	test   DWORD PTR [edi-0x727f555],0x61218032
  416954:	xchg   esi,eax
  416955:	cmp    ah,BYTE PTR [esi+0x58]
  416958:	mov    ecx,0x9e32b0aa
  41695d:	div    BYTE PTR [edi+0x64128fa7]
  416963:	imul   edi,ecx,0x2f
  416966:	and    edi,esp
  416968:	pop    ss
  416969:	push   ss
  41696a:	dec    ebx
  41696b:	jne    0x416981
  41696d:	add    al,0xba
  41696f:	popf   
  416970:	loop   0x4169dc
  416972:	mov    ebx,0xd1b096aa
  416977:	push   ebx
  416978:	in     al,0x34
  41697a:	pop    esi
  41697b:	fst    DWORD PTR [esi+0x8]
  41697e:	and    esp,DWORD PTR [edx-0x73]
  416981:	test   ebp,ebx
  416983:	adc    al,0xc1
  416985:	cwde   
  416986:	sub    al,0xac
  416988:	or     eax,0x18f5b3a4
  41698d:	jo     0x416986
  41698f:	pop    esi
  416990:	es stos DWORD PTR es:[edi],eax
  416992:	sbb    BYTE PTR [esi],cl
  416994:	and    bh,ch
  416996:	mov    esp,0xe6e25b1
  41699b:	(bad)  
  41699c:	jg     0x416a1d
  41699e:	cdq    
  41699f:	popa   
  4169a0:	std    
  4169a1:	push   esi
  4169a2:	in     eax,0x81
  4169a4:	pop    ss
  4169a5:	xlat   BYTE PTR ds:[ebx]
  4169a6:	mov    ebx,0xc275a870
  4169ab:	repnz ss push cs
  4169ae:	inc    ebx
  4169af:	shl    DWORD PTR [edx],cl
  4169b1:	fmulp  st(6),st
  4169b3:	sbb    DWORD PTR [ebx-0x3c],edx
  4169b6:	int    0x94
  4169b8:	or     edx,DWORD PTR [esi]
  4169ba:	retf   0x61e8
  4169bd:	repnz cmc 
  4169bf:	adc    edi,edi
  4169c1:	xor    DWORD PTR [edx+0x2c],ebp
  4169c4:	mov    ds:0xd1d8bb70,al
  4169c9:	mov    dh,0xca
  4169cb:	push   eax
  4169cc:	ins    DWORD PTR es:[edi],dx
  4169cd:	sbb    ah,BYTE PTR [edi]
  4169cf:	sub    eax,0xacf570a3
  4169d4:	sub    ebp,DWORD PTR fs:[edx+0x2a]
  4169d8:	lods   al,BYTE PTR ds:[esi]
  4169d9:	mov    esi,0x2f413327
  4169de:	int3   
  4169df:	aaa    
  4169e0:	sub    DWORD PTR [ebx],esi
  4169e2:	dec    esi
  4169e3:	fild   WORD PTR [ebx+ebp*8-0x28]
  4169e7:	cmp    ah,al
  4169e9:	std    
  4169ea:	cs scas al,BYTE PTR es:[edi]
  4169ec:	and    bh,bh
  4169ee:	and    dh,BYTE PTR [ebp-0x33efbbbb]
  4169f4:	pop    eax
  4169f5:	mov    ch,0xd9
  4169f7:	fcomi  st,st(0)
  4169f9:	jne    0x4169ad
  4169fb:	std    
  4169fc:	mov    dl,0x4a
  4169fe:	bound  edi,QWORD PTR [esi]
  416a00:	scas   eax,DWORD PTR es:[edi]
  416a01:	adc    bh,bl
  416a03:	(bad)  
  416a04:	neg    esi
  416a06:	sbb    bl,ah
  416a08:	pop    ebp
  416a09:	in     al,0xa0
  416a0b:	push   ss
  416a0c:	xchg   BYTE PTR [esi],cl
  416a0e:	mov    dl,0xba
  416a10:	sbb    edi,ebx
  416a12:	mov    al,ds:0x3357cc82
  416a17:	push   0x742a7500
  416a1c:	in     eax,dx
  416a1d:	push   ecx
  416a1e:	fidivr WORD PTR [edx+eax*2+0x11ecc09d]
  416a25:	xchg   edx,eax
  416a26:	inc    esi
  416a27:	inc    eax
  416a28:	inc    esp
  416a29:	xchg   bl,dh
  416a2b:	les    esp,FWORD PTR [esi-0x67]
  416a2e:	mov    ebp,0xe023d703
  416a33:	hlt    
  416a34:	xor    esp,DWORD PTR [esi]
  416a36:	and    dh,BYTE PTR [edx-0x236b7b65]
  416a3c:	dec    esi
  416a3d:	popf   
  416a3e:	into   
  416a3f:	xor    ch,BYTE PTR [ebp+0x2f]
  416a42:	xchg   DWORD PTR [ebp+edx*8-0x42],edx
  416a46:	call   0x91fe:0x1e00be4f
  416a4d:	(bad)  
  416a4f:	scas   eax,DWORD PTR es:[edi]
  416a50:	mov    dh,0x5c
  416a52:	outs   dx,DWORD PTR ds:[esi]
  416a53:	pop    esp
  416a54:	dec    eax
  416a55:	in     eax,dx
  416a56:	cmp    al,0xef
  416a58:	mov    esp,0x2716568
  416a5d:	in     al,0xf8
  416a5f:	adc    DWORD PTR [ebx],0xe0360901
  416a65:	pop    eax
  416a66:	xchg   edx,eax
  416a67:	and    BYTE PTR [ecx],ch
  416a69:	pushf  
  416a6a:	(bad)  
  416a6b:	cmp    esp,edi
  416a6d:	dec    esi
  416a6e:	mov    al,ds:0x505f6a56
  416a73:	mov    ah,0x36
  416a75:	jns    0x416a28
  416a77:	mov    al,ds:0x31157f03
  416a7c:	out    dx,eax
  416a7d:	inc    ebp
  416a7e:	dec    esp
  416a7f:	pushf  
  416a80:	addr16 bswap edi
  416a83:	fwait
  416a84:	retf   0xc15a
  416a87:	pop    ds
  416a88:	fiadd  WORD PTR [ecx+0xe]
  416a8b:	xchg   edi,eax
  416a8c:	js     0x416b06
  416a8e:	mov    bh,BYTE PTR [edi+eiz*1-0x72bf5b6a]
  416a95:	aas    
  416a96:	xchg   esi,eax
  416a97:	mov    al,0xe5
  416a99:	(bad)  
  416a9a:	and    cl,ch
  416a9c:	std    
  416a9d:	jne    0x416aff
  416a9f:	mov    WORD PTR [ebp+0x18],es
  416aa2:	jg     0x416ad8
  416aa4:	ds mov dh,0xbe
  416aa7:	jle    0x416b05
  416aa9:	sbb    edx,DWORD PTR [edi]
  416aab:	clc    
  416aac:	call   0x5213:0xa9766495
  416ab3:	int3   
  416ab4:	inc    ebx
  416ab5:	jg     0x416a89
  416ab7:	xchg   ebp,eax
  416ab8:	(bad)  
  416ab9:	sbb    ecx,eax
  416abb:	ins    DWORD PTR es:[edi],dx
  416abc:	rol    dl,0x9f
  416abf:	arpl   dx,bx
  416ac1:	cs icebp 
  416ac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac4:	xor    eax,edi
  416ac6:	sbb    al,0x16
  416ac8:	lock test eax,0x683398c3
  416ace:	xor    BYTE PTR [esi+edx*1],bl
  416ad1:	xchg   ecx,eax
  416ad2:	jge    0x416a5f
  416ad4:	add    BYTE PTR [ebx+0x7a],dl
  416ad7:	cmp    al,0x2f
  416ad9:	outs   dx,BYTE PTR ds:[esi]
  416ada:	rcl    DWORD PTR [esi-0x2739d03f],0xc0
  416ae1:	sub    eax,0x312503c4
  416ae6:	cmp    ecx,DWORD PTR [esi-0x178ff105]
  416aec:	cmc    
  416aed:	pusha  
  416aee:	sub    al,0xd
  416af0:	jb     0x416b5c
  416af2:	call   0xc602:0xa9ae4e70
  416af9:	xchg   ebx,eax
  416afa:	xchg   ebp,eax
  416afb:	mov    esp,0x873bb75
  416b00:	dec    edi
  416b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b02:	add    DWORD PTR [esi+ebp*4],esp
  416b05:	jg     0x416afb
  416b07:	jb     0x416b69
  416b09:	cmp    esi,ebp
  416b0b:	mov    ah,0xb4
  416b0d:	outs   dx,DWORD PTR ds:[esi]
  416b0e:	pop    eax
  416b0f:	push   esp
  416b10:	pop    edi
  416b11:	fiadd  DWORD PTR [ebx]
  416b13:	mov    edi,0x70f84962
  416b18:	pop    ss
  416b19:	jno    0x416b71
  416b1b:	mov    eax,0xa650765c
  416b20:	arpl   WORD PTR [edx+0x2b127f40],cx
  416b26:	xor    eax,0x201c9176
  416b2b:	sub    DWORD PTR [edi+0x13],esp
  416b2e:	add    esp,DWORD PTR [bx+di+0x116]
  416b33:	pop    esp
  416b34:	fadd   QWORD PTR [esi-0x3]
  416b37:	sbb    eax,0xc2c21b1a
  416b3c:	clc    
  416b3d:	mov    ebx,0xe6c36931
  416b42:	inc    esi
  416b43:	hlt    
  416b44:	mov    esi,0xfc696cc
  416b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b4a:	pop    ss
  416b4b:	cdq    
  416b4c:	xchg   ebx,eax
  416b4d:	pop    eax
  416b4e:	pop    edx
  416b4f:	pop    ebx
  416b50:	or     eax,0x19c4812b
  416b55:	mov    al,0x9a
  416b57:	ins    BYTE PTR es:[edi],dx
  416b58:	js     0x416b1a
  416b5a:	jmp    0x9ea3:0xbacebfee
  416b61:	cmp    DWORD PTR [eax+0x5a],0xa15b6993
  416b68:	lds    edx,FWORD PTR [esi]
  416b6a:	loopne 0x416be4
  416b6c:	xchg   DWORD PTR [edi-0x75],esi
  416b6f:	int    0x80
  416b71:	fidiv  WORD PTR [ebp+0x37]
  416b74:	int    0xdf
  416b76:	mov    ch,0xb2
  416b78:	push   edx
  416b79:	pop    eax
  416b7a:	or     BYTE PTR [ecx+0x1f517d51],ah
  416b80:	repnz mov bh,0x66
  416b83:	xchg   ecx,eax
  416b84:	or     BYTE PTR [edi],ch
  416b86:	stc    
  416b87:	into   
  416b88:	lock push ebx
  416b8a:	shl    BYTE PTR [eax-0xd],0x3a
  416b8e:	xchg   ebx,eax
  416b8f:	leave  
  416b90:	sbb    BYTE PTR [ecx-0x3d],0xf7
  416b94:	push   eax
  416b95:	cmc    
  416b96:	out    dx,eax
  416b97:	bound  ebp,QWORD PTR [eax]
  416b99:	clc    
  416b9a:	or     al,0xf3
  416b9c:	push   0x39f58d71
  416ba1:	aas    
  416ba2:	adc    BYTE PTR [edi+ecx*8],0x7e
  416ba6:	cmc    
  416ba7:	cli    
  416ba8:	repnz and BYTE PTR [ecx+eax*8+0x10],ch
  416bad:	aam    0x2c
  416baf:	push   es
  416bb0:	push   edx
  416bb1:	into   
  416bb2:	mov    cl,0x2d
  416bb4:	in     eax,dx
  416bb5:	pop    edi
  416bb6:	adc    eax,0x932757f2
  416bbb:	out    dx,al
  416bbc:	dec    eax
  416bbd:	scas   eax,DWORD PTR es:[edi]
  416bbe:	das    
  416bbf:	inc    eax
  416bc0:	out    0x3d,eax
  416bc2:	clc    
  416bc3:	sub    dh,BYTE PTR [ebp+ebp*1+0x45]
  416bc7:	xchg   ebp,eax
  416bc8:	cld    
  416bc9:	jmp    0x86df:0x6ee5b4f7
  416bd0:	dec    edx
  416bd1:	pop    ds
  416bd2:	sbb    DWORD PTR [edx],0x4f5573a6
  416bd8:	(bad)  
  416bd9:	dec    esi
  416bda:	inc    eax
  416bdb:	das    
  416bdc:	push   es
  416bdd:	mov    al,ds:0x700baafd
  416be2:	sub    ebp,DWORD PTR [ecx-0x40]
  416be5:	jp     0x416b6e
  416be7:	mul    bl
  416be9:	ss cmp al,0x10
  416bec:	iret   
  416bed:	jo     0x416be6
  416bef:	and    BYTE PTR [ecx-0x6e],cl
  416bf2:	push   eax
  416bf3:	sbb    al,0x71
  416bf5:	adc    al,0x9a
  416bf7:	(bad)  
  416bf8:	xlat   BYTE PTR ds:[ebx]
  416bf9:	ja     0x416c05
  416bfb:	fst    QWORD PTR [esi-0x25]
  416bfe:	xor    al,0xad
  416c00:	push   ebx
  416c01:	xor    dh,BYTE PTR [edi-0x54]
  416c04:	add    DWORD PTR [ebx-0x45],edx
  416c07:	repz push esi
  416c09:	jge    0x416be3
  416c0b:	(bad)  
  416c0c:	fild   DWORD PTR [eax+0x2d]
  416c0f:	popf   
  416c10:	sahf   
  416c11:	lea    ebx,[ecx]
  416c13:	dec    ebp
  416c14:	mov    edx,0x1c7e9b8f
  416c19:	shl    BYTE PTR [ebx],cl
  416c1b:	aad    0x85
  416c1d:	push   ecx
  416c1e:	dec    ebx
  416c1f:	jno    0x416c6c
  416c21:	jnp    0x416bce
  416c23:	push   ss
  416c24:	fwait
  416c25:	adc    DWORD PTR [ecx*4-0x330effa0],0xf517174e
  416c30:	and    al,0xa1
  416c32:	sub    al,0xd8
  416c34:	cmp    DWORD PTR [esi+0x1f],0xfffffff8
  416c38:	(bad)  [eax*4-0x7fbbaff9]
  416c3f:	rol    DWORD PTR [edx+esi*8],1
  416c42:	in     eax,0xf2
  416c44:	xchg   edx,eax
  416c45:	ds mov bl,bl
  416c48:	push   es
  416c49:	mov    dl,0x48
  416c4b:	mov    ax,ds:0x80749666
  416c51:	hlt    
  416c52:	xor    BYTE PTR [ecx-0x44121507],bl
  416c58:	prefetcht0 BYTE PTR [ebx-0x13]
  416c5c:	dec    esi
  416c5d:	sub    edx,ecx
  416c5f:	or     eax,0xc88d5dc2
  416c64:	jge    0x416c22
  416c66:	mov    eax,ds:0xd2a37a77
  416c6b:	loopne 0x416ca6
  416c6d:	xchg   ebp,eax
  416c6e:	dec    edx
  416c6f:	out    dx,eax
  416c70:	sub    DWORD PTR [edi-0x43],0x4de7d863
  416c77:	enter  0xd449,0x2b
  416c7b:	adc    BYTE PTR [eax-0x68],dl
  416c7e:	test   DWORD PTR [esi-0x72],edx
  416c81:	hlt    
  416c82:	cli    
  416c83:	ret    0x8321
  416c86:	jb     0x416c57
  416c88:	ins    DWORD PTR es:[edi],dx
  416c89:	jge    0x416d09
  416c8b:	in     al,dx
  416c8c:	sahf   
  416c8d:	sbb    al,0xe0
  416c8f:	pop    esp
  416c90:	xchg   edx,eax
  416c91:	imul   esi,DWORD PTR [edx+0xa],0xe0bd8a73
  416c98:	push   edi
  416c99:	xchg   edi,eax
  416c9a:	das    
  416c9b:	ret    0x9670
  416c9e:	ds dec eax
  416ca0:	popf   
  416ca1:	mov    bh,0x66
  416ca3:	xchg   DWORD PTR [edx-0x62],ebx
  416ca6:	mov    cl,0x2c
  416ca8:	inc    eax
  416ca9:	inc    edi
  416caa:	add    eax,0xf84a0d3a
  416caf:	sub    edi,eax
  416cb1:	fcomp  QWORD PTR [edx]
  416cb3:	(bad)  
  416cb4:	(bad)  
  416cb5:	xor    eax,0x1f668716
  416cba:	sub    DWORD PTR [esi-0x22],esp
  416cbd:	push   esp
  416cbe:	inc    esp
  416cbf:	call   0x34e88138
  416cc4:	mov    esp,0xf8ebaa53
  416cc9:	es (bad) 
  416ccb:	fbstp  TBYTE PTR [esi-0x6]
  416cce:	or     ah,bl
  416cd0:	popf   
  416cd1:	outs   dx,DWORD PTR ds:[esi]
  416cd2:	scas   eax,DWORD PTR es:[edi]
  416cd3:	push   0x79
  416cd5:	nop
  416cd6:	dec    esp
  416cd7:	jl     0x416c64
  416cd9:	pop    ss
  416cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cdb:	inc    ebx
  416cdc:	push   ds
  416cdd:	add    eax,0x32775fbe
  416ce2:	jne    0x416cbd
  416ce4:	stc    
  416ce5:	mov    al,0x36
  416ce7:	sahf   
  416ce8:	retf   0xe280
  416ceb:	mov    ah,cl
  416ced:	int3   
  416cee:	dec    esi
  416cef:	leave  
  416cf0:	sbb    eax,ebp
  416cf2:	add    al,0x66
  416cf4:	shl    dl,1
  416cf6:	adc    al,0x6e
  416cf8:	mov    ds:0x997f6caf,eax
  416cfd:	jno    0x416cf0
  416cff:	ret    0x3a0b
  416d02:	imul   BYTE PTR [ecx]
  416d04:	mov    ebx,0x2148f75e
  416d09:	jmp    0x71b974f
  416d0e:	sahf   
  416d0f:	dec    ecx
  416d10:	xor    DWORD PTR [ecx+0x6e],eax
  416d13:	xor    edx,esi
  416d15:	sub    DWORD PTR [esp+ebp*1],edx
  416d18:	jnp    0x416d44
  416d1a:	push   cs
  416d1b:	fdivr  QWORD PTR [ebp-0x7]
  416d1e:	xchg   ebx,ebx
  416d20:	xchg   ecx,eax
  416d21:	mov    bh,0x22
  416d23:	pusha  
  416d24:	pop    edx
  416d25:	iret   
  416d26:	and    al,0xe5
  416d28:	retf   0x38d0
  416d2b:	xor    DWORD PTR [ebx],esi
  416d2d:	xor    bl,BYTE PTR [esp+ebp*1+0x7b1c26a]
  416d34:	pop    edi
  416d35:	or     al,0x82
  416d37:	mov    ds:0x719c2236,al
  416d3c:	scas   eax,DWORD PTR es:[edi]
  416d3d:	fld    st(0)
  416d3f:	dec    esi
  416d40:	mov    cl,0x91
  416d42:	imul   esp,edx,0xffffffcc
  416d45:	pop    edx
  416d46:	pop    es
  416d47:	adc    al,0xe3
  416d49:	sahf   
  416d4a:	xchg   edx,eax
  416d4b:	cdq    
  416d4c:	fstp   TBYTE PTR [eax+0x1bfcac49]
  416d52:	(bad)  
  416d53:	(bad)  
  416d54:	neg    DWORD PTR ds:0xc8295376
  416d5a:	lahf   
  416d5b:	inc    eax
  416d5c:	enter  0xefa0,0x67
  416d60:	std    
  416d61:	inc    esi
  416d62:	or     al,BYTE PTR [edi+0x6498e803]
  416d68:	pop    edx
  416d69:	push   edx
  416d6a:	outs   dx,BYTE PTR ds:[esi]
  416d6b:	jmp    0xdf75bb67
  416d70:	cmp    DWORD PTR [edx+eiz*4-0x68],ecx
  416d74:	mov    dh,0xa6
  416d76:	add    DWORD PTR [ecx+0x261c353d],edi
  416d7c:	or     ebx,esp
  416d7e:	or     al,0x8d
  416d80:	dec    ebp
  416d81:	shl    cl,0x82
  416d84:	jne    0x416d33
  416d86:	stos   BYTE PTR es:[edi],al
  416d87:	xor    eax,0x8458da16
  416d8c:	test   BYTE PTR [edx+0x77],0xdf
  416d90:	sahf   
  416d91:	inc    esp
  416d92:	mov    WORD PTR [esp+ebx*1+0x1d033df3],ds
  416d99:	test   eax,0xbb9d421f
  416d9e:	gs or  al,0xcb
  416da1:	xchg   edi,eax
  416da2:	(bad)  
  416da3:	jne    0x416d38
  416da5:	or     ecx,ebp
  416da7:	sub    al,0x0
  416da9:	inc    edx
  416daa:	pop    esi
  416dab:	loopne 0x416d55
  416dad:	mov    ah,0x2e
  416daf:	push   ebx
  416db0:	gs xchg ebx,eax
  416db2:	add    al,0x17
  416db4:	xchg   ebx,eax
  416db5:	push   edx
  416db6:	jb     0x416dcc
  416db8:	inc    esp
  416db9:	call   0xd4eeff61
  416dbe:	loope  0x416d66
  416dc0:	shl    BYTE PTR [ebx+eiz*2],0x62
  416dc4:	xchg   ebp,eax
  416dc5:	xlat   BYTE PTR ds:[ebx]
  416dc6:	push   esp
  416dc7:	pop    ebp
  416dc8:	sub    al,bh
  416dca:	jp     0x416e41
  416dcc:	add    dl,ch
  416dce:	ds (bad) 
  416dd0:	and    DWORD PTR [ecx+0x20f3061e],esi
  416dd6:	inc    eax
  416dd7:	dec    ebp
  416dd8:	shr    edx,1
  416dda:	loope  0x416dcd
  416ddc:	out    dx,eax
  416ddd:	add    DWORD PTR [ecx],esp
  416ddf:	xchg   ecx,eax
  416de0:	mov    ch,0xd7
  416de2:	adc    BYTE PTR [ebp-0x63],0x30
  416de6:	and    eax,0x6a915266
  416deb:	ficom  WORD PTR [ecx+0x5f]
  416dee:	pop    ss
  416def:	xlat   BYTE PTR ds:[ebx]
  416df0:	and    esp,esp
  416df2:	mov    ch,BYTE PTR [edx+0x67]
  416df5:	cmp    al,0xbc
  416df7:	daa    
  416df8:	adc    esi,ecx
  416dfa:	jmp    0x416e78
  416dfc:	nop
  416dfd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dff:	jno    0x416dc8
  416e01:	lods   al,BYTE PTR ds:[esi]
  416e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e03:	sbb    DWORD PTR [esi+0x71],0xfffffff4
  416e07:	imul   eax,ecx,0xe65884fa
  416e0d:	sar    BYTE PTR [edi-0x9],cl
  416e10:	mov    ebp,DWORD PTR [ebx+ecx*1+0x69]
  416e14:	xchg   ecx,eax
  416e15:	data16 mov ah,0x9c
  416e18:	sub    BYTE PTR [eax+0x43f9e0c9],bl
  416e1e:	into   
  416e1f:	inc    edx
  416e20:	adc    BYTE PTR [edx+ecx*2+0x52ae4461],dl
  416e27:	popf   
  416e28:	pop    ebx
  416e29:	dec    edi
  416e2a:	(bad)  
  416e2b:	call   0x14b4:0x96395c4f
  416e32:	xchg   edx,eax
  416e33:	fstp   DWORD PTR [eax]
  416e35:	mov    ebp,0x1b143c68
  416e3a:	add    al,0xef
  416e3c:	pop    es
  416e3d:	xchg   edi,eax
  416e3e:	jne    0x416dc4
  416e40:	leave  
  416e41:	adc    al,bl
  416e43:	dec    esi
  416e44:	sub    DWORD PTR [ebp-0x7a],ebp
  416e47:	test   DWORD PTR [edx-0x1e],edi
  416e4a:	sbb    al,0x8b
  416e4c:	add    DWORD PTR [ecx+ecx*8+0x1f],esi
  416e50:	loop   0x416e13
  416e52:	sahf   
  416e53:	add    dh,ah
  416e55:	rol    BYTE PTR ss:[eax+ebx*4],cl
  416e59:	repnz adc eax,0x8734de0c
  416e5f:	pop    esp
  416e60:	daa    
  416e61:	cmp    BYTE PTR [ecx+eiz*1-0x3],ch
  416e65:	adc    al,0x3e
  416e67:	push   eax
  416e68:	out    dx,al
  416e69:	xor    eax,0x4f9e5cfa
  416e6e:	adc    eax,0xf16c79d8
  416e73:	push   0xffffff95
  416e75:	sub    cl,BYTE PTR [eax-0x3a70c8c4]
  416e7b:	xchg   ch,ch
  416e7d:	sahf   
  416e7e:	jecxz  0x416ef8
  416e80:	in     eax,0xdd
  416e82:	push   ebp
  416e83:	sub    BYTE PTR [esp+edi*8+0x726b2c79],0xa9
  416e8b:	adc    al,0xa1
  416e8d:	sub    bl,cl
  416e8f:	mov    cl,0xa0
  416e91:	adc    DWORD PTR [ebx+esi*8-0x45d87d8e],0x1b
  416e99:	in     al,0xbd
  416e9b:	mov    ah,0xfb
  416e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e9f:	dec    esi
  416ea0:	fisttp DWORD PTR [ebp-0x59]
  416ea3:	fcom   DWORD PTR [ebx+0x1acaef58]
  416ea9:	xchg   DWORD PTR [ecx+ecx*8-0x6bd60fa2],ecx
  416eb0:	popf   
  416eb1:	inc    ebp
  416eb2:	mov    WORD PTR [eax],ss
  416eb4:	out    0xc2,eax
  416eb6:	std    
  416eb7:	add    BYTE PTR [eax+esi*8+0x2c],cl
  416ebb:	dec    edx
  416ebc:	fs out 0x3e,eax
  416ebf:	shl    DWORD PTR [ecx-0x29508b0f],1
  416ec5:	(bad)  
  416ec6:	adc    eax,ecx
  416ec8:	jge    0x416ef6
  416eca:	push   esi
  416ecb:	js     0x416eb0
  416ecd:	jmp    0x63e8:0x445de807
  416ed4:	jmp    0x13a4697
  416ed9:	aam    0x30
  416edb:	push   esi
  416edc:	push   ebx
  416edd:	xchg   ebp,eax
  416ede:	sbb    edi,DWORD PTR [edi-0x1b]
  416ee1:	inc    esi
  416ee2:	out    dx,al
  416ee3:	jne    0x416efb
  416ee5:	inc    esp
  416ee6:	cmp    cl,BYTE PTR [edi]
  416ee8:	or     edi,edx
  416eea:	dec    eax
  416eeb:	leave  
  416eec:	out    dx,al
  416eed:	adc    al,0xb1
  416eef:	repnz xor BYTE PTR [eax],bh
  416ef2:	mov    cl,0x72
  416ef4:	push   esp
  416ef5:	aas    
  416ef6:	jge    0x416ef8
  416ef8:	test   DWORD PTR [ebx+0x2905a98e],edi
  416efe:	or     ebp,DWORD PTR [esi*8-0x44418bca]
  416f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f06:	in     eax,0xa8
  416f08:	cwde   
  416f09:	push   edi
  416f0a:	adc    al,0x2f
  416f0c:	xchg   ecx,eax
  416f0d:	cwde   
  416f0e:	outs   dx,BYTE PTR ds:[esi]
  416f0f:	scas   al,BYTE PTR es:[edi]
  416f10:	jp     0x416f8d
  416f12:	mov    edx,0x23700a0
  416f17:	loop   0x416f92
  416f19:	sbb    dh,dh
  416f1b:	cmp    BYTE PTR [edx+0x4f9f3d05],ch
  416f21:	adc    eax,0x56510bb4
  416f26:	or     DWORD PTR ss:[edx],ecx
  416f29:	daa    
  416f2a:	xor    dl,ch
  416f2c:	mov    ebp,0xd3889873
  416f31:	lds    edi,FWORD PTR [edx-0x70]
  416f34:	lods   eax,DWORD PTR ds:[esi]
  416f35:	stc    
  416f36:	les    edi,FWORD PTR [ecx]
  416f38:	fwait
  416f39:	inc    esp
  416f3a:	fild   QWORD PTR [esi+0x1f]
  416f3d:	nop
  416f3e:	or     BYTE PTR [edx-0x80],cl
  416f41:	fmul   QWORD PTR [esi+0x6d]
  416f44:	sub    DWORD PTR ds:0x783b906e,ebp
  416f4a:	or     ah,bh
  416f4c:	icebp  
  416f4d:	stos   DWORD PTR es:[edi],eax
  416f4e:	jmp    0x6024aa7e
  416f53:	jmp    0x7d32265d
  416f58:	sub    BYTE PTR [edi+esi*2-0x3a],bh
  416f5c:	mov    edx,0x7bac6497
  416f61:	mov    dl,0xeb
  416f63:	sahf   
  416f64:	mov    ecx,0x9750a7c0
  416f69:	test   al,0x23
  416f6b:	dec    ebp
  416f6c:	lods   eax,DWORD PTR ds:[esi]
  416f6d:	fidivr DWORD PTR [ebp+esi*1-0x5c2382a9]
  416f74:	jmp    0xc362:0x7d4a4ef3
  416f7b:	setl   bl
  416f7e:	pop    ss
  416f7f:	or     al,0x48
  416f81:	cmp    al,0x72
  416f83:	or     eax,0x5bf771bf
  416f88:	into   
  416f89:	xchg   esi,eax
  416f8a:	mov    eax,0xb5bfdfb6
  416f8f:	pop    edi
  416f90:	push   eax
  416f91:	and    eax,0x4bb203db
  416f96:	mov    BYTE PTR [esi],bl
  416f98:	lahf   
  416f99:	mov    dl,0xd3
  416f9b:	data16 out 0x21,al
  416f9e:	xchg   ebx,eax
  416f9f:	pop    edi
  416fa0:	mov    bh,0x49
  416fa2:	xchg   esp,eax
  416fa3:	fadd   DWORD PTR [eax]
  416fa5:	fimul  DWORD PTR [esi]
  416fa7:	mov    ds:0x9324ad8b,eax
  416fac:	inc    ecx
  416fad:	test   al,0xd4
  416faf:	sahf   
  416fb0:	callw  0x787d
  416fb4:	call   0xc2bc:0x3de0cd6b
  416fbb:	lods   eax,DWORD PTR ds:[esi]
  416fbc:	jecxz  0x416f80
  416fbe:	pop    ecx
  416fbf:	jle    0x416fb8
  416fc1:	dec    edi
  416fc2:	(bad)  
  416fc4:	out    dx,eax
  416fc5:	cs cmc 
  416fc7:	add    eax,0xab6e17e3
  416fcc:	mov    edi,0x9aca00e0
  416fd1:	out    dx,al
  416fd2:	pop    ebx
  416fd3:	int3   
  416fd4:	cmp    DWORD PTR [eax+0x67],edx
  416fd7:	push   0x3f5c15cf
  416fdc:	dec    ebx
  416fdd:	test   DWORD PTR [edi-0x758471e4],edi
  416fe3:	fist   WORD PTR [edx+0x56bdd4d1]
  416fe9:	test   eax,0x5a3683b8
  416fee:	pop    ebp
  416fef:	pop    ebx
  416ff0:	test   DWORD PTR [esi-0x57],ebp
  416ff3:	pop    eax
  416ff4:	jno    0x416f86
  416ff6:	stos   BYTE PTR es:[edi],al
  416ff7:	mov    eax,ds:0x9c221191
  416ffc:	int3   
  416ffd:	xchg   ecx,eax
  416ffe:	inc    esi
  416fff:	int    0x47
  417001:	retf   
  417002:	xchg   DWORD PTR [esi],esp
  417004:	jecxz  0x416fab
  417006:	std    
  417007:	imul   esp,DWORD PTR ds:0x47f3fb15,0xffffff82
  41700e:	adc    bh,BYTE PTR [edi]
  417010:	mov    ds:0xd3f25342,al
  417015:	fucomip st,st(7)
  417017:	push   edi
  417018:	gs or  eax,0x11ff04d1
  41701e:	iret   
  41701f:	jmp    0x417095
  417021:	xchg   edi,eax
  417022:	and    DWORD PTR [ecx+0x77385cca],esi
  417028:	adc    DWORD PTR [ecx+0x7d],eax
  41702b:	data16 aas 
  41702d:	imul   ch
  41702f:	xchg   esi,eax
  417030:	xchg   ebp,eax
  417031:	xor    dl,BYTE PTR [edx+0x24]
  417034:	jg     0x416fe5
  417036:	mov    ebp,0x6a06df93
  41703b:	leave  
  41703c:	aad    0x32
  41703e:	pop    eax
  41703f:	popa   
  417040:	mov    bl,0x1f
  417042:	das    
  417043:	cmp    BYTE PTR [ebx],ch
  417045:	sbb    BYTE PTR [ecx+0x37],ch
  417048:	call   0x4ff9:0xebd5f1d3
  41704f:	or     BYTE PTR [edi],bh
  417051:	push   ecx
  417052:	push   eax
  417053:	inc    ebp
  417054:	mov    esp,0x73c78a5b
  417059:	xchg   edi,eax
  41705b:	ins    BYTE PTR es:[edi],dx
  41705c:	je     0x417049
  41705e:	xlat   BYTE PTR ds:[ebx]
  41705f:	and    DWORD PTR [edx-0x16],esp
  417062:	call   0x46d70254
  417067:	fdivr  QWORD PTR cs:[edi+0x7b]
  41706b:	add    esp,DWORD PTR [ebp+ebp*2+0x6bda9b03]
  417072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417073:	call   0x5b5ff44
  417078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417079:	push   edi
  41707a:	adc    al,BYTE PTR [ecx]
  41707c:	mov    ebx,0xd1f7a270
  417081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417082:	lock int3 
  417084:	(bad)  
  417085:	or     BYTE PTR [esi+esi*1-0x3b],bl
  417089:	daa    
  41708a:	xchg   esi,eax
  41708b:	pop    ss
  41708c:	inc    ecx
  41708d:	mov    al,0x64
  417090:	xor    al,0x58
  417092:	ret    
  417093:	add    al,0x67
  417095:	cs jo  0x4170a8
  417098:	sbb    esi,DWORD PTR [edi+0x4c]
  41709b:	out    0x17,al
  41709d:	push   ss
  41709e:	dec    edx
  41709f:	adc    eax,0x1604040
  4170a4:	and    BYTE PTR [edx-0x7e],0xff
  4170a8:	mov    dl,BYTE PTR [ebx-0x129d1742]
  4170ae:	sbb    al,0x87
  4170b0:	icebp  
  4170b1:	mov    bh,0xa6
  4170b3:	sub    edi,DWORD PTR [ebp+0x3f88fad4]
  4170b9:	fistp  QWORD PTR [ebx-0xf]
  4170bc:	lods   eax,DWORD PTR ds:[esi]
  4170bd:	retf   
  4170be:	ins    DWORD PTR es:[edi],dx
  4170bf:	stos   BYTE PTR es:[edi],al
  4170c0:	mov    eax,0x4b0d6536
  4170c5:	enter  0xa324,0xd9
  4170c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ca:	scas   eax,DWORD PTR es:[edi]
  4170cb:	add    eax,0x537a5db9
  4170d0:	jnp    0x4170fe
  4170d2:	sub    al,0xb2
  4170d4:	inc    edx
  4170d5:	inc    esi
  4170d6:	xor    eax,0x5b987931
  4170db:	out    0x7b,al
  4170dd:	clc    
  4170de:	jle    0x417150
  4170e0:	mov    eax,ds:0x924d4433
  4170e5:	adc    al,0x6b
  4170e7:	jle    0x417164
  4170e9:	add    BYTE PTR [esi],al
  4170eb:	js     0x41715e
  4170ed:	fsubr  QWORD PTR [eax]
  4170ef:	gs and dh,BYTE PTR cs:0x9a9368da
  4170f7:	scas   al,BYTE PTR es:[edi]
  4170f8:	(bad)  
  4170f9:	xchg   edx,eax
  4170fa:	xchg   BYTE PTR [esp+eiz*4+0x36],dl
  4170fe:	aam    0x12
  417100:	imul   edi,DWORD PTR [ebx],0xf7a4c840
  417106:	inc    esp
  417107:	nop
  417108:	mov    eax,ds:0x524aba49
  41710d:	push   edx
  41710e:	imul   DWORD PTR [edi+ebx*1+0x18]
  417112:	int    0x1b
  417114:	out    dx,al
  417115:	call   0x8ca6:0x811944bc
  41711c:	mov    dh,0x5d
  41711e:	mov    bh,BYTE PTR [edx]
  417120:	fstp   QWORD PTR [esp+ecx*8]
  417123:	pop    ebx
  417124:	retf   0xa7fe
  417127:	push   edx
  417128:	xchg   esp,eax
  417129:	fdiv   DWORD PTR [esi-0x4f]
  41712c:	mov    esp,0xba89f447
  417131:	(bad)  
  417132:	and    al,0x67
  417134:	xlat   BYTE PTR ds:[ebx]
  417135:	retf   
  417136:	add    BYTE PTR [ecx-0x6497d129],0xf
  41713d:	ins    BYTE PTR es:[edi],dx
  41713e:	mov    ebp,0xced995a9
  417143:	in     eax,0x7e
  417145:	sti    
  417146:	(bad)  
  417148:	cld    
  417149:	xchg   esp,eax
  41714a:	xor    BYTE PTR [ebx-0x1a357111],0x9e
  417151:	sbb    BYTE PTR [esi+esi*1-0x52],bl
  417155:	ffreep st(7)
  417157:	push   ebx
  417158:	mov    WORD PTR [eax+eiz*2],?
  41715b:	mov    ah,0xd8
  41715d:	push   ds
  41715e:	fsub   DWORD PTR [esi+ebp*2-0xc]
  417162:	mov    eax,ds:0x70bcffd8
  417167:	mul    BYTE PTR [edx]
  417169:	dec    esi
  41716a:	pusha  
  41716b:	es iret 
  41716d:	outs   dx,BYTE PTR ds:[esi]
  41716e:	dec    esi
  41716f:	shl    ah,0x82
  417172:	jecxz  0x41717f
  417174:	xor    BYTE PTR [ebx],ah
  417176:	jno    0x4171c3
  417178:	cmp    eax,0x27a98998
  41717d:	ja     0x4171dc
  41717f:	sub    ebx,esi
  417181:	hlt    
  417182:	(bad)  
  417183:	sbb    BYTE PTR [edi-0x2575dc4a],ah
  417189:	mov    ecx,0xaecd67a7
  41718e:	push   edi
  41718f:	mov    edx,0x38362a3d
  417194:	fisttp QWORD PTR [eax]
  417196:	arpl   WORD PTR [eax-0x4420a7cf],ax
  41719c:	mov    bh,0xfb
  41719e:	adc    eax,0x43eac9b2
  4171a3:	xchg   DWORD PTR [ebx-0x73],ebp
  4171a6:	iret   
  4171a7:	fmul   QWORD PTR [bx+di-0x6e]
  4171ab:	and    WORD PTR [edx],si
  4171ae:	out    dx,al
  4171af:	je     0x417193
  4171b1:	dec    ebx
  4171b2:	sahf   
  4171b3:	and    BYTE PTR [ebp-0x2f],bh
  4171b6:	out    dx,al
  4171b7:	in     eax,dx
  4171b8:	imul   ebx,DWORD PTR [ecx],0x47
  4171bb:	loop   0x4171c1
  4171bd:	and    al,0xd5
  4171bf:	lock pusha 
  4171c1:	cmc    
  4171c2:	or     bl,al
  4171c4:	sub    bl,bl
  4171c6:	inc    edi
  4171c7:	repnz int3 
  4171c9:	std    
  4171ca:	cmp    al,0x47
  4171cc:	hlt    
  4171cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171ce:	sbb    eax,0x5af211a
  4171d3:	push   ds
  4171d4:	rol    edx,1
  4171d6:	xchg   DWORD PTR [edi+edi*8+0x57],ecx
  4171da:	or     esp,ebx
  4171dc:	nop
  4171dd:	cwde   
  4171de:	jbe    0x4171a4
  4171e0:	out    0x97,al
  4171e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171e3:	jmp    0x57ef9c57
  4171e8:	(bad)  
  4171e9:	jge    0x41725e
  4171eb:	cld    
  4171ec:	jmp    0xdd96:0x2530758
  4171f3:	jnp    0x417266
  4171f5:	je     0x41720a
  4171f7:	adc    al,BYTE PTR [edi]
  4171f9:	repnz add eax,DWORD PTR [edi+0x225110d0]
  417200:	inc    esp
  417201:	in     al,dx
  417202:	dec    esp
  417203:	cld    
  417204:	jmp    0x21245f5b
  417209:	or     al,0xca
  41720b:	dec    ecx
  41720c:	xchg   DWORD PTR [esi-0x703523aa],ebx
  417212:	push   ecx
  417213:	stos   DWORD PTR es:[edi],eax
  417214:	leave  
  417215:	ret    
  417216:	or     DWORD PTR [ebx],esi
  417218:	or     bh,BYTE PTR [esi-0x55]
  41721b:	and    eax,0x3159f37f
  417220:	sub    DWORD PTR [eax+edx*8-0x46],0xffffffd6
  417225:	jne    0x41723f
  417227:	mov    al,0x54
  417229:	xor    bl,BYTE PTR [ecx+0x17057e2f]
  41722f:	enter  0x9cc1,0x84
  417233:	jge    0x417258
  417235:	rol    BYTE PTR [ebx+0x28],1
  417238:	mov    esp,0x100586a2
  41723d:	mov    DWORD PTR [ebx],0xbdc295ed
  417243:	(bad)  
  417244:	test   BYTE PTR [edx+0x56],dl
  417247:	pop    edx
  417248:	cs sahf 
  41724a:	push   edi
  41724b:	xor    edx,edi
  41724d:	out    0xd4,al
  41724f:	jns    0x4172c0
  417251:	pusha  
  417252:	and    esi,ecx
  417254:	add    BYTE PTR [eax+0x437209e7],dh
  41725a:	stos   BYTE PTR es:[edi],al
  41725b:	fwait
  41725c:	into   
  41725d:	and    DWORD PTR [ebx-0x22],ebx
  417260:	pop    ss
  417261:	leave  
  417262:	(bad)  
  417264:	ins    BYTE PTR es:[edi],dx
  417265:	xchg   edi,eax
  417266:	inc    eax
  417267:	and    ch,bh
  417269:	shr    DWORD PTR [ebx+0x2d],0xe6
  41726d:	les    ecx,FWORD PTR [esi+0x55689ebb]
  417273:	jb     0x417264
  417275:	xchg   esp,eax
  417276:	popa   
  417277:	loop   0x4172dd
  417279:	ret    0x8d72
  41727c:	pop    ss
  41727d:	sahf   
  41727e:	sti    
  41727f:	and    edx,DWORD PTR [ecx-0x4]
  417282:	outs   dx,BYTE PTR ds:[esi]
  417283:	sbb    eax,DWORD PTR [edi-0x2ebe3a1c]
  417289:	rol    BYTE PTR [eax+0x41a66fdb],0xcf
  417290:	add    eax,0xa4b448eb
  417295:	xchg   edi,eax
  417296:	dec    ebx
  417297:	xor    BYTE PTR [ecx-0x251c7141],dh
  41729d:	std    
  41729e:	pop    ebx
  41729f:	jle    0x417267
  4172a1:	lods   al,BYTE PTR ds:[esi]
  4172a2:	stos   BYTE PTR es:[edi],al
  4172a3:	xor    DWORD PTR [ebx-0x73afdfa7],edx
  4172a9:	pop    esi
  4172aa:	adc    eax,0xc63a5126
  4172af:	lods   al,BYTE PTR ds:[esi]
  4172b0:	pop    ss
  4172b1:	neg    DWORD PTR [edi+0x4c90dc08]
  4172b7:	loopne 0x417324
  4172b9:	inc    ebp
  4172ba:	arpl   WORD PTR [ebx+0x1e749c22],bx
  4172c0:	test   eax,0xaf0b1c43
  4172c5:	retf   0xac6f
  4172c8:	in     eax,dx
  4172c9:	pop    ebx
  4172ca:	pop    ebx
  4172cb:	cld    
  4172cc:	pop    ecx
  4172cd:	loop   0x41727f
  4172cf:	pop    es
  4172d0:	jg     0x417341
  4172d2:	xor    al,0x51
  4172d4:	inc    DWORD PTR ss:[ebx-0x7a3effe7]
  4172db:	shl    ah,1
  4172dd:	sbb    DWORD PTR [eax+0x7b65fc19],eax
  4172e3:	sbb    eax,0x443ddb78
  4172e8:	adc    edx,esi
  4172ea:	jp     0x4172eb
  4172ec:	add    BYTE PTR ds:[ecx-0x30d03ee3],0x94
  4172f4:	mov    ds:0x8d0c465a,al
  4172f9:	mov    ds:0x174301d7,eax
  4172fe:	mov    edi,0x784068f3
  417303:	icebp  
  417304:	mov    WORD PTR [esi+0x2593c98c],?
  41730a:	rcr    DWORD PTR [edx-0x62],1
  41730d:	les    esp,FWORD PTR [ecx-0x229b76c0]
  417313:	cmp    BYTE PTR [esi-0x64945e6c],ah
  417319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41731a:	shl    DWORD PTR [edx],cl
  41731c:	add    ebp,DWORD PTR gs:[ebx]
  41731f:	retf   0x2af5
  417322:	pop    ebp
  417323:	ins    DWORD PTR es:[edi],dx
  417324:	retf   
  417325:	and    dh,al
  417327:	das    
  417328:	ds pop ss
  41732a:	jns    0x417322
  41732c:	push   es
  41732d:	in     al,0x82
  41732f:	outs   dx,DWORD PTR ds:[esi]
  417330:	ret    0x8d6
  417333:	mov    dl,0xf
  417335:	and    DWORD PTR [eax-0x53],ebx
  417338:	and    cl,BYTE PTR [edi+ebp*1+0x2c]
  41733c:	sub    BYTE PTR [esp+esi*4],bh
  41733f:	push   ebx
  417340:	fimul  WORD PTR [ecx-0x4e]
  417343:	das    
  417344:	mov    WORD PTR [esi+edx*8-0x41],ds
  417348:	fmul   DWORD PTR [ebx+ebp*2]
  41734b:	into   
  41734c:	sbb    cl,BYTE PTR [ebx]
  41734e:	push   ebp
  41734f:	ret    0x4a60
  417352:	xor    eax,0xb6101a5b
  417357:	cs add al,bl
  41735a:	xchg   ebp,eax
  41735b:	aam    0x50
  41735d:	ja     0x417326
  41735f:	leave  
  417360:	cli    
  417361:	push   esi
  417362:	loope  0x417306
  417364:	push   edi
  417365:	mov    dh,0x8a
  417367:	out    0xdc,eax
  417369:	lds    edi,FWORD PTR [edx-0x4c]
  41736c:	cmp    bh,BYTE PTR [edi+0x3a]
  41736f:	dec    edx
  417370:	push   0xcdeb0445
  417375:	xor    eax,0x4fa2fd91
  41737a:	push   ebp
  41737b:	rcr    DWORD PTR [ebx+0x4a],cl
  41737e:	push   0x6e628619
  417383:	push   ebx
  417384:	into   
  417385:	or     BYTE PTR [edi+0x2cd5e55a],0x93
  41738c:	push   ds
  41738d:	aad    0x2f
  41738f:	adc    ebx,DWORD PTR [ebx-0x72517bae]
  417395:	scas   al,BYTE PTR es:[edi]
  417396:	xchg   esi,eax
  417397:	daa    
  417398:	sbb    al,0x4
  41739a:	pop    ebp
  41739b:	push   ecx
  41739c:	leave  
  41739d:	xchg   ebp,eax
  41739e:	ret    0x956c
  4173a1:	cmp    al,0x13
  4173a3:	fdiv   QWORD PTR [eax]
  4173a5:	jmp    0x41734a
  4173a7:	pop    ds
  4173a8:	pop    ds
  4173a9:	cmp    eax,0xf39285b6
  4173ae:	lods   al,BYTE PTR ds:[esi]
  4173af:	retf   0xceea
  4173b2:	pop    eax
  4173b3:	dec    BYTE PTR [edi+0x25]
  4173b6:	jg     0x4173dc
  4173b8:	push   ebp
  4173b9:	or     eax,0x75f61e3b
  4173be:	mov    bh,0x24
  4173c0:	sbb    dh,dl
  4173c2:	aad    0x59
  4173c4:	mov    ebp,0xe3689a44
  4173c9:	push   ss
  4173ca:	xor    DWORD PTR [ebx],edi
  4173cc:	and    ebp,ebx
  4173ce:	dec    eax
  4173cf:	push   ss
  4173d0:	retf   0x4802
  4173d3:	or     eax,0xc8ee424a
  4173d8:	sar    ecx,cl
  4173da:	and    eax,0xeabfc98b
  4173df:	jle    0x417424
  4173e1:	pop    esi
  4173e2:	iret   
  4173e3:	xchg   edx,eax
  4173e4:	cmp    esi,DWORD PTR [edi+0x59]
  4173e7:	fadd   DWORD PTR [ebp+0x43]
  4173ea:	push   cs
  4173eb:	or     al,0x68
  4173ed:	repz cmp DWORD PTR [esi-0x1c],esi
  4173f1:	aas    
  4173f2:	mov    ah,0x48
  4173f4:	xor    DWORD PTR [edx],ebp
  4173f6:	leave  
  4173f7:	dec    ecx
  4173f8:	pop    eax
  4173f9:	push   edx
  4173fa:	mov    ah,0xd7
  4173fc:	out    dx,al
  4173fd:	dec    esi
  4173fe:	jmp    0xf81a52f
  417403:	fcmovnb st,st(3)
  417405:	std    
  417406:	outs   dx,BYTE PTR ds:[esi]
  417407:	mov    al,0x22
  417409:	push   ebx
  41740a:	xchg   edi,eax
  41740b:	stc    
  41740c:	retf   0x75aa
  41740f:	das    
  417410:	dec    esi
  417411:	inc    esi
  417412:	push   esi
  417413:	mov    eax,0x71a92e28
  417418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417419:	cmp    DWORD PTR [esp+eax*8+0x6c01cfa9],0x81e4a62f
  417424:	inc    eax
  417425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417426:	xor    BYTE PTR [ebx],ah
  417428:	xchg   ebp,eax
  417429:	pop    ebx
  41742a:	cmp    ah,BYTE PTR [eax-0x3]
  41742d:	xor    BYTE PTR [ebx-0x75],cl
  417430:	adc    DWORD PTR [esi+eiz*1],esi
  417433:	dec    ebx
  417434:	mov    ds:0x14370c75,al
  417439:	sub    DWORD PTR [eax-0x6b219820],ecx
  41743f:	ds inc edx
  417441:	outs   dx,DWORD PTR ds:[esi]
  417442:	sub    BYTE PTR [edx],bl
  417444:	cmp    ah,ch
  417446:	loopne 0x417490
  417448:	mov    BYTE PTR [edi+ebp*4+0xe4d4709],ah
  41744f:	pop    es
  417450:	fwait
  417451:	jmp    0xcee2d4ec
  417456:	adc    ebp,DWORD PTR [eax+0x78ca2f32]
  41745c:	clc    
  41745d:	call   0x2c:0xa33ed719
  417464:	push   0xc6cf3482
  417469:	cwde   
  41746a:	adc    DWORD PTR [edi-0x73],esi
  41746d:	fldcw  WORD PTR [edi+0x2e]
  417470:	mov    ch,0xb8
  417472:	fst    st(4)
  417474:	aad    0x82
  417476:	popf   
  417477:	add    DWORD PTR [ecx],0xb7dca96e
  41747d:	xor    al,0x80
  41747f:	inc    ecx
  417480:	or     DWORD PTR [edi-0x664e3b06],eax
  417486:	add    BYTE PTR [edi+0x7b],bh
  417489:	fadd   DWORD PTR [esi]
  41748b:	lods   al,BYTE PTR ds:[esi]
  41748c:	imul   ebp,ebp,0x904e5854
  417492:	mov    esi,0x8eb42cc4
  417497:	push   esp
  417498:	inc    edi
  417499:	push   0x3b
  41749b:	sbb    eax,0xd1283ae5
  4174a0:	and    BYTE PTR [edi+ecx*2+0x2919decb],cl
  4174a7:	(bad)
  4174ab:	pop    ebx
  4174ac:	cmp    BYTE PTR ds:0xd3dd446,ah
  4174b2:	in     al,dx
  4174b3:	dec    edx
  4174b4:	mov    dl,cl
  4174b6:	or     DWORD PTR [eax-0x3d482d98],eax
  4174bc:	loop   0x4174b7
  4174be:	pop    ecx
  4174bf:	outs   dx,DWORD PTR ds:[esi]
  4174c0:	loope  0x4174c6
  4174c2:	mov    eax,ds:0xed5d0719
  4174c7:	enter  0x4bab,0x15
  4174cb:	pop    edx
  4174cc:	retf   
  4174cd:	ins    DWORD PTR es:[edi],dx
  4174ce:	dec    edi
  4174cf:	sbb    al,0x55
  4174d1:	in     eax,0x30
  4174d3:	push   0x7a
  4174d5:	mov    dh,0x96
  4174d7:	xchg   edi,eax
  4174d8:	add    bl,ah
  4174da:	adc    eax,0x19610f74
  4174df:	push   0xd
  4174e1:	ins    BYTE PTR es:[edi],dx
  4174e2:	aam    0x82
  4174e4:	fwait
  4174e5:	sbb    al,0x86
  4174e7:	sub    ebp,edi
  4174e9:	and    bh,0x38
  4174ec:	loopne 0x4174b4
  4174ee:	pop    edx
  4174ef:	(bad)  
  4174f1:	pop    ss
  4174f2:	or     bh,BYTE PTR [edx+0x37]
  4174f5:	mov    esp,ebp
  4174f7:	fidiv  WORD PTR [ebx]
  4174f9:	mov    esi,0x148e46b3
  4174fe:	fdivr  DWORD PTR ds:0xed925f8e
  417504:	inc    esp
  417505:	mov    ecx,0x82c16248
  41750a:	or     bl,BYTE PTR [esi-0x15]
  41750d:	mov    ah,0x9b
  41750f:	stos   DWORD PTR es:[di],eax
  417511:	push   ds
  417512:	adc    DWORD PTR [edi+edi*8+0x6b],0xffffffde
  417517:	cld    
  417518:	out    dx,al
  417519:	loop   0x4174e1
  41751b:	mov    edx,0xb2d0ea8b
  417520:	jecxz  0x4174e1
  417522:	nop
  417523:	(bad)  [ebx-0x55784657]
  417529:	xchg   BYTE PTR [esp+esi*8-0xe2bcd20],bh
  417530:	mov    esp,0x3f9ed5b9
  417535:	int3   
  417536:	out    0x7f,al
  417538:	inc    edx
  417539:	cmp    dl,BYTE PTR [edi+0x64]
  41753c:	enter  0x9a1b,0x5b
  417540:	push   ebp
  417541:	push   eax
  417542:	push   edx
  417543:	adc    eax,DWORD PTR [edx]
  417545:	out    0xe7,eax
  417547:	adc    BYTE PTR [ecx],0x3f
  41754a:	cmp    DWORD PTR [ebx+0x69b0b293],ebx
  417550:	fld    QWORD PTR [edi]
  417552:	(bad)  
  417554:	mov    ah,0x7
  417556:	sub    eax,0x929dbd3b
  41755b:	xchg   ebx,eax
  41755c:	and    eax,0xe2c49f8b
  417561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417562:	xchg   ecx,eax
  417563:	push   esp
  417564:	loop   0x41750a
  417566:	out    dx,eax
  417567:	push   eax
  417568:	mov    edx,0x8505f687
  41756d:	mov    cl,0x6b
  41756f:	add    BYTE PTR [edx+0x3adf6fc],dh
  417575:	sti    
  417576:	mov    bh,0x49
  417578:	adc    al,0xce
  41757a:	rcr    BYTE PTR [ebp+0x29fce4f2],0x5f
  417581:	jno    0x417582
  417583:	std    
  417584:	in     al,0xd2
  417586:	daa    
  417587:	inc    eax
  417588:	popf   
  417589:	scas   eax,DWORD PTR es:[edi]
  41758a:	imul   ebp,DWORD PTR [esi-0x7305bc20],0x7b
  417591:	stc    
  417592:	adc    BYTE PTR [eax+ebx*1-0x3cd4d3fd],0xfa
  41759a:	lahf   
  41759b:	mov    al,ds:0x1d8e7af1
  4175a0:	jg     0x417615
  4175a2:	push   ebx
  4175a3:	mov    gs,WORD PTR [ebp-0x6355ff52]
  4175a9:	jge    0x4175a7
  4175ab:	imul   DWORD PTR [edx+0xf]
  4175ae:	fwait
  4175af:	scas   al,BYTE PTR es:[edi]
  4175b0:	mov    esp,DWORD PTR [ecx+edx*2-0x7df2bea3]
  4175b7:	leave  
  4175b8:	faddp  st(3),st
  4175ba:	cmp    al,0x1c
  4175bc:	retf   
  4175bd:	jl     0x4175f3
  4175bf:	xor    ch,al
  4175c1:	(bad)  
  4175c2:	cwde   
  4175c3:	test   eax,0xb25f1c9c
  4175c8:	push   es
  4175c9:	push   eax
  4175ca:	inc    ebx
  4175cb:	popa   
  4175cc:	adc    al,0x5e
  4175ce:	ss loope 0x41760f
  4175d1:	sbb    DWORD PTR [eax+0x46],eax
  4175d4:	sub    ecx,DWORD PTR [eax+0x6d]
  4175d7:	dec    edx
  4175d8:	mov    esi,edi
  4175da:	cs inc esp
  4175dc:	xchg   esp,eax
  4175dd:	ss xchg ecx,eax
  4175df:	mov    esi,0x6aa239d3
  4175e4:	push   cs
  4175e5:	dec    eax
  4175e6:	dec    esi
  4175e7:	adc    al,0x9e
  4175e9:	(bad)  [ecx]
  4175eb:	hlt    
  4175ec:	es int3 
  4175ee:	mov    esi,0x9d61d6f7
  4175f3:	loope  0x417670
  4175f5:	(bad)  [edx+ebx*8]
  4175f8:	fild   QWORD PTR [esi-0x21]
  4175fb:	lea    edi,[edi+0x67]
  4175fe:	addr16 jns 0x41760b
  417601:	sbb    dl,BYTE PTR [esi]
  417603:	in     al,0x4d
  417605:	jo     0x4175a5
  417607:	ds (bad) 
  417609:	rcr    BYTE PTR [edx],1
  41760b:	imul   esi,DWORD PTR [edx+ebp*4+0x5],0xffffffe8
  417610:	in     eax,dx
  417611:	scas   eax,DWORD PTR es:[edi]
  417612:	sbb    dh,cl
  417614:	or     eax,0x8f171f28
  417619:	lods   al,BYTE PTR ds:[esi]
  41761a:	test   edx,ebx
  41761c:	int3   
  41761d:	sbb    al,0xa5
  41761f:	out    dx,eax
  417620:	cmp    bh,BYTE PTR [esi+0x1d]
  417623:	xor    al,0x90
  417625:	mov    eax,ds:0x207d263e
  41762a:	lods   al,BYTE PTR ds:[esi]
  41762b:	cld    
  41762c:	dec    ebx
  41762d:	test   DWORD PTR [eax-0x50],ebx
  417630:	retf   
  417631:	sub    DWORD PTR [ecx+esi*4],esi
  417634:	in     al,0x36
  417636:	cmp    al,0xaf
  417638:	cmc    
  417639:	pop    es
  41763a:	pop    eax
  41763b:	sbb    DWORD PTR [edi],ecx
  41763d:	mov    al,0x70
  41763f:	test   DWORD PTR [ebp+0x3c],ecx
  417642:	test   eax,0xff6028ed
  417647:	fstp   QWORD PTR [ecx+0x62f496a4]
  41764d:	loope  0x417602
  41764f:	cmp    edi,ecx
  417651:	test   DWORD PTR [edx],esi
  417653:	das    
  417654:	lock jo 0x4176bf
  417657:	add    al,BYTE PTR [edi+0x34]
  41765a:	mov    cl,0xfd
  41765c:	mov    bh,0xed
  41765e:	cmc    
  41765f:	fld    DWORD PTR [eax+0x3d8156af]
  417665:	(bad)  [esi-0x3783660f]
  41766b:	rcr    ebx,0xd5
  41766e:	inc    eax
  41766f:	and    edi,DWORD PTR [ecx+0x14]
  417672:	(bad)  
  417673:	aad    0x11
  417675:	sbb    al,al
  417677:	sbb    DWORD PTR [edx-0x22],ecx
  41767a:	jl     0x41769e
  41767c:	cmp    DWORD PTR ds:0x7e2351db,ebx
  417682:	ss loope 0x417622
  417685:	jno    0x41766b
  417687:	lock add DWORD PTR [eax-0x71],0xffffffd6
  41768c:	xor    edi,DWORD PTR [esi+0x7a]
  41768f:	pop    edi
  417690:	fistp  QWORD PTR [esi+ebx*1+0x5f4abb51]
  417697:	retf   
  417698:	inc    esi
  417699:	in     al,0xce
  41769b:	test   al,0xca
  41769d:	fdivr  st,st(2)
  41769f:	lds    ebx,FWORD PTR [esi-0x4a]
  4176a2:	lea    edx,[edx+0xd]
  4176a5:	ja     0x41769c
  4176a7:	xchg   edi,eax
  4176a8:	dec    esi
  4176a9:	(bad)  
  4176aa:	mov    esp,0xa6e66a47
  4176af:	leave  
  4176b0:	stos   BYTE PTR es:[edi],al
  4176b1:	test   al,0x4b
  4176b3:	xchg   esp,eax
  4176b4:	sbb    DWORD PTR [ebp+eiz*2-0x7ba10708],edx
  4176bb:	jnp    0x41768d
  4176bd:	xor    edx,eax
  4176bf:	js     0x417669
  4176c1:	add    esi,DWORD PTR [ecx+0x455ee03a]
  4176c7:	ret    
  4176c8:	fidivr WORD PTR [edx]
  4176ca:	mov    ebp,0x8ba2de7b
  4176cf:	pop    eax
  4176d0:	adc    esi,eax
  4176d2:	test   DWORD PTR [ebp-0x44ea517d],ecx
  4176d8:	sub    BYTE PTR [ebp+0x38],dh
  4176db:	das    
  4176dc:	cmp    BYTE PTR [esi+0x36],cl
  4176df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176e0:	shl    DWORD PTR [esi+0x13],1
  4176e3:	lahf   
  4176e4:	mov    edi,0x5922e229
  4176e9:	add    BYTE PTR [ecx+0x30343752],dh
  4176ef:	xor    bh,ch
  4176f1:	and    cl,BYTE PTR [edx+ecx*1-0x32cf7437]
  4176f8:	pusha  
  4176f9:	in     eax,dx
  4176fa:	int3   
  4176fb:	sbb    al,0x11
  4176fd:	sbb    eax,0x4585d6c3
  417702:	jmp    0xeb5f:0x5caa5717
  417709:	lods   eax,DWORD PTR ds:[esi]
  41770a:	ins    BYTE PTR es:[edi],dx
  41770b:	cmp    eax,0x3337cda9
  417710:	mov    al,0x14
  417712:	cmc    
  417713:	mov    ebp,0x9cea1074
  417718:	imul   esp,ebp,0x59748bfe
  41771e:	iret   
  41771f:	js     0x417710
  417721:	jmp    0x35d16cc1
  417726:	sub    BYTE PTR [ecx+0x2b11ff5d],al
  41772c:	retf   0x3375
  41772f:	or     bh,bh
  417731:	and    BYTE PTR [ecx+0x43],ch
  417734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417735:	fwait
  417736:	call   0x4f93:0x499f5a9b
  41773d:	fstp   TBYTE PTR gs:[ebx+ebp*8]
  417741:	in     al,0x0
  417743:	adc    DWORD PTR [esi],edx
  417745:	out    dx,eax
  417746:	pop    esp
  417747:	sub    BYTE PTR [eax+0x24],ch
  41774a:	pop    ds
  41774b:	cmp    al,0xaf
  41774d:	fiadd  DWORD PTR [esi]
  41774f:	push   eax
  417750:	inc    edi
  417751:	sub    esi,edx
  417753:	sbb    BYTE PTR [eax-0x1e],bh
  417756:	sub    bl,BYTE PTR [edx]
  417758:	jbe    0x41772a
  41775a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41775b:	adc    bl,ch
  41775d:	xor    al,0x5e
  41775f:	dec    ecx
  417760:	retf   0x7928
  417763:	jae    0x41775b
  417765:	mov    ecx,DWORD PTR [ebx]
  417767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417768:	ficomp DWORD PTR [edx+0x3555b3f0]
  41776e:	in     al,0xdc
  417770:	in     eax,dx
  417771:	and    bh,ah
  417773:	sub    BYTE PTR [edi],ch
  417775:	out    dx,al
  417776:	adc    al,0x9
  417778:	xchg   edx,eax
  417779:	je     0x4177eb
  41777b:	and    al,0x76
  41777d:	sbb    dh,BYTE PTR [esi-0x3a]
  417780:	adc    eax,0x10e855fd
  417785:	out    dx,eax
  417786:	ror    BYTE PTR [edx-0x2678826d],1
  41778c:	mov    esi,DWORD PTR [edx]
  41778e:	jb     0x4177ef
  417790:	pop    ecx
  417791:	push   ebp
  417792:	div    DWORD PTR [edi+0x49]
  417795:	ja     0x417786
  417797:	cmp    ebx,ebp
  417799:	popf   
  41779a:	jmp    0x40beef96
  41779f:	cmp    BYTE PTR [esi+0x25],dh
  4177a2:	mov    edx,0xa40317a8
  4177a7:	jge    0x417750
  4177a9:	sti    
  4177aa:	or     DWORD PTR [eax],ebp
  4177ac:	mov    bh,0x3f
  4177ae:	mov    ah,0x96
  4177b0:	dec    esi
  4177b1:	xor    ecx,DWORD PTR [ebx-0x9]
  4177b4:	rcl    BYTE PTR [edx+ebp*8],0xe7
  4177b8:	inc    ecx
  4177b9:	dec    edx
  4177ba:	pop    ecx
  4177bb:	push   esi
  4177bc:	sti    
  4177bd:	nop
  4177be:	and    cl,BYTE PTR [edx]
  4177c0:	call   0x23d3:0xbe6162ee
  4177c7:	push   ebp
  4177c8:	ret    
  4177c9:	sub    eax,0xa8bd4b47
  4177ce:	mov    ecx,0x5554f219
  4177d3:	popa   
  4177d4:	inc    sp
  4177d6:	jl     0x417772
  4177d8:	sub    dl,BYTE PTR [ebx]
  4177da:	sar    BYTE PTR [esi+0x22],1
  4177dd:	lods   al,BYTE PTR ds:[esi]
  4177de:	rcl    BYTE PTR [ebp-0x2],1
  4177e1:	inc    DWORD PTR [eax+0xd]
  4177e4:	and    esi,DWORD PTR [esi-0x17fcc1ab]
  4177ea:	test   BYTE PTR [ebx],dl
  4177ec:	dec    edi
  4177ed:	add    eax,0x5470f15f
  4177f2:	adc    ecx,eax
  4177f4:	retf   0xcf41
  4177f7:	dec    ecx
  4177f8:	int3   
  4177f9:	or     eax,0x9caa93ae
  4177fe:	aaa    
  4177ff:	xor    cl,BYTE PTR [ecx+edx*8+0x74175a22]
  417806:	dec    ebx
  417807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417808:	fmul   st(0),st
  41780a:	pop    es
  41780b:	inc    ebx
  41780c:	out    0x4d,eax
  41780e:	xchg   ecx,eax
  41780f:	mov    cl,0x11
  417811:	ins    BYTE PTR es:[edi],dx
  417812:	or     al,0x4d
  417814:	dec    esi
  417815:	add    BYTE PTR [edx-0x56c5056a],bh
  41781b:	cmp    edx,DWORD PTR [eax]
  41781d:	sub    edx,DWORD PTR [edi]
  41781f:	(bad)  
  417820:	hlt    
  417821:	mov    DWORD PTR [edx+0x4f],edx
  417824:	inc    edi
  417825:	aaa    
  417826:	sub    al,0xbf
  417828:	mov    cl,0x69
  41782a:	xchg   esp,eax
  41782b:	fcos   
  41782d:	shr    DWORD PTR [ecx+eax*2],0xaa
  417831:	in     eax,dx
  417832:	pop    ebx
  417833:	int    0x25
  417835:	test   DWORD PTR [esi-0x315d3e06],ebx
  41783b:	mov    es,WORD PTR [edi-0x27d528f3]
  417841:	ret    
  417842:	test   BYTE PTR [ebx],bh
  417844:	aas    
  417845:	xchg   esp,eax
  417846:	aaa    
  417847:	cmp    ebp,ecx
  417849:	stos   BYTE PTR es:[edi],al
  41784a:	xor    BYTE PTR [esi-0xd],ah
  41784d:	arpl   WORD PTR [esi+edi*4-0x575a5f49],bp
  417854:	cmp    dl,BYTE PTR [ebp-0x49]
  417857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417858:	and    bh,BYTE PTR [ebx]
  41785a:	push   ecx
  41785b:	push   0xffffff97
  41785d:	int    0x73
  41785f:	in     al,dx
  417860:	call   0x2220:0x405eadce
  417867:	mov    bh,0xac
  417869:	push   ebp
  41786a:	es push esp
  41786c:	call   0x76e5:0x93e04467
  417873:	out    dx,al
  417874:	(bad)  
  417875:	cmp    ebp,ebx
  417877:	adc    al,BYTE PTR [edx-0x2544b249]
  41787d:	adc    al,0xa7
  41787f:	(bad)  
  417880:	sub    ch,ch
  417882:	mov    es,WORD PTR [eax+0xb]
  417885:	hlt    
  417886:	jmp    0x417880
  417888:	std    
  417889:	sbb    BYTE PTR [edx+0x3fb76cda],ch
  41788f:	xor    BYTE PTR [esp+ebp*4-0x90f0a70],bh
  417896:	aam    0x9c
  417898:	fadd   DWORD PTR [eax]
  41789a:	cmp    al,0x68
  41789c:	cli    
  41789d:	rcl    DWORD PTR [ecx+0x6226b00e],0xbd
  4178a4:	fbld   TBYTE PTR [ecx+0x7f550279]
  4178aa:	mov    esi,es
  4178ac:	jo     0x41787d
  4178ae:	push   esp
  4178af:	jmp    0x1dc008bb
  4178b4:	and    DWORD PTR ss:[esi+eax*4],esi
  4178b8:	fiadd  DWORD PTR [ecx+ecx*2+0x2a6c300d]
  4178bf:	lods   al,BYTE PTR ds:[esi]
  4178c0:	push   edi
  4178c1:	sbb    BYTE PTR [esi+ecx*8-0x15],0xce
  4178c6:	mov    ebp,0xb5b5a8f8
  4178cb:	(bad)  
  4178cd:	pop    esp
  4178ce:	xchg   ebp,eax
  4178cf:	je     0x417870
  4178d1:	sub    eax,0x78054b92
  4178d6:	mov    bh,0x3c
  4178d8:	js     0x417924
  4178da:	xchg   ebp,eax
  4178db:	iret   
  4178dc:	adc    edi,DWORD PTR [ebx-0x3d]
  4178df:	pop    ds
  4178e0:	fistp  DWORD PTR ds:0x3a9e2c26
  4178e6:	sbb    eax,0x85f90b10
  4178eb:	sbb    DWORD PTR [ebx+ecx*2],esp
  4178ee:	pop    ebx
  4178ef:	add    dl,BYTE PTR [eax]
  4178f1:	mov    dh,0x89
  4178f3:	cdq    
  4178f4:	push   esp
  4178f5:	push   esp
  4178f6:	and    eax,0xb0dd5c59
  4178fb:	jecxz  0x417967
  4178fd:	stc    
  4178fe:	mov    ds:0xb8f31b26,eax
  417903:	sti    
  417904:	cwde   
  417905:	sbb    eax,0x27cf2628
  41790b:	icebp  
  41790c:	mov    ss,edi
  41790e:	(bad)  
  41790f:	repz and BYTE PTR [eax],0xcb
  417913:	adc    esi,DWORD PTR [edi+0x2dcacf13]
  417919:	jnp    0x4178a2
  41791b:	fidivr DWORD PTR [ebx-0x29554eee]
  417921:	sbb    esi,DWORD PTR [edx-0x71dc114d]
  417927:	dec    eax
  417928:	jmp    edx
  41792a:	push   eax
  41792b:	ror    ecx,1
  41792d:	mov    esi,0xa0d6b4
  417932:	xor    dl,ah
  417934:	add    eax,0x46b2d479
  417939:	mov    esi,0xf4064827
  41793e:	jl     0x417929
  417940:	inc    esp
  417941:	xor    ecx,DWORD PTR [ebx-0x1f]
  417944:	loope  0x4178f7
  417946:	fist   WORD PTR [edi+ecx*8+0x7a]
  41794a:	hlt    
  41794b:	test   al,0x42
  41794e:	sub    dl,bh
  417950:	or     eax,0xe2a20444
  417955:	mov    ebx,0x76279371
  41795a:	or     BYTE PTR [ecx],0xc9
  41795d:	xchg   ecx,eax
  41795e:	push   es
  41795f:	pop    es
  417960:	mov    dh,al
  417962:	push   es
  417963:	push   ebx
  417964:	in     al,0xb9
  417966:	xor    ah,BYTE PTR [eax-0x9]
  417969:	pop    ebx
  41796a:	std    
  41796b:	stc    
  41796c:	retf   0xc281
  41796f:	push   0xffffffd7
  417971:	sbb    BYTE PTR [esi+0x0],bl
  417974:	cs pop ds
  417976:	mov    WORD PTR [ecx],?
  417978:	add    edi,DWORD PTR [ecx]
  41797a:	mov    fs,WORD PTR [ecx-0x3a]
  41797d:	not    BYTE PTR [eax+0x31aa969f]
  417983:	mov    ah,0xfd
  417985:	fsub   QWORD PTR [esi-0x643c9b90]
  41798b:	out    dx,al
  41798c:	pop    es
  41798d:	push   ecx
  41798e:	sub    dh,BYTE PTR [edx+0x3a]
  417991:	out    0x99,eax
  417993:	test   BYTE PTR [edx],al
  417995:	jge    0x417923
  417997:	jb     0x4179a8
  417999:	cmc    
  41799a:	pop    edi
  41799b:	daa    
  41799c:	iret   
  41799d:	arpl   sp,ax
  41799f:	pop    eax
  4179a0:	mov    ds:0xb228bdcf,eax
  4179a5:	stos   DWORD PTR es:[edi],eax
  4179a6:	and    eax,0x234dcfea
  4179ab:	add    BYTE PTR [ecx-0x5],al
  4179ae:	not    DWORD PTR [eax+esi*4+0x6e]
  4179b2:	add    DWORD PTR [ebx],edi
  4179b4:	pop    eax
  4179b5:	out    0xf1,eax
  4179b7:	and    eax,0xbfa24ece
  4179bc:	es pop sp
  4179bf:	out    0xd2,eax
  4179c1:	int3   
  4179c2:	push   ss
  4179c3:	ss mov ebp,0xa802b215
  4179c9:	pusha  
  4179ca:	add    bl,BYTE PTR [ecx+edi*8-0x35d92af5]
  4179d1:	ss dec ebp
  4179d3:	jle    0x41799f
  4179d5:	popf   
  4179d6:	xor    edx,ebp
  4179d8:	in     al,dx
  4179d9:	test   DWORD PTR ds:0x5a992393,ecx
  4179df:	pop    ds
  4179e0:	xchg   ecx,eax
  4179e1:	sbb    DWORD PTR ds:0xe121080c,ecx
  4179e7:	xor    BYTE PTR [ecx+0x54],bh
  4179ea:	or     BYTE PTR [ecx-0x31f2d787],dl
  4179f0:	scas   al,BYTE PTR es:[edi]
  4179f1:	mov    ds:0x83a02d67,al
  4179f6:	cdq    
  4179f7:	stc    
  4179f8:	mov    cl,0x14
  4179fa:	inc    eax
  4179fb:	mov    eax,ds:0xa5a526dc
  417a00:	push   edx
  417a01:	pop    edi
  417a02:	(bad)  
  417a03:	icebp  
  417a04:	cmp    dh,BYTE PTR [edi]
  417a06:	pop    ss
  417a07:	repz cwde 
  417a09:	mov    esi,0xc02cf6d1
  417a0e:	sub    esp,DWORD PTR [ecx+0x6e]
  417a11:	fldenv [ebx-0x78]
  417a14:	mov    esp,DWORD PTR [ecx+0x2a2bc66e]
  417a1a:	mov    DWORD PTR [ecx],esi
  417a1c:	jbe    0x4179ca
  417a1e:	and    al,BYTE PTR es:[edx+0x69041f4d]
  417a25:	mov    edi,0x3c36b761
  417a2a:	mov    al,0x4f
  417a2c:	dec    edi
  417a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a2e:	pop    eax
  417a2f:	push   edx
  417a30:	cmp    al,0xe4
  417a32:	popa   
  417a33:	mov    WORD PTR [esi],cs
  417a35:	sub    edx,ebp
  417a37:	scas   eax,DWORD PTR es:[edi]
  417a38:	into   
  417a39:	div    BYTE PTR ds:0x9ed7ac0a
  417a3f:	inc    ebx
  417a40:	imul   edi,esp,0xffffffe8
  417a43:	and    eax,ebx
  417a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a46:	push   esi
  417a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a48:	fmul   QWORD PTR [ebx]
  417a4a:	fist   DWORD PTR [ecx]
  417a4c:	cmc    
  417a4d:	adc    al,0x64
  417a4f:	outs   dx,BYTE PTR ds:[esi]
  417a50:	ret    
  417a51:	jb     0x4179d6
  417a53:	sbb    eax,0x22037534
  417a58:	inc    esi
  417a59:	mov    dl,0x2d
  417a5b:	cmc    
  417a5c:	daa    
  417a5d:	jnp    0x4179f8
  417a5f:	mov    ecx,0xa1312ce2
  417a64:	pop    esi
  417a65:	and    DWORD PTR [edx+0x41],ebp
  417a68:	dec    esi
  417a69:	or     DWORD PTR [edi-0x36],ebx
  417a6c:	dec    edi
  417a6d:	mov    dh,BYTE PTR [edi-0x97ec207]
  417a73:	aad    0xc
  417a75:	push   esp
  417a76:	popf   
  417a77:	test   BYTE PTR [ebp+0xb8f1b28],ah
  417a7d:	daa    
  417a7e:	mov    al,ds:0xa061d637
  417a83:	mov    ch,dl
  417a85:	rcr    BYTE PTR [ebx],cl
  417a87:	sbb    eax,esi
  417a89:	rcl    BYTE PTR [edi],1
  417a8b:	shl    DWORD PTR [esi],1
  417a8d:	push   edx
  417a8e:	aas    
  417a8f:	push   0xffffffb5
  417a91:	cmp    esp,DWORD PTR [ecx-0x5e]
  417a94:	push   esp
  417a95:	cmp    bl,BYTE PTR [eax]
  417a97:	fstp   TBYTE PTR [eax]
  417a99:	gs dec ebp
  417a9b:	mov    bl,0x98
  417a9d:	xor    BYTE PTR [ebx],dl
  417a9f:	mov    bl,0xe1
  417aa1:	icebp  
  417aa2:	dec    esp
  417aa3:	xchg   edx,eax
  417aa4:	or     ecx,esi
  417aa6:	push   ds
  417aa7:	and    edi,DWORD PTR [ecx]
  417aa9:	fld    TBYTE PTR [edx+0x61c372b]
  417aaf:	pop    ds
  417ab0:	out    dx,eax
  417ab1:	push   0x399cb3bb
  417ab6:	sub    esp,0x98ce0df0
  417abc:	add    eax,0xfa489342
  417ac1:	add    al,0x55
  417ac3:	in     al,0xb6
  417ac5:	xlat   BYTE PTR ds:[ebx]
  417ac6:	mov    DWORD PTR [edx],esi
  417ac8:	das    
  417ac9:	cmp    esp,esp
  417acb:	sbb    DWORD PTR [edx],edx
  417acd:	mov    ch,0x34
  417acf:	xor    DWORD PTR [eax+0x49],ecx
  417ad2:	mov    ebx,0xc0499919
  417ad7:	hlt    
  417ad8:	adc    dh,ah
  417ada:	inc    esi
  417adb:	neg    al
  417add:	or     dl,BYTE PTR [esp+ebp*4+0x4c0ab1be]
  417ae4:	mov    eax,ds:0xc5bb227f
  417ae9:	sub    dh,bl
  417aeb:	jg     0x417b66
  417aed:	add    ecx,0xfcfb8f9f
  417af3:	xlat   BYTE PTR ds:[ebx]
  417af4:	mov    WORD PTR [edi+0x1d4bf89],es
  417afa:	cmp    eax,0x72140473
  417aff:	icebp  
  417b00:	jg     0x417b28
  417b02:	shl    dl,1
  417b04:	fnstenv [ebx-0x6e]
  417b07:	mov    esp,DWORD PTR [ebx+0x75a48362]
  417b0d:	push   eax
  417b0e:	stc    
  417b0f:	add    DWORD PTR [ebx],ecx
  417b11:	stos   DWORD PTR es:[edi],eax
  417b12:	sbb    eax,0xb5f64970
  417b17:	and    esp,esi
  417b19:	push   0x57
  417b1b:	fcmovu st,st(2)
  417b1d:	mov    eax,ds:0x8cd9d247
  417b22:	dec    esp
  417b23:	xor    eax,ecx
  417b25:	adc    bl,BYTE PTR [ecx+0x6131ab71]
  417b2b:	inc    ebx
  417b2c:	int3   
  417b2d:	in     eax,dx
  417b2e:	and    BYTE PTR [ebx+esi*1],bl
  417b31:	dec    edx
  417b32:	dec    eax
  417b33:	rcl    esi,1
  417b35:	xor    BYTE PTR [esp+edx*8],bh
  417b38:	leave  
  417b39:	push   0xb66a1e53
  417b3e:	pop    es
  417b3f:	data16 je 0x417adf
  417b42:	std    
  417b43:	in     al,dx
  417b44:	fnstenv [eax]
  417b46:	push   0x9119cd7d
  417b4b:	xor    bl,BYTE PTR [eax-0x13293de2]
  417b51:	mov    esp,0xce59717b
  417b56:	adc    al,0x83
  417b58:	int    0x6a
  417b5a:	cmc    
  417b5b:	jne    0x417af4
  417b5d:	das    
  417b5e:	call   0x586d:0x64a94c70
  417b65:	inc    ebx
  417b66:	pop    edi
  417b67:	push   ebx
  417b68:	push   0xffffff8b
  417b6a:	ror    BYTE PTR [edx],1
  417b6c:	nop
  417b6d:	jge    0x417bc7
  417b6f:	sub    eax,0x7dead160
  417b74:	xchg   edx,eax
  417b75:	sbb    edi,DWORD PTR [edx]
  417b77:	in     al,0x21
  417b79:	pop    esp
  417b7a:	outs   dx,WORD PTR ds:[esi]
  417b7c:	fwait
  417b7d:	inc    esp
  417b7e:	cmc    
  417b7f:	icebp  
  417b80:	fist   WORD PTR [edi+0x21fb0980]
  417b86:	or     esi,DWORD PTR [ebp+0x7827a8f8]
  417b8c:	ror    ebx,0xc2
  417b8f:	enter  0x3707,0x24
  417b93:	neg    BYTE PTR [edi+0x2d4428c]
  417b99:	and    al,BYTE PTR [ebp+0x5fae27a0]
  417b9f:	xchg   esi,eax
  417ba0:	mov    ecx,0xc9623de1
  417ba5:	cmp    DWORD PTR [ecx+ecx*2],eax
  417ba8:	aaa    
  417ba9:	and    al,0x70
  417bab:	es addr16 jmp 0x417be3
  417baf:	js     0x417c13
  417bb1:	mov    eax,0x34d1b785
  417bb6:	repnz shl DWORD PTR [edx+0x119e1b78],0x57
  417bbe:	dec    eax
  417bbf:	dec    ecx
  417bc0:	inc    eax
  417bc1:	and    edi,DWORD PTR [ecx+0x598da58]
  417bc7:	dec    esi
  417bc8:	outs   dx,DWORD PTR ds:[esi]
  417bc9:	xchg   DWORD PTR [eax+0x4a],ecx
  417bcc:	dec    ebx
  417bcd:	(bad)  
  417bce:	leave  
  417bcf:	jmp    0x6692ae08
  417bd4:	mov    ?,WORD PTR [edi]
  417bd6:	adc    eax,0x8193950a
  417bdb:	icebp  
  417bdc:	and    al,0x3f
  417bde:	in     al,0x5a
  417be0:	xor    ah,al
  417be2:	mov    bh,0x42
  417be4:	push   0xa4f487a6
  417be9:	repnz mov ds:0xe9d29c3d,eax
  417bef:	addr16 (bad) 
  417bf1:	pop    edx
  417bf2:	sti    
  417bf3:	out    0xfb,eax
  417bf5:	xchg   BYTE PTR [esi-0x7e96e14],dh
  417bfb:	test   al,0x52
  417bfd:	add    eax,DWORD PTR [edi]
  417bff:	mov    dh,dh
  417c01:	push   eax
  417c02:	ret    0xa325
  417c05:	lea    ebp,[edx]
  417c07:	sbb    BYTE PTR [esi+0x1b],ah
  417c0a:	daa    
  417c0b:	inc    ebp
  417c0c:	xor    ch,BYTE PTR [esi+0x12]
  417c0f:	inc    edi
  417c10:	ins    DWORD PTR es:[edi],dx
  417c11:	and    eax,0xabbf57e
  417c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c17:	push   ecx
  417c18:	outs   dx,BYTE PTR ds:[esi]
  417c19:	xor    BYTE PTR [eax],ah
  417c1b:	loope  0x417c20
  417c1d:	ins    BYTE PTR es:[edi],dx
  417c1e:	jae    0x417be1
  417c20:	mov    ah,0xeb
  417c22:	jl     0x417c4e
  417c24:	ret    0xd453
  417c27:	shr    dl,0xe0
  417c2a:	cmp    bh,0x77
  417c2d:	jmp    0x417c5d
  417c2f:	repnz addr16 or ah,cl
  417c33:	lock repz aaa 
  417c36:	fistp  WORD PTR [edi-0x70]
  417c39:	pop    edx
  417c3a:	es cwde 
  417c3c:	xchg   ecx,eax
  417c3d:	and    al,bh
  417c3f:	pop    ebp
  417c40:	adc    eax,0x17af1e15
  417c45:	xor    BYTE PTR [eax+0x37],ch
  417c48:	stc    
  417c49:	or     cl,BYTE PTR [ecx]
  417c4b:	sub    al,0xb5
  417c4d:	add    bl,al
  417c4f:	bound  esp,QWORD PTR [ecx+esi*1]
  417c52:	dec    esp
  417c53:	xchg   BYTE PTR [edx+0x327a5117],cl
  417c59:	daa    
  417c5a:	sub    al,BYTE PTR [edx-0x5f49715c]
  417c60:	ins    DWORD PTR es:[edi],dx
  417c61:	mov    cl,0xde
  417c63:	mov    cl,0xfc
  417c65:	imul   edx,DWORD PTR [ebp+0x1349747b],0xffffffa9
  417c6c:	(bad)  [esi]
  417c6e:	ins    BYTE PTR es:[edi],dx
  417c6f:	xchg   ebp,eax
  417c70:	nop    DWORD PTR [esi-0x66]
  417c74:	sub    eax,0x1e870ec
  417c79:	test   DWORD PTR [ebx],ebp
  417c7b:	and    ch,al
  417c7d:	test   eax,0x42933b47
  417c82:	adc    eax,0x996bb1ae
  417c87:	inc    edi
  417c88:	adc    eax,0x22484120
  417c8d:	lods   eax,DWORD PTR ds:[esi]
  417c8e:	sahf   
  417c8f:	fwait
  417c90:	adc    al,0x67
  417c92:	lods   eax,DWORD PTR ds:[esi]
  417c93:	dec    esi
  417c94:	sti    
  417c95:	push   ebx
  417c96:	mov    eax,0x49332378
  417c9b:	lods   eax,DWORD PTR ds:[esi]
  417c9c:	adc    ebx,DWORD PTR [ebp+eiz*2+0x4c5613a]
  417ca3:	mov    bh,0x5f
  417ca5:	es or  eax,0x68d780fd
  417cab:	test   al,0xc3
  417cad:	ror    BYTE PTR [esi],0x22
  417cb0:	jnp    0x417c74
  417cb2:	push   ds
  417cb3:	sub    cl,BYTE PTR ds:0x27a535db
  417cb9:	into   
  417cba:	lods   al,BYTE PTR ds:[esi]
  417cbb:	jg     0x417ced
  417cbd:	rcl    DWORD PTR [ecx+0x42],cl
  417cc0:	stc    
  417cc1:	or     DWORD PTR [esi+eax*4-0x199948eb],ebx
  417cc8:	mov    bh,0x77
  417cca:	cdq    
  417ccb:	shl    BYTE PTR [eax-0x4d0abb47],cl
  417cd1:	push   es
  417cd2:	sbb    DWORD PTR [edi+edi*8+0x61],eax
  417cd6:	jp     0x417d07
  417cd8:	mov    bl,0xbb
  417cda:	push   edi
  417cdb:	sbb    ebx,DWORD PTR [edx-0x72]
  417cde:	ds (bad) 
  417ce0:	aad    0xa6
  417ce2:	std    
  417ce3:	call   0x569a268a
  417ce8:	pop    ebx
  417ce9:	lahf   
  417cea:	adc    al,0xe9
  417cec:	adc    eax,0x888d7006
  417cf1:	cli    
  417cf2:	push   ebx
  417cf3:	xlat   BYTE PTR ds:[ebx]
  417cf4:	mov    ebp,0x41ea2656
  417cf9:	jno    0x417d44
  417cfb:	mov    esp,0x7aab03a8
  417d00:	retf   
  417d01:	adc    al,0x83
  417d03:	mov    esp,0xcf94573b
  417d08:	sub    ebx,esi
  417d0a:	lock in eax,dx
  417d0c:	xlat   BYTE PTR ds:[ebx]
  417d0d:	(bad)  
  417d0e:	in     eax,0x81
  417d10:	repz je 0x417d8e
  417d13:	cvtps2pi mm0,QWORD PTR [esi-0x66]
  417d17:	and    esi,eax
  417d19:	outs   dx,DWORD PTR ds:[esi]
  417d1a:	mov    al,ds:0x6b2bf7d3
  417d1f:	loopne 0x417d47
  417d21:	out    dx,eax
  417d22:	xor    BYTE PTR gs:[ecx+eax*8-0x294a8d5d],dl
  417d2a:	sar    DWORD PTR [edx+0x54be1aad],1
  417d30:	fnstcw WORD PTR ds:0xf1c1afe5
  417d36:	lock mov BYTE PTR [eax+0x1d5df527],cl
  417d3d:	add    DWORD PTR [ecx+edx*8],0xfffffff6
  417d41:	call   0x5a0f:0xbf74e0a1
  417d48:	inc    edx
  417d49:	clc    
  417d4a:	jmp    0x417da2
  417d4c:	sub    esp,ebx
  417d4e:	and    DWORD PTR [esi+0x455dabed],esp
  417d54:	repz sub al,0x3c
  417d57:	enter  0xfd81,0x33
  417d5b:	jae    0x417d4c
  417d5d:	dec    esp
  417d5e:	sub    al,0xf9
  417d60:	mov    edi,0xdd3c73fe
  417d65:	(bad)  
  417d66:	hlt    
  417d67:	mov    esi,0x6af5cd4a
  417d6c:	(bad)  
  417d6d:	or     BYTE PTR [ebp+0x2a],cl
  417d70:	jb     0x417d43
  417d72:	rol    DWORD PTR [edx],1
  417d74:	ror    DWORD PTR [ebx],0xb3
  417d77:	mov    al,bl
  417d79:	aad    0x7f
  417d7b:	loopne 0x417d5c
  417d7d:	fwait
  417d7e:	sub    al,0x91
  417d80:	gs push ebp
  417d82:	adc    BYTE PTR [esi-0x2f67fc99],al
  417d88:	jecxz  0x417d2d
  417d8a:	call   FWORD PTR [edx-0x1e]
  417d8d:	push   ebx
  417d8e:	mov    bl,0xbb
  417d90:	sub    DWORD PTR [ecx-0x35e05e84],ebx
  417d96:	inc    esi
  417d97:	inc    edi
  417d98:	xor    dl,BYTE PTR [ecx+ebp*8-0x549506a3]
  417d9f:	jmp    0x41e17e56
  417da4:	mov    esp,0x85f7fcb8
  417da9:	sbb    esp,esp
  417dab:	mov    esi,0xef136a7e
  417db0:	fadd   st(7),st
  417db2:	or     ch,al
  417db4:	imul   ebx,DWORD PTR [ecx+0x5e93aead],0x424ab86b
  417dbe:	mov    ah,0xfe
  417dc0:	mov    esi,0x94f309e2
  417dc5:	int3   
  417dc6:	jae    0x417ddf
  417dc8:	scas   eax,DWORD PTR es:[edi]
  417dc9:	pop    ecx
  417dca:	ds dec ebp
  417dcc:	add    DWORD PTR [ebp-0x4a],edi
  417dcf:	push   ds
  417dd0:	inc    esi
  417dd1:	xchg   ebp,eax
  417dd2:	in     al,0xf1
  417dd4:	xchg   DWORD PTR [edi+ebx*2],ecx
  417dd7:	mov    dh,BYTE PTR [ecx+0x38]
  417dda:	jg     0x417d88
  417ddc:	jne    0x417da7
  417dde:	jp     0x417dba
  417de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417de1:	dec    edx
  417de2:	sbb    bl,bh
  417de4:	mov    ch,BYTE PTR [edx-0x30]
  417de7:	lea    ebp,[eax]
  417de9:	or     eax,0xae93b016
  417dee:	daa    
  417def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417df0:	aam    0x1d
  417df2:	hlt    
  417df3:	retf   
  417df4:	sti    
  417df5:	stc    
  417df6:	or     DWORD PTR [ecx],ebx
  417df8:	(bad)  
  417df9:	sbb    bl,BYTE PTR [ebx-0x41]
  417dfc:	test   al,0x25
  417dfe:	fidiv  WORD PTR [ebx+0x6230f9d4]
  417e04:	(bad)  
  417e05:	fimul  DWORD PTR [ebp*4+0x7b729a10]
  417e0c:	jp     0x417e28
  417e0e:	xchg   ecx,eax
  417e0f:	mov    BYTE PTR [edx],cl
  417e11:	rep movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  417e14:	fs enter 0xf278,0x90
  417e19:	leave  
  417e1a:	repz pop esi
  417e1c:	sar    BYTE PTR [esi],0xcb
  417e1f:	pop    edx
  417e20:	into   
  417e21:	adc    ah,cl
  417e23:	or     BYTE PTR [esi-0xe31ebdf],dl
  417e29:	les    edi,FWORD PTR [ebx]
  417e2b:	mov    bh,BYTE PTR [eax-0x59]
  417e2e:	dec    esp
  417e2f:	dec    ebx
  417e30:	cmp    eax,DWORD PTR [eax-0x49]
  417e33:	std    
  417e34:	in     eax,dx
  417e35:	push   edx
  417e36:	or     cl,bl
  417e38:	sub    DWORD PTR [ebx-0x6d3074ee],edi
  417e3e:	cmp    BYTE PTR [esi+ebx*1+0x1f],dl
  417e42:	add    al,0x54
  417e44:	pop    ss
  417e45:	fstp   QWORD PTR [bx+si]
  417e48:	ins    DWORD PTR es:[edi],dx
  417e49:	xor    DWORD PTR [ecx+0x5f],ebp
  417e4c:	and    BYTE PTR [ebx+ecx*4-0x6c],cl
  417e50:	add    ch,cl
  417e52:	js     0x417ec6
  417e54:	pop    esp
  417e55:	les    edi,FWORD PTR ds:[edi]
  417e58:	out    dx,al
  417e59:	popf   
  417e5a:	out    dx,eax
  417e5b:	or     esi,DWORD PTR [eax+0x5a813081]
  417e61:	or     eax,0xabf68bcd
  417e66:	xchg   ebp,eax
  417e67:	pushf  
  417e68:	retf   
  417e69:	fs ja  0x417df2
  417e6c:	sar    DWORD PTR [edx-0x42f36daf],0x3d
  417e73:	pop    edi
  417e74:	pusha  
  417e75:	push   cs
  417e76:	cmp    DWORD PTR [edi],0xfffffff5
  417e79:	(bad)  
  417e7b:	leave  
  417e7c:	scas   eax,DWORD PTR es:[edi]
  417e7d:	add    eax,0x79faf897
  417e82:	adc    al,0x72
  417e84:	rcl    ebp,0x24
  417e87:	cmp    al,0x28
  417e89:	push   cs
  417e8a:	fist   DWORD PTR ds:0x4c5c4aef
  417e90:	mov    cl,0xd5
  417e92:	es xchg ecx,eax
  417e94:	loopne 0x417ec5
  417e96:	dec    eax
  417e97:	lock shl BYTE PTR [ebx],cl
  417e9a:	in     eax,dx
  417e9b:	sub    esi,DWORD PTR [edi]
  417e9d:	mov    ecx,0xb4c05adb
  417ea2:	mov    dh,0x54
  417ea4:	addr16 inc ebp
  417ea6:	cld    
  417ea7:	pop    ds
  417ea8:	aaa    
  417ea9:	mov    ah,0x14
  417eab:	mov    ebp,ebx
  417ead:	stc    
  417eae:	(bad)  
  417eaf:	(bad)  
  417eb1:	and    ebx,esp
  417eb3:	jmp    DWORD PTR [edi]
  417eb5:	push   0x1b
  417eb7:	fmul   DWORD PTR [eax]
  417eb9:	push   es
  417eba:	shl    BYTE PTR [eax],0x95
  417ebd:	mov    ch,BYTE PTR [eax-0x4b]
  417ec0:	mov    eax,ds:0x59947946
  417ec5:	std    
  417ec6:	mov    ch,0xe3
  417ec8:	test   BYTE PTR [edi],dl
  417eca:	out    0x40,eax
  417ecc:	jb     0x417ea6
  417ece:	cld    
  417ecf:	add    DWORD PTR [esi],ecx
  417ed1:	jns    0x417e81
  417ed3:	xchg   esp,eax
  417ed4:	daa    
  417ed5:	call   0x569f:0x434027aa
  417edc:	pop    edi
  417edd:	popf   
  417ede:	sbb    BYTE PTR [edi+ebp*8-0x80],0xeb
  417ee3:	sahf   
  417ee4:	jnp    0x417f3d
  417ee6:	cwde   
  417ee7:	mov    ebp,0xbce4fd04
  417eec:	or     BYTE PTR [ecx+0x4a],0x83
  417ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ef1:	adc    DWORD PTR [ecx+0x56],0x229ee461
  417ef8:	icebp  
  417ef9:	pop    ebx
  417efa:	inc    ecx
  417efb:	fnstsw WORD PTR [edx-0x39]
  417efe:	shr    bl,cl
  417f00:	mov    eax,0xaa4d2298
  417f05:	mov    bh,0xc6
  417f07:	shl    DWORD PTR [ebx],cl
  417f09:	mov    bh,0x1e
  417f0b:	stc    
  417f0c:	cmp    eax,0x82905dc7
  417f11:	inc    ebx
  417f12:	lods   eax,DWORD PTR ds:[esi]
  417f13:	mov    bl,0x8d
  417f15:	inc    esp
  417f16:	jg     0x417ee5
  417f18:	fld    DWORD PTR [ecx+eax*1-0x1c7903a5]
  417f1f:	ret    
  417f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f21:	repnz mov dh,0x30
  417f24:	stos   BYTE PTR es:[edi],al
  417f25:	sahf   
  417f26:	xor    eax,0x41fa7684
  417f2b:	add    BYTE PTR [ebp+ebx*1-0x243105f4],0x52
  417f33:	loop   0x417f49
  417f35:	sahf   
  417f36:	div    BYTE PTR [edx+0x57027e39]
  417f3c:	xor    eax,0x3d123171
  417f41:	or     bh,BYTE PTR [ebx+0xb]
  417f44:	push   ecx
  417f45:	or     BYTE PTR [edx+0x51],bl
  417f48:	add    esi,DWORD PTR [edi-0x79]
  417f4b:	(bad)  
  417f4c:	fs push cs
  417f4e:	dec    ebp
  417f4f:	mov    ds:0xf178292b,eax
  417f54:	jge    0x417fba
  417f56:	mov    es,WORD PTR [edi]
  417f58:	mov    eax,0x130b0b04
  417f5d:	dec    ebx
  417f5e:	outs   dx,BYTE PTR ds:[esi]
  417f5f:	iret   
  417f60:	pop    es
  417f61:	fmul   st(7),st
  417f63:	xor    al,0x20
  417f65:	(bad)  
  417f66:	mov    bl,0x4d
  417f68:	mov    edx,0xf0657a57
  417f6d:	pop    edx
  417f6e:	inc    edi
  417f6f:	clc    
  417f70:	test   eax,0x249c82d
  417f75:	xchg   edx,eax
  417f76:	lahf   
  417f77:	cmc    
  417f78:	or     ecx,edx
  417f7a:	cmp    al,0x50
  417f7c:	int    0x83
  417f7e:	push   cs
  417f7f:	pop    edi
  417f80:	sar    DWORD PTR [eax+0x7bf0664a],0x57
  417f87:	dec    ebx
  417f88:	(bad)  
  417f89:	mov    al,ds:0x374d5efb
  417f8e:	inc    ecx
  417f8f:	jmp    0xbdfadc7f
  417f94:	lods   eax,DWORD PTR ds:[esi]
  417f95:	iret   
  417f96:	das    
  417f97:	test   DWORD PTR [esi+esi*2+0x44],edx
  417f9b:	push   0x28f2d8dd
  417fa0:	xor    eax,0xa722494b
  417fa5:	xchg   edi,eax
  417fa6:	aam    0xc2
  417fa8:	xor    ecx,edi
  417faa:	push   edx
  417fab:	ja     0x417fbd
  417fad:	pop    edx
  417fae:	shr    dl,cl
  417fb0:	and    BYTE PTR ds:0xb4527277,bh
  417fb6:	jae    0x417f5c
  417fb8:	ins    DWORD PTR es:[edi],dx
  417fb9:	jmp    0x8a04:0xa0d29dc9
  417fc0:	cmp    bh,dl
  417fc2:	cs jle 0x418042
  417fc5:	add    al,ch
  417fc7:	loopne 0x417fc2
  417fc9:	mov    eax,ds:0x3519a6a1
  417fce:	aas    
  417fcf:	stc    
  417fd0:	mov    dh,0x66
  417fd2:	int3   
  417fd3:	imul   edi,DWORD PTR [ebx+ebx*2],0x31
  417fd7:	push   ecx
  417fd8:	(bad)  
  417fd9:	mov    al,0xa3
  417fdb:	ins    BYTE PTR es:[edi],dx
  417fdc:	sbb    BYTE PTR [ebx],al
  417fde:	das    
  417fdf:	cmp    DWORD PTR [ecx+0x3a1489ef],0x757f5050
  417fe9:	and    ah,BYTE PTR [edx-0x24c41074]
  417fef:	inc    edi
  417ff0:	es out 0x14,al
  417ff3:	and    eax,0x61464712
  417ff8:	es mov esp,0xc97c77d5
  417ffe:	sub    ah,BYTE PTR [edx+esi*8-0x5e]
  418002:	or     cl,0xee
  418005:	xchg   esp,eax
  418006:	dec    edx
  418007:	fstp   st(3)
  418009:	leave  
  41800a:	mov    dl,ch
  41800c:	dec    ebx
  41800d:	dec    ebp
  41800e:	addr16 into 
  418010:	inc    esp
  418011:	lods   eax,DWORD PTR ds:[esi]
  418012:	xor    esi,DWORD PTR [ecx+0x66504e02]
  418018:	dec    esi
  418019:	sub    al,0x4c
  41801b:	(bad)  
  41801c:	in     eax,0xb3
  41801e:	mov    ah,0x87
  418020:	xor    ebx,ebx
  418022:	mov    ah,0x65
  418024:	shl    DWORD PTR [ebx-0x43],1
  418027:	std    
  418028:	mov    edx,0xeb9b892b
  41802d:	mov    ebp,0x16d0b655
  418032:	xchg   ebx,eax
  418033:	cmc    
  418034:	push   es
  418035:	add    dl,BYTE PTR [ecx]
  418037:	inc    ebx
  418038:	inc    edi
  418039:	ret    0xa3a5
  41803c:	sbb    cl,BYTE PTR [eax]
  41803e:	dec    ebx
  41803f:	test   eax,0x9bb7cd25
  418044:	push   esi
  418045:	sbb    ch,al
  418047:	inc    ecx
  418048:	lods   eax,DWORD PTR ds:[esi]
  418049:	adc    bh,BYTE PTR [edx]
  41804b:	outs   dx,DWORD PTR ds:[esi]
  41804c:	sub    eax,DWORD PTR [edx+0x67]
  41804f:	cmc    
  418050:	pop    ecx
  418051:	push   0x4f89df56
  418056:	int    0x93
  418058:	jno    0x417feb
  41805a:	mov    ah,0xde
  41805c:	(bad)  
  41805d:	or     al,0xb9
  41805f:	mov    edx,0xc62e0e6e
  418064:	bound  esp,QWORD PTR [ebp-0x5b8c3267]
  41806a:	fistp  DWORD PTR [ebp+0x7b]
  41806d:	sbb    bh,ah
  41806f:	add    BYTE PTR [esp+eax*1-0x7132b48c],ch
  418076:	jge    0x418008
  418078:	sbb    ebp,DWORD PTR [esi]
  41807a:	(bad)  
  41807b:	mov    al,ds:0xac99eb5a
  418080:	adc    al,0x52
  418082:	pop    edx
  418083:	in     al,dx
  418084:	jge    0x418013
  418086:	cmp    eax,0x2db1c026
  41808b:	jbe    0x4180fc
  41808d:	arpl   WORD PTR [ecx-0x6f],ax
  418090:	push   es
  418091:	sub    DWORD PTR [esi],edx
  418093:	dec    eax
  418094:	jmp    0xb04bf8eb
  418099:	jge    0x418026
  41809b:	in     al,0x50
  41809d:	fwait
  41809e:	ds stos BYTE PTR es:[edi],al
  4180a0:	ret    
  4180a1:	jbe    0x41803c
  4180a3:	rol    DWORD PTR [ecx+0x58],0x13
  4180a7:	test   BYTE PTR [edi-0x3f3e772e],ah
  4180ad:	or     eax,0xec337b24
  4180b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180b3:	push   cs
  4180b4:	stos   DWORD PTR es:[edi],eax
  4180b5:	inc    edx
  4180b6:	lock push ss
  4180b8:	test   BYTE PTR [eax],0xfc
  4180bb:	jge    0x41804c
  4180bd:	xchg   edi,eax
  4180be:	mov    BYTE PTR [esi+eax*4],ch
  4180c1:	(bad)  
  4180c2:	repnz mov dh,0x4f
  4180c5:	int    0x91
  4180c7:	dec    ebp
  4180c8:	fiadd  WORD PTR [edi-0x3e2f3d42]
  4180ce:	push   edx
  4180cf:	(bad)
  4180d3:	out    0x9d,eax
  4180d5:	loope  0x4180ea
  4180d7:	ror    BYTE PTR [edi+0x7e],cl
  4180da:	cmp    dh,BYTE PTR [ebx]
  4180dc:	push   edx
  4180dd:	lods   al,BYTE PTR ds:[esi]
  4180de:	jmp    0xc8d8:0xfbc6a90a
  4180e5:	mov    ebp,0x2fa365c0
  4180ea:	loope  0x41807f
  4180ec:	idiv   BYTE PTR [eax]
  4180ee:	(bad)  
  4180ef:	mov    esi,0x8b65597e
  4180f4:	fsubr  DWORD PTR [ecx-0x3d]
  4180f7:	and    DWORD PTR [eax+0x42],edx
  4180fa:	pop    ss
  4180fb:	mov    ecx,0x7007d67c
  418100:	mov    eax,0x61373ddd
  418105:	cmp    al,0x2c
  418107:	daa    
  418108:	or     ebx,eax
  41810a:	dec    edx
  41810b:	shl    DWORD PTR [esi+0x51],1
  41810e:	es jne 0x41814d
  418111:	inc    ecx
  418112:	jp     0x41810c
  418114:	mov    esp,0xd98a2b0d
  418119:	pop    esi
  41811a:	mov    ah,0xa
  41811c:	fisub  WORD PTR [ecx+0x7fe8d58d]
  418122:	sahf   
  418123:	ss xchg ebp,eax
  418125:	pop    es
  418126:	scas   al,BYTE PTR es:[edi]
  418127:	fsubr  QWORD PTR [edx-0x5e2a5ff6]
  41812d:	push   esp
  41812e:	sbb    ebx,DWORD PTR [edx-0x6c2c44ea]
  418134:	mov    ds:0x791ce480,eax
  418139:	dec    ebp
  41813a:	xor    al,0x8b
  41813c:	aaa    
  41813d:	fdivrp st(1),st
  41813f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418140:	sub    eax,0xd2a41d63
  418145:	sar    BYTE PTR [ebx+0x37],cl
  418148:	scas   eax,DWORD PTR es:[edi]
  418149:	lods   eax,DWORD PTR ds:[esi]
  41814a:	test   ch,bh
  41814c:	dec    ecx
  41814d:	enter  0x5df0,0xcc
  418151:	mov    bh,dh
  418153:	icebp  
  418154:	jbe    0x4181a4
  418156:	mov    edi,?
  418158:	lea    edi,[edx-0x674a9ba]
  41815e:	sbb    esp,eax
  418160:	add    ah,0xdb
  418163:	xor    BYTE PTR [edi-0x3d4f85a],bh
  418169:	outs   dx,BYTE PTR ds:[esi]
  41816a:	push   edi
  41816b:	push   edi
  41816c:	out    0xc6,eax
  41816e:	sub    dh,bl
  418170:	imul   edi,DWORD PTR [ecx],0x6b
  418173:	push   ebp
  418174:	inc    edx
  418175:	push   esi
  418176:	inc    eax
  418177:	lahf   
  418178:	shl    DWORD PTR [edx-0x56be5a10],0xc9
  41817f:	bound  ebx,QWORD PTR [esp+edx*2+0x3f067f53]
  418186:	jmp    0x18b0091d
  41818b:	push   0xffffff8b
  41818d:	xchg   ebp,eax
  41818e:	mov    cl,0xfd
  418190:	ror    DWORD PTR [ecx-0x2a],1
  418193:	push   esi
  418194:	lock inc ecx
  418196:	jnp    0x41817f
  418198:	pop    ebx
  418199:	push   eax
  41819a:	in     eax,0x3f
  41819c:	cmp    eax,DWORD PTR [ebp+0x3890ad56]
  4181a2:	xor    ecx,DWORD PTR [ebx-0x4bca0d9c]
  4181a8:	dec    ecx
  4181a9:	jb     0x41813b
  4181ab:	imul   ebp,DWORD PTR ds:0xeb02a63,0xd04c0358
  4181b5:	sub    eax,0x20b47f5
  4181ba:	fld    DWORD PTR [edi+0x64]
  4181bd:	mov    bh,0x9
  4181bf:	adc    eax,edi
  4181c1:	(bad)  [eax+0x593ddf6e]
  4181c7:	lods   al,BYTE PTR ds:[esi]
  4181c8:	ret    
  4181c9:	hlt    
  4181ca:	cmp    eax,DWORD PTR [edi-0x4fa6d251]
  4181d0:	inc    eax
  4181d1:	imul   ebp,esp,0xac74d248
  4181d7:	fwait
  4181d8:	imul   ebp,eax,0xffffffe6
  4181db:	push   ecx
  4181dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181dd:	mov    ds,WORD PTR [esi]
  4181df:	add    eax,0x518c2d6e
  4181e4:	mov    dl,BYTE PTR [ebx]
  4181e6:	or     eax,0xb0c4dec4
  4181eb:	mov    cl,0x18
  4181ed:	out    dx,eax
  4181ee:	dec    edx
  4181ef:	cmp    ecx,DWORD PTR [ebp-0x3de71639]
  4181f5:	xlat   BYTE PTR ds:[ebx]
  4181f6:	arpl   WORD PTR [eax+0x58],di
  4181f9:	or     DWORD PTR [esi-0xeca2d45],esi
  4181ff:	call   0xc691:0xabd4e37f
  418206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418207:	popf   
  418208:	mov    ds:0xe47b659f,eax
  41820d:	pop    ebx
  41820e:	(bad)  
  41820f:	and    eax,0x6ffc4b8c
  418214:	jmp    0xf42d56b6
  418219:	test   BYTE PTR [edx+ebx*8+0x4c7b9cb3],ah
  418220:	cdq    
  418221:	test   bl,ch
  418223:	adc    eax,0x85744be4
  418228:	xchg   ecx,eax
  418229:	lods   al,BYTE PTR ds:[esi]
  41822a:	cld    
  41822b:	rcl    DWORD PTR [edx-0x47],1
  41822e:	inc    BYTE PTR [esi]
  418230:	or     BYTE PTR [ebp+ebx*8-0x4846ae12],0x18
  418238:	je     0x418297
  41823a:	test   ah,dh
  41823c:	stos   DWORD PTR es:[edi],eax
  41823d:	push   esi
  41823e:	sub    al,0x0
  418240:	xchg   DWORD PTR [edx+eiz*1],ebx
  418243:	mov    bh,0x5f
  418245:	jge    0x41822c
  418247:	jbe    0x418258
  418249:	mov    WORD PTR [eax-0x30],fs
  41824c:	out    0xc9,eax
  41824e:	test   DWORD PTR [ecx+eax*4+0x69096fa],ebx
  418255:	xor    cl,BYTE PTR [ecx-0x74c605a2]
  41825b:	iret   
  41825c:	or     DWORD PTR [edx],edx
  41825e:	or     eax,0x92f3c032
  418263:	stos   BYTE PTR es:[edi],al
  418264:	sbb    ecx,0xffffffcb
  418267:	add    DWORD PTR [edx-0x7e811c66],0x4
  41826e:	mov    ecx,edx
  418270:	pop    es
  418271:	inc    BYTE PTR [eax]
  418273:	inc    esp
  418274:	mov    cl,bh
  418276:	shr    DWORD PTR [edi-0x398c3527],cl
  41827c:	or     DWORD PTR [esi+eiz*2+0x39],0xec66f1ed
  418284:	ins    BYTE PTR es:[edi],dx
  418285:	jge    0x41828a
  418287:	ins    BYTE PTR es:[edi],dx
  418288:	retf   
  418289:	out    0xb9,al
  41828b:	js     0x4182cd
  41828d:	dec    ebp
  41828e:	and    ecx,esi
  418290:	cdq    
  418291:	das    
  418292:	ret    
  418293:	call   0x1640:0xebc8ad1a
  41829a:	add    DWORD PTR [ecx+0x25],eax
  41829d:	lock js 0x41830d
  4182a0:	bound  ebx,QWORD PTR [ebp+0x583e9fe9]
  4182a6:	adc    DWORD PTR [esi+0x14a3242d],edi
  4182ac:	cdq    
  4182ad:	jns    0x4182f3
  4182af:	pop    edi
  4182b0:	xchg   esi,eax
  4182b1:	mov    bl,0xd
  4182b3:	hlt    
  4182b4:	fsub   DWORD PTR [edi+edi*2+0x36]
  4182b8:	loopne 0x4182a3
  4182ba:	xor    ebp,DWORD PTR [ecx-0x14]
  4182bd:	jae    0x418314
  4182bf:	pop    ss
  4182c0:	ins    BYTE PTR es:[edi],dx
  4182c1:	lods   eax,DWORD PTR ds:[esi]
  4182c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182c3:	mov    ds:0x5f5481a,eax
  4182c8:	fidivr WORD PTR [esp+ebx*2+0x54f616ed]
  4182cf:	call   0xead5:0xd764ce94
  4182d6:	lea    edi,[edi+0x10]
  4182d9:	test   DWORD PTR [edx],eax
  4182db:	dec    esi
  4182dc:	jbe    0x41828e
  4182de:	(bad)  
  4182df:	fstp   QWORD PTR [edi+0x2]
  4182e2:	xchg   esi,eax
  4182e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182e4:	je     0x4182dc
  4182e6:	lahf   
  4182e7:	loopne 0x418332
  4182e9:	and    al,0xe
  4182eb:	(bad)  
  4182ec:	mov    dl,BYTE PTR [edx-0x69]
  4182ef:	adc    eax,0x54c8ae35
  4182f4:	cld    
  4182f5:	(bad)  
  4182f6:	ret    0x3cc5
  4182f9:	cmp    al,0xce
  4182fb:	push   eax
  4182fc:	jl     0x418303
  4182fe:	push   ebp
  4182ff:	adc    BYTE PTR [ebp+eax*8-0x65],ah
  418303:	inc    eax
  418304:	dec    esi
  418305:	(bad)  
  418306:	mov    dh,0x4a
  418308:	jle    0x41835c
  41830a:	outs   dx,DWORD PTR ds:[esi]
  41830b:	push   ds
  41830c:	in     eax,0xc8
  41830e:	call   0xd91566a5
  418313:	inc    esp
  418314:	xchg   ebp,eax
  418315:	call   0x5179:0x5d9f9d61
  41831c:	pop    eax
  41831d:	pop    es
  41831e:	xor    BYTE PTR [ebx],ch
  418320:	out    0x35,eax
  418322:	repz shl BYTE PTR [ecx-0x6],cl
  418326:	stos   BYTE PTR es:[edi],al
  418327:	jg     0x4182db
  418329:	pop    ss
  41832a:	mov    DWORD PTR ds:0x7a85ef7e,eax
  418330:	xchg   DWORD PTR [ebx-0x66],ebp
  418333:	gs mov ebx,0xfe2dfd37
  418339:	into   
  41833a:	push   edi
  41833b:	push   0xffffff93
  41833d:	cmp    BYTE PTR [eax],dl
  41833f:	mov    WORD PTR [ebx],?
  418341:	add    eax,0x2a17056f
  418346:	ds pusha 
  418348:	sub    DWORD PTR [ecx+0x27],ebp
  41834b:	outs   dx,DWORD PTR ds:[esi]
  41834c:	jecxz  0x418386
  41834e:	xor    dl,cl
  418350:	cmp    DWORD PTR [ecx+0x1c],ebx
  418353:	mov    bl,0x80
  418355:	dec    ebp
  418356:	cwde   
  418357:	iret   
  418358:	lods   eax,DWORD PTR ds:[esi]
  418359:	cmp    DWORD PTR [esi+ebx*8+0x3],ebx
  41835d:	cmc    
  41835e:	ror    BYTE PTR [esi],cl
  418360:	or     eax,0x28d5be80
  418365:	add    al,0x52
  418367:	cmp    eax,0xf05e9df2
  41836c:	mov    DWORD PTR [ecx-0x64],edi
  41836f:	xor    eax,edx
  418371:	dec    eax
  418372:	pop    esi
  418373:	scas   eax,DWORD PTR es:[edi]
  418374:	xchg   BYTE PTR [esi],bh
  418376:	fdivrp st(5),st
  418378:	xlat   BYTE PTR ds:[ebx]
  418379:	add    eax,0x306cdf59
  41837e:	(bad)  
  41837f:	in     al,0xee
  418381:	inc    edx
  418382:	or     al,0xb
  418384:	(bad)  
  418385:	cmp    eax,0x69fcd473
  41838a:	jns    0x418318
  41838c:	and    al,0x2c
  41838e:	fsubr  DWORD PTR [ebp-0x51]
  418391:	lahf   
  418392:	scas   al,BYTE PTR es:[edi]
  418393:	cmp    eax,0x34064cb0
  418398:	into   
  418399:	xor    BYTE PTR [esi],0xf
  41839c:	xor    ebx,DWORD PTR [edi+0x4c775ce]
  4183a2:	push   edx
  4183a3:	or     ecx,eax
  4183a5:	arpl   WORD PTR [ecx-0x2b],si
  4183a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183a9:	cli    
  4183aa:	test   DWORD PTR [esi+eiz*1+0x74],ebp
  4183ae:	outs   dx,DWORD PTR ds:[esi]
  4183af:	adc    BYTE PTR [ecx],cl
  4183b1:	(bad)  
  4183b2:	imul   ecx,DWORD PTR [edi],0xffffffb6
  4183b5:	sub    BYTE PTR [ebp+esi*1+0x4d],ah
  4183b9:	sar    BYTE PTR [ecx],1
  4183bb:	xchg   ebx,eax
  4183bc:	jmp    0x1e1c:0x99fe2838
  4183c3:	loope  0x4183b4
  4183c5:	(bad)  
  4183c6:	cli    
  4183c7:	cmp    ebx,DWORD PTR [ecx]
  4183c9:	pop    ecx
  4183ca:	fs xchg ecx,eax
  4183cc:	je     0x41841d
  4183ce:	popa   
  4183cf:	(bad)  
  4183d0:	stc    
  4183d1:	mov    esi,0xa0171177
  4183d6:	jecxz  0x418374
  4183d8:	mov    BYTE PTR [ebx+0x76],dl
  4183db:	scas   eax,DWORD PTR es:[edi]
  4183dc:	pop    ebx
  4183dd:	jle    0x418417
  4183df:	jno    0x418455
  4183e1:	sar    DWORD PTR [eax-0x7345ccb6],1
  4183e7:	mov    cl,0xdd
  4183e9:	xor    edi,DWORD PTR [esi+0x3d]
  4183ec:	dec    ecx
  4183ed:	test   DWORD PTR [eax-0x64],esi
  4183f0:	cs dec ebp
  4183f2:	xchg   edx,eax
  4183f3:	mov    ah,0xf1
  4183f5:	xchg   ebx,eax
  4183f6:	jo     0x418406
  4183f8:	call   FWORD PTR [esi+0x55]
  4183fb:	jp     0x41843e
  4183fd:	jmp    0x5c8eeef9
  418402:	out    0xd2,al
  418404:	(bad)
  418407:	push   ebx
  418408:	sub    BYTE PTR [edi],bh
  41840a:	jns    0x41839e
  41840c:	pop    ds
  41840d:	adc    bh,BYTE PTR [edx]
  41840f:	cmp    BYTE PTR [edi-0x72ff7636],bl
  418415:	cmc    
  418416:	pop    ebp
  418417:	rcl    BYTE PTR [ebx+0x61],1
  41841a:	mov    BYTE PTR [edi-0x25],al
  41841d:	dec    ebx
  41841e:	ret    0xc712
  418421:	and    BYTE PTR [ebp+ebx*4-0x24],al
  418425:	xchg   DWORD PTR [ecx+eax*1+0x50],ebp
  418429:	inc    eax
  41842a:	xor    DWORD PTR [eax],edi
  41842c:	test   DWORD PTR [eax+0x5b],edi
  41842f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418430:	adc    eax,0xf6b17958
  418435:	xor    al,0xab
  418437:	rcl    DWORD PTR [ebx],1
  418439:	cmc    
  41843a:	jbe    0x418455
  41843c:	jo     0x4184b6
  41843e:	mov    esp,0x3821274
  418443:	mov    ds,WORD PTR [esi-0x449aaeb6]
  418449:	push   ebp
  41844a:	inc    ecx
  41844b:	jp     0x418477
  41844d:	add    DWORD PTR [ecx],esi
  41844f:	into   
  418450:	xchg   edx,eax
  418451:	dec    ebp
  418452:	fcom   st(2)
  418454:	mov    ecx,0x985c1915
  418459:	je     0x4184a6
  41845b:	dec    edx
  41845c:	ret    0x35e3
  41845f:	adc    BYTE PTR [esp+ebx*8-0x51ed365],bh
  418466:	add    DWORD PTR [eax+0x7c],ecx
  418469:	push   eax
  41846a:	jl     0x41840a
  41846c:	sbb    ah,ah
  41846e:	packssdw mm6,QWORD PTR [edx]
  418471:	sahf   
  418472:	dec    edi
  418473:	jg     0x418452
  418475:	pop    ebp
  418476:	push   edi
  418477:	fadd   DWORD PTR [ebp+0x607d9dff]
  41847d:	add    al,BYTE PTR [ebx-0xd247393]
  418483:	fnstenv [ecx+0x47]
  418486:	lock xor eax,0x3ce4efb3
  41848c:	pop    es
  41848d:	sti    
  41848e:	int    0x42
  418490:	or     al,0x76
  418492:	jle    0x4184ac
  418494:	push   edx
  418495:	push   edi
  418496:	jge    0x418507
  418498:	rcr    BYTE PTR [edi+0x4e37d29d],cl
  41849e:	arpl   WORD PTR [ebx-0x72],di
  4184a1:	rcr    BYTE PTR ss:[edx+0x277a1d1],cl
  4184a8:	and    al,0x51
  4184aa:	sub    al,0x6b
  4184ac:	into   
  4184ad:	loopne 0x4184db
  4184af:	cwde   
  4184b0:	out    0xaa,eax
  4184b2:	aam    0xa4
  4184b4:	imul   edi,DWORD PTR [ecx-0x1b],0x5c
  4184b8:	out    0xd4,al
  4184ba:	xchg   edx,eax
  4184bb:	mov    ch,0xf0
  4184bd:	js     0x4184e1
  4184bf:	cmp    al,0x3d
  4184c1:	and    BYTE PTR [ecx],0x7f
  4184c4:	push   edx
  4184c5:	sub    eax,esi
  4184c7:	mov    bh,0xd9
  4184c9:	jl     0x4184ff
  4184cb:	pusha  
  4184cc:	dec    ebp
  4184cd:	mov    cl,0x66
  4184cf:	dec    eax
  4184d0:	fiadd  WORD PTR [ebx]
  4184d2:	jae    0x4184cf
  4184d4:	sahf   
  4184d5:	xchg   ebx,eax
  4184d6:	or     BYTE PTR [eax+0x53ecc004],ch
  4184dc:	inc    edi
  4184dd:	mov    dh,BYTE PTR [ecx]
  4184df:	mov    DWORD PTR [edx-0x6e],edi
  4184e2:	xor    al,0x2c
  4184e4:	add    ebp,ebx
  4184e6:	les    ecx,FWORD PTR [edx+0x5990ff13]
  4184ec:	popa   
  4184ed:	or     eax,DWORD PTR [edi-0x3a688124]
  4184f3:	pop    edi
  4184f4:	and    DWORD PTR [ecx],edi
  4184f6:	arpl   WORD PTR [edx+ebx*2+0x5b],bp
  4184fa:	dec    edx
  4184fb:	push   ebp
  4184fc:	adc    eax,0x8d2ee76e
  418501:	lea    esp,[edi+esi*1]
  418504:	push   ebp
  418505:	hlt    
  418506:	rol    cl,0xa
  418509:	(bad)  
  41850a:	sahf   
  41850b:	and    eax,0x703d06c
  418510:	cwde   
  418511:	or     BYTE PTR cs:[ecx],0x99
  418515:	cld    
  418516:	pop    eax
  418517:	sbb    al,0x2
  418519:	(bad)
  41851c:	xchg   ebp,eax
  41851d:	aad    0xc5
  41851f:	aas    
  418520:	dec    ebp
  418521:	call   0xbadf:0x98656454
  418528:	xor    eax,0x945be6f1
  41852d:	lods   al,BYTE PTR ds:[esi]
  41852e:	inc    eax
  41852f:	pop    ebp
  418530:	dec    esi
  418531:	ins    DWORD PTR es:[edi],dx
  418532:	jb     0x418508
  418534:	lock aaa 
  418536:	pop    es
  418537:	mov    ah,bh
  418539:	ins    BYTE PTR es:[edi],dx
  41853a:	mov    bl,0x9e
  41853c:	mov    al,ds:0x42668216
  418541:	xchg   DWORD PTR [eax+0x6c],edi
  418544:	cmp    eax,0x783cead0
  418549:	jl     0x418531
  41854b:	push   ebx
  41854c:	inc    ebp
  41854d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41854e:	inc    edi
  41854f:	out    dx,al
  418550:	mov    dh,0xec
  418552:	out    0x3,eax
  418554:	loopne 0x41850c
  418556:	xlat   BYTE PTR ds:[ebx]
  418557:	ja     0x41859f
  418559:	ret    0x3c0f
  41855c:	dec    edx
  41855d:	dec    eax
  41855e:	mov    eax,ds:0x5486ecb0
  418563:	mov    BYTE PTR [edi-0x2c5cbc3c],al
  418569:	aam    0x18
  41856b:	jl     0x41857a
  41856d:	jns    0x418565
  41856f:	push   ebx
  418570:	div    dl
  418572:	pop    edx
  418573:	out    0x2d,al
  418575:	lahf   
  418576:	lods   eax,DWORD PTR ds:[esi]
  418577:	add    edx,0xe6e91ece
  41857d:	push   ss
  41857e:	jecxz  0x41856b
  418580:	and    DWORD PTR [ebx-0x7a],eax
  418583:	add    esp,DWORD PTR [esi]
  418585:	xor    al,0x99
  418587:	mov    eax,DWORD PTR [edi]
  418589:	jb     0x41856f
  41858b:	into   
  41858c:	ins    BYTE PTR es:[edi],dx
  41858d:	jne    0x4185ba
  41858f:	adc    eax,DWORD PTR [ecx+0x44]
  418592:	jbe    0x4185f8
  418594:	test   BYTE PTR [ecx-0x559a17ab],0x0
  41859b:	lods   al,BYTE PTR ds:[esi]
  41859c:	jae    0x41860b
  41859e:	ret    
  41859f:	dec    eax
  4185a0:	cmp    al,0x51
  4185a2:	and    al,0x6c
  4185a4:	add    eax,0x4b974a8e
  4185a9:	mov    dh,0xb4
  4185ab:	shl    ch,cl
  4185ad:	dec    ecx
  4185ae:	jno    0x418623
  4185b0:	push   ebp
  4185b1:	out    0xb8,al
  4185b3:	adc    dh,BYTE PTR ds:0x9190
  4185b8:	pop    esp
  4185b9:	shr    BYTE PTR [ecx],cl
  4185bb:	frstor [edi]
  4185bd:	cdq    
  4185be:	test   BYTE PTR [ebp-0x78],cl
  4185c1:	cmp    dl,BYTE PTR [edx-0x1ab06e8d]
  4185c7:	push   ss
  4185c8:	sub    esi,ebp
  4185ca:	mov    esi,0xfd398616
  4185cf:	hlt    
  4185d0:	push   ds
  4185d1:	pop    edx
  4185d2:	sbb    eax,0x8f99605d
  4185d7:	outs   dx,DWORD PTR ds:[esi]
  4185d8:	idiv   DWORD PTR [ecx+0x3d60296b]
  4185de:	repnz ds sub esi,esi
  4185e2:	leave  
  4185e3:	jne    0x41856b
  4185e5:	jne    0x4185bb
  4185e7:	inc    esp
  4185e8:	add    eax,0xfdb26c4d
  4185ed:	pop    ecx
  4185ee:	and    al,0x79
  4185f0:	loope  0x41863e
  4185f2:	add    bl,dh
  4185f4:	loopne 0x418607
  4185f6:	jno    0x418608
  4185f8:	pop    ebx
  4185f9:	and    DWORD PTR [esi-0x67],esi
  4185fc:	mov    esp,0x74a3bd8c
  418601:	test   eax,0xc991096d
  418606:	mov    cl,BYTE PTR [ebx+0xc]
  418609:	test   DWORD PTR [edi-0x4c6fe096],ebx
  41860f:	jae    0x418634
  418611:	bound  esp,QWORD PTR [edi-0x5]
  418614:	push   eax
  418615:	rcl    BYTE PTR [ebx-0x6a249045],cl
  41861b:	mov    bh,0xac
  41861d:	aam    0xb4
  41861f:	(bad)  
  418620:	leave  
  418621:	test   eax,0xf6302c3d
  418626:	inc    edx
  418627:	push   esi
  418628:	sbb    DWORD PTR [ecx+0x744a060],0x7d
  41862f:	pop    edi
  418630:	cwde   
  418631:	cmp    eax,0x464fff8c
  418636:	inc    ebx
  418637:	ret    0x9b72
  41863a:	sar    DWORD PTR [esi+0x5a],1
  41863d:	popf   
  41863e:	jno    0x41865d
  418640:	mov    ebx,0x69f28aa1
  418645:	leave  
  418646:	mov    ds:0xc7808629,eax
  41864b:	push   es
  41864c:	mov    ebx,0xf0c6e749
  418651:	rol    BYTE PTR [edx+0x31],0xb2
  418655:	std    
  418656:	push   ebx
  418657:	xchg   esp,eax
  418658:	pusha  
  418659:	(bad)  
  41865a:	lahf   
  41865b:	cmp    al,0x2b
  41865d:	call   0xc116de6b
  418662:	rol    BYTE PTR [ecx+0x7ed9c759],0xdd
  418669:	and    esp,edx
  41866b:	adc    edi,ecx
  41866d:	fadd   DWORD PTR [eax-0x6b]
  418670:	test   esi,edx
  418672:	fdiv   QWORD PTR [edi-0x50262669]
  418678:	sbb    BYTE PTR ds:0x826bb248,ah
  41867e:	inc    eax
  41867f:	call   0xcd43:0x1e26b8d3
  418686:	xchg   esi,eax
  418687:	sbb    BYTE PTR cs:[eax+0x9],ah
  41868b:	lods   al,BYTE PTR ds:[esi]
  41868c:	adc    ebp,DWORD PTR [eax]
  41868e:	pop    ecx
  41868f:	jge    0x4186ed
  418691:	xchg   edx,eax
  418692:	loop   0x41863f
  418694:	cmp    al,0x23
  418696:	ret    
  418697:	stos   BYTE PTR es:[edi],al
  418698:	adc    BYTE PTR [eax+ebx*8+0x14764845],bl
  41869f:	and    dl,0x59
  4186a2:	cmp    BYTE PTR [esi-0x32],cl
  4186a5:	push   0xffffff92
  4186a7:	(bad)  
  4186aa:	mov    al,ds:0x30a29384
  4186af:	ret    0xefd
  4186b2:	or     eax,0xefee48c0
  4186b7:	cmp    bh,al
  4186b9:	sahf   
  4186ba:	iret   
  4186bb:	pop    ds
  4186bc:	xor    ah,BYTE PTR [eax-0x39]
  4186bf:	mov    eax,ds:0x8a52a5df
  4186c4:	inc    edi
  4186c5:	stos   BYTE PTR es:[edi],al
  4186c6:	mov    cl,0xb6
  4186c8:	(bad)  
  4186c9:	or     BYTE PTR es:[edi],ah
  4186cc:	cdq    
  4186cd:	xor    dl,ch
  4186cf:	cmp    BYTE PTR [ebx+ebp*8+0x6895a67f],0x3
  4186d7:	mov    esi,0x8d46a91e
  4186dc:	jecxz  0x41873c
  4186de:	popf   
  4186df:	cld    
  4186e0:	fstp   QWORD PTR [esp+eax*1]
  4186e3:	adc    ch,bh
  4186e5:	in     eax,dx
  4186e6:	sbb    al,0x1b
  4186e8:	outs   dx,BYTE PTR ds:[esi]
  4186e9:	add    DWORD PTR [esi+esi*2+0x7a2045b5],ecx
  4186f0:	adc    ebp,edx
  4186f2:	adc    cl,BYTE PTR [ebx]
  4186f4:	fldcw  WORD PTR [esi-0xe580119]
  4186fa:	aam    0xfd
  4186fc:	xor    eax,0x7e5f539e
  418701:	xchg   edi,eax
  418702:	mov    DWORD PTR [edi+esi*2],ebp
  418705:	ret    
  418706:	mov    eax,0x4d5aa34f
  41870b:	push   eax
  41870c:	loop   0x418765
  41870e:	icebp  
  41870f:	lds    ebx,FWORD PTR [ecx-0x22]
  418712:	push   esp
  418714:	stos   BYTE PTR es:[edi],al
  418715:	rol    esi,1
  418717:	in     eax,0x3
  418719:	push   ecx
  41871a:	xchg   ecx,eax
  41871b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41871c:	imul   ecx,DWORD PTR [ebx+ecx*2-0x56],0xffffff8e
  418721:	pop    es
  418722:	mov    DWORD PTR [ebx-0x5f],edi
  418725:	or     DWORD PTR [ebp+0x1ba979d4],esi
  41872b:	push   ebp
  41872c:	stc    
  41872d:	cmp    al,0x67
  41872f:	stos   DWORD PTR es:[edi],eax
  418730:	add    al,0xde
  418732:	ficomp DWORD PTR [esi]
  418734:	sub    DWORD PTR [ecx+0x42],eax
  418737:	mov    ch,bl
  418739:	push   esi
  41873a:	fadd   QWORD PTR [eax-0x48]
  41873d:	cmp    ch,BYTE PTR [ebx+ebp*8-0x3c44a79]
  418744:	jb     0x4187a2
  418746:	es cdq 
  418748:	xor    bh,BYTE PTR [ebx-0x78e664a6]
  41874e:	out    0x26,eax
  418750:	push   edi
  418751:	jb     0x41872f
  418753:	mov    ah,0x20
  418755:	pop    eax
  418756:	mov    cl,0xf2
  418758:	fdiv   QWORD PTR [ecx-0x3bdc4233]
  41875e:	je     0x4187a9
  418760:	jns    0x418793
  418762:	lock push cs
  418764:	imul   eax,esp,0x1a
  418767:	xor    DWORD PTR [ebp+0x42],esp
  41876a:	icebp  
  41876b:	and    BYTE PTR [ebx+0x3e1e0f66],ah
  418771:	outs   dx,DWORD PTR ds:[esi]
  418772:	dec    esp
  418773:	pop    ds
  418774:	(bad)  
  418775:	mov    al,0xef
  418777:	(bad)  
  418778:	pop    ds
  418779:	xchg   DWORD PTR ss:[ebp+0x131c4320],ebx
  418780:	repnz sbb eax,0x10487287
  418786:	dec    ebp
  418787:	xor    al,0xc8
  418789:	mov    al,0x8d
  41878b:	dec    edi
  41878c:	xchg   edx,eax
  41878d:	arpl   WORD PTR [eax],bp
  41878f:	jge    0x418724
  418791:	mov    eax,0xda0530e5
  418796:	push   esp
  418797:	xlat   BYTE PTR ds:[ebx]
  418798:	fld    TBYTE PTR [edi+eiz*1-0x4904652c]
  41879f:	sbb    DWORD PTR [edx],0xffffff88
  4187a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187a3:	scas   eax,DWORD PTR es:[edi]
  4187a4:	pop    eax
  4187a5:	xchg   edi,edi
  4187a7:	repnz das 
  4187a9:	inc    edx
  4187aa:	and    ebp,eax
  4187ac:	leave  
  4187ad:	inc    ebx
  4187ae:	or     dl,BYTE PTR [eax+0x59cb336b]
  4187b4:	sub    ecx,DWORD PTR [ebp-0x2a]
  4187b7:	pushf  
  4187b8:	mov    ds:0x6e4314d1,eax
  4187bd:	rcl    bh,1
  4187bf:	rcl    ecx,cl
  4187c1:	fdivrp st(5),st
  4187c3:	mov    ds:0x948297b1,eax
  4187c8:	mov    bh,dl
  4187ca:	fild   WORD PTR [eax+edi*8-0x2afa15ba]
  4187d1:	test   ebx,0xca83674d
  4187d7:	shr    BYTE PTR [esi],cl
  4187d9:	lahf   
  4187da:	sbb    DWORD PTR [edx+0x28],esi
  4187dd:	cwde   
  4187de:	or     BYTE PTR [ebx],ch
  4187e0:	push   esi
  4187e1:	inc    ecx
  4187e2:	mov    BYTE PTR [ecx-0x4c],bl
  4187e5:	enter  0x3e22,0x8c
  4187e9:	shl    ch,1
  4187eb:	leave  
  4187ec:	xor    DWORD PTR [eax+0x6abc21ae],eax
  4187f2:	inc    esp
  4187f3:	add    ebx,DWORD PTR [edx+0x6286b15a]
  4187f9:	neg    DWORD PTR [ecx-0x6a498fed]
  4187ff:	mov    es,WORD PTR [ebx]
  418801:	sti    
  418802:	add    eax,0x32fba0dc
  418807:	arpl   ax,di
  418809:	scas   eax,DWORD PTR es:[edi]
  41880a:	mov    cl,0x37
  41880c:	sub    dl,BYTE PTR [eax]
  41880e:	mov    ecx,0x282b443c
  418813:	test   al,0x52
  418815:	and    eax,0xa74fec3b
  41881a:	(bad)  
  41881b:	xchg   esi,eax
  41881c:	inc    ecx
  41881d:	ror    DWORD PTR [ebx+ecx*4+0x7908cfc3],1
  418824:	add    DWORD PTR [ebx+0x5c0f95b8],ecx
  41882a:	add    bh,BYTE PTR [esi]
  41882c:	mov    esi,DWORD PTR [esi+0xa]
  41882f:	sub    esp,DWORD PTR [eax+0x6a23cc77]
  418835:	xchg   ebp,eax
  418836:	rcr    DWORD PTR [ebx-0x53],1
  418839:	es xchg ebx,eax
  41883b:	rcl    DWORD PTR [edi],0x29
  41883e:	jae    0x4187ce
  418840:	enter  0x8d81,0x9f
  418844:	inc    esp
  418845:	mov    edx,0xc766ea59
  41884a:	and    dl,BYTE PTR [ecx]
  41884c:	pop    eax
  41884d:	xor    edx,ecx
  41884f:	daa    
  418850:	push   ebx
  418851:	fs sti 
  418853:	dec    edx
  418854:	sbb    al,0x90
  418856:	outs   dx,BYTE PTR ds:[esi]
  418857:	xor    ebx,DWORD PTR [ecx]
  418859:	fld    TBYTE PTR [esi-0x6]
  41885c:	int3   
  41885d:	hlt    
  41885e:	inc    ebp
  41885f:	sbb    ah,dl
  418861:	ror    DWORD PTR ds:0x51b687e2,1
  418867:	fwait
  418868:	dec    ebx
  418869:	jge    0x4188aa
  41886b:	sbb    BYTE PTR [edx+0x52],dl
  41886e:	adc    bl,BYTE PTR [ebp+0x6a2432ad]
  418874:	test   al,0x92
  418876:	inc    edi
  418877:	cmp    eax,0xeec1b9f3
  41887c:	shr    DWORD PTR [edx+0x71614e13],cl
  418882:	jmp    0x18ea:0x84e34ddc
  418889:	mov    eax,0xec124a07
  41888e:	into   
  41888f:	adc    al,0xa3
  418891:	cmp    eax,ebx
  418893:	push   0x77633789
  418898:	cli    
  418899:	xchg   ecx,eax
  41889a:	jle    0x418850
  41889c:	mov    ch,0xcf
  41889e:	ret    0x4978
  4188a1:	jg     0x41891b
  4188a3:	xchg   edi,eax
  4188a4:	stos   DWORD PTR es:[edi],eax
  4188a5:	sub    dl,BYTE PTR [ebp+0x42fa007f]
  4188ab:	pop    edx
  4188ac:	jg     0x418925
  4188ae:	or     ebx,edx
  4188b0:	pop    es
  4188b1:	adc    dh,BYTE PTR [ebp-0x7]
  4188b4:	call   0xfa5a5950
  4188b9:	jnp    0x41885c
  4188bb:	jecxz  0x4188b6
  4188bd:	repz jmp 0x647cc2a0
  4188c3:	mov    fs,WORD PTR [eax]
  4188c5:	aaa    
  4188c6:	in     al,dx
  4188c7:	push   edx
  4188c8:	test   DWORD PTR [ebx-0x32],esi
  4188cb:	xchg   eax,ebx
  4188cd:	push   eax
  4188ce:	mov    edx,0xc58828c8
  4188d3:	push   eax
  4188d4:	jae    0x418950
  4188d6:	xor    esi,DWORD PTR [ebp-0x12]
  4188d9:	outs   dx,BYTE PTR ds:[esi]
  4188da:	inc    ecx
  4188db:	add    edi,DWORD PTR [edx]
  4188dd:	rcr    BYTE PTR [ecx-0x6e],cl
  4188e0:	daa    
  4188e1:	fs xchg esi,eax
  4188e3:	sub    BYTE PTR [edi*1-0x33272b9],al
  4188ea:	or     ebx,DWORD PTR [ebp+0x6a]
  4188ed:	push   eax
  4188ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188ef:	mov    edi,0xbf62ea86
  4188f4:	neg    BYTE PTR [ebx]
  4188f6:	xchg   ebx,eax
  4188f7:	lods   eax,DWORD PTR ds:[esi]
  4188f8:	loopne 0x41894a
  4188fa:	sti    
  4188fb:	mov    esp,0x185b360a
  418900:	xor    BYTE PTR [edx+0x62],al
  418903:	xlat   BYTE PTR ds:[ebx]
  418904:	(bad)  
  418905:	cld    
  418906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418907:	in     al,dx
  418908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418909:	xor    DWORD PTR [ebp-0x60ab24],0x74122fe3
  418913:	sbb    ch,BYTE PTR [ecx-0x57]
  418916:	mov    ecx,0xd5d35a24
  41891b:	fcomi  st,st(3)
  41891d:	std    
  41891e:	out    dx,eax
  41891f:	inc    eax
  418920:	mov    bl,0xf8
  418922:	rcr    BYTE PTR [ebx-0x2b],0x7d
  418926:	mov    ah,0x6a
  418928:	je     0x4188bf
  41892a:	sbb    DWORD PTR [esi+0x43fb43db],ebx
  418930:	imul   edx,DWORD PTR [bx+si-0x7f],0x534db987
  418938:	scas   al,BYTE PTR es:[edi]
  418939:	jp     0x4189b0
  41893b:	push   edx
  41893c:	mov    esp,0x914aecb0
  418941:	mov    BYTE PTR [esi],cl
  418943:	mov    ecx,0x297bdb4e
  418948:	mov    bh,0xd3
  41894a:	and    dl,BYTE PTR [edx+0x15]
  41894d:	inc    esi
  41894e:	jecxz  0x4189a4
  418950:	cwde   
  418951:	das    
  418952:	rcr    esi,cl
  418954:	cmc    
  418955:	ja     0x4189bd
  418957:	add    eax,0x6159a4f6
  41895c:	lods   eax,DWORD PTR ds:[esi]
  41895d:	dec    esp
  41895e:	adc    edx,edi
  418960:	or     BYTE PTR [ecx],ah
  418962:	arpl   cx,sp
  418964:	push   ebp
  418965:	mov    eax,ds:0x23dff94a
  41896a:	iret   
  41896b:	pop    ebp
  41896c:	sub    ah,bl
  41896e:	xchg   ecx,ecx
  418970:	ins    BYTE PTR es:[edi],dx
  418971:	mov    dh,0x5f
  418973:	add    al,0x91
  418975:	ret    0x9bf0
  418978:	inc    edi
  418979:	outs   dx,BYTE PTR ds:[esi]
  41897a:	ss pop ebx
  41897c:	out    0xb6,al
  41897e:	or     esp,0x20c68e15
  418984:	dec    edi
  418985:	or     BYTE PTR [edi],ch
  418987:	and    al,0x25
  418989:	dec    edx
  41898a:	out    dx,eax
  41898b:	fsub   st,st(3)
  41898d:	(bad)  
  41898e:	jmp    0x41893c
  418990:	fcmovnb st,st(2)
  418992:	mov    ebp,0x208be80e
  418997:	jecxz  0x418948
  418999:	xchg   edx,eax
  41899a:	fnsave [ecx-0x13]
  41899d:	xchg   esi,eax
  41899e:	stos   BYTE PTR es:[edi],al
  41899f:	add    eax,0x2210fd98
  4189a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189a5:	push   cs
  4189a6:	das    
  4189a7:	daa    
  4189a8:	shl    eax,1
  4189aa:	mov    ds:0x52571bdc,eax
  4189af:	ret    
  4189b0:	mov    ds:0xd345a431,al
  4189b5:	and    eax,0x83ab70b2
  4189ba:	sbb    BYTE PTR [esi],al
  4189bc:	lods   eax,DWORD PTR ds:[esi]
  4189bd:	leave  
  4189be:	pusha  
  4189bf:	arpl   WORD PTR [edx-0x78eeab3a],sp
  4189c5:	and    DWORD PTR [ebp-0x10b13eb4],ebx
  4189cb:	push   es
  4189cc:	inc    ecx
  4189cd:	xchg   esi,eax
  4189ce:	scas   eax,DWORD PTR es:[edi]
  4189cf:	call   0x4aa6f20
  4189d4:	sbb    cl,BYTE PTR [eax-0x193b2a1a]
  4189da:	(bad)  
  4189db:	imul   ebx,DWORD PTR [ebp+0x6831bc5e],0x31
  4189e2:	adc    edx,edi
  4189e4:	scas   al,BYTE PTR es:[edi]
  4189e5:	and    DWORD PTR [edi+0x1a],ecx
  4189e8:	jo     0x4189db
  4189ea:	xchg   ecx,eax
  4189eb:	ret    0x8977
  4189ee:	es ret 0x6950
  4189f2:	dec    edx
  4189f3:	mov    ebx,0x8177a9e9
  4189f8:	fisttp QWORD PTR [edi+0x20869029]
  4189fe:	push   eax
  4189ff:	fxch   st(0)
  418a01:	clc    
  418a02:	cmp    eax,0x276f89c4
  418a07:	jo     0x4189cf
  418a09:	int3   
  418a0a:	mov    bh,0x73
  418a0c:	fld    DWORD PTR [ecx]
  418a0e:	fild   QWORD PTR [eax]
  418a10:	mov    ds:0x6c70b44c,al
  418a15:	mov    esi,0x25dc7b20
  418a1a:	ds mov ah,0x8a
  418a1d:	je     0x4189ff
  418a1f:	adc    eax,0x89e97c10
  418a24:	popf   
  418a25:	es mov ebp,0x7f906c94
  418a2b:	mov    edi,0x8fad2e38
  418a30:	push   esi
  418a31:	stc    
  418a32:	push   esp
  418a33:	jae    0x418a7c
  418a35:	or     eax,DWORD PTR cs:[ebx]
  418a38:	xor    ah,dl
  418a3a:	xor    eax,0x6e1f6386
  418a3f:	adc    edx,ebp
  418a41:	jecxz  0x418a9f
  418a43:	pop    edx
  418a44:	out    0x95,eax
  418a46:	lea    edx,[edi+0x1495f2ee]
  418a4c:	mov    bl,0x86
  418a4e:	jae    0x418a98
  418a50:	cmp    ebx,edi
  418a52:	xchg   ecx,eax
  418a53:	mov    ebx,0xfc4f6eb
  418a58:	cmp    al,0xc2
  418a5a:	call   0xac66:0x11a15735
  418a61:	rcl    BYTE PTR [edi+0x33fef18f],1
  418a67:	loopne 0x418a2b
  418a69:	sub    edx,ebx
  418a6b:	xor    eax,DWORD PTR [edi-0x6ce3b822]
  418a71:	inc    esp
  418a72:	jge    0x4189f7
  418a74:	fld    DWORD PTR [ebp-0x459f11eb]
  418a7a:	cmp    eax,0x5a8736df
  418a7f:	mov    esp,0xead94f77
  418a84:	jmp    0x556799b5
  418a89:	push   es
  418a8a:	mov    al,ds:0x3dd71ffe
  418a8f:	sbb    cl,BYTE PTR [eax]
  418a91:	ret    
  418a92:	repz scas al,BYTE PTR es:[edi]
  418a94:	(bad)  
  418a95:	(bad)  
  418a97:	push   ebp
  418a98:	stos   BYTE PTR es:[edi],al
  418a99:	cli    
  418a9a:	loope  0x418ac7
  418a9c:	adc    ecx,DWORD PTR [ecx-0x6b]
  418a9f:	mov    bl,0x31
  418aa1:	outs   dx,BYTE PTR ds:[esi]
  418aa2:	inc    edx
  418aa3:	in     eax,0xe7
  418aa5:	clc    
  418aa6:	pop    edx
  418aa7:	adc    al,0xc
  418aa9:	mov    ah,0xfd
  418aab:	test   eax,0xc13a91de
  418ab0:	mov    esi,0x53294a11
  418ab5:	add    eax,0x78b4035e
  418aba:	call   0x49d5:0x42aff192
  418ac1:	xchg   ebx,eax
  418ac2:	or     ah,BYTE PTR [edi]
  418ac4:	dec    esp
  418ac5:	mov    edi,0x18b1645
  418aca:	add    esp,DWORD PTR [ecx+0x4c64f135]
  418ad0:	cmc    
  418ad1:	in     eax,dx
  418ad2:	icebp  
  418ad3:	lahf   
  418ad4:	and    DWORD PTR [ebx+0x47],ebx
  418ad7:	mov    bh,0x69
  418ad9:	mov    DWORD PTR [esi+0x74a77f43],edi
  418adf:	mov    al,0x2f
  418ae1:	retf   
  418ae2:	add    eax,0xba181de3
  418ae7:	jl     0x418b27
  418ae9:	shl    BYTE PTR [edx],1
  418aeb:	sahf   
  418aec:	es enter 0xb0ea,0x0
  418af1:	cmp    eax,0x5dfab49
  418af6:	nop
  418af7:	(bad)  
  418af8:	not    BYTE PTR [ebp+ebx*4+0x20]
  418afc:	jg     0x418a8a
  418afe:	js     0x418b6d
  418b00:	jno    0x418b32
  418b02:	pop    ebx
  418b03:	inc    edi
  418b04:	leave  
  418b05:	(bad)
  418b08:	xor    eax,0xc9e28130
  418b0d:	popf   
  418b0e:	clc    
  418b0f:	mov    al,0x45
  418b11:	das    
  418b12:	mov    ebx,0x890197ae
  418b17:	xor    ebx,DWORD PTR [eax+0x40]
  418b1a:	xchg   BYTE PTR [edx+0x71],ah
  418b1d:	xor    eax,0x18ce6ef0
  418b22:	nop
  418b23:	pop    esp
  418b24:	mov    edi,0x55ae465b
  418b29:	xor    eax,0x82147e6e
  418b2e:	fwait
  418b2f:	sub    BYTE PTR [esi-0x5],ah
  418b32:	push   cs
  418b33:	jb     0x418af5
  418b35:	retf   0xf086
  418b38:	inc    ebp
  418b39:	scas   al,BYTE PTR es:[edi]
  418b3a:	aaa    
  418b3b:	and    eax,DWORD PTR [edi+0x7c]
  418b3e:	mov    ch,0xd8
  418b40:	inc    esp
  418b41:	icebp  
  418b42:	xchg   esp,eax
  418b43:	jmp    0xba90:0x30c0bf2c
  418b4a:	mov    ds:0xe2dd4013,eax
  418b4f:	retf   
  418b50:	int3   
  418b51:	cmp    BYTE PTR [edx-0x47],0xf7
  418b55:	sub    al,0x7a
  418b57:	xchg   cx,ax
  418b59:	dec    esp
  418b5a:	cmp    BYTE PTR [edi-0x16],cl
  418b5d:	test   al,0x67
  418b5f:	retf   
  418b60:	jnp    0x418b78
  418b62:	js     0x418bb5
  418b64:	mov    ss,WORD PTR es:[ebx+0x6aeddf00]
  418b6b:	xchg   ebx,eax
  418b6c:	push   ecx
  418b6d:	repnz ins BYTE PTR es:[edi],dx
  418b6f:	jo     0x418bc0
  418b71:	cmc    
  418b72:	mov    dh,0xfe
  418b74:	in     eax,0xc5
  418b76:	jbe    0x418b84
  418b78:	div    DWORD PTR [esi]
  418b7a:	das    
  418b7b:	ret    
  418b7c:	loop   0x418b1d
  418b7e:	fcomp  st(6)
  418b80:	and    DWORD PTR [ecx+0x3ca6cd2c],edx
  418b86:	or     dl,bh
  418b88:	xchg   esp,eax
  418b89:	mov    dl,0x91
  418b8b:	dec    edi
  418b8c:	not    BYTE PTR [eax]
  418b8e:	shl    DWORD PTR [ebp-0x6b790b51],0x33
  418b95:	call   0xaefbbd8f
  418b9a:	scas   eax,DWORD PTR es:[edi]
  418b9b:	xor    eax,0x19910177
  418ba0:	push   edx
  418ba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ba2:	adc    al,0xf8
  418ba4:	popa   
  418ba5:	addr16 out dx,al
  418ba7:	ins    DWORD PTR es:[edi],dx
  418ba8:	das    
  418ba9:	cmp    al,0x6a
  418bab:	inc    esi
  418bac:	cmp    esi,DWORD PTR [ebx+0x24aff6d]
  418bb2:	pusha  
  418bb3:	call   0x46d40d4e
  418bb8:	inc    edi
  418bb9:	(bad)  
  418bbb:	daa    
  418bbc:	gs cli 
  418bbe:	std    
  418bbf:	xor    al,0x16
  418bc1:	mov    esp,0x5d4ad8a5
  418bc6:	(bad)  
  418bc7:	(bad)  
  418bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bc9:	sbb    DWORD PTR [esi-0x6901abd6],ebx
  418bcf:	addr16 pop ebp
  418bd1:	call   0xab77:0xdce967d9
  418bd8:	stos   DWORD PTR es:[edi],eax
  418bd9:	arpl   ax,si
  418bdb:	xor    al,0x66
  418bdd:	adc    al,0x3d
  418bdf:	test   BYTE PTR [eax+0x21],dl
  418be2:	and    ebx,DWORD PTR [edi+ecx*1]
  418be5:	xchg   ebp,eax
  418be6:	xchg   esp,eax
  418be7:	mov    dl,0x93
  418be9:	outs   dx,BYTE PTR ds:[esi]
  418bea:	and    DWORD PTR [ecx-0x6373b2b5],esp
  418bf0:	add    edi,DWORD PTR [edi+0x7a]
  418bf3:	int3   
  418bf4:	and    al,0xc9
  418bf6:	pop    ebp
  418bf7:	hlt    
  418bf8:	ret    0xe973
  418bfb:	jbe    0x418c66
  418bfd:	inc    ebp
  418bfe:	(bad)  
  418bff:	call   0x61a90568
  418c04:	push   eax
  418c05:	xor    ebp,esp
  418c07:	out    0x43,al
  418c09:	(bad)  
  418c0b:	pop    edx
  418c0c:	ja     0x418bd2
  418c0e:	xchg   ebx,eax
  418c0f:	or     BYTE PTR [edx],cl
  418c11:	sysret 
  418c13:	rcl    DWORD PTR [ecx],0x2f
  418c16:	add    edx,esp
  418c18:	std    
  418c19:	push   ebx
  418c1a:	push   ss
  418c1b:	in     eax,0x4f
  418c1d:	les    ebp,FWORD PTR [edx-0x17]
  418c20:	stc    
  418c21:	aad    0xd4
  418c23:	dec    edx
  418c24:	std    
  418c25:	scas   eax,DWORD PTR es:[edi]
  418c26:	push   cs
  418c27:	pop    edi
  418c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c29:	jb     0x418c12
  418c2b:	aas    
  418c2c:	dec    esp
  418c2d:	pop    esp
  418c2e:	rcl    ecx,cl
  418c30:	pop    ebx
  418c31:	clc    
  418c32:	fisttp WORD PTR [ebx-0x3b762d0b]
  418c38:	(bad)  
  418c39:	mov    ebx,0x70450568
  418c3e:	sbb    al,0x7
  418c40:	xchg   esp,eax
  418c41:	and    DWORD PTR [ebp-0x1c],ecx
  418c44:	cmp    eax,0xeb8ddf8a
  418c49:	mov    eax,0x87e0301
  418c4e:	into   
  418c4f:	xor    esp,esi
  418c51:	mov    dl,0xaf
  418c53:	(bad)  
  418c55:	cmp    DWORD PTR [edi+0x23],ecx
  418c58:	inc    esp
  418c59:	ja     0x418ccf
  418c5b:	shr    ah,0xd6
  418c5e:	and    al,0x63
  418c60:	mov    ch,0xf1
  418c62:	ds dec edx
  418c64:	stos   DWORD PTR es:[edi],eax
  418c65:	push   esi
  418c66:	jg     0x418c6a
  418c68:	xor    DWORD PTR [edi+ebp*2],edx
  418c6b:	daa    
  418c6c:	ret    
  418c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c6e:	aas    
  418c6f:	ja     0x418c54
  418c71:	xchg   esp,eax
  418c72:	mov    DWORD PTR [ecx-0x5f],ebx
  418c75:	mov    ds:0xc1d0c4ef,al
  418c7a:	pop    ds
  418c7b:	(bad)  
  418c7c:	mov    bh,0x29
  418c7e:	into   
  418c7f:	icebp  
  418c80:	fsub   DWORD PTR [ecx]
  418c82:	ffree  st(1)
  418c84:	mov    esi,0x276701cc
  418c89:	adc    DWORD PTR [edx],esp
  418c8b:	fld    QWORD PTR [ebx-0x3eb6e295]
  418c91:	push   ecx
  418c92:	ss pop esi
  418c94:	push   edi
  418c95:	daa    
  418c96:	mov    ds:0x42a052ef,al
  418c9b:	adc    ebp,DWORD PTR [edi+0x779d5fa5]
  418ca1:	retf   
  418ca2:	icebp  
  418ca3:	call   0xa26513b9
  418ca8:	(bad)  
  418ca9:	jne    0x418ce6
  418cab:	jecxz  0x418ce1
  418cad:	cmp    eax,0x503e4a1b
  418cb2:	pop    edx
  418cb3:	push   ds
  418cb4:	imul   esi,esp,0x20
  418cb7:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cb9:	sahf   
  418cba:	sub    al,BYTE PTR [ebx-0xdba140b]
  418cc0:	push   ebp
  418cc1:	sbb    DWORD PTR [ecx-0x4f],ebx
  418cc4:	fmul   DWORD PTR [eax]
  418cc6:	pop    ss
  418cc7:	mov    al,ds:0xb946e631
  418ccc:	clc    
  418ccd:	popf   
  418cce:	push   edi
  418ccf:	jnp    0x418d26
  418cd1:	ss fs dec ebp
  418cd4:	js     0x418c73
  418cd6:	pop    ss
  418cd7:	mov    dl,al
  418cd9:	inc    ecx
  418cda:	dec    esp
  418cdb:	fbstp  TBYTE PTR [esi+0x6c]
  418cde:	cmp    al,BYTE PTR [ecx+0x1855a719]
  418ce4:	adc    dl,ah
  418ce6:	mov    ebx,0x2591e3d8
  418ceb:	and    BYTE PTR [esi+0x6b541218],0xf8
  418cf2:	rcl    DWORD PTR [ebx-0x4c],cl
  418cf5:	inc    esi
  418cf6:	test   DWORD PTR [ecx+0x6d],0x751acb62
  418cfd:	and    edi,0x1f
  418d00:	leave  
  418d01:	push   ebp
  418d02:	xor    DWORD PTR [ecx+0x15cbc8e7],ebx
  418d08:	mov    bh,0x8c
  418d0a:	stos   BYTE PTR es:[edi],al
  418d0b:	ss push es
  418d0d:	mov    esi,0x9d002d43
  418d12:	xor    bh,ah
  418d14:	inc    DWORD PTR [edx+0x7b]
  418d17:	xor    BYTE PTR [eax-0x5a],cl
  418d1a:	cmp    al,0x2c
  418d1c:	stos   BYTE PTR es:[edi],al
  418d1d:	pushf  
  418d1e:	(bad)  
  418d1f:	jmp    DWORD PTR [eax]
  418d21:	shr    BYTE PTR [eax+0x63b82696],1
  418d27:	jae    0x418d2a
  418d29:	data16 mov al,ds:0x2e19f6c3
  418d2f:	ins    BYTE PTR es:[edi],dx
  418d30:	inc    ebp
  418d31:	dec    esp
  418d32:	test   BYTE PTR [ebx+0x6e5c4862],ah
  418d38:	jnp    0x418da4
  418d3a:	cmp    BYTE PTR [esi-0x3f],dh
  418d3d:	adc    al,0x1f
  418d3f:	ret    
  418d40:	sub    BYTE PTR [ebx+ecx*1+0x739de5d6],dl
  418d47:	xor    DWORD PTR [ebx-0x45],esp
  418d4a:	popa   
  418d4b:	aaa    
  418d4c:	mov    ch,0xa6
  418d4e:	adc    ch,BYTE PTR [esi+0x68]
  418d51:	outs   dx,BYTE PTR ds:[esi]
  418d52:	lods   al,BYTE PTR ds:[esi]
  418d53:	in     eax,dx
  418d54:	mov    ds:0xc60bb627,eax
  418d59:	adc    ah,BYTE PTR [edi+eiz*4+0x1403e502]
  418d60:	xor    ch,ch
  418d62:	rcl    BYTE PTR [eax-0x79d084c8],1
  418d68:	lahf   
  418d69:	dec    esp
  418d6a:	fiadd  DWORD PTR [ebp-0x77cf7c29]
  418d70:	jmp    0xa96a:0x1f58297f
  418d77:	and    eax,0xf24910f4
  418d7c:	jle    0x418d9e
  418d7e:	mov    bh,0x15
  418d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d81:	sti    
  418d82:	lea    edi,[ebp+0x19a63103]
  418d88:	sbb    ah,BYTE PTR ds:0x67ddc82
  418d8e:	push   esp
  418d8f:	mov    BYTE PTR [esi+0x2e830bd8],bh
  418d95:	pusha  
  418d96:	int3   
  418d97:	shl    BYTE PTR [edi-0x38ab320e],1
  418d9d:	adc    edi,eax
  418d9f:	add    bh,BYTE PTR [ebx]
  418da1:	in     eax,0x39
  418da3:	dec    ebp
  418da4:	(bad)  
  418da6:	jle    0x418d39
  418da8:	mov    bl,0xd6
  418daa:	push   ss
  418dab:	mov    al,0x7a
  418dad:	sub    BYTE PTR [edx+0x19],bh
  418db0:	int3   
  418db1:	mov    WORD PTR [ebx-0x4e],gs
  418db4:	push   es
  418db5:	xlat   BYTE PTR ds:[ebx]
  418db6:	fild   WORD PTR [ebp-0x78]
  418db9:	xchg   edi,eax
  418dba:	in     eax,0xca
  418dbc:	sub    BYTE PTR [ecx],dh
  418dbe:	cmc    
  418dbf:	(bad)  
  418dc0:	out    dx,eax
  418dc1:	add    ah,BYTE PTR [esi-0x1d7b75e1]
  418dc7:	out    dx,al
  418dc8:	loopne 0x418e44
  418dca:	push   ebp
  418dcb:	popf   
  418dcc:	mov    DWORD PTR [edx-0x51],edi
  418dcf:	ret    0xa9a8
  418dd2:	(bad)  
  418dd3:	sar    BYTE PTR [edi+0x321c41ab],1
  418dd9:	lock ds push edx
  418ddc:	pop    ds
  418ddd:	call   DWORD PTR [edi-0x4d]
  418de0:	call   0x19ccffea
  418de5:	or     BYTE PTR [esi+0x6],dh
  418de8:	test   eax,0x1cc4da4
  418ded:	push   edi
  418dee:	xchg   edi,eax
  418def:	inc    ebp
  418df0:	inc    edx
  418df1:	sub    eax,0xb68f1fe0
  418df6:	arpl   WORD PTR [esi+0x75],bx
  418df9:	arpl   WORD PTR ds:0x238d1e86,sp
  418dff:	add    DWORD PTR [eax],ecx
  418e01:	mov    eax,0x76e0b6c0
  418e06:	pusha  
  418e07:	aam    0x67
  418e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e0a:	adc    eax,0x1f5dcd7a
  418e0f:	repnz in eax,0xb6
  418e12:	daa    
  418e13:	add    bl,0xe
  418e16:	xor    DWORD PTR ds:0x35d29c47,esi
  418e1c:	hlt    
  418e1d:	mov    bl,0x1b
  418e1f:	jg     0x418e1f
  418e21:	pop    ds
  418e22:	jmp    0x418dec
  418e24:	inc    edx
  418e25:	nop
  418e26:	sub    al,0xe9
  418e28:	and    edx,ebx
  418e2a:	xor    al,0xd7
  418e2c:	cmp    ch,cl
  418e2e:	xor    BYTE PTR [eax],ah
  418e30:	push   cs
  418e31:	jnp    0x418df7
  418e33:	jb     0x418e6c
  418e35:	mov    ecx,eax
  418e37:	pushf  
  418e38:	or     edi,DWORD PTR [eax-0x2a85bc8c]
  418e3e:	sbb    DWORD PTR [ebx-0x51],edi
  418e41:	rcl    ecx,0x6e
  418e44:	pusha  
  418e45:	xchg   edx,eax
  418e46:	xor    al,0x76
  418e48:	aad    0x2f
  418e4a:	mov    bl,0x6
  418e4c:	aas    
  418e4d:	loop   0x418e8c
  418e4f:	mov    ch,0x29
  418e51:	pop    esp
  418e52:	retf   
  418e53:	loopne 0x418e37
  418e55:	sbb    esi,edi
  418e57:	mov    DWORD PTR [eax+eax*2+0x6e],edx
  418e5b:	xor    al,BYTE PTR [edx]
  418e5d:	test   eax,0xd8ff23ec
  418e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e64:	push   eax
  418e65:	mov    ds:0x6272342a,al
  418e6a:	nop
  418e6b:	shl    DWORD PTR [edi+0x1051e1d6],cl
  418e71:	cwde   
  418e72:	ss jne 0x418ee6
  418e75:	rcl    BYTE PTR [ebx-0xb2fb57d],cl
  418e7b:	pop    edi
  418e7c:	add    DWORD PTR [edx-0x1c],0x28a91f74
  418e83:	pop    ss
  418e84:	xchg   ebp,eax
  418e85:	and    eax,0x19817f18
  418e8a:	push   0x7b
  418e8c:	lods   eax,DWORD PTR ds:[esi]
  418e8d:	xor    DWORD PTR [eax],ebx
  418e8f:	or     al,0xd
  418e91:	cs bswap esi
  418e94:	add    al,0xa2
  418e96:	scas   eax,DWORD PTR es:[edi]
  418e97:	add    al,0xcd
  418e99:	je     0x418e69
  418e9b:	cmp    eax,0xbbda8ca4
  418ea0:	add    ebp,DWORD PTR [eax-0x28]
  418ea3:	add    cl,BYTE PTR [edi-0x25]
  418ea6:	aad    0x4e
  418ea8:	(bad)  
  418ea9:	ja     0x418ed5
  418eab:	iret   
  418eac:	sub    bh,cl
  418eae:	gs enter 0x1b66,0xe4
  418eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eb4:	fcmovnb st,st(2)
  418eb6:	pop    edx
  418eb7:	inc    eax
  418eb8:	aam    0xf3
  418eba:	xchg   esp,eax
  418ebb:	push   ss
  418ebc:	push   ss
  418ebd:	fs shl edx,0x16
  418ec1:	icebp  
  418ec2:	jno    0x418e5c
  418ec4:	ret    
  418ec5:	das    
  418ec6:	(bad)  
  418ec7:	fidiv  WORD PTR gs:[edx-0x63a2725f]
  418ece:	push   esi
  418ecf:	lods   al,BYTE PTR ds:[esi]
  418ed0:	shl    esp,0x9d
  418ed3:	mov    DWORD PTR [ebx],0x5a0eff3d
  418ed9:	and    eax,0xe571031a
  418ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418edf:	loopne 0x418f44
  418ee1:	add    ebp,edx
  418ee3:	scas   eax,DWORD PTR es:[edi]
  418ee4:	and    edi,DWORD PTR [esi-0x6f]
  418ee7:	scas   eax,DWORD PTR es:[edi]
  418ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ee9:	jb     0x418f3f
  418eeb:	push   ds
  418eec:	sbb    ecx,DWORD PTR [esi+edx*4]
  418eef:	rcl    BYTE PTR [ebp-0x6221610],1
  418ef5:	pop    edi
  418ef6:	dec    eax
  418ef7:	or     al,BYTE PTR [esi+0x5f]
  418efa:	jl     0x418ec1
  418efc:	mov    eax,cs:0x9bd14a25
  418f02:	iret   
  418f03:	dec    eax
  418f04:	mov    esi,0x9b97742
  418f09:	pushf  
  418f0a:	push   edx
  418f0b:	sub    DWORD PTR [edi+0x7af6a99a],edi
  418f11:	popf   
  418f12:	in     al,0xfc
  418f14:	scas   al,BYTE PTR es:[edi]
  418f15:	fld    DWORD PTR ds:0x762ed86a
  418f1b:	aas    
  418f1c:	jmp    0x418f43
  418f1e:	xchg   DWORD PTR [ecx],ebp
  418f20:	test   esp,edi
  418f22:	or     al,0x80
  418f24:	push   ecx
  418f25:	(bad)  
  418f26:	xor    BYTE PTR [ecx+0x57ea1f46],bh
  418f2c:	jae    0x418f21
  418f2e:	mov    ah,bh
  418f30:	fstp   DWORD PTR [ebp-0x20c6d6b8]
  418f36:	nop
  418f37:	adc    al,0x21
  418f39:	and    al,dh
  418f3b:	nop
  418f3c:	bnd jbe 0x418f0f
  418f3f:	rcr    dh,0x60
  418f42:	std    
  418f43:	lock pop ebp
  418f45:	mov    DWORD PTR [ebx-0x2b9d9d72],0x5e829517
  418f4f:	sub    eax,0x55cb0d6
  418f54:	push   0x79
  418f56:	aam    0x2b
  418f58:	xchg   ebx,eax
  418f59:	int    0x7
  418f5b:	xchg   ebp,eax
  418f5c:	shl    DWORD PTR [edi+0x78],cl
  418f5f:	test   eax,0xe8570b36
  418f64:	pop    esi
  418f65:	ret    
  418f66:	fldenv [ecx-0x2570063e]
  418f6c:	or     esp,ebp
  418f6e:	adc    eax,0x555320e8
  418f73:	xchg   edi,eax
  418f74:	inc    esp
  418f75:	dec    ebp
  418f76:	call   0xcdf6:0x62b8f24d
  418f7d:	cs dec edi
  418f7f:	push   ds
  418f80:	adc    eax,0xf5ae3772
  418f85:	or     DWORD PTR [edi-0x1c0cefeb],edi
  418f8b:	mov    ebx,0x3283394c
  418f90:	jae    0x418ffb
  418f92:	cld    
  418f93:	jmp    0x418fbb
  418f95:	push   esi
  418f96:	push   edx
  418f97:	mov    ebx,0x4511f495
  418f9c:	or     cl,dh
  418f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f9f:	cmp    DWORD PTR [edi+esi*4+0x15],edx
  418fa3:	aaa    
  418fa4:	inc    ecx
  418fa5:	stos   BYTE PTR es:[edi],al
  418fa6:	icebp  
  418fa7:	(bad)  
  418fa8:	call   0x4105:0xc8da197b
  418faf:	addr16 mov ebx,0xca64c1d
  418fb5:	leave  
  418fb6:	mov    edi,0xe9da2a32
  418fbb:	sbb    eax,0xccbbbaa3
  418fc0:	jmp    DWORD PTR [eax+0x77]
  418fc3:	inc    ebx
  418fc4:	or     al,0x32
  418fc6:	add    al,0x40
  418fc8:	out    0xec,al
  418fca:	ins    BYTE PTR es:[edi],dx
  418fcb:	int3   
  418fcc:	jnp    0x418fe4
  418fce:	test   al,0x21
  418fd0:	pop    eax
  418fd1:	adc    dh,BYTE PTR ds:0x62c241e4
  418fd7:	data16 jnp 0x419040
  418fda:	xor    bh,ch
  418fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fdd:	jbe    0x418fd8
  418fdf:	push   0xc7162217
  418fe4:	jne    0x418fc0
  418fe6:	pop    edx
  418fe8:	ror    DWORD PTR [edi+0xf],cl
  418feb:	fimul  WORD PTR [ecx+0x9f7d885]
  418ff1:	cmp    esi,DWORD PTR [ebx+0x72803644]
  418ff7:	js     0x418ffb
  418ff9:	ror    DWORD PTR [eax+ecx*4+0x39],1
  418ffd:	dec    ebx
  418ffe:	rol    DWORD PTR [ecx+0x7bcef2de],1
  419004:	rol    ebp,0xda
  419007:	cld    
  419008:	or     DWORD PTR [esi-0x7cb9dbd7],esi
  41900e:	jnp    0x41905b
  419010:	aam    0x20
  419012:	mov    eax,ds:0x3ec6d8f2
  419017:	fdiv   DWORD PTR [esi-0xa]
  41901a:	sbb    cl,bh
  41901c:	stos   DWORD PTR es:[edi],eax
  41901d:	cmp    al,BYTE PTR [eax+0x418e4257]
  419023:	ret    
  419024:	cmp    dh,BYTE PTR [esi+0x4aaccce0]
  41902a:	stc    
  41902b:	mov    dl,0x88
  41902d:	xchg   DWORD PTR [ecx+eax*4-0x2b94b327],edi
  419034:	pop    ebx
  419035:	popa   
  419036:	enter  0xf958,0x25
  41903a:	jae    0x419078
  41903c:	lods   eax,DWORD PTR ds:[esi]
  41903d:	push   eax
  41903e:	(bad)  
  41903f:	pop    ss
  419040:	mov    ebp,0xb340ce08
  419045:	push   edx
  419046:	fnstsw WORD PTR [ebp-0x3e]
  419049:	xor    esp,esi
  41904b:	mov    edi,0x94b42557
  419050:	stos   DWORD PTR es:[edi],eax
  419051:	xor    BYTE PTR [esi-0x80bdba0],0x94
  419058:	ds int3 
  41905a:	popa   
  41905b:	in     al,dx
  41905c:	js     0x41900d
  41905e:	mov    edi,0xc3fa96a3
  419063:	jb     0x419050
  419065:	push   esi
  419066:	call   0x78f6:0xeff70f35
  41906d:	mov    ebx,0x9ddb499
  419072:	add    eax,0xa6ac3a30
  419077:	mov    ds:0x6850ad00,eax
  41907c:	mov    bl,0x49
  41907e:	(bad)  
  41907f:	cmc    
  419080:	xor    esi,esi
  419082:	stos   DWORD PTR es:[edi],eax
  419083:	gs mov dh,0x47
  419086:	stos   BYTE PTR es:[edi],al
  419087:	add    BYTE PTR [edx+0x2b818b47],bh
  41908d:	je     0x419077
  41908f:	rol    DWORD PTR [eax-0x539ab675],1
  419095:	and    BYTE PTR [esp+ebx*4-0x78619f4b],dh
  41909c:	lahf   
  41909d:	out    dx,al
  41909e:	adc    eax,0x4d3d427a
  4190a3:	xor    eax,0x2214b473
  4190a8:	pop    ecx
  4190a9:	test   BYTE PTR [ecx-0x5457ff51],ch
  4190af:	push   ds
  4190b0:	xchg   esi,eax
  4190b1:	mov    ebp,0x7be36ce
  4190b6:	adc    dl,al
  4190b8:	aam    0x34
  4190ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190bb:	mov    dl,0x5b
  4190bd:	lods   al,BYTE PTR ds:[esi]
  4190be:	mov    ebx,0x49a4fbcf
  4190c3:	mov    al,BYTE PTR [eax-0xd]
  4190c6:	test   edi,esp
  4190c8:	mov    esp,0x1df52bb7
  4190cd:	dec    esp
  4190ce:	in     al,0x34
  4190d0:	cmp    edx,ebp
  4190d2:	fwait
  4190d3:	sbb    DWORD PTR [ebx],0x6b1035f4
  4190d9:	pushf  
  4190da:	ds mov edx,0xda0a6c9d
  4190e0:	pop    es
  4190e1:	push   0xffffffed
  4190e3:	cmp    DWORD PTR [ebp-0x79],edx
  4190e6:	aas    
  4190e7:	xor    dl,BYTE PTR [ebx]
  4190e9:	push   0x66
  4190eb:	jge    0x41912b
  4190ed:	add    al,0xfb
  4190ef:	js     0x4190dc
  4190f1:	add    DWORD PTR [edi],ebx
  4190f3:	pusha  
  4190f4:	or     edx,DWORD PTR ds:0xd3a19d6d
  4190fa:	(bad)  
  4190fb:	scas   al,BYTE PTR es:[edi]
  4190fc:	call   0xbd2b:0x8e9c1322
  419103:	cdq    
  419104:	push   ebx
  419105:	cwde   
  419106:	pop    ebp
  419107:	dec    ecx
  419108:	mov    cl,0x2a
  41910a:	gs jl  0x419109
  41910d:	xchg   cl,al
  41910f:	repz mov ?,WORD PTR [esi+ebx*2-0x6ed3bff2]
  419117:	mov    ecx,0x6cc3cf14
  41911c:	ja     0x419110
  41911e:	fidivr WORD PTR [esi]
  419120:	push   eax
  419121:	rol    BYTE PTR [eax+0x5da7d3f8],0xbf
  419128:	repnz lds eax,FWORD PTR [ecx+0x27]
  41912c:	dec    esi
  41912d:	hlt    
  41912e:	dec    esi
  41912f:	into   
  419130:	(bad)  
  419131:	in     eax,dx
  419132:	aaa    
  419133:	mov    ds:0x3f9cec6f,eax
  419138:	jbe    0x41912c
  41913a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41913b:	push   es
  41913c:	addr16 cmp al,0x5b
  41913f:	scas   al,BYTE PTR es:[edi]
  419140:	or     BYTE PTR [edx],bl
  419142:	xor    al,0xba
  419144:	push   esi
  419145:	cmc    
  419146:	inc    eax
  419147:	neg    DWORD PTR [edx+ebx*2-0x645de5b5]
  41914e:	mov    ds:0xd1edefd3,al
  419153:	arpl   WORD PTR [esi-0x65],bp
  419156:	loop   0x4191b0
  419158:	test   eax,0x4d5ec784
  41915d:	adc    al,0x20
  41915f:	enter  0xacdf,0xfb
  419163:	inc    ecx
  419164:	int    0xe3
  419166:	jb     0x419127
  419168:	push   0x1a
  41916a:	loop   0x419159
  41916c:	dec    ebx
  41916d:	test   BYTE PTR fs:[esp+ebx*4-0x6268b452],0x6
  419176:	jo     0x4191ab
  419178:	add    BYTE PTR [ebx+0x4c],ah
  41917b:	lea    esi,[eax]
  41917d:	push   0x6fa07fef
  419182:	xchg   esi,edi
  419184:	add    DWORD PTR [ebx],esp
  419186:	lock test DWORD PTR ds:0x42cbd7c0,esp
  41918d:	cmp    bh,0x14
  419190:	xor    eax,0x5e14f87
  419195:	mov    ds:0xfc528dee,eax
  41919a:	pop    ebx
  41919b:	mov    BYTE PTR [eax+eiz*1],0xdd
  41919f:	std    
  4191a0:	addr16 sbb ah,al
  4191a3:	int    0xad
  4191a5:	in     eax,dx
  4191a6:	pop    edx
  4191a7:	aam    0xe0
  4191a9:	out    dx,eax
  4191aa:	lods   al,BYTE PTR ds:[esi]
  4191ab:	ret    
  4191ac:	es jge 0x4191e4
  4191af:	cmp    DWORD PTR [esi],0xffffffaf
  4191b2:	pop    es
  4191b3:	aad    0x1d
  4191b5:	sbb    ah,BYTE PTR [edi+0x35]
  4191b8:	push   ds
  4191b9:	mov    cx,0x7482
  4191bd:	lea    edx,[eax+0x36]
  4191c0:	push   esi
  4191c1:	push   edx
  4191c2:	ins    DWORD PTR es:[edi],dx
  4191c3:	ins    BYTE PTR es:[edi],dx
  4191c4:	jo     0x419170
  4191c6:	jle    0x4191ea
  4191c8:	cdq    
  4191c9:	inc    esi
  4191ca:	sbb    dl,BYTE PTR [edi-0x15ada053]
  4191d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191d1:	push   0x5a821a54
  4191d6:	mov    cl,0xf4
  4191d8:	mov    dh,0x1e
  4191da:	push   edx
  4191db:	dec    ebx
  4191dc:	jl     0x41922f
  4191de:	fcom   QWORD PTR [ecx]
  4191e0:	stc    
  4191e1:	jecxz  0x41925c
  4191e3:	addr16 clc 
  4191e5:	hlt    
  4191e6:	mov    dl,0x51
  4191e8:	push   cs
  4191e9:	fucom  st(6)
  4191eb:	data16 mov bh,0xf6
  4191ee:	dec    ebp
  4191ef:	sti    
  4191f0:	aam    0x55
  4191f2:	dec    ebx
  4191f3:	xor    cl,BYTE PTR [ecx]
  4191f5:	enter  0xbc29,0x22
  4191f9:	pop    eax
  4191fa:	fcomp  DWORD PTR [ecx+edi*2]
  4191fd:	bound  ebp,QWORD PTR [ebp+0x4c]
  419200:	mov    ds:0x601e6705,eax
  419205:	daa    
  419206:	dec    eax
  419207:	adc    ebp,ecx
  419209:	ret    0x469d
  41920c:	mov    dl,0x7c
  41920e:	std    
  41920f:	adc    BYTE PTR [esi-0x6146f864],0x7
  419216:	pop    ecx
  419217:	clc    
  419218:	xor    eax,0x28737d74
  41921d:	jb     0x41928e
  41921f:	cmp    dh,al
  419221:	dec    esp
  419222:	add    al,0xdc
  419224:	mov    ebx,0x979e6659
  419229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41922a:	sbb    edx,ebp
  41922c:	nop
  41922d:	loope  0x4191ef
  41922f:	pop    eax
  419230:	faddp  st(0),st
  419232:	or     DWORD PTR [edi-0x6f264301],ebp
  419238:	ins    BYTE PTR es:[edi],dx
  419239:	mov    DWORD PTR [eax+0x160f91a9],edi
  41923f:	xor    DWORD PTR [edx+0x4702c7ed],edi
  419245:	not    DWORD PTR [edx]
  419247:	jnp    0x4191ec
  419249:	not    ch
  41924b:	xchg   ecx,eax
  41924c:	aad    0x4f
  41924e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41924f:	neg    BYTE PTR [esp+ebx*8+0x76]
  419253:	(bad)  
  419254:	hlt    
  419255:	pop    eax
  419256:	cwde   
  419257:	mov    edi,0xddd66999
  41925c:	pop    ss
  41925d:	test   al,0x21
  41925f:	sub    bl,dl
  419261:	add    BYTE PTR [ebp+0x38ca76a0],ch
  419267:	stos   BYTE PTR es:[edi],al
  419268:	xlat   BYTE PTR ds:[ebx]
  419269:	(bad)  
  41926a:	js     0x419272
  41926c:	mov    al,0x46
  41926e:	fstp   TBYTE PTR [ebx-0x53]
  419271:	dec    ebx
  419272:	sbb    bh,BYTE PTR [ecx+0x5c4d984e]
  419278:	dec    eax
  419279:	(bad)  
  41927a:	iret   
  41927b:	arpl   bp,di
  41927d:	inc    eax
  41927e:	mov    cl,ah
  419280:	das    
  419281:	adc    eax,0x52ca33d3
  419286:	fucom  st(0)
  419288:	mov    al,ds:0xfd9bf6d0
  41928d:	fs xchg edi,eax
  41928f:	retf   
  419290:	ins    BYTE PTR es:[edi],dx
  419291:	out    dx,al
  419292:	dec    esi
  419293:	jmp    0x41922f
  419295:	shl    DWORD PTR [esi],0x3b
  419298:	call   0x558be968
  41929d:	xchg   dh,ch
  41929f:	or     BYTE PTR [edx-0x2a],bh
  4192a2:	int3   
  4192a3:	dec    edx
  4192a4:	cmp    al,0x2
  4192a6:	pop    eax
  4192a7:	iret   
  4192a8:	(bad)  
  4192a9:	fistp  QWORD PTR [ecx]
  4192ab:	imul   esp,DWORD PTR [esi],0x6c42da6e
  4192b1:	test   eax,0x40ef0a34
  4192b6:	sbb    bh,ch
  4192b8:	pop    es
  4192b9:	sub    dh,al
  4192bb:	jg     0x419325
  4192bd:	cs in  al,0x4c
  4192c0:	jnp    0x4192c0
  4192c2:	pop    ebx
  4192c3:	cli    
  4192c4:	test   eax,0x5998f235
  4192c9:	test   DWORD PTR [edi-0xf9f5c5c],esi
  4192cf:	mov    BYTE PTR [edx],0xcc
  4192d2:	sbb    eax,0x9a69b0d9
  4192d7:	mov    ch,0xdf
  4192d9:	mov    al,ah
  4192db:	bound  edx,QWORD PTR [edi-0x66]
  4192de:	test   BYTE PTR ds:0x3eac7497,0x63
  4192e5:	in     eax,0xd5
  4192e7:	sub    eax,0xf2b64dfd
  4192ec:	sub    BYTE PTR [edx],dl
  4192ee:	repnz pop ds
  4192f0:	ja     0x4192bd
  4192f2:	mov    eax,ds:0xd34122c7
  4192f7:	mov    ds:0xf1e4988a,eax
  4192fc:	jge    0x4192c5
  4192fe:	mov    dl,BYTE PTR [eax-0x27e051e7]
  419304:	mov    WORD PTR [ebp-0x29c25eda],fs
  41930a:	dec    ecx
  41930b:	(bad)  
  41930c:	je     0x419364
  41930e:	ja     0x419357
  419310:	ror    bh,0xe7
  419313:	mov    es:0x28813842,eax
  419319:	fidivr WORD PTR [ecx]
  41931b:	mov    al,ds:0xd6a32817
  419320:	jmp    0xf4de7931
  419325:	pop    edi
  419326:	add    ebp,eax
  419328:	pop    ebx
  419329:	push   ebx
  41932a:	sub    bh,BYTE PTR [edi+ecx*1+0x6]
  41932e:	stos   BYTE PTR es:[edi],al
  41932f:	dec    esp
  419330:	push   ds
  419331:	mov    ebx,0x6ee07000
  419336:	(bad)  
  419337:	mov    ebp,0x3386ce52
  41933c:	xor    DWORD PTR [edx],esp
  41933e:	jl     0x41937e
  419340:	mov    al,ds:0x5c35259d
  419345:	test   al,cl
  419347:	fldcw  WORD PTR [esp]
  41934a:	sbb    ch,cl
  41934c:	test   eax,0xd62d4bed
  419351:	jb     0x41933c
  419353:	sub    edx,DWORD PTR [ebp+0x3f0f5d1d]
  419359:	inc    ebx
  41935a:	or     DWORD PTR [esi+edx*2+0x7c],edx
  41935e:	lds    esi,FWORD PTR [ebp+0x7ab3b0af]
  419364:	ins    BYTE PTR es:[edi],dx
  419365:	fisttp QWORD PTR [ebp+0x42]
  419368:	push   ds
  419369:	push   0x7f
  41936b:	and    ebx,0x35
  41936e:	(bad)  
  41936f:	ins    DWORD PTR es:[edi],dx
  419370:	cdq    
  419371:	test   ebx,0xe9321c43
  419377:	mov    DWORD PTR gs:[ebp-0x40],edx
  41937b:	call   0x75636598
  419380:	sub    esi,DWORD PTR [edx+0xb]
  419383:	test   DWORD PTR [ecx],eax
  419385:	movups XMMWORD PTR [ecx-0x26fa7a9d],xmm3
  41938c:	or     BYTE PTR [edi],al
  41938e:	sub    eax,0x2024c12b
  419393:	retf   0x453b
  419396:	push   ss
  419397:	cmp    DWORD PTR ds:0x61b61110,0x1f
  41939e:	inc    ebp
  41939f:	(bad)  
  4193a0:	push   ebp
  4193a1:	rcr    BYTE PTR [ebx-0x613b701a],0xe1
  4193a8:	fidivr WORD PTR [ebx-0x669e147c]
  4193ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193af:	mov    esp,0xee624a1
  4193b4:	pop    ss
  4193b5:	enter  0x1af5,0xf3
  4193b9:	ror    BYTE PTR [esi+eax*2],0x72
  4193bd:	inc    ecx
  4193be:	mov    BYTE PTR [esi+0x8],dl
  4193c1:	aad    0x9b
  4193c3:	fcmovb st,st(3)
  4193c5:	sub    DWORD PTR [ebx+0x5551c5a8],edx
  4193cb:	dec    bh
  4193cd:	pop    ss
  4193ce:	mov    eax,0xff157cc7
  4193d3:	cmp    edi,esp
  4193d5:	and    eax,0x1772a9ac
  4193da:	stos   DWORD PTR es:[edi],eax
  4193db:	iret   
  4193dc:	sbb    al,0x59
  4193de:	xchg   ebx,eax
  4193df:	stc    
  4193e0:	shl    DWORD PTR [edi],0x24
  4193e3:	push   ss
  4193e4:	pop    es
  4193e5:	sbb    esp,esp
  4193e7:	mov    esi,0x353effc3
  4193ec:	fimul  DWORD PTR [ebx+0x40]
  4193ef:	xor    bl,BYTE PTR [edi+eax*1]
  4193f2:	call   0x91ca:0xadddc4a9
  4193f9:	scas   al,BYTE PTR es:[edi]
  4193fa:	adc    al,0x60
  4193fc:	pop    esp
  4193fd:	mov    DWORD PTR [ecx-0x6b5a2ec7],edx
  419403:	imul   esi,ebx,0x43
  419406:	retf   0xf616
  419409:	neg    ebx
  41940b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41940c:	mov    dl,0x11
  41940e:	xor    BYTE PTR [eax-0x41],dl
  419411:	cdq    
  419412:	xor    esi,esp
  419414:	jo     0x41939d
  419416:	fdivr  DWORD PTR [edx-0x72ad2410]
  41941c:	jg     0x4193fb
  41941e:	push   0x2bf3ffcb
  419423:	adc    DWORD PTR [ebp+0xf],edx
  419426:	or     eax,0xc2be2725
  41942b:	push   edx
  41942c:	push   ds
  41942d:	outs   dx,BYTE PTR ds:[esi]
  41942e:	sbb    BYTE PTR [ecx],ah
  419430:	imul   ebp,DWORD PTR [edi-0x5d1755af],0xe6d5ab1b
  41943a:	xchg   esi,eax
  41943b:	sbb    eax,0xbea01e9f
  419440:	leave  
  419441:	dec    esp
  419442:	mov    BYTE PTR [esi],bh
  419444:	mov    ds:0xb95baf3e,al
  419449:	inc    ebx
  41944a:	sar    ch,cl
  41944c:	pop    ebx
  41944d:	push   ebp
  41944e:	pop    eax
  41944f:	sub    DWORD PTR ds:0x27ecbc37,esp
  419455:	mov    dl,0x1
  419457:	outs   dx,BYTE PTR ds:[esi]
  419458:	loop   0x419499
  41945a:	div    DWORD PTR [ebp+0x7f7bb3ae]
  419460:	data16 mov ch,0x67
  419463:	xchg   esp,eax
  419464:	and    al,0xc
  419466:	popf   
  419467:	cld    
  419468:	les    edi,FWORD PTR [edi+ecx*2-0x79]
  41946c:	mov    ebp,ds
  41946e:	fcmovnb st,st(7)
  419470:	sbb    edi,DWORD PTR [eax+0x227da5fa]
  419476:	dec    edx
  419477:	mov    ecx,0x6f7257a0
  41947c:	out    0xa4,al
  41947e:	xchg   edx,eax
  41947f:	xor    ebp,DWORD PTR [eax-0x61]
  419482:	add    ch,0xf4
  419485:	test   BYTE PTR [eax],dl
  419487:	ds stos DWORD PTR es:[edi],eax
  419489:	sub    DWORD PTR [ecx+0x46],edx
  41948c:	mov    ebx,DWORD PTR [eax+0x2a]
  41948f:	stos   BYTE PTR es:[edi],al
  419490:	retf   
  419491:	das    
  419492:	sbb    DWORD PTR [esp+esi*2-0x14a7dce3],ebp
  419499:	cmp    al,0x92
  41949b:	popf   
  41949c:	(bad)  
  41949d:	pop    esi
  41949e:	pop    ebx
  41949f:	int3   
  4194a0:	mov    bl,0x23
  4194a2:	mov    dh,0xc9
  4194a4:	inc    esi
  4194a5:	addr16 mov ebx,0xa272e537
  4194ab:	mov    dl,0xc2
  4194ad:	daa    
  4194ae:	ins    BYTE PTR es:[edi],dx
  4194af:	pop    esi
  4194b0:	mov    bh,0x36
  4194b2:	es and al,0xda
  4194b5:	cmp    DWORD PTR [ecx+0x33efc9ea],0x85e27ad0
  4194bf:	mov    WORD PTR [ecx+0x4693b7d0],cs
  4194c5:	retf   
  4194c6:	push   esp
  4194c7:	cmc    
  4194c8:	ins    BYTE PTR es:[edi],dx
  4194c9:	jmp    0xea6e:0x483e3cf8
  4194d0:	popa   
  4194d1:	outs   dx,BYTE PTR ds:[esi]
  4194d2:	(bad)  
  4194d3:	adc    esi,DWORD PTR [esi]
  4194d5:	cld    
  4194d6:	daa    
  4194d7:	bound  edx,QWORD PTR [edx-0x17efb7a7]
  4194dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194de:	int3   
  4194df:	push   esi
  4194e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e1:	mov    ds:0xe277c3ba,al
  4194e6:	push   edx
  4194e7:	cmp    esi,DWORD PTR [eax+ecx*1-0xa]
  4194eb:	mov    eax,0xdf16a3ca
  4194f0:	inc    edx
  4194f1:	xchg   edx,eax
  4194f2:	cmp    eax,0xb5fa85e
  4194f7:	jo     0x4194c5
  4194f9:	imul   esp,DWORD PTR [ebx+esi*8+0x54],0xc0116278
  419501:	gs sub ebp,ebp
  419504:	push   0xfe9a48b7
  419509:	lods   eax,DWORD PTR ds:[esi]
  41950a:	cmp    ecx,DWORD PTR [edi]
  41950c:	fisttp QWORD PTR [esp+ebp*4+0x4b]
  419510:	iret   
  419511:	rol    BYTE PTR [edx-0x7d69e832],cl
  419517:	cmp    eax,edi
  419519:	and    eax,0xb5b3448c
  41951f:	sbb    BYTE PTR [eax+0x5f430351],cl
  419525:	call   0x2e8d:0x92635a8e
  41952c:	adc    al,0x37
  41952e:	in     al,dx
  41952f:	push   0x14adf9f6
  419534:	aas    
  419535:	icebp  
  419536:	xlat   BYTE PTR ds:[ebx]
  419537:	add    eax,DWORD PTR [esi]
  419539:	sub    dl,BYTE PTR [edx]
  41953b:	iret   
  41953c:	rcl    BYTE PTR [ebp-0xdf67b8d],cl
  419542:	mov    ecx,0xc1223
  419547:	call   0xf4698260
  41954c:	cmp    al,0x75
  41954e:	lods   al,BYTE PTR ds:[esi]
  41954f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419550:	pop    es
  419551:	mov    edi,0x66c605b3
  419556:	popa   
  419557:	xchg   ebp,eax
  419558:	mov    edx,0x1997a628
  41955d:	pop    ds
  41955e:	or     ebx,0xa5a9dac9
  419564:	mov    ah,0xc1
  419566:	stc    
  419567:	xchg   edi,eax
  419568:	jbe    0x419595
  41956a:	mov    edi,0xa23e0119
  41956f:	adc    ecx,DWORD PTR [edx+0x7b]
  419572:	call   0x7df2:0xe1119477
  419579:	ficomp WORD PTR [esi+0x1f226c4c]
  41957f:	push   ebp
  419580:	bound  ebx,QWORD PTR [edi]
  419582:	and    al,0xd5
  419584:	push   esi
  419585:	aam    0xb5
  419587:	or     al,0x3a
  419589:	shl    DWORD PTR [ebx],0xdd
  41958c:	lods   eax,DWORD PTR ds:[esi]
  41958d:	shl    edx,0xc8
  419590:	inc    esp
  419591:	lea    edi,[ecx+eiz*8-0x66497f2a]
  419598:	or     edi,DWORD PTR [esi]
  41959a:	mov    edi,0xfc5dd6c3
  41959f:	or     DWORD PTR [ecx],esp
  4195a1:	not    ch
  4195a3:	pop    eax
  4195a4:	dec    ebx
  4195a5:	iret   
  4195a6:	jmp    0xed05b57b
  4195ab:	push   edx
  4195ac:	add    al,BYTE PTR [edi+ecx*2-0x751c7917]
  4195b3:	pushf  
  4195b4:	retf   
  4195b5:	sub    BYTE PTR [eax],0x20
  4195b8:	retf   0xa43b
  4195bb:	push   esi
  4195bc:	xchg   ebx,eax
  4195bd:	rcr    DWORD PTR [ebx-0x6a353bba],0xfd
  4195c4:	and    eax,0x93c1bc0f
  4195c9:	push   0x46
  4195cb:	test   eax,0x815d26ed
  4195d0:	sub    eax,0xe08806e9
  4195d5:	mov    eax,0xe12dbe28
  4195da:	hlt    
  4195db:	outs   dx,BYTE PTR ds:[esi]
  4195dc:	mov    ebx,0x8b1033f2
  4195e1:	adc    BYTE PTR [edi+0x1a],al
  4195e4:	jo     0x4195f1
  4195e6:	pop    ecx
  4195e7:	lea    edx,[ebp-0x9]
  4195ea:	push   ecx
  4195eb:	inc    edi
  4195ec:	adc    eax,0x55ea75fe
  4195f1:	(bad)  
  4195f2:	jmp    0x41965f
  4195f4:	mov    dh,0xb1
  4195f6:	retf   
  4195f7:	sub    ebp,DWORD PTR [esi+0x6789e5ec]
  4195fd:	pop    edx
  4195fe:	leave  
  4195ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419600:	sbb    eax,edx
  419602:	sbb    DWORD PTR [ebx],edi
  419604:	fdiv   st,st(6)
  419606:	out    0x5b,al
  419608:	jl     0x4195f2
  41960a:	ss push cs
  41960c:	(bad)  
  41960d:	fimul  DWORD PTR [eax]
  41960f:	mov    esi,0xa4f23166
  419614:	dec    ecx
  419615:	mov    ds,esi
  419617:	cmovge edi,edi
  41961a:	push   cs
  41961b:	xor    eax,0x816f15fa
  419620:	lock pop ebx
  419622:	xor    BYTE PTR [ecx+0x7f5774eb],0x61
  419629:	pop    edx
  41962a:	jo     0x4195f9
  41962c:	mov    cl,0x3a
  41962e:	add    al,0xdc
  419630:	jb     0x419614
  419632:	jmp    0x42e5:0x47247bf9
  419639:	mov    bl,0xe9
  41963b:	sahf   
  41963c:	pop    esp
  41963d:	push   cs
  41963e:	adc    edi,ecx
  419640:	sbb    edi,DWORD PTR [ebx-0x2fabb79]
  419646:	shl    eax,0x3
  419649:	lock add ecx,0xf1d0525d
  419650:	ds dec esi
  419652:	pop    ss
  419653:	es xor al,0xfe
  419656:	mov    WORD PTR [ebx],ds
  419658:	xchg   al,ah
  41965a:	int    0x54
  41965c:	mov    ebp,0x7be55c02
  419661:	and    BYTE PTR [ebx+ebx*4],ah
  419664:	push   cs
  419665:	or     al,0x66
  419667:	repz mov ds:0xab88965e,al
  41966d:	sbb    dh,BYTE PTR [ebx-0x72]
  419670:	or     bl,BYTE PTR [edx+0x59c6daac]
  419676:	xlat   BYTE PTR ds:[ebx]
  419677:	addr16 mov ds:0x537d,eax
  41967b:	das    
  41967c:	(bad)  
  41967d:	cwde   
  41967e:	push   ebx
  41967f:	test   al,0x64
  419681:	pop    DWORD PTR [edx]
  419683:	mov    BYTE PTR [edi],0xf3
  419686:	jno    0x419650
  419688:	nop
  419689:	xchg   edx,eax
  41968a:	pop    eax
  41968b:	or     esp,ebp
  41968d:	idiv   DWORD PTR [edx]
  41968f:	fsub   DWORD PTR [edi-0x11]
  419692:	pop    ecx
  419693:	mov    esp,0x30d14b2f
  419698:	hlt    
  419699:	les    ebx,FWORD PTR [edi+0x27ebdcaa]
  41969f:	inc    ebx
  4196a0:	pop    ss
  4196a1:	or     DWORD PTR [ecx],ecx
  4196a3:	fstp   DWORD PTR [edi]
  4196a5:	sbb    al,0x83
  4196a7:	fidiv  DWORD PTR [eax]
  4196a9:	das    
  4196aa:	mov    al,0x98
  4196ac:	jecxz  0x419657
  4196ae:	(bad)  
  4196af:	test   eax,0x985cb5c9
  4196b4:	cmc    
  4196b5:	xor    al,0xca
  4196b7:	repnz out 0x51,al
  4196ba:	pop    esp
  4196bb:	or     eax,0xf932f94d
  4196c0:	jp     0x419659
  4196c2:	pop    sp
  4196c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196c5:	mov    ch,0x7c
  4196c7:	(bad)  
  4196c8:	fmul   QWORD PTR [esi]
  4196ca:	rol    bl,1
  4196cc:	mov    ch,0xa1
  4196ce:	mov    ebp,0x7e3ef70b
  4196d3:	loopne 0x419719
  4196d5:	(bad)  [ecx]
  4196d7:	out    0x93,eax
  4196d9:	cmp    BYTE PTR [ebp-0x61],bh
  4196dc:	test   al,0xf8
  4196de:	adc    edx,DWORD PTR [ebx+0x54]
  4196e1:	push   ebp
  4196e2:	jae    0x419730
  4196e4:	test   BYTE PTR [ebp+0x1035bea6],al
  4196ea:	rcl    BYTE PTR [edx-0x36],0x2f
  4196ee:	fld    TBYTE PTR [ebp+eax*8+0x2af94d72]
  4196f5:	pop    eax
  4196f6:	mov    DWORD PTR [esi-0x68],ebp
  4196f9:	add    dh,BYTE PTR [esi+esi*8]
  4196fc:	(bad)  
  4196fd:	pop    ebp
  4196fe:	jns    0x41972b
  419700:	push   esi
  419701:	in     eax,0x74
  419703:	lock mov eax,ds:0x7d841223
  419709:	pop    es
  41970a:	adc    cl,BYTE PTR [eax]
  41970c:	(bad)  
  41970e:	cmp    bh,dl
  419710:	xchg   esi,eax
  419711:	scas   eax,DWORD PTR es:[edi]
  419712:	out    dx,al
  419713:	mov    esi,ds
  419715:	inc    ebp
  419716:	jmp    0x4196da
  419718:	and    eax,0xe706e99c
  41971d:	add    bl,BYTE PTR [eax]
  41971f:	mov    ah,0xfc
  419721:	call   ebx
  419723:	and    BYTE PTR [ebx+0x55bc0456],bh
  419729:	inc    ebp
  41972a:	mov    WORD PTR [ecx-0x50e551ef],ss
  419730:	mov    al,0x3
  419732:	mov    ebx,0x5b6e90c6
  419737:	sar    ebx,1
  419739:	je     0x41972b
  41973b:	or     cl,BYTE PTR [edx-0x8]
  41973e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41973f:	cmc    
  419740:	scas   al,BYTE PTR es:[edi]
  419741:	and    eax,0xa501e77b
  419746:	dec    ebp
  419747:	out    0xd5,al
  419749:	adc    dh,BYTE PTR [esi]
  41974b:	(bad)  
  41974c:	xchg   ebx,eax
  41974d:	or     dh,BYTE PTR [ebx+0x6a]
  419750:	jl     0x419735
  419752:	mov    BYTE PTR [edx-0x7237ed01],ah
  419758:	push   edi
  419759:	fwait
  41975a:	pop    ecx
  41975b:	inc    eax
  41975c:	les    ebx,FWORD PTR [ebx+0x29e1288]
  419762:	or     ecx,esi
  419764:	mov    cl,0x94
  419766:	retf   0x76d3
  419769:	inc    ebp
  41976a:	add    BYTE PTR ds:[ebx-0x7a],bh
  41976e:	pop    es
  41976f:	xchg   esi,ebx
  419771:	push   edx
  419772:	push   ecx
  419773:	xor    ecx,esp
  419775:	push   ss
  419776:	jmp    0x2bbfe1e4
  41977b:	aaa    
  41977c:	sub    DWORD PTR [edi+0x181cccd6],ebp
  419782:	bound  eax,QWORD PTR [ebp+eiz*1+0xf]
  419786:	cmp    bl,al
  419788:	fldenv [edi]
  41978a:	pminub mm2,QWORD PTR [edx+0x6b]
  41978e:	and    eax,DWORD PTR [edx-0x79a39c04]
  419794:	lock add BYTE PTR [edi],dh
  419797:	in     eax,dx
  419798:	xchg   ebp,eax
  419799:	ds jns 0x41973b
  41979c:	push   ecx
  41979d:	bound  ebx,QWORD PTR [esi-0x3af1ba31]
  4197a3:	popf   
  4197a4:	test   eax,0x1ce58d66
  4197a9:	or     esi,0x13f0ff12
  4197af:	pushf  
  4197b0:	nop
  4197b1:	or     dl,bl
  4197b3:	fsub   st,st(4)
  4197b5:	push   0xffffffca
  4197b7:	jp     0x419824
  4197b9:	cmc    
  4197ba:	test   DWORD PTR [ecx-0x163d66a0],ecx
  4197c0:	xchg   BYTE PTR [eax+0x3ddc3568],dh
  4197c6:	dec    ebp
  4197c7:	lea    eax,gs:[edx]
  4197ca:	ret    0xde55
  4197cd:	jge    0x419831
  4197cf:	mov    esi,0xdeaf0739
  4197d4:	pop    ecx
  4197d5:	stos   DWORD PTR es:[edi],eax
  4197d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197d7:	fst    st(4)
  4197d9:	mov    ecx,DWORD PTR [eax+ebp*4]
  4197dc:	and    esp,DWORD PTR ds:0x3e179bf7
  4197e2:	test   eax,0x27e69bea
  4197e8:	add    eax,0x56281d0d
  4197ed:	cmp    BYTE PTR [edi],al
  4197ef:	test   eax,0xd3163b67
  4197f4:	jg     0x4197c5
  4197f6:	in     eax,0x86
  4197f8:	xchg   edi,eax
  4197f9:	aam    0x2d
  4197fb:	ret    0xcf85
  4197fe:	arpl   WORD PTR [edi-0x7f0dd4ee],si
  419804:	(bad)  
  419805:	jmp    0x6815:0x3aa49459
  41980c:	sub    BYTE PTR [ecx],0x3a
  41980f:	xor    BYTE PTR ds:0xf1650fbb,dl
  419815:	test   al,0xb2
  419817:	pop    ecx
  419818:	xchg   edi,eax
  419819:	or     bl,ah
  41981b:	pop    ebp
  41981c:	adc    BYTE PTR [edx-0x66],dl
  41981f:	jge    0x419845
  419821:	iret   
  419822:	ds popf 
  419824:	pop    esi
  419825:	push   ecx
  419826:	fisub  WORD PTR [edi-0x341cddfc]
  41982c:	fild   DWORD PTR [esi+0x29da2d8f]
  419832:	and    cl,bh
  419834:	mov    al,0x55
  419836:	enter  0x774b,0x41
  41983a:	out    dx,eax
  41983b:	sti    
  41983c:	mov    ah,0x9e
  41983e:	cs jmp 0xcada:0xc4fa34ad
  419846:	push   cs
  419847:	xor    eax,0x16f9a9c7
  41984c:	sahf   
  41984d:	retf   
  41984e:	dec    edx
  41984f:	push   ebx
  419850:	out    0x7,eax
  419852:	cmp    esp,esi
  419854:	js     0x4198c7
  419856:	add    DWORD PTR ds:0x4c4d5411,ebx
  41985c:	cmp    DWORD PTR [esi+0x12],esp
  41985f:	dec    esp
  419860:	ins    BYTE PTR es:[edi],dx
  419861:	ins    BYTE PTR es:[edi],dx
  419862:	in     eax,0x57
  419864:	inc    ebp
  419865:	dec    ecx
  419866:	push   ds
  419867:	push   edi
  419868:	lods   al,BYTE PTR ds:[esi]
  419869:	mov    ah,0xd2
  41986b:	pop    eax
  41986c:	sub    ecx,DWORD PTR [edi-0x39]
  41986f:	jle    0x4197f6
  419871:	pop    eax
  419872:	xchg   edi,eax
  419873:	imul   ebp,DWORD PTR [esi+ecx*4-0x27],0x6e97281f
  41987b:	retf   
  41987c:	dec    ecx
  41987d:	add    eax,0x5d963c95
  419882:	mov    eax,0xa7448647
  419887:	test   BYTE PTR [eax-0x73],cl
  41988a:	mov    eax,0x1c76ed2b
  41988f:	rol    DWORD PTR [ebp+0x3d85a7ec],1
  419895:	pop    esi
  419896:	jp     0x4198cf
  419898:	fstp   DWORD PTR [esp+edi*8-0x55]
  41989c:	xchg   edx,eax
  41989d:	cmp    dh,BYTE PTR [ecx+ebp*4]
  4198a0:	popf   
  4198a1:	mov    ds:0xabb59401,al
  4198a6:	mov    ebp,0xc84d119e
  4198ab:	mov    eax,0xebcf8b8d
  4198b0:	daa    
  4198b1:	add    eax,0x45f76e71
  4198b6:	add    eax,0xcd2f5cab
  4198bb:	jns    0x4198e5
  4198bd:	test   DWORD PTR [edi-0x2b],ebp
  4198c0:	ins    BYTE PTR es:[edi],dx
  4198c1:	ins    BYTE PTR es:[edi],dx
  4198c2:	xlat   BYTE PTR ds:[ebx]
  4198c3:	retf   0x14a6
  4198c6:	cld    
  4198c7:	xchg   esi,eax
  4198c8:	push   ss
  4198c9:	add    eax,0x4de4cdc8
  4198ce:	leave  
  4198cf:	sahf   
  4198d0:	rol    esi,0xa
  4198d3:	out    dx,al
  4198d4:	pop    ebp
  4198d5:	adc    eax,0x46bf7c23
  4198da:	call   0x3a256aff
  4198df:	or     al,0x68
  4198e1:	dec    ecx
  4198e2:	pop    esp
  4198e3:	sbb    BYTE PTR [ecx],0x2a
  4198e6:	jmp    0x4c4c:0x63305e79
  4198ed:	data16 mov bh,0x1
  4198f0:	hlt    
  4198f1:	jmp    0x8019:0xc8c569ab
  4198f8:	adc    DWORD PTR [edi],esi
  4198fa:	jecxz  0x41990d
  4198fc:	inc    esi
  4198fd:	push   ebx
  4198fe:	pop    ebx
  4198ff:	loopne 0x419930
  419901:	fidiv  WORD PTR [edi]
  419903:	adc    ecx,eax
  419905:	adc    eax,0xe05d3e4
  41990a:	lods   eax,DWORD PTR ds:[esi]
  41990b:	test   DWORD PTR [eax+eax*2+0x1f5e0929],0x9a5f0a22
  419916:	adc    eax,0xb7a63da8
  41991b:	out    dx,eax
  41991c:	pop    esp
  41991d:	mov    ds:0xf04ba752,al
  419922:	push   ebx
  419923:	jne    0x41992c
  419925:	add    DWORD PTR [esi+ecx*4+0x12],ecx
  419929:	sahf   
  41992a:	cdq    
  41992b:	xor    cl,al
  41992d:	int3   
  41992e:	mov    al,ds:0x2b4a803b
  419933:	loope  0x419983
  419935:	xchg   edx,eax
  419936:	adc    esp,ebx
  419938:	xchg   ebp,eax
  419939:	mov    dh,0x22
  41993b:	fisttp WORD PTR [esi+0x61]
  41993e:	push   0xffffffe3
  419940:	xor    eax,0x2986a571
  419945:	mov    esp,DWORD PTR ds:0xd82ffb7a
  41994b:	pop    edi
  41994c:	cli    
  41994d:	xchg   ecx,eax
  41994e:	cli    
  41994f:	loop   0x4198de
  419951:	iret   
  419952:	inc    edi
  419953:	push   0x65e13afd
  419958:	inc    ax
  41995a:	pushf  
  41995b:	leave  
  41995c:	pushf  
  41995d:	inc    ecx
  41995e:	and    ebp,DWORD PTR [edx*1+0x41f9c08a]
  419965:	ror    DWORD PTR ds:0x25796e99,1
  41996b:	arpl   WORD PTR [ebx-0x1c],cx
  41996e:	cmp    ebp,DWORD PTR [esi+ecx*2]
  419971:	cmp    edi,DWORD PTR [edx+0x47]
  419974:	fsub   QWORD PTR [eax]
  419976:	ror    BYTE PTR [edx],0x3f
  419979:	pop    edx
  41997a:	mov    edi,0x5bb85952
  41997f:	pop    ds
  419980:	jecxz  0x419988
  419982:	and    eax,0x3cd5db51
  419987:	sub    esi,DWORD PTR [esi]
  419989:	jbe    0x41996e
  41998b:	neg    DWORD PTR [eax+0x18]
  41998e:	mov    eax,0x6e5fb196
  419993:	or     al,0x9
  419995:	and    DWORD PTR [eax+0x6c245b85],0xc1b8b133
  41999f:	scas   eax,DWORD PTR es:[edi]
  4199a0:	sbb    DWORD PTR [ecx],edx
  4199a2:	pop    es
  4199a3:	sub    bl,BYTE PTR [esi-0x52]
  4199a6:	mov    WORD PTR ds:0x80cf69d0,cs
  4199ac:	mov    WORD PTR ds:0x549ca838,es
  4199b2:	fidivr DWORD PTR [ebx+0x4a]
  4199b5:	inc    esi
  4199b6:	jmp    0x41998a
  4199b8:	imul   eax,DWORD PTR ds:0x32fb9fc9,0x1abb4017
  4199c2:	int    0xb0
  4199c4:	test   al,0x2b
  4199c6:	adc    cl,BYTE PTR [ebx]
  4199c8:	outs   dx,DWORD PTR ds:[esi]
  4199c9:	or     eax,0x77ef9a05
  4199ce:	(bad)
  4199d1:	pop    es
  4199d2:	shl    DWORD PTR [edi+ecx*1-0x7c],0x76
  4199d7:	adc    DWORD PTR [esi+eax*1-0x66],esi
  4199db:	in     eax,dx
  4199dc:	mov    bh,0xb6
  4199de:	js     0x419a10
  4199e0:	mov    ah,BYTE PTR [edx+ecx*4]
  4199e3:	mov    edx,0x9fc6179f
  4199e8:	(bad)  
  4199e9:	rcl    DWORD PTR [ecx-0x52ec8ba3],cl
  4199ef:	sub    eax,0x606f64dd
  4199f4:	fcom   QWORD PTR ds:0xea71e160
  4199fa:	std    
  4199fb:	mov    edx,0x660a555d
  419a00:	push   cs
  419a01:	cli    
  419a02:	lahf   
  419a03:	lahf   
  419a04:	mov    cs,esp
  419a06:	mov    cl,0x31
  419a08:	stc    
  419a09:	pop    ebx
  419a0a:	ins    BYTE PTR es:[edi],dx
  419a0b:	sub    al,0x98
  419a0d:	mov    bh,0x2c
  419a0f:	push   ds
  419a10:	push   esi
  419a11:	test   eax,0x1d71c4e5
  419a16:	popf   
  419a17:	mov    eax,ds:0x4a931dd7
  419a1c:	jmp    0xc79f:0xeab3d748
  419a23:	inc    ebx
  419a24:	inc    ebx
  419a25:	enter  0xee59,0x49
  419a29:	push   es
  419a2a:	xchg   esp,eax
  419a2b:	(bad)  
  419a2c:	fiadd  WORD PTR [ebx+0x4681013f]
  419a32:	xchg   ebp,eax
  419a33:	icebp  
  419a34:	inc    ebp
  419a35:	or     ah,al
  419a37:	hlt    
  419a38:	repz sahf 
  419a3a:	ds xchg ebp,eax
  419a3c:	xor    BYTE PTR [ebp-0x17],ah
  419a3f:	mov    ds:0x3c5f44d5,al
  419a44:	cld    
  419a45:	add    DWORD PTR [edx+0x13],ecx
  419a48:	push   0x27fa18e8
  419a4d:	adc    cl,BYTE PTR [ebx+eiz*2-0x7c0cbf]
  419a54:	push   edx
  419a55:	jo     0x419ac0
  419a57:	or     BYTE PTR [esi],dh
  419a59:	xchg   edx,eax
  419a5a:	xchg   BYTE PTR [esi],al
  419a5c:	inc    ebx
  419a5d:	jbe    0x419ac8
  419a5f:	fcmovnb st,st(3)
  419a61:	aad    0x80
  419a63:	aad    0x9f
  419a65:	mov    eax,DWORD PTR cs:[ebp+0x18776581]
  419a6c:	cld    
  419a6d:	fistp  WORD PTR [ebx]
  419a6f:	add    DWORD PTR [eax],edi
  419a71:	add    ch,BYTE PTR [edx+0x6a095e62]
  419a77:	repnz xchg ebp,eax
  419a79:	dec    ebp
  419a7a:	pushf  
  419a7b:	leave  
  419a7c:	add    eax,0x4110fe4
  419a81:	in     al,dx
  419a82:	inc    esi
  419a83:	dec    edi
  419a84:	pop    ebx
  419a85:	jo     0x419a1c
  419a87:	or     edi,edx
  419a89:	inc    esp
  419a8a:	dec    ecx
  419a8b:	xchg   ebx,eax
  419a8c:	jmp    0xfdc8fc1e
  419a91:	retf   
  419a92:	xchg   esp,eax
  419a93:	push   esi
  419a94:	sub    BYTE PTR [edi+eax*4+0x5],0x41
  419a99:	dec    esi
  419a9a:	int3   
  419a9b:	out    dx,eax
  419a9c:	adc    eax,0x732f546a
  419aa1:	mov    edi,0x3f96620c
  419aa6:	(bad)
  419aaa:	cmp    BYTE PTR [ebp+0x7119637d],al
  419ab0:	mov    bh,0xbe
  419ab2:	push   edx
  419ab3:	popf   
  419ab4:	push   0x2629c3a5
  419ab9:	adc    eax,0x118407e8
  419abe:	pushf  
  419abf:	and    al,0xa8
  419ac1:	pushf  
  419ac2:	cdq    
  419ac3:	sbb    esp,DWORD PTR [ecx-0x7b]
  419ac6:	pushf  
  419ac7:	sbb    al,0x66
  419ac9:	lods   eax,DWORD PTR ds:[esi]
  419aca:	rcl    BYTE PTR ds:0x14622ec1,1
  419ad0:	cwde   
  419ad1:	dec    ecx
  419ad2:	and    BYTE PTR [eax+0x505ee232],bl
  419ad8:	sbb    ecx,DWORD PTR [ebx]
  419ada:	dec    ebx
  419adb:	scas   al,BYTE PTR es:[edi]
  419adc:	push   esi
  419add:	retf   0x56f9
  419ae0:	(bad)  
  419ae1:	dec    edi
  419ae2:	xor    BYTE PTR [ebp+ebx*4-0x4a7f2427],0x94
  419aea:	mov    al,ds:0x74b75893
  419aef:	in     al,0x17
  419af1:	aam    0xd5
  419af3:	rcl    bl,1
  419af5:	add    bl,0x95
  419af8:	fiadd  DWORD PTR [edi+0x33]
  419afb:	adc    eax,0x838a048e
  419b00:	lods   al,BYTE PTR ds:[esi]
  419b01:	js     0x419a98
  419b03:	jbe    0x419ad5
  419b05:	imul   ebp,DWORD PTR [ebx+esi*2],0x0
  419b09:	sub    dh,0x30
  419b0c:	add    cl,BYTE PTR [eax+0x7271bdb8]
  419b12:	sub    BYTE PTR [esi-0x19],ch
  419b15:	mov    eax,0x88657a5f
  419b1a:	stos   DWORD PTR es:[edi],eax
  419b1b:	ror    DWORD PTR [esi],1
  419b1d:	retf   0xc4d5
  419b20:	data16 rcl BYTE PTR cs:[ebp-0x123420ec],cl
  419b28:	mov    al,0xac
  419b2a:	jge    0x419ab8
  419b2c:	cld    
  419b2d:	js     0x419abc
  419b2f:	mov    edx,ebp
  419b31:	pop    ss
  419b32:	dec    ecx
  419b33:	add    BYTE PTR [ebx+0xf05b80b],bh
  419b39:	inc    eax
  419b3a:	aad    0x18
  419b3c:	int3   
  419b3d:	outs   dx,DWORD PTR ds:[esi]
  419b3e:	aaa    
  419b3f:	mov    DWORD PTR [esi-0x78],esi
  419b42:	inc    edi
  419b43:	or     DWORD PTR ds:0xb9e63107,edi
  419b49:	push   edi
  419b4a:	mov    ds,WORD PTR [eax]
  419b4c:	mov    edi,DWORD PTR [edx-0x62]
  419b4f:	in     eax,0xee
  419b51:	inc    eax
  419b52:	into   
  419b53:	test   al,0x67
  419b55:	jecxz  0x419ba4
  419b57:	xor    DWORD PTR [edi],edx
  419b59:	jne    0x419af0
  419b5b:	cmc    
  419b5c:	std    
  419b5d:	pusha  
  419b5e:	loope  0x419b6e
  419b60:	push   ebx
  419b61:	aad    0xe
  419b63:	push   ecx
  419b64:	leave  
  419b65:	pop    ss
  419b66:	inc    edi
  419b67:	dec    DWORD PTR [edx]
  419b69:	push   es
  419b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b6b:	fnstenv [ebx]
  419b6d:	jne    0x419b74
  419b6f:	xor    cl,BYTE PTR [esi-0x49]
  419b72:	add    eax,0x6d7864c4
  419b77:	push   0x1e843e5a
  419b7c:	cmp    BYTE PTR [esi+ebx*8-0x40a1297d],al
  419b83:	jl     0x419bcd
  419b85:	sbb    DWORD PTR [eax],0x3f
  419b88:	cwde   
  419b89:	xchg   ecx,eax
  419b8a:	jg     0x419bdd
  419b8c:	adc    BYTE PTR [esi],bl
  419b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b8f:	loope  0x419be4
  419b91:	push   0xffffffbc
  419b93:	mov    dl,0x3f
  419b95:	daa    
  419b96:	inc    ecx
  419b97:	push   esp
  419b98:	dec    eax
  419b99:	iret   
  419b9a:	fidiv  WORD PTR [eax]
  419b9c:	in     al,dx
  419b9d:	in     eax,0x60
  419b9f:	stos   DWORD PTR es:[edi],eax
  419ba0:	jge    0x419b98
  419ba2:	inc    eax
  419ba3:	adc    eax,0x93581a11
  419ba8:	xor    ebx,DWORD PTR [edx-0x4f9eb29c]
  419bae:	jno    0x419b42
  419bb0:	dec    ebx
  419bb1:	mov    bh,cl
  419bb3:	mov    WORD PTR [esi-0x76],?
  419bb6:	adc    edx,edx
  419bb8:	sub    ebp,ebx
  419bba:	shl    al,cl
  419bbc:	scas   al,BYTE PTR es:[edi]
  419bbd:	fsub   st(0),st
  419bbf:	push   ebx
  419bc0:	fld    st(6)
  419bc2:	repnz push ds
  419bc4:	test   al,0x9c
  419bc6:	stos   DWORD PTR es:[edi],eax
  419bc7:	mov    WORD PTR [eax-0x8],cs
  419bca:	nop
  419bcb:	dec    ebp
  419bcc:	add    BYTE PTR [ebp+0x3e],cl
  419bcf:	sub    DWORD PTR [ecx+0x7e],edi
  419bd2:	mov    cl,0xda
  419bd4:	enter  0xc4ac,0x1a
  419bd8:	mov    esi,0x9063c866
  419bdd:	inc    ebp
  419bde:	jecxz  0x419bd2
  419be0:	push   esp
  419be1:	loop   0x419c44
  419be3:	popf   
  419be4:	mov    dl,0x9f
  419be6:	ret    
  419be7:	add    eax,0x214db299
  419bec:	and    DWORD PTR [edx+0x21d5f528],ecx
  419bf2:	imul   BYTE PTR [edi]
  419bf4:	pop    ds
  419bf5:	push   edx
  419bf6:	jmp    0x2f4c:0x83c3c736
  419bfd:	fst    DWORD PTR [esi+ecx*1-0x7d337589]
  419c04:	and    ecx,DWORD PTR [edx+0x1b]
  419c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c08:	ret    0xf398
  419c0b:	fcom   DWORD PTR [ecx-0x264ebd6b]
  419c11:	xchg   esp,eax
  419c12:	xchg   ebp,eax
  419c13:	jbe    0x419bf8
  419c15:	xchg   edi,edx
  419c17:	add    DWORD PTR [esi],eax
  419c19:	lock call 0x9ddb:0x6c0c2b2f
  419c21:	cwde   
  419c22:	push   edx
  419c23:	sub    cl,ah
  419c25:	or     edx,eax
  419c27:	mov    esp,0xff78b598
  419c2c:	rcl    DWORD PTR [edx+0x2840d2f1],1
  419c32:	(bad)  
  419c33:	jmp    0x736a:0x8b87014c
  419c3a:	fld    st(1)
  419c3c:	jns    0x419cba
  419c3e:	mov    eax,0x17f31871
  419c43:	xlat   BYTE PTR ds:[ebx]
  419c44:	dec    esp
  419c45:	out    dx,al
  419c46:	adc    BYTE PTR [ebp+0x35af4edd],dh
  419c4c:	dec    ecx
  419c4d:	xchg   edx,eax
  419c4e:	push   ebp
  419c4f:	rcr    DWORD PTR [esp+eax*4],cl
  419c52:	and    DWORD PTR [edi-0x4],eax
  419c55:	sub    BYTE PTR [ebx],bh
  419c57:	jmp    0xca9feb55
  419c5c:	clc    
  419c5d:	out    0x8c,al
  419c5f:	mov    esi,0x516d9aae
  419c64:	sti    
  419c65:	adc    eax,0x5fbb1616
  419c6a:	push   ds
  419c6b:	js     0x419c54
  419c6d:	outs   dx,DWORD PTR ds:[esi]
  419c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c6f:	fs aad 0x49
  419c72:	mov    ebx,0x9e7b1bd4
  419c77:	std    
  419c78:	xchg   ebp,eax
  419c79:	mov    DWORD PTR [ecx-0x7f10a216],ebp
  419c7f:	shl    dl,cl
  419c81:	xor    al,0xb1
  419c83:	cdq    
  419c84:	or     al,0x50
  419c86:	push   ecx
  419c87:	pop    ss
  419c88:	cmp    dl,al
  419c8a:	das    
  419c8b:	sbb    edx,DWORD PTR ds:0x306b2df
  419c91:	cmc    
  419c92:	jle    0x419c33
  419c94:	ret    
  419c95:	and    DWORD PTR [ebx+ebx*8+0x73d591c2],eax
  419c9c:	loopne 0x419cd8
  419c9e:	add    al,ah
  419ca0:	cmp    BYTE PTR [eax],0xf2
  419ca3:	mov    dh,0x18
  419ca5:	sub    bh,BYTE PTR [ecx-0x6743a9be]
  419cab:	mov    ebp,0xbd938246
  419cb0:	shl    BYTE PTR [ebx+0x2f],0x6f
  419cb4:	stc    
  419cb5:	cmp    edi,DWORD PTR [edx]
  419cb7:	mov    edx,0xb277dfef
  419cbc:	jp     0x419ca5
  419cbe:	fist   WORD PTR [eax-0x47]
  419cc1:	into   
  419cc2:	cmp    BYTE PTR [ebx],ch
  419cc4:	and    edx,DWORD PTR [ecx-0x72]
  419cc7:	xchg   edi,eax
  419cc8:	iret   
  419cc9:	test   DWORD PTR [ecx-0x7fc21f5a],0x57b078ec
  419cd3:	mov    cl,0x39
  419cd5:	lock out dx,al
  419cd7:	nop
  419cd8:	mov    bh,0xc0
  419cda:	dec    esi
  419cdb:	aaa    
  419cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cdd:	call   0x83f95d9d
  419ce2:	cmp    al,0x62
  419ce4:	paddq  mm2,QWORD PTR [eax+0x71]
  419ce8:	loopne 0x419cd6
  419cea:	std    
  419ceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cec:	daa    
  419ced:	add    edx,DWORD PTR [ebx+0x33d0b2a5]
  419cf3:	test   eax,0x54e1a356
  419cf8:	and    DWORD PTR [ecx+0x4874dc83],esp
  419cfe:	in     eax,0xf4
  419d00:	scas   eax,DWORD PTR es:[edi]
  419d01:	dec    edi
  419d02:	aas    
  419d03:	xor    BYTE PTR [eax+0x30],dl
  419d06:	and    al,0x8e
  419d08:	mov    ch,BYTE PTR [ebx+0x23]
  419d0b:	xchg   ecx,eax
  419d0c:	add    al,0x5a
  419d0e:	in     al,dx
  419d0f:	and    eax,0xaba52d61
  419d14:	ja     0x419d21
  419d16:	mov    cl,0x75
  419d18:	xchg   ebx,eax
  419d19:	push   edx
  419d1a:	scas   eax,DWORD PTR es:[edi]
  419d1b:	mov    eax,ds:0xa0af3545
  419d20:	ins    BYTE PTR es:[edi],dx
  419d21:	iret   
  419d22:	fnstcw WORD PTR [ecx+0x6f]
  419d25:	jmp    0x419d1d
  419d27:	icebp  
  419d28:	push   ebp
  419d29:	bound  ebp,QWORD PTR [eax+0x4adb7a15]
  419d2f:	pusha  
  419d30:	jl     0x419d01
  419d32:	idiv   DWORD PTR [edx]
  419d34:	lea    ebx,[esp+ecx*4+0x3bf7db47]
  419d3b:	adc    al,0x4f
  419d3d:	out    dx,al
  419d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d3f:	scas   al,BYTE PTR es:[edi]
  419d40:	test   BYTE PTR [edx],0xb0
  419d43:	sub    esp,edi
  419d45:	xchg   DWORD PTR [edi-0x37],ebp
  419d48:	es mov ebp,0x16ec6dfb
  419d4e:	ds jg  0x419cf9
  419d51:	bound  esi,QWORD PTR [edi+0xc]
  419d54:	mov    bl,0x8e
  419d56:	jmp    0x419d1f
  419d58:	sbb    BYTE PTR ds:0x94871ff8,al
  419d5e:	frstor [eax+0x55]
  419d61:	shl    ebx,0xdc
  419d64:	sbb    DWORD PTR [ebx],edx
  419d66:	inc    ebp
  419d67:	cmp    bl,BYTE PTR [ebp-0x2b24598a]
  419d6d:	xor    eax,0x6d74eae1
  419d72:	dec    ebx
  419d73:	or     BYTE PTR [edi+0x68],cl
  419d76:	dec    esp
  419d77:	arpl   WORD PTR [edx-0x5d4f3bc3],bx
  419d7d:	pop    ebx
  419d7e:	aam    0x89
  419d80:	icebp  
  419d81:	xor    DWORD PTR [eax+ebp*2],esi
  419d84:	add    DWORD PTR [esi],edx
  419d86:	rol    dh,cl
  419d88:	fwait
  419d89:	idiv   DWORD PTR ds:0x3871d423
  419d8f:	mov    ss,WORD PTR [edx-0xb]
  419d92:	or     ecx,DWORD PTR [ecx-0x5c]
  419d95:	ja     0x419ded
  419d97:	sbb    eax,edi
  419d99:	push   es
  419d9a:	cdq    
  419d9b:	lock lods al,BYTE PTR ds:[esi]
  419d9d:	popa   
  419d9e:	ficom  WORD PTR [ecx]
  419da0:	mov    dh,0xd0
  419da2:	xchg   BYTE PTR [esi-0x14],dh
  419da5:	les    esi,FWORD PTR [ebp+0x76]
  419da8:	pop    edx
  419da9:	imul   bl
  419dab:	(bad)
  419daf:	aaa    
  419db0:	adc    dl,BYTE PTR [edi]
  419db2:	cmp    BYTE PTR [ebp-0x6d5f0e7a],dh
  419db8:	or     bh,BYTE PTR [ebp+0x68]
  419dbb:	cmp    BYTE PTR [eax-0x18adfd0f],bh
  419dc1:	pop    eax
  419dc2:	sti    
  419dc3:	xrelease xchg BYTE PTR [ecx],dl
  419dc6:	xor    BYTE PTR [ecx],cl
  419dc8:	jg     0x419df0
  419dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dcb:	fstp   TBYTE PTR [edi-0x4]
  419dce:	xchg   edi,eax
  419dcf:	push   es
  419dd0:	mov    ds:0x8dd7872f,eax
  419dd5:	mov    esi,0x97953ee4
  419dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ddb:	mov    bh,0xa3
  419ddd:	add    BYTE PTR [ecx-0x2d],0x7f
  419de1:	bound  ebp,QWORD PTR [esi]
  419de3:	dec    edi
  419de4:	cwde   
  419de5:	xor    DWORD PTR [ecx-0x16d3f19e],esp
  419deb:	add    al,0x6d
  419ded:	test   al,0x79
  419def:	js     0x419e44
  419df1:	(bad)  
  419df2:	cmp    DWORD PTR [ebx],ebp
  419df4:	inc    edi
  419df5:	retf   0xaa7a
  419df8:	sbb    al,0x7a
  419dfa:	adc    bl,BYTE PTR [ecx]
  419dfc:	pusha  
  419dfd:	cli    
  419dfe:	cdq    
  419dff:	popf   
  419e00:	cmp    ch,BYTE PTR [edx-0x29a7ef78]
  419e06:	into   
  419e07:	push   ebx
  419e08:	and    BYTE PTR [ebp-0x1a10740b],dh
  419e0e:	imul   ebx
  419e10:	adc    eax,0xe57fd78a
  419e15:	pop    ebp
  419e16:	lock (bad) 
  419e18:	outs   dx,DWORD PTR ds:[esi]
  419e19:	dec    ecx
  419e1a:	jns    0x419dde
  419e1c:	mov    bl,0x72
  419e1e:	and    BYTE PTR [ecx],dh
  419e20:	test   BYTE PTR [edi-0x6b],bl
  419e23:	mov    edx,0x7450460b
  419e28:	js     0x419e07
  419e2a:	mov    ebp,0x24a459ea
  419e2f:	sub    ecx,DWORD PTR [ebx-0x55]
  419e32:	add    al,0x9a
  419e34:	mov    al,0x59
  419e36:	or     BYTE PTR [eax-0x5878b41f],dh
  419e3c:	push   eax
  419e3d:	cmp    eax,0xe3fc1b10
  419e42:	mov    al,ds:0xacfa524c
  419e47:	or     eax,0x220b293b
  419e4c:	in     eax,0xd9
  419e4e:	adc    eax,0x114b2f39
  419e53:	div    edx
  419e55:	xor    BYTE PTR [ecx],0xca
  419e58:	push   edi
  419e59:	push   esp
  419e5a:	out    0x78,al
  419e5c:	xchg   ecx,eax
  419e5d:	fisttp DWORD PTR [edx]
  419e5f:	bswap  ebp
  419e61:	jp     0x419e2d
  419e63:	push   edi
  419e64:	into   
  419e65:	pop    esp
  419e66:	sub    bh,dh
  419e68:	pop    ebp
  419e69:	in     eax,dx
  419e6a:	mov    ecx,0x9b8f048b
  419e6f:	mov    esi,0x710b050d
  419e74:	and    cl,BYTE PTR [ebx+0xc81cdfc]
  419e7a:	mov    al,0x5
  419e7c:	fcmovbe st,st(7)
  419e7e:	xor    eax,0xa29da842
  419e83:	inc    ebp
  419e84:	jne    0x419e95
  419e86:	test   BYTE PTR [ecx+0x7e],cl
  419e89:	add    al,0x49
  419e8b:	push   edx
  419e8c:	pop    ebp
  419e8d:	jnp    0x419ea0
  419e8f:	xor    al,0xc6
  419e91:	adc    al,0xb6
  419e93:	(bad)
  419e96:	xor    DWORD PTR cs:[edx+0x34],edx
  419e9a:	popf   
  419e9b:	add    eax,0xf785c6a8
  419ea0:	retf   0xffad
  419ea3:	sbb    al,BYTE PTR [ebp-0x17]
  419ea6:	ja     0x419ed0
  419ea8:	aas    
  419ea9:	and    al,0x14
  419eab:	nop
  419eac:	arpl   bp,cx
  419eae:	lea    edi,[edi+ebp*4+0x60]
  419eb2:	stos   DWORD PTR es:[edi],eax
  419eb3:	lods   eax,DWORD PTR ds:[esi]
  419eb4:	outs   dx,BYTE PTR ds:[esi]
  419eb5:	mov    bl,0x97
  419eb7:	(bad)  
  419eb8:	rcl    DWORD PTR [ecx],cl
  419eba:	es xchg sp,ax
  419ebd:	ss (bad) 
  419ebf:	out    dx,eax
  419ec0:	dec    eax
  419ec1:	mov    DWORD PTR [eax-0x8],0x1756c834
  419ec8:	jmp    0xbf9c:0x47436f22
  419ecf:	call   0xefde:0x316ad641
  419ed6:	xchg   edx,eax
  419ed7:	inc    edi
  419ed8:	cdq    
  419ed9:	sub    esi,DWORD PTR [ebp-0x1c]
  419edc:	add    al,0xa9
  419ede:	les    ebx,FWORD PTR ds:0xbd666dce
  419ee4:	mov    ch,0x1c
  419ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ee7:	retf   0x9ec9
  419eea:	shl    esi,cl
  419eec:	xchg   ebp,esp
  419eee:	out    0x8,eax
  419ef0:	aam    0x7a
  419ef2:	jb     0xbb8d84a4
  419ef8:	xchg   esp,eax
  419ef9:	call   0xc2ab:0xd303df54
  419f00:	mov    ebx,0xc6fc3283
  419f05:	push   ebx
  419f06:	lods   eax,DWORD PTR ds:[esi]
  419f07:	enter  0x491,0x4b
  419f0b:	loope  0x419ee0
  419f0d:	pop    ebp
  419f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f0f:	popa   
  419f10:	adc    edx,esi
  419f12:	xchg   edx,eax
  419f13:	test   BYTE PTR [eax+0x1ee57116],dl
  419f19:	rcl    DWORD PTR ds:0xf81a9623,0xb2
  419f20:	inc    ebx
  419f21:	add    eax,0xb25f666f
  419f26:	test   BYTE PTR ds:0x6a1ab0d,0x5c
  419f2d:	jle    0x419f0d
  419f2f:	ins    BYTE PTR es:[edi],dx
  419f30:	fmul   st,st(6)
  419f32:	adc    ebp,DWORD PTR [ebp+0x786ee3f4]
  419f38:	cmp    DWORD PTR [edx+eiz*2-0x75b4fb4d],edi
  419f3f:	pop    esi
  419f40:	mov    esp,0xc35a9d70
  419f45:	xor    bl,dl
  419f47:	jns    0x419edb
  419f49:	mov    al,ds:0xfd4d4b86
  419f4e:	and    eax,0xe28be969
  419f53:	and    al,0x5b
  419f55:	stc    
  419f56:	lods   eax,DWORD PTR ds:[esi]
  419f57:	sbb    BYTE PTR [eax],ch
  419f59:	mov    ebx,DWORD PTR [esi]
  419f5b:	jmp    0x7afe653e
  419f60:	out    dx,al
  419f61:	jge    0x419f55
  419f63:	jmp    DWORD PTR [ebx-0xf]
  419f66:	cmp    DWORD PTR [ecx],0x897adb7e
  419f6c:	in     eax,0x99
  419f6e:	dec    ebp
  419f6f:	sbb    ebx,DWORD PTR [eax-0x4aae2f56]
  419f75:	mov    eax,0xe5efb401
  419f7a:	sbb    al,0x83
  419f7c:	mov    al,0xc4
  419f7e:	fdivp  st(4),st
  419f80:	or     DWORD PTR [ecx],ebp
  419f82:	sub    DWORD PTR [ebp-0x61],edi
  419f85:	mov    dh,bl
  419f87:	inc    eax
  419f88:	les    esi,FWORD PTR [ebx-0x6a2e7431]
  419f8e:	fimul  DWORD PTR [eax+ebx*1+0x5112e4e7]
  419f95:	mov    al,0xc4
  419f97:	stc    
  419f98:	xchg   esi,eax
  419f99:	push   ebp
  419f9a:	xor    eax,0xd856ae55
  419f9f:	imul   ebx
  419fa1:	imul   esi,DWORD PTR [edi+0x51],0x117f9c6d
  419fa8:	mov    ebx,0x85b293f4
  419fad:	mov    cs,esi
  419faf:	xchg   ebp,eax
  419fb0:	dec    ebx
  419fb1:	outs   dx,DWORD PTR ds:[esi]
  419fb2:	fst    QWORD PTR [ebp+0x756a4554]
  419fb8:	js     0x419fe3
  419fba:	mov    ecx,0x2ca2cd0
  419fbf:	dec    ebp
  419fc0:	mov    ebp,0x7b31f12
  419fc5:	mov    ecx,0xce816527
  419fca:	test   al,0xd9
  419fcc:	(bad)  
  419fcd:	out    0xcb,eax
  419fcf:	popf   
  419fd0:	xor    BYTE PTR [ebp+0x14],dh
  419fd3:	mov    ds:0x9549482b,eax
  419fd8:	stc    
  419fd9:	mov    DWORD PTR [edx],ebp
  419fdb:	popf   
  419fdc:	and    DWORD PTR [ecx-0x8],0x62
  419fe0:	out    0x5d,al
  419fe2:	aas    
  419fe3:	lods   eax,DWORD PTR ds:[esi]
  419fe4:	lahf   
  419fe5:	pop    ss
  419fe6:	jns    0x41a064
  419fe8:	retf   0x3c46
  419feb:	jl     0x419fbb
  419fed:	outs   dx,DWORD PTR ds:[esi]
  419fee:	sub    BYTE PTR [eax+0x2e7c2f82],ah
  419ff4:	arpl   bp,bx
  419ff6:	add    al,0x11
  419ff8:	inc    ebp
  419ff9:	xchg   ebp,eax
  419ffa:	xor    eax,0x820f9328
  419fff:	outs   dx,BYTE PTR ds:[esi]
  41a000:	add    bl,dh
  41a002:	test   DWORD PTR [ecx],ecx
  41a004:	lock pop edi
  41a006:	dec    BYTE PTR [esi+ebx*8]
  41a009:	jg     0x41a074
  41a00b:	dec    BYTE PTR [ecx+0x8cf31f7]
  41a011:	inc    ebx
  41a012:	fcom   QWORD PTR [ebx+ebx*8]
  41a015:	mov    ds:0x20bedaff,eax
  41a01a:	test   al,0x80
  41a01c:	mov    bh,0xdd
  41a01e:	pop    edx
  41a01f:	mov    edi,0x46efbcf9
  41a024:	(bad)  
  41a025:	idiv   cl
  41a027:	cdq    
  41a028:	xchg   esp,eax
  41a029:	jae    0x41a066
  41a02b:	jno    0x41a044
  41a02d:	inc    ecx
  41a02e:	mov    ecx,0x2bbab8f8
  41a033:	bound  ebx,QWORD PTR [eax]
  41a035:	out    dx,eax
  41a036:	jge    0x419fea
  41a038:	nop
  41a039:	xchg   esp,ebp
  41a03b:	data16 adc bl,ah
  41a03e:	push   esi
  41a03f:	push   edx
  41a040:	or     eax,0x75fd1928
  41a045:	out    0xf1,eax
  41a047:	fild   DWORD PTR [esi+ebx*2-0xd]
  41a04b:	jo     0x41a09f
  41a04d:	pop    esp
  41a04e:	nop
  41a04f:	pop    ss
  41a050:	aad    0x6c
  41a052:	sti    
  41a053:	(bad)  
  41a055:	rol    DWORD PTR [ebp+ebp*1-0x6d24493e],0xa4
  41a05d:	inc    edi
  41a05e:	ins    DWORD PTR es:[edi],dx
  41a05f:	mov    edi,0xd7f36be5
  41a064:	out    0xe9,eax
  41a066:	enter  0x114e,0x31
  41a06a:	mov    al,ds:0x3bd4bc01
  41a06f:	out    dx,eax
  41a070:	ins    WORD PTR es:[edi],dx
  41a072:	pusha  
  41a073:	outs   dx,DWORD PTR ds:[esi]
  41a074:	adc    DWORD PTR [ecx-0x21],0x6b
  41a078:	in     eax,0xb
  41a07a:	fld    TBYTE PTR [ecx-0x7e8bf51]
  41a080:	cdq    
  41a081:	adc    BYTE PTR [ebx+0x3b],dh
  41a084:	mov    dl,0x6
  41a086:	pop    DWORD PTR [edi]
  41a088:	test   DWORD PTR [edi],esi
  41a08a:	int3   
  41a08b:	out    dx,al
  41a08c:	xor    DWORD PTR [edi],esp
  41a08e:	mov    eax,ds:0x5c02fb87
  41a093:	in     al,dx
  41a094:	psubusw mm6,mm0
  41a097:	fadd   DWORD PTR [esi+0x71ae07c8]
  41a09d:	add    eax,0x21cbb46e
  41a0a2:	xor    eax,0xdd59c0f9
  41a0a7:	nop
  41a0a8:	jns    0x41a124
  41a0aa:	repnz rcr DWORD PTR [ebx],cl
  41a0ad:	cli    
  41a0ae:	xor    BYTE PTR [ebp-0x68],dh
  41a0b1:	leave  
  41a0b2:	mov    ds:0x16f919f6,al
  41a0b7:	jns    0x41a134
  41a0b9:	outs   dx,DWORD PTR ds:[esi]
  41a0ba:	daa    
  41a0bb:	iret   
  41a0bc:	push   esp
  41a0bd:	or     DWORD PTR [eax-0x39],ebp
  41a0c0:	or     al,0x16
  41a0c2:	icebp  
  41a0c3:	sub    DWORD PTR [edx+eax*4-0x6a],edi
  41a0c7:	ret    
  41a0c8:	cmp    dh,BYTE PTR [edx-0x5789f8b2]
  41a0ce:	hlt    
  41a0cf:	in     eax,dx
  41a0d0:	fwait
  41a0d1:	mov    eax,cs:0x75619341
  41a0d7:	cmp    eax,0x6d5c48e5
  41a0dc:	icebp  
  41a0dd:	mov    cl,0xf6
  41a0df:	rcr    DWORD PTR [edi+0x25],0x10
  41a0e3:	mov    edi,DWORD PTR [edi]
  41a0e5:	cmp    bh,BYTE PTR [edi-0x51254ec1]
  41a0eb:	lea    eax,[edi+0xf]
  41a0ee:	jecxz  0x41a085
  41a0f0:	or     al,ah
  41a0f2:	mov    fs,ebx
  41a0f4:	mov    esi,0xfcd21fdb
  41a0f9:	rcl    BYTE PTR [ecx+0x79],0xde
  41a0fd:	or     DWORD PTR [edi+0x7a],esp
  41a100:	shr    DWORD PTR [ebx],cl
  41a102:	pushf  
  41a103:	dec    esi
  41a104:	neg    bl
  41a106:	pop    ebx
  41a107:	clc    
  41a108:	jno    0x41a0c6
  41a10a:	push   ebx
  41a10b:	int3   
  41a10c:	stos   DWORD PTR es:[edi],eax
  41a10d:	cmc    
  41a10e:	mov    WORD PTR [esi+0x78c7b1ae],cs
  41a114:	lods   al,BYTE PTR ds:[esi]
  41a115:	ret    0x2a49
  41a118:	sub    DWORD PTR [esi-0x7],ecx
  41a11b:	xchg   ebx,eax
  41a11c:	nop
  41a11d:	push   eax
  41a11e:	repnz sub eax,0x7513466c
  41a124:	out    dx,eax
  41a125:	das    
  41a126:	ss push ebx
  41a128:	jmp    0x41a19e
  41a12a:	adc    DWORD PTR [edx+0x144b4387],esp
  41a130:	stc    
  41a131:	or     DWORD PTR [edi],edx
  41a133:	(bad)
  41a137:	ins    BYTE PTR es:[edi],dx
  41a138:	fistp  DWORD PTR [esp+edx*4]
  41a13b:	pop    ebp
  41a13c:	xchg   ebx,eax
  41a13d:	icebp  
  41a13e:	push   ebx
  41a13f:	pop    es
  41a140:	sahf   
  41a141:	inc    BYTE PTR [ebp+0x302bdd46]
  41a147:	push   edi
  41a148:	jnp    0x41a1c2
  41a14a:	mov    al,BYTE PTR [esp+ebx*2+0x39a0b5e0]
  41a151:	out    0x9d,al
  41a153:	fs mov esp,0xcedef45d
  41a159:	ins    BYTE PTR es:[edi],dx
  41a15a:	test   eax,0xdc02563e
  41a15f:	repz dec eax
  41a161:	mov    ch,0xd6
  41a163:	jno    0x41a1e0
  41a165:	cmp    esp,DWORD PTR [eax]
  41a167:	mov    al,ds:0x3141a6ac
  41a16c:	or     ch,cl
  41a16e:	(bad)  
  41a16f:	inc    esp
  41a170:	mov    DWORD PTR [edx-0x57],edx
  41a173:	jmp    FWORD PTR [ecx+0x5273eb62]
  41a179:	rcl    DWORD PTR [edi],0x67
  41a17c:	pop    edx
  41a17d:	mov    al,ds:0xdc837cee
  41a182:	in     eax,dx
  41a183:	pop    ecx
  41a184:	xchg   esp,eax
  41a185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a186:	loopne 0x41a10a
  41a188:	cld    
  41a189:	loope  0x41a1e9
  41a18b:	jne    0x41a1f9
  41a18d:	mov    ds:0x9e4e8178,eax
  41a192:	dec    edx
  41a193:	fdivr  QWORD PTR [edx-0x5697c1cd]
  41a199:	shl    DWORD PTR [eax],1
  41a19b:	fs cdq 
  41a19d:	shl    ecx,0xfb
  41a1a0:	or     dl,ah
  41a1a2:	mov    bh,0xc6
  41a1a4:	mov    ah,0x5a
  41a1a6:	xor    BYTE PTR [edx+edi*8+0x52],0x62
  41a1ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1ac:	push   edi
  41a1ad:	add    DWORD PTR [edx],0x42eab67
  41a1b3:	jns    0x41a174
  41a1b5:	add    edi,DWORD PTR [eax-0x40]
  41a1b8:	xor    eax,0x49384285
  41a1bd:	mul    BYTE PTR [ebx+eax*2-0x31]
  41a1c1:	lock mov al,0x97
  41a1c4:	fidiv  DWORD PTR [ecx-0x7eec2ac0]
  41a1ca:	out    0x4e,al
  41a1cc:	sbb    ebp,DWORD PTR [esi]
  41a1ce:	jb     0x41a202
  41a1d0:	popf   
  41a1d1:	pop    eax
  41a1d2:	clc    
  41a1d3:	shl    DWORD PTR ds:0x9ec2a7f5,0x43
  41a1da:	or     eax,DWORD PTR [edi-0x71]
  41a1dd:	pop    edx
  41a1de:	in     eax,dx
  41a1df:	add    bl,bl
  41a1e1:	ins    BYTE PTR es:[edi],dx
  41a1e2:	cmp    DWORD PTR [ebx-0x6ef8640e],esp
  41a1e8:	sar    eax,cl
  41a1ea:	mov    ebp,0x44403b46
  41a1ef:	sbb    BYTE PTR [edx+0x25d063b1],bh
  41a1f5:	(bad)  
  41a1f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1f7:	pop    ebp
  41a1f8:	fistp  QWORD PTR [edx+eax*1+0x69]
  41a1fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1fd:	push   ebp
  41a1fe:	aaa    
  41a1ff:	xor    al,0xc9
  41a201:	aam    0x9a
  41a203:	dec    edi
  41a204:	retf   
  41a205:	add    dh,cl
  41a207:	pop    ecx
  41a208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a209:	fwait
  41a20a:	ds test eax,0xfb6c78af
  41a210:	scas   al,BYTE PTR es:[edi]
  41a211:	je     0x41a1ef
  41a213:	sar    DWORD PTR [esi+0x3cd104c8],1
  41a219:	adc    al,0xf6
  41a21b:	and    BYTE PTR [esi-0x1bf348fd],ah
  41a221:	sahf   
  41a222:	ror    DWORD PTR [esi+edx*8+0x4b],cl
  41a226:	inc    edi
  41a227:	xchg   esi,eax
  41a228:	(bad)  
  41a229:	js     0x41a26c
  41a22b:	mov    esi,0x5250fd75
  41a230:	out    dx,al
  41a231:	nop
  41a232:	outs   dx,DWORD PTR ds:[esi]
  41a233:	xor    eax,0x58ec6160
  41a238:	out    dx,al
  41a239:	jnp    0x41a2a0
  41a23b:	fistp  QWORD PTR [eax+0x67dd9c20]
  41a241:	loope  0x41a1f0
  41a243:	in     eax,0xa0
  41a245:	std    
  41a246:	inc    esi
  41a247:	ror    DWORD PTR [ecx-0x9],1
  41a24a:	cmp    eax,0xfdbb949f
  41a24f:	sub    ah,ch
  41a251:	add    eax,0x50855ff1
  41a256:	in     eax,0x1d
  41a258:	jo     0x41a266
  41a25a:	mov    esp,0xbbb0115c
  41a25f:	in     al,0x84
  41a261:	stc    
  41a262:	into   
  41a263:	mov    eax,ds:0xa3129507
  41a268:	inc    ebp
  41a269:	jle    0x41a29f
  41a26b:	cmp    eax,0x9b48eb55
  41a270:	sbb    eax,0xf1a2bdbf
  41a275:	movd   mm1,DWORD PTR ds:0x4742872f
  41a27c:	test   BYTE PTR [edi],cl
  41a27e:	lods   eax,DWORD PTR ds:[esi]
  41a27f:	and    eax,0x44e500b6
  41a284:	sbb    BYTE PTR [ebp-0x6229c206],dl
  41a28a:	dec    ebp
  41a28b:	in     al,dx
  41a28c:	ds stc 
  41a28e:	cmc    
  41a28f:	outs   dx,BYTE PTR ds:[esi]
  41a290:	inc    ah
  41a292:	push   edx
  41a293:	xchg   ebx,eax
  41a294:	or     ch,0xff
  41a297:	jmp    0x903e0b3
  41a29c:	sahf   
  41a29d:	jmp    0xcda6:0x6af41bfd
  41a2a4:	mov    al,BYTE PTR [ecx+ecx*8+0x3a]
  41a2a8:	xlat   BYTE PTR ds:[ebx]
  41a2a9:	jne    0x41a22c
  41a2ab:	in     eax,dx
  41a2ac:	lock int 0xe0
  41a2af:	dec    ecx
  41a2b0:	out    0x93,eax
  41a2b2:	mov    eax,ds:0x4a541c4e
  41a2b7:	fwait
  41a2b8:	or     ch,ah
  41a2ba:	cmp    al,0x7a
  41a2bc:	inc    esi
  41a2bd:	rol    DWORD PTR [edx+0x65755dad],0xc1
  41a2c4:	data16 fld QWORD PTR [ecx-0x7125f8ef]
  41a2cb:	in     al,0xf2
  41a2cd:	dec    eax
  41a2ce:	push   edi
  41a2cf:	daa    
  41a2d0:	in     eax,0x6f
  41a2d2:	xchg   ebx,eax
  41a2d3:	inc    esp
  41a2d4:	stc    
  41a2d5:	pushf  
  41a2d6:	in     eax,dx
  41a2d7:	and    DWORD PTR [edi],eax
  41a2d9:	and    BYTE PTR [esi-0x36],ch
  41a2dc:	lods   eax,DWORD PTR ds:[esi]
  41a2dd:	scas   eax,DWORD PTR es:[edi]
  41a2de:	xor    eax,0x47aaba75
  41a2e3:	sar    BYTE PTR [eax],cl
  41a2e5:	xor    al,0x55
  41a2e7:	or     eax,0xbfee12ed
  41a2ec:	stc    
  41a2ed:	fadd   QWORD PTR [eax+0x18]
  41a2f0:	push   esp
  41a2f1:	jg     0x41a27d
  41a2f3:	pop    es
  41a2f4:	mov    ecx,0x9bb35050
  41a2f9:	mov    ds:0xdc6cb89d,eax
  41a2fe:	mov    ds:0xd900830e,al
  41a303:	mov    ds:0x3433b362,al
  41a308:	add    al,0xe
  41a30a:	out    dx,eax
  41a30b:	sbb    cl,BYTE PTR [esi+0x53]
  41a30e:	ret    
  41a30f:	ret    0x89b4
  41a312:	mov    ebp,0x1064f131
  41a317:	inc    esi
  41a318:	and    bl,BYTE PTR [ebp+0x29e67d1d]
  41a31e:	mov    gs,ecx
  41a320:	mov    BYTE PTR [eax],ch
  41a322:	mov    edx,0x40e9bf22
  41a327:	mov    edi,0x1cb0aed2
  41a32c:	or     eax,0xd6d9b162
  41a331:	call   0x78dc993f
  41a336:	pop    ebx
  41a337:	jp     0x41a363
  41a339:	shr    BYTE PTR [eax+0x50],0x30
  41a33d:	cs stos DWORD PTR es:[edi],eax
  41a33f:	mov    ah,0x9a
  41a341:	gs pop ebx
  41a343:	sti    
  41a344:	fldcw  WORD PTR [eax+0x2b]
  41a347:	lds    ebx,FWORD PTR [ecx+0x35299f14]
  41a34d:	loope  0x41a361
  41a34f:	inc    ebp
  41a350:	data16 jbe 0x41a320
  41a353:	fdiv   QWORD PTR [ebx+0xbe5d888]
  41a359:	lahf   
  41a35a:	sahf   
  41a35b:	and    al,0xfb
  41a35d:	out    dx,al
  41a35e:	in     al,0x6c
  41a360:	inc    esp
  41a361:	inc    edx
  41a362:	in     al,0x4
  41a364:	jno    0x41a35c
  41a366:	mov    esi,0xa7d4048
  41a36b:	repnz jmp 0xfd1e:0x7003ca99
  41a373:	or     DWORD PTR [ebx-0x72a4cf7a],eax
  41a379:	inc    esp
  41a37a:	adc    edx,ebp
  41a37c:	outs   dx,BYTE PTR ds:[esi]
  41a37d:	jbe    0x41a38a
  41a37f:	sbb    DWORD PTR [ebx+0x37],eax
  41a382:	test   BYTE PTR [ecx],dl
  41a384:	loop   0x41a37a
  41a386:	cli    
  41a387:	xchg   ecx,eax
  41a388:	mov    eax,ds:0x9ee9ce8
  41a38d:	sar    BYTE PTR [ebx],1
  41a38f:	lock adc al,0xad
  41a392:	mov    esp,0xaf7da
  41a397:	pop    ss
  41a398:	lods   eax,DWORD PTR ds:[esi]
  41a399:	in     al,0xe9
  41a39b:	inc    esi
  41a39c:	mov    esp,0x4eba641
  41a3a1:	popf   
  41a3a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3a3:	fstp   QWORD PTR [eax+0x3431abf3]
  41a3a9:	retf   
  41a3aa:	push   ecx
  41a3ab:	cmp    al,0x60
  41a3ad:	or     eax,DWORD PTR [esi+0x4940acd8]
  41a3b3:	xor    edx,esi
  41a3b5:	leave  
  41a3b6:	pop    esi
  41a3b7:	pop    esi
  41a3b8:	jno    0x41a364
  41a3ba:	jle    0x41a34c
  41a3bc:	jecxz  0x41a35d
  41a3be:	shl    DWORD PTR [edx],1
  41a3c0:	int3   
  41a3c1:	inc    esp
  41a3c2:	out    0xef,al
  41a3c4:	xchg   ecx,eax
  41a3c5:	daa    
  41a3c6:	pop    eax
  41a3c7:	sbb    bh,BYTE PTR ds:0xc0ef3d88
  41a3cd:	(bad)  
  41a3ce:	push   ds
  41a3cf:	mov    ebx,0x891e9f2f
  41a3d4:	cmc    
  41a3d5:	popa   
  41a3d6:	and    DWORD PTR fs:[ebx+0x5c663888],edx
  41a3dd:	dec    eax
  41a3de:	mov    dl,0xdc
  41a3e0:	pop    ss
  41a3e1:	mov    ebx,0x62654215
  41a3e6:	rcr    DWORD PTR [eax+esi*1+0x44],1
  41a3ea:	mov    ?,edi
  41a3ec:	pop    ebx
  41a3ed:	jp     0x41a444
  41a3ef:	pushf  
  41a3f0:	in     al,0x81
  41a3f2:	pop    esp
  41a3f3:	inc    edx
  41a3f4:	xlat   BYTE PTR ds:[ebx]
  41a3f5:	stos   BYTE PTR es:[edi],al
  41a3f6:	add    ebp,ebp
  41a3f8:	pop    ss
  41a3f9:	pop    eax
  41a3fa:	fcomip st,st(1)
  41a3fc:	into   
  41a3fd:	dec    esp
  41a3fe:	lds    ebp,FWORD PTR [ebx]
  41a400:	and    DWORD PTR [ebp-0x1b],ecx
  41a403:	(bad)  
  41a404:	push   cs
  41a405:	ret    0xa929
  41a408:	mov    dh,BYTE PTR [ebx-0x4f1787ec]
  41a40e:	sbb    BYTE PTR [edi+eiz*8+0x67],bh
  41a412:	jle    0x41a3bb
  41a414:	inc    esi
  41a415:	cwde   
  41a416:	or     al,0x28
  41a418:	jmp    0x6ae5:0xb338b76a
  41a41f:	xchg   ebx,eax
  41a420:	cdq    
  41a421:	mov    ebx,0x54ead157
  41a426:	in     al,0x5
  41a428:	out    0xb1,eax
  41a42a:	bound  ecx,QWORD PTR [edi+0x74]
  41a42d:	out    0x96,eax
  41a42f:	shr    BYTE PTR es:[edx+ecx*8+0x46],0x21
  41a435:	fadd   st(2),st
  41a437:	push   esi
  41a438:	test   BYTE PTR [ebp-0x3],bl
  41a43b:	pop    eax
  41a43c:	test   eax,0x2921c485
  41a441:	or     BYTE PTR [ebx],cl
  41a443:	fldenv [ecx+0x6651e865]
  41a449:	jbe    0x41a4b5
  41a44b:	ror    ebx,0x3e
  41a44e:	or     BYTE PTR [eax+0x9],ch
  41a451:	rcl    BYTE PTR [edi],cl
  41a453:	fadd   QWORD PTR [esi]
  41a455:	imul   ebx,edi,0x1a82ce70
  41a45b:	sbb    al,0x3c
  41a45d:	sub    BYTE PTR [ecx-0x6295510],ch
  41a463:	fcom   QWORD PTR es:0xa3191e19
  41a46a:	sbb    BYTE PTR [eax],ch
  41a46c:	xchg   ecx,eax
  41a46d:	sbb    al,ah
  41a46f:	shr    BYTE PTR [eax-0x4d4e111e],1
  41a475:	jae    0x41a3f8
  41a477:	cwde   
  41a478:	adc    DWORD PTR [ebx],edx
  41a47a:	xchg   DWORD PTR [ebx],ebx
  41a47c:	mov    esi,eax
  41a47e:	mov    esi,0xafcf7854
  41a483:	out    0xf6,eax
  41a485:	jecxz  0x41a480
  41a487:	div    BYTE PTR [ebp+0x4097c4e0]
  41a48d:	adc    eax,0xebef7e19
  41a492:	xor    DWORD PTR [eax+0x46],0x74
  41a496:	arpl   WORD PTR [eax+0x6d],ax
  41a499:	push   es
  41a49a:	inc    esi
  41a49c:	pop    ebp
  41a49d:	pop    ecx
  41a49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a49f:	fs stos DWORD PTR es:[edi],eax
  41a4a1:	mov    cl,0xa9
  41a4a3:	fidivr DWORD PTR [ebx-0xa]
  41a4a6:	sub    edi,DWORD PTR [ecx+edi*1-0x4deb7a62]
  41a4ad:	not    BYTE PTR [edi-0x28]
  41a4b0:	add    eax,0x3d954b87
  41a4b5:	mov    WORD PTR [ebx+0x15],es
  41a4b8:	call   0x84a56f4b
  41a4bd:	dec    edi
  41a4be:	jno    0x41a48f
  41a4c0:	bound  ebx,QWORD PTR [edi-0x36]
  41a4c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4c4:	push   edx
  41a4c5:	inc    edi
  41a4c6:	or     ebx,DWORD PTR [esi]
  41a4c8:	stos   BYTE PTR es:[edi],al
  41a4c9:	mov    dl,BYTE PTR [edx-0x4e6c64c8]
  41a4cf:	push   es
  41a4d0:	popf   
  41a4d1:	js     0x41a4a9
  41a4d3:	or     eax,0x7d812108
  41a4d8:	mov    esi,DWORD PTR [ebx+edi*8-0x42]
  41a4dc:	(bad)  [edi]
  41a4de:	rol    BYTE PTR [ebp-0x539d7430],1
  41a4e4:	ficomp DWORD PTR [ebp-0x31]
  41a4e7:	or     dl,ch
  41a4e9:	bound  ecx,QWORD PTR [eax]
  41a4eb:	scas   al,BYTE PTR es:[edi]
  41a4ec:	mov    al,ds:0x7d5cb3a7
  41a4f1:	jge    0x41a4f0
  41a4f3:	out    dx,eax
  41a4f4:	xchg   edi,eax
  41a4f5:	mov    cl,0x2b
  41a4f7:	pop    esp
  41a4f8:	inc    eax
  41a4f9:	je     0x41a500
  41a4fb:	dec    edi
  41a4fc:	push   edx
  41a4fd:	ss push es
  41a4ff:	ja     0x41a4f4
  41a501:	mov    ?,esi
  41a503:	or     dh,BYTE PTR [ebx]
  41a505:	push   ebx
  41a506:	xor    ecx,0xffffffad
  41a509:	xchg   ecx,eax
  41a50a:	jnp    0x41a4d6
  41a50c:	in     al,dx
  41a50d:	scas   eax,DWORD PTR es:[edi]
  41a50e:	into   
  41a50f:	dec    ebp
  41a510:	jno    0x41a4e1
  41a512:	mov    cl,0x21
  41a514:	adc    esp,DWORD PTR [eax+0x2c]
  41a517:	mov    dh,0x5
  41a519:	add    DWORD PTR [edx-0x6ed0deba],esi
  41a51f:	push   0x8d170fb3
  41a524:	jns    0x41a515
  41a526:	aas    
  41a527:	xchg   edx,eax
  41a528:	cmp    dh,bl
  41a52a:	inc    ecx
  41a52b:	nop
  41a52c:	outs   dx,DWORD PTR ds:[esi]
  41a52d:	dec    edi
  41a52e:	mov    esi,0xe147d949
  41a533:	mov    ah,0xf6
  41a535:	adc    al,0x7d
  41a537:	lea    eax,[ebx]
  41a539:	call   0xeffb:0xdd806d53
  41a540:	pop    ebx
  41a541:	ds xchg ecx,eax
  41a543:	mov    ebx,0xdc492f8
  41a548:	and    ebx,edx
  41a54a:	push   eax
  41a54b:	loop   0x41a4d9
  41a54d:	mov    DWORD PTR [ecx+0x56c45996],ecx
  41a553:	sub    ch,BYTE PTR [edx+0x73]
  41a556:	or     al,0x7f
  41a558:	lds    esp,FWORD PTR [eax-0x56]
  41a55b:	rcr    DWORD PTR [ebx-0x3cdf5f9],cl
  41a561:	cmp    edi,edx
  41a563:	sti    
  41a564:	ja     0x41a507
  41a566:	stc    
  41a567:	loopne 0x41a4f3
  41a569:	fstp   TBYTE PTR [edx]
  41a56b:	sahf   
  41a56c:	mov    WORD PTR ds:0x94bcb4d9,cs
  41a572:	dec    ebx
  41a573:	fs icebp 
  41a575:	ja     0x41a581
  41a577:	xor    DWORD PTR [ecx],edx
  41a579:	(bad)  
  41a57a:	add    ecx,DWORD PTR [ecx+ebx*2-0x58]
  41a57e:	sbb    BYTE PTR [esi-0x77c485da],0xa7
  41a585:	mov    bl,0xfa
  41a587:	mov    ebx,0x29f474c6
  41a58c:	jge    0x41a595
  41a58e:	mov    bl,0x6a
  41a590:	push   esi
  41a591:	adc    eax,0xac14664b
  41a596:	dec    ecx
  41a597:	(bad)  
  41a598:	mov    al,ds:0xa03dcc97
  41a59d:	or     DWORD PTR [edx],edx
  41a59f:	(bad)  
  41a5a0:	lods   eax,DWORD PTR ds:[esi]
  41a5a1:	daa    
  41a5a2:	repz mov cl,0xf2
  41a5a5:	scas   al,BYTE PTR es:[edi]
  41a5a6:	xchg   ecx,eax
  41a5a7:	push   esi
  41a5a8:	mov    ebp,0x3d0f9a3e
  41a5ad:	add    eax,0x3070d13
  41a5b2:	imul   BYTE PTR [edx+0x60]
  41a5b5:	cmp    ecx,esi
  41a5b7:	xchg   DWORD PTR [ebp+0x9d48d9f],eax
  41a5bd:	ret    0x230e
  41a5c0:	sti    
  41a5c1:	into   
  41a5c2:	add    ah,cl
  41a5c4:	pusha  
  41a5c5:	sbb    bl,0x87
  41a5c8:	dec    esp
  41a5c9:	test   esi,esp
  41a5cb:	repz sub BYTE PTR ds:0xe4bbc6e0,dl
  41a5d2:	mov    ecx,0xd52adcef
  41a5d7:	fcmove st,st(3)
  41a5d9:	pop    ecx
  41a5da:	mov    ecx,0x7e4bd73c
  41a5df:	lods   eax,DWORD PTR ds:[esi]
  41a5e0:	repz mov bl,0xba
  41a5e3:	in     al,dx
  41a5e4:	pop    edi
  41a5e5:	push   cs
  41a5e6:	sbb    al,0x78
  41a5e8:	inc    esp
  41a5e9:	in     al,0x46
  41a5eb:	inc    ecx
  41a5ec:	(bad)  
  41a5ed:	and    al,0xd3
  41a5ef:	gs mov ebp,0x177ebfde
  41a5f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5f6:	sub    ebp,DWORD PTR [ecx]
  41a5f8:	out    0xc6,al
  41a5fa:	mov    ecx,0xde92cb35
  41a5ff:	retf   0x40a9
  41a602:	pop    edi
  41a603:	test   eax,0x5c15958f
  41a608:	jnp    0x41a590
  41a60a:	outs   dx,BYTE PTR ds:[esi]
  41a60b:	arpl   WORD PTR [ebx],bp
  41a60d:	outs   dx,DWORD PTR ds:[esi]
  41a60e:	pop    ecx
  41a60f:	xor    DWORD PTR [esi+ebx*2+0x7f],eax
  41a613:	add    bl,cl
  41a615:	dec    ecx
  41a616:	test   al,0x9b
  41a618:	data16 sar BYTE PTR [edi+0xe],1
  41a61c:	test   eax,0x5ab64b27
  41a621:	loopne 0x41a5bc
  41a623:	imul   BYTE PTR [edi]
  41a625:	push   esp
  41a626:	push   edi
  41a627:	push   edx
  41a628:	add    al,0x34
  41a62a:	push   esi
  41a62b:	repnz imul ebp,DWORD PTR [edi],0xbf3195a2
  41a632:	push   ebx
  41a633:	and    BYTE PTR [ecx-0x12031a30],ah
  41a639:	mov    ch,0xaf
  41a63b:	xchg   BYTE PTR [ebp+0x45],dl
  41a63e:	and    BYTE PTR [ebp+0x18f9737b],dh
  41a644:	dec    edx
  41a645:	lock into 
  41a647:	jno    0x41a62d
  41a649:	jle    0x41a615
  41a64b:	mov    ebx,DWORD PTR [edx]
  41a64d:	xchg   esi,eax
  41a64e:	add    ebp,esp
  41a650:	test   al,bh
  41a652:	dec    eax
  41a653:	pop    ebp
  41a654:	dec    esp
  41a655:	out    dx,al
  41a656:	test   DWORD PTR [ebp-0x683cddbe],esi
  41a65c:	test   al,0x48
  41a65e:	dec    ebp
  41a65f:	dec    ebp
  41a660:	out    dx,al
  41a661:	mov    ebp,0xbefd475
  41a666:	dec    eax
  41a667:	ja     0x41a63b
  41a669:	mov    BYTE PTR [ebx-0x3c79f3df],cl
  41a66f:	xlat   BYTE PTR ds:[ebx]
  41a670:	gs cmc 
  41a672:	mov    eax,0xd669e47a
  41a677:	mov    bh,0xb0
  41a679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a67a:	dec    eax
  41a67b:	shl    BYTE PTR [ecx+0x1ad25efe],1
  41a681:	std    
  41a682:	cdq    
  41a683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a684:	leave  
  41a685:	jmp    0xedd3:0x83bedc2b
  41a68c:	xchg   DWORD PTR [edi-0x5c],ebp
  41a68f:	mul    BYTE PTR [esi+0x58309a57]
  41a695:	or     DWORD PTR [edx-0xad339ae],edi
  41a69b:	adc    dh,cl
  41a69d:	fcomp  st(2)
  41a69f:	sub    al,0xad
  41a6a1:	aam    0xd
  41a6a3:	dec    edx
  41a6a4:	imul   esp,DWORD PTR ss:[ebp+0x7f],0xcad74824
  41a6ac:	iret   
  41a6ad:	push   ebx
  41a6ae:	add    eax,0x82320a1f
  41a6b3:	mov    edi,0x14e18dd4
  41a6b8:	sub    eax,0x93cfd6b1
  41a6bd:	mov    ds:0x9dcea025,eax
  41a6c2:	cdq    
  41a6c3:	shl    DWORD PTR [edx+esi*8-0x61],cl
  41a6c7:	dec    esp
  41a6c8:	mov    dl,0xd2
  41a6ca:	out    dx,eax
  41a6cb:	and    BYTE PTR ds:0x50e1b6de,cl
  41a6d1:	xor    esi,DWORD PTR [edi+0x16bc13e9]
  41a6d7:	es mov ch,0x6f
  41a6da:	and    ebx,DWORD PTR [esi]
  41a6dc:	test   BYTE PTR [edi-0x3c0ce2fe],ah
  41a6e2:	loopne 0x41a72c
  41a6e4:	mov    bh,0x6
  41a6e6:	mov    edi,ebx
  41a6e8:	sbb    ebx,edx
  41a6ea:	fwait
  41a6eb:	jb     0x41a769
  41a6ed:	sub    eax,0x33607fac
  41a6f2:	cmp    DWORD PTR [edi],esi
  41a6f4:	lods   al,BYTE PTR ds:[esi]
  41a6f5:	jo     0x41a73b
  41a6f7:	fwait
  41a6f8:	sbb    DWORD PTR [esp+ebp*8],0xffffffd4
  41a6fc:	cmc    
  41a6fd:	jb     0x41a764
  41a6ff:	push   es
  41a700:	sub    eax,0xd21fd694
  41a705:	jge    0x41a774
  41a707:	mov    dh,BYTE PTR [esi-0x5124b095]
  41a70d:	push   0x1d
  41a70f:	inc    edi
  41a710:	mov    al,0x74
  41a712:	retf   
  41a713:	in     eax,dx
  41a714:	out    0x71,eax
  41a716:	fsub   QWORD PTR ds:0x854c2d5e
  41a71c:	out    0x6a,al
  41a71e:	dec    edx
  41a71f:	popf   
  41a720:	adc    DWORD PTR [edi+0x47],edx
  41a723:	shl    BYTE PTR [ecx-0x2fae1697],0xec
  41a72a:	pop    ds
  41a72b:	aad    0x8b
  41a72d:	inc    ebx
  41a72e:	add    cl,BYTE PTR [eax-0x61]
  41a731:	leave  
  41a732:	fistp  QWORD PTR [eax+0x58]
  41a735:	push   ecx
  41a736:	mov    dh,0x34
  41a738:	mov    eax,0x7de7963d
  41a73d:	fs add al,0x32
  41a740:	clc    
  41a741:	pop    ss
  41a742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a743:	sbb    al,0xe0
  41a745:	xchg   edi,eax
  41a746:	in     al,0x94
  41a748:	cmp    ch,BYTE PTR [ebp+0x49241fd]
  41a74e:	(bad)  
  41a74f:	jmp    0xa9d32afb
  41a754:	dec    edx
  41a755:	jae    0x41a721
  41a757:	xchg   ecx,eax
  41a758:	cmp    DWORD PTR [ebp+0x658e45f6],0x72bbd0d4
  41a762:	(bad)  
  41a763:	cmp    eax,0x241ccae0
  41a768:	test   al,0x4d
  41a76a:	jmp    0x5c22:0xbec4df8d
  41a771:	int3   
  41a772:	jl     0x41a779
  41a774:	xor    al,0xc1
  41a776:	sub    eax,0x6dd9f2cd
  41a77b:	(bad)  
  41a77c:	int3   
  41a77d:	sbb    DWORD PTR [edx-0x75],edi
  41a780:	push   ecx
  41a781:	imul   ecx,ecx,0x39c8df2f
  41a787:	vpunpckhwd xmm6,xmm3,xmm2
  41a78b:	or     DWORD PTR ds:0x78f7e865,edi
  41a791:	mov    al,ds:0xb596bdc0
  41a796:	dec    edx
  41a797:	ror    DWORD PTR [ecx-0x37],cl
  41a79a:	imul   esi,DWORD PTR [ebx+0x72d782],0x76397f35
  41a7a4:	stos   DWORD PTR es:[edi],eax
  41a7a5:	jmp    0x41a810
  41a7a7:	xor    eax,0xf63c6abc
  41a7ac:	xchg   edi,eax
  41a7ad:	sti    
  41a7ae:	mov    dl,0x7f
  41a7b0:	add    edi,ecx
  41a7b2:	add    dh,BYTE PTR [ebp+0x66b197cc]
  41a7b8:	or     edx,edx
  41a7ba:	test   eax,0xe4c68afd
  41a7bf:	lods   eax,DWORD PTR ds:[esi]
  41a7c0:	and    DWORD PTR [esi+0x4d9fff05],esp
  41a7c6:	jmp    0x3d16c6bf
  41a7cb:	inc    ebp
  41a7cc:	cmc    
  41a7cd:	fwait
  41a7ce:	out    0xeb,eax
  41a7d0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41a7d2:	cmp    eax,0x55660860
  41a7d7:	int    0xb8
  41a7d9:	ror    BYTE PTR [edi-0x2b39a5d],cl
  41a7df:	mov    bl,0x67
  41a7e1:	cwde   
  41a7e2:	xchg   ecx,eax
  41a7e3:	(bad)  
  41a7e4:	test   al,0xda
  41a7e6:	dec    eax
  41a7e7:	mov    WORD PTR [ecx+eax*4+0x5f4baa63],fs
  41a7ee:	jno    0x41a806
  41a7f0:	dec    esi
  41a7f1:	aam    0xf5
  41a7f3:	jg     0x41a85a
  41a7f5:	ret    0xbbce
  41a7f8:	push   ebp
  41a7f9:	cmp    BYTE PTR [eax-0x77fc7151],bl
  41a7ff:	aam    0xc
  41a801:	test   eax,0x2bcce2a3
  41a806:	std    
  41a807:	icebp  
  41a808:	jne    0x41a818
  41a80a:	mov    dh,0xe1
  41a80c:	or     ah,dl
  41a80e:	xchg   esp,eax
  41a80f:	inc    edi
  41a810:	pop    ebp
  41a811:	mov    ecx,ebp
  41a813:	cs in  al,0x79
  41a816:	inc    esp
  41a817:	ror    edx,1
  41a819:	jo     0x41a7d8
  41a81b:	xchg   esp,eax
  41a81c:	pop    esi
  41a81d:	rcl    DWORD PTR [ebp+0x3f],cl
  41a820:	mov    DWORD PTR [esi],esp
  41a822:	daa    
  41a823:	(bad)  
  41a824:	mov    ch,0x32
  41a826:	push   es
  41a827:	in     eax,dx
  41a828:	dec    esp
  41a829:	push   0x289bba34
  41a82e:	and    al,0x8c
  41a830:	dec    ecx
  41a831:	rcl    ah,1
  41a833:	adc    al,0x84
  41a835:	and    DWORD PTR [eax+0x1d47efc1],esp
  41a83b:	push   eax
  41a83c:	sub    dl,BYTE PTR [eax+0x42]
  41a83f:	clc    
  41a840:	adc    al,dl
  41a842:	jne    0x41a7d1
  41a844:	inc    ebp
  41a845:	stos   DWORD PTR es:[edi],eax
  41a846:	and    al,BYTE PTR [esi-0x55]
  41a849:	sub    al,0xdc
  41a84b:	inc    edx
  41a84c:	fcomip st,st(6)
  41a84e:	xchg   ebp,eax
  41a84f:	and    eax,0x3128937f
  41a854:	cmp    DWORD PTR [ecx],ebp
  41a856:	pop    esi
  41a857:	or     dh,bl
  41a859:	mov    bh,0xe5
  41a85b:	out    dx,eax
  41a85c:	inc    ecx
  41a85d:	sbb    eax,0xad9d4d2b
  41a862:	mov    cl,0x53
  41a864:	shr    BYTE PTR [edx],0x34
  41a867:	pop    esi
  41a868:	mov    WORD PTR [ecx+0x2273dd9],?
  41a86e:	and    al,BYTE PTR [edi]
  41a870:	imul   ebp,DWORD PTR [esi+eax*8],0xeddd4b13
  41a877:	xchg   DWORD PTR [ebx+0x26],eax
  41a87a:	ret    0xf43d
  41a87d:	fwait
  41a87e:	push   ds
  41a87f:	nop
  41a880:	xor    edx,ecx
  41a882:	(bad)  
  41a883:	sti    
  41a884:	inc    ecx
  41a885:	dec    edi
  41a886:	int    0xae
  41a888:	xor    ah,BYTE PTR [eax+0x5a547f5]
  41a88e:	xchg   ebx,eax
  41a88f:	ins    DWORD PTR es:[edi],dx
  41a890:	arpl   WORD PTR ds:0xaef345a1,cx
  41a896:	mov    al,0xe3
  41a898:	xchg   esp,eax
  41a899:	pop    es
  41a89a:	data16 outs dx,BYTE PTR ds:[esi]
  41a89c:	xor    eax,eax
  41a89e:	dec    ebp
  41a89f:	in     eax,dx
  41a8a0:	push   es
  41a8a1:	and    ch,0x55
  41a8a4:	in     eax,0x1d
  41a8a6:	rcl    bh,0xd8
  41a8a9:	(bad)  
  41a8aa:	or     edi,edi
  41a8ac:	sbb    ebp,ebx
  41a8ae:	add    ebx,edx
  41a8b0:	mov    cl,0x9e
  41a8b2:	and    esp,DWORD PTR [eax+0x74]
  41a8b5:	pop    ebx
  41a8b6:	dec    ebp
  41a8b7:	mov    BYTE PTR [eax+0x7b4adefb],ah
  41a8bd:	xor    BYTE PTR [eax+0x3a],cl
  41a8c0:	retf   0x9789
  41a8c3:	scas   eax,DWORD PTR es:[edi]
  41a8c4:	stc    
  41a8c5:	xchg   esp,eax
  41a8c6:	mov    bh,0x50
  41a8c8:	je     0x41a8e8
  41a8ca:	aas    
  41a8cb:	je     0x41a924
  41a8cd:	fidiv  WORD PTR [edi+edx*1]
  41a8d0:	add    DWORD PTR [edi+0x30d71190],0x2fa12d70
  41a8da:	cli    
  41a8db:	popa   
  41a8dc:	adc    al,0x21
  41a8de:	cmp    DWORD PTR [ebx-0x39dfeff3],esi
  41a8e4:	aam    0xc0
  41a8e6:	mov    ch,0x51
  41a8e8:	mov    edx,0xab72c649
  41a8ed:	push   es
  41a8ee:	(bad)  
  41a8ef:	xchg   ebx,eax
  41a8f0:	adc    BYTE PTR [eax],ch
  41a8f2:	or     al,0x89
  41a8f4:	xchg   edi,eax
  41a8f5:	push   edi
  41a8f6:	iret   
  41a8f7:	sbb    eax,edx
  41a8f9:	popa   
  41a8fa:	into   
  41a8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8fc:	jge    0x41a934
  41a8fe:	lods   al,BYTE PTR ds:[esi]
  41a8ff:	push   ss
  41a900:	add    eax,0x26361071
  41a905:	icebp  
  41a906:	add    bl,BYTE PTR [ecx-0x2b4340d8]
  41a90c:	fist   WORD PTR [edi]
  41a90e:	in     al,0xaf
  41a910:	or     al,0x55
  41a912:	imul   eax,DWORD PTR [ecx-0x48021761],0x29745c4c
  41a91c:	int    0xa0
  41a91e:	aaa    
  41a91f:	pop    ebp
  41a920:	clc    
  41a921:	cmp    dl,BYTE PTR [esp+eiz*4-0x22]
  41a925:	rcr    BYTE PTR [ecx],cl
  41a927:	psllq  mm2,QWORD PTR [edx+0x7c]
  41a92b:	xchg   ebp,eax
  41a92c:	pop    esi
  41a92d:	stos   BYTE PTR es:[edi],al
  41a92e:	inc    eax
  41a92f:	jo     0x41a8ba
  41a931:	push   0x21134126
  41a936:	gs (bad) 
  41a938:	bound  esp,QWORD PTR [edi-0x22]
  41a93b:	aas    
  41a93c:	icebp  
  41a93d:	dec    edx
  41a93e:	mov    ds:0xfecc9f5e,eax
  41a943:	repnz jmp 0xa035:0x658f1a66
  41a94b:	jl     0x41a8d7
  41a94d:	(bad)  
  41a94f:	mov    bl,ah
  41a951:	lods   al,BYTE PTR ds:[esi]
  41a952:	int    0xf4
  41a954:	mov    esi,0x321c95ed
  41a959:	add    eax,0xeef0216
  41a95e:	out    dx,al
  41a95f:	sub    BYTE PTR [ebx+0x64],ch
  41a962:	mov    fs,esp
  41a964:	sbb    ecx,DWORD PTR ds:0x4f112675
  41a96a:	xchg   esi,eax
  41a96b:	jne    0x41a9a5
  41a96d:	mov    eax,ds:0xaf46abcf
  41a972:	fdivr  st,st(7)
  41a974:	mov    eax,ds:0x66fbc00c
  41a979:	ds call 0x2370:0xd4729eee
  41a981:	jecxz  0x41a9bf
  41a983:	mov    bh,0xf0
  41a985:	pop    ebp
  41a986:	cmp    DWORD PTR [ebx-0x22],0x28
  41a98a:	mov    al,BYTE PTR gs:[edi+ecx*4+0x36]
  41a98f:	rol    DWORD PTR [edx],1
  41a991:	fdivr  DWORD PTR ds:0xa2ebb073
  41a997:	push   ds
  41a998:	jle    0x41a958
  41a99a:	push   esp
  41a99b:	add    al,0xc5
  41a99d:	dec    ebx
  41a99e:	outs   dx,BYTE PTR ds:[esi]
  41a99f:	pop    ebp
  41a9a0:	add    al,0x4c
  41a9a2:	inc    esi
  41a9a3:	cmp    DWORD PTR [ebp-0x1450ab8a],edx
  41a9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9aa:	jb     0x41aa0e
  41a9ac:	adc    ebx,ecx
  41a9ae:	inc    ebp
  41a9af:	xchg   DWORD PTR [ebx],ebp
  41a9b1:	loop   0x41a9bc
  41a9b3:	int3   
  41a9b4:	mov    edx,DWORD PTR gs:[ecx+0x2bc564db]
  41a9bb:	cld    
  41a9bc:	aad    0xe0
  41a9be:	add    ah,BYTE PTR [edi+0x26d0853a]
  41a9c4:	int    0x31
  41a9c6:	pop    esi
  41a9c7:	fmul   st,st(7)
  41a9c9:	mov    eax,0xde9f7300
  41a9ce:	sti    
  41a9cf:	out    dx,eax
  41a9d0:	xchg   ecx,eax
  41a9d1:	push   edx
  41a9d2:	fidivr DWORD PTR [ecx-0x6c]
  41a9d5:	shr    BYTE PTR [eax-0x4d],1
  41a9d8:	imul   DWORD PTR [edi-0x608fdb38]
  41a9de:	outs   dx,DWORD PTR ds:[esi]
  41a9df:	cmp    al,0xca
  41a9e1:	lock mov ebp,0xa87ed298
  41a9e7:	repnz gs stos BYTE PTR es:[edi],al
  41a9ea:	sub    esi,edi
  41a9ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9ed:	adc    al,BYTE PTR [ebp-0x4d]
  41a9f0:	retf   
  41a9f1:	inc    ebp
  41a9f2:	xor    BYTE PTR [edi+0x6c37191a],bh
  41a9f8:	ins    BYTE PTR es:[edi],dx
  41a9f9:	fiadd  WORD PTR [eax+0x335ec86a]
  41a9ff:	pushf  
  41aa00:	xchg   esi,eax
  41aa01:	inc    esp
  41aa02:	push   edx
  41aa03:	xor    DWORD PTR [edi+0x194122d],esi
  41aa09:	mov    ah,0x91
  41aa0b:	add    esp,DWORD PTR [esi-0x14]
  41aa0e:	push   0xffffffb8
  41aa10:	add    ah,BYTE PTR [edi+0x6c19fae5]
  41aa16:	sahf   
  41aa17:	lods   eax,DWORD PTR ds:[esi]
  41aa18:	push   esi
  41aa19:	fcomp  st(5)
  41aa1b:	xchg   BYTE PTR [ebp-0x55],ch
  41aa1e:	call   0x8bd11b6c
  41aa23:	fcomp  DWORD PTR [esi-0x3480d503]
  41aa29:	jmp    0xd26779d8
  41aa2e:	test   eax,0xb07e59a7
  41aa33:	jns    0x41a9c2
  41aa35:	test   BYTE PTR [edi+0x49b2e5a2],0xd2
  41aa3c:	mov    al,0x5b
  41aa3e:	or     esi,DWORD PTR [edx+0x70]
  41aa41:	out    dx,al
  41aa42:	xlat   BYTE PTR ds:[ebx]
  41aa43:	lock jp 0x41aa57
  41aa46:	add    dh,bl
  41aa48:	pop    ebp
  41aa49:	jne    0x41aa47
  41aa4b:	jae    0x41aa6d
  41aa4d:	mov    ch,0xb6
  41aa4f:	in     eax,0xe3
  41aa51:	mov    dh,0x79
  41aa53:	(bad)  
  41aa54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa55:	xchg   edx,eax
  41aa56:	mov    al,ds:0xf1256374
  41aa5b:	adc    ebx,esp
  41aa5d:	fistp  DWORD PTR [edi-0x6aafa008]
  41aa63:	inc    ebx
  41aa64:	or     ch,al
  41aa66:	dec    edi
  41aa67:	mov    dl,0x45
  41aa69:	xchg   edx,eax
  41aa6a:	mov    edx,0x4105ff9
  41aa6f:	push   ds
  41aa70:	loope  0x41aa1a
  41aa72:	mov    al,ds:0x21e608ff
  41aa77:	aas    
  41aa78:	dec    esi
  41aa79:	push   ecx
  41aa7a:	aam    0x83
  41aa7c:	cld    
  41aa7d:	arpl   sp,dx
  41aa7f:	fs int3 
  41aa81:	cli    
  41aa82:	adc    DWORD PTR [ebx-0x31694051],ebp
  41aa88:	mov    eax,0x5630b41c
  41aa8d:	add    DWORD PTR [bp+0xe8f],0xffffffbe
  41aa93:	jno    0x41aa1f
  41aa95:	mov    eax,ds:0xe5ecfbf9
  41aa9a:	scas   eax,DWORD PTR es:[edi]
  41aa9b:	cmp    BYTE PTR [edi],0x4c
  41aa9e:	xchg   edx,eax
  41aa9f:	pop    ebp
  41aaa0:	mov    esp,0xbc04fef3
  41aaa5:	xor    eax,0x640738fb
  41aaaa:	cmp    BYTE PTR [ecx+ebx*1],0x9b
  41aaae:	(bad)  
  41aaaf:	jne    0x41aadb
  41aab1:	push   edi
  41aab2:	mov    ebp,0x774e4806
  41aab7:	or     esi,DWORD PTR [edx+0x46]
  41aaba:	jae    0x41aa97
  41aabc:	xchg   ebp,eax
  41aabd:	scas   al,BYTE PTR es:[edi]
  41aabe:	mov    al,BYTE PTR [edi+0x4d]
  41aac1:	ja     0x41ab2e
  41aac3:	popa   
  41aac4:	jno    0x41aa6c
  41aac6:	mov    ebp,0x7eaca959
  41aacb:	lds    esp,FWORD PTR [edx]
  41aacd:	add    cl,BYTE PTR [eax]
  41aacf:	and    eax,0xda1fddcc
  41aad4:	pop    ebp
  41aad5:	aad    0xb8
  41aad7:	(bad)  
  41aad9:	mov    bl,0x9f
  41aadb:	add    cl,BYTE PTR ss:[ecx]
  41aade:	aaa    
  41aadf:	icebp  
  41aae0:	fimul  DWORD PTR [edi+0x70ba8117]
  41aae6:	jo     0x41aa80
  41aae8:	in     al,dx
  41aae9:	mov    ecx,0x972584fc
  41aaee:	fist   DWORD PTR [esi+0x54179b0b]
  41aaf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaf5:	add    DWORD PTR [ebp+0x63],esp
  41aaf8:	adc    BYTE PTR [edx+0x61058c55],ch
  41aafe:	dec    esp
  41aaff:	push   esp
  41ab00:	not    esi
  41ab02:	test   eax,0x3703fac2
  41ab07:	jbe    0x41ab2c
  41ab09:	cmp    eax,edi
  41ab0b:	jmp    0x41aaba
  41ab0d:	jae    0x41ab80
  41ab0f:	hlt    
  41ab10:	mov    ebp,0x981a9f2c
  41ab15:	es rcl eax,0xb0
  41ab19:	mov    es,WORD PTR [eax]
  41ab1b:	xor    bl,BYTE PTR [edx]
  41ab1d:	cs mov cl,0xa
  41ab20:	inc    edx
  41ab21:	sub    eax,0xf6113ea8
  41ab26:	mov    bh,0x90
  41ab28:	nop
  41ab29:	jecxz  0x41aaca
  41ab2b:	sbb    DWORD PTR [ecx+0x49],ecx
  41ab2e:	loope  0x41aae8
  41ab30:	jns    0x41aaf5
  41ab32:	mov    ebp,0x80fe14e6
  41ab37:	out    dx,al
  41ab38:	jl     0x41abaf
  41ab3a:	xor    ecx,DWORD PTR [esi]
  41ab3c:	stos   DWORD PTR es:[edi],eax
  41ab3d:	fsubr  DWORD PTR [edi+0x17]
  41ab40:	pop    edi
  41ab41:	mov    ebp,?
  41ab43:	mov    ds:0x44a339a1,al
  41ab48:	sbb    esi,DWORD PTR [edi+0x40]
  41ab4b:	jle    0x41abc5
  41ab4d:	fincstp 
  41ab4f:	sti    
  41ab50:	mov    al,0x7e
  41ab52:	not    BYTE PTR [ebx]
  41ab54:	hlt    
  41ab55:	aad    0x9d
  41ab57:	push   ds
  41ab58:	jg     0x41ab8d
  41ab5a:	push   ds
  41ab5b:	mov    edi,0x89d7296a
  41ab60:	stos   DWORD PTR es:[edi],eax
  41ab61:	bound  esp,QWORD PTR [esi+0x59d1c60a]
  41ab67:	and    dl,BYTE PTR [esi-0x4ec18beb]
  41ab6d:	dec    ebp
  41ab6e:	or     BYTE PTR [ebx],al
  41ab70:	cs call 0x7d73:0x599f376b
  41ab78:	cmp    BYTE PTR [edi],bh
  41ab7a:	mov    ch,BYTE PTR [ebx-0x16]
  41ab7d:	jno    0x41ab2c
  41ab7f:	je     0x41ab24
  41ab81:	aad    0xce
  41ab83:	js     0x41ab20
  41ab85:	fild   QWORD PTR [eax]
  41ab87:	gs jmp 0x41abd6
  41ab8a:	lods   eax,DWORD PTR ds:[esi]
  41ab8b:	fstp   QWORD PTR [esi+esi*1]
  41ab8e:	or     eax,DWORD PTR [edi-0x398ba860]
  41ab94:	fcomp  QWORD PTR [ebp+0x104022d1]
  41ab9a:	cmp    DWORD PTR [eax+0x683cacc5],ebp
  41aba0:	adc    al,BYTE PTR [eax-0x41]
  41aba3:	and    edi,ebp
  41aba5:	and    BYTE PTR ds:0xfbac22e2,ch
  41abab:	hlt    
  41abac:	cmc    
  41abad:	jl     0x41abc4
  41abaf:	loopne 0x41abc9
  41abb1:	aad    0x55
  41abb3:	or     bl,BYTE PTR [ecx]
  41abb5:	mov    esi,0x7e1cf842
  41abba:	jl     0x41ab99
  41abbc:	jns    0x41ab81
  41abbe:	enter  0xe3a5,0x4c
  41abc2:	jbe    0x41ab67
  41abc4:	jbe    0x41abd0
  41abc6:	and    DWORD PTR [esp+eax*2-0x74],esp
  41abca:	jle    0x41aba3
  41abcc:	inc    ebp
  41abcd:	and    DWORD PTR [edx],0xffffffae
  41abd0:	cmc    
  41abd1:	push   esp
  41abd2:	shl    eax,0x39
  41abd5:	sbb    bl,BYTE PTR [ebx-0x7d]
  41abd8:	adc    ebx,ebp
  41abda:	arpl   cx,di
  41abdc:	and    BYTE PTR [edx+0x69],dh
  41abdf:	jp     0x41ac24
  41abe1:	jp     0x41ab67
  41abe3:	lds    esp,FWORD PTR [ebp-0x59]
  41abe6:	(bad)  
  41abe7:	push   es
  41abe8:	adc    dh,al
  41abea:	std    
  41abeb:	ja     0x41ac19
  41abed:	fistp  DWORD PTR [esi]
  41abef:	in     al,0x28
  41abf1:	dec    edx
  41abf2:	ror    DWORD PTR ds:0x1d22d267,0xc4
  41abf9:	icebp  
  41abfa:	test   al,0xbe
  41abfc:	xchg   ebx,eax
  41abfd:	sar    DWORD PTR [ebp+eiz*1-0x3],1
  41ac01:	xchg   ebx,eax
  41ac02:	or     bh,ah
  41ac04:	adc    esp,DWORD PTR [edx+0x2d]
  41ac07:	adc    al,0xc1
  41ac09:	pop    edx
  41ac0a:	(bad)  
  41ac0b:	mov    bl,0x40
  41ac0d:	mov    cl,0xea
  41ac0f:	inc    ebp
  41ac10:	pop    edx
  41ac11:	xor    eax,0x36613b2d
  41ac16:	sti    
  41ac17:	add    eax,0x706cdbdd
  41ac1c:	mov    dl,0x5d
  41ac1e:	push   0xc4fe5818
  41ac23:	or     esp,ecx
  41ac25:	mov    dh,0x94
  41ac27:	ins    BYTE PTR es:[edi],dx
  41ac28:	mov    dh,0xa2
  41ac2a:	call   DWORD PTR [ecx]
  41ac2c:	das    
  41ac2d:	or     BYTE PTR [eax-0x41],cl
  41ac30:	idiv   DWORD PTR [eax+0x5d6fa05f]
  41ac36:	pop    esp
  41ac37:	das    
  41ac38:	dec    eax
  41ac39:	add    eax,0xccdb7acc
  41ac3e:	shr    BYTE PTR [esi-0x54e81762],0x45
  41ac45:	jg     0x41acaa
  41ac47:	lock (bad) 
  41ac49:	jno    0x41ac0d
  41ac4b:	inc    ecx
  41ac4c:	(bad)  
  41ac4d:	fnstsw WORD PTR [ebx]
  41ac4f:	clc    
  41ac50:	sub    al,0xfe
  41ac52:	inc    eax
  41ac53:	cdq    
  41ac54:	pop    es
  41ac55:	nop
  41ac56:	push   cs
  41ac57:	jmp    0x9b9307ad
  41ac5c:	cmp    eax,0xc4fed036
  41ac61:	pushf  
  41ac62:	ins    DWORD PTR es:[edi],dx
  41ac63:	jae    0x41acdb
  41ac65:	add    BYTE PTR [edi+eiz*1],0xd0
  41ac69:	leave  
  41ac6a:	inc    edi
  41ac6b:	pop    ss
  41ac6c:	sub    esp,DWORD PTR [edi-0x22]
  41ac6f:	call   0x1e8781b4
  41ac74:	ins    BYTE PTR es:[edi],dx
  41ac75:	call   FWORD PTR [eax+0x168d1820]
  41ac7b:	and    DWORD PTR [ebp+0xa7826d3],esi
  41ac81:	adc    esi,DWORD PTR [esi]
  41ac83:	cmp    al,0x81
  41ac85:	mov    eax,ds:0x97bba4d6
  41ac8a:	jmp    0x85b38431
  41ac8f:	loopne 0x41ac80
  41ac91:	jl     0x41ac7c
  41ac93:	daa    
  41ac94:	or     ch,dh
  41ac96:	and    ebx,DWORD PTR [ecx]
  41ac98:	cmp    bh,cl
  41ac9a:	lods   al,BYTE PTR ds:[esi]
  41ac9b:	pop    ebp
  41ac9c:	retf   
  41ac9d:	ror    ch,0x4
  41aca0:	outs   dx,DWORD PTR ds:[esi]
  41aca1:	fld    QWORD PTR [esi]
  41aca3:	les    edi,FWORD PTR [ebp-0x3f]
  41aca6:	inc    ebx
  41aca7:	and    BYTE PTR [ecx+0x23198ee2],0x63
  41acae:	mov    ch,0x17
  41acb0:	jge    0x41ace5
  41acb2:	jno    0x41ac7a
  41acb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acb5:	in     eax,dx
  41acb6:	jg     0x41acd5
  41acb8:	sar    BYTE PTR [bx-0x70],cl
  41acbc:	cs pop es
  41acbe:	lods   eax,DWORD PTR ds:[esi]
  41acbf:	add    DWORD PTR [edx-0x17419869],ecx
  41acc5:	mov    ds:0xd2c7824e,eax
  41acca:	add    BYTE PTR [ecx-0x67ebb30a],ch
  41acd0:	mov    ebp,0x9ae7da51
  41acd5:	mov    gs,WORD PTR [edi-0x34]
  41acd8:	out    0xfc,al
  41acda:	(bad)  
  41acdb:	dec    esp
  41acdc:	sub    bh,BYTE PTR ds:0xdf6cab78
  41ace2:	adc    eax,0x923cf383
  41ace7:	(bad)  
  41ace8:	retfw  0xe3f0
  41acec:	lods   al,BYTE PTR ds:[esi]
  41aced:	jmp    0xdffb:0x9b82d3e3
  41acf4:	pop    edi
  41acf5:	jne    0x41ace6
  41acf7:	jb     0x41ad47
  41acf9:	adc    al,0xbf
  41acfb:	popa   
  41acfc:	je     0x41accf
  41acfe:	jmp    0xf96d:0x3278d49c
  41ad05:	out    dx,eax
  41ad06:	ffreep st(1)
  41ad08:	cmp    DWORD PTR [esp+eax*2],0xffffff90
  41ad0c:	into   
  41ad0d:	ror    al,0xc
  41ad10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad11:	dec    edi
  41ad12:	pop    edi
  41ad14:	iret   
  41ad15:	mov    bl,0x23
  41ad17:	and    ecx,DWORD PTR [ebx-0x19]
  41ad1a:	(bad)  
  41ad1c:	mov    al,0x17
  41ad1e:	mov    edx,0x7254c707
  41ad23:	jg     0x41acbc
  41ad25:	stos   BYTE PTR es:[edi],al
  41ad26:	lahf   
  41ad27:	iret   
  41ad28:	adc    al,BYTE PTR [ecx+edi*8-0x7407c803]
  41ad2f:	rcl    BYTE PTR [ecx+0x3e7557f6],1
  41ad35:	and    cl,BYTE PTR [esi+eiz*4+0x60]
  41ad39:	or     al,0x32
  41ad3b:	mov    bh,0xd2
  41ad3d:	cmp    al,0x42
  41ad3f:	push   ebx
  41ad40:	mov    eax,0xdf29fa90
  41ad45:	fld    TBYTE PTR [ebx+0x2946ba29]
  41ad4b:	xor    ebx,eax
  41ad4d:	int3   
  41ad4e:	and    ch,BYTE PTR [eax]
  41ad50:	fwait
  41ad51:	ins    DWORD PTR es:[edi],dx
  41ad52:	fidiv  WORD PTR [eax]
  41ad54:	scas   al,BYTE PTR es:[edi]
  41ad55:	mov    ds:0x81f052c0,al
  41ad5a:	clc    
  41ad5b:	div    DWORD PTR [esi]
  41ad5d:	push   ds
  41ad5e:	in     al,dx
  41ad5f:	jle    0x41ad36
  41ad61:	std    
  41ad62:	mov    eax,ds:0x149cd1dc
  41ad67:	xor    dh,bh
  41ad69:	fucomip st,st(6)
  41ad6b:	das    
  41ad6c:	inc    edi
  41ad6d:	jno    0x41ad6f
  41ad6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad70:	xchg   edi,eax
  41ad71:	push   ebp
  41ad72:	sahf   
  41ad73:	fwait
  41ad74:	and    al,0x7e
  41ad76:	mov    ebp,0x6fa978e7
  41ad7b:	repnz iret 
  41ad7d:	sub    ch,BYTE PTR [eax+ebx*8-0xe59e193]
  41ad84:	xchg   edi,eax
  41ad85:	adc    BYTE PTR [ecx+ebp*1+0x20724d57],dh
  41ad8c:	or     al,0x17
  41ad8e:	jo     0x41ad8c
  41ad90:	sbb    DWORD PTR [edi+ebp*8-0x51991081],esp
  41ad97:	dec    esp
  41ad98:	sub    bl,0xd5
  41ad9b:	mov    ecx,0x41b14cac
  41ada0:	push   edi
  41ada1:	inc    ebp
  41ada2:	fsubr  DWORD PTR [edi-0x4644a5b7]
  41ada8:	stos   BYTE PTR es:[edi],al
  41ada9:	mov    dl,0x87
  41adab:	clc    
  41adac:	stc    
  41adad:	ja     0x41ae25
  41adaf:	stc    
  41adb0:	retf   
  41adb1:	mov    esp,0x50fb35b8
  41adb6:	xchg   ebp,eax
  41adb7:	pop    ebx
  41adb8:	fisubr DWORD PTR [eax+ebp*2-0x22]
  41adbc:	push   ss
  41adbd:	or     bh,BYTE PTR [edx+0x6846b0e]
  41adc3:	hlt    
  41adc4:	sbb    eax,0x2f6486c5
  41adc9:	(bad)  
  41adca:	sbb    al,0xff
  41adcc:	out    0x40,al
  41adce:	fadd   DWORD PTR [edx+edi*4-0x7b]
  41add2:	and    eax,0x8542498d
  41add7:	adc    DWORD PTR [eax-0x18e36e89],ebp
  41addd:	ds out 0x3e,al
  41ade0:	jno    0x41adee
  41ade2:	test   eax,0x77219f56
  41ade7:	out    0xa2,eax
  41ade9:	jb     0x41ae4c
  41adeb:	retf   
  41adec:	cld    
  41aded:	adc    edx,ecx
  41adef:	je     0x41ae6b
  41adf1:	jp     0x41ad86
  41adf3:	adc    esp,DWORD PTR [esi]
  41adf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf6:	push   ecx
  41adf7:	loope  0x41ae37
  41adf9:	adc    DWORD PTR [eax+0x65d9984a],esi
  41adff:	inc    edi
  41ae00:	cdq    
  41ae01:	lahf   
  41ae02:	es mov eax,0x94c2b525
  41ae08:	mov    cl,0x76
  41ae0a:	push   ebp
  41ae0b:	fs jnp 0x41ae77
  41ae0e:	dec    ecx
  41ae0f:	ds dec edi
  41ae11:	push   ss
  41ae12:	test   BYTE PTR [edi],ch
  41ae14:	retf   
  41ae15:	cs fcom st(0)
  41ae18:	sbb    eax,0xc9995929
  41ae1d:	cmp    al,0x95
  41ae1f:	loop   0x41adc5
  41ae21:	jns    0x41adc6
  41ae23:	jne    0x41adfe
  41ae25:	cwde   
  41ae26:	adc    dl,dl
  41ae28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae29:	lods   eax,DWORD PTR ds:[esi]
  41ae2a:	ficom  WORD PTR ds:0xdfe804f3
  41ae30:	aad    0x15
  41ae32:	mov    bh,0x6a
  41ae34:	data16 mov dh,0xd5
  41ae37:	mov    al,ds:0xb971d78
  41ae3c:	cwde   
  41ae3d:	or     eax,0xda336fd4
  41ae42:	cdq    
  41ae43:	cmp    DWORD PTR [edx-0x29e560e2],esp
  41ae49:	jnp    0x41aea4
  41ae4b:	push   esi
  41ae4c:	sub    dh,BYTE PTR [edi-0x518d5fdf]
  41ae52:	pop    es
  41ae53:	mov    ebp,0x31b35c58
  41ae58:	stc    
  41ae59:	jae    0x41aeca
  41ae5b:	out    dx,eax
  41ae5c:	nop
  41ae5d:	push   esp
  41ae5e:	add    dh,BYTE PTR [edi+0x29]
  41ae61:	mov    edi,0x8234e36
  41ae66:	test   DWORD PTR [esi+0x25977dae],0x41b46ff1
  41ae70:	jg     0x41ae92
  41ae72:	inc    ebx
  41ae73:	gs mov dl,BYTE PTR fs:[ebx+eax*4+0x5cdc707c]
  41ae7c:	mov    dl,BYTE PTR [esi+edx*8]
  41ae7f:	aaa    
  41ae80:	stos   DWORD PTR es:[edi],eax
  41ae81:	data16 or al,0xaa
  41ae84:	sar    BYTE PTR [esi+0x5f],0xe3
  41ae88:	jo     0x41aec1
  41ae8a:	xchg   ebx,eax
  41ae8b:	ret    0xa524
  41ae8e:	add    DWORD PTR [ebx+ecx*1+0x26fe4c0a],0xcd35d40b
  41ae99:	fistp  DWORD PTR [ebp+0x57]
  41ae9c:	fs ds es inc edi
  41aea0:	outs   dx,DWORD PTR ds:[esi]
  41aea1:	or     BYTE PTR [ecx],bl
  41aea3:	fsubr  QWORD PTR [edi]
  41aea5:	(bad)  
  41aea7:	int3   
  41aea8:	repz (bad) 
  41aeaa:	sub    eax,0xfd4a335e
  41aeaf:	xchg   ebp,ecx
  41aeb1:	inc    edi
  41aeb2:	jecxz  0x41af31
  41aeb4:	scas   eax,DWORD PTR es:[edi]
  41aeb5:	adc    dl,BYTE PTR [edi-0x657927c2]
  41aebb:	sahf   
  41aebc:	mov    al,BYTE PTR [ebx+0x6707a540]
  41aec2:	dec    ecx
  41aec3:	imul   eax,DWORD PTR [ecx+0x43],0x99b59bba
  41aeca:	mov    ah,0x4
  41aecc:	es dec ebx
  41aece:	xor    ch,BYTE PTR [esi]
  41aed0:	int    0x87
  41aed2:	mov    ch,0xe6
  41aed4:	sbb    DWORD PTR [ebx-0x1eb567b9],0xeafbae8a
  41aede:	sub    al,0x9
  41aee0:	mov    eax,0xb2d28049
  41aee5:	jb     0x41aea4
  41aee7:	jg     0x41af27
  41aee9:	ins    DWORD PTR es:[edi],dx
  41aeea:	push   ebp
  41aeeb:	fcmovbe st,st(2)
  41aeed:	mov    ecx,edx
  41aeef:	mov    ss,ecx
  41aef1:	fucomi st,st(0)
  41aef3:	xlat   BYTE PTR ds:[ebx]
  41aef4:	push   ecx
  41aef5:	ins    DWORD PTR es:[edi],dx
  41aef6:	jg     0x41af3e
  41aef8:	mov    al,ds:0xc870ab2a
  41aefd:	shr    DWORD PTR [esp+edi*2-0x4677efe5],1
  41af04:	pop    ss
  41af05:	jnp    0x41aef4
  41af07:	mov    ds:0x650a830e,eax
  41af0c:	stc    
  41af0d:	aaa    
  41af0e:	(bad)  
  41af0f:	and    BYTE PTR ds:0xe32ee941,al
  41af15:	mov    eax,ds:0xb7f3f18f
  41af1a:	push   0x53f2d4cf
  41af1f:	mov    WORD PTR [ecx+0x2ef2b2a7],ss
  41af25:	ror    ah,cl
  41af27:	or     BYTE PTR [ecx+0x29],0x18
  41af2b:	mov    eax,0x705362db
  41af30:	dec    esi
  41af31:	dec    ebp
  41af32:	jp     0x41af5b
  41af34:	ja     0x41af60
  41af36:	pop    edi
  41af37:	inc    eax
  41af38:	pop    esi
  41af39:	mov    ebp,0x7f3c4296
  41af3e:	rcl    BYTE PTR [edx+esi*8-0x18],1
  41af42:	jmp    0x41aee9
  41af44:	std    
  41af45:	pop    edx
  41af46:	int3   
  41af47:	adc    cl,ah
  41af49:	xor    al,0x65
  41af4b:	jle    0x41af6a
  41af4d:	push   ebx
  41af4e:	fdecstp 
  41af50:	and    ah,BYTE PTR [eax]
  41af52:	sti    
  41af53:	fisub  WORD PTR [edi]
  41af55:	test   eax,0x24820246
  41af5a:	sub    ebx,ebp
  41af5c:	lds    edi,FWORD PTR [edi+eax*4-0x4]
  41af60:	push   ss
  41af61:	sub    eax,0x9825573a
  41af66:	xor    al,0xb8
  41af68:	xchg   esp,eax
  41af69:	xor    BYTE PTR [edi],cl
  41af6b:	adc    edx,edx
  41af6d:	in     al,dx
  41af6e:	ins    BYTE PTR es:[edi],dx
  41af6f:	jnp    0x41af54
  41af71:	and    ch,0x7c
  41af74:	aas    
  41af75:	xlat   BYTE PTR ds:[ebx]
  41af76:	add    BYTE PTR [ecx+0x247c9701],0xfa
  41af7d:	repnz iret 
  41af7f:	push   ss
  41af80:	out    0xfc,al
  41af82:	(bad)  
  41af83:	push   ss
  41af84:	sbb    esi,DWORD PTR [esi+0x33]
  41af87:	add    DWORD PTR [ebp+0x400299ef],ecx
  41af8d:	out    dx,eax
  41af8e:	mov    edx,DWORD PTR [edi+0xd858e21]
  41af94:	dec    edx
  41af95:	mov    al,0xdd
  41af97:	stc    
  41af98:	(bad)  
  41af99:	aas    
  41af9a:	mov    esi,0x206aa28b
  41af9f:	pop    ss
  41afa0:	and    al,0x85
  41afa2:	(bad)  [edi+0x6b55440c]
  41afa8:	mov    BYTE PTR [esi],bh
  41afaa:	jecxz  0x41af6a
  41afac:	xchg   edx,eax
  41afad:	sbb    DWORD PTR [ebx-0x7e2a46f6],ecx
  41afb3:	add    al,BYTE PTR es:[ebx]
  41afb6:	lock lods al,BYTE PTR ds:[esi]
  41afb8:	sub    dh,0xed
  41afbb:	mov    ebp,0x7d563979
  41afc0:	ins    DWORD PTR es:[edi],dx
  41afc1:	shr    BYTE PTR [ecx],0xc5
  41afc4:	sub    eax,0x553a3c4d
  41afc9:	mov    bl,0xd7
  41afcb:	(bad)  
  41afcc:	xor    bl,BYTE PTR [ebx]
  41afce:	dec    ebp
  41afcf:	lahf   
  41afd0:	xchg   edx,eax
  41afd1:	sub    DWORD PTR [edx+0x5cb26284],0x22ad98b8
  41afdb:	push   es
  41afdc:	ds loop 0x41b05c
  41afdf:	clc    
  41afe0:	popf   
  41afe1:	sub    BYTE PTR [ecx+0x32],bh
  41afe4:	pop    ds
  41afe5:	mov    edi,0xfc3e5513
  41afea:	jae    0x41afc2
  41afec:	xchg   edx,eax
  41afed:	sti    
  41afee:	jmp    0x329bce46
  41aff3:	pop    ss
  41aff4:	ds jae 0x41afe9
  41aff7:	pop    esi
  41aff8:	inc    eax
  41aff9:	mov    dl,0xdd
  41affb:	pop    eax
  41affc:	(bad)  
  41affe:	fbld   TBYTE PTR [eax+0xd31a854]
  41b004:	repnz adc DWORD PTR [ebp+0x664910e9],ecx
  41b00b:	fstp   TBYTE PTR [ebx]
  41b00d:	test   BYTE PTR [edx],cl
  41b00f:	inc    edi
  41b010:	out    dx,eax
  41b011:	daa    
  41b012:	mov    ds:0x69fe5ba6,al
  41b017:	mov    BYTE PTR ds:0x5360a6c6,dh
  41b01d:	lds    ecx,FWORD PTR [ebp+0x47]
  41b020:	nop
  41b021:	dec    ebx
  41b022:	in     eax,dx
  41b023:	das    
  41b024:	ins    DWORD PTR es:[edi],dx
  41b025:	sub    bl,BYTE PTR [edx-0x2c]
  41b028:	ins    DWORD PTR es:[edi],dx
  41b029:	mov    bh,0x7f
  41b02b:	mov    ebp,0x64dcb811
  41b030:	test   edi,esi
  41b032:	aaa    
  41b033:	mov    bh,0xea
  41b035:	mov    bh,0xe6
  41b037:	pop    ds
  41b038:	scas   al,BYTE PTR es:[edi]
  41b039:	popa   
  41b03a:	mov    al,BYTE PTR [edi-0x40]
  41b03d:	aas    
  41b03e:	dec    edi
  41b03f:	xlat   BYTE PTR ds:[ebx]
  41b040:	lods   al,BYTE PTR ds:[esi]
  41b041:	outs   dx,BYTE PTR ds:[esi]
  41b042:	sbb    DWORD PTR [ebp+0x34ff10e9],esi
  41b048:	pop    WORD PTR [eax+0x38]
  41b04c:	mov    dh,0x7
  41b04e:	sub    al,0x59
  41b050:	cmp    esi,DWORD PTR [esi-0x4e1a6b10]
  41b056:	dec    edi
  41b057:	les    esi,FWORD PTR [edx+ebx*1]
  41b05a:	dec    esp
  41b05b:	ja     0x41afe2
  41b05d:	jle    0x41b04d
  41b05f:	mov    esp,0x83d5b594
  41b064:	xor    DWORD PTR [ebp-0x5dcde3ee],edi
  41b06a:	cwde   
  41b06b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b06c:	int3   
  41b06d:	cmc    
  41b06e:	(bad)  
  41b06f:	mov    eax,ds:0x4b15f182
  41b074:	mov    DWORD PTR [ecx-0x74ed8529],ebx
  41b07a:	or     eax,0x413fc3a3
  41b07f:	jmp    0x41b042
  41b081:	aas    
  41b082:	mov    edi,0xe982b206
  41b087:	fs pop ds
  41b089:	stos   BYTE PTR es:[edi],al
  41b08a:	jmp    DWORD PTR [ebp-0x3b25896d]
  41b090:	cdq    
  41b091:	jle    0x41b04a
  41b093:	into   
  41b094:	push   esp
  41b095:	xor    cl,BYTE PTR [eax-0x45]
  41b098:	nop
  41b099:	call   0xcbcbbf1d
  41b09e:	addr16 adc al,0x48
  41b0a1:	int    0x82
  41b0a3:	lock adc ecx,eax
  41b0a6:	jmp    0x41b0e9
  41b0a8:	jno    0x41b03d
  41b0aa:	fwait
  41b0ab:	into   
  41b0ac:	stos   BYTE PTR es:[edi],al
  41b0ad:	xchg   edi,eax
  41b0ae:	(bad)  
  41b0b0:	in     eax,0x9
  41b0b2:	shl    BYTE PTR [ecx],1
  41b0b4:	sub    DWORD PTR [ecx+0x63],0x963f1f1e
  41b0bb:	jnp    0x41b0ea
  41b0bd:	mov    ah,0x6d
  41b0bf:	xchg   esi,eax
  41b0c0:	rol    DWORD PTR ds:0x402b1b08,cl
  41b0c6:	mov    ?,WORD PTR [edi]
  41b0c8:	xchg   BYTE PTR [ecx],bh
  41b0ca:	sbb    eax,0xc75eb91
  41b0cf:	arpl   WORD PTR [ecx+0x110f5fe],bp
  41b0d5:	sub    eax,0x79852a6f
  41b0da:	push   edx
  41b0db:	outs   dx,BYTE PTR ds:[esi]
  41b0dc:	scas   eax,DWORD PTR es:[edi]
  41b0dd:	outs   dx,DWORD PTR ds:[esi]
  41b0de:	jle    0x41b065
  41b0e0:	dec    esp
  41b0e1:	lock cmp DWORD PTR [ebp+eax*4-0x784db353],ebp
  41b0e9:	pop    eax
  41b0ea:	jne    0x41b0de
  41b0ec:	leave  
  41b0ed:	in     eax,0x14
  41b0ef:	rcr    DWORD PTR [eax-0x20709b05],1
  41b0f5:	xlat   BYTE PTR ds:[ebx]
  41b0f6:	or     eax,0xda74554c
  41b0fb:	sub    ebp,DWORD PTR [bp+di]
  41b0fe:	mov    al,0x9a
  41b100:	cmp    BYTE PTR [edi+eiz*1+0x0],ah
  41b104:	jl     0x41b183
  41b106:	nop
  41b107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b108:	add    BYTE PTR [ebx+0x3095787a],ah
  41b10e:	sbb    eax,0x39957c4
  41b113:	dec    edi
  41b114:	inc    eax
  41b115:	mov    cl,0xfe
  41b117:	adc    ecx,DWORD PTR [edi+ebp*8]
  41b11a:	dec    eax
  41b11b:	add    DWORD PTR [eax],edi
  41b11d:	or     BYTE PTR gs:[edx-0x67],ah
  41b121:	push   edi
  41b122:	cmp    dh,cl
  41b124:	mov    ds:0xe1db8d57,eax
  41b129:	aam    0xe7
  41b12b:	dec    esi
  41b12c:	add    ebx,DWORD PTR [edi-0x80]
  41b12f:	lods   al,BYTE PTR ds:[esi]
  41b130:	icebp  
  41b131:	xor    eax,0xc7b06a45
  41b136:	dec    ecx
  41b137:	ja     0x41b0fa
  41b139:	(bad)  
  41b13a:	in     al,dx
  41b13b:	and    eax,0x87a0e2fb
  41b140:	retf   
  41b141:	mov    eax,ds:0x555fc9b2
  41b146:	enter  0x835b,0xab
  41b14a:	inc    esi
  41b14b:	(bad)  
  41b14c:	daa    
  41b14d:	xchg   esi,eax
  41b14e:	jmp    0x1211:0xad2c4b2a
  41b155:	retf   
  41b156:	sub    DWORD PTR [ebp-0x3a],eax
  41b159:	into   
  41b15a:	retf   
  41b15b:	lds    ebx,FWORD PTR [ebp-0x6a]
  41b15e:	lods   eax,DWORD PTR ds:[esi]
  41b15f:	push   esi
  41b160:	pop    ecx
  41b161:	inc    eax
  41b162:	sti    
  41b163:	push   ebp
  41b164:	add    eax,0x22817b1a
  41b169:	add    edx,DWORD PTR [esi+0x7]
  41b16c:	rcl    BYTE PTR [esp+eax*1+0x14],0xdd
  41b171:	mov    edi,0x604569fc
  41b176:	fadd   DWORD PTR [ebp+ecx*4+0x1ec7f758]
  41b17d:	mov    ebx,0x3c5a1cb4
  41b182:	push   edx
  41b183:	cmc    
  41b184:	in     al,0xfa
  41b186:	mov    ds:0x6fa53cbe,eax
  41b18b:	mov    eax,0xd7078b19
  41b190:	adc    eax,DWORD PTR [eax-0x7f828a23]
  41b196:	out    0x97,al
  41b198:	les    eax,FWORD PTR [esi+0x6]
  41b19b:	adc    ebp,DWORD PTR [ebx]
  41b19d:	lods   al,BYTE PTR ds:[esi]
  41b19e:	les    esi,FWORD PTR [eax-0x4688ddc9]
  41b1a4:	shl    cl,1
  41b1a6:	adc    BYTE PTR [ebx+0x323c9cc2],bl
  41b1ac:	dec    esi
  41b1ad:	dec    edx
  41b1ae:	mov    bl,0x11
  41b1b0:	or     al,0x44
  41b1b2:	sti    
  41b1b3:	add    eax,0xc7389f8c
  41b1b8:	cmc    
  41b1b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1ba:	in     eax,dx
  41b1bb:	inc    ecx
  41b1bc:	mov    cl,0xd6
  41b1be:	aam    0x50
  41b1c0:	dec    eax
  41b1c1:	ret    
  41b1c2:	cmp    ebp,edx
  41b1c4:	dec    ebx
  41b1c5:	pop    ebx
  41b1c6:	mov    bl,bl
  41b1c8:	cwde   
  41b1c9:	sbb    al,0x33
  41b1cb:	adc    ah,ch
  41b1cd:	in     al,dx
  41b1ce:	scas   eax,DWORD PTR es:[edi]
  41b1cf:	xor    al,0xd4
  41b1d1:	(bad)  
  41b1d2:	fwait
  41b1d3:	(bad)  
  41b1d4:	shr    DWORD PTR [ebx+0x61],cl
  41b1d7:	call   DWORD PTR [eax-0x172b29fa]
  41b1dd:	jae    0x41b209
  41b1df:	push   ebx
  41b1e0:	inc    edi
  41b1e1:	sti    
  41b1e2:	int    0x22
  41b1e4:	and    ecx,DWORD PTR [edx]
  41b1e6:	jbe    0x41b17e
  41b1e8:	ss popf 
  41b1ea:	pop    ebp
  41b1eb:	lods   al,BYTE PTR ds:[esi]
  41b1ec:	mov    ch,0xd9
  41b1ee:	sti    
  41b1ef:	daa    
  41b1f0:	pop    ecx
  41b1f1:	cli    
  41b1f2:	push   0x49dceec1
  41b1f7:	ja     0x41b1a9
  41b1f9:	aad    0x2
  41b1fb:	outs   dx,DWORD PTR ds:[esi]
  41b1fc:	test   DWORD PTR [ebx+edx*4+0x78331e06],0x9b2e60b
  41b207:	loopne 0x41b237
  41b209:	dec    ebx
  41b20a:	js     0x41b288
  41b20c:	mov    eax,0xf5b4be59
  41b211:	ficomp WORD PTR [edi+ebx*8-0x13]
  41b215:	push   0x28
  41b217:	jmp    0x8aeb:0x567f5a92
  41b21e:	lock jmp 0xa210c1ed
  41b224:	push   eax
  41b225:	push   eax
  41b226:	retf   
  41b227:	fimul  WORD PTR [edi]
  41b229:	das    
  41b22a:	mov    al,ds:0x3e6e00c9
  41b22f:	inc    esp
  41b230:	add    al,0x36
  41b232:	inc    edi
  41b233:	loop   0x41b289
  41b235:	popa   
  41b236:	jg     0x41b21e
  41b238:	mov    dl,0x81
  41b23a:	sub    ebx,DWORD PTR [ecx+0x7973daa9]
  41b240:	jmp    0x41b26d
  41b242:	into   
  41b243:	adc    BYTE PTR [edi-0x59],ah
  41b246:	push   cs
  41b247:	mov    esi,0x17b58d4b
  41b24c:	or     eax,0x3e9b66df
  41b251:	pop    edx
  41b252:	arpl   WORD PTR [edi],di
  41b254:	fsubrp st(6),st
  41b256:	jle    0x41b271
  41b258:	in     eax,0x75
  41b25a:	(bad)
  41b25e:	test   eax,0x33d08652
  41b263:	iret   
  41b264:	popa   
  41b265:	int    0x57
  41b267:	fldcw  WORD PTR [eax]
  41b269:	fst    QWORD PTR [edx-0x7d]
  41b26c:	mov    BYTE PTR [esi],bh
  41b26e:	stc    
  41b26f:	scas   eax,DWORD PTR es:[edi]
  41b270:	in     eax,0x7e
  41b272:	cmp    esp,DWORD PTR [esi+0x6b666e37]
  41b278:	push   ds
  41b279:	jp     0x41b2cb
  41b27b:	push   cs
  41b27c:	and    ebp,DWORD PTR [ecx]
  41b27e:	and    al,BYTE PTR [eax-0x4a]
  41b281:	adc    DWORD PTR [ebx],ecx
  41b283:	mov    dh,0xb0
  41b285:	jne    0x41b20e
  41b287:	pop    edx
  41b288:	xor    eax,0x2349ddee
  41b28d:	pop    ebp
  41b28e:	jmp    0x99568f7f
  41b293:	icebp  
  41b294:	ret    0xe0ee
  41b297:	cmp    al,0x56
  41b299:	mov    eax,0x3feb35a4
  41b29e:	icebp  
  41b29f:	fiadd  DWORD PTR [ecx]
  41b2a1:	sbb    WORD PTR [ecx+0x21bcc6a4],sp
  41b2a8:	das    
  41b2a9:	adc    eax,0x8bd2c4ee
  41b2ae:	pop    ss
  41b2af:	(bad)  
  41b2b0:	icebp  
  41b2b1:	sti    
  41b2b2:	or     eax,0xdc2ab714
  41b2b7:	sub    al,0xbe
  41b2b9:	out    0xa2,al
  41b2bb:	xchg   dx,ax
  41b2bd:	jo     0x41b26e
  41b2bf:	nop
  41b2c0:	push   ebx
  41b2c1:	scas   eax,DWORD PTR es:[edi]
  41b2c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2c3:	test   al,0x2a
  41b2c5:	jmp    0xc710:0xfd491cba
  41b2cc:	jge    0x41b2b3
  41b2ce:	push   ss
  41b2cf:	mov    ebp,0x509885be
  41b2d4:	retf   
  41b2d5:	inc    esp
  41b2d6:	mov    esi,0x54a1ef28
  41b2db:	pop    ebp
  41b2dc:	xor    al,0xc
  41b2de:	bound  eax,QWORD PTR [eax-0x2a]
  41b2e1:	xchg   edx,eax
  41b2e2:	shl    DWORD PTR [eax+0x57],0x6f
  41b2e6:	out    0xa7,eax
  41b2e8:	mov    DWORD PTR [ebx+ecx*2-0x437bee4f],0xc110dcee
  41b2f3:	adc    DWORD PTR [edi+ecx*4+0x36],esp
  41b2f7:	and    al,0xbb
  41b2f9:	mov    cs,WORD PTR [ecx+0x5c]
  41b2fc:	dec    ecx
  41b2fd:	outs   dx,DWORD PTR ds:[esi]
  41b2fe:	mov    bl,BYTE PTR [edx-0x1b]
  41b301:	xchg   ebx,eax
  41b302:	mov    esi,edi
  41b304:	daa    
  41b305:	jmp    0xf87ddbe7
  41b30a:	daa    
  41b30b:	jecxz  0x41b336
  41b30d:	aam    0x50
  41b30f:	push   cs
  41b310:	adc    DWORD PTR [ecx+0x3dcd9761],eax
  41b316:	and    eax,0xd18e58fc
  41b31b:	lods   al,BYTE PTR ds:[esi]
  41b31c:	and    bl,BYTE PTR [edi]
  41b31e:	and    dh,bl
  41b320:	leave  
  41b321:	in     eax,dx
  41b322:	jmp    0xae2d:0x81508b63
  41b329:	ffree  st(5)
  41b32b:	add    DWORD PTR [edi-0x71],eax
  41b32e:	fs dec esi
  41b330:	mov    esp,0x15a7adb9
  41b335:	lahf   
  41b336:	and    esp,edx
  41b338:	(bad)  
  41b339:	fistp  DWORD PTR [ecx-0x345bb2fd]
  41b33f:	retf   0x3eef
  41b342:	stc    
  41b343:	stos   DWORD PTR es:[edi],eax
  41b344:	test   dl,dh
  41b346:	fwait
  41b347:	jnp    0x41b2ce
  41b349:	push   0xce78c64c
  41b34e:	xchg   edi,eax
  41b34f:	sub    DWORD PTR [esi-0x27235d76],edi
  41b355:	push   0x40d4fa30
  41b35a:	jmp    0x3bc:0xc7ff3abe
  41b361:	add    al,al
  41b363:	enter  0x3f6,0xc
  41b367:	outs   dx,BYTE PTR ds:[esi]
  41b368:	outs   dx,DWORD PTR ds:[esi]
  41b369:	aad    0xca
  41b36b:	jne    0x41b375
  41b36d:	call   0x7919:0xfd170be7
  41b374:	fsubr  st(5),st
  41b376:	jge    0x41b356
  41b378:	mov    ecx,0xcc4d00a3
  41b37d:	inc    esp
  41b37e:	jo     0x41b341
  41b380:	adc    ah,bh
  41b382:	or     DWORD PTR [edx+0x59],ecx
  41b385:	arpl   cx,ax
  41b387:	mov    ebp,0x2dc4798f
  41b38c:	or     BYTE PTR [ebp+0x63450ca1],cl
  41b392:	mov    ebx,DWORD PTR [ebp-0x3d]
  41b395:	ficomp WORD PTR cs:[ebx]
  41b398:	lock pop ecx
  41b39a:	dec    esp
  41b39b:	nop
  41b39c:	rcl    bh,0x2f
  41b39f:	mov    bl,0x69
  41b3a1:	ret    
  41b3a2:	jns    0x41b404
  41b3a4:	and    eax,0x2afaf6f9
  41b3a9:	jo     0x41b399
  41b3ab:	fs clc 
  41b3ad:	cmp    BYTE PTR [esi+ecx*1+0x6e482660],al
  41b3b4:	stc    
  41b3b5:	or     bl,BYTE PTR ds:0xf2f0763d
  41b3bb:	push   0xc6f975bd
  41b3c0:	test   DWORD PTR [edx+0x64],0xa44ac9e5
  41b3c7:	repnz add edi,eax
  41b3ca:	ins    BYTE PTR es:[edi],dx
  41b3cb:	add    esp,edi
  41b3cd:	jp     0x41b357
  41b3cf:	mov    al,ds:0x235ecb91
  41b3d4:	dec    ebx
  41b3d5:	xor    BYTE PTR [edi],ah
  41b3d7:	shl    BYTE PTR [ebx+0x4],1
  41b3da:	xchg   edx,ebx
  41b3dc:	pop    eax
  41b3dd:	enter  0x7060,0xc2
  41b3e1:	in     eax,dx
  41b3e2:	and    DWORD PTR [edi-0x39],ebp
  41b3e5:	aam    0xe
  41b3e7:	cdq    
  41b3e8:	adc    dh,BYTE PTR [eax-0x4357b997]
  41b3ee:	jb     0x41b46e
  41b3f0:	push   eax
  41b3f1:	push   edi
  41b3f2:	das    
  41b3f3:	repz arpl WORD PTR [edi+0x2becd1ca],si
  41b3fa:	mov    ds:0xe7225857,eax
  41b3ff:	jl     0x41b3b0
  41b401:	bound  esp,QWORD PTR [ebx+0x6bce5ac3]
  41b407:	push   cs
  41b408:	retf   0xd697
  41b40b:	adc    DWORD PTR [eax+edi*2],ebx
  41b40e:	inc    esi
  41b40f:	or     edx,DWORD PTR [ebx]
  41b411:	repz jo 0x41b474
  41b414:	fcomip st,st(6)
  41b416:	test   al,0xee
  41b418:	cmp    ah,BYTE PTR [ebx+0x40201e2e]
  41b41e:	loope  0x41b42f
  41b420:	pop    es
  41b421:	jne    0x41b419
  41b423:	retf   0x4a1a
  41b426:	(bad)  
  41b427:	call   0x4bae9b39
  41b42c:	xor    edx,DWORD PTR [ebx+ecx*8+0x55]
  41b430:	leave  
  41b431:	xchg   ebx,eax
  41b432:	mov    edi,DWORD PTR [edi+0x5d4cf176]
  41b438:	dec    esi
  41b439:	aaa    
  41b43a:	mov    edi,eax
  41b43c:	popf   
  41b43d:	ret    0x1e66
  41b440:	push   edx
  41b441:	loope  0x41b476
  41b443:	sbb    al,0x69
  41b445:	and    eax,0xa43e4d4a
  41b44a:	pop    ss
  41b44b:	addr16 jne 0x41b407
  41b44e:	imul   esi,DWORD PTR [ebp+0x3e],0xffffffda
  41b452:	xchg   edi,eax
  41b453:	scas   al,BYTE PTR es:[edi]
  41b454:	jmp    0x41b4d4
  41b456:	les    esp,FWORD PTR [ebp+eiz*4+0x2f]
  41b45a:	daa    
  41b45b:	jp     0x41b48c
  41b45d:	sti    
  41b45e:	repnz mov eax,ss:0x1ef98f7f
  41b465:	mov    edx,0x28d5f7de
  41b46a:	cld    
  41b46b:	retf   0x55b0
  41b46e:	cmp    DWORD PTR [edx],0x26
  41b471:	pop    eax
  41b472:	mov    ebx,0x22321606
  41b477:	out    0x2d,eax
  41b479:	add    al,0xa1
  41b47b:	dec    edi
  41b47c:	push   es
  41b47d:	xchg   ebx,eax
  41b47e:	cli    
  41b47f:	aaa    
  41b480:	push   ebx
  41b481:	rcl    BYTE PTR [eax-0x28],1
  41b484:	cld    
  41b485:	inc    esi
  41b486:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41b488:	lds    ebx,FWORD PTR [esp+esi*4+0x5aaa5643]
  41b48f:	mov    ebp,0x5412cd25
  41b494:	sahf   
  41b495:	(bad)  
  41b496:	shl    DWORD PTR [edi],1
  41b498:	dec    ecx
  41b499:	aaa    
  41b49a:	das    
  41b49b:	xchg   edi,eax
  41b49c:	or     eax,0xe5ea34eb
  41b4a1:	cmp    eax,0xe7ab31f4
  41b4a6:	add    eax,0x141b6a19
  41b4ab:	lea    ecx,[edi]
  41b4ad:	mov    WORD PTR [edi+0x37e5e784],gs
  41b4b3:	inc    edx
  41b4b4:	bound  ebp,QWORD PTR [ebx]
  41b4b6:	test   BYTE PTR [ebp+0x7c],al
  41b4b9:	sahf   
  41b4ba:	push   ebp
  41b4bb:	push   ebx
  41b4bc:	ja     0x41b4a1
  41b4be:	cwde   
  41b4bf:	sbb    DWORD PTR [ebx+0x70aa862f],ecx
  41b4c5:	inc    eax
  41b4c6:	push   ebp
  41b4c7:	adc    BYTE PTR [eax],0x13
  41b4ca:	add    BYTE PTR [ebp+0x79],al
  41b4cd:	imul   edi,DWORD PTR [eax+0x6f],0x13
  41b4d1:	and    al,0x46
  41b4d3:	mov    ah,0x56
  41b4d5:	sbb    dh,BYTE PTR [eax+ebp*1+0x350530a5]
  41b4dc:	call   0xbb78fbf8
  41b4e1:	inc    ebp
  41b4e2:	cmp    ah,BYTE PTR [eax]
  41b4e4:	mov    bh,BYTE PTR [ecx+0x1e]
  41b4e7:	loopne 0x41b4da
  41b4e9:	pop    ds
  41b4ea:	cmp    ax,WORD PTR [ebx-0x67]
  41b4ee:	push   eax
  41b4ef:	out    0x59,al
  41b4f1:	push   esp
  41b4f2:	outs   dx,BYTE PTR ds:[esi]
  41b4f3:	cli    
  41b4f4:	shl    BYTE PTR [ecx+edx*8-0x5d165e86],0xdb
  41b4fc:	mov    ebp,0x1e698cb
  41b501:	jo     0x41b4b9
  41b503:	rol    eax,cl
  41b505:	out    0xc,al
  41b507:	push   ebx
  41b508:	mov    bh,0x36
  41b50a:	sbb    cl,bl
  41b50c:	test   eax,0xcbcb981
  41b511:	pop    esi
  41b512:	add    eax,0x999a1d
  41b517:	pop    edx
  41b518:	dec    eax
  41b519:	mov    ds:0xe6874f28,al
  41b51e:	inc    esi
  41b51f:	dec    eax
  41b520:	cdq    
  41b521:	imul   ebx,DWORD PTR [ebp+ecx*4-0x4e13abd1],0x65
  41b529:	jae    0x41b568
  41b52b:	sbb    al,0x10
  41b52d:	scas   al,BYTE PTR es:[edi]
  41b52e:	in     al,0x88
  41b530:	and    DWORD PTR [ecx-0x477c96fc],ebp
  41b536:	rcr    ah,0x14
  41b539:	push   esp
  41b53a:	adc    DWORD PTR [ebx-0x2e],ecx
  41b53d:	imul   ebp,DWORD PTR [ecx],0xffffffe5
  41b540:	jbe    0x41b50a
  41b542:	jno    0x41b585
  41b544:	pop    edx
  41b545:	sbb    BYTE PTR [ecx+0x5c24c823],al
  41b54b:	repz push ebx
  41b54d:	enter  0x3b57,0x1a
  41b551:	inc    edi
  41b552:	xchg   DWORD PTR [eax],edi
  41b554:	dec    edx
  41b555:	lahf   
  41b556:	mov    bh,0x44
  41b558:	nop
  41b559:	fbld   TBYTE PTR [ecx+0x1b9781dd]
  41b55f:	fild   QWORD PTR [eax]
  41b561:	rcl    BYTE PTR gs:[edx+0x5a],1
  41b565:	mov    ah,0x54
  41b567:	mov    eax,0xf71ca4
  41b56c:	out    dx,al
  41b56d:	dec    eax
  41b56e:	mov    bh,0xb
  41b570:	xchg   edi,eax
  41b571:	je     0x41b54a
  41b573:	inc    esp
  41b574:	mov    cl,0x31
  41b576:	xchg   edi,eax
  41b577:	cwde   
  41b578:	lds    ebp,FWORD PTR [esi]
  41b57a:	jnp    0xb47b647b
  41b580:	dec    ecx
  41b581:	loope  0x41b587
  41b583:	mov    cl,0x5a
  41b585:	sbb    esi,DWORD PTR [ecx+0x5b125c]
  41b58b:	int3   
  41b58c:	adc    al,0x45
  41b58e:	and    al,0x84
  41b590:	sti    
  41b591:	and    eax,DWORD PTR [ecx-0x590594d7]
  41b597:	dec    esi
  41b598:	mov    ebx,0x506df6d
  41b59d:	pop    es
  41b59e:	jae    0x41b564
  41b5a0:	adc    DWORD PTR [eax+0x13],ebx
  41b5a3:	push   cs
  41b5a4:	(bad)  
  41b5a6:	jne    0x41b54d
  41b5a8:	xchg   edi,eax
  41b5a9:	in     eax,0xf1
  41b5ab:	fild   WORD PTR ss:[ebp+0x15]
  41b5af:	popf   
  41b5b0:	jmp    0xa518:0xec9c1b1e
  41b5b7:	cmc    
  41b5b8:	push   ebp
  41b5b9:	mov    BYTE PTR [edx],0x81
  41b5bc:	xchg   ecx,eax
  41b5bd:	mov    ebp,0x5cb1b4bd
  41b5c2:	fld    TBYTE PTR [ecx+eax*2+0x4]
  41b5c6:	dec    ecx
  41b5c7:	jmp    0x67d71981
  41b5cc:	mov    cl,BYTE PTR [bp+di+0x7c]
  41b5d0:	shr    DWORD PTR [edi],0x7d
  41b5d3:	xor    DWORD PTR [edx-0x5c],ebp
  41b5d6:	xchg   DWORD PTR [edi-0x28],edi
  41b5d9:	pop    esi
  41b5da:	jnp    0x41b614
  41b5dc:	loop   0x41b565
  41b5de:	add    BYTE PTR [ecx],0x4f
  41b5e1:	sbb    ch,bh
  41b5e3:	jae    0x41b5de
  41b5e5:	fprem1 
  41b5e7:	sbb    eax,ebx
  41b5e9:	pop    es
  41b5ea:	cmp    esi,ebp
  41b5ec:	add    eax,0xe830bbb
  41b5f1:	aas    
  41b5f2:	xchg   ebx,eax
  41b5f3:	sub    edx,DWORD PTR [esi]
  41b5f5:	ins    BYTE PTR es:[edi],dx
  41b5f6:	addr16 sub al,0x84
  41b5f9:	bound  ebp,QWORD PTR [edi]
  41b5fb:	mov    cl,0xe2
  41b5fd:	call   0xc92f:0x6ba59728
  41b604:	cld    
  41b605:	or     bl,BYTE PTR [ecx]
  41b607:	imul   ebx,DWORD PTR [eax],0xffffffde
  41b60a:	dec    eax
  41b60b:	and    DWORD PTR [edi-0x5a6f4c80],esi
  41b611:	pop    ss
  41b612:	mov    ebx,DWORD PTR [ebp+0x7b]
  41b615:	mov    bl,0x34
  41b617:	or     al,0xab
  41b619:	pop    esp
  41b61a:	and    ecx,ebx
  41b61c:	dec    ecx
  41b61d:	(bad)  [edx]
  41b61f:	xchg   ebp,eax
  41b620:	loope  0x41b685
  41b622:	dec    ecx
  41b623:	ret    0xb615
  41b626:	fst    QWORD PTR [edi-0x4e6429a2]
  41b62c:	push   ebx
  41b62d:	in     eax,0xe2
  41b62f:	add    DWORD PTR [ecx-0x19],ecx
  41b632:	inc    sp
  41b634:	push   0x4e192b2b
  41b639:	lock fcmovb st,st(6)
  41b63c:	stc    
  41b63d:	sbb    DWORD PTR ds:0x1f4bc61,edi
  41b643:	xor    al,0x49
  41b645:	pop    edi
  41b646:	push   ebp
  41b647:	js     0x41b637
  41b649:	(bad)  
  41b64a:	fcomp  DWORD PTR [esi-0x7347db95]
  41b650:	dec    esp
  41b651:	test   al,0xd
  41b653:	and    eax,DWORD PTR [ecx-0xd53b768]
  41b659:	xchg   esp,eax
  41b65a:	fisttp QWORD PTR [edi]
  41b65c:	dec    ebp
  41b65d:	push   ecx
  41b65e:	lahf   
  41b65f:	jle    0x41b696
  41b661:	cmp    eax,0xc75859c1
  41b666:	sub    eax,0xb05de0cb
  41b66b:	add    DWORD PTR [ebx-0x67],ecx
  41b66e:	inc    edx
  41b66f:	pop    ds
  41b670:	call   0x6b288d14
  41b675:	ret    0x464a
  41b678:	repnz mov WORD PTR [edi-0x16c6486a],es
  41b67f:	je     0x41b6a0
  41b681:	xor    eax,0x1945de95
  41b686:	adc    DWORD PTR [ecx-0x551fa761],edx
  41b68c:	test   eax,0xb72d5fb7
  41b691:	(bad)  
  41b692:	jb     0x41b66f
  41b694:	or     DWORD PTR [esi+0x5eef0849],esi
  41b69a:	fstp   TBYTE PTR [edx-0x21]
  41b69d:	cmp    edx,0xbe80ef9a
  41b6a3:	sbb    DWORD PTR [edx+0x70],esi
  41b6a6:	or     dl,BYTE PTR [ecx+0x76]
  41b6a9:	je     0x41b708
  41b6ab:	nop
  41b6ac:	popf   
  41b6ad:	out    dx,al
  41b6ae:	jmp    0x3d8d:0x2a9b1923
  41b6b5:	cmp    dl,BYTE PTR [edi-0x77]
  41b6b8:	mov    ds:0x648ea8cc,eax
  41b6bd:	rol    DWORD PTR [esi],0xe4
  41b6c0:	std    
  41b6c1:	aaa    
  41b6c2:	in     eax,0xbc
  41b6c4:	mov    BYTE PTR [esi-0x12752592],bh
  41b6ca:	push   esi
  41b6cb:	lds    ecx,FWORD PTR [ecx-0x3]
  41b6ce:	jecxz  0x41b6ec
  41b6d0:	add    bh,bl
  41b6d2:	in     al,dx
  41b6d3:	adc    BYTE PTR [ebx+0x1e18d685],ch
  41b6d9:	repz iret 
  41b6db:	pusha  
  41b6dc:	push   eax
  41b6dd:	(bad)  
  41b6df:	and    bh,BYTE PTR [ebx-0x71496884]
  41b6e5:	push   ebx
  41b6e6:	adc    al,0xf7
  41b6e8:	and    ebx,DWORD PTR [esi+ebx*4]
  41b6eb:	and    eax,0x158a14be
  41b6f0:	xchg   BYTE PTR [edx-0x6ea060af],ah
  41b6f6:	inc    edi
  41b6f7:	or     al,0x75
  41b6f9:	sti    
  41b6fa:	test   dh,ch
  41b6fc:	in     eax,0x28
  41b6fe:	mov    ecx,0x31bbcbc
  41b703:	and    al,BYTE PTR [eax-0x4e]
  41b706:	retf   
  41b707:	xor    BYTE PTR ds:[edi],ah
  41b70a:	cs push ecx
  41b70c:	sub    DWORD PTR [esi+0x112ce1e2],esp
  41b712:	adc    BYTE PTR [edx-0x5ea2610c],cl
  41b718:	hlt    
  41b719:	mov    ecx,0x6bf58239
  41b71e:	mov    bh,cl
  41b720:	out    dx,eax
  41b721:	inc    esi
  41b722:	mov    bl,0xe9
  41b724:	push   ebx
  41b725:	jg     0x41b730
  41b727:	sub    BYTE PTR [eax],0x26
  41b72a:	cmp    bh,BYTE PTR [edx-0x157eac29]
  41b730:	ror    edi,1
  41b732:	cmp    dh,0x5
  41b735:	(bad)  
  41b736:	adc    ebx,DWORD PTR [esi]
  41b738:	push   ebp
  41b739:	into   
  41b73a:	lahf   
  41b73b:	sub    BYTE PTR [ebx],0xb8
  41b73e:	xchg   ebp,eax
  41b73f:	push   ds
  41b740:	xor    eax,0x3957f072
  41b745:	icebp  
  41b746:	pop    ebp
  41b747:	mov    ss,ebp
  41b749:	pop    eax
  41b74a:	push   0x80d55372
  41b74f:	(bad)  
  41b750:	cmp    ch,ah
  41b752:	jnp    0x41b7be
  41b754:	or     ecx,DWORD PTR [esi+0x565f299]
  41b75a:	addr16 mov bh,0x44
  41b75d:	sbb    esi,DWORD PTR [ebp-0x7b119279]
  41b763:	add    eax,0x66564ced
  41b768:	and    al,0xec
  41b76a:	call   0xe0ad1e53
  41b76f:	mov    ds:0x1616ac08,eax
  41b774:	jge    0x41b72d
  41b776:	stc    
  41b777:	or     eax,0xace80783
  41b77c:	ds ss addr16 push esp
  41b780:	bound  esp,QWORD PTR [edi]
  41b782:	(bad)  
  41b783:	aaa    
  41b784:	call   0xc25a:0x2a060893
  41b78b:	dec    DWORD PTR [ebp+0x38ae7d90]
  41b791:	scas   eax,DWORD PTR es:[edi]
  41b792:	test   BYTE PTR [edi+edi*2],0xea
  41b796:	imul   esp,DWORD PTR cs:[ebx+0x1b],0x8fdbdecb
  41b79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b79f:	add    al,BYTE PTR [ebx]
  41b7a1:	sbb    al,0x5a
  41b7a3:	sub    BYTE PTR [ebx-0x14539d44],bh
  41b7a9:	jge    0x41b7d2
  41b7ab:	push   edi
  41b7ac:	and    ebp,DWORD PTR [ecx+0x3af5a95]
  41b7b2:	out    0xfb,eax
  41b7b4:	mov    eax,ds:0xd72d5aac
  41b7b9:	jecxz  0x41b788
  41b7bb:	mov    dl,0x52
  41b7bd:	test   al,0x10
  41b7bf:	mov    DWORD PTR [edi],edi
  41b7c1:	mov    eax,0xdb4b383e
  41b7c6:	aaa    
  41b7c7:	jmp    0x41b75f
  41b7c9:	test   BYTE PTR [ebp-0x4c115a8],ah
  41b7cf:	mov    eax,0x8adc8fd0
  41b7d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7d5:	push   edx
  41b7d6:	clc    
  41b7d7:	js     0x41b787
  41b7d9:	sbb    cl,BYTE PTR [esi-0x22]
  41b7dc:	ret    
  41b7dd:	jmp    0xcab93346
  41b7e2:	or     dl,BYTE PTR [ebx-0x6d]
  41b7e5:	dec    edi
  41b7e6:	sub    BYTE PTR [esi-0x7e],dl
  41b7e9:	or     DWORD PTR [eax-0x3b157a6],ecx
  41b7ef:	fnsave [ecx]
  41b7f1:	push   esi
  41b7f2:	mov    WORD PTR [edx],ss
  41b7f4:	mov    ecx,0xd7014fdb
  41b7f9:	jmp    0xf6105446
  41b7fe:	adc    eax,0x9b191d4f
  41b803:	push   0x6bc661ea
  41b808:	push   esi
  41b809:	inc    esi
  41b80a:	xchg   ecx,eax
  41b80b:	(bad)  
  41b80c:	loop   0x41b7d0
  41b80e:	hlt    
  41b80f:	outs   dx,BYTE PTR ds:[esi]
  41b810:	sub    ebx,DWORD PTR [ebx]
  41b812:	and    eax,0x4c8b37da
  41b817:	in     al,dx
  41b818:	mov    bl,ah
  41b81a:	xor    eax,DWORD PTR [ebp-0x57]
  41b81d:	out    0x9a,eax
  41b81f:	cmc    
  41b820:	sbb    ebp,ecx
  41b822:	sub    ebp,0xffffffe6
  41b825:	repz cmp ax,WORD PTR ds:0xd2bd21f1
  41b82d:	outs   dx,BYTE PTR ds:[esi]
  41b82e:	xchg   ebx,eax
  41b82f:	imul   ebx,ebx,0xdbb4b2df
  41b835:	repnz mov esi,DWORD PTR [ecx-0x5f]
  41b839:	jae    0x41b87c
  41b83b:	in     al,dx
  41b83c:	pop    eax
  41b83d:	push   0x1224cc1a
  41b842:	add    bl,BYTE PTR [eax+ecx*2+0x263381e4]
  41b849:	leave  
  41b84a:	add    eax,0x4509f9f4
  41b84f:	dec    esp
  41b850:	ret    0xbf5
  41b853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b854:	aad    0xf6
  41b856:	addr16 aaa 
  41b858:	imul   edi,DWORD PTR [eax+0x1df4f09a],0xcfb15f60
  41b862:	hlt    
  41b863:	repz in eax,dx
  41b865:	fstp   QWORD PTR [ebx-0x79dee8a0]
  41b86b:	mov    ah,0x9e
  41b86d:	sub    eax,0x72c219ed
  41b872:	dec    esi
  41b873:	mov    WORD PTR [edi],ss
  41b875:	int3   
  41b876:	or     edx,DWORD PTR [ebp+0x5c8acf04]
  41b87c:	outs   dx,DWORD PTR ds:[esi]
  41b87d:	mov    eax,0x200c2739
  41b882:	pusha  
  41b883:	pop    ebx
  41b884:	stos   BYTE PTR es:[edi],al
  41b885:	xor    ebp,eax
  41b887:	cmp    edx,DWORD PTR [eax]
  41b889:	inc    esp
  41b88a:	cld    
  41b88b:	jle    0x41b835
  41b88d:	or     bl,ah
  41b88f:	or     edx,DWORD PTR [esi]
  41b891:	clc    
  41b892:	mov    ds:0x5f7e92d0,eax
  41b897:	jbe    0x41b828
  41b899:	push   ds
  41b89a:	ja     0x41b879
  41b89c:	inc    edi
  41b89d:	bound  esi,QWORD PTR [ebx]
  41b89f:	jg     0x41b91c
  41b8a1:	mov    ch,0x6c
  41b8a3:	pushf  
  41b8a4:	pop    esi
  41b8a5:	stos   DWORD PTR es:[edi],eax
  41b8a6:	shl    BYTE PTR [eax+0x65],cl
  41b8a9:	repnz dec DWORD PTR [ebx]
  41b8ac:	stc    
  41b8ad:	push   edi
  41b8ae:	inc    ebp
  41b8af:	in     eax,0x4a
  41b8b1:	enter  0xfcf9,0xbc
  41b8b5:	mov    ebp,0x1118982b
  41b8ba:	and    DWORD PTR [esi+eiz*1-0x357dcca7],esi
  41b8c1:	push   0x4e1d8ffa
  41b8c6:	jge    0x41b8d7
  41b8c8:	jmp    0x21209d9c
  41b8cd:	xchg   esp,eax
  41b8ce:	int    0xba
  41b8d0:	dec    eax
  41b8d1:	pop    eax
  41b8d2:	inc    ecx
  41b8d3:	push   ds
  41b8d4:	jmp    0x13f4:0x47c8a5cc
  41b8db:	cld    
  41b8dc:	gs sbb al,0x3a
  41b8df:	fimul  WORD PTR [ebx]
  41b8e1:	sbb    dh,dl
  41b8e3:	loope  0x41b90f
  41b8e5:	sbb    eax,0x8ae02c55
  41b8ea:	popa   
  41b8eb:	or     eax,DWORD PTR ds:0x18b5e2e1
  41b8f1:	pop    eax
  41b8f2:	push   ebx
  41b8f3:	sar    BYTE PTR [edi],1
  41b8f5:	ss ret 0x851e
  41b8f9:	dec    esi
  41b8fa:	fisubr DWORD PTR [ebx+0x11427d7a]
  41b900:	scas   al,BYTE PTR es:[edi]
  41b901:	inc    ebp
  41b902:	push   edx
  41b903:	pop    ebx
  41b904:	adc    DWORD PTR [esi+0x43ec3ae8],ecx
  41b90a:	add    bh,BYTE PTR [ebx+0x61]
  41b90d:	stc    
  41b90e:	aaa    
  41b90f:	mov    esp,0x77dbb3c5
  41b914:	cmp    BYTE PTR [edi-0x4cd2fad5],dh
  41b91a:	lods   al,BYTE PTR ds:[esi]
  41b91b:	popa   
  41b91c:	and    eax,0xc0af23ff
  41b921:	xor    edi,DWORD PTR [ebp+ebx*1+0x76a3cfd9]
  41b928:	mov    bl,0xbb
  41b92a:	fsubp  st(2),st
  41b92c:	add    cl,BYTE PTR [ebx]
  41b92e:	(bad)  
  41b92f:	popa   
  41b930:	pop    ss
  41b931:	and    DWORD PTR [ecx],0xffffffd5
  41b934:	in     eax,dx
  41b935:	loope  0x41b8b9
  41b937:	mov    ?,WORD PTR [esi]
  41b939:	pop    eax
  41b93a:	scas   al,BYTE PTR es:[edi]
  41b93b:	arpl   WORD PTR [esi+edi*4+0xcf23518],bp
  41b942:	adc    al,al
  41b944:	push   edx
  41b945:	sahf   
  41b946:	mov    al,0x31
  41b948:	or     BYTE PTR [eax+0x26fda91a],dl
  41b94e:	add    cl,BYTE PTR [ebx]
  41b950:	jo     0x41b944
  41b952:	push   ebp
  41b953:	pusha  
  41b954:	leave  
  41b955:	cmp    al,0xd
  41b957:	fnstsw WORD PTR [ebp-0x2881d274]
  41b95d:	add    bl,BYTE PTR [ebx+0x8]
  41b960:	push   ebx
  41b961:	push   esp
  41b962:	or     eax,0x4fd02086
  41b967:	ja     0x41b972
  41b969:	dec    edx
  41b96a:	sbb    al,0xdc
  41b96c:	add    al,BYTE PTR [eax]
  41b96e:	jo     0x41b963
  41b970:	imul   eax,DWORD PTR [ecx],0xffffffaa
  41b973:	mov    ebp,0xe76c8a05
  41b978:	fnstenv [si-0x7840]
  41b97d:	push   0xc6275e90
  41b982:	ins    DWORD PTR es:[edi],dx
  41b983:	push   ebx
  41b984:	mov    DWORD PTR ds:0xcfaad65c,esi
  41b98a:	mov    ds:0x1e00f946,al
  41b98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b990:	mov    BYTE PTR [esi+0x9],al
  41b993:	rcr    DWORD PTR [ecx+0x64],1
  41b996:	jbe    0x41b9c6
  41b998:	push   edx
  41b999:	test   BYTE PTR [esi-0xa117f5d],dh
  41b99f:	push   esi
  41b9a0:	push   edx
  41b9a1:	cmc    
  41b9a2:	push   esp
  41b9a3:	retf   
  41b9a4:	leave  
  41b9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9a6:	push   DWORD PTR [ecx-0x3b0ccb97]
  41b9ac:	in     al,0xd7
  41b9ae:	test   BYTE PTR [esi-0x57],cl
  41b9b1:	(bad)  
  41b9b2:	outs   dx,BYTE PTR ds:[esi]
  41b9b3:	(bad)  
  41b9b4:	jbe    0x41b989
  41b9b6:	push   ebp
  41b9b7:	ss jecxz 0x41ba32
  41b9ba:	pop    ecx
  41b9bb:	inc    esi
  41b9bc:	(bad)  [ebx]
  41b9be:	cli    
  41b9bf:	push   edx
  41b9c0:	mov    bl,0x5a
  41b9c2:	xor    BYTE PTR [edx+0x45],0x2b
  41b9c6:	ins    DWORD PTR es:[edi],dx
  41b9c7:	inc    eax
  41b9c8:	aas    
  41b9c9:	xchg   ecx,eax
  41b9ca:	outs   dx,BYTE PTR ds:[esi]
  41b9cb:	jmp    0xdb44612
  41b9d0:	cmp    DWORD PTR [edi],edx
  41b9d2:	sub    dh,BYTE PTR [ebx+ebx*2]
  41b9d5:	push   cs
  41b9d6:	xor    BYTE PTR ds:0x5ef7fcde,0x64
  41b9dd:	or     BYTE PTR [ebx-0x41],al
  41b9e0:	fwait
  41b9e1:	push   es
  41b9e2:	fidiv  WORD PTR [si-0x7f21]
  41b9e7:	pusha  
  41b9e8:	dec    eax
  41b9e9:	adc    al,0x86
  41b9eb:	mov    BYTE PTR [ebx],dh
  41b9ed:	sbb    eax,0xa187d1ca
  41b9f2:	fwait
  41b9f3:	mov    al,ds:0x8ac9d73a
  41b9f8:	fs enter 0x8ae5,0x6d
  41b9fd:	dec    edi
  41b9fe:	repz jno 0x41ba57
  41ba01:	clc    
  41ba02:	fisttp DWORD PTR [eax]
  41ba04:	hlt    
  41ba05:	(bad)  [eax]
  41ba07:	call   0xf17:0x341af83d
  41ba0e:	xor    al,0x9
  41ba10:	loop   0x41ba41
  41ba12:	pop    ebp
  41ba13:	fistp  DWORD PTR [ebx]
  41ba15:	pop    esp
  41ba16:	add    eax,0xea97ff5c
  41ba1b:	(bad)  
  41ba1c:	xchg   ecx,eax
  41ba1d:	stos   DWORD PTR es:[edi],eax
  41ba1e:	push   esp
  41ba1f:	jg     0x41ba49
  41ba21:	mov    dh,0x8f
  41ba23:	sub    al,ah
  41ba25:	push   ebp
  41ba26:	mov    ds:0xf4e7d02d,al
  41ba2b:	lahf   
  41ba2c:	inc    esp
  41ba2d:	sub    al,0x20
  41ba2f:	push   eax
  41ba30:	lss    ebx,FWORD PTR [edi-0x21]
  41ba34:	inc    eax
  41ba35:	in     al,dx
  41ba36:	(bad)
  41ba39:	popa   
  41ba3a:	push   eax
  41ba3b:	or     eax,0x144c2adf
  41ba40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba41:	cmp    al,0xef
  41ba43:	sbb    DWORD PTR [ecx-0x4f],ecx
  41ba46:	cmp    BYTE PTR [edi-0x4c],bl
  41ba49:	(bad)  
  41ba4a:	mov    bh,0x4c
  41ba4c:	mov    al,0xfc
  41ba4e:	outs   dx,DWORD PTR ds:[esi]
  41ba4f:	jle    0x41bac6
  41ba51:	pusha  
  41ba52:	pop    ecx
  41ba53:	sahf   
  41ba54:	aad    0x4b
  41ba56:	add    DWORD PTR [edi-0x2f6f1b81],edi
  41ba5c:	adc    DWORD PTR [edx],edx
  41ba5e:	loop   0x41ba86
  41ba60:	mov    ds:0x7b1df539,eax
  41ba65:	mov    dh,0x45
  41ba67:	mov    dh,0x92
  41ba69:	jno    0x41ba62
  41ba6b:	inc    esp
  41ba6c:	lods   al,BYTE PTR ds:[esi]
  41ba6d:	into   
  41ba6e:	iret   
  41ba6f:	sub    BYTE PTR [edx+0x6fb24acd],ah
  41ba75:	shl    DWORD PTR [ebp-0x9],cl
  41ba78:	pop    ss
  41ba79:	push   0xfc2084ea
  41ba7e:	jbe    0x41ba8a
  41ba80:	jecxz  0x41bad5
  41ba82:	ja     0x41baaa
  41ba84:	xchg   esi,eax
  41ba85:	fld    TBYTE PTR [ebp-0x2d]
  41ba88:	in     eax,dx
  41ba89:	xchg   ebp,eax
  41ba8a:	retf   
  41ba8b:	out    0x8,al
  41ba8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba8e:	jbe    0x41bb01
  41ba90:	loop   0x41ba20
  41ba92:	jno    0x41bae6
  41ba94:	mov    esi,fs
  41ba96:	cmp    BYTE PTR [eax-0x10],ah
  41ba99:	cmp    al,0xe6
  41ba9b:	sub    ah,BYTE PTR [eax-0x6a4af9dd]
  41baa1:	iret   
  41baa2:	push   0x62652160
  41baa7:	pop    ecx
  41baa8:	cmp    eax,0x389c690e
  41baad:	lahf   
  41baae:	(bad)
  41bab3:	icebp  
  41bab4:	jmp    0x2e69:0x4aca07ef
  41babb:	mov    ecx,0x9eedf13
  41bac0:	dec    edx
  41bac1:	loopne 0x41ba9d
  41bac3:	dec    esp
  41bac4:	or     BYTE PTR [ebx+0x19a06860],0xcd
  41bacb:	inc    edi
  41bacc:	mov    al,0x6d
  41bace:	std    
  41bacf:	stc    
  41bad0:	iret   
  41bad1:	cwde   
  41bad2:	jge    0x41bae6
  41bad4:	fwait
  41bad5:	scas   eax,DWORD PTR es:[edi]
  41bad6:	stos   BYTE PTR es:[edi],al
  41bad7:	push   ebx
  41bad8:	loop   0x41bac2
  41bada:	pop    ss
  41badb:	jo     0x41ba67
  41badd:	and    al,0x5b
  41badf:	das    
  41bae0:	jb     0x41baaa
  41bae2:	jne    0x41bb1e
  41bae4:	or     esp,DWORD PTR [edi+0x49]
  41bae7:	dec    ebx
  41bae8:	and    BYTE PTR [esi+0x4c],cl
  41baeb:	xchg   edx,eax
  41baec:	and    bl,BYTE PTR [ebp+0x1a]
  41baef:	mov    ch,0xde
  41baf1:	(bad)  
  41baf2:	sub    esp,DWORD PTR [esi]
  41baf4:	aam    0x33
  41baf6:	cmp    ch,bl
  41baf8:	jo     0x41badb
  41bafa:	adc    al,BYTE PTR [ebx-0x77]
  41bafd:	imul   eax,DWORD PTR [edx-0x25d3dbee],0x2
  41bb04:	push   ss
  41bb05:	xor    DWORD PTR ds:0x2552e7f5,0x3fc78148
  41bb0f:	jb     0x41bac9
  41bb11:	mov    DWORD PTR [ecx+esi*1-0x37bdf77a],0x27b1b56b
  41bb1c:	lds    ecx,FWORD PTR [ecx+eiz*4+0x62d7e030]
  41bb23:	mov    ah,0xb
  41bb25:	pop    ds
  41bb26:	sub    esi,DWORD PTR [ebx-0x562e9af]
  41bb2c:	or     BYTE PTR [esi+0x4a],bh
  41bb2f:	mov    fs,WORD PTR [ebp+0x5d]
  41bb32:	sbb    DWORD PTR [ebx+0x58ece468],esp
  41bb38:	xchg   ecx,eax
  41bb39:	mov    ecx,0x16d9c50e
  41bb3e:	pop    edx
  41bb3f:	loopne 0x41bb93
  41bb41:	outs   dx,DWORD PTR ds:[esi]
  41bb42:	sar    DWORD PTR [edx+0x44],1
  41bb45:	std    
  41bb46:	pop    es
  41bb47:	dec    ebp
  41bb48:	retf   
  41bb49:	test   al,0xac
  41bb4b:	mov    dh,0x6b
  41bb4d:	pop    ss
  41bb4e:	daa    
  41bb4f:	(bad)  
  41bb50:	push   0xffffff90
  41bb52:	imul   BYTE PTR [edi+0x71]
  41bb55:	mov    ?,WORD PTR [eax]
  41bb57:	icebp  
  41bb58:	or     bh,BYTE PTR [edx]
  41bb5a:	dec    ebx
  41bb5b:	int    0xae
  41bb5d:	adc    ebp,DWORD PTR [edi+0x28e6f955]
  41bb63:	mov    ah,0x8b
  41bb65:	or     ebx,edx
  41bb67:	ins    BYTE PTR es:[edi],dx
  41bb68:	or     esi,DWORD PTR [ebp+0x27712ab8]
  41bb6e:	les    ecx,FWORD PTR [esi]
  41bb70:	pop    ebp
  41bb71:	add    eax,0x75b3d584
  41bb76:	xchg   ecx,eax
  41bb77:	sbb    esp,0xe2bd8040
  41bb7d:	jne    0x41bbee
  41bb7f:	add    eax,0x1ae97468
  41bb84:	(bad)  
  41bb85:	jbe    0x41bb27
  41bb87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb88:	in     eax,0xd1
  41bb8a:	call   0x804a6e0e
  41bb8f:	push   ebx
  41bb90:	ja     0x41bb7b
  41bb92:	and    edx,edx
  41bb94:	pop    fs
  41bb96:	xor    eax,0xe609b0d0
  41bb9b:	xchg   DWORD PTR [ebx+0x38],edx
  41bb9e:	fbstp  TBYTE PTR [edi+0x34]
  41bba1:	jge    0x41bbfc
  41bba3:	sbb    al,0xc3
  41bba5:	jae    0x41bb7a
  41bba7:	(bad)  
  41bba8:	cwde   
  41bba9:	pop    eax
  41bbaa:	xchg   edx,eax
  41bbab:	clc    
  41bbac:	dec    eax
  41bbad:	fwait
  41bbae:	les    esp,FWORD PTR [edi+0x5b]
  41bbb1:	lods   eax,DWORD PTR ds:[esi]
  41bbb2:	icebp  
  41bbb3:	inc    edx
  41bbb4:	xchg   edi,eax
  41bbb5:	add    ah,dl
  41bbb7:	repz push esp
  41bbb9:	jecxz  0x41bb4e
  41bbbb:	les    ecx,FWORD PTR [ecx-0x698b5c58]
  41bbc1:	push   cs
  41bbc2:	add    edi,ebp
  41bbc4:	mov    ah,0x19
  41bbc6:	adc    ecx,0xef39240b
  41bbcc:	in     eax,dx
  41bbcd:	sub    al,0x74
  41bbcf:	cld    
  41bbd0:	cdq    
  41bbd1:	cmp    ch,cl
  41bbd3:	cmp    BYTE PTR [ebp-0x74],dh
  41bbd6:	ins    DWORD PTR es:[edi],dx
  41bbd7:	adc    eax,0x9a49d09c
  41bbdc:	loope  0x41bbd6
  41bbde:	jns    0x41bbf4
  41bbe0:	ret    
  41bbe1:	xor    DWORD PTR [ebx],ebx
  41bbe3:	pop    esp
  41bbe4:	leave  
  41bbe5:	out    0x3f,eax
  41bbe7:	scas   al,BYTE PTR es:[edi]
  41bbe8:	add    cl,BYTE PTR [ecx]
  41bbea:	clc    
  41bbeb:	add    eax,edx
  41bbed:	loopne 0x41bba2
  41bbef:	push   ebx
  41bbf0:	std    
  41bbf1:	arpl   WORD PTR [ecx],bx
  41bbf3:	loopne 0x41bc35
  41bbf5:	scas   al,BYTE PTR es:[edi]
  41bbf6:	in     eax,dx
  41bbf7:	add    dh,BYTE PTR [esi-0x52]
  41bbfa:	or     eax,0x885aa996
  41bbff:	ds std 
  41bc01:	rol    DWORD PTR [ecx+0x10],1
  41bc04:	test   BYTE PTR [esi+0x7867b3b4],dh
  41bc0a:	jae    0x41bbad
  41bc0c:	bound  esp,QWORD PTR ss:[ebp-0x7c438c3c]
  41bc13:	add    DWORD PTR [esi-0x39e1948e],esp
  41bc19:	and    DWORD PTR ds:0x9b2d8318,edx
  41bc1f:	jl     0x41bc4a
  41bc21:	jle    0x41bc38
  41bc23:	lods   al,BYTE PTR ds:[esi]
  41bc24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc26:	loop   0x41bbe4
  41bc28:	lahf   
  41bc29:	xchg   esi,eax
  41bc2a:	(bad)  
  41bc2b:	in     eax,0xa3
  41bc2d:	repz and ecx,DWORD PTR [ecx+edi*1+0x40]
  41bc32:	cmp    eax,0xd8d96263
  41bc37:	popf   
  41bc38:	pop    ss
  41bc39:	add    BYTE PTR [edx+0x2c82469c],ah
  41bc3f:	xchg   DWORD PTR [ebx+0x34],esi
  41bc42:	jno    0x41bca8
  41bc44:	add    eax,0x9957f310
  41bc49:	mov    al,0x2
  41bc4b:	sbb    al,0x2c
  41bc4d:	enter  0xa458,0x99
  41bc51:	(bad)  
  41bc52:	cmc    
  41bc53:	(bad)  
  41bc54:	clc    
  41bc55:	retf   
  41bc56:	cmp    edi,edx
  41bc58:	loopne 0x41bc2f
  41bc5a:	adc    eax,edi
  41bc5c:	fisub  DWORD PTR [ebx+ebx*2-0x25631c2f]
  41bc63:	adc    al,0xe1
  41bc65:	stos   BYTE PTR es:[edi],al
  41bc66:	sub    eax,0xd4c26d97
  41bc6b:	aas    
  41bc6c:	jp     0x41bc49
  41bc6e:	div    DWORD PTR [eax-0x37]
  41bc71:	jne    0x41bc54
  41bc73:	(bad)  
  41bc76:	jge    0x41bc9e
  41bc78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc79:	ins    DWORD PTR es:[edi],dx
  41bc7a:	sbb    ebp,DWORD PTR [edi-0x76]
  41bc7d:	inc    ebx
  41bc7e:	lock xchg edi,eax
  41bc80:	mov    ebx,0xb9f63fe9
  41bc85:	cwde   
  41bc86:	add    dh,BYTE PTR [ecx+0x48860348]
  41bc8c:	add    al,0xcd
  41bc8e:	xor    esp,eax
  41bc90:	loop   0x41bc56
  41bc92:	mov    al,0x6c
  41bc94:	sbb    DWORD PTR [esi+ebp*4-0x6be3755c],ebx
  41bc9b:	call   0xd490:0xe35a7642
  41bca2:	addr16 push 0x56
  41bca5:	jp     0x41bc6c
  41bca7:	push   ecx
  41bca8:	push   es
  41bca9:	enter  0x7c7c,0xb1
  41bcad:	mov    eax,ds:0xf5b0e662
  41bcb2:	add    eax,0xe766aa5c
  41bcb7:	mov    cl,0x8d
  41bcb9:	sbb    eax,0x47a41a0d
  41bcbe:	pushf  
  41bcbf:	lds    ebx,FWORD PTR [edi-0x28566e21]
  41bcc5:	sti    
  41bcc6:	and    eax,0x9f4c658f
  41bccb:	adc    al,0x14
  41bccd:	add    dl,al
  41bccf:	mov    eax,0xa2c5a59a
  41bcd4:	adc    eax,0x71a902a
  41bcd9:	fwait
  41bcda:	ret    0x27d5
  41bcdd:	and    al,0x47
  41bcdf:	(bad)  
  41bce0:	pop    edx
  41bce1:	inc    edi
  41bce2:	xchg   ecx,eax
  41bce3:	push   esi
  41bce4:	mov    ecx,0x90367622
  41bce9:	xor    BYTE PTR [edi-0x283d8bd9],bh
  41bcef:	repz mov ch,0x26
  41bcf2:	inc    esp
  41bcf3:	mov    ds:0x9475faf4,al
  41bcf8:	and    edx,DWORD PTR [eax]
  41bcfa:	enter  0x9d51,0x27
  41bcfe:	stc    
  41bcff:	test   eax,0x6a2d0681
  41bd04:	outs   dx,BYTE PTR ds:[esi]
  41bd05:	push   esi
  41bd06:	test   al,0x8c
  41bd08:	or     al,0xc8
  41bd0a:	push   eax
  41bd0b:	sub    esi,DWORD PTR [edx-0x3c665f12]
  41bd11:	push   edx
  41bd12:	fistp  DWORD PTR [ecx+edx*2]
  41bd15:	push   edi
  41bd16:	cmp    eax,0x30f0f7b6
  41bd1b:	shr    BYTE PTR [ebx+0x41019aa],1
  41bd21:	dec    edi
  41bd22:	xor    esp,DWORD PTR [edx]
  41bd24:	sbb    BYTE PTR [edi+0x2b3ec9c],0xb4
  41bd2b:	jg     0x41bd62
  41bd2d:	mov    ah,0x81
  41bd2f:	(bad)  
  41bd30:	dec    eax
  41bd31:	retf   
  41bd32:	and    bh,BYTE PTR [esi+0x39]
  41bd35:	mov    ds:0x792abbb6,al
  41bd3a:	or     BYTE PTR [ebp-0x52],0xb2
  41bd3e:	pop    esp
  41bd3f:	dec    edi
  41bd40:	imul   DWORD PTR [ebp+0x79]
  41bd43:	inc    ebx
  41bd44:	jb     0x41bd4f
  41bd46:	gs ds imul esp,edi,0xffffffcb
  41bd4b:	cmp    eax,0x4de72f88
  41bd50:	push   eax
  41bd51:	pop    esp
  41bd53:	das    
  41bd54:	cmp    eax,0x4169a5d0
  41bd59:	push   ds
  41bd5a:	jg     0x41bd98
  41bd5c:	out    dx,eax
  41bd5d:	and    DWORD PTR [edx-0x480ea158],esp
  41bd63:	xchg   ebx,eax
  41bd64:	xor    edx,edi
  41bd66:	dec    edx
  41bd67:	sbb    DWORD PTR fs:[esi+0x7c],esi
  41bd6b:	les    edi,FWORD PTR [esi+ebx*1+0x6089e199]
  41bd72:	jle    0x41bd28
  41bd74:	adc    eax,0xb8e8969d
  41bd79:	or     bh,dh
  41bd7b:	fdivr  DWORD PTR [edx+eax*4]
  41bd7e:	cmp    al,0xf9
  41bd80:	jmp    0xca4d:0x662047dd
  41bd87:	int3   
  41bd88:	mov    cl,0x1a
  41bd8a:	pop    edx
  41bd8b:	sub    DWORD PTR [ebx+0x34],edi
  41bd8e:	out    dx,eax
  41bd8f:	ds jge 0x41bd72
  41bd92:	dec    ebx
  41bd93:	fild   DWORD PTR [ebp+0x2]
  41bd96:	shl    DWORD PTR ds:0x8d9e53b8,0x33
  41bd9d:	arpl   WORD PTR ds:0xeb2c85ab,ax
  41bda3:	imul   ebx,edi,0xffffffea
  41bda6:	mov    ch,0x6b
  41bda8:	scas   eax,DWORD PTR es:[edi]
  41bda9:	in     eax,0x74
  41bdab:	out    dx,al
  41bdac:	cli    
  41bdad:	jge    0x41bd54
  41bdaf:	inc    eax
  41bdb0:	push   es
  41bdb1:	mov    ds:0xd2b6f792,eax
  41bdb6:	out    0xa4,eax
  41bdb8:	sub    eax,0x5a283b7b
  41bdbd:	outs   dx,DWORD PTR ds:[esi]
  41bdbe:	sub    eax,0x41f0725e
  41bdc3:	mov    dh,0x8f
  41bdc5:	aaa    
  41bdc6:	pop    esi
  41bdc7:	xchg   ebp,eax
  41bdc8:	pop    ds
  41bdc9:	sbb    esi,esi
  41bdcb:	xchg   ah,bh
  41bdcd:	out    dx,eax
  41bdce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdcf:	add    eax,0xa9465242
  41bdd4:	es dec esp
  41bdd6:	sub    edi,edi
  41bdd8:	jmp    0x9e1e:0x76c48bf8
  41bddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bde0:	inc    ebx
  41bde1:	in     al,0x50
  41bde3:	xchg   esi,eax
  41bde4:	mov    esp,0x23ffe81
  41bde9:	dec    ebx
  41bdea:	inc    esi
  41bdeb:	hlt    
  41bdec:	test   BYTE PTR [edx+eiz*4],bh
  41bdef:	dec    ebx
  41bdf0:	pop    ss
  41bdf1:	out    dx,eax
  41bdf2:	dec    edi
  41bdf3:	xlat   BYTE PTR ds:[ebx]
  41bdf4:	jo     0x41bdf1
  41bdf6:	cwde   
  41bdf7:	cmp    ebx,DWORD PTR [ebx-0x45]
  41bdfa:	bound  ebp,QWORD PTR [esi]
  41bdfc:	dec    esp
  41bdfd:	and    al,0x0
  41bdff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be00:	stos   BYTE PTR es:[edi],al
  41be01:	pop    ecx
  41be02:	pop    es
  41be03:	les    ebp,FWORD PTR [esi-0x17a26f86]
  41be09:	cmc    
  41be0a:	add    al,0x81
  41be0c:	mov    ecx,0x72592291
  41be11:	adc    eax,0x127d8a58
  41be16:	je     0x41be16
  41be18:	(bad)  
  41be19:	addr16 ds dec edx
  41be1c:	pop    es
  41be1d:	sub    eax,0x44fa4ca2
  41be22:	push   0xd989a64c
  41be27:	inc    esi
  41be28:	or     DWORD PTR [edi],0xffffff99
  41be2b:	cmp    dl,BYTE PTR [esi+eax*2+0x15]
  41be2f:	cs cmp eax,0x6142d9f7
  41be35:	fisub  DWORD PTR [edx+0x51]
  41be38:	mov    esi,0x12b3fe83
  41be3d:	(bad)
  41be42:	jne    0x41be18
  41be44:	aam    0x10
  41be46:	pop    ebx
  41be47:	xchg   esi,eax
  41be48:	stc    
  41be49:	inc    BYTE PTR [esi-0x46]
  41be4c:	call   0xfce6:0x30eab383
  41be53:	(bad)  
  41be54:	sbb    DWORD PTR [ecx+0x4bc510b0],ebp
  41be5a:	outs   dx,DWORD PTR ds:[esi]
  41be5b:	(bad)  
  41be5d:	push   ebp
  41be5e:	mov    WORD PTR [ebp-0x66],ds
  41be61:	or     BYTE PTR [edx],al
  41be63:	cmp    BYTE PTR [ecx+0x4c70f830],cl
  41be69:	mov    bl,0xbf
  41be6b:	int3   
  41be6c:	xlat   BYTE PTR ds:[ebx]
  41be6d:	fistp  DWORD PTR [ebp-0x28025141]
  41be73:	sar    DWORD PTR [ebx-0x6aee4eca],cl
  41be79:	aaa    
  41be7a:	sti    
  41be7b:	nop
  41be7c:	popf   
  41be7d:	pop    edi
  41be7e:	repz push 0x3d0c624b
  41be84:	sub    DWORD PTR [eax+eiz*4-0x14],0x77422f26
  41be8c:	shl    eax,1
  41be8e:	xchg   edx,eax
  41be8f:	dec    DWORD PTR [edx]
  41be91:	or     bh,ch
  41be93:	icebp  
  41be94:	test   al,0x89
  41be96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be97:	dec    ebx
  41be98:	lock or al,0x2
  41be9b:	in     eax,0x97
  41be9d:	adc    eax,0xca57b4d2
  41bea2:	sub    edi,esp
  41bea4:	dec    ebp
  41bea5:	ins    WORD PTR es:[edi],dx
  41bea7:	mov    esp,0xb3d2b14c
  41bead:	mov    al,0x9
  41beaf:	mov    ?,WORD PTR ds:0x5835570e
  41beb5:	int    0xc0
  41beb7:	mov    ch,0x62
  41beb9:	mov    dh,0xb
  41bebb:	xor    ch,dl
  41bebd:	adc    al,0xfb
  41bebf:	mov    ebx,0x3b8300f4
  41bec4:	sar    BYTE PTR [ebx-0x2c],1
  41bec7:	pop    edi
  41bec8:	stos   BYTE PTR es:[edi],al
  41bec9:	test   DWORD PTR [ecx-0x282c6a4b],0xb5915b9c
  41bed3:	aam    0x9f
  41bed5:	jl     0x41bf23
  41bed7:	retf   
  41bed8:	push   cs
  41bed9:	mov    esp,0xb03a30ce
  41bede:	std    
  41bedf:	inc    esi
  41bee0:	push   cs
  41bee1:	and    dl,BYTE PTR [eax+0x2d]
  41bee4:	les    edx,FWORD PTR [edi]
  41bee6:	xlat   BYTE PTR ds:[ebx]
  41bee7:	mov    ebx,0x2475e0b9
  41beec:	xor    DWORD PTR [ecx],0x63fc790
  41bef2:	shr    DWORD PTR [ebx],0xff
  41bef5:	jns    0x41bed0
  41bef7:	or     esi,DWORD PTR [esi-0x6d]
  41befa:	ins    BYTE PTR es:[edi],dx
  41befb:	cld    
  41befc:	mov    eax,ds:0xb814de6d
  41bf01:	jne    0x41beb0
  41bf03:	push   ebp
  41bf04:	stc    
  41bf05:	dec    edi
  41bf06:	aam    0xc7
  41bf08:	cli    
  41bf09:	fbstp  TBYTE PTR ds:0xae757d0c
  41bf0f:	mov    ebx,0x8f525f47
  41bf14:	repz shr BYTE PTR [ebx+0x5],0x5f
  41bf19:	dec    edx
  41bf1a:	repz adc eax,0x87f7b083
  41bf20:	ret    
  41bf21:	test   BYTE PTR [ecx+0x15ffc58c],0xaa
  41bf28:	es cmp al,0x86
  41bf2b:	sar    DWORD PTR [ebp+0x1d],cl
  41bf2e:	or     BYTE PTR [ebp+0x3e],cl
  41bf31:	adc    BYTE PTR [eax],cl
  41bf33:	in     al,dx
  41bf34:	nop
  41bf35:	repz es in al,0x59
  41bf39:	gs (bad) 
  41bf3b:	xchg   ecx,eax
  41bf3c:	push   esi
  41bf3d:	imul   ebx,esp,0xffffffb8
  41bf40:	retf   
  41bf41:	aaa    
  41bf42:	in     eax,0x94
  41bf44:	xor    ah,BYTE PTR [esi+0x493156c4]
  41bf4a:	shr    DWORD PTR ds:[ebx+0x618b9d10],cl
  41bf51:	jg     0x41bf3e
  41bf53:	ror    DWORD PTR [ebx+0x7f],1
  41bf56:	dec    edi
  41bf57:	inc    esp
  41bf58:	xchg   edi,eax
  41bf59:	sar    BYTE PTR [esi+0x7b],0x6
  41bf5d:	mov    eax,0xa75dbc6f
  41bf62:	ret    
  41bf63:	sub    edx,DWORD PTR [esi-0x2e]
  41bf66:	inc    ebx
  41bf67:	push   ebp
  41bf68:	mov    al,0x13
  41bf6a:	push   ecx
  41bf6b:	and    eax,0x7783e534
  41bf70:	add    DWORD PTR [esi+0x46],esi
  41bf73:	mov    eax,ds:0x53130dcf
  41bf78:	iret   
  41bf79:	add    dh,0xcd
  41bf7c:	out    0xbf,al
  41bf7e:	addr16 aam 0x50
  41bf81:	inc    esi
  41bf82:	out    0x85,eax
  41bf84:	sub    esp,esp
  41bf86:	sub    edx,esi
  41bf88:	or     ch,BYTE PTR [edi-0x7f]
  41bf8b:	lea    ebx,[ebp-0x7a]
  41bf8e:	and    eax,0x19859bc5
  41bf93:	(bad)  
  41bf94:	dec    ecx
  41bf95:	(bad)
  41bf98:	xor    edi,DWORD PTR [esi-0x3dc97807]
  41bf9e:	in     al,0xf7
  41bfa0:	adc    al,0xef
  41bfa2:	mov    cl,0x4a
  41bfa4:	ffreep st(0)
  41bfa6:	fsubr  QWORD PTR [ecx-0xdc7112f]
  41bfac:	add    BYTE PTR [esp+eiz*2+0x680853ed],ah
  41bfb3:	shr    DWORD PTR [ebx-0x5],1
  41bfb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfb7:	mov    ds:0xf5855e5e,eax
  41bfbc:	push   esi
  41bfbd:	addr16 mov ds:0xa045,al
  41bfc1:	aaa    
  41bfc2:	push   eax
  41bfc3:	stos   BYTE PTR es:[edi],al
  41bfc4:	addr16 cmp edi,ebp
  41bfc7:	(bad)  
  41bfc8:	sub    bl,ch
  41bfca:	or     edi,DWORD PTR [ecx+0x12]
  41bfcd:	xlat   BYTE PTR ds:[ebx]
  41bfce:	dec    esp
  41bfcf:	call   0xd0b2:0x31141a25
  41bfd6:	stc    
  41bfd7:	and    eax,0xe7e2c7f0
  41bfdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfdd:	inc    ebx
  41bfde:	imul   ebp,DWORD PTR [edx+edx*2-0xdbaa88c],0x67
  41bfe6:	dec    ecx
  41bfe7:	sub    edi,DWORD PTR [ebp-0x5fdbf1ce]
  41bfed:	sub    al,0x65
  41bfef:	in     al,dx
  41bff0:	push   edx
  41bff1:	out    0xde,eax
  41bff3:	aad    0x60
  41bff5:	aad    0xa
  41bff7:	rcr    DWORD PTR [ebx],1
  41bff9:	stos   DWORD PTR es:[edi],eax
  41bffa:	lock out 0xa0,al
  41bffd:	adc    DWORD PTR [esp+edi*4-0x1a869606],0x7cf5d76f
  41c008:	out    dx,al
  41c009:	mov    eax,0xd743b788
  41c00e:	or     ah,BYTE PTR [ebx+0x3a7d59b7]
  41c014:	sub    eax,0xcc5c884d
  41c019:	pop    esp
  41c01a:	int    0xc
  41c01c:	pop    edx
  41c01d:	push   ss
  41c01e:	fmul   st,st(7)
  41c020:	cmovo  ecx,esi
  41c023:	mov    esi,0xcfbadf74
  41c028:	stos   BYTE PTR es:[edi],al
  41c029:	jb     0x41c04a
  41c02b:	(bad)  
  41c02c:	shl    BYTE PTR [esi+0x33591813],0x39
  41c033:	sbb    al,0x4e
  41c035:	adc    ecx,eax
  41c037:	push   eax
  41c038:	mov    dl,0xcd
  41c03a:	scas   al,BYTE PTR es:[edi]
  41c03b:	jmp    0x41bfc7
  41c03d:	imul   ecx,DWORD PTR [ebp+ebp*8+0x60],0xffffffed
  41c042:	das    
  41c043:	mov    BYTE PTR [ebx],0xad
  41c046:	out    0x20,eax
  41c048:	(bad)  
  41c049:	in     al,dx
  41c04a:	xchg   esp,eax
  41c04b:	repz jl 0x41c096
  41c04e:	mov    cl,0x1
  41c050:	add    BYTE PTR [ebp-0xcdc9f1b],cl
  41c056:	sbb    eax,0xe0e01812
  41c05b:	imul   ecx,ecx,0xffffffa0
  41c05e:	std    
  41c05f:	test   esp,esp
  41c061:	sti    
  41c062:	imul   ebx,DWORD PTR [esp+esi*1+0x4b955192],0x4ab63b77
  41c06d:	inc    ecx
  41c06e:	rcl    BYTE PTR [edx-0x38],0x8
  41c072:	enter  0x96a4,0x83
  41c076:	dec    edx
  41c077:	mov    dh,0x6c
  41c079:	sbb    eax,0x977fa909
  41c07e:	outs   dx,BYTE PTR ds:[esi]
  41c07f:	ficom  DWORD PTR [esi+0x217d7049]
  41c085:	push   ss
  41c086:	loope  0x41c063
  41c088:	jne    0x41c062
  41c08a:	rol    BYTE PTR [ecx-0x76],1
  41c08d:	pop    ds
  41c08e:	pop    eax
  41c08f:	sub    bh,BYTE PTR [ebp-0x80]
  41c092:	jg     0x41c0c4
  41c094:	adc    al,0x47
  41c096:	fisub  DWORD PTR [edi+0x5c]
  41c099:	dec    edx
  41c09a:	aam    0x20
  41c09c:	add    DWORD PTR [esi+0x18617e8],0xffffffa6
  41c0a3:	stos   DWORD PTR es:[edi],eax
  41c0a4:	loopne 0x41c09b
  41c0a6:	pushf  
  41c0a7:	sti    
  41c0a8:	pop    ds
  41c0a9:	sbb    eax,0xb8f963aa
  41c0ae:	dec    ecx
  41c0af:	aaa    
  41c0b0:	xchg   esp,eax
  41c0b1:	test   eax,0x8bd52c0f
  41c0b6:	(bad)  
  41c0b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0b8:	sbb    BYTE PTR [ebx-0x6be54305],bh
  41c0be:	jb     0x41c125
  41c0c0:	and    bh,0x86
  41c0c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0c4:	(bad)  
  41c0c5:	pop    eax
  41c0c6:	jo     0x41c0cd
  41c0c8:	jmp    0xab7b:0x2f419812
  41c0cf:	xlat   BYTE PTR ds:[ebx]
  41c0d0:	sub    ecx,DWORD PTR [edi]
  41c0d2:	into   
  41c0d3:	ds in  al,0x87
  41c0d6:	lahf   
  41c0d7:	mov    BYTE PTR [edx],bl
  41c0d9:	sub    ah,BYTE PTR [ecx+0x24]
  41c0dc:	cs xchg esp,eax
  41c0de:	push   eax
  41c0e0:	inc    eax
  41c0e1:	je     0x41c0a1
  41c0e3:	xchg   DWORD PTR [edx],edi
  41c0e5:	adc    esi,0xffffff8e
  41c0e8:	stc    
  41c0e9:	pusha  
  41c0ea:	inc    esp
  41c0eb:	push   esp
  41c0ec:	fsub   DWORD PTR [ecx]
  41c0ee:	arpl   WORD PTR [ebx],bx
  41c0f0:	lahf   
  41c0f1:	adc    eax,0x8ef407a6
  41c0f6:	fistp  QWORD PTR [eax]
  41c0f8:	fs mov ecx,0xfca95cf2
  41c0fe:	call   0x9c91376e
  41c103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c104:	test   DWORD PTR [ecx-0x2dc638ed],ebp
  41c10a:	scas   al,BYTE PTR es:[edi]
  41c10b:	sti    
  41c10c:	mov    al,0x4
  41c10e:	rol    ch,0x92
  41c111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c112:	cmp    al,0x1d
  41c114:	or     al,0x4c
  41c116:	fs jmp 0x41c117
  41c119:	lds    eax,FWORD PTR [ebp+0x535862db]
  41c11f:	ret    
  41c120:	iret   
  41c121:	sub    DWORD PTR [ecx+0x6a],ebx
  41c124:	pop    esp
  41c125:	xor    ebp,ecx
  41c127:	jb     0x41c12c
  41c129:	mul    bh
  41c12b:	fwait
  41c12c:	pusha  
  41c12d:	jns    0x41c193
  41c12f:	mov    eax,ds:0x75506fe8
  41c134:	mov    eax,ds:0x1a6faac7
  41c139:	jg     0x41c13d
  41c13b:	jb     0x41c160
  41c13d:	jae    0x41c0db
  41c13f:	test   DWORD PTR ds:0xbd17662f,edi
  41c145:	pop    esi
  41c146:	or     al,0x7
  41c148:	addr16 mov ds:0x3a80,eax
  41c14c:	inc    ebx
  41c14d:	bnd call 0x793267c3
  41c153:	arpl   WORD PTR [ebp+edi*1+0x658722bd],di
  41c15a:	inc    ecx
  41c15b:	call   0xa151b9de
  41c160:	ja     0x41c18c
  41c162:	outs   dx,DWORD PTR ds:[esi]
  41c163:	ret    
  41c164:	popf   
  41c165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c166:	into   
  41c167:	push   edi
  41c168:	stos   DWORD PTR es:[edi],eax
  41c169:	and    al,0x84
  41c16b:	mov    eax,ss
  41c16d:	push   cs
  41c16e:	xchg   ebx,eax
  41c16f:	jmp    0x41c191
  41c171:	int    0xa8
  41c173:	mov    WORD PTR ds:0xbe558e2a,?
  41c179:	fs or  eax,0x97207a97
  41c17f:	mov    ebp,0x606659c5
  41c184:	pop    ebp
  41c185:	in     eax,0x45
  41c187:	int3   
  41c188:	and    DWORD PTR [ecx],edi
  41c18a:	mov    edi,0x468fa8b8
  41c18f:	cmp    ebx,DWORD PTR [ebp-0x55]
  41c192:	popa   
  41c193:	les    ebp,FWORD PTR ds:0x4c7fb04
  41c199:	adc    ah,al
  41c19b:	(bad)  
  41c19c:	sbb    BYTE PTR cs:[edx-0x34b8b7b8],dl
  41c1a3:	das    
  41c1a4:	mov    bl,BYTE PTR [ecx]
  41c1a6:	inc    ecx
  41c1a7:	push   cs
  41c1a8:	and    DWORD PTR [esi*1-0x37bee222],esi
  41c1af:	ficom  DWORD PTR [ecx+0x24]
  41c1b2:	pop    esp
  41c1b3:	mov    ebx,0xbf7dda87
  41c1b8:	xor    eax,0x1606b225
  41c1bd:	in     al,0xcd
  41c1bf:	mov    ah,0x49
  41c1c1:	sub    BYTE PTR [esi],dl
  41c1c3:	stos   BYTE PTR es:[edi],al
  41c1c4:	mov    dh,bh
  41c1c6:	push   ebp
  41c1c7:	push   es
  41c1c8:	(bad)  
  41c1c9:	add    al,0xbc
  41c1cb:	jno    0x41c160
  41c1cd:	pop    eax
  41c1ce:	in     al,0xc5
  41c1d0:	call   0x43ac:0x54eb5586
  41c1d7:	in     eax,0x4c
  41c1d9:	lds    esi,FWORD PTR [edx+eiz*1]
  41c1dc:	ins    DWORD PTR es:[edi],dx
  41c1dd:	(bad)  
  41c1de:	sbb    BYTE PTR [ecx-0x66],bh
  41c1e1:	test   DWORD PTR [edx],ebp
  41c1e3:	push   0x3950e96b
  41c1e8:	not    DWORD PTR [ebx]
  41c1ea:	xchg   BYTE PTR [esi],cl
  41c1ec:	fistp  WORD PTR [ecx-0x68a1f44f]
  41c1f2:	sub    ecx,esi
  41c1f4:	adc    eax,0x6552cab9
  41c1f9:	xor    al,0x54
  41c1fb:	rol    BYTE PTR [edi+0x4850529f],cl
  41c201:	add    DWORD PTR [ebx-0x5e],edx
  41c204:	fcom   QWORD PTR [ebp+edx*1-0x6427c2da]
  41c20b:	dec    ebx
  41c20c:	adc    eax,DWORD PTR cs:[ecx]
  41c20f:	inc    edi
  41c210:	(bad)  
  41c212:	sti    
  41c213:	mov    ecx,fs
  41c215:	(bad)  
  41c216:	rcl    DWORD PTR ds:0xd054059c,cl
  41c21c:	outs   dx,DWORD PTR ds:[esi]
  41c21d:	test   BYTE PTR [edi+ebp*8-0x37d2f921],dh
  41c224:	jb     0x41c232
  41c226:	mov    dl,0xf2
  41c228:	shr    ecx,0x2c
  41c22b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c22c:	retf   
  41c22d:	adc    al,0x78
  41c22f:	push   ebx
  41c230:	imul   esp,edi,0x32
  41c233:	repnz in al,dx
  41c235:	mov    ch,0xb5
  41c237:	xor    al,0x5f
  41c239:	dec    edx
  41c23a:	rol    DWORD PTR [eax+0x54322833],1
  41c240:	out    0x9c,al
  41c242:	ret    0x38a9
  41c245:	mov    cl,bh
  41c247:	jecxz  0x41c219
  41c249:	neg    BYTE PTR [ebx-0x26]
  41c24c:	jnp    0x41c2ae
  41c24e:	aas    
  41c24f:	shl    DWORD PTR [ebp+eiz*1+0x27],0x8b
  41c254:	sub    DWORD PTR [ecx],0x89d18806
  41c25a:	out    0x74,al
  41c25c:	lock sub BYTE PTR [ebx],cl
  41c25f:	pop    es
  41c260:	jns    0x41c235
  41c262:	loope  0x41c261
  41c264:	dec    ecx
  41c265:	xchg   edi,eax
  41c266:	xchg   esp,eax
  41c267:	fisubr WORD PTR [edi+0x4fdcf855]
  41c26d:	sub    ecx,esi
  41c26f:	test   eax,0x4bad40ba
  41c274:	and    ecx,DWORD PTR [edi-0x7436c93b]
  41c27a:	repnz es dec eax
  41c27d:	dec    esp
  41c27e:	jge    0x41c205
  41c280:	and    dl,BYTE PTR [ecx-0x68533e5]
  41c286:	cmp    al,0x72
  41c288:	hlt    
  41c289:	arpl   WORD PTR [ecx],ax
  41c28b:	repnz push ds
  41c28d:	std    
  41c28e:	sub    ebp,DWORD PTR [ebx]
  41c290:	ja     0x41c279
  41c292:	nop
  41c293:	mov    edx,DWORD PTR [esi]
  41c295:	(bad)  
  41c296:	xchg   BYTE PTR [eax-0x1a823757],al
  41c29c:	ret    
  41c29d:	fdiv   st,st(5)
  41c29f:	xchg   ecx,eax
  41c2a0:	popa   
  41c2a1:	test   BYTE PTR [ebx],0x5e
  41c2a4:	ins    DWORD PTR es:[edi],dx
  41c2a5:	mov    BYTE PTR [esi+0x1c021697],bh
  41c2ab:	xchg   esi,eax
  41c2ac:	push   esi
  41c2ad:	loope  0x41c2f1
  41c2af:	(bad)  
  41c2b0:	fldcw  WORD PTR ds:0xaf1a7823
  41c2b6:	jbe    0x41c272
  41c2b8:	inc    esp
  41c2b9:	fsubr  DWORD PTR [edx-0x3d2992ec]
  41c2bf:	xchg   ebx,eax
  41c2c0:	into   
  41c2c1:	adc    eax,DWORD PTR [ebp-0x44]
  41c2c4:	mov    al,0x7e
  41c2c6:	sub    edx,ebx
  41c2c8:	xchg   ebx,eax
  41c2ca:	jno    0x41c30d
  41c2cc:	dec    eax
  41c2cd:	push   0xffffffe8
  41c2cf:	pminub mm2,mm1
  41c2d2:	out    0xd6,al
  41c2d4:	jbe    0x41c29e
  41c2d6:	cli    
  41c2d7:	ja     0x41c33b
  41c2d9:	ss or  edx,edx
  41c2dc:	and    BYTE PTR [ebx-0x14609678],bh
  41c2e2:	retf   
  41c2e3:	stc    
  41c2e4:	xor    DWORD PTR [edi+edi*1-0x29],esp
  41c2e8:	sbb    edx,ebp
  41c2ea:	jbe    0x41c341
  41c2ec:	shl    DWORD PTR [edx-0x6c626a51],cl
  41c2f2:	es repz retf 0xb4ca
  41c2f7:	xacquire xchg BYTE PTR [ebx],bh
  41c2fa:	lods   al,BYTE PTR ds:[esi]
  41c2fb:	cwde   
  41c2fc:	iret   
  41c2fd:	ds ins DWORD PTR es:[edi],dx
  41c2ff:	sti    
  41c300:	les    ebx,FWORD PTR [esi+0x58]
  41c303:	imul   ebp,DWORD PTR [ecx+0x4b202988],0x23
  41c30a:	mov    ss,eax
  41c30c:	pop    ss
  41c30d:	jmp    0x41c372
  41c30f:	bound  esi,QWORD PTR ds:0xda0c5b20
  41c315:	and    BYTE PTR [ebx-0x174f1ace],cl
  41c31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c31c:	rcl    BYTE PTR [edi+0x61367963],1
  41c322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c323:	mov    cl,0xf1
  41c325:	sbb    ch,BYTE PTR [ecx]
  41c327:	ins    BYTE PTR es:[edi],dx
  41c328:	stos   BYTE PTR es:[edi],al
  41c329:	mov    ah,0xa1
  41c32b:	mov    eax,0xaf1e9d64
  41c330:	out    dx,eax
  41c331:	and    DWORD PTR [ebp+ebp*8+0x16],0x9f73562f
  41c339:	ret    0x973e
  41c33c:	(bad)  
  41c33d:	in     eax,0x7b
  41c33f:	sub    edi,edi
  41c341:	xchg   DWORD PTR [esi],esp
  41c343:	stos   DWORD PTR es:[edi],eax
  41c344:	lock int3 
  41c346:	jo     0x41c331
  41c348:	ins    BYTE PTR es:[edi],dx
  41c349:	mov    dl,BYTE PTR [esi+0x11c82de0]
  41c34f:	ss nop
  41c351:	pop    ds
  41c352:	inc    edi
  41c353:	sbb    BYTE PTR es:[ebp-0x7b6ceb0f],bh
  41c35a:	sbb    ah,BYTE PTR [ecx+0x36]
  41c35d:	imul   eax,DWORD PTR [ebx],0x23
  41c360:	push   ebp
  41c361:	pop    esp
  41c362:	mov    eax,0x21eb183b
  41c367:	out    dx,eax
  41c368:	enter  0x2582,0x1d
  41c36c:	push   ecx
  41c36d:	xchg   esp,eax
  41c36e:	or     ecx,DWORD PTR [esp+esi*1+0x58]
  41c372:	adc    BYTE PTR [edi+0x75],ah
  41c375:	outs   dx,DWORD PTR ds:[esi]
  41c376:	(bad)  
  41c377:	sub    BYTE PTR [ebx-0x3f758ca3],al
  41c37d:	loopne 0x41c357
  41c37f:	dec    esi
  41c380:	adc    DWORD PTR [esi+0x2a476b7e],0x9b7bddd2
  41c38a:	rep lods eax,DWORD PTR ds:[esi]
  41c38c:	push   esi
  41c38d:	or     cl,BYTE PTR [edi]
  41c38f:	ins    DWORD PTR es:[edi],dx
  41c390:	push   ebx
  41c391:	test   DWORD PTR [edx+0x6170bc87],ebp
  41c397:	jne    0x41c3ff
  41c399:	adc    al,dh
  41c39b:	jecxz  0x41c384
  41c39d:	adc    BYTE PTR [edi],dh
  41c39f:	clc    
  41c3a0:	popf   
  41c3a1:	fild   DWORD PTR ds:0xf7e58211
  41c3a7:	cmp    eax,0x5904e9d4
  41c3ac:	mov    ds:0xa8fef70d,al
  41c3b1:	and    eax,0x12ebb876
  41c3b6:	shl    ah,0x34
  41c3b9:	push   ebp
  41c3ba:	xor    eax,0xa78d8c36
  41c3bf:	cmp    cl,dh
  41c3c1:	imul   eax,DWORD PTR [esi-0x1439c18d],0xffffffc9
  41c3c8:	ins    BYTE PTR es:[edi],dx
  41c3c9:	bound  edi,QWORD PTR [edx-0x13]
  41c3cc:	mul    BYTE PTR [ebp+0x1f4c1b19]
  41c3d2:	scas   al,BYTE PTR es:[edi]
  41c3d3:	ds popf 
  41c3d5:	test   BYTE PTR ds:0xd7222fba,bl
  41c3db:	xlat   BYTE PTR ds:[ebx]
  41c3dc:	cmp    BYTE PTR [ebx-0x77],dl
  41c3df:	adc    DWORD PTR [esi],eax
  41c3e1:	jle    0x41c37b
  41c3e3:	adc    edi,DWORD PTR [esi]
  41c3e5:	dec    ebx
  41c3e7:	xchg   ebp,eax
  41c3e8:	fstp   QWORD PTR [ebx+edi*2]
  41c3eb:	aas    
  41c3ec:	xor    esi,eax
  41c3ee:	sub    eax,ebx
  41c3f0:	mov    ebp,0x5a7b0c64
  41c3f5:	xor    BYTE PTR [ebp+esi*8-0x6da24a09],cl
  41c3fc:	(bad)  
  41c3fd:	pushf  
  41c3fe:	jo     0x41c466
  41c400:	sub    BYTE PTR [ecx-0x1c],al
  41c403:	push   esi
  41c404:	mov    al,0x51
  41c406:	fisttp QWORD PTR [ebx-0x601f726c]
  41c40c:	or     DWORD PTR [esi],esp
  41c40e:	lahf   
  41c40f:	clc    
  41c410:	add    eax,0xf7a139b8
  41c415:	ret    0x42cf
  41c418:	stos   BYTE PTR es:[edi],al
  41c419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c41a:	xchg   esp,eax
  41c41b:	cmp    dh,dh
  41c41d:	pop    ebx
  41c41e:	mov    al,0x5f
  41c420:	pop    es
  41c421:	inc    ecx
  41c422:	(bad)  
  41c423:	fsubp  st(2),st
  41c425:	jl     0x41c3d7
  41c427:	xor    DWORD PTR [eax+0x46ba5e9e],esi
  41c42d:	xchg   esi,eax
  41c42e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c42f:	and    cl,BYTE PTR [edx]
  41c431:	xchg   BYTE PTR [esi+0x16],ah
  41c434:	das    
  41c435:	cdq    
  41c436:	das    
  41c437:	retf   
  41c438:	mov    eax,ds:0x6e1849f4
  41c43d:	adc    eax,0x96b4f57b
  41c442:	sub    ebp,edx
  41c444:	sbb    eax,0xf11af637
  41c449:	sbb    BYTE PTR [esp+eiz*4],ah
  41c44c:	sub    eax,0x1d58565d
  41c451:	xchg   edx,ecx
  41c453:	mov    dh,0x2a
  41c455:	lods   al,BYTE PTR ds:[esi]
  41c456:	add    BYTE PTR [edi-0x37],dl
  41c459:	push   esi
  41c45a:	hlt    
  41c45b:	push   edi
  41c45c:	mov    bl,0x9b
  41c45e:	dec    esp
  41c45f:	xor    DWORD PTR [esi+eax*2-0x15],edx
  41c463:	adc    eax,0x96cb30eb
  41c468:	or     al,ah
  41c46a:	cmp    al,ah
  41c46c:	dec    esi
  41c46d:	sub    al,0x27
  41c46f:	(bad)  
  41c470:	cld    
  41c471:	in     eax,0x51
  41c473:	repz cmp al,0xe
  41c476:	pop    edx
  41c477:	cmp    dl,ch
  41c479:	aas    
  41c47a:	or     DWORD PTR [ecx+0x387f1e55],edx
  41c480:	(bad)  
  41c481:	adc    bl,bl
  41c483:	inc    esp
  41c484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c485:	(bad)  
  41c486:	icebp  
  41c487:	or     DWORD PTR [edi+0x38],0xffffffa5
  41c48b:	call   0x9f38:0xbc4d3f53
  41c492:	mov    ah,0x9f
  41c494:	mov    edx,0xddbcb085
  41c499:	sti    
  41c49a:	in     eax,0x97
  41c49c:	test   DWORD PTR [esi-0x2b8e97eb],ebp
  41c4a2:	test   ecx,esp
  41c4a4:	add    dh,bl
  41c4a6:	sub    BYTE PTR [ebx-0x21957dab],0x8f
  41c4ad:	mov    bh,0x76
  41c4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4b0:	ret    
  41c4b1:	lea    edx,[edi]
  41c4b3:	mov    edx,0xf3e44fca
  41c4b8:	cmp    esp,DWORD PTR [edx-0x518cec64]
  41c4be:	jnp    0x41c486
  41c4c0:	jmp    0x30d3:0xb33d9631
  41c4c7:	and    edi,ebp
  41c4c9:	cwde   
  41c4ca:	out    dx,eax
  41c4cb:	cmc    
  41c4cc:	xchg   dl,ah
  41c4ce:	adc    al,0x2d
  41c4d0:	aaa    
  41c4d1:	sbb    al,0x87
  41c4d3:	jb     0x41c53e
  41c4d5:	xchg   ecx,eax
  41c4d6:	sti    
  41c4d7:	retf   
  41c4d8:	and    ebp,DWORD PTR fs:0x42e1335e
  41c4df:	mov    ebx,0x6a3cc319
  41c4e4:	pxor   mm7,mm3
  41c4e7:	fstp   DWORD PTR [esi+0x40a3f6e7]
  41c4ed:	jl     0x41c49b
  41c4ef:	mov    ebx,0x1b0a3da6
  41c4f4:	imul   eax,DWORD PTR [edi+eax*1+0x75351aeb],0x28
  41c4fc:	mov    gs,edi
  41c4fe:	inc    edx
  41c4ff:	jle    0x41c4c5
  41c501:	(bad)  
  41c503:	dec    edi
  41c504:	repz test edi,0x7fe479c8
  41c50b:	xchg   esi,eax
  41c50c:	add    BYTE PTR [edx],cl
  41c50e:	fdivr  DWORD PTR [edi+ebp*4+0x2a3cbb5d]
  41c515:	mov    dl,0xa8
  41c517:	inc    esi
  41c518:	mov    ah,0x8a
  41c51a:	dec    edi
  41c51b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c51c:	ret    0xe46f
  41c51f:	fsubp  st(7),st
  41c521:	jge    0x41c560
  41c523:	shl    DWORD PTR ds:0xebe9f1a2,cl
  41c529:	inc    ecx
  41c52a:	je     0x41c59d
  41c52c:	shl    BYTE PTR [esi+0x2fedda0],0x99
  41c533:	push   ds
  41c534:	nop
  41c535:	jmp    0x41c523
  41c537:	mov    al,0xab
  41c539:	add    edx,esi
  41c53b:	aas    
  41c53c:	imul   ebx,DWORD PTR [eax+0x37e0e87c],0x4b
  41c543:	pop    edx
  41c544:	(bad)  
  41c546:	adc    BYTE PTR [ebx],0x70
  41c549:	jecxz  0x41c51e
  41c54b:	jne    0x41c538
  41c54d:	addr16 adc al,0xe1
  41c550:	adc    al,0xd
  41c552:	in     eax,dx
  41c553:	retf   
  41c554:	mov    esi,0xc4d34f71
  41c559:	int    0xbd
  41c55b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c55c:	aam    0x65
  41c55e:	loop   0x41c57a
  41c560:	test   DWORD PTR cs:0xec6222db,0x6e463387
  41c56b:	push   ecx
  41c56c:	dec    esi
  41c56d:	sbb    eax,0xd8b4aa55
  41c572:	push   0x19
  41c574:	jmp    0xb2f6:0x518af46e
  41c57b:	scas   eax,DWORD PTR es:[edi]
  41c57c:	and    ebx,DWORD PTR [eax+0x6ce6824a]
  41c582:	mov    gs,eax
  41c584:	mov    dl,0xe7
  41c586:	popf   
  41c587:	adc    eax,0x519488a0
  41c58c:	add    DWORD PTR [edx-0x5a],0x5d2ba4b2
  41c593:	jo     0x41c5f0
  41c595:	bound  ebp,QWORD PTR [eax+edx*1]
  41c598:	jbe    0x41c5a3
  41c59a:	push   DWORD PTR [edx+0x48]
  41c59d:	sbb    ecx,edx
  41c59f:	inc    esp
  41c5a0:	mov    ah,0xa4
  41c5a2:	xchg   ebp,eax
  41c5a3:	adc    DWORD PTR [ecx],ecx
  41c5a5:	push   esi
  41c5a6:	pusha  
  41c5a7:	or     ah,ah
  41c5a9:	cld    
  41c5aa:	js     0x41c579
  41c5ac:	and    esp,DWORD PTR [ecx+ecx*4]
  41c5af:	not    ebx
  41c5b1:	jg     0x41c59e
  41c5b3:	repz fistp WORD PTR [ebx+0x7e8f8cdd]
  41c5ba:	iret   
  41c5bb:	stos   DWORD PTR es:[edi],eax
  41c5bc:	dec    edx
  41c5bd:	pop    ebp
  41c5be:	mov    ?,WORD PTR [ebx-0x7437b8c3]
  41c5c4:	sub    BYTE PTR [edi+0x7117ed5c],ch
  41c5ca:	mov    ebx,0x10b33d89
  41c5cf:	(bad)  [ecx-0x10b0f3db]
  41c5d6:	popa   
  41c5d7:	add    eax,0x5d680d31
  41c5dc:	push   0xa16837f7
  41c5e1:	lods   eax,DWORD PTR ds:[esi]
  41c5e2:	in     al,0x9e
  41c5e4:	push   0x138361ee
  41c5e9:	jecxz  0x41c607
  41c5eb:	xchg   edi,eax
  41c5ec:	jns    0x41c610
  41c5ee:	loope  0x41c57f
  41c5f0:	dec    ecx
  41c5f1:	fistp  WORD PTR [ecx+0x749f9cb9]
  41c5f7:	mov    WORD PTR [eax],fs
  41c5f9:	rol    BYTE PTR [ebx-0x26291e4b],cl
  41c5ff:	int3   
  41c600:	mov    ds:0x4f6a451,al
  41c605:	dec    esi
  41c606:	jmp    0x41c685
  41c608:	lahf   
  41c609:	mov    ah,ch
  41c60b:	test   DWORD PTR [ebx],esp
  41c60d:	jg     0x41c61f
  41c60f:	inc    edx
  41c610:	jnp    0x41c666
  41c612:	fmul   DWORD PTR [esi+0x60]
  41c615:	js     0x41c5c4
  41c617:	mov    ds:0xadf9a9f4,al
  41c61c:	aam    0x66
  41c61e:	ds pop esp
  41c620:	and    al,BYTE PTR [edx+0x51]
  41c623:	icebp  
  41c624:	repnz cmc 
  41c626:	jbe    0x41c5c8
  41c628:	ins    BYTE PTR es:[edi],dx
  41c629:	fisubr WORD PTR [edi-0x40]
  41c62c:	mov    eax,0xc3bc0be7
  41c631:	or     BYTE PTR [ebx-0x4],0x4b
  41c635:	mov    ds:0xd1ede8b8,eax
  41c63a:	stos   BYTE PTR es:[edi],al
  41c63b:	data16 je 0x41c694
  41c63e:	xor    ecx,ecx
  41c640:	inc    ebx
  41c641:	jbe    0x41c630
  41c643:	sti    
  41c644:	mov    eax,DWORD PTR [eax]
  41c646:	push   cs
  41c647:	sub    al,0x56
  41c649:	push   edi
  41c64a:	jmp    0x41c5e4
  41c64c:	xchg   ecx,eax
  41c64d:	into   
  41c64e:	xchg   edx,eax
  41c64f:	and    edx,DWORD PTR [ebx-0x546f396c]
  41c655:	mov    cl,0xba
  41c657:	iret   
  41c658:	dec    eax
  41c659:	add    DWORD PTR [edi+0x38],0xedbb97c6
  41c660:	cmc    
  41c661:	cmc    
  41c662:	push   ds
  41c663:	stos   DWORD PTR es:[edi],eax
  41c664:	and    eax,0x7e9be365
  41c669:	test   al,0xdf
  41c66b:	(bad)  
  41c66c:	pop    esi
  41c66d:	mov    ebx,0xc1e01d33
  41c672:	dec    esp
  41c673:	inc    edi
  41c674:	cwde   
  41c675:	jge    0x41c5fb
  41c677:	adc    ebp,DWORD PTR [ecx+edi*4]
  41c67a:	stos   DWORD PTR es:[edi],eax
  41c67b:	jg     0x41c5fe
  41c67d:	cdq    
  41c67e:	sbb    dh,BYTE PTR [ebx]
  41c680:	pop    eax
  41c681:	sub    al,0x63
  41c683:	fwait
  41c684:	scas   eax,DWORD PTR es:[edi]
  41c685:	sahf   
  41c686:	or     DWORD PTR [ecx-0x5c],ecx
  41c689:	out    0xfc,eax
  41c68b:	ret    
  41c68c:	inc    esi
  41c68d:	fldenv [ebx]
  41c68f:	jae    0x41c6e5
  41c691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c692:	mov    al,0x13
  41c694:	std    
  41c695:	jg     0x41c6aa
  41c697:	and    esi,ebx
  41c699:	xchg   DWORD PTR [eax+0x10],ecx
  41c69c:	fcmovbe st,st(1)
  41c69e:	and    al,0x5c
  41c6a0:	in     eax,0x14
  41c6a2:	pop    edi
  41c6a3:	cmp    DWORD PTR [ebp+0x14],esp
  41c6a6:	cs scas al,BYTE PTR es:[edi]
  41c6a8:	sub    al,0xb7
  41c6aa:	lea    ecx,[ecx-0x50d7c321]
  41c6b0:	push   ds
  41c6b1:	jp     0x41c65a
  41c6b3:	xchg   DWORD PTR [esi+ebp*4],ecx
  41c6b6:	xchg   DWORD PTR [ebp+0x2b],ecx
  41c6b9:	fcom   DWORD PTR [eax+0x7b]
  41c6bc:	mov    edi,0x1ff6b4b6
  41c6c1:	push   cs
  41c6c2:	sbb    dh,0xa5
  41c6c5:	cmp    eax,0x19b90316
  41c6ca:	sub    al,0xfc
  41c6cc:	les    esp,FWORD PTR [ebx]
  41c6ce:	int3   
  41c6cf:	test   al,0x67
  41c6d1:	js     0x41c746
  41c6d3:	call   0x5833:0xbe840e30
  41c6da:	mov    DWORD PTR [eax],ebx
  41c6dc:	ret    
  41c6dd:	adc    BYTE PTR [esp+edx*4-0x16334c72],ah
  41c6e4:	shl    BYTE PTR [eax+ecx*1+0x4fecacb0],0xf9
  41c6ec:	stos   BYTE PTR es:[edi],al
  41c6ed:	push   ds
  41c6ee:	ins    BYTE PTR es:[edi],dx
  41c6ef:	ja     0x41c76e
  41c6f1:	push   ebx
  41c6f2:	cld    
  41c6f3:	mov    edi,0x53e98a7e
  41c6f8:	ret    
  41c6f9:	daa    
  41c6fa:	push   0x70
  41c6fc:	sub    al,0x33
  41c6fe:	xchg   edx,eax
  41c6ff:	fnstenv [esp+eiz*4-0x6b]
  41c703:	retf   0xeadb
  41c706:	dec    ebp
  41c707:	adc    al,0xb5
  41c709:	xchg   ebx,eax
  41c70a:	mul    DWORD PTR [esi-0x79ca77f4]
  41c710:	dec    DWORD PTR [ebx-0x65b49612]
  41c716:	push   esp
  41c717:	mov    bh,cl
  41c719:	push   ebp
  41c71a:	cwde   
  41c71b:	xlat   BYTE PTR ds:[ebx]
  41c71c:	and    DWORD PTR [eax],ebp
  41c71e:	fcomp  st(4)
  41c720:	(bad)  
  41c721:	fadd   st(1),st
  41c723:	add    BYTE PTR [ebp+ecx*2-0x4e6f4b8f],ch
  41c72a:	cli    
  41c72b:	push   edx
  41c72c:	(bad)  
  41c72e:	sub    cl,BYTE PTR [eax-0x54918887]
  41c734:	(bad)  
  41c735:	daa    
  41c736:	adc    BYTE PTR [edx+edx*8],cl
  41c739:	(bad)  
  41c73a:	iret   
  41c73b:	(bad)  
  41c73c:	cdq    
  41c73d:	cld    
  41c73e:	xor    dl,BYTE PTR [edi+0x246007ba]
  41c744:	add    al,0xd0
  41c746:	adc    dl,ah
  41c748:	hlt    
  41c749:	xchg   esp,eax
  41c74a:	fist   WORD PTR [eax-0xd]
  41c74d:	push   ecx
  41c74e:	aaa    
  41c74f:	les    esi,FWORD PTR [ecx]
  41c751:	or     cl,BYTE PTR [eax-0x22]
  41c754:	(bad)  
  41c755:	(bad)  [edi-0x2dd08d48]
  41c75b:	and    BYTE PTR [edi],0xe5
  41c75e:	imul   ebx,edx,0xb7b0b0ab
  41c764:	sbb    ecx,edx
  41c766:	jae    0x41c706
  41c768:	dec    ebp
  41c769:	and    DWORD PTR [ebx-0x39],ebp
  41c76c:	sbb    eax,0x91a2b167
  41c771:	lahf   
  41c772:	or     al,0x82
  41c774:	dec    esp
  41c775:	call   0x19e6:0x4dec9c1e
  41c77c:	cmp    al,0x84
  41c77e:	aad    0x7e
  41c780:	nop
  41c781:	cmc    
  41c782:	jecxz  0x41c7e7
  41c784:	inc    edx
  41c785:	ins    BYTE PTR es:[edi],dx
  41c786:	out    0x57,al
  41c788:	mov    ebp,0x39a92913
  41c78d:	into   
  41c78e:	sub    DWORD PTR [ebp-0x45],ecx
  41c791:	ins    DWORD PTR es:[edi],dx
  41c792:	scas   al,BYTE PTR es:[edi]
  41c793:	imul   cx,WORD PTR ss:[esi],0x65
  41c798:	int3   
  41c799:	imul   ecx,esi,0xfffffff0
  41c79c:	adc    DWORD PTR [edi-0x38b1ee1f],esp
  41c7a2:	fucom  st(0)
  41c7a4:	jnp    0x41c76b
  41c7a6:	sub    al,0xc4
  41c7a8:	sbb    eax,0x3da64c54
  41c7ad:	ror    DWORD PTR [esi],1
  41c7af:	pop    ss
  41c7b0:	xor    edi,DWORD PTR [edi-0x66]
  41c7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7b4:	js     0x41c770
  41c7b6:	jne    0x41c7f1
  41c7b8:	out    dx,al
  41c7b9:	imul   eax,ecx,0x188cd9da
  41c7bf:	test   eax,0x4e700a02
  41c7c4:	das    
  41c7c5:	call   0x3d316563
  41c7ca:	jge    0x41c7ca
  41c7cc:	add    BYTE PTR [ecx+0x2],dl
  41c7cf:	aad    0x5c
  41c7d1:	inc    ebx
  41c7d2:	xchg   edi,eax
  41c7d3:	adc    ebx,DWORD PTR [ebx]
  41c7d5:	out    0xf0,eax
  41c7d7:	push   eax
  41c7d8:	jns    0x41c809
  41c7da:	outs   dx,BYTE PTR ds:[esi]
  41c7db:	sahf   
  41c7dc:	cmc    
  41c7dd:	cdq    
  41c7de:	(bad)  
  41c7df:	push   eax
  41c7e0:	stos   DWORD PTR es:[edi],eax
  41c7e1:	xchg   esp,eax
  41c7e2:	cli    
  41c7e3:	xchg   edi,eax
  41c7e4:	test   al,0x2a
  41c7e6:	xor    DWORD PTR [ebx+edx*8-0xd],0xffffffe1
  41c7eb:	pop    ss
  41c7ec:	sbb    ebx,esi
  41c7ee:	div    BYTE PTR [edi-0x54d7ac9d]
  41c7f4:	out    dx,eax
  41c7f5:	and    DWORD PTR [edi-0x3c],0x4d910c94
  41c7fc:	adc    edi,edx
  41c7fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c800:	cmp    al,0xdb
  41c802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c803:	lods   eax,DWORD PTR ds:[esi]
  41c804:	and    esp,DWORD PTR [edi]
  41c806:	(bad)  
  41c807:	and    ch,BYTE PTR ds:0xb846aeb1
  41c80d:	push   cs
  41c80e:	in     al,0x27
  41c810:	add    al,BYTE PTR [ecx-0x15ecd5a]
  41c816:	inc    esp
  41c817:	jmp    0x43c04d9b
  41c81c:	fdiv   QWORD PTR [edi+0x3e89a10c]
  41c822:	ss loop 0x41c87c
  41c825:	jg     0x41c7aa
  41c827:	fdivr  DWORD PTR [ecx-0x58153f46]
  41c82d:	jne    0x41c801
  41c82f:	push   ebx
  41c830:	scas   eax,DWORD PTR es:[edi]
  41c831:	mov    ah,0x59
  41c833:	neg    DWORD PTR [ebx+0x67]
  41c836:	adc    ebx,esi
  41c838:	dec    edx
  41c839:	mov    eax,ds:0xe48a06db
  41c83e:	idiv   DWORD PTR [esi+0x78]
  41c841:	cmp    al,0xb6
  41c843:	push   edx
  41c844:	inc    esp
  41c845:	int3   
  41c846:	xor    eax,0xa7c6c2da
  41c84b:	aad    0x2f
  41c84d:	shr    DWORD PTR [eax-0x7e],0xca
  41c851:	stos   BYTE PTR es:[edi],al
  41c852:	les    eax,FWORD PTR [eax]
  41c854:	sbb    BYTE PTR [ecx],ch
  41c856:	shl    DWORD PTR [eax-0x1a],0x19
  41c85a:	dec    esi
  41c85b:	jns    0x41c88c
  41c85d:	pusha  
  41c85e:	sti    
  41c85f:	and    al,0xc9
  41c861:	add    BYTE PTR [esi+0x47],cl
  41c864:	xor    eax,DWORD PTR [ebx+eax*2]
  41c867:	sbb    eax,0xb6455903
  41c86c:	push   es
  41c86d:	daa    
  41c86e:	and    eax,DWORD PTR [ebp-0x2d]
  41c871:	add    eax,0xf10f3915
  41c876:	or     bh,BYTE PTR ds:0xb95cbcd5
  41c87c:	and    eax,0x21a0347d
  41c881:	add    al,0x93
  41c883:	outs   dx,DWORD PTR ds:[esi]
  41c884:	test   al,0x83
  41c886:	sub    BYTE PTR [edi+0x6],bh
  41c889:	loopne 0x41c8b4
  41c88b:	sub    dh,bl
  41c88d:	cdq    
  41c88e:	ror    BYTE PTR [edi],1
  41c890:	leave  
  41c891:	push   0xffffffc0
  41c893:	and    BYTE PTR [ecx],dh
  41c895:	dec    ebx
  41c896:	dec    edi
  41c897:	jl     0x41c8ce
  41c899:	in     eax,0xe8
  41c89b:	repz mov ah,0xb0
  41c89e:	jnp    0x41c837
  41c8a0:	(bad)  
  41c8a1:	mov    eax,ds:0x76e7acfd
  41c8a6:	fisubr WORD PTR [edi+0x23]
  41c8a9:	or     al,0xa6
  41c8ab:	pop    esp
  41c8ac:	and    al,0xc5
  41c8ae:	mov    ah,BYTE PTR [edi+esi*8+0x29]
  41c8b2:	and    DWORD PTR [esi],ecx
  41c8b4:	lods   al,BYTE PTR ds:[esi]
  41c8b5:	je     0x41c8e9
  41c8b7:	xlat   BYTE PTR ds:[ebx]
  41c8b8:	and    DWORD PTR [ecx-0x26],ebp
  41c8bb:	xor    eax,0x35b9803c
  41c8c0:	imul   ecx,DWORD PTR [ebp-0x1f4846c6],0x56
  41c8c7:	mov    al,ds:0x69663a34
  41c8cc:	and    cl,BYTE PTR [ebx+0x68]
  41c8cf:	mov    bl,0x26
  41c8d1:	jnp    0x41c89e
  41c8d3:	ja     0x41c93f
  41c8d5:	sbb    eax,0x447ff4d0
  41c8da:	push   eax
  41c8db:	add    bh,bh
  41c8dd:	xor    BYTE PTR [eax-0x58],ah
  41c8e0:	adc    al,0xe4
  41c8e2:	inc    ebp
  41c8e3:	inc    edi
  41c8e4:	xchg   ebp,eax
  41c8e5:	mov    bh,0x5d
  41c8e7:	(bad)  
  41c8e8:	repz sbb edx,DWORD PTR [edi-0x40]
  41c8ec:	mov    eax,0x4f7b6943
  41c8f1:	jmp    0xab3928dc
  41c8f6:	(bad)  
  41c8f7:	imul   BYTE PTR [edi+eiz*4+0x5d]
  41c8fb:	jl     0x41c8d2
  41c8fd:	leave  
  41c8fe:	nop
  41c8ff:	fnsave [esi-0xe]
  41c902:	ins    DWORD PTR es:[edi],dx
  41c903:	imul   ebp,DWORD PTR [ecx-0x51],0x2e77809b
  41c90a:	call   0x31424e3f
  41c90f:	in     eax,0x86
  41c911:	push   0xffffff8c
  41c913:	push   ebp
  41c914:	hlt    
  41c915:	stos   BYTE PTR es:[edi],al
  41c916:	in     al,0x92
  41c918:	mov    ds:0xbc46b4d6,eax
  41c91d:	inc    BYTE PTR [edx]
  41c91f:	(bad)  
  41c920:	dec    esp
  41c921:	fld    TBYTE PTR [eax]
  41c923:	sub    ebx,DWORD PTR [esi]
  41c925:	loop   0x41c96a
  41c927:	dec    eax
  41c928:	int    0x68
  41c92a:	daa    
  41c92b:	idiv   DWORD PTR [edi-0x3b]
  41c92e:	xor    esi,eax
  41c930:	xchg   ebx,eax
  41c931:	adc    al,0xe8
  41c933:	lods   al,BYTE PTR ds:[esi]
  41c934:	retf   0x723e
  41c937:	inc    esp
  41c938:	repz loop 0x41c8e9
  41c93b:	cs push ss
  41c93d:	or     ebp,esi
  41c93f:	pop    ecx
  41c940:	xchg   ebx,eax
  41c941:	cmp    eax,0xbd271e98
  41c946:	mov    ebp,0x2bb0e9be
  41c94b:	sbb    eax,0xebdf4107
  41c950:	pop    ebx
  41c951:	and    esi,esi
  41c953:	loop   0x41c8ff
  41c955:	jle    0x41c929
  41c957:	dec    ebp
  41c958:	add    edi,DWORD PTR [esp+ebx*8]
  41c95b:	call   0x26ae:0x78c5
  41c961:	sub    eax,0xac0bc60
  41c966:	fistp  QWORD PTR [edx]
  41c968:	mov    bl,0xfd
  41c96a:	retf   0x18f8
  41c96d:	mov    ah,0x4b
  41c96f:	imul   esp,DWORD PTR [edx],0xd1714e63
  41c975:	xor    DWORD PTR [ecx-0x189a8b9],eax
  41c97b:	sar    DWORD PTR [ebx+0x588ca162],0x80
  41c982:	pusha  
  41c983:	test   eax,0xa6ef428d
  41c988:	hlt    
  41c989:	and    al,0x8
  41c98b:	and    al,0x90
  41c98d:	jno    0x41c9f4
  41c98f:	sub    cl,cl
  41c991:	(bad)  
  41c992:	jmp    0x41ca0e
  41c994:	call   0x3634:0xa3fc873d
  41c99b:	xchg   edi,eax
  41c99c:	jp     0x41c9a2
  41c99e:	inc    edi
  41c99f:	sub    edi,ebx
  41c9a1:	retf   
  41c9a2:	les    ebp,FWORD PTR [ebp+0x20]
  41c9a5:	sub    eax,0x617eeed8
  41c9aa:	mov    ebx,edx
  41c9ac:	mov    WORD PTR [bp+di+0x397],ds
  41c9b1:	std    
  41c9b2:	xchg   ecx,ecx
  41c9b4:	dec    eax
  41c9b5:	xor    DWORD PTR [ebx+0x53],eax
  41c9b8:	ins    DWORD PTR es:[edi],dx
  41c9b9:	xchg   DWORD PTR [edx],ebp
  41c9bb:	call   0x36fe:0x7e62946d
  41c9c2:	mov    esp,0xbd154703
  41c9c7:	mov    edi,0xfb4dd740
  41c9cc:	mov    ds:0x2dd952fd,al
  41c9d1:	and    edi,DWORD PTR [ecx+0x922e7c7]
  41c9d7:	or     eax,edx
  41c9d9:	pusha  
  41c9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9db:	div    BYTE PTR fs:[edi-0x1a]
  41c9df:	dec    eax
  41c9e0:	sub    eax,0x1996a319
  41c9e5:	add    al,0xdd
  41c9e7:	cmp    ah,al
  41c9e9:	dec    edi
  41c9ea:	mov    ah,dh
  41c9ec:	cs dec ecx
  41c9ee:	mov    dh,0x2f
  41c9f0:	or     cl,bl
  41c9f2:	jmp    0x41c981
  41c9f4:	retf   
  41c9f5:	cmp    BYTE PTR [esi+0x6579e4ee],cl
  41c9fb:	xchg   ebx,eax
  41c9fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9fd:	adc    ah,BYTE PTR [edx-0x6397938f]
  41ca03:	or     ebx,esi
  41ca05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca06:	sub    BYTE PTR [ebx-0x4fa8c156],cl
  41ca0c:	xchg   ebx,eax
  41ca0d:	and    dl,al
  41ca0f:	(bad)  
  41ca10:	std    
  41ca11:	bound  ecx,QWORD PTR [ecx+edi*1+0x1365a691]
  41ca18:	fwait
  41ca19:	int    0x46
  41ca1b:	mov    ch,0x33
  41ca1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca1e:	inc    ebp
  41ca1f:	or     ch,BYTE PTR [edx-0x64]
  41ca22:	int    0xfa
  41ca24:	xchg   ecx,eax
  41ca25:	push   0xffffffe3
  41ca27:	mov    eax,DWORD PTR [eax]
  41ca29:	sbb    ebx,DWORD PTR [edi-0x52d41162]
  41ca2f:	imul   eax,DWORD PTR [esi],0x882228db
  41ca35:	int    0x2
  41ca37:	cwde   
  41ca38:	sub    esi,DWORD PTR [ecx]
  41ca3a:	(bad)  
  41ca3b:	jbe    0x41c9ce
  41ca3d:	mov    al,ds:0x471c4041
  41ca42:	mov    bl,0x92
  41ca44:	adc    dl,BYTE PTR ds:0xad797b37
  41ca4a:	fmul   QWORD PTR [esp+eiz*2+0x38]
  41ca4e:	jnp    0x41c9e2
  41ca50:	out    0x8a,eax
  41ca52:	ja     0x41ca72
  41ca54:	lock jbe 0x41ca04
  41ca57:	ror    ah,1
  41ca59:	push   cs
  41ca5a:	imul   esp,esp,0xdd3340fc
  41ca60:	inc    edi
  41ca61:	inc    ebx
  41ca62:	sub    al,0xa0
  41ca64:	xor    bh,0x5d
  41ca67:	(bad)  [edi]
  41ca69:	retf   
  41ca6a:	mov    ds:0x4b11e74d,al
  41ca6f:	div    DWORD PTR [edi-0x32]
  41ca72:	xor    eax,0x9bfe76e5
  41ca77:	cs std 
  41ca79:	fucom  st(6)
  41ca7c:	mov    esp,0x6964982e
  41ca81:	xor    DWORD PTR [esi-0x4e],esp
  41ca84:	aaa    
  41ca85:	loop   0x41caab
  41ca87:	xchg   ebx,eax
  41ca88:	xchg   ebp,eax
  41ca89:	out    0x70,eax
  41ca8b:	jmp    0xbb28:0x2183e890
  41ca92:	(bad)  
  41ca93:	and    DWORD PTR [eax],esi
  41ca95:	sbb    eax,0xe04e79cf
  41ca9a:	mov    eax,ds:0x30c7191b
  41ca9f:	fnsave [esi-0x2b]
  41caa2:	test   eax,0x782afd85
  41caa7:	jle    0x41ca2d
  41caa9:	popf   
  41caaa:	xor    BYTE PTR [edi+0x40f5a293],bh
  41cab0:	sahf   
  41cab1:	call   0x49ae6a6d
  41cab6:	xor    cl,cl
  41cab8:	shl    esp,0x34
  41cabb:	je     0x41cac8
  41cabd:	fist   DWORD PTR [esi-0x48f9f05a]
  41cac3:	add    al,0x22
  41cac5:	xor    BYTE PTR [eax-0xb],al
  41cac8:	push   edi
  41cac9:	dec    edx
  41caca:	adc    eax,DWORD PTR [edx+ebx*8-0x5d6dfba2]
  41cad1:	sar    BYTE PTR [ecx+0x41],cl
  41cad4:	rol    DWORD PTR [edx],1
  41cad6:	ins    DWORD PTR es:[edi],dx
  41cad7:	adc    DWORD PTR [eax-0x56],esp
  41cada:	mov    cl,0x9d
  41cadc:	push   ebx
  41cadd:	pop    eax
  41cade:	or     BYTE PTR ds:0x484f3bef,ch
  41cae4:	mov    ds:0xb1754771,al
  41cae9:	mov    bh,BYTE PTR [ebx+ebp*1-0x4d3f5265]
  41caf0:	push   edx
  41caf1:	imul   ecx,esp,0x20d832df
  41caf7:	mov    al,0x4e
  41caf9:	fimul  WORD PTR [ebx]
  41cafb:	and    ah,BYTE PTR [edi]
  41cafd:	sbb    ebx,DWORD PTR [ebp-0x3f]
  41cb00:	lss    ecx,FWORD PTR [esi+ebx*2+0x4e8c1dfd]
  41cb08:	mov    ebp,0x5258c5f8
  41cb0d:	mov    al,0x9a
  41cb0f:	cdq    
  41cb10:	mov    si,0x49f3
  41cb14:	sub    edi,DWORD PTR [ecx+edx*4-0x5b]
  41cb18:	std    
  41cb19:	jo     0x41caf1
  41cb1b:	mov    cl,0xd3
  41cb1d:	out    0xf9,al
  41cb1f:	scas   al,BYTE PTR es:[edi]
  41cb20:	inc    esi
  41cb21:	out    dx,eax
  41cb22:	jns    0x41cad0
  41cb24:	cli    
  41cb25:	inc    ecx
  41cb26:	popa   
  41cb27:	pusha  
  41cb28:	ja     0x41cabc
  41cb2a:	test   cl,dl
  41cb2c:	out    dx,al
  41cb2d:	call   0x5adf:0xd1c1d991
  41cb34:	dec    eax
  41cb35:	cdq    
  41cb36:	mov    edi,ebp
  41cb38:	in     eax,0xb5
  41cb3a:	inc    eax
  41cb3b:	add    DWORD PTR [edi-0x7db31659],esi
  41cb41:	nop
  41cb42:	cmp    ah,dh
  41cb44:	stc    
  41cb45:	add    bh,BYTE PTR [ebp+0x416a2ed7]
  41cb4b:	mov    ebp,0xdf0f6f04
  41cb50:	arpl   ax,bp
  41cb52:	call   0x9606:0x9cbf15d9
  41cb59:	mov    eax,0x1169fe4d
  41cb5e:	cmp    DWORD PTR [ecx+edi*1-0x5ec427e0],edi
  41cb65:	popf   
  41cb66:	or     DWORD PTR [esi],eax
  41cb68:	fwait
  41cb69:	lahf   
  41cb6a:	cmp    BYTE PTR ds:0x67a9e733,dl
  41cb70:	push   ebx
  41cb71:	push   edi
  41cb72:	cwde   
  41cb73:	jecxz  0x41cafd
  41cb75:	icebp  
  41cb76:	mov    DWORD PTR [ebp-0x47f50873],edi
  41cb7c:	sbb    edi,DWORD PTR [edx+0x70]
  41cb7f:	(bad)  
  41cb80:	fidiv  DWORD PTR [ebp-0x34]
  41cb83:	stc    
  41cb84:	and    al,0x88
  41cb86:	in     eax,0x14
  41cb88:	and    dh,BYTE PTR es:[edi*1-0x29ee1d39]
  41cb90:	ja     0x41cb3a
  41cb92:	mov    al,ds:0xa028a92c
  41cb97:	jbe    0x41cc16
  41cb99:	xchg   esp,eax
  41cb9a:	push   0x21
  41cb9c:	(bad)  
  41cb9d:	add    eax,edx
  41cb9f:	mov    ds:0x59fd2a4a,al
  41cba4:	or     al,0xd1
  41cba6:	push   ss
  41cba7:	daa    
  41cba8:	add    eax,0x13a74fbd
  41cbad:	and    edi,DWORD PTR [ebx]
  41cbaf:	nop
  41cbb0:	add    DWORD PTR [ebp-0x43],ecx
  41cbb3:	gs jp  0x41cc08
  41cbb6:	xchg   ebp,eax
  41cbb7:	retf   0x7b58
  41cbba:	hlt    
  41cbbb:	int3   
  41cbbc:	in     al,0x97
  41cbbe:	mov    ah,0x1c
  41cbc0:	test   BYTE PTR fs:[edx+0x59c4fe8e],ah
  41cbc7:	xor    esi,DWORD PTR [edx]
  41cbc9:	out    0x28,al
  41cbcb:	xchg   DWORD PTR [edx],ebp
  41cbcd:	enter  0x8def,0xaf
  41cbd1:	cmp    DWORD PTR [edx-0x3],esp
  41cbd4:	add    ebp,ebx
  41cbd6:	dec    ecx
  41cbd7:	call   0x3d808edf
  41cbdc:	adc    DWORD PTR [edi-0x23cc3c0a],edx
  41cbe2:	add    esp,DWORD PTR [edi+0x6f]
  41cbe5:	inc    esi
  41cbe6:	jmp    0xfa0700c9
  41cbeb:	xor    DWORD PTR [ebx-0x66],edi
  41cbee:	mov    ebp,0xd9eabb46
  41cbf3:	nop
  41cbf4:	leave  
  41cbf5:	scas   eax,DWORD PTR es:[edi]
  41cbf6:	retf   0x25b
  41cbf9:	adc    BYTE PTR ds:0xe368ce55,dl
  41cbff:	dec    ebx
  41cc00:	push   esp
  41cc01:	push   es
  41cc02:	mov    al,0x15
  41cc04:	xchg   ebx,eax
  41cc05:	int3   
  41cc06:	cs popw es
  41cc09:	mov    WORD PTR [ebx+0x3e],ds
  41cc0c:	call   0x78240d48
  41cc11:	xlat   BYTE PTR ds:[ebx]
  41cc12:	nop
  41cc13:	ds jl  0x41cbb6
  41cc16:	mov    dl,0x3e
  41cc18:	mov    ecx,0xa5d0fdb4
  41cc1d:	fsub   QWORD PTR [esi-0x3]
  41cc20:	pushf  
  41cc21:	cld    
  41cc22:	ret    
  41cc23:	push   0xffffffa7
  41cc25:	cmpxchg BYTE PTR [edx+0x61],dl
  41cc29:	fadd   st,st(3)
  41cc2b:	loope  0x41cbb6
  41cc2d:	aas    
  41cc2e:	pop    es
  41cc2f:	ficomp WORD PTR [edx+0x24]
  41cc32:	adc    BYTE PTR [esi],dl
  41cc34:	loope  0x41cc0f
  41cc36:	jb     0x41cbff
  41cc38:	int    0xe0
  41cc3a:	xchg   cl,bh
  41cc3c:	pushf  
  41cc3d:	mov    bl,cl
  41cc3f:	je     0x41cc0d
  41cc41:	and    DWORD PTR [edi],edi
  41cc43:	push   ds
  41cc44:	inc    ebp
  41cc45:	(bad)  
  41cc46:	shld   esp,edi,0xbb
  41cc4a:	shr    DWORD PTR [edi+0x35d8c5ca],0xe7
  41cc51:	test   al,0x2c
  41cc53:	and    eax,0xda35408b
  41cc58:	sub    ebx,ebx
  41cc5a:	(bad)
  41cc5d:	mov    edx,0xd2c8e959
  41cc62:	jae    0x41cc9d
  41cc64:	pop    ds
  41cc65:	jecxz  0x41cc57
  41cc67:	aad    0x9c
  41cc69:	mov    al,0x4c
  41cc6b:	add    al,0xaa
  41cc6d:	dec    ecx
  41cc6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc6f:	mov    eax,DWORD PTR [edx-0x1e]
  41cc72:	and    al,0xb2
  41cc74:	or     eax,0xf7fe22d1
  41cc79:	retf   
  41cc7a:	xor    eax,0x216254a7
  41cc7f:	mov    al,ds:0x5311bad2
  41cc84:	fwait
  41cc85:	sahf   
  41cc86:	sub    eax,0xb5c43cfa
  41cc8b:	and    BYTE PTR [esi+ecx*2],0x76
  41cc8f:	les    esi,FWORD PTR [edx]
  41cc91:	push   ebp
  41cc92:	push   ecx
  41cc93:	mov    BYTE PTR [eax-0x6b3200c6],bl
  41cc99:	(bad)
  41cc9c:	test   DWORD PTR es:[edx+0x7f],ecx
  41cca0:	jnp    0x41cce5
  41cca2:	ficom  DWORD PTR [esi+0x62]
  41cca5:	adc    al,0x86
  41cca7:	mov    al,0x9c
  41cca9:	sahf   
  41ccaa:	cdq    
  41ccab:	outs   dx,BYTE PTR ds:[esi]
  41ccac:	ds (bad) 
  41ccae:	int3   
  41ccaf:	mov    esp,DWORD PTR [edx+0x6704bf46]
  41ccb5:	mov    eax,0x5179e653
  41ccba:	sub    DWORD PTR [edx+eax*1+0x74],esi
  41ccbe:	std    
  41ccbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccc0:	mov    ebp,DWORD PTR [esi-0x620f14c3]
  41ccc6:	scas   al,BYTE PTR es:[edi]
  41ccc7:	push   esi
  41ccc8:	xchg   ecx,eax
  41ccc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccca:	jb     0x41ccee
  41cccc:	into   
  41cccd:	outs   dx,BYTE PTR ds:[esi]
  41ccce:	test   eax,0x9612cb5b
  41ccd3:	mov    al,ds:0xd0a130a2
  41ccd8:	bound  eax,QWORD PTR [ebx+0x20]
  41ccdb:	pop    eax
  41ccdc:	pop    ecx
  41ccdd:	and    dh,BYTE PTR [edi+eax*2+0x16a2eef5]
  41cce4:	sub    edi,DWORD PTR [eax]
  41cce6:	xchg   edx,eax
  41cce7:	push   ebx
  41cce8:	or     cl,BYTE PTR gs:[edi-0x600b6b]
  41ccef:	ins    DWORD PTR es:[edi],dx
  41ccf0:	xchg   edi,eax
  41ccf1:	add    BYTE PTR [esi-0x54],cl
  41ccf4:	mov    esi,DWORD PTR [edi-0x40a056a]
  41ccfa:	ds call 0x63764bf1
  41cd00:	unpckhps xmm2,XMMWORD PTR [edi-0x25]
  41cd04:	add    ah,BYTE PTR [esi+0x4]
  41cd07:	nop
  41cd08:	mov    ebp,0x67e54f67
  41cd0d:	pop    esi
  41cd0e:	je     0x41cd1c
  41cd10:	mov    ecx,0x98643432
  41cd15:	stc    
  41cd16:	push   0x57
  41cd18:	mov    dh,0x26
  41cd1a:	pop    ebp
  41cd1b:	sub    al,0x1f
  41cd1d:	rcr    DWORD PTR [edx-0x7d24fbae],0xa
  41cd24:	aaa    
  41cd25:	cmp    eax,0x633571af
  41cd2a:	ds stos BYTE PTR es:[edi],al
  41cd2c:	cmp    ebp,DWORD PTR [ecx]
  41cd2e:	xchg   DWORD PTR [edi],edx
  41cd30:	nop
  41cd31:	leave  
  41cd32:	mov    ecx,0x629805f0
  41cd37:	loop   0x41cd5c
  41cd39:	nop
  41cd3a:	and    BYTE PTR [ebp+0x681f11fd],dh
  41cd40:	mov    al,0x2c
  41cd42:	popf   
  41cd43:	int    0x44
  41cd45:	stc    
  41cd46:	mul    DWORD PTR [ebp-0x1a1651dc]
  41cd4c:	fmul   QWORD PTR [ebp+0x73]
  41cd4f:	lds    eax,FWORD PTR [eax-0x2c2fcce1]
  41cd55:	out    0x11,al
  41cd57:	adc    dh,ah
  41cd59:	mov    bl,0xe3
  41cd5b:	fstp   DWORD PTR gs:[eax]
  41cd5e:	mov    esi,DWORD PTR [edx+0x2c]
  41cd61:	sub    al,0x78
  41cd63:	or     al,0x3
  41cd65:	es adc BYTE PTR gs:[ecx],dh
  41cd69:	loopne 0x41cd0e
  41cd6b:	add    al,0x81
  41cd6d:	inc    esi
  41cd6e:	leave  
  41cd6f:	lods   eax,DWORD PTR ds:[esi]
  41cd70:	dec    ebx
  41cd71:	les    edx,FWORD PTR [esi+0x5c534efd]
  41cd77:	mov    ebx,0x4a0536b5
  41cd7c:	and    al,0xa1
  41cd7e:	mov    ds:0x8cc1bde9,al
  41cd83:	push   eax
  41cd84:	arpl   bp,cx
  41cd86:	xchg   BYTE PTR [edx+edx*4-0x2b],ah
  41cd8a:	sub    BYTE PTR [ebx],0xe7
  41cd8d:	adc    eax,0x28af9590
  41cd92:	movaps xmm0,XMMWORD PTR [esi]
  41cd95:	in     eax,0xa6
  41cd97:	jmp    0x41cdae
  41cd99:	jmp    0x563d:0x4d6a082a
  41cda0:	pop    esp
  41cda1:	shr    DWORD PTR [edx+0x5aa54361],0xea
  41cda8:	clc    
  41cda9:	mov    ch,0xcc
  41cdab:	inc    eax
  41cdac:	or     BYTE PTR [edx+0x1e96f1ef],0x4
  41cdb3:	inc    ebp
  41cdb4:	push   ecx
  41cdb5:	lods   eax,DWORD PTR ds:[esi]
  41cdb6:	dec    eax
  41cdb7:	cmp    esp,DWORD PTR [esi]
  41cdb9:	clc    
  41cdba:	xchg   edi,eax
  41cdbb:	not    ecx
  41cdbd:	push   0xffffffdb
  41cdbf:	fidiv  DWORD PTR [eax-0x53]
  41cdc2:	mov    ecx,0xfd422dbb
  41cdc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdc8:	jno    0x41cdd5
  41cdca:	inc    esi
  41cdcb:	lock int3 
  41cdcd:	lods   al,BYTE PTR ds:[esi]
  41cdce:	push   esp
  41cdcf:	pop    ss
  41cdd0:	jae    0x41ce21
  41cdd2:	lock popf 
  41cdd4:	adc    al,0xfe
  41cdd6:	pop    esi
  41cdd7:	scas   al,BYTE PTR es:[edi]
  41cdd8:	(bad)  
  41cdda:	rcr    BYTE PTR [ebp+0x5e],1
  41cddd:	(bad)  
  41cdde:	stc    
  41cddf:	in     al,0xa5
  41cde1:	push   ds
  41cde2:	int3   
  41cde3:	aam    0x9d
  41cde5:	adc    al,dh
  41cde7:	outs   dx,DWORD PTR ds:[esi]
  41cde8:	fimul  WORD PTR [esi+0x29]
  41cdeb:	fsub   DWORD PTR [ebx+0x1f]
  41cdee:	mov    bl,0xd9
  41cdf0:	mov    eax,ds:0xb1aefc99
  41cdf5:	leave  
  41cdf6:	mov    ?,WORD PTR [ecx]
  41cdf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdf9:	stos   BYTE PTR es:[edi],al
  41cdfa:	xchg   edi,eax
  41cdfb:	(bad)  
  41cdfc:	popa   
  41cdfd:	or     ebp,DWORD PTR [esi-0x5c]
  41ce00:	fsubr  DWORD PTR [esi+0x5b]
  41ce03:	jno    0x41cdd1
  41ce05:	stos   DWORD PTR es:[edi],eax
  41ce06:	jne    0x41cdb0
  41ce08:	outs   dx,BYTE PTR ds:[esi]
  41ce09:	jg     0x41cda9
  41ce0b:	jp     0x41ce23
  41ce0d:	inc    eax
  41ce0e:	rol    DWORD PTR [edx],cl
  41ce10:	pop    esi
  41ce11:	mov    eax,0xd8390ae1
  41ce16:	loopne 0x41ce8a
  41ce18:	aaa    
  41ce19:	jmp    0x8df20caf
  41ce1e:	cmp    ecx,DWORD PTR [eax+0x44]
  41ce21:	bound  edx,QWORD PTR [edx+0x657da493]
  41ce27:	inc    ebx
  41ce28:	push   cs
  41ce29:	test   BYTE PTR [edi],dl
  41ce2b:	mov    eax,ds:0x1d8b9dd2
  41ce30:	imul   ecx,ecx,0xffffffd3
  41ce33:	(bad)  
  41ce34:	nop
  41ce35:	mov    WORD PTR [eax-0x69],es
  41ce38:	fxam   
  41ce3a:	cld    
  41ce3b:	add    DWORD PTR [edx+0x30],ebx
  41ce3e:	mov    esi,0xe299d568
  41ce43:	in     al,0xab
  41ce45:	into   
  41ce46:	xchg   esp,eax
  41ce47:	jno    0x41ce4a
  41ce49:	sbb    BYTE PTR [esi-0x1e],dl
  41ce4c:	(bad)  
  41ce4d:	popa   
  41ce4e:	mov    dh,0xa7
  41ce50:	dec    ebx
  41ce51:	or     eax,0x57cfa312
  41ce56:	pop    ss
  41ce57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce58:	jbe    0x41ce31
  41ce5a:	loopne 0x41cdf7
  41ce5c:	pop    es
  41ce5d:	mov    dh,0xb0
  41ce5f:	mov    DWORD PTR [ecx+0x27],eax
  41ce62:	(bad)  
  41ce63:	lds    eax,FWORD PTR [eax+0x380d68d2]
  41ce69:	sbb    eax,DWORD PTR [edx-0x78f5765f]
  41ce6f:	xlat   BYTE PTR ds:[ebx]
  41ce70:	pushaw 
  41ce72:	cmp    cl,BYTE PTR [ecx+0x792d9070]
  41ce78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce79:	in     al,0xdf
  41ce7b:	shl    BYTE PTR [eax+0x339567bd],1
  41ce81:	pop    ebx
  41ce82:	cld    
  41ce83:	pop    esp
  41ce84:	sti    
  41ce85:	stc    
  41ce86:	dec    eax
  41ce87:	fs or  ch,ah
  41ce8a:	mov    ch,0xf0
  41ce8c:	and    al,0xac
  41ce8e:	es loop 0x41ceee
  41ce91:	sub    edi,DWORD PTR ds:0x9a94b3ae
  41ce97:	pop    ebp
  41ce98:	in     al,dx
  41ce99:	lea    edx,[ecx]
  41ce9b:	adc    DWORD PTR [ecx+0x2946055],edi
  41cea1:	lahf   
  41cea2:	js     0x41ce65
  41cea4:	mov    ch,BYTE PTR [esi+0x54c4b048]
  41ceaa:	sub    BYTE PTR [ebx+ebx*1+0x76],cl
  41ceae:	jae    0x41ceb8
  41ceb0:	push   es
  41ceb1:	shr    BYTE PTR [edx-0x69b2d628],0x7e
  41ceb8:	stos   BYTE PTR es:[edi],al
  41ceb9:	das    
  41ceba:	pop    ebx
  41cebb:	mov    BYTE PTR [ecx-0x78],ch
  41cebe:	es pusha 
  41cec0:	sbb    dh,BYTE PTR [ecx]
  41cec2:	push   0x49984538
  41cec7:	xchg   esi,eax
  41cec8:	cmp    edx,DWORD PTR [ebp+0x62]
  41cecb:	and    BYTE PTR ds:[bp+si],dh
  41cecf:	cmc    
  41ced0:	fs inc edx
  41ced2:	test   eax,0xca6fd561
  41ced7:	or     eax,0x96af6316
  41cedc:	mov    eax,DWORD PTR [edx]
  41cede:	mov    gs,WORD PTR [ecx-0x4b]
  41cee1:	ret    0xf102
  41cee4:	imul   ebp,DWORD PTR [esi-0x55],0xdaca55ca
  41ceeb:	arpl   WORD PTR [ebx],bp
  41ceed:	shr    DWORD PTR [edi],cl
  41ceef:	ds add al,0xe8
  41cef2:	fcomp  QWORD PTR [esi-0xfc356c8]
  41cef8:	xchg   ebx,eax
  41cef9:	sub    DWORD PTR [ecx],ebx
  41cefb:	sti    
  41cefc:	fwait
  41cefd:	cdq    
  41cefe:	imul   esi,ebx,0x76
  41cf01:	mov    ebx,0x8ef8a0a4
  41cf06:	clc    
  41cf07:	lds    ecx,FWORD PTR [ecx+ebx*2+0x6c]
  41cf0b:	(bad)  
  41cf0c:	mov    bl,0xdd
  41cf0e:	xchg   DWORD PTR [eax],ebx
  41cf10:	and    edx,DWORD PTR [ecx-0x44]
  41cf13:	or     edi,ebx
  41cf15:	aad    0xda
  41cf17:	sub    ah,BYTE PTR [edi+0x6f2b6df]
  41cf1d:	imul   BYTE PTR [ebx-0x60]
  41cf20:	ret    
  41cf21:	test   al,0x63
  41cf23:	pop    esp
  41cf24:	lsl    esp,WORD PTR [edi]
  41cf27:	dec    ebp
  41cf28:	es and esi,ebp
  41cf2b:	push   0x43
  41cf2d:	popa   
  41cf2e:	lods   eax,DWORD PTR ds:[esi]
  41cf2f:	pop    esp
  41cf30:	clc    
  41cf31:	jmp    0xad96:0x34b534fa
  41cf38:	pop    ecx
  41cf39:	popf   
  41cf3a:	mov    dl,0xa6
  41cf3c:	dec    ebp
  41cf3d:	test   edi,ecx
  41cf3f:	in     eax,0x42
  41cf41:	cmp    BYTE PTR ss:[esi],al
  41cf44:	or     eax,0xa90f7651
  41cf49:	sar    edi,1
  41cf4b:	fdiv   QWORD PTR [edi-0x28]
  41cf4e:	add    bh,BYTE PTR [ebp+0xff2d887]
  41cf54:	mov    ah,0x2a
  41cf56:	and    DWORD PTR [ebp+0x6aded830],0xffffffea
  41cf5d:	jno    0x41cf83
  41cf5f:	push   ebp
  41cf60:	and    eax,0xefb3e19
  41cf65:	mov    ebp,0xe171a5f5
  41cf6a:	jge    0x41cf03
  41cf6c:	dec    edx
  41cf6d:	cli    
  41cf6e:	loop   0x41cfbf
  41cf70:	xchg   edx,eax
  41cf71:	mov    dh,0xd9
  41cf73:	and    DWORD PTR [esi+0x79],esi
  41cf76:	mov    ebx,0xd311a9b6
  41cf7b:	in     al,0x98
  41cf7d:	fcom   QWORD PTR [edx-0x5f]
  41cf80:	mov    ch,0x9e
  41cf82:	adc    al,0x51
  41cf84:	repz call 0x647:0xf6e6a222
  41cf8c:	dec    esp
  41cf8d:	(bad)  [ecx-0x3f]
  41cf90:	inc    eax
  41cf91:	repnz ins DWORD PTR es:[edi],dx
  41cf93:	xor    eax,0x6587a2b7
  41cf98:	dec    esi
  41cf99:	imul   esi,DWORD PTR [ebp-0x5e784683],0x5b
  41cfa0:	mov    dl,0x50
  41cfa2:	mov    esi,0x2dc63a92
  41cfa7:	adc    al,0x53
  41cfa9:	icebp  
  41cfaa:	ja     0x41cff2
  41cfac:	clc    
  41cfad:	push   edi
  41cfae:	cmp    BYTE PTR [edi-0x7b8134e6],ah
  41cfb4:	mov    eax,0x5941ae6c
  41cfb9:	push   ecx
  41cfba:	data16 stos BYTE PTR es:[edi],al
  41cfbc:	xor    ebx,esi
  41cfbe:	jnp    0x41cf40
  41cfc0:	gs push ss
  41cfc2:	ins    DWORD PTR es:[edi],dx
  41cfc3:	jae    0x41cfb8
  41cfc5:	mov    eax,ds:0x82ce2311
  41cfca:	pop    ds
  41cfcb:	mov    ebx,0x6dc24577
  41cfd0:	inc    ebp
  41cfd1:	sub    ebp,eax
  41cfd3:	out    dx,eax
  41cfd4:	pusha  
  41cfd5:	dec    esi
  41cfd6:	cmp    BYTE PTR ds:0xda1a7efc,cl
  41cfdc:	fsubr  st,st(4)
  41cfde:	jno    0x41cfff
  41cfe0:	mov    esp,DWORD PTR [ebx+0x55]
  41cfe3:	bsf    esp,edi
  41cfe6:	mov    bl,0x9f
  41cfe8:	mov    dl,0xed
  41cfea:	pop    esi
  41cfeb:	pop    ss
  41cfec:	adc    DWORD PTR [ebx+0x2c],ebx
  41cfef:	inc    ecx
  41cff0:	sbb    ebx,DWORD PTR [eax]
  41cff2:	arpl   si,di
  41cff4:	aad    0xb8
  41cff6:	adc    al,0xf1
  41cff8:	and    eax,DWORD PTR [edi]
  41cffa:	js     0x41cf9f
  41cffc:	(bad)  
  41cffe:	mov    ecx,0x54513b13
  41d003:	ins    BYTE PTR es:[edi],dx
  41d004:	xor    DWORD PTR [ecx+0xe],esi
  41d007:	cmp    bh,BYTE PTR [ebp-0x61]
  41d00a:	sahf   
  41d00b:	or     bh,0xd2
  41d00e:	mov    WORD PTR [eax+0x9779783],es
  41d014:	cmp    cl,BYTE PTR [esi]
  41d016:	jae    0x41cfaf
  41d018:	dec    edx
  41d019:	ins    BYTE PTR es:[edi],dx
  41d01a:	adc    BYTE PTR [ecx-0x42],dh
  41d01d:	mov    edx,0x560fa4db
  41d022:	jae    0x41d060
  41d024:	test   al,0xbd
  41d026:	outs   dx,DWORD PTR ds:[esi]
  41d027:	xor    BYTE PTR [eax+edi*8+0x54],ah
  41d02b:	mov    ebx,0xf48ae0a9
  41d030:	enter  0xf803,0x40
  41d034:	xabort 0x10
  41d037:	stos   BYTE PTR es:[edi],al
  41d038:	arpl   di,dx
  41d03a:	xchg   edx,eax
  41d03b:	mov    ?,WORD PTR [eax]
  41d03d:	inc    eax
  41d03e:	adc    ah,BYTE PTR ds:0x83926dc4
  41d044:	js     0x41d039
  41d046:	jno    0x41d092
  41d048:	mov    cl,0x1f
  41d04a:	repz add al,0xc3
  41d04d:	js     0x41d0a5
  41d04f:	call   0x9d00:0x8db6ae41
  41d056:	jmp    0x41d099
  41d058:	cmc    
  41d059:	pop    esp
  41d05a:	pop    edx
  41d05b:	jb     0x41d073
  41d05d:	inc    esi
  41d05e:	fwait
  41d05f:	push   ds
  41d060:	repnz in al,0x71
  41d063:	jmp    0x41d051
  41d065:	xchg   esi,eax
  41d066:	sar    DWORD PTR [esi+0x7699b6f8],1
  41d06c:	mov    ecx,0x4f16ac69
  41d071:	div    DWORD PTR [edx]
  41d073:	vminsd xmm4,xmm4,QWORD PTR [ecx-0x140aea7]
  41d07b:	mov    al,0xa9
  41d07d:	fimul  DWORD PTR [eax-0x21]
  41d080:	mov    DWORD PTR [esi+eiz*4+0x33],edi
  41d084:	fst    st(6)
  41d086:	mov    eax,0x696b0fec
  41d08b:	or     al,0x51
  41d08d:	dec    ebx
  41d08e:	scas   eax,DWORD PTR es:[edi]
  41d08f:	cmp    DWORD PTR [ebp+0x411eeb90],ebx
  41d095:	adc    DWORD PTR [ebx],0x2768043e
  41d09b:	ror    DWORD PTR [esi],1
  41d09d:	push   ds
  41d09e:	cmp    al,0xde
  41d0a0:	test   BYTE PTR [ebp-0x7c51f911],bh
  41d0a6:	adc    DWORD PTR [ecx],esp
  41d0a8:	int    0x5b
  41d0aa:	popa   
  41d0ab:	sub    eax,0x272b5b9c
  41d0b0:	jl     0x41d11c
  41d0b2:	cwde   
  41d0b3:	push   edi
  41d0b4:	cmp    esp,DWORD PTR [eax+0x3f]
  41d0b7:	push   esi
  41d0b8:	je     0x41d0d6
  41d0ba:	push   0x49d6fa68
  41d0bf:	jmp    0x355b:0x45d4bb7
  41d0c6:	jle    0x41d072
  41d0c8:	popf   
  41d0c9:	adc    bl,BYTE PTR [esp+eax*2+0x40]
  41d0cd:	imul   BYTE PTR [edx]
  41d0cf:	jae    0x41d055
  41d0d1:	pextrw edx,(bad),0xc5
  41d0d3:	adc    ch,bh
  41d0d5:	out    0xc5,al
  41d0d7:	fsub   st(6),st
  41d0d9:	mov    ch,0x82
  41d0db:	push   eax
  41d0dc:	sahf   
  41d0dd:	repnz out 0x74,eax
  41d0e0:	cmp    BYTE PTR [eax+0x5ca7fb6b],ch
  41d0e6:	lea    ebx,[ebx+0x4fb6814d]
  41d0ec:	xor    BYTE PTR [ebx+0x2b49b6db],bh
  41d0f2:	push   edi
  41d0f3:	sbb    cl,dh
  41d0f5:	inc    DWORD PTR [edi+0x1d517597]
  41d0fb:	stc    
  41d0fc:	inc    edi
  41d0fd:	sbb    BYTE PTR [edx-0x6b793e41],al
  41d103:	push   0xf09c651d
  41d108:	aad    0x6
  41d10a:	sbb    DWORD PTR [eax],edi
  41d10c:	addr16 fwait
  41d10e:	jecxz  0x41d17b
  41d110:	mov    cl,0x1f
  41d112:	in     eax,dx
  41d113:	sub    BYTE PTR [eax+ebx*8],al
  41d116:	or     al,0x40
  41d118:	fld    DWORD PTR [ebx-0x19]
  41d11b:	mov    ds:0x4842e79a,eax
  41d120:	ja     0x41d165
  41d122:	std    
  41d123:	sub    esi,DWORD PTR [esi-0x57ddeda5]
  41d129:	neg    DWORD PTR fs:0x731ca89a
  41d130:	in     al,0x4d
  41d132:	inc    eax
  41d133:	rcl    BYTE PTR [edx+0x4870bc25],0x5a
  41d13a:	ret    
  41d13b:	jmp    0xff9d988e
  41d140:	sbb    eax,0x31ec063
  41d145:	popf   
  41d146:	clc    
  41d147:	jo     0x41d15e
  41d149:	in     al,dx
  41d14a:	iret   
  41d14b:	dec    ebp
  41d14c:	jle    0x41d0d7
  41d14e:	push   0x68
  41d150:	inc    eax
  41d151:	nop
  41d152:	inc    edi
  41d153:	rcr    BYTE PTR [edi+0x643750c5],cl
  41d159:	or     edi,edx
  41d15b:	xor    al,bl
  41d15d:	loope  0x41d1b4
  41d15f:	ds pop es
  41d161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d162:	push   esp
  41d163:	(bad)  
  41d164:	or     eax,0xed9e0c67
  41d169:	fwait
  41d16a:	inc    esp
  41d16b:	iret   
  41d16c:	mov    esp,0x12b70141
  41d171:	mov    dh,0x61
  41d173:	ret    0x1231
  41d176:	inc    esp
  41d177:	jmp    0x41d0f9
  41d179:	xlat   BYTE PTR ds:[ebx]
  41d17a:	adc    DWORD PTR [edx],esi
  41d17c:	pop    esi
  41d17d:	dec    edx
  41d17e:	jae    0x41d106
  41d180:	pusha  
  41d181:	mov    esp,ss
  41d183:	jno    0x41d157
  41d185:	out    0x9a,eax
  41d187:	fs xor eax,0xfe527d17
  41d18d:	out    0x84,al
  41d18f:	add    BYTE PTR [ecx-0x4727510f],bh
  41d195:	in     al,dx
  41d196:	into   
  41d197:	adc    DWORD PTR [edi],esp
  41d199:	pop    esp
  41d19a:	push   DWORD PTR [ebp-0x5a19861a]
  41d1a0:	in     al,dx
  41d1a1:	lea    edi,[ebp-0x5]
  41d1a4:	fnstsw WORD PTR [edi]
  41d1a6:	sub    al,0xc9
  41d1a8:	stos   DWORD PTR es:[edi],eax
  41d1a9:	loop   0x41d227
  41d1ab:	scas   al,BYTE PTR es:[edi]
  41d1ac:	cmp    DWORD PTR [ecx-0xd3f004e],esp
  41d1b2:	ret    
  41d1b3:	jbe    0x41d1b8
  41d1b5:	and    eax,0xf4ac9ea8
  41d1ba:	pusha  
  41d1bb:	mov    bh,0x75
  41d1bd:	add    al,0xc
  41d1bf:	hlt    
  41d1c0:	test   DWORD PTR [ecx-0x1be7a536],edx
  41d1c6:	and    eax,0x96a987dc
  41d1cb:	popa   
  41d1cc:	inc    eax
  41d1cd:	cmp    bh,BYTE PTR [esi+eiz*8]
  41d1d0:	push   0x8cd99b59
  41d1d5:	mov    cl,0x51
  41d1d7:	adc    ebx,DWORD PTR [eax-0x48aea346]
  41d1dd:	rol    BYTE PTR [edi-0x75],cl
  41d1e0:	cmp    BYTE PTR [esi],0xe0
  41d1e3:	enter  0xbbf4,0xd4
  41d1e7:	push   ebp
  41d1e8:	clc    
  41d1e9:	push   es
  41d1ea:	ins    BYTE PTR es:[edi],dx
  41d1eb:	pop    esi
  41d1ec:	fdivr  QWORD PTR [ebp+0x1a447838]
  41d1f2:	jmp    0x190:0x3ff1c9ec
  41d1f9:	cwde   
  41d1fa:	lods   al,BYTE PTR ds:[esi]
  41d1fb:	or     ah,ch
  41d1fd:	retf   0x98d8
  41d200:	sbb    al,0x73
  41d202:	dec    ebp
  41d203:	inc    esi
  41d204:	inc    esi
  41d205:	pop    ecx
  41d206:	sub    eax,0x14b88393
  41d20b:	mov    esp,0x19878010
  41d210:	xchg   BYTE PTR [edx-0x5e],dl
  41d213:	mov    al,ds:0xc9c3d214
  41d218:	das    
  41d219:	push   edi
  41d21a:	pop    ecx
  41d21b:	mov    bl,0x10
  41d21d:	bound  edx,QWORD PTR [esi]
  41d21f:	enter  0x26ea,0x80
  41d223:	push   cs
  41d224:	fwait
  41d225:	inc    esp
  41d226:	not    BYTE PTR [eax]
  41d228:	sbb    bl,BYTE PTR [ebp+0x69301f6d]
  41d22e:	inc    ebp
  41d22f:	xor    al,0xa8
  41d231:	xchg   BYTE PTR [eax+0x73],cl
  41d234:	scas   eax,DWORD PTR es:[edi]
  41d235:	addr16 or bh,dh
  41d238:	xor    DWORD PTR [edi-0x5],0x85c9f43c
  41d23f:	fcmovbe st,st(1)
  41d241:	xadd   BYTE PTR [edx],cl
  41d244:	test   DWORD PTR ds:0xf857d983,edx
  41d24a:	ins    DWORD PTR es:[edi],dx
  41d24b:	push   edx
  41d24c:	jp     0x41d228
  41d24e:	xor    dl,BYTE PTR [esi+0x2e]
  41d251:	push   0xffffffc8
  41d253:	rcl    DWORD PTR [eax-0x780af7ed],0xfd
  41d25a:	stos   BYTE PTR es:[edi],al
  41d25b:	popa   
  41d25c:	sar    ch,0xfa
  41d25f:	hlt    
  41d260:	mov    dh,0xfb
  41d262:	hlt    
  41d263:	retf   
  41d264:	mov    BYTE PTR [ebp+0x2c],cl
  41d267:	lods   al,BYTE PTR ds:[esi]
  41d268:	push   esi
  41d269:	xor    BYTE PTR [edx+0x3f9f2f2f],0xc4
  41d270:	dec    esi
  41d271:	mov    dh,0xc0
  41d273:	test   eax,0xd2c8df15
  41d278:	xchg   BYTE PTR [ebp+0x65dfa524],cl
  41d27e:	mov    ds:0xd187e85f,eax
  41d283:	push   ecx
  41d284:	add    BYTE PTR [edi+esi*1],al
  41d287:	fs inc edx
  41d289:	imul   ebp,DWORD PTR [ebx-0x2ac2fe04],0xe
  41d290:	sbb    al,0x19
  41d292:	mov    DWORD PTR [edx+0x6b],0xab848c4b
  41d299:	xchg   esp,eax
  41d29a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d29b:	sar    al,0x27
  41d29e:	or     DWORD PTR [ebx*1-0x65771069],ebp
  41d2a5:	das    
  41d2a6:	mov    edx,0x60b26664
  41d2ab:	ror    DWORD PTR [edx+edx*4+0x20],1
  41d2af:	inc    eax
  41d2b0:	es push esp
  41d2b2:	mov    DWORD PTR [edi+eiz*1+0x2],esp
  41d2b6:	push   cs
  41d2b7:	mov    edi,0x7e440996
  41d2bc:	ins    DWORD PTR es:[edi],dx
  41d2bd:	sub    BYTE PTR [ebp-0x4d],dl
  41d2c0:	scas   eax,DWORD PTR es:[edi]
  41d2c1:	cmp    edx,0xffffffe1
  41d2c4:	xchg   esp,esp
  41d2c6:	xor    eax,0x69bd09bc
  41d2cb:	call   0x29836ea7
  41d2d0:	test   eax,0x7df6d70
  41d2d5:	mov    ah,0x25
  41d2d7:	pop    edi
  41d2d8:	or     bh,BYTE PTR [edi]
  41d2da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2db:	in     eax,0x65
  41d2dd:	daa    
  41d2de:	mov    edi,0xcf8825ea
  41d2e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2e4:	mov    dl,0xdf
  41d2e6:	lods   al,BYTE PTR ds:[esi]
  41d2e7:	test   eax,0xf39a0325
  41d2ec:	adc    eax,0x6dda0780
  41d2f1:	aam    0x8e
  41d2f3:	push   ebp
  41d2f4:	xor    eax,0x9ae35a4e
  41d2f9:	addr16 cmc 
  41d2fb:	stos   BYTE PTR es:[edi],al
  41d2fc:	xor    ah,cl
  41d2fe:	jge    0x41d2c2
  41d300:	loope  0x41d2fa
  41d302:	jl     0x41d295
  41d304:	mov    ch,0x13
  41d306:	sahf   
  41d307:	pop    esp
  41d308:	adc    eax,0xd91dc7ff
  41d30d:	pop    edi
  41d30e:	call   0x6d6901a0
  41d313:	icebp  
  41d314:	cmp    eax,0x21e93171
  41d319:	shr    BYTE PTR [esi+esi*2+0x53],cl
  41d31d:	mov    esi,0xac3221fc
  41d322:	fiadd  WORD PTR [ebp+0x53d17b8]
  41d328:	mov    esp,0xc1004c7e
  41d32d:	dec    eax
  41d32e:	xchg   ecx,eax
  41d32f:	fdiv   st,st(0)
  41d331:	int    0x65
  41d333:	leave  
  41d334:	pshufw mm6,QWORD PTR [ecx],0x45
  41d338:	test   cl,dl
  41d33a:	loopne 0x41d2fc
  41d33c:	pop    ebp
  41d33d:	out    dx,al
  41d33e:	loopne 0x41d39d
  41d340:	mov    ch,BYTE PTR [ebx+ebp*2-0x70]
  41d344:	jno    0x41d373
  41d346:	and    DWORD PTR [edx],edx
  41d348:	jmp    0x173:0xb9cdf0d2
  41d34f:	movhps xmm6,QWORD PTR [ecx-0x6ed4df8d]
  41d356:	stos   BYTE PTR es:[edi],al
  41d357:	add    BYTE PTR [esi],ah
  41d359:	sbb    al,0x4
  41d35b:	(bad)  
  41d35d:	xchg   BYTE PTR [eax-0x28ab62f1],dl
  41d363:	outs   dx,DWORD PTR ds:[esi]
  41d364:	lods   al,BYTE PTR ds:[esi]
  41d365:	pop    edi
  41d366:	out    dx,al
  41d367:	bound  edi,QWORD PTR [edx-0x404361c8]
  41d36d:	mov    edi,0x5dcb7e07
  41d372:	dec    esi
  41d373:	repnz add ch,BYTE PTR [ebp+0x7]
  41d377:	fidiv  DWORD PTR [edi-0x38]
  41d37a:	rol    BYTE PTR [eax-0x5fc0d18],0xe6
  41d381:	lea    edx,[esi-0x74]
  41d384:	js     0x41d390
  41d386:	inc    edx
  41d388:	ins    BYTE PTR es:[edi],dx
  41d389:	add    al,0xd3
  41d38b:	stc    
  41d38c:	xor    eax,0x7888057
  41d391:	rcr    cl,cl
  41d393:	sbb    eax,0x8f6279de
  41d398:	call   0x1f9234fd
  41d39d:	pop    ecx
  41d39e:	jae    0x41d41d
  41d3a0:	outs   dx,DWORD PTR ds:[esi]
  41d3a1:	in     eax,0xc8
  41d3a3:	xchg   BYTE PTR [eax+eiz*4],cl
  41d3a6:	adc    eax,0xf243853d
  41d3ab:	mov    WORD PTR [eax-0x61077c64],cs
  41d3b1:	lods   al,BYTE PTR ds:[esi]
  41d3b2:	dec    edx
  41d3b3:	dec    esi
  41d3b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3b5:	cld    
  41d3b6:	popf   
  41d3b7:	scas   al,BYTE PTR es:[edi]
  41d3b8:	scas   eax,DWORD PTR es:[edi]
  41d3b9:	cmp    BYTE PTR [ebp+0x18],ch
  41d3bc:	sub    al,0xa8
  41d3be:	fmul   QWORD PTR es:[esi]
  41d3c1:	dec    ecx
  41d3c2:	push   ebx
  41d3c3:	xchg   esi,eax
  41d3c4:	and    ecx,ecx
  41d3c6:	out    dx,al
  41d3c7:	cmc    
  41d3c8:	les    ebx,FWORD PTR [ecx-0x36]
  41d3cb:	das    
  41d3cc:	push   ecx
  41d3cd:	repz fmul QWORD PTR [eax+0x2]
  41d3d1:	or     edx,edi
  41d3d3:	and    DWORD PTR [edi-0x60076fed],ecx
  41d3d9:	bts    DWORD PTR [eax+0x5c7f2c29],edx
  41d3e0:	and    BYTE PTR [eax-0x53408ad0],dl
  41d3e6:	pop    edi
  41d3e7:	nop
  41d3e8:	jmp    0xef15:0xe559f42c
  41d3ef:	and    al,0x51
  41d3f1:	mov    BYTE PTR [edx+edx*8],bl
  41d3f4:	jno    0x41d399
  41d3f6:	cwde   
  41d3f7:	mov    dh,BYTE PTR [esi-0x77]
  41d3fa:	cli    
  41d3fb:	retf   
  41d3fc:	shl    BYTE PTR [eax],1
  41d3fe:	xor    DWORD PTR [edx],eax
  41d400:	mov    ebx,0x3c9c1b71
  41d405:	push   esi
  41d406:	lods   eax,DWORD PTR ds:[esi]
  41d407:	fisubr DWORD PTR [eax]
  41d409:	pop    ebx
  41d40a:	push   eax
  41d40b:	sbb    bh,BYTE PTR [ebp-0x4df9f0e1]
  41d411:	jbe    0x41d3d3
  41d413:	mov    WORD PTR [esi+edi*2-0x7bd4488c],gs
  41d41a:	cmp    DWORD PTR [edi],ebp
  41d41c:	rcl    cl,1
  41d41e:	mov    eax,DWORD PTR [eax-0x55b47031]
  41d424:	int3   
  41d425:	sti    
  41d426:	sub    al,0xed
  41d428:	or     al,0x5
  41d42a:	add    ecx,ebx
  41d42c:	dec    esi
  41d42d:	sar    BYTE PTR [ecx+esi*8],0xce
  41d431:	mov    eax,ebx
  41d433:	retf   
  41d434:	pop    ebp
  41d435:	dec    esi
  41d436:	shl    BYTE PTR [esi-0x63],cl
  41d439:	add    ebx,DWORD PTR [esi+0x6a]
  41d43c:	dec    edx
  41d43d:	repnz dec edx
  41d43f:	cld    
  41d440:	(bad)
  41d443:	mov    eax,0x15250727
  41d448:	dec    esp
  41d449:	push   ss
  41d44a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d44b:	mov    ebx,gs
  41d44d:	in     eax,dx
  41d44e:	cwde   
  41d44f:	test   eax,0xa9cd3fe0
  41d454:	pop    ebx
  41d455:	push   edi
  41d456:	lock pop ds
  41d458:	and    ch,BYTE PTR [eax-0x15542fcc]
  41d45e:	shl    BYTE PTR [eax+0x61],0x70
  41d462:	xchg   DWORD PTR [esi+esi*4-0x672f0cb4],eax
  41d469:	out    0x77,eax
  41d46b:	or     eax,DWORD PTR [edx]
  41d46d:	add    ecx,DWORD PTR [esi+0x2211dc36]
  41d473:	mov    dh,0x7b
  41d475:	or     esp,ebx
  41d477:	pop    ebp
  41d478:	pop    edx
  41d479:	nop
  41d47a:	cwde   
  41d47b:	sar    DWORD PTR [edx+0x4a843f65],0xf2
  41d482:	pushf  
  41d483:	cwde   
  41d484:	ss and esp,eax
  41d487:	stos   DWORD PTR es:[edi],eax
  41d488:	rcl    cl,0x22
  41d48b:	add    DWORD PTR [ebx+0x27c5b8d0],ebx
  41d491:	fsubr  QWORD PTR [edi]
  41d493:	add    dl,dh
  41d495:	push   ebx
  41d496:	add    al,0xe6
  41d498:	dec    ecx
  41d499:	out    0x8e,al
  41d49b:	push   es
  41d49c:	pop    ss
  41d49d:	dec    edx
  41d49e:	xor    al,0x8d
  41d4a0:	inc    eax
  41d4a1:	push   esi
  41d4a2:	ficom  WORD PTR ds:0xf32a145f
  41d4a8:	aas    
  41d4a9:	mov    ch,0xe8
  41d4ab:	xchg   BYTE PTR [eax],dh
  41d4ad:	repz adc esi,DWORD PTR [edi+0x799b9ce3]
  41d4b4:	xor    ebx,0x928fd1f6
  41d4ba:	and    esp,esi
  41d4bc:	xchg   BYTE PTR ds:0x2730f185,ah
  41d4c2:	adc    ch,BYTE PTR [ecx-0x12]
  41d4c5:	push   ebp
  41d4c7:	xor    cl,BYTE PTR [ebx-0xa3be377]
  41d4cd:	jp     0x41d49d
  41d4cf:	pop    ds
  41d4d0:	cdq    
  41d4d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4d2:	ins    DWORD PTR es:[edi],dx
  41d4d3:	add    DWORD PTR [edi],edi
  41d4d5:	fxch   st(6)
  41d4d7:	dec    ebx
  41d4d8:	mov    ds:0x59541f5d,eax
  41d4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4de:	mov    edx,0xb305bfee
  41d4e3:	lock ret 
  41d4e5:	adc    al,0xb0
  41d4e7:	std    
  41d4e8:	mov    dh,BYTE PTR [ecx-0x60]
  41d4eb:	je     0x41d525
  41d4ed:	xchg   DWORD PTR ds:0x940c4845,ecx
  41d4f3:	lock imul ebx,ecx,0x8f90f991
  41d4fa:	push   0xffffffe1
  41d4fc:	stc    
  41d4fd:	enter  0x16b0,0x7b
  41d501:	outs   dx,BYTE PTR ds:[esi]
  41d502:	arpl   WORD PTR [edx],sp
  41d504:	add    eax,0x90ee2efb
  41d509:	cmp    al,0xe1
  41d50b:	cld    
  41d50c:	sub    bh,BYTE PTR [ecx+0x5f6fd38f]
  41d512:	push   ebx
  41d513:	sub    al,BYTE PTR [ecx-0x7f]
  41d516:	je     0x41d504
  41d518:	xchg   edx,eax
  41d519:	iret   
  41d51a:	mov    ebp,0x208f0285
  41d51f:	test   al,0xec
  41d521:	pop    esp
  41d522:	(bad)  
  41d523:	scas   eax,DWORD PTR es:[edi]
  41d524:	(bad)  
  41d525:	and    BYTE PTR ss:[edi+0xa],ah
  41d529:	inc    edx
  41d52a:	(bad)  
  41d52b:	and    BYTE PTR [ebp-0x49adf8d0],ah
  41d531:	mov    al,0xeb
  41d533:	mov    esi,0x2d42827c
  41d538:	jge    0x41d564
  41d53a:	scas   al,BYTE PTR es:[edi]
  41d53b:	nop
  41d53c:	lds    edi,FWORD PTR [esi]
  41d53e:	xor    BYTE PTR [edi+ecx*2],al
  41d541:	adc    eax,0x62962e0c
  41d546:	and    esi,DWORD PTR [edi-0x7c9da6da]
  41d54c:	cli    
  41d54d:	jecxz  0x41d559
  41d54f:	jae    0x41d59f
  41d551:	imul   ebp,DWORD PTR [ebp+eax*4-0x15212e36],0xc85d3111
  41d55c:	test   dh,0xd4
  41d55f:	fmul   st,st(3)
  41d561:	pop    edx
  41d562:	mov    BYTE PTR [ecx+0x1126ae03],bh
  41d568:	sub    al,0xcb
  41d56a:	pop    edx
  41d56b:	cwde   
  41d56c:	neg    DWORD PTR [edi]
  41d56e:	sub    eax,0x6fde6442
  41d573:	out    0x0,eax
  41d575:	mov    ebp,0x986e7cf8
  41d57a:	into   
  41d57b:	popa   
  41d57c:	sub    eax,0xdd437ae0
  41d581:	jge    0x41d544
  41d583:	xchg   DWORD PTR [edx+0x50de5332],esp
  41d589:	pop    ds
  41d58a:	(bad)  
  41d58b:	aad    0x45
  41d58d:	out    dx,eax
  41d58e:	clc    
  41d58f:	xlat   BYTE PTR ds:[ebx]
  41d590:	in     eax,dx
  41d591:	call   0x5db1:0x7f44f3b2
  41d598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d599:	or     esp,eax
  41d59b:	ds (bad) 
  41d59d:	(bad)  
  41d59e:	in     al,dx
  41d59f:	test   eax,0xc12edff5
  41d5a4:	xor    eax,0x99220c0e
  41d5a9:	loopne 0x41d629
  41d5ab:	mov    ebp,gs
  41d5ad:	or     ah,dl
  41d5af:	outs   dx,DWORD PTR ds:[esi]
  41d5b0:	retf   0x7a6b
  41d5b3:	push   ecx
  41d5b4:	dec    ecx
  41d5b5:	out    dx,eax
  41d5b6:	(bad)  [edi]
  41d5b8:	add    esi,eax
  41d5ba:	(bad)  
  41d5bb:	je     0x41d5f4
  41d5bd:	cmp    al,0xf5
  41d5bf:	mov    DWORD PTR [eax],esp
  41d5c1:	push   esi
  41d5c2:	fwait
  41d5c3:	mov    ah,0xdd
  41d5c5:	sbb    bl,bh
  41d5c7:	ins    BYTE PTR es:[edi],dx
  41d5c8:	cmp    bh,ch
  41d5ca:	retf   0x7e65
  41d5cd:	cmp    al,0x68
  41d5cf:	imul   edi,ecx,0xf983a57d
  41d5d5:	(bad)  
  41d5d6:	(bad)  
  41d5d7:	xchg   ecx,eax
  41d5d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5d9:	mov    ch,0xd6
  41d5db:	pop    edx
  41d5dc:	mov    eax,ds:0x28210d2e
  41d5e1:	jno    0x41d5d5
  41d5e3:	add    BYTE PTR [edx],al
  41d5e5:	and    DWORD PTR [eax],ebp
  41d5e7:	cmp    eax,0xc5c253a8
  41d5ec:	mov    ebx,0xcc8ee8f6
  41d5f1:	xor    eax,0xd90e9b93
  41d5f6:	pop    es
  41d5f7:	or     eax,DWORD PTR [esi]
  41d5f9:	mov    eax,0xb0bfa749
  41d5fe:	pusha  
  41d5ff:	xchg   ebx,eax
  41d600:	imul   esi,DWORD PTR [ecx+0x32],0x6d
  41d604:	ret    
  41d605:	pushf  
  41d606:	mov    edi,0x30eaa746
  41d60b:	xor    bl,BYTE PTR [ebx+ecx*2]
  41d60e:	jne    0x41d654
  41d610:	jns    0x41d634
  41d612:	jb     0x41d5b8
  41d614:	stos   DWORD PTR es:[edi],eax
  41d615:	loopne 0x41d628
  41d617:	and    ah,dh
  41d619:	pop    ss
  41d61a:	mov    bh,0x56
  41d61c:	sbb    BYTE PTR [ebx+0x16],al
  41d61f:	jmp    0xb22417d9
  41d624:	adc    BYTE PTR [edx+ebp*8],0xfa
  41d628:	and    DWORD PTR [edx-0x33],0x29249ac
  41d62f:	mov    edi,0x7aa930a0
  41d634:	jns    0x41d65e
  41d636:	test   BYTE PTR ds:0x82c8ccd4,bh
  41d63c:	shl    DWORD PTR [esi],cl
  41d63e:	mov    DWORD PTR fs:[ebp+0x499362e1],esp
  41d645:	mov    dl,0x7d
  41d647:	jo     0x41d5ea
  41d649:	cmp    BYTE PTR [ebp-0x31e8d90f],al
  41d64f:	jne    0x41d6bd
  41d651:	add    al,0x58
  41d653:	cmp    BYTE PTR [ebp+0x1d],0xac
  41d657:	fs aas 
  41d659:	adc    DWORD PTR [ebx-0xb],ebx
  41d65c:	mov    eax,0xa8e9eb8
  41d661:	(bad)  
  41d662:	outs   dx,BYTE PTR ss:[esi]
  41d664:	xchg   ecx,eax
  41d665:	jp     0x41d6b8
  41d667:	xchg   esp,eax
  41d668:	add    bh,bl
  41d66a:	push   esp
  41d66b:	adc    BYTE PTR [ebx+0x245c1ba4],bh
  41d671:	cs out dx,al
  41d673:	or     ebp,DWORD PTR [ecx+0x6ba9c338]
  41d679:	or     BYTE PTR [edi],ch
  41d67b:	or     edi,esp
  41d67d:	nop
  41d67e:	shl    BYTE PTR [esi],0x2a
  41d681:	iret   
  41d682:	in     eax,dx
  41d683:	cdq    
  41d684:	xlat   BYTE PTR ds:[ebx]
  41d685:	mov    eax,0x740d81f1
  41d68a:	rcl    DWORD PTR [edx+0x40],0x28
  41d68e:	pop    ecx
  41d68f:	dec    ebx
  41d690:	sub    BYTE PTR [ebx+0x4469143c],al
  41d696:	in     eax,0x67
  41d698:	mov    cl,0x55
  41d69a:	shr    BYTE PTR [ebp-0x6cb6d80e],0x0
  41d6a1:	je     0x41d65a
  41d6a3:	ret    
  41d6a4:	adc    BYTE PTR [esp+edi*4],cl
  41d6a7:	xor    esi,DWORD PTR [esi]
  41d6a9:	jmp    FWORD PTR [ebx+0x1e]
  41d6ac:	mov    al,ds:0x4bb6cf18
  41d6b1:	mov    DWORD PTR cs:[eax-0x52],edx
  41d6b5:	add    eax,0x4bb72fc0
  41d6ba:	jmp    0x2cf1:0xa7c20c7d
  41d6c1:	pop    es
  41d6c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6c3:	ret    0xc5cd
  41d6c6:	jg     0x41d733
  41d6c8:	aaa    
  41d6c9:	adc    BYTE PTR [eax-0x3a],al
  41d6cc:	adc    eax,0xf74bfa47
  41d6d1:	icebp  
  41d6d2:	fwait
  41d6d3:	int    0x77
  41d6d5:	fbstp  TBYTE PTR [ebx]
  41d6d7:	pause  
  41d6d9:	sub    BYTE PTR ss:[edx-0xd97c5bb],dh
  41d6e0:	in     eax,dx
  41d6e1:	mov    ah,0xb8
  41d6e3:	sub    DWORD PTR [edx],0xffffff89
  41d6e6:	mov    edx,0x79c353a5
  41d6eb:	dec    edi
  41d6ec:	dec    esi
  41d6ed:	in     eax,0x59
  41d6ef:	sahf   
  41d6f0:	pop    ds
  41d6f1:	shr    BYTE PTR [ecx],cl
  41d6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6f4:	jbe    0x41d745
  41d6f6:	pushf  
  41d6f7:	xchg   esi,eax
  41d6f8:	or     cl,ah
  41d6fa:	rcl    BYTE PTR [eax-0x269abcca],cl
  41d700:	push   edi
  41d701:	push   ds
  41d702:	sub    BYTE PTR [ebx],bh
  41d704:	pop    edx
  41d705:	mov    ebp,0x5a4beaaa
  41d70a:	xchg   edi,eax
  41d70b:	adc    al,0x14
  41d70d:	push   es
  41d70e:	cmp    DWORD PTR [ebx+ecx*1],ecx
  41d711:	imul   edi,DWORD PTR [edx+esi*8-0x3fede70b],0xe
  41d719:	or     ebp,ebx
  41d71b:	cmp    dl,bh
  41d71d:	add    ah,BYTE PTR [ecx-0x4f]
  41d720:	icebp  
  41d721:	mov    bl,0x8c
  41d723:	pop    ds
  41d724:	mov    ah,0x33
  41d726:	test   BYTE PTR [edx],dh
  41d728:	jb     0x41d716
  41d72a:	jo     0x41d713
  41d72c:	pusha  
  41d72d:	inc    esp
  41d72e:	sub    ah,ch
  41d730:	idiv   edx
  41d732:	push   0x4eec21c4
  41d737:	or     edi,edi
  41d739:	xor    dh,BYTE PTR [edx]
  41d73b:	mov    dl,0x9a
  41d73d:	push   ebx
  41d73e:	dec    eax
  41d73f:	mov    eax,fs
  41d741:	push   edx
  41d742:	gs jbe 0x41d772
  41d745:	(bad)  
  41d746:	fbld   TBYTE PTR [ecx-0x36]
  41d749:	inc    ecx
  41d74a:	jl     0x41d71b
  41d74c:	fsubr  DWORD PTR [ebp-0x58]
  41d74f:	in     al,dx
  41d750:	ret    
  41d751:	sub    edi,ebx
  41d753:	test   dh,0xfb
  41d756:	neg    ebx
  41d758:	clc    
  41d759:	enter  0x84d9,0xd0
  41d75d:	adc    al,0x63
  41d75f:	loopne 0x41d782
  41d761:	js     0x41d78a
  41d763:	stos   DWORD PTR es:[edi],eax
  41d764:	stos   BYTE PTR es:[edi],al
  41d765:	int    0x3
  41d767:	vpsllq xmm0,xmm3,xmm6
  41d76b:	repnz in eax,dx
  41d76d:	xchg   ebx,eax
  41d76e:	div    BYTE PTR [ebp-0x61]
  41d771:	inc    ecx
  41d772:	dec    esi
  41d773:	cmp    al,0x1b
  41d775:	fwait
  41d776:	cmp    al,0x41
  41d778:	(bad)  
  41d779:	xor    eax,0x399ef877
  41d77e:	pop    ebx
  41d77f:	cmp    DWORD PTR [ebp-0x7c17d50f],eax
  41d785:	jg     0x41d789
  41d787:	pop    ss
  41d788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d789:	fadd   QWORD PTR [edi-0x27]
  41d78c:	icebp  
  41d78d:	sub    dl,BYTE PTR [ecx-0x6f]
  41d790:	adc    al,0xae
  41d792:	dec    ebx
  41d793:	fisttp WORD PTR [eax-0xcc57a10]
  41d799:	sbb    ah,dh
  41d79b:	fs jmp 0x91a4:0x83a996fc
  41d7a3:	jmp    0x44bf:0x57e475f8
  41d7aa:	jecxz  0x41d7b1
  41d7ac:	mov    al,0xa4
  41d7ae:	test   DWORD PTR [esi+0x4265fb68],0xf8b6af33
  41d7b8:	mov    al,0xb8
  41d7ba:	cmp    al,0xcc
  41d7bc:	and    eax,0xe101e
  41d7c1:	inc    ebp
  41d7c2:	cli    
  41d7c3:	mov    al,ds:0xf4379496
  41d7c8:	sbb    al,0xc5
  41d7ca:	pop    esi
  41d7cb:	shl    eax,cl
  41d7cd:	in     al,dx
  41d7ce:	inc    esi
  41d7cf:	sar    al,1
  41d7d1:	jns    0x41d79d
  41d7d3:	cmp    eax,DWORD PTR [esi+0x4354962e]
  41d7d9:	retf   0x4cd9
  41d7dc:	adc    edx,DWORD PTR [ebx+0x7e]
  41d7df:	popf   
  41d7e0:	call   0xa7b13981
  41d7e5:	jmp    0x41d80a
  41d7e7:	scas   al,BYTE PTR es:[edi]
  41d7e8:	loope  0x41d840
  41d7ea:	fisub  WORD PTR [edi+0x5070b308]
  41d7f0:	sbb    al,dh
  41d7f2:	loopne 0x41d78e
  41d7f4:	cmp    eax,0xbd125865
  41d7f9:	rcl    DWORD PTR [ebx],1
  41d7fb:	inc    esp
  41d7fc:	enter  0x1be6,0x7e
  41d800:	add    esp,DWORD PTR [eax+0x6de32785]
  41d806:	adc    ch,BYTE PTR [esi-0x77]
  41d809:	jbe    0x41d7aa
  41d80b:	repnz pop edi
  41d80d:	dec    ebx
  41d80e:	mov    ebp,0x8cd3b3dd
  41d813:	xlat   BYTE PTR ds:[ebx]
  41d814:	dec    ebp
  41d815:	jbe    0x41d81e
  41d817:	adc    DWORD PTR [esi+eiz*8+0x18],ebp
  41d81b:	mov    edi,0x8c48ee05
  41d820:	retf   0x9197
  41d823:	sub    al,0x2
  41d825:	loope  0x41d7e0
  41d827:	pop    ebp
  41d828:	jnp    0x41d819
  41d82a:	mov    bh,0x4b
  41d82c:	sbb    esp,DWORD PTR [edi]
  41d82e:	jge    0x41d7fd
  41d830:	dec    eax
  41d831:	ret    
  41d832:	sbb    eax,0x84fe6618
  41d837:	ret    0x1cb3
  41d83a:	(bad)  
  41d83b:	int3   
  41d83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d83d:	dec    ebx
  41d83e:	dec    ebx
  41d83f:	ret    0x467b
  41d842:	pop    ebx
  41d843:	sti    
  41d844:	inc    ebx
  41d845:	cs ror cl,cl
  41d848:	adc    BYTE PTR [ebx+0xc82c613],0xcf
  41d84f:	and    eax,0x7c6e92b7
  41d854:	cmp    DWORD PTR [esi+0x6f],0xffffffaf
  41d858:	call   0xc1de:0xe871a607
  41d85f:	dec    edi
  41d860:	out    dx,al
  41d861:	cmp    DWORD PTR [edi+0x73ff6e46],eax
  41d867:	test   DWORD PTR [esi-0x7367baa1],edx
  41d86d:	cli    
  41d86e:	pusha  
  41d86f:	stos   BYTE PTR es:[edi],al
  41d870:	dec    esi
  41d871:	jecxz  0x41d818
  41d873:	cwde   
  41d874:	test   eax,0x4c618bb
  41d879:	test   DWORD PTR [eax+0x23],ebp
  41d87c:	sbb    al,0x88
  41d87e:	push   edx
  41d87f:	ins    DWORD PTR es:[edi],dx
  41d880:	icebp  
  41d881:	jae    0x41d8d8
  41d883:	jns    0x41d86b
  41d885:	imul   edx,DWORD PTR [ecx+0x54aef66c],0xb26cca0b
  41d88f:	lea    edx,[ecx+edx*1-0x7b]
  41d893:	int    0x30
  41d895:	addr16 xchg ecx,eax
  41d897:	jo     0x41d830
  41d899:	js     0x41d8f8
  41d89b:	pop    edi
  41d89c:	out    0xfe,al
  41d89e:	fcom   QWORD PTR [edi-0x1d75f54e]
  41d8a4:	in     eax,dx
  41d8a5:	jle    0x41d916
  41d8a7:	xchg   esp,eax
  41d8a8:	nop
  41d8a9:	jb     0x41d83d
  41d8ab:	pop    ebx
  41d8ac:	pushf  
  41d8ad:	ror    BYTE PTR [ecx+0x3e7f661a],0x51
  41d8b4:	mov    ecx,0xcddbf3c6
  41d8b9:	cs int 0x83
  41d8bc:	es in  al,dx
  41d8be:	ror    DWORD PTR [edx],cl
  41d8c0:	scas   eax,DWORD PTR es:[edi]
  41d8c1:	into   
  41d8c2:	daa    
  41d8c3:	sbb    ch,BYTE PTR [edx]
  41d8c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c6:	or     BYTE PTR [edi-0x42],dl
  41d8c9:	push   edx
  41d8ca:	jnp    0x41d91e
  41d8cc:	aaa    
  41d8cd:	adc    bl,BYTE PTR [edx+0x5]
  41d8d0:	js     0x41d8e9
  41d8d2:	push   esi
  41d8d3:	shl    dh,0x20
  41d8d6:	add    eax,0xb603febc
  41d8db:	sbb    al,0x2
  41d8dd:	jecxz  0x41d914
  41d8df:	xchg   esp,eax
  41d8e0:	aaa    
  41d8e1:	sub    BYTE PTR [ebx-0x58],bl
  41d8e4:	jb     0x41d885
  41d8e6:	test   al,0xd3
  41d8e8:	xor    al,0xd8
  41d8ea:	sbb    BYTE PTR es:[ebx-0x289cc9e7],cl
  41d8f1:	sti    
  41d8f2:	pop    esi
  41d8f3:	xchg   edi,eax
  41d8f4:	hlt    
  41d8f5:	or     ah,BYTE PTR [ebx]
  41d8f7:	add    ah,BYTE PTR [edx]
  41d8f9:	inc    ebp
  41d8fa:	std    
  41d8fb:	cmp    DWORD PTR [edx],esp
  41d8fd:	pop    ebx
  41d8fe:	and    BYTE PTR [ebp+0x76],ah
  41d901:	sbb    al,0xf0
  41d903:	push   ds
  41d904:	adc    edx,ecx
  41d906:	adc    dl,BYTE PTR [eax+0x53]
  41d909:	mov    edx,0xa9a37134
  41d90e:	dec    eax
  41d90f:	jmp    0x8810:0xa4c9e792
  41d916:	loopne 0x41d915
  41d918:	aam    0x83
  41d91a:	bound  ebp,QWORD PTR [ebp+0x2f]
  41d91d:	std    
  41d91e:	loop   0x41d8ec
  41d920:	int3   
  41d921:	sub    al,0x52
  41d923:	sbb    edx,DWORD PTR [ebx]
  41d925:	pushf  
  41d926:	popa   
  41d927:	xchg   esp,eax
  41d928:	outs   dx,DWORD PTR ds:[esi]
  41d929:	add    ecx,DWORD PTR [edx+0x73]
  41d92c:	retf   0x60f6
  41d92f:	jno    0x41d8ca
  41d931:	clc    
  41d932:	leave  
  41d933:	cli    
  41d934:	jbe    0x41d99a
  41d936:	xor    eax,0xf977505b
  41d93b:	enter  0x38d4,0xee
  41d93f:	fist   WORD PTR [ecx-0x72169567]
  41d945:	push   ecx
  41d946:	adc    eax,0xf013d415
  41d94b:	jmp    0xb013d33
  41d950:	lea    ebx,[ecx+0x3f]
  41d953:	pmaxsw mm0,QWORD PTR [ecx]
  41d956:	fsub   QWORD PTR [edi]
  41d958:	mov    bl,0x9f
  41d95a:	repnz aas 
  41d95c:	dec    ebx
  41d95d:	fld    TBYTE PTR [edi-0x27cfbe7f]
  41d963:	jg     0x41d8fd
  41d965:	pop    ss
  41d966:	into   
  41d967:	call   0x77bc:0x1b44c26d
  41d96e:	pop    ecx
  41d96f:	adc    eax,DWORD PTR [eax-0x765bc5b0]
  41d975:	mov    ecx,0xd4bc076b
  41d97a:	xlat   BYTE PTR ds:[ebx]
  41d97b:	cmp    edx,DWORD PTR [eax+0x183e5ce0]
  41d981:	dec    edi
  41d982:	xor    esp,DWORD PTR [esi+0x4fbcc0fd]
  41d988:	in     eax,0xed
  41d98a:	or     dl,dl
  41d98c:	retf   0x9e44
  41d98f:	les    ebx,FWORD PTR [ebx]
  41d991:	mov    ds:0xde8af453,eax
  41d996:	inc    eax
  41d997:	shl    BYTE PTR [esi],1
  41d999:	mov    esp,0xc1534189
  41d99e:	inc    esp
  41d99f:	shl    DWORD PTR [esi+ebx*2-0x41],1
  41d9a3:	ss shl ecx,0x51
  41d9a7:	xor    esp,ecx
  41d9a9:	xchg   edi,eax
  41d9aa:	sti    
  41d9ab:	(bad)
  41d9ae:	jno    0x41d931
  41d9b0:	das    
  41d9b1:	mov    eax,0x952012fd
  41d9b6:	add    ah,0xed
  41d9b9:	push   esp
  41d9ba:	enter  0x700c,0x3c
  41d9be:	xor    BYTE PTR [edi+0x6e],dh
  41d9c1:	or     eax,0x1cbb829e
  41d9c6:	mov    DWORD PTR [esi+ebx*4+0x47c60da8],edx
  41d9cd:	aad    0x3e
  41d9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9d0:	mov    ecx,0x135baaff
  41d9d5:	jb     0x41d985
  41d9d7:	cmp    ecx,esp
  41d9d9:	bound  edi,QWORD PTR [esi+esi*2+0x6e2674f6]
  41d9e0:	adc    al,0xb4
  41d9e3:	mov    cl,0x3f
  41d9e5:	enter  0x4379,0xc4
  41d9e9:	(bad)  
  41d9ea:	xor    bh,cl
  41d9ec:	call   0xec3c9549
  41d9f1:	mov    ah,BYTE PTR [eax-0x7f5a1c1a]
  41d9f7:	jmp    0xfc64e2a1
  41d9fc:	mov    eax,0x79a38182
  41da01:	adc    eax,0xe831f03e
  41da06:	cmp    ecx,esp
  41da08:	mov    WORD PTR [ebx+0x50],?
  41da0b:	gs icebp 
  41da0d:	je     0x41da27
  41da0f:	mov    al,ds:0xc26a633e
  41da14:	push   esp
  41da15:	shl    edx,1
  41da17:	mov    bl,0x74
  41da19:	jmp    0xa2b92c50
  41da1e:	sub    al,0x3a
  41da20:	sbb    DWORD PTR [eax+0x20],eax
  41da23:	or     eax,0x9cbfabdc
  41da28:	outs   dx,DWORD PTR ds:[esi]
  41da29:	clc    
  41da2a:	dec    edi
  41da2b:	mov    edi,0x74b53d11
  41da30:	test   DWORD PTR [ebx+0x41856fb8],eax
  41da36:	add    bl,al
  41da38:	jl     0x41d9de
  41da3a:	fld    QWORD PTR [edx-0x8]
  41da3d:	jns    0x41da16
  41da3f:	and    bl,BYTE PTR [esi+0x63]
  41da42:	sub    esi,DWORD PTR [ebx-0x68]
  41da45:	pop    ds
  41da46:	pushf  
  41da47:	cmp    BYTE PTR [ecx-0xc],0x54
  41da4b:	xchg   edi,edi
  41da4d:	rol    dh,1
  41da4f:	jae    0x41dac2
  41da51:	sbb    ecx,DWORD PTR [edx]
  41da53:	stc    
  41da54:	jbe    0x41da7d
  41da56:	jle    0x41da75
  41da58:	jb     0x41dab1
  41da5a:	add    BYTE PTR [ecx],bl
  41da5c:	fs xor eax,0x68f5554
  41da62:	retf   
  41da63:	scas   eax,DWORD PTR es:[edi]
  41da64:	xchg   DWORD PTR [esi],eax
  41da66:	test   DWORD PTR [edx],ebp
  41da68:	cmp    eax,0x6c4c71f3
  41da6d:	mov    DWORD PTR [ecx-0x536103fb],ecx
  41da73:	cs push esi
  41da75:	xchg   ebp,eax
  41da76:	dec    edx
  41da77:	mov    edi,0x13ee15bf
  41da7c:	sbb    eax,0x37059224
  41da81:	stos   DWORD PTR es:[edi],eax
  41da82:	fidivr DWORD PTR [ecx+edx*8]
  41da85:	add    eax,0x11cc017f
  41da8a:	jno    0x41da3a
  41da8c:	shr    edi,0x49
  41da8f:	sbb    DWORD PTR [ecx+ecx*1+0x1eb82e0e],0x76589cbf
  41da9a:	mov    WORD PTR [eax+ebx*8],ss
  41da9d:	(bad)  
  41da9e:	sbb    al,0x11
  41daa0:	sub    BYTE PTR [edi],ah
  41daa2:	scas   eax,DWORD PTR es:[edi]
  41daa3:	shl    DWORD PTR [eax],cl
  41daa5:	and    edx,ebp
  41daa7:	adc    ch,BYTE PTR [edx-0x37]
  41daaa:	lods   eax,DWORD PTR ds:[esi]
  41daab:	mov    esp,esp
  41daad:	pop    esi
  41daae:	cs es nop
  41dab1:	scas   eax,DWORD PTR es:[edi]
  41dab2:	das    
  41dab3:	mov    eax,ds:0xc73c7382
  41dab8:	enter  0xb33d,0xed
  41dabc:	ss out 0x5b,eax
  41dabf:	mov    cl,0x1c
  41dac1:	adc    edx,DWORD PTR [ebx-0x6e]
  41dac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dac5:	scas   eax,DWORD PTR es:[edi]
  41dac6:	dec    edx
  41dac7:	popf   
  41dac8:	rol    DWORD PTR [edi],0x9b
  41dacb:	inc    eax
  41dacc:	in     eax,0xeb
  41dace:	xor    BYTE PTR [ebp+0x4d],ah
  41dad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dad2:	scas   eax,DWORD PTR es:[edi]
  41dad3:	std    
  41dad4:	and    cl,BYTE PTR [ecx+0x67c8afc]
  41dada:	dec    edi
  41dadb:	fld    TBYTE PTR [edx]
  41dadd:	xor    cl,ch
  41dadf:	sbb    eax,0x4b1d0664
  41dae4:	dec    eax
  41dae5:	sahf   
  41dae6:	add    al,0x10
  41dae8:	mov    ch,0xc5
  41daea:	(bad)  
  41daeb:	bound  esp,QWORD PTR [ecx-0x3bbddf]
  41daf1:	pop    ebp
  41daf2:	push   ebp
  41daf3:	jg     0x41da9d
  41daf5:	cmp    BYTE PTR [edi-0x8],cl
  41daf8:	cmp    al,0xbf
  41dafa:	adc    eax,0x159bd0f3
  41daff:	add    al,0x13
  41db01:	call   0x2a7a:0x446295f6
  41db08:	add    al,0x42
  41db0a:	fadd   st,st(4)
  41db0c:	bound  esi,QWORD PTR [edx]
  41db0e:	popa   
  41db0f:	lock mov esi,0xfd7009b4
  41db15:	sub    cl,cl
  41db17:	mov    edi,0x49613ce1
  41db1c:	mov    dl,0x91
  41db1e:	fisub  WORD PTR ds:0xfcc503ce
  41db24:	out    0x41,al
  41db26:	(bad)  
  41db27:	xchg   esp,eax
  41db28:	add    al,0x64
  41db2a:	xor    al,0x51
  41db2c:	and    DWORD PTR [ebp+0x78],eax
  41db2f:	or     al,0x2
  41db31:	pop    esi
  41db32:	test   DWORD PTR [ebx-0x44],ecx
  41db35:	ins    DWORD PTR es:[edi],dx
  41db36:	push   ecx
  41db37:	sub    al,BYTE PTR [esi]
  41db39:	mov    al,0x57
  41db3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db3c:	dec    ecx
  41db3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db3e:	aaa    
  41db3f:	xchg   ebp,eax
  41db40:	fwait
  41db41:	out    0xf,al
  41db43:	sub    bl,BYTE PTR [ecx-0x441d86b5]
  41db49:	jns    0x41dbba
  41db4b:	popa   
  41db4c:	inc    edi
  41db4d:	jno    0x41daf4
  41db4f:	jnp    0x41dbc4
  41db51:	sbb    bh,bh
  41db53:	js     0x41dbba
  41db55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db56:	jmp    0x9eb9:0x84836be8
  41db5d:	mov    al,ds:0x69fd1fb7
  41db62:	fdiv   QWORD PTR [edx+0x2a]
  41db65:	inc    ebp
  41db66:	fnstsw WORD PTR [ebx]
  41db68:	int    0xd2
  41db6a:	dec    ecx
  41db6b:	pop    ss
  41db6c:	repz adc BYTE PTR [ecx],ch
  41db6f:	mov    ebp,0x922016fc
  41db74:	movq   QWORD PTR [edx-0x2486f4ec],mm3
  41db7b:	lds    ecx,FWORD PTR [ebp+0x4d357e9]
  41db81:	hlt    
  41db82:	mov    ecx,0xa1f74a17
  41db87:	jbe    0x41dbf9
  41db89:	aad    0x1d
  41db8b:	fmul   DWORD PTR [eax]
  41db8d:	gs test edi,ebx
  41db90:	or     al,0xae
  41db92:	fwait
  41db93:	sub    ebp,DWORD PTR [eax+esi*1+0x572ab49e]
  41db9a:	mov    ecx,0x43b2ff95
  41db9f:	outs   dx,DWORD PTR ds:[esi]
  41dba0:	inc    ebp
  41dba1:	sbb    ecx,DWORD PTR [edi-0x13]
  41dba4:	shr    BYTE PTR cs:[ebp+0x4a],cl
  41dba8:	add    BYTE PTR [esi+0x212683c9],0xe6
  41dbaf:	mov    ah,0xe1
  41dbb1:	ss loopne 0x41db34
  41dbb4:	add    ebp,esi
  41dbb6:	xlat   BYTE PTR ds:[ebx]
  41dbb7:	outs   dx,BYTE PTR ds:[esi]
  41dbb8:	jp     0x41dbbc
  41dbba:	inc    edx
  41dbbb:	jnp    0x41dbb2
  41dbbd:	bound  edi,QWORD PTR [ebx]
  41dbbf:	push   ecx
  41dbc0:	adc    bl,dh
  41dbc2:	and    DWORD PTR [esi+0x37],0x25
  41dbc6:	pusha  
  41dbc7:	xor    BYTE PTR ds:0xd4cf2fd0,ah
  41dbcd:	test   al,0x1
  41dbcf:	loop   0x41dc2d
  41dbd1:	addr16 cdq 
  41dbd3:	push   esi
  41dbd4:	iret   
  41dbd5:	dec    ebp
  41dbd6:	jge    0x41db75
  41dbd8:	ds aam 0x2f
  41dbdb:	aas    
  41dbdc:	les    edi,FWORD PTR [ecx-0x38275eb9]
  41dbe2:	(bad)  
  41dbe4:	cdq    
  41dbe5:	leave  
  41dbe6:	cmp    bh,BYTE PTR [ebx+0xe]
  41dbe9:	ret    
  41dbea:	sub    DWORD PTR [eax+eiz*4-0x524bc12f],esi
  41dbf1:	push   es
  41dbf2:	push   eax
  41dbf3:	pusha  
  41dbf4:	xchg   ebx,eax
  41dbf5:	dec    eax
  41dbf6:	into   
  41dbf7:	jb     0x41db8a
  41dbf9:	push   eax
  41dbfa:	mov    ds:0xd975d985,eax
  41dbff:	mov    ds:0x961105be,eax
  41dc04:	push   esi
  41dc05:	add    al,0xe1
  41dc07:	push   ebx
  41dc08:	mov    al,0xe1
  41dc0a:	dec    esi
  41dc0b:	push   esi
  41dc0c:	xor    eax,0x1a3ee213
  41dc11:	dec    edx
  41dc12:	jge    0x41db94
  41dc14:	or     dl,BYTE PTR [eax+ebp*2+0xa]
  41dc18:	ror    BYTE PTR [ebx-0x19820747],cl
  41dc1e:	fistp  WORD PTR [edx-0x60885e2f]
  41dc24:	sub    al,0xf1
  41dc26:	pop    ds
  41dc27:	sar    ecx,cl
  41dc29:	lods   eax,DWORD PTR ds:[esi]
  41dc2a:	cmp    eax,0x1404adab
  41dc2f:	sub    al,0x24
  41dc31:	jl     0x41dc09
  41dc33:	sbb    cl,ah
  41dc35:	adc    ebp,DWORD PTR [ecx+edx*4-0x14]
  41dc39:	push   ebx
  41dc3a:	jne    0x41dbf6
  41dc3c:	fs call 0xcd6dc288
  41dc42:	pushf  
  41dc43:	mov    ds:0xaf77a257,al
  41dc48:	mov    DWORD PTR [edx+0x7180b5a2],ebp
  41dc4e:	into   
  41dc4f:	idiv   ch
  41dc51:	and    DWORD PTR [ecx],0x6b
  41dc54:	fcmovnu st,st(1)
  41dc56:	push   eax
  41dc57:	sti    
  41dc58:	sbb    ebx,eax
  41dc5a:	or     eax,0xc3479ba3
  41dc5f:	imul   edx,ecx,0xa36edb03
  41dc65:	push   eax
  41dc66:	(bad)  
  41dc67:	mov    al,ds:0x932cec62
  41dc6d:	ret    
  41dc6e:	mul    esi
  41dc70:	sub    al,0x50
  41dc72:	std    
  41dc73:	pushf  
  41dc74:	xlat   BYTE PTR ds:[ebx]
  41dc75:	ss dec ecx
  41dc77:	sub    bl,BYTE PTR [ecx+edx*8+0x4741df3e]
  41dc7e:	pop    ds
  41dc7f:	aas    
  41dc80:	mov    ch,0xb4
  41dc82:	das    
  41dc83:	dec    eax
  41dc84:	nop
  41dc85:	in     al,0xf1
  41dc87:	rol    BYTE PTR [edi-0xb],1
  41dc8a:	jbe    0x41dcef
  41dc8c:	jb     0x41dc67
  41dc8e:	aad    0x24
  41dc90:	dec    ebx
  41dc91:	sti    
  41dc92:	mov    WORD PTR [ebp+eax*4-0x3cb42241],es
  41dc99:	mov    ds:0xc3d86ff9,eax
  41dc9e:	arpl   di,bp
  41dca0:	xchg   edi,eax
  41dca1:	pusha  
  41dca2:	cld    
  41dca3:	std    
  41dca4:	sub    eax,0xaa6b8816
  41dca9:	sbb    al,0x1b
  41dcab:	pop    ss
  41dcac:	xchg   DWORD PTR [esi-0x65],edx
  41dcaf:	std    
  41dcb0:	jo     0x41dcd5
  41dcb2:	push   cs
  41dcb3:	mov    edi,0x8fbbd933
  41dcb8:	push   ebp
  41dcb9:	mov    eax,DWORD PTR [edi+ecx*4+0x24]
  41dcbd:	ror    DWORD PTR [ebx],cl
  41dcbf:	fld    TBYTE PTR ds:0xc1661b57
  41dcc5:	add    eax,0x49e271a9
  41dcca:	sti    
  41dccb:	fimul  DWORD PTR [edx]
  41dccd:	adc    DWORD PTR [ebp+0x31],eax
  41dcd0:	push   cs
  41dcd1:	or     cl,BYTE PTR [ecx+0xe]
  41dcd4:	jo     0x41dd02
  41dcd6:	mov    ?,WORD PTR [ebx]
  41dcd8:	and    al,0xc5
  41dcda:	std    
  41dcdb:	xor    dh,BYTE PTR [esi+0xe939c0d]
  41dce1:	adc    DWORD PTR [edi],edx
  41dce3:	xor    eax,0xb502b35f
  41dce8:	mov    DWORD PTR [ebx+0x4e2d2818],esp
  41dcee:	cmp    eax,edi
  41dcf0:	ret    0x9e9b
  41dcf3:	add    edi,edx
  41dcf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcf6:	mov    ch,0xe0
  41dcf8:	sti    
  41dcf9:	hlt    
  41dcfa:	cmp    dl,BYTE PTR [ecx]
  41dcfc:	fldenv [eax-0x595318d7]
  41dd02:	inc    esi
  41dd03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd04:	sub    dl,ah
  41dd06:	rcl    BYTE PTR [ecx-0x3d696a5],1
  41dd0c:	xchg   esi,eax
  41dd0d:	push   ebx
  41dd0e:	push   eax
  41dd0f:	cmc    
  41dd10:	inc    ebx
  41dd11:	xchg   BYTE PTR [ebx-0x242b7868],ah
  41dd17:	js     0x41dd47
  41dd19:	ret    
  41dd1a:	mov    esp,0xc219df6b
  41dd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd20:	jmp    0x41dd54
  41dd22:	pop    eax
  41dd23:	dec    ebx
  41dd24:	aaa    
  41dd25:	xchg   esi,eax
  41dd26:	hlt    
  41dd27:	lahf   
  41dd28:	cmp    BYTE PTR [ecx],bh
  41dd2a:	jle    0x41dd7f
  41dd2c:	out    dx,al
  41dd2d:	(bad)  
  41dd2e:	pop    edx
  41dd2f:	aaa    
  41dd30:	rcl    DWORD PTR [edx+eiz*4+0x757b007d],cl
  41dd37:	(bad)  
  41dd38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd39:	fbstp  TBYTE PTR [edx+eiz*1+0x2c]
  41dd3d:	dec    edi
  41dd3e:	fisttp WORD PTR [ebx-0x65]
  41dd41:	xchg   DWORD PTR [edx-0xb],ebx
  41dd44:	imul   ebp,ecx,0x65f91712
  41dd4a:	add    DWORD PTR [ecx-0x27],eax
  41dd4d:	cmp    al,0xa7
  41dd4f:	rol    BYTE PTR [eax+0x7b640f9d],cl
  41dd55:	aad    0x20
  41dd57:	arpl   WORD PTR [ebx-0x6e063102],sp
  41dd5d:	call   0x84a2:0xde875dc0
  41dd64:	dec    eax
  41dd65:	daa    
  41dd66:	and    bh,BYTE PTR [edi-0x7b005d2d]
  41dd6c:	lds    eax,FWORD PTR [ebx-0x19]
  41dd6f:	scas   eax,DWORD PTR es:[edi]
  41dd70:	push   eax
  41dd71:	ins    DWORD PTR es:[edi],dx
  41dd72:	jae    0x41dd42
  41dd74:	or     al,0xe7
  41dd76:	into   
  41dd77:	(bad)  
  41dd79:	test   edi,esi
  41dd7b:	xchg   ecx,eax
  41dd7c:	fnstenv [ebx-0x4e]
  41dd7f:	mov    ah,0x4b
  41dd81:	and    edi,DWORD PTR [ebx-0x2c]
  41dd84:	mov    ebp,0xa20ef82f
  41dd89:	fimul  DWORD PTR [edi]
  41dd8b:	sub    BYTE PTR [ecx-0x35774057],cl
  41dd91:	jno    0x41dd51
  41dd93:	fwait
  41dd94:	test   al,0xf4
  41dd96:	xchg   BYTE PTR [ebp+0x4b9e36fe],cl
  41dd9c:	outs   dx,BYTE PTR ds:[esi]
  41dd9d:	add    DWORD PTR [eax-0x7fd03195],eax
  41dda3:	add    al,0x72
  41dda5:	mov    ds:0x26562c32,al
  41ddaa:	mov    ?,WORD PTR [ecx+0x6a373ca8]
  41ddb0:	push   ds
  41ddb1:	jnp    0x41ddbf
  41ddb3:	mov    esp,0x4cb7eafc
  41ddb8:	sbb    bl,bl
  41ddba:	push   es
  41ddbb:	ror    edi,0xb2
  41ddbe:	add    DWORD PTR [edx+0x63e2f206],0xef7099f0
  41ddc8:	jno    0x41dda0
  41ddca:	jge    0x41de40
  41ddcc:	push   ebp
  41ddcd:	js     0x41de0b
  41ddcf:	add    DWORD PTR [eax+0x3317f33f],edi
  41ddd5:	mov    ecx,0x9e1faa29
  41ddda:	leave  
  41dddb:	loop   0x41de0e
  41dddd:	sub    eax,0x992d35d9
  41dde2:	shr    DWORD PTR [eax],1
  41dde4:	jge    0x41ddba
  41dde6:	jnp    0x41dde4
  41dde8:	push   ebx
  41dde9:	inc    eax
  41ddea:	push   0xffffffc4
  41ddec:	retf   0x7838
  41ddef:	arpl   si,di
  41ddf1:	fcomi  st,st(1)
  41ddf3:	and    DWORD PTR [eax+ebp*4+0x41],ecx
  41ddf7:	retf   0x66c8
  41ddfa:	adc    eax,0xd28f4555
  41ddff:	jne    0x41de80
  41de01:	fwait
  41de02:	rcl    bh,cl
  41de04:	mov    ch,BYTE PTR [esi-0x67]
  41de07:	icebp  
  41de08:	and    al,0xe2
  41de0a:	sahf   
  41de0b:	push   es
  41de0c:	cwde   
  41de0d:	jo     0x41de45
  41de0f:	fstp   st(0)
  41de11:	and    al,0xe1
  41de13:	les    esi,FWORD PTR [esp+ebx*8-0x62]
  41de17:	(bad)  
  41de19:	sti    
  41de1a:	sahf   
  41de1b:	push   ss
  41de1c:	lods   eax,DWORD PTR ds:[esi]
  41de1d:	into   
  41de1e:	xchg   edx,eax
  41de1f:	rcl    DWORD PTR [ecx],0x19
  41de22:	pop    esi
  41de23:	mov    bl,0x4
  41de25:	lock add ebx,ebx
  41de28:	ss sub bh,dh
  41de2b:	dec    eax
  41de2c:	shl    cl,1
  41de2e:	dec    ecx
  41de2f:	sub    BYTE PTR [ebx+edi*2+0x7c],al
  41de33:	int3   
  41de34:	cld    
  41de35:	xchg   ebx,eax
  41de36:	mov    bh,0x39
  41de38:	jb     0x41ddf1
  41de3a:	jb     0x41de76
  41de3c:	sbb    ch,ah
  41de3e:	adc    BYTE PTR [eax-0x7],0xbd
  41de42:	cmc    
  41de43:	shr    DWORD PTR ds:0x94312827,0x23
  41de4a:	cmp    BYTE PTR [edx+0x345e556f],0xfd
  41de51:	aaa    
  41de52:	les    edx,FWORD PTR [esi]
  41de54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de55:	adc    eax,0xcacfaf17
  41de5a:	scas   eax,DWORD PTR es:[edi]
  41de5b:	fcomp  st(5)
  41de5d:	adc    DWORD PTR [ebp+0x6c],esp
  41de60:	into   
  41de61:	call   0xcd4f095d
  41de66:	ret    
  41de67:	or     bh,dh
  41de69:	pop    ss
  41de6a:	loopne 0x41dec3
  41de6c:	mov    cl,0x27
  41de6e:	ss jmp 0x6801:0x599591ef
  41de76:	popa   
  41de77:	sbb    eax,0xc0f9affd
  41de7c:	ss (bad) 
  41de7e:	ins    BYTE PTR es:[edi],dx
  41de7f:	and    DWORD PTR [eax+0x9],edx
  41de82:	in     al,0xe2
  41de84:	push   ss
  41de85:	mov    dl,0x76
  41de87:	xor    ebx,DWORD PTR [ebp-0x6def176d]
  41de8d:	inc    edx
  41de8e:	pop    eax
  41de8f:	push   edi
  41de90:	push   esi
  41de91:	mov    BYTE PTR [ebx-0x552965c4],0x12
  41de98:	mov    dh,0xe6
  41de9a:	add    edx,esp
  41de9c:	mov    esp,0x7e8dfba4
  41dea1:	outs   dx,DWORD PTR ds:[esi]
  41dea2:	xchg   DWORD PTR [esi+0x1c],ecx
  41dea5:	jg     0x41de48
  41dea7:	cli    
  41dea8:	stos   BYTE PTR es:[edi],al
  41dea9:	test   DWORD PTR [eax-0x53],edx
  41deac:	fwait
  41dead:	(bad)  
  41deae:	sbb    edi,DWORD PTR [esi-0x17f6823d]
  41deb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41deb5:	out    dx,eax
  41deb6:	mov    edx,0x8bfc9fc9
  41debb:	adc    al,0xce
  41debd:	jle    0x41debc
  41debf:	dec    ebx
  41dec0:	pusha  
  41dec1:	test   eax,0x415b71d0
  41dec6:	adc    BYTE PTR [ebp+0x2ebdd2b7],cl
  41decc:	inc    di
  41dece:	adc    BYTE PTR [esi+esi*1+0x1e],dh
  41ded2:	xchg   esp,eax
  41ded3:	jmp    0x3dc33912
  41ded8:	sub    BYTE PTR [esi],bl
  41deda:	and    BYTE PTR [ebp-0x1b],cl
  41dedd:	loope  0x41df32
  41dedf:	or     al,0xb9
  41dee1:	in     al,0x6e
  41dee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee4:	add    eax,0x60a35ea8
  41dee9:	je     0x41df5a
  41deeb:	push   esp
  41deec:	data16 mov bl,0x64
  41deef:	jmp    0xb0f0:0x60dc3b9b
  41def6:	mov    dh,0x84
  41def8:	add    al,0x22
  41defa:	mov    dh,0x76
  41defc:	nop
  41defd:	test   DWORD PTR [edx],ebp
  41deff:	dec    esp
  41df00:	retf   0xf84f
  41df03:	mov    dl,0x2b
  41df05:	das    
  41df06:	inc    ecx
  41df07:	daa    
  41df08:	xor    al,0xb3
  41df0a:	xor    eax,DWORD PTR [edi+0xf1e404f]
  41df10:	mov    ds:0x9bf51bba,eax
  41df15:	sbb    ebp,eax
  41df17:	sub    eax,0xd4cb83ee
  41df1c:	xor    eax,0x4d16f4d1
  41df21:	popa   
  41df22:	test   DWORD PTR [ecx-0x761c843e],edi
  41df28:	sub    eax,0x39b50935
  41df2d:	mov    ch,0xdc
  41df2f:	pop    esi
  41df30:	sahf   
  41df31:	inc    edx
  41df32:	push   0x7978a2d6
  41df37:	or     al,0x12
  41df39:	xchg   edx,eax
  41df3a:	or     bh,0xdb
  41df3d:	pushf  
  41df3e:	add    eax,0x203805a9
  41df43:	repz cmp cl,BYTE PTR ss:[edi+0x9]
  41df48:	mov    edx,0xc968d03a
  41df4d:	int3   
  41df4e:	jecxz  0x41df9b
  41df50:	xchg   BYTE PTR [ebp+0x62],dl
  41df53:	jo     0x41df88
  41df55:	shl    BYTE PTR [edi-0x7f],0x55
  41df59:	cwde   
  41df5a:	add    esp,ebx
  41df5c:	(bad)  
  41df5d:	inc    ebx
  41df5e:	xchg   ecx,eax
  41df5f:	jnp    0x41df0f
  41df61:	(bad)  
  41df62:	jecxz  0x41dfe1
  41df64:	inc    eax
  41df65:	ds dec esp
  41df67:	mov    edx,DWORD PTR [ecx-0x18]
  41df6a:	push   edx
  41df6b:	push   ecx
  41df6c:	push   esi
  41df6d:	outs   dx,DWORD PTR ds:[esi]
  41df6e:	cmc    
  41df6f:	lock cmp DWORD PTR [eax+0x7073daf2],edx
  41df76:	js     0x41dfe5
  41df78:	xchg   ecx,eax
  41df79:	into   
  41df7a:	push   0xffffffc4
  41df7c:	xor    al,dl
  41df7e:	and    esi,ebp
  41df80:	lahf   
  41df81:	pop    ds
  41df82:	dec    ebp
  41df83:	or     DWORD PTR [ebx],ebp
  41df85:	ins    BYTE PTR es:[edi],dx
  41df86:	jle    0x41df31
  41df88:	sub    eax,0x752e6d01
  41df8d:	inc    edx
  41df8e:	jo     0x41df67
  41df90:	pop    ss
  41df91:	fst    DWORD PTR [ebx-0x1c]
  41df94:	daa    
  41df95:	mov    dh,0x20
  41df97:	ret    
  41df98:	jg     0x41dfaa
  41df9a:	mov    cl,0x0
  41df9c:	sbb    al,0xc3
  41df9e:	(bad)  
  41df9f:	adc    al,BYTE PTR [esi+edi*4]
  41dfa2:	idiv   BYTE PTR [ebx+0x1]
  41dfa5:	pop    ebx
  41dfa6:	mov    ebp,0x7f12a521
  41dfab:	call   0xd5db:0x257db633
  41dfb2:	call   0x77698b21
  41dfb7:	push   cs
  41dfb8:	es (bad) 
  41dfba:	aad    0xab
  41dfbc:	add    edx,ebx
  41dfbe:	inc    eax
  41dfbf:	in     eax,dx
  41dfc0:	or     al,0x5e
  41dfc2:	push   eax
  41dfc3:	jmp    0x6da1:0xba1dd2a0
  41dfca:	or     BYTE PTR [edx+0x7544c08a],ch
  41dfd0:	add    bh,BYTE PTR [edx+ebx*2]
  41dfd3:	push   cs
  41dfd4:	pop    ebp
  41dfd5:	arpl   dx,si
  41dfd7:	imul   ebp,DWORD PTR [ebp+0x5e],0x13d106a6
  41dfde:	add    al,0x65
  41dfe0:	sub    esp,DWORD PTR [esi-0x1f]
  41dfe3:	pop    esi
  41dfe4:	sub    DWORD PTR [edi-0x56c9ee80],edi
  41dfea:	shr    DWORD PTR [ebp-0x20],1
  41dfed:	sbb    eax,0xcfb86f3c
  41dff2:	dec    edi
  41dff3:	fwait
  41dff4:	shr    DWORD PTR [eax],cl
  41dff6:	xchg   ebx,eax
  41dff7:	dec    esi
  41dff8:	jmp    FWORD PTR [esi+eax*4]
  41dffb:	mov    ch,0x0
  41dffd:	(bad)  
  41dffe:	cdq    
  41dfff:	ret    
  41e000:	nop
  41e001:	mov    al,ds:0xd8a7640f
  41e006:	adc    bl,BYTE PTR [ebp+0x37]
  41e009:	fwait
  41e00a:	pop    edx
  41e00b:	ins    BYTE PTR es:[edi],dx
  41e00c:	and    al,0x27
  41e00e:	popf   
  41e00f:	jae    0x41e01c
  41e011:	mov    al,ds:0x2fd7c867
  41e016:	out    dx,eax
  41e017:	mov    ecx,0x1293b502
  41e01c:	scas   eax,DWORD PTR es:[edi]
  41e01d:	icebp  
  41e01e:	sbb    DWORD PTR [edx+0x4bf64d89],esi
  41e024:	or     al,0x29
  41e026:	fwait
  41e027:	sbb    BYTE PTR [ecx],al
  41e029:	jmp    0x3d94:0xc6fedb2e
  41e030:	outs   dx,DWORD PTR ds:[esi]
  41e031:	aas    
  41e032:	lahf   
  41e033:	jmp    0x41e05a
  41e035:	jno    0x41dff6
  41e037:	jb     0x41e096
  41e039:	outs   dx,DWORD PTR ds:[esi]
  41e03a:	dec    ebp
  41e03b:	popa   
  41e03c:	in     al,dx
  41e03d:	mov    dl,0xab
  41e03f:	(bad)  
  41e040:	pop    ecx
  41e041:	out    dx,eax
  41e042:	dec    edx
  41e043:	into   
  41e044:	add    al,0x43
  41e046:	(bad)
  41e04a:	sbb    esi,0xffffff9f
  41e04d:	inc    ecx
  41e04e:	jno    0x41e006
  41e050:	fmul   DWORD PTR [ecx+0x22d1d553]
  41e056:	mov    esp,0x3a680f1e
  41e05b:	pop    ds
  41e05c:	sbb    eax,0xa4313b9f
  41e061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e062:	jne    0x41e0c4
  41e064:	jle    0x41e05c
  41e066:	ret    
  41e067:	repz popf 
  41e069:	fistp  WORD PTR [esi+0x20]
  41e06c:	mov    WORD PTR [ebx],ds
  41e06e:	pop    ebx
  41e06f:	cmp    ebx,DWORD PTR [esi]
  41e071:	mov    ebx,0xe93431a0
  41e076:	cmp    eax,0x910fad6d
  41e07b:	lods   eax,DWORD PTR fs:[esi]
  41e07d:	sar    DWORD PTR [edi],1
  41e07f:	es (bad) 
  41e081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e082:	mov    ebx,0x945c7dad
  41e087:	rcr    DWORD PTR [ebp+0x56],0x89
  41e08b:	add    al,0xd3
  41e08d:	xchg   edx,eax
  41e08e:	pushw  cs
  41e090:	cdq    
  41e091:	mov    ds:0x1a52c143,eax
  41e096:	dec    edx
  41e097:	or     BYTE PTR [esp+edx*2],bh
  41e09a:	push   cs
  41e09b:	pop    esp
  41e09c:	xor    dh,BYTE PTR [ecx-0x2c4fd49e]
  41e0a2:	call   0x1455:0x5b30034e
  41e0a9:	mov    edx,DWORD PTR ds:0x2f63c663
  41e0af:	jmp    0x41e056
  41e0b1:	cmp    ecx,edx
  41e0b3:	mov    DWORD PTR [edx+0xf6bd486],esi
  41e0b9:	mov    al,BYTE PTR es:[esi+0x26b35d5c]
  41e0c0:	arpl   WORD PTR [ecx+0x59b413e3],di
  41e0c6:	dec    edx
  41e0c7:	pop    esp
  41e0c8:	loopne 0x41e117
  41e0ca:	call   0x4974:0xdec5f70b
  41e0d1:	inc    ecx
  41e0d2:	mov    ds:0xb3b99088,eax
  41e0d7:	xor    DWORD PTR [ecx+0x52e2daf6],esp
  41e0dd:	or     eax,0x61d3429f
  41e0e2:	dec    esp
  41e0e3:	test   edx,edi
  41e0e5:	stos   DWORD PTR es:[edi],eax
  41e0e6:	sar    al,1
  41e0e8:	stc    
  41e0e9:	dec    eax
  41e0ea:	lock ret 
  41e0ec:	pusha  
  41e0ed:	cli    
  41e0ee:	adc    esi,esp
  41e0f0:	js     0x41e116
  41e0f2:	das    
  41e0f3:	retf   
  41e0f4:	mov    al,0xbe
  41e0f6:	shl    BYTE PTR [ebp+0x30],0x41
  41e0fa:	je     0x41e153
  41e0fc:	fnstcw WORD PTR [ecx-0x19]
  41e0ff:	mov    bh,0xdb
  41e101:	ret    0x437d
  41e104:	leave  
  41e105:	ins    BYTE PTR es:[edi],dx
  41e106:	inc    edi
  41e107:	jmp    0xce34:0x173e4783
  41e10e:	jno    0x41e16a
  41e110:	inc    edi
  41e111:	mov    ebx,0x24bd3770
  41e116:	int3   
  41e117:	add    dl,BYTE PTR [edi]
  41e119:	mov    bl,0xfd
  41e11b:	and    al,0xb8
  41e11d:	mov    al,0xc6
  41e11f:	mov    edi,edi
  41e121:	add    DWORD PTR [eax+0x76],0x4e
  41e125:	mov    ss,WORD PTR [esi-0x4132630d]
  41e12b:	imul   eax,esp,0xd5abf469
  41e131:	dec    ecx
  41e132:	jecxz  0x41e191
  41e134:	xchg   ecx,eax
  41e135:	mov    edx,0x9700a97e
  41e13a:	dec    eax
  41e13b:	fst    QWORD PTR [eax+0x57]
  41e13e:	in     eax,dx
  41e13f:	add    eax,0xdd5e0f7b
  41e144:	and    bl,bl
  41e146:	out    0x3,al
  41e148:	mov    BYTE PTR [ebp-0x72402762],al
  41e14e:	dec    ebp
  41e14f:	cmp    eax,0x4bc4de6f
  41e154:	shr    BYTE PTR [eax],0xfe
  41e157:	and    ah,BYTE PTR ds:0xef24ae51
  41e15d:	jmp    0x6d5d2647
  41e162:	stos   BYTE PTR es:[edi],al
  41e163:	jl     0x41e120
  41e165:	sti    
  41e166:	adc    DWORD PTR [eax-0x74],ebp
  41e169:	imul   esp,DWORD PTR [ebp+0x3b],0x713573b9
  41e170:	jb     0x41e161
  41e172:	mov    esp,0xdb86de7
  41e177:	mov    BYTE PTR [ecx],cl
  41e179:	and    ecx,DWORD PTR [ecx+0x4e]
  41e17c:	xor    esi,ecx
  41e17e:	add    BYTE PTR [eax],dl
  41e180:	rol    DWORD PTR [edi+0xfbf9700],cl
  41e186:	mov    dl,0x8e
  41e188:	int3   
  41e189:	shl    DWORD PTR [ebx-0x55b4abd1],cl
  41e18f:	dec    ecx
  41e190:	xor    DWORD PTR [eax+edx*2+0x2a],0xa5af9d75
  41e198:	xchg   ebp,eax
  41e199:	or     ecx,DWORD PTR [ecx+ebx*2+0x152f319d]
  41e1a0:	jns    0x41e125
  41e1a2:	aaa    
  41e1a3:	sub    DWORD PTR [eax+0x1b],ebx
  41e1a6:	push   ecx
  41e1a7:	xchg   edx,eax
  41e1a8:	sub    DWORD PTR [esp+ebx*4],esp
  41e1ab:	mov    bh,0xe
  41e1ad:	fadd   QWORD PTR [edi+0x5d]
  41e1b0:	sub    dh,BYTE PTR [ebx]
  41e1b2:	test   BYTE PTR [eax],dh
  41e1b4:	fmulp  st(6),st
  41e1b6:	adc    BYTE PTR ds:0x7ea7bdef,0x2a
  41e1bd:	in     eax,dx
  41e1be:	adc    edi,DWORD PTR [edi+0x219064cd]
  41e1c4:	outs   dx,BYTE PTR ds:[esi]
  41e1c5:	(bad)  
  41e1c6:	xlat   BYTE PTR ds:[ebx]
  41e1c7:	xchg   ecx,eax
  41e1c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1c9:	test   eax,0xfab7baa1
  41e1ce:	xor    DWORD PTR [ecx+0x3c],ecx
  41e1d1:	and    BYTE PTR [edi+0x6a],0x42
  41e1d5:	loop   0x41e16b
  41e1d7:	or     BYTE PTR [esi],dh
  41e1d9:	in     al,0x94
  41e1db:	and    al,0x37
  41e1dd:	mov    al,0xcf
  41e1df:	xchg   edx,eax
  41e1e0:	xor    ecx,DWORD PTR [esi]
  41e1e2:	jg     0x41e20d
  41e1e4:	aaa    
  41e1e5:	cmp    al,0x64
  41e1e7:	or     bl,BYTE PTR [eax-0x13a79167]
  41e1ed:	mov    eax,gs
  41e1ef:	dec    esp
  41e1f0:	and    eax,0x4ea930cb
  41e1f5:	bound  ecx,QWORD PTR [esp+ecx*4-0x17a578d1]
  41e1fc:	mov    edx,0x430cf32
  41e201:	les    ebx,FWORD PTR [esi-0x3d]
  41e204:	mov    eax,ds:0x6e6138f4
  41e209:	dec    edi
  41e20a:	into   
  41e20b:	mov    dh,0x6e
  41e20d:	outs   dx,DWORD PTR ds:[esi]
  41e20e:	es out dx,al
  41e210:	sysret 
  41e212:	xchg   ebx,eax
  41e213:	retf   0x2b71
  41e216:	add    eax,0xb37b6176
  41e21b:	inc    esp
  41e21c:	clc    
  41e21d:	sub    bl,al
  41e21f:	mov    dh,0x4c
  41e221:	or     BYTE PTR [edx-0x4a62321c],bh
  41e227:	xchg   ebp,eax
  41e228:	pop    es
  41e229:	xchg   ecx,eax
  41e22a:	cli    
  41e22b:	mov    WORD PTR [ebp+0x3a749eb7],?
  41e231:	outs   dx,DWORD PTR ds:[esi]
  41e232:	push   ds
  41e233:	les    ebp,FWORD PTR [esi]
  41e235:	mov    gs,WORD PTR [ebx+0x7b]
  41e238:	enter  0xc1e,0xbf
  41e23c:	pop    esi
  41e23d:	test   al,0x99
  41e23f:	pop    esp
  41e240:	and    al,0x31
  41e242:	mov    dl,bl
  41e244:	test   BYTE PTR [eax-0x55],ah
  41e247:	call   0x9d4e:0x80de681a
  41e24e:	mov    BYTE PTR ds:0xba18da61,0xa0
  41e255:	cmc    
  41e256:	es stc 
  41e258:	mov    ds:0xf2bc83e1,eax
  41e25d:	xor    DWORD PTR [ebx],0x47
  41e260:	and    BYTE PTR [ebp+0x7256ddcb],0x25
  41e267:	dec    esi
  41e268:	sub    DWORD PTR [edi+0x53],ebp
  41e26b:	call   0xacc50f3c
  41e270:	pop    edi
  41e271:	push   edx
  41e272:	cmp    eax,0x4925e6a6
  41e277:	push   edx
  41e278:	mov    WORD PTR [esi+0x39a9591],fs
  41e27e:	test   al,0x9
  41e280:	push   es
  41e281:	lds    esp,FWORD PTR ds:0x20975a0
  41e287:	cmp    eax,0xd8e3f4da
  41e28c:	add    dl,BYTE PTR [edi+0x4]
  41e28f:	jge    0x41e2cb
  41e291:	xor    BYTE PTR [ebx-0x12],dh
  41e294:	jecxz  0x41e310
  41e296:	daa    
  41e297:	in     eax,dx
  41e298:	cmp    al,bh
  41e29a:	stos   BYTE PTR es:[edi],al
  41e29b:	iret   
  41e29c:	sub    bl,al
  41e29e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e29f:	cmp    al,0xb9
  41e2a1:	dec    esp
  41e2a2:	pop    ebp
  41e2a3:	sub    al,0x5f
  41e2a5:	sub    dh,0x11
  41e2a8:	sub    DWORD PTR [ebx-0x35924e95],0xe81d02f0
  41e2b2:	cwde   
  41e2b3:	jge    0x41e2b9
  41e2b5:	inc    ecx
  41e2b6:	scas   eax,DWORD PTR es:[edi]
  41e2b7:	sub    eax,0xbc31627
  41e2bc:	jns    0x41e273
  41e2be:	lds    ecx,FWORD PTR [ecx+0x4f5d73f2]
  41e2c4:	inc    edi
  41e2c5:	test   al,0xe
  41e2c7:	mov    esi,edx
  41e2c9:	xlat   BYTE PTR ds:[ebx]
  41e2ca:	daa    
  41e2cb:	imul   ecx,edi,0x2e50a7ad
  41e2d1:	repz and DWORD PTR [eax],0x59
  41e2d5:	adc    eax,0x44b74df0
  41e2da:	iret   
  41e2db:	fwait
  41e2dc:	or     cl,BYTE PTR [edi]
  41e2de:	imul   ebx,DWORD PTR [esi],0x70
  41e2e1:	mov    eax,0xac91c6c
  41e2e6:	sbb    al,dl
  41e2e8:	push   eax
  41e2e9:	pop    ds
  41e2ea:	fadd   st,st(1)
  41e2ec:	mov    esi,0x27705f0c
  41e2f1:	addr16 dec ecx
  41e2f3:	jle    0x41e323
  41e2f5:	cmc    
  41e2f6:	out    dx,al
  41e2f7:	mov    fs,WORD PTR [edx+0x3260963c]
  41e2fd:	add    eax,0xdbdd6154
  41e302:	adc    al,0xfc
  41e304:	dec    bp
  41e306:	adc    ebp,DWORD PTR [bp+si+0x3ef5]
  41e30b:	mov    edx,?
  41e30d:	inc    edx
  41e30e:	cmp    BYTE PTR [eax-0xfb311b0],bl
  41e314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e315:	and    DWORD PTR [edx],0x45ab7837
  41e31b:	jg     0x41e34d
  41e31d:	add    DWORD PTR [ebx+0x76012ea9],edi
  41e323:	inc    esi
  41e324:	mov    bh,0xf1
  41e326:	fucomp st(4)
  41e328:	mov    ebx,0xa44a13e3
  41e32d:	jae    0x41e342
  41e32f:	mov    ss,WORD PTR [eax+0x32]
  41e332:	nop
  41e333:	pop    ds
  41e334:	mov    eax,ds:0x469e13cb
  41e339:	inc    ecx
  41e33a:	sti    
  41e33b:	fcomp  QWORD PTR [esi+0x22]
  41e33e:	jbe    0x41e34c
  41e340:	out    dx,al
  41e341:	into   
  41e342:	xor    ebx,0xffffffbd
  41e345:	inc    ecx
  41e346:	fwait
  41e347:	sbb    eax,0x94d140ca
  41e34c:	dec    eax
  41e34d:	scas   eax,DWORD PTR es:[edi]
  41e34e:	sbb    bh,BYTE PTR [ecx+ebx*4+0x604e9f7e]
  41e355:	xor    ecx,edi
  41e357:	mov    cl,0x87
  41e359:	icebp  
  41e35a:	xor    eax,0x27108770
  41e35f:	mov    ecx,0x14c20b90
  41e364:	sbb    BYTE PTR [edx+0x3a],bl
  41e367:	mov    dh,0x47
  41e369:	xchg   edx,eax
  41e36a:	cmp    DWORD PTR [edi-0x55],ebx
  41e36d:	(bad)  
  41e36e:	inc    ecx
  41e36f:	(bad)  
  41e370:	dec    edi
  41e371:	adc    BYTE PTR [esi],0x24
  41e374:	and    DWORD PTR [eax],edi
  41e376:	aas    
  41e377:	cld    
  41e378:	inc    eax
  41e379:	cmp    DWORD PTR [di-0x58],ebp
  41e37d:	xchg   ebp,eax
  41e37e:	jg     0x41e31e
  41e380:	popa   
  41e381:	push   eax
  41e382:	jne    0x41e37c
  41e384:	rcr    ebp,1
  41e386:	ror    BYTE PTR [edx],0xf
  41e389:	sub    cl,BYTE PTR [ecx+eiz*8]
  41e38c:	repnz popa 
  41e38e:	stos   BYTE PTR es:[edi],al
  41e38f:	jmp    0x41e3e0
  41e391:	out    dx,al
  41e392:	mov    cl,0xf3
  41e394:	les    eax,FWORD PTR [ebx+0x73]
  41e397:	mov    ah,0x6b
  41e399:	cdq    
  41e39a:	repnz dec ebx
  41e39c:	ss (bad) 
  41e39e:	mov    bh,0xb
  41e3a0:	dec    eax
  41e3a1:	sti    
  41e3a2:	fstp   QWORD PTR [edx]
  41e3a4:	cs add al,0x51
  41e3a7:	ds mov ecx,0x3fb6b9e9
  41e3ad:	outs   dx,BYTE PTR ds:[esi]
  41e3ae:	inc    esp
  41e3af:	mov    ecx,ebp
  41e3b1:	xchg   ecx,eax
  41e3b2:	ucomiss xmm2,DWORD PTR [ebx-0x4f70815e]
  41e3b9:	mov    eax,ds:0xe9e5d15d
  41e3be:	sub    DWORD PTR [eax-0x69ee399f],0x54
  41e3c5:	mov    ds:0xade3f168,al
  41e3ca:	scas   eax,DWORD PTR es:[edi]
  41e3cb:	lock fmul QWORD PTR [edi]
  41e3cf:	mov    edi,0x1beeda5a
  41e3d4:	pop    ss
  41e3d5:	inc    ebx
  41e3d6:	pop    edx
  41e3d7:	jno    0x41e3ff
  41e3d9:	jge    0x41e44d
  41e3db:	sub    eax,DWORD PTR [ecx]
  41e3dd:	cwde   
  41e3de:	arpl   WORD PTR [eax+esi*8-0x40],bp
  41e3e2:	mov    ebx,0xac8f1a0e
  41e3e7:	jp     0x41e393
  41e3e9:	push   0x75a567
  41e3ee:	cmp    ah,BYTE PTR [ecx+eax*1]
  41e3f1:	mov    ebx,DWORD PTR [esi]
  41e3f3:	aaa    
  41e3f4:	fisubr WORD PTR [esi]
  41e3f6:	ss adc eax,0x31b9a12b
  41e3fc:	ss mov bl,0x39
  41e3ff:	push   ecx
  41e400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e401:	push   edx
  41e402:	jmp    0x40460e66
  41e407:	inc    edx
  41e408:	call   0x59118020
  41e40d:	jne    0x41e481
  41e40f:	outs   dx,BYTE PTR ds:[esi]
  41e410:	xor    al,BYTE PTR [esi-0x7915e8af]
  41e416:	adc    al,0xc0
  41e418:	add    BYTE PTR [esi],dh
  41e41a:	sbb    dh,BYTE PTR [edx-0x72]
  41e41d:	add    DWORD PTR [esi],esp
  41e41f:	sbb    edi,DWORD PTR [esi]
  41e421:	in     eax,dx
  41e422:	pop    ebp
  41e423:	in     eax,dx
  41e424:	push   edx
  41e425:	shl    DWORD PTR [ecx+esi*4-0x70810278],1
  41e42c:	xchg   ah,dh
  41e42e:	in     eax,0xe6
  41e430:	add    BYTE PTR [eax+0x2a],0xa
  41e434:	ret    0x69f8
  41e437:	cli    
  41e438:	cmp    ebp,DWORD PTR [ebx-0x715a1c7b]
  41e43e:	jmp    0x963f:0x735a64a6
  41e445:	call   0xfa2faa6
  41e44a:	adc    DWORD PTR [ebx-0x33],ebx
  41e44d:	aad    0x82
  41e44f:	xor    bh,BYTE PTR [edi]
  41e451:	and    al,0x23
  41e453:	pop    ds
  41e454:	push   es
  41e455:	stos   BYTE PTR es:[di],al
  41e457:	pop    edi
  41e458:	adc    esp,edx
  41e45a:	or     eax,0x2398a933
  41e45f:	jmp    0xd90c:0x2ee86fe7
  41e466:	dec    ebp
  41e467:	mov    edi,0xc6d9a8e1
  41e46c:	aad    0x67
  41e46e:	mov    esi,0xb80734b0
  41e473:	int    0xf6
  41e475:	dec    ebx
  41e476:	mov    WORD PTR [ecx-0x14],?
  41e479:	enter  0x24b5,0xa9
  41e47d:	clc    
  41e47e:	inc    ecx
  41e47f:	pushf  
  41e480:	(bad)  
  41e481:	mov    ds:0x9b04f816,eax
  41e486:	jnp    0x41e4cb
  41e488:	xchg   ebp,eax
  41e489:	jmp    0xfab7b79d
  41e48e:	fwait
  41e48f:	icebp  
  41e490:	out    dx,al
  41e491:	mov    dh,0xaf
  41e493:	pop    esi
  41e494:	aas    
  41e495:	or     esi,DWORD PTR [ebx+ecx*4+0x62]
  41e499:	sbb    al,0x5d
  41e49b:	jecxz  0x41e4e6
  41e49d:	imul   edi,DWORD PTR [esi+eax*2-0x16],0x604d1163
  41e4a5:	lds    edi,FWORD PTR [ecx+0x7d617e1]
  41e4ab:	xchg   ebp,eax
  41e4ac:	xchg   ebx,eax
  41e4ad:	push   ecx
  41e4ae:	ret    0x5ddc
  41e4b1:	mov    cl,0x7b
  41e4b3:	pop    es
  41e4b4:	mov    ch,0x4d
  41e4b6:	call   0x621e:0x79592b1f
  41e4bd:	add    al,0x58
  41e4bf:	(bad)  
  41e4c0:	mov    bl,0xf7
  41e4c2:	pusha  
  41e4c3:	inc    ebp
  41e4c4:	add    al,0xb0
  41e4c6:	std    
  41e4c7:	push   ss
  41e4c8:	xchg   edx,eax
  41e4c9:	dec    eax
  41e4ca:	icebp  
  41e4cb:	sbb    ebp,DWORD PTR [ecx+ebp*8-0x31b3fd91]
  41e4d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4d3:	push   ebp
  41e4d4:	push   esi
  41e4d5:	jmp    DWORD PTR [edi]
  41e4d7:	call   0x69f42017
  41e4dc:	aam    0x86
  41e4de:	loop   0x41e506
  41e4e0:	mov    eax,ds:0xe736ba87
  41e4e5:	pop    ss
  41e4e6:	aad    0x40
  41e4e8:	iret   
  41e4e9:	xor    dl,dl
  41e4eb:	mov    dl,0xc2
  41e4ed:	rol    ebx,cl
  41e4ef:	xchg   edi,eax
  41e4f0:	push   ss
  41e4f1:	outs   dx,DWORD PTR ds:[esi]
  41e4f2:	sar    cl,0xaf
  41e4f5:	mov    edi,0xc00453aa
  41e4fa:	test   cl,dh
  41e4fc:	sahf   
  41e4fd:	mov    eax,ds:0xd5e11678
  41e502:	popf   
  41e503:	mov    bh,0xb0
  41e505:	in     al,0x57
  41e507:	test   BYTE PTR [ebp-0x41aed9a7],ah
  41e50d:	pop    ebp
  41e50e:	jno    0x41e4c5
  41e510:	add    ebx,edx
  41e512:	jle    0x41e4ac
  41e514:	mov    al,0x7
  41e516:	jge    0x41e523
  41e518:	xor    DWORD PTR [ebp-0x2a],edi
  41e51b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e51c:	xchg   ecx,eax
  41e51d:	test   BYTE PTR [edi-0x53e20d4],cl
  41e523:	inc    ebp
  41e524:	mov    esi,0xa8b12831
  41e529:	mov    edi,0xbe12f1eb
  41e52e:	test   al,0x7
  41e530:	outs   dx,DWORD PTR ds:[esi]
  41e531:	pop    ebp
  41e532:	dec    eax
  41e533:	repz sub eax,0xbda8c66e
  41e539:	ja     0x41e53e
  41e53b:	add    ch,BYTE PTR [eax+0x20]
  41e53e:	cmp    ah,BYTE PTR [ebx+0x4d]
  41e541:	adc    BYTE PTR [ebx+ebp*1],0x95
  41e545:	fdivr  st(1),st
  41e547:	(bad)  
  41e548:	imul   eax,DWORD PTR [eax-0x3],0xb
  41e54c:	repz imul ebx,esi,0x8aad9a9e
  41e553:	jecxz  0x41e59b
  41e555:	jno    0x41e4e4
  41e557:	arpl   di,bx
  41e559:	mov    bl,0xe7
  41e55b:	sub    BYTE PTR [ebx*4-0x1d39852c],bl
  41e562:	xor    edi,0xd
  41e565:	cmp    dh,dh
  41e567:	inc    ebx
  41e568:	xchg   edi,eax
  41e569:	cmp    bh,BYTE PTR [ecx+0x56]
  41e56c:	cdq    
  41e56d:	or     BYTE PTR [esi-0x60e586bd],ah
  41e573:	les    ecx,FWORD PTR [ebp-0x742f873c]
  41e579:	je     0x41e5b4
  41e57b:	test   al,0x70
  41e57d:	add    edx,DWORD PTR [eax+edx*1+0x5f]
  41e581:	mov    eax,ds:0x5839bf7
  41e586:	iret   
  41e587:	scas   al,BYTE PTR es:[edi]
  41e588:	cmp    al,0x49
  41e58a:	jne    0x41e542
  41e58c:	pop    edx
  41e58d:	cmp    DWORD PTR [ebp+0x4d],esp
  41e590:	sti    
  41e591:	call   0x48e5b092
  41e596:	fnsave [eax+0x3]
  41e599:	int    0x77
  41e59b:	ja     0x41e5e9
  41e59d:	(bad)  
  41e59e:	retf   
  41e59f:	test   BYTE PTR [eax+0x7a7cba05],dl
  41e5a5:	add    eax,0xf28827c5
  41e5aa:	jns    0x41e5f5
  41e5ac:	fldenv fs:[esi-0x6]
  41e5b0:	retf   
  41e5b1:	jns    0x41e600
  41e5b3:	cdq    
  41e5b4:	adc    BYTE PTR [eax],al
  41e5b6:	dec    ecx
  41e5b7:	icebp  
  41e5b8:	cmp    eax,0x8abaed9f
  41e5bd:	(bad)  [ecx+0x37]
  41e5c0:	arpl   WORD PTR [esi],sp
  41e5c2:	clc    
  41e5c3:	xchg   ah,al
  41e5c5:	std    
  41e5c6:	lds    ecx,FWORD PTR [esi+0x68683432]
  41e5cc:	je     0x41e5a8
  41e5ce:	sub    eax,0xfa26f61
  41e5d3:	(bad)  
  41e5d4:	sbb    DWORD PTR [edi],esi
  41e5d6:	scas   al,BYTE PTR es:[edi]
  41e5d7:	int3   
  41e5d8:	std    
  41e5d9:	out    dx,eax
  41e5da:	pop    eax
  41e5db:	inc    eax
  41e5dc:	or     dl,dh
  41e5de:	call   0xb2e7:0xa4d347bc
  41e5e5:	jmp    0xb9e9f126
  41e5ea:	bound  ebx,QWORD PTR [eax+0x23]
  41e5ed:	popf   
  41e5ee:	xchg   ebx,eax
  41e5ef:	or     esp,DWORD PTR [esi-0x4e]
  41e5f2:	push   0x7e52d132
  41e5f7:	cmp    BYTE PTR [edx+eiz*8+0x60],dl
  41e5fb:	les    esp,FWORD PTR [ecx+0x7aada346]
  41e601:	nop
  41e602:	popf   
  41e603:	or     BYTE PTR [ebx-0x3fb8ff48],ah
  41e609:	jge    0x41e679
  41e60b:	fiadd  WORD PTR [ecx-0x56]
  41e60e:	lock mov dl,0xd9
  41e611:	mov    ebp,0xce719d80
  41e616:	out    dx,eax
  41e617:	xchg   edx,eax
  41e618:	pusha  
  41e619:	push   si
  41e61b:	push   ss
  41e61c:	jb     0x41e63e
  41e61e:	adc    ecx,DWORD PTR ds:0x10c8787a
  41e624:	cdq    
  41e625:	fsub   st(0),st
  41e627:	mov    ebx,0xdad1369b
  41e62c:	dec    eax
  41e62d:	fst    QWORD PTR [esi]
  41e62f:	pop    edx
  41e630:	adc    esp,edi
  41e632:	push   eax
  41e633:	jmp    0x41e5ed
  41e635:	xchg   esp,eax
  41e636:	mov    esp,DWORD PTR [ecx-0x1f7a18a1]
  41e63c:	test   BYTE PTR [edi-0x41],bl
  41e63f:	fimul  DWORD PTR [ecx]
  41e641:	call   FWORD PTR [esp+ecx*4-0x4f894401]
  41e648:	sub    BYTE PTR [eax],bl
  41e64a:	shl    BYTE PTR [eax],0xc1
  41e64d:	ss xchg edx,eax
  41e64f:	scas   eax,DWORD PTR es:[edi]
  41e650:	(bad)  
  41e651:	lods   al,BYTE PTR ds:[esi]
  41e652:	outs   dx,BYTE PTR ds:[esi]
  41e653:	mov    dh,0x4
  41e655:	icebp  
  41e656:	fwait
  41e657:	std    
  41e658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e659:	leave  
  41e65a:	pop    ebp
  41e65b:	mov    esi,DWORD PTR [eax+ebp*8-0x41]
  41e65f:	stos   DWORD PTR es:[edi],eax
  41e660:	dec    eax
  41e661:	mov    bh,0x24
  41e663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e664:	adc    ebx,0xffffff9c
  41e667:	out    0x59,eax
  41e669:	imul   edx,DWORD PTR [esi+edi*2-0x36],0x38
  41e66e:	pop    edx
  41e66f:	das    
  41e670:	mov    edx,?
  41e672:	or     DWORD PTR [edi],edi
  41e674:	mov    ah,0x26
  41e676:	inc    esp
  41e677:	add    esi,DWORD PTR [edx]
  41e679:	nop
  41e67a:	adc    BYTE PTR [edx-0x49fab7a7],ch
  41e680:	sbb    al,0x7b
  41e682:	jl     0x41e6c2
  41e684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e685:	call   0xd7f5d8e3
  41e68a:	outs   dx,DWORD PTR ds:[esi]
  41e68b:	jl     0x41e66d
  41e68d:	icebp  
  41e68e:	inc    eax
  41e68f:	loope  0x41e63f
  41e691:	mov    cl,0xc0
  41e693:	pop    ebx
  41e694:	fwait
  41e695:	inc    ebp
  41e696:	retf   0x92a9
  41e699:	imul   eax,DWORD PTR [eax+0x49ce6593],0x64157209
  41e6a3:	cmp    eax,0x63502148
  41e6a8:	in     al,0xa3
  41e6aa:	scas   al,BYTE PTR es:[edi]
  41e6ab:	inc    ebp
  41e6ac:	cmp    DWORD PTR [esp+ebp*8+0x54efbf63],eax
  41e6b3:	clc    
  41e6b4:	lods   al,BYTE PTR ds:[esi]
  41e6b5:	out    dx,eax
  41e6b6:	pop    edi
  41e6b7:	sub    eax,0x367bcbd1
  41e6bc:	lods   al,BYTE PTR ds:[esi]
  41e6bd:	mov    cl,0x66
  41e6bf:	out    dx,eax
  41e6c0:	ficomp DWORD PTR [esi-0x23]
  41e6c3:	jnp    0x41e6f2
  41e6c5:	or     ecx,DWORD PTR [edi]
  41e6c7:	xchg   edx,eax
  41e6c8:	cmc    
  41e6c9:	cmp    BYTE PTR [ebp+ecx*8-0x4a6aaf0d],dl
  41e6d0:	in     eax,dx
  41e6d1:	mov    WORD PTR [edi+edi*8],cs
  41e6d4:	sub    eax,0x4d1ab658
  41e6d9:	cs inc ebx
  41e6db:	mov    esp,0xacaa0d6c
  41e6e0:	and    al,0xa0
  41e6e2:	outs   dx,DWORD PTR ds:[esi]
  41e6e3:	(bad)  
  41e6e5:	xchg   esi,eax
  41e6e6:	outs   dx,DWORD PTR ds:[esi]
  41e6e7:	mov    esp,0x9ba19787
  41e6ec:	add    ch,BYTE PTR [ecx+0x37]
  41e6ef:	into   
  41e6f0:	out    0x2d,eax
  41e6f2:	dec    edi
  41e6f3:	aad    0xcb
  41e6f5:	enter  0xfef3,0x99
  41e6f9:	add    ebp,edi
  41e6fb:	cs jb  0x41e70c
  41e6fe:	add    al,0x67
  41e700:	(bad)  
  41e701:	mov    al,0x54
  41e703:	add    bl,BYTE PTR [esi+0x27605b1d]
  41e709:	sub    al,0x48
  41e70b:	out    0x46,eax
  41e70d:	add    BYTE PTR [edx+0x6dc5975],ah
  41e713:	push   esi
  41e714:	mov    ah,0xa7
  41e716:	mov    edx,0x17078d52
  41e71b:	stc    
  41e71c:	xor    DWORD PTR ds:0x279757e9,eax
  41e722:	lods   al,BYTE PTR ds:[esi]
  41e723:	or     edi,DWORD PTR [ecx]
  41e725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e726:	rcr    DWORD PTR [esi+0x3e],1
  41e729:	cwde   
  41e72a:	imul   ecx,DWORD PTR [esi],0xfffffff2
  41e72d:	or     cl,ah
  41e72f:	push   eax
  41e730:	jmp    0x499a:0x78b4e45c
  41e737:	out    dx,al
  41e738:	fcomip st,st(0)
  41e73a:	in     al,0xbe
  41e73c:	in     eax,dx
  41e73d:	pop    edi
  41e73e:	sub    bl,ch
  41e740:	xor    edi,eax
  41e742:	cli    
  41e743:	daa    
  41e744:	sbb    al,BYTE PTR [edi+0x65]
  41e747:	xchg   ebp,eax
  41e748:	push   ecx
  41e749:	dec    edx
  41e74a:	xchg   ebx,eax
  41e74b:	cmp    BYTE PTR [ebx+0x1f],0x3c
  41e74f:	or     DWORD PTR [edx],0x6f0e7135
  41e755:	dec    eax
  41e756:	stos   BYTE PTR es:[edi],al
  41e757:	in     eax,dx
  41e758:	fsub   st,st(3)
  41e75a:	mov    ds:0xb48f1af7,al
  41e75f:	out    dx,al
  41e760:	and    BYTE PTR [esi+0x68],dl
  41e763:	mov    dh,0xaa
  41e765:	in     eax,dx
  41e766:	pop    edx
  41e767:	push   eax
  41e768:	int    0xea
  41e76a:	dec    eax
  41e76b:	(bad)  
  41e76c:	pop    esi
  41e76d:	mov    bl,0x24
  41e76f:	outs   dx,BYTE PTR ds:[esi]
  41e770:	(bad)  
  41e771:	cdq    
  41e772:	mov    cl,0x76
  41e774:	in     eax,0xf7
  41e776:	mov    edi,0x1d0c8e36
  41e77b:	fcomip st,st(7)
  41e77d:	jns    0x41e763
  41e77f:	leave  
  41e780:	dec    ebp
  41e781:	(bad)  
  41e782:	cmc    
  41e783:	fwait
  41e784:	icebp  
  41e785:	mov    ebp,0x41c25aab
  41e78a:	add    BYTE PTR [ebx-0x44c9c741],bl
  41e790:	inc    edx
  41e791:	std    
  41e792:	stos   DWORD PTR es:[edi],eax
  41e793:	jge    0x41e812
  41e795:	(bad)  
  41e796:	pusha  
  41e797:	inc    esp
  41e798:	jge    0x41e80a
  41e79a:	jb     0x41e7ec
  41e79c:	xchg   ebx,eax
  41e79d:	mov    BYTE PTR [ecx-0x69],ah
  41e7a0:	rol    DWORD PTR ds:0xade04d91,0x6c
  41e7a7:	lahf   
  41e7a8:	retf   
  41e7a9:	inc    ebx
  41e7aa:	inc    edi
  41e7ab:	cmp    DWORD PTR [edi+0x17],esp
  41e7ae:	push   ds
  41e7af:	inc    esi
  41e7b0:	adc    esp,DWORD PTR [edx+0x73]
  41e7b3:	(bad)  
  41e7b4:	sbb    DWORD PTR [ecx],eax
  41e7b6:	pop    esp
  41e7b7:	or     eax,0x977f8076
  41e7bc:	dec    edx
  41e7bd:	retf   
  41e7be:	pslld  mm7,QWORD PTR [ebp+edx*8-0x21d95344]
  41e7c6:	ret    
  41e7c7:	mov    bl,0x2c
  41e7c9:	mov    esi,0xc9eec9b4
  41e7ce:	lahf   
  41e7cf:	push   esi
  41e7d0:	sbb    ecx,ecx
  41e7d2:	fsub   QWORD PTR [edx+0x621edad2]
  41e7d8:	mov    edi,0x93b3f3af
  41e7dd:	adc    DWORD PTR [ebx],ecx
  41e7df:	mov    cs,WORD PTR [eax]
  41e7e1:	and    edi,DWORD PTR [edi]
  41e7e3:	jnp    0x41e81e
  41e7e5:	jmp    0x41e7dd
  41e7e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7e8:	pop    edi
  41e7e9:	shl    edx,0x58
  41e7ec:	loopne 0x41e839
  41e7ee:	dec    edi
  41e7ef:	popf   
  41e7f0:	cmp    eax,0xb7587cfd
  41e7f5:	imul   eax
  41e7f7:	jl     0x41e7c0
  41e7f9:	jge    0x41e7cb
  41e7fb:	test   eax,0x6df86337
  41e800:	push   0xe42471e6
  41e805:	jmp    0x93b01ddc
  41e80a:	ja     0x41e859
  41e80c:	shr    eax,1
  41e80e:	mov    bh,0x49
  41e810:	xchg   esi,eax
  41e811:	xor    esi,DWORD PTR [eax]
  41e813:	ret    0x945d
  41e816:	fstp   TBYTE PTR [eax+edx*8+0x749231e3]
  41e81d:	sub    bl,BYTE PTR [ebx]
  41e81f:	not    DWORD PTR [ecx]
  41e821:	xchg   BYTE PTR [ecx+0x34],bh
  41e824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e825:	(bad)  [ecx]
  41e827:	xor    dh,BYTE PTR [edi+0x37]
  41e82a:	dec    edi
  41e82b:	or     DWORD PTR [ebp+0x76fe2cfe],edi
  41e831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e832:	in     eax,0x2b
  41e834:	and    cl,BYTE PTR [eax]
  41e836:	pop    ebx
  41e837:	xor    al,0x85
  41e839:	adc    eax,0xfd23dc32
  41e83e:	adc    BYTE PTR [esi],al
  41e840:	add    al,0xea
  41e842:	out    0xce,al
  41e844:	jae    0x41e80b
  41e846:	cwde   
  41e847:	add    DWORD PTR [edx],esi
  41e849:	ret    
  41e84a:	push   ss
  41e84b:	nop
  41e84c:	aam    0x5b
  41e84e:	adc    al,0x66
  41e850:	ror    DWORD PTR [eax-0x14],1
  41e853:	jae    0x41e886
  41e855:	jecxz  0x41e8a6
  41e857:	(bad)  [edi+0x22]
  41e85a:	rcr    BYTE PTR [edi+0x6e],cl
  41e85d:	cmp    al,BYTE PTR [ebx+0x288cf97d]
  41e863:	dec    esp
  41e864:	jae    0x41e848
  41e866:	inc    ebp
  41e867:	sar    cl,1
  41e869:	xor    DWORD PTR [eax-0x34],0x3c
  41e86d:	sub    edi,DWORD PTR [edi-0x7f]
  41e870:	or     eax,0x74f7e058
  41e875:	sbb    bl,BYTE PTR [esi-0x7c]
  41e878:	loop   0x41e850
  41e87a:	pusha  
  41e87b:	push   ecx
  41e87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e87d:	or     esi,DWORD PTR [edx+0x2221ce0b]
  41e883:	ret    
  41e884:	ret    
  41e885:	stc    
  41e886:	dec    edi
  41e887:	mov    cx,0x9c74
  41e88b:	out    0xa0,eax
  41e88d:	(bad)  
  41e88e:	pushf  
  41e88f:	mov    bh,0x1d
  41e891:	fldenv [edi+edx*4]
  41e894:	dec    ebp
  41e895:	retf   0x8560
  41e898:	loope  0x41e893
  41e89a:	dec    esi
  41e89b:	imul   esi,DWORD PTR [esi+0x595c3325],0xec1b382
  41e8a5:	rcr    BYTE PTR [ebx+0x63ece9db],1
  41e8ab:	outs   dx,BYTE PTR ds:[esi]
  41e8ac:	call   0x5a46eabe
  41e8b1:	fadd   DWORD PTR [esi+0x51b94493]
  41e8b7:	ds push cs
  41e8b9:	sub    ecx,ebp
  41e8bb:	sub    al,0xfe
  41e8bd:	int3   
  41e8be:	jecxz  0x41e859
  41e8c0:	cwde   
  41e8c1:	and    ebx,ecx
  41e8c3:	or     eax,0x6a35cc59
  41e8c8:	cdq    
  41e8c9:	call   0xfaecbf60
  41e8ce:	scas   al,BYTE PTR es:[edi]
  41e8cf:	out    dx,eax
  41e8d0:	push   ds
  41e8d1:	xchg   ebp,eax
  41e8d2:	xor    edi,DWORD PTR [ecx-0x3e]
  41e8d5:	fdivr  QWORD PTR [eax+0x5d]
  41e8d8:	xchg   BYTE PTR ds:0x4b560a59,ah
  41e8de:	sub    DWORD PTR [eax+0x1b],0x1c46f01d
  41e8e5:	sbb    eax,0xc773bac3
  41e8ea:	mov    al,ds:0x68f24ca7
  41e8ef:	pop    edi
  41e8f0:	push   es
  41e8f1:	dec    esp
  41e8f2:	ret    0x6e0d
  41e8f5:	add    bl,cl
  41e8f7:	xchg   esp,eax
  41e8f8:	jg     0x41e907
  41e8fa:	data16 and al,0x3e
  41e8fd:	and    ebx,edi
  41e8ff:	sbb    eax,0xfd5e9c10
  41e904:	lds    edi,FWORD PTR [ecx+0x3b3217b5]
  41e90a:	retf   
  41e90b:	jmp    0x41e940
  41e90d:	mov    ebx,DWORD PTR [edx+0xe]
  41e910:	cmp    BYTE PTR [ecx-0x23],cl
  41e913:	(bad)  
  41e915:	adc    al,0x19
  41e917:	popa   
  41e918:	stc    
  41e919:	mov    dl,0xce
  41e91b:	jno    0x41e917
  41e91d:	mov    BYTE PTR [esi-0x11af23b7],dl
  41e923:	xlat   BYTE PTR ds:[ebx]
  41e924:	fistp  WORD PTR [edx-0x2652cd78]
  41e92a:	jg     0x41e8ed
  41e92c:	mul    ah
  41e92e:	pushf  
  41e92f:	mov    esp,DWORD PTR [ebx]
  41e931:	xchg   ecx,eax
  41e932:	rcr    bl,1
  41e934:	push   edi
  41e935:	bound  ecx,QWORD PTR [eax+0x585efb4f]
  41e93b:	out    0x80,al
  41e93d:	popf   
  41e93e:	call   0xa58207a4
  41e943:	inc    esi
  41e944:	or     ebx,ebx
  41e946:	into   
  41e947:	stos   DWORD PTR es:[edi],eax
  41e948:	sub    eax,0x7ebda019
  41e94d:	aaa    
  41e94e:	mov    ah,0x63
  41e950:	aad    0x20
  41e952:	dec    esi
  41e953:	add    al,0x1c
  41e955:	jno    0x41e8fc
  41e957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e958:	adc    al,0xba
  41e95a:	and    edi,DWORD PTR [esi+ebx*1+0x6523f73e]
  41e961:	push   eax
  41e962:	cmp    ebx,DWORD PTR [edx-0x6e]
  41e965:	test   BYTE PTR [eax+0x276e887],0xab
  41e96c:	call   FWORD PTR ds:0x3a26872a
  41e972:	jmp    FWORD PTR [eax-0x3b739ee4]
  41e978:	add    BYTE PTR [ecx],ch
  41e97a:	inc    ecx
  41e97b:	or     BYTE PTR [esi-0x6fdf56a5],bl
  41e981:	and    al,0x83
  41e983:	add    BYTE PTR [ecx+0x4a410842],al
  41e989:	fidivr DWORD PTR [esp+edi*1+0x33138d3c]
  41e990:	jmp    0x41e932
  41e992:	gs fwait
  41e994:	pop    es
  41e995:	lahf   
  41e996:	pop    edx
  41e997:	imul   edx,DWORD PTR [edi],0xffffff95
  41e99a:	or     eax,0x3f046148
  41e99f:	stos   BYTE PTR es:[edi],al
  41e9a0:	aad    0xba
  41e9a2:	xchg   esp,eax
  41e9a3:	pop    ss
  41e9a4:	push   0xffffffce
  41e9a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9a7:	inc    edi
  41e9a8:	jb     0x41e9ae
  41e9aa:	xchg   edx,eax
  41e9ab:	jae    0x41e95e
  41e9ad:	and    eax,DWORD PTR [ecx+edx*2]
  41e9b0:	stos   BYTE PTR es:[edi],al
  41e9b1:	mov    bl,0x7a
  41e9b3:	rcr    DWORD PTR ds:0x41071a1c,cl
  41e9b9:	adc    ebx,DWORD PTR [esi-0x4b22b277]
  41e9bf:	outs   dx,DWORD PTR ds:[esi]
  41e9c0:	cmp    ch,BYTE PTR [eax]
  41e9c2:	fimul  DWORD PTR [esi]
  41e9c4:	jmp    0x3d0b:0x5073cbbc
  41e9cb:	sub    ch,BYTE PTR [ebp-0x1cdc5253]
  41e9d1:	in     ax,dx
  41e9d3:	ja     0x41e9a3
  41e9d5:	std    
  41e9d6:	xchg   esi,eax
  41e9d7:	jb     0x41e9f2
  41e9d9:	repz sbb eax,0xf4f453f5
  41e9df:	add    BYTE PTR [ecx-0x75e168f2],al
  41e9e5:	enter  0xc97d,0x7a
  41e9e9:	push   edx
  41e9ea:	cdq    
  41e9eb:	mov    eax,0x5a4f55f4
  41e9f0:	add    DWORD PTR [ecx+0x6],0x1cdfe127
  41e9f7:	ja     0x41e9e7
  41e9f9:	add    al,0xea
  41e9fb:	pop    esi
  41e9fc:	pop    esi
  41e9fd:	(bad)  
  41e9fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9ff:	xlat   BYTE PTR ds:[ebx]
  41ea00:	mov    edi,0xf184d571
  41ea05:	ins    BYTE PTR es:[edi],dx
  41ea06:	rcr    BYTE PTR [edx-0x5d],0xc6
  41ea0a:	loope  0x41ea37
  41ea0c:	add    dh,BYTE PTR [ebp+0x56e9fe56]
  41ea12:	lods   eax,DWORD PTR ds:[esi]
  41ea13:	aad    0x97
  41ea15:	mul    BYTE PTR [edi]
  41ea17:	sbb    DWORD PTR [ebx],0xffd8b0cb
  41ea1d:	jp     0x41e9a2
  41ea1f:	xchg   edx,eax
  41ea20:	dec    edi
  41ea21:	xchg   ecx,eax
  41ea22:	arpl   WORD PTR [ebx],dx
  41ea24:	jne    0x41ea33
  41ea26:	push   ss
  41ea27:	lea    eax,[esi+esi*4+0x2a]
  41ea2b:	pop    ecx
  41ea2c:	jge    0x41e9ae
  41ea2e:	in     eax,0x20
  41ea30:	push   ecx
  41ea31:	pop    ss
  41ea32:	cld    
  41ea33:	mov    ds:0x9857ef96,al
  41ea38:	icebp  
  41ea39:	mov    edx,0x9879b5e0
  41ea3e:	dec    esi
  41ea3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea40:	sub    ah,BYTE PTR [ebx]
  41ea42:	push   edx
  41ea43:	(bad)  [edx]
  41ea45:	adc    cl,BYTE PTR [edi-0x3f]
  41ea48:	push   esi
  41ea49:	jge    0x41e9ce
  41ea4b:	sbb    edi,ebp
  41ea4d:	xor    al,0xe2
  41ea4f:	sub    eax,0xa0f20250
  41ea54:	xor    DWORD PTR [eax-0x2ad223f9],esi
  41ea5a:	in     eax,dx
  41ea5b:	pushf  
  41ea5c:	jmp    0x6201:0xcb91e656
  41ea63:	ins    DWORD PTR es:[edi],dx
  41ea64:	sub    DWORD PTR [edx],ebx
  41ea66:	push   edx
  41ea67:	cmp    ebx,DWORD PTR [ebp-0x18]
  41ea6a:	cmp    cl,BYTE PTR [edi-0x92ebdd9]
  41ea70:	test   eax,0xea2467d2
  41ea75:	and    ch,BYTE PTR [di-0x5437]
  41ea7a:	aaa    
  41ea7b:	out    dx,al
  41ea7c:	repz mov bh,dh
  41ea7f:	in     al,dx
  41ea80:	inc    ebx
  41ea81:	stos   DWORD PTR es:[edi],eax
  41ea82:	mov    esi,0xae03e6ce
  41ea87:	cs loop 0x41ea0a
  41ea8a:	loope  0x41eab8
  41ea8c:	or     eax,0x4b1b05fa
  41ea91:	je     0x41ea95
  41ea93:	hlt    
  41ea94:	jae    0x41ea87
  41ea96:	sub    ah,BYTE PTR [eax-0x4d]
  41ea99:	fucomi st,st(4)
  41ea9b:	push   cs
  41ea9c:	retf   
  41ea9d:	out    dx,al
  41ea9e:	and    ah,ah
  41eaa0:	imul   esp,edi,0x4c74a4f3
  41eaa6:	mov    WORD PTR [ebp+0x10],fs
  41eaa9:	inc    edx
  41eaaa:	(bad)  
  41eaab:	mov    al,0x24
  41eaad:	ret    
  41eaae:	mov    esi,esi
  41eab0:	jmp    0x41eab7
  41eab2:	nop
  41eab3:	shl    DWORD PTR [eax-0x3b8e8e93],1
  41eab9:	add    DWORD PTR [ecx+0x65],ebp
  41eabc:	xchg   esp,eax
  41eabd:	pop    ebx
  41eabe:	(bad)  
  41eabf:	lods   al,BYTE PTR ds:[esi]
  41eac0:	enter  0x509f,0x60
  41eac4:	and    esi,DWORD PTR [ecx-0x9]
  41eac7:	mov    ah,0x18
  41eac9:	mov    edi,0x36acea
  41eace:	arpl   bx,cx
  41ead0:	pop    esi
  41ead1:	xchg   DWORD PTR [esi+0x1f75daed],eax
  41ead7:	inc    esi
  41ead8:	data16 add al,0x61
  41eadb:	add    dh,BYTE PTR [edi]
  41eadd:	mov    es,WORD PTR ds:0x90660203
  41eae3:	shr    BYTE PTR [edi-0xecc1dea],0xc
  41eaea:	std    
  41eaeb:	rcr    DWORD PTR [ebp-0x2b],0x38
  41eaef:	sub    BYTE PTR [ecx],ah
  41eaf1:	imul   DWORD PTR [ebx-0x42184002]
  41eaf7:	fmul   DWORD PTR [ecx-0x4a]
  41eafa:	mov    ah,bl
  41eafc:	int    0xbf
  41eafe:	leave  
  41eaff:	push   ebx
  41eb00:	into   
  41eb01:	pop    esp
  41eb02:	cmp    BYTE PTR [esi+0x10de93fe],bl
  41eb08:	mov    eax,DWORD PTR [ecx-0x6a]
  41eb0b:	cmc    
  41eb0c:	cmc    
  41eb0d:	push   ebp
  41eb0e:	mov    ds:0xff5c7b4c,eax
  41eb13:	out    0x23,eax
  41eb15:	scas   eax,DWORD PTR es:[edi]
  41eb16:	and    DWORD PTR [ebp+0x2d21c895],ebp
  41eb1c:	int3   
  41eb1d:	mov    cl,0xce
  41eb1f:	imul   edx,DWORD PTR [ebx+ecx*8+0x52],0xf054ad39
  41eb27:	les    edx,FWORD PTR [edx]
  41eb29:	sbb    DWORD PTR [esi],eax
  41eb2b:	push   ebx
  41eb2c:	shl    ah,0x44
  41eb2f:	jb     0x41eb61
  41eb31:	push   esi
  41eb32:	jb     0x41eae9
  41eb34:	iret   
  41eb35:	cmp    eax,0x510069b0
  41eb3a:	cld    
  41eb3b:	dec    esi
  41eb3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb3d:	mov    esi,0xc2689bc3
  41eb42:	or     ax,sp
  41eb45:	addr16 stc 
  41eb47:	push   ds
  41eb48:	int3   
  41eb49:	mov    ebx,0x53381032
  41eb4e:	adc    al,0x50
  41eb50:	push   edx
  41eb51:	inc    esi
  41eb52:	cmp    dh,al
  41eb54:	fstp   DWORD PTR [eax+0x1]
  41eb57:	mov    ebx,0x7a2153bd
  41eb5c:	paddusb mm1,QWORD PTR [ecx+0x132cf60a]
  41eb63:	dec    eax
  41eb64:	fild   WORD PTR [esi+0x3834b0a]
  41eb6a:	leave  
  41eb6b:	jno    0x41ebc3
  41eb6d:	dec    edx
  41eb6e:	ficomp DWORD PTR [ebp+0x6cf0c2c7]
  41eb74:	gs cmp al,0x5f
  41eb77:	jp     0x41eb10
  41eb79:	jo     0x41eb01
  41eb7b:	mov    eax,0x4fa31a58
  41eb80:	jae    0x41eb2d
  41eb82:	lds    ebx,FWORD PTR [esi-0x5767fb51]
  41eb88:	xor    eax,0x46cc4662
  41eb8d:	or     bh,dl
  41eb8f:	out    0xc2,al
  41eb91:	stos   BYTE PTR es:[edi],al
  41eb92:	add    DWORD PTR [esi],ebp
  41eb94:	ret    
  41eb95:	sti    
  41eb96:	nop
  41eb97:	jecxz  0x41eb21
  41eb99:	mov    ecx,0xfbdeadf6
  41eb9e:	mov    al,ds:0x37aaaf44
  41eba3:	xchg   DWORD PTR [edi+0x3d50f15e],ebp
  41eba9:	shl    DWORD PTR [ebp+0x7403e6d1],0xa1
  41ebb0:	psubq  mm2,mm7
  41ebb3:	inc    ebp
  41ebb4:	or     al,0x8
  41ebb6:	add    DWORD PTR [edx+0x14],eax
  41ebb9:	pop    edx
  41ebba:	das    
  41ebbb:	(bad)  
  41ebbd:	stos   BYTE PTR es:[edi],al
  41ebbe:	and    edx,DWORD PTR ds:0xb946d61e
  41ebc4:	stos   BYTE PTR es:[edi],al
  41ebc5:	sar    ebx,1
  41ebc7:	xchg   esp,eax
  41ebc8:	stc    
  41ebc9:	jbe    0x41ec14
  41ebcb:	or     BYTE PTR [eax],0x89
  41ebce:	inc    eax
  41ebcf:	xchg   ecx,eax
  41ebd0:	imul   eax,DWORD PTR [edi+0x20a593ea],0xffffffde
  41ebd7:	and    eax,0xa2b680d4
  41ebdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebdd:	shl    DWORD PTR [ebx*8+0xed376d],1
  41ebe4:	push   esi
  41ebe5:	cmc    
  41ebe6:	addr16 push ss
  41ebe8:	or     al,0xb1
  41ebea:	test   al,0xe3
  41ebec:	inc    esi
  41ebed:	push   es
  41ebee:	pop    ecx
  41ebef:	das    
  41ebf0:	cmp    ebx,DWORD PTR [eax]
  41ebf2:	push   edi
  41ebf3:	aam    0x78
  41ebf5:	(bad)  
  41ebf6:	call   0xb9b8beb6
  41ebfb:	adc    DWORD PTR [edi],0x385fda86
  41ec01:	not    edx
  41ec03:	mov    dl,bh
  41ec05:	fdivr  st(3),st
  41ec07:	sbb    ebx,eax
  41ec09:	inc    edi
  41ec0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec0b:	dec    ebp
  41ec0c:	mov    ebp,0xeae66146
  41ec11:	mov    ebx,0x9dd68a46
  41ec16:	dec    esp
  41ec17:	aam    0xc
  41ec19:	cld    
  41ec1a:	dec    esi
  41ec1b:	(bad)  
  41ec1c:	cli    
  41ec1d:	pop    ebp
  41ec1e:	jmp    FWORD PTR [edi]
  41ec20:	push   ebx
  41ec21:	imul   ebx,ecx,0xffffffad
  41ec24:	gs inc esi
  41ec26:	add    al,0x3d
  41ec28:	cli    
  41ec29:	adc    BYTE PTR [ebp+0x123ae5cb],ah
  41ec2f:	and    BYTE PTR [ebp+0x7],0xaa
  41ec33:	aas    
  41ec34:	stos   DWORD PTR es:[edi],eax
  41ec35:	adc    BYTE PTR [eax+0x26],cl
  41ec38:	push   0x1a9903a3
  41ec3d:	jae    0x41ebcb
  41ec3f:	cs xor ecx,esp
  41ec42:	sbb    DWORD PTR [ebp+edx*8-0x6f3cee8e],ecx
  41ec49:	mov    esi,0xc0dd92a8
  41ec4e:	and    eax,0x378abb39
  41ec53:	outs   dx,BYTE PTR ds:[esi]
  41ec54:	fwait
  41ec55:	lea    ebp,[ebx-0x35]
  41ec58:	sub    esp,DWORD PTR [edi+0x2a]
  41ec5b:	mov    dh,0x4b
  41ec5d:	sub    edx,eax
  41ec5f:	adc    eax,0xb6fe9abc
  41ec64:	imul   ebp,esp,0xbb6a2474
  41ec6a:	jmp    0x41ec1a
  41ec6c:	test   DWORD PTR [ebx-0x70],edx
  41ec6f:	fs repz call 0x92bc3b28
  41ec76:	jle    0x41ec94
  41ec78:	sahf   
  41ec79:	in     eax,dx
  41ec7a:	adc    eax,0xa7643d9e
  41ec7f:	js     0x41ec98
  41ec81:	jnp    0x41ecb0
  41ec83:	adc    al,0xe5
  41ec85:	inc    edx
  41ec86:	sbb    eax,0x4850bb98
  41ec8b:	inc    ecx
  41ec8c:	sbb    al,0xfe
  41ec8e:	call   0xd6a67812
  41ec93:	jmp    ebp
  41ec95:	mov    DWORD PTR fs:[esi],ebx
  41ec98:	sbb    BYTE PTR [esi+ebp*1+0x5a],0xfa
  41ec9d:	cwde   
  41ec9e:	dec    ebx
  41ec9f:	dec    edx
  41eca0:	sahf   
  41eca1:	in     eax,dx
  41eca2:	retf   
  41eca3:	and    dh,ch
  41eca5:	test   BYTE PTR [ebx+eiz*1+0x4b3de7be],dl
  41ecac:	mov    eax,ds:0xb2de5f8b
  41ecb1:	pop    ecx
  41ecb2:	ins    DWORD PTR es:[edi],dx
  41ecb3:	std    
  41ecb4:	fild   DWORD PTR [ebx]
  41ecb6:	test   al,0xa1
  41ecb8:	retf   0xc566
  41ecbb:	pop    ebp
  41ecbc:	and    ch,BYTE PTR ds:0xcbdad52f
  41ecc2:	sbb    BYTE PTR [ebx],cl
  41ecc4:	out    dx,al
  41ecc5:	punpckhdq mm2,QWORD PTR [ecx+ebx*4-0x149088d7]
  41eccd:	xchg   ebx,eax
  41ecce:	daa    
  41eccf:	cmc    
  41ecd0:	(bad)  
  41ecd1:	sbb    cl,BYTE PTR [ecx]
  41ecd3:	pop    ds
  41ecd4:	mov    al,0xdc
  41ecd6:	bound  edi,QWORD PTR ds:0x2d723e35
  41ecdc:	pop    esp
  41ecdd:	enter  0x3c18,0x17
  41ece1:	cwde   
  41ece2:	inc    ecx
  41ece3:	mov    al,0x36
  41ece5:	inc    edx
  41ece6:	inc    esi
  41ece7:	nop
  41ece8:	xchg   esp,eax
  41ece9:	paddd  mm0,QWORD PTR [edx]
  41ecec:	add    al,0x47
  41ecee:	sbb    BYTE PTR [eax],al
  41ecf0:	fsub   QWORD PTR ds:0x9a0f52b7
  41ecf6:	push   eax
  41ecf7:	jmp    0x73fd:0x42181951
  41ecfe:	stc    
  41ecff:	in     al,0x74
  41ed01:	and    eax,edx
  41ed03:	jae    0x41ecba
  41ed05:	std    
  41ed06:	or     edx,edx
  41ed08:	inc    eax
  41ed09:	xor    BYTE PTR [ebx-0xd],bh
  41ed0c:	out    0x5b,al
  41ed0e:	sbb    eax,0xcbf6939b
  41ed13:	dec    esp
  41ed14:	push   es
  41ed15:	aad    0x4c
  41ed17:	mov    ebp,0xdaf0a863
  41ed1c:	mov    ebp,0x66e7023f
  41ed21:	retf   
  41ed22:	jmp    0x41ecff
  41ed24:	xor    dl,BYTE PTR [ebp+0x8d2c74b]
  41ed2a:	add    esp,DWORD PTR [ebp-0x4a504656]
  41ed30:	or     eax,0x4e597555
  41ed35:	add    ebp,DWORD PTR [esi-0x50]
  41ed38:	dec    edi
  41ed39:	mov    edi,0xf3eb8841
  41ed3e:	sbb    eax,0xf76a3b38
  41ed43:	pop    ebx
  41ed44:	pop    edi
  41ed45:	sti    
  41ed46:	sar    BYTE PTR ds:0xd3e1d9db,1
  41ed4c:	mov    ds:0xa783ba56,eax
  41ed51:	(bad)  
  41ed52:	fucomi st,st(0)
  41ed54:	xchg   ebp,eax
  41ed55:	xchg   esp,eax
  41ed56:	jle    0x41ecfa
  41ed58:	dec    edx
  41ed59:	ds jg  0x41ece0
  41ed5c:	push   cs
  41ed5d:	shr    BYTE PTR [esi-0x7a77eecc],1
  41ed63:	dec    ecx
  41ed64:	dec    ecx
  41ed65:	inc    ecx
  41ed66:	xchg   ebp,eax
  41ed67:	mov    esi,0x63e4ca8c
  41ed6c:	push   ebx
  41ed6d:	inc    esp
  41ed6e:	xor    eax,0xe13bb3cd
  41ed73:	pop    ebp
  41ed74:	jg     0x41ed74
  41ed76:	lds    ecx,FWORD PTR [edi+0x21688e30]
  41ed7c:	sahf   
  41ed7d:	mov    eax,0xb3f15ac0
  41ed82:	ins    BYTE PTR es:[edi],dx
  41ed83:	clc    
  41ed84:	(bad)  
  41ed85:	lea    eax,[ebx+0x18]
  41ed88:	xchg   ecx,eax
  41ed89:	adc    eax,0x404f0ed3
  41ed8e:	(bad)  
  41ed8f:	out    dx,eax
  41ed90:	add    dl,bl
  41ed92:	les    edx,FWORD PTR ds:0x1b76cf5b
  41ed98:	cmp    ch,BYTE PTR [edx-0x3a]
  41ed9b:	loopne 0x41ed31
  41ed9d:	jmp    0x41ee13
  41ed9f:	and    bl,BYTE PTR [eax+0x41]
  41eda2:	les    ecx,FWORD PTR [edi-0x7a]
  41eda5:	test   edx,0x6333de61
  41edab:	push   esp
  41edac:	xor    cl,bh
  41edae:	stc    
  41edaf:	fdivr  DWORD PTR [eax]
  41edb1:	jbe    0x41edcf
  41edb3:	xchg   ecx,eax
  41edb4:	inc    ecx
  41edb5:	adc    BYTE PTR [esp+ebp*4+0xb],0x9
  41edba:	jo     0x41ee02
  41edbc:	arpl   WORD PTR [ecx+0x5a16f29c],bp
  41edc2:	ja     0x41eddf
  41edc4:	rcr    BYTE PTR [ecx],cl
  41edc6:	test   eax,0x27c5dd37
  41edcc:	popf   
  41edcd:	loopne 0x41edef
  41edcf:	repnz int 0x2
  41edd2:	stos   DWORD PTR es:[edi],eax
  41edd3:	ror    edx,0xe
  41edd6:	push   0xffffff93
  41edd8:	(bad)  
  41edda:	adc    dl,BYTE PTR [ebx]
  41eddc:	inc    edi
  41eddd:	jo     0x41edae
  41eddf:	gs into 
  41ede1:	dec    esi
  41ede2:	dec    esp
  41ede3:	imul   ebx,DWORD PTR [eax+0x7c07652e],0x11a1151f
  41eded:	pop    eax
  41edee:	mov    WORD PTR [eax+0x5a8a2b1],cs
  41edf4:	add    esi,DWORD PTR [esi-0x77]
  41edf7:	adc    al,0xdf
  41edf9:	outs   dx,BYTE PTR ds:[esi]
  41edfa:	mov    dh,0xa3
  41edfc:	jns    0x41edec
  41edfe:	jle    0x41ee21
  41ee00:	xchg   esp,eax
  41ee01:	out    dx,eax
  41ee02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee03:	mov    dl,0x25
  41ee05:	loop   0x41ee50
  41ee07:	rcl    DWORD PTR [ecx+0x7c1d43de],cl
  41ee0d:	into   
  41ee0e:	hlt    
  41ee0f:	sbb    eax,0xbc3f66ac
  41ee14:	push   esi
  41ee15:	js     0x41eda9
  41ee17:	mov    ch,0xc7
  41ee19:	sub    ah,dl
  41ee1b:	pop    es
  41ee1c:	inc    edx
  41ee1d:	or     esi,DWORD PTR [eax]
  41ee1f:	in     eax,0x5c
  41ee21:	cli    
  41ee22:	mov    ecx,esi
  41ee24:	leave  
  41ee25:	cmp    BYTE PTR [eax],bl
  41ee27:	int3   
  41ee28:	xor    al,0x70
  41ee2a:	aaa    
  41ee2b:	push   ebp
  41ee2c:	sub    BYTE PTR gs:[edi-0x3a33923d],0x6c
  41ee34:	add    DWORD PTR [edx+0x2],ebp
  41ee37:	fisttp QWORD PTR [eax+edi*1]
  41ee3a:	scas   eax,DWORD PTR es:[edi]
  41ee3b:	mov    ebx,0xf80fa3ce
  41ee40:	pop    edi
  41ee41:	sbb    dh,ah
  41ee43:	jns    0x41ee46
  41ee45:	mov    ah,0x67
  41ee47:	mov    WORD PTR [ebx+0x64abf6b4],gs
  41ee4d:	or     esi,edi
  41ee4f:	stos   BYTE PTR es:[edi],al
  41ee50:	int3   
  41ee51:	xlat   BYTE PTR ds:[ebx]
  41ee52:	cmp    DWORD PTR [ecx],ecx
  41ee54:	or     al,cl
  41ee56:	xchg   ecx,eax
  41ee57:	jo     0x41ee25
  41ee59:	ret    
  41ee5a:	mov    eax,ds:0xb8001a50
  41ee5f:	call   0xc11b:0x4ca7ecee
  41ee66:	(bad)
  41ee6a:	mov    cl,0x7b
  41ee6c:	pop    edx
  41ee6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee6e:	aam    0x57
  41ee70:	scas   eax,DWORD PTR es:[edi]
  41ee71:	inc    ebx
  41ee72:	and    DWORD PTR [ebx-0x4a],ebp
  41ee75:	mov    DWORD PTR [ebp+edx*1-0x3f4d9a71],ebp
  41ee7c:	imul   esi,esp,0x7
  41ee7f:	shl    BYTE PTR [edx+0x40],1
  41ee82:	pop    edx
  41ee83:	lea    ecx,[eax-0x70dfff0f]
  41ee89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee8a:	mov    esp,0xec93fa6b
  41ee8f:	mov    es,WORD PTR [edi+0x2739eed]
  41ee95:	dec    ebp
  41ee96:	and    ebx,edx
  41ee98:	and    esp,DWORD PTR [edx+0x79]
  41ee9b:	mov    ebp,0x75d5daa
  41eea0:	outs   dx,DWORD PTR ds:[esi]
  41eea1:	pop    edx
  41eea2:	sub    edx,DWORD PTR [edx+ebp*1+0xa6ab0c]
  41eea9:	fnstsw WORD PTR [ecx]
  41eeab:	sub    eax,0xdfb94f15
  41eeb0:	mov    dh,0x3a
  41eeb2:	sahf   
  41eeb3:	add    eax,0xc5b0dfd8
  41eeb8:	jl     0x41ef18
  41eeba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eebb:	xchg   esp,eax
  41eebc:	xor    BYTE PTR [eax+0x23],ch
  41eebf:	pop    ds
  41eec0:	ds pop esi
  41eec2:	sub    ecx,DWORD PTR [edx+0x39]
  41eec5:	inc    edi
  41eec6:	and    dh,dh
  41eec8:	or     ebx,edx
  41eeca:	out    dx,al
  41eecb:	and    eax,0xd4289a99
  41eed0:	icebp  
  41eed1:	jno    0x41eeea
  41eed3:	mov    al,0x62
  41eed5:	and    BYTE PTR [edi],0x14
  41eed8:	icebp  
  41eed9:	cmp    bh,BYTE PTR [ebx+0x613e9342]
  41eedf:	pop    ebp
  41eee0:	lods   eax,DWORD PTR ds:[esi]
  41eee1:	test   BYTE PTR [esp+ebx*2-0x48829bb8],cl
  41eee8:	retf   
  41eee9:	push   edi
  41eeea:	cmp    eax,DWORD PTR [edi-0x3]
  41eeed:	push   es
  41eeee:	je     0x41ef12
  41eef0:	shl    BYTE PTR [ecx+ecx*2+0x71],1
  41eef4:	neg    BYTE PTR [ebx]
  41eef6:	int    0x1c
  41eef8:	inc    ebx
  41eef9:	inc    edx
  41eefa:	int    0x3d
  41eefc:	mov    bl,0x28
  41eefe:	jmp    0x74db:0x10535646
  41ef05:	and    DWORD PTR [edx-0x59],ebp
  41ef08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef09:	jo     0x41ef6c
  41ef0b:	xchg   esp,eax
  41ef0c:	into   
  41ef0d:	jno    0x41ef4c
  41ef0f:	lock mov WORD PTR [edx],?
  41ef12:	popa   
  41ef13:	in     al,0xed
  41ef15:	ins    DWORD PTR es:[edi],dx
  41ef16:	and    dl,BYTE PTR [eax-0x60d963d3]
  41ef1c:	je     0x41ef9c
  41ef1e:	inc    BYTE PTR [eax]
  41ef20:	and    ah,bl
  41ef22:	push   esp
  41ef23:	ins    DWORD PTR es:[edi],dx
  41ef24:	push   edx
  41ef25:	pop    esp
  41ef26:	fwait
  41ef27:	int3   
  41ef28:	mov    eax,0x85733e7f
  41ef2d:	or     eax,0xff522bac
  41ef32:	call   0xdb1f303f
  41ef37:	sub    DWORD PTR [eax],ecx
  41ef39:	leave  
  41ef3a:	inc    eax
  41ef3b:	sbb    DWORD PTR [ebx+0x3b367cd0],ebx
  41ef41:	hlt    
  41ef42:	sub    eax,0x7895d606
  41ef47:	cwde   
  41ef48:	pop    edx
  41ef49:	outs   dx,DWORD PTR ds:[esi]
  41ef4a:	lods   eax,DWORD PTR ds:[esi]
  41ef4b:	pop    edi
  41ef4c:	enter  0x3e99,0xad
  41ef50:	out    dx,eax
  41ef51:	iret   
  41ef52:	les    edi,FWORD PTR [ebx]
  41ef54:	ret    
  41ef55:	fmul   QWORD PTR [eax-0x27c5c88]
  41ef5b:	imul   esp,DWORD PTR [edi],0xdb245631
  41ef61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef62:	ss rol ah,1
  41ef65:	daa    
  41ef66:	sbb    al,dl
  41ef68:	and    BYTE PTR [ebx+0x72],0xf9
  41ef6c:	pop    ds
  41ef6d:	mov    edi,0xaabc3a6b
  41ef72:	jmp    0x41efa5
  41ef74:	stc    
  41ef75:	enter  0xe092,0x88
  41ef79:	cmp    dl,BYTE PTR [ecx]
  41ef7b:	call   0xec7:0xcf649d75
  41ef82:	pop    edi
  41ef83:	in     eax,dx
  41ef84:	mov    bh,0xc5
  41ef86:	ds loop 0x41ef12
  41ef89:	data16 xor bl,BYTE PTR [edi-0x5d]
  41ef8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef8e:	cld    
  41ef8f:	and    eax,DWORD PTR [ecx+esi*2-0x24def1e7]
  41ef96:	loopne 0x41efa7
  41ef98:	scas   al,BYTE PTR es:[edi]
  41ef99:	iret   
  41ef9a:	rcr    DWORD PTR [edx+0x16f03a2f],cl
  41efa0:	jbe    0x41efeb
  41efa2:	das    
  41efa3:	fadd   QWORD PTR [edx-0x65]
  41efa6:	sar    BYTE PTR [ebx-0x6353ff1b],cl
  41efac:	pop    eax
  41efad:	mov    ch,0xa5
  41efaf:	dec    edx
  41efb0:	popf   
  41efb1:	les    ecx,FWORD PTR [esi-0x25]
  41efb4:	nop
  41efb5:	add    al,0xba
  41efb7:	mov    al,ds:0x8d3029e0
  41efbc:	cdq    
  41efbd:	mov    ebx,0xee73e999
  41efc2:	out    dx,eax
  41efc3:	jle    0x41ef58
  41efc5:	dec    ebp
  41efc6:	repnz daa 
  41efc8:	push   edi
  41efc9:	mov    esp,DWORD PTR [eax-0x113ddf3e]
  41efcf:	test   BYTE PTR [ebx+0x4392f935],al
  41efd5:	js     0x41ef7d
  41efd7:	inc    BYTE PTR [esi+0x17639ddf]
  41efdd:	push   cs
  41efde:	test   DWORD PTR [edi-0x32],edx
  41efe1:	push   0xffffffbf
  41efe3:	pop    esp
  41efe4:	and    eax,0xc2a0603e
  41efe9:	mov    ebp,0x230975d4
  41efee:	xchg   BYTE PTR [eax],bl
  41eff0:	mov    edi,0xb63628ff
  41eff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eff6:	or     al,0x99
  41eff8:	cmp    BYTE PTR [edi-0x63579dd],bh
  41effe:	dec    ebx
  41efff:	xor    dl,bh
  41f001:	popf   
  41f002:	push   ds
  41f003:	push   0xa
  41f005:	fmul   QWORD PTR [edx+ecx*4]
  41f008:	xor    DWORD PTR [esi],ebx
  41f00a:	adc    DWORD PTR [ebx],eax
  41f00c:	rcr    ebp,0x74
  41f00f:	outs   dx,DWORD PTR ds:[esi]
  41f010:	and    al,0x4
  41f012:	out    0xd9,eax
  41f014:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f016:	lods   eax,DWORD PTR ds:[esi]
  41f017:	pop    edi
  41f018:	mov    dh,0x88
  41f01a:	outs   dx,BYTE PTR ds:[esi]
  41f01b:	jmp    0x41f09a
  41f01d:	mov    BYTE PTR ds:[edx],0x6e
  41f021:	sub    BYTE PTR ss:[ebx],0x6c
  41f025:	mov    gs,WORD PTR [edi-0x55]
  41f028:	sub    al,0xee
  41f02a:	sub    al,0xa0
  41f02c:	mov    ebx,0xe9bc8c30
  41f031:	fwait
  41f032:	pop    edi
  41f033:	xor    al,0x4
  41f035:	adc    al,0x2d
  41f037:	fild   WORD PTR [edi-0x32]
  41f03a:	mov    esi,0x93454e19
  41f03f:	jae    0x41f0b8
  41f041:	xchg   edi,eax
  41f042:	out    0x3d,eax
  41f044:	fwait
  41f045:	mov    cl,0x9a
  41f047:	jne    0x41f09e
  41f049:	retf   0xcdfd
  41f04c:	adc    ah,BYTE PTR [edi]
  41f04e:	or     al,0x7e
  41f050:	push   esi
  41f051:	and    BYTE PTR [edx+0x5],bh
  41f054:	dec    ebx
  41f055:	pop    edx
  41f056:	push   eax
  41f057:	push   esi
  41f058:	dec    ecx
  41f059:	nop
  41f05a:	add    BYTE PTR [eax-0x36715696],ch
  41f060:	inc    eax
  41f061:	mov    cl,0xd
  41f063:	sbb    al,0xc7
  41f065:	icebp  
  41f066:	mov    ss,WORD PTR [edx]
  41f068:	bound  eax,QWORD PTR [ebx+ebx*2]
  41f06b:	push   edx
  41f06c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f06d:	xchg   edi,eax
  41f06e:	add    eax,0xbf86e331
  41f073:	leave  
  41f074:	jns    0xfedd8f50
  41f07a:	ds or  esi,0x7e
  41f07e:	test   eax,0x7f0f717d
  41f083:	ret    0xe685
  41f086:	cli    
  41f087:	popf   
  41f088:	fisub  DWORD PTR [ebx]
  41f08a:	ds loope 0x41f096
  41f08d:	lods   eax,DWORD PTR ds:[esi]
  41f08e:	mov    ds:0x2e2cb866,eax
  41f093:	scas   al,BYTE PTR es:[edi]
  41f094:	fbstp  TBYTE PTR [ebx-0x187fd973]
  41f09a:	sahf   
  41f09b:	xchg   ebp,eax
  41f09c:	imul   edx,DWORD PTR [eax],0xffffffc1
  41f09f:	adc    edi,DWORD PTR [eax+0x5c]
  41f0a2:	sbb    ch,BYTE PTR [esi+0x70]
  41f0a5:	push   0xc0695ba0
  41f0aa:	imul   ecx,DWORD PTR [ebx+0x7f],0x26
  41f0ae:	cmp    DWORD PTR [ecx-0x71],edx
  41f0b1:	xchg   esp,eax
  41f0b2:	mov    dl,0xf3
  41f0b4:	out    0xf8,eax
  41f0b6:	mov    cl,0xa6
  41f0b8:	mov    ebp,0xb40d4724
  41f0bd:	popa   
  41f0be:	mov    bl,0x7f
  41f0c0:	sub    DWORD PTR [ebp+0x7ede28de],0x7c
  41f0c7:	pop    ebp
  41f0c8:	mov    ah,0xe9
  41f0ca:	ret    0x46
  41f0cd:	sbb    BYTE PTR [eax],dh
  41f0cf:	push   cs
  41f0d0:	inc    eax
  41f0d1:	mov    ds:0xa4211995,al
  41f0d6:	fisub  WORD PTR [ecx-0x5b]
  41f0d9:	sbb    bh,BYTE PTR [eax]
  41f0db:	or     eax,0x5c7f84d3
  41f0e0:	dec    ecx
  41f0e1:	clc    
  41f0e2:	xor    eax,0xf7ead8c
  41f0e7:	lea    esp,[esi]
  41f0e9:	mov    edx,0xb1ceb28e
  41f0ee:	fdivr  DWORD PTR [ebx-0x7170ee53]
  41f0f4:	mov    edx,0xdea42be4
  41f0f9:	push   cs
  41f0fa:	mov    ah,0x9c
  41f0fc:	sub    BYTE PTR [ecx+0x23],bl
  41f0ff:	stc    
  41f100:	sar    DWORD PTR [ecx],cl
  41f102:	mov    WORD PTR [eax+ecx*4+0x63],ds
  41f106:	das    
  41f107:	push   0x9d7251f9
  41f10c:	or     edx,DWORD PTR [ecx+edx*8+0x3]
  41f110:	icebp  
  41f111:	add    edx,DWORD PTR [eax-0x77]
  41f114:	pop    es
  41f115:	adc    eax,0x21
  41f118:	or     ecx,DWORD PTR [ebx]
  41f11a:	test   BYTE PTR [edx+0x3522fdc4],al
  41f120:	mov    ecx,0x2227c27d
  41f125:	ja     0x41f0ee
  41f127:	jnp    0x41f158
  41f129:	sub    bl,0xee
  41f12c:	adc    DWORD PTR [edi-0x68408a03],esi
  41f132:	cmp    eax,0x99ddafe1
  41f137:	and    al,BYTE PTR [edx]
  41f139:	xor    eax,0xa2e40499
  41f13e:	mov    al,ds:0xb794262
  41f143:	adc    dl,cl
  41f145:	adc    eax,0x2730a0a4
  41f14a:	mov    eax,ds:0xd1b74ab9
  41f14f:	xchg   ebx,eax
  41f150:	ret    0xe770
  41f153:	adc    al,0xe6
  41f155:	cmp    ebx,DWORD PTR [edx+edx*4]
  41f158:	rcl    esi,0x88
  41f15b:	aas    
  41f15c:	test   DWORD PTR [ecx],0x28f29142
  41f162:	call   0x198ed50c
  41f167:	(bad)  
  41f168:	loopne 0x41f114
  41f16a:	js     0x41f194
  41f16c:	dec    esp
  41f16d:	lods   al,BYTE PTR ds:[esi]
  41f16e:	mov    cl,0xe4
  41f170:	mov    ebp,ebx
  41f172:	jae    0x41f189
  41f174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f175:	sahf   
  41f176:	adc    ah,BYTE PTR [esi]
  41f178:	push   es
  41f179:	ret    
  41f17a:	push   edx
  41f17b:	mov    ah,0xba
  41f17d:	adc    al,BYTE PTR [esi+0x10]
  41f180:	into   
  41f181:	in     eax,dx
  41f182:	(bad)  
  41f184:	(bad)  
  41f185:	or     eax,0x3b5b96b5
  41f18a:	scas   eax,DWORD PTR es:[edi]
  41f18b:	fld    DWORD PTR gs:[esi]
  41f18e:	loop   0x41f155
  41f190:	aad    0xfc
  41f192:	jbe    0x41f1c5
  41f194:	mov    ebp,0xbad97ce
  41f199:	imul   edi,DWORD PTR [edi],0x67
  41f19c:	jp     0x41f186
  41f19e:	cmp    BYTE PTR [ebp-0x28],dl
  41f1a1:	mov    ds,WORD PTR [ebp-0xc]
  41f1a4:	sbb    al,0xa6
  41f1a6:	jmp    0xf5149e30
  41f1ab:	mov    ecx,0xa67ee150
  41f1b0:	loopne 0x41f1a8
  41f1b2:	mov    edi,0x1d33d2fd
  41f1b7:	scas   al,BYTE PTR es:[edi]
  41f1b8:	aaa    
  41f1b9:	sbb    ebp,edx
  41f1bb:	dec    edx
  41f1bc:	xor    bl,0x7a
  41f1bf:	dec    esp
  41f1c0:	pop    ebx
  41f1c1:	loop   0x41f178
  41f1c3:	mov    dh,0x98
  41f1c5:	dec    ecx
  41f1c6:	sti    
  41f1c7:	mov    ds:0x684cb7b3,eax
  41f1cc:	adc    eax,0x21880a88
  41f1d1:	jns    0x41f21f
  41f1d3:	lock sub DWORD PTR [ebx+0x9],ebp
  41f1d7:	in     eax,dx
  41f1d8:	lea    esp,[eax]
  41f1da:	loop   0x41f228
  41f1dc:	out    0x6a,eax
  41f1de:	add    bh,BYTE PTR [eax-0x10]
  41f1e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1e3:	dec    esp
  41f1e4:	lahf   
  41f1e5:	dec    ebx
  41f1e6:	inc    esp
  41f1e7:	sbb    esi,DWORD PTR [ecx+0x70d903e7]
  41f1ed:	or     BYTE PTR ds:0xf4736ee8,dh
  41f1f3:	popa   
  41f1f4:	gs xchg edi,eax
  41f1f6:	or     DWORD PTR [ecx+eax*4-0x57],esi
  41f1fa:	(bad)  
  41f1fb:	sub    DWORD PTR [ecx],esi
  41f1fd:	mov    DWORD PTR [edx-0x30],ebp
  41f200:	mov    ah,0xce
  41f202:	imul   esp,DWORD PTR [edx-0x35],0x4a
  41f206:	aam    0x6e
  41f208:	pop    eax
  41f209:	test   BYTE PTR [ebx+0x35786f28],ah
  41f20f:	dec    esp
  41f210:	xor    al,0xe8
  41f212:	into   
  41f213:	mov    ebx,0x29a6c60e
  41f218:	cmp    esi,DWORD PTR [ecx]
  41f21a:	loop   0x41f21e
  41f21c:	enter  0xf3c2,0xd2
  41f220:	(bad)  [eax-0x1]
  41f223:	(bad)  
  41f224:	out    0xd9,al
  41f226:	pop    ebp
  41f227:	pop    eax
  41f228:	inc    ecx
  41f229:	popa   
  41f22a:	je     0x41f1df
  41f22c:	cdq    
  41f22d:	xchg   ecx,eax
  41f22e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f22f:	in     al,0xb4
  41f231:	push   ebp
  41f232:	in     al,dx
  41f233:	sbb    edx,DWORD PTR [ecx-0x6a2f0856]
  41f239:	enter  0x1db5,0x59
  41f23d:	cwde   
  41f23e:	cmp    al,0xda
  41f240:	push   esi
  41f241:	jg     0x41f27d
  41f243:	icebp  
  41f244:	inc    esp
  41f245:	push   0x33
  41f247:	stos   DWORD PTR es:[edi],eax
  41f248:	into   
  41f249:	dec    DWORD PTR [edi+ebp*2+0xb2025a3]
  41f250:	aaa    
  41f251:	popa   
  41f252:	(bad)  
  41f253:	stc    
  41f254:	inc    eax
  41f255:	arpl   di,bx
  41f257:	mov    dl,0xa0
  41f259:	out    dx,eax
  41f25a:	rcr    edi,0x26
  41f25d:	inc    ebx
  41f25e:	retf   0x8a99
  41f261:	dec    ebx
  41f262:	test   al,0x99
  41f264:	adc    eax,0xe5d1189d
  41f269:	push   esp
  41f26a:	mov    eax,ds:0xe81ffc4
  41f26f:	sahf   
  41f270:	and    al,0xb2
  41f272:	pop    edi
  41f273:	mov    DWORD PTR [ebp-0x1439dd94],esi
  41f279:	xor    DWORD PTR [di],esi
  41f27c:	add    dh,BYTE PTR [ecx]
  41f27e:	push   cs
  41f27f:	mov    edx,0x57eaf858
  41f284:	adc    al,0x22
  41f286:	xlat   BYTE PTR ds:[ebx]
  41f287:	jae    0x41f230
  41f289:	pop    edi
  41f28a:	cmp    DWORD PTR [edx+0x3a],edx
  41f28d:	adc    al,0xec
  41f28f:	jp     0x41f2e8
  41f291:	or     al,0x45
  41f293:	inc    ebp
  41f294:	push   0xffffff95
  41f296:	jg     0x41f280
  41f298:	(bad)  
  41f299:	clc    
  41f29a:	fidivr DWORD PTR ds:0x4c87452e
  41f2a0:	inc    esp
  41f2a1:	xor    ecx,ecx
  41f2a3:	jle    0x41f24f
  41f2a5:	retf   0xfff4
  41f2a8:	leave  
  41f2a9:	mov    ebp,0x7fc73120
  41f2ae:	pop    edx
  41f2af:	add    DWORD PTR [ecx+0x4e],eax
  41f2b2:	add    eax,0x22ba5c24
  41f2b7:	or     ch,BYTE PTR [ecx-0x56]
  41f2ba:	pop    ebp
  41f2bb:	loopne 0x41f2bf
  41f2bd:	cmp    BYTE PTR [edx+eax*2+0x6452ee95],0x1b
  41f2c5:	shr    BYTE PTR [esi+0x59],0x93
  41f2c9:	stos   DWORD PTR es:[edi],eax
  41f2ca:	repnz push edi
  41f2cc:	out    0x28,eax
  41f2ce:	sbb    BYTE PTR [ebx+0x27],ch
  41f2d1:	repnz sti 
  41f2d3:	jnp    0x41f2b1
  41f2d5:	or     al,0x55
  41f2d7:	sti    
  41f2d8:	scas   al,BYTE PTR es:[edi]
  41f2d9:	xor    ch,dh
  41f2db:	bswap  ecx
  41f2dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2de:	scas   al,BYTE PTR es:[edi]
  41f2df:	cmp    DWORD PTR [ebx],eax
  41f2e1:	adc    ebx,DWORD PTR [ecx]
  41f2e3:	rcr    BYTE PTR [edx+0xfcba86d],1
  41f2e9:	cli    
  41f2ea:	sub    dl,BYTE PTR [edi]
  41f2ec:	repz sub bh,BYTE PTR [ebx+0x190b820]
  41f2f3:	mov    al,ds:0x409a7176
  41f2f8:	push   ss
  41f2f9:	clc    
  41f2fa:	dec    esi
  41f2fb:	pop    es
  41f2fc:	std    
  41f2fd:	enter  0xcac2,0xd1
  41f301:	aas    
  41f302:	adc    BYTE PTR [edx+0x29],al
  41f305:	lea    esi,[eax+0xbbaadc7]
  41f30b:	mov    esi,0xbb40610d
  41f310:	sahf   
  41f311:	jge    0x41f33c
  41f313:	lods   al,BYTE PTR ds:[esi]
  41f314:	sub    al,0x31
  41f316:	out    0x1,al
  41f318:	push   ecx
  41f319:	std    
  41f31a:	mov    al,ds:0xa73c73a
  41f31f:	sub    al,0xe6
  41f321:	mov    ebp,0xeec4ce3d
  41f326:	cmp    eax,0xcb384aa7
  41f32b:	xchg   edx,eax
  41f32c:	ror    BYTE PTR [edx+0x68],1
  41f32f:	lods   al,BYTE PTR ds:[esi]
  41f330:	test   bl,0x8e
  41f333:	push   ebx
  41f334:	stc    
  41f335:	add    edx,DWORD PTR [esi]
  41f337:	lods   eax,DWORD PTR ds:[esi]
  41f338:	shl    BYTE PTR [ecx],cl
  41f33a:	mov    esi,0xc2dcfad5
  41f33f:	clc    
  41f340:	mov    esi,0xb93e65c5
  41f345:	pop    ss
  41f346:	lods   al,BYTE PTR ds:[esi]
  41f347:	xor    esp,DWORD PTR [eax]
  41f349:	mov    ebp,0xfe0e411d
  41f34e:	cdq    
  41f34f:	adc    al,0x28
  41f351:	xchg   ebp,eax
  41f353:	mov    al,0x72
  41f355:	dec    ebp
  41f356:	sub    al,0xa1
  41f358:	lahf   
  41f359:	mov    ebp,0x813ab0a5
  41f35e:	xchg   ecx,eax
  41f35f:	lods   eax,DWORD PTR ds:[esi]
  41f360:	retf   0x3c0d
  41f363:	sub    BYTE PTR [ecx+0x3c],dl
  41f366:	inc    ebx
  41f367:	jb     0x41f373
  41f369:	mov    ds:0xdb54a183,eax
  41f36e:	sar    BYTE PTR [edx],0x36
  41f371:	inc    ecx
  41f372:	xor    eax,0xfd84a2cb
  41f377:	cwde   
  41f378:	pop    eax
  41f379:	mov    dl,0x8
  41f37b:	fild   WORD PTR [ecx]
  41f37d:	fxch   st(3)
  41f37f:	dec    esi
  41f380:	shl    DWORD PTR [ebx+0x62565104],0xca
  41f387:	adc    eax,0x9f23db5a
  41f38c:	mov    cl,0xd6
  41f38e:	mov    ebx,0x1796687
  41f393:	mov    ebp,0x424dfdb6
  41f398:	push   ss
  41f399:	das    
  41f39a:	inc    eax
  41f39b:	sub    al,0x4f
  41f39d:	gs xchg esp,eax
  41f39f:	lock (bad) 
  41f3a1:	xchg   edi,eax
  41f3a2:	imul   esp,DWORD PTR [ecx-0x55],0xffffffb0
  41f3a6:	jo     0x41f37e
  41f3a8:	loope  0x41f3e5
  41f3aa:	cwde   
  41f3ab:	pop    ebp
  41f3ac:	xchg   ebp,eax
  41f3ad:	ds stos DWORD PTR es:[edi],eax
  41f3af:	pop    eax
  41f3b0:	popf   
  41f3b1:	ret    0xab9c
  41f3b4:	int    0x68
  41f3b6:	pop    edi
  41f3b7:	xor    eax,0xbf90f580
  41f3bc:	outs   dx,BYTE PTR ds:[esi]
  41f3bd:	cmp    DWORD PTR [esi],esp
  41f3bf:	pop    eax
  41f3c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3c1:	test   BYTE PTR [ebp+0x76],0x65
  41f3c5:	das    
  41f3c6:	call   0x8aa2:0x282cfead
  41f3cd:	leave  
  41f3ce:	sbb    DWORD PTR [esi+edi*8+0x47ae44cb],ecx
  41f3d5:	pop    ebx
  41f3d6:	sub    al,0xd4
  41f3d8:	(bad)  
  41f3d9:	cmc    
  41f3da:	and    edx,0xfffffff7
  41f3dd:	xor    ah,bh
  41f3df:	pop    esp
  41f3e0:	pop    ebp
  41f3e1:	push   0x18d880f1
  41f3e6:	xchg   edi,eax
  41f3e7:	fcmovnu st,st(3)
  41f3e9:	push   eax
  41f3ea:	xor    al,0x67
  41f3ec:	rcl    DWORD PTR [esi-0x78b85387],cl
  41f3f2:	push   edi
  41f3f3:	jb     0x41f420
  41f3f5:	adc    al,0x57
  41f3f7:	mov    bh,0x37
  41f3f9:	dec    ebp
  41f3fa:	dec    edx
  41f3fb:	hlt    
  41f3fc:	test   eax,0x2d21aa61
  41f401:	aas    
  41f402:	cmp    ebx,DWORD PTR [eax]
  41f404:	pop    ecx
  41f405:	pop    es
  41f406:	or     DWORD PTR [ecx+0xbeef403],ecx
  41f40c:	repnz mov bl,0x4f
  41f40f:	(bad)  
  41f410:	push   edi
  41f411:	sbb    al,0x8d
  41f413:	arpl   WORD PTR [eax+0x50a92306],ax
  41f419:	lock test DWORD PTR [ebp-0x75],0x70afdfe3
  41f421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f422:	in     eax,0xd8
  41f424:	mov    edi,0xf6b93037
  41f429:	jp     0x41f44b
  41f42b:	mov    ecx,0xbb2d5603
  41f430:	rcr    BYTE PTR [edx],1
  41f432:	or     dl,dh
  41f434:	imul   edx,DWORD PTR [esi+0x1d3001ef],0xce83ebd5
  41f43e:	aas    
  41f43f:	test   al,dh
  41f441:	sbb    BYTE PTR [edi-0x75],0x7
  41f445:	stos   BYTE PTR es:[edi],al
  41f446:	cmp    al,0xe9
  41f448:	or     ebp,ebx
  41f44a:	rcr    BYTE PTR [edi+0x169c76dc],cl
  41f450:	das    
  41f451:	fiadd  WORD PTR [eax]
  41f453:	pop    eax
  41f454:	lods   al,BYTE PTR ds:[esi]
  41f455:	add    cl,BYTE PTR [ebp-0x5a]
  41f458:	jb     0x41f3da
  41f45a:	imul   eax,DWORD PTR [esi-0x39099d92],0x3
  41f461:	xrelease xchg BYTE PTR [ecx-0x1d],ch
  41f465:	leave  
  41f466:	(bad)  
  41f467:	or     al,0x5
  41f469:	adc    BYTE PTR [ebp-0x63688089],dl
  41f46f:	pop    esi
  41f470:	fs xor bh,bh
  41f473:	mov    ebx,0xb1300a73
  41f478:	out    0xd5,al
  41f47a:	mov    bl,0x36
  41f47c:	xchg   ebx,eax
  41f47d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f47e:	cwd    
  41f480:	addr16 jnp 0x41f4bb
  41f483:	inc    edx
  41f484:	push   ecx
  41f485:	outs   dx,BYTE PTR ds:[esi]
  41f486:	mov    ebp,0x17474328
  41f48b:	push   edx
  41f48c:	mov    edi,DWORD PTR [ebx]
  41f48e:	hlt    
  41f48f:	xor    edx,DWORD PTR [edx]
  41f491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f492:	sub    BYTE PTR [esi-0x3f],bh
  41f495:	mov    ds:0xc4ac7816,al
  41f49a:	call   0x5e4b:0xd5322522
  41f4a1:	cmp    DWORD PTR ds:0x1451a227,ecx
  41f4a7:	mov    esp,0xd8f8c5f8
  41f4ac:	ins    DWORD PTR es:[edi],dx
  41f4ad:	sub    DWORD PTR [edi+0x78],esi
  41f4b0:	push   ds
  41f4b1:	sti    
  41f4b2:	jecxz  0x41f47e
  41f4b4:	push   ss
  41f4b5:	stos   DWORD PTR es:[edi],eax
  41f4b6:	mov    esi,0x4b456339
  41f4bb:	push   ss
  41f4bc:	mov    esp,0x4595da8d
  41f4c1:	sub    DWORD PTR [eax-0x1f],ebx
  41f4c4:	loop   0x41f4f8
  41f4c6:	jle    0x41f4ff
  41f4c8:	rcl    DWORD PTR ds:[eax-0x5f],cl
  41f4cc:	mov    ds:0xdc463216,al
  41f4d1:	pop    eax
  41f4d2:	xor    cl,ah
  41f4d4:	(bad)  
  41f4d5:	std    
  41f4d6:	ins    DWORD PTR es:[edi],dx
  41f4d7:	mov    ss,WORD PTR [edx]
  41f4d9:	cmp    BYTE PTR [ebp*2-0x45510e13],dl
  41f4e0:	daa    
  41f4e1:	sbb    al,0x6d
  41f4e3:	adc    eax,0x4a678080
  41f4e8:	or     eax,0xa79f10ed
  41f4ed:	or     al,0x83
  41f4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f0:	adc    al,0x55
  41f4f2:	inc    ecx
  41f4f3:	bound  edx,QWORD PTR [esi]
  41f4f5:	ror    DWORD PTR [edx],cl
  41f4f7:	adc    eax,0xb6826a1
  41f4fc:	add    DWORD PTR [edi+0x22feebe0],edi
  41f502:	ja     0x41f4af
  41f504:	dec    ecx
  41f505:	fs fcmovnb st,st(7)
  41f508:	test   eax,0x8fccf68a
  41f50d:	sub    eax,0xc2e714c1
  41f512:	pop    esi
  41f513:	aam    0x47
  41f515:	aaa    
  41f516:	mov    al,0xcf
  41f518:	pop    esp
  41f519:	sahf   
  41f51a:	repnz xchg esi,eax
  41f51d:	add    eax,0xb54899f3
  41f522:	and    eax,0xe68a23b9
  41f527:	int    0x3b
  41f529:	ins    BYTE PTR es:[edi],dx
  41f52a:	icebp  
  41f52b:	fwait
  41f52c:	jmp    0x6d71:0x7e5dc90c
  41f533:	add    DWORD PTR [edx],esp
  41f535:	dec    edi
  41f536:	pushf  
  41f537:	into   
  41f538:	push   ebp
  41f539:	scas   eax,DWORD PTR es:[edi]
  41f53a:	pop    esi
  41f53b:	jmp    0x41f5ab
  41f53d:	sbb    dh,bh
  41f53f:	add    BYTE PTR [edx+ebp*2],ch
  41f542:	xor    cl,BYTE PTR [edi+0x1d4e4310]
  41f548:	pop    ds
  41f549:	(bad)  
  41f54a:	push   edi
  41f54b:	xor    al,0x7
  41f54d:	leave  
  41f54e:	push   ebp
  41f54f:	xor    BYTE PTR [ebx+0x4b],dl
  41f552:	sub    ecx,DWORD PTR [eax+0x72]
  41f555:	pop    esi
  41f556:	push   es
  41f557:	outs   dx,DWORD PTR ds:[esi]
  41f558:	fisub  DWORD PTR [edi+esi*4+0x6d31e373]
  41f55f:	jp     0x41f4e5
  41f561:	sbb    esi,edi
  41f563:	lds    ebp,FWORD PTR [edx+0x393b3b1a]
  41f569:	iret   
  41f56a:	jno    0x41f51d
  41f56c:	add    eax,0xe5f5464a
  41f571:	fidivr DWORD PTR [edi-0x3c]
  41f574:	test   al,0x4d
  41f576:	imul   edi,DWORD PTR [ebp+0x7],0xffffffaa
  41f57a:	jb     0x41f5b8
  41f57c:	inc    esp
  41f57d:	or     ah,BYTE PTR [eax-0x58d83906]
  41f583:	fsub   QWORD PTR [ecx]
  41f585:	test   BYTE PTR [ebp+0x23],bh
  41f588:	sbb    al,0xae
  41f58a:	(bad)  
  41f58b:	adc    BYTE PTR [ebp+0x38ac0e3c],ch
  41f591:	cmp    eax,0x9a2d695d
  41f596:	fwait
  41f597:	outs   dx,BYTE PTR ds:[esi]
  41f598:	outs   dx,BYTE PTR ds:[esi]
  41f599:	in     al,0x78
  41f59b:	retf   
  41f59c:	inc    DWORD PTR [eax+edi*4+0x7]
  41f5a0:	mov    ah,BYTE PTR [esp+ecx*2-0x75]
  41f5a4:	daa    
  41f5a5:	adc    eax,0xd43f8e00
  41f5aa:	mov    edi,0x30e285cd
  41f5af:	add    BYTE PTR [ecx],0x35
  41f5b2:	sub    BYTE PTR [ecx-0x55a7361d],ah
  41f5b8:	popf   
  41f5b9:	inc    esp
  41f5ba:	and    BYTE PTR [edx],bl
  41f5bc:	mul    DWORD PTR [esp+ecx*8+0x38]
  41f5c0:	inc    esp
  41f5c1:	ret    0xe13d
  41f5c4:	cmp    BYTE PTR ds:[edx+0x34b98dae],dl
  41f5cb:	in     al,dx
  41f5cc:	lahf   
  41f5cd:	dec    eax
  41f5ce:	mov    edi,0x4676fda8
  41f5d3:	stos   DWORD PTR es:[edi],eax
  41f5d4:	and    eax,0x89904d72
  41f5d9:	dec    esp
  41f5da:	mov    ds:0xfab90a4,al
  41f5df:	arpl   WORD PTR [ecx+0x51],ax
  41f5e2:	ret    
  41f5e3:	clc    
  41f5e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5e5:	pop    ecx
  41f5e6:	dec    ecx
  41f5e7:	mov    cl,0xa7
  41f5e9:	cld    
  41f5ea:	retf   
  41f5eb:	popa   
  41f5ec:	bound  ebp,QWORD PTR [ebp+0x5e5f7ca0]
  41f5f2:	mov    bh,0x58
  41f5f4:	mov    ds:0x506f02fd,al
  41f5f9:	popa   
  41f5fa:	inc    edx
  41f5fb:	fcomp  QWORD PTR [ecx+0x10524ad3]
  41f601:	std    
  41f602:	js     0x41f625
  41f604:	popa   
  41f605:	lea    ebp,[ebx+0x7326295d]
  41f60b:	out    0x4e,eax
  41f60d:	iret   
  41f60e:	retf   0xa6e
  41f611:	fldcw  WORD PTR [edx-0x7252e118]
  41f617:	(bad)  
  41f618:	fs cld 
  41f61a:	or     DWORD PTR [esi+0x164ffe13],edx
  41f620:	mov    ah,0x44
  41f622:	push   ebx
  41f623:	pusha  
  41f624:	inc    esi
  41f625:	xchg   DWORD PTR [edx+0x75],edx
  41f628:	dec    ecx
  41f629:	xchg   esi,eax
  41f62a:	sub    bl,cl
  41f62c:	outs   dx,BYTE PTR ds:[esi]
  41f62d:	mov    edx,0x9dc8c863
  41f632:	inc    eax
  41f633:	in     al,0x84
  41f635:	lea    edi,[ecx]
  41f637:	cwde   
  41f638:	jo     0x41f634
  41f63a:	int    0x1f
  41f63c:	dec    esp
  41f63d:	in     eax,dx
  41f63e:	ficom  DWORD PTR [edi]
  41f640:	imul   ebp,edi,0x46c24cd3
  41f646:	lods   eax,DWORD PTR ds:[esi]
  41f647:	ins    DWORD PTR es:[edi],dx
  41f648:	xor    BYTE PTR [esp+eax*8+0x76],0xd1
  41f64d:	inc    edx
  41f64e:	and    bl,BYTE PTR [edx]
  41f650:	dec    esp
  41f651:	add    eax,0x6a1e0d92
  41f656:	jb     0x41f69a
  41f658:	jns    0x41f5e8
  41f65a:	sbb    al,0xbd
  41f65c:	sub    eax,0xc62cade0
  41f661:	rcl    DWORD PTR [ebx-0x60],1
  41f664:	out    dx,al
  41f665:	cmp    al,0x36
  41f667:	ret    
  41f668:	in     eax,dx
  41f669:	js     0x41f615
  41f66b:	cmp    al,0xfc
  41f66d:	mov    esp,0xf73008ed
  41f672:	std    
  41f673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f674:	scas   al,BYTE PTR es:[edi]
  41f675:	bnd jl 0x41f664
  41f678:	loop   0x41f6d0
  41f67a:	and    eax,0xa71dbe8b
  41f67f:	add    eax,0x53e6e390
  41f684:	push   ds
  41f685:	les    ebp,FWORD PTR [ecx+0x34de10fc]
  41f68b:	add    al,0x1f
  41f68d:	inc    edi
  41f68e:	bound  ebx,QWORD PTR [esp+edi*1-0x71]
  41f692:	inc    ebp
  41f693:	adc    BYTE PTR [ebx],dl
  41f695:	or     BYTE PTR [ebx+0x45],dh
  41f698:	sbb    al,0x48
  41f69a:	jmp    DWORD PTR [eax-0x4a]
  41f69d:	jbe    0x41f676
  41f69f:	cmp    esi,DWORD PTR [edx]
  41f6a1:	and    DWORD PTR [ebx],ebx
  41f6a3:	push   ecx
  41f6a4:	icebp  
  41f6a5:	xor    edx,DWORD PTR ds:[eax+0x44ef0fda]
  41f6ac:	sbb    DWORD PTR [edx-0x54],0x15
  41f6b0:	add    BYTE PTR [edx],bl
  41f6b2:	cmp    al,dl
  41f6b4:	les    ecx,FWORD PTR [eax+0x37e3ef3f]
  41f6ba:	add    ebx,DWORD PTR cs:[ecx-0x4d]
  41f6be:	addr16 inc edx
  41f6c0:	xor    ebp,ebx
  41f6c2:	loopne 0x41f6a7
  41f6c4:	push   esi
  41f6c5:	mov    edi,0xb69e992e
  41f6ca:	sbb    ah,bl
  41f6cc:	pop    edx
  41f6cd:	and    edi,DWORD PTR [esi]
  41f6cf:	je     0x41f6e7
  41f6d1:	(bad)  
  41f6d2:	mov    dh,0x58
  41f6d4:	test   BYTE PTR [edx+0x63],dh
  41f6d7:	stos   BYTE PTR es:[edi],al
  41f6d8:	int3   
  41f6d9:	or     ebx,ecx
  41f6db:	jo     0x41f70a
  41f6dd:	test   bl,0xcc
  41f6e0:	jmp    0x41f6e9
  41f6e2:	pop    es
  41f6e3:	shl    ch,1
  41f6e5:	adc    DWORD PTR [eax-0x12633cbe],edx
  41f6eb:	jae    0x41f6d5
  41f6ed:	push   eax
  41f6ee:	cmp    edx,ecx
  41f6f0:	sub    BYTE PTR [edi+eax*4+0x16],dl
  41f6f4:	loopne 0x41f691
  41f6f6:	call   0x42d3:0x24a2320d
  41f6fd:	mov    esp,0xe66a1986
  41f702:	pop    edi
  41f703:	push   ebx
  41f704:	sahf   
  41f705:	aam    0x7c
  41f707:	jmp    0x41f77c
  41f709:	jmp    0x6ecc:0xb06030bb
  41f710:	jle    0x41f733
  41f712:	dec    edi
  41f713:	xchg   edx,eax
  41f714:	inc    ebx
  41f715:	outs   dx,BYTE PTR ds:[esi]
  41f716:	pop    ecx
  41f717:	jecxz  0x41f780
  41f719:	fstp   TBYTE PTR [ecx+esi*2]
  41f71c:	into   
  41f71d:	(bad)  
  41f71e:	cwde   
  41f71f:	sahf   
  41f720:	mov    WORD PTR [ebx],ds
  41f722:	shr    DWORD PTR [eax-0x13a3956],0x8a
  41f729:	rol    DWORD PTR [ebx],0xb2
  41f72c:	das    
  41f72d:	jecxz  0x41f713
  41f72f:	imul   ebx,DWORD PTR [edi-0x6f773ac2],0x3e6667f5
  41f739:	ficom  DWORD PTR [ebx+0x3f]
  41f73c:	add    bh,dh
  41f73e:	push   es
  41f73f:	xchg   edi,eax
  41f740:	mov    edi,0x74a0fdcb
  41f745:	push   es
  41f746:	out    0xad,eax
  41f748:	adc    ebp,DWORD PTR [ebx]
  41f74a:	jg     0x41f7a1
  41f74c:	dec    esp
  41f74d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41f74f:	jbe    0x41f74e
  41f751:	repnz scas al,BYTE PTR es:[edi]
  41f753:	xchg   ebx,eax
  41f754:	jecxz  0x41f6ec
  41f756:	aaa    
  41f757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f758:	sbb    esp,ecx
  41f75a:	mov    edi,0xbbbef921
  41f75f:	push   ecx
  41f760:	xor    ebp,esi
  41f762:	push   ecx
  41f763:	dec    edx
  41f764:	rcr    DWORD PTR [ebx-0x522cbdbc],cl
  41f76a:	xchg   ecx,eax
  41f76b:	repz pop edi
  41f76d:	leave  
  41f76e:	and    eax,0x8449be2d
  41f773:	inc    eax
  41f774:	xchg   esi,eax
  41f775:	jmp    0x41f7e6
  41f777:	mov    es,WORD PTR [ecx+0x1c786d81]
  41f77d:	cmp    BYTE PTR [edi],bh
  41f77f:	retf   
  41f780:	mov    ah,0x92
  41f782:	out    0x8d,eax
  41f784:	outs   dx,BYTE PTR ds:[esi]
  41f785:	sahf   
  41f786:	in     eax,dx
  41f787:	repnz mov esp,0x1fa6ca1
  41f78d:	stos   BYTE PTR es:[edi],al
  41f78e:	adc    eax,0x26c572d5
  41f793:	add    bh,ch
  41f795:	icebp  
  41f796:	pushf  
  41f797:	les    esi,FWORD PTR [ebp-0x2]
  41f79a:	or     ch,BYTE PTR [esi-0x6781d78f]
  41f7a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7a1:	hlt    
  41f7a2:	into   
  41f7a3:	dec    edi
  41f7a4:	sbb    eax,DWORD PTR [ecx]
  41f7a6:	mov    edi,db5
  41f7a9:	ins    BYTE PTR es:[edi],dx
  41f7aa:	nop
  41f7ab:	js     0x41f756
  41f7ad:	xlat   BYTE PTR ds:[ebx]
  41f7ae:	test   DWORD PTR [edi+0x6cc0e467],edi
  41f7b4:	xchg   edi,eax
  41f7b5:	dec    ebp
  41f7b6:	fstp   TBYTE PTR [eax+0x4b]
  41f7b9:	and    al,0x92
  41f7bb:	pop    edx
  41f7bc:	(bad)  
  41f7bd:	imul   esp,edx,0x2b
  41f7c0:	jae    0x41f7a6
  41f7c2:	adc    al,0x62
  41f7c4:	mul    DWORD PTR [eax+0x37f9705a]
  41f7ca:	cdq    
  41f7cb:	sub    edx,DWORD PTR [ebp+ecx*4-0x32]
  41f7cf:	push   0x3749103d
  41f7d4:	sbb    DWORD PTR [edx],ecx
  41f7d6:	js     0x41f767
  41f7d8:	out    dx,al
  41f7d9:	repnz push cs
  41f7db:	dec    edx
  41f7dc:	dec    DWORD PTR [edx+0x33]
  41f7df:	in     al,0x8
  41f7e1:	loopne 0x41f851
  41f7e3:	adc    BYTE PTR [edi+0x63a3d65c],cl
  41f7e9:	cmp    BYTE PTR [ecx-0x2c5760e6],ah
  41f7ef:	dec    esp
  41f7f0:	and    al,0x21
  41f7f2:	(bad)  
  41f7f3:	call   0xad42:0xeb2ed508
  41f7fa:	jo     0x41f784
  41f7fc:	fst    st(4)
  41f7fe:	lea    edx,[ebx]
  41f800:	sbb    ch,BYTE PTR ds:0x7235fe9f
  41f806:	mov    dh,0xa
  41f808:	adc    eax,0x647b292f
  41f80d:	jmp    0xcc5c:0xf4f76f5e
  41f814:	jg     0x41f7ff
  41f816:	dec    esi
  41f817:	xchg   ebx,eax
  41f818:	das    
  41f819:	loope  0x41f7bc
  41f81b:	sub    BYTE PTR [ecx+0x6b4df4a6],al
  41f821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f822:	in     eax,0x56
  41f824:	xchg   edi,eax
  41f825:	std    
  41f826:	jne    0x41f805
  41f828:	push   esp
  41f829:	mov    DWORD PTR [esi],edx
  41f82b:	mov    ecx,0x6519fa5a
  41f830:	out    0xc1,eax
  41f832:	pop    esi
  41f833:	(bad)  
  41f834:	or     DWORD PTR [ebx-0x78],edi
  41f837:	jp     0x41f89c
  41f839:	mov    dh,0xa5
  41f83b:	pop    ss
  41f83c:	mov    al,0x6f
  41f83e:	call   0x1f20:0xebfb979b
  41f845:	dec    edi
  41f846:	or     al,0x86
  41f848:	xor    dl,BYTE PTR [edx]
  41f84a:	pop    ebx
  41f84b:	inc    esp
  41f84c:	push   esi
  41f84d:	and    BYTE PTR [edi-0x521d243e],cl
  41f853:	rol    DWORD PTR [ecx],0x13
  41f856:	ja     0x41f890
  41f858:	push   ebp
  41f859:	stos   DWORD PTR es:[edi],eax
  41f85a:	pusha  
  41f85b:	into   
  41f85c:	mov    dl,0x18
  41f85e:	arpl   WORD PTR [esi],bx
  41f860:	out    0x3,al
  41f862:	inc    ecx
  41f863:	popa   
  41f864:	out    0x6c,al
  41f866:	stos   DWORD PTR es:[edi],eax
  41f867:	cmp    al,0xbc
  41f869:	mov    eax,ds:0x27d5bd86
  41f86e:	in     eax,0x10
  41f870:	test   eax,0x301633ae
  41f875:	push   ss
  41f876:	addr16 nop
  41f878:	xlat   BYTE PTR ds:[ebx]
  41f879:	les    eax,FWORD PTR [eax-0x789de892]
  41f87f:	cli    
  41f880:	cdq    
  41f881:	in     al,0xa
  41f883:	ss dec esi
  41f885:	inc    edx
  41f886:	inc    edi
  41f887:	sbb    al,0x8f
  41f889:	mov    esp,0xdb64c02c
  41f88e:	push   0x31
  41f890:	mov    ch,0x24
  41f892:	or     cl,dl
  41f894:	dec    esp
  41f895:	es (bad) 
  41f897:	lahf   
  41f898:	xor    al,0x5d
  41f89a:	adc    al,0x6f
  41f89c:	in     eax,0xa7
  41f89e:	add    eax,0x3a551942
  41f8a3:	out    dx,al
  41f8a4:	sub    al,0xc4
  41f8a6:	in     eax,dx
  41f8a7:	popf   
  41f8a8:	mov    ebx,0xbefacc48
  41f8ad:	sbb    BYTE PTR [eax+edi*8-0x2eebfe85],bl
  41f8b4:	gs jge 0x41f877
  41f8b7:	pop    ss
  41f8b8:	out    0xaf,al
  41f8ba:	cmp    ah,BYTE PTR [eax+0x7e]
  41f8bd:	aad    0x6a
  41f8bf:	jg     0x41f8ed
  41f8c1:	push   ebp
  41f8c2:	aam    0x50
  41f8c4:	jecxz  0x41f8b1
  41f8c6:	in     al,0x8d
  41f8c8:	mov    ss,WORD PTR [edi+0x290eeaea]
  41f8ce:	jns    0x41f8d1
  41f8d0:	mov    edi,0x92f785e3
  41f8d5:	sub    DWORD PTR [ebx+esi*8],0x91a7a931
  41f8dc:	push   0xd
  41f8de:	and    al,0xdf
  41f8e0:	gs and edx,ebp
  41f8e3:	mov    esi,0xc2fb27e1
  41f8e8:	and    al,0xc6
  41f8ea:	add    BYTE PTR [ecx],bl
  41f8ec:	mul    DWORD PTR [ebp-0x27]
  41f8ef:	xchg   esp,eax
  41f8f0:	scas   eax,DWORD PTR es:[edi]
  41f8f1:	add    BYTE PTR [edi-0x4794185e],dl
  41f8f7:	in     al,0x54
  41f8f9:	icebp  
  41f8fa:	(bad)  
  41f8fc:	jecxz  0x41f8c1
  41f8fe:	addr16 das 
  41f900:	push   ecx
  41f901:	cmp    BYTE PTR [ebp+0x3dfdbc75],0xbe
  41f908:	loope  0x41f901
  41f90a:	pusha  
  41f90b:	jle    0x41f979
  41f90d:	(bad)  
  41f90e:	jg     0x41f988
  41f910:	add    DWORD PTR [edx],eax
  41f912:	xchg   ecx,eax
  41f913:	mov    edi,0x611b89f2
  41f918:	pop    ebp
  41f919:	sub    edx,DWORD PTR [ebp+0x2d9f584a]
  41f91f:	adc    ch,BYTE PTR [ecx]
  41f921:	pshufw mm0,QWORD PTR [ebx],0x22
  41f925:	test   BYTE PTR [ecx+0x46],dl
  41f928:	add    ah,al
  41f92a:	xchg   ebp,eax
  41f92b:	sbb    bl,BYTE PTR [ebp+0x40]
  41f92e:	pop    esi
  41f92f:	mov    ds:0x73570c0c,al
  41f934:	mov    cl,0x37
  41f936:	lock jle 0x41f8ff
  41f939:	mov    esi,0xaf325e01
  41f93e:	inc    esi
  41f93f:	inc    edi
  41f940:	pop    esp
  41f941:	jo     0x41f99f
  41f943:	cmp    eax,ecx
  41f945:	dec    ecx
  41f946:	mov    WORD PTR [ecx+0x42],es
  41f949:	mov    ebx,0xa4533931
  41f94e:	in     al,dx
  41f94f:	adc    esi,eax
  41f951:	xchg   ecx,eax
  41f953:	mov    ecx,DWORD PTR [eax+0x4f]
  41f956:	jmp    0x4ea7:0xd9ba581e
  41f95d:	lods   al,BYTE PTR ds:[esi]
  41f95e:	cwde   
  41f95f:	cmc    
  41f960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f961:	push   es
  41f962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f963:	or     BYTE PTR [edi],bh
  41f965:	pop    ss
  41f966:	mov    ebx,0xdf53b19e
  41f96b:	mov    ah,0x65
  41f96d:	xor    esp,DWORD PTR [edx]
  41f96f:	jmpw   0x86fd
  41f973:	popa   
  41f974:	loopne 0x41f92b
  41f976:	sbb    bh,ah
  41f978:	pop    ds
  41f979:	and    DWORD PTR [esi],ebp
  41f97b:	xor    eax,0xc6212cde
  41f980:	(bad)  
  41f981:	hlt    
  41f982:	in     al,dx
  41f983:	lea    ecx,[ebx-0x19]
  41f986:	call   0xa917107f
  41f98b:	inc    edi
  41f98c:	xor    DWORD PTR [ebx+0x37f4f637],edx
  41f992:	jae    0x41fa06
  41f994:	push   ecx
  41f995:	out    0xc3,al
  41f997:	push   ebp
  41f998:	(bad)  
  41f999:	std    
  41f99a:	pusha  
  41f99b:	data16 adc ch,bl
  41f99e:	lods   al,BYTE PTR ds:[esi]
  41f99f:	ficomp DWORD PTR [edx+0x32f3818d]
  41f9a5:	or     BYTE PTR [ecx],bh
  41f9a7:	ret    
  41f9a8:	fimul  WORD PTR [eax-0x7b79755]
  41f9ae:	add    esi,DWORD PTR [eax+0x52]
  41f9b1:	enter  0xb129,0x47
  41f9b5:	push   eax
  41f9b6:	mov    esp,0x5f88157c
  41f9bb:	xlat   BYTE PTR ds:[ebx]
  41f9bc:	push   0x49
  41f9be:	jmp    0x598d:0x719cc5d1
  41f9c5:	popf   
  41f9c6:	popa   
  41f9c7:	(bad)  
  41f9c8:	retf   
  41f9c9:	sbb    edi,DWORD PTR [ecx+0x77587089]
  41f9cf:	adc    edx,DWORD PTR [esi]
  41f9d1:	mov    edx,0x8a8dbf79
  41f9d6:	cmp    dl,BYTE PTR [eax-0x5d]
  41f9d9:	ret    0xf395
  41f9dc:	sbb    esi,DWORD PTR [ebx-0x10510299]
  41f9e2:	pop    eax
  41f9e3:	ds mov ch,0x60
  41f9e6:	push   0xffffffbf
  41f9e8:	and    ch,bl
  41f9ea:	push   es
  41f9eb:	out    0x5a,eax
  41f9ed:	pop    edi
  41f9ee:	sub    ecx,DWORD PTR [edi+edx*8-0x79cdca0a]
  41f9f5:	sub    al,al
  41f9f7:	es jo  0x41fa34
  41f9fa:	aaa    
  41f9fb:	pop    eax
  41f9fc:	repz fidivr WORD PTR ss:[edx-0x5a]
  41fa01:	mov    eax,ds:0x16c7cf3
  41fa06:	mov    al,BYTE PTR [edi]
  41fa08:	jae    0x41f9c1
  41fa0a:	xchg   BYTE PTR [ebx],cl
  41fa0c:	jmp    0x41fa37
  41fa0e:	xchg   esp,eax
  41fa0f:	fwait
  41fa10:	loopne 0x41fa1a
  41fa12:	addr16 pop edx
  41fa14:	shl    BYTE PTR [ebx],1
  41fa16:	out    0xce,eax
  41fa18:	hlt    
  41fa19:	mov    ebp,0x46bb5945
  41fa1e:	mov    esp,0xa9426c5
  41fa23:	cmc    
  41fa24:	xor    BYTE PTR ds:0x8c15545,0xf6
  41fa2b:	add    al,0xdf
  41fa2d:	sub    eax,0x553a2f08
  41fa32:	fwait
  41fa33:	push   ss
  41fa34:	inc    edi
  41fa35:	and    DWORD PTR [esi+0x35],edi
  41fa38:	add    BYTE PTR [ebx+ebp*2-0x929aa57],bl
  41fa3f:	std    
  41fa40:	xchg   DWORD PTR [edi+0x4b],esi
  41fa43:	bound  esp,QWORD PTR [esi+0x52]
  41fa46:	es xchg esi,eax
  41fa48:	je     0x41fa86
  41fa4a:	lea    ebx,[ebp+0x5bee7e09]
  41fa50:	cld    
  41fa51:	mov    esp,0x8c11e911
  41fa56:	stc    
  41fa57:	inc    edx
  41fa58:	push   cs
  41fa59:	imul   ebp,DWORD PTR ds:[ebx-0x3a5ddc7d],0xe36c2759
  41fa64:	push   ebx
  41fa65:	retf   0x5bd6
  41fa68:	pop    esi
  41fa69:	push   ecx
  41fa6a:	xor    al,0xa8
  41fa6c:	pop    ebp
  41fa6d:	push   es
  41fa6e:	addr16 mov ebx,0x6c02b756
  41fa74:	(bad)  
  41fa75:	enter  0xc347,0x5a
  41fa79:	outs   dx,DWORD PTR ds:[esi]
  41fa7a:	push   0xffffffa6
  41fa7c:	test   al,0xb1
  41fa7e:	mov    eax,ds:0x45825c83
  41fa83:	jmp    0x41fa80
  41fa85:	mov    dl,0xb7
  41fa87:	and    DWORD PTR [ecx+edx*2+0x1ec6e83b],eax
  41fa8e:	pusha  
  41fa8f:	jno    0x41fa2b
  41fa91:	test   BYTE PTR [edx+edx*1],dl
  41fa94:	scas   al,BYTE PTR es:[edi]
  41fa95:	jecxz  0x41faca
  41fa97:	sub    dl,BYTE PTR [eax+0xc1c97e1]
  41fa9d:	ss popf 
  41fa9f:	and    ebx,ebp
  41faa1:	sbb    eax,0xe40880a1
  41faa6:	arpl   WORD PTR [edx],dx
  41faa8:	rol    BYTE PTR [edi],cl
  41faaa:	inc    ebp
  41faab:	data16 fbstp TBYTE PTR [ebx+0x66]
  41faaf:	lods   al,BYTE PTR ds:[esi]
  41fab0:	jg     0x41faa7
  41fab2:	fcom   QWORD PTR [ebp+0x3eebcf6c]
  41fab8:	push   edi
  41fab9:	inc    edx
  41faba:	fwait
  41fabb:	adc    ecx,eax
  41fabd:	shl    BYTE PTR [esp+ebp*2+0x4a38eb67],1
  41fac4:	mov    dh,0x72
  41fac6:	xchg   edi,eax
  41fac7:	das    
  41fac8:	icebp  
  41fac9:	mov    edi,0x26d54c11
  41face:	dec    ebx
  41facf:	sbb    esi,DWORD PTR [ecx-0x77]
  41fad2:	scas   al,BYTE PTR es:[edi]
  41fad3:	cmp    BYTE PTR [eax+0x7c],dh
  41fad6:	xchg   ebp,eax
  41fad7:	lea    edx,[eax-0x2ad1aa42]
  41fadd:	mov    ds:0x411e41b7,al
  41fae2:	adc    eax,0x4af671ee
  41fae7:	or     al,0xb3
  41fae9:	in     eax,dx
  41faea:	aaa    
  41faeb:	cwde   
  41faec:	push   eax
  41faed:	fsubr  DWORD PTR [edx+0x15d915d0]
  41faf3:	fidiv  DWORD PTR [edi-0x53]
  41faf6:	inc    esp
  41faf7:	retf   0x328e
  41fafa:	inc    ebp
  41fafb:	push   ss
  41fafc:	mov    ch,0xe8
  41fafe:	sub    esp,DWORD PTR [edx-0x76]
  41fb01:	cld    
  41fb02:	or     al,0x5d
  41fb04:	sbb    al,0xd1
  41fb06:	addr16 jmp 0xb7f3:0xad4eda39
  41fb0e:	ret    0x7568
  41fb11:	pop    ebx
  41fb12:	(bad)  
  41fb13:	push   esp
  41fb14:	(bad)  
  41fb15:	and    cl,BYTE PTR [eax-0x74]
  41fb18:	xchg   esi,eax
  41fb19:	push   cs
  41fb1a:	and    al,BYTE PTR [ebp-0x79]
  41fb1d:	jecxz  0x41fac4
  41fb1f:	jge    0x41fab1
  41fb21:	(bad)
  41fb24:	aad    0xad
  41fb26:	sub    BYTE PTR ds:0xc11ae04a,cl
  41fb2c:	cld    
  41fb2d:	loopne 0x41fb78
  41fb2f:	aas    
  41fb30:	push   ebx
  41fb31:	pop    esp
  41fb32:	and    DWORD PTR [esi+edx*1-0x80],edx
  41fb36:	ins    BYTE PTR es:[edi],dx
  41fb37:	mov    eax,ds:0x21947d39
  41fb3c:	test   BYTE PTR [ebx],0xee
  41fb3f:	push   0x57
  41fb41:	sbb    eax,0x3f9e492
  41fb46:	mov    dl,0xcf
  41fb48:	and    edi,DWORD PTR [esi+esi*8-0x439d1ede]
  41fb4f:	ret    
  41fb50:	pop    esi
  41fb51:	mov    cl,0x1c
  41fb53:	fwait
  41fb54:	cli    
  41fb55:	push   eax
  41fb56:	mov    ebp,0x8c377d01
  41fb5b:	mov    BYTE PTR [ebx+0x35f378e4],dh
  41fb61:	xchg   ebx,eax
  41fb63:	cmp    ch,ah
  41fb65:	mov    fs,WORD PTR [eax-0x53]
  41fb68:	mov    dh,0xa5
  41fb6a:	ins    DWORD PTR es:[edi],dx
  41fb6b:	sub    DWORD PTR [ebx+0x7ec91f0],ebx
  41fb71:	or     edx,eax
  41fb73:	mov    ds:0x3f051302,eax
  41fb78:	jbe    0x41fb3e
  41fb7a:	jmp    0x41fbc7
  41fb7c:	pushf  
  41fb7d:	and    BYTE PTR [ebx-0x52],ch
  41fb80:	iret   
  41fb81:	mov    edx,eax
  41fb83:	hlt    
  41fb84:	call   0xe4ba7423
  41fb89:	pushf  
  41fb8a:	mov    dl,0xf3
  41fb8c:	fcomp  QWORD PTR [ebx]
  41fb8e:	push   0x6c
  41fb90:	adc    al,0x73
  41fb92:	idiv   DWORD PTR [ecx]
  41fb94:	shr    DWORD PTR [ecx-0x14fc5ee6],1
  41fb9a:	mov    al,0x71
  41fb9c:	sti    
  41fb9d:	cmp    eax,0x7ce15d6b
  41fba2:	dec    edx
  41fba3:	mov    edi,edi
  41fba5:	into   
  41fba6:	jno    0x41fb39
  41fba8:	lahf   
  41fba9:	ror    bl,1
  41fbab:	adc    eax,0x2190ce7d
  41fbb0:	sub    ebx,eax
  41fbb2:	test   BYTE PTR [ebx-0x60],cl
  41fbb5:	imul   ebp,DWORD PTR [ebp+0x30fd2518],0xc75cb13
  41fbbf:	and    eax,0xaa233689
  41fbc4:	lods   al,BYTE PTR ds:[esi]
  41fbc5:	pop    ebx
  41fbc6:	ret    0x327f
  41fbc9:	jne    0x41fb8a
  41fbcb:	pop    edi
  41fbcc:	mov    al,0x6d
  41fbce:	push   cs
  41fbcf:	sbb    ah,BYTE PTR [eax-0x27341b27]
  41fbd5:	mov    ch,0x8c
  41fbd7:	int    0xf5
  41fbd9:	jecxz  0x41fc48
  41fbdb:	push   ecx
  41fbdc:	loope  0x41fc53
  41fbde:	sub    al,0x1c
  41fbe0:	sbb    al,al
  41fbe2:	call   0xd6dbeb8d
  41fbe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbe8:	push   ebx
  41fbe9:	lea    esp,[esi-0xd]
  41fbec:	popf   
  41fbed:	das    
  41fbee:	xchg   ecx,eax
  41fbef:	rcl    DWORD PTR [edx+0x9],0x3d
  41fbf3:	icebp  
  41fbf4:	dec    eax
  41fbf5:	jecxz  0x41fbd7
  41fbf7:	bound  ecx,QWORD PTR [edi-0x957e54f]
  41fbfd:	ja     0x41fbe8
  41fbff:	leave  
  41fc00:	lods   al,BYTE PTR ds:[esi]
  41fc01:	dec    ebp
  41fc02:	cmp    al,0x8a
  41fc04:	sbb    al,0x8f
  41fc06:	pop    ebx
  41fc07:	inc    ecx
  41fc08:	lea    edi,[ecx-0x9fac2bb]
  41fc0e:	rcr    DWORD PTR [edi],cl
  41fc10:	xchg   esp,eax
  41fc11:	fbstp  TBYTE PTR [eax+0x18bedc1c]
  41fc17:	dec    ebx
  41fc18:	imul   ecx,DWORD PTR [esi],0xe9dec8ff
  41fc1e:	jge    0x41fc8c
  41fc20:	mov    BYTE PTR [ecx+edi*4+0x22],bh
  41fc24:	dec    edx
  41fc25:	test   al,0x47
  41fc27:	in     eax,dx
  41fc28:	iret   
  41fc29:	fucompp 
  41fc2b:	fsubr  QWORD PTR gs:[edi-0x25139a3d]
  41fc32:	pop    ecx
  41fc33:	push   es
  41fc34:	push   ebx
  41fc35:	std    
  41fc36:	outs   dx,DWORD PTR ds:[esi]
  41fc37:	lahf   
  41fc38:	dec    esp
  41fc39:	xchg   ebp,eax
  41fc3a:	icebp  
  41fc3b:	inc    edi
  41fc3c:	mov    dh,0xa1
  41fc3e:	cmp    eax,0x7bec5eb7
  41fc43:	in     al,0xab
  41fc45:	mov    ecx,0xb3751d8b
  41fc4a:	push   ebx
  41fc4b:	retf   0x8358
  41fc4e:	scas   al,BYTE PTR es:[edi]
  41fc4f:	out    dx,eax
  41fc50:	test   BYTE PTR [edi-0x7c],ah
  41fc53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc54:	sbb    ecx,edi
  41fc56:	xchg   ebx,eax
  41fc57:	adc    BYTE PTR [edx+0x6c],ch
  41fc5a:	mov    ds:0xbd76fe99,eax
  41fc5f:	sti    
  41fc60:	int    0x7e
  41fc62:	sbb    al,0xab
  41fc64:	mov    ah,0xd0
  41fc67:	shl    DWORD PTR [eax+edi*1],1
  41fc6a:	iret   
  41fc6b:	sbb    al,0x9a
  41fc6d:	enter  0x9607,0xd
  41fc71:	adc    ebp,DWORD PTR [eax-0x5bbbb499]
  41fc77:	mov    esp,0x9fe7a710
  41fc7c:	xchg   BYTE PTR [eax+0x65629c8d],dl
  41fc82:	(bad)  
  41fc83:	mov    bh,0x55
  41fc85:	ror    DWORD PTR [edi+esi*4+0x74],cl
  41fc89:	mov    es:0xb21caf03,eax
  41fc8f:	push   esp
  41fc90:	jmp    0x11dffe43
  41fc95:	dec    edx
  41fc96:	push   edi
  41fc97:	push   ebp
  41fc98:	outs   dx,DWORD PTR ds:[esi]
  41fc99:	xor    BYTE PTR ds:0x990b47e5,dl
  41fc9f:	cmp    DWORD PTR [ecx],edx
  41fca1:	iret   
  41fca2:	gs xchg ebp,eax
  41fca4:	push   ebx
  41fca5:	cwde   
  41fca6:	fwait
  41fca7:	dec    ebp
  41fca8:	sub    esp,0xb9b3bd22
  41fcae:	cmp    cl,BYTE PTR [ecx-0x67]
  41fcb1:	cmp    ebp,esi
  41fcb3:	ret    
  41fcb4:	add    dh,BYTE PTR fs:[esi]
  41fcb7:	loop   0x41fc87
  41fcb9:	dec    ecx
  41fcba:	jb     0x41fd19
  41fcbc:	push   ss
  41fcbd:	xor    dl,BYTE PTR [ecx+0x53]
  41fcc0:	sub    ch,al
  41fcc2:	shr    DWORD PTR [ebx+0xb4acac9],cl
  41fcc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcc9:	retf   0xb452
  41fccc:	popf   
  41fccd:	mov    ebp,0xb78d53d4
  41fcd2:	sbb    BYTE PTR [ecx+0x69326896],ah
  41fcd8:	sbb    eax,0xa2104a3a
  41fcdd:	xor    dh,BYTE PTR [eax]
  41fcdf:	push   cs
  41fce0:	inc    DWORD PTR [esi+0x68]
  41fce3:	call   0xea65:0x856bb6bf
  41fcea:	jp     0x41fd06
  41fcec:	outs   dx,DWORD PTR ds:[esi]
  41fced:	mov    ds:0x4f54d1e6,eax
  41fcf2:	inc    edi
  41fcf3:	(bad)  
  41fcf4:	mov    bh,0x61
  41fcf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcf7:	pop    DWORD PTR cs:[ebx-0x46]
  41fcfb:	xchg   esi,eax
  41fcfc:	test   DWORD PTR [edi],edi
  41fcfe:	fdivp  st(6),st
  41fd00:	jmp    0x41fcb4
  41fd02:	call   0x99a08ac5
  41fd07:	hlt    
  41fd08:	xor    eax,0xd9e79c9
  41fd0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd0e:	cmp    ah,BYTE PTR [esi-0x1a]
  41fd11:	jmp    0x90bb:0xae99aee7
  41fd18:	inc    edx
  41fd19:	mov    bl,0x4c
  41fd1b:	xor    al,0x88
  41fd1d:	dec    ecx
  41fd1e:	ds push ecx
  41fd20:	es (bad) 
  41fd22:	jmp    0x2722:0x21aa8356
  41fd29:	push   ecx
  41fd2a:	cs jg  0x41fdac
  41fd2d:	aam    0xdb
  41fd2f:	les    esi,FWORD PTR [esi+ebp*8-0x49201986]
  41fd36:	aas    
  41fd37:	and    dh,BYTE PTR [eax]
  41fd39:	popf   
  41fd3a:	leave  
  41fd3b:	mov    BYTE PTR [ecx],ah
  41fd3d:	mov    bh,0xab
  41fd3f:	ja     0x41fd90
  41fd41:	push   0xebcdc355
  41fd46:	inc    esp
  41fd47:	or     ch,BYTE PTR [eax]
  41fd49:	iret   
  41fd4a:	push   0xffffffd4
  41fd4c:	cs stc 
  41fd4e:	ret    0x2a8
  41fd51:	mov    esi,0xbc623ca3
  41fd56:	and    al,0xd4
  41fd58:	fcomp  st(2)
  41fd5a:	dec    ebx
  41fd5b:	jle    0x41fd4f
  41fd5d:	imul   edx,DWORD PTR [ecx-0x6208c052],0x63
  41fd64:	mov    esp,0x21572b6b
  41fd69:	sar    DWORD PTR [edx+ecx*2-0x2650e8e6],1
  41fd70:	jmp    0x41fd38
  41fd72:	out    0x4e,al
  41fd74:	mov    bl,0xa9
  41fd76:	or     BYTE PTR [edx+0x6c],0xf0
  41fd7a:	mov    fs,WORD PTR [edx]
  41fd7c:	imul   eax,DWORD PTR [edx-0x73e497ff],0x1c9f83fc
  41fd86:	sbb    al,0x95
  41fd88:	(bad)  
  41fd89:	je     0x41fdf4
  41fd8b:	neg    ebx
  41fd8d:	lea    esp,[ebx]
  41fd8f:	jg     0x41fdac
  41fd91:	inc    ebx
  41fd92:	inc    eax
  41fd93:	adc    al,0x1c
  41fd95:	hlt    
  41fd96:	push   0xffffff8f
  41fd98:	out    dx,eax
  41fd99:	mov    ah,BYTE PTR [edx+0x3af99517]
  41fd9f:	cmc    
  41fda0:	push   ds
  41fda1:	push   eax
  41fda2:	call   0x63adaf4b
  41fda7:	ins    BYTE PTR es:[edi],dx
  41fda8:	push   ebp
  41fda9:	add    ebp,esi
  41fdab:	dec    edi
  41fdac:	iret   
  41fdad:	dec    eax
  41fdae:	clc    
  41fdaf:	iret   
  41fdb0:	jne    0x41fd65
  41fdb2:	and    dh,ah
  41fdb4:	scas   eax,DWORD PTR es:[edi]
  41fdb5:	and    DWORD PTR [ebx-0xf091a45],esp
  41fdbb:	aad    0xa7
  41fdbd:	mov    eax,ds:0x47e1c84a
  41fdc2:	jne    0x437e29f7
  41fdc8:	mov    WORD PTR [esi-0x3c],cs
  41fdcb:	jge    0x41fdb1
  41fdcd:	ds adc dl,ch
  41fdd0:	xchg   esp,eax
  41fdd1:	and    BYTE PTR [ebx+0x30],ch
  41fdd4:	in     al,0x47
  41fdd6:	mov    bh,0x28
  41fdd8:	mov    esp,0x51b498fe
  41fddd:	jl     0x41fd86
  41fddf:	pop    ds
  41fde0:	mov    dh,0x7d
  41fde2:	and    al,0x7c
  41fde4:	dec    esp
  41fde5:	mov    BYTE PTR [ecx-0x50fa1d15],ch
  41fdeb:	mov    al,ds:0x23f5d2dd
  41fdf0:	test   DWORD PTR [ecx+0x6ca78d02],ebx
  41fdf6:	aam    0xe
  41fdf8:	rcr    BYTE PTR [ecx],0xd4
  41fdfb:	and    eax,0x2a0e847e
  41fe00:	fsubr  QWORD PTR [edi+edx*4-0xd]
  41fe04:	mov    ebp,0xacf70fdc
  41fe09:	mov    bh,cl
  41fe0b:	in     eax,dx
  41fe0c:	leave  
  41fe0d:	adc    dh,dh
  41fe0f:	enter  0xfb1b,0x56
  41fe13:	sub    BYTE PTR [esi-0x2ff4c272],cl
  41fe19:	lea    esp,[ecx+0xbc2eb35]
  41fe1f:	mov    DWORD PTR [edx+0x2a],ebp
  41fe22:	push   DWORD PTR [edx+0x41d492c7]
  41fe28:	mov    WORD PTR [edi-0x4a2794a3],es
  41fe2e:	ins    DWORD PTR es:[edi],dx
  41fe2f:	ret    0xa8a2
  41fe32:	mov    WORD PTR [ebp-0x65613c0c],ds
  41fe38:	popa   
  41fe39:	(bad)  
  41fe3b:	dec    ebx
  41fe3c:	jle    0x41fdc3
  41fe3e:	mov    ch,0x59
  41fe40:	pop    edi
  41fe41:	xchg   esp,eax
  41fe42:	scas   al,BYTE PTR es:[edi]
  41fe43:	jl     0x41fe4b
  41fe45:	int    0xe8
  41fe47:	pop    eax
  41fe48:	(bad)  
  41fe4a:	jl     0x41fe97
  41fe4c:	inc    ecx
  41fe4d:	cmp    eax,0xb97e4b79
  41fe52:	out    dx,al
  41fe53:	cmp    al,BYTE PTR [edx+eax*4-0x7341bb09]
  41fe5a:	xchg   ebx,eax
  41fe5b:	or     DWORD PTR [ecx-0x17],ebx
  41fe5e:	cmp    DWORD PTR [ebx+0x445bf633],ebx
  41fe64:	(bad)  
  41fe65:	out    dx,eax
  41fe66:	sahf   
  41fe67:	jnp    0x41fe28
  41fe69:	and    al,0x95
  41fe6b:	aaa    
  41fe6c:	jp     0x41feca
  41fe6e:	xor    BYTE PTR [ebp+0x4e7facf5],al
  41fe74:	adc    DWORD PTR [edi-0x55],ebx
  41fe77:	daa    
  41fe78:	cdq    
  41fe79:	and    DWORD PTR [ecx+0x26],0x36b1b2a5
  41fe80:	mov    al,0x1f
  41fe82:	fwait
  41fe83:	(bad)  
  41fe84:	fstp   DWORD PTR [ecx+0x5f]
  41fe87:	sub    al,0xef
  41fe89:	push   0xffffffbd
  41fe8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe8c:	mov    ah,0xd
  41fe8e:	outs   dx,DWORD PTR ds:[esi]
  41fe8f:	push   edx
  41fe90:	cwde   
  41fe91:	mov    cl,0xc4
  41fe93:	cli    
  41fe94:	dec    ebx
  41fe95:	lea    edx,ds:0xc687b16
  41fe9b:	and    ah,BYTE PTR [edx+0x5b3caebb]
  41fea1:	cld    
  41fea2:	stos   DWORD PTR es:[edi],eax
  41fea3:	mov    eax,ds:0xde95fc68
  41fea8:	outs   dx,DWORD PTR ds:[esi]
  41fea9:	mov    ah,BYTE PTR [ebp+0x73a3fd82]
  41feaf:	or     bh,bh
  41feb1:	add    DWORD PTR [ecx+edx*1+0x30f51e7c],edx
  41feb8:	xor    DWORD PTR [ecx+0xe],ebx
  41febb:	push   ebp
  41febc:	(bad)  
  41febd:	retf   0xe167
  41fec0:	lock data16 sbb BYTE PTR [edx+eax*8-0x3b3e79f6],ah
  41fec9:	out    0x15,al
  41fecb:	sahf   
  41fecc:	and    BYTE PTR [esi],dl
  41fece:	jne    0x41fe6d
  41fed0:	into   
  41fed1:	cdq    
  41fed2:	aaa    
  41fed3:	dec    eax
  41fed4:	push   edi
  41fed5:	jnp    0x41ff26
  41fed7:	loope  0x41fe5c
  41fed9:	lds    ebp,FWORD PTR [edi]
  41fedb:	int3   
  41fedc:	in     al,0xde
  41fede:	rcl    ebp,cl
  41fee0:	mov    bh,0xab
  41fee2:	xchg   ecx,eax
  41fee3:	ins    BYTE PTR es:[edi],dx
  41fee4:	bound  bx,DWORD PTR [eax+ebp*8]
  41fee8:	je     0x41fef4
  41feea:	or     al,0x76
  41feec:	out    dx,al
  41feed:	push   edi
  41feee:	int    0xc3
  41fef0:	mov    esi,0xc0feca27
  41fef5:	push   edi
  41fef6:	and    bh,al
  41fef8:	dec    ecx
  41fef9:	bound  edx,QWORD PTR [ebp+ecx*2+0x2986e13f]
  41ff00:	jne    0x41ff2f
  41ff02:	(bad)  [esi+0x6e196a2]
  41ff08:	fwait
  41ff09:	enter  0xe143,0x47
  41ff0d:	push   es
  41ff0e:	je     0x41ff09
  41ff10:	div    DWORD PTR [edi-0x1f]
  41ff13:	(bad)  
  41ff14:	mov    ebx,0x5d21867f
  41ff19:	mov    ecx,0xa67b76b0
  41ff1e:	xchg   edx,eax
  41ff1f:	ret    
  41ff20:	data16 lods al,BYTE PTR ds:[esi]
  41ff22:	and    esp,DWORD PTR [eax]
  41ff24:	pusha  
  41ff25:	jno    0x41fee2
  41ff27:	mov    edi,0x34a307d6
  41ff2c:	push   cs
  41ff2d:	jmp    0xbf4b9105
  41ff32:	add    eax,0xfb1f2095
  41ff37:	add    edi,DWORD PTR [ecx+0x75abb32a]
  41ff3d:	and    eax,0x952fe3f5
  41ff42:	in     eax,0x8e
  41ff44:	dec    esp
  41ff45:	addr16 out dx,eax
  41ff47:	adc    eax,0x71716cc5
  41ff4c:	dec    eax
  41ff4d:	fwait
  41ff4e:	sbb    edi,DWORD PTR [esi-0x78]
  41ff51:	aas    
  41ff52:	inc    esp
  41ff53:	icebp  
  41ff54:	sub    ebx,DWORD PTR [ebp-0x6982b5f2]
  41ff5a:	cmp    BYTE PTR [edx+ebp*2],0x35
  41ff5e:	aaa    
  41ff5f:	push   ds
  41ff60:	push   ebx
  41ff61:	lds    esi,FWORD PTR [edx+0x30199f1f]
  41ff67:	inc    esp
  41ff68:	std    
  41ff69:	mov    cl,0xcc
  41ff6b:	adc    BYTE PTR [esi],dl
  41ff6d:	cli    
  41ff6e:	dec    ebp
  41ff6f:	xor    eax,0xf8e05158
  41ff74:	hlt    
  41ff75:	and    bh,dl
  41ff77:	sbb    al,0xb4
  41ff79:	add    al,0xfb
  41ff7b:	je     0x41fff4
  41ff7d:	or     BYTE PTR [ebx+esi*1-0x1b],cl
  41ff81:	xor    ebx,DWORD PTR ds:0x3da26921
  41ff87:	pusha  
  41ff88:	mov    ah,0xbc
  41ff8a:	out    dx,al
  41ff8b:	test   al,0x95
  41ff8d:	cs add al,0x4d
  41ff90:	pop    dx
  41ff92:	xor    BYTE PTR [ebp-0x6a],ah
  41ff95:	es pop es
  41ff97:	or     ebx,edx
  41ff99:	push   edi
  41ff9a:	xchg   edi,eax
  41ff9b:	call   0xafe346b0
  41ffa0:	sti    
  41ffa1:	ret    0xc309
  41ffa4:	stc    
  41ffa5:	lock shr BYTE PTR [edi+0x7c],cl
  41ffa9:	jo     0x41ffe0
  41ffab:	mov    al,0xcf
  41ffae:	icebp  
  41ffaf:	in     al,0x79
  41ffb1:	push   ebx
  41ffb2:	popa   
  41ffb3:	pop    edx
  41ffb4:	cmp    al,0xe5
  41ffb6:	dec    ebp
  41ffb7:	mov    bh,0x2
  41ffb9:	cmp    DWORD PTR [edx+eiz*4-0x30],esp
  41ffbd:	imul   edx,DWORD PTR [esi+0x5acac11f],0x4f
  41ffc4:	xor    eax,0x29a21a29
  41ffc9:	push   edi
  41ffca:	ins    DWORD PTR es:[edi],dx
  41ffcb:	sub    al,BYTE PTR [edi]
  41ffcd:	(bad)  
  41ffce:	ret    0xc336
  41ffd1:	and    BYTE PTR [ecx-0x6e],dl
  41ffd4:	(bad)  
  41ffd5:	xlat   BYTE PTR ds:[ebx]
  41ffd6:	push   edx
  41ffd7:	cmp    DWORD PTR [esi-0x6b7e91d1],eax
  41ffdd:	xor    BYTE PTR [esi],cl
  41ffdf:	jnp    0x41ffd7
  41ffe1:	(bad)  
  41ffe2:	pop    esp
  41ffe3:	(bad)  
  41ffe4:	mov    edx,DWORD PTR [eax]
  41ffe6:	cmp    al,0xb6
  41ffe8:	mov    WORD PTR [edi],ds
  41ffea:	jmp    0xa7f1:0xb81b4acf
  41fff1:	jne    0x42001c
  41fff3:	call   0xb09d:0x87513edf
  41fffa:	pop    edi
  41fffb:	out    dx,al
  41fffc:	loop   0x42002c
  41fffe:	cmp    ecx,ebp
  420000:	(bad)  
  420001:	aaa    
  420002:	or     eax,0x278a2fdd
  420007:	xchg   edx,eax
  420008:	ins    BYTE PTR es:[edi],dx
  420009:	inc    esi
  42000a:	cmc    
  42000b:	jb     0x42001b
  42000d:	jae    0x42004b
  42000f:	adc    DWORD PTR [edi],ecx
  420011:	popf   
  420012:	test   BYTE PTR [esi+0x3d604816],al
  420018:	push   ebp
  420019:	fist   DWORD PTR [eax-0x5a]
  42001c:	fs xchg esp,eax
  42001e:	les    ebp,FWORD PTR [edi+eiz*2+0x5c372023]
  420025:	sbb    esp,ecx
  420027:	ss in  al,0xf9
  42002a:	outs   dx,DWORD PTR ds:[esi]
  42002b:	ja     0x420084
  42002d:	dec    esp
  42002e:	arpl   sp,di
  420030:	or     edx,DWORD PTR [ebp+edx*4-0x18]
  420034:	fsub   st,st(5)
  420036:	xchg   edx,eax
  420037:	push   ss
  420038:	pushf  
  420039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42003a:	push   ecx
  42003b:	data16 cmp bl,BYTE PTR [edx+0x7fff94e5]
  420042:	cli    
  420043:	mov    edx,ds
  420045:	xlat   BYTE PTR ds:[ebx]
  420046:	cld    
  420047:	and    al,BYTE PTR [ebx]
  420049:	fld    TBYTE PTR [ebx+eiz*2+0x2680618d]
  420050:	mov    bh,0x2c
  420052:	mov    ah,al
  420054:	dec    edx
  420055:	inc    ecx
  420056:	jns    0x420017
  420058:	not    BYTE PTR [ebp+eax*2-0x2d]
  42005c:	pop    edx
  42005d:	stos   BYTE PTR es:[edi],al
  42005e:	sbb    al,0xd5
  420060:	in     eax,dx
  420061:	xlat   BYTE PTR ds:[ebx]
  420062:	(bad)  
  420063:	(bad)  
  420065:	xchg   DWORD PTR [edi+0x7c2e979],ebp
  42006b:	clc    
  42006c:	jns    0x420013
  42006e:	ficomp DWORD PTR [ebx-0x11b1f8b]
  420074:	stos   BYTE PTR es:[edi],al
  420075:	xor    edx,DWORD PTR [ecx-0x26]
  420078:	cli    
  420079:	sbb    ebp,DWORD PTR [esi+eax*8]
  42007c:	xor    ebx,ecx
  42007e:	xchg   edi,eax
  42007f:	xchg   DWORD PTR [ebp-0x29],esi
  420082:	(bad)  
  420083:	(bad)  
  420085:	push   edx
  420086:	sub    BYTE PTR [edx+0x58],cl
  420089:	in     eax,dx
  42008a:	dec    ebp
  42008b:	or     bl,ah
  42008d:	push   ss
  42008e:	sub    ebp,ecx
  420090:	nop
  420091:	xchg   ebx,eax
  420092:	xor    DWORD PTR [eax+0x1e],eax
  420095:	mov    WORD PTR [edx+0x54c0f69b],es
  42009b:	jbe    0x42006d
  42009d:	push   ebp
  42009e:	inc    ecx
  42009f:	scas   al,BYTE PTR es:[edi]
  4200a0:	daa    
  4200a1:	sar    BYTE PTR [edi+0x75d3fb05],1
  4200a7:	xchg   edx,eax
  4200a8:	ss arpl di,ax
  4200ab:	jp     0x420070
  4200ad:	mov    ds:0x523ef187,al
  4200b2:	pop    edi
  4200b3:	xlat   BYTE PTR ds:[ebx]
  4200b4:	(bad)  
  4200b5:	fcomi  st,st(7)
  4200b7:	arpl   WORD PTR [eax-0x4b],cx
  4200ba:	sar    BYTE PTR [esi],0xa5
  4200bd:	pop    ebp
  4200be:	jno    0x420105
  4200c0:	ins    DWORD PTR es:[edi],dx
  4200c1:	mov    cl,0xd8
  4200c3:	shl    DWORD PTR [ebp+eiz*8+0x42be06ed],1
  4200ca:	dec    edx
  4200cb:	pop    ecx
  4200cc:	pop    ebp
  4200cd:	mov    bl,0xea
  4200cf:	xchg   edi,eax
  4200d0:	arpl   WORD PTR [ecx-0xb],sp
  4200d3:	cmp    BYTE PTR [eax],dh
  4200d5:	xlat   BYTE PTR ds:[ebx]
  4200d6:	mov    al,BYTE PTR [edx*8-0x7add51c7]
  4200dd:	jns    0x42010c
  4200df:	inc    eax
  4200e0:	mov    al,0x34
  4200e2:	adc    al,0x33
  4200e4:	adc    BYTE PTR [ecx+edi*2+0x37],ch
  4200e8:	mov    ?,WORD PTR [esi]
  4200ea:	add    BYTE PTR [ebx+edx*8],ah
  4200ed:	and    eax,0xee504478
  4200f2:	add    al,0x30
  4200f4:	mov    al,ds:0xbd718f29
  4200f9:	mov    ch,BYTE PTR [edi+0x261e5204]
  4200ff:	xor    BYTE PTR ds:0xa21161d9,0xa9
  420106:	mov    edi,0xa5f42832
  42010b:	push   ebx
  42010c:	aad    0x83
  42010e:	and    DWORD PTR [edi],ebx
  420110:	jp     0x4200cb
  420112:	dec    edx
  420113:	xor    eax,0x39581cfb
  420118:	push   es
  420119:	ror    DWORD PTR [ebx+ebx*2-0x10],cl
  42011d:	jle    0x420103
  42011f:	sahf   
  420120:	hlt    
  420121:	push   0x10
  420123:	jne    0x420110
  420125:	xchg   edi,eax
  420126:	sti    
  420127:	rcl    BYTE PTR [ebx-0x11],0xfa
  42012b:	jbe    0x4200e4
  42012d:	or     DWORD PTR [eax+0x52eb2330],ebx
  420133:	cmovp  edi,DWORD PTR [ecx+0x6b73a806]
  42013a:	mov    ebx,0x2cf0c5a7
  42013f:	loope  0x42015f
  420141:	and    ch,BYTE PTR [esi+0x7a]
  420144:	cwde   
  420145:	into   
  420146:	push   ss
  420147:	fdivp  st(6),st
  420149:	pop    edx
  42014a:	mov    edx,0x40382199
  42014f:	jae    0x420164
  420151:	xor    eax,0xbf53ecad
  420156:	sub    BYTE PTR [ecx-0x7a9897eb],cl
  42015c:	push   edi
  42015d:	mov    al,ds:0x1bd8365e
  420162:	sub    edi,DWORD PTR [eax-0x63]
  420165:	lds    ebp,FWORD PTR [ebp-0x667cf682]
  42016b:	outs   dx,DWORD PTR ds:[esi]
  42016c:	inc    esp
  42016d:	cmp    edx,DWORD PTR [ebp+ebp*1+0x3d]
  420171:	bound  ecx,QWORD PTR [esi+eax*2]
  420174:	repz mov gs,WORD PTR [eax-0x9]
  420178:	mov    cl,BYTE PTR [edx]
  42017a:	pusha  
  42017b:	pusha  
  42017c:	inc    edx
  42017d:	pushf  
  42017e:	(bad)  
  42017f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420180:	stos   BYTE PTR es:[edi],al
  420181:	cmp    edx,DWORD PTR [ebx-0x29]
  420184:	(bad)  
  420185:	es std 
  420187:	mov    cl,BYTE PTR [esi+0x3a7fb0ae]
  42018d:	test   al,0x50
  42018f:	repnz fisub WORD PTR [bp+si-0x19]
  420194:	es pop edi
  420196:	add    eax,0x4c72bb6c
  42019b:	aas    
  42019c:	inc    esi
  42019d:	cmp    eax,0xe57b9478
  4201a2:	(bad)  
  4201a3:	adc    eax,0x517ae0e1
  4201a8:	dec    ecx
  4201a9:	xor    dh,BYTE PTR [esi+0x32]
  4201ac:	out    0x5b,eax
  4201ae:	test   al,0xb6
  4201b0:	icebp  
  4201b1:	scas   al,BYTE PTR es:[edi]
  4201b2:	fidiv  DWORD PTR [eax]
  4201b4:	mov    WORD PTR [edi],fs
  4201b6:	js     0x420153
  4201b8:	mov    eax,ds:0xcf3ed017
  4201bd:	pop    ebx
  4201be:	repnz fidivr WORD PTR [esi]
  4201c1:	inc    edi
  4201c2:	aam    0x51
  4201c4:	aam    0xa8
  4201c6:	jne    0x42014d
  4201c8:	mov    dh,0xea
  4201ca:	pop    ecx
  4201cb:	lahf   
  4201cc:	cdq    
  4201cd:	push   esi
  4201ce:	xchg   ebx,eax
  4201cf:	xchg   ebp,eax
  4201d0:	jns    0x420211
  4201d2:	mov    ?,ecx
  4201d4:	stc    
  4201d5:	iret   
  4201d6:	(bad)  
  4201d7:	xchg   esi,eax
  4201d8:	xchg   esp,eax
  4201d9:	(bad)  
  4201da:	push   edi
  4201db:	aas    
  4201dc:	xor    BYTE PTR [esp+ecx*2],dh
  4201df:	sti    
  4201e0:	sahf   
  4201e1:	retf   
  4201e2:	jb     0x4201f7
  4201e4:	pop    esp
  4201e5:	adc    BYTE PTR [edi+0x1dd5e965],bl
  4201eb:	inc    ebx
  4201ec:	(bad)  
  4201ed:	mov    DWORD PTR [ebx-0x51751d64],ecx
  4201f3:	gs loopne 0x42023e
  4201f6:	cs ins BYTE PTR es:[edi],dx
  4201f8:	dec    ecx
  4201f9:	imul   ebp,DWORD PTR ds:0xba89c219,0x6da9391a
  420203:	sbb    eax,0x29c02dfa
  420208:	call   0xd8e4:0xb6a2f1e3
  42020f:	and    BYTE PTR [edi+0x3c],ch
  420212:	mov    ebp,0x88831e4b
  420217:	or     eax,0xa20ce364
  42021c:	lahf   
  42021d:	xlat   BYTE PTR ds:[ebx]
  42021e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42021f:	jge    0x420238
  420221:	jp     0x42027e
  420223:	out    dx,eax
  420224:	sub    al,BYTE PTR [ebx]
  420226:	add    bl,ch
  420228:	dec    esp
  420229:	ins    BYTE PTR es:[edi],dx
  42022a:	ss dec ebp
  42022c:	jge    0x420233
  42022e:	push   edi
  42022f:	mov    edx,0xf4f00cae
  420234:	cs pop eax
  420236:	mov    DWORD PTR [edx-0x5f628710],esp
  42023c:	xlat   BYTE PTR ds:[ebx]
  42023d:	mov    ecx,0x13464cda
  420242:	sbb    edi,ebp
  420244:	xor    DWORD PTR [edx],ecx
  420246:	in     eax,dx
  420247:	xor    al,0x65
  420249:	jl     0x420299
  42024b:	pop    ebp
  42024c:	scas   al,BYTE PTR es:[edi]
  42024d:	pop    edi
  42024e:	out    dx,al
  42024f:	add    ah,dl
  420251:	das    
  420252:	sbb    DWORD PTR [ebx-0xeb3d9ee],esi
  420258:	(bad)  [edx-0xc]
  42025b:	mov    DWORD PTR [edi-0x48],edi
  42025e:	sub    ebx,esp
  420260:	pop    ebp
  420261:	and    BYTE PTR [edx+0x2f],cl
  420264:	jecxz  0x4202af
  420266:	mov    ebp,0x32e48e38
  42026b:	repnz adc bl,BYTE PTR [ebx+edi*1]
  42026f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420270:	sahf   
  420271:	inc    esi
  420272:	pop    esi
  420273:	jbe    0x42026d
  420275:	and    eax,0xb8940eb1
  42027a:	retf   
  42027b:	adc    DWORD PTR [ebp-0x37],0x20a3eb50
  420282:	mov    ds:0x15529274,al
  420287:	pop    eax
  420288:	mov    eax,DWORD PTR [ebp-0x68c1771e]
  42028e:	jns    0x4202bc
  420290:	mov    ds:0x7eadca6,al
  420295:	push   ebx
  420296:	mov    al,ds:0x3c008731
  42029b:	jle    0x42022d
  42029d:	xor    ebp,DWORD PTR [ecx-0x70aff304]
  4202a3:	imul   ecx,ebp,0xffffff97
  4202a6:	push   ebp
  4202a7:	xchg   BYTE PTR [eax-0x72],cl
  4202aa:	not    BYTE PTR ds:0x92073b44
  4202b0:	popa   
  4202b1:	popa   
  4202b2:	cmp    BYTE PTR [edi],0xb9
  4202b5:	or     ebx,DWORD PTR [ecx]
  4202b7:	data16 jb 0x420241
  4202ba:	pop    ds
  4202bb:	add    eax,0xbaeefc83
  4202c0:	and    ch,BYTE PTR [eax-0x3649062]
  4202c6:	sub    BYTE PTR [ecx],bl
  4202c8:	dec    ebp
  4202c9:	ds data16 jp 0x4202e2
  4202cd:	jmp    0x871:0x8bb27a4c
  4202d4:	data16 mov dh,0x56
  4202d7:	or     edx,DWORD PTR [edx+0x4b601dd7]
  4202dd:	push   edx
  4202de:	and    al,0x2e
  4202e0:	jl     0x42026e
  4202e2:	mov    ebx,0xe8c8968e
  4202e7:	out    0xf6,eax
  4202e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202ea:	test   DWORD PTR [edi+0x27],edx
  4202ed:	ret    
  4202ee:	pop    esp
  4202ef:	stc    
  4202f0:	retf   0x373b
  4202f3:	add    DWORD PTR [ecx],0xffffffc5
  4202f6:	mov    ecx,esi
  4202f8:	and    BYTE PTR [esi],bl
  4202fa:	jnp    0x420345
  4202fc:	js     0x42033f
  4202fe:	mov    ds,WORD PTR [esp+ebx*4-0x148a3722]
  420305:	add    DWORD PTR [ecx+0x5e64e676],ecx
  42030b:	cdq    
  42030c:	(bad)  
  42030d:	aaa    
  42030e:	mov    BYTE PTR [ecx+0x25],ch
  420311:	ja     0x420362
  420313:	add    eax,0x1db93050
  420318:	outs   dx,DWORD PTR ds:[esi]
  420319:	scas   eax,DWORD PTR es:[edi]
  42031a:	int3   
  42031b:	cs pushf 
  42031d:	push   es
  42031e:	sub    DWORD PTR [esp+eax*4-0x1b1f70a0],0xa5b2cf70
  420329:	idiv   BYTE PTR [edx-0x436a7e57]
  42032f:	sbb    esp,DWORD PTR [esi+eiz*1+0x17069a22]
  420336:	cmp    dh,BYTE PTR [esi-0x97e0354]
  42033c:	mov    DWORD PTR [ebx-0x5d],ebp
  42033f:	jae    0x420386
  420341:	jp     0x420321
  420343:	pop    ecx
  420344:	daa    
  420345:	(bad)  
  420346:	adc    ch,BYTE PTR [esi+0x63b4505f]
  42034c:	push   ebp
  42034d:	mov    ds:0x13e52b0,al
  420352:	sbb    esi,DWORD PTR [ecx+0x430eec36]
  420358:	cmp    BYTE PTR [ebx-0x363a911d],ch
  42035e:	mov    al,0x18
  420360:	xlat   BYTE PTR ds:[ebx]
  420361:	push   cs
  420362:	jo     0x420382
  420364:	call   0xc658b635
  420369:	push   0xa275b4e1
  42036e:	jae    0x420398
  420370:	cmp    ecx,DWORD PTR [eax]
  420372:	(bad)  
  420373:	adc    BYTE PTR [esi-0x20],ch
  420376:	dec    esp
  420377:	xchg   ecx,eax
  420378:	add    WORD PTR [edi+0x5e],si
  42037c:	in     al,0x3d
  42037e:	fadd   DWORD PTR [edi]
  420380:	aaa    
  420381:	mov    DWORD PTR [ebx-0x61b16f87],eax
  420387:	mov    ds:0x9ec1770a,eax
  42038c:	add    bh,al
  42038e:	mov    al,0x51
  420390:	scas   al,BYTE PTR es:[edi]
  420391:	add    cl,BYTE PTR [edx-0x5aa6c447]
  420397:	xchg   esp,eax
  420398:	inc    edx
  420399:	fcmovnu st,st(2)
  42039b:	outs   dx,DWORD PTR ds:[esi]
  42039c:	pop    eax
  42039d:	xor    al,BYTE PTR [esi+esi*1]
  4203a0:	addr16 nop
  4203a2:	mov    dh,BYTE PTR [esi]
  4203a4:	inc    eax
  4203a5:	ja     0x4203db
  4203a7:	push   cs
  4203a8:	sbb    BYTE PTR [edi-0x28301598],0xca
  4203af:	sub    DWORD PTR [edx+0x1f],esi
  4203b2:	call   0x3ee1:0xe55173d1
  4203b9:	jo     0x42039a
  4203bb:	jle    0x42039b
  4203bd:	in     al,dx
  4203be:	js     0x42038e
  4203c0:	into   
  4203c1:	push   cs
  4203c2:	loop   0x4203ec
  4203c4:	add    ebp,ebx
  4203c6:	es pop es
  4203c8:	push   ds
  4203c9:	loopne 0x420366
  4203cb:	jp     0x42042d
  4203cd:	xchg   edi,eax
  4203ce:	sbb    eax,0x766605b9
  4203d3:	(bad)  
  4203d5:	and    al,0x88
  4203d7:	outs   dx,DWORD PTR ds:[esi]
  4203d8:	gs mov ah,0x70
  4203db:	dec    ebx
  4203dc:	mov    dl,0x3d
  4203de:	mov    bl,0x3c
  4203e0:	xor    eax,0x2126dabf
  4203e5:	ds gs pop esi
  4203e8:	push   0x1bcaad54
  4203ed:	retf   
  4203ee:	imul   eax,DWORD PTR [eax+eax*4],0xffffffde
  4203f2:	xlat   BYTE PTR ds:[ebx]
  4203f3:	dec    ebx
  4203f4:	mov    cl,0xeb
  4203f6:	cmp    DWORD PTR [edi+0x79],ebx
  4203f9:	cmp    edx,DWORD PTR [ecx]
  4203fb:	xor    bh,ch
  4203fd:	inc    esi
  4203fe:	jl     0x420394
  420400:	sub    eax,edi
  420402:	arpl   WORD PTR [ebx],di
  420404:	xchg   edi,eax
  420405:	fidivr WORD PTR [eax+0x4eab11e1]
  42040b:	loop   0x420463
  42040d:	mov    edx,esp
  42040f:	xchg   ecx,eax
  420410:	adc    eax,0xfc033e5d
  420415:	loop   0x420416
  420417:	retf   0xc241
  42041a:	mov    ecx,0x9c5e75d5
  42041f:	data16 or ah,cl
  420422:	pop    ss
  420423:	lea    edx,[esi]
  420425:	outs   dx,BYTE PTR ds:[esi]
  420426:	or     al,0x1e
  420428:	fs jno 0x420439
  42042b:	sahf   
  42042c:	xchg   edi,eax
  42042d:	xchg   ebx,eax
  42042e:	xchg   esi,eax
  42042f:	add    eax,edi
  420431:	and    al,BYTE PTR [eax+0x60]
  420434:	pop    ebx
  420435:	mov    eax,DWORD PTR [ebx+0x8fe380b]
  42043b:	jecxz  0x420483
  42043d:	jno    0x420435
  42043f:	mov    ebx,DWORD PTR ds:0x90caaea2
  420445:	retf   
  420446:	daa    
  420447:	nop
  420448:	bound  edi,QWORD PTR [esp+ebx*2-0x54e3842d]
  42044f:	ret    0xea1e
  420452:	addr16 loopne 0x420472
  420455:	call   0xc310:0x696533d7
  42045c:	mov    cl,0xfa
  42045e:	sbb    BYTE PTR [ebx*8+0x1af1ad35],0x96
  420466:	shld   DWORD PTR [edi+0x28797f59],ebx,0xc6
  42046e:	adc    ch,bl
  420470:	mov    bh,0xff
  420472:	test   al,0xf9
  420474:	aam    0x51
  420476:	fwait
  420477:	mov    al,0xd2
  420479:	jge    0x4204f1
  42047b:	push   ebp
  42047c:	sar    BYTE PTR [ecx+ebp*2],cl
  42047f:	retf   0x9438
  420482:	out    dx,eax
  420483:	dec    ecx
  420484:	push   0x5d3d952e
  420489:	jmp    0xfad51f0e
  42048e:	addr16 dec ebp
  420490:	enter  0xff8e,0x52
  420494:	mov    eax,0xa701b86b
  420499:	pop    es
  42049a:	jg     0x42042e
  42049c:	daa    
  42049d:	aad    0xc1
  42049f:	cmp    BYTE PTR [ecx-0x74841c1],ah
  4204a5:	push   0xfffffffb
  4204a7:	(bad)  
  4204a8:	sti    
  4204a9:	xchg   DWORD PTR [edx],ebp
  4204ab:	xchg   edx,eax
  4204ac:	sub    ah,BYTE PTR [ecx+edx*1-0x777c7bc1]
  4204b3:	lods   eax,DWORD PTR ds:[esi]
  4204b4:	push   ebp
  4204b5:	js     0x420444
  4204b7:	mov    ds:0x2d6ac448,eax
  4204bc:	cs jns 0x42048f
  4204bf:	test   eax,0xab35f7af
  4204c4:	lods   eax,DWORD PTR ds:[esi]
  4204c5:	sbb    eax,0x37b14c2e
  4204ca:	mov    esp,0xbd90043e
  4204cf:	push   esi
  4204d0:	xor    BYTE PTR [ebp*1+0x45690fe2],al
  4204d7:	and    al,BYTE PTR [edi+0x3fa5acb7]
  4204dd:	xchg   ebp,eax
  4204df:	add    ch,BYTE PTR [edi-0x65]
  4204e2:	je     0x42047c
  4204e4:	adc    al,0x5d
  4204e6:	and    DWORD PTR [edx-0x2c],ecx
  4204e9:	pop    esp
  4204ea:	mov    BYTE PTR [ebx+eiz*4],dl
  4204ed:	retf   
  4204ee:	sub    DWORD PTR [ebx],edi
  4204f0:	ins    BYTE PTR es:[edi],dx
  4204f1:	sbb    BYTE PTR [edx-0x5b],0xd8
  4204f5:	iret   
  4204f6:	test   esi,0x3f6512ca
  4204fc:	inc    edx
  4204fd:	enter  0x89d4,0xb
  420501:	xor    BYTE PTR [edx-0x4a],al
  420504:	sub    ebp,DWORD PTR [edx+0x40113eec]
  42050a:	sub    BYTE PTR [ecx-0x3f],0x1c
  42050e:	aas    
  42050f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420510:	jle    0x4204d2
  420512:	mov    esi,0x9bbbdeba
  420517:	mov    dh,0xc
  420519:	fld    QWORD PTR [esi+0x77758ca3]
  42051f:	jge    0x42052e
  420521:	sub    al,0x5f
  420523:	add    BYTE PTR [ebx+0x5ba554bd],0x49
  42052a:	aas    
  42052b:	and    al,0x5e
  42052d:	sbb    dh,BYTE PTR [ebx]
  42052f:	xchg   edx,eax
  420530:	out    0x53,eax
  420532:	or     eax,0xb34878dd
  420537:	cdq    
  420538:	pop    eax
  420539:	xchg   ebx,eax
  42053a:	jnp    0x420580
  42053c:	fwait
  42053d:	int    0x3a
  42053f:	punpcklwd mm1,mm2
  420542:	mov    esi,0x8dbd229f
  420547:	adc    DWORD PTR [edx-0x62e33e77],edi
  42054d:	xchg   ebp,eax
  42054e:	pop    ecx
  42054f:	mov    ah,0x63
  420551:	jmp    0x420544
  420553:	je     0x420579
  420555:	cmp    eax,0x52392a4
  42055a:	and    DWORD PTR [edi],esi
  42055c:	mov    bl,0xe8
  42055e:	fmul   DWORD PTR [edx]
  420560:	xor    eax,0x91cffa54
  420565:	call   0x80f9:0x536e1985
  42056c:	cmp    DWORD PTR [edi],esi
  42056e:	or     eax,0x3dc2188b
  420573:	pop    edi
  420574:	rcr    BYTE PTR [ebp+0xf7a01d0],cl
  42057a:	repnz cwde 
  42057c:	ins    BYTE PTR es:[edi],dx
  42057d:	inc    esi
  42057e:	in     al,0x93
  420580:	mov    bl,0x59
  420582:	cmp    bl,BYTE PTR [ebp+eax*2-0x7d]
  420586:	sbb    ch,BYTE PTR [ebx-0x24]
  420589:	int3   
  42058a:	xchg   ebx,eax
  42058b:	(bad)  
  42058c:	cmc    
  42058d:	cmp    al,0x4
  42058f:	dec    esp
  420590:	ret    
  420591:	std    
  420592:	jmp    0x420561
  420594:	out    dx,eax
  420595:	scas   eax,DWORD PTR es:[edi]
  420596:	lods   eax,DWORD PTR ds:[esi]
  420597:	(bad)  
  420598:	pusha  
  420599:	dec    ebx
  42059a:	(bad)  
  42059b:	shl    DWORD PTR [esi+0x67],1
  42059e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42059f:	or     edx,DWORD PTR [edi+0x4f]
  4205a2:	ds dec esp
  4205a4:	repz and ebx,DWORD PTR [eax-0x1569ddc1]
  4205ab:	sub    eax,edx
  4205ad:	mov    eax,0xea53e830
  4205b2:	push   esi
  4205b3:	fisub  WORD PTR [eax]
  4205b5:	sahf   
  4205b6:	sub    DWORD PTR [ecx+0xab8642d],ecx
  4205bc:	out    0xa,eax
  4205be:	mov    ebp,0x5a6b94ad
  4205c3:	adc    esp,DWORD PTR [eax+0x12ba260]
  4205c9:	je     0x42056b
  4205cb:	je     0x420616
  4205cd:	sar    BYTE PTR [ecx-0x15],cl
  4205d0:	pusha  
  4205d1:	push   ebx
  4205d2:	pop    esi
  4205d3:	push   0x63887abb
  4205d8:	(bad)  
  4205d9:	fidivr WORD PTR [edx-0x7]
  4205dc:	push   ecx
  4205dd:	retf   0x4b0e
  4205e0:	jge    0x42065a
  4205e2:	je     0x42057e
  4205e4:	xor    eax,0x7d9affa5
  4205e9:	or     ch,cl
  4205eb:	pop    edx
  4205ec:	in     eax,dx
  4205ed:	popf   
  4205ee:	mov    ah,0xfd
  4205f0:	ins    BYTE PTR es:[edi],dx
  4205f1:	ins    DWORD PTR es:[edi],dx
  4205f2:	call   0x4a7a4dcf
  4205f7:	ret    
  4205f8:	jno    0x4205aa
  4205fa:	in     al,0xe
  4205fc:	sbb    BYTE PTR [edx-0x2f],ah
  4205ff:	xchg   edi,eax
  420600:	or     eax,0x67240253
  420605:	inc    esi
  420606:	imul   esi,DWORD PTR [ebx-0x196fd0fb],0xa4cc4ef0
  420610:	dec    esp
  420611:	cmp    BYTE PTR [ebp+eax*1+0x51780d30],bl
  420618:	jae    0x42059c
  42061a:	cli    
  42061b:	std    
  42061c:	int3   
  42061d:	fld    TBYTE PTR [esi-0x7cc56da0]
  420623:	fdivr  DWORD PTR [esi]
  420625:	push   DWORD PTR [edi]
  420627:	mov    bl,0x49
  420629:	mov    esi,0xa232f8d3
  42062e:	sub    edi,DWORD PTR [ecx-0x76]
  420631:	arpl   WORD PTR [edi],bp
  420633:	push   cs
  420634:	shl    BYTE PTR [edx-0x6a],0xed
  420638:	or     DWORD PTR [ebx],edx
  42063a:	mov    ah,0xc7
  42063c:	jne    0x420634
  42063e:	mov    ah,0x47
  420640:	dec    esi
  420641:	addr16 mov ds:0x721b,eax
  420645:	cmp    BYTE PTR [esi+esi*1-0x743c9a8],al
  42064c:	pop    es
  42064d:	mov    ecx,0x6dc47a7a
  420652:	int3   
  420653:	aaa    
  420654:	dec    eax
  420655:	dec    ebp
  420656:	sub    dl,0x1b
  420659:	(bad)  
  42065b:	sbb    dl,bl
  42065d:	sbb    ebp,ebp
  42065f:	icebp  
  420660:	int3   
  420661:	cld    
  420662:	aaa    
  420663:	and    esi,ecx
  420665:	nop
  420666:	repnz xchg esi,eax
  420668:	addr16 popa 
  42066a:	cli    
  42066b:	push   edx
  42066c:	stc    
  42066d:	loope  0x420690
  42066f:	mov    WORD PTR [edx-0xee890e3],cs
  420675:	mov    DWORD PTR [ebp-0x337db8c8],esi
  42067b:	test   al,0x72
  42067d:	mov    edi,0xd85eea38
  420682:	cmp    DWORD PTR [esi+0x35],0xffffffbd
  420686:	xor    al,0x17
  420688:	add    DWORD PTR [eax+0x1a34c9db],eax
  42068e:	inc    esi
  42068f:	ss or  esi,ebp
  420692:	scas   eax,DWORD PTR es:[di]
  420694:	out    0x87,eax
  420696:	sbb    ch,BYTE PTR [edx]
  420698:	call   0xe1ca:0x80e706b8
  42069f:	push   ecx
  4206a0:	xchg   esi,eax
  4206a1:	test   al,0xef
  4206a3:	pop    eax
  4206a4:	out    dx,al
  4206a5:	lods   eax,DWORD PTR ds:[esi]
  4206a6:	gs popa 
  4206a8:	xchg   edx,eax
  4206a9:	popf   
  4206aa:	and    ah,bh
  4206ac:	fiadd  DWORD PTR [eax+0x260c8c9e]
  4206b2:	lahf   
  4206b3:	lea    edi,[ecx+0x7b]
  4206b6:	(bad)  
  4206b7:	push   0x7631362b
  4206bc:	cmp    al,0xde
  4206be:	adc    BYTE PTR [edx],bl
  4206c0:	neg    DWORD PTR [ebx+0x335e91da]
  4206c6:	inc    ecx
  4206c7:	sti    
  4206c8:	mov    ebx,0xc1ef293
  4206cd:	test   al,0xdf
  4206cf:	arpl   di,ax
  4206d1:	mov    ebx,0xd1b62d7b
  4206d6:	pop    ds
  4206d7:	pop    ebp
  4206d8:	mov    eax,0x50f154da
  4206dd:	pop    eax
  4206de:	push   eax
  4206df:	and    DWORD PTR [esi-0x44],eax
  4206e2:	cwde   
  4206e3:	add    eax,esp
  4206e5:	push   ebp
  4206e6:	mov    esi,0xa433b8ae
  4206eb:	mov    bl,0x7b
  4206ed:	pop    esp
  4206ee:	std    
  4206ef:	sahf   
  4206f0:	jae    0x42076b
  4206f2:	jle    0x4206c7
  4206f4:	clc    
  4206f5:	push   0x26add23b
  4206fa:	jb     0x42067e
  4206fc:	push   es
  4206fd:	repnz add al,0xd5
  420700:	popf   
  420701:	(bad)  
  420702:	lods   al,BYTE PTR ds:[esi]
  420703:	ja     0x420691
  420705:	jne    0x42075b
  420707:	and    eax,0x42769d36
  42070c:	push   cs
  42070d:	pop    ecx
  42070e:	in     eax,0x64
  420710:	addr16 test al,0x37
  420713:	scas   eax,DWORD PTR es:[edi]
  420714:	daa    
  420715:	xchg   ebx,eax
  420716:	mov    cl,0x8a
  420718:	adc    edx,DWORD PTR [eax]
  42071a:	cwde   
  42071b:	jne    0x4206bd
  42071d:	xchg   BYTE PTR [ebp+0x5b],dl
  420720:	push   ebp
  420721:	aaa    
  420722:	mov    ch,0x5
  420724:	sti    
  420725:	cmc    
  420726:	fsub   QWORD PTR [edi-0x33e549cd]
  42072c:	sar    BYTE PTR [edi],0x33
  42072f:	dec    esp
  420730:	push   0x7
  420732:	jbe    0x420720
  420734:	icebp  
  420735:	mov    esp,0x813ae3f9
  42073a:	imul   esp,DWORD PTR [ecx],0xc96c83e5
  420740:	mov    DWORD PTR [edx+eax*1-0x20411114],ecx
  420747:	cdq    
  420748:	(bad)  
  420749:	jle    0x42076a
  42074b:	push   ebp
  42074c:	mov    al,ds:0xc80e7d3f
  420751:	xchg   esp,eax
  420752:	mov    BYTE PTR [esi-0x71],dh
  420755:	pushf  
  420756:	jns    0x420704
  420758:	push   ebx
  420759:	clc    
  42075a:	cdq    
  42075b:	xchg   edi,eax
  42075c:	jge    0x420712
  42075e:	pop    ds
  42075f:	int3   
  420760:	jmp    0xf2a7e8ce
  420765:	mov    dh,0x86
  420767:	jne    0x4206ee
  420769:	inc    edi
  42076a:	xlat   BYTE PTR ds:[bx]
  42076c:	pushf  
  42076d:	mov    gs,WORD PTR [edi+0xd19e25]
  420773:	cmp    ch,dh
  420775:	retf   0x1fb6
  420778:	lock xor eax,0x7fed18c6
  42077e:	adc    esp,DWORD PTR [ebx-0x2e]
  420781:	lods   eax,DWORD PTR ds:[esi]
  420782:	jno    0x42074b
  420784:	das    
  420785:	push   es
  420786:	mov    WORD PTR [ecx+0x20],fs
  420789:	out    0xbe,al
  42078b:	mov    WORD PTR [ebx+0x3c],?
  42078e:	xlat   BYTE PTR ds:[ebx]
  42078f:	mov    ecx,0xa9ad6902
  420794:	outs   dx,DWORD PTR ds:[esi]
  420795:	xchg   dh,bl
  420797:	addr16 sbb esp,esi
  42079a:	les    ebp,FWORD PTR [ebx+0x369fb968]
  4207a0:	dec    ebp
  4207a1:	pop    ds
  4207a2:	xchg   esi,eax
  4207a3:	push   ecx
  4207a4:	dec    edi
  4207a5:	call   0xa116:0xa2b29c44
  4207ac:	xchg   esp,eax
  4207ad:	or     BYTE PTR [edi+0x1605f701],ah
  4207b3:	aaa    
  4207b4:	ins    DWORD PTR es:[edi],dx
  4207b5:	int    0x89
  4207b7:	ret    0x7f15
  4207ba:	and    eax,0x3f0a631e
  4207bf:	xor    BYTE PTR [ecx-0x27],cl
  4207c2:	adc    al,0x1d
  4207c4:	scas   eax,DWORD PTR es:[edi]
  4207c5:	scas   eax,DWORD PTR es:[edi]
  4207c6:	not    ebp
  4207c8:	cmp    ch,BYTE PTR [edx-0x53a00c28]
  4207ce:	sub    bl,BYTE PTR [edx]
  4207d0:	pop    ds
  4207d1:	ss pop es
  4207d3:	push   edx
  4207d4:	aaa    
  4207d5:	cld    
  4207d6:	fadd   QWORD PTR [eax]
  4207d8:	push   0xffffffce
  4207da:	aam    0xcf
  4207dc:	out    dx,al
  4207dd:	cmp    dh,BYTE PTR [edi-0xde55444]
  4207e3:	stos   DWORD PTR es:[edi],eax
  4207e4:	dec    eax
  4207e5:	pop    eax
  4207e6:	popa   
  4207e7:	jmp    0xc622dd9c
  4207ec:	(bad)  
  4207ed:	shl    BYTE PTR [ebp-0x78],cl
  4207f0:	and    al,0xb
  4207f2:	fwait
  4207f3:	dec    esp
  4207f4:	arpl   bp,ax
  4207f6:	xor    al,0x28
  4207f8:	pop    edi
  4207f9:	imul   esp,DWORD PTR es:[edx-0x63d8c6c3],0x26
  420801:	dec    eax
  420802:	in     al,dx
  420803:	mov    ds:0x76633f14,eax
  420808:	fld    DWORD PTR [ebx]
  42080a:	add    BYTE PTR [ebx-0x21a0e640],ah
  420810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420811:	out    dx,eax
  420812:	sub    eax,0xe5cfc780
  420817:	inc    esp
  420818:	cld    
  420819:	sbb    eax,0x1ef158d1
  42081e:	add    esp,ebp
  420820:	or     ebx,esp
  420822:	cdq    
  420823:	sbb    bl,BYTE PTR [eax+eax*2-0xe]
  420827:	inc    edx
  420828:	xor    BYTE PTR [ecx+0x5450bb16],dh
  42082e:	push   ss
  42082f:	nop
  420830:	add    BYTE PTR [eax+ecx*4-0x16],cl
  420834:	push   0xb408f7ca
  420839:	sub    al,bl
  42083b:	cmp    eax,0x82e76815
  420840:	adc    DWORD PTR [edx],esi
  420842:	addr16 pop edi
  420844:	pop    esp
  420845:	pop    ecx
  420846:	dec    edi
  420847:	fs fsub st,st(3)
  42084b:	imul   BYTE PTR [ecx+0x278b2233]
  420851:	sbb    esi,DWORD PTR [esi+0x28d09723]
  420857:	and    eax,0x6f7aaee5
  42085c:	mul    BYTE PTR [esi-0x6b]
  42085f:	xor    al,0x2d
  420861:	sbb    DWORD PTR [ebp-0x23423b61],ebp
  420867:	inc    ebp
  420868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420869:	out    dx,eax
  42086a:	dec    esp
  42086b:	into   
  42086c:	cdq    
  42086d:	stc    
  42086e:	sbb    DWORD PTR [esi-0x241b6758],0xfffffff7
  420875:	jbe    0x4208ba
  420877:	gs out 0x37,eax
  42087a:	push   ecx
  42087b:	test   eax,0xc8aa3675
  420880:	lods   al,BYTE PTR ds:[esi]
  420881:	xchg   bh,bl
  420883:	or     ecx,edi
  420885:	xchg   edx,edi
  420887:	add    bh,ch
  420889:	push   eax
  42088a:	(bad)
  42088d:	jne    0x4208ee
  42088f:	mov    ebx,0xa8f716dd
  420894:	pop    ebp
  420895:	xchg   ebp,eax
  420896:	idiv   BYTE PTR [edi+0x5cb21104]
  42089c:	sbb    BYTE PTR [ebx-0x1c],cl
  42089f:	enterw 0xb594,0x9f
  4208a4:	mov    dl,0xc2
  4208a6:	or     DWORD PTR [edx+0xdc26115],esi
  4208ac:	push   ds
  4208ad:	fistp  WORD PTR [edx-0x1cc344ce]
  4208b3:	sbb    bh,BYTE PTR [esi-0x24]
  4208b6:	sbb    al,0xf3
  4208b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208b9:	pop    ebx
  4208ba:	and    cl,bh
  4208bc:	and    DWORD PTR [esi],edi
  4208be:	sbb    DWORD PTR [ecx],esp
  4208c0:	xchg   ebp,eax
  4208c1:	sbb    al,0xcf
  4208c3:	call   0x983d:0x372269e2
  4208ca:	mov    bh,0x9e
  4208cc:	scas   eax,DWORD PTR es:[edi]
  4208cd:	xor    al,0xfd
  4208cf:	push   ebp
  4208d0:	inc    edi
  4208d1:	in     eax,dx
  4208d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d3:	jp     0x420897
  4208d5:	enter  0x87fd,0x3c
  4208d9:	hlt    
  4208da:	xchg   edi,eax
  4208db:	xor    al,0xa2
  4208dd:	push   esp
  4208de:	fstp   TBYTE PTR [eax]
  4208e0:	or     eax,0x781e1ae7
  4208e5:	dec    ecx
  4208e6:	test   eax,0x4fb41563
  4208eb:	hlt    
  4208ec:	clc    
  4208ed:	mov    BYTE PTR [ebx-0x32],cl
  4208f0:	shr    DWORD PTR [eax],0x50
  4208f3:	sbb    al,0x66
  4208f5:	cs mov cl,0x58
  4208f8:	mov    dh,0xd1
  4208fa:	mov    eax,ds:0xb7d393a7
  4208ff:	xchg   BYTE PTR [esi+0x52],ah
  420902:	gs in  al,dx
  420904:	and    esp,DWORD PTR [edi-0x49]
  420907:	and    ebx,ebx
  420909:	loop   0x4208dd
  42090b:	xlat   BYTE PTR ds:[ebx]
  42090c:	cmp    bh,ah
  42090e:	cmp    al,0xdf
  420910:	jae    0x4208cb
  420912:	lahf   
  420913:	sub    edi,0xf2536d31
  420919:	xor    DWORD PTR [edx+0x5c6e7133],eax
  42091f:	ret    0x9cad
  420922:	add    eax,0x5c4b9727
  420927:	inc    ecx
  420928:	fisttp QWORD PTR [edi+ebp*1+0x5fe5944a]
  42092f:	mov    WORD PTR [esi+0x73b6626c],es
  420935:	aam    0xa4
  420937:	into   
  420938:	sub    eax,eax
  42093a:	popa   
  42093b:	mov    ebx,0xc62b8cd9
  420940:	cmp    cl,al
  420942:	rep stos BYTE PTR es:[edi],al
  420944:	cmp    DWORD PTR [edx+0x11],0x1f
  420948:	mov    eax,0xa968ff9e
  42094d:	dec    DWORD PTR [eax+0x75da5b95]
  420953:	adc    bh,bl
  420955:	out    0xc4,al
  420957:	cmp    DWORD PTR [esi],ecx
  420959:	pop    ds
  42095a:	enter  0x7312,0xfe
  42095e:	repnz dec ebp
  420960:	jnp    0x4209c3
  420962:	push   ds
  420963:	xor    al,0xee
  420965:	xor    dl,dh
  420967:	xchg   ebp,eax
  420968:	not    BYTE PTR ds:0x6b10e4c8
  42096e:	outs   dx,DWORD PTR ds:[esi]
  42096f:	mov    dh,0x6f
  420971:	imul   ebp,DWORD PTR [esi-0x71],0x99536733
  420978:	ins    DWORD PTR es:[edi],dx
  420979:	cdq    
  42097a:	or     al,0xa
  42097c:	mov    ebx,edx
  42097e:	mov    BYTE PTR [eax],ah
  420980:	lods   eax,DWORD PTR ds:[esi]
  420981:	test   DWORD PTR [ebp-0x258e136b],edx
  420987:	sbb    al,0x38
  420989:	and    DWORD PTR [esi+0x7703073c],edx
  42098f:	mov    edx,0x1e3d468
  420994:	in     al,dx
  420995:	xchg   ecx,eax
  420996:	lea    edx,[ebx]
  420998:	jmp    0x1e457aae
  42099d:	ret    0x5d7c
  4209a0:	sub    eax,0x578f2d5d
  4209a5:	loope  0x420954
  4209a7:	mov    bh,0xf5
  4209a9:	bound  ecx,QWORD PTR [esi+0xfb95ff3]
  4209af:	mov    bh,0x52
  4209b1:	sbb    al,0xa5
  4209b3:	aaa    
  4209b4:	fisttp DWORD PTR [ebx]
  4209b6:	push   edx
  4209b7:	push   cs
  4209b8:	fdivr  st,st(3)
  4209ba:	fwait
  4209bb:	out    dx,al
  4209bc:	push   cs
  4209bd:	aad    0xe
  4209bf:	sbb    esi,DWORD PTR [edx-0x64f2320d]
  4209c5:	fcmovbe st,st(2)
  4209c7:	aad    0x69
  4209c9:	std    
  4209ca:	ja     0x420992
  4209cc:	jae    0x420a2e
  4209ce:	out    0xac,eax
  4209d0:	nop
  4209d1:	ret    0x357e
  4209d4:	(bad)  
  4209d5:	pushf  
  4209d6:	hlt    
  4209d7:	mov    WORD PTR [esi],fs
  4209d9:	mov    al,ds:0x48b8f406
  4209de:	xchg   ebx,eax
  4209df:	or     DWORD PTR [edx+0x55e929aa],esi
  4209e5:	push   cs
  4209e6:	xchg   edi,eax
  4209e7:	out    dx,eax
  4209e8:	mov    esi,0xc1f53176
  4209ed:	jg     0x420994
  4209ef:	repz mov esi,0xda980fc0
  4209f5:	add    eax,DWORD PTR [eax+0x741c346b]
  4209fb:	mov    dh,0xd
  4209fd:	ins    DWORD PTR es:[edi],dx
  4209fe:	xchg   ebp,eax
  4209ff:	nop
  420a00:	imul   ecx,DWORD PTR [ebx+0x2731dc5e],0xc9f23508
  420a0a:	fwait
  420a0b:	ja     0x420a74
  420a0d:	inc    esi
  420a0e:	inc    esi
  420a0f:	jge    0x4209d0
  420a11:	fld    DWORD PTR [eax+0x29d056f8]
  420a17:	sub    eax,0x3d48c0a2
  420a1c:	out    dx,eax
  420a1d:	fistp  DWORD PTR [esi+0x4d]
  420a20:	std    
  420a21:	test   esp,ecx
  420a23:	mov    edx,fs
  420a25:	scas   al,BYTE PTR es:[edi]
  420a26:	inc    ecx
  420a27:	mov    dl,0xda
  420a29:	sub    ah,ah
  420a2b:	call   0x36c6b4f9
  420a30:	pusha  
  420a31:	xor    BYTE PTR [ebx-0x2c],bl
  420a34:	ret    0xdbcd
  420a37:	adc    DWORD PTR gs:[esi+edx*1-0x6a8e34b3],esi
  420a3f:	hlt    
  420a40:	lods   eax,DWORD PTR ds:[esi]
  420a41:	push   es
  420a42:	dec    eax
  420a43:	jmp    0xbd312dc5
  420a48:	pop    ecx
  420a49:	shr    BYTE PTR [ebp+0x1a2f03d5],0xa7
  420a50:	jbe    0x420aae
  420a52:	(bad)  
  420a53:	pop    ebx
  420a54:	jne    0x420a9f
  420a56:	jecxz  0x420a0f
  420a58:	(bad)  
  420a5a:	and    bl,BYTE PTR [ecx]
  420a5c:	cld    
  420a5d:	arpl   WORD PTR [eax],sp
  420a5f:	push   ebx
  420a60:	stos   DWORD PTR es:[edi],eax
  420a61:	into   
  420a62:	or     DWORD PTR [edi+0x18],0xbd3a3fb1
  420a69:	pop    ss
  420a6a:	push   eax
  420a6b:	sbb    esi,DWORD PTR [ecx]
  420a6d:	pop    eax
  420a6e:	loopne 0x420ad6
  420a70:	jecxz  0x4209f6
  420a72:	mov    ds:0x95432417,eax
  420a77:	inc    edi
  420a78:	fidivr DWORD PTR [ebp-0xf68e9d8]
  420a7e:	and    eax,DWORD PTR [eax+eiz*4-0x3c]
  420a82:	test   al,0x25
  420a84:	cdq    
  420a85:	add    DWORD PTR fs:[ecx+0x7a491f6d],esp
  420a8c:	rcr    cl,0xa9
  420a8f:	js     0x420a2d
  420a91:	sbb    eax,0x23e5da6c
  420a96:	push   esi
  420a97:	fsubr  QWORD PTR [ebx]
  420a99:	or     DWORD PTR [ebx-0x51],0x68eb5d7e
  420aa0:	pop    esp
  420aa1:	(bad)  
  420aa2:	mov    edx,0x70fc7c79
  420aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aa8:	mov    edi,0x8957721e
  420aad:	or     DWORD PTR [ecx+eax*1+0x37],0x7e
  420ab2:	pop    es
  420ab3:	popa   
  420ab4:	ins    DWORD PTR es:[edi],dx
  420ab5:	and    eax,0x125271d0
  420aba:	stos   DWORD PTR es:[edi],eax
  420abb:	add    al,0xc6
  420abd:	xor    ch,0x69
  420ac0:	mov    ds:0xa82bc13,al
  420ac5:	adc    BYTE PTR [ebx+0x5b],ch
  420ac8:	stc    
  420ac9:	mov    esi,DWORD PTR [edi]
  420acb:	test   DWORD PTR [edx-0x2c56bd72],ebp
  420ad1:	xchg   DWORD PTR [eax],esi
  420ad3:	aaa    
  420ad4:	test   BYTE PTR [ebx+edi*2],cl
  420ad7:	cdq    
  420ad8:	(bad)  
  420ad9:	xor    al,0x44
  420adb:	xchg   esp,eax
  420adc:	dec    edi
  420add:	aad    0x84
  420adf:	mov    ecx,0x58992c3
  420ae4:	cld    
  420ae5:	inc    ebp
  420ae6:	or     DWORD PTR [ebx-0x15],eax
  420ae9:	cwde   
  420aea:	mov    eax,ds:0xbda88c07
  420aef:	sub    BYTE PTR [edx-0x70],dh
  420af2:	inc    ecx
  420af3:	rol    DWORD PTR [ebp+0x3b],0x8e
  420af7:	or     DWORD PTR [esi+0x48],esi
  420afa:	scas   al,BYTE PTR es:[edi]
  420afb:	(bad)  
  420afc:	jmp    0x420aff
  420afe:	setle  BYTE PTR [esi-0x1d]
  420b02:	cmp    dl,BYTE PTR [ebx-0x37719803]
  420b08:	or     BYTE PTR [edx+0x6d9fcc6d],al
  420b0e:	popf   
  420b0f:	sti    
  420b10:	and    al,0xb0
  420b12:	setb   BYTE PTR [edi]
  420b15:	inc    esi
  420b16:	(bad)  
  420b17:	call   0x6462e0c2
  420b1c:	loopne 0x420b67
  420b1e:	mov    WORD PTR [ebx],fs
  420b20:	xchg   esp,eax
  420b21:	push   cs
  420b22:	push   edi
  420b23:	les    ebp,FWORD PTR [esi+0x7fde14a8]
  420b29:	push   esi
  420b2a:	hlt    
  420b2b:	mov    dh,0x92
  420b2d:	add    eax,0x8eaba0e0
  420b32:	or     eax,0x8f73a300
  420b37:	cwde   
  420b38:	call   0xd224:0xa1905068
  420b3f:	mov    eax,ds:0x4719a4f7
  420b44:	pusha  
  420b45:	jg     0x420b57
  420b47:	(bad)  
  420b48:	aam    0x18
  420b4a:	dec    ebx
  420b4b:	js     0x420b3e
  420b4d:	sbb    BYTE PTR [edx-0x5e],al
  420b50:	mov    edi,0x27eb3e49
  420b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b56:	or     al,0x3
  420b58:	gs repnz cdq 
  420b5b:	repnz pop ebp
  420b5d:	inc    ebx
  420b5e:	mov    ecx,DWORD PTR [ebp+0x38]
  420b61:	add    bl,BYTE PTR ss:[edi]
  420b64:	aas    
  420b65:	popf   
  420b66:	adc    al,0x4c
  420b68:	xchg   ebp,eax
  420b69:	jmp    0x420b9f
  420b6b:	jl     0x420bc1
  420b6d:	push   esi
  420b6e:	dec    ebp
  420b6f:	mov    bh,0xec
  420b71:	mov    dl,0x5a
  420b73:	mov    dh,0x2a
  420b75:	pmullw mm6,QWORD PTR [ebp-0x77264a57]
  420b7c:	pusha  
  420b7d:	xor    edi,DWORD PTR [ebp+0x6fe2156b]
  420b83:	mov    WORD PTR [eax+ebx*8-0x35],ss
  420b87:	cmp    al,0x4e
  420b89:	aad    0xf4
  420b8b:	jns    0x420b5d
  420b8d:	repz addr16 (bad) 
  420b90:	fs inc cx
  420b93:	mov    dh,0x85
  420b95:	push   edi
  420b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b97:	ins    BYTE PTR es:[edi],dx
  420b98:	mov    ebp,0x69ff0fa7
  420b9d:	repnz dec ebp
  420b9f:	dec    ebx
  420ba0:	dec    eax
  420ba1:	inc    edi
  420ba2:	les    esi,FWORD PTR [edx-0x4d64b022]
  420ba8:	jl     0x420b8b
  420baa:	or     esi,DWORD PTR [ebx]
  420bac:	mov    ch,0xd3
  420bae:	into   
  420baf:	jmp    0x9b2ed0d6
  420bb4:	inc    esp
  420bb5:	jno    0x420b60
  420bb7:	rcl    cl,0xff
  420bba:	add    al,0x10
  420bbc:	pop    edx
  420bbd:	or     al,0x6
  420bbf:	pushf  
  420bc0:	shr    BYTE PTR [ecx-0x29],1
  420bc3:	jp     0x420b56
  420bc5:	inc    edi
  420bc6:	cdq    
  420bc7:	fbstp  TBYTE PTR [ebx-0x70]
  420bca:	adc    esi,DWORD PTR [ecx-0x58d370f]
  420bd0:	out    dx,eax
  420bd1:	mov    DWORD PTR [ecx+0x27f81914],esi
  420bd7:	mov    WORD PTR [ecx-0x3c738581],cs
  420bdd:	pop    eax
  420bde:	inc    esi
  420bdf:	or     ch,BYTE PTR [ebp-0x623890f8]
  420be5:	and    edi,0xce78af4c
  420beb:	pop    ecx
  420bec:	dec    eax
  420bed:	(bad)  
  420bee:	adc    eax,0x18b63f34
  420bf3:	mov    esp,0x3e911849
  420bf8:	test   BYTE PTR [edi],al
  420bfa:	test   DWORD PTR [ecx+0x3866ac8a],ebx
  420c00:	mov    ebp,0xec51e26a
  420c05:	es (bad) 
  420c07:	add    eax,0x481bf9ab
  420c0c:	test   al,0x3d
  420c0e:	pop    edi
  420c0f:	arpl   WORD PTR [esi-0x21b25281],di
  420c15:	add    eax,0x6b31b957
  420c1a:	add    BYTE PTR [ebx],cl
  420c1c:	fs (bad) 
  420c1e:	adc    BYTE PTR [edx],al
  420c20:	es ins BYTE PTR es:[edi],dx
  420c22:	(bad)  
  420c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c24:	(bad)  
  420c25:	push   edx
  420c26:	and    edi,DWORD PTR [ebx+eiz*4]
  420c29:	popf   
  420c2a:	bnd jmp 0x420c0d
  420c2d:	nop
  420c2e:	and    BYTE PTR [ecx+0x61],dh
  420c31:	outs   dx,BYTE PTR ds:[esi]
  420c32:	je     0x420c14
  420c34:	cwde   
  420c35:	sbb    eax,0xb4261b13
  420c3a:	fist   DWORD PTR [ebp-0x27f5a8ee]
  420c40:	mov    al,ds:0x6c96a65d
  420c45:	hlt    
  420c46:	pop    esp
  420c47:	pop    ss
  420c48:	stos   BYTE PTR es:[edi],al
  420c49:	push   edx
  420c4a:	(bad)  
  420c4b:	mov    ebx,0x356e0675
  420c50:	cwde   
  420c51:	jg     0x420bd3
  420c53:	addr16 jno 0x420bf5
  420c56:	mov    cl,0x54
  420c58:	jmp    0x63e82210
  420c5d:	inc    ebx
  420c5e:	scas   al,BYTE PTR es:[edi]
  420c5f:	or     eax,0xc4f2ec8d
  420c64:	rep lods eax,DWORD PTR ds:[esi]
  420c66:	scas   al,BYTE PTR es:[edi]
  420c67:	mov    ds:0xa0b424cf,al
  420c6c:	mov    WORD PTR [esp+ecx*1],es
  420c6f:	or     al,dh
  420c71:	push   ebp
  420c72:	sub    eax,0x7a48b32a
  420c77:	pop    ds
  420c78:	add    eax,0xc7b6472c
  420c7d:	sbb    al,0x97
  420c7f:	xchg   esp,eax
  420c80:	adc    edx,DWORD PTR [ecx]
  420c82:	cli    
  420c83:	push   ss
  420c84:	mov    edx,DWORD PTR [ebp+0x960c829]
  420c8a:	out    dx,al
  420c8b:	pop    ss
  420c8c:	jp     0x420c6d
  420c8e:	cli    
  420c8f:	mov    ecx,0x7f3a9132
  420c94:	ret    0xa318
  420c97:	push   0xa62277de
  420c9c:	add    dl,bh
  420c9e:	fimul  WORD PTR fs:[edi]
  420ca1:	rcr    DWORD PTR [esi-0x7733d62b],cl
  420ca7:	inc    ecx
  420ca8:	pushf  
  420ca9:	and    DWORD PTR [ebx+0x1e],0xffffff8e
  420cad:	les    esp,FWORD PTR [eax-0x58]
  420cb0:	fnsave [edi+0x792df4ee]
  420cb6:	jbe    0x420d13
  420cb8:	mov    ds:0xbd0ff770,al
  420cbd:	mov    bl,0x44
  420cbf:	mov    ebx,0xd3f39e8d
  420cc4:	jmp    0x420cfb
  420cc6:	sbb    ebp,ecx
  420cc8:	addr16 pop ebp
  420cca:	stc    
  420ccb:	mov    fs,WORD PTR [ebp+0x656929bc]
  420cd1:	mov    ch,0xb6
  420cd3:	or     esi,DWORD PTR ds:0xee3753b
  420cd9:	cmp    DWORD PTR [ecx-0x7927e11b],ebx
  420cdf:	test   cl,cl
  420ce1:	jae    0x420c8e
  420ce3:	test   BYTE PTR [ebx-0x314f26d5],dh
  420ce9:	fst    st(5)
  420ceb:	or     al,0xa
  420ced:	call   0xe906:0x4bf9a8b6
  420cf4:	icebp  
  420cf5:	mov    cl,0x83
  420cf7:	and    ebp,edx
  420cf9:	sub    BYTE PTR [eax-0x52],ch
  420cfc:	jle    0x420d67
  420cfe:	jne    0x420cc6
  420d00:	adc    al,0xd7
  420d02:	xor    DWORD PTR [ebx+0x18],0x38
  420d06:	aas    
  420d07:	or     al,0x30
  420d09:	aad    0x7f
  420d0b:	xchg   BYTE PTR [eax+0x3e],ah
  420d0e:	ret    0x1684
  420d11:	or     DWORD PTR [ebx+0x5f],edx
  420d14:	mov    esp,0xcbe9ee78
  420d19:	mov    bl,0xe9
  420d1b:	fadd   QWORD PTR [esi+eiz*8]
  420d1e:	and    ebx,DWORD PTR [ebp+0xd5808bd]
  420d24:	add    DWORD PTR [ebp-0x16],0xffffffe5
  420d28:	add    esi,edx
  420d2a:	jmp    0x420d5b
  420d2c:	add    edx,ebp
  420d2e:	mov    ah,0x85
  420d30:	leave  
  420d31:	adc    DWORD PTR [ebx+0x31c8dcd],esp
  420d37:	xor    eax,DWORD PTR [edx+ebx*1]
  420d3a:	sbb    al,0xad
  420d3c:	jae    0x420d55
  420d3e:	jle    0x420d2b
  420d40:	dec    ebx
  420d41:	sub    al,0xf2
  420d43:	ja     0x420da6
  420d45:	mov    cl,0x28
  420d47:	xor    BYTE PTR [ebx],0x9b
  420d4a:	add    eax,0x59d93fbe
  420d4f:	and    esi,DWORD PTR [ebp+0x312deb7e]
  420d55:	jo     0x420d44
  420d57:	aam    0xc8
  420d59:	in     al,0xa6
  420d5b:	add    DWORD PTR [esi+esi*1+0x7b],0xf15c8b65
  420d63:	loope  0x420d0d
  420d65:	xlat   BYTE PTR ds:[ebx]
  420d66:	push   ebx
  420d67:	or     eax,0xe01a1676
  420d6c:	fwait
  420d6d:	std    
  420d6e:	mov    ah,0x4b
  420d70:	daa    
  420d71:	xor    al,0xce
  420d73:	push   ebx
  420d74:	scas   al,BYTE PTR es:[edi]
  420d75:	push   cs
  420d76:	mov    ecx,ebp
  420d78:	cmp    BYTE PTR [edi],0x50
  420d7b:	and    eax,0xef16b13b
  420d80:	pop    es
  420d81:	ss or  al,0xb5
  420d84:	dec    ebx
  420d85:	cdq    
  420d86:	jns    0x420dba
  420d88:	sbb    DWORD PTR ds:0x907b23ae,esi
  420d8e:	leave  
  420d8f:	ds stc 
  420d91:	mov    ecx,ss
  420d93:	js     0x420d91
  420d95:	jp     0x420d7a
  420d97:	inc    esp
  420d98:	xor    eax,DWORD PTR [ebp+esi*8+0x581b6a55]
  420d9f:	pop    ebp
  420da0:	or     DWORD PTR [edx-0xe95f540],0xa45abd4e
  420daa:	test   eax,0x5782c28c
  420daf:	dec    edi
  420db0:	mov    eax,ds:0x5fa487eb
  420db5:	inc    ebp
  420db6:	dec    edi
  420db7:	and    eax,eax
  420db9:	push   ss
  420dba:	das    
  420dbb:	mov    cl,BYTE PTR [ebx-0x379cc6eb]
  420dc1:	mov    WORD PTR [edi],ds
  420dc3:	xlat   BYTE PTR ds:[ebx]
  420dc4:	jb     0x420dee
  420dc6:	sbb    al,BYTE PTR [eax]
  420dc8:	mov    esp,0x933628d6
  420dcd:	cld    
  420dce:	into   
  420dcf:	rcl    bl,cl
  420dd1:	pop    es
  420dd2:	dec    ecx
  420dd3:	dec    edx
  420dd4:	sbb    DWORD PTR [ebx+0x23664a79],esi
  420dda:	fwait
  420ddb:	cmp    BYTE PTR [esi+esi*4],dl
  420dde:	fst    QWORD PTR [ebp+ebx*8-0x357f7475]
  420de5:	mov    eax,0xb05f47df
  420dea:	adc    BYTE PTR [ecx],bh
  420dec:	imul   ecx,DWORD PTR [ebp+ecx*4+0x5ef18d56],0x7d
  420df4:	sub    DWORD PTR [ebp+0x1b],0x3c
  420df8:	repnz retf 
  420dfa:	leave  
  420dfb:	push   cs
  420dfc:	mov    eax,0x66c43d08
  420e01:	repz scas eax,DWORD PTR es:[edi]
  420e03:	sub    esp,DWORD PTR [edi-0x6f]
  420e06:	add    dl,BYTE PTR [edx+0x1c8cc564]
  420e0c:	call   0x3c011bfb
  420e11:	push   ebp
  420e12:	xchg   edx,eax
  420e13:	scas   al,BYTE PTR es:[edi]
  420e14:	push   0x14155ed6
  420e19:	inc    ebp
  420e1a:	fsub   QWORD PTR [ecx+0x2c]
  420e1d:	jecxz  0x420e5c
  420e1f:	pop    es
  420e20:	mov    al,0x30
  420e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e23:	sub    eax,0x2caabde5
  420e28:	gs call 0x26cc:0xde9a621e
  420e30:	sub    ebp,ebx
  420e32:	cmovg  esi,DWORD PTR [esi]
  420e35:	stos   BYTE PTR es:[edi],al
  420e36:	cld    
  420e37:	mov    ch,0x10
  420e39:	in     al,dx
  420e3a:	je     0x420df7
  420e3c:	xchg   esp,eax
  420e3d:	out    0xca,al
  420e3f:	add    bh,dl
  420e41:	adc    BYTE PTR [ecx-0x64],0xcb
  420e45:	rcl    dh,0x34
  420e48:	retf   
  420e49:	jb     0x420de4
  420e4b:	inc    esp
  420e4c:	adc    esi,DWORD PTR [ecx+0x4b]
  420e4f:	loope  0x420ec7
  420e51:	xchg   edi,eax
  420e52:	mov    ds:0x24fa8ee8,eax
  420e57:	daa    
  420e58:	inc    DWORD PTR [eax+0x24868d9f]
  420e5e:	sub    bl,cl
  420e60:	popa   
  420e61:	cmp    ah,BYTE PTR [esi-0x4f]
  420e64:	push   ebp
  420e65:	ds jno 0x420e51
  420e68:	push   edi
  420e69:	sub    al,0x12
  420e6b:	fisub  WORD PTR [edx]
  420e6d:	inc    edx
  420e6e:	push   ebx
  420e6f:	adc    ebx,edi
  420e71:	jnp    0x420e8f
  420e73:	pop    esi
  420e74:	mov    ds:0x8599aef,eax
  420e79:	call   0x4afe7345
  420e7e:	jp     0x420e88
  420e80:	retf   0x4413
  420e83:	fst    DWORD PTR [eax-0x37]
  420e86:	mov    DWORD PTR [ebx+0x4c4865b8],esi
  420e8c:	push   es
  420e8d:	out    dx,al
  420e8e:	mov    ah,0x4b
  420e90:	inc    dx
  420e92:	call   0x9eadb984
  420e97:	add    eax,0x820ac156
  420e9c:	push   ebx
  420e9d:	or     ch,bh
  420e9f:	mov    ebx,0x33d96183
  420ea4:	call   0x3804458c
  420ea9:	fst    QWORD PTR [eax-0x72ce583a]
  420eaf:	xchg   esi,eax
  420eb0:	mov    ch,BYTE PTR [edx-0x63ae4fc2]
  420eb6:	out    0x24,al
  420eb8:	mov    ecx,0xbbfe7046
  420ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ebe:	and    cl,BYTE PTR [edx]
  420ec0:	and    DWORD PTR [esi-0x22c62b80],edi
  420ec6:	test   eax,0x60d19621
  420ecb:	ret    0x4669
  420ece:	inc    ecx
  420ecf:	cmp    al,ah
  420ed1:	int3   
  420ed2:	mov    al,ds:0xced9a60b
  420ed7:	sub    edi,edi
  420ed9:	mov    es,WORD PTR [ebp+0x5a]
  420edc:	push   ecx
  420edd:	xor    al,0xa9
  420edf:	out    dx,eax
  420ee0:	pop    edx
  420ee1:	sbb    edx,edi
  420ee3:	dec    ecx
  420ee4:	(bad)  
  420ee5:	(bad)  gs:[edi+0x23]
  420ee9:	dec    edi
  420eea:	cmp    eax,DWORD PTR [ebx-0x33]
  420eed:	or     eax,0xcde8b85a
  420ef2:	in     eax,0xaa
  420ef4:	test   DWORD PTR [edx+0x555dde79],ebx
  420efa:	push   0xd7707c72
  420eff:	jl     0x420ec2
  420f01:	add    eax,0x1194eece
  420f06:	push   ds
  420f07:	sbb    BYTE PTR [ecx-0x674b7172],dh
  420f0d:	xlat   BYTE PTR ds:[ebx]
  420f0e:	jns    0x420ec3
  420f10:	in     eax,0xe3
  420f12:	pop    es
  420f13:	and    esi,DWORD PTR fs:[ecx+0x6f]
  420f17:	pop    ebx
  420f18:	std    
  420f19:	or     dh,BYTE PTR [ecx+0x1c]
  420f1c:	stos   DWORD PTR es:[edi],eax
  420f1d:	mov    edi,0xf89c8b91
  420f22:	scas   eax,DWORD PTR es:[edi]
  420f23:	cmc    
  420f24:	fwait
  420f25:	cwde   
  420f26:	(bad)  
  420f27:	fiadd  WORD PTR [ecx]
  420f29:	fs dec ecx
  420f2b:	dec    eax
  420f2c:	daa    
  420f2d:	mov    fs,WORD PTR [ebx+eiz*8]
  420f30:	test   bh,ah
  420f32:	mov    esp,0xb23d286b
  420f37:	mov    dh,0x7f
  420f39:	addr16 jae 0x420f5f
  420f3c:	jmp    0x420f21
  420f3e:	(bad)  
  420f3f:	test   DWORD PTR [eax],esp
  420f41:	mov    bh,BYTE PTR [edx+eax*2]
  420f44:	lds    eax,FWORD PTR [ebx-0xdff5dbc]
  420f4a:	std    
  420f4b:	mov    ch,0xca
  420f4d:	in     eax,dx
  420f4e:	in     eax,dx
  420f4f:	imul   BYTE PTR [edx+0x1a]
  420f52:	sub    ch,BYTE PTR ds:[esi+ecx*2]
  420f56:	cmc    
  420f57:	lock icebp 
  420f59:	mov    ?,WORD PTR [edi]
  420f5b:	inc    edx
  420f5c:	xchg   esi,eax
  420f5d:	test   eax,0x44675e9b
  420f62:	push   eax
  420f63:	mov    esi,0x6c039215
  420f68:	scas   eax,DWORD PTR es:[edi]
  420f69:	ja     0x420fde
  420f6b:	(bad)  
  420f6c:	sub    eax,0xc554c240
  420f71:	sbb    DWORD PTR [edx],esi
  420f73:	inc    ebp
  420f74:	fdivr  st(6),st
  420f76:	xchg   ebp,eax
  420f77:	mov    cl,al
  420f79:	dec    eax
  420f7a:	lock mov al,BYTE PTR [edx+0x31622238]
  420f81:	cld    
  420f82:	sub    eax,0x559caf3e
  420f87:	mov    DWORD PTR [ebx],ebx
  420f89:	fild   QWORD PTR [ebx+0x315a65b2]
  420f8f:	and    eax,0xaee19aac
  420f94:	inc    ecx
  420f95:	xchg   esp,eax
  420f96:	cdq    
  420f97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f98:	sub    DWORD PTR ds:0xc1402a6e,edx
  420f9e:	xor    eax,0xeeab2b2e
  420fa3:	xor    BYTE PTR [esi-0xc5fdfa6],ch
  420fa9:	xchg   BYTE PTR [esp+eax*4],ch
  420fac:	ror    DWORD PTR [esi+0x94adf2c],0x60
  420fb3:	add    ecx,DWORD PTR [ecx-0x6a3bc1f9]
  420fb9:	scas   al,BYTE PTR es:[edi]
  420fba:	dec    eax
  420fbb:	cli    
  420fbc:	mov    cl,0x98
  420fbe:	and    BYTE PTR [esi+0x67],dl
  420fc1:	ret    0xfb77
  420fc4:	xor    bl,bl
  420fc6:	jg     0x420f7c
  420fc8:	push   edi
  420fc9:	jle    0x42102e
  420fcb:	sbb    ebp,DWORD PTR [ebx+0x4e166339]
  420fd1:	or     BYTE PTR [edi+edi*8+0x1150e5bc],al
  420fd8:	jbe    0x420f60
  420fda:	xor    al,0x45
  420fdc:	loop   0x420fbc
  420fde:	out    dx,al
  420fdf:	std    
  420fe0:	sub    eax,0xee468544
  420fe5:	popf   
  420fe6:	das    
  420fe7:	inc    esp
  420fe8:	sub    BYTE PTR [ecx+0x4785f8bb],al
  420fee:	leave  
  420fef:	outs   dx,DWORD PTR ds:[esi]
  420ff0:	in     al,dx
  420ff1:	add    ecx,edx
  420ff3:	in     al,0x9d
  420ff5:	inc    edx
  420ff6:	xor    al,0xd0
  420ff8:	shr    BYTE PTR [ebx],cl
  420ffa:	lea    ebx,[edi+0x2c09546d]
  421000:	call   0xb4c:0x6d627969
  421007:	adc    cl,BYTE PTR [edi]
  421009:	jne    0x421062
  42100b:	in     eax,dx
  42100c:	mov    dl,0x38
  42100e:	sti    
  42100f:	mov    ?,WORD PTR [esi-0x1df1442a]
  421015:	std    
  421016:	js     0x42101f
  421018:	icebp  
  421019:	inc    ebp
  42101a:	pop    esp
  42101b:	cmp    ecx,DWORD PTR [esi-0x2902c96]
  421021:	into   
  421022:	cdq    
  421023:	sub    dh,0x5b
  421026:	ja     0x420fab
  421028:	xlat   BYTE PTR gs:[ebx]
  42102a:	mov    eax,DWORD PTR [ecx]
  42102c:	cdq    
  42102d:	mov    ebp,eax
  42102f:	fidivr DWORD PTR [ebx-0xde75e5f]
  421035:	sbb    dl,BYTE PTR [ebx+0x5a]
  421038:	repz cmp BYTE PTR [edx],ch
  42103b:	push   es
  42103c:	(bad)  
  42103d:	push   edx
  42103e:	test   eax,esi
  421040:	pushf  
  421041:	xor    BYTE PTR [edx+0x1],dh
  421044:	out    dx,al
  421045:	(bad)  
  421046:	mov    dh,0xc3
  421048:	loope  0x421085
  42104a:	mov    bl,0x90
  42104c:	xchg   edi,eax
  42104d:	push   edi
  42104e:	hlt    
  42104f:	loopne 0x420fe6
  421051:	subps  xmm4,xmm0
  421054:	fidiv  DWORD PTR [eax+0x6e8cac05]
  42105a:	inc    edx
  42105b:	in     al,dx
  42105c:	icebp  
  42105d:	dec    edi
  42105e:	out    dx,eax
  42105f:	fldenv [ecx+0x75]
  421062:	outs   dx,BYTE PTR ds:[esi]
  421063:	and    BYTE PTR [ecx],bl
  421065:	pop    eax
  421066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421067:	push   esi
  421068:	sbb    edx,DWORD PTR ds:0xa5542682
  42106e:	or     bh,BYTE PTR [ecx-0x13108784]
  421074:	jmp    0x670eddfd
  421079:	push   esp
  42107a:	adc    esp,ebx
  42107c:	and    eax,0x95139eb9
  421081:	dec    edi
  421082:	or     eax,0x7a1c4984
  421087:	inc    ebx
  421088:	(bad)  
  421089:	push   ebx
  42108a:	pop    es
  42108b:	aas    
  42108c:	mov    ebx,0x2c00a67e
  421091:	(bad)  
  421092:	leave  
  421093:	and    eax,0x946abd56
  421098:	push   ds
  421099:	adc    ebp,DWORD PTR [edx+ebx*8-0x7ce88e2]
  4210a0:	cmp    eax,0x7c32a871
  4210a5:	push   ebx
  4210a6:	push   edx
  4210a7:	sbb    al,0x3d
  4210a9:	jl     0x42107b
  4210ab:	mov    WORD PTR [ebx+0x52],?
  4210ae:	leave  
  4210af:	dec    ebx
  4210b0:	adc    al,0x79
  4210b2:	push   ebx
  4210b3:	sbb    eax,0x940f02d6
  4210b8:	sub    al,0x14
  4210ba:	shl    BYTE PTR [edi],cl
  4210bc:	mov    al,0xd1
  4210be:	in     eax,dx
  4210bf:	fst    DWORD PTR [esi+0x68]
  4210c2:	retf   
  4210c3:	add    bh,BYTE PTR [ecx+0x60]
  4210c6:	cld    
  4210c7:	clc    
  4210c8:	mov    al,ds:0xabcff238
  4210cd:	lea    ebx,[edx]
  4210cf:	test   al,0xa7
  4210d1:	or     esp,DWORD PTR [ecx+0x18]
  4210d4:	mov    eax,ds:0xd08598fd
  4210d9:	adc    al,0xff
  4210db:	ror    edx,cl
  4210dd:	ins    BYTE PTR es:[edi],dx
  4210de:	mov    esi,0xbc17afaf
  4210e3:	dec    esi
  4210e4:	cmp    eax,0x40e8f346
  4210e9:	cmp    eax,0x8e5a92c2
  4210ee:	jae    0x4210f0
  4210f0:	mov    eax,0xc7be59d2
  4210f5:	pop    esi
  4210f6:	push   ebp
  4210f7:	pop    esp
  4210f8:	jbe    0x4210aa
  4210fa:	lea    ebx,[esi-0x41]
  4210fd:	xor    BYTE PTR [ebx+0x2],dh
  421100:	cmp    al,0x61
  421102:	pop    ebx
  421103:	retf   0x4eb7
  421106:	std    
  421107:	retf   
  421108:	in     al,0x92
  42110a:	inc    edi
  42110b:	inc    edi
  42110c:	mov    eax,ds:0x24ad4ed0
  421111:	pusha  
  421112:	scas   eax,DWORD PTR es:[edi]
  421113:	mov    al,ds:0xde48c3e5
  421118:	jg     0x42115d
  42111a:	cwde   
  42111b:	mov    ebp,0x15ab2ea9
  421120:	call   0xb645:0xf95bd933
  421127:	ins    DWORD PTR es:[edi],dx
  421128:	stc    
  421129:	dec    ebp
  42112a:	dec    esi
  42112b:	dec    esi
  42112c:	pop    esp
  42112d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42112e:	push   ecx
  42112f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421130:	pusha  
  421131:	sbb    bl,BYTE PTR [esi]
  421133:	mov    edi,0x9c2e6469
  421138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421139:	cmp    al,0xb
  42113b:	rcr    ah,0x7f
  42113e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42113f:	stos   BYTE PTR es:[edi],al
  421140:	and    BYTE PTR [edi+0x42fffa8f],bh
  421146:	dec    ebp
  421147:	mov    ah,0xde
  421149:	idiv   DWORD PTR [esi-0x36]
  42114c:	(bad)  
  42114d:	lods   al,BYTE PTR ds:[esi]
  42114e:	xchg   esp,eax
  42114f:	std    
  421150:	xor    bh,BYTE PTR [esi-0xb]
  421153:	xor    BYTE PTR [ebx-0x32],0x3f
  421157:	neg    BYTE PTR [ebp+0x2a7185ea]
  42115d:	or     DWORD PTR [ebp+ebp*2+0x68564d46],eax
  421164:	in     al,0x99
  421166:	inc    ebx
  421167:	out    0xab,eax
  421169:	test   DWORD PTR ds:[ebx],ecx
  42116c:	js     0x421127
  42116e:	mov    ah,0x94
  421170:	mov    WORD PTR [edx+0x30],es
  421173:	xor    ch,dh
  421175:	add    dh,BYTE PTR [ebp-0x4582eca0]
  42117b:	jl     0x42110a
  42117d:	pop    esp
  42117e:	mov    eax,ds:0x4721a11a
  421183:	and    esi,eax
  421185:	lods   eax,DWORD PTR ds:[esi]
  421186:	jmp    0x421173
  421188:	mov    al,0x7e
  42118a:	rol    BYTE PTR [edx-0x10],1
  42118d:	stos   BYTE PTR es:[edi],al
  42118e:	pop    edx
  42118f:	ret    
  421190:	ret    0xd5e
  421193:	hlt    
  421194:	push   eax
  421195:	stos   BYTE PTR es:[edi],al
  421196:	dec    ebx
  421197:	mov    ch,0x62
  421199:	mov    ecx,0xd297b09d
  42119e:	adc    BYTE PTR ds:0xfe9fcd92,dl
  4211a4:	clc    
  4211a5:	add    edx,DWORD PTR [esi+0x70]
  4211a8:	dec    eax
  4211a9:	inc    edi
  4211aa:	ins    BYTE PTR es:[edi],dx
  4211ab:	mov    al,0xce
  4211ad:	add    al,0x35
  4211af:	inc    ecx
  4211b0:	mov    al,0xff
  4211b2:	jecxz  0x421207
  4211b4:	add    eax,0xd15e7ad5
  4211b9:	jbe    0x421163
  4211bb:	pop    edx
  4211bc:	mov    ebx,0x6456895e
  4211c1:	cld    
  4211c2:	cmp    dx,WORD PTR [edx-0x37]
  4211c6:	test   eax,0x3724c8b8
  4211cb:	jbe    0x4211d4
  4211cd:	(bad)  
  4211ce:	jmp    0xf22b837a
  4211d3:	int3   
  4211d4:	or     cl,dh
  4211d6:	inc    esi
  4211d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211d8:	cs scas eax,DWORD PTR es:[edi]
  4211da:	xchg   edx,eax
  4211db:	hlt    
  4211dc:	push   0x9c8a1053
  4211e1:	pop    edi
  4211e2:	mov    dl,0xec
  4211e4:	add    ecx,DWORD PTR [edx+0x3]
  4211e7:	and    DWORD PTR [ecx],0xca510463
  4211ed:	mov    dh,0xfd
  4211ef:	pop    ebx
  4211f0:	sub    DWORD PTR [ebx],ecx
  4211f2:	xchg   edi,eax
  4211f3:	fdivr  DWORD PTR [edx]
  4211f5:	and    eax,0x3b32a9a5
  4211fa:	cli    
  4211fb:	cmp    al,BYTE PTR [edi]
  4211fd:	les    ecx,FWORD PTR ds:0x6e3aae0d
  421203:	and    eax,0x1cbf7499
  421208:	repnz xchg ebp,eax
  42120a:	cmp    eax,DWORD PTR [esi+0x65]
  42120d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42120e:	pabsb  mm4,mm7
  421212:	js     0x42121a
  421214:	pop    ebp
  421215:	enter  0x6be2,0x3b
  421219:	imul   esi,DWORD PTR [ebx],0xd813d3f1
  42121f:	add    eax,0x6cb82340
  421224:	sub    ch,BYTE PTR [ecx-0x32]
  421227:	les    ebx,FWORD PTR [ecx+0x66]
  42122a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42122b:	dec    ebp
  42122c:	cmp    edi,DWORD PTR [edi]
  42122e:	sub    eax,0x14643451
  421233:	data16 cld 
  421235:	stos   BYTE PTR es:[edi],al
  421236:	mov    dh,0x47
  421238:	in     al,0xe4
  42123a:	cwde   
  42123b:	nop
  42123c:	les    eax,FWORD PTR [ecx+0x600486cb]
  421242:	pop    es
  421243:	and    DWORD PTR [ecx+0x39f92920],esp
  421249:	mov    ah,0xf5
  42124b:	arpl   WORD PTR [ecx-0x1d758196],si
  421251:	shl    DWORD PTR [esi+0x1a],0x40
  421255:	pop    ebx
  421256:	mov    ds:0xfbc80dd3,eax
  42125b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42125c:	dec    eax
  42125d:	stc    
  42125e:	or     eax,0xd55a588c
  421263:	xchg   edx,eax
  421264:	scas   al,BYTE PTR es:[edi]
  421265:	push   edi
  421266:	sti    
  421267:	adc    BYTE PTR [edi],cl
  421269:	push   edx
  42126a:	dec    esp
  42126b:	rol    ebx,cl
  42126d:	mov    ds:0xe60b5f0,eax
  421272:	stc    
  421273:	xchg   ecx,eax
  421274:	or     BYTE PTR [ecx+0x176dfa5a],dl
  42127a:	sar    DWORD PTR [ecx],cl
  42127c:	imul   ecx,DWORD PTR [ebx+0x15],0x5a
  421280:	jnp    0x42123d
  421282:	xor    dl,BYTE PTR [ecx-0x7e40becb]
  421288:	dec    ecx
  421289:	mov    bl,0xa0
  42128b:	in     eax,0xcc
  42128d:	daa    
  42128e:	pop    ebx
  42128f:	lods   al,BYTE PTR ds:[esi]
  421290:	pop    ss
  421291:	mov    ah,0xe1
  421293:	sub    DWORD PTR [edi-0x77],edi
  421296:	adc    eax,0x22c61d5
  42129b:	mov    ecx,0x5feb6c14
  4212a0:	lods   eax,DWORD PTR ds:[esi]
  4212a1:	das    
  4212a2:	mov    ds:0xfee12948,eax
  4212a7:	or     eax,0x23e1c8c
  4212ac:	test   eax,0xdbe62cc7
  4212b1:	mov    ds:0xfdb8aac6,al
  4212b6:	cmp    ecx,0xffffffa3
  4212b9:	mov    esi,DWORD PTR [ebp+0x62]
  4212bc:	fnstcw WORD PTR [eax-0x2e]
  4212bf:	adc    dl,BYTE PTR [edx]
  4212c1:	(bad)  
  4212c2:	sbb    cl,BYTE PTR [ecx]
  4212c4:	or     eax,DWORD PTR [eax-0x5f]
  4212c7:	ja     0x421277
  4212c9:	jl     0x4212c0
  4212cb:	sbb    BYTE PTR [edi],0x90
  4212ce:	adc    DWORD PTR [esp+esi*1],esp
  4212d1:	aam    0x50
  4212d3:	mov    esi,0xa2fa9dff
  4212d8:	cmc    
  4212d9:	fiadd  DWORD PTR [edx*2-0x44faefc6]
  4212e0:	dec    ecx
  4212e1:	xchg   edi,eax
  4212e2:	adc    dh,BYTE PTR [ebx-0x1016249]
  4212e8:	cwde   
  4212e9:	imul   ecx,DWORD PTR [eax+0x5573cbe4],0x7d
  4212f0:	pop    ebx
  4212f1:	xchg   ecx,eax
  4212f2:	call   0xfe747989
  4212f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212f8:	sub    eax,0x432d23ba
  4212fe:	push   ebp
  4212ff:	rcl    ebx,0xce
  421302:	push   esi
  421303:	ins    BYTE PTR es:[edi],dx
  421304:	push   esi
  421305:	shl    BYTE PTR [edx+0x12],cl
  421308:	pop    edx
  421309:	fadd   DWORD PTR [esi+esi*2+0x5b]
  42130d:	je     0x421336
  42130f:	cmp    dl,cl
  421311:	sub    ebx,0x3f
  421314:	jle    0x42136f
  421316:	data16 das 
  421318:	and    DWORD PTR [edx-0x60],eax
  42131b:	push   ebx
  42131c:	push   eax
  42131d:	cmp    eax,0xa29b69cd
  421322:	je     0x42136f
  421324:	neg    BYTE PTR [ecx+eiz*4+0x63]
  421328:	jmp    0xcb2e:0xce1e4a1
  42132f:	mov    edi,0x9dc534c0
  421334:	or     DWORD PTR [edi-0x68],edx
  421337:	push   eax
  421338:	pop    esp
  421339:	jbe    0x421390
  42133b:	mov    al,0xb7
  42133d:	fild   QWORD PTR [ecx]
  42133f:	push   0x21
  421341:	cmp    bl,BYTE PTR [ebp+0x2d]
  421344:	jmp    DWORD PTR [bp-0x19]
  421348:	jns    0x4212e3
  42134a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42134b:	add    al,0x86
  42134d:	jmp    0xe736:0x505352e0
  421354:	xchg   esi,eax
  421355:	cmp    edx,esp
  421357:	lods   eax,DWORD PTR ds:[esi]
  421358:	sub    eax,0xc519e002
  42135d:	cwde   
  42135e:	(bad)  
  421360:	xchg   ebx,eax
  421361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421362:	scas   eax,DWORD PTR es:[edi]
  421363:	mov    edx,0x63c25787
  421368:	cmovp  eax,DWORD PTR [ecx-0x2350e4ac]
  42136f:	xor    ebx,DWORD PTR [edi+0x7c]
  421372:	in     al,dx
  421373:	cmp    esi,DWORD PTR [ecx]
  421375:	in     eax,dx
  421376:	push   esp
  421377:	sti    
  421378:	jae    0x421354
  42137a:	mov    ah,0x8d
  42137c:	or     al,0x65
  42137e:	rol    DWORD PTR [ebx-0x66],cl
  421381:	leave  
  421382:	or     BYTE PTR [edi+edx*2+0x1e],bl
  421386:	or     ah,BYTE PTR [edx-0x45]
  421389:	cmp    esp,DWORD PTR [edi+0x4c88e291]
  42138f:	sub    al,0x87
  421391:	(bad)  
  421392:	shr    BYTE PTR [eax],0xf1
  421395:	or     DWORD PTR [edi],edx
  421397:	movnti DWORD PTR [edx+0xd],esi
  42139b:	mov    esp,0x3192eab7
  4213a0:	jmp    0xcbced06c
  4213a5:	mov    eax,ds:0xb9ae7e13
  4213aa:	mov    esp,0x7ca542bd
  4213af:	shr    DWORD PTR [ecx+ebx*8],cl
  4213b2:	mov    edx,0xe9c5b90e
  4213b7:	not    DWORD PTR [ecx]
  4213b9:	mov    DWORD PTR [ebx-0x6fc24a4f],ebp
  4213bf:	arpl   bp,dx
  4213c1:	push   ecx
  4213c2:	(bad)  
  4213c3:	loope  0x421397
  4213c5:	jbe    0x42137f
  4213c7:	cmp    esi,DWORD PTR [esi-0x5bedd530]
  4213cd:	gs jmp 0x4213e5
  4213d0:	mov    esp,0x23c1523d
  4213d5:	push   esp
  4213d6:	loop   0x42135a
  4213d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213d9:	cwde   
  4213da:	leave  
  4213db:	imul   esi,DWORD PTR [ecx+0x3b],0x67
  4213df:	les    esp,FWORD PTR [edx+0x3ee228de]
  4213e5:	mov    DWORD PTR [ebp+0x6cab809d],ebp
  4213eb:	xor    al,0xed
  4213ed:	clc    
  4213ee:	add    BYTE PTR [esi-0x617307d5],ch
  4213f4:	mov    eax,DWORD PTR [edx+ecx*4]
  4213f7:	and    DWORD PTR [eax+0x46],ebp
  4213fa:	ja     0x4213f0
  4213fc:	add    DWORD PTR [esi],0x98b05267
  421402:	outs   dx,BYTE PTR ds:[esi]
  421403:	and    DWORD PTR [esi-0x9],eax
  421406:	das    
  421407:	inc    edi
  421408:	sbb    eax,0xe10abef5
  42140d:	imul   esp,eax,0x3
  421410:	cmc    
  421411:	mov    WORD PTR [edi-0x49],fs
  421414:	stc    
  421415:	mov    dl,bl
  421417:	mov    dh,0xaa
  421419:	adc    DWORD PTR [edx-0x7cf89ec9],eax
  42141f:	xor    esp,0xbc733fbf
  421425:	popf   
  421426:	pop    esi
  421427:	inc    ecx
  421428:	ret    
  421429:	sbb    BYTE PTR [ebp+0x65ec27f8],bh
  42142f:	clc    
  421430:	cmc    
  421431:	aas    
  421432:	int    0xda
  421434:	add    bl,BYTE PTR [ebp+0x2cf4844b]
  42143a:	dec    ebx
  42143b:	dec    ebx
  42143c:	cwde   
  42143d:	pop    ecx
  42143e:	call   0x4e1a5a92
  421443:	dec    eax
  421444:	sub    dh,BYTE PTR [edi]
  421446:	js     0x421469
  421448:	scas   eax,DWORD PTR es:[edi]
  421449:	xor    BYTE PTR [esi-0x31d76df0],0x73
  421450:	out    0x83,al
  421452:	icebp  
  421453:	je     0x42148f
  421455:	push   ds
  421456:	mov    ah,0x86
  421458:	mov    ebp,0xe4baf73d
  42145d:	or     esp,DWORD PTR [ebx-0x4a55fc2d]
  421463:	hlt    
  421464:	test   BYTE PTR [esi],bl
  421466:	or     eax,0xa18f394b
  42146b:	pop    es
  42146c:	jnp    0x4214ea
  42146e:	leave  
  42146f:	aas    
  421470:	aam    0x9c
  421472:	test   ebp,ebx
  421474:	adc    eax,0x4375dc04
  421479:	pop    edi
  42147a:	xlat   BYTE PTR ds:[ebx]
  42147b:	lock inc eax
  42147d:	in     eax,dx
  42147e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42147f:	push   esp
  421480:	movaps XMMWORD PTR [edx+edi*1-0x36373c23],xmm3
  421488:	push   ss
  421489:	dec    ecx
  42148a:	inc    ecx
  42148b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42148c:	lods   al,BYTE PTR ds:[esi]
  42148d:	push   0xffffffb9
  42148f:	mov    eax,ds:0x8bcd7cca
  421494:	int    0x20
  421496:	adc    ah,BYTE PTR [ebp-0x2e602788]
  42149c:	ins    BYTE PTR es:[edi],dx
  42149d:	push   0xffffff86
  42149f:	pop    ss
  4214a0:	dec    eax
  4214a1:	cli    
  4214a2:	nop
  4214a3:	sub    esp,DWORD PTR [ebx*2+0x7fc9bb6f]
  4214aa:	int    0x5
  4214ac:	cdq    
  4214ad:	pop    ds
  4214ae:	sub    al,0xb0
  4214b0:	xor    eax,0xb27a89b7
  4214b5:	or     al,0x62
  4214b7:	mov    dh,0x5f
  4214b9:	std    
  4214ba:	das    
  4214bb:	(bad)  
  4214bc:	adc    DWORD PTR [esi+0x4243c87a],edi
  4214c2:	or     eax,0x71482f49
  4214c7:	adc    bl,BYTE PTR [ebx-0x49]
  4214ca:	dec    ecx
  4214cb:	sub    edi,ebp
  4214cd:	das    
  4214ce:	out    0x9e,al
  4214d0:	test   DWORD PTR [ebx],0xb4495a7d
  4214d6:	div    DWORD PTR [ebx-0x4b]
  4214d9:	add    eax,0xe83ec7d5
  4214de:	xchg   DWORD PTR [eax-0x44e8b2e1],ecx
  4214e4:	push   cs
  4214e5:	sahf   
  4214e6:	and    al,0xf9
  4214e8:	push   0x7f
  4214ea:	adc    eax,0x81f41009
  4214ef:	xlat   BYTE PTR ds:[ebx]
  4214f0:	sbb    eax,0x46772c1d
  4214f5:	inc    edi
  4214f6:	sbb    esp,DWORD PTR [eax+0x1d53f664]
  4214fc:	mov    al,0x76
  4214fe:	jae    0x4214f7
  421500:	(bad)  
  421501:	pop    esi
  421502:	ins    DWORD PTR es:[edi],dx
  421503:	imul   esp,DWORD PTR [edi-0x7b],0xcc2a3fd5
  42150a:	mov    ds:0xd0d67017,eax
  42150f:	sub    eax,DWORD PTR [ebx+0x356954a8]
  421515:	add    DWORD PTR [esp+ecx*4-0xc],edi
  421519:	lahf   
  42151a:	cmc    
  42151b:	mov    eax,ds:0xbeb19fbc
  421520:	aas    
  421521:	stos   BYTE PTR es:[edi],al
  421522:	pop    ebx
  421523:	cmp    edx,DWORD PTR [edx+0x6ffe9c5a]
  421529:	push   ss
  42152a:	jae    0x42152e
  42152c:	sbb    eax,0xa09cde12
  421531:	aaa    
  421532:	neg    BYTE PTR [ecx]
  421534:	(bad)  [edx]
  421536:	sahf   
  421537:	clc    
  421538:	add    al,0xc5
  42153a:	add    BYTE PTR [edi],al
  42153c:	pop    edi
  42153d:	test   eax,0x2626179b
  421542:	sub    bl,BYTE PTR [esi+0x5d]
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	mov    DWORD PTR [ebp-0x30],0x0
  42155d:	mov    DWORD PTR [ebp-0x70],0x0
  421564:	mov    DWORD PTR [ebp-0x58],0x0
  42156b:	mov    DWORD PTR [ebp-0x60],0x0
  421572:	mov    DWORD PTR [ebp-0x4c],0x0
  421579:	mov    DWORD PTR [ebp-0x8],0x0
  421580:	mov    DWORD PTR [ebp-0x18],0x0
  421587:	mov    DWORD PTR [ebp-0x48],0x0
  42158e:	mov    DWORD PTR [ebp-0x10],0x0
  421595:	mov    DWORD PTR [ebp-0x6c],0x0
  42159c:	mov    DWORD PTR [ebp-0x54],0x0
  4215a3:	mov    DWORD PTR [ebp-0x4],0x0
  4215aa:	mov    DWORD PTR [ebp-0x2c],0x0
  4215b1:	mov    DWORD PTR [ebp-0x50],0x0
  4215b8:	mov    DWORD PTR [ebp-0x68],0x0
  4215bf:	mov    DWORD PTR [ebp-0xc],0x0
  4215c6:	mov    DWORD PTR [ebp-0x5c],0x0
  4215cd:	mov    DWORD PTR [ebp-0x14],0x0
  4215d4:	mov    eax,ds:0x428150
  4215d9:	mov    DWORD PTR [ebp-0x28],eax
  4215dc:	mov    ecx,DWORD PTR ds:0x428154
  4215e2:	mov    DWORD PTR [ebp-0x24],ecx
  4215e5:	mov    edx,DWORD PTR ds:0x428158
  4215eb:	mov    DWORD PTR [ebp-0x20],edx
  4215ee:	mov    al,ds:0x42815c
  4215f3:	mov    BYTE PTR [ebp-0x1c],al
  4215f6:	mov    ecx,DWORD PTR ds:0x428140
  4215fc:	mov    DWORD PTR [ebp-0x40],ecx
  4215ff:	mov    edx,DWORD PTR ds:0x428144
  421605:	mov    DWORD PTR [ebp-0x3c],edx
  421608:	mov    eax,ds:0x428148
  42160d:	mov    DWORD PTR [ebp-0x38],eax
  421610:	mov    cx,WORD PTR ds:0x42814c
  421617:	mov    WORD PTR [ebp-0x34],cx
  42161b:	mov    dl,BYTE PTR ds:0x42814e
  421621:	mov    BYTE PTR [ebp-0x32],dl
  421624:	mov    DWORD PTR [ebp-0x2c],0x40
  42162b:	mov    eax,DWORD PTR [ebp-0x60]
  42162e:	push   eax
  42162f:	push   0x0
  421631:	push   0x0
  421633:	mov    ecx,DWORD PTR [ebp-0x68]
  421636:	push   ecx
  421637:	call   0x422a10
  42163c:	lea    edx,[ebp-0xc]
  42163f:	push   edx
  421640:	lea    eax,[ebp-0xc]
  421643:	push   eax
  421644:	lea    ecx,[ebp-0x14]
  421647:	push   ecx
  421648:	call   DWORD PTR ds:0x428004
  42164e:	test   eax,eax
  421650:	je     0x42166b
  421652:	mov    edx,DWORD PTR [ebp-0x60]
  421655:	push   edx
  421656:	push   0x8
  421658:	mov    eax,DWORD PTR [ebp-0x68]
  42165b:	push   eax
  42165c:	call   DWORD PTR ds:0x428030
  421662:	mov    ecx,DWORD PTR [ebp-0xc]
  421665:	add    ecx,0x1
  421668:	mov    DWORD PTR [ebp-0xc],ecx
  42166b:	push   0x0
  42166d:	push   0x0
  42166f:	push   0x0
  421671:	call   DWORD PTR ds:0x428000
  421677:	mov    BYTE PTR [ebp-0x40],0x56
  42167b:	call   DWORD PTR ds:0x42803c
  421681:	mov    DWORD PTR [ebp-0x30],eax
  421684:	mov    BYTE PTR [ebp-0x3e],0x72
  421688:	movzx  edx,WORD PTR [ebp-0x30]
  42168c:	test   edx,edx
  42168e:	jne    0x4216e0
  421690:	mov    BYTE PTR [ebp-0x34],0x0
  421694:	mov    DWORD PTR [ebp-0x14],0xe0d
  42169b:	lea    eax,[ebp-0x28]
  42169e:	push   eax
  42169f:	call   DWORD PTR ds:0x428044
  4216a5:	mov    DWORD PTR [ebp-0x60],eax
  4216a8:	mov    DWORD PTR [ebp-0x58],0x3a
  4216af:	lea    ecx,[ebp-0x40]
  4216b2:	push   ecx
  4216b3:	mov    edx,DWORD PTR [ebp-0x60]
  4216b6:	push   edx
  4216b7:	call   DWORD PTR ds:0x428040
  4216bd:	mov    DWORD PTR [ebp-0x44],eax
  4216c0:	mov    DWORD PTR [ebp-0x4],0x382aa878
  4216c7:	push   0x3
  4216c9:	push   0x0
  4216cb:	push   0x0
  4216cd:	mov    eax,DWORD PTR [ebp-0x68]
  4216d0:	push   eax
  4216d1:	call   DWORD PTR ds:0x42812c
  4216d7:	mov    DWORD PTR [ebp-0x6c],0x10e7cf
  4216de:	jmp    0x421701
  4216e0:	mov    BYTE PTR ds:0x445fe8,0x0
  4216e7:	mov    BYTE PTR ds:0x42d1f0,0x0
  4216ee:	push   0x0
  4216f0:	mov    ecx,DWORD PTR [ebp-0x60]
  4216f3:	push   ecx
  4216f4:	call   DWORD PTR ds:0x42800c
  4216fa:	mov    BYTE PTR ds:0x4439a8,0x0
  421701:	push   DWORD PTR [ebp-0x2c]
  421704:	push   0x1000
  421709:	mov    eax,DWORD PTR [ebp-0x14]
  42170c:	add    eax,0x23
  42170f:	add    eax,0x23
  421712:	push   eax
  421713:	xor    eax,eax
  421715:	push   eax
  421716:	mov    ecx,DWORD PTR [ebp-0x44]
  421719:	call   ecx
  42171b:	mov    edx,eax
  42171d:	mov    DWORD PTR [ebp-0x8],edx
  421720:	mov    edx,DWORD PTR [ebp-0x6c]
  421723:	sub    edx,0xdae0b
  421729:	mov    DWORD PTR [ebp-0x6c],edx
  42172c:	cmp    DWORD PTR [ebp-0x8],0x0
  421730:	jne    0x42174d
  421732:	mov    eax,DWORD PTR [ebp-0x68]
  421735:	push   eax
  421736:	push   0x0
  421738:	mov    ecx,DWORD PTR [ebp-0x60]
  42173b:	push   ecx
  42173c:	push   0x1
  42173e:	push   0x0
  421740:	call   DWORD PTR ds:0x428120
  421746:	mov    BYTE PTR ds:0x4439a8,0x0
  42174d:	mov    edx,DWORD PTR [ebp-0x8]
  421750:	add    edx,DWORD PTR [ebp-0x14]
  421753:	mov    eax,DWORD PTR [ebp-0x4]
  421756:	mov    DWORD PTR [edx],eax
  421758:	mov    DWORD PTR [ebp-0x30],0x410000
  42175f:	mov    ecx,DWORD PTR [ebp-0x60]
  421762:	push   ecx
  421763:	call   DWORD PTR ds:0x428048
  421769:	call   DWORD PTR ds:0x428130
  42176f:	push   DWORD PTR ds:0x428044
  421775:	pop    edx
  421776:	mov    DWORD PTR [ebp-0x70],edx
  421779:	mov    edx,DWORD PTR [ebp-0x8]
  42177c:	add    edx,DWORD PTR [ebp-0x58]
  42177f:	mov    DWORD PTR [ebp-0x5c],edx
  421782:	mov    eax,ds:0x428040
  421787:	mov    DWORD PTR [ebp-0x4c],eax
  42178a:	mov    ecx,DWORD PTR [ebp-0x8]
  42178d:	add    ecx,DWORD PTR [ebp-0x14]
  421790:	mov    edx,DWORD PTR [ebp+0x8]
  421793:	mov    DWORD PTR [ecx+0x4],edx
  421796:	mov    eax,DWORD PTR [ebp-0x8]
  421799:	add    eax,DWORD PTR [ebp-0x14]
  42179c:	mov    DWORD PTR [ebp-0x10],eax
  42179f:	mov    ecx,DWORD PTR [ebp-0x68]
  4217a2:	push   ecx
  4217a3:	call   DWORD PTR ds:0x428050
  4217a9:	cmp    DWORD PTR [ebp-0x6c],0x0
  4217ad:	jbe    0x4217ca
  4217af:	mov    edx,DWORD PTR [ebp-0x10]
  4217b2:	push   edx
  4217b3:	mov    eax,DWORD PTR [ebp-0x14]
  4217b6:	push   eax
  4217b7:	mov    ecx,DWORD PTR [ebp-0x30]
  4217ba:	add    ecx,DWORD PTR [ebp-0x6c]
  4217bd:	push   ecx
  4217be:	mov    edx,DWORD PTR [ebp-0x8]
  4217c1:	push   edx
  4217c2:	call   0x411000
  4217c7:	add    esp,0x10
  4217ca:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217ce:	je     0x4217de
  4217d0:	push   DWORD PTR [ebp-0x4c]
  4217d3:	push   DWORD PTR [ebp-0x70]
  4217d6:	mov    edx,DWORD PTR [ebp-0x5c]
  4217d9:	push   eax
  4217da:	jmp    edx
  4217dc:	jmp    0x4217e4
  4217de:	mov    eax,DWORD PTR [ebp+0x8]
  4217e1:	mov    DWORD PTR [ebp-0x18],eax
  4217e4:	mov    eax,0x1
  4217e9:	mov    esp,ebp
  4217eb:	pop    ebp
  4217ec:	ret    
  4217ed:	int3   
  4217ee:	int3   
  4217ef:	int3   
  4217f0:	push   ebp
  4217f1:	mov    ebp,esp
  4217f3:	sub    esp,0x8
  4217f6:	push   esi
  4217f7:	push   0xa
  4217f9:	mov    DWORD PTR [ebp-0x4],0x0
  421800:	call   DWORD PTR ds:0x428028
  421806:	mov    esi,DWORD PTR ds:0x42803c
  42180c:	push   0xa
  42180e:	push   0xa
  421810:	push   0x0
  421812:	mov    DWORD PTR [ebp-0x8],esi
  421815:	call   DWORD PTR ds:0x428010
  42181b:	test   esi,esi
  42181d:	jne    0x421829
  42181f:	push   0xa
  421821:	push   esi
  421822:	push   esi
  421823:	call   DWORD PTR ds:0x428024
  421829:	call   DWORD PTR ds:0x428020
  42182f:	push   0x0
  421831:	push   0x4e
  421833:	push   0x1e
  421835:	push   0x0
  421837:	push   0xffffffff
  421839:	call   DWORD PTR ds:0x42801c
  42183f:	test   eax,eax
  421841:	je     0x421852
  421843:	push   0x0
  421845:	push   0x1
  421847:	push   0x0
  421849:	call   DWORD PTR ds:0x428018
  42184f:	mov    DWORD PTR [ebp-0x4],eax
  421852:	mov    esi,DWORD PTR [ebp-0x8]
  421855:	call   esi
  421857:	mov    DWORD PTR [ebp-0x4],eax
  42185a:	cmp    DWORD PTR [ebp-0x4],0x57
  42185e:	jne    0x421879
  421860:	push   0xcd804243
  421865:	call   0x421550
  42186a:	add    esp,0x4
  42186d:	push   0x1
  42186f:	push   0x0
  421871:	push   0x0
  421873:	call   DWORD PTR ds:0x428128
  421879:	xor    eax,eax
  42187b:	pop    esi
  42187c:	mov    esp,ebp
  42187e:	pop    ebp
  42187f:	ret    
  421880:	sub    esp,0x10
  421883:	push   0x0
  421885:	push   0x0
  421887:	call   DWORD PTR ds:0x428034
  42188d:	lea    eax,[esp+0x0]
  421891:	push   eax
  421892:	call   DWORD PTR ds:0x42804c
  421898:	push   0xa
  42189a:	call   DWORD PTR ds:0x428028
  4218a0:	cmp    WORD PTR [esp+0x0],0x0
  4218a6:	je     0x4218c4
  4218a8:	push   0x0
  4218aa:	push   0x0
  4218ac:	push   0x0
  4218ae:	push   0x0
  4218b0:	call   0x422a10
  4218b5:	push   0x0
  4218b7:	call   0x4217f0
  4218bc:	add    esp,0x4
  4218bf:	jmp    0x4229f1
  4218c4:	(bad)  
  4218c5:	clc    
  4218c6:	(bad)  
  4218c7:	and    cl,dh
  4218c9:	aaa    
  4218ca:	sbb    cl,BYTE PTR [edi+esi*2-0x1b]
  4218ce:	test   ebx,0xd54a6bbc
  4218d4:	mov    al,0x49
  4218d6:	xor    al,0x1a
  4218d8:	dec    esp
  4218d9:	ja     0x4218bc
  4218db:	test   ebx,0xd5b594fc
  4218e1:	mov    al,0xf1
  4218e3:	xor    al,0x1a
  4218e5:	dec    esp
  4218e6:	ja     0x4218c9
  4218e8:	test   ebx,0xd5b594bc
  4218ee:	mov    al,0xf1
  4218f0:	xor    al,0x1a
  4218f2:	dec    esp
  4218f3:	ja     0x4218d6
  4218f5:	test   ebx,0xd5b594bc
  4218fb:	mov    al,0xf1
  4218fd:	xor    al,0x1a
  4218ff:	dec    esp
  421900:	ja     0x42191b
  421902:	test   ebx,0x6faa9abc
  421908:	mov    esi,0x811380f1
  42190d:	push   esi
  42190e:	pop    ecx
  42190f:	test   BYTE PTR [edi-0x421e4a8f],0xd9
  421916:	adc    BYTE PTR [edx+ebp*2],0x3e
  42191a:	sbb    BYTE PTR [esi-0x4b2e557b],al
  421920:	(bad)  
  421921:	mov    ah,0xde
  421923:	lahf   
  421924:	pop    ebx
  421925:	outs   dx,BYTE PTR ds:[esi]
  421926:	ins    BYTE PTR es:[edi],dx
  421927:	adc    eax,0xc9b9d784
  42192c:	cli    
  42192d:	xchg   ebp,eax
  42192e:	mov    esp,0x5570d1de
  421933:	pop    ds
  421934:	push   edi
  421935:	mov    WORD PTR [eax-0x47452651],ds
  42193b:	fdivr  DWORD PTR [edx+0x4c1a34d5]
  421941:	ja     0x421924
  421943:	test   ebx,0x8c490dbb
  421949:	repz or DWORD PTR [esi+0x738f0f10],esp
  421950:	std    
  421951:	mov    BYTE PTR [esi+eax*1-0x41],al
  421955:	(bad)  
  421956:	aad    0xfd
  421958:	ds inc ebp
  42195a:	mov    ah,0xe5
  42195c:	jmp    0x42190d
  42195e:	scas   al,BYTE PTR es:[edi]
  42195f:	test   BYTE PTR [esi-0x4ddd289],bl
  421965:	ins    BYTE PTR es:[edi],dx
  421966:	jg     0x4219dd
  421968:	jge    0x4218f3
  42196a:	mulps  xmm6,XMMWORD PTR [esi-0x4513c448]
  421971:	mov    bh,0xcc
  421973:	mov    BYTE PTR [esi+0x3d],al
  421976:	popa   
  421977:	out    0xc1,al
  421979:	imul   BYTE PTR [edi+eiz*1-0x21]
  42197d:	cli    
  42197e:	jno    0x4219b5
  421980:	adc    BYTE PTR [edi+ecx*4],dl
  421983:	jae    0x421982
  421985:	mov    BYTE PTR [edi+eax*1-0x41],al
  421989:	std    
  42198a:	dec    ecx
  42198b:	arpl   WORD PTR [esi],di
  42198d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42198e:	xchg   esp,eax
  42198f:	imul   ebx
  421991:	mov    edx,0xed9e2e33
  421996:	mov    al,0x8d
  421998:	sti    
  421999:	cmp    al,0xe2
  42199b:	fidivr WORD PTR [ebp-0x47]
  42199e:	xchg   edx,eax
  42199f:	ret    
  4219a0:	mov    dh,0xd6
  4219a2:	dec    ebp
  4219a3:	inc    edi
  4219a4:	mov    edx,0x461551a9
  4219a9:	xor    eax,0xeec16519
  4219ae:	std    
  4219af:	(bad)  
  4219b0:	mov    ebp,0x10a609f3
  4219b5:	dec    esp
  4219b6:	ja     0x421999
  4219b8:	test   ebx,0x85b594bc
  4219be:	cmc    
  4219bf:	icebp  
  4219c0:	xor    al,0x56
  4219c2:	dec    ebp
  4219c3:	jne    0x4219a6
  4219c5:	sbb    ebp,DWORD PTR [eax]
  4219c7:	jecxz  0x4219a4
  4219c9:	mov    ch,0xd5
  4219cb:	mov    al,0xf1
  4219cd:	xor    al,0x1a
  4219cf:	dec    esp
  4219d0:	ja     0x4219d3
  4219d2:	test   eax,0xdfb49fbd
  4219d8:	mov    al,0xf1
  4219da:	fcomp  DWORD PTR [esi]
  4219dc:	dec    esp
  4219dd:	ja     0x4219c4
  4219df:	icebp  
  4219e0:	retf   
  4219e1:	mov    esp,0xb1d5b594
  4219e6:	dec    esp
  4219e7:	xor    al,0x1a
  4219e9:	dec    esp
  4219ea:	addr16 loope 0x4219e4
  4219ed:	retf   
  4219ee:	mov    esp,0xb0d5b591
  4219f3:	mov    al,0x34
  4219f5:	sbb    bl,BYTE PTR [edi+esi*2-0x1f]
  4219f9:	test   ecx,0xd5b094bc
  4219ff:	mov    cl,0xf1
  421a01:	xor    al,0x1a
  421a03:	dec    esp
  421a04:	ja     0x4219ea
  421a06:	test   edx,0xd5b594bc
  421a0c:	mov    al,0xf1
  421a0e:	mov    ah,0x11
  421a10:	dec    esp
  421a11:	ja     0x4219f8
  421a13:	test   ebx,0xd5b0a501
  421a19:	mov    dl,0xf1
  421a1b:	xor    al,0x9a
  421a1d:	dec    esp
  421a1e:	ja     0x421a11
  421a20:	test   ebx,0xd5b594ac
  421a26:	mov    al,0xe1
  421a28:	xor    al,0x1a
  421a2a:	pop    esp
  421a2b:	ja     0x421a0e
  421a2d:	test   ebx,0xd5a594bc
  421a33:	mov    al,0xf1
  421a35:	xor    al,0x1a
  421a37:	dec    esp
  421a38:	ja     0x421a1b
  421a3a:	test   ebx,0xdedb10bc
  421a40:	mov    al,0x98
  421a42:	aaa    
  421a43:	sbb    cl,BYTE PTR [edi+esi*2-0x2f]
  421a47:	cld    
  421a48:	retf   
  421a49:	jae    0x4219f4
  421a4b:	mov    ch,0xd5
  421a4d:	mov    al,0xf1
  421a4f:	xor    al,0x1a
  421a51:	dec    esp
  421a52:	ja     0x421a35
  421a54:	test   ebx,0xd5b594bc
  421a5a:	mov    al,0xf1
  421a5c:	xor    al,0x1a
  421a5e:	dec    esp
  421a5f:	ja     0x421a42
  421a61:	test   ebx,0xd5b594bc
  421a67:	mov    al,0xf1
  421a69:	xor    al,0x1a
  421a6b:	dec    esp
  421a6c:	ja     0x421a4f
  421a6e:	test   ebx,0xd5b594bc
  421a74:	mov    al,0xf1
  421a76:	xor    al,0x1a
  421a78:	dec    esp
  421a79:	ja     0x421a5c
  421a7b:	test   ebx,0xd5b594bc
  421a81:	mov    al,0xf1
  421a83:	xor    al,0x1a
  421a85:	dec    esp
  421a86:	ja     0x421a69
  421a88:	test   ebx,0xd5b594bc
  421a8e:	mov    al,0xf1
  421a90:	xor    al,0x1a
  421a92:	dec    esp
  421a93:	ja     0x421a76
  421a95:	test   ebx,0xd5b594bc
  421a9b:	mov    al,0xf1
  421a9d:	xor    al,0x1a
  421a9f:	dec    esp
  421aa0:	ja     0x421a83
  421aa2:	test   ebx,0xd5b594bc
  421aa8:	mov    al,0xf1
  421aaa:	xor    al,0x1a
  421aac:	dec    esp
  421aad:	ja     0x421a90
  421aaf:	test   ebx,0xd5b594bc
  421ab5:	sahf   
  421ab6:	test   DWORD PTR [ecx+0x62],edx
  421ab9:	cmp    BYTE PTR [edi-0x1f],dh
  421abc:	test   ebx,0xd5b59f9c
  421ac2:	mov    al,ds:0x761a34f1
  421ac7:	jae    0x421aaa
  421ac9:	test   edi,0x90e594bc
  421acf:	repz ret 
  421ad1:	pusha  
  421ad2:	push   ebp
  421ad3:	dec    esp
  421ad4:	ja     0x421ab7
  421ad6:	test   ebx,0xd5b5b4bc
  421adc:	push   eax
  421add:	fild   WORD PTR [esi+0x69]
  421ae0:	ds adc al,0xe1
  421ae3:	test   ebx,0xd5b5c4bc
  421ae9:	mov    al,0xc1
  421aeb:	aas    
  421aec:	sbb    cl,BYTE PTR [edi+eiz*1-0x1f]
  421af0:	test   ebx,0xd5b59082
  421af6:	mov    al,0xf1
  421af8:	xor    al,0x1a
  421afa:	dec    esp
  421afb:	ja     0x421ade
  421afd:	test   ebx,0xd59594bc
  421b03:	mov    al,0x11
  421b05:	xor    al,0x1a
  421b07:	dec    esp
  421b08:	ja     0x421aeb
  421b0a:	test   ebx,0xd5b594bc
  421b10:	mov    al,0xf1
  421b12:	xor    al,0x1a
  421b14:	dec    esp
  421b15:	ja     0x421af8
  421b17:	test   ebx,0xd5b594bc
  421b1d:	mov    al,0xf1
  421b1f:	xor    al,0x1a
  421b21:	dec    esp
  421b22:	ja     0x421b05
  421b24:	test   ebx,0xd5b594bc
  421b2a:	mov    al,0xf1
  421b2c:	xor    al,0x1a
  421b2e:	dec    esp
  421b2f:	ja     0x421b12
  421b31:	test   ebx,0xd5b594bc
  421b37:	mov    al,0xf1
  421b39:	xor    al,0x1a
  421b3b:	dec    esp
  421b3c:	ja     0x421b1f
  421b3e:	test   ebx,0xd5b594bc
  421b44:	mov    al,0xf1
  421b46:	xor    al,0x1a
  421b48:	dec    esp
  421b49:	ja     0x421b2c
  421b4b:	test   ebx,0xd5b594bc
  421b51:	mov    al,0xf1
  421b53:	xor    al,0x1a
  421b55:	dec    esp
  421b56:	ja     0x421b39
  421b58:	test   ebx,0xd5b594bc
  421b5e:	mov    al,0xf1
  421b60:	xor    al,0x1a
  421b62:	dec    esp
  421b63:	ja     0x421b46
  421b65:	test   ebx,0xd5b594bc
  421b6b:	mov    al,0xf1
  421b6d:	xor    al,0x1a
  421b6f:	dec    esp
  421b70:	ja     0x421b53
  421b72:	test   ebx,0xd5b594bc
  421b78:	mov    al,0xf1
  421b7a:	xor    al,0x1a
  421b7c:	dec    esp
  421b7d:	ja     0x421b60
  421b7f:	test   ebx,0xd5b594bc
  421b85:	mov    al,0xf1
  421b87:	xor    al,0x1a
  421b89:	dec    esp
  421b8a:	ja     0x421b6d
  421b8c:	test   ebx,0xd5b594bc
  421b92:	mov    al,0xf1
  421b94:	xor    al,0x1a
  421b96:	dec    esp
  421b97:	ja     0x421b7a
  421b99:	test   ebx,0xd5b594bc
  421b9f:	mov    al,0xf1
  421ba1:	xor    al,0x1a
  421ba3:	dec    esp
  421ba4:	ja     0x421b87
  421ba6:	test   ebx,0xd5b594bc
  421bac:	mov    al,0xf1
  421bae:	xor    al,0x1a
  421bb0:	dec    esp
  421bb1:	ja     0x421b94
  421bb3:	test   ebx,0xd5b594bc
  421bb9:	mov    al,0xf1
  421bbb:	xor    al,0x1a
  421bbd:	dec    esp
  421bbe:	ja     0x421ba1
  421bc0:	test   ebx,0xd5b594bc
  421bc6:	mov    al,0xf1
  421bc8:	xor    al,0x1a
  421bca:	dec    esp
  421bcb:	ja     0x421bae
  421bcd:	test   ebx,0xd5b594bc
  421bd3:	mov    al,0xf1
  421bd5:	xor    al,0x1a
  421bd7:	dec    esp
  421bd8:	ja     0x421bbb
  421bda:	test   ebx,0xd5b594bc
  421be0:	mov    al,0xf1
  421be2:	xor    al,0x1a
  421be4:	dec    esp
  421be5:	ja     0x421bc8
  421be7:	test   ebx,0xd5b594bc
  421bed:	mov    al,0xf1
  421bef:	xor    al,0x1a
  421bf1:	dec    esp
  421bf2:	ja     0x421bd5
  421bf4:	test   ebx,0xd5b594bc
  421bfa:	mov    al,0xf1
  421bfc:	xor    al,0x1a
  421bfe:	dec    esp
  421bff:	ja     0x421be2
  421c01:	test   ebx,0xd5b594bc
  421c07:	mov    al,0xf1
  421c09:	xor    al,0x1a
  421c0b:	dec    esp
  421c0c:	ja     0x421bef
  421c0e:	test   ebx,0xd5b594bc
  421c14:	mov    al,0xf1
  421c16:	xor    al,0x1a
  421c18:	dec    esp
  421c19:	ja     0x421bfc
  421c1b:	test   ebx,0xd5b594bc
  421c21:	mov    al,0xf1
  421c23:	xor    al,0x1a
  421c25:	dec    esp
  421c26:	ja     0x421c09
  421c28:	test   ebx,0xd5b594bc
  421c2e:	mov    al,0xf1
  421c30:	xor    al,0x1a
  421c32:	dec    esp
  421c33:	ja     0x421c16
  421c35:	test   ebx,0xd5b594bc
  421c3b:	mov    al,0xf1
  421c3d:	xor    al,0x1a
  421c3f:	dec    esp
  421c40:	ja     0x421c23
  421c42:	test   ebx,0xd5b594bc
  421c48:	mov    al,0xf1
  421c4a:	xor    al,0x1a
  421c4c:	dec    esp
  421c4d:	ja     0x421c30
  421c4f:	test   ebx,0xd5b594bc
  421c55:	mov    al,0xf1
  421c57:	xor    al,0x1a
  421c59:	dec    esp
  421c5a:	ja     0x421c3d
  421c5c:	test   ebx,0xd5b594bc
  421c62:	mov    al,0xf1
  421c64:	xor    al,0x1a
  421c66:	dec    esp
  421c67:	ja     0x421c4a
  421c69:	test   ebx,0xd5b594bc
  421c6f:	mov    al,0xf1
  421c71:	xor    al,0x1a
  421c73:	dec    esp
  421c74:	ja     0x421c57
  421c76:	test   ebx,0xd5b594bc
  421c7c:	mov    al,0xf1
  421c7e:	xor    al,0x1a
  421c80:	dec    esp
  421c81:	ja     0x421c64
  421c83:	test   ebx,0xd5b594bc
  421c89:	mov    al,0xf1
  421c8b:	xor    al,0x1a
  421c8d:	dec    esp
  421c8e:	ja     0x421c71
  421c90:	test   ebx,0xd5b594bc
  421c96:	mov    al,0xf1
  421c98:	xor    al,0x1a
  421c9a:	dec    esp
  421c9b:	ja     0x421c7e
  421c9d:	test   ebx,0xd5b594bc
  421ca3:	mov    al,0xf1
  421ca5:	xor    al,0x1a
  421ca7:	dec    esp
  421ca8:	ja     0x421c8b
  421caa:	test   ebx,0xd5b594bc
  421cb0:	mov    al,0xf1
  421cb2:	xor    al,0x1a
  421cb4:	dec    esp
  421cb5:	ja     0x421c98
  421cb7:	test   ebx,0xd5b594bc
  421cbd:	mov    al,0xf1
  421cbf:	xor    al,0x1a
  421cc1:	dec    esp
  421cc2:	ja     0x421ca5
  421cc4:	test   DWORD PTR [edx+edx*2-0x4f054a62],0x4c1a24f1
  421ccf:	pop    ebp
  421cd0:	inc    ebx
  421cd1:	sub    eax,0x986bdaba
  421cd6:	dec    ebx
  421cd7:	aaa    
  421cd8:	mov    eax,ds:0x64a42cd9
  421cdd:	push   ebp
  421cde:	bound  ebp,QWORD PTR [ebp-0x3910ef33]
  421ce4:	add    DWORD PTR [esi+0x22],eax
  421ce7:	ja     0x421c91
  421ce9:	std    
  421cea:	pusha  
  421ceb:	xor    ebp,esp
  421ced:	fiadd  WORD PTR [edx+ecx*4]
  421cf0:	in     al,dx
  421cf1:	cmp    DWORD PTR [esi+0x776e0d85],0xffffffc6
  421cf8:	push   eax
  421cf9:	inc    ebx
  421cfa:	jmp    0x82bef5c4
  421cff:	int3   
  421d00:	jmp    0xf15a1a13
  421d05:	lods   al,BYTE PTR ds:[esi]
  421d06:	in     eax,dx
  421d07:	lods   eax,DWORD PTR ds:[esi]
  421d08:	jnp    0x421ce6
  421d0a:	je     0x421ce8
  421d0c:	push   ss
  421d0d:	mov    ?,WORD PTR [esi]
  421d0f:	mov    edi,edx
  421d11:	mov    ch,0x9
  421d13:	std    
  421d14:	int3   
  421d15:	pop    ecx
  421d16:	sub    al,0xd7
  421d18:	adc    BYTE PTR [eax],bh
  421d1a:	xor    BYTE PTR [ebp-0x7d02b7cb],cl
  421d20:	(bad)  
  421d21:	or     eax,0x684e623a
  421d26:	mov    dh,0x7e
  421d28:	push   ss
  421d29:	add    eax,0x414d8d7a
  421d2e:	mov    cl,0xdc
  421d30:	dec    ebx
  421d31:	xor    eax,DWORD PTR [edi-0x34]
  421d34:	ds jg  0x421d51
  421d37:	shl    DWORD PTR [edx],0x69
  421d3a:	or     ebx,esp
  421d3c:	inc    edx
  421d3d:	(bad)  
  421d3e:	xchg   esi,eax
  421d3f:	push   esp
  421d40:	adc    ebx,ebp
  421d42:	retf   0xf407
  421d45:	cmp    esp,ebx
  421d47:	imul   edi,DWORD PTR [eax-0xbb4c181],0x13
  421d4e:	jecxz  0x421db8
  421d50:	outs   dx,DWORD PTR ds:[esi]
  421d51:	jo     0x421d1f
  421d53:	and    al,0x1b
  421d55:	popf   
  421d56:	icebp  
  421d57:	out    dx,eax
  421d58:	popf   
  421d59:	mov    fs,WORD PTR [eax-0x5cf02949]
  421d5f:	or     dh,ch
  421d61:	and    esp,DWORD PTR [esi+0x5e]
  421d64:	ja     0x421ceb
  421d66:	popf   
  421d67:	xlat   BYTE PTR ds:[ebx]
  421d68:	jp     0x421d16
  421d6a:	ja     0x421d76
  421d6c:	add    eax,0xc4397434
  421d71:	sub    esi,DWORD PTR [esi-0x127a257e]
  421d77:	mov    ds:0x3810188a,eax
  421d7c:	xor    bl,BYTE PTR [edi-0x11]
  421d7f:	mov    ebp,0xe0309b9d
  421d84:	ret    0x6730
  421d87:	outs   dx,DWORD PTR ds:[esi]
  421d88:	icebp  
  421d89:	and    ah,BYTE PTR [edx-0x44]
  421d8c:	push   ebx
  421d8d:	sbb    eax,edi
  421d8f:	loope  0x421d65
  421d91:	out    dx,eax
  421d92:	shl    BYTE PTR [ecx],1
  421d94:	and    edx,ebp
  421d96:	sbb    DWORD PTR [esi-0x3294f291],esi
  421d9c:	add    BYTE PTR [eax],ch
  421d9e:	mov    al,ds:0xda985114
  421da3:	pop    esi
  421da4:	mov    esi,ecx
  421da6:	and    DWORD PTR [ebx+eiz*4-0x5b],0xb34edc37
  421dae:	pusha  
  421daf:	dec    edi
  421db0:	ja     0x421df9
  421db2:	adc    ecx,DWORD PTR [esi]
  421db4:	neg    edx
  421db6:	outs   dx,DWORD PTR ds:[esi]
  421db7:	mov    DWORD PTR [eax+0x795f13c5],ecx
  421dbd:	sub    BYTE PTR [bp-0x2c72],dh
  421dc2:	mov    ds:0x39cd1c8f,al
  421dc7:	jle    0x421e37
  421dc9:	test   al,0xa2
  421dcb:	jmp    0x5add7886
  421dd0:	sti    
  421dd1:	pop    edi
  421dd2:	xchg   esi,eax
  421dd3:	inc    ebp
  421dd4:	xchg   DWORD PTR [ecx+0x22bf1b84],esi
  421dda:	rol    DWORD PTR [esi+0x70],cl
  421ddd:	jecxz  0x421d63
  421ddf:	data16 out 0x70,al
  421de2:	fndisi(8087 only) 
  421de4:	in     al,dx
  421de5:	ror    DWORD PTR [esi-0x5819a0b5],1
  421deb:	hlt    
  421dec:	pop    edi
  421ded:	retf   0xf521
  421df0:	aaa    
  421df1:	dec    edx
  421df2:	or     ecx,edx
  421df4:	push   es
  421df5:	push   edx
  421df6:	add    BYTE PTR [eax+0x3],dl
  421df9:	cmc    
  421dfa:	call   0x50ad:0x4499b218
  421e01:	fisttp WORD PTR [edi-0x23]
  421e04:	inc    edx
  421e05:	sub    bh,BYTE PTR [ecx]
  421e07:	popf   
  421e08:	add    BYTE PTR [esi+0x63574a3e],ch
  421e0e:	shl    al,cl
  421e10:	mov    ds:0x79bc729d,eax
  421e15:	in     eax,dx
  421e16:	retf   
  421e17:	fdivp  st(1),st
  421e19:	cmp    DWORD PTR [edx+0x11],ebx
  421e1c:	and    eax,0xb1e97f27
  421e21:	or     DWORD PTR [edi+0x6],eax
  421e24:	jne    0x421e71
  421e26:	mov    ebp,0x67d41407
  421e2b:	fnstcw WORD PTR [ecx+0x170441bd]
  421e31:	jae    0x421e21
  421e33:	sbb    al,0xda
  421e35:	sub    bx,WORD PTR ds:0x7a13a83f
  421e3c:	jge    0x421e22
  421e3e:	cmp    ch,BYTE PTR [ecx]
  421e40:	or     ecx,DWORD PTR [esi]
  421e42:	xor    eax,DWORD PTR [ecx+0x30]
  421e45:	adc    al,0x64
  421e47:	js     0x421eb1
  421e49:	mov    edi,0xf7b6f76d
  421e4e:	cdq    
  421e4f:	xor    al,0x1a
  421e51:	mov    ebx,0x683f2750
  421e56:	sbb    al,0x65
  421e58:	adc    ecx,esi
  421e5a:	dec    esi
  421e5b:	retf   
  421e5c:	cld    
  421e5d:	je     0x421e02
  421e5f:	mov    al,ds:0x661095a5
  421e64:	ds cmp ebx,edx
  421e67:	and    ecx,DWORD PTR [eax+ecx*8+0x53]
  421e6b:	xor    BYTE PTR [ecx+0x490b048d],cl
  421e71:	ror    DWORD PTR [esi+0x5b],0x2e
  421e75:	mov    al,ds:0xed9fa362
  421e7a:	dec    ebp
  421e7b:	leave  
  421e7c:	fild   QWORD PTR [esi]
  421e7e:	mov    WORD PTR [eax+edx*4+0x1e0a4094],gs
  421e85:	fwait
  421e86:	push   ds
  421e87:	test   al,0xba
  421e89:	cwde   
  421e8a:	adc    BYTE PTR [esi],ch
  421e8c:	jmp    0x21560293
  421e91:	add    edx,DWORD PTR [esi-0x6]
  421e94:	mov    ah,0x68
  421e96:	mov    ebx,0x58d77cca
  421e9b:	mov    ?,WORD PTR ds:0x6cc3208
  421ea1:	in     eax,dx
  421ea2:	add    eax,0x73e8e8d2
  421ea7:	pop    ebp
  421ea8:	mov    cl,bl
  421eaa:	and    ah,ch
  421eac:	inc    ebx
  421ead:	rcl    BYTE PTR [edx+0x30f579e5],0x2b
  421eb4:	call   0xae31d525
  421eb9:	cli    
  421eba:	dec    esp
  421ebb:	lea    esp,[ebx]
  421ebd:	js     0x421e64
  421ebf:	mov    ecx,0x3df8a9ad
  421ec4:	and    dl,BYTE PTR [edx+0x7f47e8f9]
  421eca:	mov    ?,WORD PTR [edi-0x65]
  421ecd:	ja     0x421e6f
  421ecf:	push   esp
  421ed0:	mov    ds:0x9c25abee,al
  421ed5:	icebp  
  421ed6:	retf   
  421ed7:	loop   0x421e80
  421ed9:	and    BYTE PTR [edx-0x34d6a8e7],0x9d
  421ee0:	push   cs
  421ee1:	sti    
  421ee2:	stc    
  421ee3:	gs test al,0x40
  421ee6:	sbb    BYTE PTR [ecx+0x44d4507],ah
  421eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421eed:	jb     0x421ebf
  421eef:	sar    DWORD PTR [ebp-0x581c0529],1
  421ef5:	rcr    ebp,0xe3
  421ef8:	lahf   
  421ef9:	mov    ch,0x46
  421efb:	mov    ?,WORD PTR [edi+0xb]
  421efe:	mov    fs,WORD PTR [edi+0xe75c4a8]
  421f04:	mov    bl,0xc4
  421f06:	iret   
  421f07:	popf   
  421f08:	nop
  421f09:	jbe    0x421e8f
  421f0b:	cmc    
  421f0c:	mov    ebp,0x20a7025d
  421f11:	icebp  
  421f12:	xchg   BYTE PTR [ecx],al
  421f14:	mov    edi,0xba2bc0df
  421f19:	idiv   edx
  421f1b:	push   ss
  421f1c:	cmp    dl,BYTE PTR [edi-0x5c21d7c7]
  421f22:	std    
  421f23:	xor    eax,0x92dc0a6d
  421f28:	jp     0x421f89
  421f2a:	loope  0x421f74
  421f2c:	or     ecx,DWORD PTR [eax]
  421f2e:	popa   
  421f2f:	test   al,0x88
  421f31:	xchg   ecx,eax
  421f32:	retf   0xcbe8
  421f35:	idiv   BYTE PTR [esi+0x3d]
  421f38:	push   esp
  421f39:	or     BYTE PTR [esi-0x66],cl
  421f3c:	test   DWORD PTR [edi-0x47],0xe16edd76
  421f43:	test   dl,bh
  421f45:	push   edx
  421f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f47:	and    ebx,DWORD PTR [edx]
  421f49:	xlat   BYTE PTR ds:[ebx]
  421f4a:	or     dh,BYTE PTR [eax-0x4e]
  421f4d:	int3   
  421f4e:	sbb    eax,0x2d9954b0
  421f53:	mov    ds:0x166068d8,al
  421f58:	addr16 xor eax,0x46e2ca77
  421f5e:	outs   dx,DWORD PTR ds:[esi]
  421f5f:	and    ah,ah
  421f61:	in     al,0x2c
  421f63:	adc    DWORD PTR [ebx-0x27],ebp
  421f66:	inc    sp
  421f68:	into   
  421f69:	or     eax,0x131a8c52
  421f6e:	ins    BYTE PTR es:[edi],dx
  421f6f:	push   0xf3b6feba
  421f74:	ss in  al,dx
  421f76:	jmp    FWORD PTR [eax+0xe2e11f7]
  421f7c:	pop    ebp
  421f7d:	and    al,0x8b
  421f7f:	mul    DWORD PTR [esp+eax*1+0x55fd281]
  421f86:	pop    eax
  421f87:	ficomp WORD PTR [ebx-0x41107d87]
  421f8d:	adc    BYTE PTR [ebx+0x438eab1d],al
  421f93:	imul   edx,DWORD PTR cs:[ebx+ebx*8-0x8],0xc6fce752
  421f9c:	cmc    
  421f9d:	ja     0x421f98
  421f9f:	sbb    esi,esp
  421fa1:	push   edx
  421fa2:	sbb    esi,DWORD PTR [ecx+0x78bbb82f]
  421fa8:	outs   dx,BYTE PTR ds:[esi]
  421fa9:	call   0xfcb8:0x4d3745d7
  421fb0:	add    al,0xc4
  421fb2:	inc    esi
  421fb3:	fwait
  421fb4:	mov    ebx,0xfb257f46
  421fb9:	pop    eax
  421fba:	mov    DWORD PTR [eax],eax
  421fbc:	sti    
  421fbd:	fbld   TBYTE PTR [ebp-0x479de9b7]
  421fc3:	fnstsw WORD PTR [eax]
  421fc5:	sbb    al,0x1f
  421fc7:	into   
  421fc8:	addr16 mov bh,0x8b
  421fcb:	call   0x44ae:0x6ef13ab3
  421fd2:	(bad)  
  421fd3:	lods   eax,DWORD PTR ds:[esi]
  421fd4:	mov    eax,0x24f36d54
  421fd9:	or     al,0x80
  421fdb:	test   DWORD PTR [ecx],0xc81f929e
  421fe1:	aaa    
  421fe2:	scas   al,BYTE PTR es:[edi]
  421fe3:	sahf   
  421fe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fe5:	(bad)  [ebx]
  421fe7:	sti    
  421fe8:	cmp    DWORD PTR [esi-0x49],esi
  421feb:	mov    bl,0x5
  421fed:	outs   dx,BYTE PTR ds:[esi]
  421fee:	repnz shl DWORD PTR [eax-0x40e94863],0xdf
  421ff6:	pop    edi
  421ff7:	stos   DWORD PTR es:[edi],eax
  421ff8:	in     eax,0x9a
  421ffa:	outs   dx,BYTE PTR ds:[esi]
  421ffb:	sub    eax,0x2d4d289e
  422000:	in     al,dx
  422001:	scas   al,BYTE PTR es:[edi]
  422002:	jno    0x421fc5
  422004:	push   edx
  422005:	push   ebx
  422006:	dec    esp
  422007:	das    
  422008:	mov    bl,0x7d
  42200a:	aas    
  42200b:	pop    es
  42200c:	ins    BYTE PTR es:[edi],dx
  42200d:	cmp    al,0xab
  42200f:	fs rcr cl,1
  422012:	add    al,0x5e
  422014:	loope  0x421fab
  422016:	push   ss
  422017:	jno    0x421fbb
  422019:	xchg   ebp,eax
  42201a:	sub    eax,0xc3a6f55
  42201f:	xor    ebp,DWORD PTR [edi-0x27f81fc]
  422025:	out    dx,eax
  422026:	mov    ds:0xaef08307,eax
  42202b:	jnp    0x422052
  42202d:	xchg   edi,eax
  42202e:	dec    edi
  42202f:	daa    
  422030:	xor    al,0xa1
  422032:	out    0x83,eax
  422034:	xor    bl,BYTE PTR [ecx-0x57]
  422037:	pop    ebx
  422038:	dec    ecx
  422039:	inc    eax
  42203a:	int3   
  42203b:	xor    DWORD PTR [eax-0x65],ebp
  42203e:	icebp  
  42203f:	(bad)  
  422040:	sub    al,0x98
  422042:	xchg   esp,eax
  422044:	popf   
  422045:	adc    ch,BYTE PTR [edi-0x23]
  422048:	ins    BYTE PTR es:[edi],dx
  422049:	aam    0x79
  42204b:	xchg   edx,eax
  42204c:	mov    eax,0x4411dce9
  422051:	cmp    dl,dl
  422053:	mov    edx,DWORD PTR [edi+0x6]
  422056:	call   0xde712670
  42205b:	xor    eax,0x95ed3d4a
  422060:	and    al,0xed
  422062:	adc    al,0xa2
  422064:	(bad)  [eax]
  422066:	lahf   
  422067:	enter  0x474d,0x9f
  42206b:	loope  0x42207f
  42206d:	outs   dx,BYTE PTR ds:[esi]
  42206e:	repnz outs dx,BYTE PTR ds:[esi]
  422070:	test   esp,edx
  422072:	mov    bp,0xfdf2
  422076:	xchg   ebp,eax
  422077:	add    dl,BYTE PTR [esi+0x8]
  42207a:	lock mov esi,0x999ce7ce
  422080:	scas   al,BYTE PTR es:[edi]
  422081:	lds    edx,FWORD PTR [ecx]
  422083:	adc    eax,0x5fd466d5
  422088:	lods   al,BYTE PTR ds:[esi]
  422089:	mov    ah,0x78
  42208b:	das    
  42208c:	jge    0x42204a
  42208e:	cmp    ecx,DWORD PTR [edx-0x2c]
  422091:	out    0x28,al
  422093:	sbb    dh,BYTE PTR [eax]
  422095:	dec    eax
  422096:	mov    BYTE PTR [eax-0x13],0x2d
  42209a:	loop   0x42209b
  42209c:	in     eax,0x6c
  42209e:	ret    
  42209f:	sub    BYTE PTR [ebx+eax*1-0x16],bl
  4220a3:	cmp    ch,0xdd
  4220a6:	push   ss
  4220a7:	mov    edi,0x3d3fca98
  4220ac:	lods   eax,DWORD PTR ds:[esi]
  4220ad:	or     dh,BYTE PTR [edi-0x18bfb01b]
  4220b3:	retf   0xedef
  4220b6:	xor    al,0x1a
  4220b8:	fwait
  4220b9:	cmc    
  4220ba:	outs   dx,DWORD PTR ds:[esi]
  4220bb:	add    ecx,esp
  4220bd:	mov    eax,ds:0xfcb2a56
  4220c2:	jp     0x4220e7
  4220c4:	and    eax,0xdf47ac32
  4220c9:	pop    eax
  4220ca:	add    DWORD PTR [ebx-0x37],0xffffff82
  4220ce:	push   ebp
  4220cf:	stos   DWORD PTR es:[edi],eax
  4220d0:	mov    ecx,0xf06a32e1
  4220d5:	(bad)  
  4220d6:	jno    0x422122
  4220d8:	inc    ebx
  4220d9:	jle    0x42209a
  4220db:	(bad)  
  4220dc:	into   
  4220dd:	(bad)  
  4220de:	leave  
  4220df:	shl    DWORD PTR [esi],1
  4220e1:	jle    0x4220a3
  4220e3:	sub    eax,0x8481e585
  4220e8:	lahf   
  4220e9:	jo     0x4220d6
  4220eb:	cmp    bh,ah
  4220ed:	ja     0x42210d
  4220ef:	and    eax,0xd9846182
  4220f4:	or     al,0x88
  4220f6:	or     BYTE PTR [edi+0x2d],ah
  4220f9:	xchg   ecx,eax
  4220fa:	in     eax,dx
  4220fb:	jne    0x4220c9
  4220fd:	loope  0x4220ab
  4220ff:	dec    ecx
  422100:	icebp  
  422101:	dec    esi
  422102:	mov    dl,0x6b
  422104:	xchg   ebx,eax
  422105:	aam    0x14
  422107:	add    DWORD PTR ds:0x9701a7e0,0x17
  42210e:	lahf   
  42210f:	mov    dh,0x49
  422111:	jle    0x42217c
  422113:	call   0xe6816f6b
  422118:	pop    edx
  422119:	pushf  
  42211a:	sar    BYTE PTR [eax],cl
  42211c:	mov    ah,0x37
  42211e:	stos   BYTE PTR es:[edi],al
  42211f:	lock xchg ebx,eax
  422121:	sub    dl,BYTE PTR [esi]
  422123:	ds inc edi
  422125:	arpl   WORD PTR [ebp-0x22],sp
  422128:	aaa    
  422129:	push   esi
  42212a:	xchg   BYTE PTR [ebp+ebx*4+0x7153baa1],ah
  422131:	dec    edx
  422132:	mov    esi,DWORD PTR [edi]
  422134:	call   0xa22ea8b1
  422139:	pop    esi
  42213a:	mov    ch,0xe3
  42213c:	not    DWORD PTR [ebx+0x74a2123c]
  422142:	sbb    DWORD PTR [edx+0x480b631b],ebp
  422148:	dec    ebx
  422149:	in     al,dx
  42214a:	adc    eax,0x1e8249d1
  42214f:	cwde   
  422150:	dec    esp
  422151:	dec    edi
  422152:	push   ds
  422153:	out    0x45,al
  422155:	lea    ebp,[eax-0x21]
  422158:	lods   al,BYTE PTR ds:[esi]
  422159:	sbb    DWORD PTR ds:0x8bec7ac3,edi
  42215f:	dec    ebp
  422160:	dec    ebp
  422161:	push   esi
  422162:	pop    edi
  422163:	xlat   BYTE PTR ds:[ebx]
  422164:	push   ebp
  422165:	pop    ds
  422166:	shl    DWORD PTR [edx+eiz*2-0x75],1
  42216a:	jge    0x4221ac
  42216c:	test   DWORD PTR [eax+0x2c],eax
  42216f:	fisttp WORD PTR [ebx+0x32227c97]
  422175:	push   es
  422176:	push   DWORD PTR [eax+ecx*1+0x50]
  42217a:	repz mov ebx,0x3e084320
  422180:	adc    bh,al
  422182:	call   0x300:0xac37c155
  422189:	jge    0x422118
  42218b:	in     eax,0xc9
  42218d:	cmp    al,BYTE PTR [eax+0x78eff895]
  422193:	or     al,0x60
  422195:	outs   dx,BYTE PTR cs:[esi]
  422197:	add    al,0xdb
  422199:	or     eax,0x33a205b3
  42219e:	dec    edx
  42219f:	lods   eax,DWORD PTR ds:[esi]
  4221a0:	pusha  
  4221a1:	pop    ebx
  4221a2:	popf   
  4221a3:	cmp    ah,BYTE PTR [ebx+0x1]
  4221a6:	fs push cs
  4221a8:	ficom  WORD PTR [eax-0x5b]
  4221ab:	adc    ecx,DWORD PTR ds:0x6b15366e
  4221b1:	pop    ebx
  4221b2:	fisubr DWORD PTR [edx]
  4221b4:	push   0x44
  4221b6:	sbb    ebx,edi
  4221b8:	popf   
  4221b9:	popa   
  4221ba:	stc    
  4221bb:	lahf   
  4221bc:	arpl   WORD PTR ds:[edx+0x3b591506],sp
  4221c3:	push   edx
  4221c4:	xor    eax,0xf7fa228f
  4221c9:	pminsw mm0,QWORD PTR [esi-0x7fc8f47f]
  4221d0:	dec    edi
  4221d1:	mov    ch,0xc3
  4221d3:	retf   
  4221d4:	nop
  4221d5:	adc    al,0x23
  4221d7:	mov    cl,BYTE PTR [ebp+0x5fafb528]
  4221dd:	inc    ebp
  4221de:	adc    eax,0x2bb14f2
  4221e3:	test   BYTE PTR [ecx-0x46],0x65
  4221e7:	(bad)  
  4221e8:	fimul  DWORD PTR [eax]
  4221ea:	xor    eax,0x105cdeb0
  4221ef:	hlt    
  4221f0:	pop    esi
  4221f1:	data16 mov ch,0x3
  4221f4:	cli    
  4221f5:	pusha  
  4221f6:	jne    0x422243
  4221f8:	ins    BYTE PTR es:[edi],dx
  4221f9:	cmp    edx,DWORD PTR [esi-0x7f]
  4221fc:	test   DWORD PTR [ebp+0x45],ecx
  4221ff:	cs imul eax,esi,0xffffffef
  422203:	arpl   WORD PTR [edi],si
  422205:	pop    ds
  422206:	and    bh,0x72
  422209:	add    edx,DWORD PTR [edi-0x65a2988d]
  42220f:	(bad)  
  422211:	inc    ebp
  422212:	add    BYTE PTR [ebx+ebx*4-0x5e],dl
  422216:	std    
  422217:	inc    ebp
  422218:	cmp    edi,eax
  42221a:	fnsave [eax+ebx*8-0x6f]
  42221e:	idiv   esi
  422220:	(bad)  [ecx-0xb9e345f]
  422226:	xor    al,0x11
  422228:	inc    ebx
  422229:	and    DWORD PTR [edx],edi
  42222b:	imul   eax,DWORD PTR [ebx],0xd4f614a7
  422231:	push   edi
  422232:	dec    esp
  422233:	cmc    
  422234:	pusha  
  422235:	mov    eax,0x55a96d76
  42223a:	jmp    0xa8c:0x55fcdfbf
  422241:	add    BYTE PTR [ecx],dh
  422243:	cmp    bh,ch
  422245:	es mov bh,0x72
  422248:	mov    ah,0xb1
  42224a:	ret    
  42224b:	mov    ebp,0x4d1a6e6d
  422250:	mov    al,ds:0x91121682
  422255:	mov    ds,ebp
  422257:	xor    BYTE PTR [ebp+0x40e7e665],bh
  42225d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42225e:	das    
  42225f:	aas    
  422260:	sub    BYTE PTR [edi+0x65c40285],0x1a
  422267:	dec    ebx
  422268:	push   eax
  42226a:	out    dx,eax
  42226b:	sbb    dh,BYTE PTR [ebx]
  42226d:	mov    dh,dl
  42226f:	push   edx
  422270:	je     0x4222db
  422272:	jbe    0x422262
  422274:	rcr    BYTE PTR [edi],0xbd
  422277:	mov    ebx,0x985e3e33
  42227c:	sub    al,0x91
  42227e:	lods   al,BYTE PTR ds:[esi]
  42227f:	jno    0x422286
  422281:	cwde   
  422282:	jmp    0x5eeba505
  422287:	fucomip st,st(1)
  422289:	sar    BYTE PTR [eax+0x38c7cdaf],1
  42228f:	dec    eax
  422290:	loop   0x422268
  422292:	mov    bh,0x52
  422294:	xchg   edx,eax
  422295:	sub    BYTE PTR gs:[edi-0x1a],ch
  422299:	push   ebp
  42229a:	jae    0x4222c7
  42229c:	lods   al,BYTE PTR ds:[esi]
  42229d:	mov    edi,0x56d39a1
  4222a2:	into   
  4222a3:	mov    eax,0xf1873c03
  4222a8:	pop    es
  4222a9:	mov    ebx,0x90ce5720
  4222ae:	cdq    
  4222af:	jb     0x4222bb
  4222b1:	inc    edx
  4222b2:	std    
  4222b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222b4:	iret   
  4222b5:	test   eax,0xb45d96ba
  4222ba:	jnp    0x4222d1
  4222bc:	sar    bl,0xda
  4222bf:	(bad)  
  4222c0:	cmp    DWORD PTR [ecx-0x7f],ebx
  4222c3:	adc    al,cl
  4222c5:	mov    eax,0x12a96c46
  4222ca:	adc    eax,0x2ff73a5a
  4222cf:	frstor [ecx+0x12]
  4222d2:	aas    
  4222d3:	push   0x8a6e520f
  4222d8:	dec    eax
  4222d9:	retf   
  4222da:	not    dl
  4222dc:	icebp  
  4222dd:	clc    
  4222de:	mov    ds:0xeabaa95f,eax
  4222e3:	(bad)  
  4222e4:	aaa    
  4222e5:	mov    eax,0x888d82bb
  4222ea:	or     eax,0x9f832046
  4222ef:	push   es
  4222f0:	loop   0x42228a
  4222f2:	jle    0x4222fe
  4222f4:	jae    0x42227a
  4222f6:	add    BYTE PTR [ebx+ecx*2],bh
  4222f9:	pop    ecx
  4222fa:	jo     0x4222d1
  4222fc:	push   0x2a
  4222fe:	stc    
  4222ff:	push   ecx
  422300:	or     BYTE PTR [edx-0x4e949605],al
  422306:	mov    ah,0xdd
  422308:	retf   
  422309:	fisub  WORD PTR [edi+eax*2]
  42230c:	data16 jg 0x4222c9
  42230f:	add    cl,BYTE PTR [edi+0x66]
  422312:	jge    0x4222fd
  422314:	xchg   edx,eax
  422315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422316:	jno    0x422356
  422318:	(bad)  
  422319:	sar    DWORD PTR [ebx+0x5b11fe24],1
  42231f:	add    BYTE PTR [ebx+0x3f],dl
  422322:	jb     0x4222e6
  422324:	add    al,0x8b
  422326:	push   es
  422327:	cwde   
  422328:	push   edi
  422329:	jmp    0x4222e3
  42232b:	push   ebp
  42232c:	push   es
  42232d:	cmc    
  42232e:	xchg   esp,eax
  42232f:	mov    bl,0x21
  422331:	rcr    DWORD PTR [edx],cl
  422333:	mov    eax,ds:0xa3b2490b
  422338:	jle    0x422330
  42233a:	in     eax,0xb3
  42233c:	sbb    DWORD PTR [ebp+0x2ead353a],0xffffffd0
  422343:	push   esi
  422344:	sbb    al,0x88
  422346:	clc    
  422347:	std    
  422348:	ret    
  422349:	sbb    al,0xad
  42234c:	sub    al,0x3e
  42234e:	lea    esp,[ebx]
  422350:	sub    al,dl
  422352:	xchg   ebp,eax
  422353:	(bad)  
  422354:	ss sbb eax,0x68905831
  42235a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42235b:	push   cs
  42235c:	pop    ss
  42235d:	cwde   
  42235e:	outs   dx,BYTE PTR ds:[esi]
  42235f:	add    eax,0x9db6c35a
  422364:	xchg   DWORD PTR cs:[esi-0x5069afb4],esp
  42236b:	or     eax,0x2bacd86
  422370:	pop    ecx
  422371:	out    0xee,eax
  422373:	rol    BYTE PTR [eax+0x213059f6],cl
  422379:	cmp    DWORD PTR [esp+esi*4],0xffffff87
  42237d:	addr16 data16 sub al,0x62
  422381:	xor    al,0x4b
  422383:	fcomi  st,st(3)
  422385:	inc    esp
  422386:	add    ah,BYTE PTR [esi]
  422388:	test   BYTE PTR [esi],dl
  42238a:	or     al,BYTE PTR [ebx+0x16]
  42238d:	pop    esi
  42238e:	xor    eax,0xa192639f
  422393:	mov    ch,0xdb
  422395:	push   esp
  422396:	mov    ds:0x65005cbd,eax
  42239b:	xchg   DWORD PTR [ebx+0x6f7ecee5],edi
  4223a1:	adc    eax,0x7a425501
  4223a6:	lock and DWORD PTR [edi-0x52],edi
  4223aa:	mov    fs,WORD PTR ss:[ebx]
  4223ad:	loop   0x422357
  4223af:	mov    ecx,0x4e726b15
  4223b4:	lock clc 
  4223b6:	ret    
  4223b7:	fidivr WORD PTR [edx+0x5b]
  4223ba:	mov    dh,0xa2
  4223bc:	sbb    dl,ah
  4223be:	inc    ebp
  4223bf:	and    al,0x8e
  4223c1:	nop
  4223c2:	outs   dx,BYTE PTR ds:[esi]
  4223c3:	mov    cl,0xfd
  4223c5:	imul   ecx,DWORD PTR [esi+0xc],0x4b
  4223c9:	sbb    ch,BYTE PTR [ebx+0x70bfb9a]
  4223cf:	ret    0xfeb7
  4223d2:	scas   al,BYTE PTR es:[edi]
  4223d3:	push   ecx
  4223d4:	mov    ebx,0x238801eb
  4223d9:	dec    edi
  4223da:	lods   al,BYTE PTR ds:[esi]
  4223db:	enter  0x2cbc,0xb6
  4223df:	push   eax
  4223e0:	push   ds
  4223e1:	repnz mov ch,0x21
  4223e4:	and    edi,DWORD PTR [edi]
  4223e6:	adc    al,0x8c
  4223e8:	xchg   esi,eax
  4223e9:	mov    esp,0x44e06e60
  4223ee:	and    eax,0x3a58beb
  4223f3:	jle    0x422438
  4223f5:	pop    esi
  4223f6:	scas   eax,DWORD PTR es:[edi]
  4223f7:	adc    al,BYTE PTR [ebx]
  4223f9:	fwait
  4223fa:	jbe    0x422473
  4223fc:	add    BYTE PTR [edi+0x7a6fb868],0x89
  422403:	push   ds
  422404:	adc    edi,ebx
  422406:	jne    0x422449
  422408:	mov    esp,0x55e80bc9
  42240d:	adc    eax,0x597f07d4
  422412:	mov    ebp,0x4ef7979f
  422417:	fucomp st(0)
  422419:	mov    edi,0x2d3e56ab
  42241e:	(bad)  
  42241f:	jmp    0x6e29:0xb80fe459
  422426:	test   edi,esi
  422428:	xchg   edi,eax
  422429:	test   DWORD PTR [edi],0xcd2b564b
  42242f:	cli    
  422430:	fimul  WORD PTR [esi+ecx*8]
  422433:	xor    al,dh
  422435:	mov    ebx,DWORD PTR es:[edi+ebx*1+0x43b82fd1]
  42243d:	jno    0x422453
  42243f:	pop    edi
  422440:	ret    0x6a25
  422443:	imul   ecx,DWORD PTR [eax],0x202e64d4
  422449:	sbb    BYTE PTR [edi+0x250487f9],dh
  42244f:	mov    eax,DWORD PTR [eax+0x1da903f0]
  422455:	xchg   esi,eax
  422456:	sub    al,cl
  422458:	jmp    0xc1bd5dd4
  42245d:	(bad)  
  42245e:	popf   
  42245f:	arpl   di,bp
  422461:	sbb    ebp,DWORD PTR [esi+0x4]
  422464:	pusha  
  422465:	int    0xd2
  422467:	cld    
  422468:	jmp    DWORD PTR [edx+0x7c]
  42246b:	scas   al,BYTE PTR es:[edi]
  42246c:	jmp    0xc7e46e5c
  422471:	push   eax
  422472:	cmp    eax,0xaf5e3f19
  422477:	adc    ebp,eax
  422479:	and    eax,0x6a04bb69
  42247e:	ja     0x4224cf
  422480:	xchg   BYTE PTR [ecx+0x4eb42a32],ch
  422486:	push   cs
  422487:	(bad)  
  422488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422489:	inc    edi
  42248a:	popf   
  42248b:	js     0x4224e0
  42248d:	mov    ecx,DWORD PTR [ecx+edx*4]
  422490:	(bad)  
  422491:	test   al,0xba
  422493:	pop    eax
  422494:	add    eax,0x26ccd023
  422499:	sub    BYTE PTR [edx-0x650bb13e],bh
  42249f:	in     al,0x24
  4224a1:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4224a3:	dec    ecx
  4224a4:	mov    ds:0xc035ad29,al
  4224a9:	leave  
  4224aa:	inc    ebx
  4224ab:	lahf   
  4224ac:	lahf   
  4224ad:	das    
  4224ae:	cdq    
  4224af:	js     0x42252e
  4224b1:	inc    esp
  4224b2:	test   al,0x5a
  4224b4:	adc    edx,DWORD PTR [eax+0x74]
  4224b7:	pusha  
  4224b8:	push   esp
  4224b9:	push   esp
  4224ba:	mov    BYTE PTR [edi-0xbe65366],cl
  4224c0:	ja     0x422500
  4224c2:	adc    al,0xd2
  4224c4:	fidiv  WORD PTR [edi-0xbf04f23]
  4224ca:	in     al,dx
  4224cb:	mov    al,ds:0xa89e6c0b
  4224d0:	cmp    al,0x83
  4224d2:	jle    0x422495
  4224d4:	or     ch,BYTE PTR [ebp+0x2e]
  4224d7:	push   0x29
  4224d9:	adc    DWORD PTR [eax-0x494aa64b],ebp
  4224df:	add    al,BYTE PTR [esi-0x71]
  4224e2:	and    DWORD PTR [edx-0x5f],ebp
  4224e5:	repnz sbb ch,BYTE PTR [ecx]
  4224e8:	mov    ah,BYTE PTR [edx+0x38622b3b]
  4224ee:	sub    ecx,DWORD PTR [ebp+0x78]
  4224f1:	lock add al,0xa5
  4224f4:	sbb    eax,0xad0305fa
  4224f9:	aad    0xa9
  4224fb:	ror    ebx,0x3b
  4224fe:	ror    BYTE PTR [edi+0x4c],1
  422501:	leave  
  422502:	js     0x4224f1
  422504:	daa    
  422505:	out    0xea,al
  422507:	xchg   ecx,eax
  422508:	inc    edi
  422509:	dec    ebp
  42250a:	xchg   edi,eax
  42250b:	push   ds
  42250c:	fbstp  TBYTE PTR ds:0xd4693bdd
  422512:	xor    ch,BYTE PTR [esi]
  422514:	stos   BYTE PTR es:[edi],al
  422515:	lock sub al,0x3f
  422518:	adc    BYTE PTR [esi+ebp*4-0x4409c2c],cl
  42251f:	(bad)
  422522:	gs push ebp
  422524:	inc    ecx
  422525:	or     eax,0x53f05b42
  42252a:	lods   eax,DWORD PTR ds:[esi]
  42252b:	xor    ecx,ebp
  42252d:	icebp  
  42252e:	scas   al,BYTE PTR es:[edi]
  42252f:	push   edx
  422530:	cmp    eax,0x49374d61
  422535:	add    al,0x15
  422537:	xor    al,0x29
  422539:	jae    0x4224ff
  42253b:	das    
  42253c:	test   ebx,ebp
  42253e:	mov    esp,0x675151fe
  422543:	dec    ebx
  422544:	xchg   edx,eax
  422545:	hlt    
  422546:	push   cs
  422547:	ret    
  422548:	inc    ebx
  422549:	push   ss
  42254a:	cmove  ebp,DWORD PTR [esi]
  42254d:	mov    ebx,0x275d053e
  422552:	outs   dx,BYTE PTR ds:[esi]
  422553:	loope  0x422529
  422555:	and    al,BYTE PTR [ecx]
  422557:	xor    DWORD PTR [esi-0x62d14950],eax
  42255d:	add    eax,0xb518b578
  422562:	sbb    al,0x12
  422564:	xor    eax,0xad4996e5
  422569:	ficomp WORD PTR [ecx-0x3f]
  42256c:	repnz pop ecx
  42256e:	test   bl,ah
  422570:	mov    ah,0xe0
  422572:	sub    bh,BYTE PTR [ebx]
  422574:	fld    QWORD PTR [esi+ebx*1-0x15]
  422578:	fmulp  st(7),st
  42257a:	icebp  
  42257b:	xor    DWORD PTR [esi],ecx
  42257d:	or     DWORD PTR [ebx],esi
  42257f:	jb     0x422567
  422581:	mov    ah,0xde
  422583:	outs   dx,DWORD PTR ds:[esi]
  422584:	fdivrp st(3),st
  422586:	adc    DWORD PTR [edi],0x3b20fbac
  42258c:	fdiv   st,st(5)
  42258e:	xor    al,0x7
  422590:	and    BYTE PTR [ebp+0x41],bh
  422593:	popf   
  422594:	or     ebp,DWORD PTR ds:0xd7fd1fdd
  42259a:	retf   
  42259b:	pop    esi
  42259c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42259d:	aaa    
  42259e:	call   0x9edb:0x91611662
  4225a5:	mov    ecx,0x53f3caa9
  4225aa:	xor    dl,BYTE PTR [edi+0x1960db4f]
  4225b0:	adc    esp,DWORD PTR [ecx-0x2d]
  4225b3:	ins    DWORD PTR es:[edi],dx
  4225b4:	hlt    
  4225b5:	cli    
  4225b6:	retf   
  4225b7:	pop    ss
  4225b8:	gs push ecx
  4225ba:	add    DWORD PTR [esi],0xce48fb7c
  4225c0:	aam    0x62
  4225c2:	dec    esp
  4225c3:	cld    
  4225c4:	sub    al,0x30
  4225c6:	xchg   esi,eax
  4225c7:	ret    
  4225c8:	mov    ch,0x88
  4225ca:	push   si
  4225cc:	gs int3 
  4225ce:	mov    eax,ebp
  4225d0:	ss repnz sub eax,0x2a0ee89e
  4225d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225d8:	sbb    eax,0x300f7418
  4225dd:	cmp    bl,BYTE PTR [eax]
  4225df:	mov    bl,0x77
  4225e1:	test   ebp,0x5ccb3f93
  4225e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225e8:	sub    eax,0xd141fd8a
  4225ed:	out    dx,eax
  4225ee:	mov    al,ds:0xedba19c3
  4225f3:	fistp  WORD PTR [edi]
  4225f5:	stos   DWORD PTR es:[edi],eax
  4225f6:	scas   eax,DWORD PTR es:[edi]
  4225f7:	sub    DWORD PTR [ebx+0x2f],esp
  4225fa:	rcr    esi,0x1c
  4225fd:	cmp    al,0x36
  4225ff:	dec    edi
  422600:	fisubr WORD PTR [ecx-0x6f]
  422603:	ins    BYTE PTR es:[edi],dx
  422604:	aad    0x7a
  422606:	jno    0x422633
  422608:	setae  al
  42260b:	xchg   ecx,eax
  42260c:	mov    ah,0x9
  42260e:	js     0x422655
  422610:	jmp    0xac0a:0x9938fd02
  422617:	popf   
  422618:	mov    al,ah
  42261a:	xchg   DWORD PTR ds:0x5214e765,edx
  422620:	inc    eax
  422621:	push   ss
  422622:	or     eax,0x4678e03a
  422627:	fst    st(7)
  422629:	leave  
  42262a:	xchg   ebx,eax
  42262b:	dec    edx
  42262c:	pusha  
  42262d:	and    BYTE PTR [eax-0x686107f6],cl
  422633:	mov    ch,0xf4
  422635:	pop    edx
  422636:	mul    BYTE PTR [ebx-0x4b]
  422639:	adc    BYTE PTR [edi],ch
  42263b:	leave  
  42263c:	mov    cl,0x36
  42263e:	test   eax,0xc7a7bd86
  422643:	and    BYTE PTR [eax+0x65c981a1],bl
  422649:	je     0x422696
  42264b:	sbb    al,dl
  42264d:	sbb    DWORD PTR [esi],esi
  42264f:	nop
  422650:	scas   al,BYTE PTR es:[edi]
  422651:	inc    ecx
  422652:	mov    bl,0xef
  422654:	push   cs
  422655:	and    BYTE PTR [edx-0x67],ah
  422658:	imul   esi,DWORD PTR [edi-0x7b],0xffffffeb
  42265c:	dec    esi
  42265d:	lods   al,BYTE PTR ds:[esi]
  42265e:	jmp    0x4226ba
  422660:	mov    es,ebx
  422662:	push   ebx
  422663:	xchg   edi,eax
  422664:	sub    DWORD PTR [esi+0x22],edx
  422667:	dec    bl
  422669:	cwde   
  42266a:	push   ebp
  42266b:	rol    ch,1
  42266d:	sub    eax,0x3587dd18
  422672:	test   BYTE PTR [edi],ch
  422674:	push   esp
  422675:	dec    ecx
  422676:	(bad)  
  422677:	icebp  
  422678:	push   0x19
  42267a:	dec    ebp
  42267b:	nop
  42267c:	jge    0x422610
  42267e:	loope  0x4226b0
  422680:	retf   0xeb7c
  422683:	sub    ecx,esp
  422685:	mov    ch,0x88
  422687:	aam    0xea
  422689:	sti    
  42268a:	pop    edx
  42268b:	dec    ebp
  42268c:	lock rcr BYTE PTR [esi-0x76526490],0xb2
  422694:	xchg   esi,eax
  422695:	xor    ch,ah
  422697:	pop    ebx
  422698:	inc    ebx
  422699:	fild   DWORD PTR [edi-0xa7d350e]
  42269f:	mov    ch,BYTE PTR [esi]
  4226a1:	push   cs
  4226a2:	pop    ebp
  4226a3:	aam    0xfb
  4226a5:	cmc    
  4226a6:	arpl   dx,sp
  4226a8:	mov    al,0x19
  4226aa:	or     BYTE PTR [esi],bh
  4226ac:	jbe    0x4226b8
  4226ae:	fld    TBYTE PTR [eax]
  4226b0:	loopne 0x422648
  4226b2:	aas    
  4226b3:	rcr    BYTE PTR [eax],0xb3
  4226b6:	push   edi
  4226b7:	lods   al,BYTE PTR ds:[esi]
  4226b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226b9:	imul   esp,eax,0x45016d42
  4226bf:	jne    0x4226d1
  4226c1:	xor    DWORD PTR [edx-0x48],edx
  4226c4:	add    al,0xba
  4226c6:	into   
  4226c7:	xchg   edi,eax
  4226c8:	xchg   edx,eax
  4226c9:	jnp    0x422727
  4226cb:	mov    dl,0x9c
  4226cd:	xchg   edx,eax
  4226ce:	bound  esi,QWORD PTR [esi]
  4226d0:	jge    0x422705
  4226d2:	and    BYTE PTR [eax-0x80],ch
  4226d5:	sbb    ebp,edx
  4226d7:	leave  
  4226d8:	xor    DWORD PTR [ebx-0x17ce3549],ebp
  4226de:	out    dx,eax
  4226df:	in     eax,dx
  4226e0:	pop    es
  4226e1:	jecxz  0x4226b8
  4226e3:	cmp    edx,DWORD PTR [eax+0x5]
  4226e6:	sub    BYTE PTR [eax+0x7c5a56b7],bl
  4226ec:	and    BYTE PTR [edi],ch
  4226ee:	mov    bl,0xed
  4226f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226f1:	push   ecx
  4226f2:	push   0xfffffff8
  4226f4:	je     0x4226e9
  4226f6:	popa   
  4226f7:	jnp    0x4226dd
  4226f9:	rcr    dl,1
  4226fb:	add    ebx,DWORD PTR [edx]
  4226fd:	cwde   
  4226fe:	rcl    DWORD PTR [ebp+0xfdd0991],0x3d
  422705:	data16 sbb ah,bl
  422708:	mov    es,WORD PTR [esi+0x435059ee]
  42270e:	into   
  42270f:	jmp    0xaad9:0x8d85f976
  422716:	adc    eax,0x8404fab0
  42271b:	dec    ebp
  42271c:	outs   dx,BYTE PTR ds:[esi]
  42271d:	js     0x42277e
  42271f:	add    eax,0x9b6d3e9f
  422724:	pop    edx
  422725:	jno    0x4226d1
  422727:	push   0x62
  422729:	cs jg  0x4226cf
  42272c:	xchg   esp,eax
  42272d:	and    edi,DWORD PTR [ebx]
  42272f:	sub    bl,al
  422731:	xchg   esi,eax
  422732:	or     DWORD PTR [edi],ebx
  422734:	sbb    edx,DWORD PTR [ecx-0x787b73f6]
  42273a:	mov    edx,es
  42273c:	and    BYTE PTR [ecx+0x16],cl
  42273f:	push   ds
  422740:	js     0x4226e9
  422742:	mov    al,ds:0x3ede4f7c
  422747:	xor    cl,BYTE PTR [esi+eax*2]
  42274a:	retf   
  42274b:	mov    ds:0x6da571ca,eax
  422750:	scas   eax,DWORD PTR es:[edi]
  422751:	cmp    ecx,ecx
  422753:	xor    DWORD PTR [edx+ebx*4-0x1f999a8d],0x156b8e0b
  42275e:	push   cs
  42275f:	es enter 0x4bd9,0x82
  422764:	lds    ebx,FWORD PTR [ebx]
  422766:	or     BYTE PTR [esi],bh
  422768:	or     ebx,DWORD PTR [ecx+edi*1-0x65]
  42276c:	and    eax,0x7228dd54
  422771:	mov    ebx,0xb6d475ae
  422777:	and    eax,0x691f433c
  42277c:	mov    dl,0xb
  42277e:	ss jp  0x42272e
  422781:	adc    BYTE PTR [eax-0x7fa2b361],0x64
  422788:	lea    edx,[ebx+0x41468b37]
  42278e:	mov    ds:0x32684079,eax
  422793:	cs cdq 
  422795:	push   es
  422796:	xchg   ebx,eax
  422797:	dec    ebx
  422798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422799:	mov    WORD PTR [eax+0x44],?
  42279c:	ins    BYTE PTR es:[edi],dx
  42279d:	or     esp,DWORD PTR [edx]
  42279f:	push   eax
  4227a0:	cmp    ebx,DWORD PTR cs:[edx+edx*4]
  4227a4:	rcr    cl,cl
  4227a6:	mov    ecx,0x8b79694b
  4227ab:	(bad)  
  4227ac:	jcxz   0x4227d3
  4227af:	mov    dh,0xbd
  4227b1:	lock adc eax,0x120f3e34
  4227b7:	(bad)  
  4227b8:	out    dx,eax
  4227b9:	xor    ah,bl
  4227bb:	pop    ebx
  4227bc:	and    bl,BYTE PTR [edi]
  4227be:	sub    BYTE PTR [ecx],0x5a
  4227c1:	imul   esp,DWORD PTR [edx+0x76d18417],0x7ecf8c2f
  4227cb:	push   ss
  4227cc:	dec    edx
  4227cd:	push   cs
  4227ce:	xor    eax,0x6df08aab
  4227d3:	xchg   ebp,eax
  4227d4:	ror    DWORD PTR [esi],cl
  4227d6:	pop    ebp
  4227d7:	clc    
  4227d8:	adc    al,0x4c
  4227da:	and    DWORD PTR [ecx],esp
  4227dc:	xor    al,0xa9
  4227de:	and    eax,0x60608b9e
  4227e3:	pushf  
  4227e4:	out    dx,eax
  4227e5:	rcr    edx,0x1a
  4227e8:	jae    0x4227b2
  4227ea:	fldcw  WORD PTR [esi-0x23]
  4227ed:	stos   BYTE PTR es:[edi],al
  4227ee:	loopne 0x422863
  4227f0:	aas    
  4227f1:	mov    edi,0xe7d59890
  4227f6:	pusha  
  4227f7:	sbb    DWORD PTR [ecx+0x2511b9d7],edx
  4227fd:	sbb    al,0x6a
  4227ff:	jecxz  0x4227a2
  422801:	mov    ebp,0xfde7ddfc
  422806:	stc    
  422807:	mov    ebp,0xe3ba675d
  42280c:	out    dx,al
  42280d:	ins    BYTE PTR es:[edi],dx
  42280e:	stos   BYTE PTR es:[edi],al
  42280f:	mov    esp,0xdd563f68
  422814:	and    ch,cl
  422816:	fcomp  QWORD PTR [ebp+0x5f]
  422819:	or     BYTE PTR [ebp+0x12],bh
  42281c:	cwde   
  42281d:	pop    ebx
  42281e:	shl    BYTE PTR [ebx-0x7b292b96],1
  422824:	iret   
  422825:	and    ecx,DWORD PTR [edi+0x20]
  422828:	mov    ds:0x8d469d05,al
  42282d:	xchg   edx,eax
  42282e:	cmp    al,0xe3
  422830:	in     eax,0x83
  422832:	jge    0x422834
  422834:	xchg   DWORD PTR [edi-0x4c],ecx
  422837:	adc    eax,0x696067b3
  42283c:	scas   eax,DWORD PTR es:[edi]
  42283d:	mov    ds:0x4457fb1a,eax
  422842:	icebp  
  422843:	cdq    
  422844:	mul    DWORD PTR [ecx+0x7f92474d]
  42284a:	dec    edx
  42284b:	retf   0x8187
  42284e:	dec    ecx
  42284f:	xor    DWORD PTR gs:[eax+eax*1-0xbd47fa5],0xd7d01758
  42285b:	pop    es
  42285c:	inc    ecx
  42285d:	mov    dh,0x65
  42285f:	popa   
  422860:	mov    ?,WORD PTR [ebx-0x17]
  422863:	out    0xe2,al
  422865:	loopne 0x422868
  422867:	in     al,0xe2
  422869:	lock int3 
  42286b:	imul   edx,DWORD PTR [edi],0xcc0fb6ca
  422871:	or     BYTE PTR [edi],bl
  422873:	xchg   BYTE PTR [edi+0x39b826b8],bh
  422879:	inc    edx
  42287a:	mov    dh,0x58
  42287c:	mov    al,0x58
  42287e:	int3   
  42287f:	xor    esi,esi
  422881:	dec    edx
  422882:	call   0x6f4bb1f2
  422887:	pop    eax
  422888:	push   edx
  422889:	xchg   BYTE PTR [ebp-0x141cad49],cl
  42288f:	ror    BYTE PTR [ebp-0x23],1
  422892:	jns    0x422903
  422894:	imul   ebx,DWORD PTR [esi+0x65],0xffffffcc
  422898:	pop    eax
  422899:	and    eax,0x4fdc1947
  42289e:	push   es
  42289f:	dec    ebx
  4228a0:	mov    ebx,0x68456b15
  4228a5:	jmp    0xc21a:0x781c2922
  4228ac:	retf   
  4228ad:	fmulp  st(7),st
  4228af:	sbb    esp,edi
  4228b1:	aad    0xc2
  4228b3:	ja     0x422877
  4228b5:	mov    ds:0x5571caff,eax
  4228ba:	bndldx (bad),[ecx+0x45d5533a]
  4228c1:	sbb    BYTE PTR fs:[ebp+0xc],al
  4228c5:	add    BYTE PTR [ecx+0x6a90c081],dh
  4228cb:	xchg   BYTE PTR gs:[ebp+0x3b],bl
  4228cf:	adc    BYTE PTR [esi-0x144d443f],bh
  4228d5:	lds    edx,FWORD PTR [eax-0x61]
  4228d8:	adc    BYTE PTR [ebx-0x1e],dl
  4228db:	sub    ebp,DWORD PTR gs:[ebp+0x7cad594c]
  4228e2:	jle    0x422869
  4228e4:	(bad)  
  4228e5:	mov    edx,0xbdee99eb
  4228ea:	dec    edi
  4228eb:	or     ebp,eax
  4228ed:	sti    
  4228ee:	aad    0x8b
  4228f0:	test   DWORD PTR [ecx+0x61],esi
  4228f3:	and    esi,DWORD PTR [ebp+0x1f]
  4228f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228f7:	scas   eax,DWORD PTR es:[edi]
  4228f8:	and    eax,0x3414a3b0
  4228fd:	inc    edi
  4228fe:	fnstsw WORD PTR [ecx]
  422900:	or     BYTE PTR [ebp+0x3c],0x64
  422904:	adc    DWORD PTR [esi-0x2b],ecx
  422907:	loop   0x422974
  422909:	sub    ch,cl
  42290b:	test   al,0xdf
  42290d:	and    eax,0xa7e7bf8a
  422912:	ja     0x422951
  422914:	ss xchg edi,eax
  422916:	out    dx,eax
  422917:	adc    dl,BYTE PTR [esi+0x52]
  42291a:	or     al,0x75
  42291c:	jne    0x422993
  42291e:	add    ah,BYTE PTR [ecx+0x21e5306f]
  422924:	not    BYTE PTR [ebp+0x53]
  422927:	push   0xffffffe4
  422929:	fiadd  WORD PTR gs:[eax+0xcf189a4]
  422930:	inc    ebp
  422931:	popf   
  422932:	xlat   BYTE PTR ds:[ebx]
  422933:	add    al,0x2b
  422935:	mov    ah,0x2a
  422937:	or     BYTE PTR [edi+0x4d5f31d4],0x9f
  42293e:	mov    dl,0x16
  422940:	jge    0x422963
  422942:	or     eax,0x3a0a13ae
  422947:	inc    ecx
  422948:	xchg   BYTE PTR [ecx+0x16],al
  42294b:	or     al,0x2e
  42294d:	sub    BYTE PTR [edi+ebx*1-0x1dc1e711],cl
  422954:	xchg   ebp,eax
  422955:	psubd  mm6,QWORD PTR [esi]
  422958:	sti    
  422959:	sti    
  42295a:	ret    0x9787
  42295d:	push   esp
  42295e:	int    0x51
  422960:	std    
  422961:	clc    
  422962:	sbb    al,0xf0
  422964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422965:	inc    ebp
  422966:	jb     0x422991
  422968:	inc    esp
  422969:	add    al,0x0
  42296c:	inc    edi
  42296d:	outs   dx,DWORD PTR ds:[esi]
  42296e:	pop    edx
  42296f:	pop    edi
  422970:	lods   eax,DWORD PTR fs:[esi]
  422972:	adc    al,0x8d
  422974:	lods   al,BYTE PTR ds:[esi]
  422975:	and    al,0x13
  422977:	retf   
  422978:	inc    eax
  422979:	and    BYTE PTR [ebx+0x6fc26bf],ch
  42297f:	push   ds
  422980:	mov    eax,ds:0x59908e16
  422985:	xchg   ebp,eax
  422986:	jle    0x42297d
  422988:	shl    BYTE PTR [ebx],cl
  42298a:	mov    al,ds:0xfcca21ab
  42298f:	shl    eax,cl
  422991:	jns    0x4229d3
  422993:	push   ebx
  422994:	mov    BYTE PTR [edx+0x6e],dl
  422997:	push   esi
  422998:	inc    edi
  422999:	dec    esi
  42299a:	rol    BYTE PTR [ebx-0x28],cl
  42299d:	jmp    0x4229a1
  42299f:	sbb    edx,0x44c11b20
  4229a5:	push   ds
  4229a6:	jmp    0x92403d95
  4229ab:	mov    esi,0x800f87e7
  4229b0:	xlat   BYTE PTR ds:[ebx]
  4229b1:	dec    ebp
  4229b2:	jmp    0x4229b3
  4229b4:	cdq    
  4229b5:	adc    BYTE PTR [ebx+edx*2],dh
  4229b8:	inc    edi
  4229b9:	call   0x3ca1:0x3def4e6
  4229c0:	or     al,BYTE PTR [ebx]
  4229c2:	jmp    0x42295b
  4229c4:	int    0x4c
  4229c6:	jne    0x422a1e
  4229c8:	shl    BYTE PTR [eax-0x2c227124],1
  4229ce:	cmp    al,0x1d
  4229d0:	ret    
  4229d1:	into   
  4229d2:	inc    ebp
  4229d3:	stos   DWORD PTR es:[edi],eax
  4229d4:	(bad)  
  4229d5:	or     al,0x53
  4229d7:	and    dl,BYTE PTR [ebx+0x586a7bd6]
  4229dd:	out    dx,al
  4229de:	adc    cl,BYTE PTR [eax+0x4b4381f8]
  4229e4:	scas   al,BYTE PTR es:[edi]
  4229e5:	imul   eax,DWORD PTR [esp+esi*1+0x76],0x17
  4229ea:	push   esp
  4229eb:	xor    BYTE PTR [ebx],al
  4229ed:	out    0xa7,eax
  4229ef:	repz js 0x422a5c
  4229f2:	add    bh,bh
  4229f4:	adc    eax,0x428134
  4229f9:	push   0x0
  4229fb:	push   0x0
  4229fd:	push   0x100000
  422a02:	call   DWORD PTR ds:0x42802c
  422a08:	xor    eax,eax
  422a0a:	add    esp,0x10
  422a0d:	ret    0x10
  422a10:	jmp    DWORD PTR ds:0x428118
  422a16:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a1d:	jne    0x422a24
  422a1f:	call   0x422f62
  422a24:	push   DWORD PTR [esp+0x4]
  422a28:	call   0x422deb
  422a2d:	push   0xff
  422a32:	call   DWORD PTR ds:0x4653e8
  422a38:	pop    ecx
  422a39:	pop    ecx
  422a3a:	ret    
  422a3b:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a42:	jne    0x422a49
  422a44:	call   0x422f62
  422a49:	push   DWORD PTR [esp+0x4]
  422a4d:	call   0x422deb
  422a52:	push   0xff
  422a57:	call   0x422c31
  422a5c:	pop    ecx
  422a5d:	pop    ecx
  422a5e:	ret    
  422a5f:	push   0x60
  422a61:	push   0x428160
  422a66:	call   0x423950
  422a6b:	mov    edi,0x94
  422a70:	mov    eax,edi
  422a72:	call   0x4239a0
  422a77:	mov    DWORD PTR [ebp-0x18],esp
  422a7a:	mov    esi,esp
  422a7c:	mov    DWORD PTR [esi],edi
  422a7e:	push   esi
  422a7f:	call   DWORD PTR ds:0x428064
  422a85:	mov    ecx,DWORD PTR [esi+0x10]
  422a88:	mov    DWORD PTR ds:0x465d04,ecx
  422a8e:	mov    eax,DWORD PTR [esi+0x4]
  422a91:	mov    ds:0x465d10,eax
  422a96:	mov    edx,DWORD PTR [esi+0x8]
  422a99:	mov    DWORD PTR ds:0x465d14,edx
  422a9f:	mov    esi,DWORD PTR [esi+0xc]
  422aa2:	and    esi,0x7fff
  422aa8:	mov    DWORD PTR ds:0x465d08,esi
  422aae:	cmp    ecx,0x2
  422ab1:	je     0x422abf
  422ab3:	or     esi,0x8000
  422ab9:	mov    DWORD PTR ds:0x465d08,esi
  422abf:	shl    eax,0x8
  422ac2:	add    eax,edx
  422ac4:	mov    ds:0x465d0c,eax
  422ac9:	xor    esi,esi
  422acb:	push   esi
  422acc:	mov    edi,DWORD PTR ds:0x428044
  422ad2:	call   edi
  422ad4:	cmp    WORD PTR [eax],0x5a4d
  422ad9:	jne    0x422afa
  422adb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ade:	add    ecx,eax
  422ae0:	cmp    DWORD PTR [ecx],0x4550
  422ae6:	jne    0x422afa
  422ae8:	movzx  eax,WORD PTR [ecx+0x18]
  422aec:	cmp    eax,0x10b
  422af1:	je     0x422b12
  422af3:	cmp    eax,0x20b
  422af8:	je     0x422aff
  422afa:	mov    DWORD PTR [ebp-0x1c],esi
  422afd:	jmp    0x422b26
  422aff:	cmp    DWORD PTR [ecx+0x84],0xe
  422b06:	jbe    0x422afa
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xf8],esi
  422b10:	jmp    0x422b20
  422b12:	cmp    DWORD PTR [ecx+0x74],0xe
  422b16:	jbe    0x422afa
  422b18:	xor    eax,eax
  422b1a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b20:	setne  al
  422b23:	mov    DWORD PTR [ebp-0x1c],eax
  422b26:	push   0x1
  422b28:	call   0x4238fd
  422b2d:	pop    ecx
  422b2e:	test   eax,eax
  422b30:	jne    0x422b3a
  422b32:	push   0x1c
  422b34:	call   0x422a3b
  422b39:	pop    ecx
  422b3a:	call   0x423874
  422b3f:	test   eax,eax
  422b41:	jne    0x422b4b
  422b43:	push   0x10
  422b45:	call   0x422a3b
  422b4a:	pop    ecx
  422b4b:	call   0x42375d
  422b50:	mov    DWORD PTR [ebp-0x4],esi
  422b53:	call   0x42355f
  422b58:	test   eax,eax
  422b5a:	jge    0x422b64
  422b5c:	push   0x1b
  422b5e:	call   0x422a16
  422b63:	pop    ecx
  422b64:	call   DWORD PTR ds:0x428060
  422b6a:	mov    ds:0x4664b4,eax
  422b6f:	call   0x42343d
  422b74:	mov    ds:0x465cf4,eax
  422b79:	call   0x42339b
  422b7e:	test   eax,eax
  422b80:	jge    0x422b8a
  422b82:	push   0x8
  422b84:	call   0x422a16
  422b89:	pop    ecx
  422b8a:	call   0x423168
  422b8f:	test   eax,eax
  422b91:	jge    0x422b9b
  422b93:	push   0x9
  422b95:	call   0x422a16
  422b9a:	pop    ecx
  422b9b:	call   0x422c73
  422ba0:	mov    DWORD PTR [ebp-0x20],eax
  422ba3:	cmp    eax,esi
  422ba5:	je     0x422bae
  422ba7:	push   eax
  422ba8:	call   0x422a16
  422bad:	pop    ecx
  422bae:	mov    DWORD PTR [ebp-0x38],esi
  422bb1:	lea    eax,[ebp-0x64]
  422bb4:	push   eax
  422bb5:	call   DWORD PTR ds:0x42805c
  422bbb:	call   0x4230ff
  422bc0:	mov    DWORD PTR [ebp-0x68],eax
  422bc3:	test   BYTE PTR [ebp-0x38],0x1
  422bc7:	je     0x422bcf
  422bc9:	movzx  eax,WORD PTR [ebp-0x34]
  422bcd:	jmp    0x422bd2
  422bcf:	push   0xa
  422bd1:	pop    eax
  422bd2:	push   eax
  422bd3:	push   DWORD PTR [ebp-0x68]
  422bd6:	push   esi
  422bd7:	push   esi
  422bd8:	call   edi
  422bda:	push   eax
  422bdb:	call   0x421880
  422be0:	mov    edi,eax
  422be2:	mov    DWORD PTR [ebp-0x6c],edi
  422be5:	cmp    DWORD PTR [ebp-0x1c],esi
  422be8:	jne    0x422bf0
  422bea:	push   edi
  422beb:	call   0x422dab
  422bf0:	call   0x422dcd
  422bf5:	jmp    0x422c22
  422bf7:	mov    eax,DWORD PTR [ebp-0x14]
  422bfa:	mov    ecx,DWORD PTR [eax]
  422bfc:	mov    ecx,DWORD PTR [ecx]
  422bfe:	mov    DWORD PTR [ebp-0x70],ecx
  422c01:	push   eax
  422c02:	push   ecx
  422c03:	call   0x422f9b
  422c08:	pop    ecx
  422c09:	pop    ecx
  422c0a:	ret    
  422c0b:	mov    esp,DWORD PTR [ebp-0x18]
  422c0e:	mov    edi,DWORD PTR [ebp-0x70]
  422c11:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c15:	jne    0x422c1d
  422c17:	push   edi
  422c18:	call   0x422dbc
  422c1d:	call   0x422ddc
  422c22:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c26:	mov    eax,edi
  422c28:	lea    esp,[ebp-0x7c]
  422c2b:	call   0x42398b
  422c30:	ret    
  422c31:	push   0x42817c
  422c36:	call   DWORD PTR ds:0x428044
  422c3c:	test   eax,eax
  422c3e:	je     0x422c56
  422c40:	push   0x42816c
  422c45:	push   eax
  422c46:	call   DWORD PTR ds:0x428040
  422c4c:	test   eax,eax
  422c4e:	je     0x422c56
  422c50:	push   DWORD PTR [esp+0x4]
  422c54:	call   eax
  422c56:	push   DWORD PTR [esp+0x4]
  422c5a:	call   DWORD PTR ds:0x428068
  422c60:	int3   
  422c61:	push   0x8
  422c63:	call   0x423b0f
  422c68:	pop    ecx
  422c69:	ret    
  422c6a:	push   0x8
  422c6c:	call   0x423a7b
  422c71:	pop    ecx
  422c72:	ret    
  422c73:	mov    eax,ds:0x4664b0
  422c78:	test   eax,eax
  422c7a:	je     0x422c7e
  422c7c:	call   eax
  422c7e:	push   esi
  422c7f:	push   edi
  422c80:	mov    ecx,0x42a00c
  422c85:	mov    edi,0x42a018
  422c8a:	xor    eax,eax
  422c8c:	cmp    ecx,edi
  422c8e:	mov    esi,ecx
  422c90:	jae    0x422ca9
  422c92:	test   eax,eax
  422c94:	jne    0x422cd5
  422c96:	mov    ecx,DWORD PTR [esi]
  422c98:	test   ecx,ecx
  422c9a:	je     0x422c9e
  422c9c:	call   ecx
  422c9e:	add    esi,0x4
  422ca1:	cmp    esi,edi
  422ca3:	jb     0x422c92
  422ca5:	test   eax,eax
  422ca7:	jne    0x422cd5
  422ca9:	push   0x4237a1
  422cae:	call   0x423c20
  422cb3:	mov    esi,0x42a000
  422cb8:	mov    eax,esi
  422cba:	mov    edi,0x42a008
  422cbf:	cmp    eax,edi
  422cc1:	pop    ecx
  422cc2:	jae    0x422cd3
  422cc4:	mov    eax,DWORD PTR [esi]
  422cc6:	test   eax,eax
  422cc8:	je     0x422ccc
  422cca:	call   eax
  422ccc:	add    esi,0x4
  422ccf:	cmp    esi,edi
  422cd1:	jb     0x422cc4
  422cd3:	xor    eax,eax
  422cd5:	pop    edi
  422cd6:	pop    esi
  422cd7:	ret    
  422cd8:	push   ebp
  422cd9:	mov    ebp,esp
  422cdb:	push   esi
  422cdc:	push   edi
  422cdd:	push   0x8
  422cdf:	call   0x423b0f
  422ce4:	xor    esi,esi
  422ce6:	inc    esi
  422ce7:	cmp    DWORD PTR ds:0x465d44,esi
  422ced:	pop    ecx
  422cee:	jne    0x422d00
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	call   DWORD PTR ds:0x428070
  422cf9:	push   eax
  422cfa:	call   DWORD PTR ds:0x42806c
  422d00:	cmp    DWORD PTR [ebp+0xc],0x0
  422d04:	mov    al,BYTE PTR [ebp+0x10]
  422d07:	mov    DWORD PTR ds:0x465d40,esi
  422d0d:	mov    ds:0x465d3c,al
  422d12:	jne    0x422d66
  422d14:	mov    ecx,DWORD PTR ds:0x4664a8
  422d1a:	test   ecx,ecx
  422d1c:	je     0x422d47
  422d1e:	mov    eax,ds:0x4664a4
  422d23:	sub    eax,0x4
  422d26:	cmp    eax,ecx
  422d28:	jmp    0x422d40
  422d2a:	mov    eax,DWORD PTR [eax]
  422d2c:	test   eax,eax
  422d2e:	je     0x422d32
  422d30:	call   eax
  422d32:	mov    eax,ds:0x4664a4
  422d37:	sub    eax,0x4
  422d3a:	cmp    eax,DWORD PTR ds:0x4664a8
  422d40:	mov    ds:0x4664a4,eax
  422d45:	jae    0x422d2a
  422d47:	mov    eax,0x42a01c
  422d4c:	mov    esi,0x42a020
  422d51:	cmp    eax,esi
  422d53:	mov    edi,eax
  422d55:	jae    0x422d66
  422d57:	mov    eax,DWORD PTR [edi]
  422d59:	test   eax,eax
  422d5b:	je     0x422d5f
  422d5d:	call   eax
  422d5f:	add    edi,0x4
  422d62:	cmp    edi,esi
  422d64:	jb     0x422d57
  422d66:	mov    eax,0x42a024
  422d6b:	mov    esi,0x42a028
  422d70:	cmp    eax,esi
  422d72:	mov    edi,eax
  422d74:	jae    0x422d85
  422d76:	mov    eax,DWORD PTR [edi]
  422d78:	test   eax,eax
  422d7a:	je     0x422d7e
  422d7c:	call   eax
  422d7e:	add    edi,0x4
  422d81:	cmp    edi,esi
  422d83:	jb     0x422d76
  422d85:	cmp    DWORD PTR [ebp+0x10],0x0
  422d89:	pop    edi
  422d8a:	pop    esi
  422d8b:	je     0x422d96
  422d8d:	push   0x8
  422d8f:	call   0x423a7b
  422d94:	jmp    0x422da8
  422d96:	push   DWORD PTR [ebp+0x8]
  422d99:	mov    DWORD PTR ds:0x465d44,0x1
  422da3:	call   0x422c31
  422da8:	pop    ecx
  422da9:	pop    ebp
  422daa:	ret    
  422dab:	push   0x0
  422dad:	push   0x0
  422daf:	push   DWORD PTR [esp+0xc]
  422db3:	call   0x422cd8
  422db8:	add    esp,0xc
  422dbb:	ret    
  422dbc:	push   0x0
  422dbe:	push   0x1
  422dc0:	push   DWORD PTR [esp+0xc]
  422dc4:	call   0x422cd8
  422dc9:	add    esp,0xc
  422dcc:	ret    
  422dcd:	push   0x1
  422dcf:	push   0x0
  422dd1:	push   0x0
  422dd3:	call   0x422cd8
  422dd8:	add    esp,0xc
  422ddb:	ret    
  422ddc:	push   0x1
  422dde:	push   0x1
  422de0:	push   0x0
  422de2:	call   0x422cd8
  422de7:	add    esp,0xc
  422dea:	ret    
  422deb:	push   ebp
  422dec:	mov    ebp,esp
  422dee:	sub    esp,0x10c
  422df4:	mov    eax,ds:0x465660
  422df9:	xor    eax,DWORD PTR [ebp+0x4]
  422dfc:	mov    ecx,DWORD PTR [ebp+0x8]
  422dff:	push   ebx
  422e00:	push   esi
  422e01:	mov    DWORD PTR [ebp-0x4],eax
  422e04:	xor    edx,edx
  422e06:	push   edi
  422e07:	xor    eax,eax
  422e09:	cmp    ecx,DWORD PTR [eax*8+0x4653f0]
  422e10:	je     0x422e18
  422e12:	inc    eax
  422e13:	cmp    eax,0x12
  422e16:	jb     0x422e09
  422e18:	mov    esi,eax
  422e1a:	shl    esi,0x3
  422e1d:	cmp    ecx,DWORD PTR [esi+0x4653f0]
  422e23:	jne    0x422f4c
  422e29:	mov    eax,ds:0x465cfc
  422e2e:	cmp    eax,0x1
  422e31:	je     0x422f27
  422e37:	cmp    eax,edx
  422e39:	jne    0x422e48
  422e3b:	cmp    DWORD PTR ds:0x4653ec,0x1
  422e42:	je     0x422f27
  422e48:	cmp    ecx,0xfc
  422e4e:	je     0x422f4c
  422e54:	push   0x104
  422e59:	lea    eax,[ebp-0x10c]
  422e5f:	push   eax
  422e60:	push   edx
  422e61:	mov    BYTE PTR [ebp-0x8],dl
  422e64:	call   DWORD PTR ds:0x42807c
  422e6a:	test   eax,eax
  422e6c:	jne    0x422e81
  422e6e:	lea    eax,[ebp-0x10c]
  422e74:	push   0x4284d4
  422e79:	push   eax
  422e7a:	call   0x423d30
  422e7f:	pop    ecx
  422e80:	pop    ecx
  422e81:	lea    eax,[ebp-0x10c]
  422e87:	push   eax
  422e88:	lea    edi,[ebp-0x10c]
  422e8e:	call   0x423f60
  422e93:	inc    eax
  422e94:	cmp    eax,0x3c
  422e97:	pop    ecx
  422e98:	jbe    0x422ec3
  422e9a:	lea    eax,[ebp-0x10c]
  422ea0:	push   eax
  422ea1:	call   0x423f60
  422ea6:	mov    edi,eax
  422ea8:	lea    eax,[ebp-0x10c]
  422eae:	sub    eax,0x3b
  422eb1:	push   0x3
  422eb3:	add    edi,eax
  422eb5:	push   0x4284d0
  422eba:	push   edi
  422ebb:	call   0x423e30
  422ec0:	add    esp,0x10
  422ec3:	push   edi
  422ec4:	call   0x423f60
  422ec9:	push   DWORD PTR [esi+0x4653f4]
  422ecf:	mov    ebx,eax
  422ed1:	call   0x423f60
  422ed6:	lea    eax,[ebx+eax*1+0x1c]
  422eda:	pop    ecx
  422edb:	add    eax,0x3
  422ede:	pop    ecx
  422edf:	and    eax,0xfffffffc
  422ee2:	call   0x4239a0
  422ee7:	mov    ebx,esp
  422ee9:	push   0x4284b4
  422eee:	push   ebx
  422eef:	call   0x423d30
  422ef4:	push   edi
  422ef5:	push   ebx
  422ef6:	call   0x423d40
  422efb:	push   0x4284b0
  422f00:	push   ebx
  422f01:	call   0x423d40
  422f06:	push   DWORD PTR [esi+0x4653f4]
  422f0c:	push   ebx
  422f0d:	call   0x423d40
  422f12:	push   0x12010
  422f17:	push   0x428488
  422f1c:	push   ebx
  422f1d:	call   0x423c32
  422f22:	add    esp,0x2c
  422f25:	jmp    0x422f4c
  422f27:	push   edx
  422f28:	lea    eax,[ebp+0x8]
  422f2b:	push   eax
  422f2c:	lea    esi,[esi+0x4653f4]
  422f32:	push   DWORD PTR [esi]
  422f34:	call   0x423f60
  422f39:	pop    ecx
  422f3a:	push   eax
  422f3b:	push   DWORD PTR [esi]
  422f3d:	push   0xfffffff4
  422f3f:	call   DWORD PTR ds:0x428078
  422f45:	push   eax
  422f46:	call   DWORD PTR ds:0x428074
  422f4c:	lea    esp,[ebp-0x118]
  422f52:	mov    ecx,DWORD PTR [ebp-0x4]
  422f55:	xor    ecx,DWORD PTR [ebp+0x4]
  422f58:	call   0x42401c
  422f5d:	pop    edi
  422f5e:	pop    esi
  422f5f:	pop    ebx
  422f60:	leave  
  422f61:	ret    
  422f62:	mov    eax,ds:0x465cfc
  422f67:	cmp    eax,0x1
  422f6a:	je     0x422f79
  422f6c:	test   eax,eax
  422f6e:	jne    0x422f9a
  422f70:	cmp    DWORD PTR ds:0x4653ec,0x1
  422f77:	jne    0x422f9a
  422f79:	push   0xfc
  422f7e:	call   0x422deb
  422f83:	mov    eax,ds:0x465d48
  422f88:	test   eax,eax
  422f8a:	pop    ecx
  422f8b:	je     0x422f8f
  422f8d:	call   eax
  422f8f:	push   0xff
  422f94:	call   0x422deb
  422f99:	pop    ecx
  422f9a:	ret    
  422f9b:	push   ebp
  422f9c:	mov    ebp,esp
  422f9e:	push   ecx
  422f9f:	push   ebx
  422fa0:	push   esi
  422fa1:	push   edi
  422fa2:	call   0x423803
  422fa7:	mov    edi,DWORD PTR [ebp+0x8]
  422faa:	mov    esi,eax
  422fac:	mov    edx,DWORD PTR [esi+0x54]
  422faf:	mov    eax,ds:0x465504
  422fb4:	mov    ecx,edx
  422fb6:	cmp    DWORD PTR [ecx],edi
  422fb8:	je     0x422fc7
  422fba:	lea    ebx,[eax+eax*2]
  422fbd:	add    ecx,0xc
  422fc0:	lea    ebx,[edx+ebx*4]
  422fc3:	cmp    ecx,ebx
  422fc5:	jb     0x422fb6
  422fc7:	lea    eax,[eax+eax*2]
  422fca:	lea    eax,[edx+eax*4]
  422fcd:	cmp    ecx,eax
  422fcf:	jae    0x422fd5
  422fd1:	cmp    DWORD PTR [ecx],edi
  422fd3:	je     0x422fd7
  422fd5:	xor    ecx,ecx
  422fd7:	test   ecx,ecx
  422fd9:	je     0x4230f1
  422fdf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fe2:	test   ebx,ebx
  422fe4:	mov    DWORD PTR [ebp+0x8],ebx
  422fe7:	je     0x4230f1
  422fed:	cmp    ebx,0x5
  422ff0:	jne    0x422ffe
  422ff2:	and    DWORD PTR [ecx+0x8],0x0
  422ff6:	xor    eax,eax
  422ff8:	inc    eax
  422ff9:	jmp    0x4230fa
  422ffe:	cmp    ebx,0x1
  423001:	je     0x4230ec
  423007:	mov    eax,DWORD PTR [esi+0x58]
  42300a:	mov    DWORD PTR [ebp-0x4],eax
  42300d:	mov    eax,DWORD PTR [ebp+0xc]
  423010:	mov    DWORD PTR [esi+0x58],eax
  423013:	mov    eax,DWORD PTR [ecx+0x4]
  423016:	cmp    eax,0x8
  423019:	jne    0x4230de
  42301f:	mov    edx,DWORD PTR ds:0x4654f8
  423025:	mov    eax,ds:0x4654fc
  42302a:	add    eax,edx
  42302c:	cmp    edx,eax
  42302e:	jge    0x423057
  423030:	lea    eax,[edx+edx*2]
  423033:	shl    eax,0x2
  423036:	mov    edi,DWORD PTR [esi+0x54]
  423039:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42303e:	mov    edi,DWORD PTR ds:0x4654f8
  423044:	mov    ebx,DWORD PTR ds:0x4654fc
  42304a:	inc    edx
  42304b:	add    ebx,edi
  42304d:	add    eax,0xc
  423050:	cmp    edx,ebx
  423052:	jl     0x423036
  423054:	mov    ebx,DWORD PTR [ebp+0x8]
  423057:	mov    ecx,DWORD PTR [ecx]
  423059:	cmp    ecx,0xc000008e
  42305f:	mov    edi,DWORD PTR [esi+0x5c]
  423062:	jne    0x42306d
  423064:	mov    DWORD PTR [esi+0x5c],0x83
  42306b:	jmp    0x4230d1
  42306d:	cmp    ecx,0xc0000090
  423073:	jne    0x42307e
  423075:	mov    DWORD PTR [esi+0x5c],0x81
  42307c:	jmp    0x4230d1
  42307e:	cmp    ecx,0xc0000091
  423084:	jne    0x42308f
  423086:	mov    DWORD PTR [esi+0x5c],0x84
  42308d:	jmp    0x4230d1
  42308f:	cmp    ecx,0xc0000093
  423095:	jne    0x4230a0
  423097:	mov    DWORD PTR [esi+0x5c],0x85
  42309e:	jmp    0x4230d1
  4230a0:	cmp    ecx,0xc000008d
  4230a6:	jne    0x4230b1
  4230a8:	mov    DWORD PTR [esi+0x5c],0x82
  4230af:	jmp    0x4230d1
  4230b1:	cmp    ecx,0xc000008f
  4230b7:	jne    0x4230c2
  4230b9:	mov    DWORD PTR [esi+0x5c],0x86
  4230c0:	jmp    0x4230d1
  4230c2:	cmp    ecx,0xc0000092
  4230c8:	jne    0x4230d1
  4230ca:	mov    DWORD PTR [esi+0x5c],0x8a
  4230d1:	push   DWORD PTR [esi+0x5c]
  4230d4:	push   0x8
  4230d6:	call   ebx
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x5c],edi
  4230dc:	jmp    0x4230e5
  4230de:	and    DWORD PTR [ecx+0x8],0x0
  4230e2:	push   eax
  4230e3:	call   ebx
  4230e5:	mov    eax,DWORD PTR [ebp-0x4]
  4230e8:	pop    ecx
  4230e9:	mov    DWORD PTR [esi+0x58],eax
  4230ec:	or     eax,0xffffffff
  4230ef:	jmp    0x4230fa
  4230f1:	push   DWORD PTR [ebp+0xc]
  4230f4:	call   DWORD PTR ds:0x428080
  4230fa:	pop    edi
  4230fb:	pop    esi
  4230fc:	pop    ebx
  4230fd:	leave  
  4230fe:	ret    
  4230ff:	cmp    DWORD PTR ds:0x4664ac,0x0
  423106:	jne    0x42310d
  423108:	call   0x42453c
  42310d:	push   esi
  42310e:	mov    esi,DWORD PTR ds:0x4664b4
  423114:	test   esi,esi
  423116:	jne    0x42311f
  423118:	mov    esi,0x4284eb
  42311d:	jmp    0x423164
  42311f:	mov    al,BYTE PTR [esi]
  423121:	cmp    al,0x22
  423123:	jne    0x42314d
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	je     0x42315d
  42312c:	test   al,al
  42312e:	je     0x423146
  423130:	movzx  eax,al
  423133:	push   eax
  423134:	call   0x42405b
  423139:	test   eax,eax
  42313b:	pop    ecx
  42313c:	je     0x42313f
  42313e:	inc    esi
  42313f:	inc    esi
  423140:	mov    al,BYTE PTR [esi]
  423142:	cmp    al,0x22
  423144:	jne    0x42312c
  423146:	cmp    BYTE PTR [esi],0x22
  423149:	jne    0x42315e
  42314b:	jmp    0x42315d
  42314d:	cmp    al,0x20
  42314f:	jbe    0x42315e
  423151:	inc    esi
  423152:	cmp    BYTE PTR [esi],0x20
  423155:	ja     0x423151
  423157:	jmp    0x42315e
  423159:	cmp    al,0x20
  42315b:	ja     0x423164
  42315d:	inc    esi
  42315e:	mov    al,BYTE PTR [esi]
  423160:	test   al,al
  423162:	jne    0x423159
  423164:	mov    eax,esi
  423166:	pop    esi
  423167:	ret    
  423168:	push   ebx
  423169:	xor    ebx,ebx
  42316b:	cmp    DWORD PTR ds:0x4664ac,ebx
  423171:	push   esi
  423172:	push   edi
  423173:	jne    0x42317a
  423175:	call   0x42453c
  42317a:	mov    esi,DWORD PTR ds:0x465cf4
  423180:	xor    edi,edi
  423182:	cmp    esi,ebx
  423184:	jne    0x423198
  423186:	jmp    0x4231b8
  423188:	cmp    al,0x3d
  42318a:	je     0x42318d
  42318c:	inc    edi
  42318d:	push   esi
  42318e:	call   0x423f60
  423193:	pop    ecx
  423194:	lea    esi,[esi+eax*1+0x1]
  423198:	mov    al,BYTE PTR [esi]
  42319a:	cmp    al,bl
  42319c:	jne    0x423188
  42319e:	lea    eax,[edi*4+0x4]
  4231a5:	push   eax
  4231a6:	call   0x424672
  4231ab:	mov    edi,eax
  4231ad:	cmp    edi,ebx
  4231af:	pop    ecx
  4231b0:	mov    DWORD PTR ds:0x465d24,edi
  4231b6:	jne    0x4231bd
  4231b8:	or     eax,0xffffffff
  4231bb:	jmp    0x423215
  4231bd:	mov    esi,DWORD PTR ds:0x465cf4
  4231c3:	push   ebp
  4231c4:	jmp    0x4231f0
  4231c6:	push   esi
  4231c7:	call   0x423f60
  4231cc:	mov    ebp,eax
  4231ce:	inc    ebp
  4231cf:	cmp    BYTE PTR [esi],0x3d
  4231d2:	pop    ecx
  4231d3:	je     0x4231ee
  4231d5:	push   ebp
  4231d6:	call   0x424672
  4231db:	cmp    eax,ebx
  4231dd:	pop    ecx
  4231de:	mov    DWORD PTR [edi],eax
  4231e0:	je     0x423219
  4231e2:	push   esi
  4231e3:	push   eax
  4231e4:	call   0x423d30
  4231e9:	pop    ecx
  4231ea:	pop    ecx
  4231eb:	add    edi,0x4
  4231ee:	add    esi,ebp
  4231f0:	cmp    BYTE PTR [esi],bl
  4231f2:	jne    0x4231c6
  4231f4:	push   DWORD PTR ds:0x465cf4
  4231fa:	call   0x42455a
  4231ff:	mov    DWORD PTR ds:0x465cf4,ebx
  423205:	mov    DWORD PTR [edi],ebx
  423207:	mov    DWORD PTR ds:0x4664a0,0x1
  423211:	xor    eax,eax
  423213:	pop    ecx
  423214:	pop    ebp
  423215:	pop    edi
  423216:	pop    esi
  423217:	pop    ebx
  423218:	ret    
  423219:	push   DWORD PTR ds:0x465d24
  42321f:	call   0x42455a
  423224:	mov    DWORD PTR ds:0x465d24,ebx
  42322a:	or     eax,0xffffffff
  42322d:	jmp    0x423213
  42322f:	push   ebp
  423230:	mov    ebp,esp
  423232:	push   ecx
  423233:	push   ebx
  423234:	mov    ebx,DWORD PTR [ebp+0xc]
  423237:	xor    edx,edx
  423239:	cmp    DWORD PTR [ebp+0x8],edx
  42323c:	push   edi
  42323d:	mov    DWORD PTR [esi],edx
  42323f:	mov    edi,ecx
  423241:	mov    DWORD PTR [ebx],0x1
  423247:	je     0x423252
  423249:	mov    ecx,DWORD PTR [ebp+0x8]
  42324c:	add    DWORD PTR [ebp+0x8],0x4
  423250:	mov    DWORD PTR [ecx],edi
  423252:	cmp    BYTE PTR [eax],0x22
  423255:	jne    0x423265
  423257:	xor    ecx,ecx
  423259:	test   edx,edx
  42325b:	sete   cl
  42325e:	inc    eax
  42325f:	mov    edx,ecx
  423261:	mov    cl,0x22
  423263:	jmp    0x423292
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    cl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],cl
  42326f:	inc    edi
  423270:	mov    cl,BYTE PTR [eax]
  423272:	movzx  ebx,cl
  423275:	inc    eax
  423276:	test   BYTE PTR [ebx+0x466161],0x4
  42327d:	je     0x42328b
  42327f:	inc    DWORD PTR [esi]
  423281:	test   edi,edi
  423283:	je     0x42328a
  423285:	mov    bl,BYTE PTR [eax]
  423287:	mov    BYTE PTR [edi],bl
  423289:	inc    edi
  42328a:	inc    eax
  42328b:	test   cl,cl
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	je     0x4232c4
  423292:	test   edx,edx
  423294:	jne    0x423252
  423296:	cmp    cl,0x20
  423299:	je     0x4232a0
  42329b:	cmp    cl,0x9
  42329e:	jne    0x423252
  4232a0:	test   edi,edi
  4232a2:	je     0x4232a8
  4232a4:	and    BYTE PTR [edi-0x1],0x0
  4232a8:	and    DWORD PTR [ebp-0x4],0x0
  4232ac:	cmp    BYTE PTR [eax],0x0
  4232af:	je     0x42338b
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	cmp    cl,0x20
  4232ba:	je     0x4232c1
  4232bc:	cmp    cl,0x9
  4232bf:	jne    0x4232c7
  4232c1:	inc    eax
  4232c2:	jmp    0x4232b5
  4232c4:	dec    eax
  4232c5:	jmp    0x4232a8
  4232c7:	cmp    BYTE PTR [eax],0x0
  4232ca:	je     0x42338b
  4232d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232d4:	je     0x4232df
  4232d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232d9:	add    DWORD PTR [ebp+0x8],0x4
  4232dd:	mov    DWORD PTR [ecx],edi
  4232df:	inc    DWORD PTR [ebx]
  4232e1:	xor    ebx,ebx
  4232e3:	inc    ebx
  4232e4:	xor    edx,edx
  4232e6:	jmp    0x4232ea
  4232e8:	inc    eax
  4232e9:	inc    edx
  4232ea:	cmp    BYTE PTR [eax],0x5c
  4232ed:	je     0x4232e8
  4232ef:	cmp    BYTE PTR [eax],0x22
  4232f2:	jne    0x42331a
  4232f4:	test   dl,0x1
  4232f7:	jne    0x423318
  4232f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232fd:	je     0x42330b
  4232ff:	lea    ecx,[eax+0x1]
  423302:	cmp    BYTE PTR [ecx],0x22
  423305:	jne    0x42330b
  423307:	mov    eax,ecx
  423309:	jmp    0x42330d
  42330b:	xor    ebx,ebx
  42330d:	xor    ecx,ecx
  42330f:	cmp    DWORD PTR [ebp-0x4],ecx
  423312:	sete   cl
  423315:	mov    DWORD PTR [ebp-0x4],ecx
  423318:	shr    edx,1
  42331a:	test   edx,edx
  42331c:	je     0x42332b
  42331e:	test   edi,edi
  423320:	je     0x423326
  423322:	mov    BYTE PTR [edi],0x5c
  423325:	inc    edi
  423326:	inc    DWORD PTR [esi]
  423328:	dec    edx
  423329:	jne    0x42331e
  42332b:	mov    cl,BYTE PTR [eax]
  42332d:	test   cl,cl
  42332f:	je     0x423379
  423331:	cmp    DWORD PTR [ebp-0x4],0x0
  423335:	jne    0x423341
  423337:	cmp    cl,0x20
  42333a:	je     0x423379
  42333c:	cmp    cl,0x9
  42333f:	je     0x423379
  423341:	test   ebx,ebx
  423343:	je     0x423373
  423345:	test   edi,edi
  423347:	je     0x423362
  423349:	movzx  edx,cl
  42334c:	test   BYTE PTR [edx+0x466161],0x4
  423353:	je     0x42335b
  423355:	mov    BYTE PTR [edi],cl
  423357:	inc    edi
  423358:	inc    eax
  423359:	inc    DWORD PTR [esi]
  42335b:	mov    cl,BYTE PTR [eax]
  42335d:	mov    BYTE PTR [edi],cl
  42335f:	inc    edi
  423360:	jmp    0x423371
  423362:	movzx  ecx,cl
  423365:	test   BYTE PTR [ecx+0x466161],0x4
  42336c:	je     0x423371
  42336e:	inc    eax
  42336f:	inc    DWORD PTR [esi]
  423371:	inc    DWORD PTR [esi]
  423373:	inc    eax
  423374:	jmp    0x4232e1
  423379:	test   edi,edi
  42337b:	je     0x423381
  42337d:	and    BYTE PTR [edi],0x0
  423380:	inc    edi
  423381:	inc    DWORD PTR [esi]
  423383:	mov    ebx,DWORD PTR [ebp+0xc]
  423386:	jmp    0x4232ac
  42338b:	mov    eax,DWORD PTR [ebp+0x8]
  42338e:	test   eax,eax
  423390:	je     0x423395
  423392:	and    DWORD PTR [eax],0x0
  423395:	inc    DWORD PTR [ebx]
  423397:	pop    edi
  423398:	pop    ebx
  423399:	leave  
  42339a:	ret    
  42339b:	push   ebp
  42339c:	mov    ebp,esp
  42339e:	push   ecx
  42339f:	push   ecx
  4233a0:	push   ebx
  4233a1:	push   esi
  4233a2:	push   edi
  4233a3:	xor    edi,edi
  4233a5:	cmp    DWORD PTR ds:0x4664ac,edi
  4233ab:	jne    0x4233b2
  4233ad:	call   0x42453c
  4233b2:	and    BYTE PTR ds:0x465e54,0x0
  4233b9:	push   0x104
  4233be:	mov    esi,0x465d50
  4233c3:	push   esi
  4233c4:	push   edi
  4233c5:	call   DWORD PTR ds:0x42807c
  4233cb:	mov    eax,ds:0x4664b4
  4233d0:	cmp    eax,edi
  4233d2:	mov    DWORD PTR ds:0x465d34,esi
  4233d8:	je     0x4233e1
  4233da:	cmp    BYTE PTR [eax],0x0
  4233dd:	mov    ebx,eax
  4233df:	jne    0x4233e3
  4233e1:	mov    ebx,esi
  4233e3:	lea    eax,[ebp-0x4]
  4233e6:	push   eax
  4233e7:	push   edi
  4233e8:	lea    esi,[ebp-0x8]
  4233eb:	xor    ecx,ecx
  4233ed:	mov    eax,ebx
  4233ef:	call   0x42322f
  4233f4:	mov    esi,DWORD PTR [ebp-0x4]
  4233f7:	mov    eax,DWORD PTR [ebp-0x8]
  4233fa:	shl    esi,0x2
  4233fd:	add    eax,esi
  4233ff:	push   eax
  423400:	call   0x424672
  423405:	mov    edi,eax
  423407:	add    esp,0xc
  42340a:	test   edi,edi
  42340c:	jne    0x423413
  42340e:	or     eax,0xffffffff
  423411:	jmp    0x423438
  423413:	lea    eax,[ebp-0x4]
  423416:	push   eax
  423417:	lea    ecx,[esi+edi*1]
  42341a:	push   edi
  42341b:	lea    esi,[ebp-0x8]
  42341e:	mov    eax,ebx
  423420:	call   0x42322f
  423425:	mov    eax,DWORD PTR [ebp-0x4]
  423428:	dec    eax
  423429:	pop    ecx
  42342a:	mov    ds:0x465d18,eax
  42342f:	pop    ecx
  423430:	mov    DWORD PTR ds:0x465d1c,edi
  423436:	xor    eax,eax
  423438:	pop    edi
  423439:	pop    esi
  42343a:	pop    ebx
  42343b:	leave  
  42343c:	ret    
  42343d:	push   ecx
  42343e:	push   ecx
  42343f:	mov    eax,ds:0x465e58
  423444:	push   ebx
  423445:	push   ebp
  423446:	push   esi
  423447:	push   edi
  423448:	mov    edi,DWORD PTR ds:0x428094
  42344e:	xor    ebx,ebx
  423450:	xor    esi,esi
  423452:	cmp    eax,ebx
  423454:	push   0x2
  423456:	pop    ebp
  423457:	jne    0x423486
  423459:	call   edi
  42345b:	mov    esi,eax
  42345d:	cmp    esi,ebx
  42345f:	je     0x42346d
  423461:	mov    DWORD PTR ds:0x465e58,0x1
  42346b:	jmp    0x42348b
  42346d:	call   DWORD PTR ds:0x42803c
  423473:	cmp    eax,0x78
  423476:	jne    0x423481
  423478:	mov    eax,ebp
  42347a:	mov    ds:0x465e58,eax
  42347f:	jmp    0x423486
  423481:	mov    eax,ds:0x465e58
  423486:	cmp    eax,0x1
  423489:	jne    0x423508
  42348b:	cmp    esi,ebx
  42348d:	jne    0x423497
  42348f:	call   edi
  423491:	mov    esi,eax
  423493:	cmp    esi,ebx
  423495:	je     0x423510
  423497:	cmp    WORD PTR [esi],bx
  42349a:	mov    eax,esi
  42349c:	je     0x4234ac
  42349e:	add    eax,ebp
  4234a0:	cmp    WORD PTR [eax],bx
  4234a3:	jne    0x42349e
  4234a5:	add    eax,ebp
  4234a7:	cmp    WORD PTR [eax],bx
  4234aa:	jne    0x42349e
  4234ac:	mov    edi,DWORD PTR ds:0x428090
  4234b2:	push   ebx
  4234b3:	push   ebx
  4234b4:	push   ebx
  4234b5:	sub    eax,esi
  4234b7:	push   ebx
  4234b8:	sar    eax,1
  4234ba:	inc    eax
  4234bb:	push   eax
  4234bc:	push   esi
  4234bd:	push   ebx
  4234be:	push   ebx
  4234bf:	mov    DWORD PTR [esp+0x34],eax
  4234c3:	call   edi
  4234c5:	mov    ebp,eax
  4234c7:	cmp    ebp,ebx
  4234c9:	je     0x4234fd
  4234cb:	push   ebp
  4234cc:	call   0x424672
  4234d1:	cmp    eax,ebx
  4234d3:	pop    ecx
  4234d4:	mov    DWORD PTR [esp+0x10],eax
  4234d8:	je     0x4234fd
  4234da:	push   ebx
  4234db:	push   ebx
  4234dc:	push   ebp
  4234dd:	push   eax
  4234de:	push   DWORD PTR [esp+0x24]
  4234e2:	push   esi
  4234e3:	push   ebx
  4234e4:	push   ebx
  4234e5:	call   edi
  4234e7:	test   eax,eax
  4234e9:	jne    0x4234f9
  4234eb:	push   DWORD PTR [esp+0x10]
  4234ef:	call   0x42455a
  4234f4:	pop    ecx
  4234f5:	mov    DWORD PTR [esp+0x10],ebx
  4234f9:	mov    ebx,DWORD PTR [esp+0x10]
  4234fd:	push   esi
  4234fe:	call   DWORD PTR ds:0x42808c
  423504:	mov    eax,ebx
  423506:	jmp    0x423558
  423508:	cmp    eax,ebp
  42350a:	je     0x423514
  42350c:	cmp    eax,ebx
  42350e:	je     0x423514
  423510:	xor    eax,eax
  423512:	jmp    0x423558
  423514:	call   DWORD PTR ds:0x428088
  42351a:	mov    esi,eax
  42351c:	cmp    esi,ebx
  42351e:	je     0x423510
  423520:	cmp    BYTE PTR [esi],bl
  423522:	je     0x42352e
  423524:	inc    eax
  423525:	cmp    BYTE PTR [eax],bl
  423527:	jne    0x423524
  423529:	inc    eax
  42352a:	cmp    BYTE PTR [eax],bl
  42352c:	jne    0x423524
  42352e:	sub    eax,esi
  423530:	inc    eax
  423531:	mov    ebp,eax
  423533:	push   ebp
  423534:	call   0x424672
  423539:	mov    edi,eax
  42353b:	cmp    edi,ebx
  42353d:	pop    ecx
  42353e:	jne    0x423544
  423540:	xor    edi,edi
  423542:	jmp    0x42354f
  423544:	push   ebp
  423545:	push   esi
  423546:	push   edi
  423547:	call   0x424690
  42354c:	add    esp,0xc
  42354f:	push   esi
  423550:	call   DWORD PTR ds:0x428084
  423556:	mov    eax,edi
  423558:	pop    edi
  423559:	pop    esi
  42355a:	pop    ebp
  42355b:	pop    ebx
  42355c:	pop    ecx
  42355d:	pop    ecx
  42355e:	ret    
  42355f:	sub    esp,0x48
  423562:	push   ebx
  423563:	mov    ebx,0x480
  423568:	push   ebx
  423569:	call   0x424672
  42356e:	test   eax,eax
  423570:	pop    ecx
  423571:	jne    0x42357b
  423573:	or     eax,0xffffffff
  423576:	jmp    0x423758
  42357b:	mov    ds:0x4663a0,eax
  423580:	mov    DWORD PTR ds:0x466388,0x20
  42358a:	lea    ecx,[eax+0x480]
  423590:	jmp    0x4235b0
  423592:	and    BYTE PTR [eax+0x4],0x0
  423596:	or     DWORD PTR [eax],0xffffffff
  423599:	and    DWORD PTR [eax+0x8],0x0
  42359d:	mov    BYTE PTR [eax+0x5],0xa
  4235a1:	mov    ecx,DWORD PTR ds:0x4663a0
  4235a7:	add    eax,0x24
  4235aa:	add    ecx,0x480
  4235b0:	cmp    eax,ecx
  4235b2:	jb     0x423592
  4235b4:	push   ebp
  4235b5:	push   esi
  4235b6:	push   edi
  4235b7:	lea    eax,[esp+0x14]
  4235bb:	push   eax
  4235bc:	call   DWORD PTR ds:0x42805c
  4235c2:	cmp    WORD PTR [esp+0x46],0x0
  4235c8:	je     0x4236b7
  4235ce:	mov    eax,DWORD PTR [esp+0x48]
  4235d2:	test   eax,eax
  4235d4:	je     0x4236b7
  4235da:	mov    edi,DWORD PTR [eax]
  4235dc:	lea    ebp,[eax+0x4]
  4235df:	lea    eax,[edi+ebp*1]
  4235e2:	mov    DWORD PTR [esp+0x10],eax
  4235e6:	mov    eax,0x800
  4235eb:	cmp    edi,eax
  4235ed:	jl     0x4235f1
  4235ef:	mov    edi,eax
  4235f1:	cmp    DWORD PTR ds:0x466388,edi
  4235f7:	jge    0x423647
  4235f9:	mov    esi,0x4663a4
  4235fe:	push   ebx
  4235ff:	call   0x424672
  423604:	test   eax,eax
  423606:	pop    ecx
  423607:	je     0x423641
  423609:	add    DWORD PTR ds:0x466388,0x20
  423610:	mov    DWORD PTR [esi],eax
  423612:	lea    ecx,[eax+0x480]
  423618:	jmp    0x423630
  42361a:	and    BYTE PTR [eax+0x4],0x0
  42361e:	or     DWORD PTR [eax],0xffffffff
  423621:	and    DWORD PTR [eax+0x8],0x0
  423625:	mov    BYTE PTR [eax+0x5],0xa
  423629:	mov    ecx,DWORD PTR [esi]
  42362b:	add    eax,0x24
  42362e:	add    ecx,ebx
  423630:	cmp    eax,ecx
  423632:	jb     0x42361a
  423634:	add    esi,0x4
  423637:	cmp    DWORD PTR ds:0x466388,edi
  42363d:	jl     0x4235fe
  42363f:	jmp    0x423647
  423641:	mov    edi,DWORD PTR ds:0x466388
  423647:	xor    ebx,ebx
  423649:	test   edi,edi
  42364b:	jle    0x4236b7
  42364d:	mov    eax,DWORD PTR [esp+0x10]
  423651:	mov    eax,DWORD PTR [eax]
  423653:	cmp    eax,0xffffffff
  423656:	je     0x4236ac
  423658:	mov    cl,BYTE PTR [ebp+0x0]
  42365b:	test   cl,0x1
  42365e:	je     0x4236ac
  423660:	test   cl,0x8
  423663:	jne    0x423670
  423665:	push   eax
  423666:	call   DWORD PTR ds:0x42809c
  42366c:	test   eax,eax
  42366e:	je     0x4236ac
  423670:	mov    ecx,ebx
  423672:	mov    eax,ebx
  423674:	and    eax,0x1f
  423677:	lea    eax,[eax+eax*8]
  42367a:	sar    ecx,0x5
  42367d:	mov    ecx,DWORD PTR [ecx*4+0x4663a0]
  423684:	lea    esi,[ecx+eax*4]
  423687:	mov    eax,DWORD PTR [esp+0x10]
  42368b:	mov    eax,DWORD PTR [eax]
  42368d:	mov    DWORD PTR [esi],eax
  42368f:	mov    al,BYTE PTR [ebp+0x0]
  423692:	mov    BYTE PTR [esi+0x4],al
  423695:	lea    eax,[esi+0xc]
  423698:	push   0xfa0
  42369d:	push   eax
  42369e:	call   0x4249dd
  4236a3:	test   eax,eax
  4236a5:	pop    ecx
  4236a6:	pop    ecx
  4236a7:	je     0x4236d7
  4236a9:	inc    DWORD PTR [esi+0x8]
  4236ac:	add    DWORD PTR [esp+0x10],0x4
  4236b1:	inc    ebx
  4236b2:	inc    ebp
  4236b3:	cmp    ebx,edi
  4236b5:	jl     0x42364d
  4236b7:	xor    ebx,ebx
  4236b9:	mov    ecx,DWORD PTR ds:0x4663a0
  4236bf:	lea    eax,[ebx+ebx*8]
  4236c2:	lea    esi,[ecx+eax*4]
  4236c5:	cmp    DWORD PTR [esi],0xffffffff
  4236c8:	jne    0x423739
  4236ca:	test   ebx,ebx
  4236cc:	mov    BYTE PTR [esi+0x4],0x81
  4236d0:	jne    0x4236dc
  4236d2:	push   0xfffffff6
  4236d4:	pop    eax
  4236d5:	jmp    0x4236e6
  4236d7:	or     eax,0xffffffff
  4236da:	jmp    0x423755
  4236dc:	mov    eax,ebx
  4236de:	dec    eax
  4236df:	neg    eax
  4236e1:	sbb    eax,eax
  4236e3:	add    eax,0xfffffff5
  4236e6:	push   eax
  4236e7:	call   DWORD PTR ds:0x428078
  4236ed:	mov    edi,eax
  4236ef:	cmp    edi,0xffffffff
  4236f2:	je     0x423733
  4236f4:	push   edi
  4236f5:	call   DWORD PTR ds:0x42809c
  4236fb:	test   eax,eax
  4236fd:	je     0x423733
  4236ff:	and    eax,0xff
  423704:	cmp    eax,0x2
  423707:	mov    DWORD PTR [esi],edi
  423709:	jne    0x423711
  42370b:	or     BYTE PTR [esi+0x4],0x40
  42370f:	jmp    0x42371a
  423711:	cmp    eax,0x3
  423714:	jne    0x42371a
  423716:	or     BYTE PTR [esi+0x4],0x8
  42371a:	lea    eax,[esi+0xc]
  42371d:	push   0xfa0
  423722:	push   eax
  423723:	call   0x4249dd
  423728:	test   eax,eax
  42372a:	pop    ecx
  42372b:	pop    ecx
  42372c:	je     0x4236d7
  42372e:	inc    DWORD PTR [esi+0x8]
  423731:	jmp    0x42373d
  423733:	or     BYTE PTR [esi+0x4],0x40
  423737:	jmp    0x42373d
  423739:	or     BYTE PTR [esi+0x4],0x80
  42373d:	inc    ebx
  42373e:	cmp    ebx,0x3
  423741:	jl     0x4236b9
  423747:	push   DWORD PTR ds:0x466388
  42374d:	call   DWORD PTR ds:0x428098
  423753:	xor    eax,eax
  423755:	pop    edi
  423756:	pop    esi
  423757:	pop    ebp
  423758:	pop    ebx
  423759:	add    esp,0x48
  42375c:	ret    
  42375d:	push   0xc
  42375f:	push   0x4284f0
  423764:	call   0x423950
  423769:	mov    DWORD PTR [ebp-0x1c],0x428f48
  423770:	cmp    DWORD PTR [ebp-0x1c],0x428f48
  423777:	jae    0x42379b
  423779:	and    DWORD PTR [ebp-0x4],0x0
  42377d:	mov    eax,DWORD PTR [ebp-0x1c]
  423780:	mov    eax,DWORD PTR [eax]
  423782:	test   eax,eax
  423784:	je     0x423791
  423786:	call   eax
  423788:	jmp    0x423791
  42378a:	xor    eax,eax
  42378c:	inc    eax
  42378d:	ret    
  42378e:	mov    esp,DWORD PTR [ebp-0x18]
  423791:	or     DWORD PTR [ebp-0x4],0xffffffff
  423795:	add    DWORD PTR [ebp-0x1c],0x4
  423799:	jmp    0x423770
  42379b:	call   0x42398b
  4237a0:	ret    
  4237a1:	push   0xc
  4237a3:	push   0x428500
  4237a8:	call   0x423950
  4237ad:	mov    DWORD PTR [ebp-0x1c],0x428f50
  4237b4:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  4237bb:	jae    0x4237df
  4237bd:	and    DWORD PTR [ebp-0x4],0x0
  4237c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237c4:	mov    eax,DWORD PTR [eax]
  4237c6:	test   eax,eax
  4237c8:	je     0x4237d5
  4237ca:	call   eax
  4237cc:	jmp    0x4237d5
  4237ce:	xor    eax,eax
  4237d0:	inc    eax
  4237d1:	ret    
  4237d2:	mov    esp,DWORD PTR [ebp-0x18]
  4237d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237d9:	add    DWORD PTR [ebp-0x1c],0x4
  4237dd:	jmp    0x4237b4
  4237df:	call   0x42398b
  4237e4:	ret    
  4237e5:	call   0x423a26
  4237ea:	mov    eax,ds:0x46552c
  4237ef:	cmp    eax,0xffffffff
  4237f2:	je     0x423802
  4237f4:	push   eax
  4237f5:	call   DWORD PTR ds:0x4280a4
  4237fb:	or     DWORD PTR ds:0x46552c,0xffffffff
  423802:	ret    
  423803:	push   ebx
  423804:	push   esi
  423805:	call   DWORD PTR ds:0x42803c
  42380b:	push   DWORD PTR ds:0x46552c
  423811:	mov    ebx,eax
  423813:	call   DWORD PTR ds:0x4280b0
  423819:	mov    esi,eax
  42381b:	test   esi,esi
  42381d:	jne    0x423868
  42381f:	push   0x88
  423824:	push   0x1
  423826:	call   0x424a68
  42382b:	mov    esi,eax
  42382d:	test   esi,esi
  42382f:	pop    ecx
  423830:	pop    ecx
  423831:	je     0x423860
  423833:	push   esi
  423834:	push   DWORD PTR ds:0x46552c
  42383a:	call   DWORD PTR ds:0x4280ac
  423840:	test   eax,eax
  423842:	je     0x423860
  423844:	mov    DWORD PTR [esi+0x54],0x465480
  42384b:	mov    DWORD PTR [esi+0x14],0x1
  423852:	call   DWORD PTR ds:0x428020
  423858:	or     DWORD PTR [esi+0x4],0xffffffff
  42385c:	mov    DWORD PTR [esi],eax
  42385e:	jmp    0x423868
  423860:	push   0x10
  423862:	call   0x422a16
  423867:	pop    ecx
  423868:	push   ebx
  423869:	call   DWORD PTR ds:0x4280a8
  42386f:	mov    eax,esi
  423871:	pop    esi
  423872:	pop    ebx
  423873:	ret    
  423874:	call   0x4239dd
  423879:	test   eax,eax
  42387b:	je     0x42388d
  42387d:	call   DWORD PTR ds:0x4280b4
  423883:	cmp    eax,0xffffffff
  423886:	mov    ds:0x46552c,eax
  42388b:	jne    0x423895
  42388d:	call   0x4237e5
  423892:	xor    eax,eax
  423894:	ret    
  423895:	push   esi
  423896:	push   0x88
  42389b:	push   0x1
  42389d:	call   0x424a68
  4238a2:	mov    esi,eax
  4238a4:	test   esi,esi
  4238a6:	pop    ecx
  4238a7:	pop    ecx
  4238a8:	je     0x4238da
  4238aa:	push   esi
  4238ab:	push   DWORD PTR ds:0x46552c
  4238b1:	call   DWORD PTR ds:0x4280ac
  4238b7:	test   eax,eax
  4238b9:	je     0x4238da
  4238bb:	mov    DWORD PTR [esi+0x54],0x465480
  4238c2:	mov    DWORD PTR [esi+0x14],0x1
  4238c9:	call   DWORD PTR ds:0x428020
  4238cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238d3:	mov    DWORD PTR [esi],eax
  4238d5:	xor    eax,eax
  4238d7:	inc    eax
  4238d8:	pop    esi
  4238d9:	ret    
  4238da:	call   0x4237e5
  4238df:	xor    eax,eax
  4238e1:	pop    esi
  4238e2:	ret    
  4238e3:	cmp    DWORD PTR ds:0x465d04,0x2
  4238ea:	jne    0x4238f9
  4238ec:	cmp    DWORD PTR ds:0x465d10,0x5
  4238f3:	jb     0x4238f9
  4238f5:	xor    eax,eax
  4238f7:	inc    eax
  4238f8:	ret    
  4238f9:	push   0x3
  4238fb:	pop    eax
  4238fc:	ret    
  4238fd:	xor    eax,eax
  4238ff:	cmp    DWORD PTR [esp+0x4],eax
  423903:	push   0x0
  423905:	sete   al
  423908:	push   0x1000
  42390d:	push   eax
  42390e:	call   DWORD PTR ds:0x4280bc
  423914:	test   eax,eax
  423916:	mov    ds:0x466380,eax
  42391b:	je     0x423947
  42391d:	call   0x4238e3
  423922:	cmp    eax,0x3
  423925:	mov    ds:0x466384,eax
  42392a:	jne    0x42394a
  42392c:	push   0x3f8
  423931:	call   0x424cea
  423936:	test   eax,eax
  423938:	pop    ecx
  423939:	jne    0x42394a
  42393b:	push   DWORD PTR ds:0x466380
  423941:	call   DWORD PTR ds:0x4280b8
  423947:	xor    eax,eax
  423949:	ret    
  42394a:	xor    eax,eax
  42394c:	inc    eax
  42394d:	ret    
  42394e:	int3   
  42394f:	int3   
  423950:	push   0x425818
  423955:	mov    eax,fs:0x0
  42395b:	push   eax
  42395c:	mov    eax,DWORD PTR [esp+0x10]
  423960:	mov    DWORD PTR [esp+0x10],ebp
  423964:	lea    ebp,[esp+0x10]
  423968:	sub    esp,eax
  42396a:	push   ebx
  42396b:	push   esi
  42396c:	push   edi
  42396d:	mov    eax,DWORD PTR [ebp-0x8]
  423970:	mov    DWORD PTR [ebp-0x18],esp
  423973:	push   eax
  423974:	mov    eax,DWORD PTR [ebp-0x4]
  423977:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42397e:	mov    DWORD PTR [ebp-0x8],eax
  423981:	lea    eax,[ebp-0x10]
  423984:	mov    fs:0x0,eax
  42398a:	ret    
  42398b:	mov    ecx,DWORD PTR [ebp-0x10]
  42398e:	mov    DWORD PTR fs:0x0,ecx
  423995:	pop    ecx
  423996:	pop    edi
  423997:	pop    esi
  423998:	pop    ebx
  423999:	leave  
  42399a:	push   ecx
  42399b:	ret    
  42399c:	int3   
  42399d:	int3   
  42399e:	int3   
  42399f:	int3   
  4239a0:	cmp    eax,0x1000
  4239a5:	jae    0x4239b5
  4239a7:	neg    eax
  4239a9:	add    eax,esp
  4239ab:	add    eax,0x4
  4239ae:	test   DWORD PTR [eax],eax
  4239b0:	xchg   esp,eax
  4239b1:	mov    eax,DWORD PTR [eax]
  4239b3:	push   eax
  4239b4:	ret    
  4239b5:	push   ecx
  4239b6:	lea    ecx,[esp+0x8]
  4239ba:	sub    ecx,0x1000
  4239c0:	sub    eax,0x1000
  4239c5:	test   DWORD PTR [ecx],eax
  4239c7:	cmp    eax,0x1000
  4239cc:	jae    0x4239ba
  4239ce:	sub    ecx,eax
  4239d0:	mov    eax,esp
  4239d2:	test   DWORD PTR [ecx],eax
  4239d4:	mov    esp,ecx
  4239d6:	mov    ecx,DWORD PTR [eax]
  4239d8:	mov    eax,DWORD PTR [eax+0x4]
  4239db:	push   eax
  4239dc:	ret    
  4239dd:	push   esi
  4239de:	push   edi
  4239df:	xor    esi,esi
  4239e1:	mov    edi,0x465e60
  4239e6:	cmp    DWORD PTR [esi*8+0x465544],0x1
  4239ee:	jne    0x423a0e
  4239f0:	lea    eax,[esi*8+0x465540]
  4239f7:	mov    DWORD PTR [eax],edi
  4239f9:	push   0xfa0
  4239fe:	push   DWORD PTR [eax]
  423a00:	add    edi,0x18
  423a03:	call   0x4249dd
  423a08:	test   eax,eax
  423a0a:	pop    ecx
  423a0b:	pop    ecx
  423a0c:	je     0x423a1a
  423a0e:	inc    esi
  423a0f:	cmp    esi,0x24
  423a12:	jl     0x4239e6
  423a14:	xor    eax,eax
  423a16:	inc    eax
  423a17:	pop    edi
  423a18:	pop    esi
  423a19:	ret    
  423a1a:	and    DWORD PTR [esi*8+0x465540],0x0
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a17
  423a26:	push   ebx
  423a27:	mov    ebx,DWORD PTR ds:0x4280a0
  423a2d:	push   esi
  423a2e:	mov    esi,0x465540
  423a33:	push   edi
  423a34:	mov    edi,DWORD PTR [esi]
  423a36:	test   edi,edi
  423a38:	je     0x423a4d
  423a3a:	cmp    DWORD PTR [esi+0x4],0x1
  423a3e:	je     0x423a4d
  423a40:	push   edi
  423a41:	call   ebx
  423a43:	push   edi
  423a44:	call   0x42455a
  423a49:	and    DWORD PTR [esi],0x0
  423a4c:	pop    ecx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x465660
  423a56:	jl     0x423a34
  423a58:	mov    esi,0x465540
  423a5d:	pop    edi
  423a5e:	mov    eax,DWORD PTR [esi]
  423a60:	test   eax,eax
  423a62:	je     0x423a6d
  423a64:	cmp    DWORD PTR [esi+0x4],0x1
  423a68:	jne    0x423a6d
  423a6a:	push   eax
  423a6b:	call   ebx
  423a6d:	add    esi,0x8
  423a70:	cmp    esi,0x465660
  423a76:	jl     0x423a5e
  423a78:	pop    esi
  423a79:	pop    ebx
  423a7a:	ret    
  423a7b:	push   ebp
  423a7c:	mov    ebp,esp
  423a7e:	mov    eax,DWORD PTR [ebp+0x8]
  423a81:	push   DWORD PTR [eax*8+0x465540]
  423a88:	call   DWORD PTR ds:0x4280c8
  423a8e:	pop    ebp
  423a8f:	ret    
  423a90:	push   ebp
  423a91:	mov    ebp,esp
  423a93:	push   esi
  423a94:	mov    esi,DWORD PTR [ebp+0x8]
  423a97:	lea    esi,[esi*8+0x465540]
  423a9e:	cmp    DWORD PTR [esi],0x0
  423aa1:	je     0x423aa8
  423aa3:	xor    eax,eax
  423aa5:	inc    eax
  423aa6:	jmp    0x423b0c
  423aa8:	push   edi
  423aa9:	push   0x18
  423aab:	call   0x424672
  423ab0:	mov    edi,eax
  423ab2:	test   edi,edi
  423ab4:	pop    ecx
  423ab5:	jne    0x423ac6
  423ab7:	call   0x4258f0
  423abc:	mov    DWORD PTR [eax],0xc
  423ac2:	xor    eax,eax
  423ac4:	jmp    0x423b0b
  423ac6:	push   0xa
  423ac8:	call   0x423b0f
  423acd:	cmp    DWORD PTR [esi],0x0
  423ad0:	pop    ecx
  423ad1:	jne    0x423af9
  423ad3:	push   0xfa0
  423ad8:	push   edi
  423ad9:	call   0x4249dd
  423ade:	test   eax,eax
  423ae0:	pop    ecx
  423ae1:	pop    ecx
  423ae2:	jne    0x423af5
  423ae4:	push   edi
  423ae5:	call   0x42455a
  423aea:	push   0xa
  423aec:	call   0x423a7b
  423af1:	pop    ecx
  423af2:	pop    ecx
  423af3:	jmp    0x423ab7
  423af5:	mov    DWORD PTR [esi],edi
  423af7:	jmp    0x423b00
  423af9:	push   edi
  423afa:	call   0x42455a
  423aff:	pop    ecx
  423b00:	push   0xa
  423b02:	call   0x423a7b
  423b07:	xor    eax,eax
  423b09:	pop    ecx
  423b0a:	inc    eax
  423b0b:	pop    edi
  423b0c:	pop    esi
  423b0d:	pop    ebp
  423b0e:	ret    
  423b0f:	push   ebp
  423b10:	mov    ebp,esp
  423b12:	mov    eax,DWORD PTR [ebp+0x8]
  423b15:	push   esi
  423b16:	lea    esi,[eax*8+0x465540]
  423b1d:	cmp    DWORD PTR [esi],0x0
  423b20:	jne    0x423b35
  423b22:	push   eax
  423b23:	call   0x423a90
  423b28:	test   eax,eax
  423b2a:	pop    ecx
  423b2b:	jne    0x423b35
  423b2d:	push   0x11
  423b2f:	call   0x422a16
  423b34:	pop    ecx
  423b35:	push   DWORD PTR [esi]
  423b37:	call   DWORD PTR ds:0x4280cc
  423b3d:	pop    esi
  423b3e:	pop    ebp
  423b3f:	ret    
  423b40:	push   esi
  423b41:	push   DWORD PTR ds:0x4664a8
  423b47:	call   0x425aa6
  423b4c:	pop    ecx
  423b4d:	mov    ecx,DWORD PTR ds:0x4664a4
  423b53:	mov    esi,eax
  423b55:	mov    eax,ds:0x4664a8
  423b5a:	mov    edx,ecx
  423b5c:	sub    edx,eax
  423b5e:	add    edx,0x4
  423b61:	cmp    esi,edx
  423b63:	jae    0x423bb3
  423b65:	mov    ecx,0x800
  423b6a:	cmp    esi,ecx
  423b6c:	jae    0x423b70
  423b6e:	mov    ecx,esi
  423b70:	add    ecx,esi
  423b72:	push   ecx
  423b73:	push   eax
  423b74:	call   0x4258f9
  423b79:	test   eax,eax
  423b7b:	pop    ecx
  423b7c:	pop    ecx
  423b7d:	jne    0x423b96
  423b7f:	add    esi,0x10
  423b82:	push   esi
  423b83:	push   DWORD PTR ds:0x4664a8
  423b89:	call   0x4258f9
  423b8e:	test   eax,eax
  423b90:	pop    ecx
  423b91:	pop    ecx
  423b92:	jne    0x423b96
  423b94:	pop    esi
  423b95:	ret    
  423b96:	mov    ecx,DWORD PTR ds:0x4664a4
  423b9c:	sub    ecx,DWORD PTR ds:0x4664a8
  423ba2:	mov    ds:0x4664a8,eax
  423ba7:	sar    ecx,0x2
  423baa:	lea    ecx,[eax+ecx*4]
  423bad:	mov    DWORD PTR ds:0x4664a4,ecx
  423bb3:	mov    DWORD PTR [ecx],edi
  423bb5:	add    DWORD PTR ds:0x4664a4,0x4
  423bbc:	mov    eax,edi
  423bbe:	pop    esi
  423bbf:	ret    
  423bc0:	push   0x80
  423bc5:	call   0x424672
  423bca:	test   eax,eax
  423bcc:	pop    ecx
  423bcd:	mov    ds:0x4664a8,eax
  423bd2:	jne    0x423bd8
  423bd4:	push   0x18
  423bd6:	pop    eax
  423bd7:	ret    
  423bd8:	and    DWORD PTR [eax],0x0
  423bdb:	mov    eax,ds:0x4664a8
  423be0:	mov    ds:0x4664a4,eax
  423be5:	xor    eax,eax
  423be7:	ret    
  423be8:	push   0xc
  423bea:	push   0x428510
  423bef:	call   0x423950
  423bf4:	call   0x422c61
  423bf9:	and    DWORD PTR [ebp-0x4],0x0
  423bfd:	mov    edi,DWORD PTR [ebp+0x8]
  423c00:	call   0x423b40
  423c05:	mov    DWORD PTR [ebp-0x1c],eax
  423c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  423c0c:	call   0x423c1a
  423c11:	mov    eax,DWORD PTR [ebp-0x1c]
  423c14:	call   0x42398b
  423c19:	ret    
  423c1a:	call   0x422c6a
  423c1f:	ret    
  423c20:	push   DWORD PTR [esp+0x4]
  423c24:	call   0x423be8
  423c29:	neg    eax
  423c2b:	sbb    eax,eax
  423c2d:	neg    eax
  423c2f:	pop    ecx
  423c30:	dec    eax
  423c31:	ret    
  423c32:	push   ebp
  423c33:	mov    ebp,esp
  423c35:	sub    esp,0x10
  423c38:	push   ebx
  423c39:	xor    ebx,ebx
  423c3b:	cmp    DWORD PTR ds:0x465fb0,ebx
  423c41:	push   esi
  423c42:	push   edi
  423c43:	jne    0x423cb2
  423c45:	push   0x428580
  423c4a:	call   DWORD PTR ds:0x4280d0
  423c50:	mov    edi,eax
  423c52:	cmp    edi,ebx
  423c54:	je     0x423ced
  423c5a:	mov    esi,DWORD PTR ds:0x428040
  423c60:	push   0x428574
  423c65:	push   edi
  423c66:	call   esi
  423c68:	test   eax,eax
  423c6a:	mov    ds:0x465fb0,eax
  423c6f:	je     0x423ced
  423c71:	push   0x428564
  423c76:	push   edi
  423c77:	call   esi
  423c79:	push   0x428550
  423c7e:	push   edi
  423c7f:	mov    ds:0x465fb4,eax
  423c84:	call   esi
  423c86:	cmp    DWORD PTR ds:0x465d04,0x2
  423c8d:	mov    ds:0x465fb8,eax
  423c92:	jne    0x423cb2
  423c94:	push   0x428534
  423c99:	push   edi
  423c9a:	call   esi
  423c9c:	test   eax,eax
  423c9e:	mov    ds:0x465fc0,eax
  423ca3:	je     0x423cb2
  423ca5:	push   0x42851c
  423caa:	push   edi
  423cab:	call   esi
  423cad:	mov    ds:0x465fbc,eax
  423cb2:	mov    eax,ds:0x465fbc
  423cb7:	test   eax,eax
  423cb9:	je     0x423cf7
  423cbb:	call   eax
  423cbd:	test   eax,eax
  423cbf:	je     0x423cde
  423cc1:	lea    ecx,[ebp-0x4]
  423cc4:	push   ecx
  423cc5:	push   0xc
  423cc7:	lea    ecx,[ebp-0x10]
  423cca:	push   ecx
  423ccb:	push   0x1
  423ccd:	push   eax
  423cce:	call   DWORD PTR ds:0x465fc0
  423cd4:	test   eax,eax
  423cd6:	je     0x423cde
  423cd8:	test   BYTE PTR [ebp-0x8],0x1
  423cdc:	jne    0x423cf7
  423cde:	cmp    DWORD PTR ds:0x465d10,0x4
  423ce5:	jb     0x423cf1
  423ce7:	or     BYTE PTR [ebp+0x12],0x20
  423ceb:	jmp    0x423d16
  423ced:	xor    eax,eax
  423cef:	jmp    0x423d26
  423cf1:	or     BYTE PTR [ebp+0x12],0x4
  423cf5:	jmp    0x423d16
  423cf7:	mov    eax,ds:0x465fb4
  423cfc:	test   eax,eax
  423cfe:	je     0x423d16
  423d00:	call   eax
  423d02:	mov    ebx,eax
  423d04:	test   ebx,ebx
  423d06:	je     0x423d16
  423d08:	mov    eax,ds:0x465fb8
  423d0d:	test   eax,eax
  423d0f:	je     0x423d16
  423d11:	push   ebx
  423d12:	call   eax
  423d14:	mov    ebx,eax
  423d16:	push   DWORD PTR [ebp+0x10]
  423d19:	push   DWORD PTR [ebp+0xc]
  423d1c:	push   DWORD PTR [ebp+0x8]
  423d1f:	push   ebx
  423d20:	call   DWORD PTR ds:0x465fb0
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    
  423d2b:	int3   
  423d2c:	int3   
  423d2d:	int3   
  423d2e:	int3   
  423d2f:	int3   
  423d30:	push   edi
  423d31:	mov    edi,DWORD PTR [esp+0x8]
  423d35:	jmp    0x423da5
  423d37:	lea    esp,[esp+0x0]
  423d3e:	mov    edi,edi
  423d40:	mov    ecx,DWORD PTR [esp+0x4]
  423d44:	push   edi
  423d45:	test   ecx,0x3
  423d4b:	je     0x423d60
  423d4d:	mov    al,BYTE PTR [ecx]
  423d4f:	add    ecx,0x1
  423d52:	test   al,al
  423d54:	je     0x423d93
  423d56:	test   ecx,0x3
  423d5c:	jne    0x423d4d
  423d5e:	mov    edi,edi
  423d60:	mov    eax,DWORD PTR [ecx]
  423d62:	mov    edx,0x7efefeff
  423d67:	add    edx,eax
  423d69:	xor    eax,0xffffffff
  423d6c:	xor    eax,edx
  423d6e:	add    ecx,0x4
  423d71:	test   eax,0x81010100
  423d76:	je     0x423d60
  423d78:	mov    eax,DWORD PTR [ecx-0x4]
  423d7b:	test   al,al
  423d7d:	je     0x423da2
  423d7f:	test   ah,ah
  423d81:	je     0x423d9d
  423d83:	test   eax,0xff0000
  423d88:	je     0x423d98
  423d8a:	test   eax,0xff000000
  423d8f:	je     0x423d93
  423d91:	jmp    0x423d60
  423d93:	lea    edi,[ecx-0x1]
  423d96:	jmp    0x423da5
  423d98:	lea    edi,[ecx-0x2]
  423d9b:	jmp    0x423da5
  423d9d:	lea    edi,[ecx-0x3]
  423da0:	jmp    0x423da5
  423da2:	lea    edi,[ecx-0x4]
  423da5:	mov    ecx,DWORD PTR [esp+0xc]
  423da9:	test   ecx,0x3
  423daf:	je     0x423dce
  423db1:	mov    dl,BYTE PTR [ecx]
  423db3:	add    ecx,0x1
  423db6:	test   dl,dl
  423db8:	je     0x423e20
  423dba:	mov    BYTE PTR [edi],dl
  423dbc:	add    edi,0x1
  423dbf:	test   ecx,0x3
  423dc5:	jne    0x423db1
  423dc7:	jmp    0x423dce
  423dc9:	mov    DWORD PTR [edi],edx
  423dcb:	add    edi,0x4
  423dce:	mov    edx,0x7efefeff
  423dd3:	mov    eax,DWORD PTR [ecx]
  423dd5:	add    edx,eax
  423dd7:	xor    eax,0xffffffff
  423dda:	xor    eax,edx
  423ddc:	mov    edx,DWORD PTR [ecx]
  423dde:	add    ecx,0x4
  423de1:	test   eax,0x81010100
  423de6:	je     0x423dc9
  423de8:	test   dl,dl
  423dea:	je     0x423e20
  423dec:	test   dh,dh
  423dee:	je     0x423e17
  423df0:	test   edx,0xff0000
  423df6:	je     0x423e0a
  423df8:	test   edx,0xff000000
  423dfe:	je     0x423e02
  423e00:	jmp    0x423dc9
  423e02:	mov    DWORD PTR [edi],edx
  423e04:	mov    eax,DWORD PTR [esp+0x8]
  423e08:	pop    edi
  423e09:	ret    
  423e0a:	mov    WORD PTR [edi],dx
  423e0d:	mov    eax,DWORD PTR [esp+0x8]
  423e11:	mov    BYTE PTR [edi+0x2],0x0
  423e15:	pop    edi
  423e16:	ret    
  423e17:	mov    WORD PTR [edi],dx
  423e1a:	mov    eax,DWORD PTR [esp+0x8]
  423e1e:	pop    edi
  423e1f:	ret    
  423e20:	mov    BYTE PTR [edi],dl
  423e22:	mov    eax,DWORD PTR [esp+0x8]
  423e26:	pop    edi
  423e27:	ret    
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	mov    ecx,DWORD PTR [esp+0xc]
  423e34:	push   edi
  423e35:	test   ecx,ecx
  423e37:	je     0x423ecf
  423e3d:	push   esi
  423e3e:	push   ebx
  423e3f:	mov    ebx,ecx
  423e41:	mov    esi,DWORD PTR [esp+0x14]
  423e45:	test   esi,0x3
  423e4b:	mov    edi,DWORD PTR [esp+0x10]
  423e4f:	jne    0x423e5c
  423e51:	shr    ecx,0x2
  423e54:	jne    0x423edf
  423e5a:	jmp    0x423e83
  423e5c:	mov    al,BYTE PTR [esi]
  423e5e:	add    esi,0x1
  423e61:	mov    BYTE PTR [edi],al
  423e63:	add    edi,0x1
  423e66:	sub    ecx,0x1
  423e69:	je     0x423e96
  423e6b:	test   al,al
  423e6d:	je     0x423e9e
  423e6f:	test   esi,0x3
  423e75:	jne    0x423e5c
  423e77:	mov    ebx,ecx
  423e79:	shr    ecx,0x2
  423e7c:	jne    0x423edf
  423e7e:	and    ebx,0x3
  423e81:	je     0x423e96
  423e83:	mov    al,BYTE PTR [esi]
  423e85:	add    esi,0x1
  423e88:	mov    BYTE PTR [edi],al
  423e8a:	add    edi,0x1
  423e8d:	test   al,al
  423e8f:	je     0x423ec8
  423e91:	sub    ebx,0x1
  423e94:	jne    0x423e83
  423e96:	mov    eax,DWORD PTR [esp+0x10]
  423e9a:	pop    ebx
  423e9b:	pop    esi
  423e9c:	pop    edi
  423e9d:	ret    
  423e9e:	test   edi,0x3
  423ea4:	je     0x423ebc
  423ea6:	mov    BYTE PTR [edi],al
  423ea8:	add    edi,0x1
  423eab:	sub    ecx,0x1
  423eae:	je     0x423f4c
  423eb4:	test   edi,0x3
  423eba:	jne    0x423ea6
  423ebc:	mov    ebx,ecx
  423ebe:	shr    ecx,0x2
  423ec1:	jne    0x423f37
  423ec3:	mov    BYTE PTR [edi],al
  423ec5:	add    edi,0x1
  423ec8:	sub    ebx,0x1
  423ecb:	jne    0x423ec3
  423ecd:	pop    ebx
  423ece:	pop    esi
  423ecf:	mov    eax,DWORD PTR [esp+0x8]
  423ed3:	pop    edi
  423ed4:	ret    
  423ed5:	mov    DWORD PTR [edi],edx
  423ed7:	add    edi,0x4
  423eda:	sub    ecx,0x1
  423edd:	je     0x423e7e
  423edf:	mov    edx,0x7efefeff
  423ee4:	mov    eax,DWORD PTR [esi]
  423ee6:	add    edx,eax
  423ee8:	xor    eax,0xffffffff
  423eeb:	xor    eax,edx
  423eed:	mov    edx,DWORD PTR [esi]
  423eef:	add    esi,0x4
  423ef2:	test   eax,0x81010100
  423ef7:	je     0x423ed5
  423ef9:	test   dl,dl
  423efb:	je     0x423f29
  423efd:	test   dh,dh
  423eff:	je     0x423f1f
  423f01:	test   edx,0xff0000
  423f07:	je     0x423f15
  423f09:	test   edx,0xff000000
  423f0f:	jne    0x423ed5
  423f11:	mov    DWORD PTR [edi],edx
  423f13:	jmp    0x423f2d
  423f15:	and    edx,0xffff
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	jmp    0x423f2d
  423f1f:	and    edx,0xff
  423f25:	mov    DWORD PTR [edi],edx
  423f27:	jmp    0x423f2d
  423f29:	xor    edx,edx
  423f2b:	mov    DWORD PTR [edi],edx
  423f2d:	add    edi,0x4
  423f30:	xor    eax,eax
  423f32:	sub    ecx,0x1
  423f35:	je     0x423f43
  423f37:	xor    eax,eax
  423f39:	mov    DWORD PTR [edi],eax
  423f3b:	add    edi,0x4
  423f3e:	sub    ecx,0x1
  423f41:	jne    0x423f39
  423f43:	and    ebx,0x3
  423f46:	jne    0x423ec3
  423f4c:	mov    eax,DWORD PTR [esp+0x10]
  423f50:	pop    ebx
  423f51:	pop    esi
  423f52:	pop    edi
  423f53:	ret    
  423f54:	int3   
  423f55:	int3   
  423f56:	int3   
  423f57:	int3   
  423f58:	int3   
  423f59:	int3   
  423f5a:	int3   
  423f5b:	int3   
  423f5c:	int3   
  423f5d:	int3   
  423f5e:	int3   
  423f5f:	int3   
  423f60:	mov    ecx,DWORD PTR [esp+0x4]
  423f64:	test   ecx,0x3
  423f6a:	je     0x423f90
  423f6c:	mov    al,BYTE PTR [ecx]
  423f6e:	add    ecx,0x1
  423f71:	test   al,al
  423f73:	je     0x423fc3
  423f75:	test   ecx,0x3
  423f7b:	jne    0x423f6c
  423f7d:	add    eax,0x0
  423f82:	lea    esp,[esp+0x0]
  423f89:	lea    esp,[esp+0x0]
  423f90:	mov    eax,DWORD PTR [ecx]
  423f92:	mov    edx,0x7efefeff
  423f97:	add    edx,eax
  423f99:	xor    eax,0xffffffff
  423f9c:	xor    eax,edx
  423f9e:	add    ecx,0x4
  423fa1:	test   eax,0x81010100
  423fa6:	je     0x423f90
  423fa8:	mov    eax,DWORD PTR [ecx-0x4]
  423fab:	test   al,al
  423fad:	je     0x423fe1
  423faf:	test   ah,ah
  423fb1:	je     0x423fd7
  423fb3:	test   eax,0xff0000
  423fb8:	je     0x423fcd
  423fba:	test   eax,0xff000000
  423fbf:	je     0x423fc3
  423fc1:	jmp    0x423f90
  423fc3:	lea    eax,[ecx-0x1]
  423fc6:	mov    ecx,DWORD PTR [esp+0x4]
  423fca:	sub    eax,ecx
  423fcc:	ret    
  423fcd:	lea    eax,[ecx-0x2]
  423fd0:	mov    ecx,DWORD PTR [esp+0x4]
  423fd4:	sub    eax,ecx
  423fd6:	ret    
  423fd7:	lea    eax,[ecx-0x3]
  423fda:	mov    ecx,DWORD PTR [esp+0x4]
  423fde:	sub    eax,ecx
  423fe0:	ret    
  423fe1:	lea    eax,[ecx-0x4]
  423fe4:	mov    ecx,DWORD PTR [esp+0x4]
  423fe8:	sub    eax,ecx
  423fea:	ret    
  423feb:	push   0x8
  423fed:	push   0x428590
  423ff2:	call   0x423950
  423ff7:	and    DWORD PTR [ebp-0x4],0x0
  423ffb:	push   0x0
  423ffd:	push   0x1
  423fff:	call   0x425b72
  424004:	pop    ecx
  424005:	pop    ecx
  424006:	jmp    0x42400f
  424008:	xor    eax,eax
  42400a:	inc    eax
  42400b:	ret    
  42400c:	mov    esp,DWORD PTR [ebp-0x18]
  42400f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424013:	push   0x3
  424015:	call   DWORD PTR ds:0x428068
  42401b:	int3   
  42401c:	cmp    ecx,DWORD PTR ds:0x465660
  424022:	jne    0x424025
  424024:	ret    
  424025:	jmp    0x423feb
  42402a:	movzx  eax,BYTE PTR [esp+0x4]
  42402f:	mov    cl,BYTE PTR [esp+0xc]
  424033:	test   BYTE PTR [eax+0x466161],cl
  424039:	jne    0x424057
  42403b:	cmp    DWORD PTR [esp+0x8],0x0
  424040:	je     0x424050
  424042:	movzx  eax,WORD PTR [eax*2+0x42898a]
  42404a:	and    eax,DWORD PTR [esp+0x8]
  42404e:	jmp    0x424052
  424050:	xor    eax,eax
  424052:	test   eax,eax
  424054:	jne    0x424057
  424056:	ret    
  424057:	xor    eax,eax
  424059:	inc    eax
  42405a:	ret    
  42405b:	push   0x4
  42405d:	push   0x0
  42405f:	push   DWORD PTR [esp+0xc]
  424063:	call   0x42402a
  424068:	add    esp,0xc
  42406b:	ret    
  42406c:	sub    eax,0x3a4
  424071:	je     0x424095
  424073:	sub    eax,0x4
  424076:	je     0x42408f
  424078:	sub    eax,0xd
  42407b:	je     0x424089
  42407d:	dec    eax
  42407e:	je     0x424083
  424080:	xor    eax,eax
  424082:	ret    
  424083:	mov    eax,0x404
  424088:	ret    
  424089:	mov    eax,0x412
  42408e:	ret    
  42408f:	mov    eax,0x804
  424094:	ret    
  424095:	mov    eax,0x411
  42409a:	ret    
  42409b:	push   edi
  42409c:	push   0x40
  42409e:	xor    eax,eax
  4240a0:	pop    ecx
  4240a1:	mov    edi,0x466160
  4240a6:	rep stos DWORD PTR es:[edi],eax
  4240a8:	stos   BYTE PTR es:[edi],al
  4240a9:	xor    eax,eax
  4240ab:	mov    ds:0x466264,eax
  4240b0:	mov    ds:0x46615c,eax
  4240b5:	mov    ds:0x466154,eax
  4240ba:	mov    edi,0x466270
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	stos   DWORD PTR es:[edi],eax
  4240c2:	pop    edi
  4240c3:	ret    
  4240c4:	push   ebp
  4240c5:	mov    ebp,esp
  4240c7:	sub    esp,0x518
  4240cd:	mov    eax,ds:0x465660
  4240d2:	xor    eax,DWORD PTR [ebp+0x4]
  4240d5:	push   esi
  4240d6:	mov    DWORD PTR [ebp-0x4],eax
  4240d9:	lea    eax,[ebp-0x18]
  4240dc:	push   eax
  4240dd:	push   DWORD PTR ds:0x466264
  4240e3:	call   DWORD PTR ds:0x4280dc
  4240e9:	cmp    eax,0x1
  4240ec:	mov    esi,0x100
  4240f1:	jne    0x424204
  4240f7:	xor    eax,eax
  4240f9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424100:	inc    eax
  424101:	cmp    eax,esi
  424103:	jb     0x4240f9
  424105:	mov    al,BYTE PTR [ebp-0x12]
  424108:	test   al,al
  42410a:	mov    BYTE PTR [ebp-0x118],0x20
  424111:	je     0x424149
  424113:	push   ebx
  424114:	lea    edx,[ebp-0x11]
  424117:	push   edi
  424118:	movzx  ecx,BYTE PTR [edx]
  42411b:	movzx  eax,al
  42411e:	cmp    eax,ecx
  424120:	ja     0x42413f
  424122:	sub    ecx,eax
  424124:	inc    ecx
  424125:	mov    ebx,ecx
  424127:	shr    ecx,0x2
  42412a:	lea    edi,[ebp+eax*1-0x118]
  424131:	mov    eax,0x20202020
  424136:	rep stos DWORD PTR es:[edi],eax
  424138:	mov    ecx,ebx
  42413a:	and    ecx,0x3
  42413d:	rep stos BYTE PTR es:[edi],al
  42413f:	inc    edx
  424140:	mov    al,BYTE PTR [edx]
  424142:	inc    edx
  424143:	test   al,al
  424145:	jne    0x424118
  424147:	pop    edi
  424148:	pop    ebx
  424149:	push   0x0
  42414b:	push   DWORD PTR ds:0x466154
  424151:	lea    eax,[ebp-0x518]
  424157:	push   DWORD PTR ds:0x466264
  42415d:	push   eax
  42415e:	push   esi
  42415f:	lea    eax,[ebp-0x118]
  424165:	push   eax
  424166:	push   0x1
  424168:	call   0x426078
  42416d:	push   0x0
  42416f:	push   DWORD PTR ds:0x466264
  424175:	lea    eax,[ebp-0x218]
  42417b:	push   esi
  42417c:	push   eax
  42417d:	push   esi
  42417e:	lea    eax,[ebp-0x118]
  424184:	push   eax
  424185:	push   esi
  424186:	push   DWORD PTR ds:0x466154
  42418c:	call   0x425cbc
  424191:	push   0x0
  424193:	push   DWORD PTR ds:0x466264
  424199:	lea    eax,[ebp-0x318]
  42419f:	push   esi
  4241a0:	push   eax
  4241a1:	push   esi
  4241a2:	lea    eax,[ebp-0x118]
  4241a8:	push   eax
  4241a9:	push   0x200
  4241ae:	push   DWORD PTR ds:0x466154
  4241b4:	call   0x425cbc
  4241b9:	add    esp,0x5c
  4241bc:	xor    eax,eax
  4241be:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241c6:	test   cl,0x1
  4241c9:	je     0x4241e1
  4241cb:	or     BYTE PTR [eax+0x466161],0x10
  4241d2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241d9:	mov    BYTE PTR [eax+0x466280],cl
  4241df:	jmp    0x4241fd
  4241e1:	test   cl,0x2
  4241e4:	je     0x4241f6
  4241e6:	or     BYTE PTR [eax+0x466161],0x20
  4241ed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241f4:	jmp    0x4241d9
  4241f6:	and    BYTE PTR [eax+0x466280],0x0
  4241fd:	inc    eax
  4241fe:	cmp    eax,esi
  424200:	jb     0x4241be
  424202:	jmp    0x424248
  424204:	xor    eax,eax
  424206:	cmp    eax,0x41
  424209:	jb     0x424224
  42420b:	cmp    eax,0x5a
  42420e:	ja     0x424224
  424210:	or     BYTE PTR [eax+0x466161],0x10
  424217:	mov    cl,al
  424219:	add    cl,0x20
  42421c:	mov    BYTE PTR [eax+0x466280],cl
  424222:	jmp    0x424243
  424224:	cmp    eax,0x61
  424227:	jb     0x42423c
  424229:	cmp    eax,0x7a
  42422c:	ja     0x42423c
  42422e:	or     BYTE PTR [eax+0x466161],0x20
  424235:	mov    cl,al
  424237:	sub    cl,0x20
  42423a:	jmp    0x42421c
  42423c:	and    BYTE PTR [eax+0x466280],0x0
  424243:	inc    eax
  424244:	cmp    eax,esi
  424246:	jb     0x424206
  424248:	mov    ecx,DWORD PTR [ebp-0x4]
  42424b:	xor    ecx,DWORD PTR [ebp+0x4]
  42424e:	pop    esi
  42424f:	call   0x42401c
  424254:	leave  
  424255:	ret    
  424256:	push   ebp
  424257:	mov    ebp,esp
  424259:	sub    esp,0x1c
  42425c:	mov    eax,ds:0x465660
  424261:	xor    eax,DWORD PTR [ebp+0x4]
  424264:	push   ebx
  424265:	push   esi
  424266:	mov    esi,DWORD PTR [ebp+0x8]
  424269:	xor    ebx,ebx
  42426b:	cmp    esi,ebx
  42426d:	mov    DWORD PTR [ebp-0x4],eax
  424270:	push   edi
  424271:	je     0x4243cb
  424277:	xor    edx,edx
  424279:	xor    eax,eax
  42427b:	cmp    DWORD PTR [eax+0x465670],esi
  424281:	je     0x4242e8
  424283:	add    eax,0x30
  424286:	inc    edx
  424287:	cmp    eax,0xf0
  42428c:	jb     0x42427b
  42428e:	lea    eax,[ebp-0x1c]
  424291:	push   eax
  424292:	push   esi
  424293:	call   DWORD PTR ds:0x4280dc
  424299:	cmp    eax,0x1
  42429c:	jne    0x4243c3
  4242a2:	push   0x40
  4242a4:	xor    eax,eax
  4242a6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4242aa:	pop    ecx
  4242ab:	mov    edi,0x466160
  4242b0:	rep stos DWORD PTR es:[edi],eax
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	mov    DWORD PTR ds:0x466264,esi
  4242b9:	mov    DWORD PTR ds:0x466154,ebx
  4242bf:	jbe    0x4243b1
  4242c5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242c9:	je     0x424389
  4242cf:	lea    ecx,[ebp-0x15]
  4242d2:	mov    dl,BYTE PTR [ecx]
  4242d4:	test   dl,dl
  4242d6:	je     0x424389
  4242dc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242e0:	movzx  edx,dl
  4242e3:	jmp    0x424379
  4242e8:	push   0x40
  4242ea:	xor    eax,eax
  4242ec:	pop    ecx
  4242ed:	mov    edi,0x466160
  4242f2:	rep stos DWORD PTR es:[edi],eax
  4242f4:	lea    ecx,[edx+edx*2]
  4242f7:	shl    ecx,0x4
  4242fa:	mov    DWORD PTR [ebp-0x8],ebx
  4242fd:	stos   BYTE PTR es:[edi],al
  4242fe:	lea    ebx,[ecx+0x465680]
  424304:	mov    al,BYTE PTR [ebx]
  424306:	mov    esi,ebx
  424308:	jmp    0x424333
  42430a:	mov    dl,BYTE PTR [esi+0x1]
  42430d:	test   dl,dl
  42430f:	je     0x424337
  424311:	movzx  eax,al
  424314:	movzx  edi,dl
  424317:	cmp    eax,edi
  424319:	ja     0x42432f
  42431b:	mov    edx,DWORD PTR [ebp-0x8]
  42431e:	mov    dl,BYTE PTR [edx+0x465668]
  424324:	or     BYTE PTR [eax+0x466161],dl
  42432a:	inc    eax
  42432b:	cmp    eax,edi
  42432d:	jbe    0x424324
  42432f:	inc    esi
  424330:	inc    esi
  424331:	mov    al,BYTE PTR [esi]
  424333:	test   al,al
  424335:	jne    0x42430a
  424337:	inc    DWORD PTR [ebp-0x8]
  42433a:	add    ebx,0x8
  42433d:	cmp    DWORD PTR [ebp-0x8],0x4
  424341:	jb     0x424304
  424343:	mov    eax,DWORD PTR [ebp+0x8]
  424346:	mov    ds:0x466264,eax
  42434b:	mov    DWORD PTR ds:0x46615c,0x1
  424355:	call   0x42406c
  42435a:	lea    ecx,[ecx+0x465674]
  424360:	mov    esi,ecx
  424362:	mov    edi,0x466270
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424369:	mov    ds:0x466154,eax
  42436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436f:	jmp    0x4243d0
  424371:	or     BYTE PTR [eax+0x466161],0x4
  424378:	inc    eax
  424379:	cmp    eax,edx
  42437b:	jbe    0x424371
  42437d:	inc    ecx
  42437e:	inc    ecx
  42437f:	cmp    BYTE PTR [ecx-0x1],0x0
  424383:	jne    0x4242d2
  424389:	xor    ecx,ecx
  42438b:	inc    ecx
  42438c:	mov    eax,ecx
  42438e:	or     BYTE PTR [eax+0x466161],0x8
  424395:	inc    eax
  424396:	cmp    eax,0xff
  42439b:	jb     0x42438e
  42439d:	mov    eax,esi
  42439f:	call   0x42406c
  4243a4:	mov    ds:0x466154,eax
  4243a9:	mov    DWORD PTR ds:0x46615c,ecx
  4243af:	jmp    0x4243b7
  4243b1:	mov    DWORD PTR ds:0x46615c,ebx
  4243b7:	xor    eax,eax
  4243b9:	mov    edi,0x466270
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	stos   DWORD PTR es:[edi],eax
  4243c0:	stos   DWORD PTR es:[edi],eax
  4243c1:	jmp    0x4243d0
  4243c3:	cmp    DWORD PTR ds:0x465fc4,ebx
  4243c9:	je     0x4243d9
  4243cb:	call   0x42409b
  4243d0:	call   0x4240c4
  4243d5:	xor    eax,eax
  4243d7:	jmp    0x4243dc
  4243d9:	or     eax,0xffffffff
  4243dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243df:	xor    ecx,DWORD PTR [ebp+0x4]
  4243e2:	pop    edi
  4243e3:	pop    esi
  4243e4:	pop    ebx
  4243e5:	call   0x42401c
  4243ea:	leave  
  4243eb:	ret    
  4243ec:	push   0x14
  4243ee:	push   0x4285a0
  4243f3:	call   0x423950
  4243f8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243fc:	push   0xd
  4243fe:	call   0x423b0f
  424403:	pop    ecx
  424404:	xor    edi,edi
  424406:	mov    DWORD PTR [ebp-0x4],edi
  424409:	mov    DWORD PTR ds:0x465fc4,edi
  42440f:	mov    eax,DWORD PTR [ebp+0x8]
  424412:	cmp    eax,0xfffffffe
  424415:	jne    0x424429
  424417:	mov    DWORD PTR ds:0x465fc4,0x1
  424421:	call   DWORD PTR ds:0x4280d8
  424427:	jmp    0x424454
  424429:	cmp    eax,0xfffffffd
  42442c:	jne    0x424440
  42442e:	mov    DWORD PTR ds:0x465fc4,0x1
  424438:	call   DWORD PTR ds:0x4280d4
  42443e:	jmp    0x424454
  424440:	cmp    eax,0xfffffffc
  424443:	jne    0x424454
  424445:	mov    DWORD PTR ds:0x465fc4,0x1
  42444f:	mov    eax,ds:0x465ff4
  424454:	mov    DWORD PTR [ebp+0x8],eax
  424457:	cmp    eax,DWORD PTR ds:0x466264
  42445d:	je     0x42451e
  424463:	mov    esi,DWORD PTR ds:0x466158
  424469:	mov    DWORD PTR [ebp-0x20],esi
  42446c:	cmp    esi,edi
  42446e:	je     0x424474
  424470:	cmp    DWORD PTR [esi],edi
  424472:	je     0x424484
  424474:	push   0x220
  424479:	call   0x424672
  42447e:	pop    ecx
  42447f:	mov    esi,eax
  424481:	mov    DWORD PTR [ebp-0x20],esi
  424484:	cmp    esi,edi
  424486:	je     0x424507
  424488:	push   DWORD PTR [ebp+0x8]
  42448b:	call   0x424256
  424490:	pop    ecx
  424491:	mov    DWORD PTR [ebp-0x1c],eax
  424494:	cmp    eax,edi
  424496:	jne    0x424507
  424498:	mov    DWORD PTR [esi],edi
  42449a:	mov    eax,ds:0x466264
  42449f:	mov    DWORD PTR [esi+0x4],eax
  4244a2:	mov    eax,ds:0x46615c
  4244a7:	mov    DWORD PTR [esi+0x8],eax
  4244aa:	mov    eax,ds:0x466154
  4244af:	mov    DWORD PTR [esi+0xc],eax
  4244b2:	xor    eax,eax
  4244b4:	mov    DWORD PTR [ebp-0x24],eax
  4244b7:	cmp    eax,0x5
  4244ba:	jge    0x4244cc
  4244bc:	mov    cx,WORD PTR [eax*2+0x466270]
  4244c4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244c9:	inc    eax
  4244ca:	jmp    0x4244b4
  4244cc:	xor    eax,eax
  4244ce:	mov    DWORD PTR [ebp-0x24],eax
  4244d1:	cmp    eax,0x101
  4244d6:	jge    0x4244e5
  4244d8:	mov    cl,BYTE PTR [eax+0x466160]
  4244de:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244e2:	inc    eax
  4244e3:	jmp    0x4244ce
  4244e5:	xor    eax,eax
  4244e7:	mov    DWORD PTR [ebp-0x24],eax
  4244ea:	cmp    eax,0x100
  4244ef:	jge    0x424501
  4244f1:	mov    cl,BYTE PTR [eax+0x466280]
  4244f7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244fe:	inc    eax
  4244ff:	jmp    0x4244e7
  424501:	mov    DWORD PTR ds:0x466158,esi
  424507:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42450b:	jne    0x424521
  42450d:	cmp    esi,DWORD PTR ds:0x466158
  424513:	je     0x424521
  424515:	push   esi
  424516:	call   0x42455a
  42451b:	pop    ecx
  42451c:	jmp    0x424521
  42451e:	mov    DWORD PTR [ebp-0x1c],edi
  424521:	or     DWORD PTR [ebp-0x4],0xffffffff
  424525:	call   0x424533
  42452a:	mov    eax,DWORD PTR [ebp-0x1c]
  42452d:	call   0x42398b
  424532:	ret    
  424533:	push   0xd
  424535:	call   0x423a7b
  42453a:	pop    ecx
  42453b:	ret    
  42453c:	cmp    DWORD PTR ds:0x4664ac,0x0
  424543:	jne    0x424557
  424545:	push   0xfffffffd
  424547:	call   0x4243ec
  42454c:	pop    ecx
  42454d:	mov    DWORD PTR ds:0x4664ac,0x1
  424557:	xor    eax,eax
  424559:	ret    
  42455a:	push   0xc
  42455c:	push   0x4285b0
  424561:	call   0x423950
  424566:	mov    esi,DWORD PTR [ebp+0x8]
  424569:	test   esi,esi
  42456b:	je     0x4245c5
  42456d:	cmp    DWORD PTR ds:0x466384,0x3
  424574:	jne    0x4245b6
  424576:	push   0x4
  424578:	call   0x423b0f
  42457d:	pop    ecx
  42457e:	and    DWORD PTR [ebp-0x4],0x0
  424582:	push   esi
  424583:	call   0x424d32
  424588:	pop    ecx
  424589:	mov    DWORD PTR [ebp-0x1c],eax
  42458c:	test   eax,eax
  42458e:	je     0x424599
  424590:	push   esi
  424591:	push   eax
  424592:	call   0x424d5d
  424597:	pop    ecx
  424598:	pop    ecx
  424599:	or     DWORD PTR [ebp-0x4],0xffffffff
  42459d:	call   0x4245ad
  4245a2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4245a6:	jne    0x4245c5
  4245a8:	push   DWORD PTR [ebp+0x8]
  4245ab:	jmp    0x4245b7
  4245ad:	push   0x4
  4245af:	call   0x423a7b
  4245b4:	pop    ecx
  4245b5:	ret    
  4245b6:	push   esi
  4245b7:	push   0x0
  4245b9:	push   DWORD PTR ds:0x466380
  4245bf:	call   DWORD PTR ds:0x4280c4
  4245c5:	call   0x42398b
  4245ca:	ret    
  4245cb:	push   0xc
  4245cd:	push   0x4285c0
  4245d2:	call   0x423950
  4245d7:	mov    esi,DWORD PTR [ebp+0x8]
  4245da:	cmp    DWORD PTR ds:0x466384,0x3
  4245e1:	jne    0x424611
  4245e3:	cmp    esi,DWORD PTR ds:0x466144
  4245e9:	ja     0x424611
  4245eb:	push   0x4
  4245ed:	call   0x423b0f
  4245f2:	pop    ecx
  4245f3:	and    DWORD PTR [ebp-0x4],0x0
  4245f7:	push   esi
  4245f8:	call   0x425511
  4245fd:	pop    ecx
  4245fe:	mov    DWORD PTR [ebp-0x1c],eax
  424601:	or     DWORD PTR [ebp-0x4],0xffffffff
  424605:	call   0x42463d
  42460a:	mov    eax,DWORD PTR [ebp-0x1c]
  42460d:	test   eax,eax
  42460f:	jne    0x424634
  424611:	test   esi,esi
  424613:	jne    0x424616
  424615:	inc    esi
  424616:	cmp    DWORD PTR ds:0x466384,0x1
  42461d:	je     0x424625
  42461f:	add    esi,0xf
  424622:	and    esi,0xfffffff0
  424625:	push   esi
  424626:	push   0x0
  424628:	push   DWORD PTR ds:0x466380
  42462e:	call   DWORD PTR ds:0x428030
  424634:	call   0x42398b
  424639:	ret    
  42463a:	mov    esi,DWORD PTR [ebp+0x8]
  42463d:	push   0x4
  42463f:	call   0x423a7b
  424644:	pop    ecx
  424645:	ret    
  424646:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42464b:	ja     0x42466f
  42464d:	push   DWORD PTR [esp+0x4]
  424651:	call   0x4245cb
  424656:	test   eax,eax
  424658:	pop    ecx
  424659:	jne    0x424671
  42465b:	cmp    DWORD PTR [esp+0x8],eax
  42465f:	je     0x424671
  424661:	push   DWORD PTR [esp+0x4]
  424665:	call   0x426232
  42466a:	test   eax,eax
  42466c:	pop    ecx
  42466d:	jne    0x42464d
  42466f:	xor    eax,eax
  424671:	ret    
  424672:	push   DWORD PTR ds:0x466008
  424678:	push   DWORD PTR [esp+0x8]
  42467c:	call   0x424646
  424681:	pop    ecx
  424682:	pop    ecx
  424683:	ret    
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	int3   
  424688:	int3   
  424689:	int3   
  42468a:	int3   
  42468b:	int3   
  42468c:	int3   
  42468d:	int3   
  42468e:	int3   
  42468f:	int3   
  424690:	push   ebp
  424691:	mov    ebp,esp
  424693:	push   edi
  424694:	push   esi
  424695:	mov    esi,DWORD PTR [ebp+0xc]
  424698:	mov    ecx,DWORD PTR [ebp+0x10]
  42469b:	mov    edi,DWORD PTR [ebp+0x8]
  42469e:	mov    eax,ecx
  4246a0:	mov    edx,ecx
  4246a2:	add    eax,esi
  4246a4:	cmp    edi,esi
  4246a6:	jbe    0x4246b0
  4246a8:	cmp    edi,eax
  4246aa:	jb     0x42482c
  4246b0:	test   edi,0x3
  4246b6:	jne    0x4246cc
  4246b8:	shr    ecx,0x2
  4246bb:	and    edx,0x3
  4246be:	cmp    ecx,0x8
  4246c1:	jb     0x4246ec
  4246c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c5:	jmp    DWORD PTR [edx*4+0x4247dc]
  4246cc:	mov    eax,edi
  4246ce:	mov    edx,0x3
  4246d3:	sub    ecx,0x4
  4246d6:	jb     0x4246e4
  4246d8:	and    eax,0x3
  4246db:	add    ecx,eax
  4246dd:	jmp    DWORD PTR [eax*4+0x4246f0]
  4246e4:	jmp    DWORD PTR [ecx*4+0x4247ec]
  4246eb:	nop
  4246ec:	jmp    DWORD PTR [ecx*4+0x424770]
  4246f3:	nop
  4246f4:	add    BYTE PTR [edi+0x42],al
  4246f7:	add    BYTE PTR [edi+eax*2],ch
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [eax+0x47],dl
  4246fe:	inc    edx
  4246ff:	add    BYTE PTR [ebx],ah
  424701:	ror    DWORD PTR [edx-0x75f877fa],1
  424707:	inc    esi
  424708:	add    DWORD PTR [eax+0x468a0147],ecx
  42470e:	add    al,cl
  424710:	jmp    0x289cf17
  424715:	add    esi,0x3
  424718:	add    edi,0x3
  42471b:	cmp    ecx,0x8
  42471e:	jb     0x4246ec
  424720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	jmp    DWORD PTR [edx*4+0x4247dc]
  424729:	lea    ecx,[ecx+0x0]
  42472c:	and    edx,ecx
  42472e:	mov    al,BYTE PTR [esi]
  424730:	mov    BYTE PTR [edi],al
  424732:	mov    al,BYTE PTR [esi+0x1]
  424735:	shr    ecx,0x2
  424738:	mov    BYTE PTR [edi+0x1],al
  42473b:	add    esi,0x2
  42473e:	add    edi,0x2
  424741:	cmp    ecx,0x8
  424744:	jb     0x4246ec
  424746:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	jmp    DWORD PTR [edx*4+0x4247dc]
  42474f:	nop
  424750:	and    edx,ecx
  424752:	mov    al,BYTE PTR [esi]
  424754:	mov    BYTE PTR [edi],al
  424756:	add    esi,0x1
  424759:	shr    ecx,0x2
  42475c:	add    edi,0x1
  42475f:	cmp    ecx,0x8
  424762:	jb     0x4246ec
  424764:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	jmp    DWORD PTR [edx*4+0x4247dc]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	rol    DWORD PTR [edi+0x42],cl
  424773:	add    al,al
  424775:	inc    edi
  424776:	inc    edx
  424777:	add    BYTE PTR [eax-0x4fffbdb9],bh
  42477d:	inc    edi
  42477e:	inc    edx
  42477f:	add    BYTE PTR [eax-0x5fffbdb9],ch
  424785:	inc    edi
  424786:	inc    edx
  424787:	add    BYTE PTR [eax-0x6fffbdb9],bl
  42478d:	inc    edi
  42478e:	inc    edx
  42478f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424795:	inc    esp
  424796:	(bad)  
  424797:	in     al,0x8b
  424799:	inc    esp
  42479a:	mov    gs,eax
  42479c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247c8:	lea    eax,[ecx*4+0x0]
  4247cf:	add    esi,eax
  4247d1:	add    edi,eax
  4247d3:	jmp    DWORD PTR [edx*4+0x4247dc]
  4247da:	mov    edi,edi
  4247dc:	in     al,dx
  4247dd:	inc    edi
  4247de:	inc    edx
  4247df:	add    ah,dh
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],al
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax+ecx*2],dl
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247f1:	leave  
  4247f2:	ret    
  4247f3:	nop
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    eax,DWORD PTR [ebp+0x8]
  4247fb:	pop    esi
  4247fc:	pop    edi
  4247fd:	leave  
  4247fe:	ret    
  4247ff:	nop
  424800:	mov    al,BYTE PTR [esi]
  424802:	mov    BYTE PTR [edi],al
  424804:	mov    al,BYTE PTR [esi+0x1]
  424807:	mov    BYTE PTR [edi+0x1],al
  42480a:	mov    eax,DWORD PTR [ebp+0x8]
  42480d:	pop    esi
  42480e:	pop    edi
  42480f:	leave  
  424810:	ret    
  424811:	lea    ecx,[ecx+0x0]
  424814:	mov    al,BYTE PTR [esi]
  424816:	mov    BYTE PTR [edi],al
  424818:	mov    al,BYTE PTR [esi+0x1]
  42481b:	mov    BYTE PTR [edi+0x1],al
  42481e:	mov    al,BYTE PTR [esi+0x2]
  424821:	mov    BYTE PTR [edi+0x2],al
  424824:	mov    eax,DWORD PTR [ebp+0x8]
  424827:	pop    esi
  424828:	pop    edi
  424829:	leave  
  42482a:	ret    
  42482b:	nop
  42482c:	lea    esi,[ecx+esi*1-0x4]
  424830:	lea    edi,[ecx+edi*1-0x4]
  424834:	test   edi,0x3
  42483a:	jne    0x424860
  42483c:	shr    ecx,0x2
  42483f:	and    edx,0x3
  424842:	cmp    ecx,0x8
  424845:	jb     0x424854
  424847:	std    
  424848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	cld    
  42484b:	jmp    DWORD PTR [edx*4+0x424978]
  424852:	mov    edi,edi
  424854:	neg    ecx
  424856:	jmp    DWORD PTR [ecx*4+0x424928]
  42485d:	lea    ecx,[ecx+0x0]
  424860:	mov    eax,edi
  424862:	mov    edx,0x3
  424867:	cmp    ecx,0x4
  42486a:	jb     0x424878
  42486c:	and    eax,0x3
  42486f:	sub    ecx,eax
  424871:	jmp    DWORD PTR [eax*4+0x42487c]
  424878:	jmp    DWORD PTR [ecx*4+0x424978]
  42487f:	nop
  424880:	mov    WORD PTR [eax+0x42],cs
  424883:	add    BYTE PTR [eax-0x27ffbdb8],dh
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424891:	mov    BYTE PTR [edi+0x3],al
  424894:	sub    esi,0x1
  424897:	shr    ecx,0x2
  42489a:	sub    edi,0x1
  42489d:	cmp    ecx,0x8
  4248a0:	jb     0x424854
  4248a2:	std    
  4248a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a5:	cld    
  4248a6:	jmp    DWORD PTR [edx*4+0x424978]
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	and    edx,ecx
  4248b5:	mov    BYTE PTR [edi+0x3],al
  4248b8:	mov    al,BYTE PTR [esi+0x2]
  4248bb:	shr    ecx,0x2
  4248be:	mov    BYTE PTR [edi+0x2],al
  4248c1:	sub    esi,0x2
  4248c4:	sub    edi,0x2
  4248c7:	cmp    ecx,0x8
  4248ca:	jb     0x424854
  4248cc:	std    
  4248cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cf:	cld    
  4248d0:	jmp    DWORD PTR [edx*4+0x424978]
  4248d7:	nop
  4248d8:	mov    al,BYTE PTR [esi+0x3]
  4248db:	and    edx,ecx
  4248dd:	mov    BYTE PTR [edi+0x3],al
  4248e0:	mov    al,BYTE PTR [esi+0x2]
  4248e3:	mov    BYTE PTR [edi+0x2],al
  4248e6:	mov    al,BYTE PTR [esi+0x1]
  4248e9:	shr    ecx,0x2
  4248ec:	mov    BYTE PTR [edi+0x1],al
  4248ef:	sub    esi,0x3
  4248f2:	sub    edi,0x3
  4248f5:	cmp    ecx,0x8
  4248f8:	jb     0x424854
  4248fe:	std    
  4248ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424901:	cld    
  424902:	jmp    DWORD PTR [edx*4+0x424978]
  424909:	lea    ecx,[ecx+0x0]
  42490c:	sub    al,0x49
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2],dh
  424912:	inc    edx
  424913:	add    BYTE PTR [ecx+ecx*2],bh
  424916:	inc    edx
  424917:	add    BYTE PTR [ecx+ecx*2+0x42],al
  42491b:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  42491f:	add    BYTE PTR [ecx+ecx*2+0x42],dl
  424923:	add    BYTE PTR [ecx+ecx*2+0x42],bl
  424927:	add    BYTE PTR [edi+0x49],ch
  42492a:	inc    edx
  42492b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424931:	inc    esp
  424932:	(bad)  
  424933:	sbb    al,0x8b
  424935:	inc    esp
  424936:	mov    ds,WORD PTR [eax]
  424938:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424940:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424948:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424950:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424954:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424958:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42495c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424960:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424964:	lea    eax,[ecx*4+0x0]
  42496b:	add    esi,eax
  42496d:	add    edi,eax
  42496f:	jmp    DWORD PTR [edx*4+0x424978]
  424976:	mov    edi,edi
  424978:	mov    BYTE PTR [ecx+0x42],cl
  42497b:	add    BYTE PTR [eax-0x5fffbdb7],dl
  424981:	dec    ecx
  424982:	inc    edx
  424983:	add    BYTE PTR [ecx+ecx*2+0x458b0042],dh
  42498a:	or     BYTE PTR [esi+0x5f],bl
  42498d:	leave  
  42498e:	ret    
  42498f:	nop
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	pop    esi
  42499a:	pop    edi
  42499b:	leave  
  42499c:	ret    
  42499d:	lea    ecx,[ecx+0x0]
  4249a0:	mov    al,BYTE PTR [esi+0x3]
  4249a3:	mov    BYTE PTR [edi+0x3],al
  4249a6:	mov    al,BYTE PTR [esi+0x2]
  4249a9:	mov    BYTE PTR [edi+0x2],al
  4249ac:	mov    eax,DWORD PTR [ebp+0x8]
  4249af:	pop    esi
  4249b0:	pop    edi
  4249b1:	leave  
  4249b2:	ret    
  4249b3:	nop
  4249b4:	mov    al,BYTE PTR [esi+0x3]
  4249b7:	mov    BYTE PTR [edi+0x3],al
  4249ba:	mov    al,BYTE PTR [esi+0x2]
  4249bd:	mov    BYTE PTR [edi+0x2],al
  4249c0:	mov    al,BYTE PTR [esi+0x1]
  4249c3:	mov    BYTE PTR [edi+0x1],al
  4249c6:	mov    eax,DWORD PTR [ebp+0x8]
  4249c9:	pop    esi
  4249ca:	pop    edi
  4249cb:	leave  
  4249cc:	ret    
  4249cd:	push   DWORD PTR [esp+0x4]
  4249d1:	call   DWORD PTR ds:0x4280e0
  4249d7:	xor    eax,eax
  4249d9:	inc    eax
  4249da:	ret    0x8
  4249dd:	push   0x10
  4249df:	push   0x428608
  4249e4:	call   0x423950
  4249e9:	mov    eax,ds:0x465fc8
  4249ee:	test   eax,eax
  4249f0:	jne    0x424a29
  4249f2:	cmp    DWORD PTR ds:0x465d04,0x1
  4249f9:	je     0x424a1f
  4249fb:	push   0x4285f4
  424a00:	call   DWORD PTR ds:0x428044
  424a06:	test   eax,eax
  424a08:	je     0x424a1f
  424a0a:	push   0x4285cc
  424a0f:	push   eax
  424a10:	call   DWORD PTR ds:0x428040
  424a16:	mov    ds:0x465fc8,eax
  424a1b:	test   eax,eax
  424a1d:	jne    0x424a29
  424a1f:	mov    eax,0x4249cd
  424a24:	mov    ds:0x465fc8,eax
  424a29:	and    DWORD PTR [ebp-0x4],0x0
  424a2d:	push   DWORD PTR [ebp+0xc]
  424a30:	push   DWORD PTR [ebp+0x8]
  424a33:	call   eax
  424a35:	mov    DWORD PTR [ebp-0x1c],eax
  424a38:	jmp    0x424a5e
  424a3a:	mov    eax,DWORD PTR [ebp-0x14]
  424a3d:	mov    eax,DWORD PTR [eax]
  424a3f:	mov    eax,DWORD PTR [eax]
  424a41:	mov    DWORD PTR [ebp-0x20],eax
  424a44:	xor    eax,eax
  424a46:	inc    eax
  424a47:	ret    
  424a48:	mov    esp,DWORD PTR [ebp-0x18]
  424a4b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a52:	jne    0x424a5c
  424a54:	push   0x8
  424a56:	call   DWORD PTR ds:0x4280a8
  424a5c:	xor    eax,eax
  424a5e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a62:	call   0x42398b
  424a67:	ret    
  424a68:	push   0x10
  424a6a:	push   0x428618
  424a6f:	call   0x423950
  424a74:	mov    esi,DWORD PTR [ebp+0x8]
  424a77:	imul   esi,DWORD PTR [ebp+0xc]
  424a7b:	mov    DWORD PTR [ebp-0x1c],esi
  424a7e:	test   esi,esi
  424a80:	jne    0x424a83
  424a82:	inc    esi
  424a83:	xor    edi,edi
  424a85:	mov    DWORD PTR [ebp-0x20],edi
  424a88:	cmp    esi,0xffffffe0
  424a8b:	ja     0x424af2
  424a8d:	cmp    DWORD PTR ds:0x466384,0x3
  424a94:	jne    0x424add
  424a96:	add    esi,0xf
  424a99:	and    esi,0xfffffff0
  424a9c:	mov    DWORD PTR [ebp+0xc],esi
  424a9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424aa2:	cmp    ebx,DWORD PTR ds:0x466144
  424aa8:	ja     0x424add
  424aaa:	push   0x4
  424aac:	call   0x423b0f
  424ab1:	pop    ecx
  424ab2:	and    DWORD PTR [ebp-0x4],edi
  424ab5:	push   ebx
  424ab6:	call   0x425511
  424abb:	pop    ecx
  424abc:	mov    DWORD PTR [ebp-0x20],eax
  424abf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ac3:	call   0x424b12
  424ac8:	mov    edi,DWORD PTR [ebp-0x20]
  424acb:	test   edi,edi
  424acd:	je     0x424ae1
  424acf:	push   DWORD PTR [ebp-0x1c]
  424ad2:	push   0x0
  424ad4:	push   edi
  424ad5:	call   0x426250
  424ada:	add    esp,0xc
  424add:	test   edi,edi
  424adf:	jne    0x424b1b
  424ae1:	push   esi
  424ae2:	push   0x8
  424ae4:	push   DWORD PTR ds:0x466380
  424aea:	call   DWORD PTR ds:0x428030
  424af0:	mov    edi,eax
  424af2:	test   edi,edi
  424af4:	jne    0x424b1b
  424af6:	cmp    DWORD PTR ds:0x466008,edi
  424afc:	je     0x424b1b
  424afe:	push   esi
  424aff:	call   0x426232
  424b04:	pop    ecx
  424b05:	test   eax,eax
  424b07:	jne    0x424a83
  424b0d:	jmp    0x424b1d
  424b0f:	mov    esi,DWORD PTR [ebp+0xc]
  424b12:	push   0x4
  424b14:	call   0x423a7b
  424b19:	pop    ecx
  424b1a:	ret    
  424b1b:	mov    eax,edi
  424b1d:	call   0x42398b
  424b22:	ret    
  424b23:	push   esi
  424b24:	mov    esi,DWORD PTR [esp+0x8]
  424b28:	mov    eax,DWORD PTR [esi+0x3c]
  424b2b:	push   edi
  424b2c:	xor    edi,edi
  424b2e:	cmp    eax,DWORD PTR ds:0x466014
  424b34:	je     0x424b99
  424b36:	cmp    eax,edi
  424b38:	je     0x424b99
  424b3a:	mov    eax,DWORD PTR [esi+0x2c]
  424b3d:	cmp    DWORD PTR [eax],edi
  424b3f:	jne    0x424b99
  424b41:	mov    eax,DWORD PTR [esi+0x34]
  424b44:	cmp    eax,edi
  424b46:	je     0x424b64
  424b48:	cmp    DWORD PTR [eax],edi
  424b4a:	jne    0x424b64
  424b4c:	cmp    eax,DWORD PTR ds:0x466130
  424b52:	je     0x424b64
  424b54:	push   eax
  424b55:	call   0x42455a
  424b5a:	push   DWORD PTR [esi+0x3c]
  424b5d:	call   0x42649f
  424b62:	pop    ecx
  424b63:	pop    ecx
  424b64:	mov    eax,DWORD PTR [esi+0x30]
  424b67:	cmp    eax,edi
  424b69:	je     0x424b87
  424b6b:	cmp    DWORD PTR [eax],edi
  424b6d:	jne    0x424b87
  424b6f:	cmp    eax,DWORD PTR ds:0x466134
  424b75:	je     0x424b87
  424b77:	push   eax
  424b78:	call   0x42455a
  424b7d:	push   DWORD PTR [esi+0x3c]
  424b80:	call   0x426440
  424b85:	pop    ecx
  424b86:	pop    ecx
  424b87:	push   DWORD PTR [esi+0x2c]
  424b8a:	call   0x42455a
  424b8f:	push   DWORD PTR [esi+0x3c]
  424b92:	call   0x42455a
  424b97:	pop    ecx
  424b98:	pop    ecx
  424b99:	mov    eax,DWORD PTR [esi+0x40]
  424b9c:	cmp    eax,DWORD PTR ds:0x46612c
  424ba2:	je     0x424bbc
  424ba4:	cmp    eax,edi
  424ba6:	je     0x424bbc
  424ba8:	cmp    DWORD PTR [eax],edi
  424baa:	jne    0x424bbc
  424bac:	push   eax
  424bad:	call   0x42455a
  424bb2:	push   DWORD PTR [esi+0x44]
  424bb5:	call   0x42455a
  424bba:	pop    ecx
  424bbb:	pop    ecx
  424bbc:	mov    eax,DWORD PTR [esi+0x50]
  424bbf:	cmp    eax,DWORD PTR ds:0x466010
  424bc5:	je     0x424be3
  424bc7:	cmp    eax,edi
  424bc9:	je     0x424be3
  424bcb:	cmp    DWORD PTR [eax+0xb4],edi
  424bd1:	jne    0x424be3
  424bd3:	push   eax
  424bd4:	call   0x4262b0
  424bd9:	push   DWORD PTR [esi+0x50]
  424bdc:	call   0x42455a
  424be1:	pop    ecx
  424be2:	pop    ecx
  424be3:	push   esi
  424be4:	call   0x42455a
  424be9:	pop    ecx
  424bea:	pop    edi
  424beb:	pop    esi
  424bec:	ret    
  424bed:	push   esi
  424bee:	call   0x423803
  424bf3:	mov    esi,eax
  424bf5:	mov    eax,DWORD PTR [esi+0x64]
  424bf8:	cmp    eax,DWORD PTR ds:0x4657bc
  424bfe:	je     0x424caa
  424c04:	test   eax,eax
  424c06:	je     0x424c37
  424c08:	mov    ecx,DWORD PTR [eax+0x2c]
  424c0b:	dec    DWORD PTR [eax]
  424c0d:	test   ecx,ecx
  424c0f:	je     0x424c13
  424c11:	dec    DWORD PTR [ecx]
  424c13:	mov    ecx,DWORD PTR [eax+0x34]
  424c16:	test   ecx,ecx
  424c18:	je     0x424c1c
  424c1a:	dec    DWORD PTR [ecx]
  424c1c:	mov    ecx,DWORD PTR [eax+0x30]
  424c1f:	test   ecx,ecx
  424c21:	je     0x424c25
  424c23:	dec    DWORD PTR [ecx]
  424c25:	mov    ecx,DWORD PTR [eax+0x40]
  424c28:	test   ecx,ecx
  424c2a:	je     0x424c2e
  424c2c:	dec    DWORD PTR [ecx]
  424c2e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c31:	dec    DWORD PTR [ecx+0xb4]
  424c37:	mov    ecx,DWORD PTR ds:0x4657bc
  424c3d:	mov    DWORD PTR [esi+0x64],ecx
  424c40:	mov    ecx,DWORD PTR ds:0x4657bc
  424c46:	inc    DWORD PTR [ecx]
  424c48:	mov    ecx,DWORD PTR ds:0x4657bc
  424c4e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c51:	test   ecx,ecx
  424c53:	je     0x424c57
  424c55:	inc    DWORD PTR [ecx]
  424c57:	mov    ecx,DWORD PTR ds:0x4657bc
  424c5d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c60:	test   ecx,ecx
  424c62:	je     0x424c66
  424c64:	inc    DWORD PTR [ecx]
  424c66:	mov    ecx,DWORD PTR ds:0x4657bc
  424c6c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c6f:	test   ecx,ecx
  424c71:	je     0x424c75
  424c73:	inc    DWORD PTR [ecx]
  424c75:	mov    ecx,DWORD PTR ds:0x4657bc
  424c7b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c7e:	test   ecx,ecx
  424c80:	je     0x424c84
  424c82:	inc    DWORD PTR [ecx]
  424c84:	mov    ecx,DWORD PTR ds:0x4657bc
  424c8a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c8d:	inc    DWORD PTR [ecx+0xb4]
  424c93:	test   eax,eax
  424c95:	je     0x424caa
  424c97:	cmp    DWORD PTR [eax],0x0
  424c9a:	jne    0x424caa
  424c9c:	cmp    eax,0x465768
  424ca1:	je     0x424caa
  424ca3:	push   eax
  424ca4:	call   0x424b23
  424ca9:	pop    ecx
  424caa:	mov    eax,DWORD PTR [esi+0x64]
  424cad:	pop    esi
  424cae:	ret    
  424caf:	push   0xc
  424cb1:	push   0x4287a8
  424cb6:	call   0x423950
  424cbb:	push   0xc
  424cbd:	call   0x423b0f
  424cc2:	pop    ecx
  424cc3:	and    DWORD PTR [ebp-0x4],0x0
  424cc7:	call   0x424bed
  424ccc:	mov    DWORD PTR [ebp-0x1c],eax
  424ccf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cd3:	call   0x424ce1
  424cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cdb:	call   0x42398b
  424ce0:	ret    
  424ce1:	push   0xc
  424ce3:	call   0x423a7b
  424ce8:	pop    ecx
  424ce9:	ret    
  424cea:	push   0x140
  424cef:	push   0x0
  424cf1:	push   DWORD PTR ds:0x466380
  424cf7:	call   DWORD PTR ds:0x428030
  424cfd:	test   eax,eax
  424cff:	mov    ds:0x466140,eax
  424d04:	jne    0x424d07
  424d06:	ret    
  424d07:	mov    ecx,DWORD PTR [esp+0x4]
  424d0b:	and    DWORD PTR ds:0x466138,0x0
  424d12:	and    DWORD PTR ds:0x46613c,0x0
  424d19:	mov    ds:0x466148,eax
  424d1e:	xor    eax,eax
  424d20:	mov    DWORD PTR ds:0x466144,ecx
  424d26:	mov    DWORD PTR ds:0x46614c,0x10
  424d30:	inc    eax
  424d31:	ret    
  424d32:	mov    eax,ds:0x46613c
  424d37:	lea    ecx,[eax+eax*4]
  424d3a:	mov    eax,ds:0x466140
  424d3f:	lea    ecx,[eax+ecx*4]
  424d42:	jmp    0x424d56
  424d44:	mov    edx,DWORD PTR [esp+0x4]
  424d48:	sub    edx,DWORD PTR [eax+0xc]
  424d4b:	cmp    edx,0x100000
  424d51:	jb     0x424d5c
  424d53:	add    eax,0x14
  424d56:	cmp    eax,ecx
  424d58:	jb     0x424d44
  424d5a:	xor    eax,eax
  424d5c:	ret    
  424d5d:	push   ebp
  424d5e:	mov    ebp,esp
  424d60:	sub    esp,0x10
  424d63:	mov    ecx,DWORD PTR [ebp+0x8]
  424d66:	mov    eax,DWORD PTR [ecx+0x10]
  424d69:	push   esi
  424d6a:	mov    esi,DWORD PTR [ebp+0xc]
  424d6d:	push   edi
  424d6e:	mov    edi,esi
  424d70:	sub    edi,DWORD PTR [ecx+0xc]
  424d73:	add    esi,0xfffffffc
  424d76:	shr    edi,0xf
  424d79:	mov    ecx,edi
  424d7b:	imul   ecx,ecx,0x204
  424d81:	lea    ecx,[ecx+eax*1+0x144]
  424d88:	mov    DWORD PTR [ebp-0x10],ecx
  424d8b:	mov    ecx,DWORD PTR [esi]
  424d8d:	dec    ecx
  424d8e:	test   cl,0x1
  424d91:	mov    DWORD PTR [ebp-0x4],ecx
  424d94:	jne    0x425071
  424d9a:	push   ebx
  424d9b:	lea    ebx,[ecx+esi*1]
  424d9e:	mov    edx,DWORD PTR [ebx]
  424da0:	mov    DWORD PTR [ebp-0xc],edx
  424da3:	mov    edx,DWORD PTR [esi-0x4]
  424da6:	mov    DWORD PTR [ebp-0x8],edx
  424da9:	mov    edx,DWORD PTR [ebp-0xc]
  424dac:	test   dl,0x1
  424daf:	mov    DWORD PTR [ebp+0xc],ebx
  424db2:	jne    0x424e28
  424db4:	sar    edx,0x4
  424db7:	dec    edx
  424db8:	cmp    edx,0x3f
  424dbb:	jbe    0x424dc0
  424dbd:	push   0x3f
  424dbf:	pop    edx
  424dc0:	mov    ecx,DWORD PTR [ebx+0x4]
  424dc3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424dc6:	jne    0x424e0a
  424dc8:	cmp    edx,0x20
  424dcb:	mov    ebx,0x80000000
  424dd0:	jae    0x424deb
  424dd2:	mov    ecx,edx
  424dd4:	shr    ebx,cl
  424dd6:	lea    ecx,[edx+eax*1+0x4]
  424dda:	not    ebx
  424ddc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424de0:	dec    BYTE PTR [ecx]
  424de2:	jne    0x424e07
  424de4:	mov    ecx,DWORD PTR [ebp+0x8]
  424de7:	and    DWORD PTR [ecx],ebx
  424de9:	jmp    0x424e07
  424deb:	lea    ecx,[edx-0x20]
  424dee:	shr    ebx,cl
  424df0:	lea    ecx,[edx+eax*1+0x4]
  424df4:	not    ebx
  424df6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424dfd:	dec    BYTE PTR [ecx]
  424dff:	jne    0x424e07
  424e01:	mov    ecx,DWORD PTR [ebp+0x8]
  424e04:	and    DWORD PTR [ecx+0x4],ebx
  424e07:	mov    ebx,DWORD PTR [ebp+0xc]
  424e0a:	mov    edx,DWORD PTR [ebx+0x8]
  424e0d:	mov    ebx,DWORD PTR [ebx+0x4]
  424e10:	mov    ecx,DWORD PTR [ebp-0x4]
  424e13:	add    ecx,DWORD PTR [ebp-0xc]
  424e16:	mov    DWORD PTR [edx+0x4],ebx
  424e19:	mov    edx,DWORD PTR [ebp+0xc]
  424e1c:	mov    ebx,DWORD PTR [edx+0x4]
  424e1f:	mov    edx,DWORD PTR [edx+0x8]
  424e22:	mov    DWORD PTR [ebx+0x8],edx
  424e25:	mov    DWORD PTR [ebp-0x4],ecx
  424e28:	mov    edx,ecx
  424e2a:	sar    edx,0x4
  424e2d:	dec    edx
  424e2e:	cmp    edx,0x3f
  424e31:	jbe    0x424e36
  424e33:	push   0x3f
  424e35:	pop    edx
  424e36:	mov    ebx,DWORD PTR [ebp-0x8]
  424e39:	and    ebx,0x1
  424e3c:	mov    DWORD PTR [ebp-0xc],ebx
  424e3f:	jne    0x424ed4
  424e45:	sub    esi,DWORD PTR [ebp-0x8]
  424e48:	mov    ebx,DWORD PTR [ebp-0x8]
  424e4b:	sar    ebx,0x4
  424e4e:	push   0x3f
  424e50:	mov    DWORD PTR [ebp+0xc],esi
  424e53:	dec    ebx
  424e54:	pop    esi
  424e55:	cmp    ebx,esi
  424e57:	jbe    0x424e5b
  424e59:	mov    ebx,esi
  424e5b:	add    ecx,DWORD PTR [ebp-0x8]
  424e5e:	mov    edx,ecx
  424e60:	sar    edx,0x4
  424e63:	dec    edx
  424e64:	cmp    edx,esi
  424e66:	mov    DWORD PTR [ebp-0x4],ecx
  424e69:	jbe    0x424e6d
  424e6b:	mov    edx,esi
  424e6d:	cmp    ebx,edx
  424e6f:	je     0x424ecf
  424e71:	mov    ecx,DWORD PTR [ebp+0xc]
  424e74:	mov    esi,DWORD PTR [ecx+0x4]
  424e77:	cmp    esi,DWORD PTR [ecx+0x8]
  424e7a:	jne    0x424eb7
  424e7c:	cmp    ebx,0x20
  424e7f:	mov    esi,0x80000000
  424e84:	jae    0x424e9d
  424e86:	mov    ecx,ebx
  424e88:	shr    esi,cl
  424e8a:	not    esi
  424e8c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e90:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e94:	jne    0x424eb7
  424e96:	mov    ecx,DWORD PTR [ebp+0x8]
  424e99:	and    DWORD PTR [ecx],esi
  424e9b:	jmp    0x424eb7
  424e9d:	lea    ecx,[ebx-0x20]
  424ea0:	shr    esi,cl
  424ea2:	not    esi
  424ea4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424eab:	dec    BYTE PTR [ebx+eax*1+0x4]
  424eaf:	jne    0x424eb7
  424eb1:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb4:	and    DWORD PTR [ecx+0x4],esi
  424eb7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eba:	mov    esi,DWORD PTR [ecx+0x8]
  424ebd:	mov    ecx,DWORD PTR [ecx+0x4]
  424ec0:	mov    DWORD PTR [esi+0x4],ecx
  424ec3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec6:	mov    esi,DWORD PTR [ecx+0x4]
  424ec9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ecc:	mov    DWORD PTR [esi+0x8],ecx
  424ecf:	mov    esi,DWORD PTR [ebp+0xc]
  424ed2:	jmp    0x424ed7
  424ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ed7:	cmp    DWORD PTR [ebp-0xc],0x0
  424edb:	jne    0x424ee5
  424edd:	cmp    ebx,edx
  424edf:	je     0x424f65
  424ee5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ee8:	lea    ecx,[ecx+edx*8]
  424eeb:	mov    ebx,DWORD PTR [ecx+0x4]
  424eee:	mov    DWORD PTR [esi+0x8],ecx
  424ef1:	mov    DWORD PTR [esi+0x4],ebx
  424ef4:	mov    DWORD PTR [ecx+0x4],esi
  424ef7:	mov    ecx,DWORD PTR [esi+0x4]
  424efa:	mov    DWORD PTR [ecx+0x8],esi
  424efd:	mov    ecx,DWORD PTR [esi+0x4]
  424f00:	cmp    ecx,DWORD PTR [esi+0x8]
  424f03:	jne    0x424f65
  424f05:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424f09:	mov    BYTE PTR [ebp+0xf],cl
  424f0c:	inc    cl
  424f0e:	cmp    edx,0x20
  424f11:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f15:	jae    0x424f3c
  424f17:	cmp    BYTE PTR [ebp+0xf],0x0
  424f1b:	jne    0x424f2b
  424f1d:	mov    ecx,edx
  424f1f:	mov    ebx,0x80000000
  424f24:	shr    ebx,cl
  424f26:	mov    ecx,DWORD PTR [ebp+0x8]
  424f29:	or     DWORD PTR [ecx],ebx
  424f2b:	mov    ebx,0x80000000
  424f30:	mov    ecx,edx
  424f32:	shr    ebx,cl
  424f34:	lea    eax,[eax+edi*4+0x44]
  424f38:	or     DWORD PTR [eax],ebx
  424f3a:	jmp    0x424f65
  424f3c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f40:	jne    0x424f52
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    ebx,0x80000000
  424f4a:	shr    ebx,cl
  424f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f4f:	or     DWORD PTR [ecx+0x4],ebx
  424f52:	lea    ecx,[edx-0x20]
  424f55:	mov    edx,0x80000000
  424f5a:	shr    edx,cl
  424f5c:	lea    eax,[eax+edi*4+0xc4]
  424f63:	or     DWORD PTR [eax],edx
  424f65:	mov    eax,DWORD PTR [ebp-0x4]
  424f68:	mov    DWORD PTR [esi],eax
  424f6a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f6e:	mov    eax,DWORD PTR [ebp-0x10]
  424f71:	dec    DWORD PTR [eax]
  424f73:	jne    0x425070
  424f79:	mov    eax,ds:0x466138
  424f7e:	test   eax,eax
  424f80:	je     0x425062
  424f86:	mov    ecx,DWORD PTR ds:0x466150
  424f8c:	mov    esi,DWORD PTR ds:0x4280c0
  424f92:	push   0x4000
  424f97:	shl    ecx,0xf
  424f9a:	add    ecx,DWORD PTR [eax+0xc]
  424f9d:	mov    ebx,0x8000
  424fa2:	push   ebx
  424fa3:	push   ecx
  424fa4:	call   esi
  424fa6:	mov    ecx,DWORD PTR ds:0x466150
  424fac:	mov    eax,ds:0x466138
  424fb1:	mov    edx,0x80000000
  424fb6:	shr    edx,cl
  424fb8:	or     DWORD PTR [eax+0x8],edx
  424fbb:	mov    eax,ds:0x466138
  424fc0:	mov    eax,DWORD PTR [eax+0x10]
  424fc3:	mov    ecx,DWORD PTR ds:0x466150
  424fc9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fd1:	mov    eax,ds:0x466138
  424fd6:	mov    eax,DWORD PTR [eax+0x10]
  424fd9:	dec    BYTE PTR [eax+0x43]
  424fdc:	mov    eax,ds:0x466138
  424fe1:	mov    ecx,DWORD PTR [eax+0x10]
  424fe4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fe8:	jne    0x424ff3
  424fea:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fee:	mov    eax,ds:0x466138
  424ff3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424ff7:	jne    0x425062
  424ff9:	push   ebx
  424ffa:	push   0x0
  424ffc:	push   DWORD PTR [eax+0xc]
  424fff:	call   esi
  425001:	mov    eax,ds:0x466138
  425006:	push   DWORD PTR [eax+0x10]
  425009:	push   0x0
  42500b:	push   DWORD PTR ds:0x466380
  425011:	call   DWORD PTR ds:0x4280c4
  425017:	mov    eax,ds:0x46613c
  42501c:	mov    edx,DWORD PTR ds:0x466140
  425022:	lea    eax,[eax+eax*4]
  425025:	shl    eax,0x2
  425028:	mov    ecx,eax
  42502a:	mov    eax,ds:0x466138
  42502f:	sub    ecx,eax
  425031:	lea    ecx,[ecx+edx*1-0x14]
  425035:	push   ecx
  425036:	lea    ecx,[eax+0x14]
  425039:	push   ecx
  42503a:	push   eax
  42503b:	call   0x426890
  425040:	mov    eax,DWORD PTR [ebp+0x8]
  425043:	add    esp,0xc
  425046:	dec    DWORD PTR ds:0x46613c
  42504c:	cmp    eax,DWORD PTR ds:0x466138
  425052:	jbe    0x425058
  425054:	sub    DWORD PTR [ebp+0x8],0x14
  425058:	mov    eax,ds:0x466140
  42505d:	mov    ds:0x466148,eax
  425062:	mov    eax,DWORD PTR [ebp+0x8]
  425065:	mov    ds:0x466138,eax
  42506a:	mov    DWORD PTR ds:0x466150,edi
  425070:	pop    ebx
  425071:	pop    edi
  425072:	pop    esi
  425073:	leave  
  425074:	ret    
  425075:	mov    eax,ds:0x46613c
  42507a:	mov    ecx,DWORD PTR ds:0x46614c
  425080:	push   edi
  425081:	xor    edi,edi
  425083:	cmp    eax,ecx
  425085:	jne    0x4250bb
  425087:	lea    eax,[ecx+ecx*4+0x50]
  42508b:	shl    eax,0x2
  42508e:	push   eax
  42508f:	push   DWORD PTR ds:0x466140
  425095:	push   edi
  425096:	push   DWORD PTR ds:0x466380
  42509c:	call   DWORD PTR ds:0x4280e8
  4250a2:	cmp    eax,edi
  4250a4:	jne    0x4250aa
  4250a6:	xor    eax,eax
  4250a8:	pop    edi
  4250a9:	ret    
  4250aa:	add    DWORD PTR ds:0x46614c,0x10
  4250b1:	mov    ds:0x466140,eax
  4250b6:	mov    eax,ds:0x46613c
  4250bb:	mov    ecx,DWORD PTR ds:0x466140
  4250c1:	push   esi
  4250c2:	push   0x41c4
  4250c7:	push   0x8
  4250c9:	push   DWORD PTR ds:0x466380
  4250cf:	lea    eax,[eax+eax*4]
  4250d2:	lea    esi,[ecx+eax*4]
  4250d5:	call   DWORD PTR ds:0x428030
  4250db:	cmp    eax,edi
  4250dd:	mov    DWORD PTR [esi+0x10],eax
  4250e0:	jne    0x4250e6
  4250e2:	xor    eax,eax
  4250e4:	jmp    0x425129
  4250e6:	push   0x4
  4250e8:	push   0x2000
  4250ed:	push   0x100000
  4250f2:	push   edi
  4250f3:	call   DWORD PTR ds:0x4280e4
  4250f9:	cmp    eax,edi
  4250fb:	mov    DWORD PTR [esi+0xc],eax
  4250fe:	jne    0x425112
  425100:	push   DWORD PTR [esi+0x10]
  425103:	push   edi
  425104:	push   DWORD PTR ds:0x466380
  42510a:	call   DWORD PTR ds:0x4280c4
  425110:	jmp    0x4250e2
  425112:	or     DWORD PTR [esi+0x8],0xffffffff
  425116:	mov    DWORD PTR [esi],edi
  425118:	mov    DWORD PTR [esi+0x4],edi
  42511b:	inc    DWORD PTR ds:0x46613c
  425121:	mov    eax,DWORD PTR [esi+0x10]
  425124:	or     DWORD PTR [eax],0xffffffff
  425127:	mov    eax,esi
  425129:	pop    esi
  42512a:	pop    edi
  42512b:	ret    
  42512c:	push   ebp
  42512d:	mov    ebp,esp
  42512f:	push   ecx
  425130:	push   ecx
  425131:	mov    ecx,DWORD PTR [ebp+0x8]
  425134:	mov    eax,DWORD PTR [ecx+0x8]
  425137:	push   ebx
  425138:	push   esi
  425139:	mov    esi,DWORD PTR [ecx+0x10]
  42513c:	push   edi
  42513d:	xor    ebx,ebx
  42513f:	jmp    0x425144
  425141:	shl    eax,1
  425143:	inc    ebx
  425144:	test   eax,eax
  425146:	jge    0x425141
  425148:	mov    eax,ebx
  42514a:	imul   eax,eax,0x204
  425150:	lea    eax,[eax+esi*1+0x144]
  425157:	push   0x3f
  425159:	mov    DWORD PTR [ebp-0x8],eax
  42515c:	pop    edx
  42515d:	mov    DWORD PTR [eax+0x8],eax
  425160:	mov    DWORD PTR [eax+0x4],eax
  425163:	add    eax,0x8
  425166:	dec    edx
  425167:	jne    0x42515d
  425169:	push   0x4
  42516b:	mov    edi,ebx
  42516d:	push   0x1000
  425172:	shl    edi,0xf
  425175:	add    edi,DWORD PTR [ecx+0xc]
  425178:	push   0x8000
  42517d:	push   edi
  42517e:	call   DWORD PTR ds:0x4280e4
  425184:	test   eax,eax
  425186:	jne    0x425190
  425188:	or     eax,0xffffffff
  42518b:	jmp    0x42522d
  425190:	lea    edx,[edi+0x7000]
  425196:	cmp    edi,edx
  425198:	mov    DWORD PTR [ebp-0x4],edx
  42519b:	ja     0x4251e0
  42519d:	mov    ecx,edx
  42519f:	sub    ecx,edi
  4251a1:	shr    ecx,0xc
  4251a4:	lea    eax,[edi+0x10]
  4251a7:	inc    ecx
  4251a8:	or     DWORD PTR [eax-0x8],0xffffffff
  4251ac:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251b3:	lea    edx,[eax+0xffc]
  4251b9:	mov    DWORD PTR [eax],edx
  4251bb:	lea    edx,[eax-0x1004]
  4251c1:	mov    DWORD PTR [eax-0x4],0xff0
  4251c8:	mov    DWORD PTR [eax+0x4],edx
  4251cb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251d5:	add    eax,0x1000
  4251da:	dec    ecx
  4251db:	jne    0x4251a8
  4251dd:	mov    edx,DWORD PTR [ebp-0x4]
  4251e0:	mov    eax,DWORD PTR [ebp-0x8]
  4251e3:	add    eax,0x1f8
  4251e8:	lea    ecx,[edi+0xc]
  4251eb:	mov    DWORD PTR [eax+0x4],ecx
  4251ee:	mov    DWORD PTR [ecx+0x8],eax
  4251f1:	lea    ecx,[edx+0xc]
  4251f4:	mov    DWORD PTR [eax+0x8],ecx
  4251f7:	mov    DWORD PTR [ecx+0x4],eax
  4251fa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ff:	xor    edi,edi
  425201:	inc    edi
  425202:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425209:	mov    al,BYTE PTR [esi+0x43]
  42520c:	mov    cl,al
  42520e:	inc    cl
  425210:	test   al,al
  425212:	mov    eax,DWORD PTR [ebp+0x8]
  425215:	mov    BYTE PTR [esi+0x43],cl
  425218:	jne    0x42521d
  42521a:	or     DWORD PTR [eax+0x4],edi
  42521d:	mov    edx,0x80000000
  425222:	mov    ecx,ebx
  425224:	shr    edx,cl
  425226:	not    edx
  425228:	and    DWORD PTR [eax+0x8],edx
  42522b:	mov    eax,ebx
  42522d:	pop    edi
  42522e:	pop    esi
  42522f:	pop    ebx
  425230:	leave  
  425231:	ret    
  425232:	push   ebp
  425233:	mov    ebp,esp
  425235:	sub    esp,0xc
  425238:	mov    ecx,DWORD PTR [ebp+0x8]
  42523b:	mov    eax,DWORD PTR [ecx+0x10]
  42523e:	push   ebx
  42523f:	push   esi
  425240:	mov    esi,DWORD PTR [ebp+0x10]
  425243:	push   edi
  425244:	mov    edi,DWORD PTR [ebp+0xc]
  425247:	mov    edx,edi
  425249:	sub    edx,DWORD PTR [ecx+0xc]
  42524c:	add    esi,0x17
  42524f:	shr    edx,0xf
  425252:	mov    ecx,edx
  425254:	imul   ecx,ecx,0x204
  42525a:	lea    ecx,[ecx+eax*1+0x144]
  425261:	mov    DWORD PTR [ebp-0xc],ecx
  425264:	mov    ecx,DWORD PTR [edi-0x4]
  425267:	and    esi,0xfffffff0
  42526a:	dec    ecx
  42526b:	cmp    esi,ecx
  42526d:	lea    edi,[ecx+edi*1-0x4]
  425271:	mov    ebx,DWORD PTR [edi]
  425273:	mov    DWORD PTR [ebp+0x10],ecx
  425276:	mov    DWORD PTR [ebp-0x4],ebx
  425279:	jle    0x4253d4
  42527f:	test   bl,0x1
  425282:	jne    0x4253cd
  425288:	add    ebx,ecx
  42528a:	cmp    esi,ebx
  42528c:	jg     0x4253cd
  425292:	mov    ecx,DWORD PTR [ebp-0x4]
  425295:	sar    ecx,0x4
  425298:	dec    ecx
  425299:	cmp    ecx,0x3f
  42529c:	mov    DWORD PTR [ebp-0x8],ecx
  42529f:	jbe    0x4252a7
  4252a1:	push   0x3f
  4252a3:	pop    ecx
  4252a4:	mov    DWORD PTR [ebp-0x8],ecx
  4252a7:	mov    ebx,DWORD PTR [edi+0x4]
  4252aa:	cmp    ebx,DWORD PTR [edi+0x8]
  4252ad:	jne    0x4252f2
  4252af:	cmp    ecx,0x20
  4252b2:	mov    ebx,0x80000000
  4252b7:	jae    0x4252d3
  4252b9:	shr    ebx,cl
  4252bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4252be:	lea    ecx,[ecx+eax*1+0x4]
  4252c2:	not    ebx
  4252c4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252f2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx],ebx
  4252d1:	jmp    0x4252f2
  4252d3:	add    ecx,0xffffffe0
  4252d6:	shr    ebx,cl
  4252d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252db:	lea    ecx,[ecx+eax*1+0x4]
  4252df:	not    ebx
  4252e1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252e8:	dec    BYTE PTR [ecx]
  4252ea:	jne    0x4252f2
  4252ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ef:	and    DWORD PTR [ecx+0x4],ebx
  4252f2:	mov    ecx,DWORD PTR [edi+0x8]
  4252f5:	mov    ebx,DWORD PTR [edi+0x4]
  4252f8:	mov    DWORD PTR [ecx+0x4],ebx
  4252fb:	mov    ecx,DWORD PTR [edi+0x4]
  4252fe:	mov    edi,DWORD PTR [edi+0x8]
  425301:	mov    DWORD PTR [ecx+0x8],edi
  425304:	mov    ecx,DWORD PTR [ebp+0x10]
  425307:	sub    ecx,esi
  425309:	add    DWORD PTR [ebp-0x4],ecx
  42530c:	cmp    DWORD PTR [ebp-0x4],0x0
  425310:	jle    0x4253bb
  425316:	mov    edi,DWORD PTR [ebp-0x4]
  425319:	mov    ecx,DWORD PTR [ebp+0xc]
  42531c:	sar    edi,0x4
  42531f:	dec    edi
  425320:	cmp    edi,0x3f
  425323:	lea    ecx,[ecx+esi*1-0x4]
  425327:	jbe    0x42532c
  425329:	push   0x3f
  42532b:	pop    edi
  42532c:	mov    ebx,DWORD PTR [ebp-0xc]
  42532f:	lea    ebx,[ebx+edi*8]
  425332:	mov    DWORD PTR [ebp+0x10],ebx
  425335:	mov    ebx,DWORD PTR [ebx+0x4]
  425338:	mov    DWORD PTR [ecx+0x4],ebx
  42533b:	mov    ebx,DWORD PTR [ebp+0x10]
  42533e:	mov    DWORD PTR [ecx+0x8],ebx
  425341:	mov    DWORD PTR [ebx+0x4],ecx
  425344:	mov    ebx,DWORD PTR [ecx+0x4]
  425347:	mov    DWORD PTR [ebx+0x8],ecx
  42534a:	mov    ebx,DWORD PTR [ecx+0x4]
  42534d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425350:	jne    0x4253a9
  425352:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425356:	mov    BYTE PTR [ebp+0x13],cl
  425359:	inc    cl
  42535b:	cmp    edi,0x20
  42535e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425362:	jae    0x425380
  425364:	cmp    BYTE PTR [ebp+0x13],0x0
  425368:	jne    0x425378
  42536a:	mov    ecx,edi
  42536c:	mov    ebx,0x80000000
  425371:	shr    ebx,cl
  425373:	mov    ecx,DWORD PTR [ebp+0x8]
  425376:	or     DWORD PTR [ecx],ebx
  425378:	lea    eax,[eax+edx*4+0x44]
  42537c:	mov    ecx,edi
  42537e:	jmp    0x4253a0
  425380:	cmp    BYTE PTR [ebp+0x13],0x0
  425384:	jne    0x425396
  425386:	lea    ecx,[edi-0x20]
  425389:	mov    ebx,0x80000000
  42538e:	shr    ebx,cl
  425390:	mov    ecx,DWORD PTR [ebp+0x8]
  425393:	or     DWORD PTR [ecx+0x4],ebx
  425396:	lea    eax,[eax+edx*4+0xc4]
  42539d:	lea    ecx,[edi-0x20]
  4253a0:	mov    edx,0x80000000
  4253a5:	shr    edx,cl
  4253a7:	or     DWORD PTR [eax],edx
  4253a9:	mov    edx,DWORD PTR [ebp+0xc]
  4253ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4253af:	lea    eax,[edx+esi*1-0x4]
  4253b3:	mov    DWORD PTR [eax],ecx
  4253b5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253b9:	jmp    0x4253be
  4253bb:	mov    edx,DWORD PTR [ebp+0xc]
  4253be:	lea    eax,[esi+0x1]
  4253c1:	mov    DWORD PTR [edx-0x4],eax
  4253c4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253c8:	jmp    0x425509
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42550c
  4253d4:	jge    0x425509
  4253da:	mov    ebx,DWORD PTR [ebp+0xc]
  4253dd:	sub    DWORD PTR [ebp+0x10],esi
  4253e0:	lea    ecx,[esi+0x1]
  4253e3:	mov    DWORD PTR [ebx-0x4],ecx
  4253e6:	lea    ebx,[ebx+esi*1-0x4]
  4253ea:	mov    esi,DWORD PTR [ebp+0x10]
  4253ed:	sar    esi,0x4
  4253f0:	dec    esi
  4253f1:	cmp    esi,0x3f
  4253f4:	mov    DWORD PTR [ebp+0xc],ebx
  4253f7:	mov    DWORD PTR [ebx-0x4],ecx
  4253fa:	jbe    0x4253ff
  4253fc:	push   0x3f
  4253fe:	pop    esi
  4253ff:	test   BYTE PTR [ebp-0x4],0x1
  425403:	jne    0x425489
  425409:	mov    esi,DWORD PTR [ebp-0x4]
  42540c:	sar    esi,0x4
  42540f:	dec    esi
  425410:	cmp    esi,0x3f
  425413:	jbe    0x425418
  425415:	push   0x3f
  425417:	pop    esi
  425418:	mov    ecx,DWORD PTR [edi+0x4]
  42541b:	cmp    ecx,DWORD PTR [edi+0x8]
  42541e:	jne    0x425462
  425420:	cmp    esi,0x20
  425423:	mov    ebx,0x80000000
  425428:	jae    0x425443
  42542a:	mov    ecx,esi
  42542c:	shr    ebx,cl
  42542e:	lea    esi,[esi+eax*1+0x4]
  425432:	not    ebx
  425434:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425438:	dec    BYTE PTR [esi]
  42543a:	jne    0x42545f
  42543c:	mov    ecx,DWORD PTR [ebp+0x8]
  42543f:	and    DWORD PTR [ecx],ebx
  425441:	jmp    0x42545f
  425443:	lea    ecx,[esi-0x20]
  425446:	shr    ebx,cl
  425448:	lea    ecx,[esi+eax*1+0x4]
  42544c:	not    ebx
  42544e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425455:	dec    BYTE PTR [ecx]
  425457:	jne    0x42545f
  425459:	mov    ecx,DWORD PTR [ebp+0x8]
  42545c:	and    DWORD PTR [ecx+0x4],ebx
  42545f:	mov    ebx,DWORD PTR [ebp+0xc]
  425462:	mov    ecx,DWORD PTR [edi+0x8]
  425465:	mov    esi,DWORD PTR [edi+0x4]
  425468:	mov    DWORD PTR [ecx+0x4],esi
  42546b:	mov    esi,DWORD PTR [edi+0x8]
  42546e:	mov    ecx,DWORD PTR [edi+0x4]
  425471:	mov    DWORD PTR [ecx+0x8],esi
  425474:	mov    esi,DWORD PTR [ebp+0x10]
  425477:	add    esi,DWORD PTR [ebp-0x4]
  42547a:	mov    DWORD PTR [ebp+0x10],esi
  42547d:	sar    esi,0x4
  425480:	dec    esi
  425481:	cmp    esi,0x3f
  425484:	jbe    0x425489
  425486:	push   0x3f
  425488:	pop    esi
  425489:	mov    ecx,DWORD PTR [ebp-0xc]
  42548c:	lea    ecx,[ecx+esi*8]
  42548f:	mov    edi,DWORD PTR [ecx+0x4]
  425492:	mov    DWORD PTR [ebx+0x8],ecx
  425495:	mov    DWORD PTR [ebx+0x4],edi
  425498:	mov    DWORD PTR [ecx+0x4],ebx
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    DWORD PTR [ecx+0x8],ebx
  4254a1:	mov    ecx,DWORD PTR [ebx+0x4]
  4254a4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4254a7:	jne    0x425500
  4254a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4254ad:	mov    BYTE PTR [ebp+0xf],cl
  4254b0:	inc    cl
  4254b2:	cmp    esi,0x20
  4254b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254b9:	jae    0x4254d7
  4254bb:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bf:	jne    0x4254cf
  4254c1:	mov    ecx,esi
  4254c3:	mov    edi,0x80000000
  4254c8:	shr    edi,cl
  4254ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4254cd:	or     DWORD PTR [ecx],edi
  4254cf:	lea    eax,[eax+edx*4+0x44]
  4254d3:	mov    ecx,esi
  4254d5:	jmp    0x4254f7
  4254d7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254db:	jne    0x4254ed
  4254dd:	lea    ecx,[esi-0x20]
  4254e0:	mov    edi,0x80000000
  4254e5:	shr    edi,cl
  4254e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ea:	or     DWORD PTR [ecx+0x4],edi
  4254ed:	lea    eax,[eax+edx*4+0xc4]
  4254f4:	lea    ecx,[esi-0x20]
  4254f7:	mov    edx,0x80000000
  4254fc:	shr    edx,cl
  4254fe:	or     DWORD PTR [eax],edx
  425500:	mov    eax,DWORD PTR [ebp+0x10]
  425503:	mov    DWORD PTR [ebx],eax
  425505:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425509:	xor    eax,eax
  42550b:	inc    eax
  42550c:	pop    edi
  42550d:	pop    esi
  42550e:	pop    ebx
  42550f:	leave  
  425510:	ret    
  425511:	push   ebp
  425512:	mov    ebp,esp
  425514:	sub    esp,0x14
  425517:	mov    ecx,DWORD PTR [ebp+0x8]
  42551a:	mov    eax,ds:0x46613c
  42551f:	mov    edx,DWORD PTR ds:0x466140
  425525:	add    ecx,0x17
  425528:	and    ecx,0xfffffff0
  42552b:	push   ebx
  42552c:	mov    DWORD PTR [ebp-0x10],ecx
  42552f:	sar    ecx,0x4
  425532:	push   esi
  425533:	lea    eax,[eax+eax*4]
  425536:	push   edi
  425537:	dec    ecx
  425538:	cmp    ecx,0x20
  42553b:	lea    edi,[edx+eax*4]
  42553e:	mov    DWORD PTR [ebp-0x4],edi
  425541:	jge    0x42554e
  425543:	or     esi,0xffffffff
  425546:	shr    esi,cl
  425548:	or     DWORD PTR [ebp-0x8],0xffffffff
  42554c:	jmp    0x42555b
  42554e:	add    ecx,0xffffffe0
  425551:	or     eax,0xffffffff
  425554:	xor    esi,esi
  425556:	shr    eax,cl
  425558:	mov    DWORD PTR [ebp-0x8],eax
  42555b:	mov    eax,ds:0x466148
  425560:	mov    ebx,eax
  425562:	mov    DWORD PTR [ebp-0xc],esi
  425565:	cmp    ebx,edi
  425567:	jmp    0x42557d
  425569:	mov    ecx,DWORD PTR [ebx+0x4]
  42556c:	mov    edi,DWORD PTR [ebx]
  42556e:	and    ecx,DWORD PTR [ebp-0x8]
  425571:	and    edi,esi
  425573:	or     ecx,edi
  425575:	jne    0x425582
  425577:	add    ebx,0x14
  42557a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42557d:	mov    DWORD PTR [ebp+0x8],ebx
  425580:	jb     0x425569
  425582:	cmp    ebx,DWORD PTR [ebp-0x4]
  425585:	jne    0x4255ab
  425587:	mov    ebx,edx
  425589:	jmp    0x42559c
  42558b:	mov    ecx,DWORD PTR [ebx+0x4]
  42558e:	mov    edi,DWORD PTR [ebx]
  425590:	and    ecx,DWORD PTR [ebp-0x8]
  425593:	and    edi,esi
  425595:	or     ecx,edi
  425597:	jne    0x4255a3
  425599:	add    ebx,0x14
  42559c:	cmp    ebx,eax
  42559e:	mov    DWORD PTR [ebp+0x8],ebx
  4255a1:	jb     0x42558b
  4255a3:	cmp    ebx,eax
  4255a5:	je     0x42563f
  4255ab:	mov    DWORD PTR ds:0x466148,ebx
  4255b1:	mov    eax,DWORD PTR [ebx+0x10]
  4255b4:	mov    edx,DWORD PTR [eax]
  4255b6:	cmp    edx,0xffffffff
  4255b9:	mov    DWORD PTR [ebp-0x4],edx
  4255bc:	je     0x4255d2
  4255be:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255c5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255c9:	and    ecx,DWORD PTR [ebp-0x8]
  4255cc:	and    edi,esi
  4255ce:	or     ecx,edi
  4255d0:	jne    0x425608
  4255d2:	mov    edx,DWORD PTR [eax+0xc4]
  4255d8:	and    edx,DWORD PTR [ebp-0x8]
  4255db:	and    DWORD PTR [ebp-0x4],0x0
  4255df:	lea    ecx,[eax+0x44]
  4255e2:	mov    esi,DWORD PTR [ecx]
  4255e4:	and    esi,DWORD PTR [ebp-0xc]
  4255e7:	or     edx,esi
  4255e9:	mov    esi,DWORD PTR [ebp-0xc]
  4255ec:	jne    0x425605
  4255ee:	mov    edx,DWORD PTR [ecx+0x84]
  4255f4:	and    edx,DWORD PTR [ebp-0x8]
  4255f7:	inc    DWORD PTR [ebp-0x4]
  4255fa:	add    ecx,0x4
  4255fd:	mov    edi,DWORD PTR [ecx]
  4255ff:	and    edi,esi
  425601:	or     edx,edi
  425603:	je     0x4255ee
  425605:	mov    edx,DWORD PTR [ebp-0x4]
  425608:	mov    ecx,edx
  42560a:	imul   ecx,ecx,0x204
  425610:	lea    ecx,[ecx+eax*1+0x144]
  425617:	mov    DWORD PTR [ebp-0xc],ecx
  42561a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42561e:	xor    edi,edi
  425620:	and    ecx,esi
  425622:	jne    0x425691
  425624:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42562b:	and    ecx,DWORD PTR [ebp-0x8]
  42562e:	push   0x20
  425630:	pop    edi
  425631:	jmp    0x425691
  425633:	cmp    DWORD PTR [ebx+0x8],0x0
  425637:	jne    0x425644
  425639:	add    ebx,0x14
  42563c:	mov    DWORD PTR [ebp+0x8],ebx
  42563f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425642:	jb     0x425633
  425644:	cmp    ebx,DWORD PTR [ebp-0x4]
  425647:	jne    0x42566f
  425649:	mov    ebx,edx
  42564b:	jmp    0x425656
  42564d:	cmp    DWORD PTR [ebx+0x8],0x0
  425651:	jne    0x42565d
  425653:	add    ebx,0x14
  425656:	cmp    ebx,eax
  425658:	mov    DWORD PTR [ebp+0x8],ebx
  42565b:	jb     0x42564d
  42565d:	cmp    ebx,eax
  42565f:	jne    0x42566f
  425661:	call   0x425075
  425666:	mov    ebx,eax
  425668:	test   ebx,ebx
  42566a:	mov    DWORD PTR [ebp+0x8],ebx
  42566d:	je     0x425687
  42566f:	push   ebx
  425670:	call   0x42512c
  425675:	pop    ecx
  425676:	mov    ecx,DWORD PTR [ebx+0x10]
  425679:	mov    DWORD PTR [ecx],eax
  42567b:	mov    eax,DWORD PTR [ebx+0x10]
  42567e:	cmp    DWORD PTR [eax],0xffffffff
  425681:	jne    0x4255ab
  425687:	xor    eax,eax
  425689:	jmp    0x425808
  42568e:	shl    ecx,1
  425690:	inc    edi
  425691:	test   ecx,ecx
  425693:	jge    0x42568e
  425695:	mov    ecx,DWORD PTR [ebp-0xc]
  425698:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42569c:	mov    ecx,DWORD PTR [edx]
  42569e:	sub    ecx,DWORD PTR [ebp-0x10]
  4256a1:	mov    esi,ecx
  4256a3:	sar    esi,0x4
  4256a6:	dec    esi
  4256a7:	cmp    esi,0x3f
  4256aa:	mov    DWORD PTR [ebp-0x8],ecx
  4256ad:	jle    0x4256b2
  4256af:	push   0x3f
  4256b1:	pop    esi
  4256b2:	cmp    esi,edi
  4256b4:	je     0x4257bb
  4256ba:	mov    ecx,DWORD PTR [edx+0x4]
  4256bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4256c0:	jne    0x42571e
  4256c2:	cmp    edi,0x20
  4256c5:	mov    ebx,0x80000000
  4256ca:	jge    0x4256f2
  4256cc:	mov    ecx,edi
  4256ce:	shr    ebx,cl
  4256d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256d3:	lea    edi,[eax+edi*1+0x4]
  4256d7:	not    ebx
  4256d9:	mov    DWORD PTR [ebp-0x14],ebx
  4256dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256e4:	dec    BYTE PTR [edi]
  4256e6:	jne    0x42571b
  4256e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ee:	and    DWORD PTR [ebx],ecx
  4256f0:	jmp    0x42571e
  4256f2:	lea    ecx,[edi-0x20]
  4256f5:	shr    ebx,cl
  4256f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256fa:	lea    ecx,[eax+ecx*4+0xc4]
  425701:	lea    edi,[eax+edi*1+0x4]
  425705:	not    ebx
  425707:	and    DWORD PTR [ecx],ebx
  425709:	dec    BYTE PTR [edi]
  42570b:	mov    DWORD PTR [ebp-0x14],ebx
  42570e:	jne    0x42571b
  425710:	mov    ebx,DWORD PTR [ebp+0x8]
  425713:	mov    ecx,DWORD PTR [ebp-0x14]
  425716:	and    DWORD PTR [ebx+0x4],ecx
  425719:	jmp    0x42571e
  42571b:	mov    ebx,DWORD PTR [ebp+0x8]
  42571e:	cmp    DWORD PTR [ebp-0x8],0x0
  425722:	mov    ecx,DWORD PTR [edx+0x8]
  425725:	mov    edi,DWORD PTR [edx+0x4]
  425728:	mov    DWORD PTR [ecx+0x4],edi
  42572b:	mov    ecx,DWORD PTR [edx+0x4]
  42572e:	mov    edi,DWORD PTR [edx+0x8]
  425731:	mov    DWORD PTR [ecx+0x8],edi
  425734:	je     0x4257c7
  42573a:	mov    ecx,DWORD PTR [ebp-0xc]
  42573d:	lea    ecx,[ecx+esi*8]
  425740:	mov    edi,DWORD PTR [ecx+0x4]
  425743:	mov    DWORD PTR [edx+0x8],ecx
  425746:	mov    DWORD PTR [edx+0x4],edi
  425749:	mov    DWORD PTR [ecx+0x4],edx
  42574c:	mov    ecx,DWORD PTR [edx+0x4]
  42574f:	mov    DWORD PTR [ecx+0x8],edx
  425752:	mov    ecx,DWORD PTR [edx+0x4]
  425755:	cmp    ecx,DWORD PTR [edx+0x8]
  425758:	jne    0x4257b8
  42575a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42575e:	mov    BYTE PTR [ebp+0xb],cl
  425761:	inc    cl
  425763:	cmp    esi,0x20
  425766:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42576a:	jge    0x42578f
  42576c:	cmp    BYTE PTR [ebp+0xb],0x0
  425770:	jne    0x42577d
  425772:	mov    edi,0x80000000
  425777:	mov    ecx,esi
  425779:	shr    edi,cl
  42577b:	or     DWORD PTR [ebx],edi
  42577d:	mov    ecx,esi
  42577f:	mov    edi,0x80000000
  425784:	shr    edi,cl
  425786:	mov    ecx,DWORD PTR [ebp-0x4]
  425789:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42578d:	jmp    0x4257b8
  42578f:	cmp    BYTE PTR [ebp+0xb],0x0
  425793:	jne    0x4257a2
  425795:	lea    ecx,[esi-0x20]
  425798:	mov    edi,0x80000000
  42579d:	shr    edi,cl
  42579f:	or     DWORD PTR [ebx+0x4],edi
  4257a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a5:	lea    edi,[eax+ecx*4+0xc4]
  4257ac:	lea    ecx,[esi-0x20]
  4257af:	mov    esi,0x80000000
  4257b4:	shr    esi,cl
  4257b6:	or     DWORD PTR [edi],esi
  4257b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257bb:	test   ecx,ecx
  4257bd:	je     0x4257ca
  4257bf:	mov    DWORD PTR [edx],ecx
  4257c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257c5:	jmp    0x4257ca
  4257c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ca:	mov    esi,DWORD PTR [ebp-0x10]
  4257cd:	add    edx,ecx
  4257cf:	lea    ecx,[esi+0x1]
  4257d2:	mov    DWORD PTR [edx],ecx
  4257d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257d8:	mov    esi,DWORD PTR [ebp-0xc]
  4257db:	mov    ecx,DWORD PTR [esi]
  4257dd:	test   ecx,ecx
  4257df:	lea    edi,[ecx+0x1]
  4257e2:	mov    DWORD PTR [esi],edi
  4257e4:	jne    0x425800
  4257e6:	cmp    ebx,DWORD PTR ds:0x466138
  4257ec:	jne    0x425800
  4257ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f1:	cmp    ecx,DWORD PTR ds:0x466150
  4257f7:	jne    0x425800
  4257f9:	and    DWORD PTR ds:0x466138,0x0
  425800:	mov    ecx,DWORD PTR [ebp-0x4]
  425803:	mov    DWORD PTR [eax],ecx
  425805:	lea    eax,[edx+0x4]
  425808:	pop    edi
  425809:	pop    esi
  42580a:	pop    ebx
  42580b:	leave  
  42580c:	ret    
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   esi
  425811:	inc    ebx
  425812:	xor    dh,BYTE PTR [eax]
  425814:	pop    eax
  425815:	inc    ebx
  425816:	xor    BYTE PTR [eax],dh
  425818:	push   ebp
  425819:	mov    ebp,esp
  42581b:	sub    esp,0x8
  42581e:	push   ebx
  42581f:	push   esi
  425820:	push   edi
  425821:	push   ebp
  425822:	cld    
  425823:	mov    ebx,DWORD PTR [ebp+0xc]
  425826:	mov    eax,DWORD PTR [ebp+0x8]
  425829:	test   DWORD PTR [eax+0x4],0x6
  425830:	jne    0x4258b8
  425836:	mov    DWORD PTR [ebp-0x8],eax
  425839:	mov    eax,DWORD PTR [ebp+0x10]
  42583c:	mov    DWORD PTR [ebp-0x4],eax
  42583f:	lea    eax,[ebp-0x8]
  425842:	mov    DWORD PTR [ebx-0x4],eax
  425845:	mov    esi,DWORD PTR [ebx+0xc]
  425848:	mov    edi,DWORD PTR [ebx+0x8]
  42584b:	cmp    esi,0xffffffff
  42584e:	je     0x4258b1
  425850:	lea    ecx,[esi+esi*2]
  425853:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425858:	je     0x42589f
  42585a:	push   esi
  42585b:	push   ebp
  42585c:	lea    ebp,[ebx+0x10]
  42585f:	call   DWORD PTR [edi+ecx*4+0x4]
  425863:	pop    ebp
  425864:	pop    esi
  425865:	mov    ebx,DWORD PTR [ebp+0xc]
  425868:	or     eax,eax
  42586a:	je     0x42589f
  42586c:	js     0x4258aa
  42586e:	mov    edi,DWORD PTR [ebx+0x8]
  425871:	push   ebx
  425872:	call   0x4267a0
  425877:	add    esp,0x4
  42587a:	lea    ebp,[ebx+0x10]
  42587d:	push   esi
  42587e:	push   ebx
  42587f:	call   0x4267e2
  425884:	add    esp,0x8
  425887:	lea    ecx,[esi+esi*2]
  42588a:	push   0x1
  42588c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425890:	call   0x426876
  425895:	mov    eax,DWORD PTR [edi+ecx*4]
  425898:	mov    DWORD PTR [ebx+0xc],eax
  42589b:	call   DWORD PTR [edi+ecx*4+0x8]
  42589f:	mov    edi,DWORD PTR [ebx+0x8]
  4258a2:	lea    ecx,[esi+esi*2]
  4258a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4258a8:	jmp    0x42584b
  4258aa:	mov    eax,0x0
  4258af:	jmp    0x4258cd
  4258b1:	mov    eax,0x1
  4258b6:	jmp    0x4258cd
  4258b8:	push   ebp
  4258b9:	lea    ebp,[ebx+0x10]
  4258bc:	push   0xffffffff
  4258be:	push   ebx
  4258bf:	call   0x4267e2
  4258c4:	add    esp,0x8
  4258c7:	pop    ebp
  4258c8:	mov    eax,0x1
  4258cd:	pop    ebp
  4258ce:	pop    edi
  4258cf:	pop    esi
  4258d0:	pop    ebx
  4258d1:	mov    esp,ebp
  4258d3:	pop    ebp
  4258d4:	ret    
  4258d5:	push   ebp
  4258d6:	mov    ecx,DWORD PTR [esp+0x8]
  4258da:	mov    ebp,DWORD PTR [ecx]
  4258dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258df:	push   eax
  4258e0:	mov    eax,DWORD PTR [ecx+0x18]
  4258e3:	push   eax
  4258e4:	call   0x4267e2
  4258e9:	add    esp,0x8
  4258ec:	pop    ebp
  4258ed:	ret    0x4
  4258f0:	call   0x423803
  4258f5:	add    eax,0x8
  4258f8:	ret    
  4258f9:	push   0x14
  4258fb:	push   0x4287b8
  425900:	call   0x423950
  425905:	mov    edi,DWORD PTR [ebp+0x8]
  425908:	xor    ebx,ebx
  42590a:	cmp    edi,ebx
  42590c:	jne    0x42591c
  42590e:	push   DWORD PTR [ebp+0xc]
  425911:	call   0x424672
  425916:	pop    ecx
  425917:	jmp    0x425aa0
  42591c:	mov    esi,DWORD PTR [ebp+0xc]
  42591f:	cmp    esi,ebx
  425921:	jne    0x42592f
  425923:	push   edi
  425924:	call   0x42455a
  425929:	pop    ecx
  42592a:	jmp    0x425a9e
  42592f:	cmp    DWORD PTR ds:0x466384,0x3
  425936:	jne    0x425a6a
  42593c:	mov    DWORD PTR [ebp-0x1c],ebx
  42593f:	cmp    esi,0xffffffe0
  425942:	ja     0x425a39
  425948:	push   0x4
  42594a:	call   0x423b0f
  42594f:	pop    ecx
  425950:	mov    DWORD PTR [ebp-0x4],ebx
  425953:	push   edi
  425954:	call   0x424d32
  425959:	pop    ecx
  42595a:	mov    DWORD PTR [ebp-0x20],eax
  42595d:	cmp    eax,ebx
  42595f:	je     0x425a09
  425965:	cmp    esi,DWORD PTR ds:0x466144
  42596b:	ja     0x4259b9
  42596d:	push   esi
  42596e:	push   edi
  42596f:	push   eax
  425970:	call   0x425232
  425975:	add    esp,0xc
  425978:	test   eax,eax
  42597a:	je     0x425981
  42597c:	mov    DWORD PTR [ebp-0x1c],edi
  42597f:	jmp    0x4259b9
  425981:	push   esi
  425982:	call   0x425511
  425987:	pop    ecx
  425988:	mov    DWORD PTR [ebp-0x1c],eax
  42598b:	cmp    eax,ebx
  42598d:	je     0x4259b9
  42598f:	mov    eax,DWORD PTR [edi-0x4]
  425992:	dec    eax
  425993:	mov    DWORD PTR [ebp-0x24],eax
  425996:	cmp    eax,esi
  425998:	jb     0x42599c
  42599a:	mov    eax,esi
  42599c:	push   eax
  42599d:	push   edi
  42599e:	push   DWORD PTR [ebp-0x1c]
  4259a1:	call   0x424690
  4259a6:	push   edi
  4259a7:	call   0x424d32
  4259ac:	mov    DWORD PTR [ebp-0x20],eax
  4259af:	push   edi
  4259b0:	push   eax
  4259b1:	call   0x424d5d
  4259b6:	add    esp,0x18
  4259b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259bc:	jne    0x425a09
  4259be:	cmp    esi,ebx
  4259c0:	jne    0x4259c8
  4259c2:	xor    esi,esi
  4259c4:	inc    esi
  4259c5:	mov    DWORD PTR [ebp+0xc],esi
  4259c8:	add    esi,0xf
  4259cb:	and    esi,0xfffffff0
  4259ce:	mov    DWORD PTR [ebp+0xc],esi
  4259d1:	push   esi
  4259d2:	push   ebx
  4259d3:	push   DWORD PTR ds:0x466380
  4259d9:	call   DWORD PTR ds:0x428030
  4259df:	mov    DWORD PTR [ebp-0x1c],eax
  4259e2:	cmp    eax,ebx
  4259e4:	je     0x425a09
  4259e6:	mov    eax,DWORD PTR [edi-0x4]
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [ebp-0x24],eax
  4259ed:	cmp    eax,esi
  4259ef:	jb     0x4259f3
  4259f1:	mov    eax,esi
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	push   DWORD PTR [ebp-0x1c]
  4259f8:	call   0x424690
  4259fd:	push   edi
  4259fe:	push   DWORD PTR [ebp-0x20]
  425a01:	call   0x424d5d
  425a06:	add    esp,0x14
  425a09:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a0d:	call   0x425a61
  425a12:	cmp    DWORD PTR [ebp-0x20],ebx
  425a15:	jne    0x425a39
  425a17:	cmp    esi,ebx
  425a19:	jne    0x425a1e
  425a1b:	xor    esi,esi
  425a1d:	inc    esi
  425a1e:	add    esi,0xf
  425a21:	and    esi,0xfffffff0
  425a24:	mov    DWORD PTR [ebp+0xc],esi
  425a27:	push   esi
  425a28:	push   edi
  425a29:	push   ebx
  425a2a:	push   DWORD PTR ds:0x466380
  425a30:	call   DWORD PTR ds:0x4280e8
  425a36:	mov    DWORD PTR [ebp-0x1c],eax
  425a39:	mov    eax,DWORD PTR [ebp-0x1c]
  425a3c:	cmp    eax,ebx
  425a3e:	jne    0x425aa0
  425a40:	cmp    DWORD PTR ds:0x466008,ebx
  425a46:	je     0x425aa0
  425a48:	push   esi
  425a49:	call   0x426232
  425a4e:	pop    ecx
  425a4f:	test   eax,eax
  425a51:	jne    0x42593c
  425a57:	jmp    0x425a9e
  425a59:	xor    ebx,ebx
  425a5b:	mov    esi,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,DWORD PTR [ebp+0x8]
  425a61:	push   0x4
  425a63:	call   0x423a7b
  425a68:	pop    ecx
  425a69:	ret    
  425a6a:	xor    eax,eax
  425a6c:	cmp    esi,0xffffffe0
  425a6f:	ja     0x425a87
  425a71:	cmp    esi,ebx
  425a73:	jne    0x425a78
  425a75:	xor    esi,esi
  425a77:	inc    esi
  425a78:	push   esi
  425a79:	push   edi
  425a7a:	push   ebx
  425a7b:	push   DWORD PTR ds:0x466380
  425a81:	call   DWORD PTR ds:0x4280e8
  425a87:	cmp    eax,ebx
  425a89:	jne    0x425aa0
  425a8b:	cmp    DWORD PTR ds:0x466008,ebx
  425a91:	je     0x425aa0
  425a93:	push   esi
  425a94:	call   0x426232
  425a99:	pop    ecx
  425a9a:	test   eax,eax
  425a9c:	jne    0x425a6a
  425a9e:	xor    eax,eax
  425aa0:	call   0x42398b
  425aa5:	ret    
  425aa6:	push   0x10
  425aa8:	push   0x4287c8
  425aad:	call   0x423950
  425ab2:	cmp    DWORD PTR ds:0x466384,0x3
  425ab9:	jne    0x425af5
  425abb:	push   0x4
  425abd:	call   0x423b0f
  425ac2:	pop    ecx
  425ac3:	and    DWORD PTR [ebp-0x4],0x0
  425ac7:	mov    esi,DWORD PTR [ebp+0x8]
  425aca:	push   esi
  425acb:	call   0x424d32
  425ad0:	pop    ecx
  425ad1:	mov    DWORD PTR [ebp-0x1c],eax
  425ad4:	test   eax,eax
  425ad6:	je     0x425ae3
  425ad8:	mov    esi,DWORD PTR [esi-0x4]
  425adb:	sub    esi,0x9
  425ade:	mov    DWORD PTR [ebp-0x20],esi
  425ae1:	jmp    0x425ae6
  425ae3:	mov    esi,DWORD PTR [ebp-0x20]
  425ae6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aea:	call   0x425b13
  425aef:	cmp    DWORD PTR [ebp-0x1c],0x0
  425af3:	jne    0x425b08
  425af5:	push   DWORD PTR [ebp+0x8]
  425af8:	push   0x0
  425afa:	push   DWORD PTR ds:0x466380
  425b00:	call   DWORD PTR ds:0x428018
  425b06:	mov    esi,eax
  425b08:	mov    eax,esi
  425b0a:	call   0x42398b
  425b0f:	ret    
  425b10:	mov    esi,DWORD PTR [ebp-0x20]
  425b13:	push   0x4
  425b15:	call   0x423a7b
  425b1a:	pop    ecx
  425b1b:	ret    
  425b1c:	push   ebp
  425b1d:	mov    ebp,esp
  425b1f:	sub    esp,0x10
  425b22:	push   esi
  425b23:	lea    eax,[ebp-0x8]
  425b26:	push   eax
  425b27:	call   DWORD PTR ds:0x4280f8
  425b2d:	mov    esi,DWORD PTR [ebp-0x4]
  425b30:	xor    esi,DWORD PTR [ebp-0x8]
  425b33:	call   DWORD PTR ds:0x4280f4
  425b39:	xor    esi,eax
  425b3b:	call   DWORD PTR ds:0x428020
  425b41:	xor    esi,eax
  425b43:	call   DWORD PTR ds:0x4280f0
  425b49:	xor    esi,eax
  425b4b:	lea    eax,[ebp-0x10]
  425b4e:	push   eax
  425b4f:	call   DWORD PTR ds:0x4280ec
  425b55:	mov    eax,DWORD PTR [ebp-0xc]
  425b58:	xor    eax,DWORD PTR [ebp-0x10]
  425b5b:	xor    esi,eax
  425b5d:	mov    DWORD PTR ds:0x465660,esi
  425b63:	jne    0x425b6f
  425b65:	mov    DWORD PTR ds:0x465660,0xbb40e64e
  425b6f:	pop    esi
  425b70:	leave  
  425b71:	ret    
  425b72:	push   0x118
  425b77:	push   0x428978
  425b7c:	call   0x423950
  425b81:	mov    eax,ds:0x465660
  425b86:	xor    eax,DWORD PTR [ebp+0x4]
  425b89:	mov    DWORD PTR [ebp-0x1c],eax
  425b8c:	mov    eax,ds:0x465fd8
  425b91:	xor    ecx,ecx
  425b93:	cmp    eax,ecx
  425b95:	je     0x425bb6
  425b97:	mov    DWORD PTR [ebp-0x4],ecx
  425b9a:	push   DWORD PTR [ebp+0xc]
  425b9d:	push   DWORD PTR [ebp+0x8]
  425ba0:	call   eax
  425ba2:	pop    ecx
  425ba3:	pop    ecx
  425ba4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ba8:	jmp    0x425cb4
  425bad:	xor    eax,eax
  425baf:	inc    eax
  425bb0:	ret    
  425bb1:	mov    esp,DWORD PTR [ebp-0x18]
  425bb4:	jmp    0x425ba4
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	dec    eax
  425bba:	je     0x425bcf
  425bbc:	mov    edi,0x428954
  425bc1:	mov    DWORD PTR [ebp-0x20],0x4288a0
  425bc8:	mov    esi,0xd4
  425bcd:	jmp    0x425be0
  425bcf:	mov    edi,0x428880
  425bd4:	mov    DWORD PTR [ebp-0x20],0x4287e0
  425bdb:	mov    esi,0xb9
  425be0:	mov    BYTE PTR [ebp-0x24],cl
  425be3:	push   0x104
  425be8:	lea    eax,[ebp-0x128]
  425bee:	push   eax
  425bef:	push   ecx
  425bf0:	call   DWORD PTR ds:0x42807c
  425bf6:	test   eax,eax
  425bf8:	jne    0x425c0d
  425bfa:	push   0x4284d4
  425bff:	lea    eax,[ebp-0x128]
  425c05:	push   eax
  425c06:	call   0x423d30
  425c0b:	pop    ecx
  425c0c:	pop    ecx
  425c0d:	lea    ebx,[ebp-0x128]
  425c13:	lea    eax,[ebp-0x128]
  425c19:	push   eax
  425c1a:	call   0x423f60
  425c1f:	pop    ecx
  425c20:	add    eax,0xb
  425c23:	cmp    eax,0x3c
  425c26:	jbe    0x425c51
  425c28:	lea    eax,[ebp-0x128]
  425c2e:	push   eax
  425c2f:	call   0x423f60
  425c34:	mov    ebx,eax
  425c36:	lea    eax,[ebp-0x128]
  425c3c:	sub    eax,0x31
  425c3f:	add    ebx,eax
  425c41:	push   0x3
  425c43:	push   0x4284d0
  425c48:	push   ebx
  425c49:	call   0x423e30
  425c4e:	add    esp,0x10
  425c51:	push   ebx
  425c52:	call   0x423f60
  425c57:	pop    ecx
  425c58:	lea    eax,[eax+esi*1+0xc]
  425c5c:	add    eax,0x3
  425c5f:	and    eax,0xfffffffc
  425c62:	call   0x4239a0
  425c67:	mov    DWORD PTR [ebp-0x18],esp
  425c6a:	mov    esi,esp
  425c6c:	push   edi
  425c6d:	push   esi
  425c6e:	call   0x423d30
  425c73:	mov    edi,0x4284b0
  425c78:	push   edi
  425c79:	push   esi
  425c7a:	call   0x423d40
  425c7f:	push   0x4287d4
  425c84:	push   esi
  425c85:	call   0x423d40
  425c8a:	push   ebx
  425c8b:	push   esi
  425c8c:	call   0x423d40
  425c91:	push   edi
  425c92:	push   esi
  425c93:	call   0x423d40
  425c98:	push   DWORD PTR [ebp-0x20]
  425c9b:	push   esi
  425c9c:	call   0x423d40
  425ca1:	push   0x12010
  425ca6:	push   0x428488
  425cab:	push   esi
  425cac:	call   0x423c32
  425cb1:	add    esp,0x3c
  425cb4:	push   0x3
  425cb6:	call   0x422dbc
  425cbb:	int3   
  425cbc:	push   0x38
  425cbe:	push   0x428d98
  425cc3:	call   0x423950
  425cc8:	xor    ebx,ebx
  425cca:	cmp    DWORD PTR ds:0x465ffc,ebx
  425cd0:	jne    0x425d0a
  425cd2:	push   ebx
  425cd3:	push   ebx
  425cd4:	xor    esi,esi
  425cd6:	inc    esi
  425cd7:	push   esi
  425cd8:	push   0x428d94
  425cdd:	push   0x100
  425ce2:	push   ebx
  425ce3:	call   DWORD PTR ds:0x428104
  425ce9:	test   eax,eax
  425ceb:	je     0x425cf5
  425ced:	mov    DWORD PTR ds:0x465ffc,esi
  425cf3:	jmp    0x425d0a
  425cf5:	call   DWORD PTR ds:0x42803c
  425cfb:	cmp    eax,0x78
  425cfe:	jne    0x425d0a
  425d00:	mov    DWORD PTR ds:0x465ffc,0x2
  425d0a:	cmp    DWORD PTR [ebp+0x14],ebx
  425d0d:	jle    0x425d2a
  425d0f:	mov    ecx,DWORD PTR [ebp+0x14]
  425d12:	mov    eax,DWORD PTR [ebp+0x10]
  425d15:	dec    ecx
  425d16:	cmp    BYTE PTR [eax],bl
  425d18:	je     0x425d22
  425d1a:	inc    eax
  425d1b:	cmp    ecx,ebx
  425d1d:	jne    0x425d15
  425d1f:	or     ecx,0xffffffff
  425d22:	or     eax,0xffffffff
  425d25:	sub    eax,ecx
  425d27:	add    DWORD PTR [ebp+0x14],eax
  425d2a:	mov    eax,ds:0x465ffc
  425d2f:	cmp    eax,0x2
  425d32:	je     0x425f14
  425d38:	cmp    eax,ebx
  425d3a:	je     0x425f14
  425d40:	cmp    eax,0x1
  425d43:	jne    0x425f47
  425d49:	xor    edi,edi
  425d4b:	mov    DWORD PTR [ebp-0x1c],edi
  425d4e:	mov    DWORD PTR [ebp-0x20],ebx
  425d51:	mov    DWORD PTR [ebp-0x24],ebx
  425d54:	cmp    DWORD PTR [ebp+0x20],ebx
  425d57:	jne    0x425d61
  425d59:	mov    eax,ds:0x465ff4
  425d5e:	mov    DWORD PTR [ebp+0x20],eax
  425d61:	push   ebx
  425d62:	push   ebx
  425d63:	push   DWORD PTR [ebp+0x14]
  425d66:	push   DWORD PTR [ebp+0x10]
  425d69:	xor    eax,eax
  425d6b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d6e:	setne  al
  425d71:	lea    eax,[eax*8+0x1]
  425d78:	push   eax
  425d79:	push   DWORD PTR [ebp+0x20]
  425d7c:	call   DWORD PTR ds:0x428100
  425d82:	mov    esi,eax
  425d84:	mov    DWORD PTR [ebp-0x28],esi
  425d87:	cmp    esi,ebx
  425d89:	je     0x425f47
  425d8f:	mov    DWORD PTR [ebp-0x4],0x1
  425d96:	lea    eax,[esi+esi*1]
  425d99:	add    eax,0x3
  425d9c:	and    eax,0xfffffffc
  425d9f:	call   0x4239a0
  425da4:	mov    DWORD PTR [ebp-0x18],esp
  425da7:	mov    eax,esp
  425da9:	mov    DWORD PTR [ebp-0x2c],eax
  425dac:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db0:	jmp    0x425dcd
  425db2:	xor    eax,eax
  425db4:	inc    eax
  425db5:	ret    
  425db6:	mov    esp,DWORD PTR [ebp-0x18]
  425db9:	call   0x426de5
  425dbe:	xor    ebx,ebx
  425dc0:	mov    DWORD PTR [ebp-0x2c],ebx
  425dc3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dc7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dca:	mov    esi,DWORD PTR [ebp-0x28]
  425dcd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dd0:	jne    0x425dee
  425dd2:	lea    eax,[esi+esi*1]
  425dd5:	push   eax
  425dd6:	call   0x424672
  425ddb:	pop    ecx
  425ddc:	mov    DWORD PTR [ebp-0x2c],eax
  425ddf:	cmp    eax,ebx
  425de1:	je     0x425f47
  425de7:	mov    DWORD PTR [ebp-0x20],0x1
  425dee:	push   esi
  425def:	push   DWORD PTR [ebp-0x2c]
  425df2:	push   DWORD PTR [ebp+0x14]
  425df5:	push   DWORD PTR [ebp+0x10]
  425df8:	push   0x1
  425dfa:	push   DWORD PTR [ebp+0x20]
  425dfd:	call   DWORD PTR ds:0x428100
  425e03:	test   eax,eax
  425e05:	je     0x425ef1
  425e0b:	push   ebx
  425e0c:	push   ebx
  425e0d:	push   esi
  425e0e:	push   DWORD PTR [ebp-0x2c]
  425e11:	push   DWORD PTR [ebp+0xc]
  425e14:	push   DWORD PTR [ebp+0x8]
  425e17:	call   DWORD PTR ds:0x428104
  425e1d:	mov    edi,eax
  425e1f:	mov    DWORD PTR [ebp-0x1c],edi
  425e22:	cmp    edi,ebx
  425e24:	je     0x425ef1
  425e2a:	test   BYTE PTR [ebp+0xd],0x4
  425e2e:	je     0x425e5d
  425e30:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e33:	je     0x425ef1
  425e39:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e3c:	jg     0x425ef1
  425e42:	push   DWORD PTR [ebp+0x1c]
  425e45:	push   DWORD PTR [ebp+0x18]
  425e48:	push   esi
  425e49:	push   DWORD PTR [ebp-0x2c]
  425e4c:	push   DWORD PTR [ebp+0xc]
  425e4f:	push   DWORD PTR [ebp+0x8]
  425e52:	call   DWORD PTR ds:0x428104
  425e58:	jmp    0x425ef1
  425e5d:	mov    DWORD PTR [ebp-0x4],0x2
  425e64:	lea    eax,[edi+edi*1]
  425e67:	add    eax,0x3
  425e6a:	and    eax,0xfffffffc
  425e6d:	call   0x4239a0
  425e72:	mov    DWORD PTR [ebp-0x18],esp
  425e75:	mov    eax,esp
  425e77:	mov    DWORD PTR [ebp-0x30],eax
  425e7a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e7e:	jmp    0x425e9b
  425e80:	xor    eax,eax
  425e82:	inc    eax
  425e83:	ret    
  425e84:	mov    esp,DWORD PTR [ebp-0x18]
  425e87:	call   0x426de5
  425e8c:	xor    ebx,ebx
  425e8e:	mov    DWORD PTR [ebp-0x30],ebx
  425e91:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e95:	mov    edi,DWORD PTR [ebp-0x1c]
  425e98:	mov    esi,DWORD PTR [ebp-0x28]
  425e9b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e9e:	jne    0x425eb8
  425ea0:	lea    eax,[edi+edi*1]
  425ea3:	push   eax
  425ea4:	call   0x424672
  425ea9:	pop    ecx
  425eaa:	mov    DWORD PTR [ebp-0x30],eax
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ef1
  425eb1:	mov    DWORD PTR [ebp-0x24],0x1
  425eb8:	push   edi
  425eb9:	push   DWORD PTR [ebp-0x30]
  425ebc:	push   esi
  425ebd:	push   DWORD PTR [ebp-0x2c]
  425ec0:	push   DWORD PTR [ebp+0xc]
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	call   DWORD PTR ds:0x428104
  425ecc:	test   eax,eax
  425ece:	je     0x425ef1
  425ed0:	push   ebx
  425ed1:	push   ebx
  425ed2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ed5:	jne    0x425edb
  425ed7:	push   ebx
  425ed8:	push   ebx
  425ed9:	jmp    0x425ee1
  425edb:	push   DWORD PTR [ebp+0x1c]
  425ede:	push   DWORD PTR [ebp+0x18]
  425ee1:	push   edi
  425ee2:	push   DWORD PTR [ebp-0x30]
  425ee5:	push   ebx
  425ee6:	push   DWORD PTR [ebp+0x20]
  425ee9:	call   DWORD PTR ds:0x428090
  425eef:	mov    edi,eax
  425ef1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ef4:	je     0x425eff
  425ef6:	push   DWORD PTR [ebp-0x30]
  425ef9:	call   0x42455a
  425efe:	pop    ecx
  425eff:	cmp    DWORD PTR [ebp-0x20],ebx
  425f02:	je     0x425f0d
  425f04:	push   DWORD PTR [ebp-0x2c]
  425f07:	call   0x42455a
  425f0c:	pop    ecx
  425f0d:	mov    eax,edi
  425f0f:	jmp    0x42606f
  425f14:	mov    DWORD PTR [ebp-0x34],ebx
  425f17:	xor    edi,edi
  425f19:	mov    DWORD PTR [ebp-0x38],ebx
  425f1c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f1f:	jne    0x425f29
  425f21:	mov    eax,ds:0x465fe4
  425f26:	mov    DWORD PTR [ebp+0x8],eax
  425f29:	cmp    DWORD PTR [ebp+0x20],ebx
  425f2c:	jne    0x425f36
  425f2e:	mov    eax,ds:0x465ff4
  425f33:	mov    DWORD PTR [ebp+0x20],eax
  425f36:	push   DWORD PTR [ebp+0x8]
  425f39:	call   0x426bcd
  425f3e:	pop    ecx
  425f3f:	mov    DWORD PTR [ebp-0x3c],eax
  425f42:	cmp    eax,0xffffffff
  425f45:	jne    0x425f4e
  425f47:	xor    eax,eax
  425f49:	jmp    0x42606f
  425f4e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f51:	je     0x426045
  425f57:	push   ebx
  425f58:	push   ebx
  425f59:	lea    ecx,[ebp+0x14]
  425f5c:	push   ecx
  425f5d:	push   DWORD PTR [ebp+0x10]
  425f60:	push   eax
  425f61:	push   DWORD PTR [ebp+0x20]
  425f64:	call   0x426c16
  425f69:	add    esp,0x18
  425f6c:	mov    DWORD PTR [ebp-0x34],eax
  425f6f:	cmp    eax,ebx
  425f71:	je     0x425f47
  425f73:	push   ebx
  425f74:	push   ebx
  425f75:	push   DWORD PTR [ebp+0x14]
  425f78:	push   eax
  425f79:	push   DWORD PTR [ebp+0xc]
  425f7c:	push   DWORD PTR [ebp+0x8]
  425f7f:	call   DWORD PTR ds:0x4280fc
  425f85:	mov    esi,eax
  425f87:	mov    DWORD PTR [ebp-0x40],esi
  425f8a:	cmp    esi,ebx
  425f8c:	je     0x426034
  425f92:	mov    DWORD PTR [ebp-0x4],ebx
  425f95:	add    eax,0x3
  425f98:	and    eax,0xfffffffc
  425f9b:	call   0x4239a0
  425fa0:	mov    DWORD PTR [ebp-0x18],esp
  425fa3:	mov    edi,esp
  425fa5:	mov    DWORD PTR [ebp-0x44],edi
  425fa8:	push   esi
  425fa9:	push   ebx
  425faa:	push   edi
  425fab:	call   0x426250
  425fb0:	add    esp,0xc
  425fb3:	jmp    0x425fc5
  425fb5:	xor    eax,eax
  425fb7:	inc    eax
  425fb8:	ret    
  425fb9:	mov    esp,DWORD PTR [ebp-0x18]
  425fbc:	call   0x426de5
  425fc1:	xor    ebx,ebx
  425fc3:	xor    edi,edi
  425fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fc9:	cmp    edi,ebx
  425fcb:	jne    0x425ff0
  425fcd:	push   DWORD PTR [ebp-0x40]
  425fd0:	call   0x424672
  425fd5:	pop    ecx
  425fd6:	mov    edi,eax
  425fd8:	cmp    edi,ebx
  425fda:	je     0x42600d
  425fdc:	push   DWORD PTR [ebp-0x40]
  425fdf:	push   ebx
  425fe0:	push   edi
  425fe1:	call   0x426250
  425fe6:	add    esp,0xc
  425fe9:	mov    DWORD PTR [ebp-0x38],0x1
  425ff0:	push   DWORD PTR [ebp-0x40]
  425ff3:	push   edi
  425ff4:	push   DWORD PTR [ebp+0x14]
  425ff7:	push   DWORD PTR [ebp-0x34]
  425ffa:	push   DWORD PTR [ebp+0xc]
  425ffd:	push   DWORD PTR [ebp+0x8]
  426000:	call   DWORD PTR ds:0x4280fc
  426006:	mov    DWORD PTR [ebp-0x40],eax
  426009:	cmp    eax,ebx
  42600b:	jne    0x426011
  42600d:	xor    esi,esi
  42600f:	jmp    0x426037
  426011:	push   DWORD PTR [ebp+0x1c]
  426014:	push   DWORD PTR [ebp+0x18]
  426017:	lea    eax,[ebp-0x40]
  42601a:	push   eax
  42601b:	push   edi
  42601c:	push   DWORD PTR [ebp+0x20]
  42601f:	push   DWORD PTR [ebp-0x3c]
  426022:	call   0x426c16
  426027:	add    esp,0x18
  42602a:	mov    esi,eax
  42602c:	neg    esi
  42602e:	sbb    esi,esi
  426030:	neg    esi
  426032:	jmp    0x426037
  426034:	mov    esi,DWORD PTR [ebp-0x48]
  426037:	cmp    DWORD PTR [ebp-0x38],ebx
  42603a:	je     0x42605f
  42603c:	push   edi
  42603d:	call   0x42455a
  426042:	pop    ecx
  426043:	jmp    0x42605f
  426045:	push   DWORD PTR [ebp+0x1c]
  426048:	push   DWORD PTR [ebp+0x18]
  42604b:	push   DWORD PTR [ebp+0x14]
  42604e:	push   DWORD PTR [ebp+0x10]
  426051:	push   DWORD PTR [ebp+0xc]
  426054:	push   DWORD PTR [ebp+0x8]
  426057:	call   DWORD PTR ds:0x4280fc
  42605d:	mov    esi,eax
  42605f:	cmp    DWORD PTR [ebp-0x34],ebx
  426062:	je     0x42606d
  426064:	push   DWORD PTR [ebp-0x34]
  426067:	call   0x42455a
  42606c:	pop    ecx
  42606d:	mov    eax,esi
  42606f:	lea    esp,[ebp-0x54]
  426072:	call   0x42398b
  426077:	ret    
  426078:	push   0x1c
  42607a:	push   0x428dc0
  42607f:	call   0x423950
  426084:	xor    esi,esi
  426086:	cmp    DWORD PTR ds:0x466000,esi
  42608c:	jne    0x4260c3
  42608e:	lea    eax,[ebp-0x1c]
  426091:	push   eax
  426092:	xor    edi,edi
  426094:	inc    edi
  426095:	push   edi
  426096:	push   0x428d94
  42609b:	push   edi
  42609c:	call   DWORD PTR ds:0x42810c
  4260a2:	test   eax,eax
  4260a4:	je     0x4260ae
  4260a6:	mov    DWORD PTR ds:0x466000,edi
  4260ac:	jmp    0x4260c3
  4260ae:	call   DWORD PTR ds:0x42803c
  4260b4:	cmp    eax,0x78
  4260b7:	jne    0x4260c3
  4260b9:	mov    DWORD PTR ds:0x466000,0x2
  4260c3:	mov    eax,ds:0x466000
  4260c8:	cmp    eax,0x2
  4260cb:	je     0x4261bb
  4260d1:	cmp    eax,esi
  4260d3:	je     0x4261bb
  4260d9:	cmp    eax,0x1
  4260dc:	jne    0x4261e1
  4260e2:	mov    DWORD PTR [ebp-0x20],esi
  4260e5:	mov    DWORD PTR [ebp-0x24],esi
  4260e8:	cmp    DWORD PTR [ebp+0x18],esi
  4260eb:	jne    0x4260f5
  4260ed:	mov    eax,ds:0x465ff4
  4260f2:	mov    DWORD PTR [ebp+0x18],eax
  4260f5:	push   esi
  4260f6:	push   esi
  4260f7:	push   DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	xor    eax,eax
  4260ff:	cmp    DWORD PTR [ebp+0x20],esi
  426102:	setne  al
  426105:	lea    eax,[eax*8+0x1]
  42610c:	push   eax
  42610d:	push   DWORD PTR [ebp+0x18]
  426110:	call   DWORD PTR ds:0x428100
  426116:	mov    edi,eax
  426118:	mov    DWORD PTR [ebp-0x28],edi
  42611b:	test   edi,edi
  42611d:	je     0x4261e1
  426123:	and    DWORD PTR [ebp-0x4],0x0
  426127:	lea    ebx,[edi+edi*1]
  42612a:	mov    eax,ebx
  42612c:	add    eax,0x3
  42612f:	and    eax,0xfffffffc
  426132:	call   0x4239a0
  426137:	mov    DWORD PTR [ebp-0x18],esp
  42613a:	mov    esi,esp
  42613c:	mov    DWORD PTR [ebp-0x2c],esi
  42613f:	push   ebx
  426140:	push   0x0
  426142:	push   esi
  426143:	call   0x426250
  426148:	add    esp,0xc
  42614b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42614f:	jmp    0x426166
  426151:	xor    eax,eax
  426153:	inc    eax
  426154:	ret    
  426155:	mov    esp,DWORD PTR [ebp-0x18]
  426158:	call   0x426de5
  42615d:	xor    esi,esi
  42615f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426163:	mov    edi,DWORD PTR [ebp-0x28]
  426166:	test   esi,esi
  426168:	jne    0x426181
  42616a:	push   edi
  42616b:	push   0x2
  42616d:	call   0x424a68
  426172:	pop    ecx
  426173:	pop    ecx
  426174:	mov    esi,eax
  426176:	test   esi,esi
  426178:	je     0x4261e1
  42617a:	mov    DWORD PTR [ebp-0x24],0x1
  426181:	push   edi
  426182:	push   esi
  426183:	push   DWORD PTR [ebp+0x10]
  426186:	push   DWORD PTR [ebp+0xc]
  426189:	push   0x1
  42618b:	push   DWORD PTR [ebp+0x18]
  42618e:	call   DWORD PTR ds:0x428100
  426194:	test   eax,eax
  426196:	je     0x4261a9
  426198:	push   DWORD PTR [ebp+0x14]
  42619b:	push   eax
  42619c:	push   esi
  42619d:	push   DWORD PTR [ebp+0x8]
  4261a0:	call   DWORD PTR ds:0x42810c
  4261a6:	mov    DWORD PTR [ebp-0x20],eax
  4261a9:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ad:	je     0x4261b6
  4261af:	push   esi
  4261b0:	call   0x42455a
  4261b5:	pop    ecx
  4261b6:	mov    eax,DWORD PTR [ebp-0x20]
  4261b9:	jmp    0x426229
  4261bb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261be:	cmp    ebx,esi
  4261c0:	jne    0x4261c8
  4261c2:	mov    ebx,DWORD PTR ds:0x465fe4
  4261c8:	mov    edi,DWORD PTR [ebp+0x18]
  4261cb:	test   edi,edi
  4261cd:	jne    0x4261d5
  4261cf:	mov    edi,DWORD PTR ds:0x465ff4
  4261d5:	push   ebx
  4261d6:	call   0x426bcd
  4261db:	pop    ecx
  4261dc:	cmp    eax,0xffffffff
  4261df:	jne    0x4261e5
  4261e1:	xor    eax,eax
  4261e3:	jmp    0x426229
  4261e5:	cmp    eax,edi
  4261e7:	je     0x426207
  4261e9:	push   0x0
  4261eb:	push   0x0
  4261ed:	lea    ecx,[ebp+0x10]
  4261f0:	push   ecx
  4261f1:	push   DWORD PTR [ebp+0xc]
  4261f4:	push   eax
  4261f5:	push   edi
  4261f6:	call   0x426c16
  4261fb:	add    esp,0x18
  4261fe:	mov    esi,eax
  426200:	test   esi,esi
  426202:	je     0x4261e1
  426204:	mov    DWORD PTR [ebp+0xc],esi
  426207:	push   DWORD PTR [ebp+0x14]
  42620a:	push   DWORD PTR [ebp+0x10]
  42620d:	push   DWORD PTR [ebp+0xc]
  426210:	push   DWORD PTR [ebp+0x8]
  426213:	push   ebx
  426214:	call   DWORD PTR ds:0x428108
  42621a:	mov    edi,eax
  42621c:	test   esi,esi
  42621e:	je     0x426227
  426220:	push   esi
  426221:	call   0x42455a
  426226:	pop    ecx
  426227:	mov    eax,edi
  426229:	lea    esp,[ebp-0x38]
  42622c:	call   0x42398b
  426231:	ret    
  426232:	mov    eax,ds:0x466004
  426237:	test   eax,eax
  426239:	je     0x42624a
  42623b:	push   DWORD PTR [esp+0x4]
  42623f:	call   eax
  426241:	test   eax,eax
  426243:	pop    ecx
  426244:	je     0x42624a
  426246:	xor    eax,eax
  426248:	inc    eax
  426249:	ret    
  42624a:	xor    eax,eax
  42624c:	ret    
  42624d:	int3   
  42624e:	int3   
  42624f:	int3   
  426250:	mov    edx,DWORD PTR [esp+0xc]
  426254:	mov    ecx,DWORD PTR [esp+0x4]
  426258:	test   edx,edx
  42625a:	je     0x4262ab
  42625c:	xor    eax,eax
  42625e:	mov    al,BYTE PTR [esp+0x8]
  426262:	push   edi
  426263:	mov    edi,ecx
  426265:	cmp    edx,0x4
  426268:	jb     0x42629b
  42626a:	neg    ecx
  42626c:	and    ecx,0x3
  42626f:	je     0x42627d
  426271:	sub    edx,ecx
  426273:	mov    BYTE PTR [edi],al
  426275:	add    edi,0x1
  426278:	sub    ecx,0x1
  42627b:	jne    0x426273
  42627d:	mov    ecx,eax
  42627f:	shl    eax,0x8
  426282:	add    eax,ecx
  426284:	mov    ecx,eax
  426286:	shl    eax,0x10
  426289:	add    eax,ecx
  42628b:	mov    ecx,edx
  42628d:	and    edx,0x3
  426290:	shr    ecx,0x2
  426293:	je     0x42629b
  426295:	rep stos DWORD PTR es:[edi],eax
  426297:	test   edx,edx
  426299:	je     0x4262a5
  42629b:	mov    BYTE PTR [edi],al
  42629d:	add    edi,0x1
  4262a0:	sub    edx,0x1
  4262a3:	jne    0x42629b
  4262a5:	mov    eax,DWORD PTR [esp+0x8]
  4262a9:	pop    edi
  4262aa:	ret    
  4262ab:	mov    eax,DWORD PTR [esp+0x4]
  4262af:	ret    
  4262b0:	push   esi
  4262b1:	mov    esi,DWORD PTR [esp+0x8]
  4262b5:	test   esi,esi
  4262b7:	je     0x42643e
  4262bd:	push   DWORD PTR [esi+0x4]
  4262c0:	call   0x42455a
  4262c5:	push   DWORD PTR [esi+0x8]
  4262c8:	call   0x42455a
  4262cd:	push   DWORD PTR [esi+0xc]
  4262d0:	call   0x42455a
  4262d5:	push   DWORD PTR [esi+0x10]
  4262d8:	call   0x42455a
  4262dd:	push   DWORD PTR [esi+0x14]
  4262e0:	call   0x42455a
  4262e5:	push   DWORD PTR [esi+0x18]
  4262e8:	call   0x42455a
  4262ed:	push   DWORD PTR [esi]
  4262ef:	call   0x42455a
  4262f4:	push   DWORD PTR [esi+0x20]
  4262f7:	call   0x42455a
  4262fc:	push   DWORD PTR [esi+0x24]
  4262ff:	call   0x42455a
  426304:	push   DWORD PTR [esi+0x28]
  426307:	call   0x42455a
  42630c:	push   DWORD PTR [esi+0x2c]
  42630f:	call   0x42455a
  426314:	push   DWORD PTR [esi+0x30]
  426317:	call   0x42455a
  42631c:	push   DWORD PTR [esi+0x34]
  42631f:	call   0x42455a
  426324:	push   DWORD PTR [esi+0x1c]
  426327:	call   0x42455a
  42632c:	push   DWORD PTR [esi+0x38]
  42632f:	call   0x42455a
  426334:	push   DWORD PTR [esi+0x3c]
  426337:	call   0x42455a
  42633c:	add    esp,0x40
  42633f:	push   DWORD PTR [esi+0x40]
  426342:	call   0x42455a
  426347:	push   DWORD PTR [esi+0x44]
  42634a:	call   0x42455a
  42634f:	push   DWORD PTR [esi+0x48]
  426352:	call   0x42455a
  426357:	push   DWORD PTR [esi+0x4c]
  42635a:	call   0x42455a
  42635f:	push   DWORD PTR [esi+0x50]
  426362:	call   0x42455a
  426367:	push   DWORD PTR [esi+0x54]
  42636a:	call   0x42455a
  42636f:	push   DWORD PTR [esi+0x58]
  426372:	call   0x42455a
  426377:	push   DWORD PTR [esi+0x5c]
  42637a:	call   0x42455a
  42637f:	push   DWORD PTR [esi+0x60]
  426382:	call   0x42455a
  426387:	push   DWORD PTR [esi+0x64]
  42638a:	call   0x42455a
  42638f:	push   DWORD PTR [esi+0x68]
  426392:	call   0x42455a
  426397:	push   DWORD PTR [esi+0x6c]
  42639a:	call   0x42455a
  42639f:	push   DWORD PTR [esi+0x70]
  4263a2:	call   0x42455a
  4263a7:	push   DWORD PTR [esi+0x74]
  4263aa:	call   0x42455a
  4263af:	push   DWORD PTR [esi+0x78]
  4263b2:	call   0x42455a
  4263b7:	push   DWORD PTR [esi+0x7c]
  4263ba:	call   0x42455a
  4263bf:	add    esp,0x40
  4263c2:	push   DWORD PTR [esi+0x80]
  4263c8:	call   0x42455a
  4263cd:	push   DWORD PTR [esi+0x84]
  4263d3:	call   0x42455a
  4263d8:	push   DWORD PTR [esi+0x88]
  4263de:	call   0x42455a
  4263e3:	push   DWORD PTR [esi+0x8c]
  4263e9:	call   0x42455a
  4263ee:	push   DWORD PTR [esi+0x90]
  4263f4:	call   0x42455a
  4263f9:	push   DWORD PTR [esi+0x94]
  4263ff:	call   0x42455a
  426404:	push   DWORD PTR [esi+0x98]
  42640a:	call   0x42455a
  42640f:	push   DWORD PTR [esi+0x9c]
  426415:	call   0x42455a
  42641a:	push   DWORD PTR [esi+0xa0]
  426420:	call   0x42455a
  426425:	push   DWORD PTR [esi+0xa4]
  42642b:	call   0x42455a
  426430:	push   DWORD PTR [esi+0xa8]
  426436:	call   0x42455a
  42643b:	add    esp,0x2c
  42643e:	pop    esi
  42643f:	ret    
  426440:	push   esi
  426441:	mov    esi,DWORD PTR [esp+0x8]
  426445:	test   esi,esi
  426447:	je     0x42649d
  426449:	mov    eax,DWORD PTR [esi]
  42644b:	mov    ecx,DWORD PTR ds:0x465b64
  426451:	cmp    eax,DWORD PTR [ecx]
  426453:	je     0x426464
  426455:	cmp    eax,DWORD PTR ds:0x465b34
  42645b:	je     0x426464
  42645d:	push   eax
  42645e:	call   0x42455a
  426463:	pop    ecx
  426464:	mov    eax,DWORD PTR [esi+0x4]
  426467:	mov    ecx,DWORD PTR ds:0x465b64
  42646d:	cmp    eax,DWORD PTR [ecx+0x4]
  426470:	je     0x426481
  426472:	cmp    eax,DWORD PTR ds:0x465b38
  426478:	je     0x426481
  42647a:	push   eax
  42647b:	call   0x42455a
  426480:	pop    ecx
  426481:	mov    esi,DWORD PTR [esi+0x8]
  426484:	mov    eax,ds:0x465b64
  426489:	cmp    esi,DWORD PTR [eax+0x8]
  42648c:	je     0x42649d
  42648e:	cmp    esi,DWORD PTR ds:0x465b3c
  426494:	je     0x42649d
  426496:	push   esi
  426497:	call   0x42455a
  42649c:	pop    ecx
  42649d:	pop    esi
  42649e:	ret    
  42649f:	push   esi
  4264a0:	mov    esi,DWORD PTR [esp+0x8]
  4264a4:	test   esi,esi
  4264a6:	je     0x426576
  4264ac:	mov    eax,DWORD PTR [esi+0xc]
  4264af:	mov    ecx,DWORD PTR ds:0x465b64
  4264b5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264b8:	je     0x4264c9
  4264ba:	cmp    eax,DWORD PTR ds:0x465b40
  4264c0:	je     0x4264c9
  4264c2:	push   eax
  4264c3:	call   0x42455a
  4264c8:	pop    ecx
  4264c9:	mov    eax,DWORD PTR [esi+0x10]
  4264cc:	mov    ecx,DWORD PTR ds:0x465b64
  4264d2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264d5:	je     0x4264e6
  4264d7:	cmp    eax,DWORD PTR ds:0x465b44
  4264dd:	je     0x4264e6
  4264df:	push   eax
  4264e0:	call   0x42455a
  4264e5:	pop    ecx
  4264e6:	mov    eax,DWORD PTR [esi+0x14]
  4264e9:	mov    ecx,DWORD PTR ds:0x465b64
  4264ef:	cmp    eax,DWORD PTR [ecx+0x14]
  4264f2:	je     0x426503
  4264f4:	cmp    eax,DWORD PTR ds:0x465b48
  4264fa:	je     0x426503
  4264fc:	push   eax
  4264fd:	call   0x42455a
  426502:	pop    ecx
  426503:	mov    eax,DWORD PTR [esi+0x18]
  426506:	mov    ecx,DWORD PTR ds:0x465b64
  42650c:	cmp    eax,DWORD PTR [ecx+0x18]
  42650f:	je     0x426520
  426511:	cmp    eax,DWORD PTR ds:0x465b4c
  426517:	je     0x426520
  426519:	push   eax
  42651a:	call   0x42455a
  42651f:	pop    ecx
  426520:	mov    eax,DWORD PTR [esi+0x1c]
  426523:	mov    ecx,DWORD PTR ds:0x465b64
  426529:	cmp    eax,DWORD PTR [ecx+0x1c]
  42652c:	je     0x42653d
  42652e:	cmp    eax,DWORD PTR ds:0x465b50
  426534:	je     0x42653d
  426536:	push   eax
  426537:	call   0x42455a
  42653c:	pop    ecx
  42653d:	mov    eax,DWORD PTR [esi+0x20]
  426540:	mov    ecx,DWORD PTR ds:0x465b64
  426546:	cmp    eax,DWORD PTR [ecx+0x20]
  426549:	je     0x42655a
  42654b:	cmp    eax,DWORD PTR ds:0x465b54
  426551:	je     0x42655a
  426553:	push   eax
  426554:	call   0x42455a
  426559:	pop    ecx
  42655a:	mov    esi,DWORD PTR [esi+0x24]
  42655d:	mov    eax,ds:0x465b64
  426562:	cmp    esi,DWORD PTR [eax+0x24]
  426565:	je     0x426576
  426567:	cmp    esi,DWORD PTR ds:0x465b58
  42656d:	je     0x426576
  42656f:	push   esi
  426570:	call   0x42455a
  426575:	pop    ecx
  426576:	pop    esi
  426577:	ret    
  426578:	int3   
  426579:	int3   
  42657a:	int3   
  42657b:	int3   
  42657c:	int3   
  42657d:	int3   
  42657e:	int3   
  42657f:	int3   
  426580:	push   ebp
  426581:	mov    ebp,esp
  426583:	push   esi
  426584:	xor    eax,eax
  426586:	push   eax
  426587:	push   eax
  426588:	push   eax
  426589:	push   eax
  42658a:	push   eax
  42658b:	push   eax
  42658c:	push   eax
  42658d:	push   eax
  42658e:	mov    edx,DWORD PTR [ebp+0xc]
  426591:	lea    ecx,[ecx+0x0]
  426594:	mov    al,BYTE PTR [edx]
  426596:	or     al,al
  426598:	je     0x4265a3
  42659a:	add    edx,0x1
  42659d:	bts    DWORD PTR [esp],eax
  4265a1:	jmp    0x426594
  4265a3:	mov    esi,DWORD PTR [ebp+0x8]
  4265a6:	or     ecx,0xffffffff
  4265a9:	lea    ecx,[ecx+0x0]
  4265ac:	add    ecx,0x1
  4265af:	mov    al,BYTE PTR [esi]
  4265b1:	or     al,al
  4265b3:	je     0x4265be
  4265b5:	add    esi,0x1
  4265b8:	bt     DWORD PTR [esp],eax
  4265bc:	jae    0x4265ac
  4265be:	mov    eax,ecx
  4265c0:	add    esp,0x20
  4265c3:	pop    esi
  4265c4:	leave  
  4265c5:	ret    
  4265c6:	int3   
  4265c7:	int3   
  4265c8:	int3   
  4265c9:	int3   
  4265ca:	int3   
  4265cb:	int3   
  4265cc:	int3   
  4265cd:	int3   
  4265ce:	int3   
  4265cf:	int3   
  4265d0:	mov    edx,DWORD PTR [esp+0x4]
  4265d4:	mov    ecx,DWORD PTR [esp+0x8]
  4265d8:	test   edx,0x3
  4265de:	jne    0x42661c
  4265e0:	mov    eax,DWORD PTR [edx]
  4265e2:	cmp    al,BYTE PTR [ecx]
  4265e4:	jne    0x426614
  4265e6:	or     al,al
  4265e8:	je     0x426610
  4265ea:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ed:	jne    0x426614
  4265ef:	or     ah,ah
  4265f1:	je     0x426610
  4265f3:	shr    eax,0x10
  4265f6:	cmp    al,BYTE PTR [ecx+0x2]
  4265f9:	jne    0x426614
  4265fb:	or     al,al
  4265fd:	je     0x426610
  4265ff:	cmp    ah,BYTE PTR [ecx+0x3]
  426602:	jne    0x426614
  426604:	add    ecx,0x4
  426607:	add    edx,0x4
  42660a:	or     ah,ah
  42660c:	jne    0x4265e0
  42660e:	mov    edi,edi
  426610:	xor    eax,eax
  426612:	ret    
  426613:	nop
  426614:	sbb    eax,eax
  426616:	shl    eax,1
  426618:	add    eax,0x1
  42661b:	ret    
  42661c:	test   edx,0x1
  426622:	je     0x42663c
  426624:	mov    al,BYTE PTR [edx]
  426626:	add    edx,0x1
  426629:	cmp    al,BYTE PTR [ecx]
  42662b:	jne    0x426614
  42662d:	add    ecx,0x1
  426630:	or     al,al
  426632:	je     0x426610
  426634:	test   edx,0x2
  42663a:	je     0x4265e0
  42663c:	mov    ax,WORD PTR [edx]
  42663f:	add    edx,0x2
  426642:	cmp    al,BYTE PTR [ecx]
  426644:	jne    0x426614
  426646:	or     al,al
  426648:	je     0x426610
  42664a:	cmp    ah,BYTE PTR [ecx+0x1]
  42664d:	jne    0x426614
  42664f:	or     ah,ah
  426651:	je     0x426610
  426653:	add    ecx,0x2
  426656:	jmp    0x4265e0
  426658:	int3   
  426659:	int3   
  42665a:	int3   
  42665b:	int3   
  42665c:	int3   
  42665d:	int3   
  42665e:	int3   
  42665f:	int3   
  426660:	mov    eax,DWORD PTR [esp+0xc]
  426664:	test   eax,eax
  426666:	je     0x4266b2
  426668:	mov    edx,DWORD PTR [esp+0x4]
  42666c:	push   esi
  42666d:	push   edi
  42666e:	mov    esi,edx
  426670:	mov    edi,DWORD PTR [esp+0x10]
  426674:	or     edx,edi
  426676:	and    edx,0x3
  426679:	je     0x4266b3
  42667b:	test   eax,0x1
  426680:	je     0x426693
  426682:	mov    cl,BYTE PTR [esi]
  426684:	cmp    cl,BYTE PTR [edi]
  426686:	jne    0x4266e0
  426688:	add    esi,0x1
  42668b:	add    edi,0x1
  42668e:	sub    eax,0x1
  426691:	je     0x4266b0
  426693:	mov    cl,BYTE PTR [esi]
  426695:	mov    dl,BYTE PTR [edi]
  426697:	cmp    cl,dl
  426699:	jne    0x4266e0
  42669b:	mov    cl,BYTE PTR [esi+0x1]
  42669e:	mov    dl,BYTE PTR [edi+0x1]
  4266a1:	cmp    cl,dl
  4266a3:	jne    0x4266e0
  4266a5:	add    edi,0x2
  4266a8:	add    esi,0x2
  4266ab:	sub    eax,0x2
  4266ae:	jne    0x426693
  4266b0:	pop    edi
  4266b1:	pop    esi
  4266b2:	ret    
  4266b3:	mov    ecx,eax
  4266b5:	and    eax,0x3
  4266b8:	shr    ecx,0x2
  4266bb:	je     0x4266e8
  4266bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	je     0x4266e8
  4266c1:	mov    ecx,DWORD PTR [esi-0x4]
  4266c4:	mov    edx,DWORD PTR [edi-0x4]
  4266c7:	cmp    cl,dl
  4266c9:	jne    0x4266db
  4266cb:	cmp    ch,dh
  4266cd:	jne    0x4266db
  4266cf:	shr    ecx,0x10
  4266d2:	shr    edx,0x10
  4266d5:	cmp    cl,dl
  4266d7:	jne    0x4266db
  4266d9:	cmp    ch,dh
  4266db:	mov    eax,0x0
  4266e0:	sbb    eax,eax
  4266e2:	pop    edi
  4266e3:	sbb    eax,0xffffffff
  4266e6:	pop    esi
  4266e7:	ret    
  4266e8:	test   eax,eax
  4266ea:	je     0x4266b0
  4266ec:	mov    edx,DWORD PTR [esi]
  4266ee:	mov    ecx,DWORD PTR [edi]
  4266f0:	cmp    dl,cl
  4266f2:	jne    0x4266db
  4266f4:	sub    eax,0x1
  4266f7:	je     0x426715
  4266f9:	cmp    dh,ch
  4266fb:	jne    0x4266db
  4266fd:	sub    eax,0x1
  426700:	je     0x426715
  426702:	and    ecx,0xff0000
  426708:	and    edx,0xff0000
  42670e:	cmp    edx,ecx
  426710:	jne    0x4266db
  426712:	sub    eax,0x1
  426715:	pop    edi
  426716:	pop    esi
  426717:	ret    
  426718:	int3   
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   ebp
  426721:	mov    ebp,esp
  426723:	push   edi
  426724:	push   esi
  426725:	push   ebx
  426726:	mov    ecx,DWORD PTR [ebp+0x10]
  426729:	jecxz  0x426752
  42672b:	mov    ebx,ecx
  42672d:	mov    edi,DWORD PTR [ebp+0x8]
  426730:	mov    esi,edi
  426732:	xor    eax,eax
  426734:	repnz scas al,BYTE PTR es:[edi]
  426736:	neg    ecx
  426738:	add    ecx,ebx
  42673a:	mov    edi,esi
  42673c:	mov    esi,DWORD PTR [ebp+0xc]
  42673f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426741:	mov    al,BYTE PTR [esi-0x1]
  426744:	xor    ecx,ecx
  426746:	cmp    al,BYTE PTR [edi-0x1]
  426749:	ja     0x426750
  42674b:	je     0x426752
  42674d:	sub    ecx,0x2
  426750:	not    ecx
  426752:	mov    eax,ecx
  426754:	pop    ebx
  426755:	pop    esi
  426756:	pop    edi
  426757:	leave  
  426758:	ret    
  426759:	int3   
  42675a:	int3   
  42675b:	int3   
  42675c:	int3   
  42675d:	int3   
  42675e:	int3   
  42675f:	int3   
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   esi
  426764:	xor    eax,eax
  426766:	push   eax
  426767:	push   eax
  426768:	push   eax
  426769:	push   eax
  42676a:	push   eax
  42676b:	push   eax
  42676c:	push   eax
  42676d:	push   eax
  42676e:	mov    edx,DWORD PTR [ebp+0xc]
  426771:	lea    ecx,[ecx+0x0]
  426774:	mov    al,BYTE PTR [edx]
  426776:	or     al,al
  426778:	je     0x426783
  42677a:	add    edx,0x1
  42677d:	bts    DWORD PTR [esp],eax
  426781:	jmp    0x426774
  426783:	mov    esi,DWORD PTR [ebp+0x8]
  426786:	mov    edi,edi
  426788:	mov    al,BYTE PTR [esi]
  42678a:	or     al,al
  42678c:	je     0x42679a
  42678e:	add    esi,0x1
  426791:	bt     DWORD PTR [esp],eax
  426795:	jae    0x426788
  426797:	lea    eax,[esi-0x1]
  42679a:	add    esp,0x20
  42679d:	pop    esi
  42679e:	leave  
  42679f:	ret    
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   ebx
  4267a4:	push   esi
  4267a5:	push   edi
  4267a6:	push   ebp
  4267a7:	push   0x0
  4267a9:	push   0x0
  4267ab:	push   0x4267b8
  4267b0:	push   DWORD PTR [ebp+0x8]
  4267b3:	call   0x42722e
  4267b8:	pop    ebp
  4267b9:	pop    edi
  4267ba:	pop    esi
  4267bb:	pop    ebx
  4267bc:	mov    esp,ebp
  4267be:	pop    ebp
  4267bf:	ret    
  4267c0:	mov    ecx,DWORD PTR [esp+0x4]
  4267c4:	test   DWORD PTR [ecx+0x4],0x6
  4267cb:	mov    eax,0x1
  4267d0:	je     0x4267e1
  4267d2:	mov    eax,DWORD PTR [esp+0x8]
  4267d6:	mov    edx,DWORD PTR [esp+0x10]
  4267da:	mov    DWORD PTR [edx],eax
  4267dc:	mov    eax,0x3
  4267e1:	ret    
  4267e2:	push   ebx
  4267e3:	push   esi
  4267e4:	push   edi
  4267e5:	mov    eax,DWORD PTR [esp+0x10]
  4267e9:	push   eax
  4267ea:	push   0xfffffffe
  4267ec:	push   0x4267c0
  4267f1:	push   DWORD PTR fs:0x0
  4267f8:	mov    DWORD PTR fs:0x0,esp
  4267ff:	mov    eax,DWORD PTR [esp+0x20]
  426803:	mov    ebx,DWORD PTR [eax+0x8]
  426806:	mov    esi,DWORD PTR [eax+0xc]
  426809:	cmp    esi,0xffffffff
  42680c:	je     0x42683c
  42680e:	cmp    esi,DWORD PTR [esp+0x24]
  426812:	je     0x42683c
  426814:	lea    esi,[esi+esi*2]
  426817:	mov    ecx,DWORD PTR [ebx+esi*4]
  42681a:	mov    DWORD PTR [esp+0x8],ecx
  42681e:	mov    DWORD PTR [eax+0xc],ecx
  426821:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426826:	jne    0x42683a
  426828:	push   0x101
  42682d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426831:	call   0x426876
  426836:	call   DWORD PTR [ebx+esi*4+0x8]
  42683a:	jmp    0x4267ff
  42683c:	pop    DWORD PTR fs:0x0
  426843:	add    esp,0xc
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	ret    
  42684a:	xor    eax,eax
  42684c:	mov    ecx,DWORD PTR fs:0x0
  426853:	cmp    DWORD PTR [ecx+0x4],0x4267c0
  42685a:	jne    0x42686c
  42685c:	mov    edx,DWORD PTR [ecx+0xc]
  42685f:	mov    edx,DWORD PTR [edx+0xc]
  426862:	cmp    DWORD PTR [ecx+0x8],edx
  426865:	jne    0x42686c
  426867:	mov    eax,0x1
  42686c:	ret    
  42686d:	push   ebx
  42686e:	push   ecx
  42686f:	mov    ebx,0x465b7c
  426874:	jmp    0x426880
  426876:	push   ebx
  426877:	push   ecx
  426878:	mov    ebx,0x465b7c
  42687d:	mov    ecx,DWORD PTR [ebp+0x8]
  426880:	mov    DWORD PTR [ebx+0x8],ecx
  426883:	mov    DWORD PTR [ebx+0x4],eax
  426886:	mov    DWORD PTR [ebx+0xc],ebp
  426889:	pop    ecx
  42688a:	pop    ebx
  42688b:	ret    0x4
  42688e:	int3   
  42688f:	int3   
  426890:	push   ebp
  426891:	mov    ebp,esp
  426893:	push   edi
  426894:	push   esi
  426895:	mov    esi,DWORD PTR [ebp+0xc]
  426898:	mov    ecx,DWORD PTR [ebp+0x10]
  42689b:	mov    edi,DWORD PTR [ebp+0x8]
  42689e:	mov    eax,ecx
  4268a0:	mov    edx,ecx
  4268a2:	add    eax,esi
  4268a4:	cmp    edi,esi
  4268a6:	jbe    0x4268b0
  4268a8:	cmp    edi,eax
  4268aa:	jb     0x426a2c
  4268b0:	test   edi,0x3
  4268b6:	jne    0x4268cc
  4268b8:	shr    ecx,0x2
  4268bb:	and    edx,0x3
  4268be:	cmp    ecx,0x8
  4268c1:	jb     0x4268ec
  4268c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c5:	jmp    DWORD PTR [edx*4+0x4269dc]
  4268cc:	mov    eax,edi
  4268ce:	mov    edx,0x3
  4268d3:	sub    ecx,0x4
  4268d6:	jb     0x4268e4
  4268d8:	and    eax,0x3
  4268db:	add    ecx,eax
  4268dd:	jmp    DWORD PTR [eax*4+0x4268f0]
  4268e4:	jmp    DWORD PTR [ecx*4+0x4269ec]
  4268eb:	nop
  4268ec:	jmp    DWORD PTR [ecx*4+0x426970]
  4268f3:	nop
  4268f4:	add    BYTE PTR [ecx+0x42],ch
  4268f7:	add    BYTE PTR [ecx+ebp*2],ch
  4268fa:	inc    edx
  4268fb:	add    BYTE PTR [eax+0x69],dl
  4268fe:	inc    edx
  4268ff:	add    BYTE PTR [ebx],ah
  426901:	ror    DWORD PTR [edx-0x75f877fa],1
  426907:	inc    esi
  426908:	add    DWORD PTR [eax+0x468a0147],ecx
  42690e:	add    al,cl
  426910:	jmp    0x289f117
  426915:	add    esi,0x3
  426918:	add    edi,0x3
  42691b:	cmp    ecx,0x8
  42691e:	jb     0x4268ec
  426920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	jmp    DWORD PTR [edx*4+0x4269dc]
  426929:	lea    ecx,[ecx+0x0]
  42692c:	and    edx,ecx
  42692e:	mov    al,BYTE PTR [esi]
  426930:	mov    BYTE PTR [edi],al
  426932:	mov    al,BYTE PTR [esi+0x1]
  426935:	shr    ecx,0x2
  426938:	mov    BYTE PTR [edi+0x1],al
  42693b:	add    esi,0x2
  42693e:	add    edi,0x2
  426941:	cmp    ecx,0x8
  426944:	jb     0x4268ec
  426946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426948:	jmp    DWORD PTR [edx*4+0x4269dc]
  42694f:	nop
  426950:	and    edx,ecx
  426952:	mov    al,BYTE PTR [esi]
  426954:	mov    BYTE PTR [edi],al
  426956:	add    esi,0x1
  426959:	shr    ecx,0x2
  42695c:	add    edi,0x1
  42695f:	cmp    ecx,0x8
  426962:	jb     0x4268ec
  426964:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	jmp    DWORD PTR [edx*4+0x4269dc]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	shr    DWORD PTR [ecx+0x42],cl
  426973:	add    al,al
  426975:	imul   eax,DWORD PTR [edx+0x0],0x4269b8
  42697c:	mov    al,0x69
  42697e:	inc    edx
  42697f:	add    BYTE PTR [eax-0x5fffbd97],ch
  426985:	imul   eax,DWORD PTR [edx+0x0],0x426998
  42698c:	nop
  42698d:	imul   eax,DWORD PTR [edx+0x0],0xe48e448b
  426994:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269c8:	lea    eax,[ecx*4+0x0]
  4269cf:	add    esi,eax
  4269d1:	add    edi,eax
  4269d3:	jmp    DWORD PTR [edx*4+0x4269dc]
  4269da:	mov    edi,edi
  4269dc:	in     al,dx
  4269dd:	imul   eax,DWORD PTR [edx+0x0],0x4269f4
  4269e4:	add    BYTE PTR [edx+0x42],ch
  4269e7:	add    BYTE PTR [edx+ebp*2],dl
  4269ea:	inc    edx
  4269eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269f1:	leave  
  4269f2:	ret    
  4269f3:	nop
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    eax,DWORD PTR [ebp+0x8]
  4269fb:	pop    esi
  4269fc:	pop    edi
  4269fd:	leave  
  4269fe:	ret    
  4269ff:	nop
  426a00:	mov    al,BYTE PTR [esi]
  426a02:	mov    BYTE PTR [edi],al
  426a04:	mov    al,BYTE PTR [esi+0x1]
  426a07:	mov    BYTE PTR [edi+0x1],al
  426a0a:	mov    eax,DWORD PTR [ebp+0x8]
  426a0d:	pop    esi
  426a0e:	pop    edi
  426a0f:	leave  
  426a10:	ret    
  426a11:	lea    ecx,[ecx+0x0]
  426a14:	mov    al,BYTE PTR [esi]
  426a16:	mov    BYTE PTR [edi],al
  426a18:	mov    al,BYTE PTR [esi+0x1]
  426a1b:	mov    BYTE PTR [edi+0x1],al
  426a1e:	mov    al,BYTE PTR [esi+0x2]
  426a21:	mov    BYTE PTR [edi+0x2],al
  426a24:	mov    eax,DWORD PTR [ebp+0x8]
  426a27:	pop    esi
  426a28:	pop    edi
  426a29:	leave  
  426a2a:	ret    
  426a2b:	nop
  426a2c:	lea    esi,[ecx+esi*1-0x4]
  426a30:	lea    edi,[ecx+edi*1-0x4]
  426a34:	test   edi,0x3
  426a3a:	jne    0x426a60
  426a3c:	shr    ecx,0x2
  426a3f:	and    edx,0x3
  426a42:	cmp    ecx,0x8
  426a45:	jb     0x426a54
  426a47:	std    
  426a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a4a:	cld    
  426a4b:	jmp    DWORD PTR [edx*4+0x426b78]
  426a52:	mov    edi,edi
  426a54:	neg    ecx
  426a56:	jmp    DWORD PTR [ecx*4+0x426b28]
  426a5d:	lea    ecx,[ecx+0x0]
  426a60:	mov    eax,edi
  426a62:	mov    edx,0x3
  426a67:	cmp    ecx,0x4
  426a6a:	jb     0x426a78
  426a6c:	and    eax,0x3
  426a6f:	sub    ecx,eax
  426a71:	jmp    DWORD PTR [eax*4+0x426a7c]
  426a78:	jmp    DWORD PTR [ecx*4+0x426b78]
  426a7f:	nop
  426a80:	mov    WORD PTR [edx+0x42],gs
  426a83:	add    BYTE PTR [eax-0x27ffbd96],dh
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a91:	mov    BYTE PTR [edi+0x3],al
  426a94:	sub    esi,0x1
  426a97:	shr    ecx,0x2
  426a9a:	sub    edi,0x1
  426a9d:	cmp    ecx,0x8
  426aa0:	jb     0x426a54
  426aa2:	std    
  426aa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	cld    
  426aa6:	jmp    DWORD PTR [edx*4+0x426b78]
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	and    edx,ecx
  426ab5:	mov    BYTE PTR [edi+0x3],al
  426ab8:	mov    al,BYTE PTR [esi+0x2]
  426abb:	shr    ecx,0x2
  426abe:	mov    BYTE PTR [edi+0x2],al
  426ac1:	sub    esi,0x2
  426ac4:	sub    edi,0x2
  426ac7:	cmp    ecx,0x8
  426aca:	jb     0x426a54
  426acc:	std    
  426acd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acf:	cld    
  426ad0:	jmp    DWORD PTR [edx*4+0x426b78]
  426ad7:	nop
  426ad8:	mov    al,BYTE PTR [esi+0x3]
  426adb:	and    edx,ecx
  426add:	mov    BYTE PTR [edi+0x3],al
  426ae0:	mov    al,BYTE PTR [esi+0x2]
  426ae3:	mov    BYTE PTR [edi+0x2],al
  426ae6:	mov    al,BYTE PTR [esi+0x1]
  426ae9:	shr    ecx,0x2
  426aec:	mov    BYTE PTR [edi+0x1],al
  426aef:	sub    esi,0x3
  426af2:	sub    edi,0x3
  426af5:	cmp    ecx,0x8
  426af8:	jb     0x426a54
  426afe:	std    
  426aff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b01:	cld    
  426b02:	jmp    DWORD PTR [edx*4+0x426b78]
  426b09:	lea    ecx,[ecx+0x0]
  426b0c:	sub    al,0x6b
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2],dh
  426b12:	inc    edx
  426b13:	add    BYTE PTR [ebx+ebp*2],bh
  426b16:	inc    edx
  426b17:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b1b:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b1f:	add    BYTE PTR [ebx+ebp*2+0x42],dl
  426b23:	add    BYTE PTR [ebx+ebp*2+0x42],bl
  426b27:	add    BYTE PTR [edi+0x6b],ch
  426b2a:	inc    edx
  426b2b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b31:	inc    esp
  426b32:	(bad)  
  426b33:	sbb    al,0x8b
  426b35:	inc    esp
  426b36:	mov    ds,WORD PTR [eax]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b50:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b54:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b58:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b60:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b64:	lea    eax,[ecx*4+0x0]
  426b6b:	add    esi,eax
  426b6d:	add    edi,eax
  426b6f:	jmp    DWORD PTR [edx*4+0x426b78]
  426b76:	mov    edi,edi
  426b78:	mov    BYTE PTR [ebx+0x42],ch
  426b7b:	add    BYTE PTR [eax-0x5fffbd95],dl
  426b81:	imul   eax,DWORD PTR [edx+0x0],0xffffffb4
  426b85:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b89:	inc    ebp
  426b8a:	or     BYTE PTR [esi+0x5f],bl
  426b8d:	leave  
  426b8e:	ret    
  426b8f:	nop
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    eax,DWORD PTR [ebp+0x8]
  426b99:	pop    esi
  426b9a:	pop    edi
  426b9b:	leave  
  426b9c:	ret    
  426b9d:	lea    ecx,[ecx+0x0]
  426ba0:	mov    al,BYTE PTR [esi+0x3]
  426ba3:	mov    BYTE PTR [edi+0x3],al
  426ba6:	mov    al,BYTE PTR [esi+0x2]
  426ba9:	mov    BYTE PTR [edi+0x2],al
  426bac:	mov    eax,DWORD PTR [ebp+0x8]
  426baf:	pop    esi
  426bb0:	pop    edi
  426bb1:	leave  
  426bb2:	ret    
  426bb3:	nop
  426bb4:	mov    al,BYTE PTR [esi+0x3]
  426bb7:	mov    BYTE PTR [edi+0x3],al
  426bba:	mov    al,BYTE PTR [esi+0x2]
  426bbd:	mov    BYTE PTR [edi+0x2],al
  426bc0:	mov    al,BYTE PTR [esi+0x1]
  426bc3:	mov    BYTE PTR [edi+0x1],al
  426bc6:	mov    eax,DWORD PTR [ebp+0x8]
  426bc9:	pop    esi
  426bca:	pop    edi
  426bcb:	leave  
  426bcc:	ret    
  426bcd:	push   ebp
  426bce:	mov    ebp,esp
  426bd0:	sub    esp,0xc
  426bd3:	mov    eax,ds:0x465660
  426bd8:	xor    eax,DWORD PTR [ebp+0x4]
  426bdb:	and    BYTE PTR [ebp-0x6],0x0
  426bdf:	push   0x6
  426be1:	mov    DWORD PTR [ebp-0x4],eax
  426be4:	lea    eax,[ebp-0xc]
  426be7:	push   eax
  426be8:	push   0x1004
  426bed:	push   DWORD PTR [ebp+0x8]
  426bf0:	call   DWORD PTR ds:0x428110
  426bf6:	test   eax,eax
  426bf8:	jne    0x426bff
  426bfa:	or     eax,0xffffffff
  426bfd:	jmp    0x426c09
  426bff:	lea    eax,[ebp-0xc]
  426c02:	push   eax
  426c03:	call   0x426f0e
  426c08:	pop    ecx
  426c09:	mov    ecx,DWORD PTR [ebp-0x4]
  426c0c:	xor    ecx,DWORD PTR [ebp+0x4]
  426c0f:	call   0x42401c
  426c14:	leave  
  426c15:	ret    
  426c16:	push   0x38
  426c18:	push   0x428ef8
  426c1d:	call   0x423950
  426c22:	mov    eax,ds:0x465660
  426c27:	xor    eax,DWORD PTR [ebp+0x4]
  426c2a:	mov    DWORD PTR [ebp-0x1c],eax
  426c2d:	xor    edi,edi
  426c2f:	mov    DWORD PTR [ebp-0x20],edi
  426c32:	mov    DWORD PTR [ebp-0x24],edi
  426c35:	mov    eax,DWORD PTR [ebp+0x14]
  426c38:	mov    ebx,DWORD PTR [eax]
  426c3a:	mov    DWORD PTR [ebp-0x28],ebx
  426c3d:	mov    DWORD PTR [ebp-0x2c],edi
  426c40:	mov    eax,DWORD PTR [ebp+0x8]
  426c43:	cmp    eax,DWORD PTR [ebp+0xc]
  426c46:	je     0x426dbf
  426c4c:	lea    ecx,[ebp-0x40]
  426c4f:	push   ecx
  426c50:	push   eax
  426c51:	mov    esi,DWORD PTR ds:0x4280dc
  426c57:	call   esi
  426c59:	test   eax,eax
  426c5b:	je     0x426c7d
  426c5d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c61:	jne    0x426c7d
  426c63:	lea    eax,[ebp-0x40]
  426c66:	push   eax
  426c67:	push   DWORD PTR [ebp+0xc]
  426c6a:	call   esi
  426c6c:	test   eax,eax
  426c6e:	je     0x426c7d
  426c70:	cmp    DWORD PTR [ebp-0x40],0x1
  426c74:	jne    0x426c7d
  426c76:	mov    DWORD PTR [ebp-0x2c],0x1
  426c7d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c80:	je     0x426c9c
  426c82:	cmp    ebx,0xffffffff
  426c85:	je     0x426c8b
  426c87:	mov    esi,ebx
  426c89:	jmp    0x426c97
  426c8b:	push   DWORD PTR [ebp+0x10]
  426c8e:	call   0x423f60
  426c93:	pop    ecx
  426c94:	mov    esi,eax
  426c96:	inc    esi
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	jmp    0x426c9f
  426c9c:	mov    esi,DWORD PTR [ebp-0x44]
  426c9f:	cmp    DWORD PTR [ebp-0x2c],edi
  426ca2:	jne    0x426cbe
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   ebx
  426ca7:	push   DWORD PTR [ebp+0x10]
  426caa:	push   0x1
  426cac:	push   DWORD PTR [ebp+0x8]
  426caf:	call   DWORD PTR ds:0x428100
  426cb5:	mov    esi,eax
  426cb7:	mov    DWORD PTR [ebp-0x44],esi
  426cba:	cmp    esi,edi
  426cbc:	je     0x426d16
  426cbe:	mov    DWORD PTR [ebp-0x4],edi
  426cc1:	lea    eax,[esi+esi*1]
  426cc4:	add    eax,0x3
  426cc7:	and    eax,0xfffffffc
  426cca:	call   0x4239a0
  426ccf:	mov    DWORD PTR [ebp-0x18],esp
  426cd2:	mov    ebx,esp
  426cd4:	mov    DWORD PTR [ebp-0x48],ebx
  426cd7:	lea    eax,[esi+esi*1]
  426cda:	push   eax
  426cdb:	push   edi
  426cdc:	push   ebx
  426cdd:	call   0x426250
  426ce2:	add    esp,0xc
  426ce5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426ce9:	jmp    0x426d02
  426ceb:	xor    eax,eax
  426ced:	inc    eax
  426cee:	ret    
  426cef:	mov    esp,DWORD PTR [ebp-0x18]
  426cf2:	call   0x426de5
  426cf7:	xor    edi,edi
  426cf9:	xor    ebx,ebx
  426cfb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cff:	mov    esi,DWORD PTR [ebp-0x44]
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d24
  426d06:	push   esi
  426d07:	push   0x2
  426d09:	call   0x424a68
  426d0e:	pop    ecx
  426d0f:	pop    ecx
  426d10:	mov    ebx,eax
  426d12:	cmp    ebx,edi
  426d14:	jne    0x426d1d
  426d16:	xor    eax,eax
  426d18:	jmp    0x426dd1
  426d1d:	mov    DWORD PTR [ebp-0x24],0x1
  426d24:	push   esi
  426d25:	push   ebx
  426d26:	push   DWORD PTR [ebp-0x28]
  426d29:	push   DWORD PTR [ebp+0x10]
  426d2c:	push   0x1
  426d2e:	push   DWORD PTR [ebp+0x8]
  426d31:	call   DWORD PTR ds:0x428100
  426d37:	test   eax,eax
  426d39:	je     0x426dc2
  426d3f:	cmp    DWORD PTR [ebp+0x18],edi
  426d42:	je     0x426d64
  426d44:	push   edi
  426d45:	push   edi
  426d46:	push   DWORD PTR [ebp+0x1c]
  426d49:	push   DWORD PTR [ebp+0x18]
  426d4c:	push   esi
  426d4d:	push   ebx
  426d4e:	push   edi
  426d4f:	push   DWORD PTR [ebp+0xc]
  426d52:	call   DWORD PTR ds:0x428090
  426d58:	test   eax,eax
  426d5a:	je     0x426dc2
  426d5c:	mov    eax,DWORD PTR [ebp+0x18]
  426d5f:	mov    DWORD PTR [ebp-0x20],eax
  426d62:	jmp    0x426dc2
  426d64:	cmp    DWORD PTR [ebp-0x2c],edi
  426d67:	jne    0x426d7f
  426d69:	push   edi
  426d6a:	push   edi
  426d6b:	push   edi
  426d6c:	push   edi
  426d6d:	push   esi
  426d6e:	push   ebx
  426d6f:	push   edi
  426d70:	push   DWORD PTR [ebp+0xc]
  426d73:	call   DWORD PTR ds:0x428090
  426d79:	mov    esi,eax
  426d7b:	cmp    esi,edi
  426d7d:	je     0x426dc2
  426d7f:	push   esi
  426d80:	push   0x1
  426d82:	call   0x424a68
  426d87:	pop    ecx
  426d88:	pop    ecx
  426d89:	mov    DWORD PTR [ebp-0x20],eax
  426d8c:	cmp    eax,edi
  426d8e:	je     0x426dc2
  426d90:	push   edi
  426d91:	push   edi
  426d92:	push   esi
  426d93:	push   eax
  426d94:	push   esi
  426d95:	push   ebx
  426d96:	push   edi
  426d97:	push   DWORD PTR [ebp+0xc]
  426d9a:	call   DWORD PTR ds:0x428090
  426da0:	cmp    eax,edi
  426da2:	jne    0x426db2
  426da4:	push   DWORD PTR [ebp-0x20]
  426da7:	call   0x42455a
  426dac:	pop    ecx
  426dad:	mov    DWORD PTR [ebp-0x20],edi
  426db0:	jmp    0x426dc2
  426db2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426db6:	je     0x426dc2
  426db8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dbb:	mov    DWORD PTR [ecx],eax
  426dbd:	jmp    0x426dc2
  426dbf:	mov    ebx,DWORD PTR [ebp-0x48]
  426dc2:	cmp    DWORD PTR [ebp-0x24],edi
  426dc5:	je     0x426dce
  426dc7:	push   ebx
  426dc8:	call   0x42455a
  426dcd:	pop    ecx
  426dce:	mov    eax,DWORD PTR [ebp-0x20]
  426dd1:	lea    esp,[ebp-0x54]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dd7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dda:	call   0x42401c
  426ddf:	call   0x42398b
  426de4:	ret    
  426de5:	push   ebp
  426de6:	mov    ebp,esp
  426de8:	sub    esp,0x48
  426deb:	push   ebx
  426dec:	push   esi
  426ded:	push   edi
  426dee:	push   0x4
  426df0:	pop    eax
  426df1:	call   0x4239a0
  426df6:	mov    ebx,esp
  426df8:	push   0x1c
  426dfa:	lea    eax,[ebp-0x24]
  426dfd:	push   eax
  426dfe:	push   ebx
  426dff:	call   DWORD PTR ds:0x428024
  426e05:	test   eax,eax
  426e07:	je     0x426e7a
  426e09:	mov    edi,DWORD PTR [ebp-0x20]
  426e0c:	lea    eax,[ebp-0x48]
  426e0f:	push   eax
  426e10:	call   DWORD PTR ds:0x428038
  426e16:	mov    eax,DWORD PTR [ebp-0x44]
  426e19:	lea    esi,[eax-0x1]
  426e1c:	not    esi
  426e1e:	and    esi,ebx
  426e20:	sub    esi,eax
  426e22:	mov    DWORD PTR [ebp-0x4],eax
  426e25:	mov    eax,ds:0x465d04
  426e2a:	mov    ecx,eax
  426e2c:	dec    ecx
  426e2d:	neg    ecx
  426e2f:	sbb    ecx,ecx
  426e31:	and    ecx,0xffff1000
  426e37:	add    ecx,0x11000
  426e3d:	add    ecx,edi
  426e3f:	cmp    esi,ecx
  426e41:	jb     0x426e7a
  426e43:	cmp    eax,0x1
  426e46:	je     0x426e92
  426e48:	mov    ebx,edi
  426e4a:	mov    edi,0x1000
  426e4f:	push   0x1c
  426e51:	lea    eax,[ebp-0x24]
  426e54:	push   eax
  426e55:	push   ebx
  426e56:	call   DWORD PTR ds:0x428024
  426e5c:	test   eax,eax
  426e5e:	je     0x426e7a
  426e60:	add    ebx,DWORD PTR [ebp-0x18]
  426e63:	test   DWORD PTR [ebp-0x14],edi
  426e66:	je     0x426e4f
  426e68:	test   BYTE PTR [ebp-0xf],0x1
  426e6c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e6f:	je     0x426e76
  426e71:	xor    eax,eax
  426e73:	inc    eax
  426e74:	jmp    0x426eae
  426e76:	cmp    esi,ebx
  426e78:	jae    0x426e7e
  426e7a:	xor    eax,eax
  426e7c:	jmp    0x426eae
  426e7e:	push   0x4
  426e80:	push   edi
  426e81:	push   DWORD PTR [ebp-0x4]
  426e84:	push   ebx
  426e85:	call   DWORD PTR ds:0x4280e4
  426e8b:	mov    eax,ds:0x465d04
  426e90:	jmp    0x426e94
  426e92:	mov    ebx,esi
  426e94:	dec    eax
  426e95:	neg    eax
  426e97:	sbb    eax,eax
  426e99:	and    eax,0x103
  426e9e:	lea    ecx,[ebp-0x8]
  426ea1:	push   ecx
  426ea2:	inc    eax
  426ea3:	push   eax
  426ea4:	push   DWORD PTR [ebp-0x4]
  426ea7:	push   ebx
  426ea8:	call   DWORD PTR ds:0x428054
  426eae:	lea    esp,[ebp-0x54]
  426eb1:	pop    edi
  426eb2:	pop    esi
  426eb3:	pop    ebx
  426eb4:	leave  
  426eb5:	ret    
  426eb6:	int3   
  426eb7:	int3   
  426eb8:	int3   
  426eb9:	int3   
  426eba:	int3   
  426ebb:	int3   
  426ebc:	int3   
  426ebd:	int3   
  426ebe:	int3   
  426ebf:	int3   
  426ec0:	push   ebp
  426ec1:	mov    ebp,esp
  426ec3:	push   edi
  426ec4:	push   esi
  426ec5:	push   ebx
  426ec6:	mov    esi,DWORD PTR [ebp+0xc]
  426ec9:	mov    edi,DWORD PTR [ebp+0x8]
  426ecc:	mov    al,0xff
  426ece:	mov    edi,edi
  426ed0:	or     al,al
  426ed2:	je     0x426f06
  426ed4:	mov    al,BYTE PTR [esi]
  426ed6:	add    esi,0x1
  426ed9:	mov    ah,BYTE PTR [edi]
  426edb:	add    edi,0x1
  426ede:	cmp    ah,al
  426ee0:	je     0x426ed0
  426ee2:	sub    al,0x41
  426ee4:	cmp    al,0x1a
  426ee6:	sbb    cl,cl
  426ee8:	and    cl,0x20
  426eeb:	add    al,cl
  426eed:	add    al,0x41
  426eef:	xchg   al,ah
  426ef1:	sub    al,0x41
  426ef3:	cmp    al,0x1a
  426ef5:	sbb    cl,cl
  426ef7:	and    cl,0x20
  426efa:	add    al,cl
  426efc:	add    al,0x41
  426efe:	cmp    al,ah
  426f00:	je     0x426ed0
  426f02:	sbb    al,al
  426f04:	sbb    al,0xff
  426f06:	movsx  eax,al
  426f09:	pop    ebx
  426f0a:	pop    esi
  426f0b:	pop    edi
  426f0c:	leave  
  426f0d:	ret    
  426f0e:	push   esi
  426f0f:	push   edi
  426f10:	call   0x423803
  426f15:	mov    edi,DWORD PTR [eax+0x64]
  426f18:	cmp    edi,DWORD PTR ds:0x4657bc
  426f1e:	je     0x426f27
  426f20:	call   0x424caf
  426f25:	mov    edi,eax
  426f27:	mov    esi,DWORD PTR [esp+0xc]
  426f2b:	cmp    DWORD PTR [edi+0x28],0x1
  426f2f:	movzx  eax,BYTE PTR [esi]
  426f32:	jle    0x426f42
  426f34:	push   0x8
  426f36:	push   eax
  426f37:	push   edi
  426f38:	call   0x426f96
  426f3d:	add    esp,0xc
  426f40:	jmp    0x426f4c
  426f42:	mov    ecx,DWORD PTR [edi+0x48]
  426f45:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f49:	and    eax,0x8
  426f4c:	test   eax,eax
  426f4e:	je     0x426f53
  426f50:	inc    esi
  426f51:	jmp    0x426f2b
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	cmp    ecx,0x2d
  426f5a:	mov    edx,ecx
  426f5c:	je     0x426f63
  426f5e:	cmp    ecx,0x2b
  426f61:	jne    0x426f67
  426f63:	movzx  ecx,BYTE PTR [esi]
  426f66:	inc    esi
  426f67:	xor    eax,eax
  426f69:	cmp    ecx,0x30
  426f6c:	jl     0x426f78
  426f6e:	cmp    ecx,0x39
  426f71:	jg     0x426f78
  426f73:	sub    ecx,0x30
  426f76:	jmp    0x426f7b
  426f78:	or     ecx,0xffffffff
  426f7b:	cmp    ecx,0xffffffff
  426f7e:	je     0x426f8c
  426f80:	lea    eax,[eax+eax*4]
  426f83:	lea    eax,[ecx+eax*2]
  426f86:	movzx  ecx,BYTE PTR [esi]
  426f89:	inc    esi
  426f8a:	jmp    0x426f69
  426f8c:	cmp    edx,0x2d
  426f8f:	pop    edi
  426f90:	pop    esi
  426f91:	jne    0x426f95
  426f93:	neg    eax
  426f95:	ret    
  426f96:	push   ebp
  426f97:	mov    ebp,esp
  426f99:	push   ecx
  426f9a:	mov    eax,DWORD PTR [ebp+0xc]
  426f9d:	lea    ecx,[eax+0x1]
  426fa0:	cmp    ecx,0x100
  426fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa9:	ja     0x426fb4
  426fab:	mov    ecx,DWORD PTR [ecx+0x48]
  426fae:	movzx  eax,WORD PTR [ecx+eax*2]
  426fb2:	jmp    0x427008
  426fb4:	push   esi
  426fb5:	mov    edx,eax
  426fb7:	sar    edx,0x8
  426fba:	push   edi
  426fbb:	mov    edi,DWORD PTR [ecx+0x48]
  426fbe:	movzx  esi,dl
  426fc1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fc6:	pop    edi
  426fc7:	pop    esi
  426fc8:	je     0x426fd9
  426fca:	and    BYTE PTR [ebp-0x2],0x0
  426fce:	push   0x2
  426fd0:	mov    BYTE PTR [ebp-0x3],al
  426fd3:	mov    BYTE PTR [ebp-0x4],dl
  426fd6:	pop    eax
  426fd7:	jmp    0x426fe3
  426fd9:	and    BYTE PTR [ebp-0x3],0x0
  426fdd:	mov    BYTE PTR [ebp-0x4],al
  426fe0:	xor    eax,eax
  426fe2:	inc    eax
  426fe3:	push   0x1
  426fe5:	push   DWORD PTR [ecx+0x14]
  426fe8:	push   DWORD PTR [ecx+0x4]
  426feb:	lea    ecx,[ebp+0xe]
  426fee:	push   ecx
  426fef:	push   eax
  426ff0:	lea    eax,[ebp-0x4]
  426ff3:	push   eax
  426ff4:	push   0x1
  426ff6:	call   0x426078
  426ffb:	add    esp,0x1c
  426ffe:	test   eax,eax
  427000:	jne    0x427004
  427002:	leave  
  427003:	ret    
  427004:	movzx  eax,WORD PTR [ebp+0xe]
  427008:	and    eax,DWORD PTR [ebp+0x10]
  42700b:	leave  
  42700c:	ret    
  42700d:	int3   
  42700e:	int3   
  42700f:	int3   
  427010:	mov    eax,DWORD PTR [esp+0x8]
  427014:	mov    ecx,DWORD PTR [esp+0x10]
  427018:	or     ecx,eax
  42701a:	mov    ecx,DWORD PTR [esp+0xc]
  42701e:	jne    0x427029
  427020:	mov    eax,DWORD PTR [esp+0x4]
  427024:	mul    ecx
  427026:	ret    0x10
  427029:	push   ebx
  42702a:	mul    ecx
  42702c:	mov    ebx,eax
  42702e:	mov    eax,DWORD PTR [esp+0x8]
  427032:	mul    DWORD PTR [esp+0x14]
  427036:	add    ebx,eax
  427038:	mov    eax,DWORD PTR [esp+0x8]
  42703c:	mul    ecx
  42703e:	add    edx,ebx
  427040:	pop    ebx
  427041:	ret    0x10
  427044:	int3   
  427045:	int3   
  427046:	int3   
  427047:	int3   
  427048:	int3   
  427049:	int3   
  42704a:	int3   
  42704b:	int3   
  42704c:	int3   
  42704d:	int3   
  42704e:	int3   
  42704f:	int3   
  427050:	push   ebp
  427051:	mov    ebp,esp
  427053:	push   edi
  427054:	push   esi
  427055:	push   ebx
  427056:	mov    ecx,DWORD PTR [ebp+0x10]
  427059:	or     ecx,ecx
  42705b:	je     0x4270aa
  42705d:	mov    esi,DWORD PTR [ebp+0x8]
  427060:	mov    edi,DWORD PTR [ebp+0xc]
  427063:	mov    bh,0x41
  427065:	mov    bl,0x5a
  427067:	mov    dh,0x20
  427069:	lea    ecx,[ecx+0x0]
  42706c:	mov    ah,BYTE PTR [esi]
  42706e:	or     ah,ah
  427070:	mov    al,BYTE PTR [edi]
  427072:	je     0x42709b
  427074:	or     al,al
  427076:	je     0x42709b
  427078:	add    esi,0x1
  42707b:	add    edi,0x1
  42707e:	cmp    ah,bh
  427080:	jb     0x427088
  427082:	cmp    ah,bl
  427084:	ja     0x427088
  427086:	add    ah,dh
  427088:	cmp    al,bh
  42708a:	jb     0x427092
  42708c:	cmp    al,bl
  42708e:	ja     0x427092
  427090:	add    al,dh
  427092:	cmp    ah,al
  427094:	jne    0x4270a1
  427096:	sub    ecx,0x1
  427099:	jne    0x42706c
  42709b:	xor    ecx,ecx
  42709d:	cmp    ah,al
  42709f:	je     0x4270aa
  4270a1:	mov    ecx,0xffffffff
  4270a6:	jb     0x4270aa
  4270a8:	neg    ecx
  4270aa:	mov    eax,ecx
  4270ac:	pop    ebx
  4270ad:	pop    esi
  4270ae:	pop    edi
  4270af:	leave  
  4270b0:	ret    
  4270b1:	int3   
  4270b2:	int3   
  4270b3:	int3   
  4270b4:	int3   
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	push   esi
  4270c1:	mov    eax,DWORD PTR [esp+0x14]
  4270c5:	or     eax,eax
  4270c7:	jne    0x4270f1
  4270c9:	mov    ecx,DWORD PTR [esp+0x10]
  4270cd:	mov    eax,DWORD PTR [esp+0xc]
  4270d1:	xor    edx,edx
  4270d3:	div    ecx
  4270d5:	mov    ebx,eax
  4270d7:	mov    eax,DWORD PTR [esp+0x8]
  4270db:	div    ecx
  4270dd:	mov    esi,eax
  4270df:	mov    eax,ebx
  4270e1:	mul    DWORD PTR [esp+0x10]
  4270e5:	mov    ecx,eax
  4270e7:	mov    eax,esi
  4270e9:	mul    DWORD PTR [esp+0x10]
  4270ed:	add    edx,ecx
  4270ef:	jmp    0x427138
  4270f1:	mov    ecx,eax
  4270f3:	mov    ebx,DWORD PTR [esp+0x10]
  4270f7:	mov    edx,DWORD PTR [esp+0xc]
  4270fb:	mov    eax,DWORD PTR [esp+0x8]
  4270ff:	shr    ecx,1
  427101:	rcr    ebx,1
  427103:	shr    edx,1
  427105:	rcr    eax,1
  427107:	or     ecx,ecx
  427109:	jne    0x4270ff
  42710b:	div    ebx
  42710d:	mov    esi,eax
  42710f:	mul    DWORD PTR [esp+0x14]
  427113:	mov    ecx,eax
  427115:	mov    eax,DWORD PTR [esp+0x10]
  427119:	mul    esi
  42711b:	add    edx,ecx
  42711d:	jb     0x42712d
  42711f:	cmp    edx,DWORD PTR [esp+0xc]
  427123:	ja     0x42712d
  427125:	jb     0x427136
  427127:	cmp    eax,DWORD PTR [esp+0x8]
  42712b:	jbe    0x427136
  42712d:	dec    esi
  42712e:	sub    eax,DWORD PTR [esp+0x10]
  427132:	sbb    edx,DWORD PTR [esp+0x14]
  427136:	xor    ebx,ebx
  427138:	sub    eax,DWORD PTR [esp+0x8]
  42713c:	sbb    edx,DWORD PTR [esp+0xc]
  427140:	neg    edx
  427142:	neg    eax
  427144:	sbb    edx,0x0
  427147:	mov    ecx,edx
  427149:	mov    edx,ebx
  42714b:	mov    ebx,ecx
  42714d:	mov    ecx,eax
  42714f:	mov    eax,esi
  427151:	pop    esi
  427152:	ret    0x10
  427155:	int3   
  427156:	int3   
  427157:	int3   
  427158:	int3   
  427159:	int3   
  42715a:	int3   
  42715b:	int3   
  42715c:	int3   
  42715d:	int3   
  42715e:	int3   
  42715f:	int3   
  427160:	lea    eax,[edx-0x1]
  427163:	pop    ebx
  427164:	ret    
  427165:	lea    esp,[esp+0x0]
  42716c:	lea    esp,[esp+0x0]
  427170:	xor    eax,eax
  427172:	mov    al,BYTE PTR [esp+0x8]
  427176:	push   ebx
  427177:	mov    ebx,eax
  427179:	shl    eax,0x8
  42717c:	mov    edx,DWORD PTR [esp+0x8]
  427180:	test   edx,0x3
  427186:	je     0x42719d
  427188:	mov    cl,BYTE PTR [edx]
  42718a:	add    edx,0x1
  42718d:	cmp    cl,bl
  42718f:	je     0x427160
  427191:	test   cl,cl
  427193:	je     0x4271e6
  427195:	test   edx,0x3
  42719b:	jne    0x427188
  42719d:	or     ebx,eax
  42719f:	push   edi
  4271a0:	mov    eax,ebx
  4271a2:	shl    ebx,0x10
  4271a5:	push   esi
  4271a6:	or     ebx,eax
  4271a8:	mov    ecx,DWORD PTR [edx]
  4271aa:	mov    edi,0x7efefeff
  4271af:	mov    eax,ecx
  4271b1:	mov    esi,edi
  4271b3:	xor    ecx,ebx
  4271b5:	add    esi,eax
  4271b7:	add    edi,ecx
  4271b9:	xor    ecx,0xffffffff
  4271bc:	xor    eax,0xffffffff
  4271bf:	xor    ecx,edi
  4271c1:	xor    eax,esi
  4271c3:	add    edx,0x4
  4271c6:	and    ecx,0x81010100
  4271cc:	jne    0x4271ea
  4271ce:	and    eax,0x81010100
  4271d3:	je     0x4271a8
  4271d5:	and    eax,0x1010100
  4271da:	jne    0x4271e4
  4271dc:	and    esi,0x80000000
  4271e2:	jne    0x4271a8
  4271e4:	pop    esi
  4271e5:	pop    edi
  4271e6:	pop    ebx
  4271e7:	xor    eax,eax
  4271e9:	ret    
  4271ea:	mov    eax,DWORD PTR [edx-0x4]
  4271ed:	cmp    al,bl
  4271ef:	je     0x427227
  4271f1:	test   al,al
  4271f3:	je     0x4271e4
  4271f5:	cmp    ah,bl
  4271f7:	je     0x427220
  4271f9:	test   ah,ah
  4271fb:	je     0x4271e4
  4271fd:	shr    eax,0x10
  427200:	cmp    al,bl
  427202:	je     0x427219
  427204:	test   al,al
  427206:	je     0x4271e4
  427208:	cmp    ah,bl
  42720a:	je     0x427212
  42720c:	test   ah,ah
  42720e:	je     0x4271e4
  427210:	jmp    0x4271a8
  427212:	pop    esi
  427213:	pop    edi
  427214:	lea    eax,[edx-0x1]
  427217:	pop    ebx
  427218:	ret    
  427219:	lea    eax,[edx-0x2]
  42721c:	pop    esi
  42721d:	pop    edi
  42721e:	pop    ebx
  42721f:	ret    
  427220:	lea    eax,[edx-0x3]
  427223:	pop    esi
  427224:	pop    edi
  427225:	pop    ebx
  427226:	ret    
  427227:	lea    eax,[edx-0x4]
  42722a:	pop    esi
  42722b:	pop    edi
  42722c:	pop    ebx
  42722d:	ret    
  42722e:	jmp    DWORD PTR ds:0x428058
